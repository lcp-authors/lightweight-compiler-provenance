
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

000013ec <_init>:
    13ec:	push	{r3, lr}
    13f0:	bl	16c8 <call_weak_fn>
    13f4:	pop	{r3, pc}

Disassembly of section .plt:

000013f8 <.plt>:
    13f8:	push	{lr}		; (str lr, [sp, #-4]!)
    13fc:	ldr	lr, [pc, #4]	; 1408 <.plt+0x10>
    1400:	add	lr, pc, lr
    1404:	ldr	pc, [lr, #8]!
    1408:	.word	0x0005ebf8

0000140c <calloc@plt>:
    140c:	add	ip, pc, #0, 12
    1410:	add	ip, ip, #385024	; 0x5e000
    1414:	ldr	pc, [ip, #3064]!	; 0xbf8

00001418 <Mat_VarReadNext@plt>:
    1418:	add	ip, pc, #0, 12
    141c:	add	ip, ip, #385024	; 0x5e000
    1420:	ldr	pc, [ip, #3056]!	; 0xbf0

00001424 <strcmp@plt>:
    1424:	add	ip, pc, #0, 12
    1428:	add	ip, ip, #385024	; 0x5e000
    142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00001430 <__cxa_finalize@plt>:
    1430:	add	ip, pc, #0, 12
    1434:	add	ip, ip, #385024	; 0x5e000
    1438:	ldr	pc, [ip, #3040]!	; 0xbe0

0000143c <Mat_Open@plt>:
    143c:	add	ip, pc, #0, 12
    1440:	add	ip, ip, #385024	; 0x5e000
    1444:	ldr	pc, [ip, #3032]!	; 0xbd8

00001448 <printf@plt>:
    1448:	add	ip, pc, #0, 12
    144c:	add	ip, ip, #385024	; 0x5e000
    1450:	ldr	pc, [ip, #3024]!	; 0xbd0

00001454 <fopen@plt>:
    1454:	add	ip, pc, #0, 12
    1458:	add	ip, ip, #385024	; 0x5e000
    145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00001460 <inflate@plt>:
    1460:	add	ip, pc, #0, 12
    1464:	add	ip, ip, #385024	; 0x5e000
    1468:	ldr	pc, [ip, #3008]!	; 0xbc0

0000146c <fflush@plt>:
    146c:	add	ip, pc, #0, 12
    1470:	add	ip, ip, #385024	; 0x5e000
    1474:	ldr	pc, [ip, #3000]!	; 0xbb8

00001478 <free@plt>:
    1478:	add	ip, pc, #0, 12
    147c:	add	ip, ip, #385024	; 0x5e000
    1480:	ldr	pc, [ip, #2992]!	; 0xbb0

00001484 <Mat_Warning@plt>:
    1484:	add	ip, pc, #0, 12
    1488:	add	ip, ip, #385024	; 0x5e000
    148c:	ldr	pc, [ip, #2984]!	; 0xba8

00001490 <memcpy@plt>:
    1490:	add	ip, pc, #0, 12
    1494:	add	ip, ip, #385024	; 0x5e000
    1498:	ldr	pc, [ip, #2976]!	; 0xba0

0000149c <Mat_VarWrite@plt>:
    149c:	add	ip, pc, #0, 12
    14a0:	add	ip, ip, #385024	; 0x5e000
    14a4:	ldr	pc, [ip, #2968]!	; 0xb98

000014a8 <time@plt>:
    14a8:	add	ip, pc, #0, 12
    14ac:	add	ip, ip, #385024	; 0x5e000
    14b0:	ldr	pc, [ip, #2960]!	; 0xb90

000014b4 <ftell@plt>:
    14b4:	add	ip, pc, #0, 12
    14b8:	add	ip, ip, #385024	; 0x5e000
    14bc:	ldr	pc, [ip, #2952]!	; 0xb88

000014c0 <ctime@plt>:
    14c0:	add	ip, pc, #0, 12
    14c4:	add	ip, ip, #385024	; 0x5e000
    14c8:	ldr	pc, [ip, #2944]!	; 0xb80

000014cc <strdup@plt>:
    14cc:	add	ip, pc, #0, 12
    14d0:	add	ip, ip, #385024	; 0x5e000
    14d4:	ldr	pc, [ip, #2936]!	; 0xb78

000014d8 <realloc@plt>:
    14d8:	add	ip, pc, #0, 12
    14dc:	add	ip, ip, #385024	; 0x5e000
    14e0:	ldr	pc, [ip, #2928]!	; 0xb70

000014e4 <Mat_VarReadInfo@plt>:
    14e4:	add	ip, pc, #0, 12
    14e8:	add	ip, ip, #385024	; 0x5e000
    14ec:	ldr	pc, [ip, #2920]!	; 0xb68

000014f0 <zError@plt>:
    14f0:	add	ip, pc, #0, 12
    14f4:	add	ip, ip, #385024	; 0x5e000
    14f8:	ldr	pc, [ip, #2912]!	; 0xb60

000014fc <deflate@plt>:
    14fc:	add	ip, pc, #0, 12
    1500:	add	ip, ip, #385024	; 0x5e000
    1504:	ldr	pc, [ip, #2904]!	; 0xb58

00001508 <Mat_VarCalloc@plt>:
    1508:	add	ip, pc, #0, 12
    150c:	add	ip, ip, #385024	; 0x5e000
    1510:	ldr	pc, [ip, #2896]!	; 0xb50

00001514 <fwrite@plt>:
    1514:	add	ip, pc, #0, 12
    1518:	add	ip, ip, #385024	; 0x5e000
    151c:	ldr	pc, [ip, #2888]!	; 0xb48

00001520 <fread@plt>:
    1520:	add	ip, pc, #0, 12
    1524:	add	ip, ip, #385024	; 0x5e000
    1528:	ldr	pc, [ip, #2880]!	; 0xb40

0000152c <floor@plt>:
    152c:	add	ip, pc, #0, 12
    1530:	add	ip, ip, #385024	; 0x5e000
    1534:	ldr	pc, [ip, #2872]!	; 0xb38

00001538 <puts@plt>:
    1538:	add	ip, pc, #0, 12
    153c:	add	ip, ip, #385024	; 0x5e000
    1540:	ldr	pc, [ip, #2864]!	; 0xb30

00001544 <malloc@plt>:
    1544:	add	ip, pc, #0, 12
    1548:	add	ip, ip, #385024	; 0x5e000
    154c:	ldr	pc, [ip, #2856]!	; 0xb28

00001550 <deflateInit_@plt>:
    1550:	add	ip, pc, #0, 12
    1554:	add	ip, ip, #385024	; 0x5e000
    1558:	ldr	pc, [ip, #2848]!	; 0xb20

0000155c <mktemp@plt>:
    155c:	add	ip, pc, #0, 12
    1560:	add	ip, ip, #385024	; 0x5e000
    1564:	ldr	pc, [ip, #2840]!	; 0xb18

00001568 <__gmon_start__@plt>:
    1568:	add	ip, pc, #0, 12
    156c:	add	ip, ip, #385024	; 0x5e000
    1570:	ldr	pc, [ip, #2832]!	; 0xb10

00001574 <exit@plt>:
    1574:	add	ip, pc, #0, 12
    1578:	add	ip, ip, #385024	; 0x5e000
    157c:	ldr	pc, [ip, #2824]!	; 0xb08

00001580 <feof@plt>:
    1580:	add	ip, pc, #0, 12
    1584:	add	ip, ip, #385024	; 0x5e000
    1588:	ldr	pc, [ip, #2816]!	; 0xb00

0000158c <Mat_VarFree@plt>:
    158c:	add	ip, pc, #0, 12
    1590:	add	ip, ip, #385024	; 0x5e000
    1594:	ldr	pc, [ip, #2808]!	; 0xaf8

00001598 <Mat_SizeOf@plt>:
    1598:	add	ip, pc, #0, 12
    159c:	add	ip, ip, #385024	; 0x5e000
    15a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000015a4 <Mat_GetDir@plt>:
    15a4:	add	ip, pc, #0, 12
    15a8:	add	ip, ip, #385024	; 0x5e000
    15ac:	ldr	pc, [ip, #2792]!	; 0xae8

000015b0 <inflateEnd@plt>:
    15b0:	add	ip, pc, #0, 12
    15b4:	add	ip, ip, #385024	; 0x5e000
    15b8:	ldr	pc, [ip, #2784]!	; 0xae0

000015bc <inflateCopy@plt>:
    15bc:	add	ip, pc, #0, 12
    15c0:	add	ip, ip, #385024	; 0x5e000
    15c4:	ldr	pc, [ip, #2776]!	; 0xad8

000015c8 <strlen@plt>:
    15c8:	add	ip, pc, #0, 12
    15cc:	add	ip, ip, #385024	; 0x5e000
    15d0:	ldr	pc, [ip, #2768]!	; 0xad0

000015d4 <fprintf@plt>:
    15d4:	add	ip, pc, #0, 12
    15d8:	add	ip, ip, #385024	; 0x5e000
    15dc:	ldr	pc, [ip, #2760]!	; 0xac8

000015e0 <snprintf@plt>:
    15e0:	add	ip, pc, #0, 12
    15e4:	add	ip, ip, #385024	; 0x5e000
    15e8:	ldr	pc, [ip, #2752]!	; 0xac0

000015ec <Mat_Rewind@plt>:
    15ec:	add	ip, pc, #0, 12
    15f0:	add	ip, ip, #385024	; 0x5e000
    15f4:	ldr	pc, [ip, #2744]!	; 0xab8

000015f8 <memset@plt>:
    15f8:	add	ip, pc, #0, 12
    15fc:	add	ip, ip, #385024	; 0x5e000
    1600:	ldr	pc, [ip, #2736]!	; 0xab0

00001604 <putchar@plt>:
    1604:	add	ip, pc, #0, 12
    1608:	add	ip, ip, #385024	; 0x5e000
    160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00001610 <Mat_Close@plt>:
    1610:	add	ip, pc, #0, 12
    1614:	add	ip, ip, #385024	; 0x5e000
    1618:	ldr	pc, [ip, #2720]!	; 0xaa0

0000161c <Mat_Critical@plt>:
    161c:	add	ip, pc, #0, 12
    1620:	add	ip, ip, #385024	; 0x5e000
    1624:	ldr	pc, [ip, #2712]!	; 0xa98

00001628 <deflateEnd@plt>:
    1628:	add	ip, pc, #0, 12
    162c:	add	ip, ip, #385024	; 0x5e000
    1630:	ldr	pc, [ip, #2704]!	; 0xa90

00001634 <fclose@plt>:
    1634:	add	ip, pc, #0, 12
    1638:	add	ip, ip, #385024	; 0x5e000
    163c:	ldr	pc, [ip, #2696]!	; 0xa88

00001640 <inflateInit_@plt>:
    1640:	add	ip, pc, #0, 12
    1644:	add	ip, ip, #385024	; 0x5e000
    1648:	ldr	pc, [ip, #2688]!	; 0xa80

0000164c <Mat_CreateVer@plt>:
    164c:	add	ip, pc, #0, 12
    1650:	add	ip, ip, #385024	; 0x5e000
    1654:	ldr	pc, [ip, #2680]!	; 0xa78

00001658 <remove@plt>:
    1658:	add	ip, pc, #0, 12
    165c:	add	ip, ip, #385024	; 0x5e000
    1660:	ldr	pc, [ip, #2672]!	; 0xa70

00001664 <vsnprintf@plt>:
    1664:	add	ip, pc, #0, 12
    1668:	add	ip, ip, #385024	; 0x5e000
    166c:	ldr	pc, [ip, #2664]!	; 0xa68

00001670 <Mat_VarGetStructFieldByName@plt>:
    1670:	add	ip, pc, #0, 12
    1674:	add	ip, ip, #385024	; 0x5e000
    1678:	ldr	pc, [ip, #2656]!	; 0xa60

0000167c <Mat_SizeOfClass@plt>:
    167c:	add	ip, pc, #0, 12
    1680:	add	ip, ip, #385024	; 0x5e000
    1684:	ldr	pc, [ip, #2648]!	; 0xa58

00001688 <Mat_VarGetStructFieldByIndex@plt>:
    1688:	add	ip, pc, #0, 12
    168c:	add	ip, ip, #385024	; 0x5e000
    1690:	ldr	pc, [ip, #2640]!	; 0xa50

00001694 <fseek@plt>:
    1694:	add	ip, pc, #0, 12
    1698:	add	ip, ip, #385024	; 0x5e000
    169c:	ldr	pc, [ip, #2632]!	; 0xa48

000016a0 <abort@plt>:
    16a0:	add	ip, pc, #0, 12
    16a4:	add	ip, ip, #385024	; 0x5e000
    16a8:	ldr	pc, [ip, #2624]!	; 0xa40

000016ac <Mat_VarDuplicate@plt>:
    16ac:	add	ip, pc, #0, 12
    16b0:	add	ip, ip, #385024	; 0x5e000
    16b4:	ldr	pc, [ip, #2616]!	; 0xa38

000016b8 <Mat_VarReadNextInfo@plt>:
    16b8:	add	ip, pc, #0, 12
    16bc:	add	ip, ip, #385024	; 0x5e000
    16c0:	ldr	pc, [ip, #2608]!	; 0xa30

Disassembly of section .text:

000016c8 <call_weak_fn>:
    16c8:	ldr	r3, [pc, #20]	; 16e4 <call_weak_fn+0x1c>
    16cc:	ldr	r2, [pc, #20]	; 16e8 <call_weak_fn+0x20>
    16d0:	add	r3, pc, r3
    16d4:	ldr	r2, [r3, r2]
    16d8:	cmp	r2, #0
    16dc:	bxeq	lr
    16e0:	b	1568 <__gmon_start__@plt>
    16e4:	.word	0x0005e928
    16e8:	.word	0x00000100

000016ec <deregister_tm_clones>:
    16ec:	ldr	r0, [pc, #44]	; 1720 <deregister_tm_clones+0x34>
    16f0:	ldr	r3, [pc, #44]	; 1724 <deregister_tm_clones+0x38>
    16f4:	add	r0, pc, r0
    16f8:	add	r3, pc, r3
    16fc:	cmp	r3, r0
    1700:	ldr	r3, [pc, #32]	; 1728 <deregister_tm_clones+0x3c>
    1704:	add	r3, pc, r3
    1708:	bxeq	lr
    170c:	ldr	r2, [pc, #24]	; 172c <deregister_tm_clones+0x40>
    1710:	ldr	r3, [r3, r2]
    1714:	cmp	r3, #0
    1718:	bxeq	lr
    171c:	bx	r3
    1720:	.word	0x0005eac0
    1724:	.word	0x0005eabc
    1728:	.word	0x0005e8f4
    172c:	.word	0x000000f8

00001730 <register_tm_clones>:
    1730:	ldr	r0, [pc, #56]	; 1770 <register_tm_clones+0x40>
    1734:	ldr	r3, [pc, #56]	; 1774 <register_tm_clones+0x44>
    1738:	add	r0, pc, r0
    173c:	add	r3, pc, r3
    1740:	sub	r1, r3, r0
    1744:	ldr	r3, [pc, #44]	; 1778 <register_tm_clones+0x48>
    1748:	asr	r1, r1, #2
    174c:	add	r3, pc, r3
    1750:	add	r1, r1, r1, lsr #31
    1754:	asrs	r1, r1, #1
    1758:	bxeq	lr
    175c:	ldr	r2, [pc, #24]	; 177c <register_tm_clones+0x4c>
    1760:	ldr	r3, [r3, r2]
    1764:	cmp	r3, #0
    1768:	bxeq	lr
    176c:	bx	r3
    1770:	.word	0x0005ea7c
    1774:	.word	0x0005ea78
    1778:	.word	0x0005e8ac
    177c:	.word	0x00000108

00001780 <__do_global_dtors_aux>:
    1780:	ldr	r3, [pc, #76]	; 17d4 <__do_global_dtors_aux+0x54>
    1784:	ldr	r2, [pc, #76]	; 17d8 <__do_global_dtors_aux+0x58>
    1788:	add	r3, pc, r3
    178c:	add	r2, pc, r2
    1790:	ldrb	r3, [r3]
    1794:	cmp	r3, #0
    1798:	bxne	lr
    179c:	ldr	r3, [pc, #56]	; 17dc <__do_global_dtors_aux+0x5c>
    17a0:	push	{r4, lr}
    17a4:	ldr	r3, [r2, r3]
    17a8:	cmp	r3, #0
    17ac:	beq	17bc <__do_global_dtors_aux+0x3c>
    17b0:	ldr	r3, [pc, #40]	; 17e0 <__do_global_dtors_aux+0x60>
    17b4:	ldr	r0, [pc, r3]
    17b8:	bl	1430 <__cxa_finalize@plt>
    17bc:	bl	16ec <deregister_tm_clones>
    17c0:	ldr	r3, [pc, #28]	; 17e4 <__do_global_dtors_aux+0x64>
    17c4:	mov	r2, #1
    17c8:	add	r3, pc, r3
    17cc:	strb	r2, [r3]
    17d0:	pop	{r4, pc}
    17d4:	.word	0x0005ea2c
    17d8:	.word	0x0005e86c
    17dc:	.word	0x000000f4
    17e0:	.word	0x0005e950
    17e4:	.word	0x0005e9ec

000017e8 <frame_dummy>:
    17e8:	b	1730 <register_tm_clones>

000017ec <Mat_int64Swap>:
    17ec:	mov	ip, r0
    17f0:	ldr	r1, [r0]
    17f4:	mov	r2, #0
    17f8:	str	r4, [sp, #-8]!
    17fc:	mov	r3, r2
    1800:	ldr	r0, [r0, #4]
    1804:	str	lr, [sp, #4]
    1808:	sbfx	r4, r1, #8, #8
    180c:	bfi	r3, r1, #24, #8
    1810:	asr	lr, r0, #24
    1814:	bfi	r3, r4, #16, #8
    1818:	ldr	r4, [sp]
    181c:	add	sp, sp, #4
    1820:	bfi	r2, lr, #0, #8
    1824:	sbfx	lr, r0, #16, #8
    1828:	bfi	r2, lr, #8, #8
    182c:	sbfx	lr, r0, #8, #8
    1830:	bfi	r2, lr, #16, #8
    1834:	sbfx	lr, r1, #16, #8
    1838:	asr	r1, r1, #24
    183c:	bfi	r3, lr, #8, #8
    1840:	bfi	r2, r0, #24, #8
    1844:	bfi	r3, r1, #0, #8
    1848:	mov	r0, r2
    184c:	mov	r1, r3
    1850:	strd	r2, [ip]
    1854:	pop	{pc}		; (ldr pc, [sp], #4)

00001858 <Mat_uint64Swap>:
    1858:	mov	ip, r0
    185c:	ldr	r1, [r0]
    1860:	mov	r2, #0
    1864:	str	r4, [sp, #-8]!
    1868:	mov	r3, r2
    186c:	ldr	r0, [r0, #4]
    1870:	str	lr, [sp, #4]
    1874:	ubfx	r4, r1, #8, #8
    1878:	bfi	r3, r1, #24, #8
    187c:	lsr	lr, r0, #24
    1880:	bfi	r3, r4, #16, #8
    1884:	ldr	r4, [sp]
    1888:	add	sp, sp, #4
    188c:	bfi	r2, lr, #0, #8
    1890:	ubfx	lr, r0, #16, #8
    1894:	bfi	r2, lr, #8, #8
    1898:	ubfx	lr, r0, #8, #8
    189c:	bfi	r2, lr, #16, #8
    18a0:	ubfx	lr, r1, #16, #8
    18a4:	lsr	r1, r1, #24
    18a8:	bfi	r3, lr, #8, #8
    18ac:	bfi	r2, r0, #24, #8
    18b0:	bfi	r3, r1, #0, #8
    18b4:	mov	r0, r2
    18b8:	mov	r1, r3
    18bc:	strd	r2, [ip]
    18c0:	pop	{pc}		; (ldr pc, [sp], #4)

000018c4 <Mat_int32Swap>:
    18c4:	ldr	r2, [r0]
    18c8:	mov	r3, #0
    18cc:	mov	r1, r0
    18d0:	asr	ip, r2, #24
    18d4:	bfi	r3, r2, #24, #8
    18d8:	sbfx	r0, r2, #8, #8
    18dc:	bfi	r3, ip, #0, #8
    18e0:	sbfx	r2, r2, #16, #8
    18e4:	bfi	r3, r0, #16, #8
    18e8:	bfi	r3, r2, #8, #8
    18ec:	mov	r0, r3
    18f0:	str	r3, [r1]
    18f4:	bx	lr

000018f8 <Mat_uint32Swap>:
    18f8:	ldr	r2, [r0]
    18fc:	mov	r3, #0
    1900:	mov	r1, r0
    1904:	lsr	ip, r2, #24
    1908:	bfi	r3, r2, #24, #8
    190c:	ubfx	r0, r2, #8, #8
    1910:	bfi	r3, ip, #0, #8
    1914:	ubfx	r2, r2, #16, #8
    1918:	bfi	r3, r0, #16, #8
    191c:	bfi	r3, r2, #8, #8
    1920:	mov	r0, r3
    1924:	str	r3, [r1]
    1928:	bx	lr

0000192c <Mat_int16Swap>:
    192c:	ldrsh	r2, [r0]
    1930:	mov	r3, #0
    1934:	mov	r1, r0
    1938:	bfi	r3, r2, #8, #8
    193c:	asr	r2, r2, #8
    1940:	bfi	r3, r2, #0, #8
    1944:	sxth	r0, r3
    1948:	strh	r3, [r1]
    194c:	bx	lr

00001950 <Mat_uint16Swap>:
    1950:	ldrh	r2, [r0]
    1954:	mov	r3, #0
    1958:	mov	r1, r0
    195c:	bfi	r3, r2, #8, #8
    1960:	lsr	r2, r2, #8
    1964:	bfi	r3, r2, #0, #8
    1968:	uxth	r0, r3
    196c:	strh	r3, [r1]
    1970:	bx	lr

00001974 <Mat_floatSwap>:
    1974:	ldr	r2, [r0]
    1978:	mov	r3, #0
    197c:	lsr	ip, r2, #24
    1980:	bfi	r3, r2, #24, #8
    1984:	ubfx	r1, r2, #8, #8
    1988:	bfi	r3, ip, #0, #8
    198c:	ubfx	r2, r2, #16, #8
    1990:	bfi	r3, r1, #16, #8
    1994:	bfi	r3, r2, #8, #8
    1998:	vmov	s0, r3
    199c:	str	r3, [r0]
    19a0:	bx	lr

000019a4 <Mat_doubleSwap>:
    19a4:	strd	r4, [sp, #-12]!
    19a8:	mov	r2, #0
    19ac:	mov	r3, #0
    19b0:	ldrd	r4, [r0]
    19b4:	str	lr, [sp, #8]
    19b8:	lsr	lr, r5, #24
    19bc:	mov	r1, r4
    19c0:	bfi	r3, r4, #24, #8
    19c4:	bfi	r2, lr, #0, #8
    19c8:	ubfx	r4, r4, #8, #8
    19cc:	ubfx	lr, r5, #16, #8
    19d0:	bfi	r3, r4, #16, #8
    19d4:	bfi	r2, lr, #8, #8
    19d8:	ubfx	r4, r1, #16, #8
    19dc:	ubfx	lr, r5, #8, #8
    19e0:	bfi	r3, r4, #8, #8
    19e4:	lsr	r1, r1, #24
    19e8:	bfi	r2, lr, #16, #8
    19ec:	bfi	r3, r1, #0, #8
    19f0:	bfi	r2, r5, #24, #8
    19f4:	ldrd	r4, [sp]
    19f8:	add	sp, sp, #8
    19fc:	vmov	d7, r2, r3
    1a00:	vmov.f64	d0, d7
    1a04:	vstr	d7, [r0]
    1a08:	pop	{pc}		; (ldr pc, [sp], #4)

00001a0c <mat_logfunc>:
    1a0c:	ldr	ip, [pc, #400]	; 1ba4 <mat_logfunc+0x198>
    1a10:	str	r4, [sp, #-8]!
    1a14:	and	r4, r0, #2
    1a18:	add	ip, pc, ip
    1a1c:	ldr	r2, [ip]
    1a20:	str	lr, [sp, #4]
    1a24:	ldr	lr, [pc, #380]	; 1ba8 <mat_logfunc+0x19c>
    1a28:	cmp	r2, #0
    1a2c:	add	lr, pc, lr
    1a30:	beq	1a98 <mat_logfunc+0x8c>
    1a34:	cmp	r4, #0
    1a38:	bne	1a68 <mat_logfunc+0x5c>
    1a3c:	tst	r0, #1
    1a40:	bne	1b54 <mat_logfunc+0x148>
    1a44:	tst	r0, #4
    1a48:	bne	1aec <mat_logfunc+0xe0>
    1a4c:	tst	r0, #16
    1a50:	bne	1b0c <mat_logfunc+0x100>
    1a54:	tst	r0, #8
    1a58:	bne	1b2c <mat_logfunc+0x120>
    1a5c:	ldr	r4, [sp]
    1a60:	add	sp, sp, #4
    1a64:	pop	{pc}		; (ldr pc, [sp], #4)
    1a68:	ldr	r0, [pc, #316]	; 1bac <mat_logfunc+0x1a0>
    1a6c:	mov	r3, r1
    1a70:	ldr	r1, [pc, #312]	; 1bb0 <mat_logfunc+0x1a4>
    1a74:	ldr	r4, [lr, r0]
    1a78:	add	r1, pc, r1
    1a7c:	ldr	r0, [r4]
    1a80:	bl	15d4 <fprintf@plt>
    1a84:	ldr	r0, [r4]
    1a88:	ldr	r4, [sp]
    1a8c:	ldr	lr, [sp, #4]
    1a90:	add	sp, sp, #8
    1a94:	b	146c <fflush@plt>
    1a98:	cmp	r4, #0
    1a9c:	bne	1b40 <mat_logfunc+0x134>
    1aa0:	tst	r0, #1
    1aa4:	bne	1b7c <mat_logfunc+0x170>
    1aa8:	tst	r0, #4
    1aac:	bne	1acc <mat_logfunc+0xc0>
    1ab0:	tst	r0, #16
    1ab4:	beq	1a54 <mat_logfunc+0x48>
    1ab8:	mov	r2, r1
    1abc:	ldr	r1, [pc, #240]	; 1bb4 <mat_logfunc+0x1a8>
    1ac0:	ldr	r3, [pc, #228]	; 1bac <mat_logfunc+0x1a0>
    1ac4:	add	r1, pc, r1
    1ac8:	b	1adc <mat_logfunc+0xd0>
    1acc:	mov	r2, r1
    1ad0:	ldr	r1, [pc, #224]	; 1bb8 <mat_logfunc+0x1ac>
    1ad4:	ldr	r3, [pc, #208]	; 1bac <mat_logfunc+0x1a0>
    1ad8:	add	r1, pc, r1
    1adc:	ldr	r4, [lr, r3]
    1ae0:	ldr	r0, [r4]
    1ae4:	bl	15d4 <fprintf@plt>
    1ae8:	b	1a84 <mat_logfunc+0x78>
    1aec:	ldr	r0, [pc, #184]	; 1bac <mat_logfunc+0x1a0>
    1af0:	mov	r3, r1
    1af4:	ldr	r1, [pc, #192]	; 1bbc <mat_logfunc+0x1b0>
    1af8:	ldr	r4, [lr, r0]
    1afc:	add	r1, pc, r1
    1b00:	ldr	r0, [r4]
    1b04:	bl	15d4 <fprintf@plt>
    1b08:	b	1a84 <mat_logfunc+0x78>
    1b0c:	ldr	r0, [pc, #152]	; 1bac <mat_logfunc+0x1a0>
    1b10:	mov	r3, r1
    1b14:	ldr	r1, [pc, #164]	; 1bc0 <mat_logfunc+0x1b4>
    1b18:	ldr	r4, [lr, r0]
    1b1c:	add	r1, pc, r1
    1b20:	ldr	r0, [r4]
    1b24:	bl	15d4 <fprintf@plt>
    1b28:	b	1a84 <mat_logfunc+0x78>
    1b2c:	mov	r2, r1
    1b30:	ldr	r1, [pc, #140]	; 1bc4 <mat_logfunc+0x1b8>
    1b34:	ldr	r3, [pc, #140]	; 1bc8 <mat_logfunc+0x1bc>
    1b38:	add	r1, pc, r1
    1b3c:	b	1adc <mat_logfunc+0xd0>
    1b40:	mov	r2, r1
    1b44:	ldr	r1, [pc, #128]	; 1bcc <mat_logfunc+0x1c0>
    1b48:	ldr	r3, [pc, #92]	; 1bac <mat_logfunc+0x1a0>
    1b4c:	add	r1, pc, r1
    1b50:	b	1adc <mat_logfunc+0xd0>
    1b54:	ldr	r0, [pc, #80]	; 1bac <mat_logfunc+0x1a0>
    1b58:	mov	r3, r1
    1b5c:	ldr	r1, [pc, #108]	; 1bd0 <mat_logfunc+0x1c4>
    1b60:	ldr	r4, [lr, r0]
    1b64:	add	r1, pc, r1
    1b68:	ldr	r0, [r4]
    1b6c:	bl	15d4 <fprintf@plt>
    1b70:	ldr	r0, [r4]
    1b74:	bl	146c <fflush@plt>
    1b78:	bl	16a0 <abort@plt>
    1b7c:	ldr	r3, [pc, #40]	; 1bac <mat_logfunc+0x1a0>
    1b80:	mov	r2, r1
    1b84:	ldr	r1, [pc, #72]	; 1bd4 <mat_logfunc+0x1c8>
    1b88:	ldr	r4, [lr, r3]
    1b8c:	add	r1, pc, r1
    1b90:	ldr	r0, [r4]
    1b94:	bl	15d4 <fprintf@plt>
    1b98:	ldr	r0, [r4]
    1b9c:	bl	146c <fflush@plt>
    1ba0:	bl	16a0 <abort@plt>
    1ba4:	.word	0x0005e7a0
    1ba8:	.word	0x0005e5cc
    1bac:	.word	0x000000fc
    1bb0:	.word	0x0004ca40
    1bb4:	.word	0x0004ca30
    1bb8:	.word	0x0004ca10
    1bbc:	.word	0x0004c9c8
    1bc0:	.word	0x0004c9b4
    1bc4:	.word	0x0004d4c0
    1bc8:	.word	0x00000104
    1bcc:	.word	0x0004c990
    1bd0:	.word	0x0004c954
    1bd4:	.word	0x0004c950

00001bd8 <strdup_vprintf>:
    1bd8:	strd	r4, [sp, #-20]!	; 0xffffffec
    1bdc:	mov	r5, r1
    1be0:	mov	r1, #0
    1be4:	strd	r6, [sp, #8]
    1be8:	mov	r2, r0
    1bec:	mov	r3, r5
    1bf0:	str	lr, [sp, #16]
    1bf4:	sub	sp, sp, #12
    1bf8:	mov	r6, r0
    1bfc:	mov	r0, r1
    1c00:	str	r5, [sp, #4]
    1c04:	bl	1664 <vsnprintf@plt>
    1c08:	mov	r4, r0
    1c0c:	add	r0, r0, #2
    1c10:	bl	1544 <malloc@plt>
    1c14:	subs	r7, r0, #0
    1c18:	beq	1c30 <strdup_vprintf+0x58>
    1c1c:	add	r4, r4, #1
    1c20:	mov	r3, r5
    1c24:	mov	r2, r6
    1c28:	mov	r1, r4
    1c2c:	bl	1664 <vsnprintf@plt>
    1c30:	mov	r0, r7
    1c34:	add	sp, sp, #12
    1c38:	ldrd	r4, [sp]
    1c3c:	ldrd	r6, [sp, #8]
    1c40:	add	sp, sp, #16
    1c44:	pop	{pc}		; (ldr pc, [sp], #4)

00001c48 <mat_log>:
    1c48:	strd	r4, [sp, #-16]!
    1c4c:	ldr	r5, [pc, #100]	; 1cb8 <mat_log+0x70>
    1c50:	add	r5, pc, r5
    1c54:	ldr	r3, [r5, #4]
    1c58:	str	r6, [sp, #8]
    1c5c:	str	lr, [sp, #12]
    1c60:	cmp	r3, #0
    1c64:	beq	1ca8 <mat_log+0x60>
    1c68:	mov	r3, r1
    1c6c:	mov	r4, r0
    1c70:	mov	r1, r2
    1c74:	mov	r0, r3
    1c78:	bl	1bd8 <strdup_vprintf>
    1c7c:	mov	r6, r0
    1c80:	mov	r0, r4
    1c84:	ldr	r3, [r5, #4]
    1c88:	mov	r1, r6
    1c8c:	blx	r3
    1c90:	mov	r0, r6
    1c94:	ldrd	r4, [sp]
    1c98:	ldr	r6, [sp, #8]
    1c9c:	ldr	lr, [sp, #12]
    1ca0:	add	sp, sp, #16
    1ca4:	b	1478 <free@plt>
    1ca8:	ldrd	r4, [sp]
    1cac:	ldr	r6, [sp, #8]
    1cb0:	add	sp, sp, #12
    1cb4:	pop	{pc}		; (ldr pc, [sp], #4)
    1cb8:	.word	0x0005e568

00001cbc <strdup_printf>:
    1cbc:	push	{r0, r1, r2, r3}
    1cc0:	push	{lr}		; (str lr, [sp, #-4]!)
    1cc4:	sub	sp, sp, #12
    1cc8:	add	r3, sp, #20
    1ccc:	ldr	r0, [sp, #16]
    1cd0:	mov	r1, r3
    1cd4:	str	r3, [sp, #4]
    1cd8:	bl	1bd8 <strdup_vprintf>
    1cdc:	add	sp, sp, #12
    1ce0:	pop	{lr}		; (ldr lr, [sp], #4)
    1ce4:	add	sp, sp, #16
    1ce8:	bx	lr

00001cec <Mat_SetVerbose>:
    1cec:	ldr	r3, [pc, #12]	; 1d00 <Mat_SetVerbose+0x14>
    1cf0:	add	r3, pc, r3
    1cf4:	strd	r0, [r3, #8]
    1cf8:	mov	r0, #0
    1cfc:	bx	lr
    1d00:	.word	0x0005e4c8

00001d04 <Mat_SetDebug>:
    1d04:	ldr	r3, [pc, #12]	; 1d18 <Mat_SetDebug+0x14>
    1d08:	add	r3, pc, r3
    1d0c:	str	r0, [r3, #16]
    1d10:	mov	r0, #0
    1d14:	bx	lr
    1d18:	.word	0x0005e4b0

00001d1c <Mat_Message>:
    1d1c:	push	{r0, r1, r2, r3}
    1d20:	ldr	r3, [pc, #76]	; 1d74 <Mat_Message+0x58>
    1d24:	push	{lr}		; (str lr, [sp, #-4]!)
    1d28:	sub	sp, sp, #12
    1d2c:	add	r3, pc, r3
    1d30:	ldr	r2, [r3, #12]
    1d34:	cmp	r2, #0
    1d38:	bne	1d60 <Mat_Message+0x44>
    1d3c:	ldr	r3, [r3, #4]
    1d40:	cmp	r3, #0
    1d44:	beq	1d60 <Mat_Message+0x44>
    1d48:	add	r3, sp, #20
    1d4c:	mov	r0, #8
    1d50:	ldr	r1, [sp, #16]
    1d54:	mov	r2, r3
    1d58:	str	r3, [sp, #4]
    1d5c:	bl	1c48 <mat_log>
    1d60:	mov	r0, #0
    1d64:	add	sp, sp, #12
    1d68:	pop	{lr}		; (ldr lr, [sp], #4)
    1d6c:	add	sp, sp, #16
    1d70:	bx	lr
    1d74:	.word	0x0005e48c

00001d78 <Mat_DebugMessage>:
    1d78:	push	{r1, r2, r3}
    1d7c:	ldr	r3, [pc, #80]	; 1dd4 <Mat_DebugMessage+0x5c>
    1d80:	push	{lr}		; (str lr, [sp, #-4]!)
    1d84:	sub	sp, sp, #8
    1d88:	add	r3, pc, r3
    1d8c:	ldr	r2, [r3, #12]
    1d90:	cmp	r2, #0
    1d94:	bne	1da4 <Mat_DebugMessage+0x2c>
    1d98:	ldr	r3, [r3, #16]
    1d9c:	cmp	r3, r0
    1da0:	bge	1db8 <Mat_DebugMessage+0x40>
    1da4:	mov	r0, #0
    1da8:	add	sp, sp, #8
    1dac:	pop	{lr}		; (ldr lr, [sp], #4)
    1db0:	add	sp, sp, #12
    1db4:	bx	lr
    1db8:	add	r3, sp, #16
    1dbc:	mov	r0, #16
    1dc0:	ldr	r1, [sp, #12]
    1dc4:	mov	r2, r3
    1dc8:	str	r3, [sp, #4]
    1dcc:	bl	1c48 <mat_log>
    1dd0:	b	1da4 <Mat_DebugMessage+0x2c>
    1dd4:	.word	0x0005e430

00001dd8 <Mat_VerbMessage>:
    1dd8:	push	{r1, r2, r3}
    1ddc:	ldr	r3, [pc, #80]	; 1e34 <Mat_VerbMessage+0x5c>
    1de0:	push	{lr}		; (str lr, [sp, #-4]!)
    1de4:	sub	sp, sp, #8
    1de8:	add	r3, pc, r3
    1dec:	ldr	r2, [r3, #12]
    1df0:	cmp	r2, #0
    1df4:	bne	1e04 <Mat_VerbMessage+0x2c>
    1df8:	ldr	r3, [r3, #8]
    1dfc:	cmp	r3, r0
    1e00:	bge	1e18 <Mat_VerbMessage+0x40>
    1e04:	mov	r0, #0
    1e08:	add	sp, sp, #8
    1e0c:	pop	{lr}		; (ldr lr, [sp], #4)
    1e10:	add	sp, sp, #12
    1e14:	bx	lr
    1e18:	add	r3, sp, #16
    1e1c:	mov	r0, #8
    1e20:	ldr	r1, [sp, #12]
    1e24:	mov	r2, r3
    1e28:	str	r3, [sp, #4]
    1e2c:	bl	1c48 <mat_log>
    1e30:	b	1e04 <Mat_VerbMessage+0x2c>
    1e34:	.word	0x0005e3d0

00001e38 <Mat_Critical>:
    1e38:	push	{r0, r1, r2, r3}
    1e3c:	mov	r0, #2
    1e40:	push	{lr}		; (str lr, [sp, #-4]!)
    1e44:	sub	sp, sp, #12
    1e48:	ldr	r1, [sp, #16]
    1e4c:	add	r3, sp, #20
    1e50:	mov	r2, r3
    1e54:	str	r3, [sp, #4]
    1e58:	bl	1c48 <mat_log>
    1e5c:	add	sp, sp, #12
    1e60:	pop	{lr}		; (ldr lr, [sp], #4)
    1e64:	add	sp, sp, #16
    1e68:	bx	lr

00001e6c <Mat_Error>:
    1e6c:	push	{r0, r1, r2, r3}
    1e70:	mov	r0, #1
    1e74:	push	{lr}		; (str lr, [sp, #-4]!)
    1e78:	sub	sp, sp, #12
    1e7c:	add	r3, sp, #20
    1e80:	ldr	r1, [sp, #16]
    1e84:	mov	r2, r3
    1e88:	str	r3, [sp, #4]
    1e8c:	bl	1c48 <mat_log>
    1e90:	bl	16a0 <abort@plt>

00001e94 <Mat_Help>:
    1e94:	str	r4, [sp, #-8]!
    1e98:	mov	r4, r0
    1e9c:	ldr	r0, [r0]
    1ea0:	str	lr, [sp, #4]
    1ea4:	cmp	r0, #0
    1ea8:	beq	1ebc <Mat_Help+0x28>
    1eac:	bl	1538 <puts@plt>
    1eb0:	ldr	r0, [r4, #4]!
    1eb4:	cmp	r0, #0
    1eb8:	bne	1eac <Mat_Help+0x18>
    1ebc:	mov	r0, #0
    1ec0:	bl	1574 <exit@plt>

00001ec4 <Mat_LogClose>:
    1ec4:	ldr	r3, [pc, #16]	; 1edc <Mat_LogClose+0x18>
    1ec8:	mov	r2, #0
    1ecc:	mov	r0, #1
    1ed0:	add	r3, pc, r3
    1ed4:	str	r2, [r3, #4]
    1ed8:	bx	lr
    1edc:	.word	0x0005e2e8

00001ee0 <Mat_LogInit>:
    1ee0:	ldr	r3, [pc, #32]	; 1f08 <Mat_LogInit+0x28>
    1ee4:	mov	r1, #0
    1ee8:	mov	r0, r1
    1eec:	ldr	r2, [pc, #24]	; 1f0c <Mat_LogInit+0x2c>
    1ef0:	add	r3, pc, r3
    1ef4:	add	r2, pc, r2
    1ef8:	str	r2, [r3, #4]
    1efc:	str	r1, [r3, #8]
    1f00:	str	r1, [r3, #12]
    1f04:	bx	lr
    1f08:	.word	0x0005e2c8
    1f0c:	.word	0xfffffb10

00001f10 <Mat_LogInitFunc>:
    1f10:	ldr	r3, [pc, #24]	; 1f30 <Mat_LogInitFunc+0x20>
    1f14:	mov	r2, #0
    1f18:	add	r3, pc, r3
    1f1c:	strd	r0, [r3]
    1f20:	mov	r0, r2
    1f24:	str	r2, [r3, #8]
    1f28:	str	r2, [r3, #12]
    1f2c:	bx	lr
    1f30:	.word	0x0005e2a0

00001f34 <Mat_Warning>:
    1f34:	push	{r0, r1, r2, r3}
    1f38:	mov	r0, #4
    1f3c:	push	{lr}		; (str lr, [sp, #-4]!)
    1f40:	sub	sp, sp, #12
    1f44:	ldr	r1, [sp, #16]
    1f48:	add	r3, sp, #20
    1f4c:	mov	r2, r3
    1f50:	str	r3, [sp, #4]
    1f54:	bl	1c48 <mat_log>
    1f58:	add	sp, sp, #12
    1f5c:	pop	{lr}		; (ldr lr, [sp], #4)
    1f60:	add	sp, sp, #16
    1f64:	bx	lr

00001f68 <Mat_SizeOf>:
    1f68:	sub	r0, r0, #1
    1f6c:	cmp	r0, #17
    1f70:	bhi	1f84 <Mat_SizeOf+0x1c>
    1f74:	ldr	r3, [pc, #16]	; 1f8c <Mat_SizeOf+0x24>
    1f78:	add	r3, pc, r3
    1f7c:	ldr	r0, [r3, r0, lsl #2]
    1f80:	bx	lr
    1f84:	mov	r0, #0
    1f88:	bx	lr
    1f8c:	.word	0x0004c4f8

00001f90 <InflateSkip>:
    1f90:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1f94:	strd	r6, [sp, #8]
    1f98:	subs	r7, r2, #0
    1f9c:	strd	r8, [sp, #16]
    1fa0:	movle	r8, #0
    1fa4:	strd	sl, [sp, #24]
    1fa8:	str	lr, [sp, #32]
    1fac:	sub	sp, sp, #1024	; 0x400
    1fb0:	sub	sp, sp, #4
    1fb4:	ble	20b8 <InflateSkip+0x128>
    1fb8:	ldr	r3, [r1, #4]
    1fbc:	cmp	r7, #512	; 0x200
    1fc0:	mov	r4, r1
    1fc4:	movlt	r5, r7
    1fc8:	movge	r5, #512	; 0x200
    1fcc:	mov	r9, r0
    1fd0:	cmp	r3, #0
    1fd4:	movne	r8, #0
    1fd8:	beq	20dc <InflateSkip+0x14c>
    1fdc:	add	sl, sp, #512	; 0x200
    1fe0:	mov	r1, #3
    1fe4:	mov	r0, r4
    1fe8:	str	sl, [r4, #12]
    1fec:	str	r5, [r4, #16]
    1ff0:	bl	1460 <inflate@plt>
    1ff4:	cmp	r0, #1
    1ff8:	mov	r6, r0
    1ffc:	beq	20b8 <InflateSkip+0x128>
    2000:	cmp	r0, #0
    2004:	bne	209c <InflateSkip+0x10c>
    2008:	ldr	r3, [r4, #16]
    200c:	cmp	r3, #0
    2010:	beq	2154 <InflateSkip+0x1c4>
    2014:	mov	fp, sp
    2018:	b	2064 <InflateSkip+0xd4>
    201c:	mov	r1, #3
    2020:	mov	r0, r4
    2024:	bl	1460 <inflate@plt>
    2028:	cmp	r0, #1
    202c:	beq	2124 <InflateSkip+0x194>
    2030:	cmp	r0, #0
    2034:	bne	2108 <InflateSkip+0x178>
    2038:	ldr	r3, [r4, #16]
    203c:	cmp	r3, #0
    2040:	bne	205c <InflateSkip+0xcc>
    2044:	add	r6, r6, r5
    2048:	str	sl, [r4, #12]
    204c:	sub	r5, r7, r6
    2050:	cmp	r5, #512	; 0x200
    2054:	movge	r5, #512	; 0x200
    2058:	str	r5, [r4, #16]
    205c:	cmp	r7, r6
    2060:	ble	2124 <InflateSkip+0x194>
    2064:	ldr	r3, [r4, #4]
    2068:	cmp	r3, #0
    206c:	bne	201c <InflateSkip+0x8c>
    2070:	mov	r2, r5
    2074:	mov	r1, #1
    2078:	ldr	r3, [r9]
    207c:	mov	r0, fp
    2080:	str	fp, [r4]
    2084:	bl	1520 <fread@plt>
    2088:	ldr	r3, [r4, #4]
    208c:	add	r0, r0, r3
    2090:	add	r8, r8, r0
    2094:	str	r0, [r4, #4]
    2098:	b	201c <InflateSkip+0x8c>
    209c:	cmp	r0, #2
    20a0:	mvneq	r0, #2
    20a4:	bl	14f0 <zError@plt>
    20a8:	mov	r1, r0
    20ac:	ldr	r0, [pc, #200]	; 217c <InflateSkip+0x1ec>
    20b0:	add	r0, pc, r0
    20b4:	bl	161c <Mat_Critical@plt>
    20b8:	mov	r0, r8
    20bc:	add	sp, sp, #1024	; 0x400
    20c0:	add	sp, sp, #4
    20c4:	ldrd	r4, [sp]
    20c8:	ldrd	r6, [sp, #8]
    20cc:	ldrd	r8, [sp, #16]
    20d0:	ldrd	sl, [sp, #24]
    20d4:	add	sp, sp, #32
    20d8:	pop	{pc}		; (ldr pc, [sp], #4)
    20dc:	mov	ip, sp
    20e0:	mov	r2, r5
    20e4:	ldr	r3, [r9]
    20e8:	mov	r0, ip
    20ec:	mov	r1, #1
    20f0:	str	ip, [r4]
    20f4:	bl	1520 <fread@plt>
    20f8:	ldr	r8, [r4, #4]
    20fc:	add	r8, r0, r8
    2100:	str	r8, [r4, #4]
    2104:	b	1fdc <InflateSkip+0x4c>
    2108:	cmp	r0, #2
    210c:	mvneq	r0, #2
    2110:	bl	14f0 <zError@plt>
    2114:	mov	r1, r0
    2118:	ldr	r0, [pc, #96]	; 2180 <InflateSkip+0x1f0>
    211c:	add	r0, pc, r0
    2120:	bl	161c <Mat_Critical@plt>
    2124:	ldr	r1, [r4, #4]
    2128:	cmp	r1, #0
    212c:	beq	20b8 <InflateSkip+0x128>
    2130:	mov	r2, #1
    2134:	rsb	r1, r1, #0
    2138:	ldr	r0, [r9]
    213c:	bl	1694 <fseek@plt>
    2140:	ldr	r3, [r4, #4]
    2144:	mov	r2, #0
    2148:	str	r2, [r4, #4]
    214c:	sub	r8, r8, r3
    2150:	b	20b8 <InflateSkip+0x128>
    2154:	sub	r3, r7, r5
    2158:	str	sl, [r4, #12]
    215c:	cmp	r3, #512	; 0x200
    2160:	movge	r3, #512	; 0x200
    2164:	cmp	r7, r5
    2168:	str	r3, [r4, #16]
    216c:	ble	2124 <InflateSkip+0x194>
    2170:	mov	r6, r5
    2174:	mov	r5, r3
    2178:	b	2014 <InflateSkip+0x84>
    217c:	.word	0x0004c450
    2180:	.word	0x0004c3e4

00002184 <InflateSkip2>:
    2184:	ldr	r3, [r1, #52]	; 0x34
    2188:	strd	r4, [sp, #-36]!	; 0xffffffdc
    218c:	mov	r4, r1
    2190:	ldr	ip, [r3, #12]
    2194:	ldr	r3, [ip, #4]
    2198:	strd	r6, [sp, #8]
    219c:	mov	r6, r2
    21a0:	strd	r8, [sp, #16]
    21a4:	strd	sl, [sp, #24]
    21a8:	mov	fp, r0
    21ac:	str	lr, [sp, #32]
    21b0:	sub	sp, sp, #68	; 0x44
    21b4:	cmp	r3, #0
    21b8:	movne	r7, #0
    21bc:	beq	2300 <InflateSkip2+0x17c>
    21c0:	add	r9, sp, #32
    21c4:	mov	r8, #1
    21c8:	mov	r0, ip
    21cc:	mov	r1, #0
    21d0:	str	r9, [ip, #12]
    21d4:	str	r8, [ip, #16]
    21d8:	bl	1460 <inflate@plt>
    21dc:	subs	r5, r0, #0
    21e0:	bne	2280 <InflateSkip2+0xfc>
    21e4:	ldr	r3, [r4, #52]	; 0x34
    21e8:	ldr	r3, [r3, #12]
    21ec:	ldr	r2, [r3, #16]
    21f0:	cmp	r2, #0
    21f4:	streq	r9, [r3, #12]
    21f8:	streq	r8, [r3, #16]
    21fc:	cmp	r6, #0
    2200:	ble	22c8 <InflateSkip2+0x144>
    2204:	mov	r8, #1
    2208:	mov	sl, sp
    220c:	b	2244 <InflateSkip2+0xc0>
    2210:	mov	r1, #0
    2214:	mov	r0, r3
    2218:	bl	1460 <inflate@plt>
    221c:	cmp	r0, #0
    2220:	bne	232c <InflateSkip2+0x1a8>
    2224:	ldr	r3, [r4, #52]	; 0x34
    2228:	ldr	r3, [r3, #12]
    222c:	ldr	r2, [r3, #16]
    2230:	cmp	r2, #0
    2234:	streq	r9, [r3, #12]
    2238:	streq	r8, [r3, #16]
    223c:	cmp	r5, r6
    2240:	bge	22c8 <InflateSkip2+0x144>
    2244:	ldr	r2, [r3, #4]
    2248:	cmp	r2, #0
    224c:	bne	2210 <InflateSkip2+0x8c>
    2250:	mov	r2, #1
    2254:	mov	r0, sl
    2258:	str	sl, [r3]
    225c:	mov	r1, r2
    2260:	str	r8, [r3, #4]
    2264:	add	r5, r5, r2
    2268:	ldr	r3, [fp]
    226c:	bl	1520 <fread@plt>
    2270:	ldr	r3, [r4, #52]	; 0x34
    2274:	add	r7, r7, r0
    2278:	ldr	r3, [r3, #12]
    227c:	b	2210 <InflateSkip2+0x8c>
    2280:	cmp	r5, #2
    2284:	ldr	r4, [r4, #36]	; 0x24
    2288:	movne	r0, r5
    228c:	mvneq	r0, #2
    2290:	bl	14f0 <zError@plt>
    2294:	mov	r2, r0
    2298:	ldr	r0, [pc, #180]	; 2354 <InflateSkip2+0x1d0>
    229c:	mov	r1, r4
    22a0:	add	r0, pc, r0
    22a4:	bl	161c <Mat_Critical@plt>
    22a8:	mov	r0, r7
    22ac:	add	sp, sp, #68	; 0x44
    22b0:	ldrd	r4, [sp]
    22b4:	ldrd	r6, [sp, #8]
    22b8:	ldrd	r8, [sp, #16]
    22bc:	ldrd	sl, [sp, #24]
    22c0:	add	sp, sp, #32
    22c4:	pop	{pc}		; (ldr pc, [sp], #4)
    22c8:	ldr	r1, [r3, #4]
    22cc:	cmp	r1, #0
    22d0:	beq	22a8 <InflateSkip2+0x124>
    22d4:	rsb	r1, r1, #0
    22d8:	mov	r2, #1
    22dc:	ldr	r0, [fp]
    22e0:	bl	1694 <fseek@plt>
    22e4:	ldr	r3, [r4, #52]	; 0x34
    22e8:	mov	r1, #0
    22ec:	ldr	r3, [r3, #12]
    22f0:	ldr	r2, [r3, #4]
    22f4:	str	r1, [r3, #4]
    22f8:	sub	r7, r7, r2
    22fc:	b	22a8 <InflateSkip2+0x124>
    2300:	mov	lr, #1
    2304:	mov	r0, sp
    2308:	ldr	r3, [fp]
    230c:	mov	r2, lr
    2310:	mov	r1, lr
    2314:	stm	ip, {r0, lr}
    2318:	bl	1520 <fread@plt>
    231c:	ldr	r3, [r4, #52]	; 0x34
    2320:	mov	r7, r0
    2324:	ldr	ip, [r3, #12]
    2328:	b	21c0 <InflateSkip2+0x3c>
    232c:	cmp	r0, #2
    2330:	ldr	r4, [r4, #36]	; 0x24
    2334:	mvneq	r0, #2
    2338:	bl	14f0 <zError@plt>
    233c:	mov	r2, r0
    2340:	ldr	r0, [pc, #16]	; 2358 <InflateSkip2+0x1d4>
    2344:	mov	r1, r4
    2348:	add	r0, pc, r0
    234c:	bl	161c <Mat_Critical@plt>
    2350:	b	22a8 <InflateSkip2+0x124>
    2354:	.word	0x0004c284
    2358:	.word	0x0004c1dc

0000235c <InflateSkipData>:
    235c:	str	r4, [sp, #-8]!
    2360:	subs	r4, r3, #0
    2364:	movle	ip, #1
    2368:	movgt	ip, #0
    236c:	str	lr, [sp, #4]
    2370:	cmp	r1, #0
    2374:	moveq	ip, #1
    2378:	cmp	r0, #0
    237c:	moveq	ip, #1
    2380:	cmp	ip, #0
    2384:	beq	2398 <InflateSkipData+0x3c>
    2388:	ldr	r4, [sp]
    238c:	add	sp, sp, #4
    2390:	mov	r0, #0
    2394:	pop	{pc}		; (ldr pc, [sp], #4)
    2398:	sub	r2, r2, #1
    239c:	cmp	r2, #12
    23a0:	addls	pc, pc, r2, lsl #2
    23a4:	b	2388 <InflateSkipData+0x2c>
    23a8:	b	23f4 <InflateSkipData+0x98>
    23ac:	b	23f4 <InflateSkipData+0x98>
    23b0:	b	23fc <InflateSkipData+0xa0>
    23b4:	b	23fc <InflateSkipData+0xa0>
    23b8:	b	23dc <InflateSkipData+0x80>
    23bc:	b	23dc <InflateSkipData+0x80>
    23c0:	b	23dc <InflateSkipData+0x80>
    23c4:	b	2388 <InflateSkipData+0x2c>
    23c8:	b	2404 <InflateSkipData+0xa8>
    23cc:	b	2388 <InflateSkipData+0x2c>
    23d0:	b	2388 <InflateSkipData+0x2c>
    23d4:	b	2404 <InflateSkipData+0xa8>
    23d8:	b	2404 <InflateSkipData+0xa8>
    23dc:	lsl	r2, r4, #2
    23e0:	bl	1f90 <InflateSkip>
    23e4:	mov	r0, r4
    23e8:	ldr	r4, [sp]
    23ec:	add	sp, sp, #4
    23f0:	pop	{pc}		; (ldr pc, [sp], #4)
    23f4:	mov	r2, r4
    23f8:	b	23e0 <InflateSkipData+0x84>
    23fc:	lsl	r2, r4, #1
    2400:	b	23e0 <InflateSkipData+0x84>
    2404:	lsl	r2, r4, #3
    2408:	b	23e0 <InflateSkipData+0x84>

0000240c <InflateVarTag>:
    240c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2410:	subs	r4, r2, #0
    2414:	strd	r6, [sp, #8]
    2418:	moveq	r6, r4
    241c:	strd	r8, [sp, #16]
    2420:	str	lr, [sp, #24]
    2424:	sub	sp, sp, #36	; 0x24
    2428:	beq	24e0 <InflateVarTag+0xd4>
    242c:	ldr	r3, [r1, #52]	; 0x34
    2430:	mov	r5, r1
    2434:	mov	r8, r0
    2438:	ldr	ip, [r3, #12]
    243c:	ldr	r3, [ip, #4]
    2440:	cmp	r3, #0
    2444:	movne	r6, #0
    2448:	beq	251c <InflateVarTag+0x110>
    244c:	mov	r3, #8
    2450:	mov	r0, ip
    2454:	str	r4, [ip, #12]
    2458:	mov	r1, #0
    245c:	str	r3, [ip, #16]
    2460:	bl	1460 <inflate@plt>
    2464:	cmp	r0, #0
    2468:	moveq	r4, #1
    246c:	moveq	r7, sp
    2470:	moveq	r9, r4
    2474:	beq	24a8 <InflateVarTag+0x9c>
    2478:	b	24fc <InflateVarTag+0xf0>
    247c:	stm	r3, {r7, r9}
    2480:	ldr	r3, [r8]
    2484:	bl	1520 <fread@plt>
    2488:	ldr	r3, [r5, #52]	; 0x34
    248c:	mov	r4, r0
    2490:	mov	r1, #0
    2494:	add	r6, r6, r0
    2498:	ldr	r0, [r3, #12]
    249c:	bl	1460 <inflate@plt>
    24a0:	cmp	r0, #0
    24a4:	bne	2574 <InflateVarTag+0x168>
    24a8:	ldr	r3, [r5, #52]	; 0x34
    24ac:	mov	r2, #1
    24b0:	mov	r0, r7
    24b4:	mov	r1, r2
    24b8:	ldr	r3, [r3, #12]
    24bc:	ldr	ip, [r3, #4]
    24c0:	ldr	lr, [r3, #16]
    24c4:	cmp	lr, #0
    24c8:	beq	24d8 <InflateVarTag+0xcc>
    24cc:	cmp	ip, #0
    24d0:	cmpeq	r4, r2
    24d4:	beq	247c <InflateVarTag+0x70>
    24d8:	cmp	ip, #0
    24dc:	bne	2548 <InflateVarTag+0x13c>
    24e0:	mov	r0, r6
    24e4:	add	sp, sp, #36	; 0x24
    24e8:	ldrd	r4, [sp]
    24ec:	ldrd	r6, [sp, #8]
    24f0:	ldrd	r8, [sp, #16]
    24f4:	add	sp, sp, #24
    24f8:	pop	{pc}		; (ldr pc, [sp], #4)
    24fc:	cmp	r0, #2
    2500:	mvneq	r0, #2
    2504:	bl	14f0 <zError@plt>
    2508:	mov	r1, r0
    250c:	ldr	r0, [pc, #128]	; 2594 <InflateVarTag+0x188>
    2510:	add	r0, pc, r0
    2514:	bl	161c <Mat_Critical@plt>
    2518:	b	24e0 <InflateVarTag+0xd4>
    251c:	mov	lr, #1
    2520:	mov	r0, sp
    2524:	ldr	r3, [r8]
    2528:	mov	r2, lr
    252c:	mov	r1, lr
    2530:	stm	ip, {r0, lr}
    2534:	bl	1520 <fread@plt>
    2538:	ldr	r3, [r5, #52]	; 0x34
    253c:	mov	r6, r0
    2540:	ldr	ip, [r3, #12]
    2544:	b	244c <InflateVarTag+0x40>
    2548:	rsb	r1, ip, #0
    254c:	mov	r2, #1
    2550:	ldr	r0, [r8]
    2554:	bl	1694 <fseek@plt>
    2558:	ldr	r3, [r5, #52]	; 0x34
    255c:	mov	r1, #0
    2560:	ldr	r3, [r3, #12]
    2564:	ldr	r2, [r3, #4]
    2568:	str	r1, [r3, #4]
    256c:	sub	r6, r6, r2
    2570:	b	24e0 <InflateVarTag+0xd4>
    2574:	cmp	r0, #2
    2578:	mvneq	r0, #2
    257c:	bl	14f0 <zError@plt>
    2580:	mov	r1, r0
    2584:	ldr	r0, [pc, #12]	; 2598 <InflateVarTag+0x18c>
    2588:	add	r0, pc, r0
    258c:	bl	161c <Mat_Critical@plt>
    2590:	b	24e0 <InflateVarTag+0xd4>
    2594:	.word	0x0004c03c
    2598:	.word	0x0004bfc4

0000259c <InflateArrayFlags>:
    259c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    25a0:	subs	r4, r2, #0
    25a4:	strd	r6, [sp, #8]
    25a8:	moveq	r6, r4
    25ac:	strd	r8, [sp, #16]
    25b0:	str	lr, [sp, #24]
    25b4:	sub	sp, sp, #36	; 0x24
    25b8:	beq	2670 <InflateArrayFlags+0xd4>
    25bc:	ldr	r3, [r1, #52]	; 0x34
    25c0:	mov	r5, r1
    25c4:	mov	r8, r0
    25c8:	ldr	ip, [r3, #12]
    25cc:	ldr	r3, [ip, #4]
    25d0:	cmp	r3, #0
    25d4:	movne	r6, #0
    25d8:	beq	26ac <InflateArrayFlags+0x110>
    25dc:	mov	r3, #16
    25e0:	mov	r0, ip
    25e4:	str	r4, [ip, #12]
    25e8:	mov	r1, #0
    25ec:	str	r3, [ip, #16]
    25f0:	bl	1460 <inflate@plt>
    25f4:	cmp	r0, #0
    25f8:	moveq	r4, #1
    25fc:	moveq	r7, sp
    2600:	moveq	r9, r4
    2604:	beq	2638 <InflateArrayFlags+0x9c>
    2608:	b	268c <InflateArrayFlags+0xf0>
    260c:	stm	r3, {r7, r9}
    2610:	ldr	r3, [r8]
    2614:	bl	1520 <fread@plt>
    2618:	ldr	r3, [r5, #52]	; 0x34
    261c:	mov	r4, r0
    2620:	mov	r1, #0
    2624:	add	r6, r6, r0
    2628:	ldr	r0, [r3, #12]
    262c:	bl	1460 <inflate@plt>
    2630:	cmp	r0, #0
    2634:	bne	2704 <InflateArrayFlags+0x168>
    2638:	ldr	r3, [r5, #52]	; 0x34
    263c:	mov	r2, #1
    2640:	mov	r0, r7
    2644:	mov	r1, r2
    2648:	ldr	r3, [r3, #12]
    264c:	ldr	ip, [r3, #4]
    2650:	ldr	lr, [r3, #16]
    2654:	cmp	lr, #0
    2658:	beq	2668 <InflateArrayFlags+0xcc>
    265c:	cmp	ip, #0
    2660:	cmpeq	r4, r2
    2664:	beq	260c <InflateArrayFlags+0x70>
    2668:	cmp	ip, #0
    266c:	bne	26d8 <InflateArrayFlags+0x13c>
    2670:	mov	r0, r6
    2674:	add	sp, sp, #36	; 0x24
    2678:	ldrd	r4, [sp]
    267c:	ldrd	r6, [sp, #8]
    2680:	ldrd	r8, [sp, #16]
    2684:	add	sp, sp, #24
    2688:	pop	{pc}		; (ldr pc, [sp], #4)
    268c:	cmp	r0, #2
    2690:	mvneq	r0, #2
    2694:	bl	14f0 <zError@plt>
    2698:	mov	r1, r0
    269c:	ldr	r0, [pc, #128]	; 2724 <InflateArrayFlags+0x188>
    26a0:	add	r0, pc, r0
    26a4:	bl	161c <Mat_Critical@plt>
    26a8:	b	2670 <InflateArrayFlags+0xd4>
    26ac:	mov	lr, #1
    26b0:	mov	r0, sp
    26b4:	ldr	r3, [r8]
    26b8:	mov	r2, lr
    26bc:	mov	r1, lr
    26c0:	stm	ip, {r0, lr}
    26c4:	bl	1520 <fread@plt>
    26c8:	ldr	r3, [r5, #52]	; 0x34
    26cc:	mov	r6, r0
    26d0:	ldr	ip, [r3, #12]
    26d4:	b	25dc <InflateArrayFlags+0x40>
    26d8:	rsb	r1, ip, #0
    26dc:	mov	r2, #1
    26e0:	ldr	r0, [r8]
    26e4:	bl	1694 <fseek@plt>
    26e8:	ldr	r3, [r5, #52]	; 0x34
    26ec:	mov	r1, #0
    26f0:	ldr	r3, [r3, #12]
    26f4:	ldr	r2, [r3, #4]
    26f8:	str	r1, [r3, #4]
    26fc:	sub	r6, r6, r2
    2700:	b	2670 <InflateArrayFlags+0xd4>
    2704:	cmp	r0, #2
    2708:	mvneq	r0, #2
    270c:	bl	14f0 <zError@plt>
    2710:	mov	r1, r0
    2714:	ldr	r0, [pc, #12]	; 2728 <InflateArrayFlags+0x18c>
    2718:	add	r0, pc, r0
    271c:	bl	161c <Mat_Critical@plt>
    2720:	b	2670 <InflateArrayFlags+0xd4>
    2724:	.word	0x0004bed0
    2728:	.word	0x0004be58

0000272c <InflateRankDims>:
    272c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    2730:	strd	r6, [sp, #8]
    2734:	strd	r8, [sp, #16]
    2738:	subs	r9, r2, #0
    273c:	moveq	r5, r9
    2740:	strd	sl, [sp, #24]
    2744:	str	lr, [sp, #32]
    2748:	sub	sp, sp, #44	; 0x2c
    274c:	beq	28fc <InflateRankDims+0x1d0>
    2750:	mov	sl, r3
    2754:	ldr	r3, [r1, #52]	; 0x34
    2758:	mov	r4, r1
    275c:	mov	r7, r0
    2760:	ldr	ip, [r3, #12]
    2764:	ldr	r3, [ip, #4]
    2768:	cmp	r3, #0
    276c:	movne	r5, #0
    2770:	beq	293c <InflateRankDims+0x210>
    2774:	mov	r3, #8
    2778:	mov	r0, ip
    277c:	str	r9, [ip, #12]
    2780:	mov	r1, #0
    2784:	str	r3, [ip, #16]
    2788:	bl	1460 <inflate@plt>
    278c:	cmp	r0, #0
    2790:	moveq	fp, #1
    2794:	addeq	r6, sp, #8
    2798:	moveq	r8, fp
    279c:	beq	27d0 <InflateRankDims+0xa4>
    27a0:	b	291c <InflateRankDims+0x1f0>
    27a4:	ldr	r3, [r7]
    27a8:	stm	ip, {r6, r8}
    27ac:	bl	1520 <fread@plt>
    27b0:	ldr	r3, [r4, #52]	; 0x34
    27b4:	mov	fp, r0
    27b8:	mov	r1, #0
    27bc:	add	r5, r5, r0
    27c0:	ldr	r0, [r3, #12]
    27c4:	bl	1460 <inflate@plt>
    27c8:	cmp	r0, #0
    27cc:	bne	29e4 <InflateRankDims+0x2b8>
    27d0:	ldr	r3, [r4, #52]	; 0x34
    27d4:	mov	r2, #1
    27d8:	mov	r0, r6
    27dc:	mov	r1, r2
    27e0:	ldr	ip, [r3, #12]
    27e4:	ldr	r3, [ip, #16]
    27e8:	cmp	r3, #0
    27ec:	beq	2800 <InflateRankDims+0xd4>
    27f0:	ldr	r3, [ip, #4]
    27f4:	cmp	r3, #0
    27f8:	cmpeq	fp, r2
    27fc:	beq	27a4 <InflateRankDims+0x78>
    2800:	ldr	r1, [r7, #20]
    2804:	ldr	r3, [r9]
    2808:	ldr	r2, [r9, #4]
    280c:	cmp	r1, #0
    2810:	str	r3, [sp]
    2814:	str	r2, [sp, #4]
    2818:	bne	29cc <InflateRankDims+0x2a0>
    281c:	uxth	r3, r3
    2820:	cmp	r3, #5
    2824:	bne	29bc <InflateRankDims+0x290>
    2828:	ldr	r6, [sp, #4]
    282c:	ands	r3, r6, #7
    2830:	beq	2848 <InflateRankDims+0x11c>
    2834:	rsbs	r2, r6, #0
    2838:	and	r2, r2, #7
    283c:	rsbpl	r3, r2, #0
    2840:	rsb	r3, r3, #8
    2844:	add	r6, r6, r3
    2848:	ldr	r3, [r4, #52]	; 0x34
    284c:	ldr	r8, [r3, #12]
    2850:	ldr	r3, [r8, #4]
    2854:	cmp	r3, #0
    2858:	beq	2968 <InflateRankDims+0x23c>
    285c:	add	r3, r6, #2
    2860:	str	r6, [r8, #16]
    2864:	cmp	sl, r3, lsl #2
    2868:	bcc	2994 <InflateRankDims+0x268>
    286c:	add	r9, r9, #8
    2870:	str	r9, [r8, #12]
    2874:	mov	r0, r8
    2878:	mov	r1, #0
    287c:	bl	1460 <inflate@plt>
    2880:	cmp	r0, #0
    2884:	moveq	r6, #1
    2888:	addeq	r8, sp, #8
    288c:	moveq	r9, r6
    2890:	beq	28c4 <InflateRankDims+0x198>
    2894:	b	2a04 <InflateRankDims+0x2d8>
    2898:	strd	r8, [r3]
    289c:	ldr	r3, [r7]
    28a0:	bl	1520 <fread@plt>
    28a4:	ldr	r3, [r4, #52]	; 0x34
    28a8:	mov	r6, r0
    28ac:	mov	r1, #0
    28b0:	add	r5, r5, r0
    28b4:	ldr	r0, [r3, #12]
    28b8:	bl	1460 <inflate@plt>
    28bc:	cmp	r0, #0
    28c0:	bne	2a50 <InflateRankDims+0x324>
    28c4:	ldr	r3, [r4, #52]	; 0x34
    28c8:	mov	r2, #1
    28cc:	mov	r0, r8
    28d0:	mov	r1, r2
    28d4:	ldr	r3, [r3, #12]
    28d8:	ldr	ip, [r3, #4]
    28dc:	ldr	lr, [r3, #16]
    28e0:	cmp	lr, #0
    28e4:	beq	28f4 <InflateRankDims+0x1c8>
    28e8:	cmp	ip, #0
    28ec:	cmpeq	r6, r2
    28f0:	beq	2898 <InflateRankDims+0x16c>
    28f4:	cmp	ip, #0
    28f8:	bne	2a24 <InflateRankDims+0x2f8>
    28fc:	mov	r0, r5
    2900:	add	sp, sp, #44	; 0x2c
    2904:	ldrd	r4, [sp]
    2908:	ldrd	r6, [sp, #8]
    290c:	ldrd	r8, [sp, #16]
    2910:	ldrd	sl, [sp, #24]
    2914:	add	sp, sp, #32
    2918:	pop	{pc}		; (ldr pc, [sp], #4)
    291c:	cmp	r0, #2
    2920:	mvneq	r0, #2
    2924:	bl	14f0 <zError@plt>
    2928:	mov	r1, r0
    292c:	ldr	r0, [pc, #336]	; 2a84 <InflateRankDims+0x358>
    2930:	add	r0, pc, r0
    2934:	bl	161c <Mat_Critical@plt>
    2938:	b	28fc <InflateRankDims+0x1d0>
    293c:	mov	lr, #1
    2940:	add	r0, sp, #8
    2944:	ldr	r3, [r7]
    2948:	mov	r2, lr
    294c:	mov	r1, lr
    2950:	stm	ip, {r0, lr}
    2954:	bl	1520 <fread@plt>
    2958:	ldr	r3, [r4, #52]	; 0x34
    295c:	mov	r5, r0
    2960:	ldr	ip, [r3, #12]
    2964:	b	2774 <InflateRankDims+0x48>
    2968:	mov	ip, #1
    296c:	add	r0, sp, #8
    2970:	ldr	r3, [r7]
    2974:	mov	r2, ip
    2978:	mov	r1, ip
    297c:	stm	r8, {r0, ip}
    2980:	bl	1520 <fread@plt>
    2984:	ldr	r3, [r4, #52]	; 0x34
    2988:	add	r5, r5, r0
    298c:	ldr	r8, [r3, #12]
    2990:	b	285c <InflateRankDims+0x130>
    2994:	mov	r0, r6
    2998:	mov	r1, #4
    299c:	bl	140c <calloc@plt>
    29a0:	ldr	r2, [sp, #80]	; 0x50
    29a4:	cmp	r0, #0
    29a8:	mov	r3, r0
    29ac:	str	r0, [r2]
    29b0:	beq	2a70 <InflateRankDims+0x344>
    29b4:	str	r0, [r8, #12]
    29b8:	b	2874 <InflateRankDims+0x148>
    29bc:	ldr	r0, [pc, #196]	; 2a88 <InflateRankDims+0x35c>
    29c0:	add	r0, pc, r0
    29c4:	bl	161c <Mat_Critical@plt>
    29c8:	b	28fc <InflateRankDims+0x1d0>
    29cc:	mov	r0, sp
    29d0:	bl	18c4 <Mat_int32Swap>
    29d4:	add	r0, sp, #4
    29d8:	bl	18c4 <Mat_int32Swap>
    29dc:	ldr	r3, [sp]
    29e0:	b	281c <InflateRankDims+0xf0>
    29e4:	cmp	r0, #2
    29e8:	mvneq	r0, #2
    29ec:	bl	14f0 <zError@plt>
    29f0:	mov	r1, r0
    29f4:	ldr	r0, [pc, #144]	; 2a8c <InflateRankDims+0x360>
    29f8:	add	r0, pc, r0
    29fc:	bl	161c <Mat_Critical@plt>
    2a00:	b	28fc <InflateRankDims+0x1d0>
    2a04:	cmp	r0, #2
    2a08:	mvneq	r0, #2
    2a0c:	bl	14f0 <zError@plt>
    2a10:	mov	r1, r0
    2a14:	ldr	r0, [pc, #116]	; 2a90 <InflateRankDims+0x364>
    2a18:	add	r0, pc, r0
    2a1c:	bl	161c <Mat_Critical@plt>
    2a20:	b	28fc <InflateRankDims+0x1d0>
    2a24:	rsb	r1, ip, #0
    2a28:	mov	r2, #1
    2a2c:	ldr	r0, [r7]
    2a30:	bl	1694 <fseek@plt>
    2a34:	ldr	r3, [r4, #52]	; 0x34
    2a38:	mov	r1, #0
    2a3c:	ldr	r3, [r3, #12]
    2a40:	ldr	r2, [r3, #4]
    2a44:	str	r1, [r3, #4]
    2a48:	sub	r5, r5, r2
    2a4c:	b	28fc <InflateRankDims+0x1d0>
    2a50:	cmp	r0, #2
    2a54:	mvneq	r0, #2
    2a58:	bl	14f0 <zError@plt>
    2a5c:	mov	r1, r0
    2a60:	ldr	r0, [pc, #44]	; 2a94 <InflateRankDims+0x368>
    2a64:	add	r0, pc, r0
    2a68:	bl	161c <Mat_Critical@plt>
    2a6c:	b	28fc <InflateRankDims+0x1d0>
    2a70:	ldr	r0, [pc, #32]	; 2a98 <InflateRankDims+0x36c>
    2a74:	str	r3, [r9, #4]
    2a78:	add	r0, pc, r0
    2a7c:	bl	161c <Mat_Critical@plt>
    2a80:	b	28fc <InflateRankDims+0x1d0>
    2a84:	.word	0x0004bc68
    2a88:	.word	0x0004bc00
    2a8c:	.word	0x0004bba0
    2a90:	.word	0x0004bb80
    2a94:	.word	0x0004bb34
    2a98:	.word	0x0004bb88

00002a9c <InflateVarNameTag>:
    2a9c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2aa0:	subs	r4, r2, #0
    2aa4:	strd	r6, [sp, #8]
    2aa8:	moveq	r6, r4
    2aac:	strd	r8, [sp, #16]
    2ab0:	str	lr, [sp, #24]
    2ab4:	sub	sp, sp, #36	; 0x24
    2ab8:	beq	2b70 <InflateVarNameTag+0xd4>
    2abc:	ldr	r3, [r1, #52]	; 0x34
    2ac0:	mov	r5, r1
    2ac4:	mov	r8, r0
    2ac8:	ldr	ip, [r3, #12]
    2acc:	ldr	r3, [ip, #4]
    2ad0:	cmp	r3, #0
    2ad4:	movne	r6, #0
    2ad8:	beq	2bac <InflateVarNameTag+0x110>
    2adc:	mov	r3, #8
    2ae0:	mov	r0, ip
    2ae4:	str	r4, [ip, #12]
    2ae8:	mov	r1, #0
    2aec:	str	r3, [ip, #16]
    2af0:	bl	1460 <inflate@plt>
    2af4:	cmp	r0, #0
    2af8:	moveq	r4, #1
    2afc:	moveq	r7, sp
    2b00:	moveq	r9, r4
    2b04:	beq	2b38 <InflateVarNameTag+0x9c>
    2b08:	b	2b8c <InflateVarNameTag+0xf0>
    2b0c:	stm	r3, {r7, r9}
    2b10:	ldr	r3, [r8]
    2b14:	bl	1520 <fread@plt>
    2b18:	ldr	r3, [r5, #52]	; 0x34
    2b1c:	mov	r4, r0
    2b20:	mov	r1, #0
    2b24:	add	r6, r6, r0
    2b28:	ldr	r0, [r3, #12]
    2b2c:	bl	1460 <inflate@plt>
    2b30:	cmp	r0, #0
    2b34:	bne	2c04 <InflateVarNameTag+0x168>
    2b38:	ldr	r3, [r5, #52]	; 0x34
    2b3c:	mov	r2, #1
    2b40:	mov	r0, r7
    2b44:	mov	r1, r2
    2b48:	ldr	r3, [r3, #12]
    2b4c:	ldr	ip, [r3, #4]
    2b50:	ldr	lr, [r3, #16]
    2b54:	cmp	lr, #0
    2b58:	beq	2b68 <InflateVarNameTag+0xcc>
    2b5c:	cmp	ip, #0
    2b60:	cmpeq	r4, r2
    2b64:	beq	2b0c <InflateVarNameTag+0x70>
    2b68:	cmp	ip, #0
    2b6c:	bne	2bd8 <InflateVarNameTag+0x13c>
    2b70:	mov	r0, r6
    2b74:	add	sp, sp, #36	; 0x24
    2b78:	ldrd	r4, [sp]
    2b7c:	ldrd	r6, [sp, #8]
    2b80:	ldrd	r8, [sp, #16]
    2b84:	add	sp, sp, #24
    2b88:	pop	{pc}		; (ldr pc, [sp], #4)
    2b8c:	cmp	r0, #2
    2b90:	mvneq	r0, #2
    2b94:	bl	14f0 <zError@plt>
    2b98:	mov	r1, r0
    2b9c:	ldr	r0, [pc, #128]	; 2c24 <InflateVarNameTag+0x188>
    2ba0:	add	r0, pc, r0
    2ba4:	bl	161c <Mat_Critical@plt>
    2ba8:	b	2b70 <InflateVarNameTag+0xd4>
    2bac:	mov	lr, #1
    2bb0:	mov	r0, sp
    2bb4:	ldr	r3, [r8]
    2bb8:	mov	r2, lr
    2bbc:	mov	r1, lr
    2bc0:	stm	ip, {r0, lr}
    2bc4:	bl	1520 <fread@plt>
    2bc8:	ldr	r3, [r5, #52]	; 0x34
    2bcc:	mov	r6, r0
    2bd0:	ldr	ip, [r3, #12]
    2bd4:	b	2adc <InflateVarNameTag+0x40>
    2bd8:	rsb	r1, ip, #0
    2bdc:	mov	r2, #1
    2be0:	ldr	r0, [r8]
    2be4:	bl	1694 <fseek@plt>
    2be8:	ldr	r3, [r5, #52]	; 0x34
    2bec:	mov	r1, #0
    2bf0:	ldr	r3, [r3, #12]
    2bf4:	ldr	r2, [r3, #4]
    2bf8:	str	r1, [r3, #4]
    2bfc:	sub	r6, r6, r2
    2c00:	b	2b70 <InflateVarNameTag+0xd4>
    2c04:	cmp	r0, #2
    2c08:	mvneq	r0, #2
    2c0c:	bl	14f0 <zError@plt>
    2c10:	mov	r1, r0
    2c14:	ldr	r0, [pc, #12]	; 2c28 <InflateVarNameTag+0x18c>
    2c18:	add	r0, pc, r0
    2c1c:	bl	161c <Mat_Critical@plt>
    2c20:	b	2b70 <InflateVarNameTag+0xd4>
    2c24:	.word	0x0004ba84
    2c28:	.word	0x0004ba0c

00002c2c <InflateVarName>:
    2c2c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2c30:	subs	r4, r2, #0
    2c34:	strd	r6, [sp, #8]
    2c38:	moveq	r6, r4
    2c3c:	strd	r8, [sp, #16]
    2c40:	str	lr, [sp, #24]
    2c44:	sub	sp, sp, #36	; 0x24
    2c48:	beq	2d00 <InflateVarName+0xd4>
    2c4c:	mov	r7, r3
    2c50:	ldr	r3, [r1, #52]	; 0x34
    2c54:	mov	r5, r1
    2c58:	mov	r8, r0
    2c5c:	ldr	ip, [r3, #12]
    2c60:	ldr	r3, [ip, #4]
    2c64:	cmp	r3, #0
    2c68:	movne	r6, #0
    2c6c:	beq	2d3c <InflateVarName+0x110>
    2c70:	mov	r0, ip
    2c74:	mov	r1, #0
    2c78:	str	r4, [ip, #12]
    2c7c:	str	r7, [ip, #16]
    2c80:	bl	1460 <inflate@plt>
    2c84:	cmp	r0, #0
    2c88:	moveq	r4, #1
    2c8c:	moveq	r7, sp
    2c90:	moveq	r9, r4
    2c94:	beq	2cc8 <InflateVarName+0x9c>
    2c98:	b	2d1c <InflateVarName+0xf0>
    2c9c:	stm	r3, {r7, r9}
    2ca0:	ldr	r3, [r8]
    2ca4:	bl	1520 <fread@plt>
    2ca8:	ldr	r3, [r5, #52]	; 0x34
    2cac:	mov	r4, r0
    2cb0:	mov	r1, #0
    2cb4:	add	r6, r6, r0
    2cb8:	ldr	r0, [r3, #12]
    2cbc:	bl	1460 <inflate@plt>
    2cc0:	cmp	r0, #0
    2cc4:	bne	2d94 <InflateVarName+0x168>
    2cc8:	ldr	r3, [r5, #52]	; 0x34
    2ccc:	mov	r2, #1
    2cd0:	mov	r0, r7
    2cd4:	mov	r1, r2
    2cd8:	ldr	r3, [r3, #12]
    2cdc:	ldr	ip, [r3, #4]
    2ce0:	ldr	lr, [r3, #16]
    2ce4:	cmp	lr, #0
    2ce8:	beq	2cf8 <InflateVarName+0xcc>
    2cec:	cmp	ip, #0
    2cf0:	cmpeq	r4, r2
    2cf4:	beq	2c9c <InflateVarName+0x70>
    2cf8:	cmp	ip, #0
    2cfc:	bne	2d68 <InflateVarName+0x13c>
    2d00:	mov	r0, r6
    2d04:	add	sp, sp, #36	; 0x24
    2d08:	ldrd	r4, [sp]
    2d0c:	ldrd	r6, [sp, #8]
    2d10:	ldrd	r8, [sp, #16]
    2d14:	add	sp, sp, #24
    2d18:	pop	{pc}		; (ldr pc, [sp], #4)
    2d1c:	cmp	r0, #2
    2d20:	mvneq	r0, #2
    2d24:	bl	14f0 <zError@plt>
    2d28:	mov	r1, r0
    2d2c:	ldr	r0, [pc, #128]	; 2db4 <InflateVarName+0x188>
    2d30:	add	r0, pc, r0
    2d34:	bl	161c <Mat_Critical@plt>
    2d38:	b	2d00 <InflateVarName+0xd4>
    2d3c:	mov	lr, #1
    2d40:	mov	r0, sp
    2d44:	ldr	r3, [r8]
    2d48:	mov	r2, lr
    2d4c:	mov	r1, lr
    2d50:	stm	ip, {r0, lr}
    2d54:	bl	1520 <fread@plt>
    2d58:	ldr	r3, [r5, #52]	; 0x34
    2d5c:	mov	r6, r0
    2d60:	ldr	ip, [r3, #12]
    2d64:	b	2c70 <InflateVarName+0x44>
    2d68:	rsb	r1, ip, #0
    2d6c:	mov	r2, #1
    2d70:	ldr	r0, [r8]
    2d74:	bl	1694 <fseek@plt>
    2d78:	ldr	r3, [r5, #52]	; 0x34
    2d7c:	mov	r1, #0
    2d80:	ldr	r3, [r3, #12]
    2d84:	ldr	r2, [r3, #4]
    2d88:	str	r1, [r3, #4]
    2d8c:	sub	r6, r6, r2
    2d90:	b	2d00 <InflateVarName+0xd4>
    2d94:	cmp	r0, #2
    2d98:	mvneq	r0, #2
    2d9c:	bl	14f0 <zError@plt>
    2da0:	mov	r1, r0
    2da4:	ldr	r0, [pc, #12]	; 2db8 <InflateVarName+0x18c>
    2da8:	add	r0, pc, r0
    2dac:	bl	161c <Mat_Critical@plt>
    2db0:	b	2d00 <InflateVarName+0xd4>
    2db4:	.word	0x0004b91c
    2db8:	.word	0x0004b8a4

00002dbc <InflateDataTag>:
    2dbc:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2dc0:	subs	r4, r2, #0
    2dc4:	strd	r6, [sp, #8]
    2dc8:	moveq	r6, r4
    2dcc:	strd	r8, [sp, #16]
    2dd0:	str	lr, [sp, #24]
    2dd4:	sub	sp, sp, #36	; 0x24
    2dd8:	beq	2e54 <InflateDataTag+0x98>
    2ddc:	ldr	r3, [r1, #52]	; 0x34
    2de0:	mov	r5, r1
    2de4:	mov	r8, r0
    2de8:	ldr	ip, [r3, #12]
    2dec:	ldr	r3, [ip, #4]
    2df0:	cmp	r3, #0
    2df4:	movne	r6, #0
    2df8:	beq	2f08 <InflateDataTag+0x14c>
    2dfc:	mov	r3, #8
    2e00:	mov	r0, ip
    2e04:	str	r4, [ip, #12]
    2e08:	mov	r1, #0
    2e0c:	str	r3, [ip, #16]
    2e10:	bl	1460 <inflate@plt>
    2e14:	cmp	r0, #1
    2e18:	beq	2e54 <InflateDataTag+0x98>
    2e1c:	cmp	r0, #0
    2e20:	moveq	r4, #1
    2e24:	moveq	r7, sp
    2e28:	moveq	r9, r4
    2e2c:	beq	2ea4 <InflateDataTag+0xe8>
    2e30:	cmp	r0, #2
    2e34:	ldr	r4, [r5, #36]	; 0x24
    2e38:	mvneq	r0, #2
    2e3c:	bl	14f0 <zError@plt>
    2e40:	mov	r2, r0
    2e44:	ldr	r0, [pc, #288]	; 2f6c <InflateDataTag+0x1b0>
    2e48:	mov	r1, r4
    2e4c:	add	r0, pc, r0
    2e50:	bl	161c <Mat_Critical@plt>
    2e54:	mov	r0, r6
    2e58:	add	sp, sp, #36	; 0x24
    2e5c:	ldrd	r4, [sp]
    2e60:	ldrd	r6, [sp, #8]
    2e64:	ldrd	r8, [sp, #16]
    2e68:	add	sp, sp, #24
    2e6c:	pop	{pc}		; (ldr pc, [sp], #4)
    2e70:	stm	r3, {r7, r9}
    2e74:	ldr	r3, [r8]
    2e78:	bl	1520 <fread@plt>
    2e7c:	ldr	r3, [r5, #52]	; 0x34
    2e80:	mov	r4, r0
    2e84:	mov	r1, #0
    2e88:	add	r6, r6, r0
    2e8c:	ldr	r0, [r3, #12]
    2e90:	bl	1460 <inflate@plt>
    2e94:	cmp	r0, #1
    2e98:	beq	2f34 <InflateDataTag+0x178>
    2e9c:	cmp	r0, #0
    2ea0:	bne	2f44 <InflateDataTag+0x188>
    2ea4:	ldr	r3, [r5, #52]	; 0x34
    2ea8:	mov	r2, #1
    2eac:	mov	r0, r7
    2eb0:	mov	r1, r2
    2eb4:	ldr	r3, [r3, #12]
    2eb8:	ldr	ip, [r3, #4]
    2ebc:	ldr	lr, [r3, #16]
    2ec0:	cmp	lr, #0
    2ec4:	beq	2ed4 <InflateDataTag+0x118>
    2ec8:	cmp	r4, r2
    2ecc:	cmpeq	ip, #0
    2ed0:	beq	2e70 <InflateDataTag+0xb4>
    2ed4:	cmp	ip, #0
    2ed8:	beq	2e54 <InflateDataTag+0x98>
    2edc:	rsb	r1, ip, #0
    2ee0:	mov	r2, #1
    2ee4:	ldr	r0, [r8]
    2ee8:	bl	1694 <fseek@plt>
    2eec:	ldr	r3, [r5, #52]	; 0x34
    2ef0:	mov	r1, #0
    2ef4:	ldr	r3, [r3, #12]
    2ef8:	ldr	r2, [r3, #4]
    2efc:	str	r1, [r3, #4]
    2f00:	sub	r6, r6, r2
    2f04:	b	2e54 <InflateDataTag+0x98>
    2f08:	mov	lr, #1
    2f0c:	mov	r0, sp
    2f10:	ldr	r3, [r8]
    2f14:	mov	r2, lr
    2f18:	mov	r1, lr
    2f1c:	stm	ip, {r0, lr}
    2f20:	bl	1520 <fread@plt>
    2f24:	ldr	r3, [r5, #52]	; 0x34
    2f28:	mov	r6, r0
    2f2c:	ldr	ip, [r3, #12]
    2f30:	b	2dfc <InflateDataTag+0x40>
    2f34:	ldr	r3, [r5, #52]	; 0x34
    2f38:	ldr	r3, [r3, #12]
    2f3c:	ldr	ip, [r3, #4]
    2f40:	b	2ed4 <InflateDataTag+0x118>
    2f44:	cmp	r0, #2
    2f48:	ldr	r4, [r5, #36]	; 0x24
    2f4c:	mvneq	r0, #2
    2f50:	bl	14f0 <zError@plt>
    2f54:	mov	r2, r0
    2f58:	ldr	r0, [pc, #16]	; 2f70 <InflateDataTag+0x1b4>
    2f5c:	mov	r1, r4
    2f60:	add	r0, pc, r0
    2f64:	bl	161c <Mat_Critical@plt>
    2f68:	b	2e54 <InflateDataTag+0x98>
    2f6c:	.word	0x0004b824
    2f70:	.word	0x0004b710

00002f74 <InflateDataType>:
    2f74:	strd	r4, [sp, #-28]!	; 0xffffffe4
    2f78:	subs	r5, r2, #0
    2f7c:	strd	r6, [sp, #8]
    2f80:	moveq	r6, r5
    2f84:	strd	r8, [sp, #16]
    2f88:	str	lr, [sp, #24]
    2f8c:	sub	sp, sp, #36	; 0x24
    2f90:	beq	3034 <InflateDataType+0xc0>
    2f94:	ldr	r3, [r1, #4]
    2f98:	mov	r4, r1
    2f9c:	mov	r8, r0
    2fa0:	cmp	r3, #0
    2fa4:	movne	r6, #0
    2fa8:	beq	3070 <InflateDataType+0xfc>
    2fac:	mov	r3, #4
    2fb0:	mov	r1, #0
    2fb4:	str	r5, [r4, #12]
    2fb8:	mov	r0, r4
    2fbc:	str	r3, [r4, #16]
    2fc0:	bl	1460 <inflate@plt>
    2fc4:	cmp	r0, #0
    2fc8:	moveq	r5, #1
    2fcc:	moveq	r7, sp
    2fd0:	moveq	r9, r5
    2fd4:	beq	3004 <InflateDataType+0x90>
    2fd8:	b	3050 <InflateDataType+0xdc>
    2fdc:	ldr	r3, [r8]
    2fe0:	stm	r4, {r7, r9}
    2fe4:	bl	1520 <fread@plt>
    2fe8:	mov	r5, r0
    2fec:	mov	r1, #0
    2ff0:	mov	r0, r4
    2ff4:	add	r6, r6, r5
    2ff8:	bl	1460 <inflate@plt>
    2ffc:	cmp	r0, #0
    3000:	bne	30b8 <InflateDataType+0x144>
    3004:	mov	r2, #1
    3008:	mov	r0, r7
    300c:	ldr	r3, [r4, #4]
    3010:	mov	r1, r2
    3014:	ldr	ip, [r4, #16]
    3018:	cmp	ip, #0
    301c:	beq	302c <InflateDataType+0xb8>
    3020:	cmp	r5, r2
    3024:	cmpeq	r3, #0
    3028:	beq	2fdc <InflateDataType+0x68>
    302c:	cmp	r3, #0
    3030:	bne	3094 <InflateDataType+0x120>
    3034:	mov	r0, r6
    3038:	add	sp, sp, #36	; 0x24
    303c:	ldrd	r4, [sp]
    3040:	ldrd	r6, [sp, #8]
    3044:	ldrd	r8, [sp, #16]
    3048:	add	sp, sp, #24
    304c:	pop	{pc}		; (ldr pc, [sp], #4)
    3050:	cmp	r0, #2
    3054:	mvneq	r0, #2
    3058:	bl	14f0 <zError@plt>
    305c:	mov	r1, r0
    3060:	ldr	r0, [pc, #112]	; 30d8 <InflateDataType+0x164>
    3064:	add	r0, pc, r0
    3068:	bl	161c <Mat_Critical@plt>
    306c:	b	3034 <InflateDataType+0xc0>
    3070:	mov	ip, #1
    3074:	mov	r0, sp
    3078:	ldr	r3, [r8]
    307c:	mov	r2, ip
    3080:	mov	r1, ip
    3084:	stm	r4, {r0, ip}
    3088:	bl	1520 <fread@plt>
    308c:	mov	r6, r0
    3090:	b	2fac <InflateDataType+0x38>
    3094:	rsb	r1, r3, #0
    3098:	mov	r2, #1
    309c:	ldr	r0, [r8]
    30a0:	bl	1694 <fseek@plt>
    30a4:	ldr	r3, [r4, #4]
    30a8:	mov	r2, #0
    30ac:	str	r2, [r4, #4]
    30b0:	sub	r6, r6, r3
    30b4:	b	3034 <InflateDataType+0xc0>
    30b8:	cmp	r0, #2
    30bc:	mvneq	r0, #2
    30c0:	bl	14f0 <zError@plt>
    30c4:	mov	r1, r0
    30c8:	ldr	r0, [pc, #12]	; 30dc <InflateDataType+0x168>
    30cc:	add	r0, pc, r0
    30d0:	bl	161c <Mat_Critical@plt>
    30d4:	b	3034 <InflateDataType+0xc0>
    30d8:	.word	0x0004b638
    30dc:	.word	0x0004b5d0

000030e0 <InflateData>:
    30e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
    30e4:	clz	r4, r2
    30e8:	cmp	r3, #0
    30ec:	lsr	r4, r4, #5
    30f0:	moveq	r4, #1
    30f4:	strd	r6, [sp, #8]
    30f8:	strd	r8, [sp, #16]
    30fc:	cmp	r4, #0
    3100:	str	lr, [sp, #24]
    3104:	sub	sp, sp, #1024	; 0x400
    3108:	sub	sp, sp, #4
    310c:	movne	r4, #0
    3110:	bne	3214 <InflateData+0x134>
    3114:	mov	r6, r3
    3118:	ldr	r3, [r1, #4]
    311c:	mov	r7, r2
    3120:	mov	r5, r1
    3124:	mov	r8, r0
    3128:	cmp	r3, #0
    312c:	bne	315c <InflateData+0x7c>
    3130:	cmp	r6, #1024	; 0x400
    3134:	mov	r9, sp
    3138:	ldr	r3, [r8]
    313c:	mov	r0, r9
    3140:	movhi	r2, #1024	; 0x400
    3144:	movls	r2, r6
    3148:	mov	r1, #1
    314c:	bl	1520 <fread@plt>
    3150:	mov	r4, r0
    3154:	str	r9, [r5]
    3158:	str	r0, [r5, #4]
    315c:	mov	r1, #3
    3160:	mov	r0, r5
    3164:	str	r7, [r5, #12]
    3168:	str	r6, [r5, #16]
    316c:	bl	1460 <inflate@plt>
    3170:	cmp	r0, #1
    3174:	beq	3214 <InflateData+0x134>
    3178:	cmp	r0, #0
    317c:	moveq	r7, sp
    3180:	beq	31f4 <InflateData+0x114>
    3184:	b	3234 <InflateData+0x154>
    3188:	cmp	r1, #0
    318c:	ldr	r3, [r8]
    3190:	bne	3258 <InflateData+0x178>
    3194:	cmp	r2, r6
    3198:	movcc	r2, #1024	; 0x400
    319c:	bcc	31b8 <InflateData+0xd8>
    31a0:	mov	r2, #1
    31a4:	cmp	ip, r6
    31a8:	mov	r0, r7
    31ac:	mov	r1, r2
    31b0:	bhi	31c0 <InflateData+0xe0>
    31b4:	sub	r2, r6, r4
    31b8:	mov	r1, #1
    31bc:	mov	r0, r7
    31c0:	bl	1520 <fread@plt>
    31c4:	mov	r2, r0
    31c8:	mov	r1, #3
    31cc:	str	r7, [r5]
    31d0:	mov	r0, r5
    31d4:	add	r4, r4, r2
    31d8:	str	r2, [r5, #4]
    31dc:	bl	1460 <inflate@plt>
    31e0:	cmp	r0, #1
    31e4:	beq	327c <InflateData+0x19c>
    31e8:	cmp	r0, #0
    31ec:	cmnne	r0, #5
    31f0:	bne	3284 <InflateData+0x1a4>
    31f4:	add	r2, r4, #1024	; 0x400
    31f8:	add	ip, r4, #1
    31fc:	ldr	r1, [r5, #4]
    3200:	ldr	r3, [r5, #16]
    3204:	cmp	r3, #0
    3208:	bne	3188 <InflateData+0xa8>
    320c:	cmp	r1, #0
    3210:	bne	3254 <InflateData+0x174>
    3214:	mov	r0, r4
    3218:	add	sp, sp, #1024	; 0x400
    321c:	add	sp, sp, #4
    3220:	ldrd	r4, [sp]
    3224:	ldrd	r6, [sp, #8]
    3228:	ldrd	r8, [sp, #16]
    322c:	add	sp, sp, #24
    3230:	pop	{pc}		; (ldr pc, [sp], #4)
    3234:	cmp	r0, #2
    3238:	mvneq	r0, #2
    323c:	bl	14f0 <zError@plt>
    3240:	mov	r1, r0
    3244:	ldr	r0, [pc, #92]	; 32a8 <InflateData+0x1c8>
    3248:	add	r0, pc, r0
    324c:	bl	161c <Mat_Critical@plt>
    3250:	b	3214 <InflateData+0x134>
    3254:	ldr	r3, [r8]
    3258:	mov	r0, r3
    325c:	mov	r2, #1
    3260:	rsb	r1, r1, #0
    3264:	bl	1694 <fseek@plt>
    3268:	ldr	r3, [r5, #4]
    326c:	mov	r2, #0
    3270:	str	r2, [r5, #4]
    3274:	sub	r4, r4, r3
    3278:	b	3214 <InflateData+0x134>
    327c:	ldr	r1, [r5, #4]
    3280:	b	320c <InflateData+0x12c>
    3284:	cmp	r0, #2
    3288:	mvneq	r0, #2
    328c:	bl	14f0 <zError@plt>
    3290:	mov	r1, r0
    3294:	ldr	r0, [pc, #16]	; 32ac <InflateData+0x1cc>
    3298:	add	r0, pc, r0
    329c:	bl	161c <Mat_Critical@plt>
    32a0:	ldr	r1, [r5, #4]
    32a4:	b	320c <InflateData+0x12c>
    32a8:	.word	0x0004b47c
    32ac:	.word	0x0004b42c

000032b0 <InflateFieldNameLength>:
    32b0:	strd	r4, [sp, #-28]!	; 0xffffffe4
    32b4:	subs	r4, r2, #0
    32b8:	strd	r6, [sp, #8]
    32bc:	moveq	r6, r4
    32c0:	strd	r8, [sp, #16]
    32c4:	str	lr, [sp, #24]
    32c8:	sub	sp, sp, #36	; 0x24
    32cc:	beq	3384 <InflateFieldNameLength+0xd4>
    32d0:	ldr	r3, [r1, #52]	; 0x34
    32d4:	mov	r5, r1
    32d8:	mov	r8, r0
    32dc:	ldr	ip, [r3, #12]
    32e0:	ldr	r3, [ip, #4]
    32e4:	cmp	r3, #0
    32e8:	movne	r6, #0
    32ec:	beq	33c0 <InflateFieldNameLength+0x110>
    32f0:	mov	r3, #8
    32f4:	mov	r0, ip
    32f8:	str	r4, [ip, #12]
    32fc:	mov	r1, #0
    3300:	str	r3, [ip, #16]
    3304:	bl	1460 <inflate@plt>
    3308:	cmp	r0, #0
    330c:	moveq	r4, #1
    3310:	moveq	r7, sp
    3314:	moveq	r9, r4
    3318:	beq	334c <InflateFieldNameLength+0x9c>
    331c:	b	33a0 <InflateFieldNameLength+0xf0>
    3320:	stm	r3, {r7, r9}
    3324:	ldr	r3, [r8]
    3328:	bl	1520 <fread@plt>
    332c:	ldr	r3, [r5, #52]	; 0x34
    3330:	mov	r4, r0
    3334:	mov	r1, #0
    3338:	add	r6, r6, r0
    333c:	ldr	r0, [r3, #12]
    3340:	bl	1460 <inflate@plt>
    3344:	cmp	r0, #0
    3348:	bne	3418 <InflateFieldNameLength+0x168>
    334c:	ldr	r3, [r5, #52]	; 0x34
    3350:	mov	r2, #1
    3354:	mov	r0, r7
    3358:	mov	r1, r2
    335c:	ldr	r3, [r3, #12]
    3360:	ldr	ip, [r3, #4]
    3364:	ldr	lr, [r3, #16]
    3368:	cmp	lr, #0
    336c:	beq	337c <InflateFieldNameLength+0xcc>
    3370:	cmp	ip, #0
    3374:	cmpeq	r4, r2
    3378:	beq	3320 <InflateFieldNameLength+0x70>
    337c:	cmp	ip, #0
    3380:	bne	33ec <InflateFieldNameLength+0x13c>
    3384:	mov	r0, r6
    3388:	add	sp, sp, #36	; 0x24
    338c:	ldrd	r4, [sp]
    3390:	ldrd	r6, [sp, #8]
    3394:	ldrd	r8, [sp, #16]
    3398:	add	sp, sp, #24
    339c:	pop	{pc}		; (ldr pc, [sp], #4)
    33a0:	cmp	r0, #2
    33a4:	mvneq	r0, #2
    33a8:	bl	14f0 <zError@plt>
    33ac:	mov	r1, r0
    33b0:	ldr	r0, [pc, #128]	; 3438 <InflateFieldNameLength+0x188>
    33b4:	add	r0, pc, r0
    33b8:	bl	161c <Mat_Critical@plt>
    33bc:	b	3384 <InflateFieldNameLength+0xd4>
    33c0:	mov	lr, #1
    33c4:	mov	r0, sp
    33c8:	ldr	r3, [r8]
    33cc:	mov	r2, lr
    33d0:	mov	r1, lr
    33d4:	stm	ip, {r0, lr}
    33d8:	bl	1520 <fread@plt>
    33dc:	ldr	r3, [r5, #52]	; 0x34
    33e0:	mov	r6, r0
    33e4:	ldr	ip, [r3, #12]
    33e8:	b	32f0 <InflateFieldNameLength+0x40>
    33ec:	rsb	r1, ip, #0
    33f0:	mov	r2, #1
    33f4:	ldr	r0, [r8]
    33f8:	bl	1694 <fseek@plt>
    33fc:	ldr	r3, [r5, #52]	; 0x34
    3400:	mov	r1, #0
    3404:	ldr	r3, [r3, #12]
    3408:	ldr	r2, [r3, #4]
    340c:	str	r1, [r3, #4]
    3410:	sub	r6, r6, r2
    3414:	b	3384 <InflateFieldNameLength+0xd4>
    3418:	cmp	r0, #2
    341c:	mvneq	r0, #2
    3420:	bl	14f0 <zError@plt>
    3424:	mov	r1, r0
    3428:	ldr	r0, [pc, #12]	; 343c <InflateFieldNameLength+0x18c>
    342c:	add	r0, pc, r0
    3430:	bl	161c <Mat_Critical@plt>
    3434:	b	3384 <InflateFieldNameLength+0xd4>
    3438:	.word	0x0004b334
    343c:	.word	0x0004b2bc

00003440 <InflateFieldNamesTag>:
    3440:	strd	r4, [sp, #-28]!	; 0xffffffe4
    3444:	subs	r4, r2, #0
    3448:	strd	r6, [sp, #8]
    344c:	moveq	r6, r4
    3450:	strd	r8, [sp, #16]
    3454:	str	lr, [sp, #24]
    3458:	sub	sp, sp, #36	; 0x24
    345c:	beq	3514 <InflateFieldNamesTag+0xd4>
    3460:	ldr	r3, [r1, #52]	; 0x34
    3464:	mov	r5, r1
    3468:	mov	r8, r0
    346c:	ldr	ip, [r3, #12]
    3470:	ldr	r3, [ip, #4]
    3474:	cmp	r3, #0
    3478:	movne	r6, #0
    347c:	beq	3550 <InflateFieldNamesTag+0x110>
    3480:	mov	r3, #8
    3484:	mov	r0, ip
    3488:	str	r4, [ip, #12]
    348c:	mov	r1, #0
    3490:	str	r3, [ip, #16]
    3494:	bl	1460 <inflate@plt>
    3498:	cmp	r0, #0
    349c:	moveq	r4, #1
    34a0:	moveq	r7, sp
    34a4:	moveq	r9, r4
    34a8:	beq	34dc <InflateFieldNamesTag+0x9c>
    34ac:	b	3530 <InflateFieldNamesTag+0xf0>
    34b0:	stm	r3, {r7, r9}
    34b4:	ldr	r3, [r8]
    34b8:	bl	1520 <fread@plt>
    34bc:	ldr	r3, [r5, #52]	; 0x34
    34c0:	mov	r4, r0
    34c4:	mov	r1, #0
    34c8:	add	r6, r6, r0
    34cc:	ldr	r0, [r3, #12]
    34d0:	bl	1460 <inflate@plt>
    34d4:	cmp	r0, #0
    34d8:	bne	35a8 <InflateFieldNamesTag+0x168>
    34dc:	ldr	r3, [r5, #52]	; 0x34
    34e0:	mov	r2, #1
    34e4:	mov	r0, r7
    34e8:	mov	r1, r2
    34ec:	ldr	r3, [r3, #12]
    34f0:	ldr	ip, [r3, #4]
    34f4:	ldr	lr, [r3, #16]
    34f8:	cmp	lr, #0
    34fc:	beq	350c <InflateFieldNamesTag+0xcc>
    3500:	cmp	ip, #0
    3504:	cmpeq	r4, r2
    3508:	beq	34b0 <InflateFieldNamesTag+0x70>
    350c:	cmp	ip, #0
    3510:	bne	357c <InflateFieldNamesTag+0x13c>
    3514:	mov	r0, r6
    3518:	add	sp, sp, #36	; 0x24
    351c:	ldrd	r4, [sp]
    3520:	ldrd	r6, [sp, #8]
    3524:	ldrd	r8, [sp, #16]
    3528:	add	sp, sp, #24
    352c:	pop	{pc}		; (ldr pc, [sp], #4)
    3530:	cmp	r0, #2
    3534:	mvneq	r0, #2
    3538:	bl	14f0 <zError@plt>
    353c:	mov	r1, r0
    3540:	ldr	r0, [pc, #128]	; 35c8 <InflateFieldNamesTag+0x188>
    3544:	add	r0, pc, r0
    3548:	bl	161c <Mat_Critical@plt>
    354c:	b	3514 <InflateFieldNamesTag+0xd4>
    3550:	mov	lr, #1
    3554:	mov	r0, sp
    3558:	ldr	r3, [r8]
    355c:	mov	r2, lr
    3560:	mov	r1, lr
    3564:	stm	ip, {r0, lr}
    3568:	bl	1520 <fread@plt>
    356c:	ldr	r3, [r5, #52]	; 0x34
    3570:	mov	r6, r0
    3574:	ldr	ip, [r3, #12]
    3578:	b	3480 <InflateFieldNamesTag+0x40>
    357c:	rsb	r1, ip, #0
    3580:	mov	r2, #1
    3584:	ldr	r0, [r8]
    3588:	bl	1694 <fseek@plt>
    358c:	ldr	r3, [r5, #52]	; 0x34
    3590:	mov	r1, #0
    3594:	ldr	r3, [r3, #12]
    3598:	ldr	r2, [r3, #4]
    359c:	str	r1, [r3, #4]
    35a0:	sub	r6, r6, r2
    35a4:	b	3514 <InflateFieldNamesTag+0xd4>
    35a8:	cmp	r0, #2
    35ac:	mvneq	r0, #2
    35b0:	bl	14f0 <zError@plt>
    35b4:	mov	r1, r0
    35b8:	ldr	r0, [pc, #12]	; 35cc <InflateFieldNamesTag+0x18c>
    35bc:	add	r0, pc, r0
    35c0:	bl	161c <Mat_Critical@plt>
    35c4:	b	3514 <InflateFieldNamesTag+0xd4>
    35c8:	.word	0x0004b1d0
    35cc:	.word	0x0004b158

000035d0 <InflateFieldNames>:
    35d0:	strd	r4, [sp, #-28]!	; 0xffffffe4
    35d4:	strd	r6, [sp, #8]
    35d8:	subs	r7, r2, #0
    35dc:	moveq	r6, r7
    35e0:	strd	r8, [sp, #16]
    35e4:	str	lr, [sp, #24]
    35e8:	sub	sp, sp, #36	; 0x24
    35ec:	beq	36b0 <InflateFieldNames+0xe0>
    35f0:	mov	r4, r3
    35f4:	ldr	r3, [r1, #52]	; 0x34
    35f8:	mov	r5, r1
    35fc:	mov	r8, r0
    3600:	ldr	ip, [r3, #12]
    3604:	ldr	r3, [ip, #4]
    3608:	cmp	r3, #0
    360c:	movne	r6, #0
    3610:	beq	36ec <InflateFieldNames+0x11c>
    3614:	ldr	r3, [sp, #64]	; 0x40
    3618:	mov	r0, ip
    361c:	mov	r1, #0
    3620:	str	r7, [ip, #12]
    3624:	ldr	r2, [sp, #68]	; 0x44
    3628:	mla	r4, r3, r4, r2
    362c:	str	r4, [ip, #16]
    3630:	bl	1460 <inflate@plt>
    3634:	cmp	r0, #0
    3638:	moveq	r4, #1
    363c:	moveq	r7, sp
    3640:	moveq	r9, r4
    3644:	beq	3678 <InflateFieldNames+0xa8>
    3648:	b	36cc <InflateFieldNames+0xfc>
    364c:	stm	r3, {r7, r9}
    3650:	ldr	r3, [r8]
    3654:	bl	1520 <fread@plt>
    3658:	ldr	r3, [r5, #52]	; 0x34
    365c:	mov	r4, r0
    3660:	mov	r1, #0
    3664:	add	r6, r6, r0
    3668:	ldr	r0, [r3, #12]
    366c:	bl	1460 <inflate@plt>
    3670:	cmp	r0, #0
    3674:	bne	3744 <InflateFieldNames+0x174>
    3678:	ldr	r3, [r5, #52]	; 0x34
    367c:	mov	r2, #1
    3680:	mov	r0, r7
    3684:	mov	r1, r2
    3688:	ldr	r3, [r3, #12]
    368c:	ldr	ip, [r3, #4]
    3690:	ldr	lr, [r3, #16]
    3694:	cmp	lr, #0
    3698:	beq	36a8 <InflateFieldNames+0xd8>
    369c:	cmp	ip, #0
    36a0:	cmpeq	r4, r2
    36a4:	beq	364c <InflateFieldNames+0x7c>
    36a8:	cmp	ip, #0
    36ac:	bne	3718 <InflateFieldNames+0x148>
    36b0:	mov	r0, r6
    36b4:	add	sp, sp, #36	; 0x24
    36b8:	ldrd	r4, [sp]
    36bc:	ldrd	r6, [sp, #8]
    36c0:	ldrd	r8, [sp, #16]
    36c4:	add	sp, sp, #24
    36c8:	pop	{pc}		; (ldr pc, [sp], #4)
    36cc:	cmp	r0, #2
    36d0:	mvneq	r0, #2
    36d4:	bl	14f0 <zError@plt>
    36d8:	mov	r1, r0
    36dc:	ldr	r0, [pc, #128]	; 3764 <InflateFieldNames+0x194>
    36e0:	add	r0, pc, r0
    36e4:	bl	161c <Mat_Critical@plt>
    36e8:	b	36b0 <InflateFieldNames+0xe0>
    36ec:	mov	lr, #1
    36f0:	mov	r0, sp
    36f4:	ldr	r3, [r8]
    36f8:	mov	r2, lr
    36fc:	mov	r1, lr
    3700:	stm	ip, {r0, lr}
    3704:	bl	1520 <fread@plt>
    3708:	ldr	r3, [r5, #52]	; 0x34
    370c:	mov	r6, r0
    3710:	ldr	ip, [r3, #12]
    3714:	b	3614 <InflateFieldNames+0x44>
    3718:	rsb	r1, ip, #0
    371c:	mov	r2, #1
    3720:	ldr	r0, [r8]
    3724:	bl	1694 <fseek@plt>
    3728:	ldr	r3, [r5, #52]	; 0x34
    372c:	mov	r1, #0
    3730:	ldr	r3, [r3, #12]
    3734:	ldr	r2, [r3, #4]
    3738:	str	r1, [r3, #4]
    373c:	sub	r6, r6, r2
    3740:	b	36b0 <InflateFieldNames+0xe0>
    3744:	cmp	r0, #2
    3748:	mvneq	r0, #2
    374c:	bl	14f0 <zError@plt>
    3750:	mov	r1, r0
    3754:	ldr	r0, [pc, #12]	; 3768 <InflateFieldNames+0x198>
    3758:	add	r0, pc, r0
    375c:	bl	161c <Mat_Critical@plt>
    3760:	b	36b0 <InflateFieldNames+0xe0>
    3764:	.word	0x0004b060
    3768:	.word	0x0004afe8

0000376c <ReadDoubleData.part.0>:
    376c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3770:	sub	r4, r2, #1
    3774:	strd	r6, [sp, #8]
    3778:	mov	r6, r3
    377c:	strd	r8, [sp, #16]
    3780:	strd	sl, [sp, #24]
    3784:	str	lr, [sp, #32]
    3788:	sub	sp, sp, #2064	; 0x810
    378c:	sub	sp, sp, #12
    3790:	strd	r0, [sp, #4]
    3794:	mov	r0, r2
    3798:	bl	1598 <Mat_SizeOf@plt>
    379c:	mov	fp, r0
    37a0:	cmp	r4, #12
    37a4:	addls	pc, pc, r4, lsl #2
    37a8:	b	3ec4 <ReadDoubleData.part.0+0x758>
    37ac:	b	3880 <ReadDoubleData.part.0+0x114>
    37b0:	b	3904 <ReadDoubleData.part.0+0x198>
    37b4:	b	3b70 <ReadDoubleData.part.0+0x404>
    37b8:	b	3a2c <ReadDoubleData.part.0+0x2c0>
    37bc:	b	3acc <ReadDoubleData.part.0+0x360>
    37c0:	b	3988 <ReadDoubleData.part.0+0x21c>
    37c4:	b	3d24 <ReadDoubleData.part.0+0x5b8>
    37c8:	b	3ec4 <ReadDoubleData.part.0+0x758>
    37cc:	b	3c10 <ReadDoubleData.part.0+0x4a4>
    37d0:	b	3ec4 <ReadDoubleData.part.0+0x758>
    37d4:	b	3ec4 <ReadDoubleData.part.0+0x758>
    37d8:	b	3c84 <ReadDoubleData.part.0+0x518>
    37dc:	b	37e0 <ReadDoubleData.part.0+0x74>
    37e0:	ldr	r3, [sp, #4]
    37e4:	ldr	r7, [r3, #20]
    37e8:	ldr	r3, [r3]
    37ec:	cmp	r7, #0
    37f0:	beq	40c0 <ReadDoubleData.part.0+0x954>
    37f4:	cmp	r6, #256	; 0x100
    37f8:	ble	4a20 <ReadDoubleData.part.0+0x12b4>
    37fc:	ldr	r9, [sp, #8]
    3800:	mov	r8, #0
    3804:	add	r4, sp, #2064	; 0x810
    3808:	sub	r2, r6, #256	; 0x100
    380c:	mov	r7, r8
    3810:	add	r5, sp, #24
    3814:	add	r4, r4, #8
    3818:	str	r2, [sp, #12]
    381c:	str	r6, [sp, #20]
    3820:	mov	r2, #256	; 0x100
    3824:	mov	r1, fp
    3828:	mov	r0, r5
    382c:	mov	sl, r9
    3830:	bl	1520 <fread@plt>
    3834:	add	r7, r7, r0
    3838:	mov	r6, r5
    383c:	str	r7, [sp]
    3840:	str	r5, [sp, #16]
    3844:	mov	r0, r6
    3848:	add	r6, r6, #8
    384c:	bl	1858 <Mat_uint64Swap>
    3850:	bl	4e0d0 <__aeabi_ul2d>
    3854:	cmp	r6, r4
    3858:	strd	r0, [sl], #8
    385c:	bne	3844 <ReadDoubleData.part.0+0xd8>
    3860:	ldr	r3, [sp, #12]
    3864:	add	r8, r8, #256	; 0x100
    3868:	add	r9, r9, #2048	; 0x800
    386c:	cmp	r8, r3
    3870:	bge	4854 <ReadDoubleData.part.0+0x10e8>
    3874:	ldr	r3, [sp, #4]
    3878:	ldr	r3, [r3]
    387c:	b	3820 <ReadDoubleData.part.0+0xb4>
    3880:	ldr	sl, [sp, #4]
    3884:	cmp	r6, #256	; 0x100
    3888:	ldr	r3, [sl]
    388c:	ble	4508 <ReadDoubleData.part.0+0xd9c>
    3890:	mov	r8, #0
    3894:	add	r5, sp, #24
    3898:	str	r6, [sp, #12]
    389c:	ldr	r9, [sp, #8]
    38a0:	sub	r2, r6, #256	; 0x100
    38a4:	mov	r7, r8
    38a8:	add	r4, r5, #255	; 0xff
    38ac:	mov	r6, r2
    38b0:	mov	r2, #256	; 0x100
    38b4:	mov	r1, fp
    38b8:	mov	r0, r5
    38bc:	bl	1520 <fread@plt>
    38c0:	add	r7, r7, r0
    38c4:	sub	r1, r5, #1
    38c8:	mov	r0, r7
    38cc:	mov	r3, r1
    38d0:	mov	r2, r9
    38d4:	ldrsb	ip, [r3, #1]!
    38d8:	vmov	s14, ip
    38dc:	cmp	r3, r4
    38e0:	vcvt.f64.s32	d7, s14
    38e4:	vstmia	r2!, {d7}
    38e8:	bne	38d4 <ReadDoubleData.part.0+0x168>
    38ec:	add	r8, r8, #256	; 0x100
    38f0:	add	r9, r9, #2048	; 0x800
    38f4:	cmp	r6, r8
    38f8:	ble	3e44 <ReadDoubleData.part.0+0x6d8>
    38fc:	ldr	r3, [sl]
    3900:	b	38b0 <ReadDoubleData.part.0+0x144>
    3904:	ldr	sl, [sp, #4]
    3908:	cmp	r6, #256	; 0x100
    390c:	ldr	r3, [sl]
    3910:	ble	44c0 <ReadDoubleData.part.0+0xd54>
    3914:	mov	r8, #0
    3918:	add	r5, sp, #24
    391c:	str	r6, [sp, #12]
    3920:	ldr	r9, [sp, #8]
    3924:	sub	r2, r6, #256	; 0x100
    3928:	mov	r7, r8
    392c:	add	r4, r5, #255	; 0xff
    3930:	mov	r6, r2
    3934:	mov	r2, #256	; 0x100
    3938:	mov	r1, fp
    393c:	mov	r0, r5
    3940:	bl	1520 <fread@plt>
    3944:	add	r7, r7, r0
    3948:	sub	r1, r5, #1
    394c:	mov	r0, r7
    3950:	mov	r3, r1
    3954:	mov	r2, r9
    3958:	ldrb	ip, [r3, #1]!
    395c:	vmov	s14, ip
    3960:	cmp	r4, r3
    3964:	vcvt.f64.u32	d7, s14
    3968:	vstmia	r2!, {d7}
    396c:	bne	3958 <ReadDoubleData.part.0+0x1ec>
    3970:	add	r8, r8, #256	; 0x100
    3974:	add	r9, r9, #2048	; 0x800
    3978:	cmp	r6, r8
    397c:	ble	3dc4 <ReadDoubleData.part.0+0x658>
    3980:	ldr	r3, [sl]
    3984:	b	3934 <ReadDoubleData.part.0+0x1c8>
    3988:	ldr	r3, [sp, #4]
    398c:	ldr	r7, [r3, #20]
    3990:	ldr	r3, [r3]
    3994:	cmp	r7, #0
    3998:	beq	3fc8 <ReadDoubleData.part.0+0x85c>
    399c:	cmp	r6, #256	; 0x100
    39a0:	ble	4ab0 <ReadDoubleData.part.0+0x1344>
    39a4:	ldr	r9, [sp, #8]
    39a8:	mov	r8, #0
    39ac:	add	r4, sp, #1040	; 0x410
    39b0:	sub	r2, r6, #256	; 0x100
    39b4:	mov	r7, r8
    39b8:	add	r5, sp, #24
    39bc:	add	r4, r4, #8
    39c0:	str	r2, [sp, #12]
    39c4:	str	r6, [sp, #20]
    39c8:	mov	r2, #256	; 0x100
    39cc:	mov	r1, fp
    39d0:	mov	r0, r5
    39d4:	mov	sl, r9
    39d8:	bl	1520 <fread@plt>
    39dc:	add	r7, r7, r0
    39e0:	mov	r6, r5
    39e4:	str	r7, [sp]
    39e8:	str	r5, [sp, #16]
    39ec:	mov	r0, r6
    39f0:	add	r6, r6, #4
    39f4:	bl	18f8 <Mat_uint32Swap>
    39f8:	vmov	s15, r0
    39fc:	cmp	r4, r6
    3a00:	vcvt.f64.u32	d7, s15
    3a04:	vstmia	sl!, {d7}
    3a08:	bne	39ec <ReadDoubleData.part.0+0x280>
    3a0c:	ldr	r3, [sp, #12]
    3a10:	add	r8, r8, #256	; 0x100
    3a14:	add	r9, r9, #2048	; 0x800
    3a18:	cmp	r8, r3
    3a1c:	bge	46d0 <ReadDoubleData.part.0+0xf64>
    3a20:	ldr	r3, [sp, #4]
    3a24:	ldr	r3, [r3]
    3a28:	b	39c8 <ReadDoubleData.part.0+0x25c>
    3a2c:	ldr	r3, [sp, #4]
    3a30:	ldr	r7, [r3, #20]
    3a34:	ldr	r3, [r3]
    3a38:	cmp	r7, #0
    3a3c:	beq	41c0 <ReadDoubleData.part.0+0xa54>
    3a40:	cmp	r6, #256	; 0x100
    3a44:	ble	4b88 <ReadDoubleData.part.0+0x141c>
    3a48:	ldr	r9, [sp, #8]
    3a4c:	mov	r8, #0
    3a50:	sub	r2, r6, #256	; 0x100
    3a54:	mov	r7, r8
    3a58:	add	r5, sp, #24
    3a5c:	add	r4, sp, #536	; 0x218
    3a60:	str	r2, [sp, #12]
    3a64:	str	r6, [sp, #20]
    3a68:	mov	r2, #256	; 0x100
    3a6c:	mov	r1, fp
    3a70:	mov	r0, r5
    3a74:	mov	sl, r9
    3a78:	bl	1520 <fread@plt>
    3a7c:	add	r7, r7, r0
    3a80:	mov	r6, r5
    3a84:	str	r7, [sp]
    3a88:	str	r5, [sp, #16]
    3a8c:	mov	r0, r6
    3a90:	add	r6, r6, #2
    3a94:	bl	1950 <Mat_uint16Swap>
    3a98:	vmov	s15, r0
    3a9c:	cmp	r4, r6
    3aa0:	vcvt.f64.u32	d7, s15
    3aa4:	vstmia	sl!, {d7}
    3aa8:	bne	3a8c <ReadDoubleData.part.0+0x320>
    3aac:	ldr	r3, [sp, #12]
    3ab0:	add	r8, r8, #256	; 0x100
    3ab4:	add	r9, r9, #2048	; 0x800
    3ab8:	cmp	r3, r8
    3abc:	ble	4950 <ReadDoubleData.part.0+0x11e4>
    3ac0:	ldr	r3, [sp, #4]
    3ac4:	ldr	r3, [r3]
    3ac8:	b	3a68 <ReadDoubleData.part.0+0x2fc>
    3acc:	ldr	r3, [sp, #4]
    3ad0:	ldr	r7, [r3, #20]
    3ad4:	ldr	r3, [r3]
    3ad8:	cmp	r7, #0
    3adc:	beq	4044 <ReadDoubleData.part.0+0x8d8>
    3ae0:	cmp	r6, #256	; 0x100
    3ae4:	ble	4bd4 <ReadDoubleData.part.0+0x1468>
    3ae8:	ldr	r9, [sp, #8]
    3aec:	mov	r8, #0
    3af0:	add	r4, sp, #1040	; 0x410
    3af4:	sub	r2, r6, #256	; 0x100
    3af8:	mov	r7, r8
    3afc:	add	r5, sp, #24
    3b00:	add	r4, r4, #8
    3b04:	str	r2, [sp, #12]
    3b08:	str	r6, [sp, #20]
    3b0c:	mov	r2, #256	; 0x100
    3b10:	mov	r1, fp
    3b14:	mov	r0, r5
    3b18:	mov	sl, r9
    3b1c:	bl	1520 <fread@plt>
    3b20:	add	r7, r7, r0
    3b24:	mov	r6, r5
    3b28:	str	r7, [sp]
    3b2c:	str	r5, [sp, #16]
    3b30:	mov	r0, r6
    3b34:	add	r6, r6, #4
    3b38:	bl	18c4 <Mat_int32Swap>
    3b3c:	vmov	s15, r0
    3b40:	cmp	r4, r6
    3b44:	vcvt.f64.s32	d7, s15
    3b48:	vstmia	sl!, {d7}
    3b4c:	bne	3b30 <ReadDoubleData.part.0+0x3c4>
    3b50:	ldr	r3, [sp, #12]
    3b54:	add	r8, r8, #256	; 0x100
    3b58:	add	r9, r9, #2048	; 0x800
    3b5c:	cmp	r8, r3
    3b60:	bge	4754 <ReadDoubleData.part.0+0xfe8>
    3b64:	ldr	r3, [sp, #4]
    3b68:	ldr	r3, [r3]
    3b6c:	b	3b0c <ReadDoubleData.part.0+0x3a0>
    3b70:	ldr	r3, [sp, #4]
    3b74:	ldr	r7, [r3, #20]
    3b78:	ldr	r3, [r3]
    3b7c:	cmp	r7, #0
    3b80:	beq	4140 <ReadDoubleData.part.0+0x9d4>
    3b84:	cmp	r6, #256	; 0x100
    3b88:	ble	49d4 <ReadDoubleData.part.0+0x1268>
    3b8c:	ldr	r9, [sp, #8]
    3b90:	mov	r8, #0
    3b94:	sub	r2, r6, #256	; 0x100
    3b98:	mov	r7, r8
    3b9c:	add	r5, sp, #24
    3ba0:	add	r4, sp, #536	; 0x218
    3ba4:	str	r2, [sp, #12]
    3ba8:	str	r6, [sp, #20]
    3bac:	mov	r2, #256	; 0x100
    3bb0:	mov	r1, fp
    3bb4:	mov	r0, r5
    3bb8:	mov	sl, r9
    3bbc:	bl	1520 <fread@plt>
    3bc0:	add	r7, r7, r0
    3bc4:	mov	r6, r5
    3bc8:	str	r7, [sp]
    3bcc:	str	r5, [sp, #16]
    3bd0:	mov	r0, r6
    3bd4:	add	r6, r6, #2
    3bd8:	bl	192c <Mat_int16Swap>
    3bdc:	vmov	s15, r0
    3be0:	cmp	r4, r6
    3be4:	vcvt.f64.s32	d7, s15
    3be8:	vstmia	sl!, {d7}
    3bec:	bne	3bd0 <ReadDoubleData.part.0+0x464>
    3bf0:	ldr	r3, [sp, #12]
    3bf4:	add	r8, r8, #256	; 0x100
    3bf8:	add	r9, r9, #2048	; 0x800
    3bfc:	cmp	r8, r3
    3c00:	bge	433c <ReadDoubleData.part.0+0xbd0>
    3c04:	ldr	r3, [sp, #4]
    3c08:	ldr	r3, [r3]
    3c0c:	b	3bac <ReadDoubleData.part.0+0x440>
    3c10:	ldr	r5, [sp, #4]
    3c14:	mov	r1, r0
    3c18:	mov	r2, r6
    3c1c:	ldr	r4, [sp, #8]
    3c20:	ldr	r3, [r5]
    3c24:	mov	r0, r4
    3c28:	bl	1520 <fread@plt>
    3c2c:	ldr	r3, [r5, #20]
    3c30:	str	r0, [sp]
    3c34:	cmp	r3, #0
    3c38:	beq	3c5c <ReadDoubleData.part.0+0x4f0>
    3c3c:	cmp	r6, #0
    3c40:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    3c44:	add	r6, r4, r6, lsl #3
    3c48:	mov	r0, r4
    3c4c:	add	r4, r4, #8
    3c50:	bl	19a4 <Mat_doubleSwap>
    3c54:	cmp	r6, r4
    3c58:	bne	3c48 <ReadDoubleData.part.0+0x4dc>
    3c5c:	ldr	r3, [sp]
    3c60:	mul	r0, r3, fp
    3c64:	add	sp, sp, #2064	; 0x810
    3c68:	add	sp, sp, #12
    3c6c:	ldrd	r4, [sp]
    3c70:	ldrd	r6, [sp, #8]
    3c74:	ldrd	r8, [sp, #16]
    3c78:	ldrd	sl, [sp, #24]
    3c7c:	add	sp, sp, #32
    3c80:	pop	{pc}		; (ldr pc, [sp], #4)
    3c84:	ldr	r3, [sp, #4]
    3c88:	ldr	r7, [r3, #20]
    3c8c:	ldr	r3, [r3]
    3c90:	cmp	r7, #0
    3c94:	beq	3f48 <ReadDoubleData.part.0+0x7dc>
    3c98:	cmp	r6, #256	; 0x100
    3c9c:	ble	4d3c <ReadDoubleData.part.0+0x15d0>
    3ca0:	ldr	r9, [sp, #8]
    3ca4:	mov	r8, #0
    3ca8:	add	r4, sp, #2064	; 0x810
    3cac:	sub	r2, r6, #256	; 0x100
    3cb0:	mov	r7, r8
    3cb4:	add	r5, sp, #24
    3cb8:	add	r4, r4, #8
    3cbc:	str	r2, [sp, #16]
    3cc0:	str	r6, [sp, #20]
    3cc4:	mov	r2, #256	; 0x100
    3cc8:	mov	r1, fp
    3ccc:	mov	r0, r5
    3cd0:	mov	sl, r9
    3cd4:	bl	1520 <fread@plt>
    3cd8:	add	r7, r7, r0
    3cdc:	mov	r6, r5
    3ce0:	str	r7, [sp]
    3ce4:	str	r5, [sp, #12]
    3ce8:	mov	r0, r6
    3cec:	add	r6, r6, #8
    3cf0:	bl	17ec <Mat_int64Swap>
    3cf4:	bl	4e0e4 <__aeabi_l2d>
    3cf8:	cmp	r6, r4
    3cfc:	strd	r0, [sl], #8
    3d00:	bne	3ce8 <ReadDoubleData.part.0+0x57c>
    3d04:	ldr	r3, [sp, #16]
    3d08:	add	r8, r8, #256	; 0x100
    3d0c:	add	r9, r9, #2048	; 0x800
    3d10:	cmp	r8, r3
    3d14:	bge	4550 <ReadDoubleData.part.0+0xde4>
    3d18:	ldr	r3, [sp, #4]
    3d1c:	ldr	r3, [r3]
    3d20:	b	3cc4 <ReadDoubleData.part.0+0x558>
    3d24:	ldr	r3, [sp, #4]
    3d28:	ldr	r7, [r3, #20]
    3d2c:	ldr	r3, [r3]
    3d30:	cmp	r7, #0
    3d34:	beq	3ecc <ReadDoubleData.part.0+0x760>
    3d38:	cmp	r6, #256	; 0x100
    3d3c:	ble	4c20 <ReadDoubleData.part.0+0x14b4>
    3d40:	ldr	r9, [sp, #8]
    3d44:	mov	r8, #0
    3d48:	add	r4, sp, #1040	; 0x410
    3d4c:	sub	r2, r6, #256	; 0x100
    3d50:	mov	r7, r8
    3d54:	add	r5, sp, #24
    3d58:	add	r4, r4, #8
    3d5c:	str	r2, [sp, #12]
    3d60:	str	r6, [sp, #20]
    3d64:	mov	r2, #256	; 0x100
    3d68:	mov	r1, fp
    3d6c:	mov	r0, r5
    3d70:	mov	sl, r9
    3d74:	bl	1520 <fread@plt>
    3d78:	add	r7, r7, r0
    3d7c:	mov	r6, r5
    3d80:	str	r7, [sp]
    3d84:	str	r5, [sp, #16]
    3d88:	mov	r0, r6
    3d8c:	add	r6, r6, #4
    3d90:	bl	1974 <Mat_floatSwap>
    3d94:	vcvt.f64.f32	d0, s0
    3d98:	cmp	r4, r6
    3d9c:	vstmia	sl!, {d0}
    3da0:	bne	3d88 <ReadDoubleData.part.0+0x61c>
    3da4:	ldr	r3, [sp, #12]
    3da8:	add	r8, r8, #256	; 0x100
    3dac:	add	r9, r9, #2048	; 0x800
    3db0:	cmp	r8, r3
    3db4:	bge	42bc <ReadDoubleData.part.0+0xb50>
    3db8:	ldr	r3, [sp, #4]
    3dbc:	ldr	r3, [r3]
    3dc0:	b	3d64 <ReadDoubleData.part.0+0x5f8>
    3dc4:	ldr	r6, [sp, #12]
    3dc8:	mov	sl, r1
    3dcc:	str	r0, [sp]
    3dd0:	sub	r3, r6, #256	; 0x100
    3dd4:	sub	r3, r3, #1
    3dd8:	lsr	r3, r3, #8
    3ddc:	add	r4, r3, #1
    3de0:	lsl	r8, r4, #8
    3de4:	cmp	r6, r8
    3de8:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    3dec:	ldr	r3, [sp, #4]
    3df0:	sub	r9, r6, r8
    3df4:	mov	r0, r5
    3df8:	mov	r2, r9
    3dfc:	mov	r1, fp
    3e00:	ldr	r3, [r3]
    3e04:	bl	1520 <fread@plt>
    3e08:	add	r3, r7, r0
    3e0c:	cmp	r9, #0
    3e10:	str	r3, [sp]
    3e14:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    3e18:	ldr	r2, [sp, #8]
    3e1c:	add	r3, r9, r8
    3e20:	add	r4, r2, r4, lsl #11
    3e24:	add	r3, r2, r3, lsl #3
    3e28:	ldrb	r2, [sl, #1]!
    3e2c:	vmov	s14, r2
    3e30:	vcvt.f64.u32	d7, s14
    3e34:	vstmia	r4!, {d7}
    3e38:	cmp	r3, r4
    3e3c:	bne	3e28 <ReadDoubleData.part.0+0x6bc>
    3e40:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    3e44:	ldr	r6, [sp, #12]
    3e48:	mov	sl, r1
    3e4c:	str	r0, [sp]
    3e50:	sub	r3, r6, #256	; 0x100
    3e54:	sub	r3, r3, #1
    3e58:	lsr	r3, r3, #8
    3e5c:	add	r4, r3, #1
    3e60:	lsl	r8, r4, #8
    3e64:	cmp	r6, r8
    3e68:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    3e6c:	ldr	r3, [sp, #4]
    3e70:	sub	r6, r6, r8
    3e74:	mov	r0, r5
    3e78:	mov	r2, r6
    3e7c:	mov	r1, fp
    3e80:	ldr	r3, [r3]
    3e84:	bl	1520 <fread@plt>
    3e88:	add	r3, r7, r0
    3e8c:	cmp	r6, #0
    3e90:	str	r3, [sp]
    3e94:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    3e98:	ldr	r2, [sp, #8]
    3e9c:	add	r3, r6, r8
    3ea0:	add	r4, r2, r4, lsl #11
    3ea4:	add	r3, r2, r3, lsl #3
    3ea8:	ldrsb	r2, [sl, #1]!
    3eac:	vmov	s14, r2
    3eb0:	vcvt.f64.s32	d7, s14
    3eb4:	vstmia	r4!, {d7}
    3eb8:	cmp	r3, r4
    3ebc:	bne	3ea8 <ReadDoubleData.part.0+0x73c>
    3ec0:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    3ec4:	mov	r0, #0
    3ec8:	b	3c64 <ReadDoubleData.part.0+0x4f8>
    3ecc:	cmp	r6, #256	; 0x100
    3ed0:	ble	4c68 <ReadDoubleData.part.0+0x14fc>
    3ed4:	ldr	r9, [sp, #8]
    3ed8:	sub	r2, r6, #256	; 0x100
    3edc:	add	r4, sp, #1040	; 0x410
    3ee0:	mov	sl, r6
    3ee4:	mov	r8, r7
    3ee8:	add	r5, sp, #24
    3eec:	add	r4, r4, #8
    3ef0:	mov	r6, r2
    3ef4:	mov	r2, #256	; 0x100
    3ef8:	mov	r1, fp
    3efc:	mov	r0, r5
    3f00:	bl	1520 <fread@plt>
    3f04:	add	r7, r7, r0
    3f08:	mov	r2, r9
    3f0c:	mov	r0, r5
    3f10:	mov	r1, r7
    3f14:	mov	r3, r5
    3f18:	vldmia	r3!, {s14}
    3f1c:	vcvt.f64.f32	d7, s14
    3f20:	cmp	r4, r3
    3f24:	vstmia	r2!, {d7}
    3f28:	bne	3f18 <ReadDoubleData.part.0+0x7ac>
    3f2c:	add	r8, r8, #256	; 0x100
    3f30:	add	r9, r9, #2048	; 0x800
    3f34:	cmp	r8, r6
    3f38:	bge	4240 <ReadDoubleData.part.0+0xad4>
    3f3c:	ldr	r3, [sp, #4]
    3f40:	ldr	r3, [r3]
    3f44:	b	3ef4 <ReadDoubleData.part.0+0x788>
    3f48:	cmp	r6, #256	; 0x100
    3f4c:	ble	4d84 <ReadDoubleData.part.0+0x1618>
    3f50:	ldr	r9, [sp, #8]
    3f54:	sub	r2, r6, #256	; 0x100
    3f58:	mov	r8, r7
    3f5c:	add	r5, sp, #24
    3f60:	add	r4, sp, #2064	; 0x810
    3f64:	str	r0, [sp, #12]
    3f68:	str	r2, [sp, #16]
    3f6c:	str	r6, [sp, #20]
    3f70:	mov	r2, #256	; 0x100
    3f74:	mov	r0, r5
    3f78:	ldr	r1, [sp, #12]
    3f7c:	bl	1520 <fread@plt>
    3f80:	sub	sl, r5, #8
    3f84:	add	r7, r7, r0
    3f88:	mov	fp, sl
    3f8c:	mov	r6, r9
    3f90:	str	r7, [sp]
    3f94:	ldrd	r0, [fp, #8]!
    3f98:	bl	4e0e4 <__aeabi_l2d>
    3f9c:	strd	r0, [r6], #8
    3fa0:	cmp	fp, r4
    3fa4:	bne	3f94 <ReadDoubleData.part.0+0x828>
    3fa8:	ldr	r3, [sp, #16]
    3fac:	add	r8, r8, #256	; 0x100
    3fb0:	add	r9, r9, #2048	; 0x800
    3fb4:	cmp	r8, r3
    3fb8:	bge	47d8 <ReadDoubleData.part.0+0x106c>
    3fbc:	ldr	r3, [sp, #4]
    3fc0:	ldr	r3, [r3]
    3fc4:	b	3f70 <ReadDoubleData.part.0+0x804>
    3fc8:	cmp	r6, #256	; 0x100
    3fcc:	ble	4cf4 <ReadDoubleData.part.0+0x1588>
    3fd0:	ldr	r9, [sp, #8]
    3fd4:	add	r5, sp, #24
    3fd8:	sub	r2, r6, #256	; 0x100
    3fdc:	mov	sl, r6
    3fe0:	add	r4, r5, #1020	; 0x3fc
    3fe4:	mov	r8, r7
    3fe8:	mov	r6, r2
    3fec:	mov	r2, #256	; 0x100
    3ff0:	mov	r1, fp
    3ff4:	mov	r0, r5
    3ff8:	bl	1520 <fread@plt>
    3ffc:	add	r7, r7, r0
    4000:	sub	r1, r5, #4
    4004:	mov	r0, r7
    4008:	mov	r3, r1
    400c:	mov	r2, r9
    4010:	ldr	ip, [r3, #4]!
    4014:	vmov	s14, ip
    4018:	cmp	r4, r3
    401c:	vcvt.f64.u32	d7, s14
    4020:	vstmia	r2!, {d7}
    4024:	bne	4010 <ReadDoubleData.part.0+0x8a4>
    4028:	add	r8, r8, #256	; 0x100
    402c:	add	r9, r9, #2048	; 0x800
    4030:	cmp	r8, r6
    4034:	bge	4650 <ReadDoubleData.part.0+0xee4>
    4038:	ldr	r3, [sp, #4]
    403c:	ldr	r3, [r3]
    4040:	b	3fec <ReadDoubleData.part.0+0x880>
    4044:	cmp	r6, #256	; 0x100
    4048:	ble	4cac <ReadDoubleData.part.0+0x1540>
    404c:	ldr	r9, [sp, #8]
    4050:	add	r5, sp, #24
    4054:	sub	r2, r6, #256	; 0x100
    4058:	mov	sl, r6
    405c:	add	r4, r5, #1020	; 0x3fc
    4060:	mov	r8, r7
    4064:	mov	r6, r2
    4068:	mov	r2, #256	; 0x100
    406c:	mov	r1, fp
    4070:	mov	r0, r5
    4074:	bl	1520 <fread@plt>
    4078:	add	r7, r7, r0
    407c:	sub	r1, r5, #4
    4080:	mov	r0, r7
    4084:	mov	r3, r1
    4088:	mov	r2, r9
    408c:	ldr	ip, [r3, #4]!
    4090:	vmov	s14, ip
    4094:	cmp	r4, r3
    4098:	vcvt.f64.s32	d7, s14
    409c:	vstmia	r2!, {d7}
    40a0:	bne	408c <ReadDoubleData.part.0+0x920>
    40a4:	add	r8, r8, #256	; 0x100
    40a8:	add	r9, r9, #2048	; 0x800
    40ac:	cmp	r8, r6
    40b0:	bge	43c0 <ReadDoubleData.part.0+0xc54>
    40b4:	ldr	r3, [sp, #4]
    40b8:	ldr	r3, [r3]
    40bc:	b	4068 <ReadDoubleData.part.0+0x8fc>
    40c0:	cmp	r6, #256	; 0x100
    40c4:	ble	4b44 <ReadDoubleData.part.0+0x13d8>
    40c8:	ldr	r9, [sp, #8]
    40cc:	sub	r2, r6, #256	; 0x100
    40d0:	mov	r8, r7
    40d4:	add	r5, sp, #24
    40d8:	add	r4, sp, #2064	; 0x810
    40dc:	str	r0, [sp, #12]
    40e0:	str	r2, [sp, #16]
    40e4:	str	r6, [sp, #20]
    40e8:	mov	r2, #256	; 0x100
    40ec:	mov	r0, r5
    40f0:	ldr	r1, [sp, #12]
    40f4:	bl	1520 <fread@plt>
    40f8:	sub	sl, r5, #8
    40fc:	add	r7, r7, r0
    4100:	mov	fp, sl
    4104:	mov	r6, r9
    4108:	str	r7, [sp]
    410c:	ldrd	r0, [fp, #8]!
    4110:	bl	4e0d0 <__aeabi_ul2d>
    4114:	strd	r0, [r6], #8
    4118:	cmp	fp, r4
    411c:	bne	410c <ReadDoubleData.part.0+0x9a0>
    4120:	ldr	r3, [sp, #16]
    4124:	add	r8, r8, #256	; 0x100
    4128:	add	r9, r9, #2048	; 0x800
    412c:	cmp	r8, r3
    4130:	bge	48d4 <ReadDoubleData.part.0+0x1168>
    4134:	ldr	r3, [sp, #4]
    4138:	ldr	r3, [r3]
    413c:	b	40e8 <ReadDoubleData.part.0+0x97c>
    4140:	cmp	r6, #256	; 0x100
    4144:	ble	4afc <ReadDoubleData.part.0+0x1390>
    4148:	ldr	r9, [sp, #8]
    414c:	add	r5, sp, #24
    4150:	sub	r2, r6, #256	; 0x100
    4154:	add	r4, r5, #508	; 0x1fc
    4158:	mov	sl, r6
    415c:	add	r4, r4, #2
    4160:	mov	r8, r7
    4164:	mov	r6, r2
    4168:	mov	r2, #256	; 0x100
    416c:	mov	r1, fp
    4170:	mov	r0, r5
    4174:	bl	1520 <fread@plt>
    4178:	add	r7, r7, r0
    417c:	sub	r1, r5, #2
    4180:	mov	r0, r7
    4184:	mov	r3, r1
    4188:	mov	r2, r9
    418c:	ldrsh	ip, [r3, #2]!
    4190:	vmov	s14, ip
    4194:	cmp	r4, r3
    4198:	vcvt.f64.s32	d7, s14
    419c:	vstmia	r2!, {d7}
    41a0:	bne	418c <ReadDoubleData.part.0+0xa20>
    41a4:	add	r8, r8, #256	; 0x100
    41a8:	add	r9, r9, #2048	; 0x800
    41ac:	cmp	r8, r6
    41b0:	bge	45d0 <ReadDoubleData.part.0+0xe64>
    41b4:	ldr	r3, [sp, #4]
    41b8:	ldr	r3, [r3]
    41bc:	b	4168 <ReadDoubleData.part.0+0x9fc>
    41c0:	cmp	r6, #256	; 0x100
    41c4:	ble	4a68 <ReadDoubleData.part.0+0x12fc>
    41c8:	ldr	r9, [sp, #8]
    41cc:	add	r5, sp, #24
    41d0:	sub	r2, r6, #256	; 0x100
    41d4:	add	r4, r5, #508	; 0x1fc
    41d8:	mov	sl, r6
    41dc:	add	r4, r4, #2
    41e0:	mov	r8, r7
    41e4:	mov	r6, r2
    41e8:	mov	r2, #256	; 0x100
    41ec:	mov	r1, fp
    41f0:	mov	r0, r5
    41f4:	bl	1520 <fread@plt>
    41f8:	add	r7, r7, r0
    41fc:	sub	r1, r5, #2
    4200:	mov	r0, r7
    4204:	mov	r3, r1
    4208:	mov	r2, r9
    420c:	ldrh	ip, [r3, #2]!
    4210:	vmov	s14, ip
    4214:	cmp	r4, r3
    4218:	vcvt.f64.u32	d7, s14
    421c:	vstmia	r2!, {d7}
    4220:	bne	420c <ReadDoubleData.part.0+0xaa0>
    4224:	add	r8, r8, #256	; 0x100
    4228:	add	r9, r9, #2048	; 0x800
    422c:	cmp	r6, r8
    4230:	ble	4440 <ReadDoubleData.part.0+0xcd4>
    4234:	ldr	r3, [sp, #4]
    4238:	ldr	r3, [r3]
    423c:	b	41e8 <ReadDoubleData.part.0+0xa7c>
    4240:	mov	r6, sl
    4244:	mov	sl, r0
    4248:	str	r1, [sp]
    424c:	sub	r3, r6, #256	; 0x100
    4250:	sub	r3, r3, #1
    4254:	lsr	r3, r3, #8
    4258:	add	r4, r3, #1
    425c:	lsl	r8, r4, #8
    4260:	cmp	r6, r8
    4264:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4268:	ldr	r3, [sp, #4]
    426c:	sub	r6, r6, r8
    4270:	mov	r0, r5
    4274:	mov	r2, r6
    4278:	mov	r1, fp
    427c:	ldr	r3, [r3]
    4280:	bl	1520 <fread@plt>
    4284:	add	r3, r7, r0
    4288:	cmp	r6, #0
    428c:	str	r3, [sp]
    4290:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4294:	ldr	r2, [sp, #8]
    4298:	add	r3, r6, r8
    429c:	add	r4, r2, r4, lsl #11
    42a0:	add	r3, r2, r3, lsl #3
    42a4:	vldmia	sl!, {s14}
    42a8:	vcvt.f64.f32	d7, s14
    42ac:	vstmia	r4!, {d7}
    42b0:	cmp	r3, r4
    42b4:	bne	42a4 <ReadDoubleData.part.0+0xb38>
    42b8:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    42bc:	ldr	r6, [sp, #20]
    42c0:	sub	r3, r6, #256	; 0x100
    42c4:	sub	r3, r3, #1
    42c8:	lsr	r3, r3, #8
    42cc:	add	r4, r3, #1
    42d0:	lsl	r8, r4, #8
    42d4:	cmp	r6, r8
    42d8:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    42dc:	ldr	r3, [sp, #4]
    42e0:	sub	r6, r6, r8
    42e4:	mov	r0, r5
    42e8:	mov	r2, r6
    42ec:	mov	r1, fp
    42f0:	ldr	r3, [r3]
    42f4:	bl	1520 <fread@plt>
    42f8:	add	r3, r7, r0
    42fc:	cmp	r6, #0
    4300:	str	r3, [sp]
    4304:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4308:	ldr	r3, [sp, #8]
    430c:	add	r5, r6, r8
    4310:	ldr	r6, [sp, #16]
    4314:	add	r4, r3, r4, lsl #11
    4318:	add	r5, r3, r5, lsl #3
    431c:	mov	r0, r6
    4320:	add	r6, r6, #4
    4324:	bl	1974 <Mat_floatSwap>
    4328:	vcvt.f64.f32	d0, s0
    432c:	vstmia	r4!, {d0}
    4330:	cmp	r5, r4
    4334:	bne	431c <ReadDoubleData.part.0+0xbb0>
    4338:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    433c:	ldr	r6, [sp, #20]
    4340:	sub	r3, r6, #256	; 0x100
    4344:	sub	r3, r3, #1
    4348:	lsr	r3, r3, #8
    434c:	add	r4, r3, #1
    4350:	lsl	r8, r4, #8
    4354:	cmp	r6, r8
    4358:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    435c:	ldr	r3, [sp, #4]
    4360:	sub	r6, r6, r8
    4364:	mov	r0, r5
    4368:	mov	r2, r6
    436c:	mov	r1, fp
    4370:	ldr	r3, [r3]
    4374:	bl	1520 <fread@plt>
    4378:	add	r3, r7, r0
    437c:	cmp	r6, #0
    4380:	str	r3, [sp]
    4384:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4388:	ldr	r3, [sp, #8]
    438c:	add	r5, r6, r8
    4390:	ldr	r6, [sp, #16]
    4394:	add	r4, r3, r4, lsl #11
    4398:	add	r5, r3, r5, lsl #3
    439c:	mov	r0, r6
    43a0:	add	r6, r6, #2
    43a4:	bl	192c <Mat_int16Swap>
    43a8:	vmov	s15, r0
    43ac:	vcvt.f64.s32	d7, s15
    43b0:	vstmia	r4!, {d7}
    43b4:	cmp	r5, r4
    43b8:	bne	439c <ReadDoubleData.part.0+0xc30>
    43bc:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    43c0:	mov	r6, sl
    43c4:	mov	sl, r1
    43c8:	str	r0, [sp]
    43cc:	sub	r3, r6, #256	; 0x100
    43d0:	sub	r3, r3, #1
    43d4:	lsr	r3, r3, #8
    43d8:	add	r4, r3, #1
    43dc:	lsl	r8, r4, #8
    43e0:	cmp	r6, r8
    43e4:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    43e8:	ldr	r3, [sp, #4]
    43ec:	sub	r6, r6, r8
    43f0:	mov	r0, r5
    43f4:	mov	r2, r6
    43f8:	mov	r1, fp
    43fc:	ldr	r3, [r3]
    4400:	bl	1520 <fread@plt>
    4404:	add	r3, r7, r0
    4408:	cmp	r6, #0
    440c:	str	r3, [sp]
    4410:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4414:	ldr	r2, [sp, #8]
    4418:	add	r3, r6, r8
    441c:	add	r4, r2, r4, lsl #11
    4420:	add	r3, r2, r3, lsl #3
    4424:	ldr	r2, [sl, #4]!
    4428:	vmov	s14, r2
    442c:	vcvt.f64.s32	d7, s14
    4430:	vstmia	r4!, {d7}
    4434:	cmp	r3, r4
    4438:	bne	4424 <ReadDoubleData.part.0+0xcb8>
    443c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4440:	mov	r6, sl
    4444:	mov	sl, r1
    4448:	str	r0, [sp]
    444c:	sub	r3, r6, #256	; 0x100
    4450:	sub	r3, r3, #1
    4454:	lsr	r3, r3, #8
    4458:	add	r4, r3, #1
    445c:	lsl	r8, r4, #8
    4460:	cmp	r6, r8
    4464:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4468:	ldr	r3, [sp, #4]
    446c:	sub	r6, r6, r8
    4470:	mov	r0, r5
    4474:	mov	r2, r6
    4478:	mov	r1, fp
    447c:	ldr	r3, [r3]
    4480:	bl	1520 <fread@plt>
    4484:	add	r3, r7, r0
    4488:	cmp	r6, #0
    448c:	str	r3, [sp]
    4490:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4494:	ldr	r2, [sp, #8]
    4498:	add	r3, r6, r8
    449c:	add	r4, r2, r4, lsl #11
    44a0:	add	r3, r2, r3, lsl #3
    44a4:	ldrh	r2, [sl, #2]!
    44a8:	vmov	s14, r2
    44ac:	vcvt.f64.u32	d7, s14
    44b0:	vstmia	r4!, {d7}
    44b4:	cmp	r3, r4
    44b8:	bne	44a4 <ReadDoubleData.part.0+0xd38>
    44bc:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    44c0:	add	r4, sp, #24
    44c4:	mov	r2, r6
    44c8:	mov	r0, r4
    44cc:	mov	r1, fp
    44d0:	bl	1520 <fread@plt>
    44d4:	cmp	r6, #0
    44d8:	str	r0, [sp]
    44dc:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    44e0:	ldr	r3, [sp, #8]
    44e4:	sub	r2, r4, #1
    44e8:	add	r1, r3, r6, lsl #3
    44ec:	ldrb	r0, [r2, #1]!
    44f0:	vmov	s14, r0
    44f4:	vcvt.f64.u32	d7, s14
    44f8:	vstmia	r3!, {d7}
    44fc:	cmp	r1, r3
    4500:	bne	44ec <ReadDoubleData.part.0+0xd80>
    4504:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4508:	add	r4, sp, #24
    450c:	mov	r2, r6
    4510:	mov	r0, r4
    4514:	mov	r1, fp
    4518:	bl	1520 <fread@plt>
    451c:	cmp	r6, #0
    4520:	str	r0, [sp]
    4524:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4528:	ldr	r3, [sp, #8]
    452c:	sub	r2, r4, #1
    4530:	add	r1, r3, r6, lsl #3
    4534:	ldrsb	r0, [r2, #1]!
    4538:	vmov	s14, r0
    453c:	vcvt.f64.s32	d7, s14
    4540:	vstmia	r3!, {d7}
    4544:	cmp	r3, r1
    4548:	bne	4534 <ReadDoubleData.part.0+0xdc8>
    454c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4550:	ldr	r6, [sp, #20]
    4554:	sub	r3, r6, #256	; 0x100
    4558:	sub	r3, r3, #1
    455c:	lsr	r3, r3, #8
    4560:	add	r4, r3, #1
    4564:	lsl	r8, r4, #8
    4568:	cmp	r6, r8
    456c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4570:	ldr	r3, [sp, #4]
    4574:	sub	r6, r6, r8
    4578:	mov	r0, r5
    457c:	mov	r2, r6
    4580:	mov	r1, fp
    4584:	ldr	r3, [r3]
    4588:	bl	1520 <fread@plt>
    458c:	add	r3, r7, r0
    4590:	cmp	r6, #0
    4594:	str	r3, [sp]
    4598:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    459c:	ldr	r3, [sp, #8]
    45a0:	add	r5, r6, r8
    45a4:	ldr	r6, [sp, #12]
    45a8:	add	r4, r3, r4, lsl #11
    45ac:	add	r5, r3, r5, lsl #3
    45b0:	mov	r0, r6
    45b4:	add	r6, r6, #8
    45b8:	bl	17ec <Mat_int64Swap>
    45bc:	bl	4e0e4 <__aeabi_l2d>
    45c0:	strd	r0, [r4], #8
    45c4:	cmp	r5, r4
    45c8:	bne	45b0 <ReadDoubleData.part.0+0xe44>
    45cc:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    45d0:	mov	r6, sl
    45d4:	mov	sl, r1
    45d8:	str	r0, [sp]
    45dc:	sub	r3, r6, #256	; 0x100
    45e0:	sub	r3, r3, #1
    45e4:	lsr	r3, r3, #8
    45e8:	add	r4, r3, #1
    45ec:	lsl	r8, r4, #8
    45f0:	cmp	r6, r8
    45f4:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    45f8:	ldr	r3, [sp, #4]
    45fc:	sub	r6, r6, r8
    4600:	mov	r0, r5
    4604:	mov	r2, r6
    4608:	mov	r1, fp
    460c:	ldr	r3, [r3]
    4610:	bl	1520 <fread@plt>
    4614:	add	r3, r7, r0
    4618:	cmp	r6, #0
    461c:	str	r3, [sp]
    4620:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4624:	ldr	r2, [sp, #8]
    4628:	add	r3, r6, r8
    462c:	add	r4, r2, r4, lsl #11
    4630:	add	r3, r2, r3, lsl #3
    4634:	ldrsh	r2, [sl, #2]!
    4638:	vmov	s14, r2
    463c:	vcvt.f64.s32	d7, s14
    4640:	vstmia	r4!, {d7}
    4644:	cmp	r3, r4
    4648:	bne	4634 <ReadDoubleData.part.0+0xec8>
    464c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4650:	mov	r6, sl
    4654:	mov	sl, r1
    4658:	str	r0, [sp]
    465c:	sub	r3, r6, #256	; 0x100
    4660:	sub	r3, r3, #1
    4664:	lsr	r3, r3, #8
    4668:	add	r4, r3, #1
    466c:	lsl	r8, r4, #8
    4670:	cmp	r6, r8
    4674:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4678:	ldr	r3, [sp, #4]
    467c:	sub	r6, r6, r8
    4680:	mov	r0, r5
    4684:	mov	r2, r6
    4688:	mov	r1, fp
    468c:	ldr	r3, [r3]
    4690:	bl	1520 <fread@plt>
    4694:	add	r3, r7, r0
    4698:	cmp	r6, #0
    469c:	str	r3, [sp]
    46a0:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    46a4:	ldr	r2, [sp, #8]
    46a8:	add	r3, r6, r8
    46ac:	add	r4, r2, r4, lsl #11
    46b0:	add	r3, r2, r3, lsl #3
    46b4:	ldr	r2, [sl, #4]!
    46b8:	vmov	s14, r2
    46bc:	vcvt.f64.u32	d7, s14
    46c0:	vstmia	r4!, {d7}
    46c4:	cmp	r3, r4
    46c8:	bne	46b4 <ReadDoubleData.part.0+0xf48>
    46cc:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    46d0:	ldr	r6, [sp, #20]
    46d4:	sub	r3, r6, #256	; 0x100
    46d8:	sub	r3, r3, #1
    46dc:	lsr	r3, r3, #8
    46e0:	add	r4, r3, #1
    46e4:	lsl	r8, r4, #8
    46e8:	cmp	r6, r8
    46ec:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    46f0:	ldr	r3, [sp, #4]
    46f4:	sub	r6, r6, r8
    46f8:	mov	r0, r5
    46fc:	mov	r2, r6
    4700:	mov	r1, fp
    4704:	ldr	r3, [r3]
    4708:	bl	1520 <fread@plt>
    470c:	add	r3, r7, r0
    4710:	cmp	r6, #0
    4714:	str	r3, [sp]
    4718:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    471c:	ldr	r3, [sp, #8]
    4720:	add	r5, r6, r8
    4724:	ldr	r6, [sp, #16]
    4728:	add	r4, r3, r4, lsl #11
    472c:	add	r5, r3, r5, lsl #3
    4730:	mov	r0, r6
    4734:	add	r6, r6, #4
    4738:	bl	18f8 <Mat_uint32Swap>
    473c:	vmov	s15, r0
    4740:	vcvt.f64.u32	d7, s15
    4744:	vstmia	r4!, {d7}
    4748:	cmp	r5, r4
    474c:	bne	4730 <ReadDoubleData.part.0+0xfc4>
    4750:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4754:	ldr	r6, [sp, #20]
    4758:	sub	r3, r6, #256	; 0x100
    475c:	sub	r3, r3, #1
    4760:	lsr	r3, r3, #8
    4764:	add	r4, r3, #1
    4768:	lsl	r8, r4, #8
    476c:	cmp	r6, r8
    4770:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4774:	ldr	r3, [sp, #4]
    4778:	sub	r6, r6, r8
    477c:	mov	r0, r5
    4780:	mov	r2, r6
    4784:	mov	r1, fp
    4788:	ldr	r3, [r3]
    478c:	bl	1520 <fread@plt>
    4790:	add	r3, r7, r0
    4794:	cmp	r6, #0
    4798:	str	r3, [sp]
    479c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    47a0:	ldr	r3, [sp, #8]
    47a4:	add	r5, r6, r8
    47a8:	ldr	r6, [sp, #16]
    47ac:	add	r4, r3, r4, lsl #11
    47b0:	add	r5, r3, r5, lsl #3
    47b4:	mov	r0, r6
    47b8:	add	r6, r6, #4
    47bc:	bl	18c4 <Mat_int32Swap>
    47c0:	vmov	s15, r0
    47c4:	vcvt.f64.s32	d7, s15
    47c8:	vstmia	r4!, {d7}
    47cc:	cmp	r5, r4
    47d0:	bne	47b4 <ReadDoubleData.part.0+0x1048>
    47d4:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    47d8:	ldr	fp, [sp, #12]
    47dc:	ldr	r6, [sp, #20]
    47e0:	sub	r3, r6, #256	; 0x100
    47e4:	sub	r3, r3, #1
    47e8:	lsr	r3, r3, #8
    47ec:	add	r4, r3, #1
    47f0:	lsl	r8, r4, #8
    47f4:	cmp	r6, r8
    47f8:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    47fc:	ldr	r3, [sp, #4]
    4800:	sub	r6, r6, r8
    4804:	mov	r0, r5
    4808:	mov	r2, r6
    480c:	mov	r1, fp
    4810:	ldr	r3, [r3]
    4814:	bl	1520 <fread@plt>
    4818:	add	r3, r7, r0
    481c:	cmp	r6, #0
    4820:	str	r3, [sp]
    4824:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4828:	ldr	r3, [sp, #8]
    482c:	add	r5, r6, r8
    4830:	mov	r6, sl
    4834:	add	r4, r3, r4, lsl #11
    4838:	add	r5, r3, r5, lsl #3
    483c:	ldrd	r0, [r6, #8]!
    4840:	bl	4e0e4 <__aeabi_l2d>
    4844:	strd	r0, [r4], #8
    4848:	cmp	r4, r5
    484c:	bne	483c <ReadDoubleData.part.0+0x10d0>
    4850:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4854:	ldr	r6, [sp, #20]
    4858:	sub	r3, r6, #256	; 0x100
    485c:	sub	r3, r3, #1
    4860:	lsr	r3, r3, #8
    4864:	add	r4, r3, #1
    4868:	lsl	r8, r4, #8
    486c:	cmp	r6, r8
    4870:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4874:	ldr	r3, [sp, #4]
    4878:	sub	r6, r6, r8
    487c:	mov	r0, r5
    4880:	mov	r2, r6
    4884:	mov	r1, fp
    4888:	ldr	r3, [r3]
    488c:	bl	1520 <fread@plt>
    4890:	add	r3, r7, r0
    4894:	cmp	r6, #0
    4898:	str	r3, [sp]
    489c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    48a0:	ldr	r3, [sp, #8]
    48a4:	add	r5, r6, r8
    48a8:	ldr	r6, [sp, #16]
    48ac:	add	r4, r3, r4, lsl #11
    48b0:	add	r5, r3, r5, lsl #3
    48b4:	mov	r0, r6
    48b8:	add	r6, r6, #8
    48bc:	bl	1858 <Mat_uint64Swap>
    48c0:	bl	4e0d0 <__aeabi_ul2d>
    48c4:	strd	r0, [r4], #8
    48c8:	cmp	r4, r5
    48cc:	bne	48b4 <ReadDoubleData.part.0+0x1148>
    48d0:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    48d4:	ldr	fp, [sp, #12]
    48d8:	ldr	r6, [sp, #20]
    48dc:	sub	r3, r6, #256	; 0x100
    48e0:	sub	r3, r3, #1
    48e4:	lsr	r3, r3, #8
    48e8:	add	r4, r3, #1
    48ec:	lsl	r8, r4, #8
    48f0:	cmp	r6, r8
    48f4:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    48f8:	ldr	r3, [sp, #4]
    48fc:	sub	r6, r6, r8
    4900:	mov	r0, r5
    4904:	mov	r2, r6
    4908:	mov	r1, fp
    490c:	ldr	r3, [r3]
    4910:	bl	1520 <fread@plt>
    4914:	add	r3, r7, r0
    4918:	cmp	r6, #0
    491c:	str	r3, [sp]
    4920:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4924:	ldr	r3, [sp, #8]
    4928:	add	r5, r6, r8
    492c:	mov	r6, sl
    4930:	add	r4, r3, r4, lsl #11
    4934:	add	r5, r3, r5, lsl #3
    4938:	ldrd	r0, [r6, #8]!
    493c:	bl	4e0d0 <__aeabi_ul2d>
    4940:	strd	r0, [r4], #8
    4944:	cmp	r4, r5
    4948:	bne	4938 <ReadDoubleData.part.0+0x11cc>
    494c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4950:	ldr	r6, [sp, #20]
    4954:	sub	r3, r6, #256	; 0x100
    4958:	sub	r3, r3, #1
    495c:	lsr	r3, r3, #8
    4960:	add	r4, r3, #1
    4964:	lsl	r8, r4, #8
    4968:	cmp	r6, r8
    496c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4970:	ldr	r3, [sp, #4]
    4974:	sub	r6, r6, r8
    4978:	mov	r0, r5
    497c:	mov	r2, r6
    4980:	mov	r1, fp
    4984:	ldr	r3, [r3]
    4988:	bl	1520 <fread@plt>
    498c:	add	r3, r7, r0
    4990:	cmp	r6, #0
    4994:	str	r3, [sp]
    4998:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    499c:	ldr	r3, [sp, #8]
    49a0:	add	r5, r8, r6
    49a4:	ldr	r6, [sp, #16]
    49a8:	add	r4, r3, r4, lsl #11
    49ac:	add	r5, r3, r5, lsl #3
    49b0:	mov	r0, r6
    49b4:	add	r6, r6, #2
    49b8:	bl	1950 <Mat_uint16Swap>
    49bc:	vmov	s15, r0
    49c0:	vcvt.f64.u32	d7, s15
    49c4:	vstmia	r4!, {d7}
    49c8:	cmp	r5, r4
    49cc:	bne	49b0 <ReadDoubleData.part.0+0x1244>
    49d0:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    49d4:	add	r4, sp, #24
    49d8:	mov	r2, r6
    49dc:	mov	r0, r4
    49e0:	mov	r1, fp
    49e4:	bl	1520 <fread@plt>
    49e8:	cmp	r6, #0
    49ec:	str	r0, [sp]
    49f0:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    49f4:	ldr	r5, [sp, #8]
    49f8:	add	r6, r5, r6, lsl #3
    49fc:	mov	r0, r4
    4a00:	add	r4, r4, #2
    4a04:	bl	192c <Mat_int16Swap>
    4a08:	vmov	s15, r0
    4a0c:	vcvt.f64.s32	d7, s15
    4a10:	vstmia	r5!, {d7}
    4a14:	cmp	r6, r5
    4a18:	bne	49fc <ReadDoubleData.part.0+0x1290>
    4a1c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4a20:	add	r4, sp, #24
    4a24:	mov	r2, r6
    4a28:	mov	r0, r4
    4a2c:	mov	r1, fp
    4a30:	bl	1520 <fread@plt>
    4a34:	cmp	r6, #0
    4a38:	str	r0, [sp]
    4a3c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4a40:	ldr	r5, [sp, #8]
    4a44:	add	r6, r5, r6, lsl #3
    4a48:	mov	r0, r4
    4a4c:	add	r4, r4, #8
    4a50:	bl	1858 <Mat_uint64Swap>
    4a54:	bl	4e0d0 <__aeabi_ul2d>
    4a58:	strd	r0, [r5], #8
    4a5c:	cmp	r5, r6
    4a60:	bne	4a48 <ReadDoubleData.part.0+0x12dc>
    4a64:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4a68:	add	r4, sp, #24
    4a6c:	mov	r2, r6
    4a70:	mov	r0, r4
    4a74:	mov	r1, fp
    4a78:	bl	1520 <fread@plt>
    4a7c:	cmp	r6, #0
    4a80:	str	r0, [sp]
    4a84:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4a88:	ldr	r3, [sp, #8]
    4a8c:	sub	r2, r4, #2
    4a90:	add	r1, r3, r6, lsl #3
    4a94:	ldrh	r0, [r2, #2]!
    4a98:	vmov	s14, r0
    4a9c:	vcvt.f64.u32	d7, s14
    4aa0:	vstmia	r3!, {d7}
    4aa4:	cmp	r3, r1
    4aa8:	bne	4a94 <ReadDoubleData.part.0+0x1328>
    4aac:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4ab0:	add	r4, sp, #24
    4ab4:	mov	r2, r6
    4ab8:	mov	r0, r4
    4abc:	mov	r1, fp
    4ac0:	bl	1520 <fread@plt>
    4ac4:	cmp	r6, #0
    4ac8:	str	r0, [sp]
    4acc:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4ad0:	ldr	r5, [sp, #8]
    4ad4:	add	r6, r5, r6, lsl #3
    4ad8:	mov	r0, r4
    4adc:	add	r4, r4, #4
    4ae0:	bl	18f8 <Mat_uint32Swap>
    4ae4:	vmov	s15, r0
    4ae8:	vcvt.f64.u32	d7, s15
    4aec:	vstmia	r5!, {d7}
    4af0:	cmp	r6, r5
    4af4:	bne	4ad8 <ReadDoubleData.part.0+0x136c>
    4af8:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4afc:	add	r4, sp, #24
    4b00:	mov	r2, r6
    4b04:	mov	r0, r4
    4b08:	mov	r1, fp
    4b0c:	bl	1520 <fread@plt>
    4b10:	cmp	r6, #0
    4b14:	str	r0, [sp]
    4b18:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4b1c:	ldr	r3, [sp, #8]
    4b20:	sub	r2, r4, #2
    4b24:	add	r1, r3, r6, lsl #3
    4b28:	ldrsh	r0, [r2, #2]!
    4b2c:	vmov	s14, r0
    4b30:	vcvt.f64.s32	d7, s14
    4b34:	vstmia	r3!, {d7}
    4b38:	cmp	r1, r3
    4b3c:	bne	4b28 <ReadDoubleData.part.0+0x13bc>
    4b40:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4b44:	add	r5, sp, #24
    4b48:	mov	r2, r6
    4b4c:	mov	r0, r5
    4b50:	mov	r1, fp
    4b54:	bl	1520 <fread@plt>
    4b58:	cmp	r6, #0
    4b5c:	str	r0, [sp]
    4b60:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4b64:	ldr	r4, [sp, #8]
    4b68:	sub	r5, r5, #8
    4b6c:	add	r6, r4, r6, lsl #3
    4b70:	ldrd	r0, [r5, #8]!
    4b74:	bl	4e0d0 <__aeabi_ul2d>
    4b78:	strd	r0, [r4], #8
    4b7c:	cmp	r4, r6
    4b80:	bne	4b70 <ReadDoubleData.part.0+0x1404>
    4b84:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4b88:	add	r4, sp, #24
    4b8c:	mov	r2, r6
    4b90:	mov	r0, r4
    4b94:	mov	r1, fp
    4b98:	bl	1520 <fread@plt>
    4b9c:	cmp	r6, #0
    4ba0:	str	r0, [sp]
    4ba4:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4ba8:	ldr	r5, [sp, #8]
    4bac:	add	r6, r5, r6, lsl #3
    4bb0:	mov	r0, r4
    4bb4:	add	r4, r4, #2
    4bb8:	bl	1950 <Mat_uint16Swap>
    4bbc:	vmov	s15, r0
    4bc0:	vcvt.f64.u32	d7, s15
    4bc4:	vstmia	r5!, {d7}
    4bc8:	cmp	r6, r5
    4bcc:	bne	4bb0 <ReadDoubleData.part.0+0x1444>
    4bd0:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4bd4:	add	r4, sp, #24
    4bd8:	mov	r2, r6
    4bdc:	mov	r0, r4
    4be0:	mov	r1, fp
    4be4:	bl	1520 <fread@plt>
    4be8:	cmp	r6, #0
    4bec:	str	r0, [sp]
    4bf0:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4bf4:	ldr	r5, [sp, #8]
    4bf8:	add	r6, r5, r6, lsl #3
    4bfc:	mov	r0, r4
    4c00:	add	r4, r4, #4
    4c04:	bl	18c4 <Mat_int32Swap>
    4c08:	vmov	s15, r0
    4c0c:	vcvt.f64.s32	d7, s15
    4c10:	vstmia	r5!, {d7}
    4c14:	cmp	r6, r5
    4c18:	bne	4bfc <ReadDoubleData.part.0+0x1490>
    4c1c:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4c20:	add	r4, sp, #24
    4c24:	mov	r2, r6
    4c28:	mov	r0, r4
    4c2c:	mov	r1, fp
    4c30:	bl	1520 <fread@plt>
    4c34:	cmp	r6, #0
    4c38:	str	r0, [sp]
    4c3c:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4c40:	ldr	r5, [sp, #8]
    4c44:	add	r6, r5, r6, lsl #3
    4c48:	mov	r0, r4
    4c4c:	add	r4, r4, #4
    4c50:	bl	1974 <Mat_floatSwap>
    4c54:	vcvt.f64.f32	d0, s0
    4c58:	vstmia	r5!, {d0}
    4c5c:	cmp	r6, r5
    4c60:	bne	4c48 <ReadDoubleData.part.0+0x14dc>
    4c64:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4c68:	add	r4, sp, #24
    4c6c:	mov	r2, r6
    4c70:	mov	r0, r4
    4c74:	mov	r1, fp
    4c78:	bl	1520 <fread@plt>
    4c7c:	cmp	r6, #0
    4c80:	str	r0, [sp]
    4c84:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4c88:	ldr	r3, [sp, #8]
    4c8c:	mov	r2, r4
    4c90:	add	r1, r3, r6, lsl #3
    4c94:	vldmia	r2!, {s14}
    4c98:	vcvt.f64.f32	d7, s14
    4c9c:	vstmia	r3!, {d7}
    4ca0:	cmp	r1, r3
    4ca4:	bne	4c94 <ReadDoubleData.part.0+0x1528>
    4ca8:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4cac:	add	r4, sp, #24
    4cb0:	mov	r2, r6
    4cb4:	mov	r0, r4
    4cb8:	mov	r1, fp
    4cbc:	bl	1520 <fread@plt>
    4cc0:	cmp	r6, #0
    4cc4:	str	r0, [sp]
    4cc8:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4ccc:	ldr	r3, [sp, #8]
    4cd0:	sub	r2, r4, #4
    4cd4:	add	r1, r3, r6, lsl #3
    4cd8:	ldr	r0, [r2, #4]!
    4cdc:	vmov	s14, r0
    4ce0:	vcvt.f64.s32	d7, s14
    4ce4:	vstmia	r3!, {d7}
    4ce8:	cmp	r1, r3
    4cec:	bne	4cd8 <ReadDoubleData.part.0+0x156c>
    4cf0:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4cf4:	add	r4, sp, #24
    4cf8:	mov	r2, r6
    4cfc:	mov	r0, r4
    4d00:	mov	r1, fp
    4d04:	bl	1520 <fread@plt>
    4d08:	cmp	r6, #0
    4d0c:	str	r0, [sp]
    4d10:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4d14:	ldr	r3, [sp, #8]
    4d18:	sub	r2, r4, #4
    4d1c:	add	r1, r3, r6, lsl #3
    4d20:	ldr	r0, [r2, #4]!
    4d24:	vmov	s14, r0
    4d28:	vcvt.f64.u32	d7, s14
    4d2c:	vstmia	r3!, {d7}
    4d30:	cmp	r1, r3
    4d34:	bne	4d20 <ReadDoubleData.part.0+0x15b4>
    4d38:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4d3c:	add	r4, sp, #24
    4d40:	mov	r2, r6
    4d44:	mov	r0, r4
    4d48:	mov	r1, fp
    4d4c:	bl	1520 <fread@plt>
    4d50:	cmp	r6, #0
    4d54:	str	r0, [sp]
    4d58:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4d5c:	ldr	r5, [sp, #8]
    4d60:	add	r6, r5, r6, lsl #3
    4d64:	mov	r0, r4
    4d68:	add	r4, r4, #8
    4d6c:	bl	17ec <Mat_int64Swap>
    4d70:	bl	4e0e4 <__aeabi_l2d>
    4d74:	strd	r0, [r5], #8
    4d78:	cmp	r5, r6
    4d7c:	bne	4d64 <ReadDoubleData.part.0+0x15f8>
    4d80:	b	3c5c <ReadDoubleData.part.0+0x4f0>
    4d84:	add	r5, sp, #24
    4d88:	mov	r2, r6
    4d8c:	mov	r0, r5
    4d90:	mov	r1, fp
    4d94:	bl	1520 <fread@plt>
    4d98:	cmp	r6, #0
    4d9c:	str	r0, [sp]
    4da0:	ble	3c5c <ReadDoubleData.part.0+0x4f0>
    4da4:	ldr	r4, [sp, #8]
    4da8:	sub	r5, r5, #8
    4dac:	add	r6, r4, r6, lsl #3
    4db0:	ldrd	r0, [r5, #8]!
    4db4:	bl	4e0e4 <__aeabi_l2d>
    4db8:	strd	r0, [r4], #8
    4dbc:	cmp	r4, r6
    4dc0:	bne	4db0 <ReadDoubleData.part.0+0x1644>
    4dc4:	b	3c5c <ReadDoubleData.part.0+0x4f0>

00004dc8 <ReadSingleData.part.1>:
    4dc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4dcc:	mov	r4, r2
    4dd0:	strd	r6, [sp, #8]
    4dd4:	strd	r8, [sp, #16]
    4dd8:	strd	sl, [sp, #24]
    4ddc:	mov	sl, r3
    4de0:	str	lr, [sp, #32]
    4de4:	sub	sp, sp, #2064	; 0x810
    4de8:	sub	sp, sp, #12
    4dec:	strd	r0, [sp]
    4df0:	mov	r0, r2
    4df4:	bl	1598 <Mat_SizeOf@plt>
    4df8:	sub	r3, r4, #1
    4dfc:	mov	fp, r0
    4e00:	cmp	r3, #8
    4e04:	addls	pc, pc, r3, lsl #2
    4e08:	b	52fc <ReadSingleData.part.1+0x534>
    4e0c:	b	4ed0 <ReadSingleData.part.1+0x108>
    4e10:	b	4ff4 <ReadSingleData.part.1+0x22c>
    4e14:	b	511c <ReadSingleData.part.1+0x354>
    4e18:	b	4f54 <ReadSingleData.part.1+0x18c>
    4e1c:	b	51bc <ReadSingleData.part.1+0x3f4>
    4e20:	b	5078 <ReadSingleData.part.1+0x2b0>
    4e24:	b	5260 <ReadSingleData.part.1+0x498>
    4e28:	b	52fc <ReadSingleData.part.1+0x534>
    4e2c:	b	4e30 <ReadSingleData.part.1+0x68>
    4e30:	ldr	r3, [sp]
    4e34:	ldr	r6, [r3, #20]
    4e38:	ldr	r3, [r3]
    4e3c:	cmp	r6, #0
    4e40:	beq	56d4 <ReadSingleData.part.1+0x90c>
    4e44:	cmp	sl, #256	; 0x100
    4e48:	ble	59fc <ReadSingleData.part.1+0xc34>
    4e4c:	ldr	r8, [sp, #4]
    4e50:	mov	r7, #0
    4e54:	add	r4, sp, #2064	; 0x810
    4e58:	sub	r2, sl, #256	; 0x100
    4e5c:	mov	r6, r7
    4e60:	add	r5, sp, #24
    4e64:	add	r4, r4, #8
    4e68:	str	r2, [sp, #12]
    4e6c:	str	sl, [sp, #20]
    4e70:	mov	r2, #256	; 0x100
    4e74:	mov	r1, fp
    4e78:	mov	r0, r5
    4e7c:	mov	sl, r8
    4e80:	bl	1520 <fread@plt>
    4e84:	add	r6, r6, r0
    4e88:	mov	r9, r5
    4e8c:	str	r6, [sp, #8]
    4e90:	str	r5, [sp, #16]
    4e94:	mov	r0, r9
    4e98:	add	r9, r9, #8
    4e9c:	bl	19a4 <Mat_doubleSwap>
    4ea0:	vcvt.f32.f64	s0, d0
    4ea4:	cmp	r9, r4
    4ea8:	vstmia	sl!, {s0}
    4eac:	bne	4e94 <ReadSingleData.part.1+0xcc>
    4eb0:	ldr	r3, [sp, #12]
    4eb4:	add	r7, r7, #256	; 0x100
    4eb8:	add	r8, r8, #1024	; 0x400
    4ebc:	cmp	r7, r3
    4ec0:	bge	5dfc <ReadSingleData.part.1+0x1034>
    4ec4:	ldr	r3, [sp]
    4ec8:	ldr	r3, [r3]
    4ecc:	b	4e70 <ReadSingleData.part.1+0xa8>
    4ed0:	ldr	r2, [sp]
    4ed4:	cmp	sl, #256	; 0x100
    4ed8:	ldr	r3, [r2]
    4edc:	ble	5c74 <ReadSingleData.part.1+0xeac>
    4ee0:	mov	r7, #0
    4ee4:	add	r5, sp, #24
    4ee8:	str	sl, [sp, #8]
    4eec:	ldr	r8, [sp, #4]
    4ef0:	sub	r9, sl, #256	; 0x100
    4ef4:	mov	r6, r7
    4ef8:	add	r4, r5, #255	; 0xff
    4efc:	mov	sl, r2
    4f00:	mov	r2, #256	; 0x100
    4f04:	mov	r1, fp
    4f08:	mov	r0, r5
    4f0c:	bl	1520 <fread@plt>
    4f10:	add	r6, r6, r0
    4f14:	sub	r1, r5, #1
    4f18:	mov	r0, r6
    4f1c:	mov	r3, r1
    4f20:	mov	r2, r8
    4f24:	ldrsb	ip, [r3, #1]!
    4f28:	vmov	s15, ip
    4f2c:	cmp	r4, r3
    4f30:	vcvt.f32.s32	s15, s15
    4f34:	vstmia	r2!, {s15}
    4f38:	bne	4f24 <ReadSingleData.part.1+0x15c>
    4f3c:	add	r7, r7, #256	; 0x100
    4f40:	add	r8, r8, #1024	; 0x400
    4f44:	cmp	r9, r7
    4f48:	ble	5458 <ReadSingleData.part.1+0x690>
    4f4c:	ldr	r3, [sl]
    4f50:	b	4f00 <ReadSingleData.part.1+0x138>
    4f54:	ldr	r3, [sp]
    4f58:	ldr	r6, [r3, #20]
    4f5c:	ldr	r3, [r3]
    4f60:	cmp	r6, #0
    4f64:	beq	55e8 <ReadSingleData.part.1+0x820>
    4f68:	cmp	sl, #256	; 0x100
    4f6c:	ble	59b0 <ReadSingleData.part.1+0xbe8>
    4f70:	ldr	r8, [sp, #4]
    4f74:	mov	r7, #0
    4f78:	sub	r2, sl, #256	; 0x100
    4f7c:	mov	r6, r7
    4f80:	add	r5, sp, #24
    4f84:	add	r4, sp, #536	; 0x218
    4f88:	str	r2, [sp, #12]
    4f8c:	str	sl, [sp, #20]
    4f90:	mov	r2, #256	; 0x100
    4f94:	mov	r1, fp
    4f98:	mov	r0, r5
    4f9c:	mov	sl, r8
    4fa0:	bl	1520 <fread@plt>
    4fa4:	add	r6, r6, r0
    4fa8:	mov	r9, r5
    4fac:	str	r6, [sp, #8]
    4fb0:	str	r5, [sp, #16]
    4fb4:	mov	r0, r9
    4fb8:	add	r9, r9, #2
    4fbc:	bl	1950 <Mat_uint16Swap>
    4fc0:	vmov	s15, r0
    4fc4:	cmp	r4, r9
    4fc8:	vcvt.f32.u32	s15, s15
    4fcc:	vstmia	sl!, {s15}
    4fd0:	bne	4fb4 <ReadSingleData.part.1+0x1ec>
    4fd4:	ldr	r3, [sp, #12]
    4fd8:	add	r7, r7, #256	; 0x100
    4fdc:	add	r8, r8, #1024	; 0x400
    4fe0:	cmp	r7, r3
    4fe4:	bge	5bf0 <ReadSingleData.part.1+0xe28>
    4fe8:	ldr	r3, [sp]
    4fec:	ldr	r3, [r3]
    4ff0:	b	4f90 <ReadSingleData.part.1+0x1c8>
    4ff4:	ldr	r2, [sp]
    4ff8:	cmp	sl, #256	; 0x100
    4ffc:	ldr	r3, [r2]
    5000:	ble	5d3c <ReadSingleData.part.1+0xf74>
    5004:	mov	r7, #0
    5008:	add	r5, sp, #24
    500c:	str	sl, [sp, #8]
    5010:	ldr	r8, [sp, #4]
    5014:	sub	r9, sl, #256	; 0x100
    5018:	mov	r6, r7
    501c:	add	r4, r5, #255	; 0xff
    5020:	mov	sl, r2
    5024:	mov	r2, #256	; 0x100
    5028:	mov	r1, fp
    502c:	mov	r0, r5
    5030:	bl	1520 <fread@plt>
    5034:	add	r6, r6, r0
    5038:	sub	r1, r5, #1
    503c:	mov	r0, r6
    5040:	mov	r3, r1
    5044:	mov	r2, r8
    5048:	ldrb	ip, [r3, #1]!
    504c:	vmov	s15, ip
    5050:	cmp	r4, r3
    5054:	vcvt.f32.u32	s15, s15
    5058:	vstmia	r2!, {s15}
    505c:	bne	5048 <ReadSingleData.part.1+0x280>
    5060:	add	r7, r7, #256	; 0x100
    5064:	add	r8, r8, #1024	; 0x400
    5068:	cmp	r9, r7
    506c:	ble	5484 <ReadSingleData.part.1+0x6bc>
    5070:	ldr	r3, [sl]
    5074:	b	5024 <ReadSingleData.part.1+0x25c>
    5078:	ldr	r3, [sp]
    507c:	ldr	r6, [r3, #20]
    5080:	ldr	r3, [r3]
    5084:	cmp	r6, #0
    5088:	beq	5660 <ReadSingleData.part.1+0x898>
    508c:	cmp	sl, #256	; 0x100
    5090:	ble	5a44 <ReadSingleData.part.1+0xc7c>
    5094:	ldr	r8, [sp, #4]
    5098:	mov	r7, #0
    509c:	add	r4, sp, #1040	; 0x410
    50a0:	sub	r2, sl, #256	; 0x100
    50a4:	mov	r6, r7
    50a8:	add	r5, sp, #24
    50ac:	add	r4, r4, #8
    50b0:	str	r2, [sp, #16]
    50b4:	str	sl, [sp, #20]
    50b8:	mov	r2, #256	; 0x100
    50bc:	mov	r1, fp
    50c0:	mov	r0, r5
    50c4:	mov	sl, r8
    50c8:	bl	1520 <fread@plt>
    50cc:	add	r6, r6, r0
    50d0:	mov	r9, r5
    50d4:	str	r6, [sp, #8]
    50d8:	str	r5, [sp, #12]
    50dc:	mov	r0, r9
    50e0:	add	r9, r9, #4
    50e4:	bl	18f8 <Mat_uint32Swap>
    50e8:	vmov	s15, r0
    50ec:	cmp	r9, r4
    50f0:	vcvt.f32.u32	s15, s15
    50f4:	vstmia	sl!, {s15}
    50f8:	bne	50dc <ReadSingleData.part.1+0x314>
    50fc:	ldr	r3, [sp, #16]
    5100:	add	r7, r7, #256	; 0x100
    5104:	add	r8, r8, #1024	; 0x400
    5108:	cmp	r7, r3
    510c:	bge	5b6c <ReadSingleData.part.1+0xda4>
    5110:	ldr	r3, [sp]
    5114:	ldr	r3, [r3]
    5118:	b	50b8 <ReadSingleData.part.1+0x2f0>
    511c:	ldr	r3, [sp]
    5120:	ldr	r6, [r3, #20]
    5124:	ldr	r3, [r3]
    5128:	cmp	r6, #0
    512c:	beq	54fc <ReadSingleData.part.1+0x734>
    5130:	cmp	sl, #256	; 0x100
    5134:	ble	5b20 <ReadSingleData.part.1+0xd58>
    5138:	ldr	r8, [sp, #4]
    513c:	mov	r7, #0
    5140:	sub	r2, sl, #256	; 0x100
    5144:	mov	r6, r7
    5148:	add	r5, sp, #24
    514c:	add	r4, sp, #536	; 0x218
    5150:	str	r2, [sp, #12]
    5154:	str	sl, [sp, #20]
    5158:	mov	r2, #256	; 0x100
    515c:	mov	r1, fp
    5160:	mov	r0, r5
    5164:	mov	sl, r8
    5168:	bl	1520 <fread@plt>
    516c:	add	r6, r6, r0
    5170:	mov	r9, r5
    5174:	str	r6, [sp, #8]
    5178:	str	r5, [sp, #16]
    517c:	mov	r0, r9
    5180:	add	r9, r9, #2
    5184:	bl	192c <Mat_int16Swap>
    5188:	vmov	s15, r0
    518c:	cmp	r4, r9
    5190:	vcvt.f32.s32	s15, s15
    5194:	vstmia	sl!, {s15}
    5198:	bne	517c <ReadSingleData.part.1+0x3b4>
    519c:	ldr	r3, [sp, #12]
    51a0:	add	r7, r7, #256	; 0x100
    51a4:	add	r8, r8, #1024	; 0x400
    51a8:	cmp	r7, r3
    51ac:	bge	6218 <ReadSingleData.part.1+0x1450>
    51b0:	ldr	r3, [sp]
    51b4:	ldr	r3, [r3]
    51b8:	b	5158 <ReadSingleData.part.1+0x390>
    51bc:	ldr	r3, [sp]
    51c0:	ldr	r6, [r3, #20]
    51c4:	ldr	r3, [r3]
    51c8:	cmp	r6, #0
    51cc:	beq	5574 <ReadSingleData.part.1+0x7ac>
    51d0:	cmp	sl, #256	; 0x100
    51d4:	ble	5ad4 <ReadSingleData.part.1+0xd0c>
    51d8:	ldr	r8, [sp, #4]
    51dc:	mov	r7, #0
    51e0:	add	r4, sp, #1040	; 0x410
    51e4:	sub	r2, sl, #256	; 0x100
    51e8:	mov	r6, r7
    51ec:	add	r5, sp, #24
    51f0:	add	r4, r4, #8
    51f4:	str	r2, [sp, #12]
    51f8:	str	sl, [sp, #20]
    51fc:	mov	r2, #256	; 0x100
    5200:	mov	r1, fp
    5204:	mov	r0, r5
    5208:	mov	sl, r8
    520c:	bl	1520 <fread@plt>
    5210:	add	r6, r6, r0
    5214:	mov	r9, r5
    5218:	str	r6, [sp, #8]
    521c:	str	r5, [sp, #16]
    5220:	mov	r0, r9
    5224:	add	r9, r9, #4
    5228:	bl	18c4 <Mat_int32Swap>
    522c:	vmov	s15, r0
    5230:	cmp	r4, r9
    5234:	vcvt.f32.s32	s15, s15
    5238:	vstmia	sl!, {s15}
    523c:	bne	5220 <ReadSingleData.part.1+0x458>
    5240:	ldr	r3, [sp, #12]
    5244:	add	r7, r7, #256	; 0x100
    5248:	add	r8, r8, #1024	; 0x400
    524c:	cmp	r7, r3
    5250:	bge	5cb8 <ReadSingleData.part.1+0xef0>
    5254:	ldr	r3, [sp]
    5258:	ldr	r3, [r3]
    525c:	b	51fc <ReadSingleData.part.1+0x434>
    5260:	ldr	r3, [sp]
    5264:	ldr	r6, [r3, #20]
    5268:	ldr	r3, [r3]
    526c:	cmp	r6, #0
    5270:	beq	5748 <ReadSingleData.part.1+0x980>
    5274:	cmp	sl, #256	; 0x100
    5278:	ble	5a90 <ReadSingleData.part.1+0xcc8>
    527c:	ldr	r8, [sp, #4]
    5280:	mov	r7, #0
    5284:	add	r4, sp, #1040	; 0x410
    5288:	sub	r2, sl, #256	; 0x100
    528c:	mov	r6, r7
    5290:	add	r5, sp, #24
    5294:	add	r4, r4, #8
    5298:	str	r2, [sp, #16]
    529c:	str	sl, [sp, #20]
    52a0:	mov	r2, #256	; 0x100
    52a4:	mov	r1, fp
    52a8:	mov	r0, r5
    52ac:	mov	sl, r8
    52b0:	bl	1520 <fread@plt>
    52b4:	add	r6, r6, r0
    52b8:	mov	r9, r5
    52bc:	str	r6, [sp, #8]
    52c0:	str	r5, [sp, #12]
    52c4:	mov	r0, r9
    52c8:	add	r9, r9, #4
    52cc:	bl	1974 <Mat_floatSwap>
    52d0:	cmp	r9, r4
    52d4:	vstmia	sl!, {s0}
    52d8:	bne	52c4 <ReadSingleData.part.1+0x4fc>
    52dc:	ldr	r3, [sp, #16]
    52e0:	add	r7, r7, #256	; 0x100
    52e4:	add	r8, r8, #1024	; 0x400
    52e8:	cmp	r7, r3
    52ec:	bge	5d80 <ReadSingleData.part.1+0xfb8>
    52f0:	ldr	r3, [sp]
    52f4:	ldr	r3, [r3]
    52f8:	b	52a0 <ReadSingleData.part.1+0x4d8>
    52fc:	cmp	r4, #12
    5300:	beq	5e7c <ReadSingleData.part.1+0x10b4>
    5304:	cmp	r4, #13
    5308:	movne	r0, #0
    530c:	bne	5438 <ReadSingleData.part.1+0x670>
    5310:	ldr	r3, [sp]
    5314:	ldr	r6, [r3, #20]
    5318:	ldr	r3, [r3]
    531c:	cmp	r6, #0
    5320:	beq	629c <ReadSingleData.part.1+0x14d4>
    5324:	cmp	sl, #256	; 0x100
    5328:	ble	6544 <ReadSingleData.part.1+0x177c>
    532c:	sub	r2, sl, #256	; 0x100
    5330:	mov	r6, #0
    5334:	add	r4, sp, #2064	; 0x810
    5338:	mov	r8, r6
    533c:	str	r2, [sp, #16]
    5340:	add	r5, sp, #24
    5344:	add	r4, r4, #8
    5348:	ldr	r2, [sp, #4]
    534c:	str	r2, [sp, #12]
    5350:	mov	r2, #256	; 0x100
    5354:	mov	r1, fp
    5358:	mov	r0, r5
    535c:	mov	r7, r5
    5360:	bl	1520 <fread@plt>
    5364:	ldr	r9, [sp, #12]
    5368:	add	r8, r8, r0
    536c:	str	r8, [sp, #8]
    5370:	str	r5, [sp, #20]
    5374:	mov	r0, r7
    5378:	add	r7, r7, #8
    537c:	bl	1858 <Mat_uint64Swap>
    5380:	bl	4e308 <__aeabi_ul2f>
    5384:	cmp	r4, r7
    5388:	str	r0, [r9], #4
    538c:	bne	5374 <ReadSingleData.part.1+0x5ac>
    5390:	ldr	r3, [sp, #12]
    5394:	add	r6, r6, #256	; 0x100
    5398:	add	r3, r3, #1024	; 0x400
    539c:	str	r3, [sp, #12]
    53a0:	ldr	r3, [sp, #16]
    53a4:	cmp	r3, r6
    53a8:	ble	53b8 <ReadSingleData.part.1+0x5f0>
    53ac:	ldr	r3, [sp]
    53b0:	ldr	r3, [r3]
    53b4:	b	5350 <ReadSingleData.part.1+0x588>
    53b8:	sub	r3, sl, #256	; 0x100
    53bc:	sub	r3, r3, #1
    53c0:	lsr	r3, r3, #8
    53c4:	add	r4, r3, #1
    53c8:	lsl	r6, r4, #8
    53cc:	cmp	sl, r6
    53d0:	ble	5430 <ReadSingleData.part.1+0x668>
    53d4:	ldr	r3, [sp]
    53d8:	sub	sl, sl, r6
    53dc:	mov	r0, r5
    53e0:	mov	r2, sl
    53e4:	mov	r1, fp
    53e8:	ldr	r3, [r3]
    53ec:	bl	1520 <fread@plt>
    53f0:	add	r3, r8, r0
    53f4:	cmp	sl, #0
    53f8:	str	r3, [sp, #8]
    53fc:	ble	5430 <ReadSingleData.part.1+0x668>
    5400:	ldr	r3, [sp, #4]
    5404:	add	r5, sl, r6
    5408:	ldr	r6, [sp, #20]
    540c:	add	r4, r3, r4, lsl #10
    5410:	add	r5, r3, r5, lsl #2
    5414:	mov	r0, r6
    5418:	add	r6, r6, #8
    541c:	bl	1858 <Mat_uint64Swap>
    5420:	bl	4e308 <__aeabi_ul2f>
    5424:	str	r0, [r4], #4
    5428:	cmp	r5, r4
    542c:	bne	5414 <ReadSingleData.part.1+0x64c>
    5430:	ldr	r3, [sp, #8]
    5434:	mul	r0, r3, fp
    5438:	add	sp, sp, #2064	; 0x810
    543c:	add	sp, sp, #12
    5440:	ldrd	r4, [sp]
    5444:	ldrd	r6, [sp, #8]
    5448:	ldrd	r8, [sp, #16]
    544c:	ldrd	sl, [sp, #24]
    5450:	add	sp, sp, #32
    5454:	pop	{pc}		; (ldr pc, [sp], #4)
    5458:	ldr	sl, [sp, #8]
    545c:	mov	r9, r1
    5460:	sub	r3, sl, #256	; 0x100
    5464:	sub	r3, r3, #1
    5468:	lsr	r3, r3, #8
    546c:	add	r4, r3, #1
    5470:	lsl	r7, r4, #8
    5474:	cmp	sl, r7
    5478:	bgt	57b8 <ReadSingleData.part.1+0x9f0>
    547c:	mul	r0, r0, fp
    5480:	b	5438 <ReadSingleData.part.1+0x670>
    5484:	ldr	sl, [sp, #8]
    5488:	mov	r9, r1
    548c:	sub	r3, sl, #256	; 0x100
    5490:	sub	r3, r3, #1
    5494:	lsr	r3, r3, #8
    5498:	add	r4, r3, #1
    549c:	lsl	r7, r4, #8
    54a0:	cmp	sl, r7
    54a4:	ble	547c <ReadSingleData.part.1+0x6b4>
    54a8:	ldr	r3, [sp]
    54ac:	sub	sl, sl, r7
    54b0:	mov	r0, r5
    54b4:	mov	r2, sl
    54b8:	mov	r1, fp
    54bc:	ldr	r3, [r3]
    54c0:	bl	1520 <fread@plt>
    54c4:	cmp	sl, #0
    54c8:	add	r0, r6, r0
    54cc:	ble	547c <ReadSingleData.part.1+0x6b4>
    54d0:	ldr	r2, [sp, #4]
    54d4:	add	r3, r7, sl
    54d8:	add	r4, r2, r4, lsl #10
    54dc:	add	r3, r2, r3, lsl #2
    54e0:	ldrb	r2, [r9, #1]!
    54e4:	vmov	s15, r2
    54e8:	vcvt.f32.u32	s15, s15
    54ec:	vstmia	r4!, {s15}
    54f0:	cmp	r4, r3
    54f4:	bne	54e0 <ReadSingleData.part.1+0x718>
    54f8:	b	547c <ReadSingleData.part.1+0x6b4>
    54fc:	cmp	sl, #256	; 0x100
    5500:	ble	58d8 <ReadSingleData.part.1+0xb10>
    5504:	ldr	r8, [sp, #4]
    5508:	add	r5, sp, #24
    550c:	sub	r9, sl, #256	; 0x100
    5510:	add	r4, r5, #508	; 0x1fc
    5514:	mov	r7, r6
    5518:	add	r4, r4, #2
    551c:	mov	r2, #256	; 0x100
    5520:	mov	r1, fp
    5524:	mov	r0, r5
    5528:	bl	1520 <fread@plt>
    552c:	add	r6, r6, r0
    5530:	sub	r1, r5, #2
    5534:	mov	r0, r6
    5538:	mov	r3, r1
    553c:	mov	r2, r8
    5540:	ldrsh	ip, [r3, #2]!
    5544:	vmov	s15, ip
    5548:	cmp	r4, r3
    554c:	vcvt.f32.s32	s15, s15
    5550:	vstmia	r2!, {s15}
    5554:	bne	5540 <ReadSingleData.part.1+0x778>
    5558:	add	r7, r7, #256	; 0x100
    555c:	add	r8, r8, #1024	; 0x400
    5560:	cmp	r7, r9
    5564:	bge	6024 <ReadSingleData.part.1+0x125c>
    5568:	ldr	r3, [sp]
    556c:	ldr	r3, [r3]
    5570:	b	551c <ReadSingleData.part.1+0x754>
    5574:	cmp	sl, #256	; 0x100
    5578:	ble	5968 <ReadSingleData.part.1+0xba0>
    557c:	ldr	r8, [sp, #4]
    5580:	add	r5, sp, #24
    5584:	sub	r9, sl, #256	; 0x100
    5588:	add	r4, r5, #1020	; 0x3fc
    558c:	mov	r7, r6
    5590:	mov	r2, #256	; 0x100
    5594:	mov	r1, fp
    5598:	mov	r0, r5
    559c:	bl	1520 <fread@plt>
    55a0:	add	r6, r6, r0
    55a4:	sub	r1, r5, #4
    55a8:	mov	r0, r6
    55ac:	mov	r3, r1
    55b0:	mov	r2, r8
    55b4:	ldr	ip, [r3, #4]!
    55b8:	vmov	s15, ip
    55bc:	cmp	r4, r3
    55c0:	vcvt.f32.s32	s15, s15
    55c4:	vstmia	r2!, {s15}
    55c8:	bne	55b4 <ReadSingleData.part.1+0x7ec>
    55cc:	add	r7, r7, #256	; 0x100
    55d0:	add	r8, r8, #1024	; 0x400
    55d4:	cmp	r7, r9
    55d8:	bge	5f24 <ReadSingleData.part.1+0x115c>
    55dc:	ldr	r3, [sp]
    55e0:	ldr	r3, [r3]
    55e4:	b	5590 <ReadSingleData.part.1+0x7c8>
    55e8:	cmp	sl, #256	; 0x100
    55ec:	ble	5920 <ReadSingleData.part.1+0xb58>
    55f0:	ldr	r8, [sp, #4]
    55f4:	add	r5, sp, #24
    55f8:	sub	r9, sl, #256	; 0x100
    55fc:	add	r4, r5, #508	; 0x1fc
    5600:	mov	r7, r6
    5604:	add	r4, r4, #2
    5608:	mov	r2, #256	; 0x100
    560c:	mov	r1, fp
    5610:	mov	r0, r5
    5614:	bl	1520 <fread@plt>
    5618:	add	r6, r6, r0
    561c:	sub	r1, r5, #2
    5620:	mov	r0, r6
    5624:	mov	r3, r1
    5628:	mov	r2, r8
    562c:	ldrh	ip, [r3, #2]!
    5630:	vmov	s15, ip
    5634:	cmp	r4, r3
    5638:	vcvt.f32.u32	s15, s15
    563c:	vstmia	r2!, {s15}
    5640:	bne	562c <ReadSingleData.part.1+0x864>
    5644:	add	r7, r7, #256	; 0x100
    5648:	add	r8, r8, #1024	; 0x400
    564c:	cmp	r7, r9
    5650:	bge	6198 <ReadSingleData.part.1+0x13d0>
    5654:	ldr	r3, [sp]
    5658:	ldr	r3, [r3]
    565c:	b	5608 <ReadSingleData.part.1+0x840>
    5660:	cmp	sl, #256	; 0x100
    5664:	ble	5890 <ReadSingleData.part.1+0xac8>
    5668:	ldr	r8, [sp, #4]
    566c:	add	r5, sp, #24
    5670:	sub	r9, sl, #256	; 0x100
    5674:	add	r4, r5, #1020	; 0x3fc
    5678:	mov	r7, r6
    567c:	mov	r2, #256	; 0x100
    5680:	mov	r1, fp
    5684:	mov	r0, r5
    5688:	bl	1520 <fread@plt>
    568c:	add	r6, r6, r0
    5690:	sub	r1, r5, #4
    5694:	mov	r0, r6
    5698:	mov	r3, r1
    569c:	mov	r2, r8
    56a0:	ldr	ip, [r3, #4]!
    56a4:	vmov	s15, ip
    56a8:	cmp	r3, r4
    56ac:	vcvt.f32.u32	s15, s15
    56b0:	vstmia	r2!, {s15}
    56b4:	bne	56a0 <ReadSingleData.part.1+0x8d8>
    56b8:	add	r7, r7, #256	; 0x100
    56bc:	add	r8, r8, #1024	; 0x400
    56c0:	cmp	r7, r9
    56c4:	bge	5fa4 <ReadSingleData.part.1+0x11dc>
    56c8:	ldr	r3, [sp]
    56cc:	ldr	r3, [r3]
    56d0:	b	567c <ReadSingleData.part.1+0x8b4>
    56d4:	cmp	sl, #256	; 0x100
    56d8:	ble	584c <ReadSingleData.part.1+0xa84>
    56dc:	ldr	r8, [sp, #4]
    56e0:	add	r4, sp, #2064	; 0x810
    56e4:	sub	r9, sl, #256	; 0x100
    56e8:	mov	r7, r6
    56ec:	add	r5, sp, #24
    56f0:	add	r4, r4, #8
    56f4:	mov	r2, #256	; 0x100
    56f8:	mov	r1, fp
    56fc:	mov	r0, r5
    5700:	bl	1520 <fread@plt>
    5704:	add	r6, r6, r0
    5708:	mov	r2, r8
    570c:	mov	r0, r5
    5710:	mov	r1, r6
    5714:	mov	r3, r5
    5718:	vldmia	r3!, {d7}
    571c:	vcvt.f32.f64	s14, d7
    5720:	cmp	r3, r4
    5724:	vstmia	r2!, {s14}
    5728:	bne	5718 <ReadSingleData.part.1+0x950>
    572c:	add	r7, r7, #256	; 0x100
    5730:	add	r8, r8, #1024	; 0x400
    5734:	cmp	r7, r9
    5738:	bge	611c <ReadSingleData.part.1+0x1354>
    573c:	ldr	r3, [sp]
    5740:	ldr	r3, [r3]
    5744:	b	56f4 <ReadSingleData.part.1+0x92c>
    5748:	cmp	sl, #256	; 0x100
    574c:	ble	580c <ReadSingleData.part.1+0xa44>
    5750:	ldr	r8, [sp, #4]
    5754:	add	r4, sp, #1040	; 0x410
    5758:	sub	r9, sl, #256	; 0x100
    575c:	mov	r7, r6
    5760:	add	r5, sp, #24
    5764:	add	r4, r4, #8
    5768:	mov	r2, #256	; 0x100
    576c:	mov	r1, fp
    5770:	mov	r0, r5
    5774:	bl	1520 <fread@plt>
    5778:	add	r6, r6, r0
    577c:	mov	ip, r5
    5780:	mov	r0, r6
    5784:	mov	r2, r8
    5788:	mov	r3, r5
    578c:	ldr	r1, [r3], #4
    5790:	cmp	r3, r4
    5794:	str	r1, [r2], #4
    5798:	bne	578c <ReadSingleData.part.1+0x9c4>
    579c:	add	r7, r7, #256	; 0x100
    57a0:	add	r8, r8, #1024	; 0x400
    57a4:	cmp	r7, r9
    57a8:	bge	60a4 <ReadSingleData.part.1+0x12dc>
    57ac:	ldr	r3, [sp]
    57b0:	ldr	r3, [r3]
    57b4:	b	5768 <ReadSingleData.part.1+0x9a0>
    57b8:	ldr	r3, [sp]
    57bc:	sub	sl, sl, r7
    57c0:	mov	r0, r5
    57c4:	mov	r2, sl
    57c8:	mov	r1, fp
    57cc:	ldr	r3, [r3]
    57d0:	bl	1520 <fread@plt>
    57d4:	cmp	sl, #0
    57d8:	add	r0, r6, r0
    57dc:	ble	547c <ReadSingleData.part.1+0x6b4>
    57e0:	ldr	r2, [sp, #4]
    57e4:	add	r3, r7, sl
    57e8:	add	r4, r2, r4, lsl #10
    57ec:	add	r3, r2, r3, lsl #2
    57f0:	ldrsb	r2, [r9, #1]!
    57f4:	vmov	s15, r2
    57f8:	vcvt.f32.s32	s15, s15
    57fc:	vstmia	r4!, {s15}
    5800:	cmp	r3, r4
    5804:	bne	57f0 <ReadSingleData.part.1+0xa28>
    5808:	b	547c <ReadSingleData.part.1+0x6b4>
    580c:	add	r4, sp, #24
    5810:	mov	r2, sl
    5814:	mov	r0, r4
    5818:	mov	r1, fp
    581c:	bl	1520 <fread@plt>
    5820:	cmp	sl, #0
    5824:	str	r0, [sp, #8]
    5828:	ble	5430 <ReadSingleData.part.1+0x668>
    582c:	ldr	r3, [sp, #4]
    5830:	mov	r2, r4
    5834:	add	r0, r3, sl, lsl #2
    5838:	ldr	r1, [r2], #4
    583c:	str	r1, [r3], #4
    5840:	cmp	r3, r0
    5844:	bne	5838 <ReadSingleData.part.1+0xa70>
    5848:	b	5430 <ReadSingleData.part.1+0x668>
    584c:	add	r4, sp, #24
    5850:	mov	r2, sl
    5854:	mov	r0, r4
    5858:	mov	r1, fp
    585c:	bl	1520 <fread@plt>
    5860:	cmp	sl, #0
    5864:	str	r0, [sp, #8]
    5868:	ble	5430 <ReadSingleData.part.1+0x668>
    586c:	ldr	r3, [sp, #4]
    5870:	mov	r2, r4
    5874:	add	r1, r3, sl, lsl #2
    5878:	vldmia	r2!, {d7}
    587c:	vcvt.f32.f64	s14, d7
    5880:	vstmia	r3!, {s14}
    5884:	cmp	r3, r1
    5888:	bne	5878 <ReadSingleData.part.1+0xab0>
    588c:	b	5430 <ReadSingleData.part.1+0x668>
    5890:	add	r4, sp, #24
    5894:	mov	r2, sl
    5898:	mov	r0, r4
    589c:	mov	r1, fp
    58a0:	bl	1520 <fread@plt>
    58a4:	cmp	sl, #0
    58a8:	str	r0, [sp, #8]
    58ac:	ble	5430 <ReadSingleData.part.1+0x668>
    58b0:	ldr	r3, [sp, #4]
    58b4:	sub	r2, r4, #4
    58b8:	add	r1, r3, sl, lsl #2
    58bc:	ldr	r0, [r2, #4]!
    58c0:	vmov	s15, r0
    58c4:	vcvt.f32.u32	s15, s15
    58c8:	vstmia	r3!, {s15}
    58cc:	cmp	r3, r1
    58d0:	bne	58bc <ReadSingleData.part.1+0xaf4>
    58d4:	b	5430 <ReadSingleData.part.1+0x668>
    58d8:	add	r4, sp, #24
    58dc:	mov	r2, sl
    58e0:	mov	r0, r4
    58e4:	mov	r1, fp
    58e8:	bl	1520 <fread@plt>
    58ec:	cmp	sl, #0
    58f0:	str	r0, [sp, #8]
    58f4:	ble	5430 <ReadSingleData.part.1+0x668>
    58f8:	ldr	r3, [sp, #4]
    58fc:	sub	r2, r4, #2
    5900:	add	r1, r3, sl, lsl #2
    5904:	ldrsh	r0, [r2, #2]!
    5908:	vmov	s15, r0
    590c:	vcvt.f32.s32	s15, s15
    5910:	vstmia	r3!, {s15}
    5914:	cmp	r1, r3
    5918:	bne	5904 <ReadSingleData.part.1+0xb3c>
    591c:	b	5430 <ReadSingleData.part.1+0x668>
    5920:	add	r4, sp, #24
    5924:	mov	r2, sl
    5928:	mov	r0, r4
    592c:	mov	r1, fp
    5930:	bl	1520 <fread@plt>
    5934:	cmp	sl, #0
    5938:	str	r0, [sp, #8]
    593c:	ble	5430 <ReadSingleData.part.1+0x668>
    5940:	ldr	r3, [sp, #4]
    5944:	sub	r2, r4, #2
    5948:	add	r1, r3, sl, lsl #2
    594c:	ldrh	r0, [r2, #2]!
    5950:	vmov	s15, r0
    5954:	vcvt.f32.u32	s15, s15
    5958:	vstmia	r3!, {s15}
    595c:	cmp	r1, r3
    5960:	bne	594c <ReadSingleData.part.1+0xb84>
    5964:	b	5430 <ReadSingleData.part.1+0x668>
    5968:	add	r4, sp, #24
    596c:	mov	r2, sl
    5970:	mov	r0, r4
    5974:	mov	r1, fp
    5978:	bl	1520 <fread@plt>
    597c:	cmp	sl, #0
    5980:	str	r0, [sp, #8]
    5984:	ble	5430 <ReadSingleData.part.1+0x668>
    5988:	ldr	r3, [sp, #4]
    598c:	sub	r2, r4, #4
    5990:	add	r1, r3, sl, lsl #2
    5994:	ldr	r0, [r2, #4]!
    5998:	vmov	s15, r0
    599c:	vcvt.f32.s32	s15, s15
    59a0:	vstmia	r3!, {s15}
    59a4:	cmp	r1, r3
    59a8:	bne	5994 <ReadSingleData.part.1+0xbcc>
    59ac:	b	5430 <ReadSingleData.part.1+0x668>
    59b0:	add	r4, sp, #24
    59b4:	mov	r2, sl
    59b8:	mov	r0, r4
    59bc:	mov	r1, fp
    59c0:	bl	1520 <fread@plt>
    59c4:	cmp	sl, #0
    59c8:	str	r0, [sp, #8]
    59cc:	ble	5430 <ReadSingleData.part.1+0x668>
    59d0:	ldr	r5, [sp, #4]
    59d4:	add	sl, r5, sl, lsl #2
    59d8:	mov	r0, r4
    59dc:	add	r4, r4, #2
    59e0:	bl	1950 <Mat_uint16Swap>
    59e4:	vmov	s15, r0
    59e8:	vcvt.f32.u32	s15, s15
    59ec:	vstmia	r5!, {s15}
    59f0:	cmp	sl, r5
    59f4:	bne	59d8 <ReadSingleData.part.1+0xc10>
    59f8:	b	5430 <ReadSingleData.part.1+0x668>
    59fc:	add	r4, sp, #24
    5a00:	mov	r2, sl
    5a04:	mov	r0, r4
    5a08:	mov	r1, fp
    5a0c:	bl	1520 <fread@plt>
    5a10:	cmp	sl, #0
    5a14:	str	r0, [sp, #8]
    5a18:	ble	5430 <ReadSingleData.part.1+0x668>
    5a1c:	ldr	r5, [sp, #4]
    5a20:	add	sl, r5, sl, lsl #2
    5a24:	mov	r0, r4
    5a28:	add	r4, r4, #8
    5a2c:	bl	19a4 <Mat_doubleSwap>
    5a30:	vcvt.f32.f64	s0, d0
    5a34:	vstmia	r5!, {s0}
    5a38:	cmp	r5, sl
    5a3c:	bne	5a24 <ReadSingleData.part.1+0xc5c>
    5a40:	b	5430 <ReadSingleData.part.1+0x668>
    5a44:	add	r4, sp, #24
    5a48:	mov	r2, sl
    5a4c:	mov	r0, r4
    5a50:	mov	r1, fp
    5a54:	bl	1520 <fread@plt>
    5a58:	cmp	sl, #0
    5a5c:	str	r0, [sp, #8]
    5a60:	ble	5430 <ReadSingleData.part.1+0x668>
    5a64:	ldr	r5, [sp, #4]
    5a68:	add	sl, r5, sl, lsl #2
    5a6c:	mov	r0, r4
    5a70:	add	r4, r4, #4
    5a74:	bl	18f8 <Mat_uint32Swap>
    5a78:	vmov	s15, r0
    5a7c:	vcvt.f32.u32	s15, s15
    5a80:	vstmia	r5!, {s15}
    5a84:	cmp	sl, r5
    5a88:	bne	5a6c <ReadSingleData.part.1+0xca4>
    5a8c:	b	5430 <ReadSingleData.part.1+0x668>
    5a90:	add	r4, sp, #24
    5a94:	mov	r2, sl
    5a98:	mov	r0, r4
    5a9c:	mov	r1, fp
    5aa0:	bl	1520 <fread@plt>
    5aa4:	cmp	sl, #0
    5aa8:	str	r0, [sp, #8]
    5aac:	ble	5430 <ReadSingleData.part.1+0x668>
    5ab0:	ldr	r5, [sp, #4]
    5ab4:	add	sl, r5, sl, lsl #2
    5ab8:	mov	r0, r4
    5abc:	add	r4, r4, #4
    5ac0:	bl	1974 <Mat_floatSwap>
    5ac4:	vstmia	r5!, {s0}
    5ac8:	cmp	sl, r5
    5acc:	bne	5ab8 <ReadSingleData.part.1+0xcf0>
    5ad0:	b	5430 <ReadSingleData.part.1+0x668>
    5ad4:	add	r4, sp, #24
    5ad8:	mov	r2, sl
    5adc:	mov	r0, r4
    5ae0:	mov	r1, fp
    5ae4:	bl	1520 <fread@plt>
    5ae8:	cmp	sl, #0
    5aec:	str	r0, [sp, #8]
    5af0:	ble	5430 <ReadSingleData.part.1+0x668>
    5af4:	ldr	r5, [sp, #4]
    5af8:	add	sl, r5, sl, lsl #2
    5afc:	mov	r0, r4
    5b00:	add	r4, r4, #4
    5b04:	bl	18c4 <Mat_int32Swap>
    5b08:	vmov	s15, r0
    5b0c:	vcvt.f32.s32	s15, s15
    5b10:	vstmia	r5!, {s15}
    5b14:	cmp	sl, r5
    5b18:	bne	5afc <ReadSingleData.part.1+0xd34>
    5b1c:	b	5430 <ReadSingleData.part.1+0x668>
    5b20:	add	r4, sp, #24
    5b24:	mov	r2, sl
    5b28:	mov	r0, r4
    5b2c:	mov	r1, fp
    5b30:	bl	1520 <fread@plt>
    5b34:	cmp	sl, #0
    5b38:	str	r0, [sp, #8]
    5b3c:	ble	5430 <ReadSingleData.part.1+0x668>
    5b40:	ldr	r5, [sp, #4]
    5b44:	add	sl, r5, sl, lsl #2
    5b48:	mov	r0, r4
    5b4c:	add	r4, r4, #2
    5b50:	bl	192c <Mat_int16Swap>
    5b54:	vmov	s15, r0
    5b58:	vcvt.f32.s32	s15, s15
    5b5c:	vstmia	r5!, {s15}
    5b60:	cmp	sl, r5
    5b64:	bne	5b48 <ReadSingleData.part.1+0xd80>
    5b68:	b	5430 <ReadSingleData.part.1+0x668>
    5b6c:	ldr	sl, [sp, #20]
    5b70:	sub	r3, sl, #256	; 0x100
    5b74:	sub	r3, r3, #1
    5b78:	lsr	r3, r3, #8
    5b7c:	add	r4, r3, #1
    5b80:	lsl	r7, r4, #8
    5b84:	cmp	sl, r7
    5b88:	ble	5430 <ReadSingleData.part.1+0x668>
    5b8c:	ldr	r3, [sp]
    5b90:	sub	sl, sl, r7
    5b94:	mov	r0, r5
    5b98:	mov	r2, sl
    5b9c:	mov	r1, fp
    5ba0:	ldr	r3, [r3]
    5ba4:	bl	1520 <fread@plt>
    5ba8:	add	r3, r6, r0
    5bac:	cmp	sl, #0
    5bb0:	str	r3, [sp, #8]
    5bb4:	ble	5430 <ReadSingleData.part.1+0x668>
    5bb8:	ldr	r3, [sp, #4]
    5bbc:	add	r5, r7, sl
    5bc0:	ldr	r6, [sp, #12]
    5bc4:	add	r4, r3, r4, lsl #10
    5bc8:	add	r5, r3, r5, lsl #2
    5bcc:	mov	r0, r6
    5bd0:	add	r6, r6, #4
    5bd4:	bl	18f8 <Mat_uint32Swap>
    5bd8:	vmov	s15, r0
    5bdc:	vcvt.f32.u32	s15, s15
    5be0:	vstmia	r4!, {s15}
    5be4:	cmp	r4, r5
    5be8:	bne	5bcc <ReadSingleData.part.1+0xe04>
    5bec:	b	5430 <ReadSingleData.part.1+0x668>
    5bf0:	ldr	sl, [sp, #20]
    5bf4:	sub	r3, sl, #256	; 0x100
    5bf8:	sub	r3, r3, #1
    5bfc:	lsr	r3, r3, #8
    5c00:	add	r4, r3, #1
    5c04:	lsl	r7, r4, #8
    5c08:	cmp	sl, r7
    5c0c:	ble	5430 <ReadSingleData.part.1+0x668>
    5c10:	ldr	r3, [sp]
    5c14:	sub	sl, sl, r7
    5c18:	mov	r0, r5
    5c1c:	mov	r2, sl
    5c20:	mov	r1, fp
    5c24:	ldr	r3, [r3]
    5c28:	bl	1520 <fread@plt>
    5c2c:	add	r3, r6, r0
    5c30:	cmp	sl, #0
    5c34:	str	r3, [sp, #8]
    5c38:	ble	5430 <ReadSingleData.part.1+0x668>
    5c3c:	ldr	r3, [sp, #4]
    5c40:	add	r5, sl, r7
    5c44:	ldr	r6, [sp, #16]
    5c48:	add	r4, r3, r4, lsl #10
    5c4c:	add	r5, r3, r5, lsl #2
    5c50:	mov	r0, r6
    5c54:	add	r6, r6, #2
    5c58:	bl	1950 <Mat_uint16Swap>
    5c5c:	vmov	s15, r0
    5c60:	vcvt.f32.u32	s15, s15
    5c64:	vstmia	r4!, {s15}
    5c68:	cmp	r5, r4
    5c6c:	bne	5c50 <ReadSingleData.part.1+0xe88>
    5c70:	b	5430 <ReadSingleData.part.1+0x668>
    5c74:	add	r4, sp, #24
    5c78:	mov	r2, sl
    5c7c:	mov	r0, r4
    5c80:	mov	r1, fp
    5c84:	bl	1520 <fread@plt>
    5c88:	cmp	sl, #0
    5c8c:	ble	547c <ReadSingleData.part.1+0x6b4>
    5c90:	ldr	r3, [sp, #4]
    5c94:	sub	r2, r4, #1
    5c98:	add	r1, r3, sl, lsl #2
    5c9c:	ldrsb	ip, [r2, #1]!
    5ca0:	vmov	s15, ip
    5ca4:	vcvt.f32.s32	s15, s15
    5ca8:	vstmia	r3!, {s15}
    5cac:	cmp	r1, r3
    5cb0:	bne	5c9c <ReadSingleData.part.1+0xed4>
    5cb4:	b	547c <ReadSingleData.part.1+0x6b4>
    5cb8:	ldr	sl, [sp, #20]
    5cbc:	sub	r3, sl, #256	; 0x100
    5cc0:	sub	r3, r3, #1
    5cc4:	lsr	r3, r3, #8
    5cc8:	add	r4, r3, #1
    5ccc:	lsl	r7, r4, #8
    5cd0:	cmp	sl, r7
    5cd4:	ble	5430 <ReadSingleData.part.1+0x668>
    5cd8:	ldr	r3, [sp]
    5cdc:	sub	sl, sl, r7
    5ce0:	mov	r0, r5
    5ce4:	mov	r2, sl
    5ce8:	mov	r1, fp
    5cec:	ldr	r3, [r3]
    5cf0:	bl	1520 <fread@plt>
    5cf4:	add	r3, r6, r0
    5cf8:	cmp	sl, #0
    5cfc:	str	r3, [sp, #8]
    5d00:	ble	5430 <ReadSingleData.part.1+0x668>
    5d04:	ldr	r3, [sp, #4]
    5d08:	add	r5, sl, r7
    5d0c:	ldr	r6, [sp, #16]
    5d10:	add	r4, r3, r4, lsl #10
    5d14:	add	r5, r3, r5, lsl #2
    5d18:	mov	r0, r6
    5d1c:	add	r6, r6, #4
    5d20:	bl	18c4 <Mat_int32Swap>
    5d24:	vmov	s15, r0
    5d28:	vcvt.f32.s32	s15, s15
    5d2c:	vstmia	r4!, {s15}
    5d30:	cmp	r5, r4
    5d34:	bne	5d18 <ReadSingleData.part.1+0xf50>
    5d38:	b	5430 <ReadSingleData.part.1+0x668>
    5d3c:	add	r4, sp, #24
    5d40:	mov	r2, sl
    5d44:	mov	r0, r4
    5d48:	mov	r1, fp
    5d4c:	bl	1520 <fread@plt>
    5d50:	cmp	sl, #0
    5d54:	ble	547c <ReadSingleData.part.1+0x6b4>
    5d58:	ldr	r3, [sp, #4]
    5d5c:	sub	r2, r4, #1
    5d60:	add	r1, r3, sl, lsl #2
    5d64:	ldrb	ip, [r2, #1]!
    5d68:	vmov	s15, ip
    5d6c:	vcvt.f32.u32	s15, s15
    5d70:	vstmia	r3!, {s15}
    5d74:	cmp	r1, r3
    5d78:	bne	5d64 <ReadSingleData.part.1+0xf9c>
    5d7c:	b	547c <ReadSingleData.part.1+0x6b4>
    5d80:	ldr	sl, [sp, #20]
    5d84:	sub	r3, sl, #256	; 0x100
    5d88:	sub	r3, r3, #1
    5d8c:	lsr	r3, r3, #8
    5d90:	add	r4, r3, #1
    5d94:	lsl	r7, r4, #8
    5d98:	cmp	sl, r7
    5d9c:	ble	5430 <ReadSingleData.part.1+0x668>
    5da0:	ldr	r3, [sp]
    5da4:	sub	sl, sl, r7
    5da8:	mov	r0, r5
    5dac:	mov	r2, sl
    5db0:	mov	r1, fp
    5db4:	ldr	r3, [r3]
    5db8:	bl	1520 <fread@plt>
    5dbc:	add	r3, r6, r0
    5dc0:	cmp	sl, #0
    5dc4:	str	r3, [sp, #8]
    5dc8:	ble	5430 <ReadSingleData.part.1+0x668>
    5dcc:	ldr	r3, [sp, #4]
    5dd0:	add	r5, sl, r7
    5dd4:	ldr	r6, [sp, #12]
    5dd8:	add	r4, r3, r4, lsl #10
    5ddc:	add	r5, r3, r5, lsl #2
    5de0:	mov	r0, r6
    5de4:	add	r6, r6, #4
    5de8:	bl	1974 <Mat_floatSwap>
    5dec:	vstmia	r4!, {s0}
    5df0:	cmp	r4, r5
    5df4:	bne	5de0 <ReadSingleData.part.1+0x1018>
    5df8:	b	5430 <ReadSingleData.part.1+0x668>
    5dfc:	ldr	sl, [sp, #20]
    5e00:	sub	r3, sl, #256	; 0x100
    5e04:	sub	r3, r3, #1
    5e08:	lsr	r3, r3, #8
    5e0c:	add	r4, r3, #1
    5e10:	lsl	r7, r4, #8
    5e14:	cmp	sl, r7
    5e18:	ble	5430 <ReadSingleData.part.1+0x668>
    5e1c:	ldr	r3, [sp]
    5e20:	sub	sl, sl, r7
    5e24:	mov	r0, r5
    5e28:	mov	r2, sl
    5e2c:	mov	r1, fp
    5e30:	ldr	r3, [r3]
    5e34:	bl	1520 <fread@plt>
    5e38:	add	r3, r6, r0
    5e3c:	cmp	sl, #0
    5e40:	str	r3, [sp, #8]
    5e44:	ble	5430 <ReadSingleData.part.1+0x668>
    5e48:	ldr	r3, [sp, #4]
    5e4c:	add	r5, sl, r7
    5e50:	ldr	r6, [sp, #16]
    5e54:	add	r4, r3, r4, lsl #10
    5e58:	add	r5, r3, r5, lsl #2
    5e5c:	mov	r0, r6
    5e60:	add	r6, r6, #8
    5e64:	bl	19a4 <Mat_doubleSwap>
    5e68:	vcvt.f32.f64	s0, d0
    5e6c:	vstmia	r4!, {s0}
    5e70:	cmp	r4, r5
    5e74:	bne	5e5c <ReadSingleData.part.1+0x1094>
    5e78:	b	5430 <ReadSingleData.part.1+0x668>
    5e7c:	ldr	r3, [sp]
    5e80:	ldr	r6, [r3, #20]
    5e84:	ldr	r3, [r3]
    5e88:	cmp	r6, #0
    5e8c:	beq	6320 <ReadSingleData.part.1+0x1558>
    5e90:	cmp	sl, #256	; 0x100
    5e94:	ble	65d0 <ReadSingleData.part.1+0x1808>
    5e98:	sub	r2, sl, #256	; 0x100
    5e9c:	mov	r6, #0
    5ea0:	add	r4, sp, #2064	; 0x810
    5ea4:	mov	r8, r6
    5ea8:	str	r2, [sp, #16]
    5eac:	add	r5, sp, #24
    5eb0:	add	r4, r4, #8
    5eb4:	ldr	r2, [sp, #4]
    5eb8:	str	r2, [sp, #12]
    5ebc:	mov	r2, #256	; 0x100
    5ec0:	mov	r1, fp
    5ec4:	mov	r0, r5
    5ec8:	mov	r7, r5
    5ecc:	bl	1520 <fread@plt>
    5ed0:	ldr	r9, [sp, #12]
    5ed4:	add	r8, r8, r0
    5ed8:	str	r8, [sp, #8]
    5edc:	str	r5, [sp, #20]
    5ee0:	mov	r0, r7
    5ee4:	add	r7, r7, #8
    5ee8:	bl	17ec <Mat_int64Swap>
    5eec:	bl	4e318 <__aeabi_l2f>
    5ef0:	cmp	r4, r7
    5ef4:	str	r0, [r9], #4
    5ef8:	bne	5ee0 <ReadSingleData.part.1+0x1118>
    5efc:	ldr	r3, [sp, #12]
    5f00:	add	r6, r6, #256	; 0x100
    5f04:	add	r3, r3, #1024	; 0x400
    5f08:	str	r3, [sp, #12]
    5f0c:	ldr	r3, [sp, #16]
    5f10:	cmp	r3, r6
    5f14:	ble	6414 <ReadSingleData.part.1+0x164c>
    5f18:	ldr	r3, [sp]
    5f1c:	ldr	r3, [r3]
    5f20:	b	5ebc <ReadSingleData.part.1+0x10f4>
    5f24:	sub	r3, sl, #256	; 0x100
    5f28:	mov	r8, r1
    5f2c:	str	r0, [sp, #8]
    5f30:	sub	r3, r3, #1
    5f34:	lsr	r3, r3, #8
    5f38:	add	r4, r3, #1
    5f3c:	lsl	r7, r4, #8
    5f40:	cmp	sl, r7
    5f44:	ble	5430 <ReadSingleData.part.1+0x668>
    5f48:	ldr	r3, [sp]
    5f4c:	sub	sl, sl, r7
    5f50:	mov	r0, r5
    5f54:	mov	r2, sl
    5f58:	mov	r1, fp
    5f5c:	ldr	r3, [r3]
    5f60:	bl	1520 <fread@plt>
    5f64:	add	r3, r6, r0
    5f68:	cmp	sl, #0
    5f6c:	str	r3, [sp, #8]
    5f70:	ble	5430 <ReadSingleData.part.1+0x668>
    5f74:	ldr	r2, [sp, #4]
    5f78:	add	r3, sl, r7
    5f7c:	add	r4, r2, r4, lsl #10
    5f80:	add	r3, r2, r3, lsl #2
    5f84:	mov	r2, r8
    5f88:	ldr	r1, [r2, #4]!
    5f8c:	vmov	s15, r1
    5f90:	vcvt.f32.s32	s15, s15
    5f94:	vstmia	r4!, {s15}
    5f98:	cmp	r3, r4
    5f9c:	bne	5f88 <ReadSingleData.part.1+0x11c0>
    5fa0:	b	5430 <ReadSingleData.part.1+0x668>
    5fa4:	sub	r3, sl, #256	; 0x100
    5fa8:	mov	r8, r1
    5fac:	str	r0, [sp, #8]
    5fb0:	sub	r3, r3, #1
    5fb4:	lsr	r3, r3, #8
    5fb8:	add	r4, r3, #1
    5fbc:	lsl	r7, r4, #8
    5fc0:	cmp	sl, r7
    5fc4:	ble	5430 <ReadSingleData.part.1+0x668>
    5fc8:	ldr	r3, [sp]
    5fcc:	sub	sl, sl, r7
    5fd0:	mov	r0, r5
    5fd4:	mov	r2, sl
    5fd8:	mov	r1, fp
    5fdc:	ldr	r3, [r3]
    5fe0:	bl	1520 <fread@plt>
    5fe4:	add	r3, r6, r0
    5fe8:	cmp	sl, #0
    5fec:	str	r3, [sp, #8]
    5ff0:	ble	5430 <ReadSingleData.part.1+0x668>
    5ff4:	ldr	r2, [sp, #4]
    5ff8:	add	r3, sl, r7
    5ffc:	add	r4, r2, r4, lsl #10
    6000:	add	r3, r2, r3, lsl #2
    6004:	mov	r2, r8
    6008:	ldr	r1, [r2, #4]!
    600c:	vmov	s15, r1
    6010:	vcvt.f32.u32	s15, s15
    6014:	vstmia	r4!, {s15}
    6018:	cmp	r4, r3
    601c:	bne	6008 <ReadSingleData.part.1+0x1240>
    6020:	b	5430 <ReadSingleData.part.1+0x668>
    6024:	sub	r3, sl, #256	; 0x100
    6028:	mov	r8, r1
    602c:	str	r0, [sp, #8]
    6030:	sub	r3, r3, #1
    6034:	lsr	r3, r3, #8
    6038:	add	r4, r3, #1
    603c:	lsl	r7, r4, #8
    6040:	cmp	sl, r7
    6044:	ble	5430 <ReadSingleData.part.1+0x668>
    6048:	ldr	r3, [sp]
    604c:	sub	sl, sl, r7
    6050:	mov	r0, r5
    6054:	mov	r2, sl
    6058:	mov	r1, fp
    605c:	ldr	r3, [r3]
    6060:	bl	1520 <fread@plt>
    6064:	add	r3, r6, r0
    6068:	cmp	sl, #0
    606c:	str	r3, [sp, #8]
    6070:	ble	5430 <ReadSingleData.part.1+0x668>
    6074:	ldr	r2, [sp, #4]
    6078:	add	r3, sl, r7
    607c:	add	r4, r2, r4, lsl #10
    6080:	add	r3, r2, r3, lsl #2
    6084:	mov	r2, r8
    6088:	ldrsh	r1, [r2, #2]!
    608c:	vmov	s15, r1
    6090:	vcvt.f32.s32	s15, s15
    6094:	vstmia	r4!, {s15}
    6098:	cmp	r3, r4
    609c:	bne	6088 <ReadSingleData.part.1+0x12c0>
    60a0:	b	5430 <ReadSingleData.part.1+0x668>
    60a4:	sub	r3, sl, #256	; 0x100
    60a8:	mov	r8, ip
    60ac:	str	r0, [sp, #8]
    60b0:	sub	r3, r3, #1
    60b4:	lsr	r3, r3, #8
    60b8:	add	r4, r3, #1
    60bc:	lsl	r7, r4, #8
    60c0:	cmp	sl, r7
    60c4:	ble	5430 <ReadSingleData.part.1+0x668>
    60c8:	ldr	r3, [sp]
    60cc:	sub	sl, sl, r7
    60d0:	mov	r0, r5
    60d4:	mov	r2, sl
    60d8:	mov	r1, fp
    60dc:	ldr	r3, [r3]
    60e0:	bl	1520 <fread@plt>
    60e4:	add	r3, r6, r0
    60e8:	cmp	sl, #0
    60ec:	str	r3, [sp, #8]
    60f0:	ble	5430 <ReadSingleData.part.1+0x668>
    60f4:	ldr	r2, [sp, #4]
    60f8:	add	r3, sl, r7
    60fc:	add	r4, r2, r4, lsl #10
    6100:	add	r3, r2, r3, lsl #2
    6104:	mov	r2, r8
    6108:	ldr	r1, [r2], #4
    610c:	str	r1, [r4], #4
    6110:	cmp	r4, r3
    6114:	bne	6108 <ReadSingleData.part.1+0x1340>
    6118:	b	5430 <ReadSingleData.part.1+0x668>
    611c:	sub	r3, sl, #256	; 0x100
    6120:	mov	r8, r0
    6124:	str	r1, [sp, #8]
    6128:	sub	r3, r3, #1
    612c:	lsr	r3, r3, #8
    6130:	add	r4, r3, #1
    6134:	lsl	r7, r4, #8
    6138:	cmp	sl, r7
    613c:	ble	5430 <ReadSingleData.part.1+0x668>
    6140:	ldr	r3, [sp]
    6144:	sub	sl, sl, r7
    6148:	mov	r0, r5
    614c:	mov	r2, sl
    6150:	mov	r1, fp
    6154:	ldr	r3, [r3]
    6158:	bl	1520 <fread@plt>
    615c:	add	r3, r6, r0
    6160:	cmp	sl, #0
    6164:	str	r3, [sp, #8]
    6168:	ble	5430 <ReadSingleData.part.1+0x668>
    616c:	ldr	r2, [sp, #4]
    6170:	add	r3, sl, r7
    6174:	add	r4, r2, r4, lsl #10
    6178:	add	r3, r2, r3, lsl #2
    617c:	mov	r2, r8
    6180:	vldmia	r2!, {d7}
    6184:	vcvt.f32.f64	s14, d7
    6188:	vstmia	r4!, {s14}
    618c:	cmp	r4, r3
    6190:	bne	6180 <ReadSingleData.part.1+0x13b8>
    6194:	b	5430 <ReadSingleData.part.1+0x668>
    6198:	sub	r3, sl, #256	; 0x100
    619c:	mov	r8, r1
    61a0:	str	r0, [sp, #8]
    61a4:	sub	r3, r3, #1
    61a8:	lsr	r3, r3, #8
    61ac:	add	r4, r3, #1
    61b0:	lsl	r7, r4, #8
    61b4:	cmp	sl, r7
    61b8:	ble	5430 <ReadSingleData.part.1+0x668>
    61bc:	ldr	r3, [sp]
    61c0:	sub	sl, sl, r7
    61c4:	mov	r0, r5
    61c8:	mov	r2, sl
    61cc:	mov	r1, fp
    61d0:	ldr	r3, [r3]
    61d4:	bl	1520 <fread@plt>
    61d8:	add	r3, r6, r0
    61dc:	cmp	sl, #0
    61e0:	str	r3, [sp, #8]
    61e4:	ble	5430 <ReadSingleData.part.1+0x668>
    61e8:	ldr	r2, [sp, #4]
    61ec:	add	r3, sl, r7
    61f0:	add	r4, r2, r4, lsl #10
    61f4:	add	r3, r2, r3, lsl #2
    61f8:	mov	r2, r8
    61fc:	ldrh	r1, [r2, #2]!
    6200:	vmov	s15, r1
    6204:	vcvt.f32.u32	s15, s15
    6208:	vstmia	r4!, {s15}
    620c:	cmp	r3, r4
    6210:	bne	61fc <ReadSingleData.part.1+0x1434>
    6214:	b	5430 <ReadSingleData.part.1+0x668>
    6218:	ldr	sl, [sp, #20]
    621c:	sub	r3, sl, #256	; 0x100
    6220:	sub	r3, r3, #1
    6224:	lsr	r3, r3, #8
    6228:	add	r4, r3, #1
    622c:	lsl	r7, r4, #8
    6230:	cmp	sl, r7
    6234:	ble	5430 <ReadSingleData.part.1+0x668>
    6238:	ldr	r3, [sp]
    623c:	sub	sl, sl, r7
    6240:	mov	r0, r5
    6244:	mov	r2, sl
    6248:	mov	r1, fp
    624c:	ldr	r3, [r3]
    6250:	bl	1520 <fread@plt>
    6254:	add	r3, r6, r0
    6258:	cmp	sl, #0
    625c:	str	r3, [sp, #8]
    6260:	ble	5430 <ReadSingleData.part.1+0x668>
    6264:	ldr	r3, [sp, #4]
    6268:	add	r5, sl, r7
    626c:	ldr	r6, [sp, #16]
    6270:	add	r4, r3, r4, lsl #10
    6274:	add	r5, r3, r5, lsl #2
    6278:	mov	r0, r6
    627c:	add	r6, r6, #2
    6280:	bl	192c <Mat_int16Swap>
    6284:	vmov	s15, r0
    6288:	vcvt.f32.s32	s15, s15
    628c:	vstmia	r4!, {s15}
    6290:	cmp	r5, r4
    6294:	bne	6278 <ReadSingleData.part.1+0x14b0>
    6298:	b	5430 <ReadSingleData.part.1+0x668>
    629c:	cmp	sl, #256	; 0x100
    62a0:	ble	6500 <ReadSingleData.part.1+0x1738>
    62a4:	sub	r2, sl, #256	; 0x100
    62a8:	add	r5, sp, #24
    62ac:	str	r6, [sp, #16]
    62b0:	add	r4, sp, #2064	; 0x810
    62b4:	str	r2, [sp, #20]
    62b8:	ldr	r2, [sp, #4]
    62bc:	str	r2, [sp, #12]
    62c0:	mov	r2, #256	; 0x100
    62c4:	mov	r1, fp
    62c8:	mov	r0, r5
    62cc:	sub	r9, r5, #8
    62d0:	bl	1520 <fread@plt>
    62d4:	ldr	r7, [sp, #12]
    62d8:	add	r6, r6, r0
    62dc:	mov	r8, r9
    62e0:	str	r6, [sp, #8]
    62e4:	ldrd	r0, [r8, #8]!
    62e8:	bl	4e308 <__aeabi_ul2f>
    62ec:	str	r0, [r7], #4
    62f0:	cmp	r4, r8
    62f4:	bne	62e4 <ReadSingleData.part.1+0x151c>
    62f8:	ldrd	r2, [sp, #12]
    62fc:	add	r3, r3, #256	; 0x100
    6300:	add	r2, r2, #1024	; 0x400
    6304:	strd	r2, [sp, #12]
    6308:	ldr	r2, [sp, #20]
    630c:	cmp	r3, r2
    6310:	bge	63a4 <ReadSingleData.part.1+0x15dc>
    6314:	ldr	r3, [sp]
    6318:	ldr	r3, [r3]
    631c:	b	62c0 <ReadSingleData.part.1+0x14f8>
    6320:	cmp	sl, #256	; 0x100
    6324:	ble	658c <ReadSingleData.part.1+0x17c4>
    6328:	sub	r2, sl, #256	; 0x100
    632c:	add	r5, sp, #24
    6330:	str	r6, [sp, #16]
    6334:	add	r4, sp, #2064	; 0x810
    6338:	str	r2, [sp, #20]
    633c:	ldr	r2, [sp, #4]
    6340:	str	r2, [sp, #12]
    6344:	mov	r2, #256	; 0x100
    6348:	mov	r1, fp
    634c:	mov	r0, r5
    6350:	sub	r9, r5, #8
    6354:	bl	1520 <fread@plt>
    6358:	ldr	r7, [sp, #12]
    635c:	add	r6, r6, r0
    6360:	mov	r8, r9
    6364:	str	r6, [sp, #8]
    6368:	ldrd	r0, [r8, #8]!
    636c:	bl	4e318 <__aeabi_l2f>
    6370:	str	r0, [r7], #4
    6374:	cmp	r4, r8
    6378:	bne	6368 <ReadSingleData.part.1+0x15a0>
    637c:	ldrd	r2, [sp, #12]
    6380:	add	r3, r3, #256	; 0x100
    6384:	add	r2, r2, #1024	; 0x400
    6388:	strd	r2, [sp, #12]
    638c:	ldr	r2, [sp, #20]
    6390:	cmp	r2, r3
    6394:	ble	6490 <ReadSingleData.part.1+0x16c8>
    6398:	ldr	r3, [sp]
    639c:	ldr	r3, [r3]
    63a0:	b	6344 <ReadSingleData.part.1+0x157c>
    63a4:	sub	r3, sl, #256	; 0x100
    63a8:	sub	r3, r3, #1
    63ac:	lsr	r3, r3, #8
    63b0:	add	r4, r3, #1
    63b4:	lsl	r7, r4, #8
    63b8:	cmp	sl, r7
    63bc:	ble	5430 <ReadSingleData.part.1+0x668>
    63c0:	ldr	r3, [sp]
    63c4:	sub	r8, sl, r7
    63c8:	mov	r0, r5
    63cc:	mov	r2, r8
    63d0:	mov	r1, fp
    63d4:	ldr	r3, [r3]
    63d8:	bl	1520 <fread@plt>
    63dc:	add	r3, r6, r0
    63e0:	cmp	r8, #0
    63e4:	str	r3, [sp, #8]
    63e8:	ble	5430 <ReadSingleData.part.1+0x668>
    63ec:	ldr	r3, [sp, #4]
    63f0:	add	r5, r7, r8
    63f4:	add	r4, r3, r4, lsl #10
    63f8:	add	r5, r3, r5, lsl #2
    63fc:	ldrd	r0, [r9, #8]!
    6400:	bl	4e308 <__aeabi_ul2f>
    6404:	str	r0, [r4], #4
    6408:	cmp	r5, r4
    640c:	bne	63fc <ReadSingleData.part.1+0x1634>
    6410:	b	5430 <ReadSingleData.part.1+0x668>
    6414:	sub	r3, sl, #256	; 0x100
    6418:	sub	r3, r3, #1
    641c:	lsr	r3, r3, #8
    6420:	add	r4, r3, #1
    6424:	lsl	r6, r4, #8
    6428:	cmp	sl, r6
    642c:	ble	5430 <ReadSingleData.part.1+0x668>
    6430:	ldr	r3, [sp]
    6434:	sub	sl, sl, r6
    6438:	mov	r0, r5
    643c:	mov	r2, sl
    6440:	mov	r1, fp
    6444:	ldr	r3, [r3]
    6448:	bl	1520 <fread@plt>
    644c:	add	r3, r8, r0
    6450:	cmp	sl, #0
    6454:	str	r3, [sp, #8]
    6458:	ble	5430 <ReadSingleData.part.1+0x668>
    645c:	ldr	r3, [sp, #4]
    6460:	add	r5, sl, r6
    6464:	ldr	r6, [sp, #20]
    6468:	add	r4, r3, r4, lsl #10
    646c:	add	r5, r3, r5, lsl #2
    6470:	mov	r0, r6
    6474:	add	r6, r6, #8
    6478:	bl	17ec <Mat_int64Swap>
    647c:	bl	4e318 <__aeabi_l2f>
    6480:	str	r0, [r4], #4
    6484:	cmp	r4, r5
    6488:	bne	6470 <ReadSingleData.part.1+0x16a8>
    648c:	b	5430 <ReadSingleData.part.1+0x668>
    6490:	sub	r3, sl, #256	; 0x100
    6494:	sub	r3, r3, #1
    6498:	lsr	r3, r3, #8
    649c:	add	r4, r3, #1
    64a0:	lsl	r7, r4, #8
    64a4:	cmp	sl, r7
    64a8:	ble	5430 <ReadSingleData.part.1+0x668>
    64ac:	ldr	r3, [sp]
    64b0:	sub	sl, sl, r7
    64b4:	mov	r0, r5
    64b8:	mov	r2, sl
    64bc:	mov	r1, fp
    64c0:	ldr	r3, [r3]
    64c4:	bl	1520 <fread@plt>
    64c8:	add	r3, r6, r0
    64cc:	cmp	sl, #0
    64d0:	str	r3, [sp, #8]
    64d4:	ble	5430 <ReadSingleData.part.1+0x668>
    64d8:	ldr	r3, [sp, #4]
    64dc:	add	r5, sl, r7
    64e0:	add	r4, r3, r4, lsl #10
    64e4:	add	r5, r3, r5, lsl #2
    64e8:	ldrd	r0, [r9, #8]!
    64ec:	bl	4e318 <__aeabi_l2f>
    64f0:	str	r0, [r4], #4
    64f4:	cmp	r5, r4
    64f8:	bne	64e8 <ReadSingleData.part.1+0x1720>
    64fc:	b	5430 <ReadSingleData.part.1+0x668>
    6500:	add	r4, sp, #24
    6504:	mov	r2, sl
    6508:	mov	r0, r4
    650c:	mov	r1, fp
    6510:	bl	1520 <fread@plt>
    6514:	cmp	sl, #0
    6518:	str	r0, [sp, #8]
    651c:	ble	5430 <ReadSingleData.part.1+0x668>
    6520:	ldr	r5, [sp, #4]
    6524:	sub	r4, r4, #8
    6528:	add	sl, r5, sl, lsl #2
    652c:	ldrd	r0, [r4, #8]!
    6530:	bl	4e308 <__aeabi_ul2f>
    6534:	str	r0, [r5], #4
    6538:	cmp	sl, r5
    653c:	bne	652c <ReadSingleData.part.1+0x1764>
    6540:	b	5430 <ReadSingleData.part.1+0x668>
    6544:	add	r4, sp, #24
    6548:	mov	r2, sl
    654c:	mov	r0, r4
    6550:	mov	r1, fp
    6554:	bl	1520 <fread@plt>
    6558:	cmp	sl, #0
    655c:	str	r0, [sp, #8]
    6560:	ble	5430 <ReadSingleData.part.1+0x668>
    6564:	ldr	r5, [sp, #4]
    6568:	add	sl, r5, sl, lsl #2
    656c:	mov	r0, r4
    6570:	add	r4, r4, #8
    6574:	bl	1858 <Mat_uint64Swap>
    6578:	bl	4e308 <__aeabi_ul2f>
    657c:	str	r0, [r5], #4
    6580:	cmp	sl, r5
    6584:	bne	656c <ReadSingleData.part.1+0x17a4>
    6588:	b	5430 <ReadSingleData.part.1+0x668>
    658c:	add	r4, sp, #24
    6590:	mov	r2, sl
    6594:	mov	r0, r4
    6598:	mov	r1, fp
    659c:	bl	1520 <fread@plt>
    65a0:	cmp	sl, #0
    65a4:	str	r0, [sp, #8]
    65a8:	ble	5430 <ReadSingleData.part.1+0x668>
    65ac:	ldr	r5, [sp, #4]
    65b0:	sub	r4, r4, #8
    65b4:	add	sl, r5, sl, lsl #2
    65b8:	ldrd	r0, [r4, #8]!
    65bc:	bl	4e318 <__aeabi_l2f>
    65c0:	str	r0, [r5], #4
    65c4:	cmp	sl, r5
    65c8:	bne	65b8 <ReadSingleData.part.1+0x17f0>
    65cc:	b	5430 <ReadSingleData.part.1+0x668>
    65d0:	add	r4, sp, #24
    65d4:	mov	r2, sl
    65d8:	mov	r0, r4
    65dc:	mov	r1, fp
    65e0:	bl	1520 <fread@plt>
    65e4:	cmp	sl, #0
    65e8:	str	r0, [sp, #8]
    65ec:	ble	5430 <ReadSingleData.part.1+0x668>
    65f0:	ldr	r5, [sp, #4]
    65f4:	add	sl, r5, sl, lsl #2
    65f8:	mov	r0, r4
    65fc:	add	r4, r4, #8
    6600:	bl	17ec <Mat_int64Swap>
    6604:	bl	4e318 <__aeabi_l2f>
    6608:	str	r0, [r5], #4
    660c:	cmp	r5, sl
    6610:	bne	65f8 <ReadSingleData.part.1+0x1830>
    6614:	b	5430 <ReadSingleData.part.1+0x668>

00006618 <ReadInt64Data.part.3>:
    6618:	strd	r4, [sp, #-36]!	; 0xffffffdc
    661c:	mov	r4, r2
    6620:	mov	r5, r3
    6624:	strd	r6, [sp, #8]
    6628:	strd	r8, [sp, #16]
    662c:	strd	sl, [sp, #24]
    6630:	str	lr, [sp, #32]
    6634:	sub	sp, sp, #2080	; 0x820
    6638:	sub	sp, sp, #4
    663c:	strd	r0, [sp, #4]
    6640:	mov	r0, r2
    6644:	bl	1598 <Mat_SizeOf@plt>
    6648:	sub	r3, r4, #1
    664c:	mov	fp, r0
    6650:	cmp	r3, #8
    6654:	addls	pc, pc, r3, lsl #2
    6658:	b	6b60 <ReadInt64Data.part.3+0x548>
    665c:	b	6724 <ReadInt64Data.part.3+0x10c>
    6660:	b	684c <ReadInt64Data.part.3+0x234>
    6664:	b	6978 <ReadInt64Data.part.3+0x360>
    6668:	b	67a8 <ReadInt64Data.part.3+0x190>
    666c:	b	6a1c <ReadInt64Data.part.3+0x404>
    6670:	b	68d0 <ReadInt64Data.part.3+0x2b8>
    6674:	b	6abc <ReadInt64Data.part.3+0x4a4>
    6678:	b	6b60 <ReadInt64Data.part.3+0x548>
    667c:	b	6680 <ReadInt64Data.part.3+0x68>
    6680:	ldr	r3, [sp, #4]
    6684:	ldr	r7, [r3, #20]
    6688:	ldr	r3, [r3]
    668c:	cmp	r7, #0
    6690:	beq	6f54 <ReadInt64Data.part.3+0x93c>
    6694:	cmp	r5, #256	; 0x100
    6698:	ble	7284 <ReadInt64Data.part.3+0xc6c>
    669c:	sub	r2, r5, #256	; 0x100
    66a0:	mov	r8, #0
    66a4:	mov	r7, r8
    66a8:	add	r6, sp, #32
    66ac:	str	r2, [sp, #16]
    66b0:	add	r4, sp, #2080	; 0x820
    66b4:	ldr	r2, [sp, #8]
    66b8:	str	r5, [sp, #24]
    66bc:	sub	r9, r2, #8
    66c0:	mov	r2, #256	; 0x100
    66c4:	mov	r1, fp
    66c8:	mov	r0, r6
    66cc:	mov	sl, r9
    66d0:	bl	1520 <fread@plt>
    66d4:	add	r7, r7, r0
    66d8:	mov	r5, r6
    66dc:	str	r7, [sp, #12]
    66e0:	str	r6, [sp, #20]
    66e4:	mov	r0, r5
    66e8:	add	r5, r5, #8
    66ec:	bl	19a4 <Mat_doubleSwap>
    66f0:	vmov	r0, r1, d0
    66f4:	bl	4e3c0 <__aeabi_d2lz>
    66f8:	cmp	r5, r4
    66fc:	strd	r0, [sl, #8]!
    6700:	bne	66e4 <ReadInt64Data.part.3+0xcc>
    6704:	ldr	r3, [sp, #16]
    6708:	add	r8, r8, #256	; 0x100
    670c:	add	r9, r9, #2048	; 0x800
    6710:	cmp	r8, r3
    6714:	bge	7694 <ReadInt64Data.part.3+0x107c>
    6718:	ldr	r3, [sp, #4]
    671c:	ldr	r3, [r3]
    6720:	b	66c0 <ReadInt64Data.part.3+0xa8>
    6724:	ldr	sl, [sp, #4]
    6728:	cmp	r5, #256	; 0x100
    672c:	ldr	r3, [sl]
    6730:	ble	7508 <ReadInt64Data.part.3+0xef0>
    6734:	mov	r8, #0
    6738:	add	r6, sp, #32
    673c:	str	r5, [sp, #12]
    6740:	ldr	r1, [sp, #8]
    6744:	sub	r2, r5, #256	; 0x100
    6748:	mov	r7, r8
    674c:	add	r4, r6, #255	; 0xff
    6750:	mov	r5, r2
    6754:	sub	r9, r1, #8
    6758:	mov	r2, #256	; 0x100
    675c:	mov	r1, fp
    6760:	mov	r0, r6
    6764:	bl	1520 <fread@plt>
    6768:	add	r7, r7, r0
    676c:	sub	lr, r6, #1
    6770:	mov	ip, r7
    6774:	mov	r3, lr
    6778:	mov	r2, r9
    677c:	ldrsb	r0, [r3, #1]!
    6780:	asr	r1, r0, #31
    6784:	cmp	r4, r3
    6788:	strd	r0, [r2, #8]!
    678c:	bne	677c <ReadInt64Data.part.3+0x164>
    6790:	add	r8, r8, #256	; 0x100
    6794:	add	r9, r9, #2048	; 0x800
    6798:	cmp	r5, r8
    679c:	ble	6cb4 <ReadInt64Data.part.3+0x69c>
    67a0:	ldr	r3, [sl]
    67a4:	b	6758 <ReadInt64Data.part.3+0x140>
    67a8:	ldr	r3, [sp, #4]
    67ac:	ldr	r7, [r3, #20]
    67b0:	ldr	r3, [r3]
    67b4:	cmp	r7, #0
    67b8:	beq	6e54 <ReadInt64Data.part.3+0x83c>
    67bc:	cmp	r5, #256	; 0x100
    67c0:	ble	7238 <ReadInt64Data.part.3+0xc20>
    67c4:	sub	r2, r5, #256	; 0x100
    67c8:	mov	r8, #0
    67cc:	mov	r7, r8
    67d0:	add	r6, sp, #32
    67d4:	str	r2, [sp, #16]
    67d8:	add	r4, sp, #544	; 0x220
    67dc:	ldr	r2, [sp, #8]
    67e0:	str	r5, [sp, #24]
    67e4:	sub	r9, r2, #8
    67e8:	mov	r2, #256	; 0x100
    67ec:	mov	r1, fp
    67f0:	mov	r0, r6
    67f4:	mov	sl, r9
    67f8:	bl	1520 <fread@plt>
    67fc:	add	r7, r7, r0
    6800:	mov	r5, r6
    6804:	str	r7, [sp, #12]
    6808:	str	r6, [sp, #20]
    680c:	mov	r0, r5
    6810:	add	r5, r5, #2
    6814:	bl	1950 <Mat_uint16Swap>
    6818:	uxth	r0, r0
    681c:	mov	r1, #0
    6820:	cmp	r4, r5
    6824:	strd	r0, [sl, #8]!
    6828:	bne	680c <ReadInt64Data.part.3+0x1f4>
    682c:	ldr	r3, [sp, #16]
    6830:	add	r8, r8, #256	; 0x100
    6834:	add	r9, r9, #2048	; 0x800
    6838:	cmp	r8, r3
    683c:	bge	7484 <ReadInt64Data.part.3+0xe6c>
    6840:	ldr	r3, [sp, #4]
    6844:	ldr	r3, [r3]
    6848:	b	67e8 <ReadInt64Data.part.3+0x1d0>
    684c:	ldr	sl, [sp, #4]
    6850:	cmp	r5, #256	; 0x100
    6854:	ldr	r3, [sl]
    6858:	ble	75cc <ReadInt64Data.part.3+0xfb4>
    685c:	mov	r8, #0
    6860:	add	r6, sp, #32
    6864:	str	r5, [sp, #12]
    6868:	ldr	r1, [sp, #8]
    686c:	sub	r2, r5, #256	; 0x100
    6870:	mov	r7, r8
    6874:	add	r4, r6, #255	; 0xff
    6878:	mov	r5, r2
    687c:	sub	r9, r1, #8
    6880:	mov	r2, #256	; 0x100
    6884:	mov	r1, fp
    6888:	mov	r0, r6
    688c:	bl	1520 <fread@plt>
    6890:	add	r7, r7, r0
    6894:	sub	lr, r6, #1
    6898:	mov	ip, r7
    689c:	mov	r3, lr
    68a0:	mov	r2, r9
    68a4:	ldrb	r0, [r3, #1]!
    68a8:	mov	r1, #0
    68ac:	cmp	r4, r3
    68b0:	strd	r0, [r2, #8]!
    68b4:	bne	68a4 <ReadInt64Data.part.3+0x28c>
    68b8:	add	r8, r8, #256	; 0x100
    68bc:	add	r9, r9, #2048	; 0x800
    68c0:	cmp	r5, r8
    68c4:	ble	6ce0 <ReadInt64Data.part.3+0x6c8>
    68c8:	ldr	r3, [sl]
    68cc:	b	6880 <ReadInt64Data.part.3+0x268>
    68d0:	ldr	r3, [sp, #4]
    68d4:	ldr	r8, [r3, #20]
    68d8:	ldr	r3, [r3]
    68dc:	cmp	r8, #0
    68e0:	beq	6ed4 <ReadInt64Data.part.3+0x8bc>
    68e4:	cmp	r5, #256	; 0x100
    68e8:	ble	72d0 <ReadInt64Data.part.3+0xcb8>
    68ec:	sub	r2, r5, #256	; 0x100
    68f0:	mov	r8, #0
    68f4:	str	r0, [sp, #16]
    68f8:	mov	r9, r8
    68fc:	mov	r7, r8
    6900:	str	r2, [sp, #24]
    6904:	add	r6, sp, #32
    6908:	add	r4, sp, #1056	; 0x420
    690c:	ldr	r2, [sp, #8]
    6910:	str	r5, [sp, #28]
    6914:	sub	sl, r2, #8
    6918:	mov	r2, #256	; 0x100
    691c:	mov	r0, r6
    6920:	ldr	r1, [sp, #16]
    6924:	bl	1520 <fread@plt>
    6928:	add	r9, r9, r0
    692c:	mov	fp, sl
    6930:	mov	r5, r6
    6934:	str	r9, [sp, #12]
    6938:	str	r6, [sp, #20]
    693c:	mov	r0, r5
    6940:	add	r5, r5, #4
    6944:	bl	18f8 <Mat_uint32Swap>
    6948:	cmp	r4, r5
    694c:	str	r0, [fp, #8]!
    6950:	str	r7, [fp, #4]
    6954:	bne	693c <ReadInt64Data.part.3+0x324>
    6958:	ldr	r3, [sp, #24]
    695c:	add	r8, r8, #256	; 0x100
    6960:	add	sl, sl, #2048	; 0x800
    6964:	cmp	r8, r3
    6968:	bge	73fc <ReadInt64Data.part.3+0xde4>
    696c:	ldr	r3, [sp, #4]
    6970:	ldr	r3, [r3]
    6974:	b	6918 <ReadInt64Data.part.3+0x300>
    6978:	ldr	r3, [sp, #4]
    697c:	ldr	r7, [r3, #20]
    6980:	ldr	r3, [r3]
    6984:	cmp	r7, #0
    6988:	beq	6d58 <ReadInt64Data.part.3+0x740>
    698c:	cmp	r5, #256	; 0x100
    6990:	ble	73b0 <ReadInt64Data.part.3+0xd98>
    6994:	sub	r2, r5, #256	; 0x100
    6998:	mov	r8, #0
    699c:	mov	r7, r8
    69a0:	add	r6, sp, #32
    69a4:	str	r2, [sp, #16]
    69a8:	add	r4, sp, #544	; 0x220
    69ac:	ldr	r2, [sp, #8]
    69b0:	str	r5, [sp, #24]
    69b4:	sub	r9, r2, #8
    69b8:	mov	r2, #256	; 0x100
    69bc:	mov	r1, fp
    69c0:	mov	r0, r6
    69c4:	mov	sl, r9
    69c8:	bl	1520 <fread@plt>
    69cc:	add	r7, r7, r0
    69d0:	mov	r5, r6
    69d4:	str	r7, [sp, #12]
    69d8:	str	r6, [sp, #20]
    69dc:	mov	r0, r5
    69e0:	add	r5, r5, #2
    69e4:	bl	192c <Mat_int16Swap>
    69e8:	sxth	r0, r0
    69ec:	cmp	r4, r5
    69f0:	asr	r1, r0, #31
    69f4:	strd	r0, [sl, #8]!
    69f8:	bne	69dc <ReadInt64Data.part.3+0x3c4>
    69fc:	ldr	r3, [sp, #16]
    6a00:	add	r8, r8, #256	; 0x100
    6a04:	add	r9, r9, #2048	; 0x800
    6a08:	cmp	r8, r3
    6a0c:	bge	7ab0 <ReadInt64Data.part.3+0x1498>
    6a10:	ldr	r3, [sp, #4]
    6a14:	ldr	r3, [r3]
    6a18:	b	69b8 <ReadInt64Data.part.3+0x3a0>
    6a1c:	ldr	r3, [sp, #4]
    6a20:	ldr	r7, [r3, #20]
    6a24:	ldr	r3, [r3]
    6a28:	cmp	r7, #0
    6a2c:	beq	6dd8 <ReadInt64Data.part.3+0x7c0>
    6a30:	cmp	r5, #256	; 0x100
    6a34:	ble	7368 <ReadInt64Data.part.3+0xd50>
    6a38:	sub	r2, r5, #256	; 0x100
    6a3c:	mov	r8, #0
    6a40:	mov	r7, r8
    6a44:	add	r6, sp, #32
    6a48:	str	r2, [sp, #16]
    6a4c:	add	r4, sp, #1056	; 0x420
    6a50:	ldr	r2, [sp, #8]
    6a54:	str	r5, [sp, #24]
    6a58:	sub	r9, r2, #8
    6a5c:	mov	r2, #256	; 0x100
    6a60:	mov	r1, fp
    6a64:	mov	r0, r6
    6a68:	mov	sl, r9
    6a6c:	bl	1520 <fread@plt>
    6a70:	add	r7, r7, r0
    6a74:	mov	r5, r6
    6a78:	str	r7, [sp, #12]
    6a7c:	str	r6, [sp, #20]
    6a80:	mov	r0, r5
    6a84:	add	r5, r5, #4
    6a88:	bl	18c4 <Mat_int32Swap>
    6a8c:	asr	r1, r0, #31
    6a90:	cmp	r4, r5
    6a94:	strd	r0, [sl, #8]!
    6a98:	bne	6a80 <ReadInt64Data.part.3+0x468>
    6a9c:	ldr	r3, [sp, #16]
    6aa0:	add	r8, r8, #256	; 0x100
    6aa4:	add	r9, r9, #2048	; 0x800
    6aa8:	cmp	r8, r3
    6aac:	bge	754c <ReadInt64Data.part.3+0xf34>
    6ab0:	ldr	r3, [sp, #4]
    6ab4:	ldr	r3, [r3]
    6ab8:	b	6a5c <ReadInt64Data.part.3+0x444>
    6abc:	ldr	r3, [sp, #4]
    6ac0:	ldr	r7, [r3, #20]
    6ac4:	ldr	r3, [r3]
    6ac8:	cmp	r7, #0
    6acc:	beq	6fd4 <ReadInt64Data.part.3+0x9bc>
    6ad0:	cmp	r5, #256	; 0x100
    6ad4:	ble	731c <ReadInt64Data.part.3+0xd04>
    6ad8:	sub	r2, r5, #256	; 0x100
    6adc:	mov	r8, #0
    6ae0:	mov	r7, r8
    6ae4:	add	r6, sp, #32
    6ae8:	str	r2, [sp, #16]
    6aec:	add	r4, sp, #1056	; 0x420
    6af0:	ldr	r2, [sp, #8]
    6af4:	str	r5, [sp, #24]
    6af8:	sub	r9, r2, #8
    6afc:	mov	r2, #256	; 0x100
    6b00:	mov	r1, fp
    6b04:	mov	r0, r6
    6b08:	mov	sl, r9
    6b0c:	bl	1520 <fread@plt>
    6b10:	add	r7, r7, r0
    6b14:	mov	r5, r6
    6b18:	str	r7, [sp, #12]
    6b1c:	str	r6, [sp, #20]
    6b20:	mov	r0, r5
    6b24:	add	r5, r5, #4
    6b28:	bl	1974 <Mat_floatSwap>
    6b2c:	vmov	r0, s0
    6b30:	bl	4e394 <__aeabi_f2lz>
    6b34:	cmp	r5, r4
    6b38:	strd	r0, [sl, #8]!
    6b3c:	bne	6b20 <ReadInt64Data.part.3+0x508>
    6b40:	ldr	r3, [sp, #16]
    6b44:	add	r8, r8, #256	; 0x100
    6b48:	add	r9, r9, #2048	; 0x800
    6b4c:	cmp	r8, r3
    6b50:	bge	7610 <ReadInt64Data.part.3+0xff8>
    6b54:	ldr	r3, [sp, #4]
    6b58:	ldr	r3, [r3]
    6b5c:	b	6afc <ReadInt64Data.part.3+0x4e4>
    6b60:	cmp	r4, #12
    6b64:	beq	7718 <ReadInt64Data.part.3+0x1100>
    6b68:	cmp	r4, #13
    6b6c:	movne	r0, #0
    6b70:	bne	6c94 <ReadInt64Data.part.3+0x67c>
    6b74:	ldr	r3, [sp, #4]
    6b78:	ldr	r7, [r3, #20]
    6b7c:	ldr	r3, [r3]
    6b80:	cmp	r7, #0
    6b84:	beq	7b34 <ReadInt64Data.part.3+0x151c>
    6b88:	cmp	r5, #256	; 0x100
    6b8c:	ble	7dc4 <ReadInt64Data.part.3+0x17ac>
    6b90:	sub	r2, r5, #256	; 0x100
    6b94:	mov	r7, #0
    6b98:	mov	r8, r7
    6b9c:	add	r6, sp, #32
    6ba0:	str	r2, [sp, #20]
    6ba4:	add	r4, sp, #2080	; 0x820
    6ba8:	ldr	r2, [sp, #8]
    6bac:	sub	r2, r2, #8
    6bb0:	str	r2, [sp, #16]
    6bb4:	mov	r2, #256	; 0x100
    6bb8:	mov	r1, fp
    6bbc:	mov	r0, r6
    6bc0:	mov	r9, r6
    6bc4:	bl	1520 <fread@plt>
    6bc8:	ldr	sl, [sp, #16]
    6bcc:	add	r8, r8, r0
    6bd0:	str	r8, [sp, #12]
    6bd4:	str	r6, [sp, #24]
    6bd8:	mov	r0, r9
    6bdc:	add	r9, r9, #8
    6be0:	bl	1858 <Mat_uint64Swap>
    6be4:	cmp	r4, r9
    6be8:	strd	r0, [sl, #8]!
    6bec:	bne	6bd8 <ReadInt64Data.part.3+0x5c0>
    6bf0:	ldr	r3, [sp, #16]
    6bf4:	add	r7, r7, #256	; 0x100
    6bf8:	add	r3, r3, #2048	; 0x800
    6bfc:	str	r3, [sp, #16]
    6c00:	ldr	r3, [sp, #20]
    6c04:	cmp	r3, r7
    6c08:	ble	6c18 <ReadInt64Data.part.3+0x600>
    6c0c:	ldr	r3, [sp, #4]
    6c10:	ldr	r3, [r3]
    6c14:	b	6bb4 <ReadInt64Data.part.3+0x59c>
    6c18:	sub	r3, r5, #256	; 0x100
    6c1c:	sub	r3, r3, #1
    6c20:	lsr	r3, r3, #8
    6c24:	add	r4, r3, #1
    6c28:	lsl	r7, r4, #8
    6c2c:	cmp	r5, r7
    6c30:	ble	6c8c <ReadInt64Data.part.3+0x674>
    6c34:	ldr	r3, [sp, #4]
    6c38:	sub	r5, r5, r7
    6c3c:	mov	r0, r6
    6c40:	mov	r2, r5
    6c44:	mov	r1, fp
    6c48:	ldr	r3, [r3]
    6c4c:	bl	1520 <fread@plt>
    6c50:	add	r3, r8, r0
    6c54:	cmp	r5, #0
    6c58:	str	r3, [sp, #12]
    6c5c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    6c60:	ldr	r3, [sp, #8]
    6c64:	add	r5, r5, r7
    6c68:	ldr	r6, [sp, #24]
    6c6c:	add	r4, r3, r4, lsl #11
    6c70:	add	r5, r3, r5, lsl #3
    6c74:	mov	r0, r6
    6c78:	add	r6, r6, #8
    6c7c:	bl	1858 <Mat_uint64Swap>
    6c80:	strd	r0, [r4], #8
    6c84:	cmp	r5, r4
    6c88:	bne	6c74 <ReadInt64Data.part.3+0x65c>
    6c8c:	ldr	r3, [sp, #12]
    6c90:	mul	r0, r3, fp
    6c94:	add	sp, sp, #2080	; 0x820
    6c98:	add	sp, sp, #4
    6c9c:	ldrd	r4, [sp]
    6ca0:	ldrd	r6, [sp, #8]
    6ca4:	ldrd	r8, [sp, #16]
    6ca8:	ldrd	sl, [sp, #24]
    6cac:	add	sp, sp, #32
    6cb0:	pop	{pc}		; (ldr pc, [sp], #4)
    6cb4:	ldr	r5, [sp, #12]
    6cb8:	mov	sl, lr
    6cbc:	sub	r3, r5, #256	; 0x100
    6cc0:	sub	r3, r3, #1
    6cc4:	lsr	r3, r3, #8
    6cc8:	add	r4, r3, #1
    6ccc:	lsl	r8, r4, #8
    6cd0:	cmp	r5, r8
    6cd4:	bgt	7054 <ReadInt64Data.part.3+0xa3c>
    6cd8:	mul	r0, ip, fp
    6cdc:	b	6c94 <ReadInt64Data.part.3+0x67c>
    6ce0:	ldr	r5, [sp, #12]
    6ce4:	mov	sl, lr
    6ce8:	sub	r3, r5, #256	; 0x100
    6cec:	sub	r3, r3, #1
    6cf0:	lsr	r3, r3, #8
    6cf4:	add	r4, r3, #1
    6cf8:	lsl	r8, r4, #8
    6cfc:	cmp	r5, r8
    6d00:	ble	6cd8 <ReadInt64Data.part.3+0x6c0>
    6d04:	ldr	r3, [sp, #4]
    6d08:	sub	r5, r5, r8
    6d0c:	mov	r0, r6
    6d10:	mov	r2, r5
    6d14:	mov	r1, fp
    6d18:	ldr	r3, [r3]
    6d1c:	bl	1520 <fread@plt>
    6d20:	cmp	r5, #0
    6d24:	add	ip, r7, r0
    6d28:	ble	6cd8 <ReadInt64Data.part.3+0x6c0>
    6d2c:	ldr	r3, [sp, #8]
    6d30:	add	r5, r5, r8
    6d34:	add	r4, r3, r4, lsl #11
    6d38:	add	r3, r3, r5, lsl #3
    6d3c:	mov	r1, r3
    6d40:	ldrb	r2, [sl, #1]!
    6d44:	mov	r3, #0
    6d48:	strd	r2, [r4], #8
    6d4c:	cmp	r4, r1
    6d50:	bne	6d40 <ReadInt64Data.part.3+0x728>
    6d54:	b	6cd8 <ReadInt64Data.part.3+0x6c0>
    6d58:	cmp	r5, #256	; 0x100
    6d5c:	ble	716c <ReadInt64Data.part.3+0xb54>
    6d60:	ldr	r1, [sp, #8]
    6d64:	add	r6, sp, #32
    6d68:	sub	r2, r5, #256	; 0x100
    6d6c:	add	r4, r6, #508	; 0x1fc
    6d70:	mov	sl, r5
    6d74:	add	r4, r4, #2
    6d78:	mov	r8, r7
    6d7c:	mov	r5, r2
    6d80:	sub	r9, r1, #8
    6d84:	mov	r2, #256	; 0x100
    6d88:	mov	r1, fp
    6d8c:	mov	r0, r6
    6d90:	bl	1520 <fread@plt>
    6d94:	add	r7, r7, r0
    6d98:	sub	ip, r6, #2
    6d9c:	mov	lr, r7
    6da0:	mov	r3, ip
    6da4:	mov	r2, r9
    6da8:	ldrsh	r0, [r3, #2]!
    6dac:	asr	r1, r0, #31
    6db0:	cmp	r4, r3
    6db4:	strd	r0, [r2, #8]!
    6db8:	bne	6da8 <ReadInt64Data.part.3+0x790>
    6dbc:	add	r8, r8, #256	; 0x100
    6dc0:	add	r9, r9, #2048	; 0x800
    6dc4:	cmp	r8, r5
    6dc8:	bge	78c0 <ReadInt64Data.part.3+0x12a8>
    6dcc:	ldr	r3, [sp, #4]
    6dd0:	ldr	r3, [r3]
    6dd4:	b	6d84 <ReadInt64Data.part.3+0x76c>
    6dd8:	cmp	r5, #256	; 0x100
    6ddc:	ble	71f4 <ReadInt64Data.part.3+0xbdc>
    6de0:	ldr	r1, [sp, #8]
    6de4:	add	r6, sp, #32
    6de8:	sub	r2, r5, #256	; 0x100
    6dec:	mov	sl, r5
    6df0:	add	r4, r6, #1020	; 0x3fc
    6df4:	mov	r8, r7
    6df8:	mov	r5, r2
    6dfc:	sub	r9, r1, #8
    6e00:	mov	r1, fp
    6e04:	mov	r2, #256	; 0x100
    6e08:	mov	r0, r6
    6e0c:	bl	1520 <fread@plt>
    6e10:	add	r7, r7, r0
    6e14:	sub	ip, r6, #4
    6e18:	mov	lr, r7
    6e1c:	mov	r1, ip
    6e20:	mov	r0, r9
    6e24:	ldr	r2, [r1, #4]!
    6e28:	asr	r3, r2, #31
    6e2c:	cmp	r4, r1
    6e30:	strd	r2, [r0, #8]!
    6e34:	bne	6e24 <ReadInt64Data.part.3+0x80c>
    6e38:	add	r8, r8, #256	; 0x100
    6e3c:	add	r9, r9, #2048	; 0x800
    6e40:	cmp	r8, r5
    6e44:	bge	77bc <ReadInt64Data.part.3+0x11a4>
    6e48:	ldr	r3, [sp, #4]
    6e4c:	ldr	r3, [r3]
    6e50:	b	6e00 <ReadInt64Data.part.3+0x7e8>
    6e54:	cmp	r5, #256	; 0x100
    6e58:	ble	71b0 <ReadInt64Data.part.3+0xb98>
    6e5c:	ldr	r1, [sp, #8]
    6e60:	add	r6, sp, #32
    6e64:	sub	r2, r5, #256	; 0x100
    6e68:	add	r4, r6, #508	; 0x1fc
    6e6c:	mov	sl, r5
    6e70:	add	r4, r4, #2
    6e74:	mov	r8, r7
    6e78:	mov	r5, r2
    6e7c:	sub	r9, r1, #8
    6e80:	mov	r2, #256	; 0x100
    6e84:	mov	r1, fp
    6e88:	mov	r0, r6
    6e8c:	bl	1520 <fread@plt>
    6e90:	add	r7, r7, r0
    6e94:	sub	ip, r6, #2
    6e98:	mov	lr, r7
    6e9c:	mov	r3, ip
    6ea0:	mov	r2, r9
    6ea4:	ldrh	r0, [r3, #2]!
    6ea8:	mov	r1, #0
    6eac:	cmp	r4, r3
    6eb0:	strd	r0, [r2, #8]!
    6eb4:	bne	6ea4 <ReadInt64Data.part.3+0x88c>
    6eb8:	add	r8, r8, #256	; 0x100
    6ebc:	add	r9, r9, #2048	; 0x800
    6ec0:	cmp	r8, r5
    6ec4:	bge	7a30 <ReadInt64Data.part.3+0x1418>
    6ec8:	ldr	r3, [sp, #4]
    6ecc:	ldr	r3, [r3]
    6ed0:	b	6e80 <ReadInt64Data.part.3+0x868>
    6ed4:	cmp	r5, #256	; 0x100
    6ed8:	ble	7128 <ReadInt64Data.part.3+0xb10>
    6edc:	ldr	r1, [sp, #8]
    6ee0:	add	r6, sp, #32
    6ee4:	sub	r2, r5, #256	; 0x100
    6ee8:	add	r7, r6, #1020	; 0x3fc
    6eec:	mov	r9, r8
    6ef0:	str	r5, [sp, #16]
    6ef4:	mov	r4, r8
    6ef8:	mov	r5, r2
    6efc:	sub	sl, r1, #8
    6f00:	mov	r2, #256	; 0x100
    6f04:	mov	r1, fp
    6f08:	mov	r0, r6
    6f0c:	bl	1520 <fread@plt>
    6f10:	add	r8, r8, r0
    6f14:	sub	r0, r6, #4
    6f18:	mov	ip, r8
    6f1c:	mov	r2, r0
    6f20:	mov	r3, sl
    6f24:	ldr	r1, [r2, #4]!
    6f28:	cmp	r2, r7
    6f2c:	str	r1, [r3, #8]!
    6f30:	str	r4, [r3, #4]
    6f34:	bne	6f24 <ReadInt64Data.part.3+0x90c>
    6f38:	add	r9, r9, #256	; 0x100
    6f3c:	add	sl, sl, #2048	; 0x800
    6f40:	cmp	r9, r5
    6f44:	bge	783c <ReadInt64Data.part.3+0x1224>
    6f48:	ldr	r3, [sp, #4]
    6f4c:	ldr	r3, [r3]
    6f50:	b	6f00 <ReadInt64Data.part.3+0x8e8>
    6f54:	cmp	r5, #256	; 0x100
    6f58:	ble	70e8 <ReadInt64Data.part.3+0xad0>
    6f5c:	sub	r2, r5, #256	; 0x100
    6f60:	mov	r8, r7
    6f64:	add	r6, sp, #32
    6f68:	add	r4, sp, #2080	; 0x820
    6f6c:	str	r2, [sp, #16]
    6f70:	ldr	r2, [sp, #8]
    6f74:	str	r5, [sp, #24]
    6f78:	sub	r9, r2, #8
    6f7c:	mov	r2, #256	; 0x100
    6f80:	mov	r1, fp
    6f84:	mov	r0, r6
    6f88:	mov	sl, r9
    6f8c:	bl	1520 <fread@plt>
    6f90:	add	r7, r7, r0
    6f94:	mov	r5, r6
    6f98:	str	r7, [sp, #12]
    6f9c:	str	r6, [sp, #20]
    6fa0:	ldrd	r0, [r5], #8
    6fa4:	bl	4e3c0 <__aeabi_d2lz>
    6fa8:	strd	r0, [sl, #8]!
    6fac:	cmp	r5, r4
    6fb0:	bne	6fa0 <ReadInt64Data.part.3+0x988>
    6fb4:	ldr	r3, [sp, #16]
    6fb8:	add	r8, r8, #256	; 0x100
    6fbc:	add	r9, r9, #2048	; 0x800
    6fc0:	cmp	r8, r3
    6fc4:	bge	79b8 <ReadInt64Data.part.3+0x13a0>
    6fc8:	ldr	r3, [sp, #4]
    6fcc:	ldr	r3, [r3]
    6fd0:	b	6f7c <ReadInt64Data.part.3+0x964>
    6fd4:	cmp	r5, #256	; 0x100
    6fd8:	ble	70a8 <ReadInt64Data.part.3+0xa90>
    6fdc:	sub	r2, r5, #256	; 0x100
    6fe0:	mov	r8, r7
    6fe4:	add	r6, sp, #32
    6fe8:	add	r4, sp, #1056	; 0x420
    6fec:	str	r2, [sp, #16]
    6ff0:	ldr	r2, [sp, #8]
    6ff4:	str	r5, [sp, #24]
    6ff8:	sub	r9, r2, #8
    6ffc:	mov	r2, #256	; 0x100
    7000:	mov	r1, fp
    7004:	mov	r0, r6
    7008:	mov	sl, r9
    700c:	bl	1520 <fread@plt>
    7010:	add	r7, r7, r0
    7014:	mov	r5, r6
    7018:	str	r7, [sp, #12]
    701c:	str	r6, [sp, #20]
    7020:	ldr	r0, [r5], #4
    7024:	bl	4e394 <__aeabi_f2lz>
    7028:	strd	r0, [sl, #8]!
    702c:	cmp	r5, r4
    7030:	bne	7020 <ReadInt64Data.part.3+0xa08>
    7034:	ldr	r3, [sp, #16]
    7038:	add	r8, r8, #256	; 0x100
    703c:	add	r9, r9, #2048	; 0x800
    7040:	cmp	r8, r3
    7044:	bge	7940 <ReadInt64Data.part.3+0x1328>
    7048:	ldr	r3, [sp, #4]
    704c:	ldr	r3, [r3]
    7050:	b	6ffc <ReadInt64Data.part.3+0x9e4>
    7054:	ldr	r3, [sp, #4]
    7058:	sub	r5, r5, r8
    705c:	mov	r0, r6
    7060:	mov	r2, r5
    7064:	mov	r1, fp
    7068:	ldr	r3, [r3]
    706c:	bl	1520 <fread@plt>
    7070:	cmp	r5, #0
    7074:	add	ip, r7, r0
    7078:	ble	6cd8 <ReadInt64Data.part.3+0x6c0>
    707c:	ldr	r3, [sp, #8]
    7080:	add	r5, r8, r5
    7084:	add	r4, r3, r4, lsl #11
    7088:	add	r3, r3, r5, lsl #3
    708c:	mov	r1, r3
    7090:	ldrsb	r2, [sl, #1]!
    7094:	asr	r3, r2, #31
    7098:	strd	r2, [r4], #8
    709c:	cmp	r1, r4
    70a0:	bne	7090 <ReadInt64Data.part.3+0xa78>
    70a4:	b	6cd8 <ReadInt64Data.part.3+0x6c0>
    70a8:	add	r6, sp, #32
    70ac:	mov	r2, r5
    70b0:	mov	r0, r6
    70b4:	mov	r1, fp
    70b8:	bl	1520 <fread@plt>
    70bc:	cmp	r5, #0
    70c0:	str	r0, [sp, #12]
    70c4:	ble	6c8c <ReadInt64Data.part.3+0x674>
    70c8:	ldr	r4, [sp, #8]
    70cc:	add	r5, r4, r5, lsl #3
    70d0:	ldr	r0, [r6], #4
    70d4:	bl	4e394 <__aeabi_f2lz>
    70d8:	strd	r0, [r4], #8
    70dc:	cmp	r4, r5
    70e0:	bne	70d0 <ReadInt64Data.part.3+0xab8>
    70e4:	b	6c8c <ReadInt64Data.part.3+0x674>
    70e8:	add	r6, sp, #32
    70ec:	mov	r2, r5
    70f0:	mov	r0, r6
    70f4:	mov	r1, fp
    70f8:	bl	1520 <fread@plt>
    70fc:	cmp	r5, #0
    7100:	str	r0, [sp, #12]
    7104:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7108:	ldr	r4, [sp, #8]
    710c:	add	r5, r4, r5, lsl #3
    7110:	ldrd	r0, [r6], #8
    7114:	bl	4e3c0 <__aeabi_d2lz>
    7118:	strd	r0, [r4], #8
    711c:	cmp	r4, r5
    7120:	bne	7110 <ReadInt64Data.part.3+0xaf8>
    7124:	b	6c8c <ReadInt64Data.part.3+0x674>
    7128:	add	r4, sp, #32
    712c:	mov	r2, r5
    7130:	mov	r0, r4
    7134:	mov	r1, fp
    7138:	bl	1520 <fread@plt>
    713c:	cmp	r5, #0
    7140:	str	r0, [sp, #12]
    7144:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7148:	ldr	r3, [sp, #8]
    714c:	sub	r2, r4, #4
    7150:	add	r5, r3, r5, lsl #3
    7154:	ldr	r1, [r2, #4]!
    7158:	stm	r3, {r1, r8}
    715c:	add	r3, r3, #8
    7160:	cmp	r5, r3
    7164:	bne	7154 <ReadInt64Data.part.3+0xb3c>
    7168:	b	6c8c <ReadInt64Data.part.3+0x674>
    716c:	add	r4, sp, #32
    7170:	mov	r2, r5
    7174:	mov	r0, r4
    7178:	mov	r1, fp
    717c:	bl	1520 <fread@plt>
    7180:	cmp	r5, #0
    7184:	str	r0, [sp, #12]
    7188:	ble	6c8c <ReadInt64Data.part.3+0x674>
    718c:	ldr	r3, [sp, #8]
    7190:	sub	r2, r4, #2
    7194:	add	r5, r3, r5, lsl #3
    7198:	ldrsh	r0, [r2, #2]!
    719c:	asr	r1, r0, #31
    71a0:	strd	r0, [r3], #8
    71a4:	cmp	r5, r3
    71a8:	bne	7198 <ReadInt64Data.part.3+0xb80>
    71ac:	b	6c8c <ReadInt64Data.part.3+0x674>
    71b0:	add	r4, sp, #32
    71b4:	mov	r2, r5
    71b8:	mov	r0, r4
    71bc:	mov	r1, fp
    71c0:	bl	1520 <fread@plt>
    71c4:	cmp	r5, #0
    71c8:	str	r0, [sp, #12]
    71cc:	ble	6c8c <ReadInt64Data.part.3+0x674>
    71d0:	ldr	r3, [sp, #8]
    71d4:	sub	r2, r4, #2
    71d8:	add	r5, r3, r5, lsl #3
    71dc:	ldrh	r0, [r2, #2]!
    71e0:	mov	r1, #0
    71e4:	strd	r0, [r3], #8
    71e8:	cmp	r5, r3
    71ec:	bne	71dc <ReadInt64Data.part.3+0xbc4>
    71f0:	b	6c8c <ReadInt64Data.part.3+0x674>
    71f4:	add	r4, sp, #32
    71f8:	mov	r2, r5
    71fc:	mov	r0, r4
    7200:	mov	r1, fp
    7204:	bl	1520 <fread@plt>
    7208:	cmp	r5, #0
    720c:	str	r0, [sp, #12]
    7210:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7214:	ldr	r3, [sp, #8]
    7218:	sub	r2, r4, #4
    721c:	add	r5, r3, r5, lsl #3
    7220:	ldr	r0, [r2, #4]!
    7224:	asr	r1, r0, #31
    7228:	strd	r0, [r3], #8
    722c:	cmp	r5, r3
    7230:	bne	7220 <ReadInt64Data.part.3+0xc08>
    7234:	b	6c8c <ReadInt64Data.part.3+0x674>
    7238:	add	r4, sp, #32
    723c:	mov	r2, r5
    7240:	mov	r0, r4
    7244:	mov	r1, fp
    7248:	bl	1520 <fread@plt>
    724c:	cmp	r5, #0
    7250:	str	r0, [sp, #12]
    7254:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7258:	ldr	r6, [sp, #8]
    725c:	add	r5, r6, r5, lsl #3
    7260:	mov	r0, r4
    7264:	add	r4, r4, #2
    7268:	bl	1950 <Mat_uint16Swap>
    726c:	uxth	r0, r0
    7270:	mov	r1, #0
    7274:	strd	r0, [r6], #8
    7278:	cmp	r5, r6
    727c:	bne	7260 <ReadInt64Data.part.3+0xc48>
    7280:	b	6c8c <ReadInt64Data.part.3+0x674>
    7284:	add	r4, sp, #32
    7288:	mov	r2, r5
    728c:	mov	r0, r4
    7290:	mov	r1, fp
    7294:	bl	1520 <fread@plt>
    7298:	cmp	r5, #0
    729c:	str	r0, [sp, #12]
    72a0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    72a4:	ldr	r6, [sp, #8]
    72a8:	add	r5, r6, r5, lsl #3
    72ac:	mov	r0, r4
    72b0:	add	r4, r4, #8
    72b4:	bl	19a4 <Mat_doubleSwap>
    72b8:	vmov	r0, r1, d0
    72bc:	bl	4e3c0 <__aeabi_d2lz>
    72c0:	strd	r0, [r6], #8
    72c4:	cmp	r6, r5
    72c8:	bne	72ac <ReadInt64Data.part.3+0xc94>
    72cc:	b	6c8c <ReadInt64Data.part.3+0x674>
    72d0:	add	r6, sp, #32
    72d4:	mov	r2, r5
    72d8:	mov	r0, r6
    72dc:	mov	r1, fp
    72e0:	bl	1520 <fread@plt>
    72e4:	cmp	r5, #0
    72e8:	str	r0, [sp, #12]
    72ec:	ble	6c8c <ReadInt64Data.part.3+0x674>
    72f0:	ldr	r4, [sp, #8]
    72f4:	mov	r7, #0
    72f8:	add	r5, r4, r5, lsl #3
    72fc:	mov	r0, r6
    7300:	add	r6, r6, #4
    7304:	bl	18f8 <Mat_uint32Swap>
    7308:	stm	r4, {r0, r7}
    730c:	add	r4, r4, #8
    7310:	cmp	r4, r5
    7314:	bne	72fc <ReadInt64Data.part.3+0xce4>
    7318:	b	6c8c <ReadInt64Data.part.3+0x674>
    731c:	add	r4, sp, #32
    7320:	mov	r2, r5
    7324:	mov	r0, r4
    7328:	mov	r1, fp
    732c:	bl	1520 <fread@plt>
    7330:	cmp	r5, #0
    7334:	str	r0, [sp, #12]
    7338:	ble	6c8c <ReadInt64Data.part.3+0x674>
    733c:	ldr	r6, [sp, #8]
    7340:	add	r5, r6, r5, lsl #3
    7344:	mov	r0, r4
    7348:	add	r4, r4, #4
    734c:	bl	1974 <Mat_floatSwap>
    7350:	vmov	r0, s0
    7354:	bl	4e394 <__aeabi_f2lz>
    7358:	strd	r0, [r6], #8
    735c:	cmp	r6, r5
    7360:	bne	7344 <ReadInt64Data.part.3+0xd2c>
    7364:	b	6c8c <ReadInt64Data.part.3+0x674>
    7368:	add	r4, sp, #32
    736c:	mov	r2, r5
    7370:	mov	r0, r4
    7374:	mov	r1, fp
    7378:	bl	1520 <fread@plt>
    737c:	cmp	r5, #0
    7380:	str	r0, [sp, #12]
    7384:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7388:	ldr	r6, [sp, #8]
    738c:	add	r5, r6, r5, lsl #3
    7390:	mov	r0, r4
    7394:	add	r4, r4, #4
    7398:	bl	18c4 <Mat_int32Swap>
    739c:	asr	r1, r0, #31
    73a0:	strd	r0, [r6], #8
    73a4:	cmp	r5, r6
    73a8:	bne	7390 <ReadInt64Data.part.3+0xd78>
    73ac:	b	6c8c <ReadInt64Data.part.3+0x674>
    73b0:	add	r4, sp, #32
    73b4:	mov	r2, r5
    73b8:	mov	r0, r4
    73bc:	mov	r1, fp
    73c0:	bl	1520 <fread@plt>
    73c4:	cmp	r5, #0
    73c8:	str	r0, [sp, #12]
    73cc:	ble	6c8c <ReadInt64Data.part.3+0x674>
    73d0:	ldr	r6, [sp, #8]
    73d4:	add	r5, r6, r5, lsl #3
    73d8:	mov	r0, r4
    73dc:	add	r4, r4, #2
    73e0:	bl	192c <Mat_int16Swap>
    73e4:	sxth	r0, r0
    73e8:	asr	r1, r0, #31
    73ec:	strd	r0, [r6], #8
    73f0:	cmp	r5, r6
    73f4:	bne	73d8 <ReadInt64Data.part.3+0xdc0>
    73f8:	b	6c8c <ReadInt64Data.part.3+0x674>
    73fc:	ldr	fp, [sp, #16]
    7400:	ldr	r5, [sp, #28]
    7404:	sub	r3, r5, #256	; 0x100
    7408:	sub	r3, r3, #1
    740c:	lsr	r3, r3, #8
    7410:	add	r4, r3, #1
    7414:	lsl	r7, r4, #8
    7418:	cmp	r5, r7
    741c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7420:	ldr	r3, [sp, #4]
    7424:	sub	r5, r5, r7
    7428:	mov	r0, r6
    742c:	mov	r2, r5
    7430:	mov	r1, fp
    7434:	ldr	r3, [r3]
    7438:	bl	1520 <fread@plt>
    743c:	add	r3, r9, r0
    7440:	cmp	r5, #0
    7444:	str	r3, [sp, #12]
    7448:	ble	6c8c <ReadInt64Data.part.3+0x674>
    744c:	ldr	r3, [sp, #8]
    7450:	add	r5, r7, r5
    7454:	mov	r6, #0
    7458:	ldr	r7, [sp, #20]
    745c:	add	r4, r3, r4, lsl #11
    7460:	add	r5, r3, r5, lsl #3
    7464:	mov	r0, r7
    7468:	add	r7, r7, #4
    746c:	bl	18f8 <Mat_uint32Swap>
    7470:	stm	r4, {r0, r6}
    7474:	add	r4, r4, #8
    7478:	cmp	r4, r5
    747c:	bne	7464 <ReadInt64Data.part.3+0xe4c>
    7480:	b	6c8c <ReadInt64Data.part.3+0x674>
    7484:	ldr	r5, [sp, #24]
    7488:	sub	r3, r5, #256	; 0x100
    748c:	sub	r3, r3, #1
    7490:	lsr	r3, r3, #8
    7494:	add	r4, r3, #1
    7498:	lsl	r8, r4, #8
    749c:	cmp	r5, r8
    74a0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    74a4:	ldr	r3, [sp, #4]
    74a8:	sub	r5, r5, r8
    74ac:	mov	r0, r6
    74b0:	mov	r2, r5
    74b4:	mov	r1, fp
    74b8:	ldr	r3, [r3]
    74bc:	bl	1520 <fread@plt>
    74c0:	add	r3, r7, r0
    74c4:	cmp	r5, #0
    74c8:	str	r3, [sp, #12]
    74cc:	ble	6c8c <ReadInt64Data.part.3+0x674>
    74d0:	ldr	r3, [sp, #8]
    74d4:	add	r5, r5, r8
    74d8:	ldr	r6, [sp, #20]
    74dc:	add	r4, r3, r4, lsl #11
    74e0:	add	r5, r3, r5, lsl #3
    74e4:	mov	r0, r6
    74e8:	add	r6, r6, #2
    74ec:	bl	1950 <Mat_uint16Swap>
    74f0:	uxth	r0, r0
    74f4:	mov	r1, #0
    74f8:	strd	r0, [r4], #8
    74fc:	cmp	r5, r4
    7500:	bne	74e4 <ReadInt64Data.part.3+0xecc>
    7504:	b	6c8c <ReadInt64Data.part.3+0x674>
    7508:	add	r4, sp, #32
    750c:	mov	r2, r5
    7510:	mov	r0, r4
    7514:	mov	r1, fp
    7518:	bl	1520 <fread@plt>
    751c:	cmp	r5, #0
    7520:	mov	ip, r0
    7524:	ble	6cd8 <ReadInt64Data.part.3+0x6c0>
    7528:	ldr	r3, [sp, #8]
    752c:	sub	r2, r4, #1
    7530:	add	r5, r3, r5, lsl #3
    7534:	ldrsb	r0, [r2, #1]!
    7538:	asr	r1, r0, #31
    753c:	strd	r0, [r3], #8
    7540:	cmp	r5, r3
    7544:	bne	7534 <ReadInt64Data.part.3+0xf1c>
    7548:	b	6cd8 <ReadInt64Data.part.3+0x6c0>
    754c:	ldr	r5, [sp, #24]
    7550:	sub	r3, r5, #256	; 0x100
    7554:	sub	r3, r3, #1
    7558:	lsr	r3, r3, #8
    755c:	add	r4, r3, #1
    7560:	lsl	r8, r4, #8
    7564:	cmp	r5, r8
    7568:	ble	6c8c <ReadInt64Data.part.3+0x674>
    756c:	ldr	r3, [sp, #4]
    7570:	sub	r5, r5, r8
    7574:	mov	r0, r6
    7578:	mov	r2, r5
    757c:	mov	r1, fp
    7580:	ldr	r3, [r3]
    7584:	bl	1520 <fread@plt>
    7588:	add	r3, r7, r0
    758c:	cmp	r5, #0
    7590:	str	r3, [sp, #12]
    7594:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7598:	ldr	r3, [sp, #8]
    759c:	add	r5, r5, r8
    75a0:	ldr	r6, [sp, #20]
    75a4:	add	r4, r3, r4, lsl #11
    75a8:	add	r5, r3, r5, lsl #3
    75ac:	mov	r0, r6
    75b0:	add	r6, r6, #4
    75b4:	bl	18c4 <Mat_int32Swap>
    75b8:	asr	r1, r0, #31
    75bc:	strd	r0, [r4], #8
    75c0:	cmp	r5, r4
    75c4:	bne	75ac <ReadInt64Data.part.3+0xf94>
    75c8:	b	6c8c <ReadInt64Data.part.3+0x674>
    75cc:	add	r4, sp, #32
    75d0:	mov	r2, r5
    75d4:	mov	r0, r4
    75d8:	mov	r1, fp
    75dc:	bl	1520 <fread@plt>
    75e0:	cmp	r5, #0
    75e4:	mov	ip, r0
    75e8:	ble	6cd8 <ReadInt64Data.part.3+0x6c0>
    75ec:	ldr	r3, [sp, #8]
    75f0:	sub	r2, r4, #1
    75f4:	add	r5, r3, r5, lsl #3
    75f8:	ldrb	r0, [r2, #1]!
    75fc:	mov	r1, #0
    7600:	strd	r0, [r3], #8
    7604:	cmp	r5, r3
    7608:	bne	75f8 <ReadInt64Data.part.3+0xfe0>
    760c:	b	6cd8 <ReadInt64Data.part.3+0x6c0>
    7610:	ldr	r5, [sp, #24]
    7614:	sub	r3, r5, #256	; 0x100
    7618:	sub	r3, r3, #1
    761c:	lsr	r3, r3, #8
    7620:	add	r4, r3, #1
    7624:	lsl	r8, r4, #8
    7628:	cmp	r5, r8
    762c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7630:	ldr	r3, [sp, #4]
    7634:	sub	r5, r5, r8
    7638:	mov	r0, r6
    763c:	mov	r2, r5
    7640:	mov	r1, fp
    7644:	ldr	r3, [r3]
    7648:	bl	1520 <fread@plt>
    764c:	add	r3, r7, r0
    7650:	cmp	r5, #0
    7654:	str	r3, [sp, #12]
    7658:	ble	6c8c <ReadInt64Data.part.3+0x674>
    765c:	ldr	r3, [sp, #8]
    7660:	add	r5, r5, r8
    7664:	ldr	r6, [sp, #20]
    7668:	add	r4, r3, r4, lsl #11
    766c:	add	r5, r3, r5, lsl #3
    7670:	mov	r0, r6
    7674:	add	r6, r6, #4
    7678:	bl	1974 <Mat_floatSwap>
    767c:	vmov	r0, s0
    7680:	bl	4e394 <__aeabi_f2lz>
    7684:	strd	r0, [r4], #8
    7688:	cmp	r4, r5
    768c:	bne	7670 <ReadInt64Data.part.3+0x1058>
    7690:	b	6c8c <ReadInt64Data.part.3+0x674>
    7694:	ldr	r5, [sp, #24]
    7698:	sub	r3, r5, #256	; 0x100
    769c:	sub	r3, r3, #1
    76a0:	lsr	r3, r3, #8
    76a4:	add	r4, r3, #1
    76a8:	lsl	r8, r4, #8
    76ac:	cmp	r5, r8
    76b0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    76b4:	ldr	r3, [sp, #4]
    76b8:	sub	r5, r5, r8
    76bc:	mov	r0, r6
    76c0:	mov	r2, r5
    76c4:	mov	r1, fp
    76c8:	ldr	r3, [r3]
    76cc:	bl	1520 <fread@plt>
    76d0:	add	r3, r7, r0
    76d4:	cmp	r5, #0
    76d8:	str	r3, [sp, #12]
    76dc:	ble	6c8c <ReadInt64Data.part.3+0x674>
    76e0:	ldr	r3, [sp, #8]
    76e4:	add	r5, r5, r8
    76e8:	ldr	r6, [sp, #20]
    76ec:	add	r4, r3, r4, lsl #11
    76f0:	add	r5, r3, r5, lsl #3
    76f4:	mov	r0, r6
    76f8:	add	r6, r6, #8
    76fc:	bl	19a4 <Mat_doubleSwap>
    7700:	vmov	r0, r1, d0
    7704:	bl	4e3c0 <__aeabi_d2lz>
    7708:	strd	r0, [r4], #8
    770c:	cmp	r4, r5
    7710:	bne	76f4 <ReadInt64Data.part.3+0x10dc>
    7714:	b	6c8c <ReadInt64Data.part.3+0x674>
    7718:	ldr	r3, [sp, #4]
    771c:	ldr	r7, [r3, #20]
    7720:	ldr	r3, [r3]
    7724:	cmp	r7, #0
    7728:	beq	7bb0 <ReadInt64Data.part.3+0x1598>
    772c:	cmp	r5, #256	; 0x100
    7730:	ble	7e48 <ReadInt64Data.part.3+0x1830>
    7734:	sub	r2, r5, #256	; 0x100
    7738:	mov	r7, #0
    773c:	mov	r8, r7
    7740:	add	r6, sp, #32
    7744:	str	r2, [sp, #20]
    7748:	add	r4, sp, #2080	; 0x820
    774c:	ldr	r2, [sp, #8]
    7750:	sub	r2, r2, #8
    7754:	str	r2, [sp, #16]
    7758:	mov	r2, #256	; 0x100
    775c:	mov	r1, fp
    7760:	mov	r0, r6
    7764:	mov	r9, r6
    7768:	bl	1520 <fread@plt>
    776c:	ldr	sl, [sp, #16]
    7770:	add	r8, r8, r0
    7774:	str	r8, [sp, #12]
    7778:	str	r6, [sp, #24]
    777c:	mov	r0, r9
    7780:	add	r9, r9, #8
    7784:	bl	17ec <Mat_int64Swap>
    7788:	cmp	r4, r9
    778c:	strd	r0, [sl, #8]!
    7790:	bne	777c <ReadInt64Data.part.3+0x1164>
    7794:	ldr	r3, [sp, #16]
    7798:	add	r7, r7, #256	; 0x100
    779c:	add	r3, r3, #2048	; 0x800
    77a0:	str	r3, [sp, #16]
    77a4:	ldr	r3, [sp, #20]
    77a8:	cmp	r3, r7
    77ac:	ble	7c9c <ReadInt64Data.part.3+0x1684>
    77b0:	ldr	r3, [sp, #4]
    77b4:	ldr	r3, [r3]
    77b8:	b	7758 <ReadInt64Data.part.3+0x1140>
    77bc:	mov	r5, sl
    77c0:	mov	sl, ip
    77c4:	str	lr, [sp, #12]
    77c8:	sub	r3, r5, #256	; 0x100
    77cc:	sub	r3, r3, #1
    77d0:	lsr	r3, r3, #8
    77d4:	add	r4, r3, #1
    77d8:	lsl	r8, r4, #8
    77dc:	cmp	r5, r8
    77e0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    77e4:	ldr	r3, [sp, #4]
    77e8:	sub	r5, r5, r8
    77ec:	mov	r0, r6
    77f0:	mov	r2, r5
    77f4:	mov	r1, fp
    77f8:	ldr	r3, [r3]
    77fc:	bl	1520 <fread@plt>
    7800:	add	r3, r7, r0
    7804:	cmp	r5, #0
    7808:	str	r3, [sp, #12]
    780c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7810:	ldr	r3, [sp, #8]
    7814:	add	r5, r5, r8
    7818:	add	r4, r3, r4, lsl #11
    781c:	add	r3, r3, r5, lsl #3
    7820:	mov	r1, r3
    7824:	ldr	r2, [sl, #4]!
    7828:	asr	r3, r2, #31
    782c:	strd	r2, [r4], #8
    7830:	cmp	r1, r4
    7834:	bne	7824 <ReadInt64Data.part.3+0x120c>
    7838:	b	6c8c <ReadInt64Data.part.3+0x674>
    783c:	ldr	r5, [sp, #16]
    7840:	mov	r9, r0
    7844:	str	ip, [sp, #12]
    7848:	sub	r3, r5, #256	; 0x100
    784c:	sub	r3, r3, #1
    7850:	lsr	r3, r3, #8
    7854:	add	r4, r3, #1
    7858:	lsl	r7, r4, #8
    785c:	cmp	r5, r7
    7860:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7864:	ldr	r3, [sp, #4]
    7868:	sub	r5, r5, r7
    786c:	mov	r0, r6
    7870:	mov	r2, r5
    7874:	mov	r1, fp
    7878:	ldr	r3, [r3]
    787c:	bl	1520 <fread@plt>
    7880:	add	r3, r8, r0
    7884:	cmp	r5, #0
    7888:	str	r3, [sp, #12]
    788c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7890:	ldr	r3, [sp, #8]
    7894:	add	r5, r5, r7
    7898:	mov	r2, #0
    789c:	mov	r1, r9
    78a0:	add	r4, r3, r4, lsl #11
    78a4:	add	r3, r3, r5, lsl #3
    78a8:	ldr	r0, [r1, #4]!
    78ac:	stm	r4, {r0, r2}
    78b0:	add	r4, r4, #8
    78b4:	cmp	r3, r4
    78b8:	bne	78a8 <ReadInt64Data.part.3+0x1290>
    78bc:	b	6c8c <ReadInt64Data.part.3+0x674>
    78c0:	mov	r5, sl
    78c4:	mov	sl, ip
    78c8:	str	lr, [sp, #12]
    78cc:	sub	r3, r5, #256	; 0x100
    78d0:	sub	r3, r3, #1
    78d4:	lsr	r3, r3, #8
    78d8:	add	r4, r3, #1
    78dc:	lsl	r8, r4, #8
    78e0:	cmp	r5, r8
    78e4:	ble	6c8c <ReadInt64Data.part.3+0x674>
    78e8:	ldr	r3, [sp, #4]
    78ec:	sub	r5, r5, r8
    78f0:	mov	r0, r6
    78f4:	mov	r2, r5
    78f8:	mov	r1, fp
    78fc:	ldr	r3, [r3]
    7900:	bl	1520 <fread@plt>
    7904:	add	r3, r7, r0
    7908:	cmp	r5, #0
    790c:	str	r3, [sp, #12]
    7910:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7914:	ldr	r3, [sp, #8]
    7918:	add	r5, r5, r8
    791c:	add	r4, r3, r4, lsl #11
    7920:	add	r3, r3, r5, lsl #3
    7924:	mov	r1, r3
    7928:	ldrsh	r2, [sl, #2]!
    792c:	asr	r3, r2, #31
    7930:	strd	r2, [r4], #8
    7934:	cmp	r1, r4
    7938:	bne	7928 <ReadInt64Data.part.3+0x1310>
    793c:	b	6c8c <ReadInt64Data.part.3+0x674>
    7940:	ldr	r5, [sp, #24]
    7944:	sub	r3, r5, #256	; 0x100
    7948:	sub	r3, r3, #1
    794c:	lsr	r3, r3, #8
    7950:	add	r4, r3, #1
    7954:	lsl	r8, r4, #8
    7958:	cmp	r5, r8
    795c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7960:	ldr	r3, [sp, #4]
    7964:	sub	r5, r5, r8
    7968:	mov	r0, r6
    796c:	mov	r2, r5
    7970:	mov	r1, fp
    7974:	ldr	r3, [r3]
    7978:	bl	1520 <fread@plt>
    797c:	add	r3, r7, r0
    7980:	cmp	r5, #0
    7984:	str	r3, [sp, #12]
    7988:	ble	6c8c <ReadInt64Data.part.3+0x674>
    798c:	ldr	r3, [sp, #8]
    7990:	add	r5, r5, r8
    7994:	ldr	r6, [sp, #20]
    7998:	add	r4, r3, r4, lsl #11
    799c:	add	r5, r3, r5, lsl #3
    79a0:	ldr	r0, [r6], #4
    79a4:	bl	4e394 <__aeabi_f2lz>
    79a8:	strd	r0, [r4], #8
    79ac:	cmp	r4, r5
    79b0:	bne	79a0 <ReadInt64Data.part.3+0x1388>
    79b4:	b	6c8c <ReadInt64Data.part.3+0x674>
    79b8:	ldr	r5, [sp, #24]
    79bc:	sub	r3, r5, #256	; 0x100
    79c0:	sub	r3, r3, #1
    79c4:	lsr	r3, r3, #8
    79c8:	add	r4, r3, #1
    79cc:	lsl	r8, r4, #8
    79d0:	cmp	r5, r8
    79d4:	ble	6c8c <ReadInt64Data.part.3+0x674>
    79d8:	ldr	r3, [sp, #4]
    79dc:	sub	r5, r5, r8
    79e0:	mov	r0, r6
    79e4:	mov	r2, r5
    79e8:	mov	r1, fp
    79ec:	ldr	r3, [r3]
    79f0:	bl	1520 <fread@plt>
    79f4:	add	r3, r7, r0
    79f8:	cmp	r5, #0
    79fc:	str	r3, [sp, #12]
    7a00:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7a04:	ldr	r3, [sp, #8]
    7a08:	add	r5, r5, r8
    7a0c:	ldr	r6, [sp, #20]
    7a10:	add	r4, r3, r4, lsl #11
    7a14:	add	r5, r3, r5, lsl #3
    7a18:	ldrd	r0, [r6], #8
    7a1c:	bl	4e3c0 <__aeabi_d2lz>
    7a20:	strd	r0, [r4], #8
    7a24:	cmp	r4, r5
    7a28:	bne	7a18 <ReadInt64Data.part.3+0x1400>
    7a2c:	b	6c8c <ReadInt64Data.part.3+0x674>
    7a30:	mov	r5, sl
    7a34:	mov	sl, ip
    7a38:	str	lr, [sp, #12]
    7a3c:	sub	r3, r5, #256	; 0x100
    7a40:	sub	r3, r3, #1
    7a44:	lsr	r3, r3, #8
    7a48:	add	r4, r3, #1
    7a4c:	lsl	r8, r4, #8
    7a50:	cmp	r5, r8
    7a54:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7a58:	ldr	r3, [sp, #4]
    7a5c:	sub	r5, r5, r8
    7a60:	mov	r0, r6
    7a64:	mov	r2, r5
    7a68:	mov	r1, fp
    7a6c:	ldr	r3, [r3]
    7a70:	bl	1520 <fread@plt>
    7a74:	add	r3, r7, r0
    7a78:	cmp	r5, #0
    7a7c:	str	r3, [sp, #12]
    7a80:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7a84:	ldr	r3, [sp, #8]
    7a88:	add	r5, r5, r8
    7a8c:	add	r4, r3, r4, lsl #11
    7a90:	add	r3, r3, r5, lsl #3
    7a94:	mov	r1, r3
    7a98:	ldrh	r2, [sl, #2]!
    7a9c:	mov	r3, #0
    7aa0:	strd	r2, [r4], #8
    7aa4:	cmp	r1, r4
    7aa8:	bne	7a98 <ReadInt64Data.part.3+0x1480>
    7aac:	b	6c8c <ReadInt64Data.part.3+0x674>
    7ab0:	ldr	r5, [sp, #24]
    7ab4:	sub	r3, r5, #256	; 0x100
    7ab8:	sub	r3, r3, #1
    7abc:	lsr	r3, r3, #8
    7ac0:	add	r4, r3, #1
    7ac4:	lsl	r8, r4, #8
    7ac8:	cmp	r5, r8
    7acc:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7ad0:	ldr	r3, [sp, #4]
    7ad4:	sub	r5, r5, r8
    7ad8:	mov	r0, r6
    7adc:	mov	r2, r5
    7ae0:	mov	r1, fp
    7ae4:	ldr	r3, [r3]
    7ae8:	bl	1520 <fread@plt>
    7aec:	add	r3, r7, r0
    7af0:	cmp	r5, #0
    7af4:	str	r3, [sp, #12]
    7af8:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7afc:	ldr	r3, [sp, #8]
    7b00:	add	r5, r5, r8
    7b04:	ldr	r6, [sp, #20]
    7b08:	add	r4, r3, r4, lsl #11
    7b0c:	add	r5, r3, r5, lsl #3
    7b10:	mov	r0, r6
    7b14:	add	r6, r6, #2
    7b18:	bl	192c <Mat_int16Swap>
    7b1c:	sxth	r0, r0
    7b20:	asr	r1, r0, #31
    7b24:	strd	r0, [r4], #8
    7b28:	cmp	r5, r4
    7b2c:	bne	7b10 <ReadInt64Data.part.3+0x14f8>
    7b30:	b	6c8c <ReadInt64Data.part.3+0x674>
    7b34:	cmp	r5, #256	; 0x100
    7b38:	ble	7d84 <ReadInt64Data.part.3+0x176c>
    7b3c:	sub	r2, r5, #256	; 0x100
    7b40:	add	r4, sp, #2064	; 0x810
    7b44:	mov	sl, r7
    7b48:	add	r6, sp, #32
    7b4c:	str	r2, [sp, #16]
    7b50:	add	r4, r4, #8
    7b54:	ldr	r2, [sp, #8]
    7b58:	sub	r9, r2, #8
    7b5c:	mov	r2, #256	; 0x100
    7b60:	mov	r1, fp
    7b64:	mov	r0, r6
    7b68:	sub	r8, r6, #8
    7b6c:	bl	1520 <fread@plt>
    7b70:	add	r7, r7, r0
    7b74:	mov	r3, r8
    7b78:	mov	r2, r9
    7b7c:	str	r7, [sp, #12]
    7b80:	ldrd	r0, [r3, #8]!
    7b84:	cmp	r4, r3
    7b88:	strd	r0, [r2, #8]!
    7b8c:	bne	7b80 <ReadInt64Data.part.3+0x1568>
    7b90:	ldr	r3, [sp, #16]
    7b94:	add	sl, sl, #256	; 0x100
    7b98:	add	r9, r9, #2048	; 0x800
    7b9c:	cmp	sl, r3
    7ba0:	bge	7c2c <ReadInt64Data.part.3+0x1614>
    7ba4:	ldr	r3, [sp, #4]
    7ba8:	ldr	r3, [r3]
    7bac:	b	7b5c <ReadInt64Data.part.3+0x1544>
    7bb0:	cmp	r5, #256	; 0x100
    7bb4:	ble	7e08 <ReadInt64Data.part.3+0x17f0>
    7bb8:	sub	r2, r5, #256	; 0x100
    7bbc:	add	r4, sp, #2064	; 0x810
    7bc0:	mov	sl, r7
    7bc4:	add	r6, sp, #32
    7bc8:	str	r2, [sp, #16]
    7bcc:	add	r4, r4, #8
    7bd0:	ldr	r2, [sp, #8]
    7bd4:	sub	r9, r2, #8
    7bd8:	mov	r2, #256	; 0x100
    7bdc:	mov	r1, fp
    7be0:	mov	r0, r6
    7be4:	sub	r8, r6, #8
    7be8:	bl	1520 <fread@plt>
    7bec:	add	r7, r7, r0
    7bf0:	mov	r3, r8
    7bf4:	mov	r2, r9
    7bf8:	str	r7, [sp, #12]
    7bfc:	ldrd	r0, [r3, #8]!
    7c00:	cmp	r4, r3
    7c04:	strd	r0, [r2, #8]!
    7c08:	bne	7bfc <ReadInt64Data.part.3+0x15e4>
    7c0c:	ldr	r3, [sp, #16]
    7c10:	add	sl, sl, #256	; 0x100
    7c14:	add	r9, r9, #2048	; 0x800
    7c18:	cmp	r3, sl
    7c1c:	ble	7d14 <ReadInt64Data.part.3+0x16fc>
    7c20:	ldr	r3, [sp, #4]
    7c24:	ldr	r3, [r3]
    7c28:	b	7bd8 <ReadInt64Data.part.3+0x15c0>
    7c2c:	sub	r3, r5, #256	; 0x100
    7c30:	sub	r3, r3, #1
    7c34:	lsr	r3, r3, #8
    7c38:	add	r4, r3, #1
    7c3c:	lsl	r9, r4, #8
    7c40:	cmp	r5, r9
    7c44:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7c48:	ldr	r3, [sp, #4]
    7c4c:	sub	r5, r5, r9
    7c50:	mov	r0, r6
    7c54:	mov	r2, r5
    7c58:	mov	r1, fp
    7c5c:	ldr	r3, [r3]
    7c60:	bl	1520 <fread@plt>
    7c64:	add	r3, r7, r0
    7c68:	cmp	r5, #0
    7c6c:	str	r3, [sp, #12]
    7c70:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7c74:	ldr	r3, [sp, #8]
    7c78:	add	r5, r9, r5
    7c7c:	add	r4, r3, r4, lsl #11
    7c80:	add	r3, r3, r5, lsl #3
    7c84:	mov	r1, r3
    7c88:	ldrd	r2, [r8, #8]!
    7c8c:	strd	r2, [r4], #8
    7c90:	cmp	r1, r4
    7c94:	bne	7c88 <ReadInt64Data.part.3+0x1670>
    7c98:	b	6c8c <ReadInt64Data.part.3+0x674>
    7c9c:	sub	r3, r5, #256	; 0x100
    7ca0:	sub	r3, r3, #1
    7ca4:	lsr	r3, r3, #8
    7ca8:	add	r4, r3, #1
    7cac:	lsl	r7, r4, #8
    7cb0:	cmp	r5, r7
    7cb4:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7cb8:	ldr	r3, [sp, #4]
    7cbc:	sub	r5, r5, r7
    7cc0:	mov	r0, r6
    7cc4:	mov	r2, r5
    7cc8:	mov	r1, fp
    7ccc:	ldr	r3, [r3]
    7cd0:	bl	1520 <fread@plt>
    7cd4:	add	r3, r8, r0
    7cd8:	cmp	r5, #0
    7cdc:	str	r3, [sp, #12]
    7ce0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7ce4:	ldr	r3, [sp, #8]
    7ce8:	add	r5, r5, r7
    7cec:	ldr	r6, [sp, #24]
    7cf0:	add	r4, r3, r4, lsl #11
    7cf4:	add	r5, r3, r5, lsl #3
    7cf8:	mov	r0, r6
    7cfc:	add	r6, r6, #8
    7d00:	bl	17ec <Mat_int64Swap>
    7d04:	strd	r0, [r4], #8
    7d08:	cmp	r4, r5
    7d0c:	bne	7cf8 <ReadInt64Data.part.3+0x16e0>
    7d10:	b	6c8c <ReadInt64Data.part.3+0x674>
    7d14:	sub	r3, r5, #256	; 0x100
    7d18:	sub	r3, r3, #1
    7d1c:	lsr	r3, r3, #8
    7d20:	add	r4, r3, #1
    7d24:	lsl	r9, r4, #8
    7d28:	cmp	r5, r9
    7d2c:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7d30:	ldr	r3, [sp, #4]
    7d34:	sub	r5, r5, r9
    7d38:	mov	r0, r6
    7d3c:	mov	r2, r5
    7d40:	mov	r1, fp
    7d44:	ldr	r3, [r3]
    7d48:	bl	1520 <fread@plt>
    7d4c:	add	r3, r7, r0
    7d50:	cmp	r5, #0
    7d54:	str	r3, [sp, #12]
    7d58:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7d5c:	ldr	r3, [sp, #8]
    7d60:	add	r5, r5, r9
    7d64:	add	r4, r3, r4, lsl #11
    7d68:	add	r3, r3, r5, lsl #3
    7d6c:	mov	r1, r3
    7d70:	ldrd	r2, [r8, #8]!
    7d74:	strd	r2, [r4], #8
    7d78:	cmp	r1, r4
    7d7c:	bne	7d70 <ReadInt64Data.part.3+0x1758>
    7d80:	b	6c8c <ReadInt64Data.part.3+0x674>
    7d84:	add	r4, sp, #32
    7d88:	mov	r2, r5
    7d8c:	mov	r0, r4
    7d90:	mov	r1, fp
    7d94:	bl	1520 <fread@plt>
    7d98:	cmp	r5, #0
    7d9c:	str	r0, [sp, #12]
    7da0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7da4:	ldr	r3, [sp, #8]
    7da8:	sub	r4, r4, #8
    7dac:	add	r5, r3, r5, lsl #3
    7db0:	ldrd	r0, [r4, #8]!
    7db4:	strd	r0, [r3], #8
    7db8:	cmp	r5, r3
    7dbc:	bne	7db0 <ReadInt64Data.part.3+0x1798>
    7dc0:	b	6c8c <ReadInt64Data.part.3+0x674>
    7dc4:	add	r4, sp, #32
    7dc8:	mov	r2, r5
    7dcc:	mov	r0, r4
    7dd0:	mov	r1, fp
    7dd4:	bl	1520 <fread@plt>
    7dd8:	cmp	r5, #0
    7ddc:	str	r0, [sp, #12]
    7de0:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7de4:	ldr	r6, [sp, #8]
    7de8:	add	r5, r6, r5, lsl #3
    7dec:	mov	r0, r4
    7df0:	add	r4, r4, #8
    7df4:	bl	1858 <Mat_uint64Swap>
    7df8:	strd	r0, [r6], #8
    7dfc:	cmp	r5, r6
    7e00:	bne	7dec <ReadInt64Data.part.3+0x17d4>
    7e04:	b	6c8c <ReadInt64Data.part.3+0x674>
    7e08:	add	r4, sp, #32
    7e0c:	mov	r2, r5
    7e10:	mov	r0, r4
    7e14:	mov	r1, fp
    7e18:	bl	1520 <fread@plt>
    7e1c:	cmp	r5, #0
    7e20:	str	r0, [sp, #12]
    7e24:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7e28:	ldr	r3, [sp, #8]
    7e2c:	sub	r4, r4, #8
    7e30:	add	r5, r3, r5, lsl #3
    7e34:	ldrd	r0, [r4, #8]!
    7e38:	strd	r0, [r3], #8
    7e3c:	cmp	r5, r3
    7e40:	bne	7e34 <ReadInt64Data.part.3+0x181c>
    7e44:	b	6c8c <ReadInt64Data.part.3+0x674>
    7e48:	add	r4, sp, #32
    7e4c:	mov	r2, r5
    7e50:	mov	r0, r4
    7e54:	mov	r1, fp
    7e58:	bl	1520 <fread@plt>
    7e5c:	cmp	r5, #0
    7e60:	str	r0, [sp, #12]
    7e64:	ble	6c8c <ReadInt64Data.part.3+0x674>
    7e68:	ldr	r6, [sp, #8]
    7e6c:	add	r5, r6, r5, lsl #3
    7e70:	mov	r0, r4
    7e74:	add	r4, r4, #8
    7e78:	bl	17ec <Mat_int64Swap>
    7e7c:	strd	r0, [r6], #8
    7e80:	cmp	r6, r5
    7e84:	bne	7e70 <ReadInt64Data.part.3+0x1858>
    7e88:	b	6c8c <ReadInt64Data.part.3+0x674>

00007e8c <ReadUInt64Data.part.5>:
    7e8c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    7e90:	mov	r4, r2
    7e94:	mov	r5, r3
    7e98:	strd	r6, [sp, #8]
    7e9c:	strd	r8, [sp, #16]
    7ea0:	strd	sl, [sp, #24]
    7ea4:	str	lr, [sp, #32]
    7ea8:	sub	sp, sp, #2080	; 0x820
    7eac:	sub	sp, sp, #4
    7eb0:	strd	r0, [sp, #4]
    7eb4:	mov	r0, r2
    7eb8:	bl	1598 <Mat_SizeOf@plt>
    7ebc:	sub	r3, r4, #1
    7ec0:	mov	fp, r0
    7ec4:	cmp	r3, #8
    7ec8:	addls	pc, pc, r3, lsl #2
    7ecc:	b	83d4 <ReadUInt64Data.part.5+0x548>
    7ed0:	b	7f98 <ReadUInt64Data.part.5+0x10c>
    7ed4:	b	80c0 <ReadUInt64Data.part.5+0x234>
    7ed8:	b	81ec <ReadUInt64Data.part.5+0x360>
    7edc:	b	801c <ReadUInt64Data.part.5+0x190>
    7ee0:	b	8290 <ReadUInt64Data.part.5+0x404>
    7ee4:	b	8144 <ReadUInt64Data.part.5+0x2b8>
    7ee8:	b	8330 <ReadUInt64Data.part.5+0x4a4>
    7eec:	b	83d4 <ReadUInt64Data.part.5+0x548>
    7ef0:	b	7ef4 <ReadUInt64Data.part.5+0x68>
    7ef4:	ldr	r3, [sp, #4]
    7ef8:	ldr	r7, [r3, #20]
    7efc:	ldr	r3, [r3]
    7f00:	cmp	r7, #0
    7f04:	beq	87c8 <ReadUInt64Data.part.5+0x93c>
    7f08:	cmp	r5, #256	; 0x100
    7f0c:	ble	8af8 <ReadUInt64Data.part.5+0xc6c>
    7f10:	sub	r2, r5, #256	; 0x100
    7f14:	mov	r8, #0
    7f18:	mov	r7, r8
    7f1c:	add	r6, sp, #32
    7f20:	str	r2, [sp, #16]
    7f24:	add	r4, sp, #2080	; 0x820
    7f28:	ldr	r2, [sp, #8]
    7f2c:	str	r5, [sp, #24]
    7f30:	sub	r9, r2, #8
    7f34:	mov	r2, #256	; 0x100
    7f38:	mov	r1, fp
    7f3c:	mov	r0, r6
    7f40:	mov	sl, r9
    7f44:	bl	1520 <fread@plt>
    7f48:	add	r7, r7, r0
    7f4c:	mov	r5, r6
    7f50:	str	r7, [sp, #12]
    7f54:	str	r6, [sp, #20]
    7f58:	mov	r0, r5
    7f5c:	add	r5, r5, #8
    7f60:	bl	19a4 <Mat_doubleSwap>
    7f64:	vmov	r0, r1, d0
    7f68:	bl	4e430 <__aeabi_d2ulz>
    7f6c:	cmp	r5, r4
    7f70:	strd	r0, [sl, #8]!
    7f74:	bne	7f58 <ReadUInt64Data.part.5+0xcc>
    7f78:	ldr	r3, [sp, #16]
    7f7c:	add	r8, r8, #256	; 0x100
    7f80:	add	r9, r9, #2048	; 0x800
    7f84:	cmp	r8, r3
    7f88:	bge	8f08 <ReadUInt64Data.part.5+0x107c>
    7f8c:	ldr	r3, [sp, #4]
    7f90:	ldr	r3, [r3]
    7f94:	b	7f34 <ReadUInt64Data.part.5+0xa8>
    7f98:	ldr	sl, [sp, #4]
    7f9c:	cmp	r5, #256	; 0x100
    7fa0:	ldr	r3, [sl]
    7fa4:	ble	8d7c <ReadUInt64Data.part.5+0xef0>
    7fa8:	mov	r8, #0
    7fac:	add	r6, sp, #32
    7fb0:	str	r5, [sp, #12]
    7fb4:	ldr	r1, [sp, #8]
    7fb8:	sub	r2, r5, #256	; 0x100
    7fbc:	mov	r7, r8
    7fc0:	add	r4, r6, #255	; 0xff
    7fc4:	mov	r5, r2
    7fc8:	sub	r9, r1, #8
    7fcc:	mov	r2, #256	; 0x100
    7fd0:	mov	r1, fp
    7fd4:	mov	r0, r6
    7fd8:	bl	1520 <fread@plt>
    7fdc:	add	r7, r7, r0
    7fe0:	sub	lr, r6, #1
    7fe4:	mov	ip, r7
    7fe8:	mov	r3, lr
    7fec:	mov	r2, r9
    7ff0:	ldrsb	r0, [r3, #1]!
    7ff4:	asr	r1, r0, #31
    7ff8:	cmp	r4, r3
    7ffc:	strd	r0, [r2, #8]!
    8000:	bne	7ff0 <ReadUInt64Data.part.5+0x164>
    8004:	add	r8, r8, #256	; 0x100
    8008:	add	r9, r9, #2048	; 0x800
    800c:	cmp	r5, r8
    8010:	ble	8528 <ReadUInt64Data.part.5+0x69c>
    8014:	ldr	r3, [sl]
    8018:	b	7fcc <ReadUInt64Data.part.5+0x140>
    801c:	ldr	r3, [sp, #4]
    8020:	ldr	r7, [r3, #20]
    8024:	ldr	r3, [r3]
    8028:	cmp	r7, #0
    802c:	beq	86c8 <ReadUInt64Data.part.5+0x83c>
    8030:	cmp	r5, #256	; 0x100
    8034:	ble	8aac <ReadUInt64Data.part.5+0xc20>
    8038:	sub	r2, r5, #256	; 0x100
    803c:	mov	r8, #0
    8040:	mov	r7, r8
    8044:	add	r6, sp, #32
    8048:	str	r2, [sp, #16]
    804c:	add	r4, sp, #544	; 0x220
    8050:	ldr	r2, [sp, #8]
    8054:	str	r5, [sp, #24]
    8058:	sub	r9, r2, #8
    805c:	mov	r2, #256	; 0x100
    8060:	mov	r1, fp
    8064:	mov	r0, r6
    8068:	mov	sl, r9
    806c:	bl	1520 <fread@plt>
    8070:	add	r7, r7, r0
    8074:	mov	r5, r6
    8078:	str	r7, [sp, #12]
    807c:	str	r6, [sp, #20]
    8080:	mov	r0, r5
    8084:	add	r5, r5, #2
    8088:	bl	1950 <Mat_uint16Swap>
    808c:	uxth	r0, r0
    8090:	mov	r1, #0
    8094:	cmp	r4, r5
    8098:	strd	r0, [sl, #8]!
    809c:	bne	8080 <ReadUInt64Data.part.5+0x1f4>
    80a0:	ldr	r3, [sp, #16]
    80a4:	add	r8, r8, #256	; 0x100
    80a8:	add	r9, r9, #2048	; 0x800
    80ac:	cmp	r8, r3
    80b0:	bge	8cf8 <ReadUInt64Data.part.5+0xe6c>
    80b4:	ldr	r3, [sp, #4]
    80b8:	ldr	r3, [r3]
    80bc:	b	805c <ReadUInt64Data.part.5+0x1d0>
    80c0:	ldr	sl, [sp, #4]
    80c4:	cmp	r5, #256	; 0x100
    80c8:	ldr	r3, [sl]
    80cc:	ble	8e40 <ReadUInt64Data.part.5+0xfb4>
    80d0:	mov	r8, #0
    80d4:	add	r6, sp, #32
    80d8:	str	r5, [sp, #12]
    80dc:	ldr	r1, [sp, #8]
    80e0:	sub	r2, r5, #256	; 0x100
    80e4:	mov	r7, r8
    80e8:	add	r4, r6, #255	; 0xff
    80ec:	mov	r5, r2
    80f0:	sub	r9, r1, #8
    80f4:	mov	r2, #256	; 0x100
    80f8:	mov	r1, fp
    80fc:	mov	r0, r6
    8100:	bl	1520 <fread@plt>
    8104:	add	r7, r7, r0
    8108:	sub	lr, r6, #1
    810c:	mov	ip, r7
    8110:	mov	r3, lr
    8114:	mov	r2, r9
    8118:	ldrb	r0, [r3, #1]!
    811c:	mov	r1, #0
    8120:	cmp	r4, r3
    8124:	strd	r0, [r2, #8]!
    8128:	bne	8118 <ReadUInt64Data.part.5+0x28c>
    812c:	add	r8, r8, #256	; 0x100
    8130:	add	r9, r9, #2048	; 0x800
    8134:	cmp	r5, r8
    8138:	ble	8554 <ReadUInt64Data.part.5+0x6c8>
    813c:	ldr	r3, [sl]
    8140:	b	80f4 <ReadUInt64Data.part.5+0x268>
    8144:	ldr	r3, [sp, #4]
    8148:	ldr	r8, [r3, #20]
    814c:	ldr	r3, [r3]
    8150:	cmp	r8, #0
    8154:	beq	8748 <ReadUInt64Data.part.5+0x8bc>
    8158:	cmp	r5, #256	; 0x100
    815c:	ble	8b44 <ReadUInt64Data.part.5+0xcb8>
    8160:	sub	r2, r5, #256	; 0x100
    8164:	mov	r8, #0
    8168:	str	r0, [sp, #16]
    816c:	mov	r9, r8
    8170:	mov	r7, r8
    8174:	str	r2, [sp, #24]
    8178:	add	r6, sp, #32
    817c:	add	r4, sp, #1056	; 0x420
    8180:	ldr	r2, [sp, #8]
    8184:	str	r5, [sp, #28]
    8188:	sub	sl, r2, #8
    818c:	mov	r2, #256	; 0x100
    8190:	mov	r0, r6
    8194:	ldr	r1, [sp, #16]
    8198:	bl	1520 <fread@plt>
    819c:	add	r9, r9, r0
    81a0:	mov	fp, sl
    81a4:	mov	r5, r6
    81a8:	str	r9, [sp, #12]
    81ac:	str	r6, [sp, #20]
    81b0:	mov	r0, r5
    81b4:	add	r5, r5, #4
    81b8:	bl	18f8 <Mat_uint32Swap>
    81bc:	cmp	r4, r5
    81c0:	str	r0, [fp, #8]!
    81c4:	str	r7, [fp, #4]
    81c8:	bne	81b0 <ReadUInt64Data.part.5+0x324>
    81cc:	ldr	r3, [sp, #24]
    81d0:	add	r8, r8, #256	; 0x100
    81d4:	add	sl, sl, #2048	; 0x800
    81d8:	cmp	r8, r3
    81dc:	bge	8c70 <ReadUInt64Data.part.5+0xde4>
    81e0:	ldr	r3, [sp, #4]
    81e4:	ldr	r3, [r3]
    81e8:	b	818c <ReadUInt64Data.part.5+0x300>
    81ec:	ldr	r3, [sp, #4]
    81f0:	ldr	r7, [r3, #20]
    81f4:	ldr	r3, [r3]
    81f8:	cmp	r7, #0
    81fc:	beq	85cc <ReadUInt64Data.part.5+0x740>
    8200:	cmp	r5, #256	; 0x100
    8204:	ble	8c24 <ReadUInt64Data.part.5+0xd98>
    8208:	sub	r2, r5, #256	; 0x100
    820c:	mov	r8, #0
    8210:	mov	r7, r8
    8214:	add	r6, sp, #32
    8218:	str	r2, [sp, #16]
    821c:	add	r4, sp, #544	; 0x220
    8220:	ldr	r2, [sp, #8]
    8224:	str	r5, [sp, #24]
    8228:	sub	r9, r2, #8
    822c:	mov	r2, #256	; 0x100
    8230:	mov	r1, fp
    8234:	mov	r0, r6
    8238:	mov	sl, r9
    823c:	bl	1520 <fread@plt>
    8240:	add	r7, r7, r0
    8244:	mov	r5, r6
    8248:	str	r7, [sp, #12]
    824c:	str	r6, [sp, #20]
    8250:	mov	r0, r5
    8254:	add	r5, r5, #2
    8258:	bl	192c <Mat_int16Swap>
    825c:	sxth	r0, r0
    8260:	cmp	r4, r5
    8264:	asr	r1, r0, #31
    8268:	strd	r0, [sl, #8]!
    826c:	bne	8250 <ReadUInt64Data.part.5+0x3c4>
    8270:	ldr	r3, [sp, #16]
    8274:	add	r8, r8, #256	; 0x100
    8278:	add	r9, r9, #2048	; 0x800
    827c:	cmp	r8, r3
    8280:	bge	9324 <ReadUInt64Data.part.5+0x1498>
    8284:	ldr	r3, [sp, #4]
    8288:	ldr	r3, [r3]
    828c:	b	822c <ReadUInt64Data.part.5+0x3a0>
    8290:	ldr	r3, [sp, #4]
    8294:	ldr	r7, [r3, #20]
    8298:	ldr	r3, [r3]
    829c:	cmp	r7, #0
    82a0:	beq	864c <ReadUInt64Data.part.5+0x7c0>
    82a4:	cmp	r5, #256	; 0x100
    82a8:	ble	8bdc <ReadUInt64Data.part.5+0xd50>
    82ac:	sub	r2, r5, #256	; 0x100
    82b0:	mov	r8, #0
    82b4:	mov	r7, r8
    82b8:	add	r6, sp, #32
    82bc:	str	r2, [sp, #16]
    82c0:	add	r4, sp, #1056	; 0x420
    82c4:	ldr	r2, [sp, #8]
    82c8:	str	r5, [sp, #24]
    82cc:	sub	r9, r2, #8
    82d0:	mov	r2, #256	; 0x100
    82d4:	mov	r1, fp
    82d8:	mov	r0, r6
    82dc:	mov	sl, r9
    82e0:	bl	1520 <fread@plt>
    82e4:	add	r7, r7, r0
    82e8:	mov	r5, r6
    82ec:	str	r7, [sp, #12]
    82f0:	str	r6, [sp, #20]
    82f4:	mov	r0, r5
    82f8:	add	r5, r5, #4
    82fc:	bl	18c4 <Mat_int32Swap>
    8300:	asr	r1, r0, #31
    8304:	cmp	r4, r5
    8308:	strd	r0, [sl, #8]!
    830c:	bne	82f4 <ReadUInt64Data.part.5+0x468>
    8310:	ldr	r3, [sp, #16]
    8314:	add	r8, r8, #256	; 0x100
    8318:	add	r9, r9, #2048	; 0x800
    831c:	cmp	r8, r3
    8320:	bge	8dc0 <ReadUInt64Data.part.5+0xf34>
    8324:	ldr	r3, [sp, #4]
    8328:	ldr	r3, [r3]
    832c:	b	82d0 <ReadUInt64Data.part.5+0x444>
    8330:	ldr	r3, [sp, #4]
    8334:	ldr	r7, [r3, #20]
    8338:	ldr	r3, [r3]
    833c:	cmp	r7, #0
    8340:	beq	8848 <ReadUInt64Data.part.5+0x9bc>
    8344:	cmp	r5, #256	; 0x100
    8348:	ble	8b90 <ReadUInt64Data.part.5+0xd04>
    834c:	sub	r2, r5, #256	; 0x100
    8350:	mov	r8, #0
    8354:	mov	r7, r8
    8358:	add	r6, sp, #32
    835c:	str	r2, [sp, #16]
    8360:	add	r4, sp, #1056	; 0x420
    8364:	ldr	r2, [sp, #8]
    8368:	str	r5, [sp, #24]
    836c:	sub	r9, r2, #8
    8370:	mov	r2, #256	; 0x100
    8374:	mov	r1, fp
    8378:	mov	r0, r6
    837c:	mov	sl, r9
    8380:	bl	1520 <fread@plt>
    8384:	add	r7, r7, r0
    8388:	mov	r5, r6
    838c:	str	r7, [sp, #12]
    8390:	str	r6, [sp, #20]
    8394:	mov	r0, r5
    8398:	add	r5, r5, #4
    839c:	bl	1974 <Mat_floatSwap>
    83a0:	vmov	r0, s0
    83a4:	bl	4e3f0 <__aeabi_f2ulz>
    83a8:	cmp	r5, r4
    83ac:	strd	r0, [sl, #8]!
    83b0:	bne	8394 <ReadUInt64Data.part.5+0x508>
    83b4:	ldr	r3, [sp, #16]
    83b8:	add	r8, r8, #256	; 0x100
    83bc:	add	r9, r9, #2048	; 0x800
    83c0:	cmp	r8, r3
    83c4:	bge	8e84 <ReadUInt64Data.part.5+0xff8>
    83c8:	ldr	r3, [sp, #4]
    83cc:	ldr	r3, [r3]
    83d0:	b	8370 <ReadUInt64Data.part.5+0x4e4>
    83d4:	cmp	r4, #12
    83d8:	beq	8f8c <ReadUInt64Data.part.5+0x1100>
    83dc:	cmp	r4, #13
    83e0:	movne	r0, #0
    83e4:	bne	8508 <ReadUInt64Data.part.5+0x67c>
    83e8:	ldr	r3, [sp, #4]
    83ec:	ldr	r7, [r3, #20]
    83f0:	ldr	r3, [r3]
    83f4:	cmp	r7, #0
    83f8:	beq	93a8 <ReadUInt64Data.part.5+0x151c>
    83fc:	cmp	r5, #256	; 0x100
    8400:	ble	9638 <ReadUInt64Data.part.5+0x17ac>
    8404:	sub	r2, r5, #256	; 0x100
    8408:	mov	r7, #0
    840c:	mov	r8, r7
    8410:	add	r6, sp, #32
    8414:	str	r2, [sp, #20]
    8418:	add	r4, sp, #2080	; 0x820
    841c:	ldr	r2, [sp, #8]
    8420:	sub	r2, r2, #8
    8424:	str	r2, [sp, #16]
    8428:	mov	r2, #256	; 0x100
    842c:	mov	r1, fp
    8430:	mov	r0, r6
    8434:	mov	r9, r6
    8438:	bl	1520 <fread@plt>
    843c:	ldr	sl, [sp, #16]
    8440:	add	r8, r8, r0
    8444:	str	r8, [sp, #12]
    8448:	str	r6, [sp, #24]
    844c:	mov	r0, r9
    8450:	add	r9, r9, #8
    8454:	bl	1858 <Mat_uint64Swap>
    8458:	cmp	r4, r9
    845c:	strd	r0, [sl, #8]!
    8460:	bne	844c <ReadUInt64Data.part.5+0x5c0>
    8464:	ldr	r3, [sp, #16]
    8468:	add	r7, r7, #256	; 0x100
    846c:	add	r3, r3, #2048	; 0x800
    8470:	str	r3, [sp, #16]
    8474:	ldr	r3, [sp, #20]
    8478:	cmp	r3, r7
    847c:	ble	848c <ReadUInt64Data.part.5+0x600>
    8480:	ldr	r3, [sp, #4]
    8484:	ldr	r3, [r3]
    8488:	b	8428 <ReadUInt64Data.part.5+0x59c>
    848c:	sub	r3, r5, #256	; 0x100
    8490:	sub	r3, r3, #1
    8494:	lsr	r3, r3, #8
    8498:	add	r4, r3, #1
    849c:	lsl	r7, r4, #8
    84a0:	cmp	r5, r7
    84a4:	ble	8500 <ReadUInt64Data.part.5+0x674>
    84a8:	ldr	r3, [sp, #4]
    84ac:	sub	r5, r5, r7
    84b0:	mov	r0, r6
    84b4:	mov	r2, r5
    84b8:	mov	r1, fp
    84bc:	ldr	r3, [r3]
    84c0:	bl	1520 <fread@plt>
    84c4:	add	r3, r8, r0
    84c8:	cmp	r5, #0
    84cc:	str	r3, [sp, #12]
    84d0:	ble	8500 <ReadUInt64Data.part.5+0x674>
    84d4:	ldr	r3, [sp, #8]
    84d8:	add	r5, r5, r7
    84dc:	ldr	r6, [sp, #24]
    84e0:	add	r4, r3, r4, lsl #11
    84e4:	add	r5, r3, r5, lsl #3
    84e8:	mov	r0, r6
    84ec:	add	r6, r6, #8
    84f0:	bl	1858 <Mat_uint64Swap>
    84f4:	strd	r0, [r4], #8
    84f8:	cmp	r5, r4
    84fc:	bne	84e8 <ReadUInt64Data.part.5+0x65c>
    8500:	ldr	r3, [sp, #12]
    8504:	mul	r0, r3, fp
    8508:	add	sp, sp, #2080	; 0x820
    850c:	add	sp, sp, #4
    8510:	ldrd	r4, [sp]
    8514:	ldrd	r6, [sp, #8]
    8518:	ldrd	r8, [sp, #16]
    851c:	ldrd	sl, [sp, #24]
    8520:	add	sp, sp, #32
    8524:	pop	{pc}		; (ldr pc, [sp], #4)
    8528:	ldr	r5, [sp, #12]
    852c:	mov	sl, lr
    8530:	sub	r3, r5, #256	; 0x100
    8534:	sub	r3, r3, #1
    8538:	lsr	r3, r3, #8
    853c:	add	r4, r3, #1
    8540:	lsl	r8, r4, #8
    8544:	cmp	r5, r8
    8548:	bgt	88c8 <ReadUInt64Data.part.5+0xa3c>
    854c:	mul	r0, ip, fp
    8550:	b	8508 <ReadUInt64Data.part.5+0x67c>
    8554:	ldr	r5, [sp, #12]
    8558:	mov	sl, lr
    855c:	sub	r3, r5, #256	; 0x100
    8560:	sub	r3, r3, #1
    8564:	lsr	r3, r3, #8
    8568:	add	r4, r3, #1
    856c:	lsl	r8, r4, #8
    8570:	cmp	r5, r8
    8574:	ble	854c <ReadUInt64Data.part.5+0x6c0>
    8578:	ldr	r3, [sp, #4]
    857c:	sub	r5, r5, r8
    8580:	mov	r0, r6
    8584:	mov	r2, r5
    8588:	mov	r1, fp
    858c:	ldr	r3, [r3]
    8590:	bl	1520 <fread@plt>
    8594:	cmp	r5, #0
    8598:	add	ip, r7, r0
    859c:	ble	854c <ReadUInt64Data.part.5+0x6c0>
    85a0:	ldr	r3, [sp, #8]
    85a4:	add	r5, r5, r8
    85a8:	add	r4, r3, r4, lsl #11
    85ac:	add	r3, r3, r5, lsl #3
    85b0:	mov	r1, r3
    85b4:	ldrb	r2, [sl, #1]!
    85b8:	mov	r3, #0
    85bc:	strd	r2, [r4], #8
    85c0:	cmp	r4, r1
    85c4:	bne	85b4 <ReadUInt64Data.part.5+0x728>
    85c8:	b	854c <ReadUInt64Data.part.5+0x6c0>
    85cc:	cmp	r5, #256	; 0x100
    85d0:	ble	89e0 <ReadUInt64Data.part.5+0xb54>
    85d4:	ldr	r1, [sp, #8]
    85d8:	add	r6, sp, #32
    85dc:	sub	r2, r5, #256	; 0x100
    85e0:	add	r4, r6, #508	; 0x1fc
    85e4:	mov	sl, r5
    85e8:	add	r4, r4, #2
    85ec:	mov	r8, r7
    85f0:	mov	r5, r2
    85f4:	sub	r9, r1, #8
    85f8:	mov	r2, #256	; 0x100
    85fc:	mov	r1, fp
    8600:	mov	r0, r6
    8604:	bl	1520 <fread@plt>
    8608:	add	r7, r7, r0
    860c:	sub	ip, r6, #2
    8610:	mov	lr, r7
    8614:	mov	r3, ip
    8618:	mov	r2, r9
    861c:	ldrsh	r0, [r3, #2]!
    8620:	asr	r1, r0, #31
    8624:	cmp	r4, r3
    8628:	strd	r0, [r2, #8]!
    862c:	bne	861c <ReadUInt64Data.part.5+0x790>
    8630:	add	r8, r8, #256	; 0x100
    8634:	add	r9, r9, #2048	; 0x800
    8638:	cmp	r8, r5
    863c:	bge	9134 <ReadUInt64Data.part.5+0x12a8>
    8640:	ldr	r3, [sp, #4]
    8644:	ldr	r3, [r3]
    8648:	b	85f8 <ReadUInt64Data.part.5+0x76c>
    864c:	cmp	r5, #256	; 0x100
    8650:	ble	8a68 <ReadUInt64Data.part.5+0xbdc>
    8654:	ldr	r1, [sp, #8]
    8658:	add	r6, sp, #32
    865c:	sub	r2, r5, #256	; 0x100
    8660:	mov	sl, r5
    8664:	add	r4, r6, #1020	; 0x3fc
    8668:	mov	r8, r7
    866c:	mov	r5, r2
    8670:	sub	r9, r1, #8
    8674:	mov	r1, fp
    8678:	mov	r2, #256	; 0x100
    867c:	mov	r0, r6
    8680:	bl	1520 <fread@plt>
    8684:	add	r7, r7, r0
    8688:	sub	ip, r6, #4
    868c:	mov	lr, r7
    8690:	mov	r1, ip
    8694:	mov	r0, r9
    8698:	ldr	r2, [r1, #4]!
    869c:	asr	r3, r2, #31
    86a0:	cmp	r4, r1
    86a4:	strd	r2, [r0, #8]!
    86a8:	bne	8698 <ReadUInt64Data.part.5+0x80c>
    86ac:	add	r8, r8, #256	; 0x100
    86b0:	add	r9, r9, #2048	; 0x800
    86b4:	cmp	r8, r5
    86b8:	bge	9030 <ReadUInt64Data.part.5+0x11a4>
    86bc:	ldr	r3, [sp, #4]
    86c0:	ldr	r3, [r3]
    86c4:	b	8674 <ReadUInt64Data.part.5+0x7e8>
    86c8:	cmp	r5, #256	; 0x100
    86cc:	ble	8a24 <ReadUInt64Data.part.5+0xb98>
    86d0:	ldr	r1, [sp, #8]
    86d4:	add	r6, sp, #32
    86d8:	sub	r2, r5, #256	; 0x100
    86dc:	add	r4, r6, #508	; 0x1fc
    86e0:	mov	sl, r5
    86e4:	add	r4, r4, #2
    86e8:	mov	r8, r7
    86ec:	mov	r5, r2
    86f0:	sub	r9, r1, #8
    86f4:	mov	r2, #256	; 0x100
    86f8:	mov	r1, fp
    86fc:	mov	r0, r6
    8700:	bl	1520 <fread@plt>
    8704:	add	r7, r7, r0
    8708:	sub	ip, r6, #2
    870c:	mov	lr, r7
    8710:	mov	r3, ip
    8714:	mov	r2, r9
    8718:	ldrh	r0, [r3, #2]!
    871c:	mov	r1, #0
    8720:	cmp	r4, r3
    8724:	strd	r0, [r2, #8]!
    8728:	bne	8718 <ReadUInt64Data.part.5+0x88c>
    872c:	add	r8, r8, #256	; 0x100
    8730:	add	r9, r9, #2048	; 0x800
    8734:	cmp	r8, r5
    8738:	bge	92a4 <ReadUInt64Data.part.5+0x1418>
    873c:	ldr	r3, [sp, #4]
    8740:	ldr	r3, [r3]
    8744:	b	86f4 <ReadUInt64Data.part.5+0x868>
    8748:	cmp	r5, #256	; 0x100
    874c:	ble	899c <ReadUInt64Data.part.5+0xb10>
    8750:	ldr	r1, [sp, #8]
    8754:	add	r6, sp, #32
    8758:	sub	r2, r5, #256	; 0x100
    875c:	add	r7, r6, #1020	; 0x3fc
    8760:	mov	r9, r8
    8764:	str	r5, [sp, #16]
    8768:	mov	r4, r8
    876c:	mov	r5, r2
    8770:	sub	sl, r1, #8
    8774:	mov	r2, #256	; 0x100
    8778:	mov	r1, fp
    877c:	mov	r0, r6
    8780:	bl	1520 <fread@plt>
    8784:	add	r8, r8, r0
    8788:	sub	r0, r6, #4
    878c:	mov	ip, r8
    8790:	mov	r2, r0
    8794:	mov	r3, sl
    8798:	ldr	r1, [r2, #4]!
    879c:	cmp	r2, r7
    87a0:	str	r1, [r3, #8]!
    87a4:	str	r4, [r3, #4]
    87a8:	bne	8798 <ReadUInt64Data.part.5+0x90c>
    87ac:	add	r9, r9, #256	; 0x100
    87b0:	add	sl, sl, #2048	; 0x800
    87b4:	cmp	r9, r5
    87b8:	bge	90b0 <ReadUInt64Data.part.5+0x1224>
    87bc:	ldr	r3, [sp, #4]
    87c0:	ldr	r3, [r3]
    87c4:	b	8774 <ReadUInt64Data.part.5+0x8e8>
    87c8:	cmp	r5, #256	; 0x100
    87cc:	ble	895c <ReadUInt64Data.part.5+0xad0>
    87d0:	sub	r2, r5, #256	; 0x100
    87d4:	mov	r8, r7
    87d8:	add	r6, sp, #32
    87dc:	add	r4, sp, #2080	; 0x820
    87e0:	str	r2, [sp, #16]
    87e4:	ldr	r2, [sp, #8]
    87e8:	str	r5, [sp, #24]
    87ec:	sub	r9, r2, #8
    87f0:	mov	r2, #256	; 0x100
    87f4:	mov	r1, fp
    87f8:	mov	r0, r6
    87fc:	mov	sl, r9
    8800:	bl	1520 <fread@plt>
    8804:	add	r7, r7, r0
    8808:	mov	r5, r6
    880c:	str	r7, [sp, #12]
    8810:	str	r6, [sp, #20]
    8814:	ldrd	r0, [r5], #8
    8818:	bl	4e430 <__aeabi_d2ulz>
    881c:	strd	r0, [sl, #8]!
    8820:	cmp	r5, r4
    8824:	bne	8814 <ReadUInt64Data.part.5+0x988>
    8828:	ldr	r3, [sp, #16]
    882c:	add	r8, r8, #256	; 0x100
    8830:	add	r9, r9, #2048	; 0x800
    8834:	cmp	r8, r3
    8838:	bge	922c <ReadUInt64Data.part.5+0x13a0>
    883c:	ldr	r3, [sp, #4]
    8840:	ldr	r3, [r3]
    8844:	b	87f0 <ReadUInt64Data.part.5+0x964>
    8848:	cmp	r5, #256	; 0x100
    884c:	ble	891c <ReadUInt64Data.part.5+0xa90>
    8850:	sub	r2, r5, #256	; 0x100
    8854:	mov	r8, r7
    8858:	add	r6, sp, #32
    885c:	add	r4, sp, #1056	; 0x420
    8860:	str	r2, [sp, #16]
    8864:	ldr	r2, [sp, #8]
    8868:	str	r5, [sp, #24]
    886c:	sub	r9, r2, #8
    8870:	mov	r2, #256	; 0x100
    8874:	mov	r1, fp
    8878:	mov	r0, r6
    887c:	mov	sl, r9
    8880:	bl	1520 <fread@plt>
    8884:	add	r7, r7, r0
    8888:	mov	r5, r6
    888c:	str	r7, [sp, #12]
    8890:	str	r6, [sp, #20]
    8894:	ldr	r0, [r5], #4
    8898:	bl	4e3f0 <__aeabi_f2ulz>
    889c:	strd	r0, [sl, #8]!
    88a0:	cmp	r5, r4
    88a4:	bne	8894 <ReadUInt64Data.part.5+0xa08>
    88a8:	ldr	r3, [sp, #16]
    88ac:	add	r8, r8, #256	; 0x100
    88b0:	add	r9, r9, #2048	; 0x800
    88b4:	cmp	r8, r3
    88b8:	bge	91b4 <ReadUInt64Data.part.5+0x1328>
    88bc:	ldr	r3, [sp, #4]
    88c0:	ldr	r3, [r3]
    88c4:	b	8870 <ReadUInt64Data.part.5+0x9e4>
    88c8:	ldr	r3, [sp, #4]
    88cc:	sub	r5, r5, r8
    88d0:	mov	r0, r6
    88d4:	mov	r2, r5
    88d8:	mov	r1, fp
    88dc:	ldr	r3, [r3]
    88e0:	bl	1520 <fread@plt>
    88e4:	cmp	r5, #0
    88e8:	add	ip, r7, r0
    88ec:	ble	854c <ReadUInt64Data.part.5+0x6c0>
    88f0:	ldr	r3, [sp, #8]
    88f4:	add	r5, r8, r5
    88f8:	add	r4, r3, r4, lsl #11
    88fc:	add	r3, r3, r5, lsl #3
    8900:	mov	r1, r3
    8904:	ldrsb	r2, [sl, #1]!
    8908:	asr	r3, r2, #31
    890c:	strd	r2, [r4], #8
    8910:	cmp	r1, r4
    8914:	bne	8904 <ReadUInt64Data.part.5+0xa78>
    8918:	b	854c <ReadUInt64Data.part.5+0x6c0>
    891c:	add	r6, sp, #32
    8920:	mov	r2, r5
    8924:	mov	r0, r6
    8928:	mov	r1, fp
    892c:	bl	1520 <fread@plt>
    8930:	cmp	r5, #0
    8934:	str	r0, [sp, #12]
    8938:	ble	8500 <ReadUInt64Data.part.5+0x674>
    893c:	ldr	r4, [sp, #8]
    8940:	add	r5, r4, r5, lsl #3
    8944:	ldr	r0, [r6], #4
    8948:	bl	4e3f0 <__aeabi_f2ulz>
    894c:	strd	r0, [r4], #8
    8950:	cmp	r4, r5
    8954:	bne	8944 <ReadUInt64Data.part.5+0xab8>
    8958:	b	8500 <ReadUInt64Data.part.5+0x674>
    895c:	add	r6, sp, #32
    8960:	mov	r2, r5
    8964:	mov	r0, r6
    8968:	mov	r1, fp
    896c:	bl	1520 <fread@plt>
    8970:	cmp	r5, #0
    8974:	str	r0, [sp, #12]
    8978:	ble	8500 <ReadUInt64Data.part.5+0x674>
    897c:	ldr	r4, [sp, #8]
    8980:	add	r5, r4, r5, lsl #3
    8984:	ldrd	r0, [r6], #8
    8988:	bl	4e430 <__aeabi_d2ulz>
    898c:	strd	r0, [r4], #8
    8990:	cmp	r4, r5
    8994:	bne	8984 <ReadUInt64Data.part.5+0xaf8>
    8998:	b	8500 <ReadUInt64Data.part.5+0x674>
    899c:	add	r4, sp, #32
    89a0:	mov	r2, r5
    89a4:	mov	r0, r4
    89a8:	mov	r1, fp
    89ac:	bl	1520 <fread@plt>
    89b0:	cmp	r5, #0
    89b4:	str	r0, [sp, #12]
    89b8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    89bc:	ldr	r3, [sp, #8]
    89c0:	sub	r2, r4, #4
    89c4:	add	r5, r3, r5, lsl #3
    89c8:	ldr	r1, [r2, #4]!
    89cc:	stm	r3, {r1, r8}
    89d0:	add	r3, r3, #8
    89d4:	cmp	r5, r3
    89d8:	bne	89c8 <ReadUInt64Data.part.5+0xb3c>
    89dc:	b	8500 <ReadUInt64Data.part.5+0x674>
    89e0:	add	r4, sp, #32
    89e4:	mov	r2, r5
    89e8:	mov	r0, r4
    89ec:	mov	r1, fp
    89f0:	bl	1520 <fread@plt>
    89f4:	cmp	r5, #0
    89f8:	str	r0, [sp, #12]
    89fc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8a00:	ldr	r3, [sp, #8]
    8a04:	sub	r2, r4, #2
    8a08:	add	r5, r3, r5, lsl #3
    8a0c:	ldrsh	r0, [r2, #2]!
    8a10:	asr	r1, r0, #31
    8a14:	strd	r0, [r3], #8
    8a18:	cmp	r5, r3
    8a1c:	bne	8a0c <ReadUInt64Data.part.5+0xb80>
    8a20:	b	8500 <ReadUInt64Data.part.5+0x674>
    8a24:	add	r4, sp, #32
    8a28:	mov	r2, r5
    8a2c:	mov	r0, r4
    8a30:	mov	r1, fp
    8a34:	bl	1520 <fread@plt>
    8a38:	cmp	r5, #0
    8a3c:	str	r0, [sp, #12]
    8a40:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8a44:	ldr	r3, [sp, #8]
    8a48:	sub	r2, r4, #2
    8a4c:	add	r5, r3, r5, lsl #3
    8a50:	ldrh	r0, [r2, #2]!
    8a54:	mov	r1, #0
    8a58:	strd	r0, [r3], #8
    8a5c:	cmp	r5, r3
    8a60:	bne	8a50 <ReadUInt64Data.part.5+0xbc4>
    8a64:	b	8500 <ReadUInt64Data.part.5+0x674>
    8a68:	add	r4, sp, #32
    8a6c:	mov	r2, r5
    8a70:	mov	r0, r4
    8a74:	mov	r1, fp
    8a78:	bl	1520 <fread@plt>
    8a7c:	cmp	r5, #0
    8a80:	str	r0, [sp, #12]
    8a84:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8a88:	ldr	r3, [sp, #8]
    8a8c:	sub	r2, r4, #4
    8a90:	add	r5, r3, r5, lsl #3
    8a94:	ldr	r0, [r2, #4]!
    8a98:	asr	r1, r0, #31
    8a9c:	strd	r0, [r3], #8
    8aa0:	cmp	r5, r3
    8aa4:	bne	8a94 <ReadUInt64Data.part.5+0xc08>
    8aa8:	b	8500 <ReadUInt64Data.part.5+0x674>
    8aac:	add	r4, sp, #32
    8ab0:	mov	r2, r5
    8ab4:	mov	r0, r4
    8ab8:	mov	r1, fp
    8abc:	bl	1520 <fread@plt>
    8ac0:	cmp	r5, #0
    8ac4:	str	r0, [sp, #12]
    8ac8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8acc:	ldr	r6, [sp, #8]
    8ad0:	add	r5, r6, r5, lsl #3
    8ad4:	mov	r0, r4
    8ad8:	add	r4, r4, #2
    8adc:	bl	1950 <Mat_uint16Swap>
    8ae0:	uxth	r0, r0
    8ae4:	mov	r1, #0
    8ae8:	strd	r0, [r6], #8
    8aec:	cmp	r5, r6
    8af0:	bne	8ad4 <ReadUInt64Data.part.5+0xc48>
    8af4:	b	8500 <ReadUInt64Data.part.5+0x674>
    8af8:	add	r4, sp, #32
    8afc:	mov	r2, r5
    8b00:	mov	r0, r4
    8b04:	mov	r1, fp
    8b08:	bl	1520 <fread@plt>
    8b0c:	cmp	r5, #0
    8b10:	str	r0, [sp, #12]
    8b14:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8b18:	ldr	r6, [sp, #8]
    8b1c:	add	r5, r6, r5, lsl #3
    8b20:	mov	r0, r4
    8b24:	add	r4, r4, #8
    8b28:	bl	19a4 <Mat_doubleSwap>
    8b2c:	vmov	r0, r1, d0
    8b30:	bl	4e430 <__aeabi_d2ulz>
    8b34:	strd	r0, [r6], #8
    8b38:	cmp	r6, r5
    8b3c:	bne	8b20 <ReadUInt64Data.part.5+0xc94>
    8b40:	b	8500 <ReadUInt64Data.part.5+0x674>
    8b44:	add	r6, sp, #32
    8b48:	mov	r2, r5
    8b4c:	mov	r0, r6
    8b50:	mov	r1, fp
    8b54:	bl	1520 <fread@plt>
    8b58:	cmp	r5, #0
    8b5c:	str	r0, [sp, #12]
    8b60:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8b64:	ldr	r4, [sp, #8]
    8b68:	mov	r7, #0
    8b6c:	add	r5, r4, r5, lsl #3
    8b70:	mov	r0, r6
    8b74:	add	r6, r6, #4
    8b78:	bl	18f8 <Mat_uint32Swap>
    8b7c:	stm	r4, {r0, r7}
    8b80:	add	r4, r4, #8
    8b84:	cmp	r4, r5
    8b88:	bne	8b70 <ReadUInt64Data.part.5+0xce4>
    8b8c:	b	8500 <ReadUInt64Data.part.5+0x674>
    8b90:	add	r4, sp, #32
    8b94:	mov	r2, r5
    8b98:	mov	r0, r4
    8b9c:	mov	r1, fp
    8ba0:	bl	1520 <fread@plt>
    8ba4:	cmp	r5, #0
    8ba8:	str	r0, [sp, #12]
    8bac:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8bb0:	ldr	r6, [sp, #8]
    8bb4:	add	r5, r6, r5, lsl #3
    8bb8:	mov	r0, r4
    8bbc:	add	r4, r4, #4
    8bc0:	bl	1974 <Mat_floatSwap>
    8bc4:	vmov	r0, s0
    8bc8:	bl	4e3f0 <__aeabi_f2ulz>
    8bcc:	strd	r0, [r6], #8
    8bd0:	cmp	r6, r5
    8bd4:	bne	8bb8 <ReadUInt64Data.part.5+0xd2c>
    8bd8:	b	8500 <ReadUInt64Data.part.5+0x674>
    8bdc:	add	r4, sp, #32
    8be0:	mov	r2, r5
    8be4:	mov	r0, r4
    8be8:	mov	r1, fp
    8bec:	bl	1520 <fread@plt>
    8bf0:	cmp	r5, #0
    8bf4:	str	r0, [sp, #12]
    8bf8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8bfc:	ldr	r6, [sp, #8]
    8c00:	add	r5, r6, r5, lsl #3
    8c04:	mov	r0, r4
    8c08:	add	r4, r4, #4
    8c0c:	bl	18c4 <Mat_int32Swap>
    8c10:	asr	r1, r0, #31
    8c14:	strd	r0, [r6], #8
    8c18:	cmp	r5, r6
    8c1c:	bne	8c04 <ReadUInt64Data.part.5+0xd78>
    8c20:	b	8500 <ReadUInt64Data.part.5+0x674>
    8c24:	add	r4, sp, #32
    8c28:	mov	r2, r5
    8c2c:	mov	r0, r4
    8c30:	mov	r1, fp
    8c34:	bl	1520 <fread@plt>
    8c38:	cmp	r5, #0
    8c3c:	str	r0, [sp, #12]
    8c40:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8c44:	ldr	r6, [sp, #8]
    8c48:	add	r5, r6, r5, lsl #3
    8c4c:	mov	r0, r4
    8c50:	add	r4, r4, #2
    8c54:	bl	192c <Mat_int16Swap>
    8c58:	sxth	r0, r0
    8c5c:	asr	r1, r0, #31
    8c60:	strd	r0, [r6], #8
    8c64:	cmp	r5, r6
    8c68:	bne	8c4c <ReadUInt64Data.part.5+0xdc0>
    8c6c:	b	8500 <ReadUInt64Data.part.5+0x674>
    8c70:	ldr	fp, [sp, #16]
    8c74:	ldr	r5, [sp, #28]
    8c78:	sub	r3, r5, #256	; 0x100
    8c7c:	sub	r3, r3, #1
    8c80:	lsr	r3, r3, #8
    8c84:	add	r4, r3, #1
    8c88:	lsl	r7, r4, #8
    8c8c:	cmp	r5, r7
    8c90:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8c94:	ldr	r3, [sp, #4]
    8c98:	sub	r5, r5, r7
    8c9c:	mov	r0, r6
    8ca0:	mov	r2, r5
    8ca4:	mov	r1, fp
    8ca8:	ldr	r3, [r3]
    8cac:	bl	1520 <fread@plt>
    8cb0:	add	r3, r9, r0
    8cb4:	cmp	r5, #0
    8cb8:	str	r3, [sp, #12]
    8cbc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8cc0:	ldr	r3, [sp, #8]
    8cc4:	add	r5, r7, r5
    8cc8:	mov	r6, #0
    8ccc:	ldr	r7, [sp, #20]
    8cd0:	add	r4, r3, r4, lsl #11
    8cd4:	add	r5, r3, r5, lsl #3
    8cd8:	mov	r0, r7
    8cdc:	add	r7, r7, #4
    8ce0:	bl	18f8 <Mat_uint32Swap>
    8ce4:	stm	r4, {r0, r6}
    8ce8:	add	r4, r4, #8
    8cec:	cmp	r4, r5
    8cf0:	bne	8cd8 <ReadUInt64Data.part.5+0xe4c>
    8cf4:	b	8500 <ReadUInt64Data.part.5+0x674>
    8cf8:	ldr	r5, [sp, #24]
    8cfc:	sub	r3, r5, #256	; 0x100
    8d00:	sub	r3, r3, #1
    8d04:	lsr	r3, r3, #8
    8d08:	add	r4, r3, #1
    8d0c:	lsl	r8, r4, #8
    8d10:	cmp	r5, r8
    8d14:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8d18:	ldr	r3, [sp, #4]
    8d1c:	sub	r5, r5, r8
    8d20:	mov	r0, r6
    8d24:	mov	r2, r5
    8d28:	mov	r1, fp
    8d2c:	ldr	r3, [r3]
    8d30:	bl	1520 <fread@plt>
    8d34:	add	r3, r7, r0
    8d38:	cmp	r5, #0
    8d3c:	str	r3, [sp, #12]
    8d40:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8d44:	ldr	r3, [sp, #8]
    8d48:	add	r5, r5, r8
    8d4c:	ldr	r6, [sp, #20]
    8d50:	add	r4, r3, r4, lsl #11
    8d54:	add	r5, r3, r5, lsl #3
    8d58:	mov	r0, r6
    8d5c:	add	r6, r6, #2
    8d60:	bl	1950 <Mat_uint16Swap>
    8d64:	uxth	r0, r0
    8d68:	mov	r1, #0
    8d6c:	strd	r0, [r4], #8
    8d70:	cmp	r5, r4
    8d74:	bne	8d58 <ReadUInt64Data.part.5+0xecc>
    8d78:	b	8500 <ReadUInt64Data.part.5+0x674>
    8d7c:	add	r4, sp, #32
    8d80:	mov	r2, r5
    8d84:	mov	r0, r4
    8d88:	mov	r1, fp
    8d8c:	bl	1520 <fread@plt>
    8d90:	cmp	r5, #0
    8d94:	mov	ip, r0
    8d98:	ble	854c <ReadUInt64Data.part.5+0x6c0>
    8d9c:	ldr	r3, [sp, #8]
    8da0:	sub	r2, r4, #1
    8da4:	add	r5, r3, r5, lsl #3
    8da8:	ldrsb	r0, [r2, #1]!
    8dac:	asr	r1, r0, #31
    8db0:	strd	r0, [r3], #8
    8db4:	cmp	r5, r3
    8db8:	bne	8da8 <ReadUInt64Data.part.5+0xf1c>
    8dbc:	b	854c <ReadUInt64Data.part.5+0x6c0>
    8dc0:	ldr	r5, [sp, #24]
    8dc4:	sub	r3, r5, #256	; 0x100
    8dc8:	sub	r3, r3, #1
    8dcc:	lsr	r3, r3, #8
    8dd0:	add	r4, r3, #1
    8dd4:	lsl	r8, r4, #8
    8dd8:	cmp	r5, r8
    8ddc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8de0:	ldr	r3, [sp, #4]
    8de4:	sub	r5, r5, r8
    8de8:	mov	r0, r6
    8dec:	mov	r2, r5
    8df0:	mov	r1, fp
    8df4:	ldr	r3, [r3]
    8df8:	bl	1520 <fread@plt>
    8dfc:	add	r3, r7, r0
    8e00:	cmp	r5, #0
    8e04:	str	r3, [sp, #12]
    8e08:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8e0c:	ldr	r3, [sp, #8]
    8e10:	add	r5, r5, r8
    8e14:	ldr	r6, [sp, #20]
    8e18:	add	r4, r3, r4, lsl #11
    8e1c:	add	r5, r3, r5, lsl #3
    8e20:	mov	r0, r6
    8e24:	add	r6, r6, #4
    8e28:	bl	18c4 <Mat_int32Swap>
    8e2c:	asr	r1, r0, #31
    8e30:	strd	r0, [r4], #8
    8e34:	cmp	r5, r4
    8e38:	bne	8e20 <ReadUInt64Data.part.5+0xf94>
    8e3c:	b	8500 <ReadUInt64Data.part.5+0x674>
    8e40:	add	r4, sp, #32
    8e44:	mov	r2, r5
    8e48:	mov	r0, r4
    8e4c:	mov	r1, fp
    8e50:	bl	1520 <fread@plt>
    8e54:	cmp	r5, #0
    8e58:	mov	ip, r0
    8e5c:	ble	854c <ReadUInt64Data.part.5+0x6c0>
    8e60:	ldr	r3, [sp, #8]
    8e64:	sub	r2, r4, #1
    8e68:	add	r5, r3, r5, lsl #3
    8e6c:	ldrb	r0, [r2, #1]!
    8e70:	mov	r1, #0
    8e74:	strd	r0, [r3], #8
    8e78:	cmp	r5, r3
    8e7c:	bne	8e6c <ReadUInt64Data.part.5+0xfe0>
    8e80:	b	854c <ReadUInt64Data.part.5+0x6c0>
    8e84:	ldr	r5, [sp, #24]
    8e88:	sub	r3, r5, #256	; 0x100
    8e8c:	sub	r3, r3, #1
    8e90:	lsr	r3, r3, #8
    8e94:	add	r4, r3, #1
    8e98:	lsl	r8, r4, #8
    8e9c:	cmp	r5, r8
    8ea0:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8ea4:	ldr	r3, [sp, #4]
    8ea8:	sub	r5, r5, r8
    8eac:	mov	r0, r6
    8eb0:	mov	r2, r5
    8eb4:	mov	r1, fp
    8eb8:	ldr	r3, [r3]
    8ebc:	bl	1520 <fread@plt>
    8ec0:	add	r3, r7, r0
    8ec4:	cmp	r5, #0
    8ec8:	str	r3, [sp, #12]
    8ecc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8ed0:	ldr	r3, [sp, #8]
    8ed4:	add	r5, r5, r8
    8ed8:	ldr	r6, [sp, #20]
    8edc:	add	r4, r3, r4, lsl #11
    8ee0:	add	r5, r3, r5, lsl #3
    8ee4:	mov	r0, r6
    8ee8:	add	r6, r6, #4
    8eec:	bl	1974 <Mat_floatSwap>
    8ef0:	vmov	r0, s0
    8ef4:	bl	4e3f0 <__aeabi_f2ulz>
    8ef8:	strd	r0, [r4], #8
    8efc:	cmp	r4, r5
    8f00:	bne	8ee4 <ReadUInt64Data.part.5+0x1058>
    8f04:	b	8500 <ReadUInt64Data.part.5+0x674>
    8f08:	ldr	r5, [sp, #24]
    8f0c:	sub	r3, r5, #256	; 0x100
    8f10:	sub	r3, r3, #1
    8f14:	lsr	r3, r3, #8
    8f18:	add	r4, r3, #1
    8f1c:	lsl	r8, r4, #8
    8f20:	cmp	r5, r8
    8f24:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8f28:	ldr	r3, [sp, #4]
    8f2c:	sub	r5, r5, r8
    8f30:	mov	r0, r6
    8f34:	mov	r2, r5
    8f38:	mov	r1, fp
    8f3c:	ldr	r3, [r3]
    8f40:	bl	1520 <fread@plt>
    8f44:	add	r3, r7, r0
    8f48:	cmp	r5, #0
    8f4c:	str	r3, [sp, #12]
    8f50:	ble	8500 <ReadUInt64Data.part.5+0x674>
    8f54:	ldr	r3, [sp, #8]
    8f58:	add	r5, r5, r8
    8f5c:	ldr	r6, [sp, #20]
    8f60:	add	r4, r3, r4, lsl #11
    8f64:	add	r5, r3, r5, lsl #3
    8f68:	mov	r0, r6
    8f6c:	add	r6, r6, #8
    8f70:	bl	19a4 <Mat_doubleSwap>
    8f74:	vmov	r0, r1, d0
    8f78:	bl	4e430 <__aeabi_d2ulz>
    8f7c:	strd	r0, [r4], #8
    8f80:	cmp	r4, r5
    8f84:	bne	8f68 <ReadUInt64Data.part.5+0x10dc>
    8f88:	b	8500 <ReadUInt64Data.part.5+0x674>
    8f8c:	ldr	r3, [sp, #4]
    8f90:	ldr	r7, [r3, #20]
    8f94:	ldr	r3, [r3]
    8f98:	cmp	r7, #0
    8f9c:	beq	9424 <ReadUInt64Data.part.5+0x1598>
    8fa0:	cmp	r5, #256	; 0x100
    8fa4:	ble	96bc <ReadUInt64Data.part.5+0x1830>
    8fa8:	sub	r2, r5, #256	; 0x100
    8fac:	mov	r7, #0
    8fb0:	mov	r8, r7
    8fb4:	add	r6, sp, #32
    8fb8:	str	r2, [sp, #20]
    8fbc:	add	r4, sp, #2080	; 0x820
    8fc0:	ldr	r2, [sp, #8]
    8fc4:	sub	r2, r2, #8
    8fc8:	str	r2, [sp, #16]
    8fcc:	mov	r2, #256	; 0x100
    8fd0:	mov	r1, fp
    8fd4:	mov	r0, r6
    8fd8:	mov	r9, r6
    8fdc:	bl	1520 <fread@plt>
    8fe0:	ldr	sl, [sp, #16]
    8fe4:	add	r8, r8, r0
    8fe8:	str	r8, [sp, #12]
    8fec:	str	r6, [sp, #24]
    8ff0:	mov	r0, r9
    8ff4:	add	r9, r9, #8
    8ff8:	bl	17ec <Mat_int64Swap>
    8ffc:	cmp	r4, r9
    9000:	strd	r0, [sl, #8]!
    9004:	bne	8ff0 <ReadUInt64Data.part.5+0x1164>
    9008:	ldr	r3, [sp, #16]
    900c:	add	r7, r7, #256	; 0x100
    9010:	add	r3, r3, #2048	; 0x800
    9014:	str	r3, [sp, #16]
    9018:	ldr	r3, [sp, #20]
    901c:	cmp	r3, r7
    9020:	ble	9510 <ReadUInt64Data.part.5+0x1684>
    9024:	ldr	r3, [sp, #4]
    9028:	ldr	r3, [r3]
    902c:	b	8fcc <ReadUInt64Data.part.5+0x1140>
    9030:	mov	r5, sl
    9034:	mov	sl, ip
    9038:	str	lr, [sp, #12]
    903c:	sub	r3, r5, #256	; 0x100
    9040:	sub	r3, r3, #1
    9044:	lsr	r3, r3, #8
    9048:	add	r4, r3, #1
    904c:	lsl	r8, r4, #8
    9050:	cmp	r5, r8
    9054:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9058:	ldr	r3, [sp, #4]
    905c:	sub	r5, r5, r8
    9060:	mov	r0, r6
    9064:	mov	r2, r5
    9068:	mov	r1, fp
    906c:	ldr	r3, [r3]
    9070:	bl	1520 <fread@plt>
    9074:	add	r3, r7, r0
    9078:	cmp	r5, #0
    907c:	str	r3, [sp, #12]
    9080:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9084:	ldr	r3, [sp, #8]
    9088:	add	r5, r5, r8
    908c:	add	r4, r3, r4, lsl #11
    9090:	add	r3, r3, r5, lsl #3
    9094:	mov	r1, r3
    9098:	ldr	r2, [sl, #4]!
    909c:	asr	r3, r2, #31
    90a0:	strd	r2, [r4], #8
    90a4:	cmp	r1, r4
    90a8:	bne	9098 <ReadUInt64Data.part.5+0x120c>
    90ac:	b	8500 <ReadUInt64Data.part.5+0x674>
    90b0:	ldr	r5, [sp, #16]
    90b4:	mov	r9, r0
    90b8:	str	ip, [sp, #12]
    90bc:	sub	r3, r5, #256	; 0x100
    90c0:	sub	r3, r3, #1
    90c4:	lsr	r3, r3, #8
    90c8:	add	r4, r3, #1
    90cc:	lsl	r7, r4, #8
    90d0:	cmp	r5, r7
    90d4:	ble	8500 <ReadUInt64Data.part.5+0x674>
    90d8:	ldr	r3, [sp, #4]
    90dc:	sub	r5, r5, r7
    90e0:	mov	r0, r6
    90e4:	mov	r2, r5
    90e8:	mov	r1, fp
    90ec:	ldr	r3, [r3]
    90f0:	bl	1520 <fread@plt>
    90f4:	add	r3, r8, r0
    90f8:	cmp	r5, #0
    90fc:	str	r3, [sp, #12]
    9100:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9104:	ldr	r3, [sp, #8]
    9108:	add	r5, r5, r7
    910c:	mov	r2, #0
    9110:	mov	r1, r9
    9114:	add	r4, r3, r4, lsl #11
    9118:	add	r3, r3, r5, lsl #3
    911c:	ldr	r0, [r1, #4]!
    9120:	stm	r4, {r0, r2}
    9124:	add	r4, r4, #8
    9128:	cmp	r3, r4
    912c:	bne	911c <ReadUInt64Data.part.5+0x1290>
    9130:	b	8500 <ReadUInt64Data.part.5+0x674>
    9134:	mov	r5, sl
    9138:	mov	sl, ip
    913c:	str	lr, [sp, #12]
    9140:	sub	r3, r5, #256	; 0x100
    9144:	sub	r3, r3, #1
    9148:	lsr	r3, r3, #8
    914c:	add	r4, r3, #1
    9150:	lsl	r8, r4, #8
    9154:	cmp	r5, r8
    9158:	ble	8500 <ReadUInt64Data.part.5+0x674>
    915c:	ldr	r3, [sp, #4]
    9160:	sub	r5, r5, r8
    9164:	mov	r0, r6
    9168:	mov	r2, r5
    916c:	mov	r1, fp
    9170:	ldr	r3, [r3]
    9174:	bl	1520 <fread@plt>
    9178:	add	r3, r7, r0
    917c:	cmp	r5, #0
    9180:	str	r3, [sp, #12]
    9184:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9188:	ldr	r3, [sp, #8]
    918c:	add	r5, r5, r8
    9190:	add	r4, r3, r4, lsl #11
    9194:	add	r3, r3, r5, lsl #3
    9198:	mov	r1, r3
    919c:	ldrsh	r2, [sl, #2]!
    91a0:	asr	r3, r2, #31
    91a4:	strd	r2, [r4], #8
    91a8:	cmp	r1, r4
    91ac:	bne	919c <ReadUInt64Data.part.5+0x1310>
    91b0:	b	8500 <ReadUInt64Data.part.5+0x674>
    91b4:	ldr	r5, [sp, #24]
    91b8:	sub	r3, r5, #256	; 0x100
    91bc:	sub	r3, r3, #1
    91c0:	lsr	r3, r3, #8
    91c4:	add	r4, r3, #1
    91c8:	lsl	r8, r4, #8
    91cc:	cmp	r5, r8
    91d0:	ble	8500 <ReadUInt64Data.part.5+0x674>
    91d4:	ldr	r3, [sp, #4]
    91d8:	sub	r5, r5, r8
    91dc:	mov	r0, r6
    91e0:	mov	r2, r5
    91e4:	mov	r1, fp
    91e8:	ldr	r3, [r3]
    91ec:	bl	1520 <fread@plt>
    91f0:	add	r3, r7, r0
    91f4:	cmp	r5, #0
    91f8:	str	r3, [sp, #12]
    91fc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9200:	ldr	r3, [sp, #8]
    9204:	add	r5, r5, r8
    9208:	ldr	r6, [sp, #20]
    920c:	add	r4, r3, r4, lsl #11
    9210:	add	r5, r3, r5, lsl #3
    9214:	ldr	r0, [r6], #4
    9218:	bl	4e3f0 <__aeabi_f2ulz>
    921c:	strd	r0, [r4], #8
    9220:	cmp	r4, r5
    9224:	bne	9214 <ReadUInt64Data.part.5+0x1388>
    9228:	b	8500 <ReadUInt64Data.part.5+0x674>
    922c:	ldr	r5, [sp, #24]
    9230:	sub	r3, r5, #256	; 0x100
    9234:	sub	r3, r3, #1
    9238:	lsr	r3, r3, #8
    923c:	add	r4, r3, #1
    9240:	lsl	r8, r4, #8
    9244:	cmp	r5, r8
    9248:	ble	8500 <ReadUInt64Data.part.5+0x674>
    924c:	ldr	r3, [sp, #4]
    9250:	sub	r5, r5, r8
    9254:	mov	r0, r6
    9258:	mov	r2, r5
    925c:	mov	r1, fp
    9260:	ldr	r3, [r3]
    9264:	bl	1520 <fread@plt>
    9268:	add	r3, r7, r0
    926c:	cmp	r5, #0
    9270:	str	r3, [sp, #12]
    9274:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9278:	ldr	r3, [sp, #8]
    927c:	add	r5, r5, r8
    9280:	ldr	r6, [sp, #20]
    9284:	add	r4, r3, r4, lsl #11
    9288:	add	r5, r3, r5, lsl #3
    928c:	ldrd	r0, [r6], #8
    9290:	bl	4e430 <__aeabi_d2ulz>
    9294:	strd	r0, [r4], #8
    9298:	cmp	r4, r5
    929c:	bne	928c <ReadUInt64Data.part.5+0x1400>
    92a0:	b	8500 <ReadUInt64Data.part.5+0x674>
    92a4:	mov	r5, sl
    92a8:	mov	sl, ip
    92ac:	str	lr, [sp, #12]
    92b0:	sub	r3, r5, #256	; 0x100
    92b4:	sub	r3, r3, #1
    92b8:	lsr	r3, r3, #8
    92bc:	add	r4, r3, #1
    92c0:	lsl	r8, r4, #8
    92c4:	cmp	r5, r8
    92c8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    92cc:	ldr	r3, [sp, #4]
    92d0:	sub	r5, r5, r8
    92d4:	mov	r0, r6
    92d8:	mov	r2, r5
    92dc:	mov	r1, fp
    92e0:	ldr	r3, [r3]
    92e4:	bl	1520 <fread@plt>
    92e8:	add	r3, r7, r0
    92ec:	cmp	r5, #0
    92f0:	str	r3, [sp, #12]
    92f4:	ble	8500 <ReadUInt64Data.part.5+0x674>
    92f8:	ldr	r3, [sp, #8]
    92fc:	add	r5, r5, r8
    9300:	add	r4, r3, r4, lsl #11
    9304:	add	r3, r3, r5, lsl #3
    9308:	mov	r1, r3
    930c:	ldrh	r2, [sl, #2]!
    9310:	mov	r3, #0
    9314:	strd	r2, [r4], #8
    9318:	cmp	r1, r4
    931c:	bne	930c <ReadUInt64Data.part.5+0x1480>
    9320:	b	8500 <ReadUInt64Data.part.5+0x674>
    9324:	ldr	r5, [sp, #24]
    9328:	sub	r3, r5, #256	; 0x100
    932c:	sub	r3, r3, #1
    9330:	lsr	r3, r3, #8
    9334:	add	r4, r3, #1
    9338:	lsl	r8, r4, #8
    933c:	cmp	r5, r8
    9340:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9344:	ldr	r3, [sp, #4]
    9348:	sub	r5, r5, r8
    934c:	mov	r0, r6
    9350:	mov	r2, r5
    9354:	mov	r1, fp
    9358:	ldr	r3, [r3]
    935c:	bl	1520 <fread@plt>
    9360:	add	r3, r7, r0
    9364:	cmp	r5, #0
    9368:	str	r3, [sp, #12]
    936c:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9370:	ldr	r3, [sp, #8]
    9374:	add	r5, r5, r8
    9378:	ldr	r6, [sp, #20]
    937c:	add	r4, r3, r4, lsl #11
    9380:	add	r5, r3, r5, lsl #3
    9384:	mov	r0, r6
    9388:	add	r6, r6, #2
    938c:	bl	192c <Mat_int16Swap>
    9390:	sxth	r0, r0
    9394:	asr	r1, r0, #31
    9398:	strd	r0, [r4], #8
    939c:	cmp	r5, r4
    93a0:	bne	9384 <ReadUInt64Data.part.5+0x14f8>
    93a4:	b	8500 <ReadUInt64Data.part.5+0x674>
    93a8:	cmp	r5, #256	; 0x100
    93ac:	ble	95f8 <ReadUInt64Data.part.5+0x176c>
    93b0:	sub	r2, r5, #256	; 0x100
    93b4:	add	r4, sp, #2064	; 0x810
    93b8:	mov	sl, r7
    93bc:	add	r6, sp, #32
    93c0:	str	r2, [sp, #16]
    93c4:	add	r4, r4, #8
    93c8:	ldr	r2, [sp, #8]
    93cc:	sub	r9, r2, #8
    93d0:	mov	r2, #256	; 0x100
    93d4:	mov	r1, fp
    93d8:	mov	r0, r6
    93dc:	sub	r8, r6, #8
    93e0:	bl	1520 <fread@plt>
    93e4:	add	r7, r7, r0
    93e8:	mov	r3, r8
    93ec:	mov	r2, r9
    93f0:	str	r7, [sp, #12]
    93f4:	ldrd	r0, [r3, #8]!
    93f8:	cmp	r4, r3
    93fc:	strd	r0, [r2, #8]!
    9400:	bne	93f4 <ReadUInt64Data.part.5+0x1568>
    9404:	ldr	r3, [sp, #16]
    9408:	add	sl, sl, #256	; 0x100
    940c:	add	r9, r9, #2048	; 0x800
    9410:	cmp	sl, r3
    9414:	bge	94a0 <ReadUInt64Data.part.5+0x1614>
    9418:	ldr	r3, [sp, #4]
    941c:	ldr	r3, [r3]
    9420:	b	93d0 <ReadUInt64Data.part.5+0x1544>
    9424:	cmp	r5, #256	; 0x100
    9428:	ble	967c <ReadUInt64Data.part.5+0x17f0>
    942c:	sub	r2, r5, #256	; 0x100
    9430:	add	r4, sp, #2064	; 0x810
    9434:	mov	sl, r7
    9438:	add	r6, sp, #32
    943c:	str	r2, [sp, #16]
    9440:	add	r4, r4, #8
    9444:	ldr	r2, [sp, #8]
    9448:	sub	r9, r2, #8
    944c:	mov	r2, #256	; 0x100
    9450:	mov	r1, fp
    9454:	mov	r0, r6
    9458:	sub	r8, r6, #8
    945c:	bl	1520 <fread@plt>
    9460:	add	r7, r7, r0
    9464:	mov	r3, r8
    9468:	mov	r2, r9
    946c:	str	r7, [sp, #12]
    9470:	ldrd	r0, [r3, #8]!
    9474:	cmp	r4, r3
    9478:	strd	r0, [r2, #8]!
    947c:	bne	9470 <ReadUInt64Data.part.5+0x15e4>
    9480:	ldr	r3, [sp, #16]
    9484:	add	sl, sl, #256	; 0x100
    9488:	add	r9, r9, #2048	; 0x800
    948c:	cmp	r3, sl
    9490:	ble	9588 <ReadUInt64Data.part.5+0x16fc>
    9494:	ldr	r3, [sp, #4]
    9498:	ldr	r3, [r3]
    949c:	b	944c <ReadUInt64Data.part.5+0x15c0>
    94a0:	sub	r3, r5, #256	; 0x100
    94a4:	sub	r3, r3, #1
    94a8:	lsr	r3, r3, #8
    94ac:	add	r4, r3, #1
    94b0:	lsl	r9, r4, #8
    94b4:	cmp	r5, r9
    94b8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    94bc:	ldr	r3, [sp, #4]
    94c0:	sub	r5, r5, r9
    94c4:	mov	r0, r6
    94c8:	mov	r2, r5
    94cc:	mov	r1, fp
    94d0:	ldr	r3, [r3]
    94d4:	bl	1520 <fread@plt>
    94d8:	add	r3, r7, r0
    94dc:	cmp	r5, #0
    94e0:	str	r3, [sp, #12]
    94e4:	ble	8500 <ReadUInt64Data.part.5+0x674>
    94e8:	ldr	r3, [sp, #8]
    94ec:	add	r5, r9, r5
    94f0:	add	r4, r3, r4, lsl #11
    94f4:	add	r3, r3, r5, lsl #3
    94f8:	mov	r1, r3
    94fc:	ldrd	r2, [r8, #8]!
    9500:	strd	r2, [r4], #8
    9504:	cmp	r1, r4
    9508:	bne	94fc <ReadUInt64Data.part.5+0x1670>
    950c:	b	8500 <ReadUInt64Data.part.5+0x674>
    9510:	sub	r3, r5, #256	; 0x100
    9514:	sub	r3, r3, #1
    9518:	lsr	r3, r3, #8
    951c:	add	r4, r3, #1
    9520:	lsl	r7, r4, #8
    9524:	cmp	r5, r7
    9528:	ble	8500 <ReadUInt64Data.part.5+0x674>
    952c:	ldr	r3, [sp, #4]
    9530:	sub	r5, r5, r7
    9534:	mov	r0, r6
    9538:	mov	r2, r5
    953c:	mov	r1, fp
    9540:	ldr	r3, [r3]
    9544:	bl	1520 <fread@plt>
    9548:	add	r3, r8, r0
    954c:	cmp	r5, #0
    9550:	str	r3, [sp, #12]
    9554:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9558:	ldr	r3, [sp, #8]
    955c:	add	r5, r5, r7
    9560:	ldr	r6, [sp, #24]
    9564:	add	r4, r3, r4, lsl #11
    9568:	add	r5, r3, r5, lsl #3
    956c:	mov	r0, r6
    9570:	add	r6, r6, #8
    9574:	bl	17ec <Mat_int64Swap>
    9578:	strd	r0, [r4], #8
    957c:	cmp	r4, r5
    9580:	bne	956c <ReadUInt64Data.part.5+0x16e0>
    9584:	b	8500 <ReadUInt64Data.part.5+0x674>
    9588:	sub	r3, r5, #256	; 0x100
    958c:	sub	r3, r3, #1
    9590:	lsr	r3, r3, #8
    9594:	add	r4, r3, #1
    9598:	lsl	r9, r4, #8
    959c:	cmp	r5, r9
    95a0:	ble	8500 <ReadUInt64Data.part.5+0x674>
    95a4:	ldr	r3, [sp, #4]
    95a8:	sub	r5, r5, r9
    95ac:	mov	r0, r6
    95b0:	mov	r2, r5
    95b4:	mov	r1, fp
    95b8:	ldr	r3, [r3]
    95bc:	bl	1520 <fread@plt>
    95c0:	add	r3, r7, r0
    95c4:	cmp	r5, #0
    95c8:	str	r3, [sp, #12]
    95cc:	ble	8500 <ReadUInt64Data.part.5+0x674>
    95d0:	ldr	r3, [sp, #8]
    95d4:	add	r5, r5, r9
    95d8:	add	r4, r3, r4, lsl #11
    95dc:	add	r3, r3, r5, lsl #3
    95e0:	mov	r1, r3
    95e4:	ldrd	r2, [r8, #8]!
    95e8:	strd	r2, [r4], #8
    95ec:	cmp	r1, r4
    95f0:	bne	95e4 <ReadUInt64Data.part.5+0x1758>
    95f4:	b	8500 <ReadUInt64Data.part.5+0x674>
    95f8:	add	r4, sp, #32
    95fc:	mov	r2, r5
    9600:	mov	r0, r4
    9604:	mov	r1, fp
    9608:	bl	1520 <fread@plt>
    960c:	cmp	r5, #0
    9610:	str	r0, [sp, #12]
    9614:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9618:	ldr	r3, [sp, #8]
    961c:	sub	r4, r4, #8
    9620:	add	r5, r3, r5, lsl #3
    9624:	ldrd	r0, [r4, #8]!
    9628:	strd	r0, [r3], #8
    962c:	cmp	r5, r3
    9630:	bne	9624 <ReadUInt64Data.part.5+0x1798>
    9634:	b	8500 <ReadUInt64Data.part.5+0x674>
    9638:	add	r4, sp, #32
    963c:	mov	r2, r5
    9640:	mov	r0, r4
    9644:	mov	r1, fp
    9648:	bl	1520 <fread@plt>
    964c:	cmp	r5, #0
    9650:	str	r0, [sp, #12]
    9654:	ble	8500 <ReadUInt64Data.part.5+0x674>
    9658:	ldr	r6, [sp, #8]
    965c:	add	r5, r6, r5, lsl #3
    9660:	mov	r0, r4
    9664:	add	r4, r4, #8
    9668:	bl	1858 <Mat_uint64Swap>
    966c:	strd	r0, [r6], #8
    9670:	cmp	r5, r6
    9674:	bne	9660 <ReadUInt64Data.part.5+0x17d4>
    9678:	b	8500 <ReadUInt64Data.part.5+0x674>
    967c:	add	r4, sp, #32
    9680:	mov	r2, r5
    9684:	mov	r0, r4
    9688:	mov	r1, fp
    968c:	bl	1520 <fread@plt>
    9690:	cmp	r5, #0
    9694:	str	r0, [sp, #12]
    9698:	ble	8500 <ReadUInt64Data.part.5+0x674>
    969c:	ldr	r3, [sp, #8]
    96a0:	sub	r4, r4, #8
    96a4:	add	r5, r3, r5, lsl #3
    96a8:	ldrd	r0, [r4, #8]!
    96ac:	strd	r0, [r3], #8
    96b0:	cmp	r5, r3
    96b4:	bne	96a8 <ReadUInt64Data.part.5+0x181c>
    96b8:	b	8500 <ReadUInt64Data.part.5+0x674>
    96bc:	add	r4, sp, #32
    96c0:	mov	r2, r5
    96c4:	mov	r0, r4
    96c8:	mov	r1, fp
    96cc:	bl	1520 <fread@plt>
    96d0:	cmp	r5, #0
    96d4:	str	r0, [sp, #12]
    96d8:	ble	8500 <ReadUInt64Data.part.5+0x674>
    96dc:	ldr	r6, [sp, #8]
    96e0:	add	r5, r6, r5, lsl #3
    96e4:	mov	r0, r4
    96e8:	add	r4, r4, #8
    96ec:	bl	17ec <Mat_int64Swap>
    96f0:	strd	r0, [r6], #8
    96f4:	cmp	r6, r5
    96f8:	bne	96e4 <ReadUInt64Data.part.5+0x1858>
    96fc:	b	8500 <ReadUInt64Data.part.5+0x674>

00009700 <ReadInt32Data.part.7>:
    9700:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9704:	mov	r4, r2
    9708:	mov	r5, r3
    970c:	strd	r6, [sp, #8]
    9710:	strd	r8, [sp, #16]
    9714:	strd	sl, [sp, #24]
    9718:	str	lr, [sp, #32]
    971c:	sub	sp, sp, #2064	; 0x810
    9720:	sub	sp, sp, #12
    9724:	strd	r0, [sp]
    9728:	mov	r0, r2
    972c:	bl	1598 <Mat_SizeOf@plt>
    9730:	sub	r3, r4, #1
    9734:	mov	fp, r0
    9738:	cmp	r3, #8
    973c:	addls	pc, pc, r3, lsl #2
    9740:	b	9c30 <ReadInt32Data.part.7+0x530>
    9744:	b	9810 <ReadInt32Data.part.7+0x110>
    9748:	b	992c <ReadInt32Data.part.7+0x22c>
    974c:	b	9a4c <ReadInt32Data.part.7+0x34c>
    9750:	b	9890 <ReadInt32Data.part.7+0x190>
    9754:	b	9ae8 <ReadInt32Data.part.7+0x3e8>
    9758:	b	99ac <ReadInt32Data.part.7+0x2ac>
    975c:	b	9b88 <ReadInt32Data.part.7+0x488>
    9760:	b	9c30 <ReadInt32Data.part.7+0x530>
    9764:	b	9768 <ReadInt32Data.part.7+0x68>
    9768:	ldr	r3, [sp]
    976c:	ldr	r7, [r3, #20]
    9770:	ldr	r3, [r3]
    9774:	cmp	r7, #0
    9778:	beq	a00c <ReadInt32Data.part.7+0x90c>
    977c:	cmp	r5, #256	; 0x100
    9780:	ble	a32c <ReadInt32Data.part.7+0xc2c>
    9784:	sub	r2, r5, #256	; 0x100
    9788:	mov	r8, #0
    978c:	add	r4, sp, #2064	; 0x810
    9790:	mov	r7, r8
    9794:	str	r2, [sp, #12]
    9798:	add	r6, sp, #24
    979c:	add	r4, r4, #8
    97a0:	ldr	r2, [sp, #4]
    97a4:	str	r5, [sp, #20]
    97a8:	sub	r9, r2, #4
    97ac:	mov	r2, #256	; 0x100
    97b0:	mov	r1, fp
    97b4:	mov	r0, r6
    97b8:	mov	sl, r9
    97bc:	bl	1520 <fread@plt>
    97c0:	add	r7, r7, r0
    97c4:	mov	r5, r6
    97c8:	str	r7, [sp, #8]
    97cc:	str	r6, [sp, #16]
    97d0:	mov	r0, r5
    97d4:	add	r5, r5, #8
    97d8:	bl	19a4 <Mat_doubleSwap>
    97dc:	vcvt.s32.f64	s0, d0
    97e0:	cmp	r5, r4
    97e4:	vmov	r3, s0
    97e8:	str	r3, [sl, #4]!
    97ec:	bne	97d0 <ReadInt32Data.part.7+0xd0>
    97f0:	ldr	r3, [sp, #12]
    97f4:	add	r8, r8, #256	; 0x100
    97f8:	add	r9, r9, #1024	; 0x400
    97fc:	cmp	r8, r3
    9800:	bge	a6f4 <ReadInt32Data.part.7+0xff4>
    9804:	ldr	r3, [sp]
    9808:	ldr	r3, [r3]
    980c:	b	97ac <ReadInt32Data.part.7+0xac>
    9810:	ldr	sl, [sp]
    9814:	cmp	r5, #256	; 0x100
    9818:	ldr	r3, [sl]
    981c:	ble	a580 <ReadInt32Data.part.7+0xe80>
    9820:	mov	r8, #0
    9824:	add	r6, sp, #24
    9828:	str	r5, [sp, #8]
    982c:	ldr	r1, [sp, #4]
    9830:	sub	r2, r5, #256	; 0x100
    9834:	mov	r7, r8
    9838:	add	r4, r6, #255	; 0xff
    983c:	mov	r5, r2
    9840:	sub	r9, r1, #4
    9844:	mov	r2, #256	; 0x100
    9848:	mov	r1, fp
    984c:	mov	r0, r6
    9850:	bl	1520 <fread@plt>
    9854:	add	r7, r7, r0
    9858:	sub	ip, r6, #1
    985c:	mov	r0, r7
    9860:	mov	r3, ip
    9864:	mov	r2, r9
    9868:	ldrsb	r1, [r3, #1]!
    986c:	cmp	r4, r3
    9870:	str	r1, [r2, #4]!
    9874:	bne	9868 <ReadInt32Data.part.7+0x168>
    9878:	add	r8, r8, #256	; 0x100
    987c:	add	r9, r9, #1024	; 0x400
    9880:	cmp	r5, r8
    9884:	ble	9d88 <ReadInt32Data.part.7+0x688>
    9888:	ldr	r3, [sl]
    988c:	b	9844 <ReadInt32Data.part.7+0x144>
    9890:	ldr	r3, [sp]
    9894:	ldr	r7, [r3, #20]
    9898:	ldr	r3, [r3]
    989c:	cmp	r7, #0
    98a0:	beq	9f18 <ReadInt32Data.part.7+0x818>
    98a4:	cmp	r5, #256	; 0x100
    98a8:	ble	a2e8 <ReadInt32Data.part.7+0xbe8>
    98ac:	sub	r2, r5, #256	; 0x100
    98b0:	mov	r8, #0
    98b4:	mov	r7, r8
    98b8:	add	r6, sp, #24
    98bc:	str	r2, [sp, #12]
    98c0:	add	r4, sp, #536	; 0x218
    98c4:	ldr	r2, [sp, #4]
    98c8:	str	r5, [sp, #20]
    98cc:	sub	r9, r2, #4
    98d0:	mov	r2, #256	; 0x100
    98d4:	mov	r1, fp
    98d8:	mov	r0, r6
    98dc:	mov	sl, r9
    98e0:	bl	1520 <fread@plt>
    98e4:	add	r7, r7, r0
    98e8:	mov	r5, r6
    98ec:	str	r7, [sp, #8]
    98f0:	str	r6, [sp, #16]
    98f4:	mov	r0, r5
    98f8:	add	r5, r5, #2
    98fc:	bl	1950 <Mat_uint16Swap>
    9900:	cmp	r4, r5
    9904:	str	r0, [sl, #4]!
    9908:	bne	98f4 <ReadInt32Data.part.7+0x1f4>
    990c:	ldr	r3, [sp, #12]
    9910:	add	r8, r8, #256	; 0x100
    9914:	add	r9, r9, #1024	; 0x400
    9918:	cmp	r8, r3
    991c:	bge	a504 <ReadInt32Data.part.7+0xe04>
    9920:	ldr	r3, [sp]
    9924:	ldr	r3, [r3]
    9928:	b	98d0 <ReadInt32Data.part.7+0x1d0>
    992c:	ldr	sl, [sp]
    9930:	cmp	r5, #256	; 0x100
    9934:	ldr	r3, [sl]
    9938:	ble	a638 <ReadInt32Data.part.7+0xf38>
    993c:	mov	r8, #0
    9940:	add	r6, sp, #24
    9944:	str	r5, [sp, #8]
    9948:	ldr	r1, [sp, #4]
    994c:	sub	r2, r5, #256	; 0x100
    9950:	mov	r7, r8
    9954:	add	r4, r6, #255	; 0xff
    9958:	mov	r5, r2
    995c:	sub	r9, r1, #4
    9960:	mov	r2, #256	; 0x100
    9964:	mov	r1, fp
    9968:	mov	r0, r6
    996c:	bl	1520 <fread@plt>
    9970:	add	r7, r7, r0
    9974:	sub	ip, r6, #1
    9978:	mov	r0, r7
    997c:	mov	r3, ip
    9980:	mov	r2, r9
    9984:	ldrb	r1, [r3, #1]!
    9988:	cmp	r4, r3
    998c:	str	r1, [r2, #4]!
    9990:	bne	9984 <ReadInt32Data.part.7+0x284>
    9994:	add	r8, r8, #256	; 0x100
    9998:	add	r9, r9, #1024	; 0x400
    999c:	cmp	r5, r8
    99a0:	ble	9db4 <ReadInt32Data.part.7+0x6b4>
    99a4:	ldr	r3, [sl]
    99a8:	b	9960 <ReadInt32Data.part.7+0x260>
    99ac:	ldr	r3, [sp]
    99b0:	ldr	r7, [r3, #20]
    99b4:	ldr	r3, [r3]
    99b8:	cmp	r7, #0
    99bc:	beq	9f94 <ReadInt32Data.part.7+0x894>
    99c0:	cmp	r5, #256	; 0x100
    99c4:	ble	a374 <ReadInt32Data.part.7+0xc74>
    99c8:	sub	r2, r5, #256	; 0x100
    99cc:	mov	r8, #0
    99d0:	add	r4, sp, #1040	; 0x410
    99d4:	mov	r7, r8
    99d8:	str	r2, [sp, #16]
    99dc:	add	r6, sp, #24
    99e0:	add	r4, r4, #8
    99e4:	ldr	r2, [sp, #4]
    99e8:	str	r5, [sp, #20]
    99ec:	sub	r9, r2, #4
    99f0:	mov	r2, #256	; 0x100
    99f4:	mov	r1, fp
    99f8:	mov	r0, r6
    99fc:	mov	sl, r9
    9a00:	bl	1520 <fread@plt>
    9a04:	add	r7, r7, r0
    9a08:	mov	r5, r6
    9a0c:	str	r7, [sp, #8]
    9a10:	str	r6, [sp, #12]
    9a14:	mov	r0, r5
    9a18:	add	r5, r5, #4
    9a1c:	bl	18f8 <Mat_uint32Swap>
    9a20:	cmp	r4, r5
    9a24:	str	r0, [sl, #4]!
    9a28:	bne	9a14 <ReadInt32Data.part.7+0x314>
    9a2c:	ldr	r3, [sp, #16]
    9a30:	add	r8, r8, #256	; 0x100
    9a34:	add	r9, r9, #1024	; 0x400
    9a38:	cmp	r8, r3
    9a3c:	bge	a488 <ReadInt32Data.part.7+0xd88>
    9a40:	ldr	r3, [sp]
    9a44:	ldr	r3, [r3]
    9a48:	b	99f0 <ReadInt32Data.part.7+0x2f0>
    9a4c:	ldr	r3, [sp]
    9a50:	ldr	r7, [r3, #20]
    9a54:	ldr	r3, [r3]
    9a58:	cmp	r7, #0
    9a5c:	beq	9e24 <ReadInt32Data.part.7+0x724>
    9a60:	cmp	r5, #256	; 0x100
    9a64:	ble	a444 <ReadInt32Data.part.7+0xd44>
    9a68:	sub	r2, r5, #256	; 0x100
    9a6c:	mov	r8, #0
    9a70:	mov	r7, r8
    9a74:	add	r6, sp, #24
    9a78:	str	r2, [sp, #12]
    9a7c:	add	r4, sp, #536	; 0x218
    9a80:	ldr	r2, [sp, #4]
    9a84:	str	r5, [sp, #20]
    9a88:	sub	r9, r2, #4
    9a8c:	mov	r2, #256	; 0x100
    9a90:	mov	r1, fp
    9a94:	mov	r0, r6
    9a98:	mov	sl, r9
    9a9c:	bl	1520 <fread@plt>
    9aa0:	add	r7, r7, r0
    9aa4:	mov	r5, r6
    9aa8:	str	r7, [sp, #8]
    9aac:	str	r6, [sp, #16]
    9ab0:	mov	r0, r5
    9ab4:	add	r5, r5, #2
    9ab8:	bl	192c <Mat_int16Swap>
    9abc:	cmp	r4, r5
    9ac0:	str	r0, [sl, #4]!
    9ac4:	bne	9ab0 <ReadInt32Data.part.7+0x3b0>
    9ac8:	ldr	r3, [sp, #12]
    9acc:	add	r8, r8, #256	; 0x100
    9ad0:	add	r9, r9, #1024	; 0x400
    9ad4:	cmp	r8, r3
    9ad8:	bge	aaf4 <ReadInt32Data.part.7+0x13f4>
    9adc:	ldr	r3, [sp]
    9ae0:	ldr	r3, [r3]
    9ae4:	b	9a8c <ReadInt32Data.part.7+0x38c>
    9ae8:	ldr	r3, [sp]
    9aec:	ldr	r7, [r3, #20]
    9af0:	ldr	r3, [r3]
    9af4:	cmp	r7, #0
    9af8:	beq	9ea0 <ReadInt32Data.part.7+0x7a0>
    9afc:	cmp	r5, #256	; 0x100
    9b00:	ble	a400 <ReadInt32Data.part.7+0xd00>
    9b04:	sub	r2, r5, #256	; 0x100
    9b08:	mov	r8, #0
    9b0c:	add	r4, sp, #1040	; 0x410
    9b10:	mov	r7, r8
    9b14:	str	r2, [sp, #12]
    9b18:	add	r6, sp, #24
    9b1c:	add	r4, r4, #8
    9b20:	ldr	r2, [sp, #4]
    9b24:	str	r5, [sp, #20]
    9b28:	sub	r9, r2, #4
    9b2c:	mov	r2, #256	; 0x100
    9b30:	mov	r1, fp
    9b34:	mov	r0, r6
    9b38:	mov	sl, r9
    9b3c:	bl	1520 <fread@plt>
    9b40:	add	r7, r7, r0
    9b44:	mov	r5, r6
    9b48:	str	r7, [sp, #8]
    9b4c:	str	r6, [sp, #16]
    9b50:	mov	r0, r5
    9b54:	add	r5, r5, #4
    9b58:	bl	18c4 <Mat_int32Swap>
    9b5c:	cmp	r4, r5
    9b60:	str	r0, [sl, #4]!
    9b64:	bne	9b50 <ReadInt32Data.part.7+0x450>
    9b68:	ldr	r3, [sp, #12]
    9b6c:	add	r8, r8, #256	; 0x100
    9b70:	add	r9, r9, #1024	; 0x400
    9b74:	cmp	r8, r3
    9b78:	bge	a5bc <ReadInt32Data.part.7+0xebc>
    9b7c:	ldr	r3, [sp]
    9b80:	ldr	r3, [r3]
    9b84:	b	9b2c <ReadInt32Data.part.7+0x42c>
    9b88:	ldr	r3, [sp]
    9b8c:	ldr	r7, [r3, #20]
    9b90:	ldr	r3, [r3]
    9b94:	cmp	r7, #0
    9b98:	beq	a090 <ReadInt32Data.part.7+0x990>
    9b9c:	cmp	r5, #256	; 0x100
    9ba0:	ble	a3b8 <ReadInt32Data.part.7+0xcb8>
    9ba4:	sub	r2, r5, #256	; 0x100
    9ba8:	mov	r8, #0
    9bac:	add	r4, sp, #1040	; 0x410
    9bb0:	mov	r7, r8
    9bb4:	str	r2, [sp, #12]
    9bb8:	add	r6, sp, #24
    9bbc:	add	r4, r4, #8
    9bc0:	ldr	r2, [sp, #4]
    9bc4:	str	r5, [sp, #20]
    9bc8:	sub	r9, r2, #4
    9bcc:	mov	r2, #256	; 0x100
    9bd0:	mov	r1, fp
    9bd4:	mov	r0, r6
    9bd8:	mov	sl, r9
    9bdc:	bl	1520 <fread@plt>
    9be0:	add	r7, r7, r0
    9be4:	mov	r5, r6
    9be8:	str	r7, [sp, #8]
    9bec:	str	r6, [sp, #16]
    9bf0:	mov	r0, r5
    9bf4:	add	r5, r5, #4
    9bf8:	bl	1974 <Mat_floatSwap>
    9bfc:	vcvt.s32.f32	s0, s0
    9c00:	cmp	r5, r4
    9c04:	vmov	r3, s0
    9c08:	str	r3, [sl, #4]!
    9c0c:	bne	9bf0 <ReadInt32Data.part.7+0x4f0>
    9c10:	ldr	r3, [sp, #12]
    9c14:	add	r8, r8, #256	; 0x100
    9c18:	add	r9, r9, #1024	; 0x400
    9c1c:	cmp	r8, r3
    9c20:	bge	a674 <ReadInt32Data.part.7+0xf74>
    9c24:	ldr	r3, [sp]
    9c28:	ldr	r3, [r3]
    9c2c:	b	9bcc <ReadInt32Data.part.7+0x4cc>
    9c30:	cmp	r4, #12
    9c34:	beq	a774 <ReadInt32Data.part.7+0x1074>
    9c38:	cmp	r4, #13
    9c3c:	movne	r0, #0
    9c40:	bne	9d68 <ReadInt32Data.part.7+0x668>
    9c44:	ldr	r3, [sp]
    9c48:	ldr	r7, [r3, #20]
    9c4c:	ldr	r3, [r3]
    9c50:	cmp	r7, #0
    9c54:	beq	ab70 <ReadInt32Data.part.7+0x1470>
    9c58:	cmp	r5, #256	; 0x100
    9c5c:	ble	adf0 <ReadInt32Data.part.7+0x16f0>
    9c60:	sub	r2, r5, #256	; 0x100
    9c64:	mov	r7, #0
    9c68:	add	r4, sp, #2064	; 0x810
    9c6c:	mov	r8, r7
    9c70:	str	r2, [sp, #16]
    9c74:	add	r6, sp, #24
    9c78:	add	r4, r4, #8
    9c7c:	ldr	r2, [sp, #4]
    9c80:	sub	r2, r2, #4
    9c84:	str	r2, [sp, #12]
    9c88:	mov	r2, #256	; 0x100
    9c8c:	mov	r1, fp
    9c90:	mov	r0, r6
    9c94:	mov	r9, r6
    9c98:	bl	1520 <fread@plt>
    9c9c:	ldr	sl, [sp, #12]
    9ca0:	add	r8, r8, r0
    9ca4:	str	r8, [sp, #8]
    9ca8:	str	r6, [sp, #20]
    9cac:	mov	r0, r9
    9cb0:	add	r9, r9, #8
    9cb4:	bl	1858 <Mat_uint64Swap>
    9cb8:	cmp	r4, r9
    9cbc:	str	r0, [sl, #4]!
    9cc0:	bne	9cac <ReadInt32Data.part.7+0x5ac>
    9cc4:	ldr	r3, [sp, #12]
    9cc8:	add	r7, r7, #256	; 0x100
    9ccc:	add	r3, r3, #1024	; 0x400
    9cd0:	str	r3, [sp, #12]
    9cd4:	ldr	r3, [sp, #16]
    9cd8:	cmp	r3, r7
    9cdc:	ble	9cec <ReadInt32Data.part.7+0x5ec>
    9ce0:	ldr	r3, [sp]
    9ce4:	ldr	r3, [r3]
    9ce8:	b	9c88 <ReadInt32Data.part.7+0x588>
    9cec:	sub	r3, r5, #256	; 0x100
    9cf0:	sub	r3, r3, #1
    9cf4:	lsr	r3, r3, #8
    9cf8:	add	r4, r3, #1
    9cfc:	lsl	r7, r4, #8
    9d00:	cmp	r5, r7
    9d04:	ble	9d60 <ReadInt32Data.part.7+0x660>
    9d08:	ldr	r3, [sp]
    9d0c:	sub	r5, r5, r7
    9d10:	mov	r0, r6
    9d14:	mov	r2, r5
    9d18:	mov	r1, fp
    9d1c:	ldr	r3, [r3]
    9d20:	bl	1520 <fread@plt>
    9d24:	add	r3, r8, r0
    9d28:	cmp	r5, #0
    9d2c:	str	r3, [sp, #8]
    9d30:	ble	9d60 <ReadInt32Data.part.7+0x660>
    9d34:	ldr	r3, [sp, #4]
    9d38:	add	r5, r5, r7
    9d3c:	ldr	r6, [sp, #20]
    9d40:	add	r4, r3, r4, lsl #10
    9d44:	add	r5, r3, r5, lsl #2
    9d48:	mov	r0, r6
    9d4c:	add	r6, r6, #8
    9d50:	bl	1858 <Mat_uint64Swap>
    9d54:	str	r0, [r4], #4
    9d58:	cmp	r5, r4
    9d5c:	bne	9d48 <ReadInt32Data.part.7+0x648>
    9d60:	ldr	r3, [sp, #8]
    9d64:	mul	r0, r3, fp
    9d68:	add	sp, sp, #2064	; 0x810
    9d6c:	add	sp, sp, #12
    9d70:	ldrd	r4, [sp]
    9d74:	ldrd	r6, [sp, #8]
    9d78:	ldrd	r8, [sp, #16]
    9d7c:	ldrd	sl, [sp, #24]
    9d80:	add	sp, sp, #32
    9d84:	pop	{pc}		; (ldr pc, [sp], #4)
    9d88:	ldr	r5, [sp, #8]
    9d8c:	mov	sl, ip
    9d90:	sub	r3, r5, #256	; 0x100
    9d94:	sub	r3, r3, #1
    9d98:	lsr	r3, r3, #8
    9d9c:	add	r4, r3, #1
    9da0:	lsl	r8, r4, #8
    9da4:	cmp	r5, r8
    9da8:	bgt	a114 <ReadInt32Data.part.7+0xa14>
    9dac:	mul	r0, r0, fp
    9db0:	b	9d68 <ReadInt32Data.part.7+0x668>
    9db4:	ldr	r5, [sp, #8]
    9db8:	mov	sl, ip
    9dbc:	sub	r3, r5, #256	; 0x100
    9dc0:	sub	r3, r3, #1
    9dc4:	lsr	r3, r3, #8
    9dc8:	add	r4, r3, #1
    9dcc:	lsl	r8, r4, #8
    9dd0:	cmp	r5, r8
    9dd4:	ble	9dac <ReadInt32Data.part.7+0x6ac>
    9dd8:	ldr	r3, [sp]
    9ddc:	sub	r5, r5, r8
    9de0:	mov	r0, r6
    9de4:	mov	r2, r5
    9de8:	mov	r1, fp
    9dec:	ldr	r3, [r3]
    9df0:	bl	1520 <fread@plt>
    9df4:	cmp	r5, #0
    9df8:	add	r0, r7, r0
    9dfc:	ble	9dac <ReadInt32Data.part.7+0x6ac>
    9e00:	ldr	r3, [sp, #4]
    9e04:	add	r5, r5, r8
    9e08:	add	r4, r3, r4, lsl #10
    9e0c:	add	r3, r3, r5, lsl #2
    9e10:	ldrb	r2, [sl, #1]!
    9e14:	str	r2, [r4], #4
    9e18:	cmp	r4, r3
    9e1c:	bne	9e10 <ReadInt32Data.part.7+0x710>
    9e20:	b	9dac <ReadInt32Data.part.7+0x6ac>
    9e24:	cmp	r5, #256	; 0x100
    9e28:	ble	a228 <ReadInt32Data.part.7+0xb28>
    9e2c:	ldr	r1, [sp, #4]
    9e30:	add	r6, sp, #24
    9e34:	sub	r2, r5, #256	; 0x100
    9e38:	add	r4, r6, #508	; 0x1fc
    9e3c:	mov	sl, r5
    9e40:	add	r4, r4, #2
    9e44:	mov	r8, r7
    9e48:	mov	r5, r2
    9e4c:	sub	r9, r1, #4
    9e50:	mov	r2, #256	; 0x100
    9e54:	mov	r1, fp
    9e58:	mov	r0, r6
    9e5c:	bl	1520 <fread@plt>
    9e60:	add	r7, r7, r0
    9e64:	sub	r0, r6, #2
    9e68:	mov	ip, r7
    9e6c:	mov	r3, r0
    9e70:	mov	r2, r9
    9e74:	ldrsh	r1, [r3, #2]!
    9e78:	cmp	r4, r3
    9e7c:	str	r1, [r2, #4]!
    9e80:	bne	9e74 <ReadInt32Data.part.7+0x774>
    9e84:	add	r8, r8, #256	; 0x100
    9e88:	add	r9, r9, #1024	; 0x400
    9e8c:	cmp	r8, r5
    9e90:	bge	a90c <ReadInt32Data.part.7+0x120c>
    9e94:	ldr	r3, [sp]
    9e98:	ldr	r3, [r3]
    9e9c:	b	9e50 <ReadInt32Data.part.7+0x750>
    9ea0:	cmp	r5, #256	; 0x100
    9ea4:	ble	a2a8 <ReadInt32Data.part.7+0xba8>
    9ea8:	ldr	r1, [sp, #4]
    9eac:	add	r6, sp, #24
    9eb0:	sub	r2, r5, #256	; 0x100
    9eb4:	mov	sl, r5
    9eb8:	add	r4, r6, #1020	; 0x3fc
    9ebc:	mov	r8, r7
    9ec0:	mov	r5, r2
    9ec4:	sub	r9, r1, #4
    9ec8:	mov	r2, #256	; 0x100
    9ecc:	mov	r1, fp
    9ed0:	mov	r0, r6
    9ed4:	bl	1520 <fread@plt>
    9ed8:	add	r7, r7, r0
    9edc:	sub	r0, r6, #4
    9ee0:	mov	ip, r7
    9ee4:	mov	r3, r0
    9ee8:	mov	r2, r9
    9eec:	ldr	r1, [r3, #4]!
    9ef0:	cmp	r3, r4
    9ef4:	str	r1, [r2, #4]!
    9ef8:	bne	9eec <ReadInt32Data.part.7+0x7ec>
    9efc:	add	r8, r8, #256	; 0x100
    9f00:	add	r9, r9, #1024	; 0x400
    9f04:	cmp	r8, r5
    9f08:	bge	a81c <ReadInt32Data.part.7+0x111c>
    9f0c:	ldr	r3, [sp]
    9f10:	ldr	r3, [r3]
    9f14:	b	9ec8 <ReadInt32Data.part.7+0x7c8>
    9f18:	cmp	r5, #256	; 0x100
    9f1c:	ble	a268 <ReadInt32Data.part.7+0xb68>
    9f20:	ldr	r1, [sp, #4]
    9f24:	add	r6, sp, #24
    9f28:	sub	r2, r5, #256	; 0x100
    9f2c:	add	r4, r6, #508	; 0x1fc
    9f30:	mov	sl, r5
    9f34:	add	r4, r4, #2
    9f38:	mov	r8, r7
    9f3c:	mov	r5, r2
    9f40:	sub	r9, r1, #4
    9f44:	mov	r2, #256	; 0x100
    9f48:	mov	r1, fp
    9f4c:	mov	r0, r6
    9f50:	bl	1520 <fread@plt>
    9f54:	add	r7, r7, r0
    9f58:	sub	r0, r6, #2
    9f5c:	mov	ip, r7
    9f60:	mov	r3, r0
    9f64:	mov	r2, r9
    9f68:	ldrh	r1, [r3, #2]!
    9f6c:	cmp	r4, r3
    9f70:	str	r1, [r2, #4]!
    9f74:	bne	9f68 <ReadInt32Data.part.7+0x868>
    9f78:	add	r8, r8, #256	; 0x100
    9f7c:	add	r9, r9, #1024	; 0x400
    9f80:	cmp	r8, r5
    9f84:	bge	aa7c <ReadInt32Data.part.7+0x137c>
    9f88:	ldr	r3, [sp]
    9f8c:	ldr	r3, [r3]
    9f90:	b	9f44 <ReadInt32Data.part.7+0x844>
    9f94:	cmp	r5, #256	; 0x100
    9f98:	ble	a1e8 <ReadInt32Data.part.7+0xae8>
    9f9c:	ldr	r1, [sp, #4]
    9fa0:	add	r6, sp, #24
    9fa4:	sub	r2, r5, #256	; 0x100
    9fa8:	mov	sl, r5
    9fac:	add	r4, r6, #1020	; 0x3fc
    9fb0:	mov	r8, r7
    9fb4:	mov	r5, r2
    9fb8:	sub	r9, r1, #4
    9fbc:	mov	r2, #256	; 0x100
    9fc0:	mov	r1, fp
    9fc4:	mov	r0, r6
    9fc8:	bl	1520 <fread@plt>
    9fcc:	add	r7, r7, r0
    9fd0:	sub	r0, r6, #4
    9fd4:	mov	ip, r7
    9fd8:	mov	r3, r0
    9fdc:	mov	r2, r9
    9fe0:	ldr	r1, [r3, #4]!
    9fe4:	cmp	r3, r4
    9fe8:	str	r1, [r2, #4]!
    9fec:	bne	9fe0 <ReadInt32Data.part.7+0x8e0>
    9ff0:	add	r8, r8, #256	; 0x100
    9ff4:	add	r9, r9, #1024	; 0x400
    9ff8:	cmp	r8, r5
    9ffc:	bge	a894 <ReadInt32Data.part.7+0x1194>
    a000:	ldr	r3, [sp]
    a004:	ldr	r3, [r3]
    a008:	b	9fbc <ReadInt32Data.part.7+0x8bc>
    a00c:	cmp	r5, #256	; 0x100
    a010:	ble	a1a4 <ReadInt32Data.part.7+0xaa4>
    a014:	ldr	r1, [sp, #4]
    a018:	sub	r2, r5, #256	; 0x100
    a01c:	add	r4, sp, #2064	; 0x810
    a020:	mov	sl, r5
    a024:	mov	r8, r7
    a028:	add	r6, sp, #24
    a02c:	add	r4, r4, #8
    a030:	mov	r5, r2
    a034:	sub	r9, r1, #4
    a038:	mov	r2, #256	; 0x100
    a03c:	mov	r1, fp
    a040:	mov	r0, r6
    a044:	bl	1520 <fread@plt>
    a048:	add	r7, r7, r0
    a04c:	mov	r2, r9
    a050:	mov	r0, r6
    a054:	mov	r1, r7
    a058:	mov	r3, r6
    a05c:	vldmia	r3!, {d7}
    a060:	vcvt.s32.f64	s14, d7
    a064:	cmp	r3, r4
    a068:	vmov	ip, s14
    a06c:	str	ip, [r2, #4]!
    a070:	bne	a05c <ReadInt32Data.part.7+0x95c>
    a074:	add	r8, r8, #256	; 0x100
    a078:	add	r9, r9, #1024	; 0x400
    a07c:	cmp	r8, r5
    a080:	bge	aa00 <ReadInt32Data.part.7+0x1300>
    a084:	ldr	r3, [sp]
    a088:	ldr	r3, [r3]
    a08c:	b	a038 <ReadInt32Data.part.7+0x938>
    a090:	cmp	r5, #256	; 0x100
    a094:	ble	a160 <ReadInt32Data.part.7+0xa60>
    a098:	ldr	r1, [sp, #4]
    a09c:	sub	r2, r5, #256	; 0x100
    a0a0:	add	r4, sp, #1040	; 0x410
    a0a4:	mov	sl, r5
    a0a8:	mov	r8, r7
    a0ac:	add	r6, sp, #24
    a0b0:	add	r4, r4, #8
    a0b4:	mov	r5, r2
    a0b8:	sub	r9, r1, #4
    a0bc:	mov	r2, #256	; 0x100
    a0c0:	mov	r1, fp
    a0c4:	mov	r0, r6
    a0c8:	bl	1520 <fread@plt>
    a0cc:	add	r7, r7, r0
    a0d0:	mov	r2, r9
    a0d4:	mov	r0, r6
    a0d8:	mov	r1, r7
    a0dc:	mov	r3, r6
    a0e0:	vldmia	r3!, {s15}
    a0e4:	vcvt.s32.f32	s15, s15
    a0e8:	cmp	r3, r4
    a0ec:	vmov	ip, s15
    a0f0:	str	ip, [r2, #4]!
    a0f4:	bne	a0e0 <ReadInt32Data.part.7+0x9e0>
    a0f8:	add	r8, r8, #256	; 0x100
    a0fc:	add	r9, r9, #1024	; 0x400
    a100:	cmp	r8, r5
    a104:	bge	a984 <ReadInt32Data.part.7+0x1284>
    a108:	ldr	r3, [sp]
    a10c:	ldr	r3, [r3]
    a110:	b	a0bc <ReadInt32Data.part.7+0x9bc>
    a114:	ldr	r3, [sp]
    a118:	sub	r5, r5, r8
    a11c:	mov	r0, r6
    a120:	mov	r2, r5
    a124:	mov	r1, fp
    a128:	ldr	r3, [r3]
    a12c:	bl	1520 <fread@plt>
    a130:	cmp	r5, #0
    a134:	add	r0, r7, r0
    a138:	ble	9dac <ReadInt32Data.part.7+0x6ac>
    a13c:	ldr	r3, [sp, #4]
    a140:	add	r5, r8, r5
    a144:	add	r4, r3, r4, lsl #10
    a148:	add	r3, r3, r5, lsl #2
    a14c:	ldrsb	r2, [sl, #1]!
    a150:	str	r2, [r4], #4
    a154:	cmp	r3, r4
    a158:	bne	a14c <ReadInt32Data.part.7+0xa4c>
    a15c:	b	9dac <ReadInt32Data.part.7+0x6ac>
    a160:	add	r4, sp, #24
    a164:	mov	r2, r5
    a168:	mov	r0, r4
    a16c:	mov	r1, fp
    a170:	bl	1520 <fread@plt>
    a174:	cmp	r5, #0
    a178:	str	r0, [sp, #8]
    a17c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a180:	ldr	r3, [sp, #4]
    a184:	mov	r2, r4
    a188:	add	r5, r3, r5, lsl #2
    a18c:	vldmia	r2!, {s15}
    a190:	vcvt.s32.f32	s15, s15
    a194:	vstmia	r3!, {s15}
    a198:	cmp	r3, r5
    a19c:	bne	a18c <ReadInt32Data.part.7+0xa8c>
    a1a0:	b	9d60 <ReadInt32Data.part.7+0x660>
    a1a4:	add	r4, sp, #24
    a1a8:	mov	r2, r5
    a1ac:	mov	r0, r4
    a1b0:	mov	r1, fp
    a1b4:	bl	1520 <fread@plt>
    a1b8:	cmp	r5, #0
    a1bc:	str	r0, [sp, #8]
    a1c0:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a1c4:	ldr	r3, [sp, #4]
    a1c8:	mov	r2, r4
    a1cc:	add	r5, r3, r5, lsl #2
    a1d0:	vldmia	r2!, {d7}
    a1d4:	vcvt.s32.f64	s14, d7
    a1d8:	vstmia	r3!, {s14}
    a1dc:	cmp	r3, r5
    a1e0:	bne	a1d0 <ReadInt32Data.part.7+0xad0>
    a1e4:	b	9d60 <ReadInt32Data.part.7+0x660>
    a1e8:	add	r4, sp, #24
    a1ec:	mov	r2, r5
    a1f0:	mov	r0, r4
    a1f4:	mov	r1, fp
    a1f8:	bl	1520 <fread@plt>
    a1fc:	cmp	r5, #0
    a200:	str	r0, [sp, #8]
    a204:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a208:	ldr	r3, [sp, #4]
    a20c:	sub	r2, r4, #4
    a210:	add	r5, r3, r5, lsl #2
    a214:	ldr	r1, [r2, #4]!
    a218:	str	r1, [r3], #4
    a21c:	cmp	r3, r5
    a220:	bne	a214 <ReadInt32Data.part.7+0xb14>
    a224:	b	9d60 <ReadInt32Data.part.7+0x660>
    a228:	add	r4, sp, #24
    a22c:	mov	r2, r5
    a230:	mov	r0, r4
    a234:	mov	r1, fp
    a238:	bl	1520 <fread@plt>
    a23c:	cmp	r5, #0
    a240:	str	r0, [sp, #8]
    a244:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a248:	ldr	r3, [sp, #4]
    a24c:	sub	r2, r4, #2
    a250:	add	r5, r3, r5, lsl #2
    a254:	ldrsh	r1, [r2, #2]!
    a258:	str	r1, [r3], #4
    a25c:	cmp	r5, r3
    a260:	bne	a254 <ReadInt32Data.part.7+0xb54>
    a264:	b	9d60 <ReadInt32Data.part.7+0x660>
    a268:	add	r4, sp, #24
    a26c:	mov	r2, r5
    a270:	mov	r0, r4
    a274:	mov	r1, fp
    a278:	bl	1520 <fread@plt>
    a27c:	cmp	r5, #0
    a280:	str	r0, [sp, #8]
    a284:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a288:	ldr	r3, [sp, #4]
    a28c:	sub	r2, r4, #2
    a290:	add	r5, r3, r5, lsl #2
    a294:	ldrh	r1, [r2, #2]!
    a298:	str	r1, [r3], #4
    a29c:	cmp	r5, r3
    a2a0:	bne	a294 <ReadInt32Data.part.7+0xb94>
    a2a4:	b	9d60 <ReadInt32Data.part.7+0x660>
    a2a8:	add	r4, sp, #24
    a2ac:	mov	r2, r5
    a2b0:	mov	r0, r4
    a2b4:	mov	r1, fp
    a2b8:	bl	1520 <fread@plt>
    a2bc:	cmp	r5, #0
    a2c0:	str	r0, [sp, #8]
    a2c4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a2c8:	ldr	r3, [sp, #4]
    a2cc:	sub	r2, r4, #4
    a2d0:	add	r5, r3, r5, lsl #2
    a2d4:	ldr	r1, [r2, #4]!
    a2d8:	str	r1, [r3], #4
    a2dc:	cmp	r5, r3
    a2e0:	bne	a2d4 <ReadInt32Data.part.7+0xbd4>
    a2e4:	b	9d60 <ReadInt32Data.part.7+0x660>
    a2e8:	add	r4, sp, #24
    a2ec:	mov	r2, r5
    a2f0:	mov	r0, r4
    a2f4:	mov	r1, fp
    a2f8:	bl	1520 <fread@plt>
    a2fc:	cmp	r5, #0
    a300:	str	r0, [sp, #8]
    a304:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a308:	ldr	r6, [sp, #4]
    a30c:	add	r5, r6, r5, lsl #2
    a310:	mov	r0, r4
    a314:	add	r4, r4, #2
    a318:	bl	1950 <Mat_uint16Swap>
    a31c:	str	r0, [r6], #4
    a320:	cmp	r5, r6
    a324:	bne	a310 <ReadInt32Data.part.7+0xc10>
    a328:	b	9d60 <ReadInt32Data.part.7+0x660>
    a32c:	add	r4, sp, #24
    a330:	mov	r2, r5
    a334:	mov	r0, r4
    a338:	mov	r1, fp
    a33c:	bl	1520 <fread@plt>
    a340:	cmp	r5, #0
    a344:	str	r0, [sp, #8]
    a348:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a34c:	ldr	r6, [sp, #4]
    a350:	add	r5, r6, r5, lsl #2
    a354:	mov	r0, r4
    a358:	add	r4, r4, #8
    a35c:	bl	19a4 <Mat_doubleSwap>
    a360:	vcvt.s32.f64	s0, d0
    a364:	vstmia	r6!, {s0}
    a368:	cmp	r6, r5
    a36c:	bne	a354 <ReadInt32Data.part.7+0xc54>
    a370:	b	9d60 <ReadInt32Data.part.7+0x660>
    a374:	add	r4, sp, #24
    a378:	mov	r2, r5
    a37c:	mov	r0, r4
    a380:	mov	r1, fp
    a384:	bl	1520 <fread@plt>
    a388:	cmp	r5, #0
    a38c:	str	r0, [sp, #8]
    a390:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a394:	ldr	r6, [sp, #4]
    a398:	add	r5, r6, r5, lsl #2
    a39c:	mov	r0, r4
    a3a0:	add	r4, r4, #4
    a3a4:	bl	18f8 <Mat_uint32Swap>
    a3a8:	str	r0, [r6], #4
    a3ac:	cmp	r6, r5
    a3b0:	bne	a39c <ReadInt32Data.part.7+0xc9c>
    a3b4:	b	9d60 <ReadInt32Data.part.7+0x660>
    a3b8:	add	r4, sp, #24
    a3bc:	mov	r2, r5
    a3c0:	mov	r0, r4
    a3c4:	mov	r1, fp
    a3c8:	bl	1520 <fread@plt>
    a3cc:	cmp	r5, #0
    a3d0:	str	r0, [sp, #8]
    a3d4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a3d8:	ldr	r6, [sp, #4]
    a3dc:	add	r5, r6, r5, lsl #2
    a3e0:	mov	r0, r4
    a3e4:	add	r4, r4, #4
    a3e8:	bl	1974 <Mat_floatSwap>
    a3ec:	vcvt.s32.f32	s0, s0
    a3f0:	vstmia	r6!, {s0}
    a3f4:	cmp	r6, r5
    a3f8:	bne	a3e0 <ReadInt32Data.part.7+0xce0>
    a3fc:	b	9d60 <ReadInt32Data.part.7+0x660>
    a400:	add	r4, sp, #24
    a404:	mov	r2, r5
    a408:	mov	r0, r4
    a40c:	mov	r1, fp
    a410:	bl	1520 <fread@plt>
    a414:	cmp	r5, #0
    a418:	str	r0, [sp, #8]
    a41c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a420:	ldr	r6, [sp, #4]
    a424:	add	r5, r6, r5, lsl #2
    a428:	mov	r0, r4
    a42c:	add	r4, r4, #4
    a430:	bl	18c4 <Mat_int32Swap>
    a434:	str	r0, [r6], #4
    a438:	cmp	r5, r6
    a43c:	bne	a428 <ReadInt32Data.part.7+0xd28>
    a440:	b	9d60 <ReadInt32Data.part.7+0x660>
    a444:	add	r4, sp, #24
    a448:	mov	r2, r5
    a44c:	mov	r0, r4
    a450:	mov	r1, fp
    a454:	bl	1520 <fread@plt>
    a458:	cmp	r5, #0
    a45c:	str	r0, [sp, #8]
    a460:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a464:	ldr	r6, [sp, #4]
    a468:	add	r5, r6, r5, lsl #2
    a46c:	mov	r0, r4
    a470:	add	r4, r4, #2
    a474:	bl	192c <Mat_int16Swap>
    a478:	str	r0, [r6], #4
    a47c:	cmp	r5, r6
    a480:	bne	a46c <ReadInt32Data.part.7+0xd6c>
    a484:	b	9d60 <ReadInt32Data.part.7+0x660>
    a488:	ldr	r5, [sp, #20]
    a48c:	sub	r3, r5, #256	; 0x100
    a490:	sub	r3, r3, #1
    a494:	lsr	r3, r3, #8
    a498:	add	r4, r3, #1
    a49c:	lsl	r8, r4, #8
    a4a0:	cmp	r5, r8
    a4a4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a4a8:	ldr	r3, [sp]
    a4ac:	sub	r5, r5, r8
    a4b0:	mov	r0, r6
    a4b4:	mov	r2, r5
    a4b8:	mov	r1, fp
    a4bc:	ldr	r3, [r3]
    a4c0:	bl	1520 <fread@plt>
    a4c4:	add	r3, r7, r0
    a4c8:	cmp	r5, #0
    a4cc:	str	r3, [sp, #8]
    a4d0:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a4d4:	ldr	r3, [sp, #4]
    a4d8:	add	r5, r5, r8
    a4dc:	ldr	r6, [sp, #12]
    a4e0:	add	r4, r3, r4, lsl #10
    a4e4:	add	r5, r3, r5, lsl #2
    a4e8:	mov	r0, r6
    a4ec:	add	r6, r6, #4
    a4f0:	bl	18f8 <Mat_uint32Swap>
    a4f4:	str	r0, [r4], #4
    a4f8:	cmp	r5, r4
    a4fc:	bne	a4e8 <ReadInt32Data.part.7+0xde8>
    a500:	b	9d60 <ReadInt32Data.part.7+0x660>
    a504:	ldr	r5, [sp, #20]
    a508:	sub	r3, r5, #256	; 0x100
    a50c:	sub	r3, r3, #1
    a510:	lsr	r3, r3, #8
    a514:	add	r4, r3, #1
    a518:	lsl	r8, r4, #8
    a51c:	cmp	r5, r8
    a520:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a524:	ldr	r3, [sp]
    a528:	sub	r5, r5, r8
    a52c:	mov	r0, r6
    a530:	mov	r2, r5
    a534:	mov	r1, fp
    a538:	ldr	r3, [r3]
    a53c:	bl	1520 <fread@plt>
    a540:	add	r3, r7, r0
    a544:	cmp	r5, #0
    a548:	str	r3, [sp, #8]
    a54c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a550:	ldr	r3, [sp, #4]
    a554:	add	r5, r5, r8
    a558:	ldr	r6, [sp, #16]
    a55c:	add	r4, r3, r4, lsl #10
    a560:	add	r5, r3, r5, lsl #2
    a564:	mov	r0, r6
    a568:	add	r6, r6, #2
    a56c:	bl	1950 <Mat_uint16Swap>
    a570:	str	r0, [r4], #4
    a574:	cmp	r5, r4
    a578:	bne	a564 <ReadInt32Data.part.7+0xe64>
    a57c:	b	9d60 <ReadInt32Data.part.7+0x660>
    a580:	add	r4, sp, #24
    a584:	mov	r2, r5
    a588:	mov	r0, r4
    a58c:	mov	r1, fp
    a590:	bl	1520 <fread@plt>
    a594:	cmp	r5, #0
    a598:	ble	9dac <ReadInt32Data.part.7+0x6ac>
    a59c:	ldr	r3, [sp, #4]
    a5a0:	sub	r2, r4, #1
    a5a4:	add	r5, r3, r5, lsl #2
    a5a8:	ldrsb	r1, [r2, #1]!
    a5ac:	str	r1, [r3], #4
    a5b0:	cmp	r5, r3
    a5b4:	bne	a5a8 <ReadInt32Data.part.7+0xea8>
    a5b8:	b	9dac <ReadInt32Data.part.7+0x6ac>
    a5bc:	ldr	r5, [sp, #20]
    a5c0:	sub	r3, r5, #256	; 0x100
    a5c4:	sub	r3, r3, #1
    a5c8:	lsr	r3, r3, #8
    a5cc:	add	r4, r3, #1
    a5d0:	lsl	r8, r4, #8
    a5d4:	cmp	r5, r8
    a5d8:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a5dc:	ldr	r3, [sp]
    a5e0:	sub	r5, r5, r8
    a5e4:	mov	r0, r6
    a5e8:	mov	r2, r5
    a5ec:	mov	r1, fp
    a5f0:	ldr	r3, [r3]
    a5f4:	bl	1520 <fread@plt>
    a5f8:	add	r3, r7, r0
    a5fc:	cmp	r5, #0
    a600:	str	r3, [sp, #8]
    a604:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a608:	ldr	r3, [sp, #4]
    a60c:	add	r5, r5, r8
    a610:	ldr	r6, [sp, #16]
    a614:	add	r4, r3, r4, lsl #10
    a618:	add	r5, r3, r5, lsl #2
    a61c:	mov	r0, r6
    a620:	add	r6, r6, #4
    a624:	bl	18c4 <Mat_int32Swap>
    a628:	str	r0, [r4], #4
    a62c:	cmp	r5, r4
    a630:	bne	a61c <ReadInt32Data.part.7+0xf1c>
    a634:	b	9d60 <ReadInt32Data.part.7+0x660>
    a638:	add	r4, sp, #24
    a63c:	mov	r2, r5
    a640:	mov	r0, r4
    a644:	mov	r1, fp
    a648:	bl	1520 <fread@plt>
    a64c:	cmp	r5, #0
    a650:	ble	9dac <ReadInt32Data.part.7+0x6ac>
    a654:	ldr	r3, [sp, #4]
    a658:	sub	r2, r4, #1
    a65c:	add	r5, r3, r5, lsl #2
    a660:	ldrb	r1, [r2, #1]!
    a664:	str	r1, [r3], #4
    a668:	cmp	r5, r3
    a66c:	bne	a660 <ReadInt32Data.part.7+0xf60>
    a670:	b	9dac <ReadInt32Data.part.7+0x6ac>
    a674:	ldr	r5, [sp, #20]
    a678:	sub	r3, r5, #256	; 0x100
    a67c:	sub	r3, r3, #1
    a680:	lsr	r3, r3, #8
    a684:	add	r4, r3, #1
    a688:	lsl	r8, r4, #8
    a68c:	cmp	r5, r8
    a690:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a694:	ldr	r3, [sp]
    a698:	sub	r5, r5, r8
    a69c:	mov	r0, r6
    a6a0:	mov	r2, r5
    a6a4:	mov	r1, fp
    a6a8:	ldr	r3, [r3]
    a6ac:	bl	1520 <fread@plt>
    a6b0:	add	r3, r7, r0
    a6b4:	cmp	r5, #0
    a6b8:	str	r3, [sp, #8]
    a6bc:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a6c0:	ldr	r3, [sp, #4]
    a6c4:	add	r5, r5, r8
    a6c8:	ldr	r6, [sp, #16]
    a6cc:	add	r4, r3, r4, lsl #10
    a6d0:	add	r5, r3, r5, lsl #2
    a6d4:	mov	r0, r6
    a6d8:	add	r6, r6, #4
    a6dc:	bl	1974 <Mat_floatSwap>
    a6e0:	vcvt.s32.f32	s0, s0
    a6e4:	vstmia	r4!, {s0}
    a6e8:	cmp	r4, r5
    a6ec:	bne	a6d4 <ReadInt32Data.part.7+0xfd4>
    a6f0:	b	9d60 <ReadInt32Data.part.7+0x660>
    a6f4:	ldr	r5, [sp, #20]
    a6f8:	sub	r3, r5, #256	; 0x100
    a6fc:	sub	r3, r3, #1
    a700:	lsr	r3, r3, #8
    a704:	add	r4, r3, #1
    a708:	lsl	r8, r4, #8
    a70c:	cmp	r5, r8
    a710:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a714:	ldr	r3, [sp]
    a718:	sub	r5, r5, r8
    a71c:	mov	r0, r6
    a720:	mov	r2, r5
    a724:	mov	r1, fp
    a728:	ldr	r3, [r3]
    a72c:	bl	1520 <fread@plt>
    a730:	add	r3, r7, r0
    a734:	cmp	r5, #0
    a738:	str	r3, [sp, #8]
    a73c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a740:	ldr	r3, [sp, #4]
    a744:	add	r5, r5, r8
    a748:	ldr	r6, [sp, #16]
    a74c:	add	r4, r3, r4, lsl #10
    a750:	add	r5, r3, r5, lsl #2
    a754:	mov	r0, r6
    a758:	add	r6, r6, #8
    a75c:	bl	19a4 <Mat_doubleSwap>
    a760:	vcvt.s32.f64	s0, d0
    a764:	vstmia	r4!, {s0}
    a768:	cmp	r4, r5
    a76c:	bne	a754 <ReadInt32Data.part.7+0x1054>
    a770:	b	9d60 <ReadInt32Data.part.7+0x660>
    a774:	ldr	r3, [sp]
    a778:	ldr	r7, [r3, #20]
    a77c:	ldr	r3, [r3]
    a780:	cmp	r7, #0
    a784:	beq	abe8 <ReadInt32Data.part.7+0x14e8>
    a788:	cmp	r5, #256	; 0x100
    a78c:	ble	ae74 <ReadInt32Data.part.7+0x1774>
    a790:	sub	r2, r5, #256	; 0x100
    a794:	mov	r7, #0
    a798:	add	r4, sp, #2064	; 0x810
    a79c:	mov	r8, r7
    a7a0:	str	r2, [sp, #16]
    a7a4:	add	r6, sp, #24
    a7a8:	add	r4, r4, #8
    a7ac:	ldr	r2, [sp, #4]
    a7b0:	sub	r2, r2, #4
    a7b4:	str	r2, [sp, #12]
    a7b8:	mov	r2, #256	; 0x100
    a7bc:	mov	r1, fp
    a7c0:	mov	r0, r6
    a7c4:	mov	r9, r6
    a7c8:	bl	1520 <fread@plt>
    a7cc:	ldr	sl, [sp, #12]
    a7d0:	add	r8, r8, r0
    a7d4:	str	r8, [sp, #8]
    a7d8:	str	r6, [sp, #20]
    a7dc:	mov	r0, r9
    a7e0:	add	r9, r9, #8
    a7e4:	bl	17ec <Mat_int64Swap>
    a7e8:	cmp	r4, r9
    a7ec:	str	r0, [sl, #4]!
    a7f0:	bne	a7dc <ReadInt32Data.part.7+0x10dc>
    a7f4:	ldr	r3, [sp, #12]
    a7f8:	add	r7, r7, #256	; 0x100
    a7fc:	add	r3, r3, #1024	; 0x400
    a800:	str	r3, [sp, #12]
    a804:	ldr	r3, [sp, #16]
    a808:	cmp	r3, r7
    a80c:	ble	accc <ReadInt32Data.part.7+0x15cc>
    a810:	ldr	r3, [sp]
    a814:	ldr	r3, [r3]
    a818:	b	a7b8 <ReadInt32Data.part.7+0x10b8>
    a81c:	mov	r5, sl
    a820:	mov	sl, r0
    a824:	str	ip, [sp, #8]
    a828:	sub	r3, r5, #256	; 0x100
    a82c:	sub	r3, r3, #1
    a830:	lsr	r3, r3, #8
    a834:	add	r4, r3, #1
    a838:	lsl	r8, r4, #8
    a83c:	cmp	r5, r8
    a840:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a844:	ldr	r3, [sp]
    a848:	sub	r5, r5, r8
    a84c:	mov	r0, r6
    a850:	mov	r2, r5
    a854:	mov	r1, fp
    a858:	ldr	r3, [r3]
    a85c:	bl	1520 <fread@plt>
    a860:	add	r3, r7, r0
    a864:	cmp	r5, #0
    a868:	str	r3, [sp, #8]
    a86c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a870:	ldr	r3, [sp, #4]
    a874:	add	r5, r5, r8
    a878:	add	r4, r3, r4, lsl #10
    a87c:	add	r3, r3, r5, lsl #2
    a880:	ldr	r2, [sl, #4]!
    a884:	str	r2, [r4], #4
    a888:	cmp	r3, r4
    a88c:	bne	a880 <ReadInt32Data.part.7+0x1180>
    a890:	b	9d60 <ReadInt32Data.part.7+0x660>
    a894:	mov	r5, sl
    a898:	mov	sl, r0
    a89c:	str	ip, [sp, #8]
    a8a0:	sub	r3, r5, #256	; 0x100
    a8a4:	sub	r3, r3, #1
    a8a8:	lsr	r3, r3, #8
    a8ac:	add	r4, r3, #1
    a8b0:	lsl	r8, r4, #8
    a8b4:	cmp	r5, r8
    a8b8:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a8bc:	ldr	r3, [sp]
    a8c0:	sub	r5, r5, r8
    a8c4:	mov	r0, r6
    a8c8:	mov	r2, r5
    a8cc:	mov	r1, fp
    a8d0:	ldr	r3, [r3]
    a8d4:	bl	1520 <fread@plt>
    a8d8:	add	r3, r7, r0
    a8dc:	cmp	r5, #0
    a8e0:	str	r3, [sp, #8]
    a8e4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a8e8:	ldr	r3, [sp, #4]
    a8ec:	add	r5, r5, r8
    a8f0:	add	r4, r3, r4, lsl #10
    a8f4:	add	r3, r3, r5, lsl #2
    a8f8:	ldr	r2, [sl, #4]!
    a8fc:	str	r2, [r4], #4
    a900:	cmp	r3, r4
    a904:	bne	a8f8 <ReadInt32Data.part.7+0x11f8>
    a908:	b	9d60 <ReadInt32Data.part.7+0x660>
    a90c:	mov	r5, sl
    a910:	mov	sl, r0
    a914:	str	ip, [sp, #8]
    a918:	sub	r3, r5, #256	; 0x100
    a91c:	sub	r3, r3, #1
    a920:	lsr	r3, r3, #8
    a924:	add	r4, r3, #1
    a928:	lsl	r8, r4, #8
    a92c:	cmp	r5, r8
    a930:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a934:	ldr	r3, [sp]
    a938:	sub	r5, r5, r8
    a93c:	mov	r0, r6
    a940:	mov	r2, r5
    a944:	mov	r1, fp
    a948:	ldr	r3, [r3]
    a94c:	bl	1520 <fread@plt>
    a950:	add	r3, r7, r0
    a954:	cmp	r5, #0
    a958:	str	r3, [sp, #8]
    a95c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a960:	ldr	r3, [sp, #4]
    a964:	add	r5, r5, r8
    a968:	add	r4, r3, r4, lsl #10
    a96c:	add	r3, r3, r5, lsl #2
    a970:	ldrsh	r2, [sl, #2]!
    a974:	str	r2, [r4], #4
    a978:	cmp	r3, r4
    a97c:	bne	a970 <ReadInt32Data.part.7+0x1270>
    a980:	b	9d60 <ReadInt32Data.part.7+0x660>
    a984:	mov	r5, sl
    a988:	mov	sl, r0
    a98c:	str	r1, [sp, #8]
    a990:	sub	r3, r5, #256	; 0x100
    a994:	sub	r3, r3, #1
    a998:	lsr	r3, r3, #8
    a99c:	add	r4, r3, #1
    a9a0:	lsl	r8, r4, #8
    a9a4:	cmp	r5, r8
    a9a8:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a9ac:	ldr	r3, [sp]
    a9b0:	sub	r5, r5, r8
    a9b4:	mov	r0, r6
    a9b8:	mov	r2, r5
    a9bc:	mov	r1, fp
    a9c0:	ldr	r3, [r3]
    a9c4:	bl	1520 <fread@plt>
    a9c8:	add	r3, r7, r0
    a9cc:	cmp	r5, #0
    a9d0:	str	r3, [sp, #8]
    a9d4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    a9d8:	ldr	r3, [sp, #4]
    a9dc:	add	r5, r5, r8
    a9e0:	add	r4, r3, r4, lsl #10
    a9e4:	add	r3, r3, r5, lsl #2
    a9e8:	vldmia	sl!, {s15}
    a9ec:	vcvt.s32.f32	s15, s15
    a9f0:	vstmia	r4!, {s15}
    a9f4:	cmp	r4, r3
    a9f8:	bne	a9e8 <ReadInt32Data.part.7+0x12e8>
    a9fc:	b	9d60 <ReadInt32Data.part.7+0x660>
    aa00:	mov	r5, sl
    aa04:	mov	sl, r0
    aa08:	str	r1, [sp, #8]
    aa0c:	sub	r3, r5, #256	; 0x100
    aa10:	sub	r3, r3, #1
    aa14:	lsr	r3, r3, #8
    aa18:	add	r4, r3, #1
    aa1c:	lsl	r8, r4, #8
    aa20:	cmp	r5, r8
    aa24:	ble	9d60 <ReadInt32Data.part.7+0x660>
    aa28:	ldr	r3, [sp]
    aa2c:	sub	r5, r5, r8
    aa30:	mov	r0, r6
    aa34:	mov	r2, r5
    aa38:	mov	r1, fp
    aa3c:	ldr	r3, [r3]
    aa40:	bl	1520 <fread@plt>
    aa44:	add	r3, r7, r0
    aa48:	cmp	r5, #0
    aa4c:	str	r3, [sp, #8]
    aa50:	ble	9d60 <ReadInt32Data.part.7+0x660>
    aa54:	ldr	r3, [sp, #4]
    aa58:	add	r5, r5, r8
    aa5c:	add	r4, r3, r4, lsl #10
    aa60:	add	r3, r3, r5, lsl #2
    aa64:	vldmia	sl!, {d7}
    aa68:	vcvt.s32.f64	s14, d7
    aa6c:	vstmia	r4!, {s14}
    aa70:	cmp	r4, r3
    aa74:	bne	aa64 <ReadInt32Data.part.7+0x1364>
    aa78:	b	9d60 <ReadInt32Data.part.7+0x660>
    aa7c:	mov	r5, sl
    aa80:	mov	sl, r0
    aa84:	str	ip, [sp, #8]
    aa88:	sub	r3, r5, #256	; 0x100
    aa8c:	sub	r3, r3, #1
    aa90:	lsr	r3, r3, #8
    aa94:	add	r4, r3, #1
    aa98:	lsl	r8, r4, #8
    aa9c:	cmp	r5, r8
    aaa0:	ble	9d60 <ReadInt32Data.part.7+0x660>
    aaa4:	ldr	r3, [sp]
    aaa8:	sub	r5, r5, r8
    aaac:	mov	r0, r6
    aab0:	mov	r2, r5
    aab4:	mov	r1, fp
    aab8:	ldr	r3, [r3]
    aabc:	bl	1520 <fread@plt>
    aac0:	add	r3, r7, r0
    aac4:	cmp	r5, #0
    aac8:	str	r3, [sp, #8]
    aacc:	ble	9d60 <ReadInt32Data.part.7+0x660>
    aad0:	ldr	r3, [sp, #4]
    aad4:	add	r5, r5, r8
    aad8:	add	r4, r3, r4, lsl #10
    aadc:	add	r3, r3, r5, lsl #2
    aae0:	ldrh	r2, [sl, #2]!
    aae4:	str	r2, [r4], #4
    aae8:	cmp	r3, r4
    aaec:	bne	aae0 <ReadInt32Data.part.7+0x13e0>
    aaf0:	b	9d60 <ReadInt32Data.part.7+0x660>
    aaf4:	ldr	r5, [sp, #20]
    aaf8:	sub	r3, r5, #256	; 0x100
    aafc:	sub	r3, r3, #1
    ab00:	lsr	r3, r3, #8
    ab04:	add	r4, r3, #1
    ab08:	lsl	r8, r4, #8
    ab0c:	cmp	r5, r8
    ab10:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ab14:	ldr	r3, [sp]
    ab18:	sub	r5, r5, r8
    ab1c:	mov	r0, r6
    ab20:	mov	r2, r5
    ab24:	mov	r1, fp
    ab28:	ldr	r3, [r3]
    ab2c:	bl	1520 <fread@plt>
    ab30:	add	r3, r7, r0
    ab34:	cmp	r5, #0
    ab38:	str	r3, [sp, #8]
    ab3c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ab40:	ldr	r3, [sp, #4]
    ab44:	add	r5, r5, r8
    ab48:	ldr	r6, [sp, #16]
    ab4c:	add	r4, r3, r4, lsl #10
    ab50:	add	r5, r3, r5, lsl #2
    ab54:	mov	r0, r6
    ab58:	add	r6, r6, #2
    ab5c:	bl	192c <Mat_int16Swap>
    ab60:	str	r0, [r4], #4
    ab64:	cmp	r5, r4
    ab68:	bne	ab54 <ReadInt32Data.part.7+0x1454>
    ab6c:	b	9d60 <ReadInt32Data.part.7+0x660>
    ab70:	cmp	r5, #256	; 0x100
    ab74:	ble	adb0 <ReadInt32Data.part.7+0x16b0>
    ab78:	sub	r2, r5, #256	; 0x100
    ab7c:	mov	sl, r7
    ab80:	add	r6, sp, #24
    ab84:	add	r4, sp, #2064	; 0x810
    ab88:	str	r2, [sp, #12]
    ab8c:	ldr	r2, [sp, #4]
    ab90:	sub	r9, r2, #4
    ab94:	mov	r2, #256	; 0x100
    ab98:	mov	r1, fp
    ab9c:	mov	r0, r6
    aba0:	sub	r8, r6, #8
    aba4:	bl	1520 <fread@plt>
    aba8:	add	r7, r7, r0
    abac:	mov	r3, r8
    abb0:	mov	r2, r9
    abb4:	str	r7, [sp, #8]
    abb8:	ldr	r1, [r3, #8]!
    abbc:	cmp	r4, r3
    abc0:	str	r1, [r2, #4]!
    abc4:	bne	abb8 <ReadInt32Data.part.7+0x14b8>
    abc8:	ldr	r3, [sp, #12]
    abcc:	add	sl, sl, #256	; 0x100
    abd0:	add	r9, r9, #1024	; 0x400
    abd4:	cmp	sl, r3
    abd8:	bge	ac60 <ReadInt32Data.part.7+0x1560>
    abdc:	ldr	r3, [sp]
    abe0:	ldr	r3, [r3]
    abe4:	b	ab94 <ReadInt32Data.part.7+0x1494>
    abe8:	cmp	r5, #256	; 0x100
    abec:	ble	ae34 <ReadInt32Data.part.7+0x1734>
    abf0:	sub	r2, r5, #256	; 0x100
    abf4:	mov	sl, r7
    abf8:	add	r6, sp, #24
    abfc:	add	r4, sp, #2064	; 0x810
    ac00:	str	r2, [sp, #12]
    ac04:	ldr	r2, [sp, #4]
    ac08:	sub	r9, r2, #4
    ac0c:	mov	r2, #256	; 0x100
    ac10:	mov	r1, fp
    ac14:	mov	r0, r6
    ac18:	sub	r8, r6, #8
    ac1c:	bl	1520 <fread@plt>
    ac20:	add	r7, r7, r0
    ac24:	mov	r3, r8
    ac28:	mov	r2, r9
    ac2c:	str	r7, [sp, #8]
    ac30:	ldr	r1, [r3, #8]!
    ac34:	cmp	r4, r3
    ac38:	str	r1, [r2, #4]!
    ac3c:	bne	ac30 <ReadInt32Data.part.7+0x1530>
    ac40:	ldr	r3, [sp, #12]
    ac44:	add	sl, sl, #256	; 0x100
    ac48:	add	r9, r9, #1024	; 0x400
    ac4c:	cmp	r3, sl
    ac50:	ble	ad44 <ReadInt32Data.part.7+0x1644>
    ac54:	ldr	r3, [sp]
    ac58:	ldr	r3, [r3]
    ac5c:	b	ac0c <ReadInt32Data.part.7+0x150c>
    ac60:	sub	r3, r5, #256	; 0x100
    ac64:	sub	r3, r3, #1
    ac68:	lsr	r3, r3, #8
    ac6c:	add	r4, r3, #1
    ac70:	lsl	r9, r4, #8
    ac74:	cmp	r5, r9
    ac78:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ac7c:	ldr	r3, [sp]
    ac80:	sub	r5, r5, r9
    ac84:	mov	r0, r6
    ac88:	mov	r2, r5
    ac8c:	mov	r1, fp
    ac90:	ldr	r3, [r3]
    ac94:	bl	1520 <fread@plt>
    ac98:	add	r3, r7, r0
    ac9c:	cmp	r5, #0
    aca0:	str	r3, [sp, #8]
    aca4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    aca8:	ldr	r3, [sp, #4]
    acac:	add	r5, r9, r5
    acb0:	add	r4, r3, r4, lsl #10
    acb4:	add	r3, r3, r5, lsl #2
    acb8:	ldr	r2, [r8, #8]!
    acbc:	str	r2, [r4], #4
    acc0:	cmp	r3, r4
    acc4:	bne	acb8 <ReadInt32Data.part.7+0x15b8>
    acc8:	b	9d60 <ReadInt32Data.part.7+0x660>
    accc:	sub	r3, r5, #256	; 0x100
    acd0:	sub	r3, r3, #1
    acd4:	lsr	r3, r3, #8
    acd8:	add	r4, r3, #1
    acdc:	lsl	r7, r4, #8
    ace0:	cmp	r5, r7
    ace4:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ace8:	ldr	r3, [sp]
    acec:	sub	r5, r5, r7
    acf0:	mov	r0, r6
    acf4:	mov	r2, r5
    acf8:	mov	r1, fp
    acfc:	ldr	r3, [r3]
    ad00:	bl	1520 <fread@plt>
    ad04:	add	r3, r8, r0
    ad08:	cmp	r5, #0
    ad0c:	str	r3, [sp, #8]
    ad10:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ad14:	ldr	r3, [sp, #4]
    ad18:	add	r5, r5, r7
    ad1c:	ldr	r6, [sp, #20]
    ad20:	add	r4, r3, r4, lsl #10
    ad24:	add	r5, r3, r5, lsl #2
    ad28:	mov	r0, r6
    ad2c:	add	r6, r6, #8
    ad30:	bl	17ec <Mat_int64Swap>
    ad34:	str	r0, [r4], #4
    ad38:	cmp	r4, r5
    ad3c:	bne	ad28 <ReadInt32Data.part.7+0x1628>
    ad40:	b	9d60 <ReadInt32Data.part.7+0x660>
    ad44:	sub	r3, r5, #256	; 0x100
    ad48:	sub	r3, r3, #1
    ad4c:	lsr	r3, r3, #8
    ad50:	add	r4, r3, #1
    ad54:	lsl	r9, r4, #8
    ad58:	cmp	r5, r9
    ad5c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ad60:	ldr	r3, [sp]
    ad64:	sub	r5, r5, r9
    ad68:	mov	r0, r6
    ad6c:	mov	r2, r5
    ad70:	mov	r1, fp
    ad74:	ldr	r3, [r3]
    ad78:	bl	1520 <fread@plt>
    ad7c:	add	r3, r7, r0
    ad80:	cmp	r5, #0
    ad84:	str	r3, [sp, #8]
    ad88:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ad8c:	ldr	r3, [sp, #4]
    ad90:	add	r5, r5, r9
    ad94:	add	r4, r3, r4, lsl #10
    ad98:	add	r3, r3, r5, lsl #2
    ad9c:	ldr	r2, [r8, #8]!
    ada0:	str	r2, [r4], #4
    ada4:	cmp	r3, r4
    ada8:	bne	ad9c <ReadInt32Data.part.7+0x169c>
    adac:	b	9d60 <ReadInt32Data.part.7+0x660>
    adb0:	add	r4, sp, #24
    adb4:	mov	r2, r5
    adb8:	mov	r0, r4
    adbc:	mov	r1, fp
    adc0:	bl	1520 <fread@plt>
    adc4:	cmp	r5, #0
    adc8:	str	r0, [sp, #8]
    adcc:	ble	9d60 <ReadInt32Data.part.7+0x660>
    add0:	ldr	r3, [sp, #4]
    add4:	sub	r4, r4, #8
    add8:	add	r5, r3, r5, lsl #2
    addc:	ldr	r2, [r4, #8]!
    ade0:	str	r2, [r3], #4
    ade4:	cmp	r5, r3
    ade8:	bne	addc <ReadInt32Data.part.7+0x16dc>
    adec:	b	9d60 <ReadInt32Data.part.7+0x660>
    adf0:	add	r4, sp, #24
    adf4:	mov	r2, r5
    adf8:	mov	r0, r4
    adfc:	mov	r1, fp
    ae00:	bl	1520 <fread@plt>
    ae04:	cmp	r5, #0
    ae08:	str	r0, [sp, #8]
    ae0c:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ae10:	ldr	r6, [sp, #4]
    ae14:	add	r5, r6, r5, lsl #2
    ae18:	mov	r0, r4
    ae1c:	add	r4, r4, #8
    ae20:	bl	1858 <Mat_uint64Swap>
    ae24:	str	r0, [r6], #4
    ae28:	cmp	r5, r6
    ae2c:	bne	ae18 <ReadInt32Data.part.7+0x1718>
    ae30:	b	9d60 <ReadInt32Data.part.7+0x660>
    ae34:	add	r4, sp, #24
    ae38:	mov	r2, r5
    ae3c:	mov	r0, r4
    ae40:	mov	r1, fp
    ae44:	bl	1520 <fread@plt>
    ae48:	cmp	r5, #0
    ae4c:	str	r0, [sp, #8]
    ae50:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ae54:	ldr	r3, [sp, #4]
    ae58:	sub	r4, r4, #8
    ae5c:	add	r5, r3, r5, lsl #2
    ae60:	ldr	r2, [r4, #8]!
    ae64:	str	r2, [r3], #4
    ae68:	cmp	r5, r3
    ae6c:	bne	ae60 <ReadInt32Data.part.7+0x1760>
    ae70:	b	9d60 <ReadInt32Data.part.7+0x660>
    ae74:	add	r4, sp, #24
    ae78:	mov	r2, r5
    ae7c:	mov	r0, r4
    ae80:	mov	r1, fp
    ae84:	bl	1520 <fread@plt>
    ae88:	cmp	r5, #0
    ae8c:	str	r0, [sp, #8]
    ae90:	ble	9d60 <ReadInt32Data.part.7+0x660>
    ae94:	ldr	r6, [sp, #4]
    ae98:	add	r5, r6, r5, lsl #2
    ae9c:	mov	r0, r4
    aea0:	add	r4, r4, #8
    aea4:	bl	17ec <Mat_int64Swap>
    aea8:	str	r0, [r6], #4
    aeac:	cmp	r6, r5
    aeb0:	bne	ae9c <ReadInt32Data.part.7+0x179c>
    aeb4:	b	9d60 <ReadInt32Data.part.7+0x660>

0000aeb8 <ReadUInt32Data.part.9>:
    aeb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    aebc:	mov	r4, r2
    aec0:	mov	r5, r3
    aec4:	strd	r6, [sp, #8]
    aec8:	strd	r8, [sp, #16]
    aecc:	strd	sl, [sp, #24]
    aed0:	str	lr, [sp, #32]
    aed4:	sub	sp, sp, #2064	; 0x810
    aed8:	sub	sp, sp, #12
    aedc:	strd	r0, [sp]
    aee0:	mov	r0, r2
    aee4:	bl	1598 <Mat_SizeOf@plt>
    aee8:	sub	r3, r4, #1
    aeec:	mov	fp, r0
    aef0:	cmp	r3, #8
    aef4:	addls	pc, pc, r3, lsl #2
    aef8:	b	b3e8 <ReadUInt32Data.part.9+0x530>
    aefc:	b	afc8 <ReadUInt32Data.part.9+0x110>
    af00:	b	b0e4 <ReadUInt32Data.part.9+0x22c>
    af04:	b	b204 <ReadUInt32Data.part.9+0x34c>
    af08:	b	b048 <ReadUInt32Data.part.9+0x190>
    af0c:	b	b2a0 <ReadUInt32Data.part.9+0x3e8>
    af10:	b	b164 <ReadUInt32Data.part.9+0x2ac>
    af14:	b	b340 <ReadUInt32Data.part.9+0x488>
    af18:	b	b3e8 <ReadUInt32Data.part.9+0x530>
    af1c:	b	af20 <ReadUInt32Data.part.9+0x68>
    af20:	ldr	r3, [sp]
    af24:	ldr	r7, [r3, #20]
    af28:	ldr	r3, [r3]
    af2c:	cmp	r7, #0
    af30:	beq	b7c4 <ReadUInt32Data.part.9+0x90c>
    af34:	cmp	r5, #256	; 0x100
    af38:	ble	bae4 <ReadUInt32Data.part.9+0xc2c>
    af3c:	sub	r2, r5, #256	; 0x100
    af40:	mov	r8, #0
    af44:	add	r4, sp, #2064	; 0x810
    af48:	mov	r7, r8
    af4c:	str	r2, [sp, #12]
    af50:	add	r6, sp, #24
    af54:	add	r4, r4, #8
    af58:	ldr	r2, [sp, #4]
    af5c:	str	r5, [sp, #20]
    af60:	sub	r9, r2, #4
    af64:	mov	r2, #256	; 0x100
    af68:	mov	r1, fp
    af6c:	mov	r0, r6
    af70:	mov	sl, r9
    af74:	bl	1520 <fread@plt>
    af78:	add	r7, r7, r0
    af7c:	mov	r5, r6
    af80:	str	r7, [sp, #8]
    af84:	str	r6, [sp, #16]
    af88:	mov	r0, r5
    af8c:	add	r5, r5, #8
    af90:	bl	19a4 <Mat_doubleSwap>
    af94:	vcvt.u32.f64	s0, d0
    af98:	cmp	r5, r4
    af9c:	vmov	r3, s0
    afa0:	str	r3, [sl, #4]!
    afa4:	bne	af88 <ReadUInt32Data.part.9+0xd0>
    afa8:	ldr	r3, [sp, #12]
    afac:	add	r8, r8, #256	; 0x100
    afb0:	add	r9, r9, #1024	; 0x400
    afb4:	cmp	r8, r3
    afb8:	bge	beac <ReadUInt32Data.part.9+0xff4>
    afbc:	ldr	r3, [sp]
    afc0:	ldr	r3, [r3]
    afc4:	b	af64 <ReadUInt32Data.part.9+0xac>
    afc8:	ldr	sl, [sp]
    afcc:	cmp	r5, #256	; 0x100
    afd0:	ldr	r3, [sl]
    afd4:	ble	bd38 <ReadUInt32Data.part.9+0xe80>
    afd8:	mov	r8, #0
    afdc:	add	r6, sp, #24
    afe0:	str	r5, [sp, #8]
    afe4:	ldr	r1, [sp, #4]
    afe8:	sub	r2, r5, #256	; 0x100
    afec:	mov	r7, r8
    aff0:	add	r4, r6, #255	; 0xff
    aff4:	mov	r5, r2
    aff8:	sub	r9, r1, #4
    affc:	mov	r2, #256	; 0x100
    b000:	mov	r1, fp
    b004:	mov	r0, r6
    b008:	bl	1520 <fread@plt>
    b00c:	add	r7, r7, r0
    b010:	sub	ip, r6, #1
    b014:	mov	r0, r7
    b018:	mov	r3, ip
    b01c:	mov	r2, r9
    b020:	ldrsb	r1, [r3, #1]!
    b024:	cmp	r4, r3
    b028:	str	r1, [r2, #4]!
    b02c:	bne	b020 <ReadUInt32Data.part.9+0x168>
    b030:	add	r8, r8, #256	; 0x100
    b034:	add	r9, r9, #1024	; 0x400
    b038:	cmp	r5, r8
    b03c:	ble	b540 <ReadUInt32Data.part.9+0x688>
    b040:	ldr	r3, [sl]
    b044:	b	affc <ReadUInt32Data.part.9+0x144>
    b048:	ldr	r3, [sp]
    b04c:	ldr	r7, [r3, #20]
    b050:	ldr	r3, [r3]
    b054:	cmp	r7, #0
    b058:	beq	b6d0 <ReadUInt32Data.part.9+0x818>
    b05c:	cmp	r5, #256	; 0x100
    b060:	ble	baa0 <ReadUInt32Data.part.9+0xbe8>
    b064:	sub	r2, r5, #256	; 0x100
    b068:	mov	r8, #0
    b06c:	mov	r7, r8
    b070:	add	r6, sp, #24
    b074:	str	r2, [sp, #12]
    b078:	add	r4, sp, #536	; 0x218
    b07c:	ldr	r2, [sp, #4]
    b080:	str	r5, [sp, #20]
    b084:	sub	r9, r2, #4
    b088:	mov	r2, #256	; 0x100
    b08c:	mov	r1, fp
    b090:	mov	r0, r6
    b094:	mov	sl, r9
    b098:	bl	1520 <fread@plt>
    b09c:	add	r7, r7, r0
    b0a0:	mov	r5, r6
    b0a4:	str	r7, [sp, #8]
    b0a8:	str	r6, [sp, #16]
    b0ac:	mov	r0, r5
    b0b0:	add	r5, r5, #2
    b0b4:	bl	1950 <Mat_uint16Swap>
    b0b8:	cmp	r4, r5
    b0bc:	str	r0, [sl, #4]!
    b0c0:	bne	b0ac <ReadUInt32Data.part.9+0x1f4>
    b0c4:	ldr	r3, [sp, #12]
    b0c8:	add	r8, r8, #256	; 0x100
    b0cc:	add	r9, r9, #1024	; 0x400
    b0d0:	cmp	r8, r3
    b0d4:	bge	bcbc <ReadUInt32Data.part.9+0xe04>
    b0d8:	ldr	r3, [sp]
    b0dc:	ldr	r3, [r3]
    b0e0:	b	b088 <ReadUInt32Data.part.9+0x1d0>
    b0e4:	ldr	sl, [sp]
    b0e8:	cmp	r5, #256	; 0x100
    b0ec:	ldr	r3, [sl]
    b0f0:	ble	bdf0 <ReadUInt32Data.part.9+0xf38>
    b0f4:	mov	r8, #0
    b0f8:	add	r6, sp, #24
    b0fc:	str	r5, [sp, #8]
    b100:	ldr	r1, [sp, #4]
    b104:	sub	r2, r5, #256	; 0x100
    b108:	mov	r7, r8
    b10c:	add	r4, r6, #255	; 0xff
    b110:	mov	r5, r2
    b114:	sub	r9, r1, #4
    b118:	mov	r2, #256	; 0x100
    b11c:	mov	r1, fp
    b120:	mov	r0, r6
    b124:	bl	1520 <fread@plt>
    b128:	add	r7, r7, r0
    b12c:	sub	ip, r6, #1
    b130:	mov	r0, r7
    b134:	mov	r3, ip
    b138:	mov	r2, r9
    b13c:	ldrb	r1, [r3, #1]!
    b140:	cmp	r4, r3
    b144:	str	r1, [r2, #4]!
    b148:	bne	b13c <ReadUInt32Data.part.9+0x284>
    b14c:	add	r8, r8, #256	; 0x100
    b150:	add	r9, r9, #1024	; 0x400
    b154:	cmp	r5, r8
    b158:	ble	b56c <ReadUInt32Data.part.9+0x6b4>
    b15c:	ldr	r3, [sl]
    b160:	b	b118 <ReadUInt32Data.part.9+0x260>
    b164:	ldr	r3, [sp]
    b168:	ldr	r7, [r3, #20]
    b16c:	ldr	r3, [r3]
    b170:	cmp	r7, #0
    b174:	beq	b74c <ReadUInt32Data.part.9+0x894>
    b178:	cmp	r5, #256	; 0x100
    b17c:	ble	bb2c <ReadUInt32Data.part.9+0xc74>
    b180:	sub	r2, r5, #256	; 0x100
    b184:	mov	r8, #0
    b188:	add	r4, sp, #1040	; 0x410
    b18c:	mov	r7, r8
    b190:	str	r2, [sp, #16]
    b194:	add	r6, sp, #24
    b198:	add	r4, r4, #8
    b19c:	ldr	r2, [sp, #4]
    b1a0:	str	r5, [sp, #20]
    b1a4:	sub	r9, r2, #4
    b1a8:	mov	r2, #256	; 0x100
    b1ac:	mov	r1, fp
    b1b0:	mov	r0, r6
    b1b4:	mov	sl, r9
    b1b8:	bl	1520 <fread@plt>
    b1bc:	add	r7, r7, r0
    b1c0:	mov	r5, r6
    b1c4:	str	r7, [sp, #8]
    b1c8:	str	r6, [sp, #12]
    b1cc:	mov	r0, r5
    b1d0:	add	r5, r5, #4
    b1d4:	bl	18f8 <Mat_uint32Swap>
    b1d8:	cmp	r4, r5
    b1dc:	str	r0, [sl, #4]!
    b1e0:	bne	b1cc <ReadUInt32Data.part.9+0x314>
    b1e4:	ldr	r3, [sp, #16]
    b1e8:	add	r8, r8, #256	; 0x100
    b1ec:	add	r9, r9, #1024	; 0x400
    b1f0:	cmp	r8, r3
    b1f4:	bge	bc40 <ReadUInt32Data.part.9+0xd88>
    b1f8:	ldr	r3, [sp]
    b1fc:	ldr	r3, [r3]
    b200:	b	b1a8 <ReadUInt32Data.part.9+0x2f0>
    b204:	ldr	r3, [sp]
    b208:	ldr	r7, [r3, #20]
    b20c:	ldr	r3, [r3]
    b210:	cmp	r7, #0
    b214:	beq	b5dc <ReadUInt32Data.part.9+0x724>
    b218:	cmp	r5, #256	; 0x100
    b21c:	ble	bbfc <ReadUInt32Data.part.9+0xd44>
    b220:	sub	r2, r5, #256	; 0x100
    b224:	mov	r8, #0
    b228:	mov	r7, r8
    b22c:	add	r6, sp, #24
    b230:	str	r2, [sp, #12]
    b234:	add	r4, sp, #536	; 0x218
    b238:	ldr	r2, [sp, #4]
    b23c:	str	r5, [sp, #20]
    b240:	sub	r9, r2, #4
    b244:	mov	r2, #256	; 0x100
    b248:	mov	r1, fp
    b24c:	mov	r0, r6
    b250:	mov	sl, r9
    b254:	bl	1520 <fread@plt>
    b258:	add	r7, r7, r0
    b25c:	mov	r5, r6
    b260:	str	r7, [sp, #8]
    b264:	str	r6, [sp, #16]
    b268:	mov	r0, r5
    b26c:	add	r5, r5, #2
    b270:	bl	192c <Mat_int16Swap>
    b274:	cmp	r4, r5
    b278:	str	r0, [sl, #4]!
    b27c:	bne	b268 <ReadUInt32Data.part.9+0x3b0>
    b280:	ldr	r3, [sp, #12]
    b284:	add	r8, r8, #256	; 0x100
    b288:	add	r9, r9, #1024	; 0x400
    b28c:	cmp	r8, r3
    b290:	bge	c2ac <ReadUInt32Data.part.9+0x13f4>
    b294:	ldr	r3, [sp]
    b298:	ldr	r3, [r3]
    b29c:	b	b244 <ReadUInt32Data.part.9+0x38c>
    b2a0:	ldr	r3, [sp]
    b2a4:	ldr	r7, [r3, #20]
    b2a8:	ldr	r3, [r3]
    b2ac:	cmp	r7, #0
    b2b0:	beq	b658 <ReadUInt32Data.part.9+0x7a0>
    b2b4:	cmp	r5, #256	; 0x100
    b2b8:	ble	bbb8 <ReadUInt32Data.part.9+0xd00>
    b2bc:	sub	r2, r5, #256	; 0x100
    b2c0:	mov	r8, #0
    b2c4:	add	r4, sp, #1040	; 0x410
    b2c8:	mov	r7, r8
    b2cc:	str	r2, [sp, #12]
    b2d0:	add	r6, sp, #24
    b2d4:	add	r4, r4, #8
    b2d8:	ldr	r2, [sp, #4]
    b2dc:	str	r5, [sp, #20]
    b2e0:	sub	r9, r2, #4
    b2e4:	mov	r2, #256	; 0x100
    b2e8:	mov	r1, fp
    b2ec:	mov	r0, r6
    b2f0:	mov	sl, r9
    b2f4:	bl	1520 <fread@plt>
    b2f8:	add	r7, r7, r0
    b2fc:	mov	r5, r6
    b300:	str	r7, [sp, #8]
    b304:	str	r6, [sp, #16]
    b308:	mov	r0, r5
    b30c:	add	r5, r5, #4
    b310:	bl	18c4 <Mat_int32Swap>
    b314:	cmp	r4, r5
    b318:	str	r0, [sl, #4]!
    b31c:	bne	b308 <ReadUInt32Data.part.9+0x450>
    b320:	ldr	r3, [sp, #12]
    b324:	add	r8, r8, #256	; 0x100
    b328:	add	r9, r9, #1024	; 0x400
    b32c:	cmp	r8, r3
    b330:	bge	bd74 <ReadUInt32Data.part.9+0xebc>
    b334:	ldr	r3, [sp]
    b338:	ldr	r3, [r3]
    b33c:	b	b2e4 <ReadUInt32Data.part.9+0x42c>
    b340:	ldr	r3, [sp]
    b344:	ldr	r7, [r3, #20]
    b348:	ldr	r3, [r3]
    b34c:	cmp	r7, #0
    b350:	beq	b848 <ReadUInt32Data.part.9+0x990>
    b354:	cmp	r5, #256	; 0x100
    b358:	ble	bb70 <ReadUInt32Data.part.9+0xcb8>
    b35c:	sub	r2, r5, #256	; 0x100
    b360:	mov	r8, #0
    b364:	add	r4, sp, #1040	; 0x410
    b368:	mov	r7, r8
    b36c:	str	r2, [sp, #12]
    b370:	add	r6, sp, #24
    b374:	add	r4, r4, #8
    b378:	ldr	r2, [sp, #4]
    b37c:	str	r5, [sp, #20]
    b380:	sub	r9, r2, #4
    b384:	mov	r2, #256	; 0x100
    b388:	mov	r1, fp
    b38c:	mov	r0, r6
    b390:	mov	sl, r9
    b394:	bl	1520 <fread@plt>
    b398:	add	r7, r7, r0
    b39c:	mov	r5, r6
    b3a0:	str	r7, [sp, #8]
    b3a4:	str	r6, [sp, #16]
    b3a8:	mov	r0, r5
    b3ac:	add	r5, r5, #4
    b3b0:	bl	1974 <Mat_floatSwap>
    b3b4:	vcvt.u32.f32	s0, s0
    b3b8:	cmp	r5, r4
    b3bc:	vmov	r3, s0
    b3c0:	str	r3, [sl, #4]!
    b3c4:	bne	b3a8 <ReadUInt32Data.part.9+0x4f0>
    b3c8:	ldr	r3, [sp, #12]
    b3cc:	add	r8, r8, #256	; 0x100
    b3d0:	add	r9, r9, #1024	; 0x400
    b3d4:	cmp	r8, r3
    b3d8:	bge	be2c <ReadUInt32Data.part.9+0xf74>
    b3dc:	ldr	r3, [sp]
    b3e0:	ldr	r3, [r3]
    b3e4:	b	b384 <ReadUInt32Data.part.9+0x4cc>
    b3e8:	cmp	r4, #12
    b3ec:	beq	bf2c <ReadUInt32Data.part.9+0x1074>
    b3f0:	cmp	r4, #13
    b3f4:	movne	r0, #0
    b3f8:	bne	b520 <ReadUInt32Data.part.9+0x668>
    b3fc:	ldr	r3, [sp]
    b400:	ldr	r7, [r3, #20]
    b404:	ldr	r3, [r3]
    b408:	cmp	r7, #0
    b40c:	beq	c328 <ReadUInt32Data.part.9+0x1470>
    b410:	cmp	r5, #256	; 0x100
    b414:	ble	c5a8 <ReadUInt32Data.part.9+0x16f0>
    b418:	sub	r2, r5, #256	; 0x100
    b41c:	mov	r7, #0
    b420:	add	r4, sp, #2064	; 0x810
    b424:	mov	r8, r7
    b428:	str	r2, [sp, #16]
    b42c:	add	r6, sp, #24
    b430:	add	r4, r4, #8
    b434:	ldr	r2, [sp, #4]
    b438:	sub	r2, r2, #4
    b43c:	str	r2, [sp, #12]
    b440:	mov	r2, #256	; 0x100
    b444:	mov	r1, fp
    b448:	mov	r0, r6
    b44c:	mov	r9, r6
    b450:	bl	1520 <fread@plt>
    b454:	ldr	sl, [sp, #12]
    b458:	add	r8, r8, r0
    b45c:	str	r8, [sp, #8]
    b460:	str	r6, [sp, #20]
    b464:	mov	r0, r9
    b468:	add	r9, r9, #8
    b46c:	bl	1858 <Mat_uint64Swap>
    b470:	cmp	r4, r9
    b474:	str	r0, [sl, #4]!
    b478:	bne	b464 <ReadUInt32Data.part.9+0x5ac>
    b47c:	ldr	r3, [sp, #12]
    b480:	add	r7, r7, #256	; 0x100
    b484:	add	r3, r3, #1024	; 0x400
    b488:	str	r3, [sp, #12]
    b48c:	ldr	r3, [sp, #16]
    b490:	cmp	r3, r7
    b494:	ble	b4a4 <ReadUInt32Data.part.9+0x5ec>
    b498:	ldr	r3, [sp]
    b49c:	ldr	r3, [r3]
    b4a0:	b	b440 <ReadUInt32Data.part.9+0x588>
    b4a4:	sub	r3, r5, #256	; 0x100
    b4a8:	sub	r3, r3, #1
    b4ac:	lsr	r3, r3, #8
    b4b0:	add	r4, r3, #1
    b4b4:	lsl	r7, r4, #8
    b4b8:	cmp	r5, r7
    b4bc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    b4c0:	ldr	r3, [sp]
    b4c4:	sub	r5, r5, r7
    b4c8:	mov	r0, r6
    b4cc:	mov	r2, r5
    b4d0:	mov	r1, fp
    b4d4:	ldr	r3, [r3]
    b4d8:	bl	1520 <fread@plt>
    b4dc:	add	r3, r8, r0
    b4e0:	cmp	r5, #0
    b4e4:	str	r3, [sp, #8]
    b4e8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    b4ec:	ldr	r3, [sp, #4]
    b4f0:	add	r5, r5, r7
    b4f4:	ldr	r6, [sp, #20]
    b4f8:	add	r4, r3, r4, lsl #10
    b4fc:	add	r5, r3, r5, lsl #2
    b500:	mov	r0, r6
    b504:	add	r6, r6, #8
    b508:	bl	1858 <Mat_uint64Swap>
    b50c:	str	r0, [r4], #4
    b510:	cmp	r5, r4
    b514:	bne	b500 <ReadUInt32Data.part.9+0x648>
    b518:	ldr	r3, [sp, #8]
    b51c:	mul	r0, r3, fp
    b520:	add	sp, sp, #2064	; 0x810
    b524:	add	sp, sp, #12
    b528:	ldrd	r4, [sp]
    b52c:	ldrd	r6, [sp, #8]
    b530:	ldrd	r8, [sp, #16]
    b534:	ldrd	sl, [sp, #24]
    b538:	add	sp, sp, #32
    b53c:	pop	{pc}		; (ldr pc, [sp], #4)
    b540:	ldr	r5, [sp, #8]
    b544:	mov	sl, ip
    b548:	sub	r3, r5, #256	; 0x100
    b54c:	sub	r3, r3, #1
    b550:	lsr	r3, r3, #8
    b554:	add	r4, r3, #1
    b558:	lsl	r8, r4, #8
    b55c:	cmp	r5, r8
    b560:	bgt	b8cc <ReadUInt32Data.part.9+0xa14>
    b564:	mul	r0, r0, fp
    b568:	b	b520 <ReadUInt32Data.part.9+0x668>
    b56c:	ldr	r5, [sp, #8]
    b570:	mov	sl, ip
    b574:	sub	r3, r5, #256	; 0x100
    b578:	sub	r3, r3, #1
    b57c:	lsr	r3, r3, #8
    b580:	add	r4, r3, #1
    b584:	lsl	r8, r4, #8
    b588:	cmp	r5, r8
    b58c:	ble	b564 <ReadUInt32Data.part.9+0x6ac>
    b590:	ldr	r3, [sp]
    b594:	sub	r5, r5, r8
    b598:	mov	r0, r6
    b59c:	mov	r2, r5
    b5a0:	mov	r1, fp
    b5a4:	ldr	r3, [r3]
    b5a8:	bl	1520 <fread@plt>
    b5ac:	cmp	r5, #0
    b5b0:	add	r0, r7, r0
    b5b4:	ble	b564 <ReadUInt32Data.part.9+0x6ac>
    b5b8:	ldr	r3, [sp, #4]
    b5bc:	add	r5, r5, r8
    b5c0:	add	r4, r3, r4, lsl #10
    b5c4:	add	r3, r3, r5, lsl #2
    b5c8:	ldrb	r2, [sl, #1]!
    b5cc:	str	r2, [r4], #4
    b5d0:	cmp	r4, r3
    b5d4:	bne	b5c8 <ReadUInt32Data.part.9+0x710>
    b5d8:	b	b564 <ReadUInt32Data.part.9+0x6ac>
    b5dc:	cmp	r5, #256	; 0x100
    b5e0:	ble	b9e0 <ReadUInt32Data.part.9+0xb28>
    b5e4:	ldr	r1, [sp, #4]
    b5e8:	add	r6, sp, #24
    b5ec:	sub	r2, r5, #256	; 0x100
    b5f0:	add	r4, r6, #508	; 0x1fc
    b5f4:	mov	sl, r5
    b5f8:	add	r4, r4, #2
    b5fc:	mov	r8, r7
    b600:	mov	r5, r2
    b604:	sub	r9, r1, #4
    b608:	mov	r2, #256	; 0x100
    b60c:	mov	r1, fp
    b610:	mov	r0, r6
    b614:	bl	1520 <fread@plt>
    b618:	add	r7, r7, r0
    b61c:	sub	r0, r6, #2
    b620:	mov	ip, r7
    b624:	mov	r3, r0
    b628:	mov	r2, r9
    b62c:	ldrsh	r1, [r3, #2]!
    b630:	cmp	r4, r3
    b634:	str	r1, [r2, #4]!
    b638:	bne	b62c <ReadUInt32Data.part.9+0x774>
    b63c:	add	r8, r8, #256	; 0x100
    b640:	add	r9, r9, #1024	; 0x400
    b644:	cmp	r8, r5
    b648:	bge	c0c4 <ReadUInt32Data.part.9+0x120c>
    b64c:	ldr	r3, [sp]
    b650:	ldr	r3, [r3]
    b654:	b	b608 <ReadUInt32Data.part.9+0x750>
    b658:	cmp	r5, #256	; 0x100
    b65c:	ble	ba60 <ReadUInt32Data.part.9+0xba8>
    b660:	ldr	r1, [sp, #4]
    b664:	add	r6, sp, #24
    b668:	sub	r2, r5, #256	; 0x100
    b66c:	mov	sl, r5
    b670:	add	r4, r6, #1020	; 0x3fc
    b674:	mov	r8, r7
    b678:	mov	r5, r2
    b67c:	sub	r9, r1, #4
    b680:	mov	r2, #256	; 0x100
    b684:	mov	r1, fp
    b688:	mov	r0, r6
    b68c:	bl	1520 <fread@plt>
    b690:	add	r7, r7, r0
    b694:	sub	r0, r6, #4
    b698:	mov	ip, r7
    b69c:	mov	r3, r0
    b6a0:	mov	r2, r9
    b6a4:	ldr	r1, [r3, #4]!
    b6a8:	cmp	r3, r4
    b6ac:	str	r1, [r2, #4]!
    b6b0:	bne	b6a4 <ReadUInt32Data.part.9+0x7ec>
    b6b4:	add	r8, r8, #256	; 0x100
    b6b8:	add	r9, r9, #1024	; 0x400
    b6bc:	cmp	r8, r5
    b6c0:	bge	bfd4 <ReadUInt32Data.part.9+0x111c>
    b6c4:	ldr	r3, [sp]
    b6c8:	ldr	r3, [r3]
    b6cc:	b	b680 <ReadUInt32Data.part.9+0x7c8>
    b6d0:	cmp	r5, #256	; 0x100
    b6d4:	ble	ba20 <ReadUInt32Data.part.9+0xb68>
    b6d8:	ldr	r1, [sp, #4]
    b6dc:	add	r6, sp, #24
    b6e0:	sub	r2, r5, #256	; 0x100
    b6e4:	add	r4, r6, #508	; 0x1fc
    b6e8:	mov	sl, r5
    b6ec:	add	r4, r4, #2
    b6f0:	mov	r8, r7
    b6f4:	mov	r5, r2
    b6f8:	sub	r9, r1, #4
    b6fc:	mov	r2, #256	; 0x100
    b700:	mov	r1, fp
    b704:	mov	r0, r6
    b708:	bl	1520 <fread@plt>
    b70c:	add	r7, r7, r0
    b710:	sub	r0, r6, #2
    b714:	mov	ip, r7
    b718:	mov	r3, r0
    b71c:	mov	r2, r9
    b720:	ldrh	r1, [r3, #2]!
    b724:	cmp	r4, r3
    b728:	str	r1, [r2, #4]!
    b72c:	bne	b720 <ReadUInt32Data.part.9+0x868>
    b730:	add	r8, r8, #256	; 0x100
    b734:	add	r9, r9, #1024	; 0x400
    b738:	cmp	r8, r5
    b73c:	bge	c234 <ReadUInt32Data.part.9+0x137c>
    b740:	ldr	r3, [sp]
    b744:	ldr	r3, [r3]
    b748:	b	b6fc <ReadUInt32Data.part.9+0x844>
    b74c:	cmp	r5, #256	; 0x100
    b750:	ble	b9a0 <ReadUInt32Data.part.9+0xae8>
    b754:	ldr	r1, [sp, #4]
    b758:	add	r6, sp, #24
    b75c:	sub	r2, r5, #256	; 0x100
    b760:	mov	sl, r5
    b764:	add	r4, r6, #1020	; 0x3fc
    b768:	mov	r8, r7
    b76c:	mov	r5, r2
    b770:	sub	r9, r1, #4
    b774:	mov	r2, #256	; 0x100
    b778:	mov	r1, fp
    b77c:	mov	r0, r6
    b780:	bl	1520 <fread@plt>
    b784:	add	r7, r7, r0
    b788:	sub	r0, r6, #4
    b78c:	mov	ip, r7
    b790:	mov	r3, r0
    b794:	mov	r2, r9
    b798:	ldr	r1, [r3, #4]!
    b79c:	cmp	r3, r4
    b7a0:	str	r1, [r2, #4]!
    b7a4:	bne	b798 <ReadUInt32Data.part.9+0x8e0>
    b7a8:	add	r8, r8, #256	; 0x100
    b7ac:	add	r9, r9, #1024	; 0x400
    b7b0:	cmp	r8, r5
    b7b4:	bge	c04c <ReadUInt32Data.part.9+0x1194>
    b7b8:	ldr	r3, [sp]
    b7bc:	ldr	r3, [r3]
    b7c0:	b	b774 <ReadUInt32Data.part.9+0x8bc>
    b7c4:	cmp	r5, #256	; 0x100
    b7c8:	ble	b95c <ReadUInt32Data.part.9+0xaa4>
    b7cc:	ldr	r1, [sp, #4]
    b7d0:	sub	r2, r5, #256	; 0x100
    b7d4:	add	r4, sp, #2064	; 0x810
    b7d8:	mov	sl, r5
    b7dc:	mov	r8, r7
    b7e0:	add	r6, sp, #24
    b7e4:	add	r4, r4, #8
    b7e8:	mov	r5, r2
    b7ec:	sub	r9, r1, #4
    b7f0:	mov	r2, #256	; 0x100
    b7f4:	mov	r1, fp
    b7f8:	mov	r0, r6
    b7fc:	bl	1520 <fread@plt>
    b800:	add	r7, r7, r0
    b804:	mov	r2, r9
    b808:	mov	r0, r6
    b80c:	mov	r1, r7
    b810:	mov	r3, r6
    b814:	vldmia	r3!, {d7}
    b818:	vcvt.u32.f64	s14, d7
    b81c:	cmp	r3, r4
    b820:	vmov	ip, s14
    b824:	str	ip, [r2, #4]!
    b828:	bne	b814 <ReadUInt32Data.part.9+0x95c>
    b82c:	add	r8, r8, #256	; 0x100
    b830:	add	r9, r9, #1024	; 0x400
    b834:	cmp	r8, r5
    b838:	bge	c1b8 <ReadUInt32Data.part.9+0x1300>
    b83c:	ldr	r3, [sp]
    b840:	ldr	r3, [r3]
    b844:	b	b7f0 <ReadUInt32Data.part.9+0x938>
    b848:	cmp	r5, #256	; 0x100
    b84c:	ble	b918 <ReadUInt32Data.part.9+0xa60>
    b850:	ldr	r1, [sp, #4]
    b854:	sub	r2, r5, #256	; 0x100
    b858:	add	r4, sp, #1040	; 0x410
    b85c:	mov	sl, r5
    b860:	mov	r8, r7
    b864:	add	r6, sp, #24
    b868:	add	r4, r4, #8
    b86c:	mov	r5, r2
    b870:	sub	r9, r1, #4
    b874:	mov	r2, #256	; 0x100
    b878:	mov	r1, fp
    b87c:	mov	r0, r6
    b880:	bl	1520 <fread@plt>
    b884:	add	r7, r7, r0
    b888:	mov	r2, r9
    b88c:	mov	r0, r6
    b890:	mov	r1, r7
    b894:	mov	r3, r6
    b898:	vldmia	r3!, {s15}
    b89c:	vcvt.u32.f32	s15, s15
    b8a0:	cmp	r3, r4
    b8a4:	vmov	ip, s15
    b8a8:	str	ip, [r2, #4]!
    b8ac:	bne	b898 <ReadUInt32Data.part.9+0x9e0>
    b8b0:	add	r8, r8, #256	; 0x100
    b8b4:	add	r9, r9, #1024	; 0x400
    b8b8:	cmp	r8, r5
    b8bc:	bge	c13c <ReadUInt32Data.part.9+0x1284>
    b8c0:	ldr	r3, [sp]
    b8c4:	ldr	r3, [r3]
    b8c8:	b	b874 <ReadUInt32Data.part.9+0x9bc>
    b8cc:	ldr	r3, [sp]
    b8d0:	sub	r5, r5, r8
    b8d4:	mov	r0, r6
    b8d8:	mov	r2, r5
    b8dc:	mov	r1, fp
    b8e0:	ldr	r3, [r3]
    b8e4:	bl	1520 <fread@plt>
    b8e8:	cmp	r5, #0
    b8ec:	add	r0, r7, r0
    b8f0:	ble	b564 <ReadUInt32Data.part.9+0x6ac>
    b8f4:	ldr	r3, [sp, #4]
    b8f8:	add	r5, r8, r5
    b8fc:	add	r4, r3, r4, lsl #10
    b900:	add	r3, r3, r5, lsl #2
    b904:	ldrsb	r2, [sl, #1]!
    b908:	str	r2, [r4], #4
    b90c:	cmp	r3, r4
    b910:	bne	b904 <ReadUInt32Data.part.9+0xa4c>
    b914:	b	b564 <ReadUInt32Data.part.9+0x6ac>
    b918:	add	r4, sp, #24
    b91c:	mov	r2, r5
    b920:	mov	r0, r4
    b924:	mov	r1, fp
    b928:	bl	1520 <fread@plt>
    b92c:	cmp	r5, #0
    b930:	str	r0, [sp, #8]
    b934:	ble	b518 <ReadUInt32Data.part.9+0x660>
    b938:	ldr	r3, [sp, #4]
    b93c:	mov	r2, r4
    b940:	add	r5, r3, r5, lsl #2
    b944:	vldmia	r2!, {s15}
    b948:	vcvt.u32.f32	s15, s15
    b94c:	vstmia	r3!, {s15}
    b950:	cmp	r3, r5
    b954:	bne	b944 <ReadUInt32Data.part.9+0xa8c>
    b958:	b	b518 <ReadUInt32Data.part.9+0x660>
    b95c:	add	r4, sp, #24
    b960:	mov	r2, r5
    b964:	mov	r0, r4
    b968:	mov	r1, fp
    b96c:	bl	1520 <fread@plt>
    b970:	cmp	r5, #0
    b974:	str	r0, [sp, #8]
    b978:	ble	b518 <ReadUInt32Data.part.9+0x660>
    b97c:	ldr	r3, [sp, #4]
    b980:	mov	r2, r4
    b984:	add	r5, r3, r5, lsl #2
    b988:	vldmia	r2!, {d7}
    b98c:	vcvt.u32.f64	s14, d7
    b990:	vstmia	r3!, {s14}
    b994:	cmp	r3, r5
    b998:	bne	b988 <ReadUInt32Data.part.9+0xad0>
    b99c:	b	b518 <ReadUInt32Data.part.9+0x660>
    b9a0:	add	r4, sp, #24
    b9a4:	mov	r2, r5
    b9a8:	mov	r0, r4
    b9ac:	mov	r1, fp
    b9b0:	bl	1520 <fread@plt>
    b9b4:	cmp	r5, #0
    b9b8:	str	r0, [sp, #8]
    b9bc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    b9c0:	ldr	r3, [sp, #4]
    b9c4:	sub	r2, r4, #4
    b9c8:	add	r5, r3, r5, lsl #2
    b9cc:	ldr	r1, [r2, #4]!
    b9d0:	str	r1, [r3], #4
    b9d4:	cmp	r3, r5
    b9d8:	bne	b9cc <ReadUInt32Data.part.9+0xb14>
    b9dc:	b	b518 <ReadUInt32Data.part.9+0x660>
    b9e0:	add	r4, sp, #24
    b9e4:	mov	r2, r5
    b9e8:	mov	r0, r4
    b9ec:	mov	r1, fp
    b9f0:	bl	1520 <fread@plt>
    b9f4:	cmp	r5, #0
    b9f8:	str	r0, [sp, #8]
    b9fc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    ba00:	ldr	r3, [sp, #4]
    ba04:	sub	r2, r4, #2
    ba08:	add	r5, r3, r5, lsl #2
    ba0c:	ldrsh	r1, [r2, #2]!
    ba10:	str	r1, [r3], #4
    ba14:	cmp	r5, r3
    ba18:	bne	ba0c <ReadUInt32Data.part.9+0xb54>
    ba1c:	b	b518 <ReadUInt32Data.part.9+0x660>
    ba20:	add	r4, sp, #24
    ba24:	mov	r2, r5
    ba28:	mov	r0, r4
    ba2c:	mov	r1, fp
    ba30:	bl	1520 <fread@plt>
    ba34:	cmp	r5, #0
    ba38:	str	r0, [sp, #8]
    ba3c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    ba40:	ldr	r3, [sp, #4]
    ba44:	sub	r2, r4, #2
    ba48:	add	r5, r3, r5, lsl #2
    ba4c:	ldrh	r1, [r2, #2]!
    ba50:	str	r1, [r3], #4
    ba54:	cmp	r5, r3
    ba58:	bne	ba4c <ReadUInt32Data.part.9+0xb94>
    ba5c:	b	b518 <ReadUInt32Data.part.9+0x660>
    ba60:	add	r4, sp, #24
    ba64:	mov	r2, r5
    ba68:	mov	r0, r4
    ba6c:	mov	r1, fp
    ba70:	bl	1520 <fread@plt>
    ba74:	cmp	r5, #0
    ba78:	str	r0, [sp, #8]
    ba7c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    ba80:	ldr	r3, [sp, #4]
    ba84:	sub	r2, r4, #4
    ba88:	add	r5, r3, r5, lsl #2
    ba8c:	ldr	r1, [r2, #4]!
    ba90:	str	r1, [r3], #4
    ba94:	cmp	r5, r3
    ba98:	bne	ba8c <ReadUInt32Data.part.9+0xbd4>
    ba9c:	b	b518 <ReadUInt32Data.part.9+0x660>
    baa0:	add	r4, sp, #24
    baa4:	mov	r2, r5
    baa8:	mov	r0, r4
    baac:	mov	r1, fp
    bab0:	bl	1520 <fread@plt>
    bab4:	cmp	r5, #0
    bab8:	str	r0, [sp, #8]
    babc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bac0:	ldr	r6, [sp, #4]
    bac4:	add	r5, r6, r5, lsl #2
    bac8:	mov	r0, r4
    bacc:	add	r4, r4, #2
    bad0:	bl	1950 <Mat_uint16Swap>
    bad4:	str	r0, [r6], #4
    bad8:	cmp	r5, r6
    badc:	bne	bac8 <ReadUInt32Data.part.9+0xc10>
    bae0:	b	b518 <ReadUInt32Data.part.9+0x660>
    bae4:	add	r4, sp, #24
    bae8:	mov	r2, r5
    baec:	mov	r0, r4
    baf0:	mov	r1, fp
    baf4:	bl	1520 <fread@plt>
    baf8:	cmp	r5, #0
    bafc:	str	r0, [sp, #8]
    bb00:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bb04:	ldr	r6, [sp, #4]
    bb08:	add	r5, r6, r5, lsl #2
    bb0c:	mov	r0, r4
    bb10:	add	r4, r4, #8
    bb14:	bl	19a4 <Mat_doubleSwap>
    bb18:	vcvt.u32.f64	s0, d0
    bb1c:	vstmia	r6!, {s0}
    bb20:	cmp	r6, r5
    bb24:	bne	bb0c <ReadUInt32Data.part.9+0xc54>
    bb28:	b	b518 <ReadUInt32Data.part.9+0x660>
    bb2c:	add	r4, sp, #24
    bb30:	mov	r2, r5
    bb34:	mov	r0, r4
    bb38:	mov	r1, fp
    bb3c:	bl	1520 <fread@plt>
    bb40:	cmp	r5, #0
    bb44:	str	r0, [sp, #8]
    bb48:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bb4c:	ldr	r6, [sp, #4]
    bb50:	add	r5, r6, r5, lsl #2
    bb54:	mov	r0, r4
    bb58:	add	r4, r4, #4
    bb5c:	bl	18f8 <Mat_uint32Swap>
    bb60:	str	r0, [r6], #4
    bb64:	cmp	r6, r5
    bb68:	bne	bb54 <ReadUInt32Data.part.9+0xc9c>
    bb6c:	b	b518 <ReadUInt32Data.part.9+0x660>
    bb70:	add	r4, sp, #24
    bb74:	mov	r2, r5
    bb78:	mov	r0, r4
    bb7c:	mov	r1, fp
    bb80:	bl	1520 <fread@plt>
    bb84:	cmp	r5, #0
    bb88:	str	r0, [sp, #8]
    bb8c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bb90:	ldr	r6, [sp, #4]
    bb94:	add	r5, r6, r5, lsl #2
    bb98:	mov	r0, r4
    bb9c:	add	r4, r4, #4
    bba0:	bl	1974 <Mat_floatSwap>
    bba4:	vcvt.u32.f32	s0, s0
    bba8:	vstmia	r6!, {s0}
    bbac:	cmp	r6, r5
    bbb0:	bne	bb98 <ReadUInt32Data.part.9+0xce0>
    bbb4:	b	b518 <ReadUInt32Data.part.9+0x660>
    bbb8:	add	r4, sp, #24
    bbbc:	mov	r2, r5
    bbc0:	mov	r0, r4
    bbc4:	mov	r1, fp
    bbc8:	bl	1520 <fread@plt>
    bbcc:	cmp	r5, #0
    bbd0:	str	r0, [sp, #8]
    bbd4:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bbd8:	ldr	r6, [sp, #4]
    bbdc:	add	r5, r6, r5, lsl #2
    bbe0:	mov	r0, r4
    bbe4:	add	r4, r4, #4
    bbe8:	bl	18c4 <Mat_int32Swap>
    bbec:	str	r0, [r6], #4
    bbf0:	cmp	r5, r6
    bbf4:	bne	bbe0 <ReadUInt32Data.part.9+0xd28>
    bbf8:	b	b518 <ReadUInt32Data.part.9+0x660>
    bbfc:	add	r4, sp, #24
    bc00:	mov	r2, r5
    bc04:	mov	r0, r4
    bc08:	mov	r1, fp
    bc0c:	bl	1520 <fread@plt>
    bc10:	cmp	r5, #0
    bc14:	str	r0, [sp, #8]
    bc18:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bc1c:	ldr	r6, [sp, #4]
    bc20:	add	r5, r6, r5, lsl #2
    bc24:	mov	r0, r4
    bc28:	add	r4, r4, #2
    bc2c:	bl	192c <Mat_int16Swap>
    bc30:	str	r0, [r6], #4
    bc34:	cmp	r5, r6
    bc38:	bne	bc24 <ReadUInt32Data.part.9+0xd6c>
    bc3c:	b	b518 <ReadUInt32Data.part.9+0x660>
    bc40:	ldr	r5, [sp, #20]
    bc44:	sub	r3, r5, #256	; 0x100
    bc48:	sub	r3, r3, #1
    bc4c:	lsr	r3, r3, #8
    bc50:	add	r4, r3, #1
    bc54:	lsl	r8, r4, #8
    bc58:	cmp	r5, r8
    bc5c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bc60:	ldr	r3, [sp]
    bc64:	sub	r5, r5, r8
    bc68:	mov	r0, r6
    bc6c:	mov	r2, r5
    bc70:	mov	r1, fp
    bc74:	ldr	r3, [r3]
    bc78:	bl	1520 <fread@plt>
    bc7c:	add	r3, r7, r0
    bc80:	cmp	r5, #0
    bc84:	str	r3, [sp, #8]
    bc88:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bc8c:	ldr	r3, [sp, #4]
    bc90:	add	r5, r5, r8
    bc94:	ldr	r6, [sp, #12]
    bc98:	add	r4, r3, r4, lsl #10
    bc9c:	add	r5, r3, r5, lsl #2
    bca0:	mov	r0, r6
    bca4:	add	r6, r6, #4
    bca8:	bl	18f8 <Mat_uint32Swap>
    bcac:	str	r0, [r4], #4
    bcb0:	cmp	r5, r4
    bcb4:	bne	bca0 <ReadUInt32Data.part.9+0xde8>
    bcb8:	b	b518 <ReadUInt32Data.part.9+0x660>
    bcbc:	ldr	r5, [sp, #20]
    bcc0:	sub	r3, r5, #256	; 0x100
    bcc4:	sub	r3, r3, #1
    bcc8:	lsr	r3, r3, #8
    bccc:	add	r4, r3, #1
    bcd0:	lsl	r8, r4, #8
    bcd4:	cmp	r5, r8
    bcd8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bcdc:	ldr	r3, [sp]
    bce0:	sub	r5, r5, r8
    bce4:	mov	r0, r6
    bce8:	mov	r2, r5
    bcec:	mov	r1, fp
    bcf0:	ldr	r3, [r3]
    bcf4:	bl	1520 <fread@plt>
    bcf8:	add	r3, r7, r0
    bcfc:	cmp	r5, #0
    bd00:	str	r3, [sp, #8]
    bd04:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bd08:	ldr	r3, [sp, #4]
    bd0c:	add	r5, r5, r8
    bd10:	ldr	r6, [sp, #16]
    bd14:	add	r4, r3, r4, lsl #10
    bd18:	add	r5, r3, r5, lsl #2
    bd1c:	mov	r0, r6
    bd20:	add	r6, r6, #2
    bd24:	bl	1950 <Mat_uint16Swap>
    bd28:	str	r0, [r4], #4
    bd2c:	cmp	r5, r4
    bd30:	bne	bd1c <ReadUInt32Data.part.9+0xe64>
    bd34:	b	b518 <ReadUInt32Data.part.9+0x660>
    bd38:	add	r4, sp, #24
    bd3c:	mov	r2, r5
    bd40:	mov	r0, r4
    bd44:	mov	r1, fp
    bd48:	bl	1520 <fread@plt>
    bd4c:	cmp	r5, #0
    bd50:	ble	b564 <ReadUInt32Data.part.9+0x6ac>
    bd54:	ldr	r3, [sp, #4]
    bd58:	sub	r2, r4, #1
    bd5c:	add	r5, r3, r5, lsl #2
    bd60:	ldrsb	r1, [r2, #1]!
    bd64:	str	r1, [r3], #4
    bd68:	cmp	r5, r3
    bd6c:	bne	bd60 <ReadUInt32Data.part.9+0xea8>
    bd70:	b	b564 <ReadUInt32Data.part.9+0x6ac>
    bd74:	ldr	r5, [sp, #20]
    bd78:	sub	r3, r5, #256	; 0x100
    bd7c:	sub	r3, r3, #1
    bd80:	lsr	r3, r3, #8
    bd84:	add	r4, r3, #1
    bd88:	lsl	r8, r4, #8
    bd8c:	cmp	r5, r8
    bd90:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bd94:	ldr	r3, [sp]
    bd98:	sub	r5, r5, r8
    bd9c:	mov	r0, r6
    bda0:	mov	r2, r5
    bda4:	mov	r1, fp
    bda8:	ldr	r3, [r3]
    bdac:	bl	1520 <fread@plt>
    bdb0:	add	r3, r7, r0
    bdb4:	cmp	r5, #0
    bdb8:	str	r3, [sp, #8]
    bdbc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bdc0:	ldr	r3, [sp, #4]
    bdc4:	add	r5, r5, r8
    bdc8:	ldr	r6, [sp, #16]
    bdcc:	add	r4, r3, r4, lsl #10
    bdd0:	add	r5, r3, r5, lsl #2
    bdd4:	mov	r0, r6
    bdd8:	add	r6, r6, #4
    bddc:	bl	18c4 <Mat_int32Swap>
    bde0:	str	r0, [r4], #4
    bde4:	cmp	r5, r4
    bde8:	bne	bdd4 <ReadUInt32Data.part.9+0xf1c>
    bdec:	b	b518 <ReadUInt32Data.part.9+0x660>
    bdf0:	add	r4, sp, #24
    bdf4:	mov	r2, r5
    bdf8:	mov	r0, r4
    bdfc:	mov	r1, fp
    be00:	bl	1520 <fread@plt>
    be04:	cmp	r5, #0
    be08:	ble	b564 <ReadUInt32Data.part.9+0x6ac>
    be0c:	ldr	r3, [sp, #4]
    be10:	sub	r2, r4, #1
    be14:	add	r5, r3, r5, lsl #2
    be18:	ldrb	r1, [r2, #1]!
    be1c:	str	r1, [r3], #4
    be20:	cmp	r5, r3
    be24:	bne	be18 <ReadUInt32Data.part.9+0xf60>
    be28:	b	b564 <ReadUInt32Data.part.9+0x6ac>
    be2c:	ldr	r5, [sp, #20]
    be30:	sub	r3, r5, #256	; 0x100
    be34:	sub	r3, r3, #1
    be38:	lsr	r3, r3, #8
    be3c:	add	r4, r3, #1
    be40:	lsl	r8, r4, #8
    be44:	cmp	r5, r8
    be48:	ble	b518 <ReadUInt32Data.part.9+0x660>
    be4c:	ldr	r3, [sp]
    be50:	sub	r5, r5, r8
    be54:	mov	r0, r6
    be58:	mov	r2, r5
    be5c:	mov	r1, fp
    be60:	ldr	r3, [r3]
    be64:	bl	1520 <fread@plt>
    be68:	add	r3, r7, r0
    be6c:	cmp	r5, #0
    be70:	str	r3, [sp, #8]
    be74:	ble	b518 <ReadUInt32Data.part.9+0x660>
    be78:	ldr	r3, [sp, #4]
    be7c:	add	r5, r5, r8
    be80:	ldr	r6, [sp, #16]
    be84:	add	r4, r3, r4, lsl #10
    be88:	add	r5, r3, r5, lsl #2
    be8c:	mov	r0, r6
    be90:	add	r6, r6, #4
    be94:	bl	1974 <Mat_floatSwap>
    be98:	vcvt.u32.f32	s0, s0
    be9c:	vstmia	r4!, {s0}
    bea0:	cmp	r4, r5
    bea4:	bne	be8c <ReadUInt32Data.part.9+0xfd4>
    bea8:	b	b518 <ReadUInt32Data.part.9+0x660>
    beac:	ldr	r5, [sp, #20]
    beb0:	sub	r3, r5, #256	; 0x100
    beb4:	sub	r3, r3, #1
    beb8:	lsr	r3, r3, #8
    bebc:	add	r4, r3, #1
    bec0:	lsl	r8, r4, #8
    bec4:	cmp	r5, r8
    bec8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    becc:	ldr	r3, [sp]
    bed0:	sub	r5, r5, r8
    bed4:	mov	r0, r6
    bed8:	mov	r2, r5
    bedc:	mov	r1, fp
    bee0:	ldr	r3, [r3]
    bee4:	bl	1520 <fread@plt>
    bee8:	add	r3, r7, r0
    beec:	cmp	r5, #0
    bef0:	str	r3, [sp, #8]
    bef4:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bef8:	ldr	r3, [sp, #4]
    befc:	add	r5, r5, r8
    bf00:	ldr	r6, [sp, #16]
    bf04:	add	r4, r3, r4, lsl #10
    bf08:	add	r5, r3, r5, lsl #2
    bf0c:	mov	r0, r6
    bf10:	add	r6, r6, #8
    bf14:	bl	19a4 <Mat_doubleSwap>
    bf18:	vcvt.u32.f64	s0, d0
    bf1c:	vstmia	r4!, {s0}
    bf20:	cmp	r4, r5
    bf24:	bne	bf0c <ReadUInt32Data.part.9+0x1054>
    bf28:	b	b518 <ReadUInt32Data.part.9+0x660>
    bf2c:	ldr	r3, [sp]
    bf30:	ldr	r7, [r3, #20]
    bf34:	ldr	r3, [r3]
    bf38:	cmp	r7, #0
    bf3c:	beq	c3a0 <ReadUInt32Data.part.9+0x14e8>
    bf40:	cmp	r5, #256	; 0x100
    bf44:	ble	c62c <ReadUInt32Data.part.9+0x1774>
    bf48:	sub	r2, r5, #256	; 0x100
    bf4c:	mov	r7, #0
    bf50:	add	r4, sp, #2064	; 0x810
    bf54:	mov	r8, r7
    bf58:	str	r2, [sp, #16]
    bf5c:	add	r6, sp, #24
    bf60:	add	r4, r4, #8
    bf64:	ldr	r2, [sp, #4]
    bf68:	sub	r2, r2, #4
    bf6c:	str	r2, [sp, #12]
    bf70:	mov	r2, #256	; 0x100
    bf74:	mov	r1, fp
    bf78:	mov	r0, r6
    bf7c:	mov	r9, r6
    bf80:	bl	1520 <fread@plt>
    bf84:	ldr	sl, [sp, #12]
    bf88:	add	r8, r8, r0
    bf8c:	str	r8, [sp, #8]
    bf90:	str	r6, [sp, #20]
    bf94:	mov	r0, r9
    bf98:	add	r9, r9, #8
    bf9c:	bl	17ec <Mat_int64Swap>
    bfa0:	cmp	r4, r9
    bfa4:	str	r0, [sl, #4]!
    bfa8:	bne	bf94 <ReadUInt32Data.part.9+0x10dc>
    bfac:	ldr	r3, [sp, #12]
    bfb0:	add	r7, r7, #256	; 0x100
    bfb4:	add	r3, r3, #1024	; 0x400
    bfb8:	str	r3, [sp, #12]
    bfbc:	ldr	r3, [sp, #16]
    bfc0:	cmp	r3, r7
    bfc4:	ble	c484 <ReadUInt32Data.part.9+0x15cc>
    bfc8:	ldr	r3, [sp]
    bfcc:	ldr	r3, [r3]
    bfd0:	b	bf70 <ReadUInt32Data.part.9+0x10b8>
    bfd4:	mov	r5, sl
    bfd8:	mov	sl, r0
    bfdc:	str	ip, [sp, #8]
    bfe0:	sub	r3, r5, #256	; 0x100
    bfe4:	sub	r3, r3, #1
    bfe8:	lsr	r3, r3, #8
    bfec:	add	r4, r3, #1
    bff0:	lsl	r8, r4, #8
    bff4:	cmp	r5, r8
    bff8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    bffc:	ldr	r3, [sp]
    c000:	sub	r5, r5, r8
    c004:	mov	r0, r6
    c008:	mov	r2, r5
    c00c:	mov	r1, fp
    c010:	ldr	r3, [r3]
    c014:	bl	1520 <fread@plt>
    c018:	add	r3, r7, r0
    c01c:	cmp	r5, #0
    c020:	str	r3, [sp, #8]
    c024:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c028:	ldr	r3, [sp, #4]
    c02c:	add	r5, r5, r8
    c030:	add	r4, r3, r4, lsl #10
    c034:	add	r3, r3, r5, lsl #2
    c038:	ldr	r2, [sl, #4]!
    c03c:	str	r2, [r4], #4
    c040:	cmp	r3, r4
    c044:	bne	c038 <ReadUInt32Data.part.9+0x1180>
    c048:	b	b518 <ReadUInt32Data.part.9+0x660>
    c04c:	mov	r5, sl
    c050:	mov	sl, r0
    c054:	str	ip, [sp, #8]
    c058:	sub	r3, r5, #256	; 0x100
    c05c:	sub	r3, r3, #1
    c060:	lsr	r3, r3, #8
    c064:	add	r4, r3, #1
    c068:	lsl	r8, r4, #8
    c06c:	cmp	r5, r8
    c070:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c074:	ldr	r3, [sp]
    c078:	sub	r5, r5, r8
    c07c:	mov	r0, r6
    c080:	mov	r2, r5
    c084:	mov	r1, fp
    c088:	ldr	r3, [r3]
    c08c:	bl	1520 <fread@plt>
    c090:	add	r3, r7, r0
    c094:	cmp	r5, #0
    c098:	str	r3, [sp, #8]
    c09c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c0a0:	ldr	r3, [sp, #4]
    c0a4:	add	r5, r5, r8
    c0a8:	add	r4, r3, r4, lsl #10
    c0ac:	add	r3, r3, r5, lsl #2
    c0b0:	ldr	r2, [sl, #4]!
    c0b4:	str	r2, [r4], #4
    c0b8:	cmp	r3, r4
    c0bc:	bne	c0b0 <ReadUInt32Data.part.9+0x11f8>
    c0c0:	b	b518 <ReadUInt32Data.part.9+0x660>
    c0c4:	mov	r5, sl
    c0c8:	mov	sl, r0
    c0cc:	str	ip, [sp, #8]
    c0d0:	sub	r3, r5, #256	; 0x100
    c0d4:	sub	r3, r3, #1
    c0d8:	lsr	r3, r3, #8
    c0dc:	add	r4, r3, #1
    c0e0:	lsl	r8, r4, #8
    c0e4:	cmp	r5, r8
    c0e8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c0ec:	ldr	r3, [sp]
    c0f0:	sub	r5, r5, r8
    c0f4:	mov	r0, r6
    c0f8:	mov	r2, r5
    c0fc:	mov	r1, fp
    c100:	ldr	r3, [r3]
    c104:	bl	1520 <fread@plt>
    c108:	add	r3, r7, r0
    c10c:	cmp	r5, #0
    c110:	str	r3, [sp, #8]
    c114:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c118:	ldr	r3, [sp, #4]
    c11c:	add	r5, r5, r8
    c120:	add	r4, r3, r4, lsl #10
    c124:	add	r3, r3, r5, lsl #2
    c128:	ldrsh	r2, [sl, #2]!
    c12c:	str	r2, [r4], #4
    c130:	cmp	r3, r4
    c134:	bne	c128 <ReadUInt32Data.part.9+0x1270>
    c138:	b	b518 <ReadUInt32Data.part.9+0x660>
    c13c:	mov	r5, sl
    c140:	mov	sl, r0
    c144:	str	r1, [sp, #8]
    c148:	sub	r3, r5, #256	; 0x100
    c14c:	sub	r3, r3, #1
    c150:	lsr	r3, r3, #8
    c154:	add	r4, r3, #1
    c158:	lsl	r8, r4, #8
    c15c:	cmp	r5, r8
    c160:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c164:	ldr	r3, [sp]
    c168:	sub	r5, r5, r8
    c16c:	mov	r0, r6
    c170:	mov	r2, r5
    c174:	mov	r1, fp
    c178:	ldr	r3, [r3]
    c17c:	bl	1520 <fread@plt>
    c180:	add	r3, r7, r0
    c184:	cmp	r5, #0
    c188:	str	r3, [sp, #8]
    c18c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c190:	ldr	r3, [sp, #4]
    c194:	add	r5, r5, r8
    c198:	add	r4, r3, r4, lsl #10
    c19c:	add	r3, r3, r5, lsl #2
    c1a0:	vldmia	sl!, {s15}
    c1a4:	vcvt.u32.f32	s15, s15
    c1a8:	vstmia	r4!, {s15}
    c1ac:	cmp	r4, r3
    c1b0:	bne	c1a0 <ReadUInt32Data.part.9+0x12e8>
    c1b4:	b	b518 <ReadUInt32Data.part.9+0x660>
    c1b8:	mov	r5, sl
    c1bc:	mov	sl, r0
    c1c0:	str	r1, [sp, #8]
    c1c4:	sub	r3, r5, #256	; 0x100
    c1c8:	sub	r3, r3, #1
    c1cc:	lsr	r3, r3, #8
    c1d0:	add	r4, r3, #1
    c1d4:	lsl	r8, r4, #8
    c1d8:	cmp	r5, r8
    c1dc:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c1e0:	ldr	r3, [sp]
    c1e4:	sub	r5, r5, r8
    c1e8:	mov	r0, r6
    c1ec:	mov	r2, r5
    c1f0:	mov	r1, fp
    c1f4:	ldr	r3, [r3]
    c1f8:	bl	1520 <fread@plt>
    c1fc:	add	r3, r7, r0
    c200:	cmp	r5, #0
    c204:	str	r3, [sp, #8]
    c208:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c20c:	ldr	r3, [sp, #4]
    c210:	add	r5, r5, r8
    c214:	add	r4, r3, r4, lsl #10
    c218:	add	r3, r3, r5, lsl #2
    c21c:	vldmia	sl!, {d7}
    c220:	vcvt.u32.f64	s14, d7
    c224:	vstmia	r4!, {s14}
    c228:	cmp	r4, r3
    c22c:	bne	c21c <ReadUInt32Data.part.9+0x1364>
    c230:	b	b518 <ReadUInt32Data.part.9+0x660>
    c234:	mov	r5, sl
    c238:	mov	sl, r0
    c23c:	str	ip, [sp, #8]
    c240:	sub	r3, r5, #256	; 0x100
    c244:	sub	r3, r3, #1
    c248:	lsr	r3, r3, #8
    c24c:	add	r4, r3, #1
    c250:	lsl	r8, r4, #8
    c254:	cmp	r5, r8
    c258:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c25c:	ldr	r3, [sp]
    c260:	sub	r5, r5, r8
    c264:	mov	r0, r6
    c268:	mov	r2, r5
    c26c:	mov	r1, fp
    c270:	ldr	r3, [r3]
    c274:	bl	1520 <fread@plt>
    c278:	add	r3, r7, r0
    c27c:	cmp	r5, #0
    c280:	str	r3, [sp, #8]
    c284:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c288:	ldr	r3, [sp, #4]
    c28c:	add	r5, r5, r8
    c290:	add	r4, r3, r4, lsl #10
    c294:	add	r3, r3, r5, lsl #2
    c298:	ldrh	r2, [sl, #2]!
    c29c:	str	r2, [r4], #4
    c2a0:	cmp	r3, r4
    c2a4:	bne	c298 <ReadUInt32Data.part.9+0x13e0>
    c2a8:	b	b518 <ReadUInt32Data.part.9+0x660>
    c2ac:	ldr	r5, [sp, #20]
    c2b0:	sub	r3, r5, #256	; 0x100
    c2b4:	sub	r3, r3, #1
    c2b8:	lsr	r3, r3, #8
    c2bc:	add	r4, r3, #1
    c2c0:	lsl	r8, r4, #8
    c2c4:	cmp	r5, r8
    c2c8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c2cc:	ldr	r3, [sp]
    c2d0:	sub	r5, r5, r8
    c2d4:	mov	r0, r6
    c2d8:	mov	r2, r5
    c2dc:	mov	r1, fp
    c2e0:	ldr	r3, [r3]
    c2e4:	bl	1520 <fread@plt>
    c2e8:	add	r3, r7, r0
    c2ec:	cmp	r5, #0
    c2f0:	str	r3, [sp, #8]
    c2f4:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c2f8:	ldr	r3, [sp, #4]
    c2fc:	add	r5, r5, r8
    c300:	ldr	r6, [sp, #16]
    c304:	add	r4, r3, r4, lsl #10
    c308:	add	r5, r3, r5, lsl #2
    c30c:	mov	r0, r6
    c310:	add	r6, r6, #2
    c314:	bl	192c <Mat_int16Swap>
    c318:	str	r0, [r4], #4
    c31c:	cmp	r5, r4
    c320:	bne	c30c <ReadUInt32Data.part.9+0x1454>
    c324:	b	b518 <ReadUInt32Data.part.9+0x660>
    c328:	cmp	r5, #256	; 0x100
    c32c:	ble	c568 <ReadUInt32Data.part.9+0x16b0>
    c330:	sub	r2, r5, #256	; 0x100
    c334:	mov	sl, r7
    c338:	add	r6, sp, #24
    c33c:	add	r4, sp, #2064	; 0x810
    c340:	str	r2, [sp, #12]
    c344:	ldr	r2, [sp, #4]
    c348:	sub	r9, r2, #4
    c34c:	mov	r2, #256	; 0x100
    c350:	mov	r1, fp
    c354:	mov	r0, r6
    c358:	sub	r8, r6, #8
    c35c:	bl	1520 <fread@plt>
    c360:	add	r7, r7, r0
    c364:	mov	r3, r8
    c368:	mov	r2, r9
    c36c:	str	r7, [sp, #8]
    c370:	ldr	r1, [r3, #8]!
    c374:	cmp	r4, r3
    c378:	str	r1, [r2, #4]!
    c37c:	bne	c370 <ReadUInt32Data.part.9+0x14b8>
    c380:	ldr	r3, [sp, #12]
    c384:	add	sl, sl, #256	; 0x100
    c388:	add	r9, r9, #1024	; 0x400
    c38c:	cmp	sl, r3
    c390:	bge	c418 <ReadUInt32Data.part.9+0x1560>
    c394:	ldr	r3, [sp]
    c398:	ldr	r3, [r3]
    c39c:	b	c34c <ReadUInt32Data.part.9+0x1494>
    c3a0:	cmp	r5, #256	; 0x100
    c3a4:	ble	c5ec <ReadUInt32Data.part.9+0x1734>
    c3a8:	sub	r2, r5, #256	; 0x100
    c3ac:	mov	sl, r7
    c3b0:	add	r6, sp, #24
    c3b4:	add	r4, sp, #2064	; 0x810
    c3b8:	str	r2, [sp, #12]
    c3bc:	ldr	r2, [sp, #4]
    c3c0:	sub	r9, r2, #4
    c3c4:	mov	r2, #256	; 0x100
    c3c8:	mov	r1, fp
    c3cc:	mov	r0, r6
    c3d0:	sub	r8, r6, #8
    c3d4:	bl	1520 <fread@plt>
    c3d8:	add	r7, r7, r0
    c3dc:	mov	r3, r8
    c3e0:	mov	r2, r9
    c3e4:	str	r7, [sp, #8]
    c3e8:	ldr	r1, [r3, #8]!
    c3ec:	cmp	r4, r3
    c3f0:	str	r1, [r2, #4]!
    c3f4:	bne	c3e8 <ReadUInt32Data.part.9+0x1530>
    c3f8:	ldr	r3, [sp, #12]
    c3fc:	add	sl, sl, #256	; 0x100
    c400:	add	r9, r9, #1024	; 0x400
    c404:	cmp	r3, sl
    c408:	ble	c4fc <ReadUInt32Data.part.9+0x1644>
    c40c:	ldr	r3, [sp]
    c410:	ldr	r3, [r3]
    c414:	b	c3c4 <ReadUInt32Data.part.9+0x150c>
    c418:	sub	r3, r5, #256	; 0x100
    c41c:	sub	r3, r3, #1
    c420:	lsr	r3, r3, #8
    c424:	add	r4, r3, #1
    c428:	lsl	r9, r4, #8
    c42c:	cmp	r5, r9
    c430:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c434:	ldr	r3, [sp]
    c438:	sub	r5, r5, r9
    c43c:	mov	r0, r6
    c440:	mov	r2, r5
    c444:	mov	r1, fp
    c448:	ldr	r3, [r3]
    c44c:	bl	1520 <fread@plt>
    c450:	add	r3, r7, r0
    c454:	cmp	r5, #0
    c458:	str	r3, [sp, #8]
    c45c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c460:	ldr	r3, [sp, #4]
    c464:	add	r5, r9, r5
    c468:	add	r4, r3, r4, lsl #10
    c46c:	add	r3, r3, r5, lsl #2
    c470:	ldr	r2, [r8, #8]!
    c474:	str	r2, [r4], #4
    c478:	cmp	r3, r4
    c47c:	bne	c470 <ReadUInt32Data.part.9+0x15b8>
    c480:	b	b518 <ReadUInt32Data.part.9+0x660>
    c484:	sub	r3, r5, #256	; 0x100
    c488:	sub	r3, r3, #1
    c48c:	lsr	r3, r3, #8
    c490:	add	r4, r3, #1
    c494:	lsl	r7, r4, #8
    c498:	cmp	r5, r7
    c49c:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c4a0:	ldr	r3, [sp]
    c4a4:	sub	r5, r5, r7
    c4a8:	mov	r0, r6
    c4ac:	mov	r2, r5
    c4b0:	mov	r1, fp
    c4b4:	ldr	r3, [r3]
    c4b8:	bl	1520 <fread@plt>
    c4bc:	add	r3, r8, r0
    c4c0:	cmp	r5, #0
    c4c4:	str	r3, [sp, #8]
    c4c8:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c4cc:	ldr	r3, [sp, #4]
    c4d0:	add	r5, r5, r7
    c4d4:	ldr	r6, [sp, #20]
    c4d8:	add	r4, r3, r4, lsl #10
    c4dc:	add	r5, r3, r5, lsl #2
    c4e0:	mov	r0, r6
    c4e4:	add	r6, r6, #8
    c4e8:	bl	17ec <Mat_int64Swap>
    c4ec:	str	r0, [r4], #4
    c4f0:	cmp	r4, r5
    c4f4:	bne	c4e0 <ReadUInt32Data.part.9+0x1628>
    c4f8:	b	b518 <ReadUInt32Data.part.9+0x660>
    c4fc:	sub	r3, r5, #256	; 0x100
    c500:	sub	r3, r3, #1
    c504:	lsr	r3, r3, #8
    c508:	add	r4, r3, #1
    c50c:	lsl	r9, r4, #8
    c510:	cmp	r5, r9
    c514:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c518:	ldr	r3, [sp]
    c51c:	sub	r5, r5, r9
    c520:	mov	r0, r6
    c524:	mov	r2, r5
    c528:	mov	r1, fp
    c52c:	ldr	r3, [r3]
    c530:	bl	1520 <fread@plt>
    c534:	add	r3, r7, r0
    c538:	cmp	r5, #0
    c53c:	str	r3, [sp, #8]
    c540:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c544:	ldr	r3, [sp, #4]
    c548:	add	r5, r5, r9
    c54c:	add	r4, r3, r4, lsl #10
    c550:	add	r3, r3, r5, lsl #2
    c554:	ldr	r2, [r8, #8]!
    c558:	str	r2, [r4], #4
    c55c:	cmp	r3, r4
    c560:	bne	c554 <ReadUInt32Data.part.9+0x169c>
    c564:	b	b518 <ReadUInt32Data.part.9+0x660>
    c568:	add	r4, sp, #24
    c56c:	mov	r2, r5
    c570:	mov	r0, r4
    c574:	mov	r1, fp
    c578:	bl	1520 <fread@plt>
    c57c:	cmp	r5, #0
    c580:	str	r0, [sp, #8]
    c584:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c588:	ldr	r3, [sp, #4]
    c58c:	sub	r4, r4, #8
    c590:	add	r5, r3, r5, lsl #2
    c594:	ldr	r2, [r4, #8]!
    c598:	str	r2, [r3], #4
    c59c:	cmp	r5, r3
    c5a0:	bne	c594 <ReadUInt32Data.part.9+0x16dc>
    c5a4:	b	b518 <ReadUInt32Data.part.9+0x660>
    c5a8:	add	r4, sp, #24
    c5ac:	mov	r2, r5
    c5b0:	mov	r0, r4
    c5b4:	mov	r1, fp
    c5b8:	bl	1520 <fread@plt>
    c5bc:	cmp	r5, #0
    c5c0:	str	r0, [sp, #8]
    c5c4:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c5c8:	ldr	r6, [sp, #4]
    c5cc:	add	r5, r6, r5, lsl #2
    c5d0:	mov	r0, r4
    c5d4:	add	r4, r4, #8
    c5d8:	bl	1858 <Mat_uint64Swap>
    c5dc:	str	r0, [r6], #4
    c5e0:	cmp	r5, r6
    c5e4:	bne	c5d0 <ReadUInt32Data.part.9+0x1718>
    c5e8:	b	b518 <ReadUInt32Data.part.9+0x660>
    c5ec:	add	r4, sp, #24
    c5f0:	mov	r2, r5
    c5f4:	mov	r0, r4
    c5f8:	mov	r1, fp
    c5fc:	bl	1520 <fread@plt>
    c600:	cmp	r5, #0
    c604:	str	r0, [sp, #8]
    c608:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c60c:	ldr	r3, [sp, #4]
    c610:	sub	r4, r4, #8
    c614:	add	r5, r3, r5, lsl #2
    c618:	ldr	r2, [r4, #8]!
    c61c:	str	r2, [r3], #4
    c620:	cmp	r5, r3
    c624:	bne	c618 <ReadUInt32Data.part.9+0x1760>
    c628:	b	b518 <ReadUInt32Data.part.9+0x660>
    c62c:	add	r4, sp, #24
    c630:	mov	r2, r5
    c634:	mov	r0, r4
    c638:	mov	r1, fp
    c63c:	bl	1520 <fread@plt>
    c640:	cmp	r5, #0
    c644:	str	r0, [sp, #8]
    c648:	ble	b518 <ReadUInt32Data.part.9+0x660>
    c64c:	ldr	r6, [sp, #4]
    c650:	add	r5, r6, r5, lsl #2
    c654:	mov	r0, r4
    c658:	add	r4, r4, #8
    c65c:	bl	17ec <Mat_int64Swap>
    c660:	str	r0, [r6], #4
    c664:	cmp	r6, r5
    c668:	bne	c654 <ReadUInt32Data.part.9+0x179c>
    c66c:	b	b518 <ReadUInt32Data.part.9+0x660>

0000c670 <ReadInt16Data.part.11>:
    c670:	strd	r4, [sp, #-36]!	; 0xffffffdc
    c674:	mov	r4, r2
    c678:	mov	r5, r3
    c67c:	strd	r6, [sp, #8]
    c680:	strd	r8, [sp, #16]
    c684:	strd	sl, [sp, #24]
    c688:	str	lr, [sp, #32]
    c68c:	sub	sp, sp, #2064	; 0x810
    c690:	sub	sp, sp, #12
    c694:	strd	r0, [sp]
    c698:	mov	r0, r2
    c69c:	bl	1598 <Mat_SizeOf@plt>
    c6a0:	sub	r3, r4, #1
    c6a4:	mov	r7, r0
    c6a8:	cmp	r3, #8
    c6ac:	addls	pc, pc, r3, lsl #2
    c6b0:	b	cc20 <ReadInt16Data.part.11+0x5b0>
    c6b4:	b	c790 <ReadInt16Data.part.11+0x120>
    c6b8:	b	c8cc <ReadInt16Data.part.11+0x25c>
    c6bc:	b	ca0c <ReadInt16Data.part.11+0x39c>
    c6c0:	b	c820 <ReadInt16Data.part.11+0x1b0>
    c6c4:	b	cab8 <ReadInt16Data.part.11+0x448>
    c6c8:	b	c95c <ReadInt16Data.part.11+0x2ec>
    c6cc:	b	cb68 <ReadInt16Data.part.11+0x4f8>
    c6d0:	b	cc20 <ReadInt16Data.part.11+0x5b0>
    c6d4:	b	c6d8 <ReadInt16Data.part.11+0x68>
    c6d8:	ldr	r3, [sp]
    c6dc:	ldr	r9, [r3, #20]
    c6e0:	ldr	r3, [r3]
    c6e4:	cmp	r9, #0
    c6e8:	beq	cfbc <ReadInt16Data.part.11+0x94c>
    c6ec:	cmp	r5, #256	; 0x100
    c6f0:	ble	d308 <ReadInt16Data.part.11+0xc98>
    c6f4:	ldr	r1, [sp, #4]
    c6f8:	sub	r4, r5, #256	; 0x100
    c6fc:	mov	r9, #0
    c700:	sub	r4, r4, #1
    c704:	add	r6, sp, #24
    c708:	str	r5, [sp, #20]
    c70c:	lsr	r0, r4, #8
    c710:	add	r4, sp, #2064	; 0x810
    c714:	add	r4, r4, #8
    c718:	add	r2, r1, #508	; 0x1fc
    c71c:	sub	r8, r1, #2
    c720:	str	r0, [sp, #16]
    c724:	add	r2, r2, #2
    c728:	add	r2, r2, r0, lsl #9
    c72c:	str	r2, [sp, #12]
    c730:	mov	r2, #256	; 0x100
    c734:	mov	r1, r7
    c738:	mov	r0, r6
    c73c:	mov	fp, r6
    c740:	bl	1520 <fread@plt>
    c744:	add	r9, r9, r0
    c748:	mov	sl, r8
    c74c:	mov	r5, r6
    c750:	str	r9, [sp, #8]
    c754:	mov	r0, r5
    c758:	add	r5, r5, #8
    c75c:	bl	19a4 <Mat_doubleSwap>
    c760:	vcvt.s32.f64	s0, d0
    c764:	cmp	r5, r4
    c768:	vmov	r3, s0
    c76c:	strh	r3, [sl, #2]!
    c770:	bne	c754 <ReadInt16Data.part.11+0xe4>
    c774:	ldr	r3, [sp, #12]
    c778:	add	r8, r8, #512	; 0x200
    c77c:	cmp	r8, r3
    c780:	beq	d6bc <ReadInt16Data.part.11+0x104c>
    c784:	ldr	r3, [sp]
    c788:	ldr	r3, [r3]
    c78c:	b	c730 <ReadInt16Data.part.11+0xc0>
    c790:	ldr	r2, [sp]
    c794:	cmp	r5, #256	; 0x100
    c798:	ldr	r3, [r2]
    c79c:	ble	d554 <ReadInt16Data.part.11+0xee4>
    c7a0:	sub	r4, r5, #256	; 0x100
    c7a4:	add	r6, sp, #24
    c7a8:	ldr	r1, [sp, #4]
    c7ac:	sub	r4, r4, #1
    c7b0:	mov	sl, r5
    c7b4:	lsr	r0, r4, #8
    c7b8:	mov	r9, #0
    c7bc:	add	r4, r6, #255	; 0xff
    c7c0:	mov	r5, r2
    c7c4:	str	r0, [sp, #8]
    c7c8:	add	fp, r1, #508	; 0x1fc
    c7cc:	sub	r8, r1, #2
    c7d0:	add	fp, fp, #2
    c7d4:	add	fp, fp, r0, lsl #9
    c7d8:	mov	r2, #256	; 0x100
    c7dc:	mov	r1, r7
    c7e0:	mov	r0, r6
    c7e4:	bl	1520 <fread@plt>
    c7e8:	add	r9, r9, r0
    c7ec:	sub	ip, r6, #1
    c7f0:	mov	r0, r9
    c7f4:	mov	r3, ip
    c7f8:	mov	r2, r8
    c7fc:	ldrsb	r1, [r3, #1]!
    c800:	cmp	r3, r4
    c804:	strh	r1, [r2, #2]!
    c808:	bne	c7fc <ReadInt16Data.part.11+0x18c>
    c80c:	add	r8, r8, #512	; 0x200
    c810:	cmp	fp, r8
    c814:	beq	cd20 <ReadInt16Data.part.11+0x6b0>
    c818:	ldr	r3, [r5]
    c81c:	b	c7d8 <ReadInt16Data.part.11+0x168>
    c820:	ldr	r3, [sp]
    c824:	ldr	r9, [r3, #20]
    c828:	ldr	r3, [r3]
    c82c:	cmp	r9, #0
    c830:	beq	ceb4 <ReadInt16Data.part.11+0x844>
    c834:	cmp	r5, #256	; 0x100
    c838:	ble	d2c4 <ReadInt16Data.part.11+0xc54>
    c83c:	ldr	r1, [sp, #4]
    c840:	sub	r4, r5, #256	; 0x100
    c844:	mov	r9, #0
    c848:	sub	r4, r4, #1
    c84c:	add	r6, sp, #24
    c850:	str	r5, [sp, #20]
    c854:	lsr	r0, r4, #8
    c858:	add	r4, sp, #536	; 0x218
    c85c:	add	r2, r1, #508	; 0x1fc
    c860:	sub	r8, r1, #2
    c864:	str	r0, [sp, #16]
    c868:	add	r2, r2, #2
    c86c:	add	r2, r2, r0, lsl #9
    c870:	str	r2, [sp, #12]
    c874:	mov	r2, #256	; 0x100
    c878:	mov	r1, r7
    c87c:	mov	r0, r6
    c880:	mov	fp, r6
    c884:	bl	1520 <fread@plt>
    c888:	add	r9, r9, r0
    c88c:	mov	sl, r8
    c890:	mov	r5, r6
    c894:	str	r9, [sp, #8]
    c898:	mov	r0, r5
    c89c:	add	r5, r5, #2
    c8a0:	bl	1950 <Mat_uint16Swap>
    c8a4:	cmp	r4, r5
    c8a8:	strh	r0, [sl, #2]!
    c8ac:	bne	c898 <ReadInt16Data.part.11+0x228>
    c8b0:	ldr	r3, [sp, #12]
    c8b4:	add	r8, r8, #512	; 0x200
    c8b8:	cmp	r3, r8
    c8bc:	beq	d4e0 <ReadInt16Data.part.11+0xe70>
    c8c0:	ldr	r3, [sp]
    c8c4:	ldr	r3, [r3]
    c8c8:	b	c874 <ReadInt16Data.part.11+0x204>
    c8cc:	ldr	r2, [sp]
    c8d0:	cmp	r5, #256	; 0x100
    c8d4:	ldr	r3, [r2]
    c8d8:	ble	d604 <ReadInt16Data.part.11+0xf94>
    c8dc:	sub	r4, r5, #256	; 0x100
    c8e0:	add	r6, sp, #24
    c8e4:	ldr	r1, [sp, #4]
    c8e8:	sub	r4, r4, #1
    c8ec:	mov	sl, r5
    c8f0:	lsr	r0, r4, #8
    c8f4:	mov	r9, #0
    c8f8:	add	r4, r6, #255	; 0xff
    c8fc:	mov	r5, r2
    c900:	str	r0, [sp, #8]
    c904:	add	fp, r1, #508	; 0x1fc
    c908:	sub	r8, r1, #2
    c90c:	add	fp, fp, #2
    c910:	add	fp, fp, r0, lsl #9
    c914:	mov	r2, #256	; 0x100
    c918:	mov	r1, r7
    c91c:	mov	r0, r6
    c920:	bl	1520 <fread@plt>
    c924:	add	r9, r9, r0
    c928:	sub	ip, r6, #1
    c92c:	mov	r0, r9
    c930:	mov	r3, ip
    c934:	mov	r2, r8
    c938:	ldrb	r1, [r3, #1]!
    c93c:	cmp	r4, r3
    c940:	strh	r1, [r2, #2]!
    c944:	bne	c938 <ReadInt16Data.part.11+0x2c8>
    c948:	add	r8, r8, #512	; 0x200
    c94c:	cmp	fp, r8
    c950:	beq	cd44 <ReadInt16Data.part.11+0x6d4>
    c954:	ldr	r3, [r5]
    c958:	b	c914 <ReadInt16Data.part.11+0x2a4>
    c95c:	ldr	r3, [sp]
    c960:	ldr	r9, [r3, #20]
    c964:	ldr	r3, [r3]
    c968:	cmp	r9, #0
    c96c:	beq	cf38 <ReadInt16Data.part.11+0x8c8>
    c970:	cmp	r5, #256	; 0x100
    c974:	ble	d354 <ReadInt16Data.part.11+0xce4>
    c978:	ldr	r1, [sp, #4]
    c97c:	sub	r4, r5, #256	; 0x100
    c980:	mov	r9, #0
    c984:	sub	r4, r4, #1
    c988:	add	r6, sp, #24
    c98c:	str	r5, [sp, #20]
    c990:	lsr	r0, r4, #8
    c994:	add	r4, sp, #1040	; 0x410
    c998:	add	r4, r4, #8
    c99c:	add	r2, r1, #508	; 0x1fc
    c9a0:	sub	r8, r1, #2
    c9a4:	str	r0, [sp, #16]
    c9a8:	add	r2, r2, #2
    c9ac:	add	r2, r2, r0, lsl #9
    c9b0:	str	r2, [sp, #12]
    c9b4:	mov	r2, #256	; 0x100
    c9b8:	mov	r1, r7
    c9bc:	mov	r0, r6
    c9c0:	mov	fp, r6
    c9c4:	bl	1520 <fread@plt>
    c9c8:	add	r9, r9, r0
    c9cc:	mov	sl, r8
    c9d0:	mov	r5, r6
    c9d4:	str	r9, [sp, #8]
    c9d8:	mov	r0, r5
    c9dc:	add	r5, r5, #4
    c9e0:	bl	18f8 <Mat_uint32Swap>
    c9e4:	cmp	r5, r4
    c9e8:	strh	r0, [sl, #2]!
    c9ec:	bne	c9d8 <ReadInt16Data.part.11+0x368>
    c9f0:	ldr	r3, [sp, #12]
    c9f4:	add	r8, r8, #512	; 0x200
    c9f8:	cmp	r8, r3
    c9fc:	beq	d46c <ReadInt16Data.part.11+0xdfc>
    ca00:	ldr	r3, [sp]
    ca04:	ldr	r3, [r3]
    ca08:	b	c9b4 <ReadInt16Data.part.11+0x344>
    ca0c:	ldr	r3, [sp]
    ca10:	ldr	r9, [r3, #20]
    ca14:	ldr	r3, [r3]
    ca18:	cmp	r9, #0
    ca1c:	beq	cdac <ReadInt16Data.part.11+0x73c>
    ca20:	cmp	r5, #256	; 0x100
    ca24:	ble	d428 <ReadInt16Data.part.11+0xdb8>
    ca28:	ldr	r1, [sp, #4]
    ca2c:	sub	r4, r5, #256	; 0x100
    ca30:	mov	r9, #0
    ca34:	sub	r4, r4, #1
    ca38:	add	r6, sp, #24
    ca3c:	str	r5, [sp, #20]
    ca40:	lsr	r0, r4, #8
    ca44:	add	r4, sp, #536	; 0x218
    ca48:	add	r2, r1, #508	; 0x1fc
    ca4c:	sub	r8, r1, #2
    ca50:	str	r0, [sp, #16]
    ca54:	add	r2, r2, #2
    ca58:	add	r2, r2, r0, lsl #9
    ca5c:	str	r2, [sp, #12]
    ca60:	mov	r2, #256	; 0x100
    ca64:	mov	r1, r7
    ca68:	mov	r0, r6
    ca6c:	mov	fp, r6
    ca70:	bl	1520 <fread@plt>
    ca74:	add	r9, r9, r0
    ca78:	mov	sl, r8
    ca7c:	mov	r5, r6
    ca80:	str	r9, [sp, #8]
    ca84:	mov	r0, r5
    ca88:	add	r5, r5, #2
    ca8c:	bl	192c <Mat_int16Swap>
    ca90:	cmp	r4, r5
    ca94:	strh	r0, [sl, #2]!
    ca98:	bne	ca84 <ReadInt16Data.part.11+0x414>
    ca9c:	ldr	r3, [sp, #12]
    caa0:	add	r8, r8, #512	; 0x200
    caa4:	cmp	r3, r8
    caa8:	beq	da98 <ReadInt16Data.part.11+0x1428>
    caac:	ldr	r3, [sp]
    cab0:	ldr	r3, [r3]
    cab4:	b	ca60 <ReadInt16Data.part.11+0x3f0>
    cab8:	ldr	r3, [sp]
    cabc:	ldr	r9, [r3, #20]
    cac0:	ldr	r3, [r3]
    cac4:	cmp	r9, #0
    cac8:	beq	ce30 <ReadInt16Data.part.11+0x7c0>
    cacc:	cmp	r5, #256	; 0x100
    cad0:	ble	d3e4 <ReadInt16Data.part.11+0xd74>
    cad4:	ldr	r1, [sp, #4]
    cad8:	sub	r8, r5, #256	; 0x100
    cadc:	add	r4, sp, #1040	; 0x410
    cae0:	sub	r8, r8, #1
    cae4:	mov	r9, #0
    cae8:	str	r5, [sp, #20]
    caec:	lsr	r0, r8, #8
    caf0:	add	r6, sp, #24
    caf4:	add	r4, r4, #8
    caf8:	add	r2, r1, #508	; 0x1fc
    cafc:	sub	r8, r1, #2
    cb00:	str	r0, [sp, #16]
    cb04:	add	r2, r2, #2
    cb08:	add	r2, r2, r0, lsl #9
    cb0c:	str	r2, [sp, #12]
    cb10:	mov	r2, #256	; 0x100
    cb14:	mov	r1, r7
    cb18:	mov	r0, r6
    cb1c:	mov	sl, r8
    cb20:	bl	1520 <fread@plt>
    cb24:	add	r9, r9, r0
    cb28:	mov	r5, r6
    cb2c:	str	r6, [sp, #8]
    cb30:	mov	fp, r9
    cb34:	mov	r0, r5
    cb38:	add	r5, r5, #4
    cb3c:	bl	18c4 <Mat_int32Swap>
    cb40:	cmp	r5, r4
    cb44:	strh	r0, [sl, #2]!
    cb48:	bne	cb34 <ReadInt16Data.part.11+0x4c4>
    cb4c:	ldr	r3, [sp, #12]
    cb50:	add	r8, r8, #512	; 0x200
    cb54:	cmp	r3, r8
    cb58:	beq	d590 <ReadInt16Data.part.11+0xf20>
    cb5c:	ldr	r3, [sp]
    cb60:	ldr	r3, [r3]
    cb64:	b	cb10 <ReadInt16Data.part.11+0x4a0>
    cb68:	ldr	r3, [sp]
    cb6c:	ldr	r9, [r3, #20]
    cb70:	ldr	r3, [r3]
    cb74:	cmp	r9, #0
    cb78:	beq	d04c <ReadInt16Data.part.11+0x9dc>
    cb7c:	cmp	r5, #256	; 0x100
    cb80:	ble	d398 <ReadInt16Data.part.11+0xd28>
    cb84:	ldr	r1, [sp, #4]
    cb88:	sub	r4, r5, #256	; 0x100
    cb8c:	mov	r9, #0
    cb90:	sub	r4, r4, #1
    cb94:	add	r6, sp, #24
    cb98:	str	r5, [sp, #20]
    cb9c:	lsr	r0, r4, #8
    cba0:	add	r4, sp, #1040	; 0x410
    cba4:	add	r4, r4, #8
    cba8:	add	r2, r1, #508	; 0x1fc
    cbac:	sub	r8, r1, #2
    cbb0:	str	r0, [sp, #16]
    cbb4:	add	r2, r2, #2
    cbb8:	add	r2, r2, r0, lsl #9
    cbbc:	str	r2, [sp, #12]
    cbc0:	mov	r2, #256	; 0x100
    cbc4:	mov	r1, r7
    cbc8:	mov	r0, r6
    cbcc:	mov	fp, r6
    cbd0:	bl	1520 <fread@plt>
    cbd4:	add	r9, r9, r0
    cbd8:	mov	sl, r8
    cbdc:	mov	r5, r6
    cbe0:	str	r9, [sp, #8]
    cbe4:	mov	r0, r5
    cbe8:	add	r5, r5, #4
    cbec:	bl	1974 <Mat_floatSwap>
    cbf0:	vcvt.s32.f32	s0, s0
    cbf4:	cmp	r5, r4
    cbf8:	vmov	r3, s0
    cbfc:	strh	r3, [sl, #2]!
    cc00:	bne	cbe4 <ReadInt16Data.part.11+0x574>
    cc04:	ldr	r3, [sp, #12]
    cc08:	add	r8, r8, #512	; 0x200
    cc0c:	cmp	r8, r3
    cc10:	beq	d640 <ReadInt16Data.part.11+0xfd0>
    cc14:	ldr	r3, [sp]
    cc18:	ldr	r3, [r3]
    cc1c:	b	cbc0 <ReadInt16Data.part.11+0x550>
    cc20:	cmp	r4, #12
    cc24:	beq	d738 <ReadInt16Data.part.11+0x10c8>
    cc28:	cmp	r4, #13
    cc2c:	movne	r0, #0
    cc30:	bne	cd00 <ReadInt16Data.part.11+0x690>
    cc34:	ldr	r3, [sp]
    cc38:	ldr	r8, [r3, #20]
    cc3c:	ldr	r3, [r3]
    cc40:	cmp	r8, #0
    cc44:	beq	db0c <ReadInt16Data.part.11+0x149c>
    cc48:	cmp	r5, #256	; 0x100
    cc4c:	ble	ddcc <ReadInt16Data.part.11+0x175c>
    cc50:	ldr	r1, [sp, #4]
    cc54:	sub	r4, r5, #256	; 0x100
    cc58:	mov	r9, #0
    cc5c:	sub	r4, r4, #1
    cc60:	add	r6, sp, #24
    cc64:	str	r5, [sp, #20]
    cc68:	lsr	r0, r4, #8
    cc6c:	add	r4, sp, #2064	; 0x810
    cc70:	add	r4, r4, #8
    cc74:	add	r2, r1, #508	; 0x1fc
    cc78:	sub	sl, r1, #2
    cc7c:	str	r0, [sp, #12]
    cc80:	add	r2, r2, #2
    cc84:	add	r2, r2, r0, lsl #9
    cc88:	str	r2, [sp, #8]
    cc8c:	mov	r2, #256	; 0x100
    cc90:	mov	r1, r7
    cc94:	mov	r0, r6
    cc98:	mov	r5, sl
    cc9c:	bl	1520 <fread@plt>
    cca0:	add	r9, r9, r0
    cca4:	mov	r8, r6
    cca8:	str	r6, [sp, #16]
    ccac:	mov	fp, r9
    ccb0:	mov	r0, r8
    ccb4:	add	r8, r8, #8
    ccb8:	bl	1858 <Mat_uint64Swap>
    ccbc:	cmp	r4, r8
    ccc0:	strh	r0, [r5, #2]!
    ccc4:	bne	ccb0 <ReadInt16Data.part.11+0x640>
    ccc8:	ldr	r3, [sp, #8]
    cccc:	add	sl, sl, #512	; 0x200
    ccd0:	cmp	r3, sl
    ccd4:	beq	cce4 <ReadInt16Data.part.11+0x674>
    ccd8:	ldr	r3, [sp]
    ccdc:	ldr	r3, [r3]
    cce0:	b	cc8c <ReadInt16Data.part.11+0x61c>
    cce4:	ldr	r3, [sp, #12]
    cce8:	ldr	r5, [sp, #20]
    ccec:	add	r4, r3, #1
    ccf0:	lsl	r8, r4, #8
    ccf4:	cmp	r5, r8
    ccf8:	bgt	de54 <ReadInt16Data.part.11+0x17e4>
    ccfc:	mul	r0, fp, r7
    cd00:	add	sp, sp, #2064	; 0x810
    cd04:	add	sp, sp, #12
    cd08:	ldrd	r4, [sp]
    cd0c:	ldrd	r6, [sp, #8]
    cd10:	ldrd	r8, [sp, #16]
    cd14:	ldrd	sl, [sp, #24]
    cd18:	add	sp, sp, #32
    cd1c:	pop	{pc}		; (ldr pc, [sp], #4)
    cd20:	ldr	r3, [sp, #8]
    cd24:	mov	r5, sl
    cd28:	mov	sl, ip
    cd2c:	add	r4, r3, #1
    cd30:	lsl	r8, r4, #8
    cd34:	cmp	r5, r8
    cd38:	bgt	d0dc <ReadInt16Data.part.11+0xa6c>
    cd3c:	mul	r0, r0, r7
    cd40:	b	cd00 <ReadInt16Data.part.11+0x690>
    cd44:	ldr	r3, [sp, #8]
    cd48:	mov	r5, sl
    cd4c:	mov	sl, ip
    cd50:	add	r4, r3, #1
    cd54:	lsl	r8, r4, #8
    cd58:	cmp	r5, r8
    cd5c:	ble	cd3c <ReadInt16Data.part.11+0x6cc>
    cd60:	ldr	r3, [sp]
    cd64:	sub	r5, r5, r8
    cd68:	mov	r0, r6
    cd6c:	mov	r2, r5
    cd70:	mov	r1, r7
    cd74:	ldr	r3, [r3]
    cd78:	bl	1520 <fread@plt>
    cd7c:	cmp	r5, #0
    cd80:	add	r0, r9, r0
    cd84:	ble	cd3c <ReadInt16Data.part.11+0x6cc>
    cd88:	ldr	r3, [sp, #4]
    cd8c:	add	r5, r5, r8
    cd90:	add	r4, r3, r4, lsl #9
    cd94:	add	r3, r3, r5, lsl #1
    cd98:	ldrb	r2, [sl, #1]!
    cd9c:	strh	r2, [r4], #2
    cda0:	cmp	r3, r4
    cda4:	bne	cd98 <ReadInt16Data.part.11+0x728>
    cda8:	b	cd3c <ReadInt16Data.part.11+0x6cc>
    cdac:	cmp	r5, #256	; 0x100
    cdb0:	ble	d200 <ReadInt16Data.part.11+0xb90>
    cdb4:	ldr	r0, [sp, #4]
    cdb8:	sub	r2, r5, #256	; 0x100
    cdbc:	movw	r4, #510	; 0x1fe
    cdc0:	sub	r2, r2, #1
    cdc4:	mov	fp, r5
    cdc8:	lsr	r2, r2, #8
    cdcc:	ldr	r5, [sp]
    cdd0:	add	r6, sp, #24
    cdd4:	add	r1, r0, r4
    cdd8:	sub	r8, r0, #2
    cddc:	str	r2, [sp, #12]
    cde0:	add	sl, r1, r2, lsl #9
    cde4:	add	r4, r6, r4
    cde8:	mov	r2, #256	; 0x100
    cdec:	mov	r1, r7
    cdf0:	mov	r0, r6
    cdf4:	bl	1520 <fread@plt>
    cdf8:	add	r9, r9, r0
    cdfc:	sub	r0, r6, #2
    ce00:	mov	ip, r9
    ce04:	mov	r3, r0
    ce08:	mov	r2, r8
    ce0c:	ldrh	r1, [r3, #2]!
    ce10:	cmp	r4, r3
    ce14:	strh	r1, [r2, #2]!
    ce18:	bne	ce0c <ReadInt16Data.part.11+0x79c>
    ce1c:	add	r8, r8, #512	; 0x200
    ce20:	cmp	sl, r8
    ce24:	beq	d8c8 <ReadInt16Data.part.11+0x1258>
    ce28:	ldr	r3, [r5]
    ce2c:	b	cde8 <ReadInt16Data.part.11+0x778>
    ce30:	cmp	r5, #256	; 0x100
    ce34:	ble	d280 <ReadInt16Data.part.11+0xc10>
    ce38:	ldr	r1, [sp, #4]
    ce3c:	sub	r4, r5, #256	; 0x100
    ce40:	mov	fp, r5
    ce44:	sub	r4, r4, #1
    ce48:	add	r6, sp, #24
    ce4c:	lsr	r0, r4, #8
    ce50:	ldr	r5, [sp]
    ce54:	add	r4, r6, #1020	; 0x3fc
    ce58:	add	r2, r1, #508	; 0x1fc
    ce5c:	sub	r8, r1, #2
    ce60:	str	r0, [sp, #8]
    ce64:	add	r2, r2, #2
    ce68:	add	sl, r2, r0, lsl #9
    ce6c:	mov	r2, #256	; 0x100
    ce70:	mov	r1, r7
    ce74:	mov	r0, r6
    ce78:	bl	1520 <fread@plt>
    ce7c:	add	r9, r9, r0
    ce80:	sub	r0, r6, #4
    ce84:	mov	ip, r9
    ce88:	mov	r3, r0
    ce8c:	mov	r2, r8
    ce90:	ldr	r1, [r3, #4]!
    ce94:	cmp	r4, r3
    ce98:	strh	r1, [r2, #2]!
    ce9c:	bne	ce90 <ReadInt16Data.part.11+0x820>
    cea0:	add	r8, r8, #512	; 0x200
    cea4:	cmp	r8, sl
    cea8:	beq	d7e8 <ReadInt16Data.part.11+0x1178>
    ceac:	ldr	r3, [r5]
    ceb0:	b	ce6c <ReadInt16Data.part.11+0x7fc>
    ceb4:	cmp	r5, #256	; 0x100
    ceb8:	ble	d240 <ReadInt16Data.part.11+0xbd0>
    cebc:	ldr	r0, [sp, #4]
    cec0:	sub	r2, r5, #256	; 0x100
    cec4:	movw	r4, #510	; 0x1fe
    cec8:	sub	r2, r2, #1
    cecc:	mov	fp, r5
    ced0:	lsr	r2, r2, #8
    ced4:	ldr	r5, [sp]
    ced8:	add	r6, sp, #24
    cedc:	add	r1, r0, r4
    cee0:	sub	r8, r0, #2
    cee4:	str	r2, [sp, #12]
    cee8:	add	sl, r1, r2, lsl #9
    ceec:	add	r4, r6, r4
    cef0:	mov	r2, #256	; 0x100
    cef4:	mov	r1, r7
    cef8:	mov	r0, r6
    cefc:	bl	1520 <fread@plt>
    cf00:	add	r9, r9, r0
    cf04:	sub	r0, r6, #2
    cf08:	mov	ip, r9
    cf0c:	mov	r3, r0
    cf10:	mov	r2, r8
    cf14:	ldrh	r1, [r3, #2]!
    cf18:	cmp	r4, r3
    cf1c:	strh	r1, [r2, #2]!
    cf20:	bne	cf14 <ReadInt16Data.part.11+0x8a4>
    cf24:	add	r8, r8, #512	; 0x200
    cf28:	cmp	sl, r8
    cf2c:	beq	da28 <ReadInt16Data.part.11+0x13b8>
    cf30:	ldr	r3, [r5]
    cf34:	b	cef0 <ReadInt16Data.part.11+0x880>
    cf38:	cmp	r5, #256	; 0x100
    cf3c:	ble	d1c0 <ReadInt16Data.part.11+0xb50>
    cf40:	ldr	r1, [sp, #4]
    cf44:	sub	r4, r5, #256	; 0x100
    cf48:	mov	fp, r5
    cf4c:	sub	r4, r4, #1
    cf50:	add	r6, sp, #24
    cf54:	lsr	r0, r4, #8
    cf58:	ldr	r5, [sp]
    cf5c:	add	r4, r6, #1020	; 0x3fc
    cf60:	add	r2, r1, #508	; 0x1fc
    cf64:	sub	r8, r1, #2
    cf68:	str	r0, [sp, #12]
    cf6c:	add	r2, r2, #2
    cf70:	add	sl, r2, r0, lsl #9
    cf74:	mov	r2, #256	; 0x100
    cf78:	mov	r1, r7
    cf7c:	mov	r0, r6
    cf80:	bl	1520 <fread@plt>
    cf84:	add	r9, r9, r0
    cf88:	sub	r0, r6, #4
    cf8c:	mov	ip, r9
    cf90:	mov	r3, r0
    cf94:	mov	r2, r8
    cf98:	ldr	r1, [r3, #4]!
    cf9c:	cmp	r3, r4
    cfa0:	strh	r1, [r2, #2]!
    cfa4:	bne	cf98 <ReadInt16Data.part.11+0x928>
    cfa8:	add	r8, r8, #512	; 0x200
    cfac:	cmp	r8, sl
    cfb0:	beq	d858 <ReadInt16Data.part.11+0x11e8>
    cfb4:	ldr	r3, [r5]
    cfb8:	b	cf74 <ReadInt16Data.part.11+0x904>
    cfbc:	cmp	r5, #256	; 0x100
    cfc0:	ble	d178 <ReadInt16Data.part.11+0xb08>
    cfc4:	ldr	r1, [sp, #4]
    cfc8:	sub	r4, r5, #256	; 0x100
    cfcc:	mov	sl, r5
    cfd0:	sub	r4, r4, #1
    cfd4:	add	r6, sp, #24
    cfd8:	lsr	r0, r4, #8
    cfdc:	ldr	r5, [sp]
    cfe0:	add	r4, sp, #2064	; 0x810
    cfe4:	add	r4, r4, #8
    cfe8:	add	r2, r1, #508	; 0x1fc
    cfec:	sub	r8, r1, #2
    cff0:	str	r0, [sp, #12]
    cff4:	add	r2, r2, #2
    cff8:	add	fp, r2, r0, lsl #9
    cffc:	mov	r2, #256	; 0x100
    d000:	mov	r1, r7
    d004:	mov	r0, r6
    d008:	bl	1520 <fread@plt>
    d00c:	add	r9, r9, r0
    d010:	mov	r2, r8
    d014:	mov	r0, r6
    d018:	mov	r1, r9
    d01c:	mov	r3, r6
    d020:	vldmia	r3!, {d7}
    d024:	vcvt.s32.f64	s14, d7
    d028:	cmp	r3, r4
    d02c:	vmov	ip, s14
    d030:	strh	ip, [r2, #2]!
    d034:	bne	d020 <ReadInt16Data.part.11+0x9b0>
    d038:	add	r8, r8, #512	; 0x200
    d03c:	cmp	r8, fp
    d040:	beq	d9b0 <ReadInt16Data.part.11+0x1340>
    d044:	ldr	r3, [r5]
    d048:	b	cffc <ReadInt16Data.part.11+0x98c>
    d04c:	cmp	r5, #256	; 0x100
    d050:	ble	d128 <ReadInt16Data.part.11+0xab8>
    d054:	ldr	r1, [sp, #4]
    d058:	sub	r4, r5, #256	; 0x100
    d05c:	mov	sl, r5
    d060:	sub	r4, r4, #1
    d064:	add	r6, sp, #24
    d068:	lsr	r0, r4, #8
    d06c:	ldr	r5, [sp]
    d070:	add	r4, sp, #1040	; 0x410
    d074:	add	r4, r4, #8
    d078:	add	r2, r1, #508	; 0x1fc
    d07c:	sub	r8, r1, #2
    d080:	str	r0, [sp, #12]
    d084:	add	r2, r2, #2
    d088:	add	fp, r2, r0, lsl #9
    d08c:	mov	r2, #256	; 0x100
    d090:	mov	r1, r7
    d094:	mov	r0, r6
    d098:	bl	1520 <fread@plt>
    d09c:	add	r9, r9, r0
    d0a0:	mov	r2, r8
    d0a4:	mov	r0, r6
    d0a8:	mov	r1, r9
    d0ac:	mov	r3, r6
    d0b0:	vldmia	r3!, {s15}
    d0b4:	vcvt.s32.f32	s15, s15
    d0b8:	cmp	r3, r4
    d0bc:	vmov	ip, s15
    d0c0:	strh	ip, [r2, #2]!
    d0c4:	bne	d0b0 <ReadInt16Data.part.11+0xa40>
    d0c8:	add	r8, r8, #512	; 0x200
    d0cc:	cmp	r8, fp
    d0d0:	beq	d938 <ReadInt16Data.part.11+0x12c8>
    d0d4:	ldr	r3, [r5]
    d0d8:	b	d08c <ReadInt16Data.part.11+0xa1c>
    d0dc:	ldr	r3, [sp]
    d0e0:	sub	r5, r5, r8
    d0e4:	mov	r0, r6
    d0e8:	mov	r2, r5
    d0ec:	mov	r1, r7
    d0f0:	ldr	r3, [r3]
    d0f4:	bl	1520 <fread@plt>
    d0f8:	cmp	r5, #0
    d0fc:	add	r0, r9, r0
    d100:	ble	cd3c <ReadInt16Data.part.11+0x6cc>
    d104:	ldr	r3, [sp, #4]
    d108:	add	r5, r8, r5
    d10c:	add	r4, r3, r4, lsl #9
    d110:	add	r3, r3, r5, lsl #1
    d114:	ldrsb	r2, [sl, #1]!
    d118:	strh	r2, [r4], #2
    d11c:	cmp	r3, r4
    d120:	bne	d114 <ReadInt16Data.part.11+0xaa4>
    d124:	b	cd3c <ReadInt16Data.part.11+0x6cc>
    d128:	add	r4, sp, #24
    d12c:	mov	r2, r5
    d130:	mov	r0, r4
    d134:	mov	r1, r7
    d138:	bl	1520 <fread@plt>
    d13c:	cmp	r5, #0
    d140:	str	r0, [sp, #8]
    d144:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d148:	ldr	r3, [sp, #4]
    d14c:	mov	r2, r4
    d150:	add	r5, r3, r5, lsl #1
    d154:	vldmia	r2!, {s15}
    d158:	vcvt.s32.f32	s15, s15
    d15c:	vmov	r1, s15
    d160:	strh	r1, [r3], #2
    d164:	cmp	r3, r5
    d168:	bne	d154 <ReadInt16Data.part.11+0xae4>
    d16c:	ldr	r3, [sp, #8]
    d170:	mul	r0, r3, r7
    d174:	b	cd00 <ReadInt16Data.part.11+0x690>
    d178:	add	r4, sp, #24
    d17c:	mov	r2, r5
    d180:	mov	r0, r4
    d184:	mov	r1, r7
    d188:	bl	1520 <fread@plt>
    d18c:	cmp	r5, #0
    d190:	str	r0, [sp, #8]
    d194:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d198:	ldr	r3, [sp, #4]
    d19c:	mov	r2, r4
    d1a0:	add	r5, r3, r5, lsl #1
    d1a4:	vldmia	r2!, {d7}
    d1a8:	vcvt.s32.f64	s14, d7
    d1ac:	vmov	r1, s14
    d1b0:	strh	r1, [r3], #2
    d1b4:	cmp	r3, r5
    d1b8:	bne	d1a4 <ReadInt16Data.part.11+0xb34>
    d1bc:	b	d16c <ReadInt16Data.part.11+0xafc>
    d1c0:	add	r4, sp, #24
    d1c4:	mov	r2, r5
    d1c8:	mov	r0, r4
    d1cc:	mov	r1, r7
    d1d0:	bl	1520 <fread@plt>
    d1d4:	cmp	r5, #0
    d1d8:	str	r0, [sp, #8]
    d1dc:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d1e0:	ldr	r3, [sp, #4]
    d1e4:	sub	r2, r4, #4
    d1e8:	add	r5, r3, r5, lsl #1
    d1ec:	ldr	r1, [r2, #4]!
    d1f0:	strh	r1, [r3], #2
    d1f4:	cmp	r3, r5
    d1f8:	bne	d1ec <ReadInt16Data.part.11+0xb7c>
    d1fc:	b	d16c <ReadInt16Data.part.11+0xafc>
    d200:	add	r4, sp, #24
    d204:	mov	r2, r5
    d208:	mov	r0, r4
    d20c:	mov	r1, r7
    d210:	bl	1520 <fread@plt>
    d214:	cmp	r5, #0
    d218:	str	r0, [sp, #8]
    d21c:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d220:	ldr	r3, [sp, #4]
    d224:	sub	r2, r4, #2
    d228:	add	r5, r3, r5, lsl #1
    d22c:	ldrh	r1, [r2, #2]!
    d230:	strh	r1, [r3], #2
    d234:	cmp	r5, r3
    d238:	bne	d22c <ReadInt16Data.part.11+0xbbc>
    d23c:	b	d16c <ReadInt16Data.part.11+0xafc>
    d240:	add	r4, sp, #24
    d244:	mov	r2, r5
    d248:	mov	r0, r4
    d24c:	mov	r1, r7
    d250:	bl	1520 <fread@plt>
    d254:	cmp	r5, #0
    d258:	str	r0, [sp, #8]
    d25c:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d260:	ldr	r3, [sp, #4]
    d264:	sub	r2, r4, #2
    d268:	add	r5, r3, r5, lsl #1
    d26c:	ldrh	r1, [r2, #2]!
    d270:	strh	r1, [r3], #2
    d274:	cmp	r5, r3
    d278:	bne	d26c <ReadInt16Data.part.11+0xbfc>
    d27c:	b	d16c <ReadInt16Data.part.11+0xafc>
    d280:	add	r4, sp, #24
    d284:	mov	r2, r5
    d288:	mov	r0, r4
    d28c:	mov	r1, r7
    d290:	bl	1520 <fread@plt>
    d294:	cmp	r5, #0
    d298:	mov	sl, r0
    d29c:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d2a0:	ldr	r3, [sp, #4]
    d2a4:	sub	r2, r4, #4
    d2a8:	add	r5, r3, r5, lsl #1
    d2ac:	ldr	r1, [r2, #4]!
    d2b0:	strh	r1, [r3], #2
    d2b4:	cmp	r5, r3
    d2b8:	bne	d2ac <ReadInt16Data.part.11+0xc3c>
    d2bc:	mul	r0, sl, r7
    d2c0:	b	cd00 <ReadInt16Data.part.11+0x690>
    d2c4:	add	r4, sp, #24
    d2c8:	mov	r2, r5
    d2cc:	mov	r0, r4
    d2d0:	mov	r1, r7
    d2d4:	bl	1520 <fread@plt>
    d2d8:	cmp	r5, #0
    d2dc:	str	r0, [sp, #8]
    d2e0:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d2e4:	ldr	r6, [sp, #4]
    d2e8:	add	r5, r6, r5, lsl #1
    d2ec:	mov	r0, r4
    d2f0:	add	r4, r4, #2
    d2f4:	bl	1950 <Mat_uint16Swap>
    d2f8:	strh	r0, [r6], #2
    d2fc:	cmp	r5, r6
    d300:	bne	d2ec <ReadInt16Data.part.11+0xc7c>
    d304:	b	d16c <ReadInt16Data.part.11+0xafc>
    d308:	add	r4, sp, #24
    d30c:	mov	r2, r5
    d310:	mov	r0, r4
    d314:	mov	r1, r7
    d318:	bl	1520 <fread@plt>
    d31c:	cmp	r5, #0
    d320:	str	r0, [sp, #8]
    d324:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d328:	ldr	r6, [sp, #4]
    d32c:	add	r5, r6, r5, lsl #1
    d330:	mov	r0, r4
    d334:	add	r4, r4, #8
    d338:	bl	19a4 <Mat_doubleSwap>
    d33c:	vcvt.s32.f64	s0, d0
    d340:	vmov	r3, s0
    d344:	strh	r3, [r6], #2
    d348:	cmp	r6, r5
    d34c:	bne	d330 <ReadInt16Data.part.11+0xcc0>
    d350:	b	d16c <ReadInt16Data.part.11+0xafc>
    d354:	add	r4, sp, #24
    d358:	mov	r2, r5
    d35c:	mov	r0, r4
    d360:	mov	r1, r7
    d364:	bl	1520 <fread@plt>
    d368:	cmp	r5, #0
    d36c:	str	r0, [sp, #8]
    d370:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d374:	ldr	r6, [sp, #4]
    d378:	add	r5, r6, r5, lsl #1
    d37c:	mov	r0, r4
    d380:	add	r4, r4, #4
    d384:	bl	18f8 <Mat_uint32Swap>
    d388:	strh	r0, [r6], #2
    d38c:	cmp	r6, r5
    d390:	bne	d37c <ReadInt16Data.part.11+0xd0c>
    d394:	b	d16c <ReadInt16Data.part.11+0xafc>
    d398:	add	r4, sp, #24
    d39c:	mov	r2, r5
    d3a0:	mov	r0, r4
    d3a4:	mov	r1, r7
    d3a8:	bl	1520 <fread@plt>
    d3ac:	cmp	r5, #0
    d3b0:	str	r0, [sp, #8]
    d3b4:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d3b8:	ldr	r6, [sp, #4]
    d3bc:	add	r5, r6, r5, lsl #1
    d3c0:	mov	r0, r4
    d3c4:	add	r4, r4, #4
    d3c8:	bl	1974 <Mat_floatSwap>
    d3cc:	vcvt.s32.f32	s0, s0
    d3d0:	vmov	r3, s0
    d3d4:	strh	r3, [r6], #2
    d3d8:	cmp	r6, r5
    d3dc:	bne	d3c0 <ReadInt16Data.part.11+0xd50>
    d3e0:	b	d16c <ReadInt16Data.part.11+0xafc>
    d3e4:	add	r4, sp, #24
    d3e8:	mov	r2, r5
    d3ec:	mov	r0, r4
    d3f0:	mov	r1, r7
    d3f4:	bl	1520 <fread@plt>
    d3f8:	cmp	r5, #0
    d3fc:	mov	sl, r0
    d400:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d404:	ldr	r6, [sp, #4]
    d408:	add	r5, r6, r5, lsl #1
    d40c:	mov	r0, r4
    d410:	add	r4, r4, #4
    d414:	bl	18c4 <Mat_int32Swap>
    d418:	strh	r0, [r6], #2
    d41c:	cmp	r5, r6
    d420:	bne	d40c <ReadInt16Data.part.11+0xd9c>
    d424:	b	d2bc <ReadInt16Data.part.11+0xc4c>
    d428:	add	r4, sp, #24
    d42c:	mov	r2, r5
    d430:	mov	r0, r4
    d434:	mov	r1, r7
    d438:	bl	1520 <fread@plt>
    d43c:	cmp	r5, #0
    d440:	str	r0, [sp, #8]
    d444:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d448:	ldr	r6, [sp, #4]
    d44c:	add	r5, r6, r5, lsl #1
    d450:	mov	r0, r4
    d454:	add	r4, r4, #2
    d458:	bl	192c <Mat_int16Swap>
    d45c:	strh	r0, [r6], #2
    d460:	cmp	r5, r6
    d464:	bne	d450 <ReadInt16Data.part.11+0xde0>
    d468:	b	d16c <ReadInt16Data.part.11+0xafc>
    d46c:	ldr	r3, [sp, #16]
    d470:	ldr	r5, [sp, #20]
    d474:	add	r4, r3, #1
    d478:	lsl	r8, r4, #8
    d47c:	cmp	r5, r8
    d480:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d484:	ldr	r3, [sp]
    d488:	sub	r5, r5, r8
    d48c:	mov	r0, r6
    d490:	mov	r2, r5
    d494:	mov	r1, r7
    d498:	ldr	r3, [r3]
    d49c:	bl	1520 <fread@plt>
    d4a0:	add	r3, r9, r0
    d4a4:	cmp	r5, #0
    d4a8:	str	r3, [sp, #8]
    d4ac:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d4b0:	ldr	r3, [sp, #4]
    d4b4:	add	r5, r5, r8
    d4b8:	mov	r6, fp
    d4bc:	add	r4, r3, r4, lsl #9
    d4c0:	add	r5, r3, r5, lsl #1
    d4c4:	mov	r0, r6
    d4c8:	add	r6, r6, #4
    d4cc:	bl	18f8 <Mat_uint32Swap>
    d4d0:	strh	r0, [r4], #2
    d4d4:	cmp	r4, r5
    d4d8:	bne	d4c4 <ReadInt16Data.part.11+0xe54>
    d4dc:	b	d16c <ReadInt16Data.part.11+0xafc>
    d4e0:	ldr	r3, [sp, #16]
    d4e4:	ldr	r5, [sp, #20]
    d4e8:	add	r4, r3, #1
    d4ec:	lsl	r8, r4, #8
    d4f0:	cmp	r5, r8
    d4f4:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d4f8:	ldr	r3, [sp]
    d4fc:	sub	r5, r5, r8
    d500:	mov	r0, r6
    d504:	mov	r2, r5
    d508:	mov	r1, r7
    d50c:	ldr	r3, [r3]
    d510:	bl	1520 <fread@plt>
    d514:	add	r3, r9, r0
    d518:	cmp	r5, #0
    d51c:	str	r3, [sp, #8]
    d520:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d524:	ldr	r3, [sp, #4]
    d528:	add	r5, r5, r8
    d52c:	mov	r6, fp
    d530:	add	r4, r3, r4, lsl #9
    d534:	add	r5, r3, r5, lsl #1
    d538:	mov	r0, r6
    d53c:	add	r6, r6, #2
    d540:	bl	1950 <Mat_uint16Swap>
    d544:	strh	r0, [r4], #2
    d548:	cmp	r5, r4
    d54c:	bne	d538 <ReadInt16Data.part.11+0xec8>
    d550:	b	d16c <ReadInt16Data.part.11+0xafc>
    d554:	add	r4, sp, #24
    d558:	mov	r2, r5
    d55c:	mov	r0, r4
    d560:	mov	r1, r7
    d564:	bl	1520 <fread@plt>
    d568:	cmp	r5, #0
    d56c:	ble	cd3c <ReadInt16Data.part.11+0x6cc>
    d570:	ldr	r3, [sp, #4]
    d574:	sub	r2, r4, #1
    d578:	add	r5, r3, r5, lsl #1
    d57c:	ldrsb	r1, [r2, #1]!
    d580:	strh	r1, [r3], #2
    d584:	cmp	r5, r3
    d588:	bne	d57c <ReadInt16Data.part.11+0xf0c>
    d58c:	b	cd3c <ReadInt16Data.part.11+0x6cc>
    d590:	ldr	r3, [sp, #16]
    d594:	mov	sl, fp
    d598:	ldr	r5, [sp, #20]
    d59c:	add	r8, r3, #1
    d5a0:	lsl	r4, r8, #8
    d5a4:	cmp	r5, r4
    d5a8:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d5ac:	ldr	r3, [sp]
    d5b0:	sub	r5, r5, r4
    d5b4:	mov	r0, r6
    d5b8:	mov	r2, r5
    d5bc:	mov	r1, r7
    d5c0:	ldr	r3, [r3]
    d5c4:	bl	1520 <fread@plt>
    d5c8:	add	r3, r9, r0
    d5cc:	cmp	r5, #0
    d5d0:	mov	sl, r3
    d5d4:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d5d8:	add	r4, r4, r5
    d5dc:	ldmib	sp, {r3, r5}
    d5e0:	add	r8, r3, r8, lsl #9
    d5e4:	add	r4, r3, r4, lsl #1
    d5e8:	mov	r0, r5
    d5ec:	add	r5, r5, #4
    d5f0:	bl	18c4 <Mat_int32Swap>
    d5f4:	strh	r0, [r8], #2
    d5f8:	cmp	r4, r8
    d5fc:	bne	d5e8 <ReadInt16Data.part.11+0xf78>
    d600:	b	d2bc <ReadInt16Data.part.11+0xc4c>
    d604:	add	r4, sp, #24
    d608:	mov	r2, r5
    d60c:	mov	r0, r4
    d610:	mov	r1, r7
    d614:	bl	1520 <fread@plt>
    d618:	cmp	r5, #0
    d61c:	ble	cd3c <ReadInt16Data.part.11+0x6cc>
    d620:	ldr	r3, [sp, #4]
    d624:	sub	r2, r4, #1
    d628:	add	r5, r3, r5, lsl #1
    d62c:	ldrb	r1, [r2, #1]!
    d630:	strh	r1, [r3], #2
    d634:	cmp	r5, r3
    d638:	bne	d62c <ReadInt16Data.part.11+0xfbc>
    d63c:	b	cd3c <ReadInt16Data.part.11+0x6cc>
    d640:	ldr	r3, [sp, #16]
    d644:	ldr	r5, [sp, #20]
    d648:	add	r4, r3, #1
    d64c:	lsl	r8, r4, #8
    d650:	cmp	r5, r8
    d654:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d658:	ldr	r3, [sp]
    d65c:	sub	r5, r5, r8
    d660:	mov	r0, r6
    d664:	mov	r2, r5
    d668:	mov	r1, r7
    d66c:	ldr	r3, [r3]
    d670:	bl	1520 <fread@plt>
    d674:	add	r3, r9, r0
    d678:	cmp	r5, #0
    d67c:	str	r3, [sp, #8]
    d680:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d684:	ldr	r3, [sp, #4]
    d688:	add	r5, r5, r8
    d68c:	mov	r6, fp
    d690:	add	r4, r3, r4, lsl #9
    d694:	add	r5, r3, r5, lsl #1
    d698:	mov	r0, r6
    d69c:	add	r6, r6, #4
    d6a0:	bl	1974 <Mat_floatSwap>
    d6a4:	vcvt.s32.f32	s0, s0
    d6a8:	vmov	r3, s0
    d6ac:	strh	r3, [r4], #2
    d6b0:	cmp	r4, r5
    d6b4:	bne	d698 <ReadInt16Data.part.11+0x1028>
    d6b8:	b	d16c <ReadInt16Data.part.11+0xafc>
    d6bc:	ldr	r3, [sp, #16]
    d6c0:	ldr	r5, [sp, #20]
    d6c4:	add	r4, r3, #1
    d6c8:	lsl	r8, r4, #8
    d6cc:	cmp	r5, r8
    d6d0:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d6d4:	ldr	r3, [sp]
    d6d8:	sub	r5, r5, r8
    d6dc:	mov	r0, r6
    d6e0:	mov	r2, r5
    d6e4:	mov	r1, r7
    d6e8:	ldr	r3, [r3]
    d6ec:	bl	1520 <fread@plt>
    d6f0:	add	r3, r9, r0
    d6f4:	cmp	r5, #0
    d6f8:	str	r3, [sp, #8]
    d6fc:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d700:	ldr	r3, [sp, #4]
    d704:	add	r5, r5, r8
    d708:	mov	r6, fp
    d70c:	add	r4, r3, r4, lsl #9
    d710:	add	r5, r3, r5, lsl #1
    d714:	mov	r0, r6
    d718:	add	r6, r6, #8
    d71c:	bl	19a4 <Mat_doubleSwap>
    d720:	vcvt.s32.f64	s0, d0
    d724:	vmov	r3, s0
    d728:	strh	r3, [r4], #2
    d72c:	cmp	r4, r5
    d730:	bne	d714 <ReadInt16Data.part.11+0x10a4>
    d734:	b	d16c <ReadInt16Data.part.11+0xafc>
    d738:	ldr	r3, [sp]
    d73c:	ldr	r8, [r3, #20]
    d740:	ldr	r3, [r3]
    d744:	cmp	r8, #0
    d748:	beq	db94 <ReadInt16Data.part.11+0x1524>
    d74c:	cmp	r5, #256	; 0x100
    d750:	ble	de10 <ReadInt16Data.part.11+0x17a0>
    d754:	ldr	r1, [sp, #4]
    d758:	sub	r4, r5, #256	; 0x100
    d75c:	mov	r9, #0
    d760:	sub	r4, r4, #1
    d764:	add	r6, sp, #24
    d768:	str	r5, [sp, #20]
    d76c:	lsr	r0, r4, #8
    d770:	add	r4, sp, #2064	; 0x810
    d774:	add	r4, r4, #8
    d778:	add	r2, r1, #508	; 0x1fc
    d77c:	sub	sl, r1, #2
    d780:	str	r0, [sp, #12]
    d784:	add	r2, r2, #2
    d788:	add	r2, r2, r0, lsl #9
    d78c:	str	r2, [sp, #8]
    d790:	mov	r2, #256	; 0x100
    d794:	mov	r1, r7
    d798:	mov	r0, r6
    d79c:	mov	r5, sl
    d7a0:	bl	1520 <fread@plt>
    d7a4:	add	r9, r9, r0
    d7a8:	mov	r8, r6
    d7ac:	str	r6, [sp, #16]
    d7b0:	mov	fp, r9
    d7b4:	mov	r0, r8
    d7b8:	add	r8, r8, #8
    d7bc:	bl	17ec <Mat_int64Swap>
    d7c0:	cmp	r4, r8
    d7c4:	strh	r0, [r5, #2]!
    d7c8:	bne	d7b4 <ReadInt16Data.part.11+0x1144>
    d7cc:	ldr	r3, [sp, #8]
    d7d0:	add	sl, sl, #512	; 0x200
    d7d4:	cmp	r3, sl
    d7d8:	beq	dc7c <ReadInt16Data.part.11+0x160c>
    d7dc:	ldr	r3, [sp]
    d7e0:	ldr	r3, [r3]
    d7e4:	b	d790 <ReadInt16Data.part.11+0x1120>
    d7e8:	ldr	r3, [sp, #8]
    d7ec:	mov	r5, fp
    d7f0:	mov	sl, ip
    d7f4:	mov	fp, r0
    d7f8:	add	r4, r3, #1
    d7fc:	lsl	r8, r4, #8
    d800:	cmp	r5, r8
    d804:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d808:	ldr	r3, [sp]
    d80c:	sub	r5, r5, r8
    d810:	mov	r0, r6
    d814:	mov	r2, r5
    d818:	mov	r1, r7
    d81c:	ldr	r3, [r3]
    d820:	bl	1520 <fread@plt>
    d824:	add	r3, r9, r0
    d828:	cmp	r5, #0
    d82c:	mov	sl, r3
    d830:	ble	d2bc <ReadInt16Data.part.11+0xc4c>
    d834:	ldr	r3, [sp, #4]
    d838:	add	r5, r5, r8
    d83c:	add	r4, r3, r4, lsl #9
    d840:	add	r3, r3, r5, lsl #1
    d844:	ldr	r2, [fp, #4]!
    d848:	strh	r2, [r4], #2
    d84c:	cmp	r4, r3
    d850:	bne	d844 <ReadInt16Data.part.11+0x11d4>
    d854:	b	d2bc <ReadInt16Data.part.11+0xc4c>
    d858:	ldr	r3, [sp, #12]
    d85c:	mov	r5, fp
    d860:	mov	fp, r0
    d864:	str	ip, [sp, #8]
    d868:	add	r4, r3, #1
    d86c:	lsl	r8, r4, #8
    d870:	cmp	r5, r8
    d874:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d878:	ldr	r3, [sp]
    d87c:	sub	r5, r5, r8
    d880:	mov	r0, r6
    d884:	mov	r2, r5
    d888:	mov	r1, r7
    d88c:	ldr	r3, [r3]
    d890:	bl	1520 <fread@plt>
    d894:	add	r3, r9, r0
    d898:	cmp	r5, #0
    d89c:	str	r3, [sp, #8]
    d8a0:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d8a4:	ldr	r3, [sp, #4]
    d8a8:	add	r5, r5, r8
    d8ac:	add	r4, r3, r4, lsl #9
    d8b0:	add	r3, r3, r5, lsl #1
    d8b4:	ldr	r2, [fp, #4]!
    d8b8:	strh	r2, [r4], #2
    d8bc:	cmp	r4, r3
    d8c0:	bne	d8b4 <ReadInt16Data.part.11+0x1244>
    d8c4:	b	d16c <ReadInt16Data.part.11+0xafc>
    d8c8:	ldr	r3, [sp, #12]
    d8cc:	mov	r5, fp
    d8d0:	mov	fp, r0
    d8d4:	str	ip, [sp, #8]
    d8d8:	add	r4, r3, #1
    d8dc:	lsl	r8, r4, #8
    d8e0:	cmp	r5, r8
    d8e4:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d8e8:	ldr	r3, [sp]
    d8ec:	sub	r5, r5, r8
    d8f0:	mov	r0, r6
    d8f4:	mov	r2, r5
    d8f8:	mov	r1, r7
    d8fc:	ldr	r3, [r3]
    d900:	bl	1520 <fread@plt>
    d904:	add	r3, r9, r0
    d908:	cmp	r5, #0
    d90c:	str	r3, [sp, #8]
    d910:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d914:	ldr	r3, [sp, #4]
    d918:	add	r5, r5, r8
    d91c:	add	r4, r3, r4, lsl #9
    d920:	add	r3, r3, r5, lsl #1
    d924:	ldrh	r2, [fp, #2]!
    d928:	strh	r2, [r4], #2
    d92c:	cmp	r3, r4
    d930:	bne	d924 <ReadInt16Data.part.11+0x12b4>
    d934:	b	d16c <ReadInt16Data.part.11+0xafc>
    d938:	ldr	r3, [sp, #12]
    d93c:	mov	r5, sl
    d940:	mov	sl, r0
    d944:	str	r1, [sp, #8]
    d948:	add	r4, r3, #1
    d94c:	lsl	r8, r4, #8
    d950:	cmp	r5, r8
    d954:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d958:	ldr	r3, [sp]
    d95c:	sub	r5, r5, r8
    d960:	mov	r0, r6
    d964:	mov	r2, r5
    d968:	mov	r1, r7
    d96c:	ldr	r3, [r3]
    d970:	bl	1520 <fread@plt>
    d974:	add	r3, r9, r0
    d978:	cmp	r5, #0
    d97c:	str	r3, [sp, #8]
    d980:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d984:	ldr	r3, [sp, #4]
    d988:	add	r5, r5, r8
    d98c:	add	r4, r3, r4, lsl #9
    d990:	add	r3, r3, r5, lsl #1
    d994:	vldmia	sl!, {s15}
    d998:	vcvt.s32.f32	s15, s15
    d99c:	vmov	r2, s15
    d9a0:	strh	r2, [r4], #2
    d9a4:	cmp	r4, r3
    d9a8:	bne	d994 <ReadInt16Data.part.11+0x1324>
    d9ac:	b	d16c <ReadInt16Data.part.11+0xafc>
    d9b0:	ldr	r3, [sp, #12]
    d9b4:	mov	r5, sl
    d9b8:	mov	sl, r0
    d9bc:	str	r1, [sp, #8]
    d9c0:	add	r4, r3, #1
    d9c4:	lsl	r8, r4, #8
    d9c8:	cmp	r5, r8
    d9cc:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d9d0:	ldr	r3, [sp]
    d9d4:	sub	r5, r5, r8
    d9d8:	mov	r0, r6
    d9dc:	mov	r2, r5
    d9e0:	mov	r1, r7
    d9e4:	ldr	r3, [r3]
    d9e8:	bl	1520 <fread@plt>
    d9ec:	add	r3, r9, r0
    d9f0:	cmp	r5, #0
    d9f4:	str	r3, [sp, #8]
    d9f8:	ble	d16c <ReadInt16Data.part.11+0xafc>
    d9fc:	ldr	r3, [sp, #4]
    da00:	add	r5, r5, r8
    da04:	add	r4, r3, r4, lsl #9
    da08:	add	r3, r3, r5, lsl #1
    da0c:	vldmia	sl!, {d7}
    da10:	vcvt.s32.f64	s14, d7
    da14:	vmov	r2, s14
    da18:	strh	r2, [r4], #2
    da1c:	cmp	r4, r3
    da20:	bne	da0c <ReadInt16Data.part.11+0x139c>
    da24:	b	d16c <ReadInt16Data.part.11+0xafc>
    da28:	ldr	r3, [sp, #12]
    da2c:	mov	r5, fp
    da30:	mov	fp, r0
    da34:	str	ip, [sp, #8]
    da38:	add	r4, r3, #1
    da3c:	lsl	r8, r4, #8
    da40:	cmp	r5, r8
    da44:	ble	d16c <ReadInt16Data.part.11+0xafc>
    da48:	ldr	r3, [sp]
    da4c:	sub	r5, r5, r8
    da50:	mov	r0, r6
    da54:	mov	r2, r5
    da58:	mov	r1, r7
    da5c:	ldr	r3, [r3]
    da60:	bl	1520 <fread@plt>
    da64:	add	r3, r9, r0
    da68:	cmp	r5, #0
    da6c:	str	r3, [sp, #8]
    da70:	ble	d16c <ReadInt16Data.part.11+0xafc>
    da74:	ldr	r3, [sp, #4]
    da78:	add	r5, r5, r8
    da7c:	add	r4, r3, r4, lsl #9
    da80:	add	r3, r3, r5, lsl #1
    da84:	ldrh	r2, [fp, #2]!
    da88:	strh	r2, [r4], #2
    da8c:	cmp	r3, r4
    da90:	bne	da84 <ReadInt16Data.part.11+0x1414>
    da94:	b	d16c <ReadInt16Data.part.11+0xafc>
    da98:	ldr	r3, [sp, #16]
    da9c:	ldr	r5, [sp, #20]
    daa0:	add	r4, r3, #1
    daa4:	lsl	r8, r4, #8
    daa8:	cmp	r5, r8
    daac:	ble	d16c <ReadInt16Data.part.11+0xafc>
    dab0:	ldr	r3, [sp]
    dab4:	sub	r5, r5, r8
    dab8:	mov	r0, r6
    dabc:	mov	r2, r5
    dac0:	mov	r1, r7
    dac4:	ldr	r3, [r3]
    dac8:	bl	1520 <fread@plt>
    dacc:	add	r3, r9, r0
    dad0:	cmp	r5, #0
    dad4:	str	r3, [sp, #8]
    dad8:	ble	d16c <ReadInt16Data.part.11+0xafc>
    dadc:	ldr	r3, [sp, #4]
    dae0:	add	r5, r5, r8
    dae4:	mov	r6, fp
    dae8:	add	r4, r3, r4, lsl #9
    daec:	add	r5, r3, r5, lsl #1
    daf0:	mov	r0, r6
    daf4:	add	r6, r6, #2
    daf8:	bl	192c <Mat_int16Swap>
    dafc:	strh	r0, [r4], #2
    db00:	cmp	r5, r4
    db04:	bne	daf0 <ReadInt16Data.part.11+0x1480>
    db08:	b	d16c <ReadInt16Data.part.11+0xafc>
    db0c:	cmp	r5, #256	; 0x100
    db10:	ble	dd8c <ReadInt16Data.part.11+0x171c>
    db14:	ldr	r1, [sp, #4]
    db18:	sub	r4, r5, #256	; 0x100
    db1c:	add	r6, sp, #24
    db20:	sub	r4, r4, #1
    db24:	lsr	r0, r4, #8
    db28:	add	r4, sp, #2064	; 0x810
    db2c:	add	r2, r1, #508	; 0x1fc
    db30:	sub	r9, r1, #2
    db34:	str	r0, [sp, #12]
    db38:	add	r2, r2, #2
    db3c:	add	r2, r2, r0, lsl #9
    db40:	str	r2, [sp, #8]
    db44:	mov	r2, #256	; 0x100
    db48:	mov	r1, r7
    db4c:	mov	r0, r6
    db50:	sub	sl, r6, #8
    db54:	bl	1520 <fread@plt>
    db58:	add	r8, r8, r0
    db5c:	mov	r3, sl
    db60:	mov	fp, r8
    db64:	mov	r2, r9
    db68:	ldr	r1, [r3, #8]!
    db6c:	cmp	r4, r3
    db70:	strh	r1, [r2, #2]!
    db74:	bne	db68 <ReadInt16Data.part.11+0x14f8>
    db78:	ldr	r3, [sp, #8]
    db7c:	add	r9, r9, #512	; 0x200
    db80:	cmp	r3, r9
    db84:	beq	dc1c <ReadInt16Data.part.11+0x15ac>
    db88:	ldr	r3, [sp]
    db8c:	ldr	r3, [r3]
    db90:	b	db44 <ReadInt16Data.part.11+0x14d4>
    db94:	cmp	r5, #256	; 0x100
    db98:	ble	dd4c <ReadInt16Data.part.11+0x16dc>
    db9c:	ldr	r1, [sp, #4]
    dba0:	sub	r4, r5, #256	; 0x100
    dba4:	add	r6, sp, #24
    dba8:	sub	r4, r4, #1
    dbac:	lsr	r0, r4, #8
    dbb0:	add	r4, sp, #2064	; 0x810
    dbb4:	add	r2, r1, #508	; 0x1fc
    dbb8:	sub	r9, r1, #2
    dbbc:	str	r0, [sp, #12]
    dbc0:	add	r2, r2, #2
    dbc4:	add	r2, r2, r0, lsl #9
    dbc8:	str	r2, [sp, #8]
    dbcc:	mov	r2, #256	; 0x100
    dbd0:	mov	r1, r7
    dbd4:	mov	r0, r6
    dbd8:	sub	sl, r6, #8
    dbdc:	bl	1520 <fread@plt>
    dbe0:	add	r8, r8, r0
    dbe4:	mov	r3, sl
    dbe8:	mov	fp, r8
    dbec:	mov	r2, r9
    dbf0:	ldr	r1, [r3, #8]!
    dbf4:	cmp	r4, r3
    dbf8:	strh	r1, [r2, #2]!
    dbfc:	bne	dbf0 <ReadInt16Data.part.11+0x1580>
    dc00:	ldr	r3, [sp, #8]
    dc04:	add	r9, r9, #512	; 0x200
    dc08:	cmp	r3, r9
    dc0c:	beq	dcec <ReadInt16Data.part.11+0x167c>
    dc10:	ldr	r3, [sp]
    dc14:	ldr	r3, [r3]
    dc18:	b	dbcc <ReadInt16Data.part.11+0x155c>
    dc1c:	ldr	r3, [sp, #12]
    dc20:	add	r4, r3, #1
    dc24:	lsl	r9, r4, #8
    dc28:	cmp	r5, r9
    dc2c:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dc30:	ldr	r3, [sp]
    dc34:	sub	r5, r5, r9
    dc38:	mov	r0, r6
    dc3c:	mov	r2, r5
    dc40:	mov	r1, r7
    dc44:	ldr	r3, [r3]
    dc48:	bl	1520 <fread@plt>
    dc4c:	cmp	r5, #0
    dc50:	add	fp, r8, r0
    dc54:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dc58:	ldr	r3, [sp, #4]
    dc5c:	add	r5, r9, r5
    dc60:	add	r4, r3, r4, lsl #9
    dc64:	add	r3, r3, r5, lsl #1
    dc68:	ldr	r2, [sl, #8]!
    dc6c:	strh	r2, [r4], #2
    dc70:	cmp	r3, r4
    dc74:	bne	dc68 <ReadInt16Data.part.11+0x15f8>
    dc78:	b	ccfc <ReadInt16Data.part.11+0x68c>
    dc7c:	ldr	r3, [sp, #12]
    dc80:	ldr	r5, [sp, #20]
    dc84:	add	r4, r3, #1
    dc88:	lsl	r8, r4, #8
    dc8c:	cmp	r5, r8
    dc90:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dc94:	ldr	r3, [sp]
    dc98:	sub	r5, r5, r8
    dc9c:	mov	r0, r6
    dca0:	mov	r2, r5
    dca4:	mov	r1, r7
    dca8:	ldr	r3, [r3]
    dcac:	bl	1520 <fread@plt>
    dcb0:	cmp	r5, #0
    dcb4:	add	fp, r9, r0
    dcb8:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dcbc:	ldr	r3, [sp, #4]
    dcc0:	add	r5, r5, r8
    dcc4:	ldr	r6, [sp, #16]
    dcc8:	add	r4, r3, r4, lsl #9
    dccc:	add	r5, r3, r5, lsl #1
    dcd0:	mov	r0, r6
    dcd4:	add	r6, r6, #8
    dcd8:	bl	17ec <Mat_int64Swap>
    dcdc:	strh	r0, [r4], #2
    dce0:	cmp	r4, r5
    dce4:	bne	dcd0 <ReadInt16Data.part.11+0x1660>
    dce8:	b	ccfc <ReadInt16Data.part.11+0x68c>
    dcec:	ldr	r3, [sp, #12]
    dcf0:	add	r4, r3, #1
    dcf4:	lsl	r9, r4, #8
    dcf8:	cmp	r5, r9
    dcfc:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dd00:	ldr	r3, [sp]
    dd04:	sub	r5, r5, r9
    dd08:	mov	r0, r6
    dd0c:	mov	r2, r5
    dd10:	mov	r1, r7
    dd14:	ldr	r3, [r3]
    dd18:	bl	1520 <fread@plt>
    dd1c:	cmp	r5, #0
    dd20:	add	fp, r8, r0
    dd24:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dd28:	ldr	r3, [sp, #4]
    dd2c:	add	r5, r5, r9
    dd30:	add	r4, r3, r4, lsl #9
    dd34:	add	r3, r3, r5, lsl #1
    dd38:	ldr	r2, [sl, #8]!
    dd3c:	strh	r2, [r4], #2
    dd40:	cmp	r3, r4
    dd44:	bne	dd38 <ReadInt16Data.part.11+0x16c8>
    dd48:	b	ccfc <ReadInt16Data.part.11+0x68c>
    dd4c:	add	r4, sp, #24
    dd50:	mov	r2, r5
    dd54:	mov	r0, r4
    dd58:	mov	r1, r7
    dd5c:	bl	1520 <fread@plt>
    dd60:	cmp	r5, #0
    dd64:	mov	fp, r0
    dd68:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    dd6c:	ldr	r3, [sp, #4]
    dd70:	sub	r4, r4, #8
    dd74:	add	r5, r3, r5, lsl #1
    dd78:	ldr	r2, [r4, #8]!
    dd7c:	strh	r2, [r3], #2
    dd80:	cmp	r5, r3
    dd84:	bne	dd78 <ReadInt16Data.part.11+0x1708>
    dd88:	b	ccfc <ReadInt16Data.part.11+0x68c>
    dd8c:	add	r4, sp, #24
    dd90:	mov	r2, r5
    dd94:	mov	r0, r4
    dd98:	mov	r1, r7
    dd9c:	bl	1520 <fread@plt>
    dda0:	cmp	r5, #0
    dda4:	mov	fp, r0
    dda8:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    ddac:	ldr	r3, [sp, #4]
    ddb0:	sub	r4, r4, #8
    ddb4:	add	r5, r3, r5, lsl #1
    ddb8:	ldr	r2, [r4, #8]!
    ddbc:	strh	r2, [r3], #2
    ddc0:	cmp	r5, r3
    ddc4:	bne	ddb8 <ReadInt16Data.part.11+0x1748>
    ddc8:	b	ccfc <ReadInt16Data.part.11+0x68c>
    ddcc:	add	r4, sp, #24
    ddd0:	mov	r2, r5
    ddd4:	mov	r0, r4
    ddd8:	mov	r1, r7
    dddc:	bl	1520 <fread@plt>
    dde0:	cmp	r5, #0
    dde4:	mov	fp, r0
    dde8:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    ddec:	ldr	r6, [sp, #4]
    ddf0:	add	r5, r6, r5, lsl #1
    ddf4:	mov	r0, r4
    ddf8:	add	r4, r4, #8
    ddfc:	bl	1858 <Mat_uint64Swap>
    de00:	strh	r0, [r6], #2
    de04:	cmp	r5, r6
    de08:	bne	ddf4 <ReadInt16Data.part.11+0x1784>
    de0c:	b	ccfc <ReadInt16Data.part.11+0x68c>
    de10:	add	r4, sp, #24
    de14:	mov	r2, r5
    de18:	mov	r0, r4
    de1c:	mov	r1, r7
    de20:	bl	1520 <fread@plt>
    de24:	cmp	r5, #0
    de28:	mov	fp, r0
    de2c:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    de30:	ldr	r6, [sp, #4]
    de34:	add	r5, r6, r5, lsl #1
    de38:	mov	r0, r4
    de3c:	add	r4, r4, #8
    de40:	bl	17ec <Mat_int64Swap>
    de44:	strh	r0, [r6], #2
    de48:	cmp	r6, r5
    de4c:	bne	de38 <ReadInt16Data.part.11+0x17c8>
    de50:	b	ccfc <ReadInt16Data.part.11+0x68c>
    de54:	ldr	r3, [sp]
    de58:	sub	r5, r5, r8
    de5c:	mov	r0, r6
    de60:	mov	r2, r5
    de64:	mov	r1, r7
    de68:	ldr	r3, [r3]
    de6c:	bl	1520 <fread@plt>
    de70:	cmp	r5, #0
    de74:	add	fp, r9, r0
    de78:	ble	ccfc <ReadInt16Data.part.11+0x68c>
    de7c:	ldr	r3, [sp, #4]
    de80:	add	r5, r5, r8
    de84:	ldr	r6, [sp, #16]
    de88:	add	r4, r3, r4, lsl #9
    de8c:	add	r5, r3, r5, lsl #1
    de90:	mov	r0, r6
    de94:	add	r6, r6, #8
    de98:	bl	1858 <Mat_uint64Swap>
    de9c:	strh	r0, [r4], #2
    dea0:	cmp	r5, r4
    dea4:	bne	de90 <ReadInt16Data.part.11+0x1820>
    dea8:	b	ccfc <ReadInt16Data.part.11+0x68c>

0000deac <ReadUInt16Data.part.13>:
    deac:	strd	r4, [sp, #-36]!	; 0xffffffdc
    deb0:	mov	r4, r2
    deb4:	mov	r5, r3
    deb8:	strd	r6, [sp, #8]
    debc:	strd	r8, [sp, #16]
    dec0:	strd	sl, [sp, #24]
    dec4:	str	lr, [sp, #32]
    dec8:	sub	sp, sp, #2064	; 0x810
    decc:	sub	sp, sp, #12
    ded0:	strd	r0, [sp]
    ded4:	mov	r0, r2
    ded8:	bl	1598 <Mat_SizeOf@plt>
    dedc:	sub	r3, r4, #1
    dee0:	mov	r7, r0
    dee4:	cmp	r3, #8
    dee8:	addls	pc, pc, r3, lsl #2
    deec:	b	e45c <ReadUInt16Data.part.13+0x5b0>
    def0:	b	dfcc <ReadUInt16Data.part.13+0x120>
    def4:	b	e108 <ReadUInt16Data.part.13+0x25c>
    def8:	b	e248 <ReadUInt16Data.part.13+0x39c>
    defc:	b	e05c <ReadUInt16Data.part.13+0x1b0>
    df00:	b	e2f4 <ReadUInt16Data.part.13+0x448>
    df04:	b	e198 <ReadUInt16Data.part.13+0x2ec>
    df08:	b	e3a4 <ReadUInt16Data.part.13+0x4f8>
    df0c:	b	e45c <ReadUInt16Data.part.13+0x5b0>
    df10:	b	df14 <ReadUInt16Data.part.13+0x68>
    df14:	ldr	r3, [sp]
    df18:	ldr	r9, [r3, #20]
    df1c:	ldr	r3, [r3]
    df20:	cmp	r9, #0
    df24:	beq	e7f8 <ReadUInt16Data.part.13+0x94c>
    df28:	cmp	r5, #256	; 0x100
    df2c:	ble	eb44 <ReadUInt16Data.part.13+0xc98>
    df30:	ldr	r1, [sp, #4]
    df34:	sub	r4, r5, #256	; 0x100
    df38:	mov	r9, #0
    df3c:	sub	r4, r4, #1
    df40:	add	r6, sp, #24
    df44:	str	r5, [sp, #20]
    df48:	lsr	r0, r4, #8
    df4c:	add	r4, sp, #2064	; 0x810
    df50:	add	r4, r4, #8
    df54:	add	r2, r1, #508	; 0x1fc
    df58:	sub	r8, r1, #2
    df5c:	str	r0, [sp, #16]
    df60:	add	r2, r2, #2
    df64:	add	r2, r2, r0, lsl #9
    df68:	str	r2, [sp, #12]
    df6c:	mov	r2, #256	; 0x100
    df70:	mov	r1, r7
    df74:	mov	r0, r6
    df78:	mov	fp, r6
    df7c:	bl	1520 <fread@plt>
    df80:	add	r9, r9, r0
    df84:	mov	sl, r8
    df88:	mov	r5, r6
    df8c:	str	r9, [sp, #8]
    df90:	mov	r0, r5
    df94:	add	r5, r5, #8
    df98:	bl	19a4 <Mat_doubleSwap>
    df9c:	vcvt.u32.f64	s0, d0
    dfa0:	cmp	r5, r4
    dfa4:	vmov	r3, s0
    dfa8:	strh	r3, [sl, #2]!
    dfac:	bne	df90 <ReadUInt16Data.part.13+0xe4>
    dfb0:	ldr	r3, [sp, #12]
    dfb4:	add	r8, r8, #512	; 0x200
    dfb8:	cmp	r8, r3
    dfbc:	beq	eef8 <ReadUInt16Data.part.13+0x104c>
    dfc0:	ldr	r3, [sp]
    dfc4:	ldr	r3, [r3]
    dfc8:	b	df6c <ReadUInt16Data.part.13+0xc0>
    dfcc:	ldr	r2, [sp]
    dfd0:	cmp	r5, #256	; 0x100
    dfd4:	ldr	r3, [r2]
    dfd8:	ble	ed90 <ReadUInt16Data.part.13+0xee4>
    dfdc:	sub	r4, r5, #256	; 0x100
    dfe0:	add	r6, sp, #24
    dfe4:	ldr	r1, [sp, #4]
    dfe8:	sub	r4, r4, #1
    dfec:	mov	sl, r5
    dff0:	lsr	r0, r4, #8
    dff4:	mov	r9, #0
    dff8:	add	r4, r6, #255	; 0xff
    dffc:	mov	r5, r2
    e000:	str	r0, [sp, #8]
    e004:	add	fp, r1, #508	; 0x1fc
    e008:	sub	r8, r1, #2
    e00c:	add	fp, fp, #2
    e010:	add	fp, fp, r0, lsl #9
    e014:	mov	r2, #256	; 0x100
    e018:	mov	r1, r7
    e01c:	mov	r0, r6
    e020:	bl	1520 <fread@plt>
    e024:	add	r9, r9, r0
    e028:	sub	ip, r6, #1
    e02c:	mov	r0, r9
    e030:	mov	r3, ip
    e034:	mov	r2, r8
    e038:	ldrsb	r1, [r3, #1]!
    e03c:	cmp	r3, r4
    e040:	strh	r1, [r2, #2]!
    e044:	bne	e038 <ReadUInt16Data.part.13+0x18c>
    e048:	add	r8, r8, #512	; 0x200
    e04c:	cmp	fp, r8
    e050:	beq	e55c <ReadUInt16Data.part.13+0x6b0>
    e054:	ldr	r3, [r5]
    e058:	b	e014 <ReadUInt16Data.part.13+0x168>
    e05c:	ldr	r3, [sp]
    e060:	ldr	r9, [r3, #20]
    e064:	ldr	r3, [r3]
    e068:	cmp	r9, #0
    e06c:	beq	e6f0 <ReadUInt16Data.part.13+0x844>
    e070:	cmp	r5, #256	; 0x100
    e074:	ble	eb00 <ReadUInt16Data.part.13+0xc54>
    e078:	ldr	r1, [sp, #4]
    e07c:	sub	r4, r5, #256	; 0x100
    e080:	mov	r9, #0
    e084:	sub	r4, r4, #1
    e088:	add	r6, sp, #24
    e08c:	str	r5, [sp, #20]
    e090:	lsr	r0, r4, #8
    e094:	add	r4, sp, #536	; 0x218
    e098:	add	r2, r1, #508	; 0x1fc
    e09c:	sub	r8, r1, #2
    e0a0:	str	r0, [sp, #16]
    e0a4:	add	r2, r2, #2
    e0a8:	add	r2, r2, r0, lsl #9
    e0ac:	str	r2, [sp, #12]
    e0b0:	mov	r2, #256	; 0x100
    e0b4:	mov	r1, r7
    e0b8:	mov	r0, r6
    e0bc:	mov	fp, r6
    e0c0:	bl	1520 <fread@plt>
    e0c4:	add	r9, r9, r0
    e0c8:	mov	sl, r8
    e0cc:	mov	r5, r6
    e0d0:	str	r9, [sp, #8]
    e0d4:	mov	r0, r5
    e0d8:	add	r5, r5, #2
    e0dc:	bl	1950 <Mat_uint16Swap>
    e0e0:	cmp	r4, r5
    e0e4:	strh	r0, [sl, #2]!
    e0e8:	bne	e0d4 <ReadUInt16Data.part.13+0x228>
    e0ec:	ldr	r3, [sp, #12]
    e0f0:	add	r8, r8, #512	; 0x200
    e0f4:	cmp	r3, r8
    e0f8:	beq	ed1c <ReadUInt16Data.part.13+0xe70>
    e0fc:	ldr	r3, [sp]
    e100:	ldr	r3, [r3]
    e104:	b	e0b0 <ReadUInt16Data.part.13+0x204>
    e108:	ldr	r2, [sp]
    e10c:	cmp	r5, #256	; 0x100
    e110:	ldr	r3, [r2]
    e114:	ble	ee40 <ReadUInt16Data.part.13+0xf94>
    e118:	sub	r4, r5, #256	; 0x100
    e11c:	add	r6, sp, #24
    e120:	ldr	r1, [sp, #4]
    e124:	sub	r4, r4, #1
    e128:	mov	sl, r5
    e12c:	lsr	r0, r4, #8
    e130:	mov	r9, #0
    e134:	add	r4, r6, #255	; 0xff
    e138:	mov	r5, r2
    e13c:	str	r0, [sp, #8]
    e140:	add	fp, r1, #508	; 0x1fc
    e144:	sub	r8, r1, #2
    e148:	add	fp, fp, #2
    e14c:	add	fp, fp, r0, lsl #9
    e150:	mov	r2, #256	; 0x100
    e154:	mov	r1, r7
    e158:	mov	r0, r6
    e15c:	bl	1520 <fread@plt>
    e160:	add	r9, r9, r0
    e164:	sub	ip, r6, #1
    e168:	mov	r0, r9
    e16c:	mov	r3, ip
    e170:	mov	r2, r8
    e174:	ldrb	r1, [r3, #1]!
    e178:	cmp	r4, r3
    e17c:	strh	r1, [r2, #2]!
    e180:	bne	e174 <ReadUInt16Data.part.13+0x2c8>
    e184:	add	r8, r8, #512	; 0x200
    e188:	cmp	fp, r8
    e18c:	beq	e580 <ReadUInt16Data.part.13+0x6d4>
    e190:	ldr	r3, [r5]
    e194:	b	e150 <ReadUInt16Data.part.13+0x2a4>
    e198:	ldr	r3, [sp]
    e19c:	ldr	r9, [r3, #20]
    e1a0:	ldr	r3, [r3]
    e1a4:	cmp	r9, #0
    e1a8:	beq	e774 <ReadUInt16Data.part.13+0x8c8>
    e1ac:	cmp	r5, #256	; 0x100
    e1b0:	ble	eb90 <ReadUInt16Data.part.13+0xce4>
    e1b4:	ldr	r1, [sp, #4]
    e1b8:	sub	r4, r5, #256	; 0x100
    e1bc:	mov	r9, #0
    e1c0:	sub	r4, r4, #1
    e1c4:	add	r6, sp, #24
    e1c8:	str	r5, [sp, #20]
    e1cc:	lsr	r0, r4, #8
    e1d0:	add	r4, sp, #1040	; 0x410
    e1d4:	add	r4, r4, #8
    e1d8:	add	r2, r1, #508	; 0x1fc
    e1dc:	sub	r8, r1, #2
    e1e0:	str	r0, [sp, #16]
    e1e4:	add	r2, r2, #2
    e1e8:	add	r2, r2, r0, lsl #9
    e1ec:	str	r2, [sp, #12]
    e1f0:	mov	r2, #256	; 0x100
    e1f4:	mov	r1, r7
    e1f8:	mov	r0, r6
    e1fc:	mov	fp, r6
    e200:	bl	1520 <fread@plt>
    e204:	add	r9, r9, r0
    e208:	mov	sl, r8
    e20c:	mov	r5, r6
    e210:	str	r9, [sp, #8]
    e214:	mov	r0, r5
    e218:	add	r5, r5, #4
    e21c:	bl	18f8 <Mat_uint32Swap>
    e220:	cmp	r5, r4
    e224:	strh	r0, [sl, #2]!
    e228:	bne	e214 <ReadUInt16Data.part.13+0x368>
    e22c:	ldr	r3, [sp, #12]
    e230:	add	r8, r8, #512	; 0x200
    e234:	cmp	r8, r3
    e238:	beq	eca8 <ReadUInt16Data.part.13+0xdfc>
    e23c:	ldr	r3, [sp]
    e240:	ldr	r3, [r3]
    e244:	b	e1f0 <ReadUInt16Data.part.13+0x344>
    e248:	ldr	r3, [sp]
    e24c:	ldr	r9, [r3, #20]
    e250:	ldr	r3, [r3]
    e254:	cmp	r9, #0
    e258:	beq	e5e8 <ReadUInt16Data.part.13+0x73c>
    e25c:	cmp	r5, #256	; 0x100
    e260:	ble	ec64 <ReadUInt16Data.part.13+0xdb8>
    e264:	ldr	r1, [sp, #4]
    e268:	sub	r4, r5, #256	; 0x100
    e26c:	mov	r9, #0
    e270:	sub	r4, r4, #1
    e274:	add	r6, sp, #24
    e278:	str	r5, [sp, #20]
    e27c:	lsr	r0, r4, #8
    e280:	add	r4, sp, #536	; 0x218
    e284:	add	r2, r1, #508	; 0x1fc
    e288:	sub	r8, r1, #2
    e28c:	str	r0, [sp, #16]
    e290:	add	r2, r2, #2
    e294:	add	r2, r2, r0, lsl #9
    e298:	str	r2, [sp, #12]
    e29c:	mov	r2, #256	; 0x100
    e2a0:	mov	r1, r7
    e2a4:	mov	r0, r6
    e2a8:	mov	fp, r6
    e2ac:	bl	1520 <fread@plt>
    e2b0:	add	r9, r9, r0
    e2b4:	mov	sl, r8
    e2b8:	mov	r5, r6
    e2bc:	str	r9, [sp, #8]
    e2c0:	mov	r0, r5
    e2c4:	add	r5, r5, #2
    e2c8:	bl	192c <Mat_int16Swap>
    e2cc:	cmp	r4, r5
    e2d0:	strh	r0, [sl, #2]!
    e2d4:	bne	e2c0 <ReadUInt16Data.part.13+0x414>
    e2d8:	ldr	r3, [sp, #12]
    e2dc:	add	r8, r8, #512	; 0x200
    e2e0:	cmp	r3, r8
    e2e4:	beq	f2d4 <ReadUInt16Data.part.13+0x1428>
    e2e8:	ldr	r3, [sp]
    e2ec:	ldr	r3, [r3]
    e2f0:	b	e29c <ReadUInt16Data.part.13+0x3f0>
    e2f4:	ldr	r3, [sp]
    e2f8:	ldr	r9, [r3, #20]
    e2fc:	ldr	r3, [r3]
    e300:	cmp	r9, #0
    e304:	beq	e66c <ReadUInt16Data.part.13+0x7c0>
    e308:	cmp	r5, #256	; 0x100
    e30c:	ble	ec20 <ReadUInt16Data.part.13+0xd74>
    e310:	ldr	r1, [sp, #4]
    e314:	sub	r8, r5, #256	; 0x100
    e318:	add	r4, sp, #1040	; 0x410
    e31c:	sub	r8, r8, #1
    e320:	mov	r9, #0
    e324:	str	r5, [sp, #20]
    e328:	lsr	r0, r8, #8
    e32c:	add	r6, sp, #24
    e330:	add	r4, r4, #8
    e334:	add	r2, r1, #508	; 0x1fc
    e338:	sub	r8, r1, #2
    e33c:	str	r0, [sp, #16]
    e340:	add	r2, r2, #2
    e344:	add	r2, r2, r0, lsl #9
    e348:	str	r2, [sp, #12]
    e34c:	mov	r2, #256	; 0x100
    e350:	mov	r1, r7
    e354:	mov	r0, r6
    e358:	mov	sl, r8
    e35c:	bl	1520 <fread@plt>
    e360:	add	r9, r9, r0
    e364:	mov	r5, r6
    e368:	str	r6, [sp, #8]
    e36c:	mov	fp, r9
    e370:	mov	r0, r5
    e374:	add	r5, r5, #4
    e378:	bl	18c4 <Mat_int32Swap>
    e37c:	cmp	r5, r4
    e380:	strh	r0, [sl, #2]!
    e384:	bne	e370 <ReadUInt16Data.part.13+0x4c4>
    e388:	ldr	r3, [sp, #12]
    e38c:	add	r8, r8, #512	; 0x200
    e390:	cmp	r3, r8
    e394:	beq	edcc <ReadUInt16Data.part.13+0xf20>
    e398:	ldr	r3, [sp]
    e39c:	ldr	r3, [r3]
    e3a0:	b	e34c <ReadUInt16Data.part.13+0x4a0>
    e3a4:	ldr	r3, [sp]
    e3a8:	ldr	r9, [r3, #20]
    e3ac:	ldr	r3, [r3]
    e3b0:	cmp	r9, #0
    e3b4:	beq	e888 <ReadUInt16Data.part.13+0x9dc>
    e3b8:	cmp	r5, #256	; 0x100
    e3bc:	ble	ebd4 <ReadUInt16Data.part.13+0xd28>
    e3c0:	ldr	r1, [sp, #4]
    e3c4:	sub	r4, r5, #256	; 0x100
    e3c8:	mov	r9, #0
    e3cc:	sub	r4, r4, #1
    e3d0:	add	r6, sp, #24
    e3d4:	str	r5, [sp, #20]
    e3d8:	lsr	r0, r4, #8
    e3dc:	add	r4, sp, #1040	; 0x410
    e3e0:	add	r4, r4, #8
    e3e4:	add	r2, r1, #508	; 0x1fc
    e3e8:	sub	r8, r1, #2
    e3ec:	str	r0, [sp, #16]
    e3f0:	add	r2, r2, #2
    e3f4:	add	r2, r2, r0, lsl #9
    e3f8:	str	r2, [sp, #12]
    e3fc:	mov	r2, #256	; 0x100
    e400:	mov	r1, r7
    e404:	mov	r0, r6
    e408:	mov	fp, r6
    e40c:	bl	1520 <fread@plt>
    e410:	add	r9, r9, r0
    e414:	mov	sl, r8
    e418:	mov	r5, r6
    e41c:	str	r9, [sp, #8]
    e420:	mov	r0, r5
    e424:	add	r5, r5, #4
    e428:	bl	1974 <Mat_floatSwap>
    e42c:	vcvt.u32.f32	s0, s0
    e430:	cmp	r5, r4
    e434:	vmov	r3, s0
    e438:	strh	r3, [sl, #2]!
    e43c:	bne	e420 <ReadUInt16Data.part.13+0x574>
    e440:	ldr	r3, [sp, #12]
    e444:	add	r8, r8, #512	; 0x200
    e448:	cmp	r8, r3
    e44c:	beq	ee7c <ReadUInt16Data.part.13+0xfd0>
    e450:	ldr	r3, [sp]
    e454:	ldr	r3, [r3]
    e458:	b	e3fc <ReadUInt16Data.part.13+0x550>
    e45c:	cmp	r4, #12
    e460:	beq	ef74 <ReadUInt16Data.part.13+0x10c8>
    e464:	cmp	r4, #13
    e468:	movne	r0, #0
    e46c:	bne	e53c <ReadUInt16Data.part.13+0x690>
    e470:	ldr	r3, [sp]
    e474:	ldr	r8, [r3, #20]
    e478:	ldr	r3, [r3]
    e47c:	cmp	r8, #0
    e480:	beq	f348 <ReadUInt16Data.part.13+0x149c>
    e484:	cmp	r5, #256	; 0x100
    e488:	ble	f608 <ReadUInt16Data.part.13+0x175c>
    e48c:	ldr	r1, [sp, #4]
    e490:	sub	r4, r5, #256	; 0x100
    e494:	mov	r9, #0
    e498:	sub	r4, r4, #1
    e49c:	add	r6, sp, #24
    e4a0:	str	r5, [sp, #20]
    e4a4:	lsr	r0, r4, #8
    e4a8:	add	r4, sp, #2064	; 0x810
    e4ac:	add	r4, r4, #8
    e4b0:	add	r2, r1, #508	; 0x1fc
    e4b4:	sub	sl, r1, #2
    e4b8:	str	r0, [sp, #12]
    e4bc:	add	r2, r2, #2
    e4c0:	add	r2, r2, r0, lsl #9
    e4c4:	str	r2, [sp, #8]
    e4c8:	mov	r2, #256	; 0x100
    e4cc:	mov	r1, r7
    e4d0:	mov	r0, r6
    e4d4:	mov	r5, sl
    e4d8:	bl	1520 <fread@plt>
    e4dc:	add	r9, r9, r0
    e4e0:	mov	r8, r6
    e4e4:	str	r6, [sp, #16]
    e4e8:	mov	fp, r9
    e4ec:	mov	r0, r8
    e4f0:	add	r8, r8, #8
    e4f4:	bl	1858 <Mat_uint64Swap>
    e4f8:	cmp	r4, r8
    e4fc:	strh	r0, [r5, #2]!
    e500:	bne	e4ec <ReadUInt16Data.part.13+0x640>
    e504:	ldr	r3, [sp, #8]
    e508:	add	sl, sl, #512	; 0x200
    e50c:	cmp	r3, sl
    e510:	beq	e520 <ReadUInt16Data.part.13+0x674>
    e514:	ldr	r3, [sp]
    e518:	ldr	r3, [r3]
    e51c:	b	e4c8 <ReadUInt16Data.part.13+0x61c>
    e520:	ldr	r3, [sp, #12]
    e524:	ldr	r5, [sp, #20]
    e528:	add	r4, r3, #1
    e52c:	lsl	r8, r4, #8
    e530:	cmp	r5, r8
    e534:	bgt	f690 <ReadUInt16Data.part.13+0x17e4>
    e538:	mul	r0, fp, r7
    e53c:	add	sp, sp, #2064	; 0x810
    e540:	add	sp, sp, #12
    e544:	ldrd	r4, [sp]
    e548:	ldrd	r6, [sp, #8]
    e54c:	ldrd	r8, [sp, #16]
    e550:	ldrd	sl, [sp, #24]
    e554:	add	sp, sp, #32
    e558:	pop	{pc}		; (ldr pc, [sp], #4)
    e55c:	ldr	r3, [sp, #8]
    e560:	mov	r5, sl
    e564:	mov	sl, ip
    e568:	add	r4, r3, #1
    e56c:	lsl	r8, r4, #8
    e570:	cmp	r5, r8
    e574:	bgt	e918 <ReadUInt16Data.part.13+0xa6c>
    e578:	mul	r0, r0, r7
    e57c:	b	e53c <ReadUInt16Data.part.13+0x690>
    e580:	ldr	r3, [sp, #8]
    e584:	mov	r5, sl
    e588:	mov	sl, ip
    e58c:	add	r4, r3, #1
    e590:	lsl	r8, r4, #8
    e594:	cmp	r5, r8
    e598:	ble	e578 <ReadUInt16Data.part.13+0x6cc>
    e59c:	ldr	r3, [sp]
    e5a0:	sub	r5, r5, r8
    e5a4:	mov	r0, r6
    e5a8:	mov	r2, r5
    e5ac:	mov	r1, r7
    e5b0:	ldr	r3, [r3]
    e5b4:	bl	1520 <fread@plt>
    e5b8:	cmp	r5, #0
    e5bc:	add	r0, r9, r0
    e5c0:	ble	e578 <ReadUInt16Data.part.13+0x6cc>
    e5c4:	ldr	r3, [sp, #4]
    e5c8:	add	r5, r5, r8
    e5cc:	add	r4, r3, r4, lsl #9
    e5d0:	add	r3, r3, r5, lsl #1
    e5d4:	ldrb	r2, [sl, #1]!
    e5d8:	strh	r2, [r4], #2
    e5dc:	cmp	r3, r4
    e5e0:	bne	e5d4 <ReadUInt16Data.part.13+0x728>
    e5e4:	b	e578 <ReadUInt16Data.part.13+0x6cc>
    e5e8:	cmp	r5, #256	; 0x100
    e5ec:	ble	ea3c <ReadUInt16Data.part.13+0xb90>
    e5f0:	ldr	r0, [sp, #4]
    e5f4:	sub	r2, r5, #256	; 0x100
    e5f8:	movw	r4, #510	; 0x1fe
    e5fc:	sub	r2, r2, #1
    e600:	mov	fp, r5
    e604:	lsr	r2, r2, #8
    e608:	ldr	r5, [sp]
    e60c:	add	r6, sp, #24
    e610:	add	r1, r0, r4
    e614:	sub	r8, r0, #2
    e618:	str	r2, [sp, #12]
    e61c:	add	sl, r1, r2, lsl #9
    e620:	add	r4, r6, r4
    e624:	mov	r2, #256	; 0x100
    e628:	mov	r1, r7
    e62c:	mov	r0, r6
    e630:	bl	1520 <fread@plt>
    e634:	add	r9, r9, r0
    e638:	sub	r0, r6, #2
    e63c:	mov	ip, r9
    e640:	mov	r3, r0
    e644:	mov	r2, r8
    e648:	ldrh	r1, [r3, #2]!
    e64c:	cmp	r4, r3
    e650:	strh	r1, [r2, #2]!
    e654:	bne	e648 <ReadUInt16Data.part.13+0x79c>
    e658:	add	r8, r8, #512	; 0x200
    e65c:	cmp	sl, r8
    e660:	beq	f104 <ReadUInt16Data.part.13+0x1258>
    e664:	ldr	r3, [r5]
    e668:	b	e624 <ReadUInt16Data.part.13+0x778>
    e66c:	cmp	r5, #256	; 0x100
    e670:	ble	eabc <ReadUInt16Data.part.13+0xc10>
    e674:	ldr	r1, [sp, #4]
    e678:	sub	r4, r5, #256	; 0x100
    e67c:	mov	fp, r5
    e680:	sub	r4, r4, #1
    e684:	add	r6, sp, #24
    e688:	lsr	r0, r4, #8
    e68c:	ldr	r5, [sp]
    e690:	add	r4, r6, #1020	; 0x3fc
    e694:	add	r2, r1, #508	; 0x1fc
    e698:	sub	r8, r1, #2
    e69c:	str	r0, [sp, #8]
    e6a0:	add	r2, r2, #2
    e6a4:	add	sl, r2, r0, lsl #9
    e6a8:	mov	r2, #256	; 0x100
    e6ac:	mov	r1, r7
    e6b0:	mov	r0, r6
    e6b4:	bl	1520 <fread@plt>
    e6b8:	add	r9, r9, r0
    e6bc:	sub	r0, r6, #4
    e6c0:	mov	ip, r9
    e6c4:	mov	r3, r0
    e6c8:	mov	r2, r8
    e6cc:	ldr	r1, [r3, #4]!
    e6d0:	cmp	r4, r3
    e6d4:	strh	r1, [r2, #2]!
    e6d8:	bne	e6cc <ReadUInt16Data.part.13+0x820>
    e6dc:	add	r8, r8, #512	; 0x200
    e6e0:	cmp	r8, sl
    e6e4:	beq	f024 <ReadUInt16Data.part.13+0x1178>
    e6e8:	ldr	r3, [r5]
    e6ec:	b	e6a8 <ReadUInt16Data.part.13+0x7fc>
    e6f0:	cmp	r5, #256	; 0x100
    e6f4:	ble	ea7c <ReadUInt16Data.part.13+0xbd0>
    e6f8:	ldr	r0, [sp, #4]
    e6fc:	sub	r2, r5, #256	; 0x100
    e700:	movw	r4, #510	; 0x1fe
    e704:	sub	r2, r2, #1
    e708:	mov	fp, r5
    e70c:	lsr	r2, r2, #8
    e710:	ldr	r5, [sp]
    e714:	add	r6, sp, #24
    e718:	add	r1, r0, r4
    e71c:	sub	r8, r0, #2
    e720:	str	r2, [sp, #12]
    e724:	add	sl, r1, r2, lsl #9
    e728:	add	r4, r6, r4
    e72c:	mov	r2, #256	; 0x100
    e730:	mov	r1, r7
    e734:	mov	r0, r6
    e738:	bl	1520 <fread@plt>
    e73c:	add	r9, r9, r0
    e740:	sub	r0, r6, #2
    e744:	mov	ip, r9
    e748:	mov	r3, r0
    e74c:	mov	r2, r8
    e750:	ldrh	r1, [r3, #2]!
    e754:	cmp	r4, r3
    e758:	strh	r1, [r2, #2]!
    e75c:	bne	e750 <ReadUInt16Data.part.13+0x8a4>
    e760:	add	r8, r8, #512	; 0x200
    e764:	cmp	sl, r8
    e768:	beq	f264 <ReadUInt16Data.part.13+0x13b8>
    e76c:	ldr	r3, [r5]
    e770:	b	e72c <ReadUInt16Data.part.13+0x880>
    e774:	cmp	r5, #256	; 0x100
    e778:	ble	e9fc <ReadUInt16Data.part.13+0xb50>
    e77c:	ldr	r1, [sp, #4]
    e780:	sub	r4, r5, #256	; 0x100
    e784:	mov	fp, r5
    e788:	sub	r4, r4, #1
    e78c:	add	r6, sp, #24
    e790:	lsr	r0, r4, #8
    e794:	ldr	r5, [sp]
    e798:	add	r4, r6, #1020	; 0x3fc
    e79c:	add	r2, r1, #508	; 0x1fc
    e7a0:	sub	r8, r1, #2
    e7a4:	str	r0, [sp, #12]
    e7a8:	add	r2, r2, #2
    e7ac:	add	sl, r2, r0, lsl #9
    e7b0:	mov	r2, #256	; 0x100
    e7b4:	mov	r1, r7
    e7b8:	mov	r0, r6
    e7bc:	bl	1520 <fread@plt>
    e7c0:	add	r9, r9, r0
    e7c4:	sub	r0, r6, #4
    e7c8:	mov	ip, r9
    e7cc:	mov	r3, r0
    e7d0:	mov	r2, r8
    e7d4:	ldr	r1, [r3, #4]!
    e7d8:	cmp	r3, r4
    e7dc:	strh	r1, [r2, #2]!
    e7e0:	bne	e7d4 <ReadUInt16Data.part.13+0x928>
    e7e4:	add	r8, r8, #512	; 0x200
    e7e8:	cmp	r8, sl
    e7ec:	beq	f094 <ReadUInt16Data.part.13+0x11e8>
    e7f0:	ldr	r3, [r5]
    e7f4:	b	e7b0 <ReadUInt16Data.part.13+0x904>
    e7f8:	cmp	r5, #256	; 0x100
    e7fc:	ble	e9b4 <ReadUInt16Data.part.13+0xb08>
    e800:	ldr	r1, [sp, #4]
    e804:	sub	r4, r5, #256	; 0x100
    e808:	mov	sl, r5
    e80c:	sub	r4, r4, #1
    e810:	add	r6, sp, #24
    e814:	lsr	r0, r4, #8
    e818:	ldr	r5, [sp]
    e81c:	add	r4, sp, #2064	; 0x810
    e820:	add	r4, r4, #8
    e824:	add	r2, r1, #508	; 0x1fc
    e828:	sub	r8, r1, #2
    e82c:	str	r0, [sp, #12]
    e830:	add	r2, r2, #2
    e834:	add	fp, r2, r0, lsl #9
    e838:	mov	r2, #256	; 0x100
    e83c:	mov	r1, r7
    e840:	mov	r0, r6
    e844:	bl	1520 <fread@plt>
    e848:	add	r9, r9, r0
    e84c:	mov	r2, r8
    e850:	mov	r0, r6
    e854:	mov	r1, r9
    e858:	mov	r3, r6
    e85c:	vldmia	r3!, {d7}
    e860:	vcvt.u32.f64	s14, d7
    e864:	cmp	r3, r4
    e868:	vmov	ip, s14
    e86c:	strh	ip, [r2, #2]!
    e870:	bne	e85c <ReadUInt16Data.part.13+0x9b0>
    e874:	add	r8, r8, #512	; 0x200
    e878:	cmp	r8, fp
    e87c:	beq	f1ec <ReadUInt16Data.part.13+0x1340>
    e880:	ldr	r3, [r5]
    e884:	b	e838 <ReadUInt16Data.part.13+0x98c>
    e888:	cmp	r5, #256	; 0x100
    e88c:	ble	e964 <ReadUInt16Data.part.13+0xab8>
    e890:	ldr	r1, [sp, #4]
    e894:	sub	r4, r5, #256	; 0x100
    e898:	mov	sl, r5
    e89c:	sub	r4, r4, #1
    e8a0:	add	r6, sp, #24
    e8a4:	lsr	r0, r4, #8
    e8a8:	ldr	r5, [sp]
    e8ac:	add	r4, sp, #1040	; 0x410
    e8b0:	add	r4, r4, #8
    e8b4:	add	r2, r1, #508	; 0x1fc
    e8b8:	sub	r8, r1, #2
    e8bc:	str	r0, [sp, #12]
    e8c0:	add	r2, r2, #2
    e8c4:	add	fp, r2, r0, lsl #9
    e8c8:	mov	r2, #256	; 0x100
    e8cc:	mov	r1, r7
    e8d0:	mov	r0, r6
    e8d4:	bl	1520 <fread@plt>
    e8d8:	add	r9, r9, r0
    e8dc:	mov	r2, r8
    e8e0:	mov	r0, r6
    e8e4:	mov	r1, r9
    e8e8:	mov	r3, r6
    e8ec:	vldmia	r3!, {s15}
    e8f0:	vcvt.u32.f32	s15, s15
    e8f4:	cmp	r3, r4
    e8f8:	vmov	ip, s15
    e8fc:	strh	ip, [r2, #2]!
    e900:	bne	e8ec <ReadUInt16Data.part.13+0xa40>
    e904:	add	r8, r8, #512	; 0x200
    e908:	cmp	r8, fp
    e90c:	beq	f174 <ReadUInt16Data.part.13+0x12c8>
    e910:	ldr	r3, [r5]
    e914:	b	e8c8 <ReadUInt16Data.part.13+0xa1c>
    e918:	ldr	r3, [sp]
    e91c:	sub	r5, r5, r8
    e920:	mov	r0, r6
    e924:	mov	r2, r5
    e928:	mov	r1, r7
    e92c:	ldr	r3, [r3]
    e930:	bl	1520 <fread@plt>
    e934:	cmp	r5, #0
    e938:	add	r0, r9, r0
    e93c:	ble	e578 <ReadUInt16Data.part.13+0x6cc>
    e940:	ldr	r3, [sp, #4]
    e944:	add	r5, r8, r5
    e948:	add	r4, r3, r4, lsl #9
    e94c:	add	r3, r3, r5, lsl #1
    e950:	ldrsb	r2, [sl, #1]!
    e954:	strh	r2, [r4], #2
    e958:	cmp	r3, r4
    e95c:	bne	e950 <ReadUInt16Data.part.13+0xaa4>
    e960:	b	e578 <ReadUInt16Data.part.13+0x6cc>
    e964:	add	r4, sp, #24
    e968:	mov	r2, r5
    e96c:	mov	r0, r4
    e970:	mov	r1, r7
    e974:	bl	1520 <fread@plt>
    e978:	cmp	r5, #0
    e97c:	str	r0, [sp, #8]
    e980:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    e984:	ldr	r3, [sp, #4]
    e988:	mov	r2, r4
    e98c:	add	r5, r3, r5, lsl #1
    e990:	vldmia	r2!, {s15}
    e994:	vcvt.u32.f32	s15, s15
    e998:	vmov	r1, s15
    e99c:	strh	r1, [r3], #2
    e9a0:	cmp	r3, r5
    e9a4:	bne	e990 <ReadUInt16Data.part.13+0xae4>
    e9a8:	ldr	r3, [sp, #8]
    e9ac:	mul	r0, r3, r7
    e9b0:	b	e53c <ReadUInt16Data.part.13+0x690>
    e9b4:	add	r4, sp, #24
    e9b8:	mov	r2, r5
    e9bc:	mov	r0, r4
    e9c0:	mov	r1, r7
    e9c4:	bl	1520 <fread@plt>
    e9c8:	cmp	r5, #0
    e9cc:	str	r0, [sp, #8]
    e9d0:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    e9d4:	ldr	r3, [sp, #4]
    e9d8:	mov	r2, r4
    e9dc:	add	r5, r3, r5, lsl #1
    e9e0:	vldmia	r2!, {d7}
    e9e4:	vcvt.u32.f64	s14, d7
    e9e8:	vmov	r1, s14
    e9ec:	strh	r1, [r3], #2
    e9f0:	cmp	r3, r5
    e9f4:	bne	e9e0 <ReadUInt16Data.part.13+0xb34>
    e9f8:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    e9fc:	add	r4, sp, #24
    ea00:	mov	r2, r5
    ea04:	mov	r0, r4
    ea08:	mov	r1, r7
    ea0c:	bl	1520 <fread@plt>
    ea10:	cmp	r5, #0
    ea14:	str	r0, [sp, #8]
    ea18:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ea1c:	ldr	r3, [sp, #4]
    ea20:	sub	r2, r4, #4
    ea24:	add	r5, r3, r5, lsl #1
    ea28:	ldr	r1, [r2, #4]!
    ea2c:	strh	r1, [r3], #2
    ea30:	cmp	r3, r5
    ea34:	bne	ea28 <ReadUInt16Data.part.13+0xb7c>
    ea38:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ea3c:	add	r4, sp, #24
    ea40:	mov	r2, r5
    ea44:	mov	r0, r4
    ea48:	mov	r1, r7
    ea4c:	bl	1520 <fread@plt>
    ea50:	cmp	r5, #0
    ea54:	str	r0, [sp, #8]
    ea58:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ea5c:	ldr	r3, [sp, #4]
    ea60:	sub	r2, r4, #2
    ea64:	add	r5, r3, r5, lsl #1
    ea68:	ldrh	r1, [r2, #2]!
    ea6c:	strh	r1, [r3], #2
    ea70:	cmp	r5, r3
    ea74:	bne	ea68 <ReadUInt16Data.part.13+0xbbc>
    ea78:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ea7c:	add	r4, sp, #24
    ea80:	mov	r2, r5
    ea84:	mov	r0, r4
    ea88:	mov	r1, r7
    ea8c:	bl	1520 <fread@plt>
    ea90:	cmp	r5, #0
    ea94:	str	r0, [sp, #8]
    ea98:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ea9c:	ldr	r3, [sp, #4]
    eaa0:	sub	r2, r4, #2
    eaa4:	add	r5, r3, r5, lsl #1
    eaa8:	ldrh	r1, [r2, #2]!
    eaac:	strh	r1, [r3], #2
    eab0:	cmp	r5, r3
    eab4:	bne	eaa8 <ReadUInt16Data.part.13+0xbfc>
    eab8:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    eabc:	add	r4, sp, #24
    eac0:	mov	r2, r5
    eac4:	mov	r0, r4
    eac8:	mov	r1, r7
    eacc:	bl	1520 <fread@plt>
    ead0:	cmp	r5, #0
    ead4:	mov	sl, r0
    ead8:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    eadc:	ldr	r3, [sp, #4]
    eae0:	sub	r2, r4, #4
    eae4:	add	r5, r3, r5, lsl #1
    eae8:	ldr	r1, [r2, #4]!
    eaec:	strh	r1, [r3], #2
    eaf0:	cmp	r5, r3
    eaf4:	bne	eae8 <ReadUInt16Data.part.13+0xc3c>
    eaf8:	mul	r0, sl, r7
    eafc:	b	e53c <ReadUInt16Data.part.13+0x690>
    eb00:	add	r4, sp, #24
    eb04:	mov	r2, r5
    eb08:	mov	r0, r4
    eb0c:	mov	r1, r7
    eb10:	bl	1520 <fread@plt>
    eb14:	cmp	r5, #0
    eb18:	str	r0, [sp, #8]
    eb1c:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    eb20:	ldr	r6, [sp, #4]
    eb24:	add	r5, r6, r5, lsl #1
    eb28:	mov	r0, r4
    eb2c:	add	r4, r4, #2
    eb30:	bl	1950 <Mat_uint16Swap>
    eb34:	strh	r0, [r6], #2
    eb38:	cmp	r5, r6
    eb3c:	bne	eb28 <ReadUInt16Data.part.13+0xc7c>
    eb40:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    eb44:	add	r4, sp, #24
    eb48:	mov	r2, r5
    eb4c:	mov	r0, r4
    eb50:	mov	r1, r7
    eb54:	bl	1520 <fread@plt>
    eb58:	cmp	r5, #0
    eb5c:	str	r0, [sp, #8]
    eb60:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    eb64:	ldr	r6, [sp, #4]
    eb68:	add	r5, r6, r5, lsl #1
    eb6c:	mov	r0, r4
    eb70:	add	r4, r4, #8
    eb74:	bl	19a4 <Mat_doubleSwap>
    eb78:	vcvt.u32.f64	s0, d0
    eb7c:	vmov	r3, s0
    eb80:	strh	r3, [r6], #2
    eb84:	cmp	r6, r5
    eb88:	bne	eb6c <ReadUInt16Data.part.13+0xcc0>
    eb8c:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    eb90:	add	r4, sp, #24
    eb94:	mov	r2, r5
    eb98:	mov	r0, r4
    eb9c:	mov	r1, r7
    eba0:	bl	1520 <fread@plt>
    eba4:	cmp	r5, #0
    eba8:	str	r0, [sp, #8]
    ebac:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ebb0:	ldr	r6, [sp, #4]
    ebb4:	add	r5, r6, r5, lsl #1
    ebb8:	mov	r0, r4
    ebbc:	add	r4, r4, #4
    ebc0:	bl	18f8 <Mat_uint32Swap>
    ebc4:	strh	r0, [r6], #2
    ebc8:	cmp	r6, r5
    ebcc:	bne	ebb8 <ReadUInt16Data.part.13+0xd0c>
    ebd0:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ebd4:	add	r4, sp, #24
    ebd8:	mov	r2, r5
    ebdc:	mov	r0, r4
    ebe0:	mov	r1, r7
    ebe4:	bl	1520 <fread@plt>
    ebe8:	cmp	r5, #0
    ebec:	str	r0, [sp, #8]
    ebf0:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ebf4:	ldr	r6, [sp, #4]
    ebf8:	add	r5, r6, r5, lsl #1
    ebfc:	mov	r0, r4
    ec00:	add	r4, r4, #4
    ec04:	bl	1974 <Mat_floatSwap>
    ec08:	vcvt.u32.f32	s0, s0
    ec0c:	vmov	r3, s0
    ec10:	strh	r3, [r6], #2
    ec14:	cmp	r6, r5
    ec18:	bne	ebfc <ReadUInt16Data.part.13+0xd50>
    ec1c:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ec20:	add	r4, sp, #24
    ec24:	mov	r2, r5
    ec28:	mov	r0, r4
    ec2c:	mov	r1, r7
    ec30:	bl	1520 <fread@plt>
    ec34:	cmp	r5, #0
    ec38:	mov	sl, r0
    ec3c:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    ec40:	ldr	r6, [sp, #4]
    ec44:	add	r5, r6, r5, lsl #1
    ec48:	mov	r0, r4
    ec4c:	add	r4, r4, #4
    ec50:	bl	18c4 <Mat_int32Swap>
    ec54:	strh	r0, [r6], #2
    ec58:	cmp	r5, r6
    ec5c:	bne	ec48 <ReadUInt16Data.part.13+0xd9c>
    ec60:	b	eaf8 <ReadUInt16Data.part.13+0xc4c>
    ec64:	add	r4, sp, #24
    ec68:	mov	r2, r5
    ec6c:	mov	r0, r4
    ec70:	mov	r1, r7
    ec74:	bl	1520 <fread@plt>
    ec78:	cmp	r5, #0
    ec7c:	str	r0, [sp, #8]
    ec80:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ec84:	ldr	r6, [sp, #4]
    ec88:	add	r5, r6, r5, lsl #1
    ec8c:	mov	r0, r4
    ec90:	add	r4, r4, #2
    ec94:	bl	192c <Mat_int16Swap>
    ec98:	strh	r0, [r6], #2
    ec9c:	cmp	r5, r6
    eca0:	bne	ec8c <ReadUInt16Data.part.13+0xde0>
    eca4:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    eca8:	ldr	r3, [sp, #16]
    ecac:	ldr	r5, [sp, #20]
    ecb0:	add	r4, r3, #1
    ecb4:	lsl	r8, r4, #8
    ecb8:	cmp	r5, r8
    ecbc:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ecc0:	ldr	r3, [sp]
    ecc4:	sub	r5, r5, r8
    ecc8:	mov	r0, r6
    eccc:	mov	r2, r5
    ecd0:	mov	r1, r7
    ecd4:	ldr	r3, [r3]
    ecd8:	bl	1520 <fread@plt>
    ecdc:	add	r3, r9, r0
    ece0:	cmp	r5, #0
    ece4:	str	r3, [sp, #8]
    ece8:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ecec:	ldr	r3, [sp, #4]
    ecf0:	add	r5, r5, r8
    ecf4:	mov	r6, fp
    ecf8:	add	r4, r3, r4, lsl #9
    ecfc:	add	r5, r3, r5, lsl #1
    ed00:	mov	r0, r6
    ed04:	add	r6, r6, #4
    ed08:	bl	18f8 <Mat_uint32Swap>
    ed0c:	strh	r0, [r4], #2
    ed10:	cmp	r4, r5
    ed14:	bne	ed00 <ReadUInt16Data.part.13+0xe54>
    ed18:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ed1c:	ldr	r3, [sp, #16]
    ed20:	ldr	r5, [sp, #20]
    ed24:	add	r4, r3, #1
    ed28:	lsl	r8, r4, #8
    ed2c:	cmp	r5, r8
    ed30:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ed34:	ldr	r3, [sp]
    ed38:	sub	r5, r5, r8
    ed3c:	mov	r0, r6
    ed40:	mov	r2, r5
    ed44:	mov	r1, r7
    ed48:	ldr	r3, [r3]
    ed4c:	bl	1520 <fread@plt>
    ed50:	add	r3, r9, r0
    ed54:	cmp	r5, #0
    ed58:	str	r3, [sp, #8]
    ed5c:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ed60:	ldr	r3, [sp, #4]
    ed64:	add	r5, r5, r8
    ed68:	mov	r6, fp
    ed6c:	add	r4, r3, r4, lsl #9
    ed70:	add	r5, r3, r5, lsl #1
    ed74:	mov	r0, r6
    ed78:	add	r6, r6, #2
    ed7c:	bl	1950 <Mat_uint16Swap>
    ed80:	strh	r0, [r4], #2
    ed84:	cmp	r5, r4
    ed88:	bne	ed74 <ReadUInt16Data.part.13+0xec8>
    ed8c:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ed90:	add	r4, sp, #24
    ed94:	mov	r2, r5
    ed98:	mov	r0, r4
    ed9c:	mov	r1, r7
    eda0:	bl	1520 <fread@plt>
    eda4:	cmp	r5, #0
    eda8:	ble	e578 <ReadUInt16Data.part.13+0x6cc>
    edac:	ldr	r3, [sp, #4]
    edb0:	sub	r2, r4, #1
    edb4:	add	r5, r3, r5, lsl #1
    edb8:	ldrsb	r1, [r2, #1]!
    edbc:	strh	r1, [r3], #2
    edc0:	cmp	r5, r3
    edc4:	bne	edb8 <ReadUInt16Data.part.13+0xf0c>
    edc8:	b	e578 <ReadUInt16Data.part.13+0x6cc>
    edcc:	ldr	r3, [sp, #16]
    edd0:	mov	sl, fp
    edd4:	ldr	r5, [sp, #20]
    edd8:	add	r8, r3, #1
    eddc:	lsl	r4, r8, #8
    ede0:	cmp	r5, r4
    ede4:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    ede8:	ldr	r3, [sp]
    edec:	sub	r5, r5, r4
    edf0:	mov	r0, r6
    edf4:	mov	r2, r5
    edf8:	mov	r1, r7
    edfc:	ldr	r3, [r3]
    ee00:	bl	1520 <fread@plt>
    ee04:	add	r3, r9, r0
    ee08:	cmp	r5, #0
    ee0c:	mov	sl, r3
    ee10:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    ee14:	add	r4, r4, r5
    ee18:	ldmib	sp, {r3, r5}
    ee1c:	add	r8, r3, r8, lsl #9
    ee20:	add	r4, r3, r4, lsl #1
    ee24:	mov	r0, r5
    ee28:	add	r5, r5, #4
    ee2c:	bl	18c4 <Mat_int32Swap>
    ee30:	strh	r0, [r8], #2
    ee34:	cmp	r4, r8
    ee38:	bne	ee24 <ReadUInt16Data.part.13+0xf78>
    ee3c:	b	eaf8 <ReadUInt16Data.part.13+0xc4c>
    ee40:	add	r4, sp, #24
    ee44:	mov	r2, r5
    ee48:	mov	r0, r4
    ee4c:	mov	r1, r7
    ee50:	bl	1520 <fread@plt>
    ee54:	cmp	r5, #0
    ee58:	ble	e578 <ReadUInt16Data.part.13+0x6cc>
    ee5c:	ldr	r3, [sp, #4]
    ee60:	sub	r2, r4, #1
    ee64:	add	r5, r3, r5, lsl #1
    ee68:	ldrb	r1, [r2, #1]!
    ee6c:	strh	r1, [r3], #2
    ee70:	cmp	r5, r3
    ee74:	bne	ee68 <ReadUInt16Data.part.13+0xfbc>
    ee78:	b	e578 <ReadUInt16Data.part.13+0x6cc>
    ee7c:	ldr	r3, [sp, #16]
    ee80:	ldr	r5, [sp, #20]
    ee84:	add	r4, r3, #1
    ee88:	lsl	r8, r4, #8
    ee8c:	cmp	r5, r8
    ee90:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ee94:	ldr	r3, [sp]
    ee98:	sub	r5, r5, r8
    ee9c:	mov	r0, r6
    eea0:	mov	r2, r5
    eea4:	mov	r1, r7
    eea8:	ldr	r3, [r3]
    eeac:	bl	1520 <fread@plt>
    eeb0:	add	r3, r9, r0
    eeb4:	cmp	r5, #0
    eeb8:	str	r3, [sp, #8]
    eebc:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    eec0:	ldr	r3, [sp, #4]
    eec4:	add	r5, r5, r8
    eec8:	mov	r6, fp
    eecc:	add	r4, r3, r4, lsl #9
    eed0:	add	r5, r3, r5, lsl #1
    eed4:	mov	r0, r6
    eed8:	add	r6, r6, #4
    eedc:	bl	1974 <Mat_floatSwap>
    eee0:	vcvt.u32.f32	s0, s0
    eee4:	vmov	r3, s0
    eee8:	strh	r3, [r4], #2
    eeec:	cmp	r4, r5
    eef0:	bne	eed4 <ReadUInt16Data.part.13+0x1028>
    eef4:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    eef8:	ldr	r3, [sp, #16]
    eefc:	ldr	r5, [sp, #20]
    ef00:	add	r4, r3, #1
    ef04:	lsl	r8, r4, #8
    ef08:	cmp	r5, r8
    ef0c:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ef10:	ldr	r3, [sp]
    ef14:	sub	r5, r5, r8
    ef18:	mov	r0, r6
    ef1c:	mov	r2, r5
    ef20:	mov	r1, r7
    ef24:	ldr	r3, [r3]
    ef28:	bl	1520 <fread@plt>
    ef2c:	add	r3, r9, r0
    ef30:	cmp	r5, #0
    ef34:	str	r3, [sp, #8]
    ef38:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    ef3c:	ldr	r3, [sp, #4]
    ef40:	add	r5, r5, r8
    ef44:	mov	r6, fp
    ef48:	add	r4, r3, r4, lsl #9
    ef4c:	add	r5, r3, r5, lsl #1
    ef50:	mov	r0, r6
    ef54:	add	r6, r6, #8
    ef58:	bl	19a4 <Mat_doubleSwap>
    ef5c:	vcvt.u32.f64	s0, d0
    ef60:	vmov	r3, s0
    ef64:	strh	r3, [r4], #2
    ef68:	cmp	r4, r5
    ef6c:	bne	ef50 <ReadUInt16Data.part.13+0x10a4>
    ef70:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    ef74:	ldr	r3, [sp]
    ef78:	ldr	r8, [r3, #20]
    ef7c:	ldr	r3, [r3]
    ef80:	cmp	r8, #0
    ef84:	beq	f3d0 <ReadUInt16Data.part.13+0x1524>
    ef88:	cmp	r5, #256	; 0x100
    ef8c:	ble	f64c <ReadUInt16Data.part.13+0x17a0>
    ef90:	ldr	r1, [sp, #4]
    ef94:	sub	r4, r5, #256	; 0x100
    ef98:	mov	r9, #0
    ef9c:	sub	r4, r4, #1
    efa0:	add	r6, sp, #24
    efa4:	str	r5, [sp, #20]
    efa8:	lsr	r0, r4, #8
    efac:	add	r4, sp, #2064	; 0x810
    efb0:	add	r4, r4, #8
    efb4:	add	r2, r1, #508	; 0x1fc
    efb8:	sub	sl, r1, #2
    efbc:	str	r0, [sp, #12]
    efc0:	add	r2, r2, #2
    efc4:	add	r2, r2, r0, lsl #9
    efc8:	str	r2, [sp, #8]
    efcc:	mov	r2, #256	; 0x100
    efd0:	mov	r1, r7
    efd4:	mov	r0, r6
    efd8:	mov	r5, sl
    efdc:	bl	1520 <fread@plt>
    efe0:	add	r9, r9, r0
    efe4:	mov	r8, r6
    efe8:	str	r6, [sp, #16]
    efec:	mov	fp, r9
    eff0:	mov	r0, r8
    eff4:	add	r8, r8, #8
    eff8:	bl	17ec <Mat_int64Swap>
    effc:	cmp	r4, r8
    f000:	strh	r0, [r5, #2]!
    f004:	bne	eff0 <ReadUInt16Data.part.13+0x1144>
    f008:	ldr	r3, [sp, #8]
    f00c:	add	sl, sl, #512	; 0x200
    f010:	cmp	r3, sl
    f014:	beq	f4b8 <ReadUInt16Data.part.13+0x160c>
    f018:	ldr	r3, [sp]
    f01c:	ldr	r3, [r3]
    f020:	b	efcc <ReadUInt16Data.part.13+0x1120>
    f024:	ldr	r3, [sp, #8]
    f028:	mov	r5, fp
    f02c:	mov	sl, ip
    f030:	mov	fp, r0
    f034:	add	r4, r3, #1
    f038:	lsl	r8, r4, #8
    f03c:	cmp	r5, r8
    f040:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    f044:	ldr	r3, [sp]
    f048:	sub	r5, r5, r8
    f04c:	mov	r0, r6
    f050:	mov	r2, r5
    f054:	mov	r1, r7
    f058:	ldr	r3, [r3]
    f05c:	bl	1520 <fread@plt>
    f060:	add	r3, r9, r0
    f064:	cmp	r5, #0
    f068:	mov	sl, r3
    f06c:	ble	eaf8 <ReadUInt16Data.part.13+0xc4c>
    f070:	ldr	r3, [sp, #4]
    f074:	add	r5, r5, r8
    f078:	add	r4, r3, r4, lsl #9
    f07c:	add	r3, r3, r5, lsl #1
    f080:	ldr	r2, [fp, #4]!
    f084:	strh	r2, [r4], #2
    f088:	cmp	r4, r3
    f08c:	bne	f080 <ReadUInt16Data.part.13+0x11d4>
    f090:	b	eaf8 <ReadUInt16Data.part.13+0xc4c>
    f094:	ldr	r3, [sp, #12]
    f098:	mov	r5, fp
    f09c:	mov	fp, r0
    f0a0:	str	ip, [sp, #8]
    f0a4:	add	r4, r3, #1
    f0a8:	lsl	r8, r4, #8
    f0ac:	cmp	r5, r8
    f0b0:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f0b4:	ldr	r3, [sp]
    f0b8:	sub	r5, r5, r8
    f0bc:	mov	r0, r6
    f0c0:	mov	r2, r5
    f0c4:	mov	r1, r7
    f0c8:	ldr	r3, [r3]
    f0cc:	bl	1520 <fread@plt>
    f0d0:	add	r3, r9, r0
    f0d4:	cmp	r5, #0
    f0d8:	str	r3, [sp, #8]
    f0dc:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f0e0:	ldr	r3, [sp, #4]
    f0e4:	add	r5, r5, r8
    f0e8:	add	r4, r3, r4, lsl #9
    f0ec:	add	r3, r3, r5, lsl #1
    f0f0:	ldr	r2, [fp, #4]!
    f0f4:	strh	r2, [r4], #2
    f0f8:	cmp	r4, r3
    f0fc:	bne	f0f0 <ReadUInt16Data.part.13+0x1244>
    f100:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f104:	ldr	r3, [sp, #12]
    f108:	mov	r5, fp
    f10c:	mov	fp, r0
    f110:	str	ip, [sp, #8]
    f114:	add	r4, r3, #1
    f118:	lsl	r8, r4, #8
    f11c:	cmp	r5, r8
    f120:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f124:	ldr	r3, [sp]
    f128:	sub	r5, r5, r8
    f12c:	mov	r0, r6
    f130:	mov	r2, r5
    f134:	mov	r1, r7
    f138:	ldr	r3, [r3]
    f13c:	bl	1520 <fread@plt>
    f140:	add	r3, r9, r0
    f144:	cmp	r5, #0
    f148:	str	r3, [sp, #8]
    f14c:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f150:	ldr	r3, [sp, #4]
    f154:	add	r5, r5, r8
    f158:	add	r4, r3, r4, lsl #9
    f15c:	add	r3, r3, r5, lsl #1
    f160:	ldrh	r2, [fp, #2]!
    f164:	strh	r2, [r4], #2
    f168:	cmp	r3, r4
    f16c:	bne	f160 <ReadUInt16Data.part.13+0x12b4>
    f170:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f174:	ldr	r3, [sp, #12]
    f178:	mov	r5, sl
    f17c:	mov	sl, r0
    f180:	str	r1, [sp, #8]
    f184:	add	r4, r3, #1
    f188:	lsl	r8, r4, #8
    f18c:	cmp	r5, r8
    f190:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f194:	ldr	r3, [sp]
    f198:	sub	r5, r5, r8
    f19c:	mov	r0, r6
    f1a0:	mov	r2, r5
    f1a4:	mov	r1, r7
    f1a8:	ldr	r3, [r3]
    f1ac:	bl	1520 <fread@plt>
    f1b0:	add	r3, r9, r0
    f1b4:	cmp	r5, #0
    f1b8:	str	r3, [sp, #8]
    f1bc:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f1c0:	ldr	r3, [sp, #4]
    f1c4:	add	r5, r5, r8
    f1c8:	add	r4, r3, r4, lsl #9
    f1cc:	add	r3, r3, r5, lsl #1
    f1d0:	vldmia	sl!, {s15}
    f1d4:	vcvt.u32.f32	s15, s15
    f1d8:	vmov	r2, s15
    f1dc:	strh	r2, [r4], #2
    f1e0:	cmp	r4, r3
    f1e4:	bne	f1d0 <ReadUInt16Data.part.13+0x1324>
    f1e8:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f1ec:	ldr	r3, [sp, #12]
    f1f0:	mov	r5, sl
    f1f4:	mov	sl, r0
    f1f8:	str	r1, [sp, #8]
    f1fc:	add	r4, r3, #1
    f200:	lsl	r8, r4, #8
    f204:	cmp	r5, r8
    f208:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f20c:	ldr	r3, [sp]
    f210:	sub	r5, r5, r8
    f214:	mov	r0, r6
    f218:	mov	r2, r5
    f21c:	mov	r1, r7
    f220:	ldr	r3, [r3]
    f224:	bl	1520 <fread@plt>
    f228:	add	r3, r9, r0
    f22c:	cmp	r5, #0
    f230:	str	r3, [sp, #8]
    f234:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f238:	ldr	r3, [sp, #4]
    f23c:	add	r5, r5, r8
    f240:	add	r4, r3, r4, lsl #9
    f244:	add	r3, r3, r5, lsl #1
    f248:	vldmia	sl!, {d7}
    f24c:	vcvt.u32.f64	s14, d7
    f250:	vmov	r2, s14
    f254:	strh	r2, [r4], #2
    f258:	cmp	r4, r3
    f25c:	bne	f248 <ReadUInt16Data.part.13+0x139c>
    f260:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f264:	ldr	r3, [sp, #12]
    f268:	mov	r5, fp
    f26c:	mov	fp, r0
    f270:	str	ip, [sp, #8]
    f274:	add	r4, r3, #1
    f278:	lsl	r8, r4, #8
    f27c:	cmp	r5, r8
    f280:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f284:	ldr	r3, [sp]
    f288:	sub	r5, r5, r8
    f28c:	mov	r0, r6
    f290:	mov	r2, r5
    f294:	mov	r1, r7
    f298:	ldr	r3, [r3]
    f29c:	bl	1520 <fread@plt>
    f2a0:	add	r3, r9, r0
    f2a4:	cmp	r5, #0
    f2a8:	str	r3, [sp, #8]
    f2ac:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f2b0:	ldr	r3, [sp, #4]
    f2b4:	add	r5, r5, r8
    f2b8:	add	r4, r3, r4, lsl #9
    f2bc:	add	r3, r3, r5, lsl #1
    f2c0:	ldrh	r2, [fp, #2]!
    f2c4:	strh	r2, [r4], #2
    f2c8:	cmp	r3, r4
    f2cc:	bne	f2c0 <ReadUInt16Data.part.13+0x1414>
    f2d0:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f2d4:	ldr	r3, [sp, #16]
    f2d8:	ldr	r5, [sp, #20]
    f2dc:	add	r4, r3, #1
    f2e0:	lsl	r8, r4, #8
    f2e4:	cmp	r5, r8
    f2e8:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f2ec:	ldr	r3, [sp]
    f2f0:	sub	r5, r5, r8
    f2f4:	mov	r0, r6
    f2f8:	mov	r2, r5
    f2fc:	mov	r1, r7
    f300:	ldr	r3, [r3]
    f304:	bl	1520 <fread@plt>
    f308:	add	r3, r9, r0
    f30c:	cmp	r5, #0
    f310:	str	r3, [sp, #8]
    f314:	ble	e9a8 <ReadUInt16Data.part.13+0xafc>
    f318:	ldr	r3, [sp, #4]
    f31c:	add	r5, r5, r8
    f320:	mov	r6, fp
    f324:	add	r4, r3, r4, lsl #9
    f328:	add	r5, r3, r5, lsl #1
    f32c:	mov	r0, r6
    f330:	add	r6, r6, #2
    f334:	bl	192c <Mat_int16Swap>
    f338:	strh	r0, [r4], #2
    f33c:	cmp	r5, r4
    f340:	bne	f32c <ReadUInt16Data.part.13+0x1480>
    f344:	b	e9a8 <ReadUInt16Data.part.13+0xafc>
    f348:	cmp	r5, #256	; 0x100
    f34c:	ble	f5c8 <ReadUInt16Data.part.13+0x171c>
    f350:	ldr	r1, [sp, #4]
    f354:	sub	r4, r5, #256	; 0x100
    f358:	add	r6, sp, #24
    f35c:	sub	r4, r4, #1
    f360:	lsr	r0, r4, #8
    f364:	add	r4, sp, #2064	; 0x810
    f368:	add	r2, r1, #508	; 0x1fc
    f36c:	sub	r9, r1, #2
    f370:	str	r0, [sp, #12]
    f374:	add	r2, r2, #2
    f378:	add	r2, r2, r0, lsl #9
    f37c:	str	r2, [sp, #8]
    f380:	mov	r2, #256	; 0x100
    f384:	mov	r1, r7
    f388:	mov	r0, r6
    f38c:	sub	sl, r6, #8
    f390:	bl	1520 <fread@plt>
    f394:	add	r8, r8, r0
    f398:	mov	r3, sl
    f39c:	mov	fp, r8
    f3a0:	mov	r2, r9
    f3a4:	ldr	r1, [r3, #8]!
    f3a8:	cmp	r4, r3
    f3ac:	strh	r1, [r2, #2]!
    f3b0:	bne	f3a4 <ReadUInt16Data.part.13+0x14f8>
    f3b4:	ldr	r3, [sp, #8]
    f3b8:	add	r9, r9, #512	; 0x200
    f3bc:	cmp	r3, r9
    f3c0:	beq	f458 <ReadUInt16Data.part.13+0x15ac>
    f3c4:	ldr	r3, [sp]
    f3c8:	ldr	r3, [r3]
    f3cc:	b	f380 <ReadUInt16Data.part.13+0x14d4>
    f3d0:	cmp	r5, #256	; 0x100
    f3d4:	ble	f588 <ReadUInt16Data.part.13+0x16dc>
    f3d8:	ldr	r1, [sp, #4]
    f3dc:	sub	r4, r5, #256	; 0x100
    f3e0:	add	r6, sp, #24
    f3e4:	sub	r4, r4, #1
    f3e8:	lsr	r0, r4, #8
    f3ec:	add	r4, sp, #2064	; 0x810
    f3f0:	add	r2, r1, #508	; 0x1fc
    f3f4:	sub	r9, r1, #2
    f3f8:	str	r0, [sp, #12]
    f3fc:	add	r2, r2, #2
    f400:	add	r2, r2, r0, lsl #9
    f404:	str	r2, [sp, #8]
    f408:	mov	r2, #256	; 0x100
    f40c:	mov	r1, r7
    f410:	mov	r0, r6
    f414:	sub	sl, r6, #8
    f418:	bl	1520 <fread@plt>
    f41c:	add	r8, r8, r0
    f420:	mov	r3, sl
    f424:	mov	fp, r8
    f428:	mov	r2, r9
    f42c:	ldr	r1, [r3, #8]!
    f430:	cmp	r4, r3
    f434:	strh	r1, [r2, #2]!
    f438:	bne	f42c <ReadUInt16Data.part.13+0x1580>
    f43c:	ldr	r3, [sp, #8]
    f440:	add	r9, r9, #512	; 0x200
    f444:	cmp	r3, r9
    f448:	beq	f528 <ReadUInt16Data.part.13+0x167c>
    f44c:	ldr	r3, [sp]
    f450:	ldr	r3, [r3]
    f454:	b	f408 <ReadUInt16Data.part.13+0x155c>
    f458:	ldr	r3, [sp, #12]
    f45c:	add	r4, r3, #1
    f460:	lsl	r9, r4, #8
    f464:	cmp	r5, r9
    f468:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f46c:	ldr	r3, [sp]
    f470:	sub	r5, r5, r9
    f474:	mov	r0, r6
    f478:	mov	r2, r5
    f47c:	mov	r1, r7
    f480:	ldr	r3, [r3]
    f484:	bl	1520 <fread@plt>
    f488:	cmp	r5, #0
    f48c:	add	fp, r8, r0
    f490:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f494:	ldr	r3, [sp, #4]
    f498:	add	r5, r9, r5
    f49c:	add	r4, r3, r4, lsl #9
    f4a0:	add	r3, r3, r5, lsl #1
    f4a4:	ldr	r2, [sl, #8]!
    f4a8:	strh	r2, [r4], #2
    f4ac:	cmp	r3, r4
    f4b0:	bne	f4a4 <ReadUInt16Data.part.13+0x15f8>
    f4b4:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f4b8:	ldr	r3, [sp, #12]
    f4bc:	ldr	r5, [sp, #20]
    f4c0:	add	r4, r3, #1
    f4c4:	lsl	r8, r4, #8
    f4c8:	cmp	r5, r8
    f4cc:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f4d0:	ldr	r3, [sp]
    f4d4:	sub	r5, r5, r8
    f4d8:	mov	r0, r6
    f4dc:	mov	r2, r5
    f4e0:	mov	r1, r7
    f4e4:	ldr	r3, [r3]
    f4e8:	bl	1520 <fread@plt>
    f4ec:	cmp	r5, #0
    f4f0:	add	fp, r9, r0
    f4f4:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f4f8:	ldr	r3, [sp, #4]
    f4fc:	add	r5, r5, r8
    f500:	ldr	r6, [sp, #16]
    f504:	add	r4, r3, r4, lsl #9
    f508:	add	r5, r3, r5, lsl #1
    f50c:	mov	r0, r6
    f510:	add	r6, r6, #8
    f514:	bl	17ec <Mat_int64Swap>
    f518:	strh	r0, [r4], #2
    f51c:	cmp	r4, r5
    f520:	bne	f50c <ReadUInt16Data.part.13+0x1660>
    f524:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f528:	ldr	r3, [sp, #12]
    f52c:	add	r4, r3, #1
    f530:	lsl	r9, r4, #8
    f534:	cmp	r5, r9
    f538:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f53c:	ldr	r3, [sp]
    f540:	sub	r5, r5, r9
    f544:	mov	r0, r6
    f548:	mov	r2, r5
    f54c:	mov	r1, r7
    f550:	ldr	r3, [r3]
    f554:	bl	1520 <fread@plt>
    f558:	cmp	r5, #0
    f55c:	add	fp, r8, r0
    f560:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f564:	ldr	r3, [sp, #4]
    f568:	add	r5, r5, r9
    f56c:	add	r4, r3, r4, lsl #9
    f570:	add	r3, r3, r5, lsl #1
    f574:	ldr	r2, [sl, #8]!
    f578:	strh	r2, [r4], #2
    f57c:	cmp	r3, r4
    f580:	bne	f574 <ReadUInt16Data.part.13+0x16c8>
    f584:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f588:	add	r4, sp, #24
    f58c:	mov	r2, r5
    f590:	mov	r0, r4
    f594:	mov	r1, r7
    f598:	bl	1520 <fread@plt>
    f59c:	cmp	r5, #0
    f5a0:	mov	fp, r0
    f5a4:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f5a8:	ldr	r3, [sp, #4]
    f5ac:	sub	r4, r4, #8
    f5b0:	add	r5, r3, r5, lsl #1
    f5b4:	ldr	r2, [r4, #8]!
    f5b8:	strh	r2, [r3], #2
    f5bc:	cmp	r5, r3
    f5c0:	bne	f5b4 <ReadUInt16Data.part.13+0x1708>
    f5c4:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f5c8:	add	r4, sp, #24
    f5cc:	mov	r2, r5
    f5d0:	mov	r0, r4
    f5d4:	mov	r1, r7
    f5d8:	bl	1520 <fread@plt>
    f5dc:	cmp	r5, #0
    f5e0:	mov	fp, r0
    f5e4:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f5e8:	ldr	r3, [sp, #4]
    f5ec:	sub	r4, r4, #8
    f5f0:	add	r5, r3, r5, lsl #1
    f5f4:	ldr	r2, [r4, #8]!
    f5f8:	strh	r2, [r3], #2
    f5fc:	cmp	r5, r3
    f600:	bne	f5f4 <ReadUInt16Data.part.13+0x1748>
    f604:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f608:	add	r4, sp, #24
    f60c:	mov	r2, r5
    f610:	mov	r0, r4
    f614:	mov	r1, r7
    f618:	bl	1520 <fread@plt>
    f61c:	cmp	r5, #0
    f620:	mov	fp, r0
    f624:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f628:	ldr	r6, [sp, #4]
    f62c:	add	r5, r6, r5, lsl #1
    f630:	mov	r0, r4
    f634:	add	r4, r4, #8
    f638:	bl	1858 <Mat_uint64Swap>
    f63c:	strh	r0, [r6], #2
    f640:	cmp	r5, r6
    f644:	bne	f630 <ReadUInt16Data.part.13+0x1784>
    f648:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f64c:	add	r4, sp, #24
    f650:	mov	r2, r5
    f654:	mov	r0, r4
    f658:	mov	r1, r7
    f65c:	bl	1520 <fread@plt>
    f660:	cmp	r5, #0
    f664:	mov	fp, r0
    f668:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f66c:	ldr	r6, [sp, #4]
    f670:	add	r5, r6, r5, lsl #1
    f674:	mov	r0, r4
    f678:	add	r4, r4, #8
    f67c:	bl	17ec <Mat_int64Swap>
    f680:	strh	r0, [r6], #2
    f684:	cmp	r6, r5
    f688:	bne	f674 <ReadUInt16Data.part.13+0x17c8>
    f68c:	b	e538 <ReadUInt16Data.part.13+0x68c>
    f690:	ldr	r3, [sp]
    f694:	sub	r5, r5, r8
    f698:	mov	r0, r6
    f69c:	mov	r2, r5
    f6a0:	mov	r1, r7
    f6a4:	ldr	r3, [r3]
    f6a8:	bl	1520 <fread@plt>
    f6ac:	cmp	r5, #0
    f6b0:	add	fp, r9, r0
    f6b4:	ble	e538 <ReadUInt16Data.part.13+0x68c>
    f6b8:	ldr	r3, [sp, #4]
    f6bc:	add	r5, r5, r8
    f6c0:	ldr	r6, [sp, #16]
    f6c4:	add	r4, r3, r4, lsl #9
    f6c8:	add	r5, r3, r5, lsl #1
    f6cc:	mov	r0, r6
    f6d0:	add	r6, r6, #8
    f6d4:	bl	1858 <Mat_uint64Swap>
    f6d8:	strh	r0, [r4], #2
    f6dc:	cmp	r5, r4
    f6e0:	bne	f6cc <ReadUInt16Data.part.13+0x1820>
    f6e4:	b	e538 <ReadUInt16Data.part.13+0x68c>

0000f6e8 <ReadInt8Data.part.15>:
    f6e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f6ec:	mov	r4, r2
    f6f0:	mov	r5, r3
    f6f4:	strd	r6, [sp, #8]
    f6f8:	strd	r8, [sp, #16]
    f6fc:	strd	sl, [sp, #24]
    f700:	str	lr, [sp, #32]
    f704:	sub	sp, sp, #2064	; 0x810
    f708:	sub	sp, sp, #12
    f70c:	strd	r0, [sp]
    f710:	mov	r0, r2
    f714:	bl	1598 <Mat_SizeOf@plt>
    f718:	sub	r3, r4, #1
    f71c:	mov	r7, r0
    f720:	cmp	r3, #8
    f724:	addls	pc, pc, r3, lsl #2
    f728:	b	fc78 <ReadInt8Data.part.15+0x590>
    f72c:	b	f804 <ReadInt8Data.part.15+0x11c>
    f730:	b	f938 <ReadInt8Data.part.15+0x250>
    f734:	b	fa70 <ReadInt8Data.part.15+0x388>
    f738:	b	f890 <ReadInt8Data.part.15+0x1a8>
    f73c:	b	fb18 <ReadInt8Data.part.15+0x430>
    f740:	b	f9c4 <ReadInt8Data.part.15+0x2dc>
    f744:	b	fbc4 <ReadInt8Data.part.15+0x4dc>
    f748:	b	fc78 <ReadInt8Data.part.15+0x590>
    f74c:	b	f750 <ReadInt8Data.part.15+0x68>
    f750:	ldr	r3, [sp]
    f754:	ldr	r9, [r3, #20]
    f758:	ldr	r3, [r3]
    f75c:	cmp	r9, #0
    f760:	beq	1005c <ReadInt8Data.part.15+0x974>
    f764:	cmp	r5, #256	; 0x100
    f768:	ble	103ac <ReadInt8Data.part.15+0xcc4>
    f76c:	ldr	r1, [sp, #4]
    f770:	sub	r0, r5, #256	; 0x100
    f774:	add	r4, sp, #2064	; 0x810
    f778:	sub	r0, r0, #1
    f77c:	mov	r9, #0
    f780:	add	r6, sp, #24
    f784:	add	r4, r4, #8
    f788:	str	r0, [sp, #16]
    f78c:	str	r5, [sp, #20]
    f790:	add	r2, r1, #255	; 0xff
    f794:	sub	r8, r1, #1
    f798:	bic	r1, r0, #255	; 0xff
    f79c:	add	r2, r2, r1
    f7a0:	str	r2, [sp, #12]
    f7a4:	mov	r2, #256	; 0x100
    f7a8:	mov	r1, r7
    f7ac:	mov	r0, r6
    f7b0:	mov	fp, r6
    f7b4:	bl	1520 <fread@plt>
    f7b8:	add	r9, r9, r0
    f7bc:	mov	sl, r8
    f7c0:	mov	r5, r6
    f7c4:	str	r9, [sp, #8]
    f7c8:	mov	r0, r5
    f7cc:	add	r5, r5, #8
    f7d0:	bl	19a4 <Mat_doubleSwap>
    f7d4:	vcvt.s32.f64	s15, d0
    f7d8:	cmp	r5, r4
    f7dc:	vmov	r3, s15
    f7e0:	strb	r3, [sl, #1]!
    f7e4:	bne	f7c8 <ReadInt8Data.part.15+0xe0>
    f7e8:	ldr	r3, [sp, #12]
    f7ec:	add	r8, r8, #256	; 0x100
    f7f0:	cmp	r8, r3
    f7f4:	beq	1076c <ReadInt8Data.part.15+0x1084>
    f7f8:	ldr	r3, [sp]
    f7fc:	ldr	r3, [r3]
    f800:	b	f7a4 <ReadInt8Data.part.15+0xbc>
    f804:	ldr	r1, [sp]
    f808:	cmp	r5, #256	; 0x100
    f80c:	ldr	r3, [r1]
    f810:	ble	10604 <ReadInt8Data.part.15+0xf1c>
    f814:	sub	r2, r5, #256	; 0x100
    f818:	add	r6, sp, #24
    f81c:	ldr	r0, [sp, #4]
    f820:	sub	r2, r2, #1
    f824:	mov	sl, r5
    f828:	add	r4, r6, #255	; 0xff
    f82c:	mov	r9, #0
    f830:	str	r2, [sp, #8]
    f834:	bic	r2, r2, #255	; 0xff
    f838:	mov	r5, r1
    f83c:	add	fp, r0, #255	; 0xff
    f840:	sub	r8, r0, #1
    f844:	add	fp, fp, r2
    f848:	mov	r2, #256	; 0x100
    f84c:	mov	r1, r7
    f850:	mov	r0, r6
    f854:	bl	1520 <fread@plt>
    f858:	add	r9, r9, r0
    f85c:	sub	ip, r6, #1
    f860:	mov	r0, r9
    f864:	mov	r3, ip
    f868:	mov	r2, r8
    f86c:	ldrb	r1, [r3, #1]!
    f870:	cmp	r4, r3
    f874:	strb	r1, [r2, #1]!
    f878:	bne	f86c <ReadInt8Data.part.15+0x184>
    f87c:	add	r8, r8, #256	; 0x100
    f880:	cmp	fp, r8
    f884:	beq	fdcc <ReadInt8Data.part.15+0x6e4>
    f888:	ldr	r3, [r5]
    f88c:	b	f848 <ReadInt8Data.part.15+0x160>
    f890:	ldr	r3, [sp]
    f894:	ldr	r9, [r3, #20]
    f898:	ldr	r3, [r3]
    f89c:	cmp	r9, #0
    f8a0:	beq	ff58 <ReadInt8Data.part.15+0x870>
    f8a4:	cmp	r5, #256	; 0x100
    f8a8:	ble	10364 <ReadInt8Data.part.15+0xc7c>
    f8ac:	ldr	r1, [sp, #4]
    f8b0:	sub	r0, r5, #256	; 0x100
    f8b4:	mov	r9, #0
    f8b8:	sub	r0, r0, #1
    f8bc:	add	r6, sp, #24
    f8c0:	add	r4, sp, #536	; 0x218
    f8c4:	str	r0, [sp, #16]
    f8c8:	str	r5, [sp, #20]
    f8cc:	add	r2, r1, #255	; 0xff
    f8d0:	sub	r8, r1, #1
    f8d4:	bic	r1, r0, #255	; 0xff
    f8d8:	add	r2, r2, r1
    f8dc:	str	r2, [sp, #12]
    f8e0:	mov	r2, #256	; 0x100
    f8e4:	mov	r1, r7
    f8e8:	mov	r0, r6
    f8ec:	mov	fp, r6
    f8f0:	bl	1520 <fread@plt>
    f8f4:	add	r9, r9, r0
    f8f8:	mov	sl, r8
    f8fc:	mov	r5, r6
    f900:	str	r9, [sp, #8]
    f904:	mov	r0, r5
    f908:	add	r5, r5, #2
    f90c:	bl	1950 <Mat_uint16Swap>
    f910:	cmp	r5, r4
    f914:	strb	r0, [sl, #1]!
    f918:	bne	f904 <ReadInt8Data.part.15+0x21c>
    f91c:	ldr	r3, [sp, #12]
    f920:	add	r8, r8, #256	; 0x100
    f924:	cmp	r8, r3
    f928:	beq	10594 <ReadInt8Data.part.15+0xeac>
    f92c:	ldr	r3, [sp]
    f930:	ldr	r3, [r3]
    f934:	b	f8e0 <ReadInt8Data.part.15+0x1f8>
    f938:	ldr	r1, [sp]
    f93c:	cmp	r5, #256	; 0x100
    f940:	ldr	r3, [r1]
    f944:	ble	106b4 <ReadInt8Data.part.15+0xfcc>
    f948:	sub	r2, r5, #256	; 0x100
    f94c:	add	r6, sp, #24
    f950:	ldr	r0, [sp, #4]
    f954:	sub	r2, r2, #1
    f958:	mov	sl, r5
    f95c:	add	r4, r6, #255	; 0xff
    f960:	mov	r9, #0
    f964:	str	r2, [sp, #8]
    f968:	bic	r2, r2, #255	; 0xff
    f96c:	mov	r5, r1
    f970:	add	fp, r0, #255	; 0xff
    f974:	sub	r8, r0, #1
    f978:	add	fp, fp, r2
    f97c:	mov	r2, #256	; 0x100
    f980:	mov	r1, r7
    f984:	mov	r0, r6
    f988:	bl	1520 <fread@plt>
    f98c:	add	r9, r9, r0
    f990:	sub	ip, r6, #1
    f994:	mov	r0, r9
    f998:	mov	r3, ip
    f99c:	mov	r2, r8
    f9a0:	ldrb	r1, [r3, #1]!
    f9a4:	cmp	r4, r3
    f9a8:	strb	r1, [r2, #1]!
    f9ac:	bne	f9a0 <ReadInt8Data.part.15+0x2b8>
    f9b0:	add	r8, r8, #256	; 0x100
    f9b4:	cmp	fp, r8
    f9b8:	beq	fdf0 <ReadInt8Data.part.15+0x708>
    f9bc:	ldr	r3, [r5]
    f9c0:	b	f97c <ReadInt8Data.part.15+0x294>
    f9c4:	ldr	r3, [sp]
    f9c8:	ldr	r9, [r3, #20]
    f9cc:	ldr	r3, [r3]
    f9d0:	cmp	r9, #0
    f9d4:	beq	ffdc <ReadInt8Data.part.15+0x8f4>
    f9d8:	cmp	r5, #256	; 0x100
    f9dc:	ble	103fc <ReadInt8Data.part.15+0xd14>
    f9e0:	ldr	r1, [sp, #4]
    f9e4:	sub	r0, r5, #256	; 0x100
    f9e8:	add	r4, sp, #1040	; 0x410
    f9ec:	sub	r0, r0, #1
    f9f0:	mov	r9, #0
    f9f4:	add	r6, sp, #24
    f9f8:	add	r4, r4, #8
    f9fc:	str	r0, [sp, #16]
    fa00:	str	r5, [sp, #20]
    fa04:	add	r2, r1, #255	; 0xff
    fa08:	sub	r8, r1, #1
    fa0c:	bic	r1, r0, #255	; 0xff
    fa10:	add	r2, r1, r2
    fa14:	str	r2, [sp, #12]
    fa18:	mov	r2, #256	; 0x100
    fa1c:	mov	r1, r7
    fa20:	mov	r0, r6
    fa24:	mov	fp, r6
    fa28:	bl	1520 <fread@plt>
    fa2c:	add	r9, r9, r0
    fa30:	mov	sl, r8
    fa34:	mov	r5, r6
    fa38:	str	r9, [sp, #8]
    fa3c:	mov	r0, r5
    fa40:	add	r5, r5, #4
    fa44:	bl	18f8 <Mat_uint32Swap>
    fa48:	cmp	r5, r4
    fa4c:	strb	r0, [sl, #1]!
    fa50:	bne	fa3c <ReadInt8Data.part.15+0x354>
    fa54:	ldr	r3, [sp, #12]
    fa58:	add	r8, r8, #256	; 0x100
    fa5c:	cmp	r8, r3
    fa60:	beq	10524 <ReadInt8Data.part.15+0xe3c>
    fa64:	ldr	r3, [sp]
    fa68:	ldr	r3, [r3]
    fa6c:	b	fa18 <ReadInt8Data.part.15+0x330>
    fa70:	ldr	r3, [sp]
    fa74:	ldr	r9, [r3, #20]
    fa78:	ldr	r3, [r3]
    fa7c:	cmp	r9, #0
    fa80:	beq	fe54 <ReadInt8Data.part.15+0x76c>
    fa84:	cmp	r5, #256	; 0x100
    fa88:	ble	104dc <ReadInt8Data.part.15+0xdf4>
    fa8c:	ldr	r1, [sp, #4]
    fa90:	sub	r0, r5, #256	; 0x100
    fa94:	mov	r9, #0
    fa98:	sub	r0, r0, #1
    fa9c:	add	r6, sp, #24
    faa0:	add	r4, sp, #536	; 0x218
    faa4:	str	r0, [sp, #16]
    faa8:	str	r5, [sp, #20]
    faac:	add	r2, r1, #255	; 0xff
    fab0:	sub	r8, r1, #1
    fab4:	bic	r1, r0, #255	; 0xff
    fab8:	add	r2, r2, r1
    fabc:	str	r2, [sp, #12]
    fac0:	mov	r2, #256	; 0x100
    fac4:	mov	r1, r7
    fac8:	mov	r0, r6
    facc:	mov	fp, r6
    fad0:	bl	1520 <fread@plt>
    fad4:	add	r9, r9, r0
    fad8:	mov	sl, r8
    fadc:	mov	r5, r6
    fae0:	str	r9, [sp, #8]
    fae4:	mov	r0, r5
    fae8:	add	r5, r5, #2
    faec:	bl	192c <Mat_int16Swap>
    faf0:	cmp	r4, r5
    faf4:	strb	r0, [sl, #1]!
    faf8:	bne	fae4 <ReadInt8Data.part.15+0x3fc>
    fafc:	ldr	r3, [sp, #12]
    fb00:	add	r8, r8, #256	; 0x100
    fb04:	cmp	r3, r8
    fb08:	beq	10b2c <ReadInt8Data.part.15+0x1444>
    fb0c:	ldr	r3, [sp]
    fb10:	ldr	r3, [r3]
    fb14:	b	fac0 <ReadInt8Data.part.15+0x3d8>
    fb18:	ldr	r3, [sp]
    fb1c:	ldr	r9, [r3, #20]
    fb20:	ldr	r3, [r3]
    fb24:	cmp	r9, #0
    fb28:	beq	fed8 <ReadInt8Data.part.15+0x7f0>
    fb2c:	cmp	r5, #256	; 0x100
    fb30:	ble	10494 <ReadInt8Data.part.15+0xdac>
    fb34:	ldr	r1, [sp, #4]
    fb38:	sub	r0, r5, #256	; 0x100
    fb3c:	add	r4, sp, #1040	; 0x410
    fb40:	sub	r0, r0, #1
    fb44:	mov	r9, #0
    fb48:	add	r6, sp, #24
    fb4c:	add	r4, r4, #8
    fb50:	str	r0, [sp, #16]
    fb54:	str	r5, [sp, #20]
    fb58:	add	r2, r1, #255	; 0xff
    fb5c:	sub	r8, r1, #1
    fb60:	bic	r1, r0, #255	; 0xff
    fb64:	add	r2, r2, r1
    fb68:	str	r2, [sp, #12]
    fb6c:	mov	r2, #256	; 0x100
    fb70:	mov	r1, r7
    fb74:	mov	r0, r6
    fb78:	mov	fp, r6
    fb7c:	bl	1520 <fread@plt>
    fb80:	add	r9, r9, r0
    fb84:	mov	sl, r8
    fb88:	mov	r5, r6
    fb8c:	str	r9, [sp, #8]
    fb90:	mov	r0, r5
    fb94:	add	r5, r5, #4
    fb98:	bl	18c4 <Mat_int32Swap>
    fb9c:	cmp	r5, r4
    fba0:	strb	r0, [sl, #1]!
    fba4:	bne	fb90 <ReadInt8Data.part.15+0x4a8>
    fba8:	ldr	r3, [sp, #12]
    fbac:	add	r8, r8, #256	; 0x100
    fbb0:	cmp	r8, r3
    fbb4:	beq	10644 <ReadInt8Data.part.15+0xf5c>
    fbb8:	ldr	r3, [sp]
    fbbc:	ldr	r3, [r3]
    fbc0:	b	fb6c <ReadInt8Data.part.15+0x484>
    fbc4:	ldr	r3, [sp]
    fbc8:	ldr	r9, [r3, #20]
    fbcc:	ldr	r3, [r3]
    fbd0:	cmp	r9, #0
    fbd4:	beq	100e8 <ReadInt8Data.part.15+0xa00>
    fbd8:	cmp	r5, #256	; 0x100
    fbdc:	ble	10444 <ReadInt8Data.part.15+0xd5c>
    fbe0:	ldr	r1, [sp, #4]
    fbe4:	sub	r0, r5, #256	; 0x100
    fbe8:	add	r4, sp, #1040	; 0x410
    fbec:	sub	r0, r0, #1
    fbf0:	mov	r9, #0
    fbf4:	add	r6, sp, #24
    fbf8:	add	r4, r4, #8
    fbfc:	str	r0, [sp, #16]
    fc00:	str	r5, [sp, #20]
    fc04:	add	r2, r1, #255	; 0xff
    fc08:	sub	r8, r1, #1
    fc0c:	bic	r1, r0, #255	; 0xff
    fc10:	add	r2, r2, r1
    fc14:	str	r2, [sp, #12]
    fc18:	mov	r2, #256	; 0x100
    fc1c:	mov	r1, r7
    fc20:	mov	r0, r6
    fc24:	mov	fp, r6
    fc28:	bl	1520 <fread@plt>
    fc2c:	add	r9, r9, r0
    fc30:	mov	sl, r8
    fc34:	mov	r5, r6
    fc38:	str	r9, [sp, #8]
    fc3c:	mov	r0, r5
    fc40:	add	r5, r5, #4
    fc44:	bl	1974 <Mat_floatSwap>
    fc48:	vcvt.s32.f32	s15, s0
    fc4c:	cmp	r5, r4
    fc50:	vmov	r3, s15
    fc54:	strb	r3, [sl, #1]!
    fc58:	bne	fc3c <ReadInt8Data.part.15+0x554>
    fc5c:	ldr	r3, [sp, #12]
    fc60:	add	r8, r8, #256	; 0x100
    fc64:	cmp	r8, r3
    fc68:	beq	106f4 <ReadInt8Data.part.15+0x100c>
    fc6c:	ldr	r3, [sp]
    fc70:	ldr	r3, [r3]
    fc74:	b	fc18 <ReadInt8Data.part.15+0x530>
    fc78:	cmp	r4, #12
    fc7c:	beq	107e4 <ReadInt8Data.part.15+0x10fc>
    fc80:	cmp	r4, #13
    fc84:	movne	r0, #0
    fc88:	bne	fdac <ReadInt8Data.part.15+0x6c4>
    fc8c:	ldr	r3, [sp]
    fc90:	ldr	r9, [r3, #20]
    fc94:	ldr	r3, [r3]
    fc98:	cmp	r9, #0
    fc9c:	beq	10b9c <ReadInt8Data.part.15+0x14b4>
    fca0:	cmp	r5, #256	; 0x100
    fca4:	ble	10e04 <ReadInt8Data.part.15+0x171c>
    fca8:	ldr	r1, [sp, #4]
    fcac:	sub	sl, r5, #256	; 0x100
    fcb0:	add	r4, sp, #2064	; 0x810
    fcb4:	sub	sl, sl, #1
    fcb8:	mov	r0, #0
    fcbc:	add	r6, sp, #24
    fcc0:	add	r4, r4, #8
    fcc4:	str	r0, [sp, #12]
    fcc8:	add	r2, r1, #255	; 0xff
    fccc:	sub	r9, r1, #1
    fcd0:	bic	r1, sl, #255	; 0xff
    fcd4:	add	r2, r1, r2
    fcd8:	str	r2, [sp, #16]
    fcdc:	mov	r2, #256	; 0x100
    fce0:	mov	r1, r7
    fce4:	mov	r0, r6
    fce8:	mov	fp, r9
    fcec:	bl	1520 <fread@plt>
    fcf0:	ldr	r3, [sp, #12]
    fcf4:	mov	r8, r6
    fcf8:	str	r6, [sp, #20]
    fcfc:	add	r3, r3, r0
    fd00:	str	r3, [sp, #8]
    fd04:	str	r3, [sp, #12]
    fd08:	mov	r0, r8
    fd0c:	add	r8, r8, #8
    fd10:	bl	1858 <Mat_uint64Swap>
    fd14:	cmp	r4, r8
    fd18:	strb	r0, [fp, #1]!
    fd1c:	bne	fd08 <ReadInt8Data.part.15+0x620>
    fd20:	ldr	r3, [sp, #16]
    fd24:	add	r9, r9, #256	; 0x100
    fd28:	cmp	r3, r9
    fd2c:	beq	fd3c <ReadInt8Data.part.15+0x654>
    fd30:	ldr	r3, [sp]
    fd34:	ldr	r3, [r3]
    fd38:	b	fcdc <ReadInt8Data.part.15+0x5f4>
    fd3c:	bic	r4, sl, #255	; 0xff
    fd40:	add	r4, r4, #256	; 0x100
    fd44:	cmp	r5, r4
    fd48:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
    fd4c:	ldr	r3, [sp]
    fd50:	sub	r5, r5, r4
    fd54:	mov	r0, r6
    fd58:	mov	r2, r5
    fd5c:	mov	r1, r7
    fd60:	ldr	r3, [r3]
    fd64:	bl	1520 <fread@plt>
    fd68:	ldr	r3, [sp, #12]
    fd6c:	cmp	r5, #0
    fd70:	add	r3, r3, r0
    fd74:	str	r3, [sp, #8]
    fd78:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
    fd7c:	ldr	r3, [sp, #4]
    fd80:	ldr	r6, [sp, #20]
    fd84:	add	r4, r3, r4
    fd88:	add	r5, r4, r5
    fd8c:	mov	r0, r6
    fd90:	add	r6, r6, #8
    fd94:	bl	1858 <Mat_uint64Swap>
    fd98:	strb	r0, [r4], #1
    fd9c:	cmp	r5, r4
    fda0:	bne	fd8c <ReadInt8Data.part.15+0x6a4>
    fda4:	ldr	r3, [sp, #8]
    fda8:	mul	r0, r3, r7
    fdac:	add	sp, sp, #2064	; 0x810
    fdb0:	add	sp, sp, #12
    fdb4:	ldrd	r4, [sp]
    fdb8:	ldrd	r6, [sp, #8]
    fdbc:	ldrd	r8, [sp, #16]
    fdc0:	ldrd	sl, [sp, #24]
    fdc4:	add	sp, sp, #32
    fdc8:	pop	{pc}		; (ldr pc, [sp], #4)
    fdcc:	ldr	r3, [sp, #8]
    fdd0:	mov	r5, sl
    fdd4:	mov	sl, ip
    fdd8:	bic	r4, r3, #255	; 0xff
    fddc:	add	r4, r4, #256	; 0x100
    fde0:	cmp	r5, r4
    fde4:	bgt	10174 <ReadInt8Data.part.15+0xa8c>
    fde8:	mul	r0, r0, r7
    fdec:	b	fdac <ReadInt8Data.part.15+0x6c4>
    fdf0:	ldr	r3, [sp, #8]
    fdf4:	mov	r5, sl
    fdf8:	mov	sl, ip
    fdfc:	bic	r4, r3, #255	; 0xff
    fe00:	add	r4, r4, #256	; 0x100
    fe04:	cmp	r5, r4
    fe08:	ble	fde8 <ReadInt8Data.part.15+0x700>
    fe0c:	ldr	r3, [sp]
    fe10:	sub	r5, r5, r4
    fe14:	mov	r0, r6
    fe18:	mov	r2, r5
    fe1c:	mov	r1, r7
    fe20:	ldr	r3, [r3]
    fe24:	bl	1520 <fread@plt>
    fe28:	cmp	r5, #0
    fe2c:	add	r0, r9, r0
    fe30:	ble	fde8 <ReadInt8Data.part.15+0x700>
    fe34:	ldr	r3, [sp, #4]
    fe38:	add	r4, r3, r4
    fe3c:	add	r5, r4, r5
    fe40:	ldrb	r3, [sl, #1]!
    fe44:	strb	r3, [r4], #1
    fe48:	cmp	r5, r4
    fe4c:	bne	fe40 <ReadInt8Data.part.15+0x758>
    fe50:	b	fde8 <ReadInt8Data.part.15+0x700>
    fe54:	cmp	r5, #256	; 0x100
    fe58:	ble	10298 <ReadInt8Data.part.15+0xbb0>
    fe5c:	ldr	r0, [sp, #4]
    fe60:	sub	r2, r5, #256	; 0x100
    fe64:	mov	fp, r5
    fe68:	sub	r1, r2, #1
    fe6c:	add	r6, sp, #24
    fe70:	ldr	r5, [sp]
    fe74:	add	r4, r6, #508	; 0x1fc
    fe78:	str	r1, [sp, #12]
    fe7c:	bic	r1, r1, #255	; 0xff
    fe80:	add	r4, r4, #2
    fe84:	add	r2, r0, #255	; 0xff
    fe88:	sub	r8, r0, #1
    fe8c:	add	sl, r2, r1
    fe90:	mov	r2, #256	; 0x100
    fe94:	mov	r1, r7
    fe98:	mov	r0, r6
    fe9c:	bl	1520 <fread@plt>
    fea0:	add	r9, r9, r0
    fea4:	sub	r0, r6, #2
    fea8:	mov	ip, r9
    feac:	mov	r3, r0
    feb0:	mov	r2, r8
    feb4:	ldrh	r1, [r3, #2]!
    feb8:	cmp	r4, r3
    febc:	strb	r1, [r2, #1]!
    fec0:	bne	feb4 <ReadInt8Data.part.15+0x7cc>
    fec4:	add	r8, r8, #256	; 0x100
    fec8:	cmp	sl, r8
    fecc:	beq	1096c <ReadInt8Data.part.15+0x1284>
    fed0:	ldr	r3, [r5]
    fed4:	b	fe90 <ReadInt8Data.part.15+0x7a8>
    fed8:	cmp	r5, #256	; 0x100
    fedc:	ble	10320 <ReadInt8Data.part.15+0xc38>
    fee0:	ldr	r0, [sp, #4]
    fee4:	sub	r1, r5, #256	; 0x100
    fee8:	mov	fp, r5
    feec:	sub	r1, r1, #1
    fef0:	add	r6, sp, #24
    fef4:	ldr	r5, [sp]
    fef8:	add	r4, r6, #1020	; 0x3fc
    fefc:	str	r1, [sp, #12]
    ff00:	bic	r1, r1, #255	; 0xff
    ff04:	add	r2, r0, #255	; 0xff
    ff08:	sub	r8, r0, #1
    ff0c:	add	sl, r1, r2
    ff10:	mov	r2, #256	; 0x100
    ff14:	mov	r1, r7
    ff18:	mov	r0, r6
    ff1c:	bl	1520 <fread@plt>
    ff20:	add	r9, r9, r0
    ff24:	sub	r0, r6, #4
    ff28:	mov	ip, r9
    ff2c:	mov	r3, r0
    ff30:	mov	r2, r8
    ff34:	ldr	r1, [r3, #4]!
    ff38:	cmp	r3, r4
    ff3c:	strb	r1, [r2, #1]!
    ff40:	bne	ff34 <ReadInt8Data.part.15+0x84c>
    ff44:	add	r8, r8, #256	; 0x100
    ff48:	cmp	r8, sl
    ff4c:	beq	10894 <ReadInt8Data.part.15+0x11ac>
    ff50:	ldr	r3, [r5]
    ff54:	b	ff10 <ReadInt8Data.part.15+0x828>
    ff58:	cmp	r5, #256	; 0x100
    ff5c:	ble	102dc <ReadInt8Data.part.15+0xbf4>
    ff60:	ldr	r0, [sp, #4]
    ff64:	sub	r2, r5, #256	; 0x100
    ff68:	mov	fp, r5
    ff6c:	sub	r1, r2, #1
    ff70:	add	r6, sp, #24
    ff74:	ldr	r5, [sp]
    ff78:	add	r4, r6, #508	; 0x1fc
    ff7c:	str	r1, [sp, #12]
    ff80:	bic	r1, r1, #255	; 0xff
    ff84:	add	r4, r4, #2
    ff88:	add	r2, r0, #255	; 0xff
    ff8c:	sub	r8, r0, #1
    ff90:	add	sl, r2, r1
    ff94:	mov	r2, #256	; 0x100
    ff98:	mov	r1, r7
    ff9c:	mov	r0, r6
    ffa0:	bl	1520 <fread@plt>
    ffa4:	add	r9, r9, r0
    ffa8:	sub	r0, r6, #2
    ffac:	mov	ip, r9
    ffb0:	mov	r3, r0
    ffb4:	mov	r2, r8
    ffb8:	ldrh	r1, [r3, #2]!
    ffbc:	cmp	r3, r4
    ffc0:	strb	r1, [r2, #1]!
    ffc4:	bne	ffb8 <ReadInt8Data.part.15+0x8d0>
    ffc8:	add	r8, r8, #256	; 0x100
    ffcc:	cmp	sl, r8
    ffd0:	beq	10ac0 <ReadInt8Data.part.15+0x13d8>
    ffd4:	ldr	r3, [r5]
    ffd8:	b	ff94 <ReadInt8Data.part.15+0x8ac>
    ffdc:	cmp	r5, #256	; 0x100
    ffe0:	ble	10254 <ReadInt8Data.part.15+0xb6c>
    ffe4:	ldr	r0, [sp, #4]
    ffe8:	sub	r1, r5, #256	; 0x100
    ffec:	mov	fp, r5
    fff0:	sub	r1, r1, #1
    fff4:	add	r6, sp, #24
    fff8:	ldr	r5, [sp]
    fffc:	add	r4, r6, #1020	; 0x3fc
   10000:	str	r1, [sp, #12]
   10004:	bic	r1, r1, #255	; 0xff
   10008:	add	r2, r0, #255	; 0xff
   1000c:	sub	r8, r0, #1
   10010:	add	sl, r2, r1
   10014:	mov	r2, #256	; 0x100
   10018:	mov	r1, r7
   1001c:	mov	r0, r6
   10020:	bl	1520 <fread@plt>
   10024:	add	r9, r9, r0
   10028:	sub	r0, r6, #4
   1002c:	mov	ip, r9
   10030:	mov	r3, r0
   10034:	mov	r2, r8
   10038:	ldr	r1, [r3, #4]!
   1003c:	cmp	r3, r4
   10040:	strb	r1, [r2, #1]!
   10044:	bne	10038 <ReadInt8Data.part.15+0x950>
   10048:	add	r8, r8, #256	; 0x100
   1004c:	cmp	r8, sl
   10050:	beq	10900 <ReadInt8Data.part.15+0x1218>
   10054:	ldr	r3, [r5]
   10058:	b	10014 <ReadInt8Data.part.15+0x92c>
   1005c:	cmp	r5, #256	; 0x100
   10060:	ble	10208 <ReadInt8Data.part.15+0xb20>
   10064:	ldr	r1, [sp, #4]
   10068:	sub	r0, r5, #256	; 0x100
   1006c:	mov	sl, r5
   10070:	sub	r0, r0, #1
   10074:	add	r4, sp, #2064	; 0x810
   10078:	ldr	r5, [sp]
   1007c:	add	r6, sp, #24
   10080:	add	r4, r4, #8
   10084:	str	r0, [sp, #12]
   10088:	add	r2, r1, #255	; 0xff
   1008c:	sub	r8, r1, #1
   10090:	bic	r1, r0, #255	; 0xff
   10094:	add	fp, r2, r1
   10098:	mov	r2, #256	; 0x100
   1009c:	mov	r1, r7
   100a0:	mov	r0, r6
   100a4:	bl	1520 <fread@plt>
   100a8:	add	r9, r9, r0
   100ac:	mov	ip, r6
   100b0:	mov	r0, r9
   100b4:	mov	r1, r8
   100b8:	mov	r2, r6
   100bc:	vldmia	r2!, {d7}
   100c0:	vcvt.s32.f64	s15, d7
   100c4:	cmp	r2, r4
   100c8:	vmov	r3, s15
   100cc:	strb	r3, [r1, #1]!
   100d0:	bne	100bc <ReadInt8Data.part.15+0x9d4>
   100d4:	add	r8, r8, #256	; 0x100
   100d8:	cmp	r8, fp
   100dc:	beq	10a4c <ReadInt8Data.part.15+0x1364>
   100e0:	ldr	r3, [r5]
   100e4:	b	10098 <ReadInt8Data.part.15+0x9b0>
   100e8:	cmp	r5, #256	; 0x100
   100ec:	ble	101bc <ReadInt8Data.part.15+0xad4>
   100f0:	ldr	r1, [sp, #4]
   100f4:	sub	r0, r5, #256	; 0x100
   100f8:	mov	sl, r5
   100fc:	sub	r0, r0, #1
   10100:	add	r4, sp, #1040	; 0x410
   10104:	ldr	r5, [sp]
   10108:	add	r6, sp, #24
   1010c:	add	r4, r4, #8
   10110:	str	r0, [sp, #12]
   10114:	add	r2, r1, #255	; 0xff
   10118:	sub	r8, r1, #1
   1011c:	bic	r1, r0, #255	; 0xff
   10120:	add	fp, r2, r1
   10124:	mov	r2, #256	; 0x100
   10128:	mov	r1, r7
   1012c:	mov	r0, r6
   10130:	bl	1520 <fread@plt>
   10134:	add	r9, r9, r0
   10138:	mov	ip, r6
   1013c:	mov	r0, r9
   10140:	mov	r1, r8
   10144:	mov	r2, r6
   10148:	vldmia	r2!, {s15}
   1014c:	vcvt.s32.f32	s15, s15
   10150:	cmp	r2, r4
   10154:	vmov	r3, s15
   10158:	strb	r3, [r1, #1]!
   1015c:	bne	10148 <ReadInt8Data.part.15+0xa60>
   10160:	add	r8, r8, #256	; 0x100
   10164:	cmp	r8, fp
   10168:	beq	109d8 <ReadInt8Data.part.15+0x12f0>
   1016c:	ldr	r3, [r5]
   10170:	b	10124 <ReadInt8Data.part.15+0xa3c>
   10174:	ldr	r3, [sp]
   10178:	sub	r5, r5, r4
   1017c:	mov	r0, r6
   10180:	mov	r2, r5
   10184:	mov	r1, r7
   10188:	ldr	r3, [r3]
   1018c:	bl	1520 <fread@plt>
   10190:	cmp	r5, #0
   10194:	add	r0, r9, r0
   10198:	ble	fde8 <ReadInt8Data.part.15+0x700>
   1019c:	ldr	r3, [sp, #4]
   101a0:	add	r4, r3, r4
   101a4:	add	r5, r4, r5
   101a8:	ldrb	r3, [sl, #1]!
   101ac:	strb	r3, [r4], #1
   101b0:	cmp	r5, r4
   101b4:	bne	101a8 <ReadInt8Data.part.15+0xac0>
   101b8:	b	fde8 <ReadInt8Data.part.15+0x700>
   101bc:	add	r4, sp, #24
   101c0:	mov	r2, r5
   101c4:	mov	r0, r4
   101c8:	mov	r1, r7
   101cc:	bl	1520 <fread@plt>
   101d0:	cmp	r5, #0
   101d4:	str	r0, [sp, #8]
   101d8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   101dc:	ldr	r3, [sp, #4]
   101e0:	mov	r2, r4
   101e4:	sub	r3, r3, #1
   101e8:	add	r5, r3, r5
   101ec:	vldmia	r2!, {s15}
   101f0:	vcvt.s32.f32	s15, s15
   101f4:	vmov	r1, s15
   101f8:	strb	r1, [r3, #1]!
   101fc:	cmp	r3, r5
   10200:	bne	101ec <ReadInt8Data.part.15+0xb04>
   10204:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10208:	add	r4, sp, #24
   1020c:	mov	r2, r5
   10210:	mov	r0, r4
   10214:	mov	r1, r7
   10218:	bl	1520 <fread@plt>
   1021c:	cmp	r5, #0
   10220:	str	r0, [sp, #8]
   10224:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10228:	ldr	r3, [sp, #4]
   1022c:	mov	r2, r4
   10230:	sub	r3, r3, #1
   10234:	add	r5, r3, r5
   10238:	vldmia	r2!, {d7}
   1023c:	vcvt.s32.f64	s15, d7
   10240:	vmov	r1, s15
   10244:	strb	r1, [r3, #1]!
   10248:	cmp	r3, r5
   1024c:	bne	10238 <ReadInt8Data.part.15+0xb50>
   10250:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10254:	add	r4, sp, #24
   10258:	mov	r2, r5
   1025c:	mov	r0, r4
   10260:	mov	r1, r7
   10264:	bl	1520 <fread@plt>
   10268:	cmp	r5, #0
   1026c:	str	r0, [sp, #8]
   10270:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10274:	ldr	r3, [sp, #4]
   10278:	sub	r2, r4, #4
   1027c:	sub	r3, r3, #1
   10280:	add	r5, r3, r5
   10284:	ldr	r1, [r2, #4]!
   10288:	strb	r1, [r3, #1]!
   1028c:	cmp	r3, r5
   10290:	bne	10284 <ReadInt8Data.part.15+0xb9c>
   10294:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10298:	add	r4, sp, #24
   1029c:	mov	r2, r5
   102a0:	mov	r0, r4
   102a4:	mov	r1, r7
   102a8:	bl	1520 <fread@plt>
   102ac:	cmp	r5, #0
   102b0:	str	r0, [sp, #8]
   102b4:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   102b8:	ldr	r3, [sp, #4]
   102bc:	sub	r2, r4, #2
   102c0:	sub	r3, r3, #1
   102c4:	add	r5, r3, r5
   102c8:	ldrh	r1, [r2, #2]!
   102cc:	strb	r1, [r3, #1]!
   102d0:	cmp	r5, r3
   102d4:	bne	102c8 <ReadInt8Data.part.15+0xbe0>
   102d8:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   102dc:	add	r4, sp, #24
   102e0:	mov	r2, r5
   102e4:	mov	r0, r4
   102e8:	mov	r1, r7
   102ec:	bl	1520 <fread@plt>
   102f0:	cmp	r5, #0
   102f4:	str	r0, [sp, #8]
   102f8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   102fc:	ldr	r3, [sp, #4]
   10300:	sub	r2, r4, #2
   10304:	sub	r3, r3, #1
   10308:	add	r5, r3, r5
   1030c:	ldrh	r1, [r2, #2]!
   10310:	strb	r1, [r3, #1]!
   10314:	cmp	r3, r5
   10318:	bne	1030c <ReadInt8Data.part.15+0xc24>
   1031c:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10320:	add	r4, sp, #24
   10324:	mov	r2, r5
   10328:	mov	r0, r4
   1032c:	mov	r1, r7
   10330:	bl	1520 <fread@plt>
   10334:	cmp	r5, #0
   10338:	str	r0, [sp, #8]
   1033c:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10340:	ldr	r3, [sp, #4]
   10344:	sub	r2, r4, #4
   10348:	sub	r3, r3, #1
   1034c:	add	r5, r3, r5
   10350:	ldr	r1, [r2, #4]!
   10354:	strb	r1, [r3, #1]!
   10358:	cmp	r3, r5
   1035c:	bne	10350 <ReadInt8Data.part.15+0xc68>
   10360:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10364:	add	r4, sp, #24
   10368:	mov	r2, r5
   1036c:	mov	r0, r4
   10370:	mov	r1, r7
   10374:	bl	1520 <fread@plt>
   10378:	cmp	r5, #0
   1037c:	str	r0, [sp, #8]
   10380:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10384:	ldr	r3, [sp, #4]
   10388:	sub	r6, r3, #1
   1038c:	add	r5, r6, r5
   10390:	mov	r0, r4
   10394:	add	r4, r4, #2
   10398:	bl	1950 <Mat_uint16Swap>
   1039c:	strb	r0, [r6, #1]!
   103a0:	cmp	r5, r6
   103a4:	bne	10390 <ReadInt8Data.part.15+0xca8>
   103a8:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   103ac:	add	r4, sp, #24
   103b0:	mov	r2, r5
   103b4:	mov	r0, r4
   103b8:	mov	r1, r7
   103bc:	bl	1520 <fread@plt>
   103c0:	cmp	r5, #0
   103c4:	str	r0, [sp, #8]
   103c8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   103cc:	ldr	r3, [sp, #4]
   103d0:	sub	r6, r3, #1
   103d4:	add	r5, r6, r5
   103d8:	mov	r0, r4
   103dc:	add	r4, r4, #8
   103e0:	bl	19a4 <Mat_doubleSwap>
   103e4:	vcvt.s32.f64	s15, d0
   103e8:	vmov	r3, s15
   103ec:	strb	r3, [r6, #1]!
   103f0:	cmp	r6, r5
   103f4:	bne	103d8 <ReadInt8Data.part.15+0xcf0>
   103f8:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   103fc:	add	r4, sp, #24
   10400:	mov	r2, r5
   10404:	mov	r0, r4
   10408:	mov	r1, r7
   1040c:	bl	1520 <fread@plt>
   10410:	cmp	r5, #0
   10414:	str	r0, [sp, #8]
   10418:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1041c:	ldr	r3, [sp, #4]
   10420:	sub	r6, r3, #1
   10424:	add	r5, r6, r5
   10428:	mov	r0, r4
   1042c:	add	r4, r4, #4
   10430:	bl	18f8 <Mat_uint32Swap>
   10434:	strb	r0, [r6, #1]!
   10438:	cmp	r6, r5
   1043c:	bne	10428 <ReadInt8Data.part.15+0xd40>
   10440:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10444:	add	r4, sp, #24
   10448:	mov	r2, r5
   1044c:	mov	r0, r4
   10450:	mov	r1, r7
   10454:	bl	1520 <fread@plt>
   10458:	cmp	r5, #0
   1045c:	str	r0, [sp, #8]
   10460:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10464:	ldr	r3, [sp, #4]
   10468:	sub	r6, r3, #1
   1046c:	add	r5, r6, r5
   10470:	mov	r0, r4
   10474:	add	r4, r4, #4
   10478:	bl	1974 <Mat_floatSwap>
   1047c:	vcvt.s32.f32	s15, s0
   10480:	vmov	r3, s15
   10484:	strb	r3, [r6, #1]!
   10488:	cmp	r6, r5
   1048c:	bne	10470 <ReadInt8Data.part.15+0xd88>
   10490:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10494:	add	r4, sp, #24
   10498:	mov	r2, r5
   1049c:	mov	r0, r4
   104a0:	mov	r1, r7
   104a4:	bl	1520 <fread@plt>
   104a8:	cmp	r5, #0
   104ac:	str	r0, [sp, #8]
   104b0:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   104b4:	ldr	r3, [sp, #4]
   104b8:	sub	r6, r3, #1
   104bc:	add	r5, r6, r5
   104c0:	mov	r0, r4
   104c4:	add	r4, r4, #4
   104c8:	bl	18c4 <Mat_int32Swap>
   104cc:	strb	r0, [r6, #1]!
   104d0:	cmp	r6, r5
   104d4:	bne	104c0 <ReadInt8Data.part.15+0xdd8>
   104d8:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   104dc:	add	r4, sp, #24
   104e0:	mov	r2, r5
   104e4:	mov	r0, r4
   104e8:	mov	r1, r7
   104ec:	bl	1520 <fread@plt>
   104f0:	cmp	r5, #0
   104f4:	str	r0, [sp, #8]
   104f8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   104fc:	ldr	r3, [sp, #4]
   10500:	sub	r6, r3, #1
   10504:	add	r5, r6, r5
   10508:	mov	r0, r4
   1050c:	add	r4, r4, #2
   10510:	bl	192c <Mat_int16Swap>
   10514:	strb	r0, [r6, #1]!
   10518:	cmp	r5, r6
   1051c:	bne	10508 <ReadInt8Data.part.15+0xe20>
   10520:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10524:	ldr	r3, [sp, #16]
   10528:	ldr	r5, [sp, #20]
   1052c:	bic	r4, r3, #255	; 0xff
   10530:	add	r4, r4, #256	; 0x100
   10534:	cmp	r5, r4
   10538:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1053c:	ldr	r3, [sp]
   10540:	sub	r5, r5, r4
   10544:	mov	r0, r6
   10548:	mov	r2, r5
   1054c:	mov	r1, r7
   10550:	ldr	r3, [r3]
   10554:	bl	1520 <fread@plt>
   10558:	add	r3, r9, r0
   1055c:	cmp	r5, #0
   10560:	str	r3, [sp, #8]
   10564:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10568:	ldr	r3, [sp, #4]
   1056c:	mov	r6, fp
   10570:	add	r4, r3, r4
   10574:	add	r5, r4, r5
   10578:	mov	r0, r6
   1057c:	add	r6, r6, #4
   10580:	bl	18f8 <Mat_uint32Swap>
   10584:	strb	r0, [r4], #1
   10588:	cmp	r4, r5
   1058c:	bne	10578 <ReadInt8Data.part.15+0xe90>
   10590:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10594:	ldr	r3, [sp, #16]
   10598:	ldr	r5, [sp, #20]
   1059c:	bic	r4, r3, #255	; 0xff
   105a0:	add	r4, r4, #256	; 0x100
   105a4:	cmp	r5, r4
   105a8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   105ac:	ldr	r3, [sp]
   105b0:	sub	r5, r5, r4
   105b4:	mov	r0, r6
   105b8:	mov	r2, r5
   105bc:	mov	r1, r7
   105c0:	ldr	r3, [r3]
   105c4:	bl	1520 <fread@plt>
   105c8:	add	r3, r9, r0
   105cc:	cmp	r5, #0
   105d0:	str	r3, [sp, #8]
   105d4:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   105d8:	ldr	r3, [sp, #4]
   105dc:	mov	r6, fp
   105e0:	add	r4, r3, r4
   105e4:	add	r5, r4, r5
   105e8:	mov	r0, r6
   105ec:	add	r6, r6, #2
   105f0:	bl	1950 <Mat_uint16Swap>
   105f4:	strb	r0, [r4], #1
   105f8:	cmp	r4, r5
   105fc:	bne	105e8 <ReadInt8Data.part.15+0xf00>
   10600:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10604:	add	r4, sp, #24
   10608:	mov	r2, r5
   1060c:	mov	r0, r4
   10610:	mov	r1, r7
   10614:	bl	1520 <fread@plt>
   10618:	cmp	r5, #0
   1061c:	ble	fde8 <ReadInt8Data.part.15+0x700>
   10620:	ldr	r3, [sp, #4]
   10624:	sub	r2, r4, #1
   10628:	sub	r3, r3, #1
   1062c:	add	r5, r3, r5
   10630:	ldrb	r1, [r2, #1]!
   10634:	strb	r1, [r3, #1]!
   10638:	cmp	r5, r3
   1063c:	bne	10630 <ReadInt8Data.part.15+0xf48>
   10640:	b	fde8 <ReadInt8Data.part.15+0x700>
   10644:	ldr	r3, [sp, #16]
   10648:	ldr	r5, [sp, #20]
   1064c:	bic	r4, r3, #255	; 0xff
   10650:	add	r4, r4, #256	; 0x100
   10654:	cmp	r5, r4
   10658:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1065c:	ldr	r3, [sp]
   10660:	sub	r5, r5, r4
   10664:	mov	r0, r6
   10668:	mov	r2, r5
   1066c:	mov	r1, r7
   10670:	ldr	r3, [r3]
   10674:	bl	1520 <fread@plt>
   10678:	add	r3, r9, r0
   1067c:	cmp	r5, #0
   10680:	str	r3, [sp, #8]
   10684:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10688:	ldr	r3, [sp, #4]
   1068c:	mov	r6, fp
   10690:	add	r4, r3, r4
   10694:	add	r5, r4, r5
   10698:	mov	r0, r6
   1069c:	add	r6, r6, #4
   106a0:	bl	18c4 <Mat_int32Swap>
   106a4:	strb	r0, [r4], #1
   106a8:	cmp	r4, r5
   106ac:	bne	10698 <ReadInt8Data.part.15+0xfb0>
   106b0:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   106b4:	add	r4, sp, #24
   106b8:	mov	r2, r5
   106bc:	mov	r0, r4
   106c0:	mov	r1, r7
   106c4:	bl	1520 <fread@plt>
   106c8:	cmp	r5, #0
   106cc:	ble	fde8 <ReadInt8Data.part.15+0x700>
   106d0:	ldr	r3, [sp, #4]
   106d4:	sub	r2, r4, #1
   106d8:	sub	r3, r3, #1
   106dc:	add	r5, r3, r5
   106e0:	ldrb	r1, [r2, #1]!
   106e4:	strb	r1, [r3, #1]!
   106e8:	cmp	r5, r3
   106ec:	bne	106e0 <ReadInt8Data.part.15+0xff8>
   106f0:	b	fde8 <ReadInt8Data.part.15+0x700>
   106f4:	ldr	r3, [sp, #16]
   106f8:	ldr	r5, [sp, #20]
   106fc:	bic	r4, r3, #255	; 0xff
   10700:	add	r4, r4, #256	; 0x100
   10704:	cmp	r5, r4
   10708:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1070c:	ldr	r3, [sp]
   10710:	sub	r5, r5, r4
   10714:	mov	r0, r6
   10718:	mov	r2, r5
   1071c:	mov	r1, r7
   10720:	ldr	r3, [r3]
   10724:	bl	1520 <fread@plt>
   10728:	add	r3, r9, r0
   1072c:	cmp	r5, #0
   10730:	str	r3, [sp, #8]
   10734:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10738:	ldr	r3, [sp, #4]
   1073c:	mov	r6, fp
   10740:	add	r4, r3, r4
   10744:	add	r5, r4, r5
   10748:	mov	r0, r6
   1074c:	add	r6, r6, #4
   10750:	bl	1974 <Mat_floatSwap>
   10754:	vcvt.s32.f32	s15, s0
   10758:	vmov	r3, s15
   1075c:	strb	r3, [r4], #1
   10760:	cmp	r4, r5
   10764:	bne	10748 <ReadInt8Data.part.15+0x1060>
   10768:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   1076c:	ldr	r3, [sp, #16]
   10770:	ldr	r5, [sp, #20]
   10774:	bic	r4, r3, #255	; 0xff
   10778:	add	r4, r4, #256	; 0x100
   1077c:	cmp	r5, r4
   10780:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10784:	ldr	r3, [sp]
   10788:	sub	r5, r5, r4
   1078c:	mov	r0, r6
   10790:	mov	r2, r5
   10794:	mov	r1, r7
   10798:	ldr	r3, [r3]
   1079c:	bl	1520 <fread@plt>
   107a0:	add	r3, r9, r0
   107a4:	cmp	r5, #0
   107a8:	str	r3, [sp, #8]
   107ac:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   107b0:	ldr	r3, [sp, #4]
   107b4:	mov	r6, fp
   107b8:	add	r4, r3, r4
   107bc:	add	r5, r4, r5
   107c0:	mov	r0, r6
   107c4:	add	r6, r6, #8
   107c8:	bl	19a4 <Mat_doubleSwap>
   107cc:	vcvt.s32.f64	s15, d0
   107d0:	vmov	r3, s15
   107d4:	strb	r3, [r4], #1
   107d8:	cmp	r4, r5
   107dc:	bne	107c0 <ReadInt8Data.part.15+0x10d8>
   107e0:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   107e4:	ldr	r3, [sp]
   107e8:	ldr	r9, [r3, #20]
   107ec:	ldr	r3, [r3]
   107f0:	cmp	r9, #0
   107f4:	beq	10c1c <ReadInt8Data.part.15+0x1534>
   107f8:	cmp	r5, #256	; 0x100
   107fc:	ble	10e90 <ReadInt8Data.part.15+0x17a8>
   10800:	ldr	r1, [sp, #4]
   10804:	sub	sl, r5, #256	; 0x100
   10808:	add	r4, sp, #2064	; 0x810
   1080c:	sub	sl, sl, #1
   10810:	mov	r0, #0
   10814:	add	r6, sp, #24
   10818:	add	r4, r4, #8
   1081c:	str	r0, [sp, #12]
   10820:	add	r2, r1, #255	; 0xff
   10824:	sub	r9, r1, #1
   10828:	bic	r1, sl, #255	; 0xff
   1082c:	add	r2, r2, r1
   10830:	str	r2, [sp, #16]
   10834:	mov	r2, #256	; 0x100
   10838:	mov	r1, r7
   1083c:	mov	r0, r6
   10840:	mov	fp, r9
   10844:	bl	1520 <fread@plt>
   10848:	ldr	r3, [sp, #12]
   1084c:	mov	r8, r6
   10850:	str	r6, [sp, #20]
   10854:	add	r3, r3, r0
   10858:	str	r3, [sp, #8]
   1085c:	str	r3, [sp, #12]
   10860:	mov	r0, r8
   10864:	add	r8, r8, #8
   10868:	bl	17ec <Mat_int64Swap>
   1086c:	cmp	r4, r8
   10870:	strb	r0, [fp, #1]!
   10874:	bne	10860 <ReadInt8Data.part.15+0x1178>
   10878:	ldr	r3, [sp, #16]
   1087c:	add	r9, r9, #256	; 0x100
   10880:	cmp	r3, r9
   10884:	beq	10cf8 <ReadInt8Data.part.15+0x1610>
   10888:	ldr	r3, [sp]
   1088c:	ldr	r3, [r3]
   10890:	b	10834 <ReadInt8Data.part.15+0x114c>
   10894:	ldr	r3, [sp, #12]
   10898:	mov	r5, fp
   1089c:	mov	fp, r0
   108a0:	str	ip, [sp, #8]
   108a4:	bic	r4, r3, #255	; 0xff
   108a8:	add	r4, r4, #256	; 0x100
   108ac:	cmp	r5, r4
   108b0:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   108b4:	ldr	r3, [sp]
   108b8:	sub	r5, r5, r4
   108bc:	mov	r0, r6
   108c0:	mov	r2, r5
   108c4:	mov	r1, r7
   108c8:	ldr	r3, [r3]
   108cc:	bl	1520 <fread@plt>
   108d0:	add	r3, r9, r0
   108d4:	cmp	r5, #0
   108d8:	str	r3, [sp, #8]
   108dc:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   108e0:	ldr	r3, [sp, #4]
   108e4:	add	r4, r3, r4
   108e8:	add	r5, r4, r5
   108ec:	ldr	r3, [fp, #4]!
   108f0:	strb	r3, [r4], #1
   108f4:	cmp	r4, r5
   108f8:	bne	108ec <ReadInt8Data.part.15+0x1204>
   108fc:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10900:	ldr	r3, [sp, #12]
   10904:	mov	r5, fp
   10908:	mov	fp, r0
   1090c:	str	ip, [sp, #8]
   10910:	bic	r4, r3, #255	; 0xff
   10914:	add	r4, r4, #256	; 0x100
   10918:	cmp	r5, r4
   1091c:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10920:	ldr	r3, [sp]
   10924:	sub	r5, r5, r4
   10928:	mov	r0, r6
   1092c:	mov	r2, r5
   10930:	mov	r1, r7
   10934:	ldr	r3, [r3]
   10938:	bl	1520 <fread@plt>
   1093c:	add	r3, r9, r0
   10940:	cmp	r5, #0
   10944:	str	r3, [sp, #8]
   10948:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1094c:	ldr	r3, [sp, #4]
   10950:	add	r4, r3, r4
   10954:	add	r5, r4, r5
   10958:	ldr	r3, [fp, #4]!
   1095c:	strb	r3, [r4], #1
   10960:	cmp	r4, r5
   10964:	bne	10958 <ReadInt8Data.part.15+0x1270>
   10968:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   1096c:	ldr	r3, [sp, #12]
   10970:	mov	r5, fp
   10974:	mov	fp, r0
   10978:	str	ip, [sp, #8]
   1097c:	bic	r4, r3, #255	; 0xff
   10980:	add	r4, r4, #256	; 0x100
   10984:	cmp	r5, r4
   10988:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   1098c:	ldr	r3, [sp]
   10990:	sub	r5, r5, r4
   10994:	mov	r0, r6
   10998:	mov	r2, r5
   1099c:	mov	r1, r7
   109a0:	ldr	r3, [r3]
   109a4:	bl	1520 <fread@plt>
   109a8:	add	r3, r9, r0
   109ac:	cmp	r5, #0
   109b0:	str	r3, [sp, #8]
   109b4:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   109b8:	ldr	r3, [sp, #4]
   109bc:	add	r4, r3, r4
   109c0:	add	r5, r4, r5
   109c4:	ldrh	r3, [fp, #2]!
   109c8:	strb	r3, [r4], #1
   109cc:	cmp	r5, r4
   109d0:	bne	109c4 <ReadInt8Data.part.15+0x12dc>
   109d4:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   109d8:	ldr	r3, [sp, #12]
   109dc:	mov	r5, sl
   109e0:	mov	sl, ip
   109e4:	str	r0, [sp, #8]
   109e8:	bic	r4, r3, #255	; 0xff
   109ec:	add	r4, r4, #256	; 0x100
   109f0:	cmp	r5, r4
   109f4:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   109f8:	ldr	r3, [sp]
   109fc:	sub	r5, r5, r4
   10a00:	mov	r0, r6
   10a04:	mov	r2, r5
   10a08:	mov	r1, r7
   10a0c:	ldr	r3, [r3]
   10a10:	bl	1520 <fread@plt>
   10a14:	add	r3, r9, r0
   10a18:	cmp	r5, #0
   10a1c:	str	r3, [sp, #8]
   10a20:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10a24:	ldr	r3, [sp, #4]
   10a28:	add	r4, r3, r4
   10a2c:	add	r5, r4, r5
   10a30:	vldmia	sl!, {s15}
   10a34:	vcvt.s32.f32	s15, s15
   10a38:	vmov	r3, s15
   10a3c:	strb	r3, [r4], #1
   10a40:	cmp	r4, r5
   10a44:	bne	10a30 <ReadInt8Data.part.15+0x1348>
   10a48:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10a4c:	ldr	r3, [sp, #12]
   10a50:	mov	r5, sl
   10a54:	mov	sl, ip
   10a58:	str	r0, [sp, #8]
   10a5c:	bic	r4, r3, #255	; 0xff
   10a60:	add	r4, r4, #256	; 0x100
   10a64:	cmp	r5, r4
   10a68:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10a6c:	ldr	r3, [sp]
   10a70:	sub	r5, r5, r4
   10a74:	mov	r0, r6
   10a78:	mov	r2, r5
   10a7c:	mov	r1, r7
   10a80:	ldr	r3, [r3]
   10a84:	bl	1520 <fread@plt>
   10a88:	add	r3, r9, r0
   10a8c:	cmp	r5, #0
   10a90:	str	r3, [sp, #8]
   10a94:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10a98:	ldr	r3, [sp, #4]
   10a9c:	add	r4, r3, r4
   10aa0:	add	r5, r4, r5
   10aa4:	vldmia	sl!, {d7}
   10aa8:	vcvt.s32.f64	s15, d7
   10aac:	vmov	r3, s15
   10ab0:	strb	r3, [r4], #1
   10ab4:	cmp	r4, r5
   10ab8:	bne	10aa4 <ReadInt8Data.part.15+0x13bc>
   10abc:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10ac0:	ldr	r3, [sp, #12]
   10ac4:	mov	r5, fp
   10ac8:	mov	fp, r0
   10acc:	str	ip, [sp, #8]
   10ad0:	bic	r4, r3, #255	; 0xff
   10ad4:	add	r4, r4, #256	; 0x100
   10ad8:	cmp	r5, r4
   10adc:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10ae0:	ldr	r3, [sp]
   10ae4:	sub	r5, r5, r4
   10ae8:	mov	r0, r6
   10aec:	mov	r2, r5
   10af0:	mov	r1, r7
   10af4:	ldr	r3, [r3]
   10af8:	bl	1520 <fread@plt>
   10afc:	add	r3, r9, r0
   10b00:	cmp	r5, #0
   10b04:	str	r3, [sp, #8]
   10b08:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10b0c:	ldr	r3, [sp, #4]
   10b10:	add	r4, r3, r4
   10b14:	add	r5, r4, r5
   10b18:	ldrh	r3, [fp, #2]!
   10b1c:	strb	r3, [r4], #1
   10b20:	cmp	r5, r4
   10b24:	bne	10b18 <ReadInt8Data.part.15+0x1430>
   10b28:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10b2c:	ldr	r3, [sp, #16]
   10b30:	ldr	r5, [sp, #20]
   10b34:	bic	r4, r3, #255	; 0xff
   10b38:	add	r4, r4, #256	; 0x100
   10b3c:	cmp	r5, r4
   10b40:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10b44:	ldr	r3, [sp]
   10b48:	sub	r5, r5, r4
   10b4c:	mov	r0, r6
   10b50:	mov	r2, r5
   10b54:	mov	r1, r7
   10b58:	ldr	r3, [r3]
   10b5c:	bl	1520 <fread@plt>
   10b60:	add	r3, r9, r0
   10b64:	cmp	r5, #0
   10b68:	str	r3, [sp, #8]
   10b6c:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10b70:	ldr	r3, [sp, #4]
   10b74:	mov	r6, fp
   10b78:	add	r4, r3, r4
   10b7c:	add	r5, r4, r5
   10b80:	mov	r0, r6
   10b84:	add	r6, r6, #2
   10b88:	bl	192c <Mat_int16Swap>
   10b8c:	strb	r0, [r4], #1
   10b90:	cmp	r5, r4
   10b94:	bne	10b80 <ReadInt8Data.part.15+0x1498>
   10b98:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10b9c:	cmp	r5, #256	; 0x100
   10ba0:	ble	10dc0 <ReadInt8Data.part.15+0x16d8>
   10ba4:	ldr	r1, [sp, #4]
   10ba8:	sub	r8, r5, #256	; 0x100
   10bac:	add	r6, sp, #24
   10bb0:	sub	r8, r8, #1
   10bb4:	add	r4, sp, #2064	; 0x810
   10bb8:	add	r2, r1, #255	; 0xff
   10bbc:	sub	sl, r1, #1
   10bc0:	bic	r1, r8, #255	; 0xff
   10bc4:	add	r2, r2, r1
   10bc8:	str	r2, [sp, #12]
   10bcc:	mov	r2, #256	; 0x100
   10bd0:	mov	r1, r7
   10bd4:	mov	r0, r6
   10bd8:	sub	fp, r6, #8
   10bdc:	bl	1520 <fread@plt>
   10be0:	add	r9, r9, r0
   10be4:	mov	r3, fp
   10be8:	mov	r2, sl
   10bec:	str	r9, [sp, #8]
   10bf0:	ldr	r1, [r3, #8]!
   10bf4:	cmp	r4, r3
   10bf8:	strb	r1, [r2, #1]!
   10bfc:	bne	10bf0 <ReadInt8Data.part.15+0x1508>
   10c00:	ldr	r3, [sp, #12]
   10c04:	add	sl, sl, #256	; 0x100
   10c08:	cmp	r3, sl
   10c0c:	beq	10c9c <ReadInt8Data.part.15+0x15b4>
   10c10:	ldr	r3, [sp]
   10c14:	ldr	r3, [r3]
   10c18:	b	10bcc <ReadInt8Data.part.15+0x14e4>
   10c1c:	cmp	r5, #256	; 0x100
   10c20:	ble	10e4c <ReadInt8Data.part.15+0x1764>
   10c24:	ldr	r1, [sp, #4]
   10c28:	sub	r8, r5, #256	; 0x100
   10c2c:	add	r6, sp, #24
   10c30:	sub	r8, r8, #1
   10c34:	add	r4, sp, #2064	; 0x810
   10c38:	add	r2, r1, #255	; 0xff
   10c3c:	sub	sl, r1, #1
   10c40:	bic	r1, r8, #255	; 0xff
   10c44:	add	r2, r2, r1
   10c48:	str	r2, [sp, #12]
   10c4c:	mov	r2, #256	; 0x100
   10c50:	mov	r1, r7
   10c54:	mov	r0, r6
   10c58:	sub	fp, r6, #8
   10c5c:	bl	1520 <fread@plt>
   10c60:	add	r9, r9, r0
   10c64:	mov	r3, fp
   10c68:	mov	r2, sl
   10c6c:	str	r9, [sp, #8]
   10c70:	ldr	r1, [r3, #8]!
   10c74:	cmp	r4, r3
   10c78:	strb	r1, [r2, #1]!
   10c7c:	bne	10c70 <ReadInt8Data.part.15+0x1588>
   10c80:	ldr	r3, [sp, #12]
   10c84:	add	sl, sl, #256	; 0x100
   10c88:	cmp	r3, sl
   10c8c:	beq	10d64 <ReadInt8Data.part.15+0x167c>
   10c90:	ldr	r3, [sp]
   10c94:	ldr	r3, [r3]
   10c98:	b	10c4c <ReadInt8Data.part.15+0x1564>
   10c9c:	bic	r4, r8, #255	; 0xff
   10ca0:	add	r4, r4, #256	; 0x100
   10ca4:	cmp	r5, r4
   10ca8:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10cac:	ldr	r3, [sp]
   10cb0:	sub	r5, r5, r4
   10cb4:	mov	r0, r6
   10cb8:	mov	r2, r5
   10cbc:	mov	r1, r7
   10cc0:	ldr	r3, [r3]
   10cc4:	bl	1520 <fread@plt>
   10cc8:	add	r3, r9, r0
   10ccc:	cmp	r5, #0
   10cd0:	str	r3, [sp, #8]
   10cd4:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10cd8:	ldr	r3, [sp, #4]
   10cdc:	add	r4, r3, r4
   10ce0:	add	r5, r4, r5
   10ce4:	ldr	r3, [fp, #8]!
   10ce8:	strb	r3, [r4], #1
   10cec:	cmp	r4, r5
   10cf0:	bne	10ce4 <ReadInt8Data.part.15+0x15fc>
   10cf4:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10cf8:	bic	r4, sl, #255	; 0xff
   10cfc:	add	r4, r4, #256	; 0x100
   10d00:	cmp	r5, r4
   10d04:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10d08:	ldr	r3, [sp]
   10d0c:	sub	r5, r5, r4
   10d10:	mov	r0, r6
   10d14:	mov	r2, r5
   10d18:	mov	r1, r7
   10d1c:	ldr	r3, [r3]
   10d20:	bl	1520 <fread@plt>
   10d24:	ldr	r3, [sp, #12]
   10d28:	cmp	r5, #0
   10d2c:	add	r3, r3, r0
   10d30:	str	r3, [sp, #8]
   10d34:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10d38:	ldr	r3, [sp, #4]
   10d3c:	ldr	r6, [sp, #20]
   10d40:	add	r4, r3, r4
   10d44:	add	r5, r4, r5
   10d48:	mov	r0, r6
   10d4c:	add	r6, r6, #8
   10d50:	bl	17ec <Mat_int64Swap>
   10d54:	strb	r0, [r4], #1
   10d58:	cmp	r4, r5
   10d5c:	bne	10d48 <ReadInt8Data.part.15+0x1660>
   10d60:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10d64:	bic	r4, r8, #255	; 0xff
   10d68:	add	r4, r4, #256	; 0x100
   10d6c:	cmp	r5, r4
   10d70:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10d74:	ldr	r3, [sp]
   10d78:	sub	r5, r5, r4
   10d7c:	mov	r0, r6
   10d80:	mov	r2, r5
   10d84:	mov	r1, r7
   10d88:	ldr	r3, [r3]
   10d8c:	bl	1520 <fread@plt>
   10d90:	add	r3, r9, r0
   10d94:	cmp	r5, #0
   10d98:	str	r3, [sp, #8]
   10d9c:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10da0:	ldr	r3, [sp, #4]
   10da4:	add	r4, r3, r4
   10da8:	add	r5, r4, r5
   10dac:	ldr	r3, [fp, #8]!
   10db0:	strb	r3, [r4], #1
   10db4:	cmp	r5, r4
   10db8:	bne	10dac <ReadInt8Data.part.15+0x16c4>
   10dbc:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10dc0:	add	r4, sp, #24
   10dc4:	mov	r2, r5
   10dc8:	mov	r0, r4
   10dcc:	mov	r1, r7
   10dd0:	bl	1520 <fread@plt>
   10dd4:	cmp	r5, #0
   10dd8:	str	r0, [sp, #8]
   10ddc:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10de0:	ldr	r3, [sp, #4]
   10de4:	sub	r4, r4, #8
   10de8:	sub	r3, r3, #1
   10dec:	add	r5, r3, r5
   10df0:	ldr	r2, [r4, #8]!
   10df4:	strb	r2, [r3, #1]!
   10df8:	cmp	r5, r3
   10dfc:	bne	10df0 <ReadInt8Data.part.15+0x1708>
   10e00:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10e04:	add	r4, sp, #24
   10e08:	mov	r2, r5
   10e0c:	mov	r0, r4
   10e10:	mov	r1, r7
   10e14:	bl	1520 <fread@plt>
   10e18:	cmp	r5, #0
   10e1c:	str	r0, [sp, #8]
   10e20:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10e24:	ldr	r3, [sp, #4]
   10e28:	sub	r6, r3, #1
   10e2c:	add	r5, r6, r5
   10e30:	mov	r0, r4
   10e34:	add	r4, r4, #8
   10e38:	bl	1858 <Mat_uint64Swap>
   10e3c:	strb	r0, [r6, #1]!
   10e40:	cmp	r5, r6
   10e44:	bne	10e30 <ReadInt8Data.part.15+0x1748>
   10e48:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10e4c:	add	r4, sp, #24
   10e50:	mov	r2, r5
   10e54:	mov	r0, r4
   10e58:	mov	r1, r7
   10e5c:	bl	1520 <fread@plt>
   10e60:	cmp	r5, #0
   10e64:	str	r0, [sp, #8]
   10e68:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10e6c:	ldr	r3, [sp, #4]
   10e70:	sub	r4, r4, #8
   10e74:	sub	r3, r3, #1
   10e78:	add	r5, r3, r5
   10e7c:	ldr	r2, [r4, #8]!
   10e80:	strb	r2, [r3, #1]!
   10e84:	cmp	r5, r3
   10e88:	bne	10e7c <ReadInt8Data.part.15+0x1794>
   10e8c:	b	fda4 <ReadInt8Data.part.15+0x6bc>
   10e90:	add	r4, sp, #24
   10e94:	mov	r2, r5
   10e98:	mov	r0, r4
   10e9c:	mov	r1, r7
   10ea0:	bl	1520 <fread@plt>
   10ea4:	cmp	r5, #0
   10ea8:	str	r0, [sp, #8]
   10eac:	ble	fda4 <ReadInt8Data.part.15+0x6bc>
   10eb0:	ldr	r3, [sp, #4]
   10eb4:	sub	r6, r3, #1
   10eb8:	add	r5, r6, r5
   10ebc:	mov	r0, r4
   10ec0:	add	r4, r4, #8
   10ec4:	bl	17ec <Mat_int64Swap>
   10ec8:	strb	r0, [r6, #1]!
   10ecc:	cmp	r6, r5
   10ed0:	bne	10ebc <ReadInt8Data.part.15+0x17d4>
   10ed4:	b	fda4 <ReadInt8Data.part.15+0x6bc>

00010ed8 <ReadUInt8Data.part.17>:
   10ed8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10edc:	mov	r4, r2
   10ee0:	mov	r5, r3
   10ee4:	strd	r6, [sp, #8]
   10ee8:	strd	r8, [sp, #16]
   10eec:	strd	sl, [sp, #24]
   10ef0:	str	lr, [sp, #32]
   10ef4:	sub	sp, sp, #2064	; 0x810
   10ef8:	sub	sp, sp, #12
   10efc:	strd	r0, [sp]
   10f00:	mov	r0, r2
   10f04:	bl	1598 <Mat_SizeOf@plt>
   10f08:	sub	r3, r4, #1
   10f0c:	mov	r7, r0
   10f10:	cmp	r3, #8
   10f14:	addls	pc, pc, r3, lsl #2
   10f18:	b	11468 <ReadUInt8Data.part.17+0x590>
   10f1c:	b	10ff4 <ReadUInt8Data.part.17+0x11c>
   10f20:	b	11128 <ReadUInt8Data.part.17+0x250>
   10f24:	b	11260 <ReadUInt8Data.part.17+0x388>
   10f28:	b	11080 <ReadUInt8Data.part.17+0x1a8>
   10f2c:	b	11308 <ReadUInt8Data.part.17+0x430>
   10f30:	b	111b4 <ReadUInt8Data.part.17+0x2dc>
   10f34:	b	113b4 <ReadUInt8Data.part.17+0x4dc>
   10f38:	b	11468 <ReadUInt8Data.part.17+0x590>
   10f3c:	b	10f40 <ReadUInt8Data.part.17+0x68>
   10f40:	ldr	r3, [sp]
   10f44:	ldr	r9, [r3, #20]
   10f48:	ldr	r3, [r3]
   10f4c:	cmp	r9, #0
   10f50:	beq	1184c <ReadUInt8Data.part.17+0x974>
   10f54:	cmp	r5, #256	; 0x100
   10f58:	ble	11b9c <ReadUInt8Data.part.17+0xcc4>
   10f5c:	ldr	r1, [sp, #4]
   10f60:	sub	r0, r5, #256	; 0x100
   10f64:	add	r4, sp, #2064	; 0x810
   10f68:	sub	r0, r0, #1
   10f6c:	mov	r9, #0
   10f70:	add	r6, sp, #24
   10f74:	add	r4, r4, #8
   10f78:	str	r0, [sp, #16]
   10f7c:	str	r5, [sp, #20]
   10f80:	add	r2, r1, #255	; 0xff
   10f84:	sub	r8, r1, #1
   10f88:	bic	r1, r0, #255	; 0xff
   10f8c:	add	r2, r2, r1
   10f90:	str	r2, [sp, #12]
   10f94:	mov	r2, #256	; 0x100
   10f98:	mov	r1, r7
   10f9c:	mov	r0, r6
   10fa0:	mov	fp, r6
   10fa4:	bl	1520 <fread@plt>
   10fa8:	add	r9, r9, r0
   10fac:	mov	sl, r8
   10fb0:	mov	r5, r6
   10fb4:	str	r9, [sp, #8]
   10fb8:	mov	r0, r5
   10fbc:	add	r5, r5, #8
   10fc0:	bl	19a4 <Mat_doubleSwap>
   10fc4:	vcvt.u32.f64	s15, d0
   10fc8:	cmp	r5, r4
   10fcc:	vmov	r3, s15
   10fd0:	strb	r3, [sl, #1]!
   10fd4:	bne	10fb8 <ReadUInt8Data.part.17+0xe0>
   10fd8:	ldr	r3, [sp, #12]
   10fdc:	add	r8, r8, #256	; 0x100
   10fe0:	cmp	r8, r3
   10fe4:	beq	11f5c <ReadUInt8Data.part.17+0x1084>
   10fe8:	ldr	r3, [sp]
   10fec:	ldr	r3, [r3]
   10ff0:	b	10f94 <ReadUInt8Data.part.17+0xbc>
   10ff4:	ldr	r1, [sp]
   10ff8:	cmp	r5, #256	; 0x100
   10ffc:	ldr	r3, [r1]
   11000:	ble	11df4 <ReadUInt8Data.part.17+0xf1c>
   11004:	sub	r2, r5, #256	; 0x100
   11008:	add	r6, sp, #24
   1100c:	ldr	r0, [sp, #4]
   11010:	sub	r2, r2, #1
   11014:	mov	sl, r5
   11018:	add	r4, r6, #255	; 0xff
   1101c:	mov	r9, #0
   11020:	str	r2, [sp, #8]
   11024:	bic	r2, r2, #255	; 0xff
   11028:	mov	r5, r1
   1102c:	add	fp, r0, #255	; 0xff
   11030:	sub	r8, r0, #1
   11034:	add	fp, fp, r2
   11038:	mov	r2, #256	; 0x100
   1103c:	mov	r1, r7
   11040:	mov	r0, r6
   11044:	bl	1520 <fread@plt>
   11048:	add	r9, r9, r0
   1104c:	sub	ip, r6, #1
   11050:	mov	r0, r9
   11054:	mov	r3, ip
   11058:	mov	r2, r8
   1105c:	ldrb	r1, [r3, #1]!
   11060:	cmp	r4, r3
   11064:	strb	r1, [r2, #1]!
   11068:	bne	1105c <ReadUInt8Data.part.17+0x184>
   1106c:	add	r8, r8, #256	; 0x100
   11070:	cmp	fp, r8
   11074:	beq	115bc <ReadUInt8Data.part.17+0x6e4>
   11078:	ldr	r3, [r5]
   1107c:	b	11038 <ReadUInt8Data.part.17+0x160>
   11080:	ldr	r3, [sp]
   11084:	ldr	r9, [r3, #20]
   11088:	ldr	r3, [r3]
   1108c:	cmp	r9, #0
   11090:	beq	11748 <ReadUInt8Data.part.17+0x870>
   11094:	cmp	r5, #256	; 0x100
   11098:	ble	11b54 <ReadUInt8Data.part.17+0xc7c>
   1109c:	ldr	r1, [sp, #4]
   110a0:	sub	r0, r5, #256	; 0x100
   110a4:	mov	r9, #0
   110a8:	sub	r0, r0, #1
   110ac:	add	r6, sp, #24
   110b0:	add	r4, sp, #536	; 0x218
   110b4:	str	r0, [sp, #16]
   110b8:	str	r5, [sp, #20]
   110bc:	add	r2, r1, #255	; 0xff
   110c0:	sub	r8, r1, #1
   110c4:	bic	r1, r0, #255	; 0xff
   110c8:	add	r2, r2, r1
   110cc:	str	r2, [sp, #12]
   110d0:	mov	r2, #256	; 0x100
   110d4:	mov	r1, r7
   110d8:	mov	r0, r6
   110dc:	mov	fp, r6
   110e0:	bl	1520 <fread@plt>
   110e4:	add	r9, r9, r0
   110e8:	mov	sl, r8
   110ec:	mov	r5, r6
   110f0:	str	r9, [sp, #8]
   110f4:	mov	r0, r5
   110f8:	add	r5, r5, #2
   110fc:	bl	1950 <Mat_uint16Swap>
   11100:	cmp	r5, r4
   11104:	strb	r0, [sl, #1]!
   11108:	bne	110f4 <ReadUInt8Data.part.17+0x21c>
   1110c:	ldr	r3, [sp, #12]
   11110:	add	r8, r8, #256	; 0x100
   11114:	cmp	r8, r3
   11118:	beq	11d84 <ReadUInt8Data.part.17+0xeac>
   1111c:	ldr	r3, [sp]
   11120:	ldr	r3, [r3]
   11124:	b	110d0 <ReadUInt8Data.part.17+0x1f8>
   11128:	ldr	r1, [sp]
   1112c:	cmp	r5, #256	; 0x100
   11130:	ldr	r3, [r1]
   11134:	ble	11ea4 <ReadUInt8Data.part.17+0xfcc>
   11138:	sub	r2, r5, #256	; 0x100
   1113c:	add	r6, sp, #24
   11140:	ldr	r0, [sp, #4]
   11144:	sub	r2, r2, #1
   11148:	mov	sl, r5
   1114c:	add	r4, r6, #255	; 0xff
   11150:	mov	r9, #0
   11154:	str	r2, [sp, #8]
   11158:	bic	r2, r2, #255	; 0xff
   1115c:	mov	r5, r1
   11160:	add	fp, r0, #255	; 0xff
   11164:	sub	r8, r0, #1
   11168:	add	fp, fp, r2
   1116c:	mov	r2, #256	; 0x100
   11170:	mov	r1, r7
   11174:	mov	r0, r6
   11178:	bl	1520 <fread@plt>
   1117c:	add	r9, r9, r0
   11180:	sub	ip, r6, #1
   11184:	mov	r0, r9
   11188:	mov	r3, ip
   1118c:	mov	r2, r8
   11190:	ldrb	r1, [r3, #1]!
   11194:	cmp	r4, r3
   11198:	strb	r1, [r2, #1]!
   1119c:	bne	11190 <ReadUInt8Data.part.17+0x2b8>
   111a0:	add	r8, r8, #256	; 0x100
   111a4:	cmp	fp, r8
   111a8:	beq	115e0 <ReadUInt8Data.part.17+0x708>
   111ac:	ldr	r3, [r5]
   111b0:	b	1116c <ReadUInt8Data.part.17+0x294>
   111b4:	ldr	r3, [sp]
   111b8:	ldr	r9, [r3, #20]
   111bc:	ldr	r3, [r3]
   111c0:	cmp	r9, #0
   111c4:	beq	117cc <ReadUInt8Data.part.17+0x8f4>
   111c8:	cmp	r5, #256	; 0x100
   111cc:	ble	11bec <ReadUInt8Data.part.17+0xd14>
   111d0:	ldr	r1, [sp, #4]
   111d4:	sub	r0, r5, #256	; 0x100
   111d8:	add	r4, sp, #1040	; 0x410
   111dc:	sub	r0, r0, #1
   111e0:	mov	r9, #0
   111e4:	add	r6, sp, #24
   111e8:	add	r4, r4, #8
   111ec:	str	r0, [sp, #16]
   111f0:	str	r5, [sp, #20]
   111f4:	add	r2, r1, #255	; 0xff
   111f8:	sub	r8, r1, #1
   111fc:	bic	r1, r0, #255	; 0xff
   11200:	add	r2, r1, r2
   11204:	str	r2, [sp, #12]
   11208:	mov	r2, #256	; 0x100
   1120c:	mov	r1, r7
   11210:	mov	r0, r6
   11214:	mov	fp, r6
   11218:	bl	1520 <fread@plt>
   1121c:	add	r9, r9, r0
   11220:	mov	sl, r8
   11224:	mov	r5, r6
   11228:	str	r9, [sp, #8]
   1122c:	mov	r0, r5
   11230:	add	r5, r5, #4
   11234:	bl	18f8 <Mat_uint32Swap>
   11238:	cmp	r5, r4
   1123c:	strb	r0, [sl, #1]!
   11240:	bne	1122c <ReadUInt8Data.part.17+0x354>
   11244:	ldr	r3, [sp, #12]
   11248:	add	r8, r8, #256	; 0x100
   1124c:	cmp	r8, r3
   11250:	beq	11d14 <ReadUInt8Data.part.17+0xe3c>
   11254:	ldr	r3, [sp]
   11258:	ldr	r3, [r3]
   1125c:	b	11208 <ReadUInt8Data.part.17+0x330>
   11260:	ldr	r3, [sp]
   11264:	ldr	r9, [r3, #20]
   11268:	ldr	r3, [r3]
   1126c:	cmp	r9, #0
   11270:	beq	11644 <ReadUInt8Data.part.17+0x76c>
   11274:	cmp	r5, #256	; 0x100
   11278:	ble	11ccc <ReadUInt8Data.part.17+0xdf4>
   1127c:	ldr	r1, [sp, #4]
   11280:	sub	r0, r5, #256	; 0x100
   11284:	mov	r9, #0
   11288:	sub	r0, r0, #1
   1128c:	add	r6, sp, #24
   11290:	add	r4, sp, #536	; 0x218
   11294:	str	r0, [sp, #16]
   11298:	str	r5, [sp, #20]
   1129c:	add	r2, r1, #255	; 0xff
   112a0:	sub	r8, r1, #1
   112a4:	bic	r1, r0, #255	; 0xff
   112a8:	add	r2, r2, r1
   112ac:	str	r2, [sp, #12]
   112b0:	mov	r2, #256	; 0x100
   112b4:	mov	r1, r7
   112b8:	mov	r0, r6
   112bc:	mov	fp, r6
   112c0:	bl	1520 <fread@plt>
   112c4:	add	r9, r9, r0
   112c8:	mov	sl, r8
   112cc:	mov	r5, r6
   112d0:	str	r9, [sp, #8]
   112d4:	mov	r0, r5
   112d8:	add	r5, r5, #2
   112dc:	bl	192c <Mat_int16Swap>
   112e0:	cmp	r4, r5
   112e4:	strb	r0, [sl, #1]!
   112e8:	bne	112d4 <ReadUInt8Data.part.17+0x3fc>
   112ec:	ldr	r3, [sp, #12]
   112f0:	add	r8, r8, #256	; 0x100
   112f4:	cmp	r3, r8
   112f8:	beq	1231c <ReadUInt8Data.part.17+0x1444>
   112fc:	ldr	r3, [sp]
   11300:	ldr	r3, [r3]
   11304:	b	112b0 <ReadUInt8Data.part.17+0x3d8>
   11308:	ldr	r3, [sp]
   1130c:	ldr	r9, [r3, #20]
   11310:	ldr	r3, [r3]
   11314:	cmp	r9, #0
   11318:	beq	116c8 <ReadUInt8Data.part.17+0x7f0>
   1131c:	cmp	r5, #256	; 0x100
   11320:	ble	11c84 <ReadUInt8Data.part.17+0xdac>
   11324:	ldr	r1, [sp, #4]
   11328:	sub	r0, r5, #256	; 0x100
   1132c:	add	r4, sp, #1040	; 0x410
   11330:	sub	r0, r0, #1
   11334:	mov	r9, #0
   11338:	add	r6, sp, #24
   1133c:	add	r4, r4, #8
   11340:	str	r0, [sp, #16]
   11344:	str	r5, [sp, #20]
   11348:	add	r2, r1, #255	; 0xff
   1134c:	sub	r8, r1, #1
   11350:	bic	r1, r0, #255	; 0xff
   11354:	add	r2, r2, r1
   11358:	str	r2, [sp, #12]
   1135c:	mov	r2, #256	; 0x100
   11360:	mov	r1, r7
   11364:	mov	r0, r6
   11368:	mov	fp, r6
   1136c:	bl	1520 <fread@plt>
   11370:	add	r9, r9, r0
   11374:	mov	sl, r8
   11378:	mov	r5, r6
   1137c:	str	r9, [sp, #8]
   11380:	mov	r0, r5
   11384:	add	r5, r5, #4
   11388:	bl	18c4 <Mat_int32Swap>
   1138c:	cmp	r5, r4
   11390:	strb	r0, [sl, #1]!
   11394:	bne	11380 <ReadUInt8Data.part.17+0x4a8>
   11398:	ldr	r3, [sp, #12]
   1139c:	add	r8, r8, #256	; 0x100
   113a0:	cmp	r8, r3
   113a4:	beq	11e34 <ReadUInt8Data.part.17+0xf5c>
   113a8:	ldr	r3, [sp]
   113ac:	ldr	r3, [r3]
   113b0:	b	1135c <ReadUInt8Data.part.17+0x484>
   113b4:	ldr	r3, [sp]
   113b8:	ldr	r9, [r3, #20]
   113bc:	ldr	r3, [r3]
   113c0:	cmp	r9, #0
   113c4:	beq	118d8 <ReadUInt8Data.part.17+0xa00>
   113c8:	cmp	r5, #256	; 0x100
   113cc:	ble	11c34 <ReadUInt8Data.part.17+0xd5c>
   113d0:	ldr	r1, [sp, #4]
   113d4:	sub	r0, r5, #256	; 0x100
   113d8:	add	r4, sp, #1040	; 0x410
   113dc:	sub	r0, r0, #1
   113e0:	mov	r9, #0
   113e4:	add	r6, sp, #24
   113e8:	add	r4, r4, #8
   113ec:	str	r0, [sp, #16]
   113f0:	str	r5, [sp, #20]
   113f4:	add	r2, r1, #255	; 0xff
   113f8:	sub	r8, r1, #1
   113fc:	bic	r1, r0, #255	; 0xff
   11400:	add	r2, r2, r1
   11404:	str	r2, [sp, #12]
   11408:	mov	r2, #256	; 0x100
   1140c:	mov	r1, r7
   11410:	mov	r0, r6
   11414:	mov	fp, r6
   11418:	bl	1520 <fread@plt>
   1141c:	add	r9, r9, r0
   11420:	mov	sl, r8
   11424:	mov	r5, r6
   11428:	str	r9, [sp, #8]
   1142c:	mov	r0, r5
   11430:	add	r5, r5, #4
   11434:	bl	1974 <Mat_floatSwap>
   11438:	vcvt.u32.f32	s15, s0
   1143c:	cmp	r5, r4
   11440:	vmov	r3, s15
   11444:	strb	r3, [sl, #1]!
   11448:	bne	1142c <ReadUInt8Data.part.17+0x554>
   1144c:	ldr	r3, [sp, #12]
   11450:	add	r8, r8, #256	; 0x100
   11454:	cmp	r8, r3
   11458:	beq	11ee4 <ReadUInt8Data.part.17+0x100c>
   1145c:	ldr	r3, [sp]
   11460:	ldr	r3, [r3]
   11464:	b	11408 <ReadUInt8Data.part.17+0x530>
   11468:	cmp	r4, #12
   1146c:	beq	11fd4 <ReadUInt8Data.part.17+0x10fc>
   11470:	cmp	r4, #13
   11474:	movne	r0, #0
   11478:	bne	1159c <ReadUInt8Data.part.17+0x6c4>
   1147c:	ldr	r3, [sp]
   11480:	ldr	r9, [r3, #20]
   11484:	ldr	r3, [r3]
   11488:	cmp	r9, #0
   1148c:	beq	1238c <ReadUInt8Data.part.17+0x14b4>
   11490:	cmp	r5, #256	; 0x100
   11494:	ble	125f4 <ReadUInt8Data.part.17+0x171c>
   11498:	ldr	r1, [sp, #4]
   1149c:	sub	sl, r5, #256	; 0x100
   114a0:	add	r4, sp, #2064	; 0x810
   114a4:	sub	sl, sl, #1
   114a8:	mov	r0, #0
   114ac:	add	r6, sp, #24
   114b0:	add	r4, r4, #8
   114b4:	str	r0, [sp, #12]
   114b8:	add	r2, r1, #255	; 0xff
   114bc:	sub	r9, r1, #1
   114c0:	bic	r1, sl, #255	; 0xff
   114c4:	add	r2, r1, r2
   114c8:	str	r2, [sp, #16]
   114cc:	mov	r2, #256	; 0x100
   114d0:	mov	r1, r7
   114d4:	mov	r0, r6
   114d8:	mov	fp, r9
   114dc:	bl	1520 <fread@plt>
   114e0:	ldr	r3, [sp, #12]
   114e4:	mov	r8, r6
   114e8:	str	r6, [sp, #20]
   114ec:	add	r3, r3, r0
   114f0:	str	r3, [sp, #8]
   114f4:	str	r3, [sp, #12]
   114f8:	mov	r0, r8
   114fc:	add	r8, r8, #8
   11500:	bl	1858 <Mat_uint64Swap>
   11504:	cmp	r4, r8
   11508:	strb	r0, [fp, #1]!
   1150c:	bne	114f8 <ReadUInt8Data.part.17+0x620>
   11510:	ldr	r3, [sp, #16]
   11514:	add	r9, r9, #256	; 0x100
   11518:	cmp	r3, r9
   1151c:	beq	1152c <ReadUInt8Data.part.17+0x654>
   11520:	ldr	r3, [sp]
   11524:	ldr	r3, [r3]
   11528:	b	114cc <ReadUInt8Data.part.17+0x5f4>
   1152c:	bic	r4, sl, #255	; 0xff
   11530:	add	r4, r4, #256	; 0x100
   11534:	cmp	r5, r4
   11538:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1153c:	ldr	r3, [sp]
   11540:	sub	r5, r5, r4
   11544:	mov	r0, r6
   11548:	mov	r2, r5
   1154c:	mov	r1, r7
   11550:	ldr	r3, [r3]
   11554:	bl	1520 <fread@plt>
   11558:	ldr	r3, [sp, #12]
   1155c:	cmp	r5, #0
   11560:	add	r3, r3, r0
   11564:	str	r3, [sp, #8]
   11568:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1156c:	ldr	r3, [sp, #4]
   11570:	ldr	r6, [sp, #20]
   11574:	add	r4, r3, r4
   11578:	add	r5, r4, r5
   1157c:	mov	r0, r6
   11580:	add	r6, r6, #8
   11584:	bl	1858 <Mat_uint64Swap>
   11588:	strb	r0, [r4], #1
   1158c:	cmp	r5, r4
   11590:	bne	1157c <ReadUInt8Data.part.17+0x6a4>
   11594:	ldr	r3, [sp, #8]
   11598:	mul	r0, r3, r7
   1159c:	add	sp, sp, #2064	; 0x810
   115a0:	add	sp, sp, #12
   115a4:	ldrd	r4, [sp]
   115a8:	ldrd	r6, [sp, #8]
   115ac:	ldrd	r8, [sp, #16]
   115b0:	ldrd	sl, [sp, #24]
   115b4:	add	sp, sp, #32
   115b8:	pop	{pc}		; (ldr pc, [sp], #4)
   115bc:	ldr	r3, [sp, #8]
   115c0:	mov	r5, sl
   115c4:	mov	sl, ip
   115c8:	bic	r4, r3, #255	; 0xff
   115cc:	add	r4, r4, #256	; 0x100
   115d0:	cmp	r5, r4
   115d4:	bgt	11964 <ReadUInt8Data.part.17+0xa8c>
   115d8:	mul	r0, r0, r7
   115dc:	b	1159c <ReadUInt8Data.part.17+0x6c4>
   115e0:	ldr	r3, [sp, #8]
   115e4:	mov	r5, sl
   115e8:	mov	sl, ip
   115ec:	bic	r4, r3, #255	; 0xff
   115f0:	add	r4, r4, #256	; 0x100
   115f4:	cmp	r5, r4
   115f8:	ble	115d8 <ReadUInt8Data.part.17+0x700>
   115fc:	ldr	r3, [sp]
   11600:	sub	r5, r5, r4
   11604:	mov	r0, r6
   11608:	mov	r2, r5
   1160c:	mov	r1, r7
   11610:	ldr	r3, [r3]
   11614:	bl	1520 <fread@plt>
   11618:	cmp	r5, #0
   1161c:	add	r0, r9, r0
   11620:	ble	115d8 <ReadUInt8Data.part.17+0x700>
   11624:	ldr	r3, [sp, #4]
   11628:	add	r4, r3, r4
   1162c:	add	r5, r4, r5
   11630:	ldrb	r3, [sl, #1]!
   11634:	strb	r3, [r4], #1
   11638:	cmp	r5, r4
   1163c:	bne	11630 <ReadUInt8Data.part.17+0x758>
   11640:	b	115d8 <ReadUInt8Data.part.17+0x700>
   11644:	cmp	r5, #256	; 0x100
   11648:	ble	11a88 <ReadUInt8Data.part.17+0xbb0>
   1164c:	ldr	r0, [sp, #4]
   11650:	sub	r2, r5, #256	; 0x100
   11654:	mov	fp, r5
   11658:	sub	r1, r2, #1
   1165c:	add	r6, sp, #24
   11660:	ldr	r5, [sp]
   11664:	add	r4, r6, #508	; 0x1fc
   11668:	str	r1, [sp, #12]
   1166c:	bic	r1, r1, #255	; 0xff
   11670:	add	r4, r4, #2
   11674:	add	r2, r0, #255	; 0xff
   11678:	sub	r8, r0, #1
   1167c:	add	sl, r2, r1
   11680:	mov	r2, #256	; 0x100
   11684:	mov	r1, r7
   11688:	mov	r0, r6
   1168c:	bl	1520 <fread@plt>
   11690:	add	r9, r9, r0
   11694:	sub	r0, r6, #2
   11698:	mov	ip, r9
   1169c:	mov	r3, r0
   116a0:	mov	r2, r8
   116a4:	ldrh	r1, [r3, #2]!
   116a8:	cmp	r4, r3
   116ac:	strb	r1, [r2, #1]!
   116b0:	bne	116a4 <ReadUInt8Data.part.17+0x7cc>
   116b4:	add	r8, r8, #256	; 0x100
   116b8:	cmp	sl, r8
   116bc:	beq	1215c <ReadUInt8Data.part.17+0x1284>
   116c0:	ldr	r3, [r5]
   116c4:	b	11680 <ReadUInt8Data.part.17+0x7a8>
   116c8:	cmp	r5, #256	; 0x100
   116cc:	ble	11b10 <ReadUInt8Data.part.17+0xc38>
   116d0:	ldr	r0, [sp, #4]
   116d4:	sub	r1, r5, #256	; 0x100
   116d8:	mov	fp, r5
   116dc:	sub	r1, r1, #1
   116e0:	add	r6, sp, #24
   116e4:	ldr	r5, [sp]
   116e8:	add	r4, r6, #1020	; 0x3fc
   116ec:	str	r1, [sp, #12]
   116f0:	bic	r1, r1, #255	; 0xff
   116f4:	add	r2, r0, #255	; 0xff
   116f8:	sub	r8, r0, #1
   116fc:	add	sl, r1, r2
   11700:	mov	r2, #256	; 0x100
   11704:	mov	r1, r7
   11708:	mov	r0, r6
   1170c:	bl	1520 <fread@plt>
   11710:	add	r9, r9, r0
   11714:	sub	r0, r6, #4
   11718:	mov	ip, r9
   1171c:	mov	r3, r0
   11720:	mov	r2, r8
   11724:	ldr	r1, [r3, #4]!
   11728:	cmp	r3, r4
   1172c:	strb	r1, [r2, #1]!
   11730:	bne	11724 <ReadUInt8Data.part.17+0x84c>
   11734:	add	r8, r8, #256	; 0x100
   11738:	cmp	r8, sl
   1173c:	beq	12084 <ReadUInt8Data.part.17+0x11ac>
   11740:	ldr	r3, [r5]
   11744:	b	11700 <ReadUInt8Data.part.17+0x828>
   11748:	cmp	r5, #256	; 0x100
   1174c:	ble	11acc <ReadUInt8Data.part.17+0xbf4>
   11750:	ldr	r0, [sp, #4]
   11754:	sub	r2, r5, #256	; 0x100
   11758:	mov	fp, r5
   1175c:	sub	r1, r2, #1
   11760:	add	r6, sp, #24
   11764:	ldr	r5, [sp]
   11768:	add	r4, r6, #508	; 0x1fc
   1176c:	str	r1, [sp, #12]
   11770:	bic	r1, r1, #255	; 0xff
   11774:	add	r4, r4, #2
   11778:	add	r2, r0, #255	; 0xff
   1177c:	sub	r8, r0, #1
   11780:	add	sl, r2, r1
   11784:	mov	r2, #256	; 0x100
   11788:	mov	r1, r7
   1178c:	mov	r0, r6
   11790:	bl	1520 <fread@plt>
   11794:	add	r9, r9, r0
   11798:	sub	r0, r6, #2
   1179c:	mov	ip, r9
   117a0:	mov	r3, r0
   117a4:	mov	r2, r8
   117a8:	ldrh	r1, [r3, #2]!
   117ac:	cmp	r3, r4
   117b0:	strb	r1, [r2, #1]!
   117b4:	bne	117a8 <ReadUInt8Data.part.17+0x8d0>
   117b8:	add	r8, r8, #256	; 0x100
   117bc:	cmp	sl, r8
   117c0:	beq	122b0 <ReadUInt8Data.part.17+0x13d8>
   117c4:	ldr	r3, [r5]
   117c8:	b	11784 <ReadUInt8Data.part.17+0x8ac>
   117cc:	cmp	r5, #256	; 0x100
   117d0:	ble	11a44 <ReadUInt8Data.part.17+0xb6c>
   117d4:	ldr	r0, [sp, #4]
   117d8:	sub	r1, r5, #256	; 0x100
   117dc:	mov	fp, r5
   117e0:	sub	r1, r1, #1
   117e4:	add	r6, sp, #24
   117e8:	ldr	r5, [sp]
   117ec:	add	r4, r6, #1020	; 0x3fc
   117f0:	str	r1, [sp, #12]
   117f4:	bic	r1, r1, #255	; 0xff
   117f8:	add	r2, r0, #255	; 0xff
   117fc:	sub	r8, r0, #1
   11800:	add	sl, r2, r1
   11804:	mov	r2, #256	; 0x100
   11808:	mov	r1, r7
   1180c:	mov	r0, r6
   11810:	bl	1520 <fread@plt>
   11814:	add	r9, r9, r0
   11818:	sub	r0, r6, #4
   1181c:	mov	ip, r9
   11820:	mov	r3, r0
   11824:	mov	r2, r8
   11828:	ldr	r1, [r3, #4]!
   1182c:	cmp	r3, r4
   11830:	strb	r1, [r2, #1]!
   11834:	bne	11828 <ReadUInt8Data.part.17+0x950>
   11838:	add	r8, r8, #256	; 0x100
   1183c:	cmp	r8, sl
   11840:	beq	120f0 <ReadUInt8Data.part.17+0x1218>
   11844:	ldr	r3, [r5]
   11848:	b	11804 <ReadUInt8Data.part.17+0x92c>
   1184c:	cmp	r5, #256	; 0x100
   11850:	ble	119f8 <ReadUInt8Data.part.17+0xb20>
   11854:	ldr	r1, [sp, #4]
   11858:	sub	r0, r5, #256	; 0x100
   1185c:	mov	sl, r5
   11860:	sub	r0, r0, #1
   11864:	add	r4, sp, #2064	; 0x810
   11868:	ldr	r5, [sp]
   1186c:	add	r6, sp, #24
   11870:	add	r4, r4, #8
   11874:	str	r0, [sp, #12]
   11878:	add	r2, r1, #255	; 0xff
   1187c:	sub	r8, r1, #1
   11880:	bic	r1, r0, #255	; 0xff
   11884:	add	fp, r2, r1
   11888:	mov	r2, #256	; 0x100
   1188c:	mov	r1, r7
   11890:	mov	r0, r6
   11894:	bl	1520 <fread@plt>
   11898:	add	r9, r9, r0
   1189c:	mov	ip, r6
   118a0:	mov	r0, r9
   118a4:	mov	r1, r8
   118a8:	mov	r2, r6
   118ac:	vldmia	r2!, {d7}
   118b0:	vcvt.u32.f64	s15, d7
   118b4:	cmp	r2, r4
   118b8:	vmov	r3, s15
   118bc:	strb	r3, [r1, #1]!
   118c0:	bne	118ac <ReadUInt8Data.part.17+0x9d4>
   118c4:	add	r8, r8, #256	; 0x100
   118c8:	cmp	r8, fp
   118cc:	beq	1223c <ReadUInt8Data.part.17+0x1364>
   118d0:	ldr	r3, [r5]
   118d4:	b	11888 <ReadUInt8Data.part.17+0x9b0>
   118d8:	cmp	r5, #256	; 0x100
   118dc:	ble	119ac <ReadUInt8Data.part.17+0xad4>
   118e0:	ldr	r1, [sp, #4]
   118e4:	sub	r0, r5, #256	; 0x100
   118e8:	mov	sl, r5
   118ec:	sub	r0, r0, #1
   118f0:	add	r4, sp, #1040	; 0x410
   118f4:	ldr	r5, [sp]
   118f8:	add	r6, sp, #24
   118fc:	add	r4, r4, #8
   11900:	str	r0, [sp, #12]
   11904:	add	r2, r1, #255	; 0xff
   11908:	sub	r8, r1, #1
   1190c:	bic	r1, r0, #255	; 0xff
   11910:	add	fp, r2, r1
   11914:	mov	r2, #256	; 0x100
   11918:	mov	r1, r7
   1191c:	mov	r0, r6
   11920:	bl	1520 <fread@plt>
   11924:	add	r9, r9, r0
   11928:	mov	ip, r6
   1192c:	mov	r0, r9
   11930:	mov	r1, r8
   11934:	mov	r2, r6
   11938:	vldmia	r2!, {s15}
   1193c:	vcvt.u32.f32	s15, s15
   11940:	cmp	r2, r4
   11944:	vmov	r3, s15
   11948:	strb	r3, [r1, #1]!
   1194c:	bne	11938 <ReadUInt8Data.part.17+0xa60>
   11950:	add	r8, r8, #256	; 0x100
   11954:	cmp	r8, fp
   11958:	beq	121c8 <ReadUInt8Data.part.17+0x12f0>
   1195c:	ldr	r3, [r5]
   11960:	b	11914 <ReadUInt8Data.part.17+0xa3c>
   11964:	ldr	r3, [sp]
   11968:	sub	r5, r5, r4
   1196c:	mov	r0, r6
   11970:	mov	r2, r5
   11974:	mov	r1, r7
   11978:	ldr	r3, [r3]
   1197c:	bl	1520 <fread@plt>
   11980:	cmp	r5, #0
   11984:	add	r0, r9, r0
   11988:	ble	115d8 <ReadUInt8Data.part.17+0x700>
   1198c:	ldr	r3, [sp, #4]
   11990:	add	r4, r3, r4
   11994:	add	r5, r4, r5
   11998:	ldrb	r3, [sl, #1]!
   1199c:	strb	r3, [r4], #1
   119a0:	cmp	r5, r4
   119a4:	bne	11998 <ReadUInt8Data.part.17+0xac0>
   119a8:	b	115d8 <ReadUInt8Data.part.17+0x700>
   119ac:	add	r4, sp, #24
   119b0:	mov	r2, r5
   119b4:	mov	r0, r4
   119b8:	mov	r1, r7
   119bc:	bl	1520 <fread@plt>
   119c0:	cmp	r5, #0
   119c4:	str	r0, [sp, #8]
   119c8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   119cc:	ldr	r3, [sp, #4]
   119d0:	mov	r2, r4
   119d4:	sub	r3, r3, #1
   119d8:	add	r5, r3, r5
   119dc:	vldmia	r2!, {s15}
   119e0:	vcvt.u32.f32	s15, s15
   119e4:	vmov	r1, s15
   119e8:	strb	r1, [r3, #1]!
   119ec:	cmp	r3, r5
   119f0:	bne	119dc <ReadUInt8Data.part.17+0xb04>
   119f4:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   119f8:	add	r4, sp, #24
   119fc:	mov	r2, r5
   11a00:	mov	r0, r4
   11a04:	mov	r1, r7
   11a08:	bl	1520 <fread@plt>
   11a0c:	cmp	r5, #0
   11a10:	str	r0, [sp, #8]
   11a14:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11a18:	ldr	r3, [sp, #4]
   11a1c:	mov	r2, r4
   11a20:	sub	r3, r3, #1
   11a24:	add	r5, r3, r5
   11a28:	vldmia	r2!, {d7}
   11a2c:	vcvt.u32.f64	s15, d7
   11a30:	vmov	r1, s15
   11a34:	strb	r1, [r3, #1]!
   11a38:	cmp	r3, r5
   11a3c:	bne	11a28 <ReadUInt8Data.part.17+0xb50>
   11a40:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11a44:	add	r4, sp, #24
   11a48:	mov	r2, r5
   11a4c:	mov	r0, r4
   11a50:	mov	r1, r7
   11a54:	bl	1520 <fread@plt>
   11a58:	cmp	r5, #0
   11a5c:	str	r0, [sp, #8]
   11a60:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11a64:	ldr	r3, [sp, #4]
   11a68:	sub	r2, r4, #4
   11a6c:	sub	r3, r3, #1
   11a70:	add	r5, r3, r5
   11a74:	ldr	r1, [r2, #4]!
   11a78:	strb	r1, [r3, #1]!
   11a7c:	cmp	r3, r5
   11a80:	bne	11a74 <ReadUInt8Data.part.17+0xb9c>
   11a84:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11a88:	add	r4, sp, #24
   11a8c:	mov	r2, r5
   11a90:	mov	r0, r4
   11a94:	mov	r1, r7
   11a98:	bl	1520 <fread@plt>
   11a9c:	cmp	r5, #0
   11aa0:	str	r0, [sp, #8]
   11aa4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11aa8:	ldr	r3, [sp, #4]
   11aac:	sub	r2, r4, #2
   11ab0:	sub	r3, r3, #1
   11ab4:	add	r5, r3, r5
   11ab8:	ldrh	r1, [r2, #2]!
   11abc:	strb	r1, [r3, #1]!
   11ac0:	cmp	r5, r3
   11ac4:	bne	11ab8 <ReadUInt8Data.part.17+0xbe0>
   11ac8:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11acc:	add	r4, sp, #24
   11ad0:	mov	r2, r5
   11ad4:	mov	r0, r4
   11ad8:	mov	r1, r7
   11adc:	bl	1520 <fread@plt>
   11ae0:	cmp	r5, #0
   11ae4:	str	r0, [sp, #8]
   11ae8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11aec:	ldr	r3, [sp, #4]
   11af0:	sub	r2, r4, #2
   11af4:	sub	r3, r3, #1
   11af8:	add	r5, r3, r5
   11afc:	ldrh	r1, [r2, #2]!
   11b00:	strb	r1, [r3, #1]!
   11b04:	cmp	r3, r5
   11b08:	bne	11afc <ReadUInt8Data.part.17+0xc24>
   11b0c:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11b10:	add	r4, sp, #24
   11b14:	mov	r2, r5
   11b18:	mov	r0, r4
   11b1c:	mov	r1, r7
   11b20:	bl	1520 <fread@plt>
   11b24:	cmp	r5, #0
   11b28:	str	r0, [sp, #8]
   11b2c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11b30:	ldr	r3, [sp, #4]
   11b34:	sub	r2, r4, #4
   11b38:	sub	r3, r3, #1
   11b3c:	add	r5, r3, r5
   11b40:	ldr	r1, [r2, #4]!
   11b44:	strb	r1, [r3, #1]!
   11b48:	cmp	r3, r5
   11b4c:	bne	11b40 <ReadUInt8Data.part.17+0xc68>
   11b50:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11b54:	add	r4, sp, #24
   11b58:	mov	r2, r5
   11b5c:	mov	r0, r4
   11b60:	mov	r1, r7
   11b64:	bl	1520 <fread@plt>
   11b68:	cmp	r5, #0
   11b6c:	str	r0, [sp, #8]
   11b70:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11b74:	ldr	r3, [sp, #4]
   11b78:	sub	r6, r3, #1
   11b7c:	add	r5, r6, r5
   11b80:	mov	r0, r4
   11b84:	add	r4, r4, #2
   11b88:	bl	1950 <Mat_uint16Swap>
   11b8c:	strb	r0, [r6, #1]!
   11b90:	cmp	r5, r6
   11b94:	bne	11b80 <ReadUInt8Data.part.17+0xca8>
   11b98:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11b9c:	add	r4, sp, #24
   11ba0:	mov	r2, r5
   11ba4:	mov	r0, r4
   11ba8:	mov	r1, r7
   11bac:	bl	1520 <fread@plt>
   11bb0:	cmp	r5, #0
   11bb4:	str	r0, [sp, #8]
   11bb8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11bbc:	ldr	r3, [sp, #4]
   11bc0:	sub	r6, r3, #1
   11bc4:	add	r5, r6, r5
   11bc8:	mov	r0, r4
   11bcc:	add	r4, r4, #8
   11bd0:	bl	19a4 <Mat_doubleSwap>
   11bd4:	vcvt.u32.f64	s15, d0
   11bd8:	vmov	r3, s15
   11bdc:	strb	r3, [r6, #1]!
   11be0:	cmp	r6, r5
   11be4:	bne	11bc8 <ReadUInt8Data.part.17+0xcf0>
   11be8:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11bec:	add	r4, sp, #24
   11bf0:	mov	r2, r5
   11bf4:	mov	r0, r4
   11bf8:	mov	r1, r7
   11bfc:	bl	1520 <fread@plt>
   11c00:	cmp	r5, #0
   11c04:	str	r0, [sp, #8]
   11c08:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11c0c:	ldr	r3, [sp, #4]
   11c10:	sub	r6, r3, #1
   11c14:	add	r5, r6, r5
   11c18:	mov	r0, r4
   11c1c:	add	r4, r4, #4
   11c20:	bl	18f8 <Mat_uint32Swap>
   11c24:	strb	r0, [r6, #1]!
   11c28:	cmp	r6, r5
   11c2c:	bne	11c18 <ReadUInt8Data.part.17+0xd40>
   11c30:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11c34:	add	r4, sp, #24
   11c38:	mov	r2, r5
   11c3c:	mov	r0, r4
   11c40:	mov	r1, r7
   11c44:	bl	1520 <fread@plt>
   11c48:	cmp	r5, #0
   11c4c:	str	r0, [sp, #8]
   11c50:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11c54:	ldr	r3, [sp, #4]
   11c58:	sub	r6, r3, #1
   11c5c:	add	r5, r6, r5
   11c60:	mov	r0, r4
   11c64:	add	r4, r4, #4
   11c68:	bl	1974 <Mat_floatSwap>
   11c6c:	vcvt.u32.f32	s15, s0
   11c70:	vmov	r3, s15
   11c74:	strb	r3, [r6, #1]!
   11c78:	cmp	r6, r5
   11c7c:	bne	11c60 <ReadUInt8Data.part.17+0xd88>
   11c80:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11c84:	add	r4, sp, #24
   11c88:	mov	r2, r5
   11c8c:	mov	r0, r4
   11c90:	mov	r1, r7
   11c94:	bl	1520 <fread@plt>
   11c98:	cmp	r5, #0
   11c9c:	str	r0, [sp, #8]
   11ca0:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11ca4:	ldr	r3, [sp, #4]
   11ca8:	sub	r6, r3, #1
   11cac:	add	r5, r6, r5
   11cb0:	mov	r0, r4
   11cb4:	add	r4, r4, #4
   11cb8:	bl	18c4 <Mat_int32Swap>
   11cbc:	strb	r0, [r6, #1]!
   11cc0:	cmp	r6, r5
   11cc4:	bne	11cb0 <ReadUInt8Data.part.17+0xdd8>
   11cc8:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11ccc:	add	r4, sp, #24
   11cd0:	mov	r2, r5
   11cd4:	mov	r0, r4
   11cd8:	mov	r1, r7
   11cdc:	bl	1520 <fread@plt>
   11ce0:	cmp	r5, #0
   11ce4:	str	r0, [sp, #8]
   11ce8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11cec:	ldr	r3, [sp, #4]
   11cf0:	sub	r6, r3, #1
   11cf4:	add	r5, r6, r5
   11cf8:	mov	r0, r4
   11cfc:	add	r4, r4, #2
   11d00:	bl	192c <Mat_int16Swap>
   11d04:	strb	r0, [r6, #1]!
   11d08:	cmp	r5, r6
   11d0c:	bne	11cf8 <ReadUInt8Data.part.17+0xe20>
   11d10:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11d14:	ldr	r3, [sp, #16]
   11d18:	ldr	r5, [sp, #20]
   11d1c:	bic	r4, r3, #255	; 0xff
   11d20:	add	r4, r4, #256	; 0x100
   11d24:	cmp	r5, r4
   11d28:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11d2c:	ldr	r3, [sp]
   11d30:	sub	r5, r5, r4
   11d34:	mov	r0, r6
   11d38:	mov	r2, r5
   11d3c:	mov	r1, r7
   11d40:	ldr	r3, [r3]
   11d44:	bl	1520 <fread@plt>
   11d48:	add	r3, r9, r0
   11d4c:	cmp	r5, #0
   11d50:	str	r3, [sp, #8]
   11d54:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11d58:	ldr	r3, [sp, #4]
   11d5c:	mov	r6, fp
   11d60:	add	r4, r3, r4
   11d64:	add	r5, r4, r5
   11d68:	mov	r0, r6
   11d6c:	add	r6, r6, #4
   11d70:	bl	18f8 <Mat_uint32Swap>
   11d74:	strb	r0, [r4], #1
   11d78:	cmp	r4, r5
   11d7c:	bne	11d68 <ReadUInt8Data.part.17+0xe90>
   11d80:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11d84:	ldr	r3, [sp, #16]
   11d88:	ldr	r5, [sp, #20]
   11d8c:	bic	r4, r3, #255	; 0xff
   11d90:	add	r4, r4, #256	; 0x100
   11d94:	cmp	r5, r4
   11d98:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11d9c:	ldr	r3, [sp]
   11da0:	sub	r5, r5, r4
   11da4:	mov	r0, r6
   11da8:	mov	r2, r5
   11dac:	mov	r1, r7
   11db0:	ldr	r3, [r3]
   11db4:	bl	1520 <fread@plt>
   11db8:	add	r3, r9, r0
   11dbc:	cmp	r5, #0
   11dc0:	str	r3, [sp, #8]
   11dc4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11dc8:	ldr	r3, [sp, #4]
   11dcc:	mov	r6, fp
   11dd0:	add	r4, r3, r4
   11dd4:	add	r5, r4, r5
   11dd8:	mov	r0, r6
   11ddc:	add	r6, r6, #2
   11de0:	bl	1950 <Mat_uint16Swap>
   11de4:	strb	r0, [r4], #1
   11de8:	cmp	r4, r5
   11dec:	bne	11dd8 <ReadUInt8Data.part.17+0xf00>
   11df0:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11df4:	add	r4, sp, #24
   11df8:	mov	r2, r5
   11dfc:	mov	r0, r4
   11e00:	mov	r1, r7
   11e04:	bl	1520 <fread@plt>
   11e08:	cmp	r5, #0
   11e0c:	ble	115d8 <ReadUInt8Data.part.17+0x700>
   11e10:	ldr	r3, [sp, #4]
   11e14:	sub	r2, r4, #1
   11e18:	sub	r3, r3, #1
   11e1c:	add	r5, r3, r5
   11e20:	ldrb	r1, [r2, #1]!
   11e24:	strb	r1, [r3, #1]!
   11e28:	cmp	r5, r3
   11e2c:	bne	11e20 <ReadUInt8Data.part.17+0xf48>
   11e30:	b	115d8 <ReadUInt8Data.part.17+0x700>
   11e34:	ldr	r3, [sp, #16]
   11e38:	ldr	r5, [sp, #20]
   11e3c:	bic	r4, r3, #255	; 0xff
   11e40:	add	r4, r4, #256	; 0x100
   11e44:	cmp	r5, r4
   11e48:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11e4c:	ldr	r3, [sp]
   11e50:	sub	r5, r5, r4
   11e54:	mov	r0, r6
   11e58:	mov	r2, r5
   11e5c:	mov	r1, r7
   11e60:	ldr	r3, [r3]
   11e64:	bl	1520 <fread@plt>
   11e68:	add	r3, r9, r0
   11e6c:	cmp	r5, #0
   11e70:	str	r3, [sp, #8]
   11e74:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11e78:	ldr	r3, [sp, #4]
   11e7c:	mov	r6, fp
   11e80:	add	r4, r3, r4
   11e84:	add	r5, r4, r5
   11e88:	mov	r0, r6
   11e8c:	add	r6, r6, #4
   11e90:	bl	18c4 <Mat_int32Swap>
   11e94:	strb	r0, [r4], #1
   11e98:	cmp	r4, r5
   11e9c:	bne	11e88 <ReadUInt8Data.part.17+0xfb0>
   11ea0:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11ea4:	add	r4, sp, #24
   11ea8:	mov	r2, r5
   11eac:	mov	r0, r4
   11eb0:	mov	r1, r7
   11eb4:	bl	1520 <fread@plt>
   11eb8:	cmp	r5, #0
   11ebc:	ble	115d8 <ReadUInt8Data.part.17+0x700>
   11ec0:	ldr	r3, [sp, #4]
   11ec4:	sub	r2, r4, #1
   11ec8:	sub	r3, r3, #1
   11ecc:	add	r5, r3, r5
   11ed0:	ldrb	r1, [r2, #1]!
   11ed4:	strb	r1, [r3, #1]!
   11ed8:	cmp	r5, r3
   11edc:	bne	11ed0 <ReadUInt8Data.part.17+0xff8>
   11ee0:	b	115d8 <ReadUInt8Data.part.17+0x700>
   11ee4:	ldr	r3, [sp, #16]
   11ee8:	ldr	r5, [sp, #20]
   11eec:	bic	r4, r3, #255	; 0xff
   11ef0:	add	r4, r4, #256	; 0x100
   11ef4:	cmp	r5, r4
   11ef8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11efc:	ldr	r3, [sp]
   11f00:	sub	r5, r5, r4
   11f04:	mov	r0, r6
   11f08:	mov	r2, r5
   11f0c:	mov	r1, r7
   11f10:	ldr	r3, [r3]
   11f14:	bl	1520 <fread@plt>
   11f18:	add	r3, r9, r0
   11f1c:	cmp	r5, #0
   11f20:	str	r3, [sp, #8]
   11f24:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11f28:	ldr	r3, [sp, #4]
   11f2c:	mov	r6, fp
   11f30:	add	r4, r3, r4
   11f34:	add	r5, r4, r5
   11f38:	mov	r0, r6
   11f3c:	add	r6, r6, #4
   11f40:	bl	1974 <Mat_floatSwap>
   11f44:	vcvt.u32.f32	s15, s0
   11f48:	vmov	r3, s15
   11f4c:	strb	r3, [r4], #1
   11f50:	cmp	r4, r5
   11f54:	bne	11f38 <ReadUInt8Data.part.17+0x1060>
   11f58:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11f5c:	ldr	r3, [sp, #16]
   11f60:	ldr	r5, [sp, #20]
   11f64:	bic	r4, r3, #255	; 0xff
   11f68:	add	r4, r4, #256	; 0x100
   11f6c:	cmp	r5, r4
   11f70:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11f74:	ldr	r3, [sp]
   11f78:	sub	r5, r5, r4
   11f7c:	mov	r0, r6
   11f80:	mov	r2, r5
   11f84:	mov	r1, r7
   11f88:	ldr	r3, [r3]
   11f8c:	bl	1520 <fread@plt>
   11f90:	add	r3, r9, r0
   11f94:	cmp	r5, #0
   11f98:	str	r3, [sp, #8]
   11f9c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   11fa0:	ldr	r3, [sp, #4]
   11fa4:	mov	r6, fp
   11fa8:	add	r4, r3, r4
   11fac:	add	r5, r4, r5
   11fb0:	mov	r0, r6
   11fb4:	add	r6, r6, #8
   11fb8:	bl	19a4 <Mat_doubleSwap>
   11fbc:	vcvt.u32.f64	s15, d0
   11fc0:	vmov	r3, s15
   11fc4:	strb	r3, [r4], #1
   11fc8:	cmp	r4, r5
   11fcc:	bne	11fb0 <ReadUInt8Data.part.17+0x10d8>
   11fd0:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   11fd4:	ldr	r3, [sp]
   11fd8:	ldr	r9, [r3, #20]
   11fdc:	ldr	r3, [r3]
   11fe0:	cmp	r9, #0
   11fe4:	beq	1240c <ReadUInt8Data.part.17+0x1534>
   11fe8:	cmp	r5, #256	; 0x100
   11fec:	ble	12680 <ReadUInt8Data.part.17+0x17a8>
   11ff0:	ldr	r1, [sp, #4]
   11ff4:	sub	sl, r5, #256	; 0x100
   11ff8:	add	r4, sp, #2064	; 0x810
   11ffc:	sub	sl, sl, #1
   12000:	mov	r0, #0
   12004:	add	r6, sp, #24
   12008:	add	r4, r4, #8
   1200c:	str	r0, [sp, #12]
   12010:	add	r2, r1, #255	; 0xff
   12014:	sub	r9, r1, #1
   12018:	bic	r1, sl, #255	; 0xff
   1201c:	add	r2, r2, r1
   12020:	str	r2, [sp, #16]
   12024:	mov	r2, #256	; 0x100
   12028:	mov	r1, r7
   1202c:	mov	r0, r6
   12030:	mov	fp, r9
   12034:	bl	1520 <fread@plt>
   12038:	ldr	r3, [sp, #12]
   1203c:	mov	r8, r6
   12040:	str	r6, [sp, #20]
   12044:	add	r3, r3, r0
   12048:	str	r3, [sp, #8]
   1204c:	str	r3, [sp, #12]
   12050:	mov	r0, r8
   12054:	add	r8, r8, #8
   12058:	bl	17ec <Mat_int64Swap>
   1205c:	cmp	r4, r8
   12060:	strb	r0, [fp, #1]!
   12064:	bne	12050 <ReadUInt8Data.part.17+0x1178>
   12068:	ldr	r3, [sp, #16]
   1206c:	add	r9, r9, #256	; 0x100
   12070:	cmp	r3, r9
   12074:	beq	124e8 <ReadUInt8Data.part.17+0x1610>
   12078:	ldr	r3, [sp]
   1207c:	ldr	r3, [r3]
   12080:	b	12024 <ReadUInt8Data.part.17+0x114c>
   12084:	ldr	r3, [sp, #12]
   12088:	mov	r5, fp
   1208c:	mov	fp, r0
   12090:	str	ip, [sp, #8]
   12094:	bic	r4, r3, #255	; 0xff
   12098:	add	r4, r4, #256	; 0x100
   1209c:	cmp	r5, r4
   120a0:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   120a4:	ldr	r3, [sp]
   120a8:	sub	r5, r5, r4
   120ac:	mov	r0, r6
   120b0:	mov	r2, r5
   120b4:	mov	r1, r7
   120b8:	ldr	r3, [r3]
   120bc:	bl	1520 <fread@plt>
   120c0:	add	r3, r9, r0
   120c4:	cmp	r5, #0
   120c8:	str	r3, [sp, #8]
   120cc:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   120d0:	ldr	r3, [sp, #4]
   120d4:	add	r4, r3, r4
   120d8:	add	r5, r4, r5
   120dc:	ldr	r3, [fp, #4]!
   120e0:	strb	r3, [r4], #1
   120e4:	cmp	r4, r5
   120e8:	bne	120dc <ReadUInt8Data.part.17+0x1204>
   120ec:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   120f0:	ldr	r3, [sp, #12]
   120f4:	mov	r5, fp
   120f8:	mov	fp, r0
   120fc:	str	ip, [sp, #8]
   12100:	bic	r4, r3, #255	; 0xff
   12104:	add	r4, r4, #256	; 0x100
   12108:	cmp	r5, r4
   1210c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12110:	ldr	r3, [sp]
   12114:	sub	r5, r5, r4
   12118:	mov	r0, r6
   1211c:	mov	r2, r5
   12120:	mov	r1, r7
   12124:	ldr	r3, [r3]
   12128:	bl	1520 <fread@plt>
   1212c:	add	r3, r9, r0
   12130:	cmp	r5, #0
   12134:	str	r3, [sp, #8]
   12138:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1213c:	ldr	r3, [sp, #4]
   12140:	add	r4, r3, r4
   12144:	add	r5, r4, r5
   12148:	ldr	r3, [fp, #4]!
   1214c:	strb	r3, [r4], #1
   12150:	cmp	r4, r5
   12154:	bne	12148 <ReadUInt8Data.part.17+0x1270>
   12158:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   1215c:	ldr	r3, [sp, #12]
   12160:	mov	r5, fp
   12164:	mov	fp, r0
   12168:	str	ip, [sp, #8]
   1216c:	bic	r4, r3, #255	; 0xff
   12170:	add	r4, r4, #256	; 0x100
   12174:	cmp	r5, r4
   12178:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1217c:	ldr	r3, [sp]
   12180:	sub	r5, r5, r4
   12184:	mov	r0, r6
   12188:	mov	r2, r5
   1218c:	mov	r1, r7
   12190:	ldr	r3, [r3]
   12194:	bl	1520 <fread@plt>
   12198:	add	r3, r9, r0
   1219c:	cmp	r5, #0
   121a0:	str	r3, [sp, #8]
   121a4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   121a8:	ldr	r3, [sp, #4]
   121ac:	add	r4, r3, r4
   121b0:	add	r5, r4, r5
   121b4:	ldrh	r3, [fp, #2]!
   121b8:	strb	r3, [r4], #1
   121bc:	cmp	r5, r4
   121c0:	bne	121b4 <ReadUInt8Data.part.17+0x12dc>
   121c4:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   121c8:	ldr	r3, [sp, #12]
   121cc:	mov	r5, sl
   121d0:	mov	sl, ip
   121d4:	str	r0, [sp, #8]
   121d8:	bic	r4, r3, #255	; 0xff
   121dc:	add	r4, r4, #256	; 0x100
   121e0:	cmp	r5, r4
   121e4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   121e8:	ldr	r3, [sp]
   121ec:	sub	r5, r5, r4
   121f0:	mov	r0, r6
   121f4:	mov	r2, r5
   121f8:	mov	r1, r7
   121fc:	ldr	r3, [r3]
   12200:	bl	1520 <fread@plt>
   12204:	add	r3, r9, r0
   12208:	cmp	r5, #0
   1220c:	str	r3, [sp, #8]
   12210:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12214:	ldr	r3, [sp, #4]
   12218:	add	r4, r3, r4
   1221c:	add	r5, r4, r5
   12220:	vldmia	sl!, {s15}
   12224:	vcvt.u32.f32	s15, s15
   12228:	vmov	r3, s15
   1222c:	strb	r3, [r4], #1
   12230:	cmp	r4, r5
   12234:	bne	12220 <ReadUInt8Data.part.17+0x1348>
   12238:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   1223c:	ldr	r3, [sp, #12]
   12240:	mov	r5, sl
   12244:	mov	sl, ip
   12248:	str	r0, [sp, #8]
   1224c:	bic	r4, r3, #255	; 0xff
   12250:	add	r4, r4, #256	; 0x100
   12254:	cmp	r5, r4
   12258:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1225c:	ldr	r3, [sp]
   12260:	sub	r5, r5, r4
   12264:	mov	r0, r6
   12268:	mov	r2, r5
   1226c:	mov	r1, r7
   12270:	ldr	r3, [r3]
   12274:	bl	1520 <fread@plt>
   12278:	add	r3, r9, r0
   1227c:	cmp	r5, #0
   12280:	str	r3, [sp, #8]
   12284:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12288:	ldr	r3, [sp, #4]
   1228c:	add	r4, r3, r4
   12290:	add	r5, r4, r5
   12294:	vldmia	sl!, {d7}
   12298:	vcvt.u32.f64	s15, d7
   1229c:	vmov	r3, s15
   122a0:	strb	r3, [r4], #1
   122a4:	cmp	r4, r5
   122a8:	bne	12294 <ReadUInt8Data.part.17+0x13bc>
   122ac:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   122b0:	ldr	r3, [sp, #12]
   122b4:	mov	r5, fp
   122b8:	mov	fp, r0
   122bc:	str	ip, [sp, #8]
   122c0:	bic	r4, r3, #255	; 0xff
   122c4:	add	r4, r4, #256	; 0x100
   122c8:	cmp	r5, r4
   122cc:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   122d0:	ldr	r3, [sp]
   122d4:	sub	r5, r5, r4
   122d8:	mov	r0, r6
   122dc:	mov	r2, r5
   122e0:	mov	r1, r7
   122e4:	ldr	r3, [r3]
   122e8:	bl	1520 <fread@plt>
   122ec:	add	r3, r9, r0
   122f0:	cmp	r5, #0
   122f4:	str	r3, [sp, #8]
   122f8:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   122fc:	ldr	r3, [sp, #4]
   12300:	add	r4, r3, r4
   12304:	add	r5, r4, r5
   12308:	ldrh	r3, [fp, #2]!
   1230c:	strb	r3, [r4], #1
   12310:	cmp	r5, r4
   12314:	bne	12308 <ReadUInt8Data.part.17+0x1430>
   12318:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   1231c:	ldr	r3, [sp, #16]
   12320:	ldr	r5, [sp, #20]
   12324:	bic	r4, r3, #255	; 0xff
   12328:	add	r4, r4, #256	; 0x100
   1232c:	cmp	r5, r4
   12330:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12334:	ldr	r3, [sp]
   12338:	sub	r5, r5, r4
   1233c:	mov	r0, r6
   12340:	mov	r2, r5
   12344:	mov	r1, r7
   12348:	ldr	r3, [r3]
   1234c:	bl	1520 <fread@plt>
   12350:	add	r3, r9, r0
   12354:	cmp	r5, #0
   12358:	str	r3, [sp, #8]
   1235c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12360:	ldr	r3, [sp, #4]
   12364:	mov	r6, fp
   12368:	add	r4, r3, r4
   1236c:	add	r5, r4, r5
   12370:	mov	r0, r6
   12374:	add	r6, r6, #2
   12378:	bl	192c <Mat_int16Swap>
   1237c:	strb	r0, [r4], #1
   12380:	cmp	r5, r4
   12384:	bne	12370 <ReadUInt8Data.part.17+0x1498>
   12388:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   1238c:	cmp	r5, #256	; 0x100
   12390:	ble	125b0 <ReadUInt8Data.part.17+0x16d8>
   12394:	ldr	r1, [sp, #4]
   12398:	sub	r8, r5, #256	; 0x100
   1239c:	add	r6, sp, #24
   123a0:	sub	r8, r8, #1
   123a4:	add	r4, sp, #2064	; 0x810
   123a8:	add	r2, r1, #255	; 0xff
   123ac:	sub	sl, r1, #1
   123b0:	bic	r1, r8, #255	; 0xff
   123b4:	add	r2, r2, r1
   123b8:	str	r2, [sp, #12]
   123bc:	mov	r2, #256	; 0x100
   123c0:	mov	r1, r7
   123c4:	mov	r0, r6
   123c8:	sub	fp, r6, #8
   123cc:	bl	1520 <fread@plt>
   123d0:	add	r9, r9, r0
   123d4:	mov	r3, fp
   123d8:	mov	r2, sl
   123dc:	str	r9, [sp, #8]
   123e0:	ldr	r1, [r3, #8]!
   123e4:	cmp	r4, r3
   123e8:	strb	r1, [r2, #1]!
   123ec:	bne	123e0 <ReadUInt8Data.part.17+0x1508>
   123f0:	ldr	r3, [sp, #12]
   123f4:	add	sl, sl, #256	; 0x100
   123f8:	cmp	r3, sl
   123fc:	beq	1248c <ReadUInt8Data.part.17+0x15b4>
   12400:	ldr	r3, [sp]
   12404:	ldr	r3, [r3]
   12408:	b	123bc <ReadUInt8Data.part.17+0x14e4>
   1240c:	cmp	r5, #256	; 0x100
   12410:	ble	1263c <ReadUInt8Data.part.17+0x1764>
   12414:	ldr	r1, [sp, #4]
   12418:	sub	r8, r5, #256	; 0x100
   1241c:	add	r6, sp, #24
   12420:	sub	r8, r8, #1
   12424:	add	r4, sp, #2064	; 0x810
   12428:	add	r2, r1, #255	; 0xff
   1242c:	sub	sl, r1, #1
   12430:	bic	r1, r8, #255	; 0xff
   12434:	add	r2, r2, r1
   12438:	str	r2, [sp, #12]
   1243c:	mov	r2, #256	; 0x100
   12440:	mov	r1, r7
   12444:	mov	r0, r6
   12448:	sub	fp, r6, #8
   1244c:	bl	1520 <fread@plt>
   12450:	add	r9, r9, r0
   12454:	mov	r3, fp
   12458:	mov	r2, sl
   1245c:	str	r9, [sp, #8]
   12460:	ldr	r1, [r3, #8]!
   12464:	cmp	r4, r3
   12468:	strb	r1, [r2, #1]!
   1246c:	bne	12460 <ReadUInt8Data.part.17+0x1588>
   12470:	ldr	r3, [sp, #12]
   12474:	add	sl, sl, #256	; 0x100
   12478:	cmp	r3, sl
   1247c:	beq	12554 <ReadUInt8Data.part.17+0x167c>
   12480:	ldr	r3, [sp]
   12484:	ldr	r3, [r3]
   12488:	b	1243c <ReadUInt8Data.part.17+0x1564>
   1248c:	bic	r4, r8, #255	; 0xff
   12490:	add	r4, r4, #256	; 0x100
   12494:	cmp	r5, r4
   12498:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1249c:	ldr	r3, [sp]
   124a0:	sub	r5, r5, r4
   124a4:	mov	r0, r6
   124a8:	mov	r2, r5
   124ac:	mov	r1, r7
   124b0:	ldr	r3, [r3]
   124b4:	bl	1520 <fread@plt>
   124b8:	add	r3, r9, r0
   124bc:	cmp	r5, #0
   124c0:	str	r3, [sp, #8]
   124c4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   124c8:	ldr	r3, [sp, #4]
   124cc:	add	r4, r3, r4
   124d0:	add	r5, r4, r5
   124d4:	ldr	r3, [fp, #8]!
   124d8:	strb	r3, [r4], #1
   124dc:	cmp	r4, r5
   124e0:	bne	124d4 <ReadUInt8Data.part.17+0x15fc>
   124e4:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   124e8:	bic	r4, sl, #255	; 0xff
   124ec:	add	r4, r4, #256	; 0x100
   124f0:	cmp	r5, r4
   124f4:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   124f8:	ldr	r3, [sp]
   124fc:	sub	r5, r5, r4
   12500:	mov	r0, r6
   12504:	mov	r2, r5
   12508:	mov	r1, r7
   1250c:	ldr	r3, [r3]
   12510:	bl	1520 <fread@plt>
   12514:	ldr	r3, [sp, #12]
   12518:	cmp	r5, #0
   1251c:	add	r3, r3, r0
   12520:	str	r3, [sp, #8]
   12524:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12528:	ldr	r3, [sp, #4]
   1252c:	ldr	r6, [sp, #20]
   12530:	add	r4, r3, r4
   12534:	add	r5, r4, r5
   12538:	mov	r0, r6
   1253c:	add	r6, r6, #8
   12540:	bl	17ec <Mat_int64Swap>
   12544:	strb	r0, [r4], #1
   12548:	cmp	r4, r5
   1254c:	bne	12538 <ReadUInt8Data.part.17+0x1660>
   12550:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   12554:	bic	r4, r8, #255	; 0xff
   12558:	add	r4, r4, #256	; 0x100
   1255c:	cmp	r5, r4
   12560:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12564:	ldr	r3, [sp]
   12568:	sub	r5, r5, r4
   1256c:	mov	r0, r6
   12570:	mov	r2, r5
   12574:	mov	r1, r7
   12578:	ldr	r3, [r3]
   1257c:	bl	1520 <fread@plt>
   12580:	add	r3, r9, r0
   12584:	cmp	r5, #0
   12588:	str	r3, [sp, #8]
   1258c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12590:	ldr	r3, [sp, #4]
   12594:	add	r4, r3, r4
   12598:	add	r5, r4, r5
   1259c:	ldr	r3, [fp, #8]!
   125a0:	strb	r3, [r4], #1
   125a4:	cmp	r5, r4
   125a8:	bne	1259c <ReadUInt8Data.part.17+0x16c4>
   125ac:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   125b0:	add	r4, sp, #24
   125b4:	mov	r2, r5
   125b8:	mov	r0, r4
   125bc:	mov	r1, r7
   125c0:	bl	1520 <fread@plt>
   125c4:	cmp	r5, #0
   125c8:	str	r0, [sp, #8]
   125cc:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   125d0:	ldr	r3, [sp, #4]
   125d4:	sub	r4, r4, #8
   125d8:	sub	r3, r3, #1
   125dc:	add	r5, r3, r5
   125e0:	ldr	r2, [r4, #8]!
   125e4:	strb	r2, [r3, #1]!
   125e8:	cmp	r5, r3
   125ec:	bne	125e0 <ReadUInt8Data.part.17+0x1708>
   125f0:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   125f4:	add	r4, sp, #24
   125f8:	mov	r2, r5
   125fc:	mov	r0, r4
   12600:	mov	r1, r7
   12604:	bl	1520 <fread@plt>
   12608:	cmp	r5, #0
   1260c:	str	r0, [sp, #8]
   12610:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   12614:	ldr	r3, [sp, #4]
   12618:	sub	r6, r3, #1
   1261c:	add	r5, r6, r5
   12620:	mov	r0, r4
   12624:	add	r4, r4, #8
   12628:	bl	1858 <Mat_uint64Swap>
   1262c:	strb	r0, [r6, #1]!
   12630:	cmp	r5, r6
   12634:	bne	12620 <ReadUInt8Data.part.17+0x1748>
   12638:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   1263c:	add	r4, sp, #24
   12640:	mov	r2, r5
   12644:	mov	r0, r4
   12648:	mov	r1, r7
   1264c:	bl	1520 <fread@plt>
   12650:	cmp	r5, #0
   12654:	str	r0, [sp, #8]
   12658:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   1265c:	ldr	r3, [sp, #4]
   12660:	sub	r4, r4, #8
   12664:	sub	r3, r3, #1
   12668:	add	r5, r3, r5
   1266c:	ldr	r2, [r4, #8]!
   12670:	strb	r2, [r3, #1]!
   12674:	cmp	r5, r3
   12678:	bne	1266c <ReadUInt8Data.part.17+0x1794>
   1267c:	b	11594 <ReadUInt8Data.part.17+0x6bc>
   12680:	add	r4, sp, #24
   12684:	mov	r2, r5
   12688:	mov	r0, r4
   1268c:	mov	r1, r7
   12690:	bl	1520 <fread@plt>
   12694:	cmp	r5, #0
   12698:	str	r0, [sp, #8]
   1269c:	ble	11594 <ReadUInt8Data.part.17+0x6bc>
   126a0:	ldr	r3, [sp, #4]
   126a4:	sub	r6, r3, #1
   126a8:	add	r5, r6, r5
   126ac:	mov	r0, r4
   126b0:	add	r4, r4, #8
   126b4:	bl	17ec <Mat_int64Swap>
   126b8:	strb	r0, [r6, #1]!
   126bc:	cmp	r6, r5
   126c0:	bne	126ac <ReadUInt8Data.part.17+0x17d4>
   126c4:	b	11594 <ReadUInt8Data.part.17+0x6bc>

000126c8 <ReadDoubleData>:
   126c8:	cmp	r1, #0
   126cc:	cmpne	r0, #0
   126d0:	beq	126e4 <ReadDoubleData+0x1c>
   126d4:	ldr	ip, [r0]
   126d8:	cmp	ip, #0
   126dc:	beq	126e4 <ReadDoubleData+0x1c>
   126e0:	b	376c <ReadDoubleData.part.0>
   126e4:	mov	r0, #0
   126e8:	bx	lr

000126ec <ReadCompressedDoubleData>:
   126ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   126f0:	sub	r4, r3, #1
   126f4:	strd	r6, [sp, #8]
   126f8:	strd	r8, [sp, #16]
   126fc:	mov	r8, r0
   12700:	mov	r0, r3
   12704:	strd	sl, [sp, #24]
   12708:	mov	fp, r1
   1270c:	str	lr, [sp, #32]
   12710:	sub	sp, sp, #1040	; 0x410
   12714:	sub	sp, sp, #12
   12718:	str	r2, [sp, #4]
   1271c:	bl	1598 <Mat_SizeOf@plt>
   12720:	str	r0, [sp, #8]
   12724:	cmp	r4, #12
   12728:	addls	pc, pc, r4, lsl #2
   1272c:	b	1312c <ReadCompressedDoubleData+0xa40>
   12730:	b	1288c <ReadCompressedDoubleData+0x1a0>
   12734:	b	12978 <ReadCompressedDoubleData+0x28c>
   12738:	b	13018 <ReadCompressedDoubleData+0x92c>
   1273c:	b	12dec <ReadCompressedDoubleData+0x700>
   12740:	b	12f00 <ReadCompressedDoubleData+0x814>
   12744:	b	12a64 <ReadCompressedDoubleData+0x378>
   12748:	b	12b7c <ReadCompressedDoubleData+0x490>
   1274c:	b	1312c <ReadCompressedDoubleData+0xa40>
   12750:	b	12c8c <ReadCompressedDoubleData+0x5a0>
   12754:	b	1312c <ReadCompressedDoubleData+0xa40>
   12758:	b	1312c <ReadCompressedDoubleData+0xa40>
   1275c:	b	12ce4 <ReadCompressedDoubleData+0x5f8>
   12760:	b	12764 <ReadCompressedDoubleData+0x78>
   12764:	ldr	sl, [r8, #20]
   12768:	ldr	r3, [sp, #1088]	; 0x440
   1276c:	cmp	sl, #0
   12770:	beq	136b8 <ReadCompressedDoubleData+0xfcc>
   12774:	cmp	r3, #128	; 0x80
   12778:	ldr	r3, [sp, #8]
   1277c:	ble	1384c <ReadCompressedDoubleData+0x1160>
   12780:	lsl	r3, r3, #7
   12784:	ldr	sl, [sp, #4]
   12788:	add	r5, sp, #1040	; 0x410
   1278c:	add	r7, sp, #24
   12790:	add	r5, r5, #8
   12794:	str	r3, [sp, #12]
   12798:	ldr	r3, [sp, #1088]	; 0x440
   1279c:	sub	r3, r3, #128	; 0x80
   127a0:	str	r3, [sp, #16]
   127a4:	mov	r3, #0
   127a8:	mov	r9, r3
   127ac:	mov	r2, r7
   127b0:	mov	r1, fp
   127b4:	ldr	r3, [sp, #12]
   127b8:	mov	r0, r8
   127bc:	mov	r4, sl
   127c0:	str	r7, [sp, #20]
   127c4:	mov	r6, r7
   127c8:	bl	30e0 <InflateData>
   127cc:	mov	r0, r6
   127d0:	add	r6, r6, #8
   127d4:	bl	1858 <Mat_uint64Swap>
   127d8:	bl	4e0d0 <__aeabi_ul2d>
   127dc:	cmp	r6, r5
   127e0:	strd	r0, [r4], #8
   127e4:	bne	127cc <ReadCompressedDoubleData+0xe0>
   127e8:	ldr	r3, [sp, #16]
   127ec:	add	r9, r9, #128	; 0x80
   127f0:	add	sl, sl, #1024	; 0x400
   127f4:	cmp	r3, r9
   127f8:	bgt	127ac <ReadCompressedDoubleData+0xc0>
   127fc:	mov	r0, r8
   12800:	mov	r2, r7
   12804:	ldr	r6, [sp, #20]
   12808:	mov	r1, fp
   1280c:	ldr	r3, [sp, #1088]	; 0x440
   12810:	sub	r5, r3, #129	; 0x81
   12814:	lsr	r5, r5, #7
   12818:	add	r5, r5, #1
   1281c:	lsl	r8, r5, #7
   12820:	sub	r7, r3, r8
   12824:	ldr	r3, [sp, #8]
   12828:	mul	r4, r3, r7
   1282c:	mov	r3, r4
   12830:	bl	30e0 <InflateData>
   12834:	cmp	r7, #0
   12838:	ble	12868 <ReadCompressedDoubleData+0x17c>
   1283c:	ldr	r3, [sp, #4]
   12840:	add	r7, r7, r8
   12844:	add	r5, r3, r5, lsl #10
   12848:	add	r7, r3, r7, lsl #3
   1284c:	mov	r0, r6
   12850:	add	r6, r6, #8
   12854:	bl	1858 <Mat_uint64Swap>
   12858:	bl	4e0d0 <__aeabi_ul2d>
   1285c:	strd	r0, [r5], #8
   12860:	cmp	r5, r7
   12864:	bne	1284c <ReadCompressedDoubleData+0x160>
   12868:	mov	r0, r4
   1286c:	add	sp, sp, #1040	; 0x410
   12870:	add	sp, sp, #12
   12874:	ldrd	r4, [sp]
   12878:	ldrd	r6, [sp, #8]
   1287c:	ldrd	r8, [sp, #16]
   12880:	ldrd	sl, [sp, #24]
   12884:	add	sp, sp, #32
   12888:	pop	{pc}		; (ldr pc, [sp], #4)
   1288c:	ldr	r3, [sp, #1088]	; 0x440
   12890:	cmp	r3, #1024	; 0x400
   12894:	ldr	r3, [sp, #8]
   12898:	ble	137f4 <ReadCompressedDoubleData+0x1108>
   1289c:	lsl	r3, r3, #10
   128a0:	ldr	r9, [sp, #4]
   128a4:	add	r4, sp, #1040	; 0x410
   128a8:	mov	r6, #0
   128ac:	add	r7, sp, #24
   128b0:	add	r4, r4, #7
   128b4:	str	r3, [sp, #12]
   128b8:	ldr	r3, [sp, #1088]	; 0x440
   128bc:	sub	sl, r3, #1024	; 0x400
   128c0:	mov	r2, r7
   128c4:	mov	r1, fp
   128c8:	ldr	r3, [sp, #12]
   128cc:	mov	r0, r8
   128d0:	sub	r5, r7, #1
   128d4:	bl	30e0 <InflateData>
   128d8:	mov	r3, r5
   128dc:	mov	r2, r9
   128e0:	ldrsb	r1, [r3, #1]!
   128e4:	vmov	s14, r1
   128e8:	cmp	r4, r3
   128ec:	vcvt.f64.s32	d7, s14
   128f0:	vstmia	r2!, {d7}
   128f4:	bne	128e0 <ReadCompressedDoubleData+0x1f4>
   128f8:	add	r6, r6, #1024	; 0x400
   128fc:	add	r9, r9, #8192	; 0x2000
   12900:	cmp	sl, r6
   12904:	bgt	128c0 <ReadCompressedDoubleData+0x1d4>
   12908:	ldr	r3, [sp, #1088]	; 0x440
   1290c:	mov	r2, r7
   12910:	mov	r0, r8
   12914:	mov	r1, fp
   12918:	sub	r3, r3, #1024	; 0x400
   1291c:	sub	r3, r3, #1
   12920:	lsr	r3, r3, #10
   12924:	add	r7, r3, #1
   12928:	ldr	r3, [sp, #1088]	; 0x440
   1292c:	lsl	r8, r7, #10
   12930:	sub	r6, r3, r8
   12934:	ldr	r3, [sp, #8]
   12938:	mul	r4, r3, r6
   1293c:	mov	r3, r4
   12940:	bl	30e0 <InflateData>
   12944:	cmp	r6, #0
   12948:	ble	12868 <ReadCompressedDoubleData+0x17c>
   1294c:	ldr	r2, [sp, #4]
   12950:	add	r6, r6, r8
   12954:	add	r3, r2, r7, lsl #13
   12958:	add	r6, r2, r6, lsl #3
   1295c:	ldrsb	r2, [r5, #1]!
   12960:	vmov	s14, r2
   12964:	vcvt.f64.s32	d7, s14
   12968:	vstmia	r3!, {d7}
   1296c:	cmp	r3, r6
   12970:	bne	1295c <ReadCompressedDoubleData+0x270>
   12974:	b	12868 <ReadCompressedDoubleData+0x17c>
   12978:	ldr	r3, [sp, #1088]	; 0x440
   1297c:	cmp	r3, #1024	; 0x400
   12980:	ldr	r3, [sp, #8]
   12984:	ble	1379c <ReadCompressedDoubleData+0x10b0>
   12988:	lsl	r3, r3, #10
   1298c:	ldr	r9, [sp, #4]
   12990:	add	r4, sp, #1040	; 0x410
   12994:	mov	r6, #0
   12998:	add	r7, sp, #24
   1299c:	add	r4, r4, #7
   129a0:	str	r3, [sp, #12]
   129a4:	ldr	r3, [sp, #1088]	; 0x440
   129a8:	sub	sl, r3, #1024	; 0x400
   129ac:	mov	r2, r7
   129b0:	mov	r1, fp
   129b4:	ldr	r3, [sp, #12]
   129b8:	mov	r0, r8
   129bc:	sub	r5, r7, #1
   129c0:	bl	30e0 <InflateData>
   129c4:	mov	r3, r5
   129c8:	mov	r2, r9
   129cc:	ldrb	r1, [r3, #1]!
   129d0:	vmov	s14, r1
   129d4:	cmp	r4, r3
   129d8:	vcvt.f64.u32	d7, s14
   129dc:	vstmia	r2!, {d7}
   129e0:	bne	129cc <ReadCompressedDoubleData+0x2e0>
   129e4:	add	r6, r6, #1024	; 0x400
   129e8:	add	r9, r9, #8192	; 0x2000
   129ec:	cmp	sl, r6
   129f0:	bgt	129ac <ReadCompressedDoubleData+0x2c0>
   129f4:	ldr	r3, [sp, #1088]	; 0x440
   129f8:	mov	r2, r7
   129fc:	mov	r0, r8
   12a00:	mov	r1, fp
   12a04:	sub	r3, r3, #1024	; 0x400
   12a08:	sub	r3, r3, #1
   12a0c:	lsr	r3, r3, #10
   12a10:	add	r7, r3, #1
   12a14:	ldr	r3, [sp, #1088]	; 0x440
   12a18:	lsl	r8, r7, #10
   12a1c:	sub	r6, r3, r8
   12a20:	ldr	r3, [sp, #8]
   12a24:	mul	r4, r3, r6
   12a28:	mov	r3, r4
   12a2c:	bl	30e0 <InflateData>
   12a30:	cmp	r6, #0
   12a34:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12a38:	ldr	r1, [sp, #4]
   12a3c:	add	r2, r6, r8
   12a40:	add	r3, r1, r7, lsl #13
   12a44:	add	r2, r1, r2, lsl #3
   12a48:	ldrb	r1, [r5, #1]!
   12a4c:	vmov	s14, r1
   12a50:	vcvt.f64.u32	d7, s14
   12a54:	vstmia	r3!, {d7}
   12a58:	cmp	r2, r3
   12a5c:	bne	12a48 <ReadCompressedDoubleData+0x35c>
   12a60:	b	12868 <ReadCompressedDoubleData+0x17c>
   12a64:	ldr	r6, [r8, #20]
   12a68:	ldr	r3, [sp, #1088]	; 0x440
   12a6c:	cmp	r6, #0
   12a70:	beq	135d0 <ReadCompressedDoubleData+0xee4>
   12a74:	cmp	r3, #256	; 0x100
   12a78:	ldr	r3, [sp, #8]
   12a7c:	ble	138f0 <ReadCompressedDoubleData+0x1204>
   12a80:	lsl	r3, r3, #8
   12a84:	ldr	sl, [sp, #4]
   12a88:	add	r5, sp, #1040	; 0x410
   12a8c:	add	r7, sp, #24
   12a90:	add	r5, r5, #8
   12a94:	str	r3, [sp, #12]
   12a98:	ldr	r3, [sp, #1088]	; 0x440
   12a9c:	sub	r3, r3, #256	; 0x100
   12aa0:	str	r3, [sp, #16]
   12aa4:	mov	r3, #0
   12aa8:	mov	r9, r3
   12aac:	mov	r2, r7
   12ab0:	mov	r1, fp
   12ab4:	ldr	r3, [sp, #12]
   12ab8:	mov	r0, r8
   12abc:	mov	r4, sl
   12ac0:	str	r7, [sp, #20]
   12ac4:	mov	r6, r7
   12ac8:	bl	30e0 <InflateData>
   12acc:	mov	r0, r6
   12ad0:	add	r6, r6, #4
   12ad4:	bl	18f8 <Mat_uint32Swap>
   12ad8:	vmov	s15, r0
   12adc:	cmp	r5, r6
   12ae0:	vcvt.f64.u32	d7, s15
   12ae4:	vstmia	r4!, {d7}
   12ae8:	bne	12acc <ReadCompressedDoubleData+0x3e0>
   12aec:	ldr	r3, [sp, #16]
   12af0:	add	r9, r9, #256	; 0x100
   12af4:	add	sl, sl, #2048	; 0x800
   12af8:	cmp	r3, r9
   12afc:	bgt	12aac <ReadCompressedDoubleData+0x3c0>
   12b00:	mov	r0, r8
   12b04:	mov	r2, r7
   12b08:	ldr	r6, [sp, #20]
   12b0c:	mov	r1, fp
   12b10:	ldr	r3, [sp, #1088]	; 0x440
   12b14:	sub	r3, r3, #256	; 0x100
   12b18:	sub	r3, r3, #1
   12b1c:	lsr	r5, r3, #8
   12b20:	ldr	r3, [sp, #1088]	; 0x440
   12b24:	add	r5, r5, #1
   12b28:	lsl	r8, r5, #8
   12b2c:	sub	r7, r3, r8
   12b30:	ldr	r3, [sp, #8]
   12b34:	mul	r4, r3, r7
   12b38:	mov	r3, r4
   12b3c:	bl	30e0 <InflateData>
   12b40:	cmp	r7, #0
   12b44:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12b48:	ldr	r3, [sp, #4]
   12b4c:	add	r7, r7, r8
   12b50:	add	r5, r3, r5, lsl #11
   12b54:	add	r7, r3, r7, lsl #3
   12b58:	mov	r0, r6
   12b5c:	add	r6, r6, #4
   12b60:	bl	18f8 <Mat_uint32Swap>
   12b64:	vmov	s15, r0
   12b68:	vcvt.f64.u32	d7, s15
   12b6c:	vstmia	r5!, {d7}
   12b70:	cmp	r7, r5
   12b74:	bne	12b58 <ReadCompressedDoubleData+0x46c>
   12b78:	b	12868 <ReadCompressedDoubleData+0x17c>
   12b7c:	ldr	r5, [r8, #20]
   12b80:	ldr	r3, [sp, #1088]	; 0x440
   12b84:	cmp	r5, #0
   12b88:	beq	134e8 <ReadCompressedDoubleData+0xdfc>
   12b8c:	cmp	r3, #256	; 0x100
   12b90:	ldr	r3, [sp, #8]
   12b94:	ble	139a0 <ReadCompressedDoubleData+0x12b4>
   12b98:	lsl	r3, r3, #8
   12b9c:	ldr	sl, [sp, #4]
   12ba0:	add	r5, sp, #1040	; 0x410
   12ba4:	add	r7, sp, #24
   12ba8:	add	r5, r5, #8
   12bac:	str	r3, [sp, #12]
   12bb0:	ldr	r3, [sp, #1088]	; 0x440
   12bb4:	sub	r3, r3, #256	; 0x100
   12bb8:	str	r3, [sp, #16]
   12bbc:	mov	r3, #0
   12bc0:	mov	r9, r3
   12bc4:	mov	r2, r7
   12bc8:	mov	r1, fp
   12bcc:	ldr	r3, [sp, #12]
   12bd0:	mov	r0, r8
   12bd4:	mov	r4, sl
   12bd8:	str	r7, [sp, #20]
   12bdc:	mov	r6, r7
   12be0:	bl	30e0 <InflateData>
   12be4:	mov	r0, r6
   12be8:	add	r6, r6, #4
   12bec:	bl	1974 <Mat_floatSwap>
   12bf0:	vcvt.f64.f32	d0, s0
   12bf4:	cmp	r6, r5
   12bf8:	vstmia	r4!, {d0}
   12bfc:	bne	12be4 <ReadCompressedDoubleData+0x4f8>
   12c00:	ldr	r3, [sp, #16]
   12c04:	add	r9, r9, #256	; 0x100
   12c08:	add	sl, sl, #2048	; 0x800
   12c0c:	cmp	r3, r9
   12c10:	bgt	12bc4 <ReadCompressedDoubleData+0x4d8>
   12c14:	mov	r0, r8
   12c18:	mov	r2, r7
   12c1c:	ldr	r6, [sp, #20]
   12c20:	mov	r1, fp
   12c24:	ldr	r3, [sp, #1088]	; 0x440
   12c28:	sub	r3, r3, #256	; 0x100
   12c2c:	sub	r3, r3, #1
   12c30:	lsr	r5, r3, #8
   12c34:	ldr	r3, [sp, #1088]	; 0x440
   12c38:	add	r5, r5, #1
   12c3c:	lsl	r8, r5, #8
   12c40:	sub	r7, r3, r8
   12c44:	ldr	r3, [sp, #8]
   12c48:	mul	r4, r3, r7
   12c4c:	mov	r3, r4
   12c50:	bl	30e0 <InflateData>
   12c54:	cmp	r7, #0
   12c58:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12c5c:	ldr	r3, [sp, #4]
   12c60:	add	r7, r7, r8
   12c64:	add	r5, r3, r5, lsl #11
   12c68:	add	r7, r3, r7, lsl #3
   12c6c:	mov	r0, r6
   12c70:	add	r6, r6, #4
   12c74:	bl	1974 <Mat_floatSwap>
   12c78:	vcvt.f64.f32	d0, s0
   12c7c:	vstmia	r5!, {d0}
   12c80:	cmp	r7, r5
   12c84:	bne	12c6c <ReadCompressedDoubleData+0x580>
   12c88:	b	12868 <ReadCompressedDoubleData+0x17c>
   12c8c:	ldr	r3, [r8, #20]
   12c90:	ldr	r1, [sp, #8]
   12c94:	ldr	r2, [sp, #1088]	; 0x440
   12c98:	cmp	r3, #0
   12c9c:	mul	r4, r2, r1
   12ca0:	beq	134d0 <ReadCompressedDoubleData+0xde4>
   12ca4:	ldr	r5, [sp, #4]
   12ca8:	mov	r3, r4
   12cac:	mov	r1, fp
   12cb0:	mov	r0, r8
   12cb4:	mov	r2, r5
   12cb8:	bl	30e0 <InflateData>
   12cbc:	ldr	r3, [sp, #1088]	; 0x440
   12cc0:	cmp	r3, #0
   12cc4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12cc8:	add	r6, r5, r3, lsl #3
   12ccc:	mov	r0, r5
   12cd0:	add	r5, r5, #8
   12cd4:	bl	19a4 <Mat_doubleSwap>
   12cd8:	cmp	r5, r6
   12cdc:	bne	12ccc <ReadCompressedDoubleData+0x5e0>
   12ce0:	b	12868 <ReadCompressedDoubleData+0x17c>
   12ce4:	ldr	sl, [r8, #20]
   12ce8:	ldr	r3, [sp, #1088]	; 0x440
   12cec:	cmp	sl, #0
   12cf0:	beq	133ec <ReadCompressedDoubleData+0xd00>
   12cf4:	cmp	r3, #128	; 0x80
   12cf8:	ldr	r3, [sp, #8]
   12cfc:	ble	13a48 <ReadCompressedDoubleData+0x135c>
   12d00:	lsl	r3, r3, #7
   12d04:	ldr	sl, [sp, #4]
   12d08:	add	r5, sp, #1040	; 0x410
   12d0c:	add	r7, sp, #24
   12d10:	add	r5, r5, #8
   12d14:	str	r3, [sp, #12]
   12d18:	ldr	r3, [sp, #1088]	; 0x440
   12d1c:	sub	r3, r3, #128	; 0x80
   12d20:	str	r3, [sp, #16]
   12d24:	mov	r3, #0
   12d28:	mov	r9, r3
   12d2c:	mov	r2, r7
   12d30:	mov	r1, fp
   12d34:	ldr	r3, [sp, #12]
   12d38:	mov	r0, r8
   12d3c:	mov	r4, sl
   12d40:	str	r7, [sp, #20]
   12d44:	mov	r6, r7
   12d48:	bl	30e0 <InflateData>
   12d4c:	mov	r0, r6
   12d50:	add	r6, r6, #8
   12d54:	bl	17ec <Mat_int64Swap>
   12d58:	bl	4e0e4 <__aeabi_l2d>
   12d5c:	cmp	r6, r5
   12d60:	strd	r0, [r4], #8
   12d64:	bne	12d4c <ReadCompressedDoubleData+0x660>
   12d68:	ldr	r3, [sp, #16]
   12d6c:	add	r9, r9, #128	; 0x80
   12d70:	add	sl, sl, #1024	; 0x400
   12d74:	cmp	r3, r9
   12d78:	bgt	12d2c <ReadCompressedDoubleData+0x640>
   12d7c:	mov	r0, r8
   12d80:	mov	r2, r7
   12d84:	ldr	r6, [sp, #20]
   12d88:	mov	r1, fp
   12d8c:	ldr	r3, [sp, #1088]	; 0x440
   12d90:	sub	r5, r3, #129	; 0x81
   12d94:	lsr	r5, r5, #7
   12d98:	add	r5, r5, #1
   12d9c:	lsl	r8, r5, #7
   12da0:	sub	r7, r3, r8
   12da4:	ldr	r3, [sp, #8]
   12da8:	mul	r4, r3, r7
   12dac:	mov	r3, r4
   12db0:	bl	30e0 <InflateData>
   12db4:	cmp	r7, #0
   12db8:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12dbc:	ldr	r3, [sp, #4]
   12dc0:	add	r7, r7, r8
   12dc4:	add	r5, r3, r5, lsl #10
   12dc8:	add	r7, r3, r7, lsl #3
   12dcc:	mov	r0, r6
   12dd0:	add	r6, r6, #8
   12dd4:	bl	17ec <Mat_int64Swap>
   12dd8:	bl	4e0e4 <__aeabi_l2d>
   12ddc:	strd	r0, [r5], #8
   12de0:	cmp	r5, r7
   12de4:	bne	12dcc <ReadCompressedDoubleData+0x6e0>
   12de8:	b	12868 <ReadCompressedDoubleData+0x17c>
   12dec:	ldr	r6, [r8, #20]
   12df0:	ldr	r3, [sp, #1088]	; 0x440
   12df4:	cmp	r6, #0
   12df8:	beq	13304 <ReadCompressedDoubleData+0xc18>
   12dfc:	cmp	r3, #512	; 0x200
   12e00:	ldr	r3, [sp, #8]
   12e04:	ble	13aec <ReadCompressedDoubleData+0x1400>
   12e08:	lsl	r3, r3, #9
   12e0c:	ldr	sl, [sp, #4]
   12e10:	add	r5, sp, #1040	; 0x410
   12e14:	mov	r9, #0
   12e18:	add	r7, sp, #24
   12e1c:	add	r5, r5, #8
   12e20:	str	r3, [sp, #12]
   12e24:	ldr	r3, [sp, #1088]	; 0x440
   12e28:	sub	r3, r3, #512	; 0x200
   12e2c:	str	r3, [sp, #16]
   12e30:	mov	r2, r7
   12e34:	mov	r1, fp
   12e38:	ldr	r3, [sp, #12]
   12e3c:	mov	r0, r8
   12e40:	mov	r4, sl
   12e44:	str	r7, [sp, #20]
   12e48:	mov	r6, r7
   12e4c:	bl	30e0 <InflateData>
   12e50:	mov	r0, r6
   12e54:	add	r6, r6, #2
   12e58:	bl	1950 <Mat_uint16Swap>
   12e5c:	vmov	s15, r0
   12e60:	cmp	r5, r6
   12e64:	vcvt.f64.u32	d7, s15
   12e68:	vstmia	r4!, {d7}
   12e6c:	bne	12e50 <ReadCompressedDoubleData+0x764>
   12e70:	ldr	r3, [sp, #16]
   12e74:	add	r9, r9, #512	; 0x200
   12e78:	add	sl, sl, #4096	; 0x1000
   12e7c:	cmp	r3, r9
   12e80:	bgt	12e30 <ReadCompressedDoubleData+0x744>
   12e84:	mov	r0, r8
   12e88:	mov	r2, r7
   12e8c:	ldr	r6, [sp, #20]
   12e90:	mov	r1, fp
   12e94:	ldr	r3, [sp, #1088]	; 0x440
   12e98:	sub	r3, r3, #512	; 0x200
   12e9c:	sub	r3, r3, #1
   12ea0:	lsr	r5, r3, #9
   12ea4:	ldr	r3, [sp, #1088]	; 0x440
   12ea8:	add	r5, r5, #1
   12eac:	lsl	r8, r5, #9
   12eb0:	sub	r7, r3, r8
   12eb4:	ldr	r3, [sp, #8]
   12eb8:	mul	r4, r3, r7
   12ebc:	mov	r3, r4
   12ec0:	bl	30e0 <InflateData>
   12ec4:	cmp	r7, #0
   12ec8:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12ecc:	ldr	r3, [sp, #4]
   12ed0:	add	r7, r7, r8
   12ed4:	add	r5, r3, r5, lsl #12
   12ed8:	add	r7, r3, r7, lsl #3
   12edc:	mov	r0, r6
   12ee0:	add	r6, r6, #2
   12ee4:	bl	1950 <Mat_uint16Swap>
   12ee8:	vmov	s15, r0
   12eec:	vcvt.f64.u32	d7, s15
   12ef0:	vstmia	r5!, {d7}
   12ef4:	cmp	r7, r5
   12ef8:	bne	12edc <ReadCompressedDoubleData+0x7f0>
   12efc:	b	12868 <ReadCompressedDoubleData+0x17c>
   12f00:	ldr	r6, [r8, #20]
   12f04:	ldr	r3, [sp, #1088]	; 0x440
   12f08:	cmp	r6, #0
   12f0c:	beq	1321c <ReadCompressedDoubleData+0xb30>
   12f10:	cmp	r3, #256	; 0x100
   12f14:	ldr	r3, [sp, #8]
   12f18:	ble	13b9c <ReadCompressedDoubleData+0x14b0>
   12f1c:	lsl	r3, r3, #8
   12f20:	ldr	sl, [sp, #4]
   12f24:	add	r5, sp, #1040	; 0x410
   12f28:	add	r7, sp, #24
   12f2c:	add	r5, r5, #8
   12f30:	str	r3, [sp, #12]
   12f34:	ldr	r3, [sp, #1088]	; 0x440
   12f38:	sub	r3, r3, #256	; 0x100
   12f3c:	str	r3, [sp, #16]
   12f40:	mov	r3, #0
   12f44:	mov	r9, r3
   12f48:	mov	r2, r7
   12f4c:	mov	r1, fp
   12f50:	ldr	r3, [sp, #12]
   12f54:	mov	r0, r8
   12f58:	mov	r4, sl
   12f5c:	str	r7, [sp, #20]
   12f60:	mov	r6, r7
   12f64:	bl	30e0 <InflateData>
   12f68:	mov	r0, r6
   12f6c:	add	r6, r6, #4
   12f70:	bl	18c4 <Mat_int32Swap>
   12f74:	vmov	s15, r0
   12f78:	cmp	r5, r6
   12f7c:	vcvt.f64.s32	d7, s15
   12f80:	vstmia	r4!, {d7}
   12f84:	bne	12f68 <ReadCompressedDoubleData+0x87c>
   12f88:	ldr	r3, [sp, #16]
   12f8c:	add	r9, r9, #256	; 0x100
   12f90:	add	sl, sl, #2048	; 0x800
   12f94:	cmp	r3, r9
   12f98:	bgt	12f48 <ReadCompressedDoubleData+0x85c>
   12f9c:	mov	r0, r8
   12fa0:	mov	r2, r7
   12fa4:	ldr	r6, [sp, #20]
   12fa8:	mov	r1, fp
   12fac:	ldr	r3, [sp, #1088]	; 0x440
   12fb0:	sub	r3, r3, #256	; 0x100
   12fb4:	sub	r3, r3, #1
   12fb8:	lsr	r5, r3, #8
   12fbc:	ldr	r3, [sp, #1088]	; 0x440
   12fc0:	add	r5, r5, #1
   12fc4:	lsl	r8, r5, #8
   12fc8:	sub	r7, r3, r8
   12fcc:	ldr	r3, [sp, #8]
   12fd0:	mul	r4, r3, r7
   12fd4:	mov	r3, r4
   12fd8:	bl	30e0 <InflateData>
   12fdc:	cmp	r7, #0
   12fe0:	ble	12868 <ReadCompressedDoubleData+0x17c>
   12fe4:	ldr	r3, [sp, #4]
   12fe8:	add	r7, r7, r8
   12fec:	add	r5, r3, r5, lsl #11
   12ff0:	add	r7, r3, r7, lsl #3
   12ff4:	mov	r0, r6
   12ff8:	add	r6, r6, #4
   12ffc:	bl	18c4 <Mat_int32Swap>
   13000:	vmov	s15, r0
   13004:	vcvt.f64.s32	d7, s15
   13008:	vstmia	r5!, {d7}
   1300c:	cmp	r7, r5
   13010:	bne	12ff4 <ReadCompressedDoubleData+0x908>
   13014:	b	12868 <ReadCompressedDoubleData+0x17c>
   13018:	ldr	r6, [r8, #20]
   1301c:	ldr	r3, [sp, #1088]	; 0x440
   13020:	cmp	r6, #0
   13024:	beq	13134 <ReadCompressedDoubleData+0xa48>
   13028:	cmp	r3, #512	; 0x200
   1302c:	ldr	r3, [sp, #8]
   13030:	ble	13c4c <ReadCompressedDoubleData+0x1560>
   13034:	lsl	r3, r3, #9
   13038:	ldr	sl, [sp, #4]
   1303c:	add	r5, sp, #1040	; 0x410
   13040:	mov	r9, #0
   13044:	add	r7, sp, #24
   13048:	add	r5, r5, #8
   1304c:	str	r3, [sp, #12]
   13050:	ldr	r3, [sp, #1088]	; 0x440
   13054:	sub	r3, r3, #512	; 0x200
   13058:	str	r3, [sp, #16]
   1305c:	mov	r2, r7
   13060:	mov	r1, fp
   13064:	ldr	r3, [sp, #12]
   13068:	mov	r0, r8
   1306c:	mov	r4, sl
   13070:	str	r7, [sp, #20]
   13074:	mov	r6, r7
   13078:	bl	30e0 <InflateData>
   1307c:	mov	r0, r6
   13080:	add	r6, r6, #2
   13084:	bl	192c <Mat_int16Swap>
   13088:	vmov	s15, r0
   1308c:	cmp	r5, r6
   13090:	vcvt.f64.s32	d7, s15
   13094:	vstmia	r4!, {d7}
   13098:	bne	1307c <ReadCompressedDoubleData+0x990>
   1309c:	ldr	r3, [sp, #16]
   130a0:	add	r9, r9, #512	; 0x200
   130a4:	add	sl, sl, #4096	; 0x1000
   130a8:	cmp	r3, r9
   130ac:	bgt	1305c <ReadCompressedDoubleData+0x970>
   130b0:	mov	r0, r8
   130b4:	mov	r2, r7
   130b8:	ldr	r6, [sp, #20]
   130bc:	mov	r1, fp
   130c0:	ldr	r3, [sp, #1088]	; 0x440
   130c4:	sub	r3, r3, #512	; 0x200
   130c8:	sub	r3, r3, #1
   130cc:	lsr	r5, r3, #9
   130d0:	ldr	r3, [sp, #1088]	; 0x440
   130d4:	add	r5, r5, #1
   130d8:	lsl	r8, r5, #9
   130dc:	sub	r7, r3, r8
   130e0:	ldr	r3, [sp, #8]
   130e4:	mul	r4, r3, r7
   130e8:	mov	r3, r4
   130ec:	bl	30e0 <InflateData>
   130f0:	cmp	r7, #0
   130f4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   130f8:	ldr	r3, [sp, #4]
   130fc:	add	r7, r7, r8
   13100:	add	r5, r3, r5, lsl #12
   13104:	add	r7, r3, r7, lsl #3
   13108:	mov	r0, r6
   1310c:	add	r6, r6, #2
   13110:	bl	192c <Mat_int16Swap>
   13114:	vmov	s15, r0
   13118:	vcvt.f64.s32	d7, s15
   1311c:	vstmia	r5!, {d7}
   13120:	cmp	r7, r5
   13124:	bne	13108 <ReadCompressedDoubleData+0xa1c>
   13128:	b	12868 <ReadCompressedDoubleData+0x17c>
   1312c:	mov	r0, #0
   13130:	b	1286c <ReadCompressedDoubleData+0x180>
   13134:	cmp	r3, #512	; 0x200
   13138:	ldr	r3, [sp, #8]
   1313c:	ble	13ca4 <ReadCompressedDoubleData+0x15b8>
   13140:	lsl	sl, r3, #9
   13144:	ldr	r9, [sp, #4]
   13148:	add	r4, sp, #1040	; 0x410
   1314c:	add	r7, sp, #24
   13150:	add	r4, r4, #6
   13154:	ldr	r3, [sp, #1088]	; 0x440
   13158:	sub	r3, r3, #512	; 0x200
   1315c:	str	r3, [sp, #12]
   13160:	mov	r3, sl
   13164:	mov	r2, r7
   13168:	mov	r1, fp
   1316c:	mov	r0, r8
   13170:	sub	r5, r7, #2
   13174:	bl	30e0 <InflateData>
   13178:	mov	r3, r5
   1317c:	mov	r2, r9
   13180:	ldrsh	r1, [r3, #2]!
   13184:	vmov	s14, r1
   13188:	cmp	r4, r3
   1318c:	vcvt.f64.s32	d7, s14
   13190:	vstmia	r2!, {d7}
   13194:	bne	13180 <ReadCompressedDoubleData+0xa94>
   13198:	ldr	r3, [sp, #12]
   1319c:	add	r6, r6, #512	; 0x200
   131a0:	add	r9, r9, #4096	; 0x1000
   131a4:	cmp	r3, r6
   131a8:	bgt	13160 <ReadCompressedDoubleData+0xa74>
   131ac:	ldr	r3, [sp, #1088]	; 0x440
   131b0:	mov	r2, r7
   131b4:	mov	r0, r8
   131b8:	mov	r1, fp
   131bc:	sub	r3, r3, #512	; 0x200
   131c0:	sub	r3, r3, #1
   131c4:	lsr	r3, r3, #9
   131c8:	add	r7, r3, #1
   131cc:	ldr	r3, [sp, #1088]	; 0x440
   131d0:	lsl	r8, r7, #9
   131d4:	sub	r6, r3, r8
   131d8:	ldr	r3, [sp, #8]
   131dc:	mul	r4, r3, r6
   131e0:	mov	r3, r4
   131e4:	bl	30e0 <InflateData>
   131e8:	cmp	r6, #0
   131ec:	ble	12868 <ReadCompressedDoubleData+0x17c>
   131f0:	ldr	r1, [sp, #4]
   131f4:	add	r2, r6, r8
   131f8:	add	r3, r1, r7, lsl #12
   131fc:	add	r2, r1, r2, lsl #3
   13200:	ldrsh	r1, [r5, #2]!
   13204:	vmov	s14, r1
   13208:	vcvt.f64.s32	d7, s14
   1320c:	vstmia	r3!, {d7}
   13210:	cmp	r2, r3
   13214:	bne	13200 <ReadCompressedDoubleData+0xb14>
   13218:	b	12868 <ReadCompressedDoubleData+0x17c>
   1321c:	cmp	r3, #256	; 0x100
   13220:	ldr	r3, [sp, #8]
   13224:	ble	13bf4 <ReadCompressedDoubleData+0x1508>
   13228:	lsl	sl, r3, #8
   1322c:	ldr	r9, [sp, #4]
   13230:	add	r4, sp, #1040	; 0x410
   13234:	add	r7, sp, #24
   13238:	add	r4, r4, #4
   1323c:	ldr	r3, [sp, #1088]	; 0x440
   13240:	sub	r3, r3, #256	; 0x100
   13244:	str	r3, [sp, #12]
   13248:	mov	r3, sl
   1324c:	mov	r2, r7
   13250:	mov	r1, fp
   13254:	mov	r0, r8
   13258:	sub	r5, r7, #4
   1325c:	bl	30e0 <InflateData>
   13260:	mov	r3, r5
   13264:	mov	r2, r9
   13268:	ldr	r1, [r3, #4]!
   1326c:	vmov	s14, r1
   13270:	cmp	r4, r3
   13274:	vcvt.f64.s32	d7, s14
   13278:	vstmia	r2!, {d7}
   1327c:	bne	13268 <ReadCompressedDoubleData+0xb7c>
   13280:	ldr	r3, [sp, #12]
   13284:	add	r6, r6, #256	; 0x100
   13288:	add	r9, r9, #2048	; 0x800
   1328c:	cmp	r3, r6
   13290:	bgt	13248 <ReadCompressedDoubleData+0xb5c>
   13294:	ldr	r3, [sp, #1088]	; 0x440
   13298:	mov	r2, r7
   1329c:	mov	r0, r8
   132a0:	mov	r1, fp
   132a4:	sub	r3, r3, #256	; 0x100
   132a8:	sub	r3, r3, #1
   132ac:	lsr	r3, r3, #8
   132b0:	add	r7, r3, #1
   132b4:	ldr	r3, [sp, #1088]	; 0x440
   132b8:	lsl	r8, r7, #8
   132bc:	sub	r6, r3, r8
   132c0:	ldr	r3, [sp, #8]
   132c4:	mul	r4, r3, r6
   132c8:	mov	r3, r4
   132cc:	bl	30e0 <InflateData>
   132d0:	cmp	r6, #0
   132d4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   132d8:	ldr	r1, [sp, #4]
   132dc:	add	r2, r6, r8
   132e0:	add	r3, r1, r7, lsl #11
   132e4:	add	r2, r1, r2, lsl #3
   132e8:	ldr	r1, [r5, #4]!
   132ec:	vmov	s14, r1
   132f0:	vcvt.f64.s32	d7, s14
   132f4:	vstmia	r3!, {d7}
   132f8:	cmp	r2, r3
   132fc:	bne	132e8 <ReadCompressedDoubleData+0xbfc>
   13300:	b	12868 <ReadCompressedDoubleData+0x17c>
   13304:	cmp	r3, #512	; 0x200
   13308:	ldr	r3, [sp, #8]
   1330c:	ble	13b44 <ReadCompressedDoubleData+0x1458>
   13310:	lsl	sl, r3, #9
   13314:	ldr	r9, [sp, #4]
   13318:	add	r4, sp, #1040	; 0x410
   1331c:	add	r7, sp, #24
   13320:	add	r4, r4, #6
   13324:	ldr	r3, [sp, #1088]	; 0x440
   13328:	sub	r3, r3, #512	; 0x200
   1332c:	str	r3, [sp, #12]
   13330:	mov	r3, sl
   13334:	mov	r2, r7
   13338:	mov	r1, fp
   1333c:	mov	r0, r8
   13340:	sub	r5, r7, #2
   13344:	bl	30e0 <InflateData>
   13348:	mov	r3, r5
   1334c:	mov	r2, r9
   13350:	ldrh	r1, [r3, #2]!
   13354:	vmov	s14, r1
   13358:	cmp	r4, r3
   1335c:	vcvt.f64.u32	d7, s14
   13360:	vstmia	r2!, {d7}
   13364:	bne	13350 <ReadCompressedDoubleData+0xc64>
   13368:	ldr	r3, [sp, #12]
   1336c:	add	r6, r6, #512	; 0x200
   13370:	add	r9, r9, #4096	; 0x1000
   13374:	cmp	r3, r6
   13378:	bgt	13330 <ReadCompressedDoubleData+0xc44>
   1337c:	ldr	r3, [sp, #1088]	; 0x440
   13380:	mov	r2, r7
   13384:	mov	r0, r8
   13388:	mov	r1, fp
   1338c:	sub	r3, r3, #512	; 0x200
   13390:	sub	r3, r3, #1
   13394:	lsr	r3, r3, #9
   13398:	add	r7, r3, #1
   1339c:	ldr	r3, [sp, #1088]	; 0x440
   133a0:	lsl	r8, r7, #9
   133a4:	sub	r6, r3, r8
   133a8:	ldr	r3, [sp, #8]
   133ac:	mul	r4, r3, r6
   133b0:	mov	r3, r4
   133b4:	bl	30e0 <InflateData>
   133b8:	cmp	r6, #0
   133bc:	ble	12868 <ReadCompressedDoubleData+0x17c>
   133c0:	ldr	r1, [sp, #4]
   133c4:	add	r2, r6, r8
   133c8:	add	r3, r1, r7, lsl #12
   133cc:	add	r2, r1, r2, lsl #3
   133d0:	ldrh	r1, [r5, #2]!
   133d4:	vmov	s14, r1
   133d8:	vcvt.f64.u32	d7, s14
   133dc:	vstmia	r3!, {d7}
   133e0:	cmp	r2, r3
   133e4:	bne	133d0 <ReadCompressedDoubleData+0xce4>
   133e8:	b	12868 <ReadCompressedDoubleData+0x17c>
   133ec:	cmp	r3, #128	; 0x80
   133f0:	ldr	r3, [sp, #8]
   133f4:	ble	13a9c <ReadCompressedDoubleData+0x13b0>
   133f8:	lsl	r3, r3, #7
   133fc:	add	r7, sp, #24
   13400:	add	r6, sp, #1040	; 0x410
   13404:	str	r8, [sp, #12]
   13408:	str	r3, [sp, #16]
   1340c:	ldr	r3, [sp, #1088]	; 0x440
   13410:	sub	r3, r3, #128	; 0x80
   13414:	str	r3, [sp, #20]
   13418:	ldr	r3, [sp, #4]
   1341c:	mov	r8, r3
   13420:	sub	r9, r7, #8
   13424:	mov	r2, r7
   13428:	ldr	r0, [sp, #12]
   1342c:	mov	r1, fp
   13430:	mov	r4, r9
   13434:	ldr	r3, [sp, #16]
   13438:	mov	r5, r8
   1343c:	bl	30e0 <InflateData>
   13440:	ldrd	r0, [r4, #8]!
   13444:	bl	4e0e4 <__aeabi_l2d>
   13448:	strd	r0, [r5], #8
   1344c:	cmp	r4, r6
   13450:	bne	13440 <ReadCompressedDoubleData+0xd54>
   13454:	ldr	r3, [sp, #20]
   13458:	add	sl, sl, #128	; 0x80
   1345c:	add	r8, r8, #1024	; 0x400
   13460:	cmp	r3, sl
   13464:	bgt	13420 <ReadCompressedDoubleData+0xd34>
   13468:	mov	r2, r7
   1346c:	ldr	r8, [sp, #12]
   13470:	mov	r1, fp
   13474:	ldr	r3, [sp, #1088]	; 0x440
   13478:	mov	r0, r8
   1347c:	sub	r5, r3, #129	; 0x81
   13480:	lsr	r5, r5, #7
   13484:	add	r5, r5, #1
   13488:	lsl	r7, r5, #7
   1348c:	sub	r6, r3, r7
   13490:	ldr	r3, [sp, #8]
   13494:	mul	r4, r3, r6
   13498:	mov	r3, r4
   1349c:	bl	30e0 <InflateData>
   134a0:	cmp	r6, #0
   134a4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   134a8:	ldr	r3, [sp, #4]
   134ac:	add	r6, r6, r7
   134b0:	add	r5, r3, r5, lsl #10
   134b4:	add	r6, r3, r6, lsl #3
   134b8:	ldrd	r0, [r9, #8]!
   134bc:	bl	4e0e4 <__aeabi_l2d>
   134c0:	strd	r0, [r5], #8
   134c4:	cmp	r5, r6
   134c8:	bne	134b8 <ReadCompressedDoubleData+0xdcc>
   134cc:	b	12868 <ReadCompressedDoubleData+0x17c>
   134d0:	mov	r1, fp
   134d4:	mov	r0, r8
   134d8:	ldr	r2, [sp, #4]
   134dc:	mov	r3, r4
   134e0:	bl	30e0 <InflateData>
   134e4:	b	12868 <ReadCompressedDoubleData+0x17c>
   134e8:	cmp	r3, #256	; 0x100
   134ec:	ldr	r3, [sp, #8]
   134f0:	ble	139f4 <ReadCompressedDoubleData+0x1308>
   134f4:	ldr	r6, [sp, #4]
   134f8:	lsl	r3, r3, #8
   134fc:	add	r4, sp, #1040	; 0x410
   13500:	mov	r9, r8
   13504:	add	r7, sp, #24
   13508:	ldr	r2, [sp, #1088]	; 0x440
   1350c:	add	r4, r4, #8
   13510:	mov	r8, r3
   13514:	sub	sl, r2, #256	; 0x100
   13518:	mov	r3, r8
   1351c:	mov	r2, r7
   13520:	mov	r1, fp
   13524:	mov	r0, r9
   13528:	bl	30e0 <InflateData>
   1352c:	mov	r1, r7
   13530:	mov	r2, r6
   13534:	mov	r3, r7
   13538:	vldmia	r3!, {s14}
   1353c:	vcvt.f64.f32	d7, s14
   13540:	cmp	r3, r4
   13544:	vstmia	r2!, {d7}
   13548:	bne	13538 <ReadCompressedDoubleData+0xe4c>
   1354c:	add	r5, r5, #256	; 0x100
   13550:	add	r6, r6, #2048	; 0x800
   13554:	cmp	sl, r5
   13558:	bgt	13518 <ReadCompressedDoubleData+0xe2c>
   1355c:	ldr	r3, [sp, #1088]	; 0x440
   13560:	mov	r2, r7
   13564:	mov	r8, r9
   13568:	mov	r0, r8
   1356c:	mov	r9, r1
   13570:	mov	r1, fp
   13574:	sub	r3, r3, #256	; 0x100
   13578:	sub	r3, r3, #1
   1357c:	lsr	r3, r3, #8
   13580:	add	r6, r3, #1
   13584:	ldr	r3, [sp, #1088]	; 0x440
   13588:	lsl	r7, r6, #8
   1358c:	sub	r5, r3, r7
   13590:	ldr	r3, [sp, #8]
   13594:	mul	r4, r3, r5
   13598:	mov	r3, r4
   1359c:	bl	30e0 <InflateData>
   135a0:	cmp	r5, #0
   135a4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   135a8:	ldr	r1, [sp, #4]
   135ac:	add	r2, r5, r7
   135b0:	add	r3, r1, r6, lsl #11
   135b4:	add	r2, r1, r2, lsl #3
   135b8:	vldmia	r9!, {s14}
   135bc:	vcvt.f64.f32	d7, s14
   135c0:	vstmia	r3!, {d7}
   135c4:	cmp	r3, r2
   135c8:	bne	135b8 <ReadCompressedDoubleData+0xecc>
   135cc:	b	12868 <ReadCompressedDoubleData+0x17c>
   135d0:	cmp	r3, #256	; 0x100
   135d4:	ldr	r3, [sp, #8]
   135d8:	ble	13948 <ReadCompressedDoubleData+0x125c>
   135dc:	lsl	sl, r3, #8
   135e0:	ldr	r9, [sp, #4]
   135e4:	add	r4, sp, #1040	; 0x410
   135e8:	add	r7, sp, #24
   135ec:	add	r4, r4, #4
   135f0:	ldr	r3, [sp, #1088]	; 0x440
   135f4:	sub	r3, r3, #256	; 0x100
   135f8:	str	r3, [sp, #12]
   135fc:	mov	r3, sl
   13600:	mov	r2, r7
   13604:	mov	r1, fp
   13608:	mov	r0, r8
   1360c:	sub	r5, r7, #4
   13610:	bl	30e0 <InflateData>
   13614:	mov	r3, r5
   13618:	mov	r2, r9
   1361c:	ldr	r1, [r3, #4]!
   13620:	vmov	s14, r1
   13624:	cmp	r4, r3
   13628:	vcvt.f64.u32	d7, s14
   1362c:	vstmia	r2!, {d7}
   13630:	bne	1361c <ReadCompressedDoubleData+0xf30>
   13634:	ldr	r3, [sp, #12]
   13638:	add	r6, r6, #256	; 0x100
   1363c:	add	r9, r9, #2048	; 0x800
   13640:	cmp	r3, r6
   13644:	bgt	135fc <ReadCompressedDoubleData+0xf10>
   13648:	ldr	r3, [sp, #1088]	; 0x440
   1364c:	mov	r2, r7
   13650:	mov	r0, r8
   13654:	mov	r1, fp
   13658:	sub	r3, r3, #256	; 0x100
   1365c:	sub	r3, r3, #1
   13660:	lsr	r3, r3, #8
   13664:	add	r7, r3, #1
   13668:	ldr	r3, [sp, #1088]	; 0x440
   1366c:	lsl	r8, r7, #8
   13670:	sub	r6, r3, r8
   13674:	ldr	r3, [sp, #8]
   13678:	mul	r4, r3, r6
   1367c:	mov	r3, r4
   13680:	bl	30e0 <InflateData>
   13684:	cmp	r6, #0
   13688:	ble	12868 <ReadCompressedDoubleData+0x17c>
   1368c:	ldr	r1, [sp, #4]
   13690:	add	r2, r6, r8
   13694:	add	r3, r1, r7, lsl #11
   13698:	add	r2, r1, r2, lsl #3
   1369c:	ldr	r1, [r5, #4]!
   136a0:	vmov	s14, r1
   136a4:	vcvt.f64.u32	d7, s14
   136a8:	vstmia	r3!, {d7}
   136ac:	cmp	r2, r3
   136b0:	bne	1369c <ReadCompressedDoubleData+0xfb0>
   136b4:	b	12868 <ReadCompressedDoubleData+0x17c>
   136b8:	cmp	r3, #128	; 0x80
   136bc:	ldr	r3, [sp, #8]
   136c0:	ble	138a0 <ReadCompressedDoubleData+0x11b4>
   136c4:	lsl	r3, r3, #7
   136c8:	add	r7, sp, #24
   136cc:	add	r6, sp, #1040	; 0x410
   136d0:	str	r8, [sp, #12]
   136d4:	str	r3, [sp, #16]
   136d8:	ldr	r3, [sp, #1088]	; 0x440
   136dc:	sub	r3, r3, #128	; 0x80
   136e0:	str	r3, [sp, #20]
   136e4:	ldr	r3, [sp, #4]
   136e8:	mov	r8, r3
   136ec:	sub	r9, r7, #8
   136f0:	mov	r2, r7
   136f4:	ldr	r0, [sp, #12]
   136f8:	mov	r1, fp
   136fc:	mov	r4, r9
   13700:	ldr	r3, [sp, #16]
   13704:	mov	r5, r8
   13708:	bl	30e0 <InflateData>
   1370c:	ldrd	r0, [r4, #8]!
   13710:	bl	4e0d0 <__aeabi_ul2d>
   13714:	strd	r0, [r5], #8
   13718:	cmp	r4, r6
   1371c:	bne	1370c <ReadCompressedDoubleData+0x1020>
   13720:	ldr	r3, [sp, #20]
   13724:	add	sl, sl, #128	; 0x80
   13728:	add	r8, r8, #1024	; 0x400
   1372c:	cmp	r3, sl
   13730:	bgt	136ec <ReadCompressedDoubleData+0x1000>
   13734:	mov	r2, r7
   13738:	ldr	r8, [sp, #12]
   1373c:	mov	r1, fp
   13740:	ldr	r3, [sp, #1088]	; 0x440
   13744:	mov	r0, r8
   13748:	sub	r5, r3, #129	; 0x81
   1374c:	lsr	r5, r5, #7
   13750:	add	r5, r5, #1
   13754:	lsl	r7, r5, #7
   13758:	sub	r6, r3, r7
   1375c:	ldr	r3, [sp, #8]
   13760:	mul	r4, r3, r6
   13764:	mov	r3, r4
   13768:	bl	30e0 <InflateData>
   1376c:	cmp	r6, #0
   13770:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13774:	ldr	r3, [sp, #4]
   13778:	add	r6, r6, r7
   1377c:	add	r5, r3, r5, lsl #10
   13780:	add	r6, r3, r6, lsl #3
   13784:	ldrd	r0, [r9, #8]!
   13788:	bl	4e0d0 <__aeabi_ul2d>
   1378c:	strd	r0, [r5], #8
   13790:	cmp	r5, r6
   13794:	bne	13784 <ReadCompressedDoubleData+0x1098>
   13798:	b	12868 <ReadCompressedDoubleData+0x17c>
   1379c:	ldr	r2, [sp, #1088]	; 0x440
   137a0:	add	r5, sp, #24
   137a4:	mov	r1, fp
   137a8:	mov	r0, r8
   137ac:	mul	r4, r3, r2
   137b0:	mov	r2, r5
   137b4:	mov	r3, r4
   137b8:	bl	30e0 <InflateData>
   137bc:	ldr	r3, [sp, #1088]	; 0x440
   137c0:	cmp	r3, #0
   137c4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   137c8:	ldr	r3, [sp, #4]
   137cc:	sub	r2, r5, #1
   137d0:	ldr	r1, [sp, #1088]	; 0x440
   137d4:	add	r1, r3, r1, lsl #3
   137d8:	ldrb	r0, [r2, #1]!
   137dc:	vmov	s14, r0
   137e0:	vcvt.f64.u32	d7, s14
   137e4:	vstmia	r3!, {d7}
   137e8:	cmp	r1, r3
   137ec:	bne	137d8 <ReadCompressedDoubleData+0x10ec>
   137f0:	b	12868 <ReadCompressedDoubleData+0x17c>
   137f4:	ldr	r2, [sp, #1088]	; 0x440
   137f8:	add	r5, sp, #24
   137fc:	mov	r1, fp
   13800:	mov	r0, r8
   13804:	mul	r4, r3, r2
   13808:	mov	r2, r5
   1380c:	mov	r3, r4
   13810:	bl	30e0 <InflateData>
   13814:	ldr	r3, [sp, #1088]	; 0x440
   13818:	cmp	r3, #0
   1381c:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13820:	ldr	r3, [sp, #4]
   13824:	sub	r2, r5, #1
   13828:	ldr	r1, [sp, #1088]	; 0x440
   1382c:	add	r1, r3, r1, lsl #3
   13830:	ldrsb	r0, [r2, #1]!
   13834:	vmov	s14, r0
   13838:	vcvt.f64.s32	d7, s14
   1383c:	vstmia	r3!, {d7}
   13840:	cmp	r3, r1
   13844:	bne	13830 <ReadCompressedDoubleData+0x1144>
   13848:	b	12868 <ReadCompressedDoubleData+0x17c>
   1384c:	ldr	r2, [sp, #1088]	; 0x440
   13850:	add	r5, sp, #24
   13854:	mov	r1, fp
   13858:	mov	r0, r8
   1385c:	mul	r4, r3, r2
   13860:	mov	r2, r5
   13864:	mov	r3, r4
   13868:	bl	30e0 <InflateData>
   1386c:	ldr	r3, [sp, #1088]	; 0x440
   13870:	cmp	r3, #0
   13874:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13878:	ldr	r6, [sp, #4]
   1387c:	add	r7, r6, r3, lsl #3
   13880:	mov	r0, r5
   13884:	add	r5, r5, #8
   13888:	bl	1858 <Mat_uint64Swap>
   1388c:	bl	4e0d0 <__aeabi_ul2d>
   13890:	strd	r0, [r6], #8
   13894:	cmp	r6, r7
   13898:	bne	13880 <ReadCompressedDoubleData+0x1194>
   1389c:	b	12868 <ReadCompressedDoubleData+0x17c>
   138a0:	ldr	r2, [sp, #1088]	; 0x440
   138a4:	add	r6, sp, #24
   138a8:	mov	r1, fp
   138ac:	mov	r0, r8
   138b0:	mul	r4, r3, r2
   138b4:	mov	r2, r6
   138b8:	mov	r3, r4
   138bc:	bl	30e0 <InflateData>
   138c0:	ldr	r3, [sp, #1088]	; 0x440
   138c4:	cmp	r3, #0
   138c8:	ble	12868 <ReadCompressedDoubleData+0x17c>
   138cc:	ldr	r5, [sp, #4]
   138d0:	sub	r6, r6, #8
   138d4:	add	r7, r5, r3, lsl #3
   138d8:	ldrd	r0, [r6, #8]!
   138dc:	bl	4e0d0 <__aeabi_ul2d>
   138e0:	strd	r0, [r5], #8
   138e4:	cmp	r5, r7
   138e8:	bne	138d8 <ReadCompressedDoubleData+0x11ec>
   138ec:	b	12868 <ReadCompressedDoubleData+0x17c>
   138f0:	ldr	r2, [sp, #1088]	; 0x440
   138f4:	add	r5, sp, #24
   138f8:	mov	r1, fp
   138fc:	mov	r0, r8
   13900:	mul	r4, r3, r2
   13904:	mov	r2, r5
   13908:	mov	r3, r4
   1390c:	bl	30e0 <InflateData>
   13910:	ldr	r3, [sp, #1088]	; 0x440
   13914:	cmp	r3, #0
   13918:	ble	12868 <ReadCompressedDoubleData+0x17c>
   1391c:	ldr	r6, [sp, #4]
   13920:	add	r7, r6, r3, lsl #3
   13924:	mov	r0, r5
   13928:	add	r5, r5, #4
   1392c:	bl	18f8 <Mat_uint32Swap>
   13930:	vmov	s15, r0
   13934:	vcvt.f64.u32	d7, s15
   13938:	vstmia	r6!, {d7}
   1393c:	cmp	r7, r6
   13940:	bne	13924 <ReadCompressedDoubleData+0x1238>
   13944:	b	12868 <ReadCompressedDoubleData+0x17c>
   13948:	ldr	r2, [sp, #1088]	; 0x440
   1394c:	add	r5, sp, #24
   13950:	mov	r1, fp
   13954:	mov	r0, r8
   13958:	mul	r4, r3, r2
   1395c:	mov	r2, r5
   13960:	mov	r3, r4
   13964:	bl	30e0 <InflateData>
   13968:	ldr	r3, [sp, #1088]	; 0x440
   1396c:	cmp	r3, #0
   13970:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13974:	ldr	r3, [sp, #4]
   13978:	sub	r2, r5, #4
   1397c:	ldr	r1, [sp, #1088]	; 0x440
   13980:	add	r1, r3, r1, lsl #3
   13984:	ldr	r0, [r2, #4]!
   13988:	vmov	s14, r0
   1398c:	vcvt.f64.u32	d7, s14
   13990:	vstmia	r3!, {d7}
   13994:	cmp	r1, r3
   13998:	bne	13984 <ReadCompressedDoubleData+0x1298>
   1399c:	b	12868 <ReadCompressedDoubleData+0x17c>
   139a0:	ldr	r2, [sp, #1088]	; 0x440
   139a4:	add	r5, sp, #24
   139a8:	mov	r1, fp
   139ac:	mov	r0, r8
   139b0:	mul	r4, r3, r2
   139b4:	mov	r2, r5
   139b8:	mov	r3, r4
   139bc:	bl	30e0 <InflateData>
   139c0:	ldr	r3, [sp, #1088]	; 0x440
   139c4:	cmp	r3, #0
   139c8:	ble	12868 <ReadCompressedDoubleData+0x17c>
   139cc:	ldr	r6, [sp, #4]
   139d0:	add	r7, r6, r3, lsl #3
   139d4:	mov	r0, r5
   139d8:	add	r5, r5, #4
   139dc:	bl	1974 <Mat_floatSwap>
   139e0:	vcvt.f64.f32	d0, s0
   139e4:	vstmia	r6!, {d0}
   139e8:	cmp	r7, r6
   139ec:	bne	139d4 <ReadCompressedDoubleData+0x12e8>
   139f0:	b	12868 <ReadCompressedDoubleData+0x17c>
   139f4:	ldr	r2, [sp, #1088]	; 0x440
   139f8:	add	r5, sp, #24
   139fc:	mov	r1, fp
   13a00:	mov	r0, r8
   13a04:	mul	r4, r3, r2
   13a08:	mov	r2, r5
   13a0c:	mov	r3, r4
   13a10:	bl	30e0 <InflateData>
   13a14:	ldr	r3, [sp, #1088]	; 0x440
   13a18:	cmp	r3, #0
   13a1c:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13a20:	ldr	r3, [sp, #4]
   13a24:	mov	r2, r5
   13a28:	ldr	r1, [sp, #1088]	; 0x440
   13a2c:	add	r1, r3, r1, lsl #3
   13a30:	vldmia	r2!, {s14}
   13a34:	vcvt.f64.f32	d7, s14
   13a38:	vstmia	r3!, {d7}
   13a3c:	cmp	r3, r1
   13a40:	bne	13a30 <ReadCompressedDoubleData+0x1344>
   13a44:	b	12868 <ReadCompressedDoubleData+0x17c>
   13a48:	ldr	r2, [sp, #1088]	; 0x440
   13a4c:	add	r5, sp, #24
   13a50:	mov	r1, fp
   13a54:	mov	r0, r8
   13a58:	mul	r4, r3, r2
   13a5c:	mov	r2, r5
   13a60:	mov	r3, r4
   13a64:	bl	30e0 <InflateData>
   13a68:	ldr	r3, [sp, #1088]	; 0x440
   13a6c:	cmp	r3, #0
   13a70:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13a74:	ldr	r6, [sp, #4]
   13a78:	add	r7, r6, r3, lsl #3
   13a7c:	mov	r0, r5
   13a80:	add	r5, r5, #8
   13a84:	bl	17ec <Mat_int64Swap>
   13a88:	bl	4e0e4 <__aeabi_l2d>
   13a8c:	strd	r0, [r6], #8
   13a90:	cmp	r6, r7
   13a94:	bne	13a7c <ReadCompressedDoubleData+0x1390>
   13a98:	b	12868 <ReadCompressedDoubleData+0x17c>
   13a9c:	ldr	r2, [sp, #1088]	; 0x440
   13aa0:	add	r6, sp, #24
   13aa4:	mov	r1, fp
   13aa8:	mov	r0, r8
   13aac:	mul	r4, r3, r2
   13ab0:	mov	r2, r6
   13ab4:	mov	r3, r4
   13ab8:	bl	30e0 <InflateData>
   13abc:	ldr	r3, [sp, #1088]	; 0x440
   13ac0:	cmp	r3, #0
   13ac4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13ac8:	ldr	r5, [sp, #4]
   13acc:	sub	r6, r6, #8
   13ad0:	add	r7, r5, r3, lsl #3
   13ad4:	ldrd	r0, [r6, #8]!
   13ad8:	bl	4e0e4 <__aeabi_l2d>
   13adc:	strd	r0, [r5], #8
   13ae0:	cmp	r5, r7
   13ae4:	bne	13ad4 <ReadCompressedDoubleData+0x13e8>
   13ae8:	b	12868 <ReadCompressedDoubleData+0x17c>
   13aec:	ldr	r2, [sp, #1088]	; 0x440
   13af0:	add	r5, sp, #24
   13af4:	mov	r1, fp
   13af8:	mov	r0, r8
   13afc:	mul	r4, r3, r2
   13b00:	mov	r2, r5
   13b04:	mov	r3, r4
   13b08:	bl	30e0 <InflateData>
   13b0c:	ldr	r3, [sp, #1088]	; 0x440
   13b10:	cmp	r3, #0
   13b14:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13b18:	ldr	r6, [sp, #4]
   13b1c:	add	r7, r6, r3, lsl #3
   13b20:	mov	r0, r5
   13b24:	add	r5, r5, #2
   13b28:	bl	1950 <Mat_uint16Swap>
   13b2c:	vmov	s15, r0
   13b30:	vcvt.f64.u32	d7, s15
   13b34:	vstmia	r6!, {d7}
   13b38:	cmp	r7, r6
   13b3c:	bne	13b20 <ReadCompressedDoubleData+0x1434>
   13b40:	b	12868 <ReadCompressedDoubleData+0x17c>
   13b44:	ldr	r2, [sp, #1088]	; 0x440
   13b48:	add	r5, sp, #24
   13b4c:	mov	r1, fp
   13b50:	mov	r0, r8
   13b54:	mul	r4, r3, r2
   13b58:	mov	r2, r5
   13b5c:	mov	r3, r4
   13b60:	bl	30e0 <InflateData>
   13b64:	ldr	r3, [sp, #1088]	; 0x440
   13b68:	cmp	r3, #0
   13b6c:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13b70:	ldr	r3, [sp, #4]
   13b74:	sub	r2, r5, #2
   13b78:	ldr	r1, [sp, #1088]	; 0x440
   13b7c:	add	r1, r3, r1, lsl #3
   13b80:	ldrh	r0, [r2, #2]!
   13b84:	vmov	s14, r0
   13b88:	vcvt.f64.u32	d7, s14
   13b8c:	vstmia	r3!, {d7}
   13b90:	cmp	r1, r3
   13b94:	bne	13b80 <ReadCompressedDoubleData+0x1494>
   13b98:	b	12868 <ReadCompressedDoubleData+0x17c>
   13b9c:	ldr	r2, [sp, #1088]	; 0x440
   13ba0:	add	r5, sp, #24
   13ba4:	mov	r1, fp
   13ba8:	mov	r0, r8
   13bac:	mul	r4, r3, r2
   13bb0:	mov	r2, r5
   13bb4:	mov	r3, r4
   13bb8:	bl	30e0 <InflateData>
   13bbc:	ldr	r3, [sp, #1088]	; 0x440
   13bc0:	cmp	r3, #0
   13bc4:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13bc8:	ldr	r6, [sp, #4]
   13bcc:	add	r7, r6, r3, lsl #3
   13bd0:	mov	r0, r5
   13bd4:	add	r5, r5, #4
   13bd8:	bl	18c4 <Mat_int32Swap>
   13bdc:	vmov	s15, r0
   13be0:	vcvt.f64.s32	d7, s15
   13be4:	vstmia	r6!, {d7}
   13be8:	cmp	r7, r6
   13bec:	bne	13bd0 <ReadCompressedDoubleData+0x14e4>
   13bf0:	b	12868 <ReadCompressedDoubleData+0x17c>
   13bf4:	ldr	r2, [sp, #1088]	; 0x440
   13bf8:	add	r5, sp, #24
   13bfc:	mov	r1, fp
   13c00:	mov	r0, r8
   13c04:	mul	r4, r3, r2
   13c08:	mov	r2, r5
   13c0c:	mov	r3, r4
   13c10:	bl	30e0 <InflateData>
   13c14:	ldr	r3, [sp, #1088]	; 0x440
   13c18:	cmp	r3, #0
   13c1c:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13c20:	ldr	r3, [sp, #4]
   13c24:	sub	r2, r5, #4
   13c28:	ldr	r1, [sp, #1088]	; 0x440
   13c2c:	add	r1, r3, r1, lsl #3
   13c30:	ldr	r0, [r2, #4]!
   13c34:	vmov	s14, r0
   13c38:	vcvt.f64.s32	d7, s14
   13c3c:	vstmia	r3!, {d7}
   13c40:	cmp	r1, r3
   13c44:	bne	13c30 <ReadCompressedDoubleData+0x1544>
   13c48:	b	12868 <ReadCompressedDoubleData+0x17c>
   13c4c:	ldr	r2, [sp, #1088]	; 0x440
   13c50:	add	r5, sp, #24
   13c54:	mov	r1, fp
   13c58:	mov	r0, r8
   13c5c:	mul	r4, r3, r2
   13c60:	mov	r2, r5
   13c64:	mov	r3, r4
   13c68:	bl	30e0 <InflateData>
   13c6c:	ldr	r3, [sp, #1088]	; 0x440
   13c70:	cmp	r3, #0
   13c74:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13c78:	ldr	r6, [sp, #4]
   13c7c:	add	r7, r6, r3, lsl #3
   13c80:	mov	r0, r5
   13c84:	add	r5, r5, #2
   13c88:	bl	192c <Mat_int16Swap>
   13c8c:	vmov	s15, r0
   13c90:	vcvt.f64.s32	d7, s15
   13c94:	vstmia	r6!, {d7}
   13c98:	cmp	r7, r6
   13c9c:	bne	13c80 <ReadCompressedDoubleData+0x1594>
   13ca0:	b	12868 <ReadCompressedDoubleData+0x17c>
   13ca4:	ldr	r2, [sp, #1088]	; 0x440
   13ca8:	add	r5, sp, #24
   13cac:	mov	r1, fp
   13cb0:	mov	r0, r8
   13cb4:	mul	r4, r3, r2
   13cb8:	mov	r2, r5
   13cbc:	mov	r3, r4
   13cc0:	bl	30e0 <InflateData>
   13cc4:	ldr	r3, [sp, #1088]	; 0x440
   13cc8:	cmp	r3, #0
   13ccc:	ble	12868 <ReadCompressedDoubleData+0x17c>
   13cd0:	ldr	r3, [sp, #4]
   13cd4:	sub	r2, r5, #2
   13cd8:	ldr	r1, [sp, #1088]	; 0x440
   13cdc:	add	r1, r3, r1, lsl #3
   13ce0:	ldrsh	r0, [r2, #2]!
   13ce4:	vmov	s14, r0
   13ce8:	vcvt.f64.s32	d7, s14
   13cec:	vstmia	r3!, {d7}
   13cf0:	cmp	r1, r3
   13cf4:	bne	13ce0 <ReadCompressedDoubleData+0x15f4>
   13cf8:	b	12868 <ReadCompressedDoubleData+0x17c>

00013cfc <ReadSingleData>:
   13cfc:	cmp	r1, #0
   13d00:	cmpne	r0, #0
   13d04:	beq	13d18 <ReadSingleData+0x1c>
   13d08:	ldr	ip, [r0]
   13d0c:	cmp	ip, #0
   13d10:	beq	13d18 <ReadSingleData+0x1c>
   13d14:	b	4dc8 <ReadSingleData.part.1>
   13d18:	mov	r0, #0
   13d1c:	bx	lr

00013d20 <ReadCompressedSingleData>:
   13d20:	cmp	r2, #0
   13d24:	clz	ip, r1
   13d28:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13d2c:	lsr	ip, ip, #5
   13d30:	moveq	ip, #1
   13d34:	cmp	r0, #0
   13d38:	moveq	ip, #1
   13d3c:	strd	r6, [sp, #8]
   13d40:	cmp	ip, #0
   13d44:	strd	r8, [sp, #16]
   13d48:	str	sl, [sp, #24]
   13d4c:	movne	r0, #0
   13d50:	str	lr, [sp, #28]
   13d54:	sub	sp, sp, #8
   13d58:	ldr	r5, [sp, #40]	; 0x28
   13d5c:	beq	13d7c <ReadCompressedSingleData+0x5c>
   13d60:	add	sp, sp, #8
   13d64:	ldrd	r4, [sp]
   13d68:	ldrd	r6, [sp, #8]
   13d6c:	ldrd	r8, [sp, #16]
   13d70:	ldr	sl, [sp, #24]
   13d74:	add	sp, sp, #28
   13d78:	pop	{pc}		; (ldr pc, [sp], #4)
   13d7c:	mov	r4, r3
   13d80:	mov	r8, r0
   13d84:	mov	r0, r3
   13d88:	mov	r6, r2
   13d8c:	mov	r9, r1
   13d90:	bl	1598 <Mat_SizeOf@plt>
   13d94:	sub	r3, r4, #1
   13d98:	mov	r7, r0
   13d9c:	cmp	r3, #8
   13da0:	addls	pc, pc, r3, lsl #2
   13da4:	b	14024 <ReadCompressedSingleData+0x304>
   13da8:	b	13fe4 <ReadCompressedSingleData+0x2c4>
   13dac:	b	13fa4 <ReadCompressedSingleData+0x284>
   13db0:	b	13f54 <ReadCompressedSingleData+0x234>
   13db4:	b	13f04 <ReadCompressedSingleData+0x1e4>
   13db8:	b	13eb4 <ReadCompressedSingleData+0x194>
   13dbc:	b	13e64 <ReadCompressedSingleData+0x144>
   13dc0:	b	13e1c <ReadCompressedSingleData+0xfc>
   13dc4:	b	14024 <ReadCompressedSingleData+0x304>
   13dc8:	b	13dcc <ReadCompressedSingleData+0xac>
   13dcc:	ldr	r3, [r8, #20]
   13dd0:	cmp	r3, #0
   13dd4:	beq	141ac <ReadCompressedSingleData+0x48c>
   13dd8:	cmp	r5, #0
   13ddc:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13de0:	add	sl, r6, r5, lsl #2
   13de4:	mov	r4, sp
   13de8:	mov	r3, r7
   13dec:	mov	r2, r4
   13df0:	mov	r1, r9
   13df4:	mov	r0, r8
   13df8:	bl	30e0 <InflateData>
   13dfc:	mov	r0, r4
   13e00:	bl	19a4 <Mat_doubleSwap>
   13e04:	vcvt.f32.f64	s0, d0
   13e08:	vstmia	r6!, {s0}
   13e0c:	cmp	r6, sl
   13e10:	bne	13de8 <ReadCompressedSingleData+0xc8>
   13e14:	mul	r0, r7, r5
   13e18:	b	13d60 <ReadCompressedSingleData+0x40>
   13e1c:	ldr	r3, [r8, #20]
   13e20:	cmp	r3, #0
   13e24:	beq	14174 <ReadCompressedSingleData+0x454>
   13e28:	cmp	r5, #0
   13e2c:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13e30:	add	sl, r6, r5, lsl #2
   13e34:	mov	r4, sp
   13e38:	mov	r3, r7
   13e3c:	mov	r2, r4
   13e40:	mov	r1, r9
   13e44:	mov	r0, r8
   13e48:	bl	30e0 <InflateData>
   13e4c:	mov	r0, r4
   13e50:	bl	1974 <Mat_floatSwap>
   13e54:	vstmia	r6!, {s0}
   13e58:	cmp	r6, sl
   13e5c:	bne	13e38 <ReadCompressedSingleData+0x118>
   13e60:	b	13e14 <ReadCompressedSingleData+0xf4>
   13e64:	ldr	r3, [r8, #20]
   13e68:	cmp	r3, #0
   13e6c:	beq	14138 <ReadCompressedSingleData+0x418>
   13e70:	cmp	r5, #0
   13e74:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13e78:	add	sl, r6, r5, lsl #2
   13e7c:	mov	r4, sp
   13e80:	mov	r3, r7
   13e84:	mov	r2, r4
   13e88:	mov	r1, r9
   13e8c:	mov	r0, r8
   13e90:	bl	30e0 <InflateData>
   13e94:	mov	r0, r4
   13e98:	bl	18f8 <Mat_uint32Swap>
   13e9c:	vmov	s15, r0
   13ea0:	vcvt.f32.u32	s15, s15
   13ea4:	vstmia	r6!, {s15}
   13ea8:	cmp	sl, r6
   13eac:	bne	13e80 <ReadCompressedSingleData+0x160>
   13eb0:	b	13e14 <ReadCompressedSingleData+0xf4>
   13eb4:	ldr	r3, [r8, #20]
   13eb8:	cmp	r3, #0
   13ebc:	beq	140fc <ReadCompressedSingleData+0x3dc>
   13ec0:	cmp	r5, #0
   13ec4:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13ec8:	add	sl, r6, r5, lsl #2
   13ecc:	mov	r4, sp
   13ed0:	mov	r3, r7
   13ed4:	mov	r2, r4
   13ed8:	mov	r1, r9
   13edc:	mov	r0, r8
   13ee0:	bl	30e0 <InflateData>
   13ee4:	mov	r0, r4
   13ee8:	bl	18c4 <Mat_int32Swap>
   13eec:	vmov	s15, r0
   13ef0:	vcvt.f32.s32	s15, s15
   13ef4:	vstmia	r6!, {s15}
   13ef8:	cmp	sl, r6
   13efc:	bne	13ed0 <ReadCompressedSingleData+0x1b0>
   13f00:	b	13e14 <ReadCompressedSingleData+0xf4>
   13f04:	ldr	r3, [r8, #20]
   13f08:	cmp	r3, #0
   13f0c:	beq	140bc <ReadCompressedSingleData+0x39c>
   13f10:	cmp	r5, #0
   13f14:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13f18:	add	sl, r6, r5, lsl #2
   13f1c:	mov	r4, sp
   13f20:	mov	r3, r7
   13f24:	mov	r2, r4
   13f28:	mov	r1, r9
   13f2c:	mov	r0, r8
   13f30:	bl	30e0 <InflateData>
   13f34:	mov	r0, r4
   13f38:	bl	1950 <Mat_uint16Swap>
   13f3c:	vmov	s15, r0
   13f40:	vcvt.f32.u32	s15, s15
   13f44:	vstmia	r6!, {s15}
   13f48:	cmp	sl, r6
   13f4c:	bne	13f20 <ReadCompressedSingleData+0x200>
   13f50:	b	13e14 <ReadCompressedSingleData+0xf4>
   13f54:	ldr	r3, [r8, #20]
   13f58:	cmp	r3, #0
   13f5c:	beq	1407c <ReadCompressedSingleData+0x35c>
   13f60:	cmp	r5, #0
   13f64:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13f68:	add	sl, r6, r5, lsl #2
   13f6c:	mov	r4, sp
   13f70:	mov	r3, r7
   13f74:	mov	r2, r4
   13f78:	mov	r1, r9
   13f7c:	mov	r0, r8
   13f80:	bl	30e0 <InflateData>
   13f84:	mov	r0, r4
   13f88:	bl	192c <Mat_int16Swap>
   13f8c:	vmov	s15, r0
   13f90:	vcvt.f32.s32	s15, s15
   13f94:	vstmia	r6!, {s15}
   13f98:	cmp	sl, r6
   13f9c:	bne	13f70 <ReadCompressedSingleData+0x250>
   13fa0:	b	13e14 <ReadCompressedSingleData+0xf4>
   13fa4:	cmp	r5, #0
   13fa8:	movgt	r4, sp
   13fac:	addgt	sl, r6, r5, lsl #2
   13fb0:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13fb4:	mov	r3, r7
   13fb8:	mov	r2, r4
   13fbc:	mov	r1, r9
   13fc0:	mov	r0, r8
   13fc4:	bl	30e0 <InflateData>
   13fc8:	ldrb	r3, [sp]
   13fcc:	vmov	s15, r3
   13fd0:	vcvt.f32.u32	s15, s15
   13fd4:	vstmia	r6!, {s15}
   13fd8:	cmp	r6, sl
   13fdc:	bne	13fb4 <ReadCompressedSingleData+0x294>
   13fe0:	b	13e14 <ReadCompressedSingleData+0xf4>
   13fe4:	cmp	r5, #0
   13fe8:	movgt	r4, sp
   13fec:	addgt	sl, r6, r5, lsl #2
   13ff0:	ble	13e14 <ReadCompressedSingleData+0xf4>
   13ff4:	mov	r3, r7
   13ff8:	mov	r2, r4
   13ffc:	mov	r1, r9
   14000:	mov	r0, r8
   14004:	bl	30e0 <InflateData>
   14008:	ldrsb	r3, [sp]
   1400c:	vmov	s15, r3
   14010:	vcvt.f32.s32	s15, s15
   14014:	vstmia	r6!, {s15}
   14018:	cmp	sl, r6
   1401c:	bne	13ff4 <ReadCompressedSingleData+0x2d4>
   14020:	b	13e14 <ReadCompressedSingleData+0xf4>
   14024:	cmp	r4, #12
   14028:	beq	141e8 <ReadCompressedSingleData+0x4c8>
   1402c:	cmp	r4, #13
   14030:	bne	13e14 <ReadCompressedSingleData+0xf4>
   14034:	ldr	r3, [r8, #20]
   14038:	cmp	r3, #0
   1403c:	bne	14230 <ReadCompressedSingleData+0x510>
   14040:	cmp	r5, #0
   14044:	movgt	r4, sp
   14048:	addgt	sl, r6, r5, lsl #2
   1404c:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14050:	mov	r3, r7
   14054:	mov	r2, r4
   14058:	mov	r1, r9
   1405c:	mov	r0, r8
   14060:	bl	30e0 <InflateData>
   14064:	ldrd	r0, [sp]
   14068:	bl	4e308 <__aeabi_ul2f>
   1406c:	str	r0, [r6], #4
   14070:	cmp	sl, r6
   14074:	bne	14050 <ReadCompressedSingleData+0x330>
   14078:	b	13e14 <ReadCompressedSingleData+0xf4>
   1407c:	cmp	r5, #0
   14080:	movgt	r4, sp
   14084:	addgt	sl, r6, r5, lsl #2
   14088:	ble	13e14 <ReadCompressedSingleData+0xf4>
   1408c:	mov	r3, r7
   14090:	mov	r2, r4
   14094:	mov	r1, r9
   14098:	mov	r0, r8
   1409c:	bl	30e0 <InflateData>
   140a0:	ldrsh	r3, [sp]
   140a4:	vmov	s15, r3
   140a8:	vcvt.f32.s32	s15, s15
   140ac:	vstmia	r6!, {s15}
   140b0:	cmp	sl, r6
   140b4:	bne	1408c <ReadCompressedSingleData+0x36c>
   140b8:	b	13e14 <ReadCompressedSingleData+0xf4>
   140bc:	cmp	r5, #0
   140c0:	movgt	r4, sp
   140c4:	addgt	sl, r6, r5, lsl #2
   140c8:	ble	13e14 <ReadCompressedSingleData+0xf4>
   140cc:	mov	r3, r7
   140d0:	mov	r2, r4
   140d4:	mov	r1, r9
   140d8:	mov	r0, r8
   140dc:	bl	30e0 <InflateData>
   140e0:	ldrh	r3, [sp]
   140e4:	vmov	s15, r3
   140e8:	vcvt.f32.u32	s15, s15
   140ec:	vstmia	r6!, {s15}
   140f0:	cmp	sl, r6
   140f4:	bne	140cc <ReadCompressedSingleData+0x3ac>
   140f8:	b	13e14 <ReadCompressedSingleData+0xf4>
   140fc:	cmp	r5, #0
   14100:	movgt	r4, sp
   14104:	addgt	sl, r6, r5, lsl #2
   14108:	ble	13e14 <ReadCompressedSingleData+0xf4>
   1410c:	mov	r3, r7
   14110:	mov	r2, r4
   14114:	mov	r1, r9
   14118:	mov	r0, r8
   1411c:	bl	30e0 <InflateData>
   14120:	vldr	s15, [sp]
   14124:	vcvt.f32.s32	s15, s15
   14128:	vstmia	r6!, {s15}
   1412c:	cmp	sl, r6
   14130:	bne	1410c <ReadCompressedSingleData+0x3ec>
   14134:	b	13e14 <ReadCompressedSingleData+0xf4>
   14138:	cmp	r5, #0
   1413c:	movgt	r4, sp
   14140:	addgt	sl, r6, r5, lsl #2
   14144:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14148:	mov	r3, r7
   1414c:	mov	r2, r4
   14150:	mov	r1, r9
   14154:	mov	r0, r8
   14158:	bl	30e0 <InflateData>
   1415c:	vldr	s15, [sp]
   14160:	vcvt.f32.u32	s15, s15
   14164:	vstmia	r6!, {s15}
   14168:	cmp	sl, r6
   1416c:	bne	14148 <ReadCompressedSingleData+0x428>
   14170:	b	13e14 <ReadCompressedSingleData+0xf4>
   14174:	cmp	r5, #0
   14178:	movgt	r4, sp
   1417c:	addgt	sl, r6, r5, lsl #2
   14180:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14184:	mov	r3, r7
   14188:	mov	r2, r4
   1418c:	mov	r1, r9
   14190:	mov	r0, r8
   14194:	bl	30e0 <InflateData>
   14198:	ldr	r3, [sp]
   1419c:	str	r3, [r6], #4
   141a0:	cmp	r6, sl
   141a4:	bne	14184 <ReadCompressedSingleData+0x464>
   141a8:	b	13e14 <ReadCompressedSingleData+0xf4>
   141ac:	cmp	r5, #0
   141b0:	movgt	r4, sp
   141b4:	addgt	sl, r6, r5, lsl #2
   141b8:	ble	13e14 <ReadCompressedSingleData+0xf4>
   141bc:	mov	r3, r7
   141c0:	mov	r2, r4
   141c4:	mov	r1, r9
   141c8:	mov	r0, r8
   141cc:	bl	30e0 <InflateData>
   141d0:	vldr	d7, [sp]
   141d4:	vcvt.f32.f64	s14, d7
   141d8:	vstmia	r6!, {s14}
   141dc:	cmp	r6, sl
   141e0:	bne	141bc <ReadCompressedSingleData+0x49c>
   141e4:	b	13e14 <ReadCompressedSingleData+0xf4>
   141e8:	ldr	r3, [r8, #20]
   141ec:	cmp	r3, #0
   141f0:	bne	14270 <ReadCompressedSingleData+0x550>
   141f4:	cmp	r5, #0
   141f8:	movgt	r4, sp
   141fc:	addgt	sl, r6, r5, lsl #2
   14200:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14204:	mov	r3, r7
   14208:	mov	r2, r4
   1420c:	mov	r1, r9
   14210:	mov	r0, r8
   14214:	bl	30e0 <InflateData>
   14218:	ldrd	r0, [sp]
   1421c:	bl	4e318 <__aeabi_l2f>
   14220:	str	r0, [r6], #4
   14224:	cmp	r6, sl
   14228:	bne	14204 <ReadCompressedSingleData+0x4e4>
   1422c:	b	13e14 <ReadCompressedSingleData+0xf4>
   14230:	cmp	r5, #0
   14234:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14238:	add	sl, r6, r5, lsl #2
   1423c:	mov	r4, sp
   14240:	mov	r3, r7
   14244:	mov	r2, r4
   14248:	mov	r1, r9
   1424c:	mov	r0, r8
   14250:	bl	30e0 <InflateData>
   14254:	mov	r0, r4
   14258:	bl	1858 <Mat_uint64Swap>
   1425c:	bl	4e308 <__aeabi_ul2f>
   14260:	str	r0, [r6], #4
   14264:	cmp	sl, r6
   14268:	bne	14240 <ReadCompressedSingleData+0x520>
   1426c:	b	13e14 <ReadCompressedSingleData+0xf4>
   14270:	cmp	r5, #0
   14274:	ble	13e14 <ReadCompressedSingleData+0xf4>
   14278:	add	sl, r6, r5, lsl #2
   1427c:	mov	r4, sp
   14280:	mov	r3, r7
   14284:	mov	r2, r4
   14288:	mov	r1, r9
   1428c:	mov	r0, r8
   14290:	bl	30e0 <InflateData>
   14294:	mov	r0, r4
   14298:	bl	17ec <Mat_int64Swap>
   1429c:	bl	4e318 <__aeabi_l2f>
   142a0:	str	r0, [r6], #4
   142a4:	cmp	sl, r6
   142a8:	bne	14280 <ReadCompressedSingleData+0x560>
   142ac:	b	13e14 <ReadCompressedSingleData+0xf4>

000142b0 <ReadInt64Data>:
   142b0:	cmp	r1, #0
   142b4:	cmpne	r0, #0
   142b8:	beq	142cc <ReadInt64Data+0x1c>
   142bc:	ldr	ip, [r0]
   142c0:	cmp	ip, #0
   142c4:	beq	142cc <ReadInt64Data+0x1c>
   142c8:	b	6618 <ReadInt64Data.part.3>
   142cc:	mov	r0, #0
   142d0:	bx	lr

000142d4 <ReadCompressedInt64Data>:
   142d4:	cmp	r2, #0
   142d8:	clz	ip, r1
   142dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142e0:	lsr	ip, ip, #5
   142e4:	moveq	ip, #1
   142e8:	cmp	r0, #0
   142ec:	moveq	ip, #1
   142f0:	strd	r6, [sp, #8]
   142f4:	cmp	ip, #0
   142f8:	strd	r8, [sp, #16]
   142fc:	strd	sl, [sp, #24]
   14300:	movne	r0, #0
   14304:	str	lr, [sp, #32]
   14308:	sub	sp, sp, #12
   1430c:	ldr	r7, [sp, #48]	; 0x30
   14310:	beq	14330 <ReadCompressedInt64Data+0x5c>
   14314:	add	sp, sp, #12
   14318:	ldrd	r4, [sp]
   1431c:	ldrd	r6, [sp, #8]
   14320:	ldrd	r8, [sp, #16]
   14324:	ldrd	sl, [sp, #24]
   14328:	add	sp, sp, #32
   1432c:	pop	{pc}		; (ldr pc, [sp], #4)
   14330:	mov	r6, r3
   14334:	mov	r8, r0
   14338:	mov	r0, r3
   1433c:	mov	r9, r2
   14340:	mov	r5, r1
   14344:	bl	1598 <Mat_SizeOf@plt>
   14348:	sub	r3, r6, #1
   1434c:	mov	r4, r0
   14350:	cmp	r3, #8
   14354:	addls	pc, pc, r3, lsl #2
   14358:	b	145d8 <ReadCompressedInt64Data+0x304>
   1435c:	b	1459c <ReadCompressedInt64Data+0x2c8>
   14360:	b	14560 <ReadCompressedInt64Data+0x28c>
   14364:	b	14510 <ReadCompressedInt64Data+0x23c>
   14368:	b	144c0 <ReadCompressedInt64Data+0x1ec>
   1436c:	b	14474 <ReadCompressedInt64Data+0x1a0>
   14370:	b	14424 <ReadCompressedInt64Data+0x150>
   14374:	b	143d4 <ReadCompressedInt64Data+0x100>
   14378:	b	145d8 <ReadCompressedInt64Data+0x304>
   1437c:	b	14380 <ReadCompressedInt64Data+0xac>
   14380:	ldr	r3, [r8, #20]
   14384:	cmp	r3, #0
   14388:	beq	14758 <ReadCompressedInt64Data+0x484>
   1438c:	cmp	r7, #0
   14390:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14394:	add	sl, r9, r7, lsl #3
   14398:	mov	r6, sp
   1439c:	mov	r3, r4
   143a0:	mov	r2, r6
   143a4:	mov	r1, r5
   143a8:	mov	r0, r8
   143ac:	bl	30e0 <InflateData>
   143b0:	mov	r0, r6
   143b4:	bl	19a4 <Mat_doubleSwap>
   143b8:	vmov	r0, r1, d0
   143bc:	bl	4e3c0 <__aeabi_d2lz>
   143c0:	strd	r0, [r9], #8
   143c4:	cmp	r9, sl
   143c8:	bne	1439c <ReadCompressedInt64Data+0xc8>
   143cc:	mul	r0, r4, r7
   143d0:	b	14314 <ReadCompressedInt64Data+0x40>
   143d4:	ldr	r3, [r8, #20]
   143d8:	cmp	r3, #0
   143dc:	beq	1471c <ReadCompressedInt64Data+0x448>
   143e0:	cmp	r7, #0
   143e4:	ble	143cc <ReadCompressedInt64Data+0xf8>
   143e8:	add	sl, r9, r7, lsl #3
   143ec:	mov	r6, sp
   143f0:	mov	r3, r4
   143f4:	mov	r2, r6
   143f8:	mov	r1, r5
   143fc:	mov	r0, r8
   14400:	bl	30e0 <InflateData>
   14404:	mov	r0, r6
   14408:	bl	1974 <Mat_floatSwap>
   1440c:	vmov	r0, s0
   14410:	bl	4e394 <__aeabi_f2lz>
   14414:	strd	r0, [r9], #8
   14418:	cmp	r9, sl
   1441c:	bne	143f0 <ReadCompressedInt64Data+0x11c>
   14420:	b	143cc <ReadCompressedInt64Data+0xf8>
   14424:	ldr	sl, [r8, #20]
   14428:	cmp	sl, #0
   1442c:	beq	146e0 <ReadCompressedInt64Data+0x40c>
   14430:	cmp	r7, #0
   14434:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14438:	add	fp, r9, r7, lsl #3
   1443c:	mov	r6, sp
   14440:	mov	sl, #0
   14444:	mov	r3, r4
   14448:	mov	r2, r6
   1444c:	mov	r1, r5
   14450:	mov	r0, r8
   14454:	bl	30e0 <InflateData>
   14458:	mov	r0, r6
   1445c:	bl	18f8 <Mat_uint32Swap>
   14460:	stm	r9, {r0, sl}
   14464:	add	r9, r9, #8
   14468:	cmp	fp, r9
   1446c:	bne	14444 <ReadCompressedInt64Data+0x170>
   14470:	b	143cc <ReadCompressedInt64Data+0xf8>
   14474:	ldr	r3, [r8, #20]
   14478:	cmp	r3, #0
   1447c:	beq	146a4 <ReadCompressedInt64Data+0x3d0>
   14480:	cmp	r7, #0
   14484:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14488:	add	sl, r9, r7, lsl #3
   1448c:	mov	r6, sp
   14490:	mov	r1, r5
   14494:	mov	r3, r4
   14498:	mov	r2, r6
   1449c:	mov	r0, r8
   144a0:	bl	30e0 <InflateData>
   144a4:	mov	r0, r6
   144a8:	bl	18c4 <Mat_int32Swap>
   144ac:	asr	r1, r0, #31
   144b0:	strd	r0, [r9], #8
   144b4:	cmp	sl, r9
   144b8:	bne	14490 <ReadCompressedInt64Data+0x1bc>
   144bc:	b	143cc <ReadCompressedInt64Data+0xf8>
   144c0:	ldr	r3, [r8, #20]
   144c4:	cmp	r3, #0
   144c8:	beq	14668 <ReadCompressedInt64Data+0x394>
   144cc:	cmp	r7, #0
   144d0:	ble	143cc <ReadCompressedInt64Data+0xf8>
   144d4:	add	sl, r9, r7, lsl #3
   144d8:	mov	r6, sp
   144dc:	mov	r1, r5
   144e0:	mov	r3, r4
   144e4:	mov	r2, r6
   144e8:	mov	r0, r8
   144ec:	bl	30e0 <InflateData>
   144f0:	mov	r0, r6
   144f4:	bl	1950 <Mat_uint16Swap>
   144f8:	uxth	r0, r0
   144fc:	mov	r1, #0
   14500:	strd	r0, [r9], #8
   14504:	cmp	sl, r9
   14508:	bne	144dc <ReadCompressedInt64Data+0x208>
   1450c:	b	143cc <ReadCompressedInt64Data+0xf8>
   14510:	ldr	r3, [r8, #20]
   14514:	cmp	r3, #0
   14518:	beq	1462c <ReadCompressedInt64Data+0x358>
   1451c:	cmp	r7, #0
   14520:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14524:	add	sl, r9, r7, lsl #3
   14528:	mov	r6, sp
   1452c:	mov	r1, r5
   14530:	mov	r3, r4
   14534:	mov	r2, r6
   14538:	mov	r0, r8
   1453c:	bl	30e0 <InflateData>
   14540:	mov	r0, r6
   14544:	bl	192c <Mat_int16Swap>
   14548:	sxth	r0, r0
   1454c:	asr	r1, r0, #31
   14550:	strd	r0, [r9], #8
   14554:	cmp	sl, r9
   14558:	bne	1452c <ReadCompressedInt64Data+0x258>
   1455c:	b	143cc <ReadCompressedInt64Data+0xf8>
   14560:	cmp	r7, #0
   14564:	movgt	r6, sp
   14568:	addgt	sl, r9, r7, lsl #3
   1456c:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14570:	mov	r3, r4
   14574:	mov	r2, r6
   14578:	mov	r1, r5
   1457c:	mov	r0, r8
   14580:	bl	30e0 <InflateData>
   14584:	ldrb	r2, [sp]
   14588:	mov	r3, #0
   1458c:	strd	r2, [r9], #8
   14590:	cmp	r9, sl
   14594:	bne	14570 <ReadCompressedInt64Data+0x29c>
   14598:	b	143cc <ReadCompressedInt64Data+0xf8>
   1459c:	cmp	r7, #0
   145a0:	movgt	r6, sp
   145a4:	addgt	sl, r9, r7, lsl #3
   145a8:	ble	143cc <ReadCompressedInt64Data+0xf8>
   145ac:	mov	r3, r4
   145b0:	mov	r2, r6
   145b4:	mov	r1, r5
   145b8:	mov	r0, r8
   145bc:	bl	30e0 <InflateData>
   145c0:	ldrsb	r2, [sp]
   145c4:	asr	r3, r2, #31
   145c8:	strd	r2, [r9], #8
   145cc:	cmp	sl, r9
   145d0:	bne	145ac <ReadCompressedInt64Data+0x2d8>
   145d4:	b	143cc <ReadCompressedInt64Data+0xf8>
   145d8:	cmp	r6, #12
   145dc:	beq	14794 <ReadCompressedInt64Data+0x4c0>
   145e0:	cmp	r6, #13
   145e4:	bne	143cc <ReadCompressedInt64Data+0xf8>
   145e8:	ldr	r3, [r8, #20]
   145ec:	cmp	r3, #0
   145f0:	bne	147d8 <ReadCompressedInt64Data+0x504>
   145f4:	cmp	r7, #0
   145f8:	movgt	r6, sp
   145fc:	addgt	sl, r9, r7, lsl #3
   14600:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14604:	mov	r3, r4
   14608:	mov	r2, r6
   1460c:	mov	r1, r5
   14610:	mov	r0, r8
   14614:	bl	30e0 <InflateData>
   14618:	ldrd	r2, [sp]
   1461c:	strd	r2, [r9], #8
   14620:	cmp	sl, r9
   14624:	bne	14604 <ReadCompressedInt64Data+0x330>
   14628:	b	143cc <ReadCompressedInt64Data+0xf8>
   1462c:	cmp	r7, #0
   14630:	movgt	r6, sp
   14634:	addgt	sl, r9, r7, lsl #3
   14638:	ble	143cc <ReadCompressedInt64Data+0xf8>
   1463c:	mov	r3, r4
   14640:	mov	r2, r6
   14644:	mov	r1, r5
   14648:	mov	r0, r8
   1464c:	bl	30e0 <InflateData>
   14650:	ldrsh	r2, [sp]
   14654:	asr	r3, r2, #31
   14658:	strd	r2, [r9], #8
   1465c:	cmp	sl, r9
   14660:	bne	1463c <ReadCompressedInt64Data+0x368>
   14664:	b	143cc <ReadCompressedInt64Data+0xf8>
   14668:	cmp	r7, #0
   1466c:	movgt	r6, sp
   14670:	addgt	sl, r9, r7, lsl #3
   14674:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14678:	mov	r3, r4
   1467c:	mov	r2, r6
   14680:	mov	r1, r5
   14684:	mov	r0, r8
   14688:	bl	30e0 <InflateData>
   1468c:	ldrh	r2, [sp]
   14690:	mov	r3, #0
   14694:	strd	r2, [r9], #8
   14698:	cmp	sl, r9
   1469c:	bne	14678 <ReadCompressedInt64Data+0x3a4>
   146a0:	b	143cc <ReadCompressedInt64Data+0xf8>
   146a4:	cmp	r7, #0
   146a8:	movgt	r6, sp
   146ac:	addgt	sl, r9, r7, lsl #3
   146b0:	ble	143cc <ReadCompressedInt64Data+0xf8>
   146b4:	mov	r3, r4
   146b8:	mov	r2, r6
   146bc:	mov	r1, r5
   146c0:	mov	r0, r8
   146c4:	bl	30e0 <InflateData>
   146c8:	ldr	r2, [sp]
   146cc:	asr	r3, r2, #31
   146d0:	strd	r2, [r9], #8
   146d4:	cmp	sl, r9
   146d8:	bne	146b4 <ReadCompressedInt64Data+0x3e0>
   146dc:	b	143cc <ReadCompressedInt64Data+0xf8>
   146e0:	cmp	r7, #0
   146e4:	addgt	fp, r9, r7, lsl #3
   146e8:	movgt	r6, sp
   146ec:	ble	143cc <ReadCompressedInt64Data+0xf8>
   146f0:	mov	r3, r4
   146f4:	mov	r2, r6
   146f8:	mov	r1, r5
   146fc:	mov	r0, r8
   14700:	bl	30e0 <InflateData>
   14704:	ldr	r3, [sp]
   14708:	stm	r9, {r3, sl}
   1470c:	add	r9, r9, #8
   14710:	cmp	fp, r9
   14714:	bne	146f0 <ReadCompressedInt64Data+0x41c>
   14718:	b	143cc <ReadCompressedInt64Data+0xf8>
   1471c:	cmp	r7, #0
   14720:	movgt	r6, sp
   14724:	addgt	sl, r9, r7, lsl #3
   14728:	ble	143cc <ReadCompressedInt64Data+0xf8>
   1472c:	mov	r3, r4
   14730:	mov	r2, r6
   14734:	mov	r1, r5
   14738:	mov	r0, r8
   1473c:	bl	30e0 <InflateData>
   14740:	ldr	r0, [sp]
   14744:	bl	4e394 <__aeabi_f2lz>
   14748:	strd	r0, [r9], #8
   1474c:	cmp	r9, sl
   14750:	bne	1472c <ReadCompressedInt64Data+0x458>
   14754:	b	143cc <ReadCompressedInt64Data+0xf8>
   14758:	cmp	r7, #0
   1475c:	movgt	r6, sp
   14760:	addgt	sl, r9, r7, lsl #3
   14764:	ble	143cc <ReadCompressedInt64Data+0xf8>
   14768:	mov	r3, r4
   1476c:	mov	r2, r6
   14770:	mov	r1, r5
   14774:	mov	r0, r8
   14778:	bl	30e0 <InflateData>
   1477c:	ldrd	r0, [sp]
   14780:	bl	4e3c0 <__aeabi_d2lz>
   14784:	strd	r0, [r9], #8
   14788:	cmp	r9, sl
   1478c:	bne	14768 <ReadCompressedInt64Data+0x494>
   14790:	b	143cc <ReadCompressedInt64Data+0xf8>
   14794:	ldr	r3, [r8, #20]
   14798:	cmp	r3, #0
   1479c:	bne	14814 <ReadCompressedInt64Data+0x540>
   147a0:	cmp	r7, #0
   147a4:	movgt	r6, sp
   147a8:	addgt	sl, r9, r7, lsl #3
   147ac:	ble	143cc <ReadCompressedInt64Data+0xf8>
   147b0:	mov	r3, r4
   147b4:	mov	r2, r6
   147b8:	mov	r1, r5
   147bc:	mov	r0, r8
   147c0:	bl	30e0 <InflateData>
   147c4:	ldrd	r2, [sp]
   147c8:	strd	r2, [r9], #8
   147cc:	cmp	r9, sl
   147d0:	bne	147b0 <ReadCompressedInt64Data+0x4dc>
   147d4:	b	143cc <ReadCompressedInt64Data+0xf8>
   147d8:	cmp	r7, #0
   147dc:	ble	143cc <ReadCompressedInt64Data+0xf8>
   147e0:	add	sl, r9, r7, lsl #3
   147e4:	mov	r6, sp
   147e8:	mov	r3, r4
   147ec:	mov	r2, r6
   147f0:	mov	r1, r5
   147f4:	mov	r0, r8
   147f8:	bl	30e0 <InflateData>
   147fc:	mov	r0, r6
   14800:	bl	1858 <Mat_uint64Swap>
   14804:	strd	r0, [r9], #8
   14808:	cmp	sl, r9
   1480c:	bne	147e8 <ReadCompressedInt64Data+0x514>
   14810:	b	143cc <ReadCompressedInt64Data+0xf8>
   14814:	cmp	r7, #0
   14818:	ble	143cc <ReadCompressedInt64Data+0xf8>
   1481c:	add	sl, r9, r7, lsl #3
   14820:	mov	r6, sp
   14824:	mov	r3, r4
   14828:	mov	r2, r6
   1482c:	mov	r1, r5
   14830:	mov	r0, r8
   14834:	bl	30e0 <InflateData>
   14838:	mov	r0, r6
   1483c:	bl	17ec <Mat_int64Swap>
   14840:	strd	r0, [r9], #8
   14844:	cmp	sl, r9
   14848:	bne	14824 <ReadCompressedInt64Data+0x550>
   1484c:	b	143cc <ReadCompressedInt64Data+0xf8>

00014850 <ReadUInt64Data>:
   14850:	cmp	r1, #0
   14854:	cmpne	r0, #0
   14858:	beq	1486c <ReadUInt64Data+0x1c>
   1485c:	ldr	ip, [r0]
   14860:	cmp	ip, #0
   14864:	beq	1486c <ReadUInt64Data+0x1c>
   14868:	b	7e8c <ReadUInt64Data.part.5>
   1486c:	mov	r0, #0
   14870:	bx	lr

00014874 <ReadCompressedUInt64Data>:
   14874:	cmp	r2, #0
   14878:	clz	ip, r1
   1487c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14880:	lsr	ip, ip, #5
   14884:	moveq	ip, #1
   14888:	cmp	r0, #0
   1488c:	moveq	ip, #1
   14890:	strd	r6, [sp, #8]
   14894:	cmp	ip, #0
   14898:	strd	r8, [sp, #16]
   1489c:	strd	sl, [sp, #24]
   148a0:	movne	r0, #0
   148a4:	str	lr, [sp, #32]
   148a8:	sub	sp, sp, #12
   148ac:	ldr	r7, [sp, #48]	; 0x30
   148b0:	beq	148d0 <ReadCompressedUInt64Data+0x5c>
   148b4:	add	sp, sp, #12
   148b8:	ldrd	r4, [sp]
   148bc:	ldrd	r6, [sp, #8]
   148c0:	ldrd	r8, [sp, #16]
   148c4:	ldrd	sl, [sp, #24]
   148c8:	add	sp, sp, #32
   148cc:	pop	{pc}		; (ldr pc, [sp], #4)
   148d0:	mov	r6, r3
   148d4:	mov	r8, r0
   148d8:	mov	r0, r3
   148dc:	mov	r9, r2
   148e0:	mov	r5, r1
   148e4:	bl	1598 <Mat_SizeOf@plt>
   148e8:	sub	r3, r6, #1
   148ec:	mov	r4, r0
   148f0:	cmp	r3, #8
   148f4:	addls	pc, pc, r3, lsl #2
   148f8:	b	14b78 <ReadCompressedUInt64Data+0x304>
   148fc:	b	14b3c <ReadCompressedUInt64Data+0x2c8>
   14900:	b	14b00 <ReadCompressedUInt64Data+0x28c>
   14904:	b	14ab0 <ReadCompressedUInt64Data+0x23c>
   14908:	b	14a60 <ReadCompressedUInt64Data+0x1ec>
   1490c:	b	14a14 <ReadCompressedUInt64Data+0x1a0>
   14910:	b	149c4 <ReadCompressedUInt64Data+0x150>
   14914:	b	14974 <ReadCompressedUInt64Data+0x100>
   14918:	b	14b78 <ReadCompressedUInt64Data+0x304>
   1491c:	b	14920 <ReadCompressedUInt64Data+0xac>
   14920:	ldr	r3, [r8, #20]
   14924:	cmp	r3, #0
   14928:	beq	14cf8 <ReadCompressedUInt64Data+0x484>
   1492c:	cmp	r7, #0
   14930:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14934:	add	sl, r9, r7, lsl #3
   14938:	mov	r6, sp
   1493c:	mov	r3, r4
   14940:	mov	r2, r6
   14944:	mov	r1, r5
   14948:	mov	r0, r8
   1494c:	bl	30e0 <InflateData>
   14950:	mov	r0, r6
   14954:	bl	19a4 <Mat_doubleSwap>
   14958:	vmov	r0, r1, d0
   1495c:	bl	4e430 <__aeabi_d2ulz>
   14960:	strd	r0, [r9], #8
   14964:	cmp	r9, sl
   14968:	bne	1493c <ReadCompressedUInt64Data+0xc8>
   1496c:	mul	r0, r4, r7
   14970:	b	148b4 <ReadCompressedUInt64Data+0x40>
   14974:	ldr	r3, [r8, #20]
   14978:	cmp	r3, #0
   1497c:	beq	14cbc <ReadCompressedUInt64Data+0x448>
   14980:	cmp	r7, #0
   14984:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14988:	add	sl, r9, r7, lsl #3
   1498c:	mov	r6, sp
   14990:	mov	r3, r4
   14994:	mov	r2, r6
   14998:	mov	r1, r5
   1499c:	mov	r0, r8
   149a0:	bl	30e0 <InflateData>
   149a4:	mov	r0, r6
   149a8:	bl	1974 <Mat_floatSwap>
   149ac:	vmov	r0, s0
   149b0:	bl	4e3f0 <__aeabi_f2ulz>
   149b4:	strd	r0, [r9], #8
   149b8:	cmp	r9, sl
   149bc:	bne	14990 <ReadCompressedUInt64Data+0x11c>
   149c0:	b	1496c <ReadCompressedUInt64Data+0xf8>
   149c4:	ldr	sl, [r8, #20]
   149c8:	cmp	sl, #0
   149cc:	beq	14c80 <ReadCompressedUInt64Data+0x40c>
   149d0:	cmp	r7, #0
   149d4:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   149d8:	add	fp, r9, r7, lsl #3
   149dc:	mov	r6, sp
   149e0:	mov	sl, #0
   149e4:	mov	r3, r4
   149e8:	mov	r2, r6
   149ec:	mov	r1, r5
   149f0:	mov	r0, r8
   149f4:	bl	30e0 <InflateData>
   149f8:	mov	r0, r6
   149fc:	bl	18f8 <Mat_uint32Swap>
   14a00:	stm	r9, {r0, sl}
   14a04:	add	r9, r9, #8
   14a08:	cmp	fp, r9
   14a0c:	bne	149e4 <ReadCompressedUInt64Data+0x170>
   14a10:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14a14:	ldr	r3, [r8, #20]
   14a18:	cmp	r3, #0
   14a1c:	beq	14c44 <ReadCompressedUInt64Data+0x3d0>
   14a20:	cmp	r7, #0
   14a24:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14a28:	add	sl, r9, r7, lsl #3
   14a2c:	mov	r6, sp
   14a30:	mov	r1, r5
   14a34:	mov	r3, r4
   14a38:	mov	r2, r6
   14a3c:	mov	r0, r8
   14a40:	bl	30e0 <InflateData>
   14a44:	mov	r0, r6
   14a48:	bl	18c4 <Mat_int32Swap>
   14a4c:	asr	r1, r0, #31
   14a50:	strd	r0, [r9], #8
   14a54:	cmp	sl, r9
   14a58:	bne	14a30 <ReadCompressedUInt64Data+0x1bc>
   14a5c:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14a60:	ldr	r3, [r8, #20]
   14a64:	cmp	r3, #0
   14a68:	beq	14c08 <ReadCompressedUInt64Data+0x394>
   14a6c:	cmp	r7, #0
   14a70:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14a74:	add	sl, r9, r7, lsl #3
   14a78:	mov	r6, sp
   14a7c:	mov	r1, r5
   14a80:	mov	r3, r4
   14a84:	mov	r2, r6
   14a88:	mov	r0, r8
   14a8c:	bl	30e0 <InflateData>
   14a90:	mov	r0, r6
   14a94:	bl	1950 <Mat_uint16Swap>
   14a98:	uxth	r0, r0
   14a9c:	mov	r1, #0
   14aa0:	strd	r0, [r9], #8
   14aa4:	cmp	sl, r9
   14aa8:	bne	14a7c <ReadCompressedUInt64Data+0x208>
   14aac:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14ab0:	ldr	r3, [r8, #20]
   14ab4:	cmp	r3, #0
   14ab8:	beq	14bcc <ReadCompressedUInt64Data+0x358>
   14abc:	cmp	r7, #0
   14ac0:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14ac4:	add	sl, r9, r7, lsl #3
   14ac8:	mov	r6, sp
   14acc:	mov	r1, r5
   14ad0:	mov	r3, r4
   14ad4:	mov	r2, r6
   14ad8:	mov	r0, r8
   14adc:	bl	30e0 <InflateData>
   14ae0:	mov	r0, r6
   14ae4:	bl	192c <Mat_int16Swap>
   14ae8:	sxth	r0, r0
   14aec:	asr	r1, r0, #31
   14af0:	strd	r0, [r9], #8
   14af4:	cmp	sl, r9
   14af8:	bne	14acc <ReadCompressedUInt64Data+0x258>
   14afc:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14b00:	cmp	r7, #0
   14b04:	movgt	r6, sp
   14b08:	addgt	sl, r9, r7, lsl #3
   14b0c:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14b10:	mov	r3, r4
   14b14:	mov	r2, r6
   14b18:	mov	r1, r5
   14b1c:	mov	r0, r8
   14b20:	bl	30e0 <InflateData>
   14b24:	ldrb	r2, [sp]
   14b28:	mov	r3, #0
   14b2c:	strd	r2, [r9], #8
   14b30:	cmp	r9, sl
   14b34:	bne	14b10 <ReadCompressedUInt64Data+0x29c>
   14b38:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14b3c:	cmp	r7, #0
   14b40:	movgt	r6, sp
   14b44:	addgt	sl, r9, r7, lsl #3
   14b48:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14b4c:	mov	r3, r4
   14b50:	mov	r2, r6
   14b54:	mov	r1, r5
   14b58:	mov	r0, r8
   14b5c:	bl	30e0 <InflateData>
   14b60:	ldrsb	r2, [sp]
   14b64:	asr	r3, r2, #31
   14b68:	strd	r2, [r9], #8
   14b6c:	cmp	sl, r9
   14b70:	bne	14b4c <ReadCompressedUInt64Data+0x2d8>
   14b74:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14b78:	cmp	r6, #12
   14b7c:	beq	14d34 <ReadCompressedUInt64Data+0x4c0>
   14b80:	cmp	r6, #13
   14b84:	bne	1496c <ReadCompressedUInt64Data+0xf8>
   14b88:	ldr	r3, [r8, #20]
   14b8c:	cmp	r3, #0
   14b90:	bne	14d78 <ReadCompressedUInt64Data+0x504>
   14b94:	cmp	r7, #0
   14b98:	movgt	r6, sp
   14b9c:	addgt	sl, r9, r7, lsl #3
   14ba0:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14ba4:	mov	r3, r4
   14ba8:	mov	r2, r6
   14bac:	mov	r1, r5
   14bb0:	mov	r0, r8
   14bb4:	bl	30e0 <InflateData>
   14bb8:	ldrd	r2, [sp]
   14bbc:	strd	r2, [r9], #8
   14bc0:	cmp	sl, r9
   14bc4:	bne	14ba4 <ReadCompressedUInt64Data+0x330>
   14bc8:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14bcc:	cmp	r7, #0
   14bd0:	movgt	r6, sp
   14bd4:	addgt	sl, r9, r7, lsl #3
   14bd8:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14bdc:	mov	r3, r4
   14be0:	mov	r2, r6
   14be4:	mov	r1, r5
   14be8:	mov	r0, r8
   14bec:	bl	30e0 <InflateData>
   14bf0:	ldrsh	r2, [sp]
   14bf4:	asr	r3, r2, #31
   14bf8:	strd	r2, [r9], #8
   14bfc:	cmp	sl, r9
   14c00:	bne	14bdc <ReadCompressedUInt64Data+0x368>
   14c04:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14c08:	cmp	r7, #0
   14c0c:	movgt	r6, sp
   14c10:	addgt	sl, r9, r7, lsl #3
   14c14:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14c18:	mov	r3, r4
   14c1c:	mov	r2, r6
   14c20:	mov	r1, r5
   14c24:	mov	r0, r8
   14c28:	bl	30e0 <InflateData>
   14c2c:	ldrh	r2, [sp]
   14c30:	mov	r3, #0
   14c34:	strd	r2, [r9], #8
   14c38:	cmp	sl, r9
   14c3c:	bne	14c18 <ReadCompressedUInt64Data+0x3a4>
   14c40:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14c44:	cmp	r7, #0
   14c48:	movgt	r6, sp
   14c4c:	addgt	sl, r9, r7, lsl #3
   14c50:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14c54:	mov	r3, r4
   14c58:	mov	r2, r6
   14c5c:	mov	r1, r5
   14c60:	mov	r0, r8
   14c64:	bl	30e0 <InflateData>
   14c68:	ldr	r2, [sp]
   14c6c:	asr	r3, r2, #31
   14c70:	strd	r2, [r9], #8
   14c74:	cmp	sl, r9
   14c78:	bne	14c54 <ReadCompressedUInt64Data+0x3e0>
   14c7c:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14c80:	cmp	r7, #0
   14c84:	addgt	fp, r9, r7, lsl #3
   14c88:	movgt	r6, sp
   14c8c:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14c90:	mov	r3, r4
   14c94:	mov	r2, r6
   14c98:	mov	r1, r5
   14c9c:	mov	r0, r8
   14ca0:	bl	30e0 <InflateData>
   14ca4:	ldr	r3, [sp]
   14ca8:	stm	r9, {r3, sl}
   14cac:	add	r9, r9, #8
   14cb0:	cmp	fp, r9
   14cb4:	bne	14c90 <ReadCompressedUInt64Data+0x41c>
   14cb8:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14cbc:	cmp	r7, #0
   14cc0:	movgt	r6, sp
   14cc4:	addgt	sl, r9, r7, lsl #3
   14cc8:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14ccc:	mov	r3, r4
   14cd0:	mov	r2, r6
   14cd4:	mov	r1, r5
   14cd8:	mov	r0, r8
   14cdc:	bl	30e0 <InflateData>
   14ce0:	ldr	r0, [sp]
   14ce4:	bl	4e3f0 <__aeabi_f2ulz>
   14ce8:	strd	r0, [r9], #8
   14cec:	cmp	r9, sl
   14cf0:	bne	14ccc <ReadCompressedUInt64Data+0x458>
   14cf4:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14cf8:	cmp	r7, #0
   14cfc:	movgt	r6, sp
   14d00:	addgt	sl, r9, r7, lsl #3
   14d04:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14d08:	mov	r3, r4
   14d0c:	mov	r2, r6
   14d10:	mov	r1, r5
   14d14:	mov	r0, r8
   14d18:	bl	30e0 <InflateData>
   14d1c:	ldrd	r0, [sp]
   14d20:	bl	4e430 <__aeabi_d2ulz>
   14d24:	strd	r0, [r9], #8
   14d28:	cmp	r9, sl
   14d2c:	bne	14d08 <ReadCompressedUInt64Data+0x494>
   14d30:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14d34:	ldr	r3, [r8, #20]
   14d38:	cmp	r3, #0
   14d3c:	bne	14db4 <ReadCompressedUInt64Data+0x540>
   14d40:	cmp	r7, #0
   14d44:	movgt	r6, sp
   14d48:	addgt	sl, r9, r7, lsl #3
   14d4c:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14d50:	mov	r3, r4
   14d54:	mov	r2, r6
   14d58:	mov	r1, r5
   14d5c:	mov	r0, r8
   14d60:	bl	30e0 <InflateData>
   14d64:	ldrd	r2, [sp]
   14d68:	strd	r2, [r9], #8
   14d6c:	cmp	r9, sl
   14d70:	bne	14d50 <ReadCompressedUInt64Data+0x4dc>
   14d74:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14d78:	cmp	r7, #0
   14d7c:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14d80:	add	sl, r9, r7, lsl #3
   14d84:	mov	r6, sp
   14d88:	mov	r3, r4
   14d8c:	mov	r2, r6
   14d90:	mov	r1, r5
   14d94:	mov	r0, r8
   14d98:	bl	30e0 <InflateData>
   14d9c:	mov	r0, r6
   14da0:	bl	1858 <Mat_uint64Swap>
   14da4:	strd	r0, [r9], #8
   14da8:	cmp	sl, r9
   14dac:	bne	14d88 <ReadCompressedUInt64Data+0x514>
   14db0:	b	1496c <ReadCompressedUInt64Data+0xf8>
   14db4:	cmp	r7, #0
   14db8:	ble	1496c <ReadCompressedUInt64Data+0xf8>
   14dbc:	add	sl, r9, r7, lsl #3
   14dc0:	mov	r6, sp
   14dc4:	mov	r3, r4
   14dc8:	mov	r2, r6
   14dcc:	mov	r1, r5
   14dd0:	mov	r0, r8
   14dd4:	bl	30e0 <InflateData>
   14dd8:	mov	r0, r6
   14ddc:	bl	17ec <Mat_int64Swap>
   14de0:	strd	r0, [r9], #8
   14de4:	cmp	sl, r9
   14de8:	bne	14dc4 <ReadCompressedUInt64Data+0x550>
   14dec:	b	1496c <ReadCompressedUInt64Data+0xf8>

00014df0 <ReadInt32Data>:
   14df0:	cmp	r1, #0
   14df4:	cmpne	r0, #0
   14df8:	beq	14e0c <ReadInt32Data+0x1c>
   14dfc:	ldr	ip, [r0]
   14e00:	cmp	ip, #0
   14e04:	beq	14e0c <ReadInt32Data+0x1c>
   14e08:	b	9700 <ReadInt32Data.part.7>
   14e0c:	mov	r0, #0
   14e10:	bx	lr

00014e14 <ReadCompressedInt32Data>:
   14e14:	cmp	r2, #0
   14e18:	clz	ip, r1
   14e1c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14e20:	lsr	ip, ip, #5
   14e24:	moveq	ip, #1
   14e28:	cmp	r0, #0
   14e2c:	moveq	ip, #1
   14e30:	strd	r6, [sp, #8]
   14e34:	cmp	ip, #0
   14e38:	strd	r8, [sp, #16]
   14e3c:	str	sl, [sp, #24]
   14e40:	movne	r0, #0
   14e44:	str	lr, [sp, #28]
   14e48:	sub	sp, sp, #8
   14e4c:	ldr	r7, [sp, #40]	; 0x28
   14e50:	beq	14e70 <ReadCompressedInt32Data+0x5c>
   14e54:	add	sp, sp, #8
   14e58:	ldrd	r4, [sp]
   14e5c:	ldrd	r6, [sp, #8]
   14e60:	ldrd	r8, [sp, #16]
   14e64:	ldr	sl, [sp, #24]
   14e68:	add	sp, sp, #28
   14e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e70:	mov	r6, r3
   14e74:	mov	r8, r0
   14e78:	mov	r0, r3
   14e7c:	mov	r9, r2
   14e80:	mov	r5, r1
   14e84:	bl	1598 <Mat_SizeOf@plt>
   14e88:	sub	r3, r6, #1
   14e8c:	mov	r4, r0
   14e90:	cmp	r3, #8
   14e94:	addls	pc, pc, r3, lsl #2
   14e98:	b	150ec <ReadCompressedInt32Data+0x2d8>
   14e9c:	b	150b4 <ReadCompressedInt32Data+0x2a0>
   14ea0:	b	1507c <ReadCompressedInt32Data+0x268>
   14ea4:	b	15034 <ReadCompressedInt32Data+0x220>
   14ea8:	b	14fec <ReadCompressedInt32Data+0x1d8>
   14eac:	b	14fa4 <ReadCompressedInt32Data+0x190>
   14eb0:	b	14f5c <ReadCompressedInt32Data+0x148>
   14eb4:	b	14f10 <ReadCompressedInt32Data+0xfc>
   14eb8:	b	150ec <ReadCompressedInt32Data+0x2d8>
   14ebc:	b	14ec0 <ReadCompressedInt32Data+0xac>
   14ec0:	ldr	r3, [r8, #20]
   14ec4:	cmp	r3, #0
   14ec8:	beq	1525c <ReadCompressedInt32Data+0x448>
   14ecc:	cmp	r7, #0
   14ed0:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   14ed4:	add	sl, r9, r7, lsl #2
   14ed8:	mov	r6, sp
   14edc:	mov	r3, r4
   14ee0:	mov	r2, r6
   14ee4:	mov	r1, r5
   14ee8:	mov	r0, r8
   14eec:	bl	30e0 <InflateData>
   14ef0:	mov	r0, r6
   14ef4:	bl	19a4 <Mat_doubleSwap>
   14ef8:	vcvt.s32.f64	s0, d0
   14efc:	vstmia	r9!, {s0}
   14f00:	cmp	r9, sl
   14f04:	bne	14edc <ReadCompressedInt32Data+0xc8>
   14f08:	mul	r0, r4, r7
   14f0c:	b	14e54 <ReadCompressedInt32Data+0x40>
   14f10:	ldr	r3, [r8, #20]
   14f14:	cmp	r3, #0
   14f18:	beq	15220 <ReadCompressedInt32Data+0x40c>
   14f1c:	cmp	r7, #0
   14f20:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   14f24:	add	sl, r9, r7, lsl #2
   14f28:	mov	r6, sp
   14f2c:	mov	r3, r4
   14f30:	mov	r2, r6
   14f34:	mov	r1, r5
   14f38:	mov	r0, r8
   14f3c:	bl	30e0 <InflateData>
   14f40:	mov	r0, r6
   14f44:	bl	1974 <Mat_floatSwap>
   14f48:	vcvt.s32.f32	s0, s0
   14f4c:	vstmia	r9!, {s0}
   14f50:	cmp	r9, sl
   14f54:	bne	14f2c <ReadCompressedInt32Data+0x118>
   14f58:	b	14f08 <ReadCompressedInt32Data+0xf4>
   14f5c:	ldr	r3, [r8, #20]
   14f60:	cmp	r3, #0
   14f64:	beq	151e8 <ReadCompressedInt32Data+0x3d4>
   14f68:	cmp	r7, #0
   14f6c:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   14f70:	add	sl, r9, r7, lsl #2
   14f74:	mov	r6, sp
   14f78:	mov	r3, r4
   14f7c:	mov	r2, r6
   14f80:	mov	r1, r5
   14f84:	mov	r0, r8
   14f88:	bl	30e0 <InflateData>
   14f8c:	mov	r0, r6
   14f90:	bl	18f8 <Mat_uint32Swap>
   14f94:	str	r0, [r9], #4
   14f98:	cmp	sl, r9
   14f9c:	bne	14f78 <ReadCompressedInt32Data+0x164>
   14fa0:	b	14f08 <ReadCompressedInt32Data+0xf4>
   14fa4:	ldr	r3, [r8, #20]
   14fa8:	cmp	r3, #0
   14fac:	beq	151b0 <ReadCompressedInt32Data+0x39c>
   14fb0:	cmp	r7, #0
   14fb4:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   14fb8:	add	sl, r9, r7, lsl #2
   14fbc:	mov	r6, sp
   14fc0:	mov	r3, r4
   14fc4:	mov	r2, r6
   14fc8:	mov	r1, r5
   14fcc:	mov	r0, r8
   14fd0:	bl	30e0 <InflateData>
   14fd4:	mov	r0, r6
   14fd8:	bl	18c4 <Mat_int32Swap>
   14fdc:	str	r0, [r9], #4
   14fe0:	cmp	sl, r9
   14fe4:	bne	14fc0 <ReadCompressedInt32Data+0x1ac>
   14fe8:	b	14f08 <ReadCompressedInt32Data+0xf4>
   14fec:	ldr	r3, [r8, #20]
   14ff0:	cmp	r3, #0
   14ff4:	beq	15178 <ReadCompressedInt32Data+0x364>
   14ff8:	cmp	r7, #0
   14ffc:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15000:	add	sl, r9, r7, lsl #2
   15004:	mov	r6, sp
   15008:	mov	r3, r4
   1500c:	mov	r2, r6
   15010:	mov	r1, r5
   15014:	mov	r0, r8
   15018:	bl	30e0 <InflateData>
   1501c:	mov	r0, r6
   15020:	bl	1950 <Mat_uint16Swap>
   15024:	str	r0, [r9], #4
   15028:	cmp	sl, r9
   1502c:	bne	15008 <ReadCompressedInt32Data+0x1f4>
   15030:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15034:	ldr	r3, [r8, #20]
   15038:	cmp	r3, #0
   1503c:	beq	15140 <ReadCompressedInt32Data+0x32c>
   15040:	cmp	r7, #0
   15044:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15048:	add	sl, r9, r7, lsl #2
   1504c:	mov	r6, sp
   15050:	mov	r3, r4
   15054:	mov	r2, r6
   15058:	mov	r1, r5
   1505c:	mov	r0, r8
   15060:	bl	30e0 <InflateData>
   15064:	mov	r0, r6
   15068:	bl	192c <Mat_int16Swap>
   1506c:	str	r0, [r9], #4
   15070:	cmp	sl, r9
   15074:	bne	15050 <ReadCompressedInt32Data+0x23c>
   15078:	b	14f08 <ReadCompressedInt32Data+0xf4>
   1507c:	cmp	r7, #0
   15080:	movgt	r6, sp
   15084:	addgt	sl, r9, r7, lsl #2
   15088:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   1508c:	mov	r3, r4
   15090:	mov	r2, r6
   15094:	mov	r1, r5
   15098:	mov	r0, r8
   1509c:	bl	30e0 <InflateData>
   150a0:	ldrb	r3, [sp]
   150a4:	str	r3, [r9], #4
   150a8:	cmp	r9, sl
   150ac:	bne	1508c <ReadCompressedInt32Data+0x278>
   150b0:	b	14f08 <ReadCompressedInt32Data+0xf4>
   150b4:	cmp	r7, #0
   150b8:	movgt	r6, sp
   150bc:	addgt	sl, r9, r7, lsl #2
   150c0:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   150c4:	mov	r3, r4
   150c8:	mov	r2, r6
   150cc:	mov	r1, r5
   150d0:	mov	r0, r8
   150d4:	bl	30e0 <InflateData>
   150d8:	ldrsb	r3, [sp]
   150dc:	str	r3, [r9], #4
   150e0:	cmp	sl, r9
   150e4:	bne	150c4 <ReadCompressedInt32Data+0x2b0>
   150e8:	b	14f08 <ReadCompressedInt32Data+0xf4>
   150ec:	cmp	r6, #12
   150f0:	beq	15298 <ReadCompressedInt32Data+0x484>
   150f4:	cmp	r6, #13
   150f8:	bne	14f08 <ReadCompressedInt32Data+0xf4>
   150fc:	ldr	r3, [r8, #20]
   15100:	cmp	r3, #0
   15104:	bne	152dc <ReadCompressedInt32Data+0x4c8>
   15108:	cmp	r7, #0
   1510c:	movgt	r6, sp
   15110:	addgt	sl, r9, r7, lsl #2
   15114:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15118:	mov	r3, r4
   1511c:	mov	r2, r6
   15120:	mov	r1, r5
   15124:	mov	r0, r8
   15128:	bl	30e0 <InflateData>
   1512c:	ldr	r3, [sp]
   15130:	str	r3, [r9], #4
   15134:	cmp	sl, r9
   15138:	bne	15118 <ReadCompressedInt32Data+0x304>
   1513c:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15140:	cmp	r7, #0
   15144:	movgt	r6, sp
   15148:	addgt	sl, r9, r7, lsl #2
   1514c:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15150:	mov	r3, r4
   15154:	mov	r2, r6
   15158:	mov	r1, r5
   1515c:	mov	r0, r8
   15160:	bl	30e0 <InflateData>
   15164:	ldrsh	r3, [sp]
   15168:	str	r3, [r9], #4
   1516c:	cmp	sl, r9
   15170:	bne	15150 <ReadCompressedInt32Data+0x33c>
   15174:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15178:	cmp	r7, #0
   1517c:	movgt	r6, sp
   15180:	addgt	sl, r9, r7, lsl #2
   15184:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15188:	mov	r3, r4
   1518c:	mov	r2, r6
   15190:	mov	r1, r5
   15194:	mov	r0, r8
   15198:	bl	30e0 <InflateData>
   1519c:	ldrh	r3, [sp]
   151a0:	str	r3, [r9], #4
   151a4:	cmp	sl, r9
   151a8:	bne	15188 <ReadCompressedInt32Data+0x374>
   151ac:	b	14f08 <ReadCompressedInt32Data+0xf4>
   151b0:	cmp	r7, #0
   151b4:	movgt	r6, sp
   151b8:	addgt	sl, r9, r7, lsl #2
   151bc:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   151c0:	mov	r3, r4
   151c4:	mov	r2, r6
   151c8:	mov	r1, r5
   151cc:	mov	r0, r8
   151d0:	bl	30e0 <InflateData>
   151d4:	ldr	r3, [sp]
   151d8:	str	r3, [r9], #4
   151dc:	cmp	sl, r9
   151e0:	bne	151c0 <ReadCompressedInt32Data+0x3ac>
   151e4:	b	14f08 <ReadCompressedInt32Data+0xf4>
   151e8:	cmp	r7, #0
   151ec:	movgt	r6, sp
   151f0:	addgt	sl, r9, r7, lsl #2
   151f4:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   151f8:	mov	r3, r4
   151fc:	mov	r2, r6
   15200:	mov	r1, r5
   15204:	mov	r0, r8
   15208:	bl	30e0 <InflateData>
   1520c:	ldr	r3, [sp]
   15210:	str	r3, [r9], #4
   15214:	cmp	sl, r9
   15218:	bne	151f8 <ReadCompressedInt32Data+0x3e4>
   1521c:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15220:	cmp	r7, #0
   15224:	movgt	r6, sp
   15228:	addgt	sl, r9, r7, lsl #2
   1522c:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15230:	mov	r3, r4
   15234:	mov	r2, r6
   15238:	mov	r1, r5
   1523c:	mov	r0, r8
   15240:	bl	30e0 <InflateData>
   15244:	vldr	s15, [sp]
   15248:	vcvt.s32.f32	s15, s15
   1524c:	vstmia	r9!, {s15}
   15250:	cmp	r9, sl
   15254:	bne	15230 <ReadCompressedInt32Data+0x41c>
   15258:	b	14f08 <ReadCompressedInt32Data+0xf4>
   1525c:	cmp	r7, #0
   15260:	movgt	r6, sp
   15264:	addgt	sl, r9, r7, lsl #2
   15268:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   1526c:	mov	r3, r4
   15270:	mov	r2, r6
   15274:	mov	r1, r5
   15278:	mov	r0, r8
   1527c:	bl	30e0 <InflateData>
   15280:	vldr	d7, [sp]
   15284:	vcvt.s32.f64	s14, d7
   15288:	vstmia	r9!, {s14}
   1528c:	cmp	r9, sl
   15290:	bne	1526c <ReadCompressedInt32Data+0x458>
   15294:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15298:	ldr	r3, [r8, #20]
   1529c:	cmp	r3, #0
   152a0:	bne	15318 <ReadCompressedInt32Data+0x504>
   152a4:	cmp	r7, #0
   152a8:	movgt	r6, sp
   152ac:	addgt	sl, r9, r7, lsl #2
   152b0:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   152b4:	mov	r3, r4
   152b8:	mov	r2, r6
   152bc:	mov	r1, r5
   152c0:	mov	r0, r8
   152c4:	bl	30e0 <InflateData>
   152c8:	ldr	r3, [sp]
   152cc:	str	r3, [r9], #4
   152d0:	cmp	r9, sl
   152d4:	bne	152b4 <ReadCompressedInt32Data+0x4a0>
   152d8:	b	14f08 <ReadCompressedInt32Data+0xf4>
   152dc:	cmp	r7, #0
   152e0:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   152e4:	add	sl, r9, r7, lsl #2
   152e8:	mov	r6, sp
   152ec:	mov	r3, r4
   152f0:	mov	r2, r6
   152f4:	mov	r1, r5
   152f8:	mov	r0, r8
   152fc:	bl	30e0 <InflateData>
   15300:	mov	r0, r6
   15304:	bl	1858 <Mat_uint64Swap>
   15308:	str	r0, [r9], #4
   1530c:	cmp	sl, r9
   15310:	bne	152ec <ReadCompressedInt32Data+0x4d8>
   15314:	b	14f08 <ReadCompressedInt32Data+0xf4>
   15318:	cmp	r7, #0
   1531c:	ble	14f08 <ReadCompressedInt32Data+0xf4>
   15320:	add	sl, r9, r7, lsl #2
   15324:	mov	r6, sp
   15328:	mov	r3, r4
   1532c:	mov	r2, r6
   15330:	mov	r1, r5
   15334:	mov	r0, r8
   15338:	bl	30e0 <InflateData>
   1533c:	mov	r0, r6
   15340:	bl	17ec <Mat_int64Swap>
   15344:	str	r0, [r9], #4
   15348:	cmp	sl, r9
   1534c:	bne	15328 <ReadCompressedInt32Data+0x514>
   15350:	b	14f08 <ReadCompressedInt32Data+0xf4>

00015354 <ReadUInt32Data>:
   15354:	cmp	r1, #0
   15358:	cmpne	r0, #0
   1535c:	beq	15370 <ReadUInt32Data+0x1c>
   15360:	ldr	ip, [r0]
   15364:	cmp	ip, #0
   15368:	beq	15370 <ReadUInt32Data+0x1c>
   1536c:	b	aeb8 <ReadUInt32Data.part.9>
   15370:	mov	r0, #0
   15374:	bx	lr

00015378 <ReadCompressedUInt32Data>:
   15378:	cmp	r2, #0
   1537c:	clz	ip, r1
   15380:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15384:	lsr	ip, ip, #5
   15388:	moveq	ip, #1
   1538c:	cmp	r0, #0
   15390:	moveq	ip, #1
   15394:	strd	r6, [sp, #8]
   15398:	cmp	ip, #0
   1539c:	strd	r8, [sp, #16]
   153a0:	str	sl, [sp, #24]
   153a4:	movne	r0, #0
   153a8:	str	lr, [sp, #28]
   153ac:	sub	sp, sp, #8
   153b0:	ldr	r7, [sp, #40]	; 0x28
   153b4:	beq	153d4 <ReadCompressedUInt32Data+0x5c>
   153b8:	add	sp, sp, #8
   153bc:	ldrd	r4, [sp]
   153c0:	ldrd	r6, [sp, #8]
   153c4:	ldrd	r8, [sp, #16]
   153c8:	ldr	sl, [sp, #24]
   153cc:	add	sp, sp, #28
   153d0:	pop	{pc}		; (ldr pc, [sp], #4)
   153d4:	mov	r6, r3
   153d8:	mov	r8, r0
   153dc:	mov	r0, r3
   153e0:	mov	r9, r2
   153e4:	mov	r5, r1
   153e8:	bl	1598 <Mat_SizeOf@plt>
   153ec:	sub	r3, r6, #1
   153f0:	mov	r4, r0
   153f4:	cmp	r3, #8
   153f8:	addls	pc, pc, r3, lsl #2
   153fc:	b	15650 <ReadCompressedUInt32Data+0x2d8>
   15400:	b	15618 <ReadCompressedUInt32Data+0x2a0>
   15404:	b	155e0 <ReadCompressedUInt32Data+0x268>
   15408:	b	15598 <ReadCompressedUInt32Data+0x220>
   1540c:	b	15550 <ReadCompressedUInt32Data+0x1d8>
   15410:	b	15508 <ReadCompressedUInt32Data+0x190>
   15414:	b	154c0 <ReadCompressedUInt32Data+0x148>
   15418:	b	15474 <ReadCompressedUInt32Data+0xfc>
   1541c:	b	15650 <ReadCompressedUInt32Data+0x2d8>
   15420:	b	15424 <ReadCompressedUInt32Data+0xac>
   15424:	ldr	r3, [r8, #20]
   15428:	cmp	r3, #0
   1542c:	beq	157c0 <ReadCompressedUInt32Data+0x448>
   15430:	cmp	r7, #0
   15434:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15438:	add	sl, r9, r7, lsl #2
   1543c:	mov	r6, sp
   15440:	mov	r3, r4
   15444:	mov	r2, r6
   15448:	mov	r1, r5
   1544c:	mov	r0, r8
   15450:	bl	30e0 <InflateData>
   15454:	mov	r0, r6
   15458:	bl	19a4 <Mat_doubleSwap>
   1545c:	vcvt.u32.f64	s0, d0
   15460:	vstmia	r9!, {s0}
   15464:	cmp	r9, sl
   15468:	bne	15440 <ReadCompressedUInt32Data+0xc8>
   1546c:	mul	r0, r4, r7
   15470:	b	153b8 <ReadCompressedUInt32Data+0x40>
   15474:	ldr	r3, [r8, #20]
   15478:	cmp	r3, #0
   1547c:	beq	15784 <ReadCompressedUInt32Data+0x40c>
   15480:	cmp	r7, #0
   15484:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15488:	add	sl, r9, r7, lsl #2
   1548c:	mov	r6, sp
   15490:	mov	r3, r4
   15494:	mov	r2, r6
   15498:	mov	r1, r5
   1549c:	mov	r0, r8
   154a0:	bl	30e0 <InflateData>
   154a4:	mov	r0, r6
   154a8:	bl	1974 <Mat_floatSwap>
   154ac:	vcvt.u32.f32	s0, s0
   154b0:	vstmia	r9!, {s0}
   154b4:	cmp	r9, sl
   154b8:	bne	15490 <ReadCompressedUInt32Data+0x118>
   154bc:	b	1546c <ReadCompressedUInt32Data+0xf4>
   154c0:	ldr	r3, [r8, #20]
   154c4:	cmp	r3, #0
   154c8:	beq	1574c <ReadCompressedUInt32Data+0x3d4>
   154cc:	cmp	r7, #0
   154d0:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   154d4:	add	sl, r9, r7, lsl #2
   154d8:	mov	r6, sp
   154dc:	mov	r3, r4
   154e0:	mov	r2, r6
   154e4:	mov	r1, r5
   154e8:	mov	r0, r8
   154ec:	bl	30e0 <InflateData>
   154f0:	mov	r0, r6
   154f4:	bl	18f8 <Mat_uint32Swap>
   154f8:	str	r0, [r9], #4
   154fc:	cmp	sl, r9
   15500:	bne	154dc <ReadCompressedUInt32Data+0x164>
   15504:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15508:	ldr	r3, [r8, #20]
   1550c:	cmp	r3, #0
   15510:	beq	15714 <ReadCompressedUInt32Data+0x39c>
   15514:	cmp	r7, #0
   15518:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   1551c:	add	sl, r9, r7, lsl #2
   15520:	mov	r6, sp
   15524:	mov	r3, r4
   15528:	mov	r2, r6
   1552c:	mov	r1, r5
   15530:	mov	r0, r8
   15534:	bl	30e0 <InflateData>
   15538:	mov	r0, r6
   1553c:	bl	18c4 <Mat_int32Swap>
   15540:	str	r0, [r9], #4
   15544:	cmp	sl, r9
   15548:	bne	15524 <ReadCompressedUInt32Data+0x1ac>
   1554c:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15550:	ldr	r3, [r8, #20]
   15554:	cmp	r3, #0
   15558:	beq	156dc <ReadCompressedUInt32Data+0x364>
   1555c:	cmp	r7, #0
   15560:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15564:	add	sl, r9, r7, lsl #2
   15568:	mov	r6, sp
   1556c:	mov	r3, r4
   15570:	mov	r2, r6
   15574:	mov	r1, r5
   15578:	mov	r0, r8
   1557c:	bl	30e0 <InflateData>
   15580:	mov	r0, r6
   15584:	bl	1950 <Mat_uint16Swap>
   15588:	str	r0, [r9], #4
   1558c:	cmp	sl, r9
   15590:	bne	1556c <ReadCompressedUInt32Data+0x1f4>
   15594:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15598:	ldr	r3, [r8, #20]
   1559c:	cmp	r3, #0
   155a0:	beq	156a4 <ReadCompressedUInt32Data+0x32c>
   155a4:	cmp	r7, #0
   155a8:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   155ac:	add	sl, r9, r7, lsl #2
   155b0:	mov	r6, sp
   155b4:	mov	r3, r4
   155b8:	mov	r2, r6
   155bc:	mov	r1, r5
   155c0:	mov	r0, r8
   155c4:	bl	30e0 <InflateData>
   155c8:	mov	r0, r6
   155cc:	bl	192c <Mat_int16Swap>
   155d0:	str	r0, [r9], #4
   155d4:	cmp	sl, r9
   155d8:	bne	155b4 <ReadCompressedUInt32Data+0x23c>
   155dc:	b	1546c <ReadCompressedUInt32Data+0xf4>
   155e0:	cmp	r7, #0
   155e4:	movgt	r6, sp
   155e8:	addgt	sl, r9, r7, lsl #2
   155ec:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   155f0:	mov	r3, r4
   155f4:	mov	r2, r6
   155f8:	mov	r1, r5
   155fc:	mov	r0, r8
   15600:	bl	30e0 <InflateData>
   15604:	ldrb	r3, [sp]
   15608:	str	r3, [r9], #4
   1560c:	cmp	r9, sl
   15610:	bne	155f0 <ReadCompressedUInt32Data+0x278>
   15614:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15618:	cmp	r7, #0
   1561c:	movgt	r6, sp
   15620:	addgt	sl, r9, r7, lsl #2
   15624:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15628:	mov	r3, r4
   1562c:	mov	r2, r6
   15630:	mov	r1, r5
   15634:	mov	r0, r8
   15638:	bl	30e0 <InflateData>
   1563c:	ldrsb	r3, [sp]
   15640:	str	r3, [r9], #4
   15644:	cmp	sl, r9
   15648:	bne	15628 <ReadCompressedUInt32Data+0x2b0>
   1564c:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15650:	cmp	r6, #12
   15654:	beq	157fc <ReadCompressedUInt32Data+0x484>
   15658:	cmp	r6, #13
   1565c:	bne	1546c <ReadCompressedUInt32Data+0xf4>
   15660:	ldr	r3, [r8, #20]
   15664:	cmp	r3, #0
   15668:	bne	15840 <ReadCompressedUInt32Data+0x4c8>
   1566c:	cmp	r7, #0
   15670:	movgt	r6, sp
   15674:	addgt	sl, r9, r7, lsl #2
   15678:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   1567c:	mov	r3, r4
   15680:	mov	r2, r6
   15684:	mov	r1, r5
   15688:	mov	r0, r8
   1568c:	bl	30e0 <InflateData>
   15690:	ldr	r3, [sp]
   15694:	str	r3, [r9], #4
   15698:	cmp	sl, r9
   1569c:	bne	1567c <ReadCompressedUInt32Data+0x304>
   156a0:	b	1546c <ReadCompressedUInt32Data+0xf4>
   156a4:	cmp	r7, #0
   156a8:	movgt	r6, sp
   156ac:	addgt	sl, r9, r7, lsl #2
   156b0:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   156b4:	mov	r3, r4
   156b8:	mov	r2, r6
   156bc:	mov	r1, r5
   156c0:	mov	r0, r8
   156c4:	bl	30e0 <InflateData>
   156c8:	ldrsh	r3, [sp]
   156cc:	str	r3, [r9], #4
   156d0:	cmp	sl, r9
   156d4:	bne	156b4 <ReadCompressedUInt32Data+0x33c>
   156d8:	b	1546c <ReadCompressedUInt32Data+0xf4>
   156dc:	cmp	r7, #0
   156e0:	movgt	r6, sp
   156e4:	addgt	sl, r9, r7, lsl #2
   156e8:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   156ec:	mov	r3, r4
   156f0:	mov	r2, r6
   156f4:	mov	r1, r5
   156f8:	mov	r0, r8
   156fc:	bl	30e0 <InflateData>
   15700:	ldrh	r3, [sp]
   15704:	str	r3, [r9], #4
   15708:	cmp	sl, r9
   1570c:	bne	156ec <ReadCompressedUInt32Data+0x374>
   15710:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15714:	cmp	r7, #0
   15718:	movgt	r6, sp
   1571c:	addgt	sl, r9, r7, lsl #2
   15720:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15724:	mov	r3, r4
   15728:	mov	r2, r6
   1572c:	mov	r1, r5
   15730:	mov	r0, r8
   15734:	bl	30e0 <InflateData>
   15738:	ldr	r3, [sp]
   1573c:	str	r3, [r9], #4
   15740:	cmp	sl, r9
   15744:	bne	15724 <ReadCompressedUInt32Data+0x3ac>
   15748:	b	1546c <ReadCompressedUInt32Data+0xf4>
   1574c:	cmp	r7, #0
   15750:	movgt	r6, sp
   15754:	addgt	sl, r9, r7, lsl #2
   15758:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   1575c:	mov	r3, r4
   15760:	mov	r2, r6
   15764:	mov	r1, r5
   15768:	mov	r0, r8
   1576c:	bl	30e0 <InflateData>
   15770:	ldr	r3, [sp]
   15774:	str	r3, [r9], #4
   15778:	cmp	sl, r9
   1577c:	bne	1575c <ReadCompressedUInt32Data+0x3e4>
   15780:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15784:	cmp	r7, #0
   15788:	movgt	r6, sp
   1578c:	addgt	sl, r9, r7, lsl #2
   15790:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15794:	mov	r3, r4
   15798:	mov	r2, r6
   1579c:	mov	r1, r5
   157a0:	mov	r0, r8
   157a4:	bl	30e0 <InflateData>
   157a8:	vldr	s15, [sp]
   157ac:	vcvt.u32.f32	s15, s15
   157b0:	vstmia	r9!, {s15}
   157b4:	cmp	r9, sl
   157b8:	bne	15794 <ReadCompressedUInt32Data+0x41c>
   157bc:	b	1546c <ReadCompressedUInt32Data+0xf4>
   157c0:	cmp	r7, #0
   157c4:	movgt	r6, sp
   157c8:	addgt	sl, r9, r7, lsl #2
   157cc:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   157d0:	mov	r3, r4
   157d4:	mov	r2, r6
   157d8:	mov	r1, r5
   157dc:	mov	r0, r8
   157e0:	bl	30e0 <InflateData>
   157e4:	vldr	d7, [sp]
   157e8:	vcvt.u32.f64	s14, d7
   157ec:	vstmia	r9!, {s14}
   157f0:	cmp	r9, sl
   157f4:	bne	157d0 <ReadCompressedUInt32Data+0x458>
   157f8:	b	1546c <ReadCompressedUInt32Data+0xf4>
   157fc:	ldr	r3, [r8, #20]
   15800:	cmp	r3, #0
   15804:	bne	1587c <ReadCompressedUInt32Data+0x504>
   15808:	cmp	r7, #0
   1580c:	movgt	r6, sp
   15810:	addgt	sl, r9, r7, lsl #2
   15814:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15818:	mov	r3, r4
   1581c:	mov	r2, r6
   15820:	mov	r1, r5
   15824:	mov	r0, r8
   15828:	bl	30e0 <InflateData>
   1582c:	ldr	r3, [sp]
   15830:	str	r3, [r9], #4
   15834:	cmp	r9, sl
   15838:	bne	15818 <ReadCompressedUInt32Data+0x4a0>
   1583c:	b	1546c <ReadCompressedUInt32Data+0xf4>
   15840:	cmp	r7, #0
   15844:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15848:	add	sl, r9, r7, lsl #2
   1584c:	mov	r6, sp
   15850:	mov	r3, r4
   15854:	mov	r2, r6
   15858:	mov	r1, r5
   1585c:	mov	r0, r8
   15860:	bl	30e0 <InflateData>
   15864:	mov	r0, r6
   15868:	bl	1858 <Mat_uint64Swap>
   1586c:	str	r0, [r9], #4
   15870:	cmp	sl, r9
   15874:	bne	15850 <ReadCompressedUInt32Data+0x4d8>
   15878:	b	1546c <ReadCompressedUInt32Data+0xf4>
   1587c:	cmp	r7, #0
   15880:	ble	1546c <ReadCompressedUInt32Data+0xf4>
   15884:	add	sl, r9, r7, lsl #2
   15888:	mov	r6, sp
   1588c:	mov	r3, r4
   15890:	mov	r2, r6
   15894:	mov	r1, r5
   15898:	mov	r0, r8
   1589c:	bl	30e0 <InflateData>
   158a0:	mov	r0, r6
   158a4:	bl	17ec <Mat_int64Swap>
   158a8:	str	r0, [r9], #4
   158ac:	cmp	sl, r9
   158b0:	bne	1588c <ReadCompressedUInt32Data+0x514>
   158b4:	b	1546c <ReadCompressedUInt32Data+0xf4>

000158b8 <ReadInt16Data>:
   158b8:	cmp	r1, #0
   158bc:	cmpne	r0, #0
   158c0:	beq	158d4 <ReadInt16Data+0x1c>
   158c4:	ldr	ip, [r0]
   158c8:	cmp	ip, #0
   158cc:	beq	158d4 <ReadInt16Data+0x1c>
   158d0:	b	c670 <ReadInt16Data.part.11>
   158d4:	mov	r0, #0
   158d8:	bx	lr

000158dc <ReadCompressedInt16Data>:
   158dc:	cmp	r2, #0
   158e0:	clz	ip, r1
   158e4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   158e8:	lsr	ip, ip, #5
   158ec:	moveq	ip, #1
   158f0:	cmp	r0, #0
   158f4:	moveq	ip, #1
   158f8:	strd	r6, [sp, #8]
   158fc:	cmp	ip, #0
   15900:	strd	r8, [sp, #16]
   15904:	str	sl, [sp, #24]
   15908:	movne	r0, #0
   1590c:	str	lr, [sp, #28]
   15910:	sub	sp, sp, #8
   15914:	ldr	r7, [sp, #40]	; 0x28
   15918:	beq	15938 <ReadCompressedInt16Data+0x5c>
   1591c:	add	sp, sp, #8
   15920:	ldrd	r4, [sp]
   15924:	ldrd	r6, [sp, #8]
   15928:	ldrd	r8, [sp, #16]
   1592c:	ldr	sl, [sp, #24]
   15930:	add	sp, sp, #28
   15934:	pop	{pc}		; (ldr pc, [sp], #4)
   15938:	mov	r6, r3
   1593c:	mov	r8, r0
   15940:	mov	r0, r3
   15944:	mov	r9, r2
   15948:	mov	r5, r1
   1594c:	bl	1598 <Mat_SizeOf@plt>
   15950:	sub	r3, r6, #1
   15954:	mov	r4, r0
   15958:	cmp	r3, #8
   1595c:	addls	pc, pc, r3, lsl #2
   15960:	b	15bbc <ReadCompressedInt16Data+0x2e0>
   15964:	b	15b84 <ReadCompressedInt16Data+0x2a8>
   15968:	b	15b4c <ReadCompressedInt16Data+0x270>
   1596c:	b	15b04 <ReadCompressedInt16Data+0x228>
   15970:	b	15abc <ReadCompressedInt16Data+0x1e0>
   15974:	b	15a74 <ReadCompressedInt16Data+0x198>
   15978:	b	15a2c <ReadCompressedInt16Data+0x150>
   1597c:	b	159dc <ReadCompressedInt16Data+0x100>
   15980:	b	15bbc <ReadCompressedInt16Data+0x2e0>
   15984:	b	15988 <ReadCompressedInt16Data+0xac>
   15988:	ldr	r3, [r8, #20]
   1598c:	cmp	r3, #0
   15990:	beq	15d30 <ReadCompressedInt16Data+0x454>
   15994:	cmp	r7, #0
   15998:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   1599c:	add	sl, r9, r7, lsl #1
   159a0:	mov	r6, sp
   159a4:	mov	r3, r4
   159a8:	mov	r2, r6
   159ac:	mov	r1, r5
   159b0:	mov	r0, r8
   159b4:	bl	30e0 <InflateData>
   159b8:	mov	r0, r6
   159bc:	bl	19a4 <Mat_doubleSwap>
   159c0:	vcvt.s32.f64	s0, d0
   159c4:	vmov	r3, s0
   159c8:	strh	r3, [r9], #2
   159cc:	cmp	r9, sl
   159d0:	bne	159a4 <ReadCompressedInt16Data+0xc8>
   159d4:	mul	r0, r4, r7
   159d8:	b	1591c <ReadCompressedInt16Data+0x40>
   159dc:	ldr	r3, [r8, #20]
   159e0:	cmp	r3, #0
   159e4:	beq	15cf0 <ReadCompressedInt16Data+0x414>
   159e8:	cmp	r7, #0
   159ec:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   159f0:	add	sl, r9, r7, lsl #1
   159f4:	mov	r6, sp
   159f8:	mov	r3, r4
   159fc:	mov	r2, r6
   15a00:	mov	r1, r5
   15a04:	mov	r0, r8
   15a08:	bl	30e0 <InflateData>
   15a0c:	mov	r0, r6
   15a10:	bl	1974 <Mat_floatSwap>
   15a14:	vcvt.s32.f32	s0, s0
   15a18:	vmov	r3, s0
   15a1c:	strh	r3, [r9], #2
   15a20:	cmp	r9, sl
   15a24:	bne	159f8 <ReadCompressedInt16Data+0x11c>
   15a28:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15a2c:	ldr	r3, [r8, #20]
   15a30:	cmp	r3, #0
   15a34:	beq	15cb8 <ReadCompressedInt16Data+0x3dc>
   15a38:	cmp	r7, #0
   15a3c:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15a40:	add	sl, r9, r7, lsl #1
   15a44:	mov	r6, sp
   15a48:	mov	r3, r4
   15a4c:	mov	r2, r6
   15a50:	mov	r1, r5
   15a54:	mov	r0, r8
   15a58:	bl	30e0 <InflateData>
   15a5c:	mov	r0, r6
   15a60:	bl	18f8 <Mat_uint32Swap>
   15a64:	strh	r0, [r9], #2
   15a68:	cmp	sl, r9
   15a6c:	bne	15a48 <ReadCompressedInt16Data+0x16c>
   15a70:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15a74:	ldr	r3, [r8, #20]
   15a78:	cmp	r3, #0
   15a7c:	beq	15c80 <ReadCompressedInt16Data+0x3a4>
   15a80:	cmp	r7, #0
   15a84:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15a88:	add	sl, r9, r7, lsl #1
   15a8c:	mov	r6, sp
   15a90:	mov	r3, r4
   15a94:	mov	r2, r6
   15a98:	mov	r1, r5
   15a9c:	mov	r0, r8
   15aa0:	bl	30e0 <InflateData>
   15aa4:	mov	r0, r6
   15aa8:	bl	18c4 <Mat_int32Swap>
   15aac:	strh	r0, [r9], #2
   15ab0:	cmp	sl, r9
   15ab4:	bne	15a90 <ReadCompressedInt16Data+0x1b4>
   15ab8:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15abc:	ldr	r3, [r8, #20]
   15ac0:	cmp	r3, #0
   15ac4:	beq	15c48 <ReadCompressedInt16Data+0x36c>
   15ac8:	cmp	r7, #0
   15acc:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15ad0:	add	sl, r9, r7, lsl #1
   15ad4:	mov	r6, sp
   15ad8:	mov	r3, r4
   15adc:	mov	r2, r6
   15ae0:	mov	r1, r5
   15ae4:	mov	r0, r8
   15ae8:	bl	30e0 <InflateData>
   15aec:	mov	r0, r6
   15af0:	bl	1950 <Mat_uint16Swap>
   15af4:	strh	r0, [r9], #2
   15af8:	cmp	sl, r9
   15afc:	bne	15ad8 <ReadCompressedInt16Data+0x1fc>
   15b00:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15b04:	ldr	r3, [r8, #20]
   15b08:	cmp	r3, #0
   15b0c:	beq	15c10 <ReadCompressedInt16Data+0x334>
   15b10:	cmp	r7, #0
   15b14:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15b18:	add	sl, r9, r7, lsl #1
   15b1c:	mov	r6, sp
   15b20:	mov	r3, r4
   15b24:	mov	r2, r6
   15b28:	mov	r1, r5
   15b2c:	mov	r0, r8
   15b30:	bl	30e0 <InflateData>
   15b34:	mov	r0, r6
   15b38:	bl	192c <Mat_int16Swap>
   15b3c:	strh	r0, [r9], #2
   15b40:	cmp	sl, r9
   15b44:	bne	15b20 <ReadCompressedInt16Data+0x244>
   15b48:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15b4c:	cmp	r7, #0
   15b50:	movgt	r6, sp
   15b54:	addgt	sl, r9, r7, lsl #1
   15b58:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15b5c:	mov	r3, r4
   15b60:	mov	r2, r6
   15b64:	mov	r1, r5
   15b68:	mov	r0, r8
   15b6c:	bl	30e0 <InflateData>
   15b70:	ldrb	r3, [sp]
   15b74:	strh	r3, [r9], #2
   15b78:	cmp	r9, sl
   15b7c:	bne	15b5c <ReadCompressedInt16Data+0x280>
   15b80:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15b84:	cmp	r7, #0
   15b88:	movgt	r6, sp
   15b8c:	addgt	sl, r9, r7, lsl #1
   15b90:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15b94:	mov	r3, r4
   15b98:	mov	r2, r6
   15b9c:	mov	r1, r5
   15ba0:	mov	r0, r8
   15ba4:	bl	30e0 <InflateData>
   15ba8:	ldrsb	r3, [sp]
   15bac:	strh	r3, [r9], #2
   15bb0:	cmp	sl, r9
   15bb4:	bne	15b94 <ReadCompressedInt16Data+0x2b8>
   15bb8:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15bbc:	cmp	r6, #12
   15bc0:	beq	15d70 <ReadCompressedInt16Data+0x494>
   15bc4:	cmp	r6, #13
   15bc8:	bne	159d4 <ReadCompressedInt16Data+0xf8>
   15bcc:	ldr	r3, [r8, #20]
   15bd0:	cmp	r3, #0
   15bd4:	bne	15db4 <ReadCompressedInt16Data+0x4d8>
   15bd8:	cmp	r7, #0
   15bdc:	movgt	r6, sp
   15be0:	addgt	sl, r9, r7, lsl #1
   15be4:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15be8:	mov	r3, r4
   15bec:	mov	r2, r6
   15bf0:	mov	r1, r5
   15bf4:	mov	r0, r8
   15bf8:	bl	30e0 <InflateData>
   15bfc:	ldr	r3, [sp]
   15c00:	strh	r3, [r9], #2
   15c04:	cmp	sl, r9
   15c08:	bne	15be8 <ReadCompressedInt16Data+0x30c>
   15c0c:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15c10:	cmp	r7, #0
   15c14:	movgt	r6, sp
   15c18:	addgt	sl, r9, r7, lsl #1
   15c1c:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15c20:	mov	r3, r4
   15c24:	mov	r2, r6
   15c28:	mov	r1, r5
   15c2c:	mov	r0, r8
   15c30:	bl	30e0 <InflateData>
   15c34:	ldrh	r3, [sp]
   15c38:	strh	r3, [r9], #2
   15c3c:	cmp	sl, r9
   15c40:	bne	15c20 <ReadCompressedInt16Data+0x344>
   15c44:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15c48:	cmp	r7, #0
   15c4c:	movgt	r6, sp
   15c50:	addgt	sl, r9, r7, lsl #1
   15c54:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15c58:	mov	r3, r4
   15c5c:	mov	r2, r6
   15c60:	mov	r1, r5
   15c64:	mov	r0, r8
   15c68:	bl	30e0 <InflateData>
   15c6c:	ldrh	r3, [sp]
   15c70:	strh	r3, [r9], #2
   15c74:	cmp	sl, r9
   15c78:	bne	15c58 <ReadCompressedInt16Data+0x37c>
   15c7c:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15c80:	cmp	r7, #0
   15c84:	movgt	r6, sp
   15c88:	addgt	sl, r9, r7, lsl #1
   15c8c:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15c90:	mov	r3, r4
   15c94:	mov	r2, r6
   15c98:	mov	r1, r5
   15c9c:	mov	r0, r8
   15ca0:	bl	30e0 <InflateData>
   15ca4:	ldr	r3, [sp]
   15ca8:	strh	r3, [r9], #2
   15cac:	cmp	sl, r9
   15cb0:	bne	15c90 <ReadCompressedInt16Data+0x3b4>
   15cb4:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15cb8:	cmp	r7, #0
   15cbc:	movgt	r6, sp
   15cc0:	addgt	sl, r9, r7, lsl #1
   15cc4:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15cc8:	mov	r3, r4
   15ccc:	mov	r2, r6
   15cd0:	mov	r1, r5
   15cd4:	mov	r0, r8
   15cd8:	bl	30e0 <InflateData>
   15cdc:	ldr	r3, [sp]
   15ce0:	strh	r3, [r9], #2
   15ce4:	cmp	sl, r9
   15ce8:	bne	15cc8 <ReadCompressedInt16Data+0x3ec>
   15cec:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15cf0:	cmp	r7, #0
   15cf4:	movgt	r6, sp
   15cf8:	addgt	sl, r9, r7, lsl #1
   15cfc:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15d00:	mov	r3, r4
   15d04:	mov	r2, r6
   15d08:	mov	r1, r5
   15d0c:	mov	r0, r8
   15d10:	bl	30e0 <InflateData>
   15d14:	vldr	s15, [sp]
   15d18:	vcvt.s32.f32	s15, s15
   15d1c:	vmov	r3, s15
   15d20:	strh	r3, [r9], #2
   15d24:	cmp	r9, sl
   15d28:	bne	15d00 <ReadCompressedInt16Data+0x424>
   15d2c:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15d30:	cmp	r7, #0
   15d34:	movgt	r6, sp
   15d38:	addgt	sl, r9, r7, lsl #1
   15d3c:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15d40:	mov	r3, r4
   15d44:	mov	r2, r6
   15d48:	mov	r1, r5
   15d4c:	mov	r0, r8
   15d50:	bl	30e0 <InflateData>
   15d54:	vldr	d7, [sp]
   15d58:	vcvt.s32.f64	s14, d7
   15d5c:	vmov	r3, s14
   15d60:	strh	r3, [r9], #2
   15d64:	cmp	r9, sl
   15d68:	bne	15d40 <ReadCompressedInt16Data+0x464>
   15d6c:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15d70:	ldr	r3, [r8, #20]
   15d74:	cmp	r3, #0
   15d78:	bne	15df0 <ReadCompressedInt16Data+0x514>
   15d7c:	cmp	r7, #0
   15d80:	movgt	r6, sp
   15d84:	addgt	sl, r9, r7, lsl #1
   15d88:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15d8c:	mov	r3, r4
   15d90:	mov	r2, r6
   15d94:	mov	r1, r5
   15d98:	mov	r0, r8
   15d9c:	bl	30e0 <InflateData>
   15da0:	ldr	r3, [sp]
   15da4:	strh	r3, [r9], #2
   15da8:	cmp	r9, sl
   15dac:	bne	15d8c <ReadCompressedInt16Data+0x4b0>
   15db0:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15db4:	cmp	r7, #0
   15db8:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15dbc:	add	sl, r9, r7, lsl #1
   15dc0:	mov	r6, sp
   15dc4:	mov	r3, r4
   15dc8:	mov	r2, r6
   15dcc:	mov	r1, r5
   15dd0:	mov	r0, r8
   15dd4:	bl	30e0 <InflateData>
   15dd8:	mov	r0, r6
   15ddc:	bl	1858 <Mat_uint64Swap>
   15de0:	strh	r0, [r9], #2
   15de4:	cmp	sl, r9
   15de8:	bne	15dc4 <ReadCompressedInt16Data+0x4e8>
   15dec:	b	159d4 <ReadCompressedInt16Data+0xf8>
   15df0:	cmp	r7, #0
   15df4:	ble	159d4 <ReadCompressedInt16Data+0xf8>
   15df8:	add	sl, r9, r7, lsl #1
   15dfc:	mov	r6, sp
   15e00:	mov	r3, r4
   15e04:	mov	r2, r6
   15e08:	mov	r1, r5
   15e0c:	mov	r0, r8
   15e10:	bl	30e0 <InflateData>
   15e14:	mov	r0, r6
   15e18:	bl	17ec <Mat_int64Swap>
   15e1c:	strh	r0, [r9], #2
   15e20:	cmp	sl, r9
   15e24:	bne	15e00 <ReadCompressedInt16Data+0x524>
   15e28:	b	159d4 <ReadCompressedInt16Data+0xf8>

00015e2c <ReadUInt16Data>:
   15e2c:	cmp	r1, #0
   15e30:	cmpne	r0, #0
   15e34:	beq	15e48 <ReadUInt16Data+0x1c>
   15e38:	ldr	ip, [r0]
   15e3c:	cmp	ip, #0
   15e40:	beq	15e48 <ReadUInt16Data+0x1c>
   15e44:	b	deac <ReadUInt16Data.part.13>
   15e48:	mov	r0, #0
   15e4c:	bx	lr

00015e50 <ReadCompressedUInt16Data>:
   15e50:	cmp	r2, #0
   15e54:	clz	ip, r1
   15e58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15e5c:	lsr	ip, ip, #5
   15e60:	moveq	ip, #1
   15e64:	cmp	r0, #0
   15e68:	moveq	ip, #1
   15e6c:	strd	r6, [sp, #8]
   15e70:	cmp	ip, #0
   15e74:	strd	r8, [sp, #16]
   15e78:	str	sl, [sp, #24]
   15e7c:	movne	r0, #0
   15e80:	str	lr, [sp, #28]
   15e84:	sub	sp, sp, #8
   15e88:	ldr	r7, [sp, #40]	; 0x28
   15e8c:	beq	15eac <ReadCompressedUInt16Data+0x5c>
   15e90:	add	sp, sp, #8
   15e94:	ldrd	r4, [sp]
   15e98:	ldrd	r6, [sp, #8]
   15e9c:	ldrd	r8, [sp, #16]
   15ea0:	ldr	sl, [sp, #24]
   15ea4:	add	sp, sp, #28
   15ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   15eac:	mov	r6, r3
   15eb0:	mov	r8, r0
   15eb4:	mov	r0, r3
   15eb8:	mov	r9, r2
   15ebc:	mov	r5, r1
   15ec0:	bl	1598 <Mat_SizeOf@plt>
   15ec4:	sub	r3, r6, #1
   15ec8:	mov	r4, r0
   15ecc:	cmp	r3, #8
   15ed0:	addls	pc, pc, r3, lsl #2
   15ed4:	b	16130 <ReadCompressedUInt16Data+0x2e0>
   15ed8:	b	160f8 <ReadCompressedUInt16Data+0x2a8>
   15edc:	b	160c0 <ReadCompressedUInt16Data+0x270>
   15ee0:	b	16078 <ReadCompressedUInt16Data+0x228>
   15ee4:	b	16030 <ReadCompressedUInt16Data+0x1e0>
   15ee8:	b	15fe8 <ReadCompressedUInt16Data+0x198>
   15eec:	b	15fa0 <ReadCompressedUInt16Data+0x150>
   15ef0:	b	15f50 <ReadCompressedUInt16Data+0x100>
   15ef4:	b	16130 <ReadCompressedUInt16Data+0x2e0>
   15ef8:	b	15efc <ReadCompressedUInt16Data+0xac>
   15efc:	ldr	r3, [r8, #20]
   15f00:	cmp	r3, #0
   15f04:	beq	162a4 <ReadCompressedUInt16Data+0x454>
   15f08:	cmp	r7, #0
   15f0c:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   15f10:	add	sl, r9, r7, lsl #1
   15f14:	mov	r6, sp
   15f18:	mov	r3, r4
   15f1c:	mov	r2, r6
   15f20:	mov	r1, r5
   15f24:	mov	r0, r8
   15f28:	bl	30e0 <InflateData>
   15f2c:	mov	r0, r6
   15f30:	bl	19a4 <Mat_doubleSwap>
   15f34:	vcvt.u32.f64	s0, d0
   15f38:	vmov	r3, s0
   15f3c:	strh	r3, [r9], #2
   15f40:	cmp	r9, sl
   15f44:	bne	15f18 <ReadCompressedUInt16Data+0xc8>
   15f48:	mul	r0, r4, r7
   15f4c:	b	15e90 <ReadCompressedUInt16Data+0x40>
   15f50:	ldr	r3, [r8, #20]
   15f54:	cmp	r3, #0
   15f58:	beq	16264 <ReadCompressedUInt16Data+0x414>
   15f5c:	cmp	r7, #0
   15f60:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   15f64:	add	sl, r9, r7, lsl #1
   15f68:	mov	r6, sp
   15f6c:	mov	r3, r4
   15f70:	mov	r2, r6
   15f74:	mov	r1, r5
   15f78:	mov	r0, r8
   15f7c:	bl	30e0 <InflateData>
   15f80:	mov	r0, r6
   15f84:	bl	1974 <Mat_floatSwap>
   15f88:	vcvt.u32.f32	s0, s0
   15f8c:	vmov	r3, s0
   15f90:	strh	r3, [r9], #2
   15f94:	cmp	r9, sl
   15f98:	bne	15f6c <ReadCompressedUInt16Data+0x11c>
   15f9c:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   15fa0:	ldr	r3, [r8, #20]
   15fa4:	cmp	r3, #0
   15fa8:	beq	1622c <ReadCompressedUInt16Data+0x3dc>
   15fac:	cmp	r7, #0
   15fb0:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   15fb4:	add	sl, r9, r7, lsl #1
   15fb8:	mov	r6, sp
   15fbc:	mov	r3, r4
   15fc0:	mov	r2, r6
   15fc4:	mov	r1, r5
   15fc8:	mov	r0, r8
   15fcc:	bl	30e0 <InflateData>
   15fd0:	mov	r0, r6
   15fd4:	bl	18f8 <Mat_uint32Swap>
   15fd8:	strh	r0, [r9], #2
   15fdc:	cmp	sl, r9
   15fe0:	bne	15fbc <ReadCompressedUInt16Data+0x16c>
   15fe4:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   15fe8:	ldr	r3, [r8, #20]
   15fec:	cmp	r3, #0
   15ff0:	beq	161f4 <ReadCompressedUInt16Data+0x3a4>
   15ff4:	cmp	r7, #0
   15ff8:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   15ffc:	add	sl, r9, r7, lsl #1
   16000:	mov	r6, sp
   16004:	mov	r3, r4
   16008:	mov	r2, r6
   1600c:	mov	r1, r5
   16010:	mov	r0, r8
   16014:	bl	30e0 <InflateData>
   16018:	mov	r0, r6
   1601c:	bl	18c4 <Mat_int32Swap>
   16020:	strh	r0, [r9], #2
   16024:	cmp	sl, r9
   16028:	bne	16004 <ReadCompressedUInt16Data+0x1b4>
   1602c:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16030:	ldr	r3, [r8, #20]
   16034:	cmp	r3, #0
   16038:	beq	161bc <ReadCompressedUInt16Data+0x36c>
   1603c:	cmp	r7, #0
   16040:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16044:	add	sl, r9, r7, lsl #1
   16048:	mov	r6, sp
   1604c:	mov	r3, r4
   16050:	mov	r2, r6
   16054:	mov	r1, r5
   16058:	mov	r0, r8
   1605c:	bl	30e0 <InflateData>
   16060:	mov	r0, r6
   16064:	bl	1950 <Mat_uint16Swap>
   16068:	strh	r0, [r9], #2
   1606c:	cmp	sl, r9
   16070:	bne	1604c <ReadCompressedUInt16Data+0x1fc>
   16074:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16078:	ldr	r3, [r8, #20]
   1607c:	cmp	r3, #0
   16080:	beq	16184 <ReadCompressedUInt16Data+0x334>
   16084:	cmp	r7, #0
   16088:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   1608c:	add	sl, r9, r7, lsl #1
   16090:	mov	r6, sp
   16094:	mov	r3, r4
   16098:	mov	r2, r6
   1609c:	mov	r1, r5
   160a0:	mov	r0, r8
   160a4:	bl	30e0 <InflateData>
   160a8:	mov	r0, r6
   160ac:	bl	192c <Mat_int16Swap>
   160b0:	strh	r0, [r9], #2
   160b4:	cmp	sl, r9
   160b8:	bne	16094 <ReadCompressedUInt16Data+0x244>
   160bc:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   160c0:	cmp	r7, #0
   160c4:	movgt	r6, sp
   160c8:	addgt	sl, r9, r7, lsl #1
   160cc:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   160d0:	mov	r3, r4
   160d4:	mov	r2, r6
   160d8:	mov	r1, r5
   160dc:	mov	r0, r8
   160e0:	bl	30e0 <InflateData>
   160e4:	ldrb	r3, [sp]
   160e8:	strh	r3, [r9], #2
   160ec:	cmp	r9, sl
   160f0:	bne	160d0 <ReadCompressedUInt16Data+0x280>
   160f4:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   160f8:	cmp	r7, #0
   160fc:	movgt	r6, sp
   16100:	addgt	sl, r9, r7, lsl #1
   16104:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16108:	mov	r3, r4
   1610c:	mov	r2, r6
   16110:	mov	r1, r5
   16114:	mov	r0, r8
   16118:	bl	30e0 <InflateData>
   1611c:	ldrsb	r3, [sp]
   16120:	strh	r3, [r9], #2
   16124:	cmp	sl, r9
   16128:	bne	16108 <ReadCompressedUInt16Data+0x2b8>
   1612c:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16130:	cmp	r6, #12
   16134:	beq	162e4 <ReadCompressedUInt16Data+0x494>
   16138:	cmp	r6, #13
   1613c:	bne	15f48 <ReadCompressedUInt16Data+0xf8>
   16140:	ldr	r3, [r8, #20]
   16144:	cmp	r3, #0
   16148:	bne	16328 <ReadCompressedUInt16Data+0x4d8>
   1614c:	cmp	r7, #0
   16150:	movgt	r6, sp
   16154:	addgt	sl, r9, r7, lsl #1
   16158:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   1615c:	mov	r3, r4
   16160:	mov	r2, r6
   16164:	mov	r1, r5
   16168:	mov	r0, r8
   1616c:	bl	30e0 <InflateData>
   16170:	ldr	r3, [sp]
   16174:	strh	r3, [r9], #2
   16178:	cmp	sl, r9
   1617c:	bne	1615c <ReadCompressedUInt16Data+0x30c>
   16180:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16184:	cmp	r7, #0
   16188:	movgt	r6, sp
   1618c:	addgt	sl, r9, r7, lsl #1
   16190:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16194:	mov	r3, r4
   16198:	mov	r2, r6
   1619c:	mov	r1, r5
   161a0:	mov	r0, r8
   161a4:	bl	30e0 <InflateData>
   161a8:	ldrh	r3, [sp]
   161ac:	strh	r3, [r9], #2
   161b0:	cmp	sl, r9
   161b4:	bne	16194 <ReadCompressedUInt16Data+0x344>
   161b8:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   161bc:	cmp	r7, #0
   161c0:	movgt	r6, sp
   161c4:	addgt	sl, r9, r7, lsl #1
   161c8:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   161cc:	mov	r3, r4
   161d0:	mov	r2, r6
   161d4:	mov	r1, r5
   161d8:	mov	r0, r8
   161dc:	bl	30e0 <InflateData>
   161e0:	ldrh	r3, [sp]
   161e4:	strh	r3, [r9], #2
   161e8:	cmp	sl, r9
   161ec:	bne	161cc <ReadCompressedUInt16Data+0x37c>
   161f0:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   161f4:	cmp	r7, #0
   161f8:	movgt	r6, sp
   161fc:	addgt	sl, r9, r7, lsl #1
   16200:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16204:	mov	r3, r4
   16208:	mov	r2, r6
   1620c:	mov	r1, r5
   16210:	mov	r0, r8
   16214:	bl	30e0 <InflateData>
   16218:	ldr	r3, [sp]
   1621c:	strh	r3, [r9], #2
   16220:	cmp	sl, r9
   16224:	bne	16204 <ReadCompressedUInt16Data+0x3b4>
   16228:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   1622c:	cmp	r7, #0
   16230:	movgt	r6, sp
   16234:	addgt	sl, r9, r7, lsl #1
   16238:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   1623c:	mov	r3, r4
   16240:	mov	r2, r6
   16244:	mov	r1, r5
   16248:	mov	r0, r8
   1624c:	bl	30e0 <InflateData>
   16250:	ldr	r3, [sp]
   16254:	strh	r3, [r9], #2
   16258:	cmp	sl, r9
   1625c:	bne	1623c <ReadCompressedUInt16Data+0x3ec>
   16260:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16264:	cmp	r7, #0
   16268:	movgt	r6, sp
   1626c:	addgt	sl, r9, r7, lsl #1
   16270:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16274:	mov	r3, r4
   16278:	mov	r2, r6
   1627c:	mov	r1, r5
   16280:	mov	r0, r8
   16284:	bl	30e0 <InflateData>
   16288:	vldr	s15, [sp]
   1628c:	vcvt.u32.f32	s15, s15
   16290:	vmov	r3, s15
   16294:	strh	r3, [r9], #2
   16298:	cmp	r9, sl
   1629c:	bne	16274 <ReadCompressedUInt16Data+0x424>
   162a0:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   162a4:	cmp	r7, #0
   162a8:	movgt	r6, sp
   162ac:	addgt	sl, r9, r7, lsl #1
   162b0:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   162b4:	mov	r3, r4
   162b8:	mov	r2, r6
   162bc:	mov	r1, r5
   162c0:	mov	r0, r8
   162c4:	bl	30e0 <InflateData>
   162c8:	vldr	d7, [sp]
   162cc:	vcvt.u32.f64	s14, d7
   162d0:	vmov	r3, s14
   162d4:	strh	r3, [r9], #2
   162d8:	cmp	r9, sl
   162dc:	bne	162b4 <ReadCompressedUInt16Data+0x464>
   162e0:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   162e4:	ldr	r3, [r8, #20]
   162e8:	cmp	r3, #0
   162ec:	bne	16364 <ReadCompressedUInt16Data+0x514>
   162f0:	cmp	r7, #0
   162f4:	movgt	r6, sp
   162f8:	addgt	sl, r9, r7, lsl #1
   162fc:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16300:	mov	r3, r4
   16304:	mov	r2, r6
   16308:	mov	r1, r5
   1630c:	mov	r0, r8
   16310:	bl	30e0 <InflateData>
   16314:	ldr	r3, [sp]
   16318:	strh	r3, [r9], #2
   1631c:	cmp	r9, sl
   16320:	bne	16300 <ReadCompressedUInt16Data+0x4b0>
   16324:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16328:	cmp	r7, #0
   1632c:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   16330:	add	sl, r9, r7, lsl #1
   16334:	mov	r6, sp
   16338:	mov	r3, r4
   1633c:	mov	r2, r6
   16340:	mov	r1, r5
   16344:	mov	r0, r8
   16348:	bl	30e0 <InflateData>
   1634c:	mov	r0, r6
   16350:	bl	1858 <Mat_uint64Swap>
   16354:	strh	r0, [r9], #2
   16358:	cmp	sl, r9
   1635c:	bne	16338 <ReadCompressedUInt16Data+0x4e8>
   16360:	b	15f48 <ReadCompressedUInt16Data+0xf8>
   16364:	cmp	r7, #0
   16368:	ble	15f48 <ReadCompressedUInt16Data+0xf8>
   1636c:	add	sl, r9, r7, lsl #1
   16370:	mov	r6, sp
   16374:	mov	r3, r4
   16378:	mov	r2, r6
   1637c:	mov	r1, r5
   16380:	mov	r0, r8
   16384:	bl	30e0 <InflateData>
   16388:	mov	r0, r6
   1638c:	bl	17ec <Mat_int64Swap>
   16390:	strh	r0, [r9], #2
   16394:	cmp	sl, r9
   16398:	bne	16374 <ReadCompressedUInt16Data+0x524>
   1639c:	b	15f48 <ReadCompressedUInt16Data+0xf8>

000163a0 <ReadInt8Data>:
   163a0:	cmp	r1, #0
   163a4:	cmpne	r0, #0
   163a8:	beq	163bc <ReadInt8Data+0x1c>
   163ac:	ldr	ip, [r0]
   163b0:	cmp	ip, #0
   163b4:	beq	163bc <ReadInt8Data+0x1c>
   163b8:	b	f6e8 <ReadInt8Data.part.15>
   163bc:	mov	r0, #0
   163c0:	bx	lr

000163c4 <ReadCompressedInt8Data>:
   163c4:	cmp	r2, #0
   163c8:	clz	ip, r1
   163cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   163d0:	lsr	ip, ip, #5
   163d4:	moveq	ip, #1
   163d8:	cmp	r0, #0
   163dc:	moveq	ip, #1
   163e0:	strd	r6, [sp, #8]
   163e4:	cmp	ip, #0
   163e8:	strd	r8, [sp, #16]
   163ec:	str	sl, [sp, #24]
   163f0:	movne	r0, #0
   163f4:	str	lr, [sp, #28]
   163f8:	sub	sp, sp, #8
   163fc:	ldr	r8, [sp, #40]	; 0x28
   16400:	beq	16420 <ReadCompressedInt8Data+0x5c>
   16404:	add	sp, sp, #8
   16408:	ldrd	r4, [sp]
   1640c:	ldrd	r6, [sp, #8]
   16410:	ldrd	r8, [sp, #16]
   16414:	ldr	sl, [sp, #24]
   16418:	add	sp, sp, #28
   1641c:	pop	{pc}		; (ldr pc, [sp], #4)
   16420:	mov	r7, r3
   16424:	mov	r5, r0
   16428:	mov	r0, r3
   1642c:	mov	r9, r2
   16430:	mov	r6, r1
   16434:	bl	1598 <Mat_SizeOf@plt>
   16438:	sub	r3, r7, #1
   1643c:	mov	r4, r0
   16440:	cmp	r3, #8
   16444:	addls	pc, pc, r3, lsl #2
   16448:	b	166e4 <ReadCompressedInt8Data+0x320>
   1644c:	b	166a4 <ReadCompressedInt8Data+0x2e0>
   16450:	b	16664 <ReadCompressedInt8Data+0x2a0>
   16454:	b	16614 <ReadCompressedInt8Data+0x250>
   16458:	b	165c4 <ReadCompressedInt8Data+0x200>
   1645c:	b	16574 <ReadCompressedInt8Data+0x1b0>
   16460:	b	16524 <ReadCompressedInt8Data+0x160>
   16464:	b	164cc <ReadCompressedInt8Data+0x108>
   16468:	b	166e4 <ReadCompressedInt8Data+0x320>
   1646c:	b	16470 <ReadCompressedInt8Data+0xac>
   16470:	ldr	r3, [r5, #20]
   16474:	cmp	r3, #0
   16478:	beq	16888 <ReadCompressedInt8Data+0x4c4>
   1647c:	cmp	r8, #0
   16480:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16484:	sub	r2, r8, #1
   16488:	sub	sl, r9, #1
   1648c:	mov	r7, sp
   16490:	add	r9, r9, r2
   16494:	mov	r3, r4
   16498:	mov	r2, r7
   1649c:	mov	r1, r6
   164a0:	mov	r0, r5
   164a4:	bl	30e0 <InflateData>
   164a8:	mov	r0, r7
   164ac:	bl	19a4 <Mat_doubleSwap>
   164b0:	vcvt.s32.f64	s15, d0
   164b4:	vmov	r3, s15
   164b8:	strb	r3, [sl, #1]!
   164bc:	cmp	sl, r9
   164c0:	bne	16494 <ReadCompressedInt8Data+0xd0>
   164c4:	mul	r0, r4, r8
   164c8:	b	16404 <ReadCompressedInt8Data+0x40>
   164cc:	ldr	r3, [r5, #20]
   164d0:	cmp	r3, #0
   164d4:	beq	16840 <ReadCompressedInt8Data+0x47c>
   164d8:	cmp	r8, #0
   164dc:	ble	164c4 <ReadCompressedInt8Data+0x100>
   164e0:	sub	r2, r8, #1
   164e4:	sub	sl, r9, #1
   164e8:	mov	r7, sp
   164ec:	add	r9, r9, r2
   164f0:	mov	r3, r4
   164f4:	mov	r2, r7
   164f8:	mov	r1, r6
   164fc:	mov	r0, r5
   16500:	bl	30e0 <InflateData>
   16504:	mov	r0, r7
   16508:	bl	1974 <Mat_floatSwap>
   1650c:	vcvt.s32.f32	s15, s0
   16510:	vmov	r3, s15
   16514:	strb	r3, [sl, #1]!
   16518:	cmp	sl, r9
   1651c:	bne	164f0 <ReadCompressedInt8Data+0x12c>
   16520:	b	164c4 <ReadCompressedInt8Data+0x100>
   16524:	ldr	r3, [r5, #20]
   16528:	cmp	r3, #0
   1652c:	beq	16800 <ReadCompressedInt8Data+0x43c>
   16530:	cmp	r8, #0
   16534:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16538:	sub	r2, r8, #1
   1653c:	sub	sl, r9, #1
   16540:	mov	r7, sp
   16544:	add	r9, r9, r2
   16548:	mov	r3, r4
   1654c:	mov	r2, r7
   16550:	mov	r1, r6
   16554:	mov	r0, r5
   16558:	bl	30e0 <InflateData>
   1655c:	mov	r0, r7
   16560:	bl	18f8 <Mat_uint32Swap>
   16564:	strb	r0, [sl, #1]!
   16568:	cmp	sl, r9
   1656c:	bne	16548 <ReadCompressedInt8Data+0x184>
   16570:	b	164c4 <ReadCompressedInt8Data+0x100>
   16574:	ldr	r3, [r5, #20]
   16578:	cmp	r3, #0
   1657c:	beq	167c0 <ReadCompressedInt8Data+0x3fc>
   16580:	cmp	r8, #0
   16584:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16588:	sub	r2, r8, #1
   1658c:	sub	sl, r9, #1
   16590:	mov	r7, sp
   16594:	add	r9, r9, r2
   16598:	mov	r3, r4
   1659c:	mov	r2, r7
   165a0:	mov	r1, r6
   165a4:	mov	r0, r5
   165a8:	bl	30e0 <InflateData>
   165ac:	mov	r0, r7
   165b0:	bl	18c4 <Mat_int32Swap>
   165b4:	strb	r0, [sl, #1]!
   165b8:	cmp	sl, r9
   165bc:	bne	16598 <ReadCompressedInt8Data+0x1d4>
   165c0:	b	164c4 <ReadCompressedInt8Data+0x100>
   165c4:	ldr	r3, [r5, #20]
   165c8:	cmp	r3, #0
   165cc:	beq	16780 <ReadCompressedInt8Data+0x3bc>
   165d0:	cmp	r8, #0
   165d4:	ble	164c4 <ReadCompressedInt8Data+0x100>
   165d8:	sub	r2, r8, #1
   165dc:	sub	sl, r9, #1
   165e0:	mov	r7, sp
   165e4:	add	r9, r9, r2
   165e8:	mov	r3, r4
   165ec:	mov	r2, r7
   165f0:	mov	r1, r6
   165f4:	mov	r0, r5
   165f8:	bl	30e0 <InflateData>
   165fc:	mov	r0, r7
   16600:	bl	1950 <Mat_uint16Swap>
   16604:	strb	r0, [sl, #1]!
   16608:	cmp	r9, sl
   1660c:	bne	165e8 <ReadCompressedInt8Data+0x224>
   16610:	b	164c4 <ReadCompressedInt8Data+0x100>
   16614:	ldr	r3, [r5, #20]
   16618:	cmp	r3, #0
   1661c:	beq	16740 <ReadCompressedInt8Data+0x37c>
   16620:	cmp	r8, #0
   16624:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16628:	sub	r2, r8, #1
   1662c:	sub	sl, r9, #1
   16630:	mov	r7, sp
   16634:	add	r9, r9, r2
   16638:	mov	r3, r4
   1663c:	mov	r2, r7
   16640:	mov	r1, r6
   16644:	mov	r0, r5
   16648:	bl	30e0 <InflateData>
   1664c:	mov	r0, r7
   16650:	bl	192c <Mat_int16Swap>
   16654:	strb	r0, [sl, #1]!
   16658:	cmp	r9, sl
   1665c:	bne	16638 <ReadCompressedInt8Data+0x274>
   16660:	b	164c4 <ReadCompressedInt8Data+0x100>
   16664:	cmp	r8, #0
   16668:	subgt	r2, r8, #1
   1666c:	subgt	sl, r9, #1
   16670:	movgt	r7, sp
   16674:	addgt	r9, r9, r2
   16678:	ble	164c4 <ReadCompressedInt8Data+0x100>
   1667c:	mov	r3, r4
   16680:	mov	r2, r7
   16684:	mov	r1, r6
   16688:	mov	r0, r5
   1668c:	bl	30e0 <InflateData>
   16690:	ldrb	r3, [sp]
   16694:	strb	r3, [sl, #1]!
   16698:	cmp	r9, sl
   1669c:	bne	1667c <ReadCompressedInt8Data+0x2b8>
   166a0:	b	164c4 <ReadCompressedInt8Data+0x100>
   166a4:	cmp	r8, #0
   166a8:	subgt	r2, r8, #1
   166ac:	subgt	sl, r9, #1
   166b0:	movgt	r7, sp
   166b4:	addgt	r9, r9, r2
   166b8:	ble	164c4 <ReadCompressedInt8Data+0x100>
   166bc:	mov	r3, r4
   166c0:	mov	r2, r7
   166c4:	mov	r1, r6
   166c8:	mov	r0, r5
   166cc:	bl	30e0 <InflateData>
   166d0:	ldrb	r3, [sp]
   166d4:	strb	r3, [sl, #1]!
   166d8:	cmp	r9, sl
   166dc:	bne	166bc <ReadCompressedInt8Data+0x2f8>
   166e0:	b	164c4 <ReadCompressedInt8Data+0x100>
   166e4:	cmp	r7, #12
   166e8:	beq	168d0 <ReadCompressedInt8Data+0x50c>
   166ec:	cmp	r7, #13
   166f0:	bne	164c4 <ReadCompressedInt8Data+0x100>
   166f4:	ldr	r3, [r5, #20]
   166f8:	cmp	r3, #0
   166fc:	bne	1691c <ReadCompressedInt8Data+0x558>
   16700:	cmp	r8, #0
   16704:	subgt	r3, r8, #1
   16708:	subgt	sl, r9, #1
   1670c:	movgt	r7, sp
   16710:	addgt	r9, r9, r3
   16714:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16718:	mov	r3, r4
   1671c:	mov	r2, r7
   16720:	mov	r1, r6
   16724:	mov	r0, r5
   16728:	bl	30e0 <InflateData>
   1672c:	ldr	r3, [sp]
   16730:	strb	r3, [sl, #1]!
   16734:	cmp	r9, sl
   16738:	bne	16718 <ReadCompressedInt8Data+0x354>
   1673c:	b	164c4 <ReadCompressedInt8Data+0x100>
   16740:	cmp	r8, #0
   16744:	subgt	r2, r8, #1
   16748:	subgt	sl, r9, #1
   1674c:	movgt	r7, sp
   16750:	addgt	r9, r9, r2
   16754:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16758:	mov	r3, r4
   1675c:	mov	r2, r7
   16760:	mov	r1, r6
   16764:	mov	r0, r5
   16768:	bl	30e0 <InflateData>
   1676c:	ldrh	r3, [sp]
   16770:	strb	r3, [sl, #1]!
   16774:	cmp	sl, r9
   16778:	bne	16758 <ReadCompressedInt8Data+0x394>
   1677c:	b	164c4 <ReadCompressedInt8Data+0x100>
   16780:	cmp	r8, #0
   16784:	subgt	r2, r8, #1
   16788:	subgt	sl, r9, #1
   1678c:	movgt	r7, sp
   16790:	addgt	r9, r9, r2
   16794:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16798:	mov	r3, r4
   1679c:	mov	r2, r7
   167a0:	mov	r1, r6
   167a4:	mov	r0, r5
   167a8:	bl	30e0 <InflateData>
   167ac:	ldrh	r3, [sp]
   167b0:	strb	r3, [sl, #1]!
   167b4:	cmp	sl, r9
   167b8:	bne	16798 <ReadCompressedInt8Data+0x3d4>
   167bc:	b	164c4 <ReadCompressedInt8Data+0x100>
   167c0:	cmp	r8, #0
   167c4:	subgt	r2, r8, #1
   167c8:	subgt	sl, r9, #1
   167cc:	movgt	r7, sp
   167d0:	addgt	r9, r9, r2
   167d4:	ble	164c4 <ReadCompressedInt8Data+0x100>
   167d8:	mov	r3, r4
   167dc:	mov	r2, r7
   167e0:	mov	r1, r6
   167e4:	mov	r0, r5
   167e8:	bl	30e0 <InflateData>
   167ec:	ldr	r3, [sp]
   167f0:	strb	r3, [sl, #1]!
   167f4:	cmp	sl, r9
   167f8:	bne	167d8 <ReadCompressedInt8Data+0x414>
   167fc:	b	164c4 <ReadCompressedInt8Data+0x100>
   16800:	cmp	r8, #0
   16804:	subgt	r2, r8, #1
   16808:	subgt	sl, r9, #1
   1680c:	movgt	r7, sp
   16810:	addgt	r9, r9, r2
   16814:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16818:	mov	r3, r4
   1681c:	mov	r2, r7
   16820:	mov	r1, r6
   16824:	mov	r0, r5
   16828:	bl	30e0 <InflateData>
   1682c:	ldr	r3, [sp]
   16830:	strb	r3, [sl, #1]!
   16834:	cmp	sl, r9
   16838:	bne	16818 <ReadCompressedInt8Data+0x454>
   1683c:	b	164c4 <ReadCompressedInt8Data+0x100>
   16840:	cmp	r8, #0
   16844:	subgt	r2, r8, #1
   16848:	subgt	sl, r9, #1
   1684c:	movgt	r7, sp
   16850:	addgt	r9, r9, r2
   16854:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16858:	mov	r3, r4
   1685c:	mov	r2, r7
   16860:	mov	r1, r6
   16864:	mov	r0, r5
   16868:	bl	30e0 <InflateData>
   1686c:	vldr	s15, [sp]
   16870:	vcvt.s32.f32	s15, s15
   16874:	vmov	r3, s15
   16878:	strb	r3, [sl, #1]!
   1687c:	cmp	sl, r9
   16880:	bne	16858 <ReadCompressedInt8Data+0x494>
   16884:	b	164c4 <ReadCompressedInt8Data+0x100>
   16888:	cmp	r8, #0
   1688c:	subgt	r2, r8, #1
   16890:	subgt	sl, r9, #1
   16894:	movgt	r7, sp
   16898:	addgt	r9, r9, r2
   1689c:	ble	164c4 <ReadCompressedInt8Data+0x100>
   168a0:	mov	r3, r4
   168a4:	mov	r2, r7
   168a8:	mov	r1, r6
   168ac:	mov	r0, r5
   168b0:	bl	30e0 <InflateData>
   168b4:	vldr	d7, [sp]
   168b8:	vcvt.s32.f64	s15, d7
   168bc:	vmov	r3, s15
   168c0:	strb	r3, [sl, #1]!
   168c4:	cmp	sl, r9
   168c8:	bne	168a0 <ReadCompressedInt8Data+0x4dc>
   168cc:	b	164c4 <ReadCompressedInt8Data+0x100>
   168d0:	ldr	r3, [r5, #20]
   168d4:	cmp	r3, #0
   168d8:	bne	16960 <ReadCompressedInt8Data+0x59c>
   168dc:	cmp	r8, #0
   168e0:	subgt	r3, r8, #1
   168e4:	subgt	sl, r9, #1
   168e8:	movgt	r7, sp
   168ec:	addgt	r9, r9, r3
   168f0:	ble	164c4 <ReadCompressedInt8Data+0x100>
   168f4:	mov	r3, r4
   168f8:	mov	r2, r7
   168fc:	mov	r1, r6
   16900:	mov	r0, r5
   16904:	bl	30e0 <InflateData>
   16908:	ldr	r3, [sp]
   1690c:	strb	r3, [sl, #1]!
   16910:	cmp	r9, sl
   16914:	bne	168f4 <ReadCompressedInt8Data+0x530>
   16918:	b	164c4 <ReadCompressedInt8Data+0x100>
   1691c:	cmp	r8, #0
   16920:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16924:	sub	r3, r8, #1
   16928:	sub	sl, r9, #1
   1692c:	mov	r7, sp
   16930:	add	r9, r9, r3
   16934:	mov	r3, r4
   16938:	mov	r2, r7
   1693c:	mov	r1, r6
   16940:	mov	r0, r5
   16944:	bl	30e0 <InflateData>
   16948:	mov	r0, r7
   1694c:	bl	1858 <Mat_uint64Swap>
   16950:	strb	r0, [sl, #1]!
   16954:	cmp	r9, sl
   16958:	bne	16934 <ReadCompressedInt8Data+0x570>
   1695c:	b	164c4 <ReadCompressedInt8Data+0x100>
   16960:	cmp	r8, #0
   16964:	ble	164c4 <ReadCompressedInt8Data+0x100>
   16968:	sub	r3, r8, #1
   1696c:	sub	sl, r9, #1
   16970:	mov	r7, sp
   16974:	add	r9, r9, r3
   16978:	mov	r3, r4
   1697c:	mov	r2, r7
   16980:	mov	r1, r6
   16984:	mov	r0, r5
   16988:	bl	30e0 <InflateData>
   1698c:	mov	r0, r7
   16990:	bl	17ec <Mat_int64Swap>
   16994:	strb	r0, [sl, #1]!
   16998:	cmp	r9, sl
   1699c:	bne	16978 <ReadCompressedInt8Data+0x5b4>
   169a0:	b	164c4 <ReadCompressedInt8Data+0x100>

000169a4 <ReadUInt8Data>:
   169a4:	cmp	r1, #0
   169a8:	cmpne	r0, #0
   169ac:	beq	169c0 <ReadUInt8Data+0x1c>
   169b0:	ldr	ip, [r0]
   169b4:	cmp	ip, #0
   169b8:	beq	169c0 <ReadUInt8Data+0x1c>
   169bc:	b	10ed8 <ReadUInt8Data.part.17>
   169c0:	mov	r0, #0
   169c4:	bx	lr

000169c8 <ReadCompressedUInt8Data>:
   169c8:	cmp	r2, #0
   169cc:	clz	ip, r1
   169d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   169d4:	lsr	ip, ip, #5
   169d8:	moveq	ip, #1
   169dc:	cmp	r0, #0
   169e0:	moveq	ip, #1
   169e4:	strd	r6, [sp, #8]
   169e8:	cmp	ip, #0
   169ec:	strd	r8, [sp, #16]
   169f0:	str	sl, [sp, #24]
   169f4:	movne	r0, #0
   169f8:	str	lr, [sp, #28]
   169fc:	sub	sp, sp, #8
   16a00:	ldr	r8, [sp, #40]	; 0x28
   16a04:	beq	16a24 <ReadCompressedUInt8Data+0x5c>
   16a08:	add	sp, sp, #8
   16a0c:	ldrd	r4, [sp]
   16a10:	ldrd	r6, [sp, #8]
   16a14:	ldrd	r8, [sp, #16]
   16a18:	ldr	sl, [sp, #24]
   16a1c:	add	sp, sp, #28
   16a20:	pop	{pc}		; (ldr pc, [sp], #4)
   16a24:	mov	r7, r3
   16a28:	mov	r5, r0
   16a2c:	mov	r0, r3
   16a30:	mov	r9, r2
   16a34:	mov	r6, r1
   16a38:	bl	1598 <Mat_SizeOf@plt>
   16a3c:	sub	r3, r7, #1
   16a40:	mov	r4, r0
   16a44:	cmp	r3, #8
   16a48:	addls	pc, pc, r3, lsl #2
   16a4c:	b	16ce8 <ReadCompressedUInt8Data+0x320>
   16a50:	b	16ca8 <ReadCompressedUInt8Data+0x2e0>
   16a54:	b	16c68 <ReadCompressedUInt8Data+0x2a0>
   16a58:	b	16c18 <ReadCompressedUInt8Data+0x250>
   16a5c:	b	16bc8 <ReadCompressedUInt8Data+0x200>
   16a60:	b	16b78 <ReadCompressedUInt8Data+0x1b0>
   16a64:	b	16b28 <ReadCompressedUInt8Data+0x160>
   16a68:	b	16ad0 <ReadCompressedUInt8Data+0x108>
   16a6c:	b	16ce8 <ReadCompressedUInt8Data+0x320>
   16a70:	b	16a74 <ReadCompressedUInt8Data+0xac>
   16a74:	ldr	r3, [r5, #20]
   16a78:	cmp	r3, #0
   16a7c:	beq	16e8c <ReadCompressedUInt8Data+0x4c4>
   16a80:	cmp	r8, #0
   16a84:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16a88:	sub	r2, r8, #1
   16a8c:	sub	sl, r9, #1
   16a90:	mov	r7, sp
   16a94:	add	r9, r9, r2
   16a98:	mov	r3, r4
   16a9c:	mov	r2, r7
   16aa0:	mov	r1, r6
   16aa4:	mov	r0, r5
   16aa8:	bl	30e0 <InflateData>
   16aac:	mov	r0, r7
   16ab0:	bl	19a4 <Mat_doubleSwap>
   16ab4:	vcvt.u32.f64	s15, d0
   16ab8:	vmov	r3, s15
   16abc:	strb	r3, [sl, #1]!
   16ac0:	cmp	sl, r9
   16ac4:	bne	16a98 <ReadCompressedUInt8Data+0xd0>
   16ac8:	mul	r0, r4, r8
   16acc:	b	16a08 <ReadCompressedUInt8Data+0x40>
   16ad0:	ldr	r3, [r5, #20]
   16ad4:	cmp	r3, #0
   16ad8:	beq	16e44 <ReadCompressedUInt8Data+0x47c>
   16adc:	cmp	r8, #0
   16ae0:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16ae4:	sub	r2, r8, #1
   16ae8:	sub	sl, r9, #1
   16aec:	mov	r7, sp
   16af0:	add	r9, r9, r2
   16af4:	mov	r3, r4
   16af8:	mov	r2, r7
   16afc:	mov	r1, r6
   16b00:	mov	r0, r5
   16b04:	bl	30e0 <InflateData>
   16b08:	mov	r0, r7
   16b0c:	bl	1974 <Mat_floatSwap>
   16b10:	vcvt.u32.f32	s15, s0
   16b14:	vmov	r3, s15
   16b18:	strb	r3, [sl, #1]!
   16b1c:	cmp	sl, r9
   16b20:	bne	16af4 <ReadCompressedUInt8Data+0x12c>
   16b24:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16b28:	ldr	r3, [r5, #20]
   16b2c:	cmp	r3, #0
   16b30:	beq	16e04 <ReadCompressedUInt8Data+0x43c>
   16b34:	cmp	r8, #0
   16b38:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16b3c:	sub	r2, r8, #1
   16b40:	sub	sl, r9, #1
   16b44:	mov	r7, sp
   16b48:	add	r9, r9, r2
   16b4c:	mov	r3, r4
   16b50:	mov	r2, r7
   16b54:	mov	r1, r6
   16b58:	mov	r0, r5
   16b5c:	bl	30e0 <InflateData>
   16b60:	mov	r0, r7
   16b64:	bl	18f8 <Mat_uint32Swap>
   16b68:	strb	r0, [sl, #1]!
   16b6c:	cmp	sl, r9
   16b70:	bne	16b4c <ReadCompressedUInt8Data+0x184>
   16b74:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16b78:	ldr	r3, [r5, #20]
   16b7c:	cmp	r3, #0
   16b80:	beq	16dc4 <ReadCompressedUInt8Data+0x3fc>
   16b84:	cmp	r8, #0
   16b88:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16b8c:	sub	r2, r8, #1
   16b90:	sub	sl, r9, #1
   16b94:	mov	r7, sp
   16b98:	add	r9, r9, r2
   16b9c:	mov	r3, r4
   16ba0:	mov	r2, r7
   16ba4:	mov	r1, r6
   16ba8:	mov	r0, r5
   16bac:	bl	30e0 <InflateData>
   16bb0:	mov	r0, r7
   16bb4:	bl	18c4 <Mat_int32Swap>
   16bb8:	strb	r0, [sl, #1]!
   16bbc:	cmp	sl, r9
   16bc0:	bne	16b9c <ReadCompressedUInt8Data+0x1d4>
   16bc4:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16bc8:	ldr	r3, [r5, #20]
   16bcc:	cmp	r3, #0
   16bd0:	beq	16d84 <ReadCompressedUInt8Data+0x3bc>
   16bd4:	cmp	r8, #0
   16bd8:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16bdc:	sub	r2, r8, #1
   16be0:	sub	sl, r9, #1
   16be4:	mov	r7, sp
   16be8:	add	r9, r9, r2
   16bec:	mov	r3, r4
   16bf0:	mov	r2, r7
   16bf4:	mov	r1, r6
   16bf8:	mov	r0, r5
   16bfc:	bl	30e0 <InflateData>
   16c00:	mov	r0, r7
   16c04:	bl	1950 <Mat_uint16Swap>
   16c08:	strb	r0, [sl, #1]!
   16c0c:	cmp	r9, sl
   16c10:	bne	16bec <ReadCompressedUInt8Data+0x224>
   16c14:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16c18:	ldr	r3, [r5, #20]
   16c1c:	cmp	r3, #0
   16c20:	beq	16d44 <ReadCompressedUInt8Data+0x37c>
   16c24:	cmp	r8, #0
   16c28:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16c2c:	sub	r2, r8, #1
   16c30:	sub	sl, r9, #1
   16c34:	mov	r7, sp
   16c38:	add	r9, r9, r2
   16c3c:	mov	r3, r4
   16c40:	mov	r2, r7
   16c44:	mov	r1, r6
   16c48:	mov	r0, r5
   16c4c:	bl	30e0 <InflateData>
   16c50:	mov	r0, r7
   16c54:	bl	192c <Mat_int16Swap>
   16c58:	strb	r0, [sl, #1]!
   16c5c:	cmp	r9, sl
   16c60:	bne	16c3c <ReadCompressedUInt8Data+0x274>
   16c64:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16c68:	cmp	r8, #0
   16c6c:	subgt	r2, r8, #1
   16c70:	subgt	sl, r9, #1
   16c74:	movgt	r7, sp
   16c78:	addgt	r9, r9, r2
   16c7c:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16c80:	mov	r3, r4
   16c84:	mov	r2, r7
   16c88:	mov	r1, r6
   16c8c:	mov	r0, r5
   16c90:	bl	30e0 <InflateData>
   16c94:	ldrb	r3, [sp]
   16c98:	strb	r3, [sl, #1]!
   16c9c:	cmp	r9, sl
   16ca0:	bne	16c80 <ReadCompressedUInt8Data+0x2b8>
   16ca4:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16ca8:	cmp	r8, #0
   16cac:	subgt	r2, r8, #1
   16cb0:	subgt	sl, r9, #1
   16cb4:	movgt	r7, sp
   16cb8:	addgt	r9, r9, r2
   16cbc:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16cc0:	mov	r3, r4
   16cc4:	mov	r2, r7
   16cc8:	mov	r1, r6
   16ccc:	mov	r0, r5
   16cd0:	bl	30e0 <InflateData>
   16cd4:	ldrb	r3, [sp]
   16cd8:	strb	r3, [sl, #1]!
   16cdc:	cmp	r9, sl
   16ce0:	bne	16cc0 <ReadCompressedUInt8Data+0x2f8>
   16ce4:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16ce8:	cmp	r7, #12
   16cec:	beq	16ed4 <ReadCompressedUInt8Data+0x50c>
   16cf0:	cmp	r7, #13
   16cf4:	bne	16ac8 <ReadCompressedUInt8Data+0x100>
   16cf8:	ldr	r3, [r5, #20]
   16cfc:	cmp	r3, #0
   16d00:	bne	16f20 <ReadCompressedUInt8Data+0x558>
   16d04:	cmp	r8, #0
   16d08:	subgt	r3, r8, #1
   16d0c:	subgt	sl, r9, #1
   16d10:	movgt	r7, sp
   16d14:	addgt	r9, r9, r3
   16d18:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16d1c:	mov	r3, r4
   16d20:	mov	r2, r7
   16d24:	mov	r1, r6
   16d28:	mov	r0, r5
   16d2c:	bl	30e0 <InflateData>
   16d30:	ldr	r3, [sp]
   16d34:	strb	r3, [sl, #1]!
   16d38:	cmp	r9, sl
   16d3c:	bne	16d1c <ReadCompressedUInt8Data+0x354>
   16d40:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16d44:	cmp	r8, #0
   16d48:	subgt	r2, r8, #1
   16d4c:	subgt	sl, r9, #1
   16d50:	movgt	r7, sp
   16d54:	addgt	r9, r9, r2
   16d58:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16d5c:	mov	r3, r4
   16d60:	mov	r2, r7
   16d64:	mov	r1, r6
   16d68:	mov	r0, r5
   16d6c:	bl	30e0 <InflateData>
   16d70:	ldrh	r3, [sp]
   16d74:	strb	r3, [sl, #1]!
   16d78:	cmp	sl, r9
   16d7c:	bne	16d5c <ReadCompressedUInt8Data+0x394>
   16d80:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16d84:	cmp	r8, #0
   16d88:	subgt	r2, r8, #1
   16d8c:	subgt	sl, r9, #1
   16d90:	movgt	r7, sp
   16d94:	addgt	r9, r9, r2
   16d98:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16d9c:	mov	r3, r4
   16da0:	mov	r2, r7
   16da4:	mov	r1, r6
   16da8:	mov	r0, r5
   16dac:	bl	30e0 <InflateData>
   16db0:	ldrh	r3, [sp]
   16db4:	strb	r3, [sl, #1]!
   16db8:	cmp	sl, r9
   16dbc:	bne	16d9c <ReadCompressedUInt8Data+0x3d4>
   16dc0:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16dc4:	cmp	r8, #0
   16dc8:	subgt	r2, r8, #1
   16dcc:	subgt	sl, r9, #1
   16dd0:	movgt	r7, sp
   16dd4:	addgt	r9, r9, r2
   16dd8:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16ddc:	mov	r3, r4
   16de0:	mov	r2, r7
   16de4:	mov	r1, r6
   16de8:	mov	r0, r5
   16dec:	bl	30e0 <InflateData>
   16df0:	ldr	r3, [sp]
   16df4:	strb	r3, [sl, #1]!
   16df8:	cmp	sl, r9
   16dfc:	bne	16ddc <ReadCompressedUInt8Data+0x414>
   16e00:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16e04:	cmp	r8, #0
   16e08:	subgt	r2, r8, #1
   16e0c:	subgt	sl, r9, #1
   16e10:	movgt	r7, sp
   16e14:	addgt	r9, r9, r2
   16e18:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16e1c:	mov	r3, r4
   16e20:	mov	r2, r7
   16e24:	mov	r1, r6
   16e28:	mov	r0, r5
   16e2c:	bl	30e0 <InflateData>
   16e30:	ldr	r3, [sp]
   16e34:	strb	r3, [sl, #1]!
   16e38:	cmp	sl, r9
   16e3c:	bne	16e1c <ReadCompressedUInt8Data+0x454>
   16e40:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16e44:	cmp	r8, #0
   16e48:	subgt	r2, r8, #1
   16e4c:	subgt	sl, r9, #1
   16e50:	movgt	r7, sp
   16e54:	addgt	r9, r9, r2
   16e58:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16e5c:	mov	r3, r4
   16e60:	mov	r2, r7
   16e64:	mov	r1, r6
   16e68:	mov	r0, r5
   16e6c:	bl	30e0 <InflateData>
   16e70:	vldr	s15, [sp]
   16e74:	vcvt.u32.f32	s15, s15
   16e78:	vmov	r3, s15
   16e7c:	strb	r3, [sl, #1]!
   16e80:	cmp	sl, r9
   16e84:	bne	16e5c <ReadCompressedUInt8Data+0x494>
   16e88:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16e8c:	cmp	r8, #0
   16e90:	subgt	r2, r8, #1
   16e94:	subgt	sl, r9, #1
   16e98:	movgt	r7, sp
   16e9c:	addgt	r9, r9, r2
   16ea0:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16ea4:	mov	r3, r4
   16ea8:	mov	r2, r7
   16eac:	mov	r1, r6
   16eb0:	mov	r0, r5
   16eb4:	bl	30e0 <InflateData>
   16eb8:	vldr	d7, [sp]
   16ebc:	vcvt.u32.f64	s15, d7
   16ec0:	vmov	r3, s15
   16ec4:	strb	r3, [sl, #1]!
   16ec8:	cmp	sl, r9
   16ecc:	bne	16ea4 <ReadCompressedUInt8Data+0x4dc>
   16ed0:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16ed4:	ldr	r3, [r5, #20]
   16ed8:	cmp	r3, #0
   16edc:	bne	16f64 <ReadCompressedUInt8Data+0x59c>
   16ee0:	cmp	r8, #0
   16ee4:	subgt	r3, r8, #1
   16ee8:	subgt	sl, r9, #1
   16eec:	movgt	r7, sp
   16ef0:	addgt	r9, r9, r3
   16ef4:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16ef8:	mov	r3, r4
   16efc:	mov	r2, r7
   16f00:	mov	r1, r6
   16f04:	mov	r0, r5
   16f08:	bl	30e0 <InflateData>
   16f0c:	ldr	r3, [sp]
   16f10:	strb	r3, [sl, #1]!
   16f14:	cmp	r9, sl
   16f18:	bne	16ef8 <ReadCompressedUInt8Data+0x530>
   16f1c:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16f20:	cmp	r8, #0
   16f24:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16f28:	sub	r3, r8, #1
   16f2c:	sub	sl, r9, #1
   16f30:	mov	r7, sp
   16f34:	add	r9, r9, r3
   16f38:	mov	r3, r4
   16f3c:	mov	r2, r7
   16f40:	mov	r1, r6
   16f44:	mov	r0, r5
   16f48:	bl	30e0 <InflateData>
   16f4c:	mov	r0, r7
   16f50:	bl	1858 <Mat_uint64Swap>
   16f54:	strb	r0, [sl, #1]!
   16f58:	cmp	r9, sl
   16f5c:	bne	16f38 <ReadCompressedUInt8Data+0x570>
   16f60:	b	16ac8 <ReadCompressedUInt8Data+0x100>
   16f64:	cmp	r8, #0
   16f68:	ble	16ac8 <ReadCompressedUInt8Data+0x100>
   16f6c:	sub	r3, r8, #1
   16f70:	sub	sl, r9, #1
   16f74:	mov	r7, sp
   16f78:	add	r9, r9, r3
   16f7c:	mov	r3, r4
   16f80:	mov	r2, r7
   16f84:	mov	r1, r6
   16f88:	mov	r0, r5
   16f8c:	bl	30e0 <InflateData>
   16f90:	mov	r0, r7
   16f94:	bl	17ec <Mat_int64Swap>
   16f98:	strb	r0, [sl, #1]!
   16f9c:	cmp	r9, sl
   16fa0:	bne	16f7c <ReadCompressedUInt8Data+0x5b4>
   16fa4:	b	16ac8 <ReadCompressedUInt8Data+0x100>

00016fa8 <ReadCompressedCharData>:
   16fa8:	cmp	r2, #0
   16fac:	cmpne	r0, #0
   16fb0:	beq	17038 <ReadCompressedCharData+0x90>
   16fb4:	ldr	ip, [r0]
   16fb8:	cmp	ip, #0
   16fbc:	beq	17038 <ReadCompressedCharData+0x90>
   16fc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16fc4:	mov	r5, r2
   16fc8:	strd	r6, [sp, #8]
   16fcc:	mov	r6, r3
   16fd0:	mov	r7, r1
   16fd4:	str	r8, [sp, #16]
   16fd8:	mov	r8, r0
   16fdc:	mov	r0, r3
   16fe0:	str	lr, [sp, #20]
   16fe4:	bl	1598 <Mat_SizeOf@plt>
   16fe8:	sub	r3, r6, #2
   16fec:	cmp	r3, #15
   16ff0:	addls	pc, pc, r3, lsl #2
   16ff4:	b	170c4 <ReadCompressedCharData+0x11c>
   16ff8:	b	17090 <ReadCompressedCharData+0xe8>
   16ffc:	b	170c4 <ReadCompressedCharData+0x11c>
   17000:	b	17040 <ReadCompressedCharData+0x98>
   17004:	b	170c4 <ReadCompressedCharData+0x11c>
   17008:	b	170c4 <ReadCompressedCharData+0x11c>
   1700c:	b	170c4 <ReadCompressedCharData+0x11c>
   17010:	b	170c4 <ReadCompressedCharData+0x11c>
   17014:	b	170c4 <ReadCompressedCharData+0x11c>
   17018:	b	170c4 <ReadCompressedCharData+0x11c>
   1701c:	b	170c4 <ReadCompressedCharData+0x11c>
   17020:	b	170c4 <ReadCompressedCharData+0x11c>
   17024:	b	170c4 <ReadCompressedCharData+0x11c>
   17028:	b	170c4 <ReadCompressedCharData+0x11c>
   1702c:	b	170c4 <ReadCompressedCharData+0x11c>
   17030:	b	17090 <ReadCompressedCharData+0xe8>
   17034:	b	17040 <ReadCompressedCharData+0x98>
   17038:	mov	r0, #0
   1703c:	bx	lr
   17040:	ldr	r3, [sp, #24]
   17044:	mov	r1, r7
   17048:	mov	r2, r5
   1704c:	mul	r4, r0, r3
   17050:	mov	r0, r8
   17054:	mov	r3, r4
   17058:	bl	30e0 <InflateData>
   1705c:	ldr	r3, [r8, #20]
   17060:	cmp	r3, #0
   17064:	beq	170ac <ReadCompressedCharData+0x104>
   17068:	ldr	r3, [sp, #24]
   1706c:	cmp	r3, #0
   17070:	ble	170ac <ReadCompressedCharData+0x104>
   17074:	add	r6, r5, r3, lsl #1
   17078:	mov	r0, r5
   1707c:	add	r5, r5, #2
   17080:	bl	1950 <Mat_uint16Swap>
   17084:	cmp	r6, r5
   17088:	bne	17078 <ReadCompressedCharData+0xd0>
   1708c:	b	170ac <ReadCompressedCharData+0x104>
   17090:	ldr	r3, [sp, #24]
   17094:	mov	r2, r5
   17098:	mov	r1, r7
   1709c:	mul	r4, r0, r3
   170a0:	mov	r0, r8
   170a4:	mov	r3, r4
   170a8:	bl	30e0 <InflateData>
   170ac:	mov	r0, r4
   170b0:	ldrd	r4, [sp]
   170b4:	ldrd	r6, [sp, #8]
   170b8:	ldr	r8, [sp, #16]
   170bc:	add	sp, sp, #20
   170c0:	pop	{pc}		; (ldr pc, [sp], #4)
   170c4:	ldr	r3, [sp, #24]
   170c8:	mov	r1, r6
   170cc:	mul	r4, r0, r3
   170d0:	ldr	r0, [pc, #8]	; 170e0 <ReadCompressedCharData+0x138>
   170d4:	add	r0, pc, r0
   170d8:	bl	1484 <Mat_Warning@plt>
   170dc:	b	170ac <ReadCompressedCharData+0x104>
   170e0:	.word	0x00037694

000170e4 <ReadCharData>:
   170e4:	cmp	r1, #0
   170e8:	cmpne	r0, #0
   170ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   170f0:	strd	r6, [sp, #8]
   170f4:	strd	r8, [sp, #16]
   170f8:	str	sl, [sp, #24]
   170fc:	str	lr, [sp, #28]
   17100:	sub	sp, sp, #8
   17104:	beq	171b4 <ReadCharData+0xd0>
   17108:	ldr	r4, [r0]
   1710c:	cmp	r4, #0
   17110:	beq	17194 <ReadCharData+0xb0>
   17114:	mov	r4, r2
   17118:	mov	r5, r0
   1711c:	mov	r0, r2
   17120:	mov	r6, r3
   17124:	mov	r7, r1
   17128:	bl	1598 <Mat_SizeOf@plt>
   1712c:	sub	r3, r4, #2
   17130:	mov	r8, r0
   17134:	cmp	r3, #15
   17138:	addls	pc, pc, r3, lsl #2
   1713c:	b	17180 <ReadCharData+0x9c>
   17140:	b	1720c <ReadCharData+0x128>
   17144:	b	17180 <ReadCharData+0x9c>
   17148:	b	171bc <ReadCharData+0xd8>
   1714c:	b	17180 <ReadCharData+0x9c>
   17150:	b	17180 <ReadCharData+0x9c>
   17154:	b	17180 <ReadCharData+0x9c>
   17158:	b	17180 <ReadCharData+0x9c>
   1715c:	b	17180 <ReadCharData+0x9c>
   17160:	b	17180 <ReadCharData+0x9c>
   17164:	b	17180 <ReadCharData+0x9c>
   17168:	b	17180 <ReadCharData+0x9c>
   1716c:	b	17180 <ReadCharData+0x9c>
   17170:	b	17180 <ReadCharData+0x9c>
   17174:	b	17180 <ReadCharData+0x9c>
   17178:	b	1720c <ReadCharData+0x128>
   1717c:	b	171bc <ReadCharData+0xd8>
   17180:	ldr	r0, [pc, #236]	; 17274 <ReadCharData+0x190>
   17184:	mov	r1, r4
   17188:	mov	r4, #0
   1718c:	add	r0, pc, r0
   17190:	bl	1484 <Mat_Warning@plt>
   17194:	mov	r0, r4
   17198:	add	sp, sp, #8
   1719c:	ldrd	r4, [sp]
   171a0:	ldrd	r6, [sp, #8]
   171a4:	ldrd	r8, [sp, #16]
   171a8:	ldr	sl, [sp, #24]
   171ac:	add	sp, sp, #28
   171b0:	pop	{pc}		; (ldr pc, [sp], #4)
   171b4:	mov	r4, #0
   171b8:	b	17194 <ReadCharData+0xb0>
   171bc:	ldr	r4, [r5, #20]
   171c0:	cmp	r4, #0
   171c4:	bne	17228 <ReadCharData+0x144>
   171c8:	cmp	r6, #0
   171cc:	subgt	r3, r6, #1
   171d0:	subgt	sl, r7, #1
   171d4:	addgt	r9, sp, #6
   171d8:	addgt	r7, r7, r3
   171dc:	ble	17194 <ReadCharData+0xb0>
   171e0:	mov	r2, #1
   171e4:	mov	r1, r8
   171e8:	ldr	r3, [r5]
   171ec:	mov	r0, r9
   171f0:	bl	1520 <fread@plt>
   171f4:	ldrh	r3, [sp, #6]
   171f8:	add	r4, r4, r0
   171fc:	strb	r3, [sl, #1]!
   17200:	cmp	sl, r7
   17204:	bne	171e0 <ReadCharData+0xfc>
   17208:	b	17194 <ReadCharData+0xb0>
   1720c:	mov	r1, r0
   17210:	mov	r2, r6
   17214:	ldr	r3, [r5]
   17218:	mov	r0, r7
   1721c:	bl	1520 <fread@plt>
   17220:	mov	r4, r0
   17224:	b	17194 <ReadCharData+0xb0>
   17228:	cmp	r6, #0
   1722c:	ble	171b4 <ReadCharData+0xd0>
   17230:	sub	r3, r6, #1
   17234:	sub	sl, r7, #1
   17238:	mov	r4, #0
   1723c:	add	r7, r7, r3
   17240:	add	r9, sp, #6
   17244:	mov	r2, #1
   17248:	mov	r1, r8
   1724c:	ldr	r3, [r5]
   17250:	mov	r0, r9
   17254:	bl	1520 <fread@plt>
   17258:	add	r4, r4, r0
   1725c:	mov	r0, r9
   17260:	bl	1950 <Mat_uint16Swap>
   17264:	strb	r0, [sl, #1]!
   17268:	cmp	r7, sl
   1726c:	bne	17244 <ReadCharData+0x160>
   17270:	b	17194 <ReadCharData+0xb0>
   17274:	.word	0x00037628

00017278 <ReadDataSlabN>:
   17278:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1727c:	cmp	r1, #0
   17280:	cmpne	r0, #0
   17284:	strd	r6, [sp, #8]
   17288:	mov	r6, #0
   1728c:	mov	r7, #0
   17290:	strd	r8, [sp, #16]
   17294:	strd	sl, [sp, #24]
   17298:	str	lr, [sp, #32]
   1729c:	sub	sp, sp, #156	; 0x9c
   172a0:	add	r5, sp, #112	; 0x70
   172a4:	add	lr, sp, #32
   172a8:	ldr	r4, [sp, #204]	; 0xcc
   172ac:	strd	r6, [r5, #8]
   172b0:	strd	r6, [r5, #16]
   172b4:	strd	r6, [r5, #24]
   172b8:	strd	r6, [r5, #32]
   172bc:	strd	r6, [sp, #32]
   172c0:	strd	r6, [sp, #40]	; 0x28
   172c4:	strd	r6, [sp, #48]	; 0x30
   172c8:	strd	r6, [sp, #56]	; 0x38
   172cc:	strd	r6, [sp, #64]	; 0x40
   172d0:	strd	r6, [sp, #72]	; 0x48
   172d4:	strd	r6, [sp, #80]	; 0x50
   172d8:	strd	r6, [sp, #88]	; 0x58
   172dc:	strd	r6, [sp, #96]	; 0x60
   172e0:	strd	r6, [sp, #104]	; 0x68
   172e4:	strd	r6, [sp, #112]	; 0x70
   172e8:	beq	196bc <ReadDataSlabN+0x2444>
   172ec:	ldr	ip, [r0]
   172f0:	cmp	ip, #0
   172f4:	beq	196bc <ReadDataSlabN+0x2444>
   172f8:	ldr	lr, [sp, #200]	; 0xc8
   172fc:	clz	ip, r4
   17300:	lsr	ip, ip, #5
   17304:	cmp	lr, #0
   17308:	ldr	lr, [sp, #208]	; 0xd0
   1730c:	moveq	ip, #1
   17310:	cmp	lr, #0
   17314:	ldr	lr, [sp, #192]	; 0xc0
   17318:	moveq	ip, #1
   1731c:	cmp	lr, #10
   17320:	orrgt	ip, ip, #1
   17324:	cmp	ip, #0
   17328:	bne	196bc <ReadDataSlabN+0x2444>
   1732c:	mov	r6, r2
   17330:	mov	fp, r0
   17334:	str	r3, [sp, #8]
   17338:	mov	r0, r3
   1733c:	str	r1, [sp, #12]
   17340:	bl	1598 <Mat_SizeOf@plt>
   17344:	sub	r2, r6, #6
   17348:	str	r0, [sp, #4]
   1734c:	cmp	r2, #9
   17350:	addls	pc, pc, r2, lsl #2
   17354:	b	173cc <ReadDataSlabN+0x154>
   17358:	b	174cc <ReadDataSlabN+0x254>
   1735c:	b	175ac <ReadDataSlabN+0x334>
   17360:	b	1792c <ReadDataSlabN+0x6b4>
   17364:	b	1776c <ReadDataSlabN+0x4f4>
   17368:	b	17aec <ReadDataSlabN+0x874>
   1736c:	b	1768c <ReadDataSlabN+0x414>
   17370:	b	17a0c <ReadDataSlabN+0x794>
   17374:	b	1784c <ReadDataSlabN+0x5d4>
   17378:	b	17bcc <ReadDataSlabN+0x954>
   1737c:	b	173ec <ReadDataSlabN+0x174>
   17380:	mov	r7, #1
   17384:	add	r3, sp, #152	; 0x98
   17388:	ldr	r1, [sp, #4]
   1738c:	mov	r2, #1
   17390:	add	r7, r3, r7, lsl #2
   17394:	ldr	r3, [sp, #16]
   17398:	ldr	r0, [r3]
   1739c:	ldr	r3, [r7, #-120]	; 0xffffff88
   173a0:	mul	r1, r1, r3
   173a4:	add	r5, r5, r3
   173a8:	bl	1694 <fseek@plt>
   173ac:	ldr	r2, [sp, #28]
   173b0:	ldr	r3, [sp, #208]	; 0xd0
   173b4:	ldr	r3, [r3]
   173b8:	add	r3, r2, r3
   173bc:	ldr	r2, [sp, #24]
   173c0:	str	r3, [sp, #28]
   173c4:	cmp	r3, r2
   173c8:	blt	1a530 <ReadDataSlabN+0x32b8>
   173cc:	mov	r0, #0
   173d0:	add	sp, sp, #156	; 0x9c
   173d4:	ldrd	r4, [sp]
   173d8:	ldrd	r6, [sp, #8]
   173dc:	ldrd	r8, [sp, #16]
   173e0:	ldrd	sl, [sp, #24]
   173e4:	add	sp, sp, #32
   173e8:	pop	{pc}		; (ldr pc, [sp], #4)
   173ec:	ldr	r2, [sp, #192]	; 0xc0
   173f0:	ldr	r3, [r4]
   173f4:	cmp	r2, #1
   173f8:	ldr	r2, [sp, #196]	; 0xc4
   173fc:	sub	r3, r3, #1
   17400:	str	r3, [sp, #32]
   17404:	ldr	r0, [r2]
   17408:	ldr	r2, [sp, #208]	; 0xd0
   1740c:	str	r0, [sp, #112]	; 0x70
   17410:	ldr	r2, [r2]
   17414:	str	r2, [sp, #24]
   17418:	ble	1ab9c <ReadDataSlabN+0x3924>
   1741c:	ldr	r3, [sp, #192]	; 0xc0
   17420:	add	r7, r4, #4
   17424:	add	r6, sp, #36	; 0x24
   17428:	mov	r1, r0
   1742c:	str	fp, [sp, #20]
   17430:	ldr	r2, [sp, #196]	; 0xc4
   17434:	str	r4, [sp, #204]	; 0xcc
   17438:	ldr	r9, [sp, #200]	; 0xc8
   1743c:	add	r3, r4, r3, lsl #2
   17440:	ldr	sl, [sp, #208]	; 0xd0
   17444:	mov	r4, r2
   17448:	str	r3, [sp, #16]
   1744c:	mov	r3, r5
   17450:	mov	r5, #0
   17454:	ldr	ip, [r7], #4
   17458:	mov	fp, r3
   1745c:	add	r8, r2, #4
   17460:	str	r0, [r3, #4]
   17464:	sub	ip, ip, #1
   17468:	str	ip, [r6], #4
   1746c:	ldr	lr, [r2, #4]
   17470:	b	1747c <ReadDataSlabN+0x204>
   17474:	mov	lr, r1
   17478:	ldr	r1, [r2, #-4]!
   1747c:	cmp	r4, r2
   17480:	mul	ip, r1, ip
   17484:	mul	r0, lr, r0
   17488:	bne	17474 <ReadDataSlabN+0x1fc>
   1748c:	str	r0, [r3, #4]!
   17490:	ldr	r1, [fp]
   17494:	str	ip, [r6, #-4]
   17498:	ldr	r0, [r9, #4]!
   1749c:	ldr	r2, [sp, #16]
   174a0:	mla	r5, r0, r1, r5
   174a4:	ldr	r1, [sp, #24]
   174a8:	cmp	r2, r7
   174ac:	ldr	r2, [sl, #4]!
   174b0:	mul	r2, r2, r1
   174b4:	str	r2, [sp, #24]
   174b8:	beq	17cac <ReadDataSlabN+0xa34>
   174bc:	ldr	r0, [r8]
   174c0:	mov	r2, r8
   174c4:	mov	r1, r0
   174c8:	b	17454 <ReadDataSlabN+0x1dc>
   174cc:	ldr	r2, [sp, #192]	; 0xc0
   174d0:	ldr	r3, [r4]
   174d4:	cmp	r2, #1
   174d8:	ldr	r2, [sp, #196]	; 0xc4
   174dc:	sub	r3, r3, #1
   174e0:	str	r3, [sp, #32]
   174e4:	ldr	r0, [r2]
   174e8:	ldr	r2, [sp, #208]	; 0xd0
   174ec:	str	r0, [sp, #112]	; 0x70
   174f0:	ldr	r2, [r2]
   174f4:	str	r2, [sp, #24]
   174f8:	ble	1ab90 <ReadDataSlabN+0x3918>
   174fc:	ldr	r3, [sp, #192]	; 0xc0
   17500:	add	r7, r4, #4
   17504:	add	r6, sp, #36	; 0x24
   17508:	mov	r1, r0
   1750c:	str	fp, [sp, #20]
   17510:	ldr	r2, [sp, #196]	; 0xc4
   17514:	str	r4, [sp, #204]	; 0xcc
   17518:	ldr	r9, [sp, #200]	; 0xc8
   1751c:	add	r3, r4, r3, lsl #2
   17520:	ldr	sl, [sp, #208]	; 0xd0
   17524:	mov	r4, r2
   17528:	str	r3, [sp, #16]
   1752c:	mov	r3, r5
   17530:	mov	r5, #0
   17534:	ldr	ip, [r7], #4
   17538:	mov	fp, r3
   1753c:	add	r8, r2, #4
   17540:	str	r0, [r3, #4]
   17544:	sub	ip, ip, #1
   17548:	str	ip, [r6], #4
   1754c:	ldr	lr, [r2, #4]
   17550:	b	1755c <ReadDataSlabN+0x2e4>
   17554:	mov	lr, r1
   17558:	ldr	r1, [r2, #-4]!
   1755c:	cmp	r2, r4
   17560:	mul	ip, r1, ip
   17564:	mul	r0, lr, r0
   17568:	bne	17554 <ReadDataSlabN+0x2dc>
   1756c:	str	r0, [r3, #4]!
   17570:	ldr	r1, [fp]
   17574:	str	ip, [r6, #-4]
   17578:	ldr	r0, [r9, #4]!
   1757c:	ldr	r2, [sp, #16]
   17580:	mla	r5, r0, r1, r5
   17584:	ldr	r1, [sp, #24]
   17588:	cmp	r2, r7
   1758c:	ldr	r2, [sl, #4]!
   17590:	mul	r2, r2, r1
   17594:	str	r2, [sp, #24]
   17598:	beq	181d4 <ReadDataSlabN+0xf5c>
   1759c:	ldr	r0, [r8]
   175a0:	mov	r2, r8
   175a4:	mov	r1, r0
   175a8:	b	17534 <ReadDataSlabN+0x2bc>
   175ac:	ldr	r2, [sp, #192]	; 0xc0
   175b0:	ldr	r3, [r4]
   175b4:	cmp	r2, #1
   175b8:	ldr	r2, [sp, #196]	; 0xc4
   175bc:	sub	r3, r3, #1
   175c0:	str	r3, [sp, #32]
   175c4:	ldr	r0, [r2]
   175c8:	ldr	r2, [sp, #208]	; 0xd0
   175cc:	str	r0, [sp, #112]	; 0x70
   175d0:	ldr	r2, [r2]
   175d4:	str	r2, [sp, #24]
   175d8:	ble	1ab84 <ReadDataSlabN+0x390c>
   175dc:	ldr	r3, [sp, #192]	; 0xc0
   175e0:	add	r7, r4, #4
   175e4:	add	r6, sp, #36	; 0x24
   175e8:	mov	r1, r0
   175ec:	str	fp, [sp, #20]
   175f0:	ldr	r2, [sp, #196]	; 0xc4
   175f4:	str	r4, [sp, #204]	; 0xcc
   175f8:	ldr	r9, [sp, #200]	; 0xc8
   175fc:	add	r3, r4, r3, lsl #2
   17600:	ldr	sl, [sp, #208]	; 0xd0
   17604:	mov	r4, r2
   17608:	str	r3, [sp, #16]
   1760c:	mov	r3, r5
   17610:	mov	r5, #0
   17614:	ldr	ip, [r7], #4
   17618:	mov	fp, r3
   1761c:	add	r8, r2, #4
   17620:	str	r0, [r3, #4]
   17624:	sub	ip, ip, #1
   17628:	str	ip, [r6], #4
   1762c:	ldr	lr, [r2, #4]
   17630:	b	1763c <ReadDataSlabN+0x3c4>
   17634:	mov	lr, r1
   17638:	ldr	r1, [r2, #-4]!
   1763c:	cmp	r4, r2
   17640:	mul	ip, r1, ip
   17644:	mul	r0, lr, r0
   17648:	bne	17634 <ReadDataSlabN+0x3bc>
   1764c:	str	r0, [r3, #4]!
   17650:	ldr	r1, [fp]
   17654:	str	ip, [r6, #-4]
   17658:	ldr	r0, [r9, #4]!
   1765c:	ldr	r2, [sp, #16]
   17660:	mla	r5, r0, r1, r5
   17664:	ldr	r1, [sp, #24]
   17668:	cmp	r2, r7
   1766c:	ldr	r2, [sl, #4]!
   17670:	mul	r2, r2, r1
   17674:	str	r2, [sp, #24]
   17678:	beq	18c24 <ReadDataSlabN+0x19ac>
   1767c:	ldr	r0, [r8]
   17680:	mov	r2, r8
   17684:	mov	r1, r0
   17688:	b	17614 <ReadDataSlabN+0x39c>
   1768c:	ldr	r2, [sp, #192]	; 0xc0
   17690:	ldr	r3, [r4]
   17694:	cmp	r2, #1
   17698:	ldr	r2, [sp, #196]	; 0xc4
   1769c:	sub	r3, r3, #1
   176a0:	str	r3, [sp, #32]
   176a4:	ldr	r0, [r2]
   176a8:	ldr	r2, [sp, #208]	; 0xd0
   176ac:	str	r0, [sp, #112]	; 0x70
   176b0:	ldr	r2, [r2]
   176b4:	str	r2, [sp, #24]
   176b8:	ble	1ab78 <ReadDataSlabN+0x3900>
   176bc:	ldr	r3, [sp, #192]	; 0xc0
   176c0:	add	r7, r4, #4
   176c4:	add	r6, sp, #36	; 0x24
   176c8:	mov	r1, r0
   176cc:	str	fp, [sp, #20]
   176d0:	ldr	r2, [sp, #196]	; 0xc4
   176d4:	str	r4, [sp, #204]	; 0xcc
   176d8:	ldr	r9, [sp, #200]	; 0xc8
   176dc:	add	r3, r4, r3, lsl #2
   176e0:	ldr	sl, [sp, #208]	; 0xd0
   176e4:	mov	r4, r2
   176e8:	str	r3, [sp, #16]
   176ec:	mov	r3, r5
   176f0:	mov	r5, #0
   176f4:	ldr	ip, [r7], #4
   176f8:	mov	fp, r3
   176fc:	add	r8, r2, #4
   17700:	str	r0, [r3, #4]
   17704:	sub	ip, ip, #1
   17708:	str	ip, [r6], #4
   1770c:	ldr	lr, [r2, #4]
   17710:	b	1771c <ReadDataSlabN+0x4a4>
   17714:	mov	lr, r1
   17718:	ldr	r1, [r2, #-4]!
   1771c:	cmp	r4, r2
   17720:	mul	ip, r1, ip
   17724:	mul	r0, lr, r0
   17728:	bne	17714 <ReadDataSlabN+0x49c>
   1772c:	str	r0, [r3, #4]!
   17730:	ldr	r1, [fp]
   17734:	str	ip, [r6, #-4]
   17738:	ldr	r0, [r9, #4]!
   1773c:	ldr	r2, [sp, #16]
   17740:	mla	r5, r0, r1, r5
   17744:	ldr	r1, [sp, #24]
   17748:	cmp	r2, r7
   1774c:	ldr	r2, [sl, #4]!
   17750:	mul	r2, r2, r1
   17754:	str	r2, [sp, #24]
   17758:	beq	186fc <ReadDataSlabN+0x1484>
   1775c:	ldr	r0, [r8]
   17760:	mov	r2, r8
   17764:	mov	r1, r0
   17768:	b	176f4 <ReadDataSlabN+0x47c>
   1776c:	ldr	r2, [sp, #192]	; 0xc0
   17770:	ldr	r3, [r4]
   17774:	cmp	r2, #1
   17778:	ldr	r2, [sp, #196]	; 0xc4
   1777c:	sub	r3, r3, #1
   17780:	str	r3, [sp, #32]
   17784:	ldr	r0, [r2]
   17788:	ldr	r2, [sp, #208]	; 0xd0
   1778c:	str	r0, [sp, #112]	; 0x70
   17790:	ldr	r2, [r2]
   17794:	str	r2, [sp, #24]
   17798:	ble	1ab6c <ReadDataSlabN+0x38f4>
   1779c:	ldr	r3, [sp, #192]	; 0xc0
   177a0:	add	r7, r4, #4
   177a4:	add	r6, sp, #36	; 0x24
   177a8:	mov	r1, r0
   177ac:	str	fp, [sp, #20]
   177b0:	ldr	r2, [sp, #196]	; 0xc4
   177b4:	str	r4, [sp, #204]	; 0xcc
   177b8:	ldr	r9, [sp, #200]	; 0xc8
   177bc:	add	r3, r4, r3, lsl #2
   177c0:	ldr	sl, [sp, #208]	; 0xd0
   177c4:	mov	r4, r2
   177c8:	str	r3, [sp, #16]
   177cc:	mov	r3, r5
   177d0:	mov	r5, #0
   177d4:	ldr	ip, [r7], #4
   177d8:	mov	fp, r3
   177dc:	add	r8, r2, #4
   177e0:	str	r0, [r3, #4]
   177e4:	sub	ip, ip, #1
   177e8:	str	ip, [r6], #4
   177ec:	ldr	lr, [r2, #4]
   177f0:	b	177fc <ReadDataSlabN+0x584>
   177f4:	mov	lr, r1
   177f8:	ldr	r1, [r2, #-4]!
   177fc:	cmp	r4, r2
   17800:	mul	ip, r1, ip
   17804:	mul	r0, lr, r0
   17808:	bne	177f4 <ReadDataSlabN+0x57c>
   1780c:	str	r0, [r3, #4]!
   17810:	ldr	r1, [fp]
   17814:	str	ip, [r6, #-4]
   17818:	ldr	r0, [r9, #4]!
   1781c:	ldr	r2, [sp, #16]
   17820:	mla	r5, r0, r1, r5
   17824:	ldr	r1, [sp, #24]
   17828:	cmp	r2, r7
   1782c:	ldr	r2, [sl, #4]!
   17830:	mul	r2, r2, r1
   17834:	str	r2, [sp, #24]
   17838:	beq	19148 <ReadDataSlabN+0x1ed0>
   1783c:	ldr	r0, [r8]
   17840:	mov	r2, r8
   17844:	mov	r1, r0
   17848:	b	177d4 <ReadDataSlabN+0x55c>
   1784c:	ldr	r2, [sp, #192]	; 0xc0
   17850:	ldr	r3, [r4]
   17854:	cmp	r2, #1
   17858:	ldr	r2, [sp, #196]	; 0xc4
   1785c:	sub	r3, r3, #1
   17860:	str	r3, [sp, #32]
   17864:	ldr	r0, [r2]
   17868:	ldr	r2, [sp, #208]	; 0xd0
   1786c:	str	r0, [sp, #112]	; 0x70
   17870:	ldr	r2, [r2]
   17874:	str	r2, [sp, #24]
   17878:	ble	1ab60 <ReadDataSlabN+0x38e8>
   1787c:	ldr	r3, [sp, #192]	; 0xc0
   17880:	add	r7, r4, #4
   17884:	add	r6, sp, #36	; 0x24
   17888:	mov	r1, r0
   1788c:	str	fp, [sp, #20]
   17890:	ldr	r2, [sp, #196]	; 0xc4
   17894:	str	r4, [sp, #204]	; 0xcc
   17898:	ldr	r9, [sp, #200]	; 0xc8
   1789c:	add	r3, r4, r3, lsl #2
   178a0:	ldr	sl, [sp, #208]	; 0xd0
   178a4:	mov	r4, r2
   178a8:	str	r3, [sp, #16]
   178ac:	mov	r3, r5
   178b0:	mov	r5, #0
   178b4:	ldr	ip, [r7], #4
   178b8:	mov	fp, r3
   178bc:	add	r8, r2, #4
   178c0:	str	r0, [r3, #4]
   178c4:	sub	ip, ip, #1
   178c8:	str	ip, [r6], #4
   178cc:	ldr	lr, [r2, #4]
   178d0:	b	178dc <ReadDataSlabN+0x664>
   178d4:	mov	lr, r1
   178d8:	ldr	r1, [r2, #-4]!
   178dc:	cmp	r4, r2
   178e0:	mul	ip, r1, ip
   178e4:	mul	r0, lr, r0
   178e8:	bne	178d4 <ReadDataSlabN+0x65c>
   178ec:	str	r0, [r3, #4]!
   178f0:	ldr	r1, [fp]
   178f4:	str	ip, [r6, #-4]
   178f8:	ldr	r0, [r9, #4]!
   178fc:	ldr	r2, [sp, #16]
   17900:	mla	r5, r0, r1, r5
   17904:	ldr	r1, [sp, #24]
   17908:	cmp	r2, r7
   1790c:	ldr	r2, [sl, #4]!
   17910:	mul	r2, r2, r1
   17914:	str	r2, [sp, #24]
   17918:	beq	18468 <ReadDataSlabN+0x11f0>
   1791c:	ldr	r0, [r8]
   17920:	mov	r2, r8
   17924:	mov	r1, r0
   17928:	b	178b4 <ReadDataSlabN+0x63c>
   1792c:	ldr	r2, [sp, #192]	; 0xc0
   17930:	ldr	r3, [r4]
   17934:	cmp	r2, #1
   17938:	ldr	r2, [sp, #196]	; 0xc4
   1793c:	sub	r3, r3, #1
   17940:	str	r3, [sp, #32]
   17944:	ldr	r0, [r2]
   17948:	ldr	r2, [sp, #208]	; 0xd0
   1794c:	str	r0, [sp, #112]	; 0x70
   17950:	ldr	r2, [r2]
   17954:	str	r2, [sp, #24]
   17958:	ble	1ab54 <ReadDataSlabN+0x38dc>
   1795c:	ldr	r3, [sp, #192]	; 0xc0
   17960:	add	r7, r4, #4
   17964:	add	r6, sp, #36	; 0x24
   17968:	mov	r1, r0
   1796c:	str	fp, [sp, #20]
   17970:	ldr	r2, [sp, #196]	; 0xc4
   17974:	str	r4, [sp, #204]	; 0xcc
   17978:	ldr	r9, [sp, #200]	; 0xc8
   1797c:	add	r3, r4, r3, lsl #2
   17980:	ldr	sl, [sp, #208]	; 0xd0
   17984:	mov	r4, r2
   17988:	str	r3, [sp, #16]
   1798c:	mov	r3, r5
   17990:	mov	r5, #0
   17994:	ldr	ip, [r7], #4
   17998:	mov	fp, r3
   1799c:	add	r8, r2, #4
   179a0:	str	r0, [r3, #4]
   179a4:	sub	ip, ip, #1
   179a8:	str	ip, [r6], #4
   179ac:	ldr	lr, [r2, #4]
   179b0:	b	179bc <ReadDataSlabN+0x744>
   179b4:	mov	lr, r1
   179b8:	ldr	r1, [r2, #-4]!
   179bc:	cmp	r4, r2
   179c0:	mul	ip, r1, ip
   179c4:	mul	r0, lr, r0
   179c8:	bne	179b4 <ReadDataSlabN+0x73c>
   179cc:	str	r0, [r3, #4]!
   179d0:	ldr	r1, [fp]
   179d4:	str	ip, [r6, #-4]
   179d8:	ldr	r0, [r9, #4]!
   179dc:	ldr	r2, [sp, #16]
   179e0:	mla	r5, r0, r1, r5
   179e4:	ldr	r1, [sp, #24]
   179e8:	cmp	r2, r7
   179ec:	ldr	r2, [sl, #4]!
   179f0:	mul	r2, r2, r1
   179f4:	str	r2, [sp, #24]
   179f8:	beq	18eb8 <ReadDataSlabN+0x1c40>
   179fc:	ldr	r0, [r8]
   17a00:	mov	r2, r8
   17a04:	mov	r1, r0
   17a08:	b	17994 <ReadDataSlabN+0x71c>
   17a0c:	ldr	r2, [sp, #192]	; 0xc0
   17a10:	ldr	r3, [r4]
   17a14:	cmp	r2, #1
   17a18:	ldr	r2, [sp, #196]	; 0xc4
   17a1c:	sub	r3, r3, #1
   17a20:	str	r3, [sp, #32]
   17a24:	ldr	r0, [r2]
   17a28:	ldr	r2, [sp, #208]	; 0xd0
   17a2c:	str	r0, [sp, #112]	; 0x70
   17a30:	ldr	r2, [r2]
   17a34:	str	r2, [sp, #24]
   17a38:	ble	1ab48 <ReadDataSlabN+0x38d0>
   17a3c:	ldr	r3, [sp, #192]	; 0xc0
   17a40:	add	r7, r4, #4
   17a44:	add	r6, sp, #36	; 0x24
   17a48:	mov	r1, r0
   17a4c:	str	fp, [sp, #20]
   17a50:	ldr	r2, [sp, #196]	; 0xc4
   17a54:	str	r4, [sp, #204]	; 0xcc
   17a58:	ldr	r9, [sp, #200]	; 0xc8
   17a5c:	add	r3, r4, r3, lsl #2
   17a60:	ldr	sl, [sp, #208]	; 0xd0
   17a64:	mov	r4, r2
   17a68:	str	r3, [sp, #16]
   17a6c:	mov	r3, r5
   17a70:	mov	r5, #0
   17a74:	ldr	ip, [r7], #4
   17a78:	mov	fp, r3
   17a7c:	add	r8, r2, #4
   17a80:	str	r0, [r3, #4]
   17a84:	sub	ip, ip, #1
   17a88:	str	ip, [r6], #4
   17a8c:	ldr	lr, [r2, #4]
   17a90:	b	17a9c <ReadDataSlabN+0x824>
   17a94:	mov	lr, r1
   17a98:	ldr	r1, [r2, #-4]!
   17a9c:	cmp	r4, r2
   17aa0:	mul	ip, r1, ip
   17aa4:	mul	r0, lr, r0
   17aa8:	bne	17a94 <ReadDataSlabN+0x81c>
   17aac:	str	r0, [r3, #4]!
   17ab0:	ldr	r1, [fp]
   17ab4:	str	ip, [r6, #-4]
   17ab8:	ldr	r0, [r9, #4]!
   17abc:	ldr	r2, [sp, #16]
   17ac0:	mla	r5, r0, r1, r5
   17ac4:	ldr	r1, [sp, #24]
   17ac8:	cmp	r2, r7
   17acc:	ldr	r2, [sl, #4]!
   17ad0:	mul	r2, r2, r1
   17ad4:	str	r2, [sp, #24]
   17ad8:	beq	18990 <ReadDataSlabN+0x1718>
   17adc:	ldr	r0, [r8]
   17ae0:	mov	r2, r8
   17ae4:	mov	r1, r0
   17ae8:	b	17a74 <ReadDataSlabN+0x7fc>
   17aec:	ldr	r2, [sp, #192]	; 0xc0
   17af0:	ldr	r3, [r4]
   17af4:	cmp	r2, #1
   17af8:	ldr	r2, [sp, #196]	; 0xc4
   17afc:	sub	r3, r3, #1
   17b00:	str	r3, [sp, #32]
   17b04:	ldr	r0, [r2]
   17b08:	ldr	r2, [sp, #208]	; 0xd0
   17b0c:	str	r0, [sp, #112]	; 0x70
   17b10:	ldr	r2, [r2]
   17b14:	str	r2, [sp, #24]
   17b18:	ble	1ab3c <ReadDataSlabN+0x38c4>
   17b1c:	ldr	r3, [sp, #192]	; 0xc0
   17b20:	add	r7, r4, #4
   17b24:	add	r6, sp, #36	; 0x24
   17b28:	mov	r1, r0
   17b2c:	str	fp, [sp, #20]
   17b30:	ldr	r2, [sp, #196]	; 0xc4
   17b34:	str	r4, [sp, #204]	; 0xcc
   17b38:	ldr	r9, [sp, #200]	; 0xc8
   17b3c:	add	r3, r4, r3, lsl #2
   17b40:	ldr	sl, [sp, #208]	; 0xd0
   17b44:	mov	r4, r2
   17b48:	str	r3, [sp, #16]
   17b4c:	mov	r3, r5
   17b50:	mov	r5, #0
   17b54:	ldr	ip, [r7], #4
   17b58:	mov	fp, r3
   17b5c:	add	r8, r2, #4
   17b60:	str	r0, [r3, #4]
   17b64:	sub	ip, ip, #1
   17b68:	str	ip, [r6], #4
   17b6c:	ldr	lr, [r2, #4]
   17b70:	b	17b7c <ReadDataSlabN+0x904>
   17b74:	mov	lr, r1
   17b78:	ldr	r1, [r2, #-4]!
   17b7c:	cmp	r4, r2
   17b80:	mul	ip, r1, ip
   17b84:	mul	r0, lr, r0
   17b88:	bne	17b74 <ReadDataSlabN+0x8fc>
   17b8c:	str	r0, [r3, #4]!
   17b90:	ldr	r1, [fp]
   17b94:	str	ip, [r6, #-4]
   17b98:	ldr	r0, [r9, #4]!
   17b9c:	ldr	r2, [sp, #16]
   17ba0:	mla	r5, r0, r1, r5
   17ba4:	ldr	r1, [sp, #24]
   17ba8:	cmp	r2, r7
   17bac:	ldr	r2, [sl, #4]!
   17bb0:	mul	r2, r2, r1
   17bb4:	str	r2, [sp, #24]
   17bb8:	beq	193d8 <ReadDataSlabN+0x2160>
   17bbc:	ldr	r0, [r8]
   17bc0:	mov	r2, r8
   17bc4:	mov	r1, r0
   17bc8:	b	17b54 <ReadDataSlabN+0x8dc>
   17bcc:	ldr	r2, [sp, #192]	; 0xc0
   17bd0:	ldr	r3, [r4]
   17bd4:	cmp	r2, #1
   17bd8:	ldr	r2, [sp, #196]	; 0xc4
   17bdc:	sub	r3, r3, #1
   17be0:	str	r3, [sp, #32]
   17be4:	ldr	r0, [r2]
   17be8:	ldr	r2, [sp, #208]	; 0xd0
   17bec:	str	r0, [sp, #112]	; 0x70
   17bf0:	ldr	r2, [r2]
   17bf4:	str	r2, [sp, #24]
   17bf8:	ble	1ab30 <ReadDataSlabN+0x38b8>
   17bfc:	ldr	r3, [sp, #192]	; 0xc0
   17c00:	add	r7, r4, #4
   17c04:	add	r6, sp, #36	; 0x24
   17c08:	mov	r1, r0
   17c0c:	str	fp, [sp, #20]
   17c10:	ldr	r2, [sp, #196]	; 0xc4
   17c14:	str	r4, [sp, #204]	; 0xcc
   17c18:	ldr	r9, [sp, #200]	; 0xc8
   17c1c:	add	r3, r4, r3, lsl #2
   17c20:	ldr	sl, [sp, #208]	; 0xd0
   17c24:	mov	r4, r2
   17c28:	str	r3, [sp, #16]
   17c2c:	mov	r3, r5
   17c30:	mov	r5, #0
   17c34:	ldr	ip, [r7], #4
   17c38:	mov	fp, r3
   17c3c:	add	r8, r2, #4
   17c40:	str	r0, [r3, #4]
   17c44:	sub	ip, ip, #1
   17c48:	str	ip, [r6], #4
   17c4c:	ldr	lr, [r2, #4]
   17c50:	b	17c5c <ReadDataSlabN+0x9e4>
   17c54:	mov	lr, r1
   17c58:	ldr	r1, [r2, #-4]!
   17c5c:	cmp	r4, r2
   17c60:	mul	ip, r1, ip
   17c64:	mul	r0, lr, r0
   17c68:	bne	17c54 <ReadDataSlabN+0x9dc>
   17c6c:	str	r0, [r3, #4]!
   17c70:	ldr	r1, [fp]
   17c74:	str	ip, [r6, #-4]
   17c78:	ldr	r0, [r9, #4]!
   17c7c:	ldr	r2, [sp, #16]
   17c80:	mla	r5, r0, r1, r5
   17c84:	ldr	r1, [sp, #24]
   17c88:	cmp	r2, r7
   17c8c:	ldr	r2, [sl, #4]!
   17c90:	mul	r2, r2, r1
   17c94:	str	r2, [sp, #24]
   17c98:	beq	17f40 <ReadDataSlabN+0xcc8>
   17c9c:	ldr	r0, [r8]
   17ca0:	mov	r2, r8
   17ca4:	mov	r1, r0
   17ca8:	b	17c34 <ReadDataSlabN+0x9bc>
   17cac:	ldr	r3, [sp, #4]
   17cb0:	ldr	fp, [sp, #20]
   17cb4:	ldr	r4, [sp, #204]	; 0xcc
   17cb8:	mul	r1, r3, r5
   17cbc:	mov	r2, #1
   17cc0:	ldr	r0, [fp]
   17cc4:	bl	1694 <fseek@plt>
   17cc8:	ldr	r3, [r4]
   17ccc:	cmp	r3, #1
   17cd0:	ldr	r3, [sp, #24]
   17cd4:	beq	1a8d4 <ReadDataSlabN+0x365c>
   17cd8:	cmp	r3, #0
   17cdc:	movgt	r3, #0
   17ce0:	strgt	r3, [sp, #28]
   17ce4:	ble	173cc <ReadDataSlabN+0x154>
   17ce8:	ldr	r3, [sp, #200]	; 0xc8
   17cec:	ldr	r1, [r3]
   17cf0:	cmp	r1, #0
   17cf4:	bne	17ec0 <ReadDataSlabN+0xc48>
   17cf8:	ldr	r3, [sp, #208]	; 0xd0
   17cfc:	ldr	r3, [r3]
   17d00:	cmp	r3, #0
   17d04:	ble	19674 <ReadDataSlabN+0x23fc>
   17d08:	ldmib	sp, {r8, sl}
   17d0c:	mov	r6, #0
   17d10:	ldr	r3, [sp, #12]
   17d14:	ldr	r2, [sp, #28]
   17d18:	ldr	r9, [sp, #208]	; 0xd0
   17d1c:	add	r7, r3, r2, lsl #3
   17d20:	mov	r3, #1
   17d24:	mov	r1, r7
   17d28:	mov	r2, sl
   17d2c:	mov	r0, fp
   17d30:	bl	14850 <ReadUInt64Data>
   17d34:	ldr	r1, [r4]
   17d38:	mov	r2, #1
   17d3c:	add	r7, r7, #8
   17d40:	add	r6, r6, r2
   17d44:	ldr	r0, [fp]
   17d48:	sub	r1, r1, #1
   17d4c:	mul	r1, r8, r1
   17d50:	bl	1694 <fseek@plt>
   17d54:	ldr	r3, [r9]
   17d58:	ldr	ip, [r4]
   17d5c:	cmp	r3, r6
   17d60:	add	r5, r5, ip
   17d64:	bgt	17d20 <ReadDataSlabN+0xaa8>
   17d68:	ldr	r2, [sp, #200]	; 0xc8
   17d6c:	ldr	r1, [r2]
   17d70:	mov	r2, #1
   17d74:	ldr	r0, [sp, #196]	; 0xc4
   17d78:	ldr	lr, [r0]
   17d7c:	ldr	r0, [fp]
   17d80:	sub	r1, lr, r1
   17d84:	mls	r3, ip, r3, r1
   17d88:	ldr	r1, [sp, #4]
   17d8c:	add	r5, r5, r3
   17d90:	mul	r1, r1, r3
   17d94:	bl	1694 <fseek@plt>
   17d98:	ldr	r3, [sp, #192]	; 0xc0
   17d9c:	cmp	r3, #1
   17da0:	ble	17e90 <ReadDataSlabN+0xc18>
   17da4:	ldr	r3, [sp, #76]	; 0x4c
   17da8:	ldr	r2, [sp, #208]	; 0xd0
   17dac:	add	r3, r3, #1
   17db0:	ldr	r1, [r2, #4]
   17db4:	str	r3, [sp, #76]	; 0x4c
   17db8:	sdiv	r2, r3, r1
   17dbc:	mls	r3, r1, r2, r3
   17dc0:	cmp	r3, #0
   17dc4:	bne	1aae0 <ReadDataSlabN+0x3868>
   17dc8:	add	r7, sp, #76	; 0x4c
   17dcc:	add	r9, sp, #116	; 0x74
   17dd0:	str	fp, [sp, #16]
   17dd4:	ldr	r3, [sp, #208]	; 0xd0
   17dd8:	mov	r8, #1
   17ddc:	str	r4, [sp, #204]	; 0xcc
   17de0:	ldr	fp, [sp, #192]	; 0xc0
   17de4:	ldr	sl, [sp, #200]	; 0xc8
   17de8:	add	r6, r3, #4
   17dec:	b	17e24 <ReadDataSlabN+0xbac>
   17df0:	cmp	r1, #0
   17df4:	bne	17ee4 <ReadDataSlabN+0xc6c>
   17df8:	add	r8, r8, #1
   17dfc:	cmp	fp, r8
   17e00:	beq	17e88 <ReadDataSlabN+0xc10>
   17e04:	ldr	r3, [r7]
   17e08:	ldr	r1, [r6, #4]!
   17e0c:	add	r3, r3, #1
   17e10:	sdiv	r2, r3, r1
   17e14:	str	r3, [r7]
   17e18:	mls	r3, r1, r2, r3
   17e1c:	cmp	r3, #0
   17e20:	bne	17f10 <ReadDataSlabN+0xc98>
   17e24:	ldr	r4, [r9], #4
   17e28:	mov	r3, #0
   17e2c:	str	r3, [r7], #4
   17e30:	ldr	r1, [sl, #4]!
   17e34:	sdiv	r2, r5, r4
   17e38:	mls	r2, r4, r2, r5
   17e3c:	cmp	r2, r3
   17e40:	beq	17df0 <ReadDataSlabN+0xb78>
   17e44:	ldr	r3, [r9, #-8]
   17e48:	sub	r4, r4, r2
   17e4c:	mov	r2, #1
   17e50:	add	r8, r8, #1
   17e54:	ldr	r0, [sp, #16]
   17e58:	mla	r1, r1, r3, r4
   17e5c:	str	r3, [sp, #20]
   17e60:	ldr	r3, [sp, #4]
   17e64:	ldr	r0, [r0]
   17e68:	mul	r1, r3, r1
   17e6c:	bl	1694 <fseek@plt>
   17e70:	ldr	r2, [sl]
   17e74:	cmp	fp, r8
   17e78:	ldr	r3, [sp, #20]
   17e7c:	mla	r4, r2, r3, r4
   17e80:	add	r5, r5, r4
   17e84:	bne	17e04 <ReadDataSlabN+0xb8c>
   17e88:	ldr	fp, [sp, #16]
   17e8c:	ldr	r4, [sp, #204]	; 0xcc
   17e90:	ldr	r2, [sp, #28]
   17e94:	ldr	r3, [sp, #208]	; 0xd0
   17e98:	ldr	r3, [r3]
   17e9c:	add	r3, r2, r3
   17ea0:	ldr	r2, [sp, #24]
   17ea4:	str	r3, [sp, #28]
   17ea8:	cmp	r3, r2
   17eac:	bge	173cc <ReadDataSlabN+0x154>
   17eb0:	ldr	r3, [sp, #200]	; 0xc8
   17eb4:	ldr	r1, [r3]
   17eb8:	cmp	r1, #0
   17ebc:	beq	17cf8 <ReadDataSlabN+0xa80>
   17ec0:	ldr	r3, [sp, #4]
   17ec4:	mov	r2, #1
   17ec8:	ldr	r0, [fp]
   17ecc:	mul	r1, r3, r1
   17ed0:	bl	1694 <fseek@plt>
   17ed4:	ldr	r3, [sp, #200]	; 0xc8
   17ed8:	ldr	r1, [r3]
   17edc:	add	r5, r5, r1
   17ee0:	b	17cf8 <ReadDataSlabN+0xa80>
   17ee4:	ldr	r3, [sp, #16]
   17ee8:	mov	r2, #1
   17eec:	ldr	r4, [r9, #-8]
   17ef0:	ldr	r0, [r3]
   17ef4:	ldr	r3, [sp, #4]
   17ef8:	mul	r1, r1, r4
   17efc:	mul	r1, r3, r1
   17f00:	bl	1694 <fseek@plt>
   17f04:	ldr	r3, [sl]
   17f08:	mla	r5, r3, r4, r5
   17f0c:	b	17df8 <ReadDataSlabN+0xb80>
   17f10:	ldr	fp, [sp, #16]
   17f14:	ldr	r4, [sp, #204]	; 0xcc
   17f18:	add	r3, sp, #152	; 0x98
   17f1c:	mov	r2, #1
   17f20:	add	r8, r3, r8, lsl #2
   17f24:	ldr	r1, [sp, #4]
   17f28:	ldr	r3, [r8, #-120]	; 0xffffff88
   17f2c:	ldr	r0, [fp]
   17f30:	mul	r1, r1, r3
   17f34:	add	r5, r5, r3
   17f38:	bl	1694 <fseek@plt>
   17f3c:	b	17e90 <ReadDataSlabN+0xc18>
   17f40:	ldr	r3, [sp, #4]
   17f44:	ldr	fp, [sp, #20]
   17f48:	ldr	r4, [sp, #204]	; 0xcc
   17f4c:	mul	r1, r3, r5
   17f50:	mov	r2, #1
   17f54:	ldr	r0, [fp]
   17f58:	bl	1694 <fseek@plt>
   17f5c:	ldr	r3, [r4]
   17f60:	cmp	r3, #1
   17f64:	ldr	r3, [sp, #24]
   17f68:	beq	1a6c8 <ReadDataSlabN+0x3450>
   17f6c:	cmp	r3, #0
   17f70:	movgt	r3, #0
   17f74:	strgt	r3, [sp, #28]
   17f78:	ble	173cc <ReadDataSlabN+0x154>
   17f7c:	ldr	r3, [sp, #200]	; 0xc8
   17f80:	ldr	r1, [r3]
   17f84:	cmp	r1, #0
   17f88:	bne	18154 <ReadDataSlabN+0xedc>
   17f8c:	ldr	r3, [sp, #208]	; 0xd0
   17f90:	ldr	r3, [r3]
   17f94:	cmp	r3, #0
   17f98:	ble	196b4 <ReadDataSlabN+0x243c>
   17f9c:	ldmib	sp, {r8, sl}
   17fa0:	mov	r6, #0
   17fa4:	ldr	r3, [sp, #12]
   17fa8:	ldr	r2, [sp, #28]
   17fac:	ldr	r9, [sp, #208]	; 0xd0
   17fb0:	add	r7, r3, r2, lsl #3
   17fb4:	mov	r3, #1
   17fb8:	mov	r1, r7
   17fbc:	mov	r2, sl
   17fc0:	mov	r0, fp
   17fc4:	bl	142b0 <ReadInt64Data>
   17fc8:	ldr	r1, [r4]
   17fcc:	mov	r2, #1
   17fd0:	add	r7, r7, #8
   17fd4:	add	r6, r6, r2
   17fd8:	ldr	r0, [fp]
   17fdc:	sub	r1, r1, #1
   17fe0:	mul	r1, r8, r1
   17fe4:	bl	1694 <fseek@plt>
   17fe8:	ldr	r3, [r9]
   17fec:	ldr	ip, [r4]
   17ff0:	cmp	r3, r6
   17ff4:	add	r5, r5, ip
   17ff8:	bgt	17fb4 <ReadDataSlabN+0xd3c>
   17ffc:	ldr	r2, [sp, #200]	; 0xc8
   18000:	ldr	r1, [r2]
   18004:	mov	r2, #1
   18008:	ldr	r0, [sp, #196]	; 0xc4
   1800c:	ldr	lr, [r0]
   18010:	ldr	r0, [fp]
   18014:	sub	r1, lr, r1
   18018:	mls	r3, ip, r3, r1
   1801c:	ldr	r1, [sp, #4]
   18020:	add	r5, r5, r3
   18024:	mul	r1, r1, r3
   18028:	bl	1694 <fseek@plt>
   1802c:	ldr	r3, [sp, #192]	; 0xc0
   18030:	cmp	r3, #1
   18034:	ble	18124 <ReadDataSlabN+0xeac>
   18038:	ldr	r3, [sp, #76]	; 0x4c
   1803c:	ldr	r2, [sp, #208]	; 0xd0
   18040:	add	r3, r3, #1
   18044:	ldr	r1, [r2, #4]
   18048:	str	r3, [sp, #76]	; 0x4c
   1804c:	sdiv	r2, r3, r1
   18050:	mls	r3, r1, r2, r3
   18054:	cmp	r3, #0
   18058:	bne	1ab18 <ReadDataSlabN+0x38a0>
   1805c:	add	r7, sp, #76	; 0x4c
   18060:	add	r9, sp, #116	; 0x74
   18064:	str	fp, [sp, #16]
   18068:	ldr	r3, [sp, #208]	; 0xd0
   1806c:	mov	r8, #1
   18070:	str	r4, [sp, #204]	; 0xcc
   18074:	ldr	fp, [sp, #192]	; 0xc0
   18078:	ldr	sl, [sp, #200]	; 0xc8
   1807c:	add	r6, r3, #4
   18080:	b	180b8 <ReadDataSlabN+0xe40>
   18084:	cmp	r1, #0
   18088:	bne	18178 <ReadDataSlabN+0xf00>
   1808c:	add	r8, r8, #1
   18090:	cmp	fp, r8
   18094:	beq	1811c <ReadDataSlabN+0xea4>
   18098:	ldr	r3, [r7]
   1809c:	ldr	r1, [r6, #4]!
   180a0:	add	r3, r3, #1
   180a4:	sdiv	r2, r3, r1
   180a8:	str	r3, [r7]
   180ac:	mls	r3, r1, r2, r3
   180b0:	cmp	r3, #0
   180b4:	bne	181a4 <ReadDataSlabN+0xf2c>
   180b8:	ldr	r4, [r9], #4
   180bc:	mov	r3, #0
   180c0:	str	r3, [r7], #4
   180c4:	ldr	r1, [sl, #4]!
   180c8:	sdiv	r2, r5, r4
   180cc:	mls	r2, r4, r2, r5
   180d0:	cmp	r2, r3
   180d4:	beq	18084 <ReadDataSlabN+0xe0c>
   180d8:	ldr	r3, [r9, #-8]
   180dc:	sub	r4, r4, r2
   180e0:	mov	r2, #1
   180e4:	add	r8, r8, #1
   180e8:	ldr	r0, [sp, #16]
   180ec:	mla	r1, r1, r3, r4
   180f0:	str	r3, [sp, #20]
   180f4:	ldr	r3, [sp, #4]
   180f8:	ldr	r0, [r0]
   180fc:	mul	r1, r3, r1
   18100:	bl	1694 <fseek@plt>
   18104:	ldr	r2, [sl]
   18108:	cmp	fp, r8
   1810c:	ldr	r3, [sp, #20]
   18110:	mla	r4, r2, r3, r4
   18114:	add	r5, r5, r4
   18118:	bne	18098 <ReadDataSlabN+0xe20>
   1811c:	ldr	fp, [sp, #16]
   18120:	ldr	r4, [sp, #204]	; 0xcc
   18124:	ldr	r2, [sp, #28]
   18128:	ldr	r3, [sp, #208]	; 0xd0
   1812c:	ldr	r3, [r3]
   18130:	add	r3, r2, r3
   18134:	ldr	r2, [sp, #24]
   18138:	str	r3, [sp, #28]
   1813c:	cmp	r3, r2
   18140:	bge	173cc <ReadDataSlabN+0x154>
   18144:	ldr	r3, [sp, #200]	; 0xc8
   18148:	ldr	r1, [r3]
   1814c:	cmp	r1, #0
   18150:	beq	17f8c <ReadDataSlabN+0xd14>
   18154:	ldr	r3, [sp, #4]
   18158:	mov	r2, #1
   1815c:	ldr	r0, [fp]
   18160:	mul	r1, r3, r1
   18164:	bl	1694 <fseek@plt>
   18168:	ldr	r3, [sp, #200]	; 0xc8
   1816c:	ldr	r1, [r3]
   18170:	add	r5, r5, r1
   18174:	b	17f8c <ReadDataSlabN+0xd14>
   18178:	ldr	r3, [sp, #16]
   1817c:	mov	r2, #1
   18180:	ldr	r4, [r9, #-8]
   18184:	ldr	r0, [r3]
   18188:	ldr	r3, [sp, #4]
   1818c:	mul	r1, r1, r4
   18190:	mul	r1, r3, r1
   18194:	bl	1694 <fseek@plt>
   18198:	ldr	r3, [sl]
   1819c:	mla	r5, r3, r4, r5
   181a0:	b	1808c <ReadDataSlabN+0xe14>
   181a4:	ldr	fp, [sp, #16]
   181a8:	ldr	r4, [sp, #204]	; 0xcc
   181ac:	add	r3, sp, #152	; 0x98
   181b0:	mov	r2, #1
   181b4:	add	r8, r3, r8, lsl #2
   181b8:	ldr	r1, [sp, #4]
   181bc:	ldr	r3, [r8, #-120]	; 0xffffff88
   181c0:	ldr	r0, [fp]
   181c4:	mul	r1, r1, r3
   181c8:	add	r5, r5, r3
   181cc:	bl	1694 <fseek@plt>
   181d0:	b	18124 <ReadDataSlabN+0xeac>
   181d4:	ldr	r3, [sp, #4]
   181d8:	ldr	fp, [sp, #20]
   181dc:	ldr	r4, [sp, #204]	; 0xcc
   181e0:	mul	r1, r3, r5
   181e4:	mov	r2, #1
   181e8:	ldr	r0, [fp]
   181ec:	bl	1694 <fseek@plt>
   181f0:	ldr	r3, [r4]
   181f4:	cmp	r3, #1
   181f8:	ldr	r3, [sp, #24]
   181fc:	beq	1a518 <ReadDataSlabN+0x32a0>
   18200:	cmp	r3, #0
   18204:	movgt	r3, #0
   18208:	strgt	r3, [sp, #28]
   1820c:	ble	173cc <ReadDataSlabN+0x154>
   18210:	ldr	r3, [sp, #200]	; 0xc8
   18214:	ldr	r1, [r3]
   18218:	cmp	r1, #0
   1821c:	bne	183e8 <ReadDataSlabN+0x1170>
   18220:	ldr	r3, [sp, #208]	; 0xd0
   18224:	ldr	r3, [r3]
   18228:	cmp	r3, #0
   1822c:	ble	196ac <ReadDataSlabN+0x2434>
   18230:	ldmib	sp, {r8, sl}
   18234:	mov	r6, #0
   18238:	ldr	r3, [sp, #12]
   1823c:	ldr	r2, [sp, #28]
   18240:	ldr	r9, [sp, #208]	; 0xd0
   18244:	add	r7, r3, r2, lsl #3
   18248:	mov	r3, #1
   1824c:	mov	r1, r7
   18250:	mov	r2, sl
   18254:	mov	r0, fp
   18258:	bl	126c8 <ReadDoubleData>
   1825c:	ldr	r1, [r4]
   18260:	mov	r2, #1
   18264:	add	r7, r7, #8
   18268:	add	r6, r6, r2
   1826c:	ldr	r0, [fp]
   18270:	sub	r1, r1, #1
   18274:	mul	r1, r8, r1
   18278:	bl	1694 <fseek@plt>
   1827c:	ldr	r3, [r9]
   18280:	ldr	ip, [r4]
   18284:	cmp	r3, r6
   18288:	add	r5, r5, ip
   1828c:	bgt	18248 <ReadDataSlabN+0xfd0>
   18290:	ldr	r2, [sp, #200]	; 0xc8
   18294:	ldr	r1, [r2]
   18298:	mov	r2, #1
   1829c:	ldr	r0, [sp, #196]	; 0xc4
   182a0:	ldr	lr, [r0]
   182a4:	ldr	r0, [fp]
   182a8:	sub	r1, lr, r1
   182ac:	mls	r3, ip, r3, r1
   182b0:	ldr	r1, [sp, #4]
   182b4:	add	r5, r5, r3
   182b8:	mul	r1, r1, r3
   182bc:	bl	1694 <fseek@plt>
   182c0:	ldr	r3, [sp, #192]	; 0xc0
   182c4:	cmp	r3, #1
   182c8:	ble	183b8 <ReadDataSlabN+0x1140>
   182cc:	ldr	r3, [sp, #76]	; 0x4c
   182d0:	ldr	r2, [sp, #208]	; 0xd0
   182d4:	add	r3, r3, #1
   182d8:	ldr	r1, [r2, #4]
   182dc:	str	r3, [sp, #76]	; 0x4c
   182e0:	sdiv	r2, r3, r1
   182e4:	mls	r3, r1, r2, r3
   182e8:	cmp	r3, #0
   182ec:	bne	1ab20 <ReadDataSlabN+0x38a8>
   182f0:	add	r7, sp, #76	; 0x4c
   182f4:	add	r9, sp, #116	; 0x74
   182f8:	str	fp, [sp, #16]
   182fc:	ldr	r3, [sp, #208]	; 0xd0
   18300:	mov	r8, #1
   18304:	str	r4, [sp, #204]	; 0xcc
   18308:	ldr	fp, [sp, #192]	; 0xc0
   1830c:	ldr	sl, [sp, #200]	; 0xc8
   18310:	add	r6, r3, #4
   18314:	b	1834c <ReadDataSlabN+0x10d4>
   18318:	cmp	r1, #0
   1831c:	bne	1840c <ReadDataSlabN+0x1194>
   18320:	add	r8, r8, #1
   18324:	cmp	fp, r8
   18328:	beq	183b0 <ReadDataSlabN+0x1138>
   1832c:	ldr	r3, [r7]
   18330:	ldr	r1, [r6, #4]!
   18334:	add	r3, r3, #1
   18338:	sdiv	r2, r3, r1
   1833c:	str	r3, [r7]
   18340:	mls	r3, r1, r2, r3
   18344:	cmp	r3, #0
   18348:	bne	18438 <ReadDataSlabN+0x11c0>
   1834c:	ldr	r4, [r9], #4
   18350:	mov	r3, #0
   18354:	str	r3, [r7], #4
   18358:	ldr	r1, [sl, #4]!
   1835c:	sdiv	r2, r5, r4
   18360:	mls	r2, r4, r2, r5
   18364:	cmp	r2, r3
   18368:	beq	18318 <ReadDataSlabN+0x10a0>
   1836c:	ldr	r3, [r9, #-8]
   18370:	sub	r4, r4, r2
   18374:	mov	r2, #1
   18378:	add	r8, r8, #1
   1837c:	ldr	r0, [sp, #16]
   18380:	mla	r1, r1, r3, r4
   18384:	str	r3, [sp, #20]
   18388:	ldr	r3, [sp, #4]
   1838c:	ldr	r0, [r0]
   18390:	mul	r1, r3, r1
   18394:	bl	1694 <fseek@plt>
   18398:	ldr	r2, [sl]
   1839c:	cmp	fp, r8
   183a0:	ldr	r3, [sp, #20]
   183a4:	mla	r4, r2, r3, r4
   183a8:	add	r5, r5, r4
   183ac:	bne	1832c <ReadDataSlabN+0x10b4>
   183b0:	ldr	fp, [sp, #16]
   183b4:	ldr	r4, [sp, #204]	; 0xcc
   183b8:	ldr	r2, [sp, #28]
   183bc:	ldr	r3, [sp, #208]	; 0xd0
   183c0:	ldr	r3, [r3]
   183c4:	add	r3, r2, r3
   183c8:	ldr	r2, [sp, #24]
   183cc:	str	r3, [sp, #28]
   183d0:	cmp	r3, r2
   183d4:	bge	173cc <ReadDataSlabN+0x154>
   183d8:	ldr	r3, [sp, #200]	; 0xc8
   183dc:	ldr	r1, [r3]
   183e0:	cmp	r1, #0
   183e4:	beq	18220 <ReadDataSlabN+0xfa8>
   183e8:	ldr	r3, [sp, #4]
   183ec:	mov	r2, #1
   183f0:	ldr	r0, [fp]
   183f4:	mul	r1, r3, r1
   183f8:	bl	1694 <fseek@plt>
   183fc:	ldr	r3, [sp, #200]	; 0xc8
   18400:	ldr	r1, [r3]
   18404:	add	r5, r5, r1
   18408:	b	18220 <ReadDataSlabN+0xfa8>
   1840c:	ldr	r3, [sp, #16]
   18410:	mov	r2, #1
   18414:	ldr	r4, [r9, #-8]
   18418:	ldr	r0, [r3]
   1841c:	ldr	r3, [sp, #4]
   18420:	mul	r1, r1, r4
   18424:	mul	r1, r3, r1
   18428:	bl	1694 <fseek@plt>
   1842c:	ldr	r3, [sl]
   18430:	mla	r5, r3, r4, r5
   18434:	b	18320 <ReadDataSlabN+0x10a8>
   18438:	ldr	fp, [sp, #16]
   1843c:	ldr	r4, [sp, #204]	; 0xcc
   18440:	add	r3, sp, #152	; 0x98
   18444:	mov	r2, #1
   18448:	add	r8, r3, r8, lsl #2
   1844c:	ldr	r1, [sp, #4]
   18450:	ldr	r3, [r8, #-120]	; 0xffffff88
   18454:	ldr	r0, [fp]
   18458:	mul	r1, r1, r3
   1845c:	add	r5, r5, r3
   18460:	bl	1694 <fseek@plt>
   18464:	b	183b8 <ReadDataSlabN+0x1140>
   18468:	ldr	r3, [sp, #4]
   1846c:	ldr	fp, [sp, #20]
   18470:	ldr	r4, [sp, #204]	; 0xcc
   18474:	mul	r1, r3, r5
   18478:	mov	r2, #1
   1847c:	ldr	r0, [fp]
   18480:	bl	1694 <fseek@plt>
   18484:	ldr	r3, [r4]
   18488:	cmp	r3, #1
   1848c:	ldr	r3, [sp, #24]
   18490:	beq	1a30c <ReadDataSlabN+0x3094>
   18494:	cmp	r3, #0
   18498:	movgt	r3, #0
   1849c:	strgt	r3, [sp, #28]
   184a0:	ble	173cc <ReadDataSlabN+0x154>
   184a4:	ldr	r3, [sp, #200]	; 0xc8
   184a8:	ldr	r1, [r3]
   184ac:	cmp	r1, #0
   184b0:	bne	1867c <ReadDataSlabN+0x1404>
   184b4:	ldr	r3, [sp, #208]	; 0xd0
   184b8:	ldr	r3, [r3]
   184bc:	cmp	r3, #0
   184c0:	ble	196a4 <ReadDataSlabN+0x242c>
   184c4:	ldmib	sp, {r8, sl}
   184c8:	mov	r6, #0
   184cc:	ldr	r3, [sp, #12]
   184d0:	ldr	r2, [sp, #28]
   184d4:	ldr	r9, [sp, #208]	; 0xd0
   184d8:	add	r7, r3, r2, lsl #2
   184dc:	mov	r3, #1
   184e0:	mov	r1, r7
   184e4:	mov	r2, sl
   184e8:	mov	r0, fp
   184ec:	bl	15354 <ReadUInt32Data>
   184f0:	ldr	r1, [r4]
   184f4:	mov	r2, #1
   184f8:	add	r7, r7, #4
   184fc:	add	r6, r6, r2
   18500:	ldr	r0, [fp]
   18504:	sub	r1, r1, #1
   18508:	mul	r1, r8, r1
   1850c:	bl	1694 <fseek@plt>
   18510:	ldr	r3, [r9]
   18514:	ldr	ip, [r4]
   18518:	cmp	r3, r6
   1851c:	add	r5, r5, ip
   18520:	bgt	184dc <ReadDataSlabN+0x1264>
   18524:	ldr	r2, [sp, #200]	; 0xc8
   18528:	ldr	r1, [r2]
   1852c:	mov	r2, #1
   18530:	ldr	r0, [sp, #196]	; 0xc4
   18534:	ldr	lr, [r0]
   18538:	ldr	r0, [fp]
   1853c:	sub	r1, lr, r1
   18540:	mls	r3, ip, r3, r1
   18544:	ldr	r1, [sp, #4]
   18548:	add	r5, r5, r3
   1854c:	mul	r1, r1, r3
   18550:	bl	1694 <fseek@plt>
   18554:	ldr	r3, [sp, #192]	; 0xc0
   18558:	cmp	r3, #1
   1855c:	ble	1864c <ReadDataSlabN+0x13d4>
   18560:	ldr	r3, [sp, #76]	; 0x4c
   18564:	ldr	r2, [sp, #208]	; 0xd0
   18568:	add	r3, r3, #1
   1856c:	ldr	r1, [r2, #4]
   18570:	str	r3, [sp, #76]	; 0x4c
   18574:	sdiv	r2, r3, r1
   18578:	mls	r3, r1, r2, r3
   1857c:	cmp	r3, #0
   18580:	bne	1ab28 <ReadDataSlabN+0x38b0>
   18584:	add	r7, sp, #76	; 0x4c
   18588:	add	r9, sp, #116	; 0x74
   1858c:	str	fp, [sp, #16]
   18590:	ldr	r3, [sp, #208]	; 0xd0
   18594:	mov	r8, #1
   18598:	str	r4, [sp, #204]	; 0xcc
   1859c:	ldr	fp, [sp, #192]	; 0xc0
   185a0:	ldr	sl, [sp, #200]	; 0xc8
   185a4:	add	r6, r3, #4
   185a8:	b	185e0 <ReadDataSlabN+0x1368>
   185ac:	cmp	r1, #0
   185b0:	bne	186a0 <ReadDataSlabN+0x1428>
   185b4:	add	r8, r8, #1
   185b8:	cmp	fp, r8
   185bc:	beq	18644 <ReadDataSlabN+0x13cc>
   185c0:	ldr	r3, [r7]
   185c4:	ldr	r1, [r6, #4]!
   185c8:	add	r3, r3, #1
   185cc:	sdiv	r2, r3, r1
   185d0:	str	r3, [r7]
   185d4:	mls	r3, r1, r2, r3
   185d8:	cmp	r3, #0
   185dc:	bne	186cc <ReadDataSlabN+0x1454>
   185e0:	ldr	r4, [r9], #4
   185e4:	mov	r3, #0
   185e8:	str	r3, [r7], #4
   185ec:	ldr	r1, [sl, #4]!
   185f0:	sdiv	r2, r5, r4
   185f4:	mls	r2, r4, r2, r5
   185f8:	cmp	r2, r3
   185fc:	beq	185ac <ReadDataSlabN+0x1334>
   18600:	ldr	r3, [r9, #-8]
   18604:	sub	r4, r4, r2
   18608:	mov	r2, #1
   1860c:	add	r8, r8, #1
   18610:	ldr	r0, [sp, #16]
   18614:	mla	r1, r1, r3, r4
   18618:	str	r3, [sp, #20]
   1861c:	ldr	r3, [sp, #4]
   18620:	ldr	r0, [r0]
   18624:	mul	r1, r3, r1
   18628:	bl	1694 <fseek@plt>
   1862c:	ldr	r2, [sl]
   18630:	cmp	fp, r8
   18634:	ldr	r3, [sp, #20]
   18638:	mla	r4, r2, r3, r4
   1863c:	add	r5, r5, r4
   18640:	bne	185c0 <ReadDataSlabN+0x1348>
   18644:	ldr	fp, [sp, #16]
   18648:	ldr	r4, [sp, #204]	; 0xcc
   1864c:	ldr	r2, [sp, #28]
   18650:	ldr	r3, [sp, #208]	; 0xd0
   18654:	ldr	r3, [r3]
   18658:	add	r3, r2, r3
   1865c:	ldr	r2, [sp, #24]
   18660:	str	r3, [sp, #28]
   18664:	cmp	r3, r2
   18668:	bge	173cc <ReadDataSlabN+0x154>
   1866c:	ldr	r3, [sp, #200]	; 0xc8
   18670:	ldr	r1, [r3]
   18674:	cmp	r1, #0
   18678:	beq	184b4 <ReadDataSlabN+0x123c>
   1867c:	ldr	r3, [sp, #4]
   18680:	mov	r2, #1
   18684:	ldr	r0, [fp]
   18688:	mul	r1, r3, r1
   1868c:	bl	1694 <fseek@plt>
   18690:	ldr	r3, [sp, #200]	; 0xc8
   18694:	ldr	r1, [r3]
   18698:	add	r5, r5, r1
   1869c:	b	184b4 <ReadDataSlabN+0x123c>
   186a0:	ldr	r3, [sp, #16]
   186a4:	mov	r2, #1
   186a8:	ldr	r4, [r9, #-8]
   186ac:	ldr	r0, [r3]
   186b0:	ldr	r3, [sp, #4]
   186b4:	mul	r1, r1, r4
   186b8:	mul	r1, r3, r1
   186bc:	bl	1694 <fseek@plt>
   186c0:	ldr	r3, [sl]
   186c4:	mla	r5, r3, r4, r5
   186c8:	b	185b4 <ReadDataSlabN+0x133c>
   186cc:	ldr	fp, [sp, #16]
   186d0:	ldr	r4, [sp, #204]	; 0xcc
   186d4:	add	r3, sp, #152	; 0x98
   186d8:	mov	r2, #1
   186dc:	add	r8, r3, r8, lsl #2
   186e0:	ldr	r1, [sp, #4]
   186e4:	ldr	r3, [r8, #-120]	; 0xffffff88
   186e8:	ldr	r0, [fp]
   186ec:	mul	r1, r1, r3
   186f0:	add	r5, r5, r3
   186f4:	bl	1694 <fseek@plt>
   186f8:	b	1864c <ReadDataSlabN+0x13d4>
   186fc:	ldr	r3, [sp, #4]
   18700:	ldr	fp, [sp, #20]
   18704:	ldr	r4, [sp, #204]	; 0xcc
   18708:	mul	r1, r3, r5
   1870c:	mov	r2, #1
   18710:	ldr	r0, [fp]
   18714:	bl	1694 <fseek@plt>
   18718:	ldr	r3, [r4]
   1871c:	cmp	r3, #1
   18720:	ldr	r3, [sp, #24]
   18724:	beq	1a100 <ReadDataSlabN+0x2e88>
   18728:	cmp	r3, #0
   1872c:	movgt	r3, #0
   18730:	strgt	r3, [sp, #28]
   18734:	ble	173cc <ReadDataSlabN+0x154>
   18738:	ldr	r3, [sp, #200]	; 0xc8
   1873c:	ldr	r1, [r3]
   18740:	cmp	r1, #0
   18744:	bne	18910 <ReadDataSlabN+0x1698>
   18748:	ldr	r3, [sp, #208]	; 0xd0
   1874c:	ldr	r3, [r3]
   18750:	cmp	r3, #0
   18754:	ble	1969c <ReadDataSlabN+0x2424>
   18758:	ldmib	sp, {r8, sl}
   1875c:	mov	r6, #0
   18760:	ldr	r3, [sp, #12]
   18764:	ldr	r2, [sp, #28]
   18768:	ldr	r9, [sp, #208]	; 0xd0
   1876c:	add	r7, r3, r2, lsl #1
   18770:	mov	r3, #1
   18774:	mov	r1, r7
   18778:	mov	r2, sl
   1877c:	mov	r0, fp
   18780:	bl	15e2c <ReadUInt16Data>
   18784:	ldr	r1, [r4]
   18788:	mov	r2, #1
   1878c:	add	r7, r7, #2
   18790:	add	r6, r6, r2
   18794:	ldr	r0, [fp]
   18798:	sub	r1, r1, #1
   1879c:	mul	r1, r8, r1
   187a0:	bl	1694 <fseek@plt>
   187a4:	ldr	r3, [r9]
   187a8:	ldr	ip, [r4]
   187ac:	cmp	r3, r6
   187b0:	add	r5, r5, ip
   187b4:	bgt	18770 <ReadDataSlabN+0x14f8>
   187b8:	ldr	r2, [sp, #200]	; 0xc8
   187bc:	ldr	r1, [r2]
   187c0:	mov	r2, #1
   187c4:	ldr	r0, [sp, #196]	; 0xc4
   187c8:	ldr	lr, [r0]
   187cc:	ldr	r0, [fp]
   187d0:	sub	r1, lr, r1
   187d4:	mls	r3, ip, r3, r1
   187d8:	ldr	r1, [sp, #4]
   187dc:	add	r5, r5, r3
   187e0:	mul	r1, r1, r3
   187e4:	bl	1694 <fseek@plt>
   187e8:	ldr	r3, [sp, #192]	; 0xc0
   187ec:	cmp	r3, #1
   187f0:	ble	188e0 <ReadDataSlabN+0x1668>
   187f4:	ldr	r3, [sp, #76]	; 0x4c
   187f8:	ldr	r2, [sp, #208]	; 0xd0
   187fc:	add	r3, r3, #1
   18800:	ldr	r1, [r2, #4]
   18804:	str	r3, [sp, #76]	; 0x4c
   18808:	sdiv	r2, r3, r1
   1880c:	mls	r3, r1, r2, r3
   18810:	cmp	r3, #0
   18814:	bne	1aaf8 <ReadDataSlabN+0x3880>
   18818:	add	r7, sp, #76	; 0x4c
   1881c:	add	r9, sp, #116	; 0x74
   18820:	str	fp, [sp, #16]
   18824:	ldr	r3, [sp, #208]	; 0xd0
   18828:	mov	r8, #1
   1882c:	str	r4, [sp, #204]	; 0xcc
   18830:	ldr	fp, [sp, #192]	; 0xc0
   18834:	ldr	sl, [sp, #200]	; 0xc8
   18838:	add	r6, r3, #4
   1883c:	b	18874 <ReadDataSlabN+0x15fc>
   18840:	cmp	r1, #0
   18844:	bne	18934 <ReadDataSlabN+0x16bc>
   18848:	add	r8, r8, #1
   1884c:	cmp	fp, r8
   18850:	beq	188d8 <ReadDataSlabN+0x1660>
   18854:	ldr	r3, [r7]
   18858:	ldr	r1, [r6, #4]!
   1885c:	add	r3, r3, #1
   18860:	sdiv	r2, r3, r1
   18864:	str	r3, [r7]
   18868:	mls	r3, r1, r2, r3
   1886c:	cmp	r3, #0
   18870:	bne	18960 <ReadDataSlabN+0x16e8>
   18874:	ldr	r4, [r9], #4
   18878:	mov	r3, #0
   1887c:	str	r3, [r7], #4
   18880:	ldr	r1, [sl, #4]!
   18884:	sdiv	r2, r5, r4
   18888:	mls	r2, r4, r2, r5
   1888c:	cmp	r2, r3
   18890:	beq	18840 <ReadDataSlabN+0x15c8>
   18894:	ldr	r3, [r9, #-8]
   18898:	sub	r4, r4, r2
   1889c:	mov	r2, #1
   188a0:	add	r8, r8, #1
   188a4:	ldr	r0, [sp, #16]
   188a8:	mla	r1, r1, r3, r4
   188ac:	str	r3, [sp, #20]
   188b0:	ldr	r3, [sp, #4]
   188b4:	ldr	r0, [r0]
   188b8:	mul	r1, r3, r1
   188bc:	bl	1694 <fseek@plt>
   188c0:	ldr	r2, [sl]
   188c4:	cmp	fp, r8
   188c8:	ldr	r3, [sp, #20]
   188cc:	mla	r4, r2, r3, r4
   188d0:	add	r5, r5, r4
   188d4:	bne	18854 <ReadDataSlabN+0x15dc>
   188d8:	ldr	fp, [sp, #16]
   188dc:	ldr	r4, [sp, #204]	; 0xcc
   188e0:	ldr	r2, [sp, #28]
   188e4:	ldr	r3, [sp, #208]	; 0xd0
   188e8:	ldr	r3, [r3]
   188ec:	add	r3, r2, r3
   188f0:	ldr	r2, [sp, #24]
   188f4:	str	r3, [sp, #28]
   188f8:	cmp	r3, r2
   188fc:	bge	173cc <ReadDataSlabN+0x154>
   18900:	ldr	r3, [sp, #200]	; 0xc8
   18904:	ldr	r1, [r3]
   18908:	cmp	r1, #0
   1890c:	beq	18748 <ReadDataSlabN+0x14d0>
   18910:	ldr	r3, [sp, #4]
   18914:	mov	r2, #1
   18918:	ldr	r0, [fp]
   1891c:	mul	r1, r3, r1
   18920:	bl	1694 <fseek@plt>
   18924:	ldr	r3, [sp, #200]	; 0xc8
   18928:	ldr	r1, [r3]
   1892c:	add	r5, r5, r1
   18930:	b	18748 <ReadDataSlabN+0x14d0>
   18934:	ldr	r3, [sp, #16]
   18938:	mov	r2, #1
   1893c:	ldr	r4, [r9, #-8]
   18940:	ldr	r0, [r3]
   18944:	ldr	r3, [sp, #4]
   18948:	mul	r1, r1, r4
   1894c:	mul	r1, r3, r1
   18950:	bl	1694 <fseek@plt>
   18954:	ldr	r3, [sl]
   18958:	mla	r5, r3, r4, r5
   1895c:	b	18848 <ReadDataSlabN+0x15d0>
   18960:	ldr	fp, [sp, #16]
   18964:	ldr	r4, [sp, #204]	; 0xcc
   18968:	add	r3, sp, #152	; 0x98
   1896c:	mov	r2, #1
   18970:	add	r8, r3, r8, lsl #2
   18974:	ldr	r1, [sp, #4]
   18978:	ldr	r3, [r8, #-120]	; 0xffffff88
   1897c:	ldr	r0, [fp]
   18980:	mul	r1, r1, r3
   18984:	add	r5, r5, r3
   18988:	bl	1694 <fseek@plt>
   1898c:	b	188e0 <ReadDataSlabN+0x1668>
   18990:	ldr	r3, [sp, #4]
   18994:	ldr	fp, [sp, #20]
   18998:	ldr	r4, [sp, #204]	; 0xcc
   1899c:	mul	r1, r3, r5
   189a0:	mov	r2, #1
   189a4:	ldr	r0, [fp]
   189a8:	bl	1694 <fseek@plt>
   189ac:	ldr	r3, [r4]
   189b0:	cmp	r3, #1
   189b4:	ldr	r3, [sp, #24]
   189b8:	beq	19ef4 <ReadDataSlabN+0x2c7c>
   189bc:	cmp	r3, #0
   189c0:	movgt	r3, #0
   189c4:	strgt	r3, [sp, #28]
   189c8:	ble	173cc <ReadDataSlabN+0x154>
   189cc:	ldr	r3, [sp, #200]	; 0xc8
   189d0:	ldr	r1, [r3]
   189d4:	cmp	r1, #0
   189d8:	bne	18ba4 <ReadDataSlabN+0x192c>
   189dc:	ldr	r3, [sp, #208]	; 0xd0
   189e0:	ldr	r3, [r3]
   189e4:	cmp	r3, #0
   189e8:	ble	19694 <ReadDataSlabN+0x241c>
   189ec:	ldmib	sp, {r8, sl}
   189f0:	mov	r6, #0
   189f4:	ldr	r3, [sp, #12]
   189f8:	ldr	r2, [sp, #28]
   189fc:	ldr	r9, [sp, #208]	; 0xd0
   18a00:	add	r7, r3, r2, lsl #2
   18a04:	mov	r3, #1
   18a08:	mov	r1, r7
   18a0c:	mov	r2, sl
   18a10:	mov	r0, fp
   18a14:	bl	14df0 <ReadInt32Data>
   18a18:	ldr	r1, [r4]
   18a1c:	mov	r2, #1
   18a20:	add	r7, r7, #4
   18a24:	add	r6, r6, r2
   18a28:	ldr	r0, [fp]
   18a2c:	sub	r1, r1, #1
   18a30:	mul	r1, r8, r1
   18a34:	bl	1694 <fseek@plt>
   18a38:	ldr	r3, [r9]
   18a3c:	ldr	ip, [r4]
   18a40:	cmp	r3, r6
   18a44:	add	r5, r5, ip
   18a48:	bgt	18a04 <ReadDataSlabN+0x178c>
   18a4c:	ldr	r2, [sp, #200]	; 0xc8
   18a50:	ldr	r1, [r2]
   18a54:	mov	r2, #1
   18a58:	ldr	r0, [sp, #196]	; 0xc4
   18a5c:	ldr	lr, [r0]
   18a60:	ldr	r0, [fp]
   18a64:	sub	r1, lr, r1
   18a68:	mls	r3, ip, r3, r1
   18a6c:	ldr	r1, [sp, #4]
   18a70:	add	r5, r5, r3
   18a74:	mul	r1, r1, r3
   18a78:	bl	1694 <fseek@plt>
   18a7c:	ldr	r3, [sp, #192]	; 0xc0
   18a80:	cmp	r3, #1
   18a84:	ble	18b74 <ReadDataSlabN+0x18fc>
   18a88:	ldr	r3, [sp, #76]	; 0x4c
   18a8c:	ldr	r2, [sp, #208]	; 0xd0
   18a90:	add	r3, r3, #1
   18a94:	ldr	r1, [r2, #4]
   18a98:	str	r3, [sp, #76]	; 0x4c
   18a9c:	sdiv	r2, r3, r1
   18aa0:	mls	r3, r1, r2, r3
   18aa4:	cmp	r3, #0
   18aa8:	bne	1ab00 <ReadDataSlabN+0x3888>
   18aac:	add	r7, sp, #76	; 0x4c
   18ab0:	add	r9, sp, #116	; 0x74
   18ab4:	str	fp, [sp, #16]
   18ab8:	ldr	r3, [sp, #208]	; 0xd0
   18abc:	mov	r8, #1
   18ac0:	str	r4, [sp, #204]	; 0xcc
   18ac4:	ldr	fp, [sp, #192]	; 0xc0
   18ac8:	ldr	sl, [sp, #200]	; 0xc8
   18acc:	add	r6, r3, #4
   18ad0:	b	18b08 <ReadDataSlabN+0x1890>
   18ad4:	cmp	r1, #0
   18ad8:	bne	18bc8 <ReadDataSlabN+0x1950>
   18adc:	add	r8, r8, #1
   18ae0:	cmp	fp, r8
   18ae4:	beq	18b6c <ReadDataSlabN+0x18f4>
   18ae8:	ldr	r3, [r7]
   18aec:	ldr	r1, [r6, #4]!
   18af0:	add	r3, r3, #1
   18af4:	sdiv	r2, r3, r1
   18af8:	str	r3, [r7]
   18afc:	mls	r3, r1, r2, r3
   18b00:	cmp	r3, #0
   18b04:	bne	18bf4 <ReadDataSlabN+0x197c>
   18b08:	ldr	r4, [r9], #4
   18b0c:	mov	r3, #0
   18b10:	str	r3, [r7], #4
   18b14:	ldr	r1, [sl, #4]!
   18b18:	sdiv	r2, r5, r4
   18b1c:	mls	r2, r4, r2, r5
   18b20:	cmp	r2, r3
   18b24:	beq	18ad4 <ReadDataSlabN+0x185c>
   18b28:	ldr	r3, [r9, #-8]
   18b2c:	sub	r4, r4, r2
   18b30:	mov	r2, #1
   18b34:	add	r8, r8, #1
   18b38:	ldr	r0, [sp, #16]
   18b3c:	mla	r1, r1, r3, r4
   18b40:	str	r3, [sp, #20]
   18b44:	ldr	r3, [sp, #4]
   18b48:	ldr	r0, [r0]
   18b4c:	mul	r1, r3, r1
   18b50:	bl	1694 <fseek@plt>
   18b54:	ldr	r2, [sl]
   18b58:	cmp	fp, r8
   18b5c:	ldr	r3, [sp, #20]
   18b60:	mla	r4, r2, r3, r4
   18b64:	add	r5, r5, r4
   18b68:	bne	18ae8 <ReadDataSlabN+0x1870>
   18b6c:	ldr	fp, [sp, #16]
   18b70:	ldr	r4, [sp, #204]	; 0xcc
   18b74:	ldr	r2, [sp, #28]
   18b78:	ldr	r3, [sp, #208]	; 0xd0
   18b7c:	ldr	r3, [r3]
   18b80:	add	r3, r2, r3
   18b84:	ldr	r2, [sp, #24]
   18b88:	str	r3, [sp, #28]
   18b8c:	cmp	r3, r2
   18b90:	bge	173cc <ReadDataSlabN+0x154>
   18b94:	ldr	r3, [sp, #200]	; 0xc8
   18b98:	ldr	r1, [r3]
   18b9c:	cmp	r1, #0
   18ba0:	beq	189dc <ReadDataSlabN+0x1764>
   18ba4:	ldr	r3, [sp, #4]
   18ba8:	mov	r2, #1
   18bac:	ldr	r0, [fp]
   18bb0:	mul	r1, r3, r1
   18bb4:	bl	1694 <fseek@plt>
   18bb8:	ldr	r3, [sp, #200]	; 0xc8
   18bbc:	ldr	r1, [r3]
   18bc0:	add	r5, r5, r1
   18bc4:	b	189dc <ReadDataSlabN+0x1764>
   18bc8:	ldr	r3, [sp, #16]
   18bcc:	mov	r2, #1
   18bd0:	ldr	r4, [r9, #-8]
   18bd4:	ldr	r0, [r3]
   18bd8:	ldr	r3, [sp, #4]
   18bdc:	mul	r1, r1, r4
   18be0:	mul	r1, r3, r1
   18be4:	bl	1694 <fseek@plt>
   18be8:	ldr	r3, [sl]
   18bec:	mla	r5, r3, r4, r5
   18bf0:	b	18adc <ReadDataSlabN+0x1864>
   18bf4:	ldr	fp, [sp, #16]
   18bf8:	ldr	r4, [sp, #204]	; 0xcc
   18bfc:	add	r3, sp, #152	; 0x98
   18c00:	mov	r2, #1
   18c04:	add	r8, r3, r8, lsl #2
   18c08:	ldr	r1, [sp, #4]
   18c0c:	ldr	r3, [r8, #-120]	; 0xffffff88
   18c10:	ldr	r0, [fp]
   18c14:	mul	r1, r1, r3
   18c18:	add	r5, r5, r3
   18c1c:	bl	1694 <fseek@plt>
   18c20:	b	18b74 <ReadDataSlabN+0x18fc>
   18c24:	ldr	r3, [sp, #4]
   18c28:	ldr	fp, [sp, #20]
   18c2c:	ldr	r4, [sp, #204]	; 0xcc
   18c30:	mul	r1, r3, r5
   18c34:	mov	r2, #1
   18c38:	ldr	r0, [fp]
   18c3c:	bl	1694 <fseek@plt>
   18c40:	ldr	r3, [r4]
   18c44:	cmp	r3, #1
   18c48:	ldr	r3, [sp, #24]
   18c4c:	beq	19ce8 <ReadDataSlabN+0x2a70>
   18c50:	cmp	r3, #0
   18c54:	movgt	r3, #0
   18c58:	strgt	r3, [sp, #28]
   18c5c:	ble	173cc <ReadDataSlabN+0x154>
   18c60:	ldr	r3, [sp, #200]	; 0xc8
   18c64:	ldr	r1, [r3]
   18c68:	cmp	r1, #0
   18c6c:	bne	18e38 <ReadDataSlabN+0x1bc0>
   18c70:	ldr	r3, [sp, #208]	; 0xd0
   18c74:	ldr	r3, [r3]
   18c78:	cmp	r3, #0
   18c7c:	ble	1968c <ReadDataSlabN+0x2414>
   18c80:	ldmib	sp, {r8, sl}
   18c84:	mov	r6, #0
   18c88:	ldr	r3, [sp, #12]
   18c8c:	ldr	r2, [sp, #28]
   18c90:	ldr	r9, [sp, #208]	; 0xd0
   18c94:	add	r7, r3, r2, lsl #2
   18c98:	mov	r3, #1
   18c9c:	mov	r1, r7
   18ca0:	mov	r2, sl
   18ca4:	mov	r0, fp
   18ca8:	bl	13cfc <ReadSingleData>
   18cac:	ldr	r1, [r4]
   18cb0:	mov	r2, #1
   18cb4:	add	r7, r7, #4
   18cb8:	add	r6, r6, r2
   18cbc:	ldr	r0, [fp]
   18cc0:	sub	r1, r1, #1
   18cc4:	mul	r1, r8, r1
   18cc8:	bl	1694 <fseek@plt>
   18ccc:	ldr	r3, [r9]
   18cd0:	ldr	ip, [r4]
   18cd4:	cmp	r3, r6
   18cd8:	add	r5, r5, ip
   18cdc:	bgt	18c98 <ReadDataSlabN+0x1a20>
   18ce0:	ldr	r2, [sp, #200]	; 0xc8
   18ce4:	ldr	r1, [r2]
   18ce8:	mov	r2, #1
   18cec:	ldr	r0, [sp, #196]	; 0xc4
   18cf0:	ldr	lr, [r0]
   18cf4:	ldr	r0, [fp]
   18cf8:	sub	r1, lr, r1
   18cfc:	mls	r3, ip, r3, r1
   18d00:	ldr	r1, [sp, #4]
   18d04:	add	r5, r5, r3
   18d08:	mul	r1, r1, r3
   18d0c:	bl	1694 <fseek@plt>
   18d10:	ldr	r3, [sp, #192]	; 0xc0
   18d14:	cmp	r3, #1
   18d18:	ble	18e08 <ReadDataSlabN+0x1b90>
   18d1c:	ldr	r3, [sp, #76]	; 0x4c
   18d20:	ldr	r2, [sp, #208]	; 0xd0
   18d24:	add	r3, r3, #1
   18d28:	ldr	r1, [r2, #4]
   18d2c:	str	r3, [sp, #76]	; 0x4c
   18d30:	sdiv	r2, r3, r1
   18d34:	mls	r3, r1, r2, r3
   18d38:	cmp	r3, #0
   18d3c:	bne	1ab08 <ReadDataSlabN+0x3890>
   18d40:	add	r7, sp, #76	; 0x4c
   18d44:	add	r9, sp, #116	; 0x74
   18d48:	str	fp, [sp, #16]
   18d4c:	ldr	r3, [sp, #208]	; 0xd0
   18d50:	mov	r8, #1
   18d54:	str	r4, [sp, #204]	; 0xcc
   18d58:	ldr	fp, [sp, #192]	; 0xc0
   18d5c:	ldr	sl, [sp, #200]	; 0xc8
   18d60:	add	r6, r3, #4
   18d64:	b	18d9c <ReadDataSlabN+0x1b24>
   18d68:	cmp	r1, #0
   18d6c:	bne	18e5c <ReadDataSlabN+0x1be4>
   18d70:	add	r8, r8, #1
   18d74:	cmp	fp, r8
   18d78:	beq	18e00 <ReadDataSlabN+0x1b88>
   18d7c:	ldr	r3, [r7]
   18d80:	ldr	r1, [r6, #4]!
   18d84:	add	r3, r3, #1
   18d88:	sdiv	r2, r3, r1
   18d8c:	str	r3, [r7]
   18d90:	mls	r3, r1, r2, r3
   18d94:	cmp	r3, #0
   18d98:	bne	18e88 <ReadDataSlabN+0x1c10>
   18d9c:	ldr	r4, [r9], #4
   18da0:	mov	r3, #0
   18da4:	str	r3, [r7], #4
   18da8:	ldr	r1, [sl, #4]!
   18dac:	sdiv	r2, r5, r4
   18db0:	mls	r2, r4, r2, r5
   18db4:	cmp	r2, r3
   18db8:	beq	18d68 <ReadDataSlabN+0x1af0>
   18dbc:	ldr	r3, [r9, #-8]
   18dc0:	sub	r4, r4, r2
   18dc4:	mov	r2, #1
   18dc8:	add	r8, r8, #1
   18dcc:	ldr	r0, [sp, #16]
   18dd0:	mla	r1, r1, r3, r4
   18dd4:	str	r3, [sp, #20]
   18dd8:	ldr	r3, [sp, #4]
   18ddc:	ldr	r0, [r0]
   18de0:	mul	r1, r3, r1
   18de4:	bl	1694 <fseek@plt>
   18de8:	ldr	r2, [sl]
   18dec:	cmp	fp, r8
   18df0:	ldr	r3, [sp, #20]
   18df4:	mla	r4, r2, r3, r4
   18df8:	add	r5, r5, r4
   18dfc:	bne	18d7c <ReadDataSlabN+0x1b04>
   18e00:	ldr	fp, [sp, #16]
   18e04:	ldr	r4, [sp, #204]	; 0xcc
   18e08:	ldr	r2, [sp, #28]
   18e0c:	ldr	r3, [sp, #208]	; 0xd0
   18e10:	ldr	r3, [r3]
   18e14:	add	r3, r2, r3
   18e18:	ldr	r2, [sp, #24]
   18e1c:	str	r3, [sp, #28]
   18e20:	cmp	r3, r2
   18e24:	bge	173cc <ReadDataSlabN+0x154>
   18e28:	ldr	r3, [sp, #200]	; 0xc8
   18e2c:	ldr	r1, [r3]
   18e30:	cmp	r1, #0
   18e34:	beq	18c70 <ReadDataSlabN+0x19f8>
   18e38:	ldr	r3, [sp, #4]
   18e3c:	mov	r2, #1
   18e40:	ldr	r0, [fp]
   18e44:	mul	r1, r3, r1
   18e48:	bl	1694 <fseek@plt>
   18e4c:	ldr	r3, [sp, #200]	; 0xc8
   18e50:	ldr	r1, [r3]
   18e54:	add	r5, r5, r1
   18e58:	b	18c70 <ReadDataSlabN+0x19f8>
   18e5c:	ldr	r3, [sp, #16]
   18e60:	mov	r2, #1
   18e64:	ldr	r4, [r9, #-8]
   18e68:	ldr	r0, [r3]
   18e6c:	ldr	r3, [sp, #4]
   18e70:	mul	r1, r1, r4
   18e74:	mul	r1, r3, r1
   18e78:	bl	1694 <fseek@plt>
   18e7c:	ldr	r3, [sl]
   18e80:	mla	r5, r3, r4, r5
   18e84:	b	18d70 <ReadDataSlabN+0x1af8>
   18e88:	ldr	fp, [sp, #16]
   18e8c:	ldr	r4, [sp, #204]	; 0xcc
   18e90:	add	r3, sp, #152	; 0x98
   18e94:	mov	r2, #1
   18e98:	add	r8, r3, r8, lsl #2
   18e9c:	ldr	r1, [sp, #4]
   18ea0:	ldr	r3, [r8, #-120]	; 0xffffff88
   18ea4:	ldr	r0, [fp]
   18ea8:	mul	r1, r1, r3
   18eac:	add	r5, r5, r3
   18eb0:	bl	1694 <fseek@plt>
   18eb4:	b	18e08 <ReadDataSlabN+0x1b90>
   18eb8:	ldr	r3, [sp, #4]
   18ebc:	ldr	fp, [sp, #20]
   18ec0:	ldr	r4, [sp, #204]	; 0xcc
   18ec4:	mul	r1, r3, r5
   18ec8:	mov	r2, #1
   18ecc:	ldr	r0, [fp]
   18ed0:	bl	1694 <fseek@plt>
   18ed4:	ldr	r3, [r4]
   18ed8:	cmp	r3, #1
   18edc:	ldr	r3, [sp, #24]
   18ee0:	beq	19adc <ReadDataSlabN+0x2864>
   18ee4:	cmp	r3, #0
   18ee8:	movgt	r3, #0
   18eec:	strgt	r3, [sp, #28]
   18ef0:	ble	173cc <ReadDataSlabN+0x154>
   18ef4:	ldr	r3, [sp, #200]	; 0xc8
   18ef8:	ldr	r1, [r3]
   18efc:	cmp	r1, #0
   18f00:	bne	190c8 <ReadDataSlabN+0x1e50>
   18f04:	ldr	r3, [sp, #208]	; 0xd0
   18f08:	ldr	r3, [r3]
   18f0c:	cmp	r3, #0
   18f10:	ble	19684 <ReadDataSlabN+0x240c>
   18f14:	ldmib	sp, {r8, sl}
   18f18:	mov	r6, #0
   18f1c:	ldr	r3, [sp, #12]
   18f20:	ldr	r2, [sp, #28]
   18f24:	ldr	r9, [sp, #208]	; 0xd0
   18f28:	add	r7, r3, r2
   18f2c:	mov	r3, #1
   18f30:	add	r1, r7, r6
   18f34:	mov	r2, sl
   18f38:	mov	r0, fp
   18f3c:	bl	163a0 <ReadInt8Data>
   18f40:	ldr	r1, [r4]
   18f44:	mov	r2, #1
   18f48:	add	r6, r6, r2
   18f4c:	ldr	r0, [fp]
   18f50:	sub	r1, r1, #1
   18f54:	mul	r1, r8, r1
   18f58:	bl	1694 <fseek@plt>
   18f5c:	ldr	r3, [r9]
   18f60:	ldr	ip, [r4]
   18f64:	cmp	r3, r6
   18f68:	add	r5, r5, ip
   18f6c:	bgt	18f2c <ReadDataSlabN+0x1cb4>
   18f70:	ldr	r2, [sp, #200]	; 0xc8
   18f74:	ldr	r1, [r2]
   18f78:	mov	r2, #1
   18f7c:	ldr	r0, [sp, #196]	; 0xc4
   18f80:	ldr	lr, [r0]
   18f84:	ldr	r0, [fp]
   18f88:	sub	r1, lr, r1
   18f8c:	mls	r3, ip, r3, r1
   18f90:	ldr	r1, [sp, #4]
   18f94:	add	r5, r5, r3
   18f98:	mul	r1, r1, r3
   18f9c:	bl	1694 <fseek@plt>
   18fa0:	ldr	r3, [sp, #192]	; 0xc0
   18fa4:	cmp	r3, #1
   18fa8:	ble	19098 <ReadDataSlabN+0x1e20>
   18fac:	ldr	r3, [sp, #76]	; 0x4c
   18fb0:	ldr	r2, [sp, #208]	; 0xd0
   18fb4:	add	r3, r3, #1
   18fb8:	ldr	r1, [r2, #4]
   18fbc:	str	r3, [sp, #76]	; 0x4c
   18fc0:	sdiv	r2, r3, r1
   18fc4:	mls	r3, r1, r2, r3
   18fc8:	cmp	r3, #0
   18fcc:	bne	1ab10 <ReadDataSlabN+0x3898>
   18fd0:	add	r7, sp, #76	; 0x4c
   18fd4:	add	r9, sp, #116	; 0x74
   18fd8:	str	fp, [sp, #16]
   18fdc:	ldr	r3, [sp, #208]	; 0xd0
   18fe0:	mov	r8, #1
   18fe4:	str	r4, [sp, #204]	; 0xcc
   18fe8:	ldr	fp, [sp, #192]	; 0xc0
   18fec:	ldr	sl, [sp, #200]	; 0xc8
   18ff0:	add	r6, r3, #4
   18ff4:	b	1902c <ReadDataSlabN+0x1db4>
   18ff8:	cmp	r1, #0
   18ffc:	bne	190ec <ReadDataSlabN+0x1e74>
   19000:	add	r8, r8, #1
   19004:	cmp	fp, r8
   19008:	beq	19090 <ReadDataSlabN+0x1e18>
   1900c:	ldr	r3, [r7]
   19010:	ldr	r1, [r6, #4]!
   19014:	add	r3, r3, #1
   19018:	sdiv	r2, r3, r1
   1901c:	str	r3, [r7]
   19020:	mls	r3, r1, r2, r3
   19024:	cmp	r3, #0
   19028:	bne	19118 <ReadDataSlabN+0x1ea0>
   1902c:	ldr	r4, [r9], #4
   19030:	mov	r3, #0
   19034:	str	r3, [r7], #4
   19038:	ldr	r1, [sl, #4]!
   1903c:	sdiv	r2, r5, r4
   19040:	mls	r2, r4, r2, r5
   19044:	cmp	r2, r3
   19048:	beq	18ff8 <ReadDataSlabN+0x1d80>
   1904c:	ldr	r3, [r9, #-8]
   19050:	sub	r4, r4, r2
   19054:	mov	r2, #1
   19058:	add	r8, r8, #1
   1905c:	ldr	r0, [sp, #16]
   19060:	mla	r1, r1, r3, r4
   19064:	str	r3, [sp, #20]
   19068:	ldr	r3, [sp, #4]
   1906c:	ldr	r0, [r0]
   19070:	mul	r1, r3, r1
   19074:	bl	1694 <fseek@plt>
   19078:	ldr	r2, [sl]
   1907c:	cmp	fp, r8
   19080:	ldr	r3, [sp, #20]
   19084:	mla	r4, r2, r3, r4
   19088:	add	r5, r5, r4
   1908c:	bne	1900c <ReadDataSlabN+0x1d94>
   19090:	ldr	fp, [sp, #16]
   19094:	ldr	r4, [sp, #204]	; 0xcc
   19098:	ldr	r2, [sp, #28]
   1909c:	ldr	r3, [sp, #208]	; 0xd0
   190a0:	ldr	r3, [r3]
   190a4:	add	r3, r2, r3
   190a8:	ldr	r2, [sp, #24]
   190ac:	str	r3, [sp, #28]
   190b0:	cmp	r3, r2
   190b4:	bge	173cc <ReadDataSlabN+0x154>
   190b8:	ldr	r3, [sp, #200]	; 0xc8
   190bc:	ldr	r1, [r3]
   190c0:	cmp	r1, #0
   190c4:	beq	18f04 <ReadDataSlabN+0x1c8c>
   190c8:	ldr	r3, [sp, #4]
   190cc:	mov	r2, #1
   190d0:	ldr	r0, [fp]
   190d4:	mul	r1, r3, r1
   190d8:	bl	1694 <fseek@plt>
   190dc:	ldr	r3, [sp, #200]	; 0xc8
   190e0:	ldr	r1, [r3]
   190e4:	add	r5, r5, r1
   190e8:	b	18f04 <ReadDataSlabN+0x1c8c>
   190ec:	ldr	r3, [sp, #16]
   190f0:	mov	r2, #1
   190f4:	ldr	r4, [r9, #-8]
   190f8:	ldr	r0, [r3]
   190fc:	ldr	r3, [sp, #4]
   19100:	mul	r1, r1, r4
   19104:	mul	r1, r3, r1
   19108:	bl	1694 <fseek@plt>
   1910c:	ldr	r3, [sl]
   19110:	mla	r5, r3, r4, r5
   19114:	b	19000 <ReadDataSlabN+0x1d88>
   19118:	ldr	fp, [sp, #16]
   1911c:	ldr	r4, [sp, #204]	; 0xcc
   19120:	add	r3, sp, #152	; 0x98
   19124:	mov	r2, #1
   19128:	add	r8, r3, r8, lsl #2
   1912c:	ldr	r1, [sp, #4]
   19130:	ldr	r3, [r8, #-120]	; 0xffffff88
   19134:	ldr	r0, [fp]
   19138:	mul	r1, r1, r3
   1913c:	add	r5, r5, r3
   19140:	bl	1694 <fseek@plt>
   19144:	b	19098 <ReadDataSlabN+0x1e20>
   19148:	ldr	r3, [sp, #4]
   1914c:	ldr	fp, [sp, #20]
   19150:	ldr	r4, [sp, #204]	; 0xcc
   19154:	mul	r1, r3, r5
   19158:	mov	r2, #1
   1915c:	ldr	r0, [fp]
   19160:	bl	1694 <fseek@plt>
   19164:	ldr	r3, [r4]
   19168:	cmp	r3, #1
   1916c:	ldr	r3, [sp, #24]
   19170:	beq	198d0 <ReadDataSlabN+0x2658>
   19174:	cmp	r3, #0
   19178:	movgt	r3, #0
   1917c:	strgt	r3, [sp, #28]
   19180:	ble	173cc <ReadDataSlabN+0x154>
   19184:	ldr	r3, [sp, #200]	; 0xc8
   19188:	ldr	r1, [r3]
   1918c:	cmp	r1, #0
   19190:	bne	19358 <ReadDataSlabN+0x20e0>
   19194:	ldr	r3, [sp, #208]	; 0xd0
   19198:	ldr	r3, [r3]
   1919c:	cmp	r3, #0
   191a0:	ble	1967c <ReadDataSlabN+0x2404>
   191a4:	ldmib	sp, {r8, sl}
   191a8:	mov	r6, #0
   191ac:	ldr	r3, [sp, #12]
   191b0:	ldr	r2, [sp, #28]
   191b4:	ldr	r9, [sp, #208]	; 0xd0
   191b8:	add	r7, r3, r2
   191bc:	mov	r3, #1
   191c0:	add	r1, r7, r6
   191c4:	mov	r2, sl
   191c8:	mov	r0, fp
   191cc:	bl	169a4 <ReadUInt8Data>
   191d0:	ldr	r1, [r4]
   191d4:	mov	r2, #1
   191d8:	add	r6, r6, r2
   191dc:	ldr	r0, [fp]
   191e0:	sub	r1, r1, #1
   191e4:	mul	r1, r8, r1
   191e8:	bl	1694 <fseek@plt>
   191ec:	ldr	r3, [r9]
   191f0:	ldr	ip, [r4]
   191f4:	cmp	r3, r6
   191f8:	add	r5, r5, ip
   191fc:	bgt	191bc <ReadDataSlabN+0x1f44>
   19200:	ldr	r2, [sp, #200]	; 0xc8
   19204:	ldr	r1, [r2]
   19208:	mov	r2, #1
   1920c:	ldr	r0, [sp, #196]	; 0xc4
   19210:	ldr	lr, [r0]
   19214:	ldr	r0, [fp]
   19218:	sub	r1, lr, r1
   1921c:	mls	r3, ip, r3, r1
   19220:	ldr	r1, [sp, #4]
   19224:	add	r5, r5, r3
   19228:	mul	r1, r1, r3
   1922c:	bl	1694 <fseek@plt>
   19230:	ldr	r3, [sp, #192]	; 0xc0
   19234:	cmp	r3, #1
   19238:	ble	19328 <ReadDataSlabN+0x20b0>
   1923c:	ldr	r3, [sp, #76]	; 0x4c
   19240:	ldr	r2, [sp, #208]	; 0xd0
   19244:	add	r3, r3, #1
   19248:	ldr	r1, [r2, #4]
   1924c:	str	r3, [sp, #76]	; 0x4c
   19250:	sdiv	r2, r3, r1
   19254:	mls	r3, r1, r2, r3
   19258:	cmp	r3, #0
   1925c:	bne	1aae8 <ReadDataSlabN+0x3870>
   19260:	add	r7, sp, #76	; 0x4c
   19264:	add	r9, sp, #116	; 0x74
   19268:	str	fp, [sp, #16]
   1926c:	ldr	r3, [sp, #208]	; 0xd0
   19270:	mov	r8, #1
   19274:	str	r4, [sp, #204]	; 0xcc
   19278:	ldr	fp, [sp, #192]	; 0xc0
   1927c:	ldr	sl, [sp, #200]	; 0xc8
   19280:	add	r6, r3, #4
   19284:	b	192bc <ReadDataSlabN+0x2044>
   19288:	cmp	r1, #0
   1928c:	bne	1937c <ReadDataSlabN+0x2104>
   19290:	add	r8, r8, #1
   19294:	cmp	fp, r8
   19298:	beq	19320 <ReadDataSlabN+0x20a8>
   1929c:	ldr	r3, [r7]
   192a0:	ldr	r1, [r6, #4]!
   192a4:	add	r3, r3, #1
   192a8:	sdiv	r2, r3, r1
   192ac:	str	r3, [r7]
   192b0:	mls	r3, r1, r2, r3
   192b4:	cmp	r3, #0
   192b8:	bne	193a8 <ReadDataSlabN+0x2130>
   192bc:	ldr	r4, [r9], #4
   192c0:	mov	r3, #0
   192c4:	str	r3, [r7], #4
   192c8:	ldr	r1, [sl, #4]!
   192cc:	sdiv	r2, r5, r4
   192d0:	mls	r2, r4, r2, r5
   192d4:	cmp	r2, r3
   192d8:	beq	19288 <ReadDataSlabN+0x2010>
   192dc:	ldr	r3, [r9, #-8]
   192e0:	sub	r4, r4, r2
   192e4:	mov	r2, #1
   192e8:	add	r8, r8, #1
   192ec:	ldr	r0, [sp, #16]
   192f0:	mla	r1, r1, r3, r4
   192f4:	str	r3, [sp, #20]
   192f8:	ldr	r3, [sp, #4]
   192fc:	ldr	r0, [r0]
   19300:	mul	r1, r3, r1
   19304:	bl	1694 <fseek@plt>
   19308:	ldr	r2, [sl]
   1930c:	cmp	fp, r8
   19310:	ldr	r3, [sp, #20]
   19314:	mla	r4, r2, r3, r4
   19318:	add	r5, r5, r4
   1931c:	bne	1929c <ReadDataSlabN+0x2024>
   19320:	ldr	fp, [sp, #16]
   19324:	ldr	r4, [sp, #204]	; 0xcc
   19328:	ldr	r2, [sp, #28]
   1932c:	ldr	r3, [sp, #208]	; 0xd0
   19330:	ldr	r3, [r3]
   19334:	add	r3, r2, r3
   19338:	ldr	r2, [sp, #24]
   1933c:	str	r3, [sp, #28]
   19340:	cmp	r3, r2
   19344:	bge	173cc <ReadDataSlabN+0x154>
   19348:	ldr	r3, [sp, #200]	; 0xc8
   1934c:	ldr	r1, [r3]
   19350:	cmp	r1, #0
   19354:	beq	19194 <ReadDataSlabN+0x1f1c>
   19358:	ldr	r3, [sp, #4]
   1935c:	mov	r2, #1
   19360:	ldr	r0, [fp]
   19364:	mul	r1, r3, r1
   19368:	bl	1694 <fseek@plt>
   1936c:	ldr	r3, [sp, #200]	; 0xc8
   19370:	ldr	r1, [r3]
   19374:	add	r5, r5, r1
   19378:	b	19194 <ReadDataSlabN+0x1f1c>
   1937c:	ldr	r3, [sp, #16]
   19380:	mov	r2, #1
   19384:	ldr	r4, [r9, #-8]
   19388:	ldr	r0, [r3]
   1938c:	ldr	r3, [sp, #4]
   19390:	mul	r1, r1, r4
   19394:	mul	r1, r3, r1
   19398:	bl	1694 <fseek@plt>
   1939c:	ldr	r3, [sl]
   193a0:	mla	r5, r3, r4, r5
   193a4:	b	19290 <ReadDataSlabN+0x2018>
   193a8:	ldr	fp, [sp, #16]
   193ac:	ldr	r4, [sp, #204]	; 0xcc
   193b0:	add	r3, sp, #152	; 0x98
   193b4:	mov	r2, #1
   193b8:	add	r8, r3, r8, lsl #2
   193bc:	ldr	r1, [sp, #4]
   193c0:	ldr	r3, [r8, #-120]	; 0xffffff88
   193c4:	ldr	r0, [fp]
   193c8:	mul	r1, r1, r3
   193cc:	add	r5, r5, r3
   193d0:	bl	1694 <fseek@plt>
   193d4:	b	19328 <ReadDataSlabN+0x20b0>
   193d8:	ldr	r3, [sp, #4]
   193dc:	ldr	fp, [sp, #20]
   193e0:	ldr	r4, [sp, #204]	; 0xcc
   193e4:	mul	r1, r3, r5
   193e8:	mov	r2, #1
   193ec:	ldr	r0, [fp]
   193f0:	bl	1694 <fseek@plt>
   193f4:	ldr	r3, [r4]
   193f8:	cmp	r3, #1
   193fc:	ldr	r3, [sp, #24]
   19400:	beq	196c4 <ReadDataSlabN+0x244c>
   19404:	cmp	r3, #0
   19408:	movgt	r3, #0
   1940c:	strgt	r3, [sp, #28]
   19410:	ble	173cc <ReadDataSlabN+0x154>
   19414:	ldr	r3, [sp, #200]	; 0xc8
   19418:	ldr	r1, [r3]
   1941c:	cmp	r1, #0
   19420:	bne	195ec <ReadDataSlabN+0x2374>
   19424:	ldr	r3, [sp, #208]	; 0xd0
   19428:	ldr	r3, [r3]
   1942c:	cmp	r3, #0
   19430:	ble	1966c <ReadDataSlabN+0x23f4>
   19434:	ldmib	sp, {r8, sl}
   19438:	mov	r6, #0
   1943c:	ldr	r3, [sp, #12]
   19440:	ldr	r2, [sp, #28]
   19444:	ldr	r9, [sp, #208]	; 0xd0
   19448:	add	r7, r3, r2, lsl #1
   1944c:	mov	r3, #1
   19450:	mov	r1, r7
   19454:	mov	r2, sl
   19458:	mov	r0, fp
   1945c:	bl	158b8 <ReadInt16Data>
   19460:	ldr	r1, [r4]
   19464:	mov	r2, #1
   19468:	add	r7, r7, #2
   1946c:	add	r6, r6, r2
   19470:	ldr	r0, [fp]
   19474:	sub	r1, r1, #1
   19478:	mul	r1, r8, r1
   1947c:	bl	1694 <fseek@plt>
   19480:	ldr	r3, [r9]
   19484:	ldr	ip, [r4]
   19488:	cmp	r3, r6
   1948c:	add	r5, r5, ip
   19490:	bgt	1944c <ReadDataSlabN+0x21d4>
   19494:	ldr	r2, [sp, #200]	; 0xc8
   19498:	ldr	r1, [r2]
   1949c:	mov	r2, #1
   194a0:	ldr	r0, [sp, #196]	; 0xc4
   194a4:	ldr	lr, [r0]
   194a8:	ldr	r0, [fp]
   194ac:	sub	r1, lr, r1
   194b0:	mls	r3, ip, r3, r1
   194b4:	ldr	r1, [sp, #4]
   194b8:	add	r5, r5, r3
   194bc:	mul	r1, r1, r3
   194c0:	bl	1694 <fseek@plt>
   194c4:	ldr	r3, [sp, #192]	; 0xc0
   194c8:	cmp	r3, #1
   194cc:	ble	195bc <ReadDataSlabN+0x2344>
   194d0:	ldr	r3, [sp, #76]	; 0x4c
   194d4:	ldr	r2, [sp, #208]	; 0xd0
   194d8:	add	r3, r3, #1
   194dc:	ldr	r1, [r2, #4]
   194e0:	str	r3, [sp, #76]	; 0x4c
   194e4:	sdiv	r2, r3, r1
   194e8:	mls	r3, r1, r2, r3
   194ec:	cmp	r3, #0
   194f0:	bne	1aaf0 <ReadDataSlabN+0x3878>
   194f4:	add	r7, sp, #76	; 0x4c
   194f8:	add	r9, sp, #116	; 0x74
   194fc:	str	fp, [sp, #16]
   19500:	ldr	r3, [sp, #208]	; 0xd0
   19504:	mov	r8, #1
   19508:	str	r4, [sp, #204]	; 0xcc
   1950c:	ldr	fp, [sp, #192]	; 0xc0
   19510:	ldr	sl, [sp, #200]	; 0xc8
   19514:	add	r6, r3, #4
   19518:	b	19550 <ReadDataSlabN+0x22d8>
   1951c:	cmp	r1, #0
   19520:	bne	19610 <ReadDataSlabN+0x2398>
   19524:	add	r8, r8, #1
   19528:	cmp	fp, r8
   1952c:	beq	195b4 <ReadDataSlabN+0x233c>
   19530:	ldr	r3, [r7]
   19534:	ldr	r1, [r6, #4]!
   19538:	add	r3, r3, #1
   1953c:	sdiv	r2, r3, r1
   19540:	str	r3, [r7]
   19544:	mls	r3, r1, r2, r3
   19548:	cmp	r3, #0
   1954c:	bne	1963c <ReadDataSlabN+0x23c4>
   19550:	ldr	r4, [r9], #4
   19554:	mov	r3, #0
   19558:	str	r3, [r7], #4
   1955c:	ldr	r1, [sl, #4]!
   19560:	sdiv	r2, r5, r4
   19564:	mls	r2, r4, r2, r5
   19568:	cmp	r2, r3
   1956c:	beq	1951c <ReadDataSlabN+0x22a4>
   19570:	ldr	r3, [r9, #-8]
   19574:	sub	r4, r4, r2
   19578:	mov	r2, #1
   1957c:	add	r8, r8, #1
   19580:	ldr	r0, [sp, #16]
   19584:	mla	r1, r1, r3, r4
   19588:	str	r3, [sp, #20]
   1958c:	ldr	r3, [sp, #4]
   19590:	ldr	r0, [r0]
   19594:	mul	r1, r3, r1
   19598:	bl	1694 <fseek@plt>
   1959c:	ldr	r2, [sl]
   195a0:	cmp	fp, r8
   195a4:	ldr	r3, [sp, #20]
   195a8:	mla	r4, r2, r3, r4
   195ac:	add	r5, r5, r4
   195b0:	bne	19530 <ReadDataSlabN+0x22b8>
   195b4:	ldr	fp, [sp, #16]
   195b8:	ldr	r4, [sp, #204]	; 0xcc
   195bc:	ldr	r2, [sp, #28]
   195c0:	ldr	r3, [sp, #208]	; 0xd0
   195c4:	ldr	r3, [r3]
   195c8:	add	r3, r2, r3
   195cc:	ldr	r2, [sp, #24]
   195d0:	str	r3, [sp, #28]
   195d4:	cmp	r3, r2
   195d8:	bge	173cc <ReadDataSlabN+0x154>
   195dc:	ldr	r3, [sp, #200]	; 0xc8
   195e0:	ldr	r1, [r3]
   195e4:	cmp	r1, #0
   195e8:	beq	19424 <ReadDataSlabN+0x21ac>
   195ec:	ldr	r3, [sp, #4]
   195f0:	mov	r2, #1
   195f4:	ldr	r0, [fp]
   195f8:	mul	r1, r3, r1
   195fc:	bl	1694 <fseek@plt>
   19600:	ldr	r3, [sp, #200]	; 0xc8
   19604:	ldr	r1, [r3]
   19608:	add	r5, r5, r1
   1960c:	b	19424 <ReadDataSlabN+0x21ac>
   19610:	ldr	r3, [sp, #16]
   19614:	mov	r2, #1
   19618:	ldr	r4, [r9, #-8]
   1961c:	ldr	r0, [r3]
   19620:	ldr	r3, [sp, #4]
   19624:	mul	r1, r1, r4
   19628:	mul	r1, r3, r1
   1962c:	bl	1694 <fseek@plt>
   19630:	ldr	r3, [sl]
   19634:	mla	r5, r3, r4, r5
   19638:	b	19524 <ReadDataSlabN+0x22ac>
   1963c:	ldr	fp, [sp, #16]
   19640:	ldr	r4, [sp, #204]	; 0xcc
   19644:	add	r3, sp, #152	; 0x98
   19648:	mov	r2, #1
   1964c:	add	r8, r3, r8, lsl #2
   19650:	ldr	r1, [sp, #4]
   19654:	ldr	r3, [r8, #-120]	; 0xffffff88
   19658:	ldr	r0, [fp]
   1965c:	mul	r1, r1, r3
   19660:	add	r5, r5, r3
   19664:	bl	1694 <fseek@plt>
   19668:	b	195bc <ReadDataSlabN+0x2344>
   1966c:	ldr	ip, [r4]
   19670:	b	1949c <ReadDataSlabN+0x2224>
   19674:	ldr	ip, [r4]
   19678:	b	17d70 <ReadDataSlabN+0xaf8>
   1967c:	ldr	ip, [r4]
   19680:	b	19208 <ReadDataSlabN+0x1f90>
   19684:	ldr	ip, [r4]
   19688:	b	18f78 <ReadDataSlabN+0x1d00>
   1968c:	ldr	ip, [r4]
   19690:	b	18ce8 <ReadDataSlabN+0x1a70>
   19694:	ldr	ip, [r4]
   19698:	b	18a54 <ReadDataSlabN+0x17dc>
   1969c:	ldr	ip, [r4]
   196a0:	b	187c0 <ReadDataSlabN+0x1548>
   196a4:	ldr	ip, [r4]
   196a8:	b	1852c <ReadDataSlabN+0x12b4>
   196ac:	ldr	ip, [r4]
   196b0:	b	18298 <ReadDataSlabN+0x1020>
   196b4:	ldr	ip, [r4]
   196b8:	b	18004 <ReadDataSlabN+0xd8c>
   196bc:	mvn	r0, #0
   196c0:	b	173d0 <ReadDataSlabN+0x158>
   196c4:	cmp	r3, #0
   196c8:	ble	173cc <ReadDataSlabN+0x154>
   196cc:	str	fp, [sp, #16]
   196d0:	mov	r3, #0
   196d4:	ldr	fp, [sp, #192]	; 0xc0
   196d8:	str	r3, [sp, #28]
   196dc:	ldr	r3, [sp, #200]	; 0xc8
   196e0:	ldr	r1, [r3]
   196e4:	cmp	r1, #0
   196e8:	bne	198a8 <ReadDataSlabN+0x2630>
   196ec:	ldrd	r2, [sp, #8]
   196f0:	ldr	r4, [sp, #16]
   196f4:	ldr	r1, [sp, #28]
   196f8:	mov	r0, r4
   196fc:	add	r1, r3, r1, lsl #1
   19700:	ldr	r3, [sp, #208]	; 0xd0
   19704:	ldr	r3, [r3]
   19708:	bl	158b8 <ReadInt16Data>
   1970c:	ldr	r3, [sp, #196]	; 0xc4
   19710:	mov	r2, #1
   19714:	ldr	r0, [sp, #200]	; 0xc8
   19718:	ldr	r1, [sp, #208]	; 0xd0
   1971c:	ldr	r3, [r3]
   19720:	ldr	ip, [r0]
   19724:	ldr	r1, [r1]
   19728:	ldr	r0, [r4]
   1972c:	sub	r1, r3, r1
   19730:	sub	r3, r3, ip
   19734:	add	r5, r3, r5
   19738:	ldr	r3, [sp, #4]
   1973c:	sub	r1, r1, ip
   19740:	mul	r1, r3, r1
   19744:	bl	1694 <fseek@plt>
   19748:	cmp	fp, #1
   1974c:	ble	19828 <ReadDataSlabN+0x25b0>
   19750:	ldr	r3, [sp, #76]	; 0x4c
   19754:	ldr	r2, [sp, #208]	; 0xd0
   19758:	add	r3, r3, #1
   1975c:	ldr	r1, [r2, #4]
   19760:	str	r3, [sp, #76]	; 0x4c
   19764:	sdiv	r2, r3, r1
   19768:	mls	r3, r1, r2, r3
   1976c:	cmp	r3, #0
   19770:	bne	19878 <ReadDataSlabN+0x2600>
   19774:	add	r6, sp, #76	; 0x4c
   19778:	add	r8, sp, #116	; 0x74
   1977c:	ldr	r9, [sp, #200]	; 0xc8
   19780:	mov	r7, #1
   19784:	ldr	r3, [sp, #208]	; 0xd0
   19788:	add	sl, r3, #4
   1978c:	b	197c4 <ReadDataSlabN+0x254c>
   19790:	cmp	r1, #0
   19794:	bne	1984c <ReadDataSlabN+0x25d4>
   19798:	add	r7, r7, #1
   1979c:	cmp	fp, r7
   197a0:	beq	19828 <ReadDataSlabN+0x25b0>
   197a4:	ldr	r2, [r6]
   197a8:	ldr	r0, [sl, #4]!
   197ac:	add	r2, r2, #1
   197b0:	sdiv	r1, r2, r0
   197b4:	str	r2, [r6]
   197b8:	mls	r2, r0, r1, r2
   197bc:	cmp	r2, #0
   197c0:	bne	1987c <ReadDataSlabN+0x2604>
   197c4:	ldr	r4, [r8], #4
   197c8:	mov	r3, #0
   197cc:	str	r3, [r6], #4
   197d0:	ldr	r1, [r9, #4]!
   197d4:	sdiv	r2, r5, r4
   197d8:	mls	r2, r4, r2, r5
   197dc:	cmp	r2, r3
   197e0:	beq	19790 <ReadDataSlabN+0x2518>
   197e4:	ldr	r3, [r8, #-8]
   197e8:	sub	r4, r4, r2
   197ec:	mov	r2, #1
   197f0:	add	r7, r7, #1
   197f4:	ldr	r0, [sp, #16]
   197f8:	mla	r1, r1, r3, r4
   197fc:	str	r3, [sp, #20]
   19800:	ldr	r3, [sp, #4]
   19804:	ldr	r0, [r0]
   19808:	mul	r1, r3, r1
   1980c:	bl	1694 <fseek@plt>
   19810:	ldr	r2, [r9]
   19814:	cmp	fp, r7
   19818:	ldr	r3, [sp, #20]
   1981c:	mla	r4, r2, r3, r4
   19820:	add	r5, r5, r4
   19824:	bne	197a4 <ReadDataSlabN+0x252c>
   19828:	ldr	r2, [sp, #28]
   1982c:	ldr	r3, [sp, #208]	; 0xd0
   19830:	ldr	r3, [r3]
   19834:	add	r3, r2, r3
   19838:	ldr	r2, [sp, #24]
   1983c:	str	r3, [sp, #28]
   19840:	cmp	r3, r2
   19844:	blt	196dc <ReadDataSlabN+0x2464>
   19848:	b	173cc <ReadDataSlabN+0x154>
   1984c:	ldr	r3, [sp, #16]
   19850:	mov	r2, #1
   19854:	ldr	r4, [r8, #-8]
   19858:	ldr	r0, [r3]
   1985c:	ldr	r3, [sp, #4]
   19860:	mul	r1, r1, r4
   19864:	mul	r1, r3, r1
   19868:	bl	1694 <fseek@plt>
   1986c:	ldr	r2, [r9]
   19870:	mla	r5, r2, r4, r5
   19874:	b	19798 <ReadDataSlabN+0x2520>
   19878:	mov	r7, #1
   1987c:	add	r3, sp, #152	; 0x98
   19880:	ldr	r1, [sp, #4]
   19884:	mov	r2, #1
   19888:	add	r7, r3, r7, lsl #2
   1988c:	ldr	r3, [sp, #16]
   19890:	ldr	r0, [r3]
   19894:	ldr	r3, [r7, #-120]	; 0xffffff88
   19898:	mul	r1, r1, r3
   1989c:	add	r5, r5, r3
   198a0:	bl	1694 <fseek@plt>
   198a4:	b	19828 <ReadDataSlabN+0x25b0>
   198a8:	ldr	r3, [sp, #4]
   198ac:	mov	r2, #1
   198b0:	mul	r1, r3, r1
   198b4:	ldr	r3, [sp, #16]
   198b8:	ldr	r0, [r3]
   198bc:	bl	1694 <fseek@plt>
   198c0:	ldr	r3, [sp, #200]	; 0xc8
   198c4:	ldr	r3, [r3]
   198c8:	add	r5, r5, r3
   198cc:	b	196ec <ReadDataSlabN+0x2474>
   198d0:	cmp	r3, #0
   198d4:	ble	173cc <ReadDataSlabN+0x154>
   198d8:	str	fp, [sp, #16]
   198dc:	mov	r3, #0
   198e0:	ldr	fp, [sp, #192]	; 0xc0
   198e4:	str	r3, [sp, #28]
   198e8:	ldr	r3, [sp, #200]	; 0xc8
   198ec:	ldr	r1, [r3]
   198f0:	cmp	r1, #0
   198f4:	bne	19ab4 <ReadDataSlabN+0x283c>
   198f8:	ldrd	r2, [sp, #8]
   198fc:	ldr	r4, [sp, #16]
   19900:	ldr	r1, [sp, #28]
   19904:	mov	r0, r4
   19908:	add	r1, r3, r1
   1990c:	ldr	r3, [sp, #208]	; 0xd0
   19910:	ldr	r3, [r3]
   19914:	bl	169a4 <ReadUInt8Data>
   19918:	ldr	r3, [sp, #196]	; 0xc4
   1991c:	mov	r2, #1
   19920:	ldr	r0, [sp, #200]	; 0xc8
   19924:	ldr	r1, [sp, #208]	; 0xd0
   19928:	ldr	r3, [r3]
   1992c:	ldr	ip, [r0]
   19930:	ldr	r1, [r1]
   19934:	ldr	r0, [r4]
   19938:	sub	r1, r3, r1
   1993c:	sub	r3, r3, ip
   19940:	add	r5, r3, r5
   19944:	ldr	r3, [sp, #4]
   19948:	sub	r1, r1, ip
   1994c:	mul	r1, r3, r1
   19950:	bl	1694 <fseek@plt>
   19954:	cmp	fp, #1
   19958:	ble	19a34 <ReadDataSlabN+0x27bc>
   1995c:	ldr	r3, [sp, #76]	; 0x4c
   19960:	ldr	r2, [sp, #208]	; 0xd0
   19964:	add	r3, r3, #1
   19968:	ldr	r1, [r2, #4]
   1996c:	str	r3, [sp, #76]	; 0x4c
   19970:	sdiv	r2, r3, r1
   19974:	mls	r3, r1, r2, r3
   19978:	cmp	r3, #0
   1997c:	bne	19a84 <ReadDataSlabN+0x280c>
   19980:	add	r6, sp, #76	; 0x4c
   19984:	add	r8, sp, #116	; 0x74
   19988:	ldr	r9, [sp, #200]	; 0xc8
   1998c:	mov	r7, #1
   19990:	ldr	r3, [sp, #208]	; 0xd0
   19994:	add	sl, r3, #4
   19998:	b	199d0 <ReadDataSlabN+0x2758>
   1999c:	cmp	r1, #0
   199a0:	bne	19a58 <ReadDataSlabN+0x27e0>
   199a4:	add	r7, r7, #1
   199a8:	cmp	fp, r7
   199ac:	beq	19a34 <ReadDataSlabN+0x27bc>
   199b0:	ldr	r2, [r6]
   199b4:	ldr	r0, [sl, #4]!
   199b8:	add	r2, r2, #1
   199bc:	sdiv	r1, r2, r0
   199c0:	str	r2, [r6]
   199c4:	mls	r2, r0, r1, r2
   199c8:	cmp	r2, #0
   199cc:	bne	19a88 <ReadDataSlabN+0x2810>
   199d0:	ldr	r4, [r8], #4
   199d4:	mov	r3, #0
   199d8:	str	r3, [r6], #4
   199dc:	ldr	r1, [r9, #4]!
   199e0:	sdiv	r2, r5, r4
   199e4:	mls	r2, r4, r2, r5
   199e8:	cmp	r2, r3
   199ec:	beq	1999c <ReadDataSlabN+0x2724>
   199f0:	ldr	r3, [r8, #-8]
   199f4:	sub	r4, r4, r2
   199f8:	mov	r2, #1
   199fc:	add	r7, r7, #1
   19a00:	ldr	r0, [sp, #16]
   19a04:	mla	r1, r1, r3, r4
   19a08:	str	r3, [sp, #20]
   19a0c:	ldr	r3, [sp, #4]
   19a10:	ldr	r0, [r0]
   19a14:	mul	r1, r3, r1
   19a18:	bl	1694 <fseek@plt>
   19a1c:	ldr	r2, [r9]
   19a20:	cmp	fp, r7
   19a24:	ldr	r3, [sp, #20]
   19a28:	mla	r4, r2, r3, r4
   19a2c:	add	r5, r5, r4
   19a30:	bne	199b0 <ReadDataSlabN+0x2738>
   19a34:	ldr	r2, [sp, #28]
   19a38:	ldr	r3, [sp, #208]	; 0xd0
   19a3c:	ldr	r3, [r3]
   19a40:	add	r3, r2, r3
   19a44:	ldr	r2, [sp, #24]
   19a48:	str	r3, [sp, #28]
   19a4c:	cmp	r3, r2
   19a50:	blt	198e8 <ReadDataSlabN+0x2670>
   19a54:	b	173cc <ReadDataSlabN+0x154>
   19a58:	ldr	r3, [sp, #16]
   19a5c:	mov	r2, #1
   19a60:	ldr	r4, [r8, #-8]
   19a64:	ldr	r0, [r3]
   19a68:	ldr	r3, [sp, #4]
   19a6c:	mul	r1, r1, r4
   19a70:	mul	r1, r3, r1
   19a74:	bl	1694 <fseek@plt>
   19a78:	ldr	r2, [r9]
   19a7c:	mla	r5, r2, r4, r5
   19a80:	b	199a4 <ReadDataSlabN+0x272c>
   19a84:	mov	r7, #1
   19a88:	add	r3, sp, #152	; 0x98
   19a8c:	ldr	r1, [sp, #4]
   19a90:	mov	r2, #1
   19a94:	add	r7, r3, r7, lsl #2
   19a98:	ldr	r3, [sp, #16]
   19a9c:	ldr	r0, [r3]
   19aa0:	ldr	r3, [r7, #-120]	; 0xffffff88
   19aa4:	mul	r1, r1, r3
   19aa8:	add	r5, r5, r3
   19aac:	bl	1694 <fseek@plt>
   19ab0:	b	19a34 <ReadDataSlabN+0x27bc>
   19ab4:	ldr	r3, [sp, #4]
   19ab8:	mov	r2, #1
   19abc:	mul	r1, r3, r1
   19ac0:	ldr	r3, [sp, #16]
   19ac4:	ldr	r0, [r3]
   19ac8:	bl	1694 <fseek@plt>
   19acc:	ldr	r3, [sp, #200]	; 0xc8
   19ad0:	ldr	r3, [r3]
   19ad4:	add	r5, r5, r3
   19ad8:	b	198f8 <ReadDataSlabN+0x2680>
   19adc:	cmp	r3, #0
   19ae0:	ble	173cc <ReadDataSlabN+0x154>
   19ae4:	str	fp, [sp, #16]
   19ae8:	mov	r3, #0
   19aec:	ldr	fp, [sp, #192]	; 0xc0
   19af0:	str	r3, [sp, #28]
   19af4:	ldr	r3, [sp, #200]	; 0xc8
   19af8:	ldr	r1, [r3]
   19afc:	cmp	r1, #0
   19b00:	bne	19cc0 <ReadDataSlabN+0x2a48>
   19b04:	ldrd	r2, [sp, #8]
   19b08:	ldr	r4, [sp, #16]
   19b0c:	ldr	r1, [sp, #28]
   19b10:	mov	r0, r4
   19b14:	add	r1, r3, r1
   19b18:	ldr	r3, [sp, #208]	; 0xd0
   19b1c:	ldr	r3, [r3]
   19b20:	bl	163a0 <ReadInt8Data>
   19b24:	ldr	r3, [sp, #196]	; 0xc4
   19b28:	mov	r2, #1
   19b2c:	ldr	r0, [sp, #200]	; 0xc8
   19b30:	ldr	r1, [sp, #208]	; 0xd0
   19b34:	ldr	r3, [r3]
   19b38:	ldr	ip, [r0]
   19b3c:	ldr	r1, [r1]
   19b40:	ldr	r0, [r4]
   19b44:	sub	r1, r3, r1
   19b48:	sub	r3, r3, ip
   19b4c:	add	r5, r3, r5
   19b50:	ldr	r3, [sp, #4]
   19b54:	sub	r1, r1, ip
   19b58:	mul	r1, r3, r1
   19b5c:	bl	1694 <fseek@plt>
   19b60:	cmp	fp, #1
   19b64:	ble	19c40 <ReadDataSlabN+0x29c8>
   19b68:	ldr	r3, [sp, #76]	; 0x4c
   19b6c:	ldr	r2, [sp, #208]	; 0xd0
   19b70:	add	r3, r3, #1
   19b74:	ldr	r1, [r2, #4]
   19b78:	str	r3, [sp, #76]	; 0x4c
   19b7c:	sdiv	r2, r3, r1
   19b80:	mls	r3, r1, r2, r3
   19b84:	cmp	r3, #0
   19b88:	bne	19c90 <ReadDataSlabN+0x2a18>
   19b8c:	add	r6, sp, #76	; 0x4c
   19b90:	add	r8, sp, #116	; 0x74
   19b94:	ldr	r9, [sp, #200]	; 0xc8
   19b98:	mov	r7, #1
   19b9c:	ldr	r3, [sp, #208]	; 0xd0
   19ba0:	add	sl, r3, #4
   19ba4:	b	19bdc <ReadDataSlabN+0x2964>
   19ba8:	cmp	r1, #0
   19bac:	bne	19c64 <ReadDataSlabN+0x29ec>
   19bb0:	add	r7, r7, #1
   19bb4:	cmp	fp, r7
   19bb8:	beq	19c40 <ReadDataSlabN+0x29c8>
   19bbc:	ldr	r2, [r6]
   19bc0:	ldr	r0, [sl, #4]!
   19bc4:	add	r2, r2, #1
   19bc8:	sdiv	r1, r2, r0
   19bcc:	str	r2, [r6]
   19bd0:	mls	r2, r0, r1, r2
   19bd4:	cmp	r2, #0
   19bd8:	bne	19c94 <ReadDataSlabN+0x2a1c>
   19bdc:	ldr	r4, [r8], #4
   19be0:	mov	r3, #0
   19be4:	str	r3, [r6], #4
   19be8:	ldr	r1, [r9, #4]!
   19bec:	sdiv	r2, r5, r4
   19bf0:	mls	r2, r4, r2, r5
   19bf4:	cmp	r2, r3
   19bf8:	beq	19ba8 <ReadDataSlabN+0x2930>
   19bfc:	ldr	r3, [r8, #-8]
   19c00:	sub	r4, r4, r2
   19c04:	mov	r2, #1
   19c08:	add	r7, r7, #1
   19c0c:	ldr	r0, [sp, #16]
   19c10:	mla	r1, r1, r3, r4
   19c14:	str	r3, [sp, #20]
   19c18:	ldr	r3, [sp, #4]
   19c1c:	ldr	r0, [r0]
   19c20:	mul	r1, r3, r1
   19c24:	bl	1694 <fseek@plt>
   19c28:	ldr	r2, [r9]
   19c2c:	cmp	fp, r7
   19c30:	ldr	r3, [sp, #20]
   19c34:	mla	r4, r2, r3, r4
   19c38:	add	r5, r5, r4
   19c3c:	bne	19bbc <ReadDataSlabN+0x2944>
   19c40:	ldr	r2, [sp, #28]
   19c44:	ldr	r3, [sp, #208]	; 0xd0
   19c48:	ldr	r3, [r3]
   19c4c:	add	r3, r2, r3
   19c50:	ldr	r2, [sp, #24]
   19c54:	str	r3, [sp, #28]
   19c58:	cmp	r3, r2
   19c5c:	blt	19af4 <ReadDataSlabN+0x287c>
   19c60:	b	173cc <ReadDataSlabN+0x154>
   19c64:	ldr	r3, [sp, #16]
   19c68:	mov	r2, #1
   19c6c:	ldr	r4, [r8, #-8]
   19c70:	ldr	r0, [r3]
   19c74:	ldr	r3, [sp, #4]
   19c78:	mul	r1, r1, r4
   19c7c:	mul	r1, r3, r1
   19c80:	bl	1694 <fseek@plt>
   19c84:	ldr	r2, [r9]
   19c88:	mla	r5, r2, r4, r5
   19c8c:	b	19bb0 <ReadDataSlabN+0x2938>
   19c90:	mov	r7, #1
   19c94:	add	r3, sp, #152	; 0x98
   19c98:	ldr	r1, [sp, #4]
   19c9c:	mov	r2, #1
   19ca0:	add	r7, r3, r7, lsl #2
   19ca4:	ldr	r3, [sp, #16]
   19ca8:	ldr	r0, [r3]
   19cac:	ldr	r3, [r7, #-120]	; 0xffffff88
   19cb0:	mul	r1, r1, r3
   19cb4:	add	r5, r5, r3
   19cb8:	bl	1694 <fseek@plt>
   19cbc:	b	19c40 <ReadDataSlabN+0x29c8>
   19cc0:	ldr	r3, [sp, #4]
   19cc4:	mov	r2, #1
   19cc8:	mul	r1, r3, r1
   19ccc:	ldr	r3, [sp, #16]
   19cd0:	ldr	r0, [r3]
   19cd4:	bl	1694 <fseek@plt>
   19cd8:	ldr	r3, [sp, #200]	; 0xc8
   19cdc:	ldr	r3, [r3]
   19ce0:	add	r5, r5, r3
   19ce4:	b	19b04 <ReadDataSlabN+0x288c>
   19ce8:	cmp	r3, #0
   19cec:	ble	173cc <ReadDataSlabN+0x154>
   19cf0:	str	fp, [sp, #16]
   19cf4:	mov	r3, #0
   19cf8:	ldr	fp, [sp, #192]	; 0xc0
   19cfc:	str	r3, [sp, #28]
   19d00:	ldr	r3, [sp, #200]	; 0xc8
   19d04:	ldr	r1, [r3]
   19d08:	cmp	r1, #0
   19d0c:	bne	19ecc <ReadDataSlabN+0x2c54>
   19d10:	ldrd	r2, [sp, #8]
   19d14:	ldr	r4, [sp, #16]
   19d18:	ldr	r1, [sp, #28]
   19d1c:	mov	r0, r4
   19d20:	add	r1, r3, r1, lsl #2
   19d24:	ldr	r3, [sp, #208]	; 0xd0
   19d28:	ldr	r3, [r3]
   19d2c:	bl	13cfc <ReadSingleData>
   19d30:	ldr	r3, [sp, #196]	; 0xc4
   19d34:	mov	r2, #1
   19d38:	ldr	r0, [sp, #200]	; 0xc8
   19d3c:	ldr	r1, [sp, #208]	; 0xd0
   19d40:	ldr	r3, [r3]
   19d44:	ldr	ip, [r0]
   19d48:	ldr	r1, [r1]
   19d4c:	ldr	r0, [r4]
   19d50:	sub	r1, r3, r1
   19d54:	sub	r3, r3, ip
   19d58:	add	r5, r3, r5
   19d5c:	ldr	r3, [sp, #4]
   19d60:	sub	r1, r1, ip
   19d64:	mul	r1, r3, r1
   19d68:	bl	1694 <fseek@plt>
   19d6c:	cmp	fp, #1
   19d70:	ble	19e4c <ReadDataSlabN+0x2bd4>
   19d74:	ldr	r3, [sp, #76]	; 0x4c
   19d78:	ldr	r2, [sp, #208]	; 0xd0
   19d7c:	add	r3, r3, #1
   19d80:	ldr	r1, [r2, #4]
   19d84:	str	r3, [sp, #76]	; 0x4c
   19d88:	sdiv	r2, r3, r1
   19d8c:	mls	r3, r1, r2, r3
   19d90:	cmp	r3, #0
   19d94:	bne	19e9c <ReadDataSlabN+0x2c24>
   19d98:	add	r6, sp, #76	; 0x4c
   19d9c:	add	r8, sp, #116	; 0x74
   19da0:	ldr	r9, [sp, #200]	; 0xc8
   19da4:	mov	r7, #1
   19da8:	ldr	r3, [sp, #208]	; 0xd0
   19dac:	add	sl, r3, #4
   19db0:	b	19de8 <ReadDataSlabN+0x2b70>
   19db4:	cmp	r1, #0
   19db8:	bne	19e70 <ReadDataSlabN+0x2bf8>
   19dbc:	add	r7, r7, #1
   19dc0:	cmp	fp, r7
   19dc4:	beq	19e4c <ReadDataSlabN+0x2bd4>
   19dc8:	ldr	r2, [r6]
   19dcc:	ldr	r0, [sl, #4]!
   19dd0:	add	r2, r2, #1
   19dd4:	sdiv	r1, r2, r0
   19dd8:	str	r2, [r6]
   19ddc:	mls	r2, r0, r1, r2
   19de0:	cmp	r2, #0
   19de4:	bne	19ea0 <ReadDataSlabN+0x2c28>
   19de8:	ldr	r4, [r8], #4
   19dec:	mov	r3, #0
   19df0:	str	r3, [r6], #4
   19df4:	ldr	r1, [r9, #4]!
   19df8:	sdiv	r2, r5, r4
   19dfc:	mls	r2, r4, r2, r5
   19e00:	cmp	r2, r3
   19e04:	beq	19db4 <ReadDataSlabN+0x2b3c>
   19e08:	ldr	r3, [r8, #-8]
   19e0c:	sub	r4, r4, r2
   19e10:	mov	r2, #1
   19e14:	add	r7, r7, #1
   19e18:	ldr	r0, [sp, #16]
   19e1c:	mla	r1, r1, r3, r4
   19e20:	str	r3, [sp, #20]
   19e24:	ldr	r3, [sp, #4]
   19e28:	ldr	r0, [r0]
   19e2c:	mul	r1, r3, r1
   19e30:	bl	1694 <fseek@plt>
   19e34:	ldr	r2, [r9]
   19e38:	cmp	fp, r7
   19e3c:	ldr	r3, [sp, #20]
   19e40:	mla	r4, r2, r3, r4
   19e44:	add	r5, r5, r4
   19e48:	bne	19dc8 <ReadDataSlabN+0x2b50>
   19e4c:	ldr	r2, [sp, #28]
   19e50:	ldr	r3, [sp, #208]	; 0xd0
   19e54:	ldr	r3, [r3]
   19e58:	add	r3, r2, r3
   19e5c:	ldr	r2, [sp, #24]
   19e60:	str	r3, [sp, #28]
   19e64:	cmp	r3, r2
   19e68:	blt	19d00 <ReadDataSlabN+0x2a88>
   19e6c:	b	173cc <ReadDataSlabN+0x154>
   19e70:	ldr	r3, [sp, #16]
   19e74:	mov	r2, #1
   19e78:	ldr	r4, [r8, #-8]
   19e7c:	ldr	r0, [r3]
   19e80:	ldr	r3, [sp, #4]
   19e84:	mul	r1, r1, r4
   19e88:	mul	r1, r3, r1
   19e8c:	bl	1694 <fseek@plt>
   19e90:	ldr	r2, [r9]
   19e94:	mla	r5, r2, r4, r5
   19e98:	b	19dbc <ReadDataSlabN+0x2b44>
   19e9c:	mov	r7, #1
   19ea0:	add	r3, sp, #152	; 0x98
   19ea4:	ldr	r1, [sp, #4]
   19ea8:	mov	r2, #1
   19eac:	add	r7, r3, r7, lsl #2
   19eb0:	ldr	r3, [sp, #16]
   19eb4:	ldr	r0, [r3]
   19eb8:	ldr	r3, [r7, #-120]	; 0xffffff88
   19ebc:	mul	r1, r1, r3
   19ec0:	add	r5, r5, r3
   19ec4:	bl	1694 <fseek@plt>
   19ec8:	b	19e4c <ReadDataSlabN+0x2bd4>
   19ecc:	ldr	r3, [sp, #4]
   19ed0:	mov	r2, #1
   19ed4:	mul	r1, r3, r1
   19ed8:	ldr	r3, [sp, #16]
   19edc:	ldr	r0, [r3]
   19ee0:	bl	1694 <fseek@plt>
   19ee4:	ldr	r3, [sp, #200]	; 0xc8
   19ee8:	ldr	r3, [r3]
   19eec:	add	r5, r5, r3
   19ef0:	b	19d10 <ReadDataSlabN+0x2a98>
   19ef4:	cmp	r3, #0
   19ef8:	ble	173cc <ReadDataSlabN+0x154>
   19efc:	str	fp, [sp, #16]
   19f00:	mov	r3, #0
   19f04:	ldr	fp, [sp, #192]	; 0xc0
   19f08:	str	r3, [sp, #28]
   19f0c:	ldr	r3, [sp, #200]	; 0xc8
   19f10:	ldr	r1, [r3]
   19f14:	cmp	r1, #0
   19f18:	bne	1a0d8 <ReadDataSlabN+0x2e60>
   19f1c:	ldrd	r2, [sp, #8]
   19f20:	ldr	r4, [sp, #16]
   19f24:	ldr	r1, [sp, #28]
   19f28:	mov	r0, r4
   19f2c:	add	r1, r3, r1, lsl #2
   19f30:	ldr	r3, [sp, #208]	; 0xd0
   19f34:	ldr	r3, [r3]
   19f38:	bl	14df0 <ReadInt32Data>
   19f3c:	ldr	r3, [sp, #196]	; 0xc4
   19f40:	mov	r2, #1
   19f44:	ldr	r0, [sp, #200]	; 0xc8
   19f48:	ldr	r1, [sp, #208]	; 0xd0
   19f4c:	ldr	r3, [r3]
   19f50:	ldr	ip, [r0]
   19f54:	ldr	r1, [r1]
   19f58:	ldr	r0, [r4]
   19f5c:	sub	r1, r3, r1
   19f60:	sub	r3, r3, ip
   19f64:	add	r5, r3, r5
   19f68:	ldr	r3, [sp, #4]
   19f6c:	sub	r1, r1, ip
   19f70:	mul	r1, r3, r1
   19f74:	bl	1694 <fseek@plt>
   19f78:	cmp	fp, #1
   19f7c:	ble	1a058 <ReadDataSlabN+0x2de0>
   19f80:	ldr	r3, [sp, #76]	; 0x4c
   19f84:	ldr	r2, [sp, #208]	; 0xd0
   19f88:	add	r3, r3, #1
   19f8c:	ldr	r1, [r2, #4]
   19f90:	str	r3, [sp, #76]	; 0x4c
   19f94:	sdiv	r2, r3, r1
   19f98:	mls	r3, r1, r2, r3
   19f9c:	cmp	r3, #0
   19fa0:	bne	1a0a8 <ReadDataSlabN+0x2e30>
   19fa4:	add	r6, sp, #76	; 0x4c
   19fa8:	add	r8, sp, #116	; 0x74
   19fac:	ldr	r9, [sp, #200]	; 0xc8
   19fb0:	mov	r7, #1
   19fb4:	ldr	r3, [sp, #208]	; 0xd0
   19fb8:	add	sl, r3, #4
   19fbc:	b	19ff4 <ReadDataSlabN+0x2d7c>
   19fc0:	cmp	r1, #0
   19fc4:	bne	1a07c <ReadDataSlabN+0x2e04>
   19fc8:	add	r7, r7, #1
   19fcc:	cmp	fp, r7
   19fd0:	beq	1a058 <ReadDataSlabN+0x2de0>
   19fd4:	ldr	r2, [r6]
   19fd8:	ldr	r0, [sl, #4]!
   19fdc:	add	r2, r2, #1
   19fe0:	sdiv	r1, r2, r0
   19fe4:	str	r2, [r6]
   19fe8:	mls	r2, r0, r1, r2
   19fec:	cmp	r2, #0
   19ff0:	bne	1a0ac <ReadDataSlabN+0x2e34>
   19ff4:	ldr	r4, [r8], #4
   19ff8:	mov	r3, #0
   19ffc:	str	r3, [r6], #4
   1a000:	ldr	r1, [r9, #4]!
   1a004:	sdiv	r2, r5, r4
   1a008:	mls	r2, r4, r2, r5
   1a00c:	cmp	r2, r3
   1a010:	beq	19fc0 <ReadDataSlabN+0x2d48>
   1a014:	ldr	r3, [r8, #-8]
   1a018:	sub	r4, r4, r2
   1a01c:	mov	r2, #1
   1a020:	add	r7, r7, #1
   1a024:	ldr	r0, [sp, #16]
   1a028:	mla	r1, r1, r3, r4
   1a02c:	str	r3, [sp, #20]
   1a030:	ldr	r3, [sp, #4]
   1a034:	ldr	r0, [r0]
   1a038:	mul	r1, r3, r1
   1a03c:	bl	1694 <fseek@plt>
   1a040:	ldr	r2, [r9]
   1a044:	cmp	fp, r7
   1a048:	ldr	r3, [sp, #20]
   1a04c:	mla	r4, r2, r3, r4
   1a050:	add	r5, r5, r4
   1a054:	bne	19fd4 <ReadDataSlabN+0x2d5c>
   1a058:	ldr	r2, [sp, #28]
   1a05c:	ldr	r3, [sp, #208]	; 0xd0
   1a060:	ldr	r3, [r3]
   1a064:	add	r3, r2, r3
   1a068:	ldr	r2, [sp, #24]
   1a06c:	str	r3, [sp, #28]
   1a070:	cmp	r3, r2
   1a074:	blt	19f0c <ReadDataSlabN+0x2c94>
   1a078:	b	173cc <ReadDataSlabN+0x154>
   1a07c:	ldr	r3, [sp, #16]
   1a080:	mov	r2, #1
   1a084:	ldr	r4, [r8, #-8]
   1a088:	ldr	r0, [r3]
   1a08c:	ldr	r3, [sp, #4]
   1a090:	mul	r1, r1, r4
   1a094:	mul	r1, r3, r1
   1a098:	bl	1694 <fseek@plt>
   1a09c:	ldr	r2, [r9]
   1a0a0:	mla	r5, r2, r4, r5
   1a0a4:	b	19fc8 <ReadDataSlabN+0x2d50>
   1a0a8:	mov	r7, #1
   1a0ac:	add	r3, sp, #152	; 0x98
   1a0b0:	ldr	r1, [sp, #4]
   1a0b4:	mov	r2, #1
   1a0b8:	add	r7, r3, r7, lsl #2
   1a0bc:	ldr	r3, [sp, #16]
   1a0c0:	ldr	r0, [r3]
   1a0c4:	ldr	r3, [r7, #-120]	; 0xffffff88
   1a0c8:	mul	r1, r1, r3
   1a0cc:	add	r5, r5, r3
   1a0d0:	bl	1694 <fseek@plt>
   1a0d4:	b	1a058 <ReadDataSlabN+0x2de0>
   1a0d8:	ldr	r3, [sp, #4]
   1a0dc:	mov	r2, #1
   1a0e0:	mul	r1, r3, r1
   1a0e4:	ldr	r3, [sp, #16]
   1a0e8:	ldr	r0, [r3]
   1a0ec:	bl	1694 <fseek@plt>
   1a0f0:	ldr	r3, [sp, #200]	; 0xc8
   1a0f4:	ldr	r3, [r3]
   1a0f8:	add	r5, r5, r3
   1a0fc:	b	19f1c <ReadDataSlabN+0x2ca4>
   1a100:	cmp	r3, #0
   1a104:	ble	173cc <ReadDataSlabN+0x154>
   1a108:	str	fp, [sp, #16]
   1a10c:	mov	r3, #0
   1a110:	ldr	fp, [sp, #192]	; 0xc0
   1a114:	str	r3, [sp, #28]
   1a118:	ldr	r3, [sp, #200]	; 0xc8
   1a11c:	ldr	r1, [r3]
   1a120:	cmp	r1, #0
   1a124:	bne	1a2e4 <ReadDataSlabN+0x306c>
   1a128:	ldrd	r2, [sp, #8]
   1a12c:	ldr	r4, [sp, #16]
   1a130:	ldr	r1, [sp, #28]
   1a134:	mov	r0, r4
   1a138:	add	r1, r3, r1, lsl #1
   1a13c:	ldr	r3, [sp, #208]	; 0xd0
   1a140:	ldr	r3, [r3]
   1a144:	bl	15e2c <ReadUInt16Data>
   1a148:	ldr	r3, [sp, #196]	; 0xc4
   1a14c:	mov	r2, #1
   1a150:	ldr	r0, [sp, #200]	; 0xc8
   1a154:	ldr	r1, [sp, #208]	; 0xd0
   1a158:	ldr	r3, [r3]
   1a15c:	ldr	ip, [r0]
   1a160:	ldr	r1, [r1]
   1a164:	ldr	r0, [r4]
   1a168:	sub	r1, r3, r1
   1a16c:	sub	r3, r3, ip
   1a170:	add	r5, r3, r5
   1a174:	ldr	r3, [sp, #4]
   1a178:	sub	r1, r1, ip
   1a17c:	mul	r1, r3, r1
   1a180:	bl	1694 <fseek@plt>
   1a184:	cmp	fp, #1
   1a188:	ble	1a264 <ReadDataSlabN+0x2fec>
   1a18c:	ldr	r3, [sp, #76]	; 0x4c
   1a190:	ldr	r2, [sp, #208]	; 0xd0
   1a194:	add	r3, r3, #1
   1a198:	ldr	r1, [r2, #4]
   1a19c:	str	r3, [sp, #76]	; 0x4c
   1a1a0:	sdiv	r2, r3, r1
   1a1a4:	mls	r3, r1, r2, r3
   1a1a8:	cmp	r3, #0
   1a1ac:	bne	1a2b4 <ReadDataSlabN+0x303c>
   1a1b0:	add	r6, sp, #76	; 0x4c
   1a1b4:	add	r8, sp, #116	; 0x74
   1a1b8:	ldr	r9, [sp, #200]	; 0xc8
   1a1bc:	mov	r7, #1
   1a1c0:	ldr	r3, [sp, #208]	; 0xd0
   1a1c4:	add	sl, r3, #4
   1a1c8:	b	1a200 <ReadDataSlabN+0x2f88>
   1a1cc:	cmp	r1, #0
   1a1d0:	bne	1a288 <ReadDataSlabN+0x3010>
   1a1d4:	add	r7, r7, #1
   1a1d8:	cmp	fp, r7
   1a1dc:	beq	1a264 <ReadDataSlabN+0x2fec>
   1a1e0:	ldr	r2, [r6]
   1a1e4:	ldr	r0, [sl, #4]!
   1a1e8:	add	r2, r2, #1
   1a1ec:	sdiv	r1, r2, r0
   1a1f0:	str	r2, [r6]
   1a1f4:	mls	r2, r0, r1, r2
   1a1f8:	cmp	r2, #0
   1a1fc:	bne	1a2b8 <ReadDataSlabN+0x3040>
   1a200:	ldr	r4, [r8], #4
   1a204:	mov	r3, #0
   1a208:	str	r3, [r6], #4
   1a20c:	ldr	r1, [r9, #4]!
   1a210:	sdiv	r2, r5, r4
   1a214:	mls	r2, r4, r2, r5
   1a218:	cmp	r2, r3
   1a21c:	beq	1a1cc <ReadDataSlabN+0x2f54>
   1a220:	ldr	r3, [r8, #-8]
   1a224:	sub	r4, r4, r2
   1a228:	mov	r2, #1
   1a22c:	add	r7, r7, #1
   1a230:	ldr	r0, [sp, #16]
   1a234:	mla	r1, r1, r3, r4
   1a238:	str	r3, [sp, #20]
   1a23c:	ldr	r3, [sp, #4]
   1a240:	ldr	r0, [r0]
   1a244:	mul	r1, r3, r1
   1a248:	bl	1694 <fseek@plt>
   1a24c:	ldr	r2, [r9]
   1a250:	cmp	fp, r7
   1a254:	ldr	r3, [sp, #20]
   1a258:	mla	r4, r2, r3, r4
   1a25c:	add	r5, r5, r4
   1a260:	bne	1a1e0 <ReadDataSlabN+0x2f68>
   1a264:	ldr	r2, [sp, #28]
   1a268:	ldr	r3, [sp, #208]	; 0xd0
   1a26c:	ldr	r3, [r3]
   1a270:	add	r3, r2, r3
   1a274:	ldr	r2, [sp, #24]
   1a278:	str	r3, [sp, #28]
   1a27c:	cmp	r3, r2
   1a280:	blt	1a118 <ReadDataSlabN+0x2ea0>
   1a284:	b	173cc <ReadDataSlabN+0x154>
   1a288:	ldr	r3, [sp, #16]
   1a28c:	mov	r2, #1
   1a290:	ldr	r4, [r8, #-8]
   1a294:	ldr	r0, [r3]
   1a298:	ldr	r3, [sp, #4]
   1a29c:	mul	r1, r1, r4
   1a2a0:	mul	r1, r3, r1
   1a2a4:	bl	1694 <fseek@plt>
   1a2a8:	ldr	r2, [r9]
   1a2ac:	mla	r5, r2, r4, r5
   1a2b0:	b	1a1d4 <ReadDataSlabN+0x2f5c>
   1a2b4:	mov	r7, #1
   1a2b8:	add	r3, sp, #152	; 0x98
   1a2bc:	ldr	r1, [sp, #4]
   1a2c0:	mov	r2, #1
   1a2c4:	add	r7, r3, r7, lsl #2
   1a2c8:	ldr	r3, [sp, #16]
   1a2cc:	ldr	r0, [r3]
   1a2d0:	ldr	r3, [r7, #-120]	; 0xffffff88
   1a2d4:	mul	r1, r1, r3
   1a2d8:	add	r5, r5, r3
   1a2dc:	bl	1694 <fseek@plt>
   1a2e0:	b	1a264 <ReadDataSlabN+0x2fec>
   1a2e4:	ldr	r3, [sp, #4]
   1a2e8:	mov	r2, #1
   1a2ec:	mul	r1, r3, r1
   1a2f0:	ldr	r3, [sp, #16]
   1a2f4:	ldr	r0, [r3]
   1a2f8:	bl	1694 <fseek@plt>
   1a2fc:	ldr	r3, [sp, #200]	; 0xc8
   1a300:	ldr	r3, [r3]
   1a304:	add	r5, r5, r3
   1a308:	b	1a128 <ReadDataSlabN+0x2eb0>
   1a30c:	cmp	r3, #0
   1a310:	ble	173cc <ReadDataSlabN+0x154>
   1a314:	str	fp, [sp, #16]
   1a318:	mov	r3, #0
   1a31c:	ldr	fp, [sp, #192]	; 0xc0
   1a320:	str	r3, [sp, #28]
   1a324:	ldr	r3, [sp, #200]	; 0xc8
   1a328:	ldr	r1, [r3]
   1a32c:	cmp	r1, #0
   1a330:	bne	1a4f0 <ReadDataSlabN+0x3278>
   1a334:	ldrd	r2, [sp, #8]
   1a338:	ldr	r4, [sp, #16]
   1a33c:	ldr	r1, [sp, #28]
   1a340:	mov	r0, r4
   1a344:	add	r1, r3, r1, lsl #2
   1a348:	ldr	r3, [sp, #208]	; 0xd0
   1a34c:	ldr	r3, [r3]
   1a350:	bl	15354 <ReadUInt32Data>
   1a354:	ldr	r3, [sp, #196]	; 0xc4
   1a358:	mov	r2, #1
   1a35c:	ldr	r0, [sp, #200]	; 0xc8
   1a360:	ldr	r1, [sp, #208]	; 0xd0
   1a364:	ldr	r3, [r3]
   1a368:	ldr	ip, [r0]
   1a36c:	ldr	r1, [r1]
   1a370:	ldr	r0, [r4]
   1a374:	sub	r1, r3, r1
   1a378:	sub	r3, r3, ip
   1a37c:	add	r5, r3, r5
   1a380:	ldr	r3, [sp, #4]
   1a384:	sub	r1, r1, ip
   1a388:	mul	r1, r3, r1
   1a38c:	bl	1694 <fseek@plt>
   1a390:	cmp	fp, #1
   1a394:	ble	1a470 <ReadDataSlabN+0x31f8>
   1a398:	ldr	r3, [sp, #76]	; 0x4c
   1a39c:	ldr	r2, [sp, #208]	; 0xd0
   1a3a0:	add	r3, r3, #1
   1a3a4:	ldr	r1, [r2, #4]
   1a3a8:	str	r3, [sp, #76]	; 0x4c
   1a3ac:	sdiv	r2, r3, r1
   1a3b0:	mls	r3, r1, r2, r3
   1a3b4:	cmp	r3, #0
   1a3b8:	bne	1a4c0 <ReadDataSlabN+0x3248>
   1a3bc:	add	r6, sp, #76	; 0x4c
   1a3c0:	add	r8, sp, #116	; 0x74
   1a3c4:	ldr	r9, [sp, #200]	; 0xc8
   1a3c8:	mov	r7, #1
   1a3cc:	ldr	r3, [sp, #208]	; 0xd0
   1a3d0:	add	sl, r3, #4
   1a3d4:	b	1a40c <ReadDataSlabN+0x3194>
   1a3d8:	cmp	r1, #0
   1a3dc:	bne	1a494 <ReadDataSlabN+0x321c>
   1a3e0:	add	r7, r7, #1
   1a3e4:	cmp	fp, r7
   1a3e8:	beq	1a470 <ReadDataSlabN+0x31f8>
   1a3ec:	ldr	r2, [r6]
   1a3f0:	ldr	r0, [sl, #4]!
   1a3f4:	add	r2, r2, #1
   1a3f8:	sdiv	r1, r2, r0
   1a3fc:	str	r2, [r6]
   1a400:	mls	r2, r0, r1, r2
   1a404:	cmp	r2, #0
   1a408:	bne	1a4c4 <ReadDataSlabN+0x324c>
   1a40c:	ldr	r4, [r8], #4
   1a410:	mov	r3, #0
   1a414:	str	r3, [r6], #4
   1a418:	ldr	r1, [r9, #4]!
   1a41c:	sdiv	r2, r5, r4
   1a420:	mls	r2, r4, r2, r5
   1a424:	cmp	r2, r3
   1a428:	beq	1a3d8 <ReadDataSlabN+0x3160>
   1a42c:	ldr	r3, [r8, #-8]
   1a430:	sub	r4, r4, r2
   1a434:	mov	r2, #1
   1a438:	add	r7, r7, #1
   1a43c:	ldr	r0, [sp, #16]
   1a440:	mla	r1, r1, r3, r4
   1a444:	str	r3, [sp, #20]
   1a448:	ldr	r3, [sp, #4]
   1a44c:	ldr	r0, [r0]
   1a450:	mul	r1, r3, r1
   1a454:	bl	1694 <fseek@plt>
   1a458:	ldr	r2, [r9]
   1a45c:	cmp	fp, r7
   1a460:	ldr	r3, [sp, #20]
   1a464:	mla	r4, r2, r3, r4
   1a468:	add	r5, r5, r4
   1a46c:	bne	1a3ec <ReadDataSlabN+0x3174>
   1a470:	ldr	r2, [sp, #28]
   1a474:	ldr	r3, [sp, #208]	; 0xd0
   1a478:	ldr	r3, [r3]
   1a47c:	add	r3, r2, r3
   1a480:	ldr	r2, [sp, #24]
   1a484:	str	r3, [sp, #28]
   1a488:	cmp	r3, r2
   1a48c:	blt	1a324 <ReadDataSlabN+0x30ac>
   1a490:	b	173cc <ReadDataSlabN+0x154>
   1a494:	ldr	r3, [sp, #16]
   1a498:	mov	r2, #1
   1a49c:	ldr	r4, [r8, #-8]
   1a4a0:	ldr	r0, [r3]
   1a4a4:	ldr	r3, [sp, #4]
   1a4a8:	mul	r1, r1, r4
   1a4ac:	mul	r1, r3, r1
   1a4b0:	bl	1694 <fseek@plt>
   1a4b4:	ldr	r2, [r9]
   1a4b8:	mla	r5, r2, r4, r5
   1a4bc:	b	1a3e0 <ReadDataSlabN+0x3168>
   1a4c0:	mov	r7, #1
   1a4c4:	add	r3, sp, #152	; 0x98
   1a4c8:	ldr	r1, [sp, #4]
   1a4cc:	mov	r2, #1
   1a4d0:	add	r7, r3, r7, lsl #2
   1a4d4:	ldr	r3, [sp, #16]
   1a4d8:	ldr	r0, [r3]
   1a4dc:	ldr	r3, [r7, #-120]	; 0xffffff88
   1a4e0:	mul	r1, r1, r3
   1a4e4:	add	r5, r5, r3
   1a4e8:	bl	1694 <fseek@plt>
   1a4ec:	b	1a470 <ReadDataSlabN+0x31f8>
   1a4f0:	ldr	r3, [sp, #4]
   1a4f4:	mov	r2, #1
   1a4f8:	mul	r1, r3, r1
   1a4fc:	ldr	r3, [sp, #16]
   1a500:	ldr	r0, [r3]
   1a504:	bl	1694 <fseek@plt>
   1a508:	ldr	r3, [sp, #200]	; 0xc8
   1a50c:	ldr	r3, [r3]
   1a510:	add	r5, r5, r3
   1a514:	b	1a334 <ReadDataSlabN+0x30bc>
   1a518:	cmp	r3, #0
   1a51c:	ble	173cc <ReadDataSlabN+0x154>
   1a520:	str	fp, [sp, #16]
   1a524:	mov	r3, #0
   1a528:	ldr	fp, [sp, #192]	; 0xc0
   1a52c:	str	r3, [sp, #28]
   1a530:	ldr	r3, [sp, #200]	; 0xc8
   1a534:	ldr	r1, [r3]
   1a538:	cmp	r1, #0
   1a53c:	bne	1a6a0 <ReadDataSlabN+0x3428>
   1a540:	ldrd	r2, [sp, #8]
   1a544:	ldr	r4, [sp, #16]
   1a548:	ldr	r1, [sp, #28]
   1a54c:	mov	r0, r4
   1a550:	add	r1, r3, r1, lsl #3
   1a554:	ldr	r3, [sp, #208]	; 0xd0
   1a558:	ldr	r3, [r3]
   1a55c:	bl	126c8 <ReadDoubleData>
   1a560:	ldr	r3, [sp, #196]	; 0xc4
   1a564:	mov	r2, #1
   1a568:	ldr	r0, [sp, #200]	; 0xc8
   1a56c:	ldr	r1, [sp, #208]	; 0xd0
   1a570:	ldr	r3, [r3]
   1a574:	ldr	ip, [r0]
   1a578:	ldr	r1, [r1]
   1a57c:	ldr	r0, [r4]
   1a580:	sub	r1, r3, r1
   1a584:	sub	r3, r3, ip
   1a588:	add	r5, r3, r5
   1a58c:	ldr	r3, [sp, #4]
   1a590:	sub	r1, r1, ip
   1a594:	mul	r1, r3, r1
   1a598:	bl	1694 <fseek@plt>
   1a59c:	cmp	fp, #1
   1a5a0:	ble	173ac <ReadDataSlabN+0x134>
   1a5a4:	ldr	r3, [sp, #76]	; 0x4c
   1a5a8:	ldr	r2, [sp, #208]	; 0xd0
   1a5ac:	add	r3, r3, #1
   1a5b0:	ldr	r1, [r2, #4]
   1a5b4:	str	r3, [sp, #76]	; 0x4c
   1a5b8:	sdiv	r2, r3, r1
   1a5bc:	mls	r3, r1, r2, r3
   1a5c0:	cmp	r3, #0
   1a5c4:	bne	17380 <ReadDataSlabN+0x108>
   1a5c8:	add	r6, sp, #76	; 0x4c
   1a5cc:	add	r8, sp, #116	; 0x74
   1a5d0:	ldr	r9, [sp, #200]	; 0xc8
   1a5d4:	mov	r7, #1
   1a5d8:	ldr	r3, [sp, #208]	; 0xd0
   1a5dc:	add	sl, r3, #4
   1a5e0:	b	1a618 <ReadDataSlabN+0x33a0>
   1a5e4:	cmp	r1, #0
   1a5e8:	bne	1a674 <ReadDataSlabN+0x33fc>
   1a5ec:	add	r7, r7, #1
   1a5f0:	cmp	fp, r7
   1a5f4:	beq	173ac <ReadDataSlabN+0x134>
   1a5f8:	ldr	r2, [r6]
   1a5fc:	ldr	r0, [sl, #4]!
   1a600:	add	r2, r2, #1
   1a604:	sdiv	r1, r2, r0
   1a608:	str	r2, [r6]
   1a60c:	mls	r2, r0, r1, r2
   1a610:	cmp	r2, #0
   1a614:	bne	17384 <ReadDataSlabN+0x10c>
   1a618:	ldr	r4, [r8], #4
   1a61c:	mov	r3, #0
   1a620:	str	r3, [r6], #4
   1a624:	ldr	r1, [r9, #4]!
   1a628:	sdiv	r2, r5, r4
   1a62c:	mls	r2, r4, r2, r5
   1a630:	cmp	r2, r3
   1a634:	beq	1a5e4 <ReadDataSlabN+0x336c>
   1a638:	ldr	r3, [r8, #-8]
   1a63c:	sub	r4, r4, r2
   1a640:	mov	r2, #1
   1a644:	ldr	r0, [sp, #16]
   1a648:	mla	r1, r1, r3, r4
   1a64c:	str	r3, [sp, #20]
   1a650:	ldr	r3, [sp, #4]
   1a654:	ldr	r0, [r0]
   1a658:	mul	r1, r3, r1
   1a65c:	bl	1694 <fseek@plt>
   1a660:	ldr	r2, [r9]
   1a664:	ldr	r3, [sp, #20]
   1a668:	mla	r4, r2, r3, r4
   1a66c:	add	r5, r5, r4
   1a670:	b	1a5ec <ReadDataSlabN+0x3374>
   1a674:	ldr	r3, [sp, #16]
   1a678:	mov	r2, #1
   1a67c:	ldr	r4, [r8, #-8]
   1a680:	ldr	r0, [r3]
   1a684:	ldr	r3, [sp, #4]
   1a688:	mul	r1, r1, r4
   1a68c:	mul	r1, r3, r1
   1a690:	bl	1694 <fseek@plt>
   1a694:	ldr	r2, [r9]
   1a698:	mla	r5, r2, r4, r5
   1a69c:	b	1a5ec <ReadDataSlabN+0x3374>
   1a6a0:	ldr	r3, [sp, #4]
   1a6a4:	mov	r2, #1
   1a6a8:	mul	r1, r3, r1
   1a6ac:	ldr	r3, [sp, #16]
   1a6b0:	ldr	r0, [r3]
   1a6b4:	bl	1694 <fseek@plt>
   1a6b8:	ldr	r3, [sp, #200]	; 0xc8
   1a6bc:	ldr	r3, [r3]
   1a6c0:	add	r5, r5, r3
   1a6c4:	b	1a540 <ReadDataSlabN+0x32c8>
   1a6c8:	cmp	r3, #0
   1a6cc:	ble	173cc <ReadDataSlabN+0x154>
   1a6d0:	str	fp, [sp, #16]
   1a6d4:	mov	r3, #0
   1a6d8:	ldr	fp, [sp, #192]	; 0xc0
   1a6dc:	str	r3, [sp, #28]
   1a6e0:	ldr	r3, [sp, #200]	; 0xc8
   1a6e4:	ldr	r1, [r3]
   1a6e8:	cmp	r1, #0
   1a6ec:	bne	1a8ac <ReadDataSlabN+0x3634>
   1a6f0:	ldrd	r2, [sp, #8]
   1a6f4:	ldr	r4, [sp, #16]
   1a6f8:	ldr	r1, [sp, #28]
   1a6fc:	mov	r0, r4
   1a700:	add	r1, r3, r1, lsl #3
   1a704:	ldr	r3, [sp, #208]	; 0xd0
   1a708:	ldr	r3, [r3]
   1a70c:	bl	142b0 <ReadInt64Data>
   1a710:	ldr	r3, [sp, #196]	; 0xc4
   1a714:	mov	r2, #1
   1a718:	ldr	r0, [sp, #200]	; 0xc8
   1a71c:	ldr	r1, [sp, #208]	; 0xd0
   1a720:	ldr	r3, [r3]
   1a724:	ldr	ip, [r0]
   1a728:	ldr	r1, [r1]
   1a72c:	ldr	r0, [r4]
   1a730:	sub	r1, r3, r1
   1a734:	sub	r3, r3, ip
   1a738:	add	r5, r3, r5
   1a73c:	ldr	r3, [sp, #4]
   1a740:	sub	r1, r1, ip
   1a744:	mul	r1, r3, r1
   1a748:	bl	1694 <fseek@plt>
   1a74c:	cmp	fp, #1
   1a750:	ble	1a82c <ReadDataSlabN+0x35b4>
   1a754:	ldr	r3, [sp, #76]	; 0x4c
   1a758:	ldr	r2, [sp, #208]	; 0xd0
   1a75c:	add	r3, r3, #1
   1a760:	ldr	r1, [r2, #4]
   1a764:	str	r3, [sp, #76]	; 0x4c
   1a768:	sdiv	r2, r3, r1
   1a76c:	mls	r3, r1, r2, r3
   1a770:	cmp	r3, #0
   1a774:	bne	1a87c <ReadDataSlabN+0x3604>
   1a778:	add	r6, sp, #76	; 0x4c
   1a77c:	add	r8, sp, #116	; 0x74
   1a780:	ldr	r9, [sp, #200]	; 0xc8
   1a784:	mov	r7, #1
   1a788:	ldr	r3, [sp, #208]	; 0xd0
   1a78c:	add	sl, r3, #4
   1a790:	b	1a7c8 <ReadDataSlabN+0x3550>
   1a794:	cmp	r1, #0
   1a798:	bne	1a850 <ReadDataSlabN+0x35d8>
   1a79c:	add	r7, r7, #1
   1a7a0:	cmp	fp, r7
   1a7a4:	beq	1a82c <ReadDataSlabN+0x35b4>
   1a7a8:	ldr	r2, [r6]
   1a7ac:	ldr	r0, [sl, #4]!
   1a7b0:	add	r2, r2, #1
   1a7b4:	sdiv	r1, r2, r0
   1a7b8:	str	r2, [r6]
   1a7bc:	mls	r2, r0, r1, r2
   1a7c0:	cmp	r2, #0
   1a7c4:	bne	1a880 <ReadDataSlabN+0x3608>
   1a7c8:	ldr	r4, [r8], #4
   1a7cc:	mov	r3, #0
   1a7d0:	str	r3, [r6], #4
   1a7d4:	ldr	r1, [r9, #4]!
   1a7d8:	sdiv	r2, r5, r4
   1a7dc:	mls	r2, r4, r2, r5
   1a7e0:	cmp	r2, r3
   1a7e4:	beq	1a794 <ReadDataSlabN+0x351c>
   1a7e8:	ldr	r3, [r8, #-8]
   1a7ec:	sub	r4, r4, r2
   1a7f0:	mov	r2, #1
   1a7f4:	add	r7, r7, #1
   1a7f8:	ldr	r0, [sp, #16]
   1a7fc:	mla	r1, r1, r3, r4
   1a800:	str	r3, [sp, #20]
   1a804:	ldr	r3, [sp, #4]
   1a808:	ldr	r0, [r0]
   1a80c:	mul	r1, r3, r1
   1a810:	bl	1694 <fseek@plt>
   1a814:	ldr	r2, [r9]
   1a818:	cmp	fp, r7
   1a81c:	ldr	r3, [sp, #20]
   1a820:	mla	r4, r2, r3, r4
   1a824:	add	r5, r5, r4
   1a828:	bne	1a7a8 <ReadDataSlabN+0x3530>
   1a82c:	ldr	r2, [sp, #28]
   1a830:	ldr	r3, [sp, #208]	; 0xd0
   1a834:	ldr	r3, [r3]
   1a838:	add	r3, r2, r3
   1a83c:	ldr	r2, [sp, #24]
   1a840:	str	r3, [sp, #28]
   1a844:	cmp	r3, r2
   1a848:	blt	1a6e0 <ReadDataSlabN+0x3468>
   1a84c:	b	173cc <ReadDataSlabN+0x154>
   1a850:	ldr	r3, [sp, #16]
   1a854:	mov	r2, #1
   1a858:	ldr	r4, [r8, #-8]
   1a85c:	ldr	r0, [r3]
   1a860:	ldr	r3, [sp, #4]
   1a864:	mul	r1, r1, r4
   1a868:	mul	r1, r3, r1
   1a86c:	bl	1694 <fseek@plt>
   1a870:	ldr	r2, [r9]
   1a874:	mla	r5, r2, r4, r5
   1a878:	b	1a79c <ReadDataSlabN+0x3524>
   1a87c:	mov	r7, #1
   1a880:	add	r3, sp, #152	; 0x98
   1a884:	ldr	r1, [sp, #4]
   1a888:	mov	r2, #1
   1a88c:	add	r7, r3, r7, lsl #2
   1a890:	ldr	r3, [sp, #16]
   1a894:	ldr	r0, [r3]
   1a898:	ldr	r3, [r7, #-120]	; 0xffffff88
   1a89c:	mul	r1, r1, r3
   1a8a0:	add	r5, r5, r3
   1a8a4:	bl	1694 <fseek@plt>
   1a8a8:	b	1a82c <ReadDataSlabN+0x35b4>
   1a8ac:	ldr	r3, [sp, #4]
   1a8b0:	mov	r2, #1
   1a8b4:	mul	r1, r3, r1
   1a8b8:	ldr	r3, [sp, #16]
   1a8bc:	ldr	r0, [r3]
   1a8c0:	bl	1694 <fseek@plt>
   1a8c4:	ldr	r3, [sp, #200]	; 0xc8
   1a8c8:	ldr	r3, [r3]
   1a8cc:	add	r5, r5, r3
   1a8d0:	b	1a6f0 <ReadDataSlabN+0x3478>
   1a8d4:	cmp	r3, #0
   1a8d8:	ble	173cc <ReadDataSlabN+0x154>
   1a8dc:	str	fp, [sp, #16]
   1a8e0:	mov	r3, #0
   1a8e4:	ldr	fp, [sp, #192]	; 0xc0
   1a8e8:	str	r3, [sp, #28]
   1a8ec:	ldr	r3, [sp, #200]	; 0xc8
   1a8f0:	ldr	r1, [r3]
   1a8f4:	cmp	r1, #0
   1a8f8:	bne	1aab8 <ReadDataSlabN+0x3840>
   1a8fc:	ldrd	r2, [sp, #8]
   1a900:	ldr	r4, [sp, #16]
   1a904:	ldr	r1, [sp, #28]
   1a908:	mov	r0, r4
   1a90c:	add	r1, r3, r1, lsl #3
   1a910:	ldr	r3, [sp, #208]	; 0xd0
   1a914:	ldr	r3, [r3]
   1a918:	bl	14850 <ReadUInt64Data>
   1a91c:	ldr	r3, [sp, #196]	; 0xc4
   1a920:	mov	r2, #1
   1a924:	ldr	r0, [sp, #200]	; 0xc8
   1a928:	ldr	r1, [sp, #208]	; 0xd0
   1a92c:	ldr	r3, [r3]
   1a930:	ldr	ip, [r0]
   1a934:	ldr	r1, [r1]
   1a938:	ldr	r0, [r4]
   1a93c:	sub	r1, r3, r1
   1a940:	sub	r3, r3, ip
   1a944:	add	r5, r3, r5
   1a948:	ldr	r3, [sp, #4]
   1a94c:	sub	r1, r1, ip
   1a950:	mul	r1, r3, r1
   1a954:	bl	1694 <fseek@plt>
   1a958:	cmp	fp, #1
   1a95c:	ble	1aa38 <ReadDataSlabN+0x37c0>
   1a960:	ldr	r3, [sp, #76]	; 0x4c
   1a964:	ldr	r2, [sp, #208]	; 0xd0
   1a968:	add	r3, r3, #1
   1a96c:	ldr	r1, [r2, #4]
   1a970:	str	r3, [sp, #76]	; 0x4c
   1a974:	sdiv	r2, r3, r1
   1a978:	mls	r3, r1, r2, r3
   1a97c:	cmp	r3, #0
   1a980:	bne	1aa88 <ReadDataSlabN+0x3810>
   1a984:	add	r6, sp, #76	; 0x4c
   1a988:	add	r8, sp, #116	; 0x74
   1a98c:	ldr	r9, [sp, #200]	; 0xc8
   1a990:	mov	r7, #1
   1a994:	ldr	r3, [sp, #208]	; 0xd0
   1a998:	add	sl, r3, #4
   1a99c:	b	1a9d4 <ReadDataSlabN+0x375c>
   1a9a0:	cmp	r1, #0
   1a9a4:	bne	1aa5c <ReadDataSlabN+0x37e4>
   1a9a8:	add	r7, r7, #1
   1a9ac:	cmp	fp, r7
   1a9b0:	beq	1aa38 <ReadDataSlabN+0x37c0>
   1a9b4:	ldr	r2, [r6]
   1a9b8:	ldr	r0, [sl, #4]!
   1a9bc:	add	r2, r2, #1
   1a9c0:	sdiv	r1, r2, r0
   1a9c4:	str	r2, [r6]
   1a9c8:	mls	r2, r0, r1, r2
   1a9cc:	cmp	r2, #0
   1a9d0:	bne	1aa8c <ReadDataSlabN+0x3814>
   1a9d4:	ldr	r4, [r8], #4
   1a9d8:	mov	r3, #0
   1a9dc:	str	r3, [r6], #4
   1a9e0:	ldr	r1, [r9, #4]!
   1a9e4:	sdiv	r2, r5, r4
   1a9e8:	mls	r2, r4, r2, r5
   1a9ec:	cmp	r2, r3
   1a9f0:	beq	1a9a0 <ReadDataSlabN+0x3728>
   1a9f4:	ldr	r3, [r8, #-8]
   1a9f8:	sub	r4, r4, r2
   1a9fc:	mov	r2, #1
   1aa00:	add	r7, r7, #1
   1aa04:	ldr	r0, [sp, #16]
   1aa08:	mla	r1, r1, r3, r4
   1aa0c:	str	r3, [sp, #20]
   1aa10:	ldr	r3, [sp, #4]
   1aa14:	ldr	r0, [r0]
   1aa18:	mul	r1, r3, r1
   1aa1c:	bl	1694 <fseek@plt>
   1aa20:	ldr	r2, [r9]
   1aa24:	cmp	fp, r7
   1aa28:	ldr	r3, [sp, #20]
   1aa2c:	mla	r4, r2, r3, r4
   1aa30:	add	r5, r5, r4
   1aa34:	bne	1a9b4 <ReadDataSlabN+0x373c>
   1aa38:	ldr	r2, [sp, #28]
   1aa3c:	ldr	r3, [sp, #208]	; 0xd0
   1aa40:	ldr	r3, [r3]
   1aa44:	add	r3, r2, r3
   1aa48:	ldr	r2, [sp, #24]
   1aa4c:	str	r3, [sp, #28]
   1aa50:	cmp	r3, r2
   1aa54:	blt	1a8ec <ReadDataSlabN+0x3674>
   1aa58:	b	173cc <ReadDataSlabN+0x154>
   1aa5c:	ldr	r3, [sp, #16]
   1aa60:	mov	r2, #1
   1aa64:	ldr	r4, [r8, #-8]
   1aa68:	ldr	r0, [r3]
   1aa6c:	ldr	r3, [sp, #4]
   1aa70:	mul	r1, r1, r4
   1aa74:	mul	r1, r3, r1
   1aa78:	bl	1694 <fseek@plt>
   1aa7c:	ldr	r2, [r9]
   1aa80:	mla	r5, r2, r4, r5
   1aa84:	b	1a9a8 <ReadDataSlabN+0x3730>
   1aa88:	mov	r7, #1
   1aa8c:	add	r3, sp, #152	; 0x98
   1aa90:	ldr	r1, [sp, #4]
   1aa94:	mov	r2, #1
   1aa98:	add	r7, r3, r7, lsl #2
   1aa9c:	ldr	r3, [sp, #16]
   1aaa0:	ldr	r0, [r3]
   1aaa4:	ldr	r3, [r7, #-120]	; 0xffffff88
   1aaa8:	mul	r1, r1, r3
   1aaac:	add	r5, r5, r3
   1aab0:	bl	1694 <fseek@plt>
   1aab4:	b	1aa38 <ReadDataSlabN+0x37c0>
   1aab8:	ldr	r3, [sp, #4]
   1aabc:	mov	r2, #1
   1aac0:	mul	r1, r3, r1
   1aac4:	ldr	r3, [sp, #16]
   1aac8:	ldr	r0, [r3]
   1aacc:	bl	1694 <fseek@plt>
   1aad0:	ldr	r3, [sp, #200]	; 0xc8
   1aad4:	ldr	r3, [r3]
   1aad8:	add	r5, r5, r3
   1aadc:	b	1a8fc <ReadDataSlabN+0x3684>
   1aae0:	mov	r8, #1
   1aae4:	b	17f18 <ReadDataSlabN+0xca0>
   1aae8:	mov	r8, #1
   1aaec:	b	193b0 <ReadDataSlabN+0x2138>
   1aaf0:	mov	r8, #1
   1aaf4:	b	19644 <ReadDataSlabN+0x23cc>
   1aaf8:	mov	r8, #1
   1aafc:	b	18968 <ReadDataSlabN+0x16f0>
   1ab00:	mov	r8, #1
   1ab04:	b	18bfc <ReadDataSlabN+0x1984>
   1ab08:	mov	r8, #1
   1ab0c:	b	18e90 <ReadDataSlabN+0x1c18>
   1ab10:	mov	r8, #1
   1ab14:	b	19120 <ReadDataSlabN+0x1ea8>
   1ab18:	mov	r8, #1
   1ab1c:	b	181ac <ReadDataSlabN+0xf34>
   1ab20:	mov	r8, #1
   1ab24:	b	18440 <ReadDataSlabN+0x11c8>
   1ab28:	mov	r8, #1
   1ab2c:	b	186d4 <ReadDataSlabN+0x145c>
   1ab30:	mov	r1, #0
   1ab34:	mov	r5, r1
   1ab38:	b	17f50 <ReadDataSlabN+0xcd8>
   1ab3c:	mov	r1, #0
   1ab40:	mov	r5, r1
   1ab44:	b	193e8 <ReadDataSlabN+0x2170>
   1ab48:	mov	r1, #0
   1ab4c:	mov	r5, r1
   1ab50:	b	189a0 <ReadDataSlabN+0x1728>
   1ab54:	mov	r1, #0
   1ab58:	mov	r5, r1
   1ab5c:	b	18ec8 <ReadDataSlabN+0x1c50>
   1ab60:	mov	r1, #0
   1ab64:	mov	r5, r1
   1ab68:	b	18478 <ReadDataSlabN+0x1200>
   1ab6c:	mov	r1, #0
   1ab70:	mov	r5, r1
   1ab74:	b	19158 <ReadDataSlabN+0x1ee0>
   1ab78:	mov	r1, #0
   1ab7c:	mov	r5, r1
   1ab80:	b	1870c <ReadDataSlabN+0x1494>
   1ab84:	mov	r1, #0
   1ab88:	mov	r5, r1
   1ab8c:	b	18c34 <ReadDataSlabN+0x19bc>
   1ab90:	mov	r1, #0
   1ab94:	mov	r5, r1
   1ab98:	b	181e4 <ReadDataSlabN+0xf6c>
   1ab9c:	mov	r1, #0
   1aba0:	mov	r5, r1
   1aba4:	b	17cbc <ReadDataSlabN+0xa44>

0001aba8 <ReadCompressedDataSlabN>:
   1aba8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1abac:	mov	r4, #0
   1abb0:	mov	r5, #0
   1abb4:	strd	r6, [sp, #8]
   1abb8:	mov	r7, r3
   1abbc:	strd	r8, [sp, #16]
   1abc0:	mov	r9, r1
   1abc4:	mov	r1, #0
   1abc8:	strd	sl, [sp, #24]
   1abcc:	mov	sl, r0
   1abd0:	str	lr, [sp, #32]
   1abd4:	sub	sp, sp, #212	; 0xd4
   1abd8:	add	r6, sp, #112	; 0x70
   1abdc:	add	fp, sp, #152	; 0x98
   1abe0:	ldr	r8, [sp, #264]	; 0x108
   1abe4:	mov	r0, fp
   1abe8:	str	r2, [sp, #8]
   1abec:	mov	r2, #56	; 0x38
   1abf0:	strd	r4, [r6, #8]
   1abf4:	strd	r4, [r6, #16]
   1abf8:	strd	r4, [r6, #24]
   1abfc:	strd	r4, [r6, #32]
   1ac00:	strd	r4, [sp, #32]
   1ac04:	strd	r4, [sp, #40]	; 0x28
   1ac08:	strd	r4, [sp, #48]	; 0x30
   1ac0c:	strd	r4, [sp, #56]	; 0x38
   1ac10:	strd	r4, [sp, #64]	; 0x40
   1ac14:	strd	r4, [sp, #72]	; 0x48
   1ac18:	strd	r4, [sp, #80]	; 0x50
   1ac1c:	strd	r4, [sp, #88]	; 0x58
   1ac20:	strd	r4, [sp, #96]	; 0x60
   1ac24:	strd	r4, [sp, #104]	; 0x68
   1ac28:	strd	r4, [sp, #112]	; 0x70
   1ac2c:	bl	15f8 <memset@plt>
   1ac30:	ldr	r3, [sp, #8]
   1ac34:	cmp	r3, #0
   1ac38:	cmpne	sl, #0
   1ac3c:	beq	1ac80 <ReadCompressedDataSlabN+0xd8>
   1ac40:	ldr	r3, [sl]
   1ac44:	cmp	r3, #0
   1ac48:	beq	1ac80 <ReadCompressedDataSlabN+0xd8>
   1ac4c:	ldr	r2, [sp, #260]	; 0x104
   1ac50:	clz	r3, r8
   1ac54:	lsr	r3, r3, #5
   1ac58:	cmp	r2, #0
   1ac5c:	ldr	r2, [sp, #268]	; 0x10c
   1ac60:	moveq	r3, #1
   1ac64:	cmp	r2, #0
   1ac68:	ldr	r2, [sp, #252]	; 0xfc
   1ac6c:	moveq	r3, #1
   1ac70:	cmp	r2, #10
   1ac74:	orrgt	r3, r3, #1
   1ac78:	cmp	r3, #0
   1ac7c:	beq	1aca0 <ReadCompressedDataSlabN+0xf8>
   1ac80:	mov	r0, #1
   1ac84:	add	sp, sp, #212	; 0xd4
   1ac88:	ldrd	r4, [sp]
   1ac8c:	ldrd	r6, [sp, #8]
   1ac90:	ldrd	r8, [sp, #16]
   1ac94:	ldrd	sl, [sp, #24]
   1ac98:	add	sp, sp, #32
   1ac9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aca0:	mov	r1, r9
   1aca4:	mov	r0, fp
   1aca8:	sub	r7, r7, #6
   1acac:	bl	15bc <inflateCopy@plt>
   1acb0:	cmp	r7, #9
   1acb4:	addls	pc, pc, r7, lsl #2
   1acb8:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1acbc:	b	1b54c <ReadCompressedDataSlabN+0x9a4>
   1acc0:	b	1b1bc <ReadCompressedDataSlabN+0x614>
   1acc4:	b	1b384 <ReadCompressedDataSlabN+0x7dc>
   1acc8:	b	1aff4 <ReadCompressedDataSlabN+0x44c>
   1accc:	b	1b468 <ReadCompressedDataSlabN+0x8c0>
   1acd0:	b	1b0d8 <ReadCompressedDataSlabN+0x530>
   1acd4:	b	1b2a0 <ReadCompressedDataSlabN+0x6f8>
   1acd8:	b	1af10 <ReadCompressedDataSlabN+0x368>
   1acdc:	b	1ae2c <ReadCompressedDataSlabN+0x284>
   1ace0:	b	1ad48 <ReadCompressedDataSlabN+0x1a0>
   1ace4:	mov	r7, #1
   1ace8:	add	r3, sp, #208	; 0xd0
   1acec:	add	r7, r3, r7, lsl #2
   1acf0:	ldr	ip, [r7, #-176]	; 0xffffff50
   1acf4:	cmp	ip, #0
   1acf8:	beq	1ad14 <ReadCompressedDataSlabN+0x16c>
   1acfc:	mov	r3, ip
   1ad00:	ldr	r1, [sp, #12]
   1ad04:	add	r4, r4, ip
   1ad08:	ldr	r0, [sp, #16]
   1ad0c:	ldr	r2, [sp, #248]	; 0xf8
   1ad10:	bl	235c <InflateSkipData>
   1ad14:	ldr	r2, [sp, #28]
   1ad18:	ldr	r3, [sp, #268]	; 0x10c
   1ad1c:	ldr	r3, [r3]
   1ad20:	add	r3, r2, r3
   1ad24:	ldr	r2, [sp, #20]
   1ad28:	str	r3, [sp, #28]
   1ad2c:	cmp	r3, r2
   1ad30:	blt	1d19c <ReadCompressedDataSlabN+0x25f4>
   1ad34:	ldr	fp, [sp, #12]
   1ad38:	mov	r0, fp
   1ad3c:	bl	15b0 <inflateEnd@plt>
   1ad40:	mov	r0, #0
   1ad44:	b	1ac84 <ReadCompressedDataSlabN+0xdc>
   1ad48:	ldr	r2, [sp, #252]	; 0xfc
   1ad4c:	ldr	r3, [r8]
   1ad50:	cmp	r2, #1
   1ad54:	ldr	r2, [sp, #256]	; 0x100
   1ad58:	sub	r3, r3, #1
   1ad5c:	str	r3, [sp, #32]
   1ad60:	ldr	r1, [r2]
   1ad64:	ldr	r2, [sp, #268]	; 0x10c
   1ad68:	str	r1, [sp, #112]	; 0x70
   1ad6c:	ldr	r2, [r2]
   1ad70:	str	r2, [sp, #20]
   1ad74:	ble	1e5f4 <ReadCompressedDataSlabN+0x3a4c>
   1ad78:	ldr	r3, [sp, #252]	; 0xfc
   1ad7c:	add	r7, r8, #4
   1ad80:	add	lr, sp, #36	; 0x24
   1ad84:	mov	r2, r1
   1ad88:	mov	r4, #0
   1ad8c:	str	sl, [sp, #16]
   1ad90:	ldr	r0, [sp, #260]	; 0x104
   1ad94:	str	fp, [sp, #24]
   1ad98:	ldr	r9, [sp, #268]	; 0x10c
   1ad9c:	add	r3, r8, r3, lsl #2
   1ada0:	mov	sl, r0
   1ada4:	str	r3, [sp, #12]
   1ada8:	ldr	r3, [sp, #256]	; 0x100
   1adac:	str	r8, [sp, #264]	; 0x108
   1adb0:	mov	r5, r3
   1adb4:	ldr	r0, [r7], #4
   1adb8:	mov	fp, r6
   1adbc:	add	r8, r3, #4
   1adc0:	str	r1, [r6, #4]
   1adc4:	sub	r0, r0, #1
   1adc8:	str	r0, [lr], #4
   1adcc:	ldr	ip, [r3, #4]
   1add0:	b	1addc <ReadCompressedDataSlabN+0x234>
   1add4:	mov	ip, r2
   1add8:	ldr	r2, [r3, #-4]!
   1addc:	cmp	r5, r3
   1ade0:	mul	r0, r2, r0
   1ade4:	mul	r1, ip, r1
   1ade8:	bne	1add4 <ReadCompressedDataSlabN+0x22c>
   1adec:	str	r1, [r6, #4]!
   1adf0:	ldr	r2, [fp]
   1adf4:	str	r0, [lr, #-4]
   1adf8:	ldr	r1, [sl, #4]!
   1adfc:	ldr	r3, [sp, #12]
   1ae00:	mla	r4, r1, r2, r4
   1ae04:	ldr	r2, [sp, #20]
   1ae08:	cmp	r3, r7
   1ae0c:	ldr	r3, [r9, #4]!
   1ae10:	mul	r3, r3, r2
   1ae14:	str	r3, [sp, #20]
   1ae18:	beq	1b630 <ReadCompressedDataSlabN+0xa88>
   1ae1c:	ldr	r1, [r8]
   1ae20:	mov	r3, r8
   1ae24:	mov	r2, r1
   1ae28:	b	1adb4 <ReadCompressedDataSlabN+0x20c>
   1ae2c:	ldr	r2, [sp, #252]	; 0xfc
   1ae30:	ldr	r3, [r8]
   1ae34:	cmp	r2, #1
   1ae38:	ldr	r2, [sp, #256]	; 0x100
   1ae3c:	sub	r3, r3, #1
   1ae40:	str	r3, [sp, #32]
   1ae44:	ldr	r1, [r2]
   1ae48:	ldr	r2, [sp, #268]	; 0x10c
   1ae4c:	str	r1, [sp, #112]	; 0x70
   1ae50:	ldr	r2, [r2]
   1ae54:	str	r2, [sp, #20]
   1ae58:	ble	1e61c <ReadCompressedDataSlabN+0x3a74>
   1ae5c:	ldr	r3, [sp, #252]	; 0xfc
   1ae60:	add	r7, r8, #4
   1ae64:	add	lr, sp, #36	; 0x24
   1ae68:	mov	r2, r1
   1ae6c:	mov	r4, #0
   1ae70:	str	sl, [sp, #16]
   1ae74:	ldr	r0, [sp, #260]	; 0x104
   1ae78:	str	fp, [sp, #24]
   1ae7c:	ldr	r9, [sp, #268]	; 0x10c
   1ae80:	add	r3, r8, r3, lsl #2
   1ae84:	mov	sl, r0
   1ae88:	str	r3, [sp, #12]
   1ae8c:	ldr	r3, [sp, #256]	; 0x100
   1ae90:	str	r8, [sp, #264]	; 0x108
   1ae94:	mov	r5, r3
   1ae98:	ldr	r0, [r7], #4
   1ae9c:	mov	fp, r6
   1aea0:	add	r8, r3, #4
   1aea4:	str	r1, [r6, #4]
   1aea8:	sub	r0, r0, #1
   1aeac:	str	r0, [lr], #4
   1aeb0:	ldr	ip, [r3, #4]
   1aeb4:	b	1aec0 <ReadCompressedDataSlabN+0x318>
   1aeb8:	mov	ip, r2
   1aebc:	ldr	r2, [r3, #-4]!
   1aec0:	cmp	r5, r3
   1aec4:	mul	r0, r2, r0
   1aec8:	mul	r1, ip, r1
   1aecc:	bne	1aeb8 <ReadCompressedDataSlabN+0x310>
   1aed0:	str	r1, [r6, #4]!
   1aed4:	ldr	r2, [fp]
   1aed8:	str	r0, [lr, #-4]
   1aedc:	ldr	r1, [sl, #4]!
   1aee0:	ldr	r3, [sp, #12]
   1aee4:	mla	r4, r1, r2, r4
   1aee8:	ldr	r2, [sp, #20]
   1aeec:	cmp	r3, r7
   1aef0:	ldr	r3, [r9, #4]!
   1aef4:	mul	r3, r3, r2
   1aef8:	str	r3, [sp, #20]
   1aefc:	beq	1b8ec <ReadCompressedDataSlabN+0xd44>
   1af00:	ldr	r1, [r8]
   1af04:	mov	r3, r8
   1af08:	mov	r2, r1
   1af0c:	b	1ae98 <ReadCompressedDataSlabN+0x2f0>
   1af10:	ldr	r2, [sp, #252]	; 0xfc
   1af14:	ldr	r3, [r8]
   1af18:	cmp	r2, #1
   1af1c:	ldr	r2, [sp, #256]	; 0x100
   1af20:	sub	r3, r3, #1
   1af24:	str	r3, [sp, #32]
   1af28:	ldr	r1, [r2]
   1af2c:	ldr	r2, [sp, #268]	; 0x10c
   1af30:	str	r1, [sp, #112]	; 0x70
   1af34:	ldr	r2, [r2]
   1af38:	str	r2, [sp, #20]
   1af3c:	ble	1e614 <ReadCompressedDataSlabN+0x3a6c>
   1af40:	ldr	r3, [sp, #252]	; 0xfc
   1af44:	add	r7, r8, #4
   1af48:	add	lr, sp, #36	; 0x24
   1af4c:	mov	r2, r1
   1af50:	mov	r4, #0
   1af54:	str	sl, [sp, #16]
   1af58:	ldr	r0, [sp, #260]	; 0x104
   1af5c:	str	fp, [sp, #24]
   1af60:	ldr	r9, [sp, #268]	; 0x10c
   1af64:	add	r3, r8, r3, lsl #2
   1af68:	mov	sl, r0
   1af6c:	str	r3, [sp, #12]
   1af70:	ldr	r3, [sp, #256]	; 0x100
   1af74:	str	r8, [sp, #264]	; 0x108
   1af78:	mov	r5, r3
   1af7c:	ldr	r0, [r7], #4
   1af80:	mov	fp, r6
   1af84:	add	r8, r3, #4
   1af88:	str	r1, [r6, #4]
   1af8c:	sub	r0, r0, #1
   1af90:	str	r0, [lr], #4
   1af94:	ldr	ip, [r3, #4]
   1af98:	b	1afa4 <ReadCompressedDataSlabN+0x3fc>
   1af9c:	mov	ip, r2
   1afa0:	ldr	r2, [r3, #-4]!
   1afa4:	cmp	r5, r3
   1afa8:	mul	r0, r2, r0
   1afac:	mul	r1, ip, r1
   1afb0:	bne	1af9c <ReadCompressedDataSlabN+0x3f4>
   1afb4:	str	r1, [r6, #4]!
   1afb8:	ldr	r2, [fp]
   1afbc:	str	r0, [lr, #-4]
   1afc0:	ldr	r1, [sl, #4]!
   1afc4:	ldr	r3, [sp, #12]
   1afc8:	mla	r4, r1, r2, r4
   1afcc:	ldr	r2, [sp, #20]
   1afd0:	cmp	r3, r7
   1afd4:	ldr	r3, [r9, #4]!
   1afd8:	mul	r3, r3, r2
   1afdc:	str	r3, [sp, #20]
   1afe0:	beq	1c3d4 <ReadCompressedDataSlabN+0x182c>
   1afe4:	ldr	r1, [r8]
   1afe8:	mov	r3, r8
   1afec:	mov	r2, r1
   1aff0:	b	1af7c <ReadCompressedDataSlabN+0x3d4>
   1aff4:	ldr	r2, [sp, #252]	; 0xfc
   1aff8:	ldr	r3, [r8]
   1affc:	cmp	r2, #1
   1b000:	ldr	r2, [sp, #256]	; 0x100
   1b004:	sub	r3, r3, #1
   1b008:	str	r3, [sp, #32]
   1b00c:	ldr	r1, [r2]
   1b010:	ldr	r2, [sp, #268]	; 0x10c
   1b014:	str	r1, [sp, #112]	; 0x70
   1b018:	ldr	r2, [r2]
   1b01c:	str	r2, [sp, #20]
   1b020:	ble	1e63c <ReadCompressedDataSlabN+0x3a94>
   1b024:	ldr	r3, [sp, #252]	; 0xfc
   1b028:	add	r7, r8, #4
   1b02c:	add	lr, sp, #36	; 0x24
   1b030:	mov	r2, r1
   1b034:	mov	r4, #0
   1b038:	str	sl, [sp, #16]
   1b03c:	ldr	r0, [sp, #260]	; 0x104
   1b040:	str	fp, [sp, #24]
   1b044:	ldr	r9, [sp, #268]	; 0x10c
   1b048:	add	r3, r8, r3, lsl #2
   1b04c:	mov	sl, r0
   1b050:	str	r3, [sp, #12]
   1b054:	ldr	r3, [sp, #256]	; 0x100
   1b058:	str	r8, [sp, #264]	; 0x108
   1b05c:	mov	r5, r3
   1b060:	ldr	r0, [r7], #4
   1b064:	mov	fp, r6
   1b068:	add	r8, r3, #4
   1b06c:	str	r1, [r6, #4]
   1b070:	sub	r0, r0, #1
   1b074:	str	r0, [lr], #4
   1b078:	ldr	ip, [r3, #4]
   1b07c:	b	1b088 <ReadCompressedDataSlabN+0x4e0>
   1b080:	mov	ip, r2
   1b084:	ldr	r2, [r3, #-4]!
   1b088:	cmp	r5, r3
   1b08c:	mul	r0, r2, r0
   1b090:	mul	r1, ip, r1
   1b094:	bne	1b080 <ReadCompressedDataSlabN+0x4d8>
   1b098:	str	r1, [r6, #4]!
   1b09c:	ldr	r2, [fp]
   1b0a0:	str	r0, [lr, #-4]
   1b0a4:	ldr	r1, [sl, #4]!
   1b0a8:	ldr	r3, [sp, #12]
   1b0ac:	mla	r4, r1, r2, r4
   1b0b0:	ldr	r2, [sp, #20]
   1b0b4:	cmp	r3, r7
   1b0b8:	ldr	r3, [r9, #4]!
   1b0bc:	mul	r3, r3, r2
   1b0c0:	str	r3, [sp, #20]
   1b0c4:	beq	1be64 <ReadCompressedDataSlabN+0x12bc>
   1b0c8:	ldr	r1, [r8]
   1b0cc:	mov	r3, r8
   1b0d0:	mov	r2, r1
   1b0d4:	b	1b060 <ReadCompressedDataSlabN+0x4b8>
   1b0d8:	ldr	r2, [sp, #252]	; 0xfc
   1b0dc:	ldr	r3, [r8]
   1b0e0:	cmp	r2, #1
   1b0e4:	ldr	r2, [sp, #256]	; 0x100
   1b0e8:	sub	r3, r3, #1
   1b0ec:	str	r3, [sp, #32]
   1b0f0:	ldr	r1, [r2]
   1b0f4:	ldr	r2, [sp, #268]	; 0x10c
   1b0f8:	str	r1, [sp, #112]	; 0x70
   1b0fc:	ldr	r2, [r2]
   1b100:	str	r2, [sp, #20]
   1b104:	ble	1e634 <ReadCompressedDataSlabN+0x3a8c>
   1b108:	ldr	r3, [sp, #252]	; 0xfc
   1b10c:	add	r7, r8, #4
   1b110:	add	lr, sp, #36	; 0x24
   1b114:	mov	r2, r1
   1b118:	mov	r4, #0
   1b11c:	str	sl, [sp, #16]
   1b120:	ldr	r0, [sp, #260]	; 0x104
   1b124:	str	fp, [sp, #24]
   1b128:	ldr	r9, [sp, #268]	; 0x10c
   1b12c:	add	r3, r8, r3, lsl #2
   1b130:	mov	sl, r0
   1b134:	str	r3, [sp, #12]
   1b138:	ldr	r3, [sp, #256]	; 0x100
   1b13c:	str	r8, [sp, #264]	; 0x108
   1b140:	mov	r5, r3
   1b144:	ldr	r0, [r7], #4
   1b148:	mov	fp, r6
   1b14c:	add	r8, r3, #4
   1b150:	str	r1, [r6, #4]
   1b154:	sub	r0, r0, #1
   1b158:	str	r0, [lr], #4
   1b15c:	ldr	ip, [r3, #4]
   1b160:	b	1b16c <ReadCompressedDataSlabN+0x5c4>
   1b164:	mov	ip, r2
   1b168:	ldr	r2, [r3, #-4]!
   1b16c:	cmp	r5, r3
   1b170:	mul	r0, r2, r0
   1b174:	mul	r1, ip, r1
   1b178:	bne	1b164 <ReadCompressedDataSlabN+0x5bc>
   1b17c:	str	r1, [r6, #4]!
   1b180:	ldr	r2, [fp]
   1b184:	str	r0, [lr, #-4]
   1b188:	ldr	r1, [sl, #4]!
   1b18c:	ldr	r3, [sp, #12]
   1b190:	mla	r4, r1, r2, r4
   1b194:	ldr	r2, [sp, #20]
   1b198:	cmp	r3, r7
   1b19c:	ldr	r3, [r9, #4]!
   1b1a0:	mul	r3, r3, r2
   1b1a4:	str	r3, [sp, #20]
   1b1a8:	beq	1c94c <ReadCompressedDataSlabN+0x1da4>
   1b1ac:	ldr	r1, [r8]
   1b1b0:	mov	r3, r8
   1b1b4:	mov	r2, r1
   1b1b8:	b	1b144 <ReadCompressedDataSlabN+0x59c>
   1b1bc:	ldr	r2, [sp, #252]	; 0xfc
   1b1c0:	ldr	r3, [r8]
   1b1c4:	cmp	r2, #1
   1b1c8:	ldr	r2, [sp, #256]	; 0x100
   1b1cc:	sub	r3, r3, #1
   1b1d0:	str	r3, [sp, #32]
   1b1d4:	ldr	r1, [r2]
   1b1d8:	ldr	r2, [sp, #268]	; 0x10c
   1b1dc:	str	r1, [sp, #112]	; 0x70
   1b1e0:	ldr	r2, [r2]
   1b1e4:	str	r2, [sp, #20]
   1b1e8:	ble	1e62c <ReadCompressedDataSlabN+0x3a84>
   1b1ec:	ldr	r3, [sp, #252]	; 0xfc
   1b1f0:	add	r7, r8, #4
   1b1f4:	add	lr, sp, #36	; 0x24
   1b1f8:	mov	r2, r1
   1b1fc:	mov	r4, #0
   1b200:	str	sl, [sp, #16]
   1b204:	ldr	r0, [sp, #260]	; 0x104
   1b208:	str	fp, [sp, #24]
   1b20c:	ldr	r9, [sp, #268]	; 0x10c
   1b210:	add	r3, r8, r3, lsl #2
   1b214:	mov	sl, r0
   1b218:	str	r3, [sp, #12]
   1b21c:	ldr	r3, [sp, #256]	; 0x100
   1b220:	str	r8, [sp, #264]	; 0x108
   1b224:	mov	r5, r3
   1b228:	ldr	r0, [r7], #4
   1b22c:	mov	fp, r6
   1b230:	add	r8, r3, #4
   1b234:	str	r1, [r6, #4]
   1b238:	sub	r0, r0, #1
   1b23c:	str	r0, [lr], #4
   1b240:	ldr	ip, [r3, #4]
   1b244:	b	1b250 <ReadCompressedDataSlabN+0x6a8>
   1b248:	mov	ip, r2
   1b24c:	ldr	r2, [r3, #-4]!
   1b250:	cmp	r5, r3
   1b254:	mul	r0, r2, r0
   1b258:	mul	r1, ip, r1
   1b25c:	bne	1b248 <ReadCompressedDataSlabN+0x6a0>
   1b260:	str	r1, [r6, #4]!
   1b264:	ldr	r2, [fp]
   1b268:	str	r0, [lr, #-4]
   1b26c:	ldr	r1, [sl, #4]!
   1b270:	ldr	r3, [sp, #12]
   1b274:	mla	r4, r1, r2, r4
   1b278:	ldr	r2, [sp, #20]
   1b27c:	cmp	r3, r7
   1b280:	ldr	r3, [r9, #4]!
   1b284:	mul	r3, r3, r2
   1b288:	str	r3, [sp, #20]
   1b28c:	beq	1bba8 <ReadCompressedDataSlabN+0x1000>
   1b290:	ldr	r1, [r8]
   1b294:	mov	r3, r8
   1b298:	mov	r2, r1
   1b29c:	b	1b228 <ReadCompressedDataSlabN+0x680>
   1b2a0:	ldr	r2, [sp, #252]	; 0xfc
   1b2a4:	ldr	r3, [r8]
   1b2a8:	cmp	r2, #1
   1b2ac:	ldr	r2, [sp, #256]	; 0x100
   1b2b0:	sub	r3, r3, #1
   1b2b4:	str	r3, [sp, #32]
   1b2b8:	ldr	r1, [r2]
   1b2bc:	ldr	r2, [sp, #268]	; 0x10c
   1b2c0:	str	r1, [sp, #112]	; 0x70
   1b2c4:	ldr	r2, [r2]
   1b2c8:	str	r2, [sp, #20]
   1b2cc:	ble	1e624 <ReadCompressedDataSlabN+0x3a7c>
   1b2d0:	ldr	r3, [sp, #252]	; 0xfc
   1b2d4:	add	r7, r8, #4
   1b2d8:	add	lr, sp, #36	; 0x24
   1b2dc:	mov	r2, r1
   1b2e0:	mov	r4, #0
   1b2e4:	str	sl, [sp, #16]
   1b2e8:	ldr	r0, [sp, #260]	; 0x104
   1b2ec:	str	fp, [sp, #24]
   1b2f0:	ldr	r9, [sp, #268]	; 0x10c
   1b2f4:	add	r3, r8, r3, lsl #2
   1b2f8:	mov	sl, r0
   1b2fc:	str	r3, [sp, #12]
   1b300:	ldr	r3, [sp, #256]	; 0x100
   1b304:	str	r8, [sp, #264]	; 0x108
   1b308:	mov	r5, r3
   1b30c:	ldr	r0, [r7], #4
   1b310:	mov	fp, r6
   1b314:	add	r8, r3, #4
   1b318:	str	r1, [r6, #4]
   1b31c:	sub	r0, r0, #1
   1b320:	str	r0, [lr], #4
   1b324:	ldr	ip, [r3, #4]
   1b328:	b	1b334 <ReadCompressedDataSlabN+0x78c>
   1b32c:	mov	ip, r2
   1b330:	ldr	r2, [r3, #-4]!
   1b334:	cmp	r5, r3
   1b338:	mul	r0, r2, r0
   1b33c:	mul	r1, ip, r1
   1b340:	bne	1b32c <ReadCompressedDataSlabN+0x784>
   1b344:	str	r1, [r6, #4]!
   1b348:	ldr	r2, [fp]
   1b34c:	str	r0, [lr, #-4]
   1b350:	ldr	r1, [sl, #4]!
   1b354:	ldr	r3, [sp, #12]
   1b358:	mla	r4, r1, r2, r4
   1b35c:	ldr	r2, [sp, #20]
   1b360:	cmp	r3, r7
   1b364:	ldr	r3, [r9, #4]!
   1b368:	mul	r3, r3, r2
   1b36c:	str	r3, [sp, #20]
   1b370:	beq	1c690 <ReadCompressedDataSlabN+0x1ae8>
   1b374:	ldr	r1, [r8]
   1b378:	mov	r3, r8
   1b37c:	mov	r2, r1
   1b380:	b	1b30c <ReadCompressedDataSlabN+0x764>
   1b384:	ldr	r2, [sp, #252]	; 0xfc
   1b388:	ldr	r3, [r8]
   1b38c:	cmp	r2, #1
   1b390:	ldr	r2, [sp, #256]	; 0x100
   1b394:	sub	r3, r3, #1
   1b398:	str	r3, [sp, #32]
   1b39c:	ldr	r1, [r2]
   1b3a0:	ldr	r2, [sp, #268]	; 0x10c
   1b3a4:	str	r1, [sp, #112]	; 0x70
   1b3a8:	ldr	r2, [r2]
   1b3ac:	str	r2, [sp, #20]
   1b3b0:	ble	1e60c <ReadCompressedDataSlabN+0x3a64>
   1b3b4:	ldr	r3, [sp, #252]	; 0xfc
   1b3b8:	add	r7, r8, #4
   1b3bc:	add	lr, sp, #36	; 0x24
   1b3c0:	mov	r2, r1
   1b3c4:	mov	r4, #0
   1b3c8:	str	sl, [sp, #16]
   1b3cc:	ldr	r0, [sp, #260]	; 0x104
   1b3d0:	str	fp, [sp, #24]
   1b3d4:	ldr	r9, [sp, #268]	; 0x10c
   1b3d8:	add	r3, r8, r3, lsl #2
   1b3dc:	mov	sl, r0
   1b3e0:	str	r3, [sp, #12]
   1b3e4:	ldr	r3, [sp, #256]	; 0x100
   1b3e8:	str	r8, [sp, #264]	; 0x108
   1b3ec:	mov	r5, r3
   1b3f0:	ldr	r0, [r7], #4
   1b3f4:	mov	fp, r6
   1b3f8:	add	r8, r3, #4
   1b3fc:	str	r1, [r6, #4]
   1b400:	sub	r0, r0, #1
   1b404:	str	r0, [lr], #4
   1b408:	ldr	ip, [r3, #4]
   1b40c:	b	1b418 <ReadCompressedDataSlabN+0x870>
   1b410:	mov	ip, r2
   1b414:	ldr	r2, [r3, #-4]!
   1b418:	cmp	r5, r3
   1b41c:	mul	r0, r2, r0
   1b420:	mul	r1, ip, r1
   1b424:	bne	1b410 <ReadCompressedDataSlabN+0x868>
   1b428:	str	r1, [r6, #4]!
   1b42c:	ldr	r2, [fp]
   1b430:	str	r0, [lr, #-4]
   1b434:	ldr	r1, [sl, #4]!
   1b438:	ldr	r3, [sp, #12]
   1b43c:	mla	r4, r1, r2, r4
   1b440:	ldr	r2, [sp, #20]
   1b444:	cmp	r3, r7
   1b448:	ldr	r3, [r9, #4]!
   1b44c:	mul	r3, r3, r2
   1b450:	str	r3, [sp, #20]
   1b454:	beq	1c11c <ReadCompressedDataSlabN+0x1574>
   1b458:	ldr	r1, [r8]
   1b45c:	mov	r3, r8
   1b460:	mov	r2, r1
   1b464:	b	1b3f0 <ReadCompressedDataSlabN+0x848>
   1b468:	ldr	r2, [sp, #252]	; 0xfc
   1b46c:	ldr	r3, [r8]
   1b470:	cmp	r2, #1
   1b474:	ldr	r2, [sp, #256]	; 0x100
   1b478:	sub	r3, r3, #1
   1b47c:	str	r3, [sp, #32]
   1b480:	ldr	r1, [r2]
   1b484:	ldr	r2, [sp, #268]	; 0x10c
   1b488:	str	r1, [sp, #112]	; 0x70
   1b48c:	ldr	r2, [r2]
   1b490:	str	r2, [sp, #20]
   1b494:	ble	1e604 <ReadCompressedDataSlabN+0x3a5c>
   1b498:	ldr	r3, [sp, #252]	; 0xfc
   1b49c:	add	r7, r8, #4
   1b4a0:	add	lr, sp, #36	; 0x24
   1b4a4:	mov	r2, r1
   1b4a8:	mov	r4, #0
   1b4ac:	str	sl, [sp, #16]
   1b4b0:	ldr	r0, [sp, #260]	; 0x104
   1b4b4:	str	fp, [sp, #24]
   1b4b8:	ldr	r9, [sp, #268]	; 0x10c
   1b4bc:	add	r3, r8, r3, lsl #2
   1b4c0:	mov	sl, r0
   1b4c4:	str	r3, [sp, #12]
   1b4c8:	ldr	r3, [sp, #256]	; 0x100
   1b4cc:	str	r8, [sp, #264]	; 0x108
   1b4d0:	mov	r5, r3
   1b4d4:	ldr	r0, [r7], #4
   1b4d8:	mov	fp, r6
   1b4dc:	add	r8, r3, #4
   1b4e0:	str	r1, [r6, #4]
   1b4e4:	sub	r0, r0, #1
   1b4e8:	str	r0, [lr], #4
   1b4ec:	ldr	ip, [r3, #4]
   1b4f0:	b	1b4fc <ReadCompressedDataSlabN+0x954>
   1b4f4:	mov	ip, r2
   1b4f8:	ldr	r2, [r3, #-4]!
   1b4fc:	cmp	r5, r3
   1b500:	mul	r0, r2, r0
   1b504:	mul	r1, ip, r1
   1b508:	bne	1b4f4 <ReadCompressedDataSlabN+0x94c>
   1b50c:	str	r1, [r6, #4]!
   1b510:	ldr	r2, [fp]
   1b514:	str	r0, [lr, #-4]
   1b518:	ldr	r1, [sl, #4]!
   1b51c:	ldr	r3, [sp, #12]
   1b520:	mla	r4, r1, r2, r4
   1b524:	ldr	r2, [sp, #20]
   1b528:	cmp	r3, r7
   1b52c:	ldr	r3, [r9, #4]!
   1b530:	mul	r3, r3, r2
   1b534:	str	r3, [sp, #20]
   1b538:	beq	1cc08 <ReadCompressedDataSlabN+0x2060>
   1b53c:	ldr	r1, [r8]
   1b540:	mov	r3, r8
   1b544:	mov	r2, r1
   1b548:	b	1b4d4 <ReadCompressedDataSlabN+0x92c>
   1b54c:	ldr	r2, [sp, #252]	; 0xfc
   1b550:	ldr	r3, [r8]
   1b554:	cmp	r2, #1
   1b558:	ldr	r2, [sp, #256]	; 0x100
   1b55c:	sub	r3, r3, #1
   1b560:	str	r3, [sp, #32]
   1b564:	ldr	r1, [r2]
   1b568:	ldr	r2, [sp, #268]	; 0x10c
   1b56c:	str	r1, [sp, #112]	; 0x70
   1b570:	ldr	r2, [r2]
   1b574:	str	r2, [sp, #20]
   1b578:	ble	1e5fc <ReadCompressedDataSlabN+0x3a54>
   1b57c:	ldr	r3, [sp, #252]	; 0xfc
   1b580:	add	r7, r8, #4
   1b584:	add	lr, sp, #36	; 0x24
   1b588:	mov	r2, r1
   1b58c:	mov	r4, #0
   1b590:	str	sl, [sp, #16]
   1b594:	ldr	r0, [sp, #260]	; 0x104
   1b598:	str	fp, [sp, #24]
   1b59c:	ldr	r9, [sp, #268]	; 0x10c
   1b5a0:	add	r3, r8, r3, lsl #2
   1b5a4:	mov	sl, r0
   1b5a8:	str	r3, [sp, #12]
   1b5ac:	ldr	r3, [sp, #256]	; 0x100
   1b5b0:	str	r8, [sp, #264]	; 0x108
   1b5b4:	mov	r5, r3
   1b5b8:	ldr	r0, [r7], #4
   1b5bc:	mov	fp, r6
   1b5c0:	add	r8, r3, #4
   1b5c4:	str	r1, [r6, #4]
   1b5c8:	sub	r0, r0, #1
   1b5cc:	str	r0, [lr], #4
   1b5d0:	ldr	ip, [r3, #4]
   1b5d4:	b	1b5e0 <ReadCompressedDataSlabN+0xa38>
   1b5d8:	mov	ip, r2
   1b5dc:	ldr	r2, [r3, #-4]!
   1b5e0:	cmp	r3, r5
   1b5e4:	mul	r0, r2, r0
   1b5e8:	mul	r1, ip, r1
   1b5ec:	bne	1b5d8 <ReadCompressedDataSlabN+0xa30>
   1b5f0:	str	r1, [r6, #4]!
   1b5f4:	ldr	r2, [fp]
   1b5f8:	str	r0, [lr, #-4]
   1b5fc:	ldr	r1, [sl, #4]!
   1b600:	ldr	r3, [sp, #12]
   1b604:	mla	r4, r1, r2, r4
   1b608:	ldr	r2, [sp, #20]
   1b60c:	cmp	r3, r7
   1b610:	ldr	r3, [r9, #4]!
   1b614:	mul	r3, r3, r2
   1b618:	str	r3, [sp, #20]
   1b61c:	beq	1cec4 <ReadCompressedDataSlabN+0x231c>
   1b620:	ldr	r1, [r8]
   1b624:	mov	r3, r8
   1b628:	mov	r2, r1
   1b62c:	b	1b5b8 <ReadCompressedDataSlabN+0xa10>
   1b630:	ldr	sl, [sp, #16]
   1b634:	ldr	fp, [sp, #24]
   1b638:	ldr	r8, [sp, #264]	; 0x108
   1b63c:	mov	r3, r4
   1b640:	mov	r1, fp
   1b644:	mov	r0, sl
   1b648:	ldr	r2, [sp, #248]	; 0xf8
   1b64c:	bl	235c <InflateSkipData>
   1b650:	ldr	r3, [r8]
   1b654:	cmp	r3, #1
   1b658:	ldr	r3, [sp, #20]
   1b65c:	beq	1e398 <ReadCompressedDataSlabN+0x37f0>
   1b660:	cmp	r3, #0
   1b664:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1b668:	str	sl, [sp, #12]
   1b66c:	mov	r3, #0
   1b670:	ldr	sl, [sp, #268]	; 0x10c
   1b674:	str	r3, [sp, #24]
   1b678:	ldr	r3, [sp, #260]	; 0x104
   1b67c:	ldr	r3, [r3]
   1b680:	cmp	r3, #0
   1b684:	bne	1b8cc <ReadCompressedDataSlabN+0xd24>
   1b688:	ldr	r3, [sl]
   1b68c:	ldr	r1, [sp, #24]
   1b690:	cmp	r3, #1
   1b694:	mov	r2, r1
   1b698:	ble	1b70c <ReadCompressedDataSlabN+0xb64>
   1b69c:	ldr	r3, [sp, #8]
   1b6a0:	mov	r5, #0
   1b6a4:	ldr	r7, [sp, #12]
   1b6a8:	ldr	r9, [sp, #248]	; 0xf8
   1b6ac:	add	r6, r3, r1, lsl #3
   1b6b0:	mov	r1, #1
   1b6b4:	mov	r2, r6
   1b6b8:	mov	r3, r9
   1b6bc:	mov	r0, r7
   1b6c0:	str	r1, [sp]
   1b6c4:	mov	r1, fp
   1b6c8:	add	r5, r5, #1
   1b6cc:	bl	14874 <ReadCompressedUInt64Data>
   1b6d0:	ldr	r3, [r8]
   1b6d4:	mov	r2, r9
   1b6d8:	mov	r1, fp
   1b6dc:	mov	r0, r7
   1b6e0:	add	r6, r6, #8
   1b6e4:	sub	r3, r3, #1
   1b6e8:	bl	235c <InflateSkipData>
   1b6ec:	ldr	r3, [sl]
   1b6f0:	ldr	r2, [r8]
   1b6f4:	sub	r3, r3, #1
   1b6f8:	cmp	r3, r5
   1b6fc:	add	r4, r4, r2
   1b700:	bgt	1b6b0 <ReadCompressedDataSlabN+0xb08>
   1b704:	ldr	r3, [sp, #24]
   1b708:	add	r2, r3, r5
   1b70c:	ldr	r3, [sp, #8]
   1b710:	mov	ip, #1
   1b714:	mov	r1, fp
   1b718:	ldr	r6, [sp, #12]
   1b71c:	str	ip, [sp]
   1b720:	add	r2, r3, r2, lsl #3
   1b724:	ldr	r3, [sp, #248]	; 0xf8
   1b728:	mov	r0, r6
   1b72c:	bl	14874 <ReadCompressedUInt64Data>
   1b730:	ldr	r3, [sl]
   1b734:	mov	r1, fp
   1b738:	ldr	r0, [sp, #260]	; 0x104
   1b73c:	ldr	lr, [r8]
   1b740:	sub	r3, r3, #1
   1b744:	ldr	r2, [sp, #248]	; 0xf8
   1b748:	ldr	ip, [r0]
   1b74c:	ldr	r0, [sp, #256]	; 0x100
   1b750:	mla	r3, lr, r3, ip
   1b754:	ldr	r5, [r0]
   1b758:	mov	r0, r6
   1b75c:	sub	r5, r5, r3
   1b760:	sub	r3, r5, #1
   1b764:	add	r4, r4, r5
   1b768:	bl	235c <InflateSkipData>
   1b76c:	ldr	r3, [sp, #252]	; 0xfc
   1b770:	cmp	r3, #1
   1b774:	ble	1b89c <ReadCompressedDataSlabN+0xcf4>
   1b778:	ldr	r3, [sp, #76]	; 0x4c
   1b77c:	ldr	r1, [sl, #4]
   1b780:	add	r3, r3, #1
   1b784:	sdiv	r2, r3, r1
   1b788:	str	r3, [sp, #76]	; 0x4c
   1b78c:	mls	r3, r1, r2, r3
   1b790:	cmp	r3, #0
   1b794:	bne	1e5d4 <ReadCompressedDataSlabN+0x3a2c>
   1b798:	add	r3, sl, #4
   1b79c:	add	r2, sp, #116	; 0x74
   1b7a0:	str	fp, [sp, #16]
   1b7a4:	add	r6, sp, #76	; 0x4c
   1b7a8:	mov	r7, #1
   1b7ac:	str	r8, [sp, #264]	; 0x108
   1b7b0:	mov	r8, r2
   1b7b4:	str	sl, [sp, #268]	; 0x10c
   1b7b8:	mov	sl, r3
   1b7bc:	ldr	r9, [sp, #260]	; 0x104
   1b7c0:	b	1b7fc <ReadCompressedDataSlabN+0xc54>
   1b7c4:	cmp	r3, #0
   1b7c8:	bne	1b844 <ReadCompressedDataSlabN+0xc9c>
   1b7cc:	ldr	r3, [sp, #252]	; 0xfc
   1b7d0:	add	r7, r7, #1
   1b7d4:	cmp	r3, r7
   1b7d8:	beq	1b8bc <ReadCompressedDataSlabN+0xd14>
   1b7dc:	ldr	r3, [r6]
   1b7e0:	ldr	r1, [sl, #4]!
   1b7e4:	add	r3, r3, #1
   1b7e8:	sdiv	r2, r3, r1
   1b7ec:	str	r3, [r6]
   1b7f0:	mls	r3, r1, r2, r3
   1b7f4:	cmp	r3, #0
   1b7f8:	bne	1b864 <ReadCompressedDataSlabN+0xcbc>
   1b7fc:	ldr	r5, [r8], #4
   1b800:	mov	r3, #0
   1b804:	str	r3, [r6], #4
   1b808:	ldr	r3, [r9, #4]!
   1b80c:	sdiv	r2, r4, r5
   1b810:	mls	r2, r5, r2, r4
   1b814:	cmp	r2, #0
   1b818:	beq	1b7c4 <ReadCompressedDataSlabN+0xc1c>
   1b81c:	ldr	fp, [r8, #-8]
   1b820:	sub	r5, r5, r2
   1b824:	ldrd	r0, [sp, #12]
   1b828:	ldr	r2, [sp, #248]	; 0xf8
   1b82c:	mla	r3, r3, fp, r5
   1b830:	bl	235c <InflateSkipData>
   1b834:	ldr	r3, [r9]
   1b838:	mla	r5, r3, fp, r5
   1b83c:	add	r4, r4, r5
   1b840:	b	1b7cc <ReadCompressedDataSlabN+0xc24>
   1b844:	ldr	r5, [r8, #-8]
   1b848:	ldrd	r0, [sp, #12]
   1b84c:	ldr	r2, [sp, #248]	; 0xf8
   1b850:	mul	r3, r3, r5
   1b854:	bl	235c <InflateSkipData>
   1b858:	ldr	r3, [r9]
   1b85c:	mla	r4, r3, r5, r4
   1b860:	b	1b7cc <ReadCompressedDataSlabN+0xc24>
   1b864:	ldr	fp, [sp, #16]
   1b868:	ldr	r8, [sp, #264]	; 0x108
   1b86c:	ldr	sl, [sp, #268]	; 0x10c
   1b870:	add	r3, sp, #208	; 0xd0
   1b874:	add	r7, r3, r7, lsl #2
   1b878:	ldr	ip, [r7, #-176]	; 0xffffff50
   1b87c:	cmp	ip, #0
   1b880:	beq	1b89c <ReadCompressedDataSlabN+0xcf4>
   1b884:	mov	r3, ip
   1b888:	mov	r1, fp
   1b88c:	ldr	r0, [sp, #12]
   1b890:	add	r4, r4, ip
   1b894:	ldr	r2, [sp, #248]	; 0xf8
   1b898:	bl	235c <InflateSkipData>
   1b89c:	ldr	r3, [sl]
   1b8a0:	ldr	r2, [sp, #24]
   1b8a4:	add	r3, r2, r3
   1b8a8:	ldr	r2, [sp, #20]
   1b8ac:	str	r3, [sp, #24]
   1b8b0:	cmp	r3, r2
   1b8b4:	blt	1b678 <ReadCompressedDataSlabN+0xad0>
   1b8b8:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1b8bc:	ldr	fp, [sp, #16]
   1b8c0:	ldr	r8, [sp, #264]	; 0x108
   1b8c4:	ldr	sl, [sp, #268]	; 0x10c
   1b8c8:	b	1b89c <ReadCompressedDataSlabN+0xcf4>
   1b8cc:	mov	r1, fp
   1b8d0:	ldr	r0, [sp, #12]
   1b8d4:	ldr	r2, [sp, #248]	; 0xf8
   1b8d8:	bl	235c <InflateSkipData>
   1b8dc:	ldr	r3, [sp, #260]	; 0x104
   1b8e0:	ldr	r3, [r3]
   1b8e4:	add	r4, r4, r3
   1b8e8:	b	1b688 <ReadCompressedDataSlabN+0xae0>
   1b8ec:	ldr	sl, [sp, #16]
   1b8f0:	ldr	fp, [sp, #24]
   1b8f4:	ldr	r8, [sp, #264]	; 0x108
   1b8f8:	mov	r3, r4
   1b8fc:	mov	r1, fp
   1b900:	mov	r0, sl
   1b904:	ldr	r2, [sp, #248]	; 0xf8
   1b908:	bl	235c <InflateSkipData>
   1b90c:	ldr	r3, [r8]
   1b910:	cmp	r3, #1
   1b914:	ldr	r3, [sp, #20]
   1b918:	beq	1dd74 <ReadCompressedDataSlabN+0x31cc>
   1b91c:	cmp	r3, #0
   1b920:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1b924:	str	sl, [sp, #12]
   1b928:	mov	r3, #0
   1b92c:	ldr	sl, [sp, #268]	; 0x10c
   1b930:	str	r3, [sp, #24]
   1b934:	ldr	r3, [sp, #260]	; 0x104
   1b938:	ldr	r3, [r3]
   1b93c:	cmp	r3, #0
   1b940:	bne	1bb88 <ReadCompressedDataSlabN+0xfe0>
   1b944:	ldr	r3, [sl]
   1b948:	ldr	r1, [sp, #24]
   1b94c:	cmp	r3, #1
   1b950:	mov	r2, r1
   1b954:	ble	1b9c8 <ReadCompressedDataSlabN+0xe20>
   1b958:	ldr	r3, [sp, #8]
   1b95c:	mov	r5, #0
   1b960:	ldr	r7, [sp, #12]
   1b964:	ldr	r9, [sp, #248]	; 0xf8
   1b968:	add	r6, r3, r1, lsl #3
   1b96c:	mov	r1, #1
   1b970:	mov	r2, r6
   1b974:	mov	r3, r9
   1b978:	mov	r0, r7
   1b97c:	str	r1, [sp]
   1b980:	mov	r1, fp
   1b984:	add	r5, r5, #1
   1b988:	bl	142d4 <ReadCompressedInt64Data>
   1b98c:	ldr	r3, [r8]
   1b990:	mov	r2, r9
   1b994:	mov	r1, fp
   1b998:	mov	r0, r7
   1b99c:	add	r6, r6, #8
   1b9a0:	sub	r3, r3, #1
   1b9a4:	bl	235c <InflateSkipData>
   1b9a8:	ldr	r3, [sl]
   1b9ac:	ldr	r2, [r8]
   1b9b0:	sub	r3, r3, #1
   1b9b4:	cmp	r3, r5
   1b9b8:	add	r4, r4, r2
   1b9bc:	bgt	1b96c <ReadCompressedDataSlabN+0xdc4>
   1b9c0:	ldr	r3, [sp, #24]
   1b9c4:	add	r2, r3, r5
   1b9c8:	ldr	r3, [sp, #8]
   1b9cc:	mov	ip, #1
   1b9d0:	mov	r1, fp
   1b9d4:	ldr	r6, [sp, #12]
   1b9d8:	str	ip, [sp]
   1b9dc:	add	r2, r3, r2, lsl #3
   1b9e0:	ldr	r3, [sp, #248]	; 0xf8
   1b9e4:	mov	r0, r6
   1b9e8:	bl	142d4 <ReadCompressedInt64Data>
   1b9ec:	ldr	r3, [sl]
   1b9f0:	mov	r1, fp
   1b9f4:	ldr	r0, [sp, #260]	; 0x104
   1b9f8:	ldr	lr, [r8]
   1b9fc:	sub	r3, r3, #1
   1ba00:	ldr	r2, [sp, #248]	; 0xf8
   1ba04:	ldr	ip, [r0]
   1ba08:	ldr	r0, [sp, #256]	; 0x100
   1ba0c:	mla	r3, lr, r3, ip
   1ba10:	ldr	r5, [r0]
   1ba14:	mov	r0, r6
   1ba18:	sub	r5, r5, r3
   1ba1c:	sub	r3, r5, #1
   1ba20:	add	r4, r4, r5
   1ba24:	bl	235c <InflateSkipData>
   1ba28:	ldr	r3, [sp, #252]	; 0xfc
   1ba2c:	cmp	r3, #1
   1ba30:	ble	1bb58 <ReadCompressedDataSlabN+0xfb0>
   1ba34:	ldr	r3, [sp, #76]	; 0x4c
   1ba38:	ldr	r1, [sl, #4]
   1ba3c:	add	r3, r3, #1
   1ba40:	sdiv	r2, r3, r1
   1ba44:	str	r3, [sp, #76]	; 0x4c
   1ba48:	mls	r3, r1, r2, r3
   1ba4c:	cmp	r3, #0
   1ba50:	bne	1e5e4 <ReadCompressedDataSlabN+0x3a3c>
   1ba54:	add	r3, sl, #4
   1ba58:	add	r2, sp, #116	; 0x74
   1ba5c:	str	fp, [sp, #16]
   1ba60:	add	r6, sp, #76	; 0x4c
   1ba64:	mov	r7, #1
   1ba68:	str	r8, [sp, #264]	; 0x108
   1ba6c:	mov	r8, r2
   1ba70:	str	sl, [sp, #268]	; 0x10c
   1ba74:	mov	sl, r3
   1ba78:	ldr	r9, [sp, #260]	; 0x104
   1ba7c:	b	1bab8 <ReadCompressedDataSlabN+0xf10>
   1ba80:	cmp	r3, #0
   1ba84:	bne	1bb00 <ReadCompressedDataSlabN+0xf58>
   1ba88:	ldr	r3, [sp, #252]	; 0xfc
   1ba8c:	add	r7, r7, #1
   1ba90:	cmp	r3, r7
   1ba94:	beq	1bb78 <ReadCompressedDataSlabN+0xfd0>
   1ba98:	ldr	r3, [r6]
   1ba9c:	ldr	r1, [sl, #4]!
   1baa0:	add	r3, r3, #1
   1baa4:	sdiv	r2, r3, r1
   1baa8:	str	r3, [r6]
   1baac:	mls	r3, r1, r2, r3
   1bab0:	cmp	r3, #0
   1bab4:	bne	1bb20 <ReadCompressedDataSlabN+0xf78>
   1bab8:	ldr	r5, [r8], #4
   1babc:	mov	r3, #0
   1bac0:	str	r3, [r6], #4
   1bac4:	ldr	r3, [r9, #4]!
   1bac8:	sdiv	r2, r4, r5
   1bacc:	mls	r2, r5, r2, r4
   1bad0:	cmp	r2, #0
   1bad4:	beq	1ba80 <ReadCompressedDataSlabN+0xed8>
   1bad8:	ldr	fp, [r8, #-8]
   1badc:	sub	r5, r5, r2
   1bae0:	ldrd	r0, [sp, #12]
   1bae4:	ldr	r2, [sp, #248]	; 0xf8
   1bae8:	mla	r3, r3, fp, r5
   1baec:	bl	235c <InflateSkipData>
   1baf0:	ldr	r3, [r9]
   1baf4:	mla	r5, r3, fp, r5
   1baf8:	add	r4, r4, r5
   1bafc:	b	1ba88 <ReadCompressedDataSlabN+0xee0>
   1bb00:	ldr	r5, [r8, #-8]
   1bb04:	ldrd	r0, [sp, #12]
   1bb08:	ldr	r2, [sp, #248]	; 0xf8
   1bb0c:	mul	r3, r3, r5
   1bb10:	bl	235c <InflateSkipData>
   1bb14:	ldr	r3, [r9]
   1bb18:	mla	r4, r3, r5, r4
   1bb1c:	b	1ba88 <ReadCompressedDataSlabN+0xee0>
   1bb20:	ldr	fp, [sp, #16]
   1bb24:	ldr	r8, [sp, #264]	; 0x108
   1bb28:	ldr	sl, [sp, #268]	; 0x10c
   1bb2c:	add	r3, sp, #208	; 0xd0
   1bb30:	add	r7, r3, r7, lsl #2
   1bb34:	ldr	ip, [r7, #-176]	; 0xffffff50
   1bb38:	cmp	ip, #0
   1bb3c:	beq	1bb58 <ReadCompressedDataSlabN+0xfb0>
   1bb40:	mov	r3, ip
   1bb44:	mov	r1, fp
   1bb48:	ldr	r0, [sp, #12]
   1bb4c:	add	r4, r4, ip
   1bb50:	ldr	r2, [sp, #248]	; 0xf8
   1bb54:	bl	235c <InflateSkipData>
   1bb58:	ldr	r3, [sl]
   1bb5c:	ldr	r2, [sp, #24]
   1bb60:	add	r3, r2, r3
   1bb64:	ldr	r2, [sp, #20]
   1bb68:	str	r3, [sp, #24]
   1bb6c:	cmp	r3, r2
   1bb70:	blt	1b934 <ReadCompressedDataSlabN+0xd8c>
   1bb74:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1bb78:	ldr	fp, [sp, #16]
   1bb7c:	ldr	r8, [sp, #264]	; 0x108
   1bb80:	ldr	sl, [sp, #268]	; 0x10c
   1bb84:	b	1bb58 <ReadCompressedDataSlabN+0xfb0>
   1bb88:	mov	r1, fp
   1bb8c:	ldr	r0, [sp, #12]
   1bb90:	ldr	r2, [sp, #248]	; 0xf8
   1bb94:	bl	235c <InflateSkipData>
   1bb98:	ldr	r3, [sp, #260]	; 0x104
   1bb9c:	ldr	r3, [r3]
   1bba0:	add	r4, r4, r3
   1bba4:	b	1b944 <ReadCompressedDataSlabN+0xd9c>
   1bba8:	ldr	sl, [sp, #16]
   1bbac:	ldr	fp, [sp, #24]
   1bbb0:	ldr	r8, [sp, #264]	; 0x108
   1bbb4:	mov	r3, r4
   1bbb8:	mov	r1, fp
   1bbbc:	mov	r0, sl
   1bbc0:	ldr	r2, [sp, #248]	; 0xf8
   1bbc4:	bl	235c <InflateSkipData>
   1bbc8:	ldr	r3, [r8]
   1bbcc:	cmp	r3, #1
   1bbd0:	ldr	r3, [sp, #20]
   1bbd4:	beq	1e18c <ReadCompressedDataSlabN+0x35e4>
   1bbd8:	cmp	r3, #0
   1bbdc:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1bbe0:	str	sl, [sp, #12]
   1bbe4:	mov	r3, #0
   1bbe8:	ldr	sl, [sp, #268]	; 0x10c
   1bbec:	str	r3, [sp, #24]
   1bbf0:	ldr	r3, [sp, #260]	; 0x104
   1bbf4:	ldr	r3, [r3]
   1bbf8:	cmp	r3, #0
   1bbfc:	bne	1be44 <ReadCompressedDataSlabN+0x129c>
   1bc00:	ldr	r3, [sl]
   1bc04:	ldr	r1, [sp, #24]
   1bc08:	cmp	r3, #1
   1bc0c:	mov	r2, r1
   1bc10:	ble	1bc84 <ReadCompressedDataSlabN+0x10dc>
   1bc14:	ldr	r3, [sp, #8]
   1bc18:	mov	r5, #0
   1bc1c:	ldr	r7, [sp, #12]
   1bc20:	ldr	r9, [sp, #248]	; 0xf8
   1bc24:	add	r6, r3, r1, lsl #2
   1bc28:	mov	r1, #1
   1bc2c:	mov	r2, r6
   1bc30:	mov	r3, r9
   1bc34:	mov	r0, r7
   1bc38:	str	r1, [sp]
   1bc3c:	mov	r1, fp
   1bc40:	add	r5, r5, #1
   1bc44:	bl	13d20 <ReadCompressedSingleData>
   1bc48:	ldr	r3, [r8]
   1bc4c:	mov	r2, r9
   1bc50:	mov	r1, fp
   1bc54:	mov	r0, r7
   1bc58:	add	r6, r6, #4
   1bc5c:	sub	r3, r3, #1
   1bc60:	bl	235c <InflateSkipData>
   1bc64:	ldr	r3, [sl]
   1bc68:	ldr	r2, [r8]
   1bc6c:	sub	r3, r3, #1
   1bc70:	cmp	r3, r5
   1bc74:	add	r4, r4, r2
   1bc78:	bgt	1bc28 <ReadCompressedDataSlabN+0x1080>
   1bc7c:	ldr	r3, [sp, #24]
   1bc80:	add	r2, r3, r5
   1bc84:	ldr	r3, [sp, #8]
   1bc88:	mov	ip, #1
   1bc8c:	mov	r1, fp
   1bc90:	ldr	r6, [sp, #12]
   1bc94:	str	ip, [sp]
   1bc98:	add	r2, r3, r2, lsl #2
   1bc9c:	ldr	r3, [sp, #248]	; 0xf8
   1bca0:	mov	r0, r6
   1bca4:	bl	13d20 <ReadCompressedSingleData>
   1bca8:	ldr	r3, [sl]
   1bcac:	mov	r1, fp
   1bcb0:	ldr	r0, [sp, #260]	; 0x104
   1bcb4:	ldr	lr, [r8]
   1bcb8:	sub	r3, r3, #1
   1bcbc:	ldr	r2, [sp, #248]	; 0xf8
   1bcc0:	ldr	ip, [r0]
   1bcc4:	ldr	r0, [sp, #256]	; 0x100
   1bcc8:	mla	r3, lr, r3, ip
   1bccc:	ldr	r5, [r0]
   1bcd0:	mov	r0, r6
   1bcd4:	sub	r5, r5, r3
   1bcd8:	sub	r3, r5, #1
   1bcdc:	add	r4, r4, r5
   1bce0:	bl	235c <InflateSkipData>
   1bce4:	ldr	r3, [sp, #252]	; 0xfc
   1bce8:	cmp	r3, #1
   1bcec:	ble	1be14 <ReadCompressedDataSlabN+0x126c>
   1bcf0:	ldr	r3, [sp, #76]	; 0x4c
   1bcf4:	ldr	r1, [sl, #4]
   1bcf8:	add	r3, r3, #1
   1bcfc:	sdiv	r2, r3, r1
   1bd00:	str	r3, [sp, #76]	; 0x4c
   1bd04:	mls	r3, r1, r2, r3
   1bd08:	cmp	r3, #0
   1bd0c:	bne	1e5b4 <ReadCompressedDataSlabN+0x3a0c>
   1bd10:	add	r3, sl, #4
   1bd14:	add	r2, sp, #116	; 0x74
   1bd18:	str	fp, [sp, #16]
   1bd1c:	add	r6, sp, #76	; 0x4c
   1bd20:	mov	r7, #1
   1bd24:	str	r8, [sp, #264]	; 0x108
   1bd28:	mov	r8, r2
   1bd2c:	str	sl, [sp, #268]	; 0x10c
   1bd30:	mov	sl, r3
   1bd34:	ldr	r9, [sp, #260]	; 0x104
   1bd38:	b	1bd74 <ReadCompressedDataSlabN+0x11cc>
   1bd3c:	cmp	r3, #0
   1bd40:	bne	1bdbc <ReadCompressedDataSlabN+0x1214>
   1bd44:	ldr	r3, [sp, #252]	; 0xfc
   1bd48:	add	r7, r7, #1
   1bd4c:	cmp	r3, r7
   1bd50:	beq	1be34 <ReadCompressedDataSlabN+0x128c>
   1bd54:	ldr	r3, [r6]
   1bd58:	ldr	r1, [sl, #4]!
   1bd5c:	add	r3, r3, #1
   1bd60:	sdiv	r2, r3, r1
   1bd64:	str	r3, [r6]
   1bd68:	mls	r3, r1, r2, r3
   1bd6c:	cmp	r3, #0
   1bd70:	bne	1bddc <ReadCompressedDataSlabN+0x1234>
   1bd74:	ldr	r5, [r8], #4
   1bd78:	mov	r3, #0
   1bd7c:	str	r3, [r6], #4
   1bd80:	ldr	r3, [r9, #4]!
   1bd84:	sdiv	r2, r4, r5
   1bd88:	mls	r2, r5, r2, r4
   1bd8c:	cmp	r2, #0
   1bd90:	beq	1bd3c <ReadCompressedDataSlabN+0x1194>
   1bd94:	ldr	fp, [r8, #-8]
   1bd98:	sub	r5, r5, r2
   1bd9c:	ldrd	r0, [sp, #12]
   1bda0:	ldr	r2, [sp, #248]	; 0xf8
   1bda4:	mla	r3, r3, fp, r5
   1bda8:	bl	235c <InflateSkipData>
   1bdac:	ldr	r3, [r9]
   1bdb0:	mla	r5, r3, fp, r5
   1bdb4:	add	r4, r4, r5
   1bdb8:	b	1bd44 <ReadCompressedDataSlabN+0x119c>
   1bdbc:	ldr	r5, [r8, #-8]
   1bdc0:	ldrd	r0, [sp, #12]
   1bdc4:	ldr	r2, [sp, #248]	; 0xf8
   1bdc8:	mul	r3, r3, r5
   1bdcc:	bl	235c <InflateSkipData>
   1bdd0:	ldr	r3, [r9]
   1bdd4:	mla	r4, r3, r5, r4
   1bdd8:	b	1bd44 <ReadCompressedDataSlabN+0x119c>
   1bddc:	ldr	fp, [sp, #16]
   1bde0:	ldr	r8, [sp, #264]	; 0x108
   1bde4:	ldr	sl, [sp, #268]	; 0x10c
   1bde8:	add	r3, sp, #208	; 0xd0
   1bdec:	add	r7, r3, r7, lsl #2
   1bdf0:	ldr	ip, [r7, #-176]	; 0xffffff50
   1bdf4:	cmp	ip, #0
   1bdf8:	beq	1be14 <ReadCompressedDataSlabN+0x126c>
   1bdfc:	mov	r3, ip
   1be00:	mov	r1, fp
   1be04:	ldr	r0, [sp, #12]
   1be08:	add	r4, r4, ip
   1be0c:	ldr	r2, [sp, #248]	; 0xf8
   1be10:	bl	235c <InflateSkipData>
   1be14:	ldr	r3, [sl]
   1be18:	ldr	r2, [sp, #24]
   1be1c:	add	r3, r2, r3
   1be20:	ldr	r2, [sp, #20]
   1be24:	str	r3, [sp, #24]
   1be28:	cmp	r3, r2
   1be2c:	blt	1bbf0 <ReadCompressedDataSlabN+0x1048>
   1be30:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1be34:	ldr	fp, [sp, #16]
   1be38:	ldr	r8, [sp, #264]	; 0x108
   1be3c:	ldr	sl, [sp, #268]	; 0x10c
   1be40:	b	1be14 <ReadCompressedDataSlabN+0x126c>
   1be44:	mov	r1, fp
   1be48:	ldr	r0, [sp, #12]
   1be4c:	ldr	r2, [sp, #248]	; 0xf8
   1be50:	bl	235c <InflateSkipData>
   1be54:	ldr	r3, [sp, #260]	; 0x104
   1be58:	ldr	r3, [r3]
   1be5c:	add	r4, r4, r3
   1be60:	b	1bc00 <ReadCompressedDataSlabN+0x1058>
   1be64:	ldr	sl, [sp, #16]
   1be68:	ldr	fp, [sp, #24]
   1be6c:	ldr	r8, [sp, #264]	; 0x108
   1be70:	mov	r3, r4
   1be74:	mov	r1, fp
   1be78:	mov	r0, sl
   1be7c:	ldr	r2, [sp, #248]	; 0xf8
   1be80:	bl	235c <InflateSkipData>
   1be84:	ldr	r3, [r8]
   1be88:	cmp	r3, #1
   1be8c:	ldr	r3, [sp, #20]
   1be90:	beq	1df80 <ReadCompressedDataSlabN+0x33d8>
   1be94:	cmp	r3, #0
   1be98:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1be9c:	str	sl, [sp, #12]
   1bea0:	mov	r3, #0
   1bea4:	ldr	sl, [sp, #268]	; 0x10c
   1bea8:	str	r3, [sp, #24]
   1beac:	ldr	r3, [sp, #260]	; 0x104
   1beb0:	ldr	r3, [r3]
   1beb4:	cmp	r3, #0
   1beb8:	bne	1c0fc <ReadCompressedDataSlabN+0x1554>
   1bebc:	ldr	r3, [sl]
   1bec0:	ldr	r1, [sp, #24]
   1bec4:	cmp	r3, #1
   1bec8:	mov	r2, r1
   1becc:	ble	1bf3c <ReadCompressedDataSlabN+0x1394>
   1bed0:	ldr	r3, [sp, #8]
   1bed4:	mov	r5, #0
   1bed8:	ldr	r7, [sp, #12]
   1bedc:	ldr	r9, [sp, #248]	; 0xf8
   1bee0:	add	r6, r3, r1
   1bee4:	mov	r1, #1
   1bee8:	add	r2, r6, r5
   1beec:	mov	r3, r9
   1bef0:	mov	r0, r7
   1bef4:	str	r1, [sp]
   1bef8:	mov	r1, fp
   1befc:	add	r5, r5, #1
   1bf00:	bl	169c8 <ReadCompressedUInt8Data>
   1bf04:	ldr	r3, [r8]
   1bf08:	mov	r2, r9
   1bf0c:	mov	r1, fp
   1bf10:	mov	r0, r7
   1bf14:	sub	r3, r3, #1
   1bf18:	bl	235c <InflateSkipData>
   1bf1c:	ldr	r3, [sl]
   1bf20:	ldr	r2, [r8]
   1bf24:	sub	r3, r3, #1
   1bf28:	cmp	r3, r5
   1bf2c:	add	r4, r4, r2
   1bf30:	bgt	1bee4 <ReadCompressedDataSlabN+0x133c>
   1bf34:	ldr	r3, [sp, #24]
   1bf38:	add	r2, r3, r5
   1bf3c:	ldr	r3, [sp, #8]
   1bf40:	mov	r1, #1
   1bf44:	ldr	r6, [sp, #12]
   1bf48:	str	r1, [sp]
   1bf4c:	mov	r1, fp
   1bf50:	add	r2, r3, r2
   1bf54:	ldr	r3, [sp, #248]	; 0xf8
   1bf58:	mov	r0, r6
   1bf5c:	bl	169c8 <ReadCompressedUInt8Data>
   1bf60:	ldr	r3, [sl]
   1bf64:	mov	r1, fp
   1bf68:	ldr	r0, [sp, #260]	; 0x104
   1bf6c:	ldr	lr, [r8]
   1bf70:	sub	r3, r3, #1
   1bf74:	ldr	r2, [sp, #248]	; 0xf8
   1bf78:	ldr	ip, [r0]
   1bf7c:	ldr	r0, [sp, #256]	; 0x100
   1bf80:	mla	r3, lr, r3, ip
   1bf84:	ldr	r5, [r0]
   1bf88:	mov	r0, r6
   1bf8c:	sub	r5, r5, r3
   1bf90:	sub	r3, r5, #1
   1bf94:	add	r4, r4, r5
   1bf98:	bl	235c <InflateSkipData>
   1bf9c:	ldr	r3, [sp, #252]	; 0xfc
   1bfa0:	cmp	r3, #1
   1bfa4:	ble	1c0cc <ReadCompressedDataSlabN+0x1524>
   1bfa8:	ldr	r3, [sp, #76]	; 0x4c
   1bfac:	ldr	r1, [sl, #4]
   1bfb0:	add	r3, r3, #1
   1bfb4:	sdiv	r2, r3, r1
   1bfb8:	str	r3, [sp, #76]	; 0x4c
   1bfbc:	mls	r3, r1, r2, r3
   1bfc0:	cmp	r3, #0
   1bfc4:	bne	1e5dc <ReadCompressedDataSlabN+0x3a34>
   1bfc8:	add	r3, sl, #4
   1bfcc:	add	r2, sp, #116	; 0x74
   1bfd0:	str	fp, [sp, #16]
   1bfd4:	add	r6, sp, #76	; 0x4c
   1bfd8:	mov	r7, #1
   1bfdc:	str	r8, [sp, #264]	; 0x108
   1bfe0:	mov	r8, r2
   1bfe4:	str	sl, [sp, #268]	; 0x10c
   1bfe8:	mov	sl, r3
   1bfec:	ldr	r9, [sp, #260]	; 0x104
   1bff0:	b	1c02c <ReadCompressedDataSlabN+0x1484>
   1bff4:	cmp	r3, #0
   1bff8:	bne	1c074 <ReadCompressedDataSlabN+0x14cc>
   1bffc:	ldr	r3, [sp, #252]	; 0xfc
   1c000:	add	r7, r7, #1
   1c004:	cmp	r3, r7
   1c008:	beq	1c0ec <ReadCompressedDataSlabN+0x1544>
   1c00c:	ldr	r3, [r6]
   1c010:	ldr	r1, [sl, #4]!
   1c014:	add	r3, r3, #1
   1c018:	sdiv	r2, r3, r1
   1c01c:	str	r3, [r6]
   1c020:	mls	r3, r1, r2, r3
   1c024:	cmp	r3, #0
   1c028:	bne	1c094 <ReadCompressedDataSlabN+0x14ec>
   1c02c:	ldr	r5, [r8], #4
   1c030:	mov	r3, #0
   1c034:	str	r3, [r6], #4
   1c038:	ldr	r3, [r9, #4]!
   1c03c:	sdiv	r2, r4, r5
   1c040:	mls	r2, r5, r2, r4
   1c044:	cmp	r2, #0
   1c048:	beq	1bff4 <ReadCompressedDataSlabN+0x144c>
   1c04c:	ldr	fp, [r8, #-8]
   1c050:	sub	r5, r5, r2
   1c054:	ldrd	r0, [sp, #12]
   1c058:	ldr	r2, [sp, #248]	; 0xf8
   1c05c:	mla	r3, r3, fp, r5
   1c060:	bl	235c <InflateSkipData>
   1c064:	ldr	r3, [r9]
   1c068:	mla	r5, r3, fp, r5
   1c06c:	add	r4, r4, r5
   1c070:	b	1bffc <ReadCompressedDataSlabN+0x1454>
   1c074:	ldr	r5, [r8, #-8]
   1c078:	ldrd	r0, [sp, #12]
   1c07c:	ldr	r2, [sp, #248]	; 0xf8
   1c080:	mul	r3, r3, r5
   1c084:	bl	235c <InflateSkipData>
   1c088:	ldr	r3, [r9]
   1c08c:	mla	r4, r3, r5, r4
   1c090:	b	1bffc <ReadCompressedDataSlabN+0x1454>
   1c094:	ldr	fp, [sp, #16]
   1c098:	ldr	r8, [sp, #264]	; 0x108
   1c09c:	ldr	sl, [sp, #268]	; 0x10c
   1c0a0:	add	r3, sp, #208	; 0xd0
   1c0a4:	add	r7, r3, r7, lsl #2
   1c0a8:	ldr	ip, [r7, #-176]	; 0xffffff50
   1c0ac:	cmp	ip, #0
   1c0b0:	beq	1c0cc <ReadCompressedDataSlabN+0x1524>
   1c0b4:	mov	r3, ip
   1c0b8:	mov	r1, fp
   1c0bc:	ldr	r0, [sp, #12]
   1c0c0:	add	r4, r4, ip
   1c0c4:	ldr	r2, [sp, #248]	; 0xf8
   1c0c8:	bl	235c <InflateSkipData>
   1c0cc:	ldr	r3, [sl]
   1c0d0:	ldr	r2, [sp, #24]
   1c0d4:	add	r3, r2, r3
   1c0d8:	ldr	r2, [sp, #20]
   1c0dc:	str	r3, [sp, #24]
   1c0e0:	cmp	r3, r2
   1c0e4:	blt	1beac <ReadCompressedDataSlabN+0x1304>
   1c0e8:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1c0ec:	ldr	fp, [sp, #16]
   1c0f0:	ldr	r8, [sp, #264]	; 0x108
   1c0f4:	ldr	sl, [sp, #268]	; 0x10c
   1c0f8:	b	1c0cc <ReadCompressedDataSlabN+0x1524>
   1c0fc:	mov	r1, fp
   1c100:	ldr	r0, [sp, #12]
   1c104:	ldr	r2, [sp, #248]	; 0xf8
   1c108:	bl	235c <InflateSkipData>
   1c10c:	ldr	r3, [sp, #260]	; 0x104
   1c110:	ldr	r3, [r3]
   1c114:	add	r4, r4, r3
   1c118:	b	1bebc <ReadCompressedDataSlabN+0x1314>
   1c11c:	ldr	sl, [sp, #16]
   1c120:	ldr	fp, [sp, #24]
   1c124:	ldr	r8, [sp, #264]	; 0x108
   1c128:	mov	r3, r4
   1c12c:	mov	r1, fp
   1c130:	mov	r0, sl
   1c134:	ldr	r2, [sp, #248]	; 0xf8
   1c138:	bl	235c <InflateSkipData>
   1c13c:	ldr	r3, [r8]
   1c140:	cmp	r3, #1
   1c144:	ldr	r3, [sp, #20]
   1c148:	beq	1db68 <ReadCompressedDataSlabN+0x2fc0>
   1c14c:	cmp	r3, #0
   1c150:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1c154:	str	sl, [sp, #12]
   1c158:	mov	r3, #0
   1c15c:	ldr	sl, [sp, #268]	; 0x10c
   1c160:	str	r3, [sp, #24]
   1c164:	ldr	r3, [sp, #260]	; 0x104
   1c168:	ldr	r3, [r3]
   1c16c:	cmp	r3, #0
   1c170:	bne	1c3b4 <ReadCompressedDataSlabN+0x180c>
   1c174:	ldr	r3, [sl]
   1c178:	ldr	r1, [sp, #24]
   1c17c:	cmp	r3, #1
   1c180:	mov	r2, r1
   1c184:	ble	1c1f4 <ReadCompressedDataSlabN+0x164c>
   1c188:	ldr	r3, [sp, #8]
   1c18c:	mov	r5, #0
   1c190:	ldr	r7, [sp, #12]
   1c194:	ldr	r9, [sp, #248]	; 0xf8
   1c198:	add	r6, r3, r1
   1c19c:	mov	r1, #1
   1c1a0:	add	r2, r6, r5
   1c1a4:	mov	r3, r9
   1c1a8:	mov	r0, r7
   1c1ac:	str	r1, [sp]
   1c1b0:	mov	r1, fp
   1c1b4:	add	r5, r5, #1
   1c1b8:	bl	163c4 <ReadCompressedInt8Data>
   1c1bc:	ldr	r3, [r8]
   1c1c0:	mov	r2, r9
   1c1c4:	mov	r1, fp
   1c1c8:	mov	r0, r7
   1c1cc:	sub	r3, r3, #1
   1c1d0:	bl	235c <InflateSkipData>
   1c1d4:	ldr	r3, [sl]
   1c1d8:	ldr	r2, [r8]
   1c1dc:	sub	r3, r3, #1
   1c1e0:	cmp	r3, r5
   1c1e4:	add	r4, r4, r2
   1c1e8:	bgt	1c19c <ReadCompressedDataSlabN+0x15f4>
   1c1ec:	ldr	r3, [sp, #24]
   1c1f0:	add	r2, r3, r5
   1c1f4:	ldr	r3, [sp, #8]
   1c1f8:	mov	r1, #1
   1c1fc:	ldr	r6, [sp, #12]
   1c200:	str	r1, [sp]
   1c204:	mov	r1, fp
   1c208:	add	r2, r3, r2
   1c20c:	ldr	r3, [sp, #248]	; 0xf8
   1c210:	mov	r0, r6
   1c214:	bl	163c4 <ReadCompressedInt8Data>
   1c218:	ldr	r3, [sl]
   1c21c:	mov	r1, fp
   1c220:	ldr	r0, [sp, #260]	; 0x104
   1c224:	ldr	lr, [r8]
   1c228:	sub	r3, r3, #1
   1c22c:	ldr	r2, [sp, #248]	; 0xf8
   1c230:	ldr	ip, [r0]
   1c234:	ldr	r0, [sp, #256]	; 0x100
   1c238:	mla	r3, lr, r3, ip
   1c23c:	ldr	r5, [r0]
   1c240:	mov	r0, r6
   1c244:	sub	r5, r5, r3
   1c248:	sub	r3, r5, #1
   1c24c:	add	r4, r4, r5
   1c250:	bl	235c <InflateSkipData>
   1c254:	ldr	r3, [sp, #252]	; 0xfc
   1c258:	cmp	r3, #1
   1c25c:	ble	1c384 <ReadCompressedDataSlabN+0x17dc>
   1c260:	ldr	r3, [sp, #76]	; 0x4c
   1c264:	ldr	r1, [sl, #4]
   1c268:	add	r3, r3, #1
   1c26c:	sdiv	r2, r3, r1
   1c270:	str	r3, [sp, #76]	; 0x4c
   1c274:	mls	r3, r1, r2, r3
   1c278:	cmp	r3, #0
   1c27c:	bne	1e5bc <ReadCompressedDataSlabN+0x3a14>
   1c280:	add	r3, sl, #4
   1c284:	add	r2, sp, #116	; 0x74
   1c288:	str	fp, [sp, #16]
   1c28c:	add	r6, sp, #76	; 0x4c
   1c290:	mov	r7, #1
   1c294:	str	r8, [sp, #264]	; 0x108
   1c298:	mov	r8, r2
   1c29c:	str	sl, [sp, #268]	; 0x10c
   1c2a0:	mov	sl, r3
   1c2a4:	ldr	r9, [sp, #260]	; 0x104
   1c2a8:	b	1c2e4 <ReadCompressedDataSlabN+0x173c>
   1c2ac:	cmp	r3, #0
   1c2b0:	bne	1c32c <ReadCompressedDataSlabN+0x1784>
   1c2b4:	ldr	r3, [sp, #252]	; 0xfc
   1c2b8:	add	r7, r7, #1
   1c2bc:	cmp	r3, r7
   1c2c0:	beq	1c3a4 <ReadCompressedDataSlabN+0x17fc>
   1c2c4:	ldr	r3, [r6]
   1c2c8:	ldr	r1, [sl, #4]!
   1c2cc:	add	r3, r3, #1
   1c2d0:	sdiv	r2, r3, r1
   1c2d4:	str	r3, [r6]
   1c2d8:	mls	r3, r1, r2, r3
   1c2dc:	cmp	r3, #0
   1c2e0:	bne	1c34c <ReadCompressedDataSlabN+0x17a4>
   1c2e4:	ldr	r5, [r8], #4
   1c2e8:	mov	r3, #0
   1c2ec:	str	r3, [r6], #4
   1c2f0:	ldr	r3, [r9, #4]!
   1c2f4:	sdiv	r2, r4, r5
   1c2f8:	mls	r2, r5, r2, r4
   1c2fc:	cmp	r2, #0
   1c300:	beq	1c2ac <ReadCompressedDataSlabN+0x1704>
   1c304:	ldr	fp, [r8, #-8]
   1c308:	sub	r5, r5, r2
   1c30c:	ldrd	r0, [sp, #12]
   1c310:	ldr	r2, [sp, #248]	; 0xf8
   1c314:	mla	r3, r3, fp, r5
   1c318:	bl	235c <InflateSkipData>
   1c31c:	ldr	r3, [r9]
   1c320:	mla	r5, r3, fp, r5
   1c324:	add	r4, r4, r5
   1c328:	b	1c2b4 <ReadCompressedDataSlabN+0x170c>
   1c32c:	ldr	r5, [r8, #-8]
   1c330:	ldrd	r0, [sp, #12]
   1c334:	ldr	r2, [sp, #248]	; 0xf8
   1c338:	mul	r3, r3, r5
   1c33c:	bl	235c <InflateSkipData>
   1c340:	ldr	r3, [r9]
   1c344:	mla	r4, r3, r5, r4
   1c348:	b	1c2b4 <ReadCompressedDataSlabN+0x170c>
   1c34c:	ldr	fp, [sp, #16]
   1c350:	ldr	r8, [sp, #264]	; 0x108
   1c354:	ldr	sl, [sp, #268]	; 0x10c
   1c358:	add	r3, sp, #208	; 0xd0
   1c35c:	add	r7, r3, r7, lsl #2
   1c360:	ldr	ip, [r7, #-176]	; 0xffffff50
   1c364:	cmp	ip, #0
   1c368:	beq	1c384 <ReadCompressedDataSlabN+0x17dc>
   1c36c:	mov	r3, ip
   1c370:	mov	r1, fp
   1c374:	ldr	r0, [sp, #12]
   1c378:	add	r4, r4, ip
   1c37c:	ldr	r2, [sp, #248]	; 0xf8
   1c380:	bl	235c <InflateSkipData>
   1c384:	ldr	r3, [sl]
   1c388:	ldr	r2, [sp, #24]
   1c38c:	add	r3, r2, r3
   1c390:	ldr	r2, [sp, #20]
   1c394:	str	r3, [sp, #24]
   1c398:	cmp	r3, r2
   1c39c:	blt	1c164 <ReadCompressedDataSlabN+0x15bc>
   1c3a0:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1c3a4:	ldr	fp, [sp, #16]
   1c3a8:	ldr	r8, [sp, #264]	; 0x108
   1c3ac:	ldr	sl, [sp, #268]	; 0x10c
   1c3b0:	b	1c384 <ReadCompressedDataSlabN+0x17dc>
   1c3b4:	mov	r1, fp
   1c3b8:	ldr	r0, [sp, #12]
   1c3bc:	ldr	r2, [sp, #248]	; 0xf8
   1c3c0:	bl	235c <InflateSkipData>
   1c3c4:	ldr	r3, [sp, #260]	; 0x104
   1c3c8:	ldr	r3, [r3]
   1c3cc:	add	r4, r4, r3
   1c3d0:	b	1c174 <ReadCompressedDataSlabN+0x15cc>
   1c3d4:	ldr	sl, [sp, #16]
   1c3d8:	ldr	fp, [sp, #24]
   1c3dc:	ldr	r8, [sp, #264]	; 0x108
   1c3e0:	mov	r3, r4
   1c3e4:	mov	r1, fp
   1c3e8:	mov	r0, sl
   1c3ec:	ldr	r2, [sp, #248]	; 0xf8
   1c3f0:	bl	235c <InflateSkipData>
   1c3f4:	ldr	r3, [r8]
   1c3f8:	cmp	r3, #1
   1c3fc:	ldr	r3, [sp, #20]
   1c400:	beq	1d544 <ReadCompressedDataSlabN+0x299c>
   1c404:	cmp	r3, #0
   1c408:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1c40c:	str	sl, [sp, #12]
   1c410:	mov	r3, #0
   1c414:	ldr	sl, [sp, #268]	; 0x10c
   1c418:	str	r3, [sp, #24]
   1c41c:	ldr	r3, [sp, #260]	; 0x104
   1c420:	ldr	r3, [r3]
   1c424:	cmp	r3, #0
   1c428:	bne	1c670 <ReadCompressedDataSlabN+0x1ac8>
   1c42c:	ldr	r3, [sl]
   1c430:	ldr	r1, [sp, #24]
   1c434:	cmp	r3, #1
   1c438:	mov	r2, r1
   1c43c:	ble	1c4b0 <ReadCompressedDataSlabN+0x1908>
   1c440:	ldr	r3, [sp, #8]
   1c444:	mov	r5, #0
   1c448:	ldr	r7, [sp, #12]
   1c44c:	ldr	r9, [sp, #248]	; 0xf8
   1c450:	add	r6, r3, r1, lsl #2
   1c454:	mov	r1, #1
   1c458:	mov	r2, r6
   1c45c:	mov	r3, r9
   1c460:	mov	r0, r7
   1c464:	str	r1, [sp]
   1c468:	mov	r1, fp
   1c46c:	add	r5, r5, #1
   1c470:	bl	15378 <ReadCompressedUInt32Data>
   1c474:	ldr	r3, [r8]
   1c478:	mov	r2, r9
   1c47c:	mov	r1, fp
   1c480:	mov	r0, r7
   1c484:	add	r6, r6, #4
   1c488:	sub	r3, r3, #1
   1c48c:	bl	235c <InflateSkipData>
   1c490:	ldr	r3, [sl]
   1c494:	ldr	r2, [r8]
   1c498:	sub	r3, r3, #1
   1c49c:	cmp	r3, r5
   1c4a0:	add	r4, r4, r2
   1c4a4:	bgt	1c454 <ReadCompressedDataSlabN+0x18ac>
   1c4a8:	ldr	r3, [sp, #24]
   1c4ac:	add	r2, r3, r5
   1c4b0:	ldr	r3, [sp, #8]
   1c4b4:	mov	ip, #1
   1c4b8:	mov	r1, fp
   1c4bc:	ldr	r6, [sp, #12]
   1c4c0:	str	ip, [sp]
   1c4c4:	add	r2, r3, r2, lsl #2
   1c4c8:	ldr	r3, [sp, #248]	; 0xf8
   1c4cc:	mov	r0, r6
   1c4d0:	bl	15378 <ReadCompressedUInt32Data>
   1c4d4:	ldr	r3, [sl]
   1c4d8:	mov	r1, fp
   1c4dc:	ldr	r0, [sp, #260]	; 0x104
   1c4e0:	ldr	lr, [r8]
   1c4e4:	sub	r3, r3, #1
   1c4e8:	ldr	r2, [sp, #248]	; 0xf8
   1c4ec:	ldr	ip, [r0]
   1c4f0:	ldr	r0, [sp, #256]	; 0x100
   1c4f4:	mla	r3, lr, r3, ip
   1c4f8:	ldr	r5, [r0]
   1c4fc:	mov	r0, r6
   1c500:	sub	r5, r5, r3
   1c504:	sub	r3, r5, #1
   1c508:	add	r4, r4, r5
   1c50c:	bl	235c <InflateSkipData>
   1c510:	ldr	r3, [sp, #252]	; 0xfc
   1c514:	cmp	r3, #1
   1c518:	ble	1c640 <ReadCompressedDataSlabN+0x1a98>
   1c51c:	ldr	r3, [sp, #76]	; 0x4c
   1c520:	ldr	r1, [sl, #4]
   1c524:	add	r3, r3, #1
   1c528:	sdiv	r2, r3, r1
   1c52c:	str	r3, [sp, #76]	; 0x4c
   1c530:	mls	r3, r1, r2, r3
   1c534:	cmp	r3, #0
   1c538:	bne	1e5cc <ReadCompressedDataSlabN+0x3a24>
   1c53c:	add	r3, sl, #4
   1c540:	add	r2, sp, #116	; 0x74
   1c544:	str	fp, [sp, #16]
   1c548:	add	r6, sp, #76	; 0x4c
   1c54c:	mov	r7, #1
   1c550:	str	r8, [sp, #264]	; 0x108
   1c554:	mov	r8, r2
   1c558:	str	sl, [sp, #268]	; 0x10c
   1c55c:	mov	sl, r3
   1c560:	ldr	r9, [sp, #260]	; 0x104
   1c564:	b	1c5a0 <ReadCompressedDataSlabN+0x19f8>
   1c568:	cmp	r3, #0
   1c56c:	bne	1c5e8 <ReadCompressedDataSlabN+0x1a40>
   1c570:	ldr	r3, [sp, #252]	; 0xfc
   1c574:	add	r7, r7, #1
   1c578:	cmp	r3, r7
   1c57c:	beq	1c660 <ReadCompressedDataSlabN+0x1ab8>
   1c580:	ldr	r3, [r6]
   1c584:	ldr	r1, [sl, #4]!
   1c588:	add	r3, r3, #1
   1c58c:	sdiv	r2, r3, r1
   1c590:	str	r3, [r6]
   1c594:	mls	r3, r1, r2, r3
   1c598:	cmp	r3, #0
   1c59c:	bne	1c608 <ReadCompressedDataSlabN+0x1a60>
   1c5a0:	ldr	r5, [r8], #4
   1c5a4:	mov	r3, #0
   1c5a8:	str	r3, [r6], #4
   1c5ac:	ldr	r3, [r9, #4]!
   1c5b0:	sdiv	r2, r4, r5
   1c5b4:	mls	r2, r5, r2, r4
   1c5b8:	cmp	r2, #0
   1c5bc:	beq	1c568 <ReadCompressedDataSlabN+0x19c0>
   1c5c0:	ldr	fp, [r8, #-8]
   1c5c4:	sub	r5, r5, r2
   1c5c8:	ldrd	r0, [sp, #12]
   1c5cc:	ldr	r2, [sp, #248]	; 0xf8
   1c5d0:	mla	r3, r3, fp, r5
   1c5d4:	bl	235c <InflateSkipData>
   1c5d8:	ldr	r3, [r9]
   1c5dc:	mla	r5, r3, fp, r5
   1c5e0:	add	r4, r4, r5
   1c5e4:	b	1c570 <ReadCompressedDataSlabN+0x19c8>
   1c5e8:	ldr	r5, [r8, #-8]
   1c5ec:	ldrd	r0, [sp, #12]
   1c5f0:	ldr	r2, [sp, #248]	; 0xf8
   1c5f4:	mul	r3, r3, r5
   1c5f8:	bl	235c <InflateSkipData>
   1c5fc:	ldr	r3, [r9]
   1c600:	mla	r4, r3, r5, r4
   1c604:	b	1c570 <ReadCompressedDataSlabN+0x19c8>
   1c608:	ldr	fp, [sp, #16]
   1c60c:	ldr	r8, [sp, #264]	; 0x108
   1c610:	ldr	sl, [sp, #268]	; 0x10c
   1c614:	add	r3, sp, #208	; 0xd0
   1c618:	add	r7, r3, r7, lsl #2
   1c61c:	ldr	ip, [r7, #-176]	; 0xffffff50
   1c620:	cmp	ip, #0
   1c624:	beq	1c640 <ReadCompressedDataSlabN+0x1a98>
   1c628:	mov	r3, ip
   1c62c:	mov	r1, fp
   1c630:	ldr	r0, [sp, #12]
   1c634:	add	r4, r4, ip
   1c638:	ldr	r2, [sp, #248]	; 0xf8
   1c63c:	bl	235c <InflateSkipData>
   1c640:	ldr	r3, [sl]
   1c644:	ldr	r2, [sp, #24]
   1c648:	add	r3, r2, r3
   1c64c:	ldr	r2, [sp, #20]
   1c650:	str	r3, [sp, #24]
   1c654:	cmp	r3, r2
   1c658:	blt	1c41c <ReadCompressedDataSlabN+0x1874>
   1c65c:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1c660:	ldr	fp, [sp, #16]
   1c664:	ldr	r8, [sp, #264]	; 0x108
   1c668:	ldr	sl, [sp, #268]	; 0x10c
   1c66c:	b	1c640 <ReadCompressedDataSlabN+0x1a98>
   1c670:	mov	r1, fp
   1c674:	ldr	r0, [sp, #12]
   1c678:	ldr	r2, [sp, #248]	; 0xf8
   1c67c:	bl	235c <InflateSkipData>
   1c680:	ldr	r3, [sp, #260]	; 0x104
   1c684:	ldr	r3, [r3]
   1c688:	add	r4, r4, r3
   1c68c:	b	1c42c <ReadCompressedDataSlabN+0x1884>
   1c690:	ldr	sl, [sp, #16]
   1c694:	ldr	fp, [sp, #24]
   1c698:	ldr	r8, [sp, #264]	; 0x108
   1c69c:	mov	r3, r4
   1c6a0:	mov	r1, fp
   1c6a4:	mov	r0, sl
   1c6a8:	ldr	r2, [sp, #248]	; 0xf8
   1c6ac:	bl	235c <InflateSkipData>
   1c6b0:	ldr	r3, [r8]
   1c6b4:	cmp	r3, #1
   1c6b8:	ldr	r3, [sp, #20]
   1c6bc:	beq	1d95c <ReadCompressedDataSlabN+0x2db4>
   1c6c0:	cmp	r3, #0
   1c6c4:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1c6c8:	str	sl, [sp, #12]
   1c6cc:	mov	r3, #0
   1c6d0:	ldr	sl, [sp, #268]	; 0x10c
   1c6d4:	str	r3, [sp, #24]
   1c6d8:	ldr	r3, [sp, #260]	; 0x104
   1c6dc:	ldr	r3, [r3]
   1c6e0:	cmp	r3, #0
   1c6e4:	bne	1c92c <ReadCompressedDataSlabN+0x1d84>
   1c6e8:	ldr	r3, [sl]
   1c6ec:	ldr	r1, [sp, #24]
   1c6f0:	cmp	r3, #1
   1c6f4:	mov	r2, r1
   1c6f8:	ble	1c76c <ReadCompressedDataSlabN+0x1bc4>
   1c6fc:	ldr	r3, [sp, #8]
   1c700:	mov	r5, #0
   1c704:	ldr	r7, [sp, #12]
   1c708:	ldr	r9, [sp, #248]	; 0xf8
   1c70c:	add	r6, r3, r1, lsl #2
   1c710:	mov	r1, #1
   1c714:	mov	r2, r6
   1c718:	mov	r3, r9
   1c71c:	mov	r0, r7
   1c720:	str	r1, [sp]
   1c724:	mov	r1, fp
   1c728:	add	r5, r5, #1
   1c72c:	bl	14e14 <ReadCompressedInt32Data>
   1c730:	ldr	r3, [r8]
   1c734:	mov	r2, r9
   1c738:	mov	r1, fp
   1c73c:	mov	r0, r7
   1c740:	add	r6, r6, #4
   1c744:	sub	r3, r3, #1
   1c748:	bl	235c <InflateSkipData>
   1c74c:	ldr	r3, [sl]
   1c750:	ldr	r2, [r8]
   1c754:	sub	r3, r3, #1
   1c758:	cmp	r3, r5
   1c75c:	add	r4, r4, r2
   1c760:	bgt	1c710 <ReadCompressedDataSlabN+0x1b68>
   1c764:	ldr	r3, [sp, #24]
   1c768:	add	r2, r3, r5
   1c76c:	ldr	r3, [sp, #8]
   1c770:	mov	ip, #1
   1c774:	mov	r1, fp
   1c778:	ldr	r6, [sp, #12]
   1c77c:	str	ip, [sp]
   1c780:	add	r2, r3, r2, lsl #2
   1c784:	ldr	r3, [sp, #248]	; 0xf8
   1c788:	mov	r0, r6
   1c78c:	bl	14e14 <ReadCompressedInt32Data>
   1c790:	ldr	r3, [sl]
   1c794:	mov	r1, fp
   1c798:	ldr	r0, [sp, #260]	; 0x104
   1c79c:	ldr	lr, [r8]
   1c7a0:	sub	r3, r3, #1
   1c7a4:	ldr	r2, [sp, #248]	; 0xf8
   1c7a8:	ldr	ip, [r0]
   1c7ac:	ldr	r0, [sp, #256]	; 0x100
   1c7b0:	mla	r3, lr, r3, ip
   1c7b4:	ldr	r5, [r0]
   1c7b8:	mov	r0, r6
   1c7bc:	sub	r5, r5, r3
   1c7c0:	sub	r3, r5, #1
   1c7c4:	add	r4, r4, r5
   1c7c8:	bl	235c <InflateSkipData>
   1c7cc:	ldr	r3, [sp, #252]	; 0xfc
   1c7d0:	cmp	r3, #1
   1c7d4:	ble	1c8fc <ReadCompressedDataSlabN+0x1d54>
   1c7d8:	ldr	r3, [sp, #76]	; 0x4c
   1c7dc:	ldr	r1, [sl, #4]
   1c7e0:	add	r3, r3, #1
   1c7e4:	sdiv	r2, r3, r1
   1c7e8:	str	r3, [sp, #76]	; 0x4c
   1c7ec:	mls	r3, r1, r2, r3
   1c7f0:	cmp	r3, #0
   1c7f4:	bne	1e5a4 <ReadCompressedDataSlabN+0x39fc>
   1c7f8:	add	r3, sl, #4
   1c7fc:	add	r2, sp, #116	; 0x74
   1c800:	str	fp, [sp, #16]
   1c804:	add	r6, sp, #76	; 0x4c
   1c808:	mov	r7, #1
   1c80c:	str	r8, [sp, #264]	; 0x108
   1c810:	mov	r8, r2
   1c814:	str	sl, [sp, #268]	; 0x10c
   1c818:	mov	sl, r3
   1c81c:	ldr	r9, [sp, #260]	; 0x104
   1c820:	b	1c85c <ReadCompressedDataSlabN+0x1cb4>
   1c824:	cmp	r3, #0
   1c828:	bne	1c8a4 <ReadCompressedDataSlabN+0x1cfc>
   1c82c:	ldr	r3, [sp, #252]	; 0xfc
   1c830:	add	r7, r7, #1
   1c834:	cmp	r3, r7
   1c838:	beq	1c91c <ReadCompressedDataSlabN+0x1d74>
   1c83c:	ldr	r3, [r6]
   1c840:	ldr	r1, [sl, #4]!
   1c844:	add	r3, r3, #1
   1c848:	sdiv	r2, r3, r1
   1c84c:	str	r3, [r6]
   1c850:	mls	r3, r1, r2, r3
   1c854:	cmp	r3, #0
   1c858:	bne	1c8c4 <ReadCompressedDataSlabN+0x1d1c>
   1c85c:	ldr	r5, [r8], #4
   1c860:	mov	r3, #0
   1c864:	str	r3, [r6], #4
   1c868:	ldr	r3, [r9, #4]!
   1c86c:	sdiv	r2, r4, r5
   1c870:	mls	r2, r5, r2, r4
   1c874:	cmp	r2, #0
   1c878:	beq	1c824 <ReadCompressedDataSlabN+0x1c7c>
   1c87c:	ldr	fp, [r8, #-8]
   1c880:	sub	r5, r5, r2
   1c884:	ldrd	r0, [sp, #12]
   1c888:	ldr	r2, [sp, #248]	; 0xf8
   1c88c:	mla	r3, r3, fp, r5
   1c890:	bl	235c <InflateSkipData>
   1c894:	ldr	r3, [r9]
   1c898:	mla	r5, r3, fp, r5
   1c89c:	add	r4, r4, r5
   1c8a0:	b	1c82c <ReadCompressedDataSlabN+0x1c84>
   1c8a4:	ldr	r5, [r8, #-8]
   1c8a8:	ldrd	r0, [sp, #12]
   1c8ac:	ldr	r2, [sp, #248]	; 0xf8
   1c8b0:	mul	r3, r3, r5
   1c8b4:	bl	235c <InflateSkipData>
   1c8b8:	ldr	r3, [r9]
   1c8bc:	mla	r4, r3, r5, r4
   1c8c0:	b	1c82c <ReadCompressedDataSlabN+0x1c84>
   1c8c4:	ldr	fp, [sp, #16]
   1c8c8:	ldr	r8, [sp, #264]	; 0x108
   1c8cc:	ldr	sl, [sp, #268]	; 0x10c
   1c8d0:	add	r3, sp, #208	; 0xd0
   1c8d4:	add	r7, r3, r7, lsl #2
   1c8d8:	ldr	ip, [r7, #-176]	; 0xffffff50
   1c8dc:	cmp	ip, #0
   1c8e0:	beq	1c8fc <ReadCompressedDataSlabN+0x1d54>
   1c8e4:	mov	r3, ip
   1c8e8:	mov	r1, fp
   1c8ec:	ldr	r0, [sp, #12]
   1c8f0:	add	r4, r4, ip
   1c8f4:	ldr	r2, [sp, #248]	; 0xf8
   1c8f8:	bl	235c <InflateSkipData>
   1c8fc:	ldr	r3, [sl]
   1c900:	ldr	r2, [sp, #24]
   1c904:	add	r3, r2, r3
   1c908:	ldr	r2, [sp, #20]
   1c90c:	str	r3, [sp, #24]
   1c910:	cmp	r3, r2
   1c914:	blt	1c6d8 <ReadCompressedDataSlabN+0x1b30>
   1c918:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1c91c:	ldr	fp, [sp, #16]
   1c920:	ldr	r8, [sp, #264]	; 0x108
   1c924:	ldr	sl, [sp, #268]	; 0x10c
   1c928:	b	1c8fc <ReadCompressedDataSlabN+0x1d54>
   1c92c:	mov	r1, fp
   1c930:	ldr	r0, [sp, #12]
   1c934:	ldr	r2, [sp, #248]	; 0xf8
   1c938:	bl	235c <InflateSkipData>
   1c93c:	ldr	r3, [sp, #260]	; 0x104
   1c940:	ldr	r3, [r3]
   1c944:	add	r4, r4, r3
   1c948:	b	1c6e8 <ReadCompressedDataSlabN+0x1b40>
   1c94c:	ldr	sl, [sp, #16]
   1c950:	ldr	fp, [sp, #24]
   1c954:	ldr	r8, [sp, #264]	; 0x108
   1c958:	mov	r3, r4
   1c95c:	mov	r1, fp
   1c960:	mov	r0, sl
   1c964:	ldr	r2, [sp, #248]	; 0xf8
   1c968:	bl	235c <InflateSkipData>
   1c96c:	ldr	r3, [r8]
   1c970:	cmp	r3, #1
   1c974:	ldr	r3, [sp, #20]
   1c978:	beq	1d750 <ReadCompressedDataSlabN+0x2ba8>
   1c97c:	cmp	r3, #0
   1c980:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1c984:	str	sl, [sp, #12]
   1c988:	mov	r3, #0
   1c98c:	ldr	sl, [sp, #268]	; 0x10c
   1c990:	str	r3, [sp, #24]
   1c994:	ldr	r3, [sp, #260]	; 0x104
   1c998:	ldr	r3, [r3]
   1c99c:	cmp	r3, #0
   1c9a0:	bne	1cbe8 <ReadCompressedDataSlabN+0x2040>
   1c9a4:	ldr	r3, [sl]
   1c9a8:	ldr	r1, [sp, #24]
   1c9ac:	cmp	r3, #1
   1c9b0:	mov	r2, r1
   1c9b4:	ble	1ca28 <ReadCompressedDataSlabN+0x1e80>
   1c9b8:	ldr	r3, [sp, #8]
   1c9bc:	mov	r5, #0
   1c9c0:	ldr	r7, [sp, #12]
   1c9c4:	ldr	r9, [sp, #248]	; 0xf8
   1c9c8:	add	r6, r3, r1, lsl #1
   1c9cc:	mov	r1, #1
   1c9d0:	mov	r2, r6
   1c9d4:	mov	r3, r9
   1c9d8:	mov	r0, r7
   1c9dc:	str	r1, [sp]
   1c9e0:	mov	r1, fp
   1c9e4:	add	r5, r5, #1
   1c9e8:	bl	15e50 <ReadCompressedUInt16Data>
   1c9ec:	ldr	r3, [r8]
   1c9f0:	mov	r2, r9
   1c9f4:	mov	r1, fp
   1c9f8:	mov	r0, r7
   1c9fc:	add	r6, r6, #2
   1ca00:	sub	r3, r3, #1
   1ca04:	bl	235c <InflateSkipData>
   1ca08:	ldr	r3, [sl]
   1ca0c:	ldr	r2, [r8]
   1ca10:	sub	r3, r3, #1
   1ca14:	cmp	r3, r5
   1ca18:	add	r4, r4, r2
   1ca1c:	bgt	1c9cc <ReadCompressedDataSlabN+0x1e24>
   1ca20:	ldr	r3, [sp, #24]
   1ca24:	add	r2, r3, r5
   1ca28:	ldr	r3, [sp, #8]
   1ca2c:	mov	ip, #1
   1ca30:	mov	r1, fp
   1ca34:	ldr	r6, [sp, #12]
   1ca38:	str	ip, [sp]
   1ca3c:	add	r2, r3, r2, lsl #1
   1ca40:	ldr	r3, [sp, #248]	; 0xf8
   1ca44:	mov	r0, r6
   1ca48:	bl	15e50 <ReadCompressedUInt16Data>
   1ca4c:	ldr	r3, [sl]
   1ca50:	mov	r1, fp
   1ca54:	ldr	r0, [sp, #260]	; 0x104
   1ca58:	ldr	lr, [r8]
   1ca5c:	sub	r3, r3, #1
   1ca60:	ldr	r2, [sp, #248]	; 0xf8
   1ca64:	ldr	ip, [r0]
   1ca68:	ldr	r0, [sp, #256]	; 0x100
   1ca6c:	mla	r3, lr, r3, ip
   1ca70:	ldr	r5, [r0]
   1ca74:	mov	r0, r6
   1ca78:	sub	r5, r5, r3
   1ca7c:	sub	r3, r5, #1
   1ca80:	add	r4, r4, r5
   1ca84:	bl	235c <InflateSkipData>
   1ca88:	ldr	r3, [sp, #252]	; 0xfc
   1ca8c:	cmp	r3, #1
   1ca90:	ble	1cbb8 <ReadCompressedDataSlabN+0x2010>
   1ca94:	ldr	r3, [sp, #76]	; 0x4c
   1ca98:	ldr	r1, [sl, #4]
   1ca9c:	add	r3, r3, #1
   1caa0:	sdiv	r2, r3, r1
   1caa4:	str	r3, [sp, #76]	; 0x4c
   1caa8:	mls	r3, r1, r2, r3
   1caac:	cmp	r3, #0
   1cab0:	bne	1e5c4 <ReadCompressedDataSlabN+0x3a1c>
   1cab4:	add	r3, sl, #4
   1cab8:	add	r2, sp, #116	; 0x74
   1cabc:	str	fp, [sp, #16]
   1cac0:	add	r6, sp, #76	; 0x4c
   1cac4:	mov	r7, #1
   1cac8:	str	r8, [sp, #264]	; 0x108
   1cacc:	mov	r8, r2
   1cad0:	str	sl, [sp, #268]	; 0x10c
   1cad4:	mov	sl, r3
   1cad8:	ldr	r9, [sp, #260]	; 0x104
   1cadc:	b	1cb18 <ReadCompressedDataSlabN+0x1f70>
   1cae0:	cmp	r3, #0
   1cae4:	bne	1cb60 <ReadCompressedDataSlabN+0x1fb8>
   1cae8:	ldr	r3, [sp, #252]	; 0xfc
   1caec:	add	r7, r7, #1
   1caf0:	cmp	r3, r7
   1caf4:	beq	1cbd8 <ReadCompressedDataSlabN+0x2030>
   1caf8:	ldr	r3, [r6]
   1cafc:	ldr	r1, [sl, #4]!
   1cb00:	add	r3, r3, #1
   1cb04:	sdiv	r2, r3, r1
   1cb08:	str	r3, [r6]
   1cb0c:	mls	r3, r1, r2, r3
   1cb10:	cmp	r3, #0
   1cb14:	bne	1cb80 <ReadCompressedDataSlabN+0x1fd8>
   1cb18:	ldr	r5, [r8], #4
   1cb1c:	mov	r3, #0
   1cb20:	str	r3, [r6], #4
   1cb24:	ldr	r3, [r9, #4]!
   1cb28:	sdiv	r2, r4, r5
   1cb2c:	mls	r2, r5, r2, r4
   1cb30:	cmp	r2, #0
   1cb34:	beq	1cae0 <ReadCompressedDataSlabN+0x1f38>
   1cb38:	ldr	fp, [r8, #-8]
   1cb3c:	sub	r5, r5, r2
   1cb40:	ldrd	r0, [sp, #12]
   1cb44:	ldr	r2, [sp, #248]	; 0xf8
   1cb48:	mla	r3, r3, fp, r5
   1cb4c:	bl	235c <InflateSkipData>
   1cb50:	ldr	r3, [r9]
   1cb54:	mla	r5, r3, fp, r5
   1cb58:	add	r4, r4, r5
   1cb5c:	b	1cae8 <ReadCompressedDataSlabN+0x1f40>
   1cb60:	ldr	r5, [r8, #-8]
   1cb64:	ldrd	r0, [sp, #12]
   1cb68:	ldr	r2, [sp, #248]	; 0xf8
   1cb6c:	mul	r3, r3, r5
   1cb70:	bl	235c <InflateSkipData>
   1cb74:	ldr	r3, [r9]
   1cb78:	mla	r4, r3, r5, r4
   1cb7c:	b	1cae8 <ReadCompressedDataSlabN+0x1f40>
   1cb80:	ldr	fp, [sp, #16]
   1cb84:	ldr	r8, [sp, #264]	; 0x108
   1cb88:	ldr	sl, [sp, #268]	; 0x10c
   1cb8c:	add	r3, sp, #208	; 0xd0
   1cb90:	add	r7, r3, r7, lsl #2
   1cb94:	ldr	ip, [r7, #-176]	; 0xffffff50
   1cb98:	cmp	ip, #0
   1cb9c:	beq	1cbb8 <ReadCompressedDataSlabN+0x2010>
   1cba0:	mov	r3, ip
   1cba4:	mov	r1, fp
   1cba8:	ldr	r0, [sp, #12]
   1cbac:	add	r4, r4, ip
   1cbb0:	ldr	r2, [sp, #248]	; 0xf8
   1cbb4:	bl	235c <InflateSkipData>
   1cbb8:	ldr	r3, [sl]
   1cbbc:	ldr	r2, [sp, #24]
   1cbc0:	add	r3, r2, r3
   1cbc4:	ldr	r2, [sp, #20]
   1cbc8:	str	r3, [sp, #24]
   1cbcc:	cmp	r3, r2
   1cbd0:	blt	1c994 <ReadCompressedDataSlabN+0x1dec>
   1cbd4:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1cbd8:	ldr	fp, [sp, #16]
   1cbdc:	ldr	r8, [sp, #264]	; 0x108
   1cbe0:	ldr	sl, [sp, #268]	; 0x10c
   1cbe4:	b	1cbb8 <ReadCompressedDataSlabN+0x2010>
   1cbe8:	mov	r1, fp
   1cbec:	ldr	r0, [sp, #12]
   1cbf0:	ldr	r2, [sp, #248]	; 0xf8
   1cbf4:	bl	235c <InflateSkipData>
   1cbf8:	ldr	r3, [sp, #260]	; 0x104
   1cbfc:	ldr	r3, [r3]
   1cc00:	add	r4, r4, r3
   1cc04:	b	1c9a4 <ReadCompressedDataSlabN+0x1dfc>
   1cc08:	ldr	sl, [sp, #16]
   1cc0c:	ldr	fp, [sp, #24]
   1cc10:	ldr	r8, [sp, #264]	; 0x108
   1cc14:	mov	r3, r4
   1cc18:	mov	r1, fp
   1cc1c:	mov	r0, sl
   1cc20:	ldr	r2, [sp, #248]	; 0xf8
   1cc24:	bl	235c <InflateSkipData>
   1cc28:	ldr	r3, [r8]
   1cc2c:	cmp	r3, #1
   1cc30:	ldr	r3, [sp, #20]
   1cc34:	beq	1d338 <ReadCompressedDataSlabN+0x2790>
   1cc38:	cmp	r3, #0
   1cc3c:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1cc40:	str	sl, [sp, #12]
   1cc44:	mov	r3, #0
   1cc48:	ldr	sl, [sp, #268]	; 0x10c
   1cc4c:	str	r3, [sp, #24]
   1cc50:	ldr	r3, [sp, #260]	; 0x104
   1cc54:	ldr	r3, [r3]
   1cc58:	cmp	r3, #0
   1cc5c:	bne	1cea4 <ReadCompressedDataSlabN+0x22fc>
   1cc60:	ldr	r3, [sl]
   1cc64:	ldr	r1, [sp, #24]
   1cc68:	cmp	r3, #1
   1cc6c:	mov	r2, r1
   1cc70:	ble	1cce4 <ReadCompressedDataSlabN+0x213c>
   1cc74:	ldr	r3, [sp, #8]
   1cc78:	mov	r5, #0
   1cc7c:	ldr	r7, [sp, #12]
   1cc80:	ldr	r9, [sp, #248]	; 0xf8
   1cc84:	add	r6, r3, r1, lsl #1
   1cc88:	mov	r1, #1
   1cc8c:	mov	r2, r6
   1cc90:	mov	r3, r9
   1cc94:	mov	r0, r7
   1cc98:	str	r1, [sp]
   1cc9c:	mov	r1, fp
   1cca0:	add	r5, r5, #1
   1cca4:	bl	158dc <ReadCompressedInt16Data>
   1cca8:	ldr	r3, [r8]
   1ccac:	mov	r2, r9
   1ccb0:	mov	r1, fp
   1ccb4:	mov	r0, r7
   1ccb8:	add	r6, r6, #2
   1ccbc:	sub	r3, r3, #1
   1ccc0:	bl	235c <InflateSkipData>
   1ccc4:	ldr	r3, [sl]
   1ccc8:	ldr	r2, [r8]
   1cccc:	sub	r3, r3, #1
   1ccd0:	cmp	r3, r5
   1ccd4:	add	r4, r4, r2
   1ccd8:	bgt	1cc88 <ReadCompressedDataSlabN+0x20e0>
   1ccdc:	ldr	r3, [sp, #24]
   1cce0:	add	r2, r3, r5
   1cce4:	ldr	r3, [sp, #8]
   1cce8:	mov	ip, #1
   1ccec:	mov	r1, fp
   1ccf0:	ldr	r6, [sp, #12]
   1ccf4:	str	ip, [sp]
   1ccf8:	add	r2, r3, r2, lsl #1
   1ccfc:	ldr	r3, [sp, #248]	; 0xf8
   1cd00:	mov	r0, r6
   1cd04:	bl	158dc <ReadCompressedInt16Data>
   1cd08:	ldr	r3, [sl]
   1cd0c:	mov	r1, fp
   1cd10:	ldr	r0, [sp, #260]	; 0x104
   1cd14:	ldr	lr, [r8]
   1cd18:	sub	r3, r3, #1
   1cd1c:	ldr	r2, [sp, #248]	; 0xf8
   1cd20:	ldr	ip, [r0]
   1cd24:	ldr	r0, [sp, #256]	; 0x100
   1cd28:	mla	r3, lr, r3, ip
   1cd2c:	ldr	r5, [r0]
   1cd30:	mov	r0, r6
   1cd34:	sub	r5, r5, r3
   1cd38:	sub	r3, r5, #1
   1cd3c:	add	r4, r4, r5
   1cd40:	bl	235c <InflateSkipData>
   1cd44:	ldr	r3, [sp, #252]	; 0xfc
   1cd48:	cmp	r3, #1
   1cd4c:	ble	1ce74 <ReadCompressedDataSlabN+0x22cc>
   1cd50:	ldr	r3, [sp, #76]	; 0x4c
   1cd54:	ldr	r1, [sl, #4]
   1cd58:	add	r3, r3, #1
   1cd5c:	sdiv	r2, r3, r1
   1cd60:	str	r3, [sp, #76]	; 0x4c
   1cd64:	mls	r3, r1, r2, r3
   1cd68:	cmp	r3, #0
   1cd6c:	bne	1e5ec <ReadCompressedDataSlabN+0x3a44>
   1cd70:	add	r3, sl, #4
   1cd74:	add	r2, sp, #116	; 0x74
   1cd78:	str	fp, [sp, #16]
   1cd7c:	add	r6, sp, #76	; 0x4c
   1cd80:	mov	r7, #1
   1cd84:	str	r8, [sp, #264]	; 0x108
   1cd88:	mov	r8, r2
   1cd8c:	str	sl, [sp, #268]	; 0x10c
   1cd90:	mov	sl, r3
   1cd94:	ldr	r9, [sp, #260]	; 0x104
   1cd98:	b	1cdd4 <ReadCompressedDataSlabN+0x222c>
   1cd9c:	cmp	r3, #0
   1cda0:	bne	1ce1c <ReadCompressedDataSlabN+0x2274>
   1cda4:	ldr	r3, [sp, #252]	; 0xfc
   1cda8:	add	r7, r7, #1
   1cdac:	cmp	r3, r7
   1cdb0:	beq	1ce94 <ReadCompressedDataSlabN+0x22ec>
   1cdb4:	ldr	r3, [r6]
   1cdb8:	ldr	r1, [sl, #4]!
   1cdbc:	add	r3, r3, #1
   1cdc0:	sdiv	r2, r3, r1
   1cdc4:	str	r3, [r6]
   1cdc8:	mls	r3, r1, r2, r3
   1cdcc:	cmp	r3, #0
   1cdd0:	bne	1ce3c <ReadCompressedDataSlabN+0x2294>
   1cdd4:	ldr	r5, [r8], #4
   1cdd8:	mov	r3, #0
   1cddc:	str	r3, [r6], #4
   1cde0:	ldr	r3, [r9, #4]!
   1cde4:	sdiv	r2, r4, r5
   1cde8:	mls	r2, r5, r2, r4
   1cdec:	cmp	r2, #0
   1cdf0:	beq	1cd9c <ReadCompressedDataSlabN+0x21f4>
   1cdf4:	ldr	fp, [r8, #-8]
   1cdf8:	sub	r5, r5, r2
   1cdfc:	ldrd	r0, [sp, #12]
   1ce00:	ldr	r2, [sp, #248]	; 0xf8
   1ce04:	mla	r3, r3, fp, r5
   1ce08:	bl	235c <InflateSkipData>
   1ce0c:	ldr	r3, [r9]
   1ce10:	mla	r5, r3, fp, r5
   1ce14:	add	r4, r4, r5
   1ce18:	b	1cda4 <ReadCompressedDataSlabN+0x21fc>
   1ce1c:	ldr	r5, [r8, #-8]
   1ce20:	ldrd	r0, [sp, #12]
   1ce24:	ldr	r2, [sp, #248]	; 0xf8
   1ce28:	mul	r3, r3, r5
   1ce2c:	bl	235c <InflateSkipData>
   1ce30:	ldr	r3, [r9]
   1ce34:	mla	r4, r3, r5, r4
   1ce38:	b	1cda4 <ReadCompressedDataSlabN+0x21fc>
   1ce3c:	ldr	fp, [sp, #16]
   1ce40:	ldr	r8, [sp, #264]	; 0x108
   1ce44:	ldr	sl, [sp, #268]	; 0x10c
   1ce48:	add	r3, sp, #208	; 0xd0
   1ce4c:	add	r7, r3, r7, lsl #2
   1ce50:	ldr	ip, [r7, #-176]	; 0xffffff50
   1ce54:	cmp	ip, #0
   1ce58:	beq	1ce74 <ReadCompressedDataSlabN+0x22cc>
   1ce5c:	mov	r3, ip
   1ce60:	mov	r1, fp
   1ce64:	ldr	r0, [sp, #12]
   1ce68:	add	r4, r4, ip
   1ce6c:	ldr	r2, [sp, #248]	; 0xf8
   1ce70:	bl	235c <InflateSkipData>
   1ce74:	ldr	r3, [sl]
   1ce78:	ldr	r2, [sp, #24]
   1ce7c:	add	r3, r2, r3
   1ce80:	ldr	r2, [sp, #20]
   1ce84:	str	r3, [sp, #24]
   1ce88:	cmp	r3, r2
   1ce8c:	blt	1cc50 <ReadCompressedDataSlabN+0x20a8>
   1ce90:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1ce94:	ldr	fp, [sp, #16]
   1ce98:	ldr	r8, [sp, #264]	; 0x108
   1ce9c:	ldr	sl, [sp, #268]	; 0x10c
   1cea0:	b	1ce74 <ReadCompressedDataSlabN+0x22cc>
   1cea4:	mov	r1, fp
   1cea8:	ldr	r0, [sp, #12]
   1ceac:	ldr	r2, [sp, #248]	; 0xf8
   1ceb0:	bl	235c <InflateSkipData>
   1ceb4:	ldr	r3, [sp, #260]	; 0x104
   1ceb8:	ldr	r3, [r3]
   1cebc:	add	r4, r4, r3
   1cec0:	b	1cc60 <ReadCompressedDataSlabN+0x20b8>
   1cec4:	ldr	sl, [sp, #16]
   1cec8:	ldr	fp, [sp, #24]
   1cecc:	ldr	r8, [sp, #264]	; 0x108
   1ced0:	mov	r3, r4
   1ced4:	mov	r1, fp
   1ced8:	mov	r0, sl
   1cedc:	ldr	r2, [sp, #248]	; 0xf8
   1cee0:	bl	235c <InflateSkipData>
   1cee4:	ldr	r3, [r8]
   1cee8:	cmp	r3, #1
   1ceec:	ldr	r3, [sp, #20]
   1cef0:	beq	1d180 <ReadCompressedDataSlabN+0x25d8>
   1cef4:	cmp	r3, #0
   1cef8:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1cefc:	str	sl, [sp, #12]
   1cf00:	mov	r3, #0
   1cf04:	ldr	sl, [sp, #268]	; 0x10c
   1cf08:	str	r3, [sp, #24]
   1cf0c:	ldr	r3, [sp, #260]	; 0x104
   1cf10:	ldr	r3, [r3]
   1cf14:	cmp	r3, #0
   1cf18:	bne	1d160 <ReadCompressedDataSlabN+0x25b8>
   1cf1c:	ldr	r3, [sl]
   1cf20:	ldr	r1, [sp, #24]
   1cf24:	cmp	r3, #1
   1cf28:	mov	r2, r1
   1cf2c:	ble	1cfa0 <ReadCompressedDataSlabN+0x23f8>
   1cf30:	ldr	r3, [sp, #8]
   1cf34:	mov	r5, #0
   1cf38:	ldr	r7, [sp, #12]
   1cf3c:	ldr	r9, [sp, #248]	; 0xf8
   1cf40:	add	r6, r3, r1, lsl #3
   1cf44:	mov	r1, #1
   1cf48:	mov	r2, r6
   1cf4c:	mov	r3, r9
   1cf50:	mov	r0, r7
   1cf54:	str	r1, [sp]
   1cf58:	mov	r1, fp
   1cf5c:	add	r5, r5, #1
   1cf60:	bl	126ec <ReadCompressedDoubleData>
   1cf64:	ldr	r3, [r8]
   1cf68:	mov	r2, r9
   1cf6c:	mov	r1, fp
   1cf70:	mov	r0, r7
   1cf74:	add	r6, r6, #8
   1cf78:	sub	r3, r3, #1
   1cf7c:	bl	235c <InflateSkipData>
   1cf80:	ldr	r3, [sl]
   1cf84:	ldr	r2, [r8]
   1cf88:	sub	r3, r3, #1
   1cf8c:	cmp	r3, r5
   1cf90:	add	r4, r4, r2
   1cf94:	bgt	1cf44 <ReadCompressedDataSlabN+0x239c>
   1cf98:	ldr	r3, [sp, #24]
   1cf9c:	add	r2, r3, r5
   1cfa0:	ldr	r3, [sp, #8]
   1cfa4:	mov	ip, #1
   1cfa8:	mov	r1, fp
   1cfac:	ldr	r6, [sp, #12]
   1cfb0:	str	ip, [sp]
   1cfb4:	add	r2, r3, r2, lsl #3
   1cfb8:	ldr	r3, [sp, #248]	; 0xf8
   1cfbc:	mov	r0, r6
   1cfc0:	bl	126ec <ReadCompressedDoubleData>
   1cfc4:	ldr	r3, [sl]
   1cfc8:	mov	r1, fp
   1cfcc:	ldr	r0, [sp, #260]	; 0x104
   1cfd0:	ldr	lr, [r8]
   1cfd4:	sub	r3, r3, #1
   1cfd8:	ldr	r2, [sp, #248]	; 0xf8
   1cfdc:	ldr	ip, [r0]
   1cfe0:	ldr	r0, [sp, #256]	; 0x100
   1cfe4:	mla	r3, lr, r3, ip
   1cfe8:	ldr	r5, [r0]
   1cfec:	mov	r0, r6
   1cff0:	sub	r5, r5, r3
   1cff4:	sub	r3, r5, #1
   1cff8:	add	r4, r4, r5
   1cffc:	bl	235c <InflateSkipData>
   1d000:	ldr	r3, [sp, #252]	; 0xfc
   1d004:	cmp	r3, #1
   1d008:	ble	1d130 <ReadCompressedDataSlabN+0x2588>
   1d00c:	ldr	r3, [sp, #76]	; 0x4c
   1d010:	ldr	r1, [sl, #4]
   1d014:	add	r3, r3, #1
   1d018:	sdiv	r2, r3, r1
   1d01c:	str	r3, [sp, #76]	; 0x4c
   1d020:	mls	r3, r1, r2, r3
   1d024:	cmp	r3, #0
   1d028:	bne	1e5ac <ReadCompressedDataSlabN+0x3a04>
   1d02c:	add	r3, sl, #4
   1d030:	add	r2, sp, #116	; 0x74
   1d034:	str	fp, [sp, #16]
   1d038:	add	r6, sp, #76	; 0x4c
   1d03c:	mov	r7, #1
   1d040:	str	r8, [sp, #264]	; 0x108
   1d044:	mov	r8, r2
   1d048:	str	sl, [sp, #268]	; 0x10c
   1d04c:	mov	sl, r3
   1d050:	ldr	r9, [sp, #260]	; 0x104
   1d054:	b	1d090 <ReadCompressedDataSlabN+0x24e8>
   1d058:	cmp	r3, #0
   1d05c:	bne	1d0d8 <ReadCompressedDataSlabN+0x2530>
   1d060:	ldr	r3, [sp, #252]	; 0xfc
   1d064:	add	r7, r7, #1
   1d068:	cmp	r3, r7
   1d06c:	beq	1d150 <ReadCompressedDataSlabN+0x25a8>
   1d070:	ldr	r3, [r6]
   1d074:	ldr	r1, [sl, #4]!
   1d078:	add	r3, r3, #1
   1d07c:	sdiv	r2, r3, r1
   1d080:	str	r3, [r6]
   1d084:	mls	r3, r1, r2, r3
   1d088:	cmp	r3, #0
   1d08c:	bne	1d0f8 <ReadCompressedDataSlabN+0x2550>
   1d090:	ldr	r5, [r8], #4
   1d094:	mov	r3, #0
   1d098:	str	r3, [r6], #4
   1d09c:	ldr	r3, [r9, #4]!
   1d0a0:	sdiv	r2, r4, r5
   1d0a4:	mls	r2, r5, r2, r4
   1d0a8:	cmp	r2, #0
   1d0ac:	beq	1d058 <ReadCompressedDataSlabN+0x24b0>
   1d0b0:	ldr	fp, [r8, #-8]
   1d0b4:	sub	r5, r5, r2
   1d0b8:	ldrd	r0, [sp, #12]
   1d0bc:	ldr	r2, [sp, #248]	; 0xf8
   1d0c0:	mla	r3, r3, fp, r5
   1d0c4:	bl	235c <InflateSkipData>
   1d0c8:	ldr	r3, [r9]
   1d0cc:	mla	r5, r3, fp, r5
   1d0d0:	add	r4, r4, r5
   1d0d4:	b	1d060 <ReadCompressedDataSlabN+0x24b8>
   1d0d8:	ldr	r5, [r8, #-8]
   1d0dc:	ldrd	r0, [sp, #12]
   1d0e0:	ldr	r2, [sp, #248]	; 0xf8
   1d0e4:	mul	r3, r3, r5
   1d0e8:	bl	235c <InflateSkipData>
   1d0ec:	ldr	r3, [r9]
   1d0f0:	mla	r4, r3, r5, r4
   1d0f4:	b	1d060 <ReadCompressedDataSlabN+0x24b8>
   1d0f8:	ldr	fp, [sp, #16]
   1d0fc:	ldr	r8, [sp, #264]	; 0x108
   1d100:	ldr	sl, [sp, #268]	; 0x10c
   1d104:	add	r3, sp, #208	; 0xd0
   1d108:	add	r7, r3, r7, lsl #2
   1d10c:	ldr	ip, [r7, #-176]	; 0xffffff50
   1d110:	cmp	ip, #0
   1d114:	beq	1d130 <ReadCompressedDataSlabN+0x2588>
   1d118:	mov	r3, ip
   1d11c:	mov	r1, fp
   1d120:	ldr	r0, [sp, #12]
   1d124:	add	r4, r4, ip
   1d128:	ldr	r2, [sp, #248]	; 0xf8
   1d12c:	bl	235c <InflateSkipData>
   1d130:	ldr	r3, [sl]
   1d134:	ldr	r2, [sp, #24]
   1d138:	add	r3, r2, r3
   1d13c:	ldr	r2, [sp, #20]
   1d140:	str	r3, [sp, #24]
   1d144:	cmp	r3, r2
   1d148:	blt	1cf0c <ReadCompressedDataSlabN+0x2364>
   1d14c:	b	1ad38 <ReadCompressedDataSlabN+0x190>
   1d150:	ldr	fp, [sp, #16]
   1d154:	ldr	r8, [sp, #264]	; 0x108
   1d158:	ldr	sl, [sp, #268]	; 0x10c
   1d15c:	b	1d130 <ReadCompressedDataSlabN+0x2588>
   1d160:	mov	r1, fp
   1d164:	ldr	r0, [sp, #12]
   1d168:	ldr	r2, [sp, #248]	; 0xf8
   1d16c:	bl	235c <InflateSkipData>
   1d170:	ldr	r3, [sp, #260]	; 0x104
   1d174:	ldr	r3, [r3]
   1d178:	add	r4, r4, r3
   1d17c:	b	1cf1c <ReadCompressedDataSlabN+0x2374>
   1d180:	cmp	r3, #0
   1d184:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1d188:	str	fp, [sp, #12]
   1d18c:	mov	r3, #0
   1d190:	ldr	fp, [sp, #252]	; 0xfc
   1d194:	str	sl, [sp, #16]
   1d198:	str	r3, [sp, #28]
   1d19c:	ldr	r3, [sp, #260]	; 0x104
   1d1a0:	ldr	r3, [r3]
   1d1a4:	cmp	r3, #0
   1d1a8:	bne	1d318 <ReadCompressedDataSlabN+0x2770>
   1d1ac:	ldr	r2, [sp, #8]
   1d1b0:	ldr	r3, [sp, #268]	; 0x10c
   1d1b4:	ldr	r6, [sp, #12]
   1d1b8:	ldr	r5, [sp, #16]
   1d1bc:	ldr	ip, [r3]
   1d1c0:	ldr	r1, [sp, #28]
   1d1c4:	mov	r0, r5
   1d1c8:	ldr	r3, [sp, #248]	; 0xf8
   1d1cc:	str	ip, [sp]
   1d1d0:	add	r2, r2, r1, lsl #3
   1d1d4:	mov	r1, r6
   1d1d8:	bl	126ec <ReadCompressedDoubleData>
   1d1dc:	mov	r1, r6
   1d1e0:	mov	r0, r5
   1d1e4:	ldr	r2, [sp, #248]	; 0xf8
   1d1e8:	ldr	ip, [sp, #268]	; 0x10c
   1d1ec:	ldr	r3, [sp, #256]	; 0x100
   1d1f0:	ldr	lr, [ip]
   1d1f4:	ldr	ip, [sp, #260]	; 0x104
   1d1f8:	ldr	r3, [r3]
   1d1fc:	ldr	ip, [ip]
   1d200:	sub	r3, r3, lr
   1d204:	sub	r3, r3, ip
   1d208:	bl	235c <InflateSkipData>
   1d20c:	ldr	r3, [sp, #256]	; 0x100
   1d210:	cmp	fp, #1
   1d214:	ldr	r2, [sp, #260]	; 0x104
   1d218:	ldr	r3, [r3]
   1d21c:	ldr	r2, [r2]
   1d220:	sub	r3, r3, r2
   1d224:	add	r4, r3, r4
   1d228:	ble	1ad14 <ReadCompressedDataSlabN+0x16c>
   1d22c:	ldr	r3, [sp, #76]	; 0x4c
   1d230:	ldr	r2, [sp, #268]	; 0x10c
   1d234:	add	r3, r3, #1
   1d238:	ldr	r1, [r2, #4]
   1d23c:	str	r3, [sp, #76]	; 0x4c
   1d240:	sdiv	r2, r3, r1
   1d244:	mls	r3, r1, r2, r3
   1d248:	cmp	r3, #0
   1d24c:	bne	1ace4 <ReadCompressedDataSlabN+0x13c>
   1d250:	add	r6, sp, #76	; 0x4c
   1d254:	add	r8, sp, #116	; 0x74
   1d258:	ldr	r9, [sp, #260]	; 0x104
   1d25c:	mov	r7, #1
   1d260:	ldr	r3, [sp, #268]	; 0x10c
   1d264:	add	sl, r3, #4
   1d268:	b	1d2a0 <ReadCompressedDataSlabN+0x26f8>
   1d26c:	cmp	r3, #0
   1d270:	bne	1d2f4 <ReadCompressedDataSlabN+0x274c>
   1d274:	add	r7, r7, #1
   1d278:	cmp	fp, r7
   1d27c:	beq	1ad14 <ReadCompressedDataSlabN+0x16c>
   1d280:	ldr	r3, [r6]
   1d284:	ldr	r1, [sl, #4]!
   1d288:	add	r3, r3, #1
   1d28c:	sdiv	r2, r3, r1
   1d290:	str	r3, [r6]
   1d294:	mls	r3, r1, r2, r3
   1d298:	cmp	r3, #0
   1d29c:	bne	1ace8 <ReadCompressedDataSlabN+0x140>
   1d2a0:	ldr	r5, [r8], #4
   1d2a4:	mov	r3, #0
   1d2a8:	str	r3, [r6], #4
   1d2ac:	ldr	r3, [r9, #4]!
   1d2b0:	sdiv	r2, r4, r5
   1d2b4:	mls	r2, r5, r2, r4
   1d2b8:	cmp	r2, #0
   1d2bc:	beq	1d26c <ReadCompressedDataSlabN+0x26c4>
   1d2c0:	ldr	ip, [r8, #-8]
   1d2c4:	sub	r5, r5, r2
   1d2c8:	ldr	r1, [sp, #12]
   1d2cc:	ldr	r0, [sp, #16]
   1d2d0:	mla	r3, r3, ip, r5
   1d2d4:	str	ip, [sp, #24]
   1d2d8:	ldr	r2, [sp, #248]	; 0xf8
   1d2dc:	bl	235c <InflateSkipData>
   1d2e0:	ldr	r3, [r9]
   1d2e4:	ldr	ip, [sp, #24]
   1d2e8:	mla	r5, r3, ip, r5
   1d2ec:	add	r4, r4, r5
   1d2f0:	b	1d274 <ReadCompressedDataSlabN+0x26cc>
   1d2f4:	ldr	r5, [r8, #-8]
   1d2f8:	ldr	r1, [sp, #12]
   1d2fc:	ldr	r0, [sp, #16]
   1d300:	mul	r3, r3, r5
   1d304:	ldr	r2, [sp, #248]	; 0xf8
   1d308:	bl	235c <InflateSkipData>
   1d30c:	ldr	r3, [r9]
   1d310:	mla	r4, r3, r5, r4
   1d314:	b	1d274 <ReadCompressedDataSlabN+0x26cc>
   1d318:	ldr	r1, [sp, #12]
   1d31c:	ldr	r0, [sp, #16]
   1d320:	ldr	r2, [sp, #248]	; 0xf8
   1d324:	bl	235c <InflateSkipData>
   1d328:	ldr	r3, [sp, #260]	; 0x104
   1d32c:	ldr	r3, [r3]
   1d330:	add	r4, r4, r3
   1d334:	b	1d1ac <ReadCompressedDataSlabN+0x2604>
   1d338:	cmp	r3, #0
   1d33c:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1d340:	str	fp, [sp, #12]
   1d344:	mov	r3, #0
   1d348:	ldr	fp, [sp, #252]	; 0xfc
   1d34c:	str	sl, [sp, #16]
   1d350:	str	r3, [sp, #28]
   1d354:	ldr	r3, [sp, #260]	; 0x104
   1d358:	ldr	r3, [r3]
   1d35c:	cmp	r3, #0
   1d360:	bne	1d524 <ReadCompressedDataSlabN+0x297c>
   1d364:	ldr	r2, [sp, #8]
   1d368:	ldr	r3, [sp, #268]	; 0x10c
   1d36c:	ldr	r6, [sp, #12]
   1d370:	ldr	r5, [sp, #16]
   1d374:	ldr	ip, [r3]
   1d378:	ldr	r1, [sp, #28]
   1d37c:	mov	r0, r5
   1d380:	ldr	r3, [sp, #248]	; 0xf8
   1d384:	str	ip, [sp]
   1d388:	add	r2, r2, r1, lsl #1
   1d38c:	mov	r1, r6
   1d390:	bl	158dc <ReadCompressedInt16Data>
   1d394:	mov	r1, r6
   1d398:	mov	r0, r5
   1d39c:	ldr	r2, [sp, #248]	; 0xf8
   1d3a0:	ldr	ip, [sp, #268]	; 0x10c
   1d3a4:	ldr	r3, [sp, #256]	; 0x100
   1d3a8:	ldr	lr, [ip]
   1d3ac:	ldr	ip, [sp, #260]	; 0x104
   1d3b0:	ldr	r3, [r3]
   1d3b4:	ldr	ip, [ip]
   1d3b8:	sub	r3, r3, lr
   1d3bc:	sub	r3, r3, ip
   1d3c0:	bl	235c <InflateSkipData>
   1d3c4:	ldr	r3, [sp, #256]	; 0x100
   1d3c8:	cmp	fp, #1
   1d3cc:	ldr	r2, [sp, #260]	; 0x104
   1d3d0:	ldr	r3, [r3]
   1d3d4:	ldr	r2, [r2]
   1d3d8:	sub	r3, r3, r2
   1d3dc:	add	r4, r3, r4
   1d3e0:	ble	1d500 <ReadCompressedDataSlabN+0x2958>
   1d3e4:	ldr	r3, [sp, #76]	; 0x4c
   1d3e8:	ldr	r2, [sp, #268]	; 0x10c
   1d3ec:	add	r3, r3, #1
   1d3f0:	ldr	r1, [r2, #4]
   1d3f4:	str	r3, [sp, #76]	; 0x4c
   1d3f8:	sdiv	r2, r3, r1
   1d3fc:	mls	r3, r1, r2, r3
   1d400:	cmp	r3, #0
   1d404:	bne	1d4d0 <ReadCompressedDataSlabN+0x2928>
   1d408:	add	r6, sp, #76	; 0x4c
   1d40c:	add	r8, sp, #116	; 0x74
   1d410:	ldr	r9, [sp, #260]	; 0x104
   1d414:	mov	r7, #1
   1d418:	ldr	r3, [sp, #268]	; 0x10c
   1d41c:	add	sl, r3, #4
   1d420:	b	1d458 <ReadCompressedDataSlabN+0x28b0>
   1d424:	cmp	r3, #0
   1d428:	bne	1d4ac <ReadCompressedDataSlabN+0x2904>
   1d42c:	add	r7, r7, #1
   1d430:	cmp	fp, r7
   1d434:	beq	1d500 <ReadCompressedDataSlabN+0x2958>
   1d438:	ldr	r3, [r6]
   1d43c:	ldr	r1, [sl, #4]!
   1d440:	add	r3, r3, #1
   1d444:	sdiv	r2, r3, r1
   1d448:	str	r3, [r6]
   1d44c:	mls	r3, r1, r2, r3
   1d450:	cmp	r3, #0
   1d454:	bne	1d4d4 <ReadCompressedDataSlabN+0x292c>
   1d458:	ldr	r5, [r8], #4
   1d45c:	mov	r3, #0
   1d460:	str	r3, [r6], #4
   1d464:	ldr	r3, [r9, #4]!
   1d468:	sdiv	r2, r4, r5
   1d46c:	mls	r2, r5, r2, r4
   1d470:	cmp	r2, #0
   1d474:	beq	1d424 <ReadCompressedDataSlabN+0x287c>
   1d478:	ldr	ip, [r8, #-8]
   1d47c:	sub	r5, r5, r2
   1d480:	ldr	r1, [sp, #12]
   1d484:	ldr	r0, [sp, #16]
   1d488:	mla	r3, r3, ip, r5
   1d48c:	str	ip, [sp, #24]
   1d490:	ldr	r2, [sp, #248]	; 0xf8
   1d494:	bl	235c <InflateSkipData>
   1d498:	ldr	r3, [r9]
   1d49c:	ldr	ip, [sp, #24]
   1d4a0:	mla	r5, r3, ip, r5
   1d4a4:	add	r4, r4, r5
   1d4a8:	b	1d42c <ReadCompressedDataSlabN+0x2884>
   1d4ac:	ldr	r5, [r8, #-8]
   1d4b0:	ldr	r1, [sp, #12]
   1d4b4:	ldr	r0, [sp, #16]
   1d4b8:	mul	r3, r3, r5
   1d4bc:	ldr	r2, [sp, #248]	; 0xf8
   1d4c0:	bl	235c <InflateSkipData>
   1d4c4:	ldr	r3, [r9]
   1d4c8:	mla	r4, r3, r5, r4
   1d4cc:	b	1d42c <ReadCompressedDataSlabN+0x2884>
   1d4d0:	mov	r7, #1
   1d4d4:	add	r3, sp, #208	; 0xd0
   1d4d8:	add	r7, r3, r7, lsl #2
   1d4dc:	ldr	ip, [r7, #-176]	; 0xffffff50
   1d4e0:	cmp	ip, #0
   1d4e4:	beq	1d500 <ReadCompressedDataSlabN+0x2958>
   1d4e8:	mov	r3, ip
   1d4ec:	ldr	r1, [sp, #12]
   1d4f0:	add	r4, r4, ip
   1d4f4:	ldr	r0, [sp, #16]
   1d4f8:	ldr	r2, [sp, #248]	; 0xf8
   1d4fc:	bl	235c <InflateSkipData>
   1d500:	ldr	r2, [sp, #28]
   1d504:	ldr	r3, [sp, #268]	; 0x10c
   1d508:	ldr	r3, [r3]
   1d50c:	add	r3, r2, r3
   1d510:	ldr	r2, [sp, #20]
   1d514:	str	r3, [sp, #28]
   1d518:	cmp	r3, r2
   1d51c:	blt	1d354 <ReadCompressedDataSlabN+0x27ac>
   1d520:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1d524:	ldr	r1, [sp, #12]
   1d528:	ldr	r0, [sp, #16]
   1d52c:	ldr	r2, [sp, #248]	; 0xf8
   1d530:	bl	235c <InflateSkipData>
   1d534:	ldr	r3, [sp, #260]	; 0x104
   1d538:	ldr	r3, [r3]
   1d53c:	add	r4, r4, r3
   1d540:	b	1d364 <ReadCompressedDataSlabN+0x27bc>
   1d544:	cmp	r3, #0
   1d548:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1d54c:	str	fp, [sp, #12]
   1d550:	mov	r3, #0
   1d554:	ldr	fp, [sp, #252]	; 0xfc
   1d558:	str	sl, [sp, #16]
   1d55c:	str	r3, [sp, #28]
   1d560:	ldr	r3, [sp, #260]	; 0x104
   1d564:	ldr	r3, [r3]
   1d568:	cmp	r3, #0
   1d56c:	bne	1d730 <ReadCompressedDataSlabN+0x2b88>
   1d570:	ldr	r2, [sp, #8]
   1d574:	ldr	r3, [sp, #268]	; 0x10c
   1d578:	ldr	r6, [sp, #12]
   1d57c:	ldr	r5, [sp, #16]
   1d580:	ldr	ip, [r3]
   1d584:	ldr	r1, [sp, #28]
   1d588:	mov	r0, r5
   1d58c:	ldr	r3, [sp, #248]	; 0xf8
   1d590:	str	ip, [sp]
   1d594:	add	r2, r2, r1, lsl #2
   1d598:	mov	r1, r6
   1d59c:	bl	15378 <ReadCompressedUInt32Data>
   1d5a0:	mov	r1, r6
   1d5a4:	mov	r0, r5
   1d5a8:	ldr	r2, [sp, #248]	; 0xf8
   1d5ac:	ldr	ip, [sp, #268]	; 0x10c
   1d5b0:	ldr	r3, [sp, #256]	; 0x100
   1d5b4:	ldr	lr, [ip]
   1d5b8:	ldr	ip, [sp, #260]	; 0x104
   1d5bc:	ldr	r3, [r3]
   1d5c0:	ldr	ip, [ip]
   1d5c4:	sub	r3, r3, lr
   1d5c8:	sub	r3, r3, ip
   1d5cc:	bl	235c <InflateSkipData>
   1d5d0:	ldr	r3, [sp, #256]	; 0x100
   1d5d4:	cmp	fp, #1
   1d5d8:	ldr	r2, [sp, #260]	; 0x104
   1d5dc:	ldr	r3, [r3]
   1d5e0:	ldr	r2, [r2]
   1d5e4:	sub	r3, r3, r2
   1d5e8:	add	r4, r3, r4
   1d5ec:	ble	1d70c <ReadCompressedDataSlabN+0x2b64>
   1d5f0:	ldr	r3, [sp, #76]	; 0x4c
   1d5f4:	ldr	r2, [sp, #268]	; 0x10c
   1d5f8:	add	r3, r3, #1
   1d5fc:	ldr	r1, [r2, #4]
   1d600:	str	r3, [sp, #76]	; 0x4c
   1d604:	sdiv	r2, r3, r1
   1d608:	mls	r3, r1, r2, r3
   1d60c:	cmp	r3, #0
   1d610:	bne	1d6dc <ReadCompressedDataSlabN+0x2b34>
   1d614:	add	r6, sp, #76	; 0x4c
   1d618:	add	r8, sp, #116	; 0x74
   1d61c:	ldr	r9, [sp, #260]	; 0x104
   1d620:	mov	r7, #1
   1d624:	ldr	r3, [sp, #268]	; 0x10c
   1d628:	add	sl, r3, #4
   1d62c:	b	1d664 <ReadCompressedDataSlabN+0x2abc>
   1d630:	cmp	r3, #0
   1d634:	bne	1d6b8 <ReadCompressedDataSlabN+0x2b10>
   1d638:	add	r7, r7, #1
   1d63c:	cmp	fp, r7
   1d640:	beq	1d70c <ReadCompressedDataSlabN+0x2b64>
   1d644:	ldr	r3, [r6]
   1d648:	ldr	r1, [sl, #4]!
   1d64c:	add	r3, r3, #1
   1d650:	sdiv	r2, r3, r1
   1d654:	str	r3, [r6]
   1d658:	mls	r3, r1, r2, r3
   1d65c:	cmp	r3, #0
   1d660:	bne	1d6e0 <ReadCompressedDataSlabN+0x2b38>
   1d664:	ldr	r5, [r8], #4
   1d668:	mov	r3, #0
   1d66c:	str	r3, [r6], #4
   1d670:	ldr	r3, [r9, #4]!
   1d674:	sdiv	r2, r4, r5
   1d678:	mls	r2, r5, r2, r4
   1d67c:	cmp	r2, #0
   1d680:	beq	1d630 <ReadCompressedDataSlabN+0x2a88>
   1d684:	ldr	ip, [r8, #-8]
   1d688:	sub	r5, r5, r2
   1d68c:	ldr	r1, [sp, #12]
   1d690:	ldr	r0, [sp, #16]
   1d694:	mla	r3, r3, ip, r5
   1d698:	str	ip, [sp, #24]
   1d69c:	ldr	r2, [sp, #248]	; 0xf8
   1d6a0:	bl	235c <InflateSkipData>
   1d6a4:	ldr	r3, [r9]
   1d6a8:	ldr	ip, [sp, #24]
   1d6ac:	mla	r5, r3, ip, r5
   1d6b0:	add	r4, r4, r5
   1d6b4:	b	1d638 <ReadCompressedDataSlabN+0x2a90>
   1d6b8:	ldr	r5, [r8, #-8]
   1d6bc:	ldr	r1, [sp, #12]
   1d6c0:	ldr	r0, [sp, #16]
   1d6c4:	mul	r3, r3, r5
   1d6c8:	ldr	r2, [sp, #248]	; 0xf8
   1d6cc:	bl	235c <InflateSkipData>
   1d6d0:	ldr	r3, [r9]
   1d6d4:	mla	r4, r3, r5, r4
   1d6d8:	b	1d638 <ReadCompressedDataSlabN+0x2a90>
   1d6dc:	mov	r7, #1
   1d6e0:	add	r3, sp, #208	; 0xd0
   1d6e4:	add	r7, r3, r7, lsl #2
   1d6e8:	ldr	ip, [r7, #-176]	; 0xffffff50
   1d6ec:	cmp	ip, #0
   1d6f0:	beq	1d70c <ReadCompressedDataSlabN+0x2b64>
   1d6f4:	mov	r3, ip
   1d6f8:	ldr	r1, [sp, #12]
   1d6fc:	add	r4, r4, ip
   1d700:	ldr	r0, [sp, #16]
   1d704:	ldr	r2, [sp, #248]	; 0xf8
   1d708:	bl	235c <InflateSkipData>
   1d70c:	ldr	r2, [sp, #28]
   1d710:	ldr	r3, [sp, #268]	; 0x10c
   1d714:	ldr	r3, [r3]
   1d718:	add	r3, r2, r3
   1d71c:	ldr	r2, [sp, #20]
   1d720:	str	r3, [sp, #28]
   1d724:	cmp	r3, r2
   1d728:	blt	1d560 <ReadCompressedDataSlabN+0x29b8>
   1d72c:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1d730:	ldr	r1, [sp, #12]
   1d734:	ldr	r0, [sp, #16]
   1d738:	ldr	r2, [sp, #248]	; 0xf8
   1d73c:	bl	235c <InflateSkipData>
   1d740:	ldr	r3, [sp, #260]	; 0x104
   1d744:	ldr	r3, [r3]
   1d748:	add	r4, r4, r3
   1d74c:	b	1d570 <ReadCompressedDataSlabN+0x29c8>
   1d750:	cmp	r3, #0
   1d754:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1d758:	str	fp, [sp, #12]
   1d75c:	mov	r3, #0
   1d760:	ldr	fp, [sp, #252]	; 0xfc
   1d764:	str	sl, [sp, #16]
   1d768:	str	r3, [sp, #28]
   1d76c:	ldr	r3, [sp, #260]	; 0x104
   1d770:	ldr	r3, [r3]
   1d774:	cmp	r3, #0
   1d778:	bne	1d93c <ReadCompressedDataSlabN+0x2d94>
   1d77c:	ldr	r2, [sp, #8]
   1d780:	ldr	r3, [sp, #268]	; 0x10c
   1d784:	ldr	r6, [sp, #12]
   1d788:	ldr	r5, [sp, #16]
   1d78c:	ldr	ip, [r3]
   1d790:	ldr	r1, [sp, #28]
   1d794:	mov	r0, r5
   1d798:	ldr	r3, [sp, #248]	; 0xf8
   1d79c:	str	ip, [sp]
   1d7a0:	add	r2, r2, r1, lsl #1
   1d7a4:	mov	r1, r6
   1d7a8:	bl	15e50 <ReadCompressedUInt16Data>
   1d7ac:	mov	r1, r6
   1d7b0:	mov	r0, r5
   1d7b4:	ldr	r2, [sp, #248]	; 0xf8
   1d7b8:	ldr	ip, [sp, #268]	; 0x10c
   1d7bc:	ldr	r3, [sp, #256]	; 0x100
   1d7c0:	ldr	lr, [ip]
   1d7c4:	ldr	ip, [sp, #260]	; 0x104
   1d7c8:	ldr	r3, [r3]
   1d7cc:	ldr	ip, [ip]
   1d7d0:	sub	r3, r3, lr
   1d7d4:	sub	r3, r3, ip
   1d7d8:	bl	235c <InflateSkipData>
   1d7dc:	ldr	r3, [sp, #256]	; 0x100
   1d7e0:	cmp	fp, #1
   1d7e4:	ldr	r2, [sp, #260]	; 0x104
   1d7e8:	ldr	r3, [r3]
   1d7ec:	ldr	r2, [r2]
   1d7f0:	sub	r3, r3, r2
   1d7f4:	add	r4, r3, r4
   1d7f8:	ble	1d918 <ReadCompressedDataSlabN+0x2d70>
   1d7fc:	ldr	r3, [sp, #76]	; 0x4c
   1d800:	ldr	r2, [sp, #268]	; 0x10c
   1d804:	add	r3, r3, #1
   1d808:	ldr	r1, [r2, #4]
   1d80c:	str	r3, [sp, #76]	; 0x4c
   1d810:	sdiv	r2, r3, r1
   1d814:	mls	r3, r1, r2, r3
   1d818:	cmp	r3, #0
   1d81c:	bne	1d8e8 <ReadCompressedDataSlabN+0x2d40>
   1d820:	add	r6, sp, #76	; 0x4c
   1d824:	add	r8, sp, #116	; 0x74
   1d828:	ldr	r9, [sp, #260]	; 0x104
   1d82c:	mov	r7, #1
   1d830:	ldr	r3, [sp, #268]	; 0x10c
   1d834:	add	sl, r3, #4
   1d838:	b	1d870 <ReadCompressedDataSlabN+0x2cc8>
   1d83c:	cmp	r3, #0
   1d840:	bne	1d8c4 <ReadCompressedDataSlabN+0x2d1c>
   1d844:	add	r7, r7, #1
   1d848:	cmp	fp, r7
   1d84c:	beq	1d918 <ReadCompressedDataSlabN+0x2d70>
   1d850:	ldr	r3, [r6]
   1d854:	ldr	r1, [sl, #4]!
   1d858:	add	r3, r3, #1
   1d85c:	sdiv	r2, r3, r1
   1d860:	str	r3, [r6]
   1d864:	mls	r3, r1, r2, r3
   1d868:	cmp	r3, #0
   1d86c:	bne	1d8ec <ReadCompressedDataSlabN+0x2d44>
   1d870:	ldr	r5, [r8], #4
   1d874:	mov	r3, #0
   1d878:	str	r3, [r6], #4
   1d87c:	ldr	r3, [r9, #4]!
   1d880:	sdiv	r2, r4, r5
   1d884:	mls	r2, r5, r2, r4
   1d888:	cmp	r2, #0
   1d88c:	beq	1d83c <ReadCompressedDataSlabN+0x2c94>
   1d890:	ldr	ip, [r8, #-8]
   1d894:	sub	r5, r5, r2
   1d898:	ldr	r1, [sp, #12]
   1d89c:	ldr	r0, [sp, #16]
   1d8a0:	mla	r3, r3, ip, r5
   1d8a4:	str	ip, [sp, #24]
   1d8a8:	ldr	r2, [sp, #248]	; 0xf8
   1d8ac:	bl	235c <InflateSkipData>
   1d8b0:	ldr	r3, [r9]
   1d8b4:	ldr	ip, [sp, #24]
   1d8b8:	mla	r5, r3, ip, r5
   1d8bc:	add	r4, r4, r5
   1d8c0:	b	1d844 <ReadCompressedDataSlabN+0x2c9c>
   1d8c4:	ldr	r5, [r8, #-8]
   1d8c8:	ldr	r1, [sp, #12]
   1d8cc:	ldr	r0, [sp, #16]
   1d8d0:	mul	r3, r3, r5
   1d8d4:	ldr	r2, [sp, #248]	; 0xf8
   1d8d8:	bl	235c <InflateSkipData>
   1d8dc:	ldr	r3, [r9]
   1d8e0:	mla	r4, r3, r5, r4
   1d8e4:	b	1d844 <ReadCompressedDataSlabN+0x2c9c>
   1d8e8:	mov	r7, #1
   1d8ec:	add	r3, sp, #208	; 0xd0
   1d8f0:	add	r7, r3, r7, lsl #2
   1d8f4:	ldr	ip, [r7, #-176]	; 0xffffff50
   1d8f8:	cmp	ip, #0
   1d8fc:	beq	1d918 <ReadCompressedDataSlabN+0x2d70>
   1d900:	mov	r3, ip
   1d904:	ldr	r1, [sp, #12]
   1d908:	add	r4, r4, ip
   1d90c:	ldr	r0, [sp, #16]
   1d910:	ldr	r2, [sp, #248]	; 0xf8
   1d914:	bl	235c <InflateSkipData>
   1d918:	ldr	r2, [sp, #28]
   1d91c:	ldr	r3, [sp, #268]	; 0x10c
   1d920:	ldr	r3, [r3]
   1d924:	add	r3, r2, r3
   1d928:	ldr	r2, [sp, #20]
   1d92c:	str	r3, [sp, #28]
   1d930:	cmp	r3, r2
   1d934:	blt	1d76c <ReadCompressedDataSlabN+0x2bc4>
   1d938:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1d93c:	ldr	r1, [sp, #12]
   1d940:	ldr	r0, [sp, #16]
   1d944:	ldr	r2, [sp, #248]	; 0xf8
   1d948:	bl	235c <InflateSkipData>
   1d94c:	ldr	r3, [sp, #260]	; 0x104
   1d950:	ldr	r3, [r3]
   1d954:	add	r4, r4, r3
   1d958:	b	1d77c <ReadCompressedDataSlabN+0x2bd4>
   1d95c:	cmp	r3, #0
   1d960:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1d964:	str	fp, [sp, #12]
   1d968:	mov	r3, #0
   1d96c:	ldr	fp, [sp, #252]	; 0xfc
   1d970:	str	sl, [sp, #16]
   1d974:	str	r3, [sp, #28]
   1d978:	ldr	r3, [sp, #260]	; 0x104
   1d97c:	ldr	r3, [r3]
   1d980:	cmp	r3, #0
   1d984:	bne	1db48 <ReadCompressedDataSlabN+0x2fa0>
   1d988:	ldr	r2, [sp, #8]
   1d98c:	ldr	r3, [sp, #268]	; 0x10c
   1d990:	ldr	r6, [sp, #12]
   1d994:	ldr	r5, [sp, #16]
   1d998:	ldr	ip, [r3]
   1d99c:	ldr	r1, [sp, #28]
   1d9a0:	mov	r0, r5
   1d9a4:	ldr	r3, [sp, #248]	; 0xf8
   1d9a8:	str	ip, [sp]
   1d9ac:	add	r2, r2, r1, lsl #2
   1d9b0:	mov	r1, r6
   1d9b4:	bl	14e14 <ReadCompressedInt32Data>
   1d9b8:	mov	r1, r6
   1d9bc:	mov	r0, r5
   1d9c0:	ldr	r2, [sp, #248]	; 0xf8
   1d9c4:	ldr	ip, [sp, #268]	; 0x10c
   1d9c8:	ldr	r3, [sp, #256]	; 0x100
   1d9cc:	ldr	lr, [ip]
   1d9d0:	ldr	ip, [sp, #260]	; 0x104
   1d9d4:	ldr	r3, [r3]
   1d9d8:	ldr	ip, [ip]
   1d9dc:	sub	r3, r3, lr
   1d9e0:	sub	r3, r3, ip
   1d9e4:	bl	235c <InflateSkipData>
   1d9e8:	ldr	r3, [sp, #256]	; 0x100
   1d9ec:	cmp	fp, #1
   1d9f0:	ldr	r2, [sp, #260]	; 0x104
   1d9f4:	ldr	r3, [r3]
   1d9f8:	ldr	r2, [r2]
   1d9fc:	sub	r3, r3, r2
   1da00:	add	r4, r3, r4
   1da04:	ble	1db24 <ReadCompressedDataSlabN+0x2f7c>
   1da08:	ldr	r3, [sp, #76]	; 0x4c
   1da0c:	ldr	r2, [sp, #268]	; 0x10c
   1da10:	add	r3, r3, #1
   1da14:	ldr	r1, [r2, #4]
   1da18:	str	r3, [sp, #76]	; 0x4c
   1da1c:	sdiv	r2, r3, r1
   1da20:	mls	r3, r1, r2, r3
   1da24:	cmp	r3, #0
   1da28:	bne	1daf4 <ReadCompressedDataSlabN+0x2f4c>
   1da2c:	add	r6, sp, #76	; 0x4c
   1da30:	add	r8, sp, #116	; 0x74
   1da34:	ldr	r9, [sp, #260]	; 0x104
   1da38:	mov	r7, #1
   1da3c:	ldr	r3, [sp, #268]	; 0x10c
   1da40:	add	sl, r3, #4
   1da44:	b	1da7c <ReadCompressedDataSlabN+0x2ed4>
   1da48:	cmp	r3, #0
   1da4c:	bne	1dad0 <ReadCompressedDataSlabN+0x2f28>
   1da50:	add	r7, r7, #1
   1da54:	cmp	fp, r7
   1da58:	beq	1db24 <ReadCompressedDataSlabN+0x2f7c>
   1da5c:	ldr	r3, [r6]
   1da60:	ldr	r1, [sl, #4]!
   1da64:	add	r3, r3, #1
   1da68:	sdiv	r2, r3, r1
   1da6c:	str	r3, [r6]
   1da70:	mls	r3, r1, r2, r3
   1da74:	cmp	r3, #0
   1da78:	bne	1daf8 <ReadCompressedDataSlabN+0x2f50>
   1da7c:	ldr	r5, [r8], #4
   1da80:	mov	r3, #0
   1da84:	str	r3, [r6], #4
   1da88:	ldr	r3, [r9, #4]!
   1da8c:	sdiv	r2, r4, r5
   1da90:	mls	r2, r5, r2, r4
   1da94:	cmp	r2, #0
   1da98:	beq	1da48 <ReadCompressedDataSlabN+0x2ea0>
   1da9c:	ldr	ip, [r8, #-8]
   1daa0:	sub	r5, r5, r2
   1daa4:	ldr	r1, [sp, #12]
   1daa8:	ldr	r0, [sp, #16]
   1daac:	mla	r3, r3, ip, r5
   1dab0:	str	ip, [sp, #24]
   1dab4:	ldr	r2, [sp, #248]	; 0xf8
   1dab8:	bl	235c <InflateSkipData>
   1dabc:	ldr	r3, [r9]
   1dac0:	ldr	ip, [sp, #24]
   1dac4:	mla	r5, r3, ip, r5
   1dac8:	add	r4, r4, r5
   1dacc:	b	1da50 <ReadCompressedDataSlabN+0x2ea8>
   1dad0:	ldr	r5, [r8, #-8]
   1dad4:	ldr	r1, [sp, #12]
   1dad8:	ldr	r0, [sp, #16]
   1dadc:	mul	r3, r3, r5
   1dae0:	ldr	r2, [sp, #248]	; 0xf8
   1dae4:	bl	235c <InflateSkipData>
   1dae8:	ldr	r3, [r9]
   1daec:	mla	r4, r3, r5, r4
   1daf0:	b	1da50 <ReadCompressedDataSlabN+0x2ea8>
   1daf4:	mov	r7, #1
   1daf8:	add	r3, sp, #208	; 0xd0
   1dafc:	add	r7, r3, r7, lsl #2
   1db00:	ldr	ip, [r7, #-176]	; 0xffffff50
   1db04:	cmp	ip, #0
   1db08:	beq	1db24 <ReadCompressedDataSlabN+0x2f7c>
   1db0c:	mov	r3, ip
   1db10:	ldr	r1, [sp, #12]
   1db14:	add	r4, r4, ip
   1db18:	ldr	r0, [sp, #16]
   1db1c:	ldr	r2, [sp, #248]	; 0xf8
   1db20:	bl	235c <InflateSkipData>
   1db24:	ldr	r2, [sp, #28]
   1db28:	ldr	r3, [sp, #268]	; 0x10c
   1db2c:	ldr	r3, [r3]
   1db30:	add	r3, r2, r3
   1db34:	ldr	r2, [sp, #20]
   1db38:	str	r3, [sp, #28]
   1db3c:	cmp	r3, r2
   1db40:	blt	1d978 <ReadCompressedDataSlabN+0x2dd0>
   1db44:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1db48:	ldr	r1, [sp, #12]
   1db4c:	ldr	r0, [sp, #16]
   1db50:	ldr	r2, [sp, #248]	; 0xf8
   1db54:	bl	235c <InflateSkipData>
   1db58:	ldr	r3, [sp, #260]	; 0x104
   1db5c:	ldr	r3, [r3]
   1db60:	add	r4, r4, r3
   1db64:	b	1d988 <ReadCompressedDataSlabN+0x2de0>
   1db68:	cmp	r3, #0
   1db6c:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1db70:	str	fp, [sp, #12]
   1db74:	mov	r3, #0
   1db78:	ldr	fp, [sp, #252]	; 0xfc
   1db7c:	str	sl, [sp, #16]
   1db80:	str	r3, [sp, #28]
   1db84:	ldr	r3, [sp, #260]	; 0x104
   1db88:	ldr	r3, [r3]
   1db8c:	cmp	r3, #0
   1db90:	bne	1dd54 <ReadCompressedDataSlabN+0x31ac>
   1db94:	ldr	r2, [sp, #8]
   1db98:	ldr	r3, [sp, #268]	; 0x10c
   1db9c:	ldr	r6, [sp, #12]
   1dba0:	ldr	r5, [sp, #16]
   1dba4:	ldr	ip, [r3]
   1dba8:	ldr	r1, [sp, #28]
   1dbac:	mov	r0, r5
   1dbb0:	ldr	r3, [sp, #248]	; 0xf8
   1dbb4:	str	ip, [sp]
   1dbb8:	add	r2, r2, r1
   1dbbc:	mov	r1, r6
   1dbc0:	bl	163c4 <ReadCompressedInt8Data>
   1dbc4:	mov	r1, r6
   1dbc8:	mov	r0, r5
   1dbcc:	ldr	r2, [sp, #248]	; 0xf8
   1dbd0:	ldr	ip, [sp, #268]	; 0x10c
   1dbd4:	ldr	r3, [sp, #256]	; 0x100
   1dbd8:	ldr	lr, [ip]
   1dbdc:	ldr	ip, [sp, #260]	; 0x104
   1dbe0:	ldr	r3, [r3]
   1dbe4:	ldr	ip, [ip]
   1dbe8:	sub	r3, r3, lr
   1dbec:	sub	r3, r3, ip
   1dbf0:	bl	235c <InflateSkipData>
   1dbf4:	ldr	r3, [sp, #256]	; 0x100
   1dbf8:	cmp	fp, #1
   1dbfc:	ldr	r2, [sp, #260]	; 0x104
   1dc00:	ldr	r3, [r3]
   1dc04:	ldr	r2, [r2]
   1dc08:	sub	r3, r3, r2
   1dc0c:	add	r4, r3, r4
   1dc10:	ble	1dd30 <ReadCompressedDataSlabN+0x3188>
   1dc14:	ldr	r3, [sp, #76]	; 0x4c
   1dc18:	ldr	r2, [sp, #268]	; 0x10c
   1dc1c:	add	r3, r3, #1
   1dc20:	ldr	r1, [r2, #4]
   1dc24:	str	r3, [sp, #76]	; 0x4c
   1dc28:	sdiv	r2, r3, r1
   1dc2c:	mls	r3, r1, r2, r3
   1dc30:	cmp	r3, #0
   1dc34:	bne	1dd00 <ReadCompressedDataSlabN+0x3158>
   1dc38:	add	r6, sp, #76	; 0x4c
   1dc3c:	add	r8, sp, #116	; 0x74
   1dc40:	ldr	r9, [sp, #260]	; 0x104
   1dc44:	mov	r7, #1
   1dc48:	ldr	r3, [sp, #268]	; 0x10c
   1dc4c:	add	sl, r3, #4
   1dc50:	b	1dc88 <ReadCompressedDataSlabN+0x30e0>
   1dc54:	cmp	r3, #0
   1dc58:	bne	1dcdc <ReadCompressedDataSlabN+0x3134>
   1dc5c:	add	r7, r7, #1
   1dc60:	cmp	fp, r7
   1dc64:	beq	1dd30 <ReadCompressedDataSlabN+0x3188>
   1dc68:	ldr	r3, [r6]
   1dc6c:	ldr	r1, [sl, #4]!
   1dc70:	add	r3, r3, #1
   1dc74:	sdiv	r2, r3, r1
   1dc78:	str	r3, [r6]
   1dc7c:	mls	r3, r1, r2, r3
   1dc80:	cmp	r3, #0
   1dc84:	bne	1dd04 <ReadCompressedDataSlabN+0x315c>
   1dc88:	ldr	r5, [r8], #4
   1dc8c:	mov	r3, #0
   1dc90:	str	r3, [r6], #4
   1dc94:	ldr	r3, [r9, #4]!
   1dc98:	sdiv	r2, r4, r5
   1dc9c:	mls	r2, r5, r2, r4
   1dca0:	cmp	r2, #0
   1dca4:	beq	1dc54 <ReadCompressedDataSlabN+0x30ac>
   1dca8:	ldr	ip, [r8, #-8]
   1dcac:	sub	r5, r5, r2
   1dcb0:	ldr	r1, [sp, #12]
   1dcb4:	ldr	r0, [sp, #16]
   1dcb8:	mla	r3, r3, ip, r5
   1dcbc:	str	ip, [sp, #24]
   1dcc0:	ldr	r2, [sp, #248]	; 0xf8
   1dcc4:	bl	235c <InflateSkipData>
   1dcc8:	ldr	r3, [r9]
   1dccc:	ldr	ip, [sp, #24]
   1dcd0:	mla	r5, r3, ip, r5
   1dcd4:	add	r4, r4, r5
   1dcd8:	b	1dc5c <ReadCompressedDataSlabN+0x30b4>
   1dcdc:	ldr	r5, [r8, #-8]
   1dce0:	ldr	r1, [sp, #12]
   1dce4:	ldr	r0, [sp, #16]
   1dce8:	mul	r3, r3, r5
   1dcec:	ldr	r2, [sp, #248]	; 0xf8
   1dcf0:	bl	235c <InflateSkipData>
   1dcf4:	ldr	r3, [r9]
   1dcf8:	mla	r4, r3, r5, r4
   1dcfc:	b	1dc5c <ReadCompressedDataSlabN+0x30b4>
   1dd00:	mov	r7, #1
   1dd04:	add	r3, sp, #208	; 0xd0
   1dd08:	add	r7, r3, r7, lsl #2
   1dd0c:	ldr	ip, [r7, #-176]	; 0xffffff50
   1dd10:	cmp	ip, #0
   1dd14:	beq	1dd30 <ReadCompressedDataSlabN+0x3188>
   1dd18:	mov	r3, ip
   1dd1c:	ldr	r1, [sp, #12]
   1dd20:	add	r4, r4, ip
   1dd24:	ldr	r0, [sp, #16]
   1dd28:	ldr	r2, [sp, #248]	; 0xf8
   1dd2c:	bl	235c <InflateSkipData>
   1dd30:	ldr	r2, [sp, #28]
   1dd34:	ldr	r3, [sp, #268]	; 0x10c
   1dd38:	ldr	r3, [r3]
   1dd3c:	add	r3, r2, r3
   1dd40:	ldr	r2, [sp, #20]
   1dd44:	str	r3, [sp, #28]
   1dd48:	cmp	r3, r2
   1dd4c:	blt	1db84 <ReadCompressedDataSlabN+0x2fdc>
   1dd50:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1dd54:	ldr	r1, [sp, #12]
   1dd58:	ldr	r0, [sp, #16]
   1dd5c:	ldr	r2, [sp, #248]	; 0xf8
   1dd60:	bl	235c <InflateSkipData>
   1dd64:	ldr	r3, [sp, #260]	; 0x104
   1dd68:	ldr	r3, [r3]
   1dd6c:	add	r4, r4, r3
   1dd70:	b	1db94 <ReadCompressedDataSlabN+0x2fec>
   1dd74:	cmp	r3, #0
   1dd78:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1dd7c:	str	fp, [sp, #12]
   1dd80:	mov	r3, #0
   1dd84:	ldr	fp, [sp, #252]	; 0xfc
   1dd88:	str	sl, [sp, #16]
   1dd8c:	str	r3, [sp, #28]
   1dd90:	ldr	r3, [sp, #260]	; 0x104
   1dd94:	ldr	r3, [r3]
   1dd98:	cmp	r3, #0
   1dd9c:	bne	1df60 <ReadCompressedDataSlabN+0x33b8>
   1dda0:	ldr	r2, [sp, #8]
   1dda4:	ldr	r3, [sp, #268]	; 0x10c
   1dda8:	ldr	r6, [sp, #12]
   1ddac:	ldr	r5, [sp, #16]
   1ddb0:	ldr	ip, [r3]
   1ddb4:	ldr	r1, [sp, #28]
   1ddb8:	mov	r0, r5
   1ddbc:	ldr	r3, [sp, #248]	; 0xf8
   1ddc0:	str	ip, [sp]
   1ddc4:	add	r2, r2, r1, lsl #3
   1ddc8:	mov	r1, r6
   1ddcc:	bl	142d4 <ReadCompressedInt64Data>
   1ddd0:	mov	r1, r6
   1ddd4:	mov	r0, r5
   1ddd8:	ldr	r2, [sp, #248]	; 0xf8
   1dddc:	ldr	ip, [sp, #268]	; 0x10c
   1dde0:	ldr	r3, [sp, #256]	; 0x100
   1dde4:	ldr	lr, [ip]
   1dde8:	ldr	ip, [sp, #260]	; 0x104
   1ddec:	ldr	r3, [r3]
   1ddf0:	ldr	ip, [ip]
   1ddf4:	sub	r3, r3, lr
   1ddf8:	sub	r3, r3, ip
   1ddfc:	bl	235c <InflateSkipData>
   1de00:	ldr	r3, [sp, #256]	; 0x100
   1de04:	cmp	fp, #1
   1de08:	ldr	r2, [sp, #260]	; 0x104
   1de0c:	ldr	r3, [r3]
   1de10:	ldr	r2, [r2]
   1de14:	sub	r3, r3, r2
   1de18:	add	r4, r3, r4
   1de1c:	ble	1df3c <ReadCompressedDataSlabN+0x3394>
   1de20:	ldr	r3, [sp, #76]	; 0x4c
   1de24:	ldr	r2, [sp, #268]	; 0x10c
   1de28:	add	r3, r3, #1
   1de2c:	ldr	r1, [r2, #4]
   1de30:	str	r3, [sp, #76]	; 0x4c
   1de34:	sdiv	r2, r3, r1
   1de38:	mls	r3, r1, r2, r3
   1de3c:	cmp	r3, #0
   1de40:	bne	1df0c <ReadCompressedDataSlabN+0x3364>
   1de44:	add	r6, sp, #76	; 0x4c
   1de48:	add	r8, sp, #116	; 0x74
   1de4c:	ldr	r9, [sp, #260]	; 0x104
   1de50:	mov	r7, #1
   1de54:	ldr	r3, [sp, #268]	; 0x10c
   1de58:	add	sl, r3, #4
   1de5c:	b	1de94 <ReadCompressedDataSlabN+0x32ec>
   1de60:	cmp	r3, #0
   1de64:	bne	1dee8 <ReadCompressedDataSlabN+0x3340>
   1de68:	add	r7, r7, #1
   1de6c:	cmp	fp, r7
   1de70:	beq	1df3c <ReadCompressedDataSlabN+0x3394>
   1de74:	ldr	r3, [r6]
   1de78:	ldr	r1, [sl, #4]!
   1de7c:	add	r3, r3, #1
   1de80:	sdiv	r2, r3, r1
   1de84:	str	r3, [r6]
   1de88:	mls	r3, r1, r2, r3
   1de8c:	cmp	r3, #0
   1de90:	bne	1df10 <ReadCompressedDataSlabN+0x3368>
   1de94:	ldr	r5, [r8], #4
   1de98:	mov	r3, #0
   1de9c:	str	r3, [r6], #4
   1dea0:	ldr	r3, [r9, #4]!
   1dea4:	sdiv	r2, r4, r5
   1dea8:	mls	r2, r5, r2, r4
   1deac:	cmp	r2, #0
   1deb0:	beq	1de60 <ReadCompressedDataSlabN+0x32b8>
   1deb4:	ldr	ip, [r8, #-8]
   1deb8:	sub	r5, r5, r2
   1debc:	ldr	r1, [sp, #12]
   1dec0:	ldr	r0, [sp, #16]
   1dec4:	mla	r3, r3, ip, r5
   1dec8:	str	ip, [sp, #24]
   1decc:	ldr	r2, [sp, #248]	; 0xf8
   1ded0:	bl	235c <InflateSkipData>
   1ded4:	ldr	r3, [r9]
   1ded8:	ldr	ip, [sp, #24]
   1dedc:	mla	r5, r3, ip, r5
   1dee0:	add	r4, r4, r5
   1dee4:	b	1de68 <ReadCompressedDataSlabN+0x32c0>
   1dee8:	ldr	r5, [r8, #-8]
   1deec:	ldr	r1, [sp, #12]
   1def0:	ldr	r0, [sp, #16]
   1def4:	mul	r3, r3, r5
   1def8:	ldr	r2, [sp, #248]	; 0xf8
   1defc:	bl	235c <InflateSkipData>
   1df00:	ldr	r3, [r9]
   1df04:	mla	r4, r3, r5, r4
   1df08:	b	1de68 <ReadCompressedDataSlabN+0x32c0>
   1df0c:	mov	r7, #1
   1df10:	add	r3, sp, #208	; 0xd0
   1df14:	add	r7, r3, r7, lsl #2
   1df18:	ldr	ip, [r7, #-176]	; 0xffffff50
   1df1c:	cmp	ip, #0
   1df20:	beq	1df3c <ReadCompressedDataSlabN+0x3394>
   1df24:	mov	r3, ip
   1df28:	ldr	r1, [sp, #12]
   1df2c:	add	r4, r4, ip
   1df30:	ldr	r0, [sp, #16]
   1df34:	ldr	r2, [sp, #248]	; 0xf8
   1df38:	bl	235c <InflateSkipData>
   1df3c:	ldr	r2, [sp, #28]
   1df40:	ldr	r3, [sp, #268]	; 0x10c
   1df44:	ldr	r3, [r3]
   1df48:	add	r3, r2, r3
   1df4c:	ldr	r2, [sp, #20]
   1df50:	str	r3, [sp, #28]
   1df54:	cmp	r3, r2
   1df58:	blt	1dd90 <ReadCompressedDataSlabN+0x31e8>
   1df5c:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1df60:	ldr	r1, [sp, #12]
   1df64:	ldr	r0, [sp, #16]
   1df68:	ldr	r2, [sp, #248]	; 0xf8
   1df6c:	bl	235c <InflateSkipData>
   1df70:	ldr	r3, [sp, #260]	; 0x104
   1df74:	ldr	r3, [r3]
   1df78:	add	r4, r4, r3
   1df7c:	b	1dda0 <ReadCompressedDataSlabN+0x31f8>
   1df80:	cmp	r3, #0
   1df84:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1df88:	str	fp, [sp, #12]
   1df8c:	mov	r3, #0
   1df90:	ldr	fp, [sp, #252]	; 0xfc
   1df94:	str	sl, [sp, #16]
   1df98:	str	r3, [sp, #28]
   1df9c:	ldr	r3, [sp, #260]	; 0x104
   1dfa0:	ldr	r3, [r3]
   1dfa4:	cmp	r3, #0
   1dfa8:	bne	1e16c <ReadCompressedDataSlabN+0x35c4>
   1dfac:	ldr	r2, [sp, #8]
   1dfb0:	ldr	r3, [sp, #268]	; 0x10c
   1dfb4:	ldr	r6, [sp, #12]
   1dfb8:	ldr	r5, [sp, #16]
   1dfbc:	ldr	ip, [r3]
   1dfc0:	ldr	r1, [sp, #28]
   1dfc4:	mov	r0, r5
   1dfc8:	ldr	r3, [sp, #248]	; 0xf8
   1dfcc:	str	ip, [sp]
   1dfd0:	add	r2, r2, r1
   1dfd4:	mov	r1, r6
   1dfd8:	bl	169c8 <ReadCompressedUInt8Data>
   1dfdc:	mov	r1, r6
   1dfe0:	mov	r0, r5
   1dfe4:	ldr	r2, [sp, #248]	; 0xf8
   1dfe8:	ldr	ip, [sp, #268]	; 0x10c
   1dfec:	ldr	r3, [sp, #256]	; 0x100
   1dff0:	ldr	lr, [ip]
   1dff4:	ldr	ip, [sp, #260]	; 0x104
   1dff8:	ldr	r3, [r3]
   1dffc:	ldr	ip, [ip]
   1e000:	sub	r3, r3, lr
   1e004:	sub	r3, r3, ip
   1e008:	bl	235c <InflateSkipData>
   1e00c:	ldr	r3, [sp, #256]	; 0x100
   1e010:	cmp	fp, #1
   1e014:	ldr	r2, [sp, #260]	; 0x104
   1e018:	ldr	r3, [r3]
   1e01c:	ldr	r2, [r2]
   1e020:	sub	r3, r3, r2
   1e024:	add	r4, r3, r4
   1e028:	ble	1e148 <ReadCompressedDataSlabN+0x35a0>
   1e02c:	ldr	r3, [sp, #76]	; 0x4c
   1e030:	ldr	r2, [sp, #268]	; 0x10c
   1e034:	add	r3, r3, #1
   1e038:	ldr	r1, [r2, #4]
   1e03c:	str	r3, [sp, #76]	; 0x4c
   1e040:	sdiv	r2, r3, r1
   1e044:	mls	r3, r1, r2, r3
   1e048:	cmp	r3, #0
   1e04c:	bne	1e118 <ReadCompressedDataSlabN+0x3570>
   1e050:	add	r6, sp, #76	; 0x4c
   1e054:	add	r8, sp, #116	; 0x74
   1e058:	ldr	r9, [sp, #260]	; 0x104
   1e05c:	mov	r7, #1
   1e060:	ldr	r3, [sp, #268]	; 0x10c
   1e064:	add	sl, r3, #4
   1e068:	b	1e0a0 <ReadCompressedDataSlabN+0x34f8>
   1e06c:	cmp	r3, #0
   1e070:	bne	1e0f4 <ReadCompressedDataSlabN+0x354c>
   1e074:	add	r7, r7, #1
   1e078:	cmp	fp, r7
   1e07c:	beq	1e148 <ReadCompressedDataSlabN+0x35a0>
   1e080:	ldr	r3, [r6]
   1e084:	ldr	r1, [sl, #4]!
   1e088:	add	r3, r3, #1
   1e08c:	sdiv	r2, r3, r1
   1e090:	str	r3, [r6]
   1e094:	mls	r3, r1, r2, r3
   1e098:	cmp	r3, #0
   1e09c:	bne	1e11c <ReadCompressedDataSlabN+0x3574>
   1e0a0:	ldr	r5, [r8], #4
   1e0a4:	mov	r3, #0
   1e0a8:	str	r3, [r6], #4
   1e0ac:	ldr	r3, [r9, #4]!
   1e0b0:	sdiv	r2, r4, r5
   1e0b4:	mls	r2, r5, r2, r4
   1e0b8:	cmp	r2, #0
   1e0bc:	beq	1e06c <ReadCompressedDataSlabN+0x34c4>
   1e0c0:	ldr	ip, [r8, #-8]
   1e0c4:	sub	r5, r5, r2
   1e0c8:	ldr	r1, [sp, #12]
   1e0cc:	ldr	r0, [sp, #16]
   1e0d0:	mla	r3, r3, ip, r5
   1e0d4:	str	ip, [sp, #24]
   1e0d8:	ldr	r2, [sp, #248]	; 0xf8
   1e0dc:	bl	235c <InflateSkipData>
   1e0e0:	ldr	r3, [r9]
   1e0e4:	ldr	ip, [sp, #24]
   1e0e8:	mla	r5, r3, ip, r5
   1e0ec:	add	r4, r4, r5
   1e0f0:	b	1e074 <ReadCompressedDataSlabN+0x34cc>
   1e0f4:	ldr	r5, [r8, #-8]
   1e0f8:	ldr	r1, [sp, #12]
   1e0fc:	ldr	r0, [sp, #16]
   1e100:	mul	r3, r3, r5
   1e104:	ldr	r2, [sp, #248]	; 0xf8
   1e108:	bl	235c <InflateSkipData>
   1e10c:	ldr	r3, [r9]
   1e110:	mla	r4, r3, r5, r4
   1e114:	b	1e074 <ReadCompressedDataSlabN+0x34cc>
   1e118:	mov	r7, #1
   1e11c:	add	r3, sp, #208	; 0xd0
   1e120:	add	r7, r3, r7, lsl #2
   1e124:	ldr	ip, [r7, #-176]	; 0xffffff50
   1e128:	cmp	ip, #0
   1e12c:	beq	1e148 <ReadCompressedDataSlabN+0x35a0>
   1e130:	mov	r3, ip
   1e134:	ldr	r1, [sp, #12]
   1e138:	add	r4, r4, ip
   1e13c:	ldr	r0, [sp, #16]
   1e140:	ldr	r2, [sp, #248]	; 0xf8
   1e144:	bl	235c <InflateSkipData>
   1e148:	ldr	r2, [sp, #28]
   1e14c:	ldr	r3, [sp, #268]	; 0x10c
   1e150:	ldr	r3, [r3]
   1e154:	add	r3, r2, r3
   1e158:	ldr	r2, [sp, #20]
   1e15c:	str	r3, [sp, #28]
   1e160:	cmp	r3, r2
   1e164:	blt	1df9c <ReadCompressedDataSlabN+0x33f4>
   1e168:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1e16c:	ldr	r1, [sp, #12]
   1e170:	ldr	r0, [sp, #16]
   1e174:	ldr	r2, [sp, #248]	; 0xf8
   1e178:	bl	235c <InflateSkipData>
   1e17c:	ldr	r3, [sp, #260]	; 0x104
   1e180:	ldr	r3, [r3]
   1e184:	add	r4, r4, r3
   1e188:	b	1dfac <ReadCompressedDataSlabN+0x3404>
   1e18c:	cmp	r3, #0
   1e190:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1e194:	str	fp, [sp, #12]
   1e198:	mov	r3, #0
   1e19c:	ldr	fp, [sp, #252]	; 0xfc
   1e1a0:	str	sl, [sp, #16]
   1e1a4:	str	r3, [sp, #28]
   1e1a8:	ldr	r3, [sp, #260]	; 0x104
   1e1ac:	ldr	r3, [r3]
   1e1b0:	cmp	r3, #0
   1e1b4:	bne	1e378 <ReadCompressedDataSlabN+0x37d0>
   1e1b8:	ldr	r2, [sp, #8]
   1e1bc:	ldr	r3, [sp, #268]	; 0x10c
   1e1c0:	ldr	r6, [sp, #12]
   1e1c4:	ldr	r5, [sp, #16]
   1e1c8:	ldr	ip, [r3]
   1e1cc:	ldr	r1, [sp, #28]
   1e1d0:	mov	r0, r5
   1e1d4:	ldr	r3, [sp, #248]	; 0xf8
   1e1d8:	str	ip, [sp]
   1e1dc:	add	r2, r2, r1, lsl #2
   1e1e0:	mov	r1, r6
   1e1e4:	bl	13d20 <ReadCompressedSingleData>
   1e1e8:	mov	r1, r6
   1e1ec:	mov	r0, r5
   1e1f0:	ldr	r2, [sp, #248]	; 0xf8
   1e1f4:	ldr	ip, [sp, #268]	; 0x10c
   1e1f8:	ldr	r3, [sp, #256]	; 0x100
   1e1fc:	ldr	lr, [ip]
   1e200:	ldr	ip, [sp, #260]	; 0x104
   1e204:	ldr	r3, [r3]
   1e208:	ldr	ip, [ip]
   1e20c:	sub	r3, r3, lr
   1e210:	sub	r3, r3, ip
   1e214:	bl	235c <InflateSkipData>
   1e218:	ldr	r3, [sp, #256]	; 0x100
   1e21c:	cmp	fp, #1
   1e220:	ldr	r2, [sp, #260]	; 0x104
   1e224:	ldr	r3, [r3]
   1e228:	ldr	r2, [r2]
   1e22c:	sub	r3, r3, r2
   1e230:	add	r4, r3, r4
   1e234:	ble	1e354 <ReadCompressedDataSlabN+0x37ac>
   1e238:	ldr	r3, [sp, #76]	; 0x4c
   1e23c:	ldr	r2, [sp, #268]	; 0x10c
   1e240:	add	r3, r3, #1
   1e244:	ldr	r1, [r2, #4]
   1e248:	str	r3, [sp, #76]	; 0x4c
   1e24c:	sdiv	r2, r3, r1
   1e250:	mls	r3, r1, r2, r3
   1e254:	cmp	r3, #0
   1e258:	bne	1e324 <ReadCompressedDataSlabN+0x377c>
   1e25c:	add	r6, sp, #76	; 0x4c
   1e260:	add	r8, sp, #116	; 0x74
   1e264:	ldr	r9, [sp, #260]	; 0x104
   1e268:	mov	r7, #1
   1e26c:	ldr	r3, [sp, #268]	; 0x10c
   1e270:	add	sl, r3, #4
   1e274:	b	1e2ac <ReadCompressedDataSlabN+0x3704>
   1e278:	cmp	r3, #0
   1e27c:	bne	1e300 <ReadCompressedDataSlabN+0x3758>
   1e280:	add	r7, r7, #1
   1e284:	cmp	fp, r7
   1e288:	beq	1e354 <ReadCompressedDataSlabN+0x37ac>
   1e28c:	ldr	r3, [r6]
   1e290:	ldr	r1, [sl, #4]!
   1e294:	add	r3, r3, #1
   1e298:	sdiv	r2, r3, r1
   1e29c:	str	r3, [r6]
   1e2a0:	mls	r3, r1, r2, r3
   1e2a4:	cmp	r3, #0
   1e2a8:	bne	1e328 <ReadCompressedDataSlabN+0x3780>
   1e2ac:	ldr	r5, [r8], #4
   1e2b0:	mov	r3, #0
   1e2b4:	str	r3, [r6], #4
   1e2b8:	ldr	r3, [r9, #4]!
   1e2bc:	sdiv	r2, r4, r5
   1e2c0:	mls	r2, r5, r2, r4
   1e2c4:	cmp	r2, #0
   1e2c8:	beq	1e278 <ReadCompressedDataSlabN+0x36d0>
   1e2cc:	ldr	ip, [r8, #-8]
   1e2d0:	sub	r5, r5, r2
   1e2d4:	ldr	r1, [sp, #12]
   1e2d8:	ldr	r0, [sp, #16]
   1e2dc:	mla	r3, r3, ip, r5
   1e2e0:	str	ip, [sp, #24]
   1e2e4:	ldr	r2, [sp, #248]	; 0xf8
   1e2e8:	bl	235c <InflateSkipData>
   1e2ec:	ldr	r3, [r9]
   1e2f0:	ldr	ip, [sp, #24]
   1e2f4:	mla	r5, r3, ip, r5
   1e2f8:	add	r4, r4, r5
   1e2fc:	b	1e280 <ReadCompressedDataSlabN+0x36d8>
   1e300:	ldr	r5, [r8, #-8]
   1e304:	ldr	r1, [sp, #12]
   1e308:	ldr	r0, [sp, #16]
   1e30c:	mul	r3, r3, r5
   1e310:	ldr	r2, [sp, #248]	; 0xf8
   1e314:	bl	235c <InflateSkipData>
   1e318:	ldr	r3, [r9]
   1e31c:	mla	r4, r3, r5, r4
   1e320:	b	1e280 <ReadCompressedDataSlabN+0x36d8>
   1e324:	mov	r7, #1
   1e328:	add	r3, sp, #208	; 0xd0
   1e32c:	add	r7, r3, r7, lsl #2
   1e330:	ldr	ip, [r7, #-176]	; 0xffffff50
   1e334:	cmp	ip, #0
   1e338:	beq	1e354 <ReadCompressedDataSlabN+0x37ac>
   1e33c:	mov	r3, ip
   1e340:	ldr	r1, [sp, #12]
   1e344:	add	r4, r4, ip
   1e348:	ldr	r0, [sp, #16]
   1e34c:	ldr	r2, [sp, #248]	; 0xf8
   1e350:	bl	235c <InflateSkipData>
   1e354:	ldr	r2, [sp, #28]
   1e358:	ldr	r3, [sp, #268]	; 0x10c
   1e35c:	ldr	r3, [r3]
   1e360:	add	r3, r2, r3
   1e364:	ldr	r2, [sp, #20]
   1e368:	str	r3, [sp, #28]
   1e36c:	cmp	r3, r2
   1e370:	blt	1e1a8 <ReadCompressedDataSlabN+0x3600>
   1e374:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1e378:	ldr	r1, [sp, #12]
   1e37c:	ldr	r0, [sp, #16]
   1e380:	ldr	r2, [sp, #248]	; 0xf8
   1e384:	bl	235c <InflateSkipData>
   1e388:	ldr	r3, [sp, #260]	; 0x104
   1e38c:	ldr	r3, [r3]
   1e390:	add	r4, r4, r3
   1e394:	b	1e1b8 <ReadCompressedDataSlabN+0x3610>
   1e398:	cmp	r3, #0
   1e39c:	ble	1ad38 <ReadCompressedDataSlabN+0x190>
   1e3a0:	str	fp, [sp, #12]
   1e3a4:	mov	r3, #0
   1e3a8:	ldr	fp, [sp, #252]	; 0xfc
   1e3ac:	str	sl, [sp, #16]
   1e3b0:	str	r3, [sp, #28]
   1e3b4:	ldr	r3, [sp, #260]	; 0x104
   1e3b8:	ldr	r3, [r3]
   1e3bc:	cmp	r3, #0
   1e3c0:	bne	1e584 <ReadCompressedDataSlabN+0x39dc>
   1e3c4:	ldr	r2, [sp, #8]
   1e3c8:	ldr	r3, [sp, #268]	; 0x10c
   1e3cc:	ldr	r6, [sp, #12]
   1e3d0:	ldr	r5, [sp, #16]
   1e3d4:	ldr	ip, [r3]
   1e3d8:	ldr	r1, [sp, #28]
   1e3dc:	mov	r0, r5
   1e3e0:	ldr	r3, [sp, #248]	; 0xf8
   1e3e4:	str	ip, [sp]
   1e3e8:	add	r2, r2, r1, lsl #3
   1e3ec:	mov	r1, r6
   1e3f0:	bl	14874 <ReadCompressedUInt64Data>
   1e3f4:	mov	r1, r6
   1e3f8:	mov	r0, r5
   1e3fc:	ldr	r2, [sp, #248]	; 0xf8
   1e400:	ldr	ip, [sp, #268]	; 0x10c
   1e404:	ldr	r3, [sp, #256]	; 0x100
   1e408:	ldr	lr, [ip]
   1e40c:	ldr	ip, [sp, #260]	; 0x104
   1e410:	ldr	r3, [r3]
   1e414:	ldr	ip, [ip]
   1e418:	sub	r3, r3, lr
   1e41c:	sub	r3, r3, ip
   1e420:	bl	235c <InflateSkipData>
   1e424:	ldr	r3, [sp, #256]	; 0x100
   1e428:	cmp	fp, #1
   1e42c:	ldr	r2, [sp, #260]	; 0x104
   1e430:	ldr	r3, [r3]
   1e434:	ldr	r2, [r2]
   1e438:	sub	r3, r3, r2
   1e43c:	add	r4, r3, r4
   1e440:	ble	1e560 <ReadCompressedDataSlabN+0x39b8>
   1e444:	ldr	r3, [sp, #76]	; 0x4c
   1e448:	ldr	r2, [sp, #268]	; 0x10c
   1e44c:	add	r3, r3, #1
   1e450:	ldr	r1, [r2, #4]
   1e454:	str	r3, [sp, #76]	; 0x4c
   1e458:	sdiv	r2, r3, r1
   1e45c:	mls	r3, r1, r2, r3
   1e460:	cmp	r3, #0
   1e464:	bne	1e530 <ReadCompressedDataSlabN+0x3988>
   1e468:	add	r6, sp, #76	; 0x4c
   1e46c:	add	r8, sp, #116	; 0x74
   1e470:	ldr	r9, [sp, #260]	; 0x104
   1e474:	mov	r7, #1
   1e478:	ldr	r3, [sp, #268]	; 0x10c
   1e47c:	add	sl, r3, #4
   1e480:	b	1e4b8 <ReadCompressedDataSlabN+0x3910>
   1e484:	cmp	r3, #0
   1e488:	bne	1e50c <ReadCompressedDataSlabN+0x3964>
   1e48c:	add	r7, r7, #1
   1e490:	cmp	fp, r7
   1e494:	beq	1e560 <ReadCompressedDataSlabN+0x39b8>
   1e498:	ldr	r3, [r6]
   1e49c:	ldr	r1, [sl, #4]!
   1e4a0:	add	r3, r3, #1
   1e4a4:	sdiv	r2, r3, r1
   1e4a8:	str	r3, [r6]
   1e4ac:	mls	r3, r1, r2, r3
   1e4b0:	cmp	r3, #0
   1e4b4:	bne	1e534 <ReadCompressedDataSlabN+0x398c>
   1e4b8:	ldr	r5, [r8], #4
   1e4bc:	mov	r3, #0
   1e4c0:	str	r3, [r6], #4
   1e4c4:	ldr	r3, [r9, #4]!
   1e4c8:	sdiv	r2, r4, r5
   1e4cc:	mls	r2, r5, r2, r4
   1e4d0:	cmp	r2, #0
   1e4d4:	beq	1e484 <ReadCompressedDataSlabN+0x38dc>
   1e4d8:	ldr	ip, [r8, #-8]
   1e4dc:	sub	r5, r5, r2
   1e4e0:	ldr	r1, [sp, #12]
   1e4e4:	ldr	r0, [sp, #16]
   1e4e8:	mla	r3, r3, ip, r5
   1e4ec:	str	ip, [sp, #24]
   1e4f0:	ldr	r2, [sp, #248]	; 0xf8
   1e4f4:	bl	235c <InflateSkipData>
   1e4f8:	ldr	r3, [r9]
   1e4fc:	ldr	ip, [sp, #24]
   1e500:	mla	r5, r3, ip, r5
   1e504:	add	r4, r4, r5
   1e508:	b	1e48c <ReadCompressedDataSlabN+0x38e4>
   1e50c:	ldr	r5, [r8, #-8]
   1e510:	ldr	r1, [sp, #12]
   1e514:	ldr	r0, [sp, #16]
   1e518:	mul	r3, r3, r5
   1e51c:	ldr	r2, [sp, #248]	; 0xf8
   1e520:	bl	235c <InflateSkipData>
   1e524:	ldr	r3, [r9]
   1e528:	mla	r4, r3, r5, r4
   1e52c:	b	1e48c <ReadCompressedDataSlabN+0x38e4>
   1e530:	mov	r7, #1
   1e534:	add	r3, sp, #208	; 0xd0
   1e538:	add	r7, r3, r7, lsl #2
   1e53c:	ldr	ip, [r7, #-176]	; 0xffffff50
   1e540:	cmp	ip, #0
   1e544:	beq	1e560 <ReadCompressedDataSlabN+0x39b8>
   1e548:	mov	r3, ip
   1e54c:	ldr	r1, [sp, #12]
   1e550:	add	r4, r4, ip
   1e554:	ldr	r0, [sp, #16]
   1e558:	ldr	r2, [sp, #248]	; 0xf8
   1e55c:	bl	235c <InflateSkipData>
   1e560:	ldr	r2, [sp, #28]
   1e564:	ldr	r3, [sp, #268]	; 0x10c
   1e568:	ldr	r3, [r3]
   1e56c:	add	r3, r2, r3
   1e570:	ldr	r2, [sp, #20]
   1e574:	str	r3, [sp, #28]
   1e578:	cmp	r3, r2
   1e57c:	blt	1e3b4 <ReadCompressedDataSlabN+0x380c>
   1e580:	b	1ad34 <ReadCompressedDataSlabN+0x18c>
   1e584:	ldr	r1, [sp, #12]
   1e588:	ldr	r0, [sp, #16]
   1e58c:	ldr	r2, [sp, #248]	; 0xf8
   1e590:	bl	235c <InflateSkipData>
   1e594:	ldr	r3, [sp, #260]	; 0x104
   1e598:	ldr	r3, [r3]
   1e59c:	add	r4, r4, r3
   1e5a0:	b	1e3c4 <ReadCompressedDataSlabN+0x381c>
   1e5a4:	mov	r7, #1
   1e5a8:	b	1c8d0 <ReadCompressedDataSlabN+0x1d28>
   1e5ac:	mov	r7, #1
   1e5b0:	b	1d104 <ReadCompressedDataSlabN+0x255c>
   1e5b4:	mov	r7, #1
   1e5b8:	b	1bde8 <ReadCompressedDataSlabN+0x1240>
   1e5bc:	mov	r7, #1
   1e5c0:	b	1c358 <ReadCompressedDataSlabN+0x17b0>
   1e5c4:	mov	r7, #1
   1e5c8:	b	1cb8c <ReadCompressedDataSlabN+0x1fe4>
   1e5cc:	mov	r7, #1
   1e5d0:	b	1c614 <ReadCompressedDataSlabN+0x1a6c>
   1e5d4:	mov	r7, #1
   1e5d8:	b	1b870 <ReadCompressedDataSlabN+0xcc8>
   1e5dc:	mov	r7, #1
   1e5e0:	b	1c0a0 <ReadCompressedDataSlabN+0x14f8>
   1e5e4:	mov	r7, #1
   1e5e8:	b	1bb2c <ReadCompressedDataSlabN+0xf84>
   1e5ec:	mov	r7, #1
   1e5f0:	b	1ce48 <ReadCompressedDataSlabN+0x22a0>
   1e5f4:	mov	r4, #0
   1e5f8:	b	1b63c <ReadCompressedDataSlabN+0xa94>
   1e5fc:	mov	r4, #0
   1e600:	b	1ced0 <ReadCompressedDataSlabN+0x2328>
   1e604:	mov	r4, #0
   1e608:	b	1cc14 <ReadCompressedDataSlabN+0x206c>
   1e60c:	mov	r4, #0
   1e610:	b	1c128 <ReadCompressedDataSlabN+0x1580>
   1e614:	mov	r4, #0
   1e618:	b	1c3e0 <ReadCompressedDataSlabN+0x1838>
   1e61c:	mov	r4, #0
   1e620:	b	1b8f8 <ReadCompressedDataSlabN+0xd50>
   1e624:	mov	r4, #0
   1e628:	b	1c69c <ReadCompressedDataSlabN+0x1af4>
   1e62c:	mov	r4, #0
   1e630:	b	1bbb4 <ReadCompressedDataSlabN+0x100c>
   1e634:	mov	r4, #0
   1e638:	b	1c958 <ReadCompressedDataSlabN+0x1db0>
   1e63c:	mov	r4, #0
   1e640:	b	1be70 <ReadCompressedDataSlabN+0x12c8>

0001e644 <ReadDataSlab1>:
   1e644:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e648:	mov	r5, r0
   1e64c:	mov	r0, r3
   1e650:	strd	r6, [sp, #8]
   1e654:	mov	r4, r1
   1e658:	mov	r6, r2
   1e65c:	strd	r8, [sp, #16]
   1e660:	mov	r9, r3
   1e664:	strd	sl, [sp, #24]
   1e668:	str	lr, [sp, #32]
   1e66c:	sub	sp, sp, #4
   1e670:	ldr	fp, [sp, #40]	; 0x28
   1e674:	ldr	sl, [sp, #44]	; 0x2c
   1e678:	ldr	r8, [sp, #48]	; 0x30
   1e67c:	bl	1598 <Mat_SizeOf@plt>
   1e680:	mul	r1, r0, fp
   1e684:	mov	r2, #1
   1e688:	sub	sl, sl, #1
   1e68c:	mul	r7, r0, sl
   1e690:	ldr	r0, [r5]
   1e694:	bl	1694 <fseek@plt>
   1e698:	sub	r2, r6, #6
   1e69c:	cmp	r2, #9
   1e6a0:	addls	pc, pc, r2, lsl #2
   1e6a4:	b	1ebec <ReadDataSlab1+0x5a8>
   1e6a8:	b	1e73c <ReadDataSlab1+0xf8>
   1e6ac:	b	1e78c <ReadDataSlab1+0x148>
   1e6b0:	b	1e7dc <ReadDataSlab1+0x198>
   1e6b4:	b	1e82c <ReadDataSlab1+0x1e8>
   1e6b8:	b	1e87c <ReadDataSlab1+0x238>
   1e6bc:	b	1e8cc <ReadDataSlab1+0x288>
   1e6c0:	b	1e91c <ReadDataSlab1+0x2d8>
   1e6c4:	b	1e96c <ReadDataSlab1+0x328>
   1e6c8:	b	1e9bc <ReadDataSlab1+0x378>
   1e6cc:	b	1e6d0 <ReadDataSlab1+0x8c>
   1e6d0:	cmp	r7, #0
   1e6d4:	beq	1ea0c <ReadDataSlab1+0x3c8>
   1e6d8:	cmp	r8, #0
   1e6dc:	mov	r6, #0
   1e6e0:	addgt	r8, r4, r8, lsl #3
   1e6e4:	ble	1e71c <ReadDataSlab1+0xd8>
   1e6e8:	mov	r1, r4
   1e6ec:	mov	r3, #1
   1e6f0:	mov	r2, r9
   1e6f4:	mov	r0, r5
   1e6f8:	bl	14850 <ReadUInt64Data>
   1e6fc:	add	r4, r4, #8
   1e700:	add	r6, r6, r0
   1e704:	ldr	r0, [r5]
   1e708:	mov	r2, #1
   1e70c:	mov	r1, r7
   1e710:	bl	1694 <fseek@plt>
   1e714:	cmp	r4, r8
   1e718:	bne	1e6e8 <ReadDataSlab1+0xa4>
   1e71c:	mov	r0, r6
   1e720:	add	sp, sp, #4
   1e724:	ldrd	r4, [sp]
   1e728:	ldrd	r6, [sp, #8]
   1e72c:	ldrd	r8, [sp, #16]
   1e730:	ldrd	sl, [sp, #24]
   1e734:	add	sp, sp, #32
   1e738:	pop	{pc}		; (ldr pc, [sp], #4)
   1e73c:	cmp	r7, #0
   1e740:	beq	1ebbc <ReadDataSlab1+0x578>
   1e744:	cmp	r8, #0
   1e748:	mov	r6, #0
   1e74c:	addgt	r8, r4, r8, lsl #3
   1e750:	ble	1e71c <ReadDataSlab1+0xd8>
   1e754:	mov	r1, r4
   1e758:	mov	r3, #1
   1e75c:	mov	r2, r9
   1e760:	mov	r0, r5
   1e764:	bl	126c8 <ReadDoubleData>
   1e768:	add	r4, r4, #8
   1e76c:	add	r6, r6, r0
   1e770:	ldr	r0, [r5]
   1e774:	mov	r2, #1
   1e778:	mov	r1, r7
   1e77c:	bl	1694 <fseek@plt>
   1e780:	cmp	r8, r4
   1e784:	bne	1e754 <ReadDataSlab1+0x110>
   1e788:	b	1e71c <ReadDataSlab1+0xd8>
   1e78c:	cmp	r7, #0
   1e790:	beq	1eb8c <ReadDataSlab1+0x548>
   1e794:	cmp	r8, #0
   1e798:	mov	r6, #0
   1e79c:	addgt	r8, r4, r8, lsl #2
   1e7a0:	ble	1e71c <ReadDataSlab1+0xd8>
   1e7a4:	mov	r1, r4
   1e7a8:	mov	r3, #1
   1e7ac:	mov	r2, r9
   1e7b0:	mov	r0, r5
   1e7b4:	bl	13cfc <ReadSingleData>
   1e7b8:	add	r4, r4, #4
   1e7bc:	add	r6, r6, r0
   1e7c0:	ldr	r0, [r5]
   1e7c4:	mov	r2, #1
   1e7c8:	mov	r1, r7
   1e7cc:	bl	1694 <fseek@plt>
   1e7d0:	cmp	r4, r8
   1e7d4:	bne	1e7a4 <ReadDataSlab1+0x160>
   1e7d8:	b	1e71c <ReadDataSlab1+0xd8>
   1e7dc:	cmp	r7, #0
   1e7e0:	beq	1eb5c <ReadDataSlab1+0x518>
   1e7e4:	cmp	r8, #0
   1e7e8:	mov	r6, #0
   1e7ec:	addgt	r8, r4, r8
   1e7f0:	ble	1e71c <ReadDataSlab1+0xd8>
   1e7f4:	mov	r1, r4
   1e7f8:	mov	r3, #1
   1e7fc:	mov	r2, r9
   1e800:	mov	r0, r5
   1e804:	bl	163a0 <ReadInt8Data>
   1e808:	add	r4, r4, #1
   1e80c:	add	r6, r6, r0
   1e810:	ldr	r0, [r5]
   1e814:	mov	r2, #1
   1e818:	mov	r1, r7
   1e81c:	bl	1694 <fseek@plt>
   1e820:	cmp	r8, r4
   1e824:	bne	1e7f4 <ReadDataSlab1+0x1b0>
   1e828:	b	1e71c <ReadDataSlab1+0xd8>
   1e82c:	cmp	r7, #0
   1e830:	beq	1eb2c <ReadDataSlab1+0x4e8>
   1e834:	cmp	r8, #0
   1e838:	mov	r6, #0
   1e83c:	addgt	r8, r4, r8
   1e840:	ble	1e71c <ReadDataSlab1+0xd8>
   1e844:	mov	r1, r4
   1e848:	mov	r3, #1
   1e84c:	mov	r2, r9
   1e850:	mov	r0, r5
   1e854:	bl	169a4 <ReadUInt8Data>
   1e858:	add	r4, r4, #1
   1e85c:	add	r6, r6, r0
   1e860:	ldr	r0, [r5]
   1e864:	mov	r2, #1
   1e868:	mov	r1, r7
   1e86c:	bl	1694 <fseek@plt>
   1e870:	cmp	r4, r8
   1e874:	bne	1e844 <ReadDataSlab1+0x200>
   1e878:	b	1e71c <ReadDataSlab1+0xd8>
   1e87c:	cmp	r7, #0
   1e880:	beq	1eafc <ReadDataSlab1+0x4b8>
   1e884:	cmp	r8, #0
   1e888:	mov	r6, #0
   1e88c:	addgt	r8, r4, r8, lsl #1
   1e890:	ble	1e71c <ReadDataSlab1+0xd8>
   1e894:	mov	r1, r4
   1e898:	mov	r3, #1
   1e89c:	mov	r2, r9
   1e8a0:	mov	r0, r5
   1e8a4:	bl	158b8 <ReadInt16Data>
   1e8a8:	add	r4, r4, #2
   1e8ac:	add	r6, r6, r0
   1e8b0:	ldr	r0, [r5]
   1e8b4:	mov	r2, #1
   1e8b8:	mov	r1, r7
   1e8bc:	bl	1694 <fseek@plt>
   1e8c0:	cmp	r8, r4
   1e8c4:	bne	1e894 <ReadDataSlab1+0x250>
   1e8c8:	b	1e71c <ReadDataSlab1+0xd8>
   1e8cc:	cmp	r7, #0
   1e8d0:	beq	1eacc <ReadDataSlab1+0x488>
   1e8d4:	cmp	r8, #0
   1e8d8:	mov	r6, #0
   1e8dc:	addgt	r8, r4, r8, lsl #1
   1e8e0:	ble	1e71c <ReadDataSlab1+0xd8>
   1e8e4:	mov	r1, r4
   1e8e8:	mov	r3, #1
   1e8ec:	mov	r2, r9
   1e8f0:	mov	r0, r5
   1e8f4:	bl	15e2c <ReadUInt16Data>
   1e8f8:	add	r4, r4, #2
   1e8fc:	add	r6, r6, r0
   1e900:	ldr	r0, [r5]
   1e904:	mov	r2, #1
   1e908:	mov	r1, r7
   1e90c:	bl	1694 <fseek@plt>
   1e910:	cmp	r8, r4
   1e914:	bne	1e8e4 <ReadDataSlab1+0x2a0>
   1e918:	b	1e71c <ReadDataSlab1+0xd8>
   1e91c:	cmp	r7, #0
   1e920:	beq	1ea9c <ReadDataSlab1+0x458>
   1e924:	cmp	r8, #0
   1e928:	mov	r6, #0
   1e92c:	addgt	r8, r4, r8, lsl #2
   1e930:	ble	1e71c <ReadDataSlab1+0xd8>
   1e934:	mov	r1, r4
   1e938:	mov	r3, #1
   1e93c:	mov	r2, r9
   1e940:	mov	r0, r5
   1e944:	bl	14df0 <ReadInt32Data>
   1e948:	add	r4, r4, #4
   1e94c:	add	r6, r6, r0
   1e950:	ldr	r0, [r5]
   1e954:	mov	r2, #1
   1e958:	mov	r1, r7
   1e95c:	bl	1694 <fseek@plt>
   1e960:	cmp	r8, r4
   1e964:	bne	1e934 <ReadDataSlab1+0x2f0>
   1e968:	b	1e71c <ReadDataSlab1+0xd8>
   1e96c:	cmp	r7, #0
   1e970:	beq	1ea6c <ReadDataSlab1+0x428>
   1e974:	cmp	r8, #0
   1e978:	mov	r6, #0
   1e97c:	addgt	r8, r4, r8, lsl #2
   1e980:	ble	1e71c <ReadDataSlab1+0xd8>
   1e984:	mov	r1, r4
   1e988:	mov	r3, #1
   1e98c:	mov	r2, r9
   1e990:	mov	r0, r5
   1e994:	bl	15354 <ReadUInt32Data>
   1e998:	add	r4, r4, #4
   1e99c:	add	r6, r6, r0
   1e9a0:	ldr	r0, [r5]
   1e9a4:	mov	r2, #1
   1e9a8:	mov	r1, r7
   1e9ac:	bl	1694 <fseek@plt>
   1e9b0:	cmp	r4, r8
   1e9b4:	bne	1e984 <ReadDataSlab1+0x340>
   1e9b8:	b	1e71c <ReadDataSlab1+0xd8>
   1e9bc:	cmp	r7, #0
   1e9c0:	beq	1ea3c <ReadDataSlab1+0x3f8>
   1e9c4:	cmp	r8, #0
   1e9c8:	mov	r6, #0
   1e9cc:	addgt	r8, r4, r8, lsl #3
   1e9d0:	ble	1e71c <ReadDataSlab1+0xd8>
   1e9d4:	mov	r1, r4
   1e9d8:	mov	r3, #1
   1e9dc:	mov	r2, r9
   1e9e0:	mov	r0, r5
   1e9e4:	bl	142b0 <ReadInt64Data>
   1e9e8:	add	r4, r4, #8
   1e9ec:	add	r6, r6, r0
   1e9f0:	ldr	r0, [r5]
   1e9f4:	mov	r2, #1
   1e9f8:	mov	r1, r7
   1e9fc:	bl	1694 <fseek@plt>
   1ea00:	cmp	r4, r8
   1ea04:	bne	1e9d4 <ReadDataSlab1+0x390>
   1ea08:	b	1e71c <ReadDataSlab1+0xd8>
   1ea0c:	mov	r3, r8
   1ea10:	mov	r2, r9
   1ea14:	mov	r1, r4
   1ea18:	mov	r0, r5
   1ea1c:	add	sp, sp, #4
   1ea20:	ldrd	r4, [sp]
   1ea24:	ldrd	r6, [sp, #8]
   1ea28:	ldrd	r8, [sp, #16]
   1ea2c:	ldrd	sl, [sp, #24]
   1ea30:	ldr	lr, [sp, #32]
   1ea34:	add	sp, sp, #36	; 0x24
   1ea38:	b	14850 <ReadUInt64Data>
   1ea3c:	mov	r3, r8
   1ea40:	mov	r2, r9
   1ea44:	mov	r1, r4
   1ea48:	mov	r0, r5
   1ea4c:	add	sp, sp, #4
   1ea50:	ldrd	r4, [sp]
   1ea54:	ldrd	r6, [sp, #8]
   1ea58:	ldrd	r8, [sp, #16]
   1ea5c:	ldrd	sl, [sp, #24]
   1ea60:	ldr	lr, [sp, #32]
   1ea64:	add	sp, sp, #36	; 0x24
   1ea68:	b	142b0 <ReadInt64Data>
   1ea6c:	mov	r3, r8
   1ea70:	mov	r2, r9
   1ea74:	mov	r1, r4
   1ea78:	mov	r0, r5
   1ea7c:	add	sp, sp, #4
   1ea80:	ldrd	r4, [sp]
   1ea84:	ldrd	r6, [sp, #8]
   1ea88:	ldrd	r8, [sp, #16]
   1ea8c:	ldrd	sl, [sp, #24]
   1ea90:	ldr	lr, [sp, #32]
   1ea94:	add	sp, sp, #36	; 0x24
   1ea98:	b	15354 <ReadUInt32Data>
   1ea9c:	mov	r3, r8
   1eaa0:	mov	r2, r9
   1eaa4:	mov	r1, r4
   1eaa8:	mov	r0, r5
   1eaac:	add	sp, sp, #4
   1eab0:	ldrd	r4, [sp]
   1eab4:	ldrd	r6, [sp, #8]
   1eab8:	ldrd	r8, [sp, #16]
   1eabc:	ldrd	sl, [sp, #24]
   1eac0:	ldr	lr, [sp, #32]
   1eac4:	add	sp, sp, #36	; 0x24
   1eac8:	b	14df0 <ReadInt32Data>
   1eacc:	mov	r3, r8
   1ead0:	mov	r2, r9
   1ead4:	mov	r1, r4
   1ead8:	mov	r0, r5
   1eadc:	add	sp, sp, #4
   1eae0:	ldrd	r4, [sp]
   1eae4:	ldrd	r6, [sp, #8]
   1eae8:	ldrd	r8, [sp, #16]
   1eaec:	ldrd	sl, [sp, #24]
   1eaf0:	ldr	lr, [sp, #32]
   1eaf4:	add	sp, sp, #36	; 0x24
   1eaf8:	b	15e2c <ReadUInt16Data>
   1eafc:	mov	r3, r8
   1eb00:	mov	r2, r9
   1eb04:	mov	r1, r4
   1eb08:	mov	r0, r5
   1eb0c:	add	sp, sp, #4
   1eb10:	ldrd	r4, [sp]
   1eb14:	ldrd	r6, [sp, #8]
   1eb18:	ldrd	r8, [sp, #16]
   1eb1c:	ldrd	sl, [sp, #24]
   1eb20:	ldr	lr, [sp, #32]
   1eb24:	add	sp, sp, #36	; 0x24
   1eb28:	b	158b8 <ReadInt16Data>
   1eb2c:	mov	r3, r8
   1eb30:	mov	r2, r9
   1eb34:	mov	r1, r4
   1eb38:	mov	r0, r5
   1eb3c:	add	sp, sp, #4
   1eb40:	ldrd	r4, [sp]
   1eb44:	ldrd	r6, [sp, #8]
   1eb48:	ldrd	r8, [sp, #16]
   1eb4c:	ldrd	sl, [sp, #24]
   1eb50:	ldr	lr, [sp, #32]
   1eb54:	add	sp, sp, #36	; 0x24
   1eb58:	b	169a4 <ReadUInt8Data>
   1eb5c:	mov	r3, r8
   1eb60:	mov	r2, r9
   1eb64:	mov	r1, r4
   1eb68:	mov	r0, r5
   1eb6c:	add	sp, sp, #4
   1eb70:	ldrd	r4, [sp]
   1eb74:	ldrd	r6, [sp, #8]
   1eb78:	ldrd	r8, [sp, #16]
   1eb7c:	ldrd	sl, [sp, #24]
   1eb80:	ldr	lr, [sp, #32]
   1eb84:	add	sp, sp, #36	; 0x24
   1eb88:	b	163a0 <ReadInt8Data>
   1eb8c:	mov	r3, r8
   1eb90:	mov	r2, r9
   1eb94:	mov	r1, r4
   1eb98:	mov	r0, r5
   1eb9c:	add	sp, sp, #4
   1eba0:	ldrd	r4, [sp]
   1eba4:	ldrd	r6, [sp, #8]
   1eba8:	ldrd	r8, [sp, #16]
   1ebac:	ldrd	sl, [sp, #24]
   1ebb0:	ldr	lr, [sp, #32]
   1ebb4:	add	sp, sp, #36	; 0x24
   1ebb8:	b	13cfc <ReadSingleData>
   1ebbc:	mov	r3, r8
   1ebc0:	mov	r2, r9
   1ebc4:	mov	r1, r4
   1ebc8:	mov	r0, r5
   1ebcc:	add	sp, sp, #4
   1ebd0:	ldrd	r4, [sp]
   1ebd4:	ldrd	r6, [sp, #8]
   1ebd8:	ldrd	r8, [sp, #16]
   1ebdc:	ldrd	sl, [sp, #24]
   1ebe0:	ldr	lr, [sp, #32]
   1ebe4:	add	sp, sp, #36	; 0x24
   1ebe8:	b	126c8 <ReadDoubleData>
   1ebec:	mov	r6, #0
   1ebf0:	b	1e71c <ReadDataSlab1+0xd8>

0001ebf4 <ReadDataSlab2>:
   1ebf4:	cmp	r1, #0
   1ebf8:	cmpne	r0, #0
   1ebfc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ec00:	strd	r6, [sp, #8]
   1ec04:	strd	r8, [sp, #16]
   1ec08:	strd	sl, [sp, #24]
   1ec0c:	str	lr, [sp, #32]
   1ec10:	sub	sp, sp, #12
   1ec14:	ldr	r6, [sp, #60]	; 0x3c
   1ec18:	beq	1ec58 <ReadDataSlab2+0x64>
   1ec1c:	mov	r7, r3
   1ec20:	mov	r5, r0
   1ec24:	ldr	r3, [r0]
   1ec28:	cmp	r3, #0
   1ec2c:	beq	1ec58 <ReadDataSlab2+0x64>
   1ec30:	mov	r8, r2
   1ec34:	ldrd	r2, [sp, #52]	; 0x34
   1ec38:	cmp	r2, #0
   1ec3c:	clz	r3, r3
   1ec40:	lsr	r3, r3, #5
   1ec44:	moveq	r3, #1
   1ec48:	cmp	r6, #0
   1ec4c:	moveq	r3, #1
   1ec50:	cmp	r3, #0
   1ec54:	beq	1ec78 <ReadDataSlab2+0x84>
   1ec58:	mov	r0, #0
   1ec5c:	add	sp, sp, #12
   1ec60:	ldrd	r4, [sp]
   1ec64:	ldrd	r6, [sp, #8]
   1ec68:	ldrd	r8, [sp, #16]
   1ec6c:	ldrd	sl, [sp, #24]
   1ec70:	add	sp, sp, #32
   1ec74:	pop	{pc}		; (ldr pc, [sp], #4)
   1ec78:	mov	r0, r7
   1ec7c:	mov	r4, r1
   1ec80:	sub	r8, r8, #6
   1ec84:	bl	1598 <Mat_SizeOf@plt>
   1ec88:	str	r0, [sp]
   1ec8c:	cmp	r8, #9
   1ec90:	addls	pc, pc, r8, lsl #2
   1ec94:	b	1ec58 <ReadDataSlab2+0x64>
   1ec98:	b	1edfc <ReadDataSlab2+0x208>
   1ec9c:	b	1ef3c <ReadDataSlab2+0x348>
   1eca0:	b	1f078 <ReadDataSlab2+0x484>
   1eca4:	b	1f1b4 <ReadDataSlab2+0x5c0>
   1eca8:	b	1f2f0 <ReadDataSlab2+0x6fc>
   1ecac:	b	1f42c <ReadDataSlab2+0x838>
   1ecb0:	b	1f568 <ReadDataSlab2+0x974>
   1ecb4:	b	1f6a4 <ReadDataSlab2+0xab0>
   1ecb8:	b	1f7e0 <ReadDataSlab2+0xbec>
   1ecbc:	b	1ecc0 <ReadDataSlab2+0xcc>
   1ecc0:	ldr	r3, [sp, #56]	; 0x38
   1ecc4:	ldr	r2, [r3]
   1ecc8:	ldr	r3, [sp, #48]	; 0x30
   1eccc:	cmp	r2, #1
   1ecd0:	ldr	r1, [r3]
   1ecd4:	ldr	r3, [sp, #56]	; 0x38
   1ecd8:	ldr	r0, [r3, #4]
   1ecdc:	bne	1ecec <ReadDataSlab2+0xf8>
   1ece0:	ldr	r3, [r6]
   1ece4:	cmp	r3, r1
   1ece8:	beq	1f958 <ReadDataSlab2+0xd64>
   1ecec:	ldr	r8, [sp]
   1ecf0:	mul	r1, r1, r0
   1ecf4:	sub	r2, r2, #1
   1ecf8:	ldr	r0, [r5]
   1ecfc:	mul	r3, r8, r1
   1ed00:	mul	r9, r8, r2
   1ed04:	str	r3, [sp, #4]
   1ed08:	bl	14b4 <ftell@plt>
   1ed0c:	cmn	r0, #1
   1ed10:	beq	1f91c <ReadDataSlab2+0xd28>
   1ed14:	ldr	r3, [sp, #48]	; 0x30
   1ed18:	mov	r2, #1
   1ed1c:	ldr	r0, [r5]
   1ed20:	ldr	r1, [r3]
   1ed24:	ldr	r3, [sp, #52]	; 0x34
   1ed28:	ldr	r3, [r3, #4]
   1ed2c:	mul	r1, r1, r3
   1ed30:	mul	r1, r8, r1
   1ed34:	bl	1694 <fseek@plt>
   1ed38:	ldr	r3, [r6, #4]
   1ed3c:	cmp	r3, #0
   1ed40:	ble	1ec58 <ReadDataSlab2+0x64>
   1ed44:	mov	fp, #0
   1ed48:	ldr	r0, [r5]
   1ed4c:	bl	14b4 <ftell@plt>
   1ed50:	cmn	r0, #1
   1ed54:	mov	sl, r0
   1ed58:	beq	1f91c <ReadDataSlab2+0xd28>
   1ed5c:	ldr	r3, [sp, #52]	; 0x34
   1ed60:	mov	r2, #1
   1ed64:	ldr	r0, [r5]
   1ed68:	ldr	r1, [r3]
   1ed6c:	ldr	r3, [sp]
   1ed70:	mul	r1, r1, r3
   1ed74:	bl	1694 <fseek@plt>
   1ed78:	ldr	r3, [r6]
   1ed7c:	cmp	r3, #0
   1ed80:	ble	1edc0 <ReadDataSlab2+0x1cc>
   1ed84:	mov	r8, #0
   1ed88:	mov	r3, #1
   1ed8c:	mov	r1, r4
   1ed90:	mov	r2, r7
   1ed94:	mov	r0, r5
   1ed98:	bl	14850 <ReadUInt64Data>
   1ed9c:	mov	r2, #1
   1eda0:	mov	r1, r9
   1eda4:	ldr	r0, [r5]
   1eda8:	bl	1694 <fseek@plt>
   1edac:	ldr	r3, [r6]
   1edb0:	add	r8, r8, #1
   1edb4:	add	r4, r4, #8
   1edb8:	cmp	r3, r8
   1edbc:	bgt	1ed88 <ReadDataSlab2+0x194>
   1edc0:	ldr	r0, [r5]
   1edc4:	bl	14b4 <ftell@plt>
   1edc8:	cmn	r0, #1
   1edcc:	beq	1f91c <ReadDataSlab2+0xd28>
   1edd0:	ldr	r3, [sp, #4]
   1edd4:	mov	r2, #1
   1edd8:	add	fp, fp, r2
   1eddc:	sub	r1, r3, r0
   1ede0:	ldr	r0, [r5]
   1ede4:	add	r1, r1, sl
   1ede8:	bl	1694 <fseek@plt>
   1edec:	ldr	r3, [r6, #4]
   1edf0:	cmp	r3, fp
   1edf4:	bgt	1ed48 <ReadDataSlab2+0x154>
   1edf8:	b	1ec58 <ReadDataSlab2+0x64>
   1edfc:	ldr	r3, [sp, #56]	; 0x38
   1ee00:	ldr	r2, [r3]
   1ee04:	ldr	r3, [sp, #48]	; 0x30
   1ee08:	cmp	r2, #1
   1ee0c:	ldr	r1, [r3]
   1ee10:	ldr	r3, [sp, #56]	; 0x38
   1ee14:	ldr	r0, [r3, #4]
   1ee18:	bne	1ee28 <ReadDataSlab2+0x234>
   1ee1c:	ldr	r3, [r6]
   1ee20:	cmp	r3, r1
   1ee24:	beq	1fa98 <ReadDataSlab2+0xea4>
   1ee28:	ldr	r3, [sp]
   1ee2c:	mul	r1, r1, r0
   1ee30:	sub	r2, r2, #1
   1ee34:	ldr	r0, [r5]
   1ee38:	mul	r9, r3, r2
   1ee3c:	mul	r3, r3, r1
   1ee40:	str	r3, [sp, #4]
   1ee44:	bl	14b4 <ftell@plt>
   1ee48:	cmn	r0, #1
   1ee4c:	beq	1f91c <ReadDataSlab2+0xd28>
   1ee50:	ldr	r3, [sp, #48]	; 0x30
   1ee54:	mov	r2, #1
   1ee58:	ldr	r0, [r5]
   1ee5c:	ldr	r1, [r3]
   1ee60:	ldr	r3, [sp, #52]	; 0x34
   1ee64:	ldr	r3, [r3, #4]
   1ee68:	mul	r1, r1, r3
   1ee6c:	ldr	r3, [sp]
   1ee70:	mul	r1, r3, r1
   1ee74:	bl	1694 <fseek@plt>
   1ee78:	ldr	r3, [r6, #4]
   1ee7c:	cmp	r3, #0
   1ee80:	ble	1ec58 <ReadDataSlab2+0x64>
   1ee84:	mov	fp, #0
   1ee88:	ldr	r0, [r5]
   1ee8c:	bl	14b4 <ftell@plt>
   1ee90:	cmn	r0, #1
   1ee94:	mov	sl, r0
   1ee98:	beq	1f91c <ReadDataSlab2+0xd28>
   1ee9c:	ldr	r3, [sp, #52]	; 0x34
   1eea0:	mov	r2, #1
   1eea4:	ldr	r0, [r5]
   1eea8:	ldr	r1, [r3]
   1eeac:	ldr	r3, [sp]
   1eeb0:	mul	r1, r1, r3
   1eeb4:	bl	1694 <fseek@plt>
   1eeb8:	ldr	r3, [r6]
   1eebc:	cmp	r3, #0
   1eec0:	ble	1ef00 <ReadDataSlab2+0x30c>
   1eec4:	mov	r8, #0
   1eec8:	mov	r3, #1
   1eecc:	mov	r1, r4
   1eed0:	mov	r2, r7
   1eed4:	mov	r0, r5
   1eed8:	bl	126c8 <ReadDoubleData>
   1eedc:	mov	r2, #1
   1eee0:	mov	r1, r9
   1eee4:	ldr	r0, [r5]
   1eee8:	bl	1694 <fseek@plt>
   1eeec:	ldr	r3, [r6]
   1eef0:	add	r8, r8, #1
   1eef4:	add	r4, r4, #8
   1eef8:	cmp	r3, r8
   1eefc:	bgt	1eec8 <ReadDataSlab2+0x2d4>
   1ef00:	ldr	r0, [r5]
   1ef04:	bl	14b4 <ftell@plt>
   1ef08:	cmn	r0, #1
   1ef0c:	beq	1f91c <ReadDataSlab2+0xd28>
   1ef10:	ldr	r3, [sp, #4]
   1ef14:	mov	r2, #1
   1ef18:	add	fp, fp, r2
   1ef1c:	sub	r1, r3, r0
   1ef20:	ldr	r0, [r5]
   1ef24:	add	r1, r1, sl
   1ef28:	bl	1694 <fseek@plt>
   1ef2c:	ldr	r3, [r6, #4]
   1ef30:	cmp	r3, fp
   1ef34:	bgt	1ee88 <ReadDataSlab2+0x294>
   1ef38:	b	1ec58 <ReadDataSlab2+0x64>
   1ef3c:	ldr	r3, [sp, #56]	; 0x38
   1ef40:	ldr	r2, [r3]
   1ef44:	ldr	r3, [sp, #48]	; 0x30
   1ef48:	cmp	r2, #1
   1ef4c:	ldr	r1, [r3]
   1ef50:	ldr	r3, [sp, #56]	; 0x38
   1ef54:	ldr	r0, [r3, #4]
   1ef58:	bne	1ef68 <ReadDataSlab2+0x374>
   1ef5c:	ldr	r3, [r6]
   1ef60:	cmp	r3, r1
   1ef64:	beq	1fa70 <ReadDataSlab2+0xe7c>
   1ef68:	ldr	r8, [sp]
   1ef6c:	mul	r1, r1, r0
   1ef70:	sub	r2, r2, #1
   1ef74:	ldr	r0, [r5]
   1ef78:	mul	r3, r8, r1
   1ef7c:	mul	r9, r8, r2
   1ef80:	str	r3, [sp, #4]
   1ef84:	bl	14b4 <ftell@plt>
   1ef88:	cmn	r0, #1
   1ef8c:	beq	1f91c <ReadDataSlab2+0xd28>
   1ef90:	ldr	r3, [sp, #48]	; 0x30
   1ef94:	mov	r2, #1
   1ef98:	ldr	r0, [r5]
   1ef9c:	ldr	r1, [r3]
   1efa0:	ldr	r3, [sp, #52]	; 0x34
   1efa4:	ldr	r3, [r3, #4]
   1efa8:	mul	r1, r1, r3
   1efac:	mul	r1, r8, r1
   1efb0:	bl	1694 <fseek@plt>
   1efb4:	ldr	r3, [r6, #4]
   1efb8:	cmp	r3, #0
   1efbc:	ble	1ec58 <ReadDataSlab2+0x64>
   1efc0:	mov	fp, #0
   1efc4:	ldr	r0, [r5]
   1efc8:	bl	14b4 <ftell@plt>
   1efcc:	cmn	r0, #1
   1efd0:	mov	sl, r0
   1efd4:	beq	1f91c <ReadDataSlab2+0xd28>
   1efd8:	ldr	r3, [sp, #52]	; 0x34
   1efdc:	mov	r2, #1
   1efe0:	ldr	r0, [r5]
   1efe4:	ldr	r1, [r3]
   1efe8:	ldr	r3, [sp]
   1efec:	mul	r1, r1, r3
   1eff0:	bl	1694 <fseek@plt>
   1eff4:	ldr	r3, [r6]
   1eff8:	cmp	r3, #0
   1effc:	ble	1f03c <ReadDataSlab2+0x448>
   1f000:	mov	r8, #0
   1f004:	mov	r3, #1
   1f008:	mov	r1, r4
   1f00c:	mov	r2, r7
   1f010:	mov	r0, r5
   1f014:	bl	13cfc <ReadSingleData>
   1f018:	mov	r2, #1
   1f01c:	mov	r1, r9
   1f020:	ldr	r0, [r5]
   1f024:	bl	1694 <fseek@plt>
   1f028:	ldr	r3, [r6]
   1f02c:	add	r8, r8, #1
   1f030:	add	r4, r4, #4
   1f034:	cmp	r3, r8
   1f038:	bgt	1f004 <ReadDataSlab2+0x410>
   1f03c:	ldr	r0, [r5]
   1f040:	bl	14b4 <ftell@plt>
   1f044:	cmn	r0, #1
   1f048:	beq	1f91c <ReadDataSlab2+0xd28>
   1f04c:	ldr	r3, [sp, #4]
   1f050:	mov	r2, #1
   1f054:	add	fp, fp, r2
   1f058:	sub	r1, r3, r0
   1f05c:	ldr	r0, [r5]
   1f060:	add	r1, r1, sl
   1f064:	bl	1694 <fseek@plt>
   1f068:	ldr	r3, [r6, #4]
   1f06c:	cmp	r3, fp
   1f070:	bgt	1efc4 <ReadDataSlab2+0x3d0>
   1f074:	b	1ec58 <ReadDataSlab2+0x64>
   1f078:	ldr	r3, [sp, #56]	; 0x38
   1f07c:	ldr	r2, [r3]
   1f080:	ldr	r3, [sp, #48]	; 0x30
   1f084:	cmp	r2, #1
   1f088:	ldr	r1, [r3]
   1f08c:	ldr	r3, [sp, #56]	; 0x38
   1f090:	ldr	r0, [r3, #4]
   1f094:	bne	1f0a4 <ReadDataSlab2+0x4b0>
   1f098:	ldr	r3, [r6]
   1f09c:	cmp	r3, r1
   1f0a0:	beq	1fa48 <ReadDataSlab2+0xe54>
   1f0a4:	ldr	r8, [sp]
   1f0a8:	mul	r1, r1, r0
   1f0ac:	sub	r2, r2, #1
   1f0b0:	ldr	r0, [r5]
   1f0b4:	mul	r3, r8, r1
   1f0b8:	mul	r9, r8, r2
   1f0bc:	str	r3, [sp, #4]
   1f0c0:	bl	14b4 <ftell@plt>
   1f0c4:	cmn	r0, #1
   1f0c8:	beq	1f91c <ReadDataSlab2+0xd28>
   1f0cc:	ldr	r3, [sp, #48]	; 0x30
   1f0d0:	mov	r2, #1
   1f0d4:	ldr	r0, [r5]
   1f0d8:	ldr	r1, [r3]
   1f0dc:	ldr	r3, [sp, #52]	; 0x34
   1f0e0:	ldr	r3, [r3, #4]
   1f0e4:	mul	r1, r1, r3
   1f0e8:	mul	r1, r8, r1
   1f0ec:	bl	1694 <fseek@plt>
   1f0f0:	ldr	r3, [r6, #4]
   1f0f4:	cmp	r3, #0
   1f0f8:	ble	1ec58 <ReadDataSlab2+0x64>
   1f0fc:	mov	fp, #0
   1f100:	ldr	r0, [r5]
   1f104:	bl	14b4 <ftell@plt>
   1f108:	cmn	r0, #1
   1f10c:	mov	sl, r0
   1f110:	beq	1f91c <ReadDataSlab2+0xd28>
   1f114:	ldr	r3, [sp, #52]	; 0x34
   1f118:	mov	r2, #1
   1f11c:	ldr	r0, [r5]
   1f120:	ldr	r1, [r3]
   1f124:	ldr	r3, [sp]
   1f128:	mul	r1, r1, r3
   1f12c:	bl	1694 <fseek@plt>
   1f130:	ldr	r3, [r6]
   1f134:	cmp	r3, #0
   1f138:	ble	1f178 <ReadDataSlab2+0x584>
   1f13c:	mov	r8, #0
   1f140:	mov	r3, #1
   1f144:	mov	r1, r4
   1f148:	mov	r2, r7
   1f14c:	mov	r0, r5
   1f150:	bl	163a0 <ReadInt8Data>
   1f154:	mov	r2, #1
   1f158:	mov	r1, r9
   1f15c:	ldr	r0, [r5]
   1f160:	bl	1694 <fseek@plt>
   1f164:	ldr	r3, [r6]
   1f168:	add	r8, r8, #1
   1f16c:	add	r4, r4, #1
   1f170:	cmp	r3, r8
   1f174:	bgt	1f140 <ReadDataSlab2+0x54c>
   1f178:	ldr	r0, [r5]
   1f17c:	bl	14b4 <ftell@plt>
   1f180:	cmn	r0, #1
   1f184:	beq	1f91c <ReadDataSlab2+0xd28>
   1f188:	ldr	r3, [sp, #4]
   1f18c:	mov	r2, #1
   1f190:	add	fp, fp, r2
   1f194:	sub	r1, r3, r0
   1f198:	ldr	r0, [r5]
   1f19c:	add	r1, r1, sl
   1f1a0:	bl	1694 <fseek@plt>
   1f1a4:	ldr	r3, [r6, #4]
   1f1a8:	cmp	r3, fp
   1f1ac:	bgt	1f100 <ReadDataSlab2+0x50c>
   1f1b0:	b	1ec58 <ReadDataSlab2+0x64>
   1f1b4:	ldr	r3, [sp, #56]	; 0x38
   1f1b8:	ldr	r2, [r3]
   1f1bc:	ldr	r3, [sp, #48]	; 0x30
   1f1c0:	cmp	r2, #1
   1f1c4:	ldr	r1, [r3]
   1f1c8:	ldr	r3, [sp, #56]	; 0x38
   1f1cc:	ldr	r0, [r3, #4]
   1f1d0:	bne	1f1e0 <ReadDataSlab2+0x5ec>
   1f1d4:	ldr	r3, [r6]
   1f1d8:	cmp	r3, r1
   1f1dc:	beq	1fa20 <ReadDataSlab2+0xe2c>
   1f1e0:	ldr	r8, [sp]
   1f1e4:	mul	r1, r1, r0
   1f1e8:	sub	r2, r2, #1
   1f1ec:	ldr	r0, [r5]
   1f1f0:	mul	r3, r8, r1
   1f1f4:	mul	r9, r8, r2
   1f1f8:	str	r3, [sp, #4]
   1f1fc:	bl	14b4 <ftell@plt>
   1f200:	cmn	r0, #1
   1f204:	beq	1f91c <ReadDataSlab2+0xd28>
   1f208:	ldr	r3, [sp, #48]	; 0x30
   1f20c:	mov	r2, #1
   1f210:	ldr	r0, [r5]
   1f214:	ldr	r1, [r3]
   1f218:	ldr	r3, [sp, #52]	; 0x34
   1f21c:	ldr	r3, [r3, #4]
   1f220:	mul	r1, r1, r3
   1f224:	mul	r1, r8, r1
   1f228:	bl	1694 <fseek@plt>
   1f22c:	ldr	r3, [r6, #4]
   1f230:	cmp	r3, #0
   1f234:	ble	1ec58 <ReadDataSlab2+0x64>
   1f238:	mov	fp, #0
   1f23c:	ldr	r0, [r5]
   1f240:	bl	14b4 <ftell@plt>
   1f244:	cmn	r0, #1
   1f248:	mov	sl, r0
   1f24c:	beq	1f91c <ReadDataSlab2+0xd28>
   1f250:	ldr	r3, [sp, #52]	; 0x34
   1f254:	mov	r2, #1
   1f258:	ldr	r0, [r5]
   1f25c:	ldr	r1, [r3]
   1f260:	ldr	r3, [sp]
   1f264:	mul	r1, r1, r3
   1f268:	bl	1694 <fseek@plt>
   1f26c:	ldr	r3, [r6]
   1f270:	cmp	r3, #0
   1f274:	ble	1f2b4 <ReadDataSlab2+0x6c0>
   1f278:	mov	r8, #0
   1f27c:	mov	r3, #1
   1f280:	mov	r1, r4
   1f284:	mov	r2, r7
   1f288:	mov	r0, r5
   1f28c:	bl	169a4 <ReadUInt8Data>
   1f290:	mov	r2, #1
   1f294:	mov	r1, r9
   1f298:	ldr	r0, [r5]
   1f29c:	bl	1694 <fseek@plt>
   1f2a0:	ldr	r3, [r6]
   1f2a4:	add	r8, r8, #1
   1f2a8:	add	r4, r4, #1
   1f2ac:	cmp	r3, r8
   1f2b0:	bgt	1f27c <ReadDataSlab2+0x688>
   1f2b4:	ldr	r0, [r5]
   1f2b8:	bl	14b4 <ftell@plt>
   1f2bc:	cmn	r0, #1
   1f2c0:	beq	1f91c <ReadDataSlab2+0xd28>
   1f2c4:	ldr	r3, [sp, #4]
   1f2c8:	mov	r2, #1
   1f2cc:	add	fp, fp, r2
   1f2d0:	sub	r1, r3, r0
   1f2d4:	ldr	r0, [r5]
   1f2d8:	add	r1, r1, sl
   1f2dc:	bl	1694 <fseek@plt>
   1f2e0:	ldr	r3, [r6, #4]
   1f2e4:	cmp	r3, fp
   1f2e8:	bgt	1f23c <ReadDataSlab2+0x648>
   1f2ec:	b	1ec58 <ReadDataSlab2+0x64>
   1f2f0:	ldr	r3, [sp, #56]	; 0x38
   1f2f4:	ldr	r2, [r3]
   1f2f8:	ldr	r3, [sp, #48]	; 0x30
   1f2fc:	cmp	r2, #1
   1f300:	ldr	r1, [r3]
   1f304:	ldr	r3, [sp, #56]	; 0x38
   1f308:	ldr	r0, [r3, #4]
   1f30c:	bne	1f31c <ReadDataSlab2+0x728>
   1f310:	ldr	r3, [r6]
   1f314:	cmp	r3, r1
   1f318:	beq	1f9f8 <ReadDataSlab2+0xe04>
   1f31c:	ldr	r8, [sp]
   1f320:	mul	r1, r1, r0
   1f324:	sub	r2, r2, #1
   1f328:	ldr	r0, [r5]
   1f32c:	mul	r3, r8, r1
   1f330:	mul	r9, r8, r2
   1f334:	str	r3, [sp, #4]
   1f338:	bl	14b4 <ftell@plt>
   1f33c:	cmn	r0, #1
   1f340:	beq	1f91c <ReadDataSlab2+0xd28>
   1f344:	ldr	r3, [sp, #48]	; 0x30
   1f348:	mov	r2, #1
   1f34c:	ldr	r0, [r5]
   1f350:	ldr	r1, [r3]
   1f354:	ldr	r3, [sp, #52]	; 0x34
   1f358:	ldr	r3, [r3, #4]
   1f35c:	mul	r1, r1, r3
   1f360:	mul	r1, r8, r1
   1f364:	bl	1694 <fseek@plt>
   1f368:	ldr	r3, [r6, #4]
   1f36c:	cmp	r3, #0
   1f370:	ble	1ec58 <ReadDataSlab2+0x64>
   1f374:	mov	fp, #0
   1f378:	ldr	r0, [r5]
   1f37c:	bl	14b4 <ftell@plt>
   1f380:	cmn	r0, #1
   1f384:	mov	sl, r0
   1f388:	beq	1f91c <ReadDataSlab2+0xd28>
   1f38c:	ldr	r3, [sp, #52]	; 0x34
   1f390:	mov	r2, #1
   1f394:	ldr	r0, [r5]
   1f398:	ldr	r1, [r3]
   1f39c:	ldr	r3, [sp]
   1f3a0:	mul	r1, r1, r3
   1f3a4:	bl	1694 <fseek@plt>
   1f3a8:	ldr	r3, [r6]
   1f3ac:	cmp	r3, #0
   1f3b0:	ble	1f3f0 <ReadDataSlab2+0x7fc>
   1f3b4:	mov	r8, #0
   1f3b8:	mov	r3, #1
   1f3bc:	mov	r1, r4
   1f3c0:	mov	r2, r7
   1f3c4:	mov	r0, r5
   1f3c8:	bl	158b8 <ReadInt16Data>
   1f3cc:	mov	r2, #1
   1f3d0:	mov	r1, r9
   1f3d4:	ldr	r0, [r5]
   1f3d8:	bl	1694 <fseek@plt>
   1f3dc:	ldr	r3, [r6]
   1f3e0:	add	r8, r8, #1
   1f3e4:	add	r4, r4, #2
   1f3e8:	cmp	r3, r8
   1f3ec:	bgt	1f3b8 <ReadDataSlab2+0x7c4>
   1f3f0:	ldr	r0, [r5]
   1f3f4:	bl	14b4 <ftell@plt>
   1f3f8:	cmn	r0, #1
   1f3fc:	beq	1f91c <ReadDataSlab2+0xd28>
   1f400:	ldr	r3, [sp, #4]
   1f404:	mov	r2, #1
   1f408:	add	fp, fp, r2
   1f40c:	sub	r1, r3, r0
   1f410:	ldr	r0, [r5]
   1f414:	add	r1, r1, sl
   1f418:	bl	1694 <fseek@plt>
   1f41c:	ldr	r3, [r6, #4]
   1f420:	cmp	r3, fp
   1f424:	bgt	1f378 <ReadDataSlab2+0x784>
   1f428:	b	1ec58 <ReadDataSlab2+0x64>
   1f42c:	ldr	r3, [sp, #56]	; 0x38
   1f430:	ldr	r2, [r3]
   1f434:	ldr	r3, [sp, #48]	; 0x30
   1f438:	cmp	r2, #1
   1f43c:	ldr	r1, [r3]
   1f440:	ldr	r3, [sp, #56]	; 0x38
   1f444:	ldr	r0, [r3, #4]
   1f448:	bne	1f458 <ReadDataSlab2+0x864>
   1f44c:	ldr	r3, [r6]
   1f450:	cmp	r3, r1
   1f454:	beq	1f9d0 <ReadDataSlab2+0xddc>
   1f458:	ldr	r8, [sp]
   1f45c:	mul	r1, r1, r0
   1f460:	sub	r2, r2, #1
   1f464:	ldr	r0, [r5]
   1f468:	mul	r3, r8, r1
   1f46c:	mul	r9, r8, r2
   1f470:	str	r3, [sp, #4]
   1f474:	bl	14b4 <ftell@plt>
   1f478:	cmn	r0, #1
   1f47c:	beq	1f91c <ReadDataSlab2+0xd28>
   1f480:	ldr	r3, [sp, #48]	; 0x30
   1f484:	mov	r2, #1
   1f488:	ldr	r0, [r5]
   1f48c:	ldr	r1, [r3]
   1f490:	ldr	r3, [sp, #52]	; 0x34
   1f494:	ldr	r3, [r3, #4]
   1f498:	mul	r1, r1, r3
   1f49c:	mul	r1, r8, r1
   1f4a0:	bl	1694 <fseek@plt>
   1f4a4:	ldr	r3, [r6, #4]
   1f4a8:	cmp	r3, #0
   1f4ac:	ble	1ec58 <ReadDataSlab2+0x64>
   1f4b0:	mov	fp, #0
   1f4b4:	ldr	r0, [r5]
   1f4b8:	bl	14b4 <ftell@plt>
   1f4bc:	cmn	r0, #1
   1f4c0:	mov	sl, r0
   1f4c4:	beq	1f91c <ReadDataSlab2+0xd28>
   1f4c8:	ldr	r3, [sp, #52]	; 0x34
   1f4cc:	mov	r2, #1
   1f4d0:	ldr	r0, [r5]
   1f4d4:	ldr	r1, [r3]
   1f4d8:	ldr	r3, [sp]
   1f4dc:	mul	r1, r1, r3
   1f4e0:	bl	1694 <fseek@plt>
   1f4e4:	ldr	r3, [r6]
   1f4e8:	cmp	r3, #0
   1f4ec:	ble	1f52c <ReadDataSlab2+0x938>
   1f4f0:	mov	r8, #0
   1f4f4:	mov	r3, #1
   1f4f8:	mov	r1, r4
   1f4fc:	mov	r2, r7
   1f500:	mov	r0, r5
   1f504:	bl	15e2c <ReadUInt16Data>
   1f508:	mov	r2, #1
   1f50c:	mov	r1, r9
   1f510:	ldr	r0, [r5]
   1f514:	bl	1694 <fseek@plt>
   1f518:	ldr	r3, [r6]
   1f51c:	add	r8, r8, #1
   1f520:	add	r4, r4, #2
   1f524:	cmp	r3, r8
   1f528:	bgt	1f4f4 <ReadDataSlab2+0x900>
   1f52c:	ldr	r0, [r5]
   1f530:	bl	14b4 <ftell@plt>
   1f534:	cmn	r0, #1
   1f538:	beq	1f91c <ReadDataSlab2+0xd28>
   1f53c:	ldr	r3, [sp, #4]
   1f540:	mov	r2, #1
   1f544:	add	fp, fp, r2
   1f548:	sub	r1, r3, r0
   1f54c:	ldr	r0, [r5]
   1f550:	add	r1, r1, sl
   1f554:	bl	1694 <fseek@plt>
   1f558:	ldr	r3, [r6, #4]
   1f55c:	cmp	r3, fp
   1f560:	bgt	1f4b4 <ReadDataSlab2+0x8c0>
   1f564:	b	1ec58 <ReadDataSlab2+0x64>
   1f568:	ldr	r3, [sp, #56]	; 0x38
   1f56c:	ldr	r2, [r3]
   1f570:	ldr	r3, [sp, #48]	; 0x30
   1f574:	cmp	r2, #1
   1f578:	ldr	r1, [r3]
   1f57c:	ldr	r3, [sp, #56]	; 0x38
   1f580:	ldr	r0, [r3, #4]
   1f584:	bne	1f594 <ReadDataSlab2+0x9a0>
   1f588:	ldr	r3, [r6]
   1f58c:	cmp	r3, r1
   1f590:	beq	1f9a8 <ReadDataSlab2+0xdb4>
   1f594:	ldr	r8, [sp]
   1f598:	mul	r1, r1, r0
   1f59c:	sub	r2, r2, #1
   1f5a0:	ldr	r0, [r5]
   1f5a4:	mul	r3, r8, r1
   1f5a8:	mul	r9, r8, r2
   1f5ac:	str	r3, [sp, #4]
   1f5b0:	bl	14b4 <ftell@plt>
   1f5b4:	cmn	r0, #1
   1f5b8:	beq	1f91c <ReadDataSlab2+0xd28>
   1f5bc:	ldr	r3, [sp, #48]	; 0x30
   1f5c0:	mov	r2, #1
   1f5c4:	ldr	r0, [r5]
   1f5c8:	ldr	r1, [r3]
   1f5cc:	ldr	r3, [sp, #52]	; 0x34
   1f5d0:	ldr	r3, [r3, #4]
   1f5d4:	mul	r1, r1, r3
   1f5d8:	mul	r1, r8, r1
   1f5dc:	bl	1694 <fseek@plt>
   1f5e0:	ldr	r3, [r6, #4]
   1f5e4:	cmp	r3, #0
   1f5e8:	ble	1ec58 <ReadDataSlab2+0x64>
   1f5ec:	mov	fp, #0
   1f5f0:	ldr	r0, [r5]
   1f5f4:	bl	14b4 <ftell@plt>
   1f5f8:	cmn	r0, #1
   1f5fc:	mov	sl, r0
   1f600:	beq	1f91c <ReadDataSlab2+0xd28>
   1f604:	ldr	r3, [sp, #52]	; 0x34
   1f608:	mov	r2, #1
   1f60c:	ldr	r0, [r5]
   1f610:	ldr	r1, [r3]
   1f614:	ldr	r3, [sp]
   1f618:	mul	r1, r1, r3
   1f61c:	bl	1694 <fseek@plt>
   1f620:	ldr	r3, [r6]
   1f624:	cmp	r3, #0
   1f628:	ble	1f668 <ReadDataSlab2+0xa74>
   1f62c:	mov	r8, #0
   1f630:	mov	r3, #1
   1f634:	mov	r1, r4
   1f638:	mov	r2, r7
   1f63c:	mov	r0, r5
   1f640:	bl	14df0 <ReadInt32Data>
   1f644:	mov	r2, #1
   1f648:	mov	r1, r9
   1f64c:	ldr	r0, [r5]
   1f650:	bl	1694 <fseek@plt>
   1f654:	ldr	r3, [r6]
   1f658:	add	r8, r8, #1
   1f65c:	add	r4, r4, #4
   1f660:	cmp	r3, r8
   1f664:	bgt	1f630 <ReadDataSlab2+0xa3c>
   1f668:	ldr	r0, [r5]
   1f66c:	bl	14b4 <ftell@plt>
   1f670:	cmn	r0, #1
   1f674:	beq	1f91c <ReadDataSlab2+0xd28>
   1f678:	ldr	r3, [sp, #4]
   1f67c:	mov	r2, #1
   1f680:	add	fp, fp, r2
   1f684:	sub	r1, r3, r0
   1f688:	ldr	r0, [r5]
   1f68c:	add	r1, r1, sl
   1f690:	bl	1694 <fseek@plt>
   1f694:	ldr	r3, [r6, #4]
   1f698:	cmp	r3, fp
   1f69c:	bgt	1f5f0 <ReadDataSlab2+0x9fc>
   1f6a0:	b	1ec58 <ReadDataSlab2+0x64>
   1f6a4:	ldr	r3, [sp, #56]	; 0x38
   1f6a8:	ldr	r2, [r3]
   1f6ac:	ldr	r3, [sp, #48]	; 0x30
   1f6b0:	cmp	r2, #1
   1f6b4:	ldr	r1, [r3]
   1f6b8:	ldr	r3, [sp, #56]	; 0x38
   1f6bc:	ldr	r0, [r3, #4]
   1f6c0:	bne	1f6d0 <ReadDataSlab2+0xadc>
   1f6c4:	ldr	r3, [r6]
   1f6c8:	cmp	r3, r1
   1f6cc:	beq	1f980 <ReadDataSlab2+0xd8c>
   1f6d0:	ldr	r8, [sp]
   1f6d4:	mul	r1, r1, r0
   1f6d8:	sub	r2, r2, #1
   1f6dc:	ldr	r0, [r5]
   1f6e0:	mul	r3, r8, r1
   1f6e4:	mul	r9, r8, r2
   1f6e8:	str	r3, [sp, #4]
   1f6ec:	bl	14b4 <ftell@plt>
   1f6f0:	cmn	r0, #1
   1f6f4:	beq	1f91c <ReadDataSlab2+0xd28>
   1f6f8:	ldr	r3, [sp, #48]	; 0x30
   1f6fc:	mov	r2, #1
   1f700:	ldr	r0, [r5]
   1f704:	ldr	r1, [r3]
   1f708:	ldr	r3, [sp, #52]	; 0x34
   1f70c:	ldr	r3, [r3, #4]
   1f710:	mul	r1, r1, r3
   1f714:	mul	r1, r8, r1
   1f718:	bl	1694 <fseek@plt>
   1f71c:	ldr	r3, [r6, #4]
   1f720:	cmp	r3, #0
   1f724:	ble	1ec58 <ReadDataSlab2+0x64>
   1f728:	mov	fp, #0
   1f72c:	ldr	r0, [r5]
   1f730:	bl	14b4 <ftell@plt>
   1f734:	cmn	r0, #1
   1f738:	mov	sl, r0
   1f73c:	beq	1f91c <ReadDataSlab2+0xd28>
   1f740:	ldr	r3, [sp, #52]	; 0x34
   1f744:	mov	r2, #1
   1f748:	ldr	r0, [r5]
   1f74c:	ldr	r1, [r3]
   1f750:	ldr	r3, [sp]
   1f754:	mul	r1, r1, r3
   1f758:	bl	1694 <fseek@plt>
   1f75c:	ldr	r3, [r6]
   1f760:	cmp	r3, #0
   1f764:	ble	1f7a4 <ReadDataSlab2+0xbb0>
   1f768:	mov	r8, #0
   1f76c:	mov	r3, #1
   1f770:	mov	r1, r4
   1f774:	mov	r2, r7
   1f778:	mov	r0, r5
   1f77c:	bl	15354 <ReadUInt32Data>
   1f780:	mov	r2, #1
   1f784:	mov	r1, r9
   1f788:	ldr	r0, [r5]
   1f78c:	bl	1694 <fseek@plt>
   1f790:	ldr	r3, [r6]
   1f794:	add	r8, r8, #1
   1f798:	add	r4, r4, #4
   1f79c:	cmp	r3, r8
   1f7a0:	bgt	1f76c <ReadDataSlab2+0xb78>
   1f7a4:	ldr	r0, [r5]
   1f7a8:	bl	14b4 <ftell@plt>
   1f7ac:	cmn	r0, #1
   1f7b0:	beq	1f91c <ReadDataSlab2+0xd28>
   1f7b4:	ldr	r3, [sp, #4]
   1f7b8:	mov	r2, #1
   1f7bc:	add	fp, fp, r2
   1f7c0:	sub	r1, r3, r0
   1f7c4:	ldr	r0, [r5]
   1f7c8:	add	r1, r1, sl
   1f7cc:	bl	1694 <fseek@plt>
   1f7d0:	ldr	r3, [r6, #4]
   1f7d4:	cmp	r3, fp
   1f7d8:	bgt	1f72c <ReadDataSlab2+0xb38>
   1f7dc:	b	1ec58 <ReadDataSlab2+0x64>
   1f7e0:	ldr	r3, [sp, #56]	; 0x38
   1f7e4:	ldr	r2, [r3]
   1f7e8:	ldr	r3, [sp, #48]	; 0x30
   1f7ec:	cmp	r2, #1
   1f7f0:	ldr	r1, [r3]
   1f7f4:	ldr	r3, [sp, #56]	; 0x38
   1f7f8:	ldr	r0, [r3, #4]
   1f7fc:	bne	1f80c <ReadDataSlab2+0xc18>
   1f800:	ldr	r3, [r6]
   1f804:	cmp	r3, r1
   1f808:	beq	1f930 <ReadDataSlab2+0xd3c>
   1f80c:	ldr	r8, [sp]
   1f810:	mul	r1, r1, r0
   1f814:	sub	r2, r2, #1
   1f818:	ldr	r0, [r5]
   1f81c:	mul	r3, r8, r1
   1f820:	mul	r9, r8, r2
   1f824:	str	r3, [sp, #4]
   1f828:	bl	14b4 <ftell@plt>
   1f82c:	cmn	r0, #1
   1f830:	beq	1f91c <ReadDataSlab2+0xd28>
   1f834:	ldr	r3, [sp, #48]	; 0x30
   1f838:	mov	r2, #1
   1f83c:	ldr	r0, [r5]
   1f840:	ldr	r1, [r3]
   1f844:	ldr	r3, [sp, #52]	; 0x34
   1f848:	ldr	r3, [r3, #4]
   1f84c:	mul	r1, r1, r3
   1f850:	mul	r1, r8, r1
   1f854:	bl	1694 <fseek@plt>
   1f858:	ldr	r3, [r6, #4]
   1f85c:	cmp	r3, #0
   1f860:	ble	1ec58 <ReadDataSlab2+0x64>
   1f864:	mov	fp, #0
   1f868:	ldr	r0, [r5]
   1f86c:	bl	14b4 <ftell@plt>
   1f870:	cmn	r0, #1
   1f874:	mov	sl, r0
   1f878:	beq	1f91c <ReadDataSlab2+0xd28>
   1f87c:	ldr	r3, [sp, #52]	; 0x34
   1f880:	mov	r2, #1
   1f884:	ldr	r0, [r5]
   1f888:	ldr	r1, [r3]
   1f88c:	ldr	r3, [sp]
   1f890:	mul	r1, r1, r3
   1f894:	bl	1694 <fseek@plt>
   1f898:	ldr	r3, [r6]
   1f89c:	cmp	r3, #0
   1f8a0:	ble	1f8e0 <ReadDataSlab2+0xcec>
   1f8a4:	mov	r8, #0
   1f8a8:	mov	r3, #1
   1f8ac:	mov	r1, r4
   1f8b0:	mov	r2, r7
   1f8b4:	mov	r0, r5
   1f8b8:	bl	142b0 <ReadInt64Data>
   1f8bc:	mov	r2, #1
   1f8c0:	mov	r1, r9
   1f8c4:	ldr	r0, [r5]
   1f8c8:	bl	1694 <fseek@plt>
   1f8cc:	ldr	r3, [r6]
   1f8d0:	add	r8, r8, #1
   1f8d4:	add	r4, r4, #8
   1f8d8:	cmp	r3, r8
   1f8dc:	bgt	1f8a8 <ReadDataSlab2+0xcb4>
   1f8e0:	ldr	r0, [r5]
   1f8e4:	bl	14b4 <ftell@plt>
   1f8e8:	cmn	r0, #1
   1f8ec:	beq	1f91c <ReadDataSlab2+0xd28>
   1f8f0:	ldr	r3, [sp, #4]
   1f8f4:	mov	r2, #1
   1f8f8:	add	fp, fp, r2
   1f8fc:	sub	r1, r3, r0
   1f900:	ldr	r0, [r5]
   1f904:	add	r1, r1, sl
   1f908:	bl	1694 <fseek@plt>
   1f90c:	ldr	r3, [r6, #4]
   1f910:	cmp	r3, fp
   1f914:	bgt	1f868 <ReadDataSlab2+0xc74>
   1f918:	b	1ec58 <ReadDataSlab2+0x64>
   1f91c:	ldr	r0, [pc, #412]	; 1fac0 <ReadDataSlab2+0xecc>
   1f920:	add	r0, pc, r0
   1f924:	bl	161c <Mat_Critical@plt>
   1f928:	mvn	r0, #0
   1f92c:	b	1ec5c <ReadDataSlab2+0x68>
   1f930:	cmp	r0, #1
   1f934:	bne	1f80c <ReadDataSlab2+0xc18>
   1f938:	ldr	ip, [r6, #4]
   1f93c:	mov	r2, r7
   1f940:	mov	r1, r4
   1f944:	mov	r0, r5
   1f948:	mul	r3, ip, r3
   1f94c:	bl	142b0 <ReadInt64Data>
   1f950:	mov	r0, #0
   1f954:	b	1ec5c <ReadDataSlab2+0x68>
   1f958:	cmp	r0, #1
   1f95c:	bne	1ecec <ReadDataSlab2+0xf8>
   1f960:	ldr	ip, [r6, #4]
   1f964:	mov	r2, r7
   1f968:	mov	r1, r4
   1f96c:	mov	r0, r5
   1f970:	mul	r3, ip, r3
   1f974:	bl	14850 <ReadUInt64Data>
   1f978:	mov	r0, #0
   1f97c:	b	1ec5c <ReadDataSlab2+0x68>
   1f980:	cmp	r0, #1
   1f984:	bne	1f6d0 <ReadDataSlab2+0xadc>
   1f988:	ldr	ip, [r6, #4]
   1f98c:	mov	r2, r7
   1f990:	mov	r1, r4
   1f994:	mov	r0, r5
   1f998:	mul	r3, ip, r3
   1f99c:	bl	15354 <ReadUInt32Data>
   1f9a0:	mov	r0, #0
   1f9a4:	b	1ec5c <ReadDataSlab2+0x68>
   1f9a8:	cmp	r0, #1
   1f9ac:	bne	1f594 <ReadDataSlab2+0x9a0>
   1f9b0:	ldr	ip, [r6, #4]
   1f9b4:	mov	r2, r7
   1f9b8:	mov	r1, r4
   1f9bc:	mov	r0, r5
   1f9c0:	mul	r3, ip, r3
   1f9c4:	bl	14df0 <ReadInt32Data>
   1f9c8:	mov	r0, #0
   1f9cc:	b	1ec5c <ReadDataSlab2+0x68>
   1f9d0:	cmp	r0, #1
   1f9d4:	bne	1f458 <ReadDataSlab2+0x864>
   1f9d8:	ldr	ip, [r6, #4]
   1f9dc:	mov	r2, r7
   1f9e0:	mov	r1, r4
   1f9e4:	mov	r0, r5
   1f9e8:	mul	r3, ip, r3
   1f9ec:	bl	15e2c <ReadUInt16Data>
   1f9f0:	mov	r0, #0
   1f9f4:	b	1ec5c <ReadDataSlab2+0x68>
   1f9f8:	cmp	r0, #1
   1f9fc:	bne	1f31c <ReadDataSlab2+0x728>
   1fa00:	ldr	ip, [r6, #4]
   1fa04:	mov	r2, r7
   1fa08:	mov	r1, r4
   1fa0c:	mov	r0, r5
   1fa10:	mul	r3, ip, r3
   1fa14:	bl	158b8 <ReadInt16Data>
   1fa18:	mov	r0, #0
   1fa1c:	b	1ec5c <ReadDataSlab2+0x68>
   1fa20:	cmp	r0, #1
   1fa24:	bne	1f1e0 <ReadDataSlab2+0x5ec>
   1fa28:	ldr	ip, [r6, #4]
   1fa2c:	mov	r2, r7
   1fa30:	mov	r1, r4
   1fa34:	mov	r0, r5
   1fa38:	mul	r3, ip, r3
   1fa3c:	bl	169a4 <ReadUInt8Data>
   1fa40:	mov	r0, #0
   1fa44:	b	1ec5c <ReadDataSlab2+0x68>
   1fa48:	cmp	r0, #1
   1fa4c:	bne	1f0a4 <ReadDataSlab2+0x4b0>
   1fa50:	ldr	ip, [r6, #4]
   1fa54:	mov	r2, r7
   1fa58:	mov	r1, r4
   1fa5c:	mov	r0, r5
   1fa60:	mul	r3, ip, r3
   1fa64:	bl	163a0 <ReadInt8Data>
   1fa68:	mov	r0, #0
   1fa6c:	b	1ec5c <ReadDataSlab2+0x68>
   1fa70:	cmp	r0, #1
   1fa74:	bne	1ef68 <ReadDataSlab2+0x374>
   1fa78:	ldr	ip, [r6, #4]
   1fa7c:	mov	r2, r7
   1fa80:	mov	r1, r4
   1fa84:	mov	r0, r5
   1fa88:	mul	r3, ip, r3
   1fa8c:	bl	13cfc <ReadSingleData>
   1fa90:	mov	r0, #0
   1fa94:	b	1ec5c <ReadDataSlab2+0x68>
   1fa98:	cmp	r0, #1
   1fa9c:	bne	1ee28 <ReadDataSlab2+0x234>
   1faa0:	ldr	ip, [r6, #4]
   1faa4:	mov	r2, r7
   1faa8:	mov	r1, r4
   1faac:	mov	r0, r5
   1fab0:	mul	r3, ip, r3
   1fab4:	bl	126c8 <ReadDoubleData>
   1fab8:	mov	r0, #0
   1fabc:	b	1ec5c <ReadDataSlab2+0x68>
   1fac0:	.word	0x0002eed8

0001fac4 <ReadCompressedDataSlab1>:
   1fac4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1fac8:	mov	r4, r2
   1facc:	mov	r2, #56	; 0x38
   1fad0:	strd	r6, [sp, #8]
   1fad4:	mov	r6, r0
   1fad8:	mov	r7, r3
   1fadc:	strd	r8, [sp, #16]
   1fae0:	mov	r9, r1
   1fae4:	mov	r1, #0
   1fae8:	str	sl, [sp, #24]
   1faec:	str	lr, [sp, #28]
   1faf0:	sub	sp, sp, #64	; 0x40
   1faf4:	add	r5, sp, #8
   1faf8:	mov	r0, r5
   1fafc:	bl	15f8 <memset@plt>
   1fb00:	cmp	r4, #0
   1fb04:	cmpne	r6, #0
   1fb08:	moveq	r8, #0
   1fb0c:	beq	1fb84 <ReadCompressedDataSlab1+0xc0>
   1fb10:	ldr	r8, [r6]
   1fb14:	cmp	r8, #0
   1fb18:	beq	1fb84 <ReadCompressedDataSlab1+0xc0>
   1fb1c:	mov	r1, r9
   1fb20:	mov	r0, r5
   1fb24:	bl	15bc <inflateCopy@plt>
   1fb28:	mov	r1, r5
   1fb2c:	mov	r0, r6
   1fb30:	ldrd	r2, [sp, #96]	; 0x60
   1fb34:	bl	235c <InflateSkipData>
   1fb38:	ldr	r2, [sp, #104]	; 0x68
   1fb3c:	sub	r3, r7, #6
   1fb40:	sub	r7, r2, #1
   1fb44:	cmp	r3, #9
   1fb48:	addls	pc, pc, r3, lsl #2
   1fb4c:	b	1fb78 <ReadCompressedDataSlab1+0xb4>
   1fb50:	b	1fc08 <ReadCompressedDataSlab1+0x144>
   1fb54:	b	1fc6c <ReadCompressedDataSlab1+0x1a8>
   1fb58:	b	1fdfc <ReadCompressedDataSlab1+0x338>
   1fb5c:	b	1fd34 <ReadCompressedDataSlab1+0x270>
   1fb60:	b	1fec4 <ReadCompressedDataSlab1+0x400>
   1fb64:	b	1fcd0 <ReadCompressedDataSlab1+0x20c>
   1fb68:	b	1fe60 <ReadCompressedDataSlab1+0x39c>
   1fb6c:	b	1fd98 <ReadCompressedDataSlab1+0x2d4>
   1fb70:	b	1ff28 <ReadCompressedDataSlab1+0x464>
   1fb74:	b	1fba4 <ReadCompressedDataSlab1+0xe0>
   1fb78:	mov	r8, #0
   1fb7c:	mov	r0, r5
   1fb80:	bl	15b0 <inflateEnd@plt>
   1fb84:	mov	r0, r8
   1fb88:	add	sp, sp, #64	; 0x40
   1fb8c:	ldrd	r4, [sp]
   1fb90:	ldrd	r6, [sp, #8]
   1fb94:	ldrd	r8, [sp, #16]
   1fb98:	ldr	sl, [sp, #24]
   1fb9c:	add	sp, sp, #28
   1fba0:	pop	{pc}		; (ldr pc, [sp], #4)
   1fba4:	cmp	r7, #0
   1fba8:	beq	1ff8c <ReadCompressedDataSlab1+0x4c8>
   1fbac:	ldr	r3, [sp, #108]	; 0x6c
   1fbb0:	mov	r8, #0
   1fbb4:	cmp	r3, #0
   1fbb8:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fbbc:	ldr	r3, [sp, #108]	; 0x6c
   1fbc0:	mov	r9, #1
   1fbc4:	add	sl, r4, r3, lsl #3
   1fbc8:	mov	r2, r4
   1fbcc:	mov	r1, r5
   1fbd0:	str	r9, [sp]
   1fbd4:	mov	r0, r6
   1fbd8:	ldr	r3, [sp, #96]	; 0x60
   1fbdc:	add	r4, r4, #8
   1fbe0:	bl	14874 <ReadCompressedUInt64Data>
   1fbe4:	add	r8, r8, r0
   1fbe8:	mov	r3, r7
   1fbec:	ldr	r2, [sp, #96]	; 0x60
   1fbf0:	mov	r1, r5
   1fbf4:	mov	r0, r6
   1fbf8:	bl	235c <InflateSkipData>
   1fbfc:	cmp	r4, sl
   1fc00:	bne	1fbc8 <ReadCompressedDataSlab1+0x104>
   1fc04:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fc08:	cmp	r7, #0
   1fc0c:	beq	1ffd4 <ReadCompressedDataSlab1+0x510>
   1fc10:	ldr	r3, [sp, #108]	; 0x6c
   1fc14:	mov	r8, #0
   1fc18:	cmp	r3, #0
   1fc1c:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fc20:	ldr	r3, [sp, #108]	; 0x6c
   1fc24:	mov	r9, #1
   1fc28:	add	sl, r4, r3, lsl #3
   1fc2c:	mov	r2, r4
   1fc30:	mov	r1, r5
   1fc34:	str	r9, [sp]
   1fc38:	mov	r0, r6
   1fc3c:	ldr	r3, [sp, #96]	; 0x60
   1fc40:	add	r4, r4, #8
   1fc44:	bl	126ec <ReadCompressedDoubleData>
   1fc48:	add	r8, r8, r0
   1fc4c:	mov	r3, r7
   1fc50:	ldr	r2, [sp, #96]	; 0x60
   1fc54:	mov	r1, r5
   1fc58:	mov	r0, r6
   1fc5c:	bl	235c <InflateSkipData>
   1fc60:	cmp	sl, r4
   1fc64:	bne	1fc2c <ReadCompressedDataSlab1+0x168>
   1fc68:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fc6c:	cmp	r7, #0
   1fc70:	beq	20064 <ReadCompressedDataSlab1+0x5a0>
   1fc74:	ldr	r3, [sp, #108]	; 0x6c
   1fc78:	mov	r8, #0
   1fc7c:	cmp	r3, #0
   1fc80:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fc84:	ldr	r3, [sp, #108]	; 0x6c
   1fc88:	mov	r9, #1
   1fc8c:	add	sl, r4, r3, lsl #2
   1fc90:	mov	r2, r4
   1fc94:	mov	r1, r5
   1fc98:	str	r9, [sp]
   1fc9c:	mov	r0, r6
   1fca0:	ldr	r3, [sp, #96]	; 0x60
   1fca4:	add	r4, r4, #4
   1fca8:	bl	13d20 <ReadCompressedSingleData>
   1fcac:	add	r8, r8, r0
   1fcb0:	mov	r3, r7
   1fcb4:	ldr	r2, [sp, #96]	; 0x60
   1fcb8:	mov	r1, r5
   1fcbc:	mov	r0, r6
   1fcc0:	bl	235c <InflateSkipData>
   1fcc4:	cmp	r4, sl
   1fcc8:	bne	1fc90 <ReadCompressedDataSlab1+0x1cc>
   1fccc:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fcd0:	cmp	r7, #0
   1fcd4:	beq	2001c <ReadCompressedDataSlab1+0x558>
   1fcd8:	ldr	r3, [sp, #108]	; 0x6c
   1fcdc:	mov	r8, #0
   1fce0:	cmp	r3, #0
   1fce4:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fce8:	ldr	r3, [sp, #108]	; 0x6c
   1fcec:	mov	r9, #1
   1fcf0:	add	sl, r4, r3, lsl #1
   1fcf4:	mov	r2, r4
   1fcf8:	mov	r1, r5
   1fcfc:	str	r9, [sp]
   1fd00:	mov	r0, r6
   1fd04:	ldr	r3, [sp, #96]	; 0x60
   1fd08:	add	r4, r4, #2
   1fd0c:	bl	15e50 <ReadCompressedUInt16Data>
   1fd10:	add	r8, r8, r0
   1fd14:	mov	r3, r7
   1fd18:	ldr	r2, [sp, #96]	; 0x60
   1fd1c:	mov	r1, r5
   1fd20:	mov	r0, r6
   1fd24:	bl	235c <InflateSkipData>
   1fd28:	cmp	sl, r4
   1fd2c:	bne	1fcf4 <ReadCompressedDataSlab1+0x230>
   1fd30:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fd34:	cmp	r7, #0
   1fd38:	beq	200ac <ReadCompressedDataSlab1+0x5e8>
   1fd3c:	ldr	r3, [sp, #108]	; 0x6c
   1fd40:	mov	r8, #0
   1fd44:	cmp	r3, #0
   1fd48:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fd4c:	ldr	r3, [sp, #108]	; 0x6c
   1fd50:	mov	sl, #1
   1fd54:	add	r9, r4, r3
   1fd58:	mov	r2, r4
   1fd5c:	mov	r1, r5
   1fd60:	str	sl, [sp]
   1fd64:	mov	r0, r6
   1fd68:	ldr	r3, [sp, #96]	; 0x60
   1fd6c:	add	r4, r4, #1
   1fd70:	bl	169c8 <ReadCompressedUInt8Data>
   1fd74:	add	r8, r8, r0
   1fd78:	mov	r3, r7
   1fd7c:	ldr	r2, [sp, #96]	; 0x60
   1fd80:	mov	r1, r5
   1fd84:	mov	r0, r6
   1fd88:	bl	235c <InflateSkipData>
   1fd8c:	cmp	r4, r9
   1fd90:	bne	1fd58 <ReadCompressedDataSlab1+0x294>
   1fd94:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fd98:	cmp	r7, #0
   1fd9c:	beq	1fff8 <ReadCompressedDataSlab1+0x534>
   1fda0:	ldr	r3, [sp, #108]	; 0x6c
   1fda4:	mov	r8, #0
   1fda8:	cmp	r3, #0
   1fdac:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fdb0:	ldr	r3, [sp, #108]	; 0x6c
   1fdb4:	mov	r9, #1
   1fdb8:	add	sl, r4, r3, lsl #2
   1fdbc:	mov	r2, r4
   1fdc0:	mov	r1, r5
   1fdc4:	str	r9, [sp]
   1fdc8:	mov	r0, r6
   1fdcc:	ldr	r3, [sp, #96]	; 0x60
   1fdd0:	add	r4, r4, #4
   1fdd4:	bl	15378 <ReadCompressedUInt32Data>
   1fdd8:	add	r8, r8, r0
   1fddc:	mov	r3, r7
   1fde0:	ldr	r2, [sp, #96]	; 0x60
   1fde4:	mov	r1, r5
   1fde8:	mov	r0, r6
   1fdec:	bl	235c <InflateSkipData>
   1fdf0:	cmp	r4, sl
   1fdf4:	bne	1fdbc <ReadCompressedDataSlab1+0x2f8>
   1fdf8:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fdfc:	cmp	r7, #0
   1fe00:	beq	20088 <ReadCompressedDataSlab1+0x5c4>
   1fe04:	ldr	r3, [sp, #108]	; 0x6c
   1fe08:	mov	r8, #0
   1fe0c:	cmp	r3, #0
   1fe10:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fe14:	ldr	r3, [sp, #108]	; 0x6c
   1fe18:	mov	r9, #1
   1fe1c:	add	sl, r4, r3
   1fe20:	mov	r2, r4
   1fe24:	mov	r1, r5
   1fe28:	str	r9, [sp]
   1fe2c:	mov	r0, r6
   1fe30:	ldr	r3, [sp, #96]	; 0x60
   1fe34:	add	r4, r4, #1
   1fe38:	bl	163c4 <ReadCompressedInt8Data>
   1fe3c:	add	r8, r8, r0
   1fe40:	mov	r3, r7
   1fe44:	ldr	r2, [sp, #96]	; 0x60
   1fe48:	mov	r1, r5
   1fe4c:	mov	r0, r6
   1fe50:	bl	235c <InflateSkipData>
   1fe54:	cmp	sl, r4
   1fe58:	bne	1fe20 <ReadCompressedDataSlab1+0x35c>
   1fe5c:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fe60:	cmp	r7, #0
   1fe64:	beq	20040 <ReadCompressedDataSlab1+0x57c>
   1fe68:	ldr	r3, [sp, #108]	; 0x6c
   1fe6c:	mov	r8, #0
   1fe70:	cmp	r3, #0
   1fe74:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fe78:	ldr	r3, [sp, #108]	; 0x6c
   1fe7c:	mov	r9, #1
   1fe80:	add	sl, r4, r3, lsl #2
   1fe84:	mov	r2, r4
   1fe88:	mov	r1, r5
   1fe8c:	str	r9, [sp]
   1fe90:	mov	r0, r6
   1fe94:	ldr	r3, [sp, #96]	; 0x60
   1fe98:	add	r4, r4, #4
   1fe9c:	bl	14e14 <ReadCompressedInt32Data>
   1fea0:	add	r8, r8, r0
   1fea4:	mov	r3, r7
   1fea8:	ldr	r2, [sp, #96]	; 0x60
   1feac:	mov	r1, r5
   1feb0:	mov	r0, r6
   1feb4:	bl	235c <InflateSkipData>
   1feb8:	cmp	sl, r4
   1febc:	bne	1fe84 <ReadCompressedDataSlab1+0x3c0>
   1fec0:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fec4:	cmp	r7, #0
   1fec8:	beq	200d0 <ReadCompressedDataSlab1+0x60c>
   1fecc:	ldr	r3, [sp, #108]	; 0x6c
   1fed0:	mov	r8, #0
   1fed4:	cmp	r3, #0
   1fed8:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fedc:	ldr	r3, [sp, #108]	; 0x6c
   1fee0:	mov	r9, #1
   1fee4:	add	sl, r4, r3, lsl #1
   1fee8:	mov	r2, r4
   1feec:	mov	r1, r5
   1fef0:	str	r9, [sp]
   1fef4:	mov	r0, r6
   1fef8:	ldr	r3, [sp, #96]	; 0x60
   1fefc:	add	r4, r4, #2
   1ff00:	bl	158dc <ReadCompressedInt16Data>
   1ff04:	add	r8, r8, r0
   1ff08:	mov	r3, r7
   1ff0c:	ldr	r2, [sp, #96]	; 0x60
   1ff10:	mov	r1, r5
   1ff14:	mov	r0, r6
   1ff18:	bl	235c <InflateSkipData>
   1ff1c:	cmp	sl, r4
   1ff20:	bne	1fee8 <ReadCompressedDataSlab1+0x424>
   1ff24:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1ff28:	cmp	r7, #0
   1ff2c:	beq	1ffb0 <ReadCompressedDataSlab1+0x4ec>
   1ff30:	ldr	r3, [sp, #108]	; 0x6c
   1ff34:	mov	r8, #0
   1ff38:	cmp	r3, #0
   1ff3c:	ble	1fb7c <ReadCompressedDataSlab1+0xb8>
   1ff40:	ldr	r3, [sp, #108]	; 0x6c
   1ff44:	mov	r9, #1
   1ff48:	add	sl, r4, r3, lsl #3
   1ff4c:	mov	r2, r4
   1ff50:	mov	r1, r5
   1ff54:	str	r9, [sp]
   1ff58:	mov	r0, r6
   1ff5c:	ldr	r3, [sp, #96]	; 0x60
   1ff60:	add	r4, r4, #8
   1ff64:	bl	142d4 <ReadCompressedInt64Data>
   1ff68:	add	r8, r8, r0
   1ff6c:	mov	r3, r7
   1ff70:	ldr	r2, [sp, #96]	; 0x60
   1ff74:	mov	r1, r5
   1ff78:	mov	r0, r6
   1ff7c:	bl	235c <InflateSkipData>
   1ff80:	cmp	r4, sl
   1ff84:	bne	1ff4c <ReadCompressedDataSlab1+0x488>
   1ff88:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1ff8c:	ldr	r3, [sp, #108]	; 0x6c
   1ff90:	mov	r2, r4
   1ff94:	mov	r0, r6
   1ff98:	mov	r1, r5
   1ff9c:	str	r3, [sp]
   1ffa0:	ldr	r3, [sp, #96]	; 0x60
   1ffa4:	bl	14874 <ReadCompressedUInt64Data>
   1ffa8:	mov	r8, r0
   1ffac:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1ffb0:	ldr	r3, [sp, #108]	; 0x6c
   1ffb4:	mov	r2, r4
   1ffb8:	mov	r0, r6
   1ffbc:	mov	r1, r5
   1ffc0:	str	r3, [sp]
   1ffc4:	ldr	r3, [sp, #96]	; 0x60
   1ffc8:	bl	142d4 <ReadCompressedInt64Data>
   1ffcc:	mov	r8, r0
   1ffd0:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1ffd4:	ldr	r3, [sp, #108]	; 0x6c
   1ffd8:	mov	r2, r4
   1ffdc:	mov	r0, r6
   1ffe0:	mov	r1, r5
   1ffe4:	str	r3, [sp]
   1ffe8:	ldr	r3, [sp, #96]	; 0x60
   1ffec:	bl	126ec <ReadCompressedDoubleData>
   1fff0:	mov	r8, r0
   1fff4:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   1fff8:	ldr	r3, [sp, #108]	; 0x6c
   1fffc:	mov	r2, r4
   20000:	mov	r0, r6
   20004:	mov	r1, r5
   20008:	str	r3, [sp]
   2000c:	ldr	r3, [sp, #96]	; 0x60
   20010:	bl	15378 <ReadCompressedUInt32Data>
   20014:	mov	r8, r0
   20018:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   2001c:	ldr	r3, [sp, #108]	; 0x6c
   20020:	mov	r2, r4
   20024:	mov	r0, r6
   20028:	mov	r1, r5
   2002c:	str	r3, [sp]
   20030:	ldr	r3, [sp, #96]	; 0x60
   20034:	bl	15e50 <ReadCompressedUInt16Data>
   20038:	mov	r8, r0
   2003c:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   20040:	ldr	r3, [sp, #108]	; 0x6c
   20044:	mov	r2, r4
   20048:	mov	r0, r6
   2004c:	mov	r1, r5
   20050:	str	r3, [sp]
   20054:	ldr	r3, [sp, #96]	; 0x60
   20058:	bl	14e14 <ReadCompressedInt32Data>
   2005c:	mov	r8, r0
   20060:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   20064:	ldr	r3, [sp, #108]	; 0x6c
   20068:	mov	r2, r4
   2006c:	mov	r0, r6
   20070:	mov	r1, r5
   20074:	str	r3, [sp]
   20078:	ldr	r3, [sp, #96]	; 0x60
   2007c:	bl	13d20 <ReadCompressedSingleData>
   20080:	mov	r8, r0
   20084:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   20088:	ldr	r3, [sp, #108]	; 0x6c
   2008c:	mov	r2, r4
   20090:	mov	r0, r6
   20094:	mov	r1, r5
   20098:	str	r3, [sp]
   2009c:	ldr	r3, [sp, #96]	; 0x60
   200a0:	bl	163c4 <ReadCompressedInt8Data>
   200a4:	mov	r8, r0
   200a8:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   200ac:	ldr	r3, [sp, #108]	; 0x6c
   200b0:	mov	r2, r4
   200b4:	mov	r0, r6
   200b8:	mov	r1, r5
   200bc:	str	r3, [sp]
   200c0:	ldr	r3, [sp, #96]	; 0x60
   200c4:	bl	169c8 <ReadCompressedUInt8Data>
   200c8:	mov	r8, r0
   200cc:	b	1fb7c <ReadCompressedDataSlab1+0xb8>
   200d0:	ldr	r3, [sp, #108]	; 0x6c
   200d4:	mov	r2, r4
   200d8:	mov	r0, r6
   200dc:	mov	r1, r5
   200e0:	str	r3, [sp]
   200e4:	ldr	r3, [sp, #96]	; 0x60
   200e8:	bl	158dc <ReadCompressedInt16Data>
   200ec:	mov	r8, r0
   200f0:	b	1fb7c <ReadCompressedDataSlab1+0xb8>

000200f4 <ReadCompressedDataSlab2>:
   200f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   200f8:	mov	r5, r0
   200fc:	mov	r4, r2
   20100:	strd	r6, [sp, #8]
   20104:	mov	r2, #56	; 0x38
   20108:	strd	r8, [sp, #16]
   2010c:	mov	r9, r3
   20110:	strd	sl, [sp, #24]
   20114:	mov	sl, r1
   20118:	mov	r1, #0
   2011c:	str	lr, [sp, #32]
   20120:	sub	sp, sp, #84	; 0x54
   20124:	add	r6, sp, #24
   20128:	ldr	r7, [sp, #120]	; 0x78
   2012c:	mov	r0, r6
   20130:	ldr	r8, [sp, #136]	; 0x88
   20134:	bl	15f8 <memset@plt>
   20138:	cmp	r4, #0
   2013c:	cmpne	r5, #0
   20140:	beq	20174 <ReadCompressedDataSlab2+0x80>
   20144:	ldr	r3, [r5]
   20148:	cmp	r3, #0
   2014c:	beq	20174 <ReadCompressedDataSlab2+0x80>
   20150:	ldrd	r2, [sp, #128]	; 0x80
   20154:	cmp	r2, #0
   20158:	clz	r3, r3
   2015c:	lsr	r3, r3, #5
   20160:	moveq	r3, #1
   20164:	cmp	r8, #0
   20168:	moveq	r3, #1
   2016c:	cmp	r3, #0
   20170:	beq	20194 <ReadCompressedDataSlab2+0xa0>
   20174:	mov	r0, #0
   20178:	add	sp, sp, #84	; 0x54
   2017c:	ldrd	r4, [sp]
   20180:	ldrd	r6, [sp, #8]
   20184:	ldrd	r8, [sp, #16]
   20188:	ldrd	sl, [sp, #24]
   2018c:	add	sp, sp, #32
   20190:	pop	{pc}		; (ldr pc, [sp], #4)
   20194:	mov	r1, sl
   20198:	mov	r0, r6
   2019c:	sub	r9, r9, #6
   201a0:	bl	15bc <inflateCopy@plt>
   201a4:	cmp	r9, #9
   201a8:	addls	pc, pc, r9, lsl #2
   201ac:	b	20208 <ReadCompressedDataSlab2+0x114>
   201b0:	b	2037c <ReadCompressedDataSlab2+0x288>
   201b4:	b	204e4 <ReadCompressedDataSlab2+0x3f0>
   201b8:	b	2064c <ReadCompressedDataSlab2+0x558>
   201bc:	b	207b4 <ReadCompressedDataSlab2+0x6c0>
   201c0:	b	2091c <ReadCompressedDataSlab2+0x828>
   201c4:	b	20a84 <ReadCompressedDataSlab2+0x990>
   201c8:	b	20bec <ReadCompressedDataSlab2+0xaf8>
   201cc:	b	20d54 <ReadCompressedDataSlab2+0xc60>
   201d0:	b	20ebc <ReadCompressedDataSlab2+0xdc8>
   201d4:	b	20214 <ReadCompressedDataSlab2+0x120>
   201d8:	ldr	r3, [sp, #132]	; 0x84
   201dc:	ldr	r3, [r3, #4]
   201e0:	cmp	r3, #1
   201e4:	bne	213e4 <ReadCompressedDataSlab2+0x12f0>
   201e8:	ldr	lr, [r8, #4]
   201ec:	mov	r3, r7
   201f0:	mov	r2, r4
   201f4:	mov	r0, r5
   201f8:	mov	r1, r6
   201fc:	mul	ip, lr, ip
   20200:	str	ip, [sp]
   20204:	bl	126ec <ReadCompressedDoubleData>
   20208:	mov	r0, r6
   2020c:	bl	15b0 <inflateEnd@plt>
   20210:	b	20174 <ReadCompressedDataSlab2+0x80>
   20214:	ldr	lr, [sp, #128]	; 0x80
   20218:	mov	r2, r7
   2021c:	mov	r1, r6
   20220:	mov	r0, r5
   20224:	ldr	r3, [sp, #132]	; 0x84
   20228:	ldr	r9, [sp, #132]	; 0x84
   2022c:	ldr	lr, [lr, #4]
   20230:	ldr	ip, [r3, #4]
   20234:	ldr	r3, [sp, #124]	; 0x7c
   20238:	ldr	r9, [r9]
   2023c:	sub	ip, ip, #1
   20240:	ldr	r3, [r3]
   20244:	mul	ip, r3, ip
   20248:	mul	r3, lr, r3
   2024c:	str	ip, [sp, #16]
   20250:	bl	235c <InflateSkipData>
   20254:	ldr	r3, [sp, #132]	; 0x84
   20258:	ldr	r3, [r3]
   2025c:	cmp	r3, #1
   20260:	beq	21680 <ReadCompressedDataSlab2+0x158c>
   20264:	ldr	r3, [r8, #4]
   20268:	cmp	r3, #0
   2026c:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20270:	sub	r3, r9, #1
   20274:	mov	fp, #1
   20278:	str	r3, [sp, #20]
   2027c:	mov	r3, #0
   20280:	str	r3, [sp, #12]
   20284:	ldr	r3, [sp, #128]	; 0x80
   20288:	mov	r2, r7
   2028c:	mov	r1, r6
   20290:	mov	r0, r5
   20294:	ldr	r3, [r3]
   20298:	bl	235c <InflateSkipData>
   2029c:	ldr	r3, [r8]
   202a0:	cmp	r3, #1
   202a4:	ble	2104c <ReadCompressedDataSlab2+0xf58>
   202a8:	ldr	sl, [sp, #20]
   202ac:	mov	r9, #0
   202b0:	mov	r2, r4
   202b4:	mov	r3, r7
   202b8:	str	fp, [sp]
   202bc:	mov	r1, r6
   202c0:	mov	r0, r5
   202c4:	bl	14874 <ReadCompressedUInt64Data>
   202c8:	mov	r3, sl
   202cc:	mov	r2, r7
   202d0:	mov	r1, r6
   202d4:	mov	r0, r5
   202d8:	bl	235c <InflateSkipData>
   202dc:	ldr	r3, [r8]
   202e0:	add	r9, r9, #1
   202e4:	add	r2, r4, #8
   202e8:	mov	r4, r2
   202ec:	sub	r3, r3, #1
   202f0:	cmp	r3, r9
   202f4:	bgt	202b0 <ReadCompressedDataSlab2+0x1bc>
   202f8:	mov	sl, r2
   202fc:	mov	r3, r7
   20300:	mov	r2, sl
   20304:	str	fp, [sp]
   20308:	mov	r1, r6
   2030c:	mov	r0, r5
   20310:	bl	14874 <ReadCompressedUInt64Data>
   20314:	ldr	r0, [r8]
   20318:	mov	r2, r7
   2031c:	add	r4, sl, #8
   20320:	ldr	r3, [sp, #124]	; 0x7c
   20324:	ldr	ip, [sp, #132]	; 0x84
   20328:	sub	r0, r0, #1
   2032c:	ldr	r1, [sp, #12]
   20330:	ldr	r3, [r3]
   20334:	ldr	r9, [ip]
   20338:	add	r1, r1, #1
   2033c:	ldr	ip, [sp, #16]
   20340:	sub	r3, r3, #1
   20344:	str	r1, [sp, #12]
   20348:	mov	r1, r6
   2034c:	add	lr, r3, ip
   20350:	ldr	r3, [sp, #128]	; 0x80
   20354:	ldr	ip, [r3]
   20358:	mls	r3, r9, r0, lr
   2035c:	mov	r0, r5
   20360:	sub	r3, r3, ip
   20364:	bl	235c <InflateSkipData>
   20368:	ldr	r3, [r8, #4]
   2036c:	ldr	r1, [sp, #12]
   20370:	cmp	r3, r1
   20374:	bgt	20284 <ReadCompressedDataSlab2+0x190>
   20378:	b	20208 <ReadCompressedDataSlab2+0x114>
   2037c:	ldr	lr, [sp, #128]	; 0x80
   20380:	mov	r2, r7
   20384:	mov	r1, r6
   20388:	mov	r0, r5
   2038c:	ldr	r3, [sp, #132]	; 0x84
   20390:	ldr	r9, [sp, #132]	; 0x84
   20394:	ldr	lr, [lr, #4]
   20398:	ldr	ip, [r3, #4]
   2039c:	ldr	r3, [sp, #124]	; 0x7c
   203a0:	ldr	r9, [r9]
   203a4:	sub	ip, ip, #1
   203a8:	ldr	r3, [r3]
   203ac:	mul	ip, r3, ip
   203b0:	mul	r3, lr, r3
   203b4:	str	ip, [sp, #16]
   203b8:	bl	235c <InflateSkipData>
   203bc:	ldr	r3, [sp, #132]	; 0x84
   203c0:	ldr	r3, [r3]
   203c4:	cmp	r3, #1
   203c8:	beq	213d0 <ReadCompressedDataSlab2+0x12dc>
   203cc:	ldr	r3, [r8, #4]
   203d0:	cmp	r3, #0
   203d4:	ble	20208 <ReadCompressedDataSlab2+0x114>
   203d8:	sub	r3, r9, #1
   203dc:	mov	fp, #1
   203e0:	str	r3, [sp, #20]
   203e4:	mov	r3, #0
   203e8:	str	r3, [sp, #12]
   203ec:	ldr	r3, [sp, #128]	; 0x80
   203f0:	mov	r2, r7
   203f4:	mov	r1, r6
   203f8:	mov	r0, r5
   203fc:	ldr	r3, [r3]
   20400:	bl	235c <InflateSkipData>
   20404:	ldr	r3, [r8]
   20408:	cmp	r3, #1
   2040c:	ble	21044 <ReadCompressedDataSlab2+0xf50>
   20410:	ldr	sl, [sp, #20]
   20414:	mov	r9, #0
   20418:	mov	r2, r4
   2041c:	mov	r3, r7
   20420:	str	fp, [sp]
   20424:	mov	r1, r6
   20428:	mov	r0, r5
   2042c:	bl	126ec <ReadCompressedDoubleData>
   20430:	mov	r3, sl
   20434:	mov	r2, r7
   20438:	mov	r1, r6
   2043c:	mov	r0, r5
   20440:	bl	235c <InflateSkipData>
   20444:	ldr	r3, [r8]
   20448:	add	r9, r9, #1
   2044c:	add	r2, r4, #8
   20450:	mov	r4, r2
   20454:	sub	r3, r3, #1
   20458:	cmp	r3, r9
   2045c:	bgt	20418 <ReadCompressedDataSlab2+0x324>
   20460:	mov	sl, r2
   20464:	mov	r3, r7
   20468:	mov	r2, sl
   2046c:	str	fp, [sp]
   20470:	mov	r1, r6
   20474:	mov	r0, r5
   20478:	bl	126ec <ReadCompressedDoubleData>
   2047c:	ldr	r0, [r8]
   20480:	mov	r2, r7
   20484:	add	r4, sl, #8
   20488:	ldr	r3, [sp, #124]	; 0x7c
   2048c:	ldr	ip, [sp, #132]	; 0x84
   20490:	sub	r0, r0, #1
   20494:	ldr	r1, [sp, #12]
   20498:	ldr	r3, [r3]
   2049c:	ldr	r9, [ip]
   204a0:	add	r1, r1, #1
   204a4:	ldr	ip, [sp, #16]
   204a8:	sub	r3, r3, #1
   204ac:	str	r1, [sp, #12]
   204b0:	mov	r1, r6
   204b4:	add	lr, r3, ip
   204b8:	ldr	r3, [sp, #128]	; 0x80
   204bc:	ldr	ip, [r3]
   204c0:	mls	r3, r9, r0, lr
   204c4:	mov	r0, r5
   204c8:	sub	r3, r3, ip
   204cc:	bl	235c <InflateSkipData>
   204d0:	ldr	r3, [r8, #4]
   204d4:	ldr	r1, [sp, #12]
   204d8:	cmp	r3, r1
   204dc:	bgt	203ec <ReadCompressedDataSlab2+0x2f8>
   204e0:	b	20208 <ReadCompressedDataSlab2+0x114>
   204e4:	ldr	lr, [sp, #128]	; 0x80
   204e8:	mov	r2, r7
   204ec:	mov	r1, r6
   204f0:	mov	r0, r5
   204f4:	ldr	r3, [sp, #132]	; 0x84
   204f8:	ldr	r9, [sp, #132]	; 0x84
   204fc:	ldr	lr, [lr, #4]
   20500:	ldr	ip, [r3, #4]
   20504:	ldr	r3, [sp, #124]	; 0x7c
   20508:	ldr	r9, [r9]
   2050c:	sub	ip, ip, #1
   20510:	ldr	r3, [r3]
   20514:	mul	ip, r3, ip
   20518:	mul	r3, lr, r3
   2051c:	str	ip, [sp, #16]
   20520:	bl	235c <InflateSkipData>
   20524:	ldr	r3, [sp, #132]	; 0x84
   20528:	ldr	r3, [r3]
   2052c:	cmp	r3, #1
   20530:	beq	21120 <ReadCompressedDataSlab2+0x102c>
   20534:	ldr	r3, [r8, #4]
   20538:	cmp	r3, #0
   2053c:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20540:	sub	r3, r9, #1
   20544:	mov	fp, #1
   20548:	str	r3, [sp, #20]
   2054c:	mov	r3, #0
   20550:	str	r3, [sp, #12]
   20554:	ldr	r3, [sp, #128]	; 0x80
   20558:	mov	r2, r7
   2055c:	mov	r1, r6
   20560:	mov	r0, r5
   20564:	ldr	r3, [r3]
   20568:	bl	235c <InflateSkipData>
   2056c:	ldr	r3, [r8]
   20570:	cmp	r3, #1
   20574:	ble	2106c <ReadCompressedDataSlab2+0xf78>
   20578:	ldr	sl, [sp, #20]
   2057c:	mov	r9, #0
   20580:	mov	r2, r4
   20584:	mov	r3, r7
   20588:	str	fp, [sp]
   2058c:	mov	r1, r6
   20590:	mov	r0, r5
   20594:	bl	13d20 <ReadCompressedSingleData>
   20598:	mov	r3, sl
   2059c:	mov	r2, r7
   205a0:	mov	r1, r6
   205a4:	mov	r0, r5
   205a8:	bl	235c <InflateSkipData>
   205ac:	ldr	r3, [r8]
   205b0:	add	r9, r9, #1
   205b4:	add	r2, r4, #4
   205b8:	mov	r4, r2
   205bc:	sub	r3, r3, #1
   205c0:	cmp	r3, r9
   205c4:	bgt	20580 <ReadCompressedDataSlab2+0x48c>
   205c8:	mov	sl, r2
   205cc:	mov	r3, r7
   205d0:	mov	r2, sl
   205d4:	str	fp, [sp]
   205d8:	mov	r1, r6
   205dc:	mov	r0, r5
   205e0:	bl	13d20 <ReadCompressedSingleData>
   205e4:	ldr	r0, [r8]
   205e8:	mov	r2, r7
   205ec:	add	r4, sl, #4
   205f0:	ldr	r3, [sp, #124]	; 0x7c
   205f4:	ldr	ip, [sp, #132]	; 0x84
   205f8:	sub	r0, r0, #1
   205fc:	ldr	r1, [sp, #12]
   20600:	ldr	r3, [r3]
   20604:	ldr	r9, [ip]
   20608:	add	r1, r1, #1
   2060c:	ldr	ip, [sp, #16]
   20610:	sub	r3, r3, #1
   20614:	str	r1, [sp, #12]
   20618:	mov	r1, r6
   2061c:	add	lr, r3, ip
   20620:	ldr	r3, [sp, #128]	; 0x80
   20624:	ldr	ip, [r3]
   20628:	mls	r3, r9, r0, lr
   2062c:	mov	r0, r5
   20630:	sub	r3, r3, ip
   20634:	bl	235c <InflateSkipData>
   20638:	ldr	r3, [r8, #4]
   2063c:	ldr	r1, [sp, #12]
   20640:	cmp	r3, r1
   20644:	bgt	20554 <ReadCompressedDataSlab2+0x460>
   20648:	b	20208 <ReadCompressedDataSlab2+0x114>
   2064c:	ldr	lr, [sp, #128]	; 0x80
   20650:	mov	r2, r7
   20654:	mov	r1, r6
   20658:	mov	r0, r5
   2065c:	ldr	r3, [sp, #132]	; 0x84
   20660:	ldr	r9, [sp, #132]	; 0x84
   20664:	ldr	lr, [lr, #4]
   20668:	ldr	ip, [r3, #4]
   2066c:	ldr	r3, [sp, #124]	; 0x7c
   20670:	ldr	r9, [r9]
   20674:	sub	ip, ip, #1
   20678:	ldr	r3, [r3]
   2067c:	mul	ip, r3, ip
   20680:	mul	r3, lr, r3
   20684:	str	ip, [sp, #16]
   20688:	bl	235c <InflateSkipData>
   2068c:	ldr	r3, [sp, #132]	; 0x84
   20690:	ldr	r3, [r3]
   20694:	cmp	r3, #1
   20698:	beq	21074 <ReadCompressedDataSlab2+0xf80>
   2069c:	ldr	r3, [r8, #4]
   206a0:	cmp	r3, #0
   206a4:	ble	20208 <ReadCompressedDataSlab2+0x114>
   206a8:	sub	r3, r9, #1
   206ac:	mov	fp, #1
   206b0:	str	r3, [sp, #20]
   206b4:	mov	r3, #0
   206b8:	str	r3, [sp, #12]
   206bc:	ldr	r3, [sp, #128]	; 0x80
   206c0:	mov	r2, r7
   206c4:	mov	r1, r6
   206c8:	mov	r0, r5
   206cc:	ldr	r3, [r3]
   206d0:	bl	235c <InflateSkipData>
   206d4:	ldr	r3, [r8]
   206d8:	cmp	r3, #1
   206dc:	ble	21064 <ReadCompressedDataSlab2+0xf70>
   206e0:	ldr	sl, [sp, #20]
   206e4:	mov	r9, #0
   206e8:	mov	r2, r4
   206ec:	mov	r3, r7
   206f0:	str	fp, [sp]
   206f4:	mov	r1, r6
   206f8:	mov	r0, r5
   206fc:	bl	163c4 <ReadCompressedInt8Data>
   20700:	mov	r3, sl
   20704:	mov	r2, r7
   20708:	mov	r1, r6
   2070c:	mov	r0, r5
   20710:	bl	235c <InflateSkipData>
   20714:	ldr	r3, [r8]
   20718:	add	r9, r9, #1
   2071c:	add	r2, r4, #1
   20720:	mov	r4, r2
   20724:	sub	r3, r3, #1
   20728:	cmp	r3, r9
   2072c:	bgt	206e8 <ReadCompressedDataSlab2+0x5f4>
   20730:	mov	sl, r2
   20734:	mov	r3, r7
   20738:	mov	r2, sl
   2073c:	str	fp, [sp]
   20740:	mov	r1, r6
   20744:	mov	r0, r5
   20748:	bl	163c4 <ReadCompressedInt8Data>
   2074c:	ldr	r0, [r8]
   20750:	mov	r2, r7
   20754:	add	r4, sl, #1
   20758:	ldr	r3, [sp, #124]	; 0x7c
   2075c:	ldr	ip, [sp, #132]	; 0x84
   20760:	sub	r0, r0, #1
   20764:	ldr	r1, [sp, #12]
   20768:	ldr	r3, [r3]
   2076c:	ldr	r9, [ip]
   20770:	add	r1, r1, #1
   20774:	ldr	ip, [sp, #16]
   20778:	sub	r3, r3, #1
   2077c:	str	r1, [sp, #12]
   20780:	mov	r1, r6
   20784:	add	lr, r3, ip
   20788:	ldr	r3, [sp, #128]	; 0x80
   2078c:	ldr	ip, [r3]
   20790:	mls	r3, r9, r0, lr
   20794:	mov	r0, r5
   20798:	sub	r3, r3, ip
   2079c:	bl	235c <InflateSkipData>
   207a0:	ldr	r3, [r8, #4]
   207a4:	ldr	r1, [sp, #12]
   207a8:	cmp	r3, r1
   207ac:	bgt	206bc <ReadCompressedDataSlab2+0x5c8>
   207b0:	b	20208 <ReadCompressedDataSlab2+0x114>
   207b4:	ldr	lr, [sp, #128]	; 0x80
   207b8:	mov	r2, r7
   207bc:	mov	r1, r6
   207c0:	mov	r0, r5
   207c4:	ldr	r3, [sp, #132]	; 0x84
   207c8:	ldr	r9, [sp, #132]	; 0x84
   207cc:	ldr	lr, [lr, #4]
   207d0:	ldr	ip, [r3, #4]
   207d4:	ldr	r3, [sp, #124]	; 0x7c
   207d8:	ldr	r9, [r9]
   207dc:	sub	ip, ip, #1
   207e0:	ldr	r3, [r3]
   207e4:	mul	ip, r3, ip
   207e8:	mul	r3, lr, r3
   207ec:	str	ip, [sp, #16]
   207f0:	bl	235c <InflateSkipData>
   207f4:	ldr	r3, [sp, #132]	; 0x84
   207f8:	ldr	r3, [r3]
   207fc:	cmp	r3, #1
   20800:	beq	21528 <ReadCompressedDataSlab2+0x1434>
   20804:	ldr	r3, [r8, #4]
   20808:	cmp	r3, #0
   2080c:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20810:	sub	r3, r9, #1
   20814:	mov	fp, #1
   20818:	str	r3, [sp, #20]
   2081c:	mov	r3, #0
   20820:	str	r3, [sp, #12]
   20824:	ldr	r3, [sp, #128]	; 0x80
   20828:	mov	r2, r7
   2082c:	mov	r1, r6
   20830:	mov	r0, r5
   20834:	ldr	r3, [r3]
   20838:	bl	235c <InflateSkipData>
   2083c:	ldr	r3, [r8]
   20840:	cmp	r3, #1
   20844:	ble	2105c <ReadCompressedDataSlab2+0xf68>
   20848:	ldr	sl, [sp, #20]
   2084c:	mov	r9, #0
   20850:	mov	r2, r4
   20854:	mov	r3, r7
   20858:	str	fp, [sp]
   2085c:	mov	r1, r6
   20860:	mov	r0, r5
   20864:	bl	169c8 <ReadCompressedUInt8Data>
   20868:	mov	r3, sl
   2086c:	mov	r2, r7
   20870:	mov	r1, r6
   20874:	mov	r0, r5
   20878:	bl	235c <InflateSkipData>
   2087c:	ldr	r3, [r8]
   20880:	add	r9, r9, #1
   20884:	add	r2, r4, #1
   20888:	mov	r4, r2
   2088c:	sub	r3, r3, #1
   20890:	cmp	r3, r9
   20894:	bgt	20850 <ReadCompressedDataSlab2+0x75c>
   20898:	mov	sl, r2
   2089c:	mov	r3, r7
   208a0:	mov	r2, sl
   208a4:	str	fp, [sp]
   208a8:	mov	r1, r6
   208ac:	mov	r0, r5
   208b0:	bl	169c8 <ReadCompressedUInt8Data>
   208b4:	ldr	r0, [r8]
   208b8:	mov	r2, r7
   208bc:	add	r4, sl, #1
   208c0:	ldr	r3, [sp, #124]	; 0x7c
   208c4:	ldr	ip, [sp, #132]	; 0x84
   208c8:	sub	r0, r0, #1
   208cc:	ldr	r1, [sp, #12]
   208d0:	ldr	r3, [r3]
   208d4:	ldr	r9, [ip]
   208d8:	add	r1, r1, #1
   208dc:	ldr	ip, [sp, #16]
   208e0:	sub	r3, r3, #1
   208e4:	str	r1, [sp, #12]
   208e8:	mov	r1, r6
   208ec:	add	lr, r3, ip
   208f0:	ldr	r3, [sp, #128]	; 0x80
   208f4:	ldr	ip, [r3]
   208f8:	mls	r3, r9, r0, lr
   208fc:	mov	r0, r5
   20900:	sub	r3, r3, ip
   20904:	bl	235c <InflateSkipData>
   20908:	ldr	r3, [r8, #4]
   2090c:	ldr	r1, [sp, #12]
   20910:	cmp	r3, r1
   20914:	bgt	20824 <ReadCompressedDataSlab2+0x730>
   20918:	b	20208 <ReadCompressedDataSlab2+0x114>
   2091c:	ldr	lr, [sp, #128]	; 0x80
   20920:	mov	r2, r7
   20924:	mov	r1, r6
   20928:	mov	r0, r5
   2092c:	ldr	r3, [sp, #132]	; 0x84
   20930:	ldr	r9, [sp, #132]	; 0x84
   20934:	ldr	lr, [lr, #4]
   20938:	ldr	ip, [r3, #4]
   2093c:	ldr	r3, [sp, #124]	; 0x7c
   20940:	ldr	r9, [r9]
   20944:	sub	ip, ip, #1
   20948:	ldr	r3, [r3]
   2094c:	mul	ip, r3, ip
   20950:	mul	r3, lr, r3
   20954:	str	ip, [sp, #16]
   20958:	bl	235c <InflateSkipData>
   2095c:	ldr	r3, [sp, #132]	; 0x84
   20960:	ldr	r3, [r3]
   20964:	cmp	r3, #1
   20968:	beq	21278 <ReadCompressedDataSlab2+0x1184>
   2096c:	ldr	r3, [r8, #4]
   20970:	cmp	r3, #0
   20974:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20978:	sub	r3, r9, #1
   2097c:	mov	fp, #1
   20980:	str	r3, [sp, #20]
   20984:	mov	r3, #0
   20988:	str	r3, [sp, #12]
   2098c:	ldr	r3, [sp, #128]	; 0x80
   20990:	mov	r2, r7
   20994:	mov	r1, r6
   20998:	mov	r0, r5
   2099c:	ldr	r3, [r3]
   209a0:	bl	235c <InflateSkipData>
   209a4:	ldr	r3, [r8]
   209a8:	cmp	r3, #1
   209ac:	ble	21054 <ReadCompressedDataSlab2+0xf60>
   209b0:	ldr	sl, [sp, #20]
   209b4:	mov	r9, #0
   209b8:	mov	r2, r4
   209bc:	mov	r3, r7
   209c0:	str	fp, [sp]
   209c4:	mov	r1, r6
   209c8:	mov	r0, r5
   209cc:	bl	158dc <ReadCompressedInt16Data>
   209d0:	mov	r3, sl
   209d4:	mov	r2, r7
   209d8:	mov	r1, r6
   209dc:	mov	r0, r5
   209e0:	bl	235c <InflateSkipData>
   209e4:	ldr	r3, [r8]
   209e8:	add	r9, r9, #1
   209ec:	add	r2, r4, #2
   209f0:	mov	r4, r2
   209f4:	sub	r3, r3, #1
   209f8:	cmp	r3, r9
   209fc:	bgt	209b8 <ReadCompressedDataSlab2+0x8c4>
   20a00:	mov	sl, r2
   20a04:	mov	r3, r7
   20a08:	mov	r2, sl
   20a0c:	str	fp, [sp]
   20a10:	mov	r1, r6
   20a14:	mov	r0, r5
   20a18:	bl	158dc <ReadCompressedInt16Data>
   20a1c:	ldr	r0, [r8]
   20a20:	mov	r2, r7
   20a24:	add	r4, sl, #2
   20a28:	ldr	r3, [sp, #124]	; 0x7c
   20a2c:	ldr	ip, [sp, #132]	; 0x84
   20a30:	sub	r0, r0, #1
   20a34:	ldr	r1, [sp, #12]
   20a38:	ldr	r3, [r3]
   20a3c:	ldr	r9, [ip]
   20a40:	add	r1, r1, #1
   20a44:	ldr	ip, [sp, #16]
   20a48:	sub	r3, r3, #1
   20a4c:	str	r1, [sp, #12]
   20a50:	mov	r1, r6
   20a54:	add	lr, r3, ip
   20a58:	ldr	r3, [sp, #128]	; 0x80
   20a5c:	ldr	ip, [r3]
   20a60:	mls	r3, r9, r0, lr
   20a64:	mov	r0, r5
   20a68:	sub	r3, r3, ip
   20a6c:	bl	235c <InflateSkipData>
   20a70:	ldr	r3, [r8, #4]
   20a74:	ldr	r1, [sp, #12]
   20a78:	cmp	r3, r1
   20a7c:	bgt	2098c <ReadCompressedDataSlab2+0x898>
   20a80:	b	20208 <ReadCompressedDataSlab2+0x114>
   20a84:	ldr	lr, [sp, #128]	; 0x80
   20a88:	mov	r2, r7
   20a8c:	mov	r1, r6
   20a90:	mov	r0, r5
   20a94:	ldr	r3, [sp, #132]	; 0x84
   20a98:	ldr	r9, [sp, #132]	; 0x84
   20a9c:	ldr	lr, [lr, #4]
   20aa0:	ldr	ip, [r3, #4]
   20aa4:	ldr	r3, [sp, #124]	; 0x7c
   20aa8:	ldr	r9, [r9]
   20aac:	sub	ip, ip, #1
   20ab0:	ldr	r3, [r3]
   20ab4:	mul	ip, r3, ip
   20ab8:	mul	r3, lr, r3
   20abc:	str	ip, [sp, #16]
   20ac0:	bl	235c <InflateSkipData>
   20ac4:	ldr	r3, [sp, #132]	; 0x84
   20ac8:	ldr	r3, [r3]
   20acc:	cmp	r3, #1
   20ad0:	beq	2147c <ReadCompressedDataSlab2+0x1388>
   20ad4:	ldr	r3, [r8, #4]
   20ad8:	cmp	r3, #0
   20adc:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20ae0:	sub	r3, r9, #1
   20ae4:	mov	fp, #1
   20ae8:	str	r3, [sp, #20]
   20aec:	mov	r3, #0
   20af0:	str	r3, [sp, #12]
   20af4:	ldr	r3, [sp, #128]	; 0x80
   20af8:	mov	r2, r7
   20afc:	mov	r1, r6
   20b00:	mov	r0, r5
   20b04:	ldr	r3, [r3]
   20b08:	bl	235c <InflateSkipData>
   20b0c:	ldr	r3, [r8]
   20b10:	cmp	r3, #1
   20b14:	ble	2103c <ReadCompressedDataSlab2+0xf48>
   20b18:	ldr	sl, [sp, #20]
   20b1c:	mov	r9, #0
   20b20:	mov	r2, r4
   20b24:	mov	r3, r7
   20b28:	str	fp, [sp]
   20b2c:	mov	r1, r6
   20b30:	mov	r0, r5
   20b34:	bl	15e50 <ReadCompressedUInt16Data>
   20b38:	mov	r3, sl
   20b3c:	mov	r2, r7
   20b40:	mov	r1, r6
   20b44:	mov	r0, r5
   20b48:	bl	235c <InflateSkipData>
   20b4c:	ldr	r3, [r8]
   20b50:	add	r9, r9, #1
   20b54:	add	r2, r4, #2
   20b58:	mov	r4, r2
   20b5c:	sub	r3, r3, #1
   20b60:	cmp	r3, r9
   20b64:	bgt	20b20 <ReadCompressedDataSlab2+0xa2c>
   20b68:	mov	sl, r2
   20b6c:	mov	r3, r7
   20b70:	mov	r2, sl
   20b74:	str	fp, [sp]
   20b78:	mov	r1, r6
   20b7c:	mov	r0, r5
   20b80:	bl	15e50 <ReadCompressedUInt16Data>
   20b84:	ldr	r0, [r8]
   20b88:	mov	r2, r7
   20b8c:	add	r4, sl, #2
   20b90:	ldr	r3, [sp, #124]	; 0x7c
   20b94:	ldr	ip, [sp, #132]	; 0x84
   20b98:	sub	r0, r0, #1
   20b9c:	ldr	r1, [sp, #12]
   20ba0:	ldr	r3, [r3]
   20ba4:	ldr	r9, [ip]
   20ba8:	add	r1, r1, #1
   20bac:	ldr	ip, [sp, #16]
   20bb0:	sub	r3, r3, #1
   20bb4:	str	r1, [sp, #12]
   20bb8:	mov	r1, r6
   20bbc:	add	lr, r3, ip
   20bc0:	ldr	r3, [sp, #128]	; 0x80
   20bc4:	ldr	ip, [r3]
   20bc8:	mls	r3, r9, r0, lr
   20bcc:	mov	r0, r5
   20bd0:	sub	r3, r3, ip
   20bd4:	bl	235c <InflateSkipData>
   20bd8:	ldr	r3, [r8, #4]
   20bdc:	ldr	r1, [sp, #12]
   20be0:	cmp	r3, r1
   20be4:	bgt	20af4 <ReadCompressedDataSlab2+0xa00>
   20be8:	b	20208 <ReadCompressedDataSlab2+0x114>
   20bec:	ldr	lr, [sp, #128]	; 0x80
   20bf0:	mov	r2, r7
   20bf4:	mov	r1, r6
   20bf8:	mov	r0, r5
   20bfc:	ldr	r3, [sp, #132]	; 0x84
   20c00:	ldr	r9, [sp, #132]	; 0x84
   20c04:	ldr	lr, [lr, #4]
   20c08:	ldr	ip, [r3, #4]
   20c0c:	ldr	r3, [sp, #124]	; 0x7c
   20c10:	ldr	r9, [r9]
   20c14:	sub	ip, ip, #1
   20c18:	ldr	r3, [r3]
   20c1c:	mul	ip, r3, ip
   20c20:	mul	r3, lr, r3
   20c24:	str	ip, [sp, #16]
   20c28:	bl	235c <InflateSkipData>
   20c2c:	ldr	r3, [sp, #132]	; 0x84
   20c30:	ldr	r3, [r3]
   20c34:	cmp	r3, #1
   20c38:	beq	211cc <ReadCompressedDataSlab2+0x10d8>
   20c3c:	ldr	r3, [r8, #4]
   20c40:	cmp	r3, #0
   20c44:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20c48:	sub	r3, r9, #1
   20c4c:	mov	fp, #1
   20c50:	str	r3, [sp, #20]
   20c54:	mov	r3, #0
   20c58:	str	r3, [sp, #12]
   20c5c:	ldr	r3, [sp, #128]	; 0x80
   20c60:	mov	r2, r7
   20c64:	mov	r1, r6
   20c68:	mov	r0, r5
   20c6c:	ldr	r3, [r3]
   20c70:	bl	235c <InflateSkipData>
   20c74:	ldr	r3, [r8]
   20c78:	cmp	r3, #1
   20c7c:	ble	21034 <ReadCompressedDataSlab2+0xf40>
   20c80:	ldr	sl, [sp, #20]
   20c84:	mov	r9, #0
   20c88:	mov	r2, r4
   20c8c:	mov	r3, r7
   20c90:	str	fp, [sp]
   20c94:	mov	r1, r6
   20c98:	mov	r0, r5
   20c9c:	bl	14e14 <ReadCompressedInt32Data>
   20ca0:	mov	r3, sl
   20ca4:	mov	r2, r7
   20ca8:	mov	r1, r6
   20cac:	mov	r0, r5
   20cb0:	bl	235c <InflateSkipData>
   20cb4:	ldr	r3, [r8]
   20cb8:	add	r9, r9, #1
   20cbc:	add	r2, r4, #4
   20cc0:	mov	r4, r2
   20cc4:	sub	r3, r3, #1
   20cc8:	cmp	r3, r9
   20ccc:	bgt	20c88 <ReadCompressedDataSlab2+0xb94>
   20cd0:	mov	sl, r2
   20cd4:	mov	r3, r7
   20cd8:	mov	r2, sl
   20cdc:	str	fp, [sp]
   20ce0:	mov	r1, r6
   20ce4:	mov	r0, r5
   20ce8:	bl	14e14 <ReadCompressedInt32Data>
   20cec:	ldr	r0, [r8]
   20cf0:	mov	r2, r7
   20cf4:	add	r4, sl, #4
   20cf8:	ldr	r3, [sp, #124]	; 0x7c
   20cfc:	ldr	ip, [sp, #132]	; 0x84
   20d00:	sub	r0, r0, #1
   20d04:	ldr	r1, [sp, #12]
   20d08:	ldr	r3, [r3]
   20d0c:	ldr	r9, [ip]
   20d10:	add	r1, r1, #1
   20d14:	ldr	ip, [sp, #16]
   20d18:	sub	r3, r3, #1
   20d1c:	str	r1, [sp, #12]
   20d20:	mov	r1, r6
   20d24:	add	lr, r3, ip
   20d28:	ldr	r3, [sp, #128]	; 0x80
   20d2c:	ldr	ip, [r3]
   20d30:	mls	r3, r9, r0, lr
   20d34:	mov	r0, r5
   20d38:	sub	r3, r3, ip
   20d3c:	bl	235c <InflateSkipData>
   20d40:	ldr	r3, [r8, #4]
   20d44:	ldr	r1, [sp, #12]
   20d48:	cmp	r3, r1
   20d4c:	bgt	20c5c <ReadCompressedDataSlab2+0xb68>
   20d50:	b	20208 <ReadCompressedDataSlab2+0x114>
   20d54:	ldr	lr, [sp, #128]	; 0x80
   20d58:	mov	r2, r7
   20d5c:	mov	r1, r6
   20d60:	mov	r0, r5
   20d64:	ldr	r3, [sp, #132]	; 0x84
   20d68:	ldr	r9, [sp, #132]	; 0x84
   20d6c:	ldr	lr, [lr, #4]
   20d70:	ldr	ip, [r3, #4]
   20d74:	ldr	r3, [sp, #124]	; 0x7c
   20d78:	ldr	r9, [r9]
   20d7c:	sub	ip, ip, #1
   20d80:	ldr	r3, [r3]
   20d84:	mul	ip, r3, ip
   20d88:	mul	r3, lr, r3
   20d8c:	str	ip, [sp, #16]
   20d90:	bl	235c <InflateSkipData>
   20d94:	ldr	r3, [sp, #132]	; 0x84
   20d98:	ldr	r3, [r3]
   20d9c:	cmp	r3, #1
   20da0:	beq	215d4 <ReadCompressedDataSlab2+0x14e0>
   20da4:	ldr	r3, [r8, #4]
   20da8:	cmp	r3, #0
   20dac:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20db0:	sub	r3, r9, #1
   20db4:	mov	fp, #1
   20db8:	str	r3, [sp, #20]
   20dbc:	mov	r3, #0
   20dc0:	str	r3, [sp, #12]
   20dc4:	ldr	r3, [sp, #128]	; 0x80
   20dc8:	mov	r2, r7
   20dcc:	mov	r1, r6
   20dd0:	mov	r0, r5
   20dd4:	ldr	r3, [r3]
   20dd8:	bl	235c <InflateSkipData>
   20ddc:	ldr	r3, [r8]
   20de0:	cmp	r3, #1
   20de4:	ble	2102c <ReadCompressedDataSlab2+0xf38>
   20de8:	ldr	sl, [sp, #20]
   20dec:	mov	r9, #0
   20df0:	mov	r2, r4
   20df4:	mov	r3, r7
   20df8:	str	fp, [sp]
   20dfc:	mov	r1, r6
   20e00:	mov	r0, r5
   20e04:	bl	15378 <ReadCompressedUInt32Data>
   20e08:	mov	r3, sl
   20e0c:	mov	r2, r7
   20e10:	mov	r1, r6
   20e14:	mov	r0, r5
   20e18:	bl	235c <InflateSkipData>
   20e1c:	ldr	r3, [r8]
   20e20:	add	r9, r9, #1
   20e24:	add	r2, r4, #4
   20e28:	mov	r4, r2
   20e2c:	sub	r3, r3, #1
   20e30:	cmp	r3, r9
   20e34:	bgt	20df0 <ReadCompressedDataSlab2+0xcfc>
   20e38:	mov	sl, r2
   20e3c:	mov	r3, r7
   20e40:	mov	r2, sl
   20e44:	str	fp, [sp]
   20e48:	mov	r1, r6
   20e4c:	mov	r0, r5
   20e50:	bl	15378 <ReadCompressedUInt32Data>
   20e54:	ldr	r0, [r8]
   20e58:	mov	r2, r7
   20e5c:	add	r4, sl, #4
   20e60:	ldr	r3, [sp, #124]	; 0x7c
   20e64:	ldr	ip, [sp, #132]	; 0x84
   20e68:	sub	r0, r0, #1
   20e6c:	ldr	r1, [sp, #12]
   20e70:	ldr	r3, [r3]
   20e74:	ldr	r9, [ip]
   20e78:	add	r1, r1, #1
   20e7c:	ldr	ip, [sp, #16]
   20e80:	sub	r3, r3, #1
   20e84:	str	r1, [sp, #12]
   20e88:	mov	r1, r6
   20e8c:	add	lr, r3, ip
   20e90:	ldr	r3, [sp, #128]	; 0x80
   20e94:	ldr	ip, [r3]
   20e98:	mls	r3, r9, r0, lr
   20e9c:	mov	r0, r5
   20ea0:	sub	r3, r3, ip
   20ea4:	bl	235c <InflateSkipData>
   20ea8:	ldr	r3, [r8, #4]
   20eac:	ldr	r1, [sp, #12]
   20eb0:	cmp	r3, r1
   20eb4:	bgt	20dc4 <ReadCompressedDataSlab2+0xcd0>
   20eb8:	b	20208 <ReadCompressedDataSlab2+0x114>
   20ebc:	ldr	lr, [sp, #128]	; 0x80
   20ec0:	mov	r2, r7
   20ec4:	mov	r1, r6
   20ec8:	mov	r0, r5
   20ecc:	ldr	r3, [sp, #132]	; 0x84
   20ed0:	ldr	r9, [sp, #132]	; 0x84
   20ed4:	ldr	lr, [lr, #4]
   20ed8:	ldr	ip, [r3, #4]
   20edc:	ldr	r3, [sp, #124]	; 0x7c
   20ee0:	ldr	r9, [r9]
   20ee4:	sub	ip, ip, #1
   20ee8:	ldr	r3, [r3]
   20eec:	mul	ip, r3, ip
   20ef0:	mul	r3, lr, r3
   20ef4:	str	ip, [sp, #16]
   20ef8:	bl	235c <InflateSkipData>
   20efc:	ldr	r3, [sp, #132]	; 0x84
   20f00:	ldr	r3, [r3]
   20f04:	cmp	r3, #1
   20f08:	beq	21324 <ReadCompressedDataSlab2+0x1230>
   20f0c:	ldr	r3, [r8, #4]
   20f10:	cmp	r3, #0
   20f14:	ble	20208 <ReadCompressedDataSlab2+0x114>
   20f18:	sub	r3, r9, #1
   20f1c:	mov	fp, #1
   20f20:	str	r3, [sp, #20]
   20f24:	mov	r3, #0
   20f28:	str	r3, [sp, #12]
   20f2c:	ldr	r3, [sp, #128]	; 0x80
   20f30:	mov	r2, r7
   20f34:	mov	r1, r6
   20f38:	mov	r0, r5
   20f3c:	ldr	r3, [r3]
   20f40:	bl	235c <InflateSkipData>
   20f44:	ldr	r3, [r8]
   20f48:	cmp	r3, #1
   20f4c:	ble	21024 <ReadCompressedDataSlab2+0xf30>
   20f50:	ldr	sl, [sp, #20]
   20f54:	mov	r9, #0
   20f58:	mov	r2, r4
   20f5c:	mov	r3, r7
   20f60:	str	fp, [sp]
   20f64:	mov	r1, r6
   20f68:	mov	r0, r5
   20f6c:	bl	142d4 <ReadCompressedInt64Data>
   20f70:	mov	r3, sl
   20f74:	mov	r2, r7
   20f78:	mov	r1, r6
   20f7c:	mov	r0, r5
   20f80:	bl	235c <InflateSkipData>
   20f84:	ldr	r3, [r8]
   20f88:	add	r9, r9, #1
   20f8c:	add	r2, r4, #8
   20f90:	mov	r4, r2
   20f94:	sub	r3, r3, #1
   20f98:	cmp	r3, r9
   20f9c:	bgt	20f58 <ReadCompressedDataSlab2+0xe64>
   20fa0:	mov	sl, r2
   20fa4:	mov	r3, r7
   20fa8:	mov	r2, sl
   20fac:	str	fp, [sp]
   20fb0:	mov	r1, r6
   20fb4:	mov	r0, r5
   20fb8:	bl	142d4 <ReadCompressedInt64Data>
   20fbc:	ldr	r0, [r8]
   20fc0:	mov	r2, r7
   20fc4:	add	r4, sl, #8
   20fc8:	ldr	r3, [sp, #124]	; 0x7c
   20fcc:	ldr	ip, [sp, #132]	; 0x84
   20fd0:	sub	r0, r0, #1
   20fd4:	ldr	r1, [sp, #12]
   20fd8:	ldr	r3, [r3]
   20fdc:	ldr	r9, [ip]
   20fe0:	add	r1, r1, #1
   20fe4:	ldr	ip, [sp, #16]
   20fe8:	sub	r3, r3, #1
   20fec:	str	r1, [sp, #12]
   20ff0:	mov	r1, r6
   20ff4:	add	lr, r3, ip
   20ff8:	ldr	r3, [sp, #128]	; 0x80
   20ffc:	ldr	ip, [r3]
   21000:	mls	r3, r9, r0, lr
   21004:	mov	r0, r5
   21008:	sub	r3, r3, ip
   2100c:	bl	235c <InflateSkipData>
   21010:	ldr	r3, [r8, #4]
   21014:	ldr	r1, [sp, #12]
   21018:	cmp	r3, r1
   2101c:	bgt	20f2c <ReadCompressedDataSlab2+0xe38>
   21020:	b	20208 <ReadCompressedDataSlab2+0x114>
   21024:	mov	sl, r4
   21028:	b	20fa4 <ReadCompressedDataSlab2+0xeb0>
   2102c:	mov	sl, r4
   21030:	b	20e3c <ReadCompressedDataSlab2+0xd48>
   21034:	mov	sl, r4
   21038:	b	20cd4 <ReadCompressedDataSlab2+0xbe0>
   2103c:	mov	sl, r4
   21040:	b	20b6c <ReadCompressedDataSlab2+0xa78>
   21044:	mov	sl, r4
   21048:	b	20464 <ReadCompressedDataSlab2+0x370>
   2104c:	mov	sl, r4
   21050:	b	202fc <ReadCompressedDataSlab2+0x208>
   21054:	mov	sl, r4
   21058:	b	20a04 <ReadCompressedDataSlab2+0x910>
   2105c:	mov	sl, r4
   21060:	b	2089c <ReadCompressedDataSlab2+0x7a8>
   21064:	mov	sl, r4
   21068:	b	20734 <ReadCompressedDataSlab2+0x640>
   2106c:	mov	sl, r4
   21070:	b	205cc <ReadCompressedDataSlab2+0x4d8>
   21074:	ldr	r3, [sp, #124]	; 0x7c
   21078:	ldr	ip, [r8]
   2107c:	ldr	r3, [r3]
   21080:	cmp	ip, r3
   21084:	beq	21728 <ReadCompressedDataSlab2+0x1634>
   21088:	ldr	r3, [r8, #4]
   2108c:	cmp	r3, #0
   21090:	ble	20208 <ReadCompressedDataSlab2+0x114>
   21094:	ldrd	sl, [sp, #128]	; 0x80
   21098:	mov	r9, #0
   2109c:	mov	r2, r7
   210a0:	mov	r1, r6
   210a4:	mov	r0, r5
   210a8:	ldr	r3, [sl]
   210ac:	add	r9, r9, #1
   210b0:	bl	235c <InflateSkipData>
   210b4:	ldr	ip, [r8]
   210b8:	mov	r2, r4
   210bc:	mov	r3, r7
   210c0:	mov	r1, r6
   210c4:	mov	r0, r5
   210c8:	str	ip, [sp]
   210cc:	bl	163c4 <ReadCompressedInt8Data>
   210d0:	ldr	lr, [r8]
   210d4:	mov	r2, r7
   210d8:	mov	r1, r6
   210dc:	ldr	r3, [sp, #124]	; 0x7c
   210e0:	ldr	r0, [sp, #16]
   210e4:	sub	ip, lr, #1
   210e8:	add	r4, r4, lr
   210ec:	ldr	lr, [fp]
   210f0:	ldr	r3, [r3]
   210f4:	sub	r3, r3, #1
   210f8:	add	r3, r3, r0
   210fc:	mov	r0, r5
   21100:	mls	r3, lr, ip, r3
   21104:	ldr	ip, [sl]
   21108:	sub	r3, r3, ip
   2110c:	bl	235c <InflateSkipData>
   21110:	ldr	r3, [r8, #4]
   21114:	cmp	r3, r9
   21118:	bgt	2109c <ReadCompressedDataSlab2+0xfa8>
   2111c:	b	20208 <ReadCompressedDataSlab2+0x114>
   21120:	ldr	r3, [sp, #124]	; 0x7c
   21124:	ldr	ip, [r8]
   21128:	ldr	r3, [r3]
   2112c:	cmp	ip, r3
   21130:	beq	2178c <ReadCompressedDataSlab2+0x1698>
   21134:	ldr	r3, [r8, #4]
   21138:	cmp	r3, #0
   2113c:	ble	20208 <ReadCompressedDataSlab2+0x114>
   21140:	ldrd	sl, [sp, #128]	; 0x80
   21144:	mov	r9, #0
   21148:	mov	r2, r7
   2114c:	mov	r1, r6
   21150:	mov	r0, r5
   21154:	ldr	r3, [sl]
   21158:	add	r9, r9, #1
   2115c:	bl	235c <InflateSkipData>
   21160:	ldr	ip, [r8]
   21164:	mov	r2, r4
   21168:	mov	r3, r7
   2116c:	mov	r1, r6
   21170:	mov	r0, r5
   21174:	str	ip, [sp]
   21178:	bl	13d20 <ReadCompressedSingleData>
   2117c:	ldr	lr, [r8]
   21180:	mov	r2, r7
   21184:	mov	r1, r6
   21188:	ldr	r3, [sp, #124]	; 0x7c
   2118c:	ldr	r0, [sp, #16]
   21190:	sub	ip, lr, #1
   21194:	add	r4, r4, lr, lsl #2
   21198:	ldr	lr, [fp]
   2119c:	ldr	r3, [r3]
   211a0:	sub	r3, r3, #1
   211a4:	add	r3, r3, r0
   211a8:	mov	r0, r5
   211ac:	mls	r3, lr, ip, r3
   211b0:	ldr	ip, [sl]
   211b4:	sub	r3, r3, ip
   211b8:	bl	235c <InflateSkipData>
   211bc:	ldr	r3, [r8, #4]
   211c0:	cmp	r3, r9
   211c4:	bgt	21148 <ReadCompressedDataSlab2+0x1054>
   211c8:	b	20208 <ReadCompressedDataSlab2+0x114>
   211cc:	ldr	r3, [sp, #124]	; 0x7c
   211d0:	ldr	ip, [r8]
   211d4:	ldr	r3, [r3]
   211d8:	cmp	ip, r3
   211dc:	beq	21828 <ReadCompressedDataSlab2+0x1734>
   211e0:	ldr	r3, [r8, #4]
   211e4:	cmp	r3, #0
   211e8:	ble	20208 <ReadCompressedDataSlab2+0x114>
   211ec:	ldrd	sl, [sp, #128]	; 0x80
   211f0:	mov	r9, #0
   211f4:	mov	r2, r7
   211f8:	mov	r1, r6
   211fc:	mov	r0, r5
   21200:	ldr	r3, [sl]
   21204:	add	r9, r9, #1
   21208:	bl	235c <InflateSkipData>
   2120c:	ldr	ip, [r8]
   21210:	mov	r2, r4
   21214:	mov	r3, r7
   21218:	mov	r1, r6
   2121c:	mov	r0, r5
   21220:	str	ip, [sp]
   21224:	bl	14e14 <ReadCompressedInt32Data>
   21228:	ldr	lr, [r8]
   2122c:	mov	r2, r7
   21230:	mov	r1, r6
   21234:	ldr	r3, [sp, #124]	; 0x7c
   21238:	ldr	r0, [sp, #16]
   2123c:	sub	ip, lr, #1
   21240:	add	r4, r4, lr, lsl #2
   21244:	ldr	lr, [fp]
   21248:	ldr	r3, [r3]
   2124c:	sub	r3, r3, #1
   21250:	add	r3, r3, r0
   21254:	mov	r0, r5
   21258:	mls	r3, lr, ip, r3
   2125c:	ldr	ip, [sl]
   21260:	sub	r3, r3, ip
   21264:	bl	235c <InflateSkipData>
   21268:	ldr	r3, [r8, #4]
   2126c:	cmp	r3, r9
   21270:	bgt	211f4 <ReadCompressedDataSlab2+0x1100>
   21274:	b	20208 <ReadCompressedDataSlab2+0x114>
   21278:	ldr	r3, [sp, #124]	; 0x7c
   2127c:	ldr	ip, [r8]
   21280:	ldr	r3, [r3]
   21284:	cmp	ip, r3
   21288:	beq	217c0 <ReadCompressedDataSlab2+0x16cc>
   2128c:	ldr	r3, [r8, #4]
   21290:	cmp	r3, #0
   21294:	ble	20208 <ReadCompressedDataSlab2+0x114>
   21298:	ldrd	sl, [sp, #128]	; 0x80
   2129c:	mov	r9, #0
   212a0:	mov	r2, r7
   212a4:	mov	r1, r6
   212a8:	mov	r0, r5
   212ac:	ldr	r3, [sl]
   212b0:	add	r9, r9, #1
   212b4:	bl	235c <InflateSkipData>
   212b8:	ldr	ip, [r8]
   212bc:	mov	r2, r4
   212c0:	mov	r3, r7
   212c4:	mov	r1, r6
   212c8:	mov	r0, r5
   212cc:	str	ip, [sp]
   212d0:	bl	158dc <ReadCompressedInt16Data>
   212d4:	ldr	lr, [r8]
   212d8:	mov	r2, r7
   212dc:	mov	r1, r6
   212e0:	ldr	r3, [sp, #124]	; 0x7c
   212e4:	ldr	r0, [sp, #16]
   212e8:	sub	ip, lr, #1
   212ec:	add	r4, r4, lr, lsl #1
   212f0:	ldr	lr, [fp]
   212f4:	ldr	r3, [r3]
   212f8:	sub	r3, r3, #1
   212fc:	add	r3, r3, r0
   21300:	mov	r0, r5
   21304:	mls	r3, lr, ip, r3
   21308:	ldr	ip, [sl]
   2130c:	sub	r3, r3, ip
   21310:	bl	235c <InflateSkipData>
   21314:	ldr	r3, [r8, #4]
   21318:	cmp	r3, r9
   2131c:	bgt	212a0 <ReadCompressedDataSlab2+0x11ac>
   21320:	b	20208 <ReadCompressedDataSlab2+0x114>
   21324:	ldr	r3, [sp, #124]	; 0x7c
   21328:	ldr	ip, [r8]
   2132c:	ldr	r3, [r3]
   21330:	cmp	ip, r3
   21334:	beq	21890 <ReadCompressedDataSlab2+0x179c>
   21338:	ldr	r3, [r8, #4]
   2133c:	cmp	r3, #0
   21340:	ble	20208 <ReadCompressedDataSlab2+0x114>
   21344:	ldrd	sl, [sp, #128]	; 0x80
   21348:	mov	r9, #0
   2134c:	mov	r2, r7
   21350:	mov	r1, r6
   21354:	mov	r0, r5
   21358:	ldr	r3, [sl]
   2135c:	add	r9, r9, #1
   21360:	bl	235c <InflateSkipData>
   21364:	ldr	ip, [r8]
   21368:	mov	r2, r4
   2136c:	mov	r3, r7
   21370:	mov	r1, r6
   21374:	mov	r0, r5
   21378:	str	ip, [sp]
   2137c:	bl	142d4 <ReadCompressedInt64Data>
   21380:	ldr	lr, [r8]
   21384:	mov	r2, r7
   21388:	mov	r1, r6
   2138c:	ldr	r3, [sp, #124]	; 0x7c
   21390:	ldr	r0, [sp, #16]
   21394:	sub	ip, lr, #1
   21398:	add	r4, r4, lr, lsl #3
   2139c:	ldr	lr, [fp]
   213a0:	ldr	r3, [r3]
   213a4:	sub	r3, r3, #1
   213a8:	add	r3, r3, r0
   213ac:	mov	r0, r5
   213b0:	mls	r3, lr, ip, r3
   213b4:	ldr	ip, [sl]
   213b8:	sub	r3, r3, ip
   213bc:	bl	235c <InflateSkipData>
   213c0:	ldr	r3, [r8, #4]
   213c4:	cmp	r3, r9
   213c8:	bgt	2134c <ReadCompressedDataSlab2+0x1258>
   213cc:	b	20208 <ReadCompressedDataSlab2+0x114>
   213d0:	ldr	r3, [sp, #124]	; 0x7c
   213d4:	ldr	ip, [r8]
   213d8:	ldr	r3, [r3]
   213dc:	cmp	ip, r3
   213e0:	beq	201d8 <ReadCompressedDataSlab2+0xe4>
   213e4:	ldr	r3, [r8, #4]
   213e8:	cmp	r3, #0
   213ec:	ble	20208 <ReadCompressedDataSlab2+0x114>
   213f0:	ldrd	sl, [sp, #128]	; 0x80
   213f4:	mov	r9, #0
   213f8:	mov	r2, r7
   213fc:	mov	r1, r6
   21400:	mov	r0, r5
   21404:	ldr	r3, [sl]
   21408:	add	r9, r9, #1
   2140c:	bl	235c <InflateSkipData>
   21410:	ldr	ip, [r8]
   21414:	mov	r2, r4
   21418:	mov	r3, r7
   2141c:	mov	r1, r6
   21420:	mov	r0, r5
   21424:	str	ip, [sp]
   21428:	bl	126ec <ReadCompressedDoubleData>
   2142c:	ldr	lr, [r8]
   21430:	mov	r2, r7
   21434:	mov	r1, r6
   21438:	ldr	r3, [sp, #124]	; 0x7c
   2143c:	ldr	r0, [sp, #16]
   21440:	sub	ip, lr, #1
   21444:	add	r4, r4, lr, lsl #3
   21448:	ldr	lr, [fp]
   2144c:	ldr	r3, [r3]
   21450:	sub	r3, r3, #1
   21454:	add	r3, r3, r0
   21458:	mov	r0, r5
   2145c:	mls	r3, lr, ip, r3
   21460:	ldr	ip, [sl]
   21464:	sub	r3, r3, ip
   21468:	bl	235c <InflateSkipData>
   2146c:	ldr	r3, [r8, #4]
   21470:	cmp	r3, r9
   21474:	bgt	213f8 <ReadCompressedDataSlab2+0x1304>
   21478:	b	20208 <ReadCompressedDataSlab2+0x114>
   2147c:	ldr	r3, [sp, #124]	; 0x7c
   21480:	ldr	ip, [r8]
   21484:	ldr	r3, [r3]
   21488:	cmp	ip, r3
   2148c:	beq	2185c <ReadCompressedDataSlab2+0x1768>
   21490:	ldr	r3, [r8, #4]
   21494:	cmp	r3, #0
   21498:	ble	20208 <ReadCompressedDataSlab2+0x114>
   2149c:	ldrd	sl, [sp, #128]	; 0x80
   214a0:	mov	r9, #0
   214a4:	mov	r2, r7
   214a8:	mov	r1, r6
   214ac:	mov	r0, r5
   214b0:	ldr	r3, [sl]
   214b4:	add	r9, r9, #1
   214b8:	bl	235c <InflateSkipData>
   214bc:	ldr	ip, [r8]
   214c0:	mov	r2, r4
   214c4:	mov	r3, r7
   214c8:	mov	r1, r6
   214cc:	mov	r0, r5
   214d0:	str	ip, [sp]
   214d4:	bl	15e50 <ReadCompressedUInt16Data>
   214d8:	ldr	lr, [r8]
   214dc:	mov	r2, r7
   214e0:	mov	r1, r6
   214e4:	ldr	r3, [sp, #124]	; 0x7c
   214e8:	ldr	r0, [sp, #16]
   214ec:	sub	ip, lr, #1
   214f0:	add	r4, r4, lr, lsl #1
   214f4:	ldr	lr, [fp]
   214f8:	ldr	r3, [r3]
   214fc:	sub	r3, r3, #1
   21500:	add	r3, r3, r0
   21504:	mov	r0, r5
   21508:	mls	r3, lr, ip, r3
   2150c:	ldr	ip, [sl]
   21510:	sub	r3, r3, ip
   21514:	bl	235c <InflateSkipData>
   21518:	ldr	r3, [r8, #4]
   2151c:	cmp	r3, r9
   21520:	bgt	214a4 <ReadCompressedDataSlab2+0x13b0>
   21524:	b	20208 <ReadCompressedDataSlab2+0x114>
   21528:	ldr	r3, [sp, #124]	; 0x7c
   2152c:	ldr	ip, [r8]
   21530:	ldr	r3, [r3]
   21534:	cmp	ip, r3
   21538:	beq	217f4 <ReadCompressedDataSlab2+0x1700>
   2153c:	ldr	r3, [r8, #4]
   21540:	cmp	r3, #0
   21544:	ble	20208 <ReadCompressedDataSlab2+0x114>
   21548:	ldrd	sl, [sp, #128]	; 0x80
   2154c:	mov	r9, #0
   21550:	mov	r2, r7
   21554:	mov	r1, r6
   21558:	mov	r0, r5
   2155c:	ldr	r3, [sl]
   21560:	add	r9, r9, #1
   21564:	bl	235c <InflateSkipData>
   21568:	ldr	ip, [r8]
   2156c:	mov	r2, r4
   21570:	mov	r3, r7
   21574:	mov	r1, r6
   21578:	mov	r0, r5
   2157c:	str	ip, [sp]
   21580:	bl	169c8 <ReadCompressedUInt8Data>
   21584:	ldr	lr, [r8]
   21588:	mov	r2, r7
   2158c:	mov	r1, r6
   21590:	ldr	r3, [sp, #124]	; 0x7c
   21594:	ldr	r0, [sp, #16]
   21598:	sub	ip, lr, #1
   2159c:	add	r4, r4, lr
   215a0:	ldr	lr, [fp]
   215a4:	ldr	r3, [r3]
   215a8:	sub	r3, r3, #1
   215ac:	add	r3, r3, r0
   215b0:	mov	r0, r5
   215b4:	mls	r3, lr, ip, r3
   215b8:	ldr	ip, [sl]
   215bc:	sub	r3, r3, ip
   215c0:	bl	235c <InflateSkipData>
   215c4:	ldr	r3, [r8, #4]
   215c8:	cmp	r3, r9
   215cc:	bgt	21550 <ReadCompressedDataSlab2+0x145c>
   215d0:	b	20208 <ReadCompressedDataSlab2+0x114>
   215d4:	ldr	r3, [sp, #124]	; 0x7c
   215d8:	ldr	ip, [r8]
   215dc:	ldr	r3, [r3]
   215e0:	cmp	ip, r3
   215e4:	beq	218c4 <ReadCompressedDataSlab2+0x17d0>
   215e8:	ldr	r3, [r8, #4]
   215ec:	cmp	r3, #0
   215f0:	ble	20208 <ReadCompressedDataSlab2+0x114>
   215f4:	ldrd	sl, [sp, #128]	; 0x80
   215f8:	mov	r9, #0
   215fc:	mov	r2, r7
   21600:	mov	r1, r6
   21604:	mov	r0, r5
   21608:	ldr	r3, [sl]
   2160c:	add	r9, r9, #1
   21610:	bl	235c <InflateSkipData>
   21614:	ldr	ip, [r8]
   21618:	mov	r2, r4
   2161c:	mov	r3, r7
   21620:	mov	r1, r6
   21624:	mov	r0, r5
   21628:	str	ip, [sp]
   2162c:	bl	15378 <ReadCompressedUInt32Data>
   21630:	ldr	lr, [r8]
   21634:	mov	r2, r7
   21638:	mov	r1, r6
   2163c:	ldr	r3, [sp, #124]	; 0x7c
   21640:	ldr	r0, [sp, #16]
   21644:	sub	ip, lr, #1
   21648:	add	r4, r4, lr, lsl #2
   2164c:	ldr	lr, [fp]
   21650:	ldr	r3, [r3]
   21654:	sub	r3, r3, #1
   21658:	add	r3, r3, r0
   2165c:	mov	r0, r5
   21660:	mls	r3, lr, ip, r3
   21664:	ldr	ip, [sl]
   21668:	sub	r3, r3, ip
   2166c:	bl	235c <InflateSkipData>
   21670:	ldr	r3, [r8, #4]
   21674:	cmp	r3, r9
   21678:	bgt	215fc <ReadCompressedDataSlab2+0x1508>
   2167c:	b	20208 <ReadCompressedDataSlab2+0x114>
   21680:	ldr	r2, [sp, #124]	; 0x7c
   21684:	ldm	r8, {r3, ip}
   21688:	ldr	r2, [r2]
   2168c:	cmp	r3, r2
   21690:	beq	2175c <ReadCompressedDataSlab2+0x1668>
   21694:	cmp	ip, #0
   21698:	ble	20208 <ReadCompressedDataSlab2+0x114>
   2169c:	ldrd	sl, [sp, #128]	; 0x80
   216a0:	mov	r9, #0
   216a4:	mov	r2, r7
   216a8:	mov	r1, r6
   216ac:	mov	r0, r5
   216b0:	ldr	r3, [sl]
   216b4:	add	r9, r9, #1
   216b8:	bl	235c <InflateSkipData>
   216bc:	ldr	ip, [r8]
   216c0:	mov	r2, r4
   216c4:	mov	r3, r7
   216c8:	mov	r1, r6
   216cc:	mov	r0, r5
   216d0:	str	ip, [sp]
   216d4:	bl	14874 <ReadCompressedUInt64Data>
   216d8:	ldr	lr, [r8]
   216dc:	mov	r2, r7
   216e0:	mov	r1, r6
   216e4:	ldr	r3, [sp, #124]	; 0x7c
   216e8:	ldr	r0, [sp, #16]
   216ec:	sub	ip, lr, #1
   216f0:	add	r4, r4, lr, lsl #3
   216f4:	ldr	lr, [fp]
   216f8:	ldr	r3, [r3]
   216fc:	sub	r3, r3, #1
   21700:	add	r3, r3, r0
   21704:	mov	r0, r5
   21708:	mls	r3, lr, ip, r3
   2170c:	ldr	ip, [sl]
   21710:	sub	r3, r3, ip
   21714:	bl	235c <InflateSkipData>
   21718:	ldr	r3, [r8, #4]
   2171c:	cmp	r3, r9
   21720:	bgt	216a4 <ReadCompressedDataSlab2+0x15b0>
   21724:	b	20208 <ReadCompressedDataSlab2+0x114>
   21728:	ldr	r3, [sp, #132]	; 0x84
   2172c:	ldr	r3, [r3, #4]
   21730:	cmp	r3, #1
   21734:	bne	21088 <ReadCompressedDataSlab2+0xf94>
   21738:	ldr	lr, [r8, #4]
   2173c:	mov	r3, r7
   21740:	mov	r2, r4
   21744:	mov	r0, r5
   21748:	mov	r1, r6
   2174c:	mul	ip, lr, ip
   21750:	str	ip, [sp]
   21754:	bl	163c4 <ReadCompressedInt8Data>
   21758:	b	20208 <ReadCompressedDataSlab2+0x114>
   2175c:	ldr	r2, [sp, #132]	; 0x84
   21760:	ldr	r2, [r2, #4]
   21764:	cmp	r2, #1
   21768:	bne	21694 <ReadCompressedDataSlab2+0x15a0>
   2176c:	mul	ip, r3, ip
   21770:	mov	r2, r4
   21774:	mov	r3, r7
   21778:	mov	r0, r5
   2177c:	mov	r1, r6
   21780:	str	ip, [sp]
   21784:	bl	14874 <ReadCompressedUInt64Data>
   21788:	b	20208 <ReadCompressedDataSlab2+0x114>
   2178c:	ldr	r3, [sp, #132]	; 0x84
   21790:	ldr	r3, [r3, #4]
   21794:	cmp	r3, #1
   21798:	bne	21134 <ReadCompressedDataSlab2+0x1040>
   2179c:	ldr	lr, [r8, #4]
   217a0:	mov	r3, r7
   217a4:	mov	r2, r4
   217a8:	mov	r0, r5
   217ac:	mov	r1, r6
   217b0:	mul	ip, lr, ip
   217b4:	str	ip, [sp]
   217b8:	bl	13d20 <ReadCompressedSingleData>
   217bc:	b	20208 <ReadCompressedDataSlab2+0x114>
   217c0:	ldr	r3, [sp, #132]	; 0x84
   217c4:	ldr	r3, [r3, #4]
   217c8:	cmp	r3, #1
   217cc:	bne	2128c <ReadCompressedDataSlab2+0x1198>
   217d0:	ldr	lr, [r8, #4]
   217d4:	mov	r3, r7
   217d8:	mov	r2, r4
   217dc:	mov	r0, r5
   217e0:	mov	r1, r6
   217e4:	mul	ip, lr, ip
   217e8:	str	ip, [sp]
   217ec:	bl	158dc <ReadCompressedInt16Data>
   217f0:	b	20208 <ReadCompressedDataSlab2+0x114>
   217f4:	ldr	r3, [sp, #132]	; 0x84
   217f8:	ldr	r3, [r3, #4]
   217fc:	cmp	r3, #1
   21800:	bne	2153c <ReadCompressedDataSlab2+0x1448>
   21804:	ldr	lr, [r8, #4]
   21808:	mov	r3, r7
   2180c:	mov	r2, r4
   21810:	mov	r0, r5
   21814:	mov	r1, r6
   21818:	mul	ip, lr, ip
   2181c:	str	ip, [sp]
   21820:	bl	169c8 <ReadCompressedUInt8Data>
   21824:	b	20208 <ReadCompressedDataSlab2+0x114>
   21828:	ldr	r3, [sp, #132]	; 0x84
   2182c:	ldr	r3, [r3, #4]
   21830:	cmp	r3, #1
   21834:	bne	211e0 <ReadCompressedDataSlab2+0x10ec>
   21838:	ldr	lr, [r8, #4]
   2183c:	mov	r3, r7
   21840:	mov	r2, r4
   21844:	mov	r0, r5
   21848:	mov	r1, r6
   2184c:	mul	ip, lr, ip
   21850:	str	ip, [sp]
   21854:	bl	14e14 <ReadCompressedInt32Data>
   21858:	b	20208 <ReadCompressedDataSlab2+0x114>
   2185c:	ldr	r3, [sp, #132]	; 0x84
   21860:	ldr	r3, [r3, #4]
   21864:	cmp	r3, #1
   21868:	bne	21490 <ReadCompressedDataSlab2+0x139c>
   2186c:	ldr	lr, [r8, #4]
   21870:	mov	r3, r7
   21874:	mov	r2, r4
   21878:	mov	r0, r5
   2187c:	mov	r1, r6
   21880:	mul	ip, lr, ip
   21884:	str	ip, [sp]
   21888:	bl	15e50 <ReadCompressedUInt16Data>
   2188c:	b	20208 <ReadCompressedDataSlab2+0x114>
   21890:	ldr	r3, [sp, #132]	; 0x84
   21894:	ldr	r3, [r3, #4]
   21898:	cmp	r3, #1
   2189c:	bne	21338 <ReadCompressedDataSlab2+0x1244>
   218a0:	ldr	lr, [r8, #4]
   218a4:	mov	r3, r7
   218a8:	mov	r2, r4
   218ac:	mov	r0, r5
   218b0:	mov	r1, r6
   218b4:	mul	ip, lr, ip
   218b8:	str	ip, [sp]
   218bc:	bl	142d4 <ReadCompressedInt64Data>
   218c0:	b	20208 <ReadCompressedDataSlab2+0x114>
   218c4:	ldr	r3, [sp, #132]	; 0x84
   218c8:	ldr	r3, [r3, #4]
   218cc:	cmp	r3, #1
   218d0:	bne	215e8 <ReadCompressedDataSlab2+0x14f4>
   218d4:	ldr	lr, [r8, #4]
   218d8:	mov	r3, r7
   218dc:	mov	r2, r4
   218e0:	mov	r0, r5
   218e4:	mov	r1, r6
   218e8:	mul	ip, lr, ip
   218ec:	str	ip, [sp]
   218f0:	bl	15378 <ReadCompressedUInt32Data>
   218f4:	b	20208 <ReadCompressedDataSlab2+0x114>

000218f8 <WriteData>:
   218f8:	mov	ip, #0
   218fc:	strd	r4, [sp, #-20]!	; 0xffffffec
   21900:	subs	r4, r0, #0
   21904:	strd	r6, [sp, #8]
   21908:	moveq	r0, r4
   2190c:	str	lr, [sp, #16]
   21910:	sub	sp, sp, #20
   21914:	str	r3, [sp, #4]
   21918:	str	ip, [sp, #12]
   2191c:	beq	21984 <WriteData+0x8c>
   21920:	ldr	ip, [r4]
   21924:	cmp	ip, #0
   21928:	moveq	r0, ip
   2192c:	beq	21984 <WriteData+0x8c>
   21930:	mov	r0, r3
   21934:	mov	r5, r2
   21938:	mov	r6, r1
   2193c:	bl	1598 <Mat_SizeOf@plt>
   21940:	mov	r7, r0
   21944:	mov	r1, #4
   21948:	ldr	r3, [r4]
   2194c:	mov	r2, #1
   21950:	add	r0, sp, r1
   21954:	mul	ip, r5, r7
   21958:	str	ip, [sp, #12]
   2195c:	bl	1514 <fwrite@plt>
   21960:	mov	r2, #1
   21964:	mov	r1, #4
   21968:	ldr	r3, [r4]
   2196c:	add	r0, sp, #12
   21970:	bl	1514 <fwrite@plt>
   21974:	cmp	r6, #0
   21978:	cmpne	r5, #0
   2197c:	bgt	21998 <WriteData+0xa0>
   21980:	ldr	r0, [sp, #12]
   21984:	add	sp, sp, #20
   21988:	ldrd	r4, [sp]
   2198c:	ldrd	r6, [sp, #8]
   21990:	add	sp, sp, #16
   21994:	pop	{pc}		; (ldr pc, [sp], #4)
   21998:	mov	r2, r5
   2199c:	mov	r1, r7
   219a0:	ldr	r3, [r4]
   219a4:	mov	r0, r6
   219a8:	bl	1514 <fwrite@plt>
   219ac:	b	21980 <WriteData+0x88>

000219b0 <Mat_VarReadNumeric5>:
   219b0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   219b4:	mov	r5, r1
   219b8:	strd	r6, [sp, #8]
   219bc:	mov	r7, r3
   219c0:	mov	r6, r0
   219c4:	strd	r8, [sp, #16]
   219c8:	mov	r8, r2
   219cc:	ldr	r2, [r1, #48]	; 0x30
   219d0:	str	lr, [sp, #24]
   219d4:	sub	sp, sp, #20
   219d8:	cmp	r2, #1
   219dc:	beq	21ad8 <Mat_VarReadNumeric5+0x128>
   219e0:	add	r4, sp, #8
   219e4:	mov	r2, #1
   219e8:	ldr	r3, [r6]
   219ec:	mov	r0, r4
   219f0:	mov	r1, #4
   219f4:	bl	1520 <fread@plt>
   219f8:	ldr	r3, [r6, #20]
   219fc:	cmp	r3, #0
   21a00:	bne	21acc <Mat_VarReadNumeric5+0x11c>
   21a04:	ldr	r0, [sp, #8]
   21a08:	lsr	r3, r0, #16
   21a0c:	uxtb	r4, r0
   21a10:	cmp	r4, #25
   21a14:	lsl	r3, r3, #16
   21a18:	movcs	r4, #0
   21a1c:	cmp	r3, #0
   21a20:	beq	21a94 <Mat_VarReadNumeric5+0xe4>
   21a24:	lsr	r0, r0, #16
   21a28:	mov	r9, #1
   21a2c:	ldr	r3, [r5, #48]	; 0x30
   21a30:	cmp	r3, #0
   21a34:	beq	21a58 <Mat_VarReadNumeric5+0xa8>
   21a38:	cmp	r3, #1
   21a3c:	beq	21ba0 <Mat_VarReadNumeric5+0x1f0>
   21a40:	add	sp, sp, #20
   21a44:	ldrd	r4, [sp]
   21a48:	ldrd	r6, [sp, #8]
   21a4c:	ldrd	r8, [sp, #16]
   21a50:	add	sp, sp, #24
   21a54:	pop	{pc}		; (ldr pc, [sp], #4)
   21a58:	ldr	r3, [r5, #16]
   21a5c:	sub	r3, r3, #6
   21a60:	cmp	r3, #9
   21a64:	addls	pc, pc, r3, lsl #2
   21a68:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21a6c:	b	21b50 <Mat_VarReadNumeric5+0x1a0>
   21a70:	b	21c8c <Mat_VarReadNumeric5+0x2dc>
   21a74:	b	21c2c <Mat_VarReadNumeric5+0x27c>
   21a78:	b	21c44 <Mat_VarReadNumeric5+0x294>
   21a7c:	b	21c5c <Mat_VarReadNumeric5+0x2ac>
   21a80:	b	21c74 <Mat_VarReadNumeric5+0x2c4>
   21a84:	b	21ca4 <Mat_VarReadNumeric5+0x2f4>
   21a88:	b	21cbc <Mat_VarReadNumeric5+0x30c>
   21a8c:	b	21cd4 <Mat_VarReadNumeric5+0x324>
   21a90:	b	21cec <Mat_VarReadNumeric5+0x33c>
   21a94:	add	r9, sp, #12
   21a98:	mov	r2, #1
   21a9c:	ldr	r3, [r6]
   21aa0:	mov	r0, r9
   21aa4:	mov	r1, #4
   21aa8:	bl	1520 <fread@plt>
   21aac:	ldr	r3, [r6, #20]
   21ab0:	cmp	r3, #0
   21ab4:	bne	21b44 <Mat_VarReadNumeric5+0x194>
   21ab8:	ldr	r0, [sp, #12]
   21abc:	cmp	r0, #0
   21ac0:	bne	21e24 <Mat_VarReadNumeric5+0x474>
   21ac4:	str	r0, [r5]
   21ac8:	b	21a40 <Mat_VarReadNumeric5+0x90>
   21acc:	mov	r0, r4
   21ad0:	bl	18f8 <Mat_uint32Swap>
   21ad4:	b	21a04 <Mat_VarReadNumeric5+0x54>
   21ad8:	ldr	r1, [r1, #52]	; 0x34
   21adc:	mov	r3, #0
   21ae0:	add	r4, sp, #8
   21ae4:	mov	r2, r4
   21ae8:	ldr	r1, [r1, #12]
   21aec:	str	r3, [r1, #4]
   21af0:	bl	2f74 <InflateDataType>
   21af4:	ldr	r3, [r6, #20]
   21af8:	cmp	r3, #0
   21afc:	bne	21b94 <Mat_VarReadNumeric5+0x1e4>
   21b00:	ldr	r0, [sp, #8]
   21b04:	lsr	r3, r0, #16
   21b08:	uxtb	r4, r0
   21b0c:	cmp	r4, #25
   21b10:	lsl	r3, r3, #16
   21b14:	movcs	r4, #0
   21b18:	cmp	r3, #0
   21b1c:	bne	21a24 <Mat_VarReadNumeric5+0x74>
   21b20:	ldr	r3, [r5, #52]	; 0x34
   21b24:	add	r9, sp, #12
   21b28:	mov	r0, r6
   21b2c:	mov	r2, r9
   21b30:	ldr	r1, [r3, #12]
   21b34:	bl	2f74 <InflateDataType>
   21b38:	ldr	r3, [r6, #20]
   21b3c:	cmp	r3, #0
   21b40:	beq	21ab8 <Mat_VarReadNumeric5+0x108>
   21b44:	mov	r0, r9
   21b48:	bl	18f8 <Mat_uint32Swap>
   21b4c:	b	21ab8 <Mat_VarReadNumeric5+0x108>
   21b50:	mov	r3, r7
   21b54:	mov	r2, r4
   21b58:	mov	r1, r8
   21b5c:	mov	r0, r6
   21b60:	bl	126c8 <ReadDoubleData>
   21b64:	cmp	r9, #0
   21b68:	addne	r0, r0, #4
   21b6c:	ands	r1, r0, #7
   21b70:	beq	21a40 <Mat_VarReadNumeric5+0x90>
   21b74:	rsbs	r3, r0, #0
   21b78:	mov	r2, #1
   21b7c:	ldr	r0, [r6]
   21b80:	and	r3, r3, #7
   21b84:	rsbpl	r1, r3, #0
   21b88:	rsb	r1, r1, #8
   21b8c:	bl	1694 <fseek@plt>
   21b90:	b	21a40 <Mat_VarReadNumeric5+0x90>
   21b94:	mov	r0, r4
   21b98:	bl	18f8 <Mat_uint32Swap>
   21b9c:	b	21b00 <Mat_VarReadNumeric5+0x150>
   21ba0:	ldr	r3, [r5, #16]
   21ba4:	sub	r3, r3, #6
   21ba8:	cmp	r3, #9
   21bac:	addls	pc, pc, r3, lsl #2
   21bb0:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21bb4:	b	21bdc <Mat_VarReadNumeric5+0x22c>
   21bb8:	b	21e04 <Mat_VarReadNumeric5+0x454>
   21bbc:	b	21de4 <Mat_VarReadNumeric5+0x434>
   21bc0:	b	21dc4 <Mat_VarReadNumeric5+0x414>
   21bc4:	b	21da4 <Mat_VarReadNumeric5+0x3f4>
   21bc8:	b	21d84 <Mat_VarReadNumeric5+0x3d4>
   21bcc:	b	21d64 <Mat_VarReadNumeric5+0x3b4>
   21bd0:	b	21d44 <Mat_VarReadNumeric5+0x394>
   21bd4:	b	21d24 <Mat_VarReadNumeric5+0x374>
   21bd8:	b	21d04 <Mat_VarReadNumeric5+0x354>
   21bdc:	ldr	r1, [r5, #52]	; 0x34
   21be0:	mov	r3, r4
   21be4:	mov	r2, r8
   21be8:	mov	r0, r6
   21bec:	ldr	r1, [r1, #12]
   21bf0:	str	r7, [sp]
   21bf4:	bl	126ec <ReadCompressedDoubleData>
   21bf8:	cmp	r9, #0
   21bfc:	addne	r0, r0, #4
   21c00:	ands	r2, r0, #7
   21c04:	beq	21a40 <Mat_VarReadNumeric5+0x90>
   21c08:	ldr	r1, [r5, #52]	; 0x34
   21c0c:	rsbs	r3, r0, #0
   21c10:	mov	r0, r6
   21c14:	and	r3, r3, #7
   21c18:	rsbpl	r2, r3, #0
   21c1c:	rsb	r2, r2, #8
   21c20:	ldr	r1, [r1, #12]
   21c24:	bl	1f90 <InflateSkip>
   21c28:	b	21a40 <Mat_VarReadNumeric5+0x90>
   21c2c:	mov	r3, r7
   21c30:	mov	r2, r4
   21c34:	mov	r1, r8
   21c38:	mov	r0, r6
   21c3c:	bl	163a0 <ReadInt8Data>
   21c40:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21c44:	mov	r3, r7
   21c48:	mov	r2, r4
   21c4c:	mov	r1, r8
   21c50:	mov	r0, r6
   21c54:	bl	169a4 <ReadUInt8Data>
   21c58:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21c5c:	mov	r3, r7
   21c60:	mov	r2, r4
   21c64:	mov	r1, r8
   21c68:	mov	r0, r6
   21c6c:	bl	158b8 <ReadInt16Data>
   21c70:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21c74:	mov	r3, r7
   21c78:	mov	r2, r4
   21c7c:	mov	r1, r8
   21c80:	mov	r0, r6
   21c84:	bl	15e2c <ReadUInt16Data>
   21c88:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21c8c:	mov	r3, r7
   21c90:	mov	r2, r4
   21c94:	mov	r1, r8
   21c98:	mov	r0, r6
   21c9c:	bl	13cfc <ReadSingleData>
   21ca0:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21ca4:	mov	r3, r7
   21ca8:	mov	r2, r4
   21cac:	mov	r1, r8
   21cb0:	mov	r0, r6
   21cb4:	bl	14df0 <ReadInt32Data>
   21cb8:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21cbc:	mov	r3, r7
   21cc0:	mov	r2, r4
   21cc4:	mov	r1, r8
   21cc8:	mov	r0, r6
   21ccc:	bl	15354 <ReadUInt32Data>
   21cd0:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21cd4:	mov	r3, r7
   21cd8:	mov	r2, r4
   21cdc:	mov	r1, r8
   21ce0:	mov	r0, r6
   21ce4:	bl	142b0 <ReadInt64Data>
   21ce8:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21cec:	mov	r3, r7
   21cf0:	mov	r2, r4
   21cf4:	mov	r1, r8
   21cf8:	mov	r0, r6
   21cfc:	bl	14850 <ReadUInt64Data>
   21d00:	b	21b64 <Mat_VarReadNumeric5+0x1b4>
   21d04:	ldr	r1, [r5, #52]	; 0x34
   21d08:	mov	r3, r4
   21d0c:	mov	r2, r8
   21d10:	mov	r0, r6
   21d14:	ldr	r1, [r1, #12]
   21d18:	str	r7, [sp]
   21d1c:	bl	14874 <ReadCompressedUInt64Data>
   21d20:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21d24:	ldr	r1, [r5, #52]	; 0x34
   21d28:	mov	r3, r4
   21d2c:	mov	r2, r8
   21d30:	mov	r0, r6
   21d34:	ldr	r1, [r1, #12]
   21d38:	str	r7, [sp]
   21d3c:	bl	142d4 <ReadCompressedInt64Data>
   21d40:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21d44:	ldr	r1, [r5, #52]	; 0x34
   21d48:	mov	r3, r4
   21d4c:	mov	r2, r8
   21d50:	mov	r0, r6
   21d54:	ldr	r1, [r1, #12]
   21d58:	str	r7, [sp]
   21d5c:	bl	15378 <ReadCompressedUInt32Data>
   21d60:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21d64:	ldr	r1, [r5, #52]	; 0x34
   21d68:	mov	r3, r4
   21d6c:	mov	r2, r8
   21d70:	mov	r0, r6
   21d74:	ldr	r1, [r1, #12]
   21d78:	str	r7, [sp]
   21d7c:	bl	14e14 <ReadCompressedInt32Data>
   21d80:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21d84:	ldr	r1, [r5, #52]	; 0x34
   21d88:	mov	r3, r4
   21d8c:	mov	r2, r8
   21d90:	mov	r0, r6
   21d94:	ldr	r1, [r1, #12]
   21d98:	str	r7, [sp]
   21d9c:	bl	15e50 <ReadCompressedUInt16Data>
   21da0:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21da4:	ldr	r1, [r5, #52]	; 0x34
   21da8:	mov	r3, r4
   21dac:	mov	r2, r8
   21db0:	mov	r0, r6
   21db4:	ldr	r1, [r1, #12]
   21db8:	str	r7, [sp]
   21dbc:	bl	158dc <ReadCompressedInt16Data>
   21dc0:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21dc4:	ldr	r1, [r5, #52]	; 0x34
   21dc8:	mov	r3, r4
   21dcc:	mov	r2, r8
   21dd0:	mov	r0, r6
   21dd4:	ldr	r1, [r1, #12]
   21dd8:	str	r7, [sp]
   21ddc:	bl	169c8 <ReadCompressedUInt8Data>
   21de0:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21de4:	ldr	r1, [r5, #52]	; 0x34
   21de8:	mov	r3, r4
   21dec:	mov	r2, r8
   21df0:	mov	r0, r6
   21df4:	ldr	r1, [r1, #12]
   21df8:	str	r7, [sp]
   21dfc:	bl	163c4 <ReadCompressedInt8Data>
   21e00:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21e04:	ldr	r1, [r5, #52]	; 0x34
   21e08:	mov	r3, r4
   21e0c:	mov	r2, r8
   21e10:	mov	r0, r6
   21e14:	ldr	r1, [r1, #12]
   21e18:	str	r7, [sp]
   21e1c:	bl	13d20 <ReadCompressedSingleData>
   21e20:	b	21bf8 <Mat_VarReadNumeric5+0x248>
   21e24:	mov	r9, #0
   21e28:	b	21a2c <Mat_VarReadNumeric5+0x7c>

00021e2c <GetDataSlab>:
   21e2c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   21e30:	cmp	r2, #6
   21e34:	cmpeq	r3, #9
   21e38:	mov	ip, r2
   21e3c:	strd	r6, [sp, #8]
   21e40:	strd	r8, [sp, #16]
   21e44:	strd	sl, [sp, #24]
   21e48:	str	lr, [sp, #32]
   21e4c:	sub	sp, sp, #180	; 0xb4
   21e50:	mov	lr, r3
   21e54:	ldrd	r8, [sp, #216]	; 0xd8
   21e58:	str	r1, [sp, #4]
   21e5c:	str	r0, [sp, #8]
   21e60:	ldr	sl, [sp, #224]	; 0xe0
   21e64:	beq	21e74 <GetDataSlab+0x48>
   21e68:	cmp	r2, #7
   21e6c:	cmpeq	r3, #7
   21e70:	bne	21f0c <GetDataSlab+0xe0>
   21e74:	mov	r4, #1
   21e78:	ldr	r3, [sp, #232]	; 0xe8
   21e7c:	cmp	r3, #2
   21e80:	beq	21f74 <GetDataSlab+0x148>
   21e84:	mov	r2, #0
   21e88:	mov	r3, #0
   21e8c:	add	r4, sp, #136	; 0x88
   21e90:	add	r0, sp, #56	; 0x38
   21e94:	sub	ip, ip, #6
   21e98:	strd	r2, [r0, #8]
   21e9c:	strd	r2, [r4, #8]
   21ea0:	str	r4, [sp, #12]
   21ea4:	strd	r2, [r0, #16]
   21ea8:	strd	r2, [r4, #16]
   21eac:	strd	r2, [r0, #24]
   21eb0:	strd	r2, [r4, #24]
   21eb4:	strd	r2, [r0, #32]
   21eb8:	strd	r2, [r4, #32]
   21ebc:	strd	r2, [sp, #56]	; 0x38
   21ec0:	strd	r2, [sp, #96]	; 0x60
   21ec4:	strd	r2, [sp, #104]	; 0x68
   21ec8:	strd	r2, [sp, #112]	; 0x70
   21ecc:	strd	r2, [sp, #120]	; 0x78
   21ed0:	strd	r2, [sp, #128]	; 0x80
   21ed4:	strd	r2, [sp, #136]	; 0x88
   21ed8:	cmp	ip, #9
   21edc:	addls	pc, pc, ip, lsl #2
   21ee0:	b	2200c <GetDataSlab+0x1e0>
   21ee4:	b	22098 <GetDataSlab+0x26c>
   21ee8:	b	22030 <GetDataSlab+0x204>
   21eec:	b	22064 <GetDataSlab+0x238>
   21ef0:	b	22168 <GetDataSlab+0x33c>
   21ef4:	b	2219c <GetDataSlab+0x370>
   21ef8:	b	221d0 <GetDataSlab+0x3a4>
   21efc:	b	22204 <GetDataSlab+0x3d8>
   21f00:	b	22100 <GetDataSlab+0x2d4>
   21f04:	b	22134 <GetDataSlab+0x308>
   21f08:	b	220cc <GetDataSlab+0x2a0>
   21f0c:	cmp	r2, #10
   21f10:	cmpeq	r3, #3
   21f14:	beq	21e74 <GetDataSlab+0x48>
   21f18:	cmp	r2, #12
   21f1c:	cmpeq	r3, #5
   21f20:	beq	21e74 <GetDataSlab+0x48>
   21f24:	cmp	r2, #14
   21f28:	cmpeq	r3, #12
   21f2c:	beq	21e74 <GetDataSlab+0x48>
   21f30:	cmp	r2, #8
   21f34:	cmpeq	r3, #1
   21f38:	beq	21e74 <GetDataSlab+0x48>
   21f3c:	cmp	r2, #11
   21f40:	cmpeq	r3, #4
   21f44:	beq	21e74 <GetDataSlab+0x48>
   21f48:	cmp	r2, #13
   21f4c:	cmpeq	r3, #6
   21f50:	beq	21e74 <GetDataSlab+0x48>
   21f54:	cmp	r2, #15
   21f58:	cmpeq	r3, #13
   21f5c:	beq	21e74 <GetDataSlab+0x48>
   21f60:	cmp	r2, #9
   21f64:	cmpeq	r3, #2
   21f68:	moveq	r4, #1
   21f6c:	movne	r4, #0
   21f70:	b	21e78 <GetDataSlab+0x4c>
   21f74:	ldr	r3, [sp, #228]	; 0xe4
   21f78:	ldr	r0, [r9]
   21f7c:	ldr	r1, [sl]
   21f80:	ldr	fp, [r3]
   21f84:	ldr	r3, [r8]
   21f88:	sub	r2, fp, #1
   21f8c:	str	r3, [sp, #16]
   21f90:	add	r3, r0, #1
   21f94:	mla	r3, r1, r2, r3
   21f98:	ldr	r2, [sp, #16]
   21f9c:	cmp	r3, r2
   21fa0:	bhi	2200c <GetDataSlab+0x1e0>
   21fa4:	ldr	r3, [sp, #228]	; 0xe4
   21fa8:	ldr	r5, [r9, #4]
   21fac:	ldr	r2, [sl, #4]
   21fb0:	ldr	r6, [r3, #4]
   21fb4:	add	r7, r5, #1
   21fb8:	ldr	r9, [r8, #4]
   21fbc:	sub	r3, r6, #1
   21fc0:	mla	r3, r2, r3, r7
   21fc4:	cmp	r3, r9
   21fc8:	bhi	2200c <GetDataSlab+0x1e0>
   21fcc:	cmp	r1, #1
   21fd0:	beq	3461c <GetDataSlab+0x127f0>
   21fd4:	sub	r3, ip, #6
   21fd8:	cmp	r3, #9
   21fdc:	addls	pc, pc, r3, lsl #2
   21fe0:	b	2200c <GetDataSlab+0x1e0>
   21fe4:	b	22370 <GetDataSlab+0x544>
   21fe8:	b	2240c <GetDataSlab+0x5e0>
   21fec:	b	223a4 <GetDataSlab+0x578>
   21ff0:	b	223d8 <GetDataSlab+0x5ac>
   21ff4:	b	2233c <GetDataSlab+0x510>
   21ff8:	b	22308 <GetDataSlab+0x4dc>
   21ffc:	b	222a0 <GetDataSlab+0x474>
   22000:	b	222d4 <GetDataSlab+0x4a8>
   22004:	b	2226c <GetDataSlab+0x440>
   22008:	b	22238 <GetDataSlab+0x40c>
   2200c:	mov	r3, #1
   22010:	mov	r0, r3
   22014:	add	sp, sp, #180	; 0xb4
   22018:	ldrd	r4, [sp]
   2201c:	ldrd	r6, [sp, #8]
   22020:	ldrd	r8, [sp, #16]
   22024:	ldrd	sl, [sp, #24]
   22028:	add	sp, sp, #32
   2202c:	pop	{pc}		; (ldr pc, [sp], #4)
   22030:	sub	r3, lr, #1
   22034:	cmp	r3, #8
   22038:	addls	pc, pc, r3, lsl #2
   2203c:	b	2f088 <GetDataSlab+0xd25c>
   22040:	b	2bf7c <GetDataSlab+0xa150>
   22044:	b	2bd04 <GetDataSlab+0x9ed8>
   22048:	b	2ba54 <GetDataSlab+0x9c28>
   2204c:	b	2b7a4 <GetDataSlab+0x9978>
   22050:	b	2b4f4 <GetDataSlab+0x96c8>
   22054:	b	2b244 <GetDataSlab+0x9418>
   22058:	b	2af98 <GetDataSlab+0x916c>
   2205c:	b	2f088 <GetDataSlab+0xd25c>
   22060:	b	2ace8 <GetDataSlab+0x8ebc>
   22064:	sub	r3, lr, #1
   22068:	cmp	r3, #8
   2206c:	addls	pc, pc, r3, lsl #2
   22070:	b	2f350 <GetDataSlab+0xd524>
   22074:	b	2aa90 <GetDataSlab+0x8c64>
   22078:	b	2a838 <GetDataSlab+0x8a0c>
   2207c:	b	2a5dc <GetDataSlab+0x87b0>
   22080:	b	2a380 <GetDataSlab+0x8554>
   22084:	b	2a124 <GetDataSlab+0x82f8>
   22088:	b	29ec8 <GetDataSlab+0x809c>
   2208c:	b	29c64 <GetDataSlab+0x7e38>
   22090:	b	2f350 <GetDataSlab+0xd524>
   22094:	b	29a00 <GetDataSlab+0x7bd4>
   22098:	sub	r3, lr, #1
   2209c:	cmp	r3, #8
   220a0:	addls	pc, pc, r3, lsl #2
   220a4:	b	2f5bc <GetDataSlab+0xd790>
   220a8:	b	29788 <GetDataSlab+0x795c>
   220ac:	b	29510 <GetDataSlab+0x76e4>
   220b0:	b	29260 <GetDataSlab+0x7434>
   220b4:	b	28fb0 <GetDataSlab+0x7184>
   220b8:	b	28d00 <GetDataSlab+0x6ed4>
   220bc:	b	28a50 <GetDataSlab+0x6c24>
   220c0:	b	287a0 <GetDataSlab+0x6974>
   220c4:	b	2f5bc <GetDataSlab+0xd790>
   220c8:	b	284f4 <GetDataSlab+0x66c8>
   220cc:	sub	r3, lr, #1
   220d0:	cmp	r3, #8
   220d4:	addls	pc, pc, r3, lsl #2
   220d8:	b	2f884 <GetDataSlab+0xda58>
   220dc:	b	28280 <GetDataSlab+0x6454>
   220e0:	b	2800c <GetDataSlab+0x61e0>
   220e4:	b	27d60 <GetDataSlab+0x5f34>
   220e8:	b	27ab4 <GetDataSlab+0x5c88>
   220ec:	b	27804 <GetDataSlab+0x59d8>
   220f0:	b	27558 <GetDataSlab+0x572c>
   220f4:	b	272a0 <GetDataSlab+0x5474>
   220f8:	b	2f884 <GetDataSlab+0xda58>
   220fc:	b	26fe8 <GetDataSlab+0x51bc>
   22100:	sub	r3, lr, #1
   22104:	cmp	r3, #8
   22108:	addls	pc, pc, r3, lsl #2
   2210c:	b	2fb40 <GetDataSlab+0xdd14>
   22110:	b	26d90 <GetDataSlab+0x4f64>
   22114:	b	26b38 <GetDataSlab+0x4d0c>
   22118:	b	268dc <GetDataSlab+0x4ab0>
   2211c:	b	26680 <GetDataSlab+0x4854>
   22120:	b	26424 <GetDataSlab+0x45f8>
   22124:	b	261c8 <GetDataSlab+0x439c>
   22128:	b	25f68 <GetDataSlab+0x413c>
   2212c:	b	2fb40 <GetDataSlab+0xdd14>
   22130:	b	25d08 <GetDataSlab+0x3edc>
   22134:	sub	r3, lr, #1
   22138:	cmp	r3, #8
   2213c:	addls	pc, pc, r3, lsl #2
   22140:	b	2fdac <GetDataSlab+0xdf80>
   22144:	b	25a94 <GetDataSlab+0x3c68>
   22148:	b	25820 <GetDataSlab+0x39f4>
   2214c:	b	25574 <GetDataSlab+0x3748>
   22150:	b	252c8 <GetDataSlab+0x349c>
   22154:	b	25018 <GetDataSlab+0x31ec>
   22158:	b	24d6c <GetDataSlab+0x2f40>
   2215c:	b	24ab4 <GetDataSlab+0x2c88>
   22160:	b	2fdac <GetDataSlab+0xdf80>
   22164:	b	247fc <GetDataSlab+0x29d0>
   22168:	sub	r3, lr, #1
   2216c:	cmp	r3, #8
   22170:	addls	pc, pc, r3, lsl #2
   22174:	b	30068 <GetDataSlab+0xe23c>
   22178:	b	245a4 <GetDataSlab+0x2778>
   2217c:	b	2434c <GetDataSlab+0x2520>
   22180:	b	240f0 <GetDataSlab+0x22c4>
   22184:	b	23e94 <GetDataSlab+0x2068>
   22188:	b	23c38 <GetDataSlab+0x1e0c>
   2218c:	b	239dc <GetDataSlab+0x1bb0>
   22190:	b	23778 <GetDataSlab+0x194c>
   22194:	b	30068 <GetDataSlab+0xe23c>
   22198:	b	23514 <GetDataSlab+0x16e8>
   2219c:	sub	r3, lr, #1
   221a0:	cmp	r3, #8
   221a4:	addls	pc, pc, r3, lsl #2
   221a8:	b	302d4 <GetDataSlab+0xe4a8>
   221ac:	b	2e6a0 <GetDataSlab+0xc874>
   221b0:	b	2e430 <GetDataSlab+0xc604>
   221b4:	b	2e188 <GetDataSlab+0xc35c>
   221b8:	b	2dee0 <GetDataSlab+0xc0b4>
   221bc:	b	2dc38 <GetDataSlab+0xbe0c>
   221c0:	b	2d990 <GetDataSlab+0xbb64>
   221c4:	b	2d6dc <GetDataSlab+0xb8b0>
   221c8:	b	302d4 <GetDataSlab+0xe4a8>
   221cc:	b	2d428 <GetDataSlab+0xb5fc>
   221d0:	sub	r3, lr, #1
   221d4:	cmp	r3, #8
   221d8:	addls	pc, pc, r3, lsl #2
   221dc:	b	2edd0 <GetDataSlab+0xcfa4>
   221e0:	b	2d1b8 <GetDataSlab+0xb38c>
   221e4:	b	2cf48 <GetDataSlab+0xb11c>
   221e8:	b	2cca0 <GetDataSlab+0xae74>
   221ec:	b	2c9f8 <GetDataSlab+0xabcc>
   221f0:	b	2c750 <GetDataSlab+0xa924>
   221f4:	b	2c4a8 <GetDataSlab+0xa67c>
   221f8:	b	2c1f4 <GetDataSlab+0xa3c8>
   221fc:	b	2edd0 <GetDataSlab+0xcfa4>
   22200:	b	22b4c <GetDataSlab+0xd20>
   22204:	sub	r3, lr, #1
   22208:	cmp	r3, #8
   2220c:	addls	pc, pc, r3, lsl #2
   22210:	b	3058c <GetDataSlab+0xe760>
   22214:	b	228f4 <GetDataSlab+0xac8>
   22218:	b	2269c <GetDataSlab+0x870>
   2221c:	b	2305c <GetDataSlab+0x1230>
   22220:	b	22e00 <GetDataSlab+0xfd4>
   22224:	b	232b8 <GetDataSlab+0x148c>
   22228:	b	22440 <GetDataSlab+0x614>
   2222c:	b	2eb70 <GetDataSlab+0xcd44>
   22230:	b	3058c <GetDataSlab+0xe760>
   22234:	b	2e910 <GetDataSlab+0xcae4>
   22238:	sub	r3, lr, #1
   2223c:	cmp	r3, #8
   22240:	addls	pc, pc, r3, lsl #2
   22244:	b	331f8 <GetDataSlab+0x113cc>
   22248:	b	32218 <GetDataSlab+0x103ec>
   2224c:	b	321a4 <GetDataSlab+0x10378>
   22250:	b	32128 <GetDataSlab+0x102fc>
   22254:	b	320ac <GetDataSlab+0x10280>
   22258:	b	3202c <GetDataSlab+0x10200>
   2225c:	b	31fac <GetDataSlab+0x10180>
   22260:	b	31f1c <GetDataSlab+0x100f0>
   22264:	b	331f8 <GetDataSlab+0x113cc>
   22268:	b	30be8 <GetDataSlab+0xedbc>
   2226c:	sub	r3, lr, #1
   22270:	cmp	r3, #8
   22274:	addls	pc, pc, r3, lsl #2
   22278:	b	33318 <GetDataSlab+0x114ec>
   2227c:	b	31ea8 <GetDataSlab+0x1007c>
   22280:	b	31e34 <GetDataSlab+0x10008>
   22284:	b	31db8 <GetDataSlab+0xff8c>
   22288:	b	31d3c <GetDataSlab+0xff10>
   2228c:	b	31cbc <GetDataSlab+0xfe90>
   22290:	b	31c3c <GetDataSlab+0xfe10>
   22294:	b	31bac <GetDataSlab+0xfd80>
   22298:	b	33318 <GetDataSlab+0x114ec>
   2229c:	b	30d04 <GetDataSlab+0xeed8>
   222a0:	sub	r3, lr, #1
   222a4:	cmp	r3, #8
   222a8:	addls	pc, pc, r3, lsl #2
   222ac:	b	33284 <GetDataSlab+0x11458>
   222b0:	b	31b2c <GetDataSlab+0xfd00>
   222b4:	b	31aac <GetDataSlab+0xfc80>
   222b8:	b	31a24 <GetDataSlab+0xfbf8>
   222bc:	b	3199c <GetDataSlab+0xfb70>
   222c0:	b	31918 <GetDataSlab+0xfaec>
   222c4:	b	31894 <GetDataSlab+0xfa68>
   222c8:	b	31808 <GetDataSlab+0xf9dc>
   222cc:	b	33284 <GetDataSlab+0x11458>
   222d0:	b	30c78 <GetDataSlab+0xee4c>
   222d4:	sub	r3, lr, #1
   222d8:	cmp	r3, #8
   222dc:	addls	pc, pc, r3, lsl #2
   222e0:	b	333a4 <GetDataSlab+0x11578>
   222e4:	b	31788 <GetDataSlab+0xf95c>
   222e8:	b	31708 <GetDataSlab+0xf8dc>
   222ec:	b	31680 <GetDataSlab+0xf854>
   222f0:	b	315f8 <GetDataSlab+0xf7cc>
   222f4:	b	31574 <GetDataSlab+0xf748>
   222f8:	b	314f0 <GetDataSlab+0xf6c4>
   222fc:	b	31464 <GetDataSlab+0xf638>
   22300:	b	333a4 <GetDataSlab+0x11578>
   22304:	b	30d94 <GetDataSlab+0xef68>
   22308:	sub	r3, lr, #1
   2230c:	cmp	r3, #8
   22310:	addls	pc, pc, r3, lsl #2
   22314:	b	32fc4 <GetDataSlab+0x11198>
   22318:	b	32f5c <GetDataSlab+0x11130>
   2231c:	b	32ef4 <GetDataSlab+0x110c8>
   22320:	b	32e84 <GetDataSlab+0x11058>
   22324:	b	32e14 <GetDataSlab+0x10fe8>
   22328:	b	32da4 <GetDataSlab+0x10f78>
   2232c:	b	32d34 <GetDataSlab+0x10f08>
   22330:	b	32cb4 <GetDataSlab+0x10e88>
   22334:	b	32fc4 <GetDataSlab+0x11198>
   22338:	b	30ea0 <GetDataSlab+0xf074>
   2233c:	sub	r3, lr, #1
   22340:	cmp	r3, #8
   22344:	addls	pc, pc, r3, lsl #2
   22348:	b	330d8 <GetDataSlab+0x112ac>
   2234c:	b	32534 <GetDataSlab+0x10708>
   22350:	b	324cc <GetDataSlab+0x106a0>
   22354:	b	3245c <GetDataSlab+0x10630>
   22358:	b	323ec <GetDataSlab+0x105c0>
   2235c:	b	3237c <GetDataSlab+0x10550>
   22360:	b	3230c <GetDataSlab+0x104e0>
   22364:	b	3228c <GetDataSlab+0x10460>
   22368:	b	330d8 <GetDataSlab+0x112ac>
   2236c:	b	30e20 <GetDataSlab+0xeff4>
   22370:	sub	r3, lr, #1
   22374:	cmp	r3, #8
   22378:	addls	pc, pc, r3, lsl #2
   2237c:	b	33158 <GetDataSlab+0x1132c>
   22380:	b	32894 <GetDataSlab+0x10a68>
   22384:	b	3281c <GetDataSlab+0x109f0>
   22388:	b	3279c <GetDataSlab+0x10970>
   2238c:	b	3271c <GetDataSlab+0x108f0>
   22390:	b	3269c <GetDataSlab+0x10870>
   22394:	b	3261c <GetDataSlab+0x107f0>
   22398:	b	3259c <GetDataSlab+0x10770>
   2239c:	b	33158 <GetDataSlab+0x1132c>
   223a0:	b	30fb0 <GetDataSlab+0xf184>
   223a4:	sub	r3, lr, #1
   223a8:	cmp	r3, #8
   223ac:	addls	pc, pc, r3, lsl #2
   223b0:	b	33044 <GetDataSlab+0x11218>
   223b4:	b	32c34 <GetDataSlab+0x10e08>
   223b8:	b	32bb4 <GetDataSlab+0x10d88>
   223bc:	b	32b2c <GetDataSlab+0x10d00>
   223c0:	b	32aa4 <GetDataSlab+0x10c78>
   223c4:	b	32a20 <GetDataSlab+0x10bf4>
   223c8:	b	3299c <GetDataSlab+0x10b70>
   223cc:	b	3290c <GetDataSlab+0x10ae0>
   223d0:	b	33044 <GetDataSlab+0x11218>
   223d4:	b	30f20 <GetDataSlab+0xf0f4>
   223d8:	sub	r3, lr, #1
   223dc:	cmp	r3, #8
   223e0:	addls	pc, pc, r3, lsl #2
   223e4:	b	33438 <GetDataSlab+0x1160c>
   223e8:	b	313e4 <GetDataSlab+0xf5b8>
   223ec:	b	31364 <GetDataSlab+0xf538>
   223f0:	b	312dc <GetDataSlab+0xf4b0>
   223f4:	b	31254 <GetDataSlab+0xf428>
   223f8:	b	311d0 <GetDataSlab+0xf3a4>
   223fc:	b	3114c <GetDataSlab+0xf320>
   22400:	b	310bc <GetDataSlab+0xf290>
   22404:	b	33438 <GetDataSlab+0x1160c>
   22408:	b	3102c <GetDataSlab+0xf200>
   2240c:	sub	r3, lr, #1
   22410:	cmp	r3, #8
   22414:	addls	pc, pc, r3, lsl #2
   22418:	b	334cc <GetDataSlab+0x116a0>
   2241c:	b	30b70 <GetDataSlab+0xed44>
   22420:	b	30af8 <GetDataSlab+0xeccc>
   22424:	b	30a78 <GetDataSlab+0xec4c>
   22428:	b	309f8 <GetDataSlab+0xebcc>
   2242c:	b	30978 <GetDataSlab+0xeb4c>
   22430:	b	308f8 <GetDataSlab+0xeacc>
   22434:	b	3087c <GetDataSlab+0xea50>
   22438:	b	334cc <GetDataSlab+0x116a0>
   2243c:	b	307f8 <GetDataSlab+0xe9cc>
   22440:	ldr	r3, [sp, #232]	; 0xe8
   22444:	ldr	r6, [sl]
   22448:	cmp	r3, #1
   2244c:	ldr	r3, [r8]
   22450:	str	r3, [sp, #16]
   22454:	ldr	r3, [sp, #228]	; 0xe4
   22458:	ldr	fp, [r3]
   2245c:	sub	r3, r6, #1
   22460:	str	r3, [sp, #56]	; 0x38
   22464:	ldr	r3, [sp, #16]
   22468:	str	fp, [sp, #20]
   2246c:	str	r3, [sp, #136]	; 0x88
   22470:	ble	3fc74 <GetDataSlab+0x1de48>
   22474:	ldr	r3, [sp, #232]	; 0xe8
   22478:	add	r7, sl, #4
   2247c:	add	r5, sp, #60	; 0x3c
   22480:	mov	r4, r8
   22484:	mov	lr, #0
   22488:	str	r9, [sp, #32]
   2248c:	add	r3, sl, r3, lsl #2
   22490:	str	r3, [sp, #40]	; 0x28
   22494:	ldr	r3, [sp, #12]
   22498:	str	r3, [sp, #24]
   2249c:	ldr	r3, [sp, #228]	; 0xe4
   224a0:	str	r3, [sp, #28]
   224a4:	ldr	r3, [r7], #4
   224a8:	ldr	r0, [r4], #4
   224ac:	ldr	r2, [sp, #24]
   224b0:	sub	ip, r3, #1
   224b4:	mov	r1, r4
   224b8:	str	ip, [r5], #4
   224bc:	str	r2, [sp, #36]	; 0x24
   224c0:	mov	r3, r1
   224c4:	ldr	r2, [r1, #-4]!
   224c8:	ldr	r3, [r3]
   224cc:	cmp	r1, r8
   224d0:	mul	ip, r2, ip
   224d4:	mul	r0, r3, r0
   224d8:	bne	224c0 <GetDataSlab+0x694>
   224dc:	ldr	r3, [sp, #24]
   224e0:	str	ip, [r5, #-4]
   224e4:	str	r0, [r3, #4]!
   224e8:	str	r3, [sp, #24]
   224ec:	ldr	r0, [sp, #28]
   224f0:	ldr	r3, [sp, #40]	; 0x28
   224f4:	cmp	r7, r3
   224f8:	ldr	r3, [sp, #36]	; 0x24
   224fc:	ldr	r1, [r3]
   22500:	ldr	r3, [sp, #32]
   22504:	ldr	r2, [r3, #4]!
   22508:	mla	lr, r2, r1, lr
   2250c:	str	r3, [sp, #32]
   22510:	ldr	r3, [r0, #4]!
   22514:	ldr	r2, [sp, #20]
   22518:	str	r0, [sp, #28]
   2251c:	mul	r3, r3, r2
   22520:	str	r3, [sp, #20]
   22524:	bne	224a4 <GetDataSlab+0x678>
   22528:	ldr	r3, [sp, #8]
   2252c:	cmp	r6, #1
   22530:	add	r5, r3, lr, lsl #2
   22534:	ldr	r3, [sp, #20]
   22538:	beq	3b604 <GetDataSlab+0x197d8>
   2253c:	cmp	r3, #0
   22540:	ble	30874 <GetDataSlab+0xea48>
   22544:	ldr	r3, [r9]
   22548:	str	r3, [sp, #8]
   2254c:	mov	r3, #0
   22550:	str	r3, [sp, #24]
   22554:	ldr	r3, [sp, #8]
   22558:	cmp	r3, #0
   2255c:	beq	22568 <GetDataSlab+0x73c>
   22560:	add	r5, r5, r3, lsl #2
   22564:	add	lr, lr, r3
   22568:	cmp	fp, #0
   2256c:	ble	225b8 <GetDataSlab+0x78c>
   22570:	ldr	r3, [sp, #4]
   22574:	ldr	r2, [sp, #24]
   22578:	add	r2, r3, r2, lsl #2
   2257c:	mov	r3, #0
   22580:	ldr	r1, [r5]
   22584:	add	r3, r3, #1
   22588:	str	r1, [r2], #4
   2258c:	ldr	r1, [sp, #228]	; 0xe4
   22590:	ldr	r6, [sl]
   22594:	ldr	fp, [r1]
   22598:	add	r5, r5, r6, lsl #2
   2259c:	add	lr, lr, r6
   225a0:	cmp	fp, r3
   225a4:	bgt	22580 <GetDataSlab+0x754>
   225a8:	ldr	r3, [r9]
   225ac:	str	r3, [sp, #8]
   225b0:	ldr	r3, [r8]
   225b4:	str	r3, [sp, #16]
   225b8:	ldr	r2, [sp, #8]
   225bc:	ldr	r3, [sp, #16]
   225c0:	sub	r3, r3, r2
   225c4:	ldr	r2, [sp, #232]	; 0xe8
   225c8:	mls	r3, r6, fp, r3
   225cc:	cmp	r2, #1
   225d0:	add	lr, lr, r3
   225d4:	add	r5, r5, r3, lsl #2
   225d8:	ble	335b4 <GetDataSlab+0x11788>
   225dc:	ldr	r3, [sp, #100]	; 0x64
   225e0:	ldr	r2, [sp, #228]	; 0xe4
   225e4:	add	r3, r3, #1
   225e8:	ldr	r1, [r2, #4]
   225ec:	str	r3, [sp, #100]	; 0x64
   225f0:	sdiv	r2, r3, r1
   225f4:	mls	r3, r1, r2, r3
   225f8:	cmp	r3, #0
   225fc:	bne	3359c <GetDataSlab+0x11770>
   22600:	add	ip, sp, #100	; 0x64
   22604:	mov	r0, #1
   22608:	ldr	r4, [sp, #12]
   2260c:	ldr	r3, [sp, #228]	; 0xe4
   22610:	add	r7, r3, #4
   22614:	b	2265c <GetDataSlab+0x830>
   22618:	ldr	r3, [r4, #-4]
   2261c:	ldr	r1, [r9, r0, lsl #2]
   22620:	mla	r3, r1, r3, r2
   22624:	add	r5, r5, r3, lsl #2
   22628:	add	lr, lr, r3
   2262c:	ldr	r3, [sp, #232]	; 0xe8
   22630:	add	r0, r0, #1
   22634:	cmp	r3, r0
   22638:	beq	335b4 <GetDataSlab+0x11788>
   2263c:	ldr	r3, [ip]
   22640:	ldr	r1, [r7, #4]!
   22644:	add	r3, r3, #1
   22648:	sdiv	r2, r3, r1
   2264c:	str	r3, [ip]
   22650:	mls	r3, r1, r2, r3
   22654:	cmp	r3, #0
   22658:	bne	335a0 <GetDataSlab+0x11774>
   2265c:	ldr	r2, [r4, #4]!
   22660:	mov	r3, #0
   22664:	str	r3, [ip], #4
   22668:	sdiv	r3, lr, r2
   2266c:	mls	r3, r2, r3, lr
   22670:	cmp	r3, #0
   22674:	sub	r2, r2, r3
   22678:	bne	22618 <GetDataSlab+0x7ec>
   2267c:	ldr	r3, [r9, r0, lsl #2]
   22680:	cmp	r3, #0
   22684:	beq	2262c <GetDataSlab+0x800>
   22688:	ldr	r2, [r4, #-4]
   2268c:	mul	r3, r2, r3
   22690:	add	r5, r5, r3, lsl #2
   22694:	add	lr, lr, r3
   22698:	b	2262c <GetDataSlab+0x800>
   2269c:	ldr	r3, [sp, #232]	; 0xe8
   226a0:	ldr	r6, [sl]
   226a4:	cmp	r3, #1
   226a8:	ldr	r3, [r8]
   226ac:	str	r3, [sp, #16]
   226b0:	ldr	r3, [sp, #228]	; 0xe4
   226b4:	ldr	fp, [r3]
   226b8:	sub	r3, r6, #1
   226bc:	str	r3, [sp, #56]	; 0x38
   226c0:	ldr	r3, [sp, #16]
   226c4:	str	fp, [sp, #20]
   226c8:	str	r3, [sp, #136]	; 0x88
   226cc:	ble	3fc7c <GetDataSlab+0x1de50>
   226d0:	ldr	r3, [sp, #232]	; 0xe8
   226d4:	add	r7, sl, #4
   226d8:	add	r5, sp, #60	; 0x3c
   226dc:	mov	r4, r8
   226e0:	mov	lr, #0
   226e4:	str	r9, [sp, #32]
   226e8:	add	r3, sl, r3, lsl #2
   226ec:	str	r3, [sp, #40]	; 0x28
   226f0:	ldr	r3, [sp, #12]
   226f4:	str	r3, [sp, #24]
   226f8:	ldr	r3, [sp, #228]	; 0xe4
   226fc:	str	r3, [sp, #28]
   22700:	ldr	r3, [r7], #4
   22704:	ldr	r0, [r4], #4
   22708:	ldr	r2, [sp, #24]
   2270c:	sub	ip, r3, #1
   22710:	mov	r1, r4
   22714:	str	ip, [r5], #4
   22718:	str	r2, [sp, #36]	; 0x24
   2271c:	mov	r3, r1
   22720:	ldr	r2, [r1, #-4]!
   22724:	ldr	r3, [r3]
   22728:	cmp	r1, r8
   2272c:	mul	ip, r2, ip
   22730:	mul	r0, r3, r0
   22734:	bne	2271c <GetDataSlab+0x8f0>
   22738:	ldr	r3, [sp, #24]
   2273c:	str	ip, [r5, #-4]
   22740:	str	r0, [r3, #4]!
   22744:	str	r3, [sp, #24]
   22748:	ldr	r0, [sp, #28]
   2274c:	ldr	r3, [sp, #40]	; 0x28
   22750:	cmp	r7, r3
   22754:	ldr	r3, [sp, #36]	; 0x24
   22758:	ldr	r1, [r3]
   2275c:	ldr	r3, [sp, #32]
   22760:	ldr	r2, [r3, #4]!
   22764:	mla	lr, r2, r1, lr
   22768:	str	r3, [sp, #32]
   2276c:	ldr	r3, [r0, #4]!
   22770:	ldr	r2, [sp, #20]
   22774:	str	r0, [sp, #28]
   22778:	mul	r3, r3, r2
   2277c:	str	r3, [sp, #20]
   22780:	bne	22700 <GetDataSlab+0x8d4>
   22784:	ldr	r3, [sp, #8]
   22788:	cmp	r6, #1
   2278c:	add	r5, r3, lr
   22790:	ldr	r3, [sp, #20]
   22794:	beq	3d7f8 <GetDataSlab+0x1b9cc>
   22798:	cmp	r3, #0
   2279c:	ble	30874 <GetDataSlab+0xea48>
   227a0:	ldr	r3, [r9]
   227a4:	str	r3, [sp, #8]
   227a8:	mov	r3, #0
   227ac:	str	r3, [sp, #24]
   227b0:	ldr	r3, [sp, #8]
   227b4:	cmp	r3, #0
   227b8:	addne	r5, r5, r3
   227bc:	addne	lr, lr, r3
   227c0:	cmp	fp, #0
   227c4:	ble	22810 <GetDataSlab+0x9e4>
   227c8:	ldr	r3, [sp, #4]
   227cc:	ldr	r2, [sp, #24]
   227d0:	add	r1, r3, r2, lsl #2
   227d4:	mov	r2, #0
   227d8:	ldrb	r3, [r5]
   227dc:	add	r2, r2, #1
   227e0:	str	r3, [r1], #4
   227e4:	ldr	r3, [sp, #228]	; 0xe4
   227e8:	ldr	r6, [sl]
   227ec:	ldr	fp, [r3]
   227f0:	add	r5, r5, r6
   227f4:	add	lr, lr, r6
   227f8:	cmp	fp, r2
   227fc:	bgt	227d8 <GetDataSlab+0x9ac>
   22800:	ldr	r3, [r9]
   22804:	str	r3, [sp, #8]
   22808:	ldr	r3, [r8]
   2280c:	str	r3, [sp, #16]
   22810:	ldr	r2, [sp, #8]
   22814:	ldr	r3, [sp, #16]
   22818:	sub	r3, r3, r2
   2281c:	ldr	r2, [sp, #232]	; 0xe8
   22820:	mls	r3, r6, fp, r3
   22824:	cmp	r2, #1
   22828:	add	lr, lr, r3
   2282c:	add	r5, r5, r3
   22830:	ble	33584 <GetDataSlab+0x11758>
   22834:	ldr	r3, [sp, #100]	; 0x64
   22838:	ldr	r2, [sp, #228]	; 0xe4
   2283c:	add	r3, r3, #1
   22840:	ldr	r1, [r2, #4]
   22844:	str	r3, [sp, #100]	; 0x64
   22848:	sdiv	r2, r3, r1
   2284c:	mls	r3, r1, r2, r3
   22850:	cmp	r3, #0
   22854:	bne	3356c <GetDataSlab+0x11740>
   22858:	add	ip, sp, #100	; 0x64
   2285c:	mov	r0, #1
   22860:	ldr	r4, [sp, #12]
   22864:	ldr	r3, [sp, #228]	; 0xe4
   22868:	add	r7, r3, #4
   2286c:	b	228b4 <GetDataSlab+0xa88>
   22870:	ldr	r3, [r4, #-4]
   22874:	ldr	r1, [r9, r0, lsl #2]
   22878:	mla	r3, r1, r3, r2
   2287c:	add	r5, r5, r3
   22880:	add	lr, lr, r3
   22884:	ldr	r3, [sp, #232]	; 0xe8
   22888:	add	r0, r0, #1
   2288c:	cmp	r3, r0
   22890:	beq	33584 <GetDataSlab+0x11758>
   22894:	ldr	r3, [ip]
   22898:	ldr	r1, [r7, #4]!
   2289c:	add	r3, r3, #1
   228a0:	sdiv	r2, r3, r1
   228a4:	str	r3, [ip]
   228a8:	mls	r3, r1, r2, r3
   228ac:	cmp	r3, #0
   228b0:	bne	33570 <GetDataSlab+0x11744>
   228b4:	ldr	r2, [r4, #4]!
   228b8:	mov	r3, #0
   228bc:	str	r3, [ip], #4
   228c0:	sdiv	r3, lr, r2
   228c4:	mls	r3, r2, r3, lr
   228c8:	cmp	r3, #0
   228cc:	sub	r2, r2, r3
   228d0:	bne	22870 <GetDataSlab+0xa44>
   228d4:	ldr	r3, [r9, r0, lsl #2]
   228d8:	cmp	r3, #0
   228dc:	beq	22884 <GetDataSlab+0xa58>
   228e0:	ldr	r2, [r4, #-4]
   228e4:	mul	r3, r2, r3
   228e8:	add	r5, r5, r3
   228ec:	add	lr, lr, r3
   228f0:	b	22884 <GetDataSlab+0xa58>
   228f4:	ldr	r3, [sp, #232]	; 0xe8
   228f8:	ldr	r6, [sl]
   228fc:	cmp	r3, #1
   22900:	ldr	r3, [r8]
   22904:	str	r3, [sp, #16]
   22908:	ldr	r3, [sp, #228]	; 0xe4
   2290c:	ldr	fp, [r3]
   22910:	sub	r3, r6, #1
   22914:	str	r3, [sp, #56]	; 0x38
   22918:	ldr	r3, [sp, #16]
   2291c:	str	fp, [sp, #20]
   22920:	str	r3, [sp, #136]	; 0x88
   22924:	ble	3fa64 <GetDataSlab+0x1dc38>
   22928:	ldr	r3, [sp, #232]	; 0xe8
   2292c:	add	r7, sl, #4
   22930:	add	r5, sp, #60	; 0x3c
   22934:	mov	r4, r8
   22938:	mov	lr, #0
   2293c:	str	r9, [sp, #32]
   22940:	add	r3, sl, r3, lsl #2
   22944:	str	r3, [sp, #40]	; 0x28
   22948:	ldr	r3, [sp, #12]
   2294c:	str	r3, [sp, #24]
   22950:	ldr	r3, [sp, #228]	; 0xe4
   22954:	str	r3, [sp, #28]
   22958:	ldr	r3, [r7], #4
   2295c:	ldr	r0, [r4], #4
   22960:	ldr	r2, [sp, #24]
   22964:	sub	ip, r3, #1
   22968:	mov	r1, r4
   2296c:	str	ip, [r5], #4
   22970:	str	r2, [sp, #36]	; 0x24
   22974:	mov	r3, r1
   22978:	ldr	r2, [r1, #-4]!
   2297c:	ldr	r3, [r3]
   22980:	cmp	r1, r8
   22984:	mul	ip, r2, ip
   22988:	mul	r0, r3, r0
   2298c:	bne	22974 <GetDataSlab+0xb48>
   22990:	ldr	r3, [sp, #24]
   22994:	str	ip, [r5, #-4]
   22998:	str	r0, [r3, #4]!
   2299c:	str	r3, [sp, #24]
   229a0:	ldr	r0, [sp, #28]
   229a4:	ldr	r3, [sp, #40]	; 0x28
   229a8:	cmp	r7, r3
   229ac:	ldr	r3, [sp, #36]	; 0x24
   229b0:	ldr	r1, [r3]
   229b4:	ldr	r3, [sp, #32]
   229b8:	ldr	r2, [r3, #4]!
   229bc:	mla	lr, r2, r1, lr
   229c0:	str	r3, [sp, #32]
   229c4:	ldr	r3, [r0, #4]!
   229c8:	ldr	r2, [sp, #20]
   229cc:	str	r0, [sp, #28]
   229d0:	mul	r3, r3, r2
   229d4:	str	r3, [sp, #20]
   229d8:	bne	22958 <GetDataSlab+0xb2c>
   229dc:	ldr	r3, [sp, #8]
   229e0:	cmp	r6, #1
   229e4:	add	r5, r3, lr
   229e8:	ldr	r3, [sp, #20]
   229ec:	beq	3b48c <GetDataSlab+0x19660>
   229f0:	cmp	r3, #0
   229f4:	ble	30874 <GetDataSlab+0xea48>
   229f8:	ldr	r3, [r9]
   229fc:	str	r3, [sp, #8]
   22a00:	mov	r3, #0
   22a04:	str	r3, [sp, #24]
   22a08:	ldr	r3, [sp, #8]
   22a0c:	cmp	r3, #0
   22a10:	addne	r5, r5, r3
   22a14:	addne	lr, lr, r3
   22a18:	cmp	fp, #0
   22a1c:	ble	22a68 <GetDataSlab+0xc3c>
   22a20:	ldr	r3, [sp, #4]
   22a24:	ldr	r2, [sp, #24]
   22a28:	add	r1, r3, r2, lsl #2
   22a2c:	mov	r2, #0
   22a30:	ldrsb	r3, [r5]
   22a34:	add	r2, r2, #1
   22a38:	str	r3, [r1], #4
   22a3c:	ldr	r3, [sp, #228]	; 0xe4
   22a40:	ldr	r6, [sl]
   22a44:	ldr	fp, [r3]
   22a48:	add	r5, r5, r6
   22a4c:	add	lr, lr, r6
   22a50:	cmp	fp, r2
   22a54:	bgt	22a30 <GetDataSlab+0xc04>
   22a58:	ldr	r3, [r9]
   22a5c:	str	r3, [sp, #8]
   22a60:	ldr	r3, [r8]
   22a64:	str	r3, [sp, #16]
   22a68:	ldr	r2, [sp, #8]
   22a6c:	ldr	r3, [sp, #16]
   22a70:	sub	r3, r3, r2
   22a74:	ldr	r2, [sp, #232]	; 0xe8
   22a78:	mls	r3, r6, fp, r3
   22a7c:	cmp	r2, #1
   22a80:	add	lr, lr, r3
   22a84:	add	r5, r5, r3
   22a88:	ble	338ec <GetDataSlab+0x11ac0>
   22a8c:	ldr	r3, [sp, #100]	; 0x64
   22a90:	ldr	r2, [sp, #228]	; 0xe4
   22a94:	add	r3, r3, #1
   22a98:	ldr	r1, [r2, #4]
   22a9c:	str	r3, [sp, #100]	; 0x64
   22aa0:	sdiv	r2, r3, r1
   22aa4:	mls	r3, r1, r2, r3
   22aa8:	cmp	r3, #0
   22aac:	bne	338d4 <GetDataSlab+0x11aa8>
   22ab0:	add	ip, sp, #100	; 0x64
   22ab4:	mov	r0, #1
   22ab8:	ldr	r4, [sp, #12]
   22abc:	ldr	r3, [sp, #228]	; 0xe4
   22ac0:	add	r7, r3, #4
   22ac4:	b	22b0c <GetDataSlab+0xce0>
   22ac8:	ldr	r3, [r4, #-4]
   22acc:	ldr	r1, [r9, r0, lsl #2]
   22ad0:	mla	r3, r1, r3, r2
   22ad4:	add	r5, r5, r3
   22ad8:	add	lr, lr, r3
   22adc:	ldr	r3, [sp, #232]	; 0xe8
   22ae0:	add	r0, r0, #1
   22ae4:	cmp	r3, r0
   22ae8:	beq	338ec <GetDataSlab+0x11ac0>
   22aec:	ldr	r3, [ip]
   22af0:	ldr	r1, [r7, #4]!
   22af4:	add	r3, r3, #1
   22af8:	sdiv	r2, r3, r1
   22afc:	str	r3, [ip]
   22b00:	mls	r3, r1, r2, r3
   22b04:	cmp	r3, #0
   22b08:	bne	338d8 <GetDataSlab+0x11aac>
   22b0c:	ldr	r2, [r4, #4]!
   22b10:	mov	r3, #0
   22b14:	str	r3, [ip], #4
   22b18:	sdiv	r3, lr, r2
   22b1c:	mls	r3, r2, r3, lr
   22b20:	cmp	r3, #0
   22b24:	sub	r2, r2, r3
   22b28:	bne	22ac8 <GetDataSlab+0xc9c>
   22b2c:	ldr	r3, [r9, r0, lsl #2]
   22b30:	cmp	r3, #0
   22b34:	beq	22adc <GetDataSlab+0xcb0>
   22b38:	ldr	r2, [r4, #-4]
   22b3c:	mul	r3, r2, r3
   22b40:	add	r5, r5, r3
   22b44:	add	lr, lr, r3
   22b48:	b	22adc <GetDataSlab+0xcb0>
   22b4c:	ldr	r3, [sl]
   22b50:	str	r3, [sp, #28]
   22b54:	ldr	r3, [sp, #232]	; 0xe8
   22b58:	cmp	r3, #1
   22b5c:	ldr	r3, [r8]
   22b60:	str	r3, [sp, #36]	; 0x24
   22b64:	ldr	r3, [sp, #228]	; 0xe4
   22b68:	ldr	r3, [r3]
   22b6c:	str	r3, [sp, #20]
   22b70:	ldr	r3, [sp, #28]
   22b74:	sub	r3, r3, #1
   22b78:	str	r3, [sp, #56]	; 0x38
   22b7c:	ldr	r3, [sp, #36]	; 0x24
   22b80:	str	r3, [sp, #136]	; 0x88
   22b84:	ble	3fa54 <GetDataSlab+0x1dc28>
   22b88:	add	r6, sl, #4
   22b8c:	ldr	fp, [sp, #228]	; 0xe4
   22b90:	add	lr, sp, #60	; 0x3c
   22b94:	mov	r5, r8
   22b98:	mov	r4, #0
   22b9c:	str	r9, [sp, #24]
   22ba0:	ldr	r3, [sp, #232]	; 0xe8
   22ba4:	add	r3, sl, r3, lsl #2
   22ba8:	ldr	sl, [sp, #12]
   22bac:	str	r3, [sp, #32]
   22bb0:	ldr	r3, [sp, #20]
   22bb4:	str	r3, [sp, #16]
   22bb8:	ldr	r3, [r6], #4
   22bbc:	mov	r7, sl
   22bc0:	ldr	r0, [r5], #4
   22bc4:	sub	ip, r3, #1
   22bc8:	mov	r1, r5
   22bcc:	str	ip, [lr], #4
   22bd0:	mov	r3, r1
   22bd4:	ldr	r2, [r1, #-4]!
   22bd8:	ldr	r3, [r3]
   22bdc:	cmp	r1, r8
   22be0:	mul	ip, r2, ip
   22be4:	mul	r0, r3, r0
   22be8:	bne	22bd0 <GetDataSlab+0xda4>
   22bec:	ldr	r3, [sp, #32]
   22bf0:	str	r0, [sl, #4]!
   22bf4:	ldr	r1, [r7]
   22bf8:	str	ip, [lr, #-4]
   22bfc:	cmp	r6, r3
   22c00:	ldr	r3, [sp, #24]
   22c04:	ldr	r2, [r3, #4]!
   22c08:	mla	r4, r2, r1, r4
   22c0c:	str	r3, [sp, #24]
   22c10:	ldr	r3, [fp, #4]!
   22c14:	ldr	r2, [sp, #16]
   22c18:	mul	r3, r3, r2
   22c1c:	str	r3, [sp, #16]
   22c20:	bne	22bb8 <GetDataSlab+0xd8c>
   22c24:	ldr	r3, [sp, #28]
   22c28:	cmp	r3, #1
   22c2c:	ldr	r3, [sp, #8]
   22c30:	add	r6, r3, r4, lsl #3
   22c34:	ldr	r3, [sp, #16]
   22c38:	beq	35158 <GetDataSlab+0x1332c>
   22c3c:	cmp	r3, #0
   22c40:	ble	30874 <GetDataSlab+0xea48>
   22c44:	ldr	r3, [r9]
   22c48:	mov	fp, #0
   22c4c:	mov	r8, fp
   22c50:	ldr	r2, [sp, #20]
   22c54:	ldr	r1, [sp, #20]
   22c58:	str	r3, [sp, #8]
   22c5c:	ldr	r3, [sp, #28]
   22c60:	lsl	r2, r2, #1
   22c64:	str	r2, [sp, #32]
   22c68:	lsl	sl, r3, #3
   22c6c:	ldr	r3, [sp, #20]
   22c70:	ldr	r2, [sp, #28]
   22c74:	sub	r3, r3, #1
   22c78:	mul	r3, r2, r3
   22c7c:	ldr	r2, [sp, #32]
   22c80:	str	r3, [sp, #44]	; 0x2c
   22c84:	ldr	r3, [sp, #20]
   22c88:	mul	r3, r3, sl
   22c8c:	str	r3, [sp, #40]	; 0x28
   22c90:	ldr	r3, [sp, #4]
   22c94:	add	r7, r3, r2
   22c98:	ldr	r2, [sp, #8]
   22c9c:	ldr	r3, [sp, #36]	; 0x24
   22ca0:	sub	r3, r3, r2
   22ca4:	lsl	r2, r2, #3
   22ca8:	str	r2, [sp, #48]	; 0x30
   22cac:	ldr	r2, [sp, #28]
   22cb0:	mls	r3, r1, r2, r3
   22cb4:	str	r3, [sp, #24]
   22cb8:	lsl	r3, r3, #3
   22cbc:	str	r3, [sp, #36]	; 0x24
   22cc0:	ldr	r3, [sp, #8]
   22cc4:	cmp	r3, #0
   22cc8:	beq	22cdc <GetDataSlab+0xeb0>
   22ccc:	ldr	r3, [sp, #48]	; 0x30
   22cd0:	add	r6, r6, r3
   22cd4:	ldr	r3, [sp, #8]
   22cd8:	add	r4, r4, r3
   22cdc:	ldr	r3, [sp, #20]
   22ce0:	cmp	r3, #0
   22ce4:	ble	22d28 <GetDataSlab+0xefc>
   22ce8:	ldr	r3, [sp, #4]
   22cec:	mov	r1, r6
   22cf0:	add	r2, r3, fp, lsl #1
   22cf4:	vldr	d7, [r1]
   22cf8:	add	r1, r1, sl
   22cfc:	vcvt.u32.f64	s15, d7
   22d00:	vmov	r3, s15
   22d04:	strh	r3, [r2], #2
   22d08:	cmp	r2, r7
   22d0c:	bne	22cf4 <GetDataSlab+0xec8>
   22d10:	ldr	r3, [sp, #28]
   22d14:	ldr	r2, [sp, #40]	; 0x28
   22d18:	add	r3, r4, r3
   22d1c:	add	r6, r6, r2
   22d20:	ldr	r2, [sp, #44]	; 0x2c
   22d24:	add	r4, r2, r3
   22d28:	ldr	r3, [sp, #232]	; 0xe8
   22d2c:	cmp	r3, #1
   22d30:	ldr	r3, [sp, #24]
   22d34:	add	r4, r4, r3
   22d38:	ldr	r3, [sp, #36]	; 0x24
   22d3c:	add	r6, r6, r3
   22d40:	ble	338b4 <GetDataSlab+0x11a88>
   22d44:	ldr	r3, [sp, #100]	; 0x64
   22d48:	ldr	r2, [sp, #228]	; 0xe4
   22d4c:	add	r3, r3, #1
   22d50:	ldr	r1, [r2, #4]
   22d54:	str	r3, [sp, #100]	; 0x64
   22d58:	sdiv	r2, r3, r1
   22d5c:	mls	r3, r1, r2, r3
   22d60:	cmp	r3, #0
   22d64:	bne	3389c <GetDataSlab+0x11a70>
   22d68:	add	ip, sp, #100	; 0x64
   22d6c:	mov	r0, #1
   22d70:	ldr	lr, [sp, #12]
   22d74:	ldr	r3, [sp, #228]	; 0xe4
   22d78:	add	r5, r3, #4
   22d7c:	b	22dc4 <GetDataSlab+0xf98>
   22d80:	ldr	r3, [lr, #-4]
   22d84:	ldr	r1, [r9, r0, lsl #2]
   22d88:	mla	r3, r1, r3, r2
   22d8c:	add	r6, r6, r3, lsl #3
   22d90:	add	r4, r4, r3
   22d94:	ldr	r3, [sp, #232]	; 0xe8
   22d98:	add	r0, r0, #1
   22d9c:	cmp	r3, r0
   22da0:	beq	338b4 <GetDataSlab+0x11a88>
   22da4:	ldr	r3, [ip]
   22da8:	ldr	r1, [r5, #4]!
   22dac:	add	r3, r3, #1
   22db0:	sdiv	r2, r3, r1
   22db4:	str	r3, [ip]
   22db8:	mls	r3, r1, r2, r3
   22dbc:	cmp	r3, #0
   22dc0:	bne	338a0 <GetDataSlab+0x11a74>
   22dc4:	ldr	r2, [lr, #4]!
   22dc8:	str	r8, [ip], #4
   22dcc:	sdiv	r3, r4, r2
   22dd0:	mls	r3, r2, r3, r4
   22dd4:	cmp	r3, #0
   22dd8:	sub	r2, r2, r3
   22ddc:	bne	22d80 <GetDataSlab+0xf54>
   22de0:	ldr	r3, [r9, r0, lsl #2]
   22de4:	cmp	r3, #0
   22de8:	beq	22d94 <GetDataSlab+0xf68>
   22dec:	ldr	r2, [lr, #-4]
   22df0:	mul	r3, r2, r3
   22df4:	add	r6, r6, r3, lsl #3
   22df8:	add	r4, r4, r3
   22dfc:	b	22d94 <GetDataSlab+0xf68>
   22e00:	ldr	r3, [sp, #232]	; 0xe8
   22e04:	ldr	r6, [sl]
   22e08:	cmp	r3, #1
   22e0c:	ldr	r3, [r8]
   22e10:	str	r3, [sp, #16]
   22e14:	ldr	r3, [sp, #228]	; 0xe4
   22e18:	ldr	fp, [r3]
   22e1c:	sub	r3, r6, #1
   22e20:	str	r3, [sp, #56]	; 0x38
   22e24:	ldr	r3, [sp, #16]
   22e28:	str	fp, [sp, #20]
   22e2c:	str	r3, [sp, #136]	; 0x88
   22e30:	ble	3fb54 <GetDataSlab+0x1dd28>
   22e34:	ldr	r3, [sp, #232]	; 0xe8
   22e38:	add	r7, sl, #4
   22e3c:	add	r5, sp, #60	; 0x3c
   22e40:	mov	r4, r8
   22e44:	mov	lr, #0
   22e48:	str	r9, [sp, #32]
   22e4c:	add	r3, sl, r3, lsl #2
   22e50:	str	r3, [sp, #40]	; 0x28
   22e54:	ldr	r3, [sp, #12]
   22e58:	str	r3, [sp, #24]
   22e5c:	ldr	r3, [sp, #228]	; 0xe4
   22e60:	str	r3, [sp, #28]
   22e64:	ldr	r3, [r7], #4
   22e68:	ldr	r0, [r4], #4
   22e6c:	ldr	r2, [sp, #24]
   22e70:	sub	ip, r3, #1
   22e74:	mov	r1, r4
   22e78:	str	ip, [r5], #4
   22e7c:	str	r2, [sp, #36]	; 0x24
   22e80:	mov	r3, r1
   22e84:	ldr	r2, [r1, #-4]!
   22e88:	ldr	r3, [r3]
   22e8c:	cmp	r1, r8
   22e90:	mul	ip, r2, ip
   22e94:	mul	r0, r3, r0
   22e98:	bne	22e80 <GetDataSlab+0x1054>
   22e9c:	ldr	r3, [sp, #24]
   22ea0:	str	ip, [r5, #-4]
   22ea4:	str	r0, [r3, #4]!
   22ea8:	str	r3, [sp, #24]
   22eac:	ldr	r0, [sp, #28]
   22eb0:	ldr	r3, [sp, #40]	; 0x28
   22eb4:	cmp	r7, r3
   22eb8:	ldr	r3, [sp, #36]	; 0x24
   22ebc:	ldr	r1, [r3]
   22ec0:	ldr	r3, [sp, #32]
   22ec4:	ldr	r2, [r3, #4]!
   22ec8:	mla	lr, r2, r1, lr
   22ecc:	str	r3, [sp, #32]
   22ed0:	ldr	r3, [r0, #4]!
   22ed4:	ldr	r2, [sp, #20]
   22ed8:	str	r0, [sp, #28]
   22edc:	mul	r3, r3, r2
   22ee0:	str	r3, [sp, #20]
   22ee4:	bne	22e64 <GetDataSlab+0x1038>
   22ee8:	ldr	r3, [sp, #8]
   22eec:	cmp	r6, #1
   22ef0:	add	r5, r3, lr, lsl #1
   22ef4:	ldr	r3, [sp, #20]
   22ef8:	beq	3bda8 <GetDataSlab+0x19f7c>
   22efc:	cmp	r3, #0
   22f00:	ble	30874 <GetDataSlab+0xea48>
   22f04:	ldr	r3, [r9]
   22f08:	str	r3, [sp, #8]
   22f0c:	mov	r3, #0
   22f10:	str	r3, [sp, #24]
   22f14:	ldr	r3, [sp, #8]
   22f18:	cmp	r3, #0
   22f1c:	beq	22f28 <GetDataSlab+0x10fc>
   22f20:	add	r5, r5, r3, lsl #1
   22f24:	add	lr, lr, r3
   22f28:	cmp	fp, #0
   22f2c:	ble	22f78 <GetDataSlab+0x114c>
   22f30:	ldr	r3, [sp, #4]
   22f34:	ldr	r2, [sp, #24]
   22f38:	add	r1, r3, r2, lsl #2
   22f3c:	mov	r2, #0
   22f40:	ldrh	r3, [r5]
   22f44:	add	r2, r2, #1
   22f48:	str	r3, [r1], #4
   22f4c:	ldr	r3, [sp, #228]	; 0xe4
   22f50:	ldr	r6, [sl]
   22f54:	ldr	fp, [r3]
   22f58:	add	r5, r5, r6, lsl #1
   22f5c:	add	lr, lr, r6
   22f60:	cmp	fp, r2
   22f64:	bgt	22f40 <GetDataSlab+0x1114>
   22f68:	ldr	r3, [r9]
   22f6c:	str	r3, [sp, #8]
   22f70:	ldr	r3, [r8]
   22f74:	str	r3, [sp, #16]
   22f78:	ldr	r2, [sp, #8]
   22f7c:	ldr	r3, [sp, #16]
   22f80:	sub	r3, r3, r2
   22f84:	ldr	r2, [sp, #232]	; 0xe8
   22f88:	mls	r3, r6, fp, r3
   22f8c:	cmp	r2, #1
   22f90:	add	lr, lr, r3
   22f94:	add	r5, r5, r3, lsl #1
   22f98:	ble	33884 <GetDataSlab+0x11a58>
   22f9c:	ldr	r3, [sp, #100]	; 0x64
   22fa0:	ldr	r2, [sp, #228]	; 0xe4
   22fa4:	add	r3, r3, #1
   22fa8:	ldr	r1, [r2, #4]
   22fac:	str	r3, [sp, #100]	; 0x64
   22fb0:	sdiv	r2, r3, r1
   22fb4:	mls	r3, r1, r2, r3
   22fb8:	cmp	r3, #0
   22fbc:	bne	3386c <GetDataSlab+0x11a40>
   22fc0:	add	ip, sp, #100	; 0x64
   22fc4:	mov	r0, #1
   22fc8:	ldr	r4, [sp, #12]
   22fcc:	ldr	r3, [sp, #228]	; 0xe4
   22fd0:	add	r7, r3, #4
   22fd4:	b	2301c <GetDataSlab+0x11f0>
   22fd8:	ldr	r3, [r4, #-4]
   22fdc:	ldr	r1, [r9, r0, lsl #2]
   22fe0:	mla	r3, r1, r3, r2
   22fe4:	add	r5, r5, r3, lsl #1
   22fe8:	add	lr, lr, r3
   22fec:	ldr	r3, [sp, #232]	; 0xe8
   22ff0:	add	r0, r0, #1
   22ff4:	cmp	r3, r0
   22ff8:	beq	33884 <GetDataSlab+0x11a58>
   22ffc:	ldr	r3, [ip]
   23000:	ldr	r1, [r7, #4]!
   23004:	add	r3, r3, #1
   23008:	sdiv	r2, r3, r1
   2300c:	str	r3, [ip]
   23010:	mls	r3, r1, r2, r3
   23014:	cmp	r3, #0
   23018:	bne	33870 <GetDataSlab+0x11a44>
   2301c:	ldr	r2, [r4, #4]!
   23020:	mov	r3, #0
   23024:	str	r3, [ip], #4
   23028:	sdiv	r3, lr, r2
   2302c:	mls	r3, r2, r3, lr
   23030:	cmp	r3, #0
   23034:	sub	r2, r2, r3
   23038:	bne	22fd8 <GetDataSlab+0x11ac>
   2303c:	ldr	r3, [r9, r0, lsl #2]
   23040:	cmp	r3, #0
   23044:	beq	22fec <GetDataSlab+0x11c0>
   23048:	ldr	r2, [r4, #-4]
   2304c:	mul	r3, r2, r3
   23050:	add	r5, r5, r3, lsl #1
   23054:	add	lr, lr, r3
   23058:	b	22fec <GetDataSlab+0x11c0>
   2305c:	ldr	r3, [sp, #232]	; 0xe8
   23060:	ldr	r6, [sl]
   23064:	cmp	r3, #1
   23068:	ldr	r3, [r8]
   2306c:	str	r3, [sp, #16]
   23070:	ldr	r3, [sp, #228]	; 0xe4
   23074:	ldr	fp, [r3]
   23078:	sub	r3, r6, #1
   2307c:	str	r3, [sp, #56]	; 0x38
   23080:	ldr	r3, [sp, #16]
   23084:	str	fp, [sp, #20]
   23088:	str	r3, [sp, #136]	; 0x88
   2308c:	ble	3fba4 <GetDataSlab+0x1dd78>
   23090:	ldr	r3, [sp, #232]	; 0xe8
   23094:	add	r7, sl, #4
   23098:	add	r5, sp, #60	; 0x3c
   2309c:	mov	r4, r8
   230a0:	mov	lr, #0
   230a4:	str	r9, [sp, #32]
   230a8:	add	r3, sl, r3, lsl #2
   230ac:	str	r3, [sp, #40]	; 0x28
   230b0:	ldr	r3, [sp, #12]
   230b4:	str	r3, [sp, #24]
   230b8:	ldr	r3, [sp, #228]	; 0xe4
   230bc:	str	r3, [sp, #28]
   230c0:	ldr	r3, [r7], #4
   230c4:	ldr	r0, [r4], #4
   230c8:	ldr	r2, [sp, #24]
   230cc:	sub	ip, r3, #1
   230d0:	mov	r1, r4
   230d4:	str	ip, [r5], #4
   230d8:	str	r2, [sp, #36]	; 0x24
   230dc:	mov	r3, r1
   230e0:	ldr	r2, [r1, #-4]!
   230e4:	ldr	r3, [r3]
   230e8:	cmp	r1, r8
   230ec:	mul	ip, r2, ip
   230f0:	mul	r0, r3, r0
   230f4:	bne	230dc <GetDataSlab+0x12b0>
   230f8:	ldr	r3, [sp, #24]
   230fc:	str	ip, [r5, #-4]
   23100:	str	r0, [r3, #4]!
   23104:	str	r3, [sp, #24]
   23108:	ldr	r0, [sp, #28]
   2310c:	ldr	r3, [sp, #40]	; 0x28
   23110:	cmp	r7, r3
   23114:	ldr	r3, [sp, #36]	; 0x24
   23118:	ldr	r1, [r3]
   2311c:	ldr	r3, [sp, #32]
   23120:	ldr	r2, [r3, #4]!
   23124:	mla	lr, r2, r1, lr
   23128:	str	r3, [sp, #32]
   2312c:	ldr	r3, [r0, #4]!
   23130:	ldr	r2, [sp, #20]
   23134:	str	r0, [sp, #28]
   23138:	mul	r3, r3, r2
   2313c:	str	r3, [sp, #20]
   23140:	bne	230c0 <GetDataSlab+0x1294>
   23144:	ldr	r3, [sp, #8]
   23148:	cmp	r6, #1
   2314c:	add	r5, r3, lr, lsl #1
   23150:	ldr	r3, [sp, #20]
   23154:	beq	3c20c <GetDataSlab+0x1a3e0>
   23158:	cmp	r3, #0
   2315c:	ble	30874 <GetDataSlab+0xea48>
   23160:	ldr	r3, [r9]
   23164:	str	r3, [sp, #8]
   23168:	mov	r3, #0
   2316c:	str	r3, [sp, #24]
   23170:	ldr	r3, [sp, #8]
   23174:	cmp	r3, #0
   23178:	beq	23184 <GetDataSlab+0x1358>
   2317c:	add	r5, r5, r3, lsl #1
   23180:	add	lr, lr, r3
   23184:	cmp	fp, #0
   23188:	ble	231d4 <GetDataSlab+0x13a8>
   2318c:	ldr	r3, [sp, #4]
   23190:	ldr	r2, [sp, #24]
   23194:	add	r1, r3, r2, lsl #2
   23198:	mov	r2, #0
   2319c:	ldrsh	r3, [r5]
   231a0:	add	r2, r2, #1
   231a4:	str	r3, [r1], #4
   231a8:	ldr	r3, [sp, #228]	; 0xe4
   231ac:	ldr	r6, [sl]
   231b0:	ldr	fp, [r3]
   231b4:	add	r5, r5, r6, lsl #1
   231b8:	add	lr, lr, r6
   231bc:	cmp	fp, r2
   231c0:	bgt	2319c <GetDataSlab+0x1370>
   231c4:	ldr	r3, [r9]
   231c8:	str	r3, [sp, #8]
   231cc:	ldr	r3, [r8]
   231d0:	str	r3, [sp, #16]
   231d4:	ldr	r2, [sp, #8]
   231d8:	ldr	r3, [sp, #16]
   231dc:	sub	r3, r3, r2
   231e0:	ldr	r2, [sp, #232]	; 0xe8
   231e4:	mls	r3, r6, fp, r3
   231e8:	cmp	r2, #1
   231ec:	add	lr, lr, r3
   231f0:	add	r5, r5, r3, lsl #1
   231f4:	ble	33854 <GetDataSlab+0x11a28>
   231f8:	ldr	r3, [sp, #100]	; 0x64
   231fc:	ldr	r2, [sp, #228]	; 0xe4
   23200:	add	r3, r3, #1
   23204:	ldr	r1, [r2, #4]
   23208:	str	r3, [sp, #100]	; 0x64
   2320c:	sdiv	r2, r3, r1
   23210:	mls	r3, r1, r2, r3
   23214:	cmp	r3, #0
   23218:	bne	3383c <GetDataSlab+0x11a10>
   2321c:	add	ip, sp, #100	; 0x64
   23220:	mov	r0, #1
   23224:	ldr	r4, [sp, #12]
   23228:	ldr	r3, [sp, #228]	; 0xe4
   2322c:	add	r7, r3, #4
   23230:	b	23278 <GetDataSlab+0x144c>
   23234:	ldr	r3, [r4, #-4]
   23238:	ldr	r1, [r9, r0, lsl #2]
   2323c:	mla	r3, r1, r3, r2
   23240:	add	r5, r5, r3, lsl #1
   23244:	add	lr, lr, r3
   23248:	ldr	r3, [sp, #232]	; 0xe8
   2324c:	add	r0, r0, #1
   23250:	cmp	r3, r0
   23254:	beq	33854 <GetDataSlab+0x11a28>
   23258:	ldr	r3, [ip]
   2325c:	ldr	r1, [r7, #4]!
   23260:	add	r3, r3, #1
   23264:	sdiv	r2, r3, r1
   23268:	str	r3, [ip]
   2326c:	mls	r3, r1, r2, r3
   23270:	cmp	r3, #0
   23274:	bne	33840 <GetDataSlab+0x11a14>
   23278:	ldr	r2, [r4, #4]!
   2327c:	mov	r3, #0
   23280:	str	r3, [ip], #4
   23284:	sdiv	r3, lr, r2
   23288:	mls	r3, r2, r3, lr
   2328c:	cmp	r3, #0
   23290:	sub	r2, r2, r3
   23294:	bne	23234 <GetDataSlab+0x1408>
   23298:	ldr	r3, [r9, r0, lsl #2]
   2329c:	cmp	r3, #0
   232a0:	beq	23248 <GetDataSlab+0x141c>
   232a4:	ldr	r2, [r4, #-4]
   232a8:	mul	r3, r2, r3
   232ac:	add	r5, r5, r3, lsl #1
   232b0:	add	lr, lr, r3
   232b4:	b	23248 <GetDataSlab+0x141c>
   232b8:	ldr	r3, [sp, #232]	; 0xe8
   232bc:	ldr	r6, [sl]
   232c0:	cmp	r3, #1
   232c4:	ldr	r3, [r8]
   232c8:	str	r3, [sp, #16]
   232cc:	ldr	r3, [sp, #228]	; 0xe4
   232d0:	ldr	fp, [r3]
   232d4:	sub	r3, r6, #1
   232d8:	str	r3, [sp, #56]	; 0x38
   232dc:	ldr	r3, [sp, #16]
   232e0:	str	fp, [sp, #20]
   232e4:	str	r3, [sp, #136]	; 0x88
   232e8:	ble	3fb4c <GetDataSlab+0x1dd20>
   232ec:	ldr	r3, [sp, #232]	; 0xe8
   232f0:	add	r7, sl, #4
   232f4:	add	r5, sp, #60	; 0x3c
   232f8:	mov	r4, r8
   232fc:	mov	lr, #0
   23300:	str	r9, [sp, #32]
   23304:	add	r3, sl, r3, lsl #2
   23308:	str	r3, [sp, #40]	; 0x28
   2330c:	ldr	r3, [sp, #12]
   23310:	str	r3, [sp, #24]
   23314:	ldr	r3, [sp, #228]	; 0xe4
   23318:	str	r3, [sp, #28]
   2331c:	ldr	r3, [r7], #4
   23320:	ldr	r0, [r4], #4
   23324:	ldr	r2, [sp, #24]
   23328:	sub	ip, r3, #1
   2332c:	mov	r1, r4
   23330:	str	ip, [r5], #4
   23334:	str	r2, [sp, #36]	; 0x24
   23338:	mov	r3, r1
   2333c:	ldr	r2, [r1, #-4]!
   23340:	ldr	r3, [r3]
   23344:	cmp	r1, r8
   23348:	mul	ip, r2, ip
   2334c:	mul	r0, r3, r0
   23350:	bne	23338 <GetDataSlab+0x150c>
   23354:	ldr	r3, [sp, #24]
   23358:	str	ip, [r5, #-4]
   2335c:	str	r0, [r3, #4]!
   23360:	str	r3, [sp, #24]
   23364:	ldr	r0, [sp, #28]
   23368:	ldr	r3, [sp, #40]	; 0x28
   2336c:	cmp	r7, r3
   23370:	ldr	r3, [sp, #36]	; 0x24
   23374:	ldr	r1, [r3]
   23378:	ldr	r3, [sp, #32]
   2337c:	ldr	r2, [r3, #4]!
   23380:	mla	lr, r2, r1, lr
   23384:	str	r3, [sp, #32]
   23388:	ldr	r3, [r0, #4]!
   2338c:	ldr	r2, [sp, #20]
   23390:	str	r0, [sp, #28]
   23394:	mul	r3, r3, r2
   23398:	str	r3, [sp, #20]
   2339c:	bne	2331c <GetDataSlab+0x14f0>
   233a0:	ldr	r3, [sp, #8]
   233a4:	cmp	r6, #1
   233a8:	add	r5, r3, lr, lsl #2
   233ac:	ldr	r3, [sp, #20]
   233b0:	beq	3bf1c <GetDataSlab+0x1a0f0>
   233b4:	cmp	r3, #0
   233b8:	ble	30874 <GetDataSlab+0xea48>
   233bc:	ldr	r3, [r9]
   233c0:	str	r3, [sp, #8]
   233c4:	mov	r3, #0
   233c8:	str	r3, [sp, #24]
   233cc:	ldr	r3, [sp, #8]
   233d0:	cmp	r3, #0
   233d4:	beq	233e0 <GetDataSlab+0x15b4>
   233d8:	add	r5, r5, r3, lsl #2
   233dc:	add	lr, lr, r3
   233e0:	cmp	fp, #0
   233e4:	ble	23430 <GetDataSlab+0x1604>
   233e8:	ldr	r3, [sp, #4]
   233ec:	ldr	r2, [sp, #24]
   233f0:	add	r2, r3, r2, lsl #2
   233f4:	mov	r3, #0
   233f8:	ldr	r1, [r5]
   233fc:	add	r3, r3, #1
   23400:	str	r1, [r2], #4
   23404:	ldr	r1, [sp, #228]	; 0xe4
   23408:	ldr	r6, [sl]
   2340c:	ldr	fp, [r1]
   23410:	add	r5, r5, r6, lsl #2
   23414:	add	lr, lr, r6
   23418:	cmp	fp, r3
   2341c:	bgt	233f8 <GetDataSlab+0x15cc>
   23420:	ldr	r3, [r9]
   23424:	str	r3, [sp, #8]
   23428:	ldr	r3, [r8]
   2342c:	str	r3, [sp, #16]
   23430:	ldr	r2, [sp, #8]
   23434:	ldr	r3, [sp, #16]
   23438:	sub	r3, r3, r2
   2343c:	ldr	r2, [sp, #232]	; 0xe8
   23440:	mls	r3, r6, fp, r3
   23444:	cmp	r2, #1
   23448:	add	lr, lr, r3
   2344c:	add	r5, r5, r3, lsl #2
   23450:	ble	33824 <GetDataSlab+0x119f8>
   23454:	ldr	r3, [sp, #100]	; 0x64
   23458:	ldr	r2, [sp, #228]	; 0xe4
   2345c:	add	r3, r3, #1
   23460:	ldr	r1, [r2, #4]
   23464:	str	r3, [sp, #100]	; 0x64
   23468:	sdiv	r2, r3, r1
   2346c:	mls	r3, r1, r2, r3
   23470:	cmp	r3, #0
   23474:	bne	3380c <GetDataSlab+0x119e0>
   23478:	add	ip, sp, #100	; 0x64
   2347c:	mov	r0, #1
   23480:	ldr	r4, [sp, #12]
   23484:	ldr	r3, [sp, #228]	; 0xe4
   23488:	add	r7, r3, #4
   2348c:	b	234d4 <GetDataSlab+0x16a8>
   23490:	ldr	r3, [r4, #-4]
   23494:	ldr	r1, [r9, r0, lsl #2]
   23498:	mla	r3, r1, r3, r2
   2349c:	add	r5, r5, r3, lsl #2
   234a0:	add	lr, lr, r3
   234a4:	ldr	r3, [sp, #232]	; 0xe8
   234a8:	add	r0, r0, #1
   234ac:	cmp	r3, r0
   234b0:	beq	33824 <GetDataSlab+0x119f8>
   234b4:	ldr	r3, [ip]
   234b8:	ldr	r1, [r7, #4]!
   234bc:	add	r3, r3, #1
   234c0:	sdiv	r2, r3, r1
   234c4:	str	r3, [ip]
   234c8:	mls	r3, r1, r2, r3
   234cc:	cmp	r3, #0
   234d0:	bne	33810 <GetDataSlab+0x119e4>
   234d4:	ldr	r2, [r4, #4]!
   234d8:	mov	r3, #0
   234dc:	str	r3, [ip], #4
   234e0:	sdiv	r3, lr, r2
   234e4:	mls	r3, r2, r3, lr
   234e8:	cmp	r3, #0
   234ec:	sub	r2, r2, r3
   234f0:	bne	23490 <GetDataSlab+0x1664>
   234f4:	ldr	r3, [r9, r0, lsl #2]
   234f8:	cmp	r3, #0
   234fc:	beq	234a4 <GetDataSlab+0x1678>
   23500:	ldr	r2, [r4, #-4]
   23504:	mul	r3, r2, r3
   23508:	add	r5, r5, r3, lsl #2
   2350c:	add	lr, lr, r3
   23510:	b	234a4 <GetDataSlab+0x1678>
   23514:	ldr	r3, [sp, #232]	; 0xe8
   23518:	ldr	r6, [sl]
   2351c:	cmp	r3, #1
   23520:	ldr	r3, [r8]
   23524:	str	r3, [sp, #16]
   23528:	ldr	r3, [sp, #228]	; 0xe4
   2352c:	ldr	fp, [r3]
   23530:	sub	r3, r6, #1
   23534:	str	r3, [sp, #56]	; 0x38
   23538:	ldr	r3, [sp, #16]
   2353c:	str	fp, [sp, #20]
   23540:	str	r3, [sp, #136]	; 0x88
   23544:	ble	3fb44 <GetDataSlab+0x1dd18>
   23548:	ldr	r3, [sp, #232]	; 0xe8
   2354c:	add	r7, sl, #4
   23550:	add	r5, sp, #60	; 0x3c
   23554:	mov	lr, r8
   23558:	mov	r4, #0
   2355c:	str	r9, [sp, #32]
   23560:	add	r3, sl, r3, lsl #2
   23564:	str	r3, [sp, #40]	; 0x28
   23568:	ldr	r3, [sp, #12]
   2356c:	str	r3, [sp, #24]
   23570:	ldr	r3, [sp, #228]	; 0xe4
   23574:	str	r3, [sp, #28]
   23578:	ldr	r3, [r7], #4
   2357c:	ldr	r0, [lr], #4
   23580:	ldr	r2, [sp, #24]
   23584:	sub	ip, r3, #1
   23588:	mov	r1, lr
   2358c:	str	ip, [r5], #4
   23590:	str	r2, [sp, #36]	; 0x24
   23594:	mov	r3, r1
   23598:	ldr	r2, [r1, #-4]!
   2359c:	ldr	r3, [r3]
   235a0:	cmp	r1, r8
   235a4:	mul	ip, r2, ip
   235a8:	mul	r0, r3, r0
   235ac:	bne	23594 <GetDataSlab+0x1768>
   235b0:	ldr	r3, [sp, #24]
   235b4:	str	ip, [r5, #-4]
   235b8:	str	r0, [r3, #4]!
   235bc:	str	r3, [sp, #24]
   235c0:	ldr	r0, [sp, #28]
   235c4:	ldr	r3, [sp, #40]	; 0x28
   235c8:	cmp	r3, r7
   235cc:	ldr	r3, [sp, #36]	; 0x24
   235d0:	ldr	r1, [r3]
   235d4:	ldr	r3, [sp, #32]
   235d8:	ldr	r2, [r3, #4]!
   235dc:	mla	r4, r2, r1, r4
   235e0:	str	r3, [sp, #32]
   235e4:	ldr	r3, [r0, #4]!
   235e8:	ldr	r2, [sp, #20]
   235ec:	str	r0, [sp, #28]
   235f0:	mul	r3, r3, r2
   235f4:	str	r3, [sp, #20]
   235f8:	bne	23578 <GetDataSlab+0x174c>
   235fc:	ldr	r3, [sp, #8]
   23600:	cmp	r6, #1
   23604:	add	r5, r3, r4, lsl #3
   23608:	ldr	r3, [sp, #20]
   2360c:	beq	3c090 <GetDataSlab+0x1a264>
   23610:	cmp	r3, #0
   23614:	ble	30874 <GetDataSlab+0xea48>
   23618:	ldr	r3, [r9]
   2361c:	str	r3, [sp, #8]
   23620:	mov	r3, #0
   23624:	str	r3, [sp, #24]
   23628:	ldr	r3, [sp, #8]
   2362c:	cmp	r3, #0
   23630:	beq	2363c <GetDataSlab+0x1810>
   23634:	add	r5, r5, r3, lsl #3
   23638:	add	r4, r4, r3
   2363c:	cmp	fp, #0
   23640:	ble	23694 <GetDataSlab+0x1868>
   23644:	ldr	r3, [sp, #4]
   23648:	ldr	r2, [sp, #24]
   2364c:	add	r1, r3, r2
   23650:	mov	r2, r1
   23654:	vldr	d7, [r5]
   23658:	ldr	r0, [sp, #228]	; 0xe4
   2365c:	vcvt.u32.f64	s15, d7
   23660:	vmov	r3, s15
   23664:	strb	r3, [r2], #1
   23668:	sub	r3, r2, r1
   2366c:	ldr	fp, [r0]
   23670:	ldr	r6, [sl]
   23674:	cmp	r3, fp
   23678:	add	r5, r5, r6, lsl #3
   2367c:	add	r4, r4, r6
   23680:	blt	23654 <GetDataSlab+0x1828>
   23684:	ldr	r3, [r9]
   23688:	str	r3, [sp, #8]
   2368c:	ldr	r3, [r8]
   23690:	str	r3, [sp, #16]
   23694:	ldr	r2, [sp, #8]
   23698:	ldr	r3, [sp, #16]
   2369c:	sub	r3, r3, r2
   236a0:	ldr	r2, [sp, #232]	; 0xe8
   236a4:	mls	r3, r6, fp, r3
   236a8:	cmp	r2, #1
   236ac:	add	r4, r4, r3
   236b0:	add	r5, r5, r3, lsl #3
   236b4:	ble	337f4 <GetDataSlab+0x119c8>
   236b8:	ldr	r3, [sp, #100]	; 0x64
   236bc:	ldr	r2, [sp, #228]	; 0xe4
   236c0:	add	r3, r3, #1
   236c4:	ldr	r1, [r2, #4]
   236c8:	str	r3, [sp, #100]	; 0x64
   236cc:	sdiv	r2, r3, r1
   236d0:	mls	r3, r1, r2, r3
   236d4:	cmp	r3, #0
   236d8:	bne	337dc <GetDataSlab+0x119b0>
   236dc:	add	ip, sp, #100	; 0x64
   236e0:	mov	r0, #1
   236e4:	ldr	lr, [sp, #12]
   236e8:	ldr	r3, [sp, #228]	; 0xe4
   236ec:	add	r7, r3, #4
   236f0:	b	23738 <GetDataSlab+0x190c>
   236f4:	ldr	r3, [lr, #-4]
   236f8:	ldr	r1, [r9, r0, lsl #2]
   236fc:	mla	r3, r1, r3, r2
   23700:	add	r5, r5, r3, lsl #3
   23704:	add	r4, r4, r3
   23708:	ldr	r3, [sp, #232]	; 0xe8
   2370c:	add	r0, r0, #1
   23710:	cmp	r3, r0
   23714:	beq	337f4 <GetDataSlab+0x119c8>
   23718:	ldr	r3, [ip]
   2371c:	ldr	r1, [r7, #4]!
   23720:	add	r3, r3, #1
   23724:	sdiv	r2, r3, r1
   23728:	str	r3, [ip]
   2372c:	mls	r3, r1, r2, r3
   23730:	cmp	r3, #0
   23734:	bne	337e0 <GetDataSlab+0x119b4>
   23738:	ldr	r2, [lr, #4]!
   2373c:	mov	r3, #0
   23740:	str	r3, [ip], #4
   23744:	sdiv	r3, r4, r2
   23748:	mls	r3, r2, r3, r4
   2374c:	cmp	r3, #0
   23750:	sub	r2, r2, r3
   23754:	bne	236f4 <GetDataSlab+0x18c8>
   23758:	ldr	r3, [r9, r0, lsl #2]
   2375c:	cmp	r3, #0
   23760:	beq	23708 <GetDataSlab+0x18dc>
   23764:	ldr	r2, [lr, #-4]
   23768:	mul	r3, r2, r3
   2376c:	add	r5, r5, r3, lsl #3
   23770:	add	r4, r4, r3
   23774:	b	23708 <GetDataSlab+0x18dc>
   23778:	ldr	r3, [sp, #232]	; 0xe8
   2377c:	ldr	r6, [sl]
   23780:	cmp	r3, #1
   23784:	ldr	r3, [r8]
   23788:	str	r3, [sp, #16]
   2378c:	ldr	r3, [sp, #228]	; 0xe4
   23790:	ldr	fp, [r3]
   23794:	sub	r3, r6, #1
   23798:	str	r3, [sp, #56]	; 0x38
   2379c:	ldr	r3, [sp, #16]
   237a0:	str	fp, [sp, #20]
   237a4:	str	r3, [sp, #136]	; 0x88
   237a8:	ble	3fc84 <GetDataSlab+0x1de58>
   237ac:	ldr	r3, [sp, #232]	; 0xe8
   237b0:	add	r7, sl, #4
   237b4:	add	r5, sp, #60	; 0x3c
   237b8:	mov	lr, r8
   237bc:	mov	r4, #0
   237c0:	str	r9, [sp, #28]
   237c4:	add	r3, sl, r3, lsl #2
   237c8:	str	r3, [sp, #40]	; 0x28
   237cc:	ldr	r3, [sp, #12]
   237d0:	str	r3, [sp, #24]
   237d4:	ldr	r3, [sp, #228]	; 0xe4
   237d8:	str	r3, [sp, #32]
   237dc:	ldr	r3, [r7], #4
   237e0:	ldr	r0, [lr], #4
   237e4:	ldr	r2, [sp, #24]
   237e8:	sub	ip, r3, #1
   237ec:	mov	r1, lr
   237f0:	str	ip, [r5], #4
   237f4:	str	r2, [sp, #36]	; 0x24
   237f8:	mov	r3, r1
   237fc:	ldr	r2, [r1, #-4]!
   23800:	ldr	r3, [r3]
   23804:	cmp	r8, r1
   23808:	mul	ip, r2, ip
   2380c:	mul	r0, r3, r0
   23810:	bne	237f8 <GetDataSlab+0x19cc>
   23814:	ldr	r3, [sp, #24]
   23818:	str	ip, [r5, #-4]
   2381c:	str	r0, [r3, #4]!
   23820:	str	r3, [sp, #24]
   23824:	ldr	r0, [sp, #32]
   23828:	ldr	r3, [sp, #40]	; 0x28
   2382c:	cmp	r3, r7
   23830:	ldr	r3, [sp, #36]	; 0x24
   23834:	ldr	r1, [r3]
   23838:	ldr	r3, [sp, #28]
   2383c:	ldr	r2, [r3, #4]!
   23840:	mla	r4, r2, r1, r4
   23844:	str	r3, [sp, #28]
   23848:	ldr	r3, [r0, #4]!
   2384c:	ldr	r2, [sp, #20]
   23850:	str	r0, [sp, #32]
   23854:	mul	r3, r3, r2
   23858:	str	r3, [sp, #20]
   2385c:	bne	237dc <GetDataSlab+0x19b0>
   23860:	ldr	r3, [sp, #8]
   23864:	cmp	r6, #1
   23868:	add	r5, r3, r4, lsl #2
   2386c:	ldr	r3, [sp, #20]
   23870:	beq	3d67c <GetDataSlab+0x1b850>
   23874:	cmp	r3, #0
   23878:	ble	30874 <GetDataSlab+0xea48>
   2387c:	ldr	r3, [r9]
   23880:	str	r3, [sp, #8]
   23884:	mov	r3, #0
   23888:	str	r3, [sp, #24]
   2388c:	ldr	r3, [sp, #8]
   23890:	cmp	r3, #0
   23894:	beq	238a0 <GetDataSlab+0x1a74>
   23898:	add	r5, r5, r3, lsl #2
   2389c:	add	r4, r4, r3
   238a0:	cmp	fp, #0
   238a4:	ble	238f8 <GetDataSlab+0x1acc>
   238a8:	ldr	r3, [sp, #4]
   238ac:	ldr	r2, [sp, #24]
   238b0:	add	r1, r3, r2
   238b4:	mov	r2, r1
   238b8:	vldr	s15, [r5]
   238bc:	ldr	r0, [sp, #228]	; 0xe4
   238c0:	vcvt.u32.f32	s15, s15
   238c4:	vmov	r3, s15
   238c8:	strb	r3, [r2], #1
   238cc:	sub	r3, r2, r1
   238d0:	ldr	fp, [r0]
   238d4:	ldr	r6, [sl]
   238d8:	cmp	r3, fp
   238dc:	add	r5, r5, r6, lsl #2
   238e0:	add	r4, r4, r6
   238e4:	blt	238b8 <GetDataSlab+0x1a8c>
   238e8:	ldr	r3, [r9]
   238ec:	str	r3, [sp, #8]
   238f0:	ldr	r3, [r8]
   238f4:	str	r3, [sp, #16]
   238f8:	ldr	r2, [sp, #8]
   238fc:	ldr	r3, [sp, #16]
   23900:	sub	r3, r3, r2
   23904:	ldr	r2, [sp, #232]	; 0xe8
   23908:	mls	r3, r6, fp, r3
   2390c:	cmp	r2, #1
   23910:	add	r4, r4, r3
   23914:	add	r5, r5, r3, lsl #2
   23918:	ble	337c4 <GetDataSlab+0x11998>
   2391c:	ldr	r3, [sp, #100]	; 0x64
   23920:	ldr	r2, [sp, #228]	; 0xe4
   23924:	add	r3, r3, #1
   23928:	ldr	r1, [r2, #4]
   2392c:	str	r3, [sp, #100]	; 0x64
   23930:	sdiv	r2, r3, r1
   23934:	mls	r3, r1, r2, r3
   23938:	cmp	r3, #0
   2393c:	bne	337ac <GetDataSlab+0x11980>
   23940:	add	ip, sp, #100	; 0x64
   23944:	mov	r0, #1
   23948:	ldr	lr, [sp, #12]
   2394c:	ldr	r3, [sp, #228]	; 0xe4
   23950:	add	r7, r3, #4
   23954:	b	2399c <GetDataSlab+0x1b70>
   23958:	ldr	r3, [lr, #-4]
   2395c:	ldr	r1, [r9, r0, lsl #2]
   23960:	mla	r3, r1, r3, r2
   23964:	add	r5, r5, r3, lsl #2
   23968:	add	r4, r4, r3
   2396c:	ldr	r3, [sp, #232]	; 0xe8
   23970:	add	r0, r0, #1
   23974:	cmp	r3, r0
   23978:	beq	337c4 <GetDataSlab+0x11998>
   2397c:	ldr	r3, [ip]
   23980:	ldr	r1, [r7, #4]!
   23984:	add	r3, r3, #1
   23988:	sdiv	r2, r3, r1
   2398c:	str	r3, [ip]
   23990:	mls	r3, r1, r2, r3
   23994:	cmp	r3, #0
   23998:	bne	337b0 <GetDataSlab+0x11984>
   2399c:	ldr	r2, [lr, #4]!
   239a0:	mov	r3, #0
   239a4:	str	r3, [ip], #4
   239a8:	sdiv	r3, r4, r2
   239ac:	mls	r3, r2, r3, r4
   239b0:	cmp	r3, #0
   239b4:	sub	r2, r2, r3
   239b8:	bne	23958 <GetDataSlab+0x1b2c>
   239bc:	ldr	r3, [r9, r0, lsl #2]
   239c0:	cmp	r3, #0
   239c4:	beq	2396c <GetDataSlab+0x1b40>
   239c8:	ldr	r2, [lr, #-4]
   239cc:	mul	r3, r2, r3
   239d0:	add	r5, r5, r3, lsl #2
   239d4:	add	r4, r4, r3
   239d8:	b	2396c <GetDataSlab+0x1b40>
   239dc:	ldr	r3, [sp, #232]	; 0xe8
   239e0:	ldr	r6, [sl]
   239e4:	cmp	r3, #1
   239e8:	ldr	r3, [r8]
   239ec:	str	r3, [sp, #16]
   239f0:	ldr	r3, [sp, #228]	; 0xe4
   239f4:	ldr	fp, [r3]
   239f8:	sub	r3, r6, #1
   239fc:	str	r3, [sp, #56]	; 0x38
   23a00:	ldr	r3, [sp, #16]
   23a04:	str	fp, [sp, #20]
   23a08:	str	r3, [sp, #136]	; 0x88
   23a0c:	ble	3fcec <GetDataSlab+0x1dec0>
   23a10:	ldr	r3, [sp, #232]	; 0xe8
   23a14:	add	r7, sl, #4
   23a18:	add	r5, sp, #60	; 0x3c
   23a1c:	mov	lr, r8
   23a20:	mov	r4, #0
   23a24:	str	r9, [sp, #28]
   23a28:	add	r3, sl, r3, lsl #2
   23a2c:	str	r3, [sp, #40]	; 0x28
   23a30:	ldr	r3, [sp, #12]
   23a34:	str	r3, [sp, #24]
   23a38:	ldr	r3, [sp, #228]	; 0xe4
   23a3c:	str	r3, [sp, #32]
   23a40:	ldr	r3, [r7], #4
   23a44:	ldr	r0, [lr], #4
   23a48:	ldr	r2, [sp, #24]
   23a4c:	sub	ip, r3, #1
   23a50:	mov	r1, lr
   23a54:	str	ip, [r5], #4
   23a58:	str	r2, [sp, #36]	; 0x24
   23a5c:	mov	r3, r1
   23a60:	ldr	r2, [r1, #-4]!
   23a64:	ldr	r3, [r3]
   23a68:	cmp	r8, r1
   23a6c:	mul	ip, r2, ip
   23a70:	mul	r0, r3, r0
   23a74:	bne	23a5c <GetDataSlab+0x1c30>
   23a78:	ldr	r3, [sp, #24]
   23a7c:	str	ip, [r5, #-4]
   23a80:	str	r0, [r3, #4]!
   23a84:	str	r3, [sp, #24]
   23a88:	ldr	r0, [sp, #32]
   23a8c:	ldr	r3, [sp, #40]	; 0x28
   23a90:	cmp	r7, r3
   23a94:	ldr	r3, [sp, #36]	; 0x24
   23a98:	ldr	r1, [r3]
   23a9c:	ldr	r3, [sp, #28]
   23aa0:	ldr	r2, [r3, #4]!
   23aa4:	mla	r4, r2, r1, r4
   23aa8:	str	r3, [sp, #28]
   23aac:	ldr	r3, [r0, #4]!
   23ab0:	ldr	r2, [sp, #20]
   23ab4:	str	r0, [sp, #32]
   23ab8:	mul	r3, r3, r2
   23abc:	str	r3, [sp, #20]
   23ac0:	bne	23a40 <GetDataSlab+0x1c14>
   23ac4:	ldr	r3, [sp, #8]
   23ac8:	cmp	r6, #1
   23acc:	add	r5, r3, r4, lsl #2
   23ad0:	ldr	r3, [sp, #20]
   23ad4:	beq	3d3a0 <GetDataSlab+0x1b574>
   23ad8:	cmp	r3, #0
   23adc:	ble	30874 <GetDataSlab+0xea48>
   23ae0:	ldr	r3, [r9]
   23ae4:	str	r3, [sp, #8]
   23ae8:	mov	r3, #0
   23aec:	str	r3, [sp, #24]
   23af0:	ldr	r3, [sp, #8]
   23af4:	cmp	r3, #0
   23af8:	beq	23b04 <GetDataSlab+0x1cd8>
   23afc:	add	r5, r5, r3, lsl #2
   23b00:	add	r4, r4, r3
   23b04:	cmp	fp, #0
   23b08:	ble	23b54 <GetDataSlab+0x1d28>
   23b0c:	ldr	r3, [sp, #4]
   23b10:	ldr	r2, [sp, #24]
   23b14:	add	r1, r3, r2
   23b18:	mov	r2, r1
   23b1c:	ldr	r3, [r5]
   23b20:	ldr	r0, [sp, #228]	; 0xe4
   23b24:	strb	r3, [r2], #1
   23b28:	sub	r3, r2, r1
   23b2c:	ldr	r6, [sl]
   23b30:	ldr	fp, [r0]
   23b34:	add	r5, r5, r6, lsl #2
   23b38:	add	r4, r4, r6
   23b3c:	cmp	fp, r3
   23b40:	bgt	23b1c <GetDataSlab+0x1cf0>
   23b44:	ldr	r3, [r9]
   23b48:	str	r3, [sp, #8]
   23b4c:	ldr	r3, [r8]
   23b50:	str	r3, [sp, #16]
   23b54:	ldr	r2, [sp, #8]
   23b58:	ldr	r3, [sp, #16]
   23b5c:	sub	r3, r3, r2
   23b60:	ldr	r2, [sp, #232]	; 0xe8
   23b64:	mls	r3, r6, fp, r3
   23b68:	cmp	r2, #1
   23b6c:	add	r4, r4, r3
   23b70:	add	r5, r5, r3, lsl #2
   23b74:	ble	33794 <GetDataSlab+0x11968>
   23b78:	ldr	r3, [sp, #100]	; 0x64
   23b7c:	ldr	r2, [sp, #228]	; 0xe4
   23b80:	add	r3, r3, #1
   23b84:	ldr	r1, [r2, #4]
   23b88:	str	r3, [sp, #100]	; 0x64
   23b8c:	sdiv	r2, r3, r1
   23b90:	mls	r3, r1, r2, r3
   23b94:	cmp	r3, #0
   23b98:	bne	3377c <GetDataSlab+0x11950>
   23b9c:	add	ip, sp, #100	; 0x64
   23ba0:	mov	r0, #1
   23ba4:	ldr	lr, [sp, #12]
   23ba8:	ldr	r3, [sp, #228]	; 0xe4
   23bac:	add	r7, r3, #4
   23bb0:	b	23bf8 <GetDataSlab+0x1dcc>
   23bb4:	ldr	r3, [lr, #-4]
   23bb8:	ldr	r1, [r9, r0, lsl #2]
   23bbc:	mla	r3, r1, r3, r2
   23bc0:	add	r5, r5, r3, lsl #2
   23bc4:	add	r4, r4, r3
   23bc8:	ldr	r3, [sp, #232]	; 0xe8
   23bcc:	add	r0, r0, #1
   23bd0:	cmp	r3, r0
   23bd4:	beq	33794 <GetDataSlab+0x11968>
   23bd8:	ldr	r3, [ip]
   23bdc:	ldr	r1, [r7, #4]!
   23be0:	add	r3, r3, #1
   23be4:	sdiv	r2, r3, r1
   23be8:	str	r3, [ip]
   23bec:	mls	r3, r1, r2, r3
   23bf0:	cmp	r3, #0
   23bf4:	bne	33780 <GetDataSlab+0x11954>
   23bf8:	ldr	r2, [lr, #4]!
   23bfc:	mov	r3, #0
   23c00:	str	r3, [ip], #4
   23c04:	sdiv	r3, r4, r2
   23c08:	mls	r3, r2, r3, r4
   23c0c:	cmp	r3, #0
   23c10:	sub	r2, r2, r3
   23c14:	bne	23bb4 <GetDataSlab+0x1d88>
   23c18:	ldr	r3, [r9, r0, lsl #2]
   23c1c:	cmp	r3, #0
   23c20:	beq	23bc8 <GetDataSlab+0x1d9c>
   23c24:	ldr	r2, [lr, #-4]
   23c28:	mul	r3, r2, r3
   23c2c:	add	r5, r5, r3, lsl #2
   23c30:	add	r4, r4, r3
   23c34:	b	23bc8 <GetDataSlab+0x1d9c>
   23c38:	ldr	r3, [sp, #232]	; 0xe8
   23c3c:	ldr	r6, [sl]
   23c40:	cmp	r3, #1
   23c44:	ldr	r3, [r8]
   23c48:	str	r3, [sp, #16]
   23c4c:	ldr	r3, [sp, #228]	; 0xe4
   23c50:	ldr	fp, [r3]
   23c54:	sub	r3, r6, #1
   23c58:	str	r3, [sp, #56]	; 0x38
   23c5c:	ldr	r3, [sp, #16]
   23c60:	str	fp, [sp, #20]
   23c64:	str	r3, [sp, #136]	; 0x88
   23c68:	ble	3fcfc <GetDataSlab+0x1ded0>
   23c6c:	ldr	r3, [sp, #232]	; 0xe8
   23c70:	add	r7, sl, #4
   23c74:	add	r5, sp, #60	; 0x3c
   23c78:	mov	lr, r8
   23c7c:	mov	r4, #0
   23c80:	str	r9, [sp, #28]
   23c84:	add	r3, sl, r3, lsl #2
   23c88:	str	r3, [sp, #40]	; 0x28
   23c8c:	ldr	r3, [sp, #12]
   23c90:	str	r3, [sp, #24]
   23c94:	ldr	r3, [sp, #228]	; 0xe4
   23c98:	str	r3, [sp, #32]
   23c9c:	ldr	r3, [r7], #4
   23ca0:	ldr	r0, [lr], #4
   23ca4:	ldr	r2, [sp, #24]
   23ca8:	sub	ip, r3, #1
   23cac:	mov	r1, lr
   23cb0:	str	ip, [r5], #4
   23cb4:	str	r2, [sp, #36]	; 0x24
   23cb8:	mov	r3, r1
   23cbc:	ldr	r2, [r1, #-4]!
   23cc0:	ldr	r3, [r3]
   23cc4:	cmp	r1, r8
   23cc8:	mul	ip, r2, ip
   23ccc:	mul	r0, r3, r0
   23cd0:	bne	23cb8 <GetDataSlab+0x1e8c>
   23cd4:	ldr	r3, [sp, #24]
   23cd8:	str	ip, [r5, #-4]
   23cdc:	str	r0, [r3, #4]!
   23ce0:	str	r3, [sp, #24]
   23ce4:	ldr	r0, [sp, #32]
   23ce8:	ldr	r3, [sp, #40]	; 0x28
   23cec:	cmp	r3, r7
   23cf0:	ldr	r3, [sp, #36]	; 0x24
   23cf4:	ldr	r1, [r3]
   23cf8:	ldr	r3, [sp, #28]
   23cfc:	ldr	r2, [r3, #4]!
   23d00:	mla	r4, r2, r1, r4
   23d04:	str	r3, [sp, #28]
   23d08:	ldr	r3, [r0, #4]!
   23d0c:	ldr	r2, [sp, #20]
   23d10:	str	r0, [sp, #32]
   23d14:	mul	r3, r3, r2
   23d18:	str	r3, [sp, #20]
   23d1c:	bne	23c9c <GetDataSlab+0x1e70>
   23d20:	ldr	r3, [sp, #8]
   23d24:	cmp	r6, #1
   23d28:	add	r5, r3, r4, lsl #2
   23d2c:	ldr	r3, [sp, #20]
   23d30:	beq	3d0b8 <GetDataSlab+0x1b28c>
   23d34:	cmp	r3, #0
   23d38:	ble	30874 <GetDataSlab+0xea48>
   23d3c:	ldr	r3, [r9]
   23d40:	str	r3, [sp, #8]
   23d44:	mov	r3, #0
   23d48:	str	r3, [sp, #24]
   23d4c:	ldr	r3, [sp, #8]
   23d50:	cmp	r3, #0
   23d54:	beq	23d60 <GetDataSlab+0x1f34>
   23d58:	add	r5, r5, r3, lsl #2
   23d5c:	add	r4, r4, r3
   23d60:	cmp	fp, #0
   23d64:	ble	23db0 <GetDataSlab+0x1f84>
   23d68:	ldr	r3, [sp, #4]
   23d6c:	ldr	r2, [sp, #24]
   23d70:	add	r1, r3, r2
   23d74:	mov	r2, r1
   23d78:	ldr	r3, [r5]
   23d7c:	ldr	r0, [sp, #228]	; 0xe4
   23d80:	strb	r3, [r2], #1
   23d84:	sub	r3, r2, r1
   23d88:	ldr	r6, [sl]
   23d8c:	ldr	fp, [r0]
   23d90:	add	r5, r5, r6, lsl #2
   23d94:	add	r4, r4, r6
   23d98:	cmp	fp, r3
   23d9c:	bgt	23d78 <GetDataSlab+0x1f4c>
   23da0:	ldr	r3, [r9]
   23da4:	str	r3, [sp, #8]
   23da8:	ldr	r3, [r8]
   23dac:	str	r3, [sp, #16]
   23db0:	ldr	r2, [sp, #8]
   23db4:	ldr	r3, [sp, #16]
   23db8:	sub	r3, r3, r2
   23dbc:	ldr	r2, [sp, #232]	; 0xe8
   23dc0:	mls	r3, r6, fp, r3
   23dc4:	cmp	r2, #1
   23dc8:	add	r4, r4, r3
   23dcc:	add	r5, r5, r3, lsl #2
   23dd0:	ble	33764 <GetDataSlab+0x11938>
   23dd4:	ldr	r3, [sp, #100]	; 0x64
   23dd8:	ldr	r2, [sp, #228]	; 0xe4
   23ddc:	add	r3, r3, #1
   23de0:	ldr	r1, [r2, #4]
   23de4:	str	r3, [sp, #100]	; 0x64
   23de8:	sdiv	r2, r3, r1
   23dec:	mls	r3, r1, r2, r3
   23df0:	cmp	r3, #0
   23df4:	bne	3374c <GetDataSlab+0x11920>
   23df8:	add	ip, sp, #100	; 0x64
   23dfc:	mov	r0, #1
   23e00:	ldr	lr, [sp, #12]
   23e04:	ldr	r3, [sp, #228]	; 0xe4
   23e08:	add	r7, r3, #4
   23e0c:	b	23e54 <GetDataSlab+0x2028>
   23e10:	ldr	r3, [lr, #-4]
   23e14:	ldr	r1, [r9, r0, lsl #2]
   23e18:	mla	r3, r1, r3, r2
   23e1c:	add	r5, r5, r3, lsl #2
   23e20:	add	r4, r4, r3
   23e24:	ldr	r3, [sp, #232]	; 0xe8
   23e28:	add	r0, r0, #1
   23e2c:	cmp	r3, r0
   23e30:	beq	33764 <GetDataSlab+0x11938>
   23e34:	ldr	r3, [ip]
   23e38:	ldr	r1, [r7, #4]!
   23e3c:	add	r3, r3, #1
   23e40:	sdiv	r2, r3, r1
   23e44:	str	r3, [ip]
   23e48:	mls	r3, r1, r2, r3
   23e4c:	cmp	r3, #0
   23e50:	bne	33750 <GetDataSlab+0x11924>
   23e54:	ldr	r2, [lr, #4]!
   23e58:	mov	r3, #0
   23e5c:	str	r3, [ip], #4
   23e60:	sdiv	r3, r4, r2
   23e64:	mls	r3, r2, r3, r4
   23e68:	cmp	r3, #0
   23e6c:	sub	r2, r2, r3
   23e70:	bne	23e10 <GetDataSlab+0x1fe4>
   23e74:	ldr	r3, [r9, r0, lsl #2]
   23e78:	cmp	r3, #0
   23e7c:	beq	23e24 <GetDataSlab+0x1ff8>
   23e80:	ldr	r2, [lr, #-4]
   23e84:	mul	r3, r2, r3
   23e88:	add	r5, r5, r3, lsl #2
   23e8c:	add	r4, r4, r3
   23e90:	b	23e24 <GetDataSlab+0x1ff8>
   23e94:	ldr	r3, [sp, #232]	; 0xe8
   23e98:	ldr	r6, [sl]
   23e9c:	cmp	r3, #1
   23ea0:	ldr	r3, [r8]
   23ea4:	str	r3, [sp, #16]
   23ea8:	ldr	r3, [sp, #228]	; 0xe4
   23eac:	ldr	fp, [r3]
   23eb0:	sub	r3, r6, #1
   23eb4:	str	r3, [sp, #56]	; 0x38
   23eb8:	ldr	r3, [sp, #16]
   23ebc:	str	fp, [sp, #20]
   23ec0:	str	r3, [sp, #136]	; 0x88
   23ec4:	ble	3fcf4 <GetDataSlab+0x1dec8>
   23ec8:	ldr	r3, [sp, #232]	; 0xe8
   23ecc:	add	r7, sl, #4
   23ed0:	add	r5, sp, #60	; 0x3c
   23ed4:	mov	lr, r8
   23ed8:	mov	r4, #0
   23edc:	str	r9, [sp, #28]
   23ee0:	add	r3, sl, r3, lsl #2
   23ee4:	str	r3, [sp, #40]	; 0x28
   23ee8:	ldr	r3, [sp, #12]
   23eec:	str	r3, [sp, #24]
   23ef0:	ldr	r3, [sp, #228]	; 0xe4
   23ef4:	str	r3, [sp, #32]
   23ef8:	ldr	r3, [r7], #4
   23efc:	ldr	r0, [lr], #4
   23f00:	ldr	r2, [sp, #24]
   23f04:	sub	ip, r3, #1
   23f08:	mov	r1, lr
   23f0c:	str	ip, [r5], #4
   23f10:	str	r2, [sp, #36]	; 0x24
   23f14:	mov	r3, r1
   23f18:	ldr	r2, [r1, #-4]!
   23f1c:	ldr	r3, [r3]
   23f20:	cmp	r1, r8
   23f24:	mul	ip, r2, ip
   23f28:	mul	r0, r3, r0
   23f2c:	bne	23f14 <GetDataSlab+0x20e8>
   23f30:	ldr	r3, [sp, #24]
   23f34:	str	ip, [r5, #-4]
   23f38:	str	r0, [r3, #4]!
   23f3c:	str	r3, [sp, #24]
   23f40:	ldr	r0, [sp, #32]
   23f44:	ldr	r3, [sp, #40]	; 0x28
   23f48:	cmp	r7, r3
   23f4c:	ldr	r3, [sp, #36]	; 0x24
   23f50:	ldr	r1, [r3]
   23f54:	ldr	r3, [sp, #28]
   23f58:	ldr	r2, [r3, #4]!
   23f5c:	mla	r4, r2, r1, r4
   23f60:	str	r3, [sp, #28]
   23f64:	ldr	r3, [r0, #4]!
   23f68:	ldr	r2, [sp, #20]
   23f6c:	str	r0, [sp, #32]
   23f70:	mul	r3, r3, r2
   23f74:	str	r3, [sp, #20]
   23f78:	bne	23ef8 <GetDataSlab+0x20cc>
   23f7c:	ldr	r3, [sp, #8]
   23f80:	cmp	r6, #1
   23f84:	add	r5, r3, r4, lsl #1
   23f88:	ldr	r3, [sp, #20]
   23f8c:	beq	3d22c <GetDataSlab+0x1b400>
   23f90:	cmp	r3, #0
   23f94:	ble	30874 <GetDataSlab+0xea48>
   23f98:	ldr	r3, [r9]
   23f9c:	str	r3, [sp, #8]
   23fa0:	mov	r3, #0
   23fa4:	str	r3, [sp, #24]
   23fa8:	ldr	r3, [sp, #8]
   23fac:	cmp	r3, #0
   23fb0:	beq	23fbc <GetDataSlab+0x2190>
   23fb4:	add	r5, r5, r3, lsl #1
   23fb8:	add	r4, r4, r3
   23fbc:	cmp	fp, #0
   23fc0:	ble	2400c <GetDataSlab+0x21e0>
   23fc4:	ldr	r3, [sp, #4]
   23fc8:	ldr	r2, [sp, #24]
   23fcc:	add	r1, r3, r2
   23fd0:	mov	r2, r1
   23fd4:	ldrh	r3, [r5]
   23fd8:	ldr	r0, [sp, #228]	; 0xe4
   23fdc:	strb	r3, [r2], #1
   23fe0:	sub	r3, r2, r1
   23fe4:	ldr	r6, [sl]
   23fe8:	ldr	fp, [r0]
   23fec:	add	r5, r5, r6, lsl #1
   23ff0:	add	r4, r4, r6
   23ff4:	cmp	fp, r3
   23ff8:	bgt	23fd4 <GetDataSlab+0x21a8>
   23ffc:	ldr	r3, [r9]
   24000:	str	r3, [sp, #8]
   24004:	ldr	r3, [r8]
   24008:	str	r3, [sp, #16]
   2400c:	ldr	r2, [sp, #8]
   24010:	ldr	r3, [sp, #16]
   24014:	sub	r3, r3, r2
   24018:	ldr	r2, [sp, #232]	; 0xe8
   2401c:	mls	r3, r6, fp, r3
   24020:	cmp	r2, #1
   24024:	add	r4, r4, r3
   24028:	add	r5, r5, r3, lsl #1
   2402c:	ble	33734 <GetDataSlab+0x11908>
   24030:	ldr	r3, [sp, #100]	; 0x64
   24034:	ldr	r2, [sp, #228]	; 0xe4
   24038:	add	r3, r3, #1
   2403c:	ldr	r1, [r2, #4]
   24040:	str	r3, [sp, #100]	; 0x64
   24044:	sdiv	r2, r3, r1
   24048:	mls	r3, r1, r2, r3
   2404c:	cmp	r3, #0
   24050:	bne	3371c <GetDataSlab+0x118f0>
   24054:	add	ip, sp, #100	; 0x64
   24058:	mov	r0, #1
   2405c:	ldr	lr, [sp, #12]
   24060:	ldr	r3, [sp, #228]	; 0xe4
   24064:	add	r7, r3, #4
   24068:	b	240b0 <GetDataSlab+0x2284>
   2406c:	ldr	r3, [lr, #-4]
   24070:	ldr	r1, [r9, r0, lsl #2]
   24074:	mla	r3, r1, r3, r2
   24078:	add	r5, r5, r3, lsl #1
   2407c:	add	r4, r4, r3
   24080:	ldr	r3, [sp, #232]	; 0xe8
   24084:	add	r0, r0, #1
   24088:	cmp	r3, r0
   2408c:	beq	33734 <GetDataSlab+0x11908>
   24090:	ldr	r3, [ip]
   24094:	ldr	r1, [r7, #4]!
   24098:	add	r3, r3, #1
   2409c:	sdiv	r2, r3, r1
   240a0:	str	r3, [ip]
   240a4:	mls	r3, r1, r2, r3
   240a8:	cmp	r3, #0
   240ac:	bne	33720 <GetDataSlab+0x118f4>
   240b0:	ldr	r2, [lr, #4]!
   240b4:	mov	r3, #0
   240b8:	str	r3, [ip], #4
   240bc:	sdiv	r3, r4, r2
   240c0:	mls	r3, r2, r3, r4
   240c4:	cmp	r3, #0
   240c8:	sub	r2, r2, r3
   240cc:	bne	2406c <GetDataSlab+0x2240>
   240d0:	ldr	r3, [r9, r0, lsl #2]
   240d4:	cmp	r3, #0
   240d8:	beq	24080 <GetDataSlab+0x2254>
   240dc:	ldr	r2, [lr, #-4]
   240e0:	mul	r3, r2, r3
   240e4:	add	r5, r5, r3, lsl #1
   240e8:	add	r4, r4, r3
   240ec:	b	24080 <GetDataSlab+0x2254>
   240f0:	ldr	r3, [sp, #232]	; 0xe8
   240f4:	ldr	r6, [sl]
   240f8:	cmp	r3, #1
   240fc:	ldr	r3, [r8]
   24100:	str	r3, [sp, #16]
   24104:	ldr	r3, [sp, #228]	; 0xe4
   24108:	ldr	fp, [r3]
   2410c:	sub	r3, r6, #1
   24110:	str	r3, [sp, #56]	; 0x38
   24114:	ldr	r3, [sp, #16]
   24118:	str	fp, [sp, #20]
   2411c:	str	r3, [sp, #136]	; 0x88
   24120:	ble	3fcb4 <GetDataSlab+0x1de88>
   24124:	ldr	r3, [sp, #232]	; 0xe8
   24128:	add	r7, sl, #4
   2412c:	add	r5, sp, #60	; 0x3c
   24130:	mov	lr, r8
   24134:	mov	r4, #0
   24138:	str	r9, [sp, #32]
   2413c:	add	r3, sl, r3, lsl #2
   24140:	str	r3, [sp, #40]	; 0x28
   24144:	ldr	r3, [sp, #12]
   24148:	str	r3, [sp, #24]
   2414c:	ldr	r3, [sp, #228]	; 0xe4
   24150:	str	r3, [sp, #28]
   24154:	ldr	r3, [r7], #4
   24158:	ldr	r0, [lr], #4
   2415c:	ldr	r2, [sp, #24]
   24160:	sub	ip, r3, #1
   24164:	mov	r1, lr
   24168:	str	ip, [r5], #4
   2416c:	str	r2, [sp, #36]	; 0x24
   24170:	mov	r3, r1
   24174:	ldr	r2, [r1, #-4]!
   24178:	ldr	r3, [r3]
   2417c:	cmp	r8, r1
   24180:	mul	ip, r2, ip
   24184:	mul	r0, r3, r0
   24188:	bne	24170 <GetDataSlab+0x2344>
   2418c:	ldr	r3, [sp, #24]
   24190:	str	ip, [r5, #-4]
   24194:	str	r0, [r3, #4]!
   24198:	str	r3, [sp, #24]
   2419c:	ldr	r0, [sp, #28]
   241a0:	ldr	r3, [sp, #40]	; 0x28
   241a4:	cmp	r7, r3
   241a8:	ldr	r3, [sp, #36]	; 0x24
   241ac:	ldr	r1, [r3]
   241b0:	ldr	r3, [sp, #32]
   241b4:	ldr	r2, [r3, #4]!
   241b8:	mla	r4, r2, r1, r4
   241bc:	str	r3, [sp, #32]
   241c0:	ldr	r3, [r0, #4]!
   241c4:	ldr	r2, [sp, #20]
   241c8:	str	r0, [sp, #28]
   241cc:	mul	r3, r3, r2
   241d0:	str	r3, [sp, #20]
   241d4:	bne	24154 <GetDataSlab+0x2328>
   241d8:	ldr	r3, [sp, #8]
   241dc:	cmp	r6, #1
   241e0:	add	r5, r3, r4, lsl #1
   241e4:	ldr	r3, [sp, #20]
   241e8:	beq	3b918 <GetDataSlab+0x19aec>
   241ec:	cmp	r3, #0
   241f0:	ble	30874 <GetDataSlab+0xea48>
   241f4:	ldr	r3, [r9]
   241f8:	str	r3, [sp, #8]
   241fc:	mov	r3, #0
   24200:	str	r3, [sp, #24]
   24204:	ldr	r3, [sp, #8]
   24208:	cmp	r3, #0
   2420c:	beq	24218 <GetDataSlab+0x23ec>
   24210:	add	r5, r5, r3, lsl #1
   24214:	add	r4, r4, r3
   24218:	cmp	fp, #0
   2421c:	ble	24268 <GetDataSlab+0x243c>
   24220:	ldr	r3, [sp, #4]
   24224:	ldr	r2, [sp, #24]
   24228:	add	r1, r3, r2
   2422c:	mov	r2, r1
   24230:	ldrh	r3, [r5]
   24234:	ldr	r0, [sp, #228]	; 0xe4
   24238:	strb	r3, [r2], #1
   2423c:	sub	r3, r2, r1
   24240:	ldr	r6, [sl]
   24244:	ldr	fp, [r0]
   24248:	add	r5, r5, r6, lsl #1
   2424c:	add	r4, r4, r6
   24250:	cmp	r3, fp
   24254:	blt	24230 <GetDataSlab+0x2404>
   24258:	ldr	r3, [r9]
   2425c:	str	r3, [sp, #8]
   24260:	ldr	r3, [r8]
   24264:	str	r3, [sp, #16]
   24268:	ldr	r2, [sp, #8]
   2426c:	ldr	r3, [sp, #16]
   24270:	sub	r3, r3, r2
   24274:	ldr	r2, [sp, #232]	; 0xe8
   24278:	mls	r3, r6, fp, r3
   2427c:	cmp	r2, #1
   24280:	add	r4, r4, r3
   24284:	add	r5, r5, r3, lsl #1
   24288:	ble	33704 <GetDataSlab+0x118d8>
   2428c:	ldr	r3, [sp, #100]	; 0x64
   24290:	ldr	r2, [sp, #228]	; 0xe4
   24294:	add	r3, r3, #1
   24298:	ldr	r1, [r2, #4]
   2429c:	str	r3, [sp, #100]	; 0x64
   242a0:	sdiv	r2, r3, r1
   242a4:	mls	r3, r1, r2, r3
   242a8:	cmp	r3, #0
   242ac:	bne	336ec <GetDataSlab+0x118c0>
   242b0:	add	ip, sp, #100	; 0x64
   242b4:	mov	r0, #1
   242b8:	ldr	lr, [sp, #12]
   242bc:	ldr	r3, [sp, #228]	; 0xe4
   242c0:	add	r7, r3, #4
   242c4:	b	2430c <GetDataSlab+0x24e0>
   242c8:	ldr	r3, [lr, #-4]
   242cc:	ldr	r1, [r9, r0, lsl #2]
   242d0:	mla	r3, r1, r3, r2
   242d4:	add	r5, r5, r3, lsl #1
   242d8:	add	r4, r4, r3
   242dc:	ldr	r3, [sp, #232]	; 0xe8
   242e0:	add	r0, r0, #1
   242e4:	cmp	r3, r0
   242e8:	beq	33704 <GetDataSlab+0x118d8>
   242ec:	ldr	r3, [ip]
   242f0:	ldr	r1, [r7, #4]!
   242f4:	add	r3, r3, #1
   242f8:	sdiv	r2, r3, r1
   242fc:	str	r3, [ip]
   24300:	mls	r3, r1, r2, r3
   24304:	cmp	r3, #0
   24308:	bne	336f0 <GetDataSlab+0x118c4>
   2430c:	ldr	r2, [lr, #4]!
   24310:	mov	r3, #0
   24314:	str	r3, [ip], #4
   24318:	sdiv	r3, r4, r2
   2431c:	mls	r3, r2, r3, r4
   24320:	cmp	r3, #0
   24324:	sub	r2, r2, r3
   24328:	bne	242c8 <GetDataSlab+0x249c>
   2432c:	ldr	r3, [r9, r0, lsl #2]
   24330:	cmp	r3, #0
   24334:	beq	242dc <GetDataSlab+0x24b0>
   24338:	ldr	r2, [lr, #-4]
   2433c:	mul	r3, r2, r3
   24340:	add	r5, r5, r3, lsl #1
   24344:	add	r4, r4, r3
   24348:	b	242dc <GetDataSlab+0x24b0>
   2434c:	ldr	r3, [sp, #232]	; 0xe8
   24350:	ldr	r6, [sl]
   24354:	cmp	r3, #1
   24358:	ldr	r3, [r8]
   2435c:	str	r3, [sp, #16]
   24360:	ldr	r3, [sp, #228]	; 0xe4
   24364:	ldr	fp, [r3]
   24368:	sub	r3, r6, #1
   2436c:	str	r3, [sp, #56]	; 0x38
   24370:	ldr	r3, [sp, #16]
   24374:	str	fp, [sp, #20]
   24378:	str	r3, [sp, #136]	; 0x88
   2437c:	ble	3fc9c <GetDataSlab+0x1de70>
   24380:	ldr	r3, [sp, #232]	; 0xe8
   24384:	add	r7, sl, #4
   24388:	add	r5, sp, #60	; 0x3c
   2438c:	mov	r4, r8
   24390:	mov	lr, #0
   24394:	str	r9, [sp, #32]
   24398:	add	r3, sl, r3, lsl #2
   2439c:	str	r3, [sp, #40]	; 0x28
   243a0:	ldr	r3, [sp, #12]
   243a4:	str	r3, [sp, #24]
   243a8:	ldr	r3, [sp, #228]	; 0xe4
   243ac:	str	r3, [sp, #28]
   243b0:	ldr	r3, [r7], #4
   243b4:	ldr	r0, [r4], #4
   243b8:	ldr	r2, [sp, #24]
   243bc:	sub	ip, r3, #1
   243c0:	mov	r1, r4
   243c4:	str	ip, [r5], #4
   243c8:	str	r2, [sp, #36]	; 0x24
   243cc:	mov	r3, r1
   243d0:	ldr	r2, [r1, #-4]!
   243d4:	ldr	r3, [r3]
   243d8:	cmp	r1, r8
   243dc:	mul	ip, r2, ip
   243e0:	mul	r0, r3, r0
   243e4:	bne	243cc <GetDataSlab+0x25a0>
   243e8:	ldr	r3, [sp, #24]
   243ec:	str	ip, [r5, #-4]
   243f0:	str	r0, [r3, #4]!
   243f4:	str	r3, [sp, #24]
   243f8:	ldr	r0, [sp, #28]
   243fc:	ldr	r3, [sp, #40]	; 0x28
   24400:	cmp	r7, r3
   24404:	ldr	r3, [sp, #36]	; 0x24
   24408:	ldr	r1, [r3]
   2440c:	ldr	r3, [sp, #32]
   24410:	ldr	r2, [r3, #4]!
   24414:	mla	lr, r2, r1, lr
   24418:	str	r3, [sp, #32]
   2441c:	ldr	r3, [r0, #4]!
   24420:	ldr	r2, [sp, #20]
   24424:	str	r0, [sp, #28]
   24428:	mul	r3, r3, r2
   2442c:	str	r3, [sp, #20]
   24430:	bne	243b0 <GetDataSlab+0x2584>
   24434:	ldr	r3, [sp, #8]
   24438:	cmp	r6, #1
   2443c:	add	r5, r3, lr
   24440:	ldr	r3, [sp, #20]
   24444:	beq	3bc2c <GetDataSlab+0x19e00>
   24448:	cmp	r3, #0
   2444c:	ble	30874 <GetDataSlab+0xea48>
   24450:	ldr	r3, [r9]
   24454:	str	r3, [sp, #8]
   24458:	mov	r3, #0
   2445c:	str	r3, [sp, #24]
   24460:	ldr	r3, [sp, #8]
   24464:	cmp	r3, #0
   24468:	addne	r5, r5, r3
   2446c:	addne	lr, lr, r3
   24470:	cmp	fp, #0
   24474:	ble	244c0 <GetDataSlab+0x2694>
   24478:	ldr	r3, [sp, #4]
   2447c:	ldr	r2, [sp, #24]
   24480:	add	r1, r3, r2
   24484:	mov	r2, r1
   24488:	ldrb	r3, [r5]
   2448c:	ldr	r0, [sp, #228]	; 0xe4
   24490:	strb	r3, [r2], #1
   24494:	sub	r3, r2, r1
   24498:	ldr	r6, [sl]
   2449c:	ldr	fp, [r0]
   244a0:	add	r5, r5, r6
   244a4:	add	lr, lr, r6
   244a8:	cmp	fp, r3
   244ac:	bgt	24488 <GetDataSlab+0x265c>
   244b0:	ldr	r3, [r9]
   244b4:	str	r3, [sp, #8]
   244b8:	ldr	r3, [r8]
   244bc:	str	r3, [sp, #16]
   244c0:	ldr	r2, [sp, #8]
   244c4:	ldr	r3, [sp, #16]
   244c8:	sub	r3, r3, r2
   244cc:	ldr	r2, [sp, #232]	; 0xe8
   244d0:	mls	r3, r6, fp, r3
   244d4:	cmp	r2, #1
   244d8:	add	lr, lr, r3
   244dc:	add	r5, r5, r3
   244e0:	ble	336d4 <GetDataSlab+0x118a8>
   244e4:	ldr	r3, [sp, #100]	; 0x64
   244e8:	ldr	r2, [sp, #228]	; 0xe4
   244ec:	add	r3, r3, #1
   244f0:	ldr	r1, [r2, #4]
   244f4:	str	r3, [sp, #100]	; 0x64
   244f8:	sdiv	r2, r3, r1
   244fc:	mls	r3, r1, r2, r3
   24500:	cmp	r3, #0
   24504:	bne	336bc <GetDataSlab+0x11890>
   24508:	add	ip, sp, #100	; 0x64
   2450c:	mov	r0, #1
   24510:	ldr	r4, [sp, #12]
   24514:	ldr	r3, [sp, #228]	; 0xe4
   24518:	add	r7, r3, #4
   2451c:	b	24564 <GetDataSlab+0x2738>
   24520:	ldr	r3, [r4, #-4]
   24524:	ldr	r1, [r9, r0, lsl #2]
   24528:	mla	r3, r1, r3, r2
   2452c:	add	r5, r5, r3
   24530:	add	lr, lr, r3
   24534:	ldr	r3, [sp, #232]	; 0xe8
   24538:	add	r0, r0, #1
   2453c:	cmp	r3, r0
   24540:	beq	336d4 <GetDataSlab+0x118a8>
   24544:	ldr	r3, [ip]
   24548:	ldr	r1, [r7, #4]!
   2454c:	add	r3, r3, #1
   24550:	sdiv	r2, r3, r1
   24554:	str	r3, [ip]
   24558:	mls	r3, r1, r2, r3
   2455c:	cmp	r3, #0
   24560:	bne	336c0 <GetDataSlab+0x11894>
   24564:	ldr	r2, [r4, #4]!
   24568:	mov	r3, #0
   2456c:	str	r3, [ip], #4
   24570:	sdiv	r3, lr, r2
   24574:	mls	r3, r2, r3, lr
   24578:	cmp	r3, #0
   2457c:	sub	r2, r2, r3
   24580:	bne	24520 <GetDataSlab+0x26f4>
   24584:	ldr	r3, [r9, r0, lsl #2]
   24588:	cmp	r3, #0
   2458c:	beq	24534 <GetDataSlab+0x2708>
   24590:	ldr	r2, [r4, #-4]
   24594:	mul	r3, r2, r3
   24598:	add	r5, r5, r3
   2459c:	add	lr, lr, r3
   245a0:	b	24534 <GetDataSlab+0x2708>
   245a4:	ldr	r3, [sp, #232]	; 0xe8
   245a8:	ldr	r6, [sl]
   245ac:	cmp	r3, #1
   245b0:	ldr	r3, [r8]
   245b4:	str	r3, [sp, #16]
   245b8:	ldr	r3, [sp, #228]	; 0xe4
   245bc:	ldr	fp, [r3]
   245c0:	sub	r3, r6, #1
   245c4:	str	r3, [sp, #56]	; 0x38
   245c8:	ldr	r3, [sp, #16]
   245cc:	str	fp, [sp, #20]
   245d0:	str	r3, [sp, #136]	; 0x88
   245d4:	ble	3f97c <GetDataSlab+0x1db50>
   245d8:	ldr	r3, [sp, #232]	; 0xe8
   245dc:	add	r7, sl, #4
   245e0:	add	r5, sp, #60	; 0x3c
   245e4:	mov	r4, r8
   245e8:	mov	lr, #0
   245ec:	str	r9, [sp, #28]
   245f0:	add	r3, sl, r3, lsl #2
   245f4:	str	r3, [sp, #40]	; 0x28
   245f8:	ldr	r3, [sp, #12]
   245fc:	str	r3, [sp, #24]
   24600:	ldr	r3, [sp, #228]	; 0xe4
   24604:	str	r3, [sp, #32]
   24608:	ldr	r3, [r7], #4
   2460c:	ldr	r0, [r4], #4
   24610:	ldr	r2, [sp, #24]
   24614:	sub	ip, r3, #1
   24618:	mov	r1, r4
   2461c:	str	ip, [r5], #4
   24620:	str	r2, [sp, #36]	; 0x24
   24624:	mov	r3, r1
   24628:	ldr	r2, [r1, #-4]!
   2462c:	ldr	r3, [r3]
   24630:	cmp	r1, r8
   24634:	mul	ip, r2, ip
   24638:	mul	r0, r3, r0
   2463c:	bne	24624 <GetDataSlab+0x27f8>
   24640:	ldr	r3, [sp, #24]
   24644:	str	ip, [r5, #-4]
   24648:	str	r0, [r3, #4]!
   2464c:	str	r3, [sp, #24]
   24650:	ldr	r0, [sp, #32]
   24654:	ldr	r3, [sp, #40]	; 0x28
   24658:	cmp	r7, r3
   2465c:	ldr	r3, [sp, #36]	; 0x24
   24660:	ldr	r1, [r3]
   24664:	ldr	r3, [sp, #28]
   24668:	ldr	r2, [r3, #4]!
   2466c:	mla	lr, r2, r1, lr
   24670:	str	r3, [sp, #28]
   24674:	ldr	r3, [r0, #4]!
   24678:	ldr	r2, [sp, #20]
   2467c:	str	r0, [sp, #32]
   24680:	mul	r3, r3, r2
   24684:	str	r3, [sp, #20]
   24688:	bne	24608 <GetDataSlab+0x27dc>
   2468c:	ldr	r3, [sp, #8]
   24690:	cmp	r6, #1
   24694:	add	r5, r3, lr
   24698:	ldr	r3, [sp, #20]
   2469c:	beq	39694 <GetDataSlab+0x17868>
   246a0:	cmp	r3, #0
   246a4:	ble	30874 <GetDataSlab+0xea48>
   246a8:	ldr	r3, [r9]
   246ac:	str	r3, [sp, #8]
   246b0:	mov	r3, #0
   246b4:	str	r3, [sp, #24]
   246b8:	ldr	r3, [sp, #8]
   246bc:	cmp	r3, #0
   246c0:	addne	r5, r5, r3
   246c4:	addne	lr, lr, r3
   246c8:	cmp	fp, #0
   246cc:	ble	24718 <GetDataSlab+0x28ec>
   246d0:	ldr	r3, [sp, #4]
   246d4:	ldr	r2, [sp, #24]
   246d8:	add	r1, r3, r2
   246dc:	mov	r2, r1
   246e0:	ldrb	r3, [r5]
   246e4:	ldr	r0, [sp, #228]	; 0xe4
   246e8:	strb	r3, [r2], #1
   246ec:	sub	r3, r2, r1
   246f0:	ldr	r6, [sl]
   246f4:	ldr	fp, [r0]
   246f8:	add	r5, r5, r6
   246fc:	add	lr, lr, r6
   24700:	cmp	r3, fp
   24704:	blt	246e0 <GetDataSlab+0x28b4>
   24708:	ldr	r3, [r9]
   2470c:	str	r3, [sp, #8]
   24710:	ldr	r3, [r8]
   24714:	str	r3, [sp, #16]
   24718:	ldr	r2, [sp, #8]
   2471c:	ldr	r3, [sp, #16]
   24720:	sub	r3, r3, r2
   24724:	ldr	r2, [sp, #232]	; 0xe8
   24728:	mls	r3, r6, fp, r3
   2472c:	cmp	r2, #1
   24730:	add	lr, lr, r3
   24734:	add	r5, r5, r3
   24738:	ble	336a4 <GetDataSlab+0x11878>
   2473c:	ldr	r3, [sp, #100]	; 0x64
   24740:	ldr	r2, [sp, #228]	; 0xe4
   24744:	add	r3, r3, #1
   24748:	ldr	r1, [r2, #4]
   2474c:	str	r3, [sp, #100]	; 0x64
   24750:	sdiv	r2, r3, r1
   24754:	mls	r3, r1, r2, r3
   24758:	cmp	r3, #0
   2475c:	bne	3368c <GetDataSlab+0x11860>
   24760:	add	ip, sp, #100	; 0x64
   24764:	mov	r0, #1
   24768:	ldr	r4, [sp, #12]
   2476c:	ldr	r3, [sp, #228]	; 0xe4
   24770:	add	r7, r3, #4
   24774:	b	247bc <GetDataSlab+0x2990>
   24778:	ldr	r3, [r4, #-4]
   2477c:	ldr	r1, [r9, r0, lsl #2]
   24780:	mla	r3, r1, r3, r2
   24784:	add	r5, r5, r3
   24788:	add	lr, lr, r3
   2478c:	ldr	r3, [sp, #232]	; 0xe8
   24790:	add	r0, r0, #1
   24794:	cmp	r3, r0
   24798:	beq	336a4 <GetDataSlab+0x11878>
   2479c:	ldr	r3, [ip]
   247a0:	ldr	r1, [r7, #4]!
   247a4:	add	r3, r3, #1
   247a8:	sdiv	r2, r3, r1
   247ac:	str	r3, [ip]
   247b0:	mls	r3, r1, r2, r3
   247b4:	cmp	r3, #0
   247b8:	bne	33690 <GetDataSlab+0x11864>
   247bc:	ldr	r2, [r4, #4]!
   247c0:	mov	r3, #0
   247c4:	str	r3, [ip], #4
   247c8:	sdiv	r3, lr, r2
   247cc:	mls	r3, r2, r3, lr
   247d0:	cmp	r3, #0
   247d4:	sub	r2, r2, r3
   247d8:	bne	24778 <GetDataSlab+0x294c>
   247dc:	ldr	r3, [r9, r0, lsl #2]
   247e0:	cmp	r3, #0
   247e4:	beq	2478c <GetDataSlab+0x2960>
   247e8:	ldr	r2, [r4, #-4]
   247ec:	mul	r3, r2, r3
   247f0:	add	r5, r5, r3
   247f4:	add	lr, lr, r3
   247f8:	b	2478c <GetDataSlab+0x2960>
   247fc:	ldr	r3, [sl]
   24800:	str	r3, [sp, #28]
   24804:	ldr	r3, [sp, #232]	; 0xe8
   24808:	cmp	r3, #1
   2480c:	ldr	r3, [r8]
   24810:	str	r3, [sp, #40]	; 0x28
   24814:	ldr	r3, [sp, #228]	; 0xe4
   24818:	ldr	r3, [r3]
   2481c:	str	r3, [sp, #20]
   24820:	ldr	r3, [sp, #28]
   24824:	sub	r3, r3, #1
   24828:	str	r3, [sp, #56]	; 0x38
   2482c:	ldr	r3, [sp, #40]	; 0x28
   24830:	str	r3, [sp, #136]	; 0x88
   24834:	ble	3fca4 <GetDataSlab+0x1de78>
   24838:	add	r5, sl, #4
   2483c:	ldr	fp, [sp, #228]	; 0xe4
   24840:	add	lr, sp, #60	; 0x3c
   24844:	mov	r4, r8
   24848:	mov	r7, #0
   2484c:	str	r9, [sp, #24]
   24850:	ldr	r3, [sp, #232]	; 0xe8
   24854:	add	r3, sl, r3, lsl #2
   24858:	ldr	sl, [sp, #12]
   2485c:	str	r3, [sp, #32]
   24860:	ldr	r3, [sp, #20]
   24864:	str	r3, [sp, #16]
   24868:	ldr	r3, [r5], #4
   2486c:	mov	r6, sl
   24870:	ldr	r0, [r4], #4
   24874:	sub	ip, r3, #1
   24878:	mov	r1, r4
   2487c:	str	ip, [lr], #4
   24880:	mov	r3, r1
   24884:	ldr	r2, [r1, #-4]!
   24888:	ldr	r3, [r3]
   2488c:	cmp	r1, r8
   24890:	mul	ip, r2, ip
   24894:	mul	r0, r3, r0
   24898:	bne	24880 <GetDataSlab+0x2a54>
   2489c:	ldr	r3, [sp, #32]
   248a0:	str	r0, [sl, #4]!
   248a4:	ldr	r1, [r6]
   248a8:	str	ip, [lr, #-4]
   248ac:	cmp	r5, r3
   248b0:	ldr	r3, [sp, #24]
   248b4:	ldr	r2, [r3, #4]!
   248b8:	mla	r7, r2, r1, r7
   248bc:	str	r3, [sp, #24]
   248c0:	ldr	r3, [fp, #4]!
   248c4:	ldr	r2, [sp, #16]
   248c8:	mul	r3, r3, r2
   248cc:	str	r3, [sp, #16]
   248d0:	bne	24868 <GetDataSlab+0x2a3c>
   248d4:	ldr	r3, [sp, #28]
   248d8:	cmp	r3, #1
   248dc:	ldr	r3, [sp, #8]
   248e0:	add	r8, r3, r7, lsl #3
   248e4:	ldr	r3, [sp, #16]
   248e8:	beq	3ba8c <GetDataSlab+0x19c60>
   248ec:	cmp	r3, #0
   248f0:	ble	30874 <GetDataSlab+0xea48>
   248f4:	ldr	r3, [r9]
   248f8:	mov	sl, #0
   248fc:	ldr	r2, [sp, #20]
   24900:	ldr	r1, [sp, #20]
   24904:	str	r3, [sp, #24]
   24908:	ldr	r3, [sp, #28]
   2490c:	lsl	r2, r2, #3
   24910:	str	r2, [sp, #36]	; 0x24
   24914:	mov	r2, #0
   24918:	lsl	fp, r3, #3
   2491c:	ldr	r3, [sp, #20]
   24920:	str	r2, [sp, #8]
   24924:	ldr	r2, [sp, #28]
   24928:	sub	r3, r3, #1
   2492c:	mul	r3, r2, r3
   24930:	ldr	r2, [sp, #36]	; 0x24
   24934:	str	r3, [sp, #44]	; 0x2c
   24938:	ldr	r3, [sp, #20]
   2493c:	mul	r3, r3, fp
   24940:	str	r3, [sp, #48]	; 0x30
   24944:	ldr	r3, [sp, #4]
   24948:	add	r6, r3, r2
   2494c:	ldr	r2, [sp, #24]
   24950:	ldr	r3, [sp, #40]	; 0x28
   24954:	sub	r3, r3, r2
   24958:	lsl	r2, r2, #3
   2495c:	str	r2, [sp, #52]	; 0x34
   24960:	ldr	r2, [sp, #28]
   24964:	mls	r3, r1, r2, r3
   24968:	str	r3, [sp, #32]
   2496c:	lsl	r3, r3, #3
   24970:	str	r3, [sp, #40]	; 0x28
   24974:	ldr	r3, [sp, #24]
   24978:	cmp	r3, #0
   2497c:	beq	24990 <GetDataSlab+0x2b64>
   24980:	ldr	r3, [sp, #52]	; 0x34
   24984:	add	r8, r8, r3
   24988:	ldr	r3, [sp, #24]
   2498c:	add	r7, r7, r3
   24990:	ldr	r3, [sp, #20]
   24994:	cmp	r3, #0
   24998:	ble	249dc <GetDataSlab+0x2bb0>
   2499c:	ldr	r3, [sp, #4]
   249a0:	mov	r5, r8
   249a4:	ldr	r2, [sp, #8]
   249a8:	add	r4, r3, r2, lsl #3
   249ac:	ldrd	r0, [r5]
   249b0:	add	r5, r5, fp
   249b4:	bl	4e3c0 <__aeabi_d2lz>
   249b8:	strd	r0, [r4], #8
   249bc:	cmp	r4, r6
   249c0:	bne	249ac <GetDataSlab+0x2b80>
   249c4:	ldr	r3, [sp, #28]
   249c8:	ldr	r2, [sp, #48]	; 0x30
   249cc:	add	r3, r3, r7
   249d0:	add	r8, r8, r2
   249d4:	ldr	r2, [sp, #44]	; 0x2c
   249d8:	add	r7, r2, r3
   249dc:	ldr	r3, [sp, #232]	; 0xe8
   249e0:	cmp	r3, #1
   249e4:	ldr	r3, [sp, #32]
   249e8:	add	r7, r7, r3
   249ec:	ldr	r3, [sp, #40]	; 0x28
   249f0:	add	r8, r8, r3
   249f4:	ble	33660 <GetDataSlab+0x11834>
   249f8:	ldr	r3, [sp, #100]	; 0x64
   249fc:	ldr	r2, [sp, #228]	; 0xe4
   24a00:	add	r3, r3, #1
   24a04:	ldr	r1, [r2, #4]
   24a08:	str	r3, [sp, #100]	; 0x64
   24a0c:	sdiv	r2, r3, r1
   24a10:	mls	r3, r1, r2, r3
   24a14:	cmp	r3, #0
   24a18:	bne	33648 <GetDataSlab+0x1181c>
   24a1c:	add	ip, sp, #100	; 0x64
   24a20:	mov	r0, #1
   24a24:	ldr	lr, [sp, #12]
   24a28:	ldr	r3, [sp, #228]	; 0xe4
   24a2c:	add	r4, r3, #4
   24a30:	b	24a78 <GetDataSlab+0x2c4c>
   24a34:	ldr	r3, [lr, #-4]
   24a38:	ldr	r1, [r9, r0, lsl #2]
   24a3c:	mla	r3, r1, r3, r2
   24a40:	add	r8, r8, r3, lsl #3
   24a44:	add	r7, r7, r3
   24a48:	ldr	r3, [sp, #232]	; 0xe8
   24a4c:	add	r0, r0, #1
   24a50:	cmp	r3, r0
   24a54:	beq	33660 <GetDataSlab+0x11834>
   24a58:	ldr	r3, [ip]
   24a5c:	ldr	r1, [r4, #4]!
   24a60:	add	r3, r3, #1
   24a64:	sdiv	r2, r3, r1
   24a68:	str	r3, [ip]
   24a6c:	mls	r3, r1, r2, r3
   24a70:	cmp	r3, #0
   24a74:	bne	3364c <GetDataSlab+0x11820>
   24a78:	ldr	r2, [lr, #4]!
   24a7c:	str	sl, [ip], #4
   24a80:	sdiv	r3, r7, r2
   24a84:	mls	r3, r2, r3, r7
   24a88:	cmp	r3, #0
   24a8c:	sub	r2, r2, r3
   24a90:	bne	24a34 <GetDataSlab+0x2c08>
   24a94:	ldr	r3, [r9, r0, lsl #2]
   24a98:	cmp	r3, #0
   24a9c:	beq	24a48 <GetDataSlab+0x2c1c>
   24aa0:	ldr	r2, [lr, #-4]
   24aa4:	mul	r3, r2, r3
   24aa8:	add	r8, r8, r3, lsl #3
   24aac:	add	r7, r7, r3
   24ab0:	b	24a48 <GetDataSlab+0x2c1c>
   24ab4:	ldr	r3, [sl]
   24ab8:	str	r3, [sp, #28]
   24abc:	ldr	r3, [sp, #232]	; 0xe8
   24ac0:	cmp	r3, #1
   24ac4:	ldr	r3, [r8]
   24ac8:	str	r3, [sp, #40]	; 0x28
   24acc:	ldr	r3, [sp, #228]	; 0xe4
   24ad0:	ldr	r3, [r3]
   24ad4:	str	r3, [sp, #20]
   24ad8:	ldr	r3, [sp, #28]
   24adc:	sub	r3, r3, #1
   24ae0:	str	r3, [sp, #56]	; 0x38
   24ae4:	ldr	r3, [sp, #40]	; 0x28
   24ae8:	str	r3, [sp, #136]	; 0x88
   24aec:	ble	3fcbc <GetDataSlab+0x1de90>
   24af0:	add	r5, sl, #4
   24af4:	ldr	fp, [sp, #228]	; 0xe4
   24af8:	add	lr, sp, #60	; 0x3c
   24afc:	mov	r4, r8
   24b00:	mov	r7, #0
   24b04:	str	r9, [sp, #24]
   24b08:	ldr	r3, [sp, #232]	; 0xe8
   24b0c:	add	r3, sl, r3, lsl #2
   24b10:	ldr	sl, [sp, #12]
   24b14:	str	r3, [sp, #32]
   24b18:	ldr	r3, [sp, #20]
   24b1c:	str	r3, [sp, #16]
   24b20:	ldr	r3, [r5], #4
   24b24:	mov	r6, sl
   24b28:	ldr	r0, [r4], #4
   24b2c:	sub	ip, r3, #1
   24b30:	mov	r1, r4
   24b34:	str	ip, [lr], #4
   24b38:	mov	r3, r1
   24b3c:	ldr	r2, [r1, #-4]!
   24b40:	ldr	r3, [r3]
   24b44:	cmp	r1, r8
   24b48:	mul	ip, r2, ip
   24b4c:	mul	r0, r3, r0
   24b50:	bne	24b38 <GetDataSlab+0x2d0c>
   24b54:	ldr	r3, [sp, #32]
   24b58:	str	r0, [sl, #4]!
   24b5c:	ldr	r1, [r6]
   24b60:	str	ip, [lr, #-4]
   24b64:	cmp	r5, r3
   24b68:	ldr	r3, [sp, #24]
   24b6c:	ldr	r2, [r3, #4]!
   24b70:	mla	r7, r2, r1, r7
   24b74:	str	r3, [sp, #24]
   24b78:	ldr	r3, [fp, #4]!
   24b7c:	ldr	r2, [sp, #16]
   24b80:	mul	r3, r3, r2
   24b84:	str	r3, [sp, #16]
   24b88:	bne	24b20 <GetDataSlab+0x2cf4>
   24b8c:	ldr	r3, [sp, #28]
   24b90:	cmp	r3, #1
   24b94:	ldr	r3, [sp, #8]
   24b98:	add	r8, r3, r7, lsl #2
   24b9c:	ldr	r3, [sp, #16]
   24ba0:	beq	3b778 <GetDataSlab+0x1994c>
   24ba4:	cmp	r3, #0
   24ba8:	ble	30874 <GetDataSlab+0xea48>
   24bac:	ldr	r3, [r9]
   24bb0:	mov	sl, #0
   24bb4:	ldr	r2, [sp, #20]
   24bb8:	ldr	r1, [sp, #20]
   24bbc:	str	r3, [sp, #24]
   24bc0:	ldr	r3, [sp, #28]
   24bc4:	lsl	r2, r2, #3
   24bc8:	str	r2, [sp, #36]	; 0x24
   24bcc:	mov	r2, #0
   24bd0:	lsl	fp, r3, #2
   24bd4:	ldr	r3, [sp, #20]
   24bd8:	str	r2, [sp, #8]
   24bdc:	ldr	r2, [sp, #28]
   24be0:	sub	r3, r3, #1
   24be4:	mul	r3, r2, r3
   24be8:	ldr	r2, [sp, #36]	; 0x24
   24bec:	str	r3, [sp, #48]	; 0x30
   24bf0:	ldr	r3, [sp, #20]
   24bf4:	mul	r3, r3, fp
   24bf8:	str	r3, [sp, #44]	; 0x2c
   24bfc:	ldr	r3, [sp, #4]
   24c00:	add	r6, r3, r2
   24c04:	ldr	r2, [sp, #24]
   24c08:	ldr	r3, [sp, #40]	; 0x28
   24c0c:	sub	r3, r3, r2
   24c10:	lsl	r2, r2, #2
   24c14:	str	r2, [sp, #52]	; 0x34
   24c18:	ldr	r2, [sp, #28]
   24c1c:	mls	r3, r1, r2, r3
   24c20:	str	r3, [sp, #32]
   24c24:	lsl	r3, r3, #2
   24c28:	str	r3, [sp, #40]	; 0x28
   24c2c:	ldr	r3, [sp, #24]
   24c30:	cmp	r3, #0
   24c34:	beq	24c48 <GetDataSlab+0x2e1c>
   24c38:	ldr	r3, [sp, #52]	; 0x34
   24c3c:	add	r8, r8, r3
   24c40:	ldr	r3, [sp, #24]
   24c44:	add	r7, r7, r3
   24c48:	ldr	r3, [sp, #20]
   24c4c:	cmp	r3, #0
   24c50:	ble	24c94 <GetDataSlab+0x2e68>
   24c54:	ldr	r3, [sp, #4]
   24c58:	mov	r5, r8
   24c5c:	ldr	r2, [sp, #8]
   24c60:	add	r4, r3, r2, lsl #3
   24c64:	ldr	r0, [r5]
   24c68:	add	r5, r5, fp
   24c6c:	bl	4e394 <__aeabi_f2lz>
   24c70:	strd	r0, [r4], #8
   24c74:	cmp	r4, r6
   24c78:	bne	24c64 <GetDataSlab+0x2e38>
   24c7c:	ldr	r3, [sp, #28]
   24c80:	ldr	r2, [sp, #44]	; 0x2c
   24c84:	add	r3, r3, r7
   24c88:	add	r8, r8, r2
   24c8c:	ldr	r2, [sp, #48]	; 0x30
   24c90:	add	r7, r2, r3
   24c94:	ldr	r3, [sp, #232]	; 0xe8
   24c98:	cmp	r3, #1
   24c9c:	ldr	r3, [sp, #32]
   24ca0:	add	r7, r7, r3
   24ca4:	ldr	r3, [sp, #40]	; 0x28
   24ca8:	add	r8, r8, r3
   24cac:	ble	3361c <GetDataSlab+0x117f0>
   24cb0:	ldr	r3, [sp, #100]	; 0x64
   24cb4:	ldr	r2, [sp, #228]	; 0xe4
   24cb8:	add	r3, r3, #1
   24cbc:	ldr	r1, [r2, #4]
   24cc0:	str	r3, [sp, #100]	; 0x64
   24cc4:	sdiv	r2, r3, r1
   24cc8:	mls	r3, r1, r2, r3
   24ccc:	cmp	r3, #0
   24cd0:	bne	33604 <GetDataSlab+0x117d8>
   24cd4:	add	ip, sp, #100	; 0x64
   24cd8:	mov	r0, #1
   24cdc:	ldr	lr, [sp, #12]
   24ce0:	ldr	r3, [sp, #228]	; 0xe4
   24ce4:	add	r4, r3, #4
   24ce8:	b	24d30 <GetDataSlab+0x2f04>
   24cec:	ldr	r3, [lr, #-4]
   24cf0:	ldr	r1, [r9, r0, lsl #2]
   24cf4:	mla	r3, r1, r3, r2
   24cf8:	add	r8, r8, r3, lsl #2
   24cfc:	add	r7, r7, r3
   24d00:	ldr	r3, [sp, #232]	; 0xe8
   24d04:	add	r0, r0, #1
   24d08:	cmp	r3, r0
   24d0c:	beq	3361c <GetDataSlab+0x117f0>
   24d10:	ldr	r3, [ip]
   24d14:	ldr	r1, [r4, #4]!
   24d18:	add	r3, r3, #1
   24d1c:	sdiv	r2, r3, r1
   24d20:	str	r3, [ip]
   24d24:	mls	r3, r1, r2, r3
   24d28:	cmp	r3, #0
   24d2c:	bne	33608 <GetDataSlab+0x117dc>
   24d30:	ldr	r2, [lr, #4]!
   24d34:	str	sl, [ip], #4
   24d38:	sdiv	r3, r7, r2
   24d3c:	mls	r3, r2, r3, r7
   24d40:	cmp	r3, #0
   24d44:	sub	r2, r2, r3
   24d48:	bne	24cec <GetDataSlab+0x2ec0>
   24d4c:	ldr	r3, [r9, r0, lsl #2]
   24d50:	cmp	r3, #0
   24d54:	beq	24d00 <GetDataSlab+0x2ed4>
   24d58:	ldr	r2, [lr, #-4]
   24d5c:	mul	r3, r2, r3
   24d60:	add	r8, r8, r3, lsl #2
   24d64:	add	r7, r7, r3
   24d68:	b	24d00 <GetDataSlab+0x2ed4>
   24d6c:	ldr	r3, [sl]
   24d70:	str	r3, [sp, #28]
   24d74:	ldr	r3, [sp, #232]	; 0xe8
   24d78:	cmp	r3, #1
   24d7c:	ldr	r3, [r8]
   24d80:	str	r3, [sp, #36]	; 0x24
   24d84:	ldr	r3, [sp, #228]	; 0xe4
   24d88:	ldr	r3, [r3]
   24d8c:	str	r3, [sp, #20]
   24d90:	ldr	r3, [sp, #28]
   24d94:	sub	r3, r3, #1
   24d98:	str	r3, [sp, #56]	; 0x38
   24d9c:	ldr	r3, [sp, #36]	; 0x24
   24da0:	str	r3, [sp, #136]	; 0x88
   24da4:	ble	3fb24 <GetDataSlab+0x1dcf8>
   24da8:	add	r6, sl, #4
   24dac:	ldr	fp, [sp, #228]	; 0xe4
   24db0:	add	lr, sp, #60	; 0x3c
   24db4:	mov	r5, r8
   24db8:	mov	r4, #0
   24dbc:	str	r9, [sp, #24]
   24dc0:	ldr	r3, [sp, #232]	; 0xe8
   24dc4:	add	r3, sl, r3, lsl #2
   24dc8:	ldr	sl, [sp, #12]
   24dcc:	str	r3, [sp, #32]
   24dd0:	ldr	r3, [sp, #20]
   24dd4:	str	r3, [sp, #16]
   24dd8:	ldr	r3, [r6], #4
   24ddc:	mov	r7, sl
   24de0:	ldr	r0, [r5], #4
   24de4:	sub	ip, r3, #1
   24de8:	mov	r1, r5
   24dec:	str	ip, [lr], #4
   24df0:	mov	r3, r1
   24df4:	ldr	r2, [r1, #-4]!
   24df8:	ldr	r3, [r3]
   24dfc:	cmp	r1, r8
   24e00:	mul	ip, r2, ip
   24e04:	mul	r0, r3, r0
   24e08:	bne	24df0 <GetDataSlab+0x2fc4>
   24e0c:	ldr	r3, [sp, #32]
   24e10:	str	r0, [sl, #4]!
   24e14:	ldr	r1, [r7]
   24e18:	str	ip, [lr, #-4]
   24e1c:	cmp	r6, r3
   24e20:	ldr	r3, [sp, #24]
   24e24:	ldr	r2, [r3, #4]!
   24e28:	mla	r4, r2, r1, r4
   24e2c:	str	r3, [sp, #24]
   24e30:	ldr	r3, [fp, #4]!
   24e34:	ldr	r2, [sp, #16]
   24e38:	mul	r3, r3, r2
   24e3c:	str	r3, [sp, #16]
   24e40:	bne	24dd8 <GetDataSlab+0x2fac>
   24e44:	ldr	r3, [sp, #28]
   24e48:	cmp	r3, #1
   24e4c:	ldr	r3, [sp, #8]
   24e50:	add	r6, r3, r4, lsl #2
   24e54:	ldr	r3, [sp, #16]
   24e58:	beq	3d970 <GetDataSlab+0x1bb44>
   24e5c:	cmp	r3, #0
   24e60:	ble	30874 <GetDataSlab+0xea48>
   24e64:	ldr	r3, [r9]
   24e68:	mov	fp, #0
   24e6c:	mov	r7, fp
   24e70:	ldr	r2, [sp, #20]
   24e74:	ldr	r1, [sp, #20]
   24e78:	str	r3, [sp, #8]
   24e7c:	ldr	r3, [sp, #28]
   24e80:	lsl	r2, r2, #3
   24e84:	str	r2, [sp, #32]
   24e88:	lsl	r8, r3, #2
   24e8c:	ldr	r3, [sp, #20]
   24e90:	ldr	r2, [sp, #28]
   24e94:	sub	r3, r3, #1
   24e98:	mul	r3, r2, r3
   24e9c:	ldr	r2, [sp, #32]
   24ea0:	str	r3, [sp, #40]	; 0x28
   24ea4:	ldr	r3, [sp, #20]
   24ea8:	mul	r3, r3, r8
   24eac:	str	r3, [sp, #44]	; 0x2c
   24eb0:	ldr	r3, [sp, #4]
   24eb4:	add	sl, r3, r2
   24eb8:	ldr	r2, [sp, #8]
   24ebc:	ldr	r3, [sp, #36]	; 0x24
   24ec0:	sub	r3, r3, r2
   24ec4:	lsl	r2, r2, #2
   24ec8:	str	r2, [sp, #48]	; 0x30
   24ecc:	ldr	r2, [sp, #28]
   24ed0:	mls	r3, r1, r2, r3
   24ed4:	str	r3, [sp, #24]
   24ed8:	lsl	r3, r3, #2
   24edc:	str	r3, [sp, #36]	; 0x24
   24ee0:	ldr	r3, [sp, #8]
   24ee4:	cmp	r3, #0
   24ee8:	beq	24efc <GetDataSlab+0x30d0>
   24eec:	ldr	r3, [sp, #48]	; 0x30
   24ef0:	add	r6, r6, r3
   24ef4:	ldr	r3, [sp, #8]
   24ef8:	add	r4, r4, r3
   24efc:	ldr	r3, [sp, #20]
   24f00:	cmp	r3, #0
   24f04:	ble	24f40 <GetDataSlab+0x3114>
   24f08:	ldr	r3, [sp, #4]
   24f0c:	mov	r1, r6
   24f10:	add	r2, r3, fp, lsl #3
   24f14:	ldr	r3, [r1], r8
   24f18:	stm	r2, {r3, r7}
   24f1c:	add	r2, r2, #8
   24f20:	cmp	r2, sl
   24f24:	bne	24f14 <GetDataSlab+0x30e8>
   24f28:	ldr	r3, [sp, #28]
   24f2c:	ldr	r2, [sp, #44]	; 0x2c
   24f30:	add	r3, r3, r4
   24f34:	add	r6, r6, r2
   24f38:	ldr	r2, [sp, #40]	; 0x28
   24f3c:	add	r4, r3, r2
   24f40:	ldr	r3, [sp, #232]	; 0xe8
   24f44:	cmp	r3, #1
   24f48:	ldr	r3, [sp, #24]
   24f4c:	add	r4, r4, r3
   24f50:	ldr	r3, [sp, #36]	; 0x24
   24f54:	add	r6, r6, r3
   24f58:	ble	335e4 <GetDataSlab+0x117b8>
   24f5c:	ldr	r3, [sp, #100]	; 0x64
   24f60:	ldr	r2, [sp, #228]	; 0xe4
   24f64:	add	r3, r3, #1
   24f68:	ldr	r1, [r2, #4]
   24f6c:	str	r3, [sp, #100]	; 0x64
   24f70:	sdiv	r2, r3, r1
   24f74:	mls	r3, r1, r2, r3
   24f78:	cmp	r3, #0
   24f7c:	bne	335cc <GetDataSlab+0x117a0>
   24f80:	add	ip, sp, #100	; 0x64
   24f84:	mov	r0, #1
   24f88:	ldr	lr, [sp, #12]
   24f8c:	ldr	r3, [sp, #228]	; 0xe4
   24f90:	add	r5, r3, #4
   24f94:	b	24fdc <GetDataSlab+0x31b0>
   24f98:	ldr	r3, [lr, #-4]
   24f9c:	ldr	r1, [r9, r0, lsl #2]
   24fa0:	mla	r3, r1, r3, r2
   24fa4:	add	r6, r6, r3, lsl #2
   24fa8:	add	r4, r4, r3
   24fac:	ldr	r3, [sp, #232]	; 0xe8
   24fb0:	add	r0, r0, #1
   24fb4:	cmp	r3, r0
   24fb8:	beq	335e4 <GetDataSlab+0x117b8>
   24fbc:	ldr	r3, [ip]
   24fc0:	ldr	r1, [r5, #4]!
   24fc4:	add	r3, r3, #1
   24fc8:	sdiv	r2, r3, r1
   24fcc:	str	r3, [ip]
   24fd0:	mls	r3, r1, r2, r3
   24fd4:	cmp	r3, #0
   24fd8:	bne	335d0 <GetDataSlab+0x117a4>
   24fdc:	ldr	r2, [lr, #4]!
   24fe0:	str	r7, [ip], #4
   24fe4:	sdiv	r3, r4, r2
   24fe8:	mls	r3, r2, r3, r4
   24fec:	cmp	r3, #0
   24ff0:	sub	r2, r2, r3
   24ff4:	bne	24f98 <GetDataSlab+0x316c>
   24ff8:	ldr	r3, [r9, r0, lsl #2]
   24ffc:	cmp	r3, #0
   25000:	beq	24fac <GetDataSlab+0x3180>
   25004:	ldr	r2, [lr, #-4]
   25008:	mul	r3, r2, r3
   2500c:	add	r6, r6, r3, lsl #2
   25010:	add	r4, r4, r3
   25014:	b	24fac <GetDataSlab+0x3180>
   25018:	ldr	r3, [sl]
   2501c:	str	r3, [sp, #28]
   25020:	ldr	r3, [sp, #232]	; 0xe8
   25024:	cmp	r3, #1
   25028:	ldr	r3, [r8]
   2502c:	str	r3, [sp, #36]	; 0x24
   25030:	ldr	r3, [sp, #228]	; 0xe4
   25034:	ldr	r3, [r3]
   25038:	str	r3, [sp, #20]
   2503c:	ldr	r3, [sp, #28]
   25040:	sub	r3, r3, #1
   25044:	str	r3, [sp, #56]	; 0x38
   25048:	ldr	r3, [sp, #36]	; 0x24
   2504c:	str	r3, [sp, #136]	; 0x88
   25050:	ble	3fd04 <GetDataSlab+0x1ded8>
   25054:	add	r6, sl, #4
   25058:	ldr	fp, [sp, #228]	; 0xe4
   2505c:	add	lr, sp, #60	; 0x3c
   25060:	mov	r5, r8
   25064:	mov	r4, #0
   25068:	str	r9, [sp, #24]
   2506c:	ldr	r3, [sp, #232]	; 0xe8
   25070:	add	r3, sl, r3, lsl #2
   25074:	ldr	sl, [sp, #12]
   25078:	str	r3, [sp, #32]
   2507c:	ldr	r3, [sp, #20]
   25080:	str	r3, [sp, #16]
   25084:	ldr	r3, [r6], #4
   25088:	mov	r7, sl
   2508c:	ldr	r0, [r5], #4
   25090:	sub	ip, r3, #1
   25094:	mov	r1, r5
   25098:	str	ip, [lr], #4
   2509c:	mov	r3, r1
   250a0:	ldr	r2, [r1, #-4]!
   250a4:	ldr	r3, [r3]
   250a8:	cmp	r1, r8
   250ac:	mul	ip, r2, ip
   250b0:	mul	r0, r3, r0
   250b4:	bne	2509c <GetDataSlab+0x3270>
   250b8:	ldr	r3, [sp, #32]
   250bc:	str	r0, [sl, #4]!
   250c0:	ldr	r1, [r7]
   250c4:	str	ip, [lr, #-4]
   250c8:	cmp	r6, r3
   250cc:	ldr	r3, [sp, #24]
   250d0:	ldr	r2, [r3, #4]!
   250d4:	mla	r4, r2, r1, r4
   250d8:	str	r3, [sp, #24]
   250dc:	ldr	r3, [fp, #4]!
   250e0:	ldr	r2, [sp, #16]
   250e4:	mul	r3, r3, r2
   250e8:	str	r3, [sp, #16]
   250ec:	bne	25084 <GetDataSlab+0x3258>
   250f0:	ldr	r3, [sp, #28]
   250f4:	cmp	r3, #1
   250f8:	ldr	r3, [sp, #8]
   250fc:	add	r6, r3, r4, lsl #2
   25100:	ldr	r3, [sp, #16]
   25104:	beq	3cf30 <GetDataSlab+0x1b104>
   25108:	cmp	r3, #0
   2510c:	ble	30874 <GetDataSlab+0xea48>
   25110:	ldr	r3, [r9]
   25114:	mov	fp, #0
   25118:	mov	sl, fp
   2511c:	ldr	r2, [sp, #20]
   25120:	ldr	r1, [sp, #20]
   25124:	str	r3, [sp, #8]
   25128:	ldr	r3, [sp, #28]
   2512c:	lsl	r2, r2, #3
   25130:	str	r2, [sp, #32]
   25134:	lsl	r7, r3, #2
   25138:	ldr	r3, [sp, #20]
   2513c:	ldr	r2, [sp, #28]
   25140:	sub	r3, r3, #1
   25144:	mul	r3, r2, r3
   25148:	ldr	r2, [sp, #32]
   2514c:	str	r3, [sp, #44]	; 0x2c
   25150:	ldr	r3, [sp, #20]
   25154:	mul	r3, r3, r7
   25158:	str	r3, [sp, #40]	; 0x28
   2515c:	ldr	r3, [sp, #4]
   25160:	add	r8, r3, r2
   25164:	ldr	r2, [sp, #8]
   25168:	ldr	r3, [sp, #36]	; 0x24
   2516c:	sub	r3, r3, r2
   25170:	lsl	r2, r2, #2
   25174:	str	r2, [sp, #48]	; 0x30
   25178:	ldr	r2, [sp, #28]
   2517c:	mls	r3, r1, r2, r3
   25180:	str	r3, [sp, #24]
   25184:	lsl	r3, r3, #2
   25188:	str	r3, [sp, #36]	; 0x24
   2518c:	ldr	r3, [sp, #8]
   25190:	cmp	r3, #0
   25194:	beq	251a8 <GetDataSlab+0x337c>
   25198:	ldr	r3, [sp, #48]	; 0x30
   2519c:	add	r6, r6, r3
   251a0:	ldr	r3, [sp, #8]
   251a4:	add	r4, r4, r3
   251a8:	ldr	r3, [sp, #20]
   251ac:	cmp	r3, #0
   251b0:	ble	251f0 <GetDataSlab+0x33c4>
   251b4:	ldr	r3, [sp, #4]
   251b8:	mov	r0, r6
   251bc:	add	r1, r3, fp, lsl #3
   251c0:	ldr	r3, [r0], r7
   251c4:	mov	r2, r3
   251c8:	asr	r3, r3, #31
   251cc:	strd	r2, [r1], #8
   251d0:	cmp	r1, r8
   251d4:	bne	251c0 <GetDataSlab+0x3394>
   251d8:	ldr	r3, [sp, #28]
   251dc:	ldr	r2, [sp, #40]	; 0x28
   251e0:	add	r3, r3, r4
   251e4:	add	r6, r6, r2
   251e8:	ldr	r2, [sp, #44]	; 0x2c
   251ec:	add	r4, r2, r3
   251f0:	ldr	r3, [sp, #232]	; 0xe8
   251f4:	cmp	r3, #1
   251f8:	ldr	r3, [sp, #24]
   251fc:	add	r4, r4, r3
   25200:	ldr	r3, [sp, #36]	; 0x24
   25204:	add	r6, r6, r3
   25208:	ble	345fc <GetDataSlab+0x127d0>
   2520c:	ldr	r3, [sp, #100]	; 0x64
   25210:	ldr	r2, [sp, #228]	; 0xe4
   25214:	add	r3, r3, #1
   25218:	ldr	r1, [r2, #4]
   2521c:	str	r3, [sp, #100]	; 0x64
   25220:	sdiv	r2, r3, r1
   25224:	mls	r3, r1, r2, r3
   25228:	cmp	r3, #0
   2522c:	bne	345e4 <GetDataSlab+0x127b8>
   25230:	add	ip, sp, #100	; 0x64
   25234:	mov	r0, #1
   25238:	ldr	lr, [sp, #12]
   2523c:	ldr	r3, [sp, #228]	; 0xe4
   25240:	add	r5, r3, #4
   25244:	b	2528c <GetDataSlab+0x3460>
   25248:	ldr	r3, [lr, #-4]
   2524c:	ldr	r1, [r9, r0, lsl #2]
   25250:	mla	r3, r1, r3, r2
   25254:	add	r6, r6, r3, lsl #2
   25258:	add	r4, r4, r3
   2525c:	ldr	r3, [sp, #232]	; 0xe8
   25260:	add	r0, r0, #1
   25264:	cmp	r3, r0
   25268:	beq	345fc <GetDataSlab+0x127d0>
   2526c:	ldr	r3, [ip]
   25270:	ldr	r1, [r5, #4]!
   25274:	add	r3, r3, #1
   25278:	sdiv	r2, r3, r1
   2527c:	str	r3, [ip]
   25280:	mls	r3, r1, r2, r3
   25284:	cmp	r3, #0
   25288:	bne	345e8 <GetDataSlab+0x127bc>
   2528c:	ldr	r2, [lr, #4]!
   25290:	str	sl, [ip], #4
   25294:	sdiv	r3, r4, r2
   25298:	mls	r3, r2, r3, r4
   2529c:	cmp	r3, #0
   252a0:	sub	r2, r2, r3
   252a4:	bne	25248 <GetDataSlab+0x341c>
   252a8:	ldr	r3, [r9, r0, lsl #2]
   252ac:	cmp	r3, #0
   252b0:	beq	2525c <GetDataSlab+0x3430>
   252b4:	ldr	r2, [lr, #-4]
   252b8:	mul	r3, r2, r3
   252bc:	add	r6, r6, r3, lsl #2
   252c0:	add	r4, r4, r3
   252c4:	b	2525c <GetDataSlab+0x3430>
   252c8:	ldr	r3, [sl]
   252cc:	str	r3, [sp, #28]
   252d0:	ldr	r3, [sp, #232]	; 0xe8
   252d4:	cmp	r3, #1
   252d8:	ldr	r3, [r8]
   252dc:	str	r3, [sp, #36]	; 0x24
   252e0:	ldr	r3, [sp, #228]	; 0xe4
   252e4:	ldr	r3, [r3]
   252e8:	str	r3, [sp, #20]
   252ec:	ldr	r3, [sp, #28]
   252f0:	sub	r3, r3, #1
   252f4:	str	r3, [sp, #56]	; 0x38
   252f8:	ldr	r3, [sp, #36]	; 0x24
   252fc:	str	r3, [sp, #136]	; 0x88
   25300:	ble	3f94c <GetDataSlab+0x1db20>
   25304:	add	r6, sl, #4
   25308:	ldr	fp, [sp, #228]	; 0xe4
   2530c:	add	lr, sp, #60	; 0x3c
   25310:	mov	r5, r8
   25314:	mov	r4, #0
   25318:	str	r9, [sp, #24]
   2531c:	ldr	r3, [sp, #232]	; 0xe8
   25320:	add	r3, sl, r3, lsl #2
   25324:	ldr	sl, [sp, #12]
   25328:	str	r3, [sp, #32]
   2532c:	ldr	r3, [sp, #20]
   25330:	str	r3, [sp, #16]
   25334:	ldr	r3, [r6], #4
   25338:	mov	r7, sl
   2533c:	ldr	r0, [r5], #4
   25340:	sub	ip, r3, #1
   25344:	mov	r1, r5
   25348:	str	ip, [lr], #4
   2534c:	mov	r3, r1
   25350:	ldr	r2, [r1, #-4]!
   25354:	ldr	r3, [r3]
   25358:	cmp	r1, r8
   2535c:	mul	ip, r2, ip
   25360:	mul	r0, r3, r0
   25364:	bne	2534c <GetDataSlab+0x3520>
   25368:	ldr	r3, [sp, #32]
   2536c:	str	r0, [sl, #4]!
   25370:	ldr	r1, [r7]
   25374:	str	ip, [lr, #-4]
   25378:	cmp	r6, r3
   2537c:	ldr	r3, [sp, #24]
   25380:	ldr	r2, [r3, #4]!
   25384:	mla	r4, r2, r1, r4
   25388:	str	r3, [sp, #24]
   2538c:	ldr	r3, [fp, #4]!
   25390:	ldr	r2, [sp, #16]
   25394:	mul	r3, r3, r2
   25398:	str	r3, [sp, #16]
   2539c:	bne	25334 <GetDataSlab+0x3508>
   253a0:	ldr	r3, [sp, #28]
   253a4:	cmp	r3, #1
   253a8:	ldr	r3, [sp, #8]
   253ac:	add	r6, r3, r4, lsl #1
   253b0:	ldr	r3, [sp, #16]
   253b4:	beq	39afc <GetDataSlab+0x17cd0>
   253b8:	cmp	r3, #0
   253bc:	ble	30874 <GetDataSlab+0xea48>
   253c0:	ldr	r3, [r9]
   253c4:	mov	fp, #0
   253c8:	mov	sl, fp
   253cc:	ldr	r2, [sp, #20]
   253d0:	ldr	r1, [sp, #20]
   253d4:	str	r3, [sp, #8]
   253d8:	ldr	r3, [sp, #28]
   253dc:	lsl	r2, r2, #3
   253e0:	str	r2, [sp, #32]
   253e4:	lsl	r7, r3, #1
   253e8:	ldr	r3, [sp, #20]
   253ec:	ldr	r2, [sp, #28]
   253f0:	sub	r3, r3, #1
   253f4:	mul	r3, r2, r3
   253f8:	ldr	r2, [sp, #32]
   253fc:	str	r3, [sp, #44]	; 0x2c
   25400:	ldr	r3, [sp, #20]
   25404:	mul	r3, r3, r7
   25408:	str	r3, [sp, #40]	; 0x28
   2540c:	ldr	r3, [sp, #4]
   25410:	add	r8, r3, r2
   25414:	ldr	r2, [sp, #8]
   25418:	ldr	r3, [sp, #36]	; 0x24
   2541c:	sub	r3, r3, r2
   25420:	lsl	r2, r2, #1
   25424:	str	r2, [sp, #48]	; 0x30
   25428:	ldr	r2, [sp, #28]
   2542c:	mls	r3, r1, r2, r3
   25430:	str	r3, [sp, #24]
   25434:	lsl	r3, r3, #1
   25438:	str	r3, [sp, #36]	; 0x24
   2543c:	ldr	r3, [sp, #8]
   25440:	cmp	r3, #0
   25444:	beq	25458 <GetDataSlab+0x362c>
   25448:	ldr	r3, [sp, #48]	; 0x30
   2544c:	add	r6, r6, r3
   25450:	ldr	r3, [sp, #8]
   25454:	add	r4, r4, r3
   25458:	ldr	r3, [sp, #20]
   2545c:	cmp	r3, #0
   25460:	ble	2549c <GetDataSlab+0x3670>
   25464:	ldr	r3, [sp, #4]
   25468:	mov	r0, r6
   2546c:	add	r1, r3, fp, lsl #3
   25470:	ldrh	r2, [r0], r7
   25474:	mov	r3, #0
   25478:	strd	r2, [r1], #8
   2547c:	cmp	r1, r8
   25480:	bne	25470 <GetDataSlab+0x3644>
   25484:	ldr	r3, [sp, #28]
   25488:	ldr	r2, [sp, #40]	; 0x28
   2548c:	add	r3, r3, r4
   25490:	add	r6, r6, r2
   25494:	ldr	r2, [sp, #44]	; 0x2c
   25498:	add	r4, r2, r3
   2549c:	ldr	r3, [sp, #232]	; 0xe8
   254a0:	cmp	r3, #1
   254a4:	ldr	r3, [sp, #24]
   254a8:	add	r4, r4, r3
   254ac:	ldr	r3, [sp, #36]	; 0x24
   254b0:	add	r6, r6, r3
   254b4:	ble	345c4 <GetDataSlab+0x12798>
   254b8:	ldr	r3, [sp, #100]	; 0x64
   254bc:	ldr	r2, [sp, #228]	; 0xe4
   254c0:	add	r3, r3, #1
   254c4:	ldr	r1, [r2, #4]
   254c8:	str	r3, [sp, #100]	; 0x64
   254cc:	sdiv	r2, r3, r1
   254d0:	mls	r3, r1, r2, r3
   254d4:	cmp	r3, #0
   254d8:	bne	345ac <GetDataSlab+0x12780>
   254dc:	add	ip, sp, #100	; 0x64
   254e0:	mov	r0, #1
   254e4:	ldr	lr, [sp, #12]
   254e8:	ldr	r3, [sp, #228]	; 0xe4
   254ec:	add	r5, r3, #4
   254f0:	b	25538 <GetDataSlab+0x370c>
   254f4:	ldr	r3, [lr, #-4]
   254f8:	ldr	r1, [r9, r0, lsl #2]
   254fc:	mla	r3, r1, r3, r2
   25500:	add	r6, r6, r3, lsl #1
   25504:	add	r4, r4, r3
   25508:	ldr	r3, [sp, #232]	; 0xe8
   2550c:	add	r0, r0, #1
   25510:	cmp	r3, r0
   25514:	beq	345c4 <GetDataSlab+0x12798>
   25518:	ldr	r3, [ip]
   2551c:	ldr	r1, [r5, #4]!
   25520:	add	r3, r3, #1
   25524:	sdiv	r2, r3, r1
   25528:	str	r3, [ip]
   2552c:	mls	r3, r1, r2, r3
   25530:	cmp	r3, #0
   25534:	bne	345b0 <GetDataSlab+0x12784>
   25538:	ldr	r2, [lr, #4]!
   2553c:	str	sl, [ip], #4
   25540:	sdiv	r3, r4, r2
   25544:	mls	r3, r2, r3, r4
   25548:	cmp	r3, #0
   2554c:	sub	r2, r2, r3
   25550:	bne	254f4 <GetDataSlab+0x36c8>
   25554:	ldr	r3, [r9, r0, lsl #2]
   25558:	cmp	r3, #0
   2555c:	beq	25508 <GetDataSlab+0x36dc>
   25560:	ldr	r2, [lr, #-4]
   25564:	mul	r3, r2, r3
   25568:	add	r6, r6, r3, lsl #1
   2556c:	add	r4, r4, r3
   25570:	b	25508 <GetDataSlab+0x36dc>
   25574:	ldr	r3, [sl]
   25578:	str	r3, [sp, #28]
   2557c:	ldr	r3, [sp, #232]	; 0xe8
   25580:	cmp	r3, #1
   25584:	ldr	r3, [r8]
   25588:	str	r3, [sp, #36]	; 0x24
   2558c:	ldr	r3, [sp, #228]	; 0xe4
   25590:	ldr	r3, [r3]
   25594:	str	r3, [sp, #20]
   25598:	ldr	r3, [sp, #28]
   2559c:	sub	r3, r3, #1
   255a0:	str	r3, [sp, #56]	; 0x38
   255a4:	ldr	r3, [sp, #36]	; 0x24
   255a8:	str	r3, [sp, #136]	; 0x88
   255ac:	ble	3f96c <GetDataSlab+0x1db40>
   255b0:	add	r6, sl, #4
   255b4:	ldr	fp, [sp, #228]	; 0xe4
   255b8:	add	lr, sp, #60	; 0x3c
   255bc:	mov	r5, r8
   255c0:	mov	r4, #0
   255c4:	str	r9, [sp, #24]
   255c8:	ldr	r3, [sp, #232]	; 0xe8
   255cc:	add	r3, sl, r3, lsl #2
   255d0:	ldr	sl, [sp, #12]
   255d4:	str	r3, [sp, #32]
   255d8:	ldr	r3, [sp, #20]
   255dc:	str	r3, [sp, #16]
   255e0:	ldr	r3, [r6], #4
   255e4:	mov	r7, sl
   255e8:	ldr	r0, [r5], #4
   255ec:	sub	ip, r3, #1
   255f0:	mov	r1, r5
   255f4:	str	ip, [lr], #4
   255f8:	mov	r3, r1
   255fc:	ldr	r2, [r1, #-4]!
   25600:	ldr	r3, [r3]
   25604:	cmp	r1, r8
   25608:	mul	ip, r2, ip
   2560c:	mul	r0, r3, r0
   25610:	bne	255f8 <GetDataSlab+0x37cc>
   25614:	ldr	r3, [sp, #32]
   25618:	str	r0, [sl, #4]!
   2561c:	ldr	r1, [r7]
   25620:	str	ip, [lr, #-4]
   25624:	cmp	r6, r3
   25628:	ldr	r3, [sp, #24]
   2562c:	ldr	r2, [r3, #4]!
   25630:	mla	r4, r2, r1, r4
   25634:	str	r3, [sp, #24]
   25638:	ldr	r3, [fp, #4]!
   2563c:	ldr	r2, [sp, #16]
   25640:	mul	r3, r3, r2
   25644:	str	r3, [sp, #16]
   25648:	bne	255e0 <GetDataSlab+0x37b4>
   2564c:	ldr	r3, [sp, #28]
   25650:	cmp	r3, #1
   25654:	ldr	r3, [sp, #8]
   25658:	add	r6, r3, r4, lsl #1
   2565c:	ldr	r3, [sp, #16]
   25660:	beq	39810 <GetDataSlab+0x179e4>
   25664:	cmp	r3, #0
   25668:	ble	30874 <GetDataSlab+0xea48>
   2566c:	ldr	r3, [r9]
   25670:	mov	fp, #0
   25674:	mov	sl, fp
   25678:	ldr	r2, [sp, #20]
   2567c:	ldr	r1, [sp, #20]
   25680:	str	r3, [sp, #8]
   25684:	ldr	r3, [sp, #28]
   25688:	lsl	r2, r2, #3
   2568c:	str	r2, [sp, #32]
   25690:	lsl	r7, r3, #1
   25694:	ldr	r3, [sp, #20]
   25698:	ldr	r2, [sp, #28]
   2569c:	sub	r3, r3, #1
   256a0:	mul	r3, r2, r3
   256a4:	ldr	r2, [sp, #32]
   256a8:	str	r3, [sp, #40]	; 0x28
   256ac:	ldr	r3, [sp, #20]
   256b0:	mul	r3, r3, r7
   256b4:	str	r3, [sp, #44]	; 0x2c
   256b8:	ldr	r3, [sp, #4]
   256bc:	add	r8, r3, r2
   256c0:	ldr	r2, [sp, #8]
   256c4:	ldr	r3, [sp, #36]	; 0x24
   256c8:	sub	r3, r3, r2
   256cc:	lsl	r2, r2, #1
   256d0:	str	r2, [sp, #48]	; 0x30
   256d4:	ldr	r2, [sp, #28]
   256d8:	mls	r3, r1, r2, r3
   256dc:	str	r3, [sp, #24]
   256e0:	lsl	r3, r3, #1
   256e4:	str	r3, [sp, #36]	; 0x24
   256e8:	ldr	r3, [sp, #8]
   256ec:	cmp	r3, #0
   256f0:	beq	25704 <GetDataSlab+0x38d8>
   256f4:	ldr	r3, [sp, #48]	; 0x30
   256f8:	add	r6, r6, r3
   256fc:	ldr	r3, [sp, #8]
   25700:	add	r4, r4, r3
   25704:	ldr	r3, [sp, #20]
   25708:	cmp	r3, #0
   2570c:	ble	25748 <GetDataSlab+0x391c>
   25710:	ldr	r3, [sp, #4]
   25714:	mov	r0, r6
   25718:	add	r1, r3, fp, lsl #3
   2571c:	ldrsh	r2, [r0], r7
   25720:	asr	r3, r2, #31
   25724:	strd	r2, [r1], #8
   25728:	cmp	r1, r8
   2572c:	bne	2571c <GetDataSlab+0x38f0>
   25730:	ldr	r3, [sp, #28]
   25734:	ldr	r2, [sp, #44]	; 0x2c
   25738:	add	r3, r3, r4
   2573c:	add	r6, r6, r2
   25740:	ldr	r2, [sp, #40]	; 0x28
   25744:	add	r4, r2, r3
   25748:	ldr	r3, [sp, #232]	; 0xe8
   2574c:	cmp	r3, #1
   25750:	ldr	r3, [sp, #24]
   25754:	add	r4, r4, r3
   25758:	ldr	r3, [sp, #36]	; 0x24
   2575c:	add	r6, r6, r3
   25760:	ble	3458c <GetDataSlab+0x12760>
   25764:	ldr	r3, [sp, #100]	; 0x64
   25768:	ldr	r2, [sp, #228]	; 0xe4
   2576c:	add	r3, r3, #1
   25770:	ldr	r1, [r2, #4]
   25774:	str	r3, [sp, #100]	; 0x64
   25778:	sdiv	r2, r3, r1
   2577c:	mls	r3, r1, r2, r3
   25780:	cmp	r3, #0
   25784:	bne	34574 <GetDataSlab+0x12748>
   25788:	add	ip, sp, #100	; 0x64
   2578c:	mov	r0, #1
   25790:	ldr	lr, [sp, #12]
   25794:	ldr	r3, [sp, #228]	; 0xe4
   25798:	add	r5, r3, #4
   2579c:	b	257e4 <GetDataSlab+0x39b8>
   257a0:	ldr	r3, [lr, #-4]
   257a4:	ldr	r1, [r9, r0, lsl #2]
   257a8:	mla	r3, r1, r3, r2
   257ac:	add	r6, r6, r3, lsl #1
   257b0:	add	r4, r4, r3
   257b4:	ldr	r3, [sp, #232]	; 0xe8
   257b8:	add	r0, r0, #1
   257bc:	cmp	r3, r0
   257c0:	beq	3458c <GetDataSlab+0x12760>
   257c4:	ldr	r3, [ip]
   257c8:	ldr	r1, [r5, #4]!
   257cc:	add	r3, r3, #1
   257d0:	sdiv	r2, r3, r1
   257d4:	str	r3, [ip]
   257d8:	mls	r3, r1, r2, r3
   257dc:	cmp	r3, #0
   257e0:	bne	34578 <GetDataSlab+0x1274c>
   257e4:	ldr	r2, [lr, #4]!
   257e8:	str	sl, [ip], #4
   257ec:	sdiv	r3, r4, r2
   257f0:	mls	r3, r2, r3, r4
   257f4:	cmp	r3, #0
   257f8:	sub	r2, r2, r3
   257fc:	bne	257a0 <GetDataSlab+0x3974>
   25800:	ldr	r3, [r9, r0, lsl #2]
   25804:	cmp	r3, #0
   25808:	beq	257b4 <GetDataSlab+0x3988>
   2580c:	ldr	r2, [lr, #-4]
   25810:	mul	r3, r2, r3
   25814:	add	r6, r6, r3, lsl #1
   25818:	add	r4, r4, r3
   2581c:	b	257b4 <GetDataSlab+0x3988>
   25820:	ldr	r3, [sp, #232]	; 0xe8
   25824:	ldr	r7, [sl]
   25828:	cmp	r3, #1
   2582c:	ldr	r3, [r8]
   25830:	str	r3, [sp, #40]	; 0x28
   25834:	ldr	r3, [sp, #228]	; 0xe4
   25838:	ldr	r3, [r3]
   2583c:	str	r3, [sp, #20]
   25840:	sub	r3, r7, #1
   25844:	str	r3, [sp, #56]	; 0x38
   25848:	ldr	r3, [sp, #40]	; 0x28
   2584c:	str	r3, [sp, #136]	; 0x88
   25850:	ble	3f95c <GetDataSlab+0x1db30>
   25854:	ldr	fp, [sp, #12]
   25858:	add	r6, sl, #4
   2585c:	add	lr, sp, #60	; 0x3c
   25860:	mov	r5, r8
   25864:	mov	r4, #0
   25868:	str	r9, [sp, #28]
   2586c:	ldr	r3, [sp, #232]	; 0xe8
   25870:	add	r3, sl, r3, lsl #2
   25874:	str	r3, [sp, #32]
   25878:	ldr	r3, [sp, #228]	; 0xe4
   2587c:	str	r3, [sp, #24]
   25880:	ldr	r3, [sp, #20]
   25884:	str	r3, [sp, #16]
   25888:	ldr	r3, [r6], #4
   2588c:	mov	sl, fp
   25890:	ldr	r0, [r5], #4
   25894:	sub	ip, r3, #1
   25898:	mov	r1, r5
   2589c:	str	ip, [lr], #4
   258a0:	mov	r3, r1
   258a4:	ldr	r2, [r1, #-4]!
   258a8:	ldr	r3, [r3]
   258ac:	cmp	r1, r8
   258b0:	mul	ip, r2, ip
   258b4:	mul	r0, r3, r0
   258b8:	bne	258a0 <GetDataSlab+0x3a74>
   258bc:	ldr	r3, [sp, #32]
   258c0:	str	r0, [fp, #4]!
   258c4:	ldr	r1, [sl]
   258c8:	str	ip, [lr, #-4]
   258cc:	ldr	r0, [sp, #24]
   258d0:	cmp	r6, r3
   258d4:	ldr	r3, [sp, #28]
   258d8:	ldr	r2, [r3, #4]!
   258dc:	mla	r4, r2, r1, r4
   258e0:	str	r3, [sp, #28]
   258e4:	ldr	r3, [r0, #4]!
   258e8:	ldr	r2, [sp, #16]
   258ec:	str	r0, [sp, #24]
   258f0:	mul	r3, r3, r2
   258f4:	str	r3, [sp, #16]
   258f8:	bne	25888 <GetDataSlab+0x3a5c>
   258fc:	ldr	r3, [sp, #8]
   25900:	cmp	r7, #1
   25904:	add	r5, r3, r4
   25908:	ldr	r3, [sp, #16]
   2590c:	beq	39994 <GetDataSlab+0x17b68>
   25910:	cmp	r3, #0
   25914:	ble	30874 <GetDataSlab+0xea48>
   25918:	ldr	r3, [r9]
   2591c:	mov	fp, #0
   25920:	mov	sl, fp
   25924:	ldr	r2, [sp, #20]
   25928:	str	r3, [sp, #8]
   2592c:	ldr	r3, [sp, #20]
   25930:	lsl	r2, r2, #3
   25934:	str	r2, [sp, #28]
   25938:	mul	r3, r3, r7
   2593c:	str	r3, [sp, #32]
   25940:	ldr	r3, [sp, #20]
   25944:	sub	r3, r3, #1
   25948:	mul	r3, r7, r3
   2594c:	str	r3, [sp, #36]	; 0x24
   25950:	ldr	r3, [sp, #4]
   25954:	add	r8, r3, r2
   25958:	ldr	r2, [sp, #8]
   2595c:	ldr	r3, [sp, #40]	; 0x28
   25960:	sub	r3, r3, r2
   25964:	ldr	r2, [sp, #32]
   25968:	sub	r3, r3, r2
   2596c:	str	r3, [sp, #24]
   25970:	ldr	r3, [sp, #8]
   25974:	cmp	r3, #0
   25978:	addne	r5, r5, r3
   2597c:	addne	r4, r4, r3
   25980:	ldr	r3, [sp, #20]
   25984:	cmp	r3, #0
   25988:	ble	259c0 <GetDataSlab+0x3b94>
   2598c:	ldr	r3, [sp, #4]
   25990:	mov	r0, r5
   25994:	add	r1, r3, fp, lsl #3
   25998:	ldrb	r2, [r0], r7
   2599c:	mov	r3, #0
   259a0:	strd	r2, [r1], #8
   259a4:	cmp	r1, r8
   259a8:	bne	25998 <GetDataSlab+0x3b6c>
   259ac:	ldr	r2, [sp, #32]
   259b0:	add	r3, r7, r4
   259b4:	add	r5, r5, r2
   259b8:	ldr	r2, [sp, #36]	; 0x24
   259bc:	add	r4, r2, r3
   259c0:	ldr	r3, [sp, #232]	; 0xe8
   259c4:	cmp	r3, #1
   259c8:	ldr	r3, [sp, #24]
   259cc:	add	r4, r4, r3
   259d0:	add	r5, r5, r3
   259d4:	ble	34554 <GetDataSlab+0x12728>
   259d8:	ldr	r3, [sp, #100]	; 0x64
   259dc:	ldr	r2, [sp, #228]	; 0xe4
   259e0:	add	r3, r3, #1
   259e4:	ldr	r1, [r2, #4]
   259e8:	str	r3, [sp, #100]	; 0x64
   259ec:	sdiv	r2, r3, r1
   259f0:	mls	r3, r1, r2, r3
   259f4:	cmp	r3, #0
   259f8:	bne	3453c <GetDataSlab+0x12710>
   259fc:	add	ip, sp, #100	; 0x64
   25a00:	mov	r0, #1
   25a04:	ldr	lr, [sp, #12]
   25a08:	ldr	r3, [sp, #228]	; 0xe4
   25a0c:	add	r6, r3, #4
   25a10:	b	25a58 <GetDataSlab+0x3c2c>
   25a14:	ldr	r3, [lr, #-4]
   25a18:	ldr	r1, [r9, r0, lsl #2]
   25a1c:	mla	r3, r1, r3, r2
   25a20:	add	r5, r5, r3
   25a24:	add	r4, r4, r3
   25a28:	ldr	r3, [sp, #232]	; 0xe8
   25a2c:	add	r0, r0, #1
   25a30:	cmp	r3, r0
   25a34:	beq	34554 <GetDataSlab+0x12728>
   25a38:	ldr	r3, [ip]
   25a3c:	ldr	r1, [r6, #4]!
   25a40:	add	r3, r3, #1
   25a44:	sdiv	r2, r3, r1
   25a48:	str	r3, [ip]
   25a4c:	mls	r3, r1, r2, r3
   25a50:	cmp	r3, #0
   25a54:	bne	34540 <GetDataSlab+0x12714>
   25a58:	ldr	r2, [lr, #4]!
   25a5c:	str	sl, [ip], #4
   25a60:	sdiv	r3, r4, r2
   25a64:	mls	r3, r2, r3, r4
   25a68:	cmp	r3, #0
   25a6c:	sub	r2, r2, r3
   25a70:	bne	25a14 <GetDataSlab+0x3be8>
   25a74:	ldr	r3, [r9, r0, lsl #2]
   25a78:	cmp	r3, #0
   25a7c:	beq	25a28 <GetDataSlab+0x3bfc>
   25a80:	ldr	r2, [lr, #-4]
   25a84:	mul	r3, r2, r3
   25a88:	add	r5, r5, r3
   25a8c:	add	r4, r4, r3
   25a90:	b	25a28 <GetDataSlab+0x3bfc>
   25a94:	ldr	r3, [sp, #232]	; 0xe8
   25a98:	ldr	r7, [sl]
   25a9c:	cmp	r3, #1
   25aa0:	ldr	r3, [r8]
   25aa4:	str	r3, [sp, #40]	; 0x28
   25aa8:	ldr	r3, [sp, #228]	; 0xe4
   25aac:	ldr	r3, [r3]
   25ab0:	str	r3, [sp, #20]
   25ab4:	sub	r3, r7, #1
   25ab8:	str	r3, [sp, #56]	; 0x38
   25abc:	ldr	r3, [sp, #40]	; 0x28
   25ac0:	str	r3, [sp, #136]	; 0x88
   25ac4:	ble	3fc8c <GetDataSlab+0x1de60>
   25ac8:	ldr	fp, [sp, #12]
   25acc:	add	r6, sl, #4
   25ad0:	add	lr, sp, #60	; 0x3c
   25ad4:	mov	r5, r8
   25ad8:	mov	r4, #0
   25adc:	str	r9, [sp, #28]
   25ae0:	ldr	r3, [sp, #232]	; 0xe8
   25ae4:	add	r3, sl, r3, lsl #2
   25ae8:	str	r3, [sp, #32]
   25aec:	ldr	r3, [sp, #228]	; 0xe4
   25af0:	str	r3, [sp, #24]
   25af4:	ldr	r3, [sp, #20]
   25af8:	str	r3, [sp, #16]
   25afc:	ldr	r3, [r6], #4
   25b00:	mov	sl, fp
   25b04:	ldr	r0, [r5], #4
   25b08:	sub	ip, r3, #1
   25b0c:	mov	r1, r5
   25b10:	str	ip, [lr], #4
   25b14:	mov	r3, r1
   25b18:	ldr	r2, [r1, #-4]!
   25b1c:	ldr	r3, [r3]
   25b20:	cmp	r1, r8
   25b24:	mul	ip, r2, ip
   25b28:	mul	r0, r3, r0
   25b2c:	bne	25b14 <GetDataSlab+0x3ce8>
   25b30:	ldr	r3, [sp, #32]
   25b34:	str	r0, [fp, #4]!
   25b38:	ldr	r1, [sl]
   25b3c:	str	ip, [lr, #-4]
   25b40:	ldr	r0, [sp, #24]
   25b44:	cmp	r6, r3
   25b48:	ldr	r3, [sp, #28]
   25b4c:	ldr	r2, [r3, #4]!
   25b50:	mla	r4, r2, r1, r4
   25b54:	str	r3, [sp, #28]
   25b58:	ldr	r3, [r0, #4]!
   25b5c:	ldr	r2, [sp, #16]
   25b60:	str	r0, [sp, #24]
   25b64:	mul	r3, r3, r2
   25b68:	str	r3, [sp, #16]
   25b6c:	bne	25afc <GetDataSlab+0x3cd0>
   25b70:	ldr	r3, [sp, #8]
   25b74:	cmp	r7, #1
   25b78:	add	r5, r3, r4
   25b7c:	ldr	r3, [sp, #16]
   25b80:	beq	3d514 <GetDataSlab+0x1b6e8>
   25b84:	cmp	r3, #0
   25b88:	ble	30874 <GetDataSlab+0xea48>
   25b8c:	ldr	r3, [r9]
   25b90:	mov	fp, #0
   25b94:	mov	sl, fp
   25b98:	ldr	r2, [sp, #20]
   25b9c:	str	r3, [sp, #8]
   25ba0:	ldr	r3, [sp, #20]
   25ba4:	lsl	r2, r2, #3
   25ba8:	str	r2, [sp, #28]
   25bac:	mul	r3, r7, r3
   25bb0:	str	r3, [sp, #32]
   25bb4:	ldr	r3, [sp, #20]
   25bb8:	sub	r3, r3, #1
   25bbc:	mul	r3, r7, r3
   25bc0:	str	r3, [sp, #36]	; 0x24
   25bc4:	ldr	r3, [sp, #4]
   25bc8:	add	r8, r3, r2
   25bcc:	ldr	r2, [sp, #8]
   25bd0:	ldr	r3, [sp, #40]	; 0x28
   25bd4:	sub	r3, r3, r2
   25bd8:	ldr	r2, [sp, #32]
   25bdc:	sub	r3, r3, r2
   25be0:	str	r3, [sp, #24]
   25be4:	ldr	r3, [sp, #8]
   25be8:	cmp	r3, #0
   25bec:	addne	r5, r5, r3
   25bf0:	addne	r4, r4, r3
   25bf4:	ldr	r3, [sp, #20]
   25bf8:	cmp	r3, #0
   25bfc:	ble	25c34 <GetDataSlab+0x3e08>
   25c00:	ldr	r3, [sp, #4]
   25c04:	mov	r0, r5
   25c08:	add	r1, r3, fp, lsl #3
   25c0c:	ldrsb	r2, [r0], r7
   25c10:	asr	r3, r2, #31
   25c14:	strd	r2, [r1], #8
   25c18:	cmp	r1, r8
   25c1c:	bne	25c0c <GetDataSlab+0x3de0>
   25c20:	ldr	r2, [sp, #32]
   25c24:	add	r3, r7, r4
   25c28:	add	r5, r5, r2
   25c2c:	ldr	r2, [sp, #36]	; 0x24
   25c30:	add	r4, r3, r2
   25c34:	ldr	r3, [sp, #232]	; 0xe8
   25c38:	cmp	r3, #1
   25c3c:	ldr	r3, [sp, #24]
   25c40:	add	r4, r4, r3
   25c44:	add	r5, r5, r3
   25c48:	ble	3451c <GetDataSlab+0x126f0>
   25c4c:	ldr	r3, [sp, #100]	; 0x64
   25c50:	ldr	r2, [sp, #228]	; 0xe4
   25c54:	add	r3, r3, #1
   25c58:	ldr	r1, [r2, #4]
   25c5c:	str	r3, [sp, #100]	; 0x64
   25c60:	sdiv	r2, r3, r1
   25c64:	mls	r3, r1, r2, r3
   25c68:	cmp	r3, #0
   25c6c:	bne	34504 <GetDataSlab+0x126d8>
   25c70:	add	ip, sp, #100	; 0x64
   25c74:	mov	r0, #1
   25c78:	ldr	lr, [sp, #12]
   25c7c:	ldr	r3, [sp, #228]	; 0xe4
   25c80:	add	r6, r3, #4
   25c84:	b	25ccc <GetDataSlab+0x3ea0>
   25c88:	ldr	r3, [lr, #-4]
   25c8c:	ldr	r1, [r9, r0, lsl #2]
   25c90:	mla	r3, r1, r3, r2
   25c94:	add	r5, r5, r3
   25c98:	add	r4, r4, r3
   25c9c:	ldr	r3, [sp, #232]	; 0xe8
   25ca0:	add	r0, r0, #1
   25ca4:	cmp	r3, r0
   25ca8:	beq	3451c <GetDataSlab+0x126f0>
   25cac:	ldr	r3, [ip]
   25cb0:	ldr	r1, [r6, #4]!
   25cb4:	add	r3, r3, #1
   25cb8:	sdiv	r2, r3, r1
   25cbc:	str	r3, [ip]
   25cc0:	mls	r3, r1, r2, r3
   25cc4:	cmp	r3, #0
   25cc8:	bne	34508 <GetDataSlab+0x126dc>
   25ccc:	ldr	r2, [lr, #4]!
   25cd0:	str	sl, [ip], #4
   25cd4:	sdiv	r3, r4, r2
   25cd8:	mls	r3, r2, r3, r4
   25cdc:	cmp	r3, #0
   25ce0:	sub	r2, r2, r3
   25ce4:	bne	25c88 <GetDataSlab+0x3e5c>
   25ce8:	ldr	r3, [r9, r0, lsl #2]
   25cec:	cmp	r3, #0
   25cf0:	beq	25c9c <GetDataSlab+0x3e70>
   25cf4:	ldr	r2, [lr, #-4]
   25cf8:	mul	r3, r2, r3
   25cfc:	add	r5, r5, r3
   25d00:	add	r4, r4, r3
   25d04:	b	25c9c <GetDataSlab+0x3e70>
   25d08:	ldr	r3, [sp, #232]	; 0xe8
   25d0c:	ldr	r6, [sl]
   25d10:	cmp	r3, #1
   25d14:	ldr	r3, [r8]
   25d18:	str	r3, [sp, #16]
   25d1c:	ldr	r3, [sp, #228]	; 0xe4
   25d20:	ldr	fp, [r3]
   25d24:	sub	r3, r6, #1
   25d28:	str	r3, [sp, #56]	; 0x38
   25d2c:	ldr	r3, [sp, #16]
   25d30:	str	fp, [sp, #20]
   25d34:	str	r3, [sp, #136]	; 0x88
   25d38:	ble	3fccc <GetDataSlab+0x1dea0>
   25d3c:	ldr	r3, [sp, #232]	; 0xe8
   25d40:	add	r7, sl, #4
   25d44:	add	r5, sp, #60	; 0x3c
   25d48:	mov	r4, r8
   25d4c:	mov	lr, #0
   25d50:	str	r9, [sp, #32]
   25d54:	add	r3, sl, r3, lsl #2
   25d58:	str	r3, [sp, #40]	; 0x28
   25d5c:	ldr	r3, [sp, #12]
   25d60:	str	r3, [sp, #24]
   25d64:	ldr	r3, [sp, #228]	; 0xe4
   25d68:	str	r3, [sp, #28]
   25d6c:	ldr	r3, [r7], #4
   25d70:	ldr	r0, [r4], #4
   25d74:	ldr	r2, [sp, #24]
   25d78:	sub	ip, r3, #1
   25d7c:	mov	r1, r4
   25d80:	str	ip, [r5], #4
   25d84:	str	r2, [sp, #36]	; 0x24
   25d88:	mov	r3, r1
   25d8c:	ldr	r2, [r1, #-4]!
   25d90:	ldr	r3, [r3]
   25d94:	cmp	r1, r8
   25d98:	mul	ip, r2, ip
   25d9c:	mul	r0, r3, r0
   25da0:	bne	25d88 <GetDataSlab+0x3f5c>
   25da4:	ldr	r3, [sp, #24]
   25da8:	str	ip, [r5, #-4]
   25dac:	str	r0, [r3, #4]!
   25db0:	str	r3, [sp, #24]
   25db4:	ldr	r0, [sp, #28]
   25db8:	ldr	r3, [sp, #40]	; 0x28
   25dbc:	cmp	r7, r3
   25dc0:	ldr	r3, [sp, #36]	; 0x24
   25dc4:	ldr	r1, [r3]
   25dc8:	ldr	r3, [sp, #32]
   25dcc:	ldr	r2, [r3, #4]!
   25dd0:	mla	lr, r2, r1, lr
   25dd4:	str	r3, [sp, #32]
   25dd8:	ldr	r3, [r0, #4]!
   25ddc:	ldr	r2, [sp, #20]
   25de0:	str	r0, [sp, #28]
   25de4:	mul	r3, r3, r2
   25de8:	str	r3, [sp, #20]
   25dec:	bne	25d6c <GetDataSlab+0x3f40>
   25df0:	ldr	r3, [sp, #8]
   25df4:	cmp	r6, #1
   25df8:	add	r5, r3, lr, lsl #3
   25dfc:	ldr	r3, [sp, #20]
   25e00:	beq	3cdb8 <GetDataSlab+0x1af8c>
   25e04:	cmp	r3, #0
   25e08:	ble	30874 <GetDataSlab+0xea48>
   25e0c:	ldr	r3, [r9]
   25e10:	str	r3, [sp, #8]
   25e14:	mov	r3, #0
   25e18:	str	r3, [sp, #24]
   25e1c:	ldr	r3, [sp, #8]
   25e20:	cmp	r3, #0
   25e24:	beq	25e30 <GetDataSlab+0x4004>
   25e28:	add	r5, r5, r3, lsl #3
   25e2c:	add	lr, lr, r3
   25e30:	cmp	fp, #0
   25e34:	ble	25e84 <GetDataSlab+0x4058>
   25e38:	ldr	r3, [sp, #4]
   25e3c:	ldr	r2, [sp, #24]
   25e40:	add	r1, r3, r2, lsl #2
   25e44:	mov	r3, #0
   25e48:	vldr	d7, [r5]
   25e4c:	add	r3, r3, #1
   25e50:	ldr	r2, [sp, #228]	; 0xe4
   25e54:	vcvt.u32.f64	s15, d7
   25e58:	vstmia	r1!, {s15}
   25e5c:	ldr	fp, [r2]
   25e60:	ldr	r6, [sl]
   25e64:	cmp	fp, r3
   25e68:	add	r5, r5, r6, lsl #3
   25e6c:	add	lr, lr, r6
   25e70:	bgt	25e48 <GetDataSlab+0x401c>
   25e74:	ldr	r3, [r9]
   25e78:	str	r3, [sp, #8]
   25e7c:	ldr	r3, [r8]
   25e80:	str	r3, [sp, #16]
   25e84:	ldr	r2, [sp, #8]
   25e88:	ldr	r3, [sp, #16]
   25e8c:	sub	r3, r3, r2
   25e90:	ldr	r2, [sp, #232]	; 0xe8
   25e94:	mls	r3, r6, fp, r3
   25e98:	cmp	r2, #1
   25e9c:	add	lr, lr, r3
   25ea0:	add	r5, r5, r3, lsl #3
   25ea4:	ble	344ec <GetDataSlab+0x126c0>
   25ea8:	ldr	r3, [sp, #100]	; 0x64
   25eac:	ldr	r2, [sp, #228]	; 0xe4
   25eb0:	add	r3, r3, #1
   25eb4:	ldr	r1, [r2, #4]
   25eb8:	str	r3, [sp, #100]	; 0x64
   25ebc:	sdiv	r2, r3, r1
   25ec0:	mls	r3, r1, r2, r3
   25ec4:	cmp	r3, #0
   25ec8:	bne	344d4 <GetDataSlab+0x126a8>
   25ecc:	add	ip, sp, #100	; 0x64
   25ed0:	mov	r0, #1
   25ed4:	ldr	r4, [sp, #12]
   25ed8:	ldr	r3, [sp, #228]	; 0xe4
   25edc:	add	r7, r3, #4
   25ee0:	b	25f28 <GetDataSlab+0x40fc>
   25ee4:	ldr	r3, [r4, #-4]
   25ee8:	ldr	r1, [r9, r0, lsl #2]
   25eec:	mla	r3, r1, r3, r2
   25ef0:	add	r5, r5, r3, lsl #3
   25ef4:	add	lr, lr, r3
   25ef8:	ldr	r3, [sp, #232]	; 0xe8
   25efc:	add	r0, r0, #1
   25f00:	cmp	r3, r0
   25f04:	beq	344ec <GetDataSlab+0x126c0>
   25f08:	ldr	r3, [ip]
   25f0c:	ldr	r1, [r7, #4]!
   25f10:	add	r3, r3, #1
   25f14:	sdiv	r2, r3, r1
   25f18:	str	r3, [ip]
   25f1c:	mls	r3, r1, r2, r3
   25f20:	cmp	r3, #0
   25f24:	bne	344d8 <GetDataSlab+0x126ac>
   25f28:	ldr	r2, [r4, #4]!
   25f2c:	mov	r3, #0
   25f30:	str	r3, [ip], #4
   25f34:	sdiv	r3, lr, r2
   25f38:	mls	r3, r2, r3, lr
   25f3c:	cmp	r3, #0
   25f40:	sub	r2, r2, r3
   25f44:	bne	25ee4 <GetDataSlab+0x40b8>
   25f48:	ldr	r3, [r9, r0, lsl #2]
   25f4c:	cmp	r3, #0
   25f50:	beq	25ef8 <GetDataSlab+0x40cc>
   25f54:	ldr	r2, [r4, #-4]
   25f58:	mul	r3, r2, r3
   25f5c:	add	r5, r5, r3, lsl #3
   25f60:	add	lr, lr, r3
   25f64:	b	25ef8 <GetDataSlab+0x40cc>
   25f68:	ldr	r3, [sp, #232]	; 0xe8
   25f6c:	ldr	r6, [sl]
   25f70:	cmp	r3, #1
   25f74:	ldr	r3, [r8]
   25f78:	str	r3, [sp, #16]
   25f7c:	ldr	r3, [sp, #228]	; 0xe4
   25f80:	ldr	fp, [r3]
   25f84:	sub	r3, r6, #1
   25f88:	str	r3, [sp, #56]	; 0x38
   25f8c:	ldr	r3, [sp, #16]
   25f90:	str	fp, [sp, #20]
   25f94:	str	r3, [sp, #136]	; 0x88
   25f98:	ble	3fcdc <GetDataSlab+0x1deb0>
   25f9c:	ldr	r3, [sp, #232]	; 0xe8
   25fa0:	add	r7, sl, #4
   25fa4:	add	r5, sp, #60	; 0x3c
   25fa8:	mov	r4, r8
   25fac:	mov	lr, #0
   25fb0:	str	r9, [sp, #32]
   25fb4:	add	r3, sl, r3, lsl #2
   25fb8:	str	r3, [sp, #40]	; 0x28
   25fbc:	ldr	r3, [sp, #12]
   25fc0:	str	r3, [sp, #24]
   25fc4:	ldr	r3, [sp, #228]	; 0xe4
   25fc8:	str	r3, [sp, #28]
   25fcc:	ldr	r3, [r7], #4
   25fd0:	ldr	r0, [r4], #4
   25fd4:	ldr	r2, [sp, #24]
   25fd8:	sub	ip, r3, #1
   25fdc:	mov	r1, r4
   25fe0:	str	ip, [r5], #4
   25fe4:	str	r2, [sp, #36]	; 0x24
   25fe8:	mov	r3, r1
   25fec:	ldr	r2, [r1, #-4]!
   25ff0:	ldr	r3, [r3]
   25ff4:	cmp	r1, r8
   25ff8:	mul	ip, r2, ip
   25ffc:	mul	r0, r3, r0
   26000:	bne	25fe8 <GetDataSlab+0x41bc>
   26004:	ldr	r3, [sp, #24]
   26008:	str	ip, [r5, #-4]
   2600c:	str	r0, [r3, #4]!
   26010:	str	r3, [sp, #24]
   26014:	ldr	r0, [sp, #28]
   26018:	ldr	r3, [sp, #40]	; 0x28
   2601c:	cmp	r7, r3
   26020:	ldr	r3, [sp, #36]	; 0x24
   26024:	ldr	r1, [r3]
   26028:	ldr	r3, [sp, #32]
   2602c:	ldr	r2, [r3, #4]!
   26030:	mla	lr, r2, r1, lr
   26034:	str	r3, [sp, #32]
   26038:	ldr	r3, [r0, #4]!
   2603c:	ldr	r2, [sp, #20]
   26040:	str	r0, [sp, #28]
   26044:	mul	r3, r3, r2
   26048:	str	r3, [sp, #20]
   2604c:	bne	25fcc <GetDataSlab+0x41a0>
   26050:	ldr	r3, [sp, #8]
   26054:	cmp	r6, #1
   26058:	add	r5, r3, lr, lsl #2
   2605c:	ldr	r3, [sp, #20]
   26060:	beq	3cacc <GetDataSlab+0x1aca0>
   26064:	cmp	r3, #0
   26068:	ble	30874 <GetDataSlab+0xea48>
   2606c:	ldr	r3, [r9]
   26070:	str	r3, [sp, #8]
   26074:	mov	r3, #0
   26078:	str	r3, [sp, #24]
   2607c:	ldr	r3, [sp, #8]
   26080:	cmp	r3, #0
   26084:	beq	26090 <GetDataSlab+0x4264>
   26088:	add	r5, r5, r3, lsl #2
   2608c:	add	lr, lr, r3
   26090:	cmp	fp, #0
   26094:	ble	260e4 <GetDataSlab+0x42b8>
   26098:	ldr	r3, [sp, #4]
   2609c:	ldr	r2, [sp, #24]
   260a0:	add	r1, r3, r2, lsl #2
   260a4:	mov	r3, #0
   260a8:	vldr	s15, [r5]
   260ac:	add	r3, r3, #1
   260b0:	ldr	r2, [sp, #228]	; 0xe4
   260b4:	vcvt.u32.f32	s15, s15
   260b8:	vstmia	r1!, {s15}
   260bc:	ldr	fp, [r2]
   260c0:	ldr	r6, [sl]
   260c4:	cmp	fp, r3
   260c8:	add	r5, r5, r6, lsl #2
   260cc:	add	lr, lr, r6
   260d0:	bgt	260a8 <GetDataSlab+0x427c>
   260d4:	ldr	r3, [r9]
   260d8:	str	r3, [sp, #8]
   260dc:	ldr	r3, [r8]
   260e0:	str	r3, [sp, #16]
   260e4:	ldr	r2, [sp, #8]
   260e8:	ldr	r3, [sp, #16]
   260ec:	sub	r3, r3, r2
   260f0:	ldr	r2, [sp, #232]	; 0xe8
   260f4:	mls	r3, r6, fp, r3
   260f8:	cmp	r2, #1
   260fc:	add	lr, lr, r3
   26100:	add	r5, r5, r3, lsl #2
   26104:	ble	344bc <GetDataSlab+0x12690>
   26108:	ldr	r3, [sp, #100]	; 0x64
   2610c:	ldr	r2, [sp, #228]	; 0xe4
   26110:	add	r3, r3, #1
   26114:	ldr	r1, [r2, #4]
   26118:	str	r3, [sp, #100]	; 0x64
   2611c:	sdiv	r2, r3, r1
   26120:	mls	r3, r1, r2, r3
   26124:	cmp	r3, #0
   26128:	bne	344a4 <GetDataSlab+0x12678>
   2612c:	add	ip, sp, #100	; 0x64
   26130:	mov	r0, #1
   26134:	ldr	r4, [sp, #12]
   26138:	ldr	r3, [sp, #228]	; 0xe4
   2613c:	add	r7, r3, #4
   26140:	b	26188 <GetDataSlab+0x435c>
   26144:	ldr	r3, [r4, #-4]
   26148:	ldr	r1, [r9, r0, lsl #2]
   2614c:	mla	r3, r1, r3, r2
   26150:	add	r5, r5, r3, lsl #2
   26154:	add	lr, lr, r3
   26158:	ldr	r3, [sp, #232]	; 0xe8
   2615c:	add	r0, r0, #1
   26160:	cmp	r3, r0
   26164:	beq	344bc <GetDataSlab+0x12690>
   26168:	ldr	r3, [ip]
   2616c:	ldr	r1, [r7, #4]!
   26170:	add	r3, r3, #1
   26174:	sdiv	r2, r3, r1
   26178:	str	r3, [ip]
   2617c:	mls	r3, r1, r2, r3
   26180:	cmp	r3, #0
   26184:	bne	344a8 <GetDataSlab+0x1267c>
   26188:	ldr	r2, [r4, #4]!
   2618c:	mov	r3, #0
   26190:	str	r3, [ip], #4
   26194:	sdiv	r3, lr, r2
   26198:	mls	r3, r2, r3, lr
   2619c:	cmp	r3, #0
   261a0:	sub	r2, r2, r3
   261a4:	bne	26144 <GetDataSlab+0x4318>
   261a8:	ldr	r3, [r9, r0, lsl #2]
   261ac:	cmp	r3, #0
   261b0:	beq	26158 <GetDataSlab+0x432c>
   261b4:	ldr	r2, [r4, #-4]
   261b8:	mul	r3, r2, r3
   261bc:	add	r5, r5, r3, lsl #2
   261c0:	add	lr, lr, r3
   261c4:	b	26158 <GetDataSlab+0x432c>
   261c8:	ldr	r3, [sp, #232]	; 0xe8
   261cc:	ldr	r6, [sl]
   261d0:	cmp	r3, #1
   261d4:	ldr	r3, [r8]
   261d8:	str	r3, [sp, #16]
   261dc:	ldr	r3, [sp, #228]	; 0xe4
   261e0:	ldr	fp, [r3]
   261e4:	sub	r3, r6, #1
   261e8:	str	r3, [sp, #56]	; 0x38
   261ec:	ldr	r3, [sp, #16]
   261f0:	str	fp, [sp, #20]
   261f4:	str	r3, [sp, #136]	; 0x88
   261f8:	ble	3fcd4 <GetDataSlab+0x1dea8>
   261fc:	ldr	r3, [sp, #232]	; 0xe8
   26200:	add	r7, sl, #4
   26204:	add	r5, sp, #60	; 0x3c
   26208:	mov	r4, r8
   2620c:	mov	lr, #0
   26210:	str	r9, [sp, #32]
   26214:	add	r3, sl, r3, lsl #2
   26218:	str	r3, [sp, #40]	; 0x28
   2621c:	ldr	r3, [sp, #12]
   26220:	str	r3, [sp, #24]
   26224:	ldr	r3, [sp, #228]	; 0xe4
   26228:	str	r3, [sp, #28]
   2622c:	ldr	r3, [r7], #4
   26230:	ldr	r0, [r4], #4
   26234:	ldr	r2, [sp, #24]
   26238:	sub	ip, r3, #1
   2623c:	mov	r1, r4
   26240:	str	ip, [r5], #4
   26244:	str	r2, [sp, #36]	; 0x24
   26248:	mov	r3, r1
   2624c:	ldr	r2, [r1, #-4]!
   26250:	ldr	r3, [r3]
   26254:	cmp	r1, r8
   26258:	mul	ip, r2, ip
   2625c:	mul	r0, r3, r0
   26260:	bne	26248 <GetDataSlab+0x441c>
   26264:	ldr	r3, [sp, #24]
   26268:	str	ip, [r5, #-4]
   2626c:	str	r0, [r3, #4]!
   26270:	str	r3, [sp, #24]
   26274:	ldr	r0, [sp, #28]
   26278:	ldr	r3, [sp, #40]	; 0x28
   2627c:	cmp	r7, r3
   26280:	ldr	r3, [sp, #36]	; 0x24
   26284:	ldr	r1, [r3]
   26288:	ldr	r3, [sp, #32]
   2628c:	ldr	r2, [r3, #4]!
   26290:	mla	lr, r2, r1, lr
   26294:	str	r3, [sp, #32]
   26298:	ldr	r3, [r0, #4]!
   2629c:	ldr	r2, [sp, #20]
   262a0:	str	r0, [sp, #28]
   262a4:	mul	r3, r3, r2
   262a8:	str	r3, [sp, #20]
   262ac:	bne	2622c <GetDataSlab+0x4400>
   262b0:	ldr	r3, [sp, #8]
   262b4:	cmp	r6, #1
   262b8:	add	r5, r3, lr, lsl #2
   262bc:	ldr	r3, [sp, #20]
   262c0:	beq	3cc44 <GetDataSlab+0x1ae18>
   262c4:	cmp	r3, #0
   262c8:	ble	30874 <GetDataSlab+0xea48>
   262cc:	ldr	r3, [r9]
   262d0:	str	r3, [sp, #8]
   262d4:	mov	r3, #0
   262d8:	str	r3, [sp, #24]
   262dc:	ldr	r3, [sp, #8]
   262e0:	cmp	r3, #0
   262e4:	beq	262f0 <GetDataSlab+0x44c4>
   262e8:	add	r5, r5, r3, lsl #2
   262ec:	add	lr, lr, r3
   262f0:	cmp	fp, #0
   262f4:	ble	26340 <GetDataSlab+0x4514>
   262f8:	ldr	r3, [sp, #4]
   262fc:	ldr	r2, [sp, #24]
   26300:	add	r2, r3, r2, lsl #2
   26304:	mov	r3, #0
   26308:	ldr	r1, [r5]
   2630c:	add	r3, r3, #1
   26310:	str	r1, [r2], #4
   26314:	ldr	r1, [sp, #228]	; 0xe4
   26318:	ldr	r6, [sl]
   2631c:	ldr	fp, [r1]
   26320:	add	r5, r5, r6, lsl #2
   26324:	add	lr, lr, r6
   26328:	cmp	fp, r3
   2632c:	bgt	26308 <GetDataSlab+0x44dc>
   26330:	ldr	r3, [r9]
   26334:	str	r3, [sp, #8]
   26338:	ldr	r3, [r8]
   2633c:	str	r3, [sp, #16]
   26340:	ldr	r2, [sp, #8]
   26344:	ldr	r3, [sp, #16]
   26348:	sub	r3, r3, r2
   2634c:	ldr	r2, [sp, #232]	; 0xe8
   26350:	mls	r3, r6, fp, r3
   26354:	cmp	r2, #1
   26358:	add	lr, lr, r3
   2635c:	add	r5, r5, r3, lsl #2
   26360:	ble	3448c <GetDataSlab+0x12660>
   26364:	ldr	r3, [sp, #100]	; 0x64
   26368:	ldr	r2, [sp, #228]	; 0xe4
   2636c:	add	r3, r3, #1
   26370:	ldr	r1, [r2, #4]
   26374:	str	r3, [sp, #100]	; 0x64
   26378:	sdiv	r2, r3, r1
   2637c:	mls	r3, r1, r2, r3
   26380:	cmp	r3, #0
   26384:	bne	34474 <GetDataSlab+0x12648>
   26388:	add	ip, sp, #100	; 0x64
   2638c:	mov	r0, #1
   26390:	ldr	r4, [sp, #12]
   26394:	ldr	r3, [sp, #228]	; 0xe4
   26398:	add	r7, r3, #4
   2639c:	b	263e4 <GetDataSlab+0x45b8>
   263a0:	ldr	r3, [r4, #-4]
   263a4:	ldr	r1, [r9, r0, lsl #2]
   263a8:	mla	r3, r1, r3, r2
   263ac:	add	r5, r5, r3, lsl #2
   263b0:	add	lr, lr, r3
   263b4:	ldr	r3, [sp, #232]	; 0xe8
   263b8:	add	r0, r0, #1
   263bc:	cmp	r3, r0
   263c0:	beq	3448c <GetDataSlab+0x12660>
   263c4:	ldr	r3, [ip]
   263c8:	ldr	r1, [r7, #4]!
   263cc:	add	r3, r3, #1
   263d0:	sdiv	r2, r3, r1
   263d4:	str	r3, [ip]
   263d8:	mls	r3, r1, r2, r3
   263dc:	cmp	r3, #0
   263e0:	bne	34478 <GetDataSlab+0x1264c>
   263e4:	ldr	r2, [r4, #4]!
   263e8:	mov	r3, #0
   263ec:	str	r3, [ip], #4
   263f0:	sdiv	r3, lr, r2
   263f4:	mls	r3, r2, r3, lr
   263f8:	cmp	r3, #0
   263fc:	sub	r2, r2, r3
   26400:	bne	263a0 <GetDataSlab+0x4574>
   26404:	ldr	r3, [r9, r0, lsl #2]
   26408:	cmp	r3, #0
   2640c:	beq	263b4 <GetDataSlab+0x4588>
   26410:	ldr	r2, [r4, #-4]
   26414:	mul	r3, r2, r3
   26418:	add	r5, r5, r3, lsl #2
   2641c:	add	lr, lr, r3
   26420:	b	263b4 <GetDataSlab+0x4588>
   26424:	ldr	r3, [sp, #232]	; 0xe8
   26428:	ldr	r6, [sl]
   2642c:	cmp	r3, #1
   26430:	ldr	r3, [r8]
   26434:	str	r3, [sp, #16]
   26438:	ldr	r3, [sp, #228]	; 0xe4
   2643c:	ldr	fp, [r3]
   26440:	sub	r3, r6, #1
   26444:	str	r3, [sp, #56]	; 0x38
   26448:	ldr	r3, [sp, #16]
   2644c:	str	fp, [sp, #20]
   26450:	str	r3, [sp, #136]	; 0x88
   26454:	ble	3fbec <GetDataSlab+0x1ddc0>
   26458:	ldr	r3, [sp, #232]	; 0xe8
   2645c:	add	r7, sl, #4
   26460:	add	r5, sp, #60	; 0x3c
   26464:	mov	r4, r8
   26468:	mov	lr, #0
   2646c:	str	r9, [sp, #32]
   26470:	add	r3, sl, r3, lsl #2
   26474:	str	r3, [sp, #40]	; 0x28
   26478:	ldr	r3, [sp, #12]
   2647c:	str	r3, [sp, #24]
   26480:	ldr	r3, [sp, #228]	; 0xe4
   26484:	str	r3, [sp, #28]
   26488:	ldr	r3, [r7], #4
   2648c:	ldr	r0, [r4], #4
   26490:	ldr	r2, [sp, #24]
   26494:	sub	ip, r3, #1
   26498:	mov	r1, r4
   2649c:	str	ip, [r5], #4
   264a0:	str	r2, [sp, #36]	; 0x24
   264a4:	mov	r3, r1
   264a8:	ldr	r2, [r1, #-4]!
   264ac:	ldr	r3, [r3]
   264b0:	cmp	r1, r8
   264b4:	mul	ip, r2, ip
   264b8:	mul	r0, r3, r0
   264bc:	bne	264a4 <GetDataSlab+0x4678>
   264c0:	ldr	r3, [sp, #24]
   264c4:	str	ip, [r5, #-4]
   264c8:	str	r0, [r3, #4]!
   264cc:	str	r3, [sp, #24]
   264d0:	ldr	r0, [sp, #28]
   264d4:	ldr	r3, [sp, #40]	; 0x28
   264d8:	cmp	r7, r3
   264dc:	ldr	r3, [sp, #36]	; 0x24
   264e0:	ldr	r1, [r3]
   264e4:	ldr	r3, [sp, #32]
   264e8:	ldr	r2, [r3, #4]!
   264ec:	mla	lr, r2, r1, lr
   264f0:	str	r3, [sp, #32]
   264f4:	ldr	r3, [r0, #4]!
   264f8:	ldr	r2, [sp, #20]
   264fc:	str	r0, [sp, #28]
   26500:	mul	r3, r3, r2
   26504:	str	r3, [sp, #20]
   26508:	bne	26488 <GetDataSlab+0x465c>
   2650c:	ldr	r3, [sp, #8]
   26510:	cmp	r6, #1
   26514:	add	r5, r3, lr, lsl #2
   26518:	ldr	r3, [sp, #20]
   2651c:	beq	3c4f8 <GetDataSlab+0x1a6cc>
   26520:	cmp	r3, #0
   26524:	ble	30874 <GetDataSlab+0xea48>
   26528:	ldr	r3, [r9]
   2652c:	str	r3, [sp, #8]
   26530:	mov	r3, #0
   26534:	str	r3, [sp, #24]
   26538:	ldr	r3, [sp, #8]
   2653c:	cmp	r3, #0
   26540:	beq	2654c <GetDataSlab+0x4720>
   26544:	add	r5, r5, r3, lsl #2
   26548:	add	lr, lr, r3
   2654c:	cmp	fp, #0
   26550:	ble	2659c <GetDataSlab+0x4770>
   26554:	ldr	r3, [sp, #4]
   26558:	ldr	r2, [sp, #24]
   2655c:	add	r2, r3, r2, lsl #2
   26560:	mov	r3, #0
   26564:	ldr	r1, [r5]
   26568:	add	r3, r3, #1
   2656c:	str	r1, [r2], #4
   26570:	ldr	r1, [sp, #228]	; 0xe4
   26574:	ldr	r6, [sl]
   26578:	ldr	fp, [r1]
   2657c:	add	r5, r5, r6, lsl #2
   26580:	add	lr, lr, r6
   26584:	cmp	fp, r3
   26588:	bgt	26564 <GetDataSlab+0x4738>
   2658c:	ldr	r3, [r9]
   26590:	str	r3, [sp, #8]
   26594:	ldr	r3, [r8]
   26598:	str	r3, [sp, #16]
   2659c:	ldr	r2, [sp, #8]
   265a0:	ldr	r3, [sp, #16]
   265a4:	sub	r3, r3, r2
   265a8:	ldr	r2, [sp, #232]	; 0xe8
   265ac:	mls	r3, r6, fp, r3
   265b0:	cmp	r2, #1
   265b4:	add	lr, lr, r3
   265b8:	add	r5, r5, r3, lsl #2
   265bc:	ble	3445c <GetDataSlab+0x12630>
   265c0:	ldr	r3, [sp, #100]	; 0x64
   265c4:	ldr	r2, [sp, #228]	; 0xe4
   265c8:	add	r3, r3, #1
   265cc:	ldr	r1, [r2, #4]
   265d0:	str	r3, [sp, #100]	; 0x64
   265d4:	sdiv	r2, r3, r1
   265d8:	mls	r3, r1, r2, r3
   265dc:	cmp	r3, #0
   265e0:	bne	34444 <GetDataSlab+0x12618>
   265e4:	add	ip, sp, #100	; 0x64
   265e8:	mov	r0, #1
   265ec:	ldr	r4, [sp, #12]
   265f0:	ldr	r3, [sp, #228]	; 0xe4
   265f4:	add	r7, r3, #4
   265f8:	b	26640 <GetDataSlab+0x4814>
   265fc:	ldr	r3, [r4, #-4]
   26600:	ldr	r1, [r9, r0, lsl #2]
   26604:	mla	r3, r1, r3, r2
   26608:	add	r5, r5, r3, lsl #2
   2660c:	add	lr, lr, r3
   26610:	ldr	r3, [sp, #232]	; 0xe8
   26614:	add	r0, r0, #1
   26618:	cmp	r3, r0
   2661c:	beq	3445c <GetDataSlab+0x12630>
   26620:	ldr	r3, [ip]
   26624:	ldr	r1, [r7, #4]!
   26628:	add	r3, r3, #1
   2662c:	sdiv	r2, r3, r1
   26630:	str	r3, [ip]
   26634:	mls	r3, r1, r2, r3
   26638:	cmp	r3, #0
   2663c:	bne	34448 <GetDataSlab+0x1261c>
   26640:	ldr	r2, [r4, #4]!
   26644:	mov	r3, #0
   26648:	str	r3, [ip], #4
   2664c:	sdiv	r3, lr, r2
   26650:	mls	r3, r2, r3, lr
   26654:	cmp	r3, #0
   26658:	sub	r2, r2, r3
   2665c:	bne	265fc <GetDataSlab+0x47d0>
   26660:	ldr	r3, [r9, r0, lsl #2]
   26664:	cmp	r3, #0
   26668:	beq	26610 <GetDataSlab+0x47e4>
   2666c:	ldr	r2, [r4, #-4]
   26670:	mul	r3, r2, r3
   26674:	add	r5, r5, r3, lsl #2
   26678:	add	lr, lr, r3
   2667c:	b	26610 <GetDataSlab+0x47e4>
   26680:	ldr	r3, [sp, #232]	; 0xe8
   26684:	ldr	r6, [sl]
   26688:	cmp	r3, #1
   2668c:	ldr	r3, [r8]
   26690:	str	r3, [sp, #16]
   26694:	ldr	r3, [sp, #228]	; 0xe4
   26698:	ldr	fp, [r3]
   2669c:	sub	r3, r6, #1
   266a0:	str	r3, [sp, #56]	; 0x38
   266a4:	ldr	r3, [sp, #16]
   266a8:	str	fp, [sp, #20]
   266ac:	str	r3, [sp, #136]	; 0x88
   266b0:	ble	3fbdc <GetDataSlab+0x1ddb0>
   266b4:	ldr	r3, [sp, #232]	; 0xe8
   266b8:	add	r7, sl, #4
   266bc:	add	r5, sp, #60	; 0x3c
   266c0:	mov	r4, r8
   266c4:	mov	lr, #0
   266c8:	str	r9, [sp, #32]
   266cc:	add	r3, sl, r3, lsl #2
   266d0:	str	r3, [sp, #40]	; 0x28
   266d4:	ldr	r3, [sp, #12]
   266d8:	str	r3, [sp, #24]
   266dc:	ldr	r3, [sp, #228]	; 0xe4
   266e0:	str	r3, [sp, #28]
   266e4:	ldr	r3, [r7], #4
   266e8:	ldr	r0, [r4], #4
   266ec:	ldr	r2, [sp, #24]
   266f0:	sub	ip, r3, #1
   266f4:	mov	r1, r4
   266f8:	str	ip, [r5], #4
   266fc:	str	r2, [sp, #36]	; 0x24
   26700:	mov	r3, r1
   26704:	ldr	r2, [r1, #-4]!
   26708:	ldr	r3, [r3]
   2670c:	cmp	r1, r8
   26710:	mul	ip, r2, ip
   26714:	mul	r0, r3, r0
   26718:	bne	26700 <GetDataSlab+0x48d4>
   2671c:	ldr	r3, [sp, #24]
   26720:	str	ip, [r5, #-4]
   26724:	str	r0, [r3, #4]!
   26728:	str	r3, [sp, #24]
   2672c:	ldr	r0, [sp, #28]
   26730:	ldr	r3, [sp, #40]	; 0x28
   26734:	cmp	r7, r3
   26738:	ldr	r3, [sp, #36]	; 0x24
   2673c:	ldr	r1, [r3]
   26740:	ldr	r3, [sp, #32]
   26744:	ldr	r2, [r3, #4]!
   26748:	mla	lr, r2, r1, lr
   2674c:	str	r3, [sp, #32]
   26750:	ldr	r3, [r0, #4]!
   26754:	ldr	r2, [sp, #20]
   26758:	str	r0, [sp, #28]
   2675c:	mul	r3, r3, r2
   26760:	str	r3, [sp, #20]
   26764:	bne	266e4 <GetDataSlab+0x48b8>
   26768:	ldr	r3, [sp, #8]
   2676c:	cmp	r6, #1
   26770:	add	r5, r3, lr, lsl #1
   26774:	ldr	r3, [sp, #20]
   26778:	beq	3c7e4 <GetDataSlab+0x1a9b8>
   2677c:	cmp	r3, #0
   26780:	ble	30874 <GetDataSlab+0xea48>
   26784:	ldr	r3, [r9]
   26788:	str	r3, [sp, #8]
   2678c:	mov	r3, #0
   26790:	str	r3, [sp, #24]
   26794:	ldr	r3, [sp, #8]
   26798:	cmp	r3, #0
   2679c:	beq	267a8 <GetDataSlab+0x497c>
   267a0:	add	r5, r5, r3, lsl #1
   267a4:	add	lr, lr, r3
   267a8:	cmp	fp, #0
   267ac:	ble	267f8 <GetDataSlab+0x49cc>
   267b0:	ldr	r3, [sp, #4]
   267b4:	ldr	r2, [sp, #24]
   267b8:	add	r1, r3, r2, lsl #2
   267bc:	mov	r2, #0
   267c0:	ldrh	r3, [r5]
   267c4:	add	r2, r2, #1
   267c8:	str	r3, [r1], #4
   267cc:	ldr	r3, [sp, #228]	; 0xe4
   267d0:	ldr	r6, [sl]
   267d4:	ldr	fp, [r3]
   267d8:	add	r5, r5, r6, lsl #1
   267dc:	add	lr, lr, r6
   267e0:	cmp	fp, r2
   267e4:	bgt	267c0 <GetDataSlab+0x4994>
   267e8:	ldr	r3, [r9]
   267ec:	str	r3, [sp, #8]
   267f0:	ldr	r3, [r8]
   267f4:	str	r3, [sp, #16]
   267f8:	ldr	r2, [sp, #8]
   267fc:	ldr	r3, [sp, #16]
   26800:	sub	r3, r3, r2
   26804:	ldr	r2, [sp, #232]	; 0xe8
   26808:	mls	r3, r6, fp, r3
   2680c:	cmp	r2, #1
   26810:	add	lr, lr, r3
   26814:	add	r5, r5, r3, lsl #1
   26818:	ble	3442c <GetDataSlab+0x12600>
   2681c:	ldr	r3, [sp, #100]	; 0x64
   26820:	ldr	r2, [sp, #228]	; 0xe4
   26824:	add	r3, r3, #1
   26828:	ldr	r1, [r2, #4]
   2682c:	str	r3, [sp, #100]	; 0x64
   26830:	sdiv	r2, r3, r1
   26834:	mls	r3, r1, r2, r3
   26838:	cmp	r3, #0
   2683c:	bne	34414 <GetDataSlab+0x125e8>
   26840:	add	ip, sp, #100	; 0x64
   26844:	mov	r0, #1
   26848:	ldr	r4, [sp, #12]
   2684c:	ldr	r3, [sp, #228]	; 0xe4
   26850:	add	r7, r3, #4
   26854:	b	2689c <GetDataSlab+0x4a70>
   26858:	ldr	r3, [r4, #-4]
   2685c:	ldr	r1, [r9, r0, lsl #2]
   26860:	mla	r3, r1, r3, r2
   26864:	add	r5, r5, r3, lsl #1
   26868:	add	lr, lr, r3
   2686c:	ldr	r3, [sp, #232]	; 0xe8
   26870:	add	r0, r0, #1
   26874:	cmp	r3, r0
   26878:	beq	3442c <GetDataSlab+0x12600>
   2687c:	ldr	r3, [ip]
   26880:	ldr	r1, [r7, #4]!
   26884:	add	r3, r3, #1
   26888:	sdiv	r2, r3, r1
   2688c:	str	r3, [ip]
   26890:	mls	r3, r1, r2, r3
   26894:	cmp	r3, #0
   26898:	bne	34418 <GetDataSlab+0x125ec>
   2689c:	ldr	r2, [r4, #4]!
   268a0:	mov	r3, #0
   268a4:	str	r3, [ip], #4
   268a8:	sdiv	r3, lr, r2
   268ac:	mls	r3, r2, r3, lr
   268b0:	cmp	r3, #0
   268b4:	sub	r2, r2, r3
   268b8:	bne	26858 <GetDataSlab+0x4a2c>
   268bc:	ldr	r3, [r9, r0, lsl #2]
   268c0:	cmp	r3, #0
   268c4:	beq	2686c <GetDataSlab+0x4a40>
   268c8:	ldr	r2, [r4, #-4]
   268cc:	mul	r3, r2, r3
   268d0:	add	r5, r5, r3, lsl #1
   268d4:	add	lr, lr, r3
   268d8:	b	2686c <GetDataSlab+0x4a40>
   268dc:	ldr	r3, [sp, #232]	; 0xe8
   268e0:	ldr	r6, [sl]
   268e4:	cmp	r3, #1
   268e8:	ldr	r3, [r8]
   268ec:	str	r3, [sp, #16]
   268f0:	ldr	r3, [sp, #228]	; 0xe4
   268f4:	ldr	fp, [r3]
   268f8:	sub	r3, r6, #1
   268fc:	str	r3, [sp, #56]	; 0x38
   26900:	ldr	r3, [sp, #16]
   26904:	str	fp, [sp, #20]
   26908:	str	r3, [sp, #136]	; 0x88
   2690c:	ble	3fce4 <GetDataSlab+0x1deb8>
   26910:	ldr	r3, [sp, #232]	; 0xe8
   26914:	add	r7, sl, #4
   26918:	add	r5, sp, #60	; 0x3c
   2691c:	mov	r4, r8
   26920:	mov	lr, #0
   26924:	str	r9, [sp, #32]
   26928:	add	r3, sl, r3, lsl #2
   2692c:	str	r3, [sp, #40]	; 0x28
   26930:	ldr	r3, [sp, #12]
   26934:	str	r3, [sp, #24]
   26938:	ldr	r3, [sp, #228]	; 0xe4
   2693c:	str	r3, [sp, #28]
   26940:	ldr	r3, [r7], #4
   26944:	ldr	r0, [r4], #4
   26948:	ldr	r2, [sp, #24]
   2694c:	sub	ip, r3, #1
   26950:	mov	r1, r4
   26954:	str	ip, [r5], #4
   26958:	str	r2, [sp, #36]	; 0x24
   2695c:	mov	r3, r1
   26960:	ldr	r2, [r1, #-4]!
   26964:	ldr	r3, [r3]
   26968:	cmp	r1, r8
   2696c:	mul	ip, r2, ip
   26970:	mul	r0, r3, r0
   26974:	bne	2695c <GetDataSlab+0x4b30>
   26978:	ldr	r3, [sp, #24]
   2697c:	str	ip, [r5, #-4]
   26980:	str	r0, [r3, #4]!
   26984:	str	r3, [sp, #24]
   26988:	ldr	r0, [sp, #28]
   2698c:	ldr	r3, [sp, #40]	; 0x28
   26990:	cmp	r7, r3
   26994:	ldr	r3, [sp, #36]	; 0x24
   26998:	ldr	r1, [r3]
   2699c:	ldr	r3, [sp, #32]
   269a0:	ldr	r2, [r3, #4]!
   269a4:	mla	lr, r2, r1, lr
   269a8:	str	r3, [sp, #32]
   269ac:	ldr	r3, [r0, #4]!
   269b0:	ldr	r2, [sp, #20]
   269b4:	str	r0, [sp, #28]
   269b8:	mul	r3, r3, r2
   269bc:	str	r3, [sp, #20]
   269c0:	bne	26940 <GetDataSlab+0x4b14>
   269c4:	ldr	r3, [sp, #8]
   269c8:	cmp	r6, #1
   269cc:	add	r5, r3, lr, lsl #1
   269d0:	ldr	r3, [sp, #20]
   269d4:	beq	3c958 <GetDataSlab+0x1ab2c>
   269d8:	cmp	r3, #0
   269dc:	ble	30874 <GetDataSlab+0xea48>
   269e0:	ldr	r3, [r9]
   269e4:	str	r3, [sp, #8]
   269e8:	mov	r3, #0
   269ec:	str	r3, [sp, #24]
   269f0:	ldr	r3, [sp, #8]
   269f4:	cmp	r3, #0
   269f8:	beq	26a04 <GetDataSlab+0x4bd8>
   269fc:	add	r5, r5, r3, lsl #1
   26a00:	add	lr, lr, r3
   26a04:	cmp	fp, #0
   26a08:	ble	26a54 <GetDataSlab+0x4c28>
   26a0c:	ldr	r3, [sp, #4]
   26a10:	ldr	r2, [sp, #24]
   26a14:	add	r1, r3, r2, lsl #2
   26a18:	mov	r2, #0
   26a1c:	ldrsh	r3, [r5]
   26a20:	add	r2, r2, #1
   26a24:	str	r3, [r1], #4
   26a28:	ldr	r3, [sp, #228]	; 0xe4
   26a2c:	ldr	r6, [sl]
   26a30:	ldr	fp, [r3]
   26a34:	add	r5, r5, r6, lsl #1
   26a38:	add	lr, lr, r6
   26a3c:	cmp	fp, r2
   26a40:	bgt	26a1c <GetDataSlab+0x4bf0>
   26a44:	ldr	r3, [r9]
   26a48:	str	r3, [sp, #8]
   26a4c:	ldr	r3, [r8]
   26a50:	str	r3, [sp, #16]
   26a54:	ldr	r2, [sp, #8]
   26a58:	ldr	r3, [sp, #16]
   26a5c:	sub	r3, r3, r2
   26a60:	ldr	r2, [sp, #232]	; 0xe8
   26a64:	mls	r3, r6, fp, r3
   26a68:	cmp	r2, #1
   26a6c:	add	lr, lr, r3
   26a70:	add	r5, r5, r3, lsl #1
   26a74:	ble	343fc <GetDataSlab+0x125d0>
   26a78:	ldr	r3, [sp, #100]	; 0x64
   26a7c:	ldr	r2, [sp, #228]	; 0xe4
   26a80:	add	r3, r3, #1
   26a84:	ldr	r1, [r2, #4]
   26a88:	str	r3, [sp, #100]	; 0x64
   26a8c:	sdiv	r2, r3, r1
   26a90:	mls	r3, r1, r2, r3
   26a94:	cmp	r3, #0
   26a98:	bne	343e4 <GetDataSlab+0x125b8>
   26a9c:	add	ip, sp, #100	; 0x64
   26aa0:	mov	r0, #1
   26aa4:	ldr	r4, [sp, #12]
   26aa8:	ldr	r3, [sp, #228]	; 0xe4
   26aac:	add	r7, r3, #4
   26ab0:	b	26af8 <GetDataSlab+0x4ccc>
   26ab4:	ldr	r3, [r4, #-4]
   26ab8:	ldr	r1, [r9, r0, lsl #2]
   26abc:	mla	r3, r1, r3, r2
   26ac0:	add	r5, r5, r3, lsl #1
   26ac4:	add	lr, lr, r3
   26ac8:	ldr	r3, [sp, #232]	; 0xe8
   26acc:	add	r0, r0, #1
   26ad0:	cmp	r3, r0
   26ad4:	beq	343fc <GetDataSlab+0x125d0>
   26ad8:	ldr	r3, [ip]
   26adc:	ldr	r1, [r7, #4]!
   26ae0:	add	r3, r3, #1
   26ae4:	sdiv	r2, r3, r1
   26ae8:	str	r3, [ip]
   26aec:	mls	r3, r1, r2, r3
   26af0:	cmp	r3, #0
   26af4:	bne	343e8 <GetDataSlab+0x125bc>
   26af8:	ldr	r2, [r4, #4]!
   26afc:	mov	r3, #0
   26b00:	str	r3, [ip], #4
   26b04:	sdiv	r3, lr, r2
   26b08:	mls	r3, r2, r3, lr
   26b0c:	cmp	r3, #0
   26b10:	sub	r2, r2, r3
   26b14:	bne	26ab4 <GetDataSlab+0x4c88>
   26b18:	ldr	r3, [r9, r0, lsl #2]
   26b1c:	cmp	r3, #0
   26b20:	beq	26ac8 <GetDataSlab+0x4c9c>
   26b24:	ldr	r2, [r4, #-4]
   26b28:	mul	r3, r2, r3
   26b2c:	add	r5, r5, r3, lsl #1
   26b30:	add	lr, lr, r3
   26b34:	b	26ac8 <GetDataSlab+0x4c9c>
   26b38:	ldr	r3, [sp, #232]	; 0xe8
   26b3c:	ldr	r6, [sl]
   26b40:	cmp	r3, #1
   26b44:	ldr	r3, [r8]
   26b48:	str	r3, [sp, #16]
   26b4c:	ldr	r3, [sp, #228]	; 0xe4
   26b50:	ldr	fp, [r3]
   26b54:	sub	r3, r6, #1
   26b58:	str	r3, [sp, #56]	; 0x38
   26b5c:	ldr	r3, [sp, #16]
   26b60:	str	fp, [sp, #20]
   26b64:	str	r3, [sp, #136]	; 0x88
   26b68:	ble	3fbe4 <GetDataSlab+0x1ddb8>
   26b6c:	ldr	r3, [sp, #232]	; 0xe8
   26b70:	add	r7, sl, #4
   26b74:	add	r5, sp, #60	; 0x3c
   26b78:	mov	r4, r8
   26b7c:	mov	lr, #0
   26b80:	str	r9, [sp, #32]
   26b84:	add	r3, sl, r3, lsl #2
   26b88:	str	r3, [sp, #40]	; 0x28
   26b8c:	ldr	r3, [sp, #12]
   26b90:	str	r3, [sp, #24]
   26b94:	ldr	r3, [sp, #228]	; 0xe4
   26b98:	str	r3, [sp, #28]
   26b9c:	ldr	r3, [r7], #4
   26ba0:	ldr	r0, [r4], #4
   26ba4:	ldr	r2, [sp, #24]
   26ba8:	sub	ip, r3, #1
   26bac:	mov	r1, r4
   26bb0:	str	ip, [r5], #4
   26bb4:	str	r2, [sp, #36]	; 0x24
   26bb8:	mov	r3, r1
   26bbc:	ldr	r2, [r1, #-4]!
   26bc0:	ldr	r3, [r3]
   26bc4:	cmp	r1, r8
   26bc8:	mul	ip, r2, ip
   26bcc:	mul	r0, r3, r0
   26bd0:	bne	26bb8 <GetDataSlab+0x4d8c>
   26bd4:	ldr	r3, [sp, #24]
   26bd8:	str	ip, [r5, #-4]
   26bdc:	str	r0, [r3, #4]!
   26be0:	str	r3, [sp, #24]
   26be4:	ldr	r0, [sp, #28]
   26be8:	ldr	r3, [sp, #40]	; 0x28
   26bec:	cmp	r7, r3
   26bf0:	ldr	r3, [sp, #36]	; 0x24
   26bf4:	ldr	r1, [r3]
   26bf8:	ldr	r3, [sp, #32]
   26bfc:	ldr	r2, [r3, #4]!
   26c00:	mla	lr, r2, r1, lr
   26c04:	str	r3, [sp, #32]
   26c08:	ldr	r3, [r0, #4]!
   26c0c:	ldr	r2, [sp, #20]
   26c10:	str	r0, [sp, #28]
   26c14:	mul	r3, r3, r2
   26c18:	str	r3, [sp, #20]
   26c1c:	bne	26b9c <GetDataSlab+0x4d70>
   26c20:	ldr	r3, [sp, #8]
   26c24:	cmp	r6, #1
   26c28:	add	r5, r3, lr
   26c2c:	ldr	r3, [sp, #20]
   26c30:	beq	3c66c <GetDataSlab+0x1a840>
   26c34:	cmp	r3, #0
   26c38:	ble	30874 <GetDataSlab+0xea48>
   26c3c:	ldr	r3, [r9]
   26c40:	str	r3, [sp, #8]
   26c44:	mov	r3, #0
   26c48:	str	r3, [sp, #24]
   26c4c:	ldr	r3, [sp, #8]
   26c50:	cmp	r3, #0
   26c54:	addne	r5, r5, r3
   26c58:	addne	lr, lr, r3
   26c5c:	cmp	fp, #0
   26c60:	ble	26cac <GetDataSlab+0x4e80>
   26c64:	ldr	r3, [sp, #4]
   26c68:	ldr	r2, [sp, #24]
   26c6c:	add	r1, r3, r2, lsl #2
   26c70:	mov	r2, #0
   26c74:	ldrb	r3, [r5]
   26c78:	add	r2, r2, #1
   26c7c:	str	r3, [r1], #4
   26c80:	ldr	r3, [sp, #228]	; 0xe4
   26c84:	ldr	r6, [sl]
   26c88:	ldr	fp, [r3]
   26c8c:	add	r5, r5, r6
   26c90:	add	lr, lr, r6
   26c94:	cmp	fp, r2
   26c98:	bgt	26c74 <GetDataSlab+0x4e48>
   26c9c:	ldr	r3, [r9]
   26ca0:	str	r3, [sp, #8]
   26ca4:	ldr	r3, [r8]
   26ca8:	str	r3, [sp, #16]
   26cac:	ldr	r2, [sp, #8]
   26cb0:	ldr	r3, [sp, #16]
   26cb4:	sub	r3, r3, r2
   26cb8:	ldr	r2, [sp, #232]	; 0xe8
   26cbc:	mls	r3, r6, fp, r3
   26cc0:	cmp	r2, #1
   26cc4:	add	lr, lr, r3
   26cc8:	add	r5, r5, r3
   26ccc:	ble	343cc <GetDataSlab+0x125a0>
   26cd0:	ldr	r3, [sp, #100]	; 0x64
   26cd4:	ldr	r2, [sp, #228]	; 0xe4
   26cd8:	add	r3, r3, #1
   26cdc:	ldr	r1, [r2, #4]
   26ce0:	str	r3, [sp, #100]	; 0x64
   26ce4:	sdiv	r2, r3, r1
   26ce8:	mls	r3, r1, r2, r3
   26cec:	cmp	r3, #0
   26cf0:	bne	343b4 <GetDataSlab+0x12588>
   26cf4:	add	ip, sp, #100	; 0x64
   26cf8:	mov	r0, #1
   26cfc:	ldr	r4, [sp, #12]
   26d00:	ldr	r3, [sp, #228]	; 0xe4
   26d04:	add	r7, r3, #4
   26d08:	b	26d50 <GetDataSlab+0x4f24>
   26d0c:	ldr	r3, [r4, #-4]
   26d10:	ldr	r1, [r9, r0, lsl #2]
   26d14:	mla	r3, r1, r3, r2
   26d18:	add	r5, r5, r3
   26d1c:	add	lr, lr, r3
   26d20:	ldr	r3, [sp, #232]	; 0xe8
   26d24:	add	r0, r0, #1
   26d28:	cmp	r3, r0
   26d2c:	beq	343cc <GetDataSlab+0x125a0>
   26d30:	ldr	r3, [ip]
   26d34:	ldr	r1, [r7, #4]!
   26d38:	add	r3, r3, #1
   26d3c:	sdiv	r2, r3, r1
   26d40:	str	r3, [ip]
   26d44:	mls	r3, r1, r2, r3
   26d48:	cmp	r3, #0
   26d4c:	bne	343b8 <GetDataSlab+0x1258c>
   26d50:	ldr	r2, [r4, #4]!
   26d54:	mov	r3, #0
   26d58:	str	r3, [ip], #4
   26d5c:	sdiv	r3, lr, r2
   26d60:	mls	r3, r2, r3, lr
   26d64:	cmp	r3, #0
   26d68:	sub	r2, r2, r3
   26d6c:	bne	26d0c <GetDataSlab+0x4ee0>
   26d70:	ldr	r3, [r9, r0, lsl #2]
   26d74:	cmp	r3, #0
   26d78:	beq	26d20 <GetDataSlab+0x4ef4>
   26d7c:	ldr	r2, [r4, #-4]
   26d80:	mul	r3, r2, r3
   26d84:	add	r5, r5, r3
   26d88:	add	lr, lr, r3
   26d8c:	b	26d20 <GetDataSlab+0x4ef4>
   26d90:	ldr	r3, [sp, #232]	; 0xe8
   26d94:	ldr	r6, [sl]
   26d98:	cmp	r3, #1
   26d9c:	ldr	r3, [r8]
   26da0:	str	r3, [sp, #16]
   26da4:	ldr	r3, [sp, #228]	; 0xe4
   26da8:	ldr	fp, [r3]
   26dac:	sub	r3, r6, #1
   26db0:	str	r3, [sp, #56]	; 0x38
   26db4:	ldr	r3, [sp, #16]
   26db8:	str	fp, [sp, #20]
   26dbc:	str	r3, [sp, #136]	; 0x88
   26dc0:	ble	3fbf4 <GetDataSlab+0x1ddc8>
   26dc4:	ldr	r3, [sp, #232]	; 0xe8
   26dc8:	add	r7, sl, #4
   26dcc:	add	r5, sp, #60	; 0x3c
   26dd0:	mov	r4, r8
   26dd4:	mov	lr, #0
   26dd8:	str	r9, [sp, #32]
   26ddc:	add	r3, sl, r3, lsl #2
   26de0:	str	r3, [sp, #40]	; 0x28
   26de4:	ldr	r3, [sp, #12]
   26de8:	str	r3, [sp, #24]
   26dec:	ldr	r3, [sp, #228]	; 0xe4
   26df0:	str	r3, [sp, #28]
   26df4:	ldr	r3, [r7], #4
   26df8:	ldr	r0, [r4], #4
   26dfc:	ldr	r2, [sp, #24]
   26e00:	sub	ip, r3, #1
   26e04:	mov	r1, r4
   26e08:	str	ip, [r5], #4
   26e0c:	str	r2, [sp, #36]	; 0x24
   26e10:	mov	r3, r1
   26e14:	ldr	r2, [r1, #-4]!
   26e18:	ldr	r3, [r3]
   26e1c:	cmp	r1, r8
   26e20:	mul	ip, r2, ip
   26e24:	mul	r0, r3, r0
   26e28:	bne	26e10 <GetDataSlab+0x4fe4>
   26e2c:	ldr	r3, [sp, #24]
   26e30:	str	ip, [r5, #-4]
   26e34:	str	r0, [r3, #4]!
   26e38:	str	r3, [sp, #24]
   26e3c:	ldr	r0, [sp, #28]
   26e40:	ldr	r3, [sp, #40]	; 0x28
   26e44:	cmp	r7, r3
   26e48:	ldr	r3, [sp, #36]	; 0x24
   26e4c:	ldr	r1, [r3]
   26e50:	ldr	r3, [sp, #32]
   26e54:	ldr	r2, [r3, #4]!
   26e58:	mla	lr, r2, r1, lr
   26e5c:	str	r3, [sp, #32]
   26e60:	ldr	r3, [r0, #4]!
   26e64:	ldr	r2, [sp, #20]
   26e68:	str	r0, [sp, #28]
   26e6c:	mul	r3, r3, r2
   26e70:	str	r3, [sp, #20]
   26e74:	bne	26df4 <GetDataSlab+0x4fc8>
   26e78:	ldr	r3, [sp, #8]
   26e7c:	cmp	r6, #1
   26e80:	add	r5, r3, lr
   26e84:	ldr	r3, [sp, #20]
   26e88:	beq	3c380 <GetDataSlab+0x1a554>
   26e8c:	cmp	r3, #0
   26e90:	ble	30874 <GetDataSlab+0xea48>
   26e94:	ldr	r3, [r9]
   26e98:	str	r3, [sp, #8]
   26e9c:	mov	r3, #0
   26ea0:	str	r3, [sp, #24]
   26ea4:	ldr	r3, [sp, #8]
   26ea8:	cmp	r3, #0
   26eac:	addne	r5, r5, r3
   26eb0:	addne	lr, lr, r3
   26eb4:	cmp	fp, #0
   26eb8:	ble	26f04 <GetDataSlab+0x50d8>
   26ebc:	ldr	r3, [sp, #4]
   26ec0:	ldr	r2, [sp, #24]
   26ec4:	add	r1, r3, r2, lsl #2
   26ec8:	mov	r2, #0
   26ecc:	ldrsb	r3, [r5]
   26ed0:	add	r2, r2, #1
   26ed4:	str	r3, [r1], #4
   26ed8:	ldr	r3, [sp, #228]	; 0xe4
   26edc:	ldr	r6, [sl]
   26ee0:	ldr	fp, [r3]
   26ee4:	add	r5, r5, r6
   26ee8:	add	lr, lr, r6
   26eec:	cmp	fp, r2
   26ef0:	bgt	26ecc <GetDataSlab+0x50a0>
   26ef4:	ldr	r3, [r9]
   26ef8:	str	r3, [sp, #8]
   26efc:	ldr	r3, [r8]
   26f00:	str	r3, [sp, #16]
   26f04:	ldr	r2, [sp, #8]
   26f08:	ldr	r3, [sp, #16]
   26f0c:	sub	r3, r3, r2
   26f10:	ldr	r2, [sp, #232]	; 0xe8
   26f14:	mls	r3, r6, fp, r3
   26f18:	cmp	r2, #1
   26f1c:	add	lr, lr, r3
   26f20:	add	r5, r5, r3
   26f24:	ble	3439c <GetDataSlab+0x12570>
   26f28:	ldr	r3, [sp, #100]	; 0x64
   26f2c:	ldr	r2, [sp, #228]	; 0xe4
   26f30:	add	r3, r3, #1
   26f34:	ldr	r1, [r2, #4]
   26f38:	str	r3, [sp, #100]	; 0x64
   26f3c:	sdiv	r2, r3, r1
   26f40:	mls	r3, r1, r2, r3
   26f44:	cmp	r3, #0
   26f48:	bne	34384 <GetDataSlab+0x12558>
   26f4c:	add	ip, sp, #100	; 0x64
   26f50:	mov	r0, #1
   26f54:	ldr	r4, [sp, #12]
   26f58:	ldr	r3, [sp, #228]	; 0xe4
   26f5c:	add	r7, r3, #4
   26f60:	b	26fa8 <GetDataSlab+0x517c>
   26f64:	ldr	r3, [r4, #-4]
   26f68:	ldr	r1, [r9, r0, lsl #2]
   26f6c:	mla	r3, r1, r3, r2
   26f70:	add	r5, r5, r3
   26f74:	add	lr, lr, r3
   26f78:	ldr	r3, [sp, #232]	; 0xe8
   26f7c:	add	r0, r0, #1
   26f80:	cmp	r3, r0
   26f84:	beq	3439c <GetDataSlab+0x12570>
   26f88:	ldr	r3, [ip]
   26f8c:	ldr	r1, [r7, #4]!
   26f90:	add	r3, r3, #1
   26f94:	sdiv	r2, r3, r1
   26f98:	str	r3, [ip]
   26f9c:	mls	r3, r1, r2, r3
   26fa0:	cmp	r3, #0
   26fa4:	bne	34388 <GetDataSlab+0x1255c>
   26fa8:	ldr	r2, [r4, #4]!
   26fac:	mov	r3, #0
   26fb0:	str	r3, [ip], #4
   26fb4:	sdiv	r3, lr, r2
   26fb8:	mls	r3, r2, r3, lr
   26fbc:	cmp	r3, #0
   26fc0:	sub	r2, r2, r3
   26fc4:	bne	26f64 <GetDataSlab+0x5138>
   26fc8:	ldr	r3, [r9, r0, lsl #2]
   26fcc:	cmp	r3, #0
   26fd0:	beq	26f78 <GetDataSlab+0x514c>
   26fd4:	ldr	r2, [r4, #-4]
   26fd8:	mul	r3, r2, r3
   26fdc:	add	r5, r5, r3
   26fe0:	add	lr, lr, r3
   26fe4:	b	26f78 <GetDataSlab+0x514c>
   26fe8:	ldr	r3, [sl]
   26fec:	str	r3, [sp, #28]
   26ff0:	ldr	r3, [sp, #232]	; 0xe8
   26ff4:	cmp	r3, #1
   26ff8:	ldr	r3, [r8]
   26ffc:	str	r3, [sp, #40]	; 0x28
   27000:	ldr	r3, [sp, #228]	; 0xe4
   27004:	ldr	r3, [r3]
   27008:	str	r3, [sp, #20]
   2700c:	ldr	r3, [sp, #28]
   27010:	sub	r3, r3, #1
   27014:	str	r3, [sp, #56]	; 0x38
   27018:	ldr	r3, [sp, #40]	; 0x28
   2701c:	str	r3, [sp, #136]	; 0x88
   27020:	ble	3fbfc <GetDataSlab+0x1ddd0>
   27024:	add	r5, sl, #4
   27028:	ldr	fp, [sp, #228]	; 0xe4
   2702c:	add	lr, sp, #60	; 0x3c
   27030:	mov	r4, r8
   27034:	mov	r7, #0
   27038:	str	r9, [sp, #24]
   2703c:	ldr	r3, [sp, #232]	; 0xe8
   27040:	add	r3, sl, r3, lsl #2
   27044:	ldr	sl, [sp, #12]
   27048:	str	r3, [sp, #32]
   2704c:	ldr	r3, [sp, #20]
   27050:	str	r3, [sp, #16]
   27054:	ldr	r3, [r5], #4
   27058:	mov	r6, sl
   2705c:	ldr	r0, [r4], #4
   27060:	sub	ip, r3, #1
   27064:	mov	r1, r4
   27068:	str	ip, [lr], #4
   2706c:	mov	r3, r1
   27070:	ldr	r2, [r1, #-4]!
   27074:	ldr	r3, [r3]
   27078:	cmp	r1, r8
   2707c:	mul	ip, r2, ip
   27080:	mul	r0, r3, r0
   27084:	bne	2706c <GetDataSlab+0x5240>
   27088:	ldr	r3, [sp, #32]
   2708c:	str	r0, [sl, #4]!
   27090:	ldr	r1, [r6]
   27094:	str	ip, [lr, #-4]
   27098:	cmp	r5, r3
   2709c:	ldr	r3, [sp, #24]
   270a0:	ldr	r2, [r3, #4]!
   270a4:	mla	r7, r2, r1, r7
   270a8:	str	r3, [sp, #24]
   270ac:	ldr	r3, [fp, #4]!
   270b0:	ldr	r2, [sp, #16]
   270b4:	mul	r3, r3, r2
   270b8:	str	r3, [sp, #16]
   270bc:	bne	27054 <GetDataSlab+0x5228>
   270c0:	ldr	r3, [sp, #28]
   270c4:	cmp	r3, #1
   270c8:	ldr	r3, [sp, #8]
   270cc:	add	r8, r3, r7, lsl #3
   270d0:	ldr	r3, [sp, #16]
   270d4:	beq	3a710 <GetDataSlab+0x188e4>
   270d8:	cmp	r3, #0
   270dc:	ble	30874 <GetDataSlab+0xea48>
   270e0:	ldr	r3, [r9]
   270e4:	mov	sl, #0
   270e8:	ldr	r2, [sp, #20]
   270ec:	ldr	r1, [sp, #28]
   270f0:	str	r3, [sp, #24]
   270f4:	ldr	r3, [sp, #28]
   270f8:	lsl	r2, r2, #3
   270fc:	str	r2, [sp, #36]	; 0x24
   27100:	mov	r2, #0
   27104:	lsl	fp, r3, #3
   27108:	ldr	r3, [sp, #20]
   2710c:	str	r2, [sp, #8]
   27110:	ldr	r2, [sp, #28]
   27114:	sub	r3, r3, #1
   27118:	mul	r3, r2, r3
   2711c:	ldr	r2, [sp, #36]	; 0x24
   27120:	str	r3, [sp, #44]	; 0x2c
   27124:	ldr	r3, [sp, #20]
   27128:	mul	r3, fp, r3
   2712c:	str	r3, [sp, #48]	; 0x30
   27130:	ldr	r3, [sp, #4]
   27134:	add	r6, r3, r2
   27138:	ldr	r2, [sp, #24]
   2713c:	ldr	r3, [sp, #40]	; 0x28
   27140:	sub	r3, r3, r2
   27144:	lsl	r2, r2, #3
   27148:	str	r2, [sp, #52]	; 0x34
   2714c:	ldr	r2, [sp, #20]
   27150:	mls	r3, r1, r2, r3
   27154:	str	r3, [sp, #32]
   27158:	lsl	r3, r3, #3
   2715c:	str	r3, [sp, #40]	; 0x28
   27160:	ldr	r3, [sp, #24]
   27164:	cmp	r3, #0
   27168:	beq	2717c <GetDataSlab+0x5350>
   2716c:	ldr	r3, [sp, #52]	; 0x34
   27170:	add	r8, r8, r3
   27174:	ldr	r3, [sp, #24]
   27178:	add	r7, r7, r3
   2717c:	ldr	r3, [sp, #20]
   27180:	cmp	r3, #0
   27184:	ble	271c8 <GetDataSlab+0x539c>
   27188:	ldr	r3, [sp, #4]
   2718c:	mov	r5, r8
   27190:	ldr	r2, [sp, #8]
   27194:	add	r4, r3, r2, lsl #3
   27198:	ldrd	r0, [r5]
   2719c:	add	r5, r5, fp
   271a0:	bl	4e430 <__aeabi_d2ulz>
   271a4:	strd	r0, [r4], #8
   271a8:	cmp	r4, r6
   271ac:	bne	27198 <GetDataSlab+0x536c>
   271b0:	ldr	r3, [sp, #28]
   271b4:	ldr	r2, [sp, #48]	; 0x30
   271b8:	add	r3, r3, r7
   271bc:	add	r8, r8, r2
   271c0:	ldr	r2, [sp, #44]	; 0x2c
   271c4:	add	r7, r2, r3
   271c8:	ldr	r3, [sp, #232]	; 0xe8
   271cc:	cmp	r3, #1
   271d0:	ldr	r3, [sp, #32]
   271d4:	add	r7, r7, r3
   271d8:	ldr	r3, [sp, #40]	; 0x28
   271dc:	add	r8, r8, r3
   271e0:	ble	34358 <GetDataSlab+0x1252c>
   271e4:	ldr	r3, [sp, #100]	; 0x64
   271e8:	ldr	r2, [sp, #228]	; 0xe4
   271ec:	add	r3, r3, #1
   271f0:	ldr	r1, [r2, #4]
   271f4:	str	r3, [sp, #100]	; 0x64
   271f8:	sdiv	r2, r3, r1
   271fc:	mls	r3, r1, r2, r3
   27200:	cmp	r3, #0
   27204:	bne	34340 <GetDataSlab+0x12514>
   27208:	add	ip, sp, #100	; 0x64
   2720c:	mov	r0, #1
   27210:	ldr	lr, [sp, #12]
   27214:	ldr	r3, [sp, #228]	; 0xe4
   27218:	add	r4, r3, #4
   2721c:	b	27264 <GetDataSlab+0x5438>
   27220:	ldr	r3, [lr, #-4]
   27224:	ldr	r1, [r9, r0, lsl #2]
   27228:	mla	r3, r1, r3, r2
   2722c:	add	r8, r8, r3, lsl #3
   27230:	add	r7, r7, r3
   27234:	ldr	r3, [sp, #232]	; 0xe8
   27238:	add	r0, r0, #1
   2723c:	cmp	r3, r0
   27240:	beq	34358 <GetDataSlab+0x1252c>
   27244:	ldr	r3, [ip]
   27248:	ldr	r1, [r4, #4]!
   2724c:	add	r3, r3, #1
   27250:	sdiv	r2, r3, r1
   27254:	str	r3, [ip]
   27258:	mls	r3, r1, r2, r3
   2725c:	cmp	r3, #0
   27260:	bne	34344 <GetDataSlab+0x12518>
   27264:	ldr	r2, [lr, #4]!
   27268:	str	sl, [ip], #4
   2726c:	sdiv	r3, r7, r2
   27270:	mls	r3, r2, r3, r7
   27274:	cmp	r3, #0
   27278:	sub	r2, r2, r3
   2727c:	bne	27220 <GetDataSlab+0x53f4>
   27280:	ldr	r3, [r9, r0, lsl #2]
   27284:	cmp	r3, #0
   27288:	beq	27234 <GetDataSlab+0x5408>
   2728c:	ldr	r2, [lr, #-4]
   27290:	mul	r3, r2, r3
   27294:	add	r8, r8, r3, lsl #3
   27298:	add	r7, r7, r3
   2729c:	b	27234 <GetDataSlab+0x5408>
   272a0:	ldr	r3, [sl]
   272a4:	str	r3, [sp, #28]
   272a8:	ldr	r3, [sp, #232]	; 0xe8
   272ac:	cmp	r3, #1
   272b0:	ldr	r3, [r8]
   272b4:	str	r3, [sp, #40]	; 0x28
   272b8:	ldr	r3, [sp, #228]	; 0xe4
   272bc:	ldr	r3, [r3]
   272c0:	str	r3, [sp, #20]
   272c4:	ldr	r3, [sp, #28]
   272c8:	sub	r3, r3, #1
   272cc:	str	r3, [sp, #56]	; 0x38
   272d0:	ldr	r3, [sp, #40]	; 0x28
   272d4:	str	r3, [sp, #136]	; 0x88
   272d8:	ble	3fc1c <GetDataSlab+0x1ddf0>
   272dc:	add	r5, sl, #4
   272e0:	ldr	fp, [sp, #228]	; 0xe4
   272e4:	add	lr, sp, #60	; 0x3c
   272e8:	mov	r4, r8
   272ec:	mov	r7, #0
   272f0:	str	r9, [sp, #24]
   272f4:	ldr	r3, [sp, #232]	; 0xe8
   272f8:	add	r3, sl, r3, lsl #2
   272fc:	ldr	sl, [sp, #12]
   27300:	str	r3, [sp, #32]
   27304:	ldr	r3, [sp, #20]
   27308:	str	r3, [sp, #16]
   2730c:	ldr	r3, [r5], #4
   27310:	mov	r6, sl
   27314:	ldr	r0, [r4], #4
   27318:	sub	ip, r3, #1
   2731c:	mov	r1, r4
   27320:	str	ip, [lr], #4
   27324:	mov	r3, r1
   27328:	ldr	r2, [r1, #-4]!
   2732c:	ldr	r3, [r3]
   27330:	cmp	r1, r8
   27334:	mul	ip, r2, ip
   27338:	mul	r0, r3, r0
   2733c:	bne	27324 <GetDataSlab+0x54f8>
   27340:	ldr	r3, [sp, #32]
   27344:	str	r0, [sl, #4]!
   27348:	ldr	r1, [r6]
   2734c:	str	ip, [lr, #-4]
   27350:	cmp	r5, r3
   27354:	ldr	r3, [sp, #24]
   27358:	ldr	r2, [r3, #4]!
   2735c:	mla	r7, r2, r1, r7
   27360:	str	r3, [sp, #24]
   27364:	ldr	r3, [fp, #4]!
   27368:	ldr	r2, [sp, #16]
   2736c:	mul	r3, r3, r2
   27370:	str	r3, [sp, #16]
   27374:	bne	2730c <GetDataSlab+0x54e0>
   27378:	ldr	r3, [sp, #28]
   2737c:	cmp	r3, #1
   27380:	ldr	r3, [sp, #8]
   27384:	add	r8, r3, r7, lsl #2
   27388:	ldr	r3, [sp, #16]
   2738c:	beq	3a3ec <GetDataSlab+0x185c0>
   27390:	cmp	r3, #0
   27394:	ble	30874 <GetDataSlab+0xea48>
   27398:	ldr	r3, [r9]
   2739c:	mov	sl, #0
   273a0:	ldr	r2, [sp, #20]
   273a4:	ldr	r1, [sp, #28]
   273a8:	str	r3, [sp, #24]
   273ac:	ldr	r3, [sp, #28]
   273b0:	lsl	r2, r2, #3
   273b4:	str	r2, [sp, #36]	; 0x24
   273b8:	mov	r2, #0
   273bc:	lsl	fp, r3, #2
   273c0:	ldr	r3, [sp, #20]
   273c4:	str	r2, [sp, #8]
   273c8:	ldr	r2, [sp, #28]
   273cc:	sub	r3, r3, #1
   273d0:	mul	r3, r2, r3
   273d4:	ldr	r2, [sp, #36]	; 0x24
   273d8:	str	r3, [sp, #44]	; 0x2c
   273dc:	ldr	r3, [sp, #20]
   273e0:	mul	r3, fp, r3
   273e4:	str	r3, [sp, #48]	; 0x30
   273e8:	ldr	r3, [sp, #4]
   273ec:	add	r6, r3, r2
   273f0:	ldr	r2, [sp, #24]
   273f4:	ldr	r3, [sp, #40]	; 0x28
   273f8:	sub	r3, r3, r2
   273fc:	lsl	r2, r2, #2
   27400:	str	r2, [sp, #52]	; 0x34
   27404:	ldr	r2, [sp, #20]
   27408:	mls	r3, r1, r2, r3
   2740c:	str	r3, [sp, #32]
   27410:	lsl	r3, r3, #2
   27414:	str	r3, [sp, #40]	; 0x28
   27418:	ldr	r3, [sp, #24]
   2741c:	cmp	r3, #0
   27420:	beq	27434 <GetDataSlab+0x5608>
   27424:	ldr	r3, [sp, #52]	; 0x34
   27428:	add	r8, r8, r3
   2742c:	ldr	r3, [sp, #24]
   27430:	add	r7, r7, r3
   27434:	ldr	r3, [sp, #20]
   27438:	cmp	r3, #0
   2743c:	ble	27480 <GetDataSlab+0x5654>
   27440:	ldr	r3, [sp, #4]
   27444:	mov	r5, r8
   27448:	ldr	r2, [sp, #8]
   2744c:	add	r4, r3, r2, lsl #3
   27450:	ldr	r0, [r5]
   27454:	add	r5, r5, fp
   27458:	bl	4e3f0 <__aeabi_f2ulz>
   2745c:	strd	r0, [r4], #8
   27460:	cmp	r4, r6
   27464:	bne	27450 <GetDataSlab+0x5624>
   27468:	ldr	r3, [sp, #28]
   2746c:	ldr	r2, [sp, #48]	; 0x30
   27470:	add	r3, r3, r7
   27474:	add	r8, r8, r2
   27478:	ldr	r2, [sp, #44]	; 0x2c
   2747c:	add	r7, r2, r3
   27480:	ldr	r3, [sp, #232]	; 0xe8
   27484:	cmp	r3, #1
   27488:	ldr	r3, [sp, #32]
   2748c:	add	r7, r7, r3
   27490:	ldr	r3, [sp, #40]	; 0x28
   27494:	add	r8, r8, r3
   27498:	ble	34314 <GetDataSlab+0x124e8>
   2749c:	ldr	r3, [sp, #100]	; 0x64
   274a0:	ldr	r2, [sp, #228]	; 0xe4
   274a4:	add	r3, r3, #1
   274a8:	ldr	r1, [r2, #4]
   274ac:	str	r3, [sp, #100]	; 0x64
   274b0:	sdiv	r2, r3, r1
   274b4:	mls	r3, r1, r2, r3
   274b8:	cmp	r3, #0
   274bc:	bne	342fc <GetDataSlab+0x124d0>
   274c0:	add	ip, sp, #100	; 0x64
   274c4:	mov	r0, #1
   274c8:	ldr	lr, [sp, #12]
   274cc:	ldr	r3, [sp, #228]	; 0xe4
   274d0:	add	r4, r3, #4
   274d4:	b	2751c <GetDataSlab+0x56f0>
   274d8:	ldr	r3, [lr, #-4]
   274dc:	ldr	r1, [r9, r0, lsl #2]
   274e0:	mla	r3, r1, r3, r2
   274e4:	add	r8, r8, r3, lsl #2
   274e8:	add	r7, r7, r3
   274ec:	ldr	r3, [sp, #232]	; 0xe8
   274f0:	add	r0, r0, #1
   274f4:	cmp	r3, r0
   274f8:	beq	34314 <GetDataSlab+0x124e8>
   274fc:	ldr	r3, [ip]
   27500:	ldr	r1, [r4, #4]!
   27504:	add	r3, r3, #1
   27508:	sdiv	r2, r3, r1
   2750c:	str	r3, [ip]
   27510:	mls	r3, r1, r2, r3
   27514:	cmp	r3, #0
   27518:	bne	34300 <GetDataSlab+0x124d4>
   2751c:	ldr	r2, [lr, #4]!
   27520:	str	sl, [ip], #4
   27524:	sdiv	r3, r7, r2
   27528:	mls	r3, r2, r3, r7
   2752c:	cmp	r3, #0
   27530:	sub	r2, r2, r3
   27534:	bne	274d8 <GetDataSlab+0x56ac>
   27538:	ldr	r3, [r9, r0, lsl #2]
   2753c:	cmp	r3, #0
   27540:	beq	274ec <GetDataSlab+0x56c0>
   27544:	ldr	r2, [lr, #-4]
   27548:	mul	r3, r2, r3
   2754c:	add	r8, r8, r3, lsl #2
   27550:	add	r7, r7, r3
   27554:	b	274ec <GetDataSlab+0x56c0>
   27558:	ldr	r3, [sl]
   2755c:	str	r3, [sp, #28]
   27560:	ldr	r3, [sp, #232]	; 0xe8
   27564:	cmp	r3, #1
   27568:	ldr	r3, [r8]
   2756c:	str	r3, [sp, #36]	; 0x24
   27570:	ldr	r3, [sp, #228]	; 0xe4
   27574:	ldr	r3, [r3]
   27578:	str	r3, [sp, #20]
   2757c:	ldr	r3, [sp, #28]
   27580:	sub	r3, r3, #1
   27584:	str	r3, [sp, #56]	; 0x38
   27588:	ldr	r3, [sp, #36]	; 0x24
   2758c:	str	r3, [sp, #136]	; 0x88
   27590:	ble	3fc0c <GetDataSlab+0x1dde0>
   27594:	add	r6, sl, #4
   27598:	ldr	fp, [sp, #228]	; 0xe4
   2759c:	add	lr, sp, #60	; 0x3c
   275a0:	mov	r5, r8
   275a4:	mov	r4, #0
   275a8:	str	r9, [sp, #24]
   275ac:	ldr	r3, [sp, #232]	; 0xe8
   275b0:	add	r3, sl, r3, lsl #2
   275b4:	ldr	sl, [sp, #12]
   275b8:	str	r3, [sp, #32]
   275bc:	ldr	r3, [sp, #20]
   275c0:	str	r3, [sp, #16]
   275c4:	ldr	r3, [r6], #4
   275c8:	mov	r7, sl
   275cc:	ldr	r0, [r5], #4
   275d0:	sub	ip, r3, #1
   275d4:	mov	r1, r5
   275d8:	str	ip, [lr], #4
   275dc:	mov	r3, r1
   275e0:	ldr	r2, [r1, #-4]!
   275e4:	ldr	r3, [r3]
   275e8:	cmp	r1, r8
   275ec:	mul	ip, r2, ip
   275f0:	mul	r0, r3, r0
   275f4:	bne	275dc <GetDataSlab+0x57b0>
   275f8:	ldr	r3, [sp, #32]
   275fc:	str	r0, [sl, #4]!
   27600:	ldr	r1, [r7]
   27604:	str	ip, [lr, #-4]
   27608:	cmp	r6, r3
   2760c:	ldr	r3, [sp, #24]
   27610:	ldr	r2, [r3, #4]!
   27614:	mla	r4, r2, r1, r4
   27618:	str	r3, [sp, #24]
   2761c:	ldr	r3, [fp, #4]!
   27620:	ldr	r2, [sp, #16]
   27624:	mul	r3, r3, r2
   27628:	str	r3, [sp, #16]
   2762c:	bne	275c4 <GetDataSlab+0x5798>
   27630:	ldr	r3, [sp, #28]
   27634:	cmp	r3, #1
   27638:	ldr	r3, [sp, #8]
   2763c:	add	r6, r3, r4, lsl #2
   27640:	ldr	r3, [sp, #16]
   27644:	beq	3a58c <GetDataSlab+0x18760>
   27648:	cmp	r3, #0
   2764c:	ble	30874 <GetDataSlab+0xea48>
   27650:	ldr	r3, [r9]
   27654:	mov	fp, #0
   27658:	mov	r7, fp
   2765c:	ldr	r2, [sp, #20]
   27660:	ldr	r1, [sp, #28]
   27664:	str	r3, [sp, #8]
   27668:	ldr	r3, [sp, #28]
   2766c:	lsl	r2, r2, #3
   27670:	str	r2, [sp, #32]
   27674:	lsl	r8, r3, #2
   27678:	ldr	r3, [sp, #20]
   2767c:	ldr	r2, [sp, #28]
   27680:	sub	r3, r3, #1
   27684:	mul	r3, r2, r3
   27688:	ldr	r2, [sp, #32]
   2768c:	str	r3, [sp, #40]	; 0x28
   27690:	ldr	r3, [sp, #20]
   27694:	mul	r3, r8, r3
   27698:	str	r3, [sp, #44]	; 0x2c
   2769c:	ldr	r3, [sp, #4]
   276a0:	add	sl, r3, r2
   276a4:	ldr	r2, [sp, #8]
   276a8:	ldr	r3, [sp, #36]	; 0x24
   276ac:	sub	r3, r3, r2
   276b0:	lsl	r2, r2, #2
   276b4:	str	r2, [sp, #48]	; 0x30
   276b8:	ldr	r2, [sp, #20]
   276bc:	mls	r3, r1, r2, r3
   276c0:	str	r3, [sp, #24]
   276c4:	lsl	r3, r3, #2
   276c8:	str	r3, [sp, #36]	; 0x24
   276cc:	ldr	r3, [sp, #8]
   276d0:	cmp	r3, #0
   276d4:	beq	276e8 <GetDataSlab+0x58bc>
   276d8:	ldr	r3, [sp, #48]	; 0x30
   276dc:	add	r6, r6, r3
   276e0:	ldr	r3, [sp, #8]
   276e4:	add	r4, r4, r3
   276e8:	ldr	r3, [sp, #20]
   276ec:	cmp	r3, #0
   276f0:	ble	2772c <GetDataSlab+0x5900>
   276f4:	ldr	r3, [sp, #4]
   276f8:	mov	r1, r6
   276fc:	add	r2, r3, fp, lsl #3
   27700:	ldr	r3, [r1], r8
   27704:	stm	r2, {r3, r7}
   27708:	add	r2, r2, #8
   2770c:	cmp	r2, sl
   27710:	bne	27700 <GetDataSlab+0x58d4>
   27714:	ldr	r3, [sp, #28]
   27718:	ldr	r2, [sp, #44]	; 0x2c
   2771c:	add	r3, r3, r4
   27720:	add	r6, r6, r2
   27724:	ldr	r2, [sp, #40]	; 0x28
   27728:	add	r4, r3, r2
   2772c:	ldr	r3, [sp, #232]	; 0xe8
   27730:	cmp	r3, #1
   27734:	ldr	r3, [sp, #24]
   27738:	add	r4, r4, r3
   2773c:	ldr	r3, [sp, #36]	; 0x24
   27740:	add	r6, r6, r3
   27744:	ble	342dc <GetDataSlab+0x124b0>
   27748:	ldr	r3, [sp, #100]	; 0x64
   2774c:	ldr	r2, [sp, #228]	; 0xe4
   27750:	add	r3, r3, #1
   27754:	ldr	r1, [r2, #4]
   27758:	str	r3, [sp, #100]	; 0x64
   2775c:	sdiv	r2, r3, r1
   27760:	mls	r3, r1, r2, r3
   27764:	cmp	r3, #0
   27768:	bne	342c4 <GetDataSlab+0x12498>
   2776c:	add	ip, sp, #100	; 0x64
   27770:	mov	r0, #1
   27774:	ldr	lr, [sp, #12]
   27778:	ldr	r3, [sp, #228]	; 0xe4
   2777c:	add	r5, r3, #4
   27780:	b	277c8 <GetDataSlab+0x599c>
   27784:	ldr	r3, [lr, #-4]
   27788:	ldr	r1, [r9, r0, lsl #2]
   2778c:	mla	r3, r1, r3, r2
   27790:	add	r6, r6, r3, lsl #2
   27794:	add	r4, r4, r3
   27798:	ldr	r3, [sp, #232]	; 0xe8
   2779c:	add	r0, r0, #1
   277a0:	cmp	r3, r0
   277a4:	beq	342dc <GetDataSlab+0x124b0>
   277a8:	ldr	r3, [ip]
   277ac:	ldr	r1, [r5, #4]!
   277b0:	add	r3, r3, #1
   277b4:	sdiv	r2, r3, r1
   277b8:	str	r3, [ip]
   277bc:	mls	r3, r1, r2, r3
   277c0:	cmp	r3, #0
   277c4:	bne	342c8 <GetDataSlab+0x1249c>
   277c8:	ldr	r2, [lr, #4]!
   277cc:	str	r7, [ip], #4
   277d0:	sdiv	r3, r4, r2
   277d4:	mls	r3, r2, r3, r4
   277d8:	cmp	r3, #0
   277dc:	sub	r2, r2, r3
   277e0:	bne	27784 <GetDataSlab+0x5958>
   277e4:	ldr	r3, [r9, r0, lsl #2]
   277e8:	cmp	r3, #0
   277ec:	beq	27798 <GetDataSlab+0x596c>
   277f0:	ldr	r2, [lr, #-4]
   277f4:	mul	r3, r2, r3
   277f8:	add	r6, r6, r3, lsl #2
   277fc:	add	r4, r4, r3
   27800:	b	27798 <GetDataSlab+0x596c>
   27804:	ldr	r3, [sl]
   27808:	str	r3, [sp, #28]
   2780c:	ldr	r3, [sp, #232]	; 0xe8
   27810:	cmp	r3, #1
   27814:	ldr	r3, [r8]
   27818:	str	r3, [sp, #36]	; 0x24
   2781c:	ldr	r3, [sp, #228]	; 0xe4
   27820:	ldr	r3, [r3]
   27824:	str	r3, [sp, #20]
   27828:	ldr	r3, [sp, #28]
   2782c:	sub	r3, r3, #1
   27830:	str	r3, [sp, #56]	; 0x38
   27834:	ldr	r3, [sp, #36]	; 0x24
   27838:	str	r3, [sp, #136]	; 0x88
   2783c:	ble	3fbbc <GetDataSlab+0x1dd90>
   27840:	add	r6, sl, #4
   27844:	ldr	fp, [sp, #228]	; 0xe4
   27848:	add	lr, sp, #60	; 0x3c
   2784c:	mov	r5, r8
   27850:	mov	r4, #0
   27854:	str	r9, [sp, #24]
   27858:	ldr	r3, [sp, #232]	; 0xe8
   2785c:	add	r3, sl, r3, lsl #2
   27860:	ldr	sl, [sp, #12]
   27864:	str	r3, [sp, #32]
   27868:	ldr	r3, [sp, #20]
   2786c:	str	r3, [sp, #16]
   27870:	ldr	r3, [r6], #4
   27874:	mov	r7, sl
   27878:	ldr	r0, [r5], #4
   2787c:	sub	ip, r3, #1
   27880:	mov	r1, r5
   27884:	str	ip, [lr], #4
   27888:	mov	r3, r1
   2788c:	ldr	r2, [r1, #-4]!
   27890:	ldr	r3, [r3]
   27894:	cmp	r1, r8
   27898:	mul	ip, r2, ip
   2789c:	mul	r0, r3, r0
   278a0:	bne	27888 <GetDataSlab+0x5a5c>
   278a4:	ldr	r3, [sp, #32]
   278a8:	str	r0, [sl, #4]!
   278ac:	ldr	r1, [r7]
   278b0:	str	ip, [lr, #-4]
   278b4:	cmp	r6, r3
   278b8:	ldr	r3, [sp, #24]
   278bc:	ldr	r2, [r3, #4]!
   278c0:	mla	r4, r2, r1, r4
   278c4:	str	r3, [sp, #24]
   278c8:	ldr	r3, [fp, #4]!
   278cc:	ldr	r2, [sp, #16]
   278d0:	mul	r3, r3, r2
   278d4:	str	r3, [sp, #16]
   278d8:	bne	27870 <GetDataSlab+0x5a44>
   278dc:	ldr	r3, [sp, #28]
   278e0:	cmp	r3, #1
   278e4:	ldr	r3, [sp, #8]
   278e8:	add	r6, r3, r4, lsl #2
   278ec:	ldr	r3, [sp, #16]
   278f0:	beq	3b018 <GetDataSlab+0x191ec>
   278f4:	cmp	r3, #0
   278f8:	ble	30874 <GetDataSlab+0xea48>
   278fc:	ldr	r3, [r9]
   27900:	mov	fp, #0
   27904:	mov	sl, fp
   27908:	ldr	r2, [sp, #20]
   2790c:	ldr	r1, [sp, #20]
   27910:	str	r3, [sp, #8]
   27914:	ldr	r3, [sp, #28]
   27918:	lsl	r2, r2, #3
   2791c:	str	r2, [sp, #32]
   27920:	lsl	r7, r3, #2
   27924:	ldr	r3, [sp, #20]
   27928:	ldr	r2, [sp, #28]
   2792c:	sub	r3, r3, #1
   27930:	mul	r3, r2, r3
   27934:	ldr	r2, [sp, #32]
   27938:	str	r3, [sp, #40]	; 0x28
   2793c:	ldr	r3, [sp, #20]
   27940:	mul	r3, r3, r7
   27944:	str	r3, [sp, #44]	; 0x2c
   27948:	ldr	r3, [sp, #4]
   2794c:	add	r8, r3, r2
   27950:	ldr	r2, [sp, #8]
   27954:	ldr	r3, [sp, #36]	; 0x24
   27958:	sub	r3, r3, r2
   2795c:	lsl	r2, r2, #2
   27960:	str	r2, [sp, #48]	; 0x30
   27964:	ldr	r2, [sp, #28]
   27968:	mls	r3, r1, r2, r3
   2796c:	str	r3, [sp, #24]
   27970:	lsl	r3, r3, #2
   27974:	str	r3, [sp, #36]	; 0x24
   27978:	ldr	r3, [sp, #8]
   2797c:	cmp	r3, #0
   27980:	beq	27994 <GetDataSlab+0x5b68>
   27984:	ldr	r3, [sp, #48]	; 0x30
   27988:	add	r6, r6, r3
   2798c:	ldr	r3, [sp, #8]
   27990:	add	r4, r4, r3
   27994:	ldr	r3, [sp, #20]
   27998:	cmp	r3, #0
   2799c:	ble	279dc <GetDataSlab+0x5bb0>
   279a0:	ldr	r3, [sp, #4]
   279a4:	mov	r0, r6
   279a8:	add	r1, r3, fp, lsl #3
   279ac:	ldr	r3, [r0], r7
   279b0:	mov	r2, r3
   279b4:	asr	r3, r3, #31
   279b8:	strd	r2, [r1], #8
   279bc:	cmp	r1, r8
   279c0:	bne	279ac <GetDataSlab+0x5b80>
   279c4:	ldr	r3, [sp, #28]
   279c8:	ldr	r2, [sp, #44]	; 0x2c
   279cc:	add	r3, r3, r4
   279d0:	add	r6, r6, r2
   279d4:	ldr	r2, [sp, #40]	; 0x28
   279d8:	add	r4, r2, r3
   279dc:	ldr	r3, [sp, #232]	; 0xe8
   279e0:	cmp	r3, #1
   279e4:	ldr	r3, [sp, #24]
   279e8:	add	r4, r4, r3
   279ec:	ldr	r3, [sp, #36]	; 0x24
   279f0:	add	r6, r6, r3
   279f4:	ble	342a4 <GetDataSlab+0x12478>
   279f8:	ldr	r3, [sp, #100]	; 0x64
   279fc:	ldr	r2, [sp, #228]	; 0xe4
   27a00:	add	r3, r3, #1
   27a04:	ldr	r1, [r2, #4]
   27a08:	str	r3, [sp, #100]	; 0x64
   27a0c:	sdiv	r2, r3, r1
   27a10:	mls	r3, r1, r2, r3
   27a14:	cmp	r3, #0
   27a18:	bne	3428c <GetDataSlab+0x12460>
   27a1c:	add	ip, sp, #100	; 0x64
   27a20:	mov	r0, #1
   27a24:	ldr	lr, [sp, #12]
   27a28:	ldr	r3, [sp, #228]	; 0xe4
   27a2c:	add	r5, r3, #4
   27a30:	b	27a78 <GetDataSlab+0x5c4c>
   27a34:	ldr	r3, [lr, #-4]
   27a38:	ldr	r1, [r9, r0, lsl #2]
   27a3c:	mla	r3, r1, r3, r2
   27a40:	add	r6, r6, r3, lsl #2
   27a44:	add	r4, r4, r3
   27a48:	ldr	r3, [sp, #232]	; 0xe8
   27a4c:	add	r0, r0, #1
   27a50:	cmp	r3, r0
   27a54:	beq	342a4 <GetDataSlab+0x12478>
   27a58:	ldr	r3, [ip]
   27a5c:	ldr	r1, [r5, #4]!
   27a60:	add	r3, r3, #1
   27a64:	sdiv	r2, r3, r1
   27a68:	str	r3, [ip]
   27a6c:	mls	r3, r1, r2, r3
   27a70:	cmp	r3, #0
   27a74:	bne	34290 <GetDataSlab+0x12464>
   27a78:	ldr	r2, [lr, #4]!
   27a7c:	str	sl, [ip], #4
   27a80:	sdiv	r3, r4, r2
   27a84:	mls	r3, r2, r3, r4
   27a88:	cmp	r3, #0
   27a8c:	sub	r2, r2, r3
   27a90:	bne	27a34 <GetDataSlab+0x5c08>
   27a94:	ldr	r3, [r9, r0, lsl #2]
   27a98:	cmp	r3, #0
   27a9c:	beq	27a48 <GetDataSlab+0x5c1c>
   27aa0:	ldr	r2, [lr, #-4]
   27aa4:	mul	r3, r2, r3
   27aa8:	add	r6, r6, r3, lsl #2
   27aac:	add	r4, r4, r3
   27ab0:	b	27a48 <GetDataSlab+0x5c1c>
   27ab4:	ldr	r3, [sl]
   27ab8:	str	r3, [sp, #28]
   27abc:	ldr	r3, [sp, #232]	; 0xe8
   27ac0:	cmp	r3, #1
   27ac4:	ldr	r3, [r8]
   27ac8:	str	r3, [sp, #36]	; 0x24
   27acc:	ldr	r3, [sp, #228]	; 0xe4
   27ad0:	ldr	r3, [r3]
   27ad4:	str	r3, [sp, #20]
   27ad8:	ldr	r3, [sp, #28]
   27adc:	sub	r3, r3, #1
   27ae0:	str	r3, [sp, #56]	; 0x38
   27ae4:	ldr	r3, [sp, #36]	; 0x24
   27ae8:	str	r3, [sp, #136]	; 0x88
   27aec:	ble	3fb34 <GetDataSlab+0x1dd08>
   27af0:	add	r6, sl, #4
   27af4:	ldr	fp, [sp, #228]	; 0xe4
   27af8:	add	lr, sp, #60	; 0x3c
   27afc:	mov	r5, r8
   27b00:	mov	r4, #0
   27b04:	str	r9, [sp, #24]
   27b08:	ldr	r3, [sp, #232]	; 0xe8
   27b0c:	add	r3, sl, r3, lsl #2
   27b10:	ldr	sl, [sp, #12]
   27b14:	str	r3, [sp, #32]
   27b18:	ldr	r3, [sp, #20]
   27b1c:	str	r3, [sp, #16]
   27b20:	ldr	r3, [r6], #4
   27b24:	mov	r7, sl
   27b28:	ldr	r0, [r5], #4
   27b2c:	sub	ip, r3, #1
   27b30:	mov	r1, r5
   27b34:	str	ip, [lr], #4
   27b38:	mov	r3, r1
   27b3c:	ldr	r2, [r1, #-4]!
   27b40:	ldr	r3, [r3]
   27b44:	cmp	r1, r8
   27b48:	mul	ip, r2, ip
   27b4c:	mul	r0, r3, r0
   27b50:	bne	27b38 <GetDataSlab+0x5d0c>
   27b54:	ldr	r3, [sp, #32]
   27b58:	str	r0, [sl, #4]!
   27b5c:	ldr	r1, [r7]
   27b60:	str	ip, [lr, #-4]
   27b64:	cmp	r6, r3
   27b68:	ldr	r3, [sp, #24]
   27b6c:	ldr	r2, [r3, #4]!
   27b70:	mla	r4, r2, r1, r4
   27b74:	str	r3, [sp, #24]
   27b78:	ldr	r3, [fp, #4]!
   27b7c:	ldr	r2, [sp, #16]
   27b80:	mul	r3, r3, r2
   27b84:	str	r3, [sp, #16]
   27b88:	bne	27b20 <GetDataSlab+0x5cf4>
   27b8c:	ldr	r3, [sp, #28]
   27b90:	cmp	r3, #1
   27b94:	ldr	r3, [sp, #8]
   27b98:	add	r6, r3, r4, lsl #1
   27b9c:	ldr	r3, [sp, #16]
   27ba0:	beq	3b308 <GetDataSlab+0x194dc>
   27ba4:	cmp	r3, #0
   27ba8:	ble	30874 <GetDataSlab+0xea48>
   27bac:	ldr	r3, [r9]
   27bb0:	mov	fp, #0
   27bb4:	mov	sl, fp
   27bb8:	ldr	r2, [sp, #20]
   27bbc:	ldr	r1, [sp, #20]
   27bc0:	str	r3, [sp, #8]
   27bc4:	ldr	r3, [sp, #28]
   27bc8:	lsl	r2, r2, #3
   27bcc:	str	r2, [sp, #32]
   27bd0:	lsl	r7, r3, #1
   27bd4:	ldr	r3, [sp, #20]
   27bd8:	ldr	r2, [sp, #28]
   27bdc:	sub	r3, r3, #1
   27be0:	mul	r3, r2, r3
   27be4:	ldr	r2, [sp, #32]
   27be8:	str	r3, [sp, #44]	; 0x2c
   27bec:	ldr	r3, [sp, #20]
   27bf0:	mul	r3, r3, r7
   27bf4:	str	r3, [sp, #40]	; 0x28
   27bf8:	ldr	r3, [sp, #4]
   27bfc:	add	r8, r3, r2
   27c00:	ldr	r2, [sp, #8]
   27c04:	ldr	r3, [sp, #36]	; 0x24
   27c08:	sub	r3, r3, r2
   27c0c:	lsl	r2, r2, #1
   27c10:	str	r2, [sp, #48]	; 0x30
   27c14:	ldr	r2, [sp, #28]
   27c18:	mls	r3, r1, r2, r3
   27c1c:	str	r3, [sp, #24]
   27c20:	lsl	r3, r3, #1
   27c24:	str	r3, [sp, #36]	; 0x24
   27c28:	ldr	r3, [sp, #8]
   27c2c:	cmp	r3, #0
   27c30:	beq	27c44 <GetDataSlab+0x5e18>
   27c34:	ldr	r3, [sp, #48]	; 0x30
   27c38:	add	r6, r6, r3
   27c3c:	ldr	r3, [sp, #8]
   27c40:	add	r4, r4, r3
   27c44:	ldr	r3, [sp, #20]
   27c48:	cmp	r3, #0
   27c4c:	ble	27c88 <GetDataSlab+0x5e5c>
   27c50:	ldr	r3, [sp, #4]
   27c54:	mov	r0, r6
   27c58:	add	r1, r3, fp, lsl #3
   27c5c:	ldrh	r2, [r0], r7
   27c60:	mov	r3, #0
   27c64:	strd	r2, [r1], #8
   27c68:	cmp	r1, r8
   27c6c:	bne	27c5c <GetDataSlab+0x5e30>
   27c70:	ldr	r3, [sp, #28]
   27c74:	ldr	r2, [sp, #40]	; 0x28
   27c78:	add	r3, r3, r4
   27c7c:	add	r6, r6, r2
   27c80:	ldr	r2, [sp, #44]	; 0x2c
   27c84:	add	r4, r3, r2
   27c88:	ldr	r3, [sp, #232]	; 0xe8
   27c8c:	cmp	r3, #1
   27c90:	ldr	r3, [sp, #24]
   27c94:	add	r4, r4, r3
   27c98:	ldr	r3, [sp, #36]	; 0x24
   27c9c:	add	r6, r6, r3
   27ca0:	ble	3426c <GetDataSlab+0x12440>
   27ca4:	ldr	r3, [sp, #100]	; 0x64
   27ca8:	ldr	r2, [sp, #228]	; 0xe4
   27cac:	add	r3, r3, #1
   27cb0:	ldr	r1, [r2, #4]
   27cb4:	str	r3, [sp, #100]	; 0x64
   27cb8:	sdiv	r2, r3, r1
   27cbc:	mls	r3, r1, r2, r3
   27cc0:	cmp	r3, #0
   27cc4:	bne	34254 <GetDataSlab+0x12428>
   27cc8:	add	ip, sp, #100	; 0x64
   27ccc:	mov	r0, #1
   27cd0:	ldr	lr, [sp, #12]
   27cd4:	ldr	r3, [sp, #228]	; 0xe4
   27cd8:	add	r5, r3, #4
   27cdc:	b	27d24 <GetDataSlab+0x5ef8>
   27ce0:	ldr	r3, [lr, #-4]
   27ce4:	ldr	r1, [r9, r0, lsl #2]
   27ce8:	mla	r3, r1, r3, r2
   27cec:	add	r6, r6, r3, lsl #1
   27cf0:	add	r4, r4, r3
   27cf4:	ldr	r3, [sp, #232]	; 0xe8
   27cf8:	add	r0, r0, #1
   27cfc:	cmp	r3, r0
   27d00:	beq	3426c <GetDataSlab+0x12440>
   27d04:	ldr	r3, [ip]
   27d08:	ldr	r1, [r5, #4]!
   27d0c:	add	r3, r3, #1
   27d10:	sdiv	r2, r3, r1
   27d14:	str	r3, [ip]
   27d18:	mls	r3, r1, r2, r3
   27d1c:	cmp	r3, #0
   27d20:	bne	34258 <GetDataSlab+0x1242c>
   27d24:	ldr	r2, [lr, #4]!
   27d28:	str	sl, [ip], #4
   27d2c:	sdiv	r3, r4, r2
   27d30:	mls	r3, r2, r3, r4
   27d34:	cmp	r3, #0
   27d38:	sub	r2, r2, r3
   27d3c:	bne	27ce0 <GetDataSlab+0x5eb4>
   27d40:	ldr	r3, [r9, r0, lsl #2]
   27d44:	cmp	r3, #0
   27d48:	beq	27cf4 <GetDataSlab+0x5ec8>
   27d4c:	ldr	r2, [lr, #-4]
   27d50:	mul	r3, r2, r3
   27d54:	add	r6, r6, r3, lsl #1
   27d58:	add	r4, r4, r3
   27d5c:	b	27cf4 <GetDataSlab+0x5ec8>
   27d60:	ldr	r3, [sl]
   27d64:	str	r3, [sp, #28]
   27d68:	ldr	r3, [sp, #232]	; 0xe8
   27d6c:	cmp	r3, #1
   27d70:	ldr	r3, [r8]
   27d74:	str	r3, [sp, #36]	; 0x24
   27d78:	ldr	r3, [sp, #228]	; 0xe4
   27d7c:	ldr	r3, [r3]
   27d80:	str	r3, [sp, #20]
   27d84:	ldr	r3, [sp, #28]
   27d88:	sub	r3, r3, #1
   27d8c:	str	r3, [sp, #56]	; 0x38
   27d90:	ldr	r3, [sp, #36]	; 0x24
   27d94:	str	r3, [sp, #136]	; 0x88
   27d98:	ble	3fc64 <GetDataSlab+0x1de38>
   27d9c:	add	r6, sl, #4
   27da0:	ldr	fp, [sp, #228]	; 0xe4
   27da4:	add	lr, sp, #60	; 0x3c
   27da8:	mov	r5, r8
   27dac:	mov	r4, #0
   27db0:	str	r9, [sp, #24]
   27db4:	ldr	r3, [sp, #232]	; 0xe8
   27db8:	add	r3, sl, r3, lsl #2
   27dbc:	ldr	sl, [sp, #12]
   27dc0:	str	r3, [sp, #32]
   27dc4:	ldr	r3, [sp, #20]
   27dc8:	str	r3, [sp, #16]
   27dcc:	ldr	r3, [r6], #4
   27dd0:	mov	r7, sl
   27dd4:	ldr	r0, [r5], #4
   27dd8:	sub	ip, r3, #1
   27ddc:	mov	r1, r5
   27de0:	str	ip, [lr], #4
   27de4:	mov	r3, r1
   27de8:	ldr	r2, [r1, #-4]!
   27dec:	ldr	r3, [r3]
   27df0:	cmp	r1, r8
   27df4:	mul	ip, r2, ip
   27df8:	mul	r0, r3, r0
   27dfc:	bne	27de4 <GetDataSlab+0x5fb8>
   27e00:	ldr	r3, [sp, #32]
   27e04:	str	r0, [sl, #4]!
   27e08:	ldr	r1, [r7]
   27e0c:	str	ip, [lr, #-4]
   27e10:	cmp	r6, r3
   27e14:	ldr	r3, [sp, #24]
   27e18:	ldr	r2, [r3, #4]!
   27e1c:	mla	r4, r2, r1, r4
   27e20:	str	r3, [sp, #24]
   27e24:	ldr	r3, [fp, #4]!
   27e28:	ldr	r2, [sp, #16]
   27e2c:	mul	r3, r3, r2
   27e30:	str	r3, [sp, #16]
   27e34:	bne	27dcc <GetDataSlab+0x5fa0>
   27e38:	ldr	r3, [sp, #28]
   27e3c:	cmp	r3, #1
   27e40:	ldr	r3, [sp, #8]
   27e44:	add	r6, r3, r4, lsl #1
   27e48:	ldr	r3, [sp, #16]
   27e4c:	beq	3a8b0 <GetDataSlab+0x18a84>
   27e50:	cmp	r3, #0
   27e54:	ble	30874 <GetDataSlab+0xea48>
   27e58:	ldr	r3, [r9]
   27e5c:	mov	fp, #0
   27e60:	mov	sl, fp
   27e64:	ldr	r2, [sp, #20]
   27e68:	ldr	r1, [sp, #20]
   27e6c:	str	r3, [sp, #8]
   27e70:	ldr	r3, [sp, #28]
   27e74:	lsl	r2, r2, #3
   27e78:	str	r2, [sp, #32]
   27e7c:	lsl	r7, r3, #1
   27e80:	ldr	r3, [sp, #20]
   27e84:	ldr	r2, [sp, #28]
   27e88:	sub	r3, r3, #1
   27e8c:	mul	r3, r2, r3
   27e90:	ldr	r2, [sp, #32]
   27e94:	str	r3, [sp, #40]	; 0x28
   27e98:	ldr	r3, [sp, #20]
   27e9c:	mul	r3, r3, r7
   27ea0:	str	r3, [sp, #44]	; 0x2c
   27ea4:	ldr	r3, [sp, #4]
   27ea8:	add	r8, r3, r2
   27eac:	ldr	r2, [sp, #8]
   27eb0:	ldr	r3, [sp, #36]	; 0x24
   27eb4:	sub	r3, r3, r2
   27eb8:	lsl	r2, r2, #1
   27ebc:	str	r2, [sp, #48]	; 0x30
   27ec0:	ldr	r2, [sp, #28]
   27ec4:	mls	r3, r1, r2, r3
   27ec8:	str	r3, [sp, #24]
   27ecc:	lsl	r3, r3, #1
   27ed0:	str	r3, [sp, #36]	; 0x24
   27ed4:	ldr	r3, [sp, #8]
   27ed8:	cmp	r3, #0
   27edc:	beq	27ef0 <GetDataSlab+0x60c4>
   27ee0:	ldr	r3, [sp, #48]	; 0x30
   27ee4:	add	r6, r6, r3
   27ee8:	ldr	r3, [sp, #8]
   27eec:	add	r4, r4, r3
   27ef0:	ldr	r3, [sp, #20]
   27ef4:	cmp	r3, #0
   27ef8:	ble	27f34 <GetDataSlab+0x6108>
   27efc:	ldr	r3, [sp, #4]
   27f00:	mov	r0, r6
   27f04:	add	r1, r3, fp, lsl #3
   27f08:	ldrsh	r2, [r0], r7
   27f0c:	asr	r3, r2, #31
   27f10:	strd	r2, [r1], #8
   27f14:	cmp	r1, r8
   27f18:	bne	27f08 <GetDataSlab+0x60dc>
   27f1c:	ldr	r3, [sp, #28]
   27f20:	ldr	r2, [sp, #44]	; 0x2c
   27f24:	add	r3, r4, r3
   27f28:	add	r6, r6, r2
   27f2c:	ldr	r2, [sp, #40]	; 0x28
   27f30:	add	r4, r2, r3
   27f34:	ldr	r3, [sp, #232]	; 0xe8
   27f38:	cmp	r3, #1
   27f3c:	ldr	r3, [sp, #24]
   27f40:	add	r4, r4, r3
   27f44:	ldr	r3, [sp, #36]	; 0x24
   27f48:	add	r6, r6, r3
   27f4c:	ble	34234 <GetDataSlab+0x12408>
   27f50:	ldr	r3, [sp, #100]	; 0x64
   27f54:	ldr	r2, [sp, #228]	; 0xe4
   27f58:	add	r3, r3, #1
   27f5c:	ldr	r1, [r2, #4]
   27f60:	str	r3, [sp, #100]	; 0x64
   27f64:	sdiv	r2, r3, r1
   27f68:	mls	r3, r1, r2, r3
   27f6c:	cmp	r3, #0
   27f70:	bne	3421c <GetDataSlab+0x123f0>
   27f74:	add	ip, sp, #100	; 0x64
   27f78:	mov	r0, #1
   27f7c:	ldr	lr, [sp, #12]
   27f80:	ldr	r3, [sp, #228]	; 0xe4
   27f84:	add	r5, r3, #4
   27f88:	b	27fd0 <GetDataSlab+0x61a4>
   27f8c:	ldr	r3, [lr, #-4]
   27f90:	ldr	r1, [r9, r0, lsl #2]
   27f94:	mla	r3, r1, r3, r2
   27f98:	add	r6, r6, r3, lsl #1
   27f9c:	add	r4, r4, r3
   27fa0:	ldr	r3, [sp, #232]	; 0xe8
   27fa4:	add	r0, r0, #1
   27fa8:	cmp	r3, r0
   27fac:	beq	34234 <GetDataSlab+0x12408>
   27fb0:	ldr	r3, [ip]
   27fb4:	ldr	r1, [r5, #4]!
   27fb8:	add	r3, r3, #1
   27fbc:	sdiv	r2, r3, r1
   27fc0:	str	r3, [ip]
   27fc4:	mls	r3, r1, r2, r3
   27fc8:	cmp	r3, #0
   27fcc:	bne	34220 <GetDataSlab+0x123f4>
   27fd0:	ldr	r2, [lr, #4]!
   27fd4:	str	sl, [ip], #4
   27fd8:	sdiv	r3, r4, r2
   27fdc:	mls	r3, r2, r3, r4
   27fe0:	cmp	r3, #0
   27fe4:	sub	r2, r2, r3
   27fe8:	bne	27f8c <GetDataSlab+0x6160>
   27fec:	ldr	r3, [r9, r0, lsl #2]
   27ff0:	cmp	r3, #0
   27ff4:	beq	27fa0 <GetDataSlab+0x6174>
   27ff8:	ldr	r2, [lr, #-4]
   27ffc:	mul	r3, r2, r3
   28000:	add	r6, r6, r3, lsl #1
   28004:	add	r4, r4, r3
   28008:	b	27fa0 <GetDataSlab+0x6174>
   2800c:	ldr	r3, [sp, #232]	; 0xe8
   28010:	ldr	r7, [sl]
   28014:	cmp	r3, #1
   28018:	ldr	r3, [r8]
   2801c:	str	r3, [sp, #40]	; 0x28
   28020:	ldr	r3, [sp, #228]	; 0xe4
   28024:	ldr	r3, [r3]
   28028:	str	r3, [sp, #20]
   2802c:	sub	r3, r7, #1
   28030:	str	r3, [sp, #56]	; 0x38
   28034:	ldr	r3, [sp, #40]	; 0x28
   28038:	str	r3, [sp, #136]	; 0x88
   2803c:	ble	3fbac <GetDataSlab+0x1dd80>
   28040:	ldr	fp, [sp, #12]
   28044:	add	r6, sl, #4
   28048:	add	lr, sp, #60	; 0x3c
   2804c:	mov	r5, r8
   28050:	mov	r4, #0
   28054:	str	r9, [sp, #28]
   28058:	ldr	r3, [sp, #232]	; 0xe8
   2805c:	add	r3, sl, r3, lsl #2
   28060:	str	r3, [sp, #32]
   28064:	ldr	r3, [sp, #228]	; 0xe4
   28068:	str	r3, [sp, #24]
   2806c:	ldr	r3, [sp, #20]
   28070:	str	r3, [sp, #16]
   28074:	ldr	r3, [r6], #4
   28078:	mov	sl, fp
   2807c:	ldr	r0, [r5], #4
   28080:	sub	ip, r3, #1
   28084:	mov	r1, r5
   28088:	str	ip, [lr], #4
   2808c:	mov	r3, r1
   28090:	ldr	r2, [r1, #-4]!
   28094:	ldr	r3, [r3]
   28098:	cmp	r1, r8
   2809c:	mul	ip, r2, ip
   280a0:	mul	r0, r3, r0
   280a4:	bne	2808c <GetDataSlab+0x6260>
   280a8:	ldr	r3, [sp, #32]
   280ac:	str	r0, [fp, #4]!
   280b0:	ldr	r1, [sl]
   280b4:	str	ip, [lr, #-4]
   280b8:	ldr	r0, [sp, #24]
   280bc:	cmp	r6, r3
   280c0:	ldr	r3, [sp, #28]
   280c4:	ldr	r2, [r3, #4]!
   280c8:	mla	r4, r2, r1, r4
   280cc:	str	r3, [sp, #28]
   280d0:	ldr	r3, [r0, #4]!
   280d4:	ldr	r2, [sp, #16]
   280d8:	str	r0, [sp, #24]
   280dc:	mul	r3, r3, r2
   280e0:	str	r3, [sp, #16]
   280e4:	bne	28074 <GetDataSlab+0x6248>
   280e8:	ldr	r3, [sp, #8]
   280ec:	cmp	r7, #1
   280f0:	add	r5, r3, r4
   280f4:	ldr	r3, [sp, #16]
   280f8:	beq	3b1a0 <GetDataSlab+0x19374>
   280fc:	cmp	r3, #0
   28100:	ble	30874 <GetDataSlab+0xea48>
   28104:	ldr	r3, [r9]
   28108:	mov	fp, #0
   2810c:	mov	sl, fp
   28110:	ldr	r2, [sp, #20]
   28114:	str	r3, [sp, #8]
   28118:	ldr	r3, [sp, #20]
   2811c:	lsl	r2, r2, #3
   28120:	str	r2, [sp, #28]
   28124:	mul	r3, r7, r3
   28128:	str	r3, [sp, #32]
   2812c:	ldr	r3, [sp, #20]
   28130:	sub	r3, r3, #1
   28134:	mul	r3, r7, r3
   28138:	str	r3, [sp, #36]	; 0x24
   2813c:	ldr	r3, [sp, #4]
   28140:	add	r8, r3, r2
   28144:	ldr	r2, [sp, #8]
   28148:	ldr	r3, [sp, #40]	; 0x28
   2814c:	sub	r3, r3, r2
   28150:	ldr	r2, [sp, #32]
   28154:	sub	r3, r3, r2
   28158:	str	r3, [sp, #24]
   2815c:	ldr	r3, [sp, #8]
   28160:	cmp	r3, #0
   28164:	addne	r5, r5, r3
   28168:	addne	r4, r4, r3
   2816c:	ldr	r3, [sp, #20]
   28170:	cmp	r3, #0
   28174:	ble	281ac <GetDataSlab+0x6380>
   28178:	ldr	r3, [sp, #4]
   2817c:	mov	r0, r5
   28180:	add	r1, r3, fp, lsl #3
   28184:	ldrb	r2, [r0], r7
   28188:	mov	r3, #0
   2818c:	strd	r2, [r1], #8
   28190:	cmp	r1, r8
   28194:	bne	28184 <GetDataSlab+0x6358>
   28198:	ldr	r2, [sp, #32]
   2819c:	add	r3, r4, r7
   281a0:	add	r5, r5, r2
   281a4:	ldr	r2, [sp, #36]	; 0x24
   281a8:	add	r4, r2, r3
   281ac:	ldr	r3, [sp, #232]	; 0xe8
   281b0:	cmp	r3, #1
   281b4:	ldr	r3, [sp, #24]
   281b8:	add	r4, r4, r3
   281bc:	add	r5, r5, r3
   281c0:	ble	341fc <GetDataSlab+0x123d0>
   281c4:	ldr	r3, [sp, #100]	; 0x64
   281c8:	ldr	r2, [sp, #228]	; 0xe4
   281cc:	add	r3, r3, #1
   281d0:	ldr	r1, [r2, #4]
   281d4:	str	r3, [sp, #100]	; 0x64
   281d8:	sdiv	r2, r3, r1
   281dc:	mls	r3, r1, r2, r3
   281e0:	cmp	r3, #0
   281e4:	bne	341e4 <GetDataSlab+0x123b8>
   281e8:	add	ip, sp, #100	; 0x64
   281ec:	mov	r0, #1
   281f0:	ldr	lr, [sp, #12]
   281f4:	ldr	r3, [sp, #228]	; 0xe4
   281f8:	add	r6, r3, #4
   281fc:	b	28244 <GetDataSlab+0x6418>
   28200:	ldr	r3, [lr, #-4]
   28204:	ldr	r1, [r9, r0, lsl #2]
   28208:	mla	r3, r1, r3, r2
   2820c:	add	r5, r5, r3
   28210:	add	r4, r4, r3
   28214:	ldr	r3, [sp, #232]	; 0xe8
   28218:	add	r0, r0, #1
   2821c:	cmp	r3, r0
   28220:	beq	341fc <GetDataSlab+0x123d0>
   28224:	ldr	r3, [ip]
   28228:	ldr	r1, [r6, #4]!
   2822c:	add	r3, r3, #1
   28230:	sdiv	r2, r3, r1
   28234:	str	r3, [ip]
   28238:	mls	r3, r1, r2, r3
   2823c:	cmp	r3, #0
   28240:	bne	341e8 <GetDataSlab+0x123bc>
   28244:	ldr	r2, [lr, #4]!
   28248:	str	sl, [ip], #4
   2824c:	sdiv	r3, r4, r2
   28250:	mls	r3, r2, r3, r4
   28254:	cmp	r3, #0
   28258:	sub	r2, r2, r3
   2825c:	bne	28200 <GetDataSlab+0x63d4>
   28260:	ldr	r3, [r9, r0, lsl #2]
   28264:	cmp	r3, #0
   28268:	beq	28214 <GetDataSlab+0x63e8>
   2826c:	ldr	r2, [lr, #-4]
   28270:	mul	r3, r2, r3
   28274:	add	r5, r5, r3
   28278:	add	r4, r4, r3
   2827c:	b	28214 <GetDataSlab+0x63e8>
   28280:	ldr	r3, [sp, #232]	; 0xe8
   28284:	ldr	r7, [sl]
   28288:	cmp	r3, #1
   2828c:	ldr	r3, [r8]
   28290:	str	r3, [sp, #40]	; 0x28
   28294:	ldr	r3, [sp, #228]	; 0xe4
   28298:	ldr	r3, [r3]
   2829c:	str	r3, [sp, #20]
   282a0:	sub	r3, r7, #1
   282a4:	str	r3, [sp, #56]	; 0x38
   282a8:	ldr	r3, [sp, #40]	; 0x28
   282ac:	str	r3, [sp, #136]	; 0x88
   282b0:	ble	3fbcc <GetDataSlab+0x1dda0>
   282b4:	ldr	fp, [sp, #12]
   282b8:	add	r6, sl, #4
   282bc:	add	lr, sp, #60	; 0x3c
   282c0:	mov	r5, r8
   282c4:	mov	r4, #0
   282c8:	str	r9, [sp, #28]
   282cc:	ldr	r3, [sp, #232]	; 0xe8
   282d0:	add	r3, sl, r3, lsl #2
   282d4:	str	r3, [sp, #32]
   282d8:	ldr	r3, [sp, #228]	; 0xe4
   282dc:	str	r3, [sp, #24]
   282e0:	ldr	r3, [sp, #20]
   282e4:	str	r3, [sp, #16]
   282e8:	ldr	r3, [r6], #4
   282ec:	mov	sl, fp
   282f0:	ldr	r0, [r5], #4
   282f4:	sub	ip, r3, #1
   282f8:	mov	r1, r5
   282fc:	str	ip, [lr], #4
   28300:	mov	r3, r1
   28304:	ldr	r2, [r1, #-4]!
   28308:	ldr	r3, [r3]
   2830c:	cmp	r1, r8
   28310:	mul	ip, r2, ip
   28314:	mul	r0, r3, r0
   28318:	bne	28300 <GetDataSlab+0x64d4>
   2831c:	ldr	r3, [sp, #32]
   28320:	str	r0, [fp, #4]!
   28324:	ldr	r1, [sl]
   28328:	str	ip, [lr, #-4]
   2832c:	ldr	r0, [sp, #24]
   28330:	cmp	r6, r3
   28334:	ldr	r3, [sp, #28]
   28338:	ldr	r2, [r3, #4]!
   2833c:	mla	r4, r2, r1, r4
   28340:	str	r3, [sp, #28]
   28344:	ldr	r3, [r0, #4]!
   28348:	ldr	r2, [sp, #16]
   2834c:	str	r0, [sp, #24]
   28350:	mul	r3, r3, r2
   28354:	str	r3, [sp, #16]
   28358:	bne	282e8 <GetDataSlab+0x64bc>
   2835c:	ldr	r3, [sp, #8]
   28360:	cmp	r7, #1
   28364:	add	r5, r3, r4
   28368:	ldr	r3, [sp, #16]
   2836c:	beq	3aeb0 <GetDataSlab+0x19084>
   28370:	cmp	r3, #0
   28374:	ble	30874 <GetDataSlab+0xea48>
   28378:	ldr	r3, [r9]
   2837c:	mov	fp, #0
   28380:	mov	sl, fp
   28384:	ldr	r2, [sp, #20]
   28388:	str	r3, [sp, #8]
   2838c:	ldr	r3, [sp, #20]
   28390:	lsl	r2, r2, #3
   28394:	str	r2, [sp, #28]
   28398:	mul	r3, r7, r3
   2839c:	str	r3, [sp, #32]
   283a0:	ldr	r3, [sp, #20]
   283a4:	sub	r3, r3, #1
   283a8:	mul	r3, r7, r3
   283ac:	str	r3, [sp, #36]	; 0x24
   283b0:	ldr	r3, [sp, #4]
   283b4:	add	r8, r3, r2
   283b8:	ldr	r2, [sp, #8]
   283bc:	ldr	r3, [sp, #40]	; 0x28
   283c0:	sub	r3, r3, r2
   283c4:	ldr	r2, [sp, #32]
   283c8:	sub	r3, r3, r2
   283cc:	str	r3, [sp, #24]
   283d0:	ldr	r3, [sp, #8]
   283d4:	cmp	r3, #0
   283d8:	addne	r5, r5, r3
   283dc:	addne	r4, r4, r3
   283e0:	ldr	r3, [sp, #20]
   283e4:	cmp	r3, #0
   283e8:	ble	28420 <GetDataSlab+0x65f4>
   283ec:	ldr	r3, [sp, #4]
   283f0:	mov	r0, r5
   283f4:	add	r1, r3, fp, lsl #3
   283f8:	ldrsb	r2, [r0], r7
   283fc:	asr	r3, r2, #31
   28400:	strd	r2, [r1], #8
   28404:	cmp	r1, r8
   28408:	bne	283f8 <GetDataSlab+0x65cc>
   2840c:	ldr	r2, [sp, #32]
   28410:	add	r3, r4, r7
   28414:	add	r5, r5, r2
   28418:	ldr	r2, [sp, #36]	; 0x24
   2841c:	add	r4, r3, r2
   28420:	ldr	r3, [sp, #232]	; 0xe8
   28424:	cmp	r3, #1
   28428:	ldr	r3, [sp, #24]
   2842c:	add	r4, r4, r3
   28430:	add	r5, r5, r3
   28434:	ble	341c4 <GetDataSlab+0x12398>
   28438:	ldr	r3, [sp, #100]	; 0x64
   2843c:	ldr	r2, [sp, #228]	; 0xe4
   28440:	add	r3, r3, #1
   28444:	ldr	r1, [r2, #4]
   28448:	str	r3, [sp, #100]	; 0x64
   2844c:	sdiv	r2, r3, r1
   28450:	mls	r3, r1, r2, r3
   28454:	cmp	r3, #0
   28458:	bne	341ac <GetDataSlab+0x12380>
   2845c:	add	ip, sp, #100	; 0x64
   28460:	mov	r0, #1
   28464:	ldr	lr, [sp, #12]
   28468:	ldr	r3, [sp, #228]	; 0xe4
   2846c:	add	r6, r3, #4
   28470:	b	284b8 <GetDataSlab+0x668c>
   28474:	ldr	r3, [lr, #-4]
   28478:	ldr	r1, [r9, r0, lsl #2]
   2847c:	mla	r3, r1, r3, r2
   28480:	add	r5, r5, r3
   28484:	add	r4, r4, r3
   28488:	ldr	r3, [sp, #232]	; 0xe8
   2848c:	add	r0, r0, #1
   28490:	cmp	r3, r0
   28494:	beq	341c4 <GetDataSlab+0x12398>
   28498:	ldr	r3, [ip]
   2849c:	ldr	r1, [r6, #4]!
   284a0:	add	r3, r3, #1
   284a4:	sdiv	r2, r3, r1
   284a8:	str	r3, [ip]
   284ac:	mls	r3, r1, r2, r3
   284b0:	cmp	r3, #0
   284b4:	bne	341b0 <GetDataSlab+0x12384>
   284b8:	ldr	r2, [lr, #4]!
   284bc:	str	sl, [ip], #4
   284c0:	sdiv	r3, r4, r2
   284c4:	mls	r3, r2, r3, r4
   284c8:	cmp	r3, #0
   284cc:	sub	r2, r2, r3
   284d0:	bne	28474 <GetDataSlab+0x6648>
   284d4:	ldr	r3, [r9, r0, lsl #2]
   284d8:	cmp	r3, #0
   284dc:	beq	28488 <GetDataSlab+0x665c>
   284e0:	ldr	r2, [lr, #-4]
   284e4:	mul	r3, r2, r3
   284e8:	add	r5, r5, r3
   284ec:	add	r4, r4, r3
   284f0:	b	28488 <GetDataSlab+0x665c>
   284f4:	ldr	r3, [sl]
   284f8:	str	r3, [sp, #28]
   284fc:	ldr	r3, [sp, #232]	; 0xe8
   28500:	cmp	r3, #1
   28504:	ldr	r3, [r8]
   28508:	str	r3, [sp, #36]	; 0x24
   2850c:	ldr	r3, [sp, #228]	; 0xe4
   28510:	ldr	r3, [r3]
   28514:	str	r3, [sp, #20]
   28518:	ldr	r3, [sp, #28]
   2851c:	sub	r3, r3, #1
   28520:	str	r3, [sp, #56]	; 0x38
   28524:	ldr	r3, [sp, #36]	; 0x24
   28528:	str	r3, [sp, #136]	; 0x88
   2852c:	ble	3f9a4 <GetDataSlab+0x1db78>
   28530:	add	r6, sl, #4
   28534:	ldr	fp, [sp, #228]	; 0xe4
   28538:	add	lr, sp, #60	; 0x3c
   2853c:	mov	r5, r8
   28540:	mov	r4, #0
   28544:	str	r9, [sp, #24]
   28548:	ldr	r3, [sp, #232]	; 0xe8
   2854c:	add	r3, sl, r3, lsl #2
   28550:	ldr	sl, [sp, #12]
   28554:	str	r3, [sp, #32]
   28558:	ldr	r3, [sp, #20]
   2855c:	str	r3, [sp, #16]
   28560:	ldr	r3, [r6], #4
   28564:	mov	r7, sl
   28568:	ldr	r0, [r5], #4
   2856c:	sub	ip, r3, #1
   28570:	mov	r1, r5
   28574:	str	ip, [lr], #4
   28578:	mov	r3, r1
   2857c:	ldr	r2, [r1, #-4]!
   28580:	ldr	r3, [r3]
   28584:	cmp	r8, r1
   28588:	mul	ip, r2, ip
   2858c:	mul	r0, r3, r0
   28590:	bne	28578 <GetDataSlab+0x674c>
   28594:	ldr	r3, [sp, #32]
   28598:	str	r0, [sl, #4]!
   2859c:	ldr	r1, [r7]
   285a0:	str	ip, [lr, #-4]
   285a4:	cmp	r3, r6
   285a8:	ldr	r3, [sp, #24]
   285ac:	ldr	r2, [r3, #4]!
   285b0:	mla	r4, r2, r1, r4
   285b4:	str	r3, [sp, #24]
   285b8:	ldr	r3, [fp, #4]!
   285bc:	ldr	r2, [sp, #16]
   285c0:	mul	r3, r3, r2
   285c4:	str	r3, [sp, #16]
   285c8:	bne	28560 <GetDataSlab+0x6734>
   285cc:	ldr	r3, [sp, #28]
   285d0:	cmp	r3, #1
   285d4:	ldr	r3, [sp, #8]
   285d8:	add	r6, r3, r4, lsl #3
   285dc:	ldr	r3, [sp, #16]
   285e0:	beq	39e08 <GetDataSlab+0x17fdc>
   285e4:	cmp	r3, #0
   285e8:	ble	30874 <GetDataSlab+0xea48>
   285ec:	ldr	r3, [r9]
   285f0:	mov	fp, #0
   285f4:	mov	r8, fp
   285f8:	ldr	r2, [sp, #20]
   285fc:	ldr	r1, [sp, #20]
   28600:	str	r3, [sp, #8]
   28604:	ldr	r3, [sp, #28]
   28608:	lsl	r2, r2, #3
   2860c:	str	r2, [sp, #32]
   28610:	lsl	sl, r3, #3
   28614:	ldr	r3, [sp, #20]
   28618:	ldr	r2, [sp, #28]
   2861c:	sub	r3, r3, #1
   28620:	mul	r3, r2, r3
   28624:	ldr	r2, [sp, #32]
   28628:	str	r3, [sp, #40]	; 0x28
   2862c:	ldr	r3, [sp, #20]
   28630:	mul	r3, r3, sl
   28634:	str	r3, [sp, #44]	; 0x2c
   28638:	ldr	r3, [sp, #4]
   2863c:	add	r7, r3, r2
   28640:	ldr	r2, [sp, #8]
   28644:	ldr	r3, [sp, #36]	; 0x24
   28648:	sub	r3, r3, r2
   2864c:	lsl	r2, r2, #3
   28650:	str	r2, [sp, #48]	; 0x30
   28654:	ldr	r2, [sp, #28]
   28658:	mls	r3, r1, r2, r3
   2865c:	str	r3, [sp, #24]
   28660:	lsl	r3, r3, #3
   28664:	str	r3, [sp, #36]	; 0x24
   28668:	ldr	r3, [sp, #8]
   2866c:	cmp	r3, #0
   28670:	beq	28684 <GetDataSlab+0x6858>
   28674:	ldr	r3, [sp, #48]	; 0x30
   28678:	add	r6, r6, r3
   2867c:	ldr	r3, [sp, #8]
   28680:	add	r4, r4, r3
   28684:	ldr	r3, [sp, #20]
   28688:	cmp	r3, #0
   2868c:	ble	286c8 <GetDataSlab+0x689c>
   28690:	ldr	r3, [sp, #4]
   28694:	mov	r0, r6
   28698:	add	r1, r3, fp, lsl #3
   2869c:	ldrd	r2, [r0]
   286a0:	add	r0, r0, sl
   286a4:	strd	r2, [r1], #8
   286a8:	cmp	r7, r1
   286ac:	bne	2869c <GetDataSlab+0x6870>
   286b0:	ldr	r3, [sp, #28]
   286b4:	ldr	r2, [sp, #44]	; 0x2c
   286b8:	add	r3, r3, r4
   286bc:	add	r6, r6, r2
   286c0:	ldr	r2, [sp, #40]	; 0x28
   286c4:	add	r4, r2, r3
   286c8:	ldr	r3, [sp, #232]	; 0xe8
   286cc:	cmp	r3, #1
   286d0:	ldr	r3, [sp, #24]
   286d4:	add	r4, r4, r3
   286d8:	ldr	r3, [sp, #36]	; 0x24
   286dc:	add	r6, r6, r3
   286e0:	ble	3418c <GetDataSlab+0x12360>
   286e4:	ldr	r3, [sp, #100]	; 0x64
   286e8:	ldr	r2, [sp, #228]	; 0xe4
   286ec:	add	r3, r3, #1
   286f0:	ldr	r1, [r2, #4]
   286f4:	str	r3, [sp, #100]	; 0x64
   286f8:	sdiv	r2, r3, r1
   286fc:	mls	r3, r1, r2, r3
   28700:	cmp	r3, #0
   28704:	bne	34174 <GetDataSlab+0x12348>
   28708:	add	ip, sp, #100	; 0x64
   2870c:	mov	r0, #1
   28710:	ldr	lr, [sp, #12]
   28714:	ldr	r3, [sp, #228]	; 0xe4
   28718:	add	r5, r3, #4
   2871c:	b	28764 <GetDataSlab+0x6938>
   28720:	ldr	r3, [lr, #-4]
   28724:	ldr	r1, [r9, r0, lsl #2]
   28728:	mla	r3, r1, r3, r2
   2872c:	add	r6, r6, r3, lsl #3
   28730:	add	r4, r4, r3
   28734:	ldr	r3, [sp, #232]	; 0xe8
   28738:	add	r0, r0, #1
   2873c:	cmp	r3, r0
   28740:	beq	3418c <GetDataSlab+0x12360>
   28744:	ldr	r3, [ip]
   28748:	ldr	r1, [r5, #4]!
   2874c:	add	r3, r3, #1
   28750:	sdiv	r2, r3, r1
   28754:	str	r3, [ip]
   28758:	mls	r3, r1, r2, r3
   2875c:	cmp	r3, #0
   28760:	bne	34178 <GetDataSlab+0x1234c>
   28764:	ldr	r2, [lr, #4]!
   28768:	str	r8, [ip], #4
   2876c:	sdiv	r3, r4, r2
   28770:	mls	r3, r2, r3, r4
   28774:	cmp	r3, #0
   28778:	sub	r2, r2, r3
   2877c:	bne	28720 <GetDataSlab+0x68f4>
   28780:	ldr	r3, [r9, r0, lsl #2]
   28784:	cmp	r3, #0
   28788:	beq	28734 <GetDataSlab+0x6908>
   2878c:	ldr	r2, [lr, #-4]
   28790:	mul	r3, r2, r3
   28794:	add	r6, r6, r3, lsl #3
   28798:	add	r4, r4, r3
   2879c:	b	28734 <GetDataSlab+0x6908>
   287a0:	ldr	r3, [sl]
   287a4:	str	r3, [sp, #28]
   287a8:	ldr	r3, [sp, #232]	; 0xe8
   287ac:	cmp	r3, #1
   287b0:	ldr	r3, [r8]
   287b4:	str	r3, [sp, #36]	; 0x24
   287b8:	ldr	r3, [sp, #228]	; 0xe4
   287bc:	ldr	r3, [r3]
   287c0:	str	r3, [sp, #20]
   287c4:	ldr	r3, [sp, #28]
   287c8:	sub	r3, r3, #1
   287cc:	str	r3, [sp, #56]	; 0x38
   287d0:	ldr	r3, [sp, #36]	; 0x24
   287d4:	str	r3, [sp, #136]	; 0x88
   287d8:	ble	3f994 <GetDataSlab+0x1db68>
   287dc:	add	r6, sl, #4
   287e0:	ldr	fp, [sp, #228]	; 0xe4
   287e4:	add	lr, sp, #60	; 0x3c
   287e8:	mov	r5, r8
   287ec:	mov	r4, #0
   287f0:	str	r9, [sp, #24]
   287f4:	ldr	r3, [sp, #232]	; 0xe8
   287f8:	add	r3, sl, r3, lsl #2
   287fc:	ldr	sl, [sp, #12]
   28800:	str	r3, [sp, #32]
   28804:	ldr	r3, [sp, #20]
   28808:	str	r3, [sp, #16]
   2880c:	ldr	r3, [r6], #4
   28810:	mov	r7, sl
   28814:	ldr	r0, [r5], #4
   28818:	sub	ip, r3, #1
   2881c:	mov	r1, r5
   28820:	str	ip, [lr], #4
   28824:	mov	r3, r1
   28828:	ldr	r2, [r1, #-4]!
   2882c:	ldr	r3, [r3]
   28830:	cmp	r1, r8
   28834:	mul	ip, r2, ip
   28838:	mul	r0, r3, r0
   2883c:	bne	28824 <GetDataSlab+0x69f8>
   28840:	ldr	r3, [sp, #32]
   28844:	str	r0, [sl, #4]!
   28848:	ldr	r1, [r7]
   2884c:	str	ip, [lr, #-4]
   28850:	cmp	r3, r6
   28854:	ldr	r3, [sp, #24]
   28858:	ldr	r2, [r3, #4]!
   2885c:	mla	r4, r2, r1, r4
   28860:	str	r3, [sp, #24]
   28864:	ldr	r3, [fp, #4]!
   28868:	ldr	r2, [sp, #16]
   2886c:	mul	r3, r3, r2
   28870:	str	r3, [sp, #16]
   28874:	bne	2880c <GetDataSlab+0x69e0>
   28878:	ldr	r3, [sp, #28]
   2887c:	cmp	r3, #1
   28880:	ldr	r3, [sp, #8]
   28884:	add	r6, r3, r4, lsl #2
   28888:	ldr	r3, [sp, #16]
   2888c:	beq	39f88 <GetDataSlab+0x1815c>
   28890:	cmp	r3, #0
   28894:	ble	30874 <GetDataSlab+0xea48>
   28898:	ldr	r3, [r9]
   2889c:	mov	fp, #0
   288a0:	mov	r8, fp
   288a4:	ldr	r2, [sp, #20]
   288a8:	ldr	r1, [sp, #20]
   288ac:	str	r3, [sp, #8]
   288b0:	ldr	r3, [sp, #28]
   288b4:	lsl	r2, r2, #3
   288b8:	str	r2, [sp, #32]
   288bc:	lsl	sl, r3, #2
   288c0:	ldr	r3, [sp, #20]
   288c4:	ldr	r2, [sp, #28]
   288c8:	sub	r3, r3, #1
   288cc:	mul	r3, r2, r3
   288d0:	ldr	r2, [sp, #32]
   288d4:	str	r3, [sp, #44]	; 0x2c
   288d8:	ldr	r3, [sp, #20]
   288dc:	mul	r3, r3, sl
   288e0:	str	r3, [sp, #40]	; 0x28
   288e4:	ldr	r3, [sp, #4]
   288e8:	add	r7, r3, r2
   288ec:	ldr	r2, [sp, #8]
   288f0:	ldr	r3, [sp, #36]	; 0x24
   288f4:	sub	r3, r3, r2
   288f8:	lsl	r2, r2, #2
   288fc:	str	r2, [sp, #48]	; 0x30
   28900:	ldr	r2, [sp, #28]
   28904:	mls	r3, r1, r2, r3
   28908:	str	r3, [sp, #24]
   2890c:	lsl	r3, r3, #2
   28910:	str	r3, [sp, #36]	; 0x24
   28914:	ldr	r3, [sp, #8]
   28918:	cmp	r3, #0
   2891c:	beq	28930 <GetDataSlab+0x6b04>
   28920:	ldr	r3, [sp, #48]	; 0x30
   28924:	add	r6, r6, r3
   28928:	ldr	r3, [sp, #8]
   2892c:	add	r4, r4, r3
   28930:	ldr	r3, [sp, #20]
   28934:	cmp	r3, #0
   28938:	ble	28978 <GetDataSlab+0x6b4c>
   2893c:	ldr	r3, [sp, #4]
   28940:	mov	r2, r6
   28944:	add	r3, r3, fp, lsl #3
   28948:	vldr	s15, [r2]
   2894c:	add	r2, r2, sl
   28950:	vcvt.f64.f32	d7, s15
   28954:	vstmia	r3!, {d7}
   28958:	cmp	r3, r7
   2895c:	bne	28948 <GetDataSlab+0x6b1c>
   28960:	ldr	r3, [sp, #28]
   28964:	ldr	r2, [sp, #40]	; 0x28
   28968:	add	r3, r3, r4
   2896c:	add	r6, r6, r2
   28970:	ldr	r2, [sp, #44]	; 0x2c
   28974:	add	r4, r3, r2
   28978:	ldr	r3, [sp, #232]	; 0xe8
   2897c:	cmp	r3, #1
   28980:	ldr	r3, [sp, #24]
   28984:	add	r4, r4, r3
   28988:	ldr	r3, [sp, #36]	; 0x24
   2898c:	add	r6, r6, r3
   28990:	ble	34154 <GetDataSlab+0x12328>
   28994:	ldr	r3, [sp, #100]	; 0x64
   28998:	ldr	r2, [sp, #228]	; 0xe4
   2899c:	add	r3, r3, #1
   289a0:	ldr	r1, [r2, #4]
   289a4:	str	r3, [sp, #100]	; 0x64
   289a8:	sdiv	r2, r3, r1
   289ac:	mls	r3, r1, r2, r3
   289b0:	cmp	r3, #0
   289b4:	bne	3413c <GetDataSlab+0x12310>
   289b8:	add	ip, sp, #100	; 0x64
   289bc:	mov	r0, #1
   289c0:	ldr	lr, [sp, #12]
   289c4:	ldr	r3, [sp, #228]	; 0xe4
   289c8:	add	r5, r3, #4
   289cc:	b	28a14 <GetDataSlab+0x6be8>
   289d0:	ldr	r3, [lr, #-4]
   289d4:	ldr	r1, [r9, r0, lsl #2]
   289d8:	mla	r3, r1, r3, r2
   289dc:	add	r6, r6, r3, lsl #2
   289e0:	add	r4, r4, r3
   289e4:	ldr	r3, [sp, #232]	; 0xe8
   289e8:	add	r0, r0, #1
   289ec:	cmp	r3, r0
   289f0:	beq	34154 <GetDataSlab+0x12328>
   289f4:	ldr	r3, [ip]
   289f8:	ldr	r1, [r5, #4]!
   289fc:	add	r3, r3, #1
   28a00:	sdiv	r2, r3, r1
   28a04:	str	r3, [ip]
   28a08:	mls	r3, r1, r2, r3
   28a0c:	cmp	r3, #0
   28a10:	bne	34140 <GetDataSlab+0x12314>
   28a14:	ldr	r2, [lr, #4]!
   28a18:	str	r8, [ip], #4
   28a1c:	sdiv	r3, r4, r2
   28a20:	mls	r3, r2, r3, r4
   28a24:	cmp	r3, #0
   28a28:	sub	r2, r2, r3
   28a2c:	bne	289d0 <GetDataSlab+0x6ba4>
   28a30:	ldr	r3, [r9, r0, lsl #2]
   28a34:	cmp	r3, #0
   28a38:	beq	289e4 <GetDataSlab+0x6bb8>
   28a3c:	ldr	r2, [lr, #-4]
   28a40:	mul	r3, r2, r3
   28a44:	add	r6, r6, r3, lsl #2
   28a48:	add	r4, r4, r3
   28a4c:	b	289e4 <GetDataSlab+0x6bb8>
   28a50:	ldr	r3, [sl]
   28a54:	str	r3, [sp, #28]
   28a58:	ldr	r3, [sp, #232]	; 0xe8
   28a5c:	cmp	r3, #1
   28a60:	ldr	r3, [r8]
   28a64:	str	r3, [sp, #36]	; 0x24
   28a68:	ldr	r3, [sp, #228]	; 0xe4
   28a6c:	ldr	r3, [r3]
   28a70:	str	r3, [sp, #20]
   28a74:	ldr	r3, [sp, #28]
   28a78:	sub	r3, r3, #1
   28a7c:	str	r3, [sp, #56]	; 0x38
   28a80:	ldr	r3, [sp, #36]	; 0x24
   28a84:	str	r3, [sp, #136]	; 0x88
   28a88:	ble	3f9b4 <GetDataSlab+0x1db88>
   28a8c:	add	r6, sl, #4
   28a90:	ldr	fp, [sp, #228]	; 0xe4
   28a94:	add	lr, sp, #60	; 0x3c
   28a98:	mov	r5, r8
   28a9c:	mov	r4, #0
   28aa0:	str	r9, [sp, #24]
   28aa4:	ldr	r3, [sp, #232]	; 0xe8
   28aa8:	add	r3, sl, r3, lsl #2
   28aac:	ldr	sl, [sp, #12]
   28ab0:	str	r3, [sp, #32]
   28ab4:	ldr	r3, [sp, #20]
   28ab8:	str	r3, [sp, #16]
   28abc:	ldr	r3, [r6], #4
   28ac0:	mov	r7, sl
   28ac4:	ldr	r0, [r5], #4
   28ac8:	sub	ip, r3, #1
   28acc:	mov	r1, r5
   28ad0:	str	ip, [lr], #4
   28ad4:	mov	r3, r1
   28ad8:	ldr	r2, [r1, #-4]!
   28adc:	ldr	r3, [r3]
   28ae0:	cmp	r1, r8
   28ae4:	mul	ip, r2, ip
   28ae8:	mul	r0, r3, r0
   28aec:	bne	28ad4 <GetDataSlab+0x6ca8>
   28af0:	ldr	r3, [sp, #32]
   28af4:	str	r0, [sl, #4]!
   28af8:	ldr	r1, [r7]
   28afc:	str	ip, [lr, #-4]
   28b00:	cmp	r6, r3
   28b04:	ldr	r3, [sp, #24]
   28b08:	ldr	r2, [r3, #4]!
   28b0c:	mla	r4, r2, r1, r4
   28b10:	str	r3, [sp, #24]
   28b14:	ldr	r3, [fp, #4]!
   28b18:	ldr	r2, [sp, #16]
   28b1c:	mul	r3, r3, r2
   28b20:	str	r3, [sp, #16]
   28b24:	bne	28abc <GetDataSlab+0x6c90>
   28b28:	ldr	r3, [sp, #28]
   28b2c:	cmp	r3, #1
   28b30:	ldr	r3, [sp, #8]
   28b34:	add	r6, r3, r4, lsl #2
   28b38:	ldr	r3, [sp, #16]
   28b3c:	beq	39c80 <GetDataSlab+0x17e54>
   28b40:	cmp	r3, #0
   28b44:	ble	30874 <GetDataSlab+0xea48>
   28b48:	ldr	r3, [r9]
   28b4c:	mov	fp, #0
   28b50:	mov	sl, fp
   28b54:	ldr	r2, [sp, #20]
   28b58:	ldr	r1, [sp, #20]
   28b5c:	str	r3, [sp, #8]
   28b60:	ldr	r3, [sp, #28]
   28b64:	lsl	r2, r2, #3
   28b68:	str	r2, [sp, #32]
   28b6c:	lsl	r7, r3, #2
   28b70:	ldr	r3, [sp, #20]
   28b74:	ldr	r2, [sp, #28]
   28b78:	sub	r3, r3, #1
   28b7c:	mul	r3, r2, r3
   28b80:	ldr	r2, [sp, #32]
   28b84:	str	r3, [sp, #44]	; 0x2c
   28b88:	ldr	r3, [sp, #20]
   28b8c:	mul	r3, r3, r7
   28b90:	str	r3, [sp, #40]	; 0x28
   28b94:	ldr	r3, [sp, #4]
   28b98:	add	r8, r3, r2
   28b9c:	ldr	r2, [sp, #8]
   28ba0:	ldr	r3, [sp, #36]	; 0x24
   28ba4:	sub	r3, r3, r2
   28ba8:	lsl	r2, r2, #2
   28bac:	str	r2, [sp, #48]	; 0x30
   28bb0:	ldr	r2, [sp, #28]
   28bb4:	mls	r3, r1, r2, r3
   28bb8:	str	r3, [sp, #24]
   28bbc:	lsl	r3, r3, #2
   28bc0:	str	r3, [sp, #36]	; 0x24
   28bc4:	ldr	r3, [sp, #8]
   28bc8:	cmp	r3, #0
   28bcc:	beq	28be0 <GetDataSlab+0x6db4>
   28bd0:	ldr	r3, [sp, #48]	; 0x30
   28bd4:	add	r6, r6, r3
   28bd8:	ldr	r3, [sp, #8]
   28bdc:	add	r4, r4, r3
   28be0:	ldr	r3, [sp, #20]
   28be4:	cmp	r3, #0
   28be8:	ble	28c28 <GetDataSlab+0x6dfc>
   28bec:	ldr	r3, [sp, #4]
   28bf0:	mov	r1, r6
   28bf4:	add	r2, r3, fp, lsl #3
   28bf8:	ldr	r3, [r1], r7
   28bfc:	vmov	s15, r3
   28c00:	vcvt.f64.u32	d7, s15
   28c04:	vstmia	r2!, {d7}
   28c08:	cmp	r2, r8
   28c0c:	bne	28bf8 <GetDataSlab+0x6dcc>
   28c10:	ldr	r3, [sp, #28]
   28c14:	ldr	r2, [sp, #40]	; 0x28
   28c18:	add	r3, r3, r4
   28c1c:	add	r6, r6, r2
   28c20:	ldr	r2, [sp, #44]	; 0x2c
   28c24:	add	r4, r3, r2
   28c28:	ldr	r3, [sp, #232]	; 0xe8
   28c2c:	cmp	r3, #1
   28c30:	ldr	r3, [sp, #24]
   28c34:	add	r4, r4, r3
   28c38:	ldr	r3, [sp, #36]	; 0x24
   28c3c:	add	r6, r6, r3
   28c40:	ble	3411c <GetDataSlab+0x122f0>
   28c44:	ldr	r3, [sp, #100]	; 0x64
   28c48:	ldr	r2, [sp, #228]	; 0xe4
   28c4c:	add	r3, r3, #1
   28c50:	ldr	r1, [r2, #4]
   28c54:	str	r3, [sp, #100]	; 0x64
   28c58:	sdiv	r2, r3, r1
   28c5c:	mls	r3, r1, r2, r3
   28c60:	cmp	r3, #0
   28c64:	bne	34104 <GetDataSlab+0x122d8>
   28c68:	add	ip, sp, #100	; 0x64
   28c6c:	mov	r0, #1
   28c70:	ldr	lr, [sp, #12]
   28c74:	ldr	r3, [sp, #228]	; 0xe4
   28c78:	add	r5, r3, #4
   28c7c:	b	28cc4 <GetDataSlab+0x6e98>
   28c80:	ldr	r3, [lr, #-4]
   28c84:	ldr	r1, [r9, r0, lsl #2]
   28c88:	mla	r3, r1, r3, r2
   28c8c:	add	r6, r6, r3, lsl #2
   28c90:	add	r4, r4, r3
   28c94:	ldr	r3, [sp, #232]	; 0xe8
   28c98:	add	r0, r0, #1
   28c9c:	cmp	r3, r0
   28ca0:	beq	3411c <GetDataSlab+0x122f0>
   28ca4:	ldr	r3, [ip]
   28ca8:	ldr	r1, [r5, #4]!
   28cac:	add	r3, r3, #1
   28cb0:	sdiv	r2, r3, r1
   28cb4:	str	r3, [ip]
   28cb8:	mls	r3, r1, r2, r3
   28cbc:	cmp	r3, #0
   28cc0:	bne	34108 <GetDataSlab+0x122dc>
   28cc4:	ldr	r2, [lr, #4]!
   28cc8:	str	sl, [ip], #4
   28ccc:	sdiv	r3, r4, r2
   28cd0:	mls	r3, r2, r3, r4
   28cd4:	cmp	r3, #0
   28cd8:	sub	r2, r2, r3
   28cdc:	bne	28c80 <GetDataSlab+0x6e54>
   28ce0:	ldr	r3, [r9, r0, lsl #2]
   28ce4:	cmp	r3, #0
   28ce8:	beq	28c94 <GetDataSlab+0x6e68>
   28cec:	ldr	r2, [lr, #-4]
   28cf0:	mul	r3, r2, r3
   28cf4:	add	r6, r6, r3, lsl #2
   28cf8:	add	r4, r4, r3
   28cfc:	b	28c94 <GetDataSlab+0x6e68>
   28d00:	ldr	r3, [sl]
   28d04:	str	r3, [sp, #28]
   28d08:	ldr	r3, [sp, #232]	; 0xe8
   28d0c:	cmp	r3, #1
   28d10:	ldr	r3, [r8]
   28d14:	str	r3, [sp, #36]	; 0x24
   28d18:	ldr	r3, [sp, #228]	; 0xe4
   28d1c:	ldr	r3, [r3]
   28d20:	str	r3, [sp, #20]
   28d24:	ldr	r3, [sp, #28]
   28d28:	sub	r3, r3, #1
   28d2c:	str	r3, [sp, #56]	; 0x38
   28d30:	ldr	r3, [sp, #36]	; 0x24
   28d34:	str	r3, [sp, #136]	; 0x88
   28d38:	ble	3fa94 <GetDataSlab+0x1dc68>
   28d3c:	add	r6, sl, #4
   28d40:	ldr	fp, [sp, #228]	; 0xe4
   28d44:	add	lr, sp, #60	; 0x3c
   28d48:	mov	r5, r8
   28d4c:	mov	r4, #0
   28d50:	str	r9, [sp, #24]
   28d54:	ldr	r3, [sp, #232]	; 0xe8
   28d58:	add	r3, sl, r3, lsl #2
   28d5c:	ldr	sl, [sp, #12]
   28d60:	str	r3, [sp, #32]
   28d64:	ldr	r3, [sp, #20]
   28d68:	str	r3, [sp, #16]
   28d6c:	ldr	r3, [r6], #4
   28d70:	mov	r7, sl
   28d74:	ldr	r0, [r5], #4
   28d78:	sub	ip, r3, #1
   28d7c:	mov	r1, r5
   28d80:	str	ip, [lr], #4
   28d84:	mov	r3, r1
   28d88:	ldr	r2, [r1, #-4]!
   28d8c:	ldr	r3, [r3]
   28d90:	cmp	r8, r1
   28d94:	mul	ip, r2, ip
   28d98:	mul	r0, r3, r0
   28d9c:	bne	28d84 <GetDataSlab+0x6f58>
   28da0:	ldr	r3, [sp, #32]
   28da4:	str	r0, [sl, #4]!
   28da8:	ldr	r1, [r7]
   28dac:	str	ip, [lr, #-4]
   28db0:	cmp	r6, r3
   28db4:	ldr	r3, [sp, #24]
   28db8:	ldr	r2, [r3, #4]!
   28dbc:	mla	r4, r2, r1, r4
   28dc0:	str	r3, [sp, #24]
   28dc4:	ldr	r3, [fp, #4]!
   28dc8:	ldr	r2, [sp, #16]
   28dcc:	mul	r3, r3, r2
   28dd0:	str	r3, [sp, #16]
   28dd4:	bne	28d6c <GetDataSlab+0x6f40>
   28dd8:	ldr	r3, [sp, #28]
   28ddc:	cmp	r3, #1
   28de0:	ldr	r3, [sp, #8]
   28de4:	add	r6, r3, r4, lsl #2
   28de8:	ldr	r3, [sp, #16]
   28dec:	beq	37c30 <GetDataSlab+0x15e04>
   28df0:	cmp	r3, #0
   28df4:	ble	30874 <GetDataSlab+0xea48>
   28df8:	ldr	r3, [r9]
   28dfc:	mov	fp, #0
   28e00:	mov	sl, fp
   28e04:	ldr	r2, [sp, #20]
   28e08:	ldr	r1, [sp, #20]
   28e0c:	str	r3, [sp, #8]
   28e10:	ldr	r3, [sp, #28]
   28e14:	lsl	r2, r2, #3
   28e18:	str	r2, [sp, #32]
   28e1c:	lsl	r7, r3, #2
   28e20:	ldr	r3, [sp, #20]
   28e24:	ldr	r2, [sp, #28]
   28e28:	sub	r3, r3, #1
   28e2c:	mul	r3, r2, r3
   28e30:	ldr	r2, [sp, #32]
   28e34:	str	r3, [sp, #40]	; 0x28
   28e38:	ldr	r3, [sp, #20]
   28e3c:	mul	r3, r3, r7
   28e40:	str	r3, [sp, #44]	; 0x2c
   28e44:	ldr	r3, [sp, #4]
   28e48:	add	r8, r3, r2
   28e4c:	ldr	r2, [sp, #8]
   28e50:	ldr	r3, [sp, #36]	; 0x24
   28e54:	sub	r3, r3, r2
   28e58:	lsl	r2, r2, #2
   28e5c:	str	r2, [sp, #48]	; 0x30
   28e60:	ldr	r2, [sp, #28]
   28e64:	mls	r3, r1, r2, r3
   28e68:	str	r3, [sp, #24]
   28e6c:	lsl	r3, r3, #2
   28e70:	str	r3, [sp, #36]	; 0x24
   28e74:	ldr	r3, [sp, #8]
   28e78:	cmp	r3, #0
   28e7c:	beq	28e90 <GetDataSlab+0x7064>
   28e80:	ldr	r3, [sp, #48]	; 0x30
   28e84:	add	r6, r6, r3
   28e88:	ldr	r3, [sp, #8]
   28e8c:	add	r4, r4, r3
   28e90:	ldr	r3, [sp, #20]
   28e94:	cmp	r3, #0
   28e98:	ble	28ed8 <GetDataSlab+0x70ac>
   28e9c:	ldr	r3, [sp, #4]
   28ea0:	mov	r1, r6
   28ea4:	add	r2, r3, fp, lsl #3
   28ea8:	ldr	r3, [r1], r7
   28eac:	vmov	s15, r3
   28eb0:	vcvt.f64.s32	d7, s15
   28eb4:	vstmia	r2!, {d7}
   28eb8:	cmp	r8, r2
   28ebc:	bne	28ea8 <GetDataSlab+0x707c>
   28ec0:	ldr	r3, [sp, #28]
   28ec4:	ldr	r2, [sp, #44]	; 0x2c
   28ec8:	add	r3, r3, r4
   28ecc:	add	r6, r6, r2
   28ed0:	ldr	r2, [sp, #40]	; 0x28
   28ed4:	add	r4, r2, r3
   28ed8:	ldr	r3, [sp, #232]	; 0xe8
   28edc:	cmp	r3, #1
   28ee0:	ldr	r3, [sp, #24]
   28ee4:	add	r4, r4, r3
   28ee8:	ldr	r3, [sp, #36]	; 0x24
   28eec:	add	r6, r6, r3
   28ef0:	ble	340e4 <GetDataSlab+0x122b8>
   28ef4:	ldr	r3, [sp, #100]	; 0x64
   28ef8:	ldr	r2, [sp, #228]	; 0xe4
   28efc:	add	r3, r3, #1
   28f00:	ldr	r1, [r2, #4]
   28f04:	str	r3, [sp, #100]	; 0x64
   28f08:	sdiv	r2, r3, r1
   28f0c:	mls	r3, r1, r2, r3
   28f10:	cmp	r3, #0
   28f14:	bne	340cc <GetDataSlab+0x122a0>
   28f18:	add	ip, sp, #100	; 0x64
   28f1c:	mov	r0, #1
   28f20:	ldr	lr, [sp, #12]
   28f24:	ldr	r3, [sp, #228]	; 0xe4
   28f28:	add	r5, r3, #4
   28f2c:	b	28f74 <GetDataSlab+0x7148>
   28f30:	ldr	r3, [lr, #-4]
   28f34:	ldr	r1, [r9, r0, lsl #2]
   28f38:	mla	r3, r1, r3, r2
   28f3c:	add	r6, r6, r3, lsl #2
   28f40:	add	r4, r4, r3
   28f44:	ldr	r3, [sp, #232]	; 0xe8
   28f48:	add	r0, r0, #1
   28f4c:	cmp	r3, r0
   28f50:	beq	340e4 <GetDataSlab+0x122b8>
   28f54:	ldr	r3, [ip]
   28f58:	ldr	r1, [r5, #4]!
   28f5c:	add	r3, r3, #1
   28f60:	sdiv	r2, r3, r1
   28f64:	str	r3, [ip]
   28f68:	mls	r3, r1, r2, r3
   28f6c:	cmp	r3, #0
   28f70:	bne	340d0 <GetDataSlab+0x122a4>
   28f74:	ldr	r2, [lr, #4]!
   28f78:	str	sl, [ip], #4
   28f7c:	sdiv	r3, r4, r2
   28f80:	mls	r3, r2, r3, r4
   28f84:	cmp	r3, #0
   28f88:	sub	r2, r2, r3
   28f8c:	bne	28f30 <GetDataSlab+0x7104>
   28f90:	ldr	r3, [r9, r0, lsl #2]
   28f94:	cmp	r3, #0
   28f98:	beq	28f44 <GetDataSlab+0x7118>
   28f9c:	ldr	r2, [lr, #-4]
   28fa0:	mul	r3, r2, r3
   28fa4:	add	r6, r6, r3, lsl #2
   28fa8:	add	r4, r4, r3
   28fac:	b	28f44 <GetDataSlab+0x7118>
   28fb0:	ldr	r3, [sl]
   28fb4:	str	r3, [sp, #28]
   28fb8:	ldr	r3, [sp, #232]	; 0xe8
   28fbc:	cmp	r3, #1
   28fc0:	ldr	r3, [r8]
   28fc4:	str	r3, [sp, #36]	; 0x24
   28fc8:	ldr	r3, [sp, #228]	; 0xe4
   28fcc:	ldr	r3, [r3]
   28fd0:	str	r3, [sp, #20]
   28fd4:	ldr	r3, [sp, #28]
   28fd8:	sub	r3, r3, #1
   28fdc:	str	r3, [sp, #56]	; 0x38
   28fe0:	ldr	r3, [sp, #36]	; 0x24
   28fe4:	str	r3, [sp, #136]	; 0x88
   28fe8:	ble	3fc34 <GetDataSlab+0x1de08>
   28fec:	add	r6, sl, #4
   28ff0:	ldr	fp, [sp, #228]	; 0xe4
   28ff4:	add	lr, sp, #60	; 0x3c
   28ff8:	mov	r5, r8
   28ffc:	mov	r4, #0
   29000:	str	r9, [sp, #24]
   29004:	ldr	r3, [sp, #232]	; 0xe8
   29008:	add	r3, sl, r3, lsl #2
   2900c:	ldr	sl, [sp, #12]
   29010:	str	r3, [sp, #32]
   29014:	ldr	r3, [sp, #20]
   29018:	str	r3, [sp, #16]
   2901c:	ldr	r3, [r6], #4
   29020:	mov	r7, sl
   29024:	ldr	r0, [r5], #4
   29028:	sub	ip, r3, #1
   2902c:	mov	r1, r5
   29030:	str	ip, [lr], #4
   29034:	mov	r3, r1
   29038:	ldr	r2, [r1, #-4]!
   2903c:	ldr	r3, [r3]
   29040:	cmp	r1, r8
   29044:	mul	ip, r2, ip
   29048:	mul	r0, r3, r0
   2904c:	bne	29034 <GetDataSlab+0x7208>
   29050:	ldr	r3, [sp, #32]
   29054:	str	r0, [sl, #4]!
   29058:	ldr	r1, [r7]
   2905c:	str	ip, [lr, #-4]
   29060:	cmp	r6, r3
   29064:	ldr	r3, [sp, #24]
   29068:	ldr	r2, [r3, #4]!
   2906c:	mla	r4, r2, r1, r4
   29070:	str	r3, [sp, #24]
   29074:	ldr	r3, [fp, #4]!
   29078:	ldr	r2, [sp, #16]
   2907c:	mul	r3, r3, r2
   29080:	str	r3, [sp, #16]
   29084:	bne	2901c <GetDataSlab+0x71f0>
   29088:	ldr	r3, [sp, #28]
   2908c:	cmp	r3, #1
   29090:	ldr	r3, [sp, #8]
   29094:	add	r6, r3, r4, lsl #1
   29098:	ldr	r3, [sp, #16]
   2909c:	beq	3ad28 <GetDataSlab+0x18efc>
   290a0:	cmp	r3, #0
   290a4:	ble	30874 <GetDataSlab+0xea48>
   290a8:	ldr	r3, [r9]
   290ac:	mov	fp, #0
   290b0:	mov	sl, fp
   290b4:	ldr	r2, [sp, #20]
   290b8:	ldr	r1, [sp, #20]
   290bc:	str	r3, [sp, #8]
   290c0:	ldr	r3, [sp, #28]
   290c4:	lsl	r2, r2, #3
   290c8:	str	r2, [sp, #32]
   290cc:	lsl	r7, r3, #1
   290d0:	ldr	r3, [sp, #20]
   290d4:	ldr	r2, [sp, #28]
   290d8:	sub	r3, r3, #1
   290dc:	mul	r3, r2, r3
   290e0:	ldr	r2, [sp, #32]
   290e4:	str	r3, [sp, #44]	; 0x2c
   290e8:	ldr	r3, [sp, #20]
   290ec:	mul	r3, r3, r7
   290f0:	str	r3, [sp, #40]	; 0x28
   290f4:	ldr	r3, [sp, #4]
   290f8:	add	r8, r3, r2
   290fc:	ldr	r2, [sp, #8]
   29100:	ldr	r3, [sp, #36]	; 0x24
   29104:	sub	r3, r3, r2
   29108:	lsl	r2, r2, #1
   2910c:	str	r2, [sp, #48]	; 0x30
   29110:	ldr	r2, [sp, #28]
   29114:	mls	r3, r1, r2, r3
   29118:	str	r3, [sp, #24]
   2911c:	lsl	r3, r3, #1
   29120:	str	r3, [sp, #36]	; 0x24
   29124:	ldr	r3, [sp, #8]
   29128:	cmp	r3, #0
   2912c:	beq	29140 <GetDataSlab+0x7314>
   29130:	ldr	r3, [sp, #48]	; 0x30
   29134:	add	r6, r6, r3
   29138:	ldr	r3, [sp, #8]
   2913c:	add	r4, r4, r3
   29140:	ldr	r3, [sp, #20]
   29144:	cmp	r3, #0
   29148:	ble	29188 <GetDataSlab+0x735c>
   2914c:	ldr	r3, [sp, #4]
   29150:	mov	r1, r6
   29154:	add	r2, r3, fp, lsl #3
   29158:	ldrh	r3, [r1], r7
   2915c:	vmov	s15, r3
   29160:	vcvt.f64.u32	d7, s15
   29164:	vstmia	r2!, {d7}
   29168:	cmp	r2, r8
   2916c:	bne	29158 <GetDataSlab+0x732c>
   29170:	ldr	r3, [sp, #28]
   29174:	ldr	r2, [sp, #40]	; 0x28
   29178:	add	r3, r3, r4
   2917c:	add	r6, r6, r2
   29180:	ldr	r2, [sp, #44]	; 0x2c
   29184:	add	r4, r3, r2
   29188:	ldr	r3, [sp, #232]	; 0xe8
   2918c:	cmp	r3, #1
   29190:	ldr	r3, [sp, #24]
   29194:	add	r4, r4, r3
   29198:	ldr	r3, [sp, #36]	; 0x24
   2919c:	add	r6, r6, r3
   291a0:	ble	340ac <GetDataSlab+0x12280>
   291a4:	ldr	r3, [sp, #100]	; 0x64
   291a8:	ldr	r2, [sp, #228]	; 0xe4
   291ac:	add	r3, r3, #1
   291b0:	ldr	r1, [r2, #4]
   291b4:	str	r3, [sp, #100]	; 0x64
   291b8:	sdiv	r2, r3, r1
   291bc:	mls	r3, r1, r2, r3
   291c0:	cmp	r3, #0
   291c4:	bne	34094 <GetDataSlab+0x12268>
   291c8:	add	ip, sp, #100	; 0x64
   291cc:	mov	r0, #1
   291d0:	ldr	lr, [sp, #12]
   291d4:	ldr	r3, [sp, #228]	; 0xe4
   291d8:	add	r5, r3, #4
   291dc:	b	29224 <GetDataSlab+0x73f8>
   291e0:	ldr	r3, [lr, #-4]
   291e4:	ldr	r1, [r9, r0, lsl #2]
   291e8:	mla	r3, r1, r3, r2
   291ec:	add	r6, r6, r3, lsl #1
   291f0:	add	r4, r4, r3
   291f4:	ldr	r3, [sp, #232]	; 0xe8
   291f8:	add	r0, r0, #1
   291fc:	cmp	r3, r0
   29200:	beq	340ac <GetDataSlab+0x12280>
   29204:	ldr	r3, [ip]
   29208:	ldr	r1, [r5, #4]!
   2920c:	add	r3, r3, #1
   29210:	sdiv	r2, r3, r1
   29214:	str	r3, [ip]
   29218:	mls	r3, r1, r2, r3
   2921c:	cmp	r3, #0
   29220:	bne	34098 <GetDataSlab+0x1226c>
   29224:	ldr	r2, [lr, #4]!
   29228:	str	sl, [ip], #4
   2922c:	sdiv	r3, r4, r2
   29230:	mls	r3, r2, r3, r4
   29234:	cmp	r3, #0
   29238:	sub	r2, r2, r3
   2923c:	bne	291e0 <GetDataSlab+0x73b4>
   29240:	ldr	r3, [r9, r0, lsl #2]
   29244:	cmp	r3, #0
   29248:	beq	291f4 <GetDataSlab+0x73c8>
   2924c:	ldr	r2, [lr, #-4]
   29250:	mul	r3, r2, r3
   29254:	add	r6, r6, r3, lsl #1
   29258:	add	r4, r4, r3
   2925c:	b	291f4 <GetDataSlab+0x73c8>
   29260:	ldr	r3, [sl]
   29264:	str	r3, [sp, #28]
   29268:	ldr	r3, [sp, #232]	; 0xe8
   2926c:	cmp	r3, #1
   29270:	ldr	r3, [r8]
   29274:	str	r3, [sp, #36]	; 0x24
   29278:	ldr	r3, [sp, #228]	; 0xe4
   2927c:	ldr	r3, [r3]
   29280:	str	r3, [sp, #20]
   29284:	ldr	r3, [sp, #28]
   29288:	sub	r3, r3, #1
   2928c:	str	r3, [sp, #56]	; 0x38
   29290:	ldr	r3, [sp, #36]	; 0x24
   29294:	str	r3, [sp, #136]	; 0x88
   29298:	ble	3fc54 <GetDataSlab+0x1de28>
   2929c:	add	r6, sl, #4
   292a0:	ldr	fp, [sp, #228]	; 0xe4
   292a4:	add	lr, sp, #60	; 0x3c
   292a8:	mov	r5, r8
   292ac:	mov	r4, #0
   292b0:	str	r9, [sp, #24]
   292b4:	ldr	r3, [sp, #232]	; 0xe8
   292b8:	add	r3, sl, r3, lsl #2
   292bc:	ldr	sl, [sp, #12]
   292c0:	str	r3, [sp, #32]
   292c4:	ldr	r3, [sp, #20]
   292c8:	str	r3, [sp, #16]
   292cc:	ldr	r3, [r6], #4
   292d0:	mov	r7, sl
   292d4:	ldr	r0, [r5], #4
   292d8:	sub	ip, r3, #1
   292dc:	mov	r1, r5
   292e0:	str	ip, [lr], #4
   292e4:	mov	r3, r1
   292e8:	ldr	r2, [r1, #-4]!
   292ec:	ldr	r3, [r3]
   292f0:	cmp	r1, r8
   292f4:	mul	ip, r2, ip
   292f8:	mul	r0, r3, r0
   292fc:	bne	292e4 <GetDataSlab+0x74b8>
   29300:	ldr	r3, [sp, #32]
   29304:	str	r0, [sl, #4]!
   29308:	ldr	r1, [r7]
   2930c:	str	ip, [lr, #-4]
   29310:	cmp	r3, r6
   29314:	ldr	r3, [sp, #24]
   29318:	ldr	r2, [r3, #4]!
   2931c:	mla	r4, r2, r1, r4
   29320:	str	r3, [sp, #24]
   29324:	ldr	r3, [fp, #4]!
   29328:	ldr	r2, [sp, #16]
   2932c:	mul	r3, r3, r2
   29330:	str	r3, [sp, #16]
   29334:	bne	292cc <GetDataSlab+0x74a0>
   29338:	ldr	r3, [sp, #28]
   2933c:	cmp	r3, #1
   29340:	ldr	r3, [sp, #8]
   29344:	add	r6, r3, r4, lsl #1
   29348:	ldr	r3, [sp, #16]
   2934c:	beq	3aa34 <GetDataSlab+0x18c08>
   29350:	cmp	r3, #0
   29354:	ble	30874 <GetDataSlab+0xea48>
   29358:	ldr	r3, [r9]
   2935c:	mov	fp, #0
   29360:	mov	sl, fp
   29364:	ldr	r2, [sp, #20]
   29368:	ldr	r1, [sp, #20]
   2936c:	str	r3, [sp, #8]
   29370:	ldr	r3, [sp, #28]
   29374:	lsl	r2, r2, #3
   29378:	str	r2, [sp, #32]
   2937c:	lsl	r7, r3, #1
   29380:	ldr	r3, [sp, #20]
   29384:	ldr	r2, [sp, #28]
   29388:	sub	r3, r3, #1
   2938c:	mul	r3, r2, r3
   29390:	ldr	r2, [sp, #32]
   29394:	str	r3, [sp, #40]	; 0x28
   29398:	ldr	r3, [sp, #20]
   2939c:	mul	r3, r3, r7
   293a0:	str	r3, [sp, #44]	; 0x2c
   293a4:	ldr	r3, [sp, #4]
   293a8:	add	r8, r3, r2
   293ac:	ldr	r2, [sp, #8]
   293b0:	ldr	r3, [sp, #36]	; 0x24
   293b4:	sub	r3, r3, r2
   293b8:	lsl	r2, r2, #1
   293bc:	str	r2, [sp, #48]	; 0x30
   293c0:	ldr	r2, [sp, #28]
   293c4:	mls	r3, r1, r2, r3
   293c8:	str	r3, [sp, #24]
   293cc:	lsl	r3, r3, #1
   293d0:	str	r3, [sp, #36]	; 0x24
   293d4:	ldr	r3, [sp, #8]
   293d8:	cmp	r3, #0
   293dc:	beq	293f0 <GetDataSlab+0x75c4>
   293e0:	ldr	r3, [sp, #48]	; 0x30
   293e4:	add	r6, r6, r3
   293e8:	ldr	r3, [sp, #8]
   293ec:	add	r4, r4, r3
   293f0:	ldr	r3, [sp, #20]
   293f4:	cmp	r3, #0
   293f8:	ble	29438 <GetDataSlab+0x760c>
   293fc:	ldr	r3, [sp, #4]
   29400:	mov	r1, r6
   29404:	add	r2, r3, fp, lsl #3
   29408:	ldrsh	r3, [r1], r7
   2940c:	vmov	s15, r3
   29410:	vcvt.f64.s32	d7, s15
   29414:	vstmia	r2!, {d7}
   29418:	cmp	r8, r2
   2941c:	bne	29408 <GetDataSlab+0x75dc>
   29420:	ldr	r3, [sp, #28]
   29424:	ldr	r2, [sp, #44]	; 0x2c
   29428:	add	r3, r3, r4
   2942c:	add	r6, r6, r2
   29430:	ldr	r2, [sp, #40]	; 0x28
   29434:	add	r4, r2, r3
   29438:	ldr	r3, [sp, #232]	; 0xe8
   2943c:	cmp	r3, #1
   29440:	ldr	r3, [sp, #24]
   29444:	add	r4, r4, r3
   29448:	ldr	r3, [sp, #36]	; 0x24
   2944c:	add	r6, r6, r3
   29450:	ble	34074 <GetDataSlab+0x12248>
   29454:	ldr	r3, [sp, #100]	; 0x64
   29458:	ldr	r2, [sp, #228]	; 0xe4
   2945c:	add	r3, r3, #1
   29460:	ldr	r1, [r2, #4]
   29464:	str	r3, [sp, #100]	; 0x64
   29468:	sdiv	r2, r3, r1
   2946c:	mls	r3, r1, r2, r3
   29470:	cmp	r3, #0
   29474:	bne	3405c <GetDataSlab+0x12230>
   29478:	add	ip, sp, #100	; 0x64
   2947c:	mov	r0, #1
   29480:	ldr	lr, [sp, #12]
   29484:	ldr	r3, [sp, #228]	; 0xe4
   29488:	add	r5, r3, #4
   2948c:	b	294d4 <GetDataSlab+0x76a8>
   29490:	ldr	r3, [lr, #-4]
   29494:	ldr	r1, [r9, r0, lsl #2]
   29498:	mla	r3, r1, r3, r2
   2949c:	add	r6, r6, r3, lsl #1
   294a0:	add	r4, r4, r3
   294a4:	ldr	r3, [sp, #232]	; 0xe8
   294a8:	add	r0, r0, #1
   294ac:	cmp	r3, r0
   294b0:	beq	34074 <GetDataSlab+0x12248>
   294b4:	ldr	r3, [ip]
   294b8:	ldr	r1, [r5, #4]!
   294bc:	add	r3, r3, #1
   294c0:	sdiv	r2, r3, r1
   294c4:	str	r3, [ip]
   294c8:	mls	r3, r1, r2, r3
   294cc:	cmp	r3, #0
   294d0:	bne	34060 <GetDataSlab+0x12234>
   294d4:	ldr	r2, [lr, #4]!
   294d8:	str	sl, [ip], #4
   294dc:	sdiv	r3, r4, r2
   294e0:	mls	r3, r2, r3, r4
   294e4:	cmp	r3, #0
   294e8:	sub	r2, r2, r3
   294ec:	bne	29490 <GetDataSlab+0x7664>
   294f0:	ldr	r3, [r9, r0, lsl #2]
   294f4:	cmp	r3, #0
   294f8:	beq	294a4 <GetDataSlab+0x7678>
   294fc:	ldr	r2, [lr, #-4]
   29500:	mul	r3, r2, r3
   29504:	add	r6, r6, r3, lsl #1
   29508:	add	r4, r4, r3
   2950c:	b	294a4 <GetDataSlab+0x7678>
   29510:	ldr	r3, [sp, #232]	; 0xe8
   29514:	ldr	r7, [sl]
   29518:	cmp	r3, #1
   2951c:	ldr	r3, [r8]
   29520:	str	r3, [sp, #40]	; 0x28
   29524:	ldr	r3, [sp, #228]	; 0xe4
   29528:	ldr	r3, [r3]
   2952c:	str	r3, [sp, #20]
   29530:	sub	r3, r7, #1
   29534:	str	r3, [sp, #56]	; 0x38
   29538:	ldr	r3, [sp, #40]	; 0x28
   2953c:	str	r3, [sp, #136]	; 0x88
   29540:	ble	3fc44 <GetDataSlab+0x1de18>
   29544:	ldr	fp, [sp, #12]
   29548:	add	r6, sl, #4
   2954c:	add	lr, sp, #60	; 0x3c
   29550:	mov	r5, r8
   29554:	mov	r4, #0
   29558:	str	r9, [sp, #28]
   2955c:	ldr	r3, [sp, #232]	; 0xe8
   29560:	add	r3, sl, r3, lsl #2
   29564:	str	r3, [sp, #32]
   29568:	ldr	r3, [sp, #228]	; 0xe4
   2956c:	str	r3, [sp, #24]
   29570:	ldr	r3, [sp, #20]
   29574:	str	r3, [sp, #16]
   29578:	ldr	r3, [r6], #4
   2957c:	mov	sl, fp
   29580:	ldr	r0, [r5], #4
   29584:	sub	ip, r3, #1
   29588:	mov	r1, r5
   2958c:	str	ip, [lr], #4
   29590:	mov	r3, r1
   29594:	ldr	r2, [r1, #-4]!
   29598:	ldr	r3, [r3]
   2959c:	cmp	r8, r1
   295a0:	mul	ip, r2, ip
   295a4:	mul	r0, r3, r0
   295a8:	bne	29590 <GetDataSlab+0x7764>
   295ac:	ldr	r3, [sp, #32]
   295b0:	str	r0, [fp, #4]!
   295b4:	ldr	r1, [sl]
   295b8:	str	ip, [lr, #-4]
   295bc:	ldr	r0, [sp, #24]
   295c0:	cmp	r3, r6
   295c4:	ldr	r3, [sp, #28]
   295c8:	ldr	r2, [r3, #4]!
   295cc:	mla	r4, r2, r1, r4
   295d0:	str	r3, [sp, #28]
   295d4:	ldr	r3, [r0, #4]!
   295d8:	ldr	r2, [sp, #16]
   295dc:	str	r0, [sp, #24]
   295e0:	mul	r3, r3, r2
   295e4:	str	r3, [sp, #16]
   295e8:	bne	29578 <GetDataSlab+0x774c>
   295ec:	ldr	r3, [sp, #8]
   295f0:	cmp	r7, #1
   295f4:	add	r5, r3, r4
   295f8:	ldr	r3, [sp, #16]
   295fc:	beq	3abbc <GetDataSlab+0x18d90>
   29600:	cmp	r3, #0
   29604:	ble	30874 <GetDataSlab+0xea48>
   29608:	ldr	r3, [r9]
   2960c:	mov	fp, #0
   29610:	mov	sl, fp
   29614:	ldr	r2, [sp, #20]
   29618:	str	r3, [sp, #8]
   2961c:	ldr	r3, [sp, #20]
   29620:	lsl	r2, r2, #3
   29624:	str	r2, [sp, #28]
   29628:	mul	r3, r3, r7
   2962c:	str	r3, [sp, #32]
   29630:	ldr	r3, [sp, #20]
   29634:	sub	r3, r3, #1
   29638:	mul	r3, r7, r3
   2963c:	str	r3, [sp, #36]	; 0x24
   29640:	ldr	r3, [sp, #4]
   29644:	add	r8, r3, r2
   29648:	ldr	r2, [sp, #8]
   2964c:	ldr	r3, [sp, #40]	; 0x28
   29650:	sub	r3, r3, r2
   29654:	ldr	r2, [sp, #32]
   29658:	sub	r3, r3, r2
   2965c:	str	r3, [sp, #24]
   29660:	ldr	r3, [sp, #8]
   29664:	cmp	r3, #0
   29668:	addne	r5, r5, r3
   2966c:	addne	r4, r4, r3
   29670:	ldr	r3, [sp, #20]
   29674:	cmp	r3, #0
   29678:	ble	296b4 <GetDataSlab+0x7888>
   2967c:	ldr	r3, [sp, #4]
   29680:	mov	r1, r5
   29684:	add	r2, r3, fp, lsl #3
   29688:	ldrb	r3, [r1], r7
   2968c:	vmov	s15, r3
   29690:	vcvt.f64.u32	d7, s15
   29694:	vstmia	r2!, {d7}
   29698:	cmp	r8, r2
   2969c:	bne	29688 <GetDataSlab+0x785c>
   296a0:	ldr	r2, [sp, #32]
   296a4:	add	r3, r7, r4
   296a8:	add	r5, r5, r2
   296ac:	ldr	r2, [sp, #36]	; 0x24
   296b0:	add	r4, r3, r2
   296b4:	ldr	r3, [sp, #232]	; 0xe8
   296b8:	cmp	r3, #1
   296bc:	ldr	r3, [sp, #24]
   296c0:	add	r4, r4, r3
   296c4:	add	r5, r5, r3
   296c8:	ble	3403c <GetDataSlab+0x12210>
   296cc:	ldr	r3, [sp, #100]	; 0x64
   296d0:	ldr	r2, [sp, #228]	; 0xe4
   296d4:	add	r3, r3, #1
   296d8:	ldr	r1, [r2, #4]
   296dc:	str	r3, [sp, #100]	; 0x64
   296e0:	sdiv	r2, r3, r1
   296e4:	mls	r3, r1, r2, r3
   296e8:	cmp	r3, #0
   296ec:	bne	34024 <GetDataSlab+0x121f8>
   296f0:	add	ip, sp, #100	; 0x64
   296f4:	mov	r0, #1
   296f8:	ldr	lr, [sp, #12]
   296fc:	ldr	r3, [sp, #228]	; 0xe4
   29700:	add	r6, r3, #4
   29704:	b	2974c <GetDataSlab+0x7920>
   29708:	ldr	r3, [lr, #-4]
   2970c:	ldr	r1, [r9, r0, lsl #2]
   29710:	mla	r3, r1, r3, r2
   29714:	add	r5, r5, r3
   29718:	add	r4, r4, r3
   2971c:	ldr	r3, [sp, #232]	; 0xe8
   29720:	add	r0, r0, #1
   29724:	cmp	r3, r0
   29728:	beq	3403c <GetDataSlab+0x12210>
   2972c:	ldr	r3, [ip]
   29730:	ldr	r1, [r6, #4]!
   29734:	add	r3, r3, #1
   29738:	sdiv	r2, r3, r1
   2973c:	str	r3, [ip]
   29740:	mls	r3, r1, r2, r3
   29744:	cmp	r3, #0
   29748:	bne	34028 <GetDataSlab+0x121fc>
   2974c:	ldr	r2, [lr, #4]!
   29750:	str	sl, [ip], #4
   29754:	sdiv	r3, r4, r2
   29758:	mls	r3, r2, r3, r4
   2975c:	cmp	r3, #0
   29760:	sub	r2, r2, r3
   29764:	bne	29708 <GetDataSlab+0x78dc>
   29768:	ldr	r3, [r9, r0, lsl #2]
   2976c:	cmp	r3, #0
   29770:	beq	2971c <GetDataSlab+0x78f0>
   29774:	ldr	r2, [lr, #-4]
   29778:	mul	r3, r2, r3
   2977c:	add	r5, r5, r3
   29780:	add	r4, r4, r3
   29784:	b	2971c <GetDataSlab+0x78f0>
   29788:	ldr	r3, [sp, #232]	; 0xe8
   2978c:	ldr	r7, [sl]
   29790:	cmp	r3, #1
   29794:	ldr	r3, [r8]
   29798:	str	r3, [sp, #40]	; 0x28
   2979c:	ldr	r3, [sp, #228]	; 0xe4
   297a0:	ldr	r3, [r3]
   297a4:	str	r3, [sp, #20]
   297a8:	sub	r3, r7, #1
   297ac:	str	r3, [sp, #56]	; 0x38
   297b0:	ldr	r3, [sp, #40]	; 0x28
   297b4:	str	r3, [sp, #136]	; 0x88
   297b8:	ble	3f984 <GetDataSlab+0x1db58>
   297bc:	ldr	fp, [sp, #12]
   297c0:	add	r6, sl, #4
   297c4:	add	lr, sp, #60	; 0x3c
   297c8:	mov	r5, r8
   297cc:	mov	r4, #0
   297d0:	str	r9, [sp, #28]
   297d4:	ldr	r3, [sp, #232]	; 0xe8
   297d8:	add	r3, sl, r3, lsl #2
   297dc:	str	r3, [sp, #32]
   297e0:	ldr	r3, [sp, #228]	; 0xe4
   297e4:	str	r3, [sp, #24]
   297e8:	ldr	r3, [sp, #20]
   297ec:	str	r3, [sp, #16]
   297f0:	ldr	r3, [r6], #4
   297f4:	mov	sl, fp
   297f8:	ldr	r0, [r5], #4
   297fc:	sub	ip, r3, #1
   29800:	mov	r1, r5
   29804:	str	ip, [lr], #4
   29808:	mov	r3, r1
   2980c:	ldr	r2, [r1, #-4]!
   29810:	ldr	r3, [r3]
   29814:	cmp	r1, r8
   29818:	mul	ip, r2, ip
   2981c:	mul	r0, r3, r0
   29820:	bne	29808 <GetDataSlab+0x79dc>
   29824:	ldr	r3, [sp, #32]
   29828:	str	r0, [fp, #4]!
   2982c:	ldr	r1, [sl]
   29830:	str	ip, [lr, #-4]
   29834:	ldr	r0, [sp, #24]
   29838:	cmp	r6, r3
   2983c:	ldr	r3, [sp, #28]
   29840:	ldr	r2, [r3, #4]!
   29844:	mla	r4, r2, r1, r4
   29848:	str	r3, [sp, #28]
   2984c:	ldr	r3, [r0, #4]!
   29850:	ldr	r2, [sp, #16]
   29854:	str	r0, [sp, #24]
   29858:	mul	r3, r3, r2
   2985c:	str	r3, [sp, #16]
   29860:	bne	297f0 <GetDataSlab+0x79c4>
   29864:	ldr	r3, [sp, #8]
   29868:	cmp	r7, #1
   2986c:	add	r5, r3, r4
   29870:	ldr	r3, [sp, #16]
   29874:	beq	3a10c <GetDataSlab+0x182e0>
   29878:	cmp	r3, #0
   2987c:	ble	30874 <GetDataSlab+0xea48>
   29880:	ldr	r3, [r9]
   29884:	mov	fp, #0
   29888:	mov	sl, fp
   2988c:	ldr	r2, [sp, #20]
   29890:	str	r3, [sp, #8]
   29894:	ldr	r3, [sp, #20]
   29898:	lsl	r2, r2, #3
   2989c:	str	r2, [sp, #28]
   298a0:	mul	r3, r3, r7
   298a4:	str	r3, [sp, #32]
   298a8:	ldr	r3, [sp, #20]
   298ac:	sub	r3, r3, #1
   298b0:	mul	r3, r7, r3
   298b4:	str	r3, [sp, #36]	; 0x24
   298b8:	ldr	r3, [sp, #4]
   298bc:	add	r8, r3, r2
   298c0:	ldr	r2, [sp, #8]
   298c4:	ldr	r3, [sp, #40]	; 0x28
   298c8:	sub	r3, r3, r2
   298cc:	ldr	r2, [sp, #32]
   298d0:	sub	r3, r3, r2
   298d4:	str	r3, [sp, #24]
   298d8:	ldr	r3, [sp, #8]
   298dc:	cmp	r3, #0
   298e0:	addne	r5, r5, r3
   298e4:	addne	r4, r4, r3
   298e8:	ldr	r3, [sp, #20]
   298ec:	cmp	r3, #0
   298f0:	ble	2992c <GetDataSlab+0x7b00>
   298f4:	ldr	r3, [sp, #4]
   298f8:	mov	r1, r5
   298fc:	add	r2, r3, fp, lsl #3
   29900:	ldrsb	r3, [r1], r7
   29904:	vmov	s15, r3
   29908:	vcvt.f64.s32	d7, s15
   2990c:	vstmia	r2!, {d7}
   29910:	cmp	r8, r2
   29914:	bne	29900 <GetDataSlab+0x7ad4>
   29918:	ldr	r2, [sp, #32]
   2991c:	add	r3, r7, r4
   29920:	add	r5, r5, r2
   29924:	ldr	r2, [sp, #36]	; 0x24
   29928:	add	r4, r2, r3
   2992c:	ldr	r3, [sp, #232]	; 0xe8
   29930:	cmp	r3, #1
   29934:	ldr	r3, [sp, #24]
   29938:	add	r4, r4, r3
   2993c:	add	r5, r5, r3
   29940:	ble	34004 <GetDataSlab+0x121d8>
   29944:	ldr	r3, [sp, #100]	; 0x64
   29948:	ldr	r2, [sp, #228]	; 0xe4
   2994c:	add	r3, r3, #1
   29950:	ldr	r1, [r2, #4]
   29954:	str	r3, [sp, #100]	; 0x64
   29958:	sdiv	r2, r3, r1
   2995c:	mls	r3, r1, r2, r3
   29960:	cmp	r3, #0
   29964:	bne	33fec <GetDataSlab+0x121c0>
   29968:	add	ip, sp, #100	; 0x64
   2996c:	mov	r0, #1
   29970:	ldr	lr, [sp, #12]
   29974:	ldr	r3, [sp, #228]	; 0xe4
   29978:	add	r6, r3, #4
   2997c:	b	299c4 <GetDataSlab+0x7b98>
   29980:	ldr	r3, [lr, #-4]
   29984:	ldr	r1, [r9, r0, lsl #2]
   29988:	mla	r3, r1, r3, r2
   2998c:	add	r5, r5, r3
   29990:	add	r4, r4, r3
   29994:	ldr	r3, [sp, #232]	; 0xe8
   29998:	add	r0, r0, #1
   2999c:	cmp	r3, r0
   299a0:	beq	34004 <GetDataSlab+0x121d8>
   299a4:	ldr	r3, [ip]
   299a8:	ldr	r1, [r6, #4]!
   299ac:	add	r3, r3, #1
   299b0:	sdiv	r2, r3, r1
   299b4:	str	r3, [ip]
   299b8:	mls	r3, r1, r2, r3
   299bc:	cmp	r3, #0
   299c0:	bne	33ff0 <GetDataSlab+0x121c4>
   299c4:	ldr	r2, [lr, #4]!
   299c8:	str	sl, [ip], #4
   299cc:	sdiv	r3, r4, r2
   299d0:	mls	r3, r2, r3, r4
   299d4:	cmp	r3, #0
   299d8:	sub	r2, r2, r3
   299dc:	bne	29980 <GetDataSlab+0x7b54>
   299e0:	ldr	r3, [r9, r0, lsl #2]
   299e4:	cmp	r3, #0
   299e8:	beq	29994 <GetDataSlab+0x7b68>
   299ec:	ldr	r2, [lr, #-4]
   299f0:	mul	r3, r2, r3
   299f4:	add	r5, r5, r3
   299f8:	add	r4, r4, r3
   299fc:	b	29994 <GetDataSlab+0x7b68>
   29a00:	ldr	r3, [sp, #232]	; 0xe8
   29a04:	ldr	r6, [sl]
   29a08:	cmp	r3, #1
   29a0c:	ldr	r3, [r8]
   29a10:	str	r3, [sp, #16]
   29a14:	ldr	r3, [sp, #228]	; 0xe4
   29a18:	ldr	fp, [r3]
   29a1c:	sub	r3, r6, #1
   29a20:	str	r3, [sp, #56]	; 0x38
   29a24:	ldr	r3, [sp, #16]
   29a28:	str	fp, [sp, #20]
   29a2c:	str	r3, [sp, #136]	; 0x88
   29a30:	ble	3fa14 <GetDataSlab+0x1dbe8>
   29a34:	ldr	r3, [sp, #232]	; 0xe8
   29a38:	add	r7, sl, #4
   29a3c:	add	r5, sp, #60	; 0x3c
   29a40:	mov	lr, r8
   29a44:	mov	r4, #0
   29a48:	str	r9, [sp, #32]
   29a4c:	add	r3, sl, r3, lsl #2
   29a50:	str	r3, [sp, #40]	; 0x28
   29a54:	ldr	r3, [sp, #12]
   29a58:	str	r3, [sp, #24]
   29a5c:	ldr	r3, [sp, #228]	; 0xe4
   29a60:	str	r3, [sp, #28]
   29a64:	ldr	r3, [r7], #4
   29a68:	ldr	r0, [lr], #4
   29a6c:	ldr	r2, [sp, #24]
   29a70:	sub	ip, r3, #1
   29a74:	mov	r1, lr
   29a78:	str	ip, [r5], #4
   29a7c:	str	r2, [sp, #36]	; 0x24
   29a80:	mov	r3, r1
   29a84:	ldr	r2, [r1, #-4]!
   29a88:	ldr	r3, [r3]
   29a8c:	cmp	r1, r8
   29a90:	mul	ip, r2, ip
   29a94:	mul	r0, r3, r0
   29a98:	bne	29a80 <GetDataSlab+0x7c54>
   29a9c:	ldr	r3, [sp, #24]
   29aa0:	str	ip, [r5, #-4]
   29aa4:	str	r0, [r3, #4]!
   29aa8:	str	r3, [sp, #24]
   29aac:	ldr	r0, [sp, #28]
   29ab0:	ldr	r3, [sp, #40]	; 0x28
   29ab4:	cmp	r3, r7
   29ab8:	ldr	r3, [sp, #36]	; 0x24
   29abc:	ldr	r1, [r3]
   29ac0:	ldr	r3, [sp, #32]
   29ac4:	ldr	r2, [r3, #4]!
   29ac8:	mla	r4, r2, r1, r4
   29acc:	str	r3, [sp, #32]
   29ad0:	ldr	r3, [r0, #4]!
   29ad4:	ldr	r2, [sp, #20]
   29ad8:	str	r0, [sp, #28]
   29adc:	mul	r3, r3, r2
   29ae0:	str	r3, [sp, #20]
   29ae4:	bne	29a64 <GetDataSlab+0x7c38>
   29ae8:	ldr	r3, [sp, #8]
   29aec:	cmp	r6, #1
   29af0:	add	r5, r3, r4, lsl #3
   29af4:	ldr	r3, [sp, #20]
   29af8:	beq	39220 <GetDataSlab+0x173f4>
   29afc:	cmp	r3, #0
   29b00:	ble	30874 <GetDataSlab+0xea48>
   29b04:	ldr	r3, [r9]
   29b08:	str	r3, [sp, #8]
   29b0c:	mov	r3, #0
   29b10:	str	r3, [sp, #24]
   29b14:	ldr	r3, [sp, #8]
   29b18:	cmp	r3, #0
   29b1c:	beq	29b28 <GetDataSlab+0x7cfc>
   29b20:	add	r5, r5, r3, lsl #3
   29b24:	add	r4, r4, r3
   29b28:	cmp	fp, #0
   29b2c:	ble	29b80 <GetDataSlab+0x7d54>
   29b30:	ldr	r3, [sp, #4]
   29b34:	ldr	r2, [sp, #24]
   29b38:	add	r1, r3, r2
   29b3c:	mov	r2, r1
   29b40:	vldr	d7, [r5]
   29b44:	ldr	r0, [sp, #228]	; 0xe4
   29b48:	vcvt.s32.f64	s15, d7
   29b4c:	vmov	r3, s15
   29b50:	strb	r3, [r2], #1
   29b54:	sub	r3, r2, r1
   29b58:	ldr	fp, [r0]
   29b5c:	ldr	r6, [sl]
   29b60:	cmp	fp, r3
   29b64:	add	r5, r5, r6, lsl #3
   29b68:	add	r4, r4, r6
   29b6c:	bgt	29b40 <GetDataSlab+0x7d14>
   29b70:	ldr	r3, [r9]
   29b74:	str	r3, [sp, #8]
   29b78:	ldr	r3, [r8]
   29b7c:	str	r3, [sp, #16]
   29b80:	ldr	r2, [sp, #8]
   29b84:	ldr	r3, [sp, #16]
   29b88:	sub	r3, r3, r2
   29b8c:	ldr	r2, [sp, #232]	; 0xe8
   29b90:	mls	r3, r6, fp, r3
   29b94:	cmp	r2, #1
   29b98:	add	r4, r4, r3
   29b9c:	add	r5, r5, r3, lsl #3
   29ba0:	ble	33fd4 <GetDataSlab+0x121a8>
   29ba4:	ldr	r3, [sp, #100]	; 0x64
   29ba8:	ldr	r2, [sp, #228]	; 0xe4
   29bac:	add	r3, r3, #1
   29bb0:	ldr	r1, [r2, #4]
   29bb4:	str	r3, [sp, #100]	; 0x64
   29bb8:	sdiv	r2, r3, r1
   29bbc:	mls	r3, r1, r2, r3
   29bc0:	cmp	r3, #0
   29bc4:	bne	33fbc <GetDataSlab+0x12190>
   29bc8:	add	ip, sp, #100	; 0x64
   29bcc:	mov	r0, #1
   29bd0:	ldr	lr, [sp, #12]
   29bd4:	ldr	r3, [sp, #228]	; 0xe4
   29bd8:	add	r7, r3, #4
   29bdc:	b	29c24 <GetDataSlab+0x7df8>
   29be0:	ldr	r3, [lr, #-4]
   29be4:	ldr	r1, [r9, r0, lsl #2]
   29be8:	mla	r3, r1, r3, r2
   29bec:	add	r5, r5, r3, lsl #3
   29bf0:	add	r4, r4, r3
   29bf4:	ldr	r3, [sp, #232]	; 0xe8
   29bf8:	add	r0, r0, #1
   29bfc:	cmp	r3, r0
   29c00:	beq	33fd4 <GetDataSlab+0x121a8>
   29c04:	ldr	r3, [ip]
   29c08:	ldr	r1, [r7, #4]!
   29c0c:	add	r3, r3, #1
   29c10:	sdiv	r2, r3, r1
   29c14:	str	r3, [ip]
   29c18:	mls	r3, r1, r2, r3
   29c1c:	cmp	r3, #0
   29c20:	bne	33fc0 <GetDataSlab+0x12194>
   29c24:	ldr	r2, [lr, #4]!
   29c28:	mov	r3, #0
   29c2c:	str	r3, [ip], #4
   29c30:	sdiv	r3, r4, r2
   29c34:	mls	r3, r2, r3, r4
   29c38:	cmp	r3, #0
   29c3c:	sub	r2, r2, r3
   29c40:	bne	29be0 <GetDataSlab+0x7db4>
   29c44:	ldr	r3, [r9, r0, lsl #2]
   29c48:	cmp	r3, #0
   29c4c:	beq	29bf4 <GetDataSlab+0x7dc8>
   29c50:	ldr	r2, [lr, #-4]
   29c54:	mul	r3, r2, r3
   29c58:	add	r5, r5, r3, lsl #3
   29c5c:	add	r4, r4, r3
   29c60:	b	29bf4 <GetDataSlab+0x7dc8>
   29c64:	ldr	r3, [sp, #232]	; 0xe8
   29c68:	ldr	r6, [sl]
   29c6c:	cmp	r3, #1
   29c70:	ldr	r3, [r8]
   29c74:	str	r3, [sp, #16]
   29c78:	ldr	r3, [sp, #228]	; 0xe4
   29c7c:	ldr	fp, [r3]
   29c80:	sub	r3, r6, #1
   29c84:	str	r3, [sp, #56]	; 0x38
   29c88:	ldr	r3, [sp, #16]
   29c8c:	str	fp, [sp, #20]
   29c90:	str	r3, [sp, #136]	; 0x88
   29c94:	ble	3fa0c <GetDataSlab+0x1dbe0>
   29c98:	ldr	r3, [sp, #232]	; 0xe8
   29c9c:	add	r7, sl, #4
   29ca0:	add	r5, sp, #60	; 0x3c
   29ca4:	mov	lr, r8
   29ca8:	mov	r4, #0
   29cac:	str	r9, [sp, #28]
   29cb0:	add	r3, sl, r3, lsl #2
   29cb4:	str	r3, [sp, #40]	; 0x28
   29cb8:	ldr	r3, [sp, #12]
   29cbc:	str	r3, [sp, #24]
   29cc0:	ldr	r3, [sp, #228]	; 0xe4
   29cc4:	str	r3, [sp, #32]
   29cc8:	ldr	r3, [r7], #4
   29ccc:	ldr	r0, [lr], #4
   29cd0:	ldr	r2, [sp, #24]
   29cd4:	sub	ip, r3, #1
   29cd8:	mov	r1, lr
   29cdc:	str	ip, [r5], #4
   29ce0:	str	r2, [sp, #36]	; 0x24
   29ce4:	mov	r3, r1
   29ce8:	ldr	r2, [r1, #-4]!
   29cec:	ldr	r3, [r3]
   29cf0:	cmp	r1, r8
   29cf4:	mul	ip, r2, ip
   29cf8:	mul	r0, r3, r0
   29cfc:	bne	29ce4 <GetDataSlab+0x7eb8>
   29d00:	ldr	r3, [sp, #24]
   29d04:	str	ip, [r5, #-4]
   29d08:	str	r0, [r3, #4]!
   29d0c:	str	r3, [sp, #24]
   29d10:	ldr	r0, [sp, #32]
   29d14:	ldr	r3, [sp, #40]	; 0x28
   29d18:	cmp	r3, r7
   29d1c:	ldr	r3, [sp, #36]	; 0x24
   29d20:	ldr	r1, [r3]
   29d24:	ldr	r3, [sp, #28]
   29d28:	ldr	r2, [r3, #4]!
   29d2c:	mla	r4, r2, r1, r4
   29d30:	str	r3, [sp, #28]
   29d34:	ldr	r3, [r0, #4]!
   29d38:	ldr	r2, [sp, #20]
   29d3c:	str	r0, [sp, #32]
   29d40:	mul	r3, r3, r2
   29d44:	str	r3, [sp, #20]
   29d48:	bne	29cc8 <GetDataSlab+0x7e9c>
   29d4c:	ldr	r3, [sp, #8]
   29d50:	cmp	r6, #1
   29d54:	add	r5, r3, r4, lsl #2
   29d58:	ldr	r3, [sp, #20]
   29d5c:	beq	3939c <GetDataSlab+0x17570>
   29d60:	cmp	r3, #0
   29d64:	ble	30874 <GetDataSlab+0xea48>
   29d68:	ldr	r3, [r9]
   29d6c:	str	r3, [sp, #8]
   29d70:	mov	r3, #0
   29d74:	str	r3, [sp, #24]
   29d78:	ldr	r3, [sp, #8]
   29d7c:	cmp	r3, #0
   29d80:	beq	29d8c <GetDataSlab+0x7f60>
   29d84:	add	r5, r5, r3, lsl #2
   29d88:	add	r4, r4, r3
   29d8c:	cmp	fp, #0
   29d90:	ble	29de4 <GetDataSlab+0x7fb8>
   29d94:	ldr	r3, [sp, #4]
   29d98:	ldr	r2, [sp, #24]
   29d9c:	add	r1, r3, r2
   29da0:	mov	r2, r1
   29da4:	vldr	s15, [r5]
   29da8:	ldr	r0, [sp, #228]	; 0xe4
   29dac:	vcvt.s32.f32	s15, s15
   29db0:	vmov	r3, s15
   29db4:	strb	r3, [r2], #1
   29db8:	sub	r3, r2, r1
   29dbc:	ldr	fp, [r0]
   29dc0:	ldr	r6, [sl]
   29dc4:	cmp	fp, r3
   29dc8:	add	r5, r5, r6, lsl #2
   29dcc:	add	r4, r4, r6
   29dd0:	bgt	29da4 <GetDataSlab+0x7f78>
   29dd4:	ldr	r3, [r9]
   29dd8:	str	r3, [sp, #8]
   29ddc:	ldr	r3, [r8]
   29de0:	str	r3, [sp, #16]
   29de4:	ldr	r2, [sp, #8]
   29de8:	ldr	r3, [sp, #16]
   29dec:	sub	r3, r3, r2
   29df0:	ldr	r2, [sp, #232]	; 0xe8
   29df4:	mls	r3, r6, fp, r3
   29df8:	cmp	r2, #1
   29dfc:	add	r4, r4, r3
   29e00:	add	r5, r5, r3, lsl #2
   29e04:	ble	33fa4 <GetDataSlab+0x12178>
   29e08:	ldr	r3, [sp, #100]	; 0x64
   29e0c:	ldr	r2, [sp, #228]	; 0xe4
   29e10:	add	r3, r3, #1
   29e14:	ldr	r1, [r2, #4]
   29e18:	str	r3, [sp, #100]	; 0x64
   29e1c:	sdiv	r2, r3, r1
   29e20:	mls	r3, r1, r2, r3
   29e24:	cmp	r3, #0
   29e28:	bne	33f8c <GetDataSlab+0x12160>
   29e2c:	add	ip, sp, #100	; 0x64
   29e30:	mov	r0, #1
   29e34:	ldr	lr, [sp, #12]
   29e38:	ldr	r3, [sp, #228]	; 0xe4
   29e3c:	add	r7, r3, #4
   29e40:	b	29e88 <GetDataSlab+0x805c>
   29e44:	ldr	r3, [lr, #-4]
   29e48:	ldr	r1, [r9, r0, lsl #2]
   29e4c:	mla	r3, r1, r3, r2
   29e50:	add	r5, r5, r3, lsl #2
   29e54:	add	r4, r4, r3
   29e58:	ldr	r3, [sp, #232]	; 0xe8
   29e5c:	add	r0, r0, #1
   29e60:	cmp	r3, r0
   29e64:	beq	33fa4 <GetDataSlab+0x12178>
   29e68:	ldr	r3, [ip]
   29e6c:	ldr	r1, [r7, #4]!
   29e70:	add	r3, r3, #1
   29e74:	sdiv	r2, r3, r1
   29e78:	str	r3, [ip]
   29e7c:	mls	r3, r1, r2, r3
   29e80:	cmp	r3, #0
   29e84:	bne	33f90 <GetDataSlab+0x12164>
   29e88:	ldr	r2, [lr, #4]!
   29e8c:	mov	r3, #0
   29e90:	str	r3, [ip], #4
   29e94:	sdiv	r3, r4, r2
   29e98:	mls	r3, r2, r3, r4
   29e9c:	cmp	r3, #0
   29ea0:	sub	r2, r2, r3
   29ea4:	bne	29e44 <GetDataSlab+0x8018>
   29ea8:	ldr	r3, [r9, r0, lsl #2]
   29eac:	cmp	r3, #0
   29eb0:	beq	29e58 <GetDataSlab+0x802c>
   29eb4:	ldr	r2, [lr, #-4]
   29eb8:	mul	r3, r2, r3
   29ebc:	add	r5, r5, r3, lsl #2
   29ec0:	add	r4, r4, r3
   29ec4:	b	29e58 <GetDataSlab+0x802c>
   29ec8:	ldr	r3, [sp, #232]	; 0xe8
   29ecc:	ldr	r6, [sl]
   29ed0:	cmp	r3, #1
   29ed4:	ldr	r3, [r8]
   29ed8:	str	r3, [sp, #16]
   29edc:	ldr	r3, [sp, #228]	; 0xe4
   29ee0:	ldr	fp, [r3]
   29ee4:	sub	r3, r6, #1
   29ee8:	str	r3, [sp, #56]	; 0x38
   29eec:	ldr	r3, [sp, #16]
   29ef0:	str	fp, [sp, #20]
   29ef4:	str	r3, [sp, #136]	; 0x88
   29ef8:	ble	3fa1c <GetDataSlab+0x1dbf0>
   29efc:	ldr	r3, [sp, #232]	; 0xe8
   29f00:	add	r7, sl, #4
   29f04:	add	r5, sp, #60	; 0x3c
   29f08:	mov	lr, r8
   29f0c:	mov	r4, #0
   29f10:	str	r9, [sp, #32]
   29f14:	add	r3, sl, r3, lsl #2
   29f18:	str	r3, [sp, #40]	; 0x28
   29f1c:	ldr	r3, [sp, #12]
   29f20:	str	r3, [sp, #24]
   29f24:	ldr	r3, [sp, #228]	; 0xe4
   29f28:	str	r3, [sp, #28]
   29f2c:	ldr	r3, [r7], #4
   29f30:	ldr	r0, [lr], #4
   29f34:	ldr	r2, [sp, #24]
   29f38:	sub	ip, r3, #1
   29f3c:	mov	r1, lr
   29f40:	str	ip, [r5], #4
   29f44:	str	r2, [sp, #36]	; 0x24
   29f48:	mov	r3, r1
   29f4c:	ldr	r2, [r1, #-4]!
   29f50:	ldr	r3, [r3]
   29f54:	cmp	r8, r1
   29f58:	mul	ip, r2, ip
   29f5c:	mul	r0, r3, r0
   29f60:	bne	29f48 <GetDataSlab+0x811c>
   29f64:	ldr	r3, [sp, #24]
   29f68:	str	ip, [r5, #-4]
   29f6c:	str	r0, [r3, #4]!
   29f70:	str	r3, [sp, #24]
   29f74:	ldr	r0, [sp, #28]
   29f78:	ldr	r3, [sp, #40]	; 0x28
   29f7c:	cmp	r7, r3
   29f80:	ldr	r3, [sp, #36]	; 0x24
   29f84:	ldr	r1, [r3]
   29f88:	ldr	r3, [sp, #32]
   29f8c:	ldr	r2, [r3, #4]!
   29f90:	mla	r4, r2, r1, r4
   29f94:	str	r3, [sp, #32]
   29f98:	ldr	r3, [r0, #4]!
   29f9c:	ldr	r2, [sp, #20]
   29fa0:	str	r0, [sp, #28]
   29fa4:	mul	r3, r3, r2
   29fa8:	str	r3, [sp, #20]
   29fac:	bne	29f2c <GetDataSlab+0x8100>
   29fb0:	ldr	r3, [sp, #8]
   29fb4:	cmp	r6, #1
   29fb8:	add	r5, r3, r4, lsl #2
   29fbc:	ldr	r3, [sp, #20]
   29fc0:	beq	390ac <GetDataSlab+0x17280>
   29fc4:	cmp	r3, #0
   29fc8:	ble	30874 <GetDataSlab+0xea48>
   29fcc:	ldr	r3, [r9]
   29fd0:	str	r3, [sp, #8]
   29fd4:	mov	r3, #0
   29fd8:	str	r3, [sp, #24]
   29fdc:	ldr	r3, [sp, #8]
   29fe0:	cmp	r3, #0
   29fe4:	beq	29ff0 <GetDataSlab+0x81c4>
   29fe8:	add	r5, r5, r3, lsl #2
   29fec:	add	r4, r4, r3
   29ff0:	cmp	fp, #0
   29ff4:	ble	2a040 <GetDataSlab+0x8214>
   29ff8:	ldr	r3, [sp, #4]
   29ffc:	ldr	r2, [sp, #24]
   2a000:	add	r1, r3, r2
   2a004:	mov	r2, r1
   2a008:	ldr	r3, [r5]
   2a00c:	ldr	r0, [sp, #228]	; 0xe4
   2a010:	strb	r3, [r2], #1
   2a014:	sub	r3, r2, r1
   2a018:	ldr	r6, [sl]
   2a01c:	ldr	fp, [r0]
   2a020:	add	r5, r5, r6, lsl #2
   2a024:	add	r4, r4, r6
   2a028:	cmp	fp, r3
   2a02c:	bgt	2a008 <GetDataSlab+0x81dc>
   2a030:	ldr	r3, [r9]
   2a034:	str	r3, [sp, #8]
   2a038:	ldr	r3, [r8]
   2a03c:	str	r3, [sp, #16]
   2a040:	ldr	r2, [sp, #8]
   2a044:	ldr	r3, [sp, #16]
   2a048:	sub	r3, r3, r2
   2a04c:	ldr	r2, [sp, #232]	; 0xe8
   2a050:	mls	r3, r6, fp, r3
   2a054:	cmp	r2, #1
   2a058:	add	r4, r4, r3
   2a05c:	add	r5, r5, r3, lsl #2
   2a060:	ble	33f74 <GetDataSlab+0x12148>
   2a064:	ldr	r3, [sp, #100]	; 0x64
   2a068:	ldr	r2, [sp, #228]	; 0xe4
   2a06c:	add	r3, r3, #1
   2a070:	ldr	r1, [r2, #4]
   2a074:	str	r3, [sp, #100]	; 0x64
   2a078:	sdiv	r2, r3, r1
   2a07c:	mls	r3, r1, r2, r3
   2a080:	cmp	r3, #0
   2a084:	bne	33f5c <GetDataSlab+0x12130>
   2a088:	add	ip, sp, #100	; 0x64
   2a08c:	mov	r0, #1
   2a090:	ldr	lr, [sp, #12]
   2a094:	ldr	r3, [sp, #228]	; 0xe4
   2a098:	add	r7, r3, #4
   2a09c:	b	2a0e4 <GetDataSlab+0x82b8>
   2a0a0:	ldr	r3, [lr, #-4]
   2a0a4:	ldr	r1, [r9, r0, lsl #2]
   2a0a8:	mla	r3, r1, r3, r2
   2a0ac:	add	r5, r5, r3, lsl #2
   2a0b0:	add	r4, r4, r3
   2a0b4:	ldr	r3, [sp, #232]	; 0xe8
   2a0b8:	add	r0, r0, #1
   2a0bc:	cmp	r3, r0
   2a0c0:	beq	33f74 <GetDataSlab+0x12148>
   2a0c4:	ldr	r3, [ip]
   2a0c8:	ldr	r1, [r7, #4]!
   2a0cc:	add	r3, r3, #1
   2a0d0:	sdiv	r2, r3, r1
   2a0d4:	str	r3, [ip]
   2a0d8:	mls	r3, r1, r2, r3
   2a0dc:	cmp	r3, #0
   2a0e0:	bne	33f60 <GetDataSlab+0x12134>
   2a0e4:	ldr	r2, [lr, #4]!
   2a0e8:	mov	r3, #0
   2a0ec:	str	r3, [ip], #4
   2a0f0:	sdiv	r3, r4, r2
   2a0f4:	mls	r3, r2, r3, r4
   2a0f8:	cmp	r3, #0
   2a0fc:	sub	r2, r2, r3
   2a100:	bne	2a0a0 <GetDataSlab+0x8274>
   2a104:	ldr	r3, [r9, r0, lsl #2]
   2a108:	cmp	r3, #0
   2a10c:	beq	2a0b4 <GetDataSlab+0x8288>
   2a110:	ldr	r2, [lr, #-4]
   2a114:	mul	r3, r2, r3
   2a118:	add	r5, r5, r3, lsl #2
   2a11c:	add	r4, r4, r3
   2a120:	b	2a0b4 <GetDataSlab+0x8288>
   2a124:	ldr	r3, [sp, #232]	; 0xe8
   2a128:	ldr	r6, [sl]
   2a12c:	cmp	r3, #1
   2a130:	ldr	r3, [r8]
   2a134:	str	r3, [sp, #16]
   2a138:	ldr	r3, [sp, #228]	; 0xe4
   2a13c:	ldr	fp, [r3]
   2a140:	sub	r3, r6, #1
   2a144:	str	r3, [sp, #56]	; 0x38
   2a148:	ldr	r3, [sp, #16]
   2a14c:	str	fp, [sp, #20]
   2a150:	str	r3, [sp, #136]	; 0x88
   2a154:	ble	3fc2c <GetDataSlab+0x1de00>
   2a158:	ldr	r3, [sp, #232]	; 0xe8
   2a15c:	add	r7, sl, #4
   2a160:	add	r5, sp, #60	; 0x3c
   2a164:	mov	lr, r8
   2a168:	mov	r4, #0
   2a16c:	str	r9, [sp, #28]
   2a170:	add	r3, sl, r3, lsl #2
   2a174:	str	r3, [sp, #40]	; 0x28
   2a178:	ldr	r3, [sp, #12]
   2a17c:	str	r3, [sp, #24]
   2a180:	ldr	r3, [sp, #228]	; 0xe4
   2a184:	str	r3, [sp, #32]
   2a188:	ldr	r3, [r7], #4
   2a18c:	ldr	r0, [lr], #4
   2a190:	ldr	r2, [sp, #24]
   2a194:	sub	ip, r3, #1
   2a198:	mov	r1, lr
   2a19c:	str	ip, [r5], #4
   2a1a0:	str	r2, [sp, #36]	; 0x24
   2a1a4:	mov	r3, r1
   2a1a8:	ldr	r2, [r1, #-4]!
   2a1ac:	ldr	r3, [r3]
   2a1b0:	cmp	r1, r8
   2a1b4:	mul	ip, r2, ip
   2a1b8:	mul	r0, r3, r0
   2a1bc:	bne	2a1a4 <GetDataSlab+0x8378>
   2a1c0:	ldr	r3, [sp, #24]
   2a1c4:	str	ip, [r5, #-4]
   2a1c8:	str	r0, [r3, #4]!
   2a1cc:	str	r3, [sp, #24]
   2a1d0:	ldr	r0, [sp, #32]
   2a1d4:	ldr	r3, [sp, #40]	; 0x28
   2a1d8:	cmp	r7, r3
   2a1dc:	ldr	r3, [sp, #36]	; 0x24
   2a1e0:	ldr	r1, [r3]
   2a1e4:	ldr	r3, [sp, #28]
   2a1e8:	ldr	r2, [r3, #4]!
   2a1ec:	mla	r4, r2, r1, r4
   2a1f0:	str	r3, [sp, #28]
   2a1f4:	ldr	r3, [r0, #4]!
   2a1f8:	ldr	r2, [sp, #20]
   2a1fc:	str	r0, [sp, #32]
   2a200:	mul	r3, r3, r2
   2a204:	str	r3, [sp, #20]
   2a208:	bne	2a188 <GetDataSlab+0x835c>
   2a20c:	ldr	r3, [sp, #8]
   2a210:	cmp	r6, #1
   2a214:	add	r5, r3, r4, lsl #2
   2a218:	ldr	r3, [sp, #20]
   2a21c:	beq	3a278 <GetDataSlab+0x1844c>
   2a220:	cmp	r3, #0
   2a224:	ble	30874 <GetDataSlab+0xea48>
   2a228:	ldr	r3, [r9]
   2a22c:	str	r3, [sp, #8]
   2a230:	mov	r3, #0
   2a234:	str	r3, [sp, #24]
   2a238:	ldr	r3, [sp, #8]
   2a23c:	cmp	r3, #0
   2a240:	beq	2a24c <GetDataSlab+0x8420>
   2a244:	add	r5, r5, r3, lsl #2
   2a248:	add	r4, r4, r3
   2a24c:	cmp	fp, #0
   2a250:	ble	2a29c <GetDataSlab+0x8470>
   2a254:	ldr	r3, [sp, #4]
   2a258:	ldr	r2, [sp, #24]
   2a25c:	add	r1, r3, r2
   2a260:	mov	r2, r1
   2a264:	ldr	r3, [r5]
   2a268:	ldr	r0, [sp, #228]	; 0xe4
   2a26c:	strb	r3, [r2], #1
   2a270:	sub	r3, r2, r1
   2a274:	ldr	r6, [sl]
   2a278:	ldr	fp, [r0]
   2a27c:	add	r5, r5, r6, lsl #2
   2a280:	add	r4, r4, r6
   2a284:	cmp	fp, r3
   2a288:	bgt	2a264 <GetDataSlab+0x8438>
   2a28c:	ldr	r3, [r9]
   2a290:	str	r3, [sp, #8]
   2a294:	ldr	r3, [r8]
   2a298:	str	r3, [sp, #16]
   2a29c:	ldr	r2, [sp, #8]
   2a2a0:	ldr	r3, [sp, #16]
   2a2a4:	sub	r3, r3, r2
   2a2a8:	ldr	r2, [sp, #232]	; 0xe8
   2a2ac:	mls	r3, r6, fp, r3
   2a2b0:	cmp	r2, #1
   2a2b4:	add	r4, r4, r3
   2a2b8:	add	r5, r5, r3, lsl #2
   2a2bc:	ble	33f44 <GetDataSlab+0x12118>
   2a2c0:	ldr	r3, [sp, #100]	; 0x64
   2a2c4:	ldr	r2, [sp, #228]	; 0xe4
   2a2c8:	add	r3, r3, #1
   2a2cc:	ldr	r1, [r2, #4]
   2a2d0:	str	r3, [sp, #100]	; 0x64
   2a2d4:	sdiv	r2, r3, r1
   2a2d8:	mls	r3, r1, r2, r3
   2a2dc:	cmp	r3, #0
   2a2e0:	bne	33f2c <GetDataSlab+0x12100>
   2a2e4:	add	ip, sp, #100	; 0x64
   2a2e8:	mov	r0, #1
   2a2ec:	ldr	lr, [sp, #12]
   2a2f0:	ldr	r3, [sp, #228]	; 0xe4
   2a2f4:	add	r7, r3, #4
   2a2f8:	b	2a340 <GetDataSlab+0x8514>
   2a2fc:	ldr	r3, [lr, #-4]
   2a300:	ldr	r1, [r9, r0, lsl #2]
   2a304:	mla	r3, r1, r3, r2
   2a308:	add	r5, r5, r3, lsl #2
   2a30c:	add	r4, r4, r3
   2a310:	ldr	r3, [sp, #232]	; 0xe8
   2a314:	add	r0, r0, #1
   2a318:	cmp	r3, r0
   2a31c:	beq	33f44 <GetDataSlab+0x12118>
   2a320:	ldr	r3, [ip]
   2a324:	ldr	r1, [r7, #4]!
   2a328:	add	r3, r3, #1
   2a32c:	sdiv	r2, r3, r1
   2a330:	str	r3, [ip]
   2a334:	mls	r3, r1, r2, r3
   2a338:	cmp	r3, #0
   2a33c:	bne	33f30 <GetDataSlab+0x12104>
   2a340:	ldr	r2, [lr, #4]!
   2a344:	mov	r3, #0
   2a348:	str	r3, [ip], #4
   2a34c:	sdiv	r3, r4, r2
   2a350:	mls	r3, r2, r3, r4
   2a354:	cmp	r3, #0
   2a358:	sub	r2, r2, r3
   2a35c:	bne	2a2fc <GetDataSlab+0x84d0>
   2a360:	ldr	r3, [r9, r0, lsl #2]
   2a364:	cmp	r3, #0
   2a368:	beq	2a310 <GetDataSlab+0x84e4>
   2a36c:	ldr	r2, [lr, #-4]
   2a370:	mul	r3, r2, r3
   2a374:	add	r5, r5, r3, lsl #2
   2a378:	add	r4, r4, r3
   2a37c:	b	2a310 <GetDataSlab+0x84e4>
   2a380:	ldr	r3, [sp, #232]	; 0xe8
   2a384:	ldr	r6, [sl]
   2a388:	cmp	r3, #1
   2a38c:	ldr	r3, [r8]
   2a390:	str	r3, [sp, #16]
   2a394:	ldr	r3, [sp, #228]	; 0xe4
   2a398:	ldr	fp, [r3]
   2a39c:	sub	r3, r6, #1
   2a3a0:	str	r3, [sp, #56]	; 0x38
   2a3a4:	ldr	r3, [sp, #16]
   2a3a8:	str	fp, [sp, #20]
   2a3ac:	str	r3, [sp, #136]	; 0x88
   2a3b0:	ble	3fb6c <GetDataSlab+0x1dd40>
   2a3b4:	ldr	r3, [sp, #232]	; 0xe8
   2a3b8:	add	r7, sl, #4
   2a3bc:	add	r5, sp, #60	; 0x3c
   2a3c0:	mov	lr, r8
   2a3c4:	mov	r4, #0
   2a3c8:	str	r9, [sp, #28]
   2a3cc:	add	r3, sl, r3, lsl #2
   2a3d0:	str	r3, [sp, #40]	; 0x28
   2a3d4:	ldr	r3, [sp, #12]
   2a3d8:	str	r3, [sp, #24]
   2a3dc:	ldr	r3, [sp, #228]	; 0xe4
   2a3e0:	str	r3, [sp, #32]
   2a3e4:	ldr	r3, [r7], #4
   2a3e8:	ldr	r0, [lr], #4
   2a3ec:	ldr	r2, [sp, #24]
   2a3f0:	sub	ip, r3, #1
   2a3f4:	mov	r1, lr
   2a3f8:	str	ip, [r5], #4
   2a3fc:	str	r2, [sp, #36]	; 0x24
   2a400:	mov	r3, r1
   2a404:	ldr	r2, [r1, #-4]!
   2a408:	ldr	r3, [r3]
   2a40c:	cmp	r8, r1
   2a410:	mul	ip, r2, ip
   2a414:	mul	r0, r3, r0
   2a418:	bne	2a400 <GetDataSlab+0x85d4>
   2a41c:	ldr	r3, [sp, #24]
   2a420:	str	ip, [r5, #-4]
   2a424:	str	r0, [r3, #4]!
   2a428:	str	r3, [sp, #24]
   2a42c:	ldr	r0, [sp, #32]
   2a430:	ldr	r3, [sp, #40]	; 0x28
   2a434:	cmp	r7, r3
   2a438:	ldr	r3, [sp, #36]	; 0x24
   2a43c:	ldr	r1, [r3]
   2a440:	ldr	r3, [sp, #28]
   2a444:	ldr	r2, [r3, #4]!
   2a448:	mla	r4, r2, r1, r4
   2a44c:	str	r3, [sp, #28]
   2a450:	ldr	r3, [r0, #4]!
   2a454:	ldr	r2, [sp, #20]
   2a458:	str	r0, [sp, #32]
   2a45c:	mul	r3, r3, r2
   2a460:	str	r3, [sp, #20]
   2a464:	bne	2a3e4 <GetDataSlab+0x85b8>
   2a468:	ldr	r3, [sp, #8]
   2a46c:	cmp	r6, #1
   2a470:	add	r5, r3, r4, lsl #1
   2a474:	ldr	r3, [sp, #20]
   2a478:	beq	355d4 <GetDataSlab+0x137a8>
   2a47c:	cmp	r3, #0
   2a480:	ble	30874 <GetDataSlab+0xea48>
   2a484:	ldr	r3, [r9]
   2a488:	str	r3, [sp, #8]
   2a48c:	mov	r3, #0
   2a490:	str	r3, [sp, #24]
   2a494:	ldr	r3, [sp, #8]
   2a498:	cmp	r3, #0
   2a49c:	beq	2a4a8 <GetDataSlab+0x867c>
   2a4a0:	add	r5, r5, r3, lsl #1
   2a4a4:	add	r4, r4, r3
   2a4a8:	cmp	fp, #0
   2a4ac:	ble	2a4f8 <GetDataSlab+0x86cc>
   2a4b0:	ldr	r3, [sp, #4]
   2a4b4:	ldr	r2, [sp, #24]
   2a4b8:	add	r1, r3, r2
   2a4bc:	mov	r2, r1
   2a4c0:	ldrh	r3, [r5]
   2a4c4:	ldr	r0, [sp, #228]	; 0xe4
   2a4c8:	strb	r3, [r2], #1
   2a4cc:	sub	r3, r2, r1
   2a4d0:	ldr	r6, [sl]
   2a4d4:	ldr	fp, [r0]
   2a4d8:	add	r5, r5, r6, lsl #1
   2a4dc:	add	r4, r4, r6
   2a4e0:	cmp	fp, r3
   2a4e4:	bgt	2a4c0 <GetDataSlab+0x8694>
   2a4e8:	ldr	r3, [r9]
   2a4ec:	str	r3, [sp, #8]
   2a4f0:	ldr	r3, [r8]
   2a4f4:	str	r3, [sp, #16]
   2a4f8:	ldr	r2, [sp, #8]
   2a4fc:	ldr	r3, [sp, #16]
   2a500:	sub	r3, r3, r2
   2a504:	ldr	r2, [sp, #232]	; 0xe8
   2a508:	mls	r3, r6, fp, r3
   2a50c:	cmp	r2, #1
   2a510:	add	r4, r4, r3
   2a514:	add	r5, r5, r3, lsl #1
   2a518:	ble	33f14 <GetDataSlab+0x120e8>
   2a51c:	ldr	r3, [sp, #100]	; 0x64
   2a520:	ldr	r2, [sp, #228]	; 0xe4
   2a524:	add	r3, r3, #1
   2a528:	ldr	r1, [r2, #4]
   2a52c:	str	r3, [sp, #100]	; 0x64
   2a530:	sdiv	r2, r3, r1
   2a534:	mls	r3, r1, r2, r3
   2a538:	cmp	r3, #0
   2a53c:	bne	33efc <GetDataSlab+0x120d0>
   2a540:	add	ip, sp, #100	; 0x64
   2a544:	mov	r0, #1
   2a548:	ldr	lr, [sp, #12]
   2a54c:	ldr	r3, [sp, #228]	; 0xe4
   2a550:	add	r7, r3, #4
   2a554:	b	2a59c <GetDataSlab+0x8770>
   2a558:	ldr	r3, [lr, #-4]
   2a55c:	ldr	r1, [r9, r0, lsl #2]
   2a560:	mla	r3, r1, r3, r2
   2a564:	add	r5, r5, r3, lsl #1
   2a568:	add	r4, r4, r3
   2a56c:	ldr	r3, [sp, #232]	; 0xe8
   2a570:	add	r0, r0, #1
   2a574:	cmp	r3, r0
   2a578:	beq	33f14 <GetDataSlab+0x120e8>
   2a57c:	ldr	r3, [ip]
   2a580:	ldr	r1, [r7, #4]!
   2a584:	add	r3, r3, #1
   2a588:	sdiv	r2, r3, r1
   2a58c:	str	r3, [ip]
   2a590:	mls	r3, r1, r2, r3
   2a594:	cmp	r3, #0
   2a598:	bne	33f00 <GetDataSlab+0x120d4>
   2a59c:	ldr	r2, [lr, #4]!
   2a5a0:	mov	r3, #0
   2a5a4:	str	r3, [ip], #4
   2a5a8:	sdiv	r3, r4, r2
   2a5ac:	mls	r3, r2, r3, r4
   2a5b0:	cmp	r3, #0
   2a5b4:	sub	r2, r2, r3
   2a5b8:	bne	2a558 <GetDataSlab+0x872c>
   2a5bc:	ldr	r3, [r9, r0, lsl #2]
   2a5c0:	cmp	r3, #0
   2a5c4:	beq	2a56c <GetDataSlab+0x8740>
   2a5c8:	ldr	r2, [lr, #-4]
   2a5cc:	mul	r3, r2, r3
   2a5d0:	add	r5, r5, r3, lsl #1
   2a5d4:	add	r4, r4, r3
   2a5d8:	b	2a56c <GetDataSlab+0x8740>
   2a5dc:	ldr	r3, [sp, #232]	; 0xe8
   2a5e0:	ldr	r6, [sl]
   2a5e4:	cmp	r3, #1
   2a5e8:	ldr	r3, [r8]
   2a5ec:	str	r3, [sp, #16]
   2a5f0:	ldr	r3, [sp, #228]	; 0xe4
   2a5f4:	ldr	fp, [r3]
   2a5f8:	sub	r3, r6, #1
   2a5fc:	str	r3, [sp, #56]	; 0x38
   2a600:	ldr	r3, [sp, #16]
   2a604:	str	fp, [sp, #20]
   2a608:	str	r3, [sp, #136]	; 0x88
   2a60c:	ble	3fa7c <GetDataSlab+0x1dc50>
   2a610:	ldr	r3, [sp, #232]	; 0xe8
   2a614:	add	r7, sl, #4
   2a618:	add	r5, sp, #60	; 0x3c
   2a61c:	mov	lr, r8
   2a620:	mov	r4, #0
   2a624:	str	r9, [sp, #32]
   2a628:	add	r3, sl, r3, lsl #2
   2a62c:	str	r3, [sp, #40]	; 0x28
   2a630:	ldr	r3, [sp, #12]
   2a634:	str	r3, [sp, #24]
   2a638:	ldr	r3, [sp, #228]	; 0xe4
   2a63c:	str	r3, [sp, #28]
   2a640:	ldr	r3, [r7], #4
   2a644:	ldr	r0, [lr], #4
   2a648:	ldr	r2, [sp, #24]
   2a64c:	sub	ip, r3, #1
   2a650:	mov	r1, lr
   2a654:	str	ip, [r5], #4
   2a658:	str	r2, [sp, #36]	; 0x24
   2a65c:	mov	r3, r1
   2a660:	ldr	r2, [r1, #-4]!
   2a664:	ldr	r3, [r3]
   2a668:	cmp	r1, r8
   2a66c:	mul	ip, r2, ip
   2a670:	mul	r0, r3, r0
   2a674:	bne	2a65c <GetDataSlab+0x8830>
   2a678:	ldr	r3, [sp, #24]
   2a67c:	str	ip, [r5, #-4]
   2a680:	str	r0, [r3, #4]!
   2a684:	str	r3, [sp, #24]
   2a688:	ldr	r0, [sp, #28]
   2a68c:	ldr	r3, [sp, #40]	; 0x28
   2a690:	cmp	r3, r7
   2a694:	ldr	r3, [sp, #36]	; 0x24
   2a698:	ldr	r1, [r3]
   2a69c:	ldr	r3, [sp, #32]
   2a6a0:	ldr	r2, [r3, #4]!
   2a6a4:	mla	r4, r2, r1, r4
   2a6a8:	str	r3, [sp, #32]
   2a6ac:	ldr	r3, [r0, #4]!
   2a6b0:	ldr	r2, [sp, #20]
   2a6b4:	str	r0, [sp, #28]
   2a6b8:	mul	r3, r3, r2
   2a6bc:	str	r3, [sp, #20]
   2a6c0:	bne	2a640 <GetDataSlab+0x8814>
   2a6c4:	ldr	r3, [sp, #8]
   2a6c8:	cmp	r6, #1
   2a6cc:	add	r5, r3, r4, lsl #1
   2a6d0:	ldr	r3, [sp, #20]
   2a6d4:	beq	37640 <GetDataSlab+0x15814>
   2a6d8:	cmp	r3, #0
   2a6dc:	ble	30874 <GetDataSlab+0xea48>
   2a6e0:	ldr	r3, [r9]
   2a6e4:	str	r3, [sp, #8]
   2a6e8:	mov	r3, #0
   2a6ec:	str	r3, [sp, #24]
   2a6f0:	ldr	r3, [sp, #8]
   2a6f4:	cmp	r3, #0
   2a6f8:	beq	2a704 <GetDataSlab+0x88d8>
   2a6fc:	add	r5, r5, r3, lsl #1
   2a700:	add	r4, r4, r3
   2a704:	cmp	fp, #0
   2a708:	ble	2a754 <GetDataSlab+0x8928>
   2a70c:	ldr	r3, [sp, #4]
   2a710:	ldr	r2, [sp, #24]
   2a714:	add	r1, r3, r2
   2a718:	mov	r2, r1
   2a71c:	ldrh	r3, [r5]
   2a720:	ldr	r0, [sp, #228]	; 0xe4
   2a724:	strb	r3, [r2], #1
   2a728:	sub	r3, r2, r1
   2a72c:	ldr	r6, [sl]
   2a730:	ldr	fp, [r0]
   2a734:	add	r5, r5, r6, lsl #1
   2a738:	add	r4, r4, r6
   2a73c:	cmp	fp, r3
   2a740:	bgt	2a71c <GetDataSlab+0x88f0>
   2a744:	ldr	r3, [r9]
   2a748:	str	r3, [sp, #8]
   2a74c:	ldr	r3, [r8]
   2a750:	str	r3, [sp, #16]
   2a754:	ldr	r2, [sp, #8]
   2a758:	ldr	r3, [sp, #16]
   2a75c:	sub	r3, r3, r2
   2a760:	ldr	r2, [sp, #232]	; 0xe8
   2a764:	mls	r3, r6, fp, r3
   2a768:	cmp	r2, #1
   2a76c:	add	r4, r4, r3
   2a770:	add	r5, r5, r3, lsl #1
   2a774:	ble	33ee4 <GetDataSlab+0x120b8>
   2a778:	ldr	r3, [sp, #100]	; 0x64
   2a77c:	ldr	r2, [sp, #228]	; 0xe4
   2a780:	add	r3, r3, #1
   2a784:	ldr	r1, [r2, #4]
   2a788:	str	r3, [sp, #100]	; 0x64
   2a78c:	sdiv	r2, r3, r1
   2a790:	mls	r3, r1, r2, r3
   2a794:	cmp	r3, #0
   2a798:	bne	33ecc <GetDataSlab+0x120a0>
   2a79c:	add	ip, sp, #100	; 0x64
   2a7a0:	mov	r0, #1
   2a7a4:	ldr	lr, [sp, #12]
   2a7a8:	ldr	r3, [sp, #228]	; 0xe4
   2a7ac:	add	r7, r3, #4
   2a7b0:	b	2a7f8 <GetDataSlab+0x89cc>
   2a7b4:	ldr	r3, [lr, #-4]
   2a7b8:	ldr	r1, [r9, r0, lsl #2]
   2a7bc:	mla	r3, r1, r3, r2
   2a7c0:	add	r5, r5, r3, lsl #1
   2a7c4:	add	r4, r4, r3
   2a7c8:	ldr	r3, [sp, #232]	; 0xe8
   2a7cc:	add	r0, r0, #1
   2a7d0:	cmp	r3, r0
   2a7d4:	beq	33ee4 <GetDataSlab+0x120b8>
   2a7d8:	ldr	r3, [ip]
   2a7dc:	ldr	r1, [r7, #4]!
   2a7e0:	add	r3, r3, #1
   2a7e4:	sdiv	r2, r3, r1
   2a7e8:	str	r3, [ip]
   2a7ec:	mls	r3, r1, r2, r3
   2a7f0:	cmp	r3, #0
   2a7f4:	bne	33ed0 <GetDataSlab+0x120a4>
   2a7f8:	ldr	r2, [lr, #4]!
   2a7fc:	mov	r3, #0
   2a800:	str	r3, [ip], #4
   2a804:	sdiv	r3, r4, r2
   2a808:	mls	r3, r2, r3, r4
   2a80c:	cmp	r3, #0
   2a810:	sub	r2, r2, r3
   2a814:	bne	2a7b4 <GetDataSlab+0x8988>
   2a818:	ldr	r3, [r9, r0, lsl #2]
   2a81c:	cmp	r3, #0
   2a820:	beq	2a7c8 <GetDataSlab+0x899c>
   2a824:	ldr	r2, [lr, #-4]
   2a828:	mul	r3, r2, r3
   2a82c:	add	r5, r5, r3, lsl #1
   2a830:	add	r4, r4, r3
   2a834:	b	2a7c8 <GetDataSlab+0x899c>
   2a838:	ldr	r3, [sp, #232]	; 0xe8
   2a83c:	ldr	r6, [sl]
   2a840:	cmp	r3, #1
   2a844:	ldr	r3, [r8]
   2a848:	str	r3, [sp, #16]
   2a84c:	ldr	r3, [sp, #228]	; 0xe4
   2a850:	ldr	fp, [r3]
   2a854:	sub	r3, r6, #1
   2a858:	str	r3, [sp, #56]	; 0x38
   2a85c:	ldr	r3, [sp, #16]
   2a860:	str	fp, [sp, #20]
   2a864:	str	r3, [sp, #136]	; 0x88
   2a868:	ble	3fb94 <GetDataSlab+0x1dd68>
   2a86c:	ldr	r3, [sp, #232]	; 0xe8
   2a870:	add	r7, sl, #4
   2a874:	add	r5, sp, #60	; 0x3c
   2a878:	mov	r4, r8
   2a87c:	mov	lr, #0
   2a880:	str	r9, [sp, #32]
   2a884:	add	r3, sl, r3, lsl #2
   2a888:	str	r3, [sp, #40]	; 0x28
   2a88c:	ldr	r3, [sp, #12]
   2a890:	str	r3, [sp, #24]
   2a894:	ldr	r3, [sp, #228]	; 0xe4
   2a898:	str	r3, [sp, #28]
   2a89c:	ldr	r3, [r7], #4
   2a8a0:	ldr	r0, [r4], #4
   2a8a4:	ldr	r2, [sp, #24]
   2a8a8:	sub	ip, r3, #1
   2a8ac:	mov	r1, r4
   2a8b0:	str	ip, [r5], #4
   2a8b4:	str	r2, [sp, #36]	; 0x24
   2a8b8:	mov	r3, r1
   2a8bc:	ldr	r2, [r1, #-4]!
   2a8c0:	ldr	r3, [r3]
   2a8c4:	cmp	r8, r1
   2a8c8:	mul	ip, r2, ip
   2a8cc:	mul	r0, r3, r0
   2a8d0:	bne	2a8b8 <GetDataSlab+0x8a8c>
   2a8d4:	ldr	r3, [sp, #24]
   2a8d8:	str	ip, [r5, #-4]
   2a8dc:	str	r0, [r3, #4]!
   2a8e0:	str	r3, [sp, #24]
   2a8e4:	ldr	r0, [sp, #28]
   2a8e8:	ldr	r3, [sp, #40]	; 0x28
   2a8ec:	cmp	r3, r7
   2a8f0:	ldr	r3, [sp, #36]	; 0x24
   2a8f4:	ldr	r1, [r3]
   2a8f8:	ldr	r3, [sp, #32]
   2a8fc:	ldr	r2, [r3, #4]!
   2a900:	mla	lr, r2, r1, lr
   2a904:	str	r3, [sp, #32]
   2a908:	ldr	r3, [r0, #4]!
   2a90c:	ldr	r2, [sp, #20]
   2a910:	str	r0, [sp, #28]
   2a914:	mul	r3, r3, r2
   2a918:	str	r3, [sp, #20]
   2a91c:	bne	2a89c <GetDataSlab+0x8a70>
   2a920:	ldr	r3, [sp, #8]
   2a924:	cmp	r6, #1
   2a928:	add	r5, r3, lr
   2a92c:	ldr	r3, [sp, #20]
   2a930:	beq	35458 <GetDataSlab+0x1362c>
   2a934:	cmp	r3, #0
   2a938:	ble	30874 <GetDataSlab+0xea48>
   2a93c:	ldr	r3, [r9]
   2a940:	str	r3, [sp, #8]
   2a944:	mov	r3, #0
   2a948:	str	r3, [sp, #24]
   2a94c:	ldr	r3, [sp, #8]
   2a950:	cmp	r3, #0
   2a954:	addne	r5, r5, r3
   2a958:	addne	lr, lr, r3
   2a95c:	cmp	fp, #0
   2a960:	ble	2a9ac <GetDataSlab+0x8b80>
   2a964:	ldr	r3, [sp, #4]
   2a968:	ldr	r2, [sp, #24]
   2a96c:	add	r1, r3, r2
   2a970:	mov	r2, r1
   2a974:	ldrb	r3, [r5]
   2a978:	ldr	r0, [sp, #228]	; 0xe4
   2a97c:	strb	r3, [r2], #1
   2a980:	sub	r3, r2, r1
   2a984:	ldr	r6, [sl]
   2a988:	ldr	fp, [r0]
   2a98c:	add	r5, r5, r6
   2a990:	add	lr, lr, r6
   2a994:	cmp	fp, r3
   2a998:	bgt	2a974 <GetDataSlab+0x8b48>
   2a99c:	ldr	r3, [r9]
   2a9a0:	str	r3, [sp, #8]
   2a9a4:	ldr	r3, [r8]
   2a9a8:	str	r3, [sp, #16]
   2a9ac:	ldr	r2, [sp, #8]
   2a9b0:	ldr	r3, [sp, #16]
   2a9b4:	sub	r3, r3, r2
   2a9b8:	ldr	r2, [sp, #232]	; 0xe8
   2a9bc:	mls	r3, r6, fp, r3
   2a9c0:	cmp	r2, #1
   2a9c4:	add	lr, lr, r3
   2a9c8:	add	r5, r5, r3
   2a9cc:	ble	33eb4 <GetDataSlab+0x12088>
   2a9d0:	ldr	r3, [sp, #100]	; 0x64
   2a9d4:	ldr	r2, [sp, #228]	; 0xe4
   2a9d8:	add	r3, r3, #1
   2a9dc:	ldr	r1, [r2, #4]
   2a9e0:	str	r3, [sp, #100]	; 0x64
   2a9e4:	sdiv	r2, r3, r1
   2a9e8:	mls	r3, r1, r2, r3
   2a9ec:	cmp	r3, #0
   2a9f0:	bne	33e9c <GetDataSlab+0x12070>
   2a9f4:	add	ip, sp, #100	; 0x64
   2a9f8:	mov	r0, #1
   2a9fc:	ldr	r4, [sp, #12]
   2aa00:	ldr	r3, [sp, #228]	; 0xe4
   2aa04:	add	r7, r3, #4
   2aa08:	b	2aa50 <GetDataSlab+0x8c24>
   2aa0c:	ldr	r3, [r4, #-4]
   2aa10:	ldr	r1, [r9, r0, lsl #2]
   2aa14:	mla	r3, r1, r3, r2
   2aa18:	add	r5, r5, r3
   2aa1c:	add	lr, lr, r3
   2aa20:	ldr	r3, [sp, #232]	; 0xe8
   2aa24:	add	r0, r0, #1
   2aa28:	cmp	r3, r0
   2aa2c:	beq	33eb4 <GetDataSlab+0x12088>
   2aa30:	ldr	r3, [ip]
   2aa34:	ldr	r1, [r7, #4]!
   2aa38:	add	r3, r3, #1
   2aa3c:	sdiv	r2, r3, r1
   2aa40:	str	r3, [ip]
   2aa44:	mls	r3, r1, r2, r3
   2aa48:	cmp	r3, #0
   2aa4c:	bne	33ea0 <GetDataSlab+0x12074>
   2aa50:	ldr	r2, [r4, #4]!
   2aa54:	mov	r3, #0
   2aa58:	str	r3, [ip], #4
   2aa5c:	sdiv	r3, lr, r2
   2aa60:	mls	r3, r2, r3, lr
   2aa64:	cmp	r3, #0
   2aa68:	sub	r2, r2, r3
   2aa6c:	bne	2aa0c <GetDataSlab+0x8be0>
   2aa70:	ldr	r3, [r9, r0, lsl #2]
   2aa74:	cmp	r3, #0
   2aa78:	beq	2aa20 <GetDataSlab+0x8bf4>
   2aa7c:	ldr	r2, [r4, #-4]
   2aa80:	mul	r3, r2, r3
   2aa84:	add	r5, r5, r3
   2aa88:	add	lr, lr, r3
   2aa8c:	b	2aa20 <GetDataSlab+0x8bf4>
   2aa90:	ldr	r3, [sp, #232]	; 0xe8
   2aa94:	ldr	r6, [sl]
   2aa98:	cmp	r3, #1
   2aa9c:	ldr	r3, [r8]
   2aaa0:	str	r3, [sp, #16]
   2aaa4:	ldr	r3, [sp, #228]	; 0xe4
   2aaa8:	ldr	fp, [r3]
   2aaac:	sub	r3, r6, #1
   2aab0:	str	r3, [sp, #56]	; 0x38
   2aab4:	ldr	r3, [sp, #16]
   2aab8:	str	fp, [sp, #20]
   2aabc:	str	r3, [sp, #136]	; 0x88
   2aac0:	ble	3fa04 <GetDataSlab+0x1dbd8>
   2aac4:	ldr	r3, [sp, #232]	; 0xe8
   2aac8:	add	r7, sl, #4
   2aacc:	add	r5, sp, #60	; 0x3c
   2aad0:	mov	r4, r8
   2aad4:	mov	lr, #0
   2aad8:	str	r9, [sp, #32]
   2aadc:	add	r3, sl, r3, lsl #2
   2aae0:	str	r3, [sp, #40]	; 0x28
   2aae4:	ldr	r3, [sp, #12]
   2aae8:	str	r3, [sp, #24]
   2aaec:	ldr	r3, [sp, #228]	; 0xe4
   2aaf0:	str	r3, [sp, #28]
   2aaf4:	ldr	r3, [r7], #4
   2aaf8:	ldr	r0, [r4], #4
   2aafc:	ldr	r2, [sp, #24]
   2ab00:	sub	ip, r3, #1
   2ab04:	mov	r1, r4
   2ab08:	str	ip, [r5], #4
   2ab0c:	str	r2, [sp, #36]	; 0x24
   2ab10:	mov	r3, r1
   2ab14:	ldr	r2, [r1, #-4]!
   2ab18:	ldr	r3, [r3]
   2ab1c:	cmp	r1, r8
   2ab20:	mul	ip, r2, ip
   2ab24:	mul	r0, r3, r0
   2ab28:	bne	2ab10 <GetDataSlab+0x8ce4>
   2ab2c:	ldr	r3, [sp, #24]
   2ab30:	str	ip, [r5, #-4]
   2ab34:	str	r0, [r3, #4]!
   2ab38:	str	r3, [sp, #24]
   2ab3c:	ldr	r0, [sp, #28]
   2ab40:	ldr	r3, [sp, #40]	; 0x28
   2ab44:	cmp	r3, r7
   2ab48:	ldr	r3, [sp, #36]	; 0x24
   2ab4c:	ldr	r1, [r3]
   2ab50:	ldr	r3, [sp, #32]
   2ab54:	ldr	r2, [r3, #4]!
   2ab58:	mla	lr, r2, r1, lr
   2ab5c:	str	r3, [sp, #32]
   2ab60:	ldr	r3, [r0, #4]!
   2ab64:	ldr	r2, [sp, #20]
   2ab68:	str	r0, [sp, #28]
   2ab6c:	mul	r3, r3, r2
   2ab70:	str	r3, [sp, #20]
   2ab74:	bne	2aaf4 <GetDataSlab+0x8cc8>
   2ab78:	ldr	r3, [sp, #8]
   2ab7c:	cmp	r6, #1
   2ab80:	add	r5, r3, lr
   2ab84:	ldr	r3, [sp, #20]
   2ab88:	beq	39518 <GetDataSlab+0x176ec>
   2ab8c:	cmp	r3, #0
   2ab90:	ble	30874 <GetDataSlab+0xea48>
   2ab94:	ldr	r3, [r9]
   2ab98:	str	r3, [sp, #8]
   2ab9c:	mov	r3, #0
   2aba0:	str	r3, [sp, #24]
   2aba4:	ldr	r3, [sp, #8]
   2aba8:	cmp	r3, #0
   2abac:	addne	r5, r5, r3
   2abb0:	addne	lr, lr, r3
   2abb4:	cmp	fp, #0
   2abb8:	ble	2ac04 <GetDataSlab+0x8dd8>
   2abbc:	ldr	r3, [sp, #4]
   2abc0:	ldr	r2, [sp, #24]
   2abc4:	add	r1, r3, r2
   2abc8:	mov	r2, r1
   2abcc:	ldrsb	r3, [r5]
   2abd0:	ldr	r0, [sp, #228]	; 0xe4
   2abd4:	strb	r3, [r2], #1
   2abd8:	sub	r3, r2, r1
   2abdc:	ldr	r6, [sl]
   2abe0:	ldr	fp, [r0]
   2abe4:	add	r5, r5, r6
   2abe8:	add	lr, lr, r6
   2abec:	cmp	fp, r3
   2abf0:	bgt	2abcc <GetDataSlab+0x8da0>
   2abf4:	ldr	r3, [r9]
   2abf8:	str	r3, [sp, #8]
   2abfc:	ldr	r3, [r8]
   2ac00:	str	r3, [sp, #16]
   2ac04:	ldr	r2, [sp, #8]
   2ac08:	ldr	r3, [sp, #16]
   2ac0c:	sub	r3, r3, r2
   2ac10:	ldr	r2, [sp, #232]	; 0xe8
   2ac14:	mls	r3, r6, fp, r3
   2ac18:	cmp	r2, #1
   2ac1c:	add	lr, lr, r3
   2ac20:	add	r5, r5, r3
   2ac24:	ble	33e84 <GetDataSlab+0x12058>
   2ac28:	ldr	r3, [sp, #100]	; 0x64
   2ac2c:	ldr	r2, [sp, #228]	; 0xe4
   2ac30:	add	r3, r3, #1
   2ac34:	ldr	r1, [r2, #4]
   2ac38:	str	r3, [sp, #100]	; 0x64
   2ac3c:	sdiv	r2, r3, r1
   2ac40:	mls	r3, r1, r2, r3
   2ac44:	cmp	r3, #0
   2ac48:	bne	33e6c <GetDataSlab+0x12040>
   2ac4c:	add	ip, sp, #100	; 0x64
   2ac50:	mov	r0, #1
   2ac54:	ldr	r4, [sp, #12]
   2ac58:	ldr	r3, [sp, #228]	; 0xe4
   2ac5c:	add	r7, r3, #4
   2ac60:	b	2aca8 <GetDataSlab+0x8e7c>
   2ac64:	ldr	r3, [r4, #-4]
   2ac68:	ldr	r1, [r9, r0, lsl #2]
   2ac6c:	mla	r3, r1, r3, r2
   2ac70:	add	r5, r5, r3
   2ac74:	add	lr, lr, r3
   2ac78:	ldr	r3, [sp, #232]	; 0xe8
   2ac7c:	add	r0, r0, #1
   2ac80:	cmp	r3, r0
   2ac84:	beq	33e84 <GetDataSlab+0x12058>
   2ac88:	ldr	r3, [ip]
   2ac8c:	ldr	r1, [r7, #4]!
   2ac90:	add	r3, r3, #1
   2ac94:	sdiv	r2, r3, r1
   2ac98:	str	r3, [ip]
   2ac9c:	mls	r3, r1, r2, r3
   2aca0:	cmp	r3, #0
   2aca4:	bne	33e70 <GetDataSlab+0x12044>
   2aca8:	ldr	r2, [r4, #4]!
   2acac:	mov	r3, #0
   2acb0:	str	r3, [ip], #4
   2acb4:	sdiv	r3, lr, r2
   2acb8:	mls	r3, r2, r3, lr
   2acbc:	cmp	r3, #0
   2acc0:	sub	r2, r2, r3
   2acc4:	bne	2ac64 <GetDataSlab+0x8e38>
   2acc8:	ldr	r3, [r9, r0, lsl #2]
   2accc:	cmp	r3, #0
   2acd0:	beq	2ac78 <GetDataSlab+0x8e4c>
   2acd4:	ldr	r2, [r4, #-4]
   2acd8:	mul	r3, r2, r3
   2acdc:	add	r5, r5, r3
   2ace0:	add	lr, lr, r3
   2ace4:	b	2ac78 <GetDataSlab+0x8e4c>
   2ace8:	ldr	r3, [sl]
   2acec:	str	r3, [sp, #28]
   2acf0:	ldr	r3, [sp, #232]	; 0xe8
   2acf4:	cmp	r3, #1
   2acf8:	ldr	r3, [r8]
   2acfc:	str	r3, [sp, #36]	; 0x24
   2ad00:	ldr	r3, [sp, #228]	; 0xe4
   2ad04:	ldr	r3, [r3]
   2ad08:	str	r3, [sp, #20]
   2ad0c:	ldr	r3, [sp, #28]
   2ad10:	sub	r3, r3, #1
   2ad14:	str	r3, [sp, #56]	; 0x38
   2ad18:	ldr	r3, [sp, #36]	; 0x24
   2ad1c:	str	r3, [sp, #136]	; 0x88
   2ad20:	ble	3fb84 <GetDataSlab+0x1dd58>
   2ad24:	add	r6, sl, #4
   2ad28:	ldr	fp, [sp, #228]	; 0xe4
   2ad2c:	add	lr, sp, #60	; 0x3c
   2ad30:	mov	r5, r8
   2ad34:	mov	r4, #0
   2ad38:	str	r9, [sp, #24]
   2ad3c:	ldr	r3, [sp, #232]	; 0xe8
   2ad40:	add	r3, sl, r3, lsl #2
   2ad44:	ldr	sl, [sp, #12]
   2ad48:	str	r3, [sp, #32]
   2ad4c:	ldr	r3, [sp, #20]
   2ad50:	str	r3, [sp, #16]
   2ad54:	ldr	r3, [r6], #4
   2ad58:	mov	r7, sl
   2ad5c:	ldr	r0, [r5], #4
   2ad60:	sub	ip, r3, #1
   2ad64:	mov	r1, r5
   2ad68:	str	ip, [lr], #4
   2ad6c:	mov	r3, r1
   2ad70:	ldr	r2, [r1, #-4]!
   2ad74:	ldr	r3, [r3]
   2ad78:	cmp	r8, r1
   2ad7c:	mul	ip, r2, ip
   2ad80:	mul	r0, r3, r0
   2ad84:	bne	2ad6c <GetDataSlab+0x8f40>
   2ad88:	ldr	r3, [sp, #32]
   2ad8c:	str	r0, [sl, #4]!
   2ad90:	ldr	r1, [r7]
   2ad94:	str	ip, [lr, #-4]
   2ad98:	cmp	r6, r3
   2ad9c:	ldr	r3, [sp, #24]
   2ada0:	ldr	r2, [r3, #4]!
   2ada4:	mla	r4, r2, r1, r4
   2ada8:	str	r3, [sp, #24]
   2adac:	ldr	r3, [fp, #4]!
   2adb0:	ldr	r2, [sp, #16]
   2adb4:	mul	r3, r3, r2
   2adb8:	str	r3, [sp, #16]
   2adbc:	bne	2ad54 <GetDataSlab+0x8f28>
   2adc0:	ldr	r3, [sp, #28]
   2adc4:	cmp	r3, #1
   2adc8:	ldr	r3, [sp, #8]
   2adcc:	add	r6, r3, r4, lsl #3
   2add0:	ldr	r3, [sp, #16]
   2add4:	beq	358d0 <GetDataSlab+0x13aa4>
   2add8:	cmp	r3, #0
   2addc:	ble	30874 <GetDataSlab+0xea48>
   2ade0:	ldr	r3, [r9]
   2ade4:	mov	fp, #0
   2ade8:	mov	r8, fp
   2adec:	ldr	r2, [sp, #20]
   2adf0:	ldr	r1, [sp, #20]
   2adf4:	str	r3, [sp, #8]
   2adf8:	ldr	r3, [sp, #28]
   2adfc:	lsl	r2, r2, #2
   2ae00:	str	r2, [sp, #32]
   2ae04:	lsl	sl, r3, #3
   2ae08:	ldr	r3, [sp, #20]
   2ae0c:	ldr	r2, [sp, #28]
   2ae10:	sub	r3, r3, #1
   2ae14:	mul	r3, r2, r3
   2ae18:	ldr	r2, [sp, #32]
   2ae1c:	str	r3, [sp, #44]	; 0x2c
   2ae20:	ldr	r3, [sp, #20]
   2ae24:	mul	r3, r3, sl
   2ae28:	str	r3, [sp, #40]	; 0x28
   2ae2c:	ldr	r3, [sp, #4]
   2ae30:	add	r7, r3, r2
   2ae34:	ldr	r2, [sp, #8]
   2ae38:	ldr	r3, [sp, #36]	; 0x24
   2ae3c:	sub	r3, r3, r2
   2ae40:	lsl	r2, r2, #3
   2ae44:	str	r2, [sp, #48]	; 0x30
   2ae48:	ldr	r2, [sp, #28]
   2ae4c:	mls	r3, r1, r2, r3
   2ae50:	str	r3, [sp, #24]
   2ae54:	lsl	r3, r3, #3
   2ae58:	str	r3, [sp, #36]	; 0x24
   2ae5c:	ldr	r3, [sp, #8]
   2ae60:	cmp	r3, #0
   2ae64:	beq	2ae78 <GetDataSlab+0x904c>
   2ae68:	ldr	r3, [sp, #48]	; 0x30
   2ae6c:	add	r6, r6, r3
   2ae70:	ldr	r3, [sp, #8]
   2ae74:	add	r4, r4, r3
   2ae78:	ldr	r3, [sp, #20]
   2ae7c:	cmp	r3, #0
   2ae80:	ble	2aec0 <GetDataSlab+0x9094>
   2ae84:	ldr	r3, [sp, #4]
   2ae88:	mov	r2, r6
   2ae8c:	add	r3, r3, fp, lsl #2
   2ae90:	vldr	d7, [r2]
   2ae94:	add	r2, r2, sl
   2ae98:	vcvt.f32.f64	s15, d7
   2ae9c:	vstmia	r3!, {s15}
   2aea0:	cmp	r3, r7
   2aea4:	bne	2ae90 <GetDataSlab+0x9064>
   2aea8:	ldr	r3, [sp, #28]
   2aeac:	ldr	r2, [sp, #40]	; 0x28
   2aeb0:	add	r3, r3, r4
   2aeb4:	add	r6, r6, r2
   2aeb8:	ldr	r2, [sp, #44]	; 0x2c
   2aebc:	add	r4, r3, r2
   2aec0:	ldr	r3, [sp, #232]	; 0xe8
   2aec4:	cmp	r3, #1
   2aec8:	ldr	r3, [sp, #24]
   2aecc:	add	r4, r4, r3
   2aed0:	ldr	r3, [sp, #36]	; 0x24
   2aed4:	add	r6, r6, r3
   2aed8:	ble	33e4c <GetDataSlab+0x12020>
   2aedc:	ldr	r3, [sp, #100]	; 0x64
   2aee0:	ldr	r2, [sp, #228]	; 0xe4
   2aee4:	add	r3, r3, #1
   2aee8:	ldr	r1, [r2, #4]
   2aeec:	str	r3, [sp, #100]	; 0x64
   2aef0:	sdiv	r2, r3, r1
   2aef4:	mls	r3, r1, r2, r3
   2aef8:	cmp	r3, #0
   2aefc:	bne	33e34 <GetDataSlab+0x12008>
   2af00:	add	ip, sp, #100	; 0x64
   2af04:	mov	r0, #1
   2af08:	ldr	lr, [sp, #12]
   2af0c:	ldr	r3, [sp, #228]	; 0xe4
   2af10:	add	r5, r3, #4
   2af14:	b	2af5c <GetDataSlab+0x9130>
   2af18:	ldr	r3, [lr, #-4]
   2af1c:	ldr	r1, [r9, r0, lsl #2]
   2af20:	mla	r3, r1, r3, r2
   2af24:	add	r6, r6, r3, lsl #3
   2af28:	add	r4, r4, r3
   2af2c:	ldr	r3, [sp, #232]	; 0xe8
   2af30:	add	r0, r0, #1
   2af34:	cmp	r3, r0
   2af38:	beq	33e4c <GetDataSlab+0x12020>
   2af3c:	ldr	r3, [ip]
   2af40:	ldr	r1, [r5, #4]!
   2af44:	add	r3, r3, #1
   2af48:	sdiv	r2, r3, r1
   2af4c:	str	r3, [ip]
   2af50:	mls	r3, r1, r2, r3
   2af54:	cmp	r3, #0
   2af58:	bne	33e38 <GetDataSlab+0x1200c>
   2af5c:	ldr	r2, [lr, #4]!
   2af60:	str	r8, [ip], #4
   2af64:	sdiv	r3, r4, r2
   2af68:	mls	r3, r2, r3, r4
   2af6c:	cmp	r3, #0
   2af70:	sub	r2, r2, r3
   2af74:	bne	2af18 <GetDataSlab+0x90ec>
   2af78:	ldr	r3, [r9, r0, lsl #2]
   2af7c:	cmp	r3, #0
   2af80:	beq	2af2c <GetDataSlab+0x9100>
   2af84:	ldr	r2, [lr, #-4]
   2af88:	mul	r3, r2, r3
   2af8c:	add	r6, r6, r3, lsl #3
   2af90:	add	r4, r4, r3
   2af94:	b	2af2c <GetDataSlab+0x9100>
   2af98:	ldr	r3, [sl]
   2af9c:	str	r3, [sp, #28]
   2afa0:	ldr	r3, [sp, #232]	; 0xe8
   2afa4:	cmp	r3, #1
   2afa8:	ldr	r3, [r8]
   2afac:	str	r3, [sp, #36]	; 0x24
   2afb0:	ldr	r3, [sp, #228]	; 0xe4
   2afb4:	ldr	r3, [r3]
   2afb8:	str	r3, [sp, #20]
   2afbc:	ldr	r3, [sp, #28]
   2afc0:	sub	r3, r3, #1
   2afc4:	str	r3, [sp, #56]	; 0x38
   2afc8:	ldr	r3, [sp, #36]	; 0x24
   2afcc:	str	r3, [sp, #136]	; 0x88
   2afd0:	ble	3fb74 <GetDataSlab+0x1dd48>
   2afd4:	add	r6, sl, #4
   2afd8:	ldr	fp, [sp, #228]	; 0xe4
   2afdc:	add	lr, sp, #60	; 0x3c
   2afe0:	mov	r5, r8
   2afe4:	mov	r4, #0
   2afe8:	str	r9, [sp, #24]
   2afec:	ldr	r3, [sp, #232]	; 0xe8
   2aff0:	add	r3, sl, r3, lsl #2
   2aff4:	ldr	sl, [sp, #12]
   2aff8:	str	r3, [sp, #32]
   2affc:	ldr	r3, [sp, #20]
   2b000:	str	r3, [sp, #16]
   2b004:	ldr	r3, [r6], #4
   2b008:	mov	r7, sl
   2b00c:	ldr	r0, [r5], #4
   2b010:	sub	ip, r3, #1
   2b014:	mov	r1, r5
   2b018:	str	ip, [lr], #4
   2b01c:	mov	r3, r1
   2b020:	ldr	r2, [r1, #-4]!
   2b024:	ldr	r3, [r3]
   2b028:	cmp	r1, r8
   2b02c:	mul	ip, r2, ip
   2b030:	mul	r0, r3, r0
   2b034:	bne	2b01c <GetDataSlab+0x91f0>
   2b038:	ldr	r3, [sp, #32]
   2b03c:	str	r0, [sl, #4]!
   2b040:	ldr	r1, [r7]
   2b044:	str	ip, [lr, #-4]
   2b048:	cmp	r6, r3
   2b04c:	ldr	r3, [sp, #24]
   2b050:	ldr	r2, [r3, #4]!
   2b054:	mla	r4, r2, r1, r4
   2b058:	str	r3, [sp, #24]
   2b05c:	ldr	r3, [fp, #4]!
   2b060:	ldr	r2, [sp, #16]
   2b064:	mul	r3, r3, r2
   2b068:	str	r3, [sp, #16]
   2b06c:	bne	2b004 <GetDataSlab+0x91d8>
   2b070:	ldr	r3, [sp, #28]
   2b074:	cmp	r3, #1
   2b078:	ldr	r3, [sp, #8]
   2b07c:	add	r6, r3, r4, lsl #2
   2b080:	ldr	r3, [sp, #16]
   2b084:	beq	35a54 <GetDataSlab+0x13c28>
   2b088:	cmp	r3, #0
   2b08c:	ble	30874 <GetDataSlab+0xea48>
   2b090:	ldr	r3, [r9]
   2b094:	mov	fp, #0
   2b098:	mov	r8, fp
   2b09c:	ldr	r2, [sp, #20]
   2b0a0:	ldr	r1, [sp, #20]
   2b0a4:	str	r3, [sp, #8]
   2b0a8:	ldr	r3, [sp, #28]
   2b0ac:	lsl	r2, r2, #2
   2b0b0:	str	r2, [sp, #32]
   2b0b4:	lsl	sl, r3, #2
   2b0b8:	ldr	r3, [sp, #20]
   2b0bc:	ldr	r2, [sp, #28]
   2b0c0:	sub	r3, r3, #1
   2b0c4:	mul	r3, r2, r3
   2b0c8:	ldr	r2, [sp, #32]
   2b0cc:	str	r3, [sp, #40]	; 0x28
   2b0d0:	ldr	r3, [sp, #20]
   2b0d4:	mul	r3, r3, sl
   2b0d8:	str	r3, [sp, #44]	; 0x2c
   2b0dc:	ldr	r3, [sp, #4]
   2b0e0:	add	r7, r3, r2
   2b0e4:	ldr	r2, [sp, #8]
   2b0e8:	ldr	r3, [sp, #36]	; 0x24
   2b0ec:	sub	r3, r3, r2
   2b0f0:	lsl	r2, r2, #2
   2b0f4:	str	r2, [sp, #48]	; 0x30
   2b0f8:	ldr	r2, [sp, #28]
   2b0fc:	mls	r3, r1, r2, r3
   2b100:	str	r3, [sp, #24]
   2b104:	lsl	r3, r3, #2
   2b108:	str	r3, [sp, #36]	; 0x24
   2b10c:	ldr	r3, [sp, #8]
   2b110:	cmp	r3, #0
   2b114:	beq	2b128 <GetDataSlab+0x92fc>
   2b118:	ldr	r3, [sp, #48]	; 0x30
   2b11c:	add	r6, r6, r3
   2b120:	ldr	r3, [sp, #8]
   2b124:	add	r4, r4, r3
   2b128:	ldr	r3, [sp, #20]
   2b12c:	cmp	r3, #0
   2b130:	ble	2b16c <GetDataSlab+0x9340>
   2b134:	ldr	r3, [sp, #4]
   2b138:	mov	r1, r6
   2b13c:	add	r2, r3, fp, lsl #2
   2b140:	ldr	r3, [r1]
   2b144:	add	r1, r1, sl
   2b148:	str	r3, [r2], #4
   2b14c:	cmp	r2, r7
   2b150:	bne	2b140 <GetDataSlab+0x9314>
   2b154:	ldr	r3, [sp, #28]
   2b158:	ldr	r2, [sp, #44]	; 0x2c
   2b15c:	add	r3, r3, r4
   2b160:	add	r6, r6, r2
   2b164:	ldr	r2, [sp, #40]	; 0x28
   2b168:	add	r4, r2, r3
   2b16c:	ldr	r3, [sp, #232]	; 0xe8
   2b170:	cmp	r3, #1
   2b174:	ldr	r3, [sp, #24]
   2b178:	add	r4, r4, r3
   2b17c:	ldr	r3, [sp, #36]	; 0x24
   2b180:	add	r6, r6, r3
   2b184:	ble	33e14 <GetDataSlab+0x11fe8>
   2b188:	ldr	r3, [sp, #100]	; 0x64
   2b18c:	ldr	r2, [sp, #228]	; 0xe4
   2b190:	add	r3, r3, #1
   2b194:	ldr	r1, [r2, #4]
   2b198:	str	r3, [sp, #100]	; 0x64
   2b19c:	sdiv	r2, r3, r1
   2b1a0:	mls	r3, r1, r2, r3
   2b1a4:	cmp	r3, #0
   2b1a8:	bne	33dfc <GetDataSlab+0x11fd0>
   2b1ac:	add	ip, sp, #100	; 0x64
   2b1b0:	mov	r0, #1
   2b1b4:	ldr	lr, [sp, #12]
   2b1b8:	ldr	r3, [sp, #228]	; 0xe4
   2b1bc:	add	r5, r3, #4
   2b1c0:	b	2b208 <GetDataSlab+0x93dc>
   2b1c4:	ldr	r3, [lr, #-4]
   2b1c8:	ldr	r1, [r9, r0, lsl #2]
   2b1cc:	mla	r3, r1, r3, r2
   2b1d0:	add	r6, r6, r3, lsl #2
   2b1d4:	add	r4, r4, r3
   2b1d8:	ldr	r3, [sp, #232]	; 0xe8
   2b1dc:	add	r0, r0, #1
   2b1e0:	cmp	r3, r0
   2b1e4:	beq	33e14 <GetDataSlab+0x11fe8>
   2b1e8:	ldr	r3, [ip]
   2b1ec:	ldr	r1, [r5, #4]!
   2b1f0:	add	r3, r3, #1
   2b1f4:	sdiv	r2, r3, r1
   2b1f8:	str	r3, [ip]
   2b1fc:	mls	r3, r1, r2, r3
   2b200:	cmp	r3, #0
   2b204:	bne	33e00 <GetDataSlab+0x11fd4>
   2b208:	ldr	r2, [lr, #4]!
   2b20c:	str	r8, [ip], #4
   2b210:	sdiv	r3, r4, r2
   2b214:	mls	r3, r2, r3, r4
   2b218:	cmp	r3, #0
   2b21c:	sub	r2, r2, r3
   2b220:	bne	2b1c4 <GetDataSlab+0x9398>
   2b224:	ldr	r3, [r9, r0, lsl #2]
   2b228:	cmp	r3, #0
   2b22c:	beq	2b1d8 <GetDataSlab+0x93ac>
   2b230:	ldr	r2, [lr, #-4]
   2b234:	mul	r3, r2, r3
   2b238:	add	r6, r6, r3, lsl #2
   2b23c:	add	r4, r4, r3
   2b240:	b	2b1d8 <GetDataSlab+0x93ac>
   2b244:	ldr	r3, [sl]
   2b248:	str	r3, [sp, #28]
   2b24c:	ldr	r3, [sp, #232]	; 0xe8
   2b250:	cmp	r3, #1
   2b254:	ldr	r3, [r8]
   2b258:	str	r3, [sp, #36]	; 0x24
   2b25c:	ldr	r3, [sp, #228]	; 0xe4
   2b260:	ldr	r3, [r3]
   2b264:	str	r3, [sp, #20]
   2b268:	ldr	r3, [sp, #28]
   2b26c:	sub	r3, r3, #1
   2b270:	str	r3, [sp, #56]	; 0x38
   2b274:	ldr	r3, [sp, #36]	; 0x24
   2b278:	str	r3, [sp, #136]	; 0x88
   2b27c:	ble	3fb5c <GetDataSlab+0x1dd30>
   2b280:	add	r6, sl, #4
   2b284:	ldr	fp, [sp, #228]	; 0xe4
   2b288:	add	lr, sp, #60	; 0x3c
   2b28c:	mov	r5, r8
   2b290:	mov	r4, #0
   2b294:	str	r9, [sp, #24]
   2b298:	ldr	r3, [sp, #232]	; 0xe8
   2b29c:	add	r3, sl, r3, lsl #2
   2b2a0:	ldr	sl, [sp, #12]
   2b2a4:	str	r3, [sp, #32]
   2b2a8:	ldr	r3, [sp, #20]
   2b2ac:	str	r3, [sp, #16]
   2b2b0:	ldr	r3, [r6], #4
   2b2b4:	mov	r7, sl
   2b2b8:	ldr	r0, [r5], #4
   2b2bc:	sub	ip, r3, #1
   2b2c0:	mov	r1, r5
   2b2c4:	str	ip, [lr], #4
   2b2c8:	mov	r3, r1
   2b2cc:	ldr	r2, [r1, #-4]!
   2b2d0:	ldr	r3, [r3]
   2b2d4:	cmp	r1, r8
   2b2d8:	mul	ip, r2, ip
   2b2dc:	mul	r0, r3, r0
   2b2e0:	bne	2b2c8 <GetDataSlab+0x949c>
   2b2e4:	ldr	r3, [sp, #32]
   2b2e8:	str	r0, [sl, #4]!
   2b2ec:	ldr	r1, [r7]
   2b2f0:	str	ip, [lr, #-4]
   2b2f4:	cmp	r6, r3
   2b2f8:	ldr	r3, [sp, #24]
   2b2fc:	ldr	r2, [r3, #4]!
   2b300:	mla	r4, r2, r1, r4
   2b304:	str	r3, [sp, #24]
   2b308:	ldr	r3, [fp, #4]!
   2b30c:	ldr	r2, [sp, #16]
   2b310:	mul	r3, r3, r2
   2b314:	str	r3, [sp, #16]
   2b318:	bne	2b2b0 <GetDataSlab+0x9484>
   2b31c:	ldr	r3, [sp, #28]
   2b320:	cmp	r3, #1
   2b324:	ldr	r3, [sp, #8]
   2b328:	add	r6, r3, r4, lsl #2
   2b32c:	ldr	r3, [sp, #16]
   2b330:	beq	35748 <GetDataSlab+0x1391c>
   2b334:	cmp	r3, #0
   2b338:	ble	30874 <GetDataSlab+0xea48>
   2b33c:	ldr	r3, [r9]
   2b340:	mov	fp, #0
   2b344:	mov	sl, fp
   2b348:	ldr	r2, [sp, #20]
   2b34c:	ldr	r1, [sp, #20]
   2b350:	str	r3, [sp, #8]
   2b354:	ldr	r3, [sp, #28]
   2b358:	lsl	r2, r2, #2
   2b35c:	str	r2, [sp, #32]
   2b360:	lsl	r7, r3, #2
   2b364:	ldr	r3, [sp, #20]
   2b368:	ldr	r2, [sp, #28]
   2b36c:	sub	r3, r3, #1
   2b370:	mul	r3, r2, r3
   2b374:	ldr	r2, [sp, #32]
   2b378:	str	r3, [sp, #44]	; 0x2c
   2b37c:	ldr	r3, [sp, #20]
   2b380:	mul	r3, r3, r7
   2b384:	str	r3, [sp, #40]	; 0x28
   2b388:	ldr	r3, [sp, #4]
   2b38c:	add	r8, r3, r2
   2b390:	ldr	r2, [sp, #8]
   2b394:	ldr	r3, [sp, #36]	; 0x24
   2b398:	sub	r3, r3, r2
   2b39c:	lsl	r2, r2, #2
   2b3a0:	str	r2, [sp, #48]	; 0x30
   2b3a4:	ldr	r2, [sp, #28]
   2b3a8:	mls	r3, r1, r2, r3
   2b3ac:	str	r3, [sp, #24]
   2b3b0:	lsl	r3, r3, #2
   2b3b4:	str	r3, [sp, #36]	; 0x24
   2b3b8:	ldr	r3, [sp, #8]
   2b3bc:	cmp	r3, #0
   2b3c0:	beq	2b3d4 <GetDataSlab+0x95a8>
   2b3c4:	ldr	r3, [sp, #48]	; 0x30
   2b3c8:	add	r6, r6, r3
   2b3cc:	ldr	r3, [sp, #8]
   2b3d0:	add	r4, r4, r3
   2b3d4:	ldr	r3, [sp, #20]
   2b3d8:	cmp	r3, #0
   2b3dc:	ble	2b41c <GetDataSlab+0x95f0>
   2b3e0:	ldr	r3, [sp, #4]
   2b3e4:	mov	r1, r6
   2b3e8:	add	r2, r3, fp, lsl #2
   2b3ec:	ldr	r3, [r1], r7
   2b3f0:	vmov	s15, r3
   2b3f4:	vcvt.f32.u32	s15, s15
   2b3f8:	vstmia	r2!, {s15}
   2b3fc:	cmp	r8, r2
   2b400:	bne	2b3ec <GetDataSlab+0x95c0>
   2b404:	ldr	r3, [sp, #28]
   2b408:	ldr	r2, [sp, #40]	; 0x28
   2b40c:	add	r3, r3, r4
   2b410:	add	r6, r6, r2
   2b414:	ldr	r2, [sp, #44]	; 0x2c
   2b418:	add	r4, r3, r2
   2b41c:	ldr	r3, [sp, #232]	; 0xe8
   2b420:	cmp	r3, #1
   2b424:	ldr	r3, [sp, #24]
   2b428:	add	r4, r4, r3
   2b42c:	ldr	r3, [sp, #36]	; 0x24
   2b430:	add	r6, r6, r3
   2b434:	ble	33ddc <GetDataSlab+0x11fb0>
   2b438:	ldr	r3, [sp, #100]	; 0x64
   2b43c:	ldr	r2, [sp, #228]	; 0xe4
   2b440:	add	r3, r3, #1
   2b444:	ldr	r1, [r2, #4]
   2b448:	str	r3, [sp, #100]	; 0x64
   2b44c:	sdiv	r2, r3, r1
   2b450:	mls	r3, r1, r2, r3
   2b454:	cmp	r3, #0
   2b458:	bne	33dc4 <GetDataSlab+0x11f98>
   2b45c:	add	ip, sp, #100	; 0x64
   2b460:	mov	r0, #1
   2b464:	ldr	lr, [sp, #12]
   2b468:	ldr	r3, [sp, #228]	; 0xe4
   2b46c:	add	r5, r3, #4
   2b470:	b	2b4b8 <GetDataSlab+0x968c>
   2b474:	ldr	r3, [lr, #-4]
   2b478:	ldr	r1, [r9, r0, lsl #2]
   2b47c:	mla	r3, r1, r3, r2
   2b480:	add	r6, r6, r3, lsl #2
   2b484:	add	r4, r4, r3
   2b488:	ldr	r3, [sp, #232]	; 0xe8
   2b48c:	add	r0, r0, #1
   2b490:	cmp	r3, r0
   2b494:	beq	33ddc <GetDataSlab+0x11fb0>
   2b498:	ldr	r3, [ip]
   2b49c:	ldr	r1, [r5, #4]!
   2b4a0:	add	r3, r3, #1
   2b4a4:	sdiv	r2, r3, r1
   2b4a8:	str	r3, [ip]
   2b4ac:	mls	r3, r1, r2, r3
   2b4b0:	cmp	r3, #0
   2b4b4:	bne	33dc8 <GetDataSlab+0x11f9c>
   2b4b8:	ldr	r2, [lr, #4]!
   2b4bc:	str	sl, [ip], #4
   2b4c0:	sdiv	r3, r4, r2
   2b4c4:	mls	r3, r2, r3, r4
   2b4c8:	cmp	r3, #0
   2b4cc:	sub	r2, r2, r3
   2b4d0:	bne	2b474 <GetDataSlab+0x9648>
   2b4d4:	ldr	r3, [r9, r0, lsl #2]
   2b4d8:	cmp	r3, #0
   2b4dc:	beq	2b488 <GetDataSlab+0x965c>
   2b4e0:	ldr	r2, [lr, #-4]
   2b4e4:	mul	r3, r2, r3
   2b4e8:	add	r6, r6, r3, lsl #2
   2b4ec:	add	r4, r4, r3
   2b4f0:	b	2b488 <GetDataSlab+0x965c>
   2b4f4:	ldr	r3, [sl]
   2b4f8:	str	r3, [sp, #28]
   2b4fc:	ldr	r3, [sp, #232]	; 0xe8
   2b500:	cmp	r3, #1
   2b504:	ldr	r3, [r8]
   2b508:	str	r3, [sp, #36]	; 0x24
   2b50c:	ldr	r3, [sp, #228]	; 0xe4
   2b510:	ldr	r3, [r3]
   2b514:	str	r3, [sp, #20]
   2b518:	ldr	r3, [sp, #28]
   2b51c:	sub	r3, r3, #1
   2b520:	str	r3, [sp, #56]	; 0x38
   2b524:	ldr	r3, [sp, #36]	; 0x24
   2b528:	str	r3, [sp, #136]	; 0x88
   2b52c:	ble	3fa34 <GetDataSlab+0x1dc08>
   2b530:	add	r6, sl, #4
   2b534:	ldr	fp, [sp, #228]	; 0xe4
   2b538:	add	lr, sp, #60	; 0x3c
   2b53c:	mov	r5, r8
   2b540:	mov	r4, #0
   2b544:	str	r9, [sp, #24]
   2b548:	ldr	r3, [sp, #232]	; 0xe8
   2b54c:	add	r3, sl, r3, lsl #2
   2b550:	ldr	sl, [sp, #12]
   2b554:	str	r3, [sp, #32]
   2b558:	ldr	r3, [sp, #20]
   2b55c:	str	r3, [sp, #16]
   2b560:	ldr	r3, [r6], #4
   2b564:	mov	r7, sl
   2b568:	ldr	r0, [r5], #4
   2b56c:	sub	ip, r3, #1
   2b570:	mov	r1, r5
   2b574:	str	ip, [lr], #4
   2b578:	mov	r3, r1
   2b57c:	ldr	r2, [r1, #-4]!
   2b580:	ldr	r3, [r3]
   2b584:	cmp	r1, r8
   2b588:	mul	ip, r2, ip
   2b58c:	mul	r0, r3, r0
   2b590:	bne	2b578 <GetDataSlab+0x974c>
   2b594:	ldr	r3, [sp, #32]
   2b598:	str	r0, [sl, #4]!
   2b59c:	ldr	r1, [r7]
   2b5a0:	str	ip, [lr, #-4]
   2b5a4:	cmp	r3, r6
   2b5a8:	ldr	r3, [sp, #24]
   2b5ac:	ldr	r2, [r3, #4]!
   2b5b0:	mla	r4, r2, r1, r4
   2b5b4:	str	r3, [sp, #24]
   2b5b8:	ldr	r3, [fp, #4]!
   2b5bc:	ldr	r2, [sp, #16]
   2b5c0:	mul	r3, r3, r2
   2b5c4:	str	r3, [sp, #16]
   2b5c8:	bne	2b560 <GetDataSlab+0x9734>
   2b5cc:	ldr	r3, [sp, #28]
   2b5d0:	cmp	r3, #1
   2b5d4:	ldr	r3, [sp, #8]
   2b5d8:	add	r6, r3, r4, lsl #2
   2b5dc:	ldr	r3, [sp, #16]
   2b5e0:	beq	34cf0 <GetDataSlab+0x12ec4>
   2b5e4:	cmp	r3, #0
   2b5e8:	ble	30874 <GetDataSlab+0xea48>
   2b5ec:	ldr	r3, [r9]
   2b5f0:	mov	fp, #0
   2b5f4:	mov	sl, fp
   2b5f8:	ldr	r2, [sp, #20]
   2b5fc:	ldr	r1, [sp, #20]
   2b600:	str	r3, [sp, #8]
   2b604:	ldr	r3, [sp, #28]
   2b608:	lsl	r2, r2, #2
   2b60c:	str	r2, [sp, #32]
   2b610:	lsl	r7, r3, #2
   2b614:	ldr	r3, [sp, #20]
   2b618:	ldr	r2, [sp, #28]
   2b61c:	sub	r3, r3, #1
   2b620:	mul	r3, r2, r3
   2b624:	ldr	r2, [sp, #32]
   2b628:	str	r3, [sp, #44]	; 0x2c
   2b62c:	ldr	r3, [sp, #20]
   2b630:	mul	r3, r3, r7
   2b634:	str	r3, [sp, #40]	; 0x28
   2b638:	ldr	r3, [sp, #4]
   2b63c:	add	r8, r3, r2
   2b640:	ldr	r2, [sp, #8]
   2b644:	ldr	r3, [sp, #36]	; 0x24
   2b648:	sub	r3, r3, r2
   2b64c:	lsl	r2, r2, #2
   2b650:	str	r2, [sp, #48]	; 0x30
   2b654:	ldr	r2, [sp, #28]
   2b658:	mls	r3, r1, r2, r3
   2b65c:	str	r3, [sp, #24]
   2b660:	lsl	r3, r3, #2
   2b664:	str	r3, [sp, #36]	; 0x24
   2b668:	ldr	r3, [sp, #8]
   2b66c:	cmp	r3, #0
   2b670:	beq	2b684 <GetDataSlab+0x9858>
   2b674:	ldr	r3, [sp, #48]	; 0x30
   2b678:	add	r6, r6, r3
   2b67c:	ldr	r3, [sp, #8]
   2b680:	add	r4, r4, r3
   2b684:	ldr	r3, [sp, #20]
   2b688:	cmp	r3, #0
   2b68c:	ble	2b6cc <GetDataSlab+0x98a0>
   2b690:	ldr	r3, [sp, #4]
   2b694:	mov	r1, r6
   2b698:	add	r2, r3, fp, lsl #2
   2b69c:	ldr	r3, [r1], r7
   2b6a0:	vmov	s15, r3
   2b6a4:	vcvt.f32.s32	s15, s15
   2b6a8:	vstmia	r2!, {s15}
   2b6ac:	cmp	r8, r2
   2b6b0:	bne	2b69c <GetDataSlab+0x9870>
   2b6b4:	ldr	r3, [sp, #28]
   2b6b8:	ldr	r2, [sp, #40]	; 0x28
   2b6bc:	add	r3, r3, r4
   2b6c0:	add	r6, r6, r2
   2b6c4:	ldr	r2, [sp, #44]	; 0x2c
   2b6c8:	add	r4, r3, r2
   2b6cc:	ldr	r3, [sp, #232]	; 0xe8
   2b6d0:	cmp	r3, #1
   2b6d4:	ldr	r3, [sp, #24]
   2b6d8:	add	r4, r4, r3
   2b6dc:	ldr	r3, [sp, #36]	; 0x24
   2b6e0:	add	r6, r6, r3
   2b6e4:	ble	33da4 <GetDataSlab+0x11f78>
   2b6e8:	ldr	r3, [sp, #100]	; 0x64
   2b6ec:	ldr	r2, [sp, #228]	; 0xe4
   2b6f0:	add	r3, r3, #1
   2b6f4:	ldr	r1, [r2, #4]
   2b6f8:	str	r3, [sp, #100]	; 0x64
   2b6fc:	sdiv	r2, r3, r1
   2b700:	mls	r3, r1, r2, r3
   2b704:	cmp	r3, #0
   2b708:	bne	33d8c <GetDataSlab+0x11f60>
   2b70c:	add	ip, sp, #100	; 0x64
   2b710:	mov	r0, #1
   2b714:	ldr	lr, [sp, #12]
   2b718:	ldr	r3, [sp, #228]	; 0xe4
   2b71c:	add	r5, r3, #4
   2b720:	b	2b768 <GetDataSlab+0x993c>
   2b724:	ldr	r3, [lr, #-4]
   2b728:	ldr	r1, [r9, r0, lsl #2]
   2b72c:	mla	r3, r1, r3, r2
   2b730:	add	r6, r6, r3, lsl #2
   2b734:	add	r4, r4, r3
   2b738:	ldr	r3, [sp, #232]	; 0xe8
   2b73c:	add	r0, r0, #1
   2b740:	cmp	r3, r0
   2b744:	beq	33da4 <GetDataSlab+0x11f78>
   2b748:	ldr	r3, [ip]
   2b74c:	ldr	r1, [r5, #4]!
   2b750:	add	r3, r3, #1
   2b754:	sdiv	r2, r3, r1
   2b758:	str	r3, [ip]
   2b75c:	mls	r3, r1, r2, r3
   2b760:	cmp	r3, #0
   2b764:	bne	33d90 <GetDataSlab+0x11f64>
   2b768:	ldr	r2, [lr, #4]!
   2b76c:	str	sl, [ip], #4
   2b770:	sdiv	r3, r4, r2
   2b774:	mls	r3, r2, r3, r4
   2b778:	cmp	r3, #0
   2b77c:	sub	r2, r2, r3
   2b780:	bne	2b724 <GetDataSlab+0x98f8>
   2b784:	ldr	r3, [r9, r0, lsl #2]
   2b788:	cmp	r3, #0
   2b78c:	beq	2b738 <GetDataSlab+0x990c>
   2b790:	ldr	r2, [lr, #-4]
   2b794:	mul	r3, r2, r3
   2b798:	add	r6, r6, r3, lsl #2
   2b79c:	add	r4, r4, r3
   2b7a0:	b	2b738 <GetDataSlab+0x990c>
   2b7a4:	ldr	r3, [sl]
   2b7a8:	str	r3, [sp, #28]
   2b7ac:	ldr	r3, [sp, #232]	; 0xe8
   2b7b0:	cmp	r3, #1
   2b7b4:	ldr	r3, [r8]
   2b7b8:	str	r3, [sp, #36]	; 0x24
   2b7bc:	ldr	r3, [sp, #228]	; 0xe4
   2b7c0:	ldr	r3, [r3]
   2b7c4:	str	r3, [sp, #20]
   2b7c8:	ldr	r3, [sp, #28]
   2b7cc:	sub	r3, r3, #1
   2b7d0:	str	r3, [sp, #56]	; 0x38
   2b7d4:	ldr	r3, [sp, #36]	; 0x24
   2b7d8:	str	r3, [sp, #136]	; 0x88
   2b7dc:	ble	3faa4 <GetDataSlab+0x1dc78>
   2b7e0:	add	r6, sl, #4
   2b7e4:	ldr	fp, [sp, #228]	; 0xe4
   2b7e8:	add	lr, sp, #60	; 0x3c
   2b7ec:	mov	r5, r8
   2b7f0:	mov	r4, #0
   2b7f4:	str	r9, [sp, #24]
   2b7f8:	ldr	r3, [sp, #232]	; 0xe8
   2b7fc:	add	r3, sl, r3, lsl #2
   2b800:	ldr	sl, [sp, #12]
   2b804:	str	r3, [sp, #32]
   2b808:	ldr	r3, [sp, #20]
   2b80c:	str	r3, [sp, #16]
   2b810:	ldr	r3, [r6], #4
   2b814:	mov	r7, sl
   2b818:	ldr	r0, [r5], #4
   2b81c:	sub	ip, r3, #1
   2b820:	mov	r1, r5
   2b824:	str	ip, [lr], #4
   2b828:	mov	r3, r1
   2b82c:	ldr	r2, [r1, #-4]!
   2b830:	ldr	r3, [r3]
   2b834:	cmp	r8, r1
   2b838:	mul	ip, r2, ip
   2b83c:	mul	r0, r3, r0
   2b840:	bne	2b828 <GetDataSlab+0x99fc>
   2b844:	ldr	r3, [sp, #32]
   2b848:	str	r0, [sl, #4]!
   2b84c:	ldr	r1, [r7]
   2b850:	str	ip, [lr, #-4]
   2b854:	cmp	r3, r6
   2b858:	ldr	r3, [sp, #24]
   2b85c:	ldr	r2, [r3, #4]!
   2b860:	mla	r4, r2, r1, r4
   2b864:	str	r3, [sp, #24]
   2b868:	ldr	r3, [fp, #4]!
   2b86c:	ldr	r2, [sp, #16]
   2b870:	mul	r3, r3, r2
   2b874:	str	r3, [sp, #16]
   2b878:	bne	2b810 <GetDataSlab+0x99e4>
   2b87c:	ldr	r3, [sp, #28]
   2b880:	cmp	r3, #1
   2b884:	ldr	r3, [sp, #8]
   2b888:	add	r6, r3, r4, lsl #1
   2b88c:	ldr	r3, [sp, #16]
   2b890:	beq	37aa8 <GetDataSlab+0x15c7c>
   2b894:	cmp	r3, #0
   2b898:	ble	30874 <GetDataSlab+0xea48>
   2b89c:	ldr	r3, [r9]
   2b8a0:	mov	fp, #0
   2b8a4:	mov	sl, fp
   2b8a8:	ldr	r2, [sp, #20]
   2b8ac:	ldr	r1, [sp, #20]
   2b8b0:	str	r3, [sp, #8]
   2b8b4:	ldr	r3, [sp, #28]
   2b8b8:	lsl	r2, r2, #2
   2b8bc:	str	r2, [sp, #32]
   2b8c0:	lsl	r7, r3, #1
   2b8c4:	ldr	r3, [sp, #20]
   2b8c8:	ldr	r2, [sp, #28]
   2b8cc:	sub	r3, r3, #1
   2b8d0:	mul	r3, r2, r3
   2b8d4:	ldr	r2, [sp, #32]
   2b8d8:	str	r3, [sp, #44]	; 0x2c
   2b8dc:	ldr	r3, [sp, #20]
   2b8e0:	mul	r3, r3, r7
   2b8e4:	str	r3, [sp, #40]	; 0x28
   2b8e8:	ldr	r3, [sp, #4]
   2b8ec:	add	r8, r3, r2
   2b8f0:	ldr	r2, [sp, #8]
   2b8f4:	ldr	r3, [sp, #36]	; 0x24
   2b8f8:	sub	r3, r3, r2
   2b8fc:	lsl	r2, r2, #1
   2b900:	str	r2, [sp, #48]	; 0x30
   2b904:	ldr	r2, [sp, #28]
   2b908:	mls	r3, r1, r2, r3
   2b90c:	str	r3, [sp, #24]
   2b910:	lsl	r3, r3, #1
   2b914:	str	r3, [sp, #36]	; 0x24
   2b918:	ldr	r3, [sp, #8]
   2b91c:	cmp	r3, #0
   2b920:	beq	2b934 <GetDataSlab+0x9b08>
   2b924:	ldr	r3, [sp, #48]	; 0x30
   2b928:	add	r6, r6, r3
   2b92c:	ldr	r3, [sp, #8]
   2b930:	add	r4, r4, r3
   2b934:	ldr	r3, [sp, #20]
   2b938:	cmp	r3, #0
   2b93c:	ble	2b97c <GetDataSlab+0x9b50>
   2b940:	ldr	r3, [sp, #4]
   2b944:	mov	r1, r6
   2b948:	add	r2, r3, fp, lsl #2
   2b94c:	ldrh	r3, [r1], r7
   2b950:	vmov	s15, r3
   2b954:	vcvt.f32.u32	s15, s15
   2b958:	vstmia	r2!, {s15}
   2b95c:	cmp	r8, r2
   2b960:	bne	2b94c <GetDataSlab+0x9b20>
   2b964:	ldr	r3, [sp, #28]
   2b968:	ldr	r2, [sp, #40]	; 0x28
   2b96c:	add	r3, r3, r4
   2b970:	add	r6, r6, r2
   2b974:	ldr	r2, [sp, #44]	; 0x2c
   2b978:	add	r4, r3, r2
   2b97c:	ldr	r3, [sp, #232]	; 0xe8
   2b980:	cmp	r3, #1
   2b984:	ldr	r3, [sp, #24]
   2b988:	add	r4, r4, r3
   2b98c:	ldr	r3, [sp, #36]	; 0x24
   2b990:	add	r6, r6, r3
   2b994:	ble	33d6c <GetDataSlab+0x11f40>
   2b998:	ldr	r3, [sp, #100]	; 0x64
   2b99c:	ldr	r2, [sp, #228]	; 0xe4
   2b9a0:	add	r3, r3, #1
   2b9a4:	ldr	r1, [r2, #4]
   2b9a8:	str	r3, [sp, #100]	; 0x64
   2b9ac:	sdiv	r2, r3, r1
   2b9b0:	mls	r3, r1, r2, r3
   2b9b4:	cmp	r3, #0
   2b9b8:	bne	33d54 <GetDataSlab+0x11f28>
   2b9bc:	add	ip, sp, #100	; 0x64
   2b9c0:	mov	r0, #1
   2b9c4:	ldr	lr, [sp, #12]
   2b9c8:	ldr	r3, [sp, #228]	; 0xe4
   2b9cc:	add	r5, r3, #4
   2b9d0:	b	2ba18 <GetDataSlab+0x9bec>
   2b9d4:	ldr	r3, [lr, #-4]
   2b9d8:	ldr	r1, [r9, r0, lsl #2]
   2b9dc:	mla	r3, r1, r3, r2
   2b9e0:	add	r6, r6, r3, lsl #1
   2b9e4:	add	r4, r4, r3
   2b9e8:	ldr	r3, [sp, #232]	; 0xe8
   2b9ec:	add	r0, r0, #1
   2b9f0:	cmp	r3, r0
   2b9f4:	beq	33d6c <GetDataSlab+0x11f40>
   2b9f8:	ldr	r3, [ip]
   2b9fc:	ldr	r1, [r5, #4]!
   2ba00:	add	r3, r3, #1
   2ba04:	sdiv	r2, r3, r1
   2ba08:	str	r3, [ip]
   2ba0c:	mls	r3, r1, r2, r3
   2ba10:	cmp	r3, #0
   2ba14:	bne	33d58 <GetDataSlab+0x11f2c>
   2ba18:	ldr	r2, [lr, #4]!
   2ba1c:	str	sl, [ip], #4
   2ba20:	sdiv	r3, r4, r2
   2ba24:	mls	r3, r2, r3, r4
   2ba28:	cmp	r3, #0
   2ba2c:	sub	r2, r2, r3
   2ba30:	bne	2b9d4 <GetDataSlab+0x9ba8>
   2ba34:	ldr	r3, [r9, r0, lsl #2]
   2ba38:	cmp	r3, #0
   2ba3c:	beq	2b9e8 <GetDataSlab+0x9bbc>
   2ba40:	ldr	r2, [lr, #-4]
   2ba44:	mul	r3, r2, r3
   2ba48:	add	r6, r6, r3, lsl #1
   2ba4c:	add	r4, r4, r3
   2ba50:	b	2b9e8 <GetDataSlab+0x9bbc>
   2ba54:	ldr	r3, [sl]
   2ba58:	str	r3, [sp, #28]
   2ba5c:	ldr	r3, [sp, #232]	; 0xe8
   2ba60:	cmp	r3, #1
   2ba64:	ldr	r3, [r8]
   2ba68:	str	r3, [sp, #36]	; 0x24
   2ba6c:	ldr	r3, [sp, #228]	; 0xe4
   2ba70:	ldr	r3, [r3]
   2ba74:	str	r3, [sp, #20]
   2ba78:	ldr	r3, [sp, #28]
   2ba7c:	sub	r3, r3, #1
   2ba80:	str	r3, [sp, #56]	; 0x38
   2ba84:	ldr	r3, [sp, #36]	; 0x24
   2ba88:	str	r3, [sp, #136]	; 0x88
   2ba8c:	ble	3fa6c <GetDataSlab+0x1dc40>
   2ba90:	add	r6, sl, #4
   2ba94:	ldr	fp, [sp, #228]	; 0xe4
   2ba98:	add	lr, sp, #60	; 0x3c
   2ba9c:	mov	r5, r8
   2baa0:	mov	r4, #0
   2baa4:	str	r9, [sp, #24]
   2baa8:	ldr	r3, [sp, #232]	; 0xe8
   2baac:	add	r3, sl, r3, lsl #2
   2bab0:	ldr	sl, [sp, #12]
   2bab4:	str	r3, [sp, #32]
   2bab8:	ldr	r3, [sp, #20]
   2babc:	str	r3, [sp, #16]
   2bac0:	ldr	r3, [r6], #4
   2bac4:	mov	r7, sl
   2bac8:	ldr	r0, [r5], #4
   2bacc:	sub	ip, r3, #1
   2bad0:	mov	r1, r5
   2bad4:	str	ip, [lr], #4
   2bad8:	mov	r3, r1
   2badc:	ldr	r2, [r1, #-4]!
   2bae0:	ldr	r3, [r3]
   2bae4:	cmp	r8, r1
   2bae8:	mul	ip, r2, ip
   2baec:	mul	r0, r3, r0
   2baf0:	bne	2bad8 <GetDataSlab+0x9cac>
   2baf4:	ldr	r3, [sp, #32]
   2baf8:	str	r0, [sl, #4]!
   2bafc:	ldr	r1, [r7]
   2bb00:	str	ip, [lr, #-4]
   2bb04:	cmp	r3, r6
   2bb08:	ldr	r3, [sp, #24]
   2bb0c:	ldr	r2, [r3, #4]!
   2bb10:	mla	r4, r2, r1, r4
   2bb14:	str	r3, [sp, #24]
   2bb18:	ldr	r3, [fp, #4]!
   2bb1c:	ldr	r2, [sp, #16]
   2bb20:	mul	r3, r3, r2
   2bb24:	str	r3, [sp, #16]
   2bb28:	bne	2bac0 <GetDataSlab+0x9c94>
   2bb2c:	ldr	r3, [sp, #28]
   2bb30:	cmp	r3, #1
   2bb34:	ldr	r3, [sp, #8]
   2bb38:	add	r6, r3, r4, lsl #1
   2bb3c:	ldr	r3, [sp, #16]
   2bb40:	beq	377b4 <GetDataSlab+0x15988>
   2bb44:	cmp	r3, #0
   2bb48:	ble	30874 <GetDataSlab+0xea48>
   2bb4c:	ldr	r3, [r9]
   2bb50:	mov	fp, #0
   2bb54:	mov	sl, fp
   2bb58:	ldr	r2, [sp, #20]
   2bb5c:	ldr	r1, [sp, #20]
   2bb60:	str	r3, [sp, #8]
   2bb64:	ldr	r3, [sp, #28]
   2bb68:	lsl	r2, r2, #2
   2bb6c:	str	r2, [sp, #32]
   2bb70:	lsl	r7, r3, #1
   2bb74:	ldr	r3, [sp, #20]
   2bb78:	ldr	r2, [sp, #28]
   2bb7c:	sub	r3, r3, #1
   2bb80:	mul	r3, r2, r3
   2bb84:	ldr	r2, [sp, #32]
   2bb88:	str	r3, [sp, #40]	; 0x28
   2bb8c:	ldr	r3, [sp, #20]
   2bb90:	mul	r3, r3, r7
   2bb94:	str	r3, [sp, #44]	; 0x2c
   2bb98:	ldr	r3, [sp, #4]
   2bb9c:	add	r8, r3, r2
   2bba0:	ldr	r2, [sp, #8]
   2bba4:	ldr	r3, [sp, #36]	; 0x24
   2bba8:	sub	r3, r3, r2
   2bbac:	lsl	r2, r2, #1
   2bbb0:	str	r2, [sp, #48]	; 0x30
   2bbb4:	ldr	r2, [sp, #28]
   2bbb8:	mls	r3, r1, r2, r3
   2bbbc:	str	r3, [sp, #24]
   2bbc0:	lsl	r3, r3, #1
   2bbc4:	str	r3, [sp, #36]	; 0x24
   2bbc8:	ldr	r3, [sp, #8]
   2bbcc:	cmp	r3, #0
   2bbd0:	beq	2bbe4 <GetDataSlab+0x9db8>
   2bbd4:	ldr	r3, [sp, #48]	; 0x30
   2bbd8:	add	r6, r6, r3
   2bbdc:	ldr	r3, [sp, #8]
   2bbe0:	add	r4, r4, r3
   2bbe4:	ldr	r3, [sp, #20]
   2bbe8:	cmp	r3, #0
   2bbec:	ble	2bc2c <GetDataSlab+0x9e00>
   2bbf0:	ldr	r3, [sp, #4]
   2bbf4:	mov	r1, r6
   2bbf8:	add	r2, r3, fp, lsl #2
   2bbfc:	ldrsh	r3, [r1], r7
   2bc00:	vmov	s15, r3
   2bc04:	vcvt.f32.s32	s15, s15
   2bc08:	vstmia	r2!, {s15}
   2bc0c:	cmp	r2, r8
   2bc10:	bne	2bbfc <GetDataSlab+0x9dd0>
   2bc14:	ldr	r3, [sp, #28]
   2bc18:	ldr	r2, [sp, #44]	; 0x2c
   2bc1c:	add	r3, r3, r4
   2bc20:	add	r6, r6, r2
   2bc24:	ldr	r2, [sp, #40]	; 0x28
   2bc28:	add	r4, r3, r2
   2bc2c:	ldr	r3, [sp, #232]	; 0xe8
   2bc30:	cmp	r3, #1
   2bc34:	ldr	r3, [sp, #24]
   2bc38:	add	r4, r4, r3
   2bc3c:	ldr	r3, [sp, #36]	; 0x24
   2bc40:	add	r6, r6, r3
   2bc44:	ble	33d34 <GetDataSlab+0x11f08>
   2bc48:	ldr	r3, [sp, #100]	; 0x64
   2bc4c:	ldr	r2, [sp, #228]	; 0xe4
   2bc50:	add	r3, r3, #1
   2bc54:	ldr	r1, [r2, #4]
   2bc58:	str	r3, [sp, #100]	; 0x64
   2bc5c:	sdiv	r2, r3, r1
   2bc60:	mls	r3, r1, r2, r3
   2bc64:	cmp	r3, #0
   2bc68:	bne	33d1c <GetDataSlab+0x11ef0>
   2bc6c:	add	ip, sp, #100	; 0x64
   2bc70:	mov	r0, #1
   2bc74:	ldr	lr, [sp, #12]
   2bc78:	ldr	r3, [sp, #228]	; 0xe4
   2bc7c:	add	r5, r3, #4
   2bc80:	b	2bcc8 <GetDataSlab+0x9e9c>
   2bc84:	ldr	r3, [lr, #-4]
   2bc88:	ldr	r1, [r9, r0, lsl #2]
   2bc8c:	mla	r3, r1, r3, r2
   2bc90:	add	r6, r6, r3, lsl #1
   2bc94:	add	r4, r4, r3
   2bc98:	ldr	r3, [sp, #232]	; 0xe8
   2bc9c:	add	r0, r0, #1
   2bca0:	cmp	r3, r0
   2bca4:	beq	33d34 <GetDataSlab+0x11f08>
   2bca8:	ldr	r3, [ip]
   2bcac:	ldr	r1, [r5, #4]!
   2bcb0:	add	r3, r3, #1
   2bcb4:	sdiv	r2, r3, r1
   2bcb8:	str	r3, [ip]
   2bcbc:	mls	r3, r1, r2, r3
   2bcc0:	cmp	r3, #0
   2bcc4:	bne	33d20 <GetDataSlab+0x11ef4>
   2bcc8:	ldr	r2, [lr, #4]!
   2bccc:	str	sl, [ip], #4
   2bcd0:	sdiv	r3, r4, r2
   2bcd4:	mls	r3, r2, r3, r4
   2bcd8:	cmp	r3, #0
   2bcdc:	sub	r2, r2, r3
   2bce0:	bne	2bc84 <GetDataSlab+0x9e58>
   2bce4:	ldr	r3, [r9, r0, lsl #2]
   2bce8:	cmp	r3, #0
   2bcec:	beq	2bc98 <GetDataSlab+0x9e6c>
   2bcf0:	ldr	r2, [lr, #-4]
   2bcf4:	mul	r3, r2, r3
   2bcf8:	add	r6, r6, r3, lsl #1
   2bcfc:	add	r4, r4, r3
   2bd00:	b	2bc98 <GetDataSlab+0x9e6c>
   2bd04:	ldr	r3, [sp, #232]	; 0xe8
   2bd08:	ldr	r7, [sl]
   2bd0c:	cmp	r3, #1
   2bd10:	ldr	r3, [r8]
   2bd14:	str	r3, [sp, #40]	; 0x28
   2bd18:	ldr	r3, [sp, #228]	; 0xe4
   2bd1c:	ldr	r3, [r3]
   2bd20:	str	r3, [sp, #20]
   2bd24:	sub	r3, r7, #1
   2bd28:	str	r3, [sp, #56]	; 0x38
   2bd2c:	ldr	r3, [sp, #40]	; 0x28
   2bd30:	str	r3, [sp, #136]	; 0x88
   2bd34:	ble	3fb14 <GetDataSlab+0x1dce8>
   2bd38:	ldr	fp, [sp, #12]
   2bd3c:	add	r6, sl, #4
   2bd40:	add	lr, sp, #60	; 0x3c
   2bd44:	mov	r5, r8
   2bd48:	mov	r4, #0
   2bd4c:	str	r9, [sp, #28]
   2bd50:	ldr	r3, [sp, #232]	; 0xe8
   2bd54:	add	r3, sl, r3, lsl #2
   2bd58:	str	r3, [sp, #32]
   2bd5c:	ldr	r3, [sp, #228]	; 0xe4
   2bd60:	str	r3, [sp, #24]
   2bd64:	ldr	r3, [sp, #20]
   2bd68:	str	r3, [sp, #16]
   2bd6c:	ldr	r3, [r6], #4
   2bd70:	mov	sl, fp
   2bd74:	ldr	r0, [r5], #4
   2bd78:	sub	ip, r3, #1
   2bd7c:	mov	r1, r5
   2bd80:	str	ip, [lr], #4
   2bd84:	mov	r3, r1
   2bd88:	ldr	r2, [r1, #-4]!
   2bd8c:	ldr	r3, [r3]
   2bd90:	cmp	r1, r8
   2bd94:	mul	ip, r2, ip
   2bd98:	mul	r0, r3, r0
   2bd9c:	bne	2bd84 <GetDataSlab+0x9f58>
   2bda0:	ldr	r3, [sp, #32]
   2bda4:	str	r0, [fp, #4]!
   2bda8:	ldr	r1, [sl]
   2bdac:	str	ip, [lr, #-4]
   2bdb0:	ldr	r0, [sp, #24]
   2bdb4:	cmp	r3, r6
   2bdb8:	ldr	r3, [sp, #28]
   2bdbc:	ldr	r2, [r3, #4]!
   2bdc0:	mla	r4, r2, r1, r4
   2bdc4:	str	r3, [sp, #28]
   2bdc8:	ldr	r3, [r0, #4]!
   2bdcc:	ldr	r2, [sp, #16]
   2bdd0:	str	r0, [sp, #24]
   2bdd4:	mul	r3, r3, r2
   2bdd8:	str	r3, [sp, #16]
   2bddc:	bne	2bd6c <GetDataSlab+0x9f40>
   2bde0:	ldr	r3, [sp, #8]
   2bde4:	cmp	r7, #1
   2bde8:	add	r5, r3, r4
   2bdec:	ldr	r3, [sp, #16]
   2bdf0:	beq	3793c <GetDataSlab+0x15b10>
   2bdf4:	cmp	r3, #0
   2bdf8:	ble	30874 <GetDataSlab+0xea48>
   2bdfc:	ldr	r3, [r9]
   2be00:	mov	fp, #0
   2be04:	mov	sl, fp
   2be08:	ldr	r2, [sp, #20]
   2be0c:	str	r3, [sp, #8]
   2be10:	ldr	r3, [sp, #20]
   2be14:	lsl	r2, r2, #2
   2be18:	str	r2, [sp, #28]
   2be1c:	mul	r3, r3, r7
   2be20:	str	r3, [sp, #32]
   2be24:	ldr	r3, [sp, #20]
   2be28:	sub	r3, r3, #1
   2be2c:	mul	r3, r7, r3
   2be30:	str	r3, [sp, #36]	; 0x24
   2be34:	ldr	r3, [sp, #4]
   2be38:	add	r8, r3, r2
   2be3c:	ldr	r2, [sp, #8]
   2be40:	ldr	r3, [sp, #40]	; 0x28
   2be44:	sub	r3, r3, r2
   2be48:	ldr	r2, [sp, #32]
   2be4c:	sub	r3, r3, r2
   2be50:	str	r3, [sp, #24]
   2be54:	ldr	r3, [sp, #8]
   2be58:	cmp	r3, #0
   2be5c:	addne	r5, r5, r3
   2be60:	addne	r4, r4, r3
   2be64:	ldr	r3, [sp, #20]
   2be68:	cmp	r3, #0
   2be6c:	ble	2bea8 <GetDataSlab+0xa07c>
   2be70:	ldr	r3, [sp, #4]
   2be74:	mov	r1, r5
   2be78:	add	r2, r3, fp, lsl #2
   2be7c:	ldrb	r3, [r1], r7
   2be80:	vmov	s15, r3
   2be84:	vcvt.f32.u32	s15, s15
   2be88:	vstmia	r2!, {s15}
   2be8c:	cmp	r8, r2
   2be90:	bne	2be7c <GetDataSlab+0xa050>
   2be94:	ldr	r2, [sp, #32]
   2be98:	add	r3, r7, r4
   2be9c:	add	r5, r5, r2
   2bea0:	ldr	r2, [sp, #36]	; 0x24
   2bea4:	add	r4, r2, r3
   2bea8:	ldr	r3, [sp, #232]	; 0xe8
   2beac:	cmp	r3, #1
   2beb0:	ldr	r3, [sp, #24]
   2beb4:	add	r4, r4, r3
   2beb8:	add	r5, r5, r3
   2bebc:	ble	33cfc <GetDataSlab+0x11ed0>
   2bec0:	ldr	r3, [sp, #100]	; 0x64
   2bec4:	ldr	r2, [sp, #228]	; 0xe4
   2bec8:	add	r3, r3, #1
   2becc:	ldr	r1, [r2, #4]
   2bed0:	str	r3, [sp, #100]	; 0x64
   2bed4:	sdiv	r2, r3, r1
   2bed8:	mls	r3, r1, r2, r3
   2bedc:	cmp	r3, #0
   2bee0:	bne	33ce4 <GetDataSlab+0x11eb8>
   2bee4:	add	ip, sp, #100	; 0x64
   2bee8:	mov	r0, #1
   2beec:	ldr	lr, [sp, #12]
   2bef0:	ldr	r3, [sp, #228]	; 0xe4
   2bef4:	add	r6, r3, #4
   2bef8:	b	2bf40 <GetDataSlab+0xa114>
   2befc:	ldr	r3, [lr, #-4]
   2bf00:	ldr	r1, [r9, r0, lsl #2]
   2bf04:	mla	r3, r1, r3, r2
   2bf08:	add	r5, r5, r3
   2bf0c:	add	r4, r4, r3
   2bf10:	ldr	r3, [sp, #232]	; 0xe8
   2bf14:	add	r0, r0, #1
   2bf18:	cmp	r3, r0
   2bf1c:	beq	33cfc <GetDataSlab+0x11ed0>
   2bf20:	ldr	r3, [ip]
   2bf24:	ldr	r1, [r6, #4]!
   2bf28:	add	r3, r3, #1
   2bf2c:	sdiv	r2, r3, r1
   2bf30:	str	r3, [ip]
   2bf34:	mls	r3, r1, r2, r3
   2bf38:	cmp	r3, #0
   2bf3c:	bne	33ce8 <GetDataSlab+0x11ebc>
   2bf40:	ldr	r2, [lr, #4]!
   2bf44:	str	sl, [ip], #4
   2bf48:	sdiv	r3, r4, r2
   2bf4c:	mls	r3, r2, r3, r4
   2bf50:	cmp	r3, #0
   2bf54:	sub	r2, r2, r3
   2bf58:	bne	2befc <GetDataSlab+0xa0d0>
   2bf5c:	ldr	r3, [r9, r0, lsl #2]
   2bf60:	cmp	r3, #0
   2bf64:	beq	2bf10 <GetDataSlab+0xa0e4>
   2bf68:	ldr	r2, [lr, #-4]
   2bf6c:	mul	r3, r2, r3
   2bf70:	add	r5, r5, r3
   2bf74:	add	r4, r4, r3
   2bf78:	b	2bf10 <GetDataSlab+0xa0e4>
   2bf7c:	ldr	r3, [sp, #232]	; 0xe8
   2bf80:	ldr	r7, [sl]
   2bf84:	cmp	r3, #1
   2bf88:	ldr	r3, [r8]
   2bf8c:	str	r3, [sp, #40]	; 0x28
   2bf90:	ldr	r3, [sp, #228]	; 0xe4
   2bf94:	ldr	r3, [r3]
   2bf98:	str	r3, [sp, #20]
   2bf9c:	sub	r3, r7, #1
   2bfa0:	str	r3, [sp, #56]	; 0x38
   2bfa4:	ldr	r3, [sp, #40]	; 0x28
   2bfa8:	str	r3, [sp, #136]	; 0x88
   2bfac:	ble	3fb04 <GetDataSlab+0x1dcd8>
   2bfb0:	ldr	fp, [sp, #12]
   2bfb4:	add	r6, sl, #4
   2bfb8:	add	lr, sp, #60	; 0x3c
   2bfbc:	mov	r5, r8
   2bfc0:	mov	r4, #0
   2bfc4:	str	r9, [sp, #28]
   2bfc8:	ldr	r3, [sp, #232]	; 0xe8
   2bfcc:	add	r3, sl, r3, lsl #2
   2bfd0:	str	r3, [sp, #32]
   2bfd4:	ldr	r3, [sp, #228]	; 0xe4
   2bfd8:	str	r3, [sp, #24]
   2bfdc:	ldr	r3, [sp, #20]
   2bfe0:	str	r3, [sp, #16]
   2bfe4:	ldr	r3, [r6], #4
   2bfe8:	mov	sl, fp
   2bfec:	ldr	r0, [r5], #4
   2bff0:	sub	ip, r3, #1
   2bff4:	mov	r1, r5
   2bff8:	str	ip, [lr], #4
   2bffc:	mov	r3, r1
   2c000:	ldr	r2, [r1, #-4]!
   2c004:	ldr	r3, [r3]
   2c008:	cmp	r1, r8
   2c00c:	mul	ip, r2, ip
   2c010:	mul	r0, r3, r0
   2c014:	bne	2bffc <GetDataSlab+0xa1d0>
   2c018:	ldr	r3, [sp, #32]
   2c01c:	str	r0, [fp, #4]!
   2c020:	ldr	r1, [sl]
   2c024:	str	ip, [lr, #-4]
   2c028:	ldr	r0, [sp, #24]
   2c02c:	cmp	r3, r6
   2c030:	ldr	r3, [sp, #28]
   2c034:	ldr	r2, [r3, #4]!
   2c038:	mla	r4, r2, r1, r4
   2c03c:	str	r3, [sp, #28]
   2c040:	ldr	r3, [r0, #4]!
   2c044:	ldr	r2, [sp, #16]
   2c048:	str	r0, [sp, #24]
   2c04c:	mul	r3, r3, r2
   2c050:	str	r3, [sp, #16]
   2c054:	bne	2bfe4 <GetDataSlab+0xa1b8>
   2c058:	ldr	r3, [sp, #8]
   2c05c:	cmp	r7, #1
   2c060:	add	r5, r3, r4
   2c064:	ldr	r3, [sp, #16]
   2c068:	beq	35bd4 <GetDataSlab+0x13da8>
   2c06c:	cmp	r3, #0
   2c070:	ble	30874 <GetDataSlab+0xea48>
   2c074:	ldr	r3, [r9]
   2c078:	mov	fp, #0
   2c07c:	mov	sl, fp
   2c080:	ldr	r2, [sp, #20]
   2c084:	str	r3, [sp, #8]
   2c088:	ldr	r3, [sp, #20]
   2c08c:	lsl	r2, r2, #2
   2c090:	str	r2, [sp, #28]
   2c094:	mul	r3, r7, r3
   2c098:	str	r3, [sp, #32]
   2c09c:	ldr	r3, [sp, #20]
   2c0a0:	sub	r3, r3, #1
   2c0a4:	mul	r3, r7, r3
   2c0a8:	str	r3, [sp, #36]	; 0x24
   2c0ac:	ldr	r3, [sp, #4]
   2c0b0:	add	r8, r3, r2
   2c0b4:	ldr	r2, [sp, #8]
   2c0b8:	ldr	r3, [sp, #40]	; 0x28
   2c0bc:	sub	r3, r3, r2
   2c0c0:	ldr	r2, [sp, #32]
   2c0c4:	sub	r3, r3, r2
   2c0c8:	str	r3, [sp, #24]
   2c0cc:	ldr	r3, [sp, #8]
   2c0d0:	cmp	r3, #0
   2c0d4:	addne	r5, r5, r3
   2c0d8:	addne	r4, r4, r3
   2c0dc:	ldr	r3, [sp, #20]
   2c0e0:	cmp	r3, #0
   2c0e4:	ble	2c120 <GetDataSlab+0xa2f4>
   2c0e8:	ldr	r3, [sp, #4]
   2c0ec:	mov	r1, r5
   2c0f0:	add	r2, r3, fp, lsl #2
   2c0f4:	ldrsb	r3, [r1], r7
   2c0f8:	vmov	s15, r3
   2c0fc:	vcvt.f32.s32	s15, s15
   2c100:	vstmia	r2!, {s15}
   2c104:	cmp	r8, r2
   2c108:	bne	2c0f4 <GetDataSlab+0xa2c8>
   2c10c:	ldr	r2, [sp, #32]
   2c110:	add	r3, r7, r4
   2c114:	add	r5, r5, r2
   2c118:	ldr	r2, [sp, #36]	; 0x24
   2c11c:	add	r4, r2, r3
   2c120:	ldr	r3, [sp, #232]	; 0xe8
   2c124:	cmp	r3, #1
   2c128:	ldr	r3, [sp, #24]
   2c12c:	add	r4, r4, r3
   2c130:	add	r5, r5, r3
   2c134:	ble	33cc4 <GetDataSlab+0x11e98>
   2c138:	ldr	r3, [sp, #100]	; 0x64
   2c13c:	ldr	r2, [sp, #228]	; 0xe4
   2c140:	add	r3, r3, #1
   2c144:	ldr	r1, [r2, #4]
   2c148:	str	r3, [sp, #100]	; 0x64
   2c14c:	sdiv	r2, r3, r1
   2c150:	mls	r3, r1, r2, r3
   2c154:	cmp	r3, #0
   2c158:	bne	33cac <GetDataSlab+0x11e80>
   2c15c:	add	ip, sp, #100	; 0x64
   2c160:	mov	r0, #1
   2c164:	ldr	lr, [sp, #12]
   2c168:	ldr	r3, [sp, #228]	; 0xe4
   2c16c:	add	r6, r3, #4
   2c170:	b	2c1b8 <GetDataSlab+0xa38c>
   2c174:	ldr	r3, [lr, #-4]
   2c178:	ldr	r1, [r9, r0, lsl #2]
   2c17c:	mla	r3, r1, r3, r2
   2c180:	add	r5, r5, r3
   2c184:	add	r4, r4, r3
   2c188:	ldr	r3, [sp, #232]	; 0xe8
   2c18c:	add	r0, r0, #1
   2c190:	cmp	r3, r0
   2c194:	beq	33cc4 <GetDataSlab+0x11e98>
   2c198:	ldr	r3, [ip]
   2c19c:	ldr	r1, [r6, #4]!
   2c1a0:	add	r3, r3, #1
   2c1a4:	sdiv	r2, r3, r1
   2c1a8:	str	r3, [ip]
   2c1ac:	mls	r3, r1, r2, r3
   2c1b0:	cmp	r3, #0
   2c1b4:	bne	33cb0 <GetDataSlab+0x11e84>
   2c1b8:	ldr	r2, [lr, #4]!
   2c1bc:	str	sl, [ip], #4
   2c1c0:	sdiv	r3, r4, r2
   2c1c4:	mls	r3, r2, r3, r4
   2c1c8:	cmp	r3, #0
   2c1cc:	sub	r2, r2, r3
   2c1d0:	bne	2c174 <GetDataSlab+0xa348>
   2c1d4:	ldr	r3, [r9, r0, lsl #2]
   2c1d8:	cmp	r3, #0
   2c1dc:	beq	2c188 <GetDataSlab+0xa35c>
   2c1e0:	ldr	r2, [lr, #-4]
   2c1e4:	mul	r3, r2, r3
   2c1e8:	add	r5, r5, r3
   2c1ec:	add	r4, r4, r3
   2c1f0:	b	2c188 <GetDataSlab+0xa35c>
   2c1f4:	ldr	r3, [sl]
   2c1f8:	str	r3, [sp, #28]
   2c1fc:	ldr	r3, [sp, #232]	; 0xe8
   2c200:	cmp	r3, #1
   2c204:	ldr	r3, [r8]
   2c208:	str	r3, [sp, #36]	; 0x24
   2c20c:	ldr	r3, [sp, #228]	; 0xe4
   2c210:	ldr	r3, [r3]
   2c214:	str	r3, [sp, #20]
   2c218:	ldr	r3, [sp, #28]
   2c21c:	sub	r3, r3, #1
   2c220:	str	r3, [sp, #56]	; 0x38
   2c224:	ldr	r3, [sp, #36]	; 0x24
   2c228:	str	r3, [sp, #136]	; 0x88
   2c22c:	ble	3fad4 <GetDataSlab+0x1dca8>
   2c230:	add	r6, sl, #4
   2c234:	ldr	fp, [sp, #228]	; 0xe4
   2c238:	add	lr, sp, #60	; 0x3c
   2c23c:	mov	r5, r8
   2c240:	mov	r4, #0
   2c244:	str	r9, [sp, #24]
   2c248:	ldr	r3, [sp, #232]	; 0xe8
   2c24c:	add	r3, sl, r3, lsl #2
   2c250:	ldr	sl, [sp, #12]
   2c254:	str	r3, [sp, #32]
   2c258:	ldr	r3, [sp, #20]
   2c25c:	str	r3, [sp, #16]
   2c260:	ldr	r3, [r6], #4
   2c264:	mov	r7, sl
   2c268:	ldr	r0, [r5], #4
   2c26c:	sub	ip, r3, #1
   2c270:	mov	r1, r5
   2c274:	str	ip, [lr], #4
   2c278:	mov	r3, r1
   2c27c:	ldr	r2, [r1, #-4]!
   2c280:	ldr	r3, [r3]
   2c284:	cmp	r1, r8
   2c288:	mul	ip, r2, ip
   2c28c:	mul	r0, r3, r0
   2c290:	bne	2c278 <GetDataSlab+0xa44c>
   2c294:	ldr	r3, [sp, #32]
   2c298:	str	r0, [sl, #4]!
   2c29c:	ldr	r1, [r7]
   2c2a0:	str	ip, [lr, #-4]
   2c2a4:	cmp	r6, r3
   2c2a8:	ldr	r3, [sp, #24]
   2c2ac:	ldr	r2, [r3, #4]!
   2c2b0:	mla	r4, r2, r1, r4
   2c2b4:	str	r3, [sp, #24]
   2c2b8:	ldr	r3, [fp, #4]!
   2c2bc:	ldr	r2, [sp, #16]
   2c2c0:	mul	r3, r3, r2
   2c2c4:	str	r3, [sp, #16]
   2c2c8:	bne	2c260 <GetDataSlab+0xa434>
   2c2cc:	ldr	r3, [sp, #28]
   2c2d0:	cmp	r3, #1
   2c2d4:	ldr	r3, [sp, #8]
   2c2d8:	add	r6, r3, r4, lsl #2
   2c2dc:	ldr	r3, [sp, #16]
   2c2e0:	beq	35ec0 <GetDataSlab+0x14094>
   2c2e4:	cmp	r3, #0
   2c2e8:	ble	30874 <GetDataSlab+0xea48>
   2c2ec:	ldr	r3, [r9]
   2c2f0:	mov	fp, #0
   2c2f4:	mov	r8, fp
   2c2f8:	ldr	r2, [sp, #20]
   2c2fc:	ldr	r1, [sp, #20]
   2c300:	str	r3, [sp, #8]
   2c304:	ldr	r3, [sp, #28]
   2c308:	lsl	r2, r2, #1
   2c30c:	str	r2, [sp, #32]
   2c310:	lsl	sl, r3, #2
   2c314:	ldr	r3, [sp, #20]
   2c318:	ldr	r2, [sp, #28]
   2c31c:	sub	r3, r3, #1
   2c320:	mul	r3, r2, r3
   2c324:	ldr	r2, [sp, #32]
   2c328:	str	r3, [sp, #40]	; 0x28
   2c32c:	ldr	r3, [sp, #20]
   2c330:	mul	r3, r3, sl
   2c334:	str	r3, [sp, #44]	; 0x2c
   2c338:	ldr	r3, [sp, #4]
   2c33c:	add	r7, r3, r2
   2c340:	ldr	r2, [sp, #8]
   2c344:	ldr	r3, [sp, #36]	; 0x24
   2c348:	sub	r3, r3, r2
   2c34c:	lsl	r2, r2, #2
   2c350:	str	r2, [sp, #48]	; 0x30
   2c354:	ldr	r2, [sp, #28]
   2c358:	mls	r3, r1, r2, r3
   2c35c:	str	r3, [sp, #24]
   2c360:	lsl	r3, r3, #2
   2c364:	str	r3, [sp, #36]	; 0x24
   2c368:	ldr	r3, [sp, #8]
   2c36c:	cmp	r3, #0
   2c370:	beq	2c384 <GetDataSlab+0xa558>
   2c374:	ldr	r3, [sp, #48]	; 0x30
   2c378:	add	r6, r6, r3
   2c37c:	ldr	r3, [sp, #8]
   2c380:	add	r4, r4, r3
   2c384:	ldr	r3, [sp, #20]
   2c388:	cmp	r3, #0
   2c38c:	ble	2c3d0 <GetDataSlab+0xa5a4>
   2c390:	ldr	r3, [sp, #4]
   2c394:	mov	r1, r6
   2c398:	add	r2, r3, fp, lsl #1
   2c39c:	vldr	s15, [r1]
   2c3a0:	add	r1, r1, sl
   2c3a4:	vcvt.u32.f32	s15, s15
   2c3a8:	vmov	r3, s15
   2c3ac:	strh	r3, [r2], #2
   2c3b0:	cmp	r2, r7
   2c3b4:	bne	2c39c <GetDataSlab+0xa570>
   2c3b8:	ldr	r3, [sp, #28]
   2c3bc:	ldr	r2, [sp, #44]	; 0x2c
   2c3c0:	add	r3, r4, r3
   2c3c4:	add	r6, r6, r2
   2c3c8:	ldr	r2, [sp, #40]	; 0x28
   2c3cc:	add	r4, r2, r3
   2c3d0:	ldr	r3, [sp, #232]	; 0xe8
   2c3d4:	cmp	r3, #1
   2c3d8:	ldr	r3, [sp, #24]
   2c3dc:	add	r4, r4, r3
   2c3e0:	ldr	r3, [sp, #36]	; 0x24
   2c3e4:	add	r6, r6, r3
   2c3e8:	ble	33c8c <GetDataSlab+0x11e60>
   2c3ec:	ldr	r3, [sp, #100]	; 0x64
   2c3f0:	ldr	r2, [sp, #228]	; 0xe4
   2c3f4:	add	r3, r3, #1
   2c3f8:	ldr	r1, [r2, #4]
   2c3fc:	str	r3, [sp, #100]	; 0x64
   2c400:	sdiv	r2, r3, r1
   2c404:	mls	r3, r1, r2, r3
   2c408:	cmp	r3, #0
   2c40c:	bne	33c74 <GetDataSlab+0x11e48>
   2c410:	add	ip, sp, #100	; 0x64
   2c414:	mov	r0, #1
   2c418:	ldr	lr, [sp, #12]
   2c41c:	ldr	r3, [sp, #228]	; 0xe4
   2c420:	add	r5, r3, #4
   2c424:	b	2c46c <GetDataSlab+0xa640>
   2c428:	ldr	r3, [lr, #-4]
   2c42c:	ldr	r1, [r9, r0, lsl #2]
   2c430:	mla	r3, r1, r3, r2
   2c434:	add	r6, r6, r3, lsl #2
   2c438:	add	r4, r4, r3
   2c43c:	ldr	r3, [sp, #232]	; 0xe8
   2c440:	add	r0, r0, #1
   2c444:	cmp	r3, r0
   2c448:	beq	33c8c <GetDataSlab+0x11e60>
   2c44c:	ldr	r3, [ip]
   2c450:	ldr	r1, [r5, #4]!
   2c454:	add	r3, r3, #1
   2c458:	sdiv	r2, r3, r1
   2c45c:	str	r3, [ip]
   2c460:	mls	r3, r1, r2, r3
   2c464:	cmp	r3, #0
   2c468:	bne	33c78 <GetDataSlab+0x11e4c>
   2c46c:	ldr	r2, [lr, #4]!
   2c470:	str	r8, [ip], #4
   2c474:	sdiv	r3, r4, r2
   2c478:	mls	r3, r2, r3, r4
   2c47c:	cmp	r3, #0
   2c480:	sub	r2, r2, r3
   2c484:	bne	2c428 <GetDataSlab+0xa5fc>
   2c488:	ldr	r3, [r9, r0, lsl #2]
   2c48c:	cmp	r3, #0
   2c490:	beq	2c43c <GetDataSlab+0xa610>
   2c494:	ldr	r2, [lr, #-4]
   2c498:	mul	r3, r2, r3
   2c49c:	add	r6, r6, r3, lsl #2
   2c4a0:	add	r4, r4, r3
   2c4a4:	b	2c43c <GetDataSlab+0xa610>
   2c4a8:	ldr	r3, [sl]
   2c4ac:	str	r3, [sp, #28]
   2c4b0:	ldr	r3, [sp, #232]	; 0xe8
   2c4b4:	cmp	r3, #1
   2c4b8:	ldr	r3, [r8]
   2c4bc:	str	r3, [sp, #36]	; 0x24
   2c4c0:	ldr	r3, [sp, #228]	; 0xe4
   2c4c4:	ldr	r3, [r3]
   2c4c8:	str	r3, [sp, #20]
   2c4cc:	ldr	r3, [sp, #28]
   2c4d0:	sub	r3, r3, #1
   2c4d4:	str	r3, [sp, #56]	; 0x38
   2c4d8:	ldr	r3, [sp, #36]	; 0x24
   2c4dc:	str	r3, [sp, #136]	; 0x88
   2c4e0:	ble	3fa24 <GetDataSlab+0x1dbf8>
   2c4e4:	add	r6, sl, #4
   2c4e8:	ldr	fp, [sp, #228]	; 0xe4
   2c4ec:	add	lr, sp, #60	; 0x3c
   2c4f0:	mov	r5, r8
   2c4f4:	mov	r4, #0
   2c4f8:	str	r9, [sp, #24]
   2c4fc:	ldr	r3, [sp, #232]	; 0xe8
   2c500:	add	r3, sl, r3, lsl #2
   2c504:	ldr	sl, [sp, #12]
   2c508:	str	r3, [sp, #32]
   2c50c:	ldr	r3, [sp, #20]
   2c510:	str	r3, [sp, #16]
   2c514:	ldr	r3, [r6], #4
   2c518:	mov	r7, sl
   2c51c:	ldr	r0, [r5], #4
   2c520:	sub	ip, r3, #1
   2c524:	mov	r1, r5
   2c528:	str	ip, [lr], #4
   2c52c:	mov	r3, r1
   2c530:	ldr	r2, [r1, #-4]!
   2c534:	ldr	r3, [r3]
   2c538:	cmp	r1, r8
   2c53c:	mul	ip, r2, ip
   2c540:	mul	r0, r3, r0
   2c544:	bne	2c52c <GetDataSlab+0xa700>
   2c548:	ldr	r3, [sp, #32]
   2c54c:	str	r0, [sl, #4]!
   2c550:	ldr	r1, [r7]
   2c554:	str	ip, [lr, #-4]
   2c558:	cmp	r6, r3
   2c55c:	ldr	r3, [sp, #24]
   2c560:	ldr	r2, [r3, #4]!
   2c564:	mla	r4, r2, r1, r4
   2c568:	str	r3, [sp, #24]
   2c56c:	ldr	r3, [fp, #4]!
   2c570:	ldr	r2, [sp, #16]
   2c574:	mul	r3, r3, r2
   2c578:	str	r3, [sp, #16]
   2c57c:	bne	2c514 <GetDataSlab+0xa6e8>
   2c580:	ldr	r3, [sp, #28]
   2c584:	cmp	r3, #1
   2c588:	ldr	r3, [sp, #8]
   2c58c:	add	r6, r3, r4, lsl #2
   2c590:	ldr	r3, [sp, #16]
   2c594:	beq	362d4 <GetDataSlab+0x144a8>
   2c598:	cmp	r3, #0
   2c59c:	ble	30874 <GetDataSlab+0xea48>
   2c5a0:	ldr	r3, [r9]
   2c5a4:	mov	fp, #0
   2c5a8:	mov	sl, fp
   2c5ac:	ldr	r2, [sp, #20]
   2c5b0:	ldr	r1, [sp, #20]
   2c5b4:	str	r3, [sp, #8]
   2c5b8:	ldr	r3, [sp, #28]
   2c5bc:	lsl	r2, r2, #1
   2c5c0:	str	r2, [sp, #32]
   2c5c4:	lsl	r7, r3, #2
   2c5c8:	ldr	r3, [sp, #20]
   2c5cc:	ldr	r2, [sp, #28]
   2c5d0:	sub	r3, r3, #1
   2c5d4:	mul	r3, r2, r3
   2c5d8:	ldr	r2, [sp, #32]
   2c5dc:	str	r3, [sp, #40]	; 0x28
   2c5e0:	ldr	r3, [sp, #20]
   2c5e4:	mul	r3, r3, r7
   2c5e8:	str	r3, [sp, #44]	; 0x2c
   2c5ec:	ldr	r3, [sp, #4]
   2c5f0:	add	r8, r3, r2
   2c5f4:	ldr	r2, [sp, #8]
   2c5f8:	ldr	r3, [sp, #36]	; 0x24
   2c5fc:	sub	r3, r3, r2
   2c600:	lsl	r2, r2, #2
   2c604:	str	r2, [sp, #48]	; 0x30
   2c608:	ldr	r2, [sp, #28]
   2c60c:	mls	r3, r1, r2, r3
   2c610:	str	r3, [sp, #24]
   2c614:	lsl	r3, r3, #2
   2c618:	str	r3, [sp, #36]	; 0x24
   2c61c:	ldr	r3, [sp, #8]
   2c620:	cmp	r3, #0
   2c624:	beq	2c638 <GetDataSlab+0xa80c>
   2c628:	ldr	r3, [sp, #48]	; 0x30
   2c62c:	add	r6, r6, r3
   2c630:	ldr	r3, [sp, #8]
   2c634:	add	r4, r4, r3
   2c638:	ldr	r3, [sp, #20]
   2c63c:	cmp	r3, #0
   2c640:	ble	2c678 <GetDataSlab+0xa84c>
   2c644:	ldr	r3, [sp, #4]
   2c648:	mov	r1, r6
   2c64c:	add	r2, r3, fp, lsl #1
   2c650:	ldr	r3, [r1], r7
   2c654:	strh	r3, [r2], #2
   2c658:	cmp	r2, r8
   2c65c:	bne	2c650 <GetDataSlab+0xa824>
   2c660:	ldr	r3, [sp, #28]
   2c664:	ldr	r2, [sp, #44]	; 0x2c
   2c668:	add	r3, r4, r3
   2c66c:	add	r6, r6, r2
   2c670:	ldr	r2, [sp, #40]	; 0x28
   2c674:	add	r4, r2, r3
   2c678:	ldr	r3, [sp, #232]	; 0xe8
   2c67c:	cmp	r3, #1
   2c680:	ldr	r3, [sp, #24]
   2c684:	add	r4, r4, r3
   2c688:	ldr	r3, [sp, #36]	; 0x24
   2c68c:	add	r6, r6, r3
   2c690:	ble	33c54 <GetDataSlab+0x11e28>
   2c694:	ldr	r3, [sp, #100]	; 0x64
   2c698:	ldr	r2, [sp, #228]	; 0xe4
   2c69c:	add	r3, r3, #1
   2c6a0:	ldr	r1, [r2, #4]
   2c6a4:	str	r3, [sp, #100]	; 0x64
   2c6a8:	sdiv	r2, r3, r1
   2c6ac:	mls	r3, r1, r2, r3
   2c6b0:	cmp	r3, #0
   2c6b4:	bne	33c3c <GetDataSlab+0x11e10>
   2c6b8:	add	ip, sp, #100	; 0x64
   2c6bc:	mov	r0, #1
   2c6c0:	ldr	lr, [sp, #12]
   2c6c4:	ldr	r3, [sp, #228]	; 0xe4
   2c6c8:	add	r5, r3, #4
   2c6cc:	b	2c714 <GetDataSlab+0xa8e8>
   2c6d0:	ldr	r3, [lr, #-4]
   2c6d4:	ldr	r1, [r9, r0, lsl #2]
   2c6d8:	mla	r3, r1, r3, r2
   2c6dc:	add	r6, r6, r3, lsl #2
   2c6e0:	add	r4, r4, r3
   2c6e4:	ldr	r3, [sp, #232]	; 0xe8
   2c6e8:	add	r0, r0, #1
   2c6ec:	cmp	r3, r0
   2c6f0:	beq	33c54 <GetDataSlab+0x11e28>
   2c6f4:	ldr	r3, [ip]
   2c6f8:	ldr	r1, [r5, #4]!
   2c6fc:	add	r3, r3, #1
   2c700:	sdiv	r2, r3, r1
   2c704:	str	r3, [ip]
   2c708:	mls	r3, r1, r2, r3
   2c70c:	cmp	r3, #0
   2c710:	bne	33c40 <GetDataSlab+0x11e14>
   2c714:	ldr	r2, [lr, #4]!
   2c718:	str	sl, [ip], #4
   2c71c:	sdiv	r3, r4, r2
   2c720:	mls	r3, r2, r3, r4
   2c724:	cmp	r3, #0
   2c728:	sub	r2, r2, r3
   2c72c:	bne	2c6d0 <GetDataSlab+0xa8a4>
   2c730:	ldr	r3, [r9, r0, lsl #2]
   2c734:	cmp	r3, #0
   2c738:	beq	2c6e4 <GetDataSlab+0xa8b8>
   2c73c:	ldr	r2, [lr, #-4]
   2c740:	mul	r3, r2, r3
   2c744:	add	r6, r6, r3, lsl #2
   2c748:	add	r4, r4, r3
   2c74c:	b	2c6e4 <GetDataSlab+0xa8b8>
   2c750:	ldr	r3, [sl]
   2c754:	str	r3, [sp, #28]
   2c758:	ldr	r3, [sp, #232]	; 0xe8
   2c75c:	cmp	r3, #1
   2c760:	ldr	r3, [r8]
   2c764:	str	r3, [sp, #36]	; 0x24
   2c768:	ldr	r3, [sp, #228]	; 0xe4
   2c76c:	ldr	r3, [r3]
   2c770:	str	r3, [sp, #20]
   2c774:	ldr	r3, [sp, #28]
   2c778:	sub	r3, r3, #1
   2c77c:	str	r3, [sp, #56]	; 0x38
   2c780:	ldr	r3, [sp, #36]	; 0x24
   2c784:	str	r3, [sp, #136]	; 0x88
   2c788:	ble	3faf4 <GetDataSlab+0x1dcc8>
   2c78c:	add	r6, sl, #4
   2c790:	ldr	fp, [sp, #228]	; 0xe4
   2c794:	add	lr, sp, #60	; 0x3c
   2c798:	mov	r5, r8
   2c79c:	mov	r4, #0
   2c7a0:	str	r9, [sp, #24]
   2c7a4:	ldr	r3, [sp, #232]	; 0xe8
   2c7a8:	add	r3, sl, r3, lsl #2
   2c7ac:	ldr	sl, [sp, #12]
   2c7b0:	str	r3, [sp, #32]
   2c7b4:	ldr	r3, [sp, #20]
   2c7b8:	str	r3, [sp, #16]
   2c7bc:	ldr	r3, [r6], #4
   2c7c0:	mov	r7, sl
   2c7c4:	ldr	r0, [r5], #4
   2c7c8:	sub	ip, r3, #1
   2c7cc:	mov	r1, r5
   2c7d0:	str	ip, [lr], #4
   2c7d4:	mov	r3, r1
   2c7d8:	ldr	r2, [r1, #-4]!
   2c7dc:	ldr	r3, [r3]
   2c7e0:	cmp	r1, r8
   2c7e4:	mul	ip, r2, ip
   2c7e8:	mul	r0, r3, r0
   2c7ec:	bne	2c7d4 <GetDataSlab+0xa9a8>
   2c7f0:	ldr	r3, [sp, #32]
   2c7f4:	str	r0, [sl, #4]!
   2c7f8:	ldr	r1, [r7]
   2c7fc:	str	ip, [lr, #-4]
   2c800:	cmp	r6, r3
   2c804:	ldr	r3, [sp, #24]
   2c808:	ldr	r2, [r3, #4]!
   2c80c:	mla	r4, r2, r1, r4
   2c810:	str	r3, [sp, #24]
   2c814:	ldr	r3, [fp, #4]!
   2c818:	ldr	r2, [sp, #16]
   2c81c:	mul	r3, r3, r2
   2c820:	str	r3, [sp, #16]
   2c824:	bne	2c7bc <GetDataSlab+0xa990>
   2c828:	ldr	r3, [sp, #28]
   2c82c:	cmp	r3, #1
   2c830:	ldr	r3, [sp, #8]
   2c834:	add	r6, r3, r4, lsl #2
   2c838:	ldr	r3, [sp, #16]
   2c83c:	beq	35d40 <GetDataSlab+0x13f14>
   2c840:	cmp	r3, #0
   2c844:	ble	30874 <GetDataSlab+0xea48>
   2c848:	ldr	r3, [r9]
   2c84c:	mov	fp, #0
   2c850:	mov	sl, fp
   2c854:	ldr	r2, [sp, #20]
   2c858:	ldr	r1, [sp, #20]
   2c85c:	str	r3, [sp, #8]
   2c860:	ldr	r3, [sp, #28]
   2c864:	lsl	r2, r2, #1
   2c868:	str	r2, [sp, #32]
   2c86c:	lsl	r7, r3, #2
   2c870:	ldr	r3, [sp, #20]
   2c874:	ldr	r2, [sp, #28]
   2c878:	sub	r3, r3, #1
   2c87c:	mul	r3, r2, r3
   2c880:	ldr	r2, [sp, #32]
   2c884:	str	r3, [sp, #44]	; 0x2c
   2c888:	ldr	r3, [sp, #20]
   2c88c:	mul	r3, r3, r7
   2c890:	str	r3, [sp, #40]	; 0x28
   2c894:	ldr	r3, [sp, #4]
   2c898:	add	r8, r3, r2
   2c89c:	ldr	r2, [sp, #8]
   2c8a0:	ldr	r3, [sp, #36]	; 0x24
   2c8a4:	sub	r3, r3, r2
   2c8a8:	lsl	r2, r2, #2
   2c8ac:	str	r2, [sp, #48]	; 0x30
   2c8b0:	ldr	r2, [sp, #28]
   2c8b4:	mls	r3, r1, r2, r3
   2c8b8:	str	r3, [sp, #24]
   2c8bc:	lsl	r3, r3, #2
   2c8c0:	str	r3, [sp, #36]	; 0x24
   2c8c4:	ldr	r3, [sp, #8]
   2c8c8:	cmp	r3, #0
   2c8cc:	beq	2c8e0 <GetDataSlab+0xaab4>
   2c8d0:	ldr	r3, [sp, #48]	; 0x30
   2c8d4:	add	r6, r6, r3
   2c8d8:	ldr	r3, [sp, #8]
   2c8dc:	add	r4, r4, r3
   2c8e0:	ldr	r3, [sp, #20]
   2c8e4:	cmp	r3, #0
   2c8e8:	ble	2c920 <GetDataSlab+0xaaf4>
   2c8ec:	ldr	r3, [sp, #4]
   2c8f0:	mov	r1, r6
   2c8f4:	add	r2, r3, fp, lsl #1
   2c8f8:	ldr	r3, [r1], r7
   2c8fc:	strh	r3, [r2], #2
   2c900:	cmp	r2, r8
   2c904:	bne	2c8f8 <GetDataSlab+0xaacc>
   2c908:	ldr	r3, [sp, #28]
   2c90c:	ldr	r2, [sp, #40]	; 0x28
   2c910:	add	r3, r4, r3
   2c914:	add	r6, r6, r2
   2c918:	ldr	r2, [sp, #44]	; 0x2c
   2c91c:	add	r4, r3, r2
   2c920:	ldr	r3, [sp, #232]	; 0xe8
   2c924:	cmp	r3, #1
   2c928:	ldr	r3, [sp, #24]
   2c92c:	add	r4, r4, r3
   2c930:	ldr	r3, [sp, #36]	; 0x24
   2c934:	add	r6, r6, r3
   2c938:	ble	33c1c <GetDataSlab+0x11df0>
   2c93c:	ldr	r3, [sp, #100]	; 0x64
   2c940:	ldr	r2, [sp, #228]	; 0xe4
   2c944:	add	r3, r3, #1
   2c948:	ldr	r1, [r2, #4]
   2c94c:	str	r3, [sp, #100]	; 0x64
   2c950:	sdiv	r2, r3, r1
   2c954:	mls	r3, r1, r2, r3
   2c958:	cmp	r3, #0
   2c95c:	bne	33c04 <GetDataSlab+0x11dd8>
   2c960:	add	ip, sp, #100	; 0x64
   2c964:	mov	r0, #1
   2c968:	ldr	lr, [sp, #12]
   2c96c:	ldr	r3, [sp, #228]	; 0xe4
   2c970:	add	r5, r3, #4
   2c974:	b	2c9bc <GetDataSlab+0xab90>
   2c978:	ldr	r3, [lr, #-4]
   2c97c:	ldr	r1, [r9, r0, lsl #2]
   2c980:	mla	r3, r1, r3, r2
   2c984:	add	r6, r6, r3, lsl #2
   2c988:	add	r4, r4, r3
   2c98c:	ldr	r3, [sp, #232]	; 0xe8
   2c990:	add	r0, r0, #1
   2c994:	cmp	r3, r0
   2c998:	beq	33c1c <GetDataSlab+0x11df0>
   2c99c:	ldr	r3, [ip]
   2c9a0:	ldr	r1, [r5, #4]!
   2c9a4:	add	r3, r3, #1
   2c9a8:	sdiv	r2, r3, r1
   2c9ac:	str	r3, [ip]
   2c9b0:	mls	r3, r1, r2, r3
   2c9b4:	cmp	r3, #0
   2c9b8:	bne	33c08 <GetDataSlab+0x11ddc>
   2c9bc:	ldr	r2, [lr, #4]!
   2c9c0:	str	sl, [ip], #4
   2c9c4:	sdiv	r3, r4, r2
   2c9c8:	mls	r3, r2, r3, r4
   2c9cc:	cmp	r3, #0
   2c9d0:	sub	r2, r2, r3
   2c9d4:	bne	2c978 <GetDataSlab+0xab4c>
   2c9d8:	ldr	r3, [r9, r0, lsl #2]
   2c9dc:	cmp	r3, #0
   2c9e0:	beq	2c98c <GetDataSlab+0xab60>
   2c9e4:	ldr	r2, [lr, #-4]
   2c9e8:	mul	r3, r2, r3
   2c9ec:	add	r6, r6, r3, lsl #2
   2c9f0:	add	r4, r4, r3
   2c9f4:	b	2c98c <GetDataSlab+0xab60>
   2c9f8:	ldr	r3, [sl]
   2c9fc:	str	r3, [sp, #28]
   2ca00:	ldr	r3, [sp, #232]	; 0xe8
   2ca04:	cmp	r3, #1
   2ca08:	ldr	r3, [r8]
   2ca0c:	str	r3, [sp, #36]	; 0x24
   2ca10:	ldr	r3, [sp, #228]	; 0xe4
   2ca14:	ldr	r3, [r3]
   2ca18:	str	r3, [sp, #20]
   2ca1c:	ldr	r3, [sp, #28]
   2ca20:	sub	r3, r3, #1
   2ca24:	str	r3, [sp, #56]	; 0x38
   2ca28:	ldr	r3, [sp, #36]	; 0x24
   2ca2c:	str	r3, [sp, #136]	; 0x88
   2ca30:	ble	3fa44 <GetDataSlab+0x1dc18>
   2ca34:	add	r6, sl, #4
   2ca38:	ldr	fp, [sp, #228]	; 0xe4
   2ca3c:	add	lr, sp, #60	; 0x3c
   2ca40:	mov	r5, r8
   2ca44:	mov	r4, #0
   2ca48:	str	r9, [sp, #24]
   2ca4c:	ldr	r3, [sp, #232]	; 0xe8
   2ca50:	add	r3, sl, r3, lsl #2
   2ca54:	ldr	sl, [sp, #12]
   2ca58:	str	r3, [sp, #32]
   2ca5c:	ldr	r3, [sp, #20]
   2ca60:	str	r3, [sp, #16]
   2ca64:	ldr	r3, [r6], #4
   2ca68:	mov	r7, sl
   2ca6c:	ldr	r0, [r5], #4
   2ca70:	sub	ip, r3, #1
   2ca74:	mov	r1, r5
   2ca78:	str	ip, [lr], #4
   2ca7c:	mov	r3, r1
   2ca80:	ldr	r2, [r1, #-4]!
   2ca84:	ldr	r3, [r3]
   2ca88:	cmp	r1, r8
   2ca8c:	mul	ip, r2, ip
   2ca90:	mul	r0, r3, r0
   2ca94:	bne	2ca7c <GetDataSlab+0xac50>
   2ca98:	ldr	r3, [sp, #32]
   2ca9c:	str	r0, [sl, #4]!
   2caa0:	ldr	r1, [r7]
   2caa4:	str	ip, [lr, #-4]
   2caa8:	cmp	r6, r3
   2caac:	ldr	r3, [sp, #24]
   2cab0:	ldr	r2, [r3, #4]!
   2cab4:	mla	r4, r2, r1, r4
   2cab8:	str	r3, [sp, #24]
   2cabc:	ldr	r3, [fp, #4]!
   2cac0:	ldr	r2, [sp, #16]
   2cac4:	mul	r3, r3, r2
   2cac8:	str	r3, [sp, #16]
   2cacc:	bne	2ca64 <GetDataSlab+0xac38>
   2cad0:	ldr	r3, [sp, #28]
   2cad4:	cmp	r3, #1
   2cad8:	ldr	r3, [sp, #8]
   2cadc:	add	r6, r3, r4, lsl #1
   2cae0:	ldr	r3, [sp, #16]
   2cae4:	beq	34874 <GetDataSlab+0x12a48>
   2cae8:	cmp	r3, #0
   2caec:	ble	30874 <GetDataSlab+0xea48>
   2caf0:	ldr	r3, [r9]
   2caf4:	mov	fp, #0
   2caf8:	mov	sl, fp
   2cafc:	ldr	r2, [sp, #20]
   2cb00:	ldr	r1, [sp, #20]
   2cb04:	str	r3, [sp, #8]
   2cb08:	ldr	r3, [sp, #28]
   2cb0c:	lsl	r2, r2, #1
   2cb10:	str	r2, [sp, #32]
   2cb14:	lsl	r7, r3, #1
   2cb18:	ldr	r3, [sp, #20]
   2cb1c:	ldr	r2, [sp, #28]
   2cb20:	sub	r3, r3, #1
   2cb24:	mul	r3, r2, r3
   2cb28:	ldr	r2, [sp, #32]
   2cb2c:	str	r3, [sp, #40]	; 0x28
   2cb30:	ldr	r3, [sp, #20]
   2cb34:	mul	r3, r3, r7
   2cb38:	str	r3, [sp, #44]	; 0x2c
   2cb3c:	ldr	r3, [sp, #4]
   2cb40:	add	r8, r3, r2
   2cb44:	ldr	r2, [sp, #8]
   2cb48:	ldr	r3, [sp, #36]	; 0x24
   2cb4c:	sub	r3, r3, r2
   2cb50:	lsl	r2, r2, #1
   2cb54:	str	r2, [sp, #48]	; 0x30
   2cb58:	ldr	r2, [sp, #28]
   2cb5c:	mls	r3, r1, r2, r3
   2cb60:	str	r3, [sp, #24]
   2cb64:	lsl	r3, r3, #1
   2cb68:	str	r3, [sp, #36]	; 0x24
   2cb6c:	ldr	r3, [sp, #8]
   2cb70:	cmp	r3, #0
   2cb74:	beq	2cb88 <GetDataSlab+0xad5c>
   2cb78:	ldr	r3, [sp, #48]	; 0x30
   2cb7c:	add	r6, r6, r3
   2cb80:	ldr	r3, [sp, #8]
   2cb84:	add	r4, r4, r3
   2cb88:	ldr	r3, [sp, #20]
   2cb8c:	cmp	r3, #0
   2cb90:	ble	2cbc8 <GetDataSlab+0xad9c>
   2cb94:	ldr	r3, [sp, #4]
   2cb98:	mov	r1, r6
   2cb9c:	add	r2, r3, fp, lsl #1
   2cba0:	ldrh	r3, [r1], r7
   2cba4:	strh	r3, [r2], #2
   2cba8:	cmp	r2, r8
   2cbac:	bne	2cba0 <GetDataSlab+0xad74>
   2cbb0:	ldr	r3, [sp, #28]
   2cbb4:	ldr	r2, [sp, #44]	; 0x2c
   2cbb8:	add	r3, r4, r3
   2cbbc:	add	r6, r6, r2
   2cbc0:	ldr	r2, [sp, #40]	; 0x28
   2cbc4:	add	r4, r2, r3
   2cbc8:	ldr	r3, [sp, #232]	; 0xe8
   2cbcc:	cmp	r3, #1
   2cbd0:	ldr	r3, [sp, #24]
   2cbd4:	add	r4, r4, r3
   2cbd8:	ldr	r3, [sp, #36]	; 0x24
   2cbdc:	add	r6, r6, r3
   2cbe0:	ble	33be4 <GetDataSlab+0x11db8>
   2cbe4:	ldr	r3, [sp, #100]	; 0x64
   2cbe8:	ldr	r2, [sp, #228]	; 0xe4
   2cbec:	add	r3, r3, #1
   2cbf0:	ldr	r1, [r2, #4]
   2cbf4:	str	r3, [sp, #100]	; 0x64
   2cbf8:	sdiv	r2, r3, r1
   2cbfc:	mls	r3, r1, r2, r3
   2cc00:	cmp	r3, #0
   2cc04:	bne	33bcc <GetDataSlab+0x11da0>
   2cc08:	add	ip, sp, #100	; 0x64
   2cc0c:	mov	r0, #1
   2cc10:	ldr	lr, [sp, #12]
   2cc14:	ldr	r3, [sp, #228]	; 0xe4
   2cc18:	add	r5, r3, #4
   2cc1c:	b	2cc64 <GetDataSlab+0xae38>
   2cc20:	ldr	r3, [lr, #-4]
   2cc24:	ldr	r1, [r9, r0, lsl #2]
   2cc28:	mla	r3, r1, r3, r2
   2cc2c:	add	r6, r6, r3, lsl #1
   2cc30:	add	r4, r4, r3
   2cc34:	ldr	r3, [sp, #232]	; 0xe8
   2cc38:	add	r0, r0, #1
   2cc3c:	cmp	r3, r0
   2cc40:	beq	33be4 <GetDataSlab+0x11db8>
   2cc44:	ldr	r3, [ip]
   2cc48:	ldr	r1, [r5, #4]!
   2cc4c:	add	r3, r3, #1
   2cc50:	sdiv	r2, r3, r1
   2cc54:	str	r3, [ip]
   2cc58:	mls	r3, r1, r2, r3
   2cc5c:	cmp	r3, #0
   2cc60:	bne	33bd0 <GetDataSlab+0x11da4>
   2cc64:	ldr	r2, [lr, #4]!
   2cc68:	str	sl, [ip], #4
   2cc6c:	sdiv	r3, r4, r2
   2cc70:	mls	r3, r2, r3, r4
   2cc74:	cmp	r3, #0
   2cc78:	sub	r2, r2, r3
   2cc7c:	bne	2cc20 <GetDataSlab+0xadf4>
   2cc80:	ldr	r3, [r9, r0, lsl #2]
   2cc84:	cmp	r3, #0
   2cc88:	beq	2cc34 <GetDataSlab+0xae08>
   2cc8c:	ldr	r2, [lr, #-4]
   2cc90:	mul	r3, r2, r3
   2cc94:	add	r6, r6, r3, lsl #1
   2cc98:	add	r4, r4, r3
   2cc9c:	b	2cc34 <GetDataSlab+0xae08>
   2cca0:	ldr	r3, [sl]
   2cca4:	str	r3, [sp, #28]
   2cca8:	ldr	r3, [sp, #232]	; 0xe8
   2ccac:	cmp	r3, #1
   2ccb0:	ldr	r3, [r8]
   2ccb4:	str	r3, [sp, #36]	; 0x24
   2ccb8:	ldr	r3, [sp, #228]	; 0xe4
   2ccbc:	ldr	r3, [r3]
   2ccc0:	str	r3, [sp, #20]
   2ccc4:	ldr	r3, [sp, #28]
   2ccc8:	sub	r3, r3, #1
   2cccc:	str	r3, [sp, #56]	; 0x38
   2ccd0:	ldr	r3, [sp, #36]	; 0x24
   2ccd4:	str	r3, [sp, #136]	; 0x88
   2ccd8:	ble	3fab4 <GetDataSlab+0x1dc88>
   2ccdc:	add	r6, sl, #4
   2cce0:	ldr	fp, [sp, #228]	; 0xe4
   2cce4:	add	lr, sp, #60	; 0x3c
   2cce8:	mov	r5, r8
   2ccec:	mov	r4, #0
   2ccf0:	str	r9, [sp, #24]
   2ccf4:	ldr	r3, [sp, #232]	; 0xe8
   2ccf8:	add	r3, sl, r3, lsl #2
   2ccfc:	ldr	sl, [sp, #12]
   2cd00:	str	r3, [sp, #32]
   2cd04:	ldr	r3, [sp, #20]
   2cd08:	str	r3, [sp, #16]
   2cd0c:	ldr	r3, [r6], #4
   2cd10:	mov	r7, sl
   2cd14:	ldr	r0, [r5], #4
   2cd18:	sub	ip, r3, #1
   2cd1c:	mov	r1, r5
   2cd20:	str	ip, [lr], #4
   2cd24:	mov	r3, r1
   2cd28:	ldr	r2, [r1, #-4]!
   2cd2c:	ldr	r3, [r3]
   2cd30:	cmp	r1, r8
   2cd34:	mul	ip, r2, ip
   2cd38:	mul	r0, r3, r0
   2cd3c:	bne	2cd24 <GetDataSlab+0xaef8>
   2cd40:	ldr	r3, [sp, #32]
   2cd44:	str	r0, [sl, #4]!
   2cd48:	ldr	r1, [r7]
   2cd4c:	str	ip, [lr, #-4]
   2cd50:	cmp	r6, r3
   2cd54:	ldr	r3, [sp, #24]
   2cd58:	ldr	r2, [r3, #4]!
   2cd5c:	mla	r4, r2, r1, r4
   2cd60:	str	r3, [sp, #24]
   2cd64:	ldr	r3, [fp, #4]!
   2cd68:	ldr	r2, [sp, #16]
   2cd6c:	mul	r3, r3, r2
   2cd70:	str	r3, [sp, #16]
   2cd74:	bne	2cd0c <GetDataSlab+0xaee0>
   2cd78:	ldr	r3, [sp, #28]
   2cd7c:	cmp	r3, #1
   2cd80:	ldr	r3, [sp, #8]
   2cd84:	add	r6, r3, r4, lsl #1
   2cd88:	ldr	r3, [sp, #16]
   2cd8c:	beq	38080 <GetDataSlab+0x16254>
   2cd90:	cmp	r3, #0
   2cd94:	ble	30874 <GetDataSlab+0xea48>
   2cd98:	ldr	r3, [r9]
   2cd9c:	mov	fp, #0
   2cda0:	mov	sl, fp
   2cda4:	ldr	r2, [sp, #20]
   2cda8:	ldr	r1, [sp, #20]
   2cdac:	str	r3, [sp, #8]
   2cdb0:	ldr	r3, [sp, #28]
   2cdb4:	lsl	r2, r2, #1
   2cdb8:	str	r2, [sp, #32]
   2cdbc:	lsl	r7, r3, #1
   2cdc0:	ldr	r3, [sp, #20]
   2cdc4:	ldr	r2, [sp, #28]
   2cdc8:	sub	r3, r3, #1
   2cdcc:	mul	r3, r2, r3
   2cdd0:	ldr	r2, [sp, #32]
   2cdd4:	str	r3, [sp, #44]	; 0x2c
   2cdd8:	ldr	r3, [sp, #20]
   2cddc:	mul	r3, r3, r7
   2cde0:	str	r3, [sp, #40]	; 0x28
   2cde4:	ldr	r3, [sp, #4]
   2cde8:	add	r8, r3, r2
   2cdec:	ldr	r2, [sp, #8]
   2cdf0:	ldr	r3, [sp, #36]	; 0x24
   2cdf4:	sub	r3, r3, r2
   2cdf8:	lsl	r2, r2, #1
   2cdfc:	str	r2, [sp, #48]	; 0x30
   2ce00:	ldr	r2, [sp, #28]
   2ce04:	mls	r3, r1, r2, r3
   2ce08:	str	r3, [sp, #24]
   2ce0c:	lsl	r3, r3, #1
   2ce10:	str	r3, [sp, #36]	; 0x24
   2ce14:	ldr	r3, [sp, #8]
   2ce18:	cmp	r3, #0
   2ce1c:	beq	2ce30 <GetDataSlab+0xb004>
   2ce20:	ldr	r3, [sp, #48]	; 0x30
   2ce24:	add	r6, r6, r3
   2ce28:	ldr	r3, [sp, #8]
   2ce2c:	add	r4, r4, r3
   2ce30:	ldr	r3, [sp, #20]
   2ce34:	cmp	r3, #0
   2ce38:	ble	2ce70 <GetDataSlab+0xb044>
   2ce3c:	ldr	r3, [sp, #4]
   2ce40:	mov	r1, r6
   2ce44:	add	r2, r3, fp, lsl #1
   2ce48:	ldrh	r3, [r1], r7
   2ce4c:	strh	r3, [r2], #2
   2ce50:	cmp	r2, r8
   2ce54:	bne	2ce48 <GetDataSlab+0xb01c>
   2ce58:	ldr	r3, [sp, #28]
   2ce5c:	ldr	r2, [sp, #40]	; 0x28
   2ce60:	add	r3, r3, r4
   2ce64:	add	r6, r6, r2
   2ce68:	ldr	r2, [sp, #44]	; 0x2c
   2ce6c:	add	r4, r3, r2
   2ce70:	ldr	r3, [sp, #232]	; 0xe8
   2ce74:	cmp	r3, #1
   2ce78:	ldr	r3, [sp, #24]
   2ce7c:	add	r4, r4, r3
   2ce80:	ldr	r3, [sp, #36]	; 0x24
   2ce84:	add	r6, r6, r3
   2ce88:	ble	33bac <GetDataSlab+0x11d80>
   2ce8c:	ldr	r3, [sp, #100]	; 0x64
   2ce90:	ldr	r2, [sp, #228]	; 0xe4
   2ce94:	add	r3, r3, #1
   2ce98:	ldr	r1, [r2, #4]
   2ce9c:	str	r3, [sp, #100]	; 0x64
   2cea0:	sdiv	r2, r3, r1
   2cea4:	mls	r3, r1, r2, r3
   2cea8:	cmp	r3, #0
   2ceac:	bne	33b94 <GetDataSlab+0x11d68>
   2ceb0:	add	ip, sp, #100	; 0x64
   2ceb4:	mov	r0, #1
   2ceb8:	ldr	lr, [sp, #12]
   2cebc:	ldr	r3, [sp, #228]	; 0xe4
   2cec0:	add	r5, r3, #4
   2cec4:	b	2cf0c <GetDataSlab+0xb0e0>
   2cec8:	ldr	r3, [lr, #-4]
   2cecc:	ldr	r1, [r9, r0, lsl #2]
   2ced0:	mla	r3, r1, r3, r2
   2ced4:	add	r6, r6, r3, lsl #1
   2ced8:	add	r4, r4, r3
   2cedc:	ldr	r3, [sp, #232]	; 0xe8
   2cee0:	add	r0, r0, #1
   2cee4:	cmp	r3, r0
   2cee8:	beq	33bac <GetDataSlab+0x11d80>
   2ceec:	ldr	r3, [ip]
   2cef0:	ldr	r1, [r5, #4]!
   2cef4:	add	r3, r3, #1
   2cef8:	sdiv	r2, r3, r1
   2cefc:	str	r3, [ip]
   2cf00:	mls	r3, r1, r2, r3
   2cf04:	cmp	r3, #0
   2cf08:	bne	33b98 <GetDataSlab+0x11d6c>
   2cf0c:	ldr	r2, [lr, #4]!
   2cf10:	str	sl, [ip], #4
   2cf14:	sdiv	r3, r4, r2
   2cf18:	mls	r3, r2, r3, r4
   2cf1c:	cmp	r3, #0
   2cf20:	sub	r2, r2, r3
   2cf24:	bne	2cec8 <GetDataSlab+0xb09c>
   2cf28:	ldr	r3, [r9, r0, lsl #2]
   2cf2c:	cmp	r3, #0
   2cf30:	beq	2cedc <GetDataSlab+0xb0b0>
   2cf34:	ldr	r2, [lr, #-4]
   2cf38:	mul	r3, r2, r3
   2cf3c:	add	r6, r6, r3, lsl #1
   2cf40:	add	r4, r4, r3
   2cf44:	b	2cedc <GetDataSlab+0xb0b0>
   2cf48:	ldr	r3, [sp, #232]	; 0xe8
   2cf4c:	ldr	r7, [sl]
   2cf50:	cmp	r3, #1
   2cf54:	ldr	r3, [r8]
   2cf58:	str	r3, [sp, #40]	; 0x28
   2cf5c:	ldr	r3, [sp, #228]	; 0xe4
   2cf60:	ldr	r3, [r3]
   2cf64:	str	r3, [sp, #20]
   2cf68:	sub	r3, r7, #1
   2cf6c:	str	r3, [sp, #56]	; 0x38
   2cf70:	ldr	r3, [sp, #40]	; 0x28
   2cf74:	str	r3, [sp, #136]	; 0x88
   2cf78:	ble	3fa84 <GetDataSlab+0x1dc58>
   2cf7c:	ldr	fp, [sp, #12]
   2cf80:	add	r6, sl, #4
   2cf84:	add	lr, sp, #60	; 0x3c
   2cf88:	mov	r5, r8
   2cf8c:	mov	r4, #0
   2cf90:	str	r9, [sp, #28]
   2cf94:	ldr	r3, [sp, #232]	; 0xe8
   2cf98:	add	r3, sl, r3, lsl #2
   2cf9c:	str	r3, [sp, #32]
   2cfa0:	ldr	r3, [sp, #228]	; 0xe4
   2cfa4:	str	r3, [sp, #24]
   2cfa8:	ldr	r3, [sp, #20]
   2cfac:	str	r3, [sp, #16]
   2cfb0:	ldr	r3, [r6], #4
   2cfb4:	mov	sl, fp
   2cfb8:	ldr	r0, [r5], #4
   2cfbc:	sub	ip, r3, #1
   2cfc0:	mov	r1, r5
   2cfc4:	str	ip, [lr], #4
   2cfc8:	mov	r3, r1
   2cfcc:	ldr	r2, [r1, #-4]!
   2cfd0:	ldr	r3, [r3]
   2cfd4:	cmp	r1, r8
   2cfd8:	mul	ip, r2, ip
   2cfdc:	mul	r0, r3, r0
   2cfe0:	bne	2cfc8 <GetDataSlab+0xb19c>
   2cfe4:	ldr	r3, [sp, #32]
   2cfe8:	str	r0, [fp, #4]!
   2cfec:	ldr	r1, [sl]
   2cff0:	str	ip, [lr, #-4]
   2cff4:	ldr	r0, [sp, #24]
   2cff8:	cmp	r6, r3
   2cffc:	ldr	r3, [sp, #28]
   2d000:	ldr	r2, [r3, #4]!
   2d004:	mla	r4, r2, r1, r4
   2d008:	str	r3, [sp, #28]
   2d00c:	ldr	r3, [r0, #4]!
   2d010:	ldr	r2, [sp, #16]
   2d014:	str	r0, [sp, #24]
   2d018:	mul	r3, r3, r2
   2d01c:	str	r3, [sp, #16]
   2d020:	bne	2cfb0 <GetDataSlab+0xb184>
   2d024:	ldr	r3, [sp, #8]
   2d028:	cmp	r7, #1
   2d02c:	add	r5, r3, r4
   2d030:	ldr	r3, [sp, #16]
   2d034:	beq	37db8 <GetDataSlab+0x15f8c>
   2d038:	cmp	r3, #0
   2d03c:	ble	30874 <GetDataSlab+0xea48>
   2d040:	ldr	r3, [r9]
   2d044:	mov	fp, #0
   2d048:	mov	sl, fp
   2d04c:	ldr	r2, [sp, #20]
   2d050:	str	r3, [sp, #8]
   2d054:	ldr	r3, [sp, #20]
   2d058:	lsl	r2, r2, #1
   2d05c:	str	r2, [sp, #28]
   2d060:	mul	r3, r7, r3
   2d064:	str	r3, [sp, #32]
   2d068:	ldr	r3, [sp, #20]
   2d06c:	sub	r3, r3, #1
   2d070:	mul	r3, r7, r3
   2d074:	str	r3, [sp, #36]	; 0x24
   2d078:	ldr	r3, [sp, #4]
   2d07c:	add	r8, r3, r2
   2d080:	ldr	r2, [sp, #8]
   2d084:	ldr	r3, [sp, #40]	; 0x28
   2d088:	sub	r3, r3, r2
   2d08c:	ldr	r2, [sp, #32]
   2d090:	sub	r3, r3, r2
   2d094:	str	r3, [sp, #24]
   2d098:	ldr	r3, [sp, #8]
   2d09c:	cmp	r3, #0
   2d0a0:	addne	r5, r5, r3
   2d0a4:	addne	r4, r4, r3
   2d0a8:	ldr	r3, [sp, #20]
   2d0ac:	cmp	r3, #0
   2d0b0:	ble	2d0e4 <GetDataSlab+0xb2b8>
   2d0b4:	ldr	r3, [sp, #4]
   2d0b8:	mov	r1, r5
   2d0bc:	add	r2, r3, fp, lsl #1
   2d0c0:	ldrb	r3, [r1], r7
   2d0c4:	strh	r3, [r2], #2
   2d0c8:	cmp	r2, r8
   2d0cc:	bne	2d0c0 <GetDataSlab+0xb294>
   2d0d0:	ldr	r2, [sp, #32]
   2d0d4:	add	r3, r4, r7
   2d0d8:	add	r5, r5, r2
   2d0dc:	ldr	r2, [sp, #36]	; 0x24
   2d0e0:	add	r4, r2, r3
   2d0e4:	ldr	r3, [sp, #232]	; 0xe8
   2d0e8:	cmp	r3, #1
   2d0ec:	ldr	r3, [sp, #24]
   2d0f0:	add	r4, r4, r3
   2d0f4:	add	r5, r5, r3
   2d0f8:	ble	33b74 <GetDataSlab+0x11d48>
   2d0fc:	ldr	r3, [sp, #100]	; 0x64
   2d100:	ldr	r2, [sp, #228]	; 0xe4
   2d104:	add	r3, r3, #1
   2d108:	ldr	r1, [r2, #4]
   2d10c:	str	r3, [sp, #100]	; 0x64
   2d110:	sdiv	r2, r3, r1
   2d114:	mls	r3, r1, r2, r3
   2d118:	cmp	r3, #0
   2d11c:	bne	33b5c <GetDataSlab+0x11d30>
   2d120:	add	ip, sp, #100	; 0x64
   2d124:	mov	r0, #1
   2d128:	ldr	lr, [sp, #12]
   2d12c:	ldr	r3, [sp, #228]	; 0xe4
   2d130:	add	r6, r3, #4
   2d134:	b	2d17c <GetDataSlab+0xb350>
   2d138:	ldr	r3, [lr, #-4]
   2d13c:	ldr	r1, [r9, r0, lsl #2]
   2d140:	mla	r3, r1, r3, r2
   2d144:	add	r5, r5, r3
   2d148:	add	r4, r4, r3
   2d14c:	ldr	r3, [sp, #232]	; 0xe8
   2d150:	add	r0, r0, #1
   2d154:	cmp	r3, r0
   2d158:	beq	33b74 <GetDataSlab+0x11d48>
   2d15c:	ldr	r3, [ip]
   2d160:	ldr	r1, [r6, #4]!
   2d164:	add	r3, r3, #1
   2d168:	sdiv	r2, r3, r1
   2d16c:	str	r3, [ip]
   2d170:	mls	r3, r1, r2, r3
   2d174:	cmp	r3, #0
   2d178:	bne	33b60 <GetDataSlab+0x11d34>
   2d17c:	ldr	r2, [lr, #4]!
   2d180:	str	sl, [ip], #4
   2d184:	sdiv	r3, r4, r2
   2d188:	mls	r3, r2, r3, r4
   2d18c:	cmp	r3, #0
   2d190:	sub	r2, r2, r3
   2d194:	bne	2d138 <GetDataSlab+0xb30c>
   2d198:	ldr	r3, [r9, r0, lsl #2]
   2d19c:	cmp	r3, #0
   2d1a0:	beq	2d14c <GetDataSlab+0xb320>
   2d1a4:	ldr	r2, [lr, #-4]
   2d1a8:	mul	r3, r2, r3
   2d1ac:	add	r5, r5, r3
   2d1b0:	add	r4, r4, r3
   2d1b4:	b	2d14c <GetDataSlab+0xb320>
   2d1b8:	ldr	r3, [sp, #232]	; 0xe8
   2d1bc:	ldr	r7, [sl]
   2d1c0:	cmp	r3, #1
   2d1c4:	ldr	r3, [r8]
   2d1c8:	str	r3, [sp, #40]	; 0x28
   2d1cc:	ldr	r3, [sp, #228]	; 0xe4
   2d1d0:	ldr	r3, [r3]
   2d1d4:	str	r3, [sp, #20]
   2d1d8:	sub	r3, r7, #1
   2d1dc:	str	r3, [sp, #56]	; 0x38
   2d1e0:	ldr	r3, [sp, #40]	; 0x28
   2d1e4:	str	r3, [sp, #136]	; 0x88
   2d1e8:	ble	3fac4 <GetDataSlab+0x1dc98>
   2d1ec:	ldr	fp, [sp, #12]
   2d1f0:	add	r6, sl, #4
   2d1f4:	add	lr, sp, #60	; 0x3c
   2d1f8:	mov	r5, r8
   2d1fc:	mov	r4, #0
   2d200:	str	r9, [sp, #28]
   2d204:	ldr	r3, [sp, #232]	; 0xe8
   2d208:	add	r3, sl, r3, lsl #2
   2d20c:	str	r3, [sp, #32]
   2d210:	ldr	r3, [sp, #228]	; 0xe4
   2d214:	str	r3, [sp, #24]
   2d218:	ldr	r3, [sp, #20]
   2d21c:	str	r3, [sp, #16]
   2d220:	ldr	r3, [r6], #4
   2d224:	mov	sl, fp
   2d228:	ldr	r0, [r5], #4
   2d22c:	sub	ip, r3, #1
   2d230:	mov	r1, r5
   2d234:	str	ip, [lr], #4
   2d238:	mov	r3, r1
   2d23c:	ldr	r2, [r1, #-4]!
   2d240:	ldr	r3, [r3]
   2d244:	cmp	r1, r8
   2d248:	mul	ip, r2, ip
   2d24c:	mul	r0, r3, r0
   2d250:	bne	2d238 <GetDataSlab+0xb40c>
   2d254:	ldr	r3, [sp, #32]
   2d258:	str	r0, [fp, #4]!
   2d25c:	ldr	r1, [sl]
   2d260:	str	ip, [lr, #-4]
   2d264:	ldr	r0, [sp, #24]
   2d268:	cmp	r6, r3
   2d26c:	ldr	r3, [sp, #28]
   2d270:	ldr	r2, [r3, #4]!
   2d274:	mla	r4, r2, r1, r4
   2d278:	str	r3, [sp, #28]
   2d27c:	ldr	r3, [r0, #4]!
   2d280:	ldr	r2, [sp, #16]
   2d284:	str	r0, [sp, #24]
   2d288:	mul	r3, r3, r2
   2d28c:	str	r3, [sp, #16]
   2d290:	bne	2d220 <GetDataSlab+0xb3f4>
   2d294:	ldr	r3, [sp, #8]
   2d298:	cmp	r7, #1
   2d29c:	add	r5, r3, r4
   2d2a0:	ldr	r3, [sp, #16]
   2d2a4:	beq	37f1c <GetDataSlab+0x160f0>
   2d2a8:	cmp	r3, #0
   2d2ac:	ble	30874 <GetDataSlab+0xea48>
   2d2b0:	ldr	r3, [r9]
   2d2b4:	mov	fp, #0
   2d2b8:	mov	sl, fp
   2d2bc:	ldr	r2, [sp, #20]
   2d2c0:	str	r3, [sp, #8]
   2d2c4:	ldr	r3, [sp, #20]
   2d2c8:	lsl	r2, r2, #1
   2d2cc:	str	r2, [sp, #28]
   2d2d0:	mul	r3, r7, r3
   2d2d4:	str	r3, [sp, #32]
   2d2d8:	ldr	r3, [sp, #20]
   2d2dc:	sub	r3, r3, #1
   2d2e0:	mul	r3, r7, r3
   2d2e4:	str	r3, [sp, #36]	; 0x24
   2d2e8:	ldr	r3, [sp, #4]
   2d2ec:	add	r8, r3, r2
   2d2f0:	ldr	r2, [sp, #8]
   2d2f4:	ldr	r3, [sp, #40]	; 0x28
   2d2f8:	sub	r3, r3, r2
   2d2fc:	ldr	r2, [sp, #32]
   2d300:	sub	r3, r3, r2
   2d304:	str	r3, [sp, #24]
   2d308:	ldr	r3, [sp, #8]
   2d30c:	cmp	r3, #0
   2d310:	addne	r5, r5, r3
   2d314:	addne	r4, r4, r3
   2d318:	ldr	r3, [sp, #20]
   2d31c:	cmp	r3, #0
   2d320:	ble	2d354 <GetDataSlab+0xb528>
   2d324:	ldr	r3, [sp, #4]
   2d328:	mov	r1, r5
   2d32c:	add	r2, r3, fp, lsl #1
   2d330:	ldrsb	r3, [r1], r7
   2d334:	strh	r3, [r2], #2
   2d338:	cmp	r2, r8
   2d33c:	bne	2d330 <GetDataSlab+0xb504>
   2d340:	ldr	r2, [sp, #32]
   2d344:	add	r3, r4, r7
   2d348:	add	r5, r5, r2
   2d34c:	ldr	r2, [sp, #36]	; 0x24
   2d350:	add	r4, r3, r2
   2d354:	ldr	r3, [sp, #232]	; 0xe8
   2d358:	cmp	r3, #1
   2d35c:	ldr	r3, [sp, #24]
   2d360:	add	r4, r4, r3
   2d364:	add	r5, r5, r3
   2d368:	ble	33b3c <GetDataSlab+0x11d10>
   2d36c:	ldr	r3, [sp, #100]	; 0x64
   2d370:	ldr	r2, [sp, #228]	; 0xe4
   2d374:	add	r3, r3, #1
   2d378:	ldr	r1, [r2, #4]
   2d37c:	str	r3, [sp, #100]	; 0x64
   2d380:	sdiv	r2, r3, r1
   2d384:	mls	r3, r1, r2, r3
   2d388:	cmp	r3, #0
   2d38c:	bne	33b24 <GetDataSlab+0x11cf8>
   2d390:	add	ip, sp, #100	; 0x64
   2d394:	mov	r0, #1
   2d398:	ldr	lr, [sp, #12]
   2d39c:	ldr	r3, [sp, #228]	; 0xe4
   2d3a0:	add	r6, r3, #4
   2d3a4:	b	2d3ec <GetDataSlab+0xb5c0>
   2d3a8:	ldr	r3, [lr, #-4]
   2d3ac:	ldr	r1, [r9, r0, lsl #2]
   2d3b0:	mla	r3, r1, r3, r2
   2d3b4:	add	r5, r5, r3
   2d3b8:	add	r4, r4, r3
   2d3bc:	ldr	r3, [sp, #232]	; 0xe8
   2d3c0:	add	r0, r0, #1
   2d3c4:	cmp	r3, r0
   2d3c8:	beq	33b3c <GetDataSlab+0x11d10>
   2d3cc:	ldr	r3, [ip]
   2d3d0:	ldr	r1, [r6, #4]!
   2d3d4:	add	r3, r3, #1
   2d3d8:	sdiv	r2, r3, r1
   2d3dc:	str	r3, [ip]
   2d3e0:	mls	r3, r1, r2, r3
   2d3e4:	cmp	r3, #0
   2d3e8:	bne	33b28 <GetDataSlab+0x11cfc>
   2d3ec:	ldr	r2, [lr, #4]!
   2d3f0:	str	sl, [ip], #4
   2d3f4:	sdiv	r3, r4, r2
   2d3f8:	mls	r3, r2, r3, r4
   2d3fc:	cmp	r3, #0
   2d400:	sub	r2, r2, r3
   2d404:	bne	2d3a8 <GetDataSlab+0xb57c>
   2d408:	ldr	r3, [r9, r0, lsl #2]
   2d40c:	cmp	r3, #0
   2d410:	beq	2d3bc <GetDataSlab+0xb590>
   2d414:	ldr	r2, [lr, #-4]
   2d418:	mul	r3, r2, r3
   2d41c:	add	r5, r5, r3
   2d420:	add	r4, r4, r3
   2d424:	b	2d3bc <GetDataSlab+0xb590>
   2d428:	ldr	r3, [sl]
   2d42c:	str	r3, [sp, #28]
   2d430:	ldr	r3, [sp, #232]	; 0xe8
   2d434:	cmp	r3, #1
   2d438:	ldr	r3, [r8]
   2d43c:	str	r3, [sp, #36]	; 0x24
   2d440:	ldr	r3, [sp, #228]	; 0xe4
   2d444:	ldr	r3, [r3]
   2d448:	str	r3, [sp, #20]
   2d44c:	ldr	r3, [sp, #28]
   2d450:	sub	r3, r3, #1
   2d454:	str	r3, [sp, #56]	; 0x38
   2d458:	ldr	r3, [sp, #36]	; 0x24
   2d45c:	str	r3, [sp, #136]	; 0x88
   2d460:	ble	3fae4 <GetDataSlab+0x1dcb8>
   2d464:	add	r6, sl, #4
   2d468:	ldr	fp, [sp, #228]	; 0xe4
   2d46c:	add	lr, sp, #60	; 0x3c
   2d470:	mov	r5, r8
   2d474:	mov	r4, #0
   2d478:	str	r9, [sp, #24]
   2d47c:	ldr	r3, [sp, #232]	; 0xe8
   2d480:	add	r3, sl, r3, lsl #2
   2d484:	ldr	sl, [sp, #12]
   2d488:	str	r3, [sp, #32]
   2d48c:	ldr	r3, [sp, #20]
   2d490:	str	r3, [sp, #16]
   2d494:	ldr	r3, [r6], #4
   2d498:	mov	r7, sl
   2d49c:	ldr	r0, [r5], #4
   2d4a0:	sub	ip, r3, #1
   2d4a4:	mov	r1, r5
   2d4a8:	str	ip, [lr], #4
   2d4ac:	mov	r3, r1
   2d4b0:	ldr	r2, [r1, #-4]!
   2d4b4:	ldr	r3, [r3]
   2d4b8:	cmp	r1, r8
   2d4bc:	mul	ip, r2, ip
   2d4c0:	mul	r0, r3, r0
   2d4c4:	bne	2d4ac <GetDataSlab+0xb680>
   2d4c8:	ldr	r3, [sp, #32]
   2d4cc:	str	r0, [sl, #4]!
   2d4d0:	ldr	r1, [r7]
   2d4d4:	str	ip, [lr, #-4]
   2d4d8:	cmp	r6, r3
   2d4dc:	ldr	r3, [sp, #24]
   2d4e0:	ldr	r2, [r3, #4]!
   2d4e4:	mla	r4, r2, r1, r4
   2d4e8:	str	r3, [sp, #24]
   2d4ec:	ldr	r3, [fp, #4]!
   2d4f0:	ldr	r2, [sp, #16]
   2d4f4:	mul	r3, r3, r2
   2d4f8:	str	r3, [sp, #16]
   2d4fc:	bne	2d494 <GetDataSlab+0xb668>
   2d500:	ldr	r3, [sp, #28]
   2d504:	cmp	r3, #1
   2d508:	ldr	r3, [sp, #8]
   2d50c:	add	r6, r3, r4, lsl #3
   2d510:	ldr	r3, [sp, #16]
   2d514:	beq	36454 <GetDataSlab+0x14628>
   2d518:	cmp	r3, #0
   2d51c:	ble	30874 <GetDataSlab+0xea48>
   2d520:	ldr	r3, [r9]
   2d524:	mov	fp, #0
   2d528:	mov	r8, fp
   2d52c:	ldr	r2, [sp, #20]
   2d530:	ldr	r1, [sp, #20]
   2d534:	str	r3, [sp, #8]
   2d538:	ldr	r3, [sp, #28]
   2d53c:	lsl	r2, r2, #1
   2d540:	str	r2, [sp, #32]
   2d544:	lsl	sl, r3, #3
   2d548:	ldr	r3, [sp, #20]
   2d54c:	ldr	r2, [sp, #28]
   2d550:	sub	r3, r3, #1
   2d554:	mul	r3, r2, r3
   2d558:	ldr	r2, [sp, #32]
   2d55c:	str	r3, [sp, #40]	; 0x28
   2d560:	ldr	r3, [sp, #20]
   2d564:	mul	r3, r3, sl
   2d568:	str	r3, [sp, #44]	; 0x2c
   2d56c:	ldr	r3, [sp, #4]
   2d570:	add	r7, r3, r2
   2d574:	ldr	r2, [sp, #8]
   2d578:	ldr	r3, [sp, #36]	; 0x24
   2d57c:	sub	r3, r3, r2
   2d580:	lsl	r2, r2, #3
   2d584:	str	r2, [sp, #48]	; 0x30
   2d588:	ldr	r2, [sp, #28]
   2d58c:	mls	r3, r1, r2, r3
   2d590:	str	r3, [sp, #24]
   2d594:	lsl	r3, r3, #3
   2d598:	str	r3, [sp, #36]	; 0x24
   2d59c:	ldr	r3, [sp, #8]
   2d5a0:	cmp	r3, #0
   2d5a4:	beq	2d5b8 <GetDataSlab+0xb78c>
   2d5a8:	ldr	r3, [sp, #48]	; 0x30
   2d5ac:	add	r6, r6, r3
   2d5b0:	ldr	r3, [sp, #8]
   2d5b4:	add	r4, r4, r3
   2d5b8:	ldr	r3, [sp, #20]
   2d5bc:	cmp	r3, #0
   2d5c0:	ble	2d604 <GetDataSlab+0xb7d8>
   2d5c4:	ldr	r3, [sp, #4]
   2d5c8:	mov	r1, r6
   2d5cc:	add	r2, r3, fp, lsl #1
   2d5d0:	vldr	d7, [r1]
   2d5d4:	add	r1, r1, sl
   2d5d8:	vcvt.s32.f64	s15, d7
   2d5dc:	vmov	r3, s15
   2d5e0:	strh	r3, [r2], #2
   2d5e4:	cmp	r2, r7
   2d5e8:	bne	2d5d0 <GetDataSlab+0xb7a4>
   2d5ec:	ldr	r3, [sp, #28]
   2d5f0:	ldr	r2, [sp, #44]	; 0x2c
   2d5f4:	add	r3, r3, r4
   2d5f8:	add	r6, r6, r2
   2d5fc:	ldr	r2, [sp, #40]	; 0x28
   2d600:	add	r4, r2, r3
   2d604:	ldr	r3, [sp, #232]	; 0xe8
   2d608:	cmp	r3, #1
   2d60c:	ldr	r3, [sp, #24]
   2d610:	add	r4, r4, r3
   2d614:	ldr	r3, [sp, #36]	; 0x24
   2d618:	add	r6, r6, r3
   2d61c:	ble	33b04 <GetDataSlab+0x11cd8>
   2d620:	ldr	r3, [sp, #100]	; 0x64
   2d624:	ldr	r2, [sp, #228]	; 0xe4
   2d628:	add	r3, r3, #1
   2d62c:	ldr	r1, [r2, #4]
   2d630:	str	r3, [sp, #100]	; 0x64
   2d634:	sdiv	r2, r3, r1
   2d638:	mls	r3, r1, r2, r3
   2d63c:	cmp	r3, #0
   2d640:	bne	33aec <GetDataSlab+0x11cc0>
   2d644:	add	ip, sp, #100	; 0x64
   2d648:	mov	r0, #1
   2d64c:	ldr	lr, [sp, #12]
   2d650:	ldr	r3, [sp, #228]	; 0xe4
   2d654:	add	r5, r3, #4
   2d658:	b	2d6a0 <GetDataSlab+0xb874>
   2d65c:	ldr	r3, [lr, #-4]
   2d660:	ldr	r1, [r9, r0, lsl #2]
   2d664:	mla	r3, r1, r3, r2
   2d668:	add	r6, r6, r3, lsl #3
   2d66c:	add	r4, r4, r3
   2d670:	ldr	r3, [sp, #232]	; 0xe8
   2d674:	add	r0, r0, #1
   2d678:	cmp	r3, r0
   2d67c:	beq	33b04 <GetDataSlab+0x11cd8>
   2d680:	ldr	r3, [ip]
   2d684:	ldr	r1, [r5, #4]!
   2d688:	add	r3, r3, #1
   2d68c:	sdiv	r2, r3, r1
   2d690:	str	r3, [ip]
   2d694:	mls	r3, r1, r2, r3
   2d698:	cmp	r3, #0
   2d69c:	bne	33af0 <GetDataSlab+0x11cc4>
   2d6a0:	ldr	r2, [lr, #4]!
   2d6a4:	str	r8, [ip], #4
   2d6a8:	sdiv	r3, r4, r2
   2d6ac:	mls	r3, r2, r3, r4
   2d6b0:	cmp	r3, #0
   2d6b4:	sub	r2, r2, r3
   2d6b8:	bne	2d65c <GetDataSlab+0xb830>
   2d6bc:	ldr	r3, [r9, r0, lsl #2]
   2d6c0:	cmp	r3, #0
   2d6c4:	beq	2d670 <GetDataSlab+0xb844>
   2d6c8:	ldr	r2, [lr, #-4]
   2d6cc:	mul	r3, r2, r3
   2d6d0:	add	r6, r6, r3, lsl #3
   2d6d4:	add	r4, r4, r3
   2d6d8:	b	2d670 <GetDataSlab+0xb844>
   2d6dc:	ldr	r3, [sl]
   2d6e0:	str	r3, [sp, #28]
   2d6e4:	ldr	r3, [sp, #232]	; 0xe8
   2d6e8:	cmp	r3, #1
   2d6ec:	ldr	r3, [r8]
   2d6f0:	str	r3, [sp, #36]	; 0x24
   2d6f4:	ldr	r3, [sp, #228]	; 0xe4
   2d6f8:	ldr	r3, [r3]
   2d6fc:	str	r3, [sp, #20]
   2d700:	ldr	r3, [sp, #28]
   2d704:	sub	r3, r3, #1
   2d708:	str	r3, [sp, #56]	; 0x38
   2d70c:	ldr	r3, [sp, #36]	; 0x24
   2d710:	str	r3, [sp, #136]	; 0x88
   2d714:	ble	3f9c4 <GetDataSlab+0x1db98>
   2d718:	add	r6, sl, #4
   2d71c:	ldr	fp, [sp, #228]	; 0xe4
   2d720:	add	lr, sp, #60	; 0x3c
   2d724:	mov	r5, r8
   2d728:	mov	r4, #0
   2d72c:	str	r9, [sp, #24]
   2d730:	ldr	r3, [sp, #232]	; 0xe8
   2d734:	add	r3, sl, r3, lsl #2
   2d738:	ldr	sl, [sp, #12]
   2d73c:	str	r3, [sp, #32]
   2d740:	ldr	r3, [sp, #20]
   2d744:	str	r3, [sp, #16]
   2d748:	ldr	r3, [r6], #4
   2d74c:	mov	r7, sl
   2d750:	ldr	r0, [r5], #4
   2d754:	sub	ip, r3, #1
   2d758:	mov	r1, r5
   2d75c:	str	ip, [lr], #4
   2d760:	mov	r3, r1
   2d764:	ldr	r2, [r1, #-4]!
   2d768:	ldr	r3, [r3]
   2d76c:	cmp	r1, r8
   2d770:	mul	ip, r2, ip
   2d774:	mul	r0, r3, r0
   2d778:	bne	2d760 <GetDataSlab+0xb934>
   2d77c:	ldr	r3, [sp, #32]
   2d780:	str	r0, [sl, #4]!
   2d784:	ldr	r1, [r7]
   2d788:	str	ip, [lr, #-4]
   2d78c:	cmp	r6, r3
   2d790:	ldr	r3, [sp, #24]
   2d794:	ldr	r2, [r3, #4]!
   2d798:	mla	r4, r2, r1, r4
   2d79c:	str	r3, [sp, #24]
   2d7a0:	ldr	r3, [fp, #4]!
   2d7a4:	ldr	r2, [sp, #16]
   2d7a8:	mul	r3, r3, r2
   2d7ac:	str	r3, [sp, #16]
   2d7b0:	bne	2d748 <GetDataSlab+0xb91c>
   2d7b4:	ldr	r3, [sp, #28]
   2d7b8:	cmp	r3, #1
   2d7bc:	ldr	r3, [sp, #8]
   2d7c0:	add	r6, r3, r4, lsl #2
   2d7c4:	ldr	r3, [sp, #16]
   2d7c8:	beq	38f24 <GetDataSlab+0x170f8>
   2d7cc:	cmp	r3, #0
   2d7d0:	ble	30874 <GetDataSlab+0xea48>
   2d7d4:	ldr	r3, [r9]
   2d7d8:	mov	fp, #0
   2d7dc:	mov	r8, fp
   2d7e0:	ldr	r2, [sp, #20]
   2d7e4:	ldr	r1, [sp, #20]
   2d7e8:	str	r3, [sp, #8]
   2d7ec:	ldr	r3, [sp, #28]
   2d7f0:	lsl	r2, r2, #1
   2d7f4:	str	r2, [sp, #32]
   2d7f8:	lsl	sl, r3, #2
   2d7fc:	ldr	r3, [sp, #20]
   2d800:	ldr	r2, [sp, #28]
   2d804:	sub	r3, r3, #1
   2d808:	mul	r3, r2, r3
   2d80c:	ldr	r2, [sp, #32]
   2d810:	str	r3, [sp, #44]	; 0x2c
   2d814:	ldr	r3, [sp, #20]
   2d818:	mul	r3, r3, sl
   2d81c:	str	r3, [sp, #40]	; 0x28
   2d820:	ldr	r3, [sp, #4]
   2d824:	add	r7, r3, r2
   2d828:	ldr	r2, [sp, #8]
   2d82c:	ldr	r3, [sp, #36]	; 0x24
   2d830:	sub	r3, r3, r2
   2d834:	lsl	r2, r2, #2
   2d838:	str	r2, [sp, #48]	; 0x30
   2d83c:	ldr	r2, [sp, #28]
   2d840:	mls	r3, r1, r2, r3
   2d844:	str	r3, [sp, #24]
   2d848:	lsl	r3, r3, #2
   2d84c:	str	r3, [sp, #36]	; 0x24
   2d850:	ldr	r3, [sp, #8]
   2d854:	cmp	r3, #0
   2d858:	beq	2d86c <GetDataSlab+0xba40>
   2d85c:	ldr	r3, [sp, #48]	; 0x30
   2d860:	add	r6, r6, r3
   2d864:	ldr	r3, [sp, #8]
   2d868:	add	r4, r4, r3
   2d86c:	ldr	r3, [sp, #20]
   2d870:	cmp	r3, #0
   2d874:	ble	2d8b8 <GetDataSlab+0xba8c>
   2d878:	ldr	r3, [sp, #4]
   2d87c:	mov	r1, r6
   2d880:	add	r2, r3, fp, lsl #1
   2d884:	vldr	s15, [r1]
   2d888:	add	r1, r1, sl
   2d88c:	vcvt.s32.f32	s15, s15
   2d890:	vmov	r3, s15
   2d894:	strh	r3, [r2], #2
   2d898:	cmp	r2, r7
   2d89c:	bne	2d884 <GetDataSlab+0xba58>
   2d8a0:	ldr	r3, [sp, #28]
   2d8a4:	ldr	r2, [sp, #40]	; 0x28
   2d8a8:	add	r3, r3, r4
   2d8ac:	add	r6, r6, r2
   2d8b0:	ldr	r2, [sp, #44]	; 0x2c
   2d8b4:	add	r4, r3, r2
   2d8b8:	ldr	r3, [sp, #232]	; 0xe8
   2d8bc:	cmp	r3, #1
   2d8c0:	ldr	r3, [sp, #24]
   2d8c4:	add	r4, r4, r3
   2d8c8:	ldr	r3, [sp, #36]	; 0x24
   2d8cc:	add	r6, r6, r3
   2d8d0:	ble	33acc <GetDataSlab+0x11ca0>
   2d8d4:	ldr	r3, [sp, #100]	; 0x64
   2d8d8:	ldr	r2, [sp, #228]	; 0xe4
   2d8dc:	add	r3, r3, #1
   2d8e0:	ldr	r1, [r2, #4]
   2d8e4:	str	r3, [sp, #100]	; 0x64
   2d8e8:	sdiv	r2, r3, r1
   2d8ec:	mls	r3, r1, r2, r3
   2d8f0:	cmp	r3, #0
   2d8f4:	bne	33ab4 <GetDataSlab+0x11c88>
   2d8f8:	add	ip, sp, #100	; 0x64
   2d8fc:	mov	r0, #1
   2d900:	ldr	lr, [sp, #12]
   2d904:	ldr	r3, [sp, #228]	; 0xe4
   2d908:	add	r5, r3, #4
   2d90c:	b	2d954 <GetDataSlab+0xbb28>
   2d910:	ldr	r3, [lr, #-4]
   2d914:	ldr	r1, [r9, r0, lsl #2]
   2d918:	mla	r3, r1, r3, r2
   2d91c:	add	r6, r6, r3, lsl #2
   2d920:	add	r4, r4, r3
   2d924:	ldr	r3, [sp, #232]	; 0xe8
   2d928:	add	r0, r0, #1
   2d92c:	cmp	r3, r0
   2d930:	beq	33acc <GetDataSlab+0x11ca0>
   2d934:	ldr	r3, [ip]
   2d938:	ldr	r1, [r5, #4]!
   2d93c:	add	r3, r3, #1
   2d940:	sdiv	r2, r3, r1
   2d944:	str	r3, [ip]
   2d948:	mls	r3, r1, r2, r3
   2d94c:	cmp	r3, #0
   2d950:	bne	33ab8 <GetDataSlab+0x11c8c>
   2d954:	ldr	r2, [lr, #4]!
   2d958:	str	r8, [ip], #4
   2d95c:	sdiv	r3, r4, r2
   2d960:	mls	r3, r2, r3, r4
   2d964:	cmp	r3, #0
   2d968:	sub	r2, r2, r3
   2d96c:	bne	2d910 <GetDataSlab+0xbae4>
   2d970:	ldr	r3, [r9, r0, lsl #2]
   2d974:	cmp	r3, #0
   2d978:	beq	2d924 <GetDataSlab+0xbaf8>
   2d97c:	ldr	r2, [lr, #-4]
   2d980:	mul	r3, r2, r3
   2d984:	add	r6, r6, r3, lsl #2
   2d988:	add	r4, r4, r3
   2d98c:	b	2d924 <GetDataSlab+0xbaf8>
   2d990:	ldr	r3, [sl]
   2d994:	str	r3, [sp, #28]
   2d998:	ldr	r3, [sp, #232]	; 0xe8
   2d99c:	cmp	r3, #1
   2d9a0:	ldr	r3, [r8]
   2d9a4:	str	r3, [sp, #36]	; 0x24
   2d9a8:	ldr	r3, [sp, #228]	; 0xe4
   2d9ac:	ldr	r3, [r3]
   2d9b0:	str	r3, [sp, #20]
   2d9b4:	ldr	r3, [sp, #28]
   2d9b8:	sub	r3, r3, #1
   2d9bc:	str	r3, [sp, #56]	; 0x38
   2d9c0:	ldr	r3, [sp, #36]	; 0x24
   2d9c4:	str	r3, [sp, #136]	; 0x88
   2d9c8:	ble	3f9e4 <GetDataSlab+0x1dbb8>
   2d9cc:	add	r6, sl, #4
   2d9d0:	ldr	fp, [sp, #228]	; 0xe4
   2d9d4:	add	lr, sp, #60	; 0x3c
   2d9d8:	mov	r5, r8
   2d9dc:	mov	r4, #0
   2d9e0:	str	r9, [sp, #24]
   2d9e4:	ldr	r3, [sp, #232]	; 0xe8
   2d9e8:	add	r3, sl, r3, lsl #2
   2d9ec:	ldr	sl, [sp, #12]
   2d9f0:	str	r3, [sp, #32]
   2d9f4:	ldr	r3, [sp, #20]
   2d9f8:	str	r3, [sp, #16]
   2d9fc:	ldr	r3, [r6], #4
   2da00:	mov	r7, sl
   2da04:	ldr	r0, [r5], #4
   2da08:	sub	ip, r3, #1
   2da0c:	mov	r1, r5
   2da10:	str	ip, [lr], #4
   2da14:	mov	r3, r1
   2da18:	ldr	r2, [r1, #-4]!
   2da1c:	ldr	r3, [r3]
   2da20:	cmp	r1, r8
   2da24:	mul	ip, r2, ip
   2da28:	mul	r0, r3, r0
   2da2c:	bne	2da14 <GetDataSlab+0xbbe8>
   2da30:	ldr	r3, [sp, #32]
   2da34:	str	r0, [sl, #4]!
   2da38:	ldr	r1, [r7]
   2da3c:	str	ip, [lr, #-4]
   2da40:	cmp	r6, r3
   2da44:	ldr	r3, [sp, #24]
   2da48:	ldr	r2, [r3, #4]!
   2da4c:	mla	r4, r2, r1, r4
   2da50:	str	r3, [sp, #24]
   2da54:	ldr	r3, [fp, #4]!
   2da58:	ldr	r2, [sp, #16]
   2da5c:	mul	r3, r3, r2
   2da60:	str	r3, [sp, #16]
   2da64:	bne	2d9fc <GetDataSlab+0xbbd0>
   2da68:	ldr	r3, [sp, #28]
   2da6c:	cmp	r3, #1
   2da70:	ldr	r3, [sp, #8]
   2da74:	add	r6, r3, r4, lsl #2
   2da78:	ldr	r3, [sp, #16]
   2da7c:	beq	38c24 <GetDataSlab+0x16df8>
   2da80:	cmp	r3, #0
   2da84:	ble	30874 <GetDataSlab+0xea48>
   2da88:	ldr	r3, [r9]
   2da8c:	mov	fp, #0
   2da90:	mov	sl, fp
   2da94:	ldr	r2, [sp, #20]
   2da98:	ldr	r1, [sp, #20]
   2da9c:	str	r3, [sp, #8]
   2daa0:	ldr	r3, [sp, #28]
   2daa4:	lsl	r2, r2, #1
   2daa8:	str	r2, [sp, #32]
   2daac:	lsl	r7, r3, #2
   2dab0:	ldr	r3, [sp, #20]
   2dab4:	ldr	r2, [sp, #28]
   2dab8:	sub	r3, r3, #1
   2dabc:	mul	r3, r2, r3
   2dac0:	ldr	r2, [sp, #32]
   2dac4:	str	r3, [sp, #40]	; 0x28
   2dac8:	ldr	r3, [sp, #20]
   2dacc:	mul	r3, r3, r7
   2dad0:	str	r3, [sp, #44]	; 0x2c
   2dad4:	ldr	r3, [sp, #4]
   2dad8:	add	r8, r3, r2
   2dadc:	ldr	r2, [sp, #8]
   2dae0:	ldr	r3, [sp, #36]	; 0x24
   2dae4:	sub	r3, r3, r2
   2dae8:	lsl	r2, r2, #2
   2daec:	str	r2, [sp, #48]	; 0x30
   2daf0:	ldr	r2, [sp, #28]
   2daf4:	mls	r3, r1, r2, r3
   2daf8:	str	r3, [sp, #24]
   2dafc:	lsl	r3, r3, #2
   2db00:	str	r3, [sp, #36]	; 0x24
   2db04:	ldr	r3, [sp, #8]
   2db08:	cmp	r3, #0
   2db0c:	beq	2db20 <GetDataSlab+0xbcf4>
   2db10:	ldr	r3, [sp, #48]	; 0x30
   2db14:	add	r6, r6, r3
   2db18:	ldr	r3, [sp, #8]
   2db1c:	add	r4, r4, r3
   2db20:	ldr	r3, [sp, #20]
   2db24:	cmp	r3, #0
   2db28:	ble	2db60 <GetDataSlab+0xbd34>
   2db2c:	ldr	r3, [sp, #4]
   2db30:	mov	r1, r6
   2db34:	add	r2, r3, fp, lsl #1
   2db38:	ldr	r3, [r1], r7
   2db3c:	strh	r3, [r2], #2
   2db40:	cmp	r2, r8
   2db44:	bne	2db38 <GetDataSlab+0xbd0c>
   2db48:	ldr	r3, [sp, #28]
   2db4c:	ldr	r2, [sp, #44]	; 0x2c
   2db50:	add	r3, r4, r3
   2db54:	add	r6, r6, r2
   2db58:	ldr	r2, [sp, #40]	; 0x28
   2db5c:	add	r4, r3, r2
   2db60:	ldr	r3, [sp, #232]	; 0xe8
   2db64:	cmp	r3, #1
   2db68:	ldr	r3, [sp, #24]
   2db6c:	add	r4, r4, r3
   2db70:	ldr	r3, [sp, #36]	; 0x24
   2db74:	add	r6, r6, r3
   2db78:	ble	33a94 <GetDataSlab+0x11c68>
   2db7c:	ldr	r3, [sp, #100]	; 0x64
   2db80:	ldr	r2, [sp, #228]	; 0xe4
   2db84:	add	r3, r3, #1
   2db88:	ldr	r1, [r2, #4]
   2db8c:	str	r3, [sp, #100]	; 0x64
   2db90:	sdiv	r2, r3, r1
   2db94:	mls	r3, r1, r2, r3
   2db98:	cmp	r3, #0
   2db9c:	bne	33a7c <GetDataSlab+0x11c50>
   2dba0:	add	ip, sp, #100	; 0x64
   2dba4:	mov	r0, #1
   2dba8:	ldr	lr, [sp, #12]
   2dbac:	ldr	r3, [sp, #228]	; 0xe4
   2dbb0:	add	r5, r3, #4
   2dbb4:	b	2dbfc <GetDataSlab+0xbdd0>
   2dbb8:	ldr	r3, [lr, #-4]
   2dbbc:	ldr	r1, [r9, r0, lsl #2]
   2dbc0:	mla	r3, r1, r3, r2
   2dbc4:	add	r6, r6, r3, lsl #2
   2dbc8:	add	r4, r4, r3
   2dbcc:	ldr	r3, [sp, #232]	; 0xe8
   2dbd0:	add	r0, r0, #1
   2dbd4:	cmp	r3, r0
   2dbd8:	beq	33a94 <GetDataSlab+0x11c68>
   2dbdc:	ldr	r3, [ip]
   2dbe0:	ldr	r1, [r5, #4]!
   2dbe4:	add	r3, r3, #1
   2dbe8:	sdiv	r2, r3, r1
   2dbec:	str	r3, [ip]
   2dbf0:	mls	r3, r1, r2, r3
   2dbf4:	cmp	r3, #0
   2dbf8:	bne	33a80 <GetDataSlab+0x11c54>
   2dbfc:	ldr	r2, [lr, #4]!
   2dc00:	str	sl, [ip], #4
   2dc04:	sdiv	r3, r4, r2
   2dc08:	mls	r3, r2, r3, r4
   2dc0c:	cmp	r3, #0
   2dc10:	sub	r2, r2, r3
   2dc14:	bne	2dbb8 <GetDataSlab+0xbd8c>
   2dc18:	ldr	r3, [r9, r0, lsl #2]
   2dc1c:	cmp	r3, #0
   2dc20:	beq	2dbcc <GetDataSlab+0xbda0>
   2dc24:	ldr	r2, [lr, #-4]
   2dc28:	mul	r3, r2, r3
   2dc2c:	add	r6, r6, r3, lsl #2
   2dc30:	add	r4, r4, r3
   2dc34:	b	2dbcc <GetDataSlab+0xbda0>
   2dc38:	ldr	r3, [sl]
   2dc3c:	str	r3, [sp, #28]
   2dc40:	ldr	r3, [sp, #232]	; 0xe8
   2dc44:	cmp	r3, #1
   2dc48:	ldr	r3, [r8]
   2dc4c:	str	r3, [sp, #36]	; 0x24
   2dc50:	ldr	r3, [sp, #228]	; 0xe4
   2dc54:	ldr	r3, [r3]
   2dc58:	str	r3, [sp, #20]
   2dc5c:	ldr	r3, [sp, #28]
   2dc60:	sub	r3, r3, #1
   2dc64:	str	r3, [sp, #56]	; 0x38
   2dc68:	ldr	r3, [sp, #36]	; 0x24
   2dc6c:	str	r3, [sp, #136]	; 0x88
   2dc70:	ble	3f9d4 <GetDataSlab+0x1dba8>
   2dc74:	add	r6, sl, #4
   2dc78:	ldr	fp, [sp, #228]	; 0xe4
   2dc7c:	add	lr, sp, #60	; 0x3c
   2dc80:	mov	r5, r8
   2dc84:	mov	r4, #0
   2dc88:	str	r9, [sp, #24]
   2dc8c:	ldr	r3, [sp, #232]	; 0xe8
   2dc90:	add	r3, sl, r3, lsl #2
   2dc94:	ldr	sl, [sp, #12]
   2dc98:	str	r3, [sp, #32]
   2dc9c:	ldr	r3, [sp, #20]
   2dca0:	str	r3, [sp, #16]
   2dca4:	ldr	r3, [r6], #4
   2dca8:	mov	r7, sl
   2dcac:	ldr	r0, [r5], #4
   2dcb0:	sub	ip, r3, #1
   2dcb4:	mov	r1, r5
   2dcb8:	str	ip, [lr], #4
   2dcbc:	mov	r3, r1
   2dcc0:	ldr	r2, [r1, #-4]!
   2dcc4:	ldr	r3, [r3]
   2dcc8:	cmp	r1, r8
   2dccc:	mul	ip, r2, ip
   2dcd0:	mul	r0, r3, r0
   2dcd4:	bne	2dcbc <GetDataSlab+0xbe90>
   2dcd8:	ldr	r3, [sp, #32]
   2dcdc:	str	r0, [sl, #4]!
   2dce0:	ldr	r1, [r7]
   2dce4:	str	ip, [lr, #-4]
   2dce8:	cmp	r6, r3
   2dcec:	ldr	r3, [sp, #24]
   2dcf0:	ldr	r2, [r3, #4]!
   2dcf4:	mla	r4, r2, r1, r4
   2dcf8:	str	r3, [sp, #24]
   2dcfc:	ldr	r3, [fp, #4]!
   2dd00:	ldr	r2, [sp, #16]
   2dd04:	mul	r3, r3, r2
   2dd08:	str	r3, [sp, #16]
   2dd0c:	bne	2dca4 <GetDataSlab+0xbe78>
   2dd10:	ldr	r3, [sp, #28]
   2dd14:	cmp	r3, #1
   2dd18:	ldr	r3, [sp, #8]
   2dd1c:	add	r6, r3, r4, lsl #2
   2dd20:	ldr	r3, [sp, #16]
   2dd24:	beq	38da4 <GetDataSlab+0x16f78>
   2dd28:	cmp	r3, #0
   2dd2c:	ble	30874 <GetDataSlab+0xea48>
   2dd30:	ldr	r3, [r9]
   2dd34:	mov	fp, #0
   2dd38:	mov	sl, fp
   2dd3c:	ldr	r2, [sp, #20]
   2dd40:	ldr	r1, [sp, #20]
   2dd44:	str	r3, [sp, #8]
   2dd48:	ldr	r3, [sp, #28]
   2dd4c:	lsl	r2, r2, #1
   2dd50:	str	r2, [sp, #32]
   2dd54:	lsl	r7, r3, #2
   2dd58:	ldr	r3, [sp, #20]
   2dd5c:	ldr	r2, [sp, #28]
   2dd60:	sub	r3, r3, #1
   2dd64:	mul	r3, r2, r3
   2dd68:	ldr	r2, [sp, #32]
   2dd6c:	str	r3, [sp, #40]	; 0x28
   2dd70:	ldr	r3, [sp, #20]
   2dd74:	mul	r3, r3, r7
   2dd78:	str	r3, [sp, #44]	; 0x2c
   2dd7c:	ldr	r3, [sp, #4]
   2dd80:	add	r8, r3, r2
   2dd84:	ldr	r2, [sp, #8]
   2dd88:	ldr	r3, [sp, #36]	; 0x24
   2dd8c:	sub	r3, r3, r2
   2dd90:	lsl	r2, r2, #2
   2dd94:	str	r2, [sp, #48]	; 0x30
   2dd98:	ldr	r2, [sp, #28]
   2dd9c:	mls	r3, r1, r2, r3
   2dda0:	str	r3, [sp, #24]
   2dda4:	lsl	r3, r3, #2
   2dda8:	str	r3, [sp, #36]	; 0x24
   2ddac:	ldr	r3, [sp, #8]
   2ddb0:	cmp	r3, #0
   2ddb4:	beq	2ddc8 <GetDataSlab+0xbf9c>
   2ddb8:	ldr	r3, [sp, #48]	; 0x30
   2ddbc:	add	r6, r6, r3
   2ddc0:	ldr	r3, [sp, #8]
   2ddc4:	add	r4, r4, r3
   2ddc8:	ldr	r3, [sp, #20]
   2ddcc:	cmp	r3, #0
   2ddd0:	ble	2de08 <GetDataSlab+0xbfdc>
   2ddd4:	ldr	r3, [sp, #4]
   2ddd8:	mov	r1, r6
   2dddc:	add	r2, r3, fp, lsl #1
   2dde0:	ldr	r3, [r1], r7
   2dde4:	strh	r3, [r2], #2
   2dde8:	cmp	r2, r8
   2ddec:	bne	2dde0 <GetDataSlab+0xbfb4>
   2ddf0:	ldr	r3, [sp, #28]
   2ddf4:	ldr	r2, [sp, #44]	; 0x2c
   2ddf8:	add	r3, r4, r3
   2ddfc:	add	r6, r6, r2
   2de00:	ldr	r2, [sp, #40]	; 0x28
   2de04:	add	r4, r3, r2
   2de08:	ldr	r3, [sp, #232]	; 0xe8
   2de0c:	cmp	r3, #1
   2de10:	ldr	r3, [sp, #24]
   2de14:	add	r4, r4, r3
   2de18:	ldr	r3, [sp, #36]	; 0x24
   2de1c:	add	r6, r6, r3
   2de20:	ble	33a5c <GetDataSlab+0x11c30>
   2de24:	ldr	r3, [sp, #100]	; 0x64
   2de28:	ldr	r2, [sp, #228]	; 0xe4
   2de2c:	add	r3, r3, #1
   2de30:	ldr	r1, [r2, #4]
   2de34:	str	r3, [sp, #100]	; 0x64
   2de38:	sdiv	r2, r3, r1
   2de3c:	mls	r3, r1, r2, r3
   2de40:	cmp	r3, #0
   2de44:	bne	33a44 <GetDataSlab+0x11c18>
   2de48:	add	ip, sp, #100	; 0x64
   2de4c:	mov	r0, #1
   2de50:	ldr	lr, [sp, #12]
   2de54:	ldr	r3, [sp, #228]	; 0xe4
   2de58:	add	r5, r3, #4
   2de5c:	b	2dea4 <GetDataSlab+0xc078>
   2de60:	ldr	r3, [lr, #-4]
   2de64:	ldr	r1, [r9, r0, lsl #2]
   2de68:	mla	r3, r1, r3, r2
   2de6c:	add	r6, r6, r3, lsl #2
   2de70:	add	r4, r4, r3
   2de74:	ldr	r3, [sp, #232]	; 0xe8
   2de78:	add	r0, r0, #1
   2de7c:	cmp	r3, r0
   2de80:	beq	33a5c <GetDataSlab+0x11c30>
   2de84:	ldr	r3, [ip]
   2de88:	ldr	r1, [r5, #4]!
   2de8c:	add	r3, r3, #1
   2de90:	sdiv	r2, r3, r1
   2de94:	str	r3, [ip]
   2de98:	mls	r3, r1, r2, r3
   2de9c:	cmp	r3, #0
   2dea0:	bne	33a48 <GetDataSlab+0x11c1c>
   2dea4:	ldr	r2, [lr, #4]!
   2dea8:	str	sl, [ip], #4
   2deac:	sdiv	r3, r4, r2
   2deb0:	mls	r3, r2, r3, r4
   2deb4:	cmp	r3, #0
   2deb8:	sub	r2, r2, r3
   2debc:	bne	2de60 <GetDataSlab+0xc034>
   2dec0:	ldr	r3, [r9, r0, lsl #2]
   2dec4:	cmp	r3, #0
   2dec8:	beq	2de74 <GetDataSlab+0xc048>
   2decc:	ldr	r2, [lr, #-4]
   2ded0:	mul	r3, r2, r3
   2ded4:	add	r6, r6, r3, lsl #2
   2ded8:	add	r4, r4, r3
   2dedc:	b	2de74 <GetDataSlab+0xc048>
   2dee0:	ldr	r3, [sl]
   2dee4:	str	r3, [sp, #28]
   2dee8:	ldr	r3, [sp, #232]	; 0xe8
   2deec:	cmp	r3, #1
   2def0:	ldr	r3, [r8]
   2def4:	str	r3, [sp, #36]	; 0x24
   2def8:	ldr	r3, [sp, #228]	; 0xe4
   2defc:	ldr	r3, [r3]
   2df00:	str	r3, [sp, #20]
   2df04:	ldr	r3, [sp, #28]
   2df08:	sub	r3, r3, #1
   2df0c:	str	r3, [sp, #56]	; 0x38
   2df10:	ldr	r3, [sp, #36]	; 0x24
   2df14:	str	r3, [sp, #136]	; 0x88
   2df18:	ble	3f934 <GetDataSlab+0x1db08>
   2df1c:	add	r6, sl, #4
   2df20:	ldr	fp, [sp, #228]	; 0xe4
   2df24:	add	lr, sp, #60	; 0x3c
   2df28:	mov	r5, r8
   2df2c:	mov	r4, #0
   2df30:	str	r9, [sp, #24]
   2df34:	ldr	r3, [sp, #232]	; 0xe8
   2df38:	add	r3, sl, r3, lsl #2
   2df3c:	ldr	sl, [sp, #12]
   2df40:	str	r3, [sp, #32]
   2df44:	ldr	r3, [sp, #20]
   2df48:	str	r3, [sp, #16]
   2df4c:	ldr	r3, [r6], #4
   2df50:	mov	r7, sl
   2df54:	ldr	r0, [r5], #4
   2df58:	sub	ip, r3, #1
   2df5c:	mov	r1, r5
   2df60:	str	ip, [lr], #4
   2df64:	mov	r3, r1
   2df68:	ldr	r2, [r1, #-4]!
   2df6c:	ldr	r3, [r3]
   2df70:	cmp	r1, r8
   2df74:	mul	ip, r2, ip
   2df78:	mul	r0, r3, r0
   2df7c:	bne	2df64 <GetDataSlab+0xc138>
   2df80:	ldr	r3, [sp, #32]
   2df84:	str	r0, [sl, #4]!
   2df88:	ldr	r1, [r7]
   2df8c:	str	ip, [lr, #-4]
   2df90:	cmp	r6, r3
   2df94:	ldr	r3, [sp, #24]
   2df98:	ldr	r2, [r3, #4]!
   2df9c:	mla	r4, r2, r1, r4
   2dfa0:	str	r3, [sp, #24]
   2dfa4:	ldr	r3, [fp, #4]!
   2dfa8:	ldr	r2, [sp, #16]
   2dfac:	mul	r3, r3, r2
   2dfb0:	str	r3, [sp, #16]
   2dfb4:	bne	2df4c <GetDataSlab+0xc120>
   2dfb8:	ldr	r3, [sp, #28]
   2dfbc:	cmp	r3, #1
   2dfc0:	ldr	r3, [sp, #8]
   2dfc4:	add	r6, r3, r4, lsl #1
   2dfc8:	ldr	r3, [sp, #16]
   2dfcc:	beq	3865c <GetDataSlab+0x16830>
   2dfd0:	cmp	r3, #0
   2dfd4:	ble	30874 <GetDataSlab+0xea48>
   2dfd8:	ldr	r3, [r9]
   2dfdc:	mov	fp, #0
   2dfe0:	mov	sl, fp
   2dfe4:	ldr	r2, [sp, #20]
   2dfe8:	ldr	r1, [sp, #20]
   2dfec:	str	r3, [sp, #8]
   2dff0:	ldr	r3, [sp, #28]
   2dff4:	lsl	r2, r2, #1
   2dff8:	str	r2, [sp, #32]
   2dffc:	lsl	r7, r3, #1
   2e000:	ldr	r3, [sp, #20]
   2e004:	ldr	r2, [sp, #28]
   2e008:	sub	r3, r3, #1
   2e00c:	mul	r3, r2, r3
   2e010:	ldr	r2, [sp, #32]
   2e014:	str	r3, [sp, #44]	; 0x2c
   2e018:	ldr	r3, [sp, #20]
   2e01c:	mul	r3, r3, r7
   2e020:	str	r3, [sp, #40]	; 0x28
   2e024:	ldr	r3, [sp, #4]
   2e028:	add	r8, r3, r2
   2e02c:	ldr	r2, [sp, #8]
   2e030:	ldr	r3, [sp, #36]	; 0x24
   2e034:	sub	r3, r3, r2
   2e038:	lsl	r2, r2, #1
   2e03c:	str	r2, [sp, #48]	; 0x30
   2e040:	ldr	r2, [sp, #28]
   2e044:	mls	r3, r1, r2, r3
   2e048:	str	r3, [sp, #24]
   2e04c:	lsl	r3, r3, #1
   2e050:	str	r3, [sp, #36]	; 0x24
   2e054:	ldr	r3, [sp, #8]
   2e058:	cmp	r3, #0
   2e05c:	beq	2e070 <GetDataSlab+0xc244>
   2e060:	ldr	r3, [sp, #48]	; 0x30
   2e064:	add	r6, r6, r3
   2e068:	ldr	r3, [sp, #8]
   2e06c:	add	r4, r4, r3
   2e070:	ldr	r3, [sp, #20]
   2e074:	cmp	r3, #0
   2e078:	ble	2e0b0 <GetDataSlab+0xc284>
   2e07c:	ldr	r3, [sp, #4]
   2e080:	mov	r1, r6
   2e084:	add	r2, r3, fp, lsl #1
   2e088:	ldrh	r3, [r1], r7
   2e08c:	strh	r3, [r2], #2
   2e090:	cmp	r2, r8
   2e094:	bne	2e088 <GetDataSlab+0xc25c>
   2e098:	ldr	r3, [sp, #28]
   2e09c:	ldr	r2, [sp, #40]	; 0x28
   2e0a0:	add	r3, r4, r3
   2e0a4:	add	r6, r6, r2
   2e0a8:	ldr	r2, [sp, #44]	; 0x2c
   2e0ac:	add	r4, r3, r2
   2e0b0:	ldr	r3, [sp, #232]	; 0xe8
   2e0b4:	cmp	r3, #1
   2e0b8:	ldr	r3, [sp, #24]
   2e0bc:	add	r4, r4, r3
   2e0c0:	ldr	r3, [sp, #36]	; 0x24
   2e0c4:	add	r6, r6, r3
   2e0c8:	ble	33a24 <GetDataSlab+0x11bf8>
   2e0cc:	ldr	r3, [sp, #100]	; 0x64
   2e0d0:	ldr	r2, [sp, #228]	; 0xe4
   2e0d4:	add	r3, r3, #1
   2e0d8:	ldr	r1, [r2, #4]
   2e0dc:	str	r3, [sp, #100]	; 0x64
   2e0e0:	sdiv	r2, r3, r1
   2e0e4:	mls	r3, r1, r2, r3
   2e0e8:	cmp	r3, #0
   2e0ec:	bne	33a0c <GetDataSlab+0x11be0>
   2e0f0:	add	ip, sp, #100	; 0x64
   2e0f4:	mov	r0, #1
   2e0f8:	ldr	lr, [sp, #12]
   2e0fc:	ldr	r3, [sp, #228]	; 0xe4
   2e100:	add	r5, r3, #4
   2e104:	b	2e14c <GetDataSlab+0xc320>
   2e108:	ldr	r3, [lr, #-4]
   2e10c:	ldr	r1, [r9, r0, lsl #2]
   2e110:	mla	r3, r1, r3, r2
   2e114:	add	r6, r6, r3, lsl #1
   2e118:	add	r4, r4, r3
   2e11c:	ldr	r3, [sp, #232]	; 0xe8
   2e120:	add	r0, r0, #1
   2e124:	cmp	r3, r0
   2e128:	beq	33a24 <GetDataSlab+0x11bf8>
   2e12c:	ldr	r3, [ip]
   2e130:	ldr	r1, [r5, #4]!
   2e134:	add	r3, r3, #1
   2e138:	sdiv	r2, r3, r1
   2e13c:	str	r3, [ip]
   2e140:	mls	r3, r1, r2, r3
   2e144:	cmp	r3, #0
   2e148:	bne	33a10 <GetDataSlab+0x11be4>
   2e14c:	ldr	r2, [lr, #4]!
   2e150:	str	sl, [ip], #4
   2e154:	sdiv	r3, r4, r2
   2e158:	mls	r3, r2, r3, r4
   2e15c:	cmp	r3, #0
   2e160:	sub	r2, r2, r3
   2e164:	bne	2e108 <GetDataSlab+0xc2dc>
   2e168:	ldr	r3, [r9, r0, lsl #2]
   2e16c:	cmp	r3, #0
   2e170:	beq	2e11c <GetDataSlab+0xc2f0>
   2e174:	ldr	r2, [lr, #-4]
   2e178:	mul	r3, r2, r3
   2e17c:	add	r6, r6, r3, lsl #1
   2e180:	add	r4, r4, r3
   2e184:	b	2e11c <GetDataSlab+0xc2f0>
   2e188:	ldr	r3, [sl]
   2e18c:	str	r3, [sp, #28]
   2e190:	ldr	r3, [sp, #232]	; 0xe8
   2e194:	cmp	r3, #1
   2e198:	ldr	r3, [r8]
   2e19c:	str	r3, [sp, #36]	; 0x24
   2e1a0:	ldr	r3, [sp, #228]	; 0xe4
   2e1a4:	ldr	r3, [r3]
   2e1a8:	str	r3, [sp, #20]
   2e1ac:	ldr	r3, [sp, #28]
   2e1b0:	sub	r3, r3, #1
   2e1b4:	str	r3, [sp, #56]	; 0x38
   2e1b8:	ldr	r3, [sp, #36]	; 0x24
   2e1bc:	str	r3, [sp, #136]	; 0x88
   2e1c0:	ble	3f914 <GetDataSlab+0x1dae8>
   2e1c4:	add	r6, sl, #4
   2e1c8:	ldr	fp, [sp, #228]	; 0xe4
   2e1cc:	add	lr, sp, #60	; 0x3c
   2e1d0:	mov	r5, r8
   2e1d4:	mov	r4, #0
   2e1d8:	str	r9, [sp, #24]
   2e1dc:	ldr	r3, [sp, #232]	; 0xe8
   2e1e0:	add	r3, sl, r3, lsl #2
   2e1e4:	ldr	sl, [sp, #12]
   2e1e8:	str	r3, [sp, #32]
   2e1ec:	ldr	r3, [sp, #20]
   2e1f0:	str	r3, [sp, #16]
   2e1f4:	ldr	r3, [r6], #4
   2e1f8:	mov	r7, sl
   2e1fc:	ldr	r0, [r5], #4
   2e200:	sub	ip, r3, #1
   2e204:	mov	r1, r5
   2e208:	str	ip, [lr], #4
   2e20c:	mov	r3, r1
   2e210:	ldr	r2, [r1, #-4]!
   2e214:	ldr	r3, [r3]
   2e218:	cmp	r1, r8
   2e21c:	mul	ip, r2, ip
   2e220:	mul	r0, r3, r0
   2e224:	bne	2e20c <GetDataSlab+0xc3e0>
   2e228:	ldr	r3, [sp, #32]
   2e22c:	str	r0, [sl, #4]!
   2e230:	ldr	r1, [r7]
   2e234:	str	ip, [lr, #-4]
   2e238:	cmp	r6, r3
   2e23c:	ldr	r3, [sp, #24]
   2e240:	ldr	r2, [r3, #4]!
   2e244:	mla	r4, r2, r1, r4
   2e248:	str	r3, [sp, #24]
   2e24c:	ldr	r3, [fp, #4]!
   2e250:	ldr	r2, [sp, #16]
   2e254:	mul	r3, r3, r2
   2e258:	str	r3, [sp, #16]
   2e25c:	bne	2e1f4 <GetDataSlab+0xc3c8>
   2e260:	ldr	r3, [sp, #28]
   2e264:	cmp	r3, #1
   2e268:	ldr	r3, [sp, #8]
   2e26c:	add	r6, r3, r4, lsl #1
   2e270:	ldr	r3, [sp, #16]
   2e274:	beq	38940 <GetDataSlab+0x16b14>
   2e278:	cmp	r3, #0
   2e27c:	ble	30874 <GetDataSlab+0xea48>
   2e280:	ldr	r3, [r9]
   2e284:	mov	fp, #0
   2e288:	mov	sl, fp
   2e28c:	ldr	r2, [sp, #20]
   2e290:	ldr	r1, [sp, #20]
   2e294:	str	r3, [sp, #8]
   2e298:	ldr	r3, [sp, #28]
   2e29c:	lsl	r2, r2, #1
   2e2a0:	str	r2, [sp, #32]
   2e2a4:	lsl	r7, r3, #1
   2e2a8:	ldr	r3, [sp, #20]
   2e2ac:	ldr	r2, [sp, #28]
   2e2b0:	sub	r3, r3, #1
   2e2b4:	mul	r3, r2, r3
   2e2b8:	ldr	r2, [sp, #32]
   2e2bc:	str	r3, [sp, #40]	; 0x28
   2e2c0:	ldr	r3, [sp, #20]
   2e2c4:	mul	r3, r3, r7
   2e2c8:	str	r3, [sp, #44]	; 0x2c
   2e2cc:	ldr	r3, [sp, #4]
   2e2d0:	add	r8, r3, r2
   2e2d4:	ldr	r2, [sp, #8]
   2e2d8:	ldr	r3, [sp, #36]	; 0x24
   2e2dc:	sub	r3, r3, r2
   2e2e0:	lsl	r2, r2, #1
   2e2e4:	str	r2, [sp, #48]	; 0x30
   2e2e8:	ldr	r2, [sp, #28]
   2e2ec:	mls	r3, r1, r2, r3
   2e2f0:	str	r3, [sp, #24]
   2e2f4:	lsl	r3, r3, #1
   2e2f8:	str	r3, [sp, #36]	; 0x24
   2e2fc:	ldr	r3, [sp, #8]
   2e300:	cmp	r3, #0
   2e304:	beq	2e318 <GetDataSlab+0xc4ec>
   2e308:	ldr	r3, [sp, #48]	; 0x30
   2e30c:	add	r6, r6, r3
   2e310:	ldr	r3, [sp, #8]
   2e314:	add	r4, r4, r3
   2e318:	ldr	r3, [sp, #20]
   2e31c:	cmp	r3, #0
   2e320:	ble	2e358 <GetDataSlab+0xc52c>
   2e324:	ldr	r3, [sp, #4]
   2e328:	mov	r1, r6
   2e32c:	add	r2, r3, fp, lsl #1
   2e330:	ldrsh	r3, [r1], r7
   2e334:	strh	r3, [r2], #2
   2e338:	cmp	r2, r8
   2e33c:	bne	2e330 <GetDataSlab+0xc504>
   2e340:	ldr	r3, [sp, #28]
   2e344:	ldr	r2, [sp, #44]	; 0x2c
   2e348:	add	r3, r4, r3
   2e34c:	add	r6, r6, r2
   2e350:	ldr	r2, [sp, #40]	; 0x28
   2e354:	add	r4, r3, r2
   2e358:	ldr	r3, [sp, #232]	; 0xe8
   2e35c:	cmp	r3, #1
   2e360:	ldr	r3, [sp, #24]
   2e364:	add	r4, r4, r3
   2e368:	ldr	r3, [sp, #36]	; 0x24
   2e36c:	add	r6, r6, r3
   2e370:	ble	339ec <GetDataSlab+0x11bc0>
   2e374:	ldr	r3, [sp, #100]	; 0x64
   2e378:	ldr	r2, [sp, #228]	; 0xe4
   2e37c:	add	r3, r3, #1
   2e380:	ldr	r1, [r2, #4]
   2e384:	str	r3, [sp, #100]	; 0x64
   2e388:	sdiv	r2, r3, r1
   2e38c:	mls	r3, r1, r2, r3
   2e390:	cmp	r3, #0
   2e394:	bne	339d4 <GetDataSlab+0x11ba8>
   2e398:	add	ip, sp, #100	; 0x64
   2e39c:	mov	r0, #1
   2e3a0:	ldr	lr, [sp, #12]
   2e3a4:	ldr	r3, [sp, #228]	; 0xe4
   2e3a8:	add	r5, r3, #4
   2e3ac:	b	2e3f4 <GetDataSlab+0xc5c8>
   2e3b0:	ldr	r3, [lr, #-4]
   2e3b4:	ldr	r1, [r9, r0, lsl #2]
   2e3b8:	mla	r3, r1, r3, r2
   2e3bc:	add	r6, r6, r3, lsl #1
   2e3c0:	add	r4, r4, r3
   2e3c4:	ldr	r3, [sp, #232]	; 0xe8
   2e3c8:	add	r0, r0, #1
   2e3cc:	cmp	r3, r0
   2e3d0:	beq	339ec <GetDataSlab+0x11bc0>
   2e3d4:	ldr	r3, [ip]
   2e3d8:	ldr	r1, [r5, #4]!
   2e3dc:	add	r3, r3, #1
   2e3e0:	sdiv	r2, r3, r1
   2e3e4:	str	r3, [ip]
   2e3e8:	mls	r3, r1, r2, r3
   2e3ec:	cmp	r3, #0
   2e3f0:	bne	339d8 <GetDataSlab+0x11bac>
   2e3f4:	ldr	r2, [lr, #4]!
   2e3f8:	str	sl, [ip], #4
   2e3fc:	sdiv	r3, r4, r2
   2e400:	mls	r3, r2, r3, r4
   2e404:	cmp	r3, #0
   2e408:	sub	r2, r2, r3
   2e40c:	bne	2e3b0 <GetDataSlab+0xc584>
   2e410:	ldr	r3, [r9, r0, lsl #2]
   2e414:	cmp	r3, #0
   2e418:	beq	2e3c4 <GetDataSlab+0xc598>
   2e41c:	ldr	r2, [lr, #-4]
   2e420:	mul	r3, r2, r3
   2e424:	add	r6, r6, r3, lsl #1
   2e428:	add	r4, r4, r3
   2e42c:	b	2e3c4 <GetDataSlab+0xc598>
   2e430:	ldr	r3, [sp, #232]	; 0xe8
   2e434:	ldr	r7, [sl]
   2e438:	cmp	r3, #1
   2e43c:	ldr	r3, [r8]
   2e440:	str	r3, [sp, #40]	; 0x28
   2e444:	ldr	r3, [sp, #228]	; 0xe4
   2e448:	ldr	r3, [r3]
   2e44c:	str	r3, [sp, #20]
   2e450:	sub	r3, r7, #1
   2e454:	str	r3, [sp, #56]	; 0x38
   2e458:	ldr	r3, [sp, #40]	; 0x28
   2e45c:	str	r3, [sp, #136]	; 0x88
   2e460:	ble	3f9f4 <GetDataSlab+0x1dbc8>
   2e464:	ldr	fp, [sp, #12]
   2e468:	add	r6, sl, #4
   2e46c:	add	lr, sp, #60	; 0x3c
   2e470:	mov	r5, r8
   2e474:	mov	r4, #0
   2e478:	str	r9, [sp, #28]
   2e47c:	ldr	r3, [sp, #232]	; 0xe8
   2e480:	add	r3, sl, r3, lsl #2
   2e484:	str	r3, [sp, #32]
   2e488:	ldr	r3, [sp, #228]	; 0xe4
   2e48c:	str	r3, [sp, #24]
   2e490:	ldr	r3, [sp, #20]
   2e494:	str	r3, [sp, #16]
   2e498:	ldr	r3, [r6], #4
   2e49c:	mov	sl, fp
   2e4a0:	ldr	r0, [r5], #4
   2e4a4:	sub	ip, r3, #1
   2e4a8:	mov	r1, r5
   2e4ac:	str	ip, [lr], #4
   2e4b0:	mov	r3, r1
   2e4b4:	ldr	r2, [r1, #-4]!
   2e4b8:	ldr	r3, [r3]
   2e4bc:	cmp	r1, r8
   2e4c0:	mul	ip, r2, ip
   2e4c4:	mul	r0, r3, r0
   2e4c8:	bne	2e4b0 <GetDataSlab+0xc684>
   2e4cc:	ldr	r3, [sp, #32]
   2e4d0:	str	r0, [fp, #4]!
   2e4d4:	ldr	r1, [sl]
   2e4d8:	str	ip, [lr, #-4]
   2e4dc:	ldr	r0, [sp, #24]
   2e4e0:	cmp	r6, r3
   2e4e4:	ldr	r3, [sp, #28]
   2e4e8:	ldr	r2, [r3, #4]!
   2e4ec:	mla	r4, r2, r1, r4
   2e4f0:	str	r3, [sp, #28]
   2e4f4:	ldr	r3, [r0, #4]!
   2e4f8:	ldr	r2, [sp, #16]
   2e4fc:	str	r0, [sp, #24]
   2e500:	mul	r3, r3, r2
   2e504:	str	r3, [sp, #16]
   2e508:	bne	2e498 <GetDataSlab+0xc66c>
   2e50c:	ldr	r3, [sp, #8]
   2e510:	cmp	r7, #1
   2e514:	add	r5, r3, r4
   2e518:	ldr	r3, [sp, #16]
   2e51c:	beq	38ac0 <GetDataSlab+0x16c94>
   2e520:	cmp	r3, #0
   2e524:	ble	30874 <GetDataSlab+0xea48>
   2e528:	ldr	r3, [r9]
   2e52c:	mov	fp, #0
   2e530:	mov	sl, fp
   2e534:	ldr	r2, [sp, #20]
   2e538:	str	r3, [sp, #8]
   2e53c:	ldr	r3, [sp, #20]
   2e540:	lsl	r2, r2, #1
   2e544:	str	r2, [sp, #28]
   2e548:	mul	r3, r7, r3
   2e54c:	str	r3, [sp, #32]
   2e550:	ldr	r3, [sp, #20]
   2e554:	sub	r3, r3, #1
   2e558:	mul	r3, r7, r3
   2e55c:	str	r3, [sp, #36]	; 0x24
   2e560:	ldr	r3, [sp, #4]
   2e564:	add	r8, r3, r2
   2e568:	ldr	r2, [sp, #8]
   2e56c:	ldr	r3, [sp, #40]	; 0x28
   2e570:	sub	r3, r3, r2
   2e574:	ldr	r2, [sp, #32]
   2e578:	sub	r3, r3, r2
   2e57c:	str	r3, [sp, #24]
   2e580:	ldr	r3, [sp, #8]
   2e584:	cmp	r3, #0
   2e588:	addne	r5, r5, r3
   2e58c:	addne	r4, r4, r3
   2e590:	ldr	r3, [sp, #20]
   2e594:	cmp	r3, #0
   2e598:	ble	2e5cc <GetDataSlab+0xc7a0>
   2e59c:	ldr	r3, [sp, #4]
   2e5a0:	mov	r1, r5
   2e5a4:	add	r2, r3, fp, lsl #1
   2e5a8:	ldrb	r3, [r1], r7
   2e5ac:	strh	r3, [r2], #2
   2e5b0:	cmp	r8, r2
   2e5b4:	bne	2e5a8 <GetDataSlab+0xc77c>
   2e5b8:	ldr	r2, [sp, #32]
   2e5bc:	add	r3, r4, r7
   2e5c0:	add	r5, r5, r2
   2e5c4:	ldr	r2, [sp, #36]	; 0x24
   2e5c8:	add	r4, r2, r3
   2e5cc:	ldr	r3, [sp, #232]	; 0xe8
   2e5d0:	cmp	r3, #1
   2e5d4:	ldr	r3, [sp, #24]
   2e5d8:	add	r4, r4, r3
   2e5dc:	add	r5, r5, r3
   2e5e0:	ble	339b4 <GetDataSlab+0x11b88>
   2e5e4:	ldr	r3, [sp, #100]	; 0x64
   2e5e8:	ldr	r2, [sp, #228]	; 0xe4
   2e5ec:	add	r3, r3, #1
   2e5f0:	ldr	r1, [r2, #4]
   2e5f4:	str	r3, [sp, #100]	; 0x64
   2e5f8:	sdiv	r2, r3, r1
   2e5fc:	mls	r3, r1, r2, r3
   2e600:	cmp	r3, #0
   2e604:	bne	3399c <GetDataSlab+0x11b70>
   2e608:	add	ip, sp, #100	; 0x64
   2e60c:	mov	r0, #1
   2e610:	ldr	lr, [sp, #12]
   2e614:	ldr	r3, [sp, #228]	; 0xe4
   2e618:	add	r6, r3, #4
   2e61c:	b	2e664 <GetDataSlab+0xc838>
   2e620:	ldr	r3, [lr, #-4]
   2e624:	ldr	r1, [r9, r0, lsl #2]
   2e628:	mla	r3, r1, r3, r2
   2e62c:	add	r5, r5, r3
   2e630:	add	r4, r4, r3
   2e634:	ldr	r3, [sp, #232]	; 0xe8
   2e638:	add	r0, r0, #1
   2e63c:	cmp	r3, r0
   2e640:	beq	339b4 <GetDataSlab+0x11b88>
   2e644:	ldr	r3, [ip]
   2e648:	ldr	r1, [r6, #4]!
   2e64c:	add	r3, r3, #1
   2e650:	sdiv	r2, r3, r1
   2e654:	str	r3, [ip]
   2e658:	mls	r3, r1, r2, r3
   2e65c:	cmp	r3, #0
   2e660:	bne	339a0 <GetDataSlab+0x11b74>
   2e664:	ldr	r2, [lr, #4]!
   2e668:	str	sl, [ip], #4
   2e66c:	sdiv	r3, r4, r2
   2e670:	mls	r3, r2, r3, r4
   2e674:	cmp	r3, #0
   2e678:	sub	r2, r2, r3
   2e67c:	bne	2e620 <GetDataSlab+0xc7f4>
   2e680:	ldr	r3, [r9, r0, lsl #2]
   2e684:	cmp	r3, #0
   2e688:	beq	2e634 <GetDataSlab+0xc808>
   2e68c:	ldr	r2, [lr, #-4]
   2e690:	mul	r3, r2, r3
   2e694:	add	r5, r5, r3
   2e698:	add	r4, r4, r3
   2e69c:	b	2e634 <GetDataSlab+0xc808>
   2e6a0:	ldr	r3, [sp, #232]	; 0xe8
   2e6a4:	ldr	r7, [sl]
   2e6a8:	cmp	r3, #1
   2e6ac:	ldr	r3, [r8]
   2e6b0:	str	r3, [sp, #40]	; 0x28
   2e6b4:	ldr	r3, [sp, #228]	; 0xe4
   2e6b8:	ldr	r3, [r3]
   2e6bc:	str	r3, [sp, #20]
   2e6c0:	sub	r3, r7, #1
   2e6c4:	str	r3, [sp, #56]	; 0x38
   2e6c8:	ldr	r3, [sp, #40]	; 0x28
   2e6cc:	str	r3, [sp, #136]	; 0x88
   2e6d0:	ble	3f924 <GetDataSlab+0x1daf8>
   2e6d4:	ldr	fp, [sp, #12]
   2e6d8:	add	r6, sl, #4
   2e6dc:	add	lr, sp, #60	; 0x3c
   2e6e0:	mov	r5, r8
   2e6e4:	mov	r4, #0
   2e6e8:	str	r9, [sp, #24]
   2e6ec:	ldr	r3, [sp, #232]	; 0xe8
   2e6f0:	add	r3, sl, r3, lsl #2
   2e6f4:	str	r3, [sp, #32]
   2e6f8:	ldr	r3, [sp, #228]	; 0xe4
   2e6fc:	str	r3, [sp, #28]
   2e700:	ldr	r3, [sp, #20]
   2e704:	str	r3, [sp, #16]
   2e708:	ldr	r3, [r6], #4
   2e70c:	mov	sl, fp
   2e710:	ldr	r0, [r5], #4
   2e714:	sub	ip, r3, #1
   2e718:	mov	r1, r5
   2e71c:	str	ip, [lr], #4
   2e720:	mov	r3, r1
   2e724:	ldr	r2, [r1, #-4]!
   2e728:	ldr	r3, [r3]
   2e72c:	cmp	r8, r1
   2e730:	mul	ip, r2, ip
   2e734:	mul	r0, r3, r0
   2e738:	bne	2e720 <GetDataSlab+0xc8f4>
   2e73c:	ldr	r3, [sp, #32]
   2e740:	str	r0, [fp, #4]!
   2e744:	ldr	r1, [sl]
   2e748:	str	ip, [lr, #-4]
   2e74c:	ldr	r0, [sp, #28]
   2e750:	cmp	r6, r3
   2e754:	ldr	r3, [sp, #24]
   2e758:	ldr	r2, [r3, #4]!
   2e75c:	mla	r4, r2, r1, r4
   2e760:	str	r3, [sp, #24]
   2e764:	ldr	r3, [r0, #4]!
   2e768:	ldr	r2, [sp, #16]
   2e76c:	str	r0, [sp, #28]
   2e770:	mul	r3, r3, r2
   2e774:	str	r3, [sp, #16]
   2e778:	bne	2e708 <GetDataSlab+0xc8dc>
   2e77c:	ldr	r3, [sp, #8]
   2e780:	cmp	r7, #1
   2e784:	add	r5, r3, r4
   2e788:	ldr	r3, [sp, #16]
   2e78c:	beq	387dc <GetDataSlab+0x169b0>
   2e790:	cmp	r3, #0
   2e794:	ble	30874 <GetDataSlab+0xea48>
   2e798:	ldr	r3, [r9]
   2e79c:	mov	fp, #0
   2e7a0:	mov	sl, fp
   2e7a4:	ldr	r2, [sp, #20]
   2e7a8:	str	r3, [sp, #8]
   2e7ac:	ldr	r3, [sp, #20]
   2e7b0:	lsl	r2, r2, #1
   2e7b4:	str	r2, [sp, #28]
   2e7b8:	mul	r3, r7, r3
   2e7bc:	str	r3, [sp, #32]
   2e7c0:	ldr	r3, [sp, #20]
   2e7c4:	sub	r3, r3, #1
   2e7c8:	mul	r3, r7, r3
   2e7cc:	str	r3, [sp, #36]	; 0x24
   2e7d0:	ldr	r3, [sp, #4]
   2e7d4:	add	r8, r3, r2
   2e7d8:	ldr	r2, [sp, #8]
   2e7dc:	ldr	r3, [sp, #40]	; 0x28
   2e7e0:	sub	r3, r3, r2
   2e7e4:	ldr	r2, [sp, #32]
   2e7e8:	sub	r3, r3, r2
   2e7ec:	str	r3, [sp, #24]
   2e7f0:	ldr	r3, [sp, #8]
   2e7f4:	cmp	r3, #0
   2e7f8:	addne	r5, r5, r3
   2e7fc:	addne	r4, r4, r3
   2e800:	ldr	r3, [sp, #20]
   2e804:	cmp	r3, #0
   2e808:	ble	2e83c <GetDataSlab+0xca10>
   2e80c:	ldr	r3, [sp, #4]
   2e810:	mov	r1, r5
   2e814:	add	r2, r3, fp, lsl #1
   2e818:	ldrsb	r3, [r1], r7
   2e81c:	strh	r3, [r2], #2
   2e820:	cmp	r8, r2
   2e824:	bne	2e818 <GetDataSlab+0xc9ec>
   2e828:	ldr	r2, [sp, #32]
   2e82c:	add	r3, r4, r7
   2e830:	add	r5, r5, r2
   2e834:	ldr	r2, [sp, #36]	; 0x24
   2e838:	add	r4, r2, r3
   2e83c:	ldr	r3, [sp, #232]	; 0xe8
   2e840:	cmp	r3, #1
   2e844:	ldr	r3, [sp, #24]
   2e848:	add	r4, r4, r3
   2e84c:	add	r5, r5, r3
   2e850:	ble	3397c <GetDataSlab+0x11b50>
   2e854:	ldr	r3, [sp, #100]	; 0x64
   2e858:	ldr	r2, [sp, #228]	; 0xe4
   2e85c:	add	r3, r3, #1
   2e860:	ldr	r1, [r2, #4]
   2e864:	str	r3, [sp, #100]	; 0x64
   2e868:	sdiv	r2, r3, r1
   2e86c:	mls	r3, r1, r2, r3
   2e870:	cmp	r3, #0
   2e874:	bne	33964 <GetDataSlab+0x11b38>
   2e878:	add	ip, sp, #100	; 0x64
   2e87c:	mov	r0, #1
   2e880:	ldr	lr, [sp, #12]
   2e884:	ldr	r3, [sp, #228]	; 0xe4
   2e888:	add	r6, r3, #4
   2e88c:	b	2e8d4 <GetDataSlab+0xcaa8>
   2e890:	ldr	r3, [lr, #-4]
   2e894:	ldr	r1, [r9, r0, lsl #2]
   2e898:	mla	r3, r1, r3, r2
   2e89c:	add	r5, r5, r3
   2e8a0:	add	r4, r4, r3
   2e8a4:	ldr	r3, [sp, #232]	; 0xe8
   2e8a8:	add	r0, r0, #1
   2e8ac:	cmp	r3, r0
   2e8b0:	beq	3397c <GetDataSlab+0x11b50>
   2e8b4:	ldr	r3, [ip]
   2e8b8:	ldr	r1, [r6, #4]!
   2e8bc:	add	r3, r3, #1
   2e8c0:	sdiv	r2, r3, r1
   2e8c4:	str	r3, [ip]
   2e8c8:	mls	r3, r1, r2, r3
   2e8cc:	cmp	r3, #0
   2e8d0:	bne	33968 <GetDataSlab+0x11b3c>
   2e8d4:	ldr	r2, [lr, #4]!
   2e8d8:	str	sl, [ip], #4
   2e8dc:	sdiv	r3, r4, r2
   2e8e0:	mls	r3, r2, r3, r4
   2e8e4:	cmp	r3, #0
   2e8e8:	sub	r2, r2, r3
   2e8ec:	bne	2e890 <GetDataSlab+0xca64>
   2e8f0:	ldr	r3, [r9, r0, lsl #2]
   2e8f4:	cmp	r3, #0
   2e8f8:	beq	2e8a4 <GetDataSlab+0xca78>
   2e8fc:	ldr	r2, [lr, #-4]
   2e900:	mul	r3, r2, r3
   2e904:	add	r5, r5, r3
   2e908:	add	r4, r4, r3
   2e90c:	b	2e8a4 <GetDataSlab+0xca78>
   2e910:	ldr	r3, [sp, #232]	; 0xe8
   2e914:	ldr	r6, [sl]
   2e918:	cmp	r3, #1
   2e91c:	ldr	r3, [r8]
   2e920:	str	r3, [sp, #16]
   2e924:	ldr	r3, [sp, #228]	; 0xe4
   2e928:	ldr	fp, [r3]
   2e92c:	sub	r3, r6, #1
   2e930:	str	r3, [sp, #56]	; 0x38
   2e934:	ldr	r3, [sp, #16]
   2e938:	str	fp, [sp, #20]
   2e93c:	str	r3, [sp, #136]	; 0x88
   2e940:	ble	3f944 <GetDataSlab+0x1db18>
   2e944:	ldr	r3, [sp, #232]	; 0xe8
   2e948:	add	r7, sl, #4
   2e94c:	add	r5, sp, #60	; 0x3c
   2e950:	mov	r4, r8
   2e954:	mov	lr, #0
   2e958:	str	r9, [sp, #32]
   2e95c:	add	r3, sl, r3, lsl #2
   2e960:	str	r3, [sp, #40]	; 0x28
   2e964:	ldr	r3, [sp, #12]
   2e968:	str	r3, [sp, #24]
   2e96c:	ldr	r3, [sp, #228]	; 0xe4
   2e970:	str	r3, [sp, #28]
   2e974:	ldr	r3, [r7], #4
   2e978:	ldr	r0, [r4], #4
   2e97c:	ldr	r2, [sp, #24]
   2e980:	sub	ip, r3, #1
   2e984:	mov	r1, r4
   2e988:	str	ip, [r5], #4
   2e98c:	str	r2, [sp, #36]	; 0x24
   2e990:	mov	r3, r1
   2e994:	ldr	r2, [r1, #-4]!
   2e998:	ldr	r3, [r3]
   2e99c:	cmp	r1, r8
   2e9a0:	mul	ip, r2, ip
   2e9a4:	mul	r0, r3, r0
   2e9a8:	bne	2e990 <GetDataSlab+0xcb64>
   2e9ac:	ldr	r3, [sp, #24]
   2e9b0:	str	ip, [r5, #-4]
   2e9b4:	str	r0, [r3, #4]!
   2e9b8:	str	r3, [sp, #24]
   2e9bc:	ldr	r0, [sp, #28]
   2e9c0:	ldr	r3, [sp, #40]	; 0x28
   2e9c4:	cmp	r7, r3
   2e9c8:	ldr	r3, [sp, #36]	; 0x24
   2e9cc:	ldr	r1, [r3]
   2e9d0:	ldr	r3, [sp, #32]
   2e9d4:	ldr	r2, [r3, #4]!
   2e9d8:	mla	lr, r2, r1, lr
   2e9dc:	str	r3, [sp, #32]
   2e9e0:	ldr	r3, [r0, #4]!
   2e9e4:	ldr	r2, [sp, #20]
   2e9e8:	str	r0, [sp, #28]
   2e9ec:	mul	r3, r3, r2
   2e9f0:	str	r3, [sp, #20]
   2e9f4:	bne	2e974 <GetDataSlab+0xcb48>
   2e9f8:	ldr	r3, [sp, #8]
   2e9fc:	cmp	r6, #1
   2ea00:	add	r5, r3, lr, lsl #3
   2ea04:	ldr	r3, [sp, #20]
   2ea08:	beq	384e4 <GetDataSlab+0x166b8>
   2ea0c:	cmp	r3, #0
   2ea10:	ble	30874 <GetDataSlab+0xea48>
   2ea14:	ldr	r3, [r9]
   2ea18:	str	r3, [sp, #8]
   2ea1c:	mov	r3, #0
   2ea20:	str	r3, [sp, #24]
   2ea24:	ldr	r3, [sp, #8]
   2ea28:	cmp	r3, #0
   2ea2c:	beq	2ea38 <GetDataSlab+0xcc0c>
   2ea30:	add	r5, r5, r3, lsl #3
   2ea34:	add	lr, lr, r3
   2ea38:	cmp	fp, #0
   2ea3c:	ble	2ea8c <GetDataSlab+0xcc60>
   2ea40:	ldr	r3, [sp, #4]
   2ea44:	ldr	r2, [sp, #24]
   2ea48:	add	r1, r3, r2, lsl #2
   2ea4c:	mov	r3, #0
   2ea50:	vldr	d7, [r5]
   2ea54:	add	r3, r3, #1
   2ea58:	ldr	r2, [sp, #228]	; 0xe4
   2ea5c:	vcvt.s32.f64	s15, d7
   2ea60:	vstmia	r1!, {s15}
   2ea64:	ldr	fp, [r2]
   2ea68:	ldr	r6, [sl]
   2ea6c:	cmp	fp, r3
   2ea70:	add	r5, r5, r6, lsl #3
   2ea74:	add	lr, lr, r6
   2ea78:	bgt	2ea50 <GetDataSlab+0xcc24>
   2ea7c:	ldr	r3, [r9]
   2ea80:	str	r3, [sp, #8]
   2ea84:	ldr	r3, [r8]
   2ea88:	str	r3, [sp, #16]
   2ea8c:	ldr	r2, [sp, #8]
   2ea90:	ldr	r3, [sp, #16]
   2ea94:	sub	r3, r3, r2
   2ea98:	ldr	r2, [sp, #232]	; 0xe8
   2ea9c:	mls	r3, r6, fp, r3
   2eaa0:	cmp	r2, #1
   2eaa4:	add	lr, lr, r3
   2eaa8:	add	r5, r5, r3, lsl #3
   2eaac:	ble	3394c <GetDataSlab+0x11b20>
   2eab0:	ldr	r3, [sp, #100]	; 0x64
   2eab4:	ldr	r2, [sp, #228]	; 0xe4
   2eab8:	add	r3, r3, #1
   2eabc:	ldr	r1, [r2, #4]
   2eac0:	str	r3, [sp, #100]	; 0x64
   2eac4:	sdiv	r2, r3, r1
   2eac8:	mls	r3, r1, r2, r3
   2eacc:	cmp	r3, #0
   2ead0:	bne	33934 <GetDataSlab+0x11b08>
   2ead4:	add	ip, sp, #100	; 0x64
   2ead8:	mov	r0, #1
   2eadc:	ldr	r4, [sp, #12]
   2eae0:	ldr	r3, [sp, #228]	; 0xe4
   2eae4:	add	r7, r3, #4
   2eae8:	b	2eb30 <GetDataSlab+0xcd04>
   2eaec:	ldr	r3, [r4, #-4]
   2eaf0:	ldr	r1, [r9, r0, lsl #2]
   2eaf4:	mla	r3, r1, r3, r2
   2eaf8:	add	r5, r5, r3, lsl #3
   2eafc:	add	lr, lr, r3
   2eb00:	ldr	r3, [sp, #232]	; 0xe8
   2eb04:	add	r0, r0, #1
   2eb08:	cmp	r3, r0
   2eb0c:	beq	3394c <GetDataSlab+0x11b20>
   2eb10:	ldr	r3, [ip]
   2eb14:	ldr	r1, [r7, #4]!
   2eb18:	add	r3, r3, #1
   2eb1c:	sdiv	r2, r3, r1
   2eb20:	str	r3, [ip]
   2eb24:	mls	r3, r1, r2, r3
   2eb28:	cmp	r3, #0
   2eb2c:	bne	33938 <GetDataSlab+0x11b0c>
   2eb30:	ldr	r2, [r4, #4]!
   2eb34:	mov	r3, #0
   2eb38:	str	r3, [ip], #4
   2eb3c:	sdiv	r3, lr, r2
   2eb40:	mls	r3, r2, r3, lr
   2eb44:	cmp	r3, #0
   2eb48:	sub	r2, r2, r3
   2eb4c:	bne	2eaec <GetDataSlab+0xccc0>
   2eb50:	ldr	r3, [r9, r0, lsl #2]
   2eb54:	cmp	r3, #0
   2eb58:	beq	2eb00 <GetDataSlab+0xccd4>
   2eb5c:	ldr	r2, [r4, #-4]
   2eb60:	mul	r3, r2, r3
   2eb64:	add	r5, r5, r3, lsl #3
   2eb68:	add	lr, lr, r3
   2eb6c:	b	2eb00 <GetDataSlab+0xccd4>
   2eb70:	ldr	r3, [sp, #232]	; 0xe8
   2eb74:	ldr	r6, [sl]
   2eb78:	cmp	r3, #1
   2eb7c:	ldr	r3, [r8]
   2eb80:	str	r3, [sp, #16]
   2eb84:	ldr	r3, [sp, #228]	; 0xe4
   2eb88:	ldr	fp, [r3]
   2eb8c:	sub	r3, r6, #1
   2eb90:	str	r3, [sp, #56]	; 0x38
   2eb94:	ldr	r3, [sp, #16]
   2eb98:	str	fp, [sp, #20]
   2eb9c:	str	r3, [sp, #136]	; 0x88
   2eba0:	ble	3fb9c <GetDataSlab+0x1dd70>
   2eba4:	ldr	r3, [sp, #232]	; 0xe8
   2eba8:	add	r7, sl, #4
   2ebac:	add	r5, sp, #60	; 0x3c
   2ebb0:	mov	r4, r8
   2ebb4:	mov	lr, #0
   2ebb8:	str	r9, [sp, #32]
   2ebbc:	add	r3, sl, r3, lsl #2
   2ebc0:	str	r3, [sp, #40]	; 0x28
   2ebc4:	ldr	r3, [sp, #12]
   2ebc8:	str	r3, [sp, #24]
   2ebcc:	ldr	r3, [sp, #228]	; 0xe4
   2ebd0:	str	r3, [sp, #28]
   2ebd4:	ldr	r3, [r7], #4
   2ebd8:	ldr	r0, [r4], #4
   2ebdc:	ldr	r2, [sp, #24]
   2ebe0:	sub	ip, r3, #1
   2ebe4:	mov	r1, r4
   2ebe8:	str	ip, [r5], #4
   2ebec:	str	r2, [sp, #36]	; 0x24
   2ebf0:	mov	r3, r1
   2ebf4:	ldr	r2, [r1, #-4]!
   2ebf8:	ldr	r3, [r3]
   2ebfc:	cmp	r1, r8
   2ec00:	mul	ip, r2, ip
   2ec04:	mul	r0, r3, r0
   2ec08:	bne	2ebf0 <GetDataSlab+0xcdc4>
   2ec0c:	ldr	r3, [sp, #24]
   2ec10:	str	ip, [r5, #-4]
   2ec14:	str	r0, [r3, #4]!
   2ec18:	str	r3, [sp, #24]
   2ec1c:	ldr	r0, [sp, #28]
   2ec20:	ldr	r3, [sp, #40]	; 0x28
   2ec24:	cmp	r7, r3
   2ec28:	ldr	r3, [sp, #36]	; 0x24
   2ec2c:	ldr	r1, [r3]
   2ec30:	ldr	r3, [sp, #32]
   2ec34:	ldr	r2, [r3, #4]!
   2ec38:	mla	lr, r2, r1, lr
   2ec3c:	str	r3, [sp, #32]
   2ec40:	ldr	r3, [r0, #4]!
   2ec44:	ldr	r2, [sp, #20]
   2ec48:	str	r0, [sp, #28]
   2ec4c:	mul	r3, r3, r2
   2ec50:	str	r3, [sp, #20]
   2ec54:	bne	2ebd4 <GetDataSlab+0xcda8>
   2ec58:	ldr	r3, [sp, #8]
   2ec5c:	cmp	r6, #1
   2ec60:	add	r5, r3, lr, lsl #2
   2ec64:	ldr	r3, [sp, #20]
   2ec68:	beq	352e0 <GetDataSlab+0x134b4>
   2ec6c:	cmp	r3, #0
   2ec70:	ble	30874 <GetDataSlab+0xea48>
   2ec74:	ldr	r3, [r9]
   2ec78:	str	r3, [sp, #8]
   2ec7c:	mov	r3, #0
   2ec80:	str	r3, [sp, #24]
   2ec84:	ldr	r3, [sp, #8]
   2ec88:	cmp	r3, #0
   2ec8c:	beq	2ec98 <GetDataSlab+0xce6c>
   2ec90:	add	r5, r5, r3, lsl #2
   2ec94:	add	lr, lr, r3
   2ec98:	cmp	fp, #0
   2ec9c:	ble	2ecec <GetDataSlab+0xcec0>
   2eca0:	ldr	r3, [sp, #4]
   2eca4:	ldr	r2, [sp, #24]
   2eca8:	add	r1, r3, r2, lsl #2
   2ecac:	mov	r3, #0
   2ecb0:	vldr	s15, [r5]
   2ecb4:	add	r3, r3, #1
   2ecb8:	ldr	r2, [sp, #228]	; 0xe4
   2ecbc:	vcvt.s32.f32	s15, s15
   2ecc0:	vstmia	r1!, {s15}
   2ecc4:	ldr	fp, [r2]
   2ecc8:	ldr	r6, [sl]
   2eccc:	cmp	fp, r3
   2ecd0:	add	r5, r5, r6, lsl #2
   2ecd4:	add	lr, lr, r6
   2ecd8:	bgt	2ecb0 <GetDataSlab+0xce84>
   2ecdc:	ldr	r3, [r9]
   2ece0:	str	r3, [sp, #8]
   2ece4:	ldr	r3, [r8]
   2ece8:	str	r3, [sp, #16]
   2ecec:	ldr	r2, [sp, #8]
   2ecf0:	ldr	r3, [sp, #16]
   2ecf4:	sub	r3, r3, r2
   2ecf8:	ldr	r2, [sp, #232]	; 0xe8
   2ecfc:	mls	r3, r6, fp, r3
   2ed00:	cmp	r2, #1
   2ed04:	add	lr, lr, r3
   2ed08:	add	r5, r5, r3, lsl #2
   2ed0c:	ble	3391c <GetDataSlab+0x11af0>
   2ed10:	ldr	r3, [sp, #100]	; 0x64
   2ed14:	ldr	r2, [sp, #228]	; 0xe4
   2ed18:	add	r3, r3, #1
   2ed1c:	ldr	r1, [r2, #4]
   2ed20:	str	r3, [sp, #100]	; 0x64
   2ed24:	sdiv	r2, r3, r1
   2ed28:	mls	r3, r1, r2, r3
   2ed2c:	cmp	r3, #0
   2ed30:	bne	33904 <GetDataSlab+0x11ad8>
   2ed34:	add	ip, sp, #100	; 0x64
   2ed38:	mov	r0, #1
   2ed3c:	ldr	r4, [sp, #12]
   2ed40:	ldr	r3, [sp, #228]	; 0xe4
   2ed44:	add	r7, r3, #4
   2ed48:	b	2ed90 <GetDataSlab+0xcf64>
   2ed4c:	ldr	r3, [r4, #-4]
   2ed50:	ldr	r1, [r9, r0, lsl #2]
   2ed54:	mla	r3, r1, r3, r2
   2ed58:	add	r5, r5, r3, lsl #2
   2ed5c:	add	lr, lr, r3
   2ed60:	ldr	r3, [sp, #232]	; 0xe8
   2ed64:	add	r0, r0, #1
   2ed68:	cmp	r3, r0
   2ed6c:	beq	3391c <GetDataSlab+0x11af0>
   2ed70:	ldr	r3, [ip]
   2ed74:	ldr	r1, [r7, #4]!
   2ed78:	add	r3, r3, #1
   2ed7c:	sdiv	r2, r3, r1
   2ed80:	str	r3, [ip]
   2ed84:	mls	r3, r1, r2, r3
   2ed88:	cmp	r3, #0
   2ed8c:	bne	33908 <GetDataSlab+0x11adc>
   2ed90:	ldr	r2, [r4, #4]!
   2ed94:	mov	r3, #0
   2ed98:	str	r3, [ip], #4
   2ed9c:	sdiv	r3, lr, r2
   2eda0:	mls	r3, r2, r3, lr
   2eda4:	cmp	r3, #0
   2eda8:	sub	r2, r2, r3
   2edac:	bne	2ed4c <GetDataSlab+0xcf20>
   2edb0:	ldr	r3, [r9, r0, lsl #2]
   2edb4:	cmp	r3, #0
   2edb8:	beq	2ed60 <GetDataSlab+0xcf34>
   2edbc:	ldr	r2, [r4, #-4]
   2edc0:	mul	r3, r2, r3
   2edc4:	add	r5, r5, r3, lsl #2
   2edc8:	add	lr, lr, r3
   2edcc:	b	2ed60 <GetDataSlab+0xcf34>
   2edd0:	cmp	lr, #12
   2edd4:	beq	34e78 <GetDataSlab+0x1304c>
   2edd8:	cmp	lr, #13
   2eddc:	bne	2200c <GetDataSlab+0x1e0>
   2ede0:	ldr	r3, [sl]
   2ede4:	str	r3, [sp, #32]
   2ede8:	ldr	r3, [sp, #232]	; 0xe8
   2edec:	cmp	r3, #1
   2edf0:	ldr	r3, [r8]
   2edf4:	str	r3, [sp, #36]	; 0x24
   2edf8:	ldr	r3, [sp, #228]	; 0xe4
   2edfc:	ldr	r3, [r3]
   2ee00:	str	r3, [sp, #20]
   2ee04:	ldr	r3, [sp, #32]
   2ee08:	sub	r3, r3, #1
   2ee0c:	str	r3, [sp, #56]	; 0x38
   2ee10:	ldr	r3, [sp, #36]	; 0x24
   2ee14:	str	r3, [sp, #136]	; 0x88
   2ee18:	ble	402d4 <GetDataSlab+0x1e4a8>
   2ee1c:	add	r6, sl, #4
   2ee20:	ldr	fp, [sp, #228]	; 0xe4
   2ee24:	add	lr, sp, #60	; 0x3c
   2ee28:	mov	r5, r8
   2ee2c:	mov	r4, #0
   2ee30:	str	r9, [sp, #24]
   2ee34:	ldr	r3, [sp, #232]	; 0xe8
   2ee38:	add	r3, sl, r3, lsl #2
   2ee3c:	ldr	sl, [sp, #12]
   2ee40:	str	r3, [sp, #28]
   2ee44:	ldr	r3, [sp, #20]
   2ee48:	str	r3, [sp, #16]
   2ee4c:	ldr	r3, [r6], #4
   2ee50:	mov	r7, sl
   2ee54:	ldr	r0, [r5], #4
   2ee58:	sub	ip, r3, #1
   2ee5c:	mov	r1, r5
   2ee60:	str	ip, [lr], #4
   2ee64:	mov	r3, r1
   2ee68:	ldr	r2, [r1, #-4]!
   2ee6c:	ldr	r3, [r3]
   2ee70:	cmp	r1, r8
   2ee74:	mul	ip, r2, ip
   2ee78:	mul	r0, r3, r0
   2ee7c:	bne	2ee64 <GetDataSlab+0xd038>
   2ee80:	ldr	r3, [sp, #28]
   2ee84:	str	r0, [sl, #4]!
   2ee88:	ldr	r1, [r7]
   2ee8c:	str	ip, [lr, #-4]
   2ee90:	cmp	r6, r3
   2ee94:	ldr	r3, [sp, #24]
   2ee98:	ldr	r2, [r3, #4]!
   2ee9c:	mla	r4, r2, r1, r4
   2eea0:	str	r3, [sp, #24]
   2eea4:	ldr	r3, [fp, #4]!
   2eea8:	ldr	r2, [sp, #16]
   2eeac:	mul	r3, r3, r2
   2eeb0:	str	r3, [sp, #16]
   2eeb4:	bne	2ee4c <GetDataSlab+0xd020>
   2eeb8:	ldr	r3, [sp, #32]
   2eebc:	cmp	r3, #1
   2eec0:	ldr	r3, [sp, #8]
   2eec4:	add	r6, r3, r4, lsl #3
   2eec8:	ldr	r3, [sp, #16]
   2eecc:	beq	3df88 <GetDataSlab+0x1c15c>
   2eed0:	cmp	r3, #0
   2eed4:	ble	30874 <GetDataSlab+0xea48>
   2eed8:	ldr	r3, [r9]
   2eedc:	mov	fp, #0
   2eee0:	mov	sl, fp
   2eee4:	ldr	r2, [sp, #20]
   2eee8:	ldr	r1, [sp, #20]
   2eeec:	str	r3, [sp, #8]
   2eef0:	ldr	r3, [sp, #32]
   2eef4:	lsl	r2, r2, #1
   2eef8:	str	r2, [sp, #28]
   2eefc:	lsl	r7, r3, #3
   2ef00:	ldr	r3, [sp, #20]
   2ef04:	ldr	r2, [sp, #32]
   2ef08:	sub	r3, r3, #1
   2ef0c:	mul	r3, r2, r3
   2ef10:	ldr	r2, [sp, #28]
   2ef14:	str	r3, [sp, #40]	; 0x28
   2ef18:	ldr	r3, [sp, #20]
   2ef1c:	mul	r3, r3, r7
   2ef20:	str	r3, [sp, #44]	; 0x2c
   2ef24:	ldr	r3, [sp, #4]
   2ef28:	add	r8, r3, r2
   2ef2c:	ldr	r2, [sp, #8]
   2ef30:	ldr	r3, [sp, #36]	; 0x24
   2ef34:	sub	r3, r3, r2
   2ef38:	lsl	r2, r2, #3
   2ef3c:	str	r2, [sp, #48]	; 0x30
   2ef40:	ldr	r2, [sp, #32]
   2ef44:	mls	r3, r1, r2, r3
   2ef48:	str	r3, [sp, #24]
   2ef4c:	lsl	r3, r3, #3
   2ef50:	str	r3, [sp, #36]	; 0x24
   2ef54:	ldr	r3, [sp, #8]
   2ef58:	cmp	r3, #0
   2ef5c:	beq	2ef70 <GetDataSlab+0xd144>
   2ef60:	ldr	r3, [sp, #48]	; 0x30
   2ef64:	add	r6, r6, r3
   2ef68:	ldr	r3, [sp, #8]
   2ef6c:	add	r4, r4, r3
   2ef70:	ldr	r3, [sp, #20]
   2ef74:	cmp	r3, #0
   2ef78:	ble	2efb0 <GetDataSlab+0xd184>
   2ef7c:	ldr	r3, [sp, #4]
   2ef80:	mov	r1, r6
   2ef84:	add	r2, r3, fp, lsl #1
   2ef88:	ldr	r3, [r1], r7
   2ef8c:	strh	r3, [r2], #2
   2ef90:	cmp	r2, r8
   2ef94:	bne	2ef88 <GetDataSlab+0xd15c>
   2ef98:	ldr	r3, [sp, #32]
   2ef9c:	ldr	r2, [sp, #44]	; 0x2c
   2efa0:	add	r3, r3, r4
   2efa4:	add	r6, r6, r2
   2efa8:	ldr	r2, [sp, #40]	; 0x28
   2efac:	add	r4, r2, r3
   2efb0:	ldr	r3, [sp, #232]	; 0xe8
   2efb4:	cmp	r3, #1
   2efb8:	ldr	r3, [sp, #24]
   2efbc:	add	r4, r4, r3
   2efc0:	ldr	r3, [sp, #36]	; 0x24
   2efc4:	add	r6, r6, r3
   2efc8:	ble	34854 <GetDataSlab+0x12a28>
   2efcc:	ldr	r3, [sp, #100]	; 0x64
   2efd0:	ldr	r2, [sp, #228]	; 0xe4
   2efd4:	add	r3, r3, #1
   2efd8:	ldr	r1, [r2, #4]
   2efdc:	str	r3, [sp, #100]	; 0x64
   2efe0:	sdiv	r2, r3, r1
   2efe4:	mls	r3, r1, r2, r3
   2efe8:	cmp	r3, #0
   2efec:	bne	3483c <GetDataSlab+0x12a10>
   2eff0:	add	ip, sp, #100	; 0x64
   2eff4:	mov	r0, #1
   2eff8:	ldr	lr, [sp, #12]
   2effc:	ldr	r3, [sp, #228]	; 0xe4
   2f000:	add	r5, r3, #4
   2f004:	b	2f04c <GetDataSlab+0xd220>
   2f008:	ldr	r3, [lr, #-4]
   2f00c:	ldr	r1, [r9, r0, lsl #2]
   2f010:	mla	r3, r1, r3, r2
   2f014:	add	r6, r6, r3, lsl #3
   2f018:	add	r4, r4, r3
   2f01c:	ldr	r3, [sp, #232]	; 0xe8
   2f020:	add	r0, r0, #1
   2f024:	cmp	r3, r0
   2f028:	beq	34854 <GetDataSlab+0x12a28>
   2f02c:	ldr	r3, [ip]
   2f030:	ldr	r1, [r5, #4]!
   2f034:	add	r3, r3, #1
   2f038:	sdiv	r2, r3, r1
   2f03c:	str	r3, [ip]
   2f040:	mls	r3, r1, r2, r3
   2f044:	cmp	r3, #0
   2f048:	bne	34840 <GetDataSlab+0x12a14>
   2f04c:	ldr	r2, [lr, #4]!
   2f050:	str	sl, [ip], #4
   2f054:	sdiv	r3, r4, r2
   2f058:	mls	r3, r2, r3, r4
   2f05c:	cmp	r3, #0
   2f060:	sub	r2, r2, r3
   2f064:	bne	2f008 <GetDataSlab+0xd1dc>
   2f068:	ldr	r3, [r9, r0, lsl #2]
   2f06c:	cmp	r3, #0
   2f070:	beq	2f01c <GetDataSlab+0xd1f0>
   2f074:	ldr	r2, [lr, #-4]
   2f078:	mul	r3, r2, r3
   2f07c:	add	r6, r6, r3, lsl #3
   2f080:	add	r4, r4, r3
   2f084:	b	2f01c <GetDataSlab+0xd1f0>
   2f088:	cmp	lr, #12
   2f08c:	beq	349f4 <GetDataSlab+0x12bc8>
   2f090:	cmp	lr, #13
   2f094:	bne	2200c <GetDataSlab+0x1e0>
   2f098:	ldr	r3, [sl]
   2f09c:	str	r3, [sp, #32]
   2f0a0:	ldr	r3, [sp, #232]	; 0xe8
   2f0a4:	cmp	r3, #1
   2f0a8:	ldr	r3, [r8]
   2f0ac:	str	r3, [sp, #40]	; 0x28
   2f0b0:	ldr	r3, [sp, #228]	; 0xe4
   2f0b4:	ldr	r3, [r3]
   2f0b8:	str	r3, [sp, #20]
   2f0bc:	ldr	r3, [sp, #32]
   2f0c0:	sub	r3, r3, #1
   2f0c4:	str	r3, [sp, #56]	; 0x38
   2f0c8:	ldr	r3, [sp, #40]	; 0x28
   2f0cc:	str	r3, [sp, #136]	; 0x88
   2f0d0:	ble	402ec <GetDataSlab+0x1e4c0>
   2f0d4:	add	r5, sl, #4
   2f0d8:	ldr	fp, [sp, #228]	; 0xe4
   2f0dc:	add	lr, sp, #60	; 0x3c
   2f0e0:	mov	r4, r8
   2f0e4:	mov	r7, #0
   2f0e8:	str	r9, [sp, #24]
   2f0ec:	ldr	r3, [sp, #232]	; 0xe8
   2f0f0:	add	r3, sl, r3, lsl #2
   2f0f4:	ldr	sl, [sp, #12]
   2f0f8:	str	r3, [sp, #28]
   2f0fc:	ldr	r3, [sp, #20]
   2f100:	str	r3, [sp, #16]
   2f104:	ldr	r3, [r5], #4
   2f108:	mov	r6, sl
   2f10c:	ldr	r0, [r4], #4
   2f110:	sub	ip, r3, #1
   2f114:	mov	r1, r4
   2f118:	str	ip, [lr], #4
   2f11c:	mov	r3, r1
   2f120:	ldr	r2, [r1, #-4]!
   2f124:	ldr	r3, [r3]
   2f128:	cmp	r8, r1
   2f12c:	mul	ip, r2, ip
   2f130:	mul	r0, r3, r0
   2f134:	bne	2f11c <GetDataSlab+0xd2f0>
   2f138:	ldr	r3, [sp, #28]
   2f13c:	str	r0, [sl, #4]!
   2f140:	ldr	r1, [r6]
   2f144:	str	ip, [lr, #-4]
   2f148:	cmp	r3, r5
   2f14c:	ldr	r3, [sp, #24]
   2f150:	ldr	r2, [r3, #4]!
   2f154:	mla	r7, r2, r1, r7
   2f158:	str	r3, [sp, #24]
   2f15c:	ldr	r3, [fp, #4]!
   2f160:	ldr	r2, [sp, #16]
   2f164:	mul	r3, r3, r2
   2f168:	str	r3, [sp, #16]
   2f16c:	bne	2f104 <GetDataSlab+0xd2d8>
   2f170:	ldr	r3, [sp, #32]
   2f174:	cmp	r3, #1
   2f178:	ldr	r3, [sp, #8]
   2f17c:	add	r8, r3, r7, lsl #3
   2f180:	ldr	r3, [sp, #16]
   2f184:	beq	3dde8 <GetDataSlab+0x1bfbc>
   2f188:	cmp	r3, #0
   2f18c:	ble	30874 <GetDataSlab+0xea48>
   2f190:	ldr	r3, [r9]
   2f194:	mov	sl, #0
   2f198:	ldr	r2, [sp, #20]
   2f19c:	ldr	r1, [sp, #20]
   2f1a0:	str	r3, [sp, #24]
   2f1a4:	ldr	r3, [sp, #32]
   2f1a8:	lsl	r2, r2, #2
   2f1ac:	str	r2, [sp, #36]	; 0x24
   2f1b0:	mov	r2, #0
   2f1b4:	lsl	fp, r3, #3
   2f1b8:	ldr	r3, [sp, #20]
   2f1bc:	str	r2, [sp, #8]
   2f1c0:	ldr	r2, [sp, #32]
   2f1c4:	sub	r3, r3, #1
   2f1c8:	mul	r3, r2, r3
   2f1cc:	ldr	r2, [sp, #36]	; 0x24
   2f1d0:	str	r3, [sp, #44]	; 0x2c
   2f1d4:	ldr	r3, [sp, #20]
   2f1d8:	mul	r3, r3, fp
   2f1dc:	str	r3, [sp, #48]	; 0x30
   2f1e0:	ldr	r3, [sp, #4]
   2f1e4:	add	r6, r3, r2
   2f1e8:	ldr	r2, [sp, #24]
   2f1ec:	ldr	r3, [sp, #40]	; 0x28
   2f1f0:	sub	r3, r3, r2
   2f1f4:	lsl	r2, r2, #3
   2f1f8:	str	r2, [sp, #52]	; 0x34
   2f1fc:	ldr	r2, [sp, #32]
   2f200:	mls	r3, r1, r2, r3
   2f204:	str	r3, [sp, #28]
   2f208:	lsl	r3, r3, #3
   2f20c:	str	r3, [sp, #40]	; 0x28
   2f210:	ldr	r3, [sp, #24]
   2f214:	cmp	r3, #0
   2f218:	beq	2f22c <GetDataSlab+0xd400>
   2f21c:	ldr	r3, [sp, #52]	; 0x34
   2f220:	add	r8, r8, r3
   2f224:	ldr	r3, [sp, #24]
   2f228:	add	r7, r7, r3
   2f22c:	ldr	r3, [sp, #20]
   2f230:	cmp	r3, #0
   2f234:	ble	2f278 <GetDataSlab+0xd44c>
   2f238:	ldr	r3, [sp, #4]
   2f23c:	mov	r5, r8
   2f240:	ldr	r2, [sp, #8]
   2f244:	add	r4, r3, r2, lsl #2
   2f248:	ldrd	r0, [r5]
   2f24c:	add	r5, r5, fp
   2f250:	bl	4e308 <__aeabi_ul2f>
   2f254:	str	r0, [r4], #4
   2f258:	cmp	r6, r4
   2f25c:	bne	2f248 <GetDataSlab+0xd41c>
   2f260:	ldr	r3, [sp, #32]
   2f264:	ldr	r2, [sp, #48]	; 0x30
   2f268:	add	r3, r3, r7
   2f26c:	add	r8, r8, r2
   2f270:	ldr	r2, [sp, #44]	; 0x2c
   2f274:	add	r7, r2, r3
   2f278:	ldr	r3, [sp, #232]	; 0xe8
   2f27c:	cmp	r3, #1
   2f280:	ldr	r3, [sp, #28]
   2f284:	add	r7, r7, r3
   2f288:	ldr	r3, [sp, #40]	; 0x28
   2f28c:	add	r8, r8, r3
   2f290:	ble	34664 <GetDataSlab+0x12838>
   2f294:	ldr	r3, [sp, #100]	; 0x64
   2f298:	ldr	r2, [sp, #228]	; 0xe4
   2f29c:	add	r3, r3, #1
   2f2a0:	ldr	r1, [r2, #4]
   2f2a4:	str	r3, [sp, #100]	; 0x64
   2f2a8:	sdiv	r2, r3, r1
   2f2ac:	mls	r3, r1, r2, r3
   2f2b0:	cmp	r3, #0
   2f2b4:	bne	3464c <GetDataSlab+0x12820>
   2f2b8:	add	ip, sp, #100	; 0x64
   2f2bc:	mov	r0, #1
   2f2c0:	ldr	lr, [sp, #12]
   2f2c4:	ldr	r3, [sp, #228]	; 0xe4
   2f2c8:	add	r4, r3, #4
   2f2cc:	b	2f314 <GetDataSlab+0xd4e8>
   2f2d0:	ldr	r3, [lr, #-4]
   2f2d4:	ldr	r1, [r9, r0, lsl #2]
   2f2d8:	mla	r3, r1, r3, r2
   2f2dc:	add	r8, r8, r3, lsl #3
   2f2e0:	add	r7, r7, r3
   2f2e4:	ldr	r3, [sp, #232]	; 0xe8
   2f2e8:	add	r0, r0, #1
   2f2ec:	cmp	r3, r0
   2f2f0:	beq	34664 <GetDataSlab+0x12838>
   2f2f4:	ldr	r3, [ip]
   2f2f8:	ldr	r1, [r4, #4]!
   2f2fc:	add	r3, r3, #1
   2f300:	sdiv	r2, r3, r1
   2f304:	str	r3, [ip]
   2f308:	mls	r3, r1, r2, r3
   2f30c:	cmp	r3, #0
   2f310:	bne	34650 <GetDataSlab+0x12824>
   2f314:	ldr	r2, [lr, #4]!
   2f318:	str	sl, [ip], #4
   2f31c:	sdiv	r3, r7, r2
   2f320:	mls	r3, r2, r3, r7
   2f324:	cmp	r3, #0
   2f328:	sub	r2, r2, r3
   2f32c:	bne	2f2d0 <GetDataSlab+0xd4a4>
   2f330:	ldr	r3, [r9, r0, lsl #2]
   2f334:	cmp	r3, #0
   2f338:	beq	2f2e4 <GetDataSlab+0xd4b8>
   2f33c:	ldr	r2, [lr, #-4]
   2f340:	mul	r3, r2, r3
   2f344:	add	r8, r8, r3, lsl #3
   2f348:	add	r7, r7, r3
   2f34c:	b	2f2e4 <GetDataSlab+0xd4b8>
   2f350:	cmp	lr, #12
   2f354:	beq	370b8 <GetDataSlab+0x1528c>
   2f358:	cmp	lr, #13
   2f35c:	bne	2200c <GetDataSlab+0x1e0>
   2f360:	ldr	r3, [sp, #232]	; 0xe8
   2f364:	ldr	r6, [sl]
   2f368:	cmp	r3, #1
   2f36c:	ldr	r3, [r8]
   2f370:	str	r3, [sp, #16]
   2f374:	ldr	r3, [sp, #228]	; 0xe4
   2f378:	ldr	fp, [r3]
   2f37c:	sub	r3, r6, #1
   2f380:	str	r3, [sp, #56]	; 0x38
   2f384:	ldr	r3, [sp, #16]
   2f388:	str	fp, [sp, #20]
   2f38c:	str	r3, [sp, #136]	; 0x88
   2f390:	ble	402bc <GetDataSlab+0x1e490>
   2f394:	ldr	r3, [sp, #232]	; 0xe8
   2f398:	add	r7, sl, #4
   2f39c:	add	r5, sp, #60	; 0x3c
   2f3a0:	mov	lr, r8
   2f3a4:	mov	r4, #0
   2f3a8:	str	r9, [sp, #32]
   2f3ac:	add	r3, sl, r3, lsl #2
   2f3b0:	str	r3, [sp, #40]	; 0x28
   2f3b4:	ldr	r3, [sp, #12]
   2f3b8:	str	r3, [sp, #24]
   2f3bc:	ldr	r3, [sp, #228]	; 0xe4
   2f3c0:	str	r3, [sp, #28]
   2f3c4:	ldr	r3, [r7], #4
   2f3c8:	ldr	r0, [lr], #4
   2f3cc:	ldr	r2, [sp, #24]
   2f3d0:	sub	ip, r3, #1
   2f3d4:	mov	r1, lr
   2f3d8:	str	ip, [r5], #4
   2f3dc:	str	r2, [sp, #36]	; 0x24
   2f3e0:	mov	r3, r1
   2f3e4:	ldr	r2, [r1, #-4]!
   2f3e8:	ldr	r3, [r3]
   2f3ec:	cmp	r8, r1
   2f3f0:	mul	ip, r2, ip
   2f3f4:	mul	r0, r3, r0
   2f3f8:	bne	2f3e0 <GetDataSlab+0xd5b4>
   2f3fc:	ldr	r3, [sp, #24]
   2f400:	str	ip, [r5, #-4]
   2f404:	str	r0, [r3, #4]!
   2f408:	str	r3, [sp, #24]
   2f40c:	ldr	r0, [sp, #28]
   2f410:	ldr	r3, [sp, #40]	; 0x28
   2f414:	cmp	r3, r7
   2f418:	ldr	r3, [sp, #36]	; 0x24
   2f41c:	ldr	r1, [r3]
   2f420:	ldr	r3, [sp, #32]
   2f424:	ldr	r2, [r3, #4]!
   2f428:	mla	r4, r2, r1, r4
   2f42c:	str	r3, [sp, #32]
   2f430:	ldr	r3, [r0, #4]!
   2f434:	ldr	r2, [sp, #20]
   2f438:	str	r0, [sp, #28]
   2f43c:	mul	r3, r3, r2
   2f440:	str	r3, [sp, #20]
   2f444:	bne	2f3c4 <GetDataSlab+0xd598>
   2f448:	ldr	r3, [sp, #8]
   2f44c:	cmp	r6, #1
   2f450:	add	r5, r3, r4, lsl #3
   2f454:	ldr	r3, [sp, #20]
   2f458:	beq	3ea5c <GetDataSlab+0x1cc30>
   2f45c:	cmp	r3, #0
   2f460:	ble	30874 <GetDataSlab+0xea48>
   2f464:	ldr	r3, [r9]
   2f468:	str	r3, [sp, #8]
   2f46c:	mov	r3, #0
   2f470:	str	r3, [sp, #24]
   2f474:	ldr	r3, [sp, #8]
   2f478:	cmp	r3, #0
   2f47c:	beq	2f488 <GetDataSlab+0xd65c>
   2f480:	add	r5, r5, r3, lsl #3
   2f484:	add	r4, r4, r3
   2f488:	cmp	fp, #0
   2f48c:	ble	2f4d8 <GetDataSlab+0xd6ac>
   2f490:	ldr	r3, [sp, #4]
   2f494:	ldr	r2, [sp, #24]
   2f498:	add	r1, r3, r2
   2f49c:	mov	r2, r1
   2f4a0:	ldr	r3, [r5]
   2f4a4:	ldr	r0, [sp, #228]	; 0xe4
   2f4a8:	strb	r3, [r2], #1
   2f4ac:	sub	r3, r2, r1
   2f4b0:	ldr	r6, [sl]
   2f4b4:	ldr	fp, [r0]
   2f4b8:	add	r5, r5, r6, lsl #3
   2f4bc:	add	r4, r4, r6
   2f4c0:	cmp	fp, r3
   2f4c4:	bgt	2f4a0 <GetDataSlab+0xd674>
   2f4c8:	ldr	r3, [r9]
   2f4cc:	str	r3, [sp, #8]
   2f4d0:	ldr	r3, [r8]
   2f4d4:	str	r3, [sp, #16]
   2f4d8:	ldr	r2, [sp, #8]
   2f4dc:	ldr	r3, [sp, #16]
   2f4e0:	sub	r3, r3, r2
   2f4e4:	ldr	r2, [sp, #232]	; 0xe8
   2f4e8:	mls	r3, r6, fp, r3
   2f4ec:	cmp	r2, #1
   2f4f0:	add	r4, r4, r3
   2f4f4:	add	r5, r5, r3, lsl #3
   2f4f8:	ble	34824 <GetDataSlab+0x129f8>
   2f4fc:	ldr	r3, [sp, #100]	; 0x64
   2f500:	ldr	r2, [sp, #228]	; 0xe4
   2f504:	add	r3, r3, #1
   2f508:	ldr	r1, [r2, #4]
   2f50c:	str	r3, [sp, #100]	; 0x64
   2f510:	sdiv	r2, r3, r1
   2f514:	mls	r3, r1, r2, r3
   2f518:	cmp	r3, #0
   2f51c:	bne	3480c <GetDataSlab+0x129e0>
   2f520:	add	ip, sp, #100	; 0x64
   2f524:	mov	r0, #1
   2f528:	ldr	lr, [sp, #12]
   2f52c:	ldr	r3, [sp, #228]	; 0xe4
   2f530:	add	r7, r3, #4
   2f534:	b	2f57c <GetDataSlab+0xd750>
   2f538:	ldr	r3, [lr, #-4]
   2f53c:	ldr	r1, [r9, r0, lsl #2]
   2f540:	mla	r3, r1, r3, r2
   2f544:	add	r5, r5, r3, lsl #3
   2f548:	add	r4, r4, r3
   2f54c:	ldr	r3, [sp, #232]	; 0xe8
   2f550:	add	r0, r0, #1
   2f554:	cmp	r3, r0
   2f558:	beq	34824 <GetDataSlab+0x129f8>
   2f55c:	ldr	r3, [ip]
   2f560:	ldr	r1, [r7, #4]!
   2f564:	add	r3, r3, #1
   2f568:	sdiv	r2, r3, r1
   2f56c:	str	r3, [ip]
   2f570:	mls	r3, r1, r2, r3
   2f574:	cmp	r3, #0
   2f578:	bne	34810 <GetDataSlab+0x129e4>
   2f57c:	ldr	r2, [lr, #4]!
   2f580:	mov	r3, #0
   2f584:	str	r3, [ip], #4
   2f588:	sdiv	r3, r4, r2
   2f58c:	mls	r3, r2, r3, r4
   2f590:	cmp	r3, #0
   2f594:	sub	r2, r2, r3
   2f598:	bne	2f538 <GetDataSlab+0xd70c>
   2f59c:	ldr	r3, [r9, r0, lsl #2]
   2f5a0:	cmp	r3, #0
   2f5a4:	beq	2f54c <GetDataSlab+0xd720>
   2f5a8:	ldr	r2, [lr, #-4]
   2f5ac:	mul	r3, r2, r3
   2f5b0:	add	r5, r5, r3, lsl #3
   2f5b4:	add	r4, r4, r3
   2f5b8:	b	2f54c <GetDataSlab+0xd720>
   2f5bc:	cmp	lr, #12
   2f5c0:	beq	37344 <GetDataSlab+0x15518>
   2f5c4:	cmp	lr, #13
   2f5c8:	bne	2200c <GetDataSlab+0x1e0>
   2f5cc:	ldr	r3, [sl]
   2f5d0:	str	r3, [sp, #32]
   2f5d4:	ldr	r3, [sp, #232]	; 0xe8
   2f5d8:	cmp	r3, #1
   2f5dc:	ldr	r3, [r8]
   2f5e0:	str	r3, [sp, #40]	; 0x28
   2f5e4:	ldr	r3, [sp, #228]	; 0xe4
   2f5e8:	ldr	r3, [r3]
   2f5ec:	str	r3, [sp, #20]
   2f5f0:	ldr	r3, [sp, #32]
   2f5f4:	sub	r3, r3, #1
   2f5f8:	str	r3, [sp, #56]	; 0x38
   2f5fc:	ldr	r3, [sp, #40]	; 0x28
   2f600:	str	r3, [sp, #136]	; 0x88
   2f604:	ble	4022c <GetDataSlab+0x1e400>
   2f608:	add	r5, sl, #4
   2f60c:	ldr	fp, [sp, #228]	; 0xe4
   2f610:	add	lr, sp, #60	; 0x3c
   2f614:	mov	r4, r8
   2f618:	mov	r7, #0
   2f61c:	str	r9, [sp, #24]
   2f620:	ldr	r3, [sp, #232]	; 0xe8
   2f624:	add	r3, sl, r3, lsl #2
   2f628:	ldr	sl, [sp, #12]
   2f62c:	str	r3, [sp, #28]
   2f630:	ldr	r3, [sp, #20]
   2f634:	str	r3, [sp, #16]
   2f638:	ldr	r3, [r5], #4
   2f63c:	mov	r6, sl
   2f640:	ldr	r0, [r4], #4
   2f644:	sub	ip, r3, #1
   2f648:	mov	r1, r4
   2f64c:	str	ip, [lr], #4
   2f650:	mov	r3, r1
   2f654:	ldr	r2, [r1, #-4]!
   2f658:	ldr	r3, [r3]
   2f65c:	cmp	r8, r1
   2f660:	mul	ip, r2, ip
   2f664:	mul	r0, r3, r0
   2f668:	bne	2f650 <GetDataSlab+0xd824>
   2f66c:	ldr	r3, [sp, #28]
   2f670:	str	r0, [sl, #4]!
   2f674:	ldr	r1, [r6]
   2f678:	str	ip, [lr, #-4]
   2f67c:	cmp	r3, r5
   2f680:	ldr	r3, [sp, #24]
   2f684:	ldr	r2, [r3, #4]!
   2f688:	mla	r7, r2, r1, r7
   2f68c:	str	r3, [sp, #24]
   2f690:	ldr	r3, [fp, #4]!
   2f694:	ldr	r2, [sp, #16]
   2f698:	mul	r3, r3, r2
   2f69c:	str	r3, [sp, #16]
   2f6a0:	bne	2f638 <GetDataSlab+0xd80c>
   2f6a4:	ldr	r3, [sp, #32]
   2f6a8:	cmp	r3, #1
   2f6ac:	ldr	r3, [sp, #8]
   2f6b0:	add	r8, r3, r7, lsl #3
   2f6b4:	ldr	r3, [sp, #16]
   2f6b8:	beq	3e8bc <GetDataSlab+0x1ca90>
   2f6bc:	cmp	r3, #0
   2f6c0:	ble	30874 <GetDataSlab+0xea48>
   2f6c4:	ldr	r3, [r9]
   2f6c8:	mov	sl, #0
   2f6cc:	ldr	r2, [sp, #20]
   2f6d0:	ldr	r1, [sp, #20]
   2f6d4:	str	r3, [sp, #24]
   2f6d8:	ldr	r3, [sp, #32]
   2f6dc:	lsl	r2, r2, #3
   2f6e0:	str	r2, [sp, #36]	; 0x24
   2f6e4:	mov	r2, #0
   2f6e8:	lsl	fp, r3, #3
   2f6ec:	ldr	r3, [sp, #20]
   2f6f0:	str	r2, [sp, #8]
   2f6f4:	ldr	r2, [sp, #32]
   2f6f8:	sub	r3, r3, #1
   2f6fc:	mul	r3, r2, r3
   2f700:	ldr	r2, [sp, #36]	; 0x24
   2f704:	str	r3, [sp, #44]	; 0x2c
   2f708:	ldr	r3, [sp, #20]
   2f70c:	mul	r3, r3, fp
   2f710:	str	r3, [sp, #48]	; 0x30
   2f714:	ldr	r3, [sp, #4]
   2f718:	add	r6, r3, r2
   2f71c:	ldr	r2, [sp, #24]
   2f720:	ldr	r3, [sp, #40]	; 0x28
   2f724:	sub	r3, r3, r2
   2f728:	lsl	r2, r2, #3
   2f72c:	str	r2, [sp, #52]	; 0x34
   2f730:	ldr	r2, [sp, #32]
   2f734:	mls	r3, r1, r2, r3
   2f738:	str	r3, [sp, #28]
   2f73c:	lsl	r3, r3, #3
   2f740:	str	r3, [sp, #40]	; 0x28
   2f744:	ldr	r3, [sp, #24]
   2f748:	cmp	r3, #0
   2f74c:	beq	2f760 <GetDataSlab+0xd934>
   2f750:	ldr	r3, [sp, #52]	; 0x34
   2f754:	add	r8, r8, r3
   2f758:	ldr	r3, [sp, #24]
   2f75c:	add	r7, r7, r3
   2f760:	ldr	r3, [sp, #20]
   2f764:	cmp	r3, #0
   2f768:	ble	2f7ac <GetDataSlab+0xd980>
   2f76c:	ldr	r3, [sp, #4]
   2f770:	mov	r5, r8
   2f774:	ldr	r2, [sp, #8]
   2f778:	add	r4, r3, r2, lsl #3
   2f77c:	ldrd	r0, [r5]
   2f780:	add	r5, r5, fp
   2f784:	bl	4e0d0 <__aeabi_ul2d>
   2f788:	strd	r0, [r4], #8
   2f78c:	cmp	r6, r4
   2f790:	bne	2f77c <GetDataSlab+0xd950>
   2f794:	ldr	r3, [sp, #32]
   2f798:	ldr	r2, [sp, #48]	; 0x30
   2f79c:	add	r3, r3, r7
   2f7a0:	add	r8, r8, r2
   2f7a4:	ldr	r2, [sp, #44]	; 0x2c
   2f7a8:	add	r7, r2, r3
   2f7ac:	ldr	r3, [sp, #232]	; 0xe8
   2f7b0:	cmp	r3, #1
   2f7b4:	ldr	r3, [sp, #28]
   2f7b8:	add	r7, r7, r3
   2f7bc:	ldr	r3, [sp, #40]	; 0x28
   2f7c0:	add	r8, r8, r3
   2f7c4:	ble	347e0 <GetDataSlab+0x129b4>
   2f7c8:	ldr	r3, [sp, #100]	; 0x64
   2f7cc:	ldr	r2, [sp, #228]	; 0xe4
   2f7d0:	add	r3, r3, #1
   2f7d4:	ldr	r1, [r2, #4]
   2f7d8:	str	r3, [sp, #100]	; 0x64
   2f7dc:	sdiv	r2, r3, r1
   2f7e0:	mls	r3, r1, r2, r3
   2f7e4:	cmp	r3, #0
   2f7e8:	bne	347c8 <GetDataSlab+0x1299c>
   2f7ec:	add	ip, sp, #100	; 0x64
   2f7f0:	mov	r0, #1
   2f7f4:	ldr	lr, [sp, #12]
   2f7f8:	ldr	r3, [sp, #228]	; 0xe4
   2f7fc:	add	r4, r3, #4
   2f800:	b	2f848 <GetDataSlab+0xda1c>
   2f804:	ldr	r3, [lr, #-4]
   2f808:	ldr	r1, [r9, r0, lsl #2]
   2f80c:	mla	r3, r1, r3, r2
   2f810:	add	r8, r8, r3, lsl #3
   2f814:	add	r7, r7, r3
   2f818:	ldr	r3, [sp, #232]	; 0xe8
   2f81c:	add	r0, r0, #1
   2f820:	cmp	r3, r0
   2f824:	beq	347e0 <GetDataSlab+0x129b4>
   2f828:	ldr	r3, [ip]
   2f82c:	ldr	r1, [r4, #4]!
   2f830:	add	r3, r3, #1
   2f834:	sdiv	r2, r3, r1
   2f838:	str	r3, [ip]
   2f83c:	mls	r3, r1, r2, r3
   2f840:	cmp	r3, #0
   2f844:	bne	347cc <GetDataSlab+0x129a0>
   2f848:	ldr	r2, [lr, #4]!
   2f84c:	str	sl, [ip], #4
   2f850:	sdiv	r3, r7, r2
   2f854:	mls	r3, r2, r3, r7
   2f858:	cmp	r3, #0
   2f85c:	sub	r2, r2, r3
   2f860:	bne	2f804 <GetDataSlab+0xd9d8>
   2f864:	ldr	r3, [r9, r0, lsl #2]
   2f868:	cmp	r3, #0
   2f86c:	beq	2f818 <GetDataSlab+0xd9ec>
   2f870:	ldr	r2, [lr, #-4]
   2f874:	mul	r3, r2, r3
   2f878:	add	r8, r8, r3, lsl #3
   2f87c:	add	r7, r7, r3
   2f880:	b	2f818 <GetDataSlab+0xd9ec>
   2f884:	cmp	lr, #12
   2f888:	beq	38200 <GetDataSlab+0x163d4>
   2f88c:	cmp	lr, #13
   2f890:	bne	2200c <GetDataSlab+0x1e0>
   2f894:	ldr	r3, [sl]
   2f898:	str	r3, [sp, #32]
   2f89c:	ldr	r3, [sp, #232]	; 0xe8
   2f8a0:	cmp	r3, #1
   2f8a4:	ldr	r3, [r8]
   2f8a8:	str	r3, [sp, #36]	; 0x24
   2f8ac:	ldr	r3, [sp, #228]	; 0xe4
   2f8b0:	ldr	r3, [r3]
   2f8b4:	str	r3, [sp, #20]
   2f8b8:	ldr	r3, [sp, #32]
   2f8bc:	sub	r3, r3, #1
   2f8c0:	str	r3, [sp, #56]	; 0x38
   2f8c4:	ldr	r3, [sp, #36]	; 0x24
   2f8c8:	str	r3, [sp, #136]	; 0x88
   2f8cc:	ble	4030c <GetDataSlab+0x1e4e0>
   2f8d0:	add	r6, sl, #4
   2f8d4:	ldr	fp, [sp, #228]	; 0xe4
   2f8d8:	add	lr, sp, #60	; 0x3c
   2f8dc:	mov	r5, r8
   2f8e0:	mov	r4, #0
   2f8e4:	str	r9, [sp, #24]
   2f8e8:	ldr	r3, [sp, #232]	; 0xe8
   2f8ec:	add	r3, sl, r3, lsl #2
   2f8f0:	ldr	sl, [sp, #12]
   2f8f4:	str	r3, [sp, #28]
   2f8f8:	ldr	r3, [sp, #20]
   2f8fc:	str	r3, [sp, #16]
   2f900:	ldr	r3, [r6], #4
   2f904:	mov	r7, sl
   2f908:	ldr	r0, [r5], #4
   2f90c:	sub	ip, r3, #1
   2f910:	mov	r1, r5
   2f914:	str	ip, [lr], #4
   2f918:	mov	r3, r1
   2f91c:	ldr	r2, [r1, #-4]!
   2f920:	ldr	r3, [r3]
   2f924:	cmp	r1, r8
   2f928:	mul	ip, r2, ip
   2f92c:	mul	r0, r3, r0
   2f930:	bne	2f918 <GetDataSlab+0xdaec>
   2f934:	ldr	r3, [sp, #28]
   2f938:	str	r0, [sl, #4]!
   2f93c:	ldr	r1, [r7]
   2f940:	str	ip, [lr, #-4]
   2f944:	cmp	r6, r3
   2f948:	ldr	r3, [sp, #24]
   2f94c:	ldr	r2, [r3, #4]!
   2f950:	mla	r4, r2, r1, r4
   2f954:	str	r3, [sp, #24]
   2f958:	ldr	r3, [fp, #4]!
   2f95c:	ldr	r2, [sp, #16]
   2f960:	mul	r3, r3, r2
   2f964:	str	r3, [sp, #16]
   2f968:	bne	2f900 <GetDataSlab+0xdad4>
   2f96c:	ldr	r3, [sp, #32]
   2f970:	cmp	r3, #1
   2f974:	ldr	r3, [sp, #8]
   2f978:	add	r6, r3, r4, lsl #3
   2f97c:	ldr	r3, [sp, #16]
   2f980:	beq	3e108 <GetDataSlab+0x1c2dc>
   2f984:	cmp	r3, #0
   2f988:	ble	30874 <GetDataSlab+0xea48>
   2f98c:	ldr	r3, [r9]
   2f990:	mov	fp, #0
   2f994:	mov	r8, fp
   2f998:	ldr	r2, [sp, #20]
   2f99c:	ldr	r1, [sp, #20]
   2f9a0:	str	r3, [sp, #8]
   2f9a4:	ldr	r3, [sp, #32]
   2f9a8:	lsl	r2, r2, #3
   2f9ac:	str	r2, [sp, #28]
   2f9b0:	lsl	sl, r3, #3
   2f9b4:	ldr	r3, [sp, #20]
   2f9b8:	ldr	r2, [sp, #32]
   2f9bc:	sub	r3, r3, #1
   2f9c0:	mul	r3, r2, r3
   2f9c4:	ldr	r2, [sp, #28]
   2f9c8:	str	r3, [sp, #44]	; 0x2c
   2f9cc:	ldr	r3, [sp, #20]
   2f9d0:	mul	r3, r3, sl
   2f9d4:	str	r3, [sp, #40]	; 0x28
   2f9d8:	ldr	r3, [sp, #4]
   2f9dc:	add	r7, r3, r2
   2f9e0:	ldr	r2, [sp, #8]
   2f9e4:	ldr	r3, [sp, #36]	; 0x24
   2f9e8:	sub	r3, r3, r2
   2f9ec:	lsl	r2, r2, #3
   2f9f0:	str	r2, [sp, #48]	; 0x30
   2f9f4:	ldr	r2, [sp, #32]
   2f9f8:	mls	r3, r1, r2, r3
   2f9fc:	str	r3, [sp, #24]
   2fa00:	lsl	r3, r3, #3
   2fa04:	str	r3, [sp, #36]	; 0x24
   2fa08:	ldr	r3, [sp, #8]
   2fa0c:	cmp	r3, #0
   2fa10:	beq	2fa24 <GetDataSlab+0xdbf8>
   2fa14:	ldr	r3, [sp, #48]	; 0x30
   2fa18:	add	r6, r6, r3
   2fa1c:	ldr	r3, [sp, #8]
   2fa20:	add	r4, r4, r3
   2fa24:	ldr	r3, [sp, #20]
   2fa28:	cmp	r3, #0
   2fa2c:	ble	2fa68 <GetDataSlab+0xdc3c>
   2fa30:	ldr	r3, [sp, #4]
   2fa34:	mov	r0, r6
   2fa38:	add	r1, r3, fp, lsl #3
   2fa3c:	ldrd	r2, [r0]
   2fa40:	add	r0, r0, sl
   2fa44:	strd	r2, [r1], #8
   2fa48:	cmp	r1, r7
   2fa4c:	bne	2fa3c <GetDataSlab+0xdc10>
   2fa50:	ldr	r3, [sp, #32]
   2fa54:	ldr	r2, [sp, #40]	; 0x28
   2fa58:	add	r3, r4, r3
   2fa5c:	add	r6, r6, r2
   2fa60:	ldr	r2, [sp, #44]	; 0x2c
   2fa64:	add	r4, r2, r3
   2fa68:	ldr	r3, [sp, #232]	; 0xe8
   2fa6c:	cmp	r3, #1
   2fa70:	ldr	r3, [sp, #24]
   2fa74:	add	r4, r4, r3
   2fa78:	ldr	r3, [sp, #36]	; 0x24
   2fa7c:	add	r6, r6, r3
   2fa80:	ble	347a8 <GetDataSlab+0x1297c>
   2fa84:	ldr	r3, [sp, #100]	; 0x64
   2fa88:	ldr	r2, [sp, #228]	; 0xe4
   2fa8c:	add	r3, r3, #1
   2fa90:	ldr	r1, [r2, #4]
   2fa94:	str	r3, [sp, #100]	; 0x64
   2fa98:	sdiv	r2, r3, r1
   2fa9c:	mls	r3, r1, r2, r3
   2faa0:	cmp	r3, #0
   2faa4:	bne	34790 <GetDataSlab+0x12964>
   2faa8:	add	ip, sp, #100	; 0x64
   2faac:	mov	r0, #1
   2fab0:	ldr	lr, [sp, #12]
   2fab4:	ldr	r3, [sp, #228]	; 0xe4
   2fab8:	add	r5, r3, #4
   2fabc:	b	2fb04 <GetDataSlab+0xdcd8>
   2fac0:	ldr	r3, [lr, #-4]
   2fac4:	ldr	r1, [r9, r0, lsl #2]
   2fac8:	mla	r3, r1, r3, r2
   2facc:	add	r6, r6, r3, lsl #3
   2fad0:	add	r4, r4, r3
   2fad4:	ldr	r3, [sp, #232]	; 0xe8
   2fad8:	add	r0, r0, #1
   2fadc:	cmp	r3, r0
   2fae0:	beq	347a8 <GetDataSlab+0x1297c>
   2fae4:	ldr	r3, [ip]
   2fae8:	ldr	r1, [r5, #4]!
   2faec:	add	r3, r3, #1
   2faf0:	sdiv	r2, r3, r1
   2faf4:	str	r3, [ip]
   2faf8:	mls	r3, r1, r2, r3
   2fafc:	cmp	r3, #0
   2fb00:	bne	34794 <GetDataSlab+0x12968>
   2fb04:	ldr	r2, [lr, #4]!
   2fb08:	str	r8, [ip], #4
   2fb0c:	sdiv	r3, r4, r2
   2fb10:	mls	r3, r2, r3, r4
   2fb14:	cmp	r3, #0
   2fb18:	sub	r2, r2, r3
   2fb1c:	bne	2fac0 <GetDataSlab+0xdc94>
   2fb20:	ldr	r3, [r9, r0, lsl #2]
   2fb24:	cmp	r3, #0
   2fb28:	beq	2fad4 <GetDataSlab+0xdca8>
   2fb2c:	ldr	r2, [lr, #-4]
   2fb30:	mul	r3, r2, r3
   2fb34:	add	r6, r6, r3, lsl #3
   2fb38:	add	r4, r4, r3
   2fb3c:	b	2fad4 <GetDataSlab+0xdca8>
   2fb40:	cmp	lr, #12
   2fb44:	beq	36e2c <GetDataSlab+0x15000>
   2fb48:	cmp	lr, #13
   2fb4c:	bne	2200c <GetDataSlab+0x1e0>
   2fb50:	ldr	r3, [sp, #232]	; 0xe8
   2fb54:	ldr	r6, [sl]
   2fb58:	cmp	r3, #1
   2fb5c:	ldr	r3, [r8]
   2fb60:	str	r3, [sp, #16]
   2fb64:	ldr	r3, [sp, #228]	; 0xe4
   2fb68:	ldr	fp, [r3]
   2fb6c:	sub	r3, r6, #1
   2fb70:	str	r3, [sp, #56]	; 0x38
   2fb74:	ldr	r3, [sp, #16]
   2fb78:	str	fp, [sp, #20]
   2fb7c:	str	r3, [sp, #136]	; 0x88
   2fb80:	ble	40284 <GetDataSlab+0x1e458>
   2fb84:	ldr	r3, [sp, #232]	; 0xe8
   2fb88:	add	r7, sl, #4
   2fb8c:	add	r5, sp, #60	; 0x3c
   2fb90:	mov	lr, r8
   2fb94:	mov	r4, #0
   2fb98:	str	r9, [sp, #32]
   2fb9c:	add	r3, sl, r3, lsl #2
   2fba0:	str	r3, [sp, #40]	; 0x28
   2fba4:	ldr	r3, [sp, #12]
   2fba8:	str	r3, [sp, #24]
   2fbac:	ldr	r3, [sp, #228]	; 0xe4
   2fbb0:	str	r3, [sp, #28]
   2fbb4:	ldr	r3, [r7], #4
   2fbb8:	ldr	r0, [lr], #4
   2fbbc:	ldr	r2, [sp, #24]
   2fbc0:	sub	ip, r3, #1
   2fbc4:	mov	r1, lr
   2fbc8:	str	ip, [r5], #4
   2fbcc:	str	r2, [sp, #36]	; 0x24
   2fbd0:	mov	r3, r1
   2fbd4:	ldr	r2, [r1, #-4]!
   2fbd8:	ldr	r3, [r3]
   2fbdc:	cmp	r1, r8
   2fbe0:	mul	ip, r2, ip
   2fbe4:	mul	r0, r3, r0
   2fbe8:	bne	2fbd0 <GetDataSlab+0xdda4>
   2fbec:	ldr	r3, [sp, #24]
   2fbf0:	str	ip, [r5, #-4]
   2fbf4:	str	r0, [r3, #4]!
   2fbf8:	str	r3, [sp, #24]
   2fbfc:	ldr	r0, [sp, #28]
   2fc00:	ldr	r3, [sp, #40]	; 0x28
   2fc04:	cmp	r7, r3
   2fc08:	ldr	r3, [sp, #36]	; 0x24
   2fc0c:	ldr	r1, [r3]
   2fc10:	ldr	r3, [sp, #32]
   2fc14:	ldr	r2, [r3, #4]!
   2fc18:	mla	r4, r2, r1, r4
   2fc1c:	str	r3, [sp, #32]
   2fc20:	ldr	r3, [r0, #4]!
   2fc24:	ldr	r2, [sp, #20]
   2fc28:	str	r0, [sp, #28]
   2fc2c:	mul	r3, r3, r2
   2fc30:	str	r3, [sp, #20]
   2fc34:	bne	2fbb4 <GetDataSlab+0xdd88>
   2fc38:	ldr	r3, [sp, #8]
   2fc3c:	cmp	r6, #1
   2fc40:	add	r5, r3, r4, lsl #3
   2fc44:	ldr	r3, [sp, #20]
   2fc48:	beq	3f038 <GetDataSlab+0x1d20c>
   2fc4c:	cmp	r3, #0
   2fc50:	ble	30874 <GetDataSlab+0xea48>
   2fc54:	ldr	r3, [r9]
   2fc58:	str	r3, [sp, #8]
   2fc5c:	mov	r3, #0
   2fc60:	str	r3, [sp, #24]
   2fc64:	ldr	r3, [sp, #8]
   2fc68:	cmp	r3, #0
   2fc6c:	beq	2fc78 <GetDataSlab+0xde4c>
   2fc70:	add	r5, r5, r3, lsl #3
   2fc74:	add	r4, r4, r3
   2fc78:	cmp	fp, #0
   2fc7c:	ble	2fcc8 <GetDataSlab+0xde9c>
   2fc80:	ldr	r3, [sp, #4]
   2fc84:	ldr	r2, [sp, #24]
   2fc88:	add	r2, r3, r2, lsl #2
   2fc8c:	mov	r3, #0
   2fc90:	ldr	r1, [r5]
   2fc94:	add	r3, r3, #1
   2fc98:	str	r1, [r2], #4
   2fc9c:	ldr	r1, [sp, #228]	; 0xe4
   2fca0:	ldr	r6, [sl]
   2fca4:	ldr	fp, [r1]
   2fca8:	add	r5, r5, r6, lsl #3
   2fcac:	add	r4, r4, r6
   2fcb0:	cmp	fp, r3
   2fcb4:	bgt	2fc90 <GetDataSlab+0xde64>
   2fcb8:	ldr	r3, [r9]
   2fcbc:	str	r3, [sp, #8]
   2fcc0:	ldr	r3, [r8]
   2fcc4:	str	r3, [sp, #16]
   2fcc8:	ldr	r2, [sp, #8]
   2fccc:	ldr	r3, [sp, #16]
   2fcd0:	sub	r3, r3, r2
   2fcd4:	ldr	r2, [sp, #232]	; 0xe8
   2fcd8:	mls	r3, r6, fp, r3
   2fcdc:	cmp	r2, #1
   2fce0:	add	r4, r4, r3
   2fce4:	add	r5, r5, r3, lsl #3
   2fce8:	ble	34740 <GetDataSlab+0x12914>
   2fcec:	ldr	r3, [sp, #100]	; 0x64
   2fcf0:	ldr	r2, [sp, #228]	; 0xe4
   2fcf4:	add	r3, r3, #1
   2fcf8:	ldr	r1, [r2, #4]
   2fcfc:	str	r3, [sp, #100]	; 0x64
   2fd00:	sdiv	r2, r3, r1
   2fd04:	mls	r3, r1, r2, r3
   2fd08:	cmp	r3, #0
   2fd0c:	bne	34728 <GetDataSlab+0x128fc>
   2fd10:	add	ip, sp, #100	; 0x64
   2fd14:	mov	r0, #1
   2fd18:	ldr	lr, [sp, #12]
   2fd1c:	ldr	r3, [sp, #228]	; 0xe4
   2fd20:	add	r7, r3, #4
   2fd24:	b	2fd6c <GetDataSlab+0xdf40>
   2fd28:	ldr	r3, [lr, #-4]
   2fd2c:	ldr	r1, [r9, r0, lsl #2]
   2fd30:	mla	r3, r1, r3, r2
   2fd34:	add	r5, r5, r3, lsl #3
   2fd38:	add	r4, r4, r3
   2fd3c:	ldr	r3, [sp, #232]	; 0xe8
   2fd40:	add	r0, r0, #1
   2fd44:	cmp	r3, r0
   2fd48:	beq	34740 <GetDataSlab+0x12914>
   2fd4c:	ldr	r3, [ip]
   2fd50:	ldr	r1, [r7, #4]!
   2fd54:	add	r3, r3, #1
   2fd58:	sdiv	r2, r3, r1
   2fd5c:	str	r3, [ip]
   2fd60:	mls	r3, r1, r2, r3
   2fd64:	cmp	r3, #0
   2fd68:	bne	3472c <GetDataSlab+0x12900>
   2fd6c:	ldr	r2, [lr, #4]!
   2fd70:	mov	r3, #0
   2fd74:	str	r3, [ip], #4
   2fd78:	sdiv	r3, r4, r2
   2fd7c:	mls	r3, r2, r3, r4
   2fd80:	cmp	r3, #0
   2fd84:	sub	r2, r2, r3
   2fd88:	bne	2fd28 <GetDataSlab+0xdefc>
   2fd8c:	ldr	r3, [r9, r0, lsl #2]
   2fd90:	cmp	r3, #0
   2fd94:	beq	2fd3c <GetDataSlab+0xdf10>
   2fd98:	ldr	r2, [lr, #-4]
   2fd9c:	mul	r3, r2, r3
   2fda0:	add	r5, r5, r3, lsl #3
   2fda4:	add	r4, r4, r3
   2fda8:	b	2fd3c <GetDataSlab+0xdf10>
   2fdac:	cmp	lr, #12
   2fdb0:	beq	36b48 <GetDataSlab+0x14d1c>
   2fdb4:	cmp	lr, #13
   2fdb8:	bne	2200c <GetDataSlab+0x1e0>
   2fdbc:	ldr	r3, [sl]
   2fdc0:	str	r3, [sp, #32]
   2fdc4:	ldr	r3, [sp, #232]	; 0xe8
   2fdc8:	cmp	r3, #1
   2fdcc:	ldr	r3, [r8]
   2fdd0:	str	r3, [sp, #36]	; 0x24
   2fdd4:	ldr	r3, [sp, #228]	; 0xe4
   2fdd8:	ldr	r3, [r3]
   2fddc:	str	r3, [sp, #20]
   2fde0:	ldr	r3, [sp, #32]
   2fde4:	sub	r3, r3, #1
   2fde8:	str	r3, [sp, #56]	; 0x38
   2fdec:	ldr	r3, [sp, #36]	; 0x24
   2fdf0:	str	r3, [sp, #136]	; 0x88
   2fdf4:	ble	40274 <GetDataSlab+0x1e448>
   2fdf8:	add	r6, sl, #4
   2fdfc:	ldr	fp, [sp, #228]	; 0xe4
   2fe00:	add	lr, sp, #60	; 0x3c
   2fe04:	mov	r5, r8
   2fe08:	mov	r4, #0
   2fe0c:	str	r9, [sp, #24]
   2fe10:	ldr	r3, [sp, #232]	; 0xe8
   2fe14:	add	r3, sl, r3, lsl #2
   2fe18:	ldr	sl, [sp, #12]
   2fe1c:	str	r3, [sp, #28]
   2fe20:	ldr	r3, [sp, #20]
   2fe24:	str	r3, [sp, #16]
   2fe28:	ldr	r3, [r6], #4
   2fe2c:	mov	r7, sl
   2fe30:	ldr	r0, [r5], #4
   2fe34:	sub	ip, r3, #1
   2fe38:	mov	r1, r5
   2fe3c:	str	ip, [lr], #4
   2fe40:	mov	r3, r1
   2fe44:	ldr	r2, [r1, #-4]!
   2fe48:	ldr	r3, [r3]
   2fe4c:	cmp	r1, r8
   2fe50:	mul	ip, r2, ip
   2fe54:	mul	r0, r3, r0
   2fe58:	bne	2fe40 <GetDataSlab+0xe014>
   2fe5c:	ldr	r3, [sp, #28]
   2fe60:	str	r0, [sl, #4]!
   2fe64:	ldr	r1, [r7]
   2fe68:	str	ip, [lr, #-4]
   2fe6c:	cmp	r6, r3
   2fe70:	ldr	r3, [sp, #24]
   2fe74:	ldr	r2, [r3, #4]!
   2fe78:	mla	r4, r2, r1, r4
   2fe7c:	str	r3, [sp, #24]
   2fe80:	ldr	r3, [fp, #4]!
   2fe84:	ldr	r2, [sp, #16]
   2fe88:	mul	r3, r3, r2
   2fe8c:	str	r3, [sp, #16]
   2fe90:	bne	2fe28 <GetDataSlab+0xdffc>
   2fe94:	ldr	r3, [sp, #32]
   2fe98:	cmp	r3, #1
   2fe9c:	ldr	r3, [sp, #8]
   2fea0:	add	r6, r3, r4, lsl #3
   2fea4:	ldr	r3, [sp, #16]
   2fea8:	beq	3f4a0 <GetDataSlab+0x1d674>
   2feac:	cmp	r3, #0
   2feb0:	ble	30874 <GetDataSlab+0xea48>
   2feb4:	ldr	r3, [r9]
   2feb8:	mov	fp, #0
   2febc:	mov	r8, fp
   2fec0:	ldr	r2, [sp, #20]
   2fec4:	ldr	r1, [sp, #20]
   2fec8:	str	r3, [sp, #8]
   2fecc:	ldr	r3, [sp, #32]
   2fed0:	lsl	r2, r2, #3
   2fed4:	str	r2, [sp, #28]
   2fed8:	lsl	sl, r3, #3
   2fedc:	ldr	r3, [sp, #20]
   2fee0:	ldr	r2, [sp, #32]
   2fee4:	sub	r3, r3, #1
   2fee8:	mul	r3, r2, r3
   2feec:	ldr	r2, [sp, #28]
   2fef0:	str	r3, [sp, #44]	; 0x2c
   2fef4:	ldr	r3, [sp, #20]
   2fef8:	mul	r3, r3, sl
   2fefc:	str	r3, [sp, #40]	; 0x28
   2ff00:	ldr	r3, [sp, #4]
   2ff04:	add	r7, r3, r2
   2ff08:	ldr	r2, [sp, #8]
   2ff0c:	ldr	r3, [sp, #36]	; 0x24
   2ff10:	sub	r3, r3, r2
   2ff14:	lsl	r2, r2, #3
   2ff18:	str	r2, [sp, #48]	; 0x30
   2ff1c:	ldr	r2, [sp, #32]
   2ff20:	mls	r3, r1, r2, r3
   2ff24:	str	r3, [sp, #24]
   2ff28:	lsl	r3, r3, #3
   2ff2c:	str	r3, [sp, #36]	; 0x24
   2ff30:	ldr	r3, [sp, #8]
   2ff34:	cmp	r3, #0
   2ff38:	beq	2ff4c <GetDataSlab+0xe120>
   2ff3c:	ldr	r3, [sp, #48]	; 0x30
   2ff40:	add	r6, r6, r3
   2ff44:	ldr	r3, [sp, #8]
   2ff48:	add	r4, r4, r3
   2ff4c:	ldr	r3, [sp, #20]
   2ff50:	cmp	r3, #0
   2ff54:	ble	2ff90 <GetDataSlab+0xe164>
   2ff58:	ldr	r3, [sp, #4]
   2ff5c:	mov	r0, r6
   2ff60:	add	r1, r3, fp, lsl #3
   2ff64:	ldrd	r2, [r0]
   2ff68:	add	r0, r0, sl
   2ff6c:	strd	r2, [r1], #8
   2ff70:	cmp	r1, r7
   2ff74:	bne	2ff64 <GetDataSlab+0xe138>
   2ff78:	ldr	r3, [sp, #32]
   2ff7c:	ldr	r2, [sp, #40]	; 0x28
   2ff80:	add	r3, r3, r4
   2ff84:	add	r6, r6, r2
   2ff88:	ldr	r2, [sp, #44]	; 0x2c
   2ff8c:	add	r4, r3, r2
   2ff90:	ldr	r3, [sp, #232]	; 0xe8
   2ff94:	cmp	r3, #1
   2ff98:	ldr	r3, [sp, #24]
   2ff9c:	add	r4, r4, r3
   2ffa0:	ldr	r3, [sp, #36]	; 0x24
   2ffa4:	add	r6, r6, r3
   2ffa8:	ble	34770 <GetDataSlab+0x12944>
   2ffac:	ldr	r3, [sp, #100]	; 0x64
   2ffb0:	ldr	r2, [sp, #228]	; 0xe4
   2ffb4:	add	r3, r3, #1
   2ffb8:	ldr	r1, [r2, #4]
   2ffbc:	str	r3, [sp, #100]	; 0x64
   2ffc0:	sdiv	r2, r3, r1
   2ffc4:	mls	r3, r1, r2, r3
   2ffc8:	cmp	r3, #0
   2ffcc:	bne	34758 <GetDataSlab+0x1292c>
   2ffd0:	add	ip, sp, #100	; 0x64
   2ffd4:	mov	r0, #1
   2ffd8:	ldr	lr, [sp, #12]
   2ffdc:	ldr	r3, [sp, #228]	; 0xe4
   2ffe0:	add	r5, r3, #4
   2ffe4:	b	3002c <GetDataSlab+0xe200>
   2ffe8:	ldr	r3, [lr, #-4]
   2ffec:	ldr	r1, [r9, r0, lsl #2]
   2fff0:	mla	r3, r1, r3, r2
   2fff4:	add	r6, r6, r3, lsl #3
   2fff8:	add	r4, r4, r3
   2fffc:	ldr	r3, [sp, #232]	; 0xe8
   30000:	add	r0, r0, #1
   30004:	cmp	r3, r0
   30008:	beq	34770 <GetDataSlab+0x12944>
   3000c:	ldr	r3, [ip]
   30010:	ldr	r1, [r5, #4]!
   30014:	add	r3, r3, #1
   30018:	sdiv	r2, r3, r1
   3001c:	str	r3, [ip]
   30020:	mls	r3, r1, r2, r3
   30024:	cmp	r3, #0
   30028:	bne	3475c <GetDataSlab+0x12930>
   3002c:	ldr	r2, [lr, #4]!
   30030:	str	r8, [ip], #4
   30034:	sdiv	r3, r4, r2
   30038:	mls	r3, r2, r3, r4
   3003c:	cmp	r3, #0
   30040:	sub	r2, r2, r3
   30044:	bne	2ffe8 <GetDataSlab+0xe1bc>
   30048:	ldr	r3, [r9, r0, lsl #2]
   3004c:	cmp	r3, #0
   30050:	beq	2fffc <GetDataSlab+0xe1d0>
   30054:	ldr	r2, [lr, #-4]
   30058:	mul	r3, r2, r3
   3005c:	add	r6, r6, r3, lsl #3
   30060:	add	r4, r4, r3
   30064:	b	2fffc <GetDataSlab+0xe1d0>
   30068:	cmp	lr, #12
   3006c:	beq	368bc <GetDataSlab+0x14a90>
   30070:	cmp	lr, #13
   30074:	bne	2200c <GetDataSlab+0x1e0>
   30078:	ldr	r3, [sp, #232]	; 0xe8
   3007c:	ldr	r6, [sl]
   30080:	cmp	r3, #1
   30084:	ldr	r3, [r8]
   30088:	str	r3, [sp, #16]
   3008c:	ldr	r3, [sp, #228]	; 0xe4
   30090:	ldr	fp, [r3]
   30094:	sub	r3, r6, #1
   30098:	str	r3, [sp, #56]	; 0x38
   3009c:	ldr	r3, [sp, #16]
   300a0:	str	fp, [sp, #20]
   300a4:	str	r3, [sp, #136]	; 0x88
   300a8:	ble	4028c <GetDataSlab+0x1e460>
   300ac:	ldr	r3, [sp, #232]	; 0xe8
   300b0:	add	r7, sl, #4
   300b4:	add	r5, sp, #60	; 0x3c
   300b8:	mov	lr, r8
   300bc:	mov	r4, #0
   300c0:	str	r9, [sp, #28]
   300c4:	add	r3, sl, r3, lsl #2
   300c8:	str	r3, [sp, #40]	; 0x28
   300cc:	ldr	r3, [sp, #12]
   300d0:	str	r3, [sp, #24]
   300d4:	ldr	r3, [sp, #228]	; 0xe4
   300d8:	str	r3, [sp, #32]
   300dc:	ldr	r3, [r7], #4
   300e0:	ldr	r0, [lr], #4
   300e4:	ldr	r2, [sp, #24]
   300e8:	sub	ip, r3, #1
   300ec:	mov	r1, lr
   300f0:	str	ip, [r5], #4
   300f4:	str	r2, [sp, #36]	; 0x24
   300f8:	mov	r3, r1
   300fc:	ldr	r2, [r1, #-4]!
   30100:	ldr	r3, [r3]
   30104:	cmp	r8, r1
   30108:	mul	ip, r2, ip
   3010c:	mul	r0, r3, r0
   30110:	bne	300f8 <GetDataSlab+0xe2cc>
   30114:	ldr	r3, [sp, #24]
   30118:	str	ip, [r5, #-4]
   3011c:	str	r0, [r3, #4]!
   30120:	str	r3, [sp, #24]
   30124:	ldr	r0, [sp, #32]
   30128:	ldr	r3, [sp, #40]	; 0x28
   3012c:	cmp	r3, r7
   30130:	ldr	r3, [sp, #36]	; 0x24
   30134:	ldr	r1, [r3]
   30138:	ldr	r3, [sp, #28]
   3013c:	ldr	r2, [r3, #4]!
   30140:	mla	r4, r2, r1, r4
   30144:	str	r3, [sp, #28]
   30148:	ldr	r3, [r0, #4]!
   3014c:	ldr	r2, [sp, #20]
   30150:	str	r0, [sp, #32]
   30154:	mul	r3, r3, r2
   30158:	str	r3, [sp, #20]
   3015c:	bne	300dc <GetDataSlab+0xe2b0>
   30160:	ldr	r3, [sp, #8]
   30164:	cmp	r6, #1
   30168:	add	r5, r3, r4, lsl #3
   3016c:	ldr	r3, [sp, #20]
   30170:	beq	3f32c <GetDataSlab+0x1d500>
   30174:	cmp	r3, #0
   30178:	ble	30874 <GetDataSlab+0xea48>
   3017c:	ldr	r3, [r9]
   30180:	str	r3, [sp, #8]
   30184:	mov	r3, #0
   30188:	str	r3, [sp, #24]
   3018c:	ldr	r3, [sp, #8]
   30190:	cmp	r3, #0
   30194:	beq	301a0 <GetDataSlab+0xe374>
   30198:	add	r5, r5, r3, lsl #3
   3019c:	add	r4, r4, r3
   301a0:	cmp	fp, #0
   301a4:	ble	301f0 <GetDataSlab+0xe3c4>
   301a8:	ldr	r3, [sp, #4]
   301ac:	ldr	r2, [sp, #24]
   301b0:	add	r1, r3, r2
   301b4:	mov	r2, r1
   301b8:	ldr	r3, [r5]
   301bc:	ldr	r0, [sp, #228]	; 0xe4
   301c0:	strb	r3, [r2], #1
   301c4:	sub	r3, r2, r1
   301c8:	ldr	r6, [sl]
   301cc:	ldr	fp, [r0]
   301d0:	add	r5, r5, r6, lsl #3
   301d4:	add	r4, r4, r6
   301d8:	cmp	fp, r3
   301dc:	bgt	301b8 <GetDataSlab+0xe38c>
   301e0:	ldr	r3, [r9]
   301e4:	str	r3, [sp, #8]
   301e8:	ldr	r3, [r8]
   301ec:	str	r3, [sp, #16]
   301f0:	ldr	r2, [sp, #8]
   301f4:	ldr	r3, [sp, #16]
   301f8:	sub	r3, r3, r2
   301fc:	ldr	r2, [sp, #232]	; 0xe8
   30200:	mls	r3, r6, fp, r3
   30204:	cmp	r2, #1
   30208:	add	r4, r4, r3
   3020c:	add	r5, r5, r3, lsl #3
   30210:	ble	34710 <GetDataSlab+0x128e4>
   30214:	ldr	r3, [sp, #100]	; 0x64
   30218:	ldr	r2, [sp, #228]	; 0xe4
   3021c:	add	r3, r3, #1
   30220:	ldr	r1, [r2, #4]
   30224:	str	r3, [sp, #100]	; 0x64
   30228:	sdiv	r2, r3, r1
   3022c:	mls	r3, r1, r2, r3
   30230:	cmp	r3, #0
   30234:	bne	346f8 <GetDataSlab+0x128cc>
   30238:	add	ip, sp, #100	; 0x64
   3023c:	mov	r0, #1
   30240:	ldr	lr, [sp, #12]
   30244:	ldr	r3, [sp, #228]	; 0xe4
   30248:	add	r7, r3, #4
   3024c:	b	30294 <GetDataSlab+0xe468>
   30250:	ldr	r3, [lr, #-4]
   30254:	ldr	r1, [r9, r0, lsl #2]
   30258:	mla	r3, r1, r3, r2
   3025c:	add	r5, r5, r3, lsl #3
   30260:	add	r4, r4, r3
   30264:	ldr	r3, [sp, #232]	; 0xe8
   30268:	add	r0, r0, #1
   3026c:	cmp	r3, r0
   30270:	beq	34710 <GetDataSlab+0x128e4>
   30274:	ldr	r3, [ip]
   30278:	ldr	r1, [r7, #4]!
   3027c:	add	r3, r3, #1
   30280:	sdiv	r2, r3, r1
   30284:	str	r3, [ip]
   30288:	mls	r3, r1, r2, r3
   3028c:	cmp	r3, #0
   30290:	bne	346fc <GetDataSlab+0x128d0>
   30294:	ldr	r2, [lr, #4]!
   30298:	mov	r3, #0
   3029c:	str	r3, [ip], #4
   302a0:	sdiv	r3, r4, r2
   302a4:	mls	r3, r2, r3, r4
   302a8:	cmp	r3, #0
   302ac:	sub	r2, r2, r3
   302b0:	bne	30250 <GetDataSlab+0xe424>
   302b4:	ldr	r3, [r9, r0, lsl #2]
   302b8:	cmp	r3, #0
   302bc:	beq	30264 <GetDataSlab+0xe438>
   302c0:	ldr	r2, [lr, #-4]
   302c4:	mul	r3, r2, r3
   302c8:	add	r5, r5, r3, lsl #3
   302cc:	add	r4, r4, r3
   302d0:	b	30264 <GetDataSlab+0xe438>
   302d4:	cmp	lr, #12
   302d8:	beq	365dc <GetDataSlab+0x147b0>
   302dc:	cmp	lr, #13
   302e0:	bne	2200c <GetDataSlab+0x1e0>
   302e4:	ldr	r3, [sl]
   302e8:	str	r3, [sp, #32]
   302ec:	ldr	r3, [sp, #232]	; 0xe8
   302f0:	cmp	r3, #1
   302f4:	ldr	r3, [r8]
   302f8:	str	r3, [sp, #36]	; 0x24
   302fc:	ldr	r3, [sp, #228]	; 0xe4
   30300:	ldr	r3, [r3]
   30304:	str	r3, [sp, #20]
   30308:	ldr	r3, [sp, #32]
   3030c:	sub	r3, r3, #1
   30310:	str	r3, [sp, #56]	; 0x38
   30314:	ldr	r3, [sp, #36]	; 0x24
   30318:	str	r3, [sp, #136]	; 0x88
   3031c:	ble	402a4 <GetDataSlab+0x1e478>
   30320:	add	r6, sl, #4
   30324:	ldr	fp, [sp, #228]	; 0xe4
   30328:	add	lr, sp, #60	; 0x3c
   3032c:	mov	r5, r8
   30330:	mov	r4, #0
   30334:	str	r9, [sp, #24]
   30338:	ldr	r3, [sp, #232]	; 0xe8
   3033c:	add	r3, sl, r3, lsl #2
   30340:	ldr	sl, [sp, #12]
   30344:	str	r3, [sp, #28]
   30348:	ldr	r3, [sp, #20]
   3034c:	str	r3, [sp, #16]
   30350:	ldr	r3, [r6], #4
   30354:	mov	r7, sl
   30358:	ldr	r0, [r5], #4
   3035c:	sub	ip, r3, #1
   30360:	mov	r1, r5
   30364:	str	ip, [lr], #4
   30368:	mov	r3, r1
   3036c:	ldr	r2, [r1, #-4]!
   30370:	ldr	r3, [r3]
   30374:	cmp	r8, r1
   30378:	mul	ip, r2, ip
   3037c:	mul	r0, r3, r0
   30380:	bne	30368 <GetDataSlab+0xe53c>
   30384:	ldr	r3, [sp, #28]
   30388:	str	r0, [sl, #4]!
   3038c:	ldr	r1, [r7]
   30390:	str	ip, [lr, #-4]
   30394:	cmp	r3, r6
   30398:	ldr	r3, [sp, #24]
   3039c:	ldr	r2, [r3, #4]!
   303a0:	mla	r4, r2, r1, r4
   303a4:	str	r3, [sp, #24]
   303a8:	ldr	r3, [fp, #4]!
   303ac:	ldr	r2, [sp, #16]
   303b0:	mul	r3, r3, r2
   303b4:	str	r3, [sp, #16]
   303b8:	bne	30350 <GetDataSlab+0xe524>
   303bc:	ldr	r3, [sp, #32]
   303c0:	cmp	r3, #1
   303c4:	ldr	r3, [sp, #8]
   303c8:	add	r6, r3, r4, lsl #3
   303cc:	ldr	r3, [sp, #16]
   303d0:	beq	3eeb8 <GetDataSlab+0x1d08c>
   303d4:	cmp	r3, #0
   303d8:	ble	30874 <GetDataSlab+0xea48>
   303dc:	ldr	r3, [r9]
   303e0:	mov	fp, #0
   303e4:	mov	sl, fp
   303e8:	ldr	r2, [sp, #20]
   303ec:	ldr	r1, [sp, #20]
   303f0:	str	r3, [sp, #8]
   303f4:	ldr	r3, [sp, #32]
   303f8:	lsl	r2, r2, #1
   303fc:	str	r2, [sp, #28]
   30400:	lsl	r7, r3, #3
   30404:	ldr	r3, [sp, #20]
   30408:	ldr	r2, [sp, #32]
   3040c:	sub	r3, r3, #1
   30410:	mul	r3, r2, r3
   30414:	ldr	r2, [sp, #28]
   30418:	str	r3, [sp, #44]	; 0x2c
   3041c:	ldr	r3, [sp, #20]
   30420:	mul	r3, r3, r7
   30424:	str	r3, [sp, #40]	; 0x28
   30428:	ldr	r3, [sp, #4]
   3042c:	add	r8, r3, r2
   30430:	ldr	r2, [sp, #8]
   30434:	ldr	r3, [sp, #36]	; 0x24
   30438:	sub	r3, r3, r2
   3043c:	lsl	r2, r2, #3
   30440:	str	r2, [sp, #48]	; 0x30
   30444:	ldr	r2, [sp, #32]
   30448:	mls	r3, r1, r2, r3
   3044c:	str	r3, [sp, #24]
   30450:	lsl	r3, r3, #3
   30454:	str	r3, [sp, #36]	; 0x24
   30458:	ldr	r3, [sp, #8]
   3045c:	cmp	r3, #0
   30460:	beq	30474 <GetDataSlab+0xe648>
   30464:	ldr	r3, [sp, #48]	; 0x30
   30468:	add	r6, r6, r3
   3046c:	ldr	r3, [sp, #8]
   30470:	add	r4, r4, r3
   30474:	ldr	r3, [sp, #20]
   30478:	cmp	r3, #0
   3047c:	ble	304b4 <GetDataSlab+0xe688>
   30480:	ldr	r3, [sp, #4]
   30484:	mov	r1, r6
   30488:	add	r2, r3, fp, lsl #1
   3048c:	ldr	r3, [r1], r7
   30490:	strh	r3, [r2], #2
   30494:	cmp	r8, r2
   30498:	bne	3048c <GetDataSlab+0xe660>
   3049c:	ldr	r3, [sp, #32]
   304a0:	ldr	r2, [sp, #40]	; 0x28
   304a4:	add	r3, r4, r3
   304a8:	add	r6, r6, r2
   304ac:	ldr	r2, [sp, #44]	; 0x2c
   304b0:	add	r4, r2, r3
   304b4:	ldr	r3, [sp, #232]	; 0xe8
   304b8:	cmp	r3, #1
   304bc:	ldr	r3, [sp, #24]
   304c0:	add	r4, r4, r3
   304c4:	ldr	r3, [sp, #36]	; 0x24
   304c8:	add	r6, r6, r3
   304cc:	ble	346d8 <GetDataSlab+0x128ac>
   304d0:	ldr	r3, [sp, #100]	; 0x64
   304d4:	ldr	r2, [sp, #228]	; 0xe4
   304d8:	add	r3, r3, #1
   304dc:	ldr	r1, [r2, #4]
   304e0:	str	r3, [sp, #100]	; 0x64
   304e4:	sdiv	r2, r3, r1
   304e8:	mls	r3, r1, r2, r3
   304ec:	cmp	r3, #0
   304f0:	bne	346c0 <GetDataSlab+0x12894>
   304f4:	add	ip, sp, #100	; 0x64
   304f8:	mov	r0, #1
   304fc:	ldr	lr, [sp, #12]
   30500:	ldr	r3, [sp, #228]	; 0xe4
   30504:	add	r5, r3, #4
   30508:	b	30550 <GetDataSlab+0xe724>
   3050c:	ldr	r3, [lr, #-4]
   30510:	ldr	r1, [r9, r0, lsl #2]
   30514:	mla	r3, r1, r3, r2
   30518:	add	r6, r6, r3, lsl #3
   3051c:	add	r4, r4, r3
   30520:	ldr	r3, [sp, #232]	; 0xe8
   30524:	add	r0, r0, #1
   30528:	cmp	r3, r0
   3052c:	beq	346d8 <GetDataSlab+0x128ac>
   30530:	ldr	r3, [ip]
   30534:	ldr	r1, [r5, #4]!
   30538:	add	r3, r3, #1
   3053c:	sdiv	r2, r3, r1
   30540:	str	r3, [ip]
   30544:	mls	r3, r1, r2, r3
   30548:	cmp	r3, #0
   3054c:	bne	346c4 <GetDataSlab+0x12898>
   30550:	ldr	r2, [lr, #4]!
   30554:	str	sl, [ip], #4
   30558:	sdiv	r3, r4, r2
   3055c:	mls	r3, r2, r3, r4
   30560:	cmp	r3, #0
   30564:	sub	r2, r2, r3
   30568:	bne	3050c <GetDataSlab+0xe6e0>
   3056c:	ldr	r3, [r9, r0, lsl #2]
   30570:	cmp	r3, #0
   30574:	beq	30520 <GetDataSlab+0xe6f4>
   30578:	ldr	r2, [lr, #-4]
   3057c:	mul	r3, r2, r3
   30580:	add	r6, r6, r3, lsl #3
   30584:	add	r4, r4, r3
   30588:	b	30520 <GetDataSlab+0xe6f4>
   3058c:	cmp	lr, #12
   30590:	beq	36048 <GetDataSlab+0x1421c>
   30594:	cmp	lr, #13
   30598:	bne	2200c <GetDataSlab+0x1e0>
   3059c:	ldr	r3, [sp, #232]	; 0xe8
   305a0:	ldr	r6, [sl]
   305a4:	cmp	r3, #1
   305a8:	ldr	r3, [r8]
   305ac:	str	r3, [sp, #16]
   305b0:	ldr	r3, [sp, #228]	; 0xe4
   305b4:	ldr	fp, [r3]
   305b8:	sub	r3, r6, #1
   305bc:	str	r3, [sp, #56]	; 0x38
   305c0:	ldr	r3, [sp, #16]
   305c4:	str	fp, [sp, #20]
   305c8:	str	r3, [sp, #136]	; 0x88
   305cc:	ble	4021c <GetDataSlab+0x1e3f0>
   305d0:	ldr	r3, [sp, #232]	; 0xe8
   305d4:	add	r7, sl, #4
   305d8:	add	r5, sp, #60	; 0x3c
   305dc:	mov	lr, r8
   305e0:	mov	r4, #0
   305e4:	str	r9, [sp, #32]
   305e8:	add	r3, sl, r3, lsl #2
   305ec:	str	r3, [sp, #40]	; 0x28
   305f0:	ldr	r3, [sp, #12]
   305f4:	str	r3, [sp, #24]
   305f8:	ldr	r3, [sp, #228]	; 0xe4
   305fc:	str	r3, [sp, #28]
   30600:	ldr	r3, [r7], #4
   30604:	ldr	r0, [lr], #4
   30608:	ldr	r2, [sp, #24]
   3060c:	sub	ip, r3, #1
   30610:	mov	r1, lr
   30614:	str	ip, [r5], #4
   30618:	str	r2, [sp, #36]	; 0x24
   3061c:	mov	r3, r1
   30620:	ldr	r2, [r1, #-4]!
   30624:	ldr	r3, [r3]
   30628:	cmp	r1, r8
   3062c:	mul	ip, r2, ip
   30630:	mul	r0, r3, r0
   30634:	bne	3061c <GetDataSlab+0xe7f0>
   30638:	ldr	r3, [sp, #24]
   3063c:	str	ip, [r5, #-4]
   30640:	str	r0, [r3, #4]!
   30644:	str	r3, [sp, #24]
   30648:	ldr	r0, [sp, #28]
   3064c:	ldr	r3, [sp, #40]	; 0x28
   30650:	cmp	r7, r3
   30654:	ldr	r3, [sp, #36]	; 0x24
   30658:	ldr	r1, [r3]
   3065c:	ldr	r3, [sp, #32]
   30660:	ldr	r2, [r3, #4]!
   30664:	mla	r4, r2, r1, r4
   30668:	str	r3, [sp, #32]
   3066c:	ldr	r3, [r0, #4]!
   30670:	ldr	r2, [sp, #20]
   30674:	str	r0, [sp, #28]
   30678:	mul	r3, r3, r2
   3067c:	str	r3, [sp, #20]
   30680:	bne	30600 <GetDataSlab+0xe7d4>
   30684:	ldr	r3, [sp, #8]
   30688:	cmp	r6, #1
   3068c:	add	r5, r3, r4, lsl #3
   30690:	ldr	r3, [sp, #20]
   30694:	beq	3dc74 <GetDataSlab+0x1be48>
   30698:	cmp	r3, #0
   3069c:	ble	30874 <GetDataSlab+0xea48>
   306a0:	ldr	r3, [r9]
   306a4:	str	r3, [sp, #8]
   306a8:	mov	r3, #0
   306ac:	str	r3, [sp, #24]
   306b0:	ldr	r3, [sp, #8]
   306b4:	cmp	r3, #0
   306b8:	beq	306c4 <GetDataSlab+0xe898>
   306bc:	add	r5, r5, r3, lsl #3
   306c0:	add	r4, r4, r3
   306c4:	cmp	fp, #0
   306c8:	ble	30714 <GetDataSlab+0xe8e8>
   306cc:	ldr	r3, [sp, #4]
   306d0:	ldr	r2, [sp, #24]
   306d4:	add	r2, r3, r2, lsl #2
   306d8:	mov	r3, #0
   306dc:	ldr	r1, [r5]
   306e0:	add	r3, r3, #1
   306e4:	str	r1, [r2], #4
   306e8:	ldr	r1, [sp, #228]	; 0xe4
   306ec:	ldr	r6, [sl]
   306f0:	ldr	fp, [r1]
   306f4:	add	r5, r5, r6, lsl #3
   306f8:	add	r4, r4, r6
   306fc:	cmp	fp, r3
   30700:	bgt	306dc <GetDataSlab+0xe8b0>
   30704:	ldr	r3, [r9]
   30708:	str	r3, [sp, #8]
   3070c:	ldr	r3, [r8]
   30710:	str	r3, [sp, #16]
   30714:	ldr	r2, [sp, #8]
   30718:	ldr	r3, [sp, #16]
   3071c:	sub	r3, r3, r2
   30720:	ldr	r2, [sp, #232]	; 0xe8
   30724:	mls	r3, r6, fp, r3
   30728:	cmp	r2, #1
   3072c:	add	r4, r4, r3
   30730:	add	r5, r5, r3, lsl #3
   30734:	ble	346a8 <GetDataSlab+0x1287c>
   30738:	ldr	r3, [sp, #100]	; 0x64
   3073c:	ldr	r2, [sp, #228]	; 0xe4
   30740:	add	r3, r3, #1
   30744:	ldr	r1, [r2, #4]
   30748:	str	r3, [sp, #100]	; 0x64
   3074c:	sdiv	r2, r3, r1
   30750:	mls	r3, r1, r2, r3
   30754:	cmp	r3, #0
   30758:	bne	34690 <GetDataSlab+0x12864>
   3075c:	add	ip, sp, #100	; 0x64
   30760:	mov	r0, #1
   30764:	ldr	lr, [sp, #12]
   30768:	ldr	r3, [sp, #228]	; 0xe4
   3076c:	add	r7, r3, #4
   30770:	b	307b8 <GetDataSlab+0xe98c>
   30774:	ldr	r3, [lr, #-4]
   30778:	ldr	r1, [r9, r0, lsl #2]
   3077c:	mla	r3, r1, r3, r2
   30780:	add	r5, r5, r3, lsl #3
   30784:	add	r4, r4, r3
   30788:	ldr	r3, [sp, #232]	; 0xe8
   3078c:	add	r0, r0, #1
   30790:	cmp	r3, r0
   30794:	beq	346a8 <GetDataSlab+0x1287c>
   30798:	ldr	r3, [ip]
   3079c:	ldr	r1, [r7, #4]!
   307a0:	add	r3, r3, #1
   307a4:	sdiv	r2, r3, r1
   307a8:	str	r3, [ip]
   307ac:	mls	r3, r1, r2, r3
   307b0:	cmp	r3, #0
   307b4:	bne	34694 <GetDataSlab+0x12868>
   307b8:	ldr	r2, [lr, #4]!
   307bc:	mov	r3, #0
   307c0:	str	r3, [ip], #4
   307c4:	sdiv	r3, r4, r2
   307c8:	mls	r3, r2, r3, r4
   307cc:	cmp	r3, #0
   307d0:	sub	r2, r2, r3
   307d4:	bne	30774 <GetDataSlab+0xe948>
   307d8:	ldr	r3, [r9, r0, lsl #2]
   307dc:	cmp	r3, #0
   307e0:	beq	30788 <GetDataSlab+0xe95c>
   307e4:	ldr	r2, [lr, #-4]
   307e8:	mul	r3, r2, r3
   307ec:	add	r5, r5, r3, lsl #3
   307f0:	add	r4, r4, r3
   307f4:	b	30788 <GetDataSlab+0xe95c>
   307f8:	ldr	r3, [sp, #16]
   307fc:	cmp	r6, #0
   30800:	mla	r3, r5, r3, r0
   30804:	ldr	r0, [sp, #8]
   30808:	add	ip, r0, r3, lsl #3
   3080c:	ble	30874 <GetDataSlab+0xea48>
   30810:	ldr	r3, [sp, #16]
   30814:	lsl	r0, r1, #3
   30818:	mov	lr, #0
   3081c:	lsl	r5, fp, #2
   30820:	mul	r3, r2, r3
   30824:	lsl	r4, r3, #3
   30828:	cmp	fp, #0
   3082c:	ble	30864 <GetDataSlab+0xea38>
   30830:	ldr	r1, [sp, #4]
   30834:	mov	r2, ip
   30838:	mov	r3, #0
   3083c:	add	r3, r3, #1
   30840:	vldr	d7, [r2]
   30844:	cmp	fp, r3
   30848:	add	r2, r2, r0
   3084c:	vcvt.f32.f64	s15, d7
   30850:	vstmia	r1!, {s15}
   30854:	bne	3083c <GetDataSlab+0xea10>
   30858:	ldr	r3, [sp, #4]
   3085c:	add	r3, r3, r5
   30860:	str	r3, [sp, #4]
   30864:	add	lr, lr, #1
   30868:	add	ip, ip, r4
   3086c:	cmp	r6, lr
   30870:	bne	30828 <GetDataSlab+0xe9fc>
   30874:	mov	r3, #0
   30878:	b	22010 <GetDataSlab+0x1e4>
   3087c:	ldr	r3, [sp, #16]
   30880:	cmp	r6, #0
   30884:	mla	r3, r5, r3, r0
   30888:	ldr	r0, [sp, #8]
   3088c:	add	lr, r0, r3, lsl #2
   30890:	ble	30874 <GetDataSlab+0xea48>
   30894:	ldr	r3, [sp, #16]
   30898:	lsl	ip, r1, #2
   3089c:	mov	r4, #0
   308a0:	lsl	r7, fp, #2
   308a4:	mul	r3, r2, r3
   308a8:	lsl	r5, r3, #2
   308ac:	cmp	fp, #0
   308b0:	ble	308e4 <GetDataSlab+0xeab8>
   308b4:	ldr	r1, [sp, #4]
   308b8:	mov	r2, lr
   308bc:	mov	r3, #0
   308c0:	add	r3, r3, #1
   308c4:	ldr	r0, [r2]
   308c8:	cmp	fp, r3
   308cc:	add	r2, r2, ip
   308d0:	str	r0, [r1], #4
   308d4:	bne	308c0 <GetDataSlab+0xea94>
   308d8:	ldr	r3, [sp, #4]
   308dc:	add	r3, r3, r7
   308e0:	str	r3, [sp, #4]
   308e4:	add	r4, r4, #1
   308e8:	add	lr, lr, r5
   308ec:	cmp	r6, r4
   308f0:	bne	308ac <GetDataSlab+0xea80>
   308f4:	b	30874 <GetDataSlab+0xea48>
   308f8:	ldr	r3, [sp, #16]
   308fc:	cmp	r6, #0
   30900:	mla	r3, r5, r3, r0
   30904:	ldr	r0, [sp, #8]
   30908:	add	ip, r0, r3, lsl #2
   3090c:	ble	30874 <GetDataSlab+0xea48>
   30910:	ldr	r3, [sp, #16]
   30914:	lsl	r0, r1, #2
   30918:	mov	lr, #0
   3091c:	lsl	r7, fp, #2
   30920:	mul	r3, r2, r3
   30924:	lsl	r5, r3, #2
   30928:	cmp	fp, #0
   3092c:	ble	30964 <GetDataSlab+0xeb38>
   30930:	ldr	r2, [sp, #4]
   30934:	mov	r1, ip
   30938:	mov	r3, #0
   3093c:	add	r3, r3, #1
   30940:	ldr	r4, [r1], r0
   30944:	cmp	fp, r3
   30948:	vmov	s15, r4
   3094c:	vcvt.f32.u32	s15, s15
   30950:	vstmia	r2!, {s15}
   30954:	bne	3093c <GetDataSlab+0xeb10>
   30958:	ldr	r3, [sp, #4]
   3095c:	add	r3, r3, r7
   30960:	str	r3, [sp, #4]
   30964:	add	lr, lr, #1
   30968:	add	ip, ip, r5
   3096c:	cmp	r6, lr
   30970:	bne	30928 <GetDataSlab+0xeafc>
   30974:	b	30874 <GetDataSlab+0xea48>
   30978:	ldr	r3, [sp, #16]
   3097c:	cmp	r6, #0
   30980:	mla	r3, r5, r3, r0
   30984:	ldr	r0, [sp, #8]
   30988:	add	ip, r0, r3, lsl #2
   3098c:	ble	30874 <GetDataSlab+0xea48>
   30990:	ldr	r3, [sp, #16]
   30994:	lsl	r0, r1, #2
   30998:	mov	lr, #0
   3099c:	lsl	r7, fp, #2
   309a0:	mul	r3, r2, r3
   309a4:	lsl	r5, r3, #2
   309a8:	cmp	fp, #0
   309ac:	ble	309e4 <GetDataSlab+0xebb8>
   309b0:	ldr	r2, [sp, #4]
   309b4:	mov	r1, ip
   309b8:	mov	r3, #0
   309bc:	add	r3, r3, #1
   309c0:	ldr	r4, [r1], r0
   309c4:	cmp	fp, r3
   309c8:	vmov	s15, r4
   309cc:	vcvt.f32.s32	s15, s15
   309d0:	vstmia	r2!, {s15}
   309d4:	bne	309bc <GetDataSlab+0xeb90>
   309d8:	ldr	r3, [sp, #4]
   309dc:	add	r3, r3, r7
   309e0:	str	r3, [sp, #4]
   309e4:	add	lr, lr, #1
   309e8:	add	ip, ip, r5
   309ec:	cmp	r6, lr
   309f0:	bne	309a8 <GetDataSlab+0xeb7c>
   309f4:	b	30874 <GetDataSlab+0xea48>
   309f8:	ldr	r3, [sp, #16]
   309fc:	cmp	r6, #0
   30a00:	mla	r3, r5, r3, r0
   30a04:	ldr	r0, [sp, #8]
   30a08:	add	ip, r0, r3, lsl #1
   30a0c:	ble	30874 <GetDataSlab+0xea48>
   30a10:	ldr	r3, [sp, #16]
   30a14:	lsl	r0, r1, #1
   30a18:	mov	lr, #0
   30a1c:	lsl	r7, fp, #2
   30a20:	mul	r3, r2, r3
   30a24:	lsl	r5, r3, #1
   30a28:	cmp	fp, #0
   30a2c:	ble	30a64 <GetDataSlab+0xec38>
   30a30:	ldr	r2, [sp, #4]
   30a34:	mov	r1, ip
   30a38:	mov	r3, #0
   30a3c:	add	r3, r3, #1
   30a40:	ldrh	r4, [r1], r0
   30a44:	cmp	fp, r3
   30a48:	vmov	s15, r4
   30a4c:	vcvt.f32.u32	s15, s15
   30a50:	vstmia	r2!, {s15}
   30a54:	bne	30a3c <GetDataSlab+0xec10>
   30a58:	ldr	r3, [sp, #4]
   30a5c:	add	r3, r3, r7
   30a60:	str	r3, [sp, #4]
   30a64:	add	lr, lr, #1
   30a68:	add	ip, ip, r5
   30a6c:	cmp	r6, lr
   30a70:	bne	30a28 <GetDataSlab+0xebfc>
   30a74:	b	30874 <GetDataSlab+0xea48>
   30a78:	ldr	r3, [sp, #16]
   30a7c:	cmp	r6, #0
   30a80:	mla	r3, r5, r3, r0
   30a84:	ldr	r0, [sp, #8]
   30a88:	add	ip, r0, r3, lsl #1
   30a8c:	ble	30874 <GetDataSlab+0xea48>
   30a90:	ldr	r3, [sp, #16]
   30a94:	lsl	r0, r1, #1
   30a98:	mov	lr, #0
   30a9c:	lsl	r7, fp, #2
   30aa0:	mul	r3, r2, r3
   30aa4:	lsl	r5, r3, #1
   30aa8:	cmp	fp, #0
   30aac:	ble	30ae4 <GetDataSlab+0xecb8>
   30ab0:	ldr	r2, [sp, #4]
   30ab4:	mov	r1, ip
   30ab8:	mov	r3, #0
   30abc:	add	r3, r3, #1
   30ac0:	ldrsh	r4, [r1], r0
   30ac4:	cmp	fp, r3
   30ac8:	vmov	s15, r4
   30acc:	vcvt.f32.s32	s15, s15
   30ad0:	vstmia	r2!, {s15}
   30ad4:	bne	30abc <GetDataSlab+0xec90>
   30ad8:	ldr	r3, [sp, #4]
   30adc:	add	r3, r3, r7
   30ae0:	str	r3, [sp, #4]
   30ae4:	add	lr, lr, #1
   30ae8:	add	ip, ip, r5
   30aec:	cmp	r6, lr
   30af0:	bne	30aa8 <GetDataSlab+0xec7c>
   30af4:	b	30874 <GetDataSlab+0xea48>
   30af8:	ldr	r3, [sp, #16]
   30afc:	cmp	r6, #0
   30b00:	mla	r3, r5, r3, r0
   30b04:	ldr	r0, [sp, #8]
   30b08:	add	ip, r0, r3
   30b0c:	ble	30874 <GetDataSlab+0xea48>
   30b10:	ldr	r3, [sp, #16]
   30b14:	lsl	r7, fp, #2
   30b18:	mov	lr, #0
   30b1c:	mul	r5, r2, r3
   30b20:	cmp	fp, #0
   30b24:	ble	30b5c <GetDataSlab+0xed30>
   30b28:	ldr	r2, [sp, #4]
   30b2c:	mov	r0, ip
   30b30:	mov	r3, #0
   30b34:	add	r3, r3, #1
   30b38:	ldrb	r4, [r0], r1
   30b3c:	cmp	fp, r3
   30b40:	vmov	s15, r4
   30b44:	vcvt.f32.u32	s15, s15
   30b48:	vstmia	r2!, {s15}
   30b4c:	bne	30b34 <GetDataSlab+0xed08>
   30b50:	ldr	r3, [sp, #4]
   30b54:	add	r3, r3, r7
   30b58:	str	r3, [sp, #4]
   30b5c:	add	lr, lr, #1
   30b60:	add	ip, ip, r5
   30b64:	cmp	r6, lr
   30b68:	bne	30b20 <GetDataSlab+0xecf4>
   30b6c:	b	30874 <GetDataSlab+0xea48>
   30b70:	ldr	r3, [sp, #16]
   30b74:	cmp	r6, #0
   30b78:	mla	r3, r5, r3, r0
   30b7c:	ldr	r0, [sp, #8]
   30b80:	add	ip, r0, r3
   30b84:	ble	30874 <GetDataSlab+0xea48>
   30b88:	ldr	r3, [sp, #16]
   30b8c:	lsl	r7, fp, #2
   30b90:	mov	lr, #0
   30b94:	mul	r5, r2, r3
   30b98:	cmp	fp, #0
   30b9c:	ble	30bd4 <GetDataSlab+0xeda8>
   30ba0:	ldr	r2, [sp, #4]
   30ba4:	mov	r0, ip
   30ba8:	mov	r3, #0
   30bac:	add	r3, r3, #1
   30bb0:	ldrsb	r4, [r0], r1
   30bb4:	cmp	fp, r3
   30bb8:	vmov	s15, r4
   30bbc:	vcvt.f32.s32	s15, s15
   30bc0:	vstmia	r2!, {s15}
   30bc4:	bne	30bac <GetDataSlab+0xed80>
   30bc8:	ldr	r3, [sp, #4]
   30bcc:	add	r3, r3, r7
   30bd0:	str	r3, [sp, #4]
   30bd4:	add	lr, lr, #1
   30bd8:	add	ip, ip, r5
   30bdc:	cmp	r6, lr
   30be0:	bne	30b98 <GetDataSlab+0xed6c>
   30be4:	b	30874 <GetDataSlab+0xea48>
   30be8:	ldr	r3, [sp, #16]
   30bec:	cmp	r6, #0
   30bf0:	mla	r3, r5, r3, r0
   30bf4:	ldr	r0, [sp, #8]
   30bf8:	add	r9, r0, r3, lsl #3
   30bfc:	ble	30874 <GetDataSlab+0xea48>
   30c00:	ldr	r3, [sp, #16]
   30c04:	lsl	r8, r1, #3
   30c08:	mov	sl, #0
   30c0c:	mul	r3, r2, r3
   30c10:	lsl	r2, fp, #3
   30c14:	lsl	r3, r3, #3
   30c18:	str	r3, [sp, #8]
   30c1c:	str	r2, [sp, #12]
   30c20:	cmp	fp, #0
   30c24:	ble	30c60 <GetDataSlab+0xee34>
   30c28:	ldr	r7, [sp, #4]
   30c2c:	mov	r5, r9
   30c30:	mov	r4, #0
   30c34:	add	r4, r4, #1
   30c38:	ldrd	r0, [r5]
   30c3c:	add	r5, r5, r8
   30c40:	bl	4e430 <__aeabi_d2ulz>
   30c44:	cmp	fp, r4
   30c48:	strd	r0, [r7], #8
   30c4c:	bne	30c34 <GetDataSlab+0xee08>
   30c50:	ldr	r3, [sp, #4]
   30c54:	ldr	r2, [sp, #12]
   30c58:	add	r3, r3, r2
   30c5c:	str	r3, [sp, #4]
   30c60:	ldr	r3, [sp, #8]
   30c64:	add	sl, sl, #1
   30c68:	cmp	r6, sl
   30c6c:	add	r9, r9, r3
   30c70:	bne	30c20 <GetDataSlab+0xedf4>
   30c74:	b	30874 <GetDataSlab+0xea48>
   30c78:	ldr	r1, [sp, #8]
   30c7c:	cmp	r6, #0
   30c80:	ldr	r3, [sp, #16]
   30c84:	mla	r3, r5, r3, r0
   30c88:	movgt	r0, #0
   30c8c:	add	r1, r1, r3, lsl #3
   30c90:	ble	30874 <GetDataSlab+0xea48>
   30c94:	cmp	fp, #0
   30c98:	movgt	r3, #0
   30c9c:	ble	30ce8 <GetDataSlab+0xeebc>
   30ca0:	ldr	r2, [sl]
   30ca4:	ldr	ip, [sp, #4]
   30ca8:	mul	r2, r2, r3
   30cac:	add	r3, r3, #1
   30cb0:	add	r2, r1, r2, lsl #3
   30cb4:	vldr	d7, [r2]
   30cb8:	ldr	r2, [sp, #228]	; 0xe4
   30cbc:	vcvt.s32.f64	s15, d7
   30cc0:	vstmia	ip!, {s15}
   30cc4:	ldr	fp, [r2]
   30cc8:	str	ip, [sp, #4]
   30ccc:	cmp	fp, r3
   30cd0:	bgt	30ca0 <GetDataSlab+0xee74>
   30cd4:	ldr	r3, [r8]
   30cd8:	ldr	r2, [sl, #4]
   30cdc:	str	r3, [sp, #16]
   30ce0:	ldr	r3, [sp, #228]	; 0xe4
   30ce4:	ldr	r6, [r3, #4]
   30ce8:	add	r0, r0, #1
   30cec:	ldr	r3, [sp, #16]
   30cf0:	cmp	r6, r0
   30cf4:	mul	r3, r3, r2
   30cf8:	add	r1, r1, r3, lsl #3
   30cfc:	bgt	30c94 <GetDataSlab+0xee68>
   30d00:	b	30874 <GetDataSlab+0xea48>
   30d04:	ldr	r3, [sp, #16]
   30d08:	cmp	r6, #0
   30d0c:	mla	r3, r5, r3, r0
   30d10:	ldr	r0, [sp, #8]
   30d14:	add	r9, r0, r3, lsl #3
   30d18:	ble	30874 <GetDataSlab+0xea48>
   30d1c:	ldr	r3, [sp, #16]
   30d20:	lsl	r8, r1, #3
   30d24:	mov	sl, #0
   30d28:	mul	r3, r2, r3
   30d2c:	lsl	r2, fp, #3
   30d30:	lsl	r3, r3, #3
   30d34:	str	r3, [sp, #8]
   30d38:	str	r2, [sp, #12]
   30d3c:	cmp	fp, #0
   30d40:	ble	30d7c <GetDataSlab+0xef50>
   30d44:	ldr	r7, [sp, #4]
   30d48:	mov	r5, r9
   30d4c:	mov	r4, #0
   30d50:	add	r4, r4, #1
   30d54:	ldrd	r0, [r5]
   30d58:	add	r5, r5, r8
   30d5c:	bl	4e3c0 <__aeabi_d2lz>
   30d60:	cmp	fp, r4
   30d64:	strd	r0, [r7], #8
   30d68:	bne	30d50 <GetDataSlab+0xef24>
   30d6c:	ldr	r3, [sp, #4]
   30d70:	ldr	r2, [sp, #12]
   30d74:	add	r3, r3, r2
   30d78:	str	r3, [sp, #4]
   30d7c:	ldr	r3, [sp, #8]
   30d80:	add	sl, sl, #1
   30d84:	cmp	r6, sl
   30d88:	add	r9, r9, r3
   30d8c:	bne	30d3c <GetDataSlab+0xef10>
   30d90:	b	30874 <GetDataSlab+0xea48>
   30d94:	ldr	r1, [sp, #8]
   30d98:	cmp	r6, #0
   30d9c:	ldr	r3, [sp, #16]
   30da0:	mla	r3, r5, r3, r0
   30da4:	movgt	r0, #0
   30da8:	add	r1, r1, r3, lsl #3
   30dac:	ble	30874 <GetDataSlab+0xea48>
   30db0:	cmp	fp, #0
   30db4:	movgt	r3, #0
   30db8:	ble	30e04 <GetDataSlab+0xefd8>
   30dbc:	ldr	r2, [sl]
   30dc0:	ldr	ip, [sp, #4]
   30dc4:	mul	r2, r2, r3
   30dc8:	add	r3, r3, #1
   30dcc:	add	r2, r1, r2, lsl #3
   30dd0:	vldr	d7, [r2]
   30dd4:	ldr	r2, [sp, #228]	; 0xe4
   30dd8:	vcvt.u32.f64	s15, d7
   30ddc:	vstmia	ip!, {s15}
   30de0:	ldr	fp, [r2]
   30de4:	str	ip, [sp, #4]
   30de8:	cmp	fp, r3
   30dec:	bgt	30dbc <GetDataSlab+0xef90>
   30df0:	ldr	r3, [r8]
   30df4:	ldr	r2, [sl, #4]
   30df8:	str	r3, [sp, #16]
   30dfc:	ldr	r3, [sp, #228]	; 0xe4
   30e00:	ldr	r6, [r3, #4]
   30e04:	add	r0, r0, #1
   30e08:	ldr	r3, [sp, #16]
   30e0c:	cmp	r6, r0
   30e10:	mul	r3, r3, r2
   30e14:	add	r1, r1, r3, lsl #3
   30e18:	bgt	30db0 <GetDataSlab+0xef84>
   30e1c:	b	30874 <GetDataSlab+0xea48>
   30e20:	ldr	r3, [sp, #16]
   30e24:	cmp	r6, #0
   30e28:	mla	r3, r5, r3, r0
   30e2c:	ldr	r0, [sp, #8]
   30e30:	add	r0, r0, r3, lsl #3
   30e34:	ble	30874 <GetDataSlab+0xea48>
   30e38:	ldr	r3, [sp, #16]
   30e3c:	lsl	r1, r1, #3
   30e40:	mov	ip, #0
   30e44:	lsl	r5, fp, #1
   30e48:	mul	r3, r2, r3
   30e4c:	lsl	r4, r3, #3
   30e50:	cmp	fp, #0
   30e54:	ble	30e8c <GetDataSlab+0xf060>
   30e58:	ldr	r2, [sp, #4]
   30e5c:	mov	r3, r0
   30e60:	add	r2, r2, r5
   30e64:	vldr	d7, [r3]
   30e68:	add	r3, r3, r1
   30e6c:	ldr	r7, [sp, #4]
   30e70:	vcvt.s32.f64	s15, d7
   30e74:	vmov	lr, s15
   30e78:	strh	lr, [r7], #2
   30e7c:	cmp	r7, r2
   30e80:	mov	lr, r7
   30e84:	str	r7, [sp, #4]
   30e88:	bne	30e64 <GetDataSlab+0xf038>
   30e8c:	add	ip, ip, #1
   30e90:	add	r0, r0, r4
   30e94:	cmp	r6, ip
   30e98:	bne	30e50 <GetDataSlab+0xf024>
   30e9c:	b	30874 <GetDataSlab+0xea48>
   30ea0:	ldr	r3, [sp, #16]
   30ea4:	cmp	r6, #0
   30ea8:	mla	r3, r5, r3, r0
   30eac:	ldr	r0, [sp, #8]
   30eb0:	add	r0, r0, r3, lsl #3
   30eb4:	ble	30874 <GetDataSlab+0xea48>
   30eb8:	ldr	r3, [sp, #16]
   30ebc:	lsl	r1, r1, #3
   30ec0:	mov	ip, #0
   30ec4:	lsl	r5, fp, #1
   30ec8:	mul	r3, r2, r3
   30ecc:	lsl	r4, r3, #3
   30ed0:	cmp	fp, #0
   30ed4:	ble	30f0c <GetDataSlab+0xf0e0>
   30ed8:	ldr	r2, [sp, #4]
   30edc:	mov	r3, r0
   30ee0:	add	r2, r2, r5
   30ee4:	vldr	d7, [r3]
   30ee8:	add	r3, r3, r1
   30eec:	ldr	r7, [sp, #4]
   30ef0:	vcvt.u32.f64	s15, d7
   30ef4:	vmov	lr, s15
   30ef8:	strh	lr, [r7], #2
   30efc:	cmp	r7, r2
   30f00:	mov	lr, r7
   30f04:	str	r7, [sp, #4]
   30f08:	bne	30ee4 <GetDataSlab+0xf0b8>
   30f0c:	add	ip, ip, #1
   30f10:	add	r0, r0, r4
   30f14:	cmp	r6, ip
   30f18:	bne	30ed0 <GetDataSlab+0xf0a4>
   30f1c:	b	30874 <GetDataSlab+0xea48>
   30f20:	ldr	r1, [sp, #8]
   30f24:	cmp	r6, #0
   30f28:	ldr	r3, [sp, #16]
   30f2c:	mla	r3, r5, r3, r0
   30f30:	movgt	r0, #0
   30f34:	add	r1, r1, r3, lsl #3
   30f38:	ble	30874 <GetDataSlab+0xea48>
   30f3c:	cmp	fp, #0
   30f40:	movgt	r3, #0
   30f44:	ble	30f94 <GetDataSlab+0xf168>
   30f48:	ldr	r2, [sl]
   30f4c:	ldr	ip, [sp, #4]
   30f50:	mul	r2, r2, r3
   30f54:	add	r3, r3, #1
   30f58:	add	r2, r1, r2, lsl #3
   30f5c:	vldr	d7, [r2]
   30f60:	vcvt.s32.f64	s15, d7
   30f64:	vmov	r2, s15
   30f68:	strb	r2, [ip], #1
   30f6c:	ldr	r2, [sp, #228]	; 0xe4
   30f70:	str	ip, [sp, #4]
   30f74:	ldr	fp, [r2]
   30f78:	cmp	fp, r3
   30f7c:	bgt	30f48 <GetDataSlab+0xf11c>
   30f80:	ldr	r3, [r8]
   30f84:	ldr	r2, [sl, #4]
   30f88:	str	r3, [sp, #16]
   30f8c:	ldr	r3, [sp, #228]	; 0xe4
   30f90:	ldr	r6, [r3, #4]
   30f94:	add	r0, r0, #1
   30f98:	ldr	r3, [sp, #16]
   30f9c:	cmp	r6, r0
   30fa0:	mul	r3, r3, r2
   30fa4:	add	r1, r1, r3, lsl #3
   30fa8:	bgt	30f3c <GetDataSlab+0xf110>
   30fac:	b	30874 <GetDataSlab+0xea48>
   30fb0:	ldr	r3, [sp, #16]
   30fb4:	cmp	r6, #0
   30fb8:	mla	r3, r5, r3, r0
   30fbc:	ldr	r0, [sp, #8]
   30fc0:	add	r4, r0, r3, lsl #3
   30fc4:	ble	30874 <GetDataSlab+0xea48>
   30fc8:	ldr	r3, [sp, #16]
   30fcc:	lsl	lr, r1, #3
   30fd0:	mov	r5, #0
   30fd4:	lsl	r8, fp, #3
   30fd8:	mul	r3, r2, r3
   30fdc:	lsl	r7, r3, #3
   30fe0:	cmp	fp, #0
   30fe4:	ble	31018 <GetDataSlab+0xf1ec>
   30fe8:	ldr	ip, [sp, #4]
   30fec:	mov	r2, r4
   30ff0:	mov	r3, #0
   30ff4:	add	r3, r3, #1
   30ff8:	ldrd	r0, [r2]
   30ffc:	cmp	fp, r3
   31000:	add	r2, r2, lr
   31004:	strd	r0, [ip], #8
   31008:	bne	30ff4 <GetDataSlab+0xf1c8>
   3100c:	ldr	r3, [sp, #4]
   31010:	add	r3, r3, r8
   31014:	str	r3, [sp, #4]
   31018:	add	r5, r5, #1
   3101c:	add	r4, r4, r7
   31020:	cmp	r6, r5
   31024:	bne	30fe0 <GetDataSlab+0xf1b4>
   31028:	b	30874 <GetDataSlab+0xea48>
   3102c:	ldr	r1, [sp, #8]
   31030:	cmp	r6, #0
   31034:	ldr	r3, [sp, #16]
   31038:	mla	r3, r5, r3, r0
   3103c:	movgt	r0, #0
   31040:	add	r1, r1, r3, lsl #3
   31044:	ble	30874 <GetDataSlab+0xea48>
   31048:	cmp	fp, #0
   3104c:	movgt	r3, #0
   31050:	ble	310a0 <GetDataSlab+0xf274>
   31054:	ldr	r2, [sl]
   31058:	ldr	ip, [sp, #4]
   3105c:	mul	r2, r2, r3
   31060:	add	r3, r3, #1
   31064:	add	r2, r1, r2, lsl #3
   31068:	vldr	d7, [r2]
   3106c:	vcvt.u32.f64	s15, d7
   31070:	vmov	r2, s15
   31074:	strb	r2, [ip], #1
   31078:	ldr	r2, [sp, #228]	; 0xe4
   3107c:	str	ip, [sp, #4]
   31080:	ldr	fp, [r2]
   31084:	cmp	fp, r3
   31088:	bgt	31054 <GetDataSlab+0xf228>
   3108c:	ldr	r3, [r8]
   31090:	ldr	r2, [sl, #4]
   31094:	str	r3, [sp, #16]
   31098:	ldr	r3, [sp, #228]	; 0xe4
   3109c:	ldr	r6, [r3, #4]
   310a0:	add	r0, r0, #1
   310a4:	ldr	r3, [sp, #16]
   310a8:	cmp	r6, r0
   310ac:	mul	r3, r3, r2
   310b0:	add	r1, r1, r3, lsl #3
   310b4:	bgt	31048 <GetDataSlab+0xf21c>
   310b8:	b	30874 <GetDataSlab+0xea48>
   310bc:	ldr	r1, [sp, #8]
   310c0:	cmp	r6, #0
   310c4:	ldr	r3, [sp, #16]
   310c8:	mla	r3, r5, r3, r0
   310cc:	movgt	r0, #0
   310d0:	add	r1, r1, r3, lsl #2
   310d4:	ble	30874 <GetDataSlab+0xea48>
   310d8:	cmp	fp, #0
   310dc:	movgt	r3, #0
   310e0:	ble	31130 <GetDataSlab+0xf304>
   310e4:	ldr	r2, [sl]
   310e8:	ldr	ip, [sp, #4]
   310ec:	mul	r2, r2, r3
   310f0:	add	r3, r3, #1
   310f4:	add	r2, r1, r2, lsl #2
   310f8:	vldr	s15, [r2]
   310fc:	vcvt.u32.f32	s15, s15
   31100:	vmov	r2, s15
   31104:	strb	r2, [ip], #1
   31108:	ldr	r2, [sp, #228]	; 0xe4
   3110c:	str	ip, [sp, #4]
   31110:	ldr	fp, [r2]
   31114:	cmp	fp, r3
   31118:	bgt	310e4 <GetDataSlab+0xf2b8>
   3111c:	ldr	r3, [r8]
   31120:	ldr	r2, [sl, #4]
   31124:	str	r3, [sp, #16]
   31128:	ldr	r3, [sp, #228]	; 0xe4
   3112c:	ldr	r6, [r3, #4]
   31130:	add	r0, r0, #1
   31134:	ldr	r3, [sp, #16]
   31138:	cmp	r6, r0
   3113c:	mul	r3, r3, r2
   31140:	add	r1, r1, r3, lsl #2
   31144:	bgt	310d8 <GetDataSlab+0xf2ac>
   31148:	b	30874 <GetDataSlab+0xea48>
   3114c:	ldr	r1, [sp, #8]
   31150:	cmp	r6, #0
   31154:	ldr	r3, [sp, #16]
   31158:	mla	r3, r5, r3, r0
   3115c:	movgt	r0, #0
   31160:	add	r1, r1, r3, lsl #2
   31164:	ble	30874 <GetDataSlab+0xea48>
   31168:	cmp	fp, #0
   3116c:	movgt	r3, #0
   31170:	ble	311b4 <GetDataSlab+0xf388>
   31174:	ldr	r2, [sl]
   31178:	ldr	ip, [sp, #4]
   3117c:	mul	r2, r2, r3
   31180:	add	r3, r3, #1
   31184:	ldr	r2, [r1, r2, lsl #2]
   31188:	strb	r2, [ip], #1
   3118c:	ldr	r2, [sp, #228]	; 0xe4
   31190:	str	ip, [sp, #4]
   31194:	ldr	fp, [r2]
   31198:	cmp	fp, r3
   3119c:	bgt	31174 <GetDataSlab+0xf348>
   311a0:	ldr	r3, [r8]
   311a4:	ldr	r2, [sl, #4]
   311a8:	str	r3, [sp, #16]
   311ac:	ldr	r3, [sp, #228]	; 0xe4
   311b0:	ldr	r6, [r3, #4]
   311b4:	add	r0, r0, #1
   311b8:	ldr	r3, [sp, #16]
   311bc:	cmp	r6, r0
   311c0:	mul	r3, r3, r2
   311c4:	add	r1, r1, r3, lsl #2
   311c8:	bgt	31168 <GetDataSlab+0xf33c>
   311cc:	b	30874 <GetDataSlab+0xea48>
   311d0:	ldr	r1, [sp, #8]
   311d4:	cmp	r6, #0
   311d8:	ldr	r3, [sp, #16]
   311dc:	mla	r3, r5, r3, r0
   311e0:	movgt	r0, #0
   311e4:	add	r1, r1, r3, lsl #2
   311e8:	ble	30874 <GetDataSlab+0xea48>
   311ec:	cmp	fp, #0
   311f0:	movgt	r3, #0
   311f4:	ble	31238 <GetDataSlab+0xf40c>
   311f8:	ldr	r2, [sl]
   311fc:	ldr	ip, [sp, #4]
   31200:	mul	r2, r2, r3
   31204:	add	r3, r3, #1
   31208:	ldr	r2, [r1, r2, lsl #2]
   3120c:	strb	r2, [ip], #1
   31210:	ldr	r2, [sp, #228]	; 0xe4
   31214:	str	ip, [sp, #4]
   31218:	ldr	fp, [r2]
   3121c:	cmp	fp, r3
   31220:	bgt	311f8 <GetDataSlab+0xf3cc>
   31224:	ldr	r3, [r8]
   31228:	ldr	r2, [sl, #4]
   3122c:	str	r3, [sp, #16]
   31230:	ldr	r3, [sp, #228]	; 0xe4
   31234:	ldr	r6, [r3, #4]
   31238:	add	r0, r0, #1
   3123c:	ldr	r3, [sp, #16]
   31240:	cmp	r6, r0
   31244:	mul	r3, r3, r2
   31248:	add	r1, r1, r3, lsl #2
   3124c:	bgt	311ec <GetDataSlab+0xf3c0>
   31250:	b	30874 <GetDataSlab+0xea48>
   31254:	ldr	r1, [sp, #8]
   31258:	cmp	r6, #0
   3125c:	ldr	r3, [sp, #16]
   31260:	mla	r3, r5, r3, r0
   31264:	movgt	r0, #0
   31268:	add	r1, r1, r3, lsl #1
   3126c:	ble	30874 <GetDataSlab+0xea48>
   31270:	cmp	fp, #0
   31274:	movgt	r3, #0
   31278:	ble	312c0 <GetDataSlab+0xf494>
   3127c:	ldr	r2, [sl]
   31280:	ldr	ip, [sp, #4]
   31284:	mul	r2, r2, r3
   31288:	add	r3, r3, #1
   3128c:	lsl	r2, r2, #1
   31290:	ldrh	r2, [r1, r2]
   31294:	strb	r2, [ip], #1
   31298:	ldr	r2, [sp, #228]	; 0xe4
   3129c:	str	ip, [sp, #4]
   312a0:	ldr	fp, [r2]
   312a4:	cmp	fp, r3
   312a8:	bgt	3127c <GetDataSlab+0xf450>
   312ac:	ldr	r3, [r8]
   312b0:	ldr	r2, [sl, #4]
   312b4:	str	r3, [sp, #16]
   312b8:	ldr	r3, [sp, #228]	; 0xe4
   312bc:	ldr	r6, [r3, #4]
   312c0:	add	r0, r0, #1
   312c4:	ldr	r3, [sp, #16]
   312c8:	cmp	r6, r0
   312cc:	mul	r3, r3, r2
   312d0:	add	r1, r1, r3, lsl #1
   312d4:	bgt	31270 <GetDataSlab+0xf444>
   312d8:	b	30874 <GetDataSlab+0xea48>
   312dc:	ldr	r1, [sp, #8]
   312e0:	cmp	r6, #0
   312e4:	ldr	r3, [sp, #16]
   312e8:	mla	r3, r5, r3, r0
   312ec:	movgt	r0, #0
   312f0:	add	r1, r1, r3, lsl #1
   312f4:	ble	30874 <GetDataSlab+0xea48>
   312f8:	cmp	fp, #0
   312fc:	movgt	r3, #0
   31300:	ble	31348 <GetDataSlab+0xf51c>
   31304:	ldr	r2, [sl]
   31308:	ldr	ip, [sp, #4]
   3130c:	mul	r2, r2, r3
   31310:	add	r3, r3, #1
   31314:	lsl	r2, r2, #1
   31318:	ldrh	r2, [r1, r2]
   3131c:	strb	r2, [ip], #1
   31320:	ldr	r2, [sp, #228]	; 0xe4
   31324:	str	ip, [sp, #4]
   31328:	ldr	fp, [r2]
   3132c:	cmp	fp, r3
   31330:	bgt	31304 <GetDataSlab+0xf4d8>
   31334:	ldr	r3, [r8]
   31338:	ldr	r2, [sl, #4]
   3133c:	str	r3, [sp, #16]
   31340:	ldr	r3, [sp, #228]	; 0xe4
   31344:	ldr	r6, [r3, #4]
   31348:	add	r0, r0, #1
   3134c:	ldr	r3, [sp, #16]
   31350:	cmp	r6, r0
   31354:	mul	r3, r3, r2
   31358:	add	r1, r1, r3, lsl #1
   3135c:	bgt	312f8 <GetDataSlab+0xf4cc>
   31360:	b	30874 <GetDataSlab+0xea48>
   31364:	ldr	r1, [sp, #8]
   31368:	cmp	r6, #0
   3136c:	ldr	r3, [sp, #16]
   31370:	mla	r3, r5, r3, r0
   31374:	movgt	r0, #0
   31378:	add	r1, r1, r3
   3137c:	ble	30874 <GetDataSlab+0xea48>
   31380:	cmp	fp, #0
   31384:	movgt	r3, #0
   31388:	ble	313cc <GetDataSlab+0xf5a0>
   3138c:	ldr	r2, [sl]
   31390:	ldr	ip, [sp, #4]
   31394:	mul	r2, r2, r3
   31398:	add	r3, r3, #1
   3139c:	ldrb	r2, [r1, r2]
   313a0:	strb	r2, [ip], #1
   313a4:	ldr	r2, [sp, #228]	; 0xe4
   313a8:	str	ip, [sp, #4]
   313ac:	ldr	fp, [r2]
   313b0:	cmp	fp, r3
   313b4:	bgt	3138c <GetDataSlab+0xf560>
   313b8:	ldr	r3, [r8]
   313bc:	ldr	r2, [sl, #4]
   313c0:	str	r3, [sp, #16]
   313c4:	ldr	r3, [sp, #228]	; 0xe4
   313c8:	ldr	r6, [r3, #4]
   313cc:	add	r0, r0, #1
   313d0:	ldr	r3, [sp, #16]
   313d4:	cmp	r6, r0
   313d8:	mla	r1, r3, r2, r1
   313dc:	bgt	31380 <GetDataSlab+0xf554>
   313e0:	b	30874 <GetDataSlab+0xea48>
   313e4:	ldr	r1, [sp, #8]
   313e8:	cmp	r6, #0
   313ec:	ldr	r3, [sp, #16]
   313f0:	mla	r3, r5, r3, r0
   313f4:	movgt	r0, #0
   313f8:	add	r1, r1, r3
   313fc:	ble	30874 <GetDataSlab+0xea48>
   31400:	cmp	fp, #0
   31404:	movgt	r3, #0
   31408:	ble	3144c <GetDataSlab+0xf620>
   3140c:	ldr	r2, [sl]
   31410:	ldr	ip, [sp, #4]
   31414:	mul	r2, r2, r3
   31418:	add	r3, r3, #1
   3141c:	ldrb	r2, [r1, r2]
   31420:	strb	r2, [ip], #1
   31424:	ldr	r2, [sp, #228]	; 0xe4
   31428:	str	ip, [sp, #4]
   3142c:	ldr	fp, [r2]
   31430:	cmp	fp, r3
   31434:	bgt	3140c <GetDataSlab+0xf5e0>
   31438:	ldr	r3, [r8]
   3143c:	ldr	r2, [sl, #4]
   31440:	str	r3, [sp, #16]
   31444:	ldr	r3, [sp, #228]	; 0xe4
   31448:	ldr	r6, [r3, #4]
   3144c:	add	r0, r0, #1
   31450:	ldr	r3, [sp, #16]
   31454:	cmp	r6, r0
   31458:	mla	r1, r3, r2, r1
   3145c:	bgt	31400 <GetDataSlab+0xf5d4>
   31460:	b	30874 <GetDataSlab+0xea48>
   31464:	ldr	r1, [sp, #8]
   31468:	cmp	r6, #0
   3146c:	ldr	r3, [sp, #16]
   31470:	mla	r3, r5, r3, r0
   31474:	movgt	r0, #0
   31478:	add	r1, r1, r3, lsl #2
   3147c:	ble	30874 <GetDataSlab+0xea48>
   31480:	cmp	fp, #0
   31484:	movgt	r3, #0
   31488:	ble	314d4 <GetDataSlab+0xf6a8>
   3148c:	ldr	r2, [sl]
   31490:	ldr	ip, [sp, #4]
   31494:	mul	r2, r2, r3
   31498:	add	r3, r3, #1
   3149c:	add	r2, r1, r2, lsl #2
   314a0:	vldr	s15, [r2]
   314a4:	ldr	r2, [sp, #228]	; 0xe4
   314a8:	vcvt.u32.f32	s15, s15
   314ac:	vstmia	ip!, {s15}
   314b0:	ldr	fp, [r2]
   314b4:	str	ip, [sp, #4]
   314b8:	cmp	fp, r3
   314bc:	bgt	3148c <GetDataSlab+0xf660>
   314c0:	ldr	r3, [r8]
   314c4:	ldr	r2, [sl, #4]
   314c8:	str	r3, [sp, #16]
   314cc:	ldr	r3, [sp, #228]	; 0xe4
   314d0:	ldr	r6, [r3, #4]
   314d4:	add	r0, r0, #1
   314d8:	ldr	r3, [sp, #16]
   314dc:	cmp	r6, r0
   314e0:	mul	r3, r3, r2
   314e4:	add	r1, r1, r3, lsl #2
   314e8:	bgt	31480 <GetDataSlab+0xf654>
   314ec:	b	30874 <GetDataSlab+0xea48>
   314f0:	ldr	r1, [sp, #8]
   314f4:	cmp	r6, #0
   314f8:	ldr	r3, [sp, #16]
   314fc:	mla	r3, r5, r3, r0
   31500:	movgt	r0, #0
   31504:	add	r1, r1, r3, lsl #2
   31508:	ble	30874 <GetDataSlab+0xea48>
   3150c:	cmp	fp, #0
   31510:	movgt	r3, #0
   31514:	ble	31558 <GetDataSlab+0xf72c>
   31518:	ldr	r2, [sl]
   3151c:	ldr	ip, [sp, #4]
   31520:	mul	r2, r2, r3
   31524:	add	r3, r3, #1
   31528:	ldr	r2, [r1, r2, lsl #2]
   3152c:	str	r2, [ip], #4
   31530:	ldr	r2, [sp, #228]	; 0xe4
   31534:	str	ip, [sp, #4]
   31538:	ldr	fp, [r2]
   3153c:	cmp	fp, r3
   31540:	bgt	31518 <GetDataSlab+0xf6ec>
   31544:	ldr	r3, [r8]
   31548:	ldr	r2, [sl, #4]
   3154c:	str	r3, [sp, #16]
   31550:	ldr	r3, [sp, #228]	; 0xe4
   31554:	ldr	r6, [r3, #4]
   31558:	add	r0, r0, #1
   3155c:	ldr	r3, [sp, #16]
   31560:	cmp	r6, r0
   31564:	mul	r3, r3, r2
   31568:	add	r1, r1, r3, lsl #2
   3156c:	bgt	3150c <GetDataSlab+0xf6e0>
   31570:	b	30874 <GetDataSlab+0xea48>
   31574:	ldr	r1, [sp, #8]
   31578:	cmp	r6, #0
   3157c:	ldr	r3, [sp, #16]
   31580:	mla	r3, r5, r3, r0
   31584:	movgt	r0, #0
   31588:	add	r1, r1, r3, lsl #2
   3158c:	ble	30874 <GetDataSlab+0xea48>
   31590:	cmp	fp, #0
   31594:	movgt	r3, #0
   31598:	ble	315dc <GetDataSlab+0xf7b0>
   3159c:	ldr	r2, [sl]
   315a0:	ldr	ip, [sp, #4]
   315a4:	mul	r2, r2, r3
   315a8:	add	r3, r3, #1
   315ac:	ldr	r2, [r1, r2, lsl #2]
   315b0:	str	r2, [ip], #4
   315b4:	ldr	r2, [sp, #228]	; 0xe4
   315b8:	str	ip, [sp, #4]
   315bc:	ldr	fp, [r2]
   315c0:	cmp	fp, r3
   315c4:	bgt	3159c <GetDataSlab+0xf770>
   315c8:	ldr	r3, [r8]
   315cc:	ldr	r2, [sl, #4]
   315d0:	str	r3, [sp, #16]
   315d4:	ldr	r3, [sp, #228]	; 0xe4
   315d8:	ldr	r6, [r3, #4]
   315dc:	add	r0, r0, #1
   315e0:	ldr	r3, [sp, #16]
   315e4:	cmp	r6, r0
   315e8:	mul	r3, r3, r2
   315ec:	add	r1, r1, r3, lsl #2
   315f0:	bgt	31590 <GetDataSlab+0xf764>
   315f4:	b	30874 <GetDataSlab+0xea48>
   315f8:	ldr	r1, [sp, #8]
   315fc:	cmp	r6, #0
   31600:	ldr	r3, [sp, #16]
   31604:	mla	r3, r5, r3, r0
   31608:	movgt	r0, #0
   3160c:	add	r1, r1, r3, lsl #1
   31610:	ble	30874 <GetDataSlab+0xea48>
   31614:	cmp	fp, #0
   31618:	movgt	r3, #0
   3161c:	ble	31664 <GetDataSlab+0xf838>
   31620:	ldr	r2, [sl]
   31624:	ldr	ip, [sp, #4]
   31628:	mul	r2, r2, r3
   3162c:	add	r3, r3, #1
   31630:	lsl	r2, r2, #1
   31634:	ldrh	r2, [r1, r2]
   31638:	str	r2, [ip], #4
   3163c:	ldr	r2, [sp, #228]	; 0xe4
   31640:	str	ip, [sp, #4]
   31644:	ldr	fp, [r2]
   31648:	cmp	fp, r3
   3164c:	bgt	31620 <GetDataSlab+0xf7f4>
   31650:	ldr	r3, [r8]
   31654:	ldr	r2, [sl, #4]
   31658:	str	r3, [sp, #16]
   3165c:	ldr	r3, [sp, #228]	; 0xe4
   31660:	ldr	r6, [r3, #4]
   31664:	add	r0, r0, #1
   31668:	ldr	r3, [sp, #16]
   3166c:	cmp	r6, r0
   31670:	mul	r3, r3, r2
   31674:	add	r1, r1, r3, lsl #1
   31678:	bgt	31614 <GetDataSlab+0xf7e8>
   3167c:	b	30874 <GetDataSlab+0xea48>
   31680:	ldr	r1, [sp, #8]
   31684:	cmp	r6, #0
   31688:	ldr	r3, [sp, #16]
   3168c:	mla	r3, r5, r3, r0
   31690:	movgt	r0, #0
   31694:	add	r1, r1, r3, lsl #1
   31698:	ble	30874 <GetDataSlab+0xea48>
   3169c:	cmp	fp, #0
   316a0:	movgt	r3, #0
   316a4:	ble	316ec <GetDataSlab+0xf8c0>
   316a8:	ldr	r2, [sl]
   316ac:	ldr	ip, [sp, #4]
   316b0:	mul	r2, r2, r3
   316b4:	add	r3, r3, #1
   316b8:	lsl	r2, r2, #1
   316bc:	ldrsh	r2, [r1, r2]
   316c0:	str	r2, [ip], #4
   316c4:	ldr	r2, [sp, #228]	; 0xe4
   316c8:	str	ip, [sp, #4]
   316cc:	ldr	fp, [r2]
   316d0:	cmp	fp, r3
   316d4:	bgt	316a8 <GetDataSlab+0xf87c>
   316d8:	ldr	r3, [r8]
   316dc:	ldr	r2, [sl, #4]
   316e0:	str	r3, [sp, #16]
   316e4:	ldr	r3, [sp, #228]	; 0xe4
   316e8:	ldr	r6, [r3, #4]
   316ec:	add	r0, r0, #1
   316f0:	ldr	r3, [sp, #16]
   316f4:	cmp	r6, r0
   316f8:	mul	r3, r3, r2
   316fc:	add	r1, r1, r3, lsl #1
   31700:	bgt	3169c <GetDataSlab+0xf870>
   31704:	b	30874 <GetDataSlab+0xea48>
   31708:	ldr	r1, [sp, #8]
   3170c:	cmp	r6, #0
   31710:	ldr	r3, [sp, #16]
   31714:	mla	r3, r5, r3, r0
   31718:	movgt	r0, #0
   3171c:	add	r1, r1, r3
   31720:	ble	30874 <GetDataSlab+0xea48>
   31724:	cmp	fp, #0
   31728:	movgt	r3, #0
   3172c:	ble	31770 <GetDataSlab+0xf944>
   31730:	ldr	r2, [sl]
   31734:	ldr	ip, [sp, #4]
   31738:	mul	r2, r2, r3
   3173c:	add	r3, r3, #1
   31740:	ldrb	r2, [r1, r2]
   31744:	str	r2, [ip], #4
   31748:	ldr	r2, [sp, #228]	; 0xe4
   3174c:	str	ip, [sp, #4]
   31750:	ldr	fp, [r2]
   31754:	cmp	fp, r3
   31758:	bgt	31730 <GetDataSlab+0xf904>
   3175c:	ldr	r3, [r8]
   31760:	ldr	r2, [sl, #4]
   31764:	str	r3, [sp, #16]
   31768:	ldr	r3, [sp, #228]	; 0xe4
   3176c:	ldr	r6, [r3, #4]
   31770:	add	r0, r0, #1
   31774:	ldr	r3, [sp, #16]
   31778:	cmp	r6, r0
   3177c:	mla	r1, r3, r2, r1
   31780:	bgt	31724 <GetDataSlab+0xf8f8>
   31784:	b	30874 <GetDataSlab+0xea48>
   31788:	ldr	r1, [sp, #8]
   3178c:	cmp	r6, #0
   31790:	ldr	r3, [sp, #16]
   31794:	mla	r3, r5, r3, r0
   31798:	movgt	r0, #0
   3179c:	add	r1, r1, r3
   317a0:	ble	30874 <GetDataSlab+0xea48>
   317a4:	cmp	fp, #0
   317a8:	movgt	r3, #0
   317ac:	ble	317f0 <GetDataSlab+0xf9c4>
   317b0:	ldr	r2, [sl]
   317b4:	ldr	ip, [sp, #4]
   317b8:	mul	r2, r2, r3
   317bc:	add	r3, r3, #1
   317c0:	ldrsb	r2, [r1, r2]
   317c4:	str	r2, [ip], #4
   317c8:	ldr	r2, [sp, #228]	; 0xe4
   317cc:	str	ip, [sp, #4]
   317d0:	ldr	fp, [r2]
   317d4:	cmp	fp, r3
   317d8:	bgt	317b0 <GetDataSlab+0xf984>
   317dc:	ldr	r3, [r8]
   317e0:	ldr	r2, [sl, #4]
   317e4:	str	r3, [sp, #16]
   317e8:	ldr	r3, [sp, #228]	; 0xe4
   317ec:	ldr	r6, [r3, #4]
   317f0:	add	r0, r0, #1
   317f4:	ldr	r3, [sp, #16]
   317f8:	cmp	r6, r0
   317fc:	mla	r1, r3, r2, r1
   31800:	bgt	317a4 <GetDataSlab+0xf978>
   31804:	b	30874 <GetDataSlab+0xea48>
   31808:	ldr	r1, [sp, #8]
   3180c:	cmp	r6, #0
   31810:	ldr	r3, [sp, #16]
   31814:	mla	r3, r5, r3, r0
   31818:	movgt	r0, #0
   3181c:	add	r1, r1, r3, lsl #2
   31820:	ble	30874 <GetDataSlab+0xea48>
   31824:	cmp	fp, #0
   31828:	movgt	r3, #0
   3182c:	ble	31878 <GetDataSlab+0xfa4c>
   31830:	ldr	r2, [sl]
   31834:	ldr	ip, [sp, #4]
   31838:	mul	r2, r2, r3
   3183c:	add	r3, r3, #1
   31840:	add	r2, r1, r2, lsl #2
   31844:	vldr	s15, [r2]
   31848:	ldr	r2, [sp, #228]	; 0xe4
   3184c:	vcvt.s32.f32	s15, s15
   31850:	vstmia	ip!, {s15}
   31854:	ldr	fp, [r2]
   31858:	str	ip, [sp, #4]
   3185c:	cmp	fp, r3
   31860:	bgt	31830 <GetDataSlab+0xfa04>
   31864:	ldr	r3, [r8]
   31868:	ldr	r2, [sl, #4]
   3186c:	str	r3, [sp, #16]
   31870:	ldr	r3, [sp, #228]	; 0xe4
   31874:	ldr	r6, [r3, #4]
   31878:	add	r0, r0, #1
   3187c:	ldr	r3, [sp, #16]
   31880:	cmp	r6, r0
   31884:	mul	r3, r3, r2
   31888:	add	r1, r1, r3, lsl #2
   3188c:	bgt	31824 <GetDataSlab+0xf9f8>
   31890:	b	30874 <GetDataSlab+0xea48>
   31894:	ldr	r1, [sp, #8]
   31898:	cmp	r6, #0
   3189c:	ldr	r3, [sp, #16]
   318a0:	mla	r3, r5, r3, r0
   318a4:	movgt	r0, #0
   318a8:	add	r1, r1, r3, lsl #2
   318ac:	ble	30874 <GetDataSlab+0xea48>
   318b0:	cmp	fp, #0
   318b4:	movgt	r3, #0
   318b8:	ble	318fc <GetDataSlab+0xfad0>
   318bc:	ldr	r2, [sl]
   318c0:	ldr	ip, [sp, #4]
   318c4:	mul	r2, r2, r3
   318c8:	add	r3, r3, #1
   318cc:	ldr	r2, [r1, r2, lsl #2]
   318d0:	str	r2, [ip], #4
   318d4:	ldr	r2, [sp, #228]	; 0xe4
   318d8:	str	ip, [sp, #4]
   318dc:	ldr	fp, [r2]
   318e0:	cmp	fp, r3
   318e4:	bgt	318bc <GetDataSlab+0xfa90>
   318e8:	ldr	r3, [r8]
   318ec:	ldr	r2, [sl, #4]
   318f0:	str	r3, [sp, #16]
   318f4:	ldr	r3, [sp, #228]	; 0xe4
   318f8:	ldr	r6, [r3, #4]
   318fc:	add	r0, r0, #1
   31900:	ldr	r3, [sp, #16]
   31904:	cmp	r6, r0
   31908:	mul	r3, r3, r2
   3190c:	add	r1, r1, r3, lsl #2
   31910:	bgt	318b0 <GetDataSlab+0xfa84>
   31914:	b	30874 <GetDataSlab+0xea48>
   31918:	ldr	r1, [sp, #8]
   3191c:	cmp	r6, #0
   31920:	ldr	r3, [sp, #16]
   31924:	mla	r3, r5, r3, r0
   31928:	movgt	r0, #0
   3192c:	add	r1, r1, r3, lsl #2
   31930:	ble	30874 <GetDataSlab+0xea48>
   31934:	cmp	fp, #0
   31938:	movgt	r3, #0
   3193c:	ble	31980 <GetDataSlab+0xfb54>
   31940:	ldr	r2, [sl]
   31944:	ldr	ip, [sp, #4]
   31948:	mul	r2, r2, r3
   3194c:	add	r3, r3, #1
   31950:	ldr	r2, [r1, r2, lsl #2]
   31954:	str	r2, [ip], #4
   31958:	ldr	r2, [sp, #228]	; 0xe4
   3195c:	str	ip, [sp, #4]
   31960:	ldr	fp, [r2]
   31964:	cmp	fp, r3
   31968:	bgt	31940 <GetDataSlab+0xfb14>
   3196c:	ldr	r3, [r8]
   31970:	ldr	r2, [sl, #4]
   31974:	str	r3, [sp, #16]
   31978:	ldr	r3, [sp, #228]	; 0xe4
   3197c:	ldr	r6, [r3, #4]
   31980:	add	r0, r0, #1
   31984:	ldr	r3, [sp, #16]
   31988:	cmp	r6, r0
   3198c:	mul	r3, r3, r2
   31990:	add	r1, r1, r3, lsl #2
   31994:	bgt	31934 <GetDataSlab+0xfb08>
   31998:	b	30874 <GetDataSlab+0xea48>
   3199c:	ldr	r1, [sp, #8]
   319a0:	cmp	r6, #0
   319a4:	ldr	r3, [sp, #16]
   319a8:	mla	r3, r5, r3, r0
   319ac:	movgt	r0, #0
   319b0:	add	r1, r1, r3, lsl #1
   319b4:	ble	30874 <GetDataSlab+0xea48>
   319b8:	cmp	fp, #0
   319bc:	movgt	r3, #0
   319c0:	ble	31a08 <GetDataSlab+0xfbdc>
   319c4:	ldr	r2, [sl]
   319c8:	ldr	ip, [sp, #4]
   319cc:	mul	r2, r2, r3
   319d0:	add	r3, r3, #1
   319d4:	lsl	r2, r2, #1
   319d8:	ldrh	r2, [r1, r2]
   319dc:	str	r2, [ip], #4
   319e0:	ldr	r2, [sp, #228]	; 0xe4
   319e4:	str	ip, [sp, #4]
   319e8:	ldr	fp, [r2]
   319ec:	cmp	fp, r3
   319f0:	bgt	319c4 <GetDataSlab+0xfb98>
   319f4:	ldr	r3, [r8]
   319f8:	ldr	r2, [sl, #4]
   319fc:	str	r3, [sp, #16]
   31a00:	ldr	r3, [sp, #228]	; 0xe4
   31a04:	ldr	r6, [r3, #4]
   31a08:	add	r0, r0, #1
   31a0c:	ldr	r3, [sp, #16]
   31a10:	cmp	r6, r0
   31a14:	mul	r3, r3, r2
   31a18:	add	r1, r1, r3, lsl #1
   31a1c:	bgt	319b8 <GetDataSlab+0xfb8c>
   31a20:	b	30874 <GetDataSlab+0xea48>
   31a24:	ldr	r1, [sp, #8]
   31a28:	cmp	r6, #0
   31a2c:	ldr	r3, [sp, #16]
   31a30:	mla	r3, r5, r3, r0
   31a34:	movgt	r0, #0
   31a38:	add	r1, r1, r3, lsl #1
   31a3c:	ble	30874 <GetDataSlab+0xea48>
   31a40:	cmp	fp, #0
   31a44:	movgt	r3, #0
   31a48:	ble	31a90 <GetDataSlab+0xfc64>
   31a4c:	ldr	r2, [sl]
   31a50:	ldr	ip, [sp, #4]
   31a54:	mul	r2, r2, r3
   31a58:	add	r3, r3, #1
   31a5c:	lsl	r2, r2, #1
   31a60:	ldrsh	r2, [r1, r2]
   31a64:	str	r2, [ip], #4
   31a68:	ldr	r2, [sp, #228]	; 0xe4
   31a6c:	str	ip, [sp, #4]
   31a70:	ldr	fp, [r2]
   31a74:	cmp	fp, r3
   31a78:	bgt	31a4c <GetDataSlab+0xfc20>
   31a7c:	ldr	r3, [r8]
   31a80:	ldr	r2, [sl, #4]
   31a84:	str	r3, [sp, #16]
   31a88:	ldr	r3, [sp, #228]	; 0xe4
   31a8c:	ldr	r6, [r3, #4]
   31a90:	add	r0, r0, #1
   31a94:	ldr	r3, [sp, #16]
   31a98:	cmp	r6, r0
   31a9c:	mul	r3, r3, r2
   31aa0:	add	r1, r1, r3, lsl #1
   31aa4:	bgt	31a40 <GetDataSlab+0xfc14>
   31aa8:	b	30874 <GetDataSlab+0xea48>
   31aac:	ldr	r1, [sp, #8]
   31ab0:	cmp	r6, #0
   31ab4:	ldr	r3, [sp, #16]
   31ab8:	mla	r3, r5, r3, r0
   31abc:	movgt	r0, #0
   31ac0:	add	r1, r1, r3
   31ac4:	ble	30874 <GetDataSlab+0xea48>
   31ac8:	cmp	fp, #0
   31acc:	movgt	r3, #0
   31ad0:	ble	31b14 <GetDataSlab+0xfce8>
   31ad4:	ldr	r2, [sl]
   31ad8:	ldr	ip, [sp, #4]
   31adc:	mul	r2, r2, r3
   31ae0:	add	r3, r3, #1
   31ae4:	ldrb	r2, [r1, r2]
   31ae8:	str	r2, [ip], #4
   31aec:	ldr	r2, [sp, #228]	; 0xe4
   31af0:	str	ip, [sp, #4]
   31af4:	ldr	fp, [r2]
   31af8:	cmp	fp, r3
   31afc:	bgt	31ad4 <GetDataSlab+0xfca8>
   31b00:	ldr	r3, [r8]
   31b04:	ldr	r2, [sl, #4]
   31b08:	str	r3, [sp, #16]
   31b0c:	ldr	r3, [sp, #228]	; 0xe4
   31b10:	ldr	r6, [r3, #4]
   31b14:	add	r0, r0, #1
   31b18:	ldr	r3, [sp, #16]
   31b1c:	cmp	r6, r0
   31b20:	mla	r1, r3, r2, r1
   31b24:	bgt	31ac8 <GetDataSlab+0xfc9c>
   31b28:	b	30874 <GetDataSlab+0xea48>
   31b2c:	ldr	r1, [sp, #8]
   31b30:	cmp	r6, #0
   31b34:	ldr	r3, [sp, #16]
   31b38:	mla	r3, r5, r3, r0
   31b3c:	movgt	r0, #0
   31b40:	add	r1, r1, r3
   31b44:	ble	30874 <GetDataSlab+0xea48>
   31b48:	cmp	fp, #0
   31b4c:	movgt	r3, #0
   31b50:	ble	31b94 <GetDataSlab+0xfd68>
   31b54:	ldr	r2, [sl]
   31b58:	ldr	ip, [sp, #4]
   31b5c:	mul	r2, r2, r3
   31b60:	add	r3, r3, #1
   31b64:	ldrsb	r2, [r1, r2]
   31b68:	str	r2, [ip], #4
   31b6c:	ldr	r2, [sp, #228]	; 0xe4
   31b70:	str	ip, [sp, #4]
   31b74:	ldr	fp, [r2]
   31b78:	cmp	fp, r3
   31b7c:	bgt	31b54 <GetDataSlab+0xfd28>
   31b80:	ldr	r3, [r8]
   31b84:	ldr	r2, [sl, #4]
   31b88:	str	r3, [sp, #16]
   31b8c:	ldr	r3, [sp, #228]	; 0xe4
   31b90:	ldr	r6, [r3, #4]
   31b94:	add	r0, r0, #1
   31b98:	ldr	r3, [sp, #16]
   31b9c:	cmp	r6, r0
   31ba0:	mla	r1, r3, r2, r1
   31ba4:	bgt	31b48 <GetDataSlab+0xfd1c>
   31ba8:	b	30874 <GetDataSlab+0xea48>
   31bac:	ldr	r3, [sp, #16]
   31bb0:	cmp	r6, #0
   31bb4:	mla	r3, r5, r3, r0
   31bb8:	ldr	r0, [sp, #8]
   31bbc:	add	r9, r0, r3, lsl #2
   31bc0:	ble	30874 <GetDataSlab+0xea48>
   31bc4:	ldr	r3, [sp, #16]
   31bc8:	lsl	r8, r1, #2
   31bcc:	mov	sl, #0
   31bd0:	mul	r3, r2, r3
   31bd4:	lsl	r2, fp, #3
   31bd8:	lsl	r3, r3, #2
   31bdc:	str	r3, [sp, #8]
   31be0:	str	r2, [sp, #12]
   31be4:	cmp	fp, #0
   31be8:	ble	31c24 <GetDataSlab+0xfdf8>
   31bec:	ldr	r7, [sp, #4]
   31bf0:	mov	r5, r9
   31bf4:	mov	r4, #0
   31bf8:	add	r4, r4, #1
   31bfc:	ldr	r0, [r5]
   31c00:	add	r5, r5, r8
   31c04:	bl	4e394 <__aeabi_f2lz>
   31c08:	cmp	fp, r4
   31c0c:	strd	r0, [r7], #8
   31c10:	bne	31bf8 <GetDataSlab+0xfdcc>
   31c14:	ldr	r3, [sp, #4]
   31c18:	ldr	r2, [sp, #12]
   31c1c:	add	r3, r3, r2
   31c20:	str	r3, [sp, #4]
   31c24:	ldr	r3, [sp, #8]
   31c28:	add	sl, sl, #1
   31c2c:	cmp	r6, sl
   31c30:	add	r9, r9, r3
   31c34:	bne	31be4 <GetDataSlab+0xfdb8>
   31c38:	b	30874 <GetDataSlab+0xea48>
   31c3c:	ldr	r3, [sp, #16]
   31c40:	cmp	r6, #0
   31c44:	mla	r3, r5, r3, r0
   31c48:	ldr	r0, [sp, #8]
   31c4c:	add	r5, r0, r3, lsl #2
   31c50:	ble	30874 <GetDataSlab+0xea48>
   31c54:	ldr	r3, [sp, #16]
   31c58:	mov	r4, #0
   31c5c:	lsl	lr, r1, #2
   31c60:	lsl	r8, fp, #3
   31c64:	mov	ip, r4
   31c68:	mul	r3, r2, r3
   31c6c:	lsl	r7, r3, #2
   31c70:	cmp	fp, #0
   31c74:	ble	31ca8 <GetDataSlab+0xfe7c>
   31c78:	ldr	r3, [sp, #4]
   31c7c:	mov	r1, r5
   31c80:	mov	r2, #0
   31c84:	add	r2, r2, #1
   31c88:	ldr	r0, [r1], lr
   31c8c:	cmp	fp, r2
   31c90:	stm	r3, {r0, ip}
   31c94:	add	r3, r3, #8
   31c98:	bne	31c84 <GetDataSlab+0xfe58>
   31c9c:	ldr	r3, [sp, #4]
   31ca0:	add	r3, r3, r8
   31ca4:	str	r3, [sp, #4]
   31ca8:	add	r4, r4, #1
   31cac:	add	r5, r5, r7
   31cb0:	cmp	r6, r4
   31cb4:	bne	31c70 <GetDataSlab+0xfe44>
   31cb8:	b	30874 <GetDataSlab+0xea48>
   31cbc:	ldr	r3, [sp, #16]
   31cc0:	cmp	r6, #0
   31cc4:	mla	r3, r5, r3, r0
   31cc8:	ldr	r0, [sp, #8]
   31ccc:	add	r4, r0, r3, lsl #2
   31cd0:	ble	30874 <GetDataSlab+0xea48>
   31cd4:	ldr	r3, [sp, #16]
   31cd8:	lsl	lr, r1, #2
   31cdc:	mov	r5, #0
   31ce0:	lsl	r8, fp, #3
   31ce4:	mul	r3, r2, r3
   31ce8:	lsl	r7, r3, #2
   31cec:	cmp	fp, #0
   31cf0:	ble	31d28 <GetDataSlab+0xfefc>
   31cf4:	ldr	r2, [sp, #4]
   31cf8:	mov	ip, r4
   31cfc:	mov	r3, #0
   31d00:	add	r3, r3, #1
   31d04:	ldr	r1, [ip], lr
   31d08:	cmp	fp, r3
   31d0c:	mov	r0, r1
   31d10:	asr	r1, r1, #31
   31d14:	strd	r0, [r2], #8
   31d18:	bne	31d00 <GetDataSlab+0xfed4>
   31d1c:	ldr	r3, [sp, #4]
   31d20:	add	r3, r3, r8
   31d24:	str	r3, [sp, #4]
   31d28:	add	r5, r5, #1
   31d2c:	add	r4, r4, r7
   31d30:	cmp	r6, r5
   31d34:	bne	31cec <GetDataSlab+0xfec0>
   31d38:	b	30874 <GetDataSlab+0xea48>
   31d3c:	ldr	r3, [sp, #16]
   31d40:	cmp	r6, #0
   31d44:	mla	r3, r5, r3, r0
   31d48:	ldr	r0, [sp, #8]
   31d4c:	add	r4, r0, r3, lsl #1
   31d50:	ble	30874 <GetDataSlab+0xea48>
   31d54:	ldr	r3, [sp, #16]
   31d58:	lsl	lr, r1, #1
   31d5c:	mov	r5, #0
   31d60:	lsl	r8, fp, #3
   31d64:	mul	r3, r2, r3
   31d68:	lsl	r7, r3, #1
   31d6c:	cmp	fp, #0
   31d70:	ble	31da4 <GetDataSlab+0xff78>
   31d74:	ldr	r2, [sp, #4]
   31d78:	mov	ip, r4
   31d7c:	mov	r3, #0
   31d80:	add	r3, r3, #1
   31d84:	mov	r1, #0
   31d88:	ldrh	r0, [ip], lr
   31d8c:	cmp	fp, r3
   31d90:	strd	r0, [r2], #8
   31d94:	bne	31d80 <GetDataSlab+0xff54>
   31d98:	ldr	r3, [sp, #4]
   31d9c:	add	r3, r3, r8
   31da0:	str	r3, [sp, #4]
   31da4:	add	r5, r5, #1
   31da8:	add	r4, r4, r7
   31dac:	cmp	r6, r5
   31db0:	bne	31d6c <GetDataSlab+0xff40>
   31db4:	b	30874 <GetDataSlab+0xea48>
   31db8:	ldr	r3, [sp, #16]
   31dbc:	cmp	r6, #0
   31dc0:	mla	r3, r5, r3, r0
   31dc4:	ldr	r0, [sp, #8]
   31dc8:	add	r4, r0, r3, lsl #1
   31dcc:	ble	30874 <GetDataSlab+0xea48>
   31dd0:	ldr	r3, [sp, #16]
   31dd4:	lsl	lr, r1, #1
   31dd8:	mov	r5, #0
   31ddc:	lsl	r8, fp, #3
   31de0:	mul	r3, r2, r3
   31de4:	lsl	r7, r3, #1
   31de8:	cmp	fp, #0
   31dec:	ble	31e20 <GetDataSlab+0xfff4>
   31df0:	ldr	r2, [sp, #4]
   31df4:	mov	ip, r4
   31df8:	mov	r3, #0
   31dfc:	add	r3, r3, #1
   31e00:	ldrsh	r0, [ip], lr
   31e04:	cmp	fp, r3
   31e08:	asr	r1, r0, #31
   31e0c:	strd	r0, [r2], #8
   31e10:	bne	31dfc <GetDataSlab+0xffd0>
   31e14:	ldr	r3, [sp, #4]
   31e18:	add	r3, r3, r8
   31e1c:	str	r3, [sp, #4]
   31e20:	add	r5, r5, #1
   31e24:	add	r4, r4, r7
   31e28:	cmp	r6, r5
   31e2c:	bne	31de8 <GetDataSlab+0xffbc>
   31e30:	b	30874 <GetDataSlab+0xea48>
   31e34:	ldr	r3, [sp, #16]
   31e38:	cmp	r6, #0
   31e3c:	mla	r3, r5, r3, r0
   31e40:	ldr	r0, [sp, #8]
   31e44:	add	ip, r0, r3
   31e48:	ble	30874 <GetDataSlab+0xea48>
   31e4c:	ldr	r3, [sp, #16]
   31e50:	lsl	r8, fp, #3
   31e54:	mov	lr, #0
   31e58:	mul	r7, r2, r3
   31e5c:	cmp	fp, #0
   31e60:	ble	31e94 <GetDataSlab+0x10068>
   31e64:	ldr	r2, [sp, #4]
   31e68:	mov	r0, ip
   31e6c:	mov	r3, #0
   31e70:	add	r3, r3, #1
   31e74:	mov	r5, #0
   31e78:	ldrb	r4, [r0], r1
   31e7c:	cmp	fp, r3
   31e80:	strd	r4, [r2], #8
   31e84:	bne	31e70 <GetDataSlab+0x10044>
   31e88:	ldr	r3, [sp, #4]
   31e8c:	add	r3, r3, r8
   31e90:	str	r3, [sp, #4]
   31e94:	add	lr, lr, #1
   31e98:	add	ip, ip, r7
   31e9c:	cmp	r6, lr
   31ea0:	bne	31e5c <GetDataSlab+0x10030>
   31ea4:	b	30874 <GetDataSlab+0xea48>
   31ea8:	ldr	r3, [sp, #16]
   31eac:	cmp	r6, #0
   31eb0:	mla	r3, r5, r3, r0
   31eb4:	ldr	r0, [sp, #8]
   31eb8:	add	ip, r0, r3
   31ebc:	ble	30874 <GetDataSlab+0xea48>
   31ec0:	ldr	r3, [sp, #16]
   31ec4:	lsl	r8, fp, #3
   31ec8:	mov	lr, #0
   31ecc:	mul	r7, r2, r3
   31ed0:	cmp	fp, #0
   31ed4:	ble	31f08 <GetDataSlab+0x100dc>
   31ed8:	ldr	r2, [sp, #4]
   31edc:	mov	r0, ip
   31ee0:	mov	r3, #0
   31ee4:	add	r3, r3, #1
   31ee8:	ldrsb	r4, [r0], r1
   31eec:	cmp	fp, r3
   31ef0:	asr	r5, r4, #31
   31ef4:	strd	r4, [r2], #8
   31ef8:	bne	31ee4 <GetDataSlab+0x100b8>
   31efc:	ldr	r3, [sp, #4]
   31f00:	add	r3, r3, r8
   31f04:	str	r3, [sp, #4]
   31f08:	add	lr, lr, #1
   31f0c:	add	ip, ip, r7
   31f10:	cmp	r6, lr
   31f14:	bne	31ed0 <GetDataSlab+0x100a4>
   31f18:	b	30874 <GetDataSlab+0xea48>
   31f1c:	ldr	r3, [sp, #16]
   31f20:	cmp	r6, #0
   31f24:	mla	r3, r5, r3, r0
   31f28:	ldr	r0, [sp, #8]
   31f2c:	add	r9, r0, r3, lsl #2
   31f30:	ble	30874 <GetDataSlab+0xea48>
   31f34:	ldr	r3, [sp, #16]
   31f38:	lsl	r8, r1, #2
   31f3c:	mov	sl, #0
   31f40:	mul	r3, r2, r3
   31f44:	lsl	r2, fp, #3
   31f48:	lsl	r3, r3, #2
   31f4c:	str	r3, [sp, #8]
   31f50:	str	r2, [sp, #12]
   31f54:	cmp	fp, #0
   31f58:	ble	31f94 <GetDataSlab+0x10168>
   31f5c:	ldr	r7, [sp, #4]
   31f60:	mov	r5, r9
   31f64:	mov	r4, #0
   31f68:	add	r4, r4, #1
   31f6c:	ldr	r0, [r5]
   31f70:	add	r5, r5, r8
   31f74:	bl	4e3f0 <__aeabi_f2ulz>
   31f78:	cmp	fp, r4
   31f7c:	strd	r0, [r7], #8
   31f80:	bne	31f68 <GetDataSlab+0x1013c>
   31f84:	ldr	r3, [sp, #4]
   31f88:	ldr	r2, [sp, #12]
   31f8c:	add	r3, r3, r2
   31f90:	str	r3, [sp, #4]
   31f94:	ldr	r3, [sp, #8]
   31f98:	add	sl, sl, #1
   31f9c:	cmp	r6, sl
   31fa0:	add	r9, r9, r3
   31fa4:	bne	31f54 <GetDataSlab+0x10128>
   31fa8:	b	30874 <GetDataSlab+0xea48>
   31fac:	ldr	r3, [sp, #16]
   31fb0:	cmp	r6, #0
   31fb4:	mla	r3, r5, r3, r0
   31fb8:	ldr	r0, [sp, #8]
   31fbc:	add	r5, r0, r3, lsl #2
   31fc0:	ble	30874 <GetDataSlab+0xea48>
   31fc4:	ldr	r3, [sp, #16]
   31fc8:	mov	r4, #0
   31fcc:	lsl	lr, r1, #2
   31fd0:	lsl	r8, fp, #3
   31fd4:	mov	ip, r4
   31fd8:	mul	r3, r2, r3
   31fdc:	lsl	r7, r3, #2
   31fe0:	cmp	fp, #0
   31fe4:	ble	32018 <GetDataSlab+0x101ec>
   31fe8:	ldr	r3, [sp, #4]
   31fec:	mov	r1, r5
   31ff0:	mov	r2, #0
   31ff4:	add	r2, r2, #1
   31ff8:	ldr	r0, [r1], lr
   31ffc:	cmp	fp, r2
   32000:	stm	r3, {r0, ip}
   32004:	add	r3, r3, #8
   32008:	bne	31ff4 <GetDataSlab+0x101c8>
   3200c:	ldr	r3, [sp, #4]
   32010:	add	r3, r3, r8
   32014:	str	r3, [sp, #4]
   32018:	add	r4, r4, #1
   3201c:	add	r5, r5, r7
   32020:	cmp	r6, r4
   32024:	bne	31fe0 <GetDataSlab+0x101b4>
   32028:	b	30874 <GetDataSlab+0xea48>
   3202c:	ldr	r3, [sp, #16]
   32030:	cmp	r6, #0
   32034:	mla	r3, r5, r3, r0
   32038:	ldr	r0, [sp, #8]
   3203c:	add	r4, r0, r3, lsl #2
   32040:	ble	30874 <GetDataSlab+0xea48>
   32044:	ldr	r3, [sp, #16]
   32048:	lsl	lr, r1, #2
   3204c:	mov	r5, #0
   32050:	lsl	r8, fp, #3
   32054:	mul	r3, r2, r3
   32058:	lsl	r7, r3, #2
   3205c:	cmp	fp, #0
   32060:	ble	32098 <GetDataSlab+0x1026c>
   32064:	ldr	r2, [sp, #4]
   32068:	mov	ip, r4
   3206c:	mov	r3, #0
   32070:	add	r3, r3, #1
   32074:	ldr	r1, [ip], lr
   32078:	cmp	fp, r3
   3207c:	mov	r0, r1
   32080:	asr	r1, r1, #31
   32084:	strd	r0, [r2], #8
   32088:	bne	32070 <GetDataSlab+0x10244>
   3208c:	ldr	r3, [sp, #4]
   32090:	add	r3, r3, r8
   32094:	str	r3, [sp, #4]
   32098:	add	r5, r5, #1
   3209c:	add	r4, r4, r7
   320a0:	cmp	r6, r5
   320a4:	bne	3205c <GetDataSlab+0x10230>
   320a8:	b	30874 <GetDataSlab+0xea48>
   320ac:	ldr	r3, [sp, #16]
   320b0:	cmp	r6, #0
   320b4:	mla	r3, r5, r3, r0
   320b8:	ldr	r0, [sp, #8]
   320bc:	add	r4, r0, r3, lsl #1
   320c0:	ble	30874 <GetDataSlab+0xea48>
   320c4:	ldr	r3, [sp, #16]
   320c8:	lsl	lr, r1, #1
   320cc:	mov	r5, #0
   320d0:	lsl	r8, fp, #3
   320d4:	mul	r3, r2, r3
   320d8:	lsl	r7, r3, #1
   320dc:	cmp	fp, #0
   320e0:	ble	32114 <GetDataSlab+0x102e8>
   320e4:	ldr	r2, [sp, #4]
   320e8:	mov	ip, r4
   320ec:	mov	r3, #0
   320f0:	add	r3, r3, #1
   320f4:	mov	r1, #0
   320f8:	ldrh	r0, [ip], lr
   320fc:	cmp	fp, r3
   32100:	strd	r0, [r2], #8
   32104:	bne	320f0 <GetDataSlab+0x102c4>
   32108:	ldr	r3, [sp, #4]
   3210c:	add	r3, r3, r8
   32110:	str	r3, [sp, #4]
   32114:	add	r5, r5, #1
   32118:	add	r4, r4, r7
   3211c:	cmp	r6, r5
   32120:	bne	320dc <GetDataSlab+0x102b0>
   32124:	b	30874 <GetDataSlab+0xea48>
   32128:	ldr	r3, [sp, #16]
   3212c:	cmp	r6, #0
   32130:	mla	r3, r5, r3, r0
   32134:	ldr	r0, [sp, #8]
   32138:	add	r4, r0, r3, lsl #1
   3213c:	ble	30874 <GetDataSlab+0xea48>
   32140:	ldr	r3, [sp, #16]
   32144:	lsl	lr, r1, #1
   32148:	mov	r5, #0
   3214c:	lsl	r8, fp, #3
   32150:	mul	r3, r2, r3
   32154:	lsl	r7, r3, #1
   32158:	cmp	fp, #0
   3215c:	ble	32190 <GetDataSlab+0x10364>
   32160:	ldr	r2, [sp, #4]
   32164:	mov	ip, r4
   32168:	mov	r3, #0
   3216c:	add	r3, r3, #1
   32170:	ldrsh	r0, [ip], lr
   32174:	cmp	fp, r3
   32178:	asr	r1, r0, #31
   3217c:	strd	r0, [r2], #8
   32180:	bne	3216c <GetDataSlab+0x10340>
   32184:	ldr	r3, [sp, #4]
   32188:	add	r3, r3, r8
   3218c:	str	r3, [sp, #4]
   32190:	add	r5, r5, #1
   32194:	add	r4, r4, r7
   32198:	cmp	r6, r5
   3219c:	bne	32158 <GetDataSlab+0x1032c>
   321a0:	b	30874 <GetDataSlab+0xea48>
   321a4:	ldr	r3, [sp, #16]
   321a8:	cmp	r6, #0
   321ac:	mla	r3, r5, r3, r0
   321b0:	ldr	r0, [sp, #8]
   321b4:	add	ip, r0, r3
   321b8:	ble	30874 <GetDataSlab+0xea48>
   321bc:	ldr	r3, [sp, #16]
   321c0:	lsl	r8, fp, #3
   321c4:	mov	lr, #0
   321c8:	mul	r7, r2, r3
   321cc:	cmp	fp, #0
   321d0:	ble	32204 <GetDataSlab+0x103d8>
   321d4:	ldr	r2, [sp, #4]
   321d8:	mov	r0, ip
   321dc:	mov	r3, #0
   321e0:	add	r3, r3, #1
   321e4:	mov	r5, #0
   321e8:	ldrb	r4, [r0], r1
   321ec:	cmp	fp, r3
   321f0:	strd	r4, [r2], #8
   321f4:	bne	321e0 <GetDataSlab+0x103b4>
   321f8:	ldr	r3, [sp, #4]
   321fc:	add	r3, r3, r8
   32200:	str	r3, [sp, #4]
   32204:	add	lr, lr, #1
   32208:	add	ip, ip, r7
   3220c:	cmp	r6, lr
   32210:	bne	321cc <GetDataSlab+0x103a0>
   32214:	b	30874 <GetDataSlab+0xea48>
   32218:	ldr	r3, [sp, #16]
   3221c:	cmp	r6, #0
   32220:	mla	r3, r5, r3, r0
   32224:	ldr	r0, [sp, #8]
   32228:	add	ip, r0, r3
   3222c:	ble	30874 <GetDataSlab+0xea48>
   32230:	ldr	r3, [sp, #16]
   32234:	lsl	r8, fp, #3
   32238:	mov	lr, #0
   3223c:	mul	r7, r2, r3
   32240:	cmp	fp, #0
   32244:	ble	32278 <GetDataSlab+0x1044c>
   32248:	ldr	r2, [sp, #4]
   3224c:	mov	r0, ip
   32250:	mov	r3, #0
   32254:	add	r3, r3, #1
   32258:	ldrsb	r4, [r0], r1
   3225c:	cmp	fp, r3
   32260:	asr	r5, r4, #31
   32264:	strd	r4, [r2], #8
   32268:	bne	32254 <GetDataSlab+0x10428>
   3226c:	ldr	r3, [sp, #4]
   32270:	add	r3, r3, r8
   32274:	str	r3, [sp, #4]
   32278:	add	lr, lr, #1
   3227c:	add	ip, ip, r7
   32280:	cmp	r6, lr
   32284:	bne	32240 <GetDataSlab+0x10414>
   32288:	b	30874 <GetDataSlab+0xea48>
   3228c:	ldr	r3, [sp, #16]
   32290:	cmp	r6, #0
   32294:	mla	r3, r5, r3, r0
   32298:	ldr	r0, [sp, #8]
   3229c:	add	r0, r0, r3, lsl #2
   322a0:	ble	30874 <GetDataSlab+0xea48>
   322a4:	ldr	r3, [sp, #16]
   322a8:	lsl	r1, r1, #2
   322ac:	mov	ip, #0
   322b0:	lsl	r5, fp, #1
   322b4:	mul	r3, r2, r3
   322b8:	lsl	r4, r3, #2
   322bc:	cmp	fp, #0
   322c0:	ble	322f8 <GetDataSlab+0x104cc>
   322c4:	ldr	r2, [sp, #4]
   322c8:	mov	r3, r0
   322cc:	add	r2, r2, r5
   322d0:	vldr	s15, [r3]
   322d4:	add	r3, r3, r1
   322d8:	ldr	r7, [sp, #4]
   322dc:	vcvt.s32.f32	s15, s15
   322e0:	vmov	lr, s15
   322e4:	strh	lr, [r7], #2
   322e8:	cmp	r2, r7
   322ec:	mov	lr, r7
   322f0:	str	r7, [sp, #4]
   322f4:	bne	322d0 <GetDataSlab+0x104a4>
   322f8:	add	ip, ip, #1
   322fc:	add	r0, r0, r4
   32300:	cmp	r6, ip
   32304:	bne	322bc <GetDataSlab+0x10490>
   32308:	b	30874 <GetDataSlab+0xea48>
   3230c:	ldr	r3, [sp, #16]
   32310:	cmp	r6, #0
   32314:	mla	r3, r5, r3, r0
   32318:	ldr	r0, [sp, #8]
   3231c:	add	ip, r0, r3, lsl #2
   32320:	ble	30874 <GetDataSlab+0xea48>
   32324:	ldr	r3, [sp, #16]
   32328:	lsl	r0, r1, #2
   3232c:	mov	lr, #0
   32330:	lsl	r5, fp, #1
   32334:	mul	r3, r2, r3
   32338:	lsl	r4, r3, #2
   3233c:	cmp	fp, #0
   32340:	ble	32368 <GetDataSlab+0x1053c>
   32344:	ldr	r2, [sp, #4]
   32348:	mov	r3, ip
   3234c:	add	r1, r2, r5
   32350:	ldr	r2, [r3], r0
   32354:	ldr	r7, [sp, #4]
   32358:	strh	r2, [r7], #2
   3235c:	cmp	r1, r7
   32360:	str	r7, [sp, #4]
   32364:	bne	32350 <GetDataSlab+0x10524>
   32368:	add	lr, lr, #1
   3236c:	add	ip, ip, r4
   32370:	cmp	r6, lr
   32374:	bne	3233c <GetDataSlab+0x10510>
   32378:	b	30874 <GetDataSlab+0xea48>
   3237c:	ldr	r3, [sp, #16]
   32380:	cmp	r6, #0
   32384:	mla	r3, r5, r3, r0
   32388:	ldr	r0, [sp, #8]
   3238c:	add	ip, r0, r3, lsl #2
   32390:	ble	30874 <GetDataSlab+0xea48>
   32394:	ldr	r3, [sp, #16]
   32398:	lsl	r0, r1, #2
   3239c:	mov	lr, #0
   323a0:	lsl	r5, fp, #1
   323a4:	mul	r3, r2, r3
   323a8:	lsl	r4, r3, #2
   323ac:	cmp	fp, #0
   323b0:	ble	323d8 <GetDataSlab+0x105ac>
   323b4:	ldr	r2, [sp, #4]
   323b8:	mov	r3, ip
   323bc:	add	r1, r2, r5
   323c0:	ldr	r2, [r3], r0
   323c4:	ldr	r7, [sp, #4]
   323c8:	strh	r2, [r7], #2
   323cc:	cmp	r7, r1
   323d0:	str	r7, [sp, #4]
   323d4:	bne	323c0 <GetDataSlab+0x10594>
   323d8:	add	lr, lr, #1
   323dc:	add	ip, ip, r4
   323e0:	cmp	r6, lr
   323e4:	bne	323ac <GetDataSlab+0x10580>
   323e8:	b	30874 <GetDataSlab+0xea48>
   323ec:	ldr	r3, [sp, #16]
   323f0:	cmp	r6, #0
   323f4:	mla	r3, r5, r3, r0
   323f8:	ldr	r0, [sp, #8]
   323fc:	add	ip, r0, r3, lsl #1
   32400:	ble	30874 <GetDataSlab+0xea48>
   32404:	ldr	r3, [sp, #16]
   32408:	lsl	r0, r1, #1
   3240c:	mov	lr, #0
   32410:	lsl	r5, fp, #1
   32414:	mul	r3, r2, r3
   32418:	lsl	r4, r3, #1
   3241c:	cmp	fp, #0
   32420:	ble	32448 <GetDataSlab+0x1061c>
   32424:	ldr	r2, [sp, #4]
   32428:	mov	r3, ip
   3242c:	add	r1, r2, r5
   32430:	ldrh	r2, [r3], r0
   32434:	ldr	r7, [sp, #4]
   32438:	strh	r2, [r7], #2
   3243c:	cmp	r1, r7
   32440:	str	r7, [sp, #4]
   32444:	bne	32430 <GetDataSlab+0x10604>
   32448:	add	lr, lr, #1
   3244c:	add	ip, ip, r4
   32450:	cmp	r6, lr
   32454:	bne	3241c <GetDataSlab+0x105f0>
   32458:	b	30874 <GetDataSlab+0xea48>
   3245c:	ldr	r3, [sp, #16]
   32460:	cmp	r6, #0
   32464:	mla	r3, r5, r3, r0
   32468:	ldr	r0, [sp, #8]
   3246c:	add	ip, r0, r3, lsl #1
   32470:	ble	30874 <GetDataSlab+0xea48>
   32474:	ldr	r3, [sp, #16]
   32478:	lsl	r0, r1, #1
   3247c:	mov	lr, #0
   32480:	lsl	r5, fp, #1
   32484:	mul	r3, r2, r3
   32488:	lsl	r4, r3, #1
   3248c:	cmp	fp, #0
   32490:	ble	324b8 <GetDataSlab+0x1068c>
   32494:	ldr	r2, [sp, #4]
   32498:	mov	r3, ip
   3249c:	add	r1, r2, r5
   324a0:	ldrsh	r2, [r3], r0
   324a4:	ldr	r7, [sp, #4]
   324a8:	strh	r2, [r7], #2
   324ac:	cmp	r7, r1
   324b0:	str	r7, [sp, #4]
   324b4:	bne	324a0 <GetDataSlab+0x10674>
   324b8:	add	lr, lr, #1
   324bc:	add	ip, ip, r4
   324c0:	cmp	r6, lr
   324c4:	bne	3248c <GetDataSlab+0x10660>
   324c8:	b	30874 <GetDataSlab+0xea48>
   324cc:	ldr	r3, [sp, #16]
   324d0:	cmp	r6, #0
   324d4:	mla	r3, r5, r3, r0
   324d8:	ldr	r0, [sp, #8]
   324dc:	add	ip, r0, r3
   324e0:	ble	30874 <GetDataSlab+0xea48>
   324e4:	ldr	r3, [sp, #16]
   324e8:	lsl	r5, fp, #1
   324ec:	mov	lr, #0
   324f0:	mul	r4, r2, r3
   324f4:	cmp	fp, #0
   324f8:	ble	32520 <GetDataSlab+0x106f4>
   324fc:	ldr	r2, [sp, #4]
   32500:	mov	r3, ip
   32504:	add	r0, r2, r5
   32508:	ldrb	r2, [r3], r1
   3250c:	ldr	r7, [sp, #4]
   32510:	strh	r2, [r7], #2
   32514:	cmp	r7, r0
   32518:	str	r7, [sp, #4]
   3251c:	bne	32508 <GetDataSlab+0x106dc>
   32520:	add	lr, lr, #1
   32524:	add	ip, ip, r4
   32528:	cmp	r6, lr
   3252c:	bne	324f4 <GetDataSlab+0x106c8>
   32530:	b	30874 <GetDataSlab+0xea48>
   32534:	ldr	r3, [sp, #16]
   32538:	cmp	r6, #0
   3253c:	mla	r3, r5, r3, r0
   32540:	ldr	r0, [sp, #8]
   32544:	add	ip, r0, r3
   32548:	ble	30874 <GetDataSlab+0xea48>
   3254c:	ldr	r3, [sp, #16]
   32550:	lsl	r5, fp, #1
   32554:	mov	lr, #0
   32558:	mul	r4, r2, r3
   3255c:	cmp	fp, #0
   32560:	ble	32588 <GetDataSlab+0x1075c>
   32564:	ldr	r2, [sp, #4]
   32568:	mov	r3, ip
   3256c:	add	r0, r2, r5
   32570:	ldrsb	r2, [r3], r1
   32574:	ldr	r7, [sp, #4]
   32578:	strh	r2, [r7], #2
   3257c:	cmp	r0, r7
   32580:	str	r7, [sp, #4]
   32584:	bne	32570 <GetDataSlab+0x10744>
   32588:	add	lr, lr, #1
   3258c:	add	ip, ip, r4
   32590:	cmp	r6, lr
   32594:	bne	3255c <GetDataSlab+0x10730>
   32598:	b	30874 <GetDataSlab+0xea48>
   3259c:	ldr	r3, [sp, #16]
   325a0:	cmp	r6, #0
   325a4:	mla	r3, r5, r3, r0
   325a8:	ldr	r0, [sp, #8]
   325ac:	add	ip, r0, r3, lsl #2
   325b0:	ble	30874 <GetDataSlab+0xea48>
   325b4:	ldr	r3, [sp, #16]
   325b8:	lsl	r0, r1, #2
   325bc:	mov	lr, #0
   325c0:	lsl	r5, fp, #3
   325c4:	mul	r3, r2, r3
   325c8:	lsl	r4, r3, #2
   325cc:	cmp	fp, #0
   325d0:	ble	32608 <GetDataSlab+0x107dc>
   325d4:	ldr	r1, [sp, #4]
   325d8:	mov	r2, ip
   325dc:	mov	r3, #0
   325e0:	add	r3, r3, #1
   325e4:	vldr	s15, [r2]
   325e8:	cmp	fp, r3
   325ec:	add	r2, r2, r0
   325f0:	vcvt.f64.f32	d7, s15
   325f4:	vstmia	r1!, {d7}
   325f8:	bne	325e0 <GetDataSlab+0x107b4>
   325fc:	ldr	r3, [sp, #4]
   32600:	add	r3, r3, r5
   32604:	str	r3, [sp, #4]
   32608:	add	lr, lr, #1
   3260c:	add	ip, ip, r4
   32610:	cmp	r6, lr
   32614:	bne	325cc <GetDataSlab+0x107a0>
   32618:	b	30874 <GetDataSlab+0xea48>
   3261c:	ldr	r3, [sp, #16]
   32620:	cmp	r6, #0
   32624:	mla	r3, r5, r3, r0
   32628:	ldr	r0, [sp, #8]
   3262c:	add	ip, r0, r3, lsl #2
   32630:	ble	30874 <GetDataSlab+0xea48>
   32634:	ldr	r3, [sp, #16]
   32638:	lsl	r0, r1, #2
   3263c:	mov	lr, #0
   32640:	lsl	r7, fp, #3
   32644:	mul	r3, r2, r3
   32648:	lsl	r5, r3, #2
   3264c:	cmp	fp, #0
   32650:	ble	32688 <GetDataSlab+0x1085c>
   32654:	ldr	r2, [sp, #4]
   32658:	mov	r1, ip
   3265c:	mov	r3, #0
   32660:	add	r3, r3, #1
   32664:	ldr	r4, [r1], r0
   32668:	cmp	fp, r3
   3266c:	vmov	s15, r4
   32670:	vcvt.f64.u32	d7, s15
   32674:	vstmia	r2!, {d7}
   32678:	bne	32660 <GetDataSlab+0x10834>
   3267c:	ldr	r3, [sp, #4]
   32680:	add	r3, r3, r7
   32684:	str	r3, [sp, #4]
   32688:	add	lr, lr, #1
   3268c:	add	ip, ip, r5
   32690:	cmp	r6, lr
   32694:	bne	3264c <GetDataSlab+0x10820>
   32698:	b	30874 <GetDataSlab+0xea48>
   3269c:	ldr	r3, [sp, #16]
   326a0:	cmp	r6, #0
   326a4:	mla	r3, r5, r3, r0
   326a8:	ldr	r0, [sp, #8]
   326ac:	add	ip, r0, r3, lsl #2
   326b0:	ble	30874 <GetDataSlab+0xea48>
   326b4:	ldr	r3, [sp, #16]
   326b8:	lsl	r0, r1, #2
   326bc:	mov	lr, #0
   326c0:	lsl	r7, fp, #3
   326c4:	mul	r3, r2, r3
   326c8:	lsl	r5, r3, #2
   326cc:	cmp	fp, #0
   326d0:	ble	32708 <GetDataSlab+0x108dc>
   326d4:	ldr	r2, [sp, #4]
   326d8:	mov	r1, ip
   326dc:	mov	r3, #0
   326e0:	add	r3, r3, #1
   326e4:	ldr	r4, [r1], r0
   326e8:	cmp	fp, r3
   326ec:	vmov	s15, r4
   326f0:	vcvt.f64.s32	d7, s15
   326f4:	vstmia	r2!, {d7}
   326f8:	bne	326e0 <GetDataSlab+0x108b4>
   326fc:	ldr	r3, [sp, #4]
   32700:	add	r3, r3, r7
   32704:	str	r3, [sp, #4]
   32708:	add	lr, lr, #1
   3270c:	add	ip, ip, r5
   32710:	cmp	r6, lr
   32714:	bne	326cc <GetDataSlab+0x108a0>
   32718:	b	30874 <GetDataSlab+0xea48>
   3271c:	ldr	r3, [sp, #16]
   32720:	cmp	r6, #0
   32724:	mla	r3, r5, r3, r0
   32728:	ldr	r0, [sp, #8]
   3272c:	add	ip, r0, r3, lsl #1
   32730:	ble	30874 <GetDataSlab+0xea48>
   32734:	ldr	r3, [sp, #16]
   32738:	lsl	r0, r1, #1
   3273c:	mov	lr, #0
   32740:	lsl	r7, fp, #3
   32744:	mul	r3, r2, r3
   32748:	lsl	r5, r3, #1
   3274c:	cmp	fp, #0
   32750:	ble	32788 <GetDataSlab+0x1095c>
   32754:	ldr	r2, [sp, #4]
   32758:	mov	r1, ip
   3275c:	mov	r3, #0
   32760:	add	r3, r3, #1
   32764:	ldrh	r4, [r1], r0
   32768:	cmp	fp, r3
   3276c:	vmov	s15, r4
   32770:	vcvt.f64.u32	d7, s15
   32774:	vstmia	r2!, {d7}
   32778:	bne	32760 <GetDataSlab+0x10934>
   3277c:	ldr	r3, [sp, #4]
   32780:	add	r3, r3, r7
   32784:	str	r3, [sp, #4]
   32788:	add	lr, lr, #1
   3278c:	add	ip, ip, r5
   32790:	cmp	r6, lr
   32794:	bne	3274c <GetDataSlab+0x10920>
   32798:	b	30874 <GetDataSlab+0xea48>
   3279c:	ldr	r3, [sp, #16]
   327a0:	cmp	r6, #0
   327a4:	mla	r3, r5, r3, r0
   327a8:	ldr	r0, [sp, #8]
   327ac:	add	ip, r0, r3, lsl #1
   327b0:	ble	30874 <GetDataSlab+0xea48>
   327b4:	ldr	r3, [sp, #16]
   327b8:	lsl	r0, r1, #1
   327bc:	mov	lr, #0
   327c0:	lsl	r7, fp, #3
   327c4:	mul	r3, r2, r3
   327c8:	lsl	r5, r3, #1
   327cc:	cmp	fp, #0
   327d0:	ble	32808 <GetDataSlab+0x109dc>
   327d4:	ldr	r2, [sp, #4]
   327d8:	mov	r1, ip
   327dc:	mov	r3, #0
   327e0:	add	r3, r3, #1
   327e4:	ldrsh	r4, [r1], r0
   327e8:	cmp	fp, r3
   327ec:	vmov	s15, r4
   327f0:	vcvt.f64.s32	d7, s15
   327f4:	vstmia	r2!, {d7}
   327f8:	bne	327e0 <GetDataSlab+0x109b4>
   327fc:	ldr	r3, [sp, #4]
   32800:	add	r3, r3, r7
   32804:	str	r3, [sp, #4]
   32808:	add	lr, lr, #1
   3280c:	add	ip, ip, r5
   32810:	cmp	r6, lr
   32814:	bne	327cc <GetDataSlab+0x109a0>
   32818:	b	30874 <GetDataSlab+0xea48>
   3281c:	ldr	r3, [sp, #16]
   32820:	cmp	r6, #0
   32824:	mla	r3, r5, r3, r0
   32828:	ldr	r0, [sp, #8]
   3282c:	add	ip, r0, r3
   32830:	ble	30874 <GetDataSlab+0xea48>
   32834:	ldr	r3, [sp, #16]
   32838:	lsl	r7, fp, #3
   3283c:	mov	lr, #0
   32840:	mul	r5, r2, r3
   32844:	cmp	fp, #0
   32848:	ble	32880 <GetDataSlab+0x10a54>
   3284c:	ldr	r2, [sp, #4]
   32850:	mov	r0, ip
   32854:	mov	r3, #0
   32858:	add	r3, r3, #1
   3285c:	ldrb	r4, [r0], r1
   32860:	cmp	fp, r3
   32864:	vmov	s15, r4
   32868:	vcvt.f64.u32	d7, s15
   3286c:	vstmia	r2!, {d7}
   32870:	bne	32858 <GetDataSlab+0x10a2c>
   32874:	ldr	r3, [sp, #4]
   32878:	add	r3, r3, r7
   3287c:	str	r3, [sp, #4]
   32880:	add	lr, lr, #1
   32884:	add	ip, ip, r5
   32888:	cmp	r6, lr
   3288c:	bne	32844 <GetDataSlab+0x10a18>
   32890:	b	30874 <GetDataSlab+0xea48>
   32894:	ldr	r3, [sp, #16]
   32898:	cmp	r6, #0
   3289c:	mla	r3, r5, r3, r0
   328a0:	ldr	r0, [sp, #8]
   328a4:	add	ip, r0, r3
   328a8:	ble	30874 <GetDataSlab+0xea48>
   328ac:	ldr	r3, [sp, #16]
   328b0:	lsl	r7, fp, #3
   328b4:	mov	lr, #0
   328b8:	mul	r5, r2, r3
   328bc:	cmp	fp, #0
   328c0:	ble	328f8 <GetDataSlab+0x10acc>
   328c4:	ldr	r2, [sp, #4]
   328c8:	mov	r0, ip
   328cc:	mov	r3, #0
   328d0:	add	r3, r3, #1
   328d4:	ldrsb	r4, [r0], r1
   328d8:	cmp	fp, r3
   328dc:	vmov	s15, r4
   328e0:	vcvt.f64.s32	d7, s15
   328e4:	vstmia	r2!, {d7}
   328e8:	bne	328d0 <GetDataSlab+0x10aa4>
   328ec:	ldr	r3, [sp, #4]
   328f0:	add	r3, r3, r7
   328f4:	str	r3, [sp, #4]
   328f8:	add	lr, lr, #1
   328fc:	add	ip, ip, r5
   32900:	cmp	r6, lr
   32904:	bne	328bc <GetDataSlab+0x10a90>
   32908:	b	30874 <GetDataSlab+0xea48>
   3290c:	ldr	r1, [sp, #8]
   32910:	cmp	r6, #0
   32914:	ldr	r3, [sp, #16]
   32918:	mla	r3, r5, r3, r0
   3291c:	movgt	r0, #0
   32920:	add	r1, r1, r3, lsl #2
   32924:	ble	30874 <GetDataSlab+0xea48>
   32928:	cmp	fp, #0
   3292c:	movgt	r3, #0
   32930:	ble	32980 <GetDataSlab+0x10b54>
   32934:	ldr	r2, [sl]
   32938:	ldr	ip, [sp, #4]
   3293c:	mul	r2, r2, r3
   32940:	add	r3, r3, #1
   32944:	add	r2, r1, r2, lsl #2
   32948:	vldr	s15, [r2]
   3294c:	vcvt.s32.f32	s15, s15
   32950:	vmov	r2, s15
   32954:	strb	r2, [ip], #1
   32958:	ldr	r2, [sp, #228]	; 0xe4
   3295c:	str	ip, [sp, #4]
   32960:	ldr	fp, [r2]
   32964:	cmp	fp, r3
   32968:	bgt	32934 <GetDataSlab+0x10b08>
   3296c:	ldr	r3, [r8]
   32970:	ldr	r2, [sl, #4]
   32974:	str	r3, [sp, #16]
   32978:	ldr	r3, [sp, #228]	; 0xe4
   3297c:	ldr	r6, [r3, #4]
   32980:	add	r0, r0, #1
   32984:	ldr	r3, [sp, #16]
   32988:	cmp	r6, r0
   3298c:	mul	r3, r3, r2
   32990:	add	r1, r1, r3, lsl #2
   32994:	bgt	32928 <GetDataSlab+0x10afc>
   32998:	b	30874 <GetDataSlab+0xea48>
   3299c:	ldr	r1, [sp, #8]
   329a0:	cmp	r6, #0
   329a4:	ldr	r3, [sp, #16]
   329a8:	mla	r3, r5, r3, r0
   329ac:	movgt	r0, #0
   329b0:	add	r1, r1, r3, lsl #2
   329b4:	ble	30874 <GetDataSlab+0xea48>
   329b8:	cmp	fp, #0
   329bc:	movgt	r3, #0
   329c0:	ble	32a04 <GetDataSlab+0x10bd8>
   329c4:	ldr	r2, [sl]
   329c8:	ldr	ip, [sp, #4]
   329cc:	mul	r2, r2, r3
   329d0:	add	r3, r3, #1
   329d4:	ldr	r2, [r1, r2, lsl #2]
   329d8:	strb	r2, [ip], #1
   329dc:	ldr	r2, [sp, #228]	; 0xe4
   329e0:	str	ip, [sp, #4]
   329e4:	ldr	fp, [r2]
   329e8:	cmp	fp, r3
   329ec:	bgt	329c4 <GetDataSlab+0x10b98>
   329f0:	ldr	r3, [r8]
   329f4:	ldr	r2, [sl, #4]
   329f8:	str	r3, [sp, #16]
   329fc:	ldr	r3, [sp, #228]	; 0xe4
   32a00:	ldr	r6, [r3, #4]
   32a04:	add	r0, r0, #1
   32a08:	ldr	r3, [sp, #16]
   32a0c:	cmp	r6, r0
   32a10:	mul	r3, r3, r2
   32a14:	add	r1, r1, r3, lsl #2
   32a18:	bgt	329b8 <GetDataSlab+0x10b8c>
   32a1c:	b	30874 <GetDataSlab+0xea48>
   32a20:	ldr	r1, [sp, #8]
   32a24:	cmp	r6, #0
   32a28:	ldr	r3, [sp, #16]
   32a2c:	mla	r3, r5, r3, r0
   32a30:	movgt	r0, #0
   32a34:	add	r1, r1, r3, lsl #2
   32a38:	ble	30874 <GetDataSlab+0xea48>
   32a3c:	cmp	fp, #0
   32a40:	movgt	r3, #0
   32a44:	ble	32a88 <GetDataSlab+0x10c5c>
   32a48:	ldr	r2, [sl]
   32a4c:	ldr	ip, [sp, #4]
   32a50:	mul	r2, r2, r3
   32a54:	add	r3, r3, #1
   32a58:	ldr	r2, [r1, r2, lsl #2]
   32a5c:	strb	r2, [ip], #1
   32a60:	ldr	r2, [sp, #228]	; 0xe4
   32a64:	str	ip, [sp, #4]
   32a68:	ldr	fp, [r2]
   32a6c:	cmp	fp, r3
   32a70:	bgt	32a48 <GetDataSlab+0x10c1c>
   32a74:	ldr	r3, [r8]
   32a78:	ldr	r2, [sl, #4]
   32a7c:	str	r3, [sp, #16]
   32a80:	ldr	r3, [sp, #228]	; 0xe4
   32a84:	ldr	r6, [r3, #4]
   32a88:	add	r0, r0, #1
   32a8c:	ldr	r3, [sp, #16]
   32a90:	cmp	r6, r0
   32a94:	mul	r3, r3, r2
   32a98:	add	r1, r1, r3, lsl #2
   32a9c:	bgt	32a3c <GetDataSlab+0x10c10>
   32aa0:	b	30874 <GetDataSlab+0xea48>
   32aa4:	ldr	r1, [sp, #8]
   32aa8:	cmp	r6, #0
   32aac:	ldr	r3, [sp, #16]
   32ab0:	mla	r3, r5, r3, r0
   32ab4:	movgt	r0, #0
   32ab8:	add	r1, r1, r3, lsl #1
   32abc:	ble	30874 <GetDataSlab+0xea48>
   32ac0:	cmp	fp, #0
   32ac4:	movgt	r3, #0
   32ac8:	ble	32b10 <GetDataSlab+0x10ce4>
   32acc:	ldr	r2, [sl]
   32ad0:	ldr	ip, [sp, #4]
   32ad4:	mul	r2, r2, r3
   32ad8:	add	r3, r3, #1
   32adc:	lsl	r2, r2, #1
   32ae0:	ldrh	r2, [r1, r2]
   32ae4:	strb	r2, [ip], #1
   32ae8:	ldr	r2, [sp, #228]	; 0xe4
   32aec:	str	ip, [sp, #4]
   32af0:	ldr	fp, [r2]
   32af4:	cmp	fp, r3
   32af8:	bgt	32acc <GetDataSlab+0x10ca0>
   32afc:	ldr	r3, [r8]
   32b00:	ldr	r2, [sl, #4]
   32b04:	str	r3, [sp, #16]
   32b08:	ldr	r3, [sp, #228]	; 0xe4
   32b0c:	ldr	r6, [r3, #4]
   32b10:	add	r0, r0, #1
   32b14:	ldr	r3, [sp, #16]
   32b18:	cmp	r6, r0
   32b1c:	mul	r3, r3, r2
   32b20:	add	r1, r1, r3, lsl #1
   32b24:	bgt	32ac0 <GetDataSlab+0x10c94>
   32b28:	b	30874 <GetDataSlab+0xea48>
   32b2c:	ldr	r1, [sp, #8]
   32b30:	cmp	r6, #0
   32b34:	ldr	r3, [sp, #16]
   32b38:	mla	r3, r5, r3, r0
   32b3c:	movgt	r0, #0
   32b40:	add	r1, r1, r3, lsl #1
   32b44:	ble	30874 <GetDataSlab+0xea48>
   32b48:	cmp	fp, #0
   32b4c:	movgt	r3, #0
   32b50:	ble	32b98 <GetDataSlab+0x10d6c>
   32b54:	ldr	r2, [sl]
   32b58:	ldr	ip, [sp, #4]
   32b5c:	mul	r2, r2, r3
   32b60:	add	r3, r3, #1
   32b64:	lsl	r2, r2, #1
   32b68:	ldrh	r2, [r1, r2]
   32b6c:	strb	r2, [ip], #1
   32b70:	ldr	r2, [sp, #228]	; 0xe4
   32b74:	str	ip, [sp, #4]
   32b78:	ldr	fp, [r2]
   32b7c:	cmp	fp, r3
   32b80:	bgt	32b54 <GetDataSlab+0x10d28>
   32b84:	ldr	r3, [r8]
   32b88:	ldr	r2, [sl, #4]
   32b8c:	str	r3, [sp, #16]
   32b90:	ldr	r3, [sp, #228]	; 0xe4
   32b94:	ldr	r6, [r3, #4]
   32b98:	add	r0, r0, #1
   32b9c:	ldr	r3, [sp, #16]
   32ba0:	cmp	r6, r0
   32ba4:	mul	r3, r3, r2
   32ba8:	add	r1, r1, r3, lsl #1
   32bac:	bgt	32b48 <GetDataSlab+0x10d1c>
   32bb0:	b	30874 <GetDataSlab+0xea48>
   32bb4:	ldr	r1, [sp, #8]
   32bb8:	cmp	r6, #0
   32bbc:	ldr	r3, [sp, #16]
   32bc0:	mla	r3, r5, r3, r0
   32bc4:	movgt	r0, #0
   32bc8:	add	r1, r1, r3
   32bcc:	ble	30874 <GetDataSlab+0xea48>
   32bd0:	cmp	fp, #0
   32bd4:	movgt	r3, #0
   32bd8:	ble	32c1c <GetDataSlab+0x10df0>
   32bdc:	ldr	r2, [sl]
   32be0:	ldr	ip, [sp, #4]
   32be4:	mul	r2, r2, r3
   32be8:	add	r3, r3, #1
   32bec:	ldrb	r2, [r1, r2]
   32bf0:	strb	r2, [ip], #1
   32bf4:	ldr	r2, [sp, #228]	; 0xe4
   32bf8:	str	ip, [sp, #4]
   32bfc:	ldr	fp, [r2]
   32c00:	cmp	fp, r3
   32c04:	bgt	32bdc <GetDataSlab+0x10db0>
   32c08:	ldr	r3, [r8]
   32c0c:	ldr	r2, [sl, #4]
   32c10:	str	r3, [sp, #16]
   32c14:	ldr	r3, [sp, #228]	; 0xe4
   32c18:	ldr	r6, [r3, #4]
   32c1c:	add	r0, r0, #1
   32c20:	ldr	r3, [sp, #16]
   32c24:	cmp	r6, r0
   32c28:	mla	r1, r3, r2, r1
   32c2c:	bgt	32bd0 <GetDataSlab+0x10da4>
   32c30:	b	30874 <GetDataSlab+0xea48>
   32c34:	ldr	r1, [sp, #8]
   32c38:	cmp	r6, #0
   32c3c:	ldr	r3, [sp, #16]
   32c40:	mla	r3, r5, r3, r0
   32c44:	movgt	r0, #0
   32c48:	add	r1, r1, r3
   32c4c:	ble	30874 <GetDataSlab+0xea48>
   32c50:	cmp	fp, #0
   32c54:	movgt	r3, #0
   32c58:	ble	32c9c <GetDataSlab+0x10e70>
   32c5c:	ldr	r2, [sl]
   32c60:	ldr	ip, [sp, #4]
   32c64:	mul	r2, r2, r3
   32c68:	add	r3, r3, #1
   32c6c:	ldrsb	r2, [r1, r2]
   32c70:	strb	r2, [ip], #1
   32c74:	ldr	r2, [sp, #228]	; 0xe4
   32c78:	str	ip, [sp, #4]
   32c7c:	ldr	fp, [r2]
   32c80:	cmp	fp, r3
   32c84:	bgt	32c5c <GetDataSlab+0x10e30>
   32c88:	ldr	r3, [r8]
   32c8c:	ldr	r2, [sl, #4]
   32c90:	str	r3, [sp, #16]
   32c94:	ldr	r3, [sp, #228]	; 0xe4
   32c98:	ldr	r6, [r3, #4]
   32c9c:	add	r0, r0, #1
   32ca0:	ldr	r3, [sp, #16]
   32ca4:	cmp	r6, r0
   32ca8:	mla	r1, r3, r2, r1
   32cac:	bgt	32c50 <GetDataSlab+0x10e24>
   32cb0:	b	30874 <GetDataSlab+0xea48>
   32cb4:	ldr	r3, [sp, #16]
   32cb8:	cmp	r6, #0
   32cbc:	mla	r3, r5, r3, r0
   32cc0:	ldr	r0, [sp, #8]
   32cc4:	add	r0, r0, r3, lsl #2
   32cc8:	ble	30874 <GetDataSlab+0xea48>
   32ccc:	ldr	r3, [sp, #16]
   32cd0:	lsl	r1, r1, #2
   32cd4:	mov	ip, #0
   32cd8:	lsl	r5, fp, #1
   32cdc:	mul	r3, r2, r3
   32ce0:	lsl	r4, r3, #2
   32ce4:	cmp	fp, #0
   32ce8:	ble	32d20 <GetDataSlab+0x10ef4>
   32cec:	ldr	r2, [sp, #4]
   32cf0:	mov	r3, r0
   32cf4:	add	r2, r2, r5
   32cf8:	vldr	s15, [r3]
   32cfc:	add	r3, r3, r1
   32d00:	ldr	r7, [sp, #4]
   32d04:	vcvt.u32.f32	s15, s15
   32d08:	vmov	lr, s15
   32d0c:	strh	lr, [r7], #2
   32d10:	cmp	r2, r7
   32d14:	mov	lr, r7
   32d18:	str	r7, [sp, #4]
   32d1c:	bne	32cf8 <GetDataSlab+0x10ecc>
   32d20:	add	ip, ip, #1
   32d24:	add	r0, r0, r4
   32d28:	cmp	r6, ip
   32d2c:	bne	32ce4 <GetDataSlab+0x10eb8>
   32d30:	b	30874 <GetDataSlab+0xea48>
   32d34:	ldr	r3, [sp, #16]
   32d38:	cmp	r6, #0
   32d3c:	mla	r3, r5, r3, r0
   32d40:	ldr	r0, [sp, #8]
   32d44:	add	ip, r0, r3, lsl #2
   32d48:	ble	30874 <GetDataSlab+0xea48>
   32d4c:	ldr	r3, [sp, #16]
   32d50:	lsl	r0, r1, #2
   32d54:	mov	lr, #0
   32d58:	lsl	r5, fp, #1
   32d5c:	mul	r3, r2, r3
   32d60:	lsl	r4, r3, #2
   32d64:	cmp	fp, #0
   32d68:	ble	32d90 <GetDataSlab+0x10f64>
   32d6c:	ldr	r2, [sp, #4]
   32d70:	mov	r3, ip
   32d74:	add	r1, r2, r5
   32d78:	ldr	r2, [r3], r0
   32d7c:	ldr	r7, [sp, #4]
   32d80:	strh	r2, [r7], #2
   32d84:	cmp	r1, r7
   32d88:	str	r7, [sp, #4]
   32d8c:	bne	32d78 <GetDataSlab+0x10f4c>
   32d90:	add	lr, lr, #1
   32d94:	add	ip, ip, r4
   32d98:	cmp	r6, lr
   32d9c:	bne	32d64 <GetDataSlab+0x10f38>
   32da0:	b	30874 <GetDataSlab+0xea48>
   32da4:	ldr	r3, [sp, #16]
   32da8:	cmp	r6, #0
   32dac:	mla	r3, r5, r3, r0
   32db0:	ldr	r0, [sp, #8]
   32db4:	add	ip, r0, r3, lsl #2
   32db8:	ble	30874 <GetDataSlab+0xea48>
   32dbc:	ldr	r3, [sp, #16]
   32dc0:	lsl	r0, r1, #2
   32dc4:	mov	lr, #0
   32dc8:	lsl	r5, fp, #1
   32dcc:	mul	r3, r2, r3
   32dd0:	lsl	r4, r3, #2
   32dd4:	cmp	fp, #0
   32dd8:	ble	32e00 <GetDataSlab+0x10fd4>
   32ddc:	ldr	r2, [sp, #4]
   32de0:	mov	r3, ip
   32de4:	add	r1, r2, r5
   32de8:	ldr	r2, [r3], r0
   32dec:	ldr	r7, [sp, #4]
   32df0:	strh	r2, [r7], #2
   32df4:	cmp	r7, r1
   32df8:	str	r7, [sp, #4]
   32dfc:	bne	32de8 <GetDataSlab+0x10fbc>
   32e00:	add	lr, lr, #1
   32e04:	add	ip, ip, r4
   32e08:	cmp	r6, lr
   32e0c:	bne	32dd4 <GetDataSlab+0x10fa8>
   32e10:	b	30874 <GetDataSlab+0xea48>
   32e14:	ldr	r3, [sp, #16]
   32e18:	cmp	r6, #0
   32e1c:	mla	r3, r5, r3, r0
   32e20:	ldr	r0, [sp, #8]
   32e24:	add	ip, r0, r3, lsl #1
   32e28:	ble	30874 <GetDataSlab+0xea48>
   32e2c:	ldr	r3, [sp, #16]
   32e30:	lsl	r0, r1, #1
   32e34:	mov	lr, #0
   32e38:	lsl	r5, fp, #1
   32e3c:	mul	r3, r2, r3
   32e40:	lsl	r4, r3, #1
   32e44:	cmp	fp, #0
   32e48:	ble	32e70 <GetDataSlab+0x11044>
   32e4c:	ldr	r2, [sp, #4]
   32e50:	mov	r3, ip
   32e54:	add	r1, r2, r5
   32e58:	ldrh	r2, [r3], r0
   32e5c:	ldr	r7, [sp, #4]
   32e60:	strh	r2, [r7], #2
   32e64:	cmp	r1, r7
   32e68:	str	r7, [sp, #4]
   32e6c:	bne	32e58 <GetDataSlab+0x1102c>
   32e70:	add	lr, lr, #1
   32e74:	add	ip, ip, r4
   32e78:	cmp	r6, lr
   32e7c:	bne	32e44 <GetDataSlab+0x11018>
   32e80:	b	30874 <GetDataSlab+0xea48>
   32e84:	ldr	r3, [sp, #16]
   32e88:	cmp	r6, #0
   32e8c:	mla	r3, r5, r3, r0
   32e90:	ldr	r0, [sp, #8]
   32e94:	add	ip, r0, r3, lsl #1
   32e98:	ble	30874 <GetDataSlab+0xea48>
   32e9c:	ldr	r3, [sp, #16]
   32ea0:	lsl	r0, r1, #1
   32ea4:	mov	lr, #0
   32ea8:	lsl	r5, fp, #1
   32eac:	mul	r3, r2, r3
   32eb0:	lsl	r4, r3, #1
   32eb4:	cmp	fp, #0
   32eb8:	ble	32ee0 <GetDataSlab+0x110b4>
   32ebc:	ldr	r2, [sp, #4]
   32ec0:	mov	r3, ip
   32ec4:	add	r1, r2, r5
   32ec8:	ldrh	r2, [r3], r0
   32ecc:	ldr	r7, [sp, #4]
   32ed0:	strh	r2, [r7], #2
   32ed4:	cmp	r7, r1
   32ed8:	str	r7, [sp, #4]
   32edc:	bne	32ec8 <GetDataSlab+0x1109c>
   32ee0:	add	lr, lr, #1
   32ee4:	add	ip, ip, r4
   32ee8:	cmp	r6, lr
   32eec:	bne	32eb4 <GetDataSlab+0x11088>
   32ef0:	b	30874 <GetDataSlab+0xea48>
   32ef4:	ldr	r3, [sp, #16]
   32ef8:	cmp	r6, #0
   32efc:	mla	r3, r5, r3, r0
   32f00:	ldr	r0, [sp, #8]
   32f04:	add	ip, r0, r3
   32f08:	ble	30874 <GetDataSlab+0xea48>
   32f0c:	ldr	r3, [sp, #16]
   32f10:	lsl	r5, fp, #1
   32f14:	mov	lr, #0
   32f18:	mul	r4, r2, r3
   32f1c:	cmp	fp, #0
   32f20:	ble	32f48 <GetDataSlab+0x1111c>
   32f24:	ldr	r2, [sp, #4]
   32f28:	mov	r3, ip
   32f2c:	add	r0, r2, r5
   32f30:	ldrb	r2, [r3], r1
   32f34:	ldr	r7, [sp, #4]
   32f38:	strh	r2, [r7], #2
   32f3c:	cmp	r0, r7
   32f40:	str	r7, [sp, #4]
   32f44:	bne	32f30 <GetDataSlab+0x11104>
   32f48:	add	lr, lr, #1
   32f4c:	add	ip, ip, r4
   32f50:	cmp	r6, lr
   32f54:	bne	32f1c <GetDataSlab+0x110f0>
   32f58:	b	30874 <GetDataSlab+0xea48>
   32f5c:	ldr	r3, [sp, #16]
   32f60:	cmp	r6, #0
   32f64:	mla	r3, r5, r3, r0
   32f68:	ldr	r0, [sp, #8]
   32f6c:	add	ip, r0, r3
   32f70:	ble	30874 <GetDataSlab+0xea48>
   32f74:	ldr	r3, [sp, #16]
   32f78:	lsl	r5, fp, #1
   32f7c:	mov	lr, #0
   32f80:	mul	r4, r2, r3
   32f84:	cmp	fp, #0
   32f88:	ble	32fb0 <GetDataSlab+0x11184>
   32f8c:	ldr	r2, [sp, #4]
   32f90:	mov	r3, ip
   32f94:	add	r0, r2, r5
   32f98:	ldrsb	r2, [r3], r1
   32f9c:	ldr	r7, [sp, #4]
   32fa0:	strh	r2, [r7], #2
   32fa4:	cmp	r0, r7
   32fa8:	str	r7, [sp, #4]
   32fac:	bne	32f98 <GetDataSlab+0x1116c>
   32fb0:	add	lr, lr, #1
   32fb4:	add	ip, ip, r4
   32fb8:	cmp	r6, lr
   32fbc:	bne	32f84 <GetDataSlab+0x11158>
   32fc0:	b	30874 <GetDataSlab+0xea48>
   32fc4:	cmp	lr, #12
   32fc8:	beq	3fe98 <GetDataSlab+0x1e06c>
   32fcc:	cmp	lr, #13
   32fd0:	bne	2200c <GetDataSlab+0x1e0>
   32fd4:	ldr	r3, [sp, #16]
   32fd8:	cmp	r6, #0
   32fdc:	mla	r3, r5, r3, r0
   32fe0:	ldr	r0, [sp, #8]
   32fe4:	add	ip, r0, r3, lsl #3
   32fe8:	ble	30874 <GetDataSlab+0xea48>
   32fec:	ldr	r3, [sp, #16]
   32ff0:	lsl	r0, r1, #3
   32ff4:	mov	lr, #0
   32ff8:	lsl	r5, fp, #1
   32ffc:	mul	r3, r2, r3
   33000:	lsl	r4, r3, #3
   33004:	cmp	fp, #0
   33008:	ble	33030 <GetDataSlab+0x11204>
   3300c:	ldr	r2, [sp, #4]
   33010:	mov	r3, ip
   33014:	add	r1, r2, r5
   33018:	ldr	r2, [r3], r0
   3301c:	ldr	r7, [sp, #4]
   33020:	strh	r2, [r7], #2
   33024:	cmp	r7, r1
   33028:	str	r7, [sp, #4]
   3302c:	bne	33018 <GetDataSlab+0x111ec>
   33030:	add	lr, lr, #1
   33034:	add	ip, ip, r4
   33038:	cmp	r6, lr
   3303c:	bne	33004 <GetDataSlab+0x111d8>
   33040:	b	30874 <GetDataSlab+0xea48>
   33044:	cmp	lr, #12
   33048:	beq	3fe14 <GetDataSlab+0x1dfe8>
   3304c:	cmp	lr, #13
   33050:	bne	2200c <GetDataSlab+0x1e0>
   33054:	ldr	r1, [sp, #8]
   33058:	cmp	r6, #0
   3305c:	ldr	r3, [sp, #16]
   33060:	mla	r3, r5, r3, r0
   33064:	movgt	r0, #0
   33068:	add	r1, r1, r3, lsl #3
   3306c:	ble	30874 <GetDataSlab+0xea48>
   33070:	cmp	fp, #0
   33074:	movgt	r3, #0
   33078:	ble	330bc <GetDataSlab+0x11290>
   3307c:	ldr	r2, [sl]
   33080:	ldr	ip, [sp, #4]
   33084:	mul	r2, r2, r3
   33088:	add	r3, r3, #1
   3308c:	ldr	r2, [r1, r2, lsl #3]
   33090:	strb	r2, [ip], #1
   33094:	ldr	r2, [sp, #228]	; 0xe4
   33098:	str	ip, [sp, #4]
   3309c:	ldr	fp, [r2]
   330a0:	cmp	fp, r3
   330a4:	bgt	3307c <GetDataSlab+0x11250>
   330a8:	ldr	r3, [r8]
   330ac:	ldr	r2, [sl, #4]
   330b0:	str	r3, [sp, #16]
   330b4:	ldr	r3, [sp, #228]	; 0xe4
   330b8:	ldr	r6, [r3, #4]
   330bc:	add	r0, r0, #1
   330c0:	ldr	r3, [sp, #16]
   330c4:	cmp	r6, r0
   330c8:	mul	r3, r3, r2
   330cc:	add	r1, r1, r3, lsl #3
   330d0:	bgt	33070 <GetDataSlab+0x11244>
   330d4:	b	30874 <GetDataSlab+0xea48>
   330d8:	cmp	lr, #12
   330dc:	beq	3fda4 <GetDataSlab+0x1df78>
   330e0:	cmp	lr, #13
   330e4:	bne	2200c <GetDataSlab+0x1e0>
   330e8:	ldr	r3, [sp, #16]
   330ec:	cmp	r6, #0
   330f0:	mla	r3, r5, r3, r0
   330f4:	ldr	r0, [sp, #8]
   330f8:	add	ip, r0, r3, lsl #3
   330fc:	ble	30874 <GetDataSlab+0xea48>
   33100:	ldr	r3, [sp, #16]
   33104:	lsl	r0, r1, #3
   33108:	mov	lr, #0
   3310c:	lsl	r5, fp, #1
   33110:	mul	r3, r2, r3
   33114:	lsl	r4, r3, #3
   33118:	cmp	fp, #0
   3311c:	ble	33144 <GetDataSlab+0x11318>
   33120:	ldr	r2, [sp, #4]
   33124:	mov	r3, ip
   33128:	add	r1, r2, r5
   3312c:	ldr	r2, [r3], r0
   33130:	ldr	r7, [sp, #4]
   33134:	strh	r2, [r7], #2
   33138:	cmp	r7, r1
   3313c:	str	r7, [sp, #4]
   33140:	bne	3312c <GetDataSlab+0x11300>
   33144:	add	lr, lr, #1
   33148:	add	ip, ip, r4
   3314c:	cmp	r6, lr
   33150:	bne	33118 <GetDataSlab+0x112ec>
   33154:	b	30874 <GetDataSlab+0xea48>
   33158:	cmp	lr, #12
   3315c:	beq	3fd14 <GetDataSlab+0x1dee8>
   33160:	cmp	lr, #13
   33164:	bne	2200c <GetDataSlab+0x1e0>
   33168:	ldr	r3, [sp, #16]
   3316c:	cmp	r6, #0
   33170:	mla	r3, r5, r3, r0
   33174:	ldr	r0, [sp, #8]
   33178:	add	r9, r0, r3, lsl #3
   3317c:	ble	30874 <GetDataSlab+0xea48>
   33180:	ldr	r3, [sp, #16]
   33184:	lsl	r8, r1, #3
   33188:	mov	sl, #0
   3318c:	mul	r3, r2, r3
   33190:	lsl	r2, fp, #3
   33194:	lsl	r3, r3, #3
   33198:	str	r3, [sp, #8]
   3319c:	str	r2, [sp, #12]
   331a0:	cmp	fp, #0
   331a4:	ble	331e0 <GetDataSlab+0x113b4>
   331a8:	ldr	r7, [sp, #4]
   331ac:	mov	r5, r9
   331b0:	mov	r4, #0
   331b4:	add	r4, r4, #1
   331b8:	ldrd	r0, [r5]
   331bc:	add	r5, r5, r8
   331c0:	bl	4e0d0 <__aeabi_ul2d>
   331c4:	cmp	fp, r4
   331c8:	strd	r0, [r7], #8
   331cc:	bne	331b4 <GetDataSlab+0x11388>
   331d0:	ldr	r3, [sp, #4]
   331d4:	ldr	r2, [sp, #12]
   331d8:	add	r3, r3, r2
   331dc:	str	r3, [sp, #4]
   331e0:	ldr	r3, [sp, #8]
   331e4:	add	sl, sl, #1
   331e8:	cmp	r6, sl
   331ec:	add	r9, r9, r3
   331f0:	bne	331a0 <GetDataSlab+0x11374>
   331f4:	b	30874 <GetDataSlab+0xea48>
   331f8:	cmp	lr, #12
   331fc:	beq	4008c <GetDataSlab+0x1e260>
   33200:	cmp	lr, #13
   33204:	bne	2200c <GetDataSlab+0x1e0>
   33208:	ldr	r3, [sp, #16]
   3320c:	cmp	r6, #0
   33210:	mla	r3, r5, r3, r0
   33214:	ldr	r0, [sp, #8]
   33218:	add	r4, r0, r3, lsl #3
   3321c:	ble	30874 <GetDataSlab+0xea48>
   33220:	ldr	r3, [sp, #16]
   33224:	lsl	lr, r1, #3
   33228:	mov	r5, #0
   3322c:	lsl	r8, fp, #3
   33230:	mul	r3, r2, r3
   33234:	lsl	r7, r3, #3
   33238:	cmp	fp, #0
   3323c:	ble	33270 <GetDataSlab+0x11444>
   33240:	ldr	ip, [sp, #4]
   33244:	mov	r2, r4
   33248:	mov	r3, #0
   3324c:	add	r3, r3, #1
   33250:	ldrd	r0, [r2]
   33254:	cmp	fp, r3
   33258:	add	r2, r2, lr
   3325c:	strd	r0, [ip], #8
   33260:	bne	3324c <GetDataSlab+0x11420>
   33264:	ldr	r3, [sp, #4]
   33268:	add	r3, r3, r8
   3326c:	str	r3, [sp, #4]
   33270:	add	r5, r5, #1
   33274:	add	r4, r4, r7
   33278:	cmp	r6, r5
   3327c:	bne	33238 <GetDataSlab+0x1140c>
   33280:	b	30874 <GetDataSlab+0xea48>
   33284:	cmp	lr, #12
   33288:	beq	40008 <GetDataSlab+0x1e1dc>
   3328c:	cmp	lr, #13
   33290:	bne	2200c <GetDataSlab+0x1e0>
   33294:	ldr	r1, [sp, #8]
   33298:	cmp	r6, #0
   3329c:	ldr	r3, [sp, #16]
   332a0:	mla	r3, r5, r3, r0
   332a4:	movgt	r0, #0
   332a8:	add	r1, r1, r3, lsl #3
   332ac:	ble	30874 <GetDataSlab+0xea48>
   332b0:	cmp	fp, #0
   332b4:	movgt	r3, #0
   332b8:	ble	332fc <GetDataSlab+0x114d0>
   332bc:	ldr	r2, [sl]
   332c0:	ldr	ip, [sp, #4]
   332c4:	mul	r2, r2, r3
   332c8:	add	r3, r3, #1
   332cc:	ldr	r2, [r1, r2, lsl #3]
   332d0:	str	r2, [ip], #4
   332d4:	ldr	r2, [sp, #228]	; 0xe4
   332d8:	str	ip, [sp, #4]
   332dc:	ldr	fp, [r2]
   332e0:	cmp	fp, r3
   332e4:	bgt	332bc <GetDataSlab+0x11490>
   332e8:	ldr	r3, [r8]
   332ec:	ldr	r2, [sl, #4]
   332f0:	str	r3, [sp, #16]
   332f4:	ldr	r3, [sp, #228]	; 0xe4
   332f8:	ldr	r6, [r3, #4]
   332fc:	add	r0, r0, #1
   33300:	ldr	r3, [sp, #16]
   33304:	cmp	r6, r0
   33308:	mul	r3, r3, r2
   3330c:	add	r1, r1, r3, lsl #3
   33310:	bgt	332b0 <GetDataSlab+0x11484>
   33314:	b	30874 <GetDataSlab+0xea48>
   33318:	cmp	lr, #12
   3331c:	beq	3ff8c <GetDataSlab+0x1e160>
   33320:	cmp	lr, #13
   33324:	bne	2200c <GetDataSlab+0x1e0>
   33328:	ldr	r3, [sp, #16]
   3332c:	cmp	r6, #0
   33330:	mla	r3, r5, r3, r0
   33334:	ldr	r0, [sp, #8]
   33338:	add	r4, r0, r3, lsl #3
   3333c:	ble	30874 <GetDataSlab+0xea48>
   33340:	ldr	r3, [sp, #16]
   33344:	lsl	lr, r1, #3
   33348:	mov	r5, #0
   3334c:	lsl	r8, fp, #3
   33350:	mul	r3, r2, r3
   33354:	lsl	r7, r3, #3
   33358:	cmp	fp, #0
   3335c:	ble	33390 <GetDataSlab+0x11564>
   33360:	ldr	ip, [sp, #4]
   33364:	mov	r2, r4
   33368:	mov	r3, #0
   3336c:	add	r3, r3, #1
   33370:	ldrd	r0, [r2]
   33374:	cmp	fp, r3
   33378:	add	r2, r2, lr
   3337c:	strd	r0, [ip], #8
   33380:	bne	3336c <GetDataSlab+0x11540>
   33384:	ldr	r3, [sp, #4]
   33388:	add	r3, r3, r8
   3338c:	str	r3, [sp, #4]
   33390:	add	r5, r5, #1
   33394:	add	r4, r4, r7
   33398:	cmp	r6, r5
   3339c:	bne	33358 <GetDataSlab+0x1152c>
   333a0:	b	30874 <GetDataSlab+0xea48>
   333a4:	cmp	lr, #12
   333a8:	beq	3ff08 <GetDataSlab+0x1e0dc>
   333ac:	cmp	lr, #13
   333b0:	bne	2200c <GetDataSlab+0x1e0>
   333b4:	ldr	r1, [sp, #8]
   333b8:	cmp	r6, #0
   333bc:	ldr	r3, [sp, #16]
   333c0:	mla	r3, r5, r3, r0
   333c4:	movgt	r0, #0
   333c8:	add	r1, r1, r3, lsl #3
   333cc:	ble	30874 <GetDataSlab+0xea48>
   333d0:	cmp	fp, #0
   333d4:	movgt	r3, #0
   333d8:	ble	3341c <GetDataSlab+0x115f0>
   333dc:	ldr	r2, [sl]
   333e0:	ldr	ip, [sp, #4]
   333e4:	mul	r2, r2, r3
   333e8:	add	r3, r3, #1
   333ec:	ldr	r2, [r1, r2, lsl #3]
   333f0:	str	r2, [ip], #4
   333f4:	ldr	r2, [sp, #228]	; 0xe4
   333f8:	str	ip, [sp, #4]
   333fc:	ldr	fp, [r2]
   33400:	cmp	fp, r3
   33404:	bgt	333dc <GetDataSlab+0x115b0>
   33408:	ldr	r3, [r8]
   3340c:	ldr	r2, [sl, #4]
   33410:	str	r3, [sp, #16]
   33414:	ldr	r3, [sp, #228]	; 0xe4
   33418:	ldr	r6, [r3, #4]
   3341c:	add	r0, r0, #1
   33420:	ldr	r3, [sp, #16]
   33424:	cmp	r6, r0
   33428:	mul	r3, r3, r2
   3342c:	add	r1, r1, r3, lsl #3
   33430:	bgt	333d0 <GetDataSlab+0x115a4>
   33434:	b	30874 <GetDataSlab+0xea48>
   33438:	cmp	lr, #12
   3343c:	beq	40108 <GetDataSlab+0x1e2dc>
   33440:	cmp	lr, #13
   33444:	bne	2200c <GetDataSlab+0x1e0>
   33448:	ldr	r1, [sp, #8]
   3344c:	cmp	r6, #0
   33450:	ldr	r3, [sp, #16]
   33454:	mla	r3, r5, r3, r0
   33458:	movgt	r0, #0
   3345c:	add	r1, r1, r3, lsl #3
   33460:	ble	30874 <GetDataSlab+0xea48>
   33464:	cmp	fp, #0
   33468:	movgt	r3, #0
   3346c:	ble	334b0 <GetDataSlab+0x11684>
   33470:	ldr	r2, [sl]
   33474:	ldr	ip, [sp, #4]
   33478:	mul	r2, r2, r3
   3347c:	add	r3, r3, #1
   33480:	ldr	r2, [r1, r2, lsl #3]
   33484:	strb	r2, [ip], #1
   33488:	ldr	r2, [sp, #228]	; 0xe4
   3348c:	str	ip, [sp, #4]
   33490:	ldr	fp, [r2]
   33494:	cmp	fp, r3
   33498:	bgt	33470 <GetDataSlab+0x11644>
   3349c:	ldr	r3, [r8]
   334a0:	ldr	r2, [sl, #4]
   334a4:	str	r3, [sp, #16]
   334a8:	ldr	r3, [sp, #228]	; 0xe4
   334ac:	ldr	r6, [r3, #4]
   334b0:	add	r0, r0, #1
   334b4:	ldr	r3, [sp, #16]
   334b8:	cmp	r6, r0
   334bc:	mul	r3, r3, r2
   334c0:	add	r1, r1, r3, lsl #3
   334c4:	bgt	33464 <GetDataSlab+0x11638>
   334c8:	b	30874 <GetDataSlab+0xea48>
   334cc:	cmp	lr, #12
   334d0:	beq	4018c <GetDataSlab+0x1e360>
   334d4:	cmp	lr, #13
   334d8:	bne	2200c <GetDataSlab+0x1e0>
   334dc:	ldr	r3, [sp, #16]
   334e0:	cmp	r6, #0
   334e4:	mla	r3, r5, r3, r0
   334e8:	ldr	r0, [sp, #8]
   334ec:	add	r9, r0, r3, lsl #3
   334f0:	ble	30874 <GetDataSlab+0xea48>
   334f4:	ldr	r3, [sp, #16]
   334f8:	lsl	r8, r1, #3
   334fc:	mov	sl, #0
   33500:	mul	r3, r2, r3
   33504:	lsl	r2, fp, #2
   33508:	lsl	r3, r3, #3
   3350c:	str	r3, [sp, #8]
   33510:	str	r2, [sp, #12]
   33514:	cmp	fp, #0
   33518:	ble	33554 <GetDataSlab+0x11728>
   3351c:	ldr	r7, [sp, #4]
   33520:	mov	r5, r9
   33524:	mov	r4, #0
   33528:	add	r4, r4, #1
   3352c:	ldrd	r0, [r5]
   33530:	add	r5, r5, r8
   33534:	bl	4e308 <__aeabi_ul2f>
   33538:	cmp	fp, r4
   3353c:	str	r0, [r7], #4
   33540:	bne	33528 <GetDataSlab+0x116fc>
   33544:	ldr	r3, [sp, #4]
   33548:	ldr	r2, [sp, #12]
   3354c:	add	r3, r3, r2
   33550:	str	r3, [sp, #4]
   33554:	ldr	r3, [sp, #8]
   33558:	add	sl, sl, #1
   3355c:	cmp	r6, sl
   33560:	add	r9, r9, r3
   33564:	bne	33514 <GetDataSlab+0x116e8>
   33568:	b	30874 <GetDataSlab+0xea48>
   3356c:	mov	r0, #1
   33570:	add	r3, sp, #176	; 0xb0
   33574:	add	r3, r3, r0, lsl #2
   33578:	ldr	r3, [r3, #-120]	; 0xffffff88
   3357c:	add	lr, lr, r3
   33580:	add	r5, r5, r3
   33584:	ldrd	r2, [sp, #20]
   33588:	add	r3, r3, fp
   3358c:	cmp	r3, r2
   33590:	str	r3, [sp, #24]
   33594:	blt	227b0 <GetDataSlab+0x984>
   33598:	b	30874 <GetDataSlab+0xea48>
   3359c:	mov	r0, #1
   335a0:	add	r3, sp, #176	; 0xb0
   335a4:	add	r3, r3, r0, lsl #2
   335a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   335ac:	add	r5, r5, r3, lsl #2
   335b0:	add	lr, lr, r3
   335b4:	ldrd	r2, [sp, #20]
   335b8:	add	r3, r3, fp
   335bc:	cmp	r3, r2
   335c0:	str	r3, [sp, #24]
   335c4:	blt	22554 <GetDataSlab+0x728>
   335c8:	b	30874 <GetDataSlab+0xea48>
   335cc:	mov	r0, #1
   335d0:	add	r3, sp, #176	; 0xb0
   335d4:	add	r3, r3, r0, lsl #2
   335d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   335dc:	add	r6, r6, r3, lsl #2
   335e0:	add	r4, r4, r3
   335e4:	ldr	r3, [sp, #20]
   335e8:	add	fp, fp, r3
   335ec:	ldr	r3, [sp, #32]
   335f0:	add	sl, sl, r3
   335f4:	ldr	r3, [sp, #16]
   335f8:	cmp	fp, r3
   335fc:	blt	24ee0 <GetDataSlab+0x30b4>
   33600:	b	30874 <GetDataSlab+0xea48>
   33604:	mov	r0, #1
   33608:	add	r3, sp, #176	; 0xb0
   3360c:	add	r3, r3, r0, lsl #2
   33610:	ldr	r3, [r3, #-120]	; 0xffffff88
   33614:	add	r8, r8, r3, lsl #2
   33618:	add	r7, r7, r3
   3361c:	ldr	r3, [sp, #8]
   33620:	ldr	r2, [sp, #20]
   33624:	add	r3, r3, r2
   33628:	ldr	r2, [sp, #16]
   3362c:	str	r3, [sp, #8]
   33630:	ldr	r3, [sp, #36]	; 0x24
   33634:	add	r6, r6, r3
   33638:	ldr	r3, [sp, #8]
   3363c:	cmp	r3, r2
   33640:	blt	24c2c <GetDataSlab+0x2e00>
   33644:	b	30874 <GetDataSlab+0xea48>
   33648:	mov	r0, #1
   3364c:	add	r3, sp, #176	; 0xb0
   33650:	add	r3, r3, r0, lsl #2
   33654:	ldr	r3, [r3, #-120]	; 0xffffff88
   33658:	add	r8, r8, r3, lsl #3
   3365c:	add	r7, r7, r3
   33660:	ldr	r3, [sp, #8]
   33664:	ldr	r2, [sp, #20]
   33668:	add	r3, r3, r2
   3366c:	ldr	r2, [sp, #16]
   33670:	str	r3, [sp, #8]
   33674:	ldr	r3, [sp, #36]	; 0x24
   33678:	add	r6, r6, r3
   3367c:	ldr	r3, [sp, #8]
   33680:	cmp	r3, r2
   33684:	blt	24974 <GetDataSlab+0x2b48>
   33688:	b	30874 <GetDataSlab+0xea48>
   3368c:	mov	r0, #1
   33690:	add	r3, sp, #176	; 0xb0
   33694:	add	r3, r3, r0, lsl #2
   33698:	ldr	r3, [r3, #-120]	; 0xffffff88
   3369c:	add	lr, lr, r3
   336a0:	add	r5, r5, r3
   336a4:	ldrd	r2, [sp, #20]
   336a8:	add	r3, r3, fp
   336ac:	cmp	r3, r2
   336b0:	str	r3, [sp, #24]
   336b4:	blt	246b8 <GetDataSlab+0x288c>
   336b8:	b	30874 <GetDataSlab+0xea48>
   336bc:	mov	r0, #1
   336c0:	add	r3, sp, #176	; 0xb0
   336c4:	add	r3, r3, r0, lsl #2
   336c8:	ldr	r3, [r3, #-120]	; 0xffffff88
   336cc:	add	lr, lr, r3
   336d0:	add	r5, r5, r3
   336d4:	ldrd	r2, [sp, #20]
   336d8:	add	r3, r3, fp
   336dc:	cmp	r3, r2
   336e0:	str	r3, [sp, #24]
   336e4:	blt	24460 <GetDataSlab+0x2634>
   336e8:	b	30874 <GetDataSlab+0xea48>
   336ec:	mov	r0, #1
   336f0:	add	r3, sp, #176	; 0xb0
   336f4:	add	r3, r3, r0, lsl #2
   336f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   336fc:	add	r5, r5, r3, lsl #1
   33700:	add	r4, r4, r3
   33704:	ldrd	r2, [sp, #20]
   33708:	add	r3, r3, fp
   3370c:	cmp	r3, r2
   33710:	str	r3, [sp, #24]
   33714:	blt	24204 <GetDataSlab+0x23d8>
   33718:	b	30874 <GetDataSlab+0xea48>
   3371c:	mov	r0, #1
   33720:	add	r3, sp, #176	; 0xb0
   33724:	add	r3, r3, r0, lsl #2
   33728:	ldr	r3, [r3, #-120]	; 0xffffff88
   3372c:	add	r5, r5, r3, lsl #1
   33730:	add	r4, r4, r3
   33734:	ldrd	r2, [sp, #20]
   33738:	add	r3, r3, fp
   3373c:	cmp	r3, r2
   33740:	str	r3, [sp, #24]
   33744:	blt	23fa8 <GetDataSlab+0x217c>
   33748:	b	30874 <GetDataSlab+0xea48>
   3374c:	mov	r0, #1
   33750:	add	r3, sp, #176	; 0xb0
   33754:	add	r3, r3, r0, lsl #2
   33758:	ldr	r3, [r3, #-120]	; 0xffffff88
   3375c:	add	r5, r5, r3, lsl #2
   33760:	add	r4, r4, r3
   33764:	ldrd	r2, [sp, #20]
   33768:	add	r3, r3, fp
   3376c:	cmp	r3, r2
   33770:	str	r3, [sp, #24]
   33774:	blt	23d4c <GetDataSlab+0x1f20>
   33778:	b	30874 <GetDataSlab+0xea48>
   3377c:	mov	r0, #1
   33780:	add	r3, sp, #176	; 0xb0
   33784:	add	r3, r3, r0, lsl #2
   33788:	ldr	r3, [r3, #-120]	; 0xffffff88
   3378c:	add	r5, r5, r3, lsl #2
   33790:	add	r4, r4, r3
   33794:	ldrd	r2, [sp, #20]
   33798:	add	r3, r3, fp
   3379c:	cmp	r3, r2
   337a0:	str	r3, [sp, #24]
   337a4:	blt	23af0 <GetDataSlab+0x1cc4>
   337a8:	b	30874 <GetDataSlab+0xea48>
   337ac:	mov	r0, #1
   337b0:	add	r3, sp, #176	; 0xb0
   337b4:	add	r3, r3, r0, lsl #2
   337b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   337bc:	add	r5, r5, r3, lsl #2
   337c0:	add	r4, r4, r3
   337c4:	ldrd	r2, [sp, #20]
   337c8:	add	r3, r3, fp
   337cc:	cmp	r3, r2
   337d0:	str	r3, [sp, #24]
   337d4:	blt	2388c <GetDataSlab+0x1a60>
   337d8:	b	30874 <GetDataSlab+0xea48>
   337dc:	mov	r0, #1
   337e0:	add	r3, sp, #176	; 0xb0
   337e4:	add	r3, r3, r0, lsl #2
   337e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   337ec:	add	r5, r5, r3, lsl #3
   337f0:	add	r4, r4, r3
   337f4:	ldrd	r2, [sp, #20]
   337f8:	add	r3, r3, fp
   337fc:	cmp	r3, r2
   33800:	str	r3, [sp, #24]
   33804:	blt	23628 <GetDataSlab+0x17fc>
   33808:	b	30874 <GetDataSlab+0xea48>
   3380c:	mov	r0, #1
   33810:	add	r3, sp, #176	; 0xb0
   33814:	add	r3, r3, r0, lsl #2
   33818:	ldr	r3, [r3, #-120]	; 0xffffff88
   3381c:	add	r5, r5, r3, lsl #2
   33820:	add	lr, lr, r3
   33824:	ldrd	r2, [sp, #20]
   33828:	add	r3, r3, fp
   3382c:	cmp	r3, r2
   33830:	str	r3, [sp, #24]
   33834:	blt	233cc <GetDataSlab+0x15a0>
   33838:	b	30874 <GetDataSlab+0xea48>
   3383c:	mov	r0, #1
   33840:	add	r3, sp, #176	; 0xb0
   33844:	add	r3, r3, r0, lsl #2
   33848:	ldr	r3, [r3, #-120]	; 0xffffff88
   3384c:	add	r5, r5, r3, lsl #1
   33850:	add	lr, lr, r3
   33854:	ldrd	r2, [sp, #20]
   33858:	add	r3, r3, fp
   3385c:	cmp	r3, r2
   33860:	str	r3, [sp, #24]
   33864:	blt	23170 <GetDataSlab+0x1344>
   33868:	b	30874 <GetDataSlab+0xea48>
   3386c:	mov	r0, #1
   33870:	add	r3, sp, #176	; 0xb0
   33874:	add	r3, r3, r0, lsl #2
   33878:	ldr	r3, [r3, #-120]	; 0xffffff88
   3387c:	add	r5, r5, r3, lsl #1
   33880:	add	lr, lr, r3
   33884:	ldrd	r2, [sp, #20]
   33888:	add	r3, r3, fp
   3388c:	cmp	r3, r2
   33890:	str	r3, [sp, #24]
   33894:	blt	22f14 <GetDataSlab+0x10e8>
   33898:	b	30874 <GetDataSlab+0xea48>
   3389c:	mov	r0, #1
   338a0:	add	r3, sp, #176	; 0xb0
   338a4:	add	r3, r3, r0, lsl #2
   338a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   338ac:	add	r6, r6, r3, lsl #3
   338b0:	add	r4, r4, r3
   338b4:	ldr	r3, [sp, #20]
   338b8:	add	fp, fp, r3
   338bc:	ldr	r3, [sp, #32]
   338c0:	add	r7, r7, r3
   338c4:	ldr	r3, [sp, #16]
   338c8:	cmp	fp, r3
   338cc:	blt	22cc0 <GetDataSlab+0xe94>
   338d0:	b	30874 <GetDataSlab+0xea48>
   338d4:	mov	r0, #1
   338d8:	add	r3, sp, #176	; 0xb0
   338dc:	add	r3, r3, r0, lsl #2
   338e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   338e4:	add	lr, lr, r3
   338e8:	add	r5, r5, r3
   338ec:	ldrd	r2, [sp, #20]
   338f0:	add	r3, r3, fp
   338f4:	cmp	r3, r2
   338f8:	str	r3, [sp, #24]
   338fc:	blt	22a08 <GetDataSlab+0xbdc>
   33900:	b	30874 <GetDataSlab+0xea48>
   33904:	mov	r0, #1
   33908:	add	r3, sp, #176	; 0xb0
   3390c:	add	r3, r3, r0, lsl #2
   33910:	ldr	r3, [r3, #-120]	; 0xffffff88
   33914:	add	r5, r5, r3, lsl #2
   33918:	add	lr, lr, r3
   3391c:	ldrd	r2, [sp, #20]
   33920:	add	r3, r3, fp
   33924:	cmp	r3, r2
   33928:	str	r3, [sp, #24]
   3392c:	blt	2ec84 <GetDataSlab+0xce58>
   33930:	b	30874 <GetDataSlab+0xea48>
   33934:	mov	r0, #1
   33938:	add	r3, sp, #176	; 0xb0
   3393c:	add	r3, r3, r0, lsl #2
   33940:	ldr	r3, [r3, #-120]	; 0xffffff88
   33944:	add	r5, r5, r3, lsl #3
   33948:	add	lr, lr, r3
   3394c:	ldrd	r2, [sp, #20]
   33950:	add	r3, r3, fp
   33954:	cmp	r3, r2
   33958:	str	r3, [sp, #24]
   3395c:	blt	2ea24 <GetDataSlab+0xcbf8>
   33960:	b	30874 <GetDataSlab+0xea48>
   33964:	mov	r0, #1
   33968:	add	r3, sp, #176	; 0xb0
   3396c:	add	r3, r3, r0, lsl #2
   33970:	ldr	r3, [r3, #-120]	; 0xffffff88
   33974:	add	r4, r4, r3
   33978:	add	r5, r5, r3
   3397c:	ldr	r3, [sp, #20]
   33980:	add	fp, fp, r3
   33984:	ldr	r3, [sp, #28]
   33988:	add	r8, r8, r3
   3398c:	ldr	r3, [sp, #16]
   33990:	cmp	fp, r3
   33994:	blt	2e7f0 <GetDataSlab+0xc9c4>
   33998:	b	30874 <GetDataSlab+0xea48>
   3399c:	mov	r0, #1
   339a0:	add	r3, sp, #176	; 0xb0
   339a4:	add	r3, r3, r0, lsl #2
   339a8:	ldr	r3, [r3, #-120]	; 0xffffff88
   339ac:	add	r4, r4, r3
   339b0:	add	r5, r5, r3
   339b4:	ldr	r3, [sp, #20]
   339b8:	add	fp, fp, r3
   339bc:	ldr	r3, [sp, #28]
   339c0:	add	r8, r8, r3
   339c4:	ldr	r3, [sp, #16]
   339c8:	cmp	fp, r3
   339cc:	blt	2e580 <GetDataSlab+0xc754>
   339d0:	b	30874 <GetDataSlab+0xea48>
   339d4:	mov	r0, #1
   339d8:	add	r3, sp, #176	; 0xb0
   339dc:	add	r3, r3, r0, lsl #2
   339e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   339e4:	add	r6, r6, r3, lsl #1
   339e8:	add	r4, r4, r3
   339ec:	ldr	r3, [sp, #20]
   339f0:	add	fp, fp, r3
   339f4:	ldr	r3, [sp, #32]
   339f8:	add	r8, r8, r3
   339fc:	ldr	r3, [sp, #16]
   33a00:	cmp	fp, r3
   33a04:	blt	2e2fc <GetDataSlab+0xc4d0>
   33a08:	b	30874 <GetDataSlab+0xea48>
   33a0c:	mov	r0, #1
   33a10:	add	r3, sp, #176	; 0xb0
   33a14:	add	r3, r3, r0, lsl #2
   33a18:	ldr	r3, [r3, #-120]	; 0xffffff88
   33a1c:	add	r6, r6, r3, lsl #1
   33a20:	add	r4, r4, r3
   33a24:	ldr	r3, [sp, #20]
   33a28:	add	fp, fp, r3
   33a2c:	ldr	r3, [sp, #32]
   33a30:	add	r8, r8, r3
   33a34:	ldr	r3, [sp, #16]
   33a38:	cmp	fp, r3
   33a3c:	blt	2e054 <GetDataSlab+0xc228>
   33a40:	b	30874 <GetDataSlab+0xea48>
   33a44:	mov	r0, #1
   33a48:	add	r3, sp, #176	; 0xb0
   33a4c:	add	r3, r3, r0, lsl #2
   33a50:	ldr	r3, [r3, #-120]	; 0xffffff88
   33a54:	add	r6, r6, r3, lsl #2
   33a58:	add	r4, r4, r3
   33a5c:	ldr	r3, [sp, #20]
   33a60:	add	fp, fp, r3
   33a64:	ldr	r3, [sp, #32]
   33a68:	add	r8, r8, r3
   33a6c:	ldr	r3, [sp, #16]
   33a70:	cmp	fp, r3
   33a74:	blt	2ddac <GetDataSlab+0xbf80>
   33a78:	b	30874 <GetDataSlab+0xea48>
   33a7c:	mov	r0, #1
   33a80:	add	r3, sp, #176	; 0xb0
   33a84:	add	r3, r3, r0, lsl #2
   33a88:	ldr	r3, [r3, #-120]	; 0xffffff88
   33a8c:	add	r6, r6, r3, lsl #2
   33a90:	add	r4, r4, r3
   33a94:	ldr	r3, [sp, #20]
   33a98:	add	fp, fp, r3
   33a9c:	ldr	r3, [sp, #32]
   33aa0:	add	r8, r8, r3
   33aa4:	ldr	r3, [sp, #16]
   33aa8:	cmp	fp, r3
   33aac:	blt	2db04 <GetDataSlab+0xbcd8>
   33ab0:	b	30874 <GetDataSlab+0xea48>
   33ab4:	mov	r0, #1
   33ab8:	add	r3, sp, #176	; 0xb0
   33abc:	add	r3, r3, r0, lsl #2
   33ac0:	ldr	r3, [r3, #-120]	; 0xffffff88
   33ac4:	add	r6, r6, r3, lsl #2
   33ac8:	add	r4, r4, r3
   33acc:	ldr	r3, [sp, #20]
   33ad0:	add	fp, fp, r3
   33ad4:	ldr	r3, [sp, #32]
   33ad8:	add	r7, r7, r3
   33adc:	ldr	r3, [sp, #16]
   33ae0:	cmp	fp, r3
   33ae4:	blt	2d850 <GetDataSlab+0xba24>
   33ae8:	b	30874 <GetDataSlab+0xea48>
   33aec:	mov	r0, #1
   33af0:	add	r3, sp, #176	; 0xb0
   33af4:	add	r3, r3, r0, lsl #2
   33af8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33afc:	add	r6, r6, r3, lsl #3
   33b00:	add	r4, r4, r3
   33b04:	ldr	r3, [sp, #20]
   33b08:	add	fp, fp, r3
   33b0c:	ldr	r3, [sp, #32]
   33b10:	add	r7, r7, r3
   33b14:	ldr	r3, [sp, #16]
   33b18:	cmp	fp, r3
   33b1c:	blt	2d59c <GetDataSlab+0xb770>
   33b20:	b	30874 <GetDataSlab+0xea48>
   33b24:	mov	r0, #1
   33b28:	add	r3, sp, #176	; 0xb0
   33b2c:	add	r3, r3, r0, lsl #2
   33b30:	ldr	r3, [r3, #-120]	; 0xffffff88
   33b34:	add	r4, r4, r3
   33b38:	add	r5, r5, r3
   33b3c:	ldr	r3, [sp, #20]
   33b40:	add	fp, fp, r3
   33b44:	ldr	r3, [sp, #28]
   33b48:	add	r8, r8, r3
   33b4c:	ldr	r3, [sp, #16]
   33b50:	cmp	fp, r3
   33b54:	blt	2d308 <GetDataSlab+0xb4dc>
   33b58:	b	30874 <GetDataSlab+0xea48>
   33b5c:	mov	r0, #1
   33b60:	add	r3, sp, #176	; 0xb0
   33b64:	add	r3, r3, r0, lsl #2
   33b68:	ldr	r3, [r3, #-120]	; 0xffffff88
   33b6c:	add	r4, r4, r3
   33b70:	add	r5, r5, r3
   33b74:	ldr	r3, [sp, #20]
   33b78:	add	fp, fp, r3
   33b7c:	ldr	r3, [sp, #28]
   33b80:	add	r8, r8, r3
   33b84:	ldr	r3, [sp, #16]
   33b88:	cmp	fp, r3
   33b8c:	blt	2d098 <GetDataSlab+0xb26c>
   33b90:	b	30874 <GetDataSlab+0xea48>
   33b94:	mov	r0, #1
   33b98:	add	r3, sp, #176	; 0xb0
   33b9c:	add	r3, r3, r0, lsl #2
   33ba0:	ldr	r3, [r3, #-120]	; 0xffffff88
   33ba4:	add	r6, r6, r3, lsl #1
   33ba8:	add	r4, r4, r3
   33bac:	ldr	r3, [sp, #20]
   33bb0:	add	fp, fp, r3
   33bb4:	ldr	r3, [sp, #32]
   33bb8:	add	r8, r8, r3
   33bbc:	ldr	r3, [sp, #16]
   33bc0:	cmp	fp, r3
   33bc4:	blt	2ce14 <GetDataSlab+0xafe8>
   33bc8:	b	30874 <GetDataSlab+0xea48>
   33bcc:	mov	r0, #1
   33bd0:	add	r3, sp, #176	; 0xb0
   33bd4:	add	r3, r3, r0, lsl #2
   33bd8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33bdc:	add	r6, r6, r3, lsl #1
   33be0:	add	r4, r4, r3
   33be4:	ldr	r3, [sp, #20]
   33be8:	add	fp, fp, r3
   33bec:	ldr	r3, [sp, #32]
   33bf0:	add	r8, r8, r3
   33bf4:	ldr	r3, [sp, #16]
   33bf8:	cmp	fp, r3
   33bfc:	blt	2cb6c <GetDataSlab+0xad40>
   33c00:	b	30874 <GetDataSlab+0xea48>
   33c04:	mov	r0, #1
   33c08:	add	r3, sp, #176	; 0xb0
   33c0c:	add	r3, r3, r0, lsl #2
   33c10:	ldr	r3, [r3, #-120]	; 0xffffff88
   33c14:	add	r6, r6, r3, lsl #2
   33c18:	add	r4, r4, r3
   33c1c:	ldr	r3, [sp, #20]
   33c20:	add	fp, fp, r3
   33c24:	ldr	r3, [sp, #32]
   33c28:	add	r8, r8, r3
   33c2c:	ldr	r3, [sp, #16]
   33c30:	cmp	fp, r3
   33c34:	blt	2c8c4 <GetDataSlab+0xaa98>
   33c38:	b	30874 <GetDataSlab+0xea48>
   33c3c:	mov	r0, #1
   33c40:	add	r3, sp, #176	; 0xb0
   33c44:	add	r3, r3, r0, lsl #2
   33c48:	ldr	r3, [r3, #-120]	; 0xffffff88
   33c4c:	add	r6, r6, r3, lsl #2
   33c50:	add	r4, r4, r3
   33c54:	ldr	r3, [sp, #20]
   33c58:	add	fp, fp, r3
   33c5c:	ldr	r3, [sp, #32]
   33c60:	add	r8, r8, r3
   33c64:	ldr	r3, [sp, #16]
   33c68:	cmp	fp, r3
   33c6c:	blt	2c61c <GetDataSlab+0xa7f0>
   33c70:	b	30874 <GetDataSlab+0xea48>
   33c74:	mov	r0, #1
   33c78:	add	r3, sp, #176	; 0xb0
   33c7c:	add	r3, r3, r0, lsl #2
   33c80:	ldr	r3, [r3, #-120]	; 0xffffff88
   33c84:	add	r6, r6, r3, lsl #2
   33c88:	add	r4, r4, r3
   33c8c:	ldr	r3, [sp, #20]
   33c90:	add	fp, fp, r3
   33c94:	ldr	r3, [sp, #32]
   33c98:	add	r7, r7, r3
   33c9c:	ldr	r3, [sp, #16]
   33ca0:	cmp	fp, r3
   33ca4:	blt	2c368 <GetDataSlab+0xa53c>
   33ca8:	b	30874 <GetDataSlab+0xea48>
   33cac:	mov	r0, #1
   33cb0:	add	r3, sp, #176	; 0xb0
   33cb4:	add	r3, r3, r0, lsl #2
   33cb8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33cbc:	add	r4, r4, r3
   33cc0:	add	r5, r5, r3
   33cc4:	ldr	r3, [sp, #20]
   33cc8:	add	fp, fp, r3
   33ccc:	ldr	r3, [sp, #28]
   33cd0:	add	r8, r8, r3
   33cd4:	ldr	r3, [sp, #16]
   33cd8:	cmp	fp, r3
   33cdc:	blt	2c0cc <GetDataSlab+0xa2a0>
   33ce0:	b	30874 <GetDataSlab+0xea48>
   33ce4:	mov	r0, #1
   33ce8:	add	r3, sp, #176	; 0xb0
   33cec:	add	r3, r3, r0, lsl #2
   33cf0:	ldr	r3, [r3, #-120]	; 0xffffff88
   33cf4:	add	r4, r4, r3
   33cf8:	add	r5, r5, r3
   33cfc:	ldr	r3, [sp, #20]
   33d00:	add	fp, fp, r3
   33d04:	ldr	r3, [sp, #28]
   33d08:	add	r8, r8, r3
   33d0c:	ldr	r3, [sp, #16]
   33d10:	cmp	fp, r3
   33d14:	blt	2be54 <GetDataSlab+0xa028>
   33d18:	b	30874 <GetDataSlab+0xea48>
   33d1c:	mov	r0, #1
   33d20:	add	r3, sp, #176	; 0xb0
   33d24:	add	r3, r3, r0, lsl #2
   33d28:	ldr	r3, [r3, #-120]	; 0xffffff88
   33d2c:	add	r6, r6, r3, lsl #1
   33d30:	add	r4, r4, r3
   33d34:	ldr	r3, [sp, #20]
   33d38:	add	fp, fp, r3
   33d3c:	ldr	r3, [sp, #32]
   33d40:	add	r8, r8, r3
   33d44:	ldr	r3, [sp, #16]
   33d48:	cmp	fp, r3
   33d4c:	blt	2bbc8 <GetDataSlab+0x9d9c>
   33d50:	b	30874 <GetDataSlab+0xea48>
   33d54:	mov	r0, #1
   33d58:	add	r3, sp, #176	; 0xb0
   33d5c:	add	r3, r3, r0, lsl #2
   33d60:	ldr	r3, [r3, #-120]	; 0xffffff88
   33d64:	add	r6, r6, r3, lsl #1
   33d68:	add	r4, r4, r3
   33d6c:	ldr	r3, [sp, #20]
   33d70:	add	fp, fp, r3
   33d74:	ldr	r3, [sp, #32]
   33d78:	add	r8, r8, r3
   33d7c:	ldr	r3, [sp, #16]
   33d80:	cmp	fp, r3
   33d84:	blt	2b918 <GetDataSlab+0x9aec>
   33d88:	b	30874 <GetDataSlab+0xea48>
   33d8c:	mov	r0, #1
   33d90:	add	r3, sp, #176	; 0xb0
   33d94:	add	r3, r3, r0, lsl #2
   33d98:	ldr	r3, [r3, #-120]	; 0xffffff88
   33d9c:	add	r6, r6, r3, lsl #2
   33da0:	add	r4, r4, r3
   33da4:	ldr	r3, [sp, #20]
   33da8:	add	fp, fp, r3
   33dac:	ldr	r3, [sp, #32]
   33db0:	add	r8, r8, r3
   33db4:	ldr	r3, [sp, #16]
   33db8:	cmp	fp, r3
   33dbc:	blt	2b668 <GetDataSlab+0x983c>
   33dc0:	b	30874 <GetDataSlab+0xea48>
   33dc4:	mov	r0, #1
   33dc8:	add	r3, sp, #176	; 0xb0
   33dcc:	add	r3, r3, r0, lsl #2
   33dd0:	ldr	r3, [r3, #-120]	; 0xffffff88
   33dd4:	add	r6, r6, r3, lsl #2
   33dd8:	add	r4, r4, r3
   33ddc:	ldr	r3, [sp, #20]
   33de0:	add	fp, fp, r3
   33de4:	ldr	r3, [sp, #32]
   33de8:	add	r8, r8, r3
   33dec:	ldr	r3, [sp, #16]
   33df0:	cmp	fp, r3
   33df4:	blt	2b3b8 <GetDataSlab+0x958c>
   33df8:	b	30874 <GetDataSlab+0xea48>
   33dfc:	mov	r0, #1
   33e00:	add	r3, sp, #176	; 0xb0
   33e04:	add	r3, r3, r0, lsl #2
   33e08:	ldr	r3, [r3, #-120]	; 0xffffff88
   33e0c:	add	r6, r6, r3, lsl #2
   33e10:	add	r4, r4, r3
   33e14:	ldr	r3, [sp, #20]
   33e18:	add	fp, fp, r3
   33e1c:	ldr	r3, [sp, #32]
   33e20:	add	r7, r7, r3
   33e24:	ldr	r3, [sp, #16]
   33e28:	cmp	fp, r3
   33e2c:	blt	2b10c <GetDataSlab+0x92e0>
   33e30:	b	30874 <GetDataSlab+0xea48>
   33e34:	mov	r0, #1
   33e38:	add	r3, sp, #176	; 0xb0
   33e3c:	add	r3, r3, r0, lsl #2
   33e40:	ldr	r3, [r3, #-120]	; 0xffffff88
   33e44:	add	r6, r6, r3, lsl #3
   33e48:	add	r4, r4, r3
   33e4c:	ldr	r3, [sp, #20]
   33e50:	add	fp, fp, r3
   33e54:	ldr	r3, [sp, #32]
   33e58:	add	r7, r7, r3
   33e5c:	ldr	r3, [sp, #16]
   33e60:	cmp	fp, r3
   33e64:	blt	2ae5c <GetDataSlab+0x9030>
   33e68:	b	30874 <GetDataSlab+0xea48>
   33e6c:	mov	r0, #1
   33e70:	add	r3, sp, #176	; 0xb0
   33e74:	add	r3, r3, r0, lsl #2
   33e78:	ldr	r3, [r3, #-120]	; 0xffffff88
   33e7c:	add	lr, lr, r3
   33e80:	add	r5, r5, r3
   33e84:	ldrd	r2, [sp, #20]
   33e88:	add	r3, r3, fp
   33e8c:	cmp	r3, r2
   33e90:	str	r3, [sp, #24]
   33e94:	blt	2aba4 <GetDataSlab+0x8d78>
   33e98:	b	30874 <GetDataSlab+0xea48>
   33e9c:	mov	r0, #1
   33ea0:	add	r3, sp, #176	; 0xb0
   33ea4:	add	r3, r3, r0, lsl #2
   33ea8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33eac:	add	lr, lr, r3
   33eb0:	add	r5, r5, r3
   33eb4:	ldrd	r2, [sp, #20]
   33eb8:	add	r3, r3, fp
   33ebc:	cmp	r3, r2
   33ec0:	str	r3, [sp, #24]
   33ec4:	blt	2a94c <GetDataSlab+0x8b20>
   33ec8:	b	30874 <GetDataSlab+0xea48>
   33ecc:	mov	r0, #1
   33ed0:	add	r3, sp, #176	; 0xb0
   33ed4:	add	r3, r3, r0, lsl #2
   33ed8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33edc:	add	r5, r5, r3, lsl #1
   33ee0:	add	r4, r4, r3
   33ee4:	ldrd	r2, [sp, #20]
   33ee8:	add	r3, r3, fp
   33eec:	cmp	r3, r2
   33ef0:	str	r3, [sp, #24]
   33ef4:	blt	2a6f0 <GetDataSlab+0x88c4>
   33ef8:	b	30874 <GetDataSlab+0xea48>
   33efc:	mov	r0, #1
   33f00:	add	r3, sp, #176	; 0xb0
   33f04:	add	r3, r3, r0, lsl #2
   33f08:	ldr	r3, [r3, #-120]	; 0xffffff88
   33f0c:	add	r5, r5, r3, lsl #1
   33f10:	add	r4, r4, r3
   33f14:	ldrd	r2, [sp, #20]
   33f18:	add	r3, r3, fp
   33f1c:	cmp	r3, r2
   33f20:	str	r3, [sp, #24]
   33f24:	blt	2a494 <GetDataSlab+0x8668>
   33f28:	b	30874 <GetDataSlab+0xea48>
   33f2c:	mov	r0, #1
   33f30:	add	r3, sp, #176	; 0xb0
   33f34:	add	r3, r3, r0, lsl #2
   33f38:	ldr	r3, [r3, #-120]	; 0xffffff88
   33f3c:	add	r5, r5, r3, lsl #2
   33f40:	add	r4, r4, r3
   33f44:	ldrd	r2, [sp, #20]
   33f48:	add	r3, r3, fp
   33f4c:	cmp	r3, r2
   33f50:	str	r3, [sp, #24]
   33f54:	blt	2a238 <GetDataSlab+0x840c>
   33f58:	b	30874 <GetDataSlab+0xea48>
   33f5c:	mov	r0, #1
   33f60:	add	r3, sp, #176	; 0xb0
   33f64:	add	r3, r3, r0, lsl #2
   33f68:	ldr	r3, [r3, #-120]	; 0xffffff88
   33f6c:	add	r5, r5, r3, lsl #2
   33f70:	add	r4, r4, r3
   33f74:	ldrd	r2, [sp, #20]
   33f78:	add	r3, r3, fp
   33f7c:	cmp	r3, r2
   33f80:	str	r3, [sp, #24]
   33f84:	blt	29fdc <GetDataSlab+0x81b0>
   33f88:	b	30874 <GetDataSlab+0xea48>
   33f8c:	mov	r0, #1
   33f90:	add	r3, sp, #176	; 0xb0
   33f94:	add	r3, r3, r0, lsl #2
   33f98:	ldr	r3, [r3, #-120]	; 0xffffff88
   33f9c:	add	r5, r5, r3, lsl #2
   33fa0:	add	r4, r4, r3
   33fa4:	ldrd	r2, [sp, #20]
   33fa8:	add	r3, r3, fp
   33fac:	cmp	r3, r2
   33fb0:	str	r3, [sp, #24]
   33fb4:	blt	29d78 <GetDataSlab+0x7f4c>
   33fb8:	b	30874 <GetDataSlab+0xea48>
   33fbc:	mov	r0, #1
   33fc0:	add	r3, sp, #176	; 0xb0
   33fc4:	add	r3, r3, r0, lsl #2
   33fc8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33fcc:	add	r5, r5, r3, lsl #3
   33fd0:	add	r4, r4, r3
   33fd4:	ldrd	r2, [sp, #20]
   33fd8:	add	r3, r3, fp
   33fdc:	cmp	r3, r2
   33fe0:	str	r3, [sp, #24]
   33fe4:	blt	29b14 <GetDataSlab+0x7ce8>
   33fe8:	b	30874 <GetDataSlab+0xea48>
   33fec:	mov	r0, #1
   33ff0:	add	r3, sp, #176	; 0xb0
   33ff4:	add	r3, r3, r0, lsl #2
   33ff8:	ldr	r3, [r3, #-120]	; 0xffffff88
   33ffc:	add	r4, r4, r3
   34000:	add	r5, r5, r3
   34004:	ldr	r3, [sp, #20]
   34008:	add	fp, fp, r3
   3400c:	ldr	r3, [sp, #28]
   34010:	add	r8, r8, r3
   34014:	ldr	r3, [sp, #16]
   34018:	cmp	fp, r3
   3401c:	blt	298d8 <GetDataSlab+0x7aac>
   34020:	b	30874 <GetDataSlab+0xea48>
   34024:	mov	r0, #1
   34028:	add	r3, sp, #176	; 0xb0
   3402c:	add	r3, r3, r0, lsl #2
   34030:	ldr	r3, [r3, #-120]	; 0xffffff88
   34034:	add	r4, r4, r3
   34038:	add	r5, r5, r3
   3403c:	ldr	r3, [sp, #20]
   34040:	add	fp, fp, r3
   34044:	ldr	r3, [sp, #28]
   34048:	add	r8, r8, r3
   3404c:	ldr	r3, [sp, #16]
   34050:	cmp	fp, r3
   34054:	blt	29660 <GetDataSlab+0x7834>
   34058:	b	30874 <GetDataSlab+0xea48>
   3405c:	mov	r0, #1
   34060:	add	r3, sp, #176	; 0xb0
   34064:	add	r3, r3, r0, lsl #2
   34068:	ldr	r3, [r3, #-120]	; 0xffffff88
   3406c:	add	r6, r6, r3, lsl #1
   34070:	add	r4, r4, r3
   34074:	ldr	r3, [sp, #20]
   34078:	add	fp, fp, r3
   3407c:	ldr	r3, [sp, #32]
   34080:	add	r8, r8, r3
   34084:	ldr	r3, [sp, #16]
   34088:	cmp	fp, r3
   3408c:	blt	293d4 <GetDataSlab+0x75a8>
   34090:	b	30874 <GetDataSlab+0xea48>
   34094:	mov	r0, #1
   34098:	add	r3, sp, #176	; 0xb0
   3409c:	add	r3, r3, r0, lsl #2
   340a0:	ldr	r3, [r3, #-120]	; 0xffffff88
   340a4:	add	r6, r6, r3, lsl #1
   340a8:	add	r4, r4, r3
   340ac:	ldr	r3, [sp, #20]
   340b0:	add	fp, fp, r3
   340b4:	ldr	r3, [sp, #32]
   340b8:	add	r8, r8, r3
   340bc:	ldr	r3, [sp, #16]
   340c0:	cmp	fp, r3
   340c4:	blt	29124 <GetDataSlab+0x72f8>
   340c8:	b	30874 <GetDataSlab+0xea48>
   340cc:	mov	r0, #1
   340d0:	add	r3, sp, #176	; 0xb0
   340d4:	add	r3, r3, r0, lsl #2
   340d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   340dc:	add	r6, r6, r3, lsl #2
   340e0:	add	r4, r4, r3
   340e4:	ldr	r3, [sp, #20]
   340e8:	add	fp, fp, r3
   340ec:	ldr	r3, [sp, #32]
   340f0:	add	r8, r8, r3
   340f4:	ldr	r3, [sp, #16]
   340f8:	cmp	fp, r3
   340fc:	blt	28e74 <GetDataSlab+0x7048>
   34100:	b	30874 <GetDataSlab+0xea48>
   34104:	mov	r0, #1
   34108:	add	r3, sp, #176	; 0xb0
   3410c:	add	r3, r3, r0, lsl #2
   34110:	ldr	r3, [r3, #-120]	; 0xffffff88
   34114:	add	r6, r6, r3, lsl #2
   34118:	add	r4, r4, r3
   3411c:	ldr	r3, [sp, #20]
   34120:	add	fp, fp, r3
   34124:	ldr	r3, [sp, #32]
   34128:	add	r8, r8, r3
   3412c:	ldr	r3, [sp, #16]
   34130:	cmp	fp, r3
   34134:	blt	28bc4 <GetDataSlab+0x6d98>
   34138:	b	30874 <GetDataSlab+0xea48>
   3413c:	mov	r0, #1
   34140:	add	r3, sp, #176	; 0xb0
   34144:	add	r3, r3, r0, lsl #2
   34148:	ldr	r3, [r3, #-120]	; 0xffffff88
   3414c:	add	r6, r6, r3, lsl #2
   34150:	add	r4, r4, r3
   34154:	ldr	r3, [sp, #20]
   34158:	add	fp, fp, r3
   3415c:	ldr	r3, [sp, #32]
   34160:	add	r7, r7, r3
   34164:	ldr	r3, [sp, #16]
   34168:	cmp	fp, r3
   3416c:	blt	28914 <GetDataSlab+0x6ae8>
   34170:	b	30874 <GetDataSlab+0xea48>
   34174:	mov	r0, #1
   34178:	add	r3, sp, #176	; 0xb0
   3417c:	add	r3, r3, r0, lsl #2
   34180:	ldr	r3, [r3, #-120]	; 0xffffff88
   34184:	add	r6, r6, r3, lsl #3
   34188:	add	r4, r4, r3
   3418c:	ldr	r3, [sp, #20]
   34190:	add	fp, fp, r3
   34194:	ldr	r3, [sp, #32]
   34198:	add	r7, r7, r3
   3419c:	ldr	r3, [sp, #16]
   341a0:	cmp	fp, r3
   341a4:	blt	28668 <GetDataSlab+0x683c>
   341a8:	b	30874 <GetDataSlab+0xea48>
   341ac:	mov	r0, #1
   341b0:	add	r3, sp, #176	; 0xb0
   341b4:	add	r3, r3, r0, lsl #2
   341b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   341bc:	add	r4, r4, r3
   341c0:	add	r5, r5, r3
   341c4:	ldr	r3, [sp, #20]
   341c8:	add	fp, fp, r3
   341cc:	ldr	r3, [sp, #28]
   341d0:	add	r8, r8, r3
   341d4:	ldr	r3, [sp, #16]
   341d8:	cmp	fp, r3
   341dc:	blt	283d0 <GetDataSlab+0x65a4>
   341e0:	b	30874 <GetDataSlab+0xea48>
   341e4:	mov	r0, #1
   341e8:	add	r3, sp, #176	; 0xb0
   341ec:	add	r3, r3, r0, lsl #2
   341f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   341f4:	add	r4, r4, r3
   341f8:	add	r5, r5, r3
   341fc:	ldr	r3, [sp, #20]
   34200:	add	fp, fp, r3
   34204:	ldr	r3, [sp, #28]
   34208:	add	r8, r8, r3
   3420c:	ldr	r3, [sp, #16]
   34210:	cmp	fp, r3
   34214:	blt	2815c <GetDataSlab+0x6330>
   34218:	b	30874 <GetDataSlab+0xea48>
   3421c:	mov	r0, #1
   34220:	add	r3, sp, #176	; 0xb0
   34224:	add	r3, r3, r0, lsl #2
   34228:	ldr	r3, [r3, #-120]	; 0xffffff88
   3422c:	add	r6, r6, r3, lsl #1
   34230:	add	r4, r4, r3
   34234:	ldr	r3, [sp, #20]
   34238:	add	fp, fp, r3
   3423c:	ldr	r3, [sp, #32]
   34240:	add	r8, r8, r3
   34244:	ldr	r3, [sp, #16]
   34248:	cmp	fp, r3
   3424c:	blt	27ed4 <GetDataSlab+0x60a8>
   34250:	b	30874 <GetDataSlab+0xea48>
   34254:	mov	r0, #1
   34258:	add	r3, sp, #176	; 0xb0
   3425c:	add	r3, r3, r0, lsl #2
   34260:	ldr	r3, [r3, #-120]	; 0xffffff88
   34264:	add	r6, r6, r3, lsl #1
   34268:	add	r4, r4, r3
   3426c:	ldr	r3, [sp, #20]
   34270:	add	fp, fp, r3
   34274:	ldr	r3, [sp, #32]
   34278:	add	r8, r8, r3
   3427c:	ldr	r3, [sp, #16]
   34280:	cmp	fp, r3
   34284:	blt	27c28 <GetDataSlab+0x5dfc>
   34288:	b	30874 <GetDataSlab+0xea48>
   3428c:	mov	r0, #1
   34290:	add	r3, sp, #176	; 0xb0
   34294:	add	r3, r3, r0, lsl #2
   34298:	ldr	r3, [r3, #-120]	; 0xffffff88
   3429c:	add	r6, r6, r3, lsl #2
   342a0:	add	r4, r4, r3
   342a4:	ldr	r3, [sp, #20]
   342a8:	add	fp, fp, r3
   342ac:	ldr	r3, [sp, #32]
   342b0:	add	r8, r8, r3
   342b4:	ldr	r3, [sp, #16]
   342b8:	cmp	fp, r3
   342bc:	blt	27978 <GetDataSlab+0x5b4c>
   342c0:	b	30874 <GetDataSlab+0xea48>
   342c4:	mov	r0, #1
   342c8:	add	r3, sp, #176	; 0xb0
   342cc:	add	r3, r3, r0, lsl #2
   342d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   342d4:	add	r6, r6, r3, lsl #2
   342d8:	add	r4, r4, r3
   342dc:	ldr	r3, [sp, #20]
   342e0:	add	fp, fp, r3
   342e4:	ldr	r3, [sp, #32]
   342e8:	add	sl, sl, r3
   342ec:	ldr	r3, [sp, #16]
   342f0:	cmp	fp, r3
   342f4:	blt	276cc <GetDataSlab+0x58a0>
   342f8:	b	30874 <GetDataSlab+0xea48>
   342fc:	mov	r0, #1
   34300:	add	r3, sp, #176	; 0xb0
   34304:	add	r3, r3, r0, lsl #2
   34308:	ldr	r3, [r3, #-120]	; 0xffffff88
   3430c:	add	r8, r8, r3, lsl #2
   34310:	add	r7, r7, r3
   34314:	ldr	r3, [sp, #8]
   34318:	ldr	r2, [sp, #20]
   3431c:	add	r3, r3, r2
   34320:	ldr	r2, [sp, #16]
   34324:	str	r3, [sp, #8]
   34328:	ldr	r3, [sp, #36]	; 0x24
   3432c:	add	r6, r6, r3
   34330:	ldr	r3, [sp, #8]
   34334:	cmp	r3, r2
   34338:	blt	27418 <GetDataSlab+0x55ec>
   3433c:	b	30874 <GetDataSlab+0xea48>
   34340:	mov	r0, #1
   34344:	add	r3, sp, #176	; 0xb0
   34348:	add	r3, r3, r0, lsl #2
   3434c:	ldr	r3, [r3, #-120]	; 0xffffff88
   34350:	add	r8, r8, r3, lsl #3
   34354:	add	r7, r7, r3
   34358:	ldr	r3, [sp, #8]
   3435c:	ldr	r2, [sp, #20]
   34360:	add	r3, r3, r2
   34364:	ldr	r2, [sp, #16]
   34368:	str	r3, [sp, #8]
   3436c:	ldr	r3, [sp, #36]	; 0x24
   34370:	add	r6, r6, r3
   34374:	ldr	r3, [sp, #8]
   34378:	cmp	r3, r2
   3437c:	blt	27160 <GetDataSlab+0x5334>
   34380:	b	30874 <GetDataSlab+0xea48>
   34384:	mov	r0, #1
   34388:	add	r3, sp, #176	; 0xb0
   3438c:	add	r3, r3, r0, lsl #2
   34390:	ldr	r3, [r3, #-120]	; 0xffffff88
   34394:	add	lr, lr, r3
   34398:	add	r5, r5, r3
   3439c:	ldrd	r2, [sp, #20]
   343a0:	add	r3, r3, fp
   343a4:	cmp	r3, r2
   343a8:	str	r3, [sp, #24]
   343ac:	blt	26ea4 <GetDataSlab+0x5078>
   343b0:	b	30874 <GetDataSlab+0xea48>
   343b4:	mov	r0, #1
   343b8:	add	r3, sp, #176	; 0xb0
   343bc:	add	r3, r3, r0, lsl #2
   343c0:	ldr	r3, [r3, #-120]	; 0xffffff88
   343c4:	add	lr, lr, r3
   343c8:	add	r5, r5, r3
   343cc:	ldrd	r2, [sp, #20]
   343d0:	add	r3, r3, fp
   343d4:	cmp	r3, r2
   343d8:	str	r3, [sp, #24]
   343dc:	blt	26c4c <GetDataSlab+0x4e20>
   343e0:	b	30874 <GetDataSlab+0xea48>
   343e4:	mov	r0, #1
   343e8:	add	r3, sp, #176	; 0xb0
   343ec:	add	r3, r3, r0, lsl #2
   343f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   343f4:	add	r5, r5, r3, lsl #1
   343f8:	add	lr, lr, r3
   343fc:	ldrd	r2, [sp, #20]
   34400:	add	r3, r3, fp
   34404:	cmp	r3, r2
   34408:	str	r3, [sp, #24]
   3440c:	blt	269f0 <GetDataSlab+0x4bc4>
   34410:	b	30874 <GetDataSlab+0xea48>
   34414:	mov	r0, #1
   34418:	add	r3, sp, #176	; 0xb0
   3441c:	add	r3, r3, r0, lsl #2
   34420:	ldr	r3, [r3, #-120]	; 0xffffff88
   34424:	add	r5, r5, r3, lsl #1
   34428:	add	lr, lr, r3
   3442c:	ldrd	r2, [sp, #20]
   34430:	add	r3, r3, fp
   34434:	cmp	r3, r2
   34438:	str	r3, [sp, #24]
   3443c:	blt	26794 <GetDataSlab+0x4968>
   34440:	b	30874 <GetDataSlab+0xea48>
   34444:	mov	r0, #1
   34448:	add	r3, sp, #176	; 0xb0
   3444c:	add	r3, r3, r0, lsl #2
   34450:	ldr	r3, [r3, #-120]	; 0xffffff88
   34454:	add	r5, r5, r3, lsl #2
   34458:	add	lr, lr, r3
   3445c:	ldrd	r2, [sp, #20]
   34460:	add	r3, r3, fp
   34464:	cmp	r3, r2
   34468:	str	r3, [sp, #24]
   3446c:	blt	26538 <GetDataSlab+0x470c>
   34470:	b	30874 <GetDataSlab+0xea48>
   34474:	mov	r0, #1
   34478:	add	r3, sp, #176	; 0xb0
   3447c:	add	r3, r3, r0, lsl #2
   34480:	ldr	r3, [r3, #-120]	; 0xffffff88
   34484:	add	r5, r5, r3, lsl #2
   34488:	add	lr, lr, r3
   3448c:	ldrd	r2, [sp, #20]
   34490:	add	r3, r3, fp
   34494:	cmp	r3, r2
   34498:	str	r3, [sp, #24]
   3449c:	blt	262dc <GetDataSlab+0x44b0>
   344a0:	b	30874 <GetDataSlab+0xea48>
   344a4:	mov	r0, #1
   344a8:	add	r3, sp, #176	; 0xb0
   344ac:	add	r3, r3, r0, lsl #2
   344b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   344b4:	add	r5, r5, r3, lsl #2
   344b8:	add	lr, lr, r3
   344bc:	ldrd	r2, [sp, #20]
   344c0:	add	r3, r3, fp
   344c4:	cmp	r3, r2
   344c8:	str	r3, [sp, #24]
   344cc:	blt	2607c <GetDataSlab+0x4250>
   344d0:	b	30874 <GetDataSlab+0xea48>
   344d4:	mov	r0, #1
   344d8:	add	r3, sp, #176	; 0xb0
   344dc:	add	r3, r3, r0, lsl #2
   344e0:	ldr	r3, [r3, #-120]	; 0xffffff88
   344e4:	add	r5, r5, r3, lsl #3
   344e8:	add	lr, lr, r3
   344ec:	ldrd	r2, [sp, #20]
   344f0:	add	r3, r3, fp
   344f4:	cmp	r3, r2
   344f8:	str	r3, [sp, #24]
   344fc:	blt	25e1c <GetDataSlab+0x3ff0>
   34500:	b	30874 <GetDataSlab+0xea48>
   34504:	mov	r0, #1
   34508:	add	r3, sp, #176	; 0xb0
   3450c:	add	r3, r3, r0, lsl #2
   34510:	ldr	r3, [r3, #-120]	; 0xffffff88
   34514:	add	r4, r4, r3
   34518:	add	r5, r5, r3
   3451c:	ldr	r3, [sp, #20]
   34520:	add	fp, fp, r3
   34524:	ldr	r3, [sp, #28]
   34528:	add	r8, r8, r3
   3452c:	ldr	r3, [sp, #16]
   34530:	cmp	fp, r3
   34534:	blt	25be4 <GetDataSlab+0x3db8>
   34538:	b	30874 <GetDataSlab+0xea48>
   3453c:	mov	r0, #1
   34540:	add	r3, sp, #176	; 0xb0
   34544:	add	r3, r3, r0, lsl #2
   34548:	ldr	r3, [r3, #-120]	; 0xffffff88
   3454c:	add	r4, r4, r3
   34550:	add	r5, r5, r3
   34554:	ldr	r3, [sp, #20]
   34558:	add	fp, fp, r3
   3455c:	ldr	r3, [sp, #28]
   34560:	add	r8, r8, r3
   34564:	ldr	r3, [sp, #16]
   34568:	cmp	fp, r3
   3456c:	blt	25970 <GetDataSlab+0x3b44>
   34570:	b	30874 <GetDataSlab+0xea48>
   34574:	mov	r0, #1
   34578:	add	r3, sp, #176	; 0xb0
   3457c:	add	r3, r3, r0, lsl #2
   34580:	ldr	r3, [r3, #-120]	; 0xffffff88
   34584:	add	r6, r6, r3, lsl #1
   34588:	add	r4, r4, r3
   3458c:	ldr	r3, [sp, #20]
   34590:	add	fp, fp, r3
   34594:	ldr	r3, [sp, #32]
   34598:	add	r8, r8, r3
   3459c:	ldr	r3, [sp, #16]
   345a0:	cmp	fp, r3
   345a4:	blt	256e8 <GetDataSlab+0x38bc>
   345a8:	b	30874 <GetDataSlab+0xea48>
   345ac:	mov	r0, #1
   345b0:	add	r3, sp, #176	; 0xb0
   345b4:	add	r3, r3, r0, lsl #2
   345b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   345bc:	add	r6, r6, r3, lsl #1
   345c0:	add	r4, r4, r3
   345c4:	ldr	r3, [sp, #20]
   345c8:	add	fp, fp, r3
   345cc:	ldr	r3, [sp, #32]
   345d0:	add	r8, r8, r3
   345d4:	ldr	r3, [sp, #16]
   345d8:	cmp	fp, r3
   345dc:	blt	2543c <GetDataSlab+0x3610>
   345e0:	b	30874 <GetDataSlab+0xea48>
   345e4:	mov	r0, #1
   345e8:	add	r3, sp, #176	; 0xb0
   345ec:	add	r3, r3, r0, lsl #2
   345f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   345f4:	add	r6, r6, r3, lsl #2
   345f8:	add	r4, r4, r3
   345fc:	ldr	r3, [sp, #20]
   34600:	add	fp, fp, r3
   34604:	ldr	r3, [sp, #32]
   34608:	add	r8, r8, r3
   3460c:	ldr	r3, [sp, #16]
   34610:	cmp	fp, r3
   34614:	blt	2518c <GetDataSlab+0x3360>
   34618:	b	30874 <GetDataSlab+0xea48>
   3461c:	ldr	r3, [sp, #16]
   34620:	cmp	fp, r3
   34624:	cmpeq	r2, #1
   34628:	moveq	r3, #1
   3462c:	movne	r3, #0
   34630:	tst	r3, r4
   34634:	beq	21fd4 <GetDataSlab+0x1a8>
   34638:	ldrd	r0, [sp, #4]
   3463c:	ldr	r2, [sp, #236]	; 0xec
   34640:	bl	1490 <memcpy@plt>
   34644:	mov	r3, #0
   34648:	b	22010 <GetDataSlab+0x1e4>
   3464c:	mov	r0, #1
   34650:	add	r3, sp, #176	; 0xb0
   34654:	add	r3, r3, r0, lsl #2
   34658:	ldr	r3, [r3, #-120]	; 0xffffff88
   3465c:	add	r8, r8, r3, lsl #3
   34660:	add	r7, r7, r3
   34664:	ldr	r3, [sp, #8]
   34668:	ldr	r2, [sp, #20]
   3466c:	add	r3, r3, r2
   34670:	ldr	r2, [sp, #16]
   34674:	str	r3, [sp, #8]
   34678:	ldr	r3, [sp, #36]	; 0x24
   3467c:	add	r6, r6, r3
   34680:	ldr	r3, [sp, #8]
   34684:	cmp	r3, r2
   34688:	blt	2f210 <GetDataSlab+0xd3e4>
   3468c:	b	30874 <GetDataSlab+0xea48>
   34690:	mov	r0, #1
   34694:	add	r3, sp, #176	; 0xb0
   34698:	add	r3, r3, r0, lsl #2
   3469c:	ldr	r3, [r3, #-120]	; 0xffffff88
   346a0:	add	r5, r5, r3, lsl #3
   346a4:	add	r4, r4, r3
   346a8:	ldrd	r2, [sp, #20]
   346ac:	add	r3, r3, fp
   346b0:	cmp	r3, r2
   346b4:	str	r3, [sp, #24]
   346b8:	blt	306b0 <GetDataSlab+0xe884>
   346bc:	b	30874 <GetDataSlab+0xea48>
   346c0:	mov	r0, #1
   346c4:	add	r3, sp, #176	; 0xb0
   346c8:	add	r3, r3, r0, lsl #2
   346cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   346d0:	add	r6, r6, r3, lsl #3
   346d4:	add	r4, r4, r3
   346d8:	ldr	r3, [sp, #20]
   346dc:	add	fp, fp, r3
   346e0:	ldr	r3, [sp, #28]
   346e4:	add	r8, r8, r3
   346e8:	ldr	r3, [sp, #16]
   346ec:	cmp	fp, r3
   346f0:	blt	30458 <GetDataSlab+0xe62c>
   346f4:	b	30874 <GetDataSlab+0xea48>
   346f8:	mov	r0, #1
   346fc:	add	r3, sp, #176	; 0xb0
   34700:	add	r3, r3, r0, lsl #2
   34704:	ldr	r3, [r3, #-120]	; 0xffffff88
   34708:	add	r5, r5, r3, lsl #3
   3470c:	add	r4, r4, r3
   34710:	ldrd	r2, [sp, #20]
   34714:	add	r3, r3, fp
   34718:	cmp	r3, r2
   3471c:	str	r3, [sp, #24]
   34720:	blt	3018c <GetDataSlab+0xe360>
   34724:	b	30874 <GetDataSlab+0xea48>
   34728:	mov	r0, #1
   3472c:	add	r3, sp, #176	; 0xb0
   34730:	add	r3, r3, r0, lsl #2
   34734:	ldr	r3, [r3, #-120]	; 0xffffff88
   34738:	add	r5, r5, r3, lsl #3
   3473c:	add	r4, r4, r3
   34740:	ldrd	r2, [sp, #20]
   34744:	add	r3, r3, fp
   34748:	cmp	r3, r2
   3474c:	str	r3, [sp, #24]
   34750:	blt	2fc64 <GetDataSlab+0xde38>
   34754:	b	30874 <GetDataSlab+0xea48>
   34758:	mov	r0, #1
   3475c:	add	r3, sp, #176	; 0xb0
   34760:	add	r3, r3, r0, lsl #2
   34764:	ldr	r3, [r3, #-120]	; 0xffffff88
   34768:	add	r6, r6, r3, lsl #3
   3476c:	add	r4, r4, r3
   34770:	ldr	r3, [sp, #20]
   34774:	add	fp, fp, r3
   34778:	ldr	r3, [sp, #28]
   3477c:	add	r7, r7, r3
   34780:	ldr	r3, [sp, #16]
   34784:	cmp	fp, r3
   34788:	blt	2ff30 <GetDataSlab+0xe104>
   3478c:	b	30874 <GetDataSlab+0xea48>
   34790:	mov	r0, #1
   34794:	add	r3, sp, #176	; 0xb0
   34798:	add	r3, r3, r0, lsl #2
   3479c:	ldr	r3, [r3, #-120]	; 0xffffff88
   347a0:	add	r6, r6, r3, lsl #3
   347a4:	add	r4, r4, r3
   347a8:	ldr	r3, [sp, #20]
   347ac:	add	fp, fp, r3
   347b0:	ldr	r3, [sp, #28]
   347b4:	add	r7, r7, r3
   347b8:	ldr	r3, [sp, #16]
   347bc:	cmp	fp, r3
   347c0:	blt	2fa08 <GetDataSlab+0xdbdc>
   347c4:	b	30874 <GetDataSlab+0xea48>
   347c8:	mov	r0, #1
   347cc:	add	r3, sp, #176	; 0xb0
   347d0:	add	r3, r3, r0, lsl #2
   347d4:	ldr	r3, [r3, #-120]	; 0xffffff88
   347d8:	add	r8, r8, r3, lsl #3
   347dc:	add	r7, r7, r3
   347e0:	ldr	r3, [sp, #8]
   347e4:	ldr	r2, [sp, #20]
   347e8:	add	r3, r3, r2
   347ec:	ldr	r2, [sp, #16]
   347f0:	str	r3, [sp, #8]
   347f4:	ldr	r3, [sp, #36]	; 0x24
   347f8:	add	r6, r6, r3
   347fc:	ldr	r3, [sp, #8]
   34800:	cmp	r3, r2
   34804:	blt	2f744 <GetDataSlab+0xd918>
   34808:	b	30874 <GetDataSlab+0xea48>
   3480c:	mov	r0, #1
   34810:	add	r3, sp, #176	; 0xb0
   34814:	add	r3, r3, r0, lsl #2
   34818:	ldr	r3, [r3, #-120]	; 0xffffff88
   3481c:	add	r5, r5, r3, lsl #3
   34820:	add	r4, r4, r3
   34824:	ldrd	r2, [sp, #20]
   34828:	add	r3, r3, fp
   3482c:	cmp	r3, r2
   34830:	str	r3, [sp, #24]
   34834:	blt	2f474 <GetDataSlab+0xd648>
   34838:	b	30874 <GetDataSlab+0xea48>
   3483c:	mov	r0, #1
   34840:	add	r3, sp, #176	; 0xb0
   34844:	add	r3, r3, r0, lsl #2
   34848:	ldr	r3, [r3, #-120]	; 0xffffff88
   3484c:	add	r6, r6, r3, lsl #3
   34850:	add	r4, r4, r3
   34854:	ldr	r3, [sp, #20]
   34858:	add	fp, fp, r3
   3485c:	ldr	r3, [sp, #28]
   34860:	add	r8, r8, r3
   34864:	ldr	r3, [sp, #16]
   34868:	cmp	fp, r3
   3486c:	blt	2ef54 <GetDataSlab+0xd128>
   34870:	b	30874 <GetDataSlab+0xea48>
   34874:	cmp	r3, #0
   34878:	ble	30874 <GetDataSlab+0xea48>
   3487c:	ldr	r3, [sp, #20]
   34880:	mov	r8, #0
   34884:	mov	r7, r8
   34888:	ldr	sl, [r9]
   3488c:	lsl	r3, r3, #1
   34890:	str	r3, [sp, #12]
   34894:	ldr	r3, [sp, #36]	; 0x24
   34898:	sub	fp, r3, sl
   3489c:	lsl	r3, sl, #1
   348a0:	str	r3, [sp, #24]
   348a4:	lsl	r3, fp, #1
   348a8:	str	r3, [sp, #8]
   348ac:	cmp	sl, #0
   348b0:	beq	348c0 <GetDataSlab+0x12a94>
   348b4:	ldr	r3, [sp, #24]
   348b8:	add	r4, r4, sl
   348bc:	add	r6, r6, r3
   348c0:	ldr	r3, [sp, #20]
   348c4:	cmp	r3, #0
   348c8:	ble	348f0 <GetDataSlab+0x12ac4>
   348cc:	ldr	r3, [sp, #4]
   348d0:	mov	r2, r6
   348d4:	add	r1, r3, r8, lsl #1
   348d8:	ldr	r3, [sp, #12]
   348dc:	add	r0, r6, r3
   348e0:	ldrh	r3, [r2], #2
   348e4:	cmp	r2, r0
   348e8:	strh	r3, [r1], #2
   348ec:	bne	348e0 <GetDataSlab+0x12ab4>
   348f0:	ldr	r3, [sp, #232]	; 0xe8
   348f4:	add	r4, r4, fp
   348f8:	cmp	r3, #1
   348fc:	ldr	r3, [sp, #8]
   34900:	add	r6, r6, r3
   34904:	ble	349dc <GetDataSlab+0x12bb0>
   34908:	ldr	r3, [sp, #100]	; 0x64
   3490c:	ldr	r2, [sp, #228]	; 0xe4
   34910:	add	r3, r3, #1
   34914:	ldr	r1, [r2, #4]
   34918:	str	r3, [sp, #100]	; 0x64
   3491c:	sdiv	r2, r3, r1
   34920:	mls	r3, r1, r2, r3
   34924:	cmp	r3, #0
   34928:	bne	349c4 <GetDataSlab+0x12b98>
   3492c:	ldr	r3, [sp, #228]	; 0xe4
   34930:	add	ip, sp, #100	; 0x64
   34934:	add	lr, sp, #140	; 0x8c
   34938:	mov	r0, #1
   3493c:	add	r5, r3, #4
   34940:	b	34988 <GetDataSlab+0x12b5c>
   34944:	ldr	r3, [lr, #-8]
   34948:	ldr	r1, [r9, r0, lsl #2]
   3494c:	mla	r3, r1, r3, r2
   34950:	add	r6, r6, r3, lsl #1
   34954:	add	r4, r4, r3
   34958:	ldr	r3, [sp, #232]	; 0xe8
   3495c:	add	r0, r0, #1
   34960:	cmp	r3, r0
   34964:	beq	349dc <GetDataSlab+0x12bb0>
   34968:	ldr	r3, [ip]
   3496c:	ldr	r1, [r5, #4]!
   34970:	add	r3, r3, #1
   34974:	sdiv	r2, r3, r1
   34978:	str	r3, [ip]
   3497c:	mls	r3, r1, r2, r3
   34980:	cmp	r3, #0
   34984:	bne	349c8 <GetDataSlab+0x12b9c>
   34988:	ldr	r2, [lr], #4
   3498c:	str	r7, [ip], #4
   34990:	sdiv	r3, r4, r2
   34994:	mls	r3, r2, r3, r4
   34998:	cmp	r3, #0
   3499c:	sub	r2, r2, r3
   349a0:	bne	34944 <GetDataSlab+0x12b18>
   349a4:	ldr	r3, [r9, r0, lsl #2]
   349a8:	cmp	r3, #0
   349ac:	beq	34958 <GetDataSlab+0x12b2c>
   349b0:	ldr	r2, [lr, #-8]
   349b4:	mul	r3, r2, r3
   349b8:	add	r6, r6, r3, lsl #1
   349bc:	add	r4, r4, r3
   349c0:	b	34958 <GetDataSlab+0x12b2c>
   349c4:	mov	r0, #1
   349c8:	add	r3, sp, #176	; 0xb0
   349cc:	add	r3, r3, r0, lsl #2
   349d0:	ldr	r3, [r3, #-120]	; 0xffffff88
   349d4:	add	r6, r6, r3, lsl #1
   349d8:	add	r4, r4, r3
   349dc:	ldr	r3, [sp, #20]
   349e0:	add	r8, r8, r3
   349e4:	ldr	r3, [sp, #16]
   349e8:	cmp	r8, r3
   349ec:	blt	348ac <GetDataSlab+0x12a80>
   349f0:	b	30874 <GetDataSlab+0xea48>
   349f4:	ldr	r3, [sl]
   349f8:	str	r3, [sp, #32]
   349fc:	ldr	r3, [sp, #232]	; 0xe8
   34a00:	cmp	r3, #1
   34a04:	ldr	r3, [r8]
   34a08:	str	r3, [sp, #40]	; 0x28
   34a0c:	ldr	r3, [sp, #228]	; 0xe4
   34a10:	ldr	r3, [r3]
   34a14:	str	r3, [sp, #20]
   34a18:	ldr	r3, [sp, #32]
   34a1c:	sub	r3, r3, #1
   34a20:	str	r3, [sp, #56]	; 0x38
   34a24:	ldr	r3, [sp, #40]	; 0x28
   34a28:	str	r3, [sp, #136]	; 0x88
   34a2c:	ble	4023c <GetDataSlab+0x1e410>
   34a30:	add	r5, sl, #4
   34a34:	ldr	fp, [sp, #228]	; 0xe4
   34a38:	add	lr, sp, #60	; 0x3c
   34a3c:	mov	r4, r8
   34a40:	mov	r7, #0
   34a44:	str	r9, [sp, #24]
   34a48:	ldr	r3, [sp, #232]	; 0xe8
   34a4c:	add	r3, sl, r3, lsl #2
   34a50:	ldr	sl, [sp, #12]
   34a54:	str	r3, [sp, #28]
   34a58:	ldr	r3, [sp, #20]
   34a5c:	str	r3, [sp, #16]
   34a60:	ldr	r3, [r5], #4
   34a64:	mov	r6, sl
   34a68:	ldr	r0, [r4], #4
   34a6c:	sub	ip, r3, #1
   34a70:	mov	r1, r4
   34a74:	str	ip, [lr], #4
   34a78:	mov	r3, r1
   34a7c:	ldr	r2, [r1, #-4]!
   34a80:	ldr	r3, [r3]
   34a84:	cmp	r8, r1
   34a88:	mul	ip, r2, ip
   34a8c:	mul	r0, r3, r0
   34a90:	bne	34a78 <GetDataSlab+0x12c4c>
   34a94:	ldr	r3, [sp, #28]
   34a98:	str	r0, [sl, #4]!
   34a9c:	ldr	r1, [r6]
   34aa0:	str	ip, [lr, #-4]
   34aa4:	cmp	r5, r3
   34aa8:	ldr	r3, [sp, #24]
   34aac:	ldr	r2, [r3, #4]!
   34ab0:	mla	r7, r2, r1, r7
   34ab4:	str	r3, [sp, #24]
   34ab8:	ldr	r3, [fp, #4]!
   34abc:	ldr	r2, [sp, #16]
   34ac0:	mul	r3, r3, r2
   34ac4:	str	r3, [sp, #16]
   34ac8:	bne	34a60 <GetDataSlab+0x12c34>
   34acc:	ldr	r3, [sp, #32]
   34ad0:	cmp	r3, #1
   34ad4:	ldr	r3, [sp, #8]
   34ad8:	add	r8, r3, r7, lsl #3
   34adc:	ldr	r3, [sp, #16]
   34ae0:	beq	3e5a8 <GetDataSlab+0x1c77c>
   34ae4:	cmp	r3, #0
   34ae8:	ble	30874 <GetDataSlab+0xea48>
   34aec:	ldr	r3, [r9]
   34af0:	mov	sl, #0
   34af4:	ldr	r2, [sp, #20]
   34af8:	ldr	r1, [sp, #20]
   34afc:	str	r3, [sp, #24]
   34b00:	ldr	r3, [sp, #32]
   34b04:	lsl	r2, r2, #2
   34b08:	str	r2, [sp, #36]	; 0x24
   34b0c:	mov	r2, #0
   34b10:	lsl	fp, r3, #3
   34b14:	ldr	r3, [sp, #20]
   34b18:	str	r2, [sp, #8]
   34b1c:	ldr	r2, [sp, #32]
   34b20:	sub	r3, r3, #1
   34b24:	mul	r3, r2, r3
   34b28:	ldr	r2, [sp, #36]	; 0x24
   34b2c:	str	r3, [sp, #48]	; 0x30
   34b30:	ldr	r3, [sp, #20]
   34b34:	mul	r3, r3, fp
   34b38:	str	r3, [sp, #44]	; 0x2c
   34b3c:	ldr	r3, [sp, #4]
   34b40:	add	r6, r3, r2
   34b44:	ldr	r2, [sp, #24]
   34b48:	ldr	r3, [sp, #40]	; 0x28
   34b4c:	sub	r3, r3, r2
   34b50:	lsl	r2, r2, #3
   34b54:	str	r2, [sp, #52]	; 0x34
   34b58:	ldr	r2, [sp, #32]
   34b5c:	mls	r3, r1, r2, r3
   34b60:	str	r3, [sp, #28]
   34b64:	lsl	r3, r3, #3
   34b68:	str	r3, [sp, #40]	; 0x28
   34b6c:	ldr	r3, [sp, #24]
   34b70:	cmp	r3, #0
   34b74:	beq	34b88 <GetDataSlab+0x12d5c>
   34b78:	ldr	r3, [sp, #52]	; 0x34
   34b7c:	add	r8, r8, r3
   34b80:	ldr	r3, [sp, #24]
   34b84:	add	r7, r7, r3
   34b88:	ldr	r3, [sp, #20]
   34b8c:	cmp	r3, #0
   34b90:	ble	34bd4 <GetDataSlab+0x12da8>
   34b94:	ldr	r3, [sp, #4]
   34b98:	mov	r5, r8
   34b9c:	ldr	r2, [sp, #8]
   34ba0:	add	r4, r3, r2, lsl #2
   34ba4:	ldrd	r0, [r5]
   34ba8:	add	r5, r5, fp
   34bac:	bl	4e318 <__aeabi_l2f>
   34bb0:	str	r0, [r4], #4
   34bb4:	cmp	r6, r4
   34bb8:	bne	34ba4 <GetDataSlab+0x12d78>
   34bbc:	ldr	r3, [sp, #32]
   34bc0:	ldr	r2, [sp, #44]	; 0x2c
   34bc4:	add	r3, r3, r7
   34bc8:	add	r8, r8, r2
   34bcc:	ldr	r2, [sp, #48]	; 0x30
   34bd0:	add	r7, r3, r2
   34bd4:	ldr	r3, [sp, #232]	; 0xe8
   34bd8:	cmp	r3, #1
   34bdc:	ldr	r3, [sp, #28]
   34be0:	add	r7, r7, r3
   34be4:	ldr	r3, [sp, #40]	; 0x28
   34be8:	add	r8, r8, r3
   34bec:	ble	34cc4 <GetDataSlab+0x12e98>
   34bf0:	ldr	r3, [sp, #100]	; 0x64
   34bf4:	ldr	r2, [sp, #228]	; 0xe4
   34bf8:	add	r3, r3, #1
   34bfc:	ldr	r1, [r2, #4]
   34c00:	str	r3, [sp, #100]	; 0x64
   34c04:	sdiv	r2, r3, r1
   34c08:	mls	r3, r1, r2, r3
   34c0c:	cmp	r3, #0
   34c10:	bne	34cac <GetDataSlab+0x12e80>
   34c14:	add	ip, sp, #100	; 0x64
   34c18:	mov	r0, #1
   34c1c:	ldr	lr, [sp, #12]
   34c20:	ldr	r3, [sp, #228]	; 0xe4
   34c24:	add	r4, r3, #4
   34c28:	b	34c70 <GetDataSlab+0x12e44>
   34c2c:	ldr	r3, [lr, #-4]
   34c30:	ldr	r1, [r9, r0, lsl #2]
   34c34:	mla	r3, r1, r3, r2
   34c38:	add	r8, r8, r3, lsl #3
   34c3c:	add	r7, r7, r3
   34c40:	ldr	r3, [sp, #232]	; 0xe8
   34c44:	add	r0, r0, #1
   34c48:	cmp	r3, r0
   34c4c:	beq	34cc4 <GetDataSlab+0x12e98>
   34c50:	ldr	r3, [ip]
   34c54:	ldr	r1, [r4, #4]!
   34c58:	add	r3, r3, #1
   34c5c:	sdiv	r2, r3, r1
   34c60:	str	r3, [ip]
   34c64:	mls	r3, r1, r2, r3
   34c68:	cmp	r3, #0
   34c6c:	bne	34cb0 <GetDataSlab+0x12e84>
   34c70:	ldr	r2, [lr, #4]!
   34c74:	str	sl, [ip], #4
   34c78:	sdiv	r3, r7, r2
   34c7c:	mls	r3, r2, r3, r7
   34c80:	cmp	r3, #0
   34c84:	sub	r2, r2, r3
   34c88:	bne	34c2c <GetDataSlab+0x12e00>
   34c8c:	ldr	r3, [r9, r0, lsl #2]
   34c90:	cmp	r3, #0
   34c94:	beq	34c40 <GetDataSlab+0x12e14>
   34c98:	ldr	r2, [lr, #-4]
   34c9c:	mul	r3, r2, r3
   34ca0:	add	r8, r8, r3, lsl #3
   34ca4:	add	r7, r7, r3
   34ca8:	b	34c40 <GetDataSlab+0x12e14>
   34cac:	mov	r0, #1
   34cb0:	add	r3, sp, #176	; 0xb0
   34cb4:	add	r3, r3, r0, lsl #2
   34cb8:	ldr	r3, [r3, #-120]	; 0xffffff88
   34cbc:	add	r8, r8, r3, lsl #3
   34cc0:	add	r7, r7, r3
   34cc4:	ldr	r3, [sp, #8]
   34cc8:	ldr	r2, [sp, #20]
   34ccc:	add	r3, r3, r2
   34cd0:	ldr	r2, [sp, #16]
   34cd4:	str	r3, [sp, #8]
   34cd8:	ldr	r3, [sp, #36]	; 0x24
   34cdc:	add	r6, r6, r3
   34ce0:	ldr	r3, [sp, #8]
   34ce4:	cmp	r3, r2
   34ce8:	blt	34b6c <GetDataSlab+0x12d40>
   34cec:	b	30874 <GetDataSlab+0xea48>
   34cf0:	cmp	r3, #0
   34cf4:	ble	30874 <GetDataSlab+0xea48>
   34cf8:	ldr	r3, [sp, #20]
   34cfc:	mov	r8, #0
   34d00:	mov	r7, r8
   34d04:	ldr	sl, [r9]
   34d08:	lsl	r3, r3, #2
   34d0c:	str	r3, [sp, #12]
   34d10:	ldr	r3, [sp, #36]	; 0x24
   34d14:	sub	fp, r3, sl
   34d18:	lsl	r3, sl, #2
   34d1c:	str	r3, [sp, #24]
   34d20:	lsl	r3, fp, #2
   34d24:	str	r3, [sp, #8]
   34d28:	cmp	sl, #0
   34d2c:	beq	34d3c <GetDataSlab+0x12f10>
   34d30:	ldr	r3, [sp, #24]
   34d34:	add	r4, r4, sl
   34d38:	add	r6, r6, r3
   34d3c:	ldr	r3, [sp, #20]
   34d40:	cmp	r3, #0
   34d44:	ble	34d74 <GetDataSlab+0x12f48>
   34d48:	ldr	r3, [sp, #4]
   34d4c:	mov	r2, r6
   34d50:	add	r1, r3, r8, lsl #2
   34d54:	ldr	r3, [sp, #12]
   34d58:	add	r0, r6, r3
   34d5c:	ldr	r3, [r2], #4
   34d60:	vmov	s15, r3
   34d64:	cmp	r0, r2
   34d68:	vcvt.f32.s32	s15, s15
   34d6c:	vstmia	r1!, {s15}
   34d70:	bne	34d5c <GetDataSlab+0x12f30>
   34d74:	ldr	r3, [sp, #232]	; 0xe8
   34d78:	add	r4, r4, fp
   34d7c:	cmp	r3, #1
   34d80:	ldr	r3, [sp, #8]
   34d84:	add	r6, r6, r3
   34d88:	ble	34e60 <GetDataSlab+0x13034>
   34d8c:	ldr	r3, [sp, #100]	; 0x64
   34d90:	ldr	r2, [sp, #228]	; 0xe4
   34d94:	add	r3, r3, #1
   34d98:	ldr	r1, [r2, #4]
   34d9c:	str	r3, [sp, #100]	; 0x64
   34da0:	sdiv	r2, r3, r1
   34da4:	mls	r3, r1, r2, r3
   34da8:	cmp	r3, #0
   34dac:	bne	34e48 <GetDataSlab+0x1301c>
   34db0:	ldr	r3, [sp, #228]	; 0xe4
   34db4:	add	ip, sp, #100	; 0x64
   34db8:	add	lr, sp, #140	; 0x8c
   34dbc:	mov	r0, #1
   34dc0:	add	r5, r3, #4
   34dc4:	b	34e0c <GetDataSlab+0x12fe0>
   34dc8:	ldr	r3, [lr, #-8]
   34dcc:	ldr	r1, [r9, r0, lsl #2]
   34dd0:	mla	r3, r1, r3, r2
   34dd4:	add	r6, r6, r3, lsl #2
   34dd8:	add	r4, r4, r3
   34ddc:	ldr	r3, [sp, #232]	; 0xe8
   34de0:	add	r0, r0, #1
   34de4:	cmp	r3, r0
   34de8:	beq	34e60 <GetDataSlab+0x13034>
   34dec:	ldr	r3, [ip]
   34df0:	ldr	r1, [r5, #4]!
   34df4:	add	r3, r3, #1
   34df8:	sdiv	r2, r3, r1
   34dfc:	str	r3, [ip]
   34e00:	mls	r3, r1, r2, r3
   34e04:	cmp	r3, #0
   34e08:	bne	34e4c <GetDataSlab+0x13020>
   34e0c:	ldr	r2, [lr], #4
   34e10:	str	r7, [ip], #4
   34e14:	sdiv	r3, r4, r2
   34e18:	mls	r3, r2, r3, r4
   34e1c:	cmp	r3, #0
   34e20:	sub	r2, r2, r3
   34e24:	bne	34dc8 <GetDataSlab+0x12f9c>
   34e28:	ldr	r3, [r9, r0, lsl #2]
   34e2c:	cmp	r3, #0
   34e30:	beq	34ddc <GetDataSlab+0x12fb0>
   34e34:	ldr	r2, [lr, #-8]
   34e38:	mul	r3, r2, r3
   34e3c:	add	r6, r6, r3, lsl #2
   34e40:	add	r4, r4, r3
   34e44:	b	34ddc <GetDataSlab+0x12fb0>
   34e48:	mov	r0, #1
   34e4c:	add	r3, sp, #176	; 0xb0
   34e50:	add	r3, r3, r0, lsl #2
   34e54:	ldr	r3, [r3, #-120]	; 0xffffff88
   34e58:	add	r6, r6, r3, lsl #2
   34e5c:	add	r4, r4, r3
   34e60:	ldr	r3, [sp, #20]
   34e64:	add	r8, r8, r3
   34e68:	ldr	r3, [sp, #16]
   34e6c:	cmp	r8, r3
   34e70:	blt	34d28 <GetDataSlab+0x12efc>
   34e74:	b	30874 <GetDataSlab+0xea48>
   34e78:	ldr	r3, [sl]
   34e7c:	str	r3, [sp, #32]
   34e80:	ldr	r3, [sp, #232]	; 0xe8
   34e84:	cmp	r3, #1
   34e88:	ldr	r3, [r8]
   34e8c:	str	r3, [sp, #36]	; 0x24
   34e90:	ldr	r3, [sp, #228]	; 0xe4
   34e94:	ldr	r3, [r3]
   34e98:	str	r3, [sp, #20]
   34e9c:	ldr	r3, [sp, #32]
   34ea0:	sub	r3, r3, #1
   34ea4:	str	r3, [sp, #56]	; 0x38
   34ea8:	ldr	r3, [sp, #36]	; 0x24
   34eac:	str	r3, [sp, #136]	; 0x88
   34eb0:	ble	402c4 <GetDataSlab+0x1e498>
   34eb4:	add	r6, sl, #4
   34eb8:	ldr	fp, [sp, #228]	; 0xe4
   34ebc:	add	lr, sp, #60	; 0x3c
   34ec0:	mov	r5, r8
   34ec4:	mov	r4, #0
   34ec8:	str	r9, [sp, #24]
   34ecc:	ldr	r3, [sp, #232]	; 0xe8
   34ed0:	add	r3, sl, r3, lsl #2
   34ed4:	ldr	sl, [sp, #12]
   34ed8:	str	r3, [sp, #28]
   34edc:	ldr	r3, [sp, #20]
   34ee0:	str	r3, [sp, #16]
   34ee4:	ldr	r3, [r6], #4
   34ee8:	mov	r7, sl
   34eec:	ldr	r0, [r5], #4
   34ef0:	sub	ip, r3, #1
   34ef4:	mov	r1, r5
   34ef8:	str	ip, [lr], #4
   34efc:	mov	r3, r1
   34f00:	ldr	r2, [r1, #-4]!
   34f04:	ldr	r3, [r3]
   34f08:	cmp	r1, r8
   34f0c:	mul	ip, r2, ip
   34f10:	mul	r0, r3, r0
   34f14:	bne	34efc <GetDataSlab+0x130d0>
   34f18:	ldr	r3, [sp, #28]
   34f1c:	str	r0, [sl, #4]!
   34f20:	ldr	r1, [r7]
   34f24:	str	ip, [lr, #-4]
   34f28:	cmp	r6, r3
   34f2c:	ldr	r3, [sp, #24]
   34f30:	ldr	r2, [r3, #4]!
   34f34:	mla	r4, r2, r1, r4
   34f38:	str	r3, [sp, #24]
   34f3c:	ldr	r3, [fp, #4]!
   34f40:	ldr	r2, [sp, #16]
   34f44:	mul	r3, r3, r2
   34f48:	str	r3, [sp, #16]
   34f4c:	bne	34ee4 <GetDataSlab+0x130b8>
   34f50:	ldr	r3, [sp, #32]
   34f54:	cmp	r3, #1
   34f58:	ldr	r3, [sp, #8]
   34f5c:	add	r6, r3, r4, lsl #3
   34f60:	ldr	r3, [sp, #16]
   34f64:	beq	3e428 <GetDataSlab+0x1c5fc>
   34f68:	cmp	r3, #0
   34f6c:	ble	30874 <GetDataSlab+0xea48>
   34f70:	ldr	r3, [r9]
   34f74:	mov	fp, #0
   34f78:	mov	sl, fp
   34f7c:	ldr	r2, [sp, #20]
   34f80:	ldr	r1, [sp, #20]
   34f84:	str	r3, [sp, #8]
   34f88:	ldr	r3, [sp, #32]
   34f8c:	lsl	r2, r2, #1
   34f90:	str	r2, [sp, #28]
   34f94:	lsl	r7, r3, #3
   34f98:	ldr	r3, [sp, #20]
   34f9c:	ldr	r2, [sp, #32]
   34fa0:	sub	r3, r3, #1
   34fa4:	mul	r3, r2, r3
   34fa8:	ldr	r2, [sp, #28]
   34fac:	str	r3, [sp, #44]	; 0x2c
   34fb0:	ldr	r3, [sp, #20]
   34fb4:	mul	r3, r3, r7
   34fb8:	str	r3, [sp, #40]	; 0x28
   34fbc:	ldr	r3, [sp, #4]
   34fc0:	add	r8, r3, r2
   34fc4:	ldr	r2, [sp, #8]
   34fc8:	ldr	r3, [sp, #36]	; 0x24
   34fcc:	sub	r3, r3, r2
   34fd0:	lsl	r2, r2, #3
   34fd4:	str	r2, [sp, #48]	; 0x30
   34fd8:	ldr	r2, [sp, #32]
   34fdc:	mls	r3, r1, r2, r3
   34fe0:	str	r3, [sp, #24]
   34fe4:	lsl	r3, r3, #3
   34fe8:	str	r3, [sp, #36]	; 0x24
   34fec:	ldr	r3, [sp, #8]
   34ff0:	cmp	r3, #0
   34ff4:	beq	35008 <GetDataSlab+0x131dc>
   34ff8:	ldr	r3, [sp, #48]	; 0x30
   34ffc:	add	r6, r6, r3
   35000:	ldr	r3, [sp, #8]
   35004:	add	r4, r4, r3
   35008:	ldr	r3, [sp, #20]
   3500c:	cmp	r3, #0
   35010:	ble	35048 <GetDataSlab+0x1321c>
   35014:	ldr	r3, [sp, #4]
   35018:	mov	r1, r6
   3501c:	add	r2, r3, fp, lsl #1
   35020:	ldr	r3, [r1], r7
   35024:	strh	r3, [r2], #2
   35028:	cmp	r2, r8
   3502c:	bne	35020 <GetDataSlab+0x131f4>
   35030:	ldr	r3, [sp, #32]
   35034:	ldr	r2, [sp, #40]	; 0x28
   35038:	add	r3, r3, r4
   3503c:	add	r6, r6, r2
   35040:	ldr	r2, [sp, #44]	; 0x2c
   35044:	add	r4, r3, r2
   35048:	ldr	r3, [sp, #232]	; 0xe8
   3504c:	cmp	r3, #1
   35050:	ldr	r3, [sp, #24]
   35054:	add	r4, r4, r3
   35058:	ldr	r3, [sp, #36]	; 0x24
   3505c:	add	r6, r6, r3
   35060:	ble	35138 <GetDataSlab+0x1330c>
   35064:	ldr	r3, [sp, #100]	; 0x64
   35068:	ldr	r2, [sp, #228]	; 0xe4
   3506c:	add	r3, r3, #1
   35070:	ldr	r1, [r2, #4]
   35074:	str	r3, [sp, #100]	; 0x64
   35078:	sdiv	r2, r3, r1
   3507c:	mls	r3, r1, r2, r3
   35080:	cmp	r3, #0
   35084:	bne	35120 <GetDataSlab+0x132f4>
   35088:	add	ip, sp, #100	; 0x64
   3508c:	mov	r0, #1
   35090:	ldr	lr, [sp, #12]
   35094:	ldr	r3, [sp, #228]	; 0xe4
   35098:	add	r5, r3, #4
   3509c:	b	350e4 <GetDataSlab+0x132b8>
   350a0:	ldr	r3, [lr, #-4]
   350a4:	ldr	r1, [r9, r0, lsl #2]
   350a8:	mla	r3, r1, r3, r2
   350ac:	add	r6, r6, r3, lsl #3
   350b0:	add	r4, r4, r3
   350b4:	ldr	r3, [sp, #232]	; 0xe8
   350b8:	add	r0, r0, #1
   350bc:	cmp	r3, r0
   350c0:	beq	35138 <GetDataSlab+0x1330c>
   350c4:	ldr	r3, [ip]
   350c8:	ldr	r1, [r5, #4]!
   350cc:	add	r3, r3, #1
   350d0:	sdiv	r2, r3, r1
   350d4:	str	r3, [ip]
   350d8:	mls	r3, r1, r2, r3
   350dc:	cmp	r3, #0
   350e0:	bne	35124 <GetDataSlab+0x132f8>
   350e4:	ldr	r2, [lr, #4]!
   350e8:	str	sl, [ip], #4
   350ec:	sdiv	r3, r4, r2
   350f0:	mls	r3, r2, r3, r4
   350f4:	cmp	r3, #0
   350f8:	sub	r2, r2, r3
   350fc:	bne	350a0 <GetDataSlab+0x13274>
   35100:	ldr	r3, [r9, r0, lsl #2]
   35104:	cmp	r3, #0
   35108:	beq	350b4 <GetDataSlab+0x13288>
   3510c:	ldr	r2, [lr, #-4]
   35110:	mul	r3, r2, r3
   35114:	add	r6, r6, r3, lsl #3
   35118:	add	r4, r4, r3
   3511c:	b	350b4 <GetDataSlab+0x13288>
   35120:	mov	r0, #1
   35124:	add	r3, sp, #176	; 0xb0
   35128:	add	r3, r3, r0, lsl #2
   3512c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35130:	add	r6, r6, r3, lsl #3
   35134:	add	r4, r4, r3
   35138:	ldr	r3, [sp, #20]
   3513c:	add	fp, fp, r3
   35140:	ldr	r3, [sp, #28]
   35144:	add	r8, r8, r3
   35148:	ldr	r3, [sp, #16]
   3514c:	cmp	fp, r3
   35150:	blt	34fec <GetDataSlab+0x131c0>
   35154:	b	30874 <GetDataSlab+0xea48>
   35158:	cmp	r3, #0
   3515c:	ble	30874 <GetDataSlab+0xea48>
   35160:	ldr	r3, [sp, #20]
   35164:	mov	r8, #0
   35168:	mov	r7, r8
   3516c:	ldr	sl, [r9]
   35170:	lsl	r3, r3, #3
   35174:	str	r3, [sp, #12]
   35178:	ldr	r3, [sp, #36]	; 0x24
   3517c:	sub	fp, r3, sl
   35180:	lsl	r3, sl, #3
   35184:	str	r3, [sp, #24]
   35188:	lsl	r3, fp, #3
   3518c:	str	r3, [sp, #8]
   35190:	cmp	sl, #0
   35194:	beq	351a4 <GetDataSlab+0x13378>
   35198:	ldr	r3, [sp, #24]
   3519c:	add	r4, r4, sl
   351a0:	add	r6, r6, r3
   351a4:	ldr	r3, [sp, #20]
   351a8:	cmp	r3, #0
   351ac:	ble	351dc <GetDataSlab+0x133b0>
   351b0:	ldr	r3, [sp, #4]
   351b4:	ldr	r2, [sp, #12]
   351b8:	add	r1, r3, r8, lsl #1
   351bc:	mov	r3, r6
   351c0:	add	r0, r6, r2
   351c4:	vldmia	r3!, {d7}
   351c8:	vcvt.u32.f64	s15, d7
   351cc:	cmp	r3, r0
   351d0:	vmov	r2, s15
   351d4:	strh	r2, [r1], #2
   351d8:	bne	351c4 <GetDataSlab+0x13398>
   351dc:	ldr	r3, [sp, #232]	; 0xe8
   351e0:	add	r4, r4, fp
   351e4:	cmp	r3, #1
   351e8:	ldr	r3, [sp, #8]
   351ec:	add	r6, r6, r3
   351f0:	ble	352c8 <GetDataSlab+0x1349c>
   351f4:	ldr	r3, [sp, #100]	; 0x64
   351f8:	ldr	r2, [sp, #228]	; 0xe4
   351fc:	add	r3, r3, #1
   35200:	ldr	r1, [r2, #4]
   35204:	str	r3, [sp, #100]	; 0x64
   35208:	sdiv	r2, r3, r1
   3520c:	mls	r3, r1, r2, r3
   35210:	cmp	r3, #0
   35214:	bne	352b0 <GetDataSlab+0x13484>
   35218:	ldr	r3, [sp, #228]	; 0xe4
   3521c:	add	ip, sp, #100	; 0x64
   35220:	add	lr, sp, #140	; 0x8c
   35224:	mov	r0, #1
   35228:	add	r5, r3, #4
   3522c:	b	35274 <GetDataSlab+0x13448>
   35230:	ldr	r3, [lr, #-8]
   35234:	ldr	r1, [r9, r0, lsl #2]
   35238:	mla	r3, r1, r3, r2
   3523c:	add	r6, r6, r3, lsl #3
   35240:	add	r4, r4, r3
   35244:	ldr	r3, [sp, #232]	; 0xe8
   35248:	add	r0, r0, #1
   3524c:	cmp	r3, r0
   35250:	beq	352c8 <GetDataSlab+0x1349c>
   35254:	ldr	r3, [ip]
   35258:	ldr	r1, [r5, #4]!
   3525c:	add	r3, r3, #1
   35260:	sdiv	r2, r3, r1
   35264:	str	r3, [ip]
   35268:	mls	r3, r1, r2, r3
   3526c:	cmp	r3, #0
   35270:	bne	352b4 <GetDataSlab+0x13488>
   35274:	ldr	r2, [lr], #4
   35278:	str	r7, [ip], #4
   3527c:	sdiv	r3, r4, r2
   35280:	mls	r3, r2, r3, r4
   35284:	cmp	r3, #0
   35288:	sub	r2, r2, r3
   3528c:	bne	35230 <GetDataSlab+0x13404>
   35290:	ldr	r3, [r9, r0, lsl #2]
   35294:	cmp	r3, #0
   35298:	beq	35244 <GetDataSlab+0x13418>
   3529c:	ldr	r2, [lr, #-8]
   352a0:	mul	r3, r2, r3
   352a4:	add	r6, r6, r3, lsl #3
   352a8:	add	r4, r4, r3
   352ac:	b	35244 <GetDataSlab+0x13418>
   352b0:	mov	r0, #1
   352b4:	add	r3, sp, #176	; 0xb0
   352b8:	add	r3, r3, r0, lsl #2
   352bc:	ldr	r3, [r3, #-120]	; 0xffffff88
   352c0:	add	r6, r6, r3, lsl #3
   352c4:	add	r4, r4, r3
   352c8:	ldr	r3, [sp, #20]
   352cc:	add	r8, r8, r3
   352d0:	ldr	r3, [sp, #16]
   352d4:	cmp	r8, r3
   352d8:	blt	35190 <GetDataSlab+0x13364>
   352dc:	b	30874 <GetDataSlab+0xea48>
   352e0:	cmp	r3, #0
   352e4:	ble	30874 <GetDataSlab+0xea48>
   352e8:	ldr	r3, [r9]
   352ec:	mov	sl, #0
   352f0:	mov	r7, sl
   352f4:	str	r3, [sp, #8]
   352f8:	ldr	r3, [sp, #8]
   352fc:	cmp	r3, #0
   35300:	addne	r5, r5, r3, lsl #2
   35304:	addne	lr, lr, r3
   35308:	cmp	fp, #0
   3530c:	ble	35350 <GetDataSlab+0x13524>
   35310:	ldr	r3, [sp, #4]
   35314:	mov	r1, r5
   35318:	add	r2, r3, sl, lsl #2
   3531c:	mov	r3, #0
   35320:	vldmia	r1!, {s15}
   35324:	add	r3, r3, #1
   35328:	ldr	r0, [sp, #228]	; 0xe4
   3532c:	vcvt.s32.f32	s15, s15
   35330:	vstmia	r2!, {s15}
   35334:	ldr	fp, [r0]
   35338:	cmp	fp, r3
   3533c:	bgt	35320 <GetDataSlab+0x134f4>
   35340:	ldr	r3, [r9]
   35344:	str	r3, [sp, #8]
   35348:	ldr	r3, [r8]
   3534c:	str	r3, [sp, #16]
   35350:	ldr	r2, [sp, #8]
   35354:	ldr	r3, [sp, #232]	; 0xe8
   35358:	cmp	r3, #1
   3535c:	ldr	r3, [sp, #16]
   35360:	sub	r3, r3, r2
   35364:	add	lr, lr, r3
   35368:	add	r5, r5, r3, lsl #2
   3536c:	ble	35444 <GetDataSlab+0x13618>
   35370:	ldr	r3, [sp, #100]	; 0x64
   35374:	ldr	r2, [sp, #228]	; 0xe4
   35378:	add	r3, r3, #1
   3537c:	ldr	r1, [r2, #4]
   35380:	str	r3, [sp, #100]	; 0x64
   35384:	sdiv	r2, r3, r1
   35388:	mls	r3, r1, r2, r3
   3538c:	cmp	r3, #0
   35390:	bne	3542c <GetDataSlab+0x13600>
   35394:	ldr	r3, [sp, #228]	; 0xe4
   35398:	add	ip, sp, #100	; 0x64
   3539c:	add	r4, sp, #140	; 0x8c
   353a0:	mov	r0, #1
   353a4:	add	r6, r3, #4
   353a8:	b	353f0 <GetDataSlab+0x135c4>
   353ac:	ldr	r3, [r4, #-8]
   353b0:	ldr	r1, [r9, r0, lsl #2]
   353b4:	mla	r3, r1, r3, r2
   353b8:	add	r5, r5, r3, lsl #2
   353bc:	add	lr, lr, r3
   353c0:	ldr	r3, [sp, #232]	; 0xe8
   353c4:	add	r0, r0, #1
   353c8:	cmp	r3, r0
   353cc:	beq	35444 <GetDataSlab+0x13618>
   353d0:	ldr	r3, [ip]
   353d4:	ldr	r1, [r6, #4]!
   353d8:	add	r3, r3, #1
   353dc:	sdiv	r2, r3, r1
   353e0:	str	r3, [ip]
   353e4:	mls	r3, r1, r2, r3
   353e8:	cmp	r3, #0
   353ec:	bne	35430 <GetDataSlab+0x13604>
   353f0:	ldr	r2, [r4], #4
   353f4:	str	r7, [ip], #4
   353f8:	sdiv	r3, lr, r2
   353fc:	mls	r3, r2, r3, lr
   35400:	cmp	r3, #0
   35404:	sub	r2, r2, r3
   35408:	bne	353ac <GetDataSlab+0x13580>
   3540c:	ldr	r3, [r9, r0, lsl #2]
   35410:	cmp	r3, #0
   35414:	beq	353c0 <GetDataSlab+0x13594>
   35418:	ldr	r2, [r4, #-8]
   3541c:	mul	r3, r2, r3
   35420:	add	r5, r5, r3, lsl #2
   35424:	add	lr, lr, r3
   35428:	b	353c0 <GetDataSlab+0x13594>
   3542c:	mov	r0, #1
   35430:	add	r3, sp, #176	; 0xb0
   35434:	add	r3, r3, r0, lsl #2
   35438:	ldr	r3, [r3, #-120]	; 0xffffff88
   3543c:	add	r5, r5, r3, lsl #2
   35440:	add	lr, lr, r3
   35444:	ldr	r3, [sp, #20]
   35448:	add	sl, sl, fp
   3544c:	cmp	sl, r3
   35450:	blt	352f8 <GetDataSlab+0x134cc>
   35454:	b	30874 <GetDataSlab+0xea48>
   35458:	cmp	r3, #0
   3545c:	ble	30874 <GetDataSlab+0xea48>
   35460:	ldr	r3, [r9]
   35464:	mov	sl, #0
   35468:	mov	r7, sl
   3546c:	str	r3, [sp, #8]
   35470:	ldr	r3, [sp, #8]
   35474:	cmp	r3, #0
   35478:	addne	r5, r5, r3
   3547c:	addne	lr, lr, r3
   35480:	cmp	fp, #0
   35484:	ble	354cc <GetDataSlab+0x136a0>
   35488:	ldr	r1, [sp, #4]
   3548c:	sub	r2, sl, #1
   35490:	sub	r3, r5, #1
   35494:	add	r2, r1, r2
   35498:	ldrb	r0, [r3, #1]
   3549c:	add	r1, r3, #2
   354a0:	add	r3, r3, #1
   354a4:	sub	r1, r1, r5
   354a8:	strb	r0, [r2, #1]!
   354ac:	ldr	r0, [sp, #228]	; 0xe4
   354b0:	ldr	fp, [r0]
   354b4:	cmp	fp, r1
   354b8:	bgt	35498 <GetDataSlab+0x1366c>
   354bc:	ldr	r3, [r9]
   354c0:	str	r3, [sp, #8]
   354c4:	ldr	r3, [r8]
   354c8:	str	r3, [sp, #16]
   354cc:	ldr	r2, [sp, #8]
   354d0:	ldr	r3, [sp, #232]	; 0xe8
   354d4:	cmp	r3, #1
   354d8:	ldr	r3, [sp, #16]
   354dc:	sub	r3, r3, r2
   354e0:	add	lr, lr, r3
   354e4:	add	r5, r5, r3
   354e8:	ble	355c0 <GetDataSlab+0x13794>
   354ec:	ldr	r3, [sp, #100]	; 0x64
   354f0:	ldr	r2, [sp, #228]	; 0xe4
   354f4:	add	r3, r3, #1
   354f8:	ldr	r1, [r2, #4]
   354fc:	str	r3, [sp, #100]	; 0x64
   35500:	sdiv	r2, r3, r1
   35504:	mls	r3, r1, r2, r3
   35508:	cmp	r3, #0
   3550c:	bne	355a8 <GetDataSlab+0x1377c>
   35510:	ldr	r3, [sp, #228]	; 0xe4
   35514:	add	ip, sp, #100	; 0x64
   35518:	add	r4, sp, #140	; 0x8c
   3551c:	mov	r0, #1
   35520:	add	r6, r3, #4
   35524:	b	3556c <GetDataSlab+0x13740>
   35528:	ldr	r3, [r4, #-8]
   3552c:	ldr	r1, [r9, r0, lsl #2]
   35530:	mla	r3, r1, r3, r2
   35534:	add	r5, r5, r3
   35538:	add	lr, lr, r3
   3553c:	ldr	r3, [sp, #232]	; 0xe8
   35540:	add	r0, r0, #1
   35544:	cmp	r3, r0
   35548:	beq	355c0 <GetDataSlab+0x13794>
   3554c:	ldr	r3, [ip]
   35550:	ldr	r1, [r6, #4]!
   35554:	add	r3, r3, #1
   35558:	sdiv	r2, r3, r1
   3555c:	str	r3, [ip]
   35560:	mls	r3, r1, r2, r3
   35564:	cmp	r3, #0
   35568:	bne	355ac <GetDataSlab+0x13780>
   3556c:	ldr	r2, [r4], #4
   35570:	str	r7, [ip], #4
   35574:	sdiv	r3, lr, r2
   35578:	mls	r3, r2, r3, lr
   3557c:	cmp	r3, #0
   35580:	sub	r2, r2, r3
   35584:	bne	35528 <GetDataSlab+0x136fc>
   35588:	ldr	r3, [r9, r0, lsl #2]
   3558c:	cmp	r3, #0
   35590:	beq	3553c <GetDataSlab+0x13710>
   35594:	ldr	r2, [r4, #-8]
   35598:	mul	r3, r2, r3
   3559c:	add	r5, r5, r3
   355a0:	add	lr, lr, r3
   355a4:	b	3553c <GetDataSlab+0x13710>
   355a8:	mov	r0, #1
   355ac:	add	r3, sp, #176	; 0xb0
   355b0:	add	r3, r3, r0, lsl #2
   355b4:	ldr	r3, [r3, #-120]	; 0xffffff88
   355b8:	add	lr, lr, r3
   355bc:	add	r5, r5, r3
   355c0:	ldr	r3, [sp, #20]
   355c4:	add	sl, sl, fp
   355c8:	cmp	sl, r3
   355cc:	blt	35470 <GetDataSlab+0x13644>
   355d0:	b	30874 <GetDataSlab+0xea48>
   355d4:	cmp	r3, #0
   355d8:	ble	30874 <GetDataSlab+0xea48>
   355dc:	ldr	r3, [r9]
   355e0:	mov	sl, #0
   355e4:	mov	r7, sl
   355e8:	str	r3, [sp, #8]
   355ec:	ldr	r3, [sp, #8]
   355f0:	cmp	r3, #0
   355f4:	addne	r5, r5, r3, lsl #1
   355f8:	addne	r4, r4, r3
   355fc:	cmp	fp, #0
   35600:	ble	35640 <GetDataSlab+0x13814>
   35604:	ldr	r3, [sp, #4]
   35608:	sub	r1, r5, #2
   3560c:	add	r0, r3, sl
   35610:	mov	r3, r0
   35614:	ldrh	r2, [r1, #2]!
   35618:	ldr	ip, [sp, #228]	; 0xe4
   3561c:	strb	r2, [r3], #1
   35620:	sub	r2, r3, r0
   35624:	ldr	fp, [ip]
   35628:	cmp	fp, r2
   3562c:	bgt	35614 <GetDataSlab+0x137e8>
   35630:	ldr	r3, [r9]
   35634:	str	r3, [sp, #8]
   35638:	ldr	r3, [r8]
   3563c:	str	r3, [sp, #16]
   35640:	ldr	r2, [sp, #8]
   35644:	ldr	r3, [sp, #232]	; 0xe8
   35648:	cmp	r3, #1
   3564c:	ldr	r3, [sp, #16]
   35650:	sub	r3, r3, r2
   35654:	add	r4, r4, r3
   35658:	add	r5, r5, r3, lsl #1
   3565c:	ble	35734 <GetDataSlab+0x13908>
   35660:	ldr	r3, [sp, #100]	; 0x64
   35664:	ldr	r2, [sp, #228]	; 0xe4
   35668:	add	r3, r3, #1
   3566c:	ldr	r1, [r2, #4]
   35670:	str	r3, [sp, #100]	; 0x64
   35674:	sdiv	r2, r3, r1
   35678:	mls	r3, r1, r2, r3
   3567c:	cmp	r3, #0
   35680:	bne	3571c <GetDataSlab+0x138f0>
   35684:	ldr	r3, [sp, #228]	; 0xe4
   35688:	add	ip, sp, #100	; 0x64
   3568c:	add	lr, sp, #140	; 0x8c
   35690:	mov	r0, #1
   35694:	add	r6, r3, #4
   35698:	b	356e0 <GetDataSlab+0x138b4>
   3569c:	ldr	r3, [lr, #-8]
   356a0:	ldr	r1, [r9, r0, lsl #2]
   356a4:	mla	r3, r1, r3, r2
   356a8:	add	r5, r5, r3, lsl #1
   356ac:	add	r4, r4, r3
   356b0:	ldr	r3, [sp, #232]	; 0xe8
   356b4:	add	r0, r0, #1
   356b8:	cmp	r3, r0
   356bc:	beq	35734 <GetDataSlab+0x13908>
   356c0:	ldr	r3, [ip]
   356c4:	ldr	r1, [r6, #4]!
   356c8:	add	r3, r3, #1
   356cc:	sdiv	r2, r3, r1
   356d0:	str	r3, [ip]
   356d4:	mls	r3, r1, r2, r3
   356d8:	cmp	r3, #0
   356dc:	bne	35720 <GetDataSlab+0x138f4>
   356e0:	ldr	r2, [lr], #4
   356e4:	str	r7, [ip], #4
   356e8:	sdiv	r3, r4, r2
   356ec:	mls	r3, r2, r3, r4
   356f0:	cmp	r3, #0
   356f4:	sub	r2, r2, r3
   356f8:	bne	3569c <GetDataSlab+0x13870>
   356fc:	ldr	r3, [r9, r0, lsl #2]
   35700:	cmp	r3, #0
   35704:	beq	356b0 <GetDataSlab+0x13884>
   35708:	ldr	r2, [lr, #-8]
   3570c:	mul	r3, r2, r3
   35710:	add	r5, r5, r3, lsl #1
   35714:	add	r4, r4, r3
   35718:	b	356b0 <GetDataSlab+0x13884>
   3571c:	mov	r0, #1
   35720:	add	r3, sp, #176	; 0xb0
   35724:	add	r3, r3, r0, lsl #2
   35728:	ldr	r3, [r3, #-120]	; 0xffffff88
   3572c:	add	r5, r5, r3, lsl #1
   35730:	add	r4, r4, r3
   35734:	ldr	r3, [sp, #20]
   35738:	add	sl, sl, fp
   3573c:	cmp	sl, r3
   35740:	blt	355ec <GetDataSlab+0x137c0>
   35744:	b	30874 <GetDataSlab+0xea48>
   35748:	cmp	r3, #0
   3574c:	ble	30874 <GetDataSlab+0xea48>
   35750:	ldr	r3, [sp, #20]
   35754:	mov	r8, #0
   35758:	mov	r7, r8
   3575c:	ldr	sl, [r9]
   35760:	lsl	r3, r3, #2
   35764:	str	r3, [sp, #12]
   35768:	ldr	r3, [sp, #36]	; 0x24
   3576c:	sub	fp, r3, sl
   35770:	lsl	r3, sl, #2
   35774:	str	r3, [sp, #24]
   35778:	lsl	r3, fp, #2
   3577c:	str	r3, [sp, #8]
   35780:	cmp	sl, #0
   35784:	beq	35794 <GetDataSlab+0x13968>
   35788:	ldr	r3, [sp, #24]
   3578c:	add	r4, r4, sl
   35790:	add	r6, r6, r3
   35794:	ldr	r3, [sp, #20]
   35798:	cmp	r3, #0
   3579c:	ble	357cc <GetDataSlab+0x139a0>
   357a0:	ldr	r3, [sp, #4]
   357a4:	mov	r2, r6
   357a8:	add	r1, r3, r8, lsl #2
   357ac:	ldr	r3, [sp, #12]
   357b0:	add	r0, r6, r3
   357b4:	ldr	r3, [r2], #4
   357b8:	vmov	s15, r3
   357bc:	cmp	r2, r0
   357c0:	vcvt.f32.u32	s15, s15
   357c4:	vstmia	r1!, {s15}
   357c8:	bne	357b4 <GetDataSlab+0x13988>
   357cc:	ldr	r3, [sp, #232]	; 0xe8
   357d0:	add	r4, r4, fp
   357d4:	cmp	r3, #1
   357d8:	ldr	r3, [sp, #8]
   357dc:	add	r6, r6, r3
   357e0:	ble	358b8 <GetDataSlab+0x13a8c>
   357e4:	ldr	r3, [sp, #100]	; 0x64
   357e8:	ldr	r2, [sp, #228]	; 0xe4
   357ec:	add	r3, r3, #1
   357f0:	ldr	r1, [r2, #4]
   357f4:	str	r3, [sp, #100]	; 0x64
   357f8:	sdiv	r2, r3, r1
   357fc:	mls	r3, r1, r2, r3
   35800:	cmp	r3, #0
   35804:	bne	358a0 <GetDataSlab+0x13a74>
   35808:	ldr	r3, [sp, #228]	; 0xe4
   3580c:	add	ip, sp, #100	; 0x64
   35810:	add	lr, sp, #140	; 0x8c
   35814:	mov	r0, #1
   35818:	add	r5, r3, #4
   3581c:	b	35864 <GetDataSlab+0x13a38>
   35820:	ldr	r3, [lr, #-8]
   35824:	ldr	r1, [r9, r0, lsl #2]
   35828:	mla	r3, r1, r3, r2
   3582c:	add	r6, r6, r3, lsl #2
   35830:	add	r4, r4, r3
   35834:	ldr	r3, [sp, #232]	; 0xe8
   35838:	add	r0, r0, #1
   3583c:	cmp	r3, r0
   35840:	beq	358b8 <GetDataSlab+0x13a8c>
   35844:	ldr	r3, [ip]
   35848:	ldr	r1, [r5, #4]!
   3584c:	add	r3, r3, #1
   35850:	sdiv	r2, r3, r1
   35854:	str	r3, [ip]
   35858:	mls	r3, r1, r2, r3
   3585c:	cmp	r3, #0
   35860:	bne	358a4 <GetDataSlab+0x13a78>
   35864:	ldr	r2, [lr], #4
   35868:	str	r7, [ip], #4
   3586c:	sdiv	r3, r4, r2
   35870:	mls	r3, r2, r3, r4
   35874:	cmp	r3, #0
   35878:	sub	r2, r2, r3
   3587c:	bne	35820 <GetDataSlab+0x139f4>
   35880:	ldr	r3, [r9, r0, lsl #2]
   35884:	cmp	r3, #0
   35888:	beq	35834 <GetDataSlab+0x13a08>
   3588c:	ldr	r2, [lr, #-8]
   35890:	mul	r3, r2, r3
   35894:	add	r6, r6, r3, lsl #2
   35898:	add	r4, r4, r3
   3589c:	b	35834 <GetDataSlab+0x13a08>
   358a0:	mov	r0, #1
   358a4:	add	r3, sp, #176	; 0xb0
   358a8:	add	r3, r3, r0, lsl #2
   358ac:	ldr	r3, [r3, #-120]	; 0xffffff88
   358b0:	add	r6, r6, r3, lsl #2
   358b4:	add	r4, r4, r3
   358b8:	ldr	r3, [sp, #20]
   358bc:	add	r8, r8, r3
   358c0:	ldr	r3, [sp, #16]
   358c4:	cmp	r8, r3
   358c8:	blt	35780 <GetDataSlab+0x13954>
   358cc:	b	30874 <GetDataSlab+0xea48>
   358d0:	cmp	r3, #0
   358d4:	ble	30874 <GetDataSlab+0xea48>
   358d8:	ldr	r3, [sp, #20]
   358dc:	mov	r8, #0
   358e0:	mov	r7, r8
   358e4:	ldr	sl, [r9]
   358e8:	lsl	r3, r3, #3
   358ec:	str	r3, [sp, #12]
   358f0:	ldr	r3, [sp, #36]	; 0x24
   358f4:	sub	fp, r3, sl
   358f8:	lsl	r3, sl, #3
   358fc:	str	r3, [sp, #24]
   35900:	lsl	r3, fp, #3
   35904:	str	r3, [sp, #8]
   35908:	cmp	sl, #0
   3590c:	beq	3591c <GetDataSlab+0x13af0>
   35910:	ldr	r3, [sp, #24]
   35914:	add	r4, r4, sl
   35918:	add	r6, r6, r3
   3591c:	ldr	r3, [sp, #20]
   35920:	cmp	r3, #0
   35924:	ble	35950 <GetDataSlab+0x13b24>
   35928:	ldr	r3, [sp, #4]
   3592c:	ldr	r1, [sp, #12]
   35930:	add	r2, r3, r8, lsl #2
   35934:	mov	r3, r6
   35938:	add	r1, r1, r6
   3593c:	vldmia	r3!, {d7}
   35940:	vcvt.f32.f64	s15, d7
   35944:	cmp	r3, r1
   35948:	vstmia	r2!, {s15}
   3594c:	bne	3593c <GetDataSlab+0x13b10>
   35950:	ldr	r3, [sp, #232]	; 0xe8
   35954:	add	r4, r4, fp
   35958:	cmp	r3, #1
   3595c:	ldr	r3, [sp, #8]
   35960:	add	r6, r6, r3
   35964:	ble	35a3c <GetDataSlab+0x13c10>
   35968:	ldr	r3, [sp, #100]	; 0x64
   3596c:	ldr	r2, [sp, #228]	; 0xe4
   35970:	add	r3, r3, #1
   35974:	ldr	r1, [r2, #4]
   35978:	str	r3, [sp, #100]	; 0x64
   3597c:	sdiv	r2, r3, r1
   35980:	mls	r3, r1, r2, r3
   35984:	cmp	r3, #0
   35988:	bne	35a24 <GetDataSlab+0x13bf8>
   3598c:	ldr	r3, [sp, #228]	; 0xe4
   35990:	add	ip, sp, #100	; 0x64
   35994:	add	lr, sp, #140	; 0x8c
   35998:	mov	r0, #1
   3599c:	add	r5, r3, #4
   359a0:	b	359e8 <GetDataSlab+0x13bbc>
   359a4:	ldr	r3, [lr, #-8]
   359a8:	ldr	r1, [r9, r0, lsl #2]
   359ac:	mla	r3, r1, r3, r2
   359b0:	add	r6, r6, r3, lsl #3
   359b4:	add	r4, r4, r3
   359b8:	ldr	r3, [sp, #232]	; 0xe8
   359bc:	add	r0, r0, #1
   359c0:	cmp	r3, r0
   359c4:	beq	35a3c <GetDataSlab+0x13c10>
   359c8:	ldr	r3, [ip]
   359cc:	ldr	r1, [r5, #4]!
   359d0:	add	r3, r3, #1
   359d4:	sdiv	r2, r3, r1
   359d8:	str	r3, [ip]
   359dc:	mls	r3, r1, r2, r3
   359e0:	cmp	r3, #0
   359e4:	bne	35a28 <GetDataSlab+0x13bfc>
   359e8:	ldr	r2, [lr], #4
   359ec:	str	r7, [ip], #4
   359f0:	sdiv	r3, r4, r2
   359f4:	mls	r3, r2, r3, r4
   359f8:	cmp	r3, #0
   359fc:	sub	r2, r2, r3
   35a00:	bne	359a4 <GetDataSlab+0x13b78>
   35a04:	ldr	r3, [r9, r0, lsl #2]
   35a08:	cmp	r3, #0
   35a0c:	beq	359b8 <GetDataSlab+0x13b8c>
   35a10:	ldr	r2, [lr, #-8]
   35a14:	mul	r3, r2, r3
   35a18:	add	r6, r6, r3, lsl #3
   35a1c:	add	r4, r4, r3
   35a20:	b	359b8 <GetDataSlab+0x13b8c>
   35a24:	mov	r0, #1
   35a28:	add	r3, sp, #176	; 0xb0
   35a2c:	add	r3, r3, r0, lsl #2
   35a30:	ldr	r3, [r3, #-120]	; 0xffffff88
   35a34:	add	r6, r6, r3, lsl #3
   35a38:	add	r4, r4, r3
   35a3c:	ldr	r3, [sp, #20]
   35a40:	add	r8, r8, r3
   35a44:	ldr	r3, [sp, #16]
   35a48:	cmp	r8, r3
   35a4c:	blt	35908 <GetDataSlab+0x13adc>
   35a50:	b	30874 <GetDataSlab+0xea48>
   35a54:	cmp	r3, #0
   35a58:	ble	30874 <GetDataSlab+0xea48>
   35a5c:	ldr	r3, [sp, #20]
   35a60:	mov	r8, #0
   35a64:	mov	r7, r8
   35a68:	ldr	sl, [r9]
   35a6c:	lsl	r3, r3, #2
   35a70:	str	r3, [sp, #12]
   35a74:	ldr	r3, [sp, #36]	; 0x24
   35a78:	sub	fp, r3, sl
   35a7c:	lsl	r3, sl, #2
   35a80:	str	r3, [sp, #24]
   35a84:	lsl	r3, fp, #2
   35a88:	str	r3, [sp, #8]
   35a8c:	cmp	sl, #0
   35a90:	beq	35aa0 <GetDataSlab+0x13c74>
   35a94:	ldr	r3, [sp, #24]
   35a98:	add	r4, r4, sl
   35a9c:	add	r6, r6, r3
   35aa0:	ldr	r3, [sp, #20]
   35aa4:	cmp	r3, #0
   35aa8:	ble	35ad0 <GetDataSlab+0x13ca4>
   35aac:	ldr	r3, [sp, #4]
   35ab0:	mov	r2, r6
   35ab4:	add	r1, r3, r8, lsl #2
   35ab8:	ldr	r3, [sp, #12]
   35abc:	add	r0, r6, r3
   35ac0:	ldr	r3, [r2], #4
   35ac4:	cmp	r0, r2
   35ac8:	str	r3, [r1], #4
   35acc:	bne	35ac0 <GetDataSlab+0x13c94>
   35ad0:	ldr	r3, [sp, #232]	; 0xe8
   35ad4:	add	r4, r4, fp
   35ad8:	cmp	r3, #1
   35adc:	ldr	r3, [sp, #8]
   35ae0:	add	r6, r6, r3
   35ae4:	ble	35bbc <GetDataSlab+0x13d90>
   35ae8:	ldr	r3, [sp, #100]	; 0x64
   35aec:	ldr	r2, [sp, #228]	; 0xe4
   35af0:	add	r3, r3, #1
   35af4:	ldr	r1, [r2, #4]
   35af8:	str	r3, [sp, #100]	; 0x64
   35afc:	sdiv	r2, r3, r1
   35b00:	mls	r3, r1, r2, r3
   35b04:	cmp	r3, #0
   35b08:	bne	35ba4 <GetDataSlab+0x13d78>
   35b0c:	ldr	r3, [sp, #228]	; 0xe4
   35b10:	add	ip, sp, #100	; 0x64
   35b14:	add	lr, sp, #140	; 0x8c
   35b18:	mov	r0, #1
   35b1c:	add	r5, r3, #4
   35b20:	b	35b68 <GetDataSlab+0x13d3c>
   35b24:	ldr	r3, [lr, #-8]
   35b28:	ldr	r1, [r9, r0, lsl #2]
   35b2c:	mla	r3, r1, r3, r2
   35b30:	add	r6, r6, r3, lsl #2
   35b34:	add	r4, r4, r3
   35b38:	ldr	r3, [sp, #232]	; 0xe8
   35b3c:	add	r0, r0, #1
   35b40:	cmp	r3, r0
   35b44:	beq	35bbc <GetDataSlab+0x13d90>
   35b48:	ldr	r3, [ip]
   35b4c:	ldr	r1, [r5, #4]!
   35b50:	add	r3, r3, #1
   35b54:	sdiv	r2, r3, r1
   35b58:	str	r3, [ip]
   35b5c:	mls	r3, r1, r2, r3
   35b60:	cmp	r3, #0
   35b64:	bne	35ba8 <GetDataSlab+0x13d7c>
   35b68:	ldr	r2, [lr], #4
   35b6c:	str	r7, [ip], #4
   35b70:	sdiv	r3, r4, r2
   35b74:	mls	r3, r2, r3, r4
   35b78:	cmp	r3, #0
   35b7c:	sub	r2, r2, r3
   35b80:	bne	35b24 <GetDataSlab+0x13cf8>
   35b84:	ldr	r3, [r9, r0, lsl #2]
   35b88:	cmp	r3, #0
   35b8c:	beq	35b38 <GetDataSlab+0x13d0c>
   35b90:	ldr	r2, [lr, #-8]
   35b94:	mul	r3, r2, r3
   35b98:	add	r6, r6, r3, lsl #2
   35b9c:	add	r4, r4, r3
   35ba0:	b	35b38 <GetDataSlab+0x13d0c>
   35ba4:	mov	r0, #1
   35ba8:	add	r3, sp, #176	; 0xb0
   35bac:	add	r3, r3, r0, lsl #2
   35bb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   35bb4:	add	r6, r6, r3, lsl #2
   35bb8:	add	r4, r4, r3
   35bbc:	ldr	r3, [sp, #20]
   35bc0:	add	r8, r8, r3
   35bc4:	ldr	r3, [sp, #16]
   35bc8:	cmp	r8, r3
   35bcc:	blt	35a8c <GetDataSlab+0x13c60>
   35bd0:	b	30874 <GetDataSlab+0xea48>
   35bd4:	cmp	r3, #0
   35bd8:	ble	30874 <GetDataSlab+0xea48>
   35bdc:	ldr	r3, [sp, #20]
   35be0:	mov	r8, #0
   35be4:	mov	r7, r8
   35be8:	ldr	sl, [r9]
   35bec:	sub	r3, r3, #1
   35bf0:	str	r3, [sp, #8]
   35bf4:	ldr	r3, [sp, #40]	; 0x28
   35bf8:	sub	fp, r3, sl
   35bfc:	ldr	r3, [sp, #20]
   35c00:	cmp	sl, #0
   35c04:	addne	r5, r5, sl
   35c08:	addne	r4, r4, sl
   35c0c:	cmp	r3, #0
   35c10:	ble	35c40 <GetDataSlab+0x13e14>
   35c14:	ldr	r3, [sp, #4]
   35c18:	sub	r2, r5, #1
   35c1c:	add	r1, r3, r8, lsl #2
   35c20:	ldr	r3, [sp, #8]
   35c24:	add	r0, r5, r3
   35c28:	ldrsb	r3, [r2, #1]!
   35c2c:	vmov	s15, r3
   35c30:	cmp	r2, r0
   35c34:	vcvt.f32.s32	s15, s15
   35c38:	vstmia	r1!, {s15}
   35c3c:	bne	35c28 <GetDataSlab+0x13dfc>
   35c40:	ldr	r3, [sp, #232]	; 0xe8
   35c44:	add	r4, r4, fp
   35c48:	add	r5, r5, fp
   35c4c:	cmp	r3, #1
   35c50:	ble	35d28 <GetDataSlab+0x13efc>
   35c54:	ldr	r3, [sp, #100]	; 0x64
   35c58:	ldr	r2, [sp, #228]	; 0xe4
   35c5c:	add	r3, r3, #1
   35c60:	ldr	r1, [r2, #4]
   35c64:	str	r3, [sp, #100]	; 0x64
   35c68:	sdiv	r2, r3, r1
   35c6c:	mls	r3, r1, r2, r3
   35c70:	cmp	r3, #0
   35c74:	bne	35d10 <GetDataSlab+0x13ee4>
   35c78:	ldr	r3, [sp, #228]	; 0xe4
   35c7c:	add	ip, sp, #100	; 0x64
   35c80:	add	lr, sp, #140	; 0x8c
   35c84:	mov	r0, #1
   35c88:	add	r6, r3, #4
   35c8c:	b	35cd4 <GetDataSlab+0x13ea8>
   35c90:	ldr	r3, [lr, #-8]
   35c94:	ldr	r1, [r9, r0, lsl #2]
   35c98:	mla	r3, r1, r3, r2
   35c9c:	add	r5, r5, r3
   35ca0:	add	r4, r4, r3
   35ca4:	ldr	r3, [sp, #232]	; 0xe8
   35ca8:	add	r0, r0, #1
   35cac:	cmp	r3, r0
   35cb0:	beq	35d28 <GetDataSlab+0x13efc>
   35cb4:	ldr	r3, [ip]
   35cb8:	ldr	r1, [r6, #4]!
   35cbc:	add	r3, r3, #1
   35cc0:	sdiv	r2, r3, r1
   35cc4:	str	r3, [ip]
   35cc8:	mls	r3, r1, r2, r3
   35ccc:	cmp	r3, #0
   35cd0:	bne	35d14 <GetDataSlab+0x13ee8>
   35cd4:	ldr	r2, [lr], #4
   35cd8:	str	r7, [ip], #4
   35cdc:	sdiv	r3, r4, r2
   35ce0:	mls	r3, r2, r3, r4
   35ce4:	cmp	r3, #0
   35ce8:	sub	r2, r2, r3
   35cec:	bne	35c90 <GetDataSlab+0x13e64>
   35cf0:	ldr	r3, [r9, r0, lsl #2]
   35cf4:	cmp	r3, #0
   35cf8:	beq	35ca4 <GetDataSlab+0x13e78>
   35cfc:	ldr	r2, [lr, #-8]
   35d00:	mul	r3, r2, r3
   35d04:	add	r5, r5, r3
   35d08:	add	r4, r4, r3
   35d0c:	b	35ca4 <GetDataSlab+0x13e78>
   35d10:	mov	r0, #1
   35d14:	add	r3, sp, #176	; 0xb0
   35d18:	add	r3, r3, r0, lsl #2
   35d1c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35d20:	add	r4, r4, r3
   35d24:	add	r5, r5, r3
   35d28:	ldr	r3, [sp, #20]
   35d2c:	add	r8, r8, r3
   35d30:	ldr	r3, [sp, #16]
   35d34:	cmp	r8, r3
   35d38:	blt	35bfc <GetDataSlab+0x13dd0>
   35d3c:	b	30874 <GetDataSlab+0xea48>
   35d40:	cmp	r3, #0
   35d44:	ble	30874 <GetDataSlab+0xea48>
   35d48:	ldr	r3, [sp, #20]
   35d4c:	mov	r8, #0
   35d50:	mov	r7, r8
   35d54:	ldr	sl, [r9]
   35d58:	lsl	r3, r3, #2
   35d5c:	str	r3, [sp, #12]
   35d60:	ldr	r3, [sp, #36]	; 0x24
   35d64:	sub	fp, r3, sl
   35d68:	lsl	r3, sl, #2
   35d6c:	str	r3, [sp, #24]
   35d70:	lsl	r3, fp, #2
   35d74:	str	r3, [sp, #8]
   35d78:	cmp	sl, #0
   35d7c:	beq	35d8c <GetDataSlab+0x13f60>
   35d80:	ldr	r3, [sp, #24]
   35d84:	add	r4, r4, sl
   35d88:	add	r6, r6, r3
   35d8c:	ldr	r3, [sp, #20]
   35d90:	cmp	r3, #0
   35d94:	ble	35dbc <GetDataSlab+0x13f90>
   35d98:	ldr	r3, [sp, #4]
   35d9c:	mov	r2, r6
   35da0:	add	r1, r3, r8, lsl #1
   35da4:	ldr	r3, [sp, #12]
   35da8:	add	r0, r6, r3
   35dac:	ldr	r3, [r2], #4
   35db0:	cmp	r2, r0
   35db4:	strh	r3, [r1], #2
   35db8:	bne	35dac <GetDataSlab+0x13f80>
   35dbc:	ldr	r3, [sp, #232]	; 0xe8
   35dc0:	add	r4, r4, fp
   35dc4:	cmp	r3, #1
   35dc8:	ldr	r3, [sp, #8]
   35dcc:	add	r6, r6, r3
   35dd0:	ble	35ea8 <GetDataSlab+0x1407c>
   35dd4:	ldr	r3, [sp, #100]	; 0x64
   35dd8:	ldr	r2, [sp, #228]	; 0xe4
   35ddc:	add	r3, r3, #1
   35de0:	ldr	r1, [r2, #4]
   35de4:	str	r3, [sp, #100]	; 0x64
   35de8:	sdiv	r2, r3, r1
   35dec:	mls	r3, r1, r2, r3
   35df0:	cmp	r3, #0
   35df4:	bne	35e90 <GetDataSlab+0x14064>
   35df8:	ldr	r3, [sp, #228]	; 0xe4
   35dfc:	add	ip, sp, #100	; 0x64
   35e00:	add	lr, sp, #140	; 0x8c
   35e04:	mov	r0, #1
   35e08:	add	r5, r3, #4
   35e0c:	b	35e54 <GetDataSlab+0x14028>
   35e10:	ldr	r3, [lr, #-8]
   35e14:	ldr	r1, [r9, r0, lsl #2]
   35e18:	mla	r3, r1, r3, r2
   35e1c:	add	r6, r6, r3, lsl #2
   35e20:	add	r4, r4, r3
   35e24:	ldr	r3, [sp, #232]	; 0xe8
   35e28:	add	r0, r0, #1
   35e2c:	cmp	r3, r0
   35e30:	beq	35ea8 <GetDataSlab+0x1407c>
   35e34:	ldr	r3, [ip]
   35e38:	ldr	r1, [r5, #4]!
   35e3c:	add	r3, r3, #1
   35e40:	sdiv	r2, r3, r1
   35e44:	str	r3, [ip]
   35e48:	mls	r3, r1, r2, r3
   35e4c:	cmp	r3, #0
   35e50:	bne	35e94 <GetDataSlab+0x14068>
   35e54:	ldr	r2, [lr], #4
   35e58:	str	r7, [ip], #4
   35e5c:	sdiv	r3, r4, r2
   35e60:	mls	r3, r2, r3, r4
   35e64:	cmp	r3, #0
   35e68:	sub	r2, r2, r3
   35e6c:	bne	35e10 <GetDataSlab+0x13fe4>
   35e70:	ldr	r3, [r9, r0, lsl #2]
   35e74:	cmp	r3, #0
   35e78:	beq	35e24 <GetDataSlab+0x13ff8>
   35e7c:	ldr	r2, [lr, #-8]
   35e80:	mul	r3, r2, r3
   35e84:	add	r6, r6, r3, lsl #2
   35e88:	add	r4, r4, r3
   35e8c:	b	35e24 <GetDataSlab+0x13ff8>
   35e90:	mov	r0, #1
   35e94:	add	r3, sp, #176	; 0xb0
   35e98:	add	r3, r3, r0, lsl #2
   35e9c:	ldr	r3, [r3, #-120]	; 0xffffff88
   35ea0:	add	r6, r6, r3, lsl #2
   35ea4:	add	r4, r4, r3
   35ea8:	ldr	r3, [sp, #20]
   35eac:	add	r8, r8, r3
   35eb0:	ldr	r3, [sp, #16]
   35eb4:	cmp	r8, r3
   35eb8:	blt	35d78 <GetDataSlab+0x13f4c>
   35ebc:	b	30874 <GetDataSlab+0xea48>
   35ec0:	cmp	r3, #0
   35ec4:	ble	30874 <GetDataSlab+0xea48>
   35ec8:	ldr	r3, [sp, #20]
   35ecc:	mov	r8, #0
   35ed0:	mov	r7, r8
   35ed4:	ldr	sl, [r9]
   35ed8:	lsl	r3, r3, #2
   35edc:	str	r3, [sp, #12]
   35ee0:	ldr	r3, [sp, #36]	; 0x24
   35ee4:	sub	fp, r3, sl
   35ee8:	lsl	r3, sl, #2
   35eec:	str	r3, [sp, #24]
   35ef0:	lsl	r3, fp, #2
   35ef4:	str	r3, [sp, #8]
   35ef8:	cmp	sl, #0
   35efc:	beq	35f0c <GetDataSlab+0x140e0>
   35f00:	ldr	r3, [sp, #24]
   35f04:	add	r4, r4, sl
   35f08:	add	r6, r6, r3
   35f0c:	ldr	r3, [sp, #20]
   35f10:	cmp	r3, #0
   35f14:	ble	35f44 <GetDataSlab+0x14118>
   35f18:	ldr	r3, [sp, #4]
   35f1c:	ldr	r2, [sp, #12]
   35f20:	add	r1, r3, r8, lsl #1
   35f24:	mov	r3, r6
   35f28:	add	r0, r6, r2
   35f2c:	vldmia	r3!, {s15}
   35f30:	vcvt.u32.f32	s15, s15
   35f34:	cmp	r3, r0
   35f38:	vmov	r2, s15
   35f3c:	strh	r2, [r1], #2
   35f40:	bne	35f2c <GetDataSlab+0x14100>
   35f44:	ldr	r3, [sp, #232]	; 0xe8
   35f48:	add	r4, r4, fp
   35f4c:	cmp	r3, #1
   35f50:	ldr	r3, [sp, #8]
   35f54:	add	r6, r6, r3
   35f58:	ble	36030 <GetDataSlab+0x14204>
   35f5c:	ldr	r3, [sp, #100]	; 0x64
   35f60:	ldr	r2, [sp, #228]	; 0xe4
   35f64:	add	r3, r3, #1
   35f68:	ldr	r1, [r2, #4]
   35f6c:	str	r3, [sp, #100]	; 0x64
   35f70:	sdiv	r2, r3, r1
   35f74:	mls	r3, r1, r2, r3
   35f78:	cmp	r3, #0
   35f7c:	bne	36018 <GetDataSlab+0x141ec>
   35f80:	ldr	r3, [sp, #228]	; 0xe4
   35f84:	add	ip, sp, #100	; 0x64
   35f88:	add	lr, sp, #140	; 0x8c
   35f8c:	mov	r0, #1
   35f90:	add	r5, r3, #4
   35f94:	b	35fdc <GetDataSlab+0x141b0>
   35f98:	ldr	r3, [lr, #-8]
   35f9c:	ldr	r1, [r9, r0, lsl #2]
   35fa0:	mla	r3, r1, r3, r2
   35fa4:	add	r6, r6, r3, lsl #2
   35fa8:	add	r4, r4, r3
   35fac:	ldr	r3, [sp, #232]	; 0xe8
   35fb0:	add	r0, r0, #1
   35fb4:	cmp	r3, r0
   35fb8:	beq	36030 <GetDataSlab+0x14204>
   35fbc:	ldr	r3, [ip]
   35fc0:	ldr	r1, [r5, #4]!
   35fc4:	add	r3, r3, #1
   35fc8:	sdiv	r2, r3, r1
   35fcc:	str	r3, [ip]
   35fd0:	mls	r3, r1, r2, r3
   35fd4:	cmp	r3, #0
   35fd8:	bne	3601c <GetDataSlab+0x141f0>
   35fdc:	ldr	r2, [lr], #4
   35fe0:	str	r7, [ip], #4
   35fe4:	sdiv	r3, r4, r2
   35fe8:	mls	r3, r2, r3, r4
   35fec:	cmp	r3, #0
   35ff0:	sub	r2, r2, r3
   35ff4:	bne	35f98 <GetDataSlab+0x1416c>
   35ff8:	ldr	r3, [r9, r0, lsl #2]
   35ffc:	cmp	r3, #0
   36000:	beq	35fac <GetDataSlab+0x14180>
   36004:	ldr	r2, [lr, #-8]
   36008:	mul	r3, r2, r3
   3600c:	add	r6, r6, r3, lsl #2
   36010:	add	r4, r4, r3
   36014:	b	35fac <GetDataSlab+0x14180>
   36018:	mov	r0, #1
   3601c:	add	r3, sp, #176	; 0xb0
   36020:	add	r3, r3, r0, lsl #2
   36024:	ldr	r3, [r3, #-120]	; 0xffffff88
   36028:	add	r6, r6, r3, lsl #2
   3602c:	add	r4, r4, r3
   36030:	ldr	r3, [sp, #20]
   36034:	add	r8, r8, r3
   36038:	ldr	r3, [sp, #16]
   3603c:	cmp	r8, r3
   36040:	blt	35ef8 <GetDataSlab+0x140cc>
   36044:	b	30874 <GetDataSlab+0xea48>
   36048:	ldr	r3, [sp, #232]	; 0xe8
   3604c:	ldr	r6, [sl]
   36050:	cmp	r3, #1
   36054:	ldr	r3, [r8]
   36058:	str	r3, [sp, #16]
   3605c:	ldr	r3, [sp, #228]	; 0xe4
   36060:	ldr	fp, [r3]
   36064:	sub	r3, r6, #1
   36068:	str	r3, [sp, #56]	; 0x38
   3606c:	ldr	r3, [sp, #16]
   36070:	str	fp, [sp, #20]
   36074:	str	r3, [sp, #136]	; 0x88
   36078:	ble	40224 <GetDataSlab+0x1e3f8>
   3607c:	ldr	r3, [sp, #232]	; 0xe8
   36080:	add	r7, sl, #4
   36084:	add	r5, sp, #60	; 0x3c
   36088:	mov	lr, r8
   3608c:	mov	r4, #0
   36090:	str	r9, [sp, #32]
   36094:	add	r3, sl, r3, lsl #2
   36098:	str	r3, [sp, #40]	; 0x28
   3609c:	ldr	r3, [sp, #12]
   360a0:	str	r3, [sp, #24]
   360a4:	ldr	r3, [sp, #228]	; 0xe4
   360a8:	str	r3, [sp, #28]
   360ac:	ldr	r3, [r7], #4
   360b0:	ldr	r0, [lr], #4
   360b4:	ldr	r2, [sp, #24]
   360b8:	sub	ip, r3, #1
   360bc:	mov	r1, lr
   360c0:	str	ip, [r5], #4
   360c4:	str	r2, [sp, #36]	; 0x24
   360c8:	mov	r3, r1
   360cc:	ldr	r2, [r1, #-4]!
   360d0:	ldr	r3, [r3]
   360d4:	cmp	r1, r8
   360d8:	mul	ip, r2, ip
   360dc:	mul	r0, r3, r0
   360e0:	bne	360c8 <GetDataSlab+0x1429c>
   360e4:	ldr	r3, [sp, #24]
   360e8:	str	ip, [r5, #-4]
   360ec:	str	r0, [r3, #4]!
   360f0:	str	r3, [sp, #24]
   360f4:	ldr	r0, [sp, #28]
   360f8:	ldr	r3, [sp, #40]	; 0x28
   360fc:	cmp	r7, r3
   36100:	ldr	r3, [sp, #36]	; 0x24
   36104:	ldr	r1, [r3]
   36108:	ldr	r3, [sp, #32]
   3610c:	ldr	r2, [r3, #4]!
   36110:	mla	r4, r2, r1, r4
   36114:	str	r3, [sp, #32]
   36118:	ldr	r3, [r0, #4]!
   3611c:	ldr	r2, [sp, #20]
   36120:	str	r0, [sp, #28]
   36124:	mul	r3, r3, r2
   36128:	str	r3, [sp, #20]
   3612c:	bne	360ac <GetDataSlab+0x14280>
   36130:	ldr	r3, [sp, #8]
   36134:	cmp	r6, #1
   36138:	add	r5, r3, r4, lsl #3
   3613c:	ldr	r3, [sp, #20]
   36140:	beq	3ebd0 <GetDataSlab+0x1cda4>
   36144:	cmp	r3, #0
   36148:	ble	30874 <GetDataSlab+0xea48>
   3614c:	ldr	r3, [r9]
   36150:	str	r3, [sp, #8]
   36154:	mov	r3, #0
   36158:	str	r3, [sp, #24]
   3615c:	ldr	r3, [sp, #8]
   36160:	cmp	r3, #0
   36164:	beq	36170 <GetDataSlab+0x14344>
   36168:	add	r5, r5, r3, lsl #3
   3616c:	add	r4, r4, r3
   36170:	cmp	fp, #0
   36174:	ble	361c0 <GetDataSlab+0x14394>
   36178:	ldr	r3, [sp, #4]
   3617c:	ldr	r2, [sp, #24]
   36180:	add	r2, r3, r2, lsl #2
   36184:	mov	r3, #0
   36188:	ldr	r1, [r5]
   3618c:	add	r3, r3, #1
   36190:	str	r1, [r2], #4
   36194:	ldr	r1, [sp, #228]	; 0xe4
   36198:	ldr	r6, [sl]
   3619c:	ldr	fp, [r1]
   361a0:	add	r5, r5, r6, lsl #3
   361a4:	add	r4, r4, r6
   361a8:	cmp	fp, r3
   361ac:	bgt	36188 <GetDataSlab+0x1435c>
   361b0:	ldr	r3, [r9]
   361b4:	str	r3, [sp, #8]
   361b8:	ldr	r3, [r8]
   361bc:	str	r3, [sp, #16]
   361c0:	ldr	r2, [sp, #8]
   361c4:	ldr	r3, [sp, #16]
   361c8:	sub	r3, r3, r2
   361cc:	ldr	r2, [sp, #232]	; 0xe8
   361d0:	mls	r3, r6, fp, r3
   361d4:	cmp	r2, #1
   361d8:	add	r4, r4, r3
   361dc:	add	r5, r5, r3, lsl #3
   361e0:	ble	362bc <GetDataSlab+0x14490>
   361e4:	ldr	r3, [sp, #100]	; 0x64
   361e8:	ldr	r2, [sp, #228]	; 0xe4
   361ec:	add	r3, r3, #1
   361f0:	ldr	r1, [r2, #4]
   361f4:	str	r3, [sp, #100]	; 0x64
   361f8:	sdiv	r2, r3, r1
   361fc:	mls	r3, r1, r2, r3
   36200:	cmp	r3, #0
   36204:	bne	362a4 <GetDataSlab+0x14478>
   36208:	add	ip, sp, #100	; 0x64
   3620c:	mov	r0, #1
   36210:	ldr	lr, [sp, #12]
   36214:	ldr	r3, [sp, #228]	; 0xe4
   36218:	add	r7, r3, #4
   3621c:	b	36264 <GetDataSlab+0x14438>
   36220:	ldr	r3, [lr, #-4]
   36224:	ldr	r1, [r9, r0, lsl #2]
   36228:	mla	r3, r1, r3, r2
   3622c:	add	r5, r5, r3, lsl #3
   36230:	add	r4, r4, r3
   36234:	ldr	r3, [sp, #232]	; 0xe8
   36238:	add	r0, r0, #1
   3623c:	cmp	r3, r0
   36240:	beq	362bc <GetDataSlab+0x14490>
   36244:	ldr	r3, [ip]
   36248:	ldr	r1, [r7, #4]!
   3624c:	add	r3, r3, #1
   36250:	sdiv	r2, r3, r1
   36254:	str	r3, [ip]
   36258:	mls	r3, r1, r2, r3
   3625c:	cmp	r3, #0
   36260:	bne	362a8 <GetDataSlab+0x1447c>
   36264:	ldr	r2, [lr, #4]!
   36268:	mov	r3, #0
   3626c:	str	r3, [ip], #4
   36270:	sdiv	r3, r4, r2
   36274:	mls	r3, r2, r3, r4
   36278:	cmp	r3, #0
   3627c:	sub	r2, r2, r3
   36280:	bne	36220 <GetDataSlab+0x143f4>
   36284:	ldr	r3, [r9, r0, lsl #2]
   36288:	cmp	r3, #0
   3628c:	beq	36234 <GetDataSlab+0x14408>
   36290:	ldr	r2, [lr, #-4]
   36294:	mul	r3, r2, r3
   36298:	add	r5, r5, r3, lsl #3
   3629c:	add	r4, r4, r3
   362a0:	b	36234 <GetDataSlab+0x14408>
   362a4:	mov	r0, #1
   362a8:	add	r3, sp, #176	; 0xb0
   362ac:	add	r3, r3, r0, lsl #2
   362b0:	ldr	r3, [r3, #-120]	; 0xffffff88
   362b4:	add	r5, r5, r3, lsl #3
   362b8:	add	r4, r4, r3
   362bc:	ldrd	r2, [sp, #20]
   362c0:	add	r3, r3, fp
   362c4:	cmp	r3, r2
   362c8:	str	r3, [sp, #24]
   362cc:	blt	3615c <GetDataSlab+0x14330>
   362d0:	b	30874 <GetDataSlab+0xea48>
   362d4:	cmp	r3, #0
   362d8:	ble	30874 <GetDataSlab+0xea48>
   362dc:	ldr	r3, [sp, #20]
   362e0:	mov	r8, #0
   362e4:	mov	r7, r8
   362e8:	ldr	sl, [r9]
   362ec:	lsl	r3, r3, #2
   362f0:	str	r3, [sp, #12]
   362f4:	ldr	r3, [sp, #36]	; 0x24
   362f8:	sub	fp, r3, sl
   362fc:	lsl	r3, sl, #2
   36300:	str	r3, [sp, #24]
   36304:	lsl	r3, fp, #2
   36308:	str	r3, [sp, #8]
   3630c:	cmp	sl, #0
   36310:	beq	36320 <GetDataSlab+0x144f4>
   36314:	ldr	r3, [sp, #24]
   36318:	add	r4, r4, sl
   3631c:	add	r6, r6, r3
   36320:	ldr	r3, [sp, #20]
   36324:	cmp	r3, #0
   36328:	ble	36350 <GetDataSlab+0x14524>
   3632c:	ldr	r3, [sp, #4]
   36330:	mov	r2, r6
   36334:	add	r1, r3, r8, lsl #1
   36338:	ldr	r3, [sp, #12]
   3633c:	add	r0, r6, r3
   36340:	ldr	r3, [r2], #4
   36344:	cmp	r2, r0
   36348:	strh	r3, [r1], #2
   3634c:	bne	36340 <GetDataSlab+0x14514>
   36350:	ldr	r3, [sp, #232]	; 0xe8
   36354:	add	r4, r4, fp
   36358:	cmp	r3, #1
   3635c:	ldr	r3, [sp, #8]
   36360:	add	r6, r6, r3
   36364:	ble	3643c <GetDataSlab+0x14610>
   36368:	ldr	r3, [sp, #100]	; 0x64
   3636c:	ldr	r2, [sp, #228]	; 0xe4
   36370:	add	r3, r3, #1
   36374:	ldr	r1, [r2, #4]
   36378:	str	r3, [sp, #100]	; 0x64
   3637c:	sdiv	r2, r3, r1
   36380:	mls	r3, r1, r2, r3
   36384:	cmp	r3, #0
   36388:	bne	36424 <GetDataSlab+0x145f8>
   3638c:	ldr	r3, [sp, #228]	; 0xe4
   36390:	add	ip, sp, #100	; 0x64
   36394:	add	lr, sp, #140	; 0x8c
   36398:	mov	r0, #1
   3639c:	add	r5, r3, #4
   363a0:	b	363e8 <GetDataSlab+0x145bc>
   363a4:	ldr	r3, [lr, #-8]
   363a8:	ldr	r1, [r9, r0, lsl #2]
   363ac:	mla	r3, r1, r3, r2
   363b0:	add	r6, r6, r3, lsl #2
   363b4:	add	r4, r4, r3
   363b8:	ldr	r3, [sp, #232]	; 0xe8
   363bc:	add	r0, r0, #1
   363c0:	cmp	r3, r0
   363c4:	beq	3643c <GetDataSlab+0x14610>
   363c8:	ldr	r3, [ip]
   363cc:	ldr	r1, [r5, #4]!
   363d0:	add	r3, r3, #1
   363d4:	sdiv	r2, r3, r1
   363d8:	str	r3, [ip]
   363dc:	mls	r3, r1, r2, r3
   363e0:	cmp	r3, #0
   363e4:	bne	36428 <GetDataSlab+0x145fc>
   363e8:	ldr	r2, [lr], #4
   363ec:	str	r7, [ip], #4
   363f0:	sdiv	r3, r4, r2
   363f4:	mls	r3, r2, r3, r4
   363f8:	cmp	r3, #0
   363fc:	sub	r2, r2, r3
   36400:	bne	363a4 <GetDataSlab+0x14578>
   36404:	ldr	r3, [r9, r0, lsl #2]
   36408:	cmp	r3, #0
   3640c:	beq	363b8 <GetDataSlab+0x1458c>
   36410:	ldr	r2, [lr, #-8]
   36414:	mul	r3, r2, r3
   36418:	add	r6, r6, r3, lsl #2
   3641c:	add	r4, r4, r3
   36420:	b	363b8 <GetDataSlab+0x1458c>
   36424:	mov	r0, #1
   36428:	add	r3, sp, #176	; 0xb0
   3642c:	add	r3, r3, r0, lsl #2
   36430:	ldr	r3, [r3, #-120]	; 0xffffff88
   36434:	add	r6, r6, r3, lsl #2
   36438:	add	r4, r4, r3
   3643c:	ldr	r3, [sp, #20]
   36440:	add	r8, r8, r3
   36444:	ldr	r3, [sp, #16]
   36448:	cmp	r8, r3
   3644c:	blt	3630c <GetDataSlab+0x144e0>
   36450:	b	30874 <GetDataSlab+0xea48>
   36454:	cmp	r3, #0
   36458:	ble	30874 <GetDataSlab+0xea48>
   3645c:	ldr	r3, [sp, #20]
   36460:	mov	r8, #0
   36464:	mov	r7, r8
   36468:	ldr	sl, [r9]
   3646c:	lsl	r3, r3, #3
   36470:	str	r3, [sp, #12]
   36474:	ldr	r3, [sp, #36]	; 0x24
   36478:	sub	fp, r3, sl
   3647c:	lsl	r3, sl, #3
   36480:	str	r3, [sp, #24]
   36484:	lsl	r3, fp, #3
   36488:	str	r3, [sp, #8]
   3648c:	cmp	sl, #0
   36490:	beq	364a0 <GetDataSlab+0x14674>
   36494:	ldr	r3, [sp, #24]
   36498:	add	r4, r4, sl
   3649c:	add	r6, r6, r3
   364a0:	ldr	r3, [sp, #20]
   364a4:	cmp	r3, #0
   364a8:	ble	364d8 <GetDataSlab+0x146ac>
   364ac:	ldr	r3, [sp, #4]
   364b0:	ldr	r2, [sp, #12]
   364b4:	add	r1, r3, r8, lsl #1
   364b8:	mov	r3, r6
   364bc:	add	r0, r6, r2
   364c0:	vldmia	r3!, {d7}
   364c4:	vcvt.s32.f64	s15, d7
   364c8:	cmp	r3, r0
   364cc:	vmov	r2, s15
   364d0:	strh	r2, [r1], #2
   364d4:	bne	364c0 <GetDataSlab+0x14694>
   364d8:	ldr	r3, [sp, #232]	; 0xe8
   364dc:	add	r4, r4, fp
   364e0:	cmp	r3, #1
   364e4:	ldr	r3, [sp, #8]
   364e8:	add	r6, r6, r3
   364ec:	ble	365c4 <GetDataSlab+0x14798>
   364f0:	ldr	r3, [sp, #100]	; 0x64
   364f4:	ldr	r2, [sp, #228]	; 0xe4
   364f8:	add	r3, r3, #1
   364fc:	ldr	r1, [r2, #4]
   36500:	str	r3, [sp, #100]	; 0x64
   36504:	sdiv	r2, r3, r1
   36508:	mls	r3, r1, r2, r3
   3650c:	cmp	r3, #0
   36510:	bne	365ac <GetDataSlab+0x14780>
   36514:	ldr	r3, [sp, #228]	; 0xe4
   36518:	add	ip, sp, #100	; 0x64
   3651c:	add	lr, sp, #140	; 0x8c
   36520:	mov	r0, #1
   36524:	add	r5, r3, #4
   36528:	b	36570 <GetDataSlab+0x14744>
   3652c:	ldr	r3, [lr, #-8]
   36530:	ldr	r1, [r9, r0, lsl #2]
   36534:	mla	r3, r1, r3, r2
   36538:	add	r6, r6, r3, lsl #3
   3653c:	add	r4, r4, r3
   36540:	ldr	r3, [sp, #232]	; 0xe8
   36544:	add	r0, r0, #1
   36548:	cmp	r3, r0
   3654c:	beq	365c4 <GetDataSlab+0x14798>
   36550:	ldr	r3, [ip]
   36554:	ldr	r1, [r5, #4]!
   36558:	add	r3, r3, #1
   3655c:	sdiv	r2, r3, r1
   36560:	str	r3, [ip]
   36564:	mls	r3, r1, r2, r3
   36568:	cmp	r3, #0
   3656c:	bne	365b0 <GetDataSlab+0x14784>
   36570:	ldr	r2, [lr], #4
   36574:	str	r7, [ip], #4
   36578:	sdiv	r3, r4, r2
   3657c:	mls	r3, r2, r3, r4
   36580:	cmp	r3, #0
   36584:	sub	r2, r2, r3
   36588:	bne	3652c <GetDataSlab+0x14700>
   3658c:	ldr	r3, [r9, r0, lsl #2]
   36590:	cmp	r3, #0
   36594:	beq	36540 <GetDataSlab+0x14714>
   36598:	ldr	r2, [lr, #-8]
   3659c:	mul	r3, r2, r3
   365a0:	add	r6, r6, r3, lsl #3
   365a4:	add	r4, r4, r3
   365a8:	b	36540 <GetDataSlab+0x14714>
   365ac:	mov	r0, #1
   365b0:	add	r3, sp, #176	; 0xb0
   365b4:	add	r3, r3, r0, lsl #2
   365b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   365bc:	add	r6, r6, r3, lsl #3
   365c0:	add	r4, r4, r3
   365c4:	ldr	r3, [sp, #20]
   365c8:	add	r8, r8, r3
   365cc:	ldr	r3, [sp, #16]
   365d0:	cmp	r8, r3
   365d4:	blt	3648c <GetDataSlab+0x14660>
   365d8:	b	30874 <GetDataSlab+0xea48>
   365dc:	ldr	r3, [sl]
   365e0:	str	r3, [sp, #32]
   365e4:	ldr	r3, [sp, #232]	; 0xe8
   365e8:	cmp	r3, #1
   365ec:	ldr	r3, [r8]
   365f0:	str	r3, [sp, #36]	; 0x24
   365f4:	ldr	r3, [sp, #228]	; 0xe4
   365f8:	ldr	r3, [r3]
   365fc:	str	r3, [sp, #20]
   36600:	ldr	r3, [sp, #32]
   36604:	sub	r3, r3, #1
   36608:	str	r3, [sp, #56]	; 0x38
   3660c:	ldr	r3, [sp, #36]	; 0x24
   36610:	str	r3, [sp, #136]	; 0x88
   36614:	ble	40294 <GetDataSlab+0x1e468>
   36618:	add	r6, sl, #4
   3661c:	ldr	fp, [sp, #228]	; 0xe4
   36620:	add	lr, sp, #60	; 0x3c
   36624:	mov	r5, r8
   36628:	mov	r4, #0
   3662c:	str	r9, [sp, #24]
   36630:	ldr	r3, [sp, #232]	; 0xe8
   36634:	add	r3, sl, r3, lsl #2
   36638:	ldr	sl, [sp, #12]
   3663c:	str	r3, [sp, #28]
   36640:	ldr	r3, [sp, #20]
   36644:	str	r3, [sp, #16]
   36648:	ldr	r3, [r6], #4
   3664c:	mov	r7, sl
   36650:	ldr	r0, [r5], #4
   36654:	sub	ip, r3, #1
   36658:	mov	r1, r5
   3665c:	str	ip, [lr], #4
   36660:	mov	r3, r1
   36664:	ldr	r2, [r1, #-4]!
   36668:	ldr	r3, [r3]
   3666c:	cmp	r8, r1
   36670:	mul	ip, r2, ip
   36674:	mul	r0, r3, r0
   36678:	bne	36660 <GetDataSlab+0x14834>
   3667c:	ldr	r3, [sp, #28]
   36680:	str	r0, [sl, #4]!
   36684:	ldr	r1, [r7]
   36688:	str	ip, [lr, #-4]
   3668c:	cmp	r3, r6
   36690:	ldr	r3, [sp, #24]
   36694:	ldr	r2, [r3, #4]!
   36698:	mla	r4, r2, r1, r4
   3669c:	str	r3, [sp, #24]
   366a0:	ldr	r3, [fp, #4]!
   366a4:	ldr	r2, [sp, #16]
   366a8:	mul	r3, r3, r2
   366ac:	str	r3, [sp, #16]
   366b0:	bne	36648 <GetDataSlab+0x1481c>
   366b4:	ldr	r3, [sp, #32]
   366b8:	cmp	r3, #1
   366bc:	ldr	r3, [sp, #8]
   366c0:	add	r6, r3, r4, lsl #3
   366c4:	ldr	r3, [sp, #16]
   366c8:	beq	3f1ac <GetDataSlab+0x1d380>
   366cc:	cmp	r3, #0
   366d0:	ble	30874 <GetDataSlab+0xea48>
   366d4:	ldr	r3, [r9]
   366d8:	mov	fp, #0
   366dc:	mov	sl, fp
   366e0:	ldr	r2, [sp, #20]
   366e4:	ldr	r1, [sp, #20]
   366e8:	str	r3, [sp, #8]
   366ec:	ldr	r3, [sp, #32]
   366f0:	lsl	r2, r2, #1
   366f4:	str	r2, [sp, #28]
   366f8:	lsl	r7, r3, #3
   366fc:	ldr	r3, [sp, #20]
   36700:	ldr	r2, [sp, #32]
   36704:	sub	r3, r3, #1
   36708:	mul	r3, r2, r3
   3670c:	ldr	r2, [sp, #28]
   36710:	str	r3, [sp, #44]	; 0x2c
   36714:	ldr	r3, [sp, #20]
   36718:	mul	r3, r3, r7
   3671c:	str	r3, [sp, #40]	; 0x28
   36720:	ldr	r3, [sp, #4]
   36724:	add	r8, r3, r2
   36728:	ldr	r2, [sp, #8]
   3672c:	ldr	r3, [sp, #36]	; 0x24
   36730:	sub	r3, r3, r2
   36734:	lsl	r2, r2, #3
   36738:	str	r2, [sp, #48]	; 0x30
   3673c:	ldr	r2, [sp, #32]
   36740:	mls	r3, r1, r2, r3
   36744:	str	r3, [sp, #24]
   36748:	lsl	r3, r3, #3
   3674c:	str	r3, [sp, #36]	; 0x24
   36750:	ldr	r3, [sp, #8]
   36754:	cmp	r3, #0
   36758:	beq	3676c <GetDataSlab+0x14940>
   3675c:	ldr	r3, [sp, #48]	; 0x30
   36760:	add	r6, r6, r3
   36764:	ldr	r3, [sp, #8]
   36768:	add	r4, r4, r3
   3676c:	ldr	r3, [sp, #20]
   36770:	cmp	r3, #0
   36774:	ble	367ac <GetDataSlab+0x14980>
   36778:	ldr	r3, [sp, #4]
   3677c:	mov	r1, r6
   36780:	add	r2, r3, fp, lsl #1
   36784:	ldr	r3, [r1], r7
   36788:	strh	r3, [r2], #2
   3678c:	cmp	r8, r2
   36790:	bne	36784 <GetDataSlab+0x14958>
   36794:	ldr	r3, [sp, #32]
   36798:	ldr	r2, [sp, #40]	; 0x28
   3679c:	add	r3, r4, r3
   367a0:	add	r6, r6, r2
   367a4:	ldr	r2, [sp, #44]	; 0x2c
   367a8:	add	r4, r3, r2
   367ac:	ldr	r3, [sp, #232]	; 0xe8
   367b0:	cmp	r3, #1
   367b4:	ldr	r3, [sp, #24]
   367b8:	add	r4, r4, r3
   367bc:	ldr	r3, [sp, #36]	; 0x24
   367c0:	add	r6, r6, r3
   367c4:	ble	3689c <GetDataSlab+0x14a70>
   367c8:	ldr	r3, [sp, #100]	; 0x64
   367cc:	ldr	r2, [sp, #228]	; 0xe4
   367d0:	add	r3, r3, #1
   367d4:	ldr	r1, [r2, #4]
   367d8:	str	r3, [sp, #100]	; 0x64
   367dc:	sdiv	r2, r3, r1
   367e0:	mls	r3, r1, r2, r3
   367e4:	cmp	r3, #0
   367e8:	bne	36884 <GetDataSlab+0x14a58>
   367ec:	add	ip, sp, #100	; 0x64
   367f0:	mov	r0, #1
   367f4:	ldr	lr, [sp, #12]
   367f8:	ldr	r3, [sp, #228]	; 0xe4
   367fc:	add	r5, r3, #4
   36800:	b	36848 <GetDataSlab+0x14a1c>
   36804:	ldr	r3, [lr, #-4]
   36808:	ldr	r1, [r9, r0, lsl #2]
   3680c:	mla	r3, r1, r3, r2
   36810:	add	r6, r6, r3, lsl #3
   36814:	add	r4, r4, r3
   36818:	ldr	r3, [sp, #232]	; 0xe8
   3681c:	add	r0, r0, #1
   36820:	cmp	r3, r0
   36824:	beq	3689c <GetDataSlab+0x14a70>
   36828:	ldr	r3, [ip]
   3682c:	ldr	r1, [r5, #4]!
   36830:	add	r3, r3, #1
   36834:	sdiv	r2, r3, r1
   36838:	str	r3, [ip]
   3683c:	mls	r3, r1, r2, r3
   36840:	cmp	r3, #0
   36844:	bne	36888 <GetDataSlab+0x14a5c>
   36848:	ldr	r2, [lr, #4]!
   3684c:	str	sl, [ip], #4
   36850:	sdiv	r3, r4, r2
   36854:	mls	r3, r2, r3, r4
   36858:	cmp	r3, #0
   3685c:	sub	r2, r2, r3
   36860:	bne	36804 <GetDataSlab+0x149d8>
   36864:	ldr	r3, [r9, r0, lsl #2]
   36868:	cmp	r3, #0
   3686c:	beq	36818 <GetDataSlab+0x149ec>
   36870:	ldr	r2, [lr, #-4]
   36874:	mul	r3, r2, r3
   36878:	add	r6, r6, r3, lsl #3
   3687c:	add	r4, r4, r3
   36880:	b	36818 <GetDataSlab+0x149ec>
   36884:	mov	r0, #1
   36888:	add	r3, sp, #176	; 0xb0
   3688c:	add	r3, r3, r0, lsl #2
   36890:	ldr	r3, [r3, #-120]	; 0xffffff88
   36894:	add	r6, r6, r3, lsl #3
   36898:	add	r4, r4, r3
   3689c:	ldr	r3, [sp, #20]
   368a0:	add	fp, fp, r3
   368a4:	ldr	r3, [sp, #28]
   368a8:	add	r8, r8, r3
   368ac:	ldr	r3, [sp, #16]
   368b0:	cmp	fp, r3
   368b4:	blt	36750 <GetDataSlab+0x14924>
   368b8:	b	30874 <GetDataSlab+0xea48>
   368bc:	ldr	r3, [sp, #232]	; 0xe8
   368c0:	ldr	r6, [sl]
   368c4:	cmp	r3, #1
   368c8:	ldr	r3, [r8]
   368cc:	str	r3, [sp, #16]
   368d0:	ldr	r3, [sp, #228]	; 0xe4
   368d4:	ldr	fp, [r3]
   368d8:	sub	r3, r6, #1
   368dc:	str	r3, [sp, #56]	; 0x38
   368e0:	ldr	r3, [sp, #16]
   368e4:	str	fp, [sp, #20]
   368e8:	str	r3, [sp, #136]	; 0x88
   368ec:	ble	402e4 <GetDataSlab+0x1e4b8>
   368f0:	ldr	r3, [sp, #232]	; 0xe8
   368f4:	add	r7, sl, #4
   368f8:	add	r5, sp, #60	; 0x3c
   368fc:	mov	lr, r8
   36900:	mov	r4, #0
   36904:	str	r9, [sp, #28]
   36908:	add	r3, sl, r3, lsl #2
   3690c:	str	r3, [sp, #40]	; 0x28
   36910:	ldr	r3, [sp, #12]
   36914:	str	r3, [sp, #24]
   36918:	ldr	r3, [sp, #228]	; 0xe4
   3691c:	str	r3, [sp, #32]
   36920:	ldr	r3, [r7], #4
   36924:	ldr	r0, [lr], #4
   36928:	ldr	r2, [sp, #24]
   3692c:	sub	ip, r3, #1
   36930:	mov	r1, lr
   36934:	str	ip, [r5], #4
   36938:	str	r2, [sp, #36]	; 0x24
   3693c:	mov	r3, r1
   36940:	ldr	r2, [r1, #-4]!
   36944:	ldr	r3, [r3]
   36948:	cmp	r8, r1
   3694c:	mul	ip, r2, ip
   36950:	mul	r0, r3, r0
   36954:	bne	3693c <GetDataSlab+0x14b10>
   36958:	ldr	r3, [sp, #24]
   3695c:	str	ip, [r5, #-4]
   36960:	str	r0, [r3, #4]!
   36964:	str	r3, [sp, #24]
   36968:	ldr	r0, [sp, #32]
   3696c:	ldr	r3, [sp, #40]	; 0x28
   36970:	cmp	r7, r3
   36974:	ldr	r3, [sp, #36]	; 0x24
   36978:	ldr	r1, [r3]
   3697c:	ldr	r3, [sp, #28]
   36980:	ldr	r2, [r3, #4]!
   36984:	mla	r4, r2, r1, r4
   36988:	str	r3, [sp, #28]
   3698c:	ldr	r3, [r0, #4]!
   36990:	ldr	r2, [sp, #20]
   36994:	str	r0, [sp, #32]
   36998:	mul	r3, r3, r2
   3699c:	str	r3, [sp, #20]
   369a0:	bne	36920 <GetDataSlab+0x14af4>
   369a4:	ldr	r3, [sp, #8]
   369a8:	cmp	r6, #1
   369ac:	add	r5, r3, r4, lsl #3
   369b0:	ldr	r3, [sp, #20]
   369b4:	beq	3ed44 <GetDataSlab+0x1cf18>
   369b8:	cmp	r3, #0
   369bc:	ble	30874 <GetDataSlab+0xea48>
   369c0:	ldr	r3, [r9]
   369c4:	str	r3, [sp, #8]
   369c8:	mov	r3, #0
   369cc:	str	r3, [sp, #24]
   369d0:	ldr	r3, [sp, #8]
   369d4:	cmp	r3, #0
   369d8:	beq	369e4 <GetDataSlab+0x14bb8>
   369dc:	add	r5, r5, r3, lsl #3
   369e0:	add	r4, r4, r3
   369e4:	cmp	fp, #0
   369e8:	ble	36a34 <GetDataSlab+0x14c08>
   369ec:	ldr	r3, [sp, #4]
   369f0:	ldr	r2, [sp, #24]
   369f4:	add	r1, r3, r2
   369f8:	mov	r2, r1
   369fc:	ldr	r3, [r5]
   36a00:	ldr	r0, [sp, #228]	; 0xe4
   36a04:	strb	r3, [r2], #1
   36a08:	sub	r3, r2, r1
   36a0c:	ldr	r6, [sl]
   36a10:	ldr	fp, [r0]
   36a14:	add	r5, r5, r6, lsl #3
   36a18:	add	r4, r4, r6
   36a1c:	cmp	fp, r3
   36a20:	bgt	369fc <GetDataSlab+0x14bd0>
   36a24:	ldr	r3, [r9]
   36a28:	str	r3, [sp, #8]
   36a2c:	ldr	r3, [r8]
   36a30:	str	r3, [sp, #16]
   36a34:	ldr	r2, [sp, #8]
   36a38:	ldr	r3, [sp, #16]
   36a3c:	sub	r3, r3, r2
   36a40:	ldr	r2, [sp, #232]	; 0xe8
   36a44:	mls	r3, r6, fp, r3
   36a48:	cmp	r2, #1
   36a4c:	add	r4, r4, r3
   36a50:	add	r5, r5, r3, lsl #3
   36a54:	ble	36b30 <GetDataSlab+0x14d04>
   36a58:	ldr	r3, [sp, #100]	; 0x64
   36a5c:	ldr	r2, [sp, #228]	; 0xe4
   36a60:	add	r3, r3, #1
   36a64:	ldr	r1, [r2, #4]
   36a68:	str	r3, [sp, #100]	; 0x64
   36a6c:	sdiv	r2, r3, r1
   36a70:	mls	r3, r1, r2, r3
   36a74:	cmp	r3, #0
   36a78:	bne	36b18 <GetDataSlab+0x14cec>
   36a7c:	add	ip, sp, #100	; 0x64
   36a80:	mov	r0, #1
   36a84:	ldr	lr, [sp, #12]
   36a88:	ldr	r3, [sp, #228]	; 0xe4
   36a8c:	add	r7, r3, #4
   36a90:	b	36ad8 <GetDataSlab+0x14cac>
   36a94:	ldr	r3, [lr, #-4]
   36a98:	ldr	r1, [r9, r0, lsl #2]
   36a9c:	mla	r3, r1, r3, r2
   36aa0:	add	r5, r5, r3, lsl #3
   36aa4:	add	r4, r4, r3
   36aa8:	ldr	r3, [sp, #232]	; 0xe8
   36aac:	add	r0, r0, #1
   36ab0:	cmp	r3, r0
   36ab4:	beq	36b30 <GetDataSlab+0x14d04>
   36ab8:	ldr	r3, [ip]
   36abc:	ldr	r1, [r7, #4]!
   36ac0:	add	r3, r3, #1
   36ac4:	sdiv	r2, r3, r1
   36ac8:	str	r3, [ip]
   36acc:	mls	r3, r1, r2, r3
   36ad0:	cmp	r3, #0
   36ad4:	bne	36b1c <GetDataSlab+0x14cf0>
   36ad8:	ldr	r2, [lr, #4]!
   36adc:	mov	r3, #0
   36ae0:	str	r3, [ip], #4
   36ae4:	sdiv	r3, r4, r2
   36ae8:	mls	r3, r2, r3, r4
   36aec:	cmp	r3, #0
   36af0:	sub	r2, r2, r3
   36af4:	bne	36a94 <GetDataSlab+0x14c68>
   36af8:	ldr	r3, [r9, r0, lsl #2]
   36afc:	cmp	r3, #0
   36b00:	beq	36aa8 <GetDataSlab+0x14c7c>
   36b04:	ldr	r2, [lr, #-4]
   36b08:	mul	r3, r2, r3
   36b0c:	add	r5, r5, r3, lsl #3
   36b10:	add	r4, r4, r3
   36b14:	b	36aa8 <GetDataSlab+0x14c7c>
   36b18:	mov	r0, #1
   36b1c:	add	r3, sp, #176	; 0xb0
   36b20:	add	r3, r3, r0, lsl #2
   36b24:	ldr	r3, [r3, #-120]	; 0xffffff88
   36b28:	add	r5, r5, r3, lsl #3
   36b2c:	add	r4, r4, r3
   36b30:	ldrd	r2, [sp, #20]
   36b34:	add	r3, r3, fp
   36b38:	cmp	r3, r2
   36b3c:	str	r3, [sp, #24]
   36b40:	blt	369d0 <GetDataSlab+0x14ba4>
   36b44:	b	30874 <GetDataSlab+0xea48>
   36b48:	ldr	r3, [sl]
   36b4c:	str	r3, [sp, #32]
   36b50:	ldr	r3, [sp, #232]	; 0xe8
   36b54:	cmp	r3, #1
   36b58:	ldr	r3, [r8]
   36b5c:	str	r3, [sp, #36]	; 0x24
   36b60:	ldr	r3, [sp, #228]	; 0xe4
   36b64:	ldr	r3, [r3]
   36b68:	str	r3, [sp, #20]
   36b6c:	ldr	r3, [sp, #32]
   36b70:	sub	r3, r3, #1
   36b74:	str	r3, [sp, #56]	; 0x38
   36b78:	ldr	r3, [sp, #36]	; 0x24
   36b7c:	str	r3, [sp, #136]	; 0x88
   36b80:	ble	40264 <GetDataSlab+0x1e438>
   36b84:	add	r6, sl, #4
   36b88:	ldr	fp, [sp, #228]	; 0xe4
   36b8c:	add	lr, sp, #60	; 0x3c
   36b90:	mov	r5, r8
   36b94:	mov	r4, #0
   36b98:	str	r9, [sp, #24]
   36b9c:	ldr	r3, [sp, #232]	; 0xe8
   36ba0:	add	r3, sl, r3, lsl #2
   36ba4:	ldr	sl, [sp, #12]
   36ba8:	str	r3, [sp, #28]
   36bac:	ldr	r3, [sp, #20]
   36bb0:	str	r3, [sp, #16]
   36bb4:	ldr	r3, [r6], #4
   36bb8:	mov	r7, sl
   36bbc:	ldr	r0, [r5], #4
   36bc0:	sub	ip, r3, #1
   36bc4:	mov	r1, r5
   36bc8:	str	ip, [lr], #4
   36bcc:	mov	r3, r1
   36bd0:	ldr	r2, [r1, #-4]!
   36bd4:	ldr	r3, [r3]
   36bd8:	cmp	r1, r8
   36bdc:	mul	ip, r2, ip
   36be0:	mul	r0, r3, r0
   36be4:	bne	36bcc <GetDataSlab+0x14da0>
   36be8:	ldr	r3, [sp, #28]
   36bec:	str	r0, [sl, #4]!
   36bf0:	ldr	r1, [r7]
   36bf4:	str	ip, [lr, #-4]
   36bf8:	cmp	r6, r3
   36bfc:	ldr	r3, [sp, #24]
   36c00:	ldr	r2, [r3, #4]!
   36c04:	mla	r4, r2, r1, r4
   36c08:	str	r3, [sp, #24]
   36c0c:	ldr	r3, [fp, #4]!
   36c10:	ldr	r2, [sp, #16]
   36c14:	mul	r3, r3, r2
   36c18:	str	r3, [sp, #16]
   36c1c:	bne	36bb4 <GetDataSlab+0x14d88>
   36c20:	ldr	r3, [sp, #32]
   36c24:	cmp	r3, #1
   36c28:	ldr	r3, [sp, #8]
   36c2c:	add	r6, r3, r4, lsl #3
   36c30:	ldr	r3, [sp, #16]
   36c34:	beq	3f794 <GetDataSlab+0x1d968>
   36c38:	cmp	r3, #0
   36c3c:	ble	30874 <GetDataSlab+0xea48>
   36c40:	ldr	r3, [r9]
   36c44:	mov	fp, #0
   36c48:	mov	r8, fp
   36c4c:	ldr	r2, [sp, #20]
   36c50:	ldr	r1, [sp, #20]
   36c54:	str	r3, [sp, #8]
   36c58:	ldr	r3, [sp, #32]
   36c5c:	lsl	r2, r2, #3
   36c60:	str	r2, [sp, #28]
   36c64:	lsl	sl, r3, #3
   36c68:	ldr	r3, [sp, #20]
   36c6c:	ldr	r2, [sp, #32]
   36c70:	sub	r3, r3, #1
   36c74:	mul	r3, r2, r3
   36c78:	ldr	r2, [sp, #28]
   36c7c:	str	r3, [sp, #44]	; 0x2c
   36c80:	ldr	r3, [sp, #20]
   36c84:	mul	r3, r3, sl
   36c88:	str	r3, [sp, #40]	; 0x28
   36c8c:	ldr	r3, [sp, #4]
   36c90:	add	r7, r3, r2
   36c94:	ldr	r2, [sp, #8]
   36c98:	ldr	r3, [sp, #36]	; 0x24
   36c9c:	sub	r3, r3, r2
   36ca0:	lsl	r2, r2, #3
   36ca4:	str	r2, [sp, #48]	; 0x30
   36ca8:	ldr	r2, [sp, #32]
   36cac:	mls	r3, r1, r2, r3
   36cb0:	str	r3, [sp, #24]
   36cb4:	lsl	r3, r3, #3
   36cb8:	str	r3, [sp, #36]	; 0x24
   36cbc:	ldr	r3, [sp, #8]
   36cc0:	cmp	r3, #0
   36cc4:	beq	36cd8 <GetDataSlab+0x14eac>
   36cc8:	ldr	r3, [sp, #48]	; 0x30
   36ccc:	add	r6, r6, r3
   36cd0:	ldr	r3, [sp, #8]
   36cd4:	add	r4, r4, r3
   36cd8:	ldr	r3, [sp, #20]
   36cdc:	cmp	r3, #0
   36ce0:	ble	36d1c <GetDataSlab+0x14ef0>
   36ce4:	ldr	r3, [sp, #4]
   36ce8:	mov	r0, r6
   36cec:	add	r1, r3, fp, lsl #3
   36cf0:	ldrd	r2, [r0]
   36cf4:	add	r0, r0, sl
   36cf8:	strd	r2, [r1], #8
   36cfc:	cmp	r1, r7
   36d00:	bne	36cf0 <GetDataSlab+0x14ec4>
   36d04:	ldr	r3, [sp, #32]
   36d08:	ldr	r2, [sp, #40]	; 0x28
   36d0c:	add	r3, r3, r4
   36d10:	add	r6, r6, r2
   36d14:	ldr	r2, [sp, #44]	; 0x2c
   36d18:	add	r4, r3, r2
   36d1c:	ldr	r3, [sp, #232]	; 0xe8
   36d20:	cmp	r3, #1
   36d24:	ldr	r3, [sp, #24]
   36d28:	add	r4, r4, r3
   36d2c:	ldr	r3, [sp, #36]	; 0x24
   36d30:	add	r6, r6, r3
   36d34:	ble	36e0c <GetDataSlab+0x14fe0>
   36d38:	ldr	r3, [sp, #100]	; 0x64
   36d3c:	ldr	r2, [sp, #228]	; 0xe4
   36d40:	add	r3, r3, #1
   36d44:	ldr	r1, [r2, #4]
   36d48:	str	r3, [sp, #100]	; 0x64
   36d4c:	sdiv	r2, r3, r1
   36d50:	mls	r3, r1, r2, r3
   36d54:	cmp	r3, #0
   36d58:	bne	36df4 <GetDataSlab+0x14fc8>
   36d5c:	add	ip, sp, #100	; 0x64
   36d60:	mov	r0, #1
   36d64:	ldr	lr, [sp, #12]
   36d68:	ldr	r3, [sp, #228]	; 0xe4
   36d6c:	add	r5, r3, #4
   36d70:	b	36db8 <GetDataSlab+0x14f8c>
   36d74:	ldr	r3, [lr, #-4]
   36d78:	ldr	r1, [r9, r0, lsl #2]
   36d7c:	mla	r3, r1, r3, r2
   36d80:	add	r6, r6, r3, lsl #3
   36d84:	add	r4, r4, r3
   36d88:	ldr	r3, [sp, #232]	; 0xe8
   36d8c:	add	r0, r0, #1
   36d90:	cmp	r3, r0
   36d94:	beq	36e0c <GetDataSlab+0x14fe0>
   36d98:	ldr	r3, [ip]
   36d9c:	ldr	r1, [r5, #4]!
   36da0:	add	r3, r3, #1
   36da4:	sdiv	r2, r3, r1
   36da8:	str	r3, [ip]
   36dac:	mls	r3, r1, r2, r3
   36db0:	cmp	r3, #0
   36db4:	bne	36df8 <GetDataSlab+0x14fcc>
   36db8:	ldr	r2, [lr, #4]!
   36dbc:	str	r8, [ip], #4
   36dc0:	sdiv	r3, r4, r2
   36dc4:	mls	r3, r2, r3, r4
   36dc8:	cmp	r3, #0
   36dcc:	sub	r2, r2, r3
   36dd0:	bne	36d74 <GetDataSlab+0x14f48>
   36dd4:	ldr	r3, [r9, r0, lsl #2]
   36dd8:	cmp	r3, #0
   36ddc:	beq	36d88 <GetDataSlab+0x14f5c>
   36de0:	ldr	r2, [lr, #-4]
   36de4:	mul	r3, r2, r3
   36de8:	add	r6, r6, r3, lsl #3
   36dec:	add	r4, r4, r3
   36df0:	b	36d88 <GetDataSlab+0x14f5c>
   36df4:	mov	r0, #1
   36df8:	add	r3, sp, #176	; 0xb0
   36dfc:	add	r3, r3, r0, lsl #2
   36e00:	ldr	r3, [r3, #-120]	; 0xffffff88
   36e04:	add	r6, r6, r3, lsl #3
   36e08:	add	r4, r4, r3
   36e0c:	ldr	r3, [sp, #20]
   36e10:	add	fp, fp, r3
   36e14:	ldr	r3, [sp, #28]
   36e18:	add	r7, r7, r3
   36e1c:	ldr	r3, [sp, #16]
   36e20:	cmp	fp, r3
   36e24:	blt	36cbc <GetDataSlab+0x14e90>
   36e28:	b	30874 <GetDataSlab+0xea48>
   36e2c:	ldr	r3, [sp, #232]	; 0xe8
   36e30:	ldr	r6, [sl]
   36e34:	cmp	r3, #1
   36e38:	ldr	r3, [r8]
   36e3c:	str	r3, [sp, #16]
   36e40:	ldr	r3, [sp, #228]	; 0xe4
   36e44:	ldr	fp, [r3]
   36e48:	sub	r3, r6, #1
   36e4c:	str	r3, [sp, #56]	; 0x38
   36e50:	ldr	r3, [sp, #16]
   36e54:	str	fp, [sp, #20]
   36e58:	str	r3, [sp, #136]	; 0x88
   36e5c:	ble	4025c <GetDataSlab+0x1e430>
   36e60:	ldr	r3, [sp, #232]	; 0xe8
   36e64:	add	r7, sl, #4
   36e68:	add	r5, sp, #60	; 0x3c
   36e6c:	mov	lr, r8
   36e70:	mov	r4, #0
   36e74:	str	r9, [sp, #32]
   36e78:	add	r3, sl, r3, lsl #2
   36e7c:	str	r3, [sp, #40]	; 0x28
   36e80:	ldr	r3, [sp, #12]
   36e84:	str	r3, [sp, #24]
   36e88:	ldr	r3, [sp, #228]	; 0xe4
   36e8c:	str	r3, [sp, #28]
   36e90:	ldr	r3, [r7], #4
   36e94:	ldr	r0, [lr], #4
   36e98:	ldr	r2, [sp, #24]
   36e9c:	sub	ip, r3, #1
   36ea0:	mov	r1, lr
   36ea4:	str	ip, [r5], #4
   36ea8:	str	r2, [sp, #36]	; 0x24
   36eac:	mov	r3, r1
   36eb0:	ldr	r2, [r1, #-4]!
   36eb4:	ldr	r3, [r3]
   36eb8:	cmp	r1, r8
   36ebc:	mul	ip, r2, ip
   36ec0:	mul	r0, r3, r0
   36ec4:	bne	36eac <GetDataSlab+0x15080>
   36ec8:	ldr	r3, [sp, #24]
   36ecc:	str	ip, [r5, #-4]
   36ed0:	str	r0, [r3, #4]!
   36ed4:	str	r3, [sp, #24]
   36ed8:	ldr	r0, [sp, #28]
   36edc:	ldr	r3, [sp, #40]	; 0x28
   36ee0:	cmp	r7, r3
   36ee4:	ldr	r3, [sp, #36]	; 0x24
   36ee8:	ldr	r1, [r3]
   36eec:	ldr	r3, [sp, #32]
   36ef0:	ldr	r2, [r3, #4]!
   36ef4:	mla	r4, r2, r1, r4
   36ef8:	str	r3, [sp, #32]
   36efc:	ldr	r3, [r0, #4]!
   36f00:	ldr	r2, [sp, #20]
   36f04:	str	r0, [sp, #28]
   36f08:	mul	r3, r3, r2
   36f0c:	str	r3, [sp, #20]
   36f10:	bne	36e90 <GetDataSlab+0x15064>
   36f14:	ldr	r3, [sp, #8]
   36f18:	cmp	r6, #1
   36f1c:	add	r5, r3, r4, lsl #3
   36f20:	ldr	r3, [sp, #20]
   36f24:	beq	3f620 <GetDataSlab+0x1d7f4>
   36f28:	cmp	r3, #0
   36f2c:	ble	30874 <GetDataSlab+0xea48>
   36f30:	ldr	r3, [r9]
   36f34:	str	r3, [sp, #8]
   36f38:	mov	r3, #0
   36f3c:	str	r3, [sp, #24]
   36f40:	ldr	r3, [sp, #8]
   36f44:	cmp	r3, #0
   36f48:	beq	36f54 <GetDataSlab+0x15128>
   36f4c:	add	r5, r5, r3, lsl #3
   36f50:	add	r4, r4, r3
   36f54:	cmp	fp, #0
   36f58:	ble	36fa4 <GetDataSlab+0x15178>
   36f5c:	ldr	r3, [sp, #4]
   36f60:	ldr	r2, [sp, #24]
   36f64:	add	r2, r3, r2, lsl #2
   36f68:	mov	r3, #0
   36f6c:	ldr	r1, [r5]
   36f70:	add	r3, r3, #1
   36f74:	str	r1, [r2], #4
   36f78:	ldr	r1, [sp, #228]	; 0xe4
   36f7c:	ldr	r6, [sl]
   36f80:	ldr	fp, [r1]
   36f84:	add	r5, r5, r6, lsl #3
   36f88:	add	r4, r4, r6
   36f8c:	cmp	fp, r3
   36f90:	bgt	36f6c <GetDataSlab+0x15140>
   36f94:	ldr	r3, [r9]
   36f98:	str	r3, [sp, #8]
   36f9c:	ldr	r3, [r8]
   36fa0:	str	r3, [sp, #16]
   36fa4:	ldr	r2, [sp, #8]
   36fa8:	ldr	r3, [sp, #16]
   36fac:	sub	r3, r3, r2
   36fb0:	ldr	r2, [sp, #232]	; 0xe8
   36fb4:	mls	r3, r6, fp, r3
   36fb8:	cmp	r2, #1
   36fbc:	add	r4, r4, r3
   36fc0:	add	r5, r5, r3, lsl #3
   36fc4:	ble	370a0 <GetDataSlab+0x15274>
   36fc8:	ldr	r3, [sp, #100]	; 0x64
   36fcc:	ldr	r2, [sp, #228]	; 0xe4
   36fd0:	add	r3, r3, #1
   36fd4:	ldr	r1, [r2, #4]
   36fd8:	str	r3, [sp, #100]	; 0x64
   36fdc:	sdiv	r2, r3, r1
   36fe0:	mls	r3, r1, r2, r3
   36fe4:	cmp	r3, #0
   36fe8:	bne	37088 <GetDataSlab+0x1525c>
   36fec:	add	ip, sp, #100	; 0x64
   36ff0:	mov	r0, #1
   36ff4:	ldr	lr, [sp, #12]
   36ff8:	ldr	r3, [sp, #228]	; 0xe4
   36ffc:	add	r7, r3, #4
   37000:	b	37048 <GetDataSlab+0x1521c>
   37004:	ldr	r3, [lr, #-4]
   37008:	ldr	r1, [r9, r0, lsl #2]
   3700c:	mla	r3, r1, r3, r2
   37010:	add	r5, r5, r3, lsl #3
   37014:	add	r4, r4, r3
   37018:	ldr	r3, [sp, #232]	; 0xe8
   3701c:	add	r0, r0, #1
   37020:	cmp	r3, r0
   37024:	beq	370a0 <GetDataSlab+0x15274>
   37028:	ldr	r3, [ip]
   3702c:	ldr	r1, [r7, #4]!
   37030:	add	r3, r3, #1
   37034:	sdiv	r2, r3, r1
   37038:	str	r3, [ip]
   3703c:	mls	r3, r1, r2, r3
   37040:	cmp	r3, #0
   37044:	bne	3708c <GetDataSlab+0x15260>
   37048:	ldr	r2, [lr, #4]!
   3704c:	mov	r3, #0
   37050:	str	r3, [ip], #4
   37054:	sdiv	r3, r4, r2
   37058:	mls	r3, r2, r3, r4
   3705c:	cmp	r3, #0
   37060:	sub	r2, r2, r3
   37064:	bne	37004 <GetDataSlab+0x151d8>
   37068:	ldr	r3, [r9, r0, lsl #2]
   3706c:	cmp	r3, #0
   37070:	beq	37018 <GetDataSlab+0x151ec>
   37074:	ldr	r2, [lr, #-4]
   37078:	mul	r3, r2, r3
   3707c:	add	r5, r5, r3, lsl #3
   37080:	add	r4, r4, r3
   37084:	b	37018 <GetDataSlab+0x151ec>
   37088:	mov	r0, #1
   3708c:	add	r3, sp, #176	; 0xb0
   37090:	add	r3, r3, r0, lsl #2
   37094:	ldr	r3, [r3, #-120]	; 0xffffff88
   37098:	add	r5, r5, r3, lsl #3
   3709c:	add	r4, r4, r3
   370a0:	ldrd	r2, [sp, #20]
   370a4:	add	r3, r3, fp
   370a8:	cmp	r3, r2
   370ac:	str	r3, [sp, #24]
   370b0:	blt	36f40 <GetDataSlab+0x15114>
   370b4:	b	30874 <GetDataSlab+0xea48>
   370b8:	ldr	r3, [sp, #232]	; 0xe8
   370bc:	ldr	r6, [sl]
   370c0:	cmp	r3, #1
   370c4:	ldr	r3, [r8]
   370c8:	str	r3, [sp, #16]
   370cc:	ldr	r3, [sp, #228]	; 0xe4
   370d0:	ldr	fp, [r3]
   370d4:	sub	r3, r6, #1
   370d8:	str	r3, [sp, #56]	; 0x38
   370dc:	ldr	r3, [sp, #16]
   370e0:	str	fp, [sp, #20]
   370e4:	str	r3, [sp, #136]	; 0x88
   370e8:	ble	402b4 <GetDataSlab+0x1e488>
   370ec:	ldr	r3, [sp, #232]	; 0xe8
   370f0:	add	r7, sl, #4
   370f4:	add	r5, sp, #60	; 0x3c
   370f8:	mov	lr, r8
   370fc:	mov	r4, #0
   37100:	str	r9, [sp, #32]
   37104:	add	r3, sl, r3, lsl #2
   37108:	str	r3, [sp, #40]	; 0x28
   3710c:	ldr	r3, [sp, #12]
   37110:	str	r3, [sp, #24]
   37114:	ldr	r3, [sp, #228]	; 0xe4
   37118:	str	r3, [sp, #28]
   3711c:	ldr	r3, [r7], #4
   37120:	ldr	r0, [lr], #4
   37124:	ldr	r2, [sp, #24]
   37128:	sub	ip, r3, #1
   3712c:	mov	r1, lr
   37130:	str	ip, [r5], #4
   37134:	str	r2, [sp, #36]	; 0x24
   37138:	mov	r3, r1
   3713c:	ldr	r2, [r1, #-4]!
   37140:	ldr	r3, [r3]
   37144:	cmp	r1, r8
   37148:	mul	ip, r2, ip
   3714c:	mul	r0, r3, r0
   37150:	bne	37138 <GetDataSlab+0x1530c>
   37154:	ldr	r3, [sp, #24]
   37158:	str	ip, [r5, #-4]
   3715c:	str	r0, [r3, #4]!
   37160:	str	r3, [sp, #24]
   37164:	ldr	r0, [sp, #28]
   37168:	ldr	r3, [sp, #40]	; 0x28
   3716c:	cmp	r3, r7
   37170:	ldr	r3, [sp, #36]	; 0x24
   37174:	ldr	r1, [r3]
   37178:	ldr	r3, [sp, #32]
   3717c:	ldr	r2, [r3, #4]!
   37180:	mla	r4, r2, r1, r4
   37184:	str	r3, [sp, #32]
   37188:	ldr	r3, [r0, #4]!
   3718c:	ldr	r2, [sp, #20]
   37190:	str	r0, [sp, #28]
   37194:	mul	r3, r3, r2
   37198:	str	r3, [sp, #20]
   3719c:	bne	3711c <GetDataSlab+0x152f0>
   371a0:	ldr	r3, [sp, #8]
   371a4:	cmp	r6, #1
   371a8:	add	r5, r3, r4, lsl #3
   371ac:	ldr	r3, [sp, #20]
   371b0:	beq	3e748 <GetDataSlab+0x1c91c>
   371b4:	cmp	r3, #0
   371b8:	ble	30874 <GetDataSlab+0xea48>
   371bc:	ldr	r3, [r9]
   371c0:	str	r3, [sp, #8]
   371c4:	mov	r3, #0
   371c8:	str	r3, [sp, #24]
   371cc:	ldr	r3, [sp, #8]
   371d0:	cmp	r3, #0
   371d4:	beq	371e0 <GetDataSlab+0x153b4>
   371d8:	add	r5, r5, r3, lsl #3
   371dc:	add	r4, r4, r3
   371e0:	cmp	fp, #0
   371e4:	ble	37230 <GetDataSlab+0x15404>
   371e8:	ldr	r3, [sp, #4]
   371ec:	ldr	r2, [sp, #24]
   371f0:	add	r1, r3, r2
   371f4:	mov	r2, r1
   371f8:	ldr	r3, [r5]
   371fc:	ldr	r0, [sp, #228]	; 0xe4
   37200:	strb	r3, [r2], #1
   37204:	sub	r3, r2, r1
   37208:	ldr	r6, [sl]
   3720c:	ldr	fp, [r0]
   37210:	add	r5, r5, r6, lsl #3
   37214:	add	r4, r4, r6
   37218:	cmp	fp, r3
   3721c:	bgt	371f8 <GetDataSlab+0x153cc>
   37220:	ldr	r3, [r9]
   37224:	str	r3, [sp, #8]
   37228:	ldr	r3, [r8]
   3722c:	str	r3, [sp, #16]
   37230:	ldr	r2, [sp, #8]
   37234:	ldr	r3, [sp, #16]
   37238:	sub	r3, r3, r2
   3723c:	ldr	r2, [sp, #232]	; 0xe8
   37240:	mls	r3, r6, fp, r3
   37244:	cmp	r2, #1
   37248:	add	r4, r4, r3
   3724c:	add	r5, r5, r3, lsl #3
   37250:	ble	3732c <GetDataSlab+0x15500>
   37254:	ldr	r3, [sp, #100]	; 0x64
   37258:	ldr	r2, [sp, #228]	; 0xe4
   3725c:	add	r3, r3, #1
   37260:	ldr	r1, [r2, #4]
   37264:	str	r3, [sp, #100]	; 0x64
   37268:	sdiv	r2, r3, r1
   3726c:	mls	r3, r1, r2, r3
   37270:	cmp	r3, #0
   37274:	bne	37314 <GetDataSlab+0x154e8>
   37278:	add	ip, sp, #100	; 0x64
   3727c:	mov	r0, #1
   37280:	ldr	lr, [sp, #12]
   37284:	ldr	r3, [sp, #228]	; 0xe4
   37288:	add	r7, r3, #4
   3728c:	b	372d4 <GetDataSlab+0x154a8>
   37290:	ldr	r3, [lr, #-4]
   37294:	ldr	r1, [r9, r0, lsl #2]
   37298:	mla	r3, r1, r3, r2
   3729c:	add	r5, r5, r3, lsl #3
   372a0:	add	r4, r4, r3
   372a4:	ldr	r3, [sp, #232]	; 0xe8
   372a8:	add	r0, r0, #1
   372ac:	cmp	r3, r0
   372b0:	beq	3732c <GetDataSlab+0x15500>
   372b4:	ldr	r3, [ip]
   372b8:	ldr	r1, [r7, #4]!
   372bc:	add	r3, r3, #1
   372c0:	sdiv	r2, r3, r1
   372c4:	str	r3, [ip]
   372c8:	mls	r3, r1, r2, r3
   372cc:	cmp	r3, #0
   372d0:	bne	37318 <GetDataSlab+0x154ec>
   372d4:	ldr	r2, [lr, #4]!
   372d8:	mov	r3, #0
   372dc:	str	r3, [ip], #4
   372e0:	sdiv	r3, r4, r2
   372e4:	mls	r3, r2, r3, r4
   372e8:	cmp	r3, #0
   372ec:	sub	r2, r2, r3
   372f0:	bne	37290 <GetDataSlab+0x15464>
   372f4:	ldr	r3, [r9, r0, lsl #2]
   372f8:	cmp	r3, #0
   372fc:	beq	372a4 <GetDataSlab+0x15478>
   37300:	ldr	r2, [lr, #-4]
   37304:	mul	r3, r2, r3
   37308:	add	r5, r5, r3, lsl #3
   3730c:	add	r4, r4, r3
   37310:	b	372a4 <GetDataSlab+0x15478>
   37314:	mov	r0, #1
   37318:	add	r3, sp, #176	; 0xb0
   3731c:	add	r3, r3, r0, lsl #2
   37320:	ldr	r3, [r3, #-120]	; 0xffffff88
   37324:	add	r5, r5, r3, lsl #3
   37328:	add	r4, r4, r3
   3732c:	ldrd	r2, [sp, #20]
   37330:	add	r3, r3, fp
   37334:	cmp	r3, r2
   37338:	str	r3, [sp, #24]
   3733c:	blt	371cc <GetDataSlab+0x153a0>
   37340:	b	30874 <GetDataSlab+0xea48>
   37344:	ldr	r3, [sl]
   37348:	str	r3, [sp, #32]
   3734c:	ldr	r3, [sp, #232]	; 0xe8
   37350:	cmp	r3, #1
   37354:	ldr	r3, [r8]
   37358:	str	r3, [sp, #40]	; 0x28
   3735c:	ldr	r3, [sp, #228]	; 0xe4
   37360:	ldr	r3, [r3]
   37364:	str	r3, [sp, #20]
   37368:	ldr	r3, [sp, #32]
   3736c:	sub	r3, r3, #1
   37370:	str	r3, [sp, #56]	; 0x38
   37374:	ldr	r3, [sp, #40]	; 0x28
   37378:	str	r3, [sp, #136]	; 0x88
   3737c:	ble	4024c <GetDataSlab+0x1e420>
   37380:	add	r5, sl, #4
   37384:	ldr	fp, [sp, #228]	; 0xe4
   37388:	add	lr, sp, #60	; 0x3c
   3738c:	mov	r4, r8
   37390:	mov	r7, #0
   37394:	str	r9, [sp, #24]
   37398:	ldr	r3, [sp, #232]	; 0xe8
   3739c:	add	r3, sl, r3, lsl #2
   373a0:	ldr	sl, [sp, #12]
   373a4:	str	r3, [sp, #28]
   373a8:	ldr	r3, [sp, #20]
   373ac:	str	r3, [sp, #16]
   373b0:	ldr	r3, [r5], #4
   373b4:	mov	r6, sl
   373b8:	ldr	r0, [r4], #4
   373bc:	sub	ip, r3, #1
   373c0:	mov	r1, r4
   373c4:	str	ip, [lr], #4
   373c8:	mov	r3, r1
   373cc:	ldr	r2, [r1, #-4]!
   373d0:	ldr	r3, [r3]
   373d4:	cmp	r8, r1
   373d8:	mul	ip, r2, ip
   373dc:	mul	r0, r3, r0
   373e0:	bne	373c8 <GetDataSlab+0x1559c>
   373e4:	ldr	r3, [sp, #28]
   373e8:	str	r0, [sl, #4]!
   373ec:	ldr	r1, [r6]
   373f0:	str	ip, [lr, #-4]
   373f4:	cmp	r3, r5
   373f8:	ldr	r3, [sp, #24]
   373fc:	ldr	r2, [r3, #4]!
   37400:	mla	r7, r2, r1, r7
   37404:	str	r3, [sp, #24]
   37408:	ldr	r3, [fp, #4]!
   3740c:	ldr	r2, [sp, #16]
   37410:	mul	r3, r3, r2
   37414:	str	r3, [sp, #16]
   37418:	bne	373b0 <GetDataSlab+0x15584>
   3741c:	ldr	r3, [sp, #32]
   37420:	cmp	r3, #1
   37424:	ldr	r3, [sp, #8]
   37428:	add	r8, r3, r7, lsl #3
   3742c:	ldr	r3, [sp, #16]
   37430:	beq	3e288 <GetDataSlab+0x1c45c>
   37434:	cmp	r3, #0
   37438:	ble	30874 <GetDataSlab+0xea48>
   3743c:	ldr	r3, [r9]
   37440:	mov	sl, #0
   37444:	ldr	r2, [sp, #20]
   37448:	ldr	r1, [sp, #20]
   3744c:	str	r3, [sp, #24]
   37450:	ldr	r3, [sp, #32]
   37454:	lsl	r2, r2, #3
   37458:	str	r2, [sp, #36]	; 0x24
   3745c:	mov	r2, #0
   37460:	lsl	fp, r3, #3
   37464:	ldr	r3, [sp, #20]
   37468:	str	r2, [sp, #8]
   3746c:	ldr	r2, [sp, #32]
   37470:	sub	r3, r3, #1
   37474:	mul	r3, r2, r3
   37478:	ldr	r2, [sp, #36]	; 0x24
   3747c:	str	r3, [sp, #48]	; 0x30
   37480:	ldr	r3, [sp, #20]
   37484:	mul	r3, r3, fp
   37488:	str	r3, [sp, #44]	; 0x2c
   3748c:	ldr	r3, [sp, #4]
   37490:	add	r6, r3, r2
   37494:	ldr	r2, [sp, #24]
   37498:	ldr	r3, [sp, #40]	; 0x28
   3749c:	sub	r3, r3, r2
   374a0:	lsl	r2, r2, #3
   374a4:	str	r2, [sp, #52]	; 0x34
   374a8:	ldr	r2, [sp, #32]
   374ac:	mls	r3, r1, r2, r3
   374b0:	str	r3, [sp, #28]
   374b4:	lsl	r3, r3, #3
   374b8:	str	r3, [sp, #40]	; 0x28
   374bc:	ldr	r3, [sp, #24]
   374c0:	cmp	r3, #0
   374c4:	beq	374d8 <GetDataSlab+0x156ac>
   374c8:	ldr	r3, [sp, #52]	; 0x34
   374cc:	add	r8, r8, r3
   374d0:	ldr	r3, [sp, #24]
   374d4:	add	r7, r7, r3
   374d8:	ldr	r3, [sp, #20]
   374dc:	cmp	r3, #0
   374e0:	ble	37524 <GetDataSlab+0x156f8>
   374e4:	ldr	r3, [sp, #4]
   374e8:	mov	r5, r8
   374ec:	ldr	r2, [sp, #8]
   374f0:	add	r4, r3, r2, lsl #3
   374f4:	ldrd	r0, [r5]
   374f8:	add	r5, r5, fp
   374fc:	bl	4e0e4 <__aeabi_l2d>
   37500:	strd	r0, [r4], #8
   37504:	cmp	r4, r6
   37508:	bne	374f4 <GetDataSlab+0x156c8>
   3750c:	ldr	r3, [sp, #32]
   37510:	ldr	r2, [sp, #44]	; 0x2c
   37514:	add	r3, r3, r7
   37518:	add	r8, r8, r2
   3751c:	ldr	r2, [sp, #48]	; 0x30
   37520:	add	r7, r3, r2
   37524:	ldr	r3, [sp, #232]	; 0xe8
   37528:	cmp	r3, #1
   3752c:	ldr	r3, [sp, #28]
   37530:	add	r7, r7, r3
   37534:	ldr	r3, [sp, #40]	; 0x28
   37538:	add	r8, r8, r3
   3753c:	ble	37614 <GetDataSlab+0x157e8>
   37540:	ldr	r3, [sp, #100]	; 0x64
   37544:	ldr	r2, [sp, #228]	; 0xe4
   37548:	add	r3, r3, #1
   3754c:	ldr	r1, [r2, #4]
   37550:	str	r3, [sp, #100]	; 0x64
   37554:	sdiv	r2, r3, r1
   37558:	mls	r3, r1, r2, r3
   3755c:	cmp	r3, #0
   37560:	bne	375fc <GetDataSlab+0x157d0>
   37564:	add	ip, sp, #100	; 0x64
   37568:	mov	r0, #1
   3756c:	ldr	lr, [sp, #12]
   37570:	ldr	r3, [sp, #228]	; 0xe4
   37574:	add	r4, r3, #4
   37578:	b	375c0 <GetDataSlab+0x15794>
   3757c:	ldr	r3, [lr, #-4]
   37580:	ldr	r1, [r9, r0, lsl #2]
   37584:	mla	r3, r1, r3, r2
   37588:	add	r8, r8, r3, lsl #3
   3758c:	add	r7, r7, r3
   37590:	ldr	r3, [sp, #232]	; 0xe8
   37594:	add	r0, r0, #1
   37598:	cmp	r3, r0
   3759c:	beq	37614 <GetDataSlab+0x157e8>
   375a0:	ldr	r3, [ip]
   375a4:	ldr	r1, [r4, #4]!
   375a8:	add	r3, r3, #1
   375ac:	sdiv	r2, r3, r1
   375b0:	str	r3, [ip]
   375b4:	mls	r3, r1, r2, r3
   375b8:	cmp	r3, #0
   375bc:	bne	37600 <GetDataSlab+0x157d4>
   375c0:	ldr	r2, [lr, #4]!
   375c4:	str	sl, [ip], #4
   375c8:	sdiv	r3, r7, r2
   375cc:	mls	r3, r2, r3, r7
   375d0:	cmp	r3, #0
   375d4:	sub	r2, r2, r3
   375d8:	bne	3757c <GetDataSlab+0x15750>
   375dc:	ldr	r3, [r9, r0, lsl #2]
   375e0:	cmp	r3, #0
   375e4:	beq	37590 <GetDataSlab+0x15764>
   375e8:	ldr	r2, [lr, #-4]
   375ec:	mul	r3, r2, r3
   375f0:	add	r8, r8, r3, lsl #3
   375f4:	add	r7, r7, r3
   375f8:	b	37590 <GetDataSlab+0x15764>
   375fc:	mov	r0, #1
   37600:	add	r3, sp, #176	; 0xb0
   37604:	add	r3, r3, r0, lsl #2
   37608:	ldr	r3, [r3, #-120]	; 0xffffff88
   3760c:	add	r8, r8, r3, lsl #3
   37610:	add	r7, r7, r3
   37614:	ldr	r3, [sp, #8]
   37618:	ldr	r2, [sp, #20]
   3761c:	add	r3, r3, r2
   37620:	ldr	r2, [sp, #16]
   37624:	str	r3, [sp, #8]
   37628:	ldr	r3, [sp, #36]	; 0x24
   3762c:	add	r6, r6, r3
   37630:	ldr	r3, [sp, #8]
   37634:	cmp	r3, r2
   37638:	blt	374bc <GetDataSlab+0x15690>
   3763c:	b	30874 <GetDataSlab+0xea48>
   37640:	cmp	r3, #0
   37644:	ble	30874 <GetDataSlab+0xea48>
   37648:	ldr	r3, [r9]
   3764c:	mov	sl, #0
   37650:	mov	r7, sl
   37654:	str	r3, [sp, #8]
   37658:	ldr	r3, [sp, #8]
   3765c:	cmp	r3, #0
   37660:	addne	r5, r5, r3, lsl #1
   37664:	addne	r4, r4, r3
   37668:	cmp	fp, #0
   3766c:	ble	376ac <GetDataSlab+0x15880>
   37670:	ldr	r3, [sp, #4]
   37674:	sub	r1, r5, #2
   37678:	add	r0, r3, sl
   3767c:	mov	r3, r0
   37680:	ldrh	r2, [r1, #2]!
   37684:	ldr	ip, [sp, #228]	; 0xe4
   37688:	strb	r2, [r3], #1
   3768c:	sub	r2, r3, r0
   37690:	ldr	fp, [ip]
   37694:	cmp	fp, r2
   37698:	bgt	37680 <GetDataSlab+0x15854>
   3769c:	ldr	r3, [r9]
   376a0:	str	r3, [sp, #8]
   376a4:	ldr	r3, [r8]
   376a8:	str	r3, [sp, #16]
   376ac:	ldr	r2, [sp, #8]
   376b0:	ldr	r3, [sp, #232]	; 0xe8
   376b4:	cmp	r3, #1
   376b8:	ldr	r3, [sp, #16]
   376bc:	sub	r3, r3, r2
   376c0:	add	r4, r4, r3
   376c4:	add	r5, r5, r3, lsl #1
   376c8:	ble	377a0 <GetDataSlab+0x15974>
   376cc:	ldr	r3, [sp, #100]	; 0x64
   376d0:	ldr	r2, [sp, #228]	; 0xe4
   376d4:	add	r3, r3, #1
   376d8:	ldr	r1, [r2, #4]
   376dc:	str	r3, [sp, #100]	; 0x64
   376e0:	sdiv	r2, r3, r1
   376e4:	mls	r3, r1, r2, r3
   376e8:	cmp	r3, #0
   376ec:	bne	37788 <GetDataSlab+0x1595c>
   376f0:	ldr	r3, [sp, #228]	; 0xe4
   376f4:	add	ip, sp, #100	; 0x64
   376f8:	add	lr, sp, #140	; 0x8c
   376fc:	mov	r0, #1
   37700:	add	r6, r3, #4
   37704:	b	3774c <GetDataSlab+0x15920>
   37708:	ldr	r3, [lr, #-8]
   3770c:	ldr	r1, [r9, r0, lsl #2]
   37710:	mla	r3, r1, r3, r2
   37714:	add	r5, r5, r3, lsl #1
   37718:	add	r4, r4, r3
   3771c:	ldr	r3, [sp, #232]	; 0xe8
   37720:	add	r0, r0, #1
   37724:	cmp	r3, r0
   37728:	beq	377a0 <GetDataSlab+0x15974>
   3772c:	ldr	r3, [ip]
   37730:	ldr	r1, [r6, #4]!
   37734:	add	r3, r3, #1
   37738:	sdiv	r2, r3, r1
   3773c:	str	r3, [ip]
   37740:	mls	r3, r1, r2, r3
   37744:	cmp	r3, #0
   37748:	bne	3778c <GetDataSlab+0x15960>
   3774c:	ldr	r2, [lr], #4
   37750:	str	r7, [ip], #4
   37754:	sdiv	r3, r4, r2
   37758:	mls	r3, r2, r3, r4
   3775c:	cmp	r3, #0
   37760:	sub	r2, r2, r3
   37764:	bne	37708 <GetDataSlab+0x158dc>
   37768:	ldr	r3, [r9, r0, lsl #2]
   3776c:	cmp	r3, #0
   37770:	beq	3771c <GetDataSlab+0x158f0>
   37774:	ldr	r2, [lr, #-8]
   37778:	mul	r3, r2, r3
   3777c:	add	r5, r5, r3, lsl #1
   37780:	add	r4, r4, r3
   37784:	b	3771c <GetDataSlab+0x158f0>
   37788:	mov	r0, #1
   3778c:	add	r3, sp, #176	; 0xb0
   37790:	add	r3, r3, r0, lsl #2
   37794:	ldr	r3, [r3, #-120]	; 0xffffff88
   37798:	add	r5, r5, r3, lsl #1
   3779c:	add	r4, r4, r3
   377a0:	ldr	r3, [sp, #20]
   377a4:	add	sl, sl, fp
   377a8:	cmp	sl, r3
   377ac:	blt	37658 <GetDataSlab+0x1582c>
   377b0:	b	30874 <GetDataSlab+0xea48>
   377b4:	cmp	r3, #0
   377b8:	ble	30874 <GetDataSlab+0xea48>
   377bc:	ldr	r3, [sp, #20]
   377c0:	mov	r8, #0
   377c4:	mov	r7, r8
   377c8:	ldr	sl, [r9]
   377cc:	lsl	r3, r3, #1
   377d0:	str	r3, [sp, #12]
   377d4:	ldr	r3, [sp, #36]	; 0x24
   377d8:	sub	fp, r3, sl
   377dc:	lsl	r3, sl, #1
   377e0:	str	r3, [sp, #24]
   377e4:	lsl	r3, fp, #1
   377e8:	str	r3, [sp, #8]
   377ec:	cmp	sl, #0
   377f0:	beq	37800 <GetDataSlab+0x159d4>
   377f4:	ldr	r3, [sp, #24]
   377f8:	add	r4, r4, sl
   377fc:	add	r6, r6, r3
   37800:	ldr	r3, [sp, #20]
   37804:	cmp	r3, #0
   37808:	ble	37838 <GetDataSlab+0x15a0c>
   3780c:	ldr	r3, [sp, #4]
   37810:	mov	r2, r6
   37814:	add	r1, r3, r8, lsl #2
   37818:	ldr	r3, [sp, #12]
   3781c:	add	r0, r6, r3
   37820:	ldrsh	r3, [r2], #2
   37824:	vmov	s15, r3
   37828:	cmp	r2, r0
   3782c:	vcvt.f32.s32	s15, s15
   37830:	vstmia	r1!, {s15}
   37834:	bne	37820 <GetDataSlab+0x159f4>
   37838:	ldr	r3, [sp, #232]	; 0xe8
   3783c:	add	r4, r4, fp
   37840:	cmp	r3, #1
   37844:	ldr	r3, [sp, #8]
   37848:	add	r6, r6, r3
   3784c:	ble	37924 <GetDataSlab+0x15af8>
   37850:	ldr	r3, [sp, #100]	; 0x64
   37854:	ldr	r2, [sp, #228]	; 0xe4
   37858:	add	r3, r3, #1
   3785c:	ldr	r1, [r2, #4]
   37860:	str	r3, [sp, #100]	; 0x64
   37864:	sdiv	r2, r3, r1
   37868:	mls	r3, r1, r2, r3
   3786c:	cmp	r3, #0
   37870:	bne	3790c <GetDataSlab+0x15ae0>
   37874:	ldr	r3, [sp, #228]	; 0xe4
   37878:	add	ip, sp, #100	; 0x64
   3787c:	add	lr, sp, #140	; 0x8c
   37880:	mov	r0, #1
   37884:	add	r5, r3, #4
   37888:	b	378d0 <GetDataSlab+0x15aa4>
   3788c:	ldr	r3, [lr, #-8]
   37890:	ldr	r1, [r9, r0, lsl #2]
   37894:	mla	r3, r1, r3, r2
   37898:	add	r6, r6, r3, lsl #1
   3789c:	add	r4, r4, r3
   378a0:	ldr	r3, [sp, #232]	; 0xe8
   378a4:	add	r0, r0, #1
   378a8:	cmp	r3, r0
   378ac:	beq	37924 <GetDataSlab+0x15af8>
   378b0:	ldr	r3, [ip]
   378b4:	ldr	r1, [r5, #4]!
   378b8:	add	r3, r3, #1
   378bc:	sdiv	r2, r3, r1
   378c0:	str	r3, [ip]
   378c4:	mls	r3, r1, r2, r3
   378c8:	cmp	r3, #0
   378cc:	bne	37910 <GetDataSlab+0x15ae4>
   378d0:	ldr	r2, [lr], #4
   378d4:	str	r7, [ip], #4
   378d8:	sdiv	r3, r4, r2
   378dc:	mls	r3, r2, r3, r4
   378e0:	cmp	r3, #0
   378e4:	sub	r2, r2, r3
   378e8:	bne	3788c <GetDataSlab+0x15a60>
   378ec:	ldr	r3, [r9, r0, lsl #2]
   378f0:	cmp	r3, #0
   378f4:	beq	378a0 <GetDataSlab+0x15a74>
   378f8:	ldr	r2, [lr, #-8]
   378fc:	mul	r3, r2, r3
   37900:	add	r6, r6, r3, lsl #1
   37904:	add	r4, r4, r3
   37908:	b	378a0 <GetDataSlab+0x15a74>
   3790c:	mov	r0, #1
   37910:	add	r3, sp, #176	; 0xb0
   37914:	add	r3, r3, r0, lsl #2
   37918:	ldr	r3, [r3, #-120]	; 0xffffff88
   3791c:	add	r6, r6, r3, lsl #1
   37920:	add	r4, r4, r3
   37924:	ldr	r3, [sp, #20]
   37928:	add	r8, r8, r3
   3792c:	ldr	r3, [sp, #16]
   37930:	cmp	r8, r3
   37934:	blt	377ec <GetDataSlab+0x159c0>
   37938:	b	30874 <GetDataSlab+0xea48>
   3793c:	cmp	r3, #0
   37940:	ble	30874 <GetDataSlab+0xea48>
   37944:	ldr	r3, [sp, #20]
   37948:	mov	r8, #0
   3794c:	mov	r7, r8
   37950:	ldr	sl, [r9]
   37954:	sub	r3, r3, #1
   37958:	str	r3, [sp, #8]
   3795c:	ldr	r3, [sp, #40]	; 0x28
   37960:	sub	fp, r3, sl
   37964:	ldr	r3, [sp, #20]
   37968:	cmp	sl, #0
   3796c:	addne	r5, r5, sl
   37970:	addne	r4, r4, sl
   37974:	cmp	r3, #0
   37978:	ble	379a8 <GetDataSlab+0x15b7c>
   3797c:	ldr	r3, [sp, #4]
   37980:	sub	r2, r5, #1
   37984:	add	r1, r3, r8, lsl #2
   37988:	ldr	r3, [sp, #8]
   3798c:	add	r0, r5, r3
   37990:	ldrb	r3, [r2, #1]!
   37994:	vmov	s15, r3
   37998:	cmp	r2, r0
   3799c:	vcvt.f32.u32	s15, s15
   379a0:	vstmia	r1!, {s15}
   379a4:	bne	37990 <GetDataSlab+0x15b64>
   379a8:	ldr	r3, [sp, #232]	; 0xe8
   379ac:	add	r4, r4, fp
   379b0:	add	r5, r5, fp
   379b4:	cmp	r3, #1
   379b8:	ble	37a90 <GetDataSlab+0x15c64>
   379bc:	ldr	r3, [sp, #100]	; 0x64
   379c0:	ldr	r2, [sp, #228]	; 0xe4
   379c4:	add	r3, r3, #1
   379c8:	ldr	r1, [r2, #4]
   379cc:	str	r3, [sp, #100]	; 0x64
   379d0:	sdiv	r2, r3, r1
   379d4:	mls	r3, r1, r2, r3
   379d8:	cmp	r3, #0
   379dc:	bne	37a78 <GetDataSlab+0x15c4c>
   379e0:	ldr	r3, [sp, #228]	; 0xe4
   379e4:	add	ip, sp, #100	; 0x64
   379e8:	add	lr, sp, #140	; 0x8c
   379ec:	mov	r0, #1
   379f0:	add	r6, r3, #4
   379f4:	b	37a3c <GetDataSlab+0x15c10>
   379f8:	ldr	r3, [lr, #-8]
   379fc:	ldr	r1, [r9, r0, lsl #2]
   37a00:	mla	r3, r1, r3, r2
   37a04:	add	r5, r5, r3
   37a08:	add	r4, r4, r3
   37a0c:	ldr	r3, [sp, #232]	; 0xe8
   37a10:	add	r0, r0, #1
   37a14:	cmp	r3, r0
   37a18:	beq	37a90 <GetDataSlab+0x15c64>
   37a1c:	ldr	r3, [ip]
   37a20:	ldr	r1, [r6, #4]!
   37a24:	add	r3, r3, #1
   37a28:	sdiv	r2, r3, r1
   37a2c:	str	r3, [ip]
   37a30:	mls	r3, r1, r2, r3
   37a34:	cmp	r3, #0
   37a38:	bne	37a7c <GetDataSlab+0x15c50>
   37a3c:	ldr	r2, [lr], #4
   37a40:	str	r7, [ip], #4
   37a44:	sdiv	r3, r4, r2
   37a48:	mls	r3, r2, r3, r4
   37a4c:	cmp	r3, #0
   37a50:	sub	r2, r2, r3
   37a54:	bne	379f8 <GetDataSlab+0x15bcc>
   37a58:	ldr	r3, [r9, r0, lsl #2]
   37a5c:	cmp	r3, #0
   37a60:	beq	37a0c <GetDataSlab+0x15be0>
   37a64:	ldr	r2, [lr, #-8]
   37a68:	mul	r3, r2, r3
   37a6c:	add	r5, r5, r3
   37a70:	add	r4, r4, r3
   37a74:	b	37a0c <GetDataSlab+0x15be0>
   37a78:	mov	r0, #1
   37a7c:	add	r3, sp, #176	; 0xb0
   37a80:	add	r3, r3, r0, lsl #2
   37a84:	ldr	r3, [r3, #-120]	; 0xffffff88
   37a88:	add	r4, r4, r3
   37a8c:	add	r5, r5, r3
   37a90:	ldr	r3, [sp, #20]
   37a94:	add	r8, r8, r3
   37a98:	ldr	r3, [sp, #16]
   37a9c:	cmp	r8, r3
   37aa0:	blt	37964 <GetDataSlab+0x15b38>
   37aa4:	b	30874 <GetDataSlab+0xea48>
   37aa8:	cmp	r3, #0
   37aac:	ble	30874 <GetDataSlab+0xea48>
   37ab0:	ldr	r3, [sp, #20]
   37ab4:	mov	r8, #0
   37ab8:	mov	r7, r8
   37abc:	ldr	sl, [r9]
   37ac0:	lsl	r3, r3, #1
   37ac4:	str	r3, [sp, #12]
   37ac8:	ldr	r3, [sp, #36]	; 0x24
   37acc:	sub	fp, r3, sl
   37ad0:	lsl	r3, sl, #1
   37ad4:	str	r3, [sp, #24]
   37ad8:	lsl	r3, fp, #1
   37adc:	str	r3, [sp, #8]
   37ae0:	cmp	sl, #0
   37ae4:	beq	37af4 <GetDataSlab+0x15cc8>
   37ae8:	ldr	r3, [sp, #24]
   37aec:	add	r4, r4, sl
   37af0:	add	r6, r6, r3
   37af4:	ldr	r3, [sp, #20]
   37af8:	cmp	r3, #0
   37afc:	ble	37b2c <GetDataSlab+0x15d00>
   37b00:	ldr	r3, [sp, #4]
   37b04:	mov	r2, r6
   37b08:	add	r1, r3, r8, lsl #2
   37b0c:	ldr	r3, [sp, #12]
   37b10:	add	r0, r6, r3
   37b14:	ldrh	r3, [r2], #2
   37b18:	vmov	s15, r3
   37b1c:	cmp	r2, r0
   37b20:	vcvt.f32.u32	s15, s15
   37b24:	vstmia	r1!, {s15}
   37b28:	bne	37b14 <GetDataSlab+0x15ce8>
   37b2c:	ldr	r3, [sp, #232]	; 0xe8
   37b30:	add	r4, r4, fp
   37b34:	cmp	r3, #1
   37b38:	ldr	r3, [sp, #8]
   37b3c:	add	r6, r6, r3
   37b40:	ble	37c18 <GetDataSlab+0x15dec>
   37b44:	ldr	r3, [sp, #100]	; 0x64
   37b48:	ldr	r2, [sp, #228]	; 0xe4
   37b4c:	add	r3, r3, #1
   37b50:	ldr	r1, [r2, #4]
   37b54:	str	r3, [sp, #100]	; 0x64
   37b58:	sdiv	r2, r3, r1
   37b5c:	mls	r3, r1, r2, r3
   37b60:	cmp	r3, #0
   37b64:	bne	37c00 <GetDataSlab+0x15dd4>
   37b68:	ldr	r3, [sp, #228]	; 0xe4
   37b6c:	add	ip, sp, #100	; 0x64
   37b70:	add	lr, sp, #140	; 0x8c
   37b74:	mov	r0, #1
   37b78:	add	r5, r3, #4
   37b7c:	b	37bc4 <GetDataSlab+0x15d98>
   37b80:	ldr	r3, [lr, #-8]
   37b84:	ldr	r1, [r9, r0, lsl #2]
   37b88:	mla	r3, r1, r3, r2
   37b8c:	add	r6, r6, r3, lsl #1
   37b90:	add	r4, r4, r3
   37b94:	ldr	r3, [sp, #232]	; 0xe8
   37b98:	add	r0, r0, #1
   37b9c:	cmp	r3, r0
   37ba0:	beq	37c18 <GetDataSlab+0x15dec>
   37ba4:	ldr	r3, [ip]
   37ba8:	ldr	r1, [r5, #4]!
   37bac:	add	r3, r3, #1
   37bb0:	sdiv	r2, r3, r1
   37bb4:	str	r3, [ip]
   37bb8:	mls	r3, r1, r2, r3
   37bbc:	cmp	r3, #0
   37bc0:	bne	37c04 <GetDataSlab+0x15dd8>
   37bc4:	ldr	r2, [lr], #4
   37bc8:	str	r7, [ip], #4
   37bcc:	sdiv	r3, r4, r2
   37bd0:	mls	r3, r2, r3, r4
   37bd4:	cmp	r3, #0
   37bd8:	sub	r2, r2, r3
   37bdc:	bne	37b80 <GetDataSlab+0x15d54>
   37be0:	ldr	r3, [r9, r0, lsl #2]
   37be4:	cmp	r3, #0
   37be8:	beq	37b94 <GetDataSlab+0x15d68>
   37bec:	ldr	r2, [lr, #-8]
   37bf0:	mul	r3, r2, r3
   37bf4:	add	r6, r6, r3, lsl #1
   37bf8:	add	r4, r4, r3
   37bfc:	b	37b94 <GetDataSlab+0x15d68>
   37c00:	mov	r0, #1
   37c04:	add	r3, sp, #176	; 0xb0
   37c08:	add	r3, r3, r0, lsl #2
   37c0c:	ldr	r3, [r3, #-120]	; 0xffffff88
   37c10:	add	r6, r6, r3, lsl #1
   37c14:	add	r4, r4, r3
   37c18:	ldr	r3, [sp, #20]
   37c1c:	add	r8, r8, r3
   37c20:	ldr	r3, [sp, #16]
   37c24:	cmp	r8, r3
   37c28:	blt	37ae0 <GetDataSlab+0x15cb4>
   37c2c:	b	30874 <GetDataSlab+0xea48>
   37c30:	cmp	r3, #0
   37c34:	ble	30874 <GetDataSlab+0xea48>
   37c38:	ldr	r3, [sp, #20]
   37c3c:	mov	r8, #0
   37c40:	mov	r7, r8
   37c44:	ldr	sl, [r9]
   37c48:	lsl	r3, r3, #2
   37c4c:	str	r3, [sp, #12]
   37c50:	ldr	r3, [sp, #36]	; 0x24
   37c54:	sub	fp, r3, sl
   37c58:	lsl	r3, sl, #2
   37c5c:	str	r3, [sp, #24]
   37c60:	lsl	r3, fp, #2
   37c64:	str	r3, [sp, #8]
   37c68:	cmp	sl, #0
   37c6c:	beq	37c7c <GetDataSlab+0x15e50>
   37c70:	ldr	r3, [sp, #24]
   37c74:	add	r4, r4, sl
   37c78:	add	r6, r6, r3
   37c7c:	ldr	r3, [sp, #20]
   37c80:	cmp	r3, #0
   37c84:	ble	37cb4 <GetDataSlab+0x15e88>
   37c88:	ldr	r3, [sp, #4]
   37c8c:	mov	r2, r6
   37c90:	add	r1, r3, r8, lsl #3
   37c94:	ldr	r3, [sp, #12]
   37c98:	add	r0, r6, r3
   37c9c:	ldr	r3, [r2], #4
   37ca0:	vmov	s15, r3
   37ca4:	cmp	r0, r2
   37ca8:	vcvt.f64.s32	d7, s15
   37cac:	vstmia	r1!, {d7}
   37cb0:	bne	37c9c <GetDataSlab+0x15e70>
   37cb4:	ldr	r3, [sp, #232]	; 0xe8
   37cb8:	add	r4, r4, fp
   37cbc:	cmp	r3, #1
   37cc0:	ldr	r3, [sp, #8]
   37cc4:	add	r6, r6, r3
   37cc8:	ble	37da0 <GetDataSlab+0x15f74>
   37ccc:	ldr	r3, [sp, #100]	; 0x64
   37cd0:	ldr	r2, [sp, #228]	; 0xe4
   37cd4:	add	r3, r3, #1
   37cd8:	ldr	r1, [r2, #4]
   37cdc:	str	r3, [sp, #100]	; 0x64
   37ce0:	sdiv	r2, r3, r1
   37ce4:	mls	r3, r1, r2, r3
   37ce8:	cmp	r3, #0
   37cec:	bne	37d88 <GetDataSlab+0x15f5c>
   37cf0:	ldr	r3, [sp, #228]	; 0xe4
   37cf4:	add	ip, sp, #100	; 0x64
   37cf8:	add	lr, sp, #140	; 0x8c
   37cfc:	mov	r0, #1
   37d00:	add	r5, r3, #4
   37d04:	b	37d4c <GetDataSlab+0x15f20>
   37d08:	ldr	r3, [lr, #-8]
   37d0c:	ldr	r1, [r9, r0, lsl #2]
   37d10:	mla	r3, r1, r3, r2
   37d14:	add	r6, r6, r3, lsl #2
   37d18:	add	r4, r4, r3
   37d1c:	ldr	r3, [sp, #232]	; 0xe8
   37d20:	add	r0, r0, #1
   37d24:	cmp	r3, r0
   37d28:	beq	37da0 <GetDataSlab+0x15f74>
   37d2c:	ldr	r3, [ip]
   37d30:	ldr	r1, [r5, #4]!
   37d34:	add	r3, r3, #1
   37d38:	sdiv	r2, r3, r1
   37d3c:	str	r3, [ip]
   37d40:	mls	r3, r1, r2, r3
   37d44:	cmp	r3, #0
   37d48:	bne	37d8c <GetDataSlab+0x15f60>
   37d4c:	ldr	r2, [lr], #4
   37d50:	str	r7, [ip], #4
   37d54:	sdiv	r3, r4, r2
   37d58:	mls	r3, r2, r3, r4
   37d5c:	cmp	r3, #0
   37d60:	sub	r2, r2, r3
   37d64:	bne	37d08 <GetDataSlab+0x15edc>
   37d68:	ldr	r3, [r9, r0, lsl #2]
   37d6c:	cmp	r3, #0
   37d70:	beq	37d1c <GetDataSlab+0x15ef0>
   37d74:	ldr	r2, [lr, #-8]
   37d78:	mul	r3, r2, r3
   37d7c:	add	r6, r6, r3, lsl #2
   37d80:	add	r4, r4, r3
   37d84:	b	37d1c <GetDataSlab+0x15ef0>
   37d88:	mov	r0, #1
   37d8c:	add	r3, sp, #176	; 0xb0
   37d90:	add	r3, r3, r0, lsl #2
   37d94:	ldr	r3, [r3, #-120]	; 0xffffff88
   37d98:	add	r6, r6, r3, lsl #2
   37d9c:	add	r4, r4, r3
   37da0:	ldr	r3, [sp, #20]
   37da4:	add	r8, r8, r3
   37da8:	ldr	r3, [sp, #16]
   37dac:	cmp	r8, r3
   37db0:	blt	37c68 <GetDataSlab+0x15e3c>
   37db4:	b	30874 <GetDataSlab+0xea48>
   37db8:	cmp	r3, #0
   37dbc:	ble	30874 <GetDataSlab+0xea48>
   37dc0:	ldr	r3, [sp, #20]
   37dc4:	mov	r8, #0
   37dc8:	mov	r7, r8
   37dcc:	ldr	sl, [r9]
   37dd0:	sub	r3, r3, #1
   37dd4:	str	r3, [sp, #8]
   37dd8:	ldr	r3, [sp, #40]	; 0x28
   37ddc:	sub	fp, r3, sl
   37de0:	ldr	r3, [sp, #20]
   37de4:	cmp	sl, #0
   37de8:	addne	r5, r5, sl
   37dec:	addne	r4, r4, sl
   37df0:	cmp	r3, #0
   37df4:	ble	37e1c <GetDataSlab+0x15ff0>
   37df8:	ldr	r3, [sp, #4]
   37dfc:	sub	r2, r5, #1
   37e00:	add	r1, r3, r8, lsl #1
   37e04:	ldr	r3, [sp, #8]
   37e08:	add	r0, r5, r3
   37e0c:	ldrb	r3, [r2, #1]!
   37e10:	cmp	r2, r0
   37e14:	strh	r3, [r1], #2
   37e18:	bne	37e0c <GetDataSlab+0x15fe0>
   37e1c:	ldr	r3, [sp, #232]	; 0xe8
   37e20:	add	r4, r4, fp
   37e24:	add	r5, r5, fp
   37e28:	cmp	r3, #1
   37e2c:	ble	37f04 <GetDataSlab+0x160d8>
   37e30:	ldr	r3, [sp, #100]	; 0x64
   37e34:	ldr	r2, [sp, #228]	; 0xe4
   37e38:	add	r3, r3, #1
   37e3c:	ldr	r1, [r2, #4]
   37e40:	str	r3, [sp, #100]	; 0x64
   37e44:	sdiv	r2, r3, r1
   37e48:	mls	r3, r1, r2, r3
   37e4c:	cmp	r3, #0
   37e50:	bne	37eec <GetDataSlab+0x160c0>
   37e54:	ldr	r3, [sp, #228]	; 0xe4
   37e58:	add	ip, sp, #100	; 0x64
   37e5c:	add	lr, sp, #140	; 0x8c
   37e60:	mov	r0, #1
   37e64:	add	r6, r3, #4
   37e68:	b	37eb0 <GetDataSlab+0x16084>
   37e6c:	ldr	r3, [lr, #-8]
   37e70:	ldr	r1, [r9, r0, lsl #2]
   37e74:	mla	r3, r1, r3, r2
   37e78:	add	r5, r5, r3
   37e7c:	add	r4, r4, r3
   37e80:	ldr	r3, [sp, #232]	; 0xe8
   37e84:	add	r0, r0, #1
   37e88:	cmp	r3, r0
   37e8c:	beq	37f04 <GetDataSlab+0x160d8>
   37e90:	ldr	r3, [ip]
   37e94:	ldr	r1, [r6, #4]!
   37e98:	add	r3, r3, #1
   37e9c:	sdiv	r2, r3, r1
   37ea0:	str	r3, [ip]
   37ea4:	mls	r3, r1, r2, r3
   37ea8:	cmp	r3, #0
   37eac:	bne	37ef0 <GetDataSlab+0x160c4>
   37eb0:	ldr	r2, [lr], #4
   37eb4:	str	r7, [ip], #4
   37eb8:	sdiv	r3, r4, r2
   37ebc:	mls	r3, r2, r3, r4
   37ec0:	cmp	r3, #0
   37ec4:	sub	r2, r2, r3
   37ec8:	bne	37e6c <GetDataSlab+0x16040>
   37ecc:	ldr	r3, [r9, r0, lsl #2]
   37ed0:	cmp	r3, #0
   37ed4:	beq	37e80 <GetDataSlab+0x16054>
   37ed8:	ldr	r2, [lr, #-8]
   37edc:	mul	r3, r2, r3
   37ee0:	add	r5, r5, r3
   37ee4:	add	r4, r4, r3
   37ee8:	b	37e80 <GetDataSlab+0x16054>
   37eec:	mov	r0, #1
   37ef0:	add	r3, sp, #176	; 0xb0
   37ef4:	add	r3, r3, r0, lsl #2
   37ef8:	ldr	r3, [r3, #-120]	; 0xffffff88
   37efc:	add	r4, r4, r3
   37f00:	add	r5, r5, r3
   37f04:	ldr	r3, [sp, #20]
   37f08:	add	r8, r8, r3
   37f0c:	ldr	r3, [sp, #16]
   37f10:	cmp	r8, r3
   37f14:	blt	37de0 <GetDataSlab+0x15fb4>
   37f18:	b	30874 <GetDataSlab+0xea48>
   37f1c:	cmp	r3, #0
   37f20:	ble	30874 <GetDataSlab+0xea48>
   37f24:	ldr	r3, [sp, #20]
   37f28:	mov	r8, #0
   37f2c:	mov	r7, r8
   37f30:	ldr	sl, [r9]
   37f34:	sub	r3, r3, #1
   37f38:	str	r3, [sp, #8]
   37f3c:	ldr	r3, [sp, #40]	; 0x28
   37f40:	sub	fp, r3, sl
   37f44:	ldr	r3, [sp, #20]
   37f48:	cmp	sl, #0
   37f4c:	addne	r5, r5, sl
   37f50:	addne	r4, r4, sl
   37f54:	cmp	r3, #0
   37f58:	ble	37f80 <GetDataSlab+0x16154>
   37f5c:	ldr	r3, [sp, #4]
   37f60:	sub	r2, r5, #1
   37f64:	add	r1, r3, r8, lsl #1
   37f68:	ldr	r3, [sp, #8]
   37f6c:	add	r0, r5, r3
   37f70:	ldrsb	r3, [r2, #1]!
   37f74:	cmp	r2, r0
   37f78:	strh	r3, [r1], #2
   37f7c:	bne	37f70 <GetDataSlab+0x16144>
   37f80:	ldr	r3, [sp, #232]	; 0xe8
   37f84:	add	r4, r4, fp
   37f88:	add	r5, r5, fp
   37f8c:	cmp	r3, #1
   37f90:	ble	38068 <GetDataSlab+0x1623c>
   37f94:	ldr	r3, [sp, #100]	; 0x64
   37f98:	ldr	r2, [sp, #228]	; 0xe4
   37f9c:	add	r3, r3, #1
   37fa0:	ldr	r1, [r2, #4]
   37fa4:	str	r3, [sp, #100]	; 0x64
   37fa8:	sdiv	r2, r3, r1
   37fac:	mls	r3, r1, r2, r3
   37fb0:	cmp	r3, #0
   37fb4:	bne	38050 <GetDataSlab+0x16224>
   37fb8:	ldr	r3, [sp, #228]	; 0xe4
   37fbc:	add	ip, sp, #100	; 0x64
   37fc0:	add	lr, sp, #140	; 0x8c
   37fc4:	mov	r0, #1
   37fc8:	add	r6, r3, #4
   37fcc:	b	38014 <GetDataSlab+0x161e8>
   37fd0:	ldr	r3, [lr, #-8]
   37fd4:	ldr	r1, [r9, r0, lsl #2]
   37fd8:	mla	r3, r1, r3, r2
   37fdc:	add	r5, r5, r3
   37fe0:	add	r4, r4, r3
   37fe4:	ldr	r3, [sp, #232]	; 0xe8
   37fe8:	add	r0, r0, #1
   37fec:	cmp	r3, r0
   37ff0:	beq	38068 <GetDataSlab+0x1623c>
   37ff4:	ldr	r3, [ip]
   37ff8:	ldr	r1, [r6, #4]!
   37ffc:	add	r3, r3, #1
   38000:	sdiv	r2, r3, r1
   38004:	str	r3, [ip]
   38008:	mls	r3, r1, r2, r3
   3800c:	cmp	r3, #0
   38010:	bne	38054 <GetDataSlab+0x16228>
   38014:	ldr	r2, [lr], #4
   38018:	str	r7, [ip], #4
   3801c:	sdiv	r3, r4, r2
   38020:	mls	r3, r2, r3, r4
   38024:	cmp	r3, #0
   38028:	sub	r2, r2, r3
   3802c:	bne	37fd0 <GetDataSlab+0x161a4>
   38030:	ldr	r3, [r9, r0, lsl #2]
   38034:	cmp	r3, #0
   38038:	beq	37fe4 <GetDataSlab+0x161b8>
   3803c:	ldr	r2, [lr, #-8]
   38040:	mul	r3, r2, r3
   38044:	add	r5, r5, r3
   38048:	add	r4, r4, r3
   3804c:	b	37fe4 <GetDataSlab+0x161b8>
   38050:	mov	r0, #1
   38054:	add	r3, sp, #176	; 0xb0
   38058:	add	r3, r3, r0, lsl #2
   3805c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38060:	add	r4, r4, r3
   38064:	add	r5, r5, r3
   38068:	ldr	r3, [sp, #20]
   3806c:	add	r8, r8, r3
   38070:	ldr	r3, [sp, #16]
   38074:	cmp	r8, r3
   38078:	blt	37f44 <GetDataSlab+0x16118>
   3807c:	b	30874 <GetDataSlab+0xea48>
   38080:	cmp	r3, #0
   38084:	ble	30874 <GetDataSlab+0xea48>
   38088:	ldr	r3, [sp, #20]
   3808c:	mov	r8, #0
   38090:	mov	r7, r8
   38094:	ldr	sl, [r9]
   38098:	lsl	r3, r3, #1
   3809c:	str	r3, [sp, #12]
   380a0:	ldr	r3, [sp, #36]	; 0x24
   380a4:	sub	fp, r3, sl
   380a8:	lsl	r3, sl, #1
   380ac:	str	r3, [sp, #24]
   380b0:	lsl	r3, fp, #1
   380b4:	str	r3, [sp, #8]
   380b8:	cmp	sl, #0
   380bc:	beq	380cc <GetDataSlab+0x162a0>
   380c0:	ldr	r3, [sp, #24]
   380c4:	add	r4, r4, sl
   380c8:	add	r6, r6, r3
   380cc:	ldr	r3, [sp, #20]
   380d0:	cmp	r3, #0
   380d4:	ble	380fc <GetDataSlab+0x162d0>
   380d8:	ldr	r3, [sp, #4]
   380dc:	mov	r2, r6
   380e0:	add	r1, r3, r8, lsl #1
   380e4:	ldr	r3, [sp, #12]
   380e8:	add	r0, r6, r3
   380ec:	ldrsh	r3, [r2], #2
   380f0:	cmp	r2, r0
   380f4:	strh	r3, [r1], #2
   380f8:	bne	380ec <GetDataSlab+0x162c0>
   380fc:	ldr	r3, [sp, #232]	; 0xe8
   38100:	add	r4, r4, fp
   38104:	cmp	r3, #1
   38108:	ldr	r3, [sp, #8]
   3810c:	add	r6, r6, r3
   38110:	ble	381e8 <GetDataSlab+0x163bc>
   38114:	ldr	r3, [sp, #100]	; 0x64
   38118:	ldr	r2, [sp, #228]	; 0xe4
   3811c:	add	r3, r3, #1
   38120:	ldr	r1, [r2, #4]
   38124:	str	r3, [sp, #100]	; 0x64
   38128:	sdiv	r2, r3, r1
   3812c:	mls	r3, r1, r2, r3
   38130:	cmp	r3, #0
   38134:	bne	381d0 <GetDataSlab+0x163a4>
   38138:	ldr	r3, [sp, #228]	; 0xe4
   3813c:	add	ip, sp, #100	; 0x64
   38140:	add	lr, sp, #140	; 0x8c
   38144:	mov	r0, #1
   38148:	add	r5, r3, #4
   3814c:	b	38194 <GetDataSlab+0x16368>
   38150:	ldr	r3, [lr, #-8]
   38154:	ldr	r1, [r9, r0, lsl #2]
   38158:	mla	r3, r1, r3, r2
   3815c:	add	r6, r6, r3, lsl #1
   38160:	add	r4, r4, r3
   38164:	ldr	r3, [sp, #232]	; 0xe8
   38168:	add	r0, r0, #1
   3816c:	cmp	r3, r0
   38170:	beq	381e8 <GetDataSlab+0x163bc>
   38174:	ldr	r3, [ip]
   38178:	ldr	r1, [r5, #4]!
   3817c:	add	r3, r3, #1
   38180:	sdiv	r2, r3, r1
   38184:	str	r3, [ip]
   38188:	mls	r3, r1, r2, r3
   3818c:	cmp	r3, #0
   38190:	bne	381d4 <GetDataSlab+0x163a8>
   38194:	ldr	r2, [lr], #4
   38198:	str	r7, [ip], #4
   3819c:	sdiv	r3, r4, r2
   381a0:	mls	r3, r2, r3, r4
   381a4:	cmp	r3, #0
   381a8:	sub	r2, r2, r3
   381ac:	bne	38150 <GetDataSlab+0x16324>
   381b0:	ldr	r3, [r9, r0, lsl #2]
   381b4:	cmp	r3, #0
   381b8:	beq	38164 <GetDataSlab+0x16338>
   381bc:	ldr	r2, [lr, #-8]
   381c0:	mul	r3, r2, r3
   381c4:	add	r6, r6, r3, lsl #1
   381c8:	add	r4, r4, r3
   381cc:	b	38164 <GetDataSlab+0x16338>
   381d0:	mov	r0, #1
   381d4:	add	r3, sp, #176	; 0xb0
   381d8:	add	r3, r3, r0, lsl #2
   381dc:	ldr	r3, [r3, #-120]	; 0xffffff88
   381e0:	add	r6, r6, r3, lsl #1
   381e4:	add	r4, r4, r3
   381e8:	ldr	r3, [sp, #20]
   381ec:	add	r8, r8, r3
   381f0:	ldr	r3, [sp, #16]
   381f4:	cmp	r8, r3
   381f8:	blt	380b8 <GetDataSlab+0x1628c>
   381fc:	b	30874 <GetDataSlab+0xea48>
   38200:	ldr	r3, [sl]
   38204:	str	r3, [sp, #32]
   38208:	ldr	r3, [sp, #232]	; 0xe8
   3820c:	cmp	r3, #1
   38210:	ldr	r3, [r8]
   38214:	str	r3, [sp, #36]	; 0x24
   38218:	ldr	r3, [sp, #228]	; 0xe4
   3821c:	ldr	r3, [r3]
   38220:	str	r3, [sp, #20]
   38224:	ldr	r3, [sp, #32]
   38228:	sub	r3, r3, #1
   3822c:	str	r3, [sp, #56]	; 0x38
   38230:	ldr	r3, [sp, #36]	; 0x24
   38234:	str	r3, [sp, #136]	; 0x88
   38238:	ble	402fc <GetDataSlab+0x1e4d0>
   3823c:	add	r6, sl, #4
   38240:	ldr	fp, [sp, #228]	; 0xe4
   38244:	add	lr, sp, #60	; 0x3c
   38248:	mov	r5, r8
   3824c:	mov	r4, #0
   38250:	str	r9, [sp, #24]
   38254:	ldr	r3, [sp, #232]	; 0xe8
   38258:	add	r3, sl, r3, lsl #2
   3825c:	ldr	sl, [sp, #12]
   38260:	str	r3, [sp, #28]
   38264:	ldr	r3, [sp, #20]
   38268:	str	r3, [sp, #16]
   3826c:	ldr	r3, [r6], #4
   38270:	mov	r7, sl
   38274:	ldr	r0, [r5], #4
   38278:	sub	ip, r3, #1
   3827c:	mov	r1, r5
   38280:	str	ip, [lr], #4
   38284:	mov	r3, r1
   38288:	ldr	r2, [r1, #-4]!
   3828c:	ldr	r3, [r3]
   38290:	cmp	r1, r8
   38294:	mul	ip, r2, ip
   38298:	mul	r0, r3, r0
   3829c:	bne	38284 <GetDataSlab+0x16458>
   382a0:	ldr	r3, [sp, #28]
   382a4:	str	r0, [sl, #4]!
   382a8:	ldr	r1, [r7]
   382ac:	str	ip, [lr, #-4]
   382b0:	cmp	r6, r3
   382b4:	ldr	r3, [sp, #24]
   382b8:	ldr	r2, [r3, #4]!
   382bc:	mla	r4, r2, r1, r4
   382c0:	str	r3, [sp, #24]
   382c4:	ldr	r3, [fp, #4]!
   382c8:	ldr	r2, [sp, #16]
   382cc:	mul	r3, r3, r2
   382d0:	str	r3, [sp, #16]
   382d4:	bne	3826c <GetDataSlab+0x16440>
   382d8:	ldr	r3, [sp, #32]
   382dc:	cmp	r3, #1
   382e0:	ldr	r3, [sp, #8]
   382e4:	add	r6, r3, r4, lsl #3
   382e8:	ldr	r3, [sp, #16]
   382ec:	beq	3daf4 <GetDataSlab+0x1bcc8>
   382f0:	cmp	r3, #0
   382f4:	ble	30874 <GetDataSlab+0xea48>
   382f8:	ldr	r3, [r9]
   382fc:	mov	fp, #0
   38300:	mov	r8, fp
   38304:	ldr	r2, [sp, #20]
   38308:	ldr	r1, [sp, #20]
   3830c:	str	r3, [sp, #8]
   38310:	ldr	r3, [sp, #32]
   38314:	lsl	r2, r2, #3
   38318:	str	r2, [sp, #28]
   3831c:	lsl	sl, r3, #3
   38320:	ldr	r3, [sp, #20]
   38324:	ldr	r2, [sp, #32]
   38328:	sub	r3, r3, #1
   3832c:	mul	r3, r2, r3
   38330:	ldr	r2, [sp, #28]
   38334:	str	r3, [sp, #40]	; 0x28
   38338:	ldr	r3, [sp, #20]
   3833c:	mul	r3, r3, sl
   38340:	str	r3, [sp, #44]	; 0x2c
   38344:	ldr	r3, [sp, #4]
   38348:	add	r7, r3, r2
   3834c:	ldr	r2, [sp, #8]
   38350:	ldr	r3, [sp, #36]	; 0x24
   38354:	sub	r3, r3, r2
   38358:	lsl	r2, r2, #3
   3835c:	str	r2, [sp, #48]	; 0x30
   38360:	ldr	r2, [sp, #32]
   38364:	mls	r3, r1, r2, r3
   38368:	str	r3, [sp, #24]
   3836c:	lsl	r3, r3, #3
   38370:	str	r3, [sp, #36]	; 0x24
   38374:	ldr	r3, [sp, #8]
   38378:	cmp	r3, #0
   3837c:	beq	38390 <GetDataSlab+0x16564>
   38380:	ldr	r3, [sp, #48]	; 0x30
   38384:	add	r6, r6, r3
   38388:	ldr	r3, [sp, #8]
   3838c:	add	r4, r4, r3
   38390:	ldr	r3, [sp, #20]
   38394:	cmp	r3, #0
   38398:	ble	383d4 <GetDataSlab+0x165a8>
   3839c:	ldr	r3, [sp, #4]
   383a0:	mov	r0, r6
   383a4:	add	r1, r3, fp, lsl #3
   383a8:	ldrd	r2, [r0]
   383ac:	add	r0, r0, sl
   383b0:	strd	r2, [r1], #8
   383b4:	cmp	r1, r7
   383b8:	bne	383a8 <GetDataSlab+0x1657c>
   383bc:	ldr	r3, [sp, #32]
   383c0:	ldr	r2, [sp, #44]	; 0x2c
   383c4:	add	r3, r4, r3
   383c8:	add	r6, r6, r2
   383cc:	ldr	r2, [sp, #40]	; 0x28
   383d0:	add	r4, r2, r3
   383d4:	ldr	r3, [sp, #232]	; 0xe8
   383d8:	cmp	r3, #1
   383dc:	ldr	r3, [sp, #24]
   383e0:	add	r4, r4, r3
   383e4:	ldr	r3, [sp, #36]	; 0x24
   383e8:	add	r6, r6, r3
   383ec:	ble	384c4 <GetDataSlab+0x16698>
   383f0:	ldr	r3, [sp, #100]	; 0x64
   383f4:	ldr	r2, [sp, #228]	; 0xe4
   383f8:	add	r3, r3, #1
   383fc:	ldr	r1, [r2, #4]
   38400:	str	r3, [sp, #100]	; 0x64
   38404:	sdiv	r2, r3, r1
   38408:	mls	r3, r1, r2, r3
   3840c:	cmp	r3, #0
   38410:	bne	384ac <GetDataSlab+0x16680>
   38414:	add	ip, sp, #100	; 0x64
   38418:	mov	r0, #1
   3841c:	ldr	lr, [sp, #12]
   38420:	ldr	r3, [sp, #228]	; 0xe4
   38424:	add	r5, r3, #4
   38428:	b	38470 <GetDataSlab+0x16644>
   3842c:	ldr	r3, [lr, #-4]
   38430:	ldr	r1, [r9, r0, lsl #2]
   38434:	mla	r3, r1, r3, r2
   38438:	add	r6, r6, r3, lsl #3
   3843c:	add	r4, r4, r3
   38440:	ldr	r3, [sp, #232]	; 0xe8
   38444:	add	r0, r0, #1
   38448:	cmp	r3, r0
   3844c:	beq	384c4 <GetDataSlab+0x16698>
   38450:	ldr	r3, [ip]
   38454:	ldr	r1, [r5, #4]!
   38458:	add	r3, r3, #1
   3845c:	sdiv	r2, r3, r1
   38460:	str	r3, [ip]
   38464:	mls	r3, r1, r2, r3
   38468:	cmp	r3, #0
   3846c:	bne	384b0 <GetDataSlab+0x16684>
   38470:	ldr	r2, [lr, #4]!
   38474:	str	r8, [ip], #4
   38478:	sdiv	r3, r4, r2
   3847c:	mls	r3, r2, r3, r4
   38480:	cmp	r3, #0
   38484:	sub	r2, r2, r3
   38488:	bne	3842c <GetDataSlab+0x16600>
   3848c:	ldr	r3, [r9, r0, lsl #2]
   38490:	cmp	r3, #0
   38494:	beq	38440 <GetDataSlab+0x16614>
   38498:	ldr	r2, [lr, #-4]
   3849c:	mul	r3, r2, r3
   384a0:	add	r6, r6, r3, lsl #3
   384a4:	add	r4, r4, r3
   384a8:	b	38440 <GetDataSlab+0x16614>
   384ac:	mov	r0, #1
   384b0:	add	r3, sp, #176	; 0xb0
   384b4:	add	r3, r3, r0, lsl #2
   384b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   384bc:	add	r6, r6, r3, lsl #3
   384c0:	add	r4, r4, r3
   384c4:	ldr	r3, [sp, #20]
   384c8:	add	fp, fp, r3
   384cc:	ldr	r3, [sp, #28]
   384d0:	add	r7, r7, r3
   384d4:	ldr	r3, [sp, #16]
   384d8:	cmp	fp, r3
   384dc:	blt	38374 <GetDataSlab+0x16548>
   384e0:	b	30874 <GetDataSlab+0xea48>
   384e4:	cmp	r3, #0
   384e8:	ble	30874 <GetDataSlab+0xea48>
   384ec:	ldr	r3, [r9]
   384f0:	mov	sl, #0
   384f4:	mov	r7, sl
   384f8:	str	r3, [sp, #8]
   384fc:	ldr	r3, [sp, #8]
   38500:	cmp	r3, #0
   38504:	addne	r5, r5, r3, lsl #3
   38508:	addne	lr, lr, r3
   3850c:	cmp	fp, #0
   38510:	ble	38554 <GetDataSlab+0x16728>
   38514:	ldr	r3, [sp, #4]
   38518:	mov	r1, r5
   3851c:	add	r2, r3, sl, lsl #2
   38520:	mov	r3, #0
   38524:	vldmia	r1!, {d7}
   38528:	add	r3, r3, #1
   3852c:	ldr	r0, [sp, #228]	; 0xe4
   38530:	vcvt.s32.f64	s15, d7
   38534:	vstmia	r2!, {s15}
   38538:	ldr	fp, [r0]
   3853c:	cmp	fp, r3
   38540:	bgt	38524 <GetDataSlab+0x166f8>
   38544:	ldr	r3, [r9]
   38548:	str	r3, [sp, #8]
   3854c:	ldr	r3, [r8]
   38550:	str	r3, [sp, #16]
   38554:	ldr	r2, [sp, #8]
   38558:	ldr	r3, [sp, #232]	; 0xe8
   3855c:	cmp	r3, #1
   38560:	ldr	r3, [sp, #16]
   38564:	sub	r3, r3, r2
   38568:	add	lr, lr, r3
   3856c:	add	r5, r5, r3, lsl #3
   38570:	ble	38648 <GetDataSlab+0x1681c>
   38574:	ldr	r3, [sp, #100]	; 0x64
   38578:	ldr	r2, [sp, #228]	; 0xe4
   3857c:	add	r3, r3, #1
   38580:	ldr	r1, [r2, #4]
   38584:	str	r3, [sp, #100]	; 0x64
   38588:	sdiv	r2, r3, r1
   3858c:	mls	r3, r1, r2, r3
   38590:	cmp	r3, #0
   38594:	bne	38630 <GetDataSlab+0x16804>
   38598:	ldr	r3, [sp, #228]	; 0xe4
   3859c:	add	ip, sp, #100	; 0x64
   385a0:	add	r4, sp, #140	; 0x8c
   385a4:	mov	r0, #1
   385a8:	add	r6, r3, #4
   385ac:	b	385f4 <GetDataSlab+0x167c8>
   385b0:	ldr	r3, [r4, #-8]
   385b4:	ldr	r1, [r9, r0, lsl #2]
   385b8:	mla	r3, r1, r3, r2
   385bc:	add	r5, r5, r3, lsl #3
   385c0:	add	lr, lr, r3
   385c4:	ldr	r3, [sp, #232]	; 0xe8
   385c8:	add	r0, r0, #1
   385cc:	cmp	r3, r0
   385d0:	beq	38648 <GetDataSlab+0x1681c>
   385d4:	ldr	r3, [ip]
   385d8:	ldr	r1, [r6, #4]!
   385dc:	add	r3, r3, #1
   385e0:	sdiv	r2, r3, r1
   385e4:	str	r3, [ip]
   385e8:	mls	r3, r1, r2, r3
   385ec:	cmp	r3, #0
   385f0:	bne	38634 <GetDataSlab+0x16808>
   385f4:	ldr	r2, [r4], #4
   385f8:	str	r7, [ip], #4
   385fc:	sdiv	r3, lr, r2
   38600:	mls	r3, r2, r3, lr
   38604:	cmp	r3, #0
   38608:	sub	r2, r2, r3
   3860c:	bne	385b0 <GetDataSlab+0x16784>
   38610:	ldr	r3, [r9, r0, lsl #2]
   38614:	cmp	r3, #0
   38618:	beq	385c4 <GetDataSlab+0x16798>
   3861c:	ldr	r2, [r4, #-8]
   38620:	mul	r3, r2, r3
   38624:	add	r5, r5, r3, lsl #3
   38628:	add	lr, lr, r3
   3862c:	b	385c4 <GetDataSlab+0x16798>
   38630:	mov	r0, #1
   38634:	add	r3, sp, #176	; 0xb0
   38638:	add	r3, r3, r0, lsl #2
   3863c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38640:	add	r5, r5, r3, lsl #3
   38644:	add	lr, lr, r3
   38648:	ldr	r3, [sp, #20]
   3864c:	add	sl, sl, fp
   38650:	cmp	sl, r3
   38654:	blt	384fc <GetDataSlab+0x166d0>
   38658:	b	30874 <GetDataSlab+0xea48>
   3865c:	cmp	r3, #0
   38660:	ble	30874 <GetDataSlab+0xea48>
   38664:	ldr	r3, [sp, #20]
   38668:	mov	r8, #0
   3866c:	mov	r7, r8
   38670:	ldr	sl, [r9]
   38674:	lsl	r3, r3, #1
   38678:	str	r3, [sp, #12]
   3867c:	ldr	r3, [sp, #36]	; 0x24
   38680:	sub	fp, r3, sl
   38684:	lsl	r3, sl, #1
   38688:	str	r3, [sp, #24]
   3868c:	lsl	r3, fp, #1
   38690:	str	r3, [sp, #8]
   38694:	cmp	sl, #0
   38698:	beq	386a8 <GetDataSlab+0x1687c>
   3869c:	ldr	r3, [sp, #24]
   386a0:	add	r4, r4, sl
   386a4:	add	r6, r6, r3
   386a8:	ldr	r3, [sp, #20]
   386ac:	cmp	r3, #0
   386b0:	ble	386d8 <GetDataSlab+0x168ac>
   386b4:	ldr	r3, [sp, #4]
   386b8:	mov	r2, r6
   386bc:	add	r1, r3, r8, lsl #1
   386c0:	ldr	r3, [sp, #12]
   386c4:	add	r0, r6, r3
   386c8:	ldrh	r3, [r2], #2
   386cc:	cmp	r2, r0
   386d0:	strh	r3, [r1], #2
   386d4:	bne	386c8 <GetDataSlab+0x1689c>
   386d8:	ldr	r3, [sp, #232]	; 0xe8
   386dc:	add	r4, r4, fp
   386e0:	cmp	r3, #1
   386e4:	ldr	r3, [sp, #8]
   386e8:	add	r6, r6, r3
   386ec:	ble	387c4 <GetDataSlab+0x16998>
   386f0:	ldr	r3, [sp, #100]	; 0x64
   386f4:	ldr	r2, [sp, #228]	; 0xe4
   386f8:	add	r3, r3, #1
   386fc:	ldr	r1, [r2, #4]
   38700:	str	r3, [sp, #100]	; 0x64
   38704:	sdiv	r2, r3, r1
   38708:	mls	r3, r1, r2, r3
   3870c:	cmp	r3, #0
   38710:	bne	387ac <GetDataSlab+0x16980>
   38714:	ldr	r3, [sp, #228]	; 0xe4
   38718:	add	ip, sp, #100	; 0x64
   3871c:	add	lr, sp, #140	; 0x8c
   38720:	mov	r0, #1
   38724:	add	r5, r3, #4
   38728:	b	38770 <GetDataSlab+0x16944>
   3872c:	ldr	r3, [lr, #-8]
   38730:	ldr	r1, [r9, r0, lsl #2]
   38734:	mla	r3, r1, r3, r2
   38738:	add	r6, r6, r3, lsl #1
   3873c:	add	r4, r4, r3
   38740:	ldr	r3, [sp, #232]	; 0xe8
   38744:	add	r0, r0, #1
   38748:	cmp	r3, r0
   3874c:	beq	387c4 <GetDataSlab+0x16998>
   38750:	ldr	r3, [ip]
   38754:	ldr	r1, [r5, #4]!
   38758:	add	r3, r3, #1
   3875c:	sdiv	r2, r3, r1
   38760:	str	r3, [ip]
   38764:	mls	r3, r1, r2, r3
   38768:	cmp	r3, #0
   3876c:	bne	387b0 <GetDataSlab+0x16984>
   38770:	ldr	r2, [lr], #4
   38774:	str	r7, [ip], #4
   38778:	sdiv	r3, r4, r2
   3877c:	mls	r3, r2, r3, r4
   38780:	cmp	r3, #0
   38784:	sub	r2, r2, r3
   38788:	bne	3872c <GetDataSlab+0x16900>
   3878c:	ldr	r3, [r9, r0, lsl #2]
   38790:	cmp	r3, #0
   38794:	beq	38740 <GetDataSlab+0x16914>
   38798:	ldr	r2, [lr, #-8]
   3879c:	mul	r3, r2, r3
   387a0:	add	r6, r6, r3, lsl #1
   387a4:	add	r4, r4, r3
   387a8:	b	38740 <GetDataSlab+0x16914>
   387ac:	mov	r0, #1
   387b0:	add	r3, sp, #176	; 0xb0
   387b4:	add	r3, r3, r0, lsl #2
   387b8:	ldr	r3, [r3, #-120]	; 0xffffff88
   387bc:	add	r6, r6, r3, lsl #1
   387c0:	add	r4, r4, r3
   387c4:	ldr	r3, [sp, #20]
   387c8:	add	r8, r8, r3
   387cc:	ldr	r3, [sp, #16]
   387d0:	cmp	r8, r3
   387d4:	blt	38694 <GetDataSlab+0x16868>
   387d8:	b	30874 <GetDataSlab+0xea48>
   387dc:	cmp	r3, #0
   387e0:	ble	30874 <GetDataSlab+0xea48>
   387e4:	ldr	r3, [sp, #20]
   387e8:	mov	r8, #0
   387ec:	mov	r7, r8
   387f0:	ldr	sl, [r9]
   387f4:	sub	r3, r3, #1
   387f8:	str	r3, [sp, #8]
   387fc:	ldr	r3, [sp, #40]	; 0x28
   38800:	sub	fp, r3, sl
   38804:	ldr	r3, [sp, #20]
   38808:	cmp	sl, #0
   3880c:	addne	r5, r5, sl
   38810:	addne	r4, r4, sl
   38814:	cmp	r3, #0
   38818:	ble	38840 <GetDataSlab+0x16a14>
   3881c:	ldr	r3, [sp, #4]
   38820:	sub	r2, r5, #1
   38824:	add	r1, r3, r8, lsl #1
   38828:	ldr	r3, [sp, #8]
   3882c:	add	r0, r5, r3
   38830:	ldrsb	r3, [r2, #1]!
   38834:	cmp	r2, r0
   38838:	strh	r3, [r1], #2
   3883c:	bne	38830 <GetDataSlab+0x16a04>
   38840:	ldr	r3, [sp, #232]	; 0xe8
   38844:	add	r4, r4, fp
   38848:	add	r5, r5, fp
   3884c:	cmp	r3, #1
   38850:	ble	38928 <GetDataSlab+0x16afc>
   38854:	ldr	r3, [sp, #100]	; 0x64
   38858:	ldr	r2, [sp, #228]	; 0xe4
   3885c:	add	r3, r3, #1
   38860:	ldr	r1, [r2, #4]
   38864:	str	r3, [sp, #100]	; 0x64
   38868:	sdiv	r2, r3, r1
   3886c:	mls	r3, r1, r2, r3
   38870:	cmp	r3, #0
   38874:	bne	38910 <GetDataSlab+0x16ae4>
   38878:	ldr	r3, [sp, #228]	; 0xe4
   3887c:	add	ip, sp, #100	; 0x64
   38880:	add	lr, sp, #140	; 0x8c
   38884:	mov	r0, #1
   38888:	add	r6, r3, #4
   3888c:	b	388d4 <GetDataSlab+0x16aa8>
   38890:	ldr	r3, [lr, #-8]
   38894:	ldr	r1, [r9, r0, lsl #2]
   38898:	mla	r3, r1, r3, r2
   3889c:	add	r5, r5, r3
   388a0:	add	r4, r4, r3
   388a4:	ldr	r3, [sp, #232]	; 0xe8
   388a8:	add	r0, r0, #1
   388ac:	cmp	r3, r0
   388b0:	beq	38928 <GetDataSlab+0x16afc>
   388b4:	ldr	r3, [ip]
   388b8:	ldr	r1, [r6, #4]!
   388bc:	add	r3, r3, #1
   388c0:	sdiv	r2, r3, r1
   388c4:	str	r3, [ip]
   388c8:	mls	r3, r1, r2, r3
   388cc:	cmp	r3, #0
   388d0:	bne	38914 <GetDataSlab+0x16ae8>
   388d4:	ldr	r2, [lr], #4
   388d8:	str	r7, [ip], #4
   388dc:	sdiv	r3, r4, r2
   388e0:	mls	r3, r2, r3, r4
   388e4:	cmp	r3, #0
   388e8:	sub	r2, r2, r3
   388ec:	bne	38890 <GetDataSlab+0x16a64>
   388f0:	ldr	r3, [r9, r0, lsl #2]
   388f4:	cmp	r3, #0
   388f8:	beq	388a4 <GetDataSlab+0x16a78>
   388fc:	ldr	r2, [lr, #-8]
   38900:	mul	r3, r2, r3
   38904:	add	r5, r5, r3
   38908:	add	r4, r4, r3
   3890c:	b	388a4 <GetDataSlab+0x16a78>
   38910:	mov	r0, #1
   38914:	add	r3, sp, #176	; 0xb0
   38918:	add	r3, r3, r0, lsl #2
   3891c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38920:	add	r4, r4, r3
   38924:	add	r5, r5, r3
   38928:	ldr	r3, [sp, #20]
   3892c:	add	r8, r8, r3
   38930:	ldr	r3, [sp, #16]
   38934:	cmp	r8, r3
   38938:	blt	38804 <GetDataSlab+0x169d8>
   3893c:	b	30874 <GetDataSlab+0xea48>
   38940:	cmp	r3, #0
   38944:	ble	30874 <GetDataSlab+0xea48>
   38948:	ldr	r3, [sp, #20]
   3894c:	mov	r8, #0
   38950:	mov	r7, r8
   38954:	ldr	sl, [r9]
   38958:	lsl	r3, r3, #1
   3895c:	str	r3, [sp, #12]
   38960:	ldr	r3, [sp, #36]	; 0x24
   38964:	sub	fp, r3, sl
   38968:	lsl	r3, sl, #1
   3896c:	str	r3, [sp, #24]
   38970:	lsl	r3, fp, #1
   38974:	str	r3, [sp, #8]
   38978:	cmp	sl, #0
   3897c:	beq	3898c <GetDataSlab+0x16b60>
   38980:	ldr	r3, [sp, #24]
   38984:	add	r4, r4, sl
   38988:	add	r6, r6, r3
   3898c:	ldr	r3, [sp, #20]
   38990:	cmp	r3, #0
   38994:	ble	389bc <GetDataSlab+0x16b90>
   38998:	ldr	r3, [sp, #4]
   3899c:	mov	r2, r6
   389a0:	add	r1, r3, r8, lsl #1
   389a4:	ldr	r3, [sp, #12]
   389a8:	add	r0, r6, r3
   389ac:	ldrsh	r3, [r2], #2
   389b0:	cmp	r0, r2
   389b4:	strh	r3, [r1], #2
   389b8:	bne	389ac <GetDataSlab+0x16b80>
   389bc:	ldr	r3, [sp, #232]	; 0xe8
   389c0:	add	r4, r4, fp
   389c4:	cmp	r3, #1
   389c8:	ldr	r3, [sp, #8]
   389cc:	add	r6, r6, r3
   389d0:	ble	38aa8 <GetDataSlab+0x16c7c>
   389d4:	ldr	r3, [sp, #100]	; 0x64
   389d8:	ldr	r2, [sp, #228]	; 0xe4
   389dc:	add	r3, r3, #1
   389e0:	ldr	r1, [r2, #4]
   389e4:	str	r3, [sp, #100]	; 0x64
   389e8:	sdiv	r2, r3, r1
   389ec:	mls	r3, r1, r2, r3
   389f0:	cmp	r3, #0
   389f4:	bne	38a90 <GetDataSlab+0x16c64>
   389f8:	ldr	r3, [sp, #228]	; 0xe4
   389fc:	add	ip, sp, #100	; 0x64
   38a00:	add	lr, sp, #140	; 0x8c
   38a04:	mov	r0, #1
   38a08:	add	r5, r3, #4
   38a0c:	b	38a54 <GetDataSlab+0x16c28>
   38a10:	ldr	r3, [lr, #-8]
   38a14:	ldr	r1, [r9, r0, lsl #2]
   38a18:	mla	r3, r1, r3, r2
   38a1c:	add	r6, r6, r3, lsl #1
   38a20:	add	r4, r4, r3
   38a24:	ldr	r3, [sp, #232]	; 0xe8
   38a28:	add	r0, r0, #1
   38a2c:	cmp	r3, r0
   38a30:	beq	38aa8 <GetDataSlab+0x16c7c>
   38a34:	ldr	r3, [ip]
   38a38:	ldr	r1, [r5, #4]!
   38a3c:	add	r3, r3, #1
   38a40:	sdiv	r2, r3, r1
   38a44:	str	r3, [ip]
   38a48:	mls	r3, r1, r2, r3
   38a4c:	cmp	r3, #0
   38a50:	bne	38a94 <GetDataSlab+0x16c68>
   38a54:	ldr	r2, [lr], #4
   38a58:	str	r7, [ip], #4
   38a5c:	sdiv	r3, r4, r2
   38a60:	mls	r3, r2, r3, r4
   38a64:	cmp	r3, #0
   38a68:	sub	r2, r2, r3
   38a6c:	bne	38a10 <GetDataSlab+0x16be4>
   38a70:	ldr	r3, [r9, r0, lsl #2]
   38a74:	cmp	r3, #0
   38a78:	beq	38a24 <GetDataSlab+0x16bf8>
   38a7c:	ldr	r2, [lr, #-8]
   38a80:	mul	r3, r2, r3
   38a84:	add	r6, r6, r3, lsl #1
   38a88:	add	r4, r4, r3
   38a8c:	b	38a24 <GetDataSlab+0x16bf8>
   38a90:	mov	r0, #1
   38a94:	add	r3, sp, #176	; 0xb0
   38a98:	add	r3, r3, r0, lsl #2
   38a9c:	ldr	r3, [r3, #-120]	; 0xffffff88
   38aa0:	add	r6, r6, r3, lsl #1
   38aa4:	add	r4, r4, r3
   38aa8:	ldr	r3, [sp, #20]
   38aac:	add	r8, r8, r3
   38ab0:	ldr	r3, [sp, #16]
   38ab4:	cmp	r8, r3
   38ab8:	blt	38978 <GetDataSlab+0x16b4c>
   38abc:	b	30874 <GetDataSlab+0xea48>
   38ac0:	cmp	r3, #0
   38ac4:	ble	30874 <GetDataSlab+0xea48>
   38ac8:	ldr	r3, [sp, #20]
   38acc:	mov	r8, #0
   38ad0:	mov	r7, r8
   38ad4:	ldr	sl, [r9]
   38ad8:	sub	r3, r3, #1
   38adc:	str	r3, [sp, #8]
   38ae0:	ldr	r3, [sp, #40]	; 0x28
   38ae4:	sub	fp, r3, sl
   38ae8:	ldr	r3, [sp, #20]
   38aec:	cmp	sl, #0
   38af0:	addne	r5, r5, sl
   38af4:	addne	r4, r4, sl
   38af8:	cmp	r3, #0
   38afc:	ble	38b24 <GetDataSlab+0x16cf8>
   38b00:	ldr	r3, [sp, #4]
   38b04:	sub	r2, r5, #1
   38b08:	add	r1, r3, r8, lsl #1
   38b0c:	ldr	r3, [sp, #8]
   38b10:	add	r0, r5, r3
   38b14:	ldrb	r3, [r2, #1]!
   38b18:	cmp	r0, r2
   38b1c:	strh	r3, [r1], #2
   38b20:	bne	38b14 <GetDataSlab+0x16ce8>
   38b24:	ldr	r3, [sp, #232]	; 0xe8
   38b28:	add	r4, r4, fp
   38b2c:	add	r5, r5, fp
   38b30:	cmp	r3, #1
   38b34:	ble	38c0c <GetDataSlab+0x16de0>
   38b38:	ldr	r3, [sp, #100]	; 0x64
   38b3c:	ldr	r2, [sp, #228]	; 0xe4
   38b40:	add	r3, r3, #1
   38b44:	ldr	r1, [r2, #4]
   38b48:	str	r3, [sp, #100]	; 0x64
   38b4c:	sdiv	r2, r3, r1
   38b50:	mls	r3, r1, r2, r3
   38b54:	cmp	r3, #0
   38b58:	bne	38bf4 <GetDataSlab+0x16dc8>
   38b5c:	ldr	r3, [sp, #228]	; 0xe4
   38b60:	add	ip, sp, #100	; 0x64
   38b64:	add	lr, sp, #140	; 0x8c
   38b68:	mov	r0, #1
   38b6c:	add	r6, r3, #4
   38b70:	b	38bb8 <GetDataSlab+0x16d8c>
   38b74:	ldr	r3, [lr, #-8]
   38b78:	ldr	r1, [r9, r0, lsl #2]
   38b7c:	mla	r3, r1, r3, r2
   38b80:	add	r5, r5, r3
   38b84:	add	r4, r4, r3
   38b88:	ldr	r3, [sp, #232]	; 0xe8
   38b8c:	add	r0, r0, #1
   38b90:	cmp	r3, r0
   38b94:	beq	38c0c <GetDataSlab+0x16de0>
   38b98:	ldr	r3, [ip]
   38b9c:	ldr	r1, [r6, #4]!
   38ba0:	add	r3, r3, #1
   38ba4:	sdiv	r2, r3, r1
   38ba8:	str	r3, [ip]
   38bac:	mls	r3, r1, r2, r3
   38bb0:	cmp	r3, #0
   38bb4:	bne	38bf8 <GetDataSlab+0x16dcc>
   38bb8:	ldr	r2, [lr], #4
   38bbc:	str	r7, [ip], #4
   38bc0:	sdiv	r3, r4, r2
   38bc4:	mls	r3, r2, r3, r4
   38bc8:	cmp	r3, #0
   38bcc:	sub	r2, r2, r3
   38bd0:	bne	38b74 <GetDataSlab+0x16d48>
   38bd4:	ldr	r3, [r9, r0, lsl #2]
   38bd8:	cmp	r3, #0
   38bdc:	beq	38b88 <GetDataSlab+0x16d5c>
   38be0:	ldr	r2, [lr, #-8]
   38be4:	mul	r3, r2, r3
   38be8:	add	r5, r5, r3
   38bec:	add	r4, r4, r3
   38bf0:	b	38b88 <GetDataSlab+0x16d5c>
   38bf4:	mov	r0, #1
   38bf8:	add	r3, sp, #176	; 0xb0
   38bfc:	add	r3, r3, r0, lsl #2
   38c00:	ldr	r3, [r3, #-120]	; 0xffffff88
   38c04:	add	r4, r4, r3
   38c08:	add	r5, r5, r3
   38c0c:	ldr	r3, [sp, #20]
   38c10:	add	r8, r8, r3
   38c14:	ldr	r3, [sp, #16]
   38c18:	cmp	r8, r3
   38c1c:	blt	38ae8 <GetDataSlab+0x16cbc>
   38c20:	b	30874 <GetDataSlab+0xea48>
   38c24:	cmp	r3, #0
   38c28:	ble	30874 <GetDataSlab+0xea48>
   38c2c:	ldr	r3, [sp, #20]
   38c30:	mov	r8, #0
   38c34:	mov	r7, r8
   38c38:	ldr	sl, [r9]
   38c3c:	lsl	r3, r3, #2
   38c40:	str	r3, [sp, #12]
   38c44:	ldr	r3, [sp, #36]	; 0x24
   38c48:	sub	fp, r3, sl
   38c4c:	lsl	r3, sl, #2
   38c50:	str	r3, [sp, #24]
   38c54:	lsl	r3, fp, #2
   38c58:	str	r3, [sp, #8]
   38c5c:	cmp	sl, #0
   38c60:	beq	38c70 <GetDataSlab+0x16e44>
   38c64:	ldr	r3, [sp, #24]
   38c68:	add	r4, r4, sl
   38c6c:	add	r6, r6, r3
   38c70:	ldr	r3, [sp, #20]
   38c74:	cmp	r3, #0
   38c78:	ble	38ca0 <GetDataSlab+0x16e74>
   38c7c:	ldr	r3, [sp, #4]
   38c80:	mov	r2, r6
   38c84:	add	r1, r3, r8, lsl #1
   38c88:	ldr	r3, [sp, #12]
   38c8c:	add	r0, r6, r3
   38c90:	ldr	r3, [r2], #4
   38c94:	cmp	r2, r0
   38c98:	strh	r3, [r1], #2
   38c9c:	bne	38c90 <GetDataSlab+0x16e64>
   38ca0:	ldr	r3, [sp, #232]	; 0xe8
   38ca4:	add	r4, r4, fp
   38ca8:	cmp	r3, #1
   38cac:	ldr	r3, [sp, #8]
   38cb0:	add	r6, r6, r3
   38cb4:	ble	38d8c <GetDataSlab+0x16f60>
   38cb8:	ldr	r3, [sp, #100]	; 0x64
   38cbc:	ldr	r2, [sp, #228]	; 0xe4
   38cc0:	add	r3, r3, #1
   38cc4:	ldr	r1, [r2, #4]
   38cc8:	str	r3, [sp, #100]	; 0x64
   38ccc:	sdiv	r2, r3, r1
   38cd0:	mls	r3, r1, r2, r3
   38cd4:	cmp	r3, #0
   38cd8:	bne	38d74 <GetDataSlab+0x16f48>
   38cdc:	ldr	r3, [sp, #228]	; 0xe4
   38ce0:	add	ip, sp, #100	; 0x64
   38ce4:	add	lr, sp, #140	; 0x8c
   38ce8:	mov	r0, #1
   38cec:	add	r5, r3, #4
   38cf0:	b	38d38 <GetDataSlab+0x16f0c>
   38cf4:	ldr	r3, [lr, #-8]
   38cf8:	ldr	r1, [r9, r0, lsl #2]
   38cfc:	mla	r3, r1, r3, r2
   38d00:	add	r6, r6, r3, lsl #2
   38d04:	add	r4, r4, r3
   38d08:	ldr	r3, [sp, #232]	; 0xe8
   38d0c:	add	r0, r0, #1
   38d10:	cmp	r3, r0
   38d14:	beq	38d8c <GetDataSlab+0x16f60>
   38d18:	ldr	r3, [ip]
   38d1c:	ldr	r1, [r5, #4]!
   38d20:	add	r3, r3, #1
   38d24:	sdiv	r2, r3, r1
   38d28:	str	r3, [ip]
   38d2c:	mls	r3, r1, r2, r3
   38d30:	cmp	r3, #0
   38d34:	bne	38d78 <GetDataSlab+0x16f4c>
   38d38:	ldr	r2, [lr], #4
   38d3c:	str	r7, [ip], #4
   38d40:	sdiv	r3, r4, r2
   38d44:	mls	r3, r2, r3, r4
   38d48:	cmp	r3, #0
   38d4c:	sub	r2, r2, r3
   38d50:	bne	38cf4 <GetDataSlab+0x16ec8>
   38d54:	ldr	r3, [r9, r0, lsl #2]
   38d58:	cmp	r3, #0
   38d5c:	beq	38d08 <GetDataSlab+0x16edc>
   38d60:	ldr	r2, [lr, #-8]
   38d64:	mul	r3, r2, r3
   38d68:	add	r6, r6, r3, lsl #2
   38d6c:	add	r4, r4, r3
   38d70:	b	38d08 <GetDataSlab+0x16edc>
   38d74:	mov	r0, #1
   38d78:	add	r3, sp, #176	; 0xb0
   38d7c:	add	r3, r3, r0, lsl #2
   38d80:	ldr	r3, [r3, #-120]	; 0xffffff88
   38d84:	add	r6, r6, r3, lsl #2
   38d88:	add	r4, r4, r3
   38d8c:	ldr	r3, [sp, #20]
   38d90:	add	r8, r8, r3
   38d94:	ldr	r3, [sp, #16]
   38d98:	cmp	r8, r3
   38d9c:	blt	38c5c <GetDataSlab+0x16e30>
   38da0:	b	30874 <GetDataSlab+0xea48>
   38da4:	cmp	r3, #0
   38da8:	ble	30874 <GetDataSlab+0xea48>
   38dac:	ldr	r3, [sp, #20]
   38db0:	mov	r8, #0
   38db4:	mov	r7, r8
   38db8:	ldr	sl, [r9]
   38dbc:	lsl	r3, r3, #2
   38dc0:	str	r3, [sp, #12]
   38dc4:	ldr	r3, [sp, #36]	; 0x24
   38dc8:	sub	fp, r3, sl
   38dcc:	lsl	r3, sl, #2
   38dd0:	str	r3, [sp, #24]
   38dd4:	lsl	r3, fp, #2
   38dd8:	str	r3, [sp, #8]
   38ddc:	cmp	sl, #0
   38de0:	beq	38df0 <GetDataSlab+0x16fc4>
   38de4:	ldr	r3, [sp, #24]
   38de8:	add	r4, r4, sl
   38dec:	add	r6, r6, r3
   38df0:	ldr	r3, [sp, #20]
   38df4:	cmp	r3, #0
   38df8:	ble	38e20 <GetDataSlab+0x16ff4>
   38dfc:	ldr	r3, [sp, #4]
   38e00:	mov	r2, r6
   38e04:	add	r1, r3, r8, lsl #1
   38e08:	ldr	r3, [sp, #12]
   38e0c:	add	r0, r6, r3
   38e10:	ldr	r3, [r2], #4
   38e14:	cmp	r2, r0
   38e18:	strh	r3, [r1], #2
   38e1c:	bne	38e10 <GetDataSlab+0x16fe4>
   38e20:	ldr	r3, [sp, #232]	; 0xe8
   38e24:	add	r4, r4, fp
   38e28:	cmp	r3, #1
   38e2c:	ldr	r3, [sp, #8]
   38e30:	add	r6, r6, r3
   38e34:	ble	38f0c <GetDataSlab+0x170e0>
   38e38:	ldr	r3, [sp, #100]	; 0x64
   38e3c:	ldr	r2, [sp, #228]	; 0xe4
   38e40:	add	r3, r3, #1
   38e44:	ldr	r1, [r2, #4]
   38e48:	str	r3, [sp, #100]	; 0x64
   38e4c:	sdiv	r2, r3, r1
   38e50:	mls	r3, r1, r2, r3
   38e54:	cmp	r3, #0
   38e58:	bne	38ef4 <GetDataSlab+0x170c8>
   38e5c:	ldr	r3, [sp, #228]	; 0xe4
   38e60:	add	ip, sp, #100	; 0x64
   38e64:	add	lr, sp, #140	; 0x8c
   38e68:	mov	r0, #1
   38e6c:	add	r5, r3, #4
   38e70:	b	38eb8 <GetDataSlab+0x1708c>
   38e74:	ldr	r3, [lr, #-8]
   38e78:	ldr	r1, [r9, r0, lsl #2]
   38e7c:	mla	r3, r1, r3, r2
   38e80:	add	r6, r6, r3, lsl #2
   38e84:	add	r4, r4, r3
   38e88:	ldr	r3, [sp, #232]	; 0xe8
   38e8c:	add	r0, r0, #1
   38e90:	cmp	r3, r0
   38e94:	beq	38f0c <GetDataSlab+0x170e0>
   38e98:	ldr	r3, [ip]
   38e9c:	ldr	r1, [r5, #4]!
   38ea0:	add	r3, r3, #1
   38ea4:	sdiv	r2, r3, r1
   38ea8:	str	r3, [ip]
   38eac:	mls	r3, r1, r2, r3
   38eb0:	cmp	r3, #0
   38eb4:	bne	38ef8 <GetDataSlab+0x170cc>
   38eb8:	ldr	r2, [lr], #4
   38ebc:	str	r7, [ip], #4
   38ec0:	sdiv	r3, r4, r2
   38ec4:	mls	r3, r2, r3, r4
   38ec8:	cmp	r3, #0
   38ecc:	sub	r2, r2, r3
   38ed0:	bne	38e74 <GetDataSlab+0x17048>
   38ed4:	ldr	r3, [r9, r0, lsl #2]
   38ed8:	cmp	r3, #0
   38edc:	beq	38e88 <GetDataSlab+0x1705c>
   38ee0:	ldr	r2, [lr, #-8]
   38ee4:	mul	r3, r2, r3
   38ee8:	add	r6, r6, r3, lsl #2
   38eec:	add	r4, r4, r3
   38ef0:	b	38e88 <GetDataSlab+0x1705c>
   38ef4:	mov	r0, #1
   38ef8:	add	r3, sp, #176	; 0xb0
   38efc:	add	r3, r3, r0, lsl #2
   38f00:	ldr	r3, [r3, #-120]	; 0xffffff88
   38f04:	add	r6, r6, r3, lsl #2
   38f08:	add	r4, r4, r3
   38f0c:	ldr	r3, [sp, #20]
   38f10:	add	r8, r8, r3
   38f14:	ldr	r3, [sp, #16]
   38f18:	cmp	r8, r3
   38f1c:	blt	38ddc <GetDataSlab+0x16fb0>
   38f20:	b	30874 <GetDataSlab+0xea48>
   38f24:	cmp	r3, #0
   38f28:	ble	30874 <GetDataSlab+0xea48>
   38f2c:	ldr	r3, [sp, #20]
   38f30:	mov	r8, #0
   38f34:	mov	r7, r8
   38f38:	ldr	sl, [r9]
   38f3c:	lsl	r3, r3, #2
   38f40:	str	r3, [sp, #12]
   38f44:	ldr	r3, [sp, #36]	; 0x24
   38f48:	sub	fp, r3, sl
   38f4c:	lsl	r3, sl, #2
   38f50:	str	r3, [sp, #24]
   38f54:	lsl	r3, fp, #2
   38f58:	str	r3, [sp, #8]
   38f5c:	cmp	sl, #0
   38f60:	beq	38f70 <GetDataSlab+0x17144>
   38f64:	ldr	r3, [sp, #24]
   38f68:	add	r4, r4, sl
   38f6c:	add	r6, r6, r3
   38f70:	ldr	r3, [sp, #20]
   38f74:	cmp	r3, #0
   38f78:	ble	38fa8 <GetDataSlab+0x1717c>
   38f7c:	ldr	r3, [sp, #4]
   38f80:	ldr	r2, [sp, #12]
   38f84:	add	r1, r3, r8, lsl #1
   38f88:	mov	r3, r6
   38f8c:	add	r0, r6, r2
   38f90:	vldmia	r3!, {s15}
   38f94:	vcvt.s32.f32	s15, s15
   38f98:	cmp	r3, r0
   38f9c:	vmov	r2, s15
   38fa0:	strh	r2, [r1], #2
   38fa4:	bne	38f90 <GetDataSlab+0x17164>
   38fa8:	ldr	r3, [sp, #232]	; 0xe8
   38fac:	add	r4, r4, fp
   38fb0:	cmp	r3, #1
   38fb4:	ldr	r3, [sp, #8]
   38fb8:	add	r6, r6, r3
   38fbc:	ble	39094 <GetDataSlab+0x17268>
   38fc0:	ldr	r3, [sp, #100]	; 0x64
   38fc4:	ldr	r2, [sp, #228]	; 0xe4
   38fc8:	add	r3, r3, #1
   38fcc:	ldr	r1, [r2, #4]
   38fd0:	str	r3, [sp, #100]	; 0x64
   38fd4:	sdiv	r2, r3, r1
   38fd8:	mls	r3, r1, r2, r3
   38fdc:	cmp	r3, #0
   38fe0:	bne	3907c <GetDataSlab+0x17250>
   38fe4:	ldr	r3, [sp, #228]	; 0xe4
   38fe8:	add	ip, sp, #100	; 0x64
   38fec:	add	lr, sp, #140	; 0x8c
   38ff0:	mov	r0, #1
   38ff4:	add	r5, r3, #4
   38ff8:	b	39040 <GetDataSlab+0x17214>
   38ffc:	ldr	r3, [lr, #-8]
   39000:	ldr	r1, [r9, r0, lsl #2]
   39004:	mla	r3, r1, r3, r2
   39008:	add	r6, r6, r3, lsl #2
   3900c:	add	r4, r4, r3
   39010:	ldr	r3, [sp, #232]	; 0xe8
   39014:	add	r0, r0, #1
   39018:	cmp	r3, r0
   3901c:	beq	39094 <GetDataSlab+0x17268>
   39020:	ldr	r3, [ip]
   39024:	ldr	r1, [r5, #4]!
   39028:	add	r3, r3, #1
   3902c:	sdiv	r2, r3, r1
   39030:	str	r3, [ip]
   39034:	mls	r3, r1, r2, r3
   39038:	cmp	r3, #0
   3903c:	bne	39080 <GetDataSlab+0x17254>
   39040:	ldr	r2, [lr], #4
   39044:	str	r7, [ip], #4
   39048:	sdiv	r3, r4, r2
   3904c:	mls	r3, r2, r3, r4
   39050:	cmp	r3, #0
   39054:	sub	r2, r2, r3
   39058:	bne	38ffc <GetDataSlab+0x171d0>
   3905c:	ldr	r3, [r9, r0, lsl #2]
   39060:	cmp	r3, #0
   39064:	beq	39010 <GetDataSlab+0x171e4>
   39068:	ldr	r2, [lr, #-8]
   3906c:	mul	r3, r2, r3
   39070:	add	r6, r6, r3, lsl #2
   39074:	add	r4, r4, r3
   39078:	b	39010 <GetDataSlab+0x171e4>
   3907c:	mov	r0, #1
   39080:	add	r3, sp, #176	; 0xb0
   39084:	add	r3, r3, r0, lsl #2
   39088:	ldr	r3, [r3, #-120]	; 0xffffff88
   3908c:	add	r6, r6, r3, lsl #2
   39090:	add	r4, r4, r3
   39094:	ldr	r3, [sp, #20]
   39098:	add	r8, r8, r3
   3909c:	ldr	r3, [sp, #16]
   390a0:	cmp	r8, r3
   390a4:	blt	38f5c <GetDataSlab+0x17130>
   390a8:	b	30874 <GetDataSlab+0xea48>
   390ac:	cmp	r3, #0
   390b0:	ble	30874 <GetDataSlab+0xea48>
   390b4:	ldr	r3, [r9]
   390b8:	mov	sl, #0
   390bc:	mov	r7, sl
   390c0:	str	r3, [sp, #8]
   390c4:	ldr	r3, [sp, #8]
   390c8:	cmp	r3, #0
   390cc:	addne	r5, r5, r3, lsl #2
   390d0:	addne	r4, r4, r3
   390d4:	cmp	fp, #0
   390d8:	ble	39118 <GetDataSlab+0x172ec>
   390dc:	ldr	r3, [sp, #4]
   390e0:	sub	r1, r5, #4
   390e4:	add	r0, r3, sl
   390e8:	mov	r3, r0
   390ec:	ldr	r2, [r1, #4]!
   390f0:	ldr	ip, [sp, #228]	; 0xe4
   390f4:	strb	r2, [r3], #1
   390f8:	sub	r2, r3, r0
   390fc:	ldr	fp, [ip]
   39100:	cmp	fp, r2
   39104:	bgt	390ec <GetDataSlab+0x172c0>
   39108:	ldr	r3, [r9]
   3910c:	str	r3, [sp, #8]
   39110:	ldr	r3, [r8]
   39114:	str	r3, [sp, #16]
   39118:	ldr	r2, [sp, #8]
   3911c:	ldr	r3, [sp, #232]	; 0xe8
   39120:	cmp	r3, #1
   39124:	ldr	r3, [sp, #16]
   39128:	sub	r3, r3, r2
   3912c:	add	r4, r4, r3
   39130:	add	r5, r5, r3, lsl #2
   39134:	ble	3920c <GetDataSlab+0x173e0>
   39138:	ldr	r3, [sp, #100]	; 0x64
   3913c:	ldr	r2, [sp, #228]	; 0xe4
   39140:	add	r3, r3, #1
   39144:	ldr	r1, [r2, #4]
   39148:	str	r3, [sp, #100]	; 0x64
   3914c:	sdiv	r2, r3, r1
   39150:	mls	r3, r1, r2, r3
   39154:	cmp	r3, #0
   39158:	bne	391f4 <GetDataSlab+0x173c8>
   3915c:	ldr	r3, [sp, #228]	; 0xe4
   39160:	add	ip, sp, #100	; 0x64
   39164:	add	lr, sp, #140	; 0x8c
   39168:	mov	r0, #1
   3916c:	add	r6, r3, #4
   39170:	b	391b8 <GetDataSlab+0x1738c>
   39174:	ldr	r3, [lr, #-8]
   39178:	ldr	r1, [r9, r0, lsl #2]
   3917c:	mla	r3, r1, r3, r2
   39180:	add	r5, r5, r3, lsl #2
   39184:	add	r4, r4, r3
   39188:	ldr	r3, [sp, #232]	; 0xe8
   3918c:	add	r0, r0, #1
   39190:	cmp	r3, r0
   39194:	beq	3920c <GetDataSlab+0x173e0>
   39198:	ldr	r3, [ip]
   3919c:	ldr	r1, [r6, #4]!
   391a0:	add	r3, r3, #1
   391a4:	sdiv	r2, r3, r1
   391a8:	str	r3, [ip]
   391ac:	mls	r3, r1, r2, r3
   391b0:	cmp	r3, #0
   391b4:	bne	391f8 <GetDataSlab+0x173cc>
   391b8:	ldr	r2, [lr], #4
   391bc:	str	r7, [ip], #4
   391c0:	sdiv	r3, r4, r2
   391c4:	mls	r3, r2, r3, r4
   391c8:	cmp	r3, #0
   391cc:	sub	r2, r2, r3
   391d0:	bne	39174 <GetDataSlab+0x17348>
   391d4:	ldr	r3, [r9, r0, lsl #2]
   391d8:	cmp	r3, #0
   391dc:	beq	39188 <GetDataSlab+0x1735c>
   391e0:	ldr	r2, [lr, #-8]
   391e4:	mul	r3, r2, r3
   391e8:	add	r5, r5, r3, lsl #2
   391ec:	add	r4, r4, r3
   391f0:	b	39188 <GetDataSlab+0x1735c>
   391f4:	mov	r0, #1
   391f8:	add	r3, sp, #176	; 0xb0
   391fc:	add	r3, r3, r0, lsl #2
   39200:	ldr	r3, [r3, #-120]	; 0xffffff88
   39204:	add	r5, r5, r3, lsl #2
   39208:	add	r4, r4, r3
   3920c:	ldr	r3, [sp, #20]
   39210:	add	sl, sl, fp
   39214:	cmp	sl, r3
   39218:	blt	390c4 <GetDataSlab+0x17298>
   3921c:	b	30874 <GetDataSlab+0xea48>
   39220:	cmp	r3, #0
   39224:	ble	30874 <GetDataSlab+0xea48>
   39228:	ldr	r3, [r9]
   3922c:	mov	sl, #0
   39230:	mov	r7, sl
   39234:	str	r3, [sp, #8]
   39238:	ldr	r3, [sp, #8]
   3923c:	cmp	r3, #0
   39240:	addne	r5, r5, r3, lsl #3
   39244:	addne	r4, r4, r3
   39248:	cmp	fp, #0
   3924c:	ble	39294 <GetDataSlab+0x17468>
   39250:	ldr	r3, [sp, #4]
   39254:	mov	r2, r5
   39258:	add	r0, r3, sl
   3925c:	mov	r3, r0
   39260:	vldmia	r2!, {d7}
   39264:	ldr	ip, [sp, #228]	; 0xe4
   39268:	vcvt.s32.f64	s15, d7
   3926c:	vmov	r1, s15
   39270:	strb	r1, [r3], #1
   39274:	sub	r1, r3, r0
   39278:	ldr	fp, [ip]
   3927c:	cmp	fp, r1
   39280:	bgt	39260 <GetDataSlab+0x17434>
   39284:	ldr	r3, [r9]
   39288:	str	r3, [sp, #8]
   3928c:	ldr	r3, [r8]
   39290:	str	r3, [sp, #16]
   39294:	ldr	r2, [sp, #8]
   39298:	ldr	r3, [sp, #232]	; 0xe8
   3929c:	cmp	r3, #1
   392a0:	ldr	r3, [sp, #16]
   392a4:	sub	r3, r3, r2
   392a8:	add	r4, r4, r3
   392ac:	add	r5, r5, r3, lsl #3
   392b0:	ble	39388 <GetDataSlab+0x1755c>
   392b4:	ldr	r3, [sp, #100]	; 0x64
   392b8:	ldr	r2, [sp, #228]	; 0xe4
   392bc:	add	r3, r3, #1
   392c0:	ldr	r1, [r2, #4]
   392c4:	str	r3, [sp, #100]	; 0x64
   392c8:	sdiv	r2, r3, r1
   392cc:	mls	r3, r1, r2, r3
   392d0:	cmp	r3, #0
   392d4:	bne	39370 <GetDataSlab+0x17544>
   392d8:	ldr	r3, [sp, #228]	; 0xe4
   392dc:	add	ip, sp, #100	; 0x64
   392e0:	add	lr, sp, #140	; 0x8c
   392e4:	mov	r0, #1
   392e8:	add	r6, r3, #4
   392ec:	b	39334 <GetDataSlab+0x17508>
   392f0:	ldr	r3, [lr, #-8]
   392f4:	ldr	r1, [r9, r0, lsl #2]
   392f8:	mla	r3, r1, r3, r2
   392fc:	add	r5, r5, r3, lsl #3
   39300:	add	r4, r4, r3
   39304:	ldr	r3, [sp, #232]	; 0xe8
   39308:	add	r0, r0, #1
   3930c:	cmp	r3, r0
   39310:	beq	39388 <GetDataSlab+0x1755c>
   39314:	ldr	r3, [ip]
   39318:	ldr	r1, [r6, #4]!
   3931c:	add	r3, r3, #1
   39320:	sdiv	r2, r3, r1
   39324:	str	r3, [ip]
   39328:	mls	r3, r1, r2, r3
   3932c:	cmp	r3, #0
   39330:	bne	39374 <GetDataSlab+0x17548>
   39334:	ldr	r2, [lr], #4
   39338:	str	r7, [ip], #4
   3933c:	sdiv	r3, r4, r2
   39340:	mls	r3, r2, r3, r4
   39344:	cmp	r3, #0
   39348:	sub	r2, r2, r3
   3934c:	bne	392f0 <GetDataSlab+0x174c4>
   39350:	ldr	r3, [r9, r0, lsl #2]
   39354:	cmp	r3, #0
   39358:	beq	39304 <GetDataSlab+0x174d8>
   3935c:	ldr	r2, [lr, #-8]
   39360:	mul	r3, r2, r3
   39364:	add	r5, r5, r3, lsl #3
   39368:	add	r4, r4, r3
   3936c:	b	39304 <GetDataSlab+0x174d8>
   39370:	mov	r0, #1
   39374:	add	r3, sp, #176	; 0xb0
   39378:	add	r3, r3, r0, lsl #2
   3937c:	ldr	r3, [r3, #-120]	; 0xffffff88
   39380:	add	r5, r5, r3, lsl #3
   39384:	add	r4, r4, r3
   39388:	ldr	r3, [sp, #20]
   3938c:	add	sl, sl, fp
   39390:	cmp	sl, r3
   39394:	blt	39238 <GetDataSlab+0x1740c>
   39398:	b	30874 <GetDataSlab+0xea48>
   3939c:	cmp	r3, #0
   393a0:	ble	30874 <GetDataSlab+0xea48>
   393a4:	ldr	r3, [r9]
   393a8:	mov	sl, #0
   393ac:	mov	r7, sl
   393b0:	str	r3, [sp, #8]
   393b4:	ldr	r3, [sp, #8]
   393b8:	cmp	r3, #0
   393bc:	addne	r5, r5, r3, lsl #2
   393c0:	addne	r4, r4, r3
   393c4:	cmp	fp, #0
   393c8:	ble	39410 <GetDataSlab+0x175e4>
   393cc:	ldr	r3, [sp, #4]
   393d0:	mov	r2, r5
   393d4:	add	r0, r3, sl
   393d8:	mov	r3, r0
   393dc:	vldmia	r2!, {s15}
   393e0:	ldr	ip, [sp, #228]	; 0xe4
   393e4:	vcvt.s32.f32	s15, s15
   393e8:	vmov	r1, s15
   393ec:	strb	r1, [r3], #1
   393f0:	sub	r1, r3, r0
   393f4:	ldr	fp, [ip]
   393f8:	cmp	fp, r1
   393fc:	bgt	393dc <GetDataSlab+0x175b0>
   39400:	ldr	r3, [r9]
   39404:	str	r3, [sp, #8]
   39408:	ldr	r3, [r8]
   3940c:	str	r3, [sp, #16]
   39410:	ldr	r2, [sp, #8]
   39414:	ldr	r3, [sp, #232]	; 0xe8
   39418:	cmp	r3, #1
   3941c:	ldr	r3, [sp, #16]
   39420:	sub	r3, r3, r2
   39424:	add	r4, r4, r3
   39428:	add	r5, r5, r3, lsl #2
   3942c:	ble	39504 <GetDataSlab+0x176d8>
   39430:	ldr	r3, [sp, #100]	; 0x64
   39434:	ldr	r2, [sp, #228]	; 0xe4
   39438:	add	r3, r3, #1
   3943c:	ldr	r1, [r2, #4]
   39440:	str	r3, [sp, #100]	; 0x64
   39444:	sdiv	r2, r3, r1
   39448:	mls	r3, r1, r2, r3
   3944c:	cmp	r3, #0
   39450:	bne	394ec <GetDataSlab+0x176c0>
   39454:	ldr	r3, [sp, #228]	; 0xe4
   39458:	add	ip, sp, #100	; 0x64
   3945c:	add	lr, sp, #140	; 0x8c
   39460:	mov	r0, #1
   39464:	add	r6, r3, #4
   39468:	b	394b0 <GetDataSlab+0x17684>
   3946c:	ldr	r3, [lr, #-8]
   39470:	ldr	r1, [r9, r0, lsl #2]
   39474:	mla	r3, r1, r3, r2
   39478:	add	r5, r5, r3, lsl #2
   3947c:	add	r4, r4, r3
   39480:	ldr	r3, [sp, #232]	; 0xe8
   39484:	add	r0, r0, #1
   39488:	cmp	r3, r0
   3948c:	beq	39504 <GetDataSlab+0x176d8>
   39490:	ldr	r3, [ip]
   39494:	ldr	r1, [r6, #4]!
   39498:	add	r3, r3, #1
   3949c:	sdiv	r2, r3, r1
   394a0:	str	r3, [ip]
   394a4:	mls	r3, r1, r2, r3
   394a8:	cmp	r3, #0
   394ac:	bne	394f0 <GetDataSlab+0x176c4>
   394b0:	ldr	r2, [lr], #4
   394b4:	str	r7, [ip], #4
   394b8:	sdiv	r3, r4, r2
   394bc:	mls	r3, r2, r3, r4
   394c0:	cmp	r3, #0
   394c4:	sub	r2, r2, r3
   394c8:	bne	3946c <GetDataSlab+0x17640>
   394cc:	ldr	r3, [r9, r0, lsl #2]
   394d0:	cmp	r3, #0
   394d4:	beq	39480 <GetDataSlab+0x17654>
   394d8:	ldr	r2, [lr, #-8]
   394dc:	mul	r3, r2, r3
   394e0:	add	r5, r5, r3, lsl #2
   394e4:	add	r4, r4, r3
   394e8:	b	39480 <GetDataSlab+0x17654>
   394ec:	mov	r0, #1
   394f0:	add	r3, sp, #176	; 0xb0
   394f4:	add	r3, r3, r0, lsl #2
   394f8:	ldr	r3, [r3, #-120]	; 0xffffff88
   394fc:	add	r5, r5, r3, lsl #2
   39500:	add	r4, r4, r3
   39504:	ldr	r3, [sp, #20]
   39508:	add	sl, sl, fp
   3950c:	cmp	sl, r3
   39510:	blt	393b4 <GetDataSlab+0x17588>
   39514:	b	30874 <GetDataSlab+0xea48>
   39518:	cmp	r3, #0
   3951c:	ble	30874 <GetDataSlab+0xea48>
   39520:	ldr	r3, [r9]
   39524:	mov	sl, #0
   39528:	mov	r7, sl
   3952c:	str	r3, [sp, #8]
   39530:	ldr	r3, [sp, #8]
   39534:	cmp	r3, #0
   39538:	addne	r5, r5, r3
   3953c:	addne	lr, lr, r3
   39540:	cmp	fp, #0
   39544:	ble	3958c <GetDataSlab+0x17760>
   39548:	ldr	r1, [sp, #4]
   3954c:	sub	r2, sl, #1
   39550:	sub	r3, r5, #1
   39554:	add	r2, r1, r2
   39558:	ldrsb	r0, [r3, #1]
   3955c:	add	r1, r3, #2
   39560:	add	r3, r3, #1
   39564:	sub	r1, r1, r5
   39568:	strb	r0, [r2, #1]!
   3956c:	ldr	r0, [sp, #228]	; 0xe4
   39570:	ldr	fp, [r0]
   39574:	cmp	fp, r1
   39578:	bgt	39558 <GetDataSlab+0x1772c>
   3957c:	ldr	r3, [r9]
   39580:	str	r3, [sp, #8]
   39584:	ldr	r3, [r8]
   39588:	str	r3, [sp, #16]
   3958c:	ldr	r2, [sp, #8]
   39590:	ldr	r3, [sp, #232]	; 0xe8
   39594:	cmp	r3, #1
   39598:	ldr	r3, [sp, #16]
   3959c:	sub	r3, r3, r2
   395a0:	add	lr, lr, r3
   395a4:	add	r5, r5, r3
   395a8:	ble	39680 <GetDataSlab+0x17854>
   395ac:	ldr	r3, [sp, #100]	; 0x64
   395b0:	ldr	r2, [sp, #228]	; 0xe4
   395b4:	add	r3, r3, #1
   395b8:	ldr	r1, [r2, #4]
   395bc:	str	r3, [sp, #100]	; 0x64
   395c0:	sdiv	r2, r3, r1
   395c4:	mls	r3, r1, r2, r3
   395c8:	cmp	r3, #0
   395cc:	bne	39668 <GetDataSlab+0x1783c>
   395d0:	ldr	r3, [sp, #228]	; 0xe4
   395d4:	add	ip, sp, #100	; 0x64
   395d8:	add	r4, sp, #140	; 0x8c
   395dc:	mov	r0, #1
   395e0:	add	r6, r3, #4
   395e4:	b	3962c <GetDataSlab+0x17800>
   395e8:	ldr	r3, [r4, #-8]
   395ec:	ldr	r1, [r9, r0, lsl #2]
   395f0:	mla	r3, r1, r3, r2
   395f4:	add	r5, r5, r3
   395f8:	add	lr, lr, r3
   395fc:	ldr	r3, [sp, #232]	; 0xe8
   39600:	add	r0, r0, #1
   39604:	cmp	r3, r0
   39608:	beq	39680 <GetDataSlab+0x17854>
   3960c:	ldr	r3, [ip]
   39610:	ldr	r1, [r6, #4]!
   39614:	add	r3, r3, #1
   39618:	sdiv	r2, r3, r1
   3961c:	str	r3, [ip]
   39620:	mls	r3, r1, r2, r3
   39624:	cmp	r3, #0
   39628:	bne	3966c <GetDataSlab+0x17840>
   3962c:	ldr	r2, [r4], #4
   39630:	str	r7, [ip], #4
   39634:	sdiv	r3, lr, r2
   39638:	mls	r3, r2, r3, lr
   3963c:	cmp	r3, #0
   39640:	sub	r2, r2, r3
   39644:	bne	395e8 <GetDataSlab+0x177bc>
   39648:	ldr	r3, [r9, r0, lsl #2]
   3964c:	cmp	r3, #0
   39650:	beq	395fc <GetDataSlab+0x177d0>
   39654:	ldr	r2, [r4, #-8]
   39658:	mul	r3, r2, r3
   3965c:	add	r5, r5, r3
   39660:	add	lr, lr, r3
   39664:	b	395fc <GetDataSlab+0x177d0>
   39668:	mov	r0, #1
   3966c:	add	r3, sp, #176	; 0xb0
   39670:	add	r3, r3, r0, lsl #2
   39674:	ldr	r3, [r3, #-120]	; 0xffffff88
   39678:	add	lr, lr, r3
   3967c:	add	r5, r5, r3
   39680:	ldr	r3, [sp, #20]
   39684:	add	sl, sl, fp
   39688:	cmp	sl, r3
   3968c:	blt	39530 <GetDataSlab+0x17704>
   39690:	b	30874 <GetDataSlab+0xea48>
   39694:	cmp	r3, #0
   39698:	ble	30874 <GetDataSlab+0xea48>
   3969c:	ldr	r3, [r9]
   396a0:	mov	sl, #0
   396a4:	mov	r7, sl
   396a8:	str	r3, [sp, #8]
   396ac:	ldr	r3, [sp, #8]
   396b0:	cmp	r3, #0
   396b4:	addne	r5, r5, r3
   396b8:	addne	lr, lr, r3
   396bc:	cmp	fp, #0
   396c0:	ble	39708 <GetDataSlab+0x178dc>
   396c4:	ldr	r1, [sp, #4]
   396c8:	sub	r2, sl, #1
   396cc:	sub	r3, r5, #1
   396d0:	add	r2, r1, r2
   396d4:	ldrb	r0, [r3, #1]
   396d8:	add	r1, r3, #2
   396dc:	add	r3, r3, #1
   396e0:	sub	r1, r1, r5
   396e4:	strb	r0, [r2, #1]!
   396e8:	ldr	r0, [sp, #228]	; 0xe4
   396ec:	ldr	fp, [r0]
   396f0:	cmp	r1, fp
   396f4:	blt	396d4 <GetDataSlab+0x178a8>
   396f8:	ldr	r3, [r9]
   396fc:	str	r3, [sp, #8]
   39700:	ldr	r3, [r8]
   39704:	str	r3, [sp, #16]
   39708:	ldr	r2, [sp, #8]
   3970c:	ldr	r3, [sp, #232]	; 0xe8
   39710:	cmp	r3, #1
   39714:	ldr	r3, [sp, #16]
   39718:	sub	r3, r3, r2
   3971c:	add	lr, lr, r3
   39720:	add	r5, r5, r3
   39724:	ble	397fc <GetDataSlab+0x179d0>
   39728:	ldr	r3, [sp, #100]	; 0x64
   3972c:	ldr	r2, [sp, #228]	; 0xe4
   39730:	add	r3, r3, #1
   39734:	ldr	r1, [r2, #4]
   39738:	str	r3, [sp, #100]	; 0x64
   3973c:	sdiv	r2, r3, r1
   39740:	mls	r3, r1, r2, r3
   39744:	cmp	r3, #0
   39748:	bne	397e4 <GetDataSlab+0x179b8>
   3974c:	ldr	r3, [sp, #228]	; 0xe4
   39750:	add	ip, sp, #100	; 0x64
   39754:	add	r4, sp, #140	; 0x8c
   39758:	mov	r0, #1
   3975c:	add	r6, r3, #4
   39760:	b	397a8 <GetDataSlab+0x1797c>
   39764:	ldr	r3, [r4, #-8]
   39768:	ldr	r1, [r9, r0, lsl #2]
   3976c:	mla	r3, r1, r3, r2
   39770:	add	r5, r5, r3
   39774:	add	lr, lr, r3
   39778:	ldr	r3, [sp, #232]	; 0xe8
   3977c:	add	r0, r0, #1
   39780:	cmp	r3, r0
   39784:	beq	397fc <GetDataSlab+0x179d0>
   39788:	ldr	r3, [ip]
   3978c:	ldr	r1, [r6, #4]!
   39790:	add	r3, r3, #1
   39794:	sdiv	r2, r3, r1
   39798:	str	r3, [ip]
   3979c:	mls	r3, r1, r2, r3
   397a0:	cmp	r3, #0
   397a4:	bne	397e8 <GetDataSlab+0x179bc>
   397a8:	ldr	r2, [r4], #4
   397ac:	str	r7, [ip], #4
   397b0:	sdiv	r3, lr, r2
   397b4:	mls	r3, r2, r3, lr
   397b8:	cmp	r3, #0
   397bc:	sub	r2, r2, r3
   397c0:	bne	39764 <GetDataSlab+0x17938>
   397c4:	ldr	r3, [r9, r0, lsl #2]
   397c8:	cmp	r3, #0
   397cc:	beq	39778 <GetDataSlab+0x1794c>
   397d0:	ldr	r2, [r4, #-8]
   397d4:	mul	r3, r2, r3
   397d8:	add	r5, r5, r3
   397dc:	add	lr, lr, r3
   397e0:	b	39778 <GetDataSlab+0x1794c>
   397e4:	mov	r0, #1
   397e8:	add	r3, sp, #176	; 0xb0
   397ec:	add	r3, r3, r0, lsl #2
   397f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   397f4:	add	lr, lr, r3
   397f8:	add	r5, r5, r3
   397fc:	ldr	r3, [sp, #20]
   39800:	add	sl, sl, fp
   39804:	cmp	sl, r3
   39808:	blt	396ac <GetDataSlab+0x17880>
   3980c:	b	30874 <GetDataSlab+0xea48>
   39810:	cmp	r3, #0
   39814:	ble	30874 <GetDataSlab+0xea48>
   39818:	ldr	r3, [sp, #20]
   3981c:	mov	r8, #0
   39820:	mov	r7, r8
   39824:	ldr	sl, [r9]
   39828:	lsl	r3, r3, #1
   3982c:	str	r3, [sp, #12]
   39830:	ldr	r3, [sp, #36]	; 0x24
   39834:	sub	fp, r3, sl
   39838:	lsl	r3, sl, #1
   3983c:	str	r3, [sp, #24]
   39840:	lsl	r3, fp, #1
   39844:	str	r3, [sp, #8]
   39848:	cmp	sl, #0
   3984c:	beq	3985c <GetDataSlab+0x17a30>
   39850:	ldr	r3, [sp, #24]
   39854:	add	r4, r4, sl
   39858:	add	r6, r6, r3
   3985c:	ldr	r3, [sp, #20]
   39860:	cmp	r3, #0
   39864:	ble	39890 <GetDataSlab+0x17a64>
   39868:	ldr	r3, [sp, #4]
   3986c:	mov	r1, r6
   39870:	add	r0, r3, r8, lsl #3
   39874:	ldr	r3, [sp, #12]
   39878:	add	ip, r6, r3
   3987c:	ldrsh	r2, [r1], #2
   39880:	asr	r3, r2, #31
   39884:	cmp	r1, ip
   39888:	strd	r2, [r0], #8
   3988c:	bne	3987c <GetDataSlab+0x17a50>
   39890:	ldr	r3, [sp, #232]	; 0xe8
   39894:	add	r4, r4, fp
   39898:	cmp	r3, #1
   3989c:	ldr	r3, [sp, #8]
   398a0:	add	r6, r6, r3
   398a4:	ble	3997c <GetDataSlab+0x17b50>
   398a8:	ldr	r3, [sp, #100]	; 0x64
   398ac:	ldr	r2, [sp, #228]	; 0xe4
   398b0:	add	r3, r3, #1
   398b4:	ldr	r1, [r2, #4]
   398b8:	str	r3, [sp, #100]	; 0x64
   398bc:	sdiv	r2, r3, r1
   398c0:	mls	r3, r1, r2, r3
   398c4:	cmp	r3, #0
   398c8:	bne	39964 <GetDataSlab+0x17b38>
   398cc:	ldr	r3, [sp, #228]	; 0xe4
   398d0:	add	ip, sp, #100	; 0x64
   398d4:	add	lr, sp, #140	; 0x8c
   398d8:	mov	r0, #1
   398dc:	add	r5, r3, #4
   398e0:	b	39928 <GetDataSlab+0x17afc>
   398e4:	ldr	r3, [lr, #-8]
   398e8:	ldr	r1, [r9, r0, lsl #2]
   398ec:	mla	r3, r1, r3, r2
   398f0:	add	r6, r6, r3, lsl #1
   398f4:	add	r4, r4, r3
   398f8:	ldr	r3, [sp, #232]	; 0xe8
   398fc:	add	r0, r0, #1
   39900:	cmp	r3, r0
   39904:	beq	3997c <GetDataSlab+0x17b50>
   39908:	ldr	r3, [ip]
   3990c:	ldr	r1, [r5, #4]!
   39910:	add	r3, r3, #1
   39914:	sdiv	r2, r3, r1
   39918:	str	r3, [ip]
   3991c:	mls	r3, r1, r2, r3
   39920:	cmp	r3, #0
   39924:	bne	39968 <GetDataSlab+0x17b3c>
   39928:	ldr	r2, [lr], #4
   3992c:	str	r7, [ip], #4
   39930:	sdiv	r3, r4, r2
   39934:	mls	r3, r2, r3, r4
   39938:	cmp	r3, #0
   3993c:	sub	r2, r2, r3
   39940:	bne	398e4 <GetDataSlab+0x17ab8>
   39944:	ldr	r3, [r9, r0, lsl #2]
   39948:	cmp	r3, #0
   3994c:	beq	398f8 <GetDataSlab+0x17acc>
   39950:	ldr	r2, [lr, #-8]
   39954:	mul	r3, r2, r3
   39958:	add	r6, r6, r3, lsl #1
   3995c:	add	r4, r4, r3
   39960:	b	398f8 <GetDataSlab+0x17acc>
   39964:	mov	r0, #1
   39968:	add	r3, sp, #176	; 0xb0
   3996c:	add	r3, r3, r0, lsl #2
   39970:	ldr	r3, [r3, #-120]	; 0xffffff88
   39974:	add	r6, r6, r3, lsl #1
   39978:	add	r4, r4, r3
   3997c:	ldr	r3, [sp, #20]
   39980:	add	r8, r8, r3
   39984:	ldr	r3, [sp, #16]
   39988:	cmp	r8, r3
   3998c:	blt	39848 <GetDataSlab+0x17a1c>
   39990:	b	30874 <GetDataSlab+0xea48>
   39994:	cmp	r3, #0
   39998:	ble	30874 <GetDataSlab+0xea48>
   3999c:	ldr	r3, [sp, #20]
   399a0:	mov	r8, #0
   399a4:	mov	r7, r8
   399a8:	ldr	sl, [r9]
   399ac:	sub	r3, r3, #1
   399b0:	str	r3, [sp, #8]
   399b4:	ldr	r3, [sp, #40]	; 0x28
   399b8:	sub	fp, r3, sl
   399bc:	ldr	r3, [sp, #20]
   399c0:	cmp	sl, #0
   399c4:	addne	r5, r5, sl
   399c8:	addne	r4, r4, sl
   399cc:	cmp	r3, #0
   399d0:	ble	399fc <GetDataSlab+0x17bd0>
   399d4:	ldr	r3, [sp, #4]
   399d8:	sub	r1, r5, #1
   399dc:	add	r0, r3, r8, lsl #3
   399e0:	ldr	r3, [sp, #8]
   399e4:	add	ip, r5, r3
   399e8:	ldrb	r2, [r1, #1]!
   399ec:	mov	r3, #0
   399f0:	cmp	r1, ip
   399f4:	strd	r2, [r0], #8
   399f8:	bne	399e8 <GetDataSlab+0x17bbc>
   399fc:	ldr	r3, [sp, #232]	; 0xe8
   39a00:	add	r4, r4, fp
   39a04:	add	r5, r5, fp
   39a08:	cmp	r3, #1
   39a0c:	ble	39ae4 <GetDataSlab+0x17cb8>
   39a10:	ldr	r3, [sp, #100]	; 0x64
   39a14:	ldr	r2, [sp, #228]	; 0xe4
   39a18:	add	r3, r3, #1
   39a1c:	ldr	r1, [r2, #4]
   39a20:	str	r3, [sp, #100]	; 0x64
   39a24:	sdiv	r2, r3, r1
   39a28:	mls	r3, r1, r2, r3
   39a2c:	cmp	r3, #0
   39a30:	bne	39acc <GetDataSlab+0x17ca0>
   39a34:	ldr	r3, [sp, #228]	; 0xe4
   39a38:	add	ip, sp, #100	; 0x64
   39a3c:	add	lr, sp, #140	; 0x8c
   39a40:	mov	r0, #1
   39a44:	add	r6, r3, #4
   39a48:	b	39a90 <GetDataSlab+0x17c64>
   39a4c:	ldr	r3, [lr, #-8]
   39a50:	ldr	r1, [r9, r0, lsl #2]
   39a54:	mla	r3, r1, r3, r2
   39a58:	add	r5, r5, r3
   39a5c:	add	r4, r4, r3
   39a60:	ldr	r3, [sp, #232]	; 0xe8
   39a64:	add	r0, r0, #1
   39a68:	cmp	r3, r0
   39a6c:	beq	39ae4 <GetDataSlab+0x17cb8>
   39a70:	ldr	r3, [ip]
   39a74:	ldr	r1, [r6, #4]!
   39a78:	add	r3, r3, #1
   39a7c:	sdiv	r2, r3, r1
   39a80:	str	r3, [ip]
   39a84:	mls	r3, r1, r2, r3
   39a88:	cmp	r3, #0
   39a8c:	bne	39ad0 <GetDataSlab+0x17ca4>
   39a90:	ldr	r2, [lr], #4
   39a94:	str	r7, [ip], #4
   39a98:	sdiv	r3, r4, r2
   39a9c:	mls	r3, r2, r3, r4
   39aa0:	cmp	r3, #0
   39aa4:	sub	r2, r2, r3
   39aa8:	bne	39a4c <GetDataSlab+0x17c20>
   39aac:	ldr	r3, [r9, r0, lsl #2]
   39ab0:	cmp	r3, #0
   39ab4:	beq	39a60 <GetDataSlab+0x17c34>
   39ab8:	ldr	r2, [lr, #-8]
   39abc:	mul	r3, r2, r3
   39ac0:	add	r5, r5, r3
   39ac4:	add	r4, r4, r3
   39ac8:	b	39a60 <GetDataSlab+0x17c34>
   39acc:	mov	r0, #1
   39ad0:	add	r3, sp, #176	; 0xb0
   39ad4:	add	r3, r3, r0, lsl #2
   39ad8:	ldr	r3, [r3, #-120]	; 0xffffff88
   39adc:	add	r4, r4, r3
   39ae0:	add	r5, r5, r3
   39ae4:	ldr	r3, [sp, #20]
   39ae8:	add	r8, r8, r3
   39aec:	ldr	r3, [sp, #16]
   39af0:	cmp	r8, r3
   39af4:	blt	399bc <GetDataSlab+0x17b90>
   39af8:	b	30874 <GetDataSlab+0xea48>
   39afc:	cmp	r3, #0
   39b00:	ble	30874 <GetDataSlab+0xea48>
   39b04:	ldr	r3, [sp, #20]
   39b08:	mov	r8, #0
   39b0c:	mov	r7, r8
   39b10:	ldr	sl, [r9]
   39b14:	lsl	r3, r3, #1
   39b18:	str	r3, [sp, #12]
   39b1c:	ldr	r3, [sp, #36]	; 0x24
   39b20:	sub	fp, r3, sl
   39b24:	lsl	r3, sl, #1
   39b28:	str	r3, [sp, #24]
   39b2c:	lsl	r3, fp, #1
   39b30:	str	r3, [sp, #8]
   39b34:	cmp	sl, #0
   39b38:	beq	39b48 <GetDataSlab+0x17d1c>
   39b3c:	ldr	r3, [sp, #24]
   39b40:	add	r4, r4, sl
   39b44:	add	r6, r6, r3
   39b48:	ldr	r3, [sp, #20]
   39b4c:	cmp	r3, #0
   39b50:	ble	39b7c <GetDataSlab+0x17d50>
   39b54:	ldr	r3, [sp, #4]
   39b58:	mov	r1, r6
   39b5c:	add	r0, r3, r8, lsl #3
   39b60:	ldr	r3, [sp, #12]
   39b64:	add	ip, r6, r3
   39b68:	ldrh	r2, [r1], #2
   39b6c:	mov	r3, #0
   39b70:	cmp	r1, ip
   39b74:	strd	r2, [r0], #8
   39b78:	bne	39b68 <GetDataSlab+0x17d3c>
   39b7c:	ldr	r3, [sp, #232]	; 0xe8
   39b80:	add	r4, r4, fp
   39b84:	cmp	r3, #1
   39b88:	ldr	r3, [sp, #8]
   39b8c:	add	r6, r6, r3
   39b90:	ble	39c68 <GetDataSlab+0x17e3c>
   39b94:	ldr	r3, [sp, #100]	; 0x64
   39b98:	ldr	r2, [sp, #228]	; 0xe4
   39b9c:	add	r3, r3, #1
   39ba0:	ldr	r1, [r2, #4]
   39ba4:	str	r3, [sp, #100]	; 0x64
   39ba8:	sdiv	r2, r3, r1
   39bac:	mls	r3, r1, r2, r3
   39bb0:	cmp	r3, #0
   39bb4:	bne	39c50 <GetDataSlab+0x17e24>
   39bb8:	ldr	r3, [sp, #228]	; 0xe4
   39bbc:	add	ip, sp, #100	; 0x64
   39bc0:	add	lr, sp, #140	; 0x8c
   39bc4:	mov	r0, #1
   39bc8:	add	r5, r3, #4
   39bcc:	b	39c14 <GetDataSlab+0x17de8>
   39bd0:	ldr	r3, [lr, #-8]
   39bd4:	ldr	r1, [r9, r0, lsl #2]
   39bd8:	mla	r3, r1, r3, r2
   39bdc:	add	r6, r6, r3, lsl #1
   39be0:	add	r4, r4, r3
   39be4:	ldr	r3, [sp, #232]	; 0xe8
   39be8:	add	r0, r0, #1
   39bec:	cmp	r3, r0
   39bf0:	beq	39c68 <GetDataSlab+0x17e3c>
   39bf4:	ldr	r3, [ip]
   39bf8:	ldr	r1, [r5, #4]!
   39bfc:	add	r3, r3, #1
   39c00:	sdiv	r2, r3, r1
   39c04:	str	r3, [ip]
   39c08:	mls	r3, r1, r2, r3
   39c0c:	cmp	r3, #0
   39c10:	bne	39c54 <GetDataSlab+0x17e28>
   39c14:	ldr	r2, [lr], #4
   39c18:	str	r7, [ip], #4
   39c1c:	sdiv	r3, r4, r2
   39c20:	mls	r3, r2, r3, r4
   39c24:	cmp	r3, #0
   39c28:	sub	r2, r2, r3
   39c2c:	bne	39bd0 <GetDataSlab+0x17da4>
   39c30:	ldr	r3, [r9, r0, lsl #2]
   39c34:	cmp	r3, #0
   39c38:	beq	39be4 <GetDataSlab+0x17db8>
   39c3c:	ldr	r2, [lr, #-8]
   39c40:	mul	r3, r2, r3
   39c44:	add	r6, r6, r3, lsl #1
   39c48:	add	r4, r4, r3
   39c4c:	b	39be4 <GetDataSlab+0x17db8>
   39c50:	mov	r0, #1
   39c54:	add	r3, sp, #176	; 0xb0
   39c58:	add	r3, r3, r0, lsl #2
   39c5c:	ldr	r3, [r3, #-120]	; 0xffffff88
   39c60:	add	r6, r6, r3, lsl #1
   39c64:	add	r4, r4, r3
   39c68:	ldr	r3, [sp, #20]
   39c6c:	add	r8, r8, r3
   39c70:	ldr	r3, [sp, #16]
   39c74:	cmp	r8, r3
   39c78:	blt	39b34 <GetDataSlab+0x17d08>
   39c7c:	b	30874 <GetDataSlab+0xea48>
   39c80:	cmp	r3, #0
   39c84:	ble	30874 <GetDataSlab+0xea48>
   39c88:	ldr	r3, [sp, #20]
   39c8c:	mov	r8, #0
   39c90:	mov	r7, r8
   39c94:	ldr	sl, [r9]
   39c98:	lsl	r3, r3, #2
   39c9c:	str	r3, [sp, #12]
   39ca0:	ldr	r3, [sp, #36]	; 0x24
   39ca4:	sub	fp, r3, sl
   39ca8:	lsl	r3, sl, #2
   39cac:	str	r3, [sp, #24]
   39cb0:	lsl	r3, fp, #2
   39cb4:	str	r3, [sp, #8]
   39cb8:	cmp	sl, #0
   39cbc:	beq	39ccc <GetDataSlab+0x17ea0>
   39cc0:	ldr	r3, [sp, #24]
   39cc4:	add	r4, r4, sl
   39cc8:	add	r6, r6, r3
   39ccc:	ldr	r3, [sp, #20]
   39cd0:	cmp	r3, #0
   39cd4:	ble	39d04 <GetDataSlab+0x17ed8>
   39cd8:	ldr	r3, [sp, #4]
   39cdc:	mov	r2, r6
   39ce0:	add	r1, r3, r8, lsl #3
   39ce4:	ldr	r3, [sp, #12]
   39ce8:	add	r0, r6, r3
   39cec:	ldr	r3, [r2], #4
   39cf0:	vmov	s15, r3
   39cf4:	cmp	r2, r0
   39cf8:	vcvt.f64.u32	d7, s15
   39cfc:	vstmia	r1!, {d7}
   39d00:	bne	39cec <GetDataSlab+0x17ec0>
   39d04:	ldr	r3, [sp, #232]	; 0xe8
   39d08:	add	r4, r4, fp
   39d0c:	cmp	r3, #1
   39d10:	ldr	r3, [sp, #8]
   39d14:	add	r6, r6, r3
   39d18:	ble	39df0 <GetDataSlab+0x17fc4>
   39d1c:	ldr	r3, [sp, #100]	; 0x64
   39d20:	ldr	r2, [sp, #228]	; 0xe4
   39d24:	add	r3, r3, #1
   39d28:	ldr	r1, [r2, #4]
   39d2c:	str	r3, [sp, #100]	; 0x64
   39d30:	sdiv	r2, r3, r1
   39d34:	mls	r3, r1, r2, r3
   39d38:	cmp	r3, #0
   39d3c:	bne	39dd8 <GetDataSlab+0x17fac>
   39d40:	ldr	r3, [sp, #228]	; 0xe4
   39d44:	add	ip, sp, #100	; 0x64
   39d48:	add	lr, sp, #140	; 0x8c
   39d4c:	mov	r0, #1
   39d50:	add	r5, r3, #4
   39d54:	b	39d9c <GetDataSlab+0x17f70>
   39d58:	ldr	r3, [lr, #-8]
   39d5c:	ldr	r1, [r9, r0, lsl #2]
   39d60:	mla	r3, r1, r3, r2
   39d64:	add	r6, r6, r3, lsl #2
   39d68:	add	r4, r4, r3
   39d6c:	ldr	r3, [sp, #232]	; 0xe8
   39d70:	add	r0, r0, #1
   39d74:	cmp	r3, r0
   39d78:	beq	39df0 <GetDataSlab+0x17fc4>
   39d7c:	ldr	r3, [ip]
   39d80:	ldr	r1, [r5, #4]!
   39d84:	add	r3, r3, #1
   39d88:	sdiv	r2, r3, r1
   39d8c:	str	r3, [ip]
   39d90:	mls	r3, r1, r2, r3
   39d94:	cmp	r3, #0
   39d98:	bne	39ddc <GetDataSlab+0x17fb0>
   39d9c:	ldr	r2, [lr], #4
   39da0:	str	r7, [ip], #4
   39da4:	sdiv	r3, r4, r2
   39da8:	mls	r3, r2, r3, r4
   39dac:	cmp	r3, #0
   39db0:	sub	r2, r2, r3
   39db4:	bne	39d58 <GetDataSlab+0x17f2c>
   39db8:	ldr	r3, [r9, r0, lsl #2]
   39dbc:	cmp	r3, #0
   39dc0:	beq	39d6c <GetDataSlab+0x17f40>
   39dc4:	ldr	r2, [lr, #-8]
   39dc8:	mul	r3, r2, r3
   39dcc:	add	r6, r6, r3, lsl #2
   39dd0:	add	r4, r4, r3
   39dd4:	b	39d6c <GetDataSlab+0x17f40>
   39dd8:	mov	r0, #1
   39ddc:	add	r3, sp, #176	; 0xb0
   39de0:	add	r3, r3, r0, lsl #2
   39de4:	ldr	r3, [r3, #-120]	; 0xffffff88
   39de8:	add	r6, r6, r3, lsl #2
   39dec:	add	r4, r4, r3
   39df0:	ldr	r3, [sp, #20]
   39df4:	add	r8, r8, r3
   39df8:	ldr	r3, [sp, #16]
   39dfc:	cmp	r8, r3
   39e00:	blt	39cb8 <GetDataSlab+0x17e8c>
   39e04:	b	30874 <GetDataSlab+0xea48>
   39e08:	cmp	r3, #0
   39e0c:	ble	30874 <GetDataSlab+0xea48>
   39e10:	ldr	r3, [sp, #20]
   39e14:	mov	r8, #0
   39e18:	mov	r7, r8
   39e1c:	ldr	sl, [r9]
   39e20:	lsl	r3, r3, #3
   39e24:	str	r3, [sp, #12]
   39e28:	ldr	r3, [sp, #36]	; 0x24
   39e2c:	sub	fp, r3, sl
   39e30:	lsl	r3, sl, #3
   39e34:	str	r3, [sp, #24]
   39e38:	lsl	r3, fp, #3
   39e3c:	str	r3, [sp, #8]
   39e40:	cmp	sl, #0
   39e44:	beq	39e54 <GetDataSlab+0x18028>
   39e48:	ldr	r3, [sp, #24]
   39e4c:	add	r4, r4, sl
   39e50:	add	r6, r6, r3
   39e54:	ldr	r3, [sp, #20]
   39e58:	cmp	r3, #0
   39e5c:	ble	39e84 <GetDataSlab+0x18058>
   39e60:	ldr	r3, [sp, #4]
   39e64:	mov	r1, r6
   39e68:	add	r0, r3, r8, lsl #3
   39e6c:	ldr	r3, [sp, #12]
   39e70:	add	ip, r3, r6
   39e74:	ldrd	r2, [r1], #8
   39e78:	cmp	r1, ip
   39e7c:	strd	r2, [r0], #8
   39e80:	bne	39e74 <GetDataSlab+0x18048>
   39e84:	ldr	r3, [sp, #232]	; 0xe8
   39e88:	add	r4, r4, fp
   39e8c:	cmp	r3, #1
   39e90:	ldr	r3, [sp, #8]
   39e94:	add	r6, r6, r3
   39e98:	ble	39f70 <GetDataSlab+0x18144>
   39e9c:	ldr	r3, [sp, #100]	; 0x64
   39ea0:	ldr	r2, [sp, #228]	; 0xe4
   39ea4:	add	r3, r3, #1
   39ea8:	ldr	r1, [r2, #4]
   39eac:	str	r3, [sp, #100]	; 0x64
   39eb0:	sdiv	r2, r3, r1
   39eb4:	mls	r3, r1, r2, r3
   39eb8:	cmp	r3, #0
   39ebc:	bne	39f58 <GetDataSlab+0x1812c>
   39ec0:	ldr	r3, [sp, #228]	; 0xe4
   39ec4:	add	ip, sp, #100	; 0x64
   39ec8:	add	lr, sp, #140	; 0x8c
   39ecc:	mov	r0, #1
   39ed0:	add	r5, r3, #4
   39ed4:	b	39f1c <GetDataSlab+0x180f0>
   39ed8:	ldr	r3, [lr, #-8]
   39edc:	ldr	r1, [r9, r0, lsl #2]
   39ee0:	mla	r3, r1, r3, r2
   39ee4:	add	r6, r6, r3, lsl #3
   39ee8:	add	r4, r4, r3
   39eec:	ldr	r3, [sp, #232]	; 0xe8
   39ef0:	add	r0, r0, #1
   39ef4:	cmp	r3, r0
   39ef8:	beq	39f70 <GetDataSlab+0x18144>
   39efc:	ldr	r3, [ip]
   39f00:	ldr	r1, [r5, #4]!
   39f04:	add	r3, r3, #1
   39f08:	sdiv	r2, r3, r1
   39f0c:	str	r3, [ip]
   39f10:	mls	r3, r1, r2, r3
   39f14:	cmp	r3, #0
   39f18:	bne	39f5c <GetDataSlab+0x18130>
   39f1c:	ldr	r2, [lr], #4
   39f20:	str	r7, [ip], #4
   39f24:	sdiv	r3, r4, r2
   39f28:	mls	r3, r2, r3, r4
   39f2c:	cmp	r3, #0
   39f30:	sub	r2, r2, r3
   39f34:	bne	39ed8 <GetDataSlab+0x180ac>
   39f38:	ldr	r3, [r9, r0, lsl #2]
   39f3c:	cmp	r3, #0
   39f40:	beq	39eec <GetDataSlab+0x180c0>
   39f44:	ldr	r2, [lr, #-8]
   39f48:	mul	r3, r2, r3
   39f4c:	add	r6, r6, r3, lsl #3
   39f50:	add	r4, r4, r3
   39f54:	b	39eec <GetDataSlab+0x180c0>
   39f58:	mov	r0, #1
   39f5c:	add	r3, sp, #176	; 0xb0
   39f60:	add	r3, r3, r0, lsl #2
   39f64:	ldr	r3, [r3, #-120]	; 0xffffff88
   39f68:	add	r6, r6, r3, lsl #3
   39f6c:	add	r4, r4, r3
   39f70:	ldr	r3, [sp, #20]
   39f74:	add	r8, r8, r3
   39f78:	ldr	r3, [sp, #16]
   39f7c:	cmp	r8, r3
   39f80:	blt	39e40 <GetDataSlab+0x18014>
   39f84:	b	30874 <GetDataSlab+0xea48>
   39f88:	cmp	r3, #0
   39f8c:	ble	30874 <GetDataSlab+0xea48>
   39f90:	ldr	r3, [sp, #20]
   39f94:	mov	r8, #0
   39f98:	mov	r7, r8
   39f9c:	ldr	sl, [r9]
   39fa0:	lsl	r3, r3, #2
   39fa4:	str	r3, [sp, #12]
   39fa8:	ldr	r3, [sp, #36]	; 0x24
   39fac:	sub	fp, r3, sl
   39fb0:	lsl	r3, sl, #2
   39fb4:	str	r3, [sp, #24]
   39fb8:	lsl	r3, fp, #2
   39fbc:	str	r3, [sp, #8]
   39fc0:	cmp	sl, #0
   39fc4:	beq	39fd4 <GetDataSlab+0x181a8>
   39fc8:	ldr	r3, [sp, #24]
   39fcc:	add	r4, r4, sl
   39fd0:	add	r6, r6, r3
   39fd4:	ldr	r3, [sp, #20]
   39fd8:	cmp	r3, #0
   39fdc:	ble	3a008 <GetDataSlab+0x181dc>
   39fe0:	ldr	r3, [sp, #4]
   39fe4:	ldr	r1, [sp, #12]
   39fe8:	add	r2, r3, r8, lsl #3
   39fec:	mov	r3, r6
   39ff0:	add	r1, r1, r6
   39ff4:	vldmia	r3!, {s15}
   39ff8:	vcvt.f64.f32	d7, s15
   39ffc:	cmp	r1, r3
   3a000:	vstmia	r2!, {d7}
   3a004:	bne	39ff4 <GetDataSlab+0x181c8>
   3a008:	ldr	r3, [sp, #232]	; 0xe8
   3a00c:	add	r4, r4, fp
   3a010:	cmp	r3, #1
   3a014:	ldr	r3, [sp, #8]
   3a018:	add	r6, r6, r3
   3a01c:	ble	3a0f4 <GetDataSlab+0x182c8>
   3a020:	ldr	r3, [sp, #100]	; 0x64
   3a024:	ldr	r2, [sp, #228]	; 0xe4
   3a028:	add	r3, r3, #1
   3a02c:	ldr	r1, [r2, #4]
   3a030:	str	r3, [sp, #100]	; 0x64
   3a034:	sdiv	r2, r3, r1
   3a038:	mls	r3, r1, r2, r3
   3a03c:	cmp	r3, #0
   3a040:	bne	3a0dc <GetDataSlab+0x182b0>
   3a044:	ldr	r3, [sp, #228]	; 0xe4
   3a048:	add	ip, sp, #100	; 0x64
   3a04c:	add	lr, sp, #140	; 0x8c
   3a050:	mov	r0, #1
   3a054:	add	r5, r3, #4
   3a058:	b	3a0a0 <GetDataSlab+0x18274>
   3a05c:	ldr	r3, [lr, #-8]
   3a060:	ldr	r1, [r9, r0, lsl #2]
   3a064:	mla	r3, r1, r3, r2
   3a068:	add	r6, r6, r3, lsl #2
   3a06c:	add	r4, r4, r3
   3a070:	ldr	r3, [sp, #232]	; 0xe8
   3a074:	add	r0, r0, #1
   3a078:	cmp	r3, r0
   3a07c:	beq	3a0f4 <GetDataSlab+0x182c8>
   3a080:	ldr	r3, [ip]
   3a084:	ldr	r1, [r5, #4]!
   3a088:	add	r3, r3, #1
   3a08c:	sdiv	r2, r3, r1
   3a090:	str	r3, [ip]
   3a094:	mls	r3, r1, r2, r3
   3a098:	cmp	r3, #0
   3a09c:	bne	3a0e0 <GetDataSlab+0x182b4>
   3a0a0:	ldr	r2, [lr], #4
   3a0a4:	str	r7, [ip], #4
   3a0a8:	sdiv	r3, r4, r2
   3a0ac:	mls	r3, r2, r3, r4
   3a0b0:	cmp	r3, #0
   3a0b4:	sub	r2, r2, r3
   3a0b8:	bne	3a05c <GetDataSlab+0x18230>
   3a0bc:	ldr	r3, [r9, r0, lsl #2]
   3a0c0:	cmp	r3, #0
   3a0c4:	beq	3a070 <GetDataSlab+0x18244>
   3a0c8:	ldr	r2, [lr, #-8]
   3a0cc:	mul	r3, r2, r3
   3a0d0:	add	r6, r6, r3, lsl #2
   3a0d4:	add	r4, r4, r3
   3a0d8:	b	3a070 <GetDataSlab+0x18244>
   3a0dc:	mov	r0, #1
   3a0e0:	add	r3, sp, #176	; 0xb0
   3a0e4:	add	r3, r3, r0, lsl #2
   3a0e8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a0ec:	add	r6, r6, r3, lsl #2
   3a0f0:	add	r4, r4, r3
   3a0f4:	ldr	r3, [sp, #20]
   3a0f8:	add	r8, r8, r3
   3a0fc:	ldr	r3, [sp, #16]
   3a100:	cmp	r8, r3
   3a104:	blt	39fc0 <GetDataSlab+0x18194>
   3a108:	b	30874 <GetDataSlab+0xea48>
   3a10c:	cmp	r3, #0
   3a110:	ble	30874 <GetDataSlab+0xea48>
   3a114:	ldr	r3, [sp, #20]
   3a118:	mov	r8, #0
   3a11c:	mov	r7, r8
   3a120:	ldr	sl, [r9]
   3a124:	sub	r3, r3, #1
   3a128:	str	r3, [sp, #8]
   3a12c:	ldr	r3, [sp, #40]	; 0x28
   3a130:	sub	fp, r3, sl
   3a134:	ldr	r3, [sp, #20]
   3a138:	cmp	sl, #0
   3a13c:	addne	r5, r5, sl
   3a140:	addne	r4, r4, sl
   3a144:	cmp	r3, #0
   3a148:	ble	3a178 <GetDataSlab+0x1834c>
   3a14c:	ldr	r3, [sp, #4]
   3a150:	sub	r2, r5, #1
   3a154:	add	r1, r3, r8, lsl #3
   3a158:	ldr	r3, [sp, #8]
   3a15c:	add	r0, r5, r3
   3a160:	ldrsb	r3, [r2, #1]!
   3a164:	vmov	s15, r3
   3a168:	cmp	r2, r0
   3a16c:	vcvt.f64.s32	d7, s15
   3a170:	vstmia	r1!, {d7}
   3a174:	bne	3a160 <GetDataSlab+0x18334>
   3a178:	ldr	r3, [sp, #232]	; 0xe8
   3a17c:	add	r4, r4, fp
   3a180:	add	r5, r5, fp
   3a184:	cmp	r3, #1
   3a188:	ble	3a260 <GetDataSlab+0x18434>
   3a18c:	ldr	r3, [sp, #100]	; 0x64
   3a190:	ldr	r2, [sp, #228]	; 0xe4
   3a194:	add	r3, r3, #1
   3a198:	ldr	r1, [r2, #4]
   3a19c:	str	r3, [sp, #100]	; 0x64
   3a1a0:	sdiv	r2, r3, r1
   3a1a4:	mls	r3, r1, r2, r3
   3a1a8:	cmp	r3, #0
   3a1ac:	bne	3a248 <GetDataSlab+0x1841c>
   3a1b0:	ldr	r3, [sp, #228]	; 0xe4
   3a1b4:	add	ip, sp, #100	; 0x64
   3a1b8:	add	lr, sp, #140	; 0x8c
   3a1bc:	mov	r0, #1
   3a1c0:	add	r6, r3, #4
   3a1c4:	b	3a20c <GetDataSlab+0x183e0>
   3a1c8:	ldr	r3, [lr, #-8]
   3a1cc:	ldr	r1, [r9, r0, lsl #2]
   3a1d0:	mla	r3, r1, r3, r2
   3a1d4:	add	r5, r5, r3
   3a1d8:	add	r4, r4, r3
   3a1dc:	ldr	r3, [sp, #232]	; 0xe8
   3a1e0:	add	r0, r0, #1
   3a1e4:	cmp	r3, r0
   3a1e8:	beq	3a260 <GetDataSlab+0x18434>
   3a1ec:	ldr	r3, [ip]
   3a1f0:	ldr	r1, [r6, #4]!
   3a1f4:	add	r3, r3, #1
   3a1f8:	sdiv	r2, r3, r1
   3a1fc:	str	r3, [ip]
   3a200:	mls	r3, r1, r2, r3
   3a204:	cmp	r3, #0
   3a208:	bne	3a24c <GetDataSlab+0x18420>
   3a20c:	ldr	r2, [lr], #4
   3a210:	str	r7, [ip], #4
   3a214:	sdiv	r3, r4, r2
   3a218:	mls	r3, r2, r3, r4
   3a21c:	cmp	r3, #0
   3a220:	sub	r2, r2, r3
   3a224:	bne	3a1c8 <GetDataSlab+0x1839c>
   3a228:	ldr	r3, [r9, r0, lsl #2]
   3a22c:	cmp	r3, #0
   3a230:	beq	3a1dc <GetDataSlab+0x183b0>
   3a234:	ldr	r2, [lr, #-8]
   3a238:	mul	r3, r2, r3
   3a23c:	add	r5, r5, r3
   3a240:	add	r4, r4, r3
   3a244:	b	3a1dc <GetDataSlab+0x183b0>
   3a248:	mov	r0, #1
   3a24c:	add	r3, sp, #176	; 0xb0
   3a250:	add	r3, r3, r0, lsl #2
   3a254:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a258:	add	r4, r4, r3
   3a25c:	add	r5, r5, r3
   3a260:	ldr	r3, [sp, #20]
   3a264:	add	r8, r8, r3
   3a268:	ldr	r3, [sp, #16]
   3a26c:	cmp	r8, r3
   3a270:	blt	3a134 <GetDataSlab+0x18308>
   3a274:	b	30874 <GetDataSlab+0xea48>
   3a278:	cmp	r3, #0
   3a27c:	ble	30874 <GetDataSlab+0xea48>
   3a280:	ldr	r3, [r9]
   3a284:	mov	sl, #0
   3a288:	mov	r7, sl
   3a28c:	str	r3, [sp, #8]
   3a290:	ldr	r3, [sp, #8]
   3a294:	cmp	r3, #0
   3a298:	addne	r5, r5, r3, lsl #2
   3a29c:	addne	r4, r4, r3
   3a2a0:	cmp	fp, #0
   3a2a4:	ble	3a2e4 <GetDataSlab+0x184b8>
   3a2a8:	ldr	r3, [sp, #4]
   3a2ac:	sub	r1, r5, #4
   3a2b0:	add	r0, r3, sl
   3a2b4:	mov	r3, r0
   3a2b8:	ldr	r2, [r1, #4]!
   3a2bc:	ldr	ip, [sp, #228]	; 0xe4
   3a2c0:	strb	r2, [r3], #1
   3a2c4:	sub	r2, r3, r0
   3a2c8:	ldr	fp, [ip]
   3a2cc:	cmp	fp, r2
   3a2d0:	bgt	3a2b8 <GetDataSlab+0x1848c>
   3a2d4:	ldr	r3, [r9]
   3a2d8:	str	r3, [sp, #8]
   3a2dc:	ldr	r3, [r8]
   3a2e0:	str	r3, [sp, #16]
   3a2e4:	ldr	r2, [sp, #8]
   3a2e8:	ldr	r3, [sp, #232]	; 0xe8
   3a2ec:	cmp	r3, #1
   3a2f0:	ldr	r3, [sp, #16]
   3a2f4:	sub	r3, r3, r2
   3a2f8:	add	r4, r4, r3
   3a2fc:	add	r5, r5, r3, lsl #2
   3a300:	ble	3a3d8 <GetDataSlab+0x185ac>
   3a304:	ldr	r3, [sp, #100]	; 0x64
   3a308:	ldr	r2, [sp, #228]	; 0xe4
   3a30c:	add	r3, r3, #1
   3a310:	ldr	r1, [r2, #4]
   3a314:	str	r3, [sp, #100]	; 0x64
   3a318:	sdiv	r2, r3, r1
   3a31c:	mls	r3, r1, r2, r3
   3a320:	cmp	r3, #0
   3a324:	bne	3a3c0 <GetDataSlab+0x18594>
   3a328:	ldr	r3, [sp, #228]	; 0xe4
   3a32c:	add	ip, sp, #100	; 0x64
   3a330:	add	lr, sp, #140	; 0x8c
   3a334:	mov	r0, #1
   3a338:	add	r6, r3, #4
   3a33c:	b	3a384 <GetDataSlab+0x18558>
   3a340:	ldr	r3, [lr, #-8]
   3a344:	ldr	r1, [r9, r0, lsl #2]
   3a348:	mla	r3, r1, r3, r2
   3a34c:	add	r5, r5, r3, lsl #2
   3a350:	add	r4, r4, r3
   3a354:	ldr	r3, [sp, #232]	; 0xe8
   3a358:	add	r0, r0, #1
   3a35c:	cmp	r3, r0
   3a360:	beq	3a3d8 <GetDataSlab+0x185ac>
   3a364:	ldr	r3, [ip]
   3a368:	ldr	r1, [r6, #4]!
   3a36c:	add	r3, r3, #1
   3a370:	sdiv	r2, r3, r1
   3a374:	str	r3, [ip]
   3a378:	mls	r3, r1, r2, r3
   3a37c:	cmp	r3, #0
   3a380:	bne	3a3c4 <GetDataSlab+0x18598>
   3a384:	ldr	r2, [lr], #4
   3a388:	str	r7, [ip], #4
   3a38c:	sdiv	r3, r4, r2
   3a390:	mls	r3, r2, r3, r4
   3a394:	cmp	r3, #0
   3a398:	sub	r2, r2, r3
   3a39c:	bne	3a340 <GetDataSlab+0x18514>
   3a3a0:	ldr	r3, [r9, r0, lsl #2]
   3a3a4:	cmp	r3, #0
   3a3a8:	beq	3a354 <GetDataSlab+0x18528>
   3a3ac:	ldr	r2, [lr, #-8]
   3a3b0:	mul	r3, r2, r3
   3a3b4:	add	r5, r5, r3, lsl #2
   3a3b8:	add	r4, r4, r3
   3a3bc:	b	3a354 <GetDataSlab+0x18528>
   3a3c0:	mov	r0, #1
   3a3c4:	add	r3, sp, #176	; 0xb0
   3a3c8:	add	r3, r3, r0, lsl #2
   3a3cc:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a3d0:	add	r5, r5, r3, lsl #2
   3a3d4:	add	r4, r4, r3
   3a3d8:	ldr	r3, [sp, #20]
   3a3dc:	add	sl, sl, fp
   3a3e0:	cmp	sl, r3
   3a3e4:	blt	3a290 <GetDataSlab+0x18464>
   3a3e8:	b	30874 <GetDataSlab+0xea48>
   3a3ec:	cmp	r3, #0
   3a3f0:	ble	30874 <GetDataSlab+0xea48>
   3a3f4:	ldr	r3, [r9]
   3a3f8:	mov	fp, #0
   3a3fc:	mov	sl, fp
   3a400:	str	r3, [sp, #8]
   3a404:	ldr	r2, [sp, #8]
   3a408:	ldr	r3, [sp, #20]
   3a40c:	lsl	r3, r3, #2
   3a410:	str	r3, [sp, #28]
   3a414:	ldr	r3, [sp, #40]	; 0x28
   3a418:	sub	r3, r3, r2
   3a41c:	str	r3, [sp, #12]
   3a420:	lsl	r3, r2, #2
   3a424:	str	r3, [sp, #32]
   3a428:	ldr	r3, [sp, #12]
   3a42c:	lsl	r3, r3, #2
   3a430:	str	r3, [sp, #24]
   3a434:	ldr	r3, [sp, #8]
   3a438:	cmp	r3, #0
   3a43c:	beq	3a450 <GetDataSlab+0x18624>
   3a440:	ldr	r3, [sp, #32]
   3a444:	add	r8, r8, r3
   3a448:	ldr	r3, [sp, #8]
   3a44c:	add	r7, r7, r3
   3a450:	ldr	r3, [sp, #20]
   3a454:	cmp	r3, #0
   3a458:	ble	3a484 <GetDataSlab+0x18658>
   3a45c:	ldr	r3, [sp, #4]
   3a460:	mov	r4, r8
   3a464:	add	r5, r3, fp, lsl #3
   3a468:	ldr	r3, [sp, #28]
   3a46c:	add	r6, r8, r3
   3a470:	ldr	r0, [r4], #4
   3a474:	bl	4e3f0 <__aeabi_f2ulz>
   3a478:	strd	r0, [r5], #8
   3a47c:	cmp	r4, r6
   3a480:	bne	3a470 <GetDataSlab+0x18644>
   3a484:	ldr	r3, [sp, #232]	; 0xe8
   3a488:	cmp	r3, #1
   3a48c:	ldr	r3, [sp, #12]
   3a490:	add	r7, r7, r3
   3a494:	ldr	r3, [sp, #24]
   3a498:	add	r8, r8, r3
   3a49c:	ble	3a574 <GetDataSlab+0x18748>
   3a4a0:	ldr	r3, [sp, #100]	; 0x64
   3a4a4:	ldr	r2, [sp, #228]	; 0xe4
   3a4a8:	add	r3, r3, #1
   3a4ac:	ldr	r1, [r2, #4]
   3a4b0:	str	r3, [sp, #100]	; 0x64
   3a4b4:	sdiv	r2, r3, r1
   3a4b8:	mls	r3, r1, r2, r3
   3a4bc:	cmp	r3, #0
   3a4c0:	bne	3a55c <GetDataSlab+0x18730>
   3a4c4:	ldr	r3, [sp, #228]	; 0xe4
   3a4c8:	add	ip, sp, #100	; 0x64
   3a4cc:	add	lr, sp, #140	; 0x8c
   3a4d0:	mov	r0, #1
   3a4d4:	add	r4, r3, #4
   3a4d8:	b	3a520 <GetDataSlab+0x186f4>
   3a4dc:	ldr	r3, [lr, #-8]
   3a4e0:	ldr	r1, [r9, r0, lsl #2]
   3a4e4:	mla	r3, r1, r3, r2
   3a4e8:	add	r8, r8, r3, lsl #2
   3a4ec:	add	r7, r7, r3
   3a4f0:	ldr	r3, [sp, #232]	; 0xe8
   3a4f4:	add	r0, r0, #1
   3a4f8:	cmp	r3, r0
   3a4fc:	beq	3a574 <GetDataSlab+0x18748>
   3a500:	ldr	r3, [ip]
   3a504:	ldr	r1, [r4, #4]!
   3a508:	add	r3, r3, #1
   3a50c:	sdiv	r2, r3, r1
   3a510:	str	r3, [ip]
   3a514:	mls	r3, r1, r2, r3
   3a518:	cmp	r3, #0
   3a51c:	bne	3a560 <GetDataSlab+0x18734>
   3a520:	ldr	r2, [lr], #4
   3a524:	str	sl, [ip], #4
   3a528:	sdiv	r3, r7, r2
   3a52c:	mls	r3, r2, r3, r7
   3a530:	cmp	r3, #0
   3a534:	sub	r2, r2, r3
   3a538:	bne	3a4dc <GetDataSlab+0x186b0>
   3a53c:	ldr	r3, [r9, r0, lsl #2]
   3a540:	cmp	r3, #0
   3a544:	beq	3a4f0 <GetDataSlab+0x186c4>
   3a548:	ldr	r2, [lr, #-8]
   3a54c:	mul	r3, r2, r3
   3a550:	add	r8, r8, r3, lsl #2
   3a554:	add	r7, r7, r3
   3a558:	b	3a4f0 <GetDataSlab+0x186c4>
   3a55c:	mov	r0, #1
   3a560:	add	r3, sp, #176	; 0xb0
   3a564:	add	r3, r3, r0, lsl #2
   3a568:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a56c:	add	r8, r8, r3, lsl #2
   3a570:	add	r7, r7, r3
   3a574:	ldr	r3, [sp, #20]
   3a578:	add	fp, fp, r3
   3a57c:	ldr	r3, [sp, #16]
   3a580:	cmp	fp, r3
   3a584:	blt	3a434 <GetDataSlab+0x18608>
   3a588:	b	30874 <GetDataSlab+0xea48>
   3a58c:	cmp	r3, #0
   3a590:	ble	30874 <GetDataSlab+0xea48>
   3a594:	ldr	r3, [sp, #20]
   3a598:	mov	r8, #0
   3a59c:	mov	r7, r8
   3a5a0:	ldr	sl, [r9]
   3a5a4:	lsl	r3, r3, #2
   3a5a8:	str	r3, [sp, #12]
   3a5ac:	ldr	r3, [sp, #36]	; 0x24
   3a5b0:	sub	fp, r3, sl
   3a5b4:	lsl	r3, sl, #2
   3a5b8:	str	r3, [sp, #24]
   3a5bc:	lsl	r3, fp, #2
   3a5c0:	str	r3, [sp, #8]
   3a5c4:	cmp	sl, #0
   3a5c8:	beq	3a5d8 <GetDataSlab+0x187ac>
   3a5cc:	ldr	r3, [sp, #24]
   3a5d0:	add	r4, r4, sl
   3a5d4:	add	r6, r6, r3
   3a5d8:	ldr	r3, [sp, #20]
   3a5dc:	cmp	r3, #0
   3a5e0:	ble	3a60c <GetDataSlab+0x187e0>
   3a5e4:	ldr	r3, [sp, #4]
   3a5e8:	mov	r1, r6
   3a5ec:	add	r2, r3, r8, lsl #3
   3a5f0:	ldr	r3, [sp, #12]
   3a5f4:	add	r0, r6, r3
   3a5f8:	ldr	r3, [r1], #4
   3a5fc:	cmp	r1, r0
   3a600:	stm	r2, {r3, r7}
   3a604:	add	r2, r2, #8
   3a608:	bne	3a5f8 <GetDataSlab+0x187cc>
   3a60c:	ldr	r3, [sp, #232]	; 0xe8
   3a610:	add	r4, r4, fp
   3a614:	cmp	r3, #1
   3a618:	ldr	r3, [sp, #8]
   3a61c:	add	r6, r6, r3
   3a620:	ble	3a6f8 <GetDataSlab+0x188cc>
   3a624:	ldr	r3, [sp, #100]	; 0x64
   3a628:	ldr	r2, [sp, #228]	; 0xe4
   3a62c:	add	r3, r3, #1
   3a630:	ldr	r1, [r2, #4]
   3a634:	str	r3, [sp, #100]	; 0x64
   3a638:	sdiv	r2, r3, r1
   3a63c:	mls	r3, r1, r2, r3
   3a640:	cmp	r3, #0
   3a644:	bne	3a6e0 <GetDataSlab+0x188b4>
   3a648:	ldr	r3, [sp, #228]	; 0xe4
   3a64c:	add	ip, sp, #100	; 0x64
   3a650:	add	lr, sp, #140	; 0x8c
   3a654:	mov	r0, #1
   3a658:	add	r5, r3, #4
   3a65c:	b	3a6a4 <GetDataSlab+0x18878>
   3a660:	ldr	r3, [lr, #-8]
   3a664:	ldr	r1, [r9, r0, lsl #2]
   3a668:	mla	r3, r1, r3, r2
   3a66c:	add	r6, r6, r3, lsl #2
   3a670:	add	r4, r4, r3
   3a674:	ldr	r3, [sp, #232]	; 0xe8
   3a678:	add	r0, r0, #1
   3a67c:	cmp	r3, r0
   3a680:	beq	3a6f8 <GetDataSlab+0x188cc>
   3a684:	ldr	r3, [ip]
   3a688:	ldr	r1, [r5, #4]!
   3a68c:	add	r3, r3, #1
   3a690:	sdiv	r2, r3, r1
   3a694:	str	r3, [ip]
   3a698:	mls	r3, r1, r2, r3
   3a69c:	cmp	r3, #0
   3a6a0:	bne	3a6e4 <GetDataSlab+0x188b8>
   3a6a4:	ldr	r2, [lr], #4
   3a6a8:	str	r7, [ip], #4
   3a6ac:	sdiv	r3, r4, r2
   3a6b0:	mls	r3, r2, r3, r4
   3a6b4:	cmp	r3, #0
   3a6b8:	sub	r2, r2, r3
   3a6bc:	bne	3a660 <GetDataSlab+0x18834>
   3a6c0:	ldr	r3, [r9, r0, lsl #2]
   3a6c4:	cmp	r3, #0
   3a6c8:	beq	3a674 <GetDataSlab+0x18848>
   3a6cc:	ldr	r2, [lr, #-8]
   3a6d0:	mul	r3, r2, r3
   3a6d4:	add	r6, r6, r3, lsl #2
   3a6d8:	add	r4, r4, r3
   3a6dc:	b	3a674 <GetDataSlab+0x18848>
   3a6e0:	mov	r0, #1
   3a6e4:	add	r3, sp, #176	; 0xb0
   3a6e8:	add	r3, r3, r0, lsl #2
   3a6ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a6f0:	add	r6, r6, r3, lsl #2
   3a6f4:	add	r4, r4, r3
   3a6f8:	ldr	r3, [sp, #20]
   3a6fc:	add	r8, r8, r3
   3a700:	ldr	r3, [sp, #16]
   3a704:	cmp	r8, r3
   3a708:	blt	3a5c4 <GetDataSlab+0x18798>
   3a70c:	b	30874 <GetDataSlab+0xea48>
   3a710:	cmp	r3, #0
   3a714:	ble	30874 <GetDataSlab+0xea48>
   3a718:	ldr	r3, [r9]
   3a71c:	mov	fp, #0
   3a720:	mov	sl, fp
   3a724:	str	r3, [sp, #8]
   3a728:	ldr	r2, [sp, #8]
   3a72c:	ldr	r3, [sp, #20]
   3a730:	lsl	r3, r3, #3
   3a734:	str	r3, [sp, #28]
   3a738:	ldr	r3, [sp, #40]	; 0x28
   3a73c:	sub	r3, r3, r2
   3a740:	str	r3, [sp, #12]
   3a744:	lsl	r3, r2, #3
   3a748:	str	r3, [sp, #32]
   3a74c:	ldr	r3, [sp, #12]
   3a750:	lsl	r3, r3, #3
   3a754:	str	r3, [sp, #24]
   3a758:	ldr	r3, [sp, #8]
   3a75c:	cmp	r3, #0
   3a760:	beq	3a774 <GetDataSlab+0x18948>
   3a764:	ldr	r3, [sp, #32]
   3a768:	add	r8, r8, r3
   3a76c:	ldr	r3, [sp, #8]
   3a770:	add	r7, r7, r3
   3a774:	ldr	r3, [sp, #20]
   3a778:	cmp	r3, #0
   3a77c:	ble	3a7a8 <GetDataSlab+0x1897c>
   3a780:	ldr	r3, [sp, #4]
   3a784:	mov	r4, r8
   3a788:	add	r5, r3, fp, lsl #3
   3a78c:	ldr	r3, [sp, #28]
   3a790:	add	r6, r8, r3
   3a794:	ldrd	r0, [r4], #8
   3a798:	bl	4e430 <__aeabi_d2ulz>
   3a79c:	strd	r0, [r5], #8
   3a7a0:	cmp	r4, r6
   3a7a4:	bne	3a794 <GetDataSlab+0x18968>
   3a7a8:	ldr	r3, [sp, #232]	; 0xe8
   3a7ac:	cmp	r3, #1
   3a7b0:	ldr	r3, [sp, #12]
   3a7b4:	add	r7, r7, r3
   3a7b8:	ldr	r3, [sp, #24]
   3a7bc:	add	r8, r8, r3
   3a7c0:	ble	3a898 <GetDataSlab+0x18a6c>
   3a7c4:	ldr	r3, [sp, #100]	; 0x64
   3a7c8:	ldr	r2, [sp, #228]	; 0xe4
   3a7cc:	add	r3, r3, #1
   3a7d0:	ldr	r1, [r2, #4]
   3a7d4:	str	r3, [sp, #100]	; 0x64
   3a7d8:	sdiv	r2, r3, r1
   3a7dc:	mls	r3, r1, r2, r3
   3a7e0:	cmp	r3, #0
   3a7e4:	bne	3a880 <GetDataSlab+0x18a54>
   3a7e8:	ldr	r3, [sp, #228]	; 0xe4
   3a7ec:	add	ip, sp, #100	; 0x64
   3a7f0:	add	lr, sp, #140	; 0x8c
   3a7f4:	mov	r0, #1
   3a7f8:	add	r4, r3, #4
   3a7fc:	b	3a844 <GetDataSlab+0x18a18>
   3a800:	ldr	r3, [lr, #-8]
   3a804:	ldr	r1, [r9, r0, lsl #2]
   3a808:	mla	r3, r1, r3, r2
   3a80c:	add	r8, r8, r3, lsl #3
   3a810:	add	r7, r7, r3
   3a814:	ldr	r3, [sp, #232]	; 0xe8
   3a818:	add	r0, r0, #1
   3a81c:	cmp	r3, r0
   3a820:	beq	3a898 <GetDataSlab+0x18a6c>
   3a824:	ldr	r3, [ip]
   3a828:	ldr	r1, [r4, #4]!
   3a82c:	add	r3, r3, #1
   3a830:	sdiv	r2, r3, r1
   3a834:	str	r3, [ip]
   3a838:	mls	r3, r1, r2, r3
   3a83c:	cmp	r3, #0
   3a840:	bne	3a884 <GetDataSlab+0x18a58>
   3a844:	ldr	r2, [lr], #4
   3a848:	str	sl, [ip], #4
   3a84c:	sdiv	r3, r7, r2
   3a850:	mls	r3, r2, r3, r7
   3a854:	cmp	r3, #0
   3a858:	sub	r2, r2, r3
   3a85c:	bne	3a800 <GetDataSlab+0x189d4>
   3a860:	ldr	r3, [r9, r0, lsl #2]
   3a864:	cmp	r3, #0
   3a868:	beq	3a814 <GetDataSlab+0x189e8>
   3a86c:	ldr	r2, [lr, #-8]
   3a870:	mul	r3, r2, r3
   3a874:	add	r8, r8, r3, lsl #3
   3a878:	add	r7, r7, r3
   3a87c:	b	3a814 <GetDataSlab+0x189e8>
   3a880:	mov	r0, #1
   3a884:	add	r3, sp, #176	; 0xb0
   3a888:	add	r3, r3, r0, lsl #2
   3a88c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3a890:	add	r8, r8, r3, lsl #3
   3a894:	add	r7, r7, r3
   3a898:	ldr	r3, [sp, #20]
   3a89c:	add	fp, fp, r3
   3a8a0:	ldr	r3, [sp, #16]
   3a8a4:	cmp	fp, r3
   3a8a8:	blt	3a758 <GetDataSlab+0x1892c>
   3a8ac:	b	30874 <GetDataSlab+0xea48>
   3a8b0:	cmp	r3, #0
   3a8b4:	ble	30874 <GetDataSlab+0xea48>
   3a8b8:	ldr	r3, [sp, #20]
   3a8bc:	mov	r8, #0
   3a8c0:	mov	r7, r8
   3a8c4:	ldr	sl, [r9]
   3a8c8:	lsl	r3, r3, #1
   3a8cc:	str	r3, [sp, #12]
   3a8d0:	ldr	r3, [sp, #36]	; 0x24
   3a8d4:	sub	fp, r3, sl
   3a8d8:	lsl	r3, sl, #1
   3a8dc:	str	r3, [sp, #24]
   3a8e0:	lsl	r3, fp, #1
   3a8e4:	str	r3, [sp, #8]
   3a8e8:	cmp	sl, #0
   3a8ec:	beq	3a8fc <GetDataSlab+0x18ad0>
   3a8f0:	ldr	r3, [sp, #24]
   3a8f4:	add	r4, r4, sl
   3a8f8:	add	r6, r6, r3
   3a8fc:	ldr	r3, [sp, #20]
   3a900:	cmp	r3, #0
   3a904:	ble	3a930 <GetDataSlab+0x18b04>
   3a908:	ldr	r3, [sp, #4]
   3a90c:	mov	r1, r6
   3a910:	add	r0, r3, r8, lsl #3
   3a914:	ldr	r3, [sp, #12]
   3a918:	add	ip, r6, r3
   3a91c:	ldrsh	r2, [r1], #2
   3a920:	asr	r3, r2, #31
   3a924:	cmp	r1, ip
   3a928:	strd	r2, [r0], #8
   3a92c:	bne	3a91c <GetDataSlab+0x18af0>
   3a930:	ldr	r3, [sp, #232]	; 0xe8
   3a934:	add	r4, r4, fp
   3a938:	cmp	r3, #1
   3a93c:	ldr	r3, [sp, #8]
   3a940:	add	r6, r6, r3
   3a944:	ble	3aa1c <GetDataSlab+0x18bf0>
   3a948:	ldr	r3, [sp, #100]	; 0x64
   3a94c:	ldr	r2, [sp, #228]	; 0xe4
   3a950:	add	r3, r3, #1
   3a954:	ldr	r1, [r2, #4]
   3a958:	str	r3, [sp, #100]	; 0x64
   3a95c:	sdiv	r2, r3, r1
   3a960:	mls	r3, r1, r2, r3
   3a964:	cmp	r3, #0
   3a968:	bne	3aa04 <GetDataSlab+0x18bd8>
   3a96c:	ldr	r3, [sp, #228]	; 0xe4
   3a970:	add	ip, sp, #100	; 0x64
   3a974:	add	lr, sp, #140	; 0x8c
   3a978:	mov	r0, #1
   3a97c:	add	r5, r3, #4
   3a980:	b	3a9c8 <GetDataSlab+0x18b9c>
   3a984:	ldr	r3, [lr, #-8]
   3a988:	ldr	r1, [r9, r0, lsl #2]
   3a98c:	mla	r3, r1, r3, r2
   3a990:	add	r6, r6, r3, lsl #1
   3a994:	add	r4, r4, r3
   3a998:	ldr	r3, [sp, #232]	; 0xe8
   3a99c:	add	r0, r0, #1
   3a9a0:	cmp	r3, r0
   3a9a4:	beq	3aa1c <GetDataSlab+0x18bf0>
   3a9a8:	ldr	r3, [ip]
   3a9ac:	ldr	r1, [r5, #4]!
   3a9b0:	add	r3, r3, #1
   3a9b4:	sdiv	r2, r3, r1
   3a9b8:	str	r3, [ip]
   3a9bc:	mls	r3, r1, r2, r3
   3a9c0:	cmp	r3, #0
   3a9c4:	bne	3aa08 <GetDataSlab+0x18bdc>
   3a9c8:	ldr	r2, [lr], #4
   3a9cc:	str	r7, [ip], #4
   3a9d0:	sdiv	r3, r4, r2
   3a9d4:	mls	r3, r2, r3, r4
   3a9d8:	cmp	r3, #0
   3a9dc:	sub	r2, r2, r3
   3a9e0:	bne	3a984 <GetDataSlab+0x18b58>
   3a9e4:	ldr	r3, [r9, r0, lsl #2]
   3a9e8:	cmp	r3, #0
   3a9ec:	beq	3a998 <GetDataSlab+0x18b6c>
   3a9f0:	ldr	r2, [lr, #-8]
   3a9f4:	mul	r3, r2, r3
   3a9f8:	add	r6, r6, r3, lsl #1
   3a9fc:	add	r4, r4, r3
   3aa00:	b	3a998 <GetDataSlab+0x18b6c>
   3aa04:	mov	r0, #1
   3aa08:	add	r3, sp, #176	; 0xb0
   3aa0c:	add	r3, r3, r0, lsl #2
   3aa10:	ldr	r3, [r3, #-120]	; 0xffffff88
   3aa14:	add	r6, r6, r3, lsl #1
   3aa18:	add	r4, r4, r3
   3aa1c:	ldr	r3, [sp, #20]
   3aa20:	add	r8, r8, r3
   3aa24:	ldr	r3, [sp, #16]
   3aa28:	cmp	r8, r3
   3aa2c:	blt	3a8e8 <GetDataSlab+0x18abc>
   3aa30:	b	30874 <GetDataSlab+0xea48>
   3aa34:	cmp	r3, #0
   3aa38:	ble	30874 <GetDataSlab+0xea48>
   3aa3c:	ldr	r3, [sp, #20]
   3aa40:	mov	r8, #0
   3aa44:	mov	r7, r8
   3aa48:	ldr	sl, [r9]
   3aa4c:	lsl	r3, r3, #1
   3aa50:	str	r3, [sp, #12]
   3aa54:	ldr	r3, [sp, #36]	; 0x24
   3aa58:	sub	fp, r3, sl
   3aa5c:	lsl	r3, sl, #1
   3aa60:	str	r3, [sp, #24]
   3aa64:	lsl	r3, fp, #1
   3aa68:	str	r3, [sp, #8]
   3aa6c:	cmp	sl, #0
   3aa70:	beq	3aa80 <GetDataSlab+0x18c54>
   3aa74:	ldr	r3, [sp, #24]
   3aa78:	add	r4, r4, sl
   3aa7c:	add	r6, r6, r3
   3aa80:	ldr	r3, [sp, #20]
   3aa84:	cmp	r3, #0
   3aa88:	ble	3aab8 <GetDataSlab+0x18c8c>
   3aa8c:	ldr	r3, [sp, #4]
   3aa90:	mov	r2, r6
   3aa94:	add	r1, r3, r8, lsl #3
   3aa98:	ldr	r3, [sp, #12]
   3aa9c:	add	r0, r6, r3
   3aaa0:	ldrsh	r3, [r2], #2
   3aaa4:	vmov	s15, r3
   3aaa8:	cmp	r0, r2
   3aaac:	vcvt.f64.s32	d7, s15
   3aab0:	vstmia	r1!, {d7}
   3aab4:	bne	3aaa0 <GetDataSlab+0x18c74>
   3aab8:	ldr	r3, [sp, #232]	; 0xe8
   3aabc:	add	r4, r4, fp
   3aac0:	cmp	r3, #1
   3aac4:	ldr	r3, [sp, #8]
   3aac8:	add	r6, r6, r3
   3aacc:	ble	3aba4 <GetDataSlab+0x18d78>
   3aad0:	ldr	r3, [sp, #100]	; 0x64
   3aad4:	ldr	r2, [sp, #228]	; 0xe4
   3aad8:	add	r3, r3, #1
   3aadc:	ldr	r1, [r2, #4]
   3aae0:	str	r3, [sp, #100]	; 0x64
   3aae4:	sdiv	r2, r3, r1
   3aae8:	mls	r3, r1, r2, r3
   3aaec:	cmp	r3, #0
   3aaf0:	bne	3ab8c <GetDataSlab+0x18d60>
   3aaf4:	ldr	r3, [sp, #228]	; 0xe4
   3aaf8:	add	ip, sp, #100	; 0x64
   3aafc:	add	lr, sp, #140	; 0x8c
   3ab00:	mov	r0, #1
   3ab04:	add	r5, r3, #4
   3ab08:	b	3ab50 <GetDataSlab+0x18d24>
   3ab0c:	ldr	r3, [lr, #-8]
   3ab10:	ldr	r1, [r9, r0, lsl #2]
   3ab14:	mla	r3, r1, r3, r2
   3ab18:	add	r6, r6, r3, lsl #1
   3ab1c:	add	r4, r4, r3
   3ab20:	ldr	r3, [sp, #232]	; 0xe8
   3ab24:	add	r0, r0, #1
   3ab28:	cmp	r3, r0
   3ab2c:	beq	3aba4 <GetDataSlab+0x18d78>
   3ab30:	ldr	r3, [ip]
   3ab34:	ldr	r1, [r5, #4]!
   3ab38:	add	r3, r3, #1
   3ab3c:	sdiv	r2, r3, r1
   3ab40:	str	r3, [ip]
   3ab44:	mls	r3, r1, r2, r3
   3ab48:	cmp	r3, #0
   3ab4c:	bne	3ab90 <GetDataSlab+0x18d64>
   3ab50:	ldr	r2, [lr], #4
   3ab54:	str	r7, [ip], #4
   3ab58:	sdiv	r3, r4, r2
   3ab5c:	mls	r3, r2, r3, r4
   3ab60:	cmp	r3, #0
   3ab64:	sub	r2, r2, r3
   3ab68:	bne	3ab0c <GetDataSlab+0x18ce0>
   3ab6c:	ldr	r3, [r9, r0, lsl #2]
   3ab70:	cmp	r3, #0
   3ab74:	beq	3ab20 <GetDataSlab+0x18cf4>
   3ab78:	ldr	r2, [lr, #-8]
   3ab7c:	mul	r3, r2, r3
   3ab80:	add	r6, r6, r3, lsl #1
   3ab84:	add	r4, r4, r3
   3ab88:	b	3ab20 <GetDataSlab+0x18cf4>
   3ab8c:	mov	r0, #1
   3ab90:	add	r3, sp, #176	; 0xb0
   3ab94:	add	r3, r3, r0, lsl #2
   3ab98:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ab9c:	add	r6, r6, r3, lsl #1
   3aba0:	add	r4, r4, r3
   3aba4:	ldr	r3, [sp, #20]
   3aba8:	add	r8, r8, r3
   3abac:	ldr	r3, [sp, #16]
   3abb0:	cmp	r8, r3
   3abb4:	blt	3aa6c <GetDataSlab+0x18c40>
   3abb8:	b	30874 <GetDataSlab+0xea48>
   3abbc:	cmp	r3, #0
   3abc0:	ble	30874 <GetDataSlab+0xea48>
   3abc4:	ldr	r3, [sp, #20]
   3abc8:	mov	r8, #0
   3abcc:	mov	r7, r8
   3abd0:	ldr	sl, [r9]
   3abd4:	sub	r3, r3, #1
   3abd8:	str	r3, [sp, #8]
   3abdc:	ldr	r3, [sp, #40]	; 0x28
   3abe0:	sub	fp, r3, sl
   3abe4:	ldr	r3, [sp, #20]
   3abe8:	cmp	sl, #0
   3abec:	addne	r5, r5, sl
   3abf0:	addne	r4, r4, sl
   3abf4:	cmp	r3, #0
   3abf8:	ble	3ac28 <GetDataSlab+0x18dfc>
   3abfc:	ldr	r3, [sp, #4]
   3ac00:	sub	r2, r5, #1
   3ac04:	add	r1, r3, r8, lsl #3
   3ac08:	ldr	r3, [sp, #8]
   3ac0c:	add	r0, r5, r3
   3ac10:	ldrb	r3, [r2, #1]!
   3ac14:	vmov	s15, r3
   3ac18:	cmp	r0, r2
   3ac1c:	vcvt.f64.u32	d7, s15
   3ac20:	vstmia	r1!, {d7}
   3ac24:	bne	3ac10 <GetDataSlab+0x18de4>
   3ac28:	ldr	r3, [sp, #232]	; 0xe8
   3ac2c:	add	r4, r4, fp
   3ac30:	add	r5, r5, fp
   3ac34:	cmp	r3, #1
   3ac38:	ble	3ad10 <GetDataSlab+0x18ee4>
   3ac3c:	ldr	r3, [sp, #100]	; 0x64
   3ac40:	ldr	r2, [sp, #228]	; 0xe4
   3ac44:	add	r3, r3, #1
   3ac48:	ldr	r1, [r2, #4]
   3ac4c:	str	r3, [sp, #100]	; 0x64
   3ac50:	sdiv	r2, r3, r1
   3ac54:	mls	r3, r1, r2, r3
   3ac58:	cmp	r3, #0
   3ac5c:	bne	3acf8 <GetDataSlab+0x18ecc>
   3ac60:	ldr	r3, [sp, #228]	; 0xe4
   3ac64:	add	ip, sp, #100	; 0x64
   3ac68:	add	lr, sp, #140	; 0x8c
   3ac6c:	mov	r0, #1
   3ac70:	add	r6, r3, #4
   3ac74:	b	3acbc <GetDataSlab+0x18e90>
   3ac78:	ldr	r3, [lr, #-8]
   3ac7c:	ldr	r1, [r9, r0, lsl #2]
   3ac80:	mla	r3, r1, r3, r2
   3ac84:	add	r5, r5, r3
   3ac88:	add	r4, r4, r3
   3ac8c:	ldr	r3, [sp, #232]	; 0xe8
   3ac90:	add	r0, r0, #1
   3ac94:	cmp	r3, r0
   3ac98:	beq	3ad10 <GetDataSlab+0x18ee4>
   3ac9c:	ldr	r3, [ip]
   3aca0:	ldr	r1, [r6, #4]!
   3aca4:	add	r3, r3, #1
   3aca8:	sdiv	r2, r3, r1
   3acac:	str	r3, [ip]
   3acb0:	mls	r3, r1, r2, r3
   3acb4:	cmp	r3, #0
   3acb8:	bne	3acfc <GetDataSlab+0x18ed0>
   3acbc:	ldr	r2, [lr], #4
   3acc0:	str	r7, [ip], #4
   3acc4:	sdiv	r3, r4, r2
   3acc8:	mls	r3, r2, r3, r4
   3accc:	cmp	r3, #0
   3acd0:	sub	r2, r2, r3
   3acd4:	bne	3ac78 <GetDataSlab+0x18e4c>
   3acd8:	ldr	r3, [r9, r0, lsl #2]
   3acdc:	cmp	r3, #0
   3ace0:	beq	3ac8c <GetDataSlab+0x18e60>
   3ace4:	ldr	r2, [lr, #-8]
   3ace8:	mul	r3, r2, r3
   3acec:	add	r5, r5, r3
   3acf0:	add	r4, r4, r3
   3acf4:	b	3ac8c <GetDataSlab+0x18e60>
   3acf8:	mov	r0, #1
   3acfc:	add	r3, sp, #176	; 0xb0
   3ad00:	add	r3, r3, r0, lsl #2
   3ad04:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ad08:	add	r4, r4, r3
   3ad0c:	add	r5, r5, r3
   3ad10:	ldr	r3, [sp, #20]
   3ad14:	add	r8, r8, r3
   3ad18:	ldr	r3, [sp, #16]
   3ad1c:	cmp	r8, r3
   3ad20:	blt	3abe4 <GetDataSlab+0x18db8>
   3ad24:	b	30874 <GetDataSlab+0xea48>
   3ad28:	cmp	r3, #0
   3ad2c:	ble	30874 <GetDataSlab+0xea48>
   3ad30:	ldr	r3, [sp, #20]
   3ad34:	mov	r8, #0
   3ad38:	mov	r7, r8
   3ad3c:	ldr	sl, [r9]
   3ad40:	lsl	r3, r3, #1
   3ad44:	str	r3, [sp, #12]
   3ad48:	ldr	r3, [sp, #36]	; 0x24
   3ad4c:	sub	fp, r3, sl
   3ad50:	lsl	r3, sl, #1
   3ad54:	str	r3, [sp, #24]
   3ad58:	lsl	r3, fp, #1
   3ad5c:	str	r3, [sp, #8]
   3ad60:	cmp	sl, #0
   3ad64:	beq	3ad74 <GetDataSlab+0x18f48>
   3ad68:	ldr	r3, [sp, #24]
   3ad6c:	add	r4, r4, sl
   3ad70:	add	r6, r6, r3
   3ad74:	ldr	r3, [sp, #20]
   3ad78:	cmp	r3, #0
   3ad7c:	ble	3adac <GetDataSlab+0x18f80>
   3ad80:	ldr	r3, [sp, #4]
   3ad84:	mov	r2, r6
   3ad88:	add	r1, r3, r8, lsl #3
   3ad8c:	ldr	r3, [sp, #12]
   3ad90:	add	r0, r6, r3
   3ad94:	ldrh	r3, [r2], #2
   3ad98:	vmov	s15, r3
   3ad9c:	cmp	r0, r2
   3ada0:	vcvt.f64.u32	d7, s15
   3ada4:	vstmia	r1!, {d7}
   3ada8:	bne	3ad94 <GetDataSlab+0x18f68>
   3adac:	ldr	r3, [sp, #232]	; 0xe8
   3adb0:	add	r4, r4, fp
   3adb4:	cmp	r3, #1
   3adb8:	ldr	r3, [sp, #8]
   3adbc:	add	r6, r6, r3
   3adc0:	ble	3ae98 <GetDataSlab+0x1906c>
   3adc4:	ldr	r3, [sp, #100]	; 0x64
   3adc8:	ldr	r2, [sp, #228]	; 0xe4
   3adcc:	add	r3, r3, #1
   3add0:	ldr	r1, [r2, #4]
   3add4:	str	r3, [sp, #100]	; 0x64
   3add8:	sdiv	r2, r3, r1
   3addc:	mls	r3, r1, r2, r3
   3ade0:	cmp	r3, #0
   3ade4:	bne	3ae80 <GetDataSlab+0x19054>
   3ade8:	ldr	r3, [sp, #228]	; 0xe4
   3adec:	add	ip, sp, #100	; 0x64
   3adf0:	add	lr, sp, #140	; 0x8c
   3adf4:	mov	r0, #1
   3adf8:	add	r5, r3, #4
   3adfc:	b	3ae44 <GetDataSlab+0x19018>
   3ae00:	ldr	r3, [lr, #-8]
   3ae04:	ldr	r1, [r9, r0, lsl #2]
   3ae08:	mla	r3, r1, r3, r2
   3ae0c:	add	r6, r6, r3, lsl #1
   3ae10:	add	r4, r4, r3
   3ae14:	ldr	r3, [sp, #232]	; 0xe8
   3ae18:	add	r0, r0, #1
   3ae1c:	cmp	r3, r0
   3ae20:	beq	3ae98 <GetDataSlab+0x1906c>
   3ae24:	ldr	r3, [ip]
   3ae28:	ldr	r1, [r5, #4]!
   3ae2c:	add	r3, r3, #1
   3ae30:	sdiv	r2, r3, r1
   3ae34:	str	r3, [ip]
   3ae38:	mls	r3, r1, r2, r3
   3ae3c:	cmp	r3, #0
   3ae40:	bne	3ae84 <GetDataSlab+0x19058>
   3ae44:	ldr	r2, [lr], #4
   3ae48:	str	r7, [ip], #4
   3ae4c:	sdiv	r3, r4, r2
   3ae50:	mls	r3, r2, r3, r4
   3ae54:	cmp	r3, #0
   3ae58:	sub	r2, r2, r3
   3ae5c:	bne	3ae00 <GetDataSlab+0x18fd4>
   3ae60:	ldr	r3, [r9, r0, lsl #2]
   3ae64:	cmp	r3, #0
   3ae68:	beq	3ae14 <GetDataSlab+0x18fe8>
   3ae6c:	ldr	r2, [lr, #-8]
   3ae70:	mul	r3, r2, r3
   3ae74:	add	r6, r6, r3, lsl #1
   3ae78:	add	r4, r4, r3
   3ae7c:	b	3ae14 <GetDataSlab+0x18fe8>
   3ae80:	mov	r0, #1
   3ae84:	add	r3, sp, #176	; 0xb0
   3ae88:	add	r3, r3, r0, lsl #2
   3ae8c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ae90:	add	r6, r6, r3, lsl #1
   3ae94:	add	r4, r4, r3
   3ae98:	ldr	r3, [sp, #20]
   3ae9c:	add	r8, r8, r3
   3aea0:	ldr	r3, [sp, #16]
   3aea4:	cmp	r8, r3
   3aea8:	blt	3ad60 <GetDataSlab+0x18f34>
   3aeac:	b	30874 <GetDataSlab+0xea48>
   3aeb0:	cmp	r3, #0
   3aeb4:	ble	30874 <GetDataSlab+0xea48>
   3aeb8:	ldr	r3, [sp, #20]
   3aebc:	mov	r8, #0
   3aec0:	mov	r7, r8
   3aec4:	ldr	sl, [r9]
   3aec8:	sub	r3, r3, #1
   3aecc:	str	r3, [sp, #8]
   3aed0:	ldr	r3, [sp, #40]	; 0x28
   3aed4:	sub	fp, r3, sl
   3aed8:	ldr	r3, [sp, #20]
   3aedc:	cmp	sl, #0
   3aee0:	addne	r5, r5, sl
   3aee4:	addne	r4, r4, sl
   3aee8:	cmp	r3, #0
   3aeec:	ble	3af18 <GetDataSlab+0x190ec>
   3aef0:	ldr	r3, [sp, #4]
   3aef4:	sub	r1, r5, #1
   3aef8:	add	r0, r3, r8, lsl #3
   3aefc:	ldr	r3, [sp, #8]
   3af00:	add	ip, r5, r3
   3af04:	ldrsb	r2, [r1, #1]!
   3af08:	asr	r3, r2, #31
   3af0c:	cmp	r1, ip
   3af10:	strd	r2, [r0], #8
   3af14:	bne	3af04 <GetDataSlab+0x190d8>
   3af18:	ldr	r3, [sp, #232]	; 0xe8
   3af1c:	add	r4, r4, fp
   3af20:	add	r5, r5, fp
   3af24:	cmp	r3, #1
   3af28:	ble	3b000 <GetDataSlab+0x191d4>
   3af2c:	ldr	r3, [sp, #100]	; 0x64
   3af30:	ldr	r2, [sp, #228]	; 0xe4
   3af34:	add	r3, r3, #1
   3af38:	ldr	r1, [r2, #4]
   3af3c:	str	r3, [sp, #100]	; 0x64
   3af40:	sdiv	r2, r3, r1
   3af44:	mls	r3, r1, r2, r3
   3af48:	cmp	r3, #0
   3af4c:	bne	3afe8 <GetDataSlab+0x191bc>
   3af50:	ldr	r3, [sp, #228]	; 0xe4
   3af54:	add	ip, sp, #100	; 0x64
   3af58:	add	lr, sp, #140	; 0x8c
   3af5c:	mov	r0, #1
   3af60:	add	r6, r3, #4
   3af64:	b	3afac <GetDataSlab+0x19180>
   3af68:	ldr	r3, [lr, #-8]
   3af6c:	ldr	r1, [r9, r0, lsl #2]
   3af70:	mla	r3, r1, r3, r2
   3af74:	add	r5, r5, r3
   3af78:	add	r4, r4, r3
   3af7c:	ldr	r3, [sp, #232]	; 0xe8
   3af80:	add	r0, r0, #1
   3af84:	cmp	r3, r0
   3af88:	beq	3b000 <GetDataSlab+0x191d4>
   3af8c:	ldr	r3, [ip]
   3af90:	ldr	r1, [r6, #4]!
   3af94:	add	r3, r3, #1
   3af98:	sdiv	r2, r3, r1
   3af9c:	str	r3, [ip]
   3afa0:	mls	r3, r1, r2, r3
   3afa4:	cmp	r3, #0
   3afa8:	bne	3afec <GetDataSlab+0x191c0>
   3afac:	ldr	r2, [lr], #4
   3afb0:	str	r7, [ip], #4
   3afb4:	sdiv	r3, r4, r2
   3afb8:	mls	r3, r2, r3, r4
   3afbc:	cmp	r3, #0
   3afc0:	sub	r2, r2, r3
   3afc4:	bne	3af68 <GetDataSlab+0x1913c>
   3afc8:	ldr	r3, [r9, r0, lsl #2]
   3afcc:	cmp	r3, #0
   3afd0:	beq	3af7c <GetDataSlab+0x19150>
   3afd4:	ldr	r2, [lr, #-8]
   3afd8:	mul	r3, r2, r3
   3afdc:	add	r5, r5, r3
   3afe0:	add	r4, r4, r3
   3afe4:	b	3af7c <GetDataSlab+0x19150>
   3afe8:	mov	r0, #1
   3afec:	add	r3, sp, #176	; 0xb0
   3aff0:	add	r3, r3, r0, lsl #2
   3aff4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3aff8:	add	r4, r4, r3
   3affc:	add	r5, r5, r3
   3b000:	ldr	r3, [sp, #20]
   3b004:	add	r8, r8, r3
   3b008:	ldr	r3, [sp, #16]
   3b00c:	cmp	r8, r3
   3b010:	blt	3aed8 <GetDataSlab+0x190ac>
   3b014:	b	30874 <GetDataSlab+0xea48>
   3b018:	cmp	r3, #0
   3b01c:	ble	30874 <GetDataSlab+0xea48>
   3b020:	ldr	r3, [sp, #20]
   3b024:	mov	r8, #0
   3b028:	mov	r7, r8
   3b02c:	ldr	sl, [r9]
   3b030:	lsl	r3, r3, #2
   3b034:	str	r3, [sp, #12]
   3b038:	ldr	r3, [sp, #36]	; 0x24
   3b03c:	sub	fp, r3, sl
   3b040:	lsl	r3, sl, #2
   3b044:	str	r3, [sp, #24]
   3b048:	lsl	r3, fp, #2
   3b04c:	str	r3, [sp, #8]
   3b050:	cmp	sl, #0
   3b054:	beq	3b064 <GetDataSlab+0x19238>
   3b058:	ldr	r3, [sp, #24]
   3b05c:	add	r4, r4, sl
   3b060:	add	r6, r6, r3
   3b064:	ldr	r3, [sp, #20]
   3b068:	cmp	r3, #0
   3b06c:	ble	3b09c <GetDataSlab+0x19270>
   3b070:	ldr	r3, [sp, #4]
   3b074:	mov	r1, r6
   3b078:	add	r0, r3, r8, lsl #3
   3b07c:	ldr	r3, [sp, #12]
   3b080:	add	ip, r6, r3
   3b084:	ldr	r3, [r1], #4
   3b088:	mov	r2, r3
   3b08c:	asr	r3, r3, #31
   3b090:	cmp	r1, ip
   3b094:	strd	r2, [r0], #8
   3b098:	bne	3b084 <GetDataSlab+0x19258>
   3b09c:	ldr	r3, [sp, #232]	; 0xe8
   3b0a0:	add	r4, r4, fp
   3b0a4:	cmp	r3, #1
   3b0a8:	ldr	r3, [sp, #8]
   3b0ac:	add	r6, r6, r3
   3b0b0:	ble	3b188 <GetDataSlab+0x1935c>
   3b0b4:	ldr	r3, [sp, #100]	; 0x64
   3b0b8:	ldr	r2, [sp, #228]	; 0xe4
   3b0bc:	add	r3, r3, #1
   3b0c0:	ldr	r1, [r2, #4]
   3b0c4:	str	r3, [sp, #100]	; 0x64
   3b0c8:	sdiv	r2, r3, r1
   3b0cc:	mls	r3, r1, r2, r3
   3b0d0:	cmp	r3, #0
   3b0d4:	bne	3b170 <GetDataSlab+0x19344>
   3b0d8:	ldr	r3, [sp, #228]	; 0xe4
   3b0dc:	add	ip, sp, #100	; 0x64
   3b0e0:	add	lr, sp, #140	; 0x8c
   3b0e4:	mov	r0, #1
   3b0e8:	add	r5, r3, #4
   3b0ec:	b	3b134 <GetDataSlab+0x19308>
   3b0f0:	ldr	r3, [lr, #-8]
   3b0f4:	ldr	r1, [r9, r0, lsl #2]
   3b0f8:	mla	r3, r1, r3, r2
   3b0fc:	add	r6, r6, r3, lsl #2
   3b100:	add	r4, r4, r3
   3b104:	ldr	r3, [sp, #232]	; 0xe8
   3b108:	add	r0, r0, #1
   3b10c:	cmp	r3, r0
   3b110:	beq	3b188 <GetDataSlab+0x1935c>
   3b114:	ldr	r3, [ip]
   3b118:	ldr	r1, [r5, #4]!
   3b11c:	add	r3, r3, #1
   3b120:	sdiv	r2, r3, r1
   3b124:	str	r3, [ip]
   3b128:	mls	r3, r1, r2, r3
   3b12c:	cmp	r3, #0
   3b130:	bne	3b174 <GetDataSlab+0x19348>
   3b134:	ldr	r2, [lr], #4
   3b138:	str	r7, [ip], #4
   3b13c:	sdiv	r3, r4, r2
   3b140:	mls	r3, r2, r3, r4
   3b144:	cmp	r3, #0
   3b148:	sub	r2, r2, r3
   3b14c:	bne	3b0f0 <GetDataSlab+0x192c4>
   3b150:	ldr	r3, [r9, r0, lsl #2]
   3b154:	cmp	r3, #0
   3b158:	beq	3b104 <GetDataSlab+0x192d8>
   3b15c:	ldr	r2, [lr, #-8]
   3b160:	mul	r3, r2, r3
   3b164:	add	r6, r6, r3, lsl #2
   3b168:	add	r4, r4, r3
   3b16c:	b	3b104 <GetDataSlab+0x192d8>
   3b170:	mov	r0, #1
   3b174:	add	r3, sp, #176	; 0xb0
   3b178:	add	r3, r3, r0, lsl #2
   3b17c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b180:	add	r6, r6, r3, lsl #2
   3b184:	add	r4, r4, r3
   3b188:	ldr	r3, [sp, #20]
   3b18c:	add	r8, r8, r3
   3b190:	ldr	r3, [sp, #16]
   3b194:	cmp	r8, r3
   3b198:	blt	3b050 <GetDataSlab+0x19224>
   3b19c:	b	30874 <GetDataSlab+0xea48>
   3b1a0:	cmp	r3, #0
   3b1a4:	ble	30874 <GetDataSlab+0xea48>
   3b1a8:	ldr	r3, [sp, #20]
   3b1ac:	mov	r8, #0
   3b1b0:	mov	r7, r8
   3b1b4:	ldr	sl, [r9]
   3b1b8:	sub	r3, r3, #1
   3b1bc:	str	r3, [sp, #8]
   3b1c0:	ldr	r3, [sp, #40]	; 0x28
   3b1c4:	sub	fp, r3, sl
   3b1c8:	ldr	r3, [sp, #20]
   3b1cc:	cmp	sl, #0
   3b1d0:	addne	r5, r5, sl
   3b1d4:	addne	r4, r4, sl
   3b1d8:	cmp	r3, #0
   3b1dc:	ble	3b208 <GetDataSlab+0x193dc>
   3b1e0:	ldr	r3, [sp, #4]
   3b1e4:	sub	r1, r5, #1
   3b1e8:	add	r0, r3, r8, lsl #3
   3b1ec:	ldr	r3, [sp, #8]
   3b1f0:	add	ip, r5, r3
   3b1f4:	ldrb	r2, [r1, #1]!
   3b1f8:	mov	r3, #0
   3b1fc:	cmp	r1, ip
   3b200:	strd	r2, [r0], #8
   3b204:	bne	3b1f4 <GetDataSlab+0x193c8>
   3b208:	ldr	r3, [sp, #232]	; 0xe8
   3b20c:	add	r4, r4, fp
   3b210:	add	r5, r5, fp
   3b214:	cmp	r3, #1
   3b218:	ble	3b2f0 <GetDataSlab+0x194c4>
   3b21c:	ldr	r3, [sp, #100]	; 0x64
   3b220:	ldr	r2, [sp, #228]	; 0xe4
   3b224:	add	r3, r3, #1
   3b228:	ldr	r1, [r2, #4]
   3b22c:	str	r3, [sp, #100]	; 0x64
   3b230:	sdiv	r2, r3, r1
   3b234:	mls	r3, r1, r2, r3
   3b238:	cmp	r3, #0
   3b23c:	bne	3b2d8 <GetDataSlab+0x194ac>
   3b240:	ldr	r3, [sp, #228]	; 0xe4
   3b244:	add	ip, sp, #100	; 0x64
   3b248:	add	lr, sp, #140	; 0x8c
   3b24c:	mov	r0, #1
   3b250:	add	r6, r3, #4
   3b254:	b	3b29c <GetDataSlab+0x19470>
   3b258:	ldr	r3, [lr, #-8]
   3b25c:	ldr	r1, [r9, r0, lsl #2]
   3b260:	mla	r3, r1, r3, r2
   3b264:	add	r5, r5, r3
   3b268:	add	r4, r4, r3
   3b26c:	ldr	r3, [sp, #232]	; 0xe8
   3b270:	add	r0, r0, #1
   3b274:	cmp	r3, r0
   3b278:	beq	3b2f0 <GetDataSlab+0x194c4>
   3b27c:	ldr	r3, [ip]
   3b280:	ldr	r1, [r6, #4]!
   3b284:	add	r3, r3, #1
   3b288:	sdiv	r2, r3, r1
   3b28c:	str	r3, [ip]
   3b290:	mls	r3, r1, r2, r3
   3b294:	cmp	r3, #0
   3b298:	bne	3b2dc <GetDataSlab+0x194b0>
   3b29c:	ldr	r2, [lr], #4
   3b2a0:	str	r7, [ip], #4
   3b2a4:	sdiv	r3, r4, r2
   3b2a8:	mls	r3, r2, r3, r4
   3b2ac:	cmp	r3, #0
   3b2b0:	sub	r2, r2, r3
   3b2b4:	bne	3b258 <GetDataSlab+0x1942c>
   3b2b8:	ldr	r3, [r9, r0, lsl #2]
   3b2bc:	cmp	r3, #0
   3b2c0:	beq	3b26c <GetDataSlab+0x19440>
   3b2c4:	ldr	r2, [lr, #-8]
   3b2c8:	mul	r3, r2, r3
   3b2cc:	add	r5, r5, r3
   3b2d0:	add	r4, r4, r3
   3b2d4:	b	3b26c <GetDataSlab+0x19440>
   3b2d8:	mov	r0, #1
   3b2dc:	add	r3, sp, #176	; 0xb0
   3b2e0:	add	r3, r3, r0, lsl #2
   3b2e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b2e8:	add	r4, r4, r3
   3b2ec:	add	r5, r5, r3
   3b2f0:	ldr	r3, [sp, #20]
   3b2f4:	add	r8, r8, r3
   3b2f8:	ldr	r3, [sp, #16]
   3b2fc:	cmp	r8, r3
   3b300:	blt	3b1c8 <GetDataSlab+0x1939c>
   3b304:	b	30874 <GetDataSlab+0xea48>
   3b308:	cmp	r3, #0
   3b30c:	ble	30874 <GetDataSlab+0xea48>
   3b310:	ldr	r3, [sp, #20]
   3b314:	mov	r8, #0
   3b318:	mov	r7, r8
   3b31c:	ldr	sl, [r9]
   3b320:	lsl	r3, r3, #1
   3b324:	str	r3, [sp, #12]
   3b328:	ldr	r3, [sp, #36]	; 0x24
   3b32c:	sub	fp, r3, sl
   3b330:	lsl	r3, sl, #1
   3b334:	str	r3, [sp, #24]
   3b338:	lsl	r3, fp, #1
   3b33c:	str	r3, [sp, #8]
   3b340:	cmp	sl, #0
   3b344:	beq	3b354 <GetDataSlab+0x19528>
   3b348:	ldr	r3, [sp, #24]
   3b34c:	add	r4, r4, sl
   3b350:	add	r6, r6, r3
   3b354:	ldr	r3, [sp, #20]
   3b358:	cmp	r3, #0
   3b35c:	ble	3b388 <GetDataSlab+0x1955c>
   3b360:	ldr	r3, [sp, #4]
   3b364:	mov	r1, r6
   3b368:	add	r0, r3, r8, lsl #3
   3b36c:	ldr	r3, [sp, #12]
   3b370:	add	ip, r6, r3
   3b374:	ldrh	r2, [r1], #2
   3b378:	mov	r3, #0
   3b37c:	cmp	r1, ip
   3b380:	strd	r2, [r0], #8
   3b384:	bne	3b374 <GetDataSlab+0x19548>
   3b388:	ldr	r3, [sp, #232]	; 0xe8
   3b38c:	add	r4, r4, fp
   3b390:	cmp	r3, #1
   3b394:	ldr	r3, [sp, #8]
   3b398:	add	r6, r6, r3
   3b39c:	ble	3b474 <GetDataSlab+0x19648>
   3b3a0:	ldr	r3, [sp, #100]	; 0x64
   3b3a4:	ldr	r2, [sp, #228]	; 0xe4
   3b3a8:	add	r3, r3, #1
   3b3ac:	ldr	r1, [r2, #4]
   3b3b0:	str	r3, [sp, #100]	; 0x64
   3b3b4:	sdiv	r2, r3, r1
   3b3b8:	mls	r3, r1, r2, r3
   3b3bc:	cmp	r3, #0
   3b3c0:	bne	3b45c <GetDataSlab+0x19630>
   3b3c4:	ldr	r3, [sp, #228]	; 0xe4
   3b3c8:	add	ip, sp, #100	; 0x64
   3b3cc:	add	lr, sp, #140	; 0x8c
   3b3d0:	mov	r0, #1
   3b3d4:	add	r5, r3, #4
   3b3d8:	b	3b420 <GetDataSlab+0x195f4>
   3b3dc:	ldr	r3, [lr, #-8]
   3b3e0:	ldr	r1, [r9, r0, lsl #2]
   3b3e4:	mla	r3, r1, r3, r2
   3b3e8:	add	r6, r6, r3, lsl #1
   3b3ec:	add	r4, r4, r3
   3b3f0:	ldr	r3, [sp, #232]	; 0xe8
   3b3f4:	add	r0, r0, #1
   3b3f8:	cmp	r3, r0
   3b3fc:	beq	3b474 <GetDataSlab+0x19648>
   3b400:	ldr	r3, [ip]
   3b404:	ldr	r1, [r5, #4]!
   3b408:	add	r3, r3, #1
   3b40c:	sdiv	r2, r3, r1
   3b410:	str	r3, [ip]
   3b414:	mls	r3, r1, r2, r3
   3b418:	cmp	r3, #0
   3b41c:	bne	3b460 <GetDataSlab+0x19634>
   3b420:	ldr	r2, [lr], #4
   3b424:	str	r7, [ip], #4
   3b428:	sdiv	r3, r4, r2
   3b42c:	mls	r3, r2, r3, r4
   3b430:	cmp	r3, #0
   3b434:	sub	r2, r2, r3
   3b438:	bne	3b3dc <GetDataSlab+0x195b0>
   3b43c:	ldr	r3, [r9, r0, lsl #2]
   3b440:	cmp	r3, #0
   3b444:	beq	3b3f0 <GetDataSlab+0x195c4>
   3b448:	ldr	r2, [lr, #-8]
   3b44c:	mul	r3, r2, r3
   3b450:	add	r6, r6, r3, lsl #1
   3b454:	add	r4, r4, r3
   3b458:	b	3b3f0 <GetDataSlab+0x195c4>
   3b45c:	mov	r0, #1
   3b460:	add	r3, sp, #176	; 0xb0
   3b464:	add	r3, r3, r0, lsl #2
   3b468:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b46c:	add	r6, r6, r3, lsl #1
   3b470:	add	r4, r4, r3
   3b474:	ldr	r3, [sp, #20]
   3b478:	add	r8, r8, r3
   3b47c:	ldr	r3, [sp, #16]
   3b480:	cmp	r8, r3
   3b484:	blt	3b340 <GetDataSlab+0x19514>
   3b488:	b	30874 <GetDataSlab+0xea48>
   3b48c:	cmp	r3, #0
   3b490:	ble	30874 <GetDataSlab+0xea48>
   3b494:	ldr	r3, [r9]
   3b498:	mov	sl, #0
   3b49c:	mov	r7, sl
   3b4a0:	str	r3, [sp, #8]
   3b4a4:	ldr	r3, [sp, #8]
   3b4a8:	cmp	r3, #0
   3b4ac:	addne	r5, r5, r3
   3b4b0:	addne	lr, lr, r3
   3b4b4:	cmp	fp, #0
   3b4b8:	ble	3b4fc <GetDataSlab+0x196d0>
   3b4bc:	ldr	r3, [sp, #4]
   3b4c0:	add	r2, r3, sl, lsl #2
   3b4c4:	sub	r3, r5, #1
   3b4c8:	ldrsb	r0, [r3, #1]
   3b4cc:	add	r1, r3, #2
   3b4d0:	add	r3, r3, #1
   3b4d4:	sub	r1, r1, r5
   3b4d8:	str	r0, [r2], #4
   3b4dc:	ldr	r0, [sp, #228]	; 0xe4
   3b4e0:	ldr	fp, [r0]
   3b4e4:	cmp	fp, r1
   3b4e8:	bgt	3b4c8 <GetDataSlab+0x1969c>
   3b4ec:	ldr	r3, [r9]
   3b4f0:	str	r3, [sp, #8]
   3b4f4:	ldr	r3, [r8]
   3b4f8:	str	r3, [sp, #16]
   3b4fc:	ldr	r2, [sp, #8]
   3b500:	ldr	r3, [sp, #232]	; 0xe8
   3b504:	cmp	r3, #1
   3b508:	ldr	r3, [sp, #16]
   3b50c:	sub	r3, r3, r2
   3b510:	add	lr, lr, r3
   3b514:	add	r5, r5, r3
   3b518:	ble	3b5f0 <GetDataSlab+0x197c4>
   3b51c:	ldr	r3, [sp, #100]	; 0x64
   3b520:	ldr	r2, [sp, #228]	; 0xe4
   3b524:	add	r3, r3, #1
   3b528:	ldr	r1, [r2, #4]
   3b52c:	str	r3, [sp, #100]	; 0x64
   3b530:	sdiv	r2, r3, r1
   3b534:	mls	r3, r1, r2, r3
   3b538:	cmp	r3, #0
   3b53c:	bne	3b5d8 <GetDataSlab+0x197ac>
   3b540:	ldr	r3, [sp, #228]	; 0xe4
   3b544:	add	ip, sp, #100	; 0x64
   3b548:	add	r4, sp, #140	; 0x8c
   3b54c:	mov	r0, #1
   3b550:	add	r6, r3, #4
   3b554:	b	3b59c <GetDataSlab+0x19770>
   3b558:	ldr	r3, [r4, #-8]
   3b55c:	ldr	r1, [r9, r0, lsl #2]
   3b560:	mla	r3, r1, r3, r2
   3b564:	add	r5, r5, r3
   3b568:	add	lr, lr, r3
   3b56c:	ldr	r3, [sp, #232]	; 0xe8
   3b570:	add	r0, r0, #1
   3b574:	cmp	r3, r0
   3b578:	beq	3b5f0 <GetDataSlab+0x197c4>
   3b57c:	ldr	r3, [ip]
   3b580:	ldr	r1, [r6, #4]!
   3b584:	add	r3, r3, #1
   3b588:	sdiv	r2, r3, r1
   3b58c:	str	r3, [ip]
   3b590:	mls	r3, r1, r2, r3
   3b594:	cmp	r3, #0
   3b598:	bne	3b5dc <GetDataSlab+0x197b0>
   3b59c:	ldr	r2, [r4], #4
   3b5a0:	str	r7, [ip], #4
   3b5a4:	sdiv	r3, lr, r2
   3b5a8:	mls	r3, r2, r3, lr
   3b5ac:	cmp	r3, #0
   3b5b0:	sub	r2, r2, r3
   3b5b4:	bne	3b558 <GetDataSlab+0x1972c>
   3b5b8:	ldr	r3, [r9, r0, lsl #2]
   3b5bc:	cmp	r3, #0
   3b5c0:	beq	3b56c <GetDataSlab+0x19740>
   3b5c4:	ldr	r2, [r4, #-8]
   3b5c8:	mul	r3, r2, r3
   3b5cc:	add	r5, r5, r3
   3b5d0:	add	lr, lr, r3
   3b5d4:	b	3b56c <GetDataSlab+0x19740>
   3b5d8:	mov	r0, #1
   3b5dc:	add	r3, sp, #176	; 0xb0
   3b5e0:	add	r3, r3, r0, lsl #2
   3b5e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b5e8:	add	lr, lr, r3
   3b5ec:	add	r5, r5, r3
   3b5f0:	ldr	r3, [sp, #20]
   3b5f4:	add	sl, sl, fp
   3b5f8:	cmp	sl, r3
   3b5fc:	blt	3b4a4 <GetDataSlab+0x19678>
   3b600:	b	30874 <GetDataSlab+0xea48>
   3b604:	cmp	r3, #0
   3b608:	ble	30874 <GetDataSlab+0xea48>
   3b60c:	ldr	r3, [r9]
   3b610:	mov	sl, #0
   3b614:	mov	r7, sl
   3b618:	str	r3, [sp, #8]
   3b61c:	ldr	r3, [sp, #8]
   3b620:	cmp	r3, #0
   3b624:	addne	r5, r5, r3, lsl #2
   3b628:	addne	lr, lr, r3
   3b62c:	cmp	fp, #0
   3b630:	ble	3b670 <GetDataSlab+0x19844>
   3b634:	ldr	r3, [sp, #4]
   3b638:	sub	r1, r5, #4
   3b63c:	add	r2, r3, sl, lsl #2
   3b640:	mov	r3, #0
   3b644:	ldr	r0, [r1, #4]!
   3b648:	add	r3, r3, #1
   3b64c:	str	r0, [r2], #4
   3b650:	ldr	r0, [sp, #228]	; 0xe4
   3b654:	ldr	fp, [r0]
   3b658:	cmp	fp, r3
   3b65c:	bgt	3b644 <GetDataSlab+0x19818>
   3b660:	ldr	r3, [r9]
   3b664:	str	r3, [sp, #8]
   3b668:	ldr	r3, [r8]
   3b66c:	str	r3, [sp, #16]
   3b670:	ldr	r2, [sp, #8]
   3b674:	ldr	r3, [sp, #232]	; 0xe8
   3b678:	cmp	r3, #1
   3b67c:	ldr	r3, [sp, #16]
   3b680:	sub	r3, r3, r2
   3b684:	add	lr, lr, r3
   3b688:	add	r5, r5, r3, lsl #2
   3b68c:	ble	3b764 <GetDataSlab+0x19938>
   3b690:	ldr	r3, [sp, #100]	; 0x64
   3b694:	ldr	r2, [sp, #228]	; 0xe4
   3b698:	add	r3, r3, #1
   3b69c:	ldr	r1, [r2, #4]
   3b6a0:	str	r3, [sp, #100]	; 0x64
   3b6a4:	sdiv	r2, r3, r1
   3b6a8:	mls	r3, r1, r2, r3
   3b6ac:	cmp	r3, #0
   3b6b0:	bne	3b74c <GetDataSlab+0x19920>
   3b6b4:	ldr	r3, [sp, #228]	; 0xe4
   3b6b8:	add	ip, sp, #100	; 0x64
   3b6bc:	add	r4, sp, #140	; 0x8c
   3b6c0:	mov	r0, #1
   3b6c4:	add	r6, r3, #4
   3b6c8:	b	3b710 <GetDataSlab+0x198e4>
   3b6cc:	ldr	r3, [r4, #-8]
   3b6d0:	ldr	r1, [r9, r0, lsl #2]
   3b6d4:	mla	r3, r1, r3, r2
   3b6d8:	add	r5, r5, r3, lsl #2
   3b6dc:	add	lr, lr, r3
   3b6e0:	ldr	r3, [sp, #232]	; 0xe8
   3b6e4:	add	r0, r0, #1
   3b6e8:	cmp	r3, r0
   3b6ec:	beq	3b764 <GetDataSlab+0x19938>
   3b6f0:	ldr	r3, [ip]
   3b6f4:	ldr	r1, [r6, #4]!
   3b6f8:	add	r3, r3, #1
   3b6fc:	sdiv	r2, r3, r1
   3b700:	str	r3, [ip]
   3b704:	mls	r3, r1, r2, r3
   3b708:	cmp	r3, #0
   3b70c:	bne	3b750 <GetDataSlab+0x19924>
   3b710:	ldr	r2, [r4], #4
   3b714:	str	r7, [ip], #4
   3b718:	sdiv	r3, lr, r2
   3b71c:	mls	r3, r2, r3, lr
   3b720:	cmp	r3, #0
   3b724:	sub	r2, r2, r3
   3b728:	bne	3b6cc <GetDataSlab+0x198a0>
   3b72c:	ldr	r3, [r9, r0, lsl #2]
   3b730:	cmp	r3, #0
   3b734:	beq	3b6e0 <GetDataSlab+0x198b4>
   3b738:	ldr	r2, [r4, #-8]
   3b73c:	mul	r3, r2, r3
   3b740:	add	r5, r5, r3, lsl #2
   3b744:	add	lr, lr, r3
   3b748:	b	3b6e0 <GetDataSlab+0x198b4>
   3b74c:	mov	r0, #1
   3b750:	add	r3, sp, #176	; 0xb0
   3b754:	add	r3, r3, r0, lsl #2
   3b758:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b75c:	add	r5, r5, r3, lsl #2
   3b760:	add	lr, lr, r3
   3b764:	ldr	r3, [sp, #20]
   3b768:	add	sl, sl, fp
   3b76c:	cmp	sl, r3
   3b770:	blt	3b61c <GetDataSlab+0x197f0>
   3b774:	b	30874 <GetDataSlab+0xea48>
   3b778:	cmp	r3, #0
   3b77c:	ble	30874 <GetDataSlab+0xea48>
   3b780:	ldr	r3, [r9]
   3b784:	mov	fp, #0
   3b788:	mov	sl, fp
   3b78c:	str	r3, [sp, #8]
   3b790:	ldr	r2, [sp, #8]
   3b794:	ldr	r3, [sp, #20]
   3b798:	lsl	r3, r3, #2
   3b79c:	str	r3, [sp, #28]
   3b7a0:	ldr	r3, [sp, #40]	; 0x28
   3b7a4:	sub	r3, r3, r2
   3b7a8:	str	r3, [sp, #12]
   3b7ac:	lsl	r3, r2, #2
   3b7b0:	str	r3, [sp, #32]
   3b7b4:	ldr	r3, [sp, #12]
   3b7b8:	lsl	r3, r3, #2
   3b7bc:	str	r3, [sp, #24]
   3b7c0:	ldr	r3, [sp, #8]
   3b7c4:	cmp	r3, #0
   3b7c8:	beq	3b7dc <GetDataSlab+0x199b0>
   3b7cc:	ldr	r3, [sp, #32]
   3b7d0:	add	r8, r8, r3
   3b7d4:	ldr	r3, [sp, #8]
   3b7d8:	add	r7, r7, r3
   3b7dc:	ldr	r3, [sp, #20]
   3b7e0:	cmp	r3, #0
   3b7e4:	ble	3b810 <GetDataSlab+0x199e4>
   3b7e8:	ldr	r3, [sp, #4]
   3b7ec:	mov	r4, r8
   3b7f0:	add	r5, r3, fp, lsl #3
   3b7f4:	ldr	r3, [sp, #28]
   3b7f8:	add	r6, r8, r3
   3b7fc:	ldr	r0, [r4], #4
   3b800:	bl	4e394 <__aeabi_f2lz>
   3b804:	strd	r0, [r5], #8
   3b808:	cmp	r4, r6
   3b80c:	bne	3b7fc <GetDataSlab+0x199d0>
   3b810:	ldr	r3, [sp, #232]	; 0xe8
   3b814:	cmp	r3, #1
   3b818:	ldr	r3, [sp, #12]
   3b81c:	add	r7, r7, r3
   3b820:	ldr	r3, [sp, #24]
   3b824:	add	r8, r8, r3
   3b828:	ble	3b900 <GetDataSlab+0x19ad4>
   3b82c:	ldr	r3, [sp, #100]	; 0x64
   3b830:	ldr	r2, [sp, #228]	; 0xe4
   3b834:	add	r3, r3, #1
   3b838:	ldr	r1, [r2, #4]
   3b83c:	str	r3, [sp, #100]	; 0x64
   3b840:	sdiv	r2, r3, r1
   3b844:	mls	r3, r1, r2, r3
   3b848:	cmp	r3, #0
   3b84c:	bne	3b8e8 <GetDataSlab+0x19abc>
   3b850:	ldr	r3, [sp, #228]	; 0xe4
   3b854:	add	ip, sp, #100	; 0x64
   3b858:	add	lr, sp, #140	; 0x8c
   3b85c:	mov	r0, #1
   3b860:	add	r4, r3, #4
   3b864:	b	3b8ac <GetDataSlab+0x19a80>
   3b868:	ldr	r3, [lr, #-8]
   3b86c:	ldr	r1, [r9, r0, lsl #2]
   3b870:	mla	r3, r1, r3, r2
   3b874:	add	r8, r8, r3, lsl #2
   3b878:	add	r7, r7, r3
   3b87c:	ldr	r3, [sp, #232]	; 0xe8
   3b880:	add	r0, r0, #1
   3b884:	cmp	r3, r0
   3b888:	beq	3b900 <GetDataSlab+0x19ad4>
   3b88c:	ldr	r3, [ip]
   3b890:	ldr	r1, [r4, #4]!
   3b894:	add	r3, r3, #1
   3b898:	sdiv	r2, r3, r1
   3b89c:	str	r3, [ip]
   3b8a0:	mls	r3, r1, r2, r3
   3b8a4:	cmp	r3, #0
   3b8a8:	bne	3b8ec <GetDataSlab+0x19ac0>
   3b8ac:	ldr	r2, [lr], #4
   3b8b0:	str	sl, [ip], #4
   3b8b4:	sdiv	r3, r7, r2
   3b8b8:	mls	r3, r2, r3, r7
   3b8bc:	cmp	r3, #0
   3b8c0:	sub	r2, r2, r3
   3b8c4:	bne	3b868 <GetDataSlab+0x19a3c>
   3b8c8:	ldr	r3, [r9, r0, lsl #2]
   3b8cc:	cmp	r3, #0
   3b8d0:	beq	3b87c <GetDataSlab+0x19a50>
   3b8d4:	ldr	r2, [lr, #-8]
   3b8d8:	mul	r3, r2, r3
   3b8dc:	add	r8, r8, r3, lsl #2
   3b8e0:	add	r7, r7, r3
   3b8e4:	b	3b87c <GetDataSlab+0x19a50>
   3b8e8:	mov	r0, #1
   3b8ec:	add	r3, sp, #176	; 0xb0
   3b8f0:	add	r3, r3, r0, lsl #2
   3b8f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3b8f8:	add	r8, r8, r3, lsl #2
   3b8fc:	add	r7, r7, r3
   3b900:	ldr	r3, [sp, #20]
   3b904:	add	fp, fp, r3
   3b908:	ldr	r3, [sp, #16]
   3b90c:	cmp	fp, r3
   3b910:	blt	3b7c0 <GetDataSlab+0x19994>
   3b914:	b	30874 <GetDataSlab+0xea48>
   3b918:	cmp	r3, #0
   3b91c:	ble	30874 <GetDataSlab+0xea48>
   3b920:	ldr	r3, [r9]
   3b924:	mov	sl, #0
   3b928:	mov	r7, sl
   3b92c:	str	r3, [sp, #8]
   3b930:	ldr	r3, [sp, #8]
   3b934:	cmp	r3, #0
   3b938:	addne	r5, r5, r3, lsl #1
   3b93c:	addne	r4, r4, r3
   3b940:	cmp	fp, #0
   3b944:	ble	3b984 <GetDataSlab+0x19b58>
   3b948:	ldr	r3, [sp, #4]
   3b94c:	sub	r1, r5, #2
   3b950:	add	r0, r3, sl
   3b954:	mov	r3, r0
   3b958:	ldrh	r2, [r1, #2]!
   3b95c:	ldr	ip, [sp, #228]	; 0xe4
   3b960:	strb	r2, [r3], #1
   3b964:	sub	r2, r3, r0
   3b968:	ldr	fp, [ip]
   3b96c:	cmp	r2, fp
   3b970:	blt	3b958 <GetDataSlab+0x19b2c>
   3b974:	ldr	r3, [r9]
   3b978:	str	r3, [sp, #8]
   3b97c:	ldr	r3, [r8]
   3b980:	str	r3, [sp, #16]
   3b984:	ldr	r2, [sp, #8]
   3b988:	ldr	r3, [sp, #232]	; 0xe8
   3b98c:	cmp	r3, #1
   3b990:	ldr	r3, [sp, #16]
   3b994:	sub	r3, r3, r2
   3b998:	add	r4, r4, r3
   3b99c:	add	r5, r5, r3, lsl #1
   3b9a0:	ble	3ba78 <GetDataSlab+0x19c4c>
   3b9a4:	ldr	r3, [sp, #100]	; 0x64
   3b9a8:	ldr	r2, [sp, #228]	; 0xe4
   3b9ac:	add	r3, r3, #1
   3b9b0:	ldr	r1, [r2, #4]
   3b9b4:	str	r3, [sp, #100]	; 0x64
   3b9b8:	sdiv	r2, r3, r1
   3b9bc:	mls	r3, r1, r2, r3
   3b9c0:	cmp	r3, #0
   3b9c4:	bne	3ba60 <GetDataSlab+0x19c34>
   3b9c8:	ldr	r3, [sp, #228]	; 0xe4
   3b9cc:	add	ip, sp, #100	; 0x64
   3b9d0:	add	lr, sp, #140	; 0x8c
   3b9d4:	mov	r0, #1
   3b9d8:	add	r6, r3, #4
   3b9dc:	b	3ba24 <GetDataSlab+0x19bf8>
   3b9e0:	ldr	r3, [lr, #-8]
   3b9e4:	ldr	r1, [r9, r0, lsl #2]
   3b9e8:	mla	r3, r1, r3, r2
   3b9ec:	add	r5, r5, r3, lsl #1
   3b9f0:	add	r4, r4, r3
   3b9f4:	ldr	r3, [sp, #232]	; 0xe8
   3b9f8:	add	r0, r0, #1
   3b9fc:	cmp	r3, r0
   3ba00:	beq	3ba78 <GetDataSlab+0x19c4c>
   3ba04:	ldr	r3, [ip]
   3ba08:	ldr	r1, [r6, #4]!
   3ba0c:	add	r3, r3, #1
   3ba10:	sdiv	r2, r3, r1
   3ba14:	str	r3, [ip]
   3ba18:	mls	r3, r1, r2, r3
   3ba1c:	cmp	r3, #0
   3ba20:	bne	3ba64 <GetDataSlab+0x19c38>
   3ba24:	ldr	r2, [lr], #4
   3ba28:	str	r7, [ip], #4
   3ba2c:	sdiv	r3, r4, r2
   3ba30:	mls	r3, r2, r3, r4
   3ba34:	cmp	r3, #0
   3ba38:	sub	r2, r2, r3
   3ba3c:	bne	3b9e0 <GetDataSlab+0x19bb4>
   3ba40:	ldr	r3, [r9, r0, lsl #2]
   3ba44:	cmp	r3, #0
   3ba48:	beq	3b9f4 <GetDataSlab+0x19bc8>
   3ba4c:	ldr	r2, [lr, #-8]
   3ba50:	mul	r3, r2, r3
   3ba54:	add	r5, r5, r3, lsl #1
   3ba58:	add	r4, r4, r3
   3ba5c:	b	3b9f4 <GetDataSlab+0x19bc8>
   3ba60:	mov	r0, #1
   3ba64:	add	r3, sp, #176	; 0xb0
   3ba68:	add	r3, r3, r0, lsl #2
   3ba6c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ba70:	add	r5, r5, r3, lsl #1
   3ba74:	add	r4, r4, r3
   3ba78:	ldr	r3, [sp, #20]
   3ba7c:	add	sl, sl, fp
   3ba80:	cmp	sl, r3
   3ba84:	blt	3b930 <GetDataSlab+0x19b04>
   3ba88:	b	30874 <GetDataSlab+0xea48>
   3ba8c:	cmp	r3, #0
   3ba90:	ble	30874 <GetDataSlab+0xea48>
   3ba94:	ldr	r3, [r9]
   3ba98:	mov	fp, #0
   3ba9c:	mov	sl, fp
   3baa0:	str	r3, [sp, #8]
   3baa4:	ldr	r2, [sp, #8]
   3baa8:	ldr	r3, [sp, #20]
   3baac:	lsl	r3, r3, #3
   3bab0:	str	r3, [sp, #28]
   3bab4:	ldr	r3, [sp, #40]	; 0x28
   3bab8:	sub	r3, r3, r2
   3babc:	str	r3, [sp, #12]
   3bac0:	lsl	r3, r2, #3
   3bac4:	str	r3, [sp, #32]
   3bac8:	ldr	r3, [sp, #12]
   3bacc:	lsl	r3, r3, #3
   3bad0:	str	r3, [sp, #24]
   3bad4:	ldr	r3, [sp, #8]
   3bad8:	cmp	r3, #0
   3badc:	beq	3baf0 <GetDataSlab+0x19cc4>
   3bae0:	ldr	r3, [sp, #32]
   3bae4:	add	r8, r8, r3
   3bae8:	ldr	r3, [sp, #8]
   3baec:	add	r7, r7, r3
   3baf0:	ldr	r3, [sp, #20]
   3baf4:	cmp	r3, #0
   3baf8:	ble	3bb24 <GetDataSlab+0x19cf8>
   3bafc:	ldr	r3, [sp, #4]
   3bb00:	mov	r4, r8
   3bb04:	add	r5, r3, fp, lsl #3
   3bb08:	ldr	r3, [sp, #28]
   3bb0c:	add	r6, r8, r3
   3bb10:	ldrd	r0, [r4], #8
   3bb14:	bl	4e3c0 <__aeabi_d2lz>
   3bb18:	strd	r0, [r5], #8
   3bb1c:	cmp	r4, r6
   3bb20:	bne	3bb10 <GetDataSlab+0x19ce4>
   3bb24:	ldr	r3, [sp, #232]	; 0xe8
   3bb28:	cmp	r3, #1
   3bb2c:	ldr	r3, [sp, #12]
   3bb30:	add	r7, r7, r3
   3bb34:	ldr	r3, [sp, #24]
   3bb38:	add	r8, r8, r3
   3bb3c:	ble	3bc14 <GetDataSlab+0x19de8>
   3bb40:	ldr	r3, [sp, #100]	; 0x64
   3bb44:	ldr	r2, [sp, #228]	; 0xe4
   3bb48:	add	r3, r3, #1
   3bb4c:	ldr	r1, [r2, #4]
   3bb50:	str	r3, [sp, #100]	; 0x64
   3bb54:	sdiv	r2, r3, r1
   3bb58:	mls	r3, r1, r2, r3
   3bb5c:	cmp	r3, #0
   3bb60:	bne	3bbfc <GetDataSlab+0x19dd0>
   3bb64:	ldr	r3, [sp, #228]	; 0xe4
   3bb68:	add	ip, sp, #100	; 0x64
   3bb6c:	add	lr, sp, #140	; 0x8c
   3bb70:	mov	r0, #1
   3bb74:	add	r4, r3, #4
   3bb78:	b	3bbc0 <GetDataSlab+0x19d94>
   3bb7c:	ldr	r3, [lr, #-8]
   3bb80:	ldr	r1, [r9, r0, lsl #2]
   3bb84:	mla	r3, r1, r3, r2
   3bb88:	add	r8, r8, r3, lsl #3
   3bb8c:	add	r7, r7, r3
   3bb90:	ldr	r3, [sp, #232]	; 0xe8
   3bb94:	add	r0, r0, #1
   3bb98:	cmp	r3, r0
   3bb9c:	beq	3bc14 <GetDataSlab+0x19de8>
   3bba0:	ldr	r3, [ip]
   3bba4:	ldr	r1, [r4, #4]!
   3bba8:	add	r3, r3, #1
   3bbac:	sdiv	r2, r3, r1
   3bbb0:	str	r3, [ip]
   3bbb4:	mls	r3, r1, r2, r3
   3bbb8:	cmp	r3, #0
   3bbbc:	bne	3bc00 <GetDataSlab+0x19dd4>
   3bbc0:	ldr	r2, [lr], #4
   3bbc4:	str	sl, [ip], #4
   3bbc8:	sdiv	r3, r7, r2
   3bbcc:	mls	r3, r2, r3, r7
   3bbd0:	cmp	r3, #0
   3bbd4:	sub	r2, r2, r3
   3bbd8:	bne	3bb7c <GetDataSlab+0x19d50>
   3bbdc:	ldr	r3, [r9, r0, lsl #2]
   3bbe0:	cmp	r3, #0
   3bbe4:	beq	3bb90 <GetDataSlab+0x19d64>
   3bbe8:	ldr	r2, [lr, #-8]
   3bbec:	mul	r3, r2, r3
   3bbf0:	add	r8, r8, r3, lsl #3
   3bbf4:	add	r7, r7, r3
   3bbf8:	b	3bb90 <GetDataSlab+0x19d64>
   3bbfc:	mov	r0, #1
   3bc00:	add	r3, sp, #176	; 0xb0
   3bc04:	add	r3, r3, r0, lsl #2
   3bc08:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bc0c:	add	r8, r8, r3, lsl #3
   3bc10:	add	r7, r7, r3
   3bc14:	ldr	r3, [sp, #20]
   3bc18:	add	fp, fp, r3
   3bc1c:	ldr	r3, [sp, #16]
   3bc20:	cmp	fp, r3
   3bc24:	blt	3bad4 <GetDataSlab+0x19ca8>
   3bc28:	b	30874 <GetDataSlab+0xea48>
   3bc2c:	cmp	r3, #0
   3bc30:	ble	30874 <GetDataSlab+0xea48>
   3bc34:	ldr	r3, [r9]
   3bc38:	mov	sl, #0
   3bc3c:	mov	r7, sl
   3bc40:	str	r3, [sp, #8]
   3bc44:	ldr	r3, [sp, #8]
   3bc48:	cmp	r3, #0
   3bc4c:	addne	r5, r5, r3
   3bc50:	addne	lr, lr, r3
   3bc54:	cmp	fp, #0
   3bc58:	ble	3bca0 <GetDataSlab+0x19e74>
   3bc5c:	ldr	r1, [sp, #4]
   3bc60:	sub	r2, sl, #1
   3bc64:	sub	r3, r5, #1
   3bc68:	add	r2, r1, r2
   3bc6c:	ldrb	r0, [r3, #1]
   3bc70:	add	r1, r3, #2
   3bc74:	add	r3, r3, #1
   3bc78:	sub	r1, r1, r5
   3bc7c:	strb	r0, [r2, #1]!
   3bc80:	ldr	r0, [sp, #228]	; 0xe4
   3bc84:	ldr	fp, [r0]
   3bc88:	cmp	r1, fp
   3bc8c:	blt	3bc6c <GetDataSlab+0x19e40>
   3bc90:	ldr	r3, [r9]
   3bc94:	str	r3, [sp, #8]
   3bc98:	ldr	r3, [r8]
   3bc9c:	str	r3, [sp, #16]
   3bca0:	ldr	r2, [sp, #8]
   3bca4:	ldr	r3, [sp, #232]	; 0xe8
   3bca8:	cmp	r3, #1
   3bcac:	ldr	r3, [sp, #16]
   3bcb0:	sub	r3, r3, r2
   3bcb4:	add	lr, lr, r3
   3bcb8:	add	r5, r5, r3
   3bcbc:	ble	3bd94 <GetDataSlab+0x19f68>
   3bcc0:	ldr	r3, [sp, #100]	; 0x64
   3bcc4:	ldr	r2, [sp, #228]	; 0xe4
   3bcc8:	add	r3, r3, #1
   3bccc:	ldr	r1, [r2, #4]
   3bcd0:	str	r3, [sp, #100]	; 0x64
   3bcd4:	sdiv	r2, r3, r1
   3bcd8:	mls	r3, r1, r2, r3
   3bcdc:	cmp	r3, #0
   3bce0:	bne	3bd7c <GetDataSlab+0x19f50>
   3bce4:	ldr	r3, [sp, #228]	; 0xe4
   3bce8:	add	ip, sp, #100	; 0x64
   3bcec:	add	r4, sp, #140	; 0x8c
   3bcf0:	mov	r0, #1
   3bcf4:	add	r6, r3, #4
   3bcf8:	b	3bd40 <GetDataSlab+0x19f14>
   3bcfc:	ldr	r3, [r4, #-8]
   3bd00:	ldr	r1, [r9, r0, lsl #2]
   3bd04:	mla	r3, r1, r3, r2
   3bd08:	add	r5, r5, r3
   3bd0c:	add	lr, lr, r3
   3bd10:	ldr	r3, [sp, #232]	; 0xe8
   3bd14:	add	r0, r0, #1
   3bd18:	cmp	r3, r0
   3bd1c:	beq	3bd94 <GetDataSlab+0x19f68>
   3bd20:	ldr	r3, [ip]
   3bd24:	ldr	r1, [r6, #4]!
   3bd28:	add	r3, r3, #1
   3bd2c:	sdiv	r2, r3, r1
   3bd30:	str	r3, [ip]
   3bd34:	mls	r3, r1, r2, r3
   3bd38:	cmp	r3, #0
   3bd3c:	bne	3bd80 <GetDataSlab+0x19f54>
   3bd40:	ldr	r2, [r4], #4
   3bd44:	str	r7, [ip], #4
   3bd48:	sdiv	r3, lr, r2
   3bd4c:	mls	r3, r2, r3, lr
   3bd50:	cmp	r3, #0
   3bd54:	sub	r2, r2, r3
   3bd58:	bne	3bcfc <GetDataSlab+0x19ed0>
   3bd5c:	ldr	r3, [r9, r0, lsl #2]
   3bd60:	cmp	r3, #0
   3bd64:	beq	3bd10 <GetDataSlab+0x19ee4>
   3bd68:	ldr	r2, [r4, #-8]
   3bd6c:	mul	r3, r2, r3
   3bd70:	add	r5, r5, r3
   3bd74:	add	lr, lr, r3
   3bd78:	b	3bd10 <GetDataSlab+0x19ee4>
   3bd7c:	mov	r0, #1
   3bd80:	add	r3, sp, #176	; 0xb0
   3bd84:	add	r3, r3, r0, lsl #2
   3bd88:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bd8c:	add	lr, lr, r3
   3bd90:	add	r5, r5, r3
   3bd94:	ldr	r3, [sp, #20]
   3bd98:	add	sl, sl, fp
   3bd9c:	cmp	sl, r3
   3bda0:	blt	3bc44 <GetDataSlab+0x19e18>
   3bda4:	b	30874 <GetDataSlab+0xea48>
   3bda8:	cmp	r3, #0
   3bdac:	ble	30874 <GetDataSlab+0xea48>
   3bdb0:	ldr	r3, [r9]
   3bdb4:	mov	sl, #0
   3bdb8:	mov	r7, sl
   3bdbc:	str	r3, [sp, #8]
   3bdc0:	ldr	r3, [sp, #8]
   3bdc4:	cmp	r3, #0
   3bdc8:	addne	r5, r5, r3, lsl #1
   3bdcc:	addne	lr, lr, r3
   3bdd0:	cmp	fp, #0
   3bdd4:	ble	3be14 <GetDataSlab+0x19fe8>
   3bdd8:	ldr	r3, [sp, #4]
   3bddc:	sub	r1, r5, #2
   3bde0:	add	r2, r3, sl, lsl #2
   3bde4:	mov	r3, #0
   3bde8:	ldrh	r0, [r1, #2]!
   3bdec:	add	r3, r3, #1
   3bdf0:	str	r0, [r2], #4
   3bdf4:	ldr	r0, [sp, #228]	; 0xe4
   3bdf8:	ldr	fp, [r0]
   3bdfc:	cmp	fp, r3
   3be00:	bgt	3bde8 <GetDataSlab+0x19fbc>
   3be04:	ldr	r3, [r9]
   3be08:	str	r3, [sp, #8]
   3be0c:	ldr	r3, [r8]
   3be10:	str	r3, [sp, #16]
   3be14:	ldr	r2, [sp, #8]
   3be18:	ldr	r3, [sp, #232]	; 0xe8
   3be1c:	cmp	r3, #1
   3be20:	ldr	r3, [sp, #16]
   3be24:	sub	r3, r3, r2
   3be28:	add	lr, lr, r3
   3be2c:	add	r5, r5, r3, lsl #1
   3be30:	ble	3bf08 <GetDataSlab+0x1a0dc>
   3be34:	ldr	r3, [sp, #100]	; 0x64
   3be38:	ldr	r2, [sp, #228]	; 0xe4
   3be3c:	add	r3, r3, #1
   3be40:	ldr	r1, [r2, #4]
   3be44:	str	r3, [sp, #100]	; 0x64
   3be48:	sdiv	r2, r3, r1
   3be4c:	mls	r3, r1, r2, r3
   3be50:	cmp	r3, #0
   3be54:	bne	3bef0 <GetDataSlab+0x1a0c4>
   3be58:	ldr	r3, [sp, #228]	; 0xe4
   3be5c:	add	ip, sp, #100	; 0x64
   3be60:	add	r4, sp, #140	; 0x8c
   3be64:	mov	r0, #1
   3be68:	add	r6, r3, #4
   3be6c:	b	3beb4 <GetDataSlab+0x1a088>
   3be70:	ldr	r3, [r4, #-8]
   3be74:	ldr	r1, [r9, r0, lsl #2]
   3be78:	mla	r3, r1, r3, r2
   3be7c:	add	r5, r5, r3, lsl #1
   3be80:	add	lr, lr, r3
   3be84:	ldr	r3, [sp, #232]	; 0xe8
   3be88:	add	r0, r0, #1
   3be8c:	cmp	r3, r0
   3be90:	beq	3bf08 <GetDataSlab+0x1a0dc>
   3be94:	ldr	r3, [ip]
   3be98:	ldr	r1, [r6, #4]!
   3be9c:	add	r3, r3, #1
   3bea0:	sdiv	r2, r3, r1
   3bea4:	str	r3, [ip]
   3bea8:	mls	r3, r1, r2, r3
   3beac:	cmp	r3, #0
   3beb0:	bne	3bef4 <GetDataSlab+0x1a0c8>
   3beb4:	ldr	r2, [r4], #4
   3beb8:	str	r7, [ip], #4
   3bebc:	sdiv	r3, lr, r2
   3bec0:	mls	r3, r2, r3, lr
   3bec4:	cmp	r3, #0
   3bec8:	sub	r2, r2, r3
   3becc:	bne	3be70 <GetDataSlab+0x1a044>
   3bed0:	ldr	r3, [r9, r0, lsl #2]
   3bed4:	cmp	r3, #0
   3bed8:	beq	3be84 <GetDataSlab+0x1a058>
   3bedc:	ldr	r2, [r4, #-8]
   3bee0:	mul	r3, r2, r3
   3bee4:	add	r5, r5, r3, lsl #1
   3bee8:	add	lr, lr, r3
   3beec:	b	3be84 <GetDataSlab+0x1a058>
   3bef0:	mov	r0, #1
   3bef4:	add	r3, sp, #176	; 0xb0
   3bef8:	add	r3, r3, r0, lsl #2
   3befc:	ldr	r3, [r3, #-120]	; 0xffffff88
   3bf00:	add	r5, r5, r3, lsl #1
   3bf04:	add	lr, lr, r3
   3bf08:	ldr	r3, [sp, #20]
   3bf0c:	add	sl, sl, fp
   3bf10:	cmp	sl, r3
   3bf14:	blt	3bdc0 <GetDataSlab+0x19f94>
   3bf18:	b	30874 <GetDataSlab+0xea48>
   3bf1c:	cmp	r3, #0
   3bf20:	ble	30874 <GetDataSlab+0xea48>
   3bf24:	ldr	r3, [r9]
   3bf28:	mov	sl, #0
   3bf2c:	mov	r7, sl
   3bf30:	str	r3, [sp, #8]
   3bf34:	ldr	r3, [sp, #8]
   3bf38:	cmp	r3, #0
   3bf3c:	addne	r5, r5, r3, lsl #2
   3bf40:	addne	lr, lr, r3
   3bf44:	cmp	fp, #0
   3bf48:	ble	3bf88 <GetDataSlab+0x1a15c>
   3bf4c:	ldr	r3, [sp, #4]
   3bf50:	sub	r1, r5, #4
   3bf54:	add	r2, r3, sl, lsl #2
   3bf58:	mov	r3, #0
   3bf5c:	ldr	r0, [r1, #4]!
   3bf60:	add	r3, r3, #1
   3bf64:	str	r0, [r2], #4
   3bf68:	ldr	r0, [sp, #228]	; 0xe4
   3bf6c:	ldr	fp, [r0]
   3bf70:	cmp	fp, r3
   3bf74:	bgt	3bf5c <GetDataSlab+0x1a130>
   3bf78:	ldr	r3, [r9]
   3bf7c:	str	r3, [sp, #8]
   3bf80:	ldr	r3, [r8]
   3bf84:	str	r3, [sp, #16]
   3bf88:	ldr	r2, [sp, #8]
   3bf8c:	ldr	r3, [sp, #232]	; 0xe8
   3bf90:	cmp	r3, #1
   3bf94:	ldr	r3, [sp, #16]
   3bf98:	sub	r3, r3, r2
   3bf9c:	add	lr, lr, r3
   3bfa0:	add	r5, r5, r3, lsl #2
   3bfa4:	ble	3c07c <GetDataSlab+0x1a250>
   3bfa8:	ldr	r3, [sp, #100]	; 0x64
   3bfac:	ldr	r2, [sp, #228]	; 0xe4
   3bfb0:	add	r3, r3, #1
   3bfb4:	ldr	r1, [r2, #4]
   3bfb8:	str	r3, [sp, #100]	; 0x64
   3bfbc:	sdiv	r2, r3, r1
   3bfc0:	mls	r3, r1, r2, r3
   3bfc4:	cmp	r3, #0
   3bfc8:	bne	3c064 <GetDataSlab+0x1a238>
   3bfcc:	ldr	r3, [sp, #228]	; 0xe4
   3bfd0:	add	ip, sp, #100	; 0x64
   3bfd4:	add	r4, sp, #140	; 0x8c
   3bfd8:	mov	r0, #1
   3bfdc:	add	r6, r3, #4
   3bfe0:	b	3c028 <GetDataSlab+0x1a1fc>
   3bfe4:	ldr	r3, [r4, #-8]
   3bfe8:	ldr	r1, [r9, r0, lsl #2]
   3bfec:	mla	r3, r1, r3, r2
   3bff0:	add	r5, r5, r3, lsl #2
   3bff4:	add	lr, lr, r3
   3bff8:	ldr	r3, [sp, #232]	; 0xe8
   3bffc:	add	r0, r0, #1
   3c000:	cmp	r3, r0
   3c004:	beq	3c07c <GetDataSlab+0x1a250>
   3c008:	ldr	r3, [ip]
   3c00c:	ldr	r1, [r6, #4]!
   3c010:	add	r3, r3, #1
   3c014:	sdiv	r2, r3, r1
   3c018:	str	r3, [ip]
   3c01c:	mls	r3, r1, r2, r3
   3c020:	cmp	r3, #0
   3c024:	bne	3c068 <GetDataSlab+0x1a23c>
   3c028:	ldr	r2, [r4], #4
   3c02c:	str	r7, [ip], #4
   3c030:	sdiv	r3, lr, r2
   3c034:	mls	r3, r2, r3, lr
   3c038:	cmp	r3, #0
   3c03c:	sub	r2, r2, r3
   3c040:	bne	3bfe4 <GetDataSlab+0x1a1b8>
   3c044:	ldr	r3, [r9, r0, lsl #2]
   3c048:	cmp	r3, #0
   3c04c:	beq	3bff8 <GetDataSlab+0x1a1cc>
   3c050:	ldr	r2, [r4, #-8]
   3c054:	mul	r3, r2, r3
   3c058:	add	r5, r5, r3, lsl #2
   3c05c:	add	lr, lr, r3
   3c060:	b	3bff8 <GetDataSlab+0x1a1cc>
   3c064:	mov	r0, #1
   3c068:	add	r3, sp, #176	; 0xb0
   3c06c:	add	r3, r3, r0, lsl #2
   3c070:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c074:	add	r5, r5, r3, lsl #2
   3c078:	add	lr, lr, r3
   3c07c:	ldr	r3, [sp, #20]
   3c080:	add	sl, sl, fp
   3c084:	cmp	sl, r3
   3c088:	blt	3bf34 <GetDataSlab+0x1a108>
   3c08c:	b	30874 <GetDataSlab+0xea48>
   3c090:	cmp	r3, #0
   3c094:	ble	30874 <GetDataSlab+0xea48>
   3c098:	ldr	r3, [r9]
   3c09c:	mov	sl, #0
   3c0a0:	mov	r7, sl
   3c0a4:	str	r3, [sp, #8]
   3c0a8:	ldr	r3, [sp, #8]
   3c0ac:	cmp	r3, #0
   3c0b0:	addne	r5, r5, r3, lsl #3
   3c0b4:	addne	r4, r4, r3
   3c0b8:	cmp	fp, #0
   3c0bc:	ble	3c104 <GetDataSlab+0x1a2d8>
   3c0c0:	ldr	r3, [sp, #4]
   3c0c4:	mov	r2, r5
   3c0c8:	add	r0, r3, sl
   3c0cc:	mov	r3, r0
   3c0d0:	vldmia	r2!, {d7}
   3c0d4:	ldr	ip, [sp, #228]	; 0xe4
   3c0d8:	vcvt.u32.f64	s15, d7
   3c0dc:	vmov	r1, s15
   3c0e0:	strb	r1, [r3], #1
   3c0e4:	sub	r1, r3, r0
   3c0e8:	ldr	fp, [ip]
   3c0ec:	cmp	r1, fp
   3c0f0:	blt	3c0d0 <GetDataSlab+0x1a2a4>
   3c0f4:	ldr	r3, [r9]
   3c0f8:	str	r3, [sp, #8]
   3c0fc:	ldr	r3, [r8]
   3c100:	str	r3, [sp, #16]
   3c104:	ldr	r2, [sp, #8]
   3c108:	ldr	r3, [sp, #232]	; 0xe8
   3c10c:	cmp	r3, #1
   3c110:	ldr	r3, [sp, #16]
   3c114:	sub	r3, r3, r2
   3c118:	add	r4, r4, r3
   3c11c:	add	r5, r5, r3, lsl #3
   3c120:	ble	3c1f8 <GetDataSlab+0x1a3cc>
   3c124:	ldr	r3, [sp, #100]	; 0x64
   3c128:	ldr	r2, [sp, #228]	; 0xe4
   3c12c:	add	r3, r3, #1
   3c130:	ldr	r1, [r2, #4]
   3c134:	str	r3, [sp, #100]	; 0x64
   3c138:	sdiv	r2, r3, r1
   3c13c:	mls	r3, r1, r2, r3
   3c140:	cmp	r3, #0
   3c144:	bne	3c1e0 <GetDataSlab+0x1a3b4>
   3c148:	ldr	r3, [sp, #228]	; 0xe4
   3c14c:	add	ip, sp, #100	; 0x64
   3c150:	add	lr, sp, #140	; 0x8c
   3c154:	mov	r0, #1
   3c158:	add	r6, r3, #4
   3c15c:	b	3c1a4 <GetDataSlab+0x1a378>
   3c160:	ldr	r3, [lr, #-8]
   3c164:	ldr	r1, [r9, r0, lsl #2]
   3c168:	mla	r3, r1, r3, r2
   3c16c:	add	r5, r5, r3, lsl #3
   3c170:	add	r4, r4, r3
   3c174:	ldr	r3, [sp, #232]	; 0xe8
   3c178:	add	r0, r0, #1
   3c17c:	cmp	r3, r0
   3c180:	beq	3c1f8 <GetDataSlab+0x1a3cc>
   3c184:	ldr	r3, [ip]
   3c188:	ldr	r1, [r6, #4]!
   3c18c:	add	r3, r3, #1
   3c190:	sdiv	r2, r3, r1
   3c194:	str	r3, [ip]
   3c198:	mls	r3, r1, r2, r3
   3c19c:	cmp	r3, #0
   3c1a0:	bne	3c1e4 <GetDataSlab+0x1a3b8>
   3c1a4:	ldr	r2, [lr], #4
   3c1a8:	str	r7, [ip], #4
   3c1ac:	sdiv	r3, r4, r2
   3c1b0:	mls	r3, r2, r3, r4
   3c1b4:	cmp	r3, #0
   3c1b8:	sub	r2, r2, r3
   3c1bc:	bne	3c160 <GetDataSlab+0x1a334>
   3c1c0:	ldr	r3, [r9, r0, lsl #2]
   3c1c4:	cmp	r3, #0
   3c1c8:	beq	3c174 <GetDataSlab+0x1a348>
   3c1cc:	ldr	r2, [lr, #-8]
   3c1d0:	mul	r3, r2, r3
   3c1d4:	add	r5, r5, r3, lsl #3
   3c1d8:	add	r4, r4, r3
   3c1dc:	b	3c174 <GetDataSlab+0x1a348>
   3c1e0:	mov	r0, #1
   3c1e4:	add	r3, sp, #176	; 0xb0
   3c1e8:	add	r3, r3, r0, lsl #2
   3c1ec:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c1f0:	add	r5, r5, r3, lsl #3
   3c1f4:	add	r4, r4, r3
   3c1f8:	ldr	r3, [sp, #20]
   3c1fc:	add	sl, sl, fp
   3c200:	cmp	sl, r3
   3c204:	blt	3c0a8 <GetDataSlab+0x1a27c>
   3c208:	b	30874 <GetDataSlab+0xea48>
   3c20c:	cmp	r3, #0
   3c210:	ble	30874 <GetDataSlab+0xea48>
   3c214:	ldr	r3, [r9]
   3c218:	mov	sl, #0
   3c21c:	mov	r7, sl
   3c220:	str	r3, [sp, #8]
   3c224:	ldr	r3, [sp, #8]
   3c228:	cmp	r3, #0
   3c22c:	addne	r5, r5, r3, lsl #1
   3c230:	addne	lr, lr, r3
   3c234:	cmp	fp, #0
   3c238:	ble	3c278 <GetDataSlab+0x1a44c>
   3c23c:	ldr	r3, [sp, #4]
   3c240:	sub	r1, r5, #2
   3c244:	add	r2, r3, sl, lsl #2
   3c248:	mov	r3, #0
   3c24c:	ldrsh	r0, [r1, #2]!
   3c250:	add	r3, r3, #1
   3c254:	str	r0, [r2], #4
   3c258:	ldr	r0, [sp, #228]	; 0xe4
   3c25c:	ldr	fp, [r0]
   3c260:	cmp	fp, r3
   3c264:	bgt	3c24c <GetDataSlab+0x1a420>
   3c268:	ldr	r3, [r9]
   3c26c:	str	r3, [sp, #8]
   3c270:	ldr	r3, [r8]
   3c274:	str	r3, [sp, #16]
   3c278:	ldr	r2, [sp, #8]
   3c27c:	ldr	r3, [sp, #232]	; 0xe8
   3c280:	cmp	r3, #1
   3c284:	ldr	r3, [sp, #16]
   3c288:	sub	r3, r3, r2
   3c28c:	add	lr, lr, r3
   3c290:	add	r5, r5, r3, lsl #1
   3c294:	ble	3c36c <GetDataSlab+0x1a540>
   3c298:	ldr	r3, [sp, #100]	; 0x64
   3c29c:	ldr	r2, [sp, #228]	; 0xe4
   3c2a0:	add	r3, r3, #1
   3c2a4:	ldr	r1, [r2, #4]
   3c2a8:	str	r3, [sp, #100]	; 0x64
   3c2ac:	sdiv	r2, r3, r1
   3c2b0:	mls	r3, r1, r2, r3
   3c2b4:	cmp	r3, #0
   3c2b8:	bne	3c354 <GetDataSlab+0x1a528>
   3c2bc:	ldr	r3, [sp, #228]	; 0xe4
   3c2c0:	add	ip, sp, #100	; 0x64
   3c2c4:	add	r4, sp, #140	; 0x8c
   3c2c8:	mov	r0, #1
   3c2cc:	add	r6, r3, #4
   3c2d0:	b	3c318 <GetDataSlab+0x1a4ec>
   3c2d4:	ldr	r3, [r4, #-8]
   3c2d8:	ldr	r1, [r9, r0, lsl #2]
   3c2dc:	mla	r3, r1, r3, r2
   3c2e0:	add	r5, r5, r3, lsl #1
   3c2e4:	add	lr, lr, r3
   3c2e8:	ldr	r3, [sp, #232]	; 0xe8
   3c2ec:	add	r0, r0, #1
   3c2f0:	cmp	r3, r0
   3c2f4:	beq	3c36c <GetDataSlab+0x1a540>
   3c2f8:	ldr	r3, [ip]
   3c2fc:	ldr	r1, [r6, #4]!
   3c300:	add	r3, r3, #1
   3c304:	sdiv	r2, r3, r1
   3c308:	str	r3, [ip]
   3c30c:	mls	r3, r1, r2, r3
   3c310:	cmp	r3, #0
   3c314:	bne	3c358 <GetDataSlab+0x1a52c>
   3c318:	ldr	r2, [r4], #4
   3c31c:	str	r7, [ip], #4
   3c320:	sdiv	r3, lr, r2
   3c324:	mls	r3, r2, r3, lr
   3c328:	cmp	r3, #0
   3c32c:	sub	r2, r2, r3
   3c330:	bne	3c2d4 <GetDataSlab+0x1a4a8>
   3c334:	ldr	r3, [r9, r0, lsl #2]
   3c338:	cmp	r3, #0
   3c33c:	beq	3c2e8 <GetDataSlab+0x1a4bc>
   3c340:	ldr	r2, [r4, #-8]
   3c344:	mul	r3, r2, r3
   3c348:	add	r5, r5, r3, lsl #1
   3c34c:	add	lr, lr, r3
   3c350:	b	3c2e8 <GetDataSlab+0x1a4bc>
   3c354:	mov	r0, #1
   3c358:	add	r3, sp, #176	; 0xb0
   3c35c:	add	r3, r3, r0, lsl #2
   3c360:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c364:	add	r5, r5, r3, lsl #1
   3c368:	add	lr, lr, r3
   3c36c:	ldr	r3, [sp, #20]
   3c370:	add	sl, sl, fp
   3c374:	cmp	sl, r3
   3c378:	blt	3c224 <GetDataSlab+0x1a3f8>
   3c37c:	b	30874 <GetDataSlab+0xea48>
   3c380:	cmp	r3, #0
   3c384:	ble	30874 <GetDataSlab+0xea48>
   3c388:	ldr	r3, [r9]
   3c38c:	mov	sl, #0
   3c390:	mov	r7, sl
   3c394:	str	r3, [sp, #8]
   3c398:	ldr	r3, [sp, #8]
   3c39c:	cmp	r3, #0
   3c3a0:	addne	r5, r5, r3
   3c3a4:	addne	lr, lr, r3
   3c3a8:	cmp	fp, #0
   3c3ac:	ble	3c3f0 <GetDataSlab+0x1a5c4>
   3c3b0:	ldr	r3, [sp, #4]
   3c3b4:	add	r2, r3, sl, lsl #2
   3c3b8:	sub	r3, r5, #1
   3c3bc:	ldrsb	r0, [r3, #1]
   3c3c0:	add	r1, r3, #2
   3c3c4:	add	r3, r3, #1
   3c3c8:	sub	r1, r1, r5
   3c3cc:	str	r0, [r2], #4
   3c3d0:	ldr	r0, [sp, #228]	; 0xe4
   3c3d4:	ldr	fp, [r0]
   3c3d8:	cmp	fp, r1
   3c3dc:	bgt	3c3bc <GetDataSlab+0x1a590>
   3c3e0:	ldr	r3, [r9]
   3c3e4:	str	r3, [sp, #8]
   3c3e8:	ldr	r3, [r8]
   3c3ec:	str	r3, [sp, #16]
   3c3f0:	ldr	r2, [sp, #8]
   3c3f4:	ldr	r3, [sp, #232]	; 0xe8
   3c3f8:	cmp	r3, #1
   3c3fc:	ldr	r3, [sp, #16]
   3c400:	sub	r3, r3, r2
   3c404:	add	lr, lr, r3
   3c408:	add	r5, r5, r3
   3c40c:	ble	3c4e4 <GetDataSlab+0x1a6b8>
   3c410:	ldr	r3, [sp, #100]	; 0x64
   3c414:	ldr	r2, [sp, #228]	; 0xe4
   3c418:	add	r3, r3, #1
   3c41c:	ldr	r1, [r2, #4]
   3c420:	str	r3, [sp, #100]	; 0x64
   3c424:	sdiv	r2, r3, r1
   3c428:	mls	r3, r1, r2, r3
   3c42c:	cmp	r3, #0
   3c430:	bne	3c4cc <GetDataSlab+0x1a6a0>
   3c434:	ldr	r3, [sp, #228]	; 0xe4
   3c438:	add	ip, sp, #100	; 0x64
   3c43c:	add	r4, sp, #140	; 0x8c
   3c440:	mov	r0, #1
   3c444:	add	r6, r3, #4
   3c448:	b	3c490 <GetDataSlab+0x1a664>
   3c44c:	ldr	r3, [r4, #-8]
   3c450:	ldr	r1, [r9, r0, lsl #2]
   3c454:	mla	r3, r1, r3, r2
   3c458:	add	r5, r5, r3
   3c45c:	add	lr, lr, r3
   3c460:	ldr	r3, [sp, #232]	; 0xe8
   3c464:	add	r0, r0, #1
   3c468:	cmp	r3, r0
   3c46c:	beq	3c4e4 <GetDataSlab+0x1a6b8>
   3c470:	ldr	r3, [ip]
   3c474:	ldr	r1, [r6, #4]!
   3c478:	add	r3, r3, #1
   3c47c:	sdiv	r2, r3, r1
   3c480:	str	r3, [ip]
   3c484:	mls	r3, r1, r2, r3
   3c488:	cmp	r3, #0
   3c48c:	bne	3c4d0 <GetDataSlab+0x1a6a4>
   3c490:	ldr	r2, [r4], #4
   3c494:	str	r7, [ip], #4
   3c498:	sdiv	r3, lr, r2
   3c49c:	mls	r3, r2, r3, lr
   3c4a0:	cmp	r3, #0
   3c4a4:	sub	r2, r2, r3
   3c4a8:	bne	3c44c <GetDataSlab+0x1a620>
   3c4ac:	ldr	r3, [r9, r0, lsl #2]
   3c4b0:	cmp	r3, #0
   3c4b4:	beq	3c460 <GetDataSlab+0x1a634>
   3c4b8:	ldr	r2, [r4, #-8]
   3c4bc:	mul	r3, r2, r3
   3c4c0:	add	r5, r5, r3
   3c4c4:	add	lr, lr, r3
   3c4c8:	b	3c460 <GetDataSlab+0x1a634>
   3c4cc:	mov	r0, #1
   3c4d0:	add	r3, sp, #176	; 0xb0
   3c4d4:	add	r3, r3, r0, lsl #2
   3c4d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c4dc:	add	lr, lr, r3
   3c4e0:	add	r5, r5, r3
   3c4e4:	ldr	r3, [sp, #20]
   3c4e8:	add	sl, sl, fp
   3c4ec:	cmp	sl, r3
   3c4f0:	blt	3c398 <GetDataSlab+0x1a56c>
   3c4f4:	b	30874 <GetDataSlab+0xea48>
   3c4f8:	cmp	r3, #0
   3c4fc:	ble	30874 <GetDataSlab+0xea48>
   3c500:	ldr	r3, [r9]
   3c504:	mov	sl, #0
   3c508:	mov	r7, sl
   3c50c:	str	r3, [sp, #8]
   3c510:	ldr	r3, [sp, #8]
   3c514:	cmp	r3, #0
   3c518:	addne	r5, r5, r3, lsl #2
   3c51c:	addne	lr, lr, r3
   3c520:	cmp	fp, #0
   3c524:	ble	3c564 <GetDataSlab+0x1a738>
   3c528:	ldr	r3, [sp, #4]
   3c52c:	sub	r1, r5, #4
   3c530:	add	r2, r3, sl, lsl #2
   3c534:	mov	r3, #0
   3c538:	ldr	r0, [r1, #4]!
   3c53c:	add	r3, r3, #1
   3c540:	str	r0, [r2], #4
   3c544:	ldr	r0, [sp, #228]	; 0xe4
   3c548:	ldr	fp, [r0]
   3c54c:	cmp	fp, r3
   3c550:	bgt	3c538 <GetDataSlab+0x1a70c>
   3c554:	ldr	r3, [r9]
   3c558:	str	r3, [sp, #8]
   3c55c:	ldr	r3, [r8]
   3c560:	str	r3, [sp, #16]
   3c564:	ldr	r2, [sp, #8]
   3c568:	ldr	r3, [sp, #232]	; 0xe8
   3c56c:	cmp	r3, #1
   3c570:	ldr	r3, [sp, #16]
   3c574:	sub	r3, r3, r2
   3c578:	add	lr, lr, r3
   3c57c:	add	r5, r5, r3, lsl #2
   3c580:	ble	3c658 <GetDataSlab+0x1a82c>
   3c584:	ldr	r3, [sp, #100]	; 0x64
   3c588:	ldr	r2, [sp, #228]	; 0xe4
   3c58c:	add	r3, r3, #1
   3c590:	ldr	r1, [r2, #4]
   3c594:	str	r3, [sp, #100]	; 0x64
   3c598:	sdiv	r2, r3, r1
   3c59c:	mls	r3, r1, r2, r3
   3c5a0:	cmp	r3, #0
   3c5a4:	bne	3c640 <GetDataSlab+0x1a814>
   3c5a8:	ldr	r3, [sp, #228]	; 0xe4
   3c5ac:	add	ip, sp, #100	; 0x64
   3c5b0:	add	r4, sp, #140	; 0x8c
   3c5b4:	mov	r0, #1
   3c5b8:	add	r6, r3, #4
   3c5bc:	b	3c604 <GetDataSlab+0x1a7d8>
   3c5c0:	ldr	r3, [r4, #-8]
   3c5c4:	ldr	r1, [r9, r0, lsl #2]
   3c5c8:	mla	r3, r1, r3, r2
   3c5cc:	add	r5, r5, r3, lsl #2
   3c5d0:	add	lr, lr, r3
   3c5d4:	ldr	r3, [sp, #232]	; 0xe8
   3c5d8:	add	r0, r0, #1
   3c5dc:	cmp	r3, r0
   3c5e0:	beq	3c658 <GetDataSlab+0x1a82c>
   3c5e4:	ldr	r3, [ip]
   3c5e8:	ldr	r1, [r6, #4]!
   3c5ec:	add	r3, r3, #1
   3c5f0:	sdiv	r2, r3, r1
   3c5f4:	str	r3, [ip]
   3c5f8:	mls	r3, r1, r2, r3
   3c5fc:	cmp	r3, #0
   3c600:	bne	3c644 <GetDataSlab+0x1a818>
   3c604:	ldr	r2, [r4], #4
   3c608:	str	r7, [ip], #4
   3c60c:	sdiv	r3, lr, r2
   3c610:	mls	r3, r2, r3, lr
   3c614:	cmp	r3, #0
   3c618:	sub	r2, r2, r3
   3c61c:	bne	3c5c0 <GetDataSlab+0x1a794>
   3c620:	ldr	r3, [r9, r0, lsl #2]
   3c624:	cmp	r3, #0
   3c628:	beq	3c5d4 <GetDataSlab+0x1a7a8>
   3c62c:	ldr	r2, [r4, #-8]
   3c630:	mul	r3, r2, r3
   3c634:	add	r5, r5, r3, lsl #2
   3c638:	add	lr, lr, r3
   3c63c:	b	3c5d4 <GetDataSlab+0x1a7a8>
   3c640:	mov	r0, #1
   3c644:	add	r3, sp, #176	; 0xb0
   3c648:	add	r3, r3, r0, lsl #2
   3c64c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c650:	add	r5, r5, r3, lsl #2
   3c654:	add	lr, lr, r3
   3c658:	ldr	r3, [sp, #20]
   3c65c:	add	sl, sl, fp
   3c660:	cmp	sl, r3
   3c664:	blt	3c510 <GetDataSlab+0x1a6e4>
   3c668:	b	30874 <GetDataSlab+0xea48>
   3c66c:	cmp	r3, #0
   3c670:	ble	30874 <GetDataSlab+0xea48>
   3c674:	ldr	r3, [r9]
   3c678:	mov	sl, #0
   3c67c:	mov	r7, sl
   3c680:	str	r3, [sp, #8]
   3c684:	ldr	r3, [sp, #8]
   3c688:	cmp	r3, #0
   3c68c:	addne	r5, r5, r3
   3c690:	addne	lr, lr, r3
   3c694:	cmp	fp, #0
   3c698:	ble	3c6dc <GetDataSlab+0x1a8b0>
   3c69c:	ldr	r3, [sp, #4]
   3c6a0:	add	r2, r3, sl, lsl #2
   3c6a4:	sub	r3, r5, #1
   3c6a8:	ldrb	r0, [r3, #1]
   3c6ac:	add	r1, r3, #2
   3c6b0:	add	r3, r3, #1
   3c6b4:	sub	r1, r1, r5
   3c6b8:	str	r0, [r2], #4
   3c6bc:	ldr	r0, [sp, #228]	; 0xe4
   3c6c0:	ldr	fp, [r0]
   3c6c4:	cmp	fp, r1
   3c6c8:	bgt	3c6a8 <GetDataSlab+0x1a87c>
   3c6cc:	ldr	r3, [r9]
   3c6d0:	str	r3, [sp, #8]
   3c6d4:	ldr	r3, [r8]
   3c6d8:	str	r3, [sp, #16]
   3c6dc:	ldr	r2, [sp, #8]
   3c6e0:	ldr	r3, [sp, #232]	; 0xe8
   3c6e4:	cmp	r3, #1
   3c6e8:	ldr	r3, [sp, #16]
   3c6ec:	sub	r3, r3, r2
   3c6f0:	add	lr, lr, r3
   3c6f4:	add	r5, r5, r3
   3c6f8:	ble	3c7d0 <GetDataSlab+0x1a9a4>
   3c6fc:	ldr	r3, [sp, #100]	; 0x64
   3c700:	ldr	r2, [sp, #228]	; 0xe4
   3c704:	add	r3, r3, #1
   3c708:	ldr	r1, [r2, #4]
   3c70c:	str	r3, [sp, #100]	; 0x64
   3c710:	sdiv	r2, r3, r1
   3c714:	mls	r3, r1, r2, r3
   3c718:	cmp	r3, #0
   3c71c:	bne	3c7b8 <GetDataSlab+0x1a98c>
   3c720:	ldr	r3, [sp, #228]	; 0xe4
   3c724:	add	ip, sp, #100	; 0x64
   3c728:	add	r4, sp, #140	; 0x8c
   3c72c:	mov	r0, #1
   3c730:	add	r6, r3, #4
   3c734:	b	3c77c <GetDataSlab+0x1a950>
   3c738:	ldr	r3, [r4, #-8]
   3c73c:	ldr	r1, [r9, r0, lsl #2]
   3c740:	mla	r3, r1, r3, r2
   3c744:	add	r5, r5, r3
   3c748:	add	lr, lr, r3
   3c74c:	ldr	r3, [sp, #232]	; 0xe8
   3c750:	add	r0, r0, #1
   3c754:	cmp	r3, r0
   3c758:	beq	3c7d0 <GetDataSlab+0x1a9a4>
   3c75c:	ldr	r3, [ip]
   3c760:	ldr	r1, [r6, #4]!
   3c764:	add	r3, r3, #1
   3c768:	sdiv	r2, r3, r1
   3c76c:	str	r3, [ip]
   3c770:	mls	r3, r1, r2, r3
   3c774:	cmp	r3, #0
   3c778:	bne	3c7bc <GetDataSlab+0x1a990>
   3c77c:	ldr	r2, [r4], #4
   3c780:	str	r7, [ip], #4
   3c784:	sdiv	r3, lr, r2
   3c788:	mls	r3, r2, r3, lr
   3c78c:	cmp	r3, #0
   3c790:	sub	r2, r2, r3
   3c794:	bne	3c738 <GetDataSlab+0x1a90c>
   3c798:	ldr	r3, [r9, r0, lsl #2]
   3c79c:	cmp	r3, #0
   3c7a0:	beq	3c74c <GetDataSlab+0x1a920>
   3c7a4:	ldr	r2, [r4, #-8]
   3c7a8:	mul	r3, r2, r3
   3c7ac:	add	r5, r5, r3
   3c7b0:	add	lr, lr, r3
   3c7b4:	b	3c74c <GetDataSlab+0x1a920>
   3c7b8:	mov	r0, #1
   3c7bc:	add	r3, sp, #176	; 0xb0
   3c7c0:	add	r3, r3, r0, lsl #2
   3c7c4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c7c8:	add	lr, lr, r3
   3c7cc:	add	r5, r5, r3
   3c7d0:	ldr	r3, [sp, #20]
   3c7d4:	add	sl, sl, fp
   3c7d8:	cmp	sl, r3
   3c7dc:	blt	3c684 <GetDataSlab+0x1a858>
   3c7e0:	b	30874 <GetDataSlab+0xea48>
   3c7e4:	cmp	r3, #0
   3c7e8:	ble	30874 <GetDataSlab+0xea48>
   3c7ec:	ldr	r3, [r9]
   3c7f0:	mov	sl, #0
   3c7f4:	mov	r7, sl
   3c7f8:	str	r3, [sp, #8]
   3c7fc:	ldr	r3, [sp, #8]
   3c800:	cmp	r3, #0
   3c804:	addne	r5, r5, r3, lsl #1
   3c808:	addne	lr, lr, r3
   3c80c:	cmp	fp, #0
   3c810:	ble	3c850 <GetDataSlab+0x1aa24>
   3c814:	ldr	r3, [sp, #4]
   3c818:	sub	r1, r5, #2
   3c81c:	add	r2, r3, sl, lsl #2
   3c820:	mov	r3, #0
   3c824:	ldrh	r0, [r1, #2]!
   3c828:	add	r3, r3, #1
   3c82c:	str	r0, [r2], #4
   3c830:	ldr	r0, [sp, #228]	; 0xe4
   3c834:	ldr	fp, [r0]
   3c838:	cmp	fp, r3
   3c83c:	bgt	3c824 <GetDataSlab+0x1a9f8>
   3c840:	ldr	r3, [r9]
   3c844:	str	r3, [sp, #8]
   3c848:	ldr	r3, [r8]
   3c84c:	str	r3, [sp, #16]
   3c850:	ldr	r2, [sp, #8]
   3c854:	ldr	r3, [sp, #232]	; 0xe8
   3c858:	cmp	r3, #1
   3c85c:	ldr	r3, [sp, #16]
   3c860:	sub	r3, r3, r2
   3c864:	add	lr, lr, r3
   3c868:	add	r5, r5, r3, lsl #1
   3c86c:	ble	3c944 <GetDataSlab+0x1ab18>
   3c870:	ldr	r3, [sp, #100]	; 0x64
   3c874:	ldr	r2, [sp, #228]	; 0xe4
   3c878:	add	r3, r3, #1
   3c87c:	ldr	r1, [r2, #4]
   3c880:	str	r3, [sp, #100]	; 0x64
   3c884:	sdiv	r2, r3, r1
   3c888:	mls	r3, r1, r2, r3
   3c88c:	cmp	r3, #0
   3c890:	bne	3c92c <GetDataSlab+0x1ab00>
   3c894:	ldr	r3, [sp, #228]	; 0xe4
   3c898:	add	ip, sp, #100	; 0x64
   3c89c:	add	r4, sp, #140	; 0x8c
   3c8a0:	mov	r0, #1
   3c8a4:	add	r6, r3, #4
   3c8a8:	b	3c8f0 <GetDataSlab+0x1aac4>
   3c8ac:	ldr	r3, [r4, #-8]
   3c8b0:	ldr	r1, [r9, r0, lsl #2]
   3c8b4:	mla	r3, r1, r3, r2
   3c8b8:	add	r5, r5, r3, lsl #1
   3c8bc:	add	lr, lr, r3
   3c8c0:	ldr	r3, [sp, #232]	; 0xe8
   3c8c4:	add	r0, r0, #1
   3c8c8:	cmp	r3, r0
   3c8cc:	beq	3c944 <GetDataSlab+0x1ab18>
   3c8d0:	ldr	r3, [ip]
   3c8d4:	ldr	r1, [r6, #4]!
   3c8d8:	add	r3, r3, #1
   3c8dc:	sdiv	r2, r3, r1
   3c8e0:	str	r3, [ip]
   3c8e4:	mls	r3, r1, r2, r3
   3c8e8:	cmp	r3, #0
   3c8ec:	bne	3c930 <GetDataSlab+0x1ab04>
   3c8f0:	ldr	r2, [r4], #4
   3c8f4:	str	r7, [ip], #4
   3c8f8:	sdiv	r3, lr, r2
   3c8fc:	mls	r3, r2, r3, lr
   3c900:	cmp	r3, #0
   3c904:	sub	r2, r2, r3
   3c908:	bne	3c8ac <GetDataSlab+0x1aa80>
   3c90c:	ldr	r3, [r9, r0, lsl #2]
   3c910:	cmp	r3, #0
   3c914:	beq	3c8c0 <GetDataSlab+0x1aa94>
   3c918:	ldr	r2, [r4, #-8]
   3c91c:	mul	r3, r2, r3
   3c920:	add	r5, r5, r3, lsl #1
   3c924:	add	lr, lr, r3
   3c928:	b	3c8c0 <GetDataSlab+0x1aa94>
   3c92c:	mov	r0, #1
   3c930:	add	r3, sp, #176	; 0xb0
   3c934:	add	r3, r3, r0, lsl #2
   3c938:	ldr	r3, [r3, #-120]	; 0xffffff88
   3c93c:	add	r5, r5, r3, lsl #1
   3c940:	add	lr, lr, r3
   3c944:	ldr	r3, [sp, #20]
   3c948:	add	sl, sl, fp
   3c94c:	cmp	sl, r3
   3c950:	blt	3c7fc <GetDataSlab+0x1a9d0>
   3c954:	b	30874 <GetDataSlab+0xea48>
   3c958:	cmp	r3, #0
   3c95c:	ble	30874 <GetDataSlab+0xea48>
   3c960:	ldr	r3, [r9]
   3c964:	mov	sl, #0
   3c968:	mov	r7, sl
   3c96c:	str	r3, [sp, #8]
   3c970:	ldr	r3, [sp, #8]
   3c974:	cmp	r3, #0
   3c978:	addne	r5, r5, r3, lsl #1
   3c97c:	addne	lr, lr, r3
   3c980:	cmp	fp, #0
   3c984:	ble	3c9c4 <GetDataSlab+0x1ab98>
   3c988:	ldr	r3, [sp, #4]
   3c98c:	sub	r1, r5, #2
   3c990:	add	r2, r3, sl, lsl #2
   3c994:	mov	r3, #0
   3c998:	ldrsh	r0, [r1, #2]!
   3c99c:	add	r3, r3, #1
   3c9a0:	str	r0, [r2], #4
   3c9a4:	ldr	r0, [sp, #228]	; 0xe4
   3c9a8:	ldr	fp, [r0]
   3c9ac:	cmp	fp, r3
   3c9b0:	bgt	3c998 <GetDataSlab+0x1ab6c>
   3c9b4:	ldr	r3, [r9]
   3c9b8:	str	r3, [sp, #8]
   3c9bc:	ldr	r3, [r8]
   3c9c0:	str	r3, [sp, #16]
   3c9c4:	ldr	r2, [sp, #8]
   3c9c8:	ldr	r3, [sp, #232]	; 0xe8
   3c9cc:	cmp	r3, #1
   3c9d0:	ldr	r3, [sp, #16]
   3c9d4:	sub	r3, r3, r2
   3c9d8:	add	lr, lr, r3
   3c9dc:	add	r5, r5, r3, lsl #1
   3c9e0:	ble	3cab8 <GetDataSlab+0x1ac8c>
   3c9e4:	ldr	r3, [sp, #100]	; 0x64
   3c9e8:	ldr	r2, [sp, #228]	; 0xe4
   3c9ec:	add	r3, r3, #1
   3c9f0:	ldr	r1, [r2, #4]
   3c9f4:	str	r3, [sp, #100]	; 0x64
   3c9f8:	sdiv	r2, r3, r1
   3c9fc:	mls	r3, r1, r2, r3
   3ca00:	cmp	r3, #0
   3ca04:	bne	3caa0 <GetDataSlab+0x1ac74>
   3ca08:	ldr	r3, [sp, #228]	; 0xe4
   3ca0c:	add	ip, sp, #100	; 0x64
   3ca10:	add	r4, sp, #140	; 0x8c
   3ca14:	mov	r0, #1
   3ca18:	add	r6, r3, #4
   3ca1c:	b	3ca64 <GetDataSlab+0x1ac38>
   3ca20:	ldr	r3, [r4, #-8]
   3ca24:	ldr	r1, [r9, r0, lsl #2]
   3ca28:	mla	r3, r1, r3, r2
   3ca2c:	add	r5, r5, r3, lsl #1
   3ca30:	add	lr, lr, r3
   3ca34:	ldr	r3, [sp, #232]	; 0xe8
   3ca38:	add	r0, r0, #1
   3ca3c:	cmp	r3, r0
   3ca40:	beq	3cab8 <GetDataSlab+0x1ac8c>
   3ca44:	ldr	r3, [ip]
   3ca48:	ldr	r1, [r6, #4]!
   3ca4c:	add	r3, r3, #1
   3ca50:	sdiv	r2, r3, r1
   3ca54:	str	r3, [ip]
   3ca58:	mls	r3, r1, r2, r3
   3ca5c:	cmp	r3, #0
   3ca60:	bne	3caa4 <GetDataSlab+0x1ac78>
   3ca64:	ldr	r2, [r4], #4
   3ca68:	str	r7, [ip], #4
   3ca6c:	sdiv	r3, lr, r2
   3ca70:	mls	r3, r2, r3, lr
   3ca74:	cmp	r3, #0
   3ca78:	sub	r2, r2, r3
   3ca7c:	bne	3ca20 <GetDataSlab+0x1abf4>
   3ca80:	ldr	r3, [r9, r0, lsl #2]
   3ca84:	cmp	r3, #0
   3ca88:	beq	3ca34 <GetDataSlab+0x1ac08>
   3ca8c:	ldr	r2, [r4, #-8]
   3ca90:	mul	r3, r2, r3
   3ca94:	add	r5, r5, r3, lsl #1
   3ca98:	add	lr, lr, r3
   3ca9c:	b	3ca34 <GetDataSlab+0x1ac08>
   3caa0:	mov	r0, #1
   3caa4:	add	r3, sp, #176	; 0xb0
   3caa8:	add	r3, r3, r0, lsl #2
   3caac:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cab0:	add	r5, r5, r3, lsl #1
   3cab4:	add	lr, lr, r3
   3cab8:	ldr	r3, [sp, #20]
   3cabc:	add	sl, sl, fp
   3cac0:	cmp	sl, r3
   3cac4:	blt	3c970 <GetDataSlab+0x1ab44>
   3cac8:	b	30874 <GetDataSlab+0xea48>
   3cacc:	cmp	r3, #0
   3cad0:	ble	30874 <GetDataSlab+0xea48>
   3cad4:	ldr	r3, [r9]
   3cad8:	mov	sl, #0
   3cadc:	mov	r7, sl
   3cae0:	str	r3, [sp, #8]
   3cae4:	ldr	r3, [sp, #8]
   3cae8:	cmp	r3, #0
   3caec:	addne	r5, r5, r3, lsl #2
   3caf0:	addne	lr, lr, r3
   3caf4:	cmp	fp, #0
   3caf8:	ble	3cb3c <GetDataSlab+0x1ad10>
   3cafc:	ldr	r3, [sp, #4]
   3cb00:	mov	r1, r5
   3cb04:	add	r2, r3, sl, lsl #2
   3cb08:	mov	r3, #0
   3cb0c:	vldmia	r1!, {s15}
   3cb10:	add	r3, r3, #1
   3cb14:	ldr	r0, [sp, #228]	; 0xe4
   3cb18:	vcvt.u32.f32	s15, s15
   3cb1c:	vstmia	r2!, {s15}
   3cb20:	ldr	fp, [r0]
   3cb24:	cmp	fp, r3
   3cb28:	bgt	3cb0c <GetDataSlab+0x1ace0>
   3cb2c:	ldr	r3, [r9]
   3cb30:	str	r3, [sp, #8]
   3cb34:	ldr	r3, [r8]
   3cb38:	str	r3, [sp, #16]
   3cb3c:	ldr	r2, [sp, #8]
   3cb40:	ldr	r3, [sp, #232]	; 0xe8
   3cb44:	cmp	r3, #1
   3cb48:	ldr	r3, [sp, #16]
   3cb4c:	sub	r3, r3, r2
   3cb50:	add	lr, lr, r3
   3cb54:	add	r5, r5, r3, lsl #2
   3cb58:	ble	3cc30 <GetDataSlab+0x1ae04>
   3cb5c:	ldr	r3, [sp, #100]	; 0x64
   3cb60:	ldr	r2, [sp, #228]	; 0xe4
   3cb64:	add	r3, r3, #1
   3cb68:	ldr	r1, [r2, #4]
   3cb6c:	str	r3, [sp, #100]	; 0x64
   3cb70:	sdiv	r2, r3, r1
   3cb74:	mls	r3, r1, r2, r3
   3cb78:	cmp	r3, #0
   3cb7c:	bne	3cc18 <GetDataSlab+0x1adec>
   3cb80:	ldr	r3, [sp, #228]	; 0xe4
   3cb84:	add	ip, sp, #100	; 0x64
   3cb88:	add	r4, sp, #140	; 0x8c
   3cb8c:	mov	r0, #1
   3cb90:	add	r6, r3, #4
   3cb94:	b	3cbdc <GetDataSlab+0x1adb0>
   3cb98:	ldr	r3, [r4, #-8]
   3cb9c:	ldr	r1, [r9, r0, lsl #2]
   3cba0:	mla	r3, r1, r3, r2
   3cba4:	add	r5, r5, r3, lsl #2
   3cba8:	add	lr, lr, r3
   3cbac:	ldr	r3, [sp, #232]	; 0xe8
   3cbb0:	add	r0, r0, #1
   3cbb4:	cmp	r3, r0
   3cbb8:	beq	3cc30 <GetDataSlab+0x1ae04>
   3cbbc:	ldr	r3, [ip]
   3cbc0:	ldr	r1, [r6, #4]!
   3cbc4:	add	r3, r3, #1
   3cbc8:	sdiv	r2, r3, r1
   3cbcc:	str	r3, [ip]
   3cbd0:	mls	r3, r1, r2, r3
   3cbd4:	cmp	r3, #0
   3cbd8:	bne	3cc1c <GetDataSlab+0x1adf0>
   3cbdc:	ldr	r2, [r4], #4
   3cbe0:	str	r7, [ip], #4
   3cbe4:	sdiv	r3, lr, r2
   3cbe8:	mls	r3, r2, r3, lr
   3cbec:	cmp	r3, #0
   3cbf0:	sub	r2, r2, r3
   3cbf4:	bne	3cb98 <GetDataSlab+0x1ad6c>
   3cbf8:	ldr	r3, [r9, r0, lsl #2]
   3cbfc:	cmp	r3, #0
   3cc00:	beq	3cbac <GetDataSlab+0x1ad80>
   3cc04:	ldr	r2, [r4, #-8]
   3cc08:	mul	r3, r2, r3
   3cc0c:	add	r5, r5, r3, lsl #2
   3cc10:	add	lr, lr, r3
   3cc14:	b	3cbac <GetDataSlab+0x1ad80>
   3cc18:	mov	r0, #1
   3cc1c:	add	r3, sp, #176	; 0xb0
   3cc20:	add	r3, r3, r0, lsl #2
   3cc24:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cc28:	add	r5, r5, r3, lsl #2
   3cc2c:	add	lr, lr, r3
   3cc30:	ldr	r3, [sp, #20]
   3cc34:	add	sl, sl, fp
   3cc38:	cmp	sl, r3
   3cc3c:	blt	3cae4 <GetDataSlab+0x1acb8>
   3cc40:	b	30874 <GetDataSlab+0xea48>
   3cc44:	cmp	r3, #0
   3cc48:	ble	30874 <GetDataSlab+0xea48>
   3cc4c:	ldr	r3, [r9]
   3cc50:	mov	sl, #0
   3cc54:	mov	r7, sl
   3cc58:	str	r3, [sp, #8]
   3cc5c:	ldr	r3, [sp, #8]
   3cc60:	cmp	r3, #0
   3cc64:	addne	r5, r5, r3, lsl #2
   3cc68:	addne	lr, lr, r3
   3cc6c:	cmp	fp, #0
   3cc70:	ble	3ccb0 <GetDataSlab+0x1ae84>
   3cc74:	ldr	r3, [sp, #4]
   3cc78:	sub	r1, r5, #4
   3cc7c:	add	r2, r3, sl, lsl #2
   3cc80:	mov	r3, #0
   3cc84:	ldr	r0, [r1, #4]!
   3cc88:	add	r3, r3, #1
   3cc8c:	str	r0, [r2], #4
   3cc90:	ldr	r0, [sp, #228]	; 0xe4
   3cc94:	ldr	fp, [r0]
   3cc98:	cmp	fp, r3
   3cc9c:	bgt	3cc84 <GetDataSlab+0x1ae58>
   3cca0:	ldr	r3, [r9]
   3cca4:	str	r3, [sp, #8]
   3cca8:	ldr	r3, [r8]
   3ccac:	str	r3, [sp, #16]
   3ccb0:	ldr	r2, [sp, #8]
   3ccb4:	ldr	r3, [sp, #232]	; 0xe8
   3ccb8:	cmp	r3, #1
   3ccbc:	ldr	r3, [sp, #16]
   3ccc0:	sub	r3, r3, r2
   3ccc4:	add	lr, lr, r3
   3ccc8:	add	r5, r5, r3, lsl #2
   3cccc:	ble	3cda4 <GetDataSlab+0x1af78>
   3ccd0:	ldr	r3, [sp, #100]	; 0x64
   3ccd4:	ldr	r2, [sp, #228]	; 0xe4
   3ccd8:	add	r3, r3, #1
   3ccdc:	ldr	r1, [r2, #4]
   3cce0:	str	r3, [sp, #100]	; 0x64
   3cce4:	sdiv	r2, r3, r1
   3cce8:	mls	r3, r1, r2, r3
   3ccec:	cmp	r3, #0
   3ccf0:	bne	3cd8c <GetDataSlab+0x1af60>
   3ccf4:	ldr	r3, [sp, #228]	; 0xe4
   3ccf8:	add	ip, sp, #100	; 0x64
   3ccfc:	add	r4, sp, #140	; 0x8c
   3cd00:	mov	r0, #1
   3cd04:	add	r6, r3, #4
   3cd08:	b	3cd50 <GetDataSlab+0x1af24>
   3cd0c:	ldr	r3, [r4, #-8]
   3cd10:	ldr	r1, [r9, r0, lsl #2]
   3cd14:	mla	r3, r1, r3, r2
   3cd18:	add	r5, r5, r3, lsl #2
   3cd1c:	add	lr, lr, r3
   3cd20:	ldr	r3, [sp, #232]	; 0xe8
   3cd24:	add	r0, r0, #1
   3cd28:	cmp	r3, r0
   3cd2c:	beq	3cda4 <GetDataSlab+0x1af78>
   3cd30:	ldr	r3, [ip]
   3cd34:	ldr	r1, [r6, #4]!
   3cd38:	add	r3, r3, #1
   3cd3c:	sdiv	r2, r3, r1
   3cd40:	str	r3, [ip]
   3cd44:	mls	r3, r1, r2, r3
   3cd48:	cmp	r3, #0
   3cd4c:	bne	3cd90 <GetDataSlab+0x1af64>
   3cd50:	ldr	r2, [r4], #4
   3cd54:	str	r7, [ip], #4
   3cd58:	sdiv	r3, lr, r2
   3cd5c:	mls	r3, r2, r3, lr
   3cd60:	cmp	r3, #0
   3cd64:	sub	r2, r2, r3
   3cd68:	bne	3cd0c <GetDataSlab+0x1aee0>
   3cd6c:	ldr	r3, [r9, r0, lsl #2]
   3cd70:	cmp	r3, #0
   3cd74:	beq	3cd20 <GetDataSlab+0x1aef4>
   3cd78:	ldr	r2, [r4, #-8]
   3cd7c:	mul	r3, r2, r3
   3cd80:	add	r5, r5, r3, lsl #2
   3cd84:	add	lr, lr, r3
   3cd88:	b	3cd20 <GetDataSlab+0x1aef4>
   3cd8c:	mov	r0, #1
   3cd90:	add	r3, sp, #176	; 0xb0
   3cd94:	add	r3, r3, r0, lsl #2
   3cd98:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cd9c:	add	r5, r5, r3, lsl #2
   3cda0:	add	lr, lr, r3
   3cda4:	ldr	r3, [sp, #20]
   3cda8:	add	sl, sl, fp
   3cdac:	cmp	sl, r3
   3cdb0:	blt	3cc5c <GetDataSlab+0x1ae30>
   3cdb4:	b	30874 <GetDataSlab+0xea48>
   3cdb8:	cmp	r3, #0
   3cdbc:	ble	30874 <GetDataSlab+0xea48>
   3cdc0:	ldr	r3, [r9]
   3cdc4:	mov	sl, #0
   3cdc8:	mov	r7, sl
   3cdcc:	str	r3, [sp, #8]
   3cdd0:	ldr	r3, [sp, #8]
   3cdd4:	cmp	r3, #0
   3cdd8:	addne	r5, r5, r3, lsl #3
   3cddc:	addne	lr, lr, r3
   3cde0:	cmp	fp, #0
   3cde4:	ble	3ce28 <GetDataSlab+0x1affc>
   3cde8:	ldr	r3, [sp, #4]
   3cdec:	mov	r1, r5
   3cdf0:	add	r2, r3, sl, lsl #2
   3cdf4:	mov	r3, #0
   3cdf8:	vldmia	r1!, {d7}
   3cdfc:	add	r3, r3, #1
   3ce00:	ldr	r0, [sp, #228]	; 0xe4
   3ce04:	vcvt.u32.f64	s15, d7
   3ce08:	vstmia	r2!, {s15}
   3ce0c:	ldr	fp, [r0]
   3ce10:	cmp	fp, r3
   3ce14:	bgt	3cdf8 <GetDataSlab+0x1afcc>
   3ce18:	ldr	r3, [r9]
   3ce1c:	str	r3, [sp, #8]
   3ce20:	ldr	r3, [r8]
   3ce24:	str	r3, [sp, #16]
   3ce28:	ldr	r2, [sp, #8]
   3ce2c:	ldr	r3, [sp, #232]	; 0xe8
   3ce30:	cmp	r3, #1
   3ce34:	ldr	r3, [sp, #16]
   3ce38:	sub	r3, r3, r2
   3ce3c:	add	lr, lr, r3
   3ce40:	add	r5, r5, r3, lsl #3
   3ce44:	ble	3cf1c <GetDataSlab+0x1b0f0>
   3ce48:	ldr	r3, [sp, #100]	; 0x64
   3ce4c:	ldr	r2, [sp, #228]	; 0xe4
   3ce50:	add	r3, r3, #1
   3ce54:	ldr	r1, [r2, #4]
   3ce58:	str	r3, [sp, #100]	; 0x64
   3ce5c:	sdiv	r2, r3, r1
   3ce60:	mls	r3, r1, r2, r3
   3ce64:	cmp	r3, #0
   3ce68:	bne	3cf04 <GetDataSlab+0x1b0d8>
   3ce6c:	ldr	r3, [sp, #228]	; 0xe4
   3ce70:	add	ip, sp, #100	; 0x64
   3ce74:	add	r4, sp, #140	; 0x8c
   3ce78:	mov	r0, #1
   3ce7c:	add	r6, r3, #4
   3ce80:	b	3cec8 <GetDataSlab+0x1b09c>
   3ce84:	ldr	r3, [r4, #-8]
   3ce88:	ldr	r1, [r9, r0, lsl #2]
   3ce8c:	mla	r3, r1, r3, r2
   3ce90:	add	r5, r5, r3, lsl #3
   3ce94:	add	lr, lr, r3
   3ce98:	ldr	r3, [sp, #232]	; 0xe8
   3ce9c:	add	r0, r0, #1
   3cea0:	cmp	r3, r0
   3cea4:	beq	3cf1c <GetDataSlab+0x1b0f0>
   3cea8:	ldr	r3, [ip]
   3ceac:	ldr	r1, [r6, #4]!
   3ceb0:	add	r3, r3, #1
   3ceb4:	sdiv	r2, r3, r1
   3ceb8:	str	r3, [ip]
   3cebc:	mls	r3, r1, r2, r3
   3cec0:	cmp	r3, #0
   3cec4:	bne	3cf08 <GetDataSlab+0x1b0dc>
   3cec8:	ldr	r2, [r4], #4
   3cecc:	str	r7, [ip], #4
   3ced0:	sdiv	r3, lr, r2
   3ced4:	mls	r3, r2, r3, lr
   3ced8:	cmp	r3, #0
   3cedc:	sub	r2, r2, r3
   3cee0:	bne	3ce84 <GetDataSlab+0x1b058>
   3cee4:	ldr	r3, [r9, r0, lsl #2]
   3cee8:	cmp	r3, #0
   3ceec:	beq	3ce98 <GetDataSlab+0x1b06c>
   3cef0:	ldr	r2, [r4, #-8]
   3cef4:	mul	r3, r2, r3
   3cef8:	add	r5, r5, r3, lsl #3
   3cefc:	add	lr, lr, r3
   3cf00:	b	3ce98 <GetDataSlab+0x1b06c>
   3cf04:	mov	r0, #1
   3cf08:	add	r3, sp, #176	; 0xb0
   3cf0c:	add	r3, r3, r0, lsl #2
   3cf10:	ldr	r3, [r3, #-120]	; 0xffffff88
   3cf14:	add	r5, r5, r3, lsl #3
   3cf18:	add	lr, lr, r3
   3cf1c:	ldr	r3, [sp, #20]
   3cf20:	add	sl, sl, fp
   3cf24:	cmp	sl, r3
   3cf28:	blt	3cdd0 <GetDataSlab+0x1afa4>
   3cf2c:	b	30874 <GetDataSlab+0xea48>
   3cf30:	cmp	r3, #0
   3cf34:	ble	30874 <GetDataSlab+0xea48>
   3cf38:	ldr	r3, [sp, #20]
   3cf3c:	mov	r8, #0
   3cf40:	mov	r7, r8
   3cf44:	ldr	sl, [r9]
   3cf48:	lsl	r3, r3, #2
   3cf4c:	str	r3, [sp, #12]
   3cf50:	ldr	r3, [sp, #36]	; 0x24
   3cf54:	sub	fp, r3, sl
   3cf58:	lsl	r3, sl, #2
   3cf5c:	str	r3, [sp, #24]
   3cf60:	lsl	r3, fp, #2
   3cf64:	str	r3, [sp, #8]
   3cf68:	cmp	sl, #0
   3cf6c:	beq	3cf7c <GetDataSlab+0x1b150>
   3cf70:	ldr	r3, [sp, #24]
   3cf74:	add	r4, r4, sl
   3cf78:	add	r6, r6, r3
   3cf7c:	ldr	r3, [sp, #20]
   3cf80:	cmp	r3, #0
   3cf84:	ble	3cfb4 <GetDataSlab+0x1b188>
   3cf88:	ldr	r3, [sp, #4]
   3cf8c:	mov	r1, r6
   3cf90:	add	r0, r3, r8, lsl #3
   3cf94:	ldr	r3, [sp, #12]
   3cf98:	add	ip, r6, r3
   3cf9c:	ldr	r3, [r1], #4
   3cfa0:	mov	r2, r3
   3cfa4:	asr	r3, r3, #31
   3cfa8:	cmp	r1, ip
   3cfac:	strd	r2, [r0], #8
   3cfb0:	bne	3cf9c <GetDataSlab+0x1b170>
   3cfb4:	ldr	r3, [sp, #232]	; 0xe8
   3cfb8:	add	r4, r4, fp
   3cfbc:	cmp	r3, #1
   3cfc0:	ldr	r3, [sp, #8]
   3cfc4:	add	r6, r6, r3
   3cfc8:	ble	3d0a0 <GetDataSlab+0x1b274>
   3cfcc:	ldr	r3, [sp, #100]	; 0x64
   3cfd0:	ldr	r2, [sp, #228]	; 0xe4
   3cfd4:	add	r3, r3, #1
   3cfd8:	ldr	r1, [r2, #4]
   3cfdc:	str	r3, [sp, #100]	; 0x64
   3cfe0:	sdiv	r2, r3, r1
   3cfe4:	mls	r3, r1, r2, r3
   3cfe8:	cmp	r3, #0
   3cfec:	bne	3d088 <GetDataSlab+0x1b25c>
   3cff0:	ldr	r3, [sp, #228]	; 0xe4
   3cff4:	add	ip, sp, #100	; 0x64
   3cff8:	add	lr, sp, #140	; 0x8c
   3cffc:	mov	r0, #1
   3d000:	add	r5, r3, #4
   3d004:	b	3d04c <GetDataSlab+0x1b220>
   3d008:	ldr	r3, [lr, #-8]
   3d00c:	ldr	r1, [r9, r0, lsl #2]
   3d010:	mla	r3, r1, r3, r2
   3d014:	add	r6, r6, r3, lsl #2
   3d018:	add	r4, r4, r3
   3d01c:	ldr	r3, [sp, #232]	; 0xe8
   3d020:	add	r0, r0, #1
   3d024:	cmp	r3, r0
   3d028:	beq	3d0a0 <GetDataSlab+0x1b274>
   3d02c:	ldr	r3, [ip]
   3d030:	ldr	r1, [r5, #4]!
   3d034:	add	r3, r3, #1
   3d038:	sdiv	r2, r3, r1
   3d03c:	str	r3, [ip]
   3d040:	mls	r3, r1, r2, r3
   3d044:	cmp	r3, #0
   3d048:	bne	3d08c <GetDataSlab+0x1b260>
   3d04c:	ldr	r2, [lr], #4
   3d050:	str	r7, [ip], #4
   3d054:	sdiv	r3, r4, r2
   3d058:	mls	r3, r2, r3, r4
   3d05c:	cmp	r3, #0
   3d060:	sub	r2, r2, r3
   3d064:	bne	3d008 <GetDataSlab+0x1b1dc>
   3d068:	ldr	r3, [r9, r0, lsl #2]
   3d06c:	cmp	r3, #0
   3d070:	beq	3d01c <GetDataSlab+0x1b1f0>
   3d074:	ldr	r2, [lr, #-8]
   3d078:	mul	r3, r2, r3
   3d07c:	add	r6, r6, r3, lsl #2
   3d080:	add	r4, r4, r3
   3d084:	b	3d01c <GetDataSlab+0x1b1f0>
   3d088:	mov	r0, #1
   3d08c:	add	r3, sp, #176	; 0xb0
   3d090:	add	r3, r3, r0, lsl #2
   3d094:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d098:	add	r6, r6, r3, lsl #2
   3d09c:	add	r4, r4, r3
   3d0a0:	ldr	r3, [sp, #20]
   3d0a4:	add	r8, r8, r3
   3d0a8:	ldr	r3, [sp, #16]
   3d0ac:	cmp	r8, r3
   3d0b0:	blt	3cf68 <GetDataSlab+0x1b13c>
   3d0b4:	b	30874 <GetDataSlab+0xea48>
   3d0b8:	cmp	r3, #0
   3d0bc:	ble	30874 <GetDataSlab+0xea48>
   3d0c0:	ldr	r3, [r9]
   3d0c4:	mov	sl, #0
   3d0c8:	mov	r7, sl
   3d0cc:	str	r3, [sp, #8]
   3d0d0:	ldr	r3, [sp, #8]
   3d0d4:	cmp	r3, #0
   3d0d8:	addne	r5, r5, r3, lsl #2
   3d0dc:	addne	r4, r4, r3
   3d0e0:	cmp	fp, #0
   3d0e4:	ble	3d124 <GetDataSlab+0x1b2f8>
   3d0e8:	ldr	r3, [sp, #4]
   3d0ec:	sub	r1, r5, #4
   3d0f0:	add	r0, r3, sl
   3d0f4:	mov	r3, r0
   3d0f8:	ldr	r2, [r1, #4]!
   3d0fc:	ldr	ip, [sp, #228]	; 0xe4
   3d100:	strb	r2, [r3], #1
   3d104:	sub	r2, r3, r0
   3d108:	ldr	fp, [ip]
   3d10c:	cmp	r2, fp
   3d110:	blt	3d0f8 <GetDataSlab+0x1b2cc>
   3d114:	ldr	r3, [r9]
   3d118:	str	r3, [sp, #8]
   3d11c:	ldr	r3, [r8]
   3d120:	str	r3, [sp, #16]
   3d124:	ldr	r2, [sp, #8]
   3d128:	ldr	r3, [sp, #232]	; 0xe8
   3d12c:	cmp	r3, #1
   3d130:	ldr	r3, [sp, #16]
   3d134:	sub	r3, r3, r2
   3d138:	add	r4, r4, r3
   3d13c:	add	r5, r5, r3, lsl #2
   3d140:	ble	3d218 <GetDataSlab+0x1b3ec>
   3d144:	ldr	r3, [sp, #100]	; 0x64
   3d148:	ldr	r2, [sp, #228]	; 0xe4
   3d14c:	add	r3, r3, #1
   3d150:	ldr	r1, [r2, #4]
   3d154:	str	r3, [sp, #100]	; 0x64
   3d158:	sdiv	r2, r3, r1
   3d15c:	mls	r3, r1, r2, r3
   3d160:	cmp	r3, #0
   3d164:	bne	3d200 <GetDataSlab+0x1b3d4>
   3d168:	ldr	r3, [sp, #228]	; 0xe4
   3d16c:	add	ip, sp, #100	; 0x64
   3d170:	add	lr, sp, #140	; 0x8c
   3d174:	mov	r0, #1
   3d178:	add	r6, r3, #4
   3d17c:	b	3d1c4 <GetDataSlab+0x1b398>
   3d180:	ldr	r3, [lr, #-8]
   3d184:	ldr	r1, [r9, r0, lsl #2]
   3d188:	mla	r3, r1, r3, r2
   3d18c:	add	r5, r5, r3, lsl #2
   3d190:	add	r4, r4, r3
   3d194:	ldr	r3, [sp, #232]	; 0xe8
   3d198:	add	r0, r0, #1
   3d19c:	cmp	r3, r0
   3d1a0:	beq	3d218 <GetDataSlab+0x1b3ec>
   3d1a4:	ldr	r3, [ip]
   3d1a8:	ldr	r1, [r6, #4]!
   3d1ac:	add	r3, r3, #1
   3d1b0:	sdiv	r2, r3, r1
   3d1b4:	str	r3, [ip]
   3d1b8:	mls	r3, r1, r2, r3
   3d1bc:	cmp	r3, #0
   3d1c0:	bne	3d204 <GetDataSlab+0x1b3d8>
   3d1c4:	ldr	r2, [lr], #4
   3d1c8:	str	r7, [ip], #4
   3d1cc:	sdiv	r3, r4, r2
   3d1d0:	mls	r3, r2, r3, r4
   3d1d4:	cmp	r3, #0
   3d1d8:	sub	r2, r2, r3
   3d1dc:	bne	3d180 <GetDataSlab+0x1b354>
   3d1e0:	ldr	r3, [r9, r0, lsl #2]
   3d1e4:	cmp	r3, #0
   3d1e8:	beq	3d194 <GetDataSlab+0x1b368>
   3d1ec:	ldr	r2, [lr, #-8]
   3d1f0:	mul	r3, r2, r3
   3d1f4:	add	r5, r5, r3, lsl #2
   3d1f8:	add	r4, r4, r3
   3d1fc:	b	3d194 <GetDataSlab+0x1b368>
   3d200:	mov	r0, #1
   3d204:	add	r3, sp, #176	; 0xb0
   3d208:	add	r3, r3, r0, lsl #2
   3d20c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d210:	add	r5, r5, r3, lsl #2
   3d214:	add	r4, r4, r3
   3d218:	ldr	r3, [sp, #20]
   3d21c:	add	sl, sl, fp
   3d220:	cmp	sl, r3
   3d224:	blt	3d0d0 <GetDataSlab+0x1b2a4>
   3d228:	b	30874 <GetDataSlab+0xea48>
   3d22c:	cmp	r3, #0
   3d230:	ble	30874 <GetDataSlab+0xea48>
   3d234:	ldr	r3, [r9]
   3d238:	mov	sl, #0
   3d23c:	mov	r7, sl
   3d240:	str	r3, [sp, #8]
   3d244:	ldr	r3, [sp, #8]
   3d248:	cmp	r3, #0
   3d24c:	addne	r5, r5, r3, lsl #1
   3d250:	addne	r4, r4, r3
   3d254:	cmp	fp, #0
   3d258:	ble	3d298 <GetDataSlab+0x1b46c>
   3d25c:	ldr	r3, [sp, #4]
   3d260:	sub	r1, r5, #2
   3d264:	add	r0, r3, sl
   3d268:	mov	r3, r0
   3d26c:	ldrh	r2, [r1, #2]!
   3d270:	ldr	ip, [sp, #228]	; 0xe4
   3d274:	strb	r2, [r3], #1
   3d278:	sub	r2, r3, r0
   3d27c:	ldr	fp, [ip]
   3d280:	cmp	fp, r2
   3d284:	bgt	3d26c <GetDataSlab+0x1b440>
   3d288:	ldr	r3, [r9]
   3d28c:	str	r3, [sp, #8]
   3d290:	ldr	r3, [r8]
   3d294:	str	r3, [sp, #16]
   3d298:	ldr	r2, [sp, #8]
   3d29c:	ldr	r3, [sp, #232]	; 0xe8
   3d2a0:	cmp	r3, #1
   3d2a4:	ldr	r3, [sp, #16]
   3d2a8:	sub	r3, r3, r2
   3d2ac:	add	r4, r4, r3
   3d2b0:	add	r5, r5, r3, lsl #1
   3d2b4:	ble	3d38c <GetDataSlab+0x1b560>
   3d2b8:	ldr	r3, [sp, #100]	; 0x64
   3d2bc:	ldr	r2, [sp, #228]	; 0xe4
   3d2c0:	add	r3, r3, #1
   3d2c4:	ldr	r1, [r2, #4]
   3d2c8:	str	r3, [sp, #100]	; 0x64
   3d2cc:	sdiv	r2, r3, r1
   3d2d0:	mls	r3, r1, r2, r3
   3d2d4:	cmp	r3, #0
   3d2d8:	bne	3d374 <GetDataSlab+0x1b548>
   3d2dc:	ldr	r3, [sp, #228]	; 0xe4
   3d2e0:	add	ip, sp, #100	; 0x64
   3d2e4:	add	lr, sp, #140	; 0x8c
   3d2e8:	mov	r0, #1
   3d2ec:	add	r6, r3, #4
   3d2f0:	b	3d338 <GetDataSlab+0x1b50c>
   3d2f4:	ldr	r3, [lr, #-8]
   3d2f8:	ldr	r1, [r9, r0, lsl #2]
   3d2fc:	mla	r3, r1, r3, r2
   3d300:	add	r5, r5, r3, lsl #1
   3d304:	add	r4, r4, r3
   3d308:	ldr	r3, [sp, #232]	; 0xe8
   3d30c:	add	r0, r0, #1
   3d310:	cmp	r3, r0
   3d314:	beq	3d38c <GetDataSlab+0x1b560>
   3d318:	ldr	r3, [ip]
   3d31c:	ldr	r1, [r6, #4]!
   3d320:	add	r3, r3, #1
   3d324:	sdiv	r2, r3, r1
   3d328:	str	r3, [ip]
   3d32c:	mls	r3, r1, r2, r3
   3d330:	cmp	r3, #0
   3d334:	bne	3d378 <GetDataSlab+0x1b54c>
   3d338:	ldr	r2, [lr], #4
   3d33c:	str	r7, [ip], #4
   3d340:	sdiv	r3, r4, r2
   3d344:	mls	r3, r2, r3, r4
   3d348:	cmp	r3, #0
   3d34c:	sub	r2, r2, r3
   3d350:	bne	3d2f4 <GetDataSlab+0x1b4c8>
   3d354:	ldr	r3, [r9, r0, lsl #2]
   3d358:	cmp	r3, #0
   3d35c:	beq	3d308 <GetDataSlab+0x1b4dc>
   3d360:	ldr	r2, [lr, #-8]
   3d364:	mul	r3, r2, r3
   3d368:	add	r5, r5, r3, lsl #1
   3d36c:	add	r4, r4, r3
   3d370:	b	3d308 <GetDataSlab+0x1b4dc>
   3d374:	mov	r0, #1
   3d378:	add	r3, sp, #176	; 0xb0
   3d37c:	add	r3, r3, r0, lsl #2
   3d380:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d384:	add	r5, r5, r3, lsl #1
   3d388:	add	r4, r4, r3
   3d38c:	ldr	r3, [sp, #20]
   3d390:	add	sl, sl, fp
   3d394:	cmp	sl, r3
   3d398:	blt	3d244 <GetDataSlab+0x1b418>
   3d39c:	b	30874 <GetDataSlab+0xea48>
   3d3a0:	cmp	r3, #0
   3d3a4:	ble	30874 <GetDataSlab+0xea48>
   3d3a8:	ldr	r3, [r9]
   3d3ac:	mov	sl, #0
   3d3b0:	mov	r7, sl
   3d3b4:	str	r3, [sp, #8]
   3d3b8:	ldr	r3, [sp, #8]
   3d3bc:	cmp	r3, #0
   3d3c0:	addne	r5, r5, r3, lsl #2
   3d3c4:	addne	r4, r4, r3
   3d3c8:	cmp	fp, #0
   3d3cc:	ble	3d40c <GetDataSlab+0x1b5e0>
   3d3d0:	ldr	r3, [sp, #4]
   3d3d4:	sub	r1, r5, #4
   3d3d8:	add	r0, r3, sl
   3d3dc:	mov	r3, r0
   3d3e0:	ldr	r2, [r1, #4]!
   3d3e4:	ldr	ip, [sp, #228]	; 0xe4
   3d3e8:	strb	r2, [r3], #1
   3d3ec:	sub	r2, r3, r0
   3d3f0:	ldr	fp, [ip]
   3d3f4:	cmp	fp, r2
   3d3f8:	bgt	3d3e0 <GetDataSlab+0x1b5b4>
   3d3fc:	ldr	r3, [r9]
   3d400:	str	r3, [sp, #8]
   3d404:	ldr	r3, [r8]
   3d408:	str	r3, [sp, #16]
   3d40c:	ldr	r2, [sp, #8]
   3d410:	ldr	r3, [sp, #232]	; 0xe8
   3d414:	cmp	r3, #1
   3d418:	ldr	r3, [sp, #16]
   3d41c:	sub	r3, r3, r2
   3d420:	add	r4, r4, r3
   3d424:	add	r5, r5, r3, lsl #2
   3d428:	ble	3d500 <GetDataSlab+0x1b6d4>
   3d42c:	ldr	r3, [sp, #100]	; 0x64
   3d430:	ldr	r2, [sp, #228]	; 0xe4
   3d434:	add	r3, r3, #1
   3d438:	ldr	r1, [r2, #4]
   3d43c:	str	r3, [sp, #100]	; 0x64
   3d440:	sdiv	r2, r3, r1
   3d444:	mls	r3, r1, r2, r3
   3d448:	cmp	r3, #0
   3d44c:	bne	3d4e8 <GetDataSlab+0x1b6bc>
   3d450:	ldr	r3, [sp, #228]	; 0xe4
   3d454:	add	ip, sp, #100	; 0x64
   3d458:	add	lr, sp, #140	; 0x8c
   3d45c:	mov	r0, #1
   3d460:	add	r6, r3, #4
   3d464:	b	3d4ac <GetDataSlab+0x1b680>
   3d468:	ldr	r3, [lr, #-8]
   3d46c:	ldr	r1, [r9, r0, lsl #2]
   3d470:	mla	r3, r1, r3, r2
   3d474:	add	r5, r5, r3, lsl #2
   3d478:	add	r4, r4, r3
   3d47c:	ldr	r3, [sp, #232]	; 0xe8
   3d480:	add	r0, r0, #1
   3d484:	cmp	r3, r0
   3d488:	beq	3d500 <GetDataSlab+0x1b6d4>
   3d48c:	ldr	r3, [ip]
   3d490:	ldr	r1, [r6, #4]!
   3d494:	add	r3, r3, #1
   3d498:	sdiv	r2, r3, r1
   3d49c:	str	r3, [ip]
   3d4a0:	mls	r3, r1, r2, r3
   3d4a4:	cmp	r3, #0
   3d4a8:	bne	3d4ec <GetDataSlab+0x1b6c0>
   3d4ac:	ldr	r2, [lr], #4
   3d4b0:	str	r7, [ip], #4
   3d4b4:	sdiv	r3, r4, r2
   3d4b8:	mls	r3, r2, r3, r4
   3d4bc:	cmp	r3, #0
   3d4c0:	sub	r2, r2, r3
   3d4c4:	bne	3d468 <GetDataSlab+0x1b63c>
   3d4c8:	ldr	r3, [r9, r0, lsl #2]
   3d4cc:	cmp	r3, #0
   3d4d0:	beq	3d47c <GetDataSlab+0x1b650>
   3d4d4:	ldr	r2, [lr, #-8]
   3d4d8:	mul	r3, r2, r3
   3d4dc:	add	r5, r5, r3, lsl #2
   3d4e0:	add	r4, r4, r3
   3d4e4:	b	3d47c <GetDataSlab+0x1b650>
   3d4e8:	mov	r0, #1
   3d4ec:	add	r3, sp, #176	; 0xb0
   3d4f0:	add	r3, r3, r0, lsl #2
   3d4f4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d4f8:	add	r5, r5, r3, lsl #2
   3d4fc:	add	r4, r4, r3
   3d500:	ldr	r3, [sp, #20]
   3d504:	add	sl, sl, fp
   3d508:	cmp	sl, r3
   3d50c:	blt	3d3b8 <GetDataSlab+0x1b58c>
   3d510:	b	30874 <GetDataSlab+0xea48>
   3d514:	cmp	r3, #0
   3d518:	ble	30874 <GetDataSlab+0xea48>
   3d51c:	ldr	r3, [sp, #20]
   3d520:	mov	r8, #0
   3d524:	mov	r7, r8
   3d528:	ldr	sl, [r9]
   3d52c:	sub	r3, r3, #1
   3d530:	str	r3, [sp, #8]
   3d534:	ldr	r3, [sp, #40]	; 0x28
   3d538:	sub	fp, r3, sl
   3d53c:	ldr	r3, [sp, #20]
   3d540:	cmp	sl, #0
   3d544:	addne	r5, r5, sl
   3d548:	addne	r4, r4, sl
   3d54c:	cmp	r3, #0
   3d550:	ble	3d57c <GetDataSlab+0x1b750>
   3d554:	ldr	r3, [sp, #4]
   3d558:	sub	r1, r5, #1
   3d55c:	add	r0, r3, r8, lsl #3
   3d560:	ldr	r3, [sp, #8]
   3d564:	add	ip, r5, r3
   3d568:	ldrsb	r2, [r1, #1]!
   3d56c:	asr	r3, r2, #31
   3d570:	cmp	r1, ip
   3d574:	strd	r2, [r0], #8
   3d578:	bne	3d568 <GetDataSlab+0x1b73c>
   3d57c:	ldr	r3, [sp, #232]	; 0xe8
   3d580:	add	r4, r4, fp
   3d584:	add	r5, r5, fp
   3d588:	cmp	r3, #1
   3d58c:	ble	3d664 <GetDataSlab+0x1b838>
   3d590:	ldr	r3, [sp, #100]	; 0x64
   3d594:	ldr	r2, [sp, #228]	; 0xe4
   3d598:	add	r3, r3, #1
   3d59c:	ldr	r1, [r2, #4]
   3d5a0:	str	r3, [sp, #100]	; 0x64
   3d5a4:	sdiv	r2, r3, r1
   3d5a8:	mls	r3, r1, r2, r3
   3d5ac:	cmp	r3, #0
   3d5b0:	bne	3d64c <GetDataSlab+0x1b820>
   3d5b4:	ldr	r3, [sp, #228]	; 0xe4
   3d5b8:	add	ip, sp, #100	; 0x64
   3d5bc:	add	lr, sp, #140	; 0x8c
   3d5c0:	mov	r0, #1
   3d5c4:	add	r6, r3, #4
   3d5c8:	b	3d610 <GetDataSlab+0x1b7e4>
   3d5cc:	ldr	r3, [lr, #-8]
   3d5d0:	ldr	r1, [r9, r0, lsl #2]
   3d5d4:	mla	r3, r1, r3, r2
   3d5d8:	add	r5, r5, r3
   3d5dc:	add	r4, r4, r3
   3d5e0:	ldr	r3, [sp, #232]	; 0xe8
   3d5e4:	add	r0, r0, #1
   3d5e8:	cmp	r3, r0
   3d5ec:	beq	3d664 <GetDataSlab+0x1b838>
   3d5f0:	ldr	r3, [ip]
   3d5f4:	ldr	r1, [r6, #4]!
   3d5f8:	add	r3, r3, #1
   3d5fc:	sdiv	r2, r3, r1
   3d600:	str	r3, [ip]
   3d604:	mls	r3, r1, r2, r3
   3d608:	cmp	r3, #0
   3d60c:	bne	3d650 <GetDataSlab+0x1b824>
   3d610:	ldr	r2, [lr], #4
   3d614:	str	r7, [ip], #4
   3d618:	sdiv	r3, r4, r2
   3d61c:	mls	r3, r2, r3, r4
   3d620:	cmp	r3, #0
   3d624:	sub	r2, r2, r3
   3d628:	bne	3d5cc <GetDataSlab+0x1b7a0>
   3d62c:	ldr	r3, [r9, r0, lsl #2]
   3d630:	cmp	r3, #0
   3d634:	beq	3d5e0 <GetDataSlab+0x1b7b4>
   3d638:	ldr	r2, [lr, #-8]
   3d63c:	mul	r3, r2, r3
   3d640:	add	r5, r5, r3
   3d644:	add	r4, r4, r3
   3d648:	b	3d5e0 <GetDataSlab+0x1b7b4>
   3d64c:	mov	r0, #1
   3d650:	add	r3, sp, #176	; 0xb0
   3d654:	add	r3, r3, r0, lsl #2
   3d658:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d65c:	add	r4, r4, r3
   3d660:	add	r5, r5, r3
   3d664:	ldr	r3, [sp, #20]
   3d668:	add	r8, r8, r3
   3d66c:	ldr	r3, [sp, #16]
   3d670:	cmp	r8, r3
   3d674:	blt	3d53c <GetDataSlab+0x1b710>
   3d678:	b	30874 <GetDataSlab+0xea48>
   3d67c:	cmp	r3, #0
   3d680:	ble	30874 <GetDataSlab+0xea48>
   3d684:	ldr	r3, [r9]
   3d688:	mov	sl, #0
   3d68c:	mov	r7, sl
   3d690:	str	r3, [sp, #8]
   3d694:	ldr	r3, [sp, #8]
   3d698:	cmp	r3, #0
   3d69c:	addne	r5, r5, r3, lsl #2
   3d6a0:	addne	r4, r4, r3
   3d6a4:	cmp	fp, #0
   3d6a8:	ble	3d6f0 <GetDataSlab+0x1b8c4>
   3d6ac:	ldr	r3, [sp, #4]
   3d6b0:	mov	r2, r5
   3d6b4:	add	r0, r3, sl
   3d6b8:	mov	r3, r0
   3d6bc:	vldmia	r2!, {s15}
   3d6c0:	ldr	ip, [sp, #228]	; 0xe4
   3d6c4:	vcvt.u32.f32	s15, s15
   3d6c8:	vmov	r1, s15
   3d6cc:	strb	r1, [r3], #1
   3d6d0:	sub	r1, r3, r0
   3d6d4:	ldr	fp, [ip]
   3d6d8:	cmp	fp, r1
   3d6dc:	bgt	3d6bc <GetDataSlab+0x1b890>
   3d6e0:	ldr	r3, [r9]
   3d6e4:	str	r3, [sp, #8]
   3d6e8:	ldr	r3, [r8]
   3d6ec:	str	r3, [sp, #16]
   3d6f0:	ldr	r2, [sp, #8]
   3d6f4:	ldr	r3, [sp, #232]	; 0xe8
   3d6f8:	cmp	r3, #1
   3d6fc:	ldr	r3, [sp, #16]
   3d700:	sub	r3, r3, r2
   3d704:	add	r4, r4, r3
   3d708:	add	r5, r5, r3, lsl #2
   3d70c:	ble	3d7e4 <GetDataSlab+0x1b9b8>
   3d710:	ldr	r3, [sp, #100]	; 0x64
   3d714:	ldr	r2, [sp, #228]	; 0xe4
   3d718:	add	r3, r3, #1
   3d71c:	ldr	r1, [r2, #4]
   3d720:	str	r3, [sp, #100]	; 0x64
   3d724:	sdiv	r2, r3, r1
   3d728:	mls	r3, r1, r2, r3
   3d72c:	cmp	r3, #0
   3d730:	bne	3d7cc <GetDataSlab+0x1b9a0>
   3d734:	ldr	r3, [sp, #228]	; 0xe4
   3d738:	add	ip, sp, #100	; 0x64
   3d73c:	add	lr, sp, #140	; 0x8c
   3d740:	mov	r0, #1
   3d744:	add	r6, r3, #4
   3d748:	b	3d790 <GetDataSlab+0x1b964>
   3d74c:	ldr	r3, [lr, #-8]
   3d750:	ldr	r1, [r9, r0, lsl #2]
   3d754:	mla	r3, r1, r3, r2
   3d758:	add	r5, r5, r3, lsl #2
   3d75c:	add	r4, r4, r3
   3d760:	ldr	r3, [sp, #232]	; 0xe8
   3d764:	add	r0, r0, #1
   3d768:	cmp	r3, r0
   3d76c:	beq	3d7e4 <GetDataSlab+0x1b9b8>
   3d770:	ldr	r3, [ip]
   3d774:	ldr	r1, [r6, #4]!
   3d778:	add	r3, r3, #1
   3d77c:	sdiv	r2, r3, r1
   3d780:	str	r3, [ip]
   3d784:	mls	r3, r1, r2, r3
   3d788:	cmp	r3, #0
   3d78c:	bne	3d7d0 <GetDataSlab+0x1b9a4>
   3d790:	ldr	r2, [lr], #4
   3d794:	str	r7, [ip], #4
   3d798:	sdiv	r3, r4, r2
   3d79c:	mls	r3, r2, r3, r4
   3d7a0:	cmp	r3, #0
   3d7a4:	sub	r2, r2, r3
   3d7a8:	bne	3d74c <GetDataSlab+0x1b920>
   3d7ac:	ldr	r3, [r9, r0, lsl #2]
   3d7b0:	cmp	r3, #0
   3d7b4:	beq	3d760 <GetDataSlab+0x1b934>
   3d7b8:	ldr	r2, [lr, #-8]
   3d7bc:	mul	r3, r2, r3
   3d7c0:	add	r5, r5, r3, lsl #2
   3d7c4:	add	r4, r4, r3
   3d7c8:	b	3d760 <GetDataSlab+0x1b934>
   3d7cc:	mov	r0, #1
   3d7d0:	add	r3, sp, #176	; 0xb0
   3d7d4:	add	r3, r3, r0, lsl #2
   3d7d8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d7dc:	add	r5, r5, r3, lsl #2
   3d7e0:	add	r4, r4, r3
   3d7e4:	ldr	r3, [sp, #20]
   3d7e8:	add	sl, sl, fp
   3d7ec:	cmp	sl, r3
   3d7f0:	blt	3d694 <GetDataSlab+0x1b868>
   3d7f4:	b	30874 <GetDataSlab+0xea48>
   3d7f8:	cmp	r3, #0
   3d7fc:	ble	30874 <GetDataSlab+0xea48>
   3d800:	ldr	r3, [r9]
   3d804:	mov	sl, #0
   3d808:	mov	r7, sl
   3d80c:	str	r3, [sp, #8]
   3d810:	ldr	r3, [sp, #8]
   3d814:	cmp	r3, #0
   3d818:	addne	r5, r5, r3
   3d81c:	addne	lr, lr, r3
   3d820:	cmp	fp, #0
   3d824:	ble	3d868 <GetDataSlab+0x1ba3c>
   3d828:	ldr	r3, [sp, #4]
   3d82c:	add	r2, r3, sl, lsl #2
   3d830:	sub	r3, r5, #1
   3d834:	ldrb	r0, [r3, #1]
   3d838:	add	r1, r3, #2
   3d83c:	add	r3, r3, #1
   3d840:	sub	r1, r1, r5
   3d844:	str	r0, [r2], #4
   3d848:	ldr	r0, [sp, #228]	; 0xe4
   3d84c:	ldr	fp, [r0]
   3d850:	cmp	fp, r1
   3d854:	bgt	3d834 <GetDataSlab+0x1ba08>
   3d858:	ldr	r3, [r9]
   3d85c:	str	r3, [sp, #8]
   3d860:	ldr	r3, [r8]
   3d864:	str	r3, [sp, #16]
   3d868:	ldr	r2, [sp, #8]
   3d86c:	ldr	r3, [sp, #232]	; 0xe8
   3d870:	cmp	r3, #1
   3d874:	ldr	r3, [sp, #16]
   3d878:	sub	r3, r3, r2
   3d87c:	add	lr, lr, r3
   3d880:	add	r5, r5, r3
   3d884:	ble	3d95c <GetDataSlab+0x1bb30>
   3d888:	ldr	r3, [sp, #100]	; 0x64
   3d88c:	ldr	r2, [sp, #228]	; 0xe4
   3d890:	add	r3, r3, #1
   3d894:	ldr	r1, [r2, #4]
   3d898:	str	r3, [sp, #100]	; 0x64
   3d89c:	sdiv	r2, r3, r1
   3d8a0:	mls	r3, r1, r2, r3
   3d8a4:	cmp	r3, #0
   3d8a8:	bne	3d944 <GetDataSlab+0x1bb18>
   3d8ac:	ldr	r3, [sp, #228]	; 0xe4
   3d8b0:	add	ip, sp, #100	; 0x64
   3d8b4:	add	r4, sp, #140	; 0x8c
   3d8b8:	mov	r0, #1
   3d8bc:	add	r6, r3, #4
   3d8c0:	b	3d908 <GetDataSlab+0x1badc>
   3d8c4:	ldr	r3, [r4, #-8]
   3d8c8:	ldr	r1, [r9, r0, lsl #2]
   3d8cc:	mla	r3, r1, r3, r2
   3d8d0:	add	r5, r5, r3
   3d8d4:	add	lr, lr, r3
   3d8d8:	ldr	r3, [sp, #232]	; 0xe8
   3d8dc:	add	r0, r0, #1
   3d8e0:	cmp	r3, r0
   3d8e4:	beq	3d95c <GetDataSlab+0x1bb30>
   3d8e8:	ldr	r3, [ip]
   3d8ec:	ldr	r1, [r6, #4]!
   3d8f0:	add	r3, r3, #1
   3d8f4:	sdiv	r2, r3, r1
   3d8f8:	str	r3, [ip]
   3d8fc:	mls	r3, r1, r2, r3
   3d900:	cmp	r3, #0
   3d904:	bne	3d948 <GetDataSlab+0x1bb1c>
   3d908:	ldr	r2, [r4], #4
   3d90c:	str	r7, [ip], #4
   3d910:	sdiv	r3, lr, r2
   3d914:	mls	r3, r2, r3, lr
   3d918:	cmp	r3, #0
   3d91c:	sub	r2, r2, r3
   3d920:	bne	3d8c4 <GetDataSlab+0x1ba98>
   3d924:	ldr	r3, [r9, r0, lsl #2]
   3d928:	cmp	r3, #0
   3d92c:	beq	3d8d8 <GetDataSlab+0x1baac>
   3d930:	ldr	r2, [r4, #-8]
   3d934:	mul	r3, r2, r3
   3d938:	add	r5, r5, r3
   3d93c:	add	lr, lr, r3
   3d940:	b	3d8d8 <GetDataSlab+0x1baac>
   3d944:	mov	r0, #1
   3d948:	add	r3, sp, #176	; 0xb0
   3d94c:	add	r3, r3, r0, lsl #2
   3d950:	ldr	r3, [r3, #-120]	; 0xffffff88
   3d954:	add	lr, lr, r3
   3d958:	add	r5, r5, r3
   3d95c:	ldr	r3, [sp, #20]
   3d960:	add	sl, sl, fp
   3d964:	cmp	sl, r3
   3d968:	blt	3d810 <GetDataSlab+0x1b9e4>
   3d96c:	b	30874 <GetDataSlab+0xea48>
   3d970:	cmp	r3, #0
   3d974:	ble	30874 <GetDataSlab+0xea48>
   3d978:	ldr	r3, [sp, #20]
   3d97c:	mov	r8, #0
   3d980:	mov	r7, r8
   3d984:	ldr	sl, [r9]
   3d988:	lsl	r3, r3, #2
   3d98c:	str	r3, [sp, #12]
   3d990:	ldr	r3, [sp, #36]	; 0x24
   3d994:	sub	fp, r3, sl
   3d998:	lsl	r3, sl, #2
   3d99c:	str	r3, [sp, #24]
   3d9a0:	lsl	r3, fp, #2
   3d9a4:	str	r3, [sp, #8]
   3d9a8:	cmp	sl, #0
   3d9ac:	beq	3d9bc <GetDataSlab+0x1bb90>
   3d9b0:	ldr	r3, [sp, #24]
   3d9b4:	add	r4, r4, sl
   3d9b8:	add	r6, r6, r3
   3d9bc:	ldr	r3, [sp, #20]
   3d9c0:	cmp	r3, #0
   3d9c4:	ble	3d9f0 <GetDataSlab+0x1bbc4>
   3d9c8:	ldr	r3, [sp, #4]
   3d9cc:	mov	r1, r6
   3d9d0:	add	r2, r3, r8, lsl #3
   3d9d4:	ldr	r3, [sp, #12]
   3d9d8:	add	r0, r6, r3
   3d9dc:	ldr	r3, [r1], #4
   3d9e0:	cmp	r1, r0
   3d9e4:	stm	r2, {r3, r7}
   3d9e8:	add	r2, r2, #8
   3d9ec:	bne	3d9dc <GetDataSlab+0x1bbb0>
   3d9f0:	ldr	r3, [sp, #232]	; 0xe8
   3d9f4:	add	r4, r4, fp
   3d9f8:	cmp	r3, #1
   3d9fc:	ldr	r3, [sp, #8]
   3da00:	add	r6, r6, r3
   3da04:	ble	3dadc <GetDataSlab+0x1bcb0>
   3da08:	ldr	r3, [sp, #100]	; 0x64
   3da0c:	ldr	r2, [sp, #228]	; 0xe4
   3da10:	add	r3, r3, #1
   3da14:	ldr	r1, [r2, #4]
   3da18:	str	r3, [sp, #100]	; 0x64
   3da1c:	sdiv	r2, r3, r1
   3da20:	mls	r3, r1, r2, r3
   3da24:	cmp	r3, #0
   3da28:	bne	3dac4 <GetDataSlab+0x1bc98>
   3da2c:	ldr	r3, [sp, #228]	; 0xe4
   3da30:	add	ip, sp, #100	; 0x64
   3da34:	add	lr, sp, #140	; 0x8c
   3da38:	mov	r0, #1
   3da3c:	add	r5, r3, #4
   3da40:	b	3da88 <GetDataSlab+0x1bc5c>
   3da44:	ldr	r3, [lr, #-8]
   3da48:	ldr	r1, [r9, r0, lsl #2]
   3da4c:	mla	r3, r1, r3, r2
   3da50:	add	r6, r6, r3, lsl #2
   3da54:	add	r4, r4, r3
   3da58:	ldr	r3, [sp, #232]	; 0xe8
   3da5c:	add	r0, r0, #1
   3da60:	cmp	r3, r0
   3da64:	beq	3dadc <GetDataSlab+0x1bcb0>
   3da68:	ldr	r3, [ip]
   3da6c:	ldr	r1, [r5, #4]!
   3da70:	add	r3, r3, #1
   3da74:	sdiv	r2, r3, r1
   3da78:	str	r3, [ip]
   3da7c:	mls	r3, r1, r2, r3
   3da80:	cmp	r3, #0
   3da84:	bne	3dac8 <GetDataSlab+0x1bc9c>
   3da88:	ldr	r2, [lr], #4
   3da8c:	str	r7, [ip], #4
   3da90:	sdiv	r3, r4, r2
   3da94:	mls	r3, r2, r3, r4
   3da98:	cmp	r3, #0
   3da9c:	sub	r2, r2, r3
   3daa0:	bne	3da44 <GetDataSlab+0x1bc18>
   3daa4:	ldr	r3, [r9, r0, lsl #2]
   3daa8:	cmp	r3, #0
   3daac:	beq	3da58 <GetDataSlab+0x1bc2c>
   3dab0:	ldr	r2, [lr, #-8]
   3dab4:	mul	r3, r2, r3
   3dab8:	add	r6, r6, r3, lsl #2
   3dabc:	add	r4, r4, r3
   3dac0:	b	3da58 <GetDataSlab+0x1bc2c>
   3dac4:	mov	r0, #1
   3dac8:	add	r3, sp, #176	; 0xb0
   3dacc:	add	r3, r3, r0, lsl #2
   3dad0:	ldr	r3, [r3, #-120]	; 0xffffff88
   3dad4:	add	r6, r6, r3, lsl #2
   3dad8:	add	r4, r4, r3
   3dadc:	ldr	r3, [sp, #20]
   3dae0:	add	r8, r8, r3
   3dae4:	ldr	r3, [sp, #16]
   3dae8:	cmp	r8, r3
   3daec:	blt	3d9a8 <GetDataSlab+0x1bb7c>
   3daf0:	b	30874 <GetDataSlab+0xea48>
   3daf4:	cmp	r3, #0
   3daf8:	ble	30874 <GetDataSlab+0xea48>
   3dafc:	ldr	r3, [sp, #20]
   3db00:	mov	r8, #0
   3db04:	mov	r7, r8
   3db08:	ldr	sl, [r9]
   3db0c:	lsl	r3, r3, #3
   3db10:	str	r3, [sp, #24]
   3db14:	ldr	r3, [sp, #36]	; 0x24
   3db18:	sub	fp, r3, sl
   3db1c:	lsl	r3, sl, #3
   3db20:	str	r3, [sp, #28]
   3db24:	lsl	r3, fp, #3
   3db28:	str	r3, [sp, #8]
   3db2c:	cmp	sl, #0
   3db30:	beq	3db40 <GetDataSlab+0x1bd14>
   3db34:	ldr	r3, [sp, #28]
   3db38:	add	r4, r4, sl
   3db3c:	add	r6, r6, r3
   3db40:	ldr	r3, [sp, #20]
   3db44:	cmp	r3, #0
   3db48:	ble	3db70 <GetDataSlab+0x1bd44>
   3db4c:	ldr	r3, [sp, #4]
   3db50:	mov	r1, r6
   3db54:	add	r0, r3, r8, lsl #3
   3db58:	ldr	r3, [sp, #24]
   3db5c:	add	ip, r6, r3
   3db60:	ldrd	r2, [r1], #8
   3db64:	cmp	r1, ip
   3db68:	strd	r2, [r0], #8
   3db6c:	bne	3db60 <GetDataSlab+0x1bd34>
   3db70:	ldr	r3, [sp, #232]	; 0xe8
   3db74:	add	r4, r4, fp
   3db78:	cmp	r3, #1
   3db7c:	ldr	r3, [sp, #8]
   3db80:	add	r6, r6, r3
   3db84:	ble	3dc5c <GetDataSlab+0x1be30>
   3db88:	ldr	r3, [sp, #100]	; 0x64
   3db8c:	ldr	r2, [sp, #228]	; 0xe4
   3db90:	add	r3, r3, #1
   3db94:	ldr	r1, [r2, #4]
   3db98:	str	r3, [sp, #100]	; 0x64
   3db9c:	sdiv	r2, r3, r1
   3dba0:	mls	r3, r1, r2, r3
   3dba4:	cmp	r3, #0
   3dba8:	bne	3dc44 <GetDataSlab+0x1be18>
   3dbac:	add	ip, sp, #100	; 0x64
   3dbb0:	mov	r0, #1
   3dbb4:	ldr	lr, [sp, #12]
   3dbb8:	ldr	r3, [sp, #228]	; 0xe4
   3dbbc:	add	r5, r3, #4
   3dbc0:	b	3dc08 <GetDataSlab+0x1bddc>
   3dbc4:	ldr	r3, [lr, #-4]
   3dbc8:	ldr	r1, [r9, r0, lsl #2]
   3dbcc:	mla	r3, r1, r3, r2
   3dbd0:	add	r6, r6, r3, lsl #3
   3dbd4:	add	r4, r4, r3
   3dbd8:	ldr	r3, [sp, #232]	; 0xe8
   3dbdc:	add	r0, r0, #1
   3dbe0:	cmp	r3, r0
   3dbe4:	beq	3dc5c <GetDataSlab+0x1be30>
   3dbe8:	ldr	r3, [ip]
   3dbec:	ldr	r1, [r5, #4]!
   3dbf0:	add	r3, r3, #1
   3dbf4:	sdiv	r2, r3, r1
   3dbf8:	str	r3, [ip]
   3dbfc:	mls	r3, r1, r2, r3
   3dc00:	cmp	r3, #0
   3dc04:	bne	3dc48 <GetDataSlab+0x1be1c>
   3dc08:	ldr	r2, [lr, #4]!
   3dc0c:	str	r7, [ip], #4
   3dc10:	sdiv	r3, r4, r2
   3dc14:	mls	r3, r2, r3, r4
   3dc18:	cmp	r3, #0
   3dc1c:	sub	r2, r2, r3
   3dc20:	bne	3dbc4 <GetDataSlab+0x1bd98>
   3dc24:	ldr	r3, [r9, r0, lsl #2]
   3dc28:	cmp	r3, #0
   3dc2c:	beq	3dbd8 <GetDataSlab+0x1bdac>
   3dc30:	ldr	r2, [lr, #-4]
   3dc34:	mul	r3, r2, r3
   3dc38:	add	r6, r6, r3, lsl #3
   3dc3c:	add	r4, r4, r3
   3dc40:	b	3dbd8 <GetDataSlab+0x1bdac>
   3dc44:	mov	r0, #1
   3dc48:	add	r3, sp, #176	; 0xb0
   3dc4c:	add	r3, r3, r0, lsl #2
   3dc50:	ldr	r3, [r3, #-120]	; 0xffffff88
   3dc54:	add	r6, r6, r3, lsl #3
   3dc58:	add	r4, r4, r3
   3dc5c:	ldr	r3, [sp, #20]
   3dc60:	add	r8, r8, r3
   3dc64:	ldr	r3, [sp, #16]
   3dc68:	cmp	r8, r3
   3dc6c:	blt	3db2c <GetDataSlab+0x1bd00>
   3dc70:	b	30874 <GetDataSlab+0xea48>
   3dc74:	cmp	r3, #0
   3dc78:	ble	30874 <GetDataSlab+0xea48>
   3dc7c:	ldr	r3, [r9]
   3dc80:	mov	sl, #0
   3dc84:	mov	r7, sl
   3dc88:	str	r3, [sp, #8]
   3dc8c:	ldr	r3, [sp, #8]
   3dc90:	cmp	r3, #0
   3dc94:	addne	r5, r5, r3, lsl #3
   3dc98:	addne	r4, r4, r3
   3dc9c:	cmp	fp, #0
   3dca0:	ble	3dce0 <GetDataSlab+0x1beb4>
   3dca4:	ldr	r3, [sp, #4]
   3dca8:	sub	r0, r5, #8
   3dcac:	add	r1, r3, sl, lsl #2
   3dcb0:	mov	r3, #0
   3dcb4:	ldr	r2, [r0, #8]!
   3dcb8:	add	r3, r3, #1
   3dcbc:	str	r2, [r1], #4
   3dcc0:	ldr	r2, [sp, #228]	; 0xe4
   3dcc4:	ldr	fp, [r2]
   3dcc8:	cmp	fp, r3
   3dccc:	bgt	3dcb4 <GetDataSlab+0x1be88>
   3dcd0:	ldr	r3, [r9]
   3dcd4:	str	r3, [sp, #8]
   3dcd8:	ldr	r3, [r8]
   3dcdc:	str	r3, [sp, #16]
   3dce0:	ldr	r2, [sp, #8]
   3dce4:	ldr	r3, [sp, #232]	; 0xe8
   3dce8:	cmp	r3, #1
   3dcec:	ldr	r3, [sp, #16]
   3dcf0:	sub	r3, r3, r2
   3dcf4:	add	r4, r4, r3
   3dcf8:	add	r5, r5, r3, lsl #3
   3dcfc:	ble	3ddd4 <GetDataSlab+0x1bfa8>
   3dd00:	ldr	r3, [sp, #100]	; 0x64
   3dd04:	ldr	r2, [sp, #228]	; 0xe4
   3dd08:	add	r3, r3, #1
   3dd0c:	ldr	r1, [r2, #4]
   3dd10:	str	r3, [sp, #100]	; 0x64
   3dd14:	sdiv	r2, r3, r1
   3dd18:	mls	r3, r1, r2, r3
   3dd1c:	cmp	r3, #0
   3dd20:	bne	3ddbc <GetDataSlab+0x1bf90>
   3dd24:	add	ip, sp, #100	; 0x64
   3dd28:	mov	r0, #1
   3dd2c:	ldr	lr, [sp, #12]
   3dd30:	ldr	r3, [sp, #228]	; 0xe4
   3dd34:	add	r6, r3, #4
   3dd38:	b	3dd80 <GetDataSlab+0x1bf54>
   3dd3c:	ldr	r3, [lr, #-4]
   3dd40:	ldr	r1, [r9, r0, lsl #2]
   3dd44:	mla	r3, r1, r3, r2
   3dd48:	add	r5, r5, r3, lsl #3
   3dd4c:	add	r4, r4, r3
   3dd50:	ldr	r3, [sp, #232]	; 0xe8
   3dd54:	add	r0, r0, #1
   3dd58:	cmp	r3, r0
   3dd5c:	beq	3ddd4 <GetDataSlab+0x1bfa8>
   3dd60:	ldr	r3, [ip]
   3dd64:	ldr	r1, [r6, #4]!
   3dd68:	add	r3, r3, #1
   3dd6c:	sdiv	r2, r3, r1
   3dd70:	str	r3, [ip]
   3dd74:	mls	r3, r1, r2, r3
   3dd78:	cmp	r3, #0
   3dd7c:	bne	3ddc0 <GetDataSlab+0x1bf94>
   3dd80:	ldr	r2, [lr, #4]!
   3dd84:	str	r7, [ip], #4
   3dd88:	sdiv	r3, r4, r2
   3dd8c:	mls	r3, r2, r3, r4
   3dd90:	cmp	r3, #0
   3dd94:	sub	r2, r2, r3
   3dd98:	bne	3dd3c <GetDataSlab+0x1bf10>
   3dd9c:	ldr	r3, [r9, r0, lsl #2]
   3dda0:	cmp	r3, #0
   3dda4:	beq	3dd50 <GetDataSlab+0x1bf24>
   3dda8:	ldr	r2, [lr, #-4]
   3ddac:	mul	r3, r2, r3
   3ddb0:	add	r5, r5, r3, lsl #3
   3ddb4:	add	r4, r4, r3
   3ddb8:	b	3dd50 <GetDataSlab+0x1bf24>
   3ddbc:	mov	r0, #1
   3ddc0:	add	r3, sp, #176	; 0xb0
   3ddc4:	add	r3, r3, r0, lsl #2
   3ddc8:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ddcc:	add	r5, r5, r3, lsl #3
   3ddd0:	add	r4, r4, r3
   3ddd4:	ldr	r3, [sp, #20]
   3ddd8:	add	sl, sl, fp
   3dddc:	cmp	sl, r3
   3dde0:	blt	3dc8c <GetDataSlab+0x1be60>
   3dde4:	b	30874 <GetDataSlab+0xea48>
   3dde8:	cmp	r3, #0
   3ddec:	ble	30874 <GetDataSlab+0xea48>
   3ddf0:	ldr	r3, [r9]
   3ddf4:	mov	fp, #0
   3ddf8:	mov	sl, fp
   3ddfc:	str	r3, [sp, #8]
   3de00:	ldr	r2, [sp, #8]
   3de04:	ldr	r3, [sp, #20]
   3de08:	lsl	r3, r3, #3
   3de0c:	str	r3, [sp, #32]
   3de10:	ldr	r3, [sp, #40]	; 0x28
   3de14:	sub	r3, r3, r2
   3de18:	str	r3, [sp, #24]
   3de1c:	lsl	r3, r2, #3
   3de20:	str	r3, [sp, #36]	; 0x24
   3de24:	ldr	r3, [sp, #24]
   3de28:	lsl	r3, r3, #3
   3de2c:	str	r3, [sp, #28]
   3de30:	ldr	r3, [sp, #8]
   3de34:	cmp	r3, #0
   3de38:	beq	3de4c <GetDataSlab+0x1c020>
   3de3c:	ldr	r3, [sp, #36]	; 0x24
   3de40:	add	r8, r8, r3
   3de44:	ldr	r3, [sp, #8]
   3de48:	add	r7, r7, r3
   3de4c:	ldr	r3, [sp, #20]
   3de50:	cmp	r3, #0
   3de54:	ble	3de80 <GetDataSlab+0x1c054>
   3de58:	ldr	r3, [sp, #4]
   3de5c:	mov	r4, r8
   3de60:	add	r5, r3, fp, lsl #2
   3de64:	ldr	r3, [sp, #32]
   3de68:	add	r6, r3, r8
   3de6c:	ldrd	r0, [r4], #8
   3de70:	bl	4e308 <__aeabi_ul2f>
   3de74:	str	r0, [r5], #4
   3de78:	cmp	r6, r4
   3de7c:	bne	3de6c <GetDataSlab+0x1c040>
   3de80:	ldr	r3, [sp, #232]	; 0xe8
   3de84:	cmp	r3, #1
   3de88:	ldr	r3, [sp, #24]
   3de8c:	add	r7, r7, r3
   3de90:	ldr	r3, [sp, #28]
   3de94:	add	r8, r8, r3
   3de98:	ble	3df70 <GetDataSlab+0x1c144>
   3de9c:	ldr	r3, [sp, #100]	; 0x64
   3dea0:	ldr	r2, [sp, #228]	; 0xe4
   3dea4:	add	r3, r3, #1
   3dea8:	ldr	r1, [r2, #4]
   3deac:	str	r3, [sp, #100]	; 0x64
   3deb0:	sdiv	r2, r3, r1
   3deb4:	mls	r3, r1, r2, r3
   3deb8:	cmp	r3, #0
   3debc:	bne	3df58 <GetDataSlab+0x1c12c>
   3dec0:	add	ip, sp, #100	; 0x64
   3dec4:	mov	r0, #1
   3dec8:	ldr	lr, [sp, #12]
   3decc:	ldr	r3, [sp, #228]	; 0xe4
   3ded0:	add	r4, r3, #4
   3ded4:	b	3df1c <GetDataSlab+0x1c0f0>
   3ded8:	ldr	r3, [lr, #-4]
   3dedc:	ldr	r1, [r9, r0, lsl #2]
   3dee0:	mla	r3, r1, r3, r2
   3dee4:	add	r8, r8, r3, lsl #3
   3dee8:	add	r7, r7, r3
   3deec:	ldr	r3, [sp, #232]	; 0xe8
   3def0:	add	r0, r0, #1
   3def4:	cmp	r3, r0
   3def8:	beq	3df70 <GetDataSlab+0x1c144>
   3defc:	ldr	r3, [ip]
   3df00:	ldr	r1, [r4, #4]!
   3df04:	add	r3, r3, #1
   3df08:	sdiv	r2, r3, r1
   3df0c:	str	r3, [ip]
   3df10:	mls	r3, r1, r2, r3
   3df14:	cmp	r3, #0
   3df18:	bne	3df5c <GetDataSlab+0x1c130>
   3df1c:	ldr	r2, [lr, #4]!
   3df20:	str	sl, [ip], #4
   3df24:	sdiv	r3, r7, r2
   3df28:	mls	r3, r2, r3, r7
   3df2c:	cmp	r3, #0
   3df30:	sub	r2, r2, r3
   3df34:	bne	3ded8 <GetDataSlab+0x1c0ac>
   3df38:	ldr	r3, [r9, r0, lsl #2]
   3df3c:	cmp	r3, #0
   3df40:	beq	3deec <GetDataSlab+0x1c0c0>
   3df44:	ldr	r2, [lr, #-4]
   3df48:	mul	r3, r2, r3
   3df4c:	add	r8, r8, r3, lsl #3
   3df50:	add	r7, r7, r3
   3df54:	b	3deec <GetDataSlab+0x1c0c0>
   3df58:	mov	r0, #1
   3df5c:	add	r3, sp, #176	; 0xb0
   3df60:	add	r3, r3, r0, lsl #2
   3df64:	ldr	r3, [r3, #-120]	; 0xffffff88
   3df68:	add	r8, r8, r3, lsl #3
   3df6c:	add	r7, r7, r3
   3df70:	ldr	r3, [sp, #20]
   3df74:	add	fp, fp, r3
   3df78:	ldr	r3, [sp, #16]
   3df7c:	cmp	fp, r3
   3df80:	blt	3de30 <GetDataSlab+0x1c004>
   3df84:	b	30874 <GetDataSlab+0xea48>
   3df88:	cmp	r3, #0
   3df8c:	ble	30874 <GetDataSlab+0xea48>
   3df90:	ldr	r3, [sp, #20]
   3df94:	mov	r8, #0
   3df98:	mov	r7, r8
   3df9c:	ldr	sl, [r9]
   3dfa0:	lsl	r3, r3, #3
   3dfa4:	str	r3, [sp, #24]
   3dfa8:	ldr	r3, [sp, #36]	; 0x24
   3dfac:	sub	fp, r3, sl
   3dfb0:	lsl	r3, sl, #3
   3dfb4:	str	r3, [sp, #28]
   3dfb8:	lsl	r3, fp, #3
   3dfbc:	str	r3, [sp, #8]
   3dfc0:	cmp	sl, #0
   3dfc4:	beq	3dfd4 <GetDataSlab+0x1c1a8>
   3dfc8:	ldr	r3, [sp, #28]
   3dfcc:	add	r4, r4, sl
   3dfd0:	add	r6, r6, r3
   3dfd4:	ldr	r3, [sp, #20]
   3dfd8:	cmp	r3, #0
   3dfdc:	ble	3e004 <GetDataSlab+0x1c1d8>
   3dfe0:	ldr	r3, [sp, #4]
   3dfe4:	mov	r2, r6
   3dfe8:	add	r1, r3, r8, lsl #1
   3dfec:	ldr	r3, [sp, #24]
   3dff0:	add	r0, r6, r3
   3dff4:	ldr	r3, [r2], #8
   3dff8:	cmp	r2, r0
   3dffc:	strh	r3, [r1], #2
   3e000:	bne	3dff4 <GetDataSlab+0x1c1c8>
   3e004:	ldr	r3, [sp, #232]	; 0xe8
   3e008:	add	r4, r4, fp
   3e00c:	cmp	r3, #1
   3e010:	ldr	r3, [sp, #8]
   3e014:	add	r6, r6, r3
   3e018:	ble	3e0f0 <GetDataSlab+0x1c2c4>
   3e01c:	ldr	r3, [sp, #100]	; 0x64
   3e020:	ldr	r2, [sp, #228]	; 0xe4
   3e024:	add	r3, r3, #1
   3e028:	ldr	r1, [r2, #4]
   3e02c:	str	r3, [sp, #100]	; 0x64
   3e030:	sdiv	r2, r3, r1
   3e034:	mls	r3, r1, r2, r3
   3e038:	cmp	r3, #0
   3e03c:	bne	3e0d8 <GetDataSlab+0x1c2ac>
   3e040:	add	ip, sp, #100	; 0x64
   3e044:	mov	r0, #1
   3e048:	ldr	lr, [sp, #12]
   3e04c:	ldr	r3, [sp, #228]	; 0xe4
   3e050:	add	r5, r3, #4
   3e054:	b	3e09c <GetDataSlab+0x1c270>
   3e058:	ldr	r3, [lr, #-4]
   3e05c:	ldr	r1, [r9, r0, lsl #2]
   3e060:	mla	r3, r1, r3, r2
   3e064:	add	r6, r6, r3, lsl #3
   3e068:	add	r4, r4, r3
   3e06c:	ldr	r3, [sp, #232]	; 0xe8
   3e070:	add	r0, r0, #1
   3e074:	cmp	r3, r0
   3e078:	beq	3e0f0 <GetDataSlab+0x1c2c4>
   3e07c:	ldr	r3, [ip]
   3e080:	ldr	r1, [r5, #4]!
   3e084:	add	r3, r3, #1
   3e088:	sdiv	r2, r3, r1
   3e08c:	str	r3, [ip]
   3e090:	mls	r3, r1, r2, r3
   3e094:	cmp	r3, #0
   3e098:	bne	3e0dc <GetDataSlab+0x1c2b0>
   3e09c:	ldr	r2, [lr, #4]!
   3e0a0:	str	r7, [ip], #4
   3e0a4:	sdiv	r3, r4, r2
   3e0a8:	mls	r3, r2, r3, r4
   3e0ac:	cmp	r3, #0
   3e0b0:	sub	r2, r2, r3
   3e0b4:	bne	3e058 <GetDataSlab+0x1c22c>
   3e0b8:	ldr	r3, [r9, r0, lsl #2]
   3e0bc:	cmp	r3, #0
   3e0c0:	beq	3e06c <GetDataSlab+0x1c240>
   3e0c4:	ldr	r2, [lr, #-4]
   3e0c8:	mul	r3, r2, r3
   3e0cc:	add	r6, r6, r3, lsl #3
   3e0d0:	add	r4, r4, r3
   3e0d4:	b	3e06c <GetDataSlab+0x1c240>
   3e0d8:	mov	r0, #1
   3e0dc:	add	r3, sp, #176	; 0xb0
   3e0e0:	add	r3, r3, r0, lsl #2
   3e0e4:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e0e8:	add	r6, r6, r3, lsl #3
   3e0ec:	add	r4, r4, r3
   3e0f0:	ldr	r3, [sp, #20]
   3e0f4:	add	r8, r8, r3
   3e0f8:	ldr	r3, [sp, #16]
   3e0fc:	cmp	r8, r3
   3e100:	blt	3dfc0 <GetDataSlab+0x1c194>
   3e104:	b	30874 <GetDataSlab+0xea48>
   3e108:	cmp	r3, #0
   3e10c:	ble	30874 <GetDataSlab+0xea48>
   3e110:	ldr	r3, [sp, #20]
   3e114:	mov	r8, #0
   3e118:	mov	r7, r8
   3e11c:	ldr	sl, [r9]
   3e120:	lsl	r3, r3, #3
   3e124:	str	r3, [sp, #24]
   3e128:	ldr	r3, [sp, #36]	; 0x24
   3e12c:	sub	fp, r3, sl
   3e130:	lsl	r3, sl, #3
   3e134:	str	r3, [sp, #28]
   3e138:	lsl	r3, fp, #3
   3e13c:	str	r3, [sp, #8]
   3e140:	cmp	sl, #0
   3e144:	beq	3e154 <GetDataSlab+0x1c328>
   3e148:	ldr	r3, [sp, #28]
   3e14c:	add	r4, r4, sl
   3e150:	add	r6, r6, r3
   3e154:	ldr	r3, [sp, #20]
   3e158:	cmp	r3, #0
   3e15c:	ble	3e184 <GetDataSlab+0x1c358>
   3e160:	ldr	r3, [sp, #4]
   3e164:	mov	r1, r6
   3e168:	add	r0, r3, r8, lsl #3
   3e16c:	ldr	r3, [sp, #24]
   3e170:	add	ip, r6, r3
   3e174:	ldrd	r2, [r1], #8
   3e178:	cmp	r1, ip
   3e17c:	strd	r2, [r0], #8
   3e180:	bne	3e174 <GetDataSlab+0x1c348>
   3e184:	ldr	r3, [sp, #232]	; 0xe8
   3e188:	add	r4, r4, fp
   3e18c:	cmp	r3, #1
   3e190:	ldr	r3, [sp, #8]
   3e194:	add	r6, r6, r3
   3e198:	ble	3e270 <GetDataSlab+0x1c444>
   3e19c:	ldr	r3, [sp, #100]	; 0x64
   3e1a0:	ldr	r2, [sp, #228]	; 0xe4
   3e1a4:	add	r3, r3, #1
   3e1a8:	ldr	r1, [r2, #4]
   3e1ac:	str	r3, [sp, #100]	; 0x64
   3e1b0:	sdiv	r2, r3, r1
   3e1b4:	mls	r3, r1, r2, r3
   3e1b8:	cmp	r3, #0
   3e1bc:	bne	3e258 <GetDataSlab+0x1c42c>
   3e1c0:	add	ip, sp, #100	; 0x64
   3e1c4:	mov	r0, #1
   3e1c8:	ldr	lr, [sp, #12]
   3e1cc:	ldr	r3, [sp, #228]	; 0xe4
   3e1d0:	add	r5, r3, #4
   3e1d4:	b	3e21c <GetDataSlab+0x1c3f0>
   3e1d8:	ldr	r3, [lr, #-4]
   3e1dc:	ldr	r1, [r9, r0, lsl #2]
   3e1e0:	mla	r3, r1, r3, r2
   3e1e4:	add	r6, r6, r3, lsl #3
   3e1e8:	add	r4, r4, r3
   3e1ec:	ldr	r3, [sp, #232]	; 0xe8
   3e1f0:	add	r0, r0, #1
   3e1f4:	cmp	r3, r0
   3e1f8:	beq	3e270 <GetDataSlab+0x1c444>
   3e1fc:	ldr	r3, [ip]
   3e200:	ldr	r1, [r5, #4]!
   3e204:	add	r3, r3, #1
   3e208:	sdiv	r2, r3, r1
   3e20c:	str	r3, [ip]
   3e210:	mls	r3, r1, r2, r3
   3e214:	cmp	r3, #0
   3e218:	bne	3e25c <GetDataSlab+0x1c430>
   3e21c:	ldr	r2, [lr, #4]!
   3e220:	str	r7, [ip], #4
   3e224:	sdiv	r3, r4, r2
   3e228:	mls	r3, r2, r3, r4
   3e22c:	cmp	r3, #0
   3e230:	sub	r2, r2, r3
   3e234:	bne	3e1d8 <GetDataSlab+0x1c3ac>
   3e238:	ldr	r3, [r9, r0, lsl #2]
   3e23c:	cmp	r3, #0
   3e240:	beq	3e1ec <GetDataSlab+0x1c3c0>
   3e244:	ldr	r2, [lr, #-4]
   3e248:	mul	r3, r2, r3
   3e24c:	add	r6, r6, r3, lsl #3
   3e250:	add	r4, r4, r3
   3e254:	b	3e1ec <GetDataSlab+0x1c3c0>
   3e258:	mov	r0, #1
   3e25c:	add	r3, sp, #176	; 0xb0
   3e260:	add	r3, r3, r0, lsl #2
   3e264:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e268:	add	r6, r6, r3, lsl #3
   3e26c:	add	r4, r4, r3
   3e270:	ldr	r3, [sp, #20]
   3e274:	add	r8, r8, r3
   3e278:	ldr	r3, [sp, #16]
   3e27c:	cmp	r8, r3
   3e280:	blt	3e140 <GetDataSlab+0x1c314>
   3e284:	b	30874 <GetDataSlab+0xea48>
   3e288:	cmp	r3, #0
   3e28c:	ble	30874 <GetDataSlab+0xea48>
   3e290:	ldr	r3, [r9]
   3e294:	mov	fp, #0
   3e298:	mov	sl, fp
   3e29c:	str	r3, [sp, #8]
   3e2a0:	ldr	r2, [sp, #8]
   3e2a4:	ldr	r3, [sp, #20]
   3e2a8:	lsl	r3, r3, #3
   3e2ac:	str	r3, [sp, #32]
   3e2b0:	ldr	r3, [sp, #40]	; 0x28
   3e2b4:	sub	r3, r3, r2
   3e2b8:	str	r3, [sp, #24]
   3e2bc:	lsl	r3, r2, #3
   3e2c0:	str	r3, [sp, #36]	; 0x24
   3e2c4:	ldr	r3, [sp, #24]
   3e2c8:	lsl	r3, r3, #3
   3e2cc:	str	r3, [sp, #28]
   3e2d0:	ldr	r3, [sp, #8]
   3e2d4:	cmp	r3, #0
   3e2d8:	beq	3e2ec <GetDataSlab+0x1c4c0>
   3e2dc:	ldr	r3, [sp, #36]	; 0x24
   3e2e0:	add	r8, r8, r3
   3e2e4:	ldr	r3, [sp, #8]
   3e2e8:	add	r7, r7, r3
   3e2ec:	ldr	r3, [sp, #20]
   3e2f0:	cmp	r3, #0
   3e2f4:	ble	3e320 <GetDataSlab+0x1c4f4>
   3e2f8:	ldr	r3, [sp, #4]
   3e2fc:	mov	r4, r8
   3e300:	add	r5, r3, fp, lsl #3
   3e304:	ldr	r3, [sp, #32]
   3e308:	add	r6, r3, r8
   3e30c:	ldrd	r0, [r4], #8
   3e310:	bl	4e0e4 <__aeabi_l2d>
   3e314:	strd	r0, [r5], #8
   3e318:	cmp	r6, r4
   3e31c:	bne	3e30c <GetDataSlab+0x1c4e0>
   3e320:	ldr	r3, [sp, #232]	; 0xe8
   3e324:	cmp	r3, #1
   3e328:	ldr	r3, [sp, #24]
   3e32c:	add	r7, r7, r3
   3e330:	ldr	r3, [sp, #28]
   3e334:	add	r8, r8, r3
   3e338:	ble	3e410 <GetDataSlab+0x1c5e4>
   3e33c:	ldr	r3, [sp, #100]	; 0x64
   3e340:	ldr	r2, [sp, #228]	; 0xe4
   3e344:	add	r3, r3, #1
   3e348:	ldr	r1, [r2, #4]
   3e34c:	str	r3, [sp, #100]	; 0x64
   3e350:	sdiv	r2, r3, r1
   3e354:	mls	r3, r1, r2, r3
   3e358:	cmp	r3, #0
   3e35c:	bne	3e3f8 <GetDataSlab+0x1c5cc>
   3e360:	add	ip, sp, #100	; 0x64
   3e364:	mov	r0, #1
   3e368:	ldr	lr, [sp, #12]
   3e36c:	ldr	r3, [sp, #228]	; 0xe4
   3e370:	add	r4, r3, #4
   3e374:	b	3e3bc <GetDataSlab+0x1c590>
   3e378:	ldr	r3, [lr, #-4]
   3e37c:	ldr	r1, [r9, r0, lsl #2]
   3e380:	mla	r3, r1, r3, r2
   3e384:	add	r8, r8, r3, lsl #3
   3e388:	add	r7, r7, r3
   3e38c:	ldr	r3, [sp, #232]	; 0xe8
   3e390:	add	r0, r0, #1
   3e394:	cmp	r3, r0
   3e398:	beq	3e410 <GetDataSlab+0x1c5e4>
   3e39c:	ldr	r3, [ip]
   3e3a0:	ldr	r1, [r4, #4]!
   3e3a4:	add	r3, r3, #1
   3e3a8:	sdiv	r2, r3, r1
   3e3ac:	str	r3, [ip]
   3e3b0:	mls	r3, r1, r2, r3
   3e3b4:	cmp	r3, #0
   3e3b8:	bne	3e3fc <GetDataSlab+0x1c5d0>
   3e3bc:	ldr	r2, [lr, #4]!
   3e3c0:	str	sl, [ip], #4
   3e3c4:	sdiv	r3, r7, r2
   3e3c8:	mls	r3, r2, r3, r7
   3e3cc:	cmp	r3, #0
   3e3d0:	sub	r2, r2, r3
   3e3d4:	bne	3e378 <GetDataSlab+0x1c54c>
   3e3d8:	ldr	r3, [r9, r0, lsl #2]
   3e3dc:	cmp	r3, #0
   3e3e0:	beq	3e38c <GetDataSlab+0x1c560>
   3e3e4:	ldr	r2, [lr, #-4]
   3e3e8:	mul	r3, r2, r3
   3e3ec:	add	r8, r8, r3, lsl #3
   3e3f0:	add	r7, r7, r3
   3e3f4:	b	3e38c <GetDataSlab+0x1c560>
   3e3f8:	mov	r0, #1
   3e3fc:	add	r3, sp, #176	; 0xb0
   3e400:	add	r3, r3, r0, lsl #2
   3e404:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e408:	add	r8, r8, r3, lsl #3
   3e40c:	add	r7, r7, r3
   3e410:	ldr	r3, [sp, #20]
   3e414:	add	fp, fp, r3
   3e418:	ldr	r3, [sp, #16]
   3e41c:	cmp	fp, r3
   3e420:	blt	3e2d0 <GetDataSlab+0x1c4a4>
   3e424:	b	30874 <GetDataSlab+0xea48>
   3e428:	cmp	r3, #0
   3e42c:	ble	30874 <GetDataSlab+0xea48>
   3e430:	ldr	r3, [sp, #20]
   3e434:	mov	r8, #0
   3e438:	mov	r7, r8
   3e43c:	ldr	sl, [r9]
   3e440:	lsl	r3, r3, #3
   3e444:	str	r3, [sp, #24]
   3e448:	ldr	r3, [sp, #36]	; 0x24
   3e44c:	sub	fp, r3, sl
   3e450:	lsl	r3, sl, #3
   3e454:	str	r3, [sp, #28]
   3e458:	lsl	r3, fp, #3
   3e45c:	str	r3, [sp, #8]
   3e460:	cmp	sl, #0
   3e464:	beq	3e474 <GetDataSlab+0x1c648>
   3e468:	ldr	r3, [sp, #28]
   3e46c:	add	r4, r4, sl
   3e470:	add	r6, r6, r3
   3e474:	ldr	r3, [sp, #20]
   3e478:	cmp	r3, #0
   3e47c:	ble	3e4a4 <GetDataSlab+0x1c678>
   3e480:	ldr	r3, [sp, #4]
   3e484:	mov	r2, r6
   3e488:	add	r1, r3, r8, lsl #1
   3e48c:	ldr	r3, [sp, #24]
   3e490:	add	r0, r6, r3
   3e494:	ldr	r3, [r2], #8
   3e498:	cmp	r2, r0
   3e49c:	strh	r3, [r1], #2
   3e4a0:	bne	3e494 <GetDataSlab+0x1c668>
   3e4a4:	ldr	r3, [sp, #232]	; 0xe8
   3e4a8:	add	r4, r4, fp
   3e4ac:	cmp	r3, #1
   3e4b0:	ldr	r3, [sp, #8]
   3e4b4:	add	r6, r6, r3
   3e4b8:	ble	3e590 <GetDataSlab+0x1c764>
   3e4bc:	ldr	r3, [sp, #100]	; 0x64
   3e4c0:	ldr	r2, [sp, #228]	; 0xe4
   3e4c4:	add	r3, r3, #1
   3e4c8:	ldr	r1, [r2, #4]
   3e4cc:	str	r3, [sp, #100]	; 0x64
   3e4d0:	sdiv	r2, r3, r1
   3e4d4:	mls	r3, r1, r2, r3
   3e4d8:	cmp	r3, #0
   3e4dc:	bne	3e578 <GetDataSlab+0x1c74c>
   3e4e0:	add	ip, sp, #100	; 0x64
   3e4e4:	mov	r0, #1
   3e4e8:	ldr	lr, [sp, #12]
   3e4ec:	ldr	r3, [sp, #228]	; 0xe4
   3e4f0:	add	r5, r3, #4
   3e4f4:	b	3e53c <GetDataSlab+0x1c710>
   3e4f8:	ldr	r3, [lr, #-4]
   3e4fc:	ldr	r1, [r9, r0, lsl #2]
   3e500:	mla	r3, r1, r3, r2
   3e504:	add	r6, r6, r3, lsl #3
   3e508:	add	r4, r4, r3
   3e50c:	ldr	r3, [sp, #232]	; 0xe8
   3e510:	add	r0, r0, #1
   3e514:	cmp	r3, r0
   3e518:	beq	3e590 <GetDataSlab+0x1c764>
   3e51c:	ldr	r3, [ip]
   3e520:	ldr	r1, [r5, #4]!
   3e524:	add	r3, r3, #1
   3e528:	sdiv	r2, r3, r1
   3e52c:	str	r3, [ip]
   3e530:	mls	r3, r1, r2, r3
   3e534:	cmp	r3, #0
   3e538:	bne	3e57c <GetDataSlab+0x1c750>
   3e53c:	ldr	r2, [lr, #4]!
   3e540:	str	r7, [ip], #4
   3e544:	sdiv	r3, r4, r2
   3e548:	mls	r3, r2, r3, r4
   3e54c:	cmp	r3, #0
   3e550:	sub	r2, r2, r3
   3e554:	bne	3e4f8 <GetDataSlab+0x1c6cc>
   3e558:	ldr	r3, [r9, r0, lsl #2]
   3e55c:	cmp	r3, #0
   3e560:	beq	3e50c <GetDataSlab+0x1c6e0>
   3e564:	ldr	r2, [lr, #-4]
   3e568:	mul	r3, r2, r3
   3e56c:	add	r6, r6, r3, lsl #3
   3e570:	add	r4, r4, r3
   3e574:	b	3e50c <GetDataSlab+0x1c6e0>
   3e578:	mov	r0, #1
   3e57c:	add	r3, sp, #176	; 0xb0
   3e580:	add	r3, r3, r0, lsl #2
   3e584:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e588:	add	r6, r6, r3, lsl #3
   3e58c:	add	r4, r4, r3
   3e590:	ldr	r3, [sp, #20]
   3e594:	add	r8, r8, r3
   3e598:	ldr	r3, [sp, #16]
   3e59c:	cmp	r8, r3
   3e5a0:	blt	3e460 <GetDataSlab+0x1c634>
   3e5a4:	b	30874 <GetDataSlab+0xea48>
   3e5a8:	cmp	r3, #0
   3e5ac:	ble	30874 <GetDataSlab+0xea48>
   3e5b0:	ldr	r3, [r9]
   3e5b4:	mov	fp, #0
   3e5b8:	mov	sl, fp
   3e5bc:	str	r3, [sp, #8]
   3e5c0:	ldr	r2, [sp, #8]
   3e5c4:	ldr	r3, [sp, #20]
   3e5c8:	lsl	r3, r3, #3
   3e5cc:	str	r3, [sp, #32]
   3e5d0:	ldr	r3, [sp, #40]	; 0x28
   3e5d4:	sub	r3, r3, r2
   3e5d8:	str	r3, [sp, #24]
   3e5dc:	lsl	r3, r2, #3
   3e5e0:	str	r3, [sp, #36]	; 0x24
   3e5e4:	ldr	r3, [sp, #24]
   3e5e8:	lsl	r3, r3, #3
   3e5ec:	str	r3, [sp, #28]
   3e5f0:	ldr	r3, [sp, #8]
   3e5f4:	cmp	r3, #0
   3e5f8:	beq	3e60c <GetDataSlab+0x1c7e0>
   3e5fc:	ldr	r3, [sp, #36]	; 0x24
   3e600:	add	r8, r8, r3
   3e604:	ldr	r3, [sp, #8]
   3e608:	add	r7, r7, r3
   3e60c:	ldr	r3, [sp, #20]
   3e610:	cmp	r3, #0
   3e614:	ble	3e640 <GetDataSlab+0x1c814>
   3e618:	ldr	r3, [sp, #4]
   3e61c:	mov	r4, r8
   3e620:	add	r5, r3, fp, lsl #2
   3e624:	ldr	r3, [sp, #32]
   3e628:	add	r6, r3, r8
   3e62c:	ldrd	r0, [r4], #8
   3e630:	bl	4e318 <__aeabi_l2f>
   3e634:	str	r0, [r5], #4
   3e638:	cmp	r4, r6
   3e63c:	bne	3e62c <GetDataSlab+0x1c800>
   3e640:	ldr	r3, [sp, #232]	; 0xe8
   3e644:	cmp	r3, #1
   3e648:	ldr	r3, [sp, #24]
   3e64c:	add	r7, r7, r3
   3e650:	ldr	r3, [sp, #28]
   3e654:	add	r8, r8, r3
   3e658:	ble	3e730 <GetDataSlab+0x1c904>
   3e65c:	ldr	r3, [sp, #100]	; 0x64
   3e660:	ldr	r2, [sp, #228]	; 0xe4
   3e664:	add	r3, r3, #1
   3e668:	ldr	r1, [r2, #4]
   3e66c:	str	r3, [sp, #100]	; 0x64
   3e670:	sdiv	r2, r3, r1
   3e674:	mls	r3, r1, r2, r3
   3e678:	cmp	r3, #0
   3e67c:	bne	3e718 <GetDataSlab+0x1c8ec>
   3e680:	add	ip, sp, #100	; 0x64
   3e684:	mov	r0, #1
   3e688:	ldr	lr, [sp, #12]
   3e68c:	ldr	r3, [sp, #228]	; 0xe4
   3e690:	add	r4, r3, #4
   3e694:	b	3e6dc <GetDataSlab+0x1c8b0>
   3e698:	ldr	r3, [lr, #-4]
   3e69c:	ldr	r1, [r9, r0, lsl #2]
   3e6a0:	mla	r3, r1, r3, r2
   3e6a4:	add	r8, r8, r3, lsl #3
   3e6a8:	add	r7, r7, r3
   3e6ac:	ldr	r3, [sp, #232]	; 0xe8
   3e6b0:	add	r0, r0, #1
   3e6b4:	cmp	r3, r0
   3e6b8:	beq	3e730 <GetDataSlab+0x1c904>
   3e6bc:	ldr	r3, [ip]
   3e6c0:	ldr	r1, [r4, #4]!
   3e6c4:	add	r3, r3, #1
   3e6c8:	sdiv	r2, r3, r1
   3e6cc:	str	r3, [ip]
   3e6d0:	mls	r3, r1, r2, r3
   3e6d4:	cmp	r3, #0
   3e6d8:	bne	3e71c <GetDataSlab+0x1c8f0>
   3e6dc:	ldr	r2, [lr, #4]!
   3e6e0:	str	sl, [ip], #4
   3e6e4:	sdiv	r3, r7, r2
   3e6e8:	mls	r3, r2, r3, r7
   3e6ec:	cmp	r3, #0
   3e6f0:	sub	r2, r2, r3
   3e6f4:	bne	3e698 <GetDataSlab+0x1c86c>
   3e6f8:	ldr	r3, [r9, r0, lsl #2]
   3e6fc:	cmp	r3, #0
   3e700:	beq	3e6ac <GetDataSlab+0x1c880>
   3e704:	ldr	r2, [lr, #-4]
   3e708:	mul	r3, r2, r3
   3e70c:	add	r8, r8, r3, lsl #3
   3e710:	add	r7, r7, r3
   3e714:	b	3e6ac <GetDataSlab+0x1c880>
   3e718:	mov	r0, #1
   3e71c:	add	r3, sp, #176	; 0xb0
   3e720:	add	r3, r3, r0, lsl #2
   3e724:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e728:	add	r8, r8, r3, lsl #3
   3e72c:	add	r7, r7, r3
   3e730:	ldr	r3, [sp, #20]
   3e734:	add	fp, fp, r3
   3e738:	ldr	r3, [sp, #16]
   3e73c:	cmp	fp, r3
   3e740:	blt	3e5f0 <GetDataSlab+0x1c7c4>
   3e744:	b	30874 <GetDataSlab+0xea48>
   3e748:	cmp	r3, #0
   3e74c:	ble	30874 <GetDataSlab+0xea48>
   3e750:	ldr	r3, [r9]
   3e754:	mov	sl, #0
   3e758:	mov	r7, sl
   3e75c:	str	r3, [sp, #8]
   3e760:	ldr	r3, [sp, #8]
   3e764:	cmp	r3, #0
   3e768:	addne	r5, r5, r3, lsl #3
   3e76c:	addne	r4, r4, r3
   3e770:	cmp	fp, #0
   3e774:	ble	3e7b4 <GetDataSlab+0x1c988>
   3e778:	ldr	r3, [sp, #4]
   3e77c:	sub	r1, r5, #8
   3e780:	add	r0, r3, sl
   3e784:	mov	r2, r0
   3e788:	ldr	r3, [r1, #8]!
   3e78c:	ldr	ip, [sp, #228]	; 0xe4
   3e790:	strb	r3, [r2], #1
   3e794:	sub	r3, r2, r0
   3e798:	ldr	fp, [ip]
   3e79c:	cmp	fp, r3
   3e7a0:	bgt	3e788 <GetDataSlab+0x1c95c>
   3e7a4:	ldr	r3, [r9]
   3e7a8:	str	r3, [sp, #8]
   3e7ac:	ldr	r3, [r8]
   3e7b0:	str	r3, [sp, #16]
   3e7b4:	ldr	r2, [sp, #8]
   3e7b8:	ldr	r3, [sp, #232]	; 0xe8
   3e7bc:	cmp	r3, #1
   3e7c0:	ldr	r3, [sp, #16]
   3e7c4:	sub	r3, r3, r2
   3e7c8:	add	r4, r4, r3
   3e7cc:	add	r5, r5, r3, lsl #3
   3e7d0:	ble	3e8a8 <GetDataSlab+0x1ca7c>
   3e7d4:	ldr	r3, [sp, #100]	; 0x64
   3e7d8:	ldr	r2, [sp, #228]	; 0xe4
   3e7dc:	add	r3, r3, #1
   3e7e0:	ldr	r1, [r2, #4]
   3e7e4:	str	r3, [sp, #100]	; 0x64
   3e7e8:	sdiv	r2, r3, r1
   3e7ec:	mls	r3, r1, r2, r3
   3e7f0:	cmp	r3, #0
   3e7f4:	bne	3e890 <GetDataSlab+0x1ca64>
   3e7f8:	add	ip, sp, #100	; 0x64
   3e7fc:	mov	r0, #1
   3e800:	ldr	lr, [sp, #12]
   3e804:	ldr	r3, [sp, #228]	; 0xe4
   3e808:	add	r6, r3, #4
   3e80c:	b	3e854 <GetDataSlab+0x1ca28>
   3e810:	ldr	r3, [lr, #-4]
   3e814:	ldr	r1, [r9, r0, lsl #2]
   3e818:	mla	r3, r1, r3, r2
   3e81c:	add	r5, r5, r3, lsl #3
   3e820:	add	r4, r4, r3
   3e824:	ldr	r3, [sp, #232]	; 0xe8
   3e828:	add	r0, r0, #1
   3e82c:	cmp	r3, r0
   3e830:	beq	3e8a8 <GetDataSlab+0x1ca7c>
   3e834:	ldr	r3, [ip]
   3e838:	ldr	r1, [r6, #4]!
   3e83c:	add	r3, r3, #1
   3e840:	sdiv	r2, r3, r1
   3e844:	str	r3, [ip]
   3e848:	mls	r3, r1, r2, r3
   3e84c:	cmp	r3, #0
   3e850:	bne	3e894 <GetDataSlab+0x1ca68>
   3e854:	ldr	r2, [lr, #4]!
   3e858:	str	r7, [ip], #4
   3e85c:	sdiv	r3, r4, r2
   3e860:	mls	r3, r2, r3, r4
   3e864:	cmp	r3, #0
   3e868:	sub	r2, r2, r3
   3e86c:	bne	3e810 <GetDataSlab+0x1c9e4>
   3e870:	ldr	r3, [r9, r0, lsl #2]
   3e874:	cmp	r3, #0
   3e878:	beq	3e824 <GetDataSlab+0x1c9f8>
   3e87c:	ldr	r2, [lr, #-4]
   3e880:	mul	r3, r2, r3
   3e884:	add	r5, r5, r3, lsl #3
   3e888:	add	r4, r4, r3
   3e88c:	b	3e824 <GetDataSlab+0x1c9f8>
   3e890:	mov	r0, #1
   3e894:	add	r3, sp, #176	; 0xb0
   3e898:	add	r3, r3, r0, lsl #2
   3e89c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3e8a0:	add	r5, r5, r3, lsl #3
   3e8a4:	add	r4, r4, r3
   3e8a8:	ldr	r3, [sp, #20]
   3e8ac:	add	sl, sl, fp
   3e8b0:	cmp	sl, r3
   3e8b4:	blt	3e760 <GetDataSlab+0x1c934>
   3e8b8:	b	30874 <GetDataSlab+0xea48>
   3e8bc:	cmp	r3, #0
   3e8c0:	ble	30874 <GetDataSlab+0xea48>
   3e8c4:	ldr	r3, [r9]
   3e8c8:	mov	fp, #0
   3e8cc:	mov	sl, fp
   3e8d0:	str	r3, [sp, #8]
   3e8d4:	ldr	r2, [sp, #8]
   3e8d8:	ldr	r3, [sp, #20]
   3e8dc:	lsl	r3, r3, #3
   3e8e0:	str	r3, [sp, #32]
   3e8e4:	ldr	r3, [sp, #40]	; 0x28
   3e8e8:	sub	r3, r3, r2
   3e8ec:	str	r3, [sp, #24]
   3e8f0:	lsl	r3, r2, #3
   3e8f4:	str	r3, [sp, #36]	; 0x24
   3e8f8:	ldr	r3, [sp, #24]
   3e8fc:	lsl	r3, r3, #3
   3e900:	str	r3, [sp, #28]
   3e904:	ldr	r3, [sp, #8]
   3e908:	cmp	r3, #0
   3e90c:	beq	3e920 <GetDataSlab+0x1caf4>
   3e910:	ldr	r3, [sp, #36]	; 0x24
   3e914:	add	r8, r8, r3
   3e918:	ldr	r3, [sp, #8]
   3e91c:	add	r7, r7, r3
   3e920:	ldr	r3, [sp, #20]
   3e924:	cmp	r3, #0
   3e928:	ble	3e954 <GetDataSlab+0x1cb28>
   3e92c:	ldr	r3, [sp, #4]
   3e930:	mov	r4, r8
   3e934:	add	r5, r3, fp, lsl #3
   3e938:	ldr	r3, [sp, #32]
   3e93c:	add	r6, r3, r8
   3e940:	ldrd	r0, [r4], #8
   3e944:	bl	4e0d0 <__aeabi_ul2d>
   3e948:	strd	r0, [r5], #8
   3e94c:	cmp	r4, r6
   3e950:	bne	3e940 <GetDataSlab+0x1cb14>
   3e954:	ldr	r3, [sp, #232]	; 0xe8
   3e958:	cmp	r3, #1
   3e95c:	ldr	r3, [sp, #24]
   3e960:	add	r7, r7, r3
   3e964:	ldr	r3, [sp, #28]
   3e968:	add	r8, r8, r3
   3e96c:	ble	3ea44 <GetDataSlab+0x1cc18>
   3e970:	ldr	r3, [sp, #100]	; 0x64
   3e974:	ldr	r2, [sp, #228]	; 0xe4
   3e978:	add	r3, r3, #1
   3e97c:	ldr	r1, [r2, #4]
   3e980:	str	r3, [sp, #100]	; 0x64
   3e984:	sdiv	r2, r3, r1
   3e988:	mls	r3, r1, r2, r3
   3e98c:	cmp	r3, #0
   3e990:	bne	3ea2c <GetDataSlab+0x1cc00>
   3e994:	add	ip, sp, #100	; 0x64
   3e998:	mov	r0, #1
   3e99c:	ldr	lr, [sp, #12]
   3e9a0:	ldr	r3, [sp, #228]	; 0xe4
   3e9a4:	add	r4, r3, #4
   3e9a8:	b	3e9f0 <GetDataSlab+0x1cbc4>
   3e9ac:	ldr	r3, [lr, #-4]
   3e9b0:	ldr	r1, [r9, r0, lsl #2]
   3e9b4:	mla	r3, r1, r3, r2
   3e9b8:	add	r8, r8, r3, lsl #3
   3e9bc:	add	r7, r7, r3
   3e9c0:	ldr	r3, [sp, #232]	; 0xe8
   3e9c4:	add	r0, r0, #1
   3e9c8:	cmp	r3, r0
   3e9cc:	beq	3ea44 <GetDataSlab+0x1cc18>
   3e9d0:	ldr	r3, [ip]
   3e9d4:	ldr	r1, [r4, #4]!
   3e9d8:	add	r3, r3, #1
   3e9dc:	sdiv	r2, r3, r1
   3e9e0:	str	r3, [ip]
   3e9e4:	mls	r3, r1, r2, r3
   3e9e8:	cmp	r3, #0
   3e9ec:	bne	3ea30 <GetDataSlab+0x1cc04>
   3e9f0:	ldr	r2, [lr, #4]!
   3e9f4:	str	sl, [ip], #4
   3e9f8:	sdiv	r3, r7, r2
   3e9fc:	mls	r3, r2, r3, r7
   3ea00:	cmp	r3, #0
   3ea04:	sub	r2, r2, r3
   3ea08:	bne	3e9ac <GetDataSlab+0x1cb80>
   3ea0c:	ldr	r3, [r9, r0, lsl #2]
   3ea10:	cmp	r3, #0
   3ea14:	beq	3e9c0 <GetDataSlab+0x1cb94>
   3ea18:	ldr	r2, [lr, #-4]
   3ea1c:	mul	r3, r2, r3
   3ea20:	add	r8, r8, r3, lsl #3
   3ea24:	add	r7, r7, r3
   3ea28:	b	3e9c0 <GetDataSlab+0x1cb94>
   3ea2c:	mov	r0, #1
   3ea30:	add	r3, sp, #176	; 0xb0
   3ea34:	add	r3, r3, r0, lsl #2
   3ea38:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ea3c:	add	r8, r8, r3, lsl #3
   3ea40:	add	r7, r7, r3
   3ea44:	ldr	r3, [sp, #20]
   3ea48:	add	fp, fp, r3
   3ea4c:	ldr	r3, [sp, #16]
   3ea50:	cmp	fp, r3
   3ea54:	blt	3e904 <GetDataSlab+0x1cad8>
   3ea58:	b	30874 <GetDataSlab+0xea48>
   3ea5c:	cmp	r3, #0
   3ea60:	ble	30874 <GetDataSlab+0xea48>
   3ea64:	ldr	r3, [r9]
   3ea68:	mov	sl, #0
   3ea6c:	mov	r7, sl
   3ea70:	str	r3, [sp, #8]
   3ea74:	ldr	r3, [sp, #8]
   3ea78:	cmp	r3, #0
   3ea7c:	addne	r5, r5, r3, lsl #3
   3ea80:	addne	r4, r4, r3
   3ea84:	cmp	fp, #0
   3ea88:	ble	3eac8 <GetDataSlab+0x1cc9c>
   3ea8c:	ldr	r3, [sp, #4]
   3ea90:	sub	r1, r5, #8
   3ea94:	add	r0, r3, sl
   3ea98:	mov	r2, r0
   3ea9c:	ldr	r3, [r1, #8]!
   3eaa0:	ldr	ip, [sp, #228]	; 0xe4
   3eaa4:	strb	r3, [r2], #1
   3eaa8:	sub	r3, r2, r0
   3eaac:	ldr	fp, [ip]
   3eab0:	cmp	fp, r3
   3eab4:	bgt	3ea9c <GetDataSlab+0x1cc70>
   3eab8:	ldr	r3, [r9]
   3eabc:	str	r3, [sp, #8]
   3eac0:	ldr	r3, [r8]
   3eac4:	str	r3, [sp, #16]
   3eac8:	ldr	r2, [sp, #8]
   3eacc:	ldr	r3, [sp, #232]	; 0xe8
   3ead0:	cmp	r3, #1
   3ead4:	ldr	r3, [sp, #16]
   3ead8:	sub	r3, r3, r2
   3eadc:	add	r4, r4, r3
   3eae0:	add	r5, r5, r3, lsl #3
   3eae4:	ble	3ebbc <GetDataSlab+0x1cd90>
   3eae8:	ldr	r3, [sp, #100]	; 0x64
   3eaec:	ldr	r2, [sp, #228]	; 0xe4
   3eaf0:	add	r3, r3, #1
   3eaf4:	ldr	r1, [r2, #4]
   3eaf8:	str	r3, [sp, #100]	; 0x64
   3eafc:	sdiv	r2, r3, r1
   3eb00:	mls	r3, r1, r2, r3
   3eb04:	cmp	r3, #0
   3eb08:	bne	3eba4 <GetDataSlab+0x1cd78>
   3eb0c:	add	ip, sp, #100	; 0x64
   3eb10:	mov	r0, #1
   3eb14:	ldr	lr, [sp, #12]
   3eb18:	ldr	r3, [sp, #228]	; 0xe4
   3eb1c:	add	r6, r3, #4
   3eb20:	b	3eb68 <GetDataSlab+0x1cd3c>
   3eb24:	ldr	r3, [lr, #-4]
   3eb28:	ldr	r1, [r9, r0, lsl #2]
   3eb2c:	mla	r3, r1, r3, r2
   3eb30:	add	r5, r5, r3, lsl #3
   3eb34:	add	r4, r4, r3
   3eb38:	ldr	r3, [sp, #232]	; 0xe8
   3eb3c:	add	r0, r0, #1
   3eb40:	cmp	r3, r0
   3eb44:	beq	3ebbc <GetDataSlab+0x1cd90>
   3eb48:	ldr	r3, [ip]
   3eb4c:	ldr	r1, [r6, #4]!
   3eb50:	add	r3, r3, #1
   3eb54:	sdiv	r2, r3, r1
   3eb58:	str	r3, [ip]
   3eb5c:	mls	r3, r1, r2, r3
   3eb60:	cmp	r3, #0
   3eb64:	bne	3eba8 <GetDataSlab+0x1cd7c>
   3eb68:	ldr	r2, [lr, #4]!
   3eb6c:	str	r7, [ip], #4
   3eb70:	sdiv	r3, r4, r2
   3eb74:	mls	r3, r2, r3, r4
   3eb78:	cmp	r3, #0
   3eb7c:	sub	r2, r2, r3
   3eb80:	bne	3eb24 <GetDataSlab+0x1ccf8>
   3eb84:	ldr	r3, [r9, r0, lsl #2]
   3eb88:	cmp	r3, #0
   3eb8c:	beq	3eb38 <GetDataSlab+0x1cd0c>
   3eb90:	ldr	r2, [lr, #-4]
   3eb94:	mul	r3, r2, r3
   3eb98:	add	r5, r5, r3, lsl #3
   3eb9c:	add	r4, r4, r3
   3eba0:	b	3eb38 <GetDataSlab+0x1cd0c>
   3eba4:	mov	r0, #1
   3eba8:	add	r3, sp, #176	; 0xb0
   3ebac:	add	r3, r3, r0, lsl #2
   3ebb0:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ebb4:	add	r5, r5, r3, lsl #3
   3ebb8:	add	r4, r4, r3
   3ebbc:	ldr	r3, [sp, #20]
   3ebc0:	add	sl, sl, fp
   3ebc4:	cmp	sl, r3
   3ebc8:	blt	3ea74 <GetDataSlab+0x1cc48>
   3ebcc:	b	30874 <GetDataSlab+0xea48>
   3ebd0:	cmp	r3, #0
   3ebd4:	ble	30874 <GetDataSlab+0xea48>
   3ebd8:	ldr	r3, [r9]
   3ebdc:	mov	sl, #0
   3ebe0:	mov	r7, sl
   3ebe4:	str	r3, [sp, #8]
   3ebe8:	ldr	r3, [sp, #8]
   3ebec:	cmp	r3, #0
   3ebf0:	addne	r5, r5, r3, lsl #3
   3ebf4:	addne	r4, r4, r3
   3ebf8:	cmp	fp, #0
   3ebfc:	ble	3ec3c <GetDataSlab+0x1ce10>
   3ec00:	ldr	r3, [sp, #4]
   3ec04:	sub	r0, r5, #8
   3ec08:	add	r1, r3, sl, lsl #2
   3ec0c:	mov	r3, #0
   3ec10:	ldr	r2, [r0, #8]!
   3ec14:	add	r3, r3, #1
   3ec18:	str	r2, [r1], #4
   3ec1c:	ldr	r2, [sp, #228]	; 0xe4
   3ec20:	ldr	fp, [r2]
   3ec24:	cmp	fp, r3
   3ec28:	bgt	3ec10 <GetDataSlab+0x1cde4>
   3ec2c:	ldr	r3, [r9]
   3ec30:	str	r3, [sp, #8]
   3ec34:	ldr	r3, [r8]
   3ec38:	str	r3, [sp, #16]
   3ec3c:	ldr	r2, [sp, #8]
   3ec40:	ldr	r3, [sp, #232]	; 0xe8
   3ec44:	cmp	r3, #1
   3ec48:	ldr	r3, [sp, #16]
   3ec4c:	sub	r3, r3, r2
   3ec50:	add	r4, r4, r3
   3ec54:	add	r5, r5, r3, lsl #3
   3ec58:	ble	3ed30 <GetDataSlab+0x1cf04>
   3ec5c:	ldr	r3, [sp, #100]	; 0x64
   3ec60:	ldr	r2, [sp, #228]	; 0xe4
   3ec64:	add	r3, r3, #1
   3ec68:	ldr	r1, [r2, #4]
   3ec6c:	str	r3, [sp, #100]	; 0x64
   3ec70:	sdiv	r2, r3, r1
   3ec74:	mls	r3, r1, r2, r3
   3ec78:	cmp	r3, #0
   3ec7c:	bne	3ed18 <GetDataSlab+0x1ceec>
   3ec80:	add	ip, sp, #100	; 0x64
   3ec84:	mov	r0, #1
   3ec88:	ldr	lr, [sp, #12]
   3ec8c:	ldr	r3, [sp, #228]	; 0xe4
   3ec90:	add	r6, r3, #4
   3ec94:	b	3ecdc <GetDataSlab+0x1ceb0>
   3ec98:	ldr	r3, [lr, #-4]
   3ec9c:	ldr	r1, [r9, r0, lsl #2]
   3eca0:	mla	r3, r1, r3, r2
   3eca4:	add	r5, r5, r3, lsl #3
   3eca8:	add	r4, r4, r3
   3ecac:	ldr	r3, [sp, #232]	; 0xe8
   3ecb0:	add	r0, r0, #1
   3ecb4:	cmp	r3, r0
   3ecb8:	beq	3ed30 <GetDataSlab+0x1cf04>
   3ecbc:	ldr	r3, [ip]
   3ecc0:	ldr	r1, [r6, #4]!
   3ecc4:	add	r3, r3, #1
   3ecc8:	sdiv	r2, r3, r1
   3eccc:	str	r3, [ip]
   3ecd0:	mls	r3, r1, r2, r3
   3ecd4:	cmp	r3, #0
   3ecd8:	bne	3ed1c <GetDataSlab+0x1cef0>
   3ecdc:	ldr	r2, [lr, #4]!
   3ece0:	str	r7, [ip], #4
   3ece4:	sdiv	r3, r4, r2
   3ece8:	mls	r3, r2, r3, r4
   3ecec:	cmp	r3, #0
   3ecf0:	sub	r2, r2, r3
   3ecf4:	bne	3ec98 <GetDataSlab+0x1ce6c>
   3ecf8:	ldr	r3, [r9, r0, lsl #2]
   3ecfc:	cmp	r3, #0
   3ed00:	beq	3ecac <GetDataSlab+0x1ce80>
   3ed04:	ldr	r2, [lr, #-4]
   3ed08:	mul	r3, r2, r3
   3ed0c:	add	r5, r5, r3, lsl #3
   3ed10:	add	r4, r4, r3
   3ed14:	b	3ecac <GetDataSlab+0x1ce80>
   3ed18:	mov	r0, #1
   3ed1c:	add	r3, sp, #176	; 0xb0
   3ed20:	add	r3, r3, r0, lsl #2
   3ed24:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ed28:	add	r5, r5, r3, lsl #3
   3ed2c:	add	r4, r4, r3
   3ed30:	ldr	r3, [sp, #20]
   3ed34:	add	sl, sl, fp
   3ed38:	cmp	sl, r3
   3ed3c:	blt	3ebe8 <GetDataSlab+0x1cdbc>
   3ed40:	b	30874 <GetDataSlab+0xea48>
   3ed44:	cmp	r3, #0
   3ed48:	ble	30874 <GetDataSlab+0xea48>
   3ed4c:	ldr	r3, [r9]
   3ed50:	mov	sl, #0
   3ed54:	mov	r7, sl
   3ed58:	str	r3, [sp, #8]
   3ed5c:	ldr	r3, [sp, #8]
   3ed60:	cmp	r3, #0
   3ed64:	addne	r5, r5, r3, lsl #3
   3ed68:	addne	r4, r4, r3
   3ed6c:	cmp	fp, #0
   3ed70:	ble	3edb0 <GetDataSlab+0x1cf84>
   3ed74:	ldr	r3, [sp, #4]
   3ed78:	sub	r1, r5, #8
   3ed7c:	add	r0, r3, sl
   3ed80:	mov	r2, r0
   3ed84:	ldr	r3, [r1, #8]!
   3ed88:	ldr	ip, [sp, #228]	; 0xe4
   3ed8c:	strb	r3, [r2], #1
   3ed90:	sub	r3, r2, r0
   3ed94:	ldr	fp, [ip]
   3ed98:	cmp	fp, r3
   3ed9c:	bgt	3ed84 <GetDataSlab+0x1cf58>
   3eda0:	ldr	r3, [r9]
   3eda4:	str	r3, [sp, #8]
   3eda8:	ldr	r3, [r8]
   3edac:	str	r3, [sp, #16]
   3edb0:	ldr	r2, [sp, #8]
   3edb4:	ldr	r3, [sp, #232]	; 0xe8
   3edb8:	cmp	r3, #1
   3edbc:	ldr	r3, [sp, #16]
   3edc0:	sub	r3, r3, r2
   3edc4:	add	r4, r4, r3
   3edc8:	add	r5, r5, r3, lsl #3
   3edcc:	ble	3eea4 <GetDataSlab+0x1d078>
   3edd0:	ldr	r3, [sp, #100]	; 0x64
   3edd4:	ldr	r2, [sp, #228]	; 0xe4
   3edd8:	add	r3, r3, #1
   3eddc:	ldr	r1, [r2, #4]
   3ede0:	str	r3, [sp, #100]	; 0x64
   3ede4:	sdiv	r2, r3, r1
   3ede8:	mls	r3, r1, r2, r3
   3edec:	cmp	r3, #0
   3edf0:	bne	3ee8c <GetDataSlab+0x1d060>
   3edf4:	add	ip, sp, #100	; 0x64
   3edf8:	mov	r0, #1
   3edfc:	ldr	lr, [sp, #12]
   3ee00:	ldr	r3, [sp, #228]	; 0xe4
   3ee04:	add	r6, r3, #4
   3ee08:	b	3ee50 <GetDataSlab+0x1d024>
   3ee0c:	ldr	r3, [lr, #-4]
   3ee10:	ldr	r1, [r9, r0, lsl #2]
   3ee14:	mla	r3, r1, r3, r2
   3ee18:	add	r5, r5, r3, lsl #3
   3ee1c:	add	r4, r4, r3
   3ee20:	ldr	r3, [sp, #232]	; 0xe8
   3ee24:	add	r0, r0, #1
   3ee28:	cmp	r3, r0
   3ee2c:	beq	3eea4 <GetDataSlab+0x1d078>
   3ee30:	ldr	r3, [ip]
   3ee34:	ldr	r1, [r6, #4]!
   3ee38:	add	r3, r3, #1
   3ee3c:	sdiv	r2, r3, r1
   3ee40:	str	r3, [ip]
   3ee44:	mls	r3, r1, r2, r3
   3ee48:	cmp	r3, #0
   3ee4c:	bne	3ee90 <GetDataSlab+0x1d064>
   3ee50:	ldr	r2, [lr, #4]!
   3ee54:	str	r7, [ip], #4
   3ee58:	sdiv	r3, r4, r2
   3ee5c:	mls	r3, r2, r3, r4
   3ee60:	cmp	r3, #0
   3ee64:	sub	r2, r2, r3
   3ee68:	bne	3ee0c <GetDataSlab+0x1cfe0>
   3ee6c:	ldr	r3, [r9, r0, lsl #2]
   3ee70:	cmp	r3, #0
   3ee74:	beq	3ee20 <GetDataSlab+0x1cff4>
   3ee78:	ldr	r2, [lr, #-4]
   3ee7c:	mul	r3, r2, r3
   3ee80:	add	r5, r5, r3, lsl #3
   3ee84:	add	r4, r4, r3
   3ee88:	b	3ee20 <GetDataSlab+0x1cff4>
   3ee8c:	mov	r0, #1
   3ee90:	add	r3, sp, #176	; 0xb0
   3ee94:	add	r3, r3, r0, lsl #2
   3ee98:	ldr	r3, [r3, #-120]	; 0xffffff88
   3ee9c:	add	r5, r5, r3, lsl #3
   3eea0:	add	r4, r4, r3
   3eea4:	ldr	r3, [sp, #20]
   3eea8:	add	sl, sl, fp
   3eeac:	cmp	sl, r3
   3eeb0:	blt	3ed5c <GetDataSlab+0x1cf30>
   3eeb4:	b	30874 <GetDataSlab+0xea48>
   3eeb8:	cmp	r3, #0
   3eebc:	ble	30874 <GetDataSlab+0xea48>
   3eec0:	ldr	r3, [sp, #20]
   3eec4:	mov	r8, #0
   3eec8:	mov	r7, r8
   3eecc:	ldr	sl, [r9]
   3eed0:	lsl	r3, r3, #3
   3eed4:	str	r3, [sp, #24]
   3eed8:	ldr	r3, [sp, #36]	; 0x24
   3eedc:	sub	fp, r3, sl
   3eee0:	lsl	r3, sl, #3
   3eee4:	str	r3, [sp, #28]
   3eee8:	lsl	r3, fp, #3
   3eeec:	str	r3, [sp, #8]
   3eef0:	cmp	sl, #0
   3eef4:	beq	3ef04 <GetDataSlab+0x1d0d8>
   3eef8:	ldr	r3, [sp, #28]
   3eefc:	add	r4, r4, sl
   3ef00:	add	r6, r6, r3
   3ef04:	ldr	r3, [sp, #20]
   3ef08:	cmp	r3, #0
   3ef0c:	ble	3ef34 <GetDataSlab+0x1d108>
   3ef10:	ldr	r3, [sp, #4]
   3ef14:	mov	r2, r6
   3ef18:	add	r1, r3, r8, lsl #1
   3ef1c:	ldr	r3, [sp, #24]
   3ef20:	add	r0, r6, r3
   3ef24:	ldr	r3, [r2], #8
   3ef28:	cmp	r2, r0
   3ef2c:	strh	r3, [r1], #2
   3ef30:	bne	3ef24 <GetDataSlab+0x1d0f8>
   3ef34:	ldr	r3, [sp, #232]	; 0xe8
   3ef38:	add	r4, r4, fp
   3ef3c:	cmp	r3, #1
   3ef40:	ldr	r3, [sp, #8]
   3ef44:	add	r6, r6, r3
   3ef48:	ble	3f020 <GetDataSlab+0x1d1f4>
   3ef4c:	ldr	r3, [sp, #100]	; 0x64
   3ef50:	ldr	r2, [sp, #228]	; 0xe4
   3ef54:	add	r3, r3, #1
   3ef58:	ldr	r1, [r2, #4]
   3ef5c:	str	r3, [sp, #100]	; 0x64
   3ef60:	sdiv	r2, r3, r1
   3ef64:	mls	r3, r1, r2, r3
   3ef68:	cmp	r3, #0
   3ef6c:	bne	3f008 <GetDataSlab+0x1d1dc>
   3ef70:	add	ip, sp, #100	; 0x64
   3ef74:	mov	r0, #1
   3ef78:	ldr	lr, [sp, #12]
   3ef7c:	ldr	r3, [sp, #228]	; 0xe4
   3ef80:	add	r5, r3, #4
   3ef84:	b	3efcc <GetDataSlab+0x1d1a0>
   3ef88:	ldr	r3, [lr, #-4]
   3ef8c:	ldr	r1, [r9, r0, lsl #2]
   3ef90:	mla	r3, r1, r3, r2
   3ef94:	add	r6, r6, r3, lsl #3
   3ef98:	add	r4, r4, r3
   3ef9c:	ldr	r3, [sp, #232]	; 0xe8
   3efa0:	add	r0, r0, #1
   3efa4:	cmp	r3, r0
   3efa8:	beq	3f020 <GetDataSlab+0x1d1f4>
   3efac:	ldr	r3, [ip]
   3efb0:	ldr	r1, [r5, #4]!
   3efb4:	add	r3, r3, #1
   3efb8:	sdiv	r2, r3, r1
   3efbc:	str	r3, [ip]
   3efc0:	mls	r3, r1, r2, r3
   3efc4:	cmp	r3, #0
   3efc8:	bne	3f00c <GetDataSlab+0x1d1e0>
   3efcc:	ldr	r2, [lr, #4]!
   3efd0:	str	r7, [ip], #4
   3efd4:	sdiv	r3, r4, r2
   3efd8:	mls	r3, r2, r3, r4
   3efdc:	cmp	r3, #0
   3efe0:	sub	r2, r2, r3
   3efe4:	bne	3ef88 <GetDataSlab+0x1d15c>
   3efe8:	ldr	r3, [r9, r0, lsl #2]
   3efec:	cmp	r3, #0
   3eff0:	beq	3ef9c <GetDataSlab+0x1d170>
   3eff4:	ldr	r2, [lr, #-4]
   3eff8:	mul	r3, r2, r3
   3effc:	add	r6, r6, r3, lsl #3
   3f000:	add	r4, r4, r3
   3f004:	b	3ef9c <GetDataSlab+0x1d170>
   3f008:	mov	r0, #1
   3f00c:	add	r3, sp, #176	; 0xb0
   3f010:	add	r3, r3, r0, lsl #2
   3f014:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f018:	add	r6, r6, r3, lsl #3
   3f01c:	add	r4, r4, r3
   3f020:	ldr	r3, [sp, #20]
   3f024:	add	r8, r8, r3
   3f028:	ldr	r3, [sp, #16]
   3f02c:	cmp	r8, r3
   3f030:	blt	3eef0 <GetDataSlab+0x1d0c4>
   3f034:	b	30874 <GetDataSlab+0xea48>
   3f038:	cmp	r3, #0
   3f03c:	ble	30874 <GetDataSlab+0xea48>
   3f040:	ldr	r3, [r9]
   3f044:	mov	sl, #0
   3f048:	mov	r7, sl
   3f04c:	str	r3, [sp, #8]
   3f050:	ldr	r3, [sp, #8]
   3f054:	cmp	r3, #0
   3f058:	addne	r5, r5, r3, lsl #3
   3f05c:	addne	r4, r4, r3
   3f060:	cmp	fp, #0
   3f064:	ble	3f0a4 <GetDataSlab+0x1d278>
   3f068:	ldr	r3, [sp, #4]
   3f06c:	sub	r0, r5, #8
   3f070:	add	r1, r3, sl, lsl #2
   3f074:	mov	r3, #0
   3f078:	ldr	r2, [r0, #8]!
   3f07c:	add	r3, r3, #1
   3f080:	str	r2, [r1], #4
   3f084:	ldr	r2, [sp, #228]	; 0xe4
   3f088:	ldr	fp, [r2]
   3f08c:	cmp	fp, r3
   3f090:	bgt	3f078 <GetDataSlab+0x1d24c>
   3f094:	ldr	r3, [r9]
   3f098:	str	r3, [sp, #8]
   3f09c:	ldr	r3, [r8]
   3f0a0:	str	r3, [sp, #16]
   3f0a4:	ldr	r2, [sp, #8]
   3f0a8:	ldr	r3, [sp, #232]	; 0xe8
   3f0ac:	cmp	r3, #1
   3f0b0:	ldr	r3, [sp, #16]
   3f0b4:	sub	r3, r3, r2
   3f0b8:	add	r4, r4, r3
   3f0bc:	add	r5, r5, r3, lsl #3
   3f0c0:	ble	3f198 <GetDataSlab+0x1d36c>
   3f0c4:	ldr	r3, [sp, #100]	; 0x64
   3f0c8:	ldr	r2, [sp, #228]	; 0xe4
   3f0cc:	add	r3, r3, #1
   3f0d0:	ldr	r1, [r2, #4]
   3f0d4:	str	r3, [sp, #100]	; 0x64
   3f0d8:	sdiv	r2, r3, r1
   3f0dc:	mls	r3, r1, r2, r3
   3f0e0:	cmp	r3, #0
   3f0e4:	bne	3f180 <GetDataSlab+0x1d354>
   3f0e8:	add	ip, sp, #100	; 0x64
   3f0ec:	mov	r0, #1
   3f0f0:	ldr	lr, [sp, #12]
   3f0f4:	ldr	r3, [sp, #228]	; 0xe4
   3f0f8:	add	r6, r3, #4
   3f0fc:	b	3f144 <GetDataSlab+0x1d318>
   3f100:	ldr	r3, [lr, #-4]
   3f104:	ldr	r1, [r9, r0, lsl #2]
   3f108:	mla	r3, r1, r3, r2
   3f10c:	add	r5, r5, r3, lsl #3
   3f110:	add	r4, r4, r3
   3f114:	ldr	r3, [sp, #232]	; 0xe8
   3f118:	add	r0, r0, #1
   3f11c:	cmp	r3, r0
   3f120:	beq	3f198 <GetDataSlab+0x1d36c>
   3f124:	ldr	r3, [ip]
   3f128:	ldr	r1, [r6, #4]!
   3f12c:	add	r3, r3, #1
   3f130:	sdiv	r2, r3, r1
   3f134:	str	r3, [ip]
   3f138:	mls	r3, r1, r2, r3
   3f13c:	cmp	r3, #0
   3f140:	bne	3f184 <GetDataSlab+0x1d358>
   3f144:	ldr	r2, [lr, #4]!
   3f148:	str	r7, [ip], #4
   3f14c:	sdiv	r3, r4, r2
   3f150:	mls	r3, r2, r3, r4
   3f154:	cmp	r3, #0
   3f158:	sub	r2, r2, r3
   3f15c:	bne	3f100 <GetDataSlab+0x1d2d4>
   3f160:	ldr	r3, [r9, r0, lsl #2]
   3f164:	cmp	r3, #0
   3f168:	beq	3f114 <GetDataSlab+0x1d2e8>
   3f16c:	ldr	r2, [lr, #-4]
   3f170:	mul	r3, r2, r3
   3f174:	add	r5, r5, r3, lsl #3
   3f178:	add	r4, r4, r3
   3f17c:	b	3f114 <GetDataSlab+0x1d2e8>
   3f180:	mov	r0, #1
   3f184:	add	r3, sp, #176	; 0xb0
   3f188:	add	r3, r3, r0, lsl #2
   3f18c:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f190:	add	r5, r5, r3, lsl #3
   3f194:	add	r4, r4, r3
   3f198:	ldr	r3, [sp, #20]
   3f19c:	add	sl, sl, fp
   3f1a0:	cmp	sl, r3
   3f1a4:	blt	3f050 <GetDataSlab+0x1d224>
   3f1a8:	b	30874 <GetDataSlab+0xea48>
   3f1ac:	cmp	r3, #0
   3f1b0:	ble	30874 <GetDataSlab+0xea48>
   3f1b4:	ldr	r3, [sp, #20]
   3f1b8:	mov	r8, #0
   3f1bc:	mov	r7, r8
   3f1c0:	ldr	sl, [r9]
   3f1c4:	lsl	r3, r3, #3
   3f1c8:	str	r3, [sp, #24]
   3f1cc:	ldr	r3, [sp, #36]	; 0x24
   3f1d0:	sub	fp, r3, sl
   3f1d4:	lsl	r3, sl, #3
   3f1d8:	str	r3, [sp, #28]
   3f1dc:	lsl	r3, fp, #3
   3f1e0:	str	r3, [sp, #8]
   3f1e4:	cmp	sl, #0
   3f1e8:	beq	3f1f8 <GetDataSlab+0x1d3cc>
   3f1ec:	ldr	r3, [sp, #28]
   3f1f0:	add	r4, r4, sl
   3f1f4:	add	r6, r6, r3
   3f1f8:	ldr	r3, [sp, #20]
   3f1fc:	cmp	r3, #0
   3f200:	ble	3f228 <GetDataSlab+0x1d3fc>
   3f204:	ldr	r3, [sp, #4]
   3f208:	mov	r2, r6
   3f20c:	add	r1, r3, r8, lsl #1
   3f210:	ldr	r3, [sp, #24]
   3f214:	add	r0, r6, r3
   3f218:	ldr	r3, [r2], #8
   3f21c:	cmp	r0, r2
   3f220:	strh	r3, [r1], #2
   3f224:	bne	3f218 <GetDataSlab+0x1d3ec>
   3f228:	ldr	r3, [sp, #232]	; 0xe8
   3f22c:	add	r4, r4, fp
   3f230:	cmp	r3, #1
   3f234:	ldr	r3, [sp, #8]
   3f238:	add	r6, r6, r3
   3f23c:	ble	3f314 <GetDataSlab+0x1d4e8>
   3f240:	ldr	r3, [sp, #100]	; 0x64
   3f244:	ldr	r2, [sp, #228]	; 0xe4
   3f248:	add	r3, r3, #1
   3f24c:	ldr	r1, [r2, #4]
   3f250:	str	r3, [sp, #100]	; 0x64
   3f254:	sdiv	r2, r3, r1
   3f258:	mls	r3, r1, r2, r3
   3f25c:	cmp	r3, #0
   3f260:	bne	3f2fc <GetDataSlab+0x1d4d0>
   3f264:	add	ip, sp, #100	; 0x64
   3f268:	mov	r0, #1
   3f26c:	ldr	lr, [sp, #12]
   3f270:	ldr	r3, [sp, #228]	; 0xe4
   3f274:	add	r5, r3, #4
   3f278:	b	3f2c0 <GetDataSlab+0x1d494>
   3f27c:	ldr	r3, [lr, #-4]
   3f280:	ldr	r1, [r9, r0, lsl #2]
   3f284:	mla	r3, r1, r3, r2
   3f288:	add	r6, r6, r3, lsl #3
   3f28c:	add	r4, r4, r3
   3f290:	ldr	r3, [sp, #232]	; 0xe8
   3f294:	add	r0, r0, #1
   3f298:	cmp	r3, r0
   3f29c:	beq	3f314 <GetDataSlab+0x1d4e8>
   3f2a0:	ldr	r3, [ip]
   3f2a4:	ldr	r1, [r5, #4]!
   3f2a8:	add	r3, r3, #1
   3f2ac:	sdiv	r2, r3, r1
   3f2b0:	str	r3, [ip]
   3f2b4:	mls	r3, r1, r2, r3
   3f2b8:	cmp	r3, #0
   3f2bc:	bne	3f300 <GetDataSlab+0x1d4d4>
   3f2c0:	ldr	r2, [lr, #4]!
   3f2c4:	str	r7, [ip], #4
   3f2c8:	sdiv	r3, r4, r2
   3f2cc:	mls	r3, r2, r3, r4
   3f2d0:	cmp	r3, #0
   3f2d4:	sub	r2, r2, r3
   3f2d8:	bne	3f27c <GetDataSlab+0x1d450>
   3f2dc:	ldr	r3, [r9, r0, lsl #2]
   3f2e0:	cmp	r3, #0
   3f2e4:	beq	3f290 <GetDataSlab+0x1d464>
   3f2e8:	ldr	r2, [lr, #-4]
   3f2ec:	mul	r3, r2, r3
   3f2f0:	add	r6, r6, r3, lsl #3
   3f2f4:	add	r4, r4, r3
   3f2f8:	b	3f290 <GetDataSlab+0x1d464>
   3f2fc:	mov	r0, #1
   3f300:	add	r3, sp, #176	; 0xb0
   3f304:	add	r3, r3, r0, lsl #2
   3f308:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f30c:	add	r6, r6, r3, lsl #3
   3f310:	add	r4, r4, r3
   3f314:	ldr	r3, [sp, #20]
   3f318:	add	r8, r8, r3
   3f31c:	ldr	r3, [sp, #16]
   3f320:	cmp	r8, r3
   3f324:	blt	3f1e4 <GetDataSlab+0x1d3b8>
   3f328:	b	30874 <GetDataSlab+0xea48>
   3f32c:	cmp	r3, #0
   3f330:	ble	30874 <GetDataSlab+0xea48>
   3f334:	ldr	r3, [r9]
   3f338:	mov	sl, #0
   3f33c:	mov	r7, sl
   3f340:	str	r3, [sp, #8]
   3f344:	ldr	r3, [sp, #8]
   3f348:	cmp	r3, #0
   3f34c:	addne	r5, r5, r3, lsl #3
   3f350:	addne	r4, r4, r3
   3f354:	cmp	fp, #0
   3f358:	ble	3f398 <GetDataSlab+0x1d56c>
   3f35c:	ldr	r3, [sp, #4]
   3f360:	sub	r1, r5, #8
   3f364:	add	r0, r3, sl
   3f368:	mov	r2, r0
   3f36c:	ldr	r3, [r1, #8]!
   3f370:	ldr	ip, [sp, #228]	; 0xe4
   3f374:	strb	r3, [r2], #1
   3f378:	sub	r3, r2, r0
   3f37c:	ldr	fp, [ip]
   3f380:	cmp	fp, r3
   3f384:	bgt	3f36c <GetDataSlab+0x1d540>
   3f388:	ldr	r3, [r9]
   3f38c:	str	r3, [sp, #8]
   3f390:	ldr	r3, [r8]
   3f394:	str	r3, [sp, #16]
   3f398:	ldr	r2, [sp, #8]
   3f39c:	ldr	r3, [sp, #232]	; 0xe8
   3f3a0:	cmp	r3, #1
   3f3a4:	ldr	r3, [sp, #16]
   3f3a8:	sub	r3, r3, r2
   3f3ac:	add	r4, r4, r3
   3f3b0:	add	r5, r5, r3, lsl #3
   3f3b4:	ble	3f48c <GetDataSlab+0x1d660>
   3f3b8:	ldr	r3, [sp, #100]	; 0x64
   3f3bc:	ldr	r2, [sp, #228]	; 0xe4
   3f3c0:	add	r3, r3, #1
   3f3c4:	ldr	r1, [r2, #4]
   3f3c8:	str	r3, [sp, #100]	; 0x64
   3f3cc:	sdiv	r2, r3, r1
   3f3d0:	mls	r3, r1, r2, r3
   3f3d4:	cmp	r3, #0
   3f3d8:	bne	3f474 <GetDataSlab+0x1d648>
   3f3dc:	add	ip, sp, #100	; 0x64
   3f3e0:	mov	r0, #1
   3f3e4:	ldr	lr, [sp, #12]
   3f3e8:	ldr	r3, [sp, #228]	; 0xe4
   3f3ec:	add	r6, r3, #4
   3f3f0:	b	3f438 <GetDataSlab+0x1d60c>
   3f3f4:	ldr	r3, [lr, #-4]
   3f3f8:	ldr	r1, [r9, r0, lsl #2]
   3f3fc:	mla	r3, r1, r3, r2
   3f400:	add	r5, r5, r3, lsl #3
   3f404:	add	r4, r4, r3
   3f408:	ldr	r3, [sp, #232]	; 0xe8
   3f40c:	add	r0, r0, #1
   3f410:	cmp	r3, r0
   3f414:	beq	3f48c <GetDataSlab+0x1d660>
   3f418:	ldr	r3, [ip]
   3f41c:	ldr	r1, [r6, #4]!
   3f420:	add	r3, r3, #1
   3f424:	sdiv	r2, r3, r1
   3f428:	str	r3, [ip]
   3f42c:	mls	r3, r1, r2, r3
   3f430:	cmp	r3, #0
   3f434:	bne	3f478 <GetDataSlab+0x1d64c>
   3f438:	ldr	r2, [lr, #4]!
   3f43c:	str	r7, [ip], #4
   3f440:	sdiv	r3, r4, r2
   3f444:	mls	r3, r2, r3, r4
   3f448:	cmp	r3, #0
   3f44c:	sub	r2, r2, r3
   3f450:	bne	3f3f4 <GetDataSlab+0x1d5c8>
   3f454:	ldr	r3, [r9, r0, lsl #2]
   3f458:	cmp	r3, #0
   3f45c:	beq	3f408 <GetDataSlab+0x1d5dc>
   3f460:	ldr	r2, [lr, #-4]
   3f464:	mul	r3, r2, r3
   3f468:	add	r5, r5, r3, lsl #3
   3f46c:	add	r4, r4, r3
   3f470:	b	3f408 <GetDataSlab+0x1d5dc>
   3f474:	mov	r0, #1
   3f478:	add	r3, sp, #176	; 0xb0
   3f47c:	add	r3, r3, r0, lsl #2
   3f480:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f484:	add	r5, r5, r3, lsl #3
   3f488:	add	r4, r4, r3
   3f48c:	ldr	r3, [sp, #20]
   3f490:	add	sl, sl, fp
   3f494:	cmp	sl, r3
   3f498:	blt	3f344 <GetDataSlab+0x1d518>
   3f49c:	b	30874 <GetDataSlab+0xea48>
   3f4a0:	cmp	r3, #0
   3f4a4:	ble	30874 <GetDataSlab+0xea48>
   3f4a8:	ldr	r3, [sp, #20]
   3f4ac:	mov	r8, #0
   3f4b0:	mov	r7, r8
   3f4b4:	ldr	sl, [r9]
   3f4b8:	lsl	r3, r3, #3
   3f4bc:	str	r3, [sp, #24]
   3f4c0:	ldr	r3, [sp, #36]	; 0x24
   3f4c4:	sub	fp, r3, sl
   3f4c8:	lsl	r3, sl, #3
   3f4cc:	str	r3, [sp, #28]
   3f4d0:	lsl	r3, fp, #3
   3f4d4:	str	r3, [sp, #8]
   3f4d8:	cmp	sl, #0
   3f4dc:	beq	3f4ec <GetDataSlab+0x1d6c0>
   3f4e0:	ldr	r3, [sp, #28]
   3f4e4:	add	r4, r4, sl
   3f4e8:	add	r6, r6, r3
   3f4ec:	ldr	r3, [sp, #20]
   3f4f0:	cmp	r3, #0
   3f4f4:	ble	3f51c <GetDataSlab+0x1d6f0>
   3f4f8:	ldr	r3, [sp, #4]
   3f4fc:	mov	r1, r6
   3f500:	add	r0, r3, r8, lsl #3
   3f504:	ldr	r3, [sp, #24]
   3f508:	add	ip, r6, r3
   3f50c:	ldrd	r2, [r1], #8
   3f510:	cmp	r1, ip
   3f514:	strd	r2, [r0], #8
   3f518:	bne	3f50c <GetDataSlab+0x1d6e0>
   3f51c:	ldr	r3, [sp, #232]	; 0xe8
   3f520:	add	r4, r4, fp
   3f524:	cmp	r3, #1
   3f528:	ldr	r3, [sp, #8]
   3f52c:	add	r6, r6, r3
   3f530:	ble	3f608 <GetDataSlab+0x1d7dc>
   3f534:	ldr	r3, [sp, #100]	; 0x64
   3f538:	ldr	r2, [sp, #228]	; 0xe4
   3f53c:	add	r3, r3, #1
   3f540:	ldr	r1, [r2, #4]
   3f544:	str	r3, [sp, #100]	; 0x64
   3f548:	sdiv	r2, r3, r1
   3f54c:	mls	r3, r1, r2, r3
   3f550:	cmp	r3, #0
   3f554:	bne	3f5f0 <GetDataSlab+0x1d7c4>
   3f558:	add	ip, sp, #100	; 0x64
   3f55c:	mov	r0, #1
   3f560:	ldr	lr, [sp, #12]
   3f564:	ldr	r3, [sp, #228]	; 0xe4
   3f568:	add	r5, r3, #4
   3f56c:	b	3f5b4 <GetDataSlab+0x1d788>
   3f570:	ldr	r3, [lr, #-4]
   3f574:	ldr	r1, [r9, r0, lsl #2]
   3f578:	mla	r3, r1, r3, r2
   3f57c:	add	r6, r6, r3, lsl #3
   3f580:	add	r4, r4, r3
   3f584:	ldr	r3, [sp, #232]	; 0xe8
   3f588:	add	r0, r0, #1
   3f58c:	cmp	r3, r0
   3f590:	beq	3f608 <GetDataSlab+0x1d7dc>
   3f594:	ldr	r3, [ip]
   3f598:	ldr	r1, [r5, #4]!
   3f59c:	add	r3, r3, #1
   3f5a0:	sdiv	r2, r3, r1
   3f5a4:	str	r3, [ip]
   3f5a8:	mls	r3, r1, r2, r3
   3f5ac:	cmp	r3, #0
   3f5b0:	bne	3f5f4 <GetDataSlab+0x1d7c8>
   3f5b4:	ldr	r2, [lr, #4]!
   3f5b8:	str	r7, [ip], #4
   3f5bc:	sdiv	r3, r4, r2
   3f5c0:	mls	r3, r2, r3, r4
   3f5c4:	cmp	r3, #0
   3f5c8:	sub	r2, r2, r3
   3f5cc:	bne	3f570 <GetDataSlab+0x1d744>
   3f5d0:	ldr	r3, [r9, r0, lsl #2]
   3f5d4:	cmp	r3, #0
   3f5d8:	beq	3f584 <GetDataSlab+0x1d758>
   3f5dc:	ldr	r2, [lr, #-4]
   3f5e0:	mul	r3, r2, r3
   3f5e4:	add	r6, r6, r3, lsl #3
   3f5e8:	add	r4, r4, r3
   3f5ec:	b	3f584 <GetDataSlab+0x1d758>
   3f5f0:	mov	r0, #1
   3f5f4:	add	r3, sp, #176	; 0xb0
   3f5f8:	add	r3, r3, r0, lsl #2
   3f5fc:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f600:	add	r6, r6, r3, lsl #3
   3f604:	add	r4, r4, r3
   3f608:	ldr	r3, [sp, #20]
   3f60c:	add	r8, r8, r3
   3f610:	ldr	r3, [sp, #16]
   3f614:	cmp	r8, r3
   3f618:	blt	3f4d8 <GetDataSlab+0x1d6ac>
   3f61c:	b	30874 <GetDataSlab+0xea48>
   3f620:	cmp	r3, #0
   3f624:	ble	30874 <GetDataSlab+0xea48>
   3f628:	ldr	r3, [r9]
   3f62c:	mov	sl, #0
   3f630:	mov	r7, sl
   3f634:	str	r3, [sp, #8]
   3f638:	ldr	r3, [sp, #8]
   3f63c:	cmp	r3, #0
   3f640:	addne	r5, r5, r3, lsl #3
   3f644:	addne	r4, r4, r3
   3f648:	cmp	fp, #0
   3f64c:	ble	3f68c <GetDataSlab+0x1d860>
   3f650:	ldr	r3, [sp, #4]
   3f654:	sub	r0, r5, #8
   3f658:	add	r1, r3, sl, lsl #2
   3f65c:	mov	r3, #0
   3f660:	ldr	r2, [r0, #8]!
   3f664:	add	r3, r3, #1
   3f668:	str	r2, [r1], #4
   3f66c:	ldr	r2, [sp, #228]	; 0xe4
   3f670:	ldr	fp, [r2]
   3f674:	cmp	fp, r3
   3f678:	bgt	3f660 <GetDataSlab+0x1d834>
   3f67c:	ldr	r3, [r9]
   3f680:	str	r3, [sp, #8]
   3f684:	ldr	r3, [r8]
   3f688:	str	r3, [sp, #16]
   3f68c:	ldr	r2, [sp, #8]
   3f690:	ldr	r3, [sp, #232]	; 0xe8
   3f694:	cmp	r3, #1
   3f698:	ldr	r3, [sp, #16]
   3f69c:	sub	r3, r3, r2
   3f6a0:	add	r4, r4, r3
   3f6a4:	add	r5, r5, r3, lsl #3
   3f6a8:	ble	3f780 <GetDataSlab+0x1d954>
   3f6ac:	ldr	r3, [sp, #100]	; 0x64
   3f6b0:	ldr	r2, [sp, #228]	; 0xe4
   3f6b4:	add	r3, r3, #1
   3f6b8:	ldr	r1, [r2, #4]
   3f6bc:	str	r3, [sp, #100]	; 0x64
   3f6c0:	sdiv	r2, r3, r1
   3f6c4:	mls	r3, r1, r2, r3
   3f6c8:	cmp	r3, #0
   3f6cc:	bne	3f768 <GetDataSlab+0x1d93c>
   3f6d0:	add	ip, sp, #100	; 0x64
   3f6d4:	mov	r0, #1
   3f6d8:	ldr	lr, [sp, #12]
   3f6dc:	ldr	r3, [sp, #228]	; 0xe4
   3f6e0:	add	r6, r3, #4
   3f6e4:	b	3f72c <GetDataSlab+0x1d900>
   3f6e8:	ldr	r3, [lr, #-4]
   3f6ec:	ldr	r1, [r9, r0, lsl #2]
   3f6f0:	mla	r3, r1, r3, r2
   3f6f4:	add	r5, r5, r3, lsl #3
   3f6f8:	add	r4, r4, r3
   3f6fc:	ldr	r3, [sp, #232]	; 0xe8
   3f700:	add	r0, r0, #1
   3f704:	cmp	r3, r0
   3f708:	beq	3f780 <GetDataSlab+0x1d954>
   3f70c:	ldr	r3, [ip]
   3f710:	ldr	r1, [r6, #4]!
   3f714:	add	r3, r3, #1
   3f718:	sdiv	r2, r3, r1
   3f71c:	str	r3, [ip]
   3f720:	mls	r3, r1, r2, r3
   3f724:	cmp	r3, #0
   3f728:	bne	3f76c <GetDataSlab+0x1d940>
   3f72c:	ldr	r2, [lr, #4]!
   3f730:	str	r7, [ip], #4
   3f734:	sdiv	r3, r4, r2
   3f738:	mls	r3, r2, r3, r4
   3f73c:	cmp	r3, #0
   3f740:	sub	r2, r2, r3
   3f744:	bne	3f6e8 <GetDataSlab+0x1d8bc>
   3f748:	ldr	r3, [r9, r0, lsl #2]
   3f74c:	cmp	r3, #0
   3f750:	beq	3f6fc <GetDataSlab+0x1d8d0>
   3f754:	ldr	r2, [lr, #-4]
   3f758:	mul	r3, r2, r3
   3f75c:	add	r5, r5, r3, lsl #3
   3f760:	add	r4, r4, r3
   3f764:	b	3f6fc <GetDataSlab+0x1d8d0>
   3f768:	mov	r0, #1
   3f76c:	add	r3, sp, #176	; 0xb0
   3f770:	add	r3, r3, r0, lsl #2
   3f774:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f778:	add	r5, r5, r3, lsl #3
   3f77c:	add	r4, r4, r3
   3f780:	ldr	r3, [sp, #20]
   3f784:	add	sl, sl, fp
   3f788:	cmp	sl, r3
   3f78c:	blt	3f638 <GetDataSlab+0x1d80c>
   3f790:	b	30874 <GetDataSlab+0xea48>
   3f794:	cmp	r3, #0
   3f798:	ble	30874 <GetDataSlab+0xea48>
   3f79c:	ldr	r3, [sp, #20]
   3f7a0:	mov	r8, #0
   3f7a4:	mov	r7, r8
   3f7a8:	ldr	sl, [r9]
   3f7ac:	lsl	r3, r3, #3
   3f7b0:	str	r3, [sp, #24]
   3f7b4:	ldr	r3, [sp, #36]	; 0x24
   3f7b8:	sub	fp, r3, sl
   3f7bc:	lsl	r3, sl, #3
   3f7c0:	str	r3, [sp, #28]
   3f7c4:	lsl	r3, fp, #3
   3f7c8:	str	r3, [sp, #8]
   3f7cc:	cmp	sl, #0
   3f7d0:	beq	3f7e0 <GetDataSlab+0x1d9b4>
   3f7d4:	ldr	r3, [sp, #28]
   3f7d8:	add	r4, r4, sl
   3f7dc:	add	r6, r6, r3
   3f7e0:	ldr	r3, [sp, #20]
   3f7e4:	cmp	r3, #0
   3f7e8:	ble	3f810 <GetDataSlab+0x1d9e4>
   3f7ec:	ldr	r3, [sp, #4]
   3f7f0:	mov	r1, r6
   3f7f4:	add	r0, r3, r8, lsl #3
   3f7f8:	ldr	r3, [sp, #24]
   3f7fc:	add	ip, r6, r3
   3f800:	ldrd	r2, [r1], #8
   3f804:	cmp	r1, ip
   3f808:	strd	r2, [r0], #8
   3f80c:	bne	3f800 <GetDataSlab+0x1d9d4>
   3f810:	ldr	r3, [sp, #232]	; 0xe8
   3f814:	add	r4, r4, fp
   3f818:	cmp	r3, #1
   3f81c:	ldr	r3, [sp, #8]
   3f820:	add	r6, r6, r3
   3f824:	ble	3f8fc <GetDataSlab+0x1dad0>
   3f828:	ldr	r3, [sp, #100]	; 0x64
   3f82c:	ldr	r2, [sp, #228]	; 0xe4
   3f830:	add	r3, r3, #1
   3f834:	ldr	r1, [r2, #4]
   3f838:	str	r3, [sp, #100]	; 0x64
   3f83c:	sdiv	r2, r3, r1
   3f840:	mls	r3, r1, r2, r3
   3f844:	cmp	r3, #0
   3f848:	bne	3f8e4 <GetDataSlab+0x1dab8>
   3f84c:	add	ip, sp, #100	; 0x64
   3f850:	mov	r0, #1
   3f854:	ldr	lr, [sp, #12]
   3f858:	ldr	r3, [sp, #228]	; 0xe4
   3f85c:	add	r5, r3, #4
   3f860:	b	3f8a8 <GetDataSlab+0x1da7c>
   3f864:	ldr	r3, [lr, #-4]
   3f868:	ldr	r1, [r9, r0, lsl #2]
   3f86c:	mla	r3, r1, r3, r2
   3f870:	add	r6, r6, r3, lsl #3
   3f874:	add	r4, r4, r3
   3f878:	ldr	r3, [sp, #232]	; 0xe8
   3f87c:	add	r0, r0, #1
   3f880:	cmp	r3, r0
   3f884:	beq	3f8fc <GetDataSlab+0x1dad0>
   3f888:	ldr	r3, [ip]
   3f88c:	ldr	r1, [r5, #4]!
   3f890:	add	r3, r3, #1
   3f894:	sdiv	r2, r3, r1
   3f898:	str	r3, [ip]
   3f89c:	mls	r3, r1, r2, r3
   3f8a0:	cmp	r3, #0
   3f8a4:	bne	3f8e8 <GetDataSlab+0x1dabc>
   3f8a8:	ldr	r2, [lr, #4]!
   3f8ac:	str	r7, [ip], #4
   3f8b0:	sdiv	r3, r4, r2
   3f8b4:	mls	r3, r2, r3, r4
   3f8b8:	cmp	r3, #0
   3f8bc:	sub	r2, r2, r3
   3f8c0:	bne	3f864 <GetDataSlab+0x1da38>
   3f8c4:	ldr	r3, [r9, r0, lsl #2]
   3f8c8:	cmp	r3, #0
   3f8cc:	beq	3f878 <GetDataSlab+0x1da4c>
   3f8d0:	ldr	r2, [lr, #-4]
   3f8d4:	mul	r3, r2, r3
   3f8d8:	add	r6, r6, r3, lsl #3
   3f8dc:	add	r4, r4, r3
   3f8e0:	b	3f878 <GetDataSlab+0x1da4c>
   3f8e4:	mov	r0, #1
   3f8e8:	add	r3, sp, #176	; 0xb0
   3f8ec:	add	r3, r3, r0, lsl #2
   3f8f0:	ldr	r3, [r3, #-120]	; 0xffffff88
   3f8f4:	add	r6, r6, r3, lsl #3
   3f8f8:	add	r4, r4, r3
   3f8fc:	ldr	r3, [sp, #20]
   3f900:	add	r8, r8, r3
   3f904:	ldr	r3, [sp, #16]
   3f908:	cmp	r8, r3
   3f90c:	blt	3f7cc <GetDataSlab+0x1d9a0>
   3f910:	b	30874 <GetDataSlab+0xea48>
   3f914:	ldr	r3, [sp, #20]
   3f918:	mov	r4, #0
   3f91c:	str	r3, [sp, #16]
   3f920:	b	2e260 <GetDataSlab+0xc434>
   3f924:	ldr	r3, [sp, #20]
   3f928:	mov	r4, #0
   3f92c:	str	r3, [sp, #16]
   3f930:	b	2e77c <GetDataSlab+0xc950>
   3f934:	ldr	r3, [sp, #20]
   3f938:	mov	r4, #0
   3f93c:	str	r3, [sp, #16]
   3f940:	b	2dfb8 <GetDataSlab+0xc18c>
   3f944:	mov	lr, #0
   3f948:	b	2e9f8 <GetDataSlab+0xcbcc>
   3f94c:	ldr	r3, [sp, #20]
   3f950:	mov	r4, #0
   3f954:	str	r3, [sp, #16]
   3f958:	b	253a0 <GetDataSlab+0x3574>
   3f95c:	ldr	r3, [sp, #20]
   3f960:	mov	r4, #0
   3f964:	str	r3, [sp, #16]
   3f968:	b	258fc <GetDataSlab+0x3ad0>
   3f96c:	ldr	r3, [sp, #20]
   3f970:	mov	r4, #0
   3f974:	str	r3, [sp, #16]
   3f978:	b	2564c <GetDataSlab+0x3820>
   3f97c:	mov	lr, #0
   3f980:	b	2468c <GetDataSlab+0x2860>
   3f984:	ldr	r3, [sp, #20]
   3f988:	mov	r4, #0
   3f98c:	str	r3, [sp, #16]
   3f990:	b	29864 <GetDataSlab+0x7a38>
   3f994:	ldr	r3, [sp, #20]
   3f998:	mov	r4, #0
   3f99c:	str	r3, [sp, #16]
   3f9a0:	b	28878 <GetDataSlab+0x6a4c>
   3f9a4:	ldr	r3, [sp, #20]
   3f9a8:	mov	r4, #0
   3f9ac:	str	r3, [sp, #16]
   3f9b0:	b	285cc <GetDataSlab+0x67a0>
   3f9b4:	ldr	r3, [sp, #20]
   3f9b8:	mov	r4, #0
   3f9bc:	str	r3, [sp, #16]
   3f9c0:	b	28b28 <GetDataSlab+0x6cfc>
   3f9c4:	ldr	r3, [sp, #20]
   3f9c8:	mov	r4, #0
   3f9cc:	str	r3, [sp, #16]
   3f9d0:	b	2d7b4 <GetDataSlab+0xb988>
   3f9d4:	ldr	r3, [sp, #20]
   3f9d8:	mov	r4, #0
   3f9dc:	str	r3, [sp, #16]
   3f9e0:	b	2dd10 <GetDataSlab+0xbee4>
   3f9e4:	ldr	r3, [sp, #20]
   3f9e8:	mov	r4, #0
   3f9ec:	str	r3, [sp, #16]
   3f9f0:	b	2da68 <GetDataSlab+0xbc3c>
   3f9f4:	ldr	r3, [sp, #20]
   3f9f8:	mov	r4, #0
   3f9fc:	str	r3, [sp, #16]
   3fa00:	b	2e50c <GetDataSlab+0xc6e0>
   3fa04:	mov	lr, #0
   3fa08:	b	2ab78 <GetDataSlab+0x8d4c>
   3fa0c:	mov	r4, #0
   3fa10:	b	29d4c <GetDataSlab+0x7f20>
   3fa14:	mov	r4, #0
   3fa18:	b	29ae8 <GetDataSlab+0x7cbc>
   3fa1c:	mov	r4, #0
   3fa20:	b	29fb0 <GetDataSlab+0x8184>
   3fa24:	ldr	r3, [sp, #20]
   3fa28:	mov	r4, #0
   3fa2c:	str	r3, [sp, #16]
   3fa30:	b	2c580 <GetDataSlab+0xa754>
   3fa34:	ldr	r3, [sp, #20]
   3fa38:	mov	r4, #0
   3fa3c:	str	r3, [sp, #16]
   3fa40:	b	2b5cc <GetDataSlab+0x97a0>
   3fa44:	ldr	r3, [sp, #20]
   3fa48:	mov	r4, #0
   3fa4c:	str	r3, [sp, #16]
   3fa50:	b	2cad0 <GetDataSlab+0xaca4>
   3fa54:	ldr	r3, [sp, #20]
   3fa58:	mov	r4, #0
   3fa5c:	str	r3, [sp, #16]
   3fa60:	b	22c24 <GetDataSlab+0xdf8>
   3fa64:	mov	lr, #0
   3fa68:	b	229dc <GetDataSlab+0xbb0>
   3fa6c:	ldr	r3, [sp, #20]
   3fa70:	mov	r4, #0
   3fa74:	str	r3, [sp, #16]
   3fa78:	b	2bb2c <GetDataSlab+0x9d00>
   3fa7c:	mov	r4, #0
   3fa80:	b	2a6c4 <GetDataSlab+0x8898>
   3fa84:	ldr	r3, [sp, #20]
   3fa88:	mov	r4, #0
   3fa8c:	str	r3, [sp, #16]
   3fa90:	b	2d024 <GetDataSlab+0xb1f8>
   3fa94:	ldr	r3, [sp, #20]
   3fa98:	mov	r4, #0
   3fa9c:	str	r3, [sp, #16]
   3faa0:	b	28dd8 <GetDataSlab+0x6fac>
   3faa4:	ldr	r3, [sp, #20]
   3faa8:	mov	r4, #0
   3faac:	str	r3, [sp, #16]
   3fab0:	b	2b87c <GetDataSlab+0x9a50>
   3fab4:	ldr	r3, [sp, #20]
   3fab8:	mov	r4, #0
   3fabc:	str	r3, [sp, #16]
   3fac0:	b	2cd78 <GetDataSlab+0xaf4c>
   3fac4:	ldr	r3, [sp, #20]
   3fac8:	mov	r4, #0
   3facc:	str	r3, [sp, #16]
   3fad0:	b	2d294 <GetDataSlab+0xb468>
   3fad4:	ldr	r3, [sp, #20]
   3fad8:	mov	r4, #0
   3fadc:	str	r3, [sp, #16]
   3fae0:	b	2c2cc <GetDataSlab+0xa4a0>
   3fae4:	ldr	r3, [sp, #20]
   3fae8:	mov	r4, #0
   3faec:	str	r3, [sp, #16]
   3faf0:	b	2d500 <GetDataSlab+0xb6d4>
   3faf4:	ldr	r3, [sp, #20]
   3faf8:	mov	r4, #0
   3fafc:	str	r3, [sp, #16]
   3fb00:	b	2c828 <GetDataSlab+0xa9fc>
   3fb04:	ldr	r3, [sp, #20]
   3fb08:	mov	r4, #0
   3fb0c:	str	r3, [sp, #16]
   3fb10:	b	2c058 <GetDataSlab+0xa22c>
   3fb14:	ldr	r3, [sp, #20]
   3fb18:	mov	r4, #0
   3fb1c:	str	r3, [sp, #16]
   3fb20:	b	2bde0 <GetDataSlab+0x9fb4>
   3fb24:	ldr	r3, [sp, #20]
   3fb28:	mov	r4, #0
   3fb2c:	str	r3, [sp, #16]
   3fb30:	b	24e44 <GetDataSlab+0x3018>
   3fb34:	ldr	r3, [sp, #20]
   3fb38:	mov	r4, #0
   3fb3c:	str	r3, [sp, #16]
   3fb40:	b	27b8c <GetDataSlab+0x5d60>
   3fb44:	mov	r4, #0
   3fb48:	b	235fc <GetDataSlab+0x17d0>
   3fb4c:	mov	lr, #0
   3fb50:	b	233a0 <GetDataSlab+0x1574>
   3fb54:	mov	lr, #0
   3fb58:	b	22ee8 <GetDataSlab+0x10bc>
   3fb5c:	ldr	r3, [sp, #20]
   3fb60:	mov	r4, #0
   3fb64:	str	r3, [sp, #16]
   3fb68:	b	2b31c <GetDataSlab+0x94f0>
   3fb6c:	mov	r4, #0
   3fb70:	b	2a468 <GetDataSlab+0x863c>
   3fb74:	ldr	r3, [sp, #20]
   3fb78:	mov	r4, #0
   3fb7c:	str	r3, [sp, #16]
   3fb80:	b	2b070 <GetDataSlab+0x9244>
   3fb84:	ldr	r3, [sp, #20]
   3fb88:	mov	r4, #0
   3fb8c:	str	r3, [sp, #16]
   3fb90:	b	2adc0 <GetDataSlab+0x8f94>
   3fb94:	mov	lr, #0
   3fb98:	b	2a920 <GetDataSlab+0x8af4>
   3fb9c:	mov	lr, #0
   3fba0:	b	2ec58 <GetDataSlab+0xce2c>
   3fba4:	mov	lr, #0
   3fba8:	b	23144 <GetDataSlab+0x1318>
   3fbac:	ldr	r3, [sp, #20]
   3fbb0:	mov	r4, #0
   3fbb4:	str	r3, [sp, #16]
   3fbb8:	b	280e8 <GetDataSlab+0x62bc>
   3fbbc:	ldr	r3, [sp, #20]
   3fbc0:	mov	r4, #0
   3fbc4:	str	r3, [sp, #16]
   3fbc8:	b	278dc <GetDataSlab+0x5ab0>
   3fbcc:	ldr	r3, [sp, #20]
   3fbd0:	mov	r4, #0
   3fbd4:	str	r3, [sp, #16]
   3fbd8:	b	2835c <GetDataSlab+0x6530>
   3fbdc:	mov	lr, #0
   3fbe0:	b	26768 <GetDataSlab+0x493c>
   3fbe4:	mov	lr, #0
   3fbe8:	b	26c20 <GetDataSlab+0x4df4>
   3fbec:	mov	lr, #0
   3fbf0:	b	2650c <GetDataSlab+0x46e0>
   3fbf4:	mov	lr, #0
   3fbf8:	b	26e78 <GetDataSlab+0x504c>
   3fbfc:	ldr	r3, [sp, #20]
   3fc00:	mov	r7, #0
   3fc04:	str	r3, [sp, #16]
   3fc08:	b	270c0 <GetDataSlab+0x5294>
   3fc0c:	ldr	r3, [sp, #20]
   3fc10:	mov	r4, #0
   3fc14:	str	r3, [sp, #16]
   3fc18:	b	27630 <GetDataSlab+0x5804>
   3fc1c:	ldr	r3, [sp, #20]
   3fc20:	mov	r7, #0
   3fc24:	str	r3, [sp, #16]
   3fc28:	b	27378 <GetDataSlab+0x554c>
   3fc2c:	mov	r4, #0
   3fc30:	b	2a20c <GetDataSlab+0x83e0>
   3fc34:	ldr	r3, [sp, #20]
   3fc38:	mov	r4, #0
   3fc3c:	str	r3, [sp, #16]
   3fc40:	b	29088 <GetDataSlab+0x725c>
   3fc44:	ldr	r3, [sp, #20]
   3fc48:	mov	r4, #0
   3fc4c:	str	r3, [sp, #16]
   3fc50:	b	295ec <GetDataSlab+0x77c0>
   3fc54:	ldr	r3, [sp, #20]
   3fc58:	mov	r4, #0
   3fc5c:	str	r3, [sp, #16]
   3fc60:	b	29338 <GetDataSlab+0x750c>
   3fc64:	ldr	r3, [sp, #20]
   3fc68:	mov	r4, #0
   3fc6c:	str	r3, [sp, #16]
   3fc70:	b	27e38 <GetDataSlab+0x600c>
   3fc74:	mov	lr, #0
   3fc78:	b	22528 <GetDataSlab+0x6fc>
   3fc7c:	mov	lr, #0
   3fc80:	b	22784 <GetDataSlab+0x958>
   3fc84:	mov	r4, #0
   3fc88:	b	23860 <GetDataSlab+0x1a34>
   3fc8c:	ldr	r3, [sp, #20]
   3fc90:	mov	r4, #0
   3fc94:	str	r3, [sp, #16]
   3fc98:	b	25b70 <GetDataSlab+0x3d44>
   3fc9c:	mov	lr, #0
   3fca0:	b	24434 <GetDataSlab+0x2608>
   3fca4:	ldr	r3, [sp, #20]
   3fca8:	mov	r7, #0
   3fcac:	str	r3, [sp, #16]
   3fcb0:	b	248d4 <GetDataSlab+0x2aa8>
   3fcb4:	mov	r4, #0
   3fcb8:	b	241d8 <GetDataSlab+0x23ac>
   3fcbc:	ldr	r3, [sp, #20]
   3fcc0:	mov	r7, #0
   3fcc4:	str	r3, [sp, #16]
   3fcc8:	b	24b8c <GetDataSlab+0x2d60>
   3fccc:	mov	lr, #0
   3fcd0:	b	25df0 <GetDataSlab+0x3fc4>
   3fcd4:	mov	lr, #0
   3fcd8:	b	262b0 <GetDataSlab+0x4484>
   3fcdc:	mov	lr, #0
   3fce0:	b	26050 <GetDataSlab+0x4224>
   3fce4:	mov	lr, #0
   3fce8:	b	269c4 <GetDataSlab+0x4b98>
   3fcec:	mov	r4, #0
   3fcf0:	b	23ac4 <GetDataSlab+0x1c98>
   3fcf4:	mov	r4, #0
   3fcf8:	b	23f7c <GetDataSlab+0x2150>
   3fcfc:	mov	r4, #0
   3fd00:	b	23d20 <GetDataSlab+0x1ef4>
   3fd04:	ldr	r3, [sp, #20]
   3fd08:	mov	r4, #0
   3fd0c:	str	r3, [sp, #16]
   3fd10:	b	250f0 <GetDataSlab+0x32c4>
   3fd14:	ldr	r3, [sp, #16]
   3fd18:	cmp	r6, #0
   3fd1c:	mla	r3, r5, r3, r0
   3fd20:	ldr	r0, [sp, #8]
   3fd24:	add	r9, r0, r3, lsl #3
   3fd28:	ble	30874 <GetDataSlab+0xea48>
   3fd2c:	ldr	r3, [sp, #16]
   3fd30:	lsl	r8, r1, #3
   3fd34:	mov	sl, #0
   3fd38:	mul	r3, r2, r3
   3fd3c:	lsl	r2, fp, #3
   3fd40:	lsl	r3, r3, #3
   3fd44:	str	r3, [sp, #8]
   3fd48:	str	r2, [sp, #12]
   3fd4c:	cmp	fp, #0
   3fd50:	ble	3fd8c <GetDataSlab+0x1df60>
   3fd54:	ldr	r7, [sp, #4]
   3fd58:	mov	r5, r9
   3fd5c:	mov	r4, #0
   3fd60:	add	r4, r4, #1
   3fd64:	ldrd	r0, [r5]
   3fd68:	add	r5, r5, r8
   3fd6c:	bl	4e0e4 <__aeabi_l2d>
   3fd70:	cmp	fp, r4
   3fd74:	strd	r0, [r7], #8
   3fd78:	bne	3fd60 <GetDataSlab+0x1df34>
   3fd7c:	ldr	r3, [sp, #4]
   3fd80:	ldr	r2, [sp, #12]
   3fd84:	add	r3, r3, r2
   3fd88:	str	r3, [sp, #4]
   3fd8c:	ldr	r3, [sp, #8]
   3fd90:	add	sl, sl, #1
   3fd94:	cmp	r6, sl
   3fd98:	add	r9, r9, r3
   3fd9c:	bne	3fd4c <GetDataSlab+0x1df20>
   3fda0:	b	30874 <GetDataSlab+0xea48>
   3fda4:	ldr	r3, [sp, #16]
   3fda8:	cmp	r6, #0
   3fdac:	mla	r3, r5, r3, r0
   3fdb0:	ldr	r0, [sp, #8]
   3fdb4:	add	ip, r0, r3, lsl #3
   3fdb8:	ble	30874 <GetDataSlab+0xea48>
   3fdbc:	ldr	r3, [sp, #16]
   3fdc0:	lsl	r0, r1, #3
   3fdc4:	mov	lr, #0
   3fdc8:	lsl	r5, fp, #1
   3fdcc:	mul	r3, r2, r3
   3fdd0:	lsl	r4, r3, #3
   3fdd4:	cmp	fp, #0
   3fdd8:	ble	3fe00 <GetDataSlab+0x1dfd4>
   3fddc:	ldr	r2, [sp, #4]
   3fde0:	mov	r3, ip
   3fde4:	add	r1, r2, r5
   3fde8:	ldr	r2, [r3], r0
   3fdec:	ldr	r7, [sp, #4]
   3fdf0:	strh	r2, [r7], #2
   3fdf4:	cmp	r1, r7
   3fdf8:	str	r7, [sp, #4]
   3fdfc:	bne	3fde8 <GetDataSlab+0x1dfbc>
   3fe00:	add	lr, lr, #1
   3fe04:	add	ip, ip, r4
   3fe08:	cmp	r6, lr
   3fe0c:	bne	3fdd4 <GetDataSlab+0x1dfa8>
   3fe10:	b	30874 <GetDataSlab+0xea48>
   3fe14:	ldr	r1, [sp, #8]
   3fe18:	cmp	r6, #0
   3fe1c:	ldr	r3, [sp, #16]
   3fe20:	mla	r3, r5, r3, r0
   3fe24:	movgt	r0, #0
   3fe28:	add	r1, r1, r3, lsl #3
   3fe2c:	ble	30874 <GetDataSlab+0xea48>
   3fe30:	cmp	fp, #0
   3fe34:	movgt	r3, #0
   3fe38:	ble	3fe7c <GetDataSlab+0x1e050>
   3fe3c:	ldr	r2, [sl]
   3fe40:	ldr	ip, [sp, #4]
   3fe44:	mul	r2, r2, r3
   3fe48:	add	r3, r3, #1
   3fe4c:	ldr	r2, [r1, r2, lsl #3]
   3fe50:	strb	r2, [ip], #1
   3fe54:	ldr	r2, [sp, #228]	; 0xe4
   3fe58:	str	ip, [sp, #4]
   3fe5c:	ldr	fp, [r2]
   3fe60:	cmp	fp, r3
   3fe64:	bgt	3fe3c <GetDataSlab+0x1e010>
   3fe68:	ldr	r3, [r8]
   3fe6c:	ldr	r2, [sl, #4]
   3fe70:	str	r3, [sp, #16]
   3fe74:	ldr	r3, [sp, #228]	; 0xe4
   3fe78:	ldr	r6, [r3, #4]
   3fe7c:	add	r0, r0, #1
   3fe80:	ldr	r3, [sp, #16]
   3fe84:	cmp	r6, r0
   3fe88:	mul	r3, r3, r2
   3fe8c:	add	r1, r1, r3, lsl #3
   3fe90:	bgt	3fe30 <GetDataSlab+0x1e004>
   3fe94:	b	30874 <GetDataSlab+0xea48>
   3fe98:	ldr	r3, [sp, #16]
   3fe9c:	cmp	r6, #0
   3fea0:	mla	r3, r5, r3, r0
   3fea4:	ldr	r0, [sp, #8]
   3fea8:	add	ip, r0, r3, lsl #3
   3feac:	ble	30874 <GetDataSlab+0xea48>
   3feb0:	ldr	r3, [sp, #16]
   3feb4:	lsl	r0, r1, #3
   3feb8:	mov	lr, #0
   3febc:	lsl	r5, fp, #1
   3fec0:	mul	r3, r2, r3
   3fec4:	lsl	r4, r3, #3
   3fec8:	cmp	fp, #0
   3fecc:	ble	3fef4 <GetDataSlab+0x1e0c8>
   3fed0:	ldr	r2, [sp, #4]
   3fed4:	mov	r3, ip
   3fed8:	add	r1, r2, r5
   3fedc:	ldr	r2, [r3], r0
   3fee0:	ldr	r7, [sp, #4]
   3fee4:	strh	r2, [r7], #2
   3fee8:	cmp	r1, r7
   3feec:	str	r7, [sp, #4]
   3fef0:	bne	3fedc <GetDataSlab+0x1e0b0>
   3fef4:	add	lr, lr, #1
   3fef8:	add	ip, ip, r4
   3fefc:	cmp	r6, lr
   3ff00:	bne	3fec8 <GetDataSlab+0x1e09c>
   3ff04:	b	30874 <GetDataSlab+0xea48>
   3ff08:	ldr	r1, [sp, #8]
   3ff0c:	cmp	r6, #0
   3ff10:	ldr	r3, [sp, #16]
   3ff14:	mla	r3, r5, r3, r0
   3ff18:	movgt	r0, #0
   3ff1c:	add	r1, r1, r3, lsl #3
   3ff20:	ble	30874 <GetDataSlab+0xea48>
   3ff24:	cmp	fp, #0
   3ff28:	movgt	r3, #0
   3ff2c:	ble	3ff70 <GetDataSlab+0x1e144>
   3ff30:	ldr	r2, [sl]
   3ff34:	ldr	ip, [sp, #4]
   3ff38:	mul	r2, r2, r3
   3ff3c:	add	r3, r3, #1
   3ff40:	ldr	r2, [r1, r2, lsl #3]
   3ff44:	str	r2, [ip], #4
   3ff48:	ldr	r2, [sp, #228]	; 0xe4
   3ff4c:	str	ip, [sp, #4]
   3ff50:	ldr	fp, [r2]
   3ff54:	cmp	fp, r3
   3ff58:	bgt	3ff30 <GetDataSlab+0x1e104>
   3ff5c:	ldr	r3, [r8]
   3ff60:	ldr	r2, [sl, #4]
   3ff64:	str	r3, [sp, #16]
   3ff68:	ldr	r3, [sp, #228]	; 0xe4
   3ff6c:	ldr	r6, [r3, #4]
   3ff70:	add	r0, r0, #1
   3ff74:	ldr	r3, [sp, #16]
   3ff78:	cmp	r6, r0
   3ff7c:	mul	r3, r3, r2
   3ff80:	add	r1, r1, r3, lsl #3
   3ff84:	bgt	3ff24 <GetDataSlab+0x1e0f8>
   3ff88:	b	30874 <GetDataSlab+0xea48>
   3ff8c:	ldr	r3, [sp, #16]
   3ff90:	cmp	r6, #0
   3ff94:	mla	r3, r5, r3, r0
   3ff98:	ldr	r0, [sp, #8]
   3ff9c:	add	r4, r0, r3, lsl #3
   3ffa0:	ble	30874 <GetDataSlab+0xea48>
   3ffa4:	ldr	r3, [sp, #16]
   3ffa8:	lsl	lr, r1, #3
   3ffac:	mov	r5, #0
   3ffb0:	lsl	r8, fp, #3
   3ffb4:	mul	r3, r2, r3
   3ffb8:	lsl	r7, r3, #3
   3ffbc:	cmp	fp, #0
   3ffc0:	ble	3fff4 <GetDataSlab+0x1e1c8>
   3ffc4:	ldr	ip, [sp, #4]
   3ffc8:	mov	r2, r4
   3ffcc:	mov	r3, #0
   3ffd0:	add	r3, r3, #1
   3ffd4:	ldrd	r0, [r2]
   3ffd8:	cmp	fp, r3
   3ffdc:	add	r2, r2, lr
   3ffe0:	strd	r0, [ip], #8
   3ffe4:	bne	3ffd0 <GetDataSlab+0x1e1a4>
   3ffe8:	ldr	r3, [sp, #4]
   3ffec:	add	r3, r3, r8
   3fff0:	str	r3, [sp, #4]
   3fff4:	add	r5, r5, #1
   3fff8:	add	r4, r4, r7
   3fffc:	cmp	r6, r5
   40000:	bne	3ffbc <GetDataSlab+0x1e190>
   40004:	b	30874 <GetDataSlab+0xea48>
   40008:	ldr	r1, [sp, #8]
   4000c:	cmp	r6, #0
   40010:	ldr	r3, [sp, #16]
   40014:	mla	r3, r5, r3, r0
   40018:	movgt	r0, #0
   4001c:	add	r1, r1, r3, lsl #3
   40020:	ble	30874 <GetDataSlab+0xea48>
   40024:	cmp	fp, #0
   40028:	movgt	r3, #0
   4002c:	ble	40070 <GetDataSlab+0x1e244>
   40030:	ldr	r2, [sl]
   40034:	ldr	ip, [sp, #4]
   40038:	mul	r2, r2, r3
   4003c:	add	r3, r3, #1
   40040:	ldr	r2, [r1, r2, lsl #3]
   40044:	str	r2, [ip], #4
   40048:	ldr	r2, [sp, #228]	; 0xe4
   4004c:	str	ip, [sp, #4]
   40050:	ldr	fp, [r2]
   40054:	cmp	fp, r3
   40058:	bgt	40030 <GetDataSlab+0x1e204>
   4005c:	ldr	r3, [r8]
   40060:	ldr	r2, [sl, #4]
   40064:	str	r3, [sp, #16]
   40068:	ldr	r3, [sp, #228]	; 0xe4
   4006c:	ldr	r6, [r3, #4]
   40070:	add	r0, r0, #1
   40074:	ldr	r3, [sp, #16]
   40078:	cmp	r6, r0
   4007c:	mul	r3, r3, r2
   40080:	add	r1, r1, r3, lsl #3
   40084:	bgt	40024 <GetDataSlab+0x1e1f8>
   40088:	b	30874 <GetDataSlab+0xea48>
   4008c:	ldr	r3, [sp, #16]
   40090:	cmp	r6, #0
   40094:	mla	r3, r5, r3, r0
   40098:	ldr	r0, [sp, #8]
   4009c:	add	r4, r0, r3, lsl #3
   400a0:	ble	30874 <GetDataSlab+0xea48>
   400a4:	ldr	r3, [sp, #16]
   400a8:	lsl	lr, r1, #3
   400ac:	mov	r5, #0
   400b0:	lsl	r8, fp, #3
   400b4:	mul	r3, r2, r3
   400b8:	lsl	r7, r3, #3
   400bc:	cmp	fp, #0
   400c0:	ble	400f4 <GetDataSlab+0x1e2c8>
   400c4:	ldr	ip, [sp, #4]
   400c8:	mov	r2, r4
   400cc:	mov	r3, #0
   400d0:	add	r3, r3, #1
   400d4:	ldrd	r0, [r2]
   400d8:	cmp	fp, r3
   400dc:	add	r2, r2, lr
   400e0:	strd	r0, [ip], #8
   400e4:	bne	400d0 <GetDataSlab+0x1e2a4>
   400e8:	ldr	r3, [sp, #4]
   400ec:	add	r3, r3, r8
   400f0:	str	r3, [sp, #4]
   400f4:	add	r5, r5, #1
   400f8:	add	r4, r4, r7
   400fc:	cmp	r6, r5
   40100:	bne	400bc <GetDataSlab+0x1e290>
   40104:	b	30874 <GetDataSlab+0xea48>
   40108:	ldr	r1, [sp, #8]
   4010c:	cmp	r6, #0
   40110:	ldr	r3, [sp, #16]
   40114:	mla	r3, r5, r3, r0
   40118:	movgt	r0, #0
   4011c:	add	r1, r1, r3, lsl #3
   40120:	ble	30874 <GetDataSlab+0xea48>
   40124:	cmp	fp, #0
   40128:	movgt	r3, #0
   4012c:	ble	40170 <GetDataSlab+0x1e344>
   40130:	ldr	r2, [sl]
   40134:	ldr	ip, [sp, #4]
   40138:	mul	r2, r2, r3
   4013c:	add	r3, r3, #1
   40140:	ldr	r2, [r1, r2, lsl #3]
   40144:	strb	r2, [ip], #1
   40148:	ldr	r2, [sp, #228]	; 0xe4
   4014c:	str	ip, [sp, #4]
   40150:	ldr	fp, [r2]
   40154:	cmp	fp, r3
   40158:	bgt	40130 <GetDataSlab+0x1e304>
   4015c:	ldr	r3, [r8]
   40160:	ldr	r2, [sl, #4]
   40164:	str	r3, [sp, #16]
   40168:	ldr	r3, [sp, #228]	; 0xe4
   4016c:	ldr	r6, [r3, #4]
   40170:	add	r0, r0, #1
   40174:	ldr	r3, [sp, #16]
   40178:	cmp	r6, r0
   4017c:	mul	r3, r3, r2
   40180:	add	r1, r1, r3, lsl #3
   40184:	bgt	40124 <GetDataSlab+0x1e2f8>
   40188:	b	30874 <GetDataSlab+0xea48>
   4018c:	ldr	r3, [sp, #16]
   40190:	cmp	r6, #0
   40194:	mla	r3, r5, r3, r0
   40198:	ldr	r0, [sp, #8]
   4019c:	add	r9, r0, r3, lsl #3
   401a0:	ble	30874 <GetDataSlab+0xea48>
   401a4:	ldr	r3, [sp, #16]
   401a8:	lsl	r8, r1, #3
   401ac:	mov	sl, #0
   401b0:	mul	r3, r2, r3
   401b4:	lsl	r2, fp, #2
   401b8:	lsl	r3, r3, #3
   401bc:	str	r3, [sp, #8]
   401c0:	str	r2, [sp, #12]
   401c4:	cmp	fp, #0
   401c8:	ble	40204 <GetDataSlab+0x1e3d8>
   401cc:	ldr	r7, [sp, #4]
   401d0:	mov	r5, r9
   401d4:	mov	r4, #0
   401d8:	add	r4, r4, #1
   401dc:	ldrd	r0, [r5]
   401e0:	add	r5, r5, r8
   401e4:	bl	4e318 <__aeabi_l2f>
   401e8:	cmp	fp, r4
   401ec:	str	r0, [r7], #4
   401f0:	bne	401d8 <GetDataSlab+0x1e3ac>
   401f4:	ldr	r3, [sp, #4]
   401f8:	ldr	r2, [sp, #12]
   401fc:	add	r3, r3, r2
   40200:	str	r3, [sp, #4]
   40204:	ldr	r3, [sp, #8]
   40208:	add	sl, sl, #1
   4020c:	cmp	r6, sl
   40210:	add	r9, r9, r3
   40214:	bne	401c4 <GetDataSlab+0x1e398>
   40218:	b	30874 <GetDataSlab+0xea48>
   4021c:	mov	r4, #0
   40220:	b	30684 <GetDataSlab+0xe858>
   40224:	mov	r4, #0
   40228:	b	36130 <GetDataSlab+0x14304>
   4022c:	ldr	r3, [sp, #20]
   40230:	mov	r7, #0
   40234:	str	r3, [sp, #16]
   40238:	b	2f6a4 <GetDataSlab+0xd878>
   4023c:	ldr	r3, [sp, #20]
   40240:	mov	r7, #0
   40244:	str	r3, [sp, #16]
   40248:	b	34acc <GetDataSlab+0x12ca0>
   4024c:	ldr	r3, [sp, #20]
   40250:	mov	r7, #0
   40254:	str	r3, [sp, #16]
   40258:	b	3741c <GetDataSlab+0x155f0>
   4025c:	mov	r4, #0
   40260:	b	36f14 <GetDataSlab+0x150e8>
   40264:	ldr	r3, [sp, #20]
   40268:	mov	r4, #0
   4026c:	str	r3, [sp, #16]
   40270:	b	36c20 <GetDataSlab+0x14df4>
   40274:	ldr	r3, [sp, #20]
   40278:	mov	r4, #0
   4027c:	str	r3, [sp, #16]
   40280:	b	2fe94 <GetDataSlab+0xe068>
   40284:	mov	r4, #0
   40288:	b	2fc38 <GetDataSlab+0xde0c>
   4028c:	mov	r4, #0
   40290:	b	30160 <GetDataSlab+0xe334>
   40294:	ldr	r3, [sp, #20]
   40298:	mov	r4, #0
   4029c:	str	r3, [sp, #16]
   402a0:	b	366b4 <GetDataSlab+0x14888>
   402a4:	ldr	r3, [sp, #20]
   402a8:	mov	r4, #0
   402ac:	str	r3, [sp, #16]
   402b0:	b	303bc <GetDataSlab+0xe590>
   402b4:	mov	r4, #0
   402b8:	b	371a0 <GetDataSlab+0x15374>
   402bc:	mov	r4, #0
   402c0:	b	2f448 <GetDataSlab+0xd61c>
   402c4:	ldr	r3, [sp, #20]
   402c8:	mov	r4, #0
   402cc:	str	r3, [sp, #16]
   402d0:	b	34f50 <GetDataSlab+0x13124>
   402d4:	ldr	r3, [sp, #20]
   402d8:	mov	r4, #0
   402dc:	str	r3, [sp, #16]
   402e0:	b	2eeb8 <GetDataSlab+0xd08c>
   402e4:	mov	r4, #0
   402e8:	b	369a4 <GetDataSlab+0x14b78>
   402ec:	ldr	r3, [sp, #20]
   402f0:	mov	r7, #0
   402f4:	str	r3, [sp, #16]
   402f8:	b	2f170 <GetDataSlab+0xd344>
   402fc:	ldr	r3, [sp, #20]
   40300:	mov	r4, #0
   40304:	str	r3, [sp, #16]
   40308:	b	382d8 <GetDataSlab+0x164ac>
   4030c:	ldr	r3, [sp, #20]
   40310:	mov	r4, #0
   40314:	str	r3, [sp, #16]
   40318:	b	2f96c <GetDataSlab+0xdb40>

0004031c <GetDataLinear>:
   4031c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   40320:	mov	r5, r0
   40324:	mov	r0, r3
   40328:	mov	r4, r1
   4032c:	strd	r6, [sp, #8]
   40330:	strd	r8, [sp, #16]
   40334:	mov	r9, r2
   40338:	str	sl, [sp, #24]
   4033c:	str	lr, [sp, #28]
   40340:	ldr	r8, [sp, #36]	; 0x24
   40344:	ldr	r6, [sp, #40]	; 0x28
   40348:	bl	1598 <Mat_SizeOf@plt>
   4034c:	sub	r2, r9, #6
   40350:	mov	r7, r0
   40354:	cmp	r2, #9
   40358:	addls	pc, pc, r2, lsl #2
   4035c:	b	40680 <GetDataLinear+0x364>
   40360:	b	403e8 <GetDataLinear+0xcc>
   40364:	b	40430 <GetDataLinear+0x114>
   40368:	b	40478 <GetDataLinear+0x15c>
   4036c:	b	404bc <GetDataLinear+0x1a0>
   40370:	b	40500 <GetDataLinear+0x1e4>
   40374:	b	40548 <GetDataLinear+0x22c>
   40378:	b	40590 <GetDataLinear+0x274>
   4037c:	b	405d8 <GetDataLinear+0x2bc>
   40380:	b	40620 <GetDataLinear+0x304>
   40384:	b	40388 <GetDataLinear+0x6c>
   40388:	ldr	r3, [sp, #32]
   4038c:	cmp	r8, #0
   40390:	add	r5, r5, r3, lsl #3
   40394:	beq	40668 <GetDataLinear+0x34c>
   40398:	cmp	r6, #0
   4039c:	lslgt	r8, r8, #3
   403a0:	movgt	r9, #0
   403a4:	ble	403cc <GetDataLinear+0xb0>
   403a8:	mov	r1, r5
   403ac:	mov	r0, r4
   403b0:	add	r9, r9, #1
   403b4:	mov	r2, r7
   403b8:	bl	1490 <memcpy@plt>
   403bc:	cmp	r6, r9
   403c0:	add	r4, r4, #8
   403c4:	add	r5, r5, r8
   403c8:	bne	403a8 <GetDataLinear+0x8c>
   403cc:	mov	r0, #0
   403d0:	ldrd	r4, [sp]
   403d4:	ldrd	r6, [sp, #8]
   403d8:	ldrd	r8, [sp, #16]
   403dc:	ldr	sl, [sp, #24]
   403e0:	add	sp, sp, #28
   403e4:	pop	{pc}		; (ldr pc, [sp], #4)
   403e8:	ldr	r3, [sp, #32]
   403ec:	cmp	r8, #0
   403f0:	add	r5, r5, r3, lsl #3
   403f4:	beq	40668 <GetDataLinear+0x34c>
   403f8:	cmp	r6, #0
   403fc:	lslgt	r8, r8, #3
   40400:	movgt	r9, #0
   40404:	ble	403cc <GetDataLinear+0xb0>
   40408:	mov	r1, r5
   4040c:	mov	r0, r4
   40410:	add	r9, r9, #1
   40414:	mov	r2, r7
   40418:	bl	1490 <memcpy@plt>
   4041c:	cmp	r6, r9
   40420:	add	r4, r4, #8
   40424:	add	r5, r5, r8
   40428:	bne	40408 <GetDataLinear+0xec>
   4042c:	b	403cc <GetDataLinear+0xb0>
   40430:	ldr	r3, [sp, #32]
   40434:	cmp	r8, #0
   40438:	add	r5, r5, r3, lsl #2
   4043c:	beq	40668 <GetDataLinear+0x34c>
   40440:	cmp	r6, #0
   40444:	lslgt	r8, r8, #2
   40448:	movgt	r9, #0
   4044c:	ble	403cc <GetDataLinear+0xb0>
   40450:	mov	r1, r5
   40454:	mov	r0, r4
   40458:	add	r9, r9, #1
   4045c:	mov	r2, r7
   40460:	bl	1490 <memcpy@plt>
   40464:	cmp	r6, r9
   40468:	add	r4, r4, #4
   4046c:	add	r5, r5, r8
   40470:	bne	40450 <GetDataLinear+0x134>
   40474:	b	403cc <GetDataLinear+0xb0>
   40478:	ldr	r3, [sp, #32]
   4047c:	cmp	r8, #0
   40480:	add	r5, r5, r3
   40484:	beq	40668 <GetDataLinear+0x34c>
   40488:	cmp	r6, #0
   4048c:	addgt	r6, r4, r6
   40490:	ble	403cc <GetDataLinear+0xb0>
   40494:	add	r3, r4, #1
   40498:	mov	r0, r4
   4049c:	mov	r1, r5
   404a0:	mov	r4, r3
   404a4:	mov	r2, r7
   404a8:	add	r5, r5, r8
   404ac:	bl	1490 <memcpy@plt>
   404b0:	cmp	r4, r6
   404b4:	bne	40494 <GetDataLinear+0x178>
   404b8:	b	403cc <GetDataLinear+0xb0>
   404bc:	ldr	r3, [sp, #32]
   404c0:	cmp	r8, #0
   404c4:	add	r5, r5, r3
   404c8:	beq	40668 <GetDataLinear+0x34c>
   404cc:	cmp	r6, #0
   404d0:	addgt	r6, r4, r6
   404d4:	ble	403cc <GetDataLinear+0xb0>
   404d8:	add	r3, r4, #1
   404dc:	mov	r0, r4
   404e0:	mov	r1, r5
   404e4:	mov	r4, r3
   404e8:	mov	r2, r7
   404ec:	add	r5, r5, r8
   404f0:	bl	1490 <memcpy@plt>
   404f4:	cmp	r4, r6
   404f8:	bne	404d8 <GetDataLinear+0x1bc>
   404fc:	b	403cc <GetDataLinear+0xb0>
   40500:	ldr	r3, [sp, #32]
   40504:	cmp	r8, #0
   40508:	add	r5, r5, r3, lsl #1
   4050c:	beq	40668 <GetDataLinear+0x34c>
   40510:	cmp	r6, #0
   40514:	lslgt	r8, r8, #1
   40518:	addgt	r6, r4, r6, lsl #1
   4051c:	ble	403cc <GetDataLinear+0xb0>
   40520:	add	r3, r4, #2
   40524:	mov	r0, r4
   40528:	mov	r1, r5
   4052c:	mov	r4, r3
   40530:	mov	r2, r7
   40534:	add	r5, r5, r8
   40538:	bl	1490 <memcpy@plt>
   4053c:	cmp	r4, r6
   40540:	bne	40520 <GetDataLinear+0x204>
   40544:	b	403cc <GetDataLinear+0xb0>
   40548:	ldr	r3, [sp, #32]
   4054c:	cmp	r8, #0
   40550:	add	r5, r5, r3, lsl #1
   40554:	beq	40668 <GetDataLinear+0x34c>
   40558:	cmp	r6, #0
   4055c:	lslgt	r8, r8, #1
   40560:	addgt	r6, r4, r6, lsl #1
   40564:	ble	403cc <GetDataLinear+0xb0>
   40568:	add	r3, r4, #2
   4056c:	mov	r0, r4
   40570:	mov	r1, r5
   40574:	mov	r4, r3
   40578:	mov	r2, r7
   4057c:	add	r5, r5, r8
   40580:	bl	1490 <memcpy@plt>
   40584:	cmp	r4, r6
   40588:	bne	40568 <GetDataLinear+0x24c>
   4058c:	b	403cc <GetDataLinear+0xb0>
   40590:	ldr	r3, [sp, #32]
   40594:	cmp	r8, #0
   40598:	add	r5, r5, r3, lsl #2
   4059c:	beq	40668 <GetDataLinear+0x34c>
   405a0:	cmp	r6, #0
   405a4:	lslgt	r8, r8, #2
   405a8:	movgt	r9, #0
   405ac:	ble	403cc <GetDataLinear+0xb0>
   405b0:	mov	r1, r5
   405b4:	mov	r0, r4
   405b8:	add	r9, r9, #1
   405bc:	mov	r2, r7
   405c0:	bl	1490 <memcpy@plt>
   405c4:	cmp	r6, r9
   405c8:	add	r4, r4, #4
   405cc:	add	r5, r5, r8
   405d0:	bne	405b0 <GetDataLinear+0x294>
   405d4:	b	403cc <GetDataLinear+0xb0>
   405d8:	ldr	r3, [sp, #32]
   405dc:	cmp	r8, #0
   405e0:	add	r5, r5, r3, lsl #2
   405e4:	beq	40668 <GetDataLinear+0x34c>
   405e8:	cmp	r6, #0
   405ec:	lslgt	r8, r8, #2
   405f0:	movgt	r9, #0
   405f4:	ble	403cc <GetDataLinear+0xb0>
   405f8:	mov	r1, r5
   405fc:	mov	r0, r4
   40600:	add	r9, r9, #1
   40604:	mov	r2, r7
   40608:	bl	1490 <memcpy@plt>
   4060c:	cmp	r6, r9
   40610:	add	r4, r4, #4
   40614:	add	r5, r5, r8
   40618:	bne	405f8 <GetDataLinear+0x2dc>
   4061c:	b	403cc <GetDataLinear+0xb0>
   40620:	ldr	r3, [sp, #32]
   40624:	cmp	r8, #0
   40628:	add	r5, r5, r3, lsl #3
   4062c:	beq	40668 <GetDataLinear+0x34c>
   40630:	cmp	r6, #0
   40634:	lslgt	r8, r8, #3
   40638:	movgt	r9, #0
   4063c:	ble	403cc <GetDataLinear+0xb0>
   40640:	mov	r1, r5
   40644:	mov	r0, r4
   40648:	add	r9, r9, #1
   4064c:	mov	r2, r7
   40650:	bl	1490 <memcpy@plt>
   40654:	cmp	r6, r9
   40658:	add	r4, r4, #8
   4065c:	add	r5, r5, r8
   40660:	bne	40640 <GetDataLinear+0x324>
   40664:	b	403cc <GetDataLinear+0xb0>
   40668:	mul	r2, r7, r6
   4066c:	mov	r1, r5
   40670:	mov	r0, r4
   40674:	bl	1490 <memcpy@plt>
   40678:	mov	r0, r8
   4067c:	b	403d0 <GetDataLinear+0xb4>
   40680:	mov	r0, #1
   40684:	b	403d0 <GetDataLinear+0xb4>

00040688 <WriteCompressedData>:
   40688:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4068c:	strd	r6, [sp, #8]
   40690:	subs	r7, r0, #0
   40694:	strd	r8, [sp, #16]
   40698:	mov	r8, #0
   4069c:	mov	r9, #0
   406a0:	strd	sl, [sp, #24]
   406a4:	moveq	r0, r7
   406a8:	str	lr, [sp, #32]
   406ac:	sub	sp, sp, #1040	; 0x410
   406b0:	sub	sp, sp, #4
   406b4:	add	r6, sp, #16
   406b8:	strd	r8, [r6, #-8]
   406bc:	beq	40800 <WriteCompressedData+0x178>
   406c0:	ldr	r0, [r7]
   406c4:	cmp	r0, #0
   406c8:	beq	40800 <WriteCompressedData+0x178>
   406cc:	ldr	r0, [sp, #1080]	; 0x438
   406d0:	mov	sl, r3
   406d4:	mov	r4, r1
   406d8:	mov	fp, r2
   406dc:	mov	r5, #0
   406e0:	bl	1598 <Mat_SizeOf@plt>
   406e4:	ldr	r3, [sp, #1080]	; 0x438
   406e8:	mul	r9, sl, r0
   406ec:	mov	r2, #8
   406f0:	mov	r8, #1024	; 0x400
   406f4:	str	r2, [r4, #4]
   406f8:	stm	sp, {r3, r9}
   406fc:	mov	r3, sp
   40700:	str	r3, [r4]
   40704:	mov	r1, #0
   40708:	mov	r0, r4
   4070c:	str	r6, [r4, #12]
   40710:	str	r8, [r4, #16]
   40714:	bl	14fc <deflate@plt>
   40718:	ldr	r2, [r4, #16]
   4071c:	mov	r1, #1
   40720:	mov	r0, r6
   40724:	ldr	r3, [r7]
   40728:	rsb	r2, r2, #1024	; 0x400
   4072c:	bl	1514 <fwrite@plt>
   40730:	ldr	r3, [r4, #16]
   40734:	add	r5, r5, r0
   40738:	mov	r0, r5
   4073c:	cmp	r3, #0
   40740:	beq	40704 <WriteCompressedData+0x7c>
   40744:	cmp	fp, #0
   40748:	cmpne	sl, #0
   4074c:	ble	40800 <WriteCompressedData+0x178>
   40750:	mov	r8, #1024	; 0x400
   40754:	str	fp, [r4]
   40758:	str	r9, [r4, #4]
   4075c:	mov	r1, #0
   40760:	mov	r0, r4
   40764:	str	r6, [r4, #12]
   40768:	str	r8, [r4, #16]
   4076c:	bl	14fc <deflate@plt>
   40770:	ldr	r2, [r4, #16]
   40774:	mov	r1, #1
   40778:	mov	r0, r6
   4077c:	ldr	r3, [r7]
   40780:	rsb	r2, r2, #1024	; 0x400
   40784:	bl	1514 <fwrite@plt>
   40788:	ldr	r3, [r4, #16]
   4078c:	add	r5, r5, r0
   40790:	mov	r0, r5
   40794:	cmp	r3, #0
   40798:	beq	4075c <WriteCompressedData+0xd4>
   4079c:	ands	r3, r9, #7
   407a0:	beq	40800 <WriteCompressedData+0x178>
   407a4:	rsbs	r9, r9, #0
   407a8:	sub	r2, r6, #8
   407ac:	and	r9, r9, #7
   407b0:	mov	r8, #1024	; 0x400
   407b4:	rsbpl	r3, r9, #0
   407b8:	rsb	r3, r3, #8
   407bc:	strd	r2, [r4]
   407c0:	mov	r1, #0
   407c4:	mov	r0, r4
   407c8:	str	r6, [r4, #12]
   407cc:	str	r8, [r4, #16]
   407d0:	bl	14fc <deflate@plt>
   407d4:	ldr	r2, [r4, #16]
   407d8:	mov	r1, #1
   407dc:	mov	r0, r6
   407e0:	ldr	r3, [r7]
   407e4:	rsb	r2, r2, #1024	; 0x400
   407e8:	bl	1514 <fwrite@plt>
   407ec:	ldr	r3, [r4, #16]
   407f0:	add	r5, r5, r0
   407f4:	mov	r0, r5
   407f8:	cmp	r3, #0
   407fc:	beq	407c0 <WriteCompressedData+0x138>
   40800:	add	sp, sp, #1040	; 0x410
   40804:	add	sp, sp, #4
   40808:	ldrd	r4, [sp]
   4080c:	ldrd	r6, [sp, #8]
   40810:	ldrd	r8, [sp, #16]
   40814:	ldrd	sl, [sp, #24]
   40818:	add	sp, sp, #32
   4081c:	pop	{pc}		; (ldr pc, [sp], #4)

00040820 <ReadRankDims.isra.2>:
   40820:	strd	r4, [sp, #-36]!	; 0xffffffdc
   40824:	strd	r6, [sp, #8]
   40828:	strd	r8, [sp, #16]
   4082c:	strd	sl, [sp, #24]
   40830:	str	lr, [sp, #32]
   40834:	sub	sp, sp, #12
   40838:	ldr	ip, [sp, #48]	; 0x30
   4083c:	cmp	ip, #5
   40840:	movne	r5, #0
   40844:	beq	40868 <ReadRankDims.isra.2+0x48>
   40848:	mov	r0, r5
   4084c:	add	sp, sp, #12
   40850:	ldrd	r4, [sp]
   40854:	ldrd	r6, [sp, #8]
   40858:	ldrd	r8, [sp, #16]
   4085c:	ldrd	sl, [sp, #24]
   40860:	add	sp, sp, #32
   40864:	pop	{pc}		; (ldr pc, [sp], #4)
   40868:	mov	r7, r3
   4086c:	ldr	r3, [sp, #52]	; 0x34
   40870:	mov	r6, r2
   40874:	mov	r8, r0
   40878:	mov	r9, r1
   4087c:	ldr	r2, [sp, #52]	; 0x34
   40880:	lsr	r3, r3, #2
   40884:	bic	r0, r2, #3
   40888:	str	r3, [r6]
   4088c:	bl	1544 <malloc@plt>
   40890:	cmp	r0, #0
   40894:	mov	r3, r0
   40898:	str	r0, [r7]
   4089c:	beq	40974 <ReadRankDims.isra.2+0x154>
   408a0:	ldr	r2, [r6]
   408a4:	cmp	r2, #0
   408a8:	ble	40914 <ReadRankDims.isra.2+0xf4>
   408ac:	mov	r4, #0
   408b0:	add	sl, sp, #4
   408b4:	mov	r5, r4
   408b8:	b	408d4 <ReadRankDims.isra.2+0xb4>
   408bc:	ldr	r3, [sp, #4]
   408c0:	str	r3, [fp, r4, lsl #2]
   408c4:	ldr	r2, [r6]
   408c8:	add	r4, r4, #1
   408cc:	cmp	r4, r2
   408d0:	bge	40918 <ReadRankDims.isra.2+0xf8>
   408d4:	mov	r2, #1
   408d8:	mov	r1, #4
   408dc:	ldr	r3, [r8]
   408e0:	mov	r0, sl
   408e4:	bl	1520 <fread@plt>
   408e8:	cmp	r0, #1
   408ec:	bne	40950 <ReadRankDims.isra.2+0x130>
   408f0:	ldr	r3, [r9]
   408f4:	add	r5, r5, #4
   408f8:	ldr	fp, [r7]
   408fc:	cmp	r3, #0
   40900:	beq	408bc <ReadRankDims.isra.2+0x9c>
   40904:	mov	r0, sl
   40908:	bl	18f8 <Mat_uint32Swap>
   4090c:	str	r0, [fp, r4, lsl #2]
   40910:	b	408c4 <ReadRankDims.isra.2+0xa4>
   40914:	mov	r5, #0
   40918:	tst	r2, #1
   4091c:	beq	40848 <ReadRankDims.isra.2+0x28>
   40920:	mov	r1, #4
   40924:	mov	r2, #1
   40928:	ldr	r3, [r8]
   4092c:	add	r0, sp, r1
   40930:	bl	1520 <fread@plt>
   40934:	cmp	r0, #1
   40938:	addeq	r5, r5, #4
   4093c:	beq	40848 <ReadRankDims.isra.2+0x28>
   40940:	ldr	r0, [pc, #68]	; 4098c <ReadRankDims.isra.2+0x16c>
   40944:	add	r0, pc, r0
   40948:	bl	161c <Mat_Critical@plt>
   4094c:	b	40848 <ReadRankDims.isra.2+0x28>
   40950:	ldr	r0, [r7]
   40954:	bl	1478 <free@plt>
   40958:	ldr	r0, [pc, #48]	; 40990 <ReadRankDims.isra.2+0x170>
   4095c:	mov	r3, #0
   40960:	str	r3, [r7]
   40964:	str	r3, [r6]
   40968:	add	r0, pc, r0
   4096c:	bl	161c <Mat_Critical@plt>
   40970:	b	40848 <ReadRankDims.isra.2+0x28>
   40974:	ldr	r0, [pc, #24]	; 40994 <ReadRankDims.isra.2+0x174>
   40978:	mov	r5, r3
   4097c:	str	r3, [r6]
   40980:	add	r0, pc, r0
   40984:	bl	161c <Mat_Critical@plt>
   40988:	b	40848 <ReadRankDims.isra.2+0x28>
   4098c:	.word	0x0000ded8
   40990:	.word	0x0000deb4
   40994:	.word	0x0000dc80

00040998 <WriteType>:
   40998:	mov	r3, #1
   4099c:	mov	r2, #0
   409a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   409a4:	strd	r6, [sp, #8]
   409a8:	mov	r5, r1
   409ac:	mov	r4, r0
   409b0:	strd	r8, [sp, #16]
   409b4:	mov	r0, r1
   409b8:	strd	sl, [sp, #24]
   409bc:	str	lr, [sp, #32]
   409c0:	sub	sp, sp, #108	; 0x6c
   409c4:	add	r1, sp, #24
   409c8:	strb	r2, [sp, #16]
   409cc:	strh	r3, [sp, #18]
   409d0:	str	r3, [sp, #24]
   409d4:	bl	4996c <SafeMulDims>
   409d8:	ldr	r3, [r5, #16]
   409dc:	sub	r3, r3, #1
   409e0:	cmp	r3, #14
   409e4:	addls	pc, pc, r3, lsl #2
   409e8:	b	40abc <WriteType+0x124>
   409ec:	b	41170 <WriteType+0x7d8>
   409f0:	b	40cec <WriteType+0x354>
   409f4:	b	40abc <WriteType+0x124>
   409f8:	b	41108 <WriteType+0x770>
   409fc:	b	40adc <WriteType+0x144>
   40a00:	b	40c30 <WriteType+0x298>
   40a04:	b	40c30 <WriteType+0x298>
   40a08:	b	40c30 <WriteType+0x298>
   40a0c:	b	40c30 <WriteType+0x298>
   40a10:	b	40c30 <WriteType+0x298>
   40a14:	b	40c30 <WriteType+0x298>
   40a18:	b	40c30 <WriteType+0x298>
   40a1c:	b	40c30 <WriteType+0x298>
   40a20:	b	40c30 <WriteType+0x298>
   40a24:	b	40c30 <WriteType+0x298>
   40a28:	mov	r2, #1
   40a2c:	mov	ip, #5
   40a30:	movt	ip, #4
   40a34:	mov	r5, r2
   40a38:	mov	r3, r9
   40a3c:	mov	r1, #4
   40a40:	add	r0, sp, #36	; 0x24
   40a44:	str	ip, [sp, #36]	; 0x24
   40a48:	add	r6, sp, #16
   40a4c:	bl	1514 <fwrite@plt>
   40a50:	mov	r2, r5
   40a54:	mov	r1, #4
   40a58:	ldr	r3, [r4]
   40a5c:	add	r0, sp, #28
   40a60:	str	r5, [sp, #28]
   40a64:	bl	1514 <fwrite@plt>
   40a68:	mov	r2, r5
   40a6c:	mov	r1, #2
   40a70:	ldr	r3, [r4]
   40a74:	add	r0, sp, #18
   40a78:	bl	1514 <fwrite@plt>
   40a7c:	mov	r2, r5
   40a80:	mov	r1, r5
   40a84:	ldr	r3, [r4]
   40a88:	mov	r0, r6
   40a8c:	bl	1514 <fwrite@plt>
   40a90:	mov	r2, r5
   40a94:	mov	r1, r5
   40a98:	ldr	r3, [r4]
   40a9c:	mov	r0, r6
   40aa0:	bl	1514 <fwrite@plt>
   40aa4:	mov	r2, r5
   40aa8:	mov	r1, #4
   40aac:	ldr	r3, [r4]
   40ab0:	add	r0, sp, #20
   40ab4:	str	r8, [sp, #20]
   40ab8:	bl	1514 <fwrite@plt>
   40abc:	mov	r0, #0
   40ac0:	add	sp, sp, #108	; 0x6c
   40ac4:	ldrd	r4, [sp]
   40ac8:	ldrd	r6, [sp, #8]
   40acc:	ldrd	r8, [sp, #16]
   40ad0:	ldrd	sl, [sp, #24]
   40ad4:	add	sp, sp, #32
   40ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   40adc:	ldr	r8, [r5, #40]	; 0x28
   40ae0:	mov	r3, #5
   40ae4:	mov	r0, r4
   40ae8:	ldmib	r8, {r1, r2}
   40aec:	bl	218f8 <WriteData>
   40af0:	ands	r7, r0, #7
   40af4:	str	r0, [sp, #20]
   40af8:	beq	40b2c <WriteType+0x194>
   40afc:	rsbs	r0, r0, #0
   40b00:	add	r6, sp, #16
   40b04:	and	r0, r0, #7
   40b08:	rsbpl	r7, r0, #0
   40b0c:	mov	r2, #1
   40b10:	mov	r0, r6
   40b14:	ldr	r3, [r4]
   40b18:	add	r7, r7, r2
   40b1c:	mov	r1, r2
   40b20:	bl	1514 <fwrite@plt>
   40b24:	cmp	r7, #8
   40b28:	bne	40b0c <WriteType+0x174>
   40b2c:	mov	r3, #5
   40b30:	mov	r0, r4
   40b34:	ldr	r1, [r8, #12]
   40b38:	ldr	r2, [r8, #16]
   40b3c:	bl	218f8 <WriteData>
   40b40:	ands	r7, r0, #7
   40b44:	str	r0, [sp, #20]
   40b48:	beq	40b7c <WriteType+0x1e4>
   40b4c:	rsbs	r0, r0, #0
   40b50:	add	r6, sp, #16
   40b54:	and	r0, r0, #7
   40b58:	rsbpl	r7, r0, #0
   40b5c:	mov	r2, #1
   40b60:	mov	r0, r6
   40b64:	ldr	r3, [r4]
   40b68:	add	r7, r7, r2
   40b6c:	mov	r1, r2
   40b70:	bl	1514 <fwrite@plt>
   40b74:	cmp	r7, #8
   40b78:	bne	40b5c <WriteType+0x1c4>
   40b7c:	ldr	r3, [r5, #8]
   40b80:	ldr	r1, [r5, #20]
   40b84:	ldr	r2, [r8, #20]
   40b88:	ldr	r9, [r8, #24]
   40b8c:	cmp	r1, #0
   40b90:	beq	416b0 <WriteType+0xd18>
   40b94:	mov	r0, r4
   40b98:	ldr	r1, [r9]
   40b9c:	bl	218f8 <WriteData>
   40ba0:	ands	r7, r0, #7
   40ba4:	str	r0, [sp, #20]
   40ba8:	beq	40bdc <WriteType+0x244>
   40bac:	rsbs	r0, r0, #0
   40bb0:	add	r6, sp, #16
   40bb4:	and	r0, r0, #7
   40bb8:	rsbpl	r7, r0, #0
   40bbc:	mov	r2, #1
   40bc0:	mov	r0, r6
   40bc4:	ldr	r3, [r4]
   40bc8:	add	r7, r7, r2
   40bcc:	mov	r1, r2
   40bd0:	bl	1514 <fwrite@plt>
   40bd4:	cmp	r7, #8
   40bd8:	bne	40bbc <WriteType+0x224>
   40bdc:	mov	r0, r4
   40be0:	ldr	r1, [r9, #4]
   40be4:	ldr	r3, [r5, #8]
   40be8:	ldr	r2, [r8, #20]
   40bec:	bl	218f8 <WriteData>
   40bf0:	ands	r5, r0, #7
   40bf4:	str	r0, [sp, #20]
   40bf8:	beq	40abc <WriteType+0x124>
   40bfc:	rsbs	r0, r0, #0
   40c00:	add	r6, sp, #16
   40c04:	and	r0, r0, #7
   40c08:	rsbpl	r5, r0, #0
   40c0c:	mov	r2, #1
   40c10:	mov	r0, r6
   40c14:	ldr	r3, [r4]
   40c18:	add	r5, r5, r2
   40c1c:	mov	r1, r2
   40c20:	bl	1514 <fwrite@plt>
   40c24:	cmp	r5, #8
   40c28:	bne	40c0c <WriteType+0x274>
   40c2c:	b	40abc <WriteType+0x124>
   40c30:	ldr	r3, [r5, #8]
   40c34:	ldr	r1, [r5, #20]
   40c38:	ldr	r2, [sp, #24]
   40c3c:	ldr	r8, [r5, #40]	; 0x28
   40c40:	cmp	r1, #0
   40c44:	beq	41708 <WriteType+0xd70>
   40c48:	cmp	r8, #0
   40c4c:	beq	41960 <WriteType+0xfc8>
   40c50:	mov	r0, r4
   40c54:	ldr	r1, [r8]
   40c58:	bl	218f8 <WriteData>
   40c5c:	ands	r7, r0, #7
   40c60:	str	r0, [sp, #20]
   40c64:	beq	40c98 <WriteType+0x300>
   40c68:	rsbs	r0, r0, #0
   40c6c:	add	r6, sp, #16
   40c70:	and	r0, r0, #7
   40c74:	rsbpl	r7, r0, #0
   40c78:	mov	r2, #1
   40c7c:	mov	r0, r6
   40c80:	ldr	r3, [r4]
   40c84:	add	r7, r7, r2
   40c88:	mov	r1, r2
   40c8c:	bl	1514 <fwrite@plt>
   40c90:	cmp	r7, #8
   40c94:	bne	40c78 <WriteType+0x2e0>
   40c98:	mov	r0, r4
   40c9c:	ldr	r1, [r8, #4]
   40ca0:	ldr	r3, [r5, #8]
   40ca4:	ldr	r2, [sp, #24]
   40ca8:	bl	218f8 <WriteData>
   40cac:	ands	r5, r0, #7
   40cb0:	str	r0, [sp, #20]
   40cb4:	beq	40abc <WriteType+0x124>
   40cb8:	rsbs	r0, r0, #0
   40cbc:	add	r6, sp, #16
   40cc0:	and	r0, r0, #7
   40cc4:	rsbpl	r5, r0, #0
   40cc8:	mov	r2, #1
   40ccc:	mov	r0, r6
   40cd0:	ldr	r3, [r4]
   40cd4:	add	r5, r5, r2
   40cd8:	mov	r1, r2
   40cdc:	bl	1514 <fwrite@plt>
   40ce0:	cmp	r5, #8
   40ce4:	bne	40cc8 <WriteType+0x330>
   40ce8:	b	40abc <WriteType+0x124>
   40cec:	ldr	r3, [r5, #52]	; 0x34
   40cf0:	ldr	r9, [r4]
   40cf4:	ldr	r8, [r3, #4]
   40cf8:	cmp	r8, #0
   40cfc:	beq	40a28 <WriteType+0x90>
   40d00:	ldr	r7, [r3, #8]
   40d04:	mov	r6, #0
   40d08:	add	sl, r7, r8, lsl #2
   40d0c:	ldr	r0, [r7], #4
   40d10:	bl	15c8 <strlen@plt>
   40d14:	cmp	r6, r0
   40d18:	movcc	r6, r0
   40d1c:	cmp	sl, r7
   40d20:	bne	40d0c <WriteType+0x374>
   40d24:	add	r2, r6, #1
   40d28:	ldr	r7, [r5, #40]	; 0x28
   40d2c:	mul	r3, r2, r8
   40d30:	str	r2, [sp, #28]
   40d34:	tst	r3, #7
   40d38:	beq	40d60 <WriteType+0x3c8>
   40d3c:	add	r6, r6, #2
   40d40:	add	r3, r8, r3
   40d44:	and	r2, r3, #7
   40d48:	add	r3, r3, r8
   40d4c:	cmp	r2, #0
   40d50:	mov	r2, r6
   40d54:	add	r6, r6, #1
   40d58:	bne	40d44 <WriteType+0x3ac>
   40d5c:	str	r2, [sp, #28]
   40d60:	mov	ip, #5
   40d64:	movt	ip, #4
   40d68:	mov	r3, r9
   40d6c:	mov	r2, #1
   40d70:	mov	r1, #4
   40d74:	add	r0, sp, #36	; 0x24
   40d78:	str	ip, [sp, #36]	; 0x24
   40d7c:	bl	1514 <fwrite@plt>
   40d80:	mov	r2, #1
   40d84:	mov	r1, #4
   40d88:	ldr	r3, [r4]
   40d8c:	add	r0, sp, #28
   40d90:	add	r9, sp, #16
   40d94:	bl	1514 <fwrite@plt>
   40d98:	mov	r2, #1
   40d9c:	mov	r1, #2
   40da0:	ldr	r3, [r4]
   40da4:	add	r0, sp, #18
   40da8:	mov	r6, #0
   40dac:	bl	1514 <fwrite@plt>
   40db0:	mov	r2, #1
   40db4:	mov	r0, r9
   40db8:	ldr	r3, [r4]
   40dbc:	mov	r1, r2
   40dc0:	bl	1514 <fwrite@plt>
   40dc4:	mov	r2, #1
   40dc8:	mov	r0, r9
   40dcc:	ldr	r3, [r4]
   40dd0:	mov	r1, r2
   40dd4:	bl	1514 <fwrite@plt>
   40dd8:	ldr	ip, [sp, #28]
   40ddc:	mov	r2, #1
   40de0:	mov	r1, #4
   40de4:	add	r0, sp, #20
   40de8:	ldr	r3, [r4]
   40dec:	mul	ip, r8, ip
   40df0:	str	ip, [sp, #20]
   40df4:	bl	1514 <fwrite@plt>
   40df8:	mov	r1, #1
   40dfc:	ldr	r0, [sp, #28]
   40e00:	bl	140c <calloc@plt>
   40e04:	mov	fp, r0
   40e08:	ldr	r3, [r5, #52]	; 0x34
   40e0c:	ldr	r3, [r3, #8]
   40e10:	ldr	sl, [r3, r6, lsl #2]
   40e14:	add	r6, r6, #1
   40e18:	mov	r0, sl
   40e1c:	bl	15c8 <strlen@plt>
   40e20:	mov	r9, r0
   40e24:	mov	r1, #1
   40e28:	ldr	r3, [r4]
   40e2c:	mov	r2, r9
   40e30:	mov	r0, sl
   40e34:	bl	1514 <fwrite@plt>
   40e38:	ldr	r2, [sp, #28]
   40e3c:	mov	r1, #1
   40e40:	mov	r0, fp
   40e44:	ldr	r3, [r4]
   40e48:	sub	r2, r2, r9
   40e4c:	bl	1514 <fwrite@plt>
   40e50:	cmp	r8, r6
   40e54:	bne	40e08 <WriteType+0x470>
   40e58:	mov	r0, fp
   40e5c:	bl	1478 <free@plt>
   40e60:	mov	r2, r8
   40e64:	add	r0, sp, #32
   40e68:	ldr	r1, [sp, #24]
   40e6c:	bl	499ec <SafeMul>
   40e70:	ldr	r3, [sp, #32]
   40e74:	cmp	r3, #0
   40e78:	beq	40abc <WriteType+0x124>
   40e7c:	ldr	r3, [pc, #3120]	; 41ab4 <WriteType+0x111c>
   40e80:	sub	fp, r7, #4
   40e84:	mov	r7, #0
   40e88:	add	r3, pc, r3
   40e8c:	str	r3, [sp, #4]
   40e90:	ldr	r3, [pc, #3104]	; 41ab8 <WriteType+0x1120>
   40e94:	add	r3, pc, r3
   40e98:	str	r3, [sp, #8]
   40e9c:	ldr	r5, [fp, #4]!
   40ea0:	mov	r3, #0
   40ea4:	mov	r8, #6
   40ea8:	mov	lr, #5
   40eac:	mov	ip, #8
   40eb0:	mov	r0, #14
   40eb4:	mov	r2, #1
   40eb8:	str	r3, [sp, #56]	; 0x38
   40ebc:	str	r2, [sp, #40]	; 0x28
   40ec0:	cmp	r5, r3
   40ec4:	str	r8, [sp, #44]	; 0x2c
   40ec8:	str	lr, [sp, #48]	; 0x30
   40ecc:	str	ip, [sp, #52]	; 0x34
   40ed0:	str	r0, [sp, #60]	; 0x3c
   40ed4:	str	r3, [sp, #64]	; 0x40
   40ed8:	ldr	r3, [r4]
   40edc:	beq	414bc <WriteType+0xb24>
   40ee0:	mov	r2, #1
   40ee4:	mov	r1, #4
   40ee8:	add	r0, sp, #60	; 0x3c
   40eec:	add	r9, sp, #56	; 0x38
   40ef0:	bl	1514 <fwrite@plt>
   40ef4:	mov	r0, r9
   40ef8:	mov	r2, #1
   40efc:	ldr	r3, [r4]
   40f00:	mov	r1, #4
   40f04:	bl	1514 <fwrite@plt>
   40f08:	ldr	r3, [r5, #16]
   40f0c:	cmp	r3, #0
   40f10:	beq	410f4 <WriteType+0x75c>
   40f14:	ldr	r0, [r4]
   40f18:	bl	14b4 <ftell@plt>
   40f1c:	ldr	r2, [r5, #16]
   40f20:	mov	sl, r0
   40f24:	uxtb	r3, r2
   40f28:	str	r3, [sp, #92]	; 0x5c
   40f2c:	ldr	r1, [r5, #20]
   40f30:	cmp	r1, #0
   40f34:	orrne	r3, r3, #2048	; 0x800
   40f38:	strne	r3, [sp, #92]	; 0x5c
   40f3c:	ldr	r3, [r5, #24]
   40f40:	cmp	r3, #0
   40f44:	beq	40f54 <WriteType+0x5bc>
   40f48:	ldr	r3, [sp, #92]	; 0x5c
   40f4c:	orr	r3, r3, #1024	; 0x400
   40f50:	str	r3, [sp, #92]	; 0x5c
   40f54:	ldr	r3, [r5, #28]
   40f58:	cmp	r3, #0
   40f5c:	beq	40f6c <WriteType+0x5d4>
   40f60:	ldr	r3, [sp, #92]	; 0x5c
   40f64:	orr	r3, r3, #512	; 0x200
   40f68:	str	r3, [sp, #92]	; 0x5c
   40f6c:	cmp	r2, #5
   40f70:	bne	40f80 <WriteType+0x5e8>
   40f74:	ldr	r3, [r5, #40]	; 0x28
   40f78:	ldr	r3, [r3]
   40f7c:	str	r3, [sp, #64]	; 0x40
   40f80:	ldr	r3, [r4, #20]
   40f84:	add	r6, sp, #92	; 0x5c
   40f88:	cmp	r3, #0
   40f8c:	bne	41688 <WriteType+0xcf0>
   40f90:	add	r8, sp, #96	; 0x60
   40f94:	mov	r2, #1
   40f98:	ldr	r3, [r4]
   40f9c:	mov	r1, #4
   40fa0:	add	r0, sp, #44	; 0x2c
   40fa4:	str	r8, [sp]
   40fa8:	bl	1514 <fwrite@plt>
   40fac:	mov	r2, #1
   40fb0:	mov	r1, #4
   40fb4:	ldr	r3, [r4]
   40fb8:	add	r0, sp, #52	; 0x34
   40fbc:	bl	1514 <fwrite@plt>
   40fc0:	mov	r2, #1
   40fc4:	mov	r1, #4
   40fc8:	ldr	r3, [r4]
   40fcc:	mov	r0, r6
   40fd0:	bl	1514 <fwrite@plt>
   40fd4:	mov	r2, #1
   40fd8:	mov	r1, #4
   40fdc:	ldr	r3, [r4]
   40fe0:	add	r0, sp, #64	; 0x40
   40fe4:	bl	1514 <fwrite@plt>
   40fe8:	ldr	ip, [r5, #4]
   40fec:	mov	r2, #1
   40ff0:	mov	r1, #4
   40ff4:	add	r0, sp, #48	; 0x30
   40ff8:	ldr	r3, [r4]
   40ffc:	lsl	ip, ip, #2
   41000:	str	ip, [sp, #96]	; 0x60
   41004:	bl	1514 <fwrite@plt>
   41008:	mov	r0, r8
   4100c:	mov	r2, #1
   41010:	ldr	r3, [r4]
   41014:	mov	r1, #4
   41018:	bl	1514 <fwrite@plt>
   4101c:	ldr	r3, [r5, #4]
   41020:	cmp	r3, #0
   41024:	ble	41060 <WriteType+0x6c8>
   41028:	mov	r6, #0
   4102c:	add	r8, sp, #100	; 0x64
   41030:	ldr	ip, [r5, #32]
   41034:	mov	r2, #1
   41038:	mov	r1, #4
   4103c:	mov	r0, r8
   41040:	ldr	r3, [r4]
   41044:	ldr	ip, [ip, r6, lsl #2]
   41048:	add	r6, r6, r2
   4104c:	str	ip, [sp, #100]	; 0x64
   41050:	bl	1514 <fwrite@plt>
   41054:	ldr	r3, [r5, #4]
   41058:	cmp	r6, r3
   4105c:	blt	41030 <WriteType+0x698>
   41060:	tst	r3, #1
   41064:	ldr	r3, [r4]
   41068:	bne	41698 <WriteType+0xd00>
   4106c:	mov	r2, #1
   41070:	mov	r1, #4
   41074:	add	r0, sp, #40	; 0x28
   41078:	bl	1514 <fwrite@plt>
   4107c:	mov	r2, #1
   41080:	mov	r1, #4
   41084:	ldr	r3, [r4]
   41088:	mov	r0, r9
   4108c:	bl	1514 <fwrite@plt>
   41090:	mov	r1, r5
   41094:	mov	r0, r4
   41098:	bl	40998 <WriteType>
   4109c:	ldr	r0, [r4]
   410a0:	bl	14b4 <ftell@plt>
   410a4:	cmn	r0, #1
   410a8:	cmnne	sl, #1
   410ac:	mov	r5, r0
   410b0:	beq	414b0 <WriteType+0xb18>
   410b4:	sub	sl, r0, sl
   410b8:	ldr	r0, [r4]
   410bc:	mvn	r1, #3
   410c0:	sub	r1, r1, sl
   410c4:	mov	r2, #1
   410c8:	str	sl, [sp, #96]	; 0x60
   410cc:	bl	1694 <fseek@plt>
   410d0:	mov	r2, #1
   410d4:	mov	r1, #4
   410d8:	ldr	r3, [r4]
   410dc:	ldr	r0, [sp]
   410e0:	bl	1514 <fwrite@plt>
   410e4:	mov	r1, r5
   410e8:	mov	r2, #0
   410ec:	ldr	r0, [r4]
   410f0:	bl	1694 <fseek@plt>
   410f4:	ldr	r3, [sp, #32]
   410f8:	add	r7, r7, #1
   410fc:	cmp	r3, r7
   41100:	bhi	40e9c <WriteType+0x504>
   41104:	b	40abc <WriteType+0x124>
   41108:	ldr	r3, [r5, #8]
   4110c:	mov	r2, #0
   41110:	strb	r2, [sp, #88]	; 0x58
   41114:	ldr	r6, [sp, #24]
   41118:	str	r3, [sp, #96]	; 0x60
   4111c:	ldr	r5, [r5, #40]	; 0x28
   41120:	cmp	r3, #16
   41124:	addls	pc, pc, r3, lsl #2
   41128:	b	40abc <WriteType+0x124>
   4112c:	b	41914 <WriteType+0xf7c>
   41130:	b	41860 <WriteType+0xec8>
   41134:	b	41860 <WriteType+0xec8>
   41138:	b	40abc <WriteType+0x124>
   4113c:	b	417e4 <WriteType+0xe4c>
   41140:	b	40abc <WriteType+0x124>
   41144:	b	40abc <WriteType+0x124>
   41148:	b	40abc <WriteType+0x124>
   4114c:	b	40abc <WriteType+0x124>
   41150:	b	40abc <WriteType+0x124>
   41154:	b	40abc <WriteType+0x124>
   41158:	b	40abc <WriteType+0x124>
   4115c:	b	40abc <WriteType+0x124>
   41160:	b	40abc <WriteType+0x124>
   41164:	b	40abc <WriteType+0x124>
   41168:	b	40abc <WriteType+0x124>
   4116c:	b	41754 <WriteType+0xdbc>
   41170:	ldr	r3, [r5]
   41174:	cmp	r3, #0
   41178:	beq	40abc <WriteType+0x124>
   4117c:	ldr	r2, [r5, #12]
   41180:	ldr	r1, [r5, #40]	; 0x28
   41184:	clz	r7, r2
   41188:	lsr	r7, r7, #5
   4118c:	cmp	r1, #0
   41190:	moveq	r7, #1
   41194:	cmp	r7, #0
   41198:	bne	40abc <WriteType+0x124>
   4119c:	udiv	r0, r3, r2
   411a0:	cmp	r3, r2
   411a4:	str	r0, [sp, #24]
   411a8:	bcc	40abc <WriteType+0x124>
   411ac:	ldr	r3, [pc, #2312]	; 41abc <WriteType+0x1124>
   411b0:	clz	r9, r4
   411b4:	sub	sl, r1, #4
   411b8:	lsr	r9, r9, #5
   411bc:	mov	fp, #6
   411c0:	add	r3, pc, r3
   411c4:	str	r3, [sp, #12]
   411c8:	ldr	r5, [sl, #4]!
   411cc:	mov	r3, #1
   411d0:	mov	r1, #5
   411d4:	mov	r2, #8
   411d8:	strh	r3, [sp, #64]	; 0x40
   411dc:	mov	r3, #0
   411e0:	str	r1, [sp, #76]	; 0x4c
   411e4:	cmp	r5, r3
   411e8:	str	r2, [sp, #80]	; 0x50
   411ec:	mov	r2, #14
   411f0:	movne	r1, r9
   411f4:	moveq	r1, #1
   411f8:	strb	r3, [sp, #60]	; 0x3c
   411fc:	cmp	r1, r3
   41200:	str	fp, [sp, #72]	; 0x48
   41204:	str	r3, [sp, #84]	; 0x54
   41208:	str	r2, [sp, #88]	; 0x58
   4120c:	str	r3, [sp, #96]	; 0x60
   41210:	bne	4149c <WriteType+0xb04>
   41214:	add	ip, sp, #84	; 0x54
   41218:	mov	r2, #1
   4121c:	ldr	r3, [r4]
   41220:	mov	r6, ip
   41224:	mov	r1, #4
   41228:	add	r0, sp, #88	; 0x58
   4122c:	str	ip, [sp]
   41230:	bl	1514 <fwrite@plt>
   41234:	mov	r0, r6
   41238:	mov	r2, #1
   4123c:	ldr	r3, [r4]
   41240:	mov	r1, #4
   41244:	bl	1514 <fwrite@plt>
   41248:	ldr	r3, [r5, #16]
   4124c:	cmp	r3, #0
   41250:	beq	4149c <WriteType+0xb04>
   41254:	ldr	r0, [r4]
   41258:	bl	14b4 <ftell@plt>
   4125c:	ldr	r2, [r5, #16]
   41260:	str	r0, [sp, #4]
   41264:	uxtb	r3, r2
   41268:	str	r3, [sp, #68]	; 0x44
   4126c:	ldr	r1, [r5, #20]
   41270:	cmp	r1, #0
   41274:	orrne	r3, r3, #2048	; 0x800
   41278:	strne	r3, [sp, #68]	; 0x44
   4127c:	ldr	r3, [r5, #24]
   41280:	cmp	r3, #0
   41284:	beq	41294 <WriteType+0x8fc>
   41288:	ldr	r3, [sp, #68]	; 0x44
   4128c:	orr	r3, r3, #1024	; 0x400
   41290:	str	r3, [sp, #68]	; 0x44
   41294:	ldr	r3, [r5, #28]
   41298:	cmp	r3, #0
   4129c:	beq	412ac <WriteType+0x914>
   412a0:	ldr	r3, [sp, #68]	; 0x44
   412a4:	orr	r3, r3, #512	; 0x200
   412a8:	str	r3, [sp, #68]	; 0x44
   412ac:	cmp	r2, #5
   412b0:	bne	412c0 <WriteType+0x928>
   412b4:	ldr	r3, [r5, #40]	; 0x28
   412b8:	ldr	r3, [r3]
   412bc:	str	r3, [sp, #96]	; 0x60
   412c0:	ldr	r3, [r4, #20]
   412c4:	add	r6, sp, #68	; 0x44
   412c8:	cmp	r3, #0
   412cc:	bne	41a18 <WriteType+0x1080>
   412d0:	add	r8, sp, #92	; 0x5c
   412d4:	mov	r2, #1
   412d8:	ldr	r3, [r4]
   412dc:	mov	r1, #4
   412e0:	add	r0, sp, #72	; 0x48
   412e4:	str	r8, [sp, #8]
   412e8:	bl	1514 <fwrite@plt>
   412ec:	mov	r2, #1
   412f0:	mov	r1, #4
   412f4:	ldr	r3, [r4]
   412f8:	add	r0, sp, #80	; 0x50
   412fc:	bl	1514 <fwrite@plt>
   41300:	mov	r2, #1
   41304:	mov	r1, #4
   41308:	ldr	r3, [r4]
   4130c:	mov	r0, r6
   41310:	bl	1514 <fwrite@plt>
   41314:	mov	r2, #1
   41318:	mov	r1, #4
   4131c:	ldr	r3, [r4]
   41320:	add	r0, sp, #96	; 0x60
   41324:	bl	1514 <fwrite@plt>
   41328:	ldr	ip, [r5, #4]
   4132c:	mov	r2, #1
   41330:	mov	r1, #4
   41334:	add	r0, sp, #76	; 0x4c
   41338:	ldr	r3, [r4]
   4133c:	lsl	ip, ip, #2
   41340:	str	ip, [sp, #92]	; 0x5c
   41344:	bl	1514 <fwrite@plt>
   41348:	mov	r0, r8
   4134c:	mov	r2, #1
   41350:	ldr	r3, [r4]
   41354:	mov	r1, #4
   41358:	bl	1514 <fwrite@plt>
   4135c:	ldr	r3, [r5, #4]
   41360:	cmp	r3, #0
   41364:	ble	413a0 <WriteType+0xa08>
   41368:	mov	r6, #0
   4136c:	add	r8, sp, #100	; 0x64
   41370:	ldr	ip, [r5, #32]
   41374:	mov	r2, #1
   41378:	mov	r1, #4
   4137c:	mov	r0, r8
   41380:	ldr	r3, [r4]
   41384:	ldr	ip, [ip, r6, lsl #2]
   41388:	add	r6, r6, r2
   4138c:	str	ip, [sp, #100]	; 0x64
   41390:	bl	1514 <fwrite@plt>
   41394:	ldr	r3, [r5, #4]
   41398:	cmp	r6, r3
   4139c:	blt	41370 <WriteType+0x9d8>
   413a0:	tst	r3, #1
   413a4:	ldr	r6, [r4]
   413a8:	bne	41a28 <WriteType+0x1090>
   413ac:	ldr	r0, [r5, #36]	; 0x24
   413b0:	cmp	r0, #0
   413b4:	beq	41a5c <WriteType+0x10c4>
   413b8:	bl	15c8 <strlen@plt>
   413bc:	cmp	r0, #4
   413c0:	mov	r3, r6
   413c4:	mov	r2, #1
   413c8:	bhi	41978 <WriteType+0xfe0>
   413cc:	mov	r1, #2
   413d0:	strh	r0, [sp, #100]	; 0x64
   413d4:	add	r0, sp, #64	; 0x40
   413d8:	bl	1514 <fwrite@plt>
   413dc:	mov	r2, #1
   413e0:	mov	r1, #2
   413e4:	ldr	r3, [r4]
   413e8:	add	r0, sp, #100	; 0x64
   413ec:	bl	1514 <fwrite@plt>
   413f0:	ldrsh	r2, [sp, #100]	; 0x64
   413f4:	mov	r1, #1
   413f8:	ldr	r3, [r4]
   413fc:	ldr	r0, [r5, #36]	; 0x24
   41400:	bl	1514 <fwrite@plt>
   41404:	ldrsh	r8, [sp, #100]	; 0x64
   41408:	cmp	r8, #3
   4140c:	bgt	41434 <WriteType+0xa9c>
   41410:	add	r6, sp, #60	; 0x3c
   41414:	mov	r2, #1
   41418:	mov	r0, r6
   4141c:	ldr	r3, [r4]
   41420:	add	r8, r8, r2
   41424:	mov	r1, r2
   41428:	bl	1514 <fwrite@plt>
   4142c:	cmp	r8, #4
   41430:	bne	41414 <WriteType+0xa7c>
   41434:	mov	r1, r5
   41438:	mov	r0, r4
   4143c:	bl	40998 <WriteType>
   41440:	ldr	r0, [r4]
   41444:	bl	14b4 <ftell@plt>
   41448:	ldr	r3, [sp, #4]
   4144c:	mov	r5, r0
   41450:	cmn	r0, #1
   41454:	cmnne	r3, #1
   41458:	beq	4196c <WriteType+0xfd4>
   4145c:	sub	r3, r0, r3
   41460:	mvn	r1, #3
   41464:	ldr	r0, [r4]
   41468:	sub	r1, r1, r3
   4146c:	mov	r2, #1
   41470:	str	r3, [sp, #92]	; 0x5c
   41474:	bl	1694 <fseek@plt>
   41478:	mov	r2, #1
   4147c:	mov	r1, #4
   41480:	ldr	r3, [r4]
   41484:	ldr	r0, [sp, #8]
   41488:	bl	1514 <fwrite@plt>
   4148c:	mov	r1, r5
   41490:	mov	r2, #0
   41494:	ldr	r0, [r4]
   41498:	bl	1694 <fseek@plt>
   4149c:	ldr	r3, [sp, #24]
   414a0:	add	r7, r7, #1
   414a4:	cmp	r3, r7
   414a8:	bhi	411c8 <WriteType+0x830>
   414ac:	b	40abc <WriteType+0x124>
   414b0:	ldr	r0, [sp, #4]
   414b4:	bl	161c <Mat_Critical@plt>
   414b8:	b	410f4 <WriteType+0x75c>
   414bc:	mov	r1, #4
   414c0:	add	r6, sp, #92	; 0x5c
   414c4:	strb	r5, [sp, #17]
   414c8:	str	r0, [sp, #76]	; 0x4c
   414cc:	add	r0, sp, #76	; 0x4c
   414d0:	str	r2, [sp, #72]	; 0x48
   414d4:	str	r8, [sp, #80]	; 0x50
   414d8:	str	lr, [sp, #84]	; 0x54
   414dc:	str	ip, [sp, #88]	; 0x58
   414e0:	str	r5, [sp, #92]	; 0x5c
   414e4:	bl	1514 <fwrite@plt>
   414e8:	mov	r2, #1
   414ec:	mov	r1, #4
   414f0:	ldr	r3, [r4]
   414f4:	mov	r0, r6
   414f8:	bl	1514 <fwrite@plt>
   414fc:	ldr	r0, [r4]
   41500:	bl	14b4 <ftell@plt>
   41504:	ldr	r3, [r4, #20]
   41508:	mov	r9, r0
   4150c:	str	r8, [sp, #68]	; 0x44
   41510:	add	r8, sp, #68	; 0x44
   41514:	cmp	r3, #0
   41518:	bne	41950 <WriteType+0xfb8>
   4151c:	add	sl, sp, #96	; 0x60
   41520:	mov	r2, #1
   41524:	ldr	r3, [r4]
   41528:	mov	r1, #4
   4152c:	add	r0, sp, #80	; 0x50
   41530:	str	sl, [sp]
   41534:	mov	r5, #0
   41538:	bl	1514 <fwrite@plt>
   4153c:	mov	r2, #1
   41540:	mov	r1, #4
   41544:	ldr	r3, [r4]
   41548:	add	r0, sp, #88	; 0x58
   4154c:	bl	1514 <fwrite@plt>
   41550:	mov	r0, r8
   41554:	mov	r2, #1
   41558:	ldr	r3, [r4]
   4155c:	mov	r1, #4
   41560:	add	r8, sp, #100	; 0x64
   41564:	bl	1514 <fwrite@plt>
   41568:	mov	r2, #1
   4156c:	mov	r1, #4
   41570:	ldr	r3, [r4]
   41574:	mov	r0, r6
   41578:	bl	1514 <fwrite@plt>
   4157c:	mov	ip, #8
   41580:	mov	r2, #1
   41584:	ldr	r3, [r4]
   41588:	mov	r1, #4
   4158c:	add	r0, sp, #84	; 0x54
   41590:	str	ip, [sp, #96]	; 0x60
   41594:	bl	1514 <fwrite@plt>
   41598:	mov	r2, #1
   4159c:	mov	r1, #4
   415a0:	ldr	r3, [r4]
   415a4:	mov	r0, sl
   415a8:	bl	1514 <fwrite@plt>
   415ac:	mov	r2, #1
   415b0:	mov	r1, #4
   415b4:	ldr	r3, [r4]
   415b8:	mov	r0, r8
   415bc:	str	r5, [sp, #100]	; 0x64
   415c0:	bl	1514 <fwrite@plt>
   415c4:	mov	r2, #1
   415c8:	mov	r1, #4
   415cc:	ldr	r3, [r4]
   415d0:	mov	r0, r8
   415d4:	str	r5, [sp, #100]	; 0x64
   415d8:	bl	1514 <fwrite@plt>
   415dc:	mov	r2, #1
   415e0:	mov	r1, #4
   415e4:	ldr	r3, [r4]
   415e8:	add	r0, sp, #72	; 0x48
   415ec:	bl	1514 <fwrite@plt>
   415f0:	mov	r2, #1
   415f4:	mov	r1, #4
   415f8:	ldr	r3, [r4]
   415fc:	mov	r0, r6
   41600:	bl	1514 <fwrite@plt>
   41604:	mov	r2, r5
   41608:	mov	r1, r5
   4160c:	mov	r3, #9
   41610:	mov	r0, r4
   41614:	bl	218f8 <WriteData>
   41618:	ands	r5, r0, #7
   4161c:	str	r0, [sp, #96]	; 0x60
   41620:	beq	41654 <WriteType+0xcbc>
   41624:	rsbs	r0, r0, #0
   41628:	add	r6, sp, #17
   4162c:	and	r0, r0, #7
   41630:	rsbpl	r5, r0, #0
   41634:	mov	r2, #1
   41638:	mov	r0, r6
   4163c:	ldr	r3, [r4]
   41640:	add	r5, r5, r2
   41644:	mov	r1, r2
   41648:	bl	1514 <fwrite@plt>
   4164c:	cmp	r5, #8
   41650:	bne	41634 <WriteType+0xc9c>
   41654:	ldr	r0, [r4]
   41658:	bl	14b4 <ftell@plt>
   4165c:	cmn	r0, #1
   41660:	cmnne	r9, #1
   41664:	mov	r5, r0
   41668:	beq	416fc <WriteType+0xd64>
   4166c:	sub	r9, r0, r9
   41670:	mvn	r1, #3
   41674:	ldr	r0, [r4]
   41678:	sub	r1, r1, r9
   4167c:	mov	r2, #1
   41680:	str	r9, [sp, #96]	; 0x60
   41684:	b	410cc <WriteType+0x734>
   41688:	mov	r0, r6
   4168c:	bl	18c4 <Mat_int32Swap>
   41690:	str	r0, [sp, #92]	; 0x5c
   41694:	b	40f90 <WriteType+0x5f8>
   41698:	mov	r2, #1
   4169c:	mov	r1, #4
   416a0:	mov	r0, r9
   416a4:	bl	1514 <fwrite@plt>
   416a8:	ldr	r3, [r4]
   416ac:	b	4106c <WriteType+0x6d4>
   416b0:	mov	r1, r9
   416b4:	mov	r0, r4
   416b8:	bl	218f8 <WriteData>
   416bc:	ands	r5, r0, #7
   416c0:	str	r0, [sp, #20]
   416c4:	beq	40abc <WriteType+0x124>
   416c8:	rsbs	r0, r0, #0
   416cc:	add	r6, sp, #16
   416d0:	and	r0, r0, #7
   416d4:	rsbpl	r5, r0, #0
   416d8:	mov	r2, #1
   416dc:	mov	r0, r6
   416e0:	ldr	r3, [r4]
   416e4:	add	r5, r5, r2
   416e8:	mov	r1, r2
   416ec:	bl	1514 <fwrite@plt>
   416f0:	cmp	r5, #8
   416f4:	bne	416d8 <WriteType+0xd40>
   416f8:	b	40abc <WriteType+0x124>
   416fc:	ldr	r0, [sp, #8]
   41700:	bl	161c <Mat_Critical@plt>
   41704:	b	410f4 <WriteType+0x75c>
   41708:	mov	r1, r8
   4170c:	mov	r0, r4
   41710:	bl	218f8 <WriteData>
   41714:	ands	r5, r0, #7
   41718:	str	r0, [sp, #20]
   4171c:	beq	40abc <WriteType+0x124>
   41720:	rsbs	r0, r0, #0
   41724:	add	r6, sp, #16
   41728:	and	r0, r0, #7
   4172c:	rsbpl	r5, r0, #0
   41730:	mov	r2, #1
   41734:	mov	r0, r6
   41738:	ldr	r3, [r4]
   4173c:	add	r5, r5, r2
   41740:	mov	r1, r2
   41744:	bl	1514 <fwrite@plt>
   41748:	cmp	r5, #8
   4174c:	bne	41730 <WriteType+0xd98>
   41750:	b	40abc <WriteType+0x124>
   41754:	mov	r2, #1
   41758:	mov	r1, #4
   4175c:	ldr	r3, [r4]
   41760:	add	r0, sp, #96	; 0x60
   41764:	str	r6, [sp, #100]	; 0x64
   41768:	bl	1514 <fwrite@plt>
   4176c:	mov	r2, #1
   41770:	mov	r1, #4
   41774:	ldr	r3, [r4]
   41778:	add	r0, sp, #100	; 0x64
   4177c:	bl	1514 <fwrite@plt>
   41780:	cmp	r5, #0
   41784:	ldr	r2, [sp, #100]	; 0x64
   41788:	beq	417a8 <WriteType+0xe10>
   4178c:	cmp	r2, #0
   41790:	ble	417a8 <WriteType+0xe10>
   41794:	mov	r0, r5
   41798:	mov	r1, #1
   4179c:	ldr	r3, [r4]
   417a0:	bl	1514 <fwrite@plt>
   417a4:	ldr	r2, [sp, #100]	; 0x64
   417a8:	ands	r5, r2, #7
   417ac:	beq	40abc <WriteType+0x124>
   417b0:	rsbs	r2, r2, #0
   417b4:	add	r6, sp, #88	; 0x58
   417b8:	and	r2, r2, #7
   417bc:	rsbpl	r5, r2, #0
   417c0:	mov	r2, #1
   417c4:	mov	r0, r6
   417c8:	ldr	r3, [r4]
   417cc:	add	r5, r5, r2
   417d0:	mov	r1, r2
   417d4:	bl	1514 <fwrite@plt>
   417d8:	cmp	r5, #8
   417dc:	bne	417c0 <WriteType+0xe28>
   417e0:	b	40abc <WriteType+0x124>
   417e4:	lsl	ip, r6, #1
   417e8:	mov	r2, #1
   417ec:	mov	r1, #4
   417f0:	add	r0, sp, #96	; 0x60
   417f4:	ldr	r3, [r4]
   417f8:	str	ip, [sp, #100]	; 0x64
   417fc:	bl	1514 <fwrite@plt>
   41800:	mov	r2, #1
   41804:	mov	r1, #4
   41808:	ldr	r3, [r4]
   4180c:	add	r0, sp, #100	; 0x64
   41810:	bl	1514 <fwrite@plt>
   41814:	cmp	r5, #0
   41818:	cmpne	r6, #0
   4181c:	bgt	41a44 <WriteType+0x10ac>
   41820:	ldr	r3, [sp, #100]	; 0x64
   41824:	ands	r5, r3, #7
   41828:	beq	40abc <WriteType+0x124>
   4182c:	rsbs	r3, r3, #0
   41830:	add	r6, sp, #88	; 0x58
   41834:	and	r3, r3, #7
   41838:	rsbpl	r5, r3, #0
   4183c:	mov	r2, #1
   41840:	mov	r0, r6
   41844:	ldr	r3, [r4]
   41848:	add	r5, r5, r2
   4184c:	mov	r1, r2
   41850:	bl	1514 <fwrite@plt>
   41854:	cmp	r5, #8
   41858:	bne	4183c <WriteType+0xea4>
   4185c:	b	40abc <WriteType+0x124>
   41860:	lsl	ip, r6, #1
   41864:	mov	r7, #4
   41868:	mov	r2, #1
   4186c:	mov	r1, r7
   41870:	add	r0, sp, #96	; 0x60
   41874:	ldr	r3, [r4]
   41878:	str	r7, [sp, #96]	; 0x60
   4187c:	str	ip, [sp, #100]	; 0x64
   41880:	bl	1514 <fwrite@plt>
   41884:	mov	r1, r7
   41888:	mov	r2, #1
   4188c:	ldr	r3, [r4]
   41890:	add	r0, sp, #100	; 0x64
   41894:	bl	1514 <fwrite@plt>
   41898:	cmp	r5, #0
   4189c:	beq	40abc <WriteType+0x124>
   418a0:	cmp	r6, #0
   418a4:	addgt	r6, r5, r6
   418a8:	addgt	r7, sp, #92	; 0x5c
   418ac:	ble	418d4 <WriteType+0xf3c>
   418b0:	ldrb	ip, [r5], #1
   418b4:	mov	r2, #1
   418b8:	mov	r1, #2
   418bc:	mov	r0, r7
   418c0:	ldr	r3, [r4]
   418c4:	strh	ip, [sp, #92]	; 0x5c
   418c8:	bl	1514 <fwrite@plt>
   418cc:	cmp	r5, r6
   418d0:	bne	418b0 <WriteType+0xf18>
   418d4:	ldr	r3, [sp, #100]	; 0x64
   418d8:	ands	r5, r3, #7
   418dc:	beq	40abc <WriteType+0x124>
   418e0:	rsbs	r3, r3, #0
   418e4:	add	r6, sp, #88	; 0x58
   418e8:	and	r3, r3, #7
   418ec:	rsbpl	r5, r3, #0
   418f0:	mov	r2, #1
   418f4:	mov	r0, r6
   418f8:	ldr	r3, [r4]
   418fc:	add	r5, r5, r2
   41900:	mov	r1, r2
   41904:	bl	1514 <fwrite@plt>
   41908:	cmp	r5, #8
   4190c:	bne	418f0 <WriteType+0xf58>
   41910:	b	40abc <WriteType+0x124>
   41914:	lsl	r6, r6, #1
   41918:	mov	r5, #4
   4191c:	mov	r2, #1
   41920:	mov	r1, r5
   41924:	add	r0, sp, #96	; 0x60
   41928:	ldr	r3, [r4]
   4192c:	str	r5, [sp, #96]	; 0x60
   41930:	str	r6, [sp, #100]	; 0x64
   41934:	bl	1514 <fwrite@plt>
   41938:	mov	r1, r5
   4193c:	mov	r2, #1
   41940:	ldr	r3, [r4]
   41944:	add	r0, sp, #100	; 0x64
   41948:	bl	1514 <fwrite@plt>
   4194c:	b	40abc <WriteType+0x124>
   41950:	mov	r0, r8
   41954:	bl	18c4 <Mat_int32Swap>
   41958:	str	r0, [sp, #68]	; 0x44
   4195c:	b	4151c <WriteType+0xb84>
   41960:	ldr	r8, [pc, #344]	; 41ac0 <WriteType+0x1128>
   41964:	add	r8, pc, r8
   41968:	b	40c50 <WriteType+0x2b8>
   4196c:	ldr	r0, [sp, #12]
   41970:	bl	161c <Mat_Critical@plt>
   41974:	b	4149c <WriteType+0xb04>
   41978:	mov	r1, #2
   4197c:	str	r0, [sp, #100]	; 0x64
   41980:	add	r0, sp, #64	; 0x40
   41984:	bl	1514 <fwrite@plt>
   41988:	add	r6, sp, #60	; 0x3c
   4198c:	mov	r2, #1
   41990:	ldr	r3, [r4]
   41994:	mov	r1, r2
   41998:	mov	r0, r6
   4199c:	bl	1514 <fwrite@plt>
   419a0:	mov	r2, #1
   419a4:	mov	r0, r6
   419a8:	ldr	r3, [r4]
   419ac:	mov	r1, r2
   419b0:	bl	1514 <fwrite@plt>
   419b4:	mov	r2, #1
   419b8:	mov	r1, #4
   419bc:	ldr	r3, [r4]
   419c0:	add	r0, sp, #100	; 0x64
   419c4:	bl	1514 <fwrite@plt>
   419c8:	mov	r1, #1
   419cc:	ldr	r3, [r4]
   419d0:	ldr	r0, [r5, #36]	; 0x24
   419d4:	ldr	r2, [sp, #100]	; 0x64
   419d8:	bl	1514 <fwrite@plt>
   419dc:	ldr	r3, [sp, #100]	; 0x64
   419e0:	ands	r8, r3, #7
   419e4:	beq	41434 <WriteType+0xa9c>
   419e8:	rsbs	r3, r3, #0
   419ec:	and	r3, r3, #7
   419f0:	rsbpl	r8, r3, #0
   419f4:	mov	r2, #1
   419f8:	mov	r0, r6
   419fc:	ldr	r3, [r4]
   41a00:	add	r8, r8, r2
   41a04:	mov	r1, r2
   41a08:	bl	1514 <fwrite@plt>
   41a0c:	cmp	r8, #8
   41a10:	bne	419f4 <WriteType+0x105c>
   41a14:	b	41434 <WriteType+0xa9c>
   41a18:	mov	r0, r6
   41a1c:	bl	18c4 <Mat_int32Swap>
   41a20:	str	r0, [sp, #68]	; 0x44
   41a24:	b	412d0 <WriteType+0x938>
   41a28:	mov	r3, r6
   41a2c:	mov	r2, #1
   41a30:	ldr	r0, [sp]
   41a34:	mov	r1, #4
   41a38:	bl	1514 <fwrite@plt>
   41a3c:	ldr	r6, [r4]
   41a40:	b	413ac <WriteType+0xa14>
   41a44:	mov	r2, r6
   41a48:	mov	r0, r5
   41a4c:	ldr	r3, [r4]
   41a50:	mov	r1, #2
   41a54:	bl	1514 <fwrite@plt>
   41a58:	b	41820 <WriteType+0xe88>
   41a5c:	mov	r3, r6
   41a60:	mov	r2, #1
   41a64:	mov	r1, #2
   41a68:	add	r0, sp, #64	; 0x40
   41a6c:	bl	1514 <fwrite@plt>
   41a70:	add	r6, sp, #60	; 0x3c
   41a74:	mov	r2, #1
   41a78:	ldr	r3, [r4]
   41a7c:	mov	r1, r2
   41a80:	mov	r0, r6
   41a84:	bl	1514 <fwrite@plt>
   41a88:	mov	r2, #1
   41a8c:	mov	r0, r6
   41a90:	ldr	r3, [r4]
   41a94:	mov	r1, r2
   41a98:	bl	1514 <fwrite@plt>
   41a9c:	mov	r2, #1
   41aa0:	mov	r1, #4
   41aa4:	ldr	r3, [r4]
   41aa8:	ldr	r0, [sp]
   41aac:	bl	1514 <fwrite@plt>
   41ab0:	b	41434 <WriteType+0xa9c>
   41ab4:	.word	0x0000d970
   41ab8:	.word	0x0000d964
   41abc:	.word	0x0000d638
   41ac0:	.word	0x0001e868

00041ac4 <GetTypeBufSize>:
   41ac4:	mov	r3, #1
   41ac8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   41acc:	mov	r5, r0
   41ad0:	strd	r6, [sp, #8]
   41ad4:	strd	r8, [sp, #16]
   41ad8:	str	lr, [sp, #24]
   41adc:	sub	sp, sp, #12
   41ae0:	mov	r1, sp
   41ae4:	str	r3, [sp]
   41ae8:	bl	4996c <SafeMulDims>
   41aec:	ldr	r4, [r5, #4]
   41af0:	ldr	r3, [r5, #16]
   41af4:	tst	r4, #1
   41af8:	lsl	r4, r4, #2
   41afc:	sub	r3, r3, #1
   41b00:	addne	r4, r4, #12
   41b04:	addeq	r4, r4, #8
   41b08:	cmp	r3, #4
   41b0c:	addls	pc, pc, r3, lsl #2
   41b10:	b	41d84 <GetTypeBufSize+0x2c0>
   41b14:	b	41c3c <GetTypeBufSize+0x178>
   41b18:	b	41cb4 <GetTypeBufSize+0x1f0>
   41b1c:	b	41d84 <GetTypeBufSize+0x2c0>
   41b20:	b	41bd0 <GetTypeBufSize+0x10c>
   41b24:	b	41b28 <GetTypeBufSize+0x64>
   41b28:	ldr	r9, [r5, #40]	; 0x28
   41b2c:	add	r8, sp, #4
   41b30:	mov	r2, #4
   41b34:	mov	r0, r8
   41b38:	ldr	r1, [r9, #8]
   41b3c:	bl	499ec <SafeMul>
   41b40:	ldr	r7, [sp, #4]
   41b44:	tst	r7, #7
   41b48:	beq	41b58 <GetTypeBufSize+0x94>
   41b4c:	bic	r7, r7, #7
   41b50:	add	r7, r7, #8
   41b54:	str	r7, [sp, #4]
   41b58:	mov	r2, #4
   41b5c:	mov	r0, r8
   41b60:	ldr	r1, [r9, #16]
   41b64:	bl	499ec <SafeMul>
   41b68:	ldr	r6, [sp, #4]
   41b6c:	tst	r6, #7
   41b70:	beq	41b80 <GetTypeBufSize+0xbc>
   41b74:	bic	r6, r6, #7
   41b78:	add	r6, r6, #8
   41b7c:	str	r6, [sp, #4]
   41b80:	ldr	r9, [r9, #20]
   41b84:	add	r4, r4, #16
   41b88:	add	r4, r4, r7
   41b8c:	ldr	r0, [r5, #8]
   41b90:	add	r4, r4, r6
   41b94:	bl	1598 <Mat_SizeOf@plt>
   41b98:	mov	r2, r0
   41b9c:	mov	r0, r8
   41ba0:	mov	r1, r9
   41ba4:	bl	499ec <SafeMul>
   41ba8:	ldr	r3, [sp, #4]
   41bac:	ldr	r2, [r5, #20]
   41bb0:	tst	r3, #7
   41bb4:	bicne	r3, r3, #7
   41bb8:	addne	r3, r3, #8
   41bbc:	cmp	r2, #0
   41bc0:	add	r3, r3, #8
   41bc4:	add	r4, r4, r3
   41bc8:	beq	41c20 <GetTypeBufSize+0x15c>
   41bcc:	b	41c1c <GetTypeBufSize+0x158>
   41bd0:	ldr	r0, [r5, #8]
   41bd4:	ldr	r6, [sp]
   41bd8:	sub	r3, r0, #1
   41bdc:	cmp	r3, #1
   41be0:	movls	r0, #4
   41be4:	bl	1598 <Mat_SizeOf@plt>
   41be8:	mov	r2, r0
   41bec:	mov	r1, r6
   41bf0:	add	r0, sp, #4
   41bf4:	bl	499ec <SafeMul>
   41bf8:	ldr	r3, [sp, #4]
   41bfc:	ldr	r2, [r5, #20]
   41c00:	tst	r3, #7
   41c04:	bicne	r3, r3, #7
   41c08:	addne	r3, r3, #8
   41c0c:	cmp	r2, #0
   41c10:	add	r3, r3, #8
   41c14:	add	r4, r4, r3
   41c18:	beq	41c20 <GetTypeBufSize+0x15c>
   41c1c:	add	r4, r4, r3
   41c20:	mov	r0, r4
   41c24:	add	sp, sp, #12
   41c28:	ldrd	r4, [sp]
   41c2c:	ldrd	r6, [sp, #8]
   41c30:	ldrd	r8, [sp, #16]
   41c34:	add	sp, sp, #24
   41c38:	pop	{pc}		; (ldr pc, [sp], #4)
   41c3c:	ldr	r3, [r5]
   41c40:	cmp	r3, #0
   41c44:	beq	41c20 <GetTypeBufSize+0x15c>
   41c48:	ldr	r2, [r5, #12]
   41c4c:	cmp	r2, #0
   41c50:	beq	41c20 <GetTypeBufSize+0x15c>
   41c54:	udiv	r1, r3, r2
   41c58:	ldr	r6, [r5, #40]	; 0x28
   41c5c:	cmp	r3, r2
   41c60:	movcc	r3, #0
   41c64:	movcs	r3, #1
   41c68:	cmp	r6, #0
   41c6c:	moveq	r3, #0
   41c70:	cmp	r3, #0
   41c74:	str	r1, [sp]
   41c78:	beq	41c20 <GetTypeBufSize+0x15c>
   41c7c:	sub	r6, r6, #4
   41c80:	mov	r5, #0
   41c84:	ldr	r3, [r6, #4]!
   41c88:	subs	r0, r3, #0
   41c8c:	moveq	r0, #8
   41c90:	beq	41c9c <GetTypeBufSize+0x1d8>
   41c94:	bl	41ac4 <GetTypeBufSize>
   41c98:	add	r0, r0, #32
   41c9c:	ldr	r3, [sp]
   41ca0:	add	r5, r5, #1
   41ca4:	add	r4, r4, r0
   41ca8:	cmp	r3, r5
   41cac:	bhi	41c84 <GetTypeBufSize+0x1c0>
   41cb0:	b	41c20 <GetTypeBufSize+0x15c>
   41cb4:	ldr	r8, [r5, #40]	; 0x28
   41cb8:	ldr	r3, [r5, #52]	; 0x34
   41cbc:	ldr	r7, [r3, #4]
   41cc0:	cmp	r7, #0
   41cc4:	beq	41d90 <GetTypeBufSize+0x2cc>
   41cc8:	ldr	r6, [r3, #8]
   41ccc:	mov	r5, #0
   41cd0:	add	r9, r6, r7, lsl #2
   41cd4:	ldr	r3, [r6], #4
   41cd8:	subs	r0, r3, #0
   41cdc:	beq	41cec <GetTypeBufSize+0x228>
   41ce0:	bl	15c8 <strlen@plt>
   41ce4:	cmp	r5, r0
   41ce8:	movcc	r5, r0
   41cec:	cmp	r9, r6
   41cf0:	bne	41cd4 <GetTypeBufSize+0x210>
   41cf4:	mla	r3, r5, r7, r7
   41cf8:	tst	r3, #7
   41cfc:	beq	41d18 <GetTypeBufSize+0x254>
   41d00:	add	r3, r3, r7
   41d04:	b	41d0c <GetTypeBufSize+0x248>
   41d08:	mov	r3, r1
   41d0c:	tst	r3, #7
   41d10:	add	r1, r7, r3
   41d14:	bne	41d08 <GetTypeBufSize+0x244>
   41d18:	add	r4, r4, #16
   41d1c:	cmp	r8, #0
   41d20:	add	r4, r3, r4
   41d24:	beq	41c20 <GetTypeBufSize+0x15c>
   41d28:	mov	r3, #1
   41d2c:	mov	r2, r7
   41d30:	ldr	r1, [sp]
   41d34:	add	r0, sp, #4
   41d38:	str	r3, [sp, #4]
   41d3c:	bl	499ec <SafeMul>
   41d40:	ldr	r2, [sp, #4]
   41d44:	cmp	r2, #0
   41d48:	beq	41c20 <GetTypeBufSize+0x15c>
   41d4c:	sub	r8, r8, #4
   41d50:	mov	r5, #0
   41d54:	ldr	r3, [r8, #4]!
   41d58:	subs	r0, r3, #0
   41d5c:	moveq	r0, #56	; 0x38
   41d60:	beq	41d70 <GetTypeBufSize+0x2ac>
   41d64:	bl	41ac4 <GetTypeBufSize>
   41d68:	ldr	r2, [sp, #4]
   41d6c:	add	r0, r0, #32
   41d70:	add	r5, r5, #1
   41d74:	add	r4, r4, r0
   41d78:	cmp	r2, r5
   41d7c:	bhi	41d54 <GetTypeBufSize+0x290>
   41d80:	b	41c20 <GetTypeBufSize+0x15c>
   41d84:	ldr	r6, [sp]
   41d88:	ldr	r0, [r5, #8]
   41d8c:	b	41be4 <GetTypeBufSize+0x120>
   41d90:	add	r4, r4, #16
   41d94:	b	41c20 <GetTypeBufSize+0x15c>

00041d98 <WriteCompressedType>:
   41d98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   41d9c:	mov	r5, r0
   41da0:	mov	r4, r2
   41da4:	strd	r6, [sp, #8]
   41da8:	mov	r2, #2048	; 0x800
   41dac:	strd	r8, [sp, #16]
   41db0:	mov	r8, r1
   41db4:	mov	r1, #0
   41db8:	strd	sl, [sp, #24]
   41dbc:	str	lr, [sp, #32]
   41dc0:	sub	sp, sp, #10240	; 0x2800
   41dc4:	sub	sp, sp, #52	; 0x34
   41dc8:	add	sl, sp, #2096	; 0x830
   41dcc:	mov	r0, sl
   41dd0:	bl	15f8 <memset@plt>
   41dd4:	ldr	r3, [r8, #16]
   41dd8:	mov	r2, #1
   41ddc:	str	r2, [sl, #-2056]	; 0xfffff7f8
   41de0:	cmp	r3, #0
   41de4:	bne	41e10 <WriteCompressedType+0x78>
   41de8:	mov	fp, #0
   41dec:	mov	r0, fp
   41df0:	add	sp, sp, #10240	; 0x2800
   41df4:	add	sp, sp, #52	; 0x34
   41df8:	ldrd	r4, [sp]
   41dfc:	ldrd	r6, [sp, #8]
   41e00:	ldrd	r8, [sp, #16]
   41e04:	ldrd	sl, [sp, #24]
   41e08:	add	sp, sp, #32
   41e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   41e10:	add	r6, sp, #48	; 0x30
   41e14:	mov	r0, r8
   41e18:	sub	r1, r6, #8
   41e1c:	bl	4996c <SafeMulDims>
   41e20:	ldr	r3, [r8, #16]
   41e24:	sub	r3, r3, #1
   41e28:	cmp	r3, #14
   41e2c:	addls	pc, pc, r3, lsl #2
   41e30:	b	41de8 <WriteCompressedType+0x50>
   41e34:	b	42000 <WriteCompressedType+0x268>
   41e38:	b	41f8c <WriteCompressedType+0x1f4>
   41e3c:	b	41de8 <WriteCompressedType+0x50>
   41e40:	b	41f00 <WriteCompressedType+0x168>
   41e44:	b	41e70 <WriteCompressedType+0xd8>
   41e48:	b	42120 <WriteCompressedType+0x388>
   41e4c:	b	42120 <WriteCompressedType+0x388>
   41e50:	b	42120 <WriteCompressedType+0x388>
   41e54:	b	42120 <WriteCompressedType+0x388>
   41e58:	b	42120 <WriteCompressedType+0x388>
   41e5c:	b	42120 <WriteCompressedType+0x388>
   41e60:	b	42120 <WriteCompressedType+0x388>
   41e64:	b	42120 <WriteCompressedType+0x388>
   41e68:	b	42120 <WriteCompressedType+0x388>
   41e6c:	b	42120 <WriteCompressedType+0x388>
   41e70:	ldr	r6, [r8, #40]	; 0x28
   41e74:	mov	r9, #5
   41e78:	mov	r1, r4
   41e7c:	mov	r0, r5
   41e80:	ldrd	r2, [r6, #4]
   41e84:	str	r9, [sp]
   41e88:	bl	40688 <WriteCompressedData>
   41e8c:	mov	r7, r0
   41e90:	mov	r1, r4
   41e94:	ldrd	r2, [r6, #12]
   41e98:	mov	r0, r5
   41e9c:	str	r9, [sp]
   41ea0:	bl	40688 <WriteCompressedData>
   41ea4:	ldr	r3, [r8, #20]
   41ea8:	add	r7, r7, r0
   41eac:	cmp	r3, #0
   41eb0:	beq	42444 <WriteCompressedType+0x6ac>
   41eb4:	ldr	ip, [r8, #8]
   41eb8:	mov	r1, r4
   41ebc:	mov	r0, r5
   41ec0:	ldr	r3, [r6, #20]
   41ec4:	ldr	sl, [r6, #24]
   41ec8:	ldr	r2, [sl]
   41ecc:	str	ip, [sp]
   41ed0:	bl	40688 <WriteCompressedData>
   41ed4:	ldr	ip, [r8, #8]
   41ed8:	mov	r9, r0
   41edc:	mov	r1, r4
   41ee0:	mov	r0, r5
   41ee4:	ldr	r2, [sl, #4]
   41ee8:	ldr	r3, [r6, #20]
   41eec:	str	ip, [sp]
   41ef0:	bl	40688 <WriteCompressedData>
   41ef4:	add	r0, r9, r0
   41ef8:	add	fp, r0, r7
   41efc:	b	41dec <WriteCompressedType+0x54>
   41f00:	add	r1, sp, #6144	; 0x1800
   41f04:	mov	r2, #0
   41f08:	ldr	r9, [sl, #-2056]	; 0xfffff7f8
   41f0c:	add	r1, r1, #48	; 0x30
   41f10:	mov	r3, #0
   41f14:	cmp	r5, #0
   41f18:	ldr	fp, [r8, #8]
   41f1c:	strd	r2, [r1]
   41f20:	str	r1, [sp, #12]
   41f24:	ldr	sl, [r8, #40]	; 0x28
   41f28:	beq	41de8 <WriteCompressedType+0x50>
   41f2c:	ldr	r2, [r5]
   41f30:	cmp	r2, #0
   41f34:	beq	41de8 <WriteCompressedType+0x50>
   41f38:	cmp	fp, #17
   41f3c:	addls	pc, pc, fp, lsl #2
   41f40:	b	41de8 <WriteCompressedType+0x50>
   41f44:	b	425b8 <WriteCompressedType+0x820>
   41f48:	b	41de8 <WriteCompressedType+0x50>
   41f4c:	b	42468 <WriteCompressedType+0x6d0>
   41f50:	b	41de8 <WriteCompressedType+0x50>
   41f54:	b	42468 <WriteCompressedType+0x6d0>
   41f58:	b	41de8 <WriteCompressedType+0x50>
   41f5c:	b	41de8 <WriteCompressedType+0x50>
   41f60:	b	41de8 <WriteCompressedType+0x50>
   41f64:	b	41de8 <WriteCompressedType+0x50>
   41f68:	b	41de8 <WriteCompressedType+0x50>
   41f6c:	b	41de8 <WriteCompressedType+0x50>
   41f70:	b	41de8 <WriteCompressedType+0x50>
   41f74:	b	41de8 <WriteCompressedType+0x50>
   41f78:	b	41de8 <WriteCompressedType+0x50>
   41f7c:	b	41de8 <WriteCompressedType+0x50>
   41f80:	b	41de8 <WriteCompressedType+0x50>
   41f84:	b	42468 <WriteCompressedType+0x6d0>
   41f88:	b	42468 <WriteCompressedType+0x6d0>
   41f8c:	ldr	r3, [r8, #52]	; 0x34
   41f90:	ldr	fp, [r3, #4]
   41f94:	cmp	fp, #0
   41f98:	bne	4217c <WriteCompressedType+0x3e4>
   41f9c:	mov	r3, #1
   41fa0:	mov	r2, #5
   41fa4:	movt	r2, #4
   41fa8:	mov	r1, #16
   41fac:	str	sl, [r4]
   41fb0:	mov	r7, #2048	; 0x800
   41fb4:	strd	r2, [sl]
   41fb8:	str	r1, [r4, #4]
   41fbc:	str	r3, [sl, #8]
   41fc0:	str	fp, [sl, #12]
   41fc4:	mov	r1, #0
   41fc8:	mov	r0, r4
   41fcc:	strd	r6, [r4, #12]
   41fd0:	bl	14fc <deflate@plt>
   41fd4:	ldr	r2, [r4, #16]
   41fd8:	mov	r1, #1
   41fdc:	mov	r0, r6
   41fe0:	ldr	r3, [r5]
   41fe4:	rsb	r2, r2, #2048	; 0x800
   41fe8:	bl	1514 <fwrite@plt>
   41fec:	ldr	r3, [r4, #16]
   41ff0:	add	fp, fp, r0
   41ff4:	cmp	r3, #0
   41ff8:	beq	41fc4 <WriteCompressedType+0x22c>
   41ffc:	b	41dec <WriteCompressedType+0x54>
   42000:	ldr	r2, [r8]
   42004:	cmp	r2, #0
   42008:	beq	41de8 <WriteCompressedType+0x50>
   4200c:	ldr	r1, [r8, #12]
   42010:	ldr	fp, [r8, #40]	; 0x28
   42014:	clz	r3, r1
   42018:	lsr	r3, r3, #5
   4201c:	cmp	fp, #0
   42020:	movne	r8, r3
   42024:	moveq	r8, #1
   42028:	cmp	r8, #0
   4202c:	bne	41de8 <WriteCompressedType+0x50>
   42030:	udiv	r3, r2, r1
   42034:	cmp	r2, r1
   42038:	str	r3, [sl, #-2056]	; 0xfffff7f8
   4203c:	bcc	41de8 <WriteCompressedType+0x50>
   42040:	add	r6, sp, #8192	; 0x2000
   42044:	clz	r3, r4
   42048:	add	r6, r6, #48	; 0x30
   4204c:	lsr	r3, r3, #5
   42050:	sub	r2, fp, #4
   42054:	cmp	r5, #0
   42058:	mov	r9, #2048	; 0x800
   4205c:	moveq	r3, #1
   42060:	str	r6, [sp, #12]
   42064:	mov	r6, r2
   42068:	str	r3, [sp, #16]
   4206c:	ldr	fp, [r6, #4]!
   42070:	mov	r2, #2048	; 0x800
   42074:	mov	r1, #0
   42078:	ldr	r0, [sp, #12]
   4207c:	bl	15f8 <memset@plt>
   42080:	ldr	r3, [sp, #16]
   42084:	cmp	fp, #0
   42088:	moveq	r3, #1
   4208c:	cmp	r3, #0
   42090:	bne	4210c <WriteCompressedType+0x374>
   42094:	ldr	r3, [fp, #16]
   42098:	add	r2, sp, #8192	; 0x2000
   4209c:	mov	r1, #14
   420a0:	add	r2, r2, #48	; 0x30
   420a4:	str	r1, [r2]
   420a8:	cmp	r3, #0
   420ac:	bne	4282c <WriteCompressedType+0xa94>
   420b0:	ldr	r2, [sp, #12]
   420b4:	add	r7, sp, #6144	; 0x1800
   420b8:	mov	r3, #8
   420bc:	add	r7, r7, #48	; 0x30
   420c0:	strd	r2, [r4]
   420c4:	mov	r1, #0
   420c8:	mov	r0, r4
   420cc:	str	r7, [r4, #12]
   420d0:	str	r9, [r4, #16]
   420d4:	bl	14fc <deflate@plt>
   420d8:	ldr	r2, [r4, #16]
   420dc:	mov	r1, #1
   420e0:	mov	r0, r7
   420e4:	ldr	r3, [r5]
   420e8:	rsb	r2, r2, #2048	; 0x800
   420ec:	bl	1514 <fwrite@plt>
   420f0:	ldr	r3, [r4, #16]
   420f4:	cmp	r3, #0
   420f8:	beq	420c4 <WriteCompressedType+0x32c>
   420fc:	mov	r1, fp
   42100:	mov	r2, r4
   42104:	mov	r0, r5
   42108:	bl	42854 <WriteCompressedTypeArrayFlags>
   4210c:	ldr	r3, [sl, #-2056]	; 0xfffff7f8
   42110:	add	r8, r8, #1
   42114:	cmp	r3, r8
   42118:	bhi	4206c <WriteCompressedType+0x2d4>
   4211c:	b	41de8 <WriteCompressedType+0x50>
   42120:	ldr	r3, [sl, #-2056]	; 0xfffff7f8
   42124:	ldr	r2, [r8, #20]
   42128:	ldr	ip, [r8, #8]
   4212c:	ldr	r6, [r8, #40]	; 0x28
   42130:	cmp	r2, #0
   42134:	beq	42654 <WriteCompressedType+0x8bc>
   42138:	cmp	r6, #0
   4213c:	beq	42634 <WriteCompressedType+0x89c>
   42140:	mov	r1, r4
   42144:	mov	r0, r5
   42148:	ldr	r2, [r6]
   4214c:	str	ip, [sp]
   42150:	bl	40688 <WriteCompressedData>
   42154:	ldr	ip, [r8, #8]
   42158:	mov	fp, r0
   4215c:	mov	r1, r4
   42160:	mov	r0, r5
   42164:	ldr	r3, [sl, #-2056]	; 0xfffff7f8
   42168:	ldr	r2, [r6, #4]
   4216c:	str	ip, [sp]
   42170:	bl	40688 <WriteCompressedData>
   42174:	add	fp, fp, r0
   42178:	b	41dec <WriteCompressedType+0x54>
   4217c:	ldr	r9, [r3, #8]
   42180:	mov	r7, #0
   42184:	str	r4, [sp, #12]
   42188:	add	r3, r9, fp, lsl #2
   4218c:	mov	r4, r9
   42190:	mov	r9, r3
   42194:	ldr	r0, [r4], #4
   42198:	bl	15c8 <strlen@plt>
   4219c:	cmp	r7, r0
   421a0:	movcc	r7, r0
   421a4:	cmp	r9, r4
   421a8:	bne	42194 <WriteCompressedType+0x3fc>
   421ac:	add	r2, r7, #1
   421b0:	ldr	r4, [sp, #12]
   421b4:	mul	r3, r2, fp
   421b8:	str	r2, [sp, #12]
   421bc:	tst	r3, #7
   421c0:	beq	421e4 <WriteCompressedType+0x44c>
   421c4:	add	r3, r3, fp
   421c8:	b	421d0 <WriteCompressedType+0x438>
   421cc:	mov	r3, r1
   421d0:	tst	r3, #7
   421d4:	add	r2, r2, #1
   421d8:	add	r1, r3, fp
   421dc:	bne	421cc <WriteCompressedType+0x434>
   421e0:	str	r2, [sp, #12]
   421e4:	ldr	r0, [sp, #12]
   421e8:	mov	r2, #1
   421ec:	mov	ip, #5
   421f0:	movt	ip, #4
   421f4:	mov	r1, r2
   421f8:	mov	r7, #0
   421fc:	mov	r9, #2048	; 0x800
   42200:	str	ip, [sl]
   42204:	stmib	sl, {r0, r2, r3}
   42208:	ldr	r3, [r8, #40]	; 0x28
   4220c:	str	r3, [sp, #36]	; 0x24
   42210:	bl	140c <calloc@plt>
   42214:	mov	r3, #16
   42218:	str	sl, [r4]
   4221c:	str	r0, [sp, #28]
   42220:	str	r3, [r4, #4]
   42224:	mov	r1, #0
   42228:	mov	r0, r4
   4222c:	str	r6, [r4, #12]
   42230:	str	r9, [r4, #16]
   42234:	bl	14fc <deflate@plt>
   42238:	ldr	r2, [r4, #16]
   4223c:	mov	r1, #1
   42240:	mov	r0, r6
   42244:	ldr	r3, [r5]
   42248:	rsb	r2, r2, #2048	; 0x800
   4224c:	bl	1514 <fwrite@plt>
   42250:	ldr	r3, [r4, #16]
   42254:	add	r7, r7, r0
   42258:	cmp	r3, #0
   4225c:	beq	42224 <WriteCompressedType+0x48c>
   42260:	mov	r3, #0
   42264:	mov	r9, #2048	; 0x800
   42268:	str	fp, [sp, #20]
   4226c:	str	sl, [sp, #32]
   42270:	ldr	sl, [sp, #28]
   42274:	str	r8, [sp, #24]
   42278:	mov	r8, r3
   4227c:	ldr	r3, [sp, #24]
   42280:	ldr	fp, [r3, #52]	; 0x34
   42284:	ldr	r3, [fp, #8]
   42288:	ldr	r0, [r3, r8, lsl #2]
   4228c:	bl	15c8 <strlen@plt>
   42290:	mov	r3, r0
   42294:	mov	r1, #0
   42298:	ldr	r2, [sp, #12]
   4229c:	mov	r0, sl
   422a0:	str	r3, [sp, #16]
   422a4:	bl	15f8 <memset@plt>
   422a8:	ldr	r1, [fp, #8]
   422ac:	mov	r0, sl
   422b0:	ldr	r3, [sp, #16]
   422b4:	ldr	r1, [r1, r8, lsl #2]
   422b8:	mov	r2, r3
   422bc:	bl	1490 <memcpy@plt>
   422c0:	ldr	r3, [sp, #12]
   422c4:	str	sl, [r4]
   422c8:	str	r3, [r4, #4]
   422cc:	mov	r1, #0
   422d0:	mov	r0, r4
   422d4:	str	r6, [r4, #12]
   422d8:	str	r9, [r4, #16]
   422dc:	bl	14fc <deflate@plt>
   422e0:	ldr	r2, [r4, #16]
   422e4:	mov	r1, #1
   422e8:	mov	r0, r6
   422ec:	ldr	r3, [r5]
   422f0:	rsb	r2, r2, #2048	; 0x800
   422f4:	bl	1514 <fwrite@plt>
   422f8:	ldr	r3, [r4, #16]
   422fc:	add	r7, r7, r0
   42300:	cmp	r3, #0
   42304:	beq	422cc <WriteCompressedType+0x534>
   42308:	ldr	r3, [sp, #20]
   4230c:	add	r8, r8, #1
   42310:	cmp	r3, r8
   42314:	bne	4227c <WriteCompressedType+0x4e4>
   42318:	mov	fp, r3
   4231c:	ldr	r0, [sp, #28]
   42320:	ldr	sl, [sp, #32]
   42324:	bl	1478 <free@plt>
   42328:	mov	r2, fp
   4232c:	sub	r0, r6, #4
   42330:	ldr	r1, [sl, #-2056]	; 0xfffff7f8
   42334:	bl	499ec <SafeMul>
   42338:	ldr	r3, [sl, #-2052]	; 0xfffff7fc
   4233c:	cmp	r3, #0
   42340:	beq	42848 <WriteCompressedType+0xab0>
   42344:	ldr	r2, [sp, #36]	; 0x24
   42348:	mov	r3, #0
   4234c:	add	r1, sp, #4096	; 0x1000
   42350:	add	r6, sp, #8192	; 0x2000
   42354:	add	r1, r1, #48	; 0x30
   42358:	str	r7, [sp, #12]
   4235c:	add	r6, r6, #48	; 0x30
   42360:	mov	r8, #2048	; 0x800
   42364:	mov	fp, r3
   42368:	str	sl, [sp, #24]
   4236c:	str	r1, [sp, #20]
   42370:	sub	r2, r2, #4
   42374:	str	r2, [sp, #16]
   42378:	add	r2, sp, #6144	; 0x1800
   4237c:	add	r2, r2, #48	; 0x30
   42380:	mov	sl, r2
   42384:	ldr	r3, [sp, #16]
   42388:	mov	r2, #2048	; 0x800
   4238c:	mov	r1, #0
   42390:	ldr	r0, [sp, #20]
   42394:	ldr	r9, [r3, #4]!
   42398:	str	r3, [sp, #16]
   4239c:	bl	15f8 <memset@plt>
   423a0:	cmp	r9, #0
   423a4:	beq	42670 <WriteCompressedType+0x8d8>
   423a8:	ldr	r3, [r9, #16]
   423ac:	mov	r2, #14
   423b0:	str	r2, [sl, #-2048]	; 0xfffff800
   423b4:	cmp	r3, #0
   423b8:	bne	42640 <WriteCompressedType+0x8a8>
   423bc:	ldr	r2, [sp, #20]
   423c0:	mov	r3, #8
   423c4:	mov	r7, #0
   423c8:	strd	r2, [r4]
   423cc:	mov	r1, #0
   423d0:	mov	r0, r4
   423d4:	str	r6, [r4, #12]
   423d8:	str	r8, [r4, #16]
   423dc:	bl	14fc <deflate@plt>
   423e0:	ldr	r2, [r4, #16]
   423e4:	mov	r1, #1
   423e8:	mov	r0, r6
   423ec:	ldr	r3, [r5]
   423f0:	rsb	r2, r2, #2048	; 0x800
   423f4:	bl	1514 <fwrite@plt>
   423f8:	ldr	r3, [r4, #16]
   423fc:	add	r7, r7, r0
   42400:	cmp	r3, #0
   42404:	beq	423cc <WriteCompressedType+0x634>
   42408:	mov	r1, r9
   4240c:	mov	r2, r4
   42410:	mov	r0, r5
   42414:	bl	42854 <WriteCompressedTypeArrayFlags>
   42418:	add	r0, r7, r0
   4241c:	ldr	r2, [sp, #12]
   42420:	add	fp, fp, #1
   42424:	ldr	r3, [sp, #24]
   42428:	add	r2, r2, r0
   4242c:	ldr	r3, [r3, #-2052]	; 0xfffff7fc
   42430:	str	r2, [sp, #12]
   42434:	cmp	r3, fp
   42438:	bhi	42384 <WriteCompressedType+0x5ec>
   4243c:	mov	fp, r2
   42440:	b	41dec <WriteCompressedType+0x54>
   42444:	ldr	ip, [r8, #8]
   42448:	mov	r1, r4
   4244c:	mov	r0, r5
   42450:	ldr	r3, [r6, #20]
   42454:	ldr	r2, [r6, #24]
   42458:	str	ip, [sp]
   4245c:	bl	40688 <WriteCompressedData>
   42460:	add	fp, r7, r0
   42464:	b	41dec <WriteCompressedType+0x54>
   42468:	mov	r0, fp
   4246c:	add	r6, sp, #8192	; 0x2000
   42470:	bl	1598 <Mat_SizeOf@plt>
   42474:	add	r2, sp, #4096	; 0x1000
   42478:	mul	r3, r0, r9
   4247c:	cmp	fp, #2
   42480:	add	r2, r2, #48	; 0x30
   42484:	moveq	fp, #16
   42488:	mov	r1, #8
   4248c:	mov	r7, #0
   42490:	str	r2, [r4]
   42494:	add	r6, r6, #48	; 0x30
   42498:	mov	r8, #1024	; 0x400
   4249c:	ldr	r2, [sp, #12]
   424a0:	str	r1, [r4, #4]
   424a4:	str	r3, [sp, #16]
   424a8:	str	fp, [r2, #-2048]	; 0xfffff800
   424ac:	str	r3, [r2, #-2044]	; 0xfffff804
   424b0:	mov	r1, #0
   424b4:	mov	r0, r4
   424b8:	str	r6, [r4, #12]
   424bc:	str	r8, [r4, #16]
   424c0:	bl	14fc <deflate@plt>
   424c4:	ldr	r2, [r4, #16]
   424c8:	mov	r1, #1
   424cc:	mov	r0, r6
   424d0:	ldr	r3, [r5]
   424d4:	rsb	r2, r2, #1024	; 0x400
   424d8:	bl	1514 <fwrite@plt>
   424dc:	ldr	r3, [r4, #16]
   424e0:	add	r7, r7, r0
   424e4:	mov	fp, r7
   424e8:	cmp	r3, #0
   424ec:	beq	424b0 <WriteCompressedType+0x718>
   424f0:	cmp	sl, #0
   424f4:	cmpne	r9, #0
   424f8:	ble	41dec <WriteCompressedType+0x54>
   424fc:	ldr	r3, [sp, #16]
   42500:	mov	r8, #1024	; 0x400
   42504:	str	sl, [r4]
   42508:	str	r3, [r4, #4]
   4250c:	mov	r1, #0
   42510:	mov	r0, r4
   42514:	str	r6, [r4, #12]
   42518:	str	r8, [r4, #16]
   4251c:	bl	14fc <deflate@plt>
   42520:	ldr	r2, [r4, #16]
   42524:	mov	r1, #1
   42528:	mov	r0, r6
   4252c:	ldr	r3, [r5]
   42530:	rsb	r2, r2, #1024	; 0x400
   42534:	bl	1514 <fwrite@plt>
   42538:	ldr	r3, [r4, #16]
   4253c:	add	r7, r7, r0
   42540:	mov	fp, r7
   42544:	cmp	r3, #0
   42548:	beq	4250c <WriteCompressedType+0x774>
   4254c:	ldr	r3, [sp, #16]
   42550:	ands	r2, r3, #7
   42554:	beq	41dec <WriteCompressedType+0x54>
   42558:	rsbs	r3, r3, #0
   4255c:	ldr	r1, [sp, #12]
   42560:	mov	r8, #1024	; 0x400
   42564:	and	r3, r3, #7
   42568:	rsbpl	r2, r3, #0
   4256c:	rsb	r3, r2, #8
   42570:	stm	r4, {r1, r3}
   42574:	mov	r1, #0
   42578:	mov	r0, r4
   4257c:	str	r6, [r4, #12]
   42580:	str	r8, [r4, #16]
   42584:	bl	14fc <deflate@plt>
   42588:	ldr	r2, [r4, #16]
   4258c:	mov	r1, #1
   42590:	mov	r0, r6
   42594:	ldr	r3, [r5]
   42598:	rsb	r2, r2, #1024	; 0x400
   4259c:	bl	1514 <fwrite@plt>
   425a0:	ldr	r3, [r4, #16]
   425a4:	add	r7, r7, r0
   425a8:	mov	fp, r7
   425ac:	cmp	r3, #0
   425b0:	beq	42574 <WriteCompressedType+0x7dc>
   425b4:	b	41dec <WriteCompressedType+0x54>
   425b8:	ldr	r1, [sp, #12]
   425bc:	mov	r3, #4
   425c0:	lsl	r9, r9, #1
   425c4:	add	r6, sp, #8192	; 0x2000
   425c8:	mov	r2, #8
   425cc:	mov	r7, #0
   425d0:	add	r6, r6, #48	; 0x30
   425d4:	mov	r8, #1024	; 0x400
   425d8:	str	r2, [r4, #4]
   425dc:	str	r3, [r1, #-2048]	; 0xfffff800
   425e0:	add	r3, sp, #4096	; 0x1000
   425e4:	add	r3, r3, #48	; 0x30
   425e8:	str	r9, [r1, #-2044]	; 0xfffff804
   425ec:	str	r3, [r4]
   425f0:	mov	r1, #0
   425f4:	mov	r0, r4
   425f8:	str	r6, [r4, #12]
   425fc:	str	r8, [r4, #16]
   42600:	bl	14fc <deflate@plt>
   42604:	ldr	r2, [r4, #16]
   42608:	mov	r1, #1
   4260c:	mov	r0, r6
   42610:	ldr	r3, [r5]
   42614:	rsb	r2, r2, #1024	; 0x400
   42618:	bl	1514 <fwrite@plt>
   4261c:	ldr	r3, [r4, #16]
   42620:	add	r7, r7, r0
   42624:	mov	fp, r7
   42628:	cmp	r3, #0
   4262c:	beq	425f0 <WriteCompressedType+0x858>
   42630:	b	41dec <WriteCompressedType+0x54>
   42634:	ldr	r6, [pc, #532]	; 42850 <WriteCompressedType+0xab8>
   42638:	add	r6, pc, r6
   4263c:	b	42140 <WriteCompressedType+0x3a8>
   42640:	mov	r0, r9
   42644:	bl	41ac4 <GetTypeBufSize>
   42648:	add	r0, r0, #24
   4264c:	str	r0, [sl, #-2044]	; 0xfffff804
   42650:	b	423bc <WriteCompressedType+0x624>
   42654:	mov	r2, r6
   42658:	mov	r1, r4
   4265c:	str	ip, [sp]
   42660:	mov	r0, r5
   42664:	bl	40688 <WriteCompressedData>
   42668:	mov	fp, r0
   4266c:	b	41dec <WriteCompressedType+0x54>
   42670:	mov	r2, #2048	; 0x800
   42674:	mov	r1, r9
   42678:	mov	r0, r6
   4267c:	mov	r7, r9
   42680:	bl	15f8 <memset@plt>
   42684:	add	r1, sp, #8192	; 0x2000
   42688:	mov	r0, #14
   4268c:	str	r6, [r4]
   42690:	add	r1, r1, #48	; 0x30
   42694:	mov	r2, #48	; 0x30
   42698:	str	r0, [r1]
   4269c:	add	r1, sp, #8192	; 0x2000
   426a0:	mov	r3, #8
   426a4:	add	r1, r1, #52	; 0x34
   426a8:	str	r2, [r1]
   426ac:	str	r3, [r4, #4]
   426b0:	mov	r1, #0
   426b4:	mov	r0, r4
   426b8:	str	sl, [r4, #12]
   426bc:	str	r8, [r4, #16]
   426c0:	bl	14fc <deflate@plt>
   426c4:	ldr	r2, [r4, #16]
   426c8:	mov	r1, #1
   426cc:	mov	r0, sl
   426d0:	ldr	r3, [r5]
   426d4:	rsb	r2, r2, #2048	; 0x800
   426d8:	bl	1514 <fwrite@plt>
   426dc:	ldr	r3, [r4, #16]
   426e0:	add	r7, r7, r0
   426e4:	cmp	r3, #0
   426e8:	beq	426b0 <WriteCompressedType+0x918>
   426ec:	add	lr, sp, #8192	; 0x2000
   426f0:	mov	r2, #6
   426f4:	str	r6, [r4]
   426f8:	add	lr, lr, #48	; 0x30
   426fc:	mov	r3, #8
   42700:	str	r2, [lr]
   42704:	add	lr, sp, #8192	; 0x2000
   42708:	add	r1, sp, #8192	; 0x2000
   4270c:	add	lr, lr, #52	; 0x34
   42710:	mov	r0, #5
   42714:	str	r3, [lr]
   42718:	add	lr, sp, #8192	; 0x2000
   4271c:	mov	ip, #0
   42720:	add	lr, lr, #56	; 0x38
   42724:	add	r1, r1, #60	; 0x3c
   42728:	str	r2, [lr]
   4272c:	add	r2, sp, #8256	; 0x2040
   42730:	str	ip, [r1]
   42734:	add	r1, sp, #8256	; 0x2040
   42738:	str	r0, [r2]
   4273c:	add	r2, sp, #8256	; 0x2040
   42740:	add	r1, r1, #8
   42744:	add	r2, r2, #4
   42748:	str	ip, [r1]
   4274c:	mov	r1, #32
   42750:	str	r3, [r2]
   42754:	add	r3, sp, #8256	; 0x2040
   42758:	add	r3, r3, #12
   4275c:	str	r1, [r4, #4]
   42760:	str	ip, [r3]
   42764:	mov	r1, #0
   42768:	mov	r0, r4
   4276c:	str	sl, [r4, #12]
   42770:	str	r8, [r4, #16]
   42774:	bl	14fc <deflate@plt>
   42778:	ldr	r2, [r4, #16]
   4277c:	mov	r1, #1
   42780:	mov	r0, sl
   42784:	ldr	r3, [r5]
   42788:	rsb	r2, r2, #2048	; 0x800
   4278c:	bl	1514 <fwrite@plt>
   42790:	ldr	r3, [r4, #16]
   42794:	add	r7, r7, r0
   42798:	cmp	r3, #0
   4279c:	beq	42764 <WriteCompressedType+0x9cc>
   427a0:	add	r1, sp, #8192	; 0x2000
   427a4:	mov	r0, #0
   427a8:	str	r6, [r4]
   427ac:	add	r1, r1, #52	; 0x34
   427b0:	mov	r2, #1
   427b4:	str	r0, [r1]
   427b8:	add	r1, sp, #8192	; 0x2000
   427bc:	mov	r3, #8
   427c0:	add	r1, r1, #48	; 0x30
   427c4:	str	r2, [r1]
   427c8:	str	r3, [r4, #4]
   427cc:	mov	r1, #0
   427d0:	mov	r0, r4
   427d4:	str	sl, [r4, #12]
   427d8:	str	r8, [r4, #16]
   427dc:	bl	14fc <deflate@plt>
   427e0:	ldr	r2, [r4, #16]
   427e4:	mov	r1, #1
   427e8:	mov	r0, sl
   427ec:	ldr	r3, [r5]
   427f0:	rsb	r2, r2, #2048	; 0x800
   427f4:	bl	1514 <fwrite@plt>
   427f8:	ldr	r3, [r4, #16]
   427fc:	add	r7, r7, r0
   42800:	cmp	r3, #0
   42804:	beq	427cc <WriteCompressedType+0xa34>
   42808:	mov	r0, #9
   4280c:	mov	r3, #0
   42810:	mov	r2, r3
   42814:	mov	r1, r4
   42818:	str	r0, [sp]
   4281c:	mov	r0, r5
   42820:	bl	40688 <WriteCompressedData>
   42824:	add	r0, r7, r0
   42828:	b	4241c <WriteCompressedType+0x684>
   4282c:	mov	r0, fp
   42830:	bl	41ac4 <GetTypeBufSize>
   42834:	add	r3, sp, #8192	; 0x2000
   42838:	add	r0, r0, #24
   4283c:	add	r3, r3, #52	; 0x34
   42840:	str	r0, [r3]
   42844:	b	420b0 <WriteCompressedType+0x318>
   42848:	mov	fp, r7
   4284c:	b	41dec <WriteCompressedType+0x54>
   42850:	.word	0x0001db94

00042854 <WriteCompressedTypeArrayFlags>:
   42854:	strd	r4, [sp, #-32]!	; 0xffffffe0
   42858:	mov	r4, r2
   4285c:	mov	r2, #2048	; 0x800
   42860:	strd	r6, [sp, #8]
   42864:	mov	r7, r0
   42868:	strd	r8, [sp, #16]
   4286c:	mov	r8, r1
   42870:	mov	r1, #0
   42874:	str	sl, [sp, #24]
   42878:	str	lr, [sp, #28]
   4287c:	sub	sp, sp, #4096	; 0x1000
   42880:	add	r9, sp, #2048	; 0x800
   42884:	mov	r0, r9
   42888:	bl	15f8 <memset@plt>
   4288c:	ldr	r0, [r8, #16]
   42890:	cmp	r0, #0
   42894:	beq	42a14 <WriteCompressedTypeArrayFlags+0x1c0>
   42898:	uxtb	r2, r0
   4289c:	ldr	ip, [r8, #4]
   428a0:	mov	r1, #8
   428a4:	ldr	r3, [r8, #20]
   428a8:	cmp	r3, #0
   428ac:	ldr	r3, [r8, #24]
   428b0:	orrne	r2, r2, #2048	; 0x800
   428b4:	cmp	r3, #0
   428b8:	ldr	r3, [r8, #28]
   428bc:	orrne	r2, r2, #1024	; 0x400
   428c0:	cmp	r3, #0
   428c4:	orrne	r2, r2, #512	; 0x200
   428c8:	cmp	r0, #5
   428cc:	ldreq	r3, [r8, #40]	; 0x28
   428d0:	movne	r0, #0
   428d4:	ldreq	r0, [r3]
   428d8:	mov	r3, #6
   428dc:	cmp	ip, #0
   428e0:	str	r2, [sp, #2056]	; 0x808
   428e4:	mov	r2, #5
   428e8:	str	r3, [sp, #2048]	; 0x800
   428ec:	str	r1, [sp, #2052]	; 0x804
   428f0:	str	r0, [sp, #2060]	; 0x80c
   428f4:	lsl	r0, ip, #2
   428f8:	str	r2, [sp, #2064]	; 0x810
   428fc:	str	r0, [sp, #2068]	; 0x814
   42900:	ble	42a58 <WriteCompressedTypeArrayFlags+0x204>
   42904:	ldr	r3, [r8, #32]
   42908:	add	r2, r9, #20
   4290c:	add	r0, r0, r3
   42910:	ldr	r1, [r3], #4
   42914:	cmp	r0, r3
   42918:	str	r1, [r2, #4]!
   4291c:	bne	42910 <WriteCompressedTypeArrayFlags+0xbc>
   42920:	add	r3, ip, #6
   42924:	mov	r2, ip
   42928:	tst	ip, #1
   4292c:	bne	42a30 <WriteCompressedTypeArrayFlags+0x1dc>
   42930:	lsl	r3, r3, #2
   42934:	mov	r5, #0
   42938:	mov	r6, sp
   4293c:	mov	sl, #2048	; 0x800
   42940:	str	r9, [r4]
   42944:	str	r3, [r4, #4]
   42948:	mov	r1, #0
   4294c:	mov	r0, r4
   42950:	str	r6, [r4, #12]
   42954:	str	sl, [r4, #16]
   42958:	bl	14fc <deflate@plt>
   4295c:	ldr	r2, [r4, #16]
   42960:	mov	r1, #1
   42964:	mov	r0, r6
   42968:	ldr	r3, [r7]
   4296c:	rsb	r2, r2, #2048	; 0x800
   42970:	bl	1514 <fwrite@plt>
   42974:	ldr	r3, [r4, #16]
   42978:	add	r5, r5, r0
   4297c:	cmp	r3, #0
   42980:	beq	42948 <WriteCompressedTypeArrayFlags+0xf4>
   42984:	mov	r1, #1
   42988:	mov	r2, #0
   4298c:	str	r9, [r4]
   42990:	mov	r3, #8
   42994:	mov	r9, #2048	; 0x800
   42998:	str	r1, [sp, #2048]	; 0x800
   4299c:	str	r3, [r4, #4]
   429a0:	str	r2, [sp, #2052]	; 0x804
   429a4:	mov	r1, #0
   429a8:	mov	r0, r4
   429ac:	str	r6, [r4, #12]
   429b0:	str	r9, [r4, #16]
   429b4:	bl	14fc <deflate@plt>
   429b8:	ldr	r2, [r4, #16]
   429bc:	mov	r1, #1
   429c0:	mov	r0, r6
   429c4:	ldr	r3, [r7]
   429c8:	rsb	r2, r2, #2048	; 0x800
   429cc:	bl	1514 <fwrite@plt>
   429d0:	ldr	r3, [r4, #16]
   429d4:	add	r5, r5, r0
   429d8:	cmp	r3, #0
   429dc:	beq	429a4 <WriteCompressedTypeArrayFlags+0x150>
   429e0:	ldr	r0, [r7]
   429e4:	ldr	r6, [r8, #52]	; 0x34
   429e8:	bl	14b4 <ftell@plt>
   429ec:	ldr	r3, [r8, #52]	; 0x34
   429f0:	str	r0, [r6]
   429f4:	ldr	r3, [r3]
   429f8:	cmn	r3, #1
   429fc:	beq	42a48 <WriteCompressedTypeArrayFlags+0x1f4>
   42a00:	mov	r2, r4
   42a04:	mov	r1, r8
   42a08:	mov	r0, r7
   42a0c:	bl	41d98 <WriteCompressedType>
   42a10:	add	r0, r5, r0
   42a14:	add	sp, sp, #4096	; 0x1000
   42a18:	ldrd	r4, [sp]
   42a1c:	ldrd	r6, [sp, #8]
   42a20:	ldrd	r8, [sp, #16]
   42a24:	ldr	sl, [sp, #24]
   42a28:	add	sp, sp, #28
   42a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   42a30:	add	r1, sp, #4096	; 0x1000
   42a34:	mov	r0, #0
   42a38:	add	r1, r1, r3, lsl #2
   42a3c:	add	r3, r2, #7
   42a40:	str	r0, [r1, #-2048]	; 0xfffff800
   42a44:	b	42930 <WriteCompressedTypeArrayFlags+0xdc>
   42a48:	ldr	r0, [pc, #16]	; 42a60 <WriteCompressedTypeArrayFlags+0x20c>
   42a4c:	add	r0, pc, r0
   42a50:	bl	161c <Mat_Critical@plt>
   42a54:	b	42a00 <WriteCompressedTypeArrayFlags+0x1ac>
   42a58:	mov	r2, #0
   42a5c:	b	42928 <WriteCompressedTypeArrayFlags+0xd4>
   42a60:	.word	0x0000bdac

00042a64 <Mat_Create5>:
   42a64:	strd	r4, [sp, #-36]!	; 0xffffffdc
   42a68:	mov	r5, #0
   42a6c:	strd	r6, [sp, #8]
   42a70:	mov	r7, r1
   42a74:	ldr	r1, [pc, #480]	; 42c5c <Mat_Create5+0x1f8>
   42a78:	strd	r8, [sp, #16]
   42a7c:	strd	sl, [sp, #24]
   42a80:	mov	fp, r0
   42a84:	str	lr, [sp, #32]
   42a88:	sub	sp, sp, #28
   42a8c:	add	r1, pc, r1
   42a90:	strh	r5, [sp, #16]
   42a94:	bl	1454 <fopen@plt>
   42a98:	subs	r9, r0, #0
   42a9c:	moveq	r4, r9
   42aa0:	beq	42be0 <Mat_Create5+0x17c>
   42aa4:	mov	r0, #44	; 0x2c
   42aa8:	bl	1544 <malloc@plt>
   42aac:	subs	r4, r0, #0
   42ab0:	beq	42c50 <Mat_Create5+0x1ec>
   42ab4:	ldr	r8, [pc, #420]	; 42c60 <Mat_Create5+0x1fc>
   42ab8:	mov	r6, #128	; 0x80
   42abc:	mov	r0, r5
   42ac0:	str	r5, [r4]
   42ac4:	mov	sl, #1
   42ac8:	str	r5, [r4, #4]
   42acc:	str	r5, [r4, #8]
   42ad0:	str	r5, [r4, #12]
   42ad4:	str	r5, [r4, #16]
   42ad8:	add	r8, pc, r8
   42adc:	str	r5, [r4, #20]
   42ae0:	str	r5, [r4, #24]
   42ae4:	str	r6, [r4, #28]
   42ae8:	str	r5, [r4, #32]
   42aec:	str	r5, [r4, #36]	; 0x24
   42af0:	str	r5, [r4, #40]	; 0x28
   42af4:	bl	14a8 <time@plt>
   42af8:	mov	r1, fp
   42afc:	str	r9, [r4]
   42b00:	str	r0, [sp, #20]
   42b04:	mov	r0, r8
   42b08:	bl	1cbc <strdup_printf>
   42b0c:	str	r0, [r4, #12]
   42b10:	mov	r0, r6
   42b14:	str	r5, [r4, #20]
   42b18:	str	sl, [r4, #24]
   42b1c:	bl	1544 <malloc@plt>
   42b20:	mov	r5, r0
   42b24:	mov	r0, #8
   42b28:	str	r5, [r4, #4]
   42b2c:	bl	1544 <malloc@plt>
   42b30:	mov	r2, r6
   42b34:	mov	r1, #32
   42b38:	str	r0, [r4, #8]
   42b3c:	mov	r0, r5
   42b40:	bl	15f8 <memset@plt>
   42b44:	cmp	r7, #0
   42b48:	beq	42c10 <Mat_Create5+0x1ac>
   42b4c:	mov	r3, r7
   42b50:	mov	r2, r8
   42b54:	mov	r0, r5
   42b58:	mov	r1, #116	; 0x74
   42b5c:	bl	15e0 <snprintf@plt>
   42b60:	cmp	r0, #115	; 0x73
   42b64:	bhi	42c00 <Mat_Create5+0x19c>
   42b68:	ldr	r0, [r4, #8]
   42b6c:	mov	ip, #256	; 0x100
   42b70:	movw	r3, #8224	; 0x2020
   42b74:	movt	r3, #8224	; 0x2020
   42b78:	movw	lr, #19785	; 0x4d49
   42b7c:	mov	r2, #116	; 0x74
   42b80:	mov	r1, #1
   42b84:	str	r3, [r0]
   42b88:	str	r3, [r0, #4]
   42b8c:	str	ip, [r4, #16]
   42b90:	ldr	r3, [r4]
   42b94:	strh	lr, [sp, #16]
   42b98:	ldr	r0, [r4, #4]
   42b9c:	strh	ip, [sp, #18]
   42ba0:	bl	1514 <fwrite@plt>
   42ba4:	mov	r2, #8
   42ba8:	mov	r1, #1
   42bac:	ldr	r3, [r4]
   42bb0:	ldr	r0, [r4, #8]
   42bb4:	bl	1514 <fwrite@plt>
   42bb8:	mov	r2, #1
   42bbc:	mov	r1, #2
   42bc0:	ldr	r3, [r4]
   42bc4:	add	r0, sp, #18
   42bc8:	bl	1514 <fwrite@plt>
   42bcc:	mov	r2, #1
   42bd0:	mov	r1, #2
   42bd4:	ldr	r3, [r4]
   42bd8:	add	r0, sp, #16
   42bdc:	bl	1514 <fwrite@plt>
   42be0:	mov	r0, r4
   42be4:	add	sp, sp, #28
   42be8:	ldrd	r4, [sp]
   42bec:	ldrd	r6, [sp, #8]
   42bf0:	ldrd	r8, [sp, #16]
   42bf4:	ldrd	sl, [sp, #24]
   42bf8:	add	sp, sp, #32
   42bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   42c00:	ldr	r3, [r4, #4]
   42c04:	mov	r2, #0
   42c08:	strb	r2, [r3, #115]	; 0x73
   42c0c:	b	42b68 <Mat_Create5+0x104>
   42c10:	add	r0, sp, #20
   42c14:	bl	14c0 <ctime@plt>
   42c18:	mov	r2, #15
   42c1c:	mov	r3, #5
   42c20:	str	sl, [sp]
   42c24:	mov	r1, #116	; 0x74
   42c28:	str	r3, [sp, #4]
   42c2c:	ldr	r3, [pc, #48]	; 42c64 <Mat_Create5+0x200>
   42c30:	str	r2, [sp, #8]
   42c34:	ldr	r2, [pc, #44]	; 42c68 <Mat_Create5+0x204>
   42c38:	str	r0, [sp, #12]
   42c3c:	mov	r0, r5
   42c40:	add	r3, pc, r3
   42c44:	add	r2, pc, r2
   42c48:	bl	15e0 <snprintf@plt>
   42c4c:	b	42b60 <Mat_Create5+0xfc>
   42c50:	mov	r0, r9
   42c54:	bl	1634 <fclose@plt>
   42c58:	b	42be0 <Mat_Create5+0x17c>
   42c5c:	.word	0x0000bdbc
   42c60:	.word	0x0000c558
   42c64:	.word	0x0000bc0c
   42c68:	.word	0x0000bc28

00042c6c <Mat_VarRead5>:
   42c6c:	mov	r3, #1
   42c70:	strd	r4, [sp, #-36]!	; 0xffffffdc
   42c74:	subs	r4, r1, #0
   42c78:	strd	r6, [sp, #8]
   42c7c:	strd	r8, [sp, #16]
   42c80:	strd	sl, [sp, #24]
   42c84:	str	lr, [sp, #32]
   42c88:	sub	sp, sp, #44	; 0x2c
   42c8c:	str	r3, [sp, #24]
   42c90:	beq	42cbc <Mat_VarRead5+0x50>
   42c94:	ldr	r3, [r4, #4]
   42c98:	cmp	r3, #0
   42c9c:	beq	42cbc <Mat_VarRead5+0x50>
   42ca0:	ldr	r3, [r4, #52]	; 0x34
   42ca4:	ldr	r2, [r3, #16]
   42ca8:	cmp	r2, #0
   42cac:	beq	42cd8 <Mat_VarRead5+0x6c>
   42cb0:	mov	r0, #0
   42cb4:	str	r2, [r4, #40]	; 0x28
   42cb8:	str	r0, [r3, #16]
   42cbc:	add	sp, sp, #44	; 0x2c
   42cc0:	ldrd	r4, [sp]
   42cc4:	ldrd	r6, [sp, #8]
   42cc8:	ldrd	r8, [sp, #16]
   42ccc:	ldrd	sl, [sp, #24]
   42cd0:	add	sp, sp, #32
   42cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   42cd8:	mov	r5, r0
   42cdc:	ldr	r0, [r0]
   42ce0:	bl	14b4 <ftell@plt>
   42ce4:	cmn	r0, #1
   42ce8:	mov	r6, r0
   42cec:	beq	4344c <Mat_VarRead5+0x7e0>
   42cf0:	add	r1, sp, #24
   42cf4:	mov	r0, r4
   42cf8:	bl	4996c <SafeMulDims>
   42cfc:	subs	r7, r0, #0
   42d00:	bne	4345c <Mat_VarRead5+0x7f0>
   42d04:	ldr	r1, [r4, #16]
   42d08:	ldr	r9, [r5, #20]
   42d0c:	mov	r3, r1
   42d10:	cmp	r1, #16
   42d14:	addls	pc, pc, r1, lsl #2
   42d18:	b	43438 <Mat_VarRead5+0x7cc>
   42d1c:	b	433b4 <Mat_VarRead5+0x748>
   42d20:	b	433e4 <Mat_VarRead5+0x778>
   42d24:	b	43334 <Mat_VarRead5+0x6c8>
   42d28:	b	43438 <Mat_VarRead5+0x7cc>
   42d2c:	b	43280 <Mat_VarRead5+0x614>
   42d30:	b	42fec <Mat_VarRead5+0x380>
   42d34:	b	42fc0 <Mat_VarRead5+0x354>
   42d38:	b	42f94 <Mat_VarRead5+0x328>
   42d3c:	b	42f6c <Mat_VarRead5+0x300>
   42d40:	b	42f40 <Mat_VarRead5+0x2d4>
   42d44:	b	42f14 <Mat_VarRead5+0x2a8>
   42d48:	b	42ee8 <Mat_VarRead5+0x27c>
   42d4c:	b	42ebc <Mat_VarRead5+0x250>
   42d50:	b	42e90 <Mat_VarRead5+0x224>
   42d54:	b	42e64 <Mat_VarRead5+0x1f8>
   42d58:	b	42dc4 <Mat_VarRead5+0x158>
   42d5c:	b	42d60 <Mat_VarRead5+0xf4>
   42d60:	ldr	r3, [r4]
   42d64:	cmp	r3, #0
   42d68:	beq	42e50 <Mat_VarRead5+0x1e4>
   42d6c:	ldr	r7, [r4, #12]
   42d70:	cmp	r7, #0
   42d74:	beq	42e50 <Mat_VarRead5+0x1e4>
   42d78:	ldr	r9, [r4, #40]	; 0x28
   42d7c:	cmp	r9, #0
   42d80:	beq	42db4 <Mat_VarRead5+0x148>
   42d84:	cmp	r3, r7
   42d88:	bcc	42db4 <Mat_VarRead5+0x148>
   42d8c:	udiv	r7, r3, r7
   42d90:	sub	r9, r9, #4
   42d94:	mov	r8, #0
   42d98:	add	r8, r8, #1
   42d9c:	mov	r0, r5
   42da0:	ldr	r1, [r9, #4]!
   42da4:	bl	42c6c <Mat_VarRead5>
   42da8:	cmp	r7, r8
   42dac:	bhi	42d98 <Mat_VarRead5+0x12c>
   42db0:	ldr	r1, [r4, #16]
   42db4:	mov	r2, #24
   42db8:	mov	r3, r1
   42dbc:	str	r2, [r4, #8]
   42dc0:	b	42dec <Mat_VarRead5+0x180>
   42dc4:	ldr	r3, [r4, #52]	; 0x34
   42dc8:	mov	r2, #0
   42dcc:	ldr	r0, [r5]
   42dd0:	ldr	r1, [r3]
   42dd4:	bl	1694 <fseek@plt>
   42dd8:	ldr	r3, [r4, #16]
   42ddc:	mov	r2, #8
   42de0:	mov	r1, #13
   42de4:	str	r1, [r4, #8]
   42de8:	str	r2, [r4, #12]
   42dec:	sub	r3, r3, #6
   42df0:	cmp	r3, #9
   42df4:	bhi	42e50 <Mat_VarRead5+0x1e4>
   42df8:	ldr	r3, [r4, #20]
   42dfc:	cmp	r3, #0
   42e00:	beq	434a0 <Mat_VarRead5+0x834>
   42e04:	mov	r0, r4
   42e08:	ldr	r2, [r4, #12]
   42e0c:	ldr	r1, [sp, #24]
   42e10:	bl	499ec <SafeMul>
   42e14:	ldr	r0, [r4]
   42e18:	bl	498b8 <ComplexMalloc>
   42e1c:	subs	r7, r0, #0
   42e20:	beq	434dc <Mat_VarRead5+0x870>
   42e24:	mov	r1, r4
   42e28:	mov	r0, r5
   42e2c:	ldr	r2, [r7]
   42e30:	ldr	r3, [sp, #24]
   42e34:	bl	219b0 <Mat_VarReadNumeric5>
   42e38:	mov	r1, r4
   42e3c:	mov	r0, r5
   42e40:	ldr	r2, [r7, #4]
   42e44:	ldr	r3, [sp, #24]
   42e48:	bl	219b0 <Mat_VarReadNumeric5>
   42e4c:	str	r7, [r4, #40]	; 0x28
   42e50:	mov	r1, r6
   42e54:	mov	r2, #0
   42e58:	ldr	r0, [r5]
   42e5c:	bl	1694 <fseek@plt>
   42e60:	b	42cbc <Mat_VarRead5+0x50>
   42e64:	ldr	r3, [r4, #52]	; 0x34
   42e68:	mov	r2, #0
   42e6c:	ldr	r0, [r5]
   42e70:	ldr	r1, [r3]
   42e74:	bl	1694 <fseek@plt>
   42e78:	mov	r2, #8
   42e7c:	mov	r1, #12
   42e80:	ldr	r3, [r4, #16]
   42e84:	str	r1, [r4, #8]
   42e88:	str	r2, [r4, #12]
   42e8c:	b	42dec <Mat_VarRead5+0x180>
   42e90:	ldr	r3, [r4, #52]	; 0x34
   42e94:	mov	r2, #0
   42e98:	ldr	r0, [r5]
   42e9c:	ldr	r1, [r3]
   42ea0:	bl	1694 <fseek@plt>
   42ea4:	mov	r2, #4
   42ea8:	mov	r1, #6
   42eac:	ldr	r3, [r4, #16]
   42eb0:	str	r1, [r4, #8]
   42eb4:	str	r2, [r4, #12]
   42eb8:	b	42dec <Mat_VarRead5+0x180>
   42ebc:	ldr	r3, [r4, #52]	; 0x34
   42ec0:	mov	r2, #0
   42ec4:	ldr	r0, [r5]
   42ec8:	ldr	r1, [r3]
   42ecc:	bl	1694 <fseek@plt>
   42ed0:	mov	r2, #4
   42ed4:	mov	r1, #5
   42ed8:	ldr	r3, [r4, #16]
   42edc:	str	r1, [r4, #8]
   42ee0:	str	r2, [r4, #12]
   42ee4:	b	42dec <Mat_VarRead5+0x180>
   42ee8:	ldr	r3, [r4, #52]	; 0x34
   42eec:	mov	r2, #0
   42ef0:	ldr	r0, [r5]
   42ef4:	ldr	r1, [r3]
   42ef8:	bl	1694 <fseek@plt>
   42efc:	mov	r2, #2
   42f00:	mov	r1, #4
   42f04:	ldr	r3, [r4, #16]
   42f08:	str	r1, [r4, #8]
   42f0c:	str	r2, [r4, #12]
   42f10:	b	42dec <Mat_VarRead5+0x180>
   42f14:	ldr	r3, [r4, #52]	; 0x34
   42f18:	mov	r2, #0
   42f1c:	ldr	r0, [r5]
   42f20:	ldr	r1, [r3]
   42f24:	bl	1694 <fseek@plt>
   42f28:	mov	r2, #2
   42f2c:	mov	r1, #3
   42f30:	ldr	r3, [r4, #16]
   42f34:	str	r1, [r4, #8]
   42f38:	str	r2, [r4, #12]
   42f3c:	b	42dec <Mat_VarRead5+0x180>
   42f40:	ldr	r3, [r4, #52]	; 0x34
   42f44:	mov	r2, #0
   42f48:	ldr	r0, [r5]
   42f4c:	ldr	r1, [r3]
   42f50:	bl	1694 <fseek@plt>
   42f54:	mov	r2, #1
   42f58:	mov	r1, #2
   42f5c:	ldr	r3, [r4, #16]
   42f60:	str	r1, [r4, #8]
   42f64:	str	r2, [r4, #12]
   42f68:	b	42dec <Mat_VarRead5+0x180>
   42f6c:	ldr	r3, [r4, #52]	; 0x34
   42f70:	mov	r2, #0
   42f74:	ldr	r0, [r5]
   42f78:	ldr	r1, [r3]
   42f7c:	bl	1694 <fseek@plt>
   42f80:	mov	r2, #1
   42f84:	ldr	r3, [r4, #16]
   42f88:	str	r2, [r4, #8]
   42f8c:	str	r2, [r4, #12]
   42f90:	b	42dec <Mat_VarRead5+0x180>
   42f94:	ldr	r3, [r4, #52]	; 0x34
   42f98:	mov	r2, #0
   42f9c:	ldr	r0, [r5]
   42fa0:	ldr	r1, [r3]
   42fa4:	bl	1694 <fseek@plt>
   42fa8:	mov	r2, #4
   42fac:	mov	r1, #7
   42fb0:	ldr	r3, [r4, #16]
   42fb4:	str	r1, [r4, #8]
   42fb8:	str	r2, [r4, #12]
   42fbc:	b	42dec <Mat_VarRead5+0x180>
   42fc0:	ldr	r3, [r4, #52]	; 0x34
   42fc4:	mov	r2, #0
   42fc8:	ldr	r0, [r5]
   42fcc:	ldr	r1, [r3]
   42fd0:	bl	1694 <fseek@plt>
   42fd4:	mov	r2, #8
   42fd8:	mov	r1, #9
   42fdc:	ldr	r3, [r4, #16]
   42fe0:	str	r1, [r4, #8]
   42fe4:	str	r2, [r4, #12]
   42fe8:	b	42dec <Mat_VarRead5+0x180>
   42fec:	mov	r3, #28
   42ff0:	mov	r8, #0
   42ff4:	mov	r0, r3
   42ff8:	str	r3, [r4, #12]
   42ffc:	str	r8, [sp, #28]
   43000:	bl	1544 <malloc@plt>
   43004:	cmp	r0, r8
   43008:	mov	fp, r0
   4300c:	str	r0, [r4, #40]	; 0x28
   43010:	beq	43564 <Mat_VarRead5+0x8f8>
   43014:	ldr	r3, [r4]
   43018:	mov	r2, r8
   4301c:	ldr	r1, [r4, #52]	; 0x34
   43020:	ldr	r0, [r5]
   43024:	ldr	r1, [r1]
   43028:	str	r3, [fp]
   4302c:	bl	1694 <fseek@plt>
   43030:	ldr	r3, [r4, #48]	; 0x30
   43034:	cmp	r3, #1
   43038:	beq	43574 <Mat_VarRead5+0x908>
   4303c:	add	r3, sp, #32
   43040:	mov	r2, #1
   43044:	mov	r0, r3
   43048:	mov	r1, #4
   4304c:	ldr	r3, [r5]
   43050:	str	r0, [sp, #12]
   43054:	bl	1520 <fread@plt>
   43058:	ldr	r3, [r5, #20]
   4305c:	cmp	r3, #0
   43060:	bne	43734 <Mat_VarRead5+0xac8>
   43064:	ldr	r3, [sp, #32]
   43068:	lsr	sl, r3, #16
   4306c:	uxtb	r8, r3
   43070:	cmp	r8, #25
   43074:	lsl	sl, sl, #16
   43078:	movcs	r8, #0
   4307c:	cmp	sl, #0
   43080:	beq	43700 <Mat_VarRead5+0xa94>
   43084:	lsr	r3, r3, #16
   43088:	mov	r2, #1
   4308c:	str	r2, [sp, #8]
   43090:	str	r3, [sp, #28]
   43094:	add	sl, r3, #3
   43098:	cmp	r3, #0
   4309c:	movlt	r3, sl
   430a0:	asr	sl, r3, #2
   430a4:	lsl	r0, sl, #2
   430a8:	str	sl, [fp, #8]
   430ac:	bl	1544 <malloc@plt>
   430b0:	cmp	r0, #0
   430b4:	str	r0, [fp, #4]
   430b8:	beq	437ec <Mat_VarRead5+0xb80>
   430bc:	ldr	r3, [r4, #48]	; 0x30
   430c0:	cmp	r3, #0
   430c4:	beq	43638 <Mat_VarRead5+0x9cc>
   430c8:	cmp	r3, #1
   430cc:	movne	r8, #0
   430d0:	beq	4393c <Mat_VarRead5+0xcd0>
   430d4:	mov	r2, #1
   430d8:	mov	r1, #4
   430dc:	ldr	r3, [r5]
   430e0:	ldr	r0, [sp, #12]
   430e4:	bl	1520 <fread@plt>
   430e8:	ldr	r3, [r5, #20]
   430ec:	cmp	r3, #0
   430f0:	bne	43868 <Mat_VarRead5+0xbfc>
   430f4:	ldr	r3, [sp, #32]
   430f8:	lsr	sl, r3, #16
   430fc:	uxtb	r2, r3
   43100:	cmp	r2, #25
   43104:	lsl	sl, sl, #16
   43108:	movcs	r2, #0
   4310c:	cmp	sl, #0
   43110:	str	r2, [sp, #16]
   43114:	beq	43834 <Mat_VarRead5+0xbc8>
   43118:	lsr	r3, r3, #16
   4311c:	mov	r2, #1
   43120:	str	r2, [sp, #8]
   43124:	str	r3, [sp, #28]
   43128:	add	sl, r3, #3
   4312c:	cmp	r3, #0
   43130:	movlt	r3, sl
   43134:	asr	sl, r3, #2
   43138:	lsl	r0, sl, #2
   4313c:	str	sl, [fp, #16]
   43140:	bl	1544 <malloc@plt>
   43144:	cmp	r0, #0
   43148:	str	r0, [fp, #12]
   4314c:	beq	438e4 <Mat_VarRead5+0xc78>
   43150:	ldr	r3, [r4, #48]	; 0x30
   43154:	cmp	r3, #0
   43158:	beq	43740 <Mat_VarRead5+0xad4>
   4315c:	cmp	r3, #1
   43160:	beq	439a0 <Mat_VarRead5+0xd34>
   43164:	mov	r2, #1
   43168:	mov	r1, #4
   4316c:	ldr	r3, [r5]
   43170:	ldr	r0, [sp, #12]
   43174:	bl	1520 <fread@plt>
   43178:	ldr	r3, [r5, #20]
   4317c:	cmp	r3, #0
   43180:	bne	43930 <Mat_VarRead5+0xcc4>
   43184:	ldr	r3, [sp, #32]
   43188:	lsr	sl, r3, #16
   4318c:	uxtb	r2, r3
   43190:	cmp	r2, #25
   43194:	lsl	sl, sl, #16
   43198:	movcs	r2, #0
   4319c:	cmp	sl, #0
   431a0:	str	r2, [sp, #8]
   431a4:	beq	438f4 <Mat_VarRead5+0xc88>
   431a8:	lsr	r3, r3, #16
   431ac:	mov	r2, #1
   431b0:	str	r2, [sp, #20]
   431b4:	str	r3, [sp, #28]
   431b8:	ldr	r1, [sp, #8]
   431bc:	ldr	r2, [r4, #28]
   431c0:	sub	r3, r1, #9
   431c4:	clz	r3, r3
   431c8:	lsr	r3, r3, #5
   431cc:	cmp	r2, #0
   431d0:	moveq	r3, #0
   431d4:	cmp	r3, #0
   431d8:	moveq	r3, r1
   431dc:	movne	r3, #2
   431e0:	mov	r0, r3
   431e4:	str	r3, [r4, #8]
   431e8:	str	r3, [sp, #8]
   431ec:	bl	1598 <Mat_SizeOf@plt>
   431f0:	cmp	r0, #0
   431f4:	beq	43444 <Mat_VarRead5+0x7d8>
   431f8:	ldr	sl, [sp, #28]
   431fc:	ldr	r3, [r4, #20]
   43200:	udiv	sl, sl, r0
   43204:	ldr	r0, [r4, #8]
   43208:	cmp	r3, #0
   4320c:	str	sl, [fp, #20]
   43210:	beq	43874 <Mat_VarRead5+0xc08>
   43214:	bl	1598 <Mat_SizeOf@plt>
   43218:	mul	r0, r0, sl
   4321c:	bl	498b8 <ComplexMalloc>
   43220:	subs	sl, r0, #0
   43224:	beq	43c88 <Mat_VarRead5+0x101c>
   43228:	ldr	r3, [r4, #48]	; 0x30
   4322c:	cmp	r3, #0
   43230:	str	r3, [sp, #16]
   43234:	bne	43bc0 <Mat_VarRead5+0xf54>
   43238:	ldr	r3, [r4, #8]
   4323c:	sub	r3, r3, #1
   43240:	cmp	r3, #12
   43244:	addls	pc, pc, r3, lsl #2
   43248:	b	43b20 <Mat_VarRead5+0xeb4>
   4324c:	b	44388 <Mat_VarRead5+0x171c>
   43250:	b	443c0 <Mat_VarRead5+0x1754>
   43254:	b	443a4 <Mat_VarRead5+0x1738>
   43258:	b	44464 <Mat_VarRead5+0x17f8>
   4325c:	b	44414 <Mat_VarRead5+0x17a8>
   43260:	b	443f8 <Mat_VarRead5+0x178c>
   43264:	b	443dc <Mat_VarRead5+0x1770>
   43268:	b	43b20 <Mat_VarRead5+0xeb4>
   4326c:	b	43b08 <Mat_VarRead5+0xe9c>
   43270:	b	43b20 <Mat_VarRead5+0xeb4>
   43274:	b	43b20 <Mat_VarRead5+0xeb4>
   43278:	b	442b4 <Mat_VarRead5+0x1648>
   4327c:	b	44480 <Mat_VarRead5+0x1814>
   43280:	ldr	r3, [r4, #52]	; 0x34
   43284:	mov	r2, #0
   43288:	ldr	r0, [r5]
   4328c:	ldr	r1, [r3]
   43290:	bl	1694 <fseek@plt>
   43294:	ldr	r3, [r4, #48]	; 0x30
   43298:	cmp	r3, #1
   4329c:	beq	434fc <Mat_VarRead5+0x890>
   432a0:	add	r7, sp, #32
   432a4:	mov	r2, #1
   432a8:	ldr	r3, [r5]
   432ac:	mov	r0, r7
   432b0:	mov	r1, #4
   432b4:	bl	1520 <fread@plt>
   432b8:	cmp	r9, #0
   432bc:	bne	435e8 <Mat_VarRead5+0x97c>
   432c0:	ldr	r7, [sp, #32]
   432c4:	lsr	r8, r7, #16
   432c8:	uxtb	r7, r7
   432cc:	cmp	r7, #25
   432d0:	lsl	r8, r8, #16
   432d4:	movcs	r7, #0
   432d8:	cmp	r8, #0
   432dc:	movne	r9, #1
   432e0:	beq	43608 <Mat_VarRead5+0x99c>
   432e4:	mov	r3, #2
   432e8:	mov	r0, r3
   432ec:	str	r3, [r4, #8]
   432f0:	bl	1598 <Mat_SizeOf@plt>
   432f4:	mov	r3, r0
   432f8:	mov	r0, r4
   432fc:	ldr	r1, [sp, #24]
   43300:	mov	r2, r3
   43304:	str	r3, [r4, #12]
   43308:	bl	499ec <SafeMul>
   4330c:	cmp	r0, #0
   43310:	bne	435f4 <Mat_VarRead5+0x988>
   43314:	ldr	r3, [r4, #20]
   43318:	cmp	r3, #0
   4331c:	beq	4346c <Mat_VarRead5+0x800>
   43320:	ldr	r3, [r4, #16]
   43324:	sub	r3, r3, #6
   43328:	cmp	r3, #9
   4332c:	bls	42e04 <Mat_VarRead5+0x198>
   43330:	b	42e50 <Mat_VarRead5+0x1e4>
   43334:	ldr	r2, [r4]
   43338:	mov	r1, #22
   4333c:	str	r1, [r4, #8]
   43340:	cmp	r2, #0
   43344:	beq	42dec <Mat_VarRead5+0x180>
   43348:	ldr	r2, [r4, #12]
   4334c:	cmp	r2, #0
   43350:	beq	42dec <Mat_VarRead5+0x180>
   43354:	ldr	r2, [r4, #40]	; 0x28
   43358:	cmp	r2, #0
   4335c:	beq	42dec <Mat_VarRead5+0x180>
   43360:	ldr	r3, [r4, #52]	; 0x34
   43364:	add	r0, sp, #32
   43368:	ldr	r1, [sp, #24]
   4336c:	ldr	r2, [r3, #4]
   43370:	bl	499ec <SafeMul>
   43374:	ldr	r2, [sp, #32]
   43378:	cmp	r2, #0
   4337c:	ldrne	r7, [r4, #40]	; 0x28
   43380:	movne	r8, #0
   43384:	subne	r7, r7, #4
   43388:	beq	43444 <Mat_VarRead5+0x7d8>
   4338c:	ldr	r3, [r7, #4]!
   43390:	mov	r0, r5
   43394:	add	r8, r8, #1
   43398:	subs	r1, r3, #0
   4339c:	beq	433a8 <Mat_VarRead5+0x73c>
   433a0:	bl	42c6c <Mat_VarRead5>
   433a4:	ldr	r2, [sp, #32]
   433a8:	cmp	r2, r8
   433ac:	bhi	4338c <Mat_VarRead5+0x720>
   433b0:	b	43444 <Mat_VarRead5+0x7d8>
   433b4:	mov	r7, #0
   433b8:	mov	r3, #8
   433bc:	mov	r2, #9
   433c0:	mov	r1, #2
   433c4:	mov	r0, r3
   433c8:	str	r7, [r4]
   433cc:	stmib	r4, {r1, r2, r3}
   433d0:	bl	1544 <malloc@plt>
   433d4:	str	r7, [r0]
   433d8:	str	r7, [r0, #4]
   433dc:	str	r0, [r4, #32]
   433e0:	b	42e50 <Mat_VarRead5+0x1e4>
   433e4:	ldr	r8, [r4, #40]	; 0x28
   433e8:	cmp	r8, #0
   433ec:	beq	436e8 <Mat_VarRead5+0xa7c>
   433f0:	ldr	r2, [sp, #24]
   433f4:	cmp	r2, #0
   433f8:	subne	r8, r8, #4
   433fc:	movne	r7, #0
   43400:	beq	4342c <Mat_VarRead5+0x7c0>
   43404:	ldr	r3, [r8, #4]!
   43408:	mov	r0, r5
   4340c:	add	r7, r7, #1
   43410:	subs	r1, r3, #0
   43414:	beq	43420 <Mat_VarRead5+0x7b4>
   43418:	bl	42c6c <Mat_VarRead5>
   4341c:	ldr	r2, [sp, #24]
   43420:	cmp	r2, r7
   43424:	bhi	43404 <Mat_VarRead5+0x798>
   43428:	ldr	r3, [r4, #16]
   4342c:	mov	r2, #21
   43430:	str	r2, [r4, #8]
   43434:	b	42dec <Mat_VarRead5+0x180>
   43438:	ldr	r0, [pc, #4080]	; 44430 <Mat_VarRead5+0x17c4>
   4343c:	add	r0, pc, r0
   43440:	bl	161c <Mat_Critical@plt>
   43444:	ldr	r3, [r4, #16]
   43448:	b	42dec <Mat_VarRead5+0x180>
   4344c:	ldr	r0, [pc, #4064]	; 44434 <Mat_VarRead5+0x17c8>
   43450:	add	r0, pc, r0
   43454:	bl	161c <Mat_Critical@plt>
   43458:	b	42cbc <Mat_VarRead5+0x50>
   4345c:	ldr	r0, [pc, #4052]	; 44438 <Mat_VarRead5+0x17cc>
   43460:	add	r0, pc, r0
   43464:	bl	161c <Mat_Critical@plt>
   43468:	b	42cbc <Mat_VarRead5+0x50>
   4346c:	ldr	r8, [r4]
   43470:	mov	r1, #1
   43474:	add	r0, r8, r1
   43478:	bl	140c <calloc@plt>
   4347c:	cmp	r0, #0
   43480:	str	r0, [r4, #40]	; 0x28
   43484:	beq	43af4 <Mat_VarRead5+0xe88>
   43488:	cmp	r8, #0
   4348c:	bne	439f8 <Mat_VarRead5+0xd8c>
   43490:	ldr	r3, [r4, #16]
   43494:	sub	r3, r3, #6
   43498:	cmp	r3, #9
   4349c:	bhi	42e50 <Mat_VarRead5+0x1e4>
   434a0:	mov	r0, r4
   434a4:	ldr	r2, [r4, #12]
   434a8:	ldr	r1, [sp, #24]
   434ac:	bl	499ec <SafeMul>
   434b0:	ldr	r0, [r4]
   434b4:	bl	1544 <malloc@plt>
   434b8:	cmp	r0, #0
   434bc:	str	r0, [r4, #40]	; 0x28
   434c0:	beq	434ec <Mat_VarRead5+0x880>
   434c4:	mov	r2, r0
   434c8:	mov	r1, r4
   434cc:	ldr	r3, [sp, #24]
   434d0:	mov	r0, r5
   434d4:	bl	219b0 <Mat_VarReadNumeric5>
   434d8:	b	42e50 <Mat_VarRead5+0x1e4>
   434dc:	ldr	r0, [pc, #3928]	; 4443c <Mat_VarRead5+0x17d0>
   434e0:	add	r0, pc, r0
   434e4:	bl	161c <Mat_Critical@plt>
   434e8:	b	42e50 <Mat_VarRead5+0x1e4>
   434ec:	ldr	r0, [pc, #3916]	; 44440 <Mat_VarRead5+0x17d4>
   434f0:	add	r0, pc, r0
   434f4:	bl	161c <Mat_Critical@plt>
   434f8:	b	42e50 <Mat_VarRead5+0x1e4>
   434fc:	ldr	r1, [r4, #52]	; 0x34
   43500:	mov	r3, #0
   43504:	add	r7, sp, #32
   43508:	mov	r2, r7
   4350c:	mov	r0, r5
   43510:	ldr	r1, [r1, #12]
   43514:	str	r3, [r1, #4]
   43518:	bl	2f74 <InflateDataType>
   4351c:	cmp	r9, #0
   43520:	bne	43828 <Mat_VarRead5+0xbbc>
   43524:	ldr	r3, [sp, #32]
   43528:	lsr	r2, r3, #16
   4352c:	uxtb	r7, r3
   43530:	cmp	r7, #25
   43534:	lsl	r2, r2, #16
   43538:	movcs	r7, #0
   4353c:	cmp	r2, #0
   43540:	beq	437fc <Mat_VarRead5+0xb90>
   43544:	lsr	r8, r3, #16
   43548:	mov	r9, #1
   4354c:	mov	r0, r7
   43550:	str	r7, [r4, #8]
   43554:	bl	1598 <Mat_SizeOf@plt>
   43558:	str	r8, [r4]
   4355c:	str	r0, [r4, #12]
   43560:	b	43314 <Mat_VarRead5+0x6a8>
   43564:	ldr	r0, [pc, #3800]	; 44444 <Mat_VarRead5+0x17d8>
   43568:	add	r0, pc, r0
   4356c:	bl	161c <Mat_Critical@plt>
   43570:	b	43444 <Mat_VarRead5+0x7d8>
   43574:	ldr	r3, [r4, #52]	; 0x34
   43578:	add	r2, sp, #32
   4357c:	mov	r0, r5
   43580:	str	r2, [sp, #12]
   43584:	ldr	r1, [r3, #12]
   43588:	str	r8, [r1, #4]
   4358c:	bl	2f74 <InflateDataType>
   43590:	ldr	r3, [r5, #20]
   43594:	cmp	r3, #0
   43598:	bne	43994 <Mat_VarRead5+0xd28>
   4359c:	ldr	r3, [sp, #32]
   435a0:	lsr	lr, r3, #16
   435a4:	uxtb	r8, r3
   435a8:	cmp	r8, #25
   435ac:	lsl	lr, lr, #16
   435b0:	movcs	r8, #0
   435b4:	cmp	lr, #0
   435b8:	bne	43084 <Mat_VarRead5+0x418>
   435bc:	ldr	r1, [r4, #52]	; 0x34
   435c0:	mov	ip, #1
   435c4:	mov	r3, #5
   435c8:	add	r2, sp, #28
   435cc:	mov	r0, r5
   435d0:	str	ip, [sp]
   435d4:	str	lr, [sp, #8]
   435d8:	ldr	r1, [r1, #12]
   435dc:	bl	14e14 <ReadCompressedInt32Data>
   435e0:	ldr	r3, [sp, #28]
   435e4:	b	43094 <Mat_VarRead5+0x428>
   435e8:	mov	r0, r7
   435ec:	bl	18f8 <Mat_uint32Swap>
   435f0:	b	432c0 <Mat_VarRead5+0x654>
   435f4:	ldr	r0, [pc, #3660]	; 44448 <Mat_VarRead5+0x17dc>
   435f8:	add	r0, pc, r0
   435fc:	bl	161c <Mat_Critical@plt>
   43600:	ldr	r3, [r4, #16]
   43604:	b	42dec <Mat_VarRead5+0x180>
   43608:	add	sl, sp, #36	; 0x24
   4360c:	mov	r2, #1
   43610:	ldr	r3, [r5]
   43614:	mov	r0, sl
   43618:	mov	r1, #4
   4361c:	bl	1520 <fread@plt>
   43620:	cmp	r9, #0
   43624:	beq	432e4 <Mat_VarRead5+0x678>
   43628:	mov	r0, sl
   4362c:	mov	r9, r8
   43630:	bl	18f8 <Mat_uint32Swap>
   43634:	b	432e4 <Mat_VarRead5+0x678>
   43638:	mov	r1, r0
   4363c:	mov	r3, sl
   43640:	mov	r2, r8
   43644:	mov	r0, r5
   43648:	bl	14df0 <ReadInt32Data>
   4364c:	ldr	r3, [sp, #8]
   43650:	mov	r8, r0
   43654:	cmp	r3, #0
   43658:	addne	r8, r0, #4
   4365c:	ands	r1, r8, #7
   43660:	bne	43a98 <Mat_VarRead5+0xe2c>
   43664:	ldr	r3, [r4, #48]	; 0x30
   43668:	cmp	r3, #1
   4366c:	bne	430d4 <Mat_VarRead5+0x468>
   43670:	ldr	r1, [r4, #52]	; 0x34
   43674:	mov	r3, #0
   43678:	mov	r0, r5
   4367c:	ldr	r2, [sp, #12]
   43680:	ldr	r1, [r1, #12]
   43684:	str	r3, [r1, #4]
   43688:	bl	2f74 <InflateDataType>
   4368c:	ldr	r3, [r5, #20]
   43690:	cmp	r3, #0
   43694:	bne	43a8c <Mat_VarRead5+0xe20>
   43698:	ldr	r3, [sp, #32]
   4369c:	lsr	lr, r3, #16
   436a0:	uxtb	r2, r3
   436a4:	cmp	r2, #25
   436a8:	lsl	lr, lr, #16
   436ac:	movcs	r2, #0
   436b0:	cmp	lr, #0
   436b4:	str	r2, [sp, #16]
   436b8:	bne	43118 <Mat_VarRead5+0x4ac>
   436bc:	ldr	r1, [r4, #52]	; 0x34
   436c0:	mov	ip, #1
   436c4:	mov	r3, #5
   436c8:	add	r2, sp, #28
   436cc:	mov	r0, r5
   436d0:	str	ip, [sp]
   436d4:	str	lr, [sp, #8]
   436d8:	ldr	r1, [r1, #12]
   436dc:	bl	14e14 <ReadCompressedInt32Data>
   436e0:	ldr	r3, [sp, #28]
   436e4:	b	43128 <Mat_VarRead5+0x4bc>
   436e8:	ldr	r0, [pc, #3420]	; 4444c <Mat_VarRead5+0x17e0>
   436ec:	ldr	r1, [r4, #36]	; 0x24
   436f0:	add	r0, pc, r0
   436f4:	bl	161c <Mat_Critical@plt>
   436f8:	ldr	r3, [r4, #16]
   436fc:	b	42dec <Mat_VarRead5+0x180>
   43700:	add	r3, sp, #28
   43704:	mov	r2, #1
   43708:	mov	r0, r3
   4370c:	mov	r1, #4
   43710:	ldr	r3, [r5]
   43714:	str	r0, [sp, #16]
   43718:	bl	1520 <fread@plt>
   4371c:	ldr	r3, [r5, #20]
   43720:	cmp	r3, #0
   43724:	str	r3, [sp, #8]
   43728:	bne	43ae4 <Mat_VarRead5+0xe78>
   4372c:	ldr	r3, [sp, #28]
   43730:	b	43094 <Mat_VarRead5+0x428>
   43734:	ldr	r0, [sp, #12]
   43738:	bl	18f8 <Mat_uint32Swap>
   4373c:	b	43064 <Mat_VarRead5+0x3f8>
   43740:	mov	r1, r0
   43744:	mov	r3, sl
   43748:	ldr	r2, [sp, #16]
   4374c:	mov	r0, r5
   43750:	bl	14df0 <ReadInt32Data>
   43754:	ldr	r3, [sp, #8]
   43758:	mov	r8, r0
   4375c:	cmp	r3, #0
   43760:	addne	r8, r0, #4
   43764:	ands	r1, r8, #7
   43768:	bne	43ac4 <Mat_VarRead5+0xe58>
   4376c:	ldr	r3, [r4, #48]	; 0x30
   43770:	cmp	r3, #1
   43774:	bne	43164 <Mat_VarRead5+0x4f8>
   43778:	ldr	r1, [r4, #52]	; 0x34
   4377c:	mov	r3, #0
   43780:	mov	r0, r5
   43784:	ldr	r2, [sp, #12]
   43788:	ldr	r1, [r1, #12]
   4378c:	str	r3, [r1, #4]
   43790:	bl	2f74 <InflateDataType>
   43794:	ldr	r3, [r5, #20]
   43798:	cmp	r3, #0
   4379c:	bne	43ab8 <Mat_VarRead5+0xe4c>
   437a0:	ldr	r3, [sp, #32]
   437a4:	lsr	r1, r3, #16
   437a8:	uxtb	r2, r3
   437ac:	cmp	r2, #25
   437b0:	lsl	r1, r1, #16
   437b4:	movcs	r2, #0
   437b8:	cmp	r1, #0
   437bc:	str	r2, [sp, #8]
   437c0:	bne	431a8 <Mat_VarRead5+0x53c>
   437c4:	ldr	ip, [r4, #52]	; 0x34
   437c8:	mov	lr, #1
   437cc:	mov	r3, #5
   437d0:	add	r2, sp, #28
   437d4:	mov	r0, r5
   437d8:	str	lr, [sp]
   437dc:	str	r1, [sp, #20]
   437e0:	ldr	r1, [ip, #12]
   437e4:	bl	14e14 <ReadCompressedInt32Data>
   437e8:	b	431b8 <Mat_VarRead5+0x54c>
   437ec:	ldr	r0, [pc, #3164]	; 44450 <Mat_VarRead5+0x17e4>
   437f0:	add	r0, pc, r0
   437f4:	bl	161c <Mat_Critical@plt>
   437f8:	b	43444 <Mat_VarRead5+0x7d8>
   437fc:	ldr	r3, [r4, #52]	; 0x34
   43800:	add	r8, sp, #36	; 0x24
   43804:	mov	r0, r5
   43808:	mov	r2, r8
   4380c:	ldr	r1, [r3, #12]
   43810:	bl	2f74 <InflateDataType>
   43814:	cmp	r9, #0
   43818:	bne	43c7c <Mat_VarRead5+0x1010>
   4381c:	mov	r9, #0
   43820:	ldr	r8, [sp, #36]	; 0x24
   43824:	b	4354c <Mat_VarRead5+0x8e0>
   43828:	mov	r0, r7
   4382c:	bl	18f8 <Mat_uint32Swap>
   43830:	b	43524 <Mat_VarRead5+0x8b8>
   43834:	add	r3, sp, #28
   43838:	mov	r2, #1
   4383c:	mov	r0, r3
   43840:	mov	r1, #4
   43844:	ldr	r3, [r5]
   43848:	str	r0, [sp, #20]
   4384c:	bl	1520 <fread@plt>
   43850:	ldr	r3, [r5, #20]
   43854:	cmp	r3, #0
   43858:	str	r3, [sp, #8]
   4385c:	bne	43c6c <Mat_VarRead5+0x1000>
   43860:	ldr	r3, [sp, #28]
   43864:	b	43128 <Mat_VarRead5+0x4bc>
   43868:	ldr	r0, [sp, #12]
   4386c:	bl	18f8 <Mat_uint32Swap>
   43870:	b	430f4 <Mat_VarRead5+0x488>
   43874:	bl	1598 <Mat_SizeOf@plt>
   43878:	mul	r0, r0, sl
   4387c:	bl	1544 <malloc@plt>
   43880:	cmp	r0, #0
   43884:	mov	r1, r0
   43888:	str	r0, [fp, #24]
   4388c:	beq	43c98 <Mat_VarRead5+0x102c>
   43890:	ldr	r3, [r4, #48]	; 0x30
   43894:	cmp	r3, #0
   43898:	bne	43c1c <Mat_VarRead5+0xfb0>
   4389c:	ldr	r3, [r4, #8]
   438a0:	sub	r3, r3, #1
   438a4:	cmp	r3, #12
   438a8:	addls	pc, pc, r3, lsl #2
   438ac:	b	43be8 <Mat_VarRead5+0xf7c>
   438b0:	b	4424c <Mat_VarRead5+0x15e0>
   438b4:	b	4420c <Mat_VarRead5+0x15a0>
   438b8:	b	441f4 <Mat_VarRead5+0x1588>
   438bc:	b	441dc <Mat_VarRead5+0x1570>
   438c0:	b	441c4 <Mat_VarRead5+0x1558>
   438c4:	b	44328 <Mat_VarRead5+0x16bc>
   438c8:	b	44310 <Mat_VarRead5+0x16a4>
   438cc:	b	43be8 <Mat_VarRead5+0xf7c>
   438d0:	b	43bd4 <Mat_VarRead5+0xf68>
   438d4:	b	43be8 <Mat_VarRead5+0xf7c>
   438d8:	b	43be8 <Mat_VarRead5+0xf7c>
   438dc:	b	442f8 <Mat_VarRead5+0x168c>
   438e0:	b	4449c <Mat_VarRead5+0x1830>
   438e4:	ldr	r0, [pc, #2920]	; 44454 <Mat_VarRead5+0x17e8>
   438e8:	add	r0, pc, r0
   438ec:	bl	161c <Mat_Critical@plt>
   438f0:	b	43444 <Mat_VarRead5+0x7d8>
   438f4:	add	r3, sp, #28
   438f8:	mov	r2, #1
   438fc:	mov	r0, r3
   43900:	mov	r1, #4
   43904:	ldr	r3, [r5]
   43908:	str	r0, [sp, #16]
   4390c:	bl	1520 <fread@plt>
   43910:	ldr	r3, [r5, #20]
   43914:	cmp	r3, #0
   43918:	str	r3, [sp, #20]
   4391c:	beq	431b8 <Mat_VarRead5+0x54c>
   43920:	ldr	r0, [sp, #16]
   43924:	str	sl, [sp, #20]
   43928:	bl	18c4 <Mat_int32Swap>
   4392c:	b	431b8 <Mat_VarRead5+0x54c>
   43930:	ldr	r0, [sp, #12]
   43934:	bl	18f8 <Mat_uint32Swap>
   43938:	b	43184 <Mat_VarRead5+0x518>
   4393c:	ldr	r1, [r4, #52]	; 0x34
   43940:	mov	r3, r8
   43944:	mov	r2, r0
   43948:	mov	r0, r5
   4394c:	str	sl, [sp]
   43950:	ldr	r1, [r1, #12]
   43954:	bl	14e14 <ReadCompressedInt32Data>
   43958:	ldr	r3, [sp, #8]
   4395c:	mov	r8, r0
   43960:	cmp	r3, #0
   43964:	addne	r8, r0, #4
   43968:	ands	r2, r8, #7
   4396c:	beq	43664 <Mat_VarRead5+0x9f8>
   43970:	ldr	r1, [r4, #52]	; 0x34
   43974:	rsbs	r3, r8, #0
   43978:	mov	r0, r5
   4397c:	and	r3, r3, #7
   43980:	rsbpl	r2, r3, #0
   43984:	rsb	r2, r2, #8
   43988:	ldr	r1, [r1, #12]
   4398c:	bl	1f90 <InflateSkip>
   43990:	b	43664 <Mat_VarRead5+0x9f8>
   43994:	ldr	r0, [sp, #12]
   43998:	bl	18f8 <Mat_uint32Swap>
   4399c:	b	4359c <Mat_VarRead5+0x930>
   439a0:	ldr	r1, [r4, #52]	; 0x34
   439a4:	mov	r2, r0
   439a8:	mov	r0, r5
   439ac:	str	sl, [sp]
   439b0:	ldr	r3, [sp, #16]
   439b4:	ldr	r1, [r1, #12]
   439b8:	bl	14e14 <ReadCompressedInt32Data>
   439bc:	ldr	r3, [sp, #8]
   439c0:	mov	r8, r0
   439c4:	cmp	r3, #0
   439c8:	addne	r8, r0, #4
   439cc:	ands	r2, r8, #7
   439d0:	beq	4376c <Mat_VarRead5+0xb00>
   439d4:	ldr	r1, [r4, #52]	; 0x34
   439d8:	rsbs	r3, r8, #0
   439dc:	mov	r0, r5
   439e0:	and	r3, r3, #7
   439e4:	rsbpl	r2, r3, #0
   439e8:	rsb	r2, r2, #8
   439ec:	ldr	r1, [r1, #12]
   439f0:	bl	1f90 <InflateSkip>
   439f4:	b	4376c <Mat_VarRead5+0xb00>
   439f8:	add	r0, sp, #28
   439fc:	ldr	r2, [r4, #12]
   43a00:	ldr	r1, [sp, #24]
   43a04:	bl	499ec <SafeMul>
   43a08:	cmp	r0, #0
   43a0c:	bne	43444 <Mat_VarRead5+0x7d8>
   43a10:	ldr	r2, [r4]
   43a14:	ldr	r3, [sp, #28]
   43a18:	cmp	r2, r3
   43a1c:	bcc	43444 <Mat_VarRead5+0x7d8>
   43a20:	ldr	r3, [r4, #48]	; 0x30
   43a24:	cmp	r3, #0
   43a28:	beq	44340 <Mat_VarRead5+0x16d4>
   43a2c:	cmp	r3, #1
   43a30:	bne	43444 <Mat_VarRead5+0x7d8>
   43a34:	ldr	r2, [sp, #24]
   43a38:	mov	r3, r7
   43a3c:	mov	r0, r5
   43a40:	ldr	r1, [r4, #52]	; 0x34
   43a44:	str	r2, [sp]
   43a48:	ldr	r2, [r4, #40]	; 0x28
   43a4c:	ldr	r1, [r1, #12]
   43a50:	bl	16fa8 <ReadCompressedCharData>
   43a54:	cmp	r9, #0
   43a58:	addne	r0, r0, #4
   43a5c:	ands	r2, r0, #7
   43a60:	beq	43444 <Mat_VarRead5+0x7d8>
   43a64:	ldr	r1, [r4, #52]	; 0x34
   43a68:	rsbs	r3, r0, #0
   43a6c:	mov	r0, r5
   43a70:	and	r3, r3, #7
   43a74:	rsbpl	r2, r3, #0
   43a78:	rsb	r2, r2, #8
   43a7c:	ldr	r1, [r1, #12]
   43a80:	bl	1f90 <InflateSkip>
   43a84:	ldr	r3, [r4, #16]
   43a88:	b	42dec <Mat_VarRead5+0x180>
   43a8c:	ldr	r0, [sp, #12]
   43a90:	bl	18f8 <Mat_uint32Swap>
   43a94:	b	43698 <Mat_VarRead5+0xa2c>
   43a98:	rsbs	r3, r8, #0
   43a9c:	mov	r2, #1
   43aa0:	ldr	r0, [r5]
   43aa4:	and	r3, r3, #7
   43aa8:	rsbpl	r1, r3, #0
   43aac:	rsb	r1, r1, #8
   43ab0:	bl	1694 <fseek@plt>
   43ab4:	b	43664 <Mat_VarRead5+0x9f8>
   43ab8:	ldr	r0, [sp, #12]
   43abc:	bl	18f8 <Mat_uint32Swap>
   43ac0:	b	437a0 <Mat_VarRead5+0xb34>
   43ac4:	rsbs	r3, r8, #0
   43ac8:	mov	r2, #1
   43acc:	ldr	r0, [r5]
   43ad0:	and	r3, r3, #7
   43ad4:	rsbpl	r1, r3, #0
   43ad8:	rsb	r1, r1, #8
   43adc:	bl	1694 <fseek@plt>
   43ae0:	b	4376c <Mat_VarRead5+0xb00>
   43ae4:	ldr	r0, [sp, #16]
   43ae8:	str	sl, [sp, #8]
   43aec:	bl	18c4 <Mat_int32Swap>
   43af0:	b	4372c <Mat_VarRead5+0xac0>
   43af4:	ldr	r0, [pc, #2396]	; 44458 <Mat_VarRead5+0x17ec>
   43af8:	add	r0, pc, r0
   43afc:	bl	161c <Mat_Critical@plt>
   43b00:	ldr	r3, [r4, #16]
   43b04:	b	42dec <Mat_VarRead5+0x180>
   43b08:	mov	r0, r5
   43b0c:	ldr	r1, [sl]
   43b10:	ldr	r2, [sp, #8]
   43b14:	ldr	r3, [fp, #20]
   43b18:	bl	126c8 <ReadDoubleData>
   43b1c:	mov	r8, r0
   43b20:	ldr	r3, [sp, #20]
   43b24:	cmp	r3, #0
   43b28:	addne	r8, r8, #4
   43b2c:	ands	r1, r8, #7
   43b30:	bne	43dc8 <Mat_VarRead5+0x115c>
   43b34:	mov	r2, #1
   43b38:	mov	r1, #4
   43b3c:	ldr	r3, [r5]
   43b40:	ldr	r0, [sp, #12]
   43b44:	bl	1520 <fread@plt>
   43b48:	cmp	r9, #0
   43b4c:	bne	43dbc <Mat_VarRead5+0x1150>
   43b50:	ldr	r1, [sp, #16]
   43b54:	ldr	r0, [sp, #32]
   43b58:	lsr	r3, r0, #16
   43b5c:	uxtb	r2, r0
   43b60:	cmp	r2, #24
   43b64:	lsl	r3, r3, #16
   43b68:	movls	r1, r2
   43b6c:	cmp	r3, #0
   43b70:	str	r1, [sp, #16]
   43b74:	beq	43d54 <Mat_VarRead5+0x10e8>
   43b78:	ldr	r3, [r4, #8]
   43b7c:	sub	r3, r3, #1
   43b80:	cmp	r3, #12
   43b84:	addls	pc, pc, r3, lsl #2
   43b88:	b	43e9c <Mat_VarRead5+0x1230>
   43b8c:	b	44194 <Mat_VarRead5+0x1528>
   43b90:	b	44178 <Mat_VarRead5+0x150c>
   43b94:	b	4415c <Mat_VarRead5+0x14f0>
   43b98:	b	44140 <Mat_VarRead5+0x14d4>
   43b9c:	b	44124 <Mat_VarRead5+0x14b8>
   43ba0:	b	44108 <Mat_VarRead5+0x149c>
   43ba4:	b	440ec <Mat_VarRead5+0x1480>
   43ba8:	b	43e9c <Mat_VarRead5+0x1230>
   43bac:	b	440d0 <Mat_VarRead5+0x1464>
   43bb0:	b	43e9c <Mat_VarRead5+0x1230>
   43bb4:	b	43e9c <Mat_VarRead5+0x1230>
   43bb8:	b	440b4 <Mat_VarRead5+0x1448>
   43bbc:	b	44090 <Mat_VarRead5+0x1424>
   43bc0:	ldr	r3, [sp, #16]
   43bc4:	cmp	r3, #1
   43bc8:	beq	43ca8 <Mat_VarRead5+0x103c>
   43bcc:	str	sl, [fp, #24]
   43bd0:	b	43444 <Mat_VarRead5+0x7d8>
   43bd4:	mov	r0, r5
   43bd8:	ldr	r2, [sp, #8]
   43bdc:	ldr	r3, [fp, #20]
   43be0:	bl	126c8 <ReadDoubleData>
   43be4:	mov	r8, r0
   43be8:	ldr	r3, [sp, #20]
   43bec:	cmp	r3, #0
   43bf0:	addne	r8, r8, #4
   43bf4:	ands	r1, r8, #7
   43bf8:	beq	43444 <Mat_VarRead5+0x7d8>
   43bfc:	rsbs	r3, r8, #0
   43c00:	mov	r2, #1
   43c04:	ldr	r0, [r5]
   43c08:	and	r3, r3, #7
   43c0c:	rsbpl	r1, r3, #0
   43c10:	rsb	r1, r1, #8
   43c14:	bl	1694 <fseek@plt>
   43c18:	b	43444 <Mat_VarRead5+0x7d8>
   43c1c:	cmp	r3, #1
   43c20:	bne	43444 <Mat_VarRead5+0x7d8>
   43c24:	ldr	r3, [r4, #8]
   43c28:	sub	r3, r3, #1
   43c2c:	cmp	r3, #12
   43c30:	addls	pc, pc, r3, lsl #2
   43c34:	b	43d1c <Mat_VarRead5+0x10b0>
   43c38:	b	44020 <Mat_VarRead5+0x13b4>
   43c3c:	b	4428c <Mat_VarRead5+0x1620>
   43c40:	b	44264 <Mat_VarRead5+0x15f8>
   43c44:	b	43ff8 <Mat_VarRead5+0x138c>
   43c48:	b	43fd0 <Mat_VarRead5+0x1364>
   43c4c:	b	43fa8 <Mat_VarRead5+0x133c>
   43c50:	b	43f80 <Mat_VarRead5+0x1314>
   43c54:	b	43d1c <Mat_VarRead5+0x10b0>
   43c58:	b	43cf8 <Mat_VarRead5+0x108c>
   43c5c:	b	43d1c <Mat_VarRead5+0x10b0>
   43c60:	b	43d1c <Mat_VarRead5+0x10b0>
   43c64:	b	442d0 <Mat_VarRead5+0x1664>
   43c68:	b	44224 <Mat_VarRead5+0x15b8>
   43c6c:	ldr	r0, [sp, #20]
   43c70:	str	sl, [sp, #8]
   43c74:	bl	18c4 <Mat_int32Swap>
   43c78:	b	43860 <Mat_VarRead5+0xbf4>
   43c7c:	mov	r0, r8
   43c80:	bl	18f8 <Mat_uint32Swap>
   43c84:	b	4381c <Mat_VarRead5+0xbb0>
   43c88:	ldr	r0, [pc, #1996]	; 4445c <Mat_VarRead5+0x17f0>
   43c8c:	add	r0, pc, r0
   43c90:	bl	161c <Mat_Critical@plt>
   43c94:	b	43444 <Mat_VarRead5+0x7d8>
   43c98:	ldr	r0, [pc, #1984]	; 44460 <Mat_VarRead5+0x17f4>
   43c9c:	add	r0, pc, r0
   43ca0:	bl	161c <Mat_Critical@plt>
   43ca4:	b	43444 <Mat_VarRead5+0x7d8>
   43ca8:	ldr	r2, [r4, #8]
   43cac:	ldr	r3, [r4, #52]	; 0x34
   43cb0:	sub	r2, r2, #1
   43cb4:	ldr	r1, [r3, #12]
   43cb8:	cmp	r2, #12
   43cbc:	addls	pc, pc, r2, lsl #2
   43cc0:	b	43e08 <Mat_VarRead5+0x119c>
   43cc4:	b	43ecc <Mat_VarRead5+0x1260>
   43cc8:	b	444d8 <Mat_VarRead5+0x186c>
   43ccc:	b	444b4 <Mat_VarRead5+0x1848>
   43cd0:	b	43f5c <Mat_VarRead5+0x12f0>
   43cd4:	b	43f38 <Mat_VarRead5+0x12cc>
   43cd8:	b	43f14 <Mat_VarRead5+0x12a8>
   43cdc:	b	43ef0 <Mat_VarRead5+0x1284>
   43ce0:	b	43e08 <Mat_VarRead5+0x119c>
   43ce4:	b	43de8 <Mat_VarRead5+0x117c>
   43ce8:	b	43e08 <Mat_VarRead5+0x119c>
   43cec:	b	43e08 <Mat_VarRead5+0x119c>
   43cf0:	b	4406c <Mat_VarRead5+0x1400>
   43cf4:	b	44048 <Mat_VarRead5+0x13dc>
   43cf8:	ldr	ip, [fp, #20]
   43cfc:	mov	r2, r0
   43d00:	mov	r0, r5
   43d04:	ldr	r1, [r4, #52]	; 0x34
   43d08:	ldr	r3, [sp, #8]
   43d0c:	str	ip, [sp]
   43d10:	ldr	r1, [r1, #12]
   43d14:	bl	126ec <ReadCompressedDoubleData>
   43d18:	mov	r8, r0
   43d1c:	ldr	r3, [sp, #20]
   43d20:	cmp	r3, #0
   43d24:	addne	r8, r8, #4
   43d28:	ands	r2, r8, #7
   43d2c:	beq	43444 <Mat_VarRead5+0x7d8>
   43d30:	ldr	r1, [r4, #52]	; 0x34
   43d34:	rsbs	r3, r8, #0
   43d38:	mov	r0, r5
   43d3c:	and	r3, r3, #7
   43d40:	rsbpl	r2, r3, #0
   43d44:	rsb	r2, r2, #8
   43d48:	ldr	r1, [r1, #12]
   43d4c:	bl	1f90 <InflateSkip>
   43d50:	b	43444 <Mat_VarRead5+0x7d8>
   43d54:	add	r8, sp, #36	; 0x24
   43d58:	mov	r2, #1
   43d5c:	ldr	r3, [r5]
   43d60:	mov	r0, r8
   43d64:	mov	r1, #4
   43d68:	bl	1520 <fread@plt>
   43d6c:	cmp	r9, #0
   43d70:	bne	441b8 <Mat_VarRead5+0x154c>
   43d74:	ldr	r3, [r4, #8]
   43d78:	sub	r3, r3, #1
   43d7c:	cmp	r3, #12
   43d80:	addls	pc, pc, r3, lsl #2
   43d84:	b	441b0 <Mat_VarRead5+0x1544>
   43d88:	b	44198 <Mat_VarRead5+0x152c>
   43d8c:	b	4417c <Mat_VarRead5+0x1510>
   43d90:	b	44160 <Mat_VarRead5+0x14f4>
   43d94:	b	44144 <Mat_VarRead5+0x14d8>
   43d98:	b	44128 <Mat_VarRead5+0x14bc>
   43d9c:	b	4410c <Mat_VarRead5+0x14a0>
   43da0:	b	440f0 <Mat_VarRead5+0x1484>
   43da4:	b	441b0 <Mat_VarRead5+0x1544>
   43da8:	b	440d4 <Mat_VarRead5+0x1468>
   43dac:	b	441b0 <Mat_VarRead5+0x1544>
   43db0:	b	441b0 <Mat_VarRead5+0x1544>
   43db4:	b	440b8 <Mat_VarRead5+0x144c>
   43db8:	b	44094 <Mat_VarRead5+0x1428>
   43dbc:	ldr	r0, [sp, #12]
   43dc0:	bl	18f8 <Mat_uint32Swap>
   43dc4:	b	43b50 <Mat_VarRead5+0xee4>
   43dc8:	rsbs	r3, r8, #0
   43dcc:	mov	r2, #1
   43dd0:	ldr	r0, [r5]
   43dd4:	and	r3, r3, #7
   43dd8:	rsbpl	r1, r3, #0
   43ddc:	rsb	r1, r1, #8
   43de0:	bl	1694 <fseek@plt>
   43de4:	b	43b34 <Mat_VarRead5+0xec8>
   43de8:	ldr	r2, [fp, #20]
   43dec:	mov	r0, r5
   43df0:	ldr	r3, [sp, #8]
   43df4:	str	r2, [sp]
   43df8:	ldr	r2, [sl]
   43dfc:	bl	126ec <ReadCompressedDoubleData>
   43e00:	ldr	r3, [r4, #52]	; 0x34
   43e04:	mov	r8, r0
   43e08:	ldr	r2, [sp, #20]
   43e0c:	cmp	r2, #0
   43e10:	addne	r8, r8, #4
   43e14:	ands	r2, r8, #7
   43e18:	bne	4471c <Mat_VarRead5+0x1ab0>
   43e1c:	mov	r0, r5
   43e20:	ldr	r1, [r3, #12]
   43e24:	ldr	r2, [sp, #12]
   43e28:	bl	2f74 <InflateDataType>
   43e2c:	cmp	r9, #0
   43e30:	bne	44710 <Mat_VarRead5+0x1aa4>
   43e34:	ldr	r0, [sp, #32]
   43e38:	lsr	r2, r0, #16
   43e3c:	uxtb	r3, r0
   43e40:	cmp	r3, #25
   43e44:	lsl	r2, r2, #16
   43e48:	movcs	r3, #0
   43e4c:	cmp	r2, #0
   43e50:	beq	446a0 <Mat_VarRead5+0x1a34>
   43e54:	ldr	r2, [r4, #8]
   43e58:	sub	r2, r2, #1
   43e5c:	cmp	r2, #12
   43e60:	addls	pc, pc, r2, lsl #2
   43e64:	b	44698 <Mat_VarRead5+0x1a2c>
   43e68:	b	44674 <Mat_VarRead5+0x1a08>
   43e6c:	b	44650 <Mat_VarRead5+0x19e4>
   43e70:	b	4462c <Mat_VarRead5+0x19c0>
   43e74:	b	44608 <Mat_VarRead5+0x199c>
   43e78:	b	445e4 <Mat_VarRead5+0x1978>
   43e7c:	b	445c0 <Mat_VarRead5+0x1954>
   43e80:	b	4459c <Mat_VarRead5+0x1930>
   43e84:	b	44698 <Mat_VarRead5+0x1a2c>
   43e88:	b	44578 <Mat_VarRead5+0x190c>
   43e8c:	b	44698 <Mat_VarRead5+0x1a2c>
   43e90:	b	44698 <Mat_VarRead5+0x1a2c>
   43e94:	b	44554 <Mat_VarRead5+0x18e8>
   43e98:	b	444fc <Mat_VarRead5+0x1890>
   43e9c:	lsr	r0, r0, #16
   43ea0:	add	r0, r0, #4
   43ea4:	ands	r1, r0, #7
   43ea8:	beq	43bcc <Mat_VarRead5+0xf60>
   43eac:	rsbs	r3, r0, #0
   43eb0:	mov	r2, #1
   43eb4:	ldr	r0, [r5]
   43eb8:	and	r3, r3, #7
   43ebc:	rsbpl	r1, r3, #0
   43ec0:	rsb	r1, r1, #8
   43ec4:	bl	1694 <fseek@plt>
   43ec8:	b	43bcc <Mat_VarRead5+0xf60>
   43ecc:	ldr	r2, [fp, #20]
   43ed0:	mov	r0, r5
   43ed4:	ldr	r3, [sp, #8]
   43ed8:	str	r2, [sp]
   43edc:	ldr	r2, [sl]
   43ee0:	bl	163c4 <ReadCompressedInt8Data>
   43ee4:	mov	r8, r0
   43ee8:	ldr	r3, [r4, #52]	; 0x34
   43eec:	b	43e08 <Mat_VarRead5+0x119c>
   43ef0:	ldr	r2, [fp, #20]
   43ef4:	mov	r0, r5
   43ef8:	ldr	r3, [sp, #8]
   43efc:	str	r2, [sp]
   43f00:	ldr	r2, [sl]
   43f04:	bl	13d20 <ReadCompressedSingleData>
   43f08:	mov	r8, r0
   43f0c:	ldr	r3, [r4, #52]	; 0x34
   43f10:	b	43e08 <Mat_VarRead5+0x119c>
   43f14:	ldr	r2, [fp, #20]
   43f18:	mov	r0, r5
   43f1c:	ldr	r3, [sp, #8]
   43f20:	str	r2, [sp]
   43f24:	ldr	r2, [sl]
   43f28:	bl	15378 <ReadCompressedUInt32Data>
   43f2c:	mov	r8, r0
   43f30:	ldr	r3, [r4, #52]	; 0x34
   43f34:	b	43e08 <Mat_VarRead5+0x119c>
   43f38:	ldr	r2, [fp, #20]
   43f3c:	mov	r0, r5
   43f40:	ldr	r3, [sp, #8]
   43f44:	str	r2, [sp]
   43f48:	ldr	r2, [sl]
   43f4c:	bl	14e14 <ReadCompressedInt32Data>
   43f50:	mov	r8, r0
   43f54:	ldr	r3, [r4, #52]	; 0x34
   43f58:	b	43e08 <Mat_VarRead5+0x119c>
   43f5c:	ldr	r2, [fp, #20]
   43f60:	mov	r0, r5
   43f64:	ldr	r3, [sp, #8]
   43f68:	str	r2, [sp]
   43f6c:	ldr	r2, [sl]
   43f70:	bl	15e50 <ReadCompressedUInt16Data>
   43f74:	mov	r8, r0
   43f78:	ldr	r3, [r4, #52]	; 0x34
   43f7c:	b	43e08 <Mat_VarRead5+0x119c>
   43f80:	ldr	ip, [fp, #20]
   43f84:	mov	r2, r0
   43f88:	mov	r0, r5
   43f8c:	ldr	r1, [r4, #52]	; 0x34
   43f90:	ldr	r3, [sp, #8]
   43f94:	str	ip, [sp]
   43f98:	ldr	r1, [r1, #12]
   43f9c:	bl	13d20 <ReadCompressedSingleData>
   43fa0:	mov	r8, r0
   43fa4:	b	43d1c <Mat_VarRead5+0x10b0>
   43fa8:	ldr	ip, [fp, #20]
   43fac:	mov	r2, r0
   43fb0:	mov	r0, r5
   43fb4:	ldr	r1, [r4, #52]	; 0x34
   43fb8:	ldr	r3, [sp, #8]
   43fbc:	str	ip, [sp]
   43fc0:	ldr	r1, [r1, #12]
   43fc4:	bl	15378 <ReadCompressedUInt32Data>
   43fc8:	mov	r8, r0
   43fcc:	b	43d1c <Mat_VarRead5+0x10b0>
   43fd0:	ldr	ip, [fp, #20]
   43fd4:	mov	r2, r0
   43fd8:	mov	r0, r5
   43fdc:	ldr	r1, [r4, #52]	; 0x34
   43fe0:	ldr	r3, [sp, #8]
   43fe4:	str	ip, [sp]
   43fe8:	ldr	r1, [r1, #12]
   43fec:	bl	14e14 <ReadCompressedInt32Data>
   43ff0:	mov	r8, r0
   43ff4:	b	43d1c <Mat_VarRead5+0x10b0>
   43ff8:	ldr	ip, [fp, #20]
   43ffc:	mov	r2, r0
   44000:	mov	r0, r5
   44004:	ldr	r1, [r4, #52]	; 0x34
   44008:	ldr	r3, [sp, #8]
   4400c:	str	ip, [sp]
   44010:	ldr	r1, [r1, #12]
   44014:	bl	15e50 <ReadCompressedUInt16Data>
   44018:	mov	r8, r0
   4401c:	b	43d1c <Mat_VarRead5+0x10b0>
   44020:	ldr	ip, [fp, #20]
   44024:	mov	r2, r0
   44028:	mov	r0, r5
   4402c:	ldr	r1, [r4, #52]	; 0x34
   44030:	ldr	r3, [sp, #8]
   44034:	str	ip, [sp]
   44038:	ldr	r1, [r1, #12]
   4403c:	bl	163c4 <ReadCompressedInt8Data>
   44040:	mov	r8, r0
   44044:	b	43d1c <Mat_VarRead5+0x10b0>
   44048:	ldr	r2, [fp, #20]
   4404c:	mov	r0, r5
   44050:	ldr	r3, [sp, #8]
   44054:	str	r2, [sp]
   44058:	ldr	r2, [sl]
   4405c:	bl	14874 <ReadCompressedUInt64Data>
   44060:	mov	r8, r0
   44064:	ldr	r3, [r4, #52]	; 0x34
   44068:	b	43e08 <Mat_VarRead5+0x119c>
   4406c:	ldr	r2, [fp, #20]
   44070:	mov	r0, r5
   44074:	ldr	r3, [sp, #8]
   44078:	str	r2, [sp]
   4407c:	ldr	r2, [sl]
   44080:	bl	142d4 <ReadCompressedInt64Data>
   44084:	mov	r8, r0
   44088:	ldr	r3, [r4, #52]	; 0x34
   4408c:	b	43e08 <Mat_VarRead5+0x119c>
   44090:	mov	r7, #1
   44094:	mov	r0, r5
   44098:	ldr	r1, [sl, #4]
   4409c:	ldr	r2, [sp, #16]
   440a0:	ldr	r3, [fp, #20]
   440a4:	bl	14850 <ReadUInt64Data>
   440a8:	cmp	r7, #0
   440ac:	beq	43ea4 <Mat_VarRead5+0x1238>
   440b0:	b	43ea0 <Mat_VarRead5+0x1234>
   440b4:	mov	r7, #1
   440b8:	mov	r0, r5
   440bc:	ldr	r1, [sl, #4]
   440c0:	ldr	r2, [sp, #16]
   440c4:	ldr	r3, [fp, #20]
   440c8:	bl	142b0 <ReadInt64Data>
   440cc:	b	440a8 <Mat_VarRead5+0x143c>
   440d0:	mov	r7, #1
   440d4:	mov	r0, r5
   440d8:	ldr	r1, [sl, #4]
   440dc:	ldr	r2, [sp, #16]
   440e0:	ldr	r3, [fp, #20]
   440e4:	bl	126c8 <ReadDoubleData>
   440e8:	b	440a8 <Mat_VarRead5+0x143c>
   440ec:	mov	r7, #1
   440f0:	mov	r0, r5
   440f4:	ldr	r1, [sl, #4]
   440f8:	ldr	r2, [sp, #16]
   440fc:	ldr	r3, [fp, #20]
   44100:	bl	13cfc <ReadSingleData>
   44104:	b	440a8 <Mat_VarRead5+0x143c>
   44108:	mov	r7, #1
   4410c:	mov	r0, r5
   44110:	ldr	r1, [sl, #4]
   44114:	ldr	r2, [sp, #16]
   44118:	ldr	r3, [fp, #20]
   4411c:	bl	15354 <ReadUInt32Data>
   44120:	b	440a8 <Mat_VarRead5+0x143c>
   44124:	mov	r7, #1
   44128:	mov	r0, r5
   4412c:	ldr	r1, [sl, #4]
   44130:	ldr	r2, [sp, #16]
   44134:	ldr	r3, [fp, #20]
   44138:	bl	14df0 <ReadInt32Data>
   4413c:	b	440a8 <Mat_VarRead5+0x143c>
   44140:	mov	r7, #1
   44144:	mov	r0, r5
   44148:	ldr	r1, [sl, #4]
   4414c:	ldr	r2, [sp, #16]
   44150:	ldr	r3, [fp, #20]
   44154:	bl	15e2c <ReadUInt16Data>
   44158:	b	440a8 <Mat_VarRead5+0x143c>
   4415c:	mov	r7, #1
   44160:	mov	r0, r5
   44164:	ldr	r1, [sl, #4]
   44168:	ldr	r2, [sp, #16]
   4416c:	ldr	r3, [fp, #20]
   44170:	bl	158b8 <ReadInt16Data>
   44174:	b	440a8 <Mat_VarRead5+0x143c>
   44178:	mov	r7, #1
   4417c:	mov	r0, r5
   44180:	ldr	r1, [sl, #4]
   44184:	ldr	r2, [sp, #16]
   44188:	ldr	r3, [fp, #20]
   4418c:	bl	169a4 <ReadUInt8Data>
   44190:	b	440a8 <Mat_VarRead5+0x143c>
   44194:	mov	r7, #1
   44198:	mov	r0, r5
   4419c:	ldr	r1, [sl, #4]
   441a0:	ldr	r2, [sp, #16]
   441a4:	ldr	r3, [fp, #20]
   441a8:	bl	163a0 <ReadInt8Data>
   441ac:	b	440a8 <Mat_VarRead5+0x143c>
   441b0:	ldr	r0, [sp, #36]	; 0x24
   441b4:	b	43ea4 <Mat_VarRead5+0x1238>
   441b8:	mov	r0, r8
   441bc:	bl	18f8 <Mat_uint32Swap>
   441c0:	b	43d74 <Mat_VarRead5+0x1108>
   441c4:	mov	r0, r5
   441c8:	ldr	r2, [sp, #8]
   441cc:	ldr	r3, [fp, #20]
   441d0:	bl	14df0 <ReadInt32Data>
   441d4:	mov	r8, r0
   441d8:	b	43be8 <Mat_VarRead5+0xf7c>
   441dc:	mov	r0, r5
   441e0:	ldr	r2, [sp, #8]
   441e4:	ldr	r3, [fp, #20]
   441e8:	bl	15e2c <ReadUInt16Data>
   441ec:	mov	r8, r0
   441f0:	b	43be8 <Mat_VarRead5+0xf7c>
   441f4:	mov	r0, r5
   441f8:	ldr	r2, [sp, #8]
   441fc:	ldr	r3, [fp, #20]
   44200:	bl	158b8 <ReadInt16Data>
   44204:	mov	r8, r0
   44208:	b	43be8 <Mat_VarRead5+0xf7c>
   4420c:	mov	r0, r5
   44210:	ldr	r2, [sp, #8]
   44214:	ldr	r3, [fp, #20]
   44218:	bl	169a4 <ReadUInt8Data>
   4421c:	mov	r8, r0
   44220:	b	43be8 <Mat_VarRead5+0xf7c>
   44224:	ldr	ip, [fp, #20]
   44228:	mov	r2, r0
   4422c:	mov	r0, r5
   44230:	ldr	r1, [r4, #52]	; 0x34
   44234:	ldr	r3, [sp, #8]
   44238:	str	ip, [sp]
   4423c:	ldr	r1, [r1, #12]
   44240:	bl	14874 <ReadCompressedUInt64Data>
   44244:	mov	r8, r0
   44248:	b	43d1c <Mat_VarRead5+0x10b0>
   4424c:	mov	r0, r5
   44250:	ldr	r2, [sp, #8]
   44254:	ldr	r3, [fp, #20]
   44258:	bl	163a0 <ReadInt8Data>
   4425c:	mov	r8, r0
   44260:	b	43be8 <Mat_VarRead5+0xf7c>
   44264:	ldr	ip, [fp, #20]
   44268:	mov	r2, r0
   4426c:	mov	r0, r5
   44270:	ldr	r1, [r4, #52]	; 0x34
   44274:	ldr	r3, [sp, #8]
   44278:	str	ip, [sp]
   4427c:	ldr	r1, [r1, #12]
   44280:	bl	158dc <ReadCompressedInt16Data>
   44284:	mov	r8, r0
   44288:	b	43d1c <Mat_VarRead5+0x10b0>
   4428c:	ldr	ip, [fp, #20]
   44290:	mov	r2, r0
   44294:	mov	r0, r5
   44298:	ldr	r1, [r4, #52]	; 0x34
   4429c:	ldr	r3, [sp, #8]
   442a0:	str	ip, [sp]
   442a4:	ldr	r1, [r1, #12]
   442a8:	bl	169c8 <ReadCompressedUInt8Data>
   442ac:	mov	r8, r0
   442b0:	b	43d1c <Mat_VarRead5+0x10b0>
   442b4:	mov	r0, r5
   442b8:	ldr	r1, [sl]
   442bc:	ldr	r2, [sp, #8]
   442c0:	ldr	r3, [fp, #20]
   442c4:	bl	142b0 <ReadInt64Data>
   442c8:	mov	r8, r0
   442cc:	b	43b20 <Mat_VarRead5+0xeb4>
   442d0:	ldr	ip, [fp, #20]
   442d4:	mov	r2, r0
   442d8:	mov	r0, r5
   442dc:	ldr	r1, [r4, #52]	; 0x34
   442e0:	ldr	r3, [sp, #8]
   442e4:	str	ip, [sp]
   442e8:	ldr	r1, [r1, #12]
   442ec:	bl	142d4 <ReadCompressedInt64Data>
   442f0:	mov	r8, r0
   442f4:	b	43d1c <Mat_VarRead5+0x10b0>
   442f8:	mov	r0, r5
   442fc:	ldr	r2, [sp, #8]
   44300:	ldr	r3, [fp, #20]
   44304:	bl	142b0 <ReadInt64Data>
   44308:	mov	r8, r0
   4430c:	b	43be8 <Mat_VarRead5+0xf7c>
   44310:	mov	r0, r5
   44314:	ldr	r2, [sp, #8]
   44318:	ldr	r3, [fp, #20]
   4431c:	bl	13cfc <ReadSingleData>
   44320:	mov	r8, r0
   44324:	b	43be8 <Mat_VarRead5+0xf7c>
   44328:	mov	r0, r5
   4432c:	ldr	r2, [sp, #8]
   44330:	ldr	r3, [fp, #20]
   44334:	bl	15354 <ReadUInt32Data>
   44338:	mov	r8, r0
   4433c:	b	43be8 <Mat_VarRead5+0xf7c>
   44340:	mov	r2, r7
   44344:	mov	r0, r5
   44348:	ldr	r3, [sp, #24]
   4434c:	ldr	r1, [r4, #40]	; 0x28
   44350:	bl	170e4 <ReadCharData>
   44354:	cmp	r9, #0
   44358:	addne	r0, r0, #4
   4435c:	ands	r1, r0, #7
   44360:	beq	43444 <Mat_VarRead5+0x7d8>
   44364:	rsbs	r3, r0, #0
   44368:	mov	r2, #1
   4436c:	ldr	r0, [r5]
   44370:	and	r3, r3, #7
   44374:	rsbpl	r1, r3, #0
   44378:	rsb	r1, r1, #8
   4437c:	bl	1694 <fseek@plt>
   44380:	ldr	r3, [r4, #16]
   44384:	b	42dec <Mat_VarRead5+0x180>
   44388:	mov	r0, r5
   4438c:	ldr	r1, [sl]
   44390:	ldr	r2, [sp, #8]
   44394:	ldr	r3, [fp, #20]
   44398:	bl	163a0 <ReadInt8Data>
   4439c:	mov	r8, r0
   443a0:	b	43b20 <Mat_VarRead5+0xeb4>
   443a4:	mov	r0, r5
   443a8:	ldr	r1, [sl]
   443ac:	ldr	r2, [sp, #8]
   443b0:	ldr	r3, [fp, #20]
   443b4:	bl	158b8 <ReadInt16Data>
   443b8:	mov	r8, r0
   443bc:	b	43b20 <Mat_VarRead5+0xeb4>
   443c0:	mov	r0, r5
   443c4:	ldr	r1, [sl]
   443c8:	ldr	r2, [sp, #8]
   443cc:	ldr	r3, [fp, #20]
   443d0:	bl	169a4 <ReadUInt8Data>
   443d4:	mov	r8, r0
   443d8:	b	43b20 <Mat_VarRead5+0xeb4>
   443dc:	mov	r0, r5
   443e0:	ldr	r1, [sl]
   443e4:	ldr	r2, [sp, #8]
   443e8:	ldr	r3, [fp, #20]
   443ec:	bl	13cfc <ReadSingleData>
   443f0:	mov	r8, r0
   443f4:	b	43b20 <Mat_VarRead5+0xeb4>
   443f8:	mov	r0, r5
   443fc:	ldr	r1, [sl]
   44400:	ldr	r2, [sp, #8]
   44404:	ldr	r3, [fp, #20]
   44408:	bl	15354 <ReadUInt32Data>
   4440c:	mov	r8, r0
   44410:	b	43b20 <Mat_VarRead5+0xeb4>
   44414:	mov	r0, r5
   44418:	ldr	r1, [sl]
   4441c:	ldr	r2, [sp, #8]
   44420:	ldr	r3, [fp, #20]
   44424:	bl	14df0 <ReadInt32Data>
   44428:	mov	r8, r0
   4442c:	b	43b20 <Mat_VarRead5+0xeb4>
   44430:	.word	0x0000b5d8
   44434:	.word	0x0000b3a8
   44438:	.word	0x0000b454
   4443c:	.word	0x0000b560
   44440:	.word	0x0000b3e4
   44444:	.word	0x0000b3b4
   44448:	.word	0x0000b2bc
   4444c:	.word	0x0000b20c
   44450:	.word	0x0000b15c
   44454:	.word	0x0000b094
   44458:	.word	0x0000addc
   4445c:	.word	0x0000ad20
   44460:	.word	0x0000ad48
   44464:	mov	r0, r5
   44468:	ldr	r1, [sl]
   4446c:	ldr	r2, [sp, #8]
   44470:	ldr	r3, [fp, #20]
   44474:	bl	15e2c <ReadUInt16Data>
   44478:	mov	r8, r0
   4447c:	b	43b20 <Mat_VarRead5+0xeb4>
   44480:	mov	r0, r5
   44484:	ldr	r1, [sl]
   44488:	ldr	r2, [sp, #8]
   4448c:	ldr	r3, [fp, #20]
   44490:	bl	14850 <ReadUInt64Data>
   44494:	mov	r8, r0
   44498:	b	43b20 <Mat_VarRead5+0xeb4>
   4449c:	mov	r0, r5
   444a0:	ldr	r2, [sp, #8]
   444a4:	ldr	r3, [fp, #20]
   444a8:	bl	14850 <ReadUInt64Data>
   444ac:	mov	r8, r0
   444b0:	b	43be8 <Mat_VarRead5+0xf7c>
   444b4:	ldr	r2, [fp, #20]
   444b8:	mov	r0, r5
   444bc:	ldr	r3, [sp, #8]
   444c0:	str	r2, [sp]
   444c4:	ldr	r2, [sl]
   444c8:	bl	158dc <ReadCompressedInt16Data>
   444cc:	mov	r8, r0
   444d0:	ldr	r3, [r4, #52]	; 0x34
   444d4:	b	43e08 <Mat_VarRead5+0x119c>
   444d8:	ldr	r2, [fp, #20]
   444dc:	mov	r0, r5
   444e0:	ldr	r3, [sp, #8]
   444e4:	str	r2, [sp]
   444e8:	ldr	r2, [sl]
   444ec:	bl	169c8 <ReadCompressedUInt8Data>
   444f0:	mov	r8, r0
   444f4:	ldr	r3, [r4, #52]	; 0x34
   444f8:	b	43e08 <Mat_VarRead5+0x119c>
   444fc:	mov	r7, #1
   44500:	ldr	r2, [fp, #20]
   44504:	mov	r0, r5
   44508:	ldr	r1, [r4, #52]	; 0x34
   4450c:	str	r2, [sp]
   44510:	ldr	r2, [sl, #4]
   44514:	ldr	r1, [r1, #12]
   44518:	bl	14874 <ReadCompressedUInt64Data>
   4451c:	cmp	r7, #0
   44520:	beq	44528 <Mat_VarRead5+0x18bc>
   44524:	add	r0, r0, #4
   44528:	ands	r2, r0, #7
   4452c:	beq	43bcc <Mat_VarRead5+0xf60>
   44530:	ldr	r1, [r4, #52]	; 0x34
   44534:	rsbs	r3, r0, #0
   44538:	mov	r0, r5
   4453c:	and	r3, r3, #7
   44540:	rsbpl	r2, r3, #0
   44544:	rsb	r2, r2, #8
   44548:	ldr	r1, [r1, #12]
   4454c:	bl	1f90 <InflateSkip>
   44550:	b	43bcc <Mat_VarRead5+0xf60>
   44554:	mov	r7, #1
   44558:	ldr	r2, [fp, #20]
   4455c:	mov	r0, r5
   44560:	ldr	r1, [r4, #52]	; 0x34
   44564:	str	r2, [sp]
   44568:	ldr	r2, [sl, #4]
   4456c:	ldr	r1, [r1, #12]
   44570:	bl	142d4 <ReadCompressedInt64Data>
   44574:	b	4451c <Mat_VarRead5+0x18b0>
   44578:	mov	r7, #1
   4457c:	ldr	r2, [fp, #20]
   44580:	mov	r0, r5
   44584:	ldr	r1, [r4, #52]	; 0x34
   44588:	str	r2, [sp]
   4458c:	ldr	r2, [sl, #4]
   44590:	ldr	r1, [r1, #12]
   44594:	bl	126ec <ReadCompressedDoubleData>
   44598:	b	4451c <Mat_VarRead5+0x18b0>
   4459c:	mov	r7, #1
   445a0:	ldr	r2, [fp, #20]
   445a4:	mov	r0, r5
   445a8:	ldr	r1, [r4, #52]	; 0x34
   445ac:	str	r2, [sp]
   445b0:	ldr	r2, [sl, #4]
   445b4:	ldr	r1, [r1, #12]
   445b8:	bl	13d20 <ReadCompressedSingleData>
   445bc:	b	4451c <Mat_VarRead5+0x18b0>
   445c0:	mov	r7, #1
   445c4:	ldr	r2, [fp, #20]
   445c8:	mov	r0, r5
   445cc:	ldr	r1, [r4, #52]	; 0x34
   445d0:	str	r2, [sp]
   445d4:	ldr	r2, [sl, #4]
   445d8:	ldr	r1, [r1, #12]
   445dc:	bl	15378 <ReadCompressedUInt32Data>
   445e0:	b	4451c <Mat_VarRead5+0x18b0>
   445e4:	mov	r7, #1
   445e8:	ldr	r2, [fp, #20]
   445ec:	mov	r0, r5
   445f0:	ldr	r1, [r4, #52]	; 0x34
   445f4:	str	r2, [sp]
   445f8:	ldr	r2, [sl, #4]
   445fc:	ldr	r1, [r1, #12]
   44600:	bl	14e14 <ReadCompressedInt32Data>
   44604:	b	4451c <Mat_VarRead5+0x18b0>
   44608:	mov	r7, #1
   4460c:	ldr	r2, [fp, #20]
   44610:	mov	r0, r5
   44614:	ldr	r1, [r4, #52]	; 0x34
   44618:	str	r2, [sp]
   4461c:	ldr	r2, [sl, #4]
   44620:	ldr	r1, [r1, #12]
   44624:	bl	15e50 <ReadCompressedUInt16Data>
   44628:	b	4451c <Mat_VarRead5+0x18b0>
   4462c:	mov	r7, #1
   44630:	ldr	r2, [fp, #20]
   44634:	mov	r0, r5
   44638:	ldr	r1, [r4, #52]	; 0x34
   4463c:	str	r2, [sp]
   44640:	ldr	r2, [sl, #4]
   44644:	ldr	r1, [r1, #12]
   44648:	bl	158dc <ReadCompressedInt16Data>
   4464c:	b	4451c <Mat_VarRead5+0x18b0>
   44650:	mov	r7, #1
   44654:	ldr	r2, [fp, #20]
   44658:	mov	r0, r5
   4465c:	ldr	r1, [r4, #52]	; 0x34
   44660:	str	r2, [sp]
   44664:	ldr	r2, [sl, #4]
   44668:	ldr	r1, [r1, #12]
   4466c:	bl	169c8 <ReadCompressedUInt8Data>
   44670:	b	4451c <Mat_VarRead5+0x18b0>
   44674:	mov	r7, #1
   44678:	ldr	r2, [fp, #20]
   4467c:	mov	r0, r5
   44680:	ldr	r1, [r4, #52]	; 0x34
   44684:	str	r2, [sp]
   44688:	ldr	r2, [sl, #4]
   4468c:	ldr	r1, [r1, #12]
   44690:	bl	163c4 <ReadCompressedInt8Data>
   44694:	b	4451c <Mat_VarRead5+0x18b0>
   44698:	lsr	r0, r0, #16
   4469c:	b	44524 <Mat_VarRead5+0x18b8>
   446a0:	ldr	r1, [r4, #52]	; 0x34
   446a4:	add	r8, sp, #36	; 0x24
   446a8:	mov	r0, r5
   446ac:	mov	r2, r8
   446b0:	str	r3, [sp, #8]
   446b4:	ldr	r1, [r1, #12]
   446b8:	bl	2f74 <InflateDataType>
   446bc:	cmp	r9, #0
   446c0:	ldr	r3, [sp, #8]
   446c4:	bne	44748 <Mat_VarRead5+0x1adc>
   446c8:	ldr	r2, [r4, #8]
   446cc:	sub	r2, r2, #1
   446d0:	cmp	r2, #12
   446d4:	addls	pc, pc, r2, lsl #2
   446d8:	b	44740 <Mat_VarRead5+0x1ad4>
   446dc:	b	44678 <Mat_VarRead5+0x1a0c>
   446e0:	b	44654 <Mat_VarRead5+0x19e8>
   446e4:	b	44630 <Mat_VarRead5+0x19c4>
   446e8:	b	4460c <Mat_VarRead5+0x19a0>
   446ec:	b	445e8 <Mat_VarRead5+0x197c>
   446f0:	b	445c4 <Mat_VarRead5+0x1958>
   446f4:	b	445a0 <Mat_VarRead5+0x1934>
   446f8:	b	44740 <Mat_VarRead5+0x1ad4>
   446fc:	b	4457c <Mat_VarRead5+0x1910>
   44700:	b	44740 <Mat_VarRead5+0x1ad4>
   44704:	b	44740 <Mat_VarRead5+0x1ad4>
   44708:	b	44558 <Mat_VarRead5+0x18ec>
   4470c:	b	44500 <Mat_VarRead5+0x1894>
   44710:	ldr	r0, [sp, #12]
   44714:	bl	18f8 <Mat_uint32Swap>
   44718:	b	43e34 <Mat_VarRead5+0x11c8>
   4471c:	rsbs	r8, r8, #0
   44720:	ldr	r1, [r3, #12]
   44724:	mov	r0, r5
   44728:	and	r3, r8, #7
   4472c:	rsbpl	r2, r3, #0
   44730:	rsb	r2, r2, #8
   44734:	bl	1f90 <InflateSkip>
   44738:	ldr	r3, [r4, #52]	; 0x34
   4473c:	b	43e1c <Mat_VarRead5+0x11b0>
   44740:	ldr	r0, [sp, #36]	; 0x24
   44744:	b	44528 <Mat_VarRead5+0x18bc>
   44748:	mov	r0, r8
   4474c:	bl	18f8 <Mat_uint32Swap>
   44750:	ldr	r3, [sp, #8]
   44754:	b	446c8 <Mat_VarRead5+0x1a5c>

00044758 <ReadNextCell>:
   44758:	mov	r3, #1
   4475c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   44760:	strd	r6, [sp, #8]
   44764:	mov	r7, r1
   44768:	strd	r8, [sp, #16]
   4476c:	strd	sl, [sp, #24]
   44770:	mov	sl, r0
   44774:	mov	r0, r7
   44778:	str	lr, [sp, #32]
   4477c:	sub	sp, sp, #116	; 0x74
   44780:	add	r1, sp, #40	; 0x28
   44784:	str	r3, [sp, #40]	; 0x28
   44788:	bl	4996c <SafeMulDims>
   4478c:	cmp	r0, #0
   44790:	bne	4496c <ReadNextCell+0x214>
   44794:	mov	r3, #4
   44798:	mov	r0, r7
   4479c:	ldr	r1, [sp, #40]	; 0x28
   447a0:	mov	r2, r3
   447a4:	str	r3, [r7, #12]
   447a8:	bl	499ec <SafeMul>
   447ac:	subs	r6, r0, #0
   447b0:	bne	4496c <ReadNextCell+0x214>
   447b4:	ldr	r4, [sp, #40]	; 0x28
   447b8:	ldr	r1, [r7, #12]
   447bc:	mov	r0, r4
   447c0:	bl	140c <calloc@plt>
   447c4:	cmp	r0, #0
   447c8:	mov	r5, r0
   447cc:	str	r0, [r7, #40]	; 0x28
   447d0:	beq	44e7c <ReadNextCell+0x724>
   447d4:	ldr	r3, [r7, #48]	; 0x30
   447d8:	cmp	r3, #1
   447dc:	beq	44a9c <ReadNextCell+0x344>
   447e0:	cmp	r4, #0
   447e4:	beq	4497c <ReadNextCell+0x224>
   447e8:	ldr	r3, [pc, #2420]	; 45164 <ReadNextCell+0xa0c>
   447ec:	mov	r4, r6
   447f0:	add	r8, sp, #48	; 0x30
   447f4:	ldr	r9, [pc, #2412]	; 45168 <ReadNextCell+0xa10>
   447f8:	add	r3, pc, r3
   447fc:	add	r9, pc, r9
   44800:	str	r3, [sp, #12]
   44804:	bl	1508 <Mat_VarCalloc@plt>
   44808:	cmp	r0, #0
   4480c:	mov	fp, r5
   44810:	str	r0, [r5], #4
   44814:	beq	449d0 <ReadNextCell+0x278>
   44818:	mov	r2, #2
   4481c:	mov	r1, #4
   44820:	ldr	r3, [sl]
   44824:	mov	r0, r8
   44828:	bl	1520 <fread@plt>
   4482c:	cmp	r0, #0
   44830:	beq	44958 <ReadNextCell+0x200>
   44834:	ldr	r3, [sl, #20]
   44838:	add	r4, r4, r0
   4483c:	cmp	r3, #0
   44840:	bne	4499c <ReadNextCell+0x244>
   44844:	ldr	r7, [sp, #52]	; 0x34
   44848:	cmp	r7, #0
   4484c:	beq	449b8 <ReadNextCell+0x260>
   44850:	ldr	r3, [sp, #48]	; 0x30
   44854:	cmp	r3, #14
   44858:	bne	44ea0 <ReadNextCell+0x748>
   4485c:	mov	r2, #6
   44860:	mov	r1, #4
   44864:	ldr	r3, [sl]
   44868:	mov	r0, r8
   4486c:	bl	1520 <fread@plt>
   44870:	ldr	r3, [sl, #20]
   44874:	add	r4, r4, r0
   44878:	cmp	r3, #0
   4487c:	bne	44a68 <ReadNextCell+0x310>
   44880:	ldr	r3, [sp, #48]	; 0x30
   44884:	sub	r7, r7, #24
   44888:	ldr	r2, [r5, #-4]
   4488c:	cmp	r3, #6
   44890:	beq	44a18 <ReadNextCell+0x2c0>
   44894:	ldr	lr, [sp, #64]	; 0x40
   44898:	add	r3, r2, #32
   4489c:	add	r1, sl, #20
   448a0:	add	r2, r2, #4
   448a4:	mov	r0, sl
   448a8:	ldr	ip, [sp, #68]	; 0x44
   448ac:	str	lr, [sp]
   448b0:	str	ip, [sp, #4]
   448b4:	bl	40820 <ReadRankDims.isra.2>
   448b8:	mov	ip, r0
   448bc:	mov	r2, #8
   448c0:	ldr	r3, [sl]
   448c4:	mov	r1, #1
   448c8:	mov	r0, r8
   448cc:	add	r4, r4, ip
   448d0:	sub	r7, r7, ip
   448d4:	bl	1520 <fread@plt>
   448d8:	ldr	r3, [sl, #20]
   448dc:	sub	r7, r7, #8
   448e0:	add	r4, r4, r0
   448e4:	cmp	r3, #0
   448e8:	bne	44a54 <ReadNextCell+0x2fc>
   448ec:	ldr	r1, [sp, #52]	; 0x34
   448f0:	cmp	r1, #0
   448f4:	beq	44904 <ReadNextCell+0x1ac>
   448f8:	ldr	r3, [sp, #48]	; 0x30
   448fc:	cmp	r3, #1
   44900:	beq	449e0 <ReadNextCell+0x288>
   44904:	ldr	r3, [r5, #-4]
   44908:	ldr	r0, [sl]
   4490c:	ldr	fp, [r3, #52]	; 0x34
   44910:	bl	14b4 <ftell@plt>
   44914:	ldr	r1, [r5, #-4]
   44918:	ldr	r3, [r1, #52]	; 0x34
   4491c:	str	r0, [fp]
   44920:	ldr	r3, [r3]
   44924:	cmn	r3, #1
   44928:	beq	44dec <ReadNextCell+0x694>
   4492c:	ldr	r3, [r1, #16]
   44930:	cmp	r3, #2
   44934:	beq	44e50 <ReadNextCell+0x6f8>
   44938:	cmp	r3, #1
   4493c:	beq	44e68 <ReadNextCell+0x710>
   44940:	ldr	r3, [r1, #52]	; 0x34
   44944:	mov	r2, #0
   44948:	ldr	r0, [sl]
   4494c:	ldr	r1, [r3]
   44950:	add	r1, r7, r1
   44954:	bl	1694 <fseek@plt>
   44958:	ldr	r3, [sp, #40]	; 0x28
   4495c:	add	r6, r6, #1
   44960:	cmp	r3, r6
   44964:	bhi	44804 <ReadNextCell+0xac>
   44968:	b	4497c <ReadNextCell+0x224>
   4496c:	ldr	r0, [pc, #2040]	; 4516c <ReadNextCell+0xa14>
   44970:	mov	r4, #0
   44974:	add	r0, pc, r0
   44978:	bl	161c <Mat_Critical@plt>
   4497c:	mov	r0, r4
   44980:	add	sp, sp, #116	; 0x74
   44984:	ldrd	r4, [sp]
   44988:	ldrd	r6, [sp, #8]
   4498c:	ldrd	r8, [sp, #16]
   44990:	ldrd	sl, [sp, #24]
   44994:	add	sp, sp, #32
   44998:	pop	{pc}		; (ldr pc, [sp], #4)
   4499c:	mov	r0, r8
   449a0:	bl	18f8 <Mat_uint32Swap>
   449a4:	add	r0, sp, #52	; 0x34
   449a8:	bl	18f8 <Mat_uint32Swap>
   449ac:	ldr	r7, [sp, #52]	; 0x34
   449b0:	cmp	r7, #0
   449b4:	bne	44850 <ReadNextCell+0xf8>
   449b8:	ldr	r3, [r5, #-4]
   449bc:	ldr	r0, [r3, #52]	; 0x34
   449c0:	bl	1478 <free@plt>
   449c4:	ldr	r3, [r5, #-4]
   449c8:	str	r7, [r3, #52]	; 0x34
   449cc:	b	44958 <ReadNextCell+0x200>
   449d0:	mov	r1, r6
   449d4:	mov	r0, r9
   449d8:	bl	161c <Mat_Critical@plt>
   449dc:	b	44958 <ReadNextCell+0x200>
   449e0:	mov	r3, r1
   449e4:	rsbs	r1, r1, #0
   449e8:	ldr	r0, [sl]
   449ec:	and	r1, r1, #7
   449f0:	and	r2, r3, #7
   449f4:	rsbpl	r2, r1, #0
   449f8:	cmp	r2, #0
   449fc:	rsbgt	r2, r2, #8
   44a00:	addgt	r3, r3, r2
   44a04:	mov	r2, #1
   44a08:	mov	r1, r3
   44a0c:	sub	r7, r7, r3
   44a10:	bl	1694 <fseek@plt>
   44a14:	b	44904 <ReadNextCell+0x1ac>
   44a18:	ldr	r3, [sp, #56]	; 0x38
   44a1c:	uxtb	r1, r3
   44a20:	and	ip, r3, #2048	; 0x800
   44a24:	cmp	r1, #17
   44a28:	and	r0, r3, #1024	; 0x400
   44a2c:	and	r3, r3, #512	; 0x200
   44a30:	bhi	44e38 <ReadNextCell+0x6e0>
   44a34:	cmp	r1, #5
   44a38:	str	r1, [r2, #16]
   44a3c:	str	ip, [r2, #20]
   44a40:	str	r0, [r2, #24]
   44a44:	str	r3, [r2, #28]
   44a48:	ldreq	r3, [sp, #60]	; 0x3c
   44a4c:	streq	r3, [r2]
   44a50:	b	44894 <ReadNextCell+0x13c>
   44a54:	mov	r0, r8
   44a58:	bl	18f8 <Mat_uint32Swap>
   44a5c:	add	r0, sp, #52	; 0x34
   44a60:	bl	18f8 <Mat_uint32Swap>
   44a64:	b	448ec <ReadNextCell+0x194>
   44a68:	mov	r0, r8
   44a6c:	bl	18f8 <Mat_uint32Swap>
   44a70:	add	r0, sp, #52	; 0x34
   44a74:	bl	18f8 <Mat_uint32Swap>
   44a78:	add	r0, sp, #56	; 0x38
   44a7c:	bl	18f8 <Mat_uint32Swap>
   44a80:	add	r0, sp, #60	; 0x3c
   44a84:	bl	18f8 <Mat_uint32Swap>
   44a88:	add	r0, sp, #64	; 0x40
   44a8c:	bl	18f8 <Mat_uint32Swap>
   44a90:	add	r0, sp, #68	; 0x44
   44a94:	bl	18f8 <Mat_uint32Swap>
   44a98:	b	44880 <ReadNextCell+0x128>
   44a9c:	add	fp, sp, #48	; 0x30
   44aa0:	mov	r2, #64	; 0x40
   44aa4:	mov	r0, fp
   44aa8:	mov	r1, r6
   44aac:	bl	15f8 <memset@plt>
   44ab0:	cmp	r4, #0
   44ab4:	beq	4497c <ReadNextCell+0x224>
   44ab8:	ldr	r3, [pc, #1712]	; 45170 <ReadNextCell+0xa18>
   44abc:	mov	r4, r6
   44ac0:	mov	r8, fp
   44ac4:	add	r3, pc, r3
   44ac8:	str	r3, [sp, #20]
   44acc:	ldr	r3, [pc, #1696]	; 45174 <ReadNextCell+0xa1c>
   44ad0:	add	r3, pc, r3
   44ad4:	str	r3, [sp, #16]
   44ad8:	ldr	r3, [pc, #1688]	; 45178 <ReadNextCell+0xa20>
   44adc:	add	r3, pc, r3
   44ae0:	str	r3, [sp, #24]
   44ae4:	bl	1508 <Mat_VarCalloc@plt>
   44ae8:	cmp	r0, #0
   44aec:	mov	r9, r5
   44af0:	str	r0, [r5], #4
   44af4:	beq	44df8 <ReadNextCell+0x6a0>
   44af8:	mov	r3, #0
   44afc:	mov	r2, r8
   44b00:	mov	r1, r7
   44b04:	mov	r0, sl
   44b08:	str	r3, [sp, #48]	; 0x30
   44b0c:	str	r3, [sp, #52]	; 0x34
   44b10:	bl	240c <InflateVarTag>
   44b14:	ldr	r3, [sl, #20]
   44b18:	add	r4, r4, r0
   44b1c:	cmp	r3, #0
   44b20:	bne	44db4 <ReadNextCell+0x65c>
   44b24:	ldr	fp, [sp, #52]	; 0x34
   44b28:	ldr	r0, [r5, #-4]
   44b2c:	cmp	fp, #0
   44b30:	beq	44e0c <ReadNextCell+0x6b4>
   44b34:	ldr	r3, [sp, #48]	; 0x30
   44b38:	cmp	r3, #14
   44b3c:	bne	44f88 <ReadNextCell+0x830>
   44b40:	mov	r3, #1
   44b44:	mov	r2, r8
   44b48:	mov	r1, r7
   44b4c:	sub	r9, fp, #16
   44b50:	str	r3, [r0, #48]	; 0x30
   44b54:	mov	r0, sl
   44b58:	bl	259c <InflateArrayFlags>
   44b5c:	ldr	r3, [sl, #20]
   44b60:	add	r4, r4, r0
   44b64:	cmp	r3, #0
   44b68:	bne	44dc8 <ReadNextCell+0x670>
   44b6c:	ldr	r1, [sp, #48]	; 0x30
   44b70:	cmp	r1, #6
   44b74:	bne	44d54 <ReadNextCell+0x5fc>
   44b78:	ldr	r3, [sp, #56]	; 0x38
   44b7c:	ldr	r2, [r5, #-4]
   44b80:	uxtb	r1, r3
   44b84:	and	ip, r3, #2048	; 0x800
   44b88:	cmp	r1, #17
   44b8c:	and	r0, r3, #1024	; 0x400
   44b90:	and	r3, r3, #512	; 0x200
   44b94:	bhi	44e20 <ReadNextCell+0x6c8>
   44b98:	cmp	r1, #5
   44b9c:	str	r1, [r2, #16]
   44ba0:	str	ip, [r2, #20]
   44ba4:	str	r0, [r2, #24]
   44ba8:	str	r3, [r2, #28]
   44bac:	bne	44d80 <ReadNextCell+0x628>
   44bb0:	ldr	r3, [sp, #60]	; 0x3c
   44bb4:	str	r3, [r2]
   44bb8:	add	r1, sp, #44	; 0x2c
   44bbc:	mov	ip, #0
   44bc0:	mov	r3, #64	; 0x40
   44bc4:	mov	r2, r8
   44bc8:	mov	r0, sl
   44bcc:	str	r1, [sp]
   44bd0:	mov	r1, r7
   44bd4:	str	ip, [sp, #44]	; 0x2c
   44bd8:	bl	272c <InflateRankDims>
   44bdc:	ldr	r9, [sp, #44]	; 0x2c
   44be0:	add	r4, r4, r0
   44be4:	cmp	r9, #0
   44be8:	addeq	r3, sp, #56	; 0x38
   44bec:	movne	r3, #1
   44bf0:	streq	r9, [sp, #12]
   44bf4:	sub	r9, fp, #24
   44bf8:	streq	r3, [sp, #44]	; 0x2c
   44bfc:	strne	r3, [sp, #12]
   44c00:	ldr	r3, [sl, #20]
   44c04:	cmp	r3, #0
   44c08:	bne	44ee4 <ReadNextCell+0x78c>
   44c0c:	ldr	r3, [sp, #48]	; 0x30
   44c10:	cmp	r3, #5
   44c14:	beq	44fa8 <ReadNextCell+0x850>
   44c18:	ldr	r3, [sp, #12]
   44c1c:	cmp	r3, #0
   44c20:	bne	44f0c <ReadNextCell+0x7b4>
   44c24:	mov	r2, r8
   44c28:	mov	r1, r7
   44c2c:	mov	r0, sl
   44c30:	sub	r9, r9, #8
   44c34:	bl	2a9c <InflateVarNameTag>
   44c38:	ldr	r3, [sl, #20]
   44c3c:	add	r4, r4, r0
   44c40:	cmp	r3, #0
   44c44:	bne	44ef8 <ReadNextCell+0x7a0>
   44c48:	ldr	fp, [sp, #52]	; 0x34
   44c4c:	ldr	r3, [r5, #-4]
   44c50:	cmp	fp, #0
   44c54:	str	r3, [sp, #12]
   44c58:	beq	44c74 <ReadNextCell+0x51c>
   44c5c:	ldr	r3, [sp, #48]	; 0x30
   44c60:	cmp	r3, #1
   44c64:	beq	45034 <ReadNextCell+0x8dc>
   44c68:	uxth	r2, r3
   44c6c:	cmp	r2, #1
   44c70:	beq	44f24 <ReadNextCell+0x7cc>
   44c74:	ldr	r3, [sp, #12]
   44c78:	mov	r1, #56	; 0x38
   44c7c:	mov	r0, #1
   44c80:	ldr	fp, [r3, #52]	; 0x34
   44c84:	bl	140c <calloc@plt>
   44c88:	cmp	r0, #0
   44c8c:	str	r0, [fp, #12]
   44c90:	beq	44f18 <ReadNextCell+0x7c0>
   44c94:	ldr	r3, [r7, #52]	; 0x34
   44c98:	ldr	r1, [r3, #12]
   44c9c:	bl	15bc <inflateCopy@plt>
   44ca0:	subs	fp, r0, #0
   44ca4:	bne	44ed0 <ReadNextCell+0x778>
   44ca8:	ldr	r3, [r5, #-4]
   44cac:	ldr	r0, [sl]
   44cb0:	ldr	r3, [r3, #52]	; 0x34
   44cb4:	str	r3, [sp, #12]
   44cb8:	bl	14b4 <ftell@plt>
   44cbc:	ldr	r2, [r5, #-4]
   44cc0:	ldr	r3, [sp, #12]
   44cc4:	str	r0, [r3]
   44cc8:	ldr	r0, [r2, #52]	; 0x34
   44ccc:	ldr	r3, [r0]
   44cd0:	cmn	r3, #1
   44cd4:	beq	44f7c <ReadNextCell+0x824>
   44cd8:	ldr	r1, [r7, #52]	; 0x34
   44cdc:	ldr	ip, [r2, #16]
   44ce0:	ldr	r1, [r1, #12]
   44ce4:	cmp	ip, #2
   44ce8:	ldr	r1, [r1, #4]
   44cec:	sub	r1, r3, r1
   44cf0:	str	r1, [r0]
   44cf4:	beq	45124 <ReadNextCell+0x9cc>
   44cf8:	cmp	ip, #1
   44cfc:	beq	45144 <ReadNextCell+0x9ec>
   44d00:	cmp	r9, #32768	; 0x8000
   44d04:	ble	450f0 <ReadNextCell+0x998>
   44d08:	mov	r2, #0
   44d0c:	ldr	r0, [sl]
   44d10:	bl	1694 <fseek@plt>
   44d14:	ldr	r2, [r5, #-4]
   44d18:	ldr	r3, [r2, #52]	; 0x34
   44d1c:	ldr	r1, [r3, #16]
   44d20:	cmp	r1, #0
   44d24:	beq	45090 <ReadNextCell+0x938>
   44d28:	ldr	r0, [r3, #12]
   44d2c:	bl	15b0 <inflateEnd@plt>
   44d30:	ldr	r3, [r5, #-4]
   44d34:	ldr	r3, [r3, #52]	; 0x34
   44d38:	ldr	r0, [r3, #12]
   44d3c:	bl	1478 <free@plt>
   44d40:	ldr	r3, [r5, #-4]
   44d44:	mov	r2, #0
   44d48:	ldr	r3, [r3, #52]	; 0x34
   44d4c:	str	r2, [r3, #12]
   44d50:	b	44d88 <ReadNextCell+0x630>
   44d54:	ldr	r0, [pc, #1056]	; 4517c <ReadNextCell+0xa24>
   44d58:	add	r0, pc, r0
   44d5c:	bl	161c <Mat_Critical@plt>
   44d60:	ldr	r3, [r7, #52]	; 0x34
   44d64:	mov	r2, r9
   44d68:	mov	r0, sl
   44d6c:	ldr	r1, [r3, #12]
   44d70:	bl	1f90 <InflateSkip>
   44d74:	ldr	r3, [r5, #-4]
   44d78:	add	r4, r4, r0
   44d7c:	ldr	r1, [r3, #16]
   44d80:	cmp	r1, #17
   44d84:	bne	44bb8 <ReadNextCell+0x460>
   44d88:	ldr	r3, [r7, #52]	; 0x34
   44d8c:	mov	r2, r9
   44d90:	mov	r0, sl
   44d94:	ldr	r1, [r3, #12]
   44d98:	bl	1f90 <InflateSkip>
   44d9c:	add	r4, r4, r0
   44da0:	ldr	r3, [sp, #40]	; 0x28
   44da4:	add	r6, r6, #1
   44da8:	cmp	r3, r6
   44dac:	bhi	44ae4 <ReadNextCell+0x38c>
   44db0:	b	4497c <ReadNextCell+0x224>
   44db4:	mov	r0, r8
   44db8:	bl	18f8 <Mat_uint32Swap>
   44dbc:	add	r0, sp, #52	; 0x34
   44dc0:	bl	18f8 <Mat_uint32Swap>
   44dc4:	b	44b24 <ReadNextCell+0x3cc>
   44dc8:	mov	r0, r8
   44dcc:	bl	18f8 <Mat_uint32Swap>
   44dd0:	add	r0, sp, #52	; 0x34
   44dd4:	bl	18f8 <Mat_uint32Swap>
   44dd8:	add	r0, sp, #56	; 0x38
   44ddc:	bl	18f8 <Mat_uint32Swap>
   44de0:	add	r0, sp, #60	; 0x3c
   44de4:	bl	18f8 <Mat_uint32Swap>
   44de8:	b	44b6c <ReadNextCell+0x414>
   44dec:	ldr	r0, [sp, #12]
   44df0:	bl	161c <Mat_Critical@plt>
   44df4:	b	44958 <ReadNextCell+0x200>
   44df8:	ldr	r0, [pc, #896]	; 45180 <ReadNextCell+0xa28>
   44dfc:	mov	r1, r6
   44e00:	add	r0, pc, r0
   44e04:	bl	161c <Mat_Critical@plt>
   44e08:	b	44da0 <ReadNextCell+0x648>
   44e0c:	ldr	r0, [r0, #52]	; 0x34
   44e10:	bl	1478 <free@plt>
   44e14:	ldr	r3, [r5, #-4]
   44e18:	str	fp, [r3, #52]	; 0x34
   44e1c:	b	44da0 <ReadNextCell+0x648>
   44e20:	mov	r1, #0
   44e24:	str	r1, [r2, #16]
   44e28:	str	ip, [r2, #20]
   44e2c:	str	r0, [r2, #24]
   44e30:	str	r3, [r2, #28]
   44e34:	b	44bb8 <ReadNextCell+0x460>
   44e38:	mov	r1, #0
   44e3c:	str	r1, [r2, #16]
   44e40:	str	ip, [r2, #20]
   44e44:	str	r0, [r2, #24]
   44e48:	str	r3, [r2, #28]
   44e4c:	b	44894 <ReadNextCell+0x13c>
   44e50:	mov	r0, sl
   44e54:	bl	45190 <ReadNextStructField>
   44e58:	ldr	r1, [r5, #-4]
   44e5c:	add	r4, r4, r0
   44e60:	ldr	r3, [r1, #16]
   44e64:	b	44938 <ReadNextCell+0x1e0>
   44e68:	mov	r0, sl
   44e6c:	bl	44758 <ReadNextCell>
   44e70:	add	r4, r4, r0
   44e74:	ldr	r1, [r5, #-4]
   44e78:	b	44940 <ReadNextCell+0x1e8>
   44e7c:	ldr	r1, [r7, #36]	; 0x24
   44e80:	cmp	r1, #0
   44e84:	moveq	r4, r1
   44e88:	beq	4497c <ReadNextCell+0x224>
   44e8c:	ldr	r0, [pc, #752]	; 45184 <ReadNextCell+0xa2c>
   44e90:	mov	r4, r5
   44e94:	add	r0, pc, r0
   44e98:	bl	161c <Mat_Critical@plt>
   44e9c:	b	4497c <ReadNextCell+0x224>
   44ea0:	ldr	r0, [fp]
   44ea4:	bl	158c <Mat_VarFree@plt>
   44ea8:	mov	r3, #0
   44eac:	ldr	r0, [sl]
   44eb0:	str	r3, [fp]
   44eb4:	bl	14b4 <ftell@plt>
   44eb8:	mov	r2, r0
   44ebc:	ldr	r0, [pc, #708]	; 45188 <ReadNextCell+0xa30>
   44ec0:	mov	r1, r6
   44ec4:	add	r0, pc, r0
   44ec8:	bl	161c <Mat_Critical@plt>
   44ecc:	b	4497c <ReadNextCell+0x224>
   44ed0:	bl	14f0 <zError@plt>
   44ed4:	mov	r1, r0
   44ed8:	ldr	r0, [sp, #16]
   44edc:	bl	161c <Mat_Critical@plt>
   44ee0:	b	44d88 <ReadNextCell+0x630>
   44ee4:	mov	r0, r8
   44ee8:	bl	18f8 <Mat_uint32Swap>
   44eec:	add	r0, sp, #52	; 0x34
   44ef0:	bl	18f8 <Mat_uint32Swap>
   44ef4:	b	44c0c <ReadNextCell+0x4b4>
   44ef8:	mov	r0, r8
   44efc:	bl	18f8 <Mat_uint32Swap>
   44f00:	add	r0, sp, #52	; 0x34
   44f04:	bl	18f8 <Mat_uint32Swap>
   44f08:	b	44c48 <ReadNextCell+0x4f0>
   44f0c:	ldr	r0, [sp, #44]	; 0x2c
   44f10:	bl	1478 <free@plt>
   44f14:	b	44c24 <ReadNextCell+0x4cc>
   44f18:	ldr	r0, [sp, #20]
   44f1c:	bl	161c <Mat_Critical@plt>
   44f20:	b	44d88 <ReadNextCell+0x630>
   44f24:	lsr	fp, r3, #16
   44f28:	sub	r2, fp, #1
   44f2c:	cmp	r2, #3
   44f30:	bhi	44c74 <ReadNextCell+0x51c>
   44f34:	add	r0, fp, #1
   44f38:	str	r3, [sp, #28]
   44f3c:	bl	1544 <malloc@plt>
   44f40:	ldr	r3, [sp, #12]
   44f44:	cmp	r0, #0
   44f48:	str	r0, [r3, #36]	; 0x24
   44f4c:	beq	44c74 <ReadNextCell+0x51c>
   44f50:	mov	r2, fp
   44f54:	add	r1, sp, #52	; 0x34
   44f58:	bl	1490 <memcpy@plt>
   44f5c:	ldr	r3, [sp, #12]
   44f60:	mov	r1, #0
   44f64:	ldr	r2, [r3, #36]	; 0x24
   44f68:	ldr	r3, [sp, #28]
   44f6c:	strb	r1, [r2, r3, lsr #16]
   44f70:	ldr	r3, [r5, #-4]
   44f74:	str	r3, [sp, #12]
   44f78:	b	44c74 <ReadNextCell+0x51c>
   44f7c:	ldr	r0, [sp, #24]
   44f80:	bl	161c <Mat_Critical@plt>
   44f84:	b	44d14 <ReadNextCell+0x5bc>
   44f88:	bl	158c <Mat_VarFree@plt>
   44f8c:	ldr	r0, [pc, #504]	; 4518c <ReadNextCell+0xa34>
   44f90:	mov	r3, #0
   44f94:	mov	r1, r6
   44f98:	str	r3, [r9]
   44f9c:	add	r0, pc, r0
   44fa0:	bl	161c <Mat_Critical@plt>
   44fa4:	b	4497c <ReadNextCell+0x224>
   44fa8:	ldr	r2, [sp, #52]	; 0x34
   44fac:	ldr	r3, [r5, #-4]
   44fb0:	cmp	r2, #0
   44fb4:	add	ip, r2, #3
   44fb8:	movge	ip, r2
   44fbc:	sub	r9, r9, r2
   44fc0:	asr	ip, ip, #2
   44fc4:	str	r3, [sp, #28]
   44fc8:	lsl	r0, ip, #2
   44fcc:	str	ip, [r3, #4]
   44fd0:	str	ip, [sp, #32]
   44fd4:	str	r2, [sp, #36]	; 0x24
   44fd8:	bl	1544 <malloc@plt>
   44fdc:	mov	fp, r0
   44fe0:	ldr	r0, [sl, #20]
   44fe4:	ldr	r3, [sp, #28]
   44fe8:	ldr	r1, [sp, #32]
   44fec:	cmp	r0, #0
   44ff0:	ldr	r2, [sp, #36]	; 0x24
   44ff4:	str	fp, [r3, #32]
   44ff8:	bne	450a4 <ReadNextCell+0x94c>
   44ffc:	cmp	r2, #3
   45000:	ble	45028 <ReadNextCell+0x8d0>
   45004:	ldr	r2, [sp, #44]	; 0x2c
   45008:	sub	fp, fp, #4
   4500c:	sub	r2, r2, #4
   45010:	ldr	r1, [r2, #4]!
   45014:	add	r0, r0, #1
   45018:	str	r1, [fp, #4]!
   4501c:	ldr	r1, [r3, #4]
   45020:	cmp	r1, r0
   45024:	bgt	45010 <ReadNextCell+0x8b8>
   45028:	tst	r1, #1
   4502c:	subne	r9, r9, #4
   45030:	b	44c18 <ReadNextCell+0x4c0>
   45034:	tst	fp, #7
   45038:	bicne	r3, fp, #7
   4503c:	addne	fp, r3, #8
   45040:	add	r0, fp, #1
   45044:	sub	r9, r9, fp
   45048:	bl	1544 <malloc@plt>
   4504c:	ldr	r3, [sp, #12]
   45050:	cmp	r0, #0
   45054:	str	r0, [r3, #36]	; 0x24
   45058:	beq	44c74 <ReadNextCell+0x51c>
   4505c:	mov	r2, r0
   45060:	mov	r3, fp
   45064:	mov	r1, r7
   45068:	mov	r0, sl
   4506c:	bl	2c2c <InflateVarName>
   45070:	ldr	r3, [r5, #-4]
   45074:	mov	r2, #0
   45078:	add	r4, r4, r0
   4507c:	ldr	r3, [r3, #36]	; 0x24
   45080:	strb	r2, [r3, fp]
   45084:	ldr	r3, [r5, #-4]
   45088:	str	r3, [sp, #12]
   4508c:	b	44c74 <ReadNextCell+0x51c>
   45090:	ldr	r2, [r2, #16]
   45094:	sub	r2, r2, #1
   45098:	cmp	r2, #1
   4509c:	bls	44d28 <ReadNextCell+0x5d0>
   450a0:	b	44d88 <ReadNextCell+0x630>
   450a4:	cmp	r2, #3
   450a8:	ble	45028 <ReadNextCell+0x8d0>
   450ac:	mov	r3, #0
   450b0:	str	r4, [sp, #28]
   450b4:	mov	r4, fp
   450b8:	mov	fp, r3
   450bc:	b	450c4 <ReadNextCell+0x96c>
   450c0:	ldr	r4, [r3, #32]
   450c4:	ldr	r0, [sp, #44]	; 0x2c
   450c8:	add	r0, r0, fp, lsl #2
   450cc:	bl	18f8 <Mat_uint32Swap>
   450d0:	ldr	r3, [r5, #-4]
   450d4:	str	r0, [r4, fp, lsl #2]
   450d8:	add	fp, fp, #1
   450dc:	ldr	r1, [r3, #4]
   450e0:	cmp	r1, fp
   450e4:	bgt	450c0 <ReadNextCell+0x968>
   450e8:	ldr	r4, [sp, #28]
   450ec:	b	45028 <ReadNextCell+0x8d0>
   450f0:	mov	r1, r2
   450f4:	mov	r0, sl
   450f8:	bl	42c6c <Mat_VarRead5>
   450fc:	ldr	r3, [r5, #-4]
   45100:	ldr	r2, [r3, #40]	; 0x28
   45104:	ldr	r3, [r3, #52]	; 0x34
   45108:	str	r2, [r3, #16]
   4510c:	ldr	r3, [r5, #-4]
   45110:	str	fp, [r3, #40]	; 0x28
   45114:	ldr	r3, [r5, #-4]
   45118:	ldr	r3, [r3, #52]	; 0x34
   4511c:	ldr	r1, [r3]
   45120:	b	44d08 <ReadNextCell+0x5b0>
   45124:	mov	r1, r2
   45128:	mov	r0, sl
   4512c:	bl	45190 <ReadNextStructField>
   45130:	ldr	r3, [r5, #-4]
   45134:	add	r4, r4, r0
   45138:	ldr	r3, [r3, #52]	; 0x34
   4513c:	ldr	r1, [r3]
   45140:	b	44d08 <ReadNextCell+0x5b0>
   45144:	mov	r1, r2
   45148:	mov	r0, sl
   4514c:	bl	44758 <ReadNextCell>
   45150:	ldr	r3, [r5, #-4]
   45154:	add	r4, r4, r0
   45158:	ldr	r3, [r3, #52]	; 0x34
   4515c:	ldr	r1, [r3]
   45160:	b	44d08 <ReadNextCell+0x5b0>
   45164:	.word	0x0000a000
   45168:	.word	0x0000a29c
   4516c:	.word	0x00009f40
   45170:	.word	0x0000a07c
   45174:	.word	0x0000a050
   45178:	.word	0x00009d1c
   4517c:	.word	0x00009d98
   45180:	.word	0x00009c98
   45184:	.word	0x00009bdc
   45188:	.word	0x00009c98
   4518c:	.word	0x00009b24

00045190 <ReadNextStructField>:
   45190:	mov	r3, #1
   45194:	strd	r4, [sp, #-36]!	; 0xffffffdc
   45198:	mov	r5, r1
   4519c:	strd	r6, [sp, #8]
   451a0:	strd	r8, [sp, #16]
   451a4:	strd	sl, [sp, #24]
   451a8:	mov	sl, r0
   451ac:	mov	r0, r5
   451b0:	str	lr, [sp, #32]
   451b4:	sub	sp, sp, #132	; 0x84
   451b8:	add	r1, sp, #52	; 0x34
   451bc:	str	r3, [sp, #52]	; 0x34
   451c0:	bl	4996c <SafeMulDims>
   451c4:	subs	r1, r0, #0
   451c8:	bne	459c8 <ReadNextStructField+0x838>
   451cc:	ldr	r3, [r5, #48]	; 0x30
   451d0:	cmp	r3, #1
   451d4:	add	r3, sp, #64	; 0x40
   451d8:	beq	45534 <ReadNextStructField+0x3a4>
   451dc:	mov	r0, r3
   451e0:	mov	r2, #2
   451e4:	ldr	r3, [sl]
   451e8:	mov	r1, #4
   451ec:	str	r0, [sp, #8]
   451f0:	bl	1520 <fread@plt>
   451f4:	ldr	r3, [sl, #20]
   451f8:	mov	r6, r0
   451fc:	cmp	r3, #0
   45200:	bne	459dc <ReadNextStructField+0x84c>
   45204:	ldrh	r3, [sp, #64]	; 0x40
   45208:	cmp	r3, #5
   4520c:	beq	4523c <ReadNextStructField+0xac>
   45210:	ldr	r0, [pc, #3432]	; 45f80 <ReadNextStructField+0xdf0>
   45214:	add	r0, pc, r0
   45218:	bl	161c <Mat_Critical@plt>
   4521c:	mov	r0, r6
   45220:	add	sp, sp, #132	; 0x84
   45224:	ldrd	r4, [sp]
   45228:	ldrd	r6, [sp, #8]
   4522c:	ldrd	r8, [sp, #16]
   45230:	ldrd	sl, [sp, #24]
   45234:	add	sp, sp, #32
   45238:	pop	{pc}		; (ldr pc, [sp], #4)
   4523c:	mov	r2, #2
   45240:	mov	r1, #4
   45244:	ldr	r3, [sl]
   45248:	ldr	r0, [sp, #8]
   4524c:	ldr	r7, [sp, #68]	; 0x44
   45250:	bl	1520 <fread@plt>
   45254:	ldr	r3, [sl, #20]
   45258:	add	r6, r6, r0
   4525c:	cmp	r3, #0
   45260:	bne	45a30 <ReadNextStructField+0x8a0>
   45264:	ldr	r3, [sp, #68]	; 0x44
   45268:	mov	r1, #4
   4526c:	ldr	r8, [r5, #52]	; 0x34
   45270:	str	r1, [r5, #12]
   45274:	cmp	r3, r7
   45278:	udiv	r4, r3, r7
   4527c:	str	r3, [sp, #12]
   45280:	movcc	r3, #0
   45284:	strcc	r3, [r8, #4]
   45288:	strcc	r3, [r8, #8]
   4528c:	bcs	45a5c <ReadNextStructField+0x8cc>
   45290:	mul	r3, r4, r7
   45294:	ands	r3, r3, #7
   45298:	bne	45a44 <ReadNextStructField+0x8b4>
   4529c:	mov	r2, r4
   452a0:	add	r0, sp, #56	; 0x38
   452a4:	ldr	r1, [sp, #52]	; 0x34
   452a8:	bl	499ec <SafeMul>
   452ac:	cmp	r0, #0
   452b0:	bne	45a20 <ReadNextStructField+0x890>
   452b4:	mov	r0, r5
   452b8:	ldr	r2, [r5, #12]
   452bc:	ldr	r1, [sp, #56]	; 0x38
   452c0:	bl	499ec <SafeMul>
   452c4:	subs	r9, r0, #0
   452c8:	bne	45c90 <ReadNextStructField+0xb00>
   452cc:	ldr	r0, [r5]
   452d0:	cmp	r0, #0
   452d4:	beq	4521c <ReadNextStructField+0x8c>
   452d8:	bl	1544 <malloc@plt>
   452dc:	cmp	r0, #0
   452e0:	str	r0, [sp, #24]
   452e4:	str	r0, [r5, #40]	; 0x28
   452e8:	beq	4521c <ReadNextStructField+0x8c>
   452ec:	ldr	r3, [sp, #52]	; 0x34
   452f0:	cmp	r3, #0
   452f4:	beq	453f0 <ReadNextStructField+0x260>
   452f8:	mov	r1, r9
   452fc:	ldr	r9, [sp, #12]
   45300:	lsl	fp, r4, #2
   45304:	mov	r8, r0
   45308:	str	fp, [sp, #16]
   4530c:	str	r6, [sp, #28]
   45310:	mov	r6, r1
   45314:	str	r0, [sp, #20]
   45318:	str	sl, [sp, #32]
   4531c:	str	r5, [sp, #36]	; 0x24
   45320:	cmp	r9, r7
   45324:	movcs	sl, r8
   45328:	movcs	r5, #0
   4532c:	bcc	45348 <ReadNextStructField+0x1b8>
   45330:	add	r5, r5, #1
   45334:	bl	1508 <Mat_VarCalloc@plt>
   45338:	cmp	r4, r5
   4533c:	str	r0, [sl], #4
   45340:	bhi	45330 <ReadNextStructField+0x1a0>
   45344:	ldr	r3, [sp, #52]	; 0x34
   45348:	add	r6, r6, #1
   4534c:	add	r8, r8, fp
   45350:	cmp	r3, r6
   45354:	bhi	45320 <ReadNextStructField+0x190>
   45358:	mov	r1, r3
   4535c:	ldr	r8, [sp, #20]
   45360:	ldr	r5, [sp, #36]	; 0x24
   45364:	ldr	r6, [sp, #28]
   45368:	ldr	sl, [sp, #32]
   4536c:	ldr	r3, [r5, #52]	; 0x34
   45370:	ldr	r2, [r3, #8]
   45374:	cmp	r2, #0
   45378:	str	r2, [sp, #20]
   4537c:	beq	453f0 <ReadNextStructField+0x260>
   45380:	cmp	r1, #0
   45384:	movne	r5, #0
   45388:	strne	sl, [sp, #32]
   4538c:	movne	sl, r1
   45390:	strne	r6, [sp, #28]
   45394:	beq	453f0 <ReadNextStructField+0x260>
   45398:	ldr	r3, [sp, #12]
   4539c:	cmp	r3, r7
   453a0:	bcc	453d4 <ReadNextStructField+0x244>
   453a4:	ldr	r3, [sp, #20]
   453a8:	mov	fp, #0
   453ac:	sub	r6, r3, #4
   453b0:	ldr	r3, [r6, #4]!
   453b4:	subs	r0, r3, #0
   453b8:	beq	453c8 <ReadNextStructField+0x238>
   453bc:	ldr	r9, [r8, fp, lsl #2]
   453c0:	bl	14cc <strdup@plt>
   453c4:	str	r0, [r9, #36]	; 0x24
   453c8:	add	fp, fp, #1
   453cc:	cmp	r4, fp
   453d0:	bhi	453b0 <ReadNextStructField+0x220>
   453d4:	ldr	r3, [sp, #16]
   453d8:	add	r5, r5, #1
   453dc:	cmp	sl, r5
   453e0:	add	r8, r8, r3
   453e4:	bne	45398 <ReadNextStructField+0x208>
   453e8:	ldr	r6, [sp, #28]
   453ec:	ldr	sl, [sp, #32]
   453f0:	ldr	r3, [sp, #56]	; 0x38
   453f4:	cmp	r3, #0
   453f8:	beq	4521c <ReadNextStructField+0x8c>
   453fc:	ldr	r7, [pc, #2944]	; 45f84 <ReadNextStructField+0xdf4>
   45400:	mov	r8, #0
   45404:	ldr	r9, [sp, #8]
   45408:	ldr	r4, [sp, #24]
   4540c:	add	r7, pc, r7
   45410:	mov	r2, #2
   45414:	mov	r1, #4
   45418:	ldr	r3, [sl]
   4541c:	mov	r0, r9
   45420:	bl	1520 <fread@plt>
   45424:	ldr	r3, [sl, #20]
   45428:	add	r6, r6, r0
   4542c:	cmp	r3, #0
   45430:	bne	45ad8 <ReadNextStructField+0x948>
   45434:	ldr	r3, [sp, #64]	; 0x40
   45438:	ldr	r5, [sp, #68]	; 0x44
   4543c:	cmp	r3, #14
   45440:	bne	45ce4 <ReadNextStructField+0xb54>
   45444:	cmp	r5, #0
   45448:	beq	45aec <ReadNextStructField+0x95c>
   4544c:	mov	r2, #6
   45450:	mov	r1, #4
   45454:	ldr	r3, [sl]
   45458:	mov	r0, r9
   4545c:	bl	1520 <fread@plt>
   45460:	ldr	r3, [sl, #20]
   45464:	add	r6, r6, r0
   45468:	cmp	r3, #0
   4546c:	bne	45b40 <ReadNextStructField+0x9b0>
   45470:	ldr	r3, [sp, #64]	; 0x40
   45474:	sub	r5, r5, #24
   45478:	ldr	r2, [r4]
   4547c:	cmp	r3, #6
   45480:	beq	45b04 <ReadNextStructField+0x974>
   45484:	ldr	lr, [sp, #80]	; 0x50
   45488:	add	r3, r2, #32
   4548c:	add	r1, sl, #20
   45490:	add	r2, r2, #4
   45494:	mov	r0, sl
   45498:	ldr	ip, [sp, #84]	; 0x54
   4549c:	str	lr, [sp]
   454a0:	str	ip, [sp, #4]
   454a4:	bl	40820 <ReadRankDims.isra.2>
   454a8:	mov	ip, r0
   454ac:	mov	r1, #1
   454b0:	ldr	r3, [sl]
   454b4:	mov	r2, #8
   454b8:	mov	r0, r9
   454bc:	add	r6, r6, ip
   454c0:	sub	r5, r5, ip
   454c4:	bl	1520 <fread@plt>
   454c8:	ldr	r3, [r4]
   454cc:	add	r6, r6, r0
   454d0:	sub	r5, r5, #8
   454d4:	ldr	r0, [sl]
   454d8:	ldr	fp, [r3, #52]	; 0x34
   454dc:	bl	14b4 <ftell@plt>
   454e0:	ldr	r1, [r4]
   454e4:	ldr	r3, [r1, #52]	; 0x34
   454e8:	str	r0, [fp]
   454ec:	ldr	r3, [r3]
   454f0:	cmn	r3, #1
   454f4:	beq	45cd8 <ReadNextStructField+0xb48>
   454f8:	ldr	r2, [r1, #16]
   454fc:	cmp	r2, #2
   45500:	beq	45d40 <ReadNextStructField+0xbb0>
   45504:	cmp	r2, #1
   45508:	beq	45d5c <ReadNextStructField+0xbcc>
   4550c:	add	r1, r5, r3
   45510:	mov	r2, #0
   45514:	ldr	r0, [sl]
   45518:	bl	1694 <fseek@plt>
   4551c:	ldr	r3, [sp, #56]	; 0x38
   45520:	add	r8, r8, #1
   45524:	add	r4, r4, #4
   45528:	cmp	r3, r8
   4552c:	bhi	45410 <ReadNextStructField+0x280>
   45530:	b	4521c <ReadNextStructField+0x8c>
   45534:	mov	r4, r3
   45538:	mov	r0, r3
   4553c:	str	r3, [sp, #8]
   45540:	mov	r2, #64	; 0x40
   45544:	bl	15f8 <memset@plt>
   45548:	mov	r2, r4
   4554c:	mov	r1, r5
   45550:	mov	r0, sl
   45554:	bl	32b0 <InflateFieldNameLength>
   45558:	ldr	r3, [sl, #20]
   4555c:	mov	r6, r0
   45560:	cmp	r3, #0
   45564:	bne	45a0c <ReadNextStructField+0x87c>
   45568:	ldrh	r3, [sp, #64]	; 0x40
   4556c:	cmp	r3, #5
   45570:	bne	459fc <ReadNextStructField+0x86c>
   45574:	mov	r1, r5
   45578:	mov	r0, sl
   4557c:	ldr	r2, [sp, #8]
   45580:	ldr	fp, [sp, #68]	; 0x44
   45584:	bl	3440 <InflateFieldNamesTag>
   45588:	ldr	r3, [sl, #20]
   4558c:	add	r6, r6, r0
   45590:	cmp	r3, #0
   45594:	bne	45c48 <ReadNextStructField+0xab8>
   45598:	ldr	r3, [sp, #68]	; 0x44
   4559c:	mov	r2, r3
   455a0:	mov	r3, #4
   455a4:	udiv	r4, r2, fp
   455a8:	str	r2, [sp, #12]
   455ac:	str	r3, [r5, #12]
   455b0:	ldr	r3, [sp, #12]
   455b4:	mul	r0, r4, fp
   455b8:	ands	r7, r0, #7
   455bc:	rsbne	r7, r7, #8
   455c0:	cmp	r3, fp
   455c4:	bcs	45b84 <ReadNextStructField+0x9f4>
   455c8:	ldr	r3, [r5, #52]	; 0x34
   455cc:	mov	r2, #0
   455d0:	str	r2, [r3, #4]
   455d4:	str	r2, [r3, #8]
   455d8:	mov	r2, r4
   455dc:	add	r0, sp, #56	; 0x38
   455e0:	ldr	r1, [sp, #52]	; 0x34
   455e4:	bl	499ec <SafeMul>
   455e8:	cmp	r0, #0
   455ec:	bne	45b74 <ReadNextStructField+0x9e4>
   455f0:	mov	r0, r5
   455f4:	ldr	r2, [r5, #12]
   455f8:	ldr	r1, [sp, #56]	; 0x38
   455fc:	bl	499ec <SafeMul>
   45600:	subs	r8, r0, #0
   45604:	bne	45d78 <ReadNextStructField+0xbe8>
   45608:	ldr	r3, [r5]
   4560c:	cmp	r3, #0
   45610:	beq	4521c <ReadNextStructField+0x8c>
   45614:	ldr	r3, [sp, #56]	; 0x38
   45618:	ldr	r1, [r5, #12]
   4561c:	mov	r0, r3
   45620:	str	r3, [sp, #24]
   45624:	bl	140c <calloc@plt>
   45628:	cmp	r0, #0
   4562c:	str	r0, [sp, #28]
   45630:	str	r0, [r5, #40]	; 0x28
   45634:	beq	45ea8 <ReadNextStructField+0xd18>
   45638:	ldr	r3, [sp, #52]	; 0x34
   4563c:	subs	r1, r3, #0
   45640:	beq	45754 <ReadNextStructField+0x5c4>
   45644:	mov	r3, r8
   45648:	ldr	r8, [sp, #12]
   4564c:	lsl	r9, r4, #2
   45650:	ldr	r7, [sp, #28]
   45654:	str	r6, [sp, #20]
   45658:	mov	r6, r3
   4565c:	mov	r3, r1
   45660:	str	r9, [sp, #16]
   45664:	str	sl, [sp, #24]
   45668:	str	r5, [sp, #32]
   4566c:	str	r7, [sp, #36]	; 0x24
   45670:	cmp	r8, fp
   45674:	movcs	sl, r7
   45678:	movcs	r5, #0
   4567c:	bcc	45698 <ReadNextStructField+0x508>
   45680:	add	r5, r5, #1
   45684:	bl	1508 <Mat_VarCalloc@plt>
   45688:	cmp	r4, r5
   4568c:	str	r0, [sl], #4
   45690:	bhi	45680 <ReadNextStructField+0x4f0>
   45694:	ldr	r3, [sp, #52]	; 0x34
   45698:	add	r6, r6, #1
   4569c:	add	r7, r7, r9
   456a0:	cmp	r3, r6
   456a4:	bhi	45670 <ReadNextStructField+0x4e0>
   456a8:	mov	r1, r3
   456ac:	ldr	r6, [sp, #20]
   456b0:	ldr	r5, [sp, #32]
   456b4:	ldr	r2, [sp, #56]	; 0x38
   456b8:	ldr	sl, [sp, #24]
   456bc:	ldr	r3, [r5, #52]	; 0x34
   456c0:	str	r2, [sp, #24]
   456c4:	ldr	r3, [r3, #8]
   456c8:	cmp	r3, #0
   456cc:	str	r3, [sp, #20]
   456d0:	beq	45754 <ReadNextStructField+0x5c4>
   456d4:	cmp	r1, #0
   456d8:	beq	45754 <ReadNextStructField+0x5c4>
   456dc:	mov	r3, #0
   456e0:	mov	r9, r1
   456e4:	str	r6, [sp, #32]
   456e8:	str	r5, [sp, #44]	; 0x2c
   456ec:	mov	r6, r3
   456f0:	ldr	r5, [sp, #36]	; 0x24
   456f4:	str	sl, [sp, #40]	; 0x28
   456f8:	ldr	r3, [sp, #12]
   456fc:	cmp	r3, fp
   45700:	bcc	45734 <ReadNextStructField+0x5a4>
   45704:	ldr	r3, [sp, #20]
   45708:	mov	sl, #0
   4570c:	sub	r7, r3, #4
   45710:	ldr	r3, [r7, #4]!
   45714:	subs	r0, r3, #0
   45718:	beq	45728 <ReadNextStructField+0x598>
   4571c:	ldr	r8, [r5, sl, lsl #2]
   45720:	bl	14cc <strdup@plt>
   45724:	str	r0, [r8, #36]	; 0x24
   45728:	add	sl, sl, #1
   4572c:	cmp	r4, sl
   45730:	bhi	45710 <ReadNextStructField+0x580>
   45734:	ldr	r3, [sp, #16]
   45738:	add	r6, r6, #1
   4573c:	cmp	r9, r6
   45740:	add	r5, r5, r3
   45744:	bne	456f8 <ReadNextStructField+0x568>
   45748:	ldr	r6, [sp, #32]
   4574c:	ldr	sl, [sp, #40]	; 0x28
   45750:	ldr	r5, [sp, #44]	; 0x2c
   45754:	ldr	r3, [sp, #24]
   45758:	cmp	r3, #0
   4575c:	beq	4521c <ReadNextStructField+0x8c>
   45760:	ldr	r3, [pc, #2080]	; 45f88 <ReadNextStructField+0xdf8>
   45764:	mov	r4, #0
   45768:	ldr	r8, [sp, #8]
   4576c:	ldr	r7, [sp, #28]
   45770:	add	r3, pc, r3
   45774:	str	r3, [sp, #16]
   45778:	ldr	r3, [pc, #2060]	; 45f8c <ReadNextStructField+0xdfc>
   4577c:	add	r3, pc, r3
   45780:	str	r3, [sp, #12]
   45784:	ldr	r3, [pc, #2052]	; 45f90 <ReadNextStructField+0xe00>
   45788:	add	r3, pc, r3
   4578c:	str	r3, [sp, #20]
   45790:	mov	r2, r8
   45794:	mov	r1, r5
   45798:	mov	r0, sl
   4579c:	bl	240c <InflateVarTag>
   457a0:	ldr	r3, [sl, #20]
   457a4:	add	r6, r6, r0
   457a8:	cmp	r3, #0
   457ac:	bne	45c5c <ReadNextStructField+0xacc>
   457b0:	ldr	r3, [sp, #64]	; 0x40
   457b4:	ldr	r0, [r7, r4, lsl #2]
   457b8:	cmp	r3, #14
   457bc:	bne	45c70 <ReadNextStructField+0xae0>
   457c0:	ldr	r9, [sp, #68]	; 0x44
   457c4:	cmp	r9, #0
   457c8:	beq	45d14 <ReadNextStructField+0xb84>
   457cc:	mov	r3, #1
   457d0:	mov	r2, r8
   457d4:	mov	r1, r5
   457d8:	sub	fp, r9, #16
   457dc:	str	r3, [r0, #48]	; 0x30
   457e0:	mov	r0, sl
   457e4:	bl	259c <InflateArrayFlags>
   457e8:	ldr	r3, [sl, #20]
   457ec:	add	r6, r6, r0
   457f0:	cmp	r3, #0
   457f4:	bne	45d88 <ReadNextStructField+0xbf8>
   457f8:	ldr	r1, [sp, #64]	; 0x40
   457fc:	cmp	r1, #6
   45800:	bne	45ca0 <ReadNextStructField+0xb10>
   45804:	ldr	r3, [sp, #72]	; 0x48
   45808:	ldr	r2, [r7, r4, lsl #2]
   4580c:	uxtb	r1, r3
   45810:	and	ip, r3, #2048	; 0x800
   45814:	cmp	r1, #17
   45818:	and	r0, r3, #1024	; 0x400
   4581c:	and	r3, r3, #512	; 0x200
   45820:	bhi	45dac <ReadNextStructField+0xc1c>
   45824:	cmp	r1, #5
   45828:	str	r1, [r2, #16]
   4582c:	str	ip, [r2, #20]
   45830:	str	r0, [r2, #24]
   45834:	str	r3, [r2, #28]
   45838:	bne	45ccc <ReadNextStructField+0xb3c>
   4583c:	ldr	r3, [sp, #76]	; 0x4c
   45840:	str	r3, [r2]
   45844:	add	r1, sp, #60	; 0x3c
   45848:	mov	ip, #0
   4584c:	mov	r3, #64	; 0x40
   45850:	mov	r2, r8
   45854:	mov	r0, sl
   45858:	str	r1, [sp]
   4585c:	mov	r1, r5
   45860:	str	ip, [sp, #60]	; 0x3c
   45864:	sub	r9, r9, #24
   45868:	bl	272c <InflateRankDims>
   4586c:	ldr	fp, [sp, #60]	; 0x3c
   45870:	add	r6, r0, r6
   45874:	cmp	fp, #0
   45878:	addeq	r3, sp, #72	; 0x48
   4587c:	movne	fp, #1
   45880:	streq	r3, [sp, #60]	; 0x3c
   45884:	ldr	r3, [sl, #20]
   45888:	cmp	r3, #0
   4588c:	bne	45dd8 <ReadNextStructField+0xc48>
   45890:	ldr	r3, [sp, #64]	; 0x40
   45894:	cmp	r3, #5
   45898:	beq	45e04 <ReadNextStructField+0xc74>
   4589c:	cmp	fp, #0
   458a0:	bne	45dec <ReadNextStructField+0xc5c>
   458a4:	mov	r2, r8
   458a8:	mov	r1, r5
   458ac:	mov	r0, sl
   458b0:	sub	fp, r9, #8
   458b4:	bl	2a9c <InflateVarNameTag>
   458b8:	ldr	r3, [r7, r4, lsl #2]
   458bc:	add	r6, r6, r0
   458c0:	mov	r1, #56	; 0x38
   458c4:	mov	r0, #1
   458c8:	ldr	r9, [r3, #52]	; 0x34
   458cc:	bl	140c <calloc@plt>
   458d0:	cmp	r0, #0
   458d4:	str	r0, [r9, #12]
   458d8:	beq	45df8 <ReadNextStructField+0xc68>
   458dc:	ldr	r3, [r5, #52]	; 0x34
   458e0:	ldr	r1, [r3, #12]
   458e4:	bl	15bc <inflateCopy@plt>
   458e8:	subs	r9, r0, #0
   458ec:	bne	45dc4 <ReadNextStructField+0xc34>
   458f0:	ldr	r3, [r7, r4, lsl #2]
   458f4:	ldr	r0, [sl]
   458f8:	ldr	r3, [r3, #52]	; 0x34
   458fc:	str	r3, [sp, #8]
   45900:	bl	14b4 <ftell@plt>
   45904:	ldr	r1, [r7, r4, lsl #2]
   45908:	ldr	r3, [sp, #8]
   4590c:	ldr	r2, [r1, #52]	; 0x34
   45910:	str	r0, [r3]
   45914:	ldr	r3, [r2]
   45918:	cmn	r3, #1
   4591c:	beq	45f3c <ReadNextStructField+0xdac>
   45920:	ldr	ip, [r5, #52]	; 0x34
   45924:	ldr	r0, [r1, #16]
   45928:	ldr	ip, [ip, #12]
   4592c:	cmp	r0, #2
   45930:	ldr	ip, [ip, #4]
   45934:	sub	r3, r3, ip
   45938:	str	r3, [r2]
   4593c:	beq	45f64 <ReadNextStructField+0xdd4>
   45940:	cmp	r0, #1
   45944:	beq	45f48 <ReadNextStructField+0xdb8>
   45948:	cmp	fp, #32768	; 0x8000
   4594c:	ble	45f0c <ReadNextStructField+0xd7c>
   45950:	mov	r1, r3
   45954:	mov	r2, #0
   45958:	ldr	r0, [sl]
   4595c:	bl	1694 <fseek@plt>
   45960:	ldr	r2, [r7, r4, lsl #2]
   45964:	ldr	r3, [r2, #52]	; 0x34
   45968:	ldr	r1, [r3, #16]
   4596c:	cmp	r1, #0
   45970:	beq	45e94 <ReadNextStructField+0xd04>
   45974:	ldr	r0, [r3, #12]
   45978:	bl	15b0 <inflateEnd@plt>
   4597c:	ldr	r3, [r7, r4, lsl #2]
   45980:	ldr	r3, [r3, #52]	; 0x34
   45984:	ldr	r0, [r3, #12]
   45988:	bl	1478 <free@plt>
   4598c:	ldr	r3, [r7, r4, lsl #2]
   45990:	mov	r2, #0
   45994:	ldr	r3, [r3, #52]	; 0x34
   45998:	str	r2, [r3, #12]
   4599c:	ldr	r3, [r5, #52]	; 0x34
   459a0:	mov	r2, fp
   459a4:	mov	r0, sl
   459a8:	ldr	r1, [r3, #12]
   459ac:	bl	1f90 <InflateSkip>
   459b0:	add	r6, r6, r0
   459b4:	ldr	r3, [sp, #56]	; 0x38
   459b8:	add	r4, r4, #1
   459bc:	cmp	r3, r4
   459c0:	bhi	45790 <ReadNextStructField+0x600>
   459c4:	b	4521c <ReadNextStructField+0x8c>
   459c8:	ldr	r0, [pc, #1476]	; 45f94 <ReadNextStructField+0xe04>
   459cc:	mov	r6, #0
   459d0:	add	r0, pc, r0
   459d4:	bl	161c <Mat_Critical@plt>
   459d8:	b	4521c <ReadNextStructField+0x8c>
   459dc:	ldr	r0, [sp, #8]
   459e0:	bl	18f8 <Mat_uint32Swap>
   459e4:	add	r0, sp, #68	; 0x44
   459e8:	bl	18f8 <Mat_uint32Swap>
   459ec:	ldrh	r3, [sp, #64]	; 0x40
   459f0:	cmp	r3, #5
   459f4:	bne	45210 <ReadNextStructField+0x80>
   459f8:	b	4523c <ReadNextStructField+0xac>
   459fc:	ldr	r0, [pc, #1428]	; 45f98 <ReadNextStructField+0xe08>
   45a00:	add	r0, pc, r0
   45a04:	bl	161c <Mat_Critical@plt>
   45a08:	b	4521c <ReadNextStructField+0x8c>
   45a0c:	ldr	r0, [sp, #8]
   45a10:	bl	18f8 <Mat_uint32Swap>
   45a14:	add	r0, sp, #68	; 0x44
   45a18:	bl	18f8 <Mat_uint32Swap>
   45a1c:	b	45568 <ReadNextStructField+0x3d8>
   45a20:	ldr	r0, [pc, #1396]	; 45f9c <ReadNextStructField+0xe0c>
   45a24:	add	r0, pc, r0
   45a28:	bl	161c <Mat_Critical@plt>
   45a2c:	b	4521c <ReadNextStructField+0x8c>
   45a30:	ldr	r0, [sp, #8]
   45a34:	bl	18f8 <Mat_uint32Swap>
   45a38:	add	r0, sp, #68	; 0x44
   45a3c:	bl	18f8 <Mat_uint32Swap>
   45a40:	b	45264 <ReadNextStructField+0xd4>
   45a44:	rsb	r1, r3, #8
   45a48:	mov	r2, #1
   45a4c:	ldr	r0, [sl]
   45a50:	add	r6, r6, r1
   45a54:	bl	1694 <fseek@plt>
   45a58:	b	4529c <ReadNextStructField+0x10c>
   45a5c:	mov	r0, r4
   45a60:	str	r4, [r8, #4]
   45a64:	bl	140c <calloc@plt>
   45a68:	cmp	r0, #0
   45a6c:	mov	fp, r0
   45a70:	str	r0, [r8, #8]
   45a74:	beq	45290 <ReadNextStructField+0x100>
   45a78:	mov	r8, #0
   45a7c:	mov	r9, r8
   45a80:	b	45a8c <ReadNextStructField+0x8fc>
   45a84:	ldr	r3, [r5, #52]	; 0x34
   45a88:	ldr	fp, [r3, #8]
   45a8c:	mov	r0, r7
   45a90:	bl	1544 <malloc@plt>
   45a94:	cmp	r0, #0
   45a98:	mov	r2, r7
   45a9c:	str	r0, [fp, r8, lsl #2]
   45aa0:	mov	r1, #1
   45aa4:	beq	45ac8 <ReadNextStructField+0x938>
   45aa8:	ldr	r3, [sl]
   45aac:	bl	1520 <fread@plt>
   45ab0:	ldr	r3, [r5, #52]	; 0x34
   45ab4:	add	r6, r6, r0
   45ab8:	ldr	r3, [r3, #8]
   45abc:	ldr	r3, [r3, r8, lsl #2]
   45ac0:	add	r3, r3, r7
   45ac4:	strb	r9, [r3, #-1]
   45ac8:	add	r8, r8, #1
   45acc:	cmp	r4, r8
   45ad0:	bhi	45a84 <ReadNextStructField+0x8f4>
   45ad4:	b	45290 <ReadNextStructField+0x100>
   45ad8:	mov	r0, r9
   45adc:	bl	18f8 <Mat_uint32Swap>
   45ae0:	add	r0, sp, #68	; 0x44
   45ae4:	bl	18f8 <Mat_uint32Swap>
   45ae8:	b	45434 <ReadNextStructField+0x2a4>
   45aec:	ldr	r3, [r4]
   45af0:	ldr	r0, [r3, #52]	; 0x34
   45af4:	bl	1478 <free@plt>
   45af8:	ldr	r3, [r4]
   45afc:	str	r5, [r3, #52]	; 0x34
   45b00:	b	4551c <ReadNextStructField+0x38c>
   45b04:	ldr	r3, [sp, #72]	; 0x48
   45b08:	uxtb	r1, r3
   45b0c:	and	ip, r3, #2048	; 0x800
   45b10:	cmp	r1, #17
   45b14:	and	r0, r3, #1024	; 0x400
   45b18:	and	r3, r3, #512	; 0x200
   45b1c:	bhi	45d28 <ReadNextStructField+0xb98>
   45b20:	cmp	r1, #5
   45b24:	str	r1, [r2, #16]
   45b28:	str	ip, [r2, #20]
   45b2c:	str	r0, [r2, #24]
   45b30:	str	r3, [r2, #28]
   45b34:	ldreq	r3, [sp, #76]	; 0x4c
   45b38:	streq	r3, [r2]
   45b3c:	b	45484 <ReadNextStructField+0x2f4>
   45b40:	mov	r0, r9
   45b44:	bl	18f8 <Mat_uint32Swap>
   45b48:	add	r0, sp, #68	; 0x44
   45b4c:	bl	18f8 <Mat_uint32Swap>
   45b50:	add	r0, sp, #72	; 0x48
   45b54:	bl	18f8 <Mat_uint32Swap>
   45b58:	add	r0, sp, #76	; 0x4c
   45b5c:	bl	18f8 <Mat_uint32Swap>
   45b60:	add	r0, sp, #80	; 0x50
   45b64:	bl	18f8 <Mat_uint32Swap>
   45b68:	add	r0, sp, #84	; 0x54
   45b6c:	bl	18f8 <Mat_uint32Swap>
   45b70:	b	45470 <ReadNextStructField+0x2e0>
   45b74:	ldr	r0, [pc, #1060]	; 45fa0 <ReadNextStructField+0xe10>
   45b78:	add	r0, pc, r0
   45b7c:	bl	161c <Mat_Critical@plt>
   45b80:	b	4521c <ReadNextStructField+0x8c>
   45b84:	add	r0, r0, r7
   45b88:	bl	1544 <malloc@plt>
   45b8c:	subs	r9, r0, #0
   45b90:	str	r9, [sp, #16]
   45b94:	beq	455d8 <ReadNextStructField+0x448>
   45b98:	mov	r3, r4
   45b9c:	mov	r2, r9
   45ba0:	str	fp, [sp]
   45ba4:	mov	r1, r5
   45ba8:	mov	r0, sl
   45bac:	str	r7, [sp, #4]
   45bb0:	bl	35d0 <InflateFieldNames>
   45bb4:	ldr	r8, [r5, #52]	; 0x34
   45bb8:	add	r6, r6, r0
   45bbc:	mov	r1, #4
   45bc0:	mov	r0, r4
   45bc4:	str	r4, [r8, #4]
   45bc8:	bl	140c <calloc@plt>
   45bcc:	cmp	r0, #0
   45bd0:	str	r0, [r8, #8]
   45bd4:	beq	45c3c <ReadNextStructField+0xaac>
   45bd8:	mov	r7, #0
   45bdc:	str	r6, [sp, #20]
   45be0:	mov	r6, r9
   45be4:	mov	r9, r0
   45be8:	b	45bf4 <ReadNextStructField+0xa64>
   45bec:	ldr	r8, [r5, #52]	; 0x34
   45bf0:	ldr	r9, [r8, #8]
   45bf4:	mov	r0, fp
   45bf8:	bl	1544 <malloc@plt>
   45bfc:	cmp	r0, #0
   45c00:	mov	r1, r6
   45c04:	str	r0, [r9, r7, lsl #2]
   45c08:	mov	r2, fp
   45c0c:	add	r6, r6, fp
   45c10:	beq	45c2c <ReadNextStructField+0xa9c>
   45c14:	bl	1490 <memcpy@plt>
   45c18:	ldr	r2, [r8, #8]
   45c1c:	mov	r3, #0
   45c20:	ldr	r2, [r2, r7, lsl #2]
   45c24:	add	r2, r2, fp
   45c28:	strb	r3, [r2, #-1]
   45c2c:	add	r7, r7, #1
   45c30:	cmp	r4, r7
   45c34:	bhi	45bec <ReadNextStructField+0xa5c>
   45c38:	ldr	r6, [sp, #20]
   45c3c:	ldr	r0, [sp, #16]
   45c40:	bl	1478 <free@plt>
   45c44:	b	455d8 <ReadNextStructField+0x448>
   45c48:	ldr	r0, [sp, #8]
   45c4c:	bl	18f8 <Mat_uint32Swap>
   45c50:	add	r0, sp, #68	; 0x44
   45c54:	bl	18f8 <Mat_uint32Swap>
   45c58:	b	45598 <ReadNextStructField+0x408>
   45c5c:	mov	r0, r8
   45c60:	bl	18f8 <Mat_uint32Swap>
   45c64:	add	r0, sp, #68	; 0x44
   45c68:	bl	18f8 <Mat_uint32Swap>
   45c6c:	b	457b0 <ReadNextStructField+0x620>
   45c70:	bl	158c <Mat_VarFree@plt>
   45c74:	ldr	r0, [pc, #808]	; 45fa4 <ReadNextStructField+0xe14>
   45c78:	mov	r3, #0
   45c7c:	mov	r1, r4
   45c80:	str	r3, [r7, r4, lsl #2]
   45c84:	add	r0, pc, r0
   45c88:	bl	161c <Mat_Critical@plt>
   45c8c:	b	459b4 <ReadNextStructField+0x824>
   45c90:	ldr	r0, [pc, #784]	; 45fa8 <ReadNextStructField+0xe18>
   45c94:	add	r0, pc, r0
   45c98:	bl	161c <Mat_Critical@plt>
   45c9c:	b	4521c <ReadNextStructField+0x8c>
   45ca0:	ldr	r0, [pc, #772]	; 45fac <ReadNextStructField+0xe1c>
   45ca4:	add	r0, pc, r0
   45ca8:	bl	161c <Mat_Critical@plt>
   45cac:	ldr	r3, [r5, #52]	; 0x34
   45cb0:	mov	r2, fp
   45cb4:	mov	r0, sl
   45cb8:	ldr	r1, [r3, #12]
   45cbc:	bl	1f90 <InflateSkip>
   45cc0:	ldr	r3, [r7, r4, lsl #2]
   45cc4:	add	r6, r6, r0
   45cc8:	ldr	r1, [r3, #16]
   45ccc:	cmp	r1, #17
   45cd0:	beq	4599c <ReadNextStructField+0x80c>
   45cd4:	b	45844 <ReadNextStructField+0x6b4>
   45cd8:	mov	r0, r7
   45cdc:	bl	161c <Mat_Critical@plt>
   45ce0:	b	4551c <ReadNextStructField+0x38c>
   45ce4:	ldr	r0, [r4]
   45ce8:	bl	158c <Mat_VarFree@plt>
   45cec:	mov	r3, #0
   45cf0:	ldr	r0, [sl]
   45cf4:	str	r3, [r4]
   45cf8:	bl	14b4 <ftell@plt>
   45cfc:	mov	r2, r0
   45d00:	ldr	r0, [pc, #680]	; 45fb0 <ReadNextStructField+0xe20>
   45d04:	mov	r1, r8
   45d08:	add	r0, pc, r0
   45d0c:	bl	161c <Mat_Critical@plt>
   45d10:	b	4521c <ReadNextStructField+0x8c>
   45d14:	ldr	r0, [r0, #52]	; 0x34
   45d18:	bl	1478 <free@plt>
   45d1c:	ldr	r3, [r7, r4, lsl #2]
   45d20:	str	r9, [r3, #52]	; 0x34
   45d24:	b	459b4 <ReadNextStructField+0x824>
   45d28:	mov	r1, #0
   45d2c:	str	r1, [r2, #16]
   45d30:	str	ip, [r2, #20]
   45d34:	str	r0, [r2, #24]
   45d38:	str	r3, [r2, #28]
   45d3c:	b	45484 <ReadNextStructField+0x2f4>
   45d40:	mov	r0, sl
   45d44:	bl	45190 <ReadNextStructField>
   45d48:	ldr	r3, [r4]
   45d4c:	add	r6, r6, r0
   45d50:	ldr	r3, [r3, #52]	; 0x34
   45d54:	ldr	r3, [r3]
   45d58:	b	4550c <ReadNextStructField+0x37c>
   45d5c:	mov	r0, sl
   45d60:	bl	44758 <ReadNextCell>
   45d64:	ldr	r3, [r4]
   45d68:	add	r6, r6, r0
   45d6c:	ldr	r3, [r3, #52]	; 0x34
   45d70:	ldr	r3, [r3]
   45d74:	b	4550c <ReadNextStructField+0x37c>
   45d78:	ldr	r0, [pc, #564]	; 45fb4 <ReadNextStructField+0xe24>
   45d7c:	add	r0, pc, r0
   45d80:	bl	161c <Mat_Critical@plt>
   45d84:	b	4521c <ReadNextStructField+0x8c>
   45d88:	mov	r0, r8
   45d8c:	bl	18f8 <Mat_uint32Swap>
   45d90:	add	r0, sp, #68	; 0x44
   45d94:	bl	18f8 <Mat_uint32Swap>
   45d98:	add	r0, sp, #72	; 0x48
   45d9c:	bl	18f8 <Mat_uint32Swap>
   45da0:	add	r0, sp, #76	; 0x4c
   45da4:	bl	18f8 <Mat_uint32Swap>
   45da8:	b	457f8 <ReadNextStructField+0x668>
   45dac:	mov	r1, #0
   45db0:	str	r1, [r2, #16]
   45db4:	str	ip, [r2, #20]
   45db8:	str	r0, [r2, #24]
   45dbc:	str	r3, [r2, #28]
   45dc0:	b	45844 <ReadNextStructField+0x6b4>
   45dc4:	bl	14f0 <zError@plt>
   45dc8:	mov	r1, r0
   45dcc:	ldr	r0, [sp, #12]
   45dd0:	bl	161c <Mat_Critical@plt>
   45dd4:	b	4599c <ReadNextStructField+0x80c>
   45dd8:	mov	r0, r8
   45ddc:	bl	18f8 <Mat_uint32Swap>
   45de0:	add	r0, sp, #68	; 0x44
   45de4:	bl	18f8 <Mat_uint32Swap>
   45de8:	b	45890 <ReadNextStructField+0x700>
   45dec:	ldr	r0, [sp, #60]	; 0x3c
   45df0:	bl	1478 <free@plt>
   45df4:	b	458a4 <ReadNextStructField+0x714>
   45df8:	ldr	r0, [sp, #16]
   45dfc:	bl	161c <Mat_Critical@plt>
   45e00:	b	4599c <ReadNextStructField+0x80c>
   45e04:	ldr	r1, [sp, #68]	; 0x44
   45e08:	ldr	r2, [r7, r4, lsl #2]
   45e0c:	cmp	r1, #0
   45e10:	add	r3, r1, #3
   45e14:	movge	r3, r1
   45e18:	sub	r9, r9, r1
   45e1c:	asr	r3, r3, #2
   45e20:	str	r2, [sp, #8]
   45e24:	lsl	r0, r3, #2
   45e28:	str	r3, [r2, #4]
   45e2c:	str	r3, [sp, #24]
   45e30:	str	r1, [sp, #28]
   45e34:	bl	1544 <malloc@plt>
   45e38:	mov	r2, r0
   45e3c:	ldr	r0, [sl, #20]
   45e40:	ldr	r3, [sp, #8]
   45e44:	ldr	r1, [sp, #28]
   45e48:	cmp	r0, #0
   45e4c:	str	r2, [r3, #32]
   45e50:	ldr	r3, [sp, #24]
   45e54:	bne	45eb8 <ReadNextStructField+0xd28>
   45e58:	cmp	r1, #3
   45e5c:	ble	45e88 <ReadNextStructField+0xcf8>
   45e60:	ldr	ip, [sp, #8]
   45e64:	sub	r2, r2, #4
   45e68:	ldr	r1, [sp, #60]	; 0x3c
   45e6c:	sub	r1, r1, #4
   45e70:	ldr	r3, [r1, #4]!
   45e74:	add	r0, r0, #1
   45e78:	str	r3, [r2, #4]!
   45e7c:	ldr	r3, [ip, #4]
   45e80:	cmp	r3, r0
   45e84:	bgt	45e70 <ReadNextStructField+0xce0>
   45e88:	tst	r3, #1
   45e8c:	subne	r9, r9, #4
   45e90:	b	4589c <ReadNextStructField+0x70c>
   45e94:	ldr	r2, [r2, #16]
   45e98:	sub	r2, r2, #1
   45e9c:	cmp	r2, #1
   45ea0:	bls	45974 <ReadNextStructField+0x7e4>
   45ea4:	b	4599c <ReadNextStructField+0x80c>
   45ea8:	ldr	r0, [pc, #264]	; 45fb8 <ReadNextStructField+0xe28>
   45eac:	add	r0, pc, r0
   45eb0:	bl	161c <Mat_Critical@plt>
   45eb4:	b	4521c <ReadNextStructField+0x8c>
   45eb8:	cmp	r1, #3
   45ebc:	ble	45e88 <ReadNextStructField+0xcf8>
   45ec0:	mov	r1, #0
   45ec4:	str	r6, [sp, #8]
   45ec8:	mov	r6, r2
   45ecc:	str	r5, [sp, #24]
   45ed0:	mov	r5, r1
   45ed4:	b	45edc <ReadNextStructField+0xd4c>
   45ed8:	ldr	r6, [ip, #32]
   45edc:	ldr	r0, [sp, #60]	; 0x3c
   45ee0:	add	r0, r0, r5, lsl #2
   45ee4:	bl	18f8 <Mat_uint32Swap>
   45ee8:	ldr	ip, [r7, r4, lsl #2]
   45eec:	str	r0, [r6, r5, lsl #2]
   45ef0:	add	r5, r5, #1
   45ef4:	ldr	r3, [ip, #4]
   45ef8:	cmp	r3, r5
   45efc:	bgt	45ed8 <ReadNextStructField+0xd48>
   45f00:	ldr	r6, [sp, #8]
   45f04:	ldr	r5, [sp, #24]
   45f08:	b	45e88 <ReadNextStructField+0xcf8>
   45f0c:	mov	r0, sl
   45f10:	bl	42c6c <Mat_VarRead5>
   45f14:	ldr	r3, [r7, r4, lsl #2]
   45f18:	ldr	r2, [r3, #40]	; 0x28
   45f1c:	ldr	r3, [r3, #52]	; 0x34
   45f20:	str	r2, [r3, #16]
   45f24:	ldr	r3, [r7, r4, lsl #2]
   45f28:	str	r9, [r3, #40]	; 0x28
   45f2c:	ldr	r3, [r7, r4, lsl #2]
   45f30:	ldr	r3, [r3, #52]	; 0x34
   45f34:	ldr	r3, [r3]
   45f38:	b	45950 <ReadNextStructField+0x7c0>
   45f3c:	ldr	r0, [sp, #20]
   45f40:	bl	161c <Mat_Critical@plt>
   45f44:	b	45960 <ReadNextStructField+0x7d0>
   45f48:	mov	r0, sl
   45f4c:	bl	44758 <ReadNextCell>
   45f50:	ldr	r3, [r7, r4, lsl #2]
   45f54:	add	r6, r6, r0
   45f58:	ldr	r3, [r3, #52]	; 0x34
   45f5c:	ldr	r3, [r3]
   45f60:	b	45950 <ReadNextStructField+0x7c0>
   45f64:	mov	r0, sl
   45f68:	bl	45190 <ReadNextStructField>
   45f6c:	ldr	r3, [r7, r4, lsl #2]
   45f70:	add	r6, r6, r0
   45f74:	ldr	r3, [r3, #52]	; 0x34
   45f78:	ldr	r3, [r3]
   45f7c:	b	45950 <ReadNextStructField+0x7c0>
   45f80:	.word	0x00009970
   45f84:	.word	0x000093ec
   45f88:	.word	0x000093d0
   45f8c:	.word	0x000093a4
   45f90:	.word	0x00009070
   45f94:	.word	0x00008ee4
   45f98:	.word	0x00009184
   45f9c:	.word	0x00008e90
   45fa0:	.word	0x00008d3c
   45fa4:	.word	0x00008f20
   45fa8:	.word	0x00008c20
   45fac:	.word	0x00008e4c
   45fb0:	.word	0x00008ecc
   45fb4:	.word	0x00008b38
   45fb8:	.word	0x00008a28

00045fbc <Mat_VarReadData5>:
   45fbc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   45fc0:	mov	r4, r1
   45fc4:	ldr	r1, [r1, #52]	; 0x34
   45fc8:	ldr	r1, [r1]
   45fcc:	strd	r6, [sp, #8]
   45fd0:	mov	r6, r0
   45fd4:	strd	r8, [sp, #16]
   45fd8:	mov	r8, r3
   45fdc:	strd	sl, [sp, #24]
   45fe0:	mov	fp, r2
   45fe4:	mov	r2, #0
   45fe8:	str	lr, [sp, #32]
   45fec:	sub	sp, sp, #100	; 0x64
   45ff0:	ldr	r0, [r0]
   45ff4:	ldr	r7, [sp, #136]	; 0x88
   45ff8:	bl	1694 <fseek@plt>
   45ffc:	ldr	r5, [r4, #48]	; 0x30
   46000:	cmp	r5, #0
   46004:	beq	462e0 <Mat_VarReadData5+0x324>
   46008:	cmp	r5, #1
   4600c:	movne	r5, #0
   46010:	beq	46248 <Mat_VarReadData5+0x28c>
   46014:	ldr	sl, [r4, #4]
   46018:	cmp	sl, #2
   4601c:	beq	46358 <Mat_VarReadData5+0x39c>
   46020:	ldr	r2, [r4, #16]
   46024:	ldr	r9, [r4, #48]	; 0x30
   46028:	cmp	r9, #0
   4602c:	bne	46120 <Mat_VarReadData5+0x164>
   46030:	ldr	r3, [r4, #8]
   46034:	ldr	r1, [r4, #20]
   46038:	ldr	ip, [r4, #32]
   4603c:	str	sl, [sp]
   46040:	cmp	r1, #0
   46044:	beq	464f0 <Mat_VarReadData5+0x534>
   46048:	ldr	r1, [sp, #140]	; 0x8c
   4604c:	mov	r0, r6
   46050:	add	sl, sp, #32
   46054:	str	ip, [sp, #4]
   46058:	str	r8, [sp, #8]
   4605c:	str	r7, [sp, #12]
   46060:	str	r1, [sp, #16]
   46064:	ldr	r1, [fp]
   46068:	bl	17278 <ReadDataSlabN>
   4606c:	ldr	r3, [r4, #52]	; 0x34
   46070:	mov	r2, r9
   46074:	ldr	r0, [r6]
   46078:	ldr	r1, [r3]
   4607c:	add	r1, r5, r1
   46080:	bl	1694 <fseek@plt>
   46084:	mov	r0, sl
   46088:	mov	r2, #2
   4608c:	ldr	r3, [r6]
   46090:	mov	r1, #4
   46094:	bl	1520 <fread@plt>
   46098:	ldr	r3, [r6, #20]
   4609c:	cmp	r3, #0
   460a0:	bne	46724 <Mat_VarReadData5+0x768>
   460a4:	ldr	r3, [sp, #32]
   460a8:	lsr	r2, r3, #16
   460ac:	uxtb	r3, r3
   460b0:	cmp	r3, #24
   460b4:	lsl	r2, r2, #16
   460b8:	movle	r9, r3
   460bc:	cmp	r2, #0
   460c0:	str	r9, [r4, #8]
   460c4:	bne	4670c <Mat_VarReadData5+0x750>
   460c8:	ldr	r1, [sp, #140]	; 0x8c
   460cc:	mov	r3, r9
   460d0:	mov	r0, r6
   460d4:	str	r8, [sp, #8]
   460d8:	ldr	r2, [r4, #4]
   460dc:	str	r7, [sp, #12]
   460e0:	ldr	ip, [r4, #32]
   460e4:	str	r1, [sp, #16]
   460e8:	ldr	r1, [fp, #4]
   460ec:	str	r2, [sp]
   460f0:	ldr	r2, [r4, #16]
   460f4:	str	ip, [sp, #4]
   460f8:	bl	17278 <ReadDataSlabN>
   460fc:	ldr	r2, [r4, #16]
   46100:	mov	r0, r2
   46104:	mov	sl, #0
   46108:	bl	49944 <ClassType2DataType>
   4610c:	str	r0, [r4, #8]
   46110:	ldr	r0, [r4, #16]
   46114:	bl	167c <Mat_SizeOfClass@plt>
   46118:	str	r0, [r4, #12]
   4611c:	b	46388 <Mat_VarReadData5+0x3cc>
   46120:	cmp	r9, #1
   46124:	bne	46100 <Mat_VarReadData5+0x144>
   46128:	ldr	r1, [r4, #8]
   4612c:	ldr	r3, [r4, #20]
   46130:	ldr	ip, [r4, #32]
   46134:	cmp	r3, #0
   46138:	beq	46574 <Mat_VarReadData5+0x5b8>
   4613c:	mov	r3, r2
   46140:	ldr	r2, [sp, #140]	; 0x8c
   46144:	add	r9, sp, #40	; 0x28
   46148:	mov	r0, r6
   4614c:	stm	sp, {r1, sl, ip}
   46150:	mov	r1, r9
   46154:	str	r8, [sp, #12]
   46158:	str	r7, [sp, #16]
   4615c:	str	r2, [sp, #20]
   46160:	ldr	r2, [fp]
   46164:	bl	1aba8 <ReadCompressedDataSlabN>
   46168:	ldr	r3, [r4, #52]	; 0x34
   4616c:	mov	r2, #0
   46170:	ldr	r0, [r6]
   46174:	ldr	r1, [r3]
   46178:	bl	1694 <fseek@plt>
   4617c:	mov	r0, r9
   46180:	bl	15b0 <inflateEnd@plt>
   46184:	ldr	r3, [r4, #52]	; 0x34
   46188:	mov	r0, r9
   4618c:	ldr	r1, [r3, #12]
   46190:	bl	15bc <inflateCopy@plt>
   46194:	subs	sl, r0, #0
   46198:	bne	46780 <Mat_VarReadData5+0x7c4>
   4619c:	mov	r2, r5
   461a0:	mov	r1, r9
   461a4:	mov	r0, r6
   461a8:	add	r5, sp, #32
   461ac:	bl	1f90 <InflateSkip>
   461b0:	mov	r3, #0
   461b4:	mov	r2, r5
   461b8:	mov	r1, r9
   461bc:	mov	r0, r6
   461c0:	str	r3, [sp, #44]	; 0x2c
   461c4:	bl	2f74 <InflateDataType>
   461c8:	ldr	r3, [r6, #20]
   461cc:	cmp	r3, #0
   461d0:	bne	46774 <Mat_VarReadData5+0x7b8>
   461d4:	ldr	r3, [sp, #32]
   461d8:	lsr	r2, r3, #16
   461dc:	uxtb	r3, r3
   461e0:	cmp	r3, #24
   461e4:	lsl	r2, r2, #16
   461e8:	movgt	r3, #0
   461ec:	cmp	r2, #0
   461f0:	str	r3, [r4, #8]
   461f4:	beq	4675c <Mat_VarReadData5+0x7a0>
   461f8:	str	r3, [sp]
   461fc:	mov	r0, r6
   46200:	mov	r1, r9
   46204:	ldr	r2, [r4, #4]
   46208:	str	r8, [sp, #12]
   4620c:	ldr	ip, [sp, #140]	; 0x8c
   46210:	ldr	r3, [r4, #32]
   46214:	str	r2, [sp, #4]
   46218:	str	r7, [sp, #16]
   4621c:	str	ip, [sp, #20]
   46220:	ldr	r2, [fp, #4]
   46224:	str	r3, [sp, #8]
   46228:	ldr	r3, [r4, #16]
   4622c:	bl	1aba8 <ReadCompressedDataSlabN>
   46230:	mov	r0, r9
   46234:	bl	15b0 <inflateEnd@plt>
   46238:	cmp	sl, #0
   4623c:	bne	46388 <Mat_VarReadData5+0x3cc>
   46240:	ldr	r2, [r4, #16]
   46244:	b	46100 <Mat_VarReadData5+0x144>
   46248:	ldr	r3, [r4, #52]	; 0x34
   4624c:	ldr	r5, [r3, #16]
   46250:	cmp	r5, #0
   46254:	beq	465b0 <Mat_VarReadData5+0x5f4>
   46258:	ldm	r4, {ip, lr}
   4625c:	ldrd	r2, [r4, #16]
   46260:	ldr	r1, [r4, #32]
   46264:	cmp	r3, #0
   46268:	ldr	r3, [r4, #8]
   4626c:	beq	46548 <Mat_VarReadData5+0x58c>
   46270:	ldr	r0, [r5]
   46274:	stm	sp, {r1, r8}
   46278:	ldr	r1, [sp, #140]	; 0x8c
   4627c:	str	r7, [sp, #8]
   46280:	str	r1, [sp, #12]
   46284:	str	lr, [sp, #16]
   46288:	str	ip, [sp, #20]
   4628c:	ldr	r1, [fp]
   46290:	bl	21e2c <GetDataSlab>
   46294:	subs	sl, r0, #0
   46298:	bne	46388 <Mat_VarReadData5+0x3cc>
   4629c:	ldr	r2, [sp, #140]	; 0x8c
   462a0:	ldr	r0, [r5, #4]
   462a4:	str	r8, [sp, #4]
   462a8:	ldr	r1, [r4]
   462ac:	str	r7, [sp, #8]
   462b0:	ldr	r3, [r4, #4]
   462b4:	str	r2, [sp, #12]
   462b8:	ldr	r2, [r4, #32]
   462bc:	str	r1, [sp, #20]
   462c0:	ldr	r1, [fp, #4]
   462c4:	str	r3, [sp, #16]
   462c8:	ldr	r3, [r4, #8]
   462cc:	str	r2, [sp]
   462d0:	ldr	r2, [r4, #16]
   462d4:	bl	21e2c <GetDataSlab>
   462d8:	mov	sl, r0
   462dc:	b	46388 <Mat_VarReadData5+0x3cc>
   462e0:	add	r9, sp, #32
   462e4:	mov	r2, #2
   462e8:	ldr	r3, [r6]
   462ec:	mov	r0, r9
   462f0:	mov	r1, #4
   462f4:	bl	1520 <fread@plt>
   462f8:	ldr	r3, [r6, #20]
   462fc:	cmp	r3, #0
   46300:	bne	46518 <Mat_VarReadData5+0x55c>
   46304:	ldr	r3, [sp, #32]
   46308:	lsr	r2, r3, #16
   4630c:	uxtb	r3, r3
   46310:	cmp	r3, #24
   46314:	lsl	r2, r2, #16
   46318:	movle	r5, r3
   4631c:	cmp	r2, #0
   46320:	str	r5, [r4, #8]
   46324:	bne	4652c <Mat_VarReadData5+0x570>
   46328:	ldr	r5, [sp, #36]	; 0x24
   4632c:	add	r5, r5, #8
   46330:	ands	r3, r5, #7
   46334:	beq	46014 <Mat_VarReadData5+0x58>
   46338:	ldr	sl, [r4, #4]
   4633c:	rsbs	r2, r5, #0
   46340:	and	r2, r2, #7
   46344:	rsbpl	r3, r2, #0
   46348:	rsb	r3, r3, #8
   4634c:	add	r5, r5, r3
   46350:	cmp	sl, #2
   46354:	bne	46020 <Mat_VarReadData5+0x64>
   46358:	ldr	r3, [sp, #140]	; 0x8c
   4635c:	ldr	ip, [r4, #32]
   46360:	ldr	r0, [r7]
   46364:	ldr	r3, [r3]
   46368:	ldr	r1, [r8]
   4636c:	ldr	r2, [ip]
   46370:	sub	r3, r3, #1
   46374:	mla	r3, r0, r3, r1
   46378:	add	r3, r3, #1
   4637c:	cmp	r3, r2
   46380:	bls	463a8 <Mat_VarReadData5+0x3ec>
   46384:	mov	sl, #1
   46388:	mov	r0, sl
   4638c:	add	sp, sp, #100	; 0x64
   46390:	ldrd	r4, [sp]
   46394:	ldrd	r6, [sp, #8]
   46398:	ldrd	r8, [sp, #16]
   4639c:	ldrd	sl, [sp, #24]
   463a0:	add	sp, sp, #32
   463a4:	pop	{pc}		; (ldr pc, [sp], #4)
   463a8:	ldr	r3, [sp, #140]	; 0x8c
   463ac:	ldr	r0, [r7, #4]
   463b0:	ldr	r1, [r8, #4]
   463b4:	ldr	r3, [r3, #4]
   463b8:	ldr	r2, [ip, #4]
   463bc:	sub	r3, r3, #1
   463c0:	mla	r3, r0, r3, r1
   463c4:	add	r3, r3, #1
   463c8:	cmp	r3, r2
   463cc:	bhi	46384 <Mat_VarReadData5+0x3c8>
   463d0:	ldr	r2, [r4, #16]
   463d4:	ldr	r9, [r4, #48]	; 0x30
   463d8:	cmp	r9, #0
   463dc:	beq	46644 <Mat_VarReadData5+0x688>
   463e0:	cmp	r9, #1
   463e4:	bne	46100 <Mat_VarReadData5+0x144>
   463e8:	ldr	r1, [r4, #8]
   463ec:	ldr	r3, [r4, #20]
   463f0:	cmp	r3, #0
   463f4:	beq	467a4 <Mat_VarReadData5+0x7e8>
   463f8:	mov	r3, r2
   463fc:	ldr	r2, [sp, #140]	; 0x8c
   46400:	add	r9, sp, #40	; 0x28
   46404:	mov	r0, r6
   46408:	stm	sp, {r1, ip}
   4640c:	mov	r1, r9
   46410:	str	r8, [sp, #8]
   46414:	str	r7, [sp, #12]
   46418:	str	r2, [sp, #16]
   4641c:	ldr	r2, [fp]
   46420:	bl	200f4 <ReadCompressedDataSlab2>
   46424:	ldr	r3, [r4, #52]	; 0x34
   46428:	mov	r2, #0
   4642c:	ldr	r0, [r6]
   46430:	ldr	r1, [r3]
   46434:	bl	1694 <fseek@plt>
   46438:	mov	r0, r9
   4643c:	bl	15b0 <inflateEnd@plt>
   46440:	ldr	r3, [r4, #52]	; 0x34
   46444:	mov	r0, r9
   46448:	ldr	r1, [r3, #12]
   4644c:	bl	15bc <inflateCopy@plt>
   46450:	subs	sl, r0, #0
   46454:	bne	4680c <Mat_VarReadData5+0x850>
   46458:	mov	r2, r5
   4645c:	mov	r1, r9
   46460:	mov	r0, r6
   46464:	add	r5, sp, #32
   46468:	bl	1f90 <InflateSkip>
   4646c:	mov	r3, #0
   46470:	mov	r2, r5
   46474:	mov	r1, r9
   46478:	mov	r0, r6
   4647c:	str	r3, [sp, #44]	; 0x2c
   46480:	bl	2f74 <InflateDataType>
   46484:	ldr	r3, [r6, #20]
   46488:	cmp	r3, #0
   4648c:	bne	4683c <Mat_VarReadData5+0x880>
   46490:	ldr	r3, [sp, #32]
   46494:	lsr	r2, r3, #16
   46498:	uxtb	r3, r3
   4649c:	cmp	r3, #24
   464a0:	lsl	r2, r2, #16
   464a4:	movgt	r3, #0
   464a8:	cmp	r2, #0
   464ac:	str	r3, [r4, #8]
   464b0:	beq	46824 <Mat_VarReadData5+0x868>
   464b4:	ldr	r2, [sp, #140]	; 0x8c
   464b8:	mov	r0, r6
   464bc:	mov	r1, r9
   464c0:	str	r3, [sp]
   464c4:	ldr	r3, [r4, #32]
   464c8:	str	r8, [sp, #8]
   464cc:	str	r7, [sp, #12]
   464d0:	str	r2, [sp, #16]
   464d4:	ldr	r2, [fp, #4]
   464d8:	str	r3, [sp, #4]
   464dc:	ldr	r3, [r4, #16]
   464e0:	bl	200f4 <ReadCompressedDataSlab2>
   464e4:	mov	r0, r9
   464e8:	bl	15b0 <inflateEnd@plt>
   464ec:	b	46238 <Mat_VarReadData5+0x27c>
   464f0:	str	ip, [sp, #4]
   464f4:	mov	r1, fp
   464f8:	mov	r0, r6
   464fc:	ldr	ip, [sp, #140]	; 0x8c
   46500:	str	r8, [sp, #8]
   46504:	str	r7, [sp, #12]
   46508:	str	ip, [sp, #16]
   4650c:	bl	17278 <ReadDataSlabN>
   46510:	ldr	r2, [r4, #16]
   46514:	b	46100 <Mat_VarReadData5+0x144>
   46518:	mov	r0, r9
   4651c:	bl	18c4 <Mat_int32Swap>
   46520:	add	r0, sp, #36	; 0x24
   46524:	bl	18c4 <Mat_int32Swap>
   46528:	b	46304 <Mat_VarReadData5+0x348>
   4652c:	mov	r2, #1
   46530:	mvn	r1, #3
   46534:	ldr	r0, [r6]
   46538:	bl	1694 <fseek@plt>
   4653c:	ldrsh	r5, [sp, #34]	; 0x22
   46540:	add	r5, r5, #4
   46544:	b	46330 <Mat_VarReadData5+0x374>
   46548:	ldr	r4, [sp, #140]	; 0x8c
   4654c:	mov	r0, r5
   46550:	stm	sp, {r1, r8}
   46554:	mov	r1, fp
   46558:	str	r7, [sp, #8]
   4655c:	str	r4, [sp, #12]
   46560:	str	lr, [sp, #16]
   46564:	str	ip, [sp, #20]
   46568:	bl	21e2c <GetDataSlab>
   4656c:	mov	sl, r0
   46570:	b	46388 <Mat_VarReadData5+0x3cc>
   46574:	stm	sp, {r1, sl, ip}
   46578:	add	r5, sp, #40	; 0x28
   4657c:	mov	r3, r2
   46580:	mov	r1, r5
   46584:	mov	r2, fp
   46588:	mov	r0, r6
   4658c:	ldr	ip, [sp, #140]	; 0x8c
   46590:	str	r8, [sp, #12]
   46594:	str	r7, [sp, #16]
   46598:	str	ip, [sp, #20]
   4659c:	bl	1aba8 <ReadCompressedDataSlabN>
   465a0:	mov	r0, r5
   465a4:	bl	15b0 <inflateEnd@plt>
   465a8:	ldr	r2, [r4, #16]
   465ac:	b	46100 <Mat_VarReadData5+0x144>
   465b0:	add	r9, sp, #40	; 0x28
   465b4:	ldr	r1, [r3, #12]
   465b8:	mov	r0, r9
   465bc:	bl	15bc <inflateCopy@plt>
   465c0:	subs	r3, r0, #0
   465c4:	bne	46848 <Mat_VarReadData5+0x88c>
   465c8:	add	r5, sp, #32
   465cc:	mov	r1, r9
   465d0:	str	r3, [sp, #44]	; 0x2c
   465d4:	mov	r2, r5
   465d8:	mov	r0, r6
   465dc:	bl	2f74 <InflateDataType>
   465e0:	ldr	r3, [r6, #20]
   465e4:	cmp	r3, #0
   465e8:	bne	46798 <Mat_VarReadData5+0x7dc>
   465ec:	ldr	r5, [sp, #32]
   465f0:	lsr	r2, r5, #16
   465f4:	uxtb	r3, r5
   465f8:	cmp	r3, #24
   465fc:	lsl	r2, r2, #16
   46600:	movgt	r3, #0
   46604:	cmp	r2, #0
   46608:	str	r3, [r4, #8]
   4660c:	asrne	r5, r5, #16
   46610:	addne	r5, r5, #4
   46614:	bne	46330 <Mat_VarReadData5+0x374>
   46618:	add	r5, sp, #36	; 0x24
   4661c:	mov	r1, r9
   46620:	mov	r2, r5
   46624:	mov	r0, r6
   46628:	bl	2f74 <InflateDataType>
   4662c:	ldr	r3, [r6, #20]
   46630:	cmp	r3, #0
   46634:	beq	46328 <Mat_VarReadData5+0x36c>
   46638:	mov	r0, r5
   4663c:	bl	18c4 <Mat_int32Swap>
   46640:	b	46328 <Mat_VarReadData5+0x36c>
   46644:	ldr	r3, [r4, #8]
   46648:	ldr	r1, [r4, #20]
   4664c:	str	ip, [sp]
   46650:	cmp	r1, #0
   46654:	beq	46738 <Mat_VarReadData5+0x77c>
   46658:	ldr	ip, [sp, #140]	; 0x8c
   4665c:	add	r1, sp, #32
   46660:	mov	r0, r6
   46664:	str	r8, [sp, #4]
   46668:	str	r7, [sp, #8]
   4666c:	str	ip, [sp, #12]
   46670:	str	r1, [sp, #28]
   46674:	ldr	r1, [fp]
   46678:	bl	1ebf4 <ReadDataSlab2>
   4667c:	ldr	r3, [r4, #52]	; 0x34
   46680:	mov	r2, r9
   46684:	ldr	r0, [r6]
   46688:	ldr	r1, [r3]
   4668c:	add	r1, r5, r1
   46690:	bl	1694 <fseek@plt>
   46694:	mov	r2, sl
   46698:	mov	r1, #4
   4669c:	ldr	r3, [r6]
   466a0:	ldr	r0, [sp, #28]
   466a4:	bl	1520 <fread@plt>
   466a8:	ldr	r3, [r6, #20]
   466ac:	cmp	r3, #0
   466b0:	bne	467e0 <Mat_VarReadData5+0x824>
   466b4:	ldr	r3, [sp, #32]
   466b8:	lsr	r2, r3, #16
   466bc:	uxtb	r3, r3
   466c0:	cmp	r3, #24
   466c4:	lsl	r2, r2, #16
   466c8:	movle	r9, r3
   466cc:	cmp	r2, #0
   466d0:	str	r9, [r4, #8]
   466d4:	bne	467f4 <Mat_VarReadData5+0x838>
   466d8:	ldr	r1, [sp, #140]	; 0x8c
   466dc:	mov	r3, r9
   466e0:	mov	r0, r6
   466e4:	str	r8, [sp, #4]
   466e8:	ldr	r2, [r4, #32]
   466ec:	str	r7, [sp, #8]
   466f0:	str	r1, [sp, #12]
   466f4:	ldr	r1, [fp, #4]
   466f8:	str	r2, [sp]
   466fc:	ldr	r2, [r4, #16]
   46700:	bl	1ebf4 <ReadDataSlab2>
   46704:	ldr	r2, [r4, #16]
   46708:	b	46100 <Mat_VarReadData5+0x144>
   4670c:	mov	r2, #1
   46710:	mvn	r1, #3
   46714:	ldr	r0, [r6]
   46718:	bl	1694 <fseek@plt>
   4671c:	ldr	r9, [r4, #8]
   46720:	b	460c8 <Mat_VarReadData5+0x10c>
   46724:	mov	r0, sl
   46728:	bl	18c4 <Mat_int32Swap>
   4672c:	add	r0, sp, #36	; 0x24
   46730:	bl	18c4 <Mat_int32Swap>
   46734:	b	460a4 <Mat_VarReadData5+0xe8>
   46738:	ldr	ip, [sp, #140]	; 0x8c
   4673c:	mov	r1, fp
   46740:	mov	r0, r6
   46744:	str	r8, [sp, #4]
   46748:	str	r7, [sp, #8]
   4674c:	str	ip, [sp, #12]
   46750:	bl	1ebf4 <ReadDataSlab2>
   46754:	ldr	r2, [r4, #16]
   46758:	b	46100 <Mat_VarReadData5+0x144>
   4675c:	mov	r2, #4
   46760:	mov	r1, r9
   46764:	mov	r0, r6
   46768:	bl	1f90 <InflateSkip>
   4676c:	ldr	r3, [r4, #8]
   46770:	b	461f8 <Mat_VarReadData5+0x23c>
   46774:	mov	r0, r5
   46778:	bl	18c4 <Mat_int32Swap>
   4677c:	b	461d4 <Mat_VarReadData5+0x218>
   46780:	bl	14f0 <zError@plt>
   46784:	mov	r1, r0
   46788:	ldr	r0, [pc, #212]	; 46864 <Mat_VarReadData5+0x8a8>
   4678c:	add	r0, pc, r0
   46790:	bl	161c <Mat_Critical@plt>
   46794:	b	4619c <Mat_VarReadData5+0x1e0>
   46798:	mov	r0, r5
   4679c:	bl	18c4 <Mat_int32Swap>
   467a0:	b	465ec <Mat_VarReadData5+0x630>
   467a4:	stm	sp, {r1, ip}
   467a8:	add	r5, sp, #40	; 0x28
   467ac:	mov	r3, r2
   467b0:	ldr	ip, [sp, #140]	; 0x8c
   467b4:	mov	r2, fp
   467b8:	mov	r1, r5
   467bc:	mov	r0, r6
   467c0:	str	r8, [sp, #8]
   467c4:	str	r7, [sp, #12]
   467c8:	str	ip, [sp, #16]
   467cc:	bl	200f4 <ReadCompressedDataSlab2>
   467d0:	mov	r0, r5
   467d4:	bl	15b0 <inflateEnd@plt>
   467d8:	ldr	r2, [r4, #16]
   467dc:	b	46100 <Mat_VarReadData5+0x144>
   467e0:	ldr	r0, [sp, #28]
   467e4:	bl	18c4 <Mat_int32Swap>
   467e8:	add	r0, sp, #36	; 0x24
   467ec:	bl	18c4 <Mat_int32Swap>
   467f0:	b	466b4 <Mat_VarReadData5+0x6f8>
   467f4:	mov	r2, #1
   467f8:	mvn	r1, #3
   467fc:	ldr	r0, [r6]
   46800:	bl	1694 <fseek@plt>
   46804:	ldr	r9, [r4, #8]
   46808:	b	466d8 <Mat_VarReadData5+0x71c>
   4680c:	bl	14f0 <zError@plt>
   46810:	mov	r1, r0
   46814:	ldr	r0, [pc, #76]	; 46868 <Mat_VarReadData5+0x8ac>
   46818:	add	r0, pc, r0
   4681c:	bl	161c <Mat_Critical@plt>
   46820:	b	46458 <Mat_VarReadData5+0x49c>
   46824:	mov	r2, #4
   46828:	mov	r1, r9
   4682c:	mov	r0, r6
   46830:	bl	1f90 <InflateSkip>
   46834:	ldr	r3, [r4, #8]
   46838:	b	464b4 <Mat_VarReadData5+0x4f8>
   4683c:	mov	r0, r5
   46840:	bl	18c4 <Mat_int32Swap>
   46844:	b	46490 <Mat_VarReadData5+0x4d4>
   46848:	bl	14f0 <zError@plt>
   4684c:	mov	r1, r0
   46850:	ldr	r0, [pc, #20]	; 4686c <Mat_VarReadData5+0x8b0>
   46854:	mvn	sl, #0
   46858:	add	r0, pc, r0
   4685c:	bl	161c <Mat_Critical@plt>
   46860:	b	46388 <Mat_VarReadData5+0x3cc>
   46864:	.word	0x00008394
   46868:	.word	0x00008308
   4686c:	.word	0x000082c8

00046870 <Mat_VarReadDataLinear5>:
   46870:	ldr	ip, [r0, #16]
   46874:	strd	r4, [sp, #-36]!	; 0xffffffdc
   46878:	strd	r6, [sp, #8]
   4687c:	strd	r8, [sp, #16]
   46880:	strd	sl, [sp, #24]
   46884:	str	lr, [sp, #32]
   46888:	sub	sp, sp, #100	; 0x64
   4688c:	mov	lr, #1
   46890:	cmp	ip, #16
   46894:	ldr	sl, [sp, #136]	; 0x88
   46898:	str	lr, [sp, #28]
   4689c:	beq	46d68 <Mat_VarReadDataLinear5+0x4f8>
   468a0:	mov	r6, r3
   468a4:	ldr	r3, [r1, #52]	; 0x34
   468a8:	mov	r4, r1
   468ac:	mov	r8, r2
   468b0:	mov	r5, r0
   468b4:	mov	r2, #0
   468b8:	ldr	r0, [r0]
   468bc:	ldr	r1, [r3]
   468c0:	bl	1694 <fseek@plt>
   468c4:	ldr	r3, [r4, #48]	; 0x30
   468c8:	cmp	r3, #0
   468cc:	beq	46a6c <Mat_VarReadDataLinear5+0x1fc>
   468d0:	cmp	r3, #1
   468d4:	movne	r7, #0
   468d8:	beq	46a00 <Mat_VarReadDataLinear5+0x190>
   468dc:	add	r1, sp, #28
   468e0:	mov	r0, r4
   468e4:	bl	4996c <SafeMulDims>
   468e8:	subs	r9, r0, #0
   468ec:	bne	46ad4 <Mat_VarReadDataLinear5+0x264>
   468f0:	ldr	r2, [sp, #28]
   468f4:	ldr	r3, [sp, #140]	; 0x8c
   468f8:	ldr	r0, [r4, #16]
   468fc:	sub	r3, r3, #1
   46900:	mla	r3, sl, r3, r6
   46904:	add	r3, r3, #1
   46908:	cmp	r3, r2
   4690c:	movhi	r9, #1
   46910:	bls	46948 <Mat_VarReadDataLinear5+0xd8>
   46914:	bl	49944 <ClassType2DataType>
   46918:	str	r0, [r4, #8]
   4691c:	ldr	r0, [r4, #16]
   46920:	bl	167c <Mat_SizeOfClass@plt>
   46924:	str	r0, [r4, #12]
   46928:	mov	r0, r9
   4692c:	add	sp, sp, #100	; 0x64
   46930:	ldrd	r4, [sp]
   46934:	ldrd	r6, [sp, #8]
   46938:	ldrd	r8, [sp, #16]
   4693c:	ldrd	sl, [sp, #24]
   46940:	add	sp, sp, #32
   46944:	pop	{pc}		; (ldr pc, [sp], #4)
   46948:	ldr	fp, [r4, #48]	; 0x30
   4694c:	cmp	fp, #0
   46950:	bne	46ae4 <Mat_VarReadDataLinear5+0x274>
   46954:	ldr	r3, [r4, #8]
   46958:	ldr	r2, [r4, #20]
   4695c:	str	r6, [sp]
   46960:	cmp	r2, #0
   46964:	mov	r2, r0
   46968:	beq	46bd0 <Mat_VarReadDataLinear5+0x360>
   4696c:	ldr	ip, [sp, #140]	; 0x8c
   46970:	add	r1, sp, #32
   46974:	mov	r0, r5
   46978:	stmib	sp, {sl, ip}
   4697c:	str	r1, [sp, #20]
   46980:	ldr	r1, [r8]
   46984:	bl	1e644 <ReadDataSlab1>
   46988:	ldr	r3, [r4, #52]	; 0x34
   4698c:	mov	r2, fp
   46990:	ldr	r0, [r5]
   46994:	ldr	r1, [r3]
   46998:	add	r1, r7, r1
   4699c:	bl	1694 <fseek@plt>
   469a0:	mov	r2, #2
   469a4:	mov	r1, #4
   469a8:	ldr	r3, [r5]
   469ac:	ldr	r0, [sp, #20]
   469b0:	bl	1520 <fread@plt>
   469b4:	ldr	r3, [r5, #20]
   469b8:	cmp	r3, #0
   469bc:	bne	46d04 <Mat_VarReadDataLinear5+0x494>
   469c0:	ldr	r3, [sp, #32]
   469c4:	lsr	r2, r3, #16
   469c8:	uxtb	r3, r3
   469cc:	lsl	r2, r2, #16
   469d0:	str	r3, [r4, #8]
   469d4:	cmp	r2, #0
   469d8:	bne	46cec <Mat_VarReadDataLinear5+0x47c>
   469dc:	ldr	r2, [sp, #140]	; 0x8c
   469e0:	mov	r0, r5
   469e4:	stm	sp, {r6, sl}
   469e8:	str	r2, [sp, #8]
   469ec:	ldr	r1, [r8, #4]
   469f0:	ldr	r2, [r4, #16]
   469f4:	bl	1e644 <ReadDataSlab1>
   469f8:	ldr	r0, [r4, #16]
   469fc:	b	46914 <Mat_VarReadDataLinear5+0xa4>
   46a00:	ldr	r3, [r4, #52]	; 0x34
   46a04:	ldr	r7, [r3, #16]
   46a08:	cmp	r7, #0
   46a0c:	beq	46c38 <Mat_VarReadDataLinear5+0x3c8>
   46a10:	ldr	r3, [r4, #8]
   46a14:	ldr	r1, [r4, #20]
   46a18:	ldr	r2, [r4, #16]
   46a1c:	cmp	r1, #0
   46a20:	beq	46c1c <Mat_VarReadDataLinear5+0x3ac>
   46a24:	ldr	r1, [sp, #140]	; 0x8c
   46a28:	ldr	r0, [r7]
   46a2c:	stm	sp, {r6, sl}
   46a30:	str	r1, [sp, #8]
   46a34:	ldr	r1, [r8]
   46a38:	bl	4031c <GetDataLinear>
   46a3c:	subs	r9, r0, #0
   46a40:	bne	46928 <Mat_VarReadDataLinear5+0xb8>
   46a44:	ldr	r3, [sp, #140]	; 0x8c
   46a48:	ldr	r0, [r7, #4]
   46a4c:	stm	sp, {r6, sl}
   46a50:	str	r3, [sp, #8]
   46a54:	ldr	r1, [r8, #4]
   46a58:	ldr	r3, [r4, #8]
   46a5c:	ldr	r2, [r4, #16]
   46a60:	bl	4031c <GetDataLinear>
   46a64:	mov	r9, r0
   46a68:	b	46928 <Mat_VarReadDataLinear5+0xb8>
   46a6c:	add	r7, sp, #32
   46a70:	mov	r2, #2
   46a74:	ldr	r3, [r5]
   46a78:	mov	r0, r7
   46a7c:	mov	r1, #4
   46a80:	bl	1520 <fread@plt>
   46a84:	ldr	r3, [r5, #20]
   46a88:	cmp	r3, #0
   46a8c:	bne	46c08 <Mat_VarReadDataLinear5+0x398>
   46a90:	ldr	r3, [sp, #32]
   46a94:	lsr	r2, r3, #16
   46a98:	uxtb	r3, r3
   46a9c:	lsl	r2, r2, #16
   46aa0:	str	r3, [r4, #8]
   46aa4:	cmp	r2, #0
   46aa8:	bne	46bec <Mat_VarReadDataLinear5+0x37c>
   46aac:	ldr	r7, [sp, #36]	; 0x24
   46ab0:	add	r7, r7, #8
   46ab4:	ands	r3, r7, #7
   46ab8:	beq	468dc <Mat_VarReadDataLinear5+0x6c>
   46abc:	rsbs	r2, r7, #0
   46ac0:	and	r2, r2, #7
   46ac4:	rsbpl	r3, r2, #0
   46ac8:	rsb	r3, r3, #8
   46acc:	add	r7, r7, r3
   46ad0:	b	468dc <Mat_VarReadDataLinear5+0x6c>
   46ad4:	ldr	r0, [pc, #688]	; 46d8c <Mat_VarReadDataLinear5+0x51c>
   46ad8:	add	r0, pc, r0
   46adc:	bl	161c <Mat_Critical@plt>
   46ae0:	b	468f0 <Mat_VarReadDataLinear5+0x80>
   46ae4:	cmp	fp, #1
   46ae8:	bne	46914 <Mat_VarReadDataLinear5+0xa4>
   46aec:	ldr	r2, [r4, #8]
   46af0:	add	fp, sp, #40	; 0x28
   46af4:	ldr	r3, [r4, #20]
   46af8:	str	r2, [sp]
   46afc:	cmp	r3, #0
   46b00:	mov	r3, r0
   46b04:	beq	46cc4 <Mat_VarReadDataLinear5+0x454>
   46b08:	ldr	r2, [sp, #140]	; 0x8c
   46b0c:	mov	r1, fp
   46b10:	mov	r0, r5
   46b14:	stmib	sp, {r6, sl}
   46b18:	str	r2, [sp, #12]
   46b1c:	ldr	r2, [r8]
   46b20:	bl	1fac4 <ReadCompressedDataSlab1>
   46b24:	ldr	r3, [r4, #52]	; 0x34
   46b28:	mov	r2, #0
   46b2c:	ldr	r0, [r5]
   46b30:	ldr	r1, [r3]
   46b34:	bl	1694 <fseek@plt>
   46b38:	mov	r0, fp
   46b3c:	bl	15b0 <inflateEnd@plt>
   46b40:	ldr	r3, [r4, #52]	; 0x34
   46b44:	mov	r0, fp
   46b48:	ldr	r1, [r3, #12]
   46b4c:	bl	15bc <inflateCopy@plt>
   46b50:	subs	r9, r0, #0
   46b54:	bne	46d50 <Mat_VarReadDataLinear5+0x4e0>
   46b58:	mov	r2, r7
   46b5c:	mov	r1, fp
   46b60:	mov	r0, r5
   46b64:	add	r7, sp, #32
   46b68:	bl	1f90 <InflateSkip>
   46b6c:	mov	r3, #0
   46b70:	mov	r2, r7
   46b74:	mov	r1, fp
   46b78:	mov	r0, r5
   46b7c:	str	r3, [sp, #44]	; 0x2c
   46b80:	bl	2f74 <InflateDataType>
   46b84:	ldr	r3, [r5, #20]
   46b88:	cmp	r3, #0
   46b8c:	bne	46d44 <Mat_VarReadDataLinear5+0x4d4>
   46b90:	ldr	r3, [sp, #32]
   46b94:	lsr	r2, r3, #16
   46b98:	uxtb	r3, r3
   46b9c:	lsl	r2, r2, #16
   46ba0:	str	r3, [r4, #8]
   46ba4:	cmp	r2, #0
   46ba8:	beq	46d2c <Mat_VarReadDataLinear5+0x4bc>
   46bac:	stm	sp, {r3, r6, sl}
   46bb0:	mov	r0, r5
   46bb4:	mov	r1, fp
   46bb8:	ldr	r3, [sp, #140]	; 0x8c
   46bbc:	str	r3, [sp, #12]
   46bc0:	ldr	r2, [r8, #4]
   46bc4:	ldr	r3, [r4, #16]
   46bc8:	bl	1fac4 <ReadCompressedDataSlab1>
   46bcc:	b	46cdc <Mat_VarReadDataLinear5+0x46c>
   46bd0:	ldr	ip, [sp, #140]	; 0x8c
   46bd4:	mov	r1, r8
   46bd8:	mov	r0, r5
   46bdc:	stmib	sp, {sl, ip}
   46be0:	bl	1e644 <ReadDataSlab1>
   46be4:	ldr	r0, [r4, #16]
   46be8:	b	46914 <Mat_VarReadDataLinear5+0xa4>
   46bec:	mov	r2, #1
   46bf0:	mvn	r1, #3
   46bf4:	ldr	r0, [r5]
   46bf8:	bl	1694 <fseek@plt>
   46bfc:	ldrsh	r7, [sp, #34]	; 0x22
   46c00:	add	r7, r7, #4
   46c04:	b	46ab4 <Mat_VarReadDataLinear5+0x244>
   46c08:	mov	r0, r7
   46c0c:	bl	18c4 <Mat_int32Swap>
   46c10:	add	r0, sp, #36	; 0x24
   46c14:	bl	18c4 <Mat_int32Swap>
   46c18:	b	46a90 <Mat_VarReadDataLinear5+0x220>
   46c1c:	ldr	ip, [sp, #140]	; 0x8c
   46c20:	mov	r1, r8
   46c24:	mov	r0, r7
   46c28:	stm	sp, {r6, sl, ip}
   46c2c:	bl	4031c <GetDataLinear>
   46c30:	mov	r9, r0
   46c34:	b	46928 <Mat_VarReadDataLinear5+0xb8>
   46c38:	ldr	r1, [r3, #12]
   46c3c:	add	fp, sp, #40	; 0x28
   46c40:	mov	r0, fp
   46c44:	str	r7, [r1, #4]
   46c48:	bl	15bc <inflateCopy@plt>
   46c4c:	cmp	r0, #0
   46c50:	bne	46d70 <Mat_VarReadDataLinear5+0x500>
   46c54:	add	r7, sp, #32
   46c58:	mov	r1, fp
   46c5c:	mov	r2, r7
   46c60:	mov	r0, r5
   46c64:	bl	2f74 <InflateDataType>
   46c68:	ldr	r3, [r5, #20]
   46c6c:	cmp	r3, #0
   46c70:	bne	46d18 <Mat_VarReadDataLinear5+0x4a8>
   46c74:	ldr	r7, [sp, #32]
   46c78:	lsr	r3, r7, #16
   46c7c:	uxtb	r2, r7
   46c80:	lsl	r3, r3, #16
   46c84:	str	r2, [r4, #8]
   46c88:	cmp	r3, #0
   46c8c:	asrne	r7, r7, #16
   46c90:	addne	r7, r7, #4
   46c94:	bne	46ab4 <Mat_VarReadDataLinear5+0x244>
   46c98:	add	r7, sp, #36	; 0x24
   46c9c:	mov	r1, fp
   46ca0:	mov	r2, r7
   46ca4:	mov	r0, r5
   46ca8:	bl	2f74 <InflateDataType>
   46cac:	ldr	r3, [r5, #20]
   46cb0:	cmp	r3, #0
   46cb4:	beq	46aac <Mat_VarReadDataLinear5+0x23c>
   46cb8:	mov	r0, r7
   46cbc:	bl	18c4 <Mat_int32Swap>
   46cc0:	b	46aac <Mat_VarReadDataLinear5+0x23c>
   46cc4:	ldr	ip, [sp, #140]	; 0x8c
   46cc8:	mov	r2, r8
   46ccc:	mov	r0, r5
   46cd0:	mov	r1, fp
   46cd4:	stmib	sp, {r6, sl, ip}
   46cd8:	bl	1fac4 <ReadCompressedDataSlab1>
   46cdc:	mov	r0, fp
   46ce0:	bl	15b0 <inflateEnd@plt>
   46ce4:	ldr	r0, [r4, #16]
   46ce8:	b	46914 <Mat_VarReadDataLinear5+0xa4>
   46cec:	mov	r2, #1
   46cf0:	mvn	r1, #3
   46cf4:	ldr	r0, [r5]
   46cf8:	bl	1694 <fseek@plt>
   46cfc:	ldr	r3, [r4, #8]
   46d00:	b	469dc <Mat_VarReadDataLinear5+0x16c>
   46d04:	ldr	r0, [sp, #20]
   46d08:	bl	18c4 <Mat_int32Swap>
   46d0c:	add	r0, sp, #36	; 0x24
   46d10:	bl	18c4 <Mat_int32Swap>
   46d14:	b	469c0 <Mat_VarReadDataLinear5+0x150>
   46d18:	mov	r0, r7
   46d1c:	bl	18c4 <Mat_int32Swap>
   46d20:	add	r0, sp, #36	; 0x24
   46d24:	bl	18c4 <Mat_int32Swap>
   46d28:	b	46c74 <Mat_VarReadDataLinear5+0x404>
   46d2c:	mov	r2, #4
   46d30:	mov	r1, fp
   46d34:	mov	r0, r5
   46d38:	bl	1f90 <InflateSkip>
   46d3c:	ldr	r3, [r4, #8]
   46d40:	b	46bac <Mat_VarReadDataLinear5+0x33c>
   46d44:	mov	r0, r7
   46d48:	bl	18c4 <Mat_int32Swap>
   46d4c:	b	46b90 <Mat_VarReadDataLinear5+0x320>
   46d50:	bl	14f0 <zError@plt>
   46d54:	mov	r1, r0
   46d58:	ldr	r0, [pc, #48]	; 46d90 <Mat_VarReadDataLinear5+0x520>
   46d5c:	add	r0, pc, r0
   46d60:	bl	161c <Mat_Critical@plt>
   46d64:	b	46b58 <Mat_VarReadDataLinear5+0x2e8>
   46d68:	mvn	r9, #0
   46d6c:	b	46928 <Mat_VarReadDataLinear5+0xb8>
   46d70:	bl	14f0 <zError@plt>
   46d74:	mov	r1, r0
   46d78:	ldr	r0, [pc, #20]	; 46d94 <Mat_VarReadDataLinear5+0x524>
   46d7c:	mvn	r9, #0
   46d80:	add	r0, pc, r0
   46d84:	bl	161c <Mat_Critical@plt>
   46d88:	b	46928 <Mat_VarReadDataLinear5+0xb8>
   46d8c:	.word	0x00007ddc
   46d90:	.word	0x00007dc4
   46d94:	.word	0x00007da0

00046d98 <Mat_VarWrite5>:
   46d98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   46d9c:	mov	r3, #5
   46da0:	mov	ip, #6
   46da4:	strd	r6, [sp, #8]
   46da8:	subs	r6, r0, #0
   46dac:	strd	r8, [sp, #16]
   46db0:	mov	r8, #0
   46db4:	strd	sl, [sp, #24]
   46db8:	mov	sl, r2
   46dbc:	mov	r2, #8
   46dc0:	str	lr, [sp, #32]
   46dc4:	sub	sp, sp, #4096	; 0x1000
   46dc8:	sub	sp, sp, #52	; 0x34
   46dcc:	add	r4, sp, #48	; 0x30
   46dd0:	str	ip, [r4, #-28]	; 0xffffffe4
   46dd4:	str	r3, [r4, #-24]	; 0xffffffe8
   46dd8:	mov	r3, #14
   46ddc:	str	r2, [r4, #-20]	; 0xffffffec
   46de0:	str	r8, [r4, #-16]
   46de4:	str	r3, [r4, #-12]
   46de8:	str	r8, [r4, #-4]
   46dec:	beq	475dc <Mat_VarWrite5+0x844>
   46df0:	mov	r7, r1
   46df4:	mov	r2, #2
   46df8:	ldr	r0, [r6]
   46dfc:	mov	r1, r8
   46e00:	bl	1694 <fseek@plt>
   46e04:	cmp	r7, #0
   46e08:	beq	475dc <Mat_VarWrite5+0x844>
   46e0c:	ldr	r3, [r7, #36]	; 0x24
   46e10:	cmp	r3, #0
   46e14:	beq	475dc <Mat_VarWrite5+0x844>
   46e18:	cmp	sl, #0
   46e1c:	beq	46ec0 <Mat_VarWrite5+0x128>
   46e20:	cmp	sl, #1
   46e24:	movne	r7, #1
   46e28:	beq	4718c <Mat_VarWrite5+0x3f4>
   46e2c:	ldr	r0, [r6]
   46e30:	bl	14b4 <ftell@plt>
   46e34:	mov	r5, r0
   46e38:	adds	r0, r0, #1
   46e3c:	movne	r0, #1
   46e40:	ands	r7, r7, r0
   46e44:	bne	46e78 <Mat_VarWrite5+0xe0>
   46e48:	ldr	r0, [pc, #1964]	; 475fc <Mat_VarWrite5+0x864>
   46e4c:	add	r0, pc, r0
   46e50:	bl	161c <Mat_Critical@plt>
   46e54:	mov	r0, r7
   46e58:	add	sp, sp, #4096	; 0x1000
   46e5c:	add	sp, sp, #52	; 0x34
   46e60:	ldrd	r4, [sp]
   46e64:	ldrd	r6, [sp, #8]
   46e68:	ldrd	r8, [sp, #16]
   46e6c:	ldrd	sl, [sp, #24]
   46e70:	add	sp, sp, #32
   46e74:	pop	{pc}		; (ldr pc, [sp], #4)
   46e78:	sub	r8, r5, r8
   46e7c:	mvn	r1, #3
   46e80:	ldr	r0, [r6]
   46e84:	mov	r2, #1
   46e88:	sub	r1, r1, r8
   46e8c:	str	r8, [r4, #-8]!
   46e90:	bl	1694 <fseek@plt>
   46e94:	mov	r2, #1
   46e98:	mov	r1, #4
   46e9c:	ldr	r3, [r6]
   46ea0:	mov	r0, r4
   46ea4:	bl	1514 <fwrite@plt>
   46ea8:	mov	r1, r5
   46eac:	mov	r2, #0
   46eb0:	ldr	r0, [r6]
   46eb4:	bl	1694 <fseek@plt>
   46eb8:	mov	r0, #0
   46ebc:	b	46e58 <Mat_VarWrite5+0xc0>
   46ec0:	mov	r2, #1
   46ec4:	mov	r1, #4
   46ec8:	ldr	r3, [r6]
   46ecc:	sub	r0, r4, #12
   46ed0:	sub	r5, r4, #16
   46ed4:	bl	1514 <fwrite@plt>
   46ed8:	mov	r2, #1
   46edc:	mov	r1, #4
   46ee0:	ldr	r3, [r6]
   46ee4:	mov	r0, r5
   46ee8:	bl	1514 <fwrite@plt>
   46eec:	ldr	r0, [r6]
   46ef0:	bl	14b4 <ftell@plt>
   46ef4:	ldr	r2, [r7, #16]
   46ef8:	mov	r8, r0
   46efc:	ldr	r1, [r7, #20]
   46f00:	uxtb	r3, r2
   46f04:	cmp	r1, #0
   46f08:	str	r3, [r4, #-32]	; 0xffffffe0
   46f0c:	orrne	r3, r3, #2048	; 0x800
   46f10:	strne	r3, [r4, #-32]	; 0xffffffe0
   46f14:	ldr	r3, [r7, #24]
   46f18:	cmp	r3, #0
   46f1c:	beq	46f2c <Mat_VarWrite5+0x194>
   46f20:	ldr	r3, [r4, #-32]	; 0xffffffe0
   46f24:	orr	r3, r3, #1024	; 0x400
   46f28:	str	r3, [r4, #-32]	; 0xffffffe0
   46f2c:	ldr	r3, [r7, #28]
   46f30:	cmp	r3, #0
   46f34:	bne	4717c <Mat_VarWrite5+0x3e4>
   46f38:	cmp	r2, #5
   46f3c:	bne	46f4c <Mat_VarWrite5+0x1b4>
   46f40:	ldr	r3, [r7, #40]	; 0x28
   46f44:	ldr	r3, [r3]
   46f48:	str	r3, [r4, #-4]
   46f4c:	mov	r2, #1
   46f50:	mov	r1, #4
   46f54:	ldr	r3, [r6]
   46f58:	sub	r0, r4, #28
   46f5c:	add	r9, sp, #2096	; 0x830
   46f60:	bl	1514 <fwrite@plt>
   46f64:	mov	r2, #1
   46f68:	mov	r1, #4
   46f6c:	ldr	r3, [r6]
   46f70:	sub	r0, r4, #20
   46f74:	bl	1514 <fwrite@plt>
   46f78:	mov	r2, #1
   46f7c:	mov	r1, #4
   46f80:	ldr	r3, [r6]
   46f84:	sub	r0, r4, #32
   46f88:	bl	1514 <fwrite@plt>
   46f8c:	mov	r2, #1
   46f90:	mov	r1, #4
   46f94:	ldr	r3, [r6]
   46f98:	sub	r0, r4, #4
   46f9c:	bl	1514 <fwrite@plt>
   46fa0:	ldr	ip, [r7, #4]
   46fa4:	mov	r2, #1
   46fa8:	mov	r1, #4
   46fac:	sub	r0, r4, #24
   46fb0:	ldr	r3, [r6]
   46fb4:	lsl	ip, ip, #2
   46fb8:	str	ip, [r4, #-8]
   46fbc:	bl	1514 <fwrite@plt>
   46fc0:	mov	r2, #1
   46fc4:	mov	r1, #4
   46fc8:	ldr	r3, [r6]
   46fcc:	sub	r0, r4, #8
   46fd0:	bl	1514 <fwrite@plt>
   46fd4:	ldr	r3, [r7, #4]
   46fd8:	cmp	r3, #0
   46fdc:	ble	47010 <Mat_VarWrite5+0x278>
   46fe0:	ldr	ip, [r7, #32]
   46fe4:	mov	r2, #1
   46fe8:	mov	r1, #4
   46fec:	mov	r0, r9
   46ff0:	ldr	r3, [r6]
   46ff4:	ldr	ip, [ip, sl, lsl #2]
   46ff8:	add	sl, sl, r2
   46ffc:	str	ip, [sp, #2096]	; 0x830
   47000:	bl	1514 <fwrite@plt>
   47004:	ldr	r3, [r7, #4]
   47008:	cmp	r3, sl
   4700c:	bgt	46fe0 <Mat_VarWrite5+0x248>
   47010:	tst	r3, #1
   47014:	ldr	sl, [r6]
   47018:	bne	474ec <Mat_VarWrite5+0x754>
   4701c:	ldr	r5, [r7, #36]	; 0x24
   47020:	mov	fp, #1
   47024:	mov	r0, r5
   47028:	bl	15c8 <strlen@plt>
   4702c:	cmp	r0, #4
   47030:	mov	r0, r5
   47034:	bls	47108 <Mat_VarWrite5+0x370>
   47038:	str	fp, [r4]
   4703c:	bl	15c8 <strlen@plt>
   47040:	mov	ip, #0
   47044:	mov	r3, sl
   47048:	str	r0, [sp, #2096]	; 0x830
   4704c:	mov	r2, fp
   47050:	mov	r1, #4
   47054:	mov	r0, r4
   47058:	strb	ip, [r4, #-33]	; 0xffffffdf
   4705c:	bl	1514 <fwrite@plt>
   47060:	mov	r2, fp
   47064:	mov	r1, #4
   47068:	ldr	r3, [r6]
   4706c:	mov	r0, r9
   47070:	bl	1514 <fwrite@plt>
   47074:	mov	r1, fp
   47078:	ldr	r3, [r6]
   4707c:	ldr	r0, [r7, #36]	; 0x24
   47080:	ldr	r2, [sp, #2096]	; 0x830
   47084:	bl	1514 <fwrite@plt>
   47088:	ldr	r3, [sp, #2096]	; 0x830
   4708c:	ands	r5, r3, #7
   47090:	beq	470c4 <Mat_VarWrite5+0x32c>
   47094:	rsbs	r3, r3, #0
   47098:	add	r9, sp, #15
   4709c:	and	r3, r3, #7
   470a0:	rsbpl	r5, r3, #0
   470a4:	mov	r2, #1
   470a8:	mov	r0, r9
   470ac:	ldr	r3, [r6]
   470b0:	add	r5, r5, r2
   470b4:	mov	r1, r2
   470b8:	bl	1514 <fwrite@plt>
   470bc:	cmp	r5, #8
   470c0:	bne	470a4 <Mat_VarWrite5+0x30c>
   470c4:	ldr	r5, [r7, #52]	; 0x34
   470c8:	cmp	r5, #0
   470cc:	streq	r5, [r7, #16]
   470d0:	beq	470f0 <Mat_VarWrite5+0x358>
   470d4:	ldr	r0, [r6]
   470d8:	bl	14b4 <ftell@plt>
   470dc:	ldr	r3, [r7, #52]	; 0x34
   470e0:	str	r0, [r5]
   470e4:	ldr	r3, [r3]
   470e8:	cmn	r3, #1
   470ec:	beq	475ac <Mat_VarWrite5+0x814>
   470f0:	mov	r1, r7
   470f4:	mov	r0, r6
   470f8:	bl	40998 <WriteType>
   470fc:	adds	r7, r8, #1
   47100:	movne	r7, #1
   47104:	b	46e2c <Mat_VarWrite5+0x94>
   47108:	str	fp, [sp, #2096]	; 0x830
   4710c:	bl	15c8 <strlen@plt>
   47110:	lsl	ip, r0, #16
   47114:	mov	r2, #0
   47118:	mov	r5, r0
   4711c:	mov	r3, sl
   47120:	mov	r1, #4
   47124:	orr	ip, ip, fp
   47128:	mov	r0, r9
   4712c:	strb	r2, [r4]
   47130:	mov	r2, fp
   47134:	str	ip, [sp, #2096]	; 0x830
   47138:	bl	1514 <fwrite@plt>
   4713c:	mov	r1, fp
   47140:	mov	r2, r5
   47144:	ldr	r3, [r6]
   47148:	ldr	r0, [r7, #36]	; 0x24
   4714c:	bl	1514 <fwrite@plt>
   47150:	cmp	r5, #3
   47154:	bhi	470c4 <Mat_VarWrite5+0x32c>
   47158:	mov	r2, #1
   4715c:	mov	r0, r4
   47160:	ldr	r3, [r6]
   47164:	add	r5, r5, r2
   47168:	mov	r1, r2
   4716c:	bl	1514 <fwrite@plt>
   47170:	cmp	r5, #4
   47174:	bne	47158 <Mat_VarWrite5+0x3c0>
   47178:	b	470c4 <Mat_VarWrite5+0x32c>
   4717c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   47180:	orr	r3, r3, #512	; 0x200
   47184:	str	r3, [r4, #-32]	; 0xffffffe0
   47188:	b	46f38 <Mat_VarWrite5+0x1a0>
   4718c:	add	r9, sp, #2096	; 0x830
   47190:	mov	r1, r8
   47194:	mov	r2, #2048	; 0x800
   47198:	mov	r0, r9
   4719c:	bl	15f8 <memset@plt>
   471a0:	mov	r1, #56	; 0x38
   471a4:	mov	r0, sl
   471a8:	bl	140c <calloc@plt>
   471ac:	subs	r5, r0, #0
   471b0:	beq	475dc <Mat_VarWrite5+0x844>
   471b4:	ldr	r2, [pc, #1092]	; 47600 <Mat_VarWrite5+0x868>
   471b8:	mov	r3, #56	; 0x38
   471bc:	mvn	r1, #0
   471c0:	add	r2, pc, r2
   471c4:	bl	1550 <deflateInit_@plt>
   471c8:	subs	fp, r0, #0
   471cc:	bne	475bc <Mat_VarWrite5+0x824>
   471d0:	mov	ip, #15
   471d4:	mov	r0, r4
   471d8:	ldr	r3, [r6]
   471dc:	mov	r2, sl
   471e0:	mov	r1, #4
   471e4:	str	ip, [r0, #-12]!
   471e8:	bl	1514 <fwrite@plt>
   471ec:	mov	r2, sl
   471f0:	mov	r1, #4
   471f4:	ldr	r3, [r6]
   471f8:	sub	r0, r4, #16
   471fc:	bl	1514 <fwrite@plt>
   47200:	ldr	r0, [r6]
   47204:	bl	14b4 <ftell@plt>
   47208:	ldr	r2, [r7, #16]
   4720c:	mov	r8, r0
   47210:	ldr	r1, [r7, #20]
   47214:	uxtb	r3, r2
   47218:	cmp	r1, #0
   4721c:	str	r3, [r4, #-32]	; 0xffffffe0
   47220:	orrne	r3, r3, #2048	; 0x800
   47224:	strne	r3, [r4, #-32]	; 0xffffffe0
   47228:	ldr	r3, [r7, #24]
   4722c:	cmp	r3, #0
   47230:	beq	47240 <Mat_VarWrite5+0x4a8>
   47234:	ldr	r3, [r4, #-32]	; 0xffffffe0
   47238:	orr	r3, r3, #1024	; 0x400
   4723c:	str	r3, [r4, #-32]	; 0xffffffe0
   47240:	ldr	r3, [r7, #28]
   47244:	cmp	r3, #0
   47248:	beq	47258 <Mat_VarWrite5+0x4c0>
   4724c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   47250:	orr	r3, r3, #512	; 0x200
   47254:	str	r3, [r4, #-32]	; 0xffffffe0
   47258:	cmp	r2, #5
   4725c:	bne	4726c <Mat_VarWrite5+0x4d4>
   47260:	ldr	r3, [r7, #40]	; 0x28
   47264:	ldr	r3, [r3]
   47268:	str	r3, [r4, #-4]
   4726c:	ldr	r0, [r7, #36]	; 0x24
   47270:	mov	r3, #14
   47274:	str	r3, [sp, #2096]	; 0x830
   47278:	cmp	r0, #0
   4727c:	beq	4728c <Mat_VarWrite5+0x4f4>
   47280:	bl	15c8 <strlen@plt>
   47284:	cmp	r0, #4
   47288:	bhi	47594 <Mat_VarWrite5+0x7fc>
   4728c:	mov	r3, #24
   47290:	str	r3, [sp, #4]
   47294:	mov	r0, r7
   47298:	mov	sl, #2048	; 0x800
   4729c:	bl	41ac4 <GetTypeBufSize>
   472a0:	ldr	r3, [sp, #4]
   472a4:	str	r9, [r5]
   472a8:	add	r0, r0, r3
   472ac:	mov	r3, #8
   472b0:	str	r3, [r5, #4]
   472b4:	str	r0, [sp, #2100]	; 0x834
   472b8:	mov	r1, #0
   472bc:	mov	r0, r5
   472c0:	str	r4, [r5, #12]
   472c4:	str	sl, [r5, #16]
   472c8:	bl	14fc <deflate@plt>
   472cc:	ldr	r2, [r5, #16]
   472d0:	mov	r1, #1
   472d4:	mov	r0, r4
   472d8:	ldr	r3, [r6]
   472dc:	rsb	r2, r2, #2048	; 0x800
   472e0:	bl	1514 <fwrite@plt>
   472e4:	ldr	r3, [r5, #16]
   472e8:	cmp	r3, #0
   472ec:	beq	472b8 <Mat_VarWrite5+0x520>
   472f0:	ldr	r3, [r4, #-32]	; 0xffffffe0
   472f4:	ldr	r2, [r4, #-28]	; 0xffffffe4
   472f8:	ldr	ip, [r7, #4]
   472fc:	ldr	r1, [r4, #-24]	; 0xffffffe8
   47300:	str	r2, [sp, #2096]	; 0x830
   47304:	str	r3, [sp, #2104]	; 0x838
   47308:	ldr	r2, [r4, #-20]	; 0xffffffec
   4730c:	lsl	r0, ip, #2
   47310:	cmp	ip, #0
   47314:	ldr	r3, [r4, #-4]
   47318:	str	r0, [r4, #-8]
   4731c:	str	r2, [sp, #2100]	; 0x834
   47320:	str	r3, [sp, #2108]	; 0x83c
   47324:	str	r1, [sp, #2112]	; 0x840
   47328:	str	r0, [sp, #2116]	; 0x844
   4732c:	ble	475e4 <Mat_VarWrite5+0x84c>
   47330:	ldr	r3, [r7, #32]
   47334:	add	r2, r9, #20
   47338:	add	r0, r0, r3
   4733c:	ldr	r1, [r3], #4
   47340:	cmp	r0, r3
   47344:	str	r1, [r2, #4]!
   47348:	bne	4733c <Mat_VarWrite5+0x5a4>
   4734c:	add	r3, ip, #6
   47350:	mov	fp, ip
   47354:	tst	ip, #1
   47358:	beq	47374 <Mat_VarWrite5+0x5dc>
   4735c:	add	r2, sp, #4096	; 0x1000
   47360:	ldr	r1, [r4, #-16]
   47364:	add	r2, r2, #48	; 0x30
   47368:	add	r2, r2, r3, lsl #2
   4736c:	add	r3, fp, #7
   47370:	str	r1, [r2, #-2048]	; 0xfffff800
   47374:	lsl	r3, r3, #2
   47378:	mov	sl, #2048	; 0x800
   4737c:	str	r9, [r5]
   47380:	str	r3, [r5, #4]
   47384:	mov	r1, #0
   47388:	mov	r0, r5
   4738c:	str	r4, [r5, #12]
   47390:	str	sl, [r5, #16]
   47394:	bl	14fc <deflate@plt>
   47398:	ldr	r2, [r5, #16]
   4739c:	mov	r1, #1
   473a0:	mov	r0, r4
   473a4:	ldr	r3, [r6]
   473a8:	rsb	r2, r2, #2048	; 0x800
   473ac:	bl	1514 <fwrite@plt>
   473b0:	ldr	r3, [r5, #16]
   473b4:	cmp	r3, #0
   473b8:	beq	47384 <Mat_VarWrite5+0x5ec>
   473bc:	ldr	fp, [r7, #36]	; 0x24
   473c0:	mov	r0, fp
   473c4:	bl	15c8 <strlen@plt>
   473c8:	cmp	r0, #4
   473cc:	mov	sl, r0
   473d0:	bhi	47508 <Mat_VarWrite5+0x770>
   473d4:	lsl	r3, r0, #16
   473d8:	mov	r0, #0
   473dc:	mov	r2, sl
   473e0:	mov	r1, fp
   473e4:	mov	sl, #2048	; 0x800
   473e8:	orr	r3, r3, #1
   473ec:	str	r0, [sp, #2100]	; 0x834
   473f0:	add	r0, r9, #4
   473f4:	str	r3, [sp, #2096]	; 0x830
   473f8:	bl	1490 <memcpy@plt>
   473fc:	mov	r3, #8
   47400:	str	r9, [r5]
   47404:	str	r3, [r5, #4]
   47408:	mov	r1, #0
   4740c:	mov	r0, r5
   47410:	str	r4, [r5, #12]
   47414:	str	sl, [r5, #16]
   47418:	bl	14fc <deflate@plt>
   4741c:	ldr	r2, [r5, #16]
   47420:	mov	r1, #1
   47424:	mov	r0, r4
   47428:	ldr	r3, [r6]
   4742c:	rsb	r2, r2, #2048	; 0x800
   47430:	bl	1514 <fwrite@plt>
   47434:	ldr	r3, [r5, #16]
   47438:	cmp	r3, #0
   4743c:	beq	47408 <Mat_VarWrite5+0x670>
   47440:	ldr	r9, [r7, #52]	; 0x34
   47444:	cmp	r9, #0
   47448:	beq	4758c <Mat_VarWrite5+0x7f4>
   4744c:	ldr	r0, [r6]
   47450:	bl	14b4 <ftell@plt>
   47454:	ldr	r3, [r7, #52]	; 0x34
   47458:	str	r0, [r9]
   4745c:	ldr	r3, [r3]
   47460:	cmn	r3, #1
   47464:	beq	475ec <Mat_VarWrite5+0x854>
   47468:	mov	r1, r7
   4746c:	mov	r2, r5
   47470:	mov	r0, r6
   47474:	mov	r9, #2048	; 0x800
   47478:	bl	41d98 <WriteCompressedType>
   4747c:	mov	r3, #0
   47480:	str	r3, [r5]
   47484:	str	r3, [r5, #4]
   47488:	b	47498 <Mat_VarWrite5+0x700>
   4748c:	ldr	r3, [r5, #16]
   47490:	cmp	r3, #0
   47494:	bne	474d0 <Mat_VarWrite5+0x738>
   47498:	mov	r1, #4
   4749c:	mov	r0, r5
   474a0:	str	r4, [r5, #12]
   474a4:	str	r9, [r5, #16]
   474a8:	bl	14fc <deflate@plt>
   474ac:	ldr	r2, [r5, #16]
   474b0:	mov	r7, r0
   474b4:	mov	r1, #1
   474b8:	mov	r0, r4
   474bc:	ldr	r3, [r6]
   474c0:	rsb	r2, r2, #2048	; 0x800
   474c4:	bl	1514 <fwrite@plt>
   474c8:	cmp	r7, #1
   474cc:	bne	4748c <Mat_VarWrite5+0x6f4>
   474d0:	adds	r7, r8, #1
   474d4:	mov	r0, r5
   474d8:	movne	r7, #1
   474dc:	bl	1628 <deflateEnd@plt>
   474e0:	mov	r0, r5
   474e4:	bl	1478 <free@plt>
   474e8:	b	46e2c <Mat_VarWrite5+0x94>
   474ec:	mov	r3, sl
   474f0:	mov	r0, r5
   474f4:	mov	r2, #1
   474f8:	mov	r1, #4
   474fc:	bl	1514 <fwrite@plt>
   47500:	ldr	sl, [r6]
   47504:	b	4701c <Mat_VarWrite5+0x284>
   47508:	mov	r2, #2048	; 0x800
   4750c:	mov	r1, #0
   47510:	mov	r0, r9
   47514:	bl	15f8 <memset@plt>
   47518:	mov	r3, #1
   4751c:	mov	r2, sl
   47520:	mov	r1, fp
   47524:	add	r0, r9, #8
   47528:	str	r3, [sp, #2096]	; 0x830
   4752c:	str	sl, [sp, #2100]	; 0x834
   47530:	bl	1490 <memcpy@plt>
   47534:	ands	r3, sl, #7
   47538:	str	r9, [r5]
   4753c:	rsbne	r3, r3, #8
   47540:	addne	sl, sl, r3
   47544:	add	r3, sl, #8
   47548:	mov	sl, #2048	; 0x800
   4754c:	str	r3, [r5, #4]
   47550:	mov	r1, #0
   47554:	mov	r0, r5
   47558:	str	r4, [r5, #12]
   4755c:	str	sl, [r5, #16]
   47560:	bl	14fc <deflate@plt>
   47564:	ldr	r2, [r5, #16]
   47568:	mov	r1, #1
   4756c:	mov	r0, r4
   47570:	ldr	r3, [r6]
   47574:	rsb	r2, r2, #2048	; 0x800
   47578:	bl	1514 <fwrite@plt>
   4757c:	ldr	r3, [r5, #16]
   47580:	cmp	r3, #0
   47584:	beq	47550 <Mat_VarWrite5+0x7b8>
   47588:	b	47440 <Mat_VarWrite5+0x6a8>
   4758c:	str	r9, [r7, #16]
   47590:	b	47468 <Mat_VarWrite5+0x6d0>
   47594:	tst	r0, #7
   47598:	bicne	r0, r0, #7
   4759c:	addne	r0, r0, #8
   475a0:	add	r3, r0, #24
   475a4:	str	r3, [sp, #4]
   475a8:	b	47294 <Mat_VarWrite5+0x4fc>
   475ac:	ldr	r0, [pc, #80]	; 47604 <Mat_VarWrite5+0x86c>
   475b0:	add	r0, pc, r0
   475b4:	bl	161c <Mat_Critical@plt>
   475b8:	b	470f0 <Mat_VarWrite5+0x358>
   475bc:	mov	r0, r5
   475c0:	bl	1478 <free@plt>
   475c4:	mov	r0, fp
   475c8:	bl	14f0 <zError@plt>
   475cc:	mov	r1, r0
   475d0:	ldr	r0, [pc, #48]	; 47608 <Mat_VarWrite5+0x870>
   475d4:	add	r0, pc, r0
   475d8:	bl	161c <Mat_Critical@plt>
   475dc:	mvn	r0, #0
   475e0:	b	46e58 <Mat_VarWrite5+0xc0>
   475e4:	mov	r3, #6
   475e8:	b	47354 <Mat_VarWrite5+0x5bc>
   475ec:	ldr	r0, [pc, #24]	; 4760c <Mat_VarWrite5+0x874>
   475f0:	add	r0, pc, r0
   475f4:	bl	161c <Mat_Critical@plt>
   475f8:	b	47468 <Mat_VarWrite5+0x6d0>
   475fc:	.word	0x000079ac
   47600:	.word	0x00007a40
   47604:	.word	0x00007248
   47608:	.word	0x00007634
   4760c:	.word	0x00007208

00047610 <Mat_VarReadNextInfo5>:
   47610:	strd	r4, [sp, #-36]!	; 0xffffffdc
   47614:	subs	r4, r0, #0
   47618:	strd	r6, [sp, #8]
   4761c:	strd	r8, [sp, #16]
   47620:	strd	sl, [sp, #24]
   47624:	str	lr, [sp, #32]
   47628:	sub	sp, sp, #92	; 0x5c
   4762c:	beq	47714 <Mat_VarReadNextInfo5+0x104>
   47630:	ldr	r0, [r4]
   47634:	bl	14b4 <ftell@plt>
   47638:	cmn	r0, #1
   4763c:	mov	r6, r0
   47640:	beq	478b4 <Mat_VarReadNextInfo5+0x2a4>
   47644:	add	r5, sp, #12
   47648:	mov	r2, #1
   4764c:	ldr	r3, [r4]
   47650:	mov	r0, r5
   47654:	mov	r1, #4
   47658:	bl	1520 <fread@plt>
   4765c:	cmp	r0, #0
   47660:	beq	47714 <Mat_VarReadNextInfo5+0x104>
   47664:	add	r7, sp, #16
   47668:	mov	r2, #1
   4766c:	ldr	r3, [r4]
   47670:	mov	r0, r7
   47674:	mov	r1, #4
   47678:	bl	1520 <fread@plt>
   4767c:	ldr	r3, [r4, #20]
   47680:	cmp	r3, #0
   47684:	bne	47838 <Mat_VarReadNextInfo5+0x228>
   47688:	ldr	r1, [sp, #12]
   4768c:	cmp	r1, #14
   47690:	beq	4774c <Mat_VarReadNextInfo5+0x13c>
   47694:	cmp	r1, #15
   47698:	bne	47738 <Mat_VarReadNextInfo5+0x128>
   4769c:	add	r7, sp, #24
   476a0:	mov	r2, #64	; 0x40
   476a4:	mov	r1, #0
   476a8:	mov	r0, r7
   476ac:	bl	15f8 <memset@plt>
   476b0:	bl	1508 <Mat_VarCalloc@plt>
   476b4:	mov	r5, r0
   476b8:	mov	r3, #1
   476bc:	mov	r0, r3
   476c0:	mov	r1, #56	; 0x38
   476c4:	ldr	r8, [r5, #52]	; 0x34
   476c8:	str	r3, [r5, #48]	; 0x30
   476cc:	bl	140c <calloc@plt>
   476d0:	ldr	r1, [pc, #1852]	; 47e14 <Mat_VarReadNextInfo5+0x804>
   476d4:	mov	r2, #56	; 0x38
   476d8:	str	r0, [r8, #12]
   476dc:	add	r1, pc, r1
   476e0:	bl	1640 <inflateInit_@plt>
   476e4:	subs	r8, r0, #0
   476e8:	beq	47858 <Mat_VarReadNextInfo5+0x248>
   476ec:	mov	r0, r5
   476f0:	mov	r5, #0
   476f4:	bl	158c <Mat_VarFree@plt>
   476f8:	mov	r0, r8
   476fc:	bl	14f0 <zError@plt>
   47700:	mov	r1, r0
   47704:	ldr	r0, [pc, #1804]	; 47e18 <Mat_VarReadNextInfo5+0x808>
   47708:	add	r0, pc, r0
   4770c:	bl	161c <Mat_Critical@plt>
   47710:	b	47718 <Mat_VarReadNextInfo5+0x108>
   47714:	mov	r5, #0
   47718:	mov	r0, r5
   4771c:	add	sp, sp, #92	; 0x5c
   47720:	ldrd	r4, [sp]
   47724:	ldrd	r6, [sp, #8]
   47728:	ldrd	r8, [sp, #16]
   4772c:	ldrd	sl, [sp, #24]
   47730:	add	sp, sp, #32
   47734:	pop	{pc}		; (ldr pc, [sp], #4)
   47738:	ldr	r0, [pc, #1756]	; 47e1c <Mat_VarReadNextInfo5+0x80c>
   4773c:	mov	r5, #0
   47740:	add	r0, pc, r0
   47744:	bl	161c <Mat_Critical@plt>
   47748:	b	47718 <Mat_VarReadNextInfo5+0x108>
   4774c:	bl	1508 <Mat_VarCalloc@plt>
   47750:	add	r7, sp, #24
   47754:	mov	r5, r0
   47758:	ldr	r3, [r4]
   4775c:	mov	r2, #6
   47760:	mov	r0, r7
   47764:	mov	r1, #4
   47768:	bl	1520 <fread@plt>
   4776c:	ldr	r3, [r4, #20]
   47770:	cmp	r3, #0
   47774:	bne	47978 <Mat_VarReadNextInfo5+0x368>
   47778:	ldr	r3, [sp, #24]
   4777c:	cmp	r3, #6
   47780:	beq	478c8 <Mat_VarReadNextInfo5+0x2b8>
   47784:	ldr	lr, [sp, #40]	; 0x28
   47788:	add	r3, r5, #32
   4778c:	add	r2, r5, #4
   47790:	add	r1, r4, #20
   47794:	mov	r0, r4
   47798:	ldr	ip, [sp, #44]	; 0x2c
   4779c:	str	lr, [sp]
   477a0:	str	ip, [sp, #4]
   477a4:	bl	40820 <ReadRankDims.isra.2>
   477a8:	mov	r2, #2
   477ac:	mov	r1, #4
   477b0:	ldr	r3, [r4]
   477b4:	mov	r0, r7
   477b8:	bl	1520 <fread@plt>
   477bc:	ldr	r3, [r4, #20]
   477c0:	cmp	r3, #0
   477c4:	bne	47900 <Mat_VarReadNextInfo5+0x2f0>
   477c8:	ldr	r3, [sp, #24]
   477cc:	cmp	r3, #1
   477d0:	beq	479c0 <Mat_VarReadNextInfo5+0x3b0>
   477d4:	uxth	r2, r3
   477d8:	cmp	r2, #1
   477dc:	beq	479c8 <Mat_VarReadNextInfo5+0x3b8>
   477e0:	ldr	r3, [r5, #16]
   477e4:	cmp	r3, #2
   477e8:	beq	47a08 <Mat_VarReadNextInfo5+0x3f8>
   477ec:	cmp	r3, #1
   477f0:	beq	47b58 <Mat_VarReadNextInfo5+0x548>
   477f4:	cmp	r3, #16
   477f8:	beq	47b68 <Mat_VarReadNextInfo5+0x558>
   477fc:	ldr	r0, [r4]
   47800:	ldr	r7, [r5, #52]	; 0x34
   47804:	bl	14b4 <ftell@plt>
   47808:	ldr	r3, [r5, #52]	; 0x34
   4780c:	str	r0, [r7]
   47810:	ldr	r3, [r3]
   47814:	cmn	r3, #1
   47818:	beq	47a18 <Mat_VarReadNextInfo5+0x408>
   4781c:	ldr	r1, [sp, #16]
   47820:	mov	r2, #0
   47824:	ldr	r0, [r4]
   47828:	add	r1, r1, #8
   4782c:	add	r1, r1, r6
   47830:	bl	1694 <fseek@plt>
   47834:	b	47718 <Mat_VarReadNextInfo5+0x108>
   47838:	mov	r0, r5
   4783c:	bl	18c4 <Mat_int32Swap>
   47840:	mov	r0, r7
   47844:	bl	18c4 <Mat_int32Swap>
   47848:	ldr	r1, [sp, #12]
   4784c:	cmp	r1, #14
   47850:	bne	47694 <Mat_VarReadNextInfo5+0x84>
   47854:	b	4774c <Mat_VarReadNextInfo5+0x13c>
   47858:	mov	r2, r7
   4785c:	mov	r1, r5
   47860:	mov	r0, r4
   47864:	bl	240c <InflateVarTag>
   47868:	ldr	r3, [r4, #20]
   4786c:	mov	r9, r0
   47870:	cmp	r3, #0
   47874:	bne	47b44 <Mat_VarReadNextInfo5+0x534>
   47878:	ldr	r3, [sp, #24]
   4787c:	cmp	r3, #14
   47880:	beq	47a28 <Mat_VarReadNextInfo5+0x418>
   47884:	ldr	r1, [sp, #16]
   47888:	mov	r2, #1
   4788c:	ldr	r0, [r4]
   47890:	sub	r1, r1, r9
   47894:	bl	1694 <fseek@plt>
   47898:	mov	r0, r5
   4789c:	mov	r5, #0
   478a0:	bl	158c <Mat_VarFree@plt>
   478a4:	ldr	r0, [pc, #1396]	; 47e20 <Mat_VarReadNextInfo5+0x810>
   478a8:	add	r0, pc, r0
   478ac:	bl	161c <Mat_Critical@plt>
   478b0:	b	47718 <Mat_VarReadNextInfo5+0x108>
   478b4:	ldr	r0, [pc, #1384]	; 47e24 <Mat_VarReadNextInfo5+0x814>
   478b8:	mov	r5, #0
   478bc:	add	r0, pc, r0
   478c0:	bl	161c <Mat_Critical@plt>
   478c4:	b	47718 <Mat_VarReadNextInfo5+0x108>
   478c8:	ldr	r3, [sp, #32]
   478cc:	uxtb	r2, r3
   478d0:	and	r0, r3, #2048	; 0x800
   478d4:	cmp	r2, #17
   478d8:	and	r1, r3, #1024	; 0x400
   478dc:	and	r3, r3, #512	; 0x200
   478e0:	bhi	479ac <Mat_VarReadNextInfo5+0x39c>
   478e4:	cmp	r2, #5
   478e8:	str	r2, [r5, #16]
   478ec:	strd	r0, [r5, #20]
   478f0:	str	r3, [r5, #28]
   478f4:	ldreq	r3, [sp, #36]	; 0x24
   478f8:	streq	r3, [r5]
   478fc:	b	47784 <Mat_VarReadNextInfo5+0x174>
   47900:	mov	r0, r7
   47904:	bl	18f8 <Mat_uint32Swap>
   47908:	ldr	r3, [sp, #24]
   4790c:	cmp	r3, #1
   47910:	bne	477d4 <Mat_VarReadNextInfo5+0x1c4>
   47914:	ldr	r3, [r4, #20]
   47918:	cmp	r3, #0
   4791c:	beq	479c0 <Mat_VarReadNextInfo5+0x3b0>
   47920:	add	r0, sp, #28
   47924:	bl	18f8 <Mat_uint32Swap>
   47928:	mov	r8, r0
   4792c:	tst	r8, #7
   47930:	bicne	r7, r8, #7
   47934:	moveq	r7, r8
   47938:	addne	r7, r7, #8
   4793c:	add	r0, r7, #1
   47940:	bl	1544 <malloc@plt>
   47944:	cmp	r0, #0
   47948:	str	r0, [r5, #36]	; 0x24
   4794c:	beq	477e0 <Mat_VarReadNextInfo5+0x1d0>
   47950:	mov	r2, r7
   47954:	mov	r1, #1
   47958:	ldr	r3, [r4]
   4795c:	bl	1520 <fread@plt>
   47960:	cmp	r7, r0
   47964:	bne	47bdc <Mat_VarReadNextInfo5+0x5cc>
   47968:	ldr	r3, [r5, #36]	; 0x24
   4796c:	mov	r2, #0
   47970:	strb	r2, [r3, r8]
   47974:	b	477e0 <Mat_VarReadNextInfo5+0x1d0>
   47978:	mov	r0, r7
   4797c:	bl	18f8 <Mat_uint32Swap>
   47980:	add	r0, sp, #28
   47984:	bl	18f8 <Mat_uint32Swap>
   47988:	add	r0, sp, #32
   4798c:	bl	18f8 <Mat_uint32Swap>
   47990:	add	r0, sp, #36	; 0x24
   47994:	bl	18f8 <Mat_uint32Swap>
   47998:	add	r0, sp, #40	; 0x28
   4799c:	bl	18f8 <Mat_uint32Swap>
   479a0:	add	r0, sp, #44	; 0x2c
   479a4:	bl	18f8 <Mat_uint32Swap>
   479a8:	b	47778 <Mat_VarReadNextInfo5+0x168>
   479ac:	mov	r2, #0
   479b0:	str	r2, [r5, #16]
   479b4:	strd	r0, [r5, #20]
   479b8:	str	r3, [r5, #28]
   479bc:	b	47784 <Mat_VarReadNextInfo5+0x174>
   479c0:	ldr	r8, [sp, #28]
   479c4:	b	4792c <Mat_VarReadNextInfo5+0x31c>
   479c8:	lsr	r7, r3, #16
   479cc:	sub	r3, r7, #1
   479d0:	cmp	r3, #3
   479d4:	bhi	477e0 <Mat_VarReadNextInfo5+0x1d0>
   479d8:	add	r0, r7, #1
   479dc:	bl	1544 <malloc@plt>
   479e0:	cmp	r0, #0
   479e4:	str	r0, [r5, #36]	; 0x24
   479e8:	beq	477e0 <Mat_VarReadNextInfo5+0x1d0>
   479ec:	mov	r2, r7
   479f0:	add	r1, sp, #28
   479f4:	bl	1490 <memcpy@plt>
   479f8:	ldr	r3, [r5, #36]	; 0x24
   479fc:	mov	r2, #0
   47a00:	strb	r2, [r3, r7]
   47a04:	b	477e0 <Mat_VarReadNextInfo5+0x1d0>
   47a08:	mov	r1, r5
   47a0c:	mov	r0, r4
   47a10:	bl	45190 <ReadNextStructField>
   47a14:	b	477fc <Mat_VarReadNextInfo5+0x1ec>
   47a18:	ldr	r0, [pc, #1032]	; 47e28 <Mat_VarReadNextInfo5+0x818>
   47a1c:	add	r0, pc, r0
   47a20:	bl	161c <Mat_Critical@plt>
   47a24:	b	4781c <Mat_VarReadNextInfo5+0x20c>
   47a28:	mov	r2, r7
   47a2c:	mov	r1, r5
   47a30:	mov	r0, r4
   47a34:	bl	259c <InflateArrayFlags>
   47a38:	ldr	r3, [r4, #20]
   47a3c:	cmp	r3, #0
   47a40:	bne	47c2c <Mat_VarReadNextInfo5+0x61c>
   47a44:	ldr	r3, [sp, #24]
   47a48:	cmp	r3, #6
   47a4c:	beq	47bfc <Mat_VarReadNextInfo5+0x5ec>
   47a50:	ldr	r3, [r5, #16]
   47a54:	cmp	r3, #17
   47a58:	beq	4781c <Mat_VarReadNextInfo5+0x20c>
   47a5c:	add	r1, sp, #20
   47a60:	mov	ip, #0
   47a64:	mov	r3, #64	; 0x40
   47a68:	mov	r2, r7
   47a6c:	mov	r0, r4
   47a70:	str	r1, [sp]
   47a74:	mov	r1, r5
   47a78:	str	ip, [sp, #20]
   47a7c:	bl	272c <InflateRankDims>
   47a80:	ldr	r9, [sp, #20]
   47a84:	cmp	r9, #0
   47a88:	movne	r9, #1
   47a8c:	beq	47d08 <Mat_VarReadNextInfo5+0x6f8>
   47a90:	ldr	r3, [r4, #20]
   47a94:	cmp	r3, #0
   47a98:	bne	47c74 <Mat_VarReadNextInfo5+0x664>
   47a9c:	ldr	r3, [sp, #24]
   47aa0:	cmp	r3, #5
   47aa4:	beq	47d6c <Mat_VarReadNextInfo5+0x75c>
   47aa8:	cmp	r9, #0
   47aac:	bne	47cfc <Mat_VarReadNextInfo5+0x6ec>
   47ab0:	mov	r2, r7
   47ab4:	mov	r1, r5
   47ab8:	mov	r0, r4
   47abc:	bl	2a9c <InflateVarNameTag>
   47ac0:	ldr	r3, [r4, #20]
   47ac4:	cmp	r3, #0
   47ac8:	bne	47c88 <Mat_VarReadNextInfo5+0x678>
   47acc:	ldr	r3, [sp, #24]
   47ad0:	cmp	r3, #1
   47ad4:	beq	47d14 <Mat_VarReadNextInfo5+0x704>
   47ad8:	uxth	r2, r3
   47adc:	cmp	r2, #1
   47ae0:	beq	47d1c <Mat_VarReadNextInfo5+0x70c>
   47ae4:	ldr	r3, [r5, #16]
   47ae8:	cmp	r3, #2
   47aec:	beq	47d5c <Mat_VarReadNextInfo5+0x74c>
   47af0:	cmp	r3, #1
   47af4:	beq	47dd0 <Mat_VarReadNextInfo5+0x7c0>
   47af8:	ldr	r3, [r5, #52]	; 0x34
   47afc:	mov	r2, #1
   47b00:	ldr	r0, [r4]
   47b04:	ldr	r3, [r3, #12]
   47b08:	ldr	r1, [r3, #4]
   47b0c:	rsb	r1, r1, #0
   47b10:	bl	1694 <fseek@plt>
   47b14:	ldr	r0, [r4]
   47b18:	ldr	r7, [r5, #52]	; 0x34
   47b1c:	bl	14b4 <ftell@plt>
   47b20:	ldr	r3, [r5, #52]	; 0x34
   47b24:	str	r0, [r7]
   47b28:	ldr	r3, [r3]
   47b2c:	cmn	r3, #1
   47b30:	bne	4781c <Mat_VarReadNextInfo5+0x20c>
   47b34:	ldr	r0, [pc, #752]	; 47e2c <Mat_VarReadNextInfo5+0x81c>
   47b38:	add	r0, pc, r0
   47b3c:	bl	161c <Mat_Critical@plt>
   47b40:	b	4781c <Mat_VarReadNextInfo5+0x20c>
   47b44:	mov	r0, r7
   47b48:	bl	18f8 <Mat_uint32Swap>
   47b4c:	add	r0, sp, #28
   47b50:	bl	18f8 <Mat_uint32Swap>
   47b54:	b	47878 <Mat_VarReadNextInfo5+0x268>
   47b58:	mov	r1, r5
   47b5c:	mov	r0, r4
   47b60:	bl	44758 <ReadNextCell>
   47b64:	b	477fc <Mat_VarReadNextInfo5+0x1ec>
   47b68:	mov	r3, #1
   47b6c:	add	r1, sp, #20
   47b70:	mov	r0, r5
   47b74:	str	r3, [sp, #20]
   47b78:	bl	4996c <SafeMulDims>
   47b7c:	mov	r3, #4
   47b80:	mov	r0, r5
   47b84:	mov	r2, r3
   47b88:	str	r3, [r5, #12]
   47b8c:	ldr	r1, [sp, #20]
   47b90:	bl	499ec <SafeMul>
   47b94:	ldr	r0, [r5]
   47b98:	bl	1544 <malloc@plt>
   47b9c:	cmp	r0, #0
   47ba0:	str	r0, [r5, #40]	; 0x28
   47ba4:	beq	47c48 <Mat_VarReadNextInfo5+0x638>
   47ba8:	ldr	r3, [sp, #20]
   47bac:	cmp	r3, #0
   47bb0:	beq	477fc <Mat_VarReadNextInfo5+0x1ec>
   47bb4:	sub	r8, r0, #4
   47bb8:	mov	r7, #0
   47bbc:	mov	r0, r4
   47bc0:	add	r7, r7, #1
   47bc4:	bl	16b8 <Mat_VarReadNextInfo@plt>
   47bc8:	ldr	r3, [sp, #20]
   47bcc:	str	r0, [r8, #4]!
   47bd0:	cmp	r7, r3
   47bd4:	bcc	47bbc <Mat_VarReadNextInfo5+0x5ac>
   47bd8:	b	477fc <Mat_VarReadNextInfo5+0x1ec>
   47bdc:	ldr	r0, [r5, #36]	; 0x24
   47be0:	bl	1478 <free@plt>
   47be4:	ldr	r0, [pc, #580]	; 47e30 <Mat_VarReadNextInfo5+0x820>
   47be8:	mov	r3, #0
   47bec:	str	r3, [r5, #36]	; 0x24
   47bf0:	add	r0, pc, r0
   47bf4:	bl	161c <Mat_Critical@plt>
   47bf8:	b	477e0 <Mat_VarReadNextInfo5+0x1d0>
   47bfc:	ldr	r2, [sp, #32]
   47c00:	uxtb	r3, r2
   47c04:	and	r0, r2, #2048	; 0x800
   47c08:	cmp	r3, #17
   47c0c:	and	r1, r2, #1024	; 0x400
   47c10:	and	r2, r2, #512	; 0x200
   47c14:	bls	47c54 <Mat_VarReadNextInfo5+0x644>
   47c18:	mov	r3, #0
   47c1c:	str	r3, [r5, #16]
   47c20:	strd	r0, [r5, #20]
   47c24:	str	r2, [r5, #28]
   47c28:	b	47a5c <Mat_VarReadNextInfo5+0x44c>
   47c2c:	mov	r0, r7
   47c30:	bl	18f8 <Mat_uint32Swap>
   47c34:	add	r0, sp, #32
   47c38:	bl	18f8 <Mat_uint32Swap>
   47c3c:	add	r0, sp, #36	; 0x24
   47c40:	bl	18f8 <Mat_uint32Swap>
   47c44:	b	47a44 <Mat_VarReadNextInfo5+0x434>
   47c48:	str	r0, [r5]
   47c4c:	str	r0, [r5, #12]
   47c50:	b	477fc <Mat_VarReadNextInfo5+0x1ec>
   47c54:	cmp	r3, #5
   47c58:	str	r3, [r5, #16]
   47c5c:	strd	r0, [r5, #20]
   47c60:	str	r2, [r5, #28]
   47c64:	bne	47a54 <Mat_VarReadNextInfo5+0x444>
   47c68:	ldr	r3, [sp, #36]	; 0x24
   47c6c:	str	r3, [r5]
   47c70:	b	47a5c <Mat_VarReadNextInfo5+0x44c>
   47c74:	mov	r0, r7
   47c78:	bl	18f8 <Mat_uint32Swap>
   47c7c:	add	r0, sp, #28
   47c80:	bl	18f8 <Mat_uint32Swap>
   47c84:	b	47a9c <Mat_VarReadNextInfo5+0x48c>
   47c88:	mov	r0, r7
   47c8c:	bl	18f8 <Mat_uint32Swap>
   47c90:	ldr	r3, [sp, #24]
   47c94:	cmp	r3, #1
   47c98:	bne	47ad8 <Mat_VarReadNextInfo5+0x4c8>
   47c9c:	ldr	r3, [r4, #20]
   47ca0:	cmp	r3, #0
   47ca4:	beq	47d14 <Mat_VarReadNextInfo5+0x704>
   47ca8:	add	r0, sp, #28
   47cac:	bl	18f8 <Mat_uint32Swap>
   47cb0:	mov	r7, r0
   47cb4:	tst	r7, #7
   47cb8:	bicne	r8, r7, #7
   47cbc:	moveq	r8, r7
   47cc0:	addne	r8, r8, #8
   47cc4:	add	r0, r8, #1
   47cc8:	bl	1544 <malloc@plt>
   47ccc:	cmp	r0, #0
   47cd0:	str	r0, [r5, #36]	; 0x24
   47cd4:	beq	47ae4 <Mat_VarReadNextInfo5+0x4d4>
   47cd8:	mov	r2, r0
   47cdc:	mov	r3, r8
   47ce0:	mov	r1, r5
   47ce4:	mov	r0, r4
   47ce8:	bl	2c2c <InflateVarName>
   47cec:	ldr	r3, [r5, #36]	; 0x24
   47cf0:	mov	r2, #0
   47cf4:	strb	r2, [r3, r7]
   47cf8:	b	47ae4 <Mat_VarReadNextInfo5+0x4d4>
   47cfc:	ldr	r0, [sp, #20]
   47d00:	bl	1478 <free@plt>
   47d04:	b	47ab0 <Mat_VarReadNextInfo5+0x4a0>
   47d08:	add	r3, sp, #32
   47d0c:	str	r3, [sp, #20]
   47d10:	b	47a90 <Mat_VarReadNextInfo5+0x480>
   47d14:	ldr	r7, [sp, #28]
   47d18:	b	47cb4 <Mat_VarReadNextInfo5+0x6a4>
   47d1c:	lsr	r7, r3, #16
   47d20:	sub	r3, r7, #1
   47d24:	cmp	r3, #3
   47d28:	bhi	47ae4 <Mat_VarReadNextInfo5+0x4d4>
   47d2c:	add	r0, r7, #1
   47d30:	bl	1544 <malloc@plt>
   47d34:	cmp	r0, #0
   47d38:	str	r0, [r5, #36]	; 0x24
   47d3c:	beq	47ae4 <Mat_VarReadNextInfo5+0x4d4>
   47d40:	mov	r2, r7
   47d44:	add	r1, sp, #28
   47d48:	bl	1490 <memcpy@plt>
   47d4c:	ldr	r3, [r5, #36]	; 0x24
   47d50:	mov	r2, #0
   47d54:	strb	r2, [r3, r7]
   47d58:	b	47ae4 <Mat_VarReadNextInfo5+0x4d4>
   47d5c:	mov	r1, r5
   47d60:	mov	r0, r4
   47d64:	bl	45190 <ReadNextStructField>
   47d68:	b	47af8 <Mat_VarReadNextInfo5+0x4e8>
   47d6c:	ldr	fp, [sp, #28]
   47d70:	cmp	fp, #0
   47d74:	add	r3, fp, #3
   47d78:	movge	r3, fp
   47d7c:	asr	r3, r3, #2
   47d80:	lsl	r0, r3, #2
   47d84:	str	r3, [r5, #4]
   47d88:	bl	1544 <malloc@plt>
   47d8c:	ldr	r3, [r4, #20]
   47d90:	mov	sl, r0
   47d94:	str	r0, [r5, #32]
   47d98:	cmp	r3, #0
   47d9c:	bne	47de0 <Mat_VarReadNextInfo5+0x7d0>
   47da0:	cmp	fp, #3
   47da4:	ble	47aa8 <Mat_VarReadNextInfo5+0x498>
   47da8:	ldr	r2, [sp, #20]
   47dac:	sub	sl, r0, #4
   47db0:	sub	r2, r2, #4
   47db4:	ldr	r1, [r2, #4]!
   47db8:	add	r3, r3, #1
   47dbc:	str	r1, [sl, #4]!
   47dc0:	ldr	r1, [r5, #4]
   47dc4:	cmp	r1, r3
   47dc8:	bgt	47db4 <Mat_VarReadNextInfo5+0x7a4>
   47dcc:	b	47aa8 <Mat_VarReadNextInfo5+0x498>
   47dd0:	mov	r1, r5
   47dd4:	mov	r0, r4
   47dd8:	bl	44758 <ReadNextCell>
   47ddc:	b	47af8 <Mat_VarReadNextInfo5+0x4e8>
   47de0:	cmp	fp, #3
   47de4:	bgt	47df0 <Mat_VarReadNextInfo5+0x7e0>
   47de8:	b	47aa8 <Mat_VarReadNextInfo5+0x498>
   47dec:	ldr	sl, [r5, #32]
   47df0:	ldr	r0, [sp, #20]
   47df4:	add	r0, r0, r8, lsl #2
   47df8:	bl	18f8 <Mat_uint32Swap>
   47dfc:	str	r0, [sl, r8, lsl #2]
   47e00:	add	r8, r8, #1
   47e04:	ldr	r3, [r5, #4]
   47e08:	cmp	r3, r8
   47e0c:	bgt	47dec <Mat_VarReadNextInfo5+0x7dc>
   47e10:	b	47aa8 <Mat_VarReadNextInfo5+0x498>
   47e14:	.word	0x00007524
   47e18:	.word	0x00007518
   47e1c:	.word	0x000074f8
   47e20:	.word	0x00007224
   47e24:	.word	0x00006f3c
   47e28:	.word	0x00006ddc
   47e2c:	.word	0x00006cc0
   47e30:	.word	0x00006c2c
   47e34:	.word	0x00000000

00047e38 <Mat_Create4>:
   47e38:	ldr	r1, [pc, #176]	; 47ef0 <Mat_Create4+0xb8>
   47e3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   47e40:	strd	r6, [sp, #8]
   47e44:	mov	r7, r0
   47e48:	str	r8, [sp, #16]
   47e4c:	str	lr, [sp, #20]
   47e50:	add	r1, pc, r1
   47e54:	bl	1454 <fopen@plt>
   47e58:	subs	r6, r0, #0
   47e5c:	moveq	r4, r6
   47e60:	beq	47ec0 <Mat_Create4+0x88>
   47e64:	mov	r0, #44	; 0x2c
   47e68:	bl	1544 <malloc@plt>
   47e6c:	subs	r4, r0, #0
   47e70:	beq	47ed8 <Mat_Create4+0xa0>
   47e74:	ldr	r0, [pc, #120]	; 47ef4 <Mat_Create4+0xbc>
   47e78:	mov	r5, #0
   47e7c:	mov	r1, r7
   47e80:	str	r6, [r4]
   47e84:	str	r5, [r4, #4]
   47e88:	str	r5, [r4, #8]
   47e8c:	add	r0, pc, r0
   47e90:	bl	1cbc <strdup_printf>
   47e94:	mov	r3, #16
   47e98:	str	r0, [r4, #12]
   47e9c:	mov	r0, r4
   47ea0:	str	r3, [r4, #16]
   47ea4:	str	r5, [r4, #20]
   47ea8:	str	r5, [r4, #24]
   47eac:	str	r5, [r4, #28]
   47eb0:	str	r5, [r4, #32]
   47eb4:	str	r5, [r4, #36]	; 0x24
   47eb8:	str	r5, [r4, #40]	; 0x28
   47ebc:	bl	15ec <Mat_Rewind@plt>
   47ec0:	mov	r0, r4
   47ec4:	ldrd	r4, [sp]
   47ec8:	ldrd	r6, [sp, #8]
   47ecc:	ldr	r8, [sp, #16]
   47ed0:	add	sp, sp, #20
   47ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   47ed8:	mov	r0, r6
   47edc:	bl	1634 <fclose@plt>
   47ee0:	ldr	r0, [pc, #16]	; 47ef8 <Mat_Create4+0xc0>
   47ee4:	add	r0, pc, r0
   47ee8:	bl	161c <Mat_Critical@plt>
   47eec:	b	47ec0 <Mat_Create4+0x88>
   47ef0:	.word	0x000069f8
   47ef4:	.word	0x000071a4
   47ef8:	.word	0x00006d88

00047efc <Mat_VarWrite4>:
   47efc:	cmp	r1, #0
   47f00:	cmpne	r0, #0
   47f04:	strd	r4, [sp, #-36]!	; 0xffffffdc
   47f08:	strd	r6, [sp, #8]
   47f0c:	strd	r8, [sp, #16]
   47f10:	strd	sl, [sp, #24]
   47f14:	str	lr, [sp, #32]
   47f18:	vpush	{d8}
   47f1c:	sub	sp, sp, #44	; 0x2c
   47f20:	beq	48530 <Mat_VarWrite4+0x634>
   47f24:	ldr	r2, [r1, #36]	; 0x24
   47f28:	cmp	r2, #0
   47f2c:	beq	48530 <Mat_VarWrite4+0x634>
   47f30:	ldr	r6, [r1, #4]
   47f34:	cmp	r6, #2
   47f38:	bne	48530 <Mat_VarWrite4+0x634>
   47f3c:	ldr	r3, [r1, #8]
   47f40:	sub	r3, r3, #2
   47f44:	cmp	r3, #7
   47f48:	addls	pc, pc, r3, lsl #2
   47f4c:	b	482e8 <Mat_VarWrite4+0x3ec>
   47f50:	b	48438 <Mat_VarWrite4+0x53c>
   47f54:	b	48444 <Mat_VarWrite4+0x548>
   47f58:	b	48450 <Mat_VarWrite4+0x554>
   47f5c:	b	4845c <Mat_VarWrite4+0x560>
   47f60:	b	482e8 <Mat_VarWrite4+0x3ec>
   47f64:	b	48468 <Mat_VarWrite4+0x56c>
   47f68:	b	482e8 <Mat_VarWrite4+0x3ec>
   47f6c:	b	4830c <Mat_VarWrite4+0x410>
   47f70:	ldr	r0, [sl, #8]
   47f74:	bl	1598 <Mat_SizeOf@plt>
   47f78:	ldr	r4, [sl, #40]	; 0x28
   47f7c:	mov	r6, r0
   47f80:	ldr	r3, [sp, #20]
   47f84:	ldr	r2, [r4, #16]
   47f88:	add	r3, r3, #2
   47f8c:	str	r3, [sp, #20]
   47f90:	cmp	r2, #0
   47f94:	movle	r3, #1
   47f98:	ble	47fac <Mat_VarWrite4+0xb0>
   47f9c:	ldr	r3, [r4, #12]
   47fa0:	sub	r2, r2, #-1073741823	; 0xc0000001
   47fa4:	ldr	r3, [r3, r2, lsl #2]
   47fa8:	add	r3, r3, #1
   47fac:	ldr	ip, [sl, #20]
   47fb0:	mov	r9, #0
   47fb4:	mov	r1, #20
   47fb8:	mov	r2, #1
   47fbc:	add	r0, sp, r1
   47fc0:	str	r3, [sp, #24]
   47fc4:	ldr	r3, [r5]
   47fc8:	str	r9, [sp, #32]
   47fcc:	cmp	ip, r9
   47fd0:	movne	ip, #4
   47fd4:	moveq	ip, #3
   47fd8:	str	ip, [sp, #28]
   47fdc:	bl	1514 <fwrite@plt>
   47fe0:	mov	r1, #1
   47fe4:	ldr	r3, [r5]
   47fe8:	ldr	r2, [sp, #36]	; 0x24
   47fec:	ldr	r0, [sl, #36]	; 0x24
   47ff0:	bl	1514 <fwrite@plt>
   47ff4:	ldr	r2, [r4, #16]
   47ff8:	cmp	r2, #1
   47ffc:	ble	48538 <Mat_VarWrite4+0x63c>
   48000:	ldr	r3, [r4, #12]
   48004:	add	r8, sp, #8
   48008:	mov	fp, r9
   4800c:	ldr	r7, [r3, r9]
   48010:	add	r9, r9, #4
   48014:	ldr	r1, [r3, r9]
   48018:	cmp	r7, r1
   4801c:	bge	48080 <Mat_VarWrite4+0x184>
   48020:	ldr	r1, [r4, #20]
   48024:	cmp	r7, r1
   48028:	blt	4803c <Mat_VarWrite4+0x140>
   4802c:	b	48080 <Mat_VarWrite4+0x184>
   48030:	ldr	r2, [r4, #20]
   48034:	cmp	r2, r7
   48038:	ble	4807c <Mat_VarWrite4+0x180>
   4803c:	ldr	ip, [r4, #4]
   48040:	mov	r2, #1
   48044:	mov	r1, #8
   48048:	mov	r0, r8
   4804c:	ldr	r3, [r5]
   48050:	ldr	ip, [ip, r7, lsl #2]
   48054:	add	r7, r7, r2
   48058:	add	ip, ip, r2
   4805c:	vmov	s15, ip
   48060:	vcvt.f64.s32	d7, s15
   48064:	vstr	d7, [sp, #8]
   48068:	bl	1514 <fwrite@plt>
   4806c:	ldr	r3, [r4, #12]
   48070:	ldr	r2, [r3, r9]
   48074:	cmp	r2, r7
   48078:	bgt	48030 <Mat_VarWrite4+0x134>
   4807c:	ldr	r2, [r4, #16]
   48080:	add	fp, fp, #1
   48084:	sub	r1, r2, #1
   48088:	cmp	r1, fp
   4808c:	bgt	4800c <Mat_VarWrite4+0x110>
   48090:	ldr	ip, [sl, #32]
   48094:	mov	r2, #1
   48098:	mov	r1, #8
   4809c:	mov	r0, r8
   480a0:	ldr	r3, [r5]
   480a4:	vldr	s14, [ip]
   480a8:	vcvt.f64.u32	d7, s14
   480ac:	vstr	d7, [sp, #8]
   480b0:	bl	1514 <fwrite@plt>
   480b4:	ldr	r2, [r4, #16]
   480b8:	cmp	r2, #1
   480bc:	ble	48144 <Mat_VarWrite4+0x248>
   480c0:	ldr	r3, [r4, #12]
   480c4:	mov	r9, #0
   480c8:	mov	fp, r9
   480cc:	ldr	r7, [r3, r9]
   480d0:	add	r9, r9, #4
   480d4:	add	fp, fp, #1
   480d8:	ldr	r1, [r3, r9]
   480dc:	cmp	r7, r1
   480e0:	bge	48138 <Mat_VarWrite4+0x23c>
   480e4:	ldr	r1, [r4, #20]
   480e8:	cmp	r7, r1
   480ec:	bge	48138 <Mat_VarWrite4+0x23c>
   480f0:	vmov	s15, fp
   480f4:	vcvt.f64.s32	d8, s15
   480f8:	b	48108 <Mat_VarWrite4+0x20c>
   480fc:	ldr	r2, [r4, #20]
   48100:	cmp	r2, r7
   48104:	ble	48134 <Mat_VarWrite4+0x238>
   48108:	mov	r2, #1
   4810c:	mov	r1, #8
   48110:	ldr	r3, [r5]
   48114:	mov	r0, r8
   48118:	add	r7, r7, r2
   4811c:	vstr	d8, [sp, #8]
   48120:	bl	1514 <fwrite@plt>
   48124:	ldr	r3, [r4, #12]
   48128:	ldr	r2, [r3, r9]
   4812c:	cmp	r2, r7
   48130:	bgt	480fc <Mat_VarWrite4+0x200>
   48134:	ldr	r2, [r4, #16]
   48138:	sub	r1, r2, #1
   4813c:	cmp	r1, fp
   48140:	bgt	480cc <Mat_VarWrite4+0x1d0>
   48144:	ldr	ip, [sl, #32]
   48148:	mov	r2, #1
   4814c:	mov	r1, #8
   48150:	mov	r0, r8
   48154:	ldr	r3, [r5]
   48158:	vldr	s14, [ip, #4]
   4815c:	vcvt.f64.u32	d7, s14
   48160:	vstr	d7, [sp, #8]
   48164:	bl	1514 <fwrite@plt>
   48168:	ldr	fp, [sl, #20]
   4816c:	mov	r2, #0
   48170:	mov	r3, #0
   48174:	strd	r2, [sp, #8]
   48178:	cmp	fp, #0
   4817c:	beq	48494 <Mat_VarWrite4+0x598>
   48180:	ldr	r2, [r4, #16]
   48184:	ldr	r3, [r4, #24]
   48188:	cmp	r2, #1
   4818c:	ldm	r3, {r1, r3}
   48190:	str	r3, [sp]
   48194:	ble	48224 <Mat_VarWrite4+0x328>
   48198:	ldr	r3, [r4, #12]
   4819c:	mov	fp, #0
   481a0:	mov	sl, r1
   481a4:	str	r8, [sp, #4]
   481a8:	lsl	r9, fp, #2
   481ac:	ldr	r7, [r3, fp, lsl #2]
   481b0:	add	r9, r9, #4
   481b4:	ldr	r1, [r3, r9]
   481b8:	cmp	r7, r1
   481bc:	bge	48210 <Mat_VarWrite4+0x314>
   481c0:	ldr	r1, [r4, #20]
   481c4:	cmp	r7, r1
   481c8:	bge	48210 <Mat_VarWrite4+0x314>
   481cc:	mla	r8, r6, r7, sl
   481d0:	b	481e0 <Mat_VarWrite4+0x2e4>
   481d4:	ldr	r2, [r4, #20]
   481d8:	cmp	r2, r7
   481dc:	ble	4820c <Mat_VarWrite4+0x310>
   481e0:	mov	r2, #1
   481e4:	mov	r0, r8
   481e8:	ldr	r3, [r5]
   481ec:	mov	r1, r6
   481f0:	add	r7, r7, r2
   481f4:	bl	1514 <fwrite@plt>
   481f8:	ldr	r3, [r4, #12]
   481fc:	add	r8, r8, r6
   48200:	ldr	r2, [r3, r9]
   48204:	cmp	r2, r7
   48208:	bgt	481d4 <Mat_VarWrite4+0x2d8>
   4820c:	ldr	r2, [r4, #16]
   48210:	add	fp, fp, #1
   48214:	sub	r1, r2, #1
   48218:	cmp	r1, fp
   4821c:	bgt	481a8 <Mat_VarWrite4+0x2ac>
   48220:	ldr	r8, [sp, #4]
   48224:	mov	r2, #1
   48228:	mov	r1, r6
   4822c:	mov	r0, r8
   48230:	ldr	r3, [r5]
   48234:	bl	1514 <fwrite@plt>
   48238:	ldr	r2, [r4, #16]
   4823c:	cmp	r2, #1
   48240:	ble	482d0 <Mat_VarWrite4+0x3d4>
   48244:	ldr	r3, [r4, #12]
   48248:	mov	fp, #0
   4824c:	ldr	sl, [sp]
   48250:	str	r8, [sp]
   48254:	lsl	r9, fp, #2
   48258:	ldr	r7, [r3, fp, lsl #2]
   4825c:	add	r9, r9, #4
   48260:	ldr	r1, [r3, r9]
   48264:	cmp	r7, r1
   48268:	bge	482bc <Mat_VarWrite4+0x3c0>
   4826c:	ldr	r1, [r4, #20]
   48270:	cmp	r7, r1
   48274:	bge	482bc <Mat_VarWrite4+0x3c0>
   48278:	mla	r8, r6, r7, sl
   4827c:	b	4828c <Mat_VarWrite4+0x390>
   48280:	ldr	r2, [r4, #20]
   48284:	cmp	r2, r7
   48288:	ble	482b8 <Mat_VarWrite4+0x3bc>
   4828c:	mov	r2, #1
   48290:	mov	r0, r8
   48294:	ldr	r3, [r5]
   48298:	mov	r1, r6
   4829c:	add	r7, r7, r2
   482a0:	bl	1514 <fwrite@plt>
   482a4:	ldr	r3, [r4, #12]
   482a8:	add	r8, r8, r6
   482ac:	ldr	r2, [r3, r9]
   482b0:	cmp	r2, r7
   482b4:	bgt	48280 <Mat_VarWrite4+0x384>
   482b8:	ldr	r2, [r4, #16]
   482bc:	add	fp, fp, #1
   482c0:	sub	r1, r2, #1
   482c4:	cmp	r1, fp
   482c8:	bgt	48254 <Mat_VarWrite4+0x358>
   482cc:	ldr	r8, [sp]
   482d0:	mov	r1, r6
   482d4:	mov	r0, r8
   482d8:	mov	r2, #1
   482dc:	ldr	r3, [r5]
   482e0:	mov	r6, #0
   482e4:	bl	1514 <fwrite@plt>
   482e8:	mov	r0, r6
   482ec:	add	sp, sp, #44	; 0x2c
   482f0:	vpop	{d8}
   482f4:	ldrd	r4, [sp]
   482f8:	ldrd	r6, [sp, #8]
   482fc:	ldrd	r8, [sp, #16]
   48300:	ldrd	sl, [sp, #24]
   48304:	add	sp, sp, #32
   48308:	pop	{pc}		; (ldr pc, [sp], #4)
   4830c:	mov	r3, #0
   48310:	str	r3, [sp, #20]
   48314:	mov	r5, r0
   48318:	mov	r0, r2
   4831c:	mov	sl, r1
   48320:	bl	15c8 <strlen@plt>
   48324:	add	r3, r0, #1
   48328:	mov	r2, #2
   4832c:	ldr	r0, [r5]
   48330:	mov	r1, #0
   48334:	str	r3, [sp, #36]	; 0x24
   48338:	bl	1694 <fseek@plt>
   4833c:	ldr	r3, [sl, #16]
   48340:	sub	r3, r3, #4
   48344:	cmp	r3, #8
   48348:	addls	pc, pc, r3, lsl #2
   4834c:	b	48474 <Mat_VarWrite4+0x578>
   48350:	b	48374 <Mat_VarWrite4+0x478>
   48354:	b	47f70 <Mat_VarWrite4+0x74>
   48358:	b	48380 <Mat_VarWrite4+0x484>
   4835c:	b	48380 <Mat_VarWrite4+0x484>
   48360:	b	48474 <Mat_VarWrite4+0x578>
   48364:	b	48380 <Mat_VarWrite4+0x484>
   48368:	b	48380 <Mat_VarWrite4+0x484>
   4836c:	b	48380 <Mat_VarWrite4+0x484>
   48370:	b	48380 <Mat_VarWrite4+0x484>
   48374:	ldr	r3, [sp, #20]
   48378:	add	r3, r3, #1
   4837c:	str	r3, [sp, #20]
   48380:	ldr	r0, [sl, #4]
   48384:	ldr	ip, [sl, #32]
   48388:	cmp	r0, #0
   4838c:	ble	48528 <Mat_VarWrite4+0x62c>
   48390:	add	r0, ip, r0, lsl #2
   48394:	mov	r3, ip
   48398:	mov	r2, #1
   4839c:	ldr	r1, [r3], #4
   483a0:	cmp	r0, r3
   483a4:	mul	r2, r1, r2
   483a8:	bne	4839c <Mat_VarWrite4+0x4a0>
   483ac:	mov	r4, r2
   483b0:	ldr	lr, [ip]
   483b4:	mov	r1, #20
   483b8:	mov	r2, #1
   483bc:	add	r0, sp, r1
   483c0:	ldr	r3, [sl, #20]
   483c4:	str	lr, [sp, #24]
   483c8:	ldr	lr, [ip, #4]
   483cc:	adds	ip, r3, #0
   483d0:	movne	ip, #1
   483d4:	ldr	r3, [r5]
   483d8:	str	lr, [sp, #28]
   483dc:	str	ip, [sp, #32]
   483e0:	bl	1514 <fwrite@plt>
   483e4:	mov	r1, #1
   483e8:	ldr	r3, [r5]
   483ec:	ldr	r0, [sl, #36]	; 0x24
   483f0:	ldr	r2, [sp, #36]	; 0x24
   483f4:	bl	1514 <fwrite@plt>
   483f8:	ldr	r6, [sl, #20]
   483fc:	cmp	r6, #0
   48400:	beq	4847c <Mat_VarWrite4+0x580>
   48404:	mov	r2, r4
   48408:	ldr	r3, [r5]
   4840c:	mov	r6, #0
   48410:	ldr	r7, [sl, #40]	; 0x28
   48414:	ldr	r1, [sl, #12]
   48418:	ldr	r0, [r7]
   4841c:	bl	1514 <fwrite@plt>
   48420:	mov	r2, r4
   48424:	ldr	r3, [r5]
   48428:	ldr	r0, [r7, #4]
   4842c:	ldr	r1, [sl, #12]
   48430:	bl	1514 <fwrite@plt>
   48434:	b	482e8 <Mat_VarWrite4+0x3ec>
   48438:	mov	r3, #50	; 0x32
   4843c:	str	r3, [sp, #20]
   48440:	b	48314 <Mat_VarWrite4+0x418>
   48444:	mov	r3, #30
   48448:	str	r3, [sp, #20]
   4844c:	b	48314 <Mat_VarWrite4+0x418>
   48450:	mov	r3, #40	; 0x28
   48454:	str	r3, [sp, #20]
   48458:	b	48314 <Mat_VarWrite4+0x418>
   4845c:	mov	r3, #20
   48460:	str	r3, [sp, #20]
   48464:	b	48314 <Mat_VarWrite4+0x418>
   48468:	mov	r3, #10
   4846c:	str	r3, [sp, #20]
   48470:	b	48314 <Mat_VarWrite4+0x418>
   48474:	mov	r6, #0
   48478:	b	482e8 <Mat_VarWrite4+0x3ec>
   4847c:	mov	r2, r4
   48480:	ldr	r3, [r5]
   48484:	ldr	r1, [sl, #12]
   48488:	ldr	r0, [sl, #40]	; 0x28
   4848c:	bl	1514 <fwrite@plt>
   48490:	b	482e8 <Mat_VarWrite4+0x3ec>
   48494:	ldr	r2, [r4, #16]
   48498:	ldr	sl, [r4, #24]
   4849c:	cmp	r2, #1
   484a0:	ble	482d0 <Mat_VarWrite4+0x3d4>
   484a4:	ldr	r3, [r4, #12]
   484a8:	str	r8, [sp]
   484ac:	lsl	r9, fp, #2
   484b0:	ldr	r7, [r3, fp, lsl #2]
   484b4:	add	r9, r9, #4
   484b8:	ldr	r1, [r3, r9]
   484bc:	cmp	r7, r1
   484c0:	bge	48514 <Mat_VarWrite4+0x618>
   484c4:	ldr	r1, [r4, #20]
   484c8:	cmp	r7, r1
   484cc:	bge	48514 <Mat_VarWrite4+0x618>
   484d0:	mla	r8, r6, r7, sl
   484d4:	b	484e4 <Mat_VarWrite4+0x5e8>
   484d8:	ldr	r2, [r4, #20]
   484dc:	cmp	r2, r7
   484e0:	ble	48510 <Mat_VarWrite4+0x614>
   484e4:	mov	r2, #1
   484e8:	mov	r0, r8
   484ec:	ldr	r3, [r5]
   484f0:	mov	r1, r6
   484f4:	add	r7, r7, r2
   484f8:	bl	1514 <fwrite@plt>
   484fc:	ldr	r3, [r4, #12]
   48500:	add	r8, r8, r6
   48504:	ldr	r2, [r3, r9]
   48508:	cmp	r2, r7
   4850c:	bgt	484d8 <Mat_VarWrite4+0x5dc>
   48510:	ldr	r2, [r4, #16]
   48514:	add	fp, fp, #1
   48518:	sub	r1, r2, #1
   4851c:	cmp	r1, fp
   48520:	bgt	484ac <Mat_VarWrite4+0x5b0>
   48524:	b	482cc <Mat_VarWrite4+0x3d0>
   48528:	mov	r4, #1
   4852c:	b	483b0 <Mat_VarWrite4+0x4b4>
   48530:	mvn	r6, #0
   48534:	b	482e8 <Mat_VarWrite4+0x3ec>
   48538:	add	r8, sp, #8
   4853c:	b	48090 <Mat_VarWrite4+0x194>

00048540 <Mat_VarRead4>:
   48540:	strd	r4, [sp, #-36]!	; 0xffffffdc
   48544:	mov	r4, r1
   48548:	mov	r5, #1
   4854c:	strd	r6, [sp, #8]
   48550:	mov	r6, r0
   48554:	mov	r0, r4
   48558:	strd	r8, [sp, #16]
   4855c:	strd	sl, [sp, #24]
   48560:	str	lr, [sp, #32]
   48564:	sub	sp, sp, #28
   48568:	add	r1, sp, #8
   4856c:	str	r5, [sp, #8]
   48570:	bl	4996c <SafeMulDims>
   48574:	ldr	r3, [r4, #52]	; 0x34
   48578:	mov	r2, #0
   4857c:	ldr	r0, [r6]
   48580:	ldr	r1, [r3]
   48584:	bl	1694 <fseek@plt>
   48588:	ldr	r3, [r4, #16]
   4858c:	cmp	r3, #5
   48590:	beq	485cc <Mat_VarRead4+0x8c>
   48594:	cmp	r3, #6
   48598:	beq	488bc <Mat_VarRead4+0x37c>
   4859c:	cmp	r3, #4
   485a0:	beq	4887c <Mat_VarRead4+0x33c>
   485a4:	ldr	r0, [pc, #1316]	; 48ad0 <Mat_VarRead4+0x590>
   485a8:	add	r0, pc, r0
   485ac:	bl	161c <Mat_Critical@plt>
   485b0:	add	sp, sp, #28
   485b4:	ldrd	r4, [sp]
   485b8:	ldrd	r6, [sp, #8]
   485bc:	ldrd	r8, [sp, #16]
   485c0:	ldrd	sl, [sp, #24]
   485c4:	add	sp, sp, #32
   485c8:	pop	{pc}		; (ldr pc, [sp], #4)
   485cc:	mov	r3, #28
   485d0:	mov	r0, r3
   485d4:	str	r3, [r4, #12]
   485d8:	bl	1544 <malloc@plt>
   485dc:	cmp	r0, #0
   485e0:	mov	r5, r0
   485e4:	str	r0, [r4, #40]	; 0x28
   485e8:	beq	48c54 <Mat_VarRead4+0x714>
   485ec:	ldr	r2, [r4, #32]
   485f0:	ldr	r3, [r2, #4]
   485f4:	sub	r3, r3, #4
   485f8:	clz	r3, r3
   485fc:	lsr	r3, r3, #5
   48600:	str	r3, [r4, #20]
   48604:	ldr	r7, [r2]
   48608:	sub	r7, r7, #1
   4860c:	lsl	r0, r7, #2
   48610:	str	r7, [r5]
   48614:	str	r7, [r5, #8]
   48618:	bl	1544 <malloc@plt>
   4861c:	cmp	r0, #0
   48620:	mov	r8, r0
   48624:	str	r0, [r5, #4]
   48628:	beq	48988 <Mat_VarRead4+0x448>
   4862c:	mov	r3, r7
   48630:	mov	r1, r0
   48634:	mov	r2, #9
   48638:	mov	r0, r6
   4863c:	bl	14df0 <ReadInt32Data>
   48640:	ldr	r3, [r5, #8]
   48644:	cmp	r3, #0
   48648:	ble	48674 <Mat_VarRead4+0x134>
   4864c:	ldr	r2, [r5, #4]
   48650:	mov	r1, #0
   48654:	sub	r2, r2, #4
   48658:	ldr	r3, [r2, #4]!
   4865c:	add	r1, r1, #1
   48660:	sub	r3, r3, #1
   48664:	str	r3, [r2]
   48668:	ldr	r3, [r5, #8]
   4866c:	cmp	r3, r1
   48670:	bgt	48658 <Mat_VarRead4+0x118>
   48674:	add	r8, sp, #16
   48678:	mov	r3, #1
   4867c:	mov	r1, r8
   48680:	mov	r2, #9
   48684:	mov	r0, r6
   48688:	bl	126c8 <ReadDoubleData>
   4868c:	vldr	d7, [sp, #16]
   48690:	ldr	r3, [r4, #32]
   48694:	ldr	r0, [r6]
   48698:	vcvt.u32.f64	s14, d7
   4869c:	vstr	s14, [r3]
   486a0:	bl	14b4 <ftell@plt>
   486a4:	cmn	r0, #1
   486a8:	mov	r7, r0
   486ac:	beq	48c84 <Mat_VarRead4+0x744>
   486b0:	ldr	r9, [r6]
   486b4:	mov	r0, #9
   486b8:	ldr	sl, [r5, #8]
   486bc:	bl	1598 <Mat_SizeOf@plt>
   486c0:	mov	r2, #1
   486c4:	mul	r1, r0, sl
   486c8:	mov	r0, r9
   486cc:	bl	1694 <fseek@plt>
   486d0:	mov	r3, #1
   486d4:	mov	r2, #9
   486d8:	mov	r1, r8
   486dc:	mov	r0, r6
   486e0:	bl	126c8 <ReadDoubleData>
   486e4:	vldr	d6, [pc, #988]	; 48ac8 <Mat_VarRead4+0x588>
   486e8:	vldr	d7, [sp, #16]
   486ec:	vcmpe.f64	d7, d6
   486f0:	vmrs	APSR_nzcv, fpscr
   486f4:	bgt	48960 <Mat_VarRead4+0x420>
   486f8:	vcmpe.f64	d7, #0.0
   486fc:	vmrs	APSR_nzcv, fpscr
   48700:	bmi	48960 <Mat_VarRead4+0x420>
   48704:	vcvt.u32.f64	s14, d7
   48708:	ldr	r3, [r4, #32]
   4870c:	mov	r1, r7
   48710:	mov	r2, #0
   48714:	ldr	r0, [r6]
   48718:	vstr	s14, [r3, #4]
   4871c:	bl	1694 <fseek@plt>
   48720:	ldr	r3, [r4, #32]
   48724:	ldr	r3, [r3, #4]
   48728:	cmn	r3, #-2147483646	; 0x80000002
   4872c:	bhi	489a4 <Mat_VarRead4+0x464>
   48730:	add	r3, r3, #1
   48734:	lsl	r0, r3, #2
   48738:	str	r3, [r5, #16]
   4873c:	bl	1544 <malloc@plt>
   48740:	cmp	r0, #0
   48744:	mov	r9, r0
   48748:	str	r0, [r5, #12]
   4874c:	beq	48e0c <Mat_VarRead4+0x8cc>
   48750:	ldr	sl, [r5, #8]
   48754:	lsl	r0, sl, #2
   48758:	bl	1544 <malloc@plt>
   4875c:	subs	r7, r0, #0
   48760:	beq	48e30 <Mat_VarRead4+0x8f0>
   48764:	mov	fp, #0
   48768:	mov	r3, sl
   4876c:	mov	r2, #9
   48770:	mov	r1, r7
   48774:	mov	r0, r6
   48778:	str	fp, [r9]
   4877c:	bl	14df0 <ReadInt32Data>
   48780:	ldr	r9, [r5, #12]
   48784:	ldr	sl, [r5, #16]
   48788:	cmp	sl, #2
   4878c:	ble	487ec <Mat_VarRead4+0x2ac>
   48790:	mov	r3, fp
   48794:	mov	r0, #1
   48798:	mov	lr, r9
   4879c:	ldr	ip, [r5, #8]
   487a0:	cmp	r3, ip
   487a4:	bge	487d4 <Mat_VarRead4+0x294>
   487a8:	ldr	r1, [r7, r3, lsl #2]
   487ac:	add	r2, r7, r3, lsl #2
   487b0:	cmp	r0, r1
   487b4:	bge	487c8 <Mat_VarRead4+0x288>
   487b8:	b	487d4 <Mat_VarRead4+0x294>
   487bc:	ldr	r1, [r2, #4]!
   487c0:	cmp	r1, r0
   487c4:	bgt	487d4 <Mat_VarRead4+0x294>
   487c8:	add	r3, r3, #1
   487cc:	cmp	r3, ip
   487d0:	bne	487bc <Mat_VarRead4+0x27c>
   487d4:	str	r3, [lr, #4]!
   487d8:	add	r0, r0, #1
   487dc:	ldr	sl, [r5, #16]
   487e0:	sub	r2, sl, #1
   487e4:	cmp	r2, r0
   487e8:	bgt	4879c <Mat_VarRead4+0x25c>
   487ec:	mov	r0, r7
   487f0:	sub	sl, sl, #-1073741823	; 0xc0000001
   487f4:	bl	1478 <free@plt>
   487f8:	ldr	ip, [r5, #8]
   487fc:	mov	r3, #1
   48800:	mov	r2, #9
   48804:	mov	r1, r8
   48808:	mov	r0, r6
   4880c:	str	ip, [r9, sl, lsl #2]
   48810:	bl	126c8 <ReadDoubleData>
   48814:	ldr	r9, [r5, #8]
   48818:	ldr	r3, [r4, #20]
   4881c:	ldr	r7, [r4, #8]
   48820:	str	r9, [r5, #20]
   48824:	cmp	r3, #0
   48828:	beq	48cac <Mat_VarRead4+0x76c>
   4882c:	mov	r0, r7
   48830:	bl	1598 <Mat_SizeOf@plt>
   48834:	mul	r0, r0, r9
   48838:	bl	498b8 <ComplexMalloc>
   4883c:	subs	r9, r0, #0
   48840:	beq	48e90 <Mat_VarRead4+0x950>
   48844:	sub	r3, r7, #2
   48848:	ldr	r1, [r9]
   4884c:	str	r9, [r5, #24]
   48850:	cmp	r3, #7
   48854:	addls	pc, pc, r3, lsl #2
   48858:	b	48c08 <Mat_VarRead4+0x6c8>
   4885c:	b	48bb4 <Mat_VarRead4+0x674>
   48860:	b	48b60 <Mat_VarRead4+0x620>
   48864:	b	48b0c <Mat_VarRead4+0x5cc>
   48868:	b	48a70 <Mat_VarRead4+0x530>
   4886c:	b	48c08 <Mat_VarRead4+0x6c8>
   48870:	b	48a1c <Mat_VarRead4+0x4dc>
   48874:	b	48c08 <Mat_VarRead4+0x6c8>
   48878:	b	489cc <Mat_VarRead4+0x48c>
   4887c:	ldr	r7, [sp, #8]
   48880:	mov	r0, r7
   48884:	str	r7, [r4]
   48888:	str	r5, [r4, #12]
   4888c:	bl	1544 <malloc@plt>
   48890:	cmp	r0, #0
   48894:	str	r0, [r4, #40]	; 0x28
   48898:	beq	48950 <Mat_VarRead4+0x410>
   4889c:	mov	r1, r0
   488a0:	mov	r3, r7
   488a4:	ldr	r2, [r4, #8]
   488a8:	mov	r0, r6
   488ac:	bl	169a4 <ReadUInt8Data>
   488b0:	mov	r3, #2
   488b4:	str	r3, [r4, #8]
   488b8:	b	485b0 <Mat_VarRead4+0x70>
   488bc:	mov	r3, #8
   488c0:	mov	r0, r4
   488c4:	ldr	r1, [sp, #8]
   488c8:	mov	r2, r3
   488cc:	str	r3, [r4, #12]
   488d0:	bl	499ec <SafeMul>
   488d4:	ldr	r0, [r4]
   488d8:	ldr	r3, [r4, #20]
   488dc:	cmp	r3, #0
   488e0:	bne	48914 <Mat_VarRead4+0x3d4>
   488e4:	bl	1544 <malloc@plt>
   488e8:	cmp	r0, #0
   488ec:	str	r0, [r4, #40]	; 0x28
   488f0:	beq	48c74 <Mat_VarRead4+0x734>
   488f4:	mov	r1, r0
   488f8:	mov	r0, r6
   488fc:	ldr	r2, [r4, #8]
   48900:	ldr	r3, [sp, #8]
   48904:	bl	126c8 <ReadDoubleData>
   48908:	mov	r3, #9
   4890c:	str	r3, [r4, #8]
   48910:	b	485b0 <Mat_VarRead4+0x70>
   48914:	bl	498b8 <ComplexMalloc>
   48918:	subs	r5, r0, #0
   4891c:	beq	48c64 <Mat_VarRead4+0x724>
   48920:	mov	r0, r6
   48924:	ldr	r1, [r5]
   48928:	str	r5, [r4, #40]	; 0x28
   4892c:	ldr	r2, [r4, #8]
   48930:	ldr	r3, [sp, #8]
   48934:	bl	126c8 <ReadDoubleData>
   48938:	mov	r0, r6
   4893c:	ldr	r1, [r5, #4]
   48940:	ldr	r2, [r4, #8]
   48944:	ldr	r3, [sp, #8]
   48948:	bl	126c8 <ReadDoubleData>
   4894c:	b	48908 <Mat_VarRead4+0x3c8>
   48950:	ldr	r0, [pc, #380]	; 48ad4 <Mat_VarRead4+0x594>
   48954:	add	r0, pc, r0
   48958:	bl	161c <Mat_Critical@plt>
   4895c:	b	488b0 <Mat_VarRead4+0x370>
   48960:	ldr	r0, [r5, #4]
   48964:	bl	1478 <free@plt>
   48968:	ldr	r0, [r4, #40]	; 0x28
   4896c:	bl	1478 <free@plt>
   48970:	ldr	r0, [pc, #352]	; 48ad8 <Mat_VarRead4+0x598>
   48974:	mov	r3, #0
   48978:	str	r3, [r4, #40]	; 0x28
   4897c:	add	r0, pc, r0
   48980:	bl	161c <Mat_Critical@plt>
   48984:	b	485b0 <Mat_VarRead4+0x70>
   48988:	mov	r0, r5
   4898c:	bl	1478 <free@plt>
   48990:	ldr	r0, [pc, #324]	; 48adc <Mat_VarRead4+0x59c>
   48994:	str	r8, [r4, #40]	; 0x28
   48998:	add	r0, pc, r0
   4899c:	bl	161c <Mat_Critical@plt>
   489a0:	b	485b0 <Mat_VarRead4+0x70>
   489a4:	ldr	r0, [r5, #4]
   489a8:	bl	1478 <free@plt>
   489ac:	ldr	r0, [r4, #40]	; 0x28
   489b0:	bl	1478 <free@plt>
   489b4:	ldr	r0, [pc, #292]	; 48ae0 <Mat_VarRead4+0x5a0>
   489b8:	mov	r3, #0
   489bc:	str	r3, [r4, #40]	; 0x28
   489c0:	add	r0, pc, r0
   489c4:	bl	161c <Mat_Critical@plt>
   489c8:	b	485b0 <Mat_VarRead4+0x70>
   489cc:	mov	r2, #9
   489d0:	mov	r0, r6
   489d4:	ldr	r3, [r5, #20]
   489d8:	bl	126c8 <ReadDoubleData>
   489dc:	mov	r3, #1
   489e0:	mov	r2, #9
   489e4:	mov	r1, r8
   489e8:	mov	r0, r6
   489ec:	bl	126c8 <ReadDoubleData>
   489f0:	ldr	r1, [r9, #4]
   489f4:	mov	r2, #9
   489f8:	mov	r0, r6
   489fc:	ldr	r3, [r5, #20]
   48a00:	bl	126c8 <ReadDoubleData>
   48a04:	mov	r1, r8
   48a08:	mov	r0, r6
   48a0c:	mov	r3, #1
   48a10:	mov	r2, #9
   48a14:	bl	126c8 <ReadDoubleData>
   48a18:	b	485b0 <Mat_VarRead4+0x70>
   48a1c:	add	r4, sp, #12
   48a20:	mov	r2, #7
   48a24:	ldr	r3, [r5, #20]
   48a28:	mov	r0, r6
   48a2c:	bl	13cfc <ReadSingleData>
   48a30:	mov	r1, r4
   48a34:	mov	r3, #1
   48a38:	mov	r2, #7
   48a3c:	mov	r0, r6
   48a40:	bl	13cfc <ReadSingleData>
   48a44:	mov	r2, #7
   48a48:	mov	r0, r6
   48a4c:	ldr	r1, [r9, #4]
   48a50:	ldr	r3, [r5, #20]
   48a54:	bl	13cfc <ReadSingleData>
   48a58:	mov	r1, r4
   48a5c:	mov	r0, r6
   48a60:	mov	r3, #1
   48a64:	mov	r2, #7
   48a68:	bl	13cfc <ReadSingleData>
   48a6c:	b	485b0 <Mat_VarRead4+0x70>
   48a70:	add	r4, sp, #12
   48a74:	mov	r2, #5
   48a78:	ldr	r3, [r5, #20]
   48a7c:	mov	r0, r6
   48a80:	bl	14df0 <ReadInt32Data>
   48a84:	mov	r1, r4
   48a88:	mov	r3, #1
   48a8c:	mov	r2, #5
   48a90:	mov	r0, r6
   48a94:	bl	14df0 <ReadInt32Data>
   48a98:	mov	r2, #5
   48a9c:	mov	r0, r6
   48aa0:	ldr	r1, [r9, #4]
   48aa4:	ldr	r3, [r5, #20]
   48aa8:	bl	14df0 <ReadInt32Data>
   48aac:	mov	r1, r4
   48ab0:	mov	r0, r6
   48ab4:	mov	r3, #1
   48ab8:	mov	r2, #5
   48abc:	bl	14df0 <ReadInt32Data>
   48ac0:	b	485b0 <Mat_VarRead4+0x70>
   48ac4:	nop	{0}
   48ac8:	.word	0xff800000
   48acc:	.word	0x41dfffff
   48ad0:	.word	0x000067c8
   48ad4:	.word	0x00005f80
   48ad8:	.word	0x00006350
   48adc:	.word	0x00006300
   48ae0:	.word	0x0000630c
   48ae4:	.word	0x000060e4
   48ae8:	.word	0x00005c7c
   48aec:	.word	0x00005dd8
   48af0:	.word	0x00005c5c
   48af4:	.word	0x00005b58
   48af8:	.word	0x00005f2c
   48afc:	.word	0x00005ed4
   48b00:	.word	0x00005ea8
   48b04:	.word	0x00005b64
   48b08:	.word	0x00005afc
   48b0c:	add	r4, sp, #12
   48b10:	mov	r2, #4
   48b14:	ldr	r3, [r5, #20]
   48b18:	mov	r0, r6
   48b1c:	bl	15e2c <ReadUInt16Data>
   48b20:	mov	r1, r4
   48b24:	mov	r3, #1
   48b28:	mov	r2, #4
   48b2c:	mov	r0, r6
   48b30:	bl	15e2c <ReadUInt16Data>
   48b34:	mov	r2, #4
   48b38:	mov	r0, r6
   48b3c:	ldr	r1, [r9, #4]
   48b40:	ldr	r3, [r5, #20]
   48b44:	bl	15e2c <ReadUInt16Data>
   48b48:	mov	r1, r4
   48b4c:	mov	r0, r6
   48b50:	mov	r3, #1
   48b54:	mov	r2, #4
   48b58:	bl	15e2c <ReadUInt16Data>
   48b5c:	b	485b0 <Mat_VarRead4+0x70>
   48b60:	add	r4, sp, #12
   48b64:	mov	r2, #3
   48b68:	ldr	r3, [r5, #20]
   48b6c:	mov	r0, r6
   48b70:	bl	158b8 <ReadInt16Data>
   48b74:	mov	r1, r4
   48b78:	mov	r3, #1
   48b7c:	mov	r2, #3
   48b80:	mov	r0, r6
   48b84:	bl	158b8 <ReadInt16Data>
   48b88:	mov	r2, #3
   48b8c:	mov	r0, r6
   48b90:	ldr	r1, [r9, #4]
   48b94:	ldr	r3, [r5, #20]
   48b98:	bl	158b8 <ReadInt16Data>
   48b9c:	mov	r1, r4
   48ba0:	mov	r0, r6
   48ba4:	mov	r3, #1
   48ba8:	mov	r2, #3
   48bac:	bl	158b8 <ReadInt16Data>
   48bb0:	b	485b0 <Mat_VarRead4+0x70>
   48bb4:	add	r4, sp, #12
   48bb8:	mov	r2, #2
   48bbc:	ldr	r3, [r5, #20]
   48bc0:	mov	r0, r6
   48bc4:	bl	169a4 <ReadUInt8Data>
   48bc8:	mov	r1, r4
   48bcc:	mov	r3, #1
   48bd0:	mov	r2, #2
   48bd4:	mov	r0, r6
   48bd8:	bl	169a4 <ReadUInt8Data>
   48bdc:	mov	r2, #2
   48be0:	mov	r0, r6
   48be4:	ldr	r1, [r9, #4]
   48be8:	ldr	r3, [r5, #20]
   48bec:	bl	169a4 <ReadUInt8Data>
   48bf0:	mov	r1, r4
   48bf4:	mov	r0, r6
   48bf8:	mov	r3, #1
   48bfc:	mov	r2, #2
   48c00:	bl	169a4 <ReadUInt8Data>
   48c04:	b	485b0 <Mat_VarRead4+0x70>
   48c08:	mov	r0, r1
   48c0c:	bl	1478 <free@plt>
   48c10:	ldr	r0, [r9, #4]
   48c14:	bl	1478 <free@plt>
   48c18:	mov	r0, r9
   48c1c:	bl	1478 <free@plt>
   48c20:	ldr	r0, [r5, #12]
   48c24:	bl	1478 <free@plt>
   48c28:	ldr	r0, [r5, #4]
   48c2c:	bl	1478 <free@plt>
   48c30:	ldr	r0, [r4, #40]	; 0x28
   48c34:	bl	1478 <free@plt>
   48c38:	ldr	r0, [pc, #-348]	; 48ae4 <Mat_VarRead4+0x5a4>
   48c3c:	mov	r3, #0
   48c40:	mov	r1, r7
   48c44:	str	r3, [r4, #40]	; 0x28
   48c48:	add	r0, pc, r0
   48c4c:	bl	161c <Mat_Critical@plt>
   48c50:	b	485b0 <Mat_VarRead4+0x70>
   48c54:	ldr	r0, [pc, #-372]	; 48ae8 <Mat_VarRead4+0x5a8>
   48c58:	add	r0, pc, r0
   48c5c:	bl	161c <Mat_Critical@plt>
   48c60:	b	485b0 <Mat_VarRead4+0x70>
   48c64:	ldr	r0, [pc, #-384]	; 48aec <Mat_VarRead4+0x5ac>
   48c68:	add	r0, pc, r0
   48c6c:	bl	161c <Mat_Critical@plt>
   48c70:	b	48908 <Mat_VarRead4+0x3c8>
   48c74:	ldr	r0, [pc, #-396]	; 48af0 <Mat_VarRead4+0x5b0>
   48c78:	add	r0, pc, r0
   48c7c:	bl	161c <Mat_Critical@plt>
   48c80:	b	48908 <Mat_VarRead4+0x3c8>
   48c84:	ldr	r0, [r5, #4]
   48c88:	bl	1478 <free@plt>
   48c8c:	ldr	r0, [r4, #40]	; 0x28
   48c90:	bl	1478 <free@plt>
   48c94:	ldr	r0, [pc, #-424]	; 48af4 <Mat_VarRead4+0x5b4>
   48c98:	mov	r3, #0
   48c9c:	str	r3, [r4, #40]	; 0x28
   48ca0:	add	r0, pc, r0
   48ca4:	bl	161c <Mat_Critical@plt>
   48ca8:	b	485b0 <Mat_VarRead4+0x70>
   48cac:	mov	r0, r7
   48cb0:	bl	1598 <Mat_SizeOf@plt>
   48cb4:	mul	r0, r0, r9
   48cb8:	bl	1544 <malloc@plt>
   48cbc:	cmp	r0, #0
   48cc0:	mov	r1, r0
   48cc4:	str	r0, [r5, #24]
   48cc8:	beq	48e5c <Mat_VarRead4+0x91c>
   48ccc:	sub	r3, r7, #2
   48cd0:	cmp	r3, #7
   48cd4:	addls	pc, pc, r3, lsl #2
   48cd8:	b	48dd4 <Mat_VarRead4+0x894>
   48cdc:	b	48dac <Mat_VarRead4+0x86c>
   48ce0:	b	48d84 <Mat_VarRead4+0x844>
   48ce4:	b	48d5c <Mat_VarRead4+0x81c>
   48ce8:	b	48d34 <Mat_VarRead4+0x7f4>
   48cec:	b	48dd4 <Mat_VarRead4+0x894>
   48cf0:	b	48d0c <Mat_VarRead4+0x7cc>
   48cf4:	b	48dd4 <Mat_VarRead4+0x894>
   48cf8:	b	48cfc <Mat_VarRead4+0x7bc>
   48cfc:	mov	r2, #9
   48d00:	mov	r0, r6
   48d04:	ldr	r3, [r5, #20]
   48d08:	b	48a00 <Mat_VarRead4+0x4c0>
   48d0c:	mov	r2, #7
   48d10:	mov	r0, r6
   48d14:	ldr	r3, [r5, #20]
   48d18:	bl	13cfc <ReadSingleData>
   48d1c:	mov	r0, r6
   48d20:	mov	r3, #1
   48d24:	mov	r2, #7
   48d28:	add	r1, sp, #12
   48d2c:	bl	13cfc <ReadSingleData>
   48d30:	b	485b0 <Mat_VarRead4+0x70>
   48d34:	mov	r2, #5
   48d38:	mov	r0, r6
   48d3c:	ldr	r3, [r5, #20]
   48d40:	bl	14df0 <ReadInt32Data>
   48d44:	mov	r0, r6
   48d48:	mov	r3, #1
   48d4c:	mov	r2, #5
   48d50:	add	r1, sp, #12
   48d54:	bl	14df0 <ReadInt32Data>
   48d58:	b	485b0 <Mat_VarRead4+0x70>
   48d5c:	mov	r2, #4
   48d60:	mov	r0, r6
   48d64:	ldr	r3, [r5, #20]
   48d68:	bl	15e2c <ReadUInt16Data>
   48d6c:	mov	r0, r6
   48d70:	mov	r3, #1
   48d74:	mov	r2, #4
   48d78:	add	r1, sp, #12
   48d7c:	bl	15e2c <ReadUInt16Data>
   48d80:	b	485b0 <Mat_VarRead4+0x70>
   48d84:	mov	r2, #3
   48d88:	mov	r0, r6
   48d8c:	ldr	r3, [r5, #20]
   48d90:	bl	158b8 <ReadInt16Data>
   48d94:	mov	r0, r6
   48d98:	mov	r3, #1
   48d9c:	mov	r2, #3
   48da0:	add	r1, sp, #12
   48da4:	bl	158b8 <ReadInt16Data>
   48da8:	b	485b0 <Mat_VarRead4+0x70>
   48dac:	mov	r2, #2
   48db0:	mov	r0, r6
   48db4:	ldr	r3, [r5, #20]
   48db8:	bl	169a4 <ReadUInt8Data>
   48dbc:	mov	r0, r6
   48dc0:	mov	r3, #1
   48dc4:	mov	r2, #2
   48dc8:	add	r1, sp, #12
   48dcc:	bl	169a4 <ReadUInt8Data>
   48dd0:	b	485b0 <Mat_VarRead4+0x70>
   48dd4:	bl	1478 <free@plt>
   48dd8:	ldr	r0, [r5, #12]
   48ddc:	bl	1478 <free@plt>
   48de0:	ldr	r0, [r5, #4]
   48de4:	bl	1478 <free@plt>
   48de8:	ldr	r0, [r4, #40]	; 0x28
   48dec:	bl	1478 <free@plt>
   48df0:	ldr	r0, [pc, #-768]	; 48af8 <Mat_VarRead4+0x5b8>
   48df4:	mov	r3, #0
   48df8:	mov	r1, r7
   48dfc:	str	r3, [r4, #40]	; 0x28
   48e00:	add	r0, pc, r0
   48e04:	bl	161c <Mat_Critical@plt>
   48e08:	b	485b0 <Mat_VarRead4+0x70>
   48e0c:	ldr	r0, [r5, #4]
   48e10:	bl	1478 <free@plt>
   48e14:	ldr	r0, [r4, #40]	; 0x28
   48e18:	bl	1478 <free@plt>
   48e1c:	ldr	r0, [pc, #-808]	; 48afc <Mat_VarRead4+0x5bc>
   48e20:	str	r9, [r4, #40]	; 0x28
   48e24:	add	r0, pc, r0
   48e28:	bl	161c <Mat_Critical@plt>
   48e2c:	b	485b0 <Mat_VarRead4+0x70>
   48e30:	mov	r0, r9
   48e34:	bl	1478 <free@plt>
   48e38:	ldr	r0, [r5, #4]
   48e3c:	bl	1478 <free@plt>
   48e40:	ldr	r0, [r4, #40]	; 0x28
   48e44:	bl	1478 <free@plt>
   48e48:	ldr	r0, [pc, #-848]	; 48b00 <Mat_VarRead4+0x5c0>
   48e4c:	str	r7, [r4, #40]	; 0x28
   48e50:	add	r0, pc, r0
   48e54:	bl	161c <Mat_Critical@plt>
   48e58:	b	485b0 <Mat_VarRead4+0x70>
   48e5c:	ldr	r0, [r5, #12]
   48e60:	str	r1, [sp, #4]
   48e64:	bl	1478 <free@plt>
   48e68:	ldr	r0, [r5, #4]
   48e6c:	bl	1478 <free@plt>
   48e70:	ldr	r0, [r4, #40]	; 0x28
   48e74:	bl	1478 <free@plt>
   48e78:	ldr	r0, [pc, #-892]	; 48b04 <Mat_VarRead4+0x5c4>
   48e7c:	ldr	r1, [sp, #4]
   48e80:	add	r0, pc, r0
   48e84:	str	r1, [r4, #40]	; 0x28
   48e88:	bl	161c <Mat_Critical@plt>
   48e8c:	b	485b0 <Mat_VarRead4+0x70>
   48e90:	ldr	r0, [r5, #12]
   48e94:	bl	1478 <free@plt>
   48e98:	ldr	r0, [r5, #4]
   48e9c:	bl	1478 <free@plt>
   48ea0:	ldr	r0, [r4, #40]	; 0x28
   48ea4:	bl	1478 <free@plt>
   48ea8:	ldr	r0, [pc, #-936]	; 48b08 <Mat_VarRead4+0x5c8>
   48eac:	str	r9, [r4, #40]	; 0x28
   48eb0:	add	r0, pc, r0
   48eb4:	bl	161c <Mat_Critical@plt>
   48eb8:	b	485b0 <Mat_VarRead4+0x70>

00048ebc <Mat_VarReadData4>:
   48ebc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   48ec0:	mov	r4, r1
   48ec4:	mov	r5, r0
   48ec8:	ldr	r1, [r1, #52]	; 0x34
   48ecc:	ldr	r0, [r0]
   48ed0:	ldr	r1, [r1]
   48ed4:	strd	r6, [sp, #8]
   48ed8:	strd	r8, [sp, #16]
   48edc:	mov	r9, r2
   48ee0:	mov	r2, #0
   48ee4:	str	sl, [sp, #24]
   48ee8:	mov	r8, r3
   48eec:	str	lr, [sp, #28]
   48ef0:	sub	sp, sp, #32
   48ef4:	ldr	r7, [sp, #64]	; 0x40
   48ef8:	ldr	r6, [sp, #68]	; 0x44
   48efc:	bl	1694 <fseek@plt>
   48f00:	ldr	r3, [r4, #8]
   48f04:	sub	r2, r3, #2
   48f08:	cmp	r2, #7
   48f0c:	addls	pc, pc, r2, lsl #2
   48f10:	b	48fe8 <Mat_VarReadData4+0x12c>
   48f14:	b	48f34 <Mat_VarReadData4+0x78>
   48f18:	b	48f34 <Mat_VarReadData4+0x78>
   48f1c:	b	48f34 <Mat_VarReadData4+0x78>
   48f20:	b	48f34 <Mat_VarReadData4+0x78>
   48f24:	b	48fe8 <Mat_VarReadData4+0x12c>
   48f28:	b	48f34 <Mat_VarReadData4+0x78>
   48f2c:	b	48fe8 <Mat_VarReadData4+0x12c>
   48f30:	b	48f34 <Mat_VarReadData4+0x78>
   48f34:	ldr	ip, [r4, #4]
   48f38:	ldr	r2, [r4, #20]
   48f3c:	cmp	ip, #2
   48f40:	beq	49038 <Mat_VarReadData4+0x17c>
   48f44:	cmp	r2, #0
   48f48:	beq	4900c <Mat_VarReadData4+0x150>
   48f4c:	mov	r0, r3
   48f50:	mov	sl, #0
   48f54:	bl	1598 <Mat_SizeOf@plt>
   48f58:	add	r1, sp, #28
   48f5c:	str	r0, [sp, #28]
   48f60:	mov	r0, r4
   48f64:	bl	4996c <SafeMulDims>
   48f68:	ldr	r2, [r4, #4]
   48f6c:	mov	r0, r5
   48f70:	str	r8, [sp, #8]
   48f74:	ldr	r3, [r4, #32]
   48f78:	str	r2, [sp]
   48f7c:	str	r7, [sp, #12]
   48f80:	str	r6, [sp, #16]
   48f84:	ldr	r1, [r9]
   48f88:	str	r3, [sp, #4]
   48f8c:	ldr	r3, [r4, #8]
   48f90:	ldr	r2, [r4, #16]
   48f94:	bl	17278 <ReadDataSlabN>
   48f98:	ldr	r1, [r4, #52]	; 0x34
   48f9c:	mov	r2, sl
   48fa0:	ldr	r3, [sp, #28]
   48fa4:	ldr	r0, [r5]
   48fa8:	ldr	r1, [r1]
   48fac:	add	r1, r1, r3
   48fb0:	bl	1694 <fseek@plt>
   48fb4:	ldr	r2, [r4, #4]
   48fb8:	mov	r0, r5
   48fbc:	str	r8, [sp, #8]
   48fc0:	ldr	r3, [r4, #32]
   48fc4:	str	r2, [sp]
   48fc8:	str	r7, [sp, #12]
   48fcc:	str	r6, [sp, #16]
   48fd0:	ldr	r1, [r9, #4]
   48fd4:	str	r3, [sp, #4]
   48fd8:	ldr	r3, [r4, #8]
   48fdc:	ldr	r2, [r4, #16]
   48fe0:	bl	17278 <ReadDataSlabN>
   48fe4:	b	48fec <Mat_VarReadData4+0x130>
   48fe8:	mov	sl, #1
   48fec:	mov	r0, sl
   48ff0:	add	sp, sp, #32
   48ff4:	ldrd	r4, [sp]
   48ff8:	ldrd	r6, [sp, #8]
   48ffc:	ldrd	r8, [sp, #16]
   49000:	ldr	sl, [sp, #24]
   49004:	add	sp, sp, #28
   49008:	pop	{pc}		; (ldr pc, [sp], #4)
   4900c:	ldr	lr, [r4, #32]
   49010:	mov	sl, r2
   49014:	mov	r1, r9
   49018:	mov	r0, r5
   4901c:	stm	sp, {ip, lr}
   49020:	str	r8, [sp, #8]
   49024:	str	r7, [sp, #12]
   49028:	str	r6, [sp, #16]
   4902c:	ldr	r2, [r4, #16]
   49030:	bl	17278 <ReadDataSlabN>
   49034:	b	48fec <Mat_VarReadData4+0x130>
   49038:	ldr	r1, [r6]
   4903c:	ldr	ip, [r8]
   49040:	ldr	r0, [r4, #32]
   49044:	sub	r1, r1, #1
   49048:	ldr	sl, [r7]
   4904c:	add	ip, ip, #1
   49050:	ldr	lr, [r0]
   49054:	mla	r1, sl, r1, ip
   49058:	cmp	r1, lr
   4905c:	movhi	sl, #1
   49060:	bhi	4908c <Mat_VarReadData4+0x1d0>
   49064:	ldr	sl, [r6, #4]
   49068:	ldr	r1, [r8, #4]
   4906c:	ldr	lr, [r7, #4]
   49070:	sub	sl, sl, #1
   49074:	ldr	ip, [r0, #4]
   49078:	add	r1, r1, #1
   4907c:	mla	sl, lr, sl, r1
   49080:	cmp	sl, ip
   49084:	movls	sl, #0
   49088:	movhi	sl, #1
   4908c:	cmp	r2, #0
   49090:	beq	4911c <Mat_VarReadData4+0x260>
   49094:	mov	r0, r3
   49098:	bl	1598 <Mat_SizeOf@plt>
   4909c:	add	r1, sp, #28
   490a0:	str	r0, [sp, #28]
   490a4:	mov	r0, r4
   490a8:	bl	4996c <SafeMulDims>
   490ac:	ldr	r3, [r4, #32]
   490b0:	mov	r0, r5
   490b4:	str	r8, [sp, #4]
   490b8:	str	r7, [sp, #8]
   490bc:	str	r6, [sp, #12]
   490c0:	ldr	r1, [r9]
   490c4:	str	r3, [sp]
   490c8:	ldr	r3, [r4, #8]
   490cc:	ldr	r2, [r4, #16]
   490d0:	bl	1ebf4 <ReadDataSlab2>
   490d4:	ldr	r1, [r4, #52]	; 0x34
   490d8:	mov	r2, #0
   490dc:	ldr	r3, [sp, #28]
   490e0:	ldr	r0, [r5]
   490e4:	ldr	r1, [r1]
   490e8:	add	r1, r1, r3
   490ec:	bl	1694 <fseek@plt>
   490f0:	ldr	r3, [r4, #32]
   490f4:	mov	r0, r5
   490f8:	str	r8, [sp, #4]
   490fc:	str	r7, [sp, #8]
   49100:	str	r6, [sp, #12]
   49104:	ldr	r1, [r9, #4]
   49108:	str	r3, [sp]
   4910c:	ldr	r3, [r4, #8]
   49110:	ldr	r2, [r4, #16]
   49114:	bl	1ebf4 <ReadDataSlab2>
   49118:	b	48fec <Mat_VarReadData4+0x130>
   4911c:	mov	r1, r9
   49120:	stm	sp, {r0, r8}
   49124:	mov	r0, r5
   49128:	str	r7, [sp, #8]
   4912c:	str	r6, [sp, #12]
   49130:	ldr	r2, [r4, #16]
   49134:	bl	1ebf4 <ReadDataSlab2>
   49138:	b	48fec <Mat_VarReadData4+0x130>

0004913c <Mat_VarReadDataLinear4>:
   4913c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   49140:	mov	r4, r1
   49144:	mov	r5, r0
   49148:	strd	r6, [sp, #8]
   4914c:	mov	r0, r1
   49150:	mov	r6, r3
   49154:	strd	r8, [sp, #16]
   49158:	mov	r8, #1
   4915c:	strd	sl, [sp, #24]
   49160:	mov	fp, r2
   49164:	str	lr, [sp, #32]
   49168:	sub	sp, sp, #28
   4916c:	add	r1, sp, #20
   49170:	str	r8, [sp, #20]
   49174:	bl	4996c <SafeMulDims>
   49178:	ldr	r3, [r4, #52]	; 0x34
   4917c:	mov	r2, #0
   49180:	mov	r7, r0
   49184:	ldr	r0, [r5]
   49188:	ldr	r1, [r3]
   4918c:	bl	1694 <fseek@plt>
   49190:	ldr	r0, [r4, #8]
   49194:	bl	1598 <Mat_SizeOf@plt>
   49198:	add	r2, r6, r8
   4919c:	ldr	sl, [sp, #20]
   491a0:	str	r0, [r4, #12]
   491a4:	ldr	r3, [sp, #68]	; 0x44
   491a8:	ldr	r1, [sp, #64]	; 0x40
   491ac:	sub	r3, r3, #1
   491b0:	mla	r3, r1, r3, r2
   491b4:	cmp	r3, sl
   491b8:	movhi	r7, r8
   491bc:	bhi	49238 <Mat_VarReadDataLinear4+0xfc>
   491c0:	ldr	r3, [r4, #8]
   491c4:	ldr	r1, [r4, #20]
   491c8:	ldr	r2, [r4, #16]
   491cc:	cmp	r1, #0
   491d0:	beq	49258 <Mat_VarReadDataLinear4+0x11c>
   491d4:	ldr	r1, [sp, #64]	; 0x40
   491d8:	mov	r9, r0
   491dc:	mov	r0, r5
   491e0:	str	r6, [sp]
   491e4:	str	r1, [sp, #4]
   491e8:	ldr	r1, [sp, #68]	; 0x44
   491ec:	str	r1, [sp, #8]
   491f0:	ldr	r1, [fp]
   491f4:	bl	1e644 <ReadDataSlab1>
   491f8:	ldr	r3, [r4, #52]	; 0x34
   491fc:	mov	r2, #0
   49200:	ldr	r0, [r5]
   49204:	ldr	r1, [r3]
   49208:	mla	r1, sl, r9, r1
   4920c:	bl	1694 <fseek@plt>
   49210:	ldr	r3, [sp, #64]	; 0x40
   49214:	mov	r0, r5
   49218:	str	r6, [sp]
   4921c:	str	r3, [sp, #4]
   49220:	ldr	r3, [sp, #68]	; 0x44
   49224:	str	r3, [sp, #8]
   49228:	ldr	r1, [fp, #4]
   4922c:	ldr	r3, [r4, #8]
   49230:	ldr	r2, [r4, #16]
   49234:	bl	1e644 <ReadDataSlab1>
   49238:	mov	r0, r7
   4923c:	add	sp, sp, #28
   49240:	ldrd	r4, [sp]
   49244:	ldrd	r6, [sp, #8]
   49248:	ldrd	r8, [sp, #16]
   4924c:	ldrd	sl, [sp, #24]
   49250:	add	sp, sp, #32
   49254:	pop	{pc}		; (ldr pc, [sp], #4)
   49258:	ldr	ip, [sp, #64]	; 0x40
   4925c:	mov	r1, fp
   49260:	mov	r0, r5
   49264:	stm	sp, {r6, ip}
   49268:	ldr	ip, [sp, #68]	; 0x44
   4926c:	str	ip, [sp, #8]
   49270:	bl	1e644 <ReadDataSlab1>
   49274:	b	49238 <Mat_VarReadDataLinear4+0xfc>

00049278 <Mat_VarReadNextInfo4>:
   49278:	strd	r4, [sp, #-28]!	; 0xffffffe4
   4927c:	subs	r4, r0, #0
   49280:	strd	r6, [sp, #8]
   49284:	strd	r8, [sp, #16]
   49288:	str	lr, [sp, #24]
   4928c:	sub	sp, sp, #12
   49290:	beq	493b8 <Mat_VarReadNextInfo4+0x140>
   49294:	ldr	r3, [r4]
   49298:	cmp	r3, #0
   4929c:	beq	493b8 <Mat_VarReadNextInfo4+0x140>
   492a0:	bl	1508 <Mat_VarCalloc@plt>
   492a4:	subs	r5, r0, #0
   492a8:	beq	493b8 <Mat_VarReadNextInfo4+0x140>
   492ac:	mov	r7, sp
   492b0:	mov	r2, #1
   492b4:	ldr	r3, [r4]
   492b8:	mov	r0, r7
   492bc:	mov	r1, #4
   492c0:	bl	1520 <fread@plt>
   492c4:	subs	r3, r0, #0
   492c8:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   492cc:	ldr	r6, [sp]
   492d0:	movw	r8, #4052	; 0xfd4
   492d4:	cmp	r6, r8
   492d8:	bhi	493c0 <Mat_VarReadNextInfo4+0x148>
   492dc:	vmov	s15, r6
   492e0:	vcvt.f64.s32	d0, s15
   492e4:	vldr	d7, [pc, #804]	; 49610 <Mat_VarReadNextInfo4+0x398>
   492e8:	vdiv.f64	d0, d0, d7
   492ec:	bl	152c <floor@plt>
   492f0:	vcvt.s32.f64	s15, d0
   492f4:	movw	r3, #64536	; 0xfc18
   492f8:	movt	r3, #65535	; 0xffff
   492fc:	vmov	r8, s15
   49300:	vldr	d7, [pc, #784]	; 49618 <Mat_VarReadNextInfo4+0x3a0>
   49304:	mla	r6, r3, r8, r6
   49308:	vmov	s13, r6
   4930c:	vcvt.f64.s32	d0, s13
   49310:	vdiv.f64	d0, d0, d7
   49314:	bl	152c <floor@plt>
   49318:	vcvt.s32.f64	s15, d0
   4931c:	mvn	r3, #99	; 0x63
   49320:	vmov	r9, s15
   49324:	vldr	d7, [pc, #756]	; 49620 <Mat_VarReadNextInfo4+0x3a8>
   49328:	mla	r6, r3, r9, r6
   4932c:	vmov	s13, r6
   49330:	vcvt.f64.s32	d0, s13
   49334:	vdiv.f64	d0, d0, d7
   49338:	bl	152c <floor@plt>
   4933c:	vcvt.s32.f64	s15, d0
   49340:	mvn	r3, #9
   49344:	cmp	r8, #0
   49348:	vmov	r2, s15
   4934c:	mla	r3, r3, r2, r6
   49350:	str	r3, [sp]
   49354:	beq	49388 <Mat_VarReadNextInfo4+0x110>
   49358:	cmp	r8, #1
   4935c:	beq	49388 <Mat_VarReadNextInfo4+0x110>
   49360:	mov	r0, r5
   49364:	mov	r5, #0
   49368:	bl	158c <Mat_VarFree@plt>
   4936c:	mov	r0, r5
   49370:	add	sp, sp, #12
   49374:	ldrd	r4, [sp]
   49378:	ldrd	r6, [sp, #8]
   4937c:	ldrd	r8, [sp, #16]
   49380:	add	sp, sp, #24
   49384:	pop	{pc}		; (ldr pc, [sp], #4)
   49388:	cmp	r9, #0
   4938c:	str	r8, [r4, #20]
   49390:	bne	49360 <Mat_VarReadNextInfo4+0xe8>
   49394:	cmp	r2, #5
   49398:	addls	pc, pc, r2, lsl #2
   4939c:	b	49360 <Mat_VarReadNextInfo4+0xe8>
   493a0:	b	49578 <Mat_VarReadNextInfo4+0x300>
   493a4:	b	49584 <Mat_VarReadNextInfo4+0x30c>
   493a8:	b	49590 <Mat_VarReadNextInfo4+0x318>
   493ac:	b	4959c <Mat_VarReadNextInfo4+0x324>
   493b0:	b	495a8 <Mat_VarReadNextInfo4+0x330>
   493b4:	b	493d8 <Mat_VarReadNextInfo4+0x160>
   493b8:	mov	r5, #0
   493bc:	b	4936c <Mat_VarReadNextInfo4+0xf4>
   493c0:	mov	r0, r7
   493c4:	bl	18c4 <Mat_int32Swap>
   493c8:	cmp	r0, r8
   493cc:	bgt	49360 <Mat_VarReadNextInfo4+0xe8>
   493d0:	ldr	r6, [sp]
   493d4:	b	492dc <Mat_VarReadNextInfo4+0x64>
   493d8:	mov	r2, #2
   493dc:	str	r2, [r5, #8]
   493e0:	cmp	r3, #1
   493e4:	beq	495b4 <Mat_VarReadNextInfo4+0x33c>
   493e8:	cmp	r3, #2
   493ec:	beq	495c0 <Mat_VarReadNextInfo4+0x348>
   493f0:	cmp	r3, #0
   493f4:	moveq	r3, #6
   493f8:	streq	r3, [r5, #16]
   493fc:	bne	49360 <Mat_VarReadNextInfo4+0xe8>
   49400:	mov	r3, #2
   49404:	mov	r0, #8
   49408:	str	r3, [r5, #4]
   4940c:	bl	1544 <malloc@plt>
   49410:	cmp	r0, #0
   49414:	str	r0, [r5, #32]
   49418:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   4941c:	mov	r2, #1
   49420:	mov	r1, #4
   49424:	ldr	r3, [r4]
   49428:	mov	r0, r7
   4942c:	bl	1520 <fread@plt>
   49430:	ldr	r3, [r4, #20]
   49434:	mov	r6, r0
   49438:	cmp	r3, #0
   4943c:	bne	495cc <Mat_VarReadNextInfo4+0x354>
   49440:	ldr	r2, [sp]
   49444:	cmp	r6, #0
   49448:	ldr	r3, [r5, #32]
   4944c:	str	r2, [r3]
   49450:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   49454:	mov	r2, #1
   49458:	mov	r1, #4
   4945c:	ldr	r3, [r4]
   49460:	mov	r0, r7
   49464:	bl	1520 <fread@plt>
   49468:	ldr	r3, [r4, #20]
   4946c:	mov	r6, r0
   49470:	cmp	r3, #0
   49474:	bne	495d8 <Mat_VarReadNextInfo4+0x360>
   49478:	ldr	r2, [sp]
   4947c:	cmp	r6, #0
   49480:	ldr	r3, [r5, #32]
   49484:	str	r2, [r3, #4]
   49488:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   4948c:	mov	r2, #1
   49490:	mov	r1, #4
   49494:	ldr	r3, [r4]
   49498:	add	r0, r5, #20
   4949c:	bl	1520 <fread@plt>
   494a0:	subs	r3, r0, #0
   494a4:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   494a8:	ldr	r3, [r5, #20]
   494ac:	cmp	r3, #0
   494b0:	beq	494c0 <Mat_VarReadNextInfo4+0x248>
   494b4:	ldr	r3, [r5, #16]
   494b8:	cmp	r3, #4
   494bc:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   494c0:	mov	r2, #1
   494c4:	mov	r1, #4
   494c8:	ldr	r3, [r4]
   494cc:	mov	r0, r7
   494d0:	bl	1520 <fread@plt>
   494d4:	subs	r3, r0, #0
   494d8:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   494dc:	ldr	r3, [r4, #20]
   494e0:	cmp	r3, #0
   494e4:	bne	495e4 <Mat_VarReadNextInfo4+0x36c>
   494e8:	ldr	r0, [sp]
   494ec:	cmp	r0, #0
   494f0:	ble	49360 <Mat_VarReadNextInfo4+0xe8>
   494f4:	bl	1544 <malloc@plt>
   494f8:	cmp	r0, #0
   494fc:	str	r0, [r5, #36]	; 0x24
   49500:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   49504:	mov	r1, #1
   49508:	ldr	r3, [r4]
   4950c:	ldr	r2, [sp]
   49510:	bl	1520 <fread@plt>
   49514:	subs	r3, r0, #0
   49518:	beq	49360 <Mat_VarReadNextInfo4+0xe8>
   4951c:	ldr	r0, [r4]
   49520:	ldr	r6, [r5, #52]	; 0x34
   49524:	bl	14b4 <ftell@plt>
   49528:	ldr	r3, [r5, #52]	; 0x34
   4952c:	str	r0, [r6]
   49530:	ldr	r3, [r3]
   49534:	cmn	r3, #1
   49538:	beq	495f0 <Mat_VarReadNextInfo4+0x378>
   4953c:	ldr	r0, [r5, #8]
   49540:	bl	1598 <Mat_SizeOf@plt>
   49544:	ldr	r3, [r5, #20]
   49548:	add	r1, sp, #4
   4954c:	str	r0, [sp, #4]
   49550:	cmp	r3, #0
   49554:	lslne	r0, r0, #1
   49558:	strne	r0, [sp, #4]
   4955c:	mov	r0, r5
   49560:	bl	4996c <SafeMulDims>
   49564:	mov	r2, #1
   49568:	ldr	r0, [r4]
   4956c:	ldr	r1, [sp, #4]
   49570:	bl	1694 <fseek@plt>
   49574:	b	4936c <Mat_VarReadNextInfo4+0xf4>
   49578:	mov	r2, #9
   4957c:	str	r2, [r5, #8]
   49580:	b	493e0 <Mat_VarReadNextInfo4+0x168>
   49584:	mov	r2, #7
   49588:	str	r2, [r5, #8]
   4958c:	b	493e0 <Mat_VarReadNextInfo4+0x168>
   49590:	mov	r2, #5
   49594:	str	r2, [r5, #8]
   49598:	b	493e0 <Mat_VarReadNextInfo4+0x168>
   4959c:	mov	r2, #3
   495a0:	str	r2, [r5, #8]
   495a4:	b	493e0 <Mat_VarReadNextInfo4+0x168>
   495a8:	mov	r2, #4
   495ac:	str	r2, [r5, #8]
   495b0:	b	493e0 <Mat_VarReadNextInfo4+0x168>
   495b4:	mov	r3, #4
   495b8:	str	r3, [r5, #16]
   495bc:	b	49400 <Mat_VarReadNextInfo4+0x188>
   495c0:	mov	r3, #5
   495c4:	str	r3, [r5, #16]
   495c8:	b	49400 <Mat_VarReadNextInfo4+0x188>
   495cc:	mov	r0, r7
   495d0:	bl	18c4 <Mat_int32Swap>
   495d4:	b	49440 <Mat_VarReadNextInfo4+0x1c8>
   495d8:	mov	r0, r7
   495dc:	bl	18c4 <Mat_int32Swap>
   495e0:	b	49478 <Mat_VarReadNextInfo4+0x200>
   495e4:	mov	r0, r7
   495e8:	bl	18c4 <Mat_int32Swap>
   495ec:	b	494e8 <Mat_VarReadNextInfo4+0x270>
   495f0:	mov	r0, r5
   495f4:	mov	r5, #0
   495f8:	bl	158c <Mat_VarFree@plt>
   495fc:	ldr	r0, [pc, #36]	; 49628 <Mat_VarReadNextInfo4+0x3b0>
   49600:	add	r0, pc, r0
   49604:	bl	161c <Mat_Critical@plt>
   49608:	b	4936c <Mat_VarReadNextInfo4+0xf4>
   4960c:	nop	{0}
   49610:	.word	0x00000000
   49614:	.word	0x408f4000
   49618:	.word	0x00000000
   4961c:	.word	0x40590000
   49620:	.word	0x00000000
   49624:	.word	0x40240000
   49628:	.word	0x000051f8

0004962c <mat_copy>:
   4962c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   49630:	mov	r2, #8192	; 0x2000
   49634:	mov	r4, r0
   49638:	strd	r6, [sp, #8]
   4963c:	str	r8, [sp, #16]
   49640:	mov	r8, r1
   49644:	mov	r1, #0
   49648:	str	lr, [sp, #20]
   4964c:	sub	sp, sp, #8192	; 0x2000
   49650:	mov	r5, sp
   49654:	mov	r0, r5
   49658:	bl	15f8 <memset@plt>
   4965c:	ldr	r1, [pc, #240]	; 49754 <mat_copy+0x128>
   49660:	mov	r0, r4
   49664:	add	r1, pc, r1
   49668:	bl	1454 <fopen@plt>
   4966c:	subs	r6, r0, #0
   49670:	beq	4971c <mat_copy+0xf0>
   49674:	ldr	r1, [pc, #220]	; 49758 <mat_copy+0x12c>
   49678:	mov	r0, r8
   4967c:	add	r1, pc, r1
   49680:	bl	1454 <fopen@plt>
   49684:	subs	r7, r0, #0
   49688:	bne	4969c <mat_copy+0x70>
   4968c:	b	49734 <mat_copy+0x108>
   49690:	bl	1514 <fwrite@plt>
   49694:	cmp	r0, r4
   49698:	bne	496f4 <mat_copy+0xc8>
   4969c:	mov	r3, r6
   496a0:	mov	r2, #8192	; 0x2000
   496a4:	mov	r1, #1
   496a8:	mov	r0, r5
   496ac:	bl	1520 <fread@plt>
   496b0:	subs	r4, r0, #0
   496b4:	mov	r3, r7
   496b8:	mov	r1, #1
   496bc:	mov	r0, r5
   496c0:	mov	r2, r4
   496c4:	bne	49690 <mat_copy+0x64>
   496c8:	mov	r0, r6
   496cc:	bl	1634 <fclose@plt>
   496d0:	mov	r0, r7
   496d4:	bl	1634 <fclose@plt>
   496d8:	mov	r0, r4
   496dc:	add	sp, sp, #8192	; 0x2000
   496e0:	ldrd	r4, [sp]
   496e4:	ldrd	r6, [sp, #8]
   496e8:	ldr	r8, [sp, #16]
   496ec:	add	sp, sp, #20
   496f0:	pop	{pc}		; (ldr pc, [sp], #4)
   496f4:	mov	r0, r6
   496f8:	bl	1634 <fclose@plt>
   496fc:	mov	r0, r7
   49700:	bl	1634 <fclose@plt>
   49704:	ldr	r0, [pc, #80]	; 4975c <mat_copy+0x130>
   49708:	mov	r1, r8
   4970c:	add	r0, pc, r0
   49710:	bl	161c <Mat_Critical@plt>
   49714:	mvn	r0, #0
   49718:	b	496dc <mat_copy+0xb0>
   4971c:	ldr	r0, [pc, #60]	; 49760 <mat_copy+0x134>
   49720:	mov	r1, r4
   49724:	add	r0, pc, r0
   49728:	bl	161c <Mat_Critical@plt>
   4972c:	mvn	r0, #0
   49730:	b	496dc <mat_copy+0xb0>
   49734:	mov	r0, r6
   49738:	bl	1634 <fclose@plt>
   4973c:	ldr	r0, [pc, #32]	; 49764 <mat_copy+0x138>
   49740:	mov	r1, r8
   49744:	add	r0, pc, r0
   49748:	bl	161c <Mat_Critical@plt>
   4974c:	mvn	r0, #0
   49750:	b	496dc <mat_copy+0xb0>
   49754:	.word	0x00005790
   49758:	.word	0x000057a0
   4975c:	.word	0x00005738
   49760:	.word	0x000056d4
   49764:	.word	0x000056dc

00049768 <Mat_PrintNumber>:
   49768:	sub	r0, r0, #1
   4976c:	cmp	r0, #12
   49770:	addls	pc, pc, r0, lsl #2
   49774:	b	49854 <Mat_PrintNumber+0xec>
   49778:	b	497bc <Mat_PrintNumber+0x54>
   4977c:	b	497cc <Mat_PrintNumber+0x64>
   49780:	b	497dc <Mat_PrintNumber+0x74>
   49784:	b	497ec <Mat_PrintNumber+0x84>
   49788:	b	497fc <Mat_PrintNumber+0x94>
   4978c:	b	4980c <Mat_PrintNumber+0xa4>
   49790:	b	4981c <Mat_PrintNumber+0xb4>
   49794:	b	49854 <Mat_PrintNumber+0xec>
   49798:	b	49834 <Mat_PrintNumber+0xcc>
   4979c:	b	49854 <Mat_PrintNumber+0xec>
   497a0:	b	49854 <Mat_PrintNumber+0xec>
   497a4:	b	49844 <Mat_PrintNumber+0xdc>
   497a8:	b	497ac <Mat_PrintNumber+0x44>
   497ac:	ldr	r0, [pc, #164]	; 49858 <Mat_PrintNumber+0xf0>
   497b0:	ldrd	r2, [r1]
   497b4:	add	r0, pc, r0
   497b8:	b	1448 <printf@plt>
   497bc:	ldr	r0, [pc, #152]	; 4985c <Mat_PrintNumber+0xf4>
   497c0:	ldrsb	r1, [r1]
   497c4:	add	r0, pc, r0
   497c8:	b	1448 <printf@plt>
   497cc:	ldr	r0, [pc, #140]	; 49860 <Mat_PrintNumber+0xf8>
   497d0:	ldrb	r1, [r1]
   497d4:	add	r0, pc, r0
   497d8:	b	1448 <printf@plt>
   497dc:	ldr	r0, [pc, #128]	; 49864 <Mat_PrintNumber+0xfc>
   497e0:	ldrsh	r1, [r1]
   497e4:	add	r0, pc, r0
   497e8:	b	1448 <printf@plt>
   497ec:	ldr	r0, [pc, #116]	; 49868 <Mat_PrintNumber+0x100>
   497f0:	ldrh	r1, [r1]
   497f4:	add	r0, pc, r0
   497f8:	b	1448 <printf@plt>
   497fc:	ldr	r0, [pc, #104]	; 4986c <Mat_PrintNumber+0x104>
   49800:	ldr	r1, [r1]
   49804:	add	r0, pc, r0
   49808:	b	1448 <printf@plt>
   4980c:	ldr	r0, [pc, #92]	; 49870 <Mat_PrintNumber+0x108>
   49810:	ldr	r1, [r1]
   49814:	add	r0, pc, r0
   49818:	b	1448 <printf@plt>
   4981c:	vldr	s15, [r1]
   49820:	ldr	r0, [pc, #76]	; 49874 <Mat_PrintNumber+0x10c>
   49824:	vcvt.f64.f32	d7, s15
   49828:	add	r0, pc, r0
   4982c:	vmov	r2, r3, d7
   49830:	b	1448 <printf@plt>
   49834:	ldr	r0, [pc, #60]	; 49878 <Mat_PrintNumber+0x110>
   49838:	ldrd	r2, [r1]
   4983c:	add	r0, pc, r0
   49840:	b	1448 <printf@plt>
   49844:	ldr	r0, [pc, #48]	; 4987c <Mat_PrintNumber+0x114>
   49848:	ldrd	r2, [r1]
   4984c:	add	r0, pc, r0
   49850:	b	1448 <printf@plt>
   49854:	bx	lr
   49858:	.word	0x000056b8
   4985c:	.word	0x000056c0
   49860:	.word	0x000056b8
   49864:	.word	0x00005698
   49868:	.word	0x0000568c
   4986c:	.word	0x00005670
   49870:	.word	0x00005664
   49874:	.word	0x00005638
   49878:	.word	0x00005624
   4987c:	.word	0x00005618

00049880 <ReadData>:
   49880:	cmp	r1, #0
   49884:	cmpne	r0, #0
   49888:	beq	498ac <ReadData+0x2c>
   4988c:	ldr	r2, [r0]
   49890:	cmp	r2, #0
   49894:	beq	498ac <ReadData+0x2c>
   49898:	ldr	r3, [r0, #16]
   4989c:	cmp	r3, #256	; 0x100
   498a0:	beq	498b0 <ReadData+0x30>
   498a4:	cmp	r3, #16
   498a8:	beq	498b4 <ReadData+0x34>
   498ac:	bx	lr
   498b0:	b	42c6c <Mat_VarRead5>
   498b4:	b	48540 <Mat_VarRead4>

000498b8 <ComplexMalloc>:
   498b8:	strd	r4, [sp, #-16]!
   498bc:	mov	r5, r0
   498c0:	mov	r0, #8
   498c4:	str	r6, [sp, #8]
   498c8:	str	lr, [sp, #12]
   498cc:	bl	1544 <malloc@plt>
   498d0:	subs	r4, r0, #0
   498d4:	beq	49908 <ComplexMalloc+0x50>
   498d8:	mov	r0, r5
   498dc:	bl	1544 <malloc@plt>
   498e0:	cmp	r0, #0
   498e4:	mov	r6, r0
   498e8:	str	r0, [r4]
   498ec:	beq	4991c <ComplexMalloc+0x64>
   498f0:	mov	r0, r5
   498f4:	bl	1544 <malloc@plt>
   498f8:	cmp	r0, #0
   498fc:	mov	r5, r0
   49900:	str	r0, [r4, #4]
   49904:	beq	4992c <ComplexMalloc+0x74>
   49908:	mov	r0, r4
   4990c:	ldrd	r4, [sp]
   49910:	ldr	r6, [sp, #8]
   49914:	add	sp, sp, #12
   49918:	pop	{pc}		; (ldr pc, [sp], #4)
   4991c:	mov	r0, r4
   49920:	mov	r4, r6
   49924:	bl	1478 <free@plt>
   49928:	b	49908 <ComplexMalloc+0x50>
   4992c:	mov	r0, r6
   49930:	bl	1478 <free@plt>
   49934:	mov	r0, r4
   49938:	mov	r4, r5
   4993c:	bl	1478 <free@plt>
   49940:	b	49908 <ComplexMalloc+0x50>

00049944 <ClassType2DataType>:
   49944:	sub	r0, r0, #1
   49948:	cmp	r0, #14
   4994c:	bhi	49960 <ClassType2DataType+0x1c>
   49950:	ldr	r3, [pc, #16]	; 49968 <ClassType2DataType+0x24>
   49954:	add	r3, pc, r3
   49958:	ldr	r0, [r3, r0, lsl #2]
   4995c:	bx	lr
   49960:	mov	r0, #0
   49964:	bx	lr
   49968:	.word	0x00005434

0004996c <SafeMulDims>:
   4996c:	ldr	r3, [r0, #4]
   49970:	cmp	r3, #0
   49974:	ble	499e4 <SafeMulDims+0x78>
   49978:	push	{lr}		; (str lr, [sp, #-4]!)
   4997c:	ldr	lr, [r0, #32]
   49980:	ldr	r2, [r1]
   49984:	ldr	r3, [lr]
   49988:	umull	r2, r3, r2, r3
   4998c:	adds	ip, r3, #0
   49990:	str	r2, [r1]
   49994:	movne	ip, #1
   49998:	cmp	ip, #0
   4999c:	beq	499bc <SafeMulDims+0x50>
   499a0:	b	499d4 <SafeMulDims+0x68>
   499a4:	ldr	r3, [lr, #4]!
   499a8:	ldr	r2, [r1]
   499ac:	umull	r2, r3, r2, r3
   499b0:	cmp	r3, #0
   499b4:	str	r2, [r1]
   499b8:	bne	499d4 <SafeMulDims+0x68>
   499bc:	ldr	r3, [r0, #4]
   499c0:	add	ip, ip, #1
   499c4:	cmp	r3, ip
   499c8:	bgt	499a4 <SafeMulDims+0x38>
   499cc:	mov	r0, #0
   499d0:	pop	{pc}		; (ldr pc, [sp], #4)
   499d4:	mov	r3, #0
   499d8:	mov	r0, #1
   499dc:	str	r3, [r1]
   499e0:	pop	{pc}		; (ldr pc, [sp], #4)
   499e4:	mov	r0, #0
   499e8:	bx	lr

000499ec <SafeMul>:
   499ec:	strd	r4, [sp, #-8]!
   499f0:	umull	r4, r5, r1, r2
   499f4:	adds	r3, r5, #0
   499f8:	movne	r3, #1
   499fc:	cmp	r3, #0
   49a00:	moveq	r2, r4
   49a04:	movne	r2, #0
   49a08:	str	r2, [r0]
   49a0c:	movne	r0, #1
   49a10:	moveq	r0, #0
   49a14:	ldrd	r4, [sp]
   49a18:	add	sp, sp, #8
   49a1c:	bx	lr

00049a20 <Mat_GetLibraryVersion>:
   49a20:	cmp	r0, #0
   49a24:	movne	r3, #1
   49a28:	strne	r3, [r0]
   49a2c:	cmp	r1, #0
   49a30:	movne	r3, #5
   49a34:	strne	r3, [r1]
   49a38:	cmp	r2, #0
   49a3c:	movne	r3, #15
   49a40:	strne	r3, [r2]
   49a44:	bx	lr

00049a48 <Mat_CreateVer>:
   49a48:	cmp	r2, #16
   49a4c:	beq	49a60 <Mat_CreateVer+0x18>
   49a50:	cmp	r2, #256	; 0x100
   49a54:	beq	49a64 <Mat_CreateVer+0x1c>
   49a58:	mov	r0, #0
   49a5c:	bx	lr
   49a60:	b	47e38 <Mat_Create4>
   49a64:	b	42a64 <Mat_Create5>

00049a68 <Mat_Close>:
   49a68:	strd	r4, [sp, #-16]!
   49a6c:	subs	r5, r0, #0
   49a70:	str	r6, [sp, #8]
   49a74:	str	lr, [sp, #12]
   49a78:	beq	49b0c <Mat_Close+0xa4>
   49a7c:	ldr	r0, [r5]
   49a80:	cmp	r0, #0
   49a84:	beq	49a8c <Mat_Close+0x24>
   49a88:	bl	1634 <fclose@plt>
   49a8c:	ldr	r0, [r5, #4]
   49a90:	cmp	r0, #0
   49a94:	beq	49a9c <Mat_Close+0x34>
   49a98:	bl	1478 <free@plt>
   49a9c:	ldr	r0, [r5, #8]
   49aa0:	cmp	r0, #0
   49aa4:	beq	49aac <Mat_Close+0x44>
   49aa8:	bl	1478 <free@plt>
   49aac:	ldr	r0, [r5, #12]
   49ab0:	cmp	r0, #0
   49ab4:	beq	49abc <Mat_Close+0x54>
   49ab8:	bl	1478 <free@plt>
   49abc:	ldr	r2, [r5, #40]	; 0x28
   49ac0:	cmp	r2, #0
   49ac4:	beq	49b04 <Mat_Close+0x9c>
   49ac8:	ldr	r1, [r5, #36]	; 0x24
   49acc:	cmp	r1, #0
   49ad0:	beq	49afc <Mat_Close+0x94>
   49ad4:	mov	r4, #0
   49ad8:	ldr	r3, [r2, r4, lsl #2]
   49adc:	add	r4, r4, #1
   49ae0:	subs	r0, r3, #0
   49ae4:	beq	49af4 <Mat_Close+0x8c>
   49ae8:	bl	1478 <free@plt>
   49aec:	ldr	r1, [r5, #36]	; 0x24
   49af0:	ldr	r2, [r5, #40]	; 0x28
   49af4:	cmp	r1, r4
   49af8:	bhi	49ad8 <Mat_Close+0x70>
   49afc:	mov	r0, r2
   49b00:	bl	1478 <free@plt>
   49b04:	mov	r0, r5
   49b08:	bl	1478 <free@plt>
   49b0c:	ldrd	r4, [sp]
   49b10:	mov	r0, #0
   49b14:	ldr	r6, [sp, #8]
   49b18:	add	sp, sp, #12
   49b1c:	pop	{pc}		; (ldr pc, [sp], #4)

00049b20 <Mat_GetFilename>:
   49b20:	cmp	r0, #0
   49b24:	ldrne	r0, [r0, #12]
   49b28:	bx	lr

00049b2c <Mat_GetHeader>:
   49b2c:	cmp	r0, #0
   49b30:	ldrne	r0, [r0, #4]
   49b34:	bx	lr

00049b38 <Mat_GetVersion>:
   49b38:	cmp	r0, #0
   49b3c:	ldrne	r0, [r0, #16]
   49b40:	bx	lr

00049b44 <Mat_Rewind>:
   49b44:	ldr	r3, [r0, #16]
   49b48:	str	r4, [sp, #-8]!
   49b4c:	str	lr, [sp, #4]
   49b50:	cmp	r3, #256	; 0x100
   49b54:	beq	49b7c <Mat_Rewind+0x38>
   49b58:	cmp	r3, #512	; 0x200
   49b5c:	beq	49bc4 <Mat_Rewind+0x80>
   49b60:	cmp	r3, #16
   49b64:	mvnne	r3, #0
   49b68:	beq	49ba0 <Mat_Rewind+0x5c>
   49b6c:	ldr	r4, [sp]
   49b70:	add	sp, sp, #4
   49b74:	mov	r0, r3
   49b78:	pop	{pc}		; (ldr pc, [sp], #4)
   49b7c:	mov	r2, #0
   49b80:	mov	r1, #128	; 0x80
   49b84:	ldr	r0, [r0]
   49b88:	bl	1694 <fseek@plt>
   49b8c:	mov	r3, #0
   49b90:	ldr	r4, [sp]
   49b94:	add	sp, sp, #4
   49b98:	mov	r0, r3
   49b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   49ba0:	mov	r2, #0
   49ba4:	ldr	r0, [r0]
   49ba8:	mov	r1, r2
   49bac:	bl	1694 <fseek@plt>
   49bb0:	mov	r3, #0
   49bb4:	ldr	r4, [sp]
   49bb8:	add	sp, sp, #4
   49bbc:	mov	r0, r3
   49bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   49bc4:	mov	r2, #0
   49bc8:	ldr	r4, [sp]
   49bcc:	add	sp, sp, #4
   49bd0:	mov	r3, r2
   49bd4:	str	r2, [r0, #32]
   49bd8:	mov	r0, r3
   49bdc:	pop	{pc}		; (ldr pc, [sp], #4)

00049be0 <Mat_SizeOfClass>:
   49be0:	sub	r0, r0, #4
   49be4:	cmp	r0, #11
   49be8:	bhi	49c00 <Mat_SizeOfClass+0x20>
   49bec:	ldr	r3, [pc, #20]	; 49c08 <Mat_SizeOfClass+0x28>
   49bf0:	add	r3, pc, r3
   49bf4:	add	r0, r3, r0, lsl #2
   49bf8:	ldr	r0, [r0, #60]	; 0x3c
   49bfc:	bx	lr
   49c00:	mov	r0, #0
   49c04:	bx	lr
   49c08:	.word	0x00005198

00049c0c <Mat_VarCalloc>:
   49c0c:	mov	r0, #56	; 0x38
   49c10:	strd	r4, [sp, #-16]!
   49c14:	str	r6, [sp, #8]
   49c18:	str	lr, [sp, #12]
   49c1c:	bl	1544 <malloc@plt>
   49c20:	subs	r5, r0, #0
   49c24:	beq	49c8c <Mat_VarCalloc+0x80>
   49c28:	mov	r4, #0
   49c2c:	mov	r0, #20
   49c30:	str	r4, [r5]
   49c34:	str	r4, [r5, #4]
   49c38:	str	r4, [r5, #8]
   49c3c:	str	r4, [r5, #12]
   49c40:	str	r4, [r5, #16]
   49c44:	str	r4, [r5, #20]
   49c48:	str	r4, [r5, #24]
   49c4c:	str	r4, [r5, #28]
   49c50:	str	r4, [r5, #32]
   49c54:	str	r4, [r5, #36]	; 0x24
   49c58:	str	r4, [r5, #40]	; 0x28
   49c5c:	str	r4, [r5, #44]	; 0x2c
   49c60:	str	r4, [r5, #48]	; 0x30
   49c64:	bl	1544 <malloc@plt>
   49c68:	cmp	r0, r4
   49c6c:	mov	r3, r0
   49c70:	str	r0, [r5, #52]	; 0x34
   49c74:	beq	49ca0 <Mat_VarCalloc+0x94>
   49c78:	str	r4, [r0]
   49c7c:	str	r4, [r0, #4]
   49c80:	str	r4, [r0, #8]
   49c84:	str	r4, [r0, #12]
   49c88:	str	r4, [r0, #16]
   49c8c:	mov	r0, r5
   49c90:	ldrd	r4, [sp]
   49c94:	ldr	r6, [sp, #8]
   49c98:	add	sp, sp, #12
   49c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   49ca0:	mov	r0, r5
   49ca4:	mov	r5, r3
   49ca8:	bl	1478 <free@plt>
   49cac:	b	49c8c <Mat_VarCalloc+0x80>

00049cb0 <Mat_VarDuplicate>:
   49cb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   49cb4:	mov	r4, r0
   49cb8:	strd	r6, [sp, #8]
   49cbc:	strd	r8, [sp, #16]
   49cc0:	mov	r9, r1
   49cc4:	strd	sl, [sp, #24]
   49cc8:	str	lr, [sp, #32]
   49ccc:	sub	sp, sp, #12
   49cd0:	bl	1508 <Mat_VarCalloc@plt>
   49cd4:	subs	r5, r0, #0
   49cd8:	beq	49f18 <Mat_VarDuplicate+0x268>
   49cdc:	ldr	r3, [r4]
   49ce0:	ldmib	r4, {r1, r2}
   49ce4:	ldr	r0, [r4, #36]	; 0x24
   49ce8:	str	r3, [r5]
   49cec:	ldr	r3, [r4, #12]
   49cf0:	str	r1, [r5, #4]
   49cf4:	ldr	r1, [r4, #16]
   49cf8:	str	r2, [r5, #8]
   49cfc:	cmp	r0, #0
   49d00:	ldr	r2, [r4, #20]
   49d04:	str	r3, [r5, #12]
   49d08:	ldr	r3, [r4, #24]
   49d0c:	str	r1, [r5, #16]
   49d10:	ldr	r1, [r4, #28]
   49d14:	str	r2, [r5, #20]
   49d18:	ldr	r2, [r4, #44]	; 0x2c
   49d1c:	str	r3, [r5, #24]
   49d20:	ldr	r3, [r4, #48]	; 0x30
   49d24:	str	r1, [r5, #28]
   49d28:	strd	r2, [r5, #44]	; 0x2c
   49d2c:	beq	49d58 <Mat_VarDuplicate+0xa8>
   49d30:	bl	15c8 <strlen@plt>
   49d34:	add	r6, r0, #1
   49d38:	mov	r0, r6
   49d3c:	bl	1544 <malloc@plt>
   49d40:	cmp	r0, #0
   49d44:	str	r0, [r5, #36]	; 0x24
   49d48:	beq	49d58 <Mat_VarDuplicate+0xa8>
   49d4c:	mov	r2, r6
   49d50:	ldr	r1, [r4, #36]	; 0x24
   49d54:	bl	1490 <memcpy@plt>
   49d58:	ldr	r6, [r4, #4]
   49d5c:	lsl	r6, r6, #2
   49d60:	mov	r0, r6
   49d64:	bl	1544 <malloc@plt>
   49d68:	cmp	r0, #0
   49d6c:	str	r0, [r5, #32]
   49d70:	beq	49d80 <Mat_VarDuplicate+0xd0>
   49d74:	mov	r2, r6
   49d78:	ldr	r1, [r4, #32]
   49d7c:	bl	1490 <memcpy@plt>
   49d80:	ldr	r6, [r4, #52]	; 0x34
   49d84:	ldr	r8, [r5, #52]	; 0x34
   49d88:	cmp	r6, #0
   49d8c:	beq	4a130 <Mat_VarDuplicate+0x480>
   49d90:	ldm	r6, {r1, r2}
   49d94:	mov	r3, #0
   49d98:	ldr	r0, [r6, #8]
   49d9c:	stm	r8, {r1, r2}
   49da0:	str	r3, [r8, #12]
   49da4:	cmp	r0, r3
   49da8:	str	r3, [r8, #16]
   49dac:	beq	49dbc <Mat_VarDuplicate+0x10c>
   49db0:	ldr	fp, [r6, #4]
   49db4:	cmp	fp, #0
   49db8:	bne	49f70 <Mat_VarDuplicate+0x2c0>
   49dbc:	ldr	r3, [r6, #12]
   49dc0:	cmp	r3, #0
   49dc4:	beq	49de8 <Mat_VarDuplicate+0x138>
   49dc8:	mov	r0, #56	; 0x38
   49dcc:	bl	1544 <malloc@plt>
   49dd0:	cmp	r0, #0
   49dd4:	str	r0, [r8, #12]
   49dd8:	beq	49de8 <Mat_VarDuplicate+0x138>
   49ddc:	ldr	r1, [r6, #12]
   49de0:	bl	15bc <inflateCopy@plt>
   49de4:	ldr	r6, [r4, #52]	; 0x34
   49de8:	ldr	r3, [r6, #16]
   49dec:	cmp	r3, #0
   49df0:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   49df4:	ldr	r3, [r4, #16]
   49df8:	ldr	r7, [r5, #52]	; 0x34
   49dfc:	cmp	r3, #5
   49e00:	beq	49fc0 <Mat_VarDuplicate+0x310>
   49e04:	ldr	r3, [r5, #20]
   49e08:	cmp	r3, #0
   49e0c:	beq	49f38 <Mat_VarDuplicate+0x288>
   49e10:	mov	r0, #8
   49e14:	bl	1544 <malloc@plt>
   49e18:	cmp	r0, #0
   49e1c:	mov	r8, r0
   49e20:	str	r0, [r7, #16]
   49e24:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   49e28:	ldr	r7, [r5]
   49e2c:	ldr	r6, [r6, #16]
   49e30:	mov	r0, r7
   49e34:	bl	1544 <malloc@plt>
   49e38:	cmp	r0, #0
   49e3c:	str	r0, [r8]
   49e40:	beq	49e54 <Mat_VarDuplicate+0x1a4>
   49e44:	mov	r2, r7
   49e48:	ldr	r1, [r6]
   49e4c:	bl	1490 <memcpy@plt>
   49e50:	ldr	r7, [r5]
   49e54:	mov	r0, r7
   49e58:	bl	1544 <malloc@plt>
   49e5c:	cmp	r0, #0
   49e60:	str	r0, [r8, #4]
   49e64:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   49e68:	mov	r2, r7
   49e6c:	ldr	r1, [r6, #4]
   49e70:	bl	1490 <memcpy@plt>
   49e74:	ldr	r3, [r4, #40]	; 0x28
   49e78:	cmp	r9, #0
   49e7c:	streq	r3, [r5, #40]	; 0x28
   49e80:	beq	49f18 <Mat_VarDuplicate+0x268>
   49e84:	cmp	r3, #0
   49e88:	beq	49f18 <Mat_VarDuplicate+0x268>
   49e8c:	ldr	r3, [r4, #16]
   49e90:	cmp	r3, #2
   49e94:	beq	4a150 <Mat_VarDuplicate+0x4a0>
   49e98:	cmp	r3, #1
   49e9c:	beq	4a1b0 <Mat_VarDuplicate+0x500>
   49ea0:	cmp	r3, #5
   49ea4:	beq	4a210 <Mat_VarDuplicate+0x560>
   49ea8:	ldr	r3, [r5, #20]
   49eac:	cmp	r3, #0
   49eb0:	beq	4a108 <Mat_VarDuplicate+0x458>
   49eb4:	mov	r0, #8
   49eb8:	bl	1544 <malloc@plt>
   49ebc:	cmp	r0, #0
   49ec0:	mov	r6, r0
   49ec4:	str	r0, [r5, #40]	; 0x28
   49ec8:	beq	49f18 <Mat_VarDuplicate+0x268>
   49ecc:	ldr	r7, [r5]
   49ed0:	ldr	r4, [r4, #40]	; 0x28
   49ed4:	mov	r0, r7
   49ed8:	bl	1544 <malloc@plt>
   49edc:	cmp	r0, #0
   49ee0:	str	r0, [r6]
   49ee4:	beq	49ef8 <Mat_VarDuplicate+0x248>
   49ee8:	mov	r2, r7
   49eec:	ldr	r1, [r4]
   49ef0:	bl	1490 <memcpy@plt>
   49ef4:	ldr	r7, [r5]
   49ef8:	mov	r0, r7
   49efc:	bl	1544 <malloc@plt>
   49f00:	cmp	r0, #0
   49f04:	str	r0, [r6, #4]
   49f08:	beq	49f18 <Mat_VarDuplicate+0x268>
   49f0c:	mov	r2, r7
   49f10:	ldr	r1, [r4, #4]
   49f14:	bl	1490 <memcpy@plt>
   49f18:	mov	r0, r5
   49f1c:	add	sp, sp, #12
   49f20:	ldrd	r4, [sp]
   49f24:	ldrd	r6, [sp, #8]
   49f28:	ldrd	r8, [sp, #16]
   49f2c:	ldrd	sl, [sp, #24]
   49f30:	add	sp, sp, #32
   49f34:	pop	{pc}		; (ldr pc, [sp], #4)
   49f38:	ldr	r8, [r4]
   49f3c:	mov	r0, r8
   49f40:	bl	1544 <malloc@plt>
   49f44:	cmp	r0, #0
   49f48:	str	r0, [r7, #16]
   49f4c:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   49f50:	mov	r2, r8
   49f54:	ldr	r1, [r6, #16]
   49f58:	bl	1490 <memcpy@plt>
   49f5c:	ldr	r3, [r4, #40]	; 0x28
   49f60:	cmp	r9, #0
   49f64:	streq	r3, [r5, #40]	; 0x28
   49f68:	beq	49f18 <Mat_VarDuplicate+0x268>
   49f6c:	b	49e84 <Mat_VarDuplicate+0x1d4>
   49f70:	mov	r0, fp
   49f74:	mov	r1, #4
   49f78:	bl	140c <calloc@plt>
   49f7c:	str	r0, [r8, #8]
   49f80:	add	fp, r0, fp, lsl #2
   49f84:	mov	r7, r0
   49f88:	ldr	sl, [r6, #8]
   49f8c:	sub	sl, sl, #4
   49f90:	ldr	r3, [sl, #4]!
   49f94:	subs	r0, r3, #0
   49f98:	beq	49fa4 <Mat_VarDuplicate+0x2f4>
   49f9c:	bl	14cc <strdup@plt>
   49fa0:	str	r0, [r7]
   49fa4:	add	r7, r7, #4
   49fa8:	cmp	fp, r7
   49fac:	bne	49f90 <Mat_VarDuplicate+0x2e0>
   49fb0:	ldr	r3, [r6, #12]
   49fb4:	cmp	r3, #0
   49fb8:	bne	49dc8 <Mat_VarDuplicate+0x118>
   49fbc:	b	49de8 <Mat_VarDuplicate+0x138>
   49fc0:	mov	r0, #28
   49fc4:	bl	1544 <malloc@plt>
   49fc8:	cmp	r0, #0
   49fcc:	mov	r8, r0
   49fd0:	str	r0, [r7, #16]
   49fd4:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   49fd8:	ldr	r6, [r6, #16]
   49fdc:	ldr	r3, [r6]
   49fe0:	ldr	r2, [r6, #8]
   49fe4:	str	r2, [r0, #8]
   49fe8:	ldr	r7, [r6, #8]
   49fec:	str	r3, [r8]
   49ff0:	lsl	r7, r7, #2
   49ff4:	mov	r0, r7
   49ff8:	bl	1544 <malloc@plt>
   49ffc:	cmp	r0, #0
   4a000:	str	r0, [r8, #4]
   4a004:	beq	4a014 <Mat_VarDuplicate+0x364>
   4a008:	mov	r2, r7
   4a00c:	ldr	r1, [r6, #4]
   4a010:	bl	1490 <memcpy@plt>
   4a014:	ldr	r3, [r6, #16]
   4a018:	lsl	r7, r3, #2
   4a01c:	str	r3, [r8, #16]
   4a020:	mov	r0, r7
   4a024:	bl	1544 <malloc@plt>
   4a028:	cmp	r0, #0
   4a02c:	str	r0, [r8, #12]
   4a030:	beq	4a040 <Mat_VarDuplicate+0x390>
   4a034:	mov	r2, r7
   4a038:	ldr	r1, [r6, #12]
   4a03c:	bl	1490 <memcpy@plt>
   4a040:	ldr	r2, [r5, #20]
   4a044:	ldr	r7, [r6, #20]
   4a048:	ldr	r3, [r6, #24]
   4a04c:	cmp	r2, #0
   4a050:	str	r7, [r8, #20]
   4a054:	beq	4a354 <Mat_VarDuplicate+0x6a4>
   4a058:	cmp	r3, #0
   4a05c:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   4a060:	mov	r0, #8
   4a064:	bl	1544 <malloc@plt>
   4a068:	cmp	r0, #0
   4a06c:	mov	sl, r0
   4a070:	str	r0, [r8, #24]
   4a074:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   4a078:	ldr	r0, [r4, #8]
   4a07c:	ldr	r8, [r6, #24]
   4a080:	bl	1598 <Mat_SizeOf@plt>
   4a084:	mul	r0, r0, r7
   4a088:	bl	1544 <malloc@plt>
   4a08c:	cmp	r0, #0
   4a090:	mov	r7, r0
   4a094:	str	r0, [sl]
   4a098:	beq	4a0c0 <Mat_VarDuplicate+0x410>
   4a09c:	ldr	r1, [r8]
   4a0a0:	ldr	fp, [r6, #20]
   4a0a4:	ldr	r0, [r4, #8]
   4a0a8:	str	r1, [sp, #4]
   4a0ac:	bl	1598 <Mat_SizeOf@plt>
   4a0b0:	mul	r2, r0, fp
   4a0b4:	mov	r0, r7
   4a0b8:	ldr	r1, [sp, #4]
   4a0bc:	bl	1490 <memcpy@plt>
   4a0c0:	ldr	r7, [r6, #20]
   4a0c4:	ldr	r0, [r4, #8]
   4a0c8:	bl	1598 <Mat_SizeOf@plt>
   4a0cc:	mul	r0, r0, r7
   4a0d0:	bl	1544 <malloc@plt>
   4a0d4:	cmp	r0, #0
   4a0d8:	mov	r7, r0
   4a0dc:	str	r0, [sl, #4]
   4a0e0:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   4a0e4:	ldr	r8, [r8, #4]
   4a0e8:	ldr	r6, [r6, #20]
   4a0ec:	ldr	r0, [r4, #8]
   4a0f0:	bl	1598 <Mat_SizeOf@plt>
   4a0f4:	mov	r1, r8
   4a0f8:	mul	r2, r0, r6
   4a0fc:	mov	r0, r7
   4a100:	bl	1490 <memcpy@plt>
   4a104:	b	49e74 <Mat_VarDuplicate+0x1c4>
   4a108:	ldr	r6, [r4]
   4a10c:	mov	r0, r6
   4a110:	bl	1544 <malloc@plt>
   4a114:	cmp	r0, #0
   4a118:	str	r0, [r5, #40]	; 0x28
   4a11c:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a120:	mov	r2, r6
   4a124:	ldr	r1, [r4, #40]	; 0x28
   4a128:	bl	1490 <memcpy@plt>
   4a12c:	b	49f18 <Mat_VarDuplicate+0x268>
   4a130:	mov	r0, r8
   4a134:	bl	1478 <free@plt>
   4a138:	ldr	r3, [r4, #40]	; 0x28
   4a13c:	cmp	r9, #0
   4a140:	str	r6, [r5, #52]	; 0x34
   4a144:	streq	r3, [r5, #40]	; 0x28
   4a148:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a14c:	b	49e84 <Mat_VarDuplicate+0x1d4>
   4a150:	ldr	r7, [r4]
   4a154:	mov	r0, r7
   4a158:	bl	1544 <malloc@plt>
   4a15c:	cmp	r0, #0
   4a160:	str	r0, [r5, #40]	; 0x28
   4a164:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a168:	ldr	r3, [r4, #12]
   4a16c:	cmp	r3, #0
   4a170:	ble	49f18 <Mat_VarDuplicate+0x268>
   4a174:	cmp	r7, r3
   4a178:	udiv	r7, r7, r3
   4a17c:	bcc	49f18 <Mat_VarDuplicate+0x268>
   4a180:	ldr	r8, [r4, #40]	; 0x28
   4a184:	mov	r6, #0
   4a188:	sub	r4, r0, #4
   4a18c:	sub	r8, r8, #4
   4a190:	add	r6, r6, #1
   4a194:	mov	r1, r9
   4a198:	ldr	r0, [r8, #4]!
   4a19c:	bl	49cb0 <Mat_VarDuplicate>
   4a1a0:	cmp	r7, r6
   4a1a4:	str	r0, [r4, #4]!
   4a1a8:	bhi	4a190 <Mat_VarDuplicate+0x4e0>
   4a1ac:	b	49f18 <Mat_VarDuplicate+0x268>
   4a1b0:	ldr	r7, [r4]
   4a1b4:	mov	r0, r7
   4a1b8:	bl	1544 <malloc@plt>
   4a1bc:	cmp	r0, #0
   4a1c0:	str	r0, [r5, #40]	; 0x28
   4a1c4:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a1c8:	ldr	r3, [r4, #12]
   4a1cc:	cmp	r3, #0
   4a1d0:	ble	49f18 <Mat_VarDuplicate+0x268>
   4a1d4:	cmp	r7, r3
   4a1d8:	udiv	r7, r7, r3
   4a1dc:	bcc	49f18 <Mat_VarDuplicate+0x268>
   4a1e0:	ldr	r8, [r4, #40]	; 0x28
   4a1e4:	mov	r6, #0
   4a1e8:	sub	r4, r0, #4
   4a1ec:	sub	r8, r8, #4
   4a1f0:	add	r6, r6, #1
   4a1f4:	mov	r1, r9
   4a1f8:	ldr	r0, [r8, #4]!
   4a1fc:	bl	49cb0 <Mat_VarDuplicate>
   4a200:	cmp	r7, r6
   4a204:	str	r0, [r4, #4]!
   4a208:	bhi	4a1f0 <Mat_VarDuplicate+0x540>
   4a20c:	b	49f18 <Mat_VarDuplicate+0x268>
   4a210:	mov	r0, #28
   4a214:	bl	1544 <malloc@plt>
   4a218:	cmp	r0, #0
   4a21c:	mov	r6, r0
   4a220:	str	r0, [r5, #40]	; 0x28
   4a224:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a228:	ldr	r7, [r4, #40]	; 0x28
   4a22c:	ldr	r3, [r7]
   4a230:	ldr	r2, [r7, #8]
   4a234:	str	r2, [r0, #8]
   4a238:	ldr	r8, [r7, #8]
   4a23c:	str	r3, [r6]
   4a240:	lsl	r8, r8, #2
   4a244:	mov	r0, r8
   4a248:	bl	1544 <malloc@plt>
   4a24c:	cmp	r0, #0
   4a250:	str	r0, [r6, #4]
   4a254:	beq	4a264 <Mat_VarDuplicate+0x5b4>
   4a258:	mov	r2, r8
   4a25c:	ldr	r1, [r7, #4]
   4a260:	bl	1490 <memcpy@plt>
   4a264:	ldr	r3, [r7, #16]
   4a268:	lsl	r8, r3, #2
   4a26c:	str	r3, [r6, #16]
   4a270:	mov	r0, r8
   4a274:	bl	1544 <malloc@plt>
   4a278:	cmp	r0, #0
   4a27c:	str	r0, [r6, #12]
   4a280:	beq	4a290 <Mat_VarDuplicate+0x5e0>
   4a284:	mov	r2, r8
   4a288:	ldr	r1, [r7, #12]
   4a28c:	bl	1490 <memcpy@plt>
   4a290:	ldr	r2, [r5, #20]
   4a294:	ldr	r8, [r7, #20]
   4a298:	ldr	r3, [r7, #24]
   4a29c:	cmp	r2, #0
   4a2a0:	str	r8, [r6, #20]
   4a2a4:	beq	4a3a0 <Mat_VarDuplicate+0x6f0>
   4a2a8:	cmp	r3, #0
   4a2ac:	beq	4a3ec <Mat_VarDuplicate+0x73c>
   4a2b0:	mov	r0, #8
   4a2b4:	bl	1544 <malloc@plt>
   4a2b8:	cmp	r0, #0
   4a2bc:	mov	r9, r0
   4a2c0:	str	r0, [r6, #24]
   4a2c4:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a2c8:	ldr	r0, [r4, #8]
   4a2cc:	ldr	sl, [r7, #24]
   4a2d0:	bl	1598 <Mat_SizeOf@plt>
   4a2d4:	mul	r0, r0, r8
   4a2d8:	bl	1544 <malloc@plt>
   4a2dc:	cmp	r0, #0
   4a2e0:	mov	r6, r0
   4a2e4:	str	r0, [r9]
   4a2e8:	beq	4a30c <Mat_VarDuplicate+0x65c>
   4a2ec:	ldr	fp, [sl]
   4a2f0:	ldr	r8, [r7, #20]
   4a2f4:	ldr	r0, [r4, #8]
   4a2f8:	bl	1598 <Mat_SizeOf@plt>
   4a2fc:	mov	r1, fp
   4a300:	mul	r2, r0, r8
   4a304:	mov	r0, r6
   4a308:	bl	1490 <memcpy@plt>
   4a30c:	ldr	r6, [r7, #20]
   4a310:	ldr	r0, [r4, #8]
   4a314:	bl	1598 <Mat_SizeOf@plt>
   4a318:	mul	r0, r0, r6
   4a31c:	bl	1544 <malloc@plt>
   4a320:	cmp	r0, #0
   4a324:	mov	r6, r0
   4a328:	str	r0, [r9, #4]
   4a32c:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a330:	ldr	r8, [sl, #4]
   4a334:	ldr	r7, [r7, #20]
   4a338:	ldr	r0, [r4, #8]
   4a33c:	bl	1598 <Mat_SizeOf@plt>
   4a340:	mov	r1, r8
   4a344:	mul	r2, r0, r7
   4a348:	mov	r0, r6
   4a34c:	bl	1490 <memcpy@plt>
   4a350:	b	49f18 <Mat_VarDuplicate+0x268>
   4a354:	cmp	r3, #0
   4a358:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   4a35c:	ldr	r0, [r4, #8]
   4a360:	bl	1598 <Mat_SizeOf@plt>
   4a364:	mul	r0, r0, r7
   4a368:	bl	1544 <malloc@plt>
   4a36c:	cmp	r0, #0
   4a370:	mov	r7, r0
   4a374:	str	r0, [r8, #24]
   4a378:	beq	49e74 <Mat_VarDuplicate+0x1c4>
   4a37c:	ldr	r8, [r6, #20]
   4a380:	ldr	r6, [r6, #24]
   4a384:	ldr	r0, [r4, #8]
   4a388:	bl	1598 <Mat_SizeOf@plt>
   4a38c:	mul	r2, r0, r8
   4a390:	mov	r0, r7
   4a394:	mov	r1, r6
   4a398:	bl	1490 <memcpy@plt>
   4a39c:	b	49e74 <Mat_VarDuplicate+0x1c4>
   4a3a0:	cmp	r3, #0
   4a3a4:	beq	4a3ec <Mat_VarDuplicate+0x73c>
   4a3a8:	ldr	r0, [r4, #8]
   4a3ac:	bl	1598 <Mat_SizeOf@plt>
   4a3b0:	mul	r0, r0, r8
   4a3b4:	bl	1544 <malloc@plt>
   4a3b8:	cmp	r0, #0
   4a3bc:	mov	r8, r0
   4a3c0:	str	r0, [r6, #24]
   4a3c4:	beq	49f18 <Mat_VarDuplicate+0x268>
   4a3c8:	ldr	r9, [r7, #20]
   4a3cc:	ldr	r6, [r7, #24]
   4a3d0:	ldr	r0, [r4, #8]
   4a3d4:	bl	1598 <Mat_SizeOf@plt>
   4a3d8:	mul	r2, r0, r9
   4a3dc:	mov	r0, r8
   4a3e0:	mov	r1, r6
   4a3e4:	bl	1490 <memcpy@plt>
   4a3e8:	b	49f18 <Mat_VarDuplicate+0x268>
   4a3ec:	mov	r3, #0
   4a3f0:	str	r3, [r6, #24]
   4a3f4:	b	49f18 <Mat_VarDuplicate+0x268>

0004a3f8 <Mat_VarFree>:
   4a3f8:	mov	r3, #0
   4a3fc:	strd	r4, [sp, #-16]!
   4a400:	subs	r4, r0, #0
   4a404:	str	r6, [sp, #8]
   4a408:	str	lr, [sp, #12]
   4a40c:	sub	sp, sp, #8
   4a410:	str	r3, [sp]
   4a414:	beq	4a6dc <Mat_VarFree+0x2e4>
   4a418:	ldr	r3, [r4, #32]
   4a41c:	cmp	r3, #0
   4a420:	beq	4a43c <Mat_VarFree+0x44>
   4a424:	mov	r3, #1
   4a428:	mov	r1, sp
   4a42c:	str	r3, [sp]
   4a430:	bl	4996c <SafeMulDims>
   4a434:	ldr	r0, [r4, #32]
   4a438:	bl	1478 <free@plt>
   4a43c:	ldr	r5, [r4, #40]	; 0x28
   4a440:	cmp	r5, #0
   4a444:	beq	4a500 <Mat_VarFree+0x108>
   4a448:	ldr	r3, [r4, #16]
   4a44c:	sub	r3, r3, #1
   4a450:	cmp	r3, #15
   4a454:	addls	pc, pc, r3, lsl #2
   4a458:	b	4a500 <Mat_VarFree+0x108>
   4a45c:	b	4a6a0 <Mat_VarFree+0x2a8>
   4a460:	b	4a5f4 <Mat_VarFree+0x1fc>
   4a464:	b	4a500 <Mat_VarFree+0x108>
   4a468:	b	4a654 <Mat_VarFree+0x25c>
   4a46c:	b	4a49c <Mat_VarFree+0xa4>
   4a470:	b	4a654 <Mat_VarFree+0x25c>
   4a474:	b	4a654 <Mat_VarFree+0x25c>
   4a478:	b	4a654 <Mat_VarFree+0x25c>
   4a47c:	b	4a654 <Mat_VarFree+0x25c>
   4a480:	b	4a654 <Mat_VarFree+0x25c>
   4a484:	b	4a654 <Mat_VarFree+0x25c>
   4a488:	b	4a654 <Mat_VarFree+0x25c>
   4a48c:	b	4a654 <Mat_VarFree+0x25c>
   4a490:	b	4a654 <Mat_VarFree+0x25c>
   4a494:	b	4a654 <Mat_VarFree+0x25c>
   4a498:	b	4a690 <Mat_VarFree+0x298>
   4a49c:	ldr	r3, [r4, #44]	; 0x2c
   4a4a0:	cmp	r3, #0
   4a4a4:	bne	4a500 <Mat_VarFree+0x108>
   4a4a8:	ldr	r0, [r5, #4]
   4a4ac:	cmp	r0, #0
   4a4b0:	beq	4a4b8 <Mat_VarFree+0xc0>
   4a4b4:	bl	1478 <free@plt>
   4a4b8:	ldr	r0, [r5, #12]
   4a4bc:	cmp	r0, #0
   4a4c0:	beq	4a4c8 <Mat_VarFree+0xd0>
   4a4c4:	bl	1478 <free@plt>
   4a4c8:	ldr	r3, [r4, #20]
   4a4cc:	ldr	r6, [r5, #24]
   4a4d0:	cmp	r3, #0
   4a4d4:	beq	4a768 <Mat_VarFree+0x370>
   4a4d8:	cmp	r6, #0
   4a4dc:	beq	4a4f8 <Mat_VarFree+0x100>
   4a4e0:	ldr	r0, [r6]
   4a4e4:	bl	1478 <free@plt>
   4a4e8:	ldr	r0, [r6, #4]
   4a4ec:	bl	1478 <free@plt>
   4a4f0:	mov	r0, r6
   4a4f4:	bl	1478 <free@plt>
   4a4f8:	mov	r0, r5
   4a4fc:	bl	1478 <free@plt>
   4a500:	ldr	r3, [r4, #52]	; 0x34
   4a504:	mov	r0, r3
   4a508:	cmp	r3, #0
   4a50c:	beq	4a574 <Mat_VarFree+0x17c>
   4a510:	ldr	r2, [r4, #48]	; 0x30
   4a514:	cmp	r2, #1
   4a518:	beq	4a5a0 <Mat_VarFree+0x1a8>
   4a51c:	ldr	r2, [r3, #8]
   4a520:	cmp	r2, #0
   4a524:	beq	4a568 <Mat_VarFree+0x170>
   4a528:	ldr	r1, [r3, #4]
   4a52c:	cmp	r1, #0
   4a530:	beq	4a568 <Mat_VarFree+0x170>
   4a534:	mov	r5, #0
   4a538:	ldr	r2, [r2, r5, lsl #2]
   4a53c:	add	r5, r5, #1
   4a540:	subs	r0, r2, #0
   4a544:	beq	4a550 <Mat_VarFree+0x158>
   4a548:	bl	1478 <free@plt>
   4a54c:	ldr	r3, [r4, #52]	; 0x34
   4a550:	ldmib	r3, {r1, r2}
   4a554:	cmp	r1, r5
   4a558:	bhi	4a538 <Mat_VarFree+0x140>
   4a55c:	mov	r0, r2
   4a560:	bl	1478 <free@plt>
   4a564:	ldr	r0, [r4, #52]	; 0x34
   4a568:	bl	1478 <free@plt>
   4a56c:	mov	r3, #0
   4a570:	str	r3, [r4, #52]	; 0x34
   4a574:	ldr	r0, [r4, #36]	; 0x24
   4a578:	cmp	r0, #0
   4a57c:	beq	4a584 <Mat_VarFree+0x18c>
   4a580:	bl	1478 <free@plt>
   4a584:	mov	r0, r4
   4a588:	add	sp, sp, #8
   4a58c:	ldrd	r4, [sp]
   4a590:	ldr	r6, [sp, #8]
   4a594:	ldr	lr, [sp, #12]
   4a598:	add	sp, sp, #16
   4a59c:	b	1478 <free@plt>
   4a5a0:	ldr	r0, [r3, #12]
   4a5a4:	bl	15b0 <inflateEnd@plt>
   4a5a8:	ldr	r3, [r4, #52]	; 0x34
   4a5ac:	ldr	r0, [r3, #12]
   4a5b0:	bl	1478 <free@plt>
   4a5b4:	ldr	r3, [r4, #52]	; 0x34
   4a5b8:	ldr	r5, [r3, #16]
   4a5bc:	mov	r0, r3
   4a5c0:	cmp	r5, #0
   4a5c4:	beq	4a51c <Mat_VarFree+0x124>
   4a5c8:	ldr	r3, [r4, #16]
   4a5cc:	cmp	r3, #5
   4a5d0:	beq	4a714 <Mat_VarFree+0x31c>
   4a5d4:	ldr	r3, [r4, #20]
   4a5d8:	cmp	r3, #0
   4a5dc:	bne	4a6f0 <Mat_VarFree+0x2f8>
   4a5e0:	mov	r0, r5
   4a5e4:	bl	1478 <free@plt>
   4a5e8:	ldr	r3, [r4, #52]	; 0x34
   4a5ec:	mov	r0, r3
   4a5f0:	b	4a51c <Mat_VarFree+0x124>
   4a5f4:	ldr	r6, [r4, #44]	; 0x2c
   4a5f8:	ldr	r3, [r4, #52]	; 0x34
   4a5fc:	cmp	r6, #0
   4a600:	mov	r0, r3
   4a604:	bne	4a508 <Mat_VarFree+0x110>
   4a608:	add	r0, sp, #4
   4a60c:	ldr	r1, [sp]
   4a610:	ldr	r2, [r3, #4]
   4a614:	bl	499ec <SafeMul>
   4a618:	ldr	r3, [sp, #4]
   4a61c:	cmp	r3, #0
   4a620:	subne	r5, r5, #4
   4a624:	beq	4a640 <Mat_VarFree+0x248>
   4a628:	ldr	r0, [r5, #4]!
   4a62c:	add	r6, r6, #1
   4a630:	bl	4a3f8 <Mat_VarFree>
   4a634:	ldr	r3, [sp, #4]
   4a638:	cmp	r3, r6
   4a63c:	bhi	4a628 <Mat_VarFree+0x230>
   4a640:	ldr	r0, [r4, #40]	; 0x28
   4a644:	bl	1478 <free@plt>
   4a648:	ldr	r3, [r4, #52]	; 0x34
   4a64c:	mov	r0, r3
   4a650:	b	4a508 <Mat_VarFree+0x110>
   4a654:	ldr	r3, [r4, #44]	; 0x2c
   4a658:	cmp	r3, #0
   4a65c:	bne	4a500 <Mat_VarFree+0x108>
   4a660:	ldr	r3, [r4, #20]
   4a664:	cmp	r3, #0
   4a668:	beq	4a4f8 <Mat_VarFree+0x100>
   4a66c:	ldr	r0, [r5]
   4a670:	bl	1478 <free@plt>
   4a674:	ldr	r0, [r5, #4]
   4a678:	bl	1478 <free@plt>
   4a67c:	mov	r0, r5
   4a680:	bl	1478 <free@plt>
   4a684:	ldr	r3, [r4, #52]	; 0x34
   4a688:	mov	r0, r3
   4a68c:	b	4a508 <Mat_VarFree+0x110>
   4a690:	ldr	r3, [r4, #44]	; 0x2c
   4a694:	cmp	r3, #0
   4a698:	bne	4a500 <Mat_VarFree+0x108>
   4a69c:	b	4a4f8 <Mat_VarFree+0x100>
   4a6a0:	ldr	r6, [r4, #44]	; 0x2c
   4a6a4:	cmp	r6, #0
   4a6a8:	bne	4a500 <Mat_VarFree+0x108>
   4a6ac:	ldr	r3, [sp]
   4a6b0:	cmp	r3, #0
   4a6b4:	beq	4a4f8 <Mat_VarFree+0x100>
   4a6b8:	sub	r5, r5, #4
   4a6bc:	ldr	r0, [r5, #4]!
   4a6c0:	add	r6, r6, #1
   4a6c4:	bl	4a3f8 <Mat_VarFree>
   4a6c8:	ldr	r3, [sp]
   4a6cc:	cmp	r3, r6
   4a6d0:	bhi	4a6bc <Mat_VarFree+0x2c4>
   4a6d4:	ldr	r5, [r4, #40]	; 0x28
   4a6d8:	b	4a4f8 <Mat_VarFree+0x100>
   4a6dc:	add	sp, sp, #8
   4a6e0:	ldrd	r4, [sp]
   4a6e4:	ldr	r6, [sp, #8]
   4a6e8:	add	sp, sp, #12
   4a6ec:	pop	{pc}		; (ldr pc, [sp], #4)
   4a6f0:	ldr	r0, [r5]
   4a6f4:	bl	1478 <free@plt>
   4a6f8:	ldr	r0, [r5, #4]
   4a6fc:	bl	1478 <free@plt>
   4a700:	mov	r0, r5
   4a704:	bl	1478 <free@plt>
   4a708:	ldr	r3, [r4, #52]	; 0x34
   4a70c:	mov	r0, r3
   4a710:	b	4a51c <Mat_VarFree+0x124>
   4a714:	ldr	r0, [r5, #4]
   4a718:	cmp	r0, #0
   4a71c:	beq	4a724 <Mat_VarFree+0x32c>
   4a720:	bl	1478 <free@plt>
   4a724:	ldr	r0, [r5, #12]
   4a728:	cmp	r0, #0
   4a72c:	beq	4a734 <Mat_VarFree+0x33c>
   4a730:	bl	1478 <free@plt>
   4a734:	ldr	r3, [r4, #20]
   4a738:	ldr	r6, [r5, #24]
   4a73c:	cmp	r3, #0
   4a740:	beq	4a77c <Mat_VarFree+0x384>
   4a744:	cmp	r6, #0
   4a748:	beq	4a5e0 <Mat_VarFree+0x1e8>
   4a74c:	ldr	r0, [r6]
   4a750:	bl	1478 <free@plt>
   4a754:	ldr	r0, [r6, #4]
   4a758:	bl	1478 <free@plt>
   4a75c:	mov	r0, r6
   4a760:	bl	1478 <free@plt>
   4a764:	b	4a5e0 <Mat_VarFree+0x1e8>
   4a768:	cmp	r6, #0
   4a76c:	beq	4a4f8 <Mat_VarFree+0x100>
   4a770:	mov	r0, r6
   4a774:	bl	1478 <free@plt>
   4a778:	b	4a4f8 <Mat_VarFree+0x100>
   4a77c:	cmp	r6, #0
   4a780:	beq	4a5e0 <Mat_VarFree+0x1e8>
   4a784:	mov	r0, r6
   4a788:	bl	1478 <free@plt>
   4a78c:	b	4a5e0 <Mat_VarFree+0x1e8>

0004a790 <Mat_Open>:
   4a790:	tst	r1, #1
   4a794:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4a798:	strd	r6, [sp, #8]
   4a79c:	strd	r8, [sp, #16]
   4a7a0:	mov	r8, r1
   4a7a4:	mov	r9, r0
   4a7a8:	strd	sl, [sp, #24]
   4a7ac:	str	lr, [sp, #32]
   4a7b0:	sub	sp, sp, #12
   4a7b4:	bne	4aa00 <Mat_Open+0x270>
   4a7b8:	ldr	r1, [pc, #832]	; 4ab00 <Mat_Open+0x370>
   4a7bc:	add	r1, pc, r1
   4a7c0:	bl	1454 <fopen@plt>
   4a7c4:	subs	r6, r0, #0
   4a7c8:	beq	4aae4 <Mat_Open+0x354>
   4a7cc:	mov	r0, #44	; 0x2c
   4a7d0:	bl	1544 <malloc@plt>
   4a7d4:	subs	r4, r0, #0
   4a7d8:	beq	4aa2c <Mat_Open+0x29c>
   4a7dc:	mov	r1, #1
   4a7e0:	mov	r0, #128	; 0x80
   4a7e4:	str	r6, [r4]
   4a7e8:	bl	140c <calloc@plt>
   4a7ec:	cmp	r0, #0
   4a7f0:	mov	r5, r0
   4a7f4:	str	r0, [r4, #4]
   4a7f8:	beq	4aa44 <Mat_Open+0x2b4>
   4a7fc:	mov	r1, #1
   4a800:	mov	r0, #8
   4a804:	bl	140c <calloc@plt>
   4a808:	cmp	r0, #0
   4a80c:	mov	r7, r0
   4a810:	str	r0, [r4, #8]
   4a814:	beq	4aa68 <Mat_Open+0x2d8>
   4a818:	mov	r7, #0
   4a81c:	mov	r0, r5
   4a820:	mov	r3, r6
   4a824:	mov	r2, #116	; 0x74
   4a828:	mov	r1, #1
   4a82c:	str	r7, [r4, #12]
   4a830:	add	sl, sp, #6
   4a834:	str	r7, [r4, #16]
   4a838:	str	r7, [r4, #20]
   4a83c:	str	r7, [r4, #36]	; 0x24
   4a840:	str	r7, [r4, #40]	; 0x28
   4a844:	bl	1520 <fread@plt>
   4a848:	mov	r5, r0
   4a84c:	ldr	r0, [r4, #4]
   4a850:	mov	r3, r6
   4a854:	mov	r2, #8
   4a858:	mov	r1, #1
   4a85c:	strb	r7, [r0, #116]	; 0x74
   4a860:	ldr	r0, [r4, #8]
   4a864:	bl	1520 <fread@plt>
   4a868:	add	r5, r5, r0
   4a86c:	mov	r3, r6
   4a870:	mov	r2, #1
   4a874:	mov	r1, #2
   4a878:	mov	r0, sl
   4a87c:	bl	1520 <fread@plt>
   4a880:	mov	fp, r0
   4a884:	mov	r3, r6
   4a888:	mov	r2, #2
   4a88c:	mov	r1, #1
   4a890:	add	r0, sp, #4
   4a894:	bl	1520 <fread@plt>
   4a898:	add	r5, r0, r5
   4a89c:	add	r5, r5, fp, lsl #1
   4a8a0:	cmp	r5, #128	; 0x80
   4a8a4:	beq	4a8f8 <Mat_Open+0x168>
   4a8a8:	ldr	r3, [r4, #16]
   4a8ac:	cmp	r3, #0
   4a8b0:	beq	4a994 <Mat_Open+0x204>
   4a8b4:	ldr	r0, [pc, #584]	; 4ab04 <Mat_Open+0x374>
   4a8b8:	mov	r1, r9
   4a8bc:	add	r0, pc, r0
   4a8c0:	bl	1cbc <strdup_printf>
   4a8c4:	ldr	r3, [r4, #16]
   4a8c8:	str	r0, [r4, #12]
   4a8cc:	str	r8, [r4, #24]
   4a8d0:	cmp	r3, #512	; 0x200
   4a8d4:	beq	4aab4 <Mat_Open+0x324>
   4a8d8:	mov	r0, r4
   4a8dc:	add	sp, sp, #12
   4a8e0:	ldrd	r4, [sp]
   4a8e4:	ldrd	r6, [sp, #8]
   4a8e8:	ldrd	r8, [sp, #16]
   4a8ec:	ldrd	sl, [sp, #24]
   4a8f0:	add	sp, sp, #32
   4a8f4:	pop	{pc}		; (ldr pc, [sp], #4)
   4a8f8:	ldrsh	r3, [sp, #4]
   4a8fc:	movw	r2, #19785	; 0x4d49
   4a900:	mvn	r1, #0
   4a904:	str	r1, [r4, #20]
   4a908:	cmp	r3, r2
   4a90c:	streq	r7, [r4, #20]
   4a910:	beq	4a920 <Mat_Open+0x190>
   4a914:	movw	r2, #18765	; 0x494d
   4a918:	cmp	r3, r2
   4a91c:	beq	4aaec <Mat_Open+0x35c>
   4a920:	ldrsh	r3, [sp, #6]
   4a924:	sub	r7, r3, #256	; 0x100
   4a928:	str	r3, [r4, #16]
   4a92c:	bic	r7, r7, #256	; 0x100
   4a930:	uxth	r7, r7
   4a934:	cmp	r7, #0
   4a938:	bne	4a994 <Mat_Open+0x204>
   4a93c:	ldr	r3, [r4, #20]
   4a940:	cmn	r3, #1
   4a944:	beq	4a994 <Mat_Open+0x204>
   4a948:	ldr	r0, [r4]
   4a94c:	bl	14b4 <ftell@plt>
   4a950:	cmn	r0, #1
   4a954:	str	r0, [r4, #28]
   4a958:	strne	r7, [r4, #32]
   4a95c:	bne	4a8a8 <Mat_Open+0x118>
   4a960:	ldr	r0, [r4, #4]
   4a964:	bl	1478 <free@plt>
   4a968:	ldr	r0, [r4, #8]
   4a96c:	bl	1478 <free@plt>
   4a970:	mov	r0, r4
   4a974:	mov	r4, r7
   4a978:	bl	1478 <free@plt>
   4a97c:	mov	r0, r6
   4a980:	bl	1634 <fclose@plt>
   4a984:	ldr	r0, [pc, #380]	; 4ab08 <Mat_Open+0x378>
   4a988:	add	r0, pc, r0
   4a98c:	bl	161c <Mat_Critical@plt>
   4a990:	b	4a8d8 <Mat_Open+0x148>
   4a994:	ldr	r0, [r4, #4]
   4a998:	mov	r7, #0
   4a99c:	bl	1478 <free@plt>
   4a9a0:	ldr	r0, [r4, #8]
   4a9a4:	bl	1478 <free@plt>
   4a9a8:	mov	r3, #16
   4a9ac:	mov	r0, r4
   4a9b0:	strd	r6, [r4]
   4a9b4:	str	r7, [r4, #8]
   4a9b8:	str	r3, [r4, #16]
   4a9bc:	str	r7, [r4, #20]
   4a9c0:	str	r8, [r4, #24]
   4a9c4:	str	r7, [r4, #28]
   4a9c8:	str	r7, [r4, #32]
   4a9cc:	bl	15ec <Mat_Rewind@plt>
   4a9d0:	mov	r0, r4
   4a9d4:	bl	49278 <Mat_VarReadNextInfo4>
   4a9d8:	subs	r5, r5, r7
   4a9dc:	movne	r5, #1
   4a9e0:	cmp	r0, r7
   4a9e4:	movne	r5, r7
   4a9e8:	cmp	r5, r7
   4a9ec:	bne	4aa94 <Mat_Open+0x304>
   4a9f0:	bl	158c <Mat_VarFree@plt>
   4a9f4:	mov	r0, r4
   4a9f8:	bl	15ec <Mat_Rewind@plt>
   4a9fc:	b	4a8b4 <Mat_Open+0x124>
   4aa00:	ldr	r1, [pc, #260]	; 4ab0c <Mat_Open+0x37c>
   4aa04:	add	r1, pc, r1
   4aa08:	bl	1454 <fopen@plt>
   4aa0c:	subs	r6, r0, #0
   4aa10:	bne	4a7cc <Mat_Open+0x3c>
   4aa14:	bic	r2, r8, #1
   4aa18:	mov	r1, r6
   4aa1c:	mov	r0, r9
   4aa20:	bl	164c <Mat_CreateVer@plt>
   4aa24:	mov	r4, r0
   4aa28:	b	4a8d8 <Mat_Open+0x148>
   4aa2c:	mov	r0, r6
   4aa30:	bl	1634 <fclose@plt>
   4aa34:	ldr	r0, [pc, #212]	; 4ab10 <Mat_Open+0x380>
   4aa38:	add	r0, pc, r0
   4aa3c:	bl	161c <Mat_Critical@plt>
   4aa40:	b	4a8d8 <Mat_Open+0x148>
   4aa44:	mov	r0, r4
   4aa48:	mov	r4, r5
   4aa4c:	bl	1478 <free@plt>
   4aa50:	mov	r0, r6
   4aa54:	bl	1634 <fclose@plt>
   4aa58:	ldr	r0, [pc, #180]	; 4ab14 <Mat_Open+0x384>
   4aa5c:	add	r0, pc, r0
   4aa60:	bl	161c <Mat_Critical@plt>
   4aa64:	b	4a8d8 <Mat_Open+0x148>
   4aa68:	mov	r0, r5
   4aa6c:	bl	1478 <free@plt>
   4aa70:	mov	r0, r4
   4aa74:	mov	r4, r7
   4aa78:	bl	1478 <free@plt>
   4aa7c:	mov	r0, r6
   4aa80:	bl	1634 <fclose@plt>
   4aa84:	ldr	r0, [pc, #140]	; 4ab18 <Mat_Open+0x388>
   4aa88:	add	r0, pc, r0
   4aa8c:	bl	161c <Mat_Critical@plt>
   4aa90:	b	4a8d8 <Mat_Open+0x148>
   4aa94:	mov	r0, r4
   4aa98:	mov	r4, r7
   4aa9c:	bl	1610 <Mat_Close@plt>
   4aaa0:	ldr	r0, [pc, #116]	; 4ab1c <Mat_Open+0x38c>
   4aaa4:	mov	r1, r9
   4aaa8:	add	r0, pc, r0
   4aaac:	bl	161c <Mat_Critical@plt>
   4aab0:	b	4a8d8 <Mat_Open+0x148>
   4aab4:	mov	r5, #0
   4aab8:	ldr	r0, [r4]
   4aabc:	bl	1634 <fclose@plt>
   4aac0:	mov	r0, r4
   4aac4:	str	r5, [r4]
   4aac8:	mov	r4, r5
   4aacc:	bl	1610 <Mat_Close@plt>
   4aad0:	ldr	r0, [pc, #72]	; 4ab20 <Mat_Open+0x390>
   4aad4:	mov	r1, r9
   4aad8:	add	r0, pc, r0
   4aadc:	bl	161c <Mat_Critical@plt>
   4aae0:	b	4a8d8 <Mat_Open+0x148>
   4aae4:	mov	r4, r6
   4aae8:	b	4a8d8 <Mat_Open+0x148>
   4aaec:	mov	r3, #1
   4aaf0:	mov	r0, sl
   4aaf4:	str	r3, [r4, #20]
   4aaf8:	bl	192c <Mat_int16Swap>
   4aafc:	b	4a920 <Mat_Open+0x190>
   4ab00:	.word	0x00004638
   4ab04:	.word	0x00004774
   4ab08:	.word	0x00003e70
   4ab0c:	.word	0x00004490
   4ab10:	.word	0x00004234
   4ab14:	.word	0x0000443c
   4ab18:	.word	0x00004444
   4ab1c:	.word	0x0000445c
   4ab20:	.word	0x00004458

0004ab24 <Mat_VarCreate>:
   4ab24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4ab28:	mov	ip, #1
   4ab2c:	strd	r6, [sp, #8]
   4ab30:	strd	r8, [sp, #16]
   4ab34:	strd	sl, [sp, #24]
   4ab38:	str	lr, [sp, #32]
   4ab3c:	sub	sp, sp, #20
   4ab40:	ldr	r9, [sp, #56]	; 0x38
   4ab44:	str	ip, [sp, #12]
   4ab48:	ldr	r8, [sp, #60]	; 0x3c
   4ab4c:	ldr	r7, [sp, #64]	; 0x40
   4ab50:	cmp	r9, #0
   4ab54:	beq	4ad34 <Mat_VarCreate+0x210>
   4ab58:	mov	sl, r3
   4ab5c:	mov	r5, r2
   4ab60:	mov	r6, r1
   4ab64:	mov	fp, r0
   4ab68:	bl	1508 <Mat_VarCalloc@plt>
   4ab6c:	subs	r4, r0, #0
   4ab70:	beq	4ad34 <Mat_VarCreate+0x210>
   4ab74:	and	r2, r7, #2048	; 0x800
   4ab78:	mov	r3, #0
   4ab7c:	and	r1, r7, #1024	; 0x400
   4ab80:	cmp	fp, r3
   4ab84:	str	r2, [r4, #20]
   4ab88:	and	r2, r7, #512	; 0x200
   4ab8c:	str	r1, [r4, #24]
   4ab90:	str	r2, [r4, #28]
   4ab94:	str	r3, [r4, #48]	; 0x30
   4ab98:	beq	4abb0 <Mat_VarCreate+0x8c>
   4ab9c:	ldr	r0, [pc, #1236]	; 4b078 <Mat_VarCreate+0x554>
   4aba0:	mov	r1, fp
   4aba4:	add	r0, pc, r0
   4aba8:	bl	1cbc <strdup_printf>
   4abac:	str	r0, [r4, #36]	; 0x24
   4abb0:	lsl	r0, sl, #2
   4abb4:	str	sl, [r4, #4]
   4abb8:	bl	1544 <malloc@plt>
   4abbc:	cmp	sl, #0
   4abc0:	str	r0, [r4, #32]
   4abc4:	ble	4abf8 <Mat_VarCreate+0xd4>
   4abc8:	ldr	r2, [sp, #12]
   4abcc:	sub	lr, r9, #4
   4abd0:	sub	r0, r0, #4
   4abd4:	mov	r3, #0
   4abd8:	ldr	ip, [lr, #4]!
   4abdc:	add	r3, r3, #1
   4abe0:	str	ip, [r0, #4]!
   4abe4:	mul	r2, ip, r2
   4abe8:	ldr	r1, [r4, #4]
   4abec:	cmp	r1, r3
   4abf0:	bgt	4abd8 <Mat_VarCreate+0xb4>
   4abf4:	str	r2, [sp, #12]
   4abf8:	sub	r3, r5, #1
   4abfc:	str	r5, [r4, #8]
   4ac00:	str	r6, [r4, #16]
   4ac04:	cmp	r3, #21
   4ac08:	addls	pc, pc, r3, lsl #2
   4ac0c:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac10:	b	4adc4 <Mat_VarCreate+0x2a0>
   4ac14:	b	4adc4 <Mat_VarCreate+0x2a0>
   4ac18:	b	4ad44 <Mat_VarCreate+0x220>
   4ac1c:	b	4ad44 <Mat_VarCreate+0x220>
   4ac20:	b	4ac70 <Mat_VarCreate+0x14c>
   4ac24:	b	4ac70 <Mat_VarCreate+0x14c>
   4ac28:	b	4ac70 <Mat_VarCreate+0x14c>
   4ac2c:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac30:	b	4ad3c <Mat_VarCreate+0x218>
   4ac34:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac38:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac3c:	b	4ad3c <Mat_VarCreate+0x218>
   4ac40:	b	4ad3c <Mat_VarCreate+0x218>
   4ac44:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac48:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac4c:	b	4adc4 <Mat_VarCreate+0x2a0>
   4ac50:	b	4ad44 <Mat_VarCreate+0x220>
   4ac54:	b	4ac70 <Mat_VarCreate+0x14c>
   4ac58:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac5c:	b	4adcc <Mat_VarCreate+0x2a8>
   4ac60:	b	4ac70 <Mat_VarCreate+0x14c>
   4ac64:	b	4ac68 <Mat_VarCreate+0x144>
   4ac68:	cmp	r8, #0
   4ac6c:	bne	4aee4 <Mat_VarCreate+0x3c0>
   4ac70:	mov	r5, #4
   4ac74:	cmp	r6, #5
   4ac78:	bne	4acc4 <Mat_VarCreate+0x1a0>
   4ac7c:	mov	r3, #28
   4ac80:	cmp	r8, #0
   4ac84:	str	r3, [r4]
   4ac88:	str	r3, [r4, #12]
   4ac8c:	beq	4acf8 <Mat_VarCreate+0x1d4>
   4ac90:	tst	r7, #1
   4ac94:	beq	4ad04 <Mat_VarCreate+0x1e0>
   4ac98:	mov	r3, #1
   4ac9c:	str	r8, [r4, #40]	; 0x28
   4aca0:	str	r3, [r4, #44]	; 0x2c
   4aca4:	mov	r0, r4
   4aca8:	add	sp, sp, #20
   4acac:	ldrd	r4, [sp]
   4acb0:	ldrd	r6, [sp, #8]
   4acb4:	ldrd	r8, [sp, #16]
   4acb8:	ldrd	sl, [sp, #24]
   4acbc:	add	sp, sp, #32
   4acc0:	pop	{pc}		; (ldr pc, [sp], #4)
   4acc4:	mov	r2, r5
   4acc8:	mov	r0, r4
   4accc:	str	r5, [r4, #12]
   4acd0:	ldr	r1, [sp, #12]
   4acd4:	bl	499ec <SafeMul>
   4acd8:	cmp	r8, #0
   4acdc:	bne	4ac90 <Mat_VarCreate+0x16c>
   4ace0:	ldr	r3, [r4, #16]
   4ace4:	cmp	r3, #1
   4ace8:	bne	4acf8 <Mat_VarCreate+0x1d4>
   4acec:	ldr	r0, [sp, #12]
   4acf0:	cmp	r0, #0
   4acf4:	bne	4afbc <Mat_VarCreate+0x498>
   4acf8:	mov	r3, #0
   4acfc:	str	r3, [r4, #40]	; 0x28
   4ad00:	b	4aca4 <Mat_VarCreate+0x180>
   4ad04:	ldr	r3, [r4, #16]
   4ad08:	cmp	r3, #5
   4ad0c:	beq	4ade8 <Mat_VarCreate+0x2c4>
   4ad10:	ldr	r3, [r4, #20]
   4ad14:	cmp	r3, #0
   4ad18:	bne	4ad4c <Mat_VarCreate+0x228>
   4ad1c:	ldr	r5, [r4]
   4ad20:	cmp	r5, #0
   4ad24:	bne	4afcc <Mat_VarCreate+0x4a8>
   4ad28:	mov	r3, #0
   4ad2c:	str	r3, [r4, #44]	; 0x2c
   4ad30:	b	4aca4 <Mat_VarCreate+0x180>
   4ad34:	mov	r4, #0
   4ad38:	b	4aca4 <Mat_VarCreate+0x180>
   4ad3c:	mov	r5, #8
   4ad40:	b	4ac74 <Mat_VarCreate+0x150>
   4ad44:	mov	r5, #2
   4ad48:	b	4ac74 <Mat_VarCreate+0x150>
   4ad4c:	mov	r0, #8
   4ad50:	bl	1544 <malloc@plt>
   4ad54:	cmp	r0, #0
   4ad58:	mov	r5, r0
   4ad5c:	str	r0, [r4, #40]	; 0x28
   4ad60:	beq	4ad28 <Mat_VarCreate+0x204>
   4ad64:	ldr	r6, [r4]
   4ad68:	cmp	r6, #0
   4ad6c:	beq	4ad28 <Mat_VarCreate+0x204>
   4ad70:	mov	r0, r6
   4ad74:	bl	1544 <malloc@plt>
   4ad78:	mov	r9, r0
   4ad7c:	mov	r0, r6
   4ad80:	str	r9, [r5]
   4ad84:	bl	1544 <malloc@plt>
   4ad88:	cmp	r9, #0
   4ad8c:	mov	r7, r0
   4ad90:	str	r0, [r5, #4]
   4ad94:	beq	4ada8 <Mat_VarCreate+0x284>
   4ad98:	mov	r2, r6
   4ad9c:	mov	r0, r9
   4ada0:	ldr	r1, [r8]
   4ada4:	bl	1490 <memcpy@plt>
   4ada8:	cmp	r7, #0
   4adac:	beq	4ad28 <Mat_VarCreate+0x204>
   4adb0:	mov	r0, r7
   4adb4:	ldr	r2, [r4]
   4adb8:	ldr	r1, [r8, #4]
   4adbc:	bl	1490 <memcpy@plt>
   4adc0:	b	4ad28 <Mat_VarCreate+0x204>
   4adc4:	mov	r5, #1
   4adc8:	b	4ac74 <Mat_VarCreate+0x150>
   4adcc:	mov	r0, r4
   4add0:	mov	r4, #0
   4add4:	bl	158c <Mat_VarFree@plt>
   4add8:	ldr	r0, [pc, #668]	; 4b07c <Mat_VarCreate+0x558>
   4addc:	add	r0, pc, r0
   4ade0:	bl	161c <Mat_Critical@plt>
   4ade4:	b	4aca4 <Mat_VarCreate+0x180>
   4ade8:	mov	r0, #28
   4adec:	bl	1544 <malloc@plt>
   4adf0:	subs	r6, r0, #0
   4adf4:	beq	4aedc <Mat_VarCreate+0x3b8>
   4adf8:	ldr	r2, [r8]
   4adfc:	ldr	r3, [r8, #8]
   4ae00:	ldr	r7, [r8, #16]
   4ae04:	str	r2, [r6]
   4ae08:	ldr	r9, [r8, #20]
   4ae0c:	lsl	sl, r3, #2
   4ae10:	str	r3, [r6, #8]
   4ae14:	mov	r0, sl
   4ae18:	str	r7, [r6, #16]
   4ae1c:	str	r9, [r6, #20]
   4ae20:	bl	1544 <malloc@plt>
   4ae24:	cmp	r0, #0
   4ae28:	str	r0, [r6, #4]
   4ae2c:	beq	4ae3c <Mat_VarCreate+0x318>
   4ae30:	mov	r2, sl
   4ae34:	ldr	r1, [r8, #4]
   4ae38:	bl	1490 <memcpy@plt>
   4ae3c:	lsl	r7, r7, #2
   4ae40:	mov	r0, r7
   4ae44:	bl	1544 <malloc@plt>
   4ae48:	cmp	r0, #0
   4ae4c:	str	r0, [r6, #12]
   4ae50:	beq	4ae60 <Mat_VarCreate+0x33c>
   4ae54:	mov	r2, r7
   4ae58:	ldr	r1, [r8, #12]
   4ae5c:	bl	1490 <memcpy@plt>
   4ae60:	ldr	r3, [r4, #20]
   4ae64:	cmp	r3, #0
   4ae68:	beq	4aff0 <Mat_VarCreate+0x4cc>
   4ae6c:	mov	r0, #8
   4ae70:	bl	1544 <malloc@plt>
   4ae74:	cmp	r0, #0
   4ae78:	mov	r7, r0
   4ae7c:	str	r0, [r6, #24]
   4ae80:	beq	4aedc <Mat_VarCreate+0x3b8>
   4ae84:	mul	r5, r5, r9
   4ae88:	ldr	sl, [r8, #24]
   4ae8c:	mov	r0, r5
   4ae90:	bl	1544 <malloc@plt>
   4ae94:	mov	r9, r0
   4ae98:	mov	r0, r5
   4ae9c:	str	r9, [r7]
   4aea0:	bl	1544 <malloc@plt>
   4aea4:	cmp	r9, #0
   4aea8:	mov	r8, r0
   4aeac:	str	r0, [r7, #4]
   4aeb0:	beq	4aec4 <Mat_VarCreate+0x3a0>
   4aeb4:	mov	r0, r9
   4aeb8:	mov	r2, r5
   4aebc:	ldr	r1, [sl]
   4aec0:	bl	1490 <memcpy@plt>
   4aec4:	cmp	r8, #0
   4aec8:	beq	4aedc <Mat_VarCreate+0x3b8>
   4aecc:	mov	r2, r5
   4aed0:	mov	r0, r8
   4aed4:	ldr	r1, [sl, #4]
   4aed8:	bl	1490 <memcpy@plt>
   4aedc:	str	r6, [r4, #40]	; 0x28
   4aee0:	b	4aca4 <Mat_VarCreate+0x180>
   4aee4:	ldr	r3, [sp, #12]
   4aee8:	ldr	sl, [r8]
   4aeec:	str	r3, [sp]
   4aef0:	ldr	r3, [r4, #52]	; 0x34
   4aef4:	cmp	sl, #0
   4aef8:	str	r3, [sp, #4]
   4aefc:	beq	4b038 <Mat_VarCreate+0x514>
   4af00:	mov	r3, r8
   4af04:	mov	r5, #0
   4af08:	ldr	r2, [r3, #4]!
   4af0c:	add	r5, r5, #1
   4af10:	cmp	r2, #0
   4af14:	bne	4af08 <Mat_VarCreate+0x3e4>
   4af18:	ldr	r3, [sp]
   4af1c:	cmp	r3, #0
   4af20:	beq	4b018 <Mat_VarCreate+0x4f4>
   4af24:	ldr	r2, [sp]
   4af28:	udiv	r3, r5, r2
   4af2c:	cmp	r2, r5
   4af30:	ldr	r2, [sp, #4]
   4af34:	str	r3, [r2, #4]
   4af38:	bhi	4ac70 <Mat_VarCreate+0x14c>
   4af3c:	mov	r5, r3
   4af40:	mov	r1, #4
   4af44:	mov	r0, r5
   4af48:	bl	140c <calloc@plt>
   4af4c:	ldr	r3, [sp, #4]
   4af50:	mov	r6, r8
   4af54:	sub	r9, r0, #4
   4af58:	mov	fp, #0
   4af5c:	str	r0, [r3, #8]
   4af60:	b	4af68 <Mat_VarCreate+0x444>
   4af64:	ldr	sl, [r6, #4]!
   4af68:	add	fp, fp, #1
   4af6c:	ldr	r0, [sl, #36]	; 0x24
   4af70:	bl	14cc <strdup@plt>
   4af74:	cmp	fp, r5
   4af78:	str	r0, [r9, #4]!
   4af7c:	bcc	4af64 <Mat_VarCreate+0x440>
   4af80:	mov	r2, r5
   4af84:	add	r0, sp, #12
   4af88:	ldr	r1, [sp]
   4af8c:	bl	499ec <SafeMul>
   4af90:	ldr	r3, [r4, #16]
   4af94:	cmp	r3, #5
   4af98:	beq	4b024 <Mat_VarCreate+0x500>
   4af9c:	mov	r3, #4
   4afa0:	mov	r0, r4
   4afa4:	ldr	r1, [sp, #12]
   4afa8:	mov	r2, r3
   4afac:	mov	r5, r3
   4afb0:	str	r3, [r4, #12]
   4afb4:	bl	499ec <SafeMul>
   4afb8:	b	4ac90 <Mat_VarCreate+0x16c>
   4afbc:	mov	r1, #4
   4afc0:	bl	140c <calloc@plt>
   4afc4:	str	r0, [r4, #40]	; 0x28
   4afc8:	b	4aca4 <Mat_VarCreate+0x180>
   4afcc:	mov	r0, r5
   4afd0:	bl	1544 <malloc@plt>
   4afd4:	cmp	r0, #0
   4afd8:	str	r0, [r4, #40]	; 0x28
   4afdc:	beq	4ad28 <Mat_VarCreate+0x204>
   4afe0:	mov	r2, r5
   4afe4:	mov	r1, r8
   4afe8:	bl	1490 <memcpy@plt>
   4afec:	b	4ad28 <Mat_VarCreate+0x204>
   4aff0:	mul	r5, r5, r9
   4aff4:	mov	r0, r5
   4aff8:	bl	1544 <malloc@plt>
   4affc:	cmp	r0, #0
   4b000:	str	r0, [r6, #24]
   4b004:	beq	4aedc <Mat_VarCreate+0x3b8>
   4b008:	mov	r2, r5
   4b00c:	ldr	r1, [r8, #24]
   4b010:	bl	1490 <memcpy@plt>
   4b014:	b	4aedc <Mat_VarCreate+0x3b8>
   4b018:	ldr	r3, [sp, #4]
   4b01c:	str	r5, [r3, #4]
   4b020:	b	4af40 <Mat_VarCreate+0x41c>
   4b024:	mov	r3, #28
   4b028:	mov	r5, #4
   4b02c:	str	r3, [r4]
   4b030:	str	r3, [r4, #12]
   4b034:	b	4ac90 <Mat_VarCreate+0x16c>
   4b038:	ldr	r3, [sp]
   4b03c:	cmp	r3, #0
   4b040:	bne	4b070 <Mat_VarCreate+0x54c>
   4b044:	ldrd	r2, [sp]
   4b048:	cmp	r6, #5
   4b04c:	str	r2, [r3, #4]
   4b050:	beq	4b024 <Mat_VarCreate+0x500>
   4b054:	mov	r2, #4
   4b058:	mov	r0, r4
   4b05c:	ldr	r1, [sp]
   4b060:	mov	r5, r2
   4b064:	str	r2, [r4, #12]
   4b068:	bl	499ec <SafeMul>
   4b06c:	b	4ac90 <Mat_VarCreate+0x16c>
   4b070:	mov	r5, sl
   4b074:	b	4af24 <Mat_VarCreate+0x400>
   4b078:	.word	0x0000448c
   4b07c:	.word	0x00004198

0004b080 <Mat_CalcSingleSubscript>:
   4b080:	strd	r4, [sp, #-16]!
   4b084:	subs	r5, r0, #0
   4b088:	str	r6, [sp, #8]
   4b08c:	str	lr, [sp, #12]
   4b090:	ble	4b154 <Mat_CalcSingleSubscript+0xd4>
   4b094:	ldr	r3, [r1]
   4b098:	ldr	ip, [r2]
   4b09c:	cmp	ip, r3
   4b0a0:	bgt	4b120 <Mat_CalcSingleSubscript+0xa0>
   4b0a4:	cmp	ip, #0
   4b0a8:	movgt	r4, #0
   4b0ac:	subgt	ip, ip, #1
   4b0b0:	movgt	r0, r4
   4b0b4:	movgt	r3, r1
   4b0b8:	ble	4b140 <Mat_CalcSingleSubscript+0xc0>
   4b0bc:	add	r4, r4, #1
   4b0c0:	add	r0, r0, ip
   4b0c4:	cmp	r5, r4
   4b0c8:	beq	4b110 <Mat_CalcSingleSubscript+0x90>
   4b0cc:	ldr	ip, [r2, #4]!
   4b0d0:	add	r6, r3, #4
   4b0d4:	ldr	lr, [r3, #4]
   4b0d8:	cmp	lr, ip
   4b0dc:	blt	4b120 <Mat_CalcSingleSubscript+0xa0>
   4b0e0:	cmp	ip, #0
   4b0e4:	ble	4b140 <Mat_CalcSingleSubscript+0xc0>
   4b0e8:	sub	ip, ip, #1
   4b0ec:	cmp	r3, r1
   4b0f0:	ldr	lr, [r3], #-4
   4b0f4:	mul	ip, lr, ip
   4b0f8:	bne	4b0ec <Mat_CalcSingleSubscript+0x6c>
   4b0fc:	add	r4, r4, #1
   4b100:	mov	r3, r6
   4b104:	cmp	r5, r4
   4b108:	add	r0, r0, ip
   4b10c:	bne	4b0cc <Mat_CalcSingleSubscript+0x4c>
   4b110:	ldrd	r4, [sp]
   4b114:	ldr	r6, [sp, #8]
   4b118:	add	sp, sp, #12
   4b11c:	pop	{pc}		; (ldr pc, [sp], #4)
   4b120:	ldr	r0, [pc, #52]	; 4b15c <Mat_CalcSingleSubscript+0xdc>
   4b124:	add	r0, pc, r0
   4b128:	bl	161c <Mat_Critical@plt>
   4b12c:	ldrd	r4, [sp]
   4b130:	mvn	r0, #0
   4b134:	ldr	r6, [sp, #8]
   4b138:	add	sp, sp, #12
   4b13c:	pop	{pc}		; (ldr pc, [sp], #4)
   4b140:	ldrd	r4, [sp]
   4b144:	mvn	r0, #0
   4b148:	ldr	r6, [sp, #8]
   4b14c:	add	sp, sp, #12
   4b150:	pop	{pc}		; (ldr pc, [sp], #4)
   4b154:	mov	r0, #0
   4b158:	b	4b110 <Mat_CalcSingleSubscript+0x90>
   4b15c:	.word	0x00003e68

0004b160 <Mat_CalcSingleSubscript2>:
   4b160:	cmp	r0, #0
   4b164:	ble	4b220 <Mat_CalcSingleSubscript2+0xc0>
   4b168:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4b16c:	ldr	ip, [r1]
   4b170:	str	lr, [sp, #20]
   4b174:	ldr	lr, [r2]
   4b178:	strd	r6, [sp, #8]
   4b17c:	str	r8, [sp, #16]
   4b180:	cmp	lr, ip
   4b184:	bhi	4b1ec <Mat_CalcSingleSubscript2+0x8c>
   4b188:	cmp	lr, #0
   4b18c:	beq	4b218 <Mat_CalcSingleSubscript2+0xb8>
   4b190:	ldr	r6, [r3]
   4b194:	sub	lr, lr, #1
   4b198:	mov	ip, r1
   4b19c:	mov	r5, #0
   4b1a0:	add	r6, r6, lr
   4b1a4:	add	r5, r5, #1
   4b1a8:	cmp	r0, r5
   4b1ac:	str	r6, [r3]
   4b1b0:	beq	4b210 <Mat_CalcSingleSubscript2+0xb0>
   4b1b4:	ldr	lr, [r2, #4]!
   4b1b8:	add	r7, ip, #4
   4b1bc:	ldr	r4, [ip, #4]
   4b1c0:	cmp	r4, lr
   4b1c4:	bcc	4b1ec <Mat_CalcSingleSubscript2+0x8c>
   4b1c8:	cmp	lr, #0
   4b1cc:	beq	4b218 <Mat_CalcSingleSubscript2+0xb8>
   4b1d0:	sub	lr, lr, #1
   4b1d4:	cmp	ip, r1
   4b1d8:	ldr	r4, [ip], #-4
   4b1dc:	mul	lr, r4, lr
   4b1e0:	bne	4b1d4 <Mat_CalcSingleSubscript2+0x74>
   4b1e4:	mov	ip, r7
   4b1e8:	b	4b1a0 <Mat_CalcSingleSubscript2+0x40>
   4b1ec:	ldr	r0, [pc, #52]	; 4b228 <Mat_CalcSingleSubscript2+0xc8>
   4b1f0:	add	r0, pc, r0
   4b1f4:	bl	161c <Mat_Critical@plt>
   4b1f8:	mov	r0, #1
   4b1fc:	ldrd	r4, [sp]
   4b200:	ldrd	r6, [sp, #8]
   4b204:	ldr	r8, [sp, #16]
   4b208:	add	sp, sp, #20
   4b20c:	pop	{pc}		; (ldr pc, [sp], #4)
   4b210:	mov	r0, #0
   4b214:	b	4b1fc <Mat_CalcSingleSubscript2+0x9c>
   4b218:	mov	r0, #1
   4b21c:	b	4b1fc <Mat_CalcSingleSubscript2+0x9c>
   4b220:	mov	r0, #0
   4b224:	bx	lr
   4b228:	.word	0x00003dcc

0004b22c <Mat_CalcSubscripts>:
   4b22c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4b230:	mov	r4, r0
   4b234:	mov	r5, r1
   4b238:	strd	r6, [sp, #8]
   4b23c:	str	r8, [sp, #16]
   4b240:	lsl	r8, r0, #2
   4b244:	str	lr, [sp, #20]
   4b248:	mov	r0, r8
   4b24c:	vpush	{d8}
   4b250:	vmov	s16, r2
   4b254:	bl	1544 <malloc@plt>
   4b258:	cmp	r4, #0
   4b25c:	mov	r6, r0
   4b260:	beq	4b2e8 <Mat_CalcSubscripts+0xbc>
   4b264:	sub	r7, r8, #4
   4b268:	vcvt.f64.s32	d8, s16
   4b26c:	add	r8, r0, r8
   4b270:	add	r7, r5, r7
   4b274:	cmp	r5, r7
   4b278:	beq	4b2d0 <Mat_CalcSubscripts+0xa4>
   4b27c:	mov	r3, r7
   4b280:	mov	r4, #1
   4b284:	ldr	r2, [r3, #-4]!
   4b288:	cmp	r5, r3
   4b28c:	mul	r4, r2, r4
   4b290:	bne	4b284 <Mat_CalcSubscripts+0x58>
   4b294:	vmov	s15, r4
   4b298:	sub	r7, r7, #4
   4b29c:	vcvt.f64.s32	d0, s15
   4b2a0:	vdiv.f64	d0, d8, d0
   4b2a4:	bl	152c <floor@plt>
   4b2a8:	vcvt.s32.f64	s15, d0
   4b2ac:	cmp	r5, r7
   4b2b0:	vmov	r3, s15
   4b2b4:	mul	r4, r4, r3
   4b2b8:	add	r3, r3, #1
   4b2bc:	str	r3, [r8, #-4]!
   4b2c0:	vmov	s15, r4
   4b2c4:	vcvt.f64.s32	d7, s15
   4b2c8:	vsub.f64	d8, d8, d7
   4b2cc:	bne	4b27c <Mat_CalcSubscripts+0x50>
   4b2d0:	vmov.f64	d0, d8
   4b2d4:	bl	152c <floor@plt>
   4b2d8:	vcvt.s32.f64	s0, d0
   4b2dc:	vmov	r3, s0
   4b2e0:	add	r3, r3, #1
   4b2e4:	str	r3, [r6]
   4b2e8:	vpop	{d8}
   4b2ec:	mov	r0, r6
   4b2f0:	ldrd	r4, [sp]
   4b2f4:	ldrd	r6, [sp, #8]
   4b2f8:	ldr	r8, [sp, #16]
   4b2fc:	add	sp, sp, #20
   4b300:	pop	{pc}		; (ldr pc, [sp], #4)

0004b304 <Mat_CalcSubscripts2>:
   4b304:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4b308:	mov	r4, r0
   4b30c:	mov	r5, r1
   4b310:	strd	r6, [sp, #8]
   4b314:	str	r8, [sp, #16]
   4b318:	lsl	r8, r0, #2
   4b31c:	str	lr, [sp, #20]
   4b320:	mov	r0, r8
   4b324:	vpush	{d8}
   4b328:	vmov	s16, r2
   4b32c:	bl	1544 <malloc@plt>
   4b330:	cmp	r4, #0
   4b334:	mov	r6, r0
   4b338:	beq	4b3c0 <Mat_CalcSubscripts2+0xbc>
   4b33c:	sub	r7, r8, #4
   4b340:	vcvt.f64.u32	d8, s16
   4b344:	add	r8, r0, r8
   4b348:	add	r7, r5, r7
   4b34c:	cmp	r5, r7
   4b350:	beq	4b3a8 <Mat_CalcSubscripts2+0xa4>
   4b354:	mov	r3, r7
   4b358:	mov	r4, #1
   4b35c:	ldr	r2, [r3, #-4]!
   4b360:	cmp	r5, r3
   4b364:	mul	r4, r2, r4
   4b368:	bne	4b35c <Mat_CalcSubscripts2+0x58>
   4b36c:	vmov	s15, r4
   4b370:	sub	r7, r7, #4
   4b374:	vcvt.f64.u32	d0, s15
   4b378:	vdiv.f64	d0, d8, d0
   4b37c:	bl	152c <floor@plt>
   4b380:	vcvt.u32.f64	s15, d0
   4b384:	cmp	r5, r7
   4b388:	vmov	r3, s15
   4b38c:	mul	r4, r3, r4
   4b390:	add	r3, r3, #1
   4b394:	str	r3, [r8, #-4]!
   4b398:	vmov	s15, r4
   4b39c:	vcvt.f64.u32	d7, s15
   4b3a0:	vsub.f64	d8, d8, d7
   4b3a4:	bne	4b354 <Mat_CalcSubscripts2+0x50>
   4b3a8:	vmov.f64	d0, d8
   4b3ac:	bl	152c <floor@plt>
   4b3b0:	vcvt.u32.f64	s0, d0
   4b3b4:	vmov	r3, s0
   4b3b8:	add	r3, r3, #1
   4b3bc:	str	r3, [r6]
   4b3c0:	vpop	{d8}
   4b3c4:	mov	r0, r6
   4b3c8:	ldrd	r4, [sp]
   4b3cc:	ldrd	r6, [sp, #8]
   4b3d0:	ldr	r8, [sp, #16]
   4b3d4:	add	sp, sp, #20
   4b3d8:	pop	{pc}		; (ldr pc, [sp], #4)

0004b3dc <Mat_VarGetSize>:
   4b3dc:	ldr	r3, [r0, #16]
   4b3e0:	strd	r4, [sp, #-16]!
   4b3e4:	mov	r5, #0
   4b3e8:	str	r6, [sp, #8]
   4b3ec:	mov	r6, r0
   4b3f0:	str	lr, [sp, #12]
   4b3f4:	sub	sp, sp, #8
   4b3f8:	cmp	r3, #2
   4b3fc:	str	r5, [sp]
   4b400:	beq	4b4a0 <Mat_VarGetSize+0xc4>
   4b404:	cmp	r3, #1
   4b408:	beq	4b438 <Mat_VarGetSize+0x5c>
   4b40c:	cmp	r3, #5
   4b410:	beq	4b570 <Mat_VarGetSize+0x194>
   4b414:	ldr	r2, [r0, #4]
   4b418:	cmp	r2, #0
   4b41c:	movle	r0, r5
   4b420:	bgt	4b524 <Mat_VarGetSize+0x148>
   4b424:	add	sp, sp, #8
   4b428:	ldrd	r4, [sp]
   4b42c:	ldr	r6, [sp, #8]
   4b430:	add	sp, sp, #12
   4b434:	pop	{pc}		; (ldr pc, [sp], #4)
   4b438:	ldr	r4, [r0, #40]	; 0x28
   4b43c:	cmp	r4, #0
   4b440:	beq	4b550 <Mat_VarGetSize+0x174>
   4b444:	ldr	r2, [r0]
   4b448:	ldr	r3, [r0, #12]
   4b44c:	udiv	r6, r2, r3
   4b450:	cmp	r2, r3
   4b454:	rsb	r0, r6, r6, lsl #4
   4b458:	lsl	r0, r0, #2
   4b45c:	str	r0, [sp]
   4b460:	bcc	4b424 <Mat_VarGetSize+0x48>
   4b464:	sub	r4, r4, #4
   4b468:	ldr	r0, [r4, #4]!
   4b46c:	cmp	r0, #0
   4b470:	beq	4b48c <Mat_VarGetSize+0xb0>
   4b474:	ldr	r3, [r0, #16]
   4b478:	cmp	r3, #0
   4b47c:	bne	4b5e8 <Mat_VarGetSize+0x20c>
   4b480:	ldr	r3, [sp]
   4b484:	sub	r3, r3, #56	; 0x38
   4b488:	str	r3, [sp]
   4b48c:	add	r5, r5, #1
   4b490:	cmp	r6, r5
   4b494:	bhi	4b468 <Mat_VarGetSize+0x8c>
   4b498:	ldr	r0, [sp]
   4b49c:	b	4b424 <Mat_VarGetSize+0x48>
   4b4a0:	ldr	r4, [r0, #40]	; 0x28
   4b4a4:	ldr	r3, [r0, #52]	; 0x34
   4b4a8:	cmp	r4, r5
   4b4ac:	ldr	r3, [r3, #4]
   4b4b0:	beq	4b51c <Mat_VarGetSize+0x140>
   4b4b4:	add	r1, sp, #4
   4b4b8:	str	r3, [sp, #4]
   4b4bc:	bl	4996c <SafeMulDims>
   4b4c0:	mov	r2, #60	; 0x3c
   4b4c4:	mov	r0, sp
   4b4c8:	ldr	r1, [sp, #4]
   4b4cc:	bl	499ec <SafeMul>
   4b4d0:	ldr	r2, [sp, #4]
   4b4d4:	cmp	r2, r5
   4b4d8:	subne	r4, r4, #4
   4b4dc:	beq	4b510 <Mat_VarGetSize+0x134>
   4b4e0:	ldr	r0, [r4, #4]!
   4b4e4:	cmp	r0, #0
   4b4e8:	beq	4b504 <Mat_VarGetSize+0x128>
   4b4ec:	ldr	r3, [r0, #16]
   4b4f0:	cmp	r3, #0
   4b4f4:	bne	4b558 <Mat_VarGetSize+0x17c>
   4b4f8:	ldr	r3, [sp]
   4b4fc:	sub	r3, r3, #56	; 0x38
   4b500:	str	r3, [sp]
   4b504:	add	r5, r5, #1
   4b508:	cmp	r2, r5
   4b50c:	bhi	4b4e0 <Mat_VarGetSize+0x104>
   4b510:	ldr	r3, [r6, #52]	; 0x34
   4b514:	ldr	r4, [sp]
   4b518:	ldr	r3, [r3, #4]
   4b51c:	add	r0, r4, r3, lsl #6
   4b520:	b	4b424 <Mat_VarGetSize+0x48>
   4b524:	mov	r0, r3
   4b528:	bl	167c <Mat_SizeOfClass@plt>
   4b52c:	mov	r1, sp
   4b530:	str	r0, [sp]
   4b534:	mov	r0, r6
   4b538:	bl	4996c <SafeMulDims>
   4b53c:	ldr	r3, [r6, #20]
   4b540:	ldr	r0, [sp]
   4b544:	cmp	r3, #0
   4b548:	lslne	r0, r0, #1
   4b54c:	b	4b424 <Mat_VarGetSize+0x48>
   4b550:	mov	r0, r4
   4b554:	b	4b424 <Mat_VarGetSize+0x48>
   4b558:	bl	4b3dc <Mat_VarGetSize>
   4b55c:	ldr	r3, [sp]
   4b560:	ldr	r2, [sp, #4]
   4b564:	add	r0, r3, r0
   4b568:	str	r0, [sp]
   4b56c:	b	4b504 <Mat_VarGetSize+0x128>
   4b570:	ldr	r4, [r0, #40]	; 0x28
   4b574:	cmp	r4, #0
   4b578:	beq	4b550 <Mat_VarGetSize+0x174>
   4b57c:	ldr	r5, [r4, #20]
   4b580:	ldr	r0, [r0, #8]
   4b584:	bl	1598 <Mat_SizeOf@plt>
   4b588:	ldr	r3, [r6, #20]
   4b58c:	mul	r0, r0, r5
   4b590:	ldr	r2, [r4, #8]
   4b594:	ldr	r1, [r4, #16]
   4b598:	cmp	r3, #0
   4b59c:	str	r0, [sp]
   4b5a0:	ldr	ip, [r4, #20]
   4b5a4:	lslne	r0, r0, #1
   4b5a8:	clz	r3, r2
   4b5ac:	lsr	r3, r3, #5
   4b5b0:	add	r2, r2, r1
   4b5b4:	add	r0, r0, r2, lsl #2
   4b5b8:	cmp	ip, #0
   4b5bc:	moveq	r3, #1
   4b5c0:	cmp	r1, #0
   4b5c4:	moveq	r3, #1
   4b5c8:	cmp	r3, #0
   4b5cc:	beq	4b424 <Mat_VarGetSize+0x48>
   4b5d0:	ldr	r3, [r6, #28]
   4b5d4:	cmp	r3, #0
   4b5d8:	movne	r3, #1
   4b5dc:	moveq	r3, #8
   4b5e0:	add	r0, r0, r3
   4b5e4:	b	4b424 <Mat_VarGetSize+0x48>
   4b5e8:	bl	4b3dc <Mat_VarGetSize>
   4b5ec:	ldr	r3, [sp]
   4b5f0:	add	r0, r3, r0
   4b5f4:	str	r0, [sp]
   4b5f8:	b	4b48c <Mat_VarGetSize+0xb0>

0004b5fc <Mat_VarPrint>:
   4b5fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4b600:	mov	r3, #0
   4b604:	mov	r4, r0
   4b608:	strd	r6, [sp, #8]
   4b60c:	mov	r7, r1
   4b610:	mov	r2, #72	; 0x48
   4b614:	ldr	r1, [pc, #2180]	; 4bea0 <Mat_VarPrint+0x8a4>
   4b618:	strd	r8, [sp, #16]
   4b61c:	strd	sl, [sp, #24]
   4b620:	str	lr, [sp, #32]
   4b624:	sub	sp, sp, #204	; 0xcc
   4b628:	add	r0, sp, #28
   4b62c:	add	r1, pc, r1
   4b630:	str	r3, [sp, #24]
   4b634:	bl	1490 <memcpy@plt>
   4b638:	cmp	r4, #0
   4b63c:	beq	4b760 <Mat_VarPrint+0x164>
   4b640:	ldr	r1, [r4, #36]	; 0x24
   4b644:	cmp	r1, #0
   4b648:	beq	4b658 <Mat_VarPrint+0x5c>
   4b64c:	ldr	r0, [pc, #2128]	; 4bea4 <Mat_VarPrint+0x8a8>
   4b650:	add	r0, pc, r0
   4b654:	bl	1448 <printf@plt>
   4b658:	ldr	r0, [pc, #2120]	; 4bea8 <Mat_VarPrint+0x8ac>
   4b65c:	ldr	r1, [r4, #4]
   4b660:	add	r0, pc, r0
   4b664:	bl	1448 <printf@plt>
   4b668:	ldr	r3, [r4, #4]
   4b66c:	cmp	r3, #0
   4b670:	ble	4b760 <Mat_VarPrint+0x164>
   4b674:	ldr	r3, [r4, #32]
   4b678:	cmp	r3, #0
   4b67c:	beq	4b6e4 <Mat_VarPrint+0xe8>
   4b680:	mov	r5, #1
   4b684:	add	r1, sp, #24
   4b688:	ldr	r6, [pc, #2076]	; 4beac <Mat_VarPrint+0x8b0>
   4b68c:	mov	r0, r4
   4b690:	str	r5, [sp, #24]
   4b694:	bl	4996c <SafeMulDims>
   4b698:	ldr	r0, [pc, #2064]	; 4beb0 <Mat_VarPrint+0x8b4>
   4b69c:	add	r6, pc, r6
   4b6a0:	ldr	r3, [r4, #32]
   4b6a4:	add	r0, pc, r0
   4b6a8:	ldr	r1, [r3]
   4b6ac:	bl	1448 <printf@plt>
   4b6b0:	ldr	r3, [r4, #4]
   4b6b4:	cmp	r3, r5
   4b6b8:	ble	4b6dc <Mat_VarPrint+0xe0>
   4b6bc:	ldr	r3, [r4, #32]
   4b6c0:	mov	r0, r6
   4b6c4:	ldr	r1, [r3, r5, lsl #2]
   4b6c8:	add	r5, r5, #1
   4b6cc:	bl	1448 <printf@plt>
   4b6d0:	ldr	r3, [r4, #4]
   4b6d4:	cmp	r3, r5
   4b6d8:	bgt	4b6bc <Mat_VarPrint+0xc0>
   4b6dc:	mov	r0, #10
   4b6e0:	bl	1604 <putchar@plt>
   4b6e4:	ldr	r3, [r4, #16]
   4b6e8:	add	r2, sp, #200	; 0xc8
   4b6ec:	ldr	r0, [pc, #1984]	; 4beb4 <Mat_VarPrint+0x8b8>
   4b6f0:	add	r3, r2, r3, lsl #2
   4b6f4:	add	r0, pc, r0
   4b6f8:	ldr	r1, [r3, #-172]	; 0xffffff54
   4b6fc:	bl	1448 <printf@plt>
   4b700:	ldr	r3, [r4, #20]
   4b704:	cmp	r3, #0
   4b708:	bne	4b794 <Mat_VarPrint+0x198>
   4b70c:	ldr	r3, [r4, #28]
   4b710:	cmp	r3, #0
   4b714:	bne	4b810 <Mat_VarPrint+0x214>
   4b718:	mov	r0, #10
   4b71c:	bl	1604 <putchar@plt>
   4b720:	ldr	r5, [r4, #8]
   4b724:	cmp	r5, #0
   4b728:	bne	4b7dc <Mat_VarPrint+0x1e0>
   4b72c:	ldr	r3, [r4, #16]
   4b730:	ldr	r5, [r4, #40]	; 0x28
   4b734:	cmp	r3, #2
   4b738:	beq	4b820 <Mat_VarPrint+0x224>
   4b73c:	cmp	r5, #0
   4b740:	beq	4b77c <Mat_VarPrint+0x180>
   4b744:	ldr	r2, [r4, #12]
   4b748:	cmp	r2, #0
   4b74c:	ble	4b77c <Mat_VarPrint+0x180>
   4b750:	cmp	r3, #1
   4b754:	beq	4bbf0 <Mat_VarPrint+0x5f4>
   4b758:	cmp	r7, #0
   4b75c:	bne	4b7a4 <Mat_VarPrint+0x1a8>
   4b760:	add	sp, sp, #204	; 0xcc
   4b764:	ldrd	r4, [sp]
   4b768:	ldrd	r6, [sp, #8]
   4b76c:	ldrd	r8, [sp, #16]
   4b770:	ldrd	sl, [sp, #24]
   4b774:	add	sp, sp, #32
   4b778:	pop	{pc}		; (ldr pc, [sp], #4)
   4b77c:	cmp	r7, #0
   4b780:	beq	4b760 <Mat_VarPrint+0x164>
   4b784:	ldr	r0, [pc, #1836]	; 4beb8 <Mat_VarPrint+0x8bc>
   4b788:	add	r0, pc, r0
   4b78c:	bl	1538 <puts@plt>
   4b790:	b	4b760 <Mat_VarPrint+0x164>
   4b794:	ldr	r0, [pc, #1824]	; 4bebc <Mat_VarPrint+0x8c0>
   4b798:	add	r0, pc, r0
   4b79c:	bl	1448 <printf@plt>
   4b7a0:	b	4b718 <Mat_VarPrint+0x11c>
   4b7a4:	ldr	r0, [pc, #1812]	; 4bec0 <Mat_VarPrint+0x8c4>
   4b7a8:	add	r0, pc, r0
   4b7ac:	bl	1538 <puts@plt>
   4b7b0:	ldr	r3, [r4, #4]
   4b7b4:	cmp	r3, #2
   4b7b8:	bgt	4bbe0 <Mat_VarPrint+0x5e4>
   4b7bc:	cmp	r3, #1
   4b7c0:	beq	4bc68 <Mat_VarPrint+0x66c>
   4b7c4:	cmp	r3, #2
   4b7c8:	beq	4b8f4 <Mat_VarPrint+0x2f8>
   4b7cc:	ldr	r0, [pc, #1776]	; 4bec4 <Mat_VarPrint+0x8c8>
   4b7d0:	add	r0, pc, r0
   4b7d4:	bl	1538 <puts@plt>
   4b7d8:	b	4b760 <Mat_VarPrint+0x164>
   4b7dc:	ldr	r1, [pc, #1764]	; 4bec8 <Mat_VarPrint+0x8cc>
   4b7e0:	mov	r2, #100	; 0x64
   4b7e4:	add	r0, sp, r2
   4b7e8:	add	r1, pc, r1
   4b7ec:	add	r1, r1, #72	; 0x48
   4b7f0:	bl	1490 <memcpy@plt>
   4b7f4:	ldr	r0, [pc, #1744]	; 4becc <Mat_VarPrint+0x8d0>
   4b7f8:	add	r3, sp, #200	; 0xc8
   4b7fc:	add	r5, r3, r5, lsl #2
   4b800:	ldr	r1, [r5, #-100]	; 0xffffff9c
   4b804:	add	r0, pc, r0
   4b808:	bl	1448 <printf@plt>
   4b80c:	b	4b72c <Mat_VarPrint+0x130>
   4b810:	ldr	r0, [pc, #1720]	; 4bed0 <Mat_VarPrint+0x8d4>
   4b814:	add	r0, pc, r0
   4b818:	bl	1448 <printf@plt>
   4b81c:	b	4b718 <Mat_VarPrint+0x11c>
   4b820:	ldr	r2, [r4, #52]	; 0x34
   4b824:	mov	r3, #1
   4b828:	add	r0, sp, #100	; 0x64
   4b82c:	ldr	r1, [sp, #24]
   4b830:	ldr	r8, [r2, #4]
   4b834:	str	r3, [sp, #100]	; 0x64
   4b838:	mov	r2, r8
   4b83c:	bl	499ec <SafeMul>
   4b840:	ldr	r6, [sp, #100]	; 0x64
   4b844:	cmp	r6, #0
   4b848:	beq	4b8ac <Mat_VarPrint+0x2b0>
   4b84c:	ldr	r0, [pc, #1664]	; 4bed4 <Mat_VarPrint+0x8d8>
   4b850:	mov	r1, r6
   4b854:	add	r0, pc, r0
   4b858:	bl	1448 <printf@plt>
   4b85c:	ldr	r3, [sp, #100]	; 0x64
   4b860:	cmp	r3, #0
   4b864:	beq	4b89c <Mat_VarPrint+0x2a0>
   4b868:	ldr	r9, [pc, #1640]	; 4bed8 <Mat_VarPrint+0x8dc>
   4b86c:	sub	r5, r5, #4
   4b870:	mov	r6, #0
   4b874:	add	r9, pc, r9
   4b878:	ldr	r2, [r5, #4]!
   4b87c:	mov	r1, r7
   4b880:	subs	r0, r2, #0
   4b884:	beq	4bc48 <Mat_VarPrint+0x64c>
   4b888:	bl	4b5fc <Mat_VarPrint>
   4b88c:	ldr	r3, [sp, #100]	; 0x64
   4b890:	add	r6, r6, #1
   4b894:	cmp	r3, r6
   4b898:	bhi	4b878 <Mat_VarPrint+0x27c>
   4b89c:	ldr	r0, [pc, #1592]	; 4bedc <Mat_VarPrint+0x8e0>
   4b8a0:	add	r0, pc, r0
   4b8a4:	bl	1538 <puts@plt>
   4b8a8:	b	4b760 <Mat_VarPrint+0x164>
   4b8ac:	ldr	r0, [pc, #1580]	; 4bee0 <Mat_VarPrint+0x8e4>
   4b8b0:	mov	r1, r8
   4b8b4:	add	r0, pc, r0
   4b8b8:	bl	1448 <printf@plt>
   4b8bc:	cmp	r8, #0
   4b8c0:	beq	4b89c <Mat_VarPrint+0x2a0>
   4b8c4:	ldr	r5, [pc, #1560]	; 4bee4 <Mat_VarPrint+0x8e8>
   4b8c8:	add	r5, pc, r5
   4b8cc:	ldr	r3, [r4, #52]	; 0x34
   4b8d0:	mov	r2, #0
   4b8d4:	mov	r0, r5
   4b8d8:	ldr	r3, [r3, #8]
   4b8dc:	ldr	r1, [r3, r6, lsl #2]
   4b8e0:	add	r6, r6, #1
   4b8e4:	bl	1448 <printf@plt>
   4b8e8:	cmp	r8, r6
   4b8ec:	bne	4b8cc <Mat_VarPrint+0x2d0>
   4b8f0:	b	4b89c <Mat_VarPrint+0x2a0>
   4b8f4:	ldr	r3, [r4, #32]
   4b8f8:	cmp	r3, #0
   4b8fc:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4b900:	ldr	r2, [r4, #16]
   4b904:	sub	r2, r2, #4
   4b908:	cmp	r2, #11
   4b90c:	addls	pc, pc, r2, lsl #2
   4b910:	b	4b7cc <Mat_VarPrint+0x1d0>
   4b914:	b	4bb60 <Mat_VarPrint+0x564>
   4b918:	b	4ba44 <Mat_VarPrint+0x448>
   4b91c:	b	4b944 <Mat_VarPrint+0x348>
   4b920:	b	4b944 <Mat_VarPrint+0x348>
   4b924:	b	4b944 <Mat_VarPrint+0x348>
   4b928:	b	4b944 <Mat_VarPrint+0x348>
   4b92c:	b	4b944 <Mat_VarPrint+0x348>
   4b930:	b	4b944 <Mat_VarPrint+0x348>
   4b934:	b	4b944 <Mat_VarPrint+0x348>
   4b938:	b	4b944 <Mat_VarPrint+0x348>
   4b93c:	b	4b944 <Mat_VarPrint+0x348>
   4b940:	b	4b944 <Mat_VarPrint+0x348>
   4b944:	ldr	r0, [r4, #8]
   4b948:	bl	1598 <Mat_SizeOf@plt>
   4b94c:	ldr	r7, [r4, #20]
   4b950:	mov	r5, r0
   4b954:	ldr	r3, [r4, #32]
   4b958:	cmp	r7, #0
   4b95c:	beq	4be08 <Mat_VarPrint+0x80c>
   4b960:	ldr	r1, [r3]
   4b964:	ldr	r2, [r4, #40]	; 0x28
   4b968:	cmp	r1, #0
   4b96c:	ldm	r2, {r9, sl}
   4b970:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4b974:	mov	r6, #0
   4b978:	ldr	r2, [pc, #1384]	; 4bee8 <Mat_VarPrint+0x8ec>
   4b97c:	ldr	r8, [pc, #1384]	; 4beec <Mat_VarPrint+0x8f0>
   4b980:	add	r2, pc, r2
   4b984:	str	r2, [sp, #4]
   4b988:	add	r8, pc, r8
   4b98c:	ldr	r2, [pc, #1372]	; 4bef0 <Mat_VarPrint+0x8f4>
   4b990:	add	r2, pc, r2
   4b994:	str	r2, [sp, #8]
   4b998:	ldr	r2, [r3, #4]
   4b99c:	cmp	r2, #0
   4b9a0:	movne	fp, #0
   4b9a4:	beq	4ba08 <Mat_VarPrint+0x40c>
   4b9a8:	ldr	r3, [r3]
   4b9ac:	ldr	r0, [r4, #8]
   4b9b0:	mla	r3, r3, fp, r6
   4b9b4:	add	fp, fp, #1
   4b9b8:	mul	r7, r5, r3
   4b9bc:	add	r1, r9, r7
   4b9c0:	bl	49768 <Mat_PrintNumber>
   4b9c4:	mov	r0, r8
   4b9c8:	bl	1448 <printf@plt>
   4b9cc:	add	r1, sl, r7
   4b9d0:	ldr	r0, [r4, #8]
   4b9d4:	bl	49768 <Mat_PrintNumber>
   4b9d8:	ldr	r0, [sp, #4]
   4b9dc:	bl	1448 <printf@plt>
   4b9e0:	ldr	r3, [r4, #32]
   4b9e4:	ldr	r1, [r3, #4]
   4b9e8:	cmp	r1, fp
   4b9ec:	bls	4ba08 <Mat_VarPrint+0x40c>
   4b9f0:	cmp	fp, #15
   4b9f4:	bne	4b9a8 <Mat_VarPrint+0x3ac>
   4b9f8:	cmp	r1, #15
   4b9fc:	bls	4ba08 <Mat_VarPrint+0x40c>
   4ba00:	ldr	r0, [sp, #8]
   4ba04:	bl	1448 <printf@plt>
   4ba08:	mov	r0, #10
   4ba0c:	add	r6, r6, #1
   4ba10:	bl	1604 <putchar@plt>
   4ba14:	ldr	r3, [r4, #32]
   4ba18:	ldr	r2, [r3]
   4ba1c:	cmp	r2, r6
   4ba20:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4ba24:	cmp	r6, #15
   4ba28:	bne	4b998 <Mat_VarPrint+0x39c>
   4ba2c:	cmp	r2, #15
   4ba30:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4ba34:	ldr	r0, [pc, #1208]	; 4bef4 <Mat_VarPrint+0x8f8>
   4ba38:	add	r0, pc, r0
   4ba3c:	bl	1538 <puts@plt>
   4ba40:	b	4b7cc <Mat_VarPrint+0x1d0>
   4ba44:	ldr	r0, [r4, #8]
   4ba48:	bl	1598 <Mat_SizeOf@plt>
   4ba4c:	ldr	r8, [r4, #20]
   4ba50:	mov	r7, r0
   4ba54:	ldr	r5, [r4, #40]	; 0x28
   4ba58:	cmp	r8, #0
   4ba5c:	ldr	r2, [r5, #16]
   4ba60:	beq	4bd58 <Mat_VarPrint+0x75c>
   4ba64:	mov	r9, #0
   4ba68:	sub	r2, r2, #1
   4ba6c:	ldr	r1, [pc, #1156]	; 4bef8 <Mat_VarPrint+0x8fc>
   4ba70:	ldr	r3, [r5, #24]
   4ba74:	add	r1, pc, r1
   4ba78:	str	r1, [sp, #4]
   4ba7c:	ldr	r1, [pc, #1144]	; 4befc <Mat_VarPrint+0x900>
   4ba80:	add	r1, pc, r1
   4ba84:	str	r1, [sp, #8]
   4ba88:	ldr	r1, [pc, #1136]	; 4bf00 <Mat_VarPrint+0x904>
   4ba8c:	add	r1, pc, r1
   4ba90:	str	r1, [sp, #12]
   4ba94:	ldm	r3, {r1, r3}
   4ba98:	str	r1, [sp, #16]
   4ba9c:	str	r3, [sp, #20]
   4baa0:	cmp	r2, r9
   4baa4:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4baa8:	ldr	r1, [r5, #12]
   4baac:	lsl	fp, r9, #2
   4bab0:	add	fp, fp, #4
   4bab4:	ldr	r6, [r1, r9, lsl #2]
   4bab8:	add	r9, r9, #1
   4babc:	ldr	r0, [r1, fp]
   4bac0:	cmp	r6, r0
   4bac4:	bcs	4baa0 <Mat_VarPrint+0x4a4>
   4bac8:	ldr	r1, [r5, #20]
   4bacc:	cmp	r6, r1
   4bad0:	bcs	4baa0 <Mat_VarPrint+0x4a4>
   4bad4:	ldr	r3, [sp, #16]
   4bad8:	mul	r8, r6, r7
   4badc:	add	sl, r3, r8
   4bae0:	ldr	r3, [sp, #20]
   4bae4:	add	r8, r3, r8
   4bae8:	b	4baf8 <Mat_VarPrint+0x4fc>
   4baec:	ldr	r2, [r5, #20]
   4baf0:	cmp	r2, r6
   4baf4:	bls	4bb54 <Mat_VarPrint+0x558>
   4baf8:	ldr	r1, [r5, #4]
   4bafc:	mov	r2, r9
   4bb00:	ldr	r0, [sp, #4]
   4bb04:	ldr	r1, [r1, r6, lsl #2]
   4bb08:	add	r6, r6, #1
   4bb0c:	add	r1, r1, #1
   4bb10:	bl	1448 <printf@plt>
   4bb14:	mov	r1, sl
   4bb18:	ldr	r0, [r4, #8]
   4bb1c:	add	sl, sl, r7
   4bb20:	bl	49768 <Mat_PrintNumber>
   4bb24:	ldr	r0, [sp, #8]
   4bb28:	bl	1448 <printf@plt>
   4bb2c:	mov	r1, r8
   4bb30:	ldr	r0, [r4, #8]
   4bb34:	add	r8, r8, r7
   4bb38:	bl	49768 <Mat_PrintNumber>
   4bb3c:	ldr	r0, [sp, #12]
   4bb40:	bl	1538 <puts@plt>
   4bb44:	ldr	r2, [r5, #12]
   4bb48:	ldr	r2, [r2, fp]
   4bb4c:	cmp	r2, r6
   4bb50:	bhi	4baec <Mat_VarPrint+0x4f0>
   4bb54:	ldr	r2, [r5, #16]
   4bb58:	sub	r2, r2, #1
   4bb5c:	b	4baa0 <Mat_VarPrint+0x4a4>
   4bb60:	ldr	r1, [r4, #8]
   4bb64:	ldr	r2, [r3]
   4bb68:	ldr	r7, [r4, #40]	; 0x28
   4bb6c:	cmp	r1, #4
   4bb70:	beq	4bc90 <Mat_VarPrint+0x694>
   4bb74:	cmp	r1, #17
   4bb78:	beq	4bc90 <Mat_VarPrint+0x694>
   4bb7c:	cmp	r2, #0
   4bb80:	movne	r8, #0
   4bb84:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4bb88:	ldr	r2, [r3, #4]
   4bb8c:	cmp	r2, #0
   4bb90:	movne	r5, #0
   4bb94:	addne	r6, r7, r8
   4bb98:	beq	4bbc0 <Mat_VarPrint+0x5c4>
   4bb9c:	ldr	r3, [r3]
   4bba0:	mul	r3, r3, r5
   4bba4:	add	r5, r5, #1
   4bba8:	ldrb	r0, [r6, r3]
   4bbac:	bl	1604 <putchar@plt>
   4bbb0:	ldr	r3, [r4, #32]
   4bbb4:	ldr	r2, [r3, #4]
   4bbb8:	cmp	r2, r5
   4bbbc:	bhi	4bb9c <Mat_VarPrint+0x5a0>
   4bbc0:	mov	r0, #10
   4bbc4:	add	r8, r8, #1
   4bbc8:	bl	1604 <putchar@plt>
   4bbcc:	ldr	r3, [r4, #32]
   4bbd0:	ldr	r2, [r3]
   4bbd4:	cmp	r2, r8
   4bbd8:	bhi	4bb88 <Mat_VarPrint+0x58c>
   4bbdc:	b	4b7cc <Mat_VarPrint+0x1d0>
   4bbe0:	ldr	r0, [pc, #796]	; 4bf04 <Mat_VarPrint+0x908>
   4bbe4:	add	r0, pc, r0
   4bbe8:	bl	1538 <puts@plt>
   4bbec:	b	4b7cc <Mat_VarPrint+0x1d0>
   4bbf0:	ldr	r3, [r4]
   4bbf4:	ldr	r0, [pc, #780]	; 4bf08 <Mat_VarPrint+0x90c>
   4bbf8:	udiv	r2, r3, r2
   4bbfc:	add	r0, pc, r0
   4bc00:	str	r2, [sp, #24]
   4bc04:	bl	1538 <puts@plt>
   4bc08:	ldr	r3, [sp, #24]
   4bc0c:	cmp	r3, #0
   4bc10:	subne	r5, r5, #4
   4bc14:	movne	r4, #0
   4bc18:	beq	4bc38 <Mat_VarPrint+0x63c>
   4bc1c:	mov	r1, r7
   4bc20:	ldr	r0, [r5, #4]!
   4bc24:	add	r4, r4, #1
   4bc28:	bl	4b5fc <Mat_VarPrint>
   4bc2c:	ldr	r3, [sp, #24]
   4bc30:	cmp	r3, r4
   4bc34:	bhi	4bc1c <Mat_VarPrint+0x620>
   4bc38:	ldr	r0, [pc, #716]	; 4bf0c <Mat_VarPrint+0x910>
   4bc3c:	add	r0, pc, r0
   4bc40:	bl	1538 <puts@plt>
   4bc44:	b	4b760 <Mat_VarPrint+0x164>
   4bc48:	udiv	r3, r6, r8
   4bc4c:	ldr	r1, [r4, #52]	; 0x34
   4bc50:	mov	r0, r9
   4bc54:	ldr	r1, [r1, #8]
   4bc58:	mls	r3, r8, r3, r6
   4bc5c:	ldr	r1, [r1, r3, lsl #2]
   4bc60:	bl	1448 <printf@plt>
   4bc64:	b	4b88c <Mat_VarPrint+0x290>
   4bc68:	ldr	r3, [r4, #32]
   4bc6c:	cmp	r3, #0
   4bc70:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4bc74:	ldr	r3, [r3]
   4bc78:	cmp	r3, #15
   4bc7c:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4bc80:	ldr	r0, [pc, #648]	; 4bf10 <Mat_VarPrint+0x914>
   4bc84:	add	r0, pc, r0
   4bc88:	bl	1538 <puts@plt>
   4bc8c:	b	4b7cc <Mat_VarPrint+0x1d0>
   4bc90:	cmp	r2, #0
   4bc94:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4bc98:	ldr	r8, [pc, #628]	; 4bf14 <Mat_VarPrint+0x918>
   4bc9c:	mov	r6, #0
   4bca0:	ldr	r9, [pc, #624]	; 4bf18 <Mat_VarPrint+0x91c>
   4bca4:	add	r8, pc, r8
   4bca8:	add	r9, pc, r9
   4bcac:	ldr	r2, [r3, #4]
   4bcb0:	cmp	r2, #0
   4bcb4:	movne	r5, #0
   4bcb8:	bne	4bce4 <Mat_VarPrint+0x6e8>
   4bcbc:	b	4bd38 <Mat_VarPrint+0x73c>
   4bcc0:	mov	r2, r3
   4bcc4:	mov	r0, r9
   4bcc8:	orr	r1, lr, #192	; 0xc0
   4bccc:	bl	1448 <printf@plt>
   4bcd0:	ldr	r3, [r4, #32]
   4bcd4:	add	r5, r5, #1
   4bcd8:	ldr	r2, [r3, #4]
   4bcdc:	cmp	r2, r5
   4bce0:	bls	4bd38 <Mat_VarPrint+0x73c>
   4bce4:	ldr	r3, [r3]
   4bce8:	mla	r3, r3, r5, r6
   4bcec:	lsl	r3, r3, #1
   4bcf0:	ldrh	ip, [r7, r3]
   4bcf4:	cmp	ip, #127	; 0x7f
   4bcf8:	and	r3, ip, #63	; 0x3f
   4bcfc:	lsr	lr, ip, #6
   4bd00:	bls	4bd2c <Mat_VarPrint+0x730>
   4bd04:	lsr	r1, ip, #12
   4bd08:	and	r2, lr, #63	; 0x3f
   4bd0c:	cmp	ip, #2048	; 0x800
   4bd10:	mov	r0, r8
   4bd14:	orr	r2, r2, #128	; 0x80
   4bd18:	orr	r1, r1, #224	; 0xe0
   4bd1c:	orr	r3, r3, #128	; 0x80
   4bd20:	bcc	4bcc0 <Mat_VarPrint+0x6c4>
   4bd24:	bl	1448 <printf@plt>
   4bd28:	b	4bcd0 <Mat_VarPrint+0x6d4>
   4bd2c:	mov	r0, ip
   4bd30:	bl	1604 <putchar@plt>
   4bd34:	b	4bcd0 <Mat_VarPrint+0x6d4>
   4bd38:	mov	r0, #10
   4bd3c:	add	r6, r6, #1
   4bd40:	bl	1604 <putchar@plt>
   4bd44:	ldr	r3, [r4, #32]
   4bd48:	ldr	r2, [r3]
   4bd4c:	cmp	r2, r6
   4bd50:	bhi	4bcac <Mat_VarPrint+0x6b0>
   4bd54:	b	4b7cc <Mat_VarPrint+0x1d0>
   4bd58:	ldr	sl, [pc, #444]	; 4bf1c <Mat_VarPrint+0x920>
   4bd5c:	sub	r2, r2, #1
   4bd60:	ldr	r3, [r5, #24]
   4bd64:	add	sl, pc, sl
   4bd68:	str	r3, [sp, #4]
   4bd6c:	cmp	r2, r8
   4bd70:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4bd74:	ldr	r3, [r5, #12]
   4bd78:	lsl	fp, r8, #2
   4bd7c:	add	fp, fp, #4
   4bd80:	ldr	r6, [r3, r8, lsl #2]
   4bd84:	add	r8, r8, #1
   4bd88:	ldr	r1, [r3, fp]
   4bd8c:	cmp	r6, r1
   4bd90:	bcs	4bd6c <Mat_VarPrint+0x770>
   4bd94:	ldr	r3, [r5, #20]
   4bd98:	cmp	r6, r3
   4bd9c:	bcs	4bd6c <Mat_VarPrint+0x770>
   4bda0:	ldr	r3, [sp, #4]
   4bda4:	mla	r9, r6, r7, r3
   4bda8:	b	4bdb8 <Mat_VarPrint+0x7bc>
   4bdac:	ldr	r3, [r5, #20]
   4bdb0:	cmp	r3, r6
   4bdb4:	bls	4bdfc <Mat_VarPrint+0x800>
   4bdb8:	ldr	r3, [r5, #4]
   4bdbc:	mov	r2, r8
   4bdc0:	mov	r0, sl
   4bdc4:	ldr	r1, [r3, r6, lsl #2]
   4bdc8:	add	r6, r6, #1
   4bdcc:	add	r1, r1, #1
   4bdd0:	bl	1448 <printf@plt>
   4bdd4:	mov	r1, r9
   4bdd8:	ldr	r0, [r4, #8]
   4bddc:	add	r9, r9, r7
   4bde0:	bl	49768 <Mat_PrintNumber>
   4bde4:	mov	r0, #10
   4bde8:	bl	1604 <putchar@plt>
   4bdec:	ldr	r3, [r5, #12]
   4bdf0:	ldr	r3, [r3, fp]
   4bdf4:	cmp	r3, r6
   4bdf8:	bhi	4bdac <Mat_VarPrint+0x7b0>
   4bdfc:	ldr	r2, [r5, #16]
   4be00:	sub	r2, r2, #1
   4be04:	b	4bd6c <Mat_VarPrint+0x770>
   4be08:	ldr	r2, [r3]
   4be0c:	ldr	r9, [pc, #268]	; 4bf20 <Mat_VarPrint+0x924>
   4be10:	ldr	r8, [r4, #40]	; 0x28
   4be14:	cmp	r2, #0
   4be18:	add	r9, pc, r9
   4be1c:	beq	4b7cc <Mat_VarPrint+0x1d0>
   4be20:	ldr	r2, [r3, #4]
   4be24:	cmp	r2, #0
   4be28:	movne	r6, #0
   4be2c:	beq	4be78 <Mat_VarPrint+0x87c>
   4be30:	ldr	r1, [r3]
   4be34:	ldr	r0, [r4, #8]
   4be38:	mla	r1, r1, r6, r7
   4be3c:	add	r6, r6, #1
   4be40:	mla	r1, r5, r1, r8
   4be44:	bl	49768 <Mat_PrintNumber>
   4be48:	mov	r0, #32
   4be4c:	bl	1604 <putchar@plt>
   4be50:	ldr	r3, [r4, #32]
   4be54:	ldr	r2, [r3, #4]
   4be58:	cmp	r2, r6
   4be5c:	bls	4be78 <Mat_VarPrint+0x87c>
   4be60:	cmp	r6, #15
   4be64:	bne	4be30 <Mat_VarPrint+0x834>
   4be68:	cmp	r2, #15
   4be6c:	bls	4be78 <Mat_VarPrint+0x87c>
   4be70:	mov	r0, r9
   4be74:	bl	1448 <printf@plt>
   4be78:	mov	r0, #10
   4be7c:	add	r7, r7, #1
   4be80:	bl	1604 <putchar@plt>
   4be84:	ldr	r3, [r4, #32]
   4be88:	ldr	r2, [r3]
   4be8c:	cmp	r2, r7
   4be90:	bls	4b7cc <Mat_VarPrint+0x1d0>
   4be94:	cmp	r7, #15
   4be98:	bne	4be20 <Mat_VarPrint+0x824>
   4be9c:	b	4ba2c <Mat_VarPrint+0x430>
   4bea0:	.word	0x00014adc
   4bea4:	.word	0x0000399c
   4bea8:	.word	0x0000399c
   4beac:	.word	0x00003980
   4beb0:	.word	0x00003968
   4beb4:	.word	0x00003930
   4beb8:	.word	0x00003908
   4bebc:	.word	0x0000389c
   4bec0:	.word	0x000038ec
   4bec4:	.word	0x0000389c
   4bec8:	.word	0x00014920
   4becc:	.word	0x00003848
   4bed0:	.word	0x0000382c
   4bed4:	.word	0x00003808
   4bed8:	.word	0x000037fc
   4bedc:	.word	0x000037cc
   4bee0:	.word	0x000037a8
   4bee4:	.word	0x000037a8
   4bee8:	.word	0x00003774
   4beec:	.word	0x00003768
   4bef0:	.word	0x00003768
   4bef4:	.word	0x000036c4
   4bef8:	.word	0x000036a0
   4befc:	.word	0x00003670
   4bf00:	.word	0x00003698
   4bf04:	.word	0x000034b4
   4bf08:	.word	0x00003498
   4bf0c:	.word	0x00003430
   4bf10:	.word	0x0000343c
   4bf14:	.word	0x00003468
   4bf18:	.word	0x0000345c
   4bf1c:	.word	0x000033b0
   4bf20:	.word	0x000032e0

0004bf24 <Mat_VarReadData>:
   4bf24:	ldr	ip, [r1, #16]
   4bf28:	sub	ip, ip, #6
   4bf2c:	cmp	ip, #9
   4bf30:	bhi	4bf78 <Mat_VarReadData+0x54>
   4bf34:	ldr	ip, [r0, #16]
   4bf38:	push	{lr}		; (str lr, [sp, #-4]!)
   4bf3c:	mov	lr, r0
   4bf40:	cmp	ip, #256	; 0x100
   4bf44:	beq	4bf68 <Mat_VarReadData+0x44>
   4bf48:	cmp	ip, #512	; 0x200
   4bf4c:	beq	4bf60 <Mat_VarReadData+0x3c>
   4bf50:	cmp	ip, #16
   4bf54:	movne	r0, #2
   4bf58:	beq	4bf70 <Mat_VarReadData+0x4c>
   4bf5c:	pop	{pc}		; (ldr pc, [sp], #4)
   4bf60:	mov	r0, #1
   4bf64:	pop	{pc}		; (ldr pc, [sp], #4)
   4bf68:	pop	{lr}		; (ldr lr, [sp], #4)
   4bf6c:	b	45fbc <Mat_VarReadData5>
   4bf70:	pop	{lr}		; (ldr lr, [sp], #4)
   4bf74:	b	48ebc <Mat_VarReadData4>
   4bf78:	mvn	r0, #0
   4bf7c:	bx	lr

0004bf80 <Mat_VarReadDataAll>:
   4bf80:	clz	r3, r1
   4bf84:	cmp	r0, #0
   4bf88:	str	r4, [sp, #-8]!
   4bf8c:	lsr	r3, r3, #5
   4bf90:	moveq	r4, #1
   4bf94:	str	lr, [sp, #4]
   4bf98:	movne	r4, r3
   4bf9c:	cmp	r4, #0
   4bfa0:	movne	r0, #1
   4bfa4:	beq	4bfb4 <Mat_VarReadDataAll+0x34>
   4bfa8:	ldr	r4, [sp]
   4bfac:	add	sp, sp, #4
   4bfb0:	pop	{pc}		; (ldr pc, [sp], #4)
   4bfb4:	bl	49880 <ReadData>
   4bfb8:	mov	r0, r4
   4bfbc:	ldr	r4, [sp]
   4bfc0:	add	sp, sp, #4
   4bfc4:	pop	{pc}		; (ldr pc, [sp], #4)

0004bfc8 <Mat_VarReadDataLinear>:
   4bfc8:	ldr	ip, [r1, #16]
   4bfcc:	sub	ip, ip, #6
   4bfd0:	cmp	ip, #9
   4bfd4:	bhi	4c01c <Mat_VarReadDataLinear+0x54>
   4bfd8:	ldr	ip, [r0, #16]
   4bfdc:	push	{lr}		; (str lr, [sp, #-4]!)
   4bfe0:	mov	lr, r0
   4bfe4:	cmp	ip, #256	; 0x100
   4bfe8:	beq	4c00c <Mat_VarReadDataLinear+0x44>
   4bfec:	cmp	ip, #512	; 0x200
   4bff0:	beq	4c004 <Mat_VarReadDataLinear+0x3c>
   4bff4:	cmp	ip, #16
   4bff8:	movne	r0, #2
   4bffc:	beq	4c014 <Mat_VarReadDataLinear+0x4c>
   4c000:	pop	{pc}		; (ldr pc, [sp], #4)
   4c004:	mov	r0, #1
   4c008:	pop	{pc}		; (ldr pc, [sp], #4)
   4c00c:	pop	{lr}		; (ldr lr, [sp], #4)
   4c010:	b	46870 <Mat_VarReadDataLinear5>
   4c014:	pop	{lr}		; (ldr lr, [sp], #4)
   4c018:	b	4913c <Mat_VarReadDataLinear4>
   4c01c:	mvn	r0, #0
   4c020:	bx	lr

0004c024 <Mat_VarReadNextInfo>:
   4c024:	subs	r3, r0, #0
   4c028:	beq	4c040 <Mat_VarReadNextInfo+0x1c>
   4c02c:	ldr	r3, [r3, #16]
   4c030:	cmp	r3, #16
   4c034:	beq	4c04c <Mat_VarReadNextInfo+0x28>
   4c038:	cmp	r3, #256	; 0x100
   4c03c:	beq	4c048 <Mat_VarReadNextInfo+0x24>
   4c040:	mov	r0, #0
   4c044:	bx	lr
   4c048:	b	47610 <Mat_VarReadNextInfo5>
   4c04c:	b	49278 <Mat_VarReadNextInfo4>

0004c050 <Mat_GetDir>:
   4c050:	cmp	r1, #0
   4c054:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4c058:	strd	r6, [sp, #8]
   4c05c:	strd	r8, [sp, #16]
   4c060:	strd	sl, [sp, #24]
   4c064:	str	lr, [sp, #32]
   4c068:	sub	sp, sp, #4
   4c06c:	beq	4c2c8 <Mat_GetDir+0x278>
   4c070:	cmp	r0, #0
   4c074:	beq	4c2b8 <Mat_GetDir+0x268>
   4c078:	ldr	r3, [r0, #16]
   4c07c:	ldr	r5, [r0, #40]	; 0x28
   4c080:	cmp	r5, #0
   4c084:	beq	4c108 <Mat_GetDir+0xb8>
   4c088:	cmp	r3, #512	; 0x200
   4c08c:	beq	4c0b8 <Mat_GetDir+0x68>
   4c090:	ldr	r3, [r0, #36]	; 0x24
   4c094:	str	r3, [r1]
   4c098:	mov	r0, r5
   4c09c:	add	sp, sp, #4
   4c0a0:	ldrd	r4, [sp]
   4c0a4:	ldrd	r6, [sp, #8]
   4c0a8:	ldrd	r8, [sp, #16]
   4c0ac:	ldrd	sl, [sp, #24]
   4c0b0:	add	sp, sp, #32
   4c0b4:	pop	{pc}		; (ldr pc, [sp], #4)
   4c0b8:	mov	r3, #0
   4c0bc:	str	r3, [r1]
   4c0c0:	ldr	r3, [r0, #36]	; 0x24
   4c0c4:	cmp	r3, #0
   4c0c8:	beq	4c098 <Mat_GetDir+0x48>
   4c0cc:	ldr	r3, [r5]
   4c0d0:	cmp	r3, #0
   4c0d4:	beq	4c098 <Mat_GetDir+0x48>
   4c0d8:	mov	r3, #1
   4c0dc:	sub	ip, r5, #4
   4c0e0:	b	4c0f0 <Mat_GetDir+0xa0>
   4c0e4:	ldr	r2, [ip, r3, lsl #2]
   4c0e8:	cmp	r2, #0
   4c0ec:	beq	4c098 <Mat_GetDir+0x48>
   4c0f0:	str	r3, [r1]
   4c0f4:	ldr	r2, [r0, #36]	; 0x24
   4c0f8:	cmp	r3, r2
   4c0fc:	add	r3, r3, #1
   4c100:	bcc	4c0e4 <Mat_GetDir+0x94>
   4c104:	b	4c098 <Mat_GetDir+0x48>
   4c108:	cmp	r3, #512	; 0x200
   4c10c:	mov	r4, r0
   4c110:	mov	r8, r1
   4c114:	bne	4c1bc <Mat_GetDir+0x16c>
   4c118:	ldr	r0, [r0, #36]	; 0x24
   4c11c:	cmp	r0, #0
   4c120:	beq	4c2b8 <Mat_GetDir+0x268>
   4c124:	mov	r1, #4
   4c128:	ldr	r7, [r4, #32]
   4c12c:	bl	140c <calloc@plt>
   4c130:	cmp	r0, #0
   4c134:	mov	r5, r0
   4c138:	str	r0, [r4, #40]	; 0x28
   4c13c:	beq	4c2f4 <Mat_GetDir+0x2a4>
   4c140:	ldr	r9, [pc, #448]	; 4c308 <Mat_GetDir+0x2b8>
   4c144:	mov	r3, #0
   4c148:	mov	r6, r3
   4c14c:	str	r3, [r4, #32]
   4c150:	add	r9, pc, r9
   4c154:	b	4c188 <Mat_GetDir+0x138>
   4c158:	ldr	r3, [r5, #36]	; 0x24
   4c15c:	subs	r1, r3, #0
   4c160:	beq	4c174 <Mat_GetDir+0x124>
   4c164:	ldr	fp, [r4, #40]	; 0x28
   4c168:	bl	1cbc <strdup_printf>
   4c16c:	str	r0, [fp, r6, lsl #2]
   4c170:	mov	r6, sl
   4c174:	mov	r0, r5
   4c178:	bl	158c <Mat_VarFree@plt>
   4c17c:	ldrd	r2, [r4, #32]
   4c180:	cmp	r2, r3
   4c184:	bcs	4c1ac <Mat_GetDir+0x15c>
   4c188:	mov	r0, r4
   4c18c:	add	sl, r6, #1
   4c190:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4c194:	subs	r5, r0, #0
   4c198:	mov	r0, r9
   4c19c:	bne	4c158 <Mat_GetDir+0x108>
   4c1a0:	ldr	r0, [pc, #356]	; 4c30c <Mat_GetDir+0x2bc>
   4c1a4:	add	r0, pc, r0
   4c1a8:	bl	161c <Mat_Critical@plt>
   4c1ac:	str	r7, [r4, #32]
   4c1b0:	ldr	r5, [r4, #40]	; 0x28
   4c1b4:	str	r6, [r8]
   4c1b8:	b	4c098 <Mat_GetDir+0x48>
   4c1bc:	ldr	r0, [r0]
   4c1c0:	bl	14b4 <ftell@plt>
   4c1c4:	cmn	r0, #1
   4c1c8:	mov	r9, r0
   4c1cc:	beq	4c2e0 <Mat_GetDir+0x290>
   4c1d0:	ldr	r7, [pc, #312]	; 4c310 <Mat_GetDir+0x2c0>
   4c1d4:	mov	r2, r5
   4c1d8:	ldr	r0, [r4]
   4c1dc:	ldr	r1, [r4, #28]
   4c1e0:	bl	1694 <fseek@plt>
   4c1e4:	add	r7, pc, r7
   4c1e8:	str	r5, [r4, #36]	; 0x24
   4c1ec:	b	4c244 <Mat_GetDir+0x1f4>
   4c1f0:	ldr	r1, [r4, #36]	; 0x24
   4c1f4:	add	r1, r1, #1
   4c1f8:	lsl	r1, r1, #2
   4c1fc:	bl	14d8 <realloc@plt>
   4c200:	mov	r6, r0
   4c204:	cmp	r6, #0
   4c208:	mov	r0, r7
   4c20c:	beq	4c2d0 <Mat_GetDir+0x280>
   4c210:	ldr	sl, [r4, #36]	; 0x24
   4c214:	ldr	r1, [r5, #36]	; 0x24
   4c218:	str	r6, [r4, #40]	; 0x28
   4c21c:	add	r3, sl, #1
   4c220:	str	r3, [r4, #36]	; 0x24
   4c224:	bl	1cbc <strdup_printf>
   4c228:	str	r0, [r6, sl, lsl #2]
   4c22c:	mov	r0, r5
   4c230:	bl	158c <Mat_VarFree@plt>
   4c234:	ldr	r0, [r4]
   4c238:	bl	1580 <feof@plt>
   4c23c:	cmp	r0, #0
   4c240:	bne	4c298 <Mat_GetDir+0x248>
   4c244:	mov	r0, r4
   4c248:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4c24c:	subs	r5, r0, #0
   4c250:	beq	4c27c <Mat_GetDir+0x22c>
   4c254:	ldr	r3, [r5, #36]	; 0x24
   4c258:	cmp	r3, #0
   4c25c:	beq	4c22c <Mat_GetDir+0x1dc>
   4c260:	ldr	r3, [r4, #40]	; 0x28
   4c264:	subs	r0, r3, #0
   4c268:	bne	4c1f0 <Mat_GetDir+0x1a0>
   4c26c:	mov	r0, #4
   4c270:	bl	1544 <malloc@plt>
   4c274:	mov	r6, r0
   4c278:	b	4c204 <Mat_GetDir+0x1b4>
   4c27c:	ldr	r0, [r4]
   4c280:	bl	1580 <feof@plt>
   4c284:	cmp	r0, #0
   4c288:	bne	4c234 <Mat_GetDir+0x1e4>
   4c28c:	ldr	r0, [pc, #128]	; 4c314 <Mat_GetDir+0x2c4>
   4c290:	add	r0, pc, r0
   4c294:	bl	161c <Mat_Critical@plt>
   4c298:	mov	r1, r9
   4c29c:	mov	r2, #0
   4c2a0:	ldr	r0, [r4]
   4c2a4:	bl	1694 <fseek@plt>
   4c2a8:	ldr	r3, [r4, #36]	; 0x24
   4c2ac:	ldr	r5, [r4, #40]	; 0x28
   4c2b0:	str	r3, [r8]
   4c2b4:	b	4c098 <Mat_GetDir+0x48>
   4c2b8:	mov	r3, #0
   4c2bc:	mov	r5, r3
   4c2c0:	str	r3, [r1]
   4c2c4:	b	4c098 <Mat_GetDir+0x48>
   4c2c8:	mov	r5, r1
   4c2cc:	b	4c098 <Mat_GetDir+0x48>
   4c2d0:	ldr	r0, [pc, #64]	; 4c318 <Mat_GetDir+0x2c8>
   4c2d4:	add	r0, pc, r0
   4c2d8:	bl	161c <Mat_Critical@plt>
   4c2dc:	b	4c298 <Mat_GetDir+0x248>
   4c2e0:	ldr	r0, [pc, #52]	; 4c31c <Mat_GetDir+0x2cc>
   4c2e4:	str	r5, [r8]
   4c2e8:	add	r0, pc, r0
   4c2ec:	bl	161c <Mat_Critical@plt>
   4c2f0:	b	4c098 <Mat_GetDir+0x48>
   4c2f4:	ldr	r0, [pc, #36]	; 4c320 <Mat_GetDir+0x2d0>
   4c2f8:	str	r5, [r8]
   4c2fc:	add	r0, pc, r0
   4c300:	bl	161c <Mat_Critical@plt>
   4c304:	b	4c098 <Mat_GetDir+0x48>
   4c308:	.word	0x00002ee0
   4c30c:	.word	0x00002678
   4c310:	.word	0x00002e4c
   4c314:	.word	0x0000258c
   4c318:	.word	0x00002e54
   4c31c:	.word	0x00002510
   4c320:	.word	0x00002e2c

0004c324 <Mat_VarReadInfo>:
   4c324:	clz	r2, r1
   4c328:	cmp	r0, #0
   4c32c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4c330:	lsr	r2, r2, #5
   4c334:	moveq	r4, #1
   4c338:	strd	r6, [sp, #8]
   4c33c:	str	r8, [sp, #16]
   4c340:	movne	r4, r2
   4c344:	str	lr, [sp, #20]
   4c348:	cmp	r4, #0
   4c34c:	movne	r4, #0
   4c350:	bne	4c3d0 <Mat_VarReadInfo+0xac>
   4c354:	ldr	r3, [r0, #16]
   4c358:	mov	r6, r1
   4c35c:	mov	r5, r0
   4c360:	cmp	r3, #512	; 0x200
   4c364:	bne	4c3e8 <Mat_VarReadInfo+0xc4>
   4c368:	ldr	r7, [r0, #32]
   4c36c:	str	r4, [r0, #32]
   4c370:	ldr	r3, [r0, #36]	; 0x24
   4c374:	cmp	r3, #0
   4c378:	bne	4c3ac <Mat_VarReadInfo+0x88>
   4c37c:	b	4c48c <Mat_VarReadInfo+0x168>
   4c380:	ldr	r3, [r4, #36]	; 0x24
   4c384:	subs	r0, r3, #0
   4c388:	beq	4c398 <Mat_VarReadInfo+0x74>
   4c38c:	bl	1424 <strcmp@plt>
   4c390:	cmp	r0, #0
   4c394:	beq	4c3cc <Mat_VarReadInfo+0xa8>
   4c398:	mov	r0, r4
   4c39c:	bl	158c <Mat_VarFree@plt>
   4c3a0:	ldrd	r2, [r5, #32]
   4c3a4:	cmp	r2, r3
   4c3a8:	bcs	4c48c <Mat_VarReadInfo+0x168>
   4c3ac:	mov	r0, r5
   4c3b0:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4c3b4:	subs	r4, r0, #0
   4c3b8:	mov	r1, r6
   4c3bc:	bne	4c380 <Mat_VarReadInfo+0x5c>
   4c3c0:	ldr	r0, [pc, #224]	; 4c4a8 <Mat_VarReadInfo+0x184>
   4c3c4:	add	r0, pc, r0
   4c3c8:	bl	161c <Mat_Critical@plt>
   4c3cc:	str	r7, [r5, #32]
   4c3d0:	mov	r0, r4
   4c3d4:	ldrd	r4, [sp]
   4c3d8:	ldrd	r6, [sp, #8]
   4c3dc:	ldr	r8, [sp, #16]
   4c3e0:	add	sp, sp, #20
   4c3e4:	pop	{pc}		; (ldr pc, [sp], #4)
   4c3e8:	ldr	r0, [r0]
   4c3ec:	bl	14b4 <ftell@plt>
   4c3f0:	cmn	r0, #1
   4c3f4:	mov	r7, r0
   4c3f8:	beq	4c498 <Mat_VarReadInfo+0x174>
   4c3fc:	mov	r2, r4
   4c400:	ldr	r0, [r5]
   4c404:	ldr	r1, [r5, #28]
   4c408:	bl	1694 <fseek@plt>
   4c40c:	mov	r0, r5
   4c410:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4c414:	subs	r4, r0, #0
   4c418:	mov	r1, r6
   4c41c:	beq	4c46c <Mat_VarReadInfo+0x148>
   4c420:	ldr	r3, [r4, #36]	; 0x24
   4c424:	subs	r0, r3, #0
   4c428:	beq	4c44c <Mat_VarReadInfo+0x128>
   4c42c:	bl	1424 <strcmp@plt>
   4c430:	cmp	r0, #0
   4c434:	bne	4c44c <Mat_VarReadInfo+0x128>
   4c438:	mov	r1, r7
   4c43c:	mov	r2, #0
   4c440:	ldr	r0, [r5]
   4c444:	bl	1694 <fseek@plt>
   4c448:	b	4c3d0 <Mat_VarReadInfo+0xac>
   4c44c:	mov	r0, r4
   4c450:	bl	158c <Mat_VarFree@plt>
   4c454:	ldr	r0, [r5]
   4c458:	bl	1580 <feof@plt>
   4c45c:	cmp	r0, #0
   4c460:	beq	4c40c <Mat_VarReadInfo+0xe8>
   4c464:	mov	r4, #0
   4c468:	b	4c438 <Mat_VarReadInfo+0x114>
   4c46c:	ldr	r0, [r5]
   4c470:	bl	1580 <feof@plt>
   4c474:	cmp	r0, #0
   4c478:	bne	4c454 <Mat_VarReadInfo+0x130>
   4c47c:	ldr	r0, [pc, #40]	; 4c4ac <Mat_VarReadInfo+0x188>
   4c480:	add	r0, pc, r0
   4c484:	bl	161c <Mat_Critical@plt>
   4c488:	b	4c438 <Mat_VarReadInfo+0x114>
   4c48c:	mov	r4, #0
   4c490:	str	r7, [r5, #32]
   4c494:	b	4c3d0 <Mat_VarReadInfo+0xac>
   4c498:	ldr	r0, [pc, #16]	; 4c4b0 <Mat_VarReadInfo+0x18c>
   4c49c:	add	r0, pc, r0
   4c4a0:	bl	161c <Mat_Critical@plt>
   4c4a4:	b	4c3d0 <Mat_VarReadInfo+0xac>
   4c4a8:	.word	0x00002458
   4c4ac:	.word	0x0000239c
   4c4b0:	.word	0x0000235c

0004c4b4 <Mat_VarRead>:
   4c4b4:	clz	r3, r1
   4c4b8:	cmp	r0, #0
   4c4bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4c4c0:	lsr	r3, r3, #5
   4c4c4:	moveq	r4, #1
   4c4c8:	strd	r6, [sp, #8]
   4c4cc:	str	r8, [sp, #16]
   4c4d0:	movne	r4, r3
   4c4d4:	str	lr, [sp, #20]
   4c4d8:	cmp	r4, #0
   4c4dc:	movne	r4, #0
   4c4e0:	bne	4c53c <Mat_VarRead+0x88>
   4c4e4:	ldr	r3, [r0, #16]
   4c4e8:	mov	r5, r0
   4c4ec:	cmp	r3, #512	; 0x200
   4c4f0:	beq	4c554 <Mat_VarRead+0xa0>
   4c4f4:	ldr	r0, [r0]
   4c4f8:	mov	r6, r1
   4c4fc:	bl	14b4 <ftell@plt>
   4c500:	cmn	r0, #1
   4c504:	mov	r7, r0
   4c508:	beq	4c57c <Mat_VarRead+0xc8>
   4c50c:	mov	r1, r6
   4c510:	mov	r0, r5
   4c514:	bl	14e4 <Mat_VarReadInfo@plt>
   4c518:	subs	r4, r0, #0
   4c51c:	beq	4c52c <Mat_VarRead+0x78>
   4c520:	mov	r1, r4
   4c524:	mov	r0, r5
   4c528:	bl	49880 <ReadData>
   4c52c:	mov	r1, r7
   4c530:	mov	r2, #0
   4c534:	ldr	r0, [r5]
   4c538:	bl	1694 <fseek@plt>
   4c53c:	mov	r0, r4
   4c540:	ldrd	r4, [sp]
   4c544:	ldrd	r6, [sp, #8]
   4c548:	ldr	r8, [sp, #16]
   4c54c:	add	sp, sp, #20
   4c550:	pop	{pc}		; (ldr pc, [sp], #4)
   4c554:	ldr	r6, [r0, #32]
   4c558:	str	r4, [r0, #32]
   4c55c:	bl	14e4 <Mat_VarReadInfo@plt>
   4c560:	subs	r4, r0, #0
   4c564:	beq	4c574 <Mat_VarRead+0xc0>
   4c568:	mov	r1, r4
   4c56c:	mov	r0, r5
   4c570:	bl	49880 <ReadData>
   4c574:	str	r6, [r5, #32]
   4c578:	b	4c53c <Mat_VarRead+0x88>
   4c57c:	ldr	r0, [pc, #8]	; 4c58c <Mat_VarRead+0xd8>
   4c580:	add	r0, pc, r0
   4c584:	bl	161c <Mat_Critical@plt>
   4c588:	b	4c53c <Mat_VarRead+0x88>
   4c58c:	.word	0x00002278

0004c590 <Mat_VarReadNext>:
   4c590:	ldr	r3, [r0, #16]
   4c594:	strd	r4, [sp, #-16]!
   4c598:	mov	r4, r0
   4c59c:	str	r6, [sp, #8]
   4c5a0:	str	lr, [sp, #12]
   4c5a4:	cmp	r3, #512	; 0x200
   4c5a8:	beq	4c614 <Mat_VarReadNext+0x84>
   4c5ac:	ldr	r0, [r0]
   4c5b0:	bl	1580 <feof@plt>
   4c5b4:	subs	r5, r0, #0
   4c5b8:	bne	4c60c <Mat_VarReadNext+0x7c>
   4c5bc:	ldr	r0, [r4]
   4c5c0:	bl	14b4 <ftell@plt>
   4c5c4:	cmn	r0, #1
   4c5c8:	mov	r6, r0
   4c5cc:	beq	4c630 <Mat_VarReadNext+0xa0>
   4c5d0:	mov	r0, r4
   4c5d4:	bl	16b8 <Mat_VarReadNextInfo@plt>
   4c5d8:	subs	r5, r0, #0
   4c5dc:	beq	4c600 <Mat_VarReadNext+0x70>
   4c5e0:	mov	r0, r4
   4c5e4:	mov	r1, r5
   4c5e8:	bl	49880 <ReadData>
   4c5ec:	mov	r0, r5
   4c5f0:	ldrd	r4, [sp]
   4c5f4:	ldr	r6, [sp, #8]
   4c5f8:	add	sp, sp, #12
   4c5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   4c600:	ldr	r3, [r4, #16]
   4c604:	cmp	r3, #512	; 0x200
   4c608:	bne	4c61c <Mat_VarReadNext+0x8c>
   4c60c:	mov	r5, #0
   4c610:	b	4c5ec <Mat_VarReadNext+0x5c>
   4c614:	mov	r6, #0
   4c618:	b	4c5d0 <Mat_VarReadNext+0x40>
   4c61c:	mov	r1, r6
   4c620:	mov	r2, r5
   4c624:	ldr	r0, [r4]
   4c628:	bl	1694 <fseek@plt>
   4c62c:	b	4c5ec <Mat_VarReadNext+0x5c>
   4c630:	ldr	r0, [pc, #8]	; 4c640 <Mat_VarReadNext+0xb0>
   4c634:	add	r0, pc, r0
   4c638:	bl	161c <Mat_Critical@plt>
   4c63c:	b	4c5ec <Mat_VarReadNext+0x5c>
   4c640:	.word	0x000021c4

0004c644 <Mat_VarWriteInfo>:
   4c644:	ldr	r3, [r0, #16]
   4c648:	str	r4, [sp, #-8]!
   4c64c:	str	lr, [sp, #4]
   4c650:	cmp	r3, #512	; 0x200
   4c654:	beq	4c67c <Mat_VarWriteInfo+0x38>
   4c658:	ldr	r1, [pc, #40]	; 4c688 <Mat_VarWriteInfo+0x44>
   4c65c:	add	r1, pc, r1
   4c660:	ldr	r0, [pc, #36]	; 4c68c <Mat_VarWriteInfo+0x48>
   4c664:	add	r0, pc, r0
   4c668:	bl	161c <Mat_Critical@plt>
   4c66c:	ldr	r4, [sp]
   4c670:	add	sp, sp, #4
   4c674:	mov	r0, #1
   4c678:	pop	{pc}		; (ldr pc, [sp], #4)
   4c67c:	ldr	r1, [pc, #12]	; 4c690 <Mat_VarWriteInfo+0x4c>
   4c680:	add	r1, pc, r1
   4c684:	b	4c660 <Mat_VarWriteInfo+0x1c>
   4c688:	.word	0x00002b18
   4c68c:	.word	0x00002b20
   4c690:	.word	0x00002ad4

0004c694 <Mat_VarWriteData>:
   4c694:	ldr	r3, [r0, #16]
   4c698:	str	r4, [sp, #-8]!
   4c69c:	str	lr, [sp, #4]
   4c6a0:	cmp	r3, #512	; 0x200
   4c6a4:	beq	4c6cc <Mat_VarWriteData+0x38>
   4c6a8:	ldr	r1, [pc, #40]	; 4c6d8 <Mat_VarWriteData+0x44>
   4c6ac:	add	r1, pc, r1
   4c6b0:	ldr	r0, [pc, #36]	; 4c6dc <Mat_VarWriteData+0x48>
   4c6b4:	add	r0, pc, r0
   4c6b8:	bl	161c <Mat_Critical@plt>
   4c6bc:	ldr	r4, [sp]
   4c6c0:	add	sp, sp, #4
   4c6c4:	mov	r0, #1
   4c6c8:	pop	{pc}		; (ldr pc, [sp], #4)
   4c6cc:	ldr	r1, [pc, #12]	; 4c6e0 <Mat_VarWriteData+0x4c>
   4c6d0:	add	r1, pc, r1
   4c6d4:	b	4c6b0 <Mat_VarWriteData+0x1c>
   4c6d8:	.word	0x00002ac8
   4c6dc:	.word	0x00002ad0
   4c6e0:	.word	0x00002a84

0004c6e4 <Mat_VarWrite>:
   4c6e4:	cmp	r1, #0
   4c6e8:	cmpne	r0, #0
   4c6ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4c6f0:	strd	r6, [sp, #8]
   4c6f4:	strd	r8, [sp, #16]
   4c6f8:	str	sl, [sp, #24]
   4c6fc:	str	lr, [sp, #28]
   4c700:	sub	sp, sp, #8
   4c704:	beq	4c86c <Mat_VarWrite+0x188>
   4c708:	ldr	r3, [r0, #40]	; 0x28
   4c70c:	mov	r8, r0
   4c710:	mov	r7, r1
   4c714:	mov	r9, r2
   4c718:	cmp	r3, #0
   4c71c:	beq	4c838 <Mat_VarWrite+0x154>
   4c720:	ldr	r6, [r8, #36]	; 0x24
   4c724:	cmp	r6, #0
   4c728:	beq	4c764 <Mat_VarWrite+0x80>
   4c72c:	ldr	r5, [r8, #40]	; 0x28
   4c730:	mov	r4, #0
   4c734:	sub	r5, r5, #4
   4c738:	ldr	r3, [r5, #4]!
   4c73c:	add	r4, r4, #1
   4c740:	subs	r0, r3, #0
   4c744:	beq	4c75c <Mat_VarWrite+0x78>
   4c748:	ldr	sl, [r7, #36]	; 0x24
   4c74c:	mov	r1, sl
   4c750:	bl	1424 <strcmp@plt>
   4c754:	cmp	r0, #0
   4c758:	beq	4c7a8 <Mat_VarWrite+0xc4>
   4c75c:	cmp	r4, r6
   4c760:	bne	4c738 <Mat_VarWrite+0x54>
   4c764:	ldr	r3, [r8, #16]
   4c768:	cmp	r3, #256	; 0x100
   4c76c:	beq	4c7c0 <Mat_VarWrite+0xdc>
   4c770:	cmp	r3, #512	; 0x200
   4c774:	moveq	r4, #1
   4c778:	beq	4c788 <Mat_VarWrite+0xa4>
   4c77c:	cmp	r3, #16
   4c780:	movne	r4, #2
   4c784:	beq	4c848 <Mat_VarWrite+0x164>
   4c788:	mov	r0, r4
   4c78c:	add	sp, sp, #8
   4c790:	ldrd	r4, [sp]
   4c794:	ldrd	r6, [sp, #8]
   4c798:	ldrd	r8, [sp, #16]
   4c79c:	ldr	sl, [sp, #24]
   4c7a0:	add	sp, sp, #28
   4c7a4:	pop	{pc}		; (ldr pc, [sp], #4)
   4c7a8:	ldr	r0, [pc, #216]	; 4c888 <Mat_VarWrite+0x1a4>
   4c7ac:	mov	r1, sl
   4c7b0:	mov	r4, #1
   4c7b4:	add	r0, pc, r0
   4c7b8:	bl	161c <Mat_Critical@plt>
   4c7bc:	b	4c788 <Mat_VarWrite+0xa4>
   4c7c0:	mov	r2, r9
   4c7c4:	mov	r1, r7
   4c7c8:	mov	r0, r8
   4c7cc:	bl	46d98 <Mat_VarWrite5>
   4c7d0:	mov	r4, r0
   4c7d4:	cmp	r4, #0
   4c7d8:	bne	4c788 <Mat_VarWrite+0xa4>
   4c7dc:	ldr	r0, [r8, #40]	; 0x28
   4c7e0:	cmp	r0, #0
   4c7e4:	beq	4c85c <Mat_VarWrite+0x178>
   4c7e8:	ldr	r3, [r8, #36]	; 0x24
   4c7ec:	add	r3, r3, #1
   4c7f0:	lsl	r1, r3, #2
   4c7f4:	bl	14d8 <realloc@plt>
   4c7f8:	mov	r5, r0
   4c7fc:	cmp	r5, #0
   4c800:	beq	4c874 <Mat_VarWrite+0x190>
   4c804:	ldr	r1, [r7, #36]	; 0x24
   4c808:	str	r5, [r8, #40]	; 0x28
   4c80c:	ldr	r6, [r8, #36]	; 0x24
   4c810:	cmp	r1, #0
   4c814:	add	r3, r6, #1
   4c818:	str	r3, [r8, #36]	; 0x24
   4c81c:	streq	r1, [r5, r6, lsl #2]
   4c820:	beq	4c788 <Mat_VarWrite+0xa4>
   4c824:	ldr	r0, [pc, #96]	; 4c88c <Mat_VarWrite+0x1a8>
   4c828:	add	r0, pc, r0
   4c82c:	bl	1cbc <strdup_printf>
   4c830:	str	r0, [r5, r6, lsl #2]
   4c834:	b	4c788 <Mat_VarWrite+0xa4>
   4c838:	add	r1, sp, #4
   4c83c:	str	r3, [sp, #4]
   4c840:	bl	15a4 <Mat_GetDir@plt>
   4c844:	b	4c720 <Mat_VarWrite+0x3c>
   4c848:	mov	r1, r7
   4c84c:	mov	r0, r8
   4c850:	bl	47efc <Mat_VarWrite4>
   4c854:	mov	r4, r0
   4c858:	b	4c7d4 <Mat_VarWrite+0xf0>
   4c85c:	mov	r0, #4
   4c860:	bl	1544 <malloc@plt>
   4c864:	mov	r5, r0
   4c868:	b	4c7fc <Mat_VarWrite+0x118>
   4c86c:	mvn	r4, #0
   4c870:	b	4c788 <Mat_VarWrite+0xa4>
   4c874:	ldr	r0, [pc, #20]	; 4c890 <Mat_VarWrite+0x1ac>
   4c878:	mov	r4, #3
   4c87c:	add	r0, pc, r0
   4c880:	bl	161c <Mat_Critical@plt>
   4c884:	b	4c788 <Mat_VarWrite+0xa4>
   4c888:	.word	0x00002a14
   4c88c:	.word	0x00002808
   4c890:	.word	0x000028ac

0004c894 <Mat_VarDelete>:
   4c894:	ldr	r3, [pc, #840]	; 4cbe4 <Mat_VarDelete+0x350>
   4c898:	cmp	r1, #0
   4c89c:	cmpne	r0, #0
   4c8a0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   4c8a4:	strd	r6, [sp, #8]
   4c8a8:	str	lr, [sp, #28]
   4c8ac:	strd	r8, [sp, #16]
   4c8b0:	add	r3, pc, r3
   4c8b4:	str	sl, [sp, #24]
   4c8b8:	sub	sp, sp, #8
   4c8bc:	ldrh	ip, [r3, #4]
   4c8c0:	mov	r2, sp
   4c8c4:	ldr	lr, [r3]
   4c8c8:	ldrb	r3, [r3, #6]
   4c8cc:	strh	ip, [r2, #4]
   4c8d0:	str	lr, [sp]
   4c8d4:	strb	r3, [r2, #6]
   4c8d8:	bne	4c900 <Mat_VarDelete+0x6c>
   4c8dc:	mov	r4, #1
   4c8e0:	mov	r0, r4
   4c8e4:	add	sp, sp, #8
   4c8e8:	ldrd	r4, [sp]
   4c8ec:	ldrd	r6, [sp, #8]
   4c8f0:	ldrd	r8, [sp, #16]
   4c8f4:	ldr	sl, [sp, #24]
   4c8f8:	add	sp, sp, #28
   4c8fc:	pop	{pc}		; (ldr pc, [sp], #4)
   4c900:	mov	r5, r0
   4c904:	mov	r0, r2
   4c908:	mov	r7, r1
   4c90c:	bl	155c <mktemp@plt>
   4c910:	subs	r9, r0, #0
   4c914:	beq	4ca78 <Mat_VarDelete+0x1e4>
   4c918:	ldr	r2, [r5, #16]
   4c91c:	cmp	r2, #16
   4c920:	beq	4c930 <Mat_VarDelete+0x9c>
   4c924:	cmp	r2, #512	; 0x200
   4c928:	moveq	r2, #512	; 0x200
   4c92c:	movne	r2, #256	; 0x100
   4c930:	mov	r0, r9
   4c934:	ldr	r1, [r5, #4]
   4c938:	bl	164c <Mat_CreateVer@plt>
   4c93c:	subs	sl, r0, #0
   4c940:	beq	4c8dc <Mat_VarDelete+0x48>
   4c944:	mov	r0, r5
   4c948:	mov	r8, #1
   4c94c:	bl	15ec <Mat_Rewind@plt>
   4c950:	b	4c960 <Mat_VarDelete+0xcc>
   4c954:	mov	r0, r4
   4c958:	mov	r8, r6
   4c95c:	bl	158c <Mat_VarFree@plt>
   4c960:	mov	r0, r5
   4c964:	bl	1418 <Mat_VarReadNext@plt>
   4c968:	subs	r4, r0, #0
   4c96c:	mov	r1, r7
   4c970:	beq	4c99c <Mat_VarDelete+0x108>
   4c974:	ldr	r0, [r4, #36]	; 0x24
   4c978:	bl	1424 <strcmp@plt>
   4c97c:	subs	r6, r0, #0
   4c980:	beq	4c954 <Mat_VarDelete+0xc0>
   4c984:	mov	r1, r4
   4c988:	mov	r0, sl
   4c98c:	ldr	r2, [r4, #48]	; 0x30
   4c990:	mov	r6, r8
   4c994:	bl	149c <Mat_VarWrite@plt>
   4c998:	b	4c954 <Mat_VarDelete+0xc0>
   4c99c:	mov	r0, sl
   4c9a0:	ldr	r6, [sl, #40]	; 0x28
   4c9a4:	str	r4, [sl, #40]	; 0x28
   4c9a8:	ldr	sl, [sl, #36]	; 0x24
   4c9ac:	bl	1610 <Mat_Close@plt>
   4c9b0:	cmp	r8, #0
   4c9b4:	bne	4ca50 <Mat_VarDelete+0x1bc>
   4c9b8:	ldr	r0, [pc, #552]	; 4cbe8 <Mat_VarDelete+0x354>
   4c9bc:	ldr	r1, [r5, #12]
   4c9c0:	add	r0, pc, r0
   4c9c4:	bl	1cbc <strdup_printf>
   4c9c8:	mov	r7, r0
   4c9cc:	ldr	r0, [r5]
   4c9d0:	cmp	r0, #0
   4c9d4:	beq	4c9e0 <Mat_VarDelete+0x14c>
   4c9d8:	bl	1634 <fclose@plt>
   4c9dc:	str	r8, [r5]
   4c9e0:	mov	r1, r7
   4c9e4:	mov	r0, r9
   4c9e8:	bl	4962c <mat_copy>
   4c9ec:	cmn	r0, #1
   4c9f0:	mov	r4, r0
   4c9f4:	bne	4ca8c <Mat_VarDelete+0x1f8>
   4c9f8:	cmp	r6, #0
   4c9fc:	beq	4ca30 <Mat_VarDelete+0x19c>
   4ca00:	cmp	sl, #0
   4ca04:	addne	sl, r6, sl, lsl #2
   4ca08:	movne	r5, r6
   4ca0c:	beq	4ca28 <Mat_VarDelete+0x194>
   4ca10:	ldr	r3, [r5], #4
   4ca14:	subs	r0, r3, #0
   4ca18:	beq	4ca20 <Mat_VarDelete+0x18c>
   4ca1c:	bl	1478 <free@plt>
   4ca20:	cmp	sl, r5
   4ca24:	bne	4ca10 <Mat_VarDelete+0x17c>
   4ca28:	mov	r0, r6
   4ca2c:	bl	1478 <free@plt>
   4ca30:	ldr	r0, [pc, #436]	; 4cbec <Mat_VarDelete+0x358>
   4ca34:	mov	r1, r9
   4ca38:	mov	r2, r7
   4ca3c:	add	r0, pc, r0
   4ca40:	bl	161c <Mat_Critical@plt>
   4ca44:	mov	r0, r7
   4ca48:	bl	1478 <free@plt>
   4ca4c:	b	4c8e0 <Mat_VarDelete+0x4c>
   4ca50:	mov	r0, r9
   4ca54:	bl	1658 <remove@plt>
   4ca58:	cmn	r0, #1
   4ca5c:	mov	r4, r0
   4ca60:	bne	4c8e0 <Mat_VarDelete+0x4c>
   4ca64:	ldr	r0, [pc, #388]	; 4cbf0 <Mat_VarDelete+0x35c>
   4ca68:	mov	r1, r9
   4ca6c:	add	r0, pc, r0
   4ca70:	bl	161c <Mat_Critical@plt>
   4ca74:	b	4c8e0 <Mat_VarDelete+0x4c>
   4ca78:	ldr	r0, [pc, #372]	; 4cbf4 <Mat_VarDelete+0x360>
   4ca7c:	mov	r4, #1
   4ca80:	add	r0, pc, r0
   4ca84:	bl	161c <Mat_Critical@plt>
   4ca88:	b	4c8e0 <Mat_VarDelete+0x4c>
   4ca8c:	mov	r0, r9
   4ca90:	bl	1658 <remove@plt>
   4ca94:	cmn	r0, #1
   4ca98:	mov	r4, r0
   4ca9c:	bne	4caec <Mat_VarDelete+0x258>
   4caa0:	cmp	r6, #0
   4caa4:	beq	4cad8 <Mat_VarDelete+0x244>
   4caa8:	cmp	sl, #0
   4caac:	addne	sl, r6, sl, lsl #2
   4cab0:	movne	r5, r6
   4cab4:	beq	4cad0 <Mat_VarDelete+0x23c>
   4cab8:	ldr	r3, [r5], #4
   4cabc:	subs	r0, r3, #0
   4cac0:	beq	4cac8 <Mat_VarDelete+0x234>
   4cac4:	bl	1478 <free@plt>
   4cac8:	cmp	sl, r5
   4cacc:	bne	4cab8 <Mat_VarDelete+0x224>
   4cad0:	mov	r0, r6
   4cad4:	bl	1478 <free@plt>
   4cad8:	ldr	r0, [pc, #280]	; 4cbf8 <Mat_VarDelete+0x364>
   4cadc:	mov	r1, r9
   4cae0:	add	r0, pc, r0
   4cae4:	bl	161c <Mat_Critical@plt>
   4cae8:	b	4ca44 <Mat_VarDelete+0x1b0>
   4caec:	mov	r0, r7
   4caf0:	ldr	r1, [r5, #24]
   4caf4:	bl	143c <Mat_Open@plt>
   4caf8:	subs	r9, r0, #0
   4cafc:	beq	4cbd0 <Mat_VarDelete+0x33c>
   4cb00:	ldr	r0, [r5, #4]
   4cb04:	cmp	r0, #0
   4cb08:	beq	4cb10 <Mat_VarDelete+0x27c>
   4cb0c:	bl	1478 <free@plt>
   4cb10:	ldr	r0, [r5, #8]
   4cb14:	cmp	r0, #0
   4cb18:	beq	4cb20 <Mat_VarDelete+0x28c>
   4cb1c:	bl	1478 <free@plt>
   4cb20:	ldr	r0, [r5, #12]
   4cb24:	cmp	r0, #0
   4cb28:	beq	4cb30 <Mat_VarDelete+0x29c>
   4cb2c:	bl	1478 <free@plt>
   4cb30:	ldr	r2, [r5, #40]	; 0x28
   4cb34:	cmp	r2, #0
   4cb38:	beq	4cb78 <Mat_VarDelete+0x2e4>
   4cb3c:	ldr	r1, [r5, #36]	; 0x24
   4cb40:	cmp	r1, #0
   4cb44:	beq	4cb70 <Mat_VarDelete+0x2dc>
   4cb48:	mov	r8, #0
   4cb4c:	ldr	r3, [r2, r8, lsl #2]
   4cb50:	add	r8, r8, #1
   4cb54:	subs	r0, r3, #0
   4cb58:	beq	4cb68 <Mat_VarDelete+0x2d4>
   4cb5c:	bl	1478 <free@plt>
   4cb60:	ldr	r1, [r5, #36]	; 0x24
   4cb64:	ldr	r2, [r5, #40]	; 0x28
   4cb68:	cmp	r1, r8
   4cb6c:	bhi	4cb4c <Mat_VarDelete+0x2b8>
   4cb70:	mov	r0, r2
   4cb74:	bl	1478 <free@plt>
   4cb78:	mov	r3, r9
   4cb7c:	mov	r2, r5
   4cb80:	add	r8, r9, #32
   4cb84:	ldr	lr, [r3]
   4cb88:	add	r3, r3, #16
   4cb8c:	add	r2, r2, #16
   4cb90:	ldr	ip, [r3, #-12]
   4cb94:	ldr	r0, [r3, #-8]
   4cb98:	ldr	r1, [r3, #-4]
   4cb9c:	cmp	r3, r8
   4cba0:	str	lr, [r2, #-16]
   4cba4:	str	ip, [r2, #-12]
   4cba8:	str	r0, [r2, #-8]
   4cbac:	str	r1, [r2, #-4]
   4cbb0:	bne	4cb84 <Mat_VarDelete+0x2f0>
   4cbb4:	ldr	r3, [r3]
   4cbb8:	mov	r0, r9
   4cbbc:	str	r3, [r2]
   4cbc0:	bl	1478 <free@plt>
   4cbc4:	str	sl, [r5, #36]	; 0x24
   4cbc8:	str	r6, [r5, #40]	; 0x28
   4cbcc:	b	4ca44 <Mat_VarDelete+0x1b0>
   4cbd0:	ldr	r0, [pc, #36]	; 4cbfc <Mat_VarDelete+0x368>
   4cbd4:	mov	r1, r7
   4cbd8:	add	r0, pc, r0
   4cbdc:	bl	161c <Mat_Critical@plt>
   4cbe0:	b	4ca44 <Mat_VarDelete+0x1b0>
   4cbe4:	.word	0x000029b0
   4cbe8:	.word	0x00002670
   4cbec:	.word	0x000027a8
   4cbf0:	.word	0x0000279c
   4cbf4:	.word	0x000027bc
   4cbf8:	.word	0x00002728
   4cbfc:	.word	0x0000264c

0004cc00 <Mat_VarWriteAppend>:
   4cc00:	cmp	r1, #0
   4cc04:	cmpne	r0, #0
   4cc08:	beq	4cc58 <Mat_VarWriteAppend+0x58>
   4cc0c:	ldr	r3, [r0, #40]	; 0x28
   4cc10:	str	r4, [sp, #-8]!
   4cc14:	mov	r4, r0
   4cc18:	str	lr, [sp, #4]
   4cc1c:	sub	sp, sp, #8
   4cc20:	cmp	r3, #0
   4cc24:	beq	4cc48 <Mat_VarWriteAppend+0x48>
   4cc28:	ldr	r3, [r4, #16]
   4cc2c:	cmp	r3, #512	; 0x200
   4cc30:	moveq	r0, #1
   4cc34:	movne	r0, #2
   4cc38:	add	sp, sp, #8
   4cc3c:	ldr	r4, [sp]
   4cc40:	add	sp, sp, #4
   4cc44:	pop	{pc}		; (ldr pc, [sp], #4)
   4cc48:	add	r1, sp, #4
   4cc4c:	str	r3, [sp, #4]
   4cc50:	bl	15a4 <Mat_GetDir@plt>
   4cc54:	b	4cc28 <Mat_VarWriteAppend+0x28>
   4cc58:	mvn	r0, #0
   4cc5c:	bx	lr

0004cc60 <Mat_VarGetCell>:
   4cc60:	mov	r2, #1
   4cc64:	strd	r4, [sp, #-12]!
   4cc68:	subs	r3, r0, #0
   4cc6c:	str	lr, [sp, #8]
   4cc70:	sub	sp, sp, #12
   4cc74:	str	r2, [sp, #4]
   4cc78:	beq	4ccb8 <Mat_VarGetCell+0x58>
   4cc7c:	mov	r4, r1
   4cc80:	add	r1, sp, #4
   4cc84:	mov	r5, r3
   4cc88:	bl	4996c <SafeMulDims>
   4cc8c:	cmp	r4, #0
   4cc90:	blt	4ccb8 <Mat_VarGetCell+0x58>
   4cc94:	ldr	r3, [sp, #4]
   4cc98:	cmp	r4, r3
   4cc9c:	bcs	4ccb8 <Mat_VarGetCell+0x58>
   4cca0:	ldr	r3, [r5, #40]	; 0x28
   4cca4:	ldr	r0, [r3, r4, lsl #2]
   4cca8:	add	sp, sp, #12
   4ccac:	ldrd	r4, [sp]
   4ccb0:	add	sp, sp, #8
   4ccb4:	pop	{pc}		; (ldr pc, [sp], #4)
   4ccb8:	mov	r0, #0
   4ccbc:	add	sp, sp, #12
   4ccc0:	ldrd	r4, [sp]
   4ccc4:	add	sp, sp, #8
   4ccc8:	pop	{pc}		; (ldr pc, [sp], #4)

0004cccc <Mat_VarGetCells>:
   4cccc:	clz	ip, r1
   4ccd0:	cmp	r0, #0
   4ccd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4ccd8:	lsr	ip, ip, #5
   4ccdc:	strd	r6, [sp, #8]
   4cce0:	mov	r4, #0
   4cce4:	strd	r8, [sp, #16]
   4cce8:	mov	r5, #0
   4ccec:	moveq	ip, #1
   4ccf0:	strd	sl, [sp, #24]
   4ccf4:	cmp	ip, #0
   4ccf8:	mov	r6, r2
   4ccfc:	str	lr, [sp, #32]
   4cd00:	sub	sp, sp, #172	; 0xac
   4cd04:	add	r8, sp, #48	; 0x30
   4cd08:	add	lr, sp, #128	; 0x80
   4cd0c:	stm	sp, {r0, r2}
   4cd10:	strd	r4, [r8, #8]
   4cd14:	strd	r4, [r8, #16]
   4cd18:	strd	r4, [r8, #24]
   4cd1c:	strd	r4, [r8, #32]
   4cd20:	str	lr, [sp, #32]
   4cd24:	str	r8, [sp, #36]	; 0x24
   4cd28:	strd	r4, [sp, #48]	; 0x30
   4cd2c:	strd	r4, [sp, #88]	; 0x58
   4cd30:	strd	r4, [sp, #96]	; 0x60
   4cd34:	strd	r4, [sp, #104]	; 0x68
   4cd38:	strd	r4, [sp, #112]	; 0x70
   4cd3c:	strd	r4, [sp, #120]	; 0x78
   4cd40:	strd	r4, [sp, #128]	; 0x80
   4cd44:	strd	r4, [sp, #136]	; 0x88
   4cd48:	strd	r4, [sp, #144]	; 0x90
   4cd4c:	strd	r4, [sp, #152]	; 0x98
   4cd50:	strd	r4, [sp, #160]	; 0xa0
   4cd54:	bne	4cf70 <Mat_VarGetCells+0x2a4>
   4cd58:	clz	r2, r3
   4cd5c:	cmp	r6, #0
   4cd60:	lsr	r2, r2, #5
   4cd64:	moveq	r2, #1
   4cd68:	cmp	r2, #0
   4cd6c:	strne	ip, [sp, #16]
   4cd70:	bne	4cf78 <Mat_VarGetCells+0x2ac>
   4cd74:	ldr	r7, [r0, #4]
   4cd78:	cmp	r7, #9
   4cd7c:	strgt	r2, [sp, #16]
   4cd80:	bgt	4cf78 <Mat_VarGetCells+0x2ac>
   4cd84:	ldr	r5, [r0, #32]
   4cd88:	cmp	r7, #1
   4cd8c:	ldr	r4, [r1]
   4cd90:	ldr	r9, [r3]
   4cd94:	ldr	r2, [r5]
   4cd98:	str	r9, [sp, #12]
   4cd9c:	str	r4, [sp, #48]	; 0x30
   4cda0:	str	r2, [sp, #128]	; 0x80
   4cda4:	ble	4ce04 <Mat_VarGetCells+0x138>
   4cda8:	sub	fp, r1, #4
   4cdac:	mov	ip, r1
   4cdb0:	str	r7, [sp, #8]
   4cdb4:	add	fp, fp, r7, lsl #2
   4cdb8:	mov	r0, lr
   4cdbc:	mov	r6, r3
   4cdc0:	mov	r7, r9
   4cdc4:	b	4cdcc <Mat_VarGetCells+0x100>
   4cdc8:	ldr	r2, [r0]
   4cdcc:	mov	r9, r0
   4cdd0:	ldr	sl, [r5, #4]!
   4cdd4:	ldr	lr, [ip, #4]!
   4cdd8:	mul	r2, r2, sl
   4cddc:	ldr	sl, [r6, #4]!
   4cde0:	cmp	ip, fp
   4cde4:	str	lr, [r8, #4]!
   4cde8:	str	r2, [r0, #4]!
   4cdec:	ldr	r2, [r9]
   4cdf0:	mul	r7, sl, r7
   4cdf4:	mla	r4, r2, lr, r4
   4cdf8:	bne	4cdc8 <Mat_VarGetCells+0xfc>
   4cdfc:	str	r7, [sp, #12]
   4ce00:	ldr	r7, [sp, #8]
   4ce04:	mov	sl, r1
   4ce08:	mov	r6, r3
   4ce0c:	str	r3, [sp, #40]	; 0x28
   4ce10:	ldm	sp, {r2, r8}
   4ce14:	ldr	r5, [sp, #12]
   4ce18:	str	r2, [sp, #44]	; 0x2c
   4ce1c:	lsl	r0, r5, #2
   4ce20:	bl	1544 <malloc@plt>
   4ce24:	cmp	r5, #0
   4ce28:	str	r0, [sp, #16]
   4ce2c:	ble	4cf78 <Mat_VarGetCells+0x2ac>
   4ce30:	ldr	r3, [r6]
   4ce34:	sub	r2, r7, #1
   4ce38:	mov	lr, #0
   4ce3c:	mov	r9, lr
   4ce40:	str	r2, [sp]
   4ce44:	ldr	r2, [sl], #-4
   4ce48:	str	r3, [sp, #8]
   4ce4c:	lsl	r3, r3, #2
   4ce50:	strd	r2, [sp, #20]
   4ce54:	ldr	r2, [r8, #4]
   4ce58:	str	r2, [sp, #28]
   4ce5c:	add	r2, r3, r0
   4ce60:	ldr	r3, [sp, #8]
   4ce64:	cmp	r3, #0
   4ce68:	ble	4ce94 <Mat_VarGetCells+0x1c8>
   4ce6c:	ldr	r3, [sp, #16]
   4ce70:	ldr	r1, [sp, #44]	; 0x2c
   4ce74:	ldr	ip, [r8]
   4ce78:	add	r3, r3, r9, lsl #2
   4ce7c:	ldr	r0, [r1, #40]	; 0x28
   4ce80:	ldr	r1, [r0, r4, lsl #2]
   4ce84:	add	r4, r4, ip
   4ce88:	str	r1, [r3], #4
   4ce8c:	cmp	r2, r3
   4ce90:	bne	4ce80 <Mat_VarGetCells+0x1b4>
   4ce94:	ldr	r4, [sp, #20]
   4ce98:	add	lr, lr, #1
   4ce9c:	cmp	r7, #1
   4cea0:	ldr	r1, [sp, #28]
   4cea4:	ldr	r3, [sp, #52]	; 0x34
   4cea8:	str	r4, [sp, #48]	; 0x30
   4ceac:	str	lr, [sp, #92]	; 0x5c
   4ceb0:	add	r3, r3, r1
   4ceb4:	str	r3, [sp, #52]	; 0x34
   4ceb8:	ble	4cf48 <Mat_VarGetCells+0x27c>
   4cebc:	add	r0, sp, #92	; 0x5c
   4cec0:	mov	ip, #1
   4cec4:	ldr	r5, [sp, #32]
   4cec8:	ldr	r1, [sp, #36]	; 0x24
   4cecc:	ldr	r6, [sp, #40]	; 0x28
   4ced0:	b	4cef4 <Mat_VarGetCells+0x228>
   4ced4:	ldr	lr, [r1, #4]
   4ced8:	cmp	r7, r3
   4cedc:	add	r1, r1, #4
   4cee0:	ldr	fp, [r5], #4
   4cee4:	mov	ip, r3
   4cee8:	mla	r4, lr, fp, r4
   4ceec:	beq	4cf4c <Mat_VarGetCells+0x280>
   4cef0:	ldr	lr, [r0, #4]!
   4cef4:	add	r3, ip, #1
   4cef8:	ldr	fp, [r6, #4]!
   4cefc:	cmp	fp, lr
   4cf00:	bne	4ced4 <Mat_VarGetCells+0x208>
   4cf04:	ldr	fp, [sp]
   4cf08:	ldr	lr, [sl, r3, lsl #2]
   4cf0c:	cmp	fp, ip
   4cf10:	mov	ip, #0
   4cf14:	str	ip, [r0]
   4cf18:	str	lr, [r1, #4]
   4cf1c:	ble	4ced8 <Mat_VarGetCells+0x20c>
   4cf20:	ldr	fp, [r0, #4]
   4cf24:	ldr	ip, [r1, #8]
   4cf28:	add	fp, fp, #1
   4cf2c:	str	fp, [sp, #4]
   4cf30:	ldr	fp, [r8, r3, lsl #2]
   4cf34:	add	ip, ip, fp
   4cf38:	ldr	fp, [sp, #4]
   4cf3c:	str	ip, [r1, #8]
   4cf40:	str	fp, [r0, #4]
   4cf44:	b	4ced8 <Mat_VarGetCells+0x20c>
   4cf48:	ldr	r4, [sp, #20]
   4cf4c:	ldr	r3, [sp, #8]
   4cf50:	add	r9, r9, r3
   4cf54:	ldr	r3, [sp, #24]
   4cf58:	add	r2, r2, r3
   4cf5c:	ldr	r3, [sp, #12]
   4cf60:	cmp	r9, r3
   4cf64:	bge	4cf78 <Mat_VarGetCells+0x2ac>
   4cf68:	ldr	lr, [sp, #92]	; 0x5c
   4cf6c:	b	4ce60 <Mat_VarGetCells+0x194>
   4cf70:	mov	r3, #0
   4cf74:	str	r3, [sp, #16]
   4cf78:	ldr	r0, [sp, #16]
   4cf7c:	add	sp, sp, #172	; 0xac
   4cf80:	ldrd	r4, [sp]
   4cf84:	ldrd	r6, [sp, #8]
   4cf88:	ldrd	r8, [sp, #16]
   4cf8c:	ldrd	sl, [sp, #24]
   4cf90:	add	sp, sp, #32
   4cf94:	pop	{pc}		; (ldr pc, [sp], #4)

0004cf98 <Mat_VarGetCellsLinear>:
   4cf98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   4cf9c:	strd	r6, [sp, #8]
   4cfa0:	str	r8, [sp, #16]
   4cfa4:	subs	r8, r0, #0
   4cfa8:	moveq	r0, r8
   4cfac:	str	lr, [sp, #20]
   4cfb0:	beq	4cff4 <Mat_VarGetCellsLinear+0x5c>
   4cfb4:	lsl	r5, r3, #2
   4cfb8:	mov	r7, r3
   4cfbc:	mov	r4, r1
   4cfc0:	mov	r6, r2
   4cfc4:	mov	r0, r5
   4cfc8:	bl	1544 <malloc@plt>
   4cfcc:	cmp	r7, #0
   4cfd0:	ble	4cff4 <Mat_VarGetCellsLinear+0x5c>
   4cfd4:	ldr	r2, [r8, #40]	; 0x28
   4cfd8:	add	ip, r5, r0
   4cfdc:	mov	r3, r0
   4cfe0:	ldr	r1, [r2, r4, lsl #2]
   4cfe4:	add	r4, r4, r6
   4cfe8:	str	r1, [r3], #4
   4cfec:	cmp	r3, ip
   4cff0:	bne	4cfe0 <Mat_VarGetCellsLinear+0x48>
   4cff4:	ldrd	r4, [sp]
   4cff8:	ldrd	r6, [sp, #8]
   4cffc:	ldr	r8, [sp, #16]
   4d000:	add	sp, sp, #20
   4d004:	pop	{pc}		; (ldr pc, [sp], #4)

0004d008 <Mat_VarSetCell>:
   4d008:	mov	ip, #1
   4d00c:	strd	r4, [sp, #-16]!
   4d010:	subs	r3, r0, #0
   4d014:	str	r6, [sp, #8]
   4d018:	str	lr, [sp, #12]
   4d01c:	sub	sp, sp, #8
   4d020:	str	ip, [sp, #4]
   4d024:	beq	4d06c <Mat_VarSetCell+0x64>
   4d028:	ldr	ip, [r3, #4]
   4d02c:	cmp	ip, #0
   4d030:	ble	4d06c <Mat_VarSetCell+0x64>
   4d034:	mov	r4, r1
   4d038:	add	r1, sp, #4
   4d03c:	mov	r6, r2
   4d040:	mov	r5, r3
   4d044:	bl	4996c <SafeMulDims>
   4d048:	cmp	r4, #0
   4d04c:	blt	4d06c <Mat_VarSetCell+0x64>
   4d050:	ldr	r3, [sp, #4]
   4d054:	cmp	r4, r3
   4d058:	bcs	4d06c <Mat_VarSetCell+0x64>
   4d05c:	ldr	r3, [r5, #40]	; 0x28
   4d060:	ldr	r0, [r3, r4, lsl #2]
   4d064:	str	r6, [r3, r4, lsl #2]
   4d068:	b	4d070 <Mat_VarSetCell+0x68>
   4d06c:	mov	r0, #0
   4d070:	add	sp, sp, #8
   4d074:	ldrd	r4, [sp]
   4d078:	ldr	r6, [sp, #8]
   4d07c:	add	sp, sp, #12
   4d080:	pop	{pc}		; (ldr pc, [sp], #4)

0004d084 <Mat_VarCreateStruct>:
   4d084:	strd	r4, [sp, #-28]!	; 0xffffffe4
   4d088:	subs	r4, r2, #0
   4d08c:	strd	r6, [sp, #8]
   4d090:	strd	r8, [sp, #16]
   4d094:	str	lr, [sp, #24]
   4d098:	sub	sp, sp, #12
   4d09c:	ldr	r6, [sp, #40]	; 0x28
   4d0a0:	beq	4d1f4 <Mat_VarCreateStruct+0x170>
   4d0a4:	mov	r5, r3
   4d0a8:	mov	r8, r1
   4d0ac:	mov	r9, r0
   4d0b0:	bl	1508 <Mat_VarCalloc@plt>
   4d0b4:	subs	r7, r0, #0
   4d0b8:	beq	4d1f4 <Mat_VarCreateStruct+0x170>
   4d0bc:	mov	r3, #0
   4d0c0:	cmp	r9, r3
   4d0c4:	str	r3, [r7, #48]	; 0x30
   4d0c8:	beq	4d0d8 <Mat_VarCreateStruct+0x54>
   4d0cc:	mov	r0, r9
   4d0d0:	bl	14cc <strdup@plt>
   4d0d4:	str	r0, [r7, #36]	; 0x24
   4d0d8:	lsl	r0, r8, #2
   4d0dc:	str	r8, [r7, #4]
   4d0e0:	bl	1544 <malloc@plt>
   4d0e4:	cmp	r8, #0
   4d0e8:	str	r0, [r7, #32]
   4d0ec:	ble	4d1fc <Mat_VarCreateStruct+0x178>
   4d0f0:	sub	lr, r4, #4
   4d0f4:	sub	r0, r0, #4
   4d0f8:	mov	r2, #0
   4d0fc:	mov	r4, #1
   4d100:	ldr	ip, [lr, #4]!
   4d104:	add	r2, r2, #1
   4d108:	str	ip, [r0, #4]!
   4d10c:	mul	r4, ip, r4
   4d110:	ldr	r3, [r7, #4]
   4d114:	cmp	r3, r2
   4d118:	bgt	4d100 <Mat_VarCreateStruct+0x7c>
   4d11c:	mov	r3, #2
   4d120:	mov	r1, #22
   4d124:	mov	r2, #4
   4d128:	cmp	r6, #0
   4d12c:	str	r1, [r7, #8]
   4d130:	strd	r2, [r7, #12]
   4d134:	bne	4d154 <Mat_VarCreateStruct+0xd0>
   4d138:	mov	r0, r7
   4d13c:	add	sp, sp, #12
   4d140:	ldrd	r4, [sp]
   4d144:	ldrd	r6, [sp, #8]
   4d148:	ldrd	r8, [sp, #16]
   4d14c:	add	sp, sp, #24
   4d150:	pop	{pc}		; (ldr pc, [sp], #4)
   4d154:	ldr	r8, [r7, #52]	; 0x34
   4d158:	lsl	r0, r6, r3
   4d15c:	str	r6, [r8, #4]
   4d160:	bl	1544 <malloc@plt>
   4d164:	cmp	r0, #0
   4d168:	mov	r9, r0
   4d16c:	str	r0, [r8, #8]
   4d170:	beq	4d188 <Mat_VarCreateStruct+0x104>
   4d174:	ldr	r0, [r5]
   4d178:	cmp	r0, #0
   4d17c:	subne	r9, r9, #4
   4d180:	movne	r8, #0
   4d184:	bne	4d1a4 <Mat_VarCreateStruct+0x120>
   4d188:	mov	r0, r7
   4d18c:	mov	r7, #0
   4d190:	bl	158c <Mat_VarFree@plt>
   4d194:	b	4d138 <Mat_VarCreateStruct+0xb4>
   4d198:	ldr	r0, [r5, #4]!
   4d19c:	cmp	r0, #0
   4d1a0:	beq	4d188 <Mat_VarCreateStruct+0x104>
   4d1a4:	add	r8, r8, #1
   4d1a8:	bl	14cc <strdup@plt>
   4d1ac:	cmp	r6, r8
   4d1b0:	str	r0, [r9, #4]!
   4d1b4:	bne	4d198 <Mat_VarCreateStruct+0x114>
   4d1b8:	cmp	r4, #0
   4d1bc:	beq	4d138 <Mat_VarCreateStruct+0xb4>
   4d1c0:	mov	r2, r6
   4d1c4:	mov	r1, r4
   4d1c8:	add	r0, sp, #4
   4d1cc:	bl	499ec <SafeMul>
   4d1d0:	mov	r0, r7
   4d1d4:	ldr	r1, [sp, #4]
   4d1d8:	ldr	r2, [r7, #12]
   4d1dc:	bl	499ec <SafeMul>
   4d1e0:	ldr	r0, [sp, #4]
   4d1e4:	ldr	r1, [r7, #12]
   4d1e8:	bl	140c <calloc@plt>
   4d1ec:	str	r0, [r7, #40]	; 0x28
   4d1f0:	b	4d138 <Mat_VarCreateStruct+0xb4>
   4d1f4:	mov	r7, #0
   4d1f8:	b	4d138 <Mat_VarCreateStruct+0xb4>
   4d1fc:	mov	r4, #1
   4d200:	b	4d11c <Mat_VarCreateStruct+0x98>

0004d204 <Mat_VarAddStructField>:
   4d204:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4d208:	cmp	r0, #0
   4d20c:	mov	r3, #1
   4d210:	moveq	r4, r3
   4d214:	strd	r6, [sp, #8]
   4d218:	str	lr, [sp, #32]
   4d21c:	clz	lr, r1
   4d220:	lsr	lr, lr, #5
   4d224:	strd	r8, [sp, #16]
   4d228:	strd	sl, [sp, #24]
   4d22c:	sub	sp, sp, #12
   4d230:	movne	r4, lr
   4d234:	cmp	r4, #0
   4d238:	str	r3, [sp]
   4d23c:	bne	4d354 <Mat_VarAddStructField+0x150>
   4d240:	mov	r6, r0
   4d244:	mov	r8, r1
   4d248:	mov	r1, sp
   4d24c:	bl	4996c <SafeMulDims>
   4d250:	ldr	r3, [r6, #52]	; 0x34
   4d254:	ldr	r5, [r3, #4]
   4d258:	ldr	r0, [r3, #8]
   4d25c:	add	r9, r5, #1
   4d260:	lsl	sl, r9, #2
   4d264:	str	r9, [r3, #4]
   4d268:	mov	r1, sl
   4d26c:	bl	14d8 <realloc@plt>
   4d270:	subs	r7, r0, #0
   4d274:	beq	4d354 <Mat_VarAddStructField+0x150>
   4d278:	ldr	r3, [r6, #52]	; 0x34
   4d27c:	mov	r0, r8
   4d280:	str	r7, [r3, #8]
   4d284:	add	r7, r7, sl
   4d288:	bl	14cc <strdup@plt>
   4d28c:	mov	r2, r9
   4d290:	ldr	r1, [sp]
   4d294:	str	r0, [r7, #-4]
   4d298:	add	r0, sp, #4
   4d29c:	bl	499ec <SafeMul>
   4d2a0:	mov	r2, #4
   4d2a4:	mov	r0, r6
   4d2a8:	ldr	r1, [sp, #4]
   4d2ac:	bl	499ec <SafeMul>
   4d2b0:	ldr	r0, [r6]
   4d2b4:	bl	1544 <malloc@plt>
   4d2b8:	subs	r7, r0, #0
   4d2bc:	mvneq	r0, #0
   4d2c0:	streq	r7, [r6]
   4d2c4:	beq	4d338 <Mat_VarAddStructField+0x134>
   4d2c8:	ldr	r9, [sp]
   4d2cc:	ldr	r0, [r6, #40]	; 0x28
   4d2d0:	cmp	r9, #0
   4d2d4:	beq	4d32c <Mat_VarAddStructField+0x128>
   4d2d8:	lsl	r8, r5, #2
   4d2dc:	mov	lr, r4
   4d2e0:	mov	sl, r4
   4d2e4:	add	ip, r0, r8
   4d2e8:	rsb	fp, r8, #0
   4d2ec:	cmp	r5, #0
   4d2f0:	moveq	r3, r4
   4d2f4:	beq	4d314 <Mat_VarAddStructField+0x110>
   4d2f8:	add	r2, r7, r4, lsl #2
   4d2fc:	add	r3, ip, fp
   4d300:	ldr	r1, [r3], #4
   4d304:	cmp	r3, ip
   4d308:	str	r1, [r2], #4
   4d30c:	bne	4d300 <Mat_VarAddStructField+0xfc>
   4d310:	add	r3, r5, r4
   4d314:	add	lr, lr, #1
   4d318:	add	r4, r3, #1
   4d31c:	str	sl, [r7, r3, lsl #2]
   4d320:	cmp	lr, r9
   4d324:	add	ip, ip, r8
   4d328:	bne	4d2ec <Mat_VarAddStructField+0xe8>
   4d32c:	bl	1478 <free@plt>
   4d330:	mov	r0, #0
   4d334:	str	r7, [r6, #40]	; 0x28
   4d338:	add	sp, sp, #12
   4d33c:	ldrd	r4, [sp]
   4d340:	ldrd	r6, [sp, #8]
   4d344:	ldrd	r8, [sp, #16]
   4d348:	ldrd	sl, [sp, #24]
   4d34c:	add	sp, sp, #32
   4d350:	pop	{pc}		; (ldr pc, [sp], #4)
   4d354:	mvn	r0, #0
   4d358:	b	4d338 <Mat_VarAddStructField+0x134>

0004d35c <Mat_VarGetNumberOfFields>:
   4d35c:	cmp	r0, #0
   4d360:	beq	4d374 <Mat_VarGetNumberOfFields+0x18>
   4d364:	ldr	r3, [r0, #16]
   4d368:	cmp	r3, #2
   4d36c:	movne	r0, #0
   4d370:	beq	4d378 <Mat_VarGetNumberOfFields+0x1c>
   4d374:	bx	lr
   4d378:	ldr	r0, [r0, #52]	; 0x34
   4d37c:	cmp	r0, #0
   4d380:	beq	4d374 <Mat_VarGetNumberOfFields+0x18>
   4d384:	ldr	r0, [r0, #4]
   4d388:	bx	lr

0004d38c <Mat_VarGetStructFieldnames>:
   4d38c:	cmp	r0, #0
   4d390:	beq	4d3b8 <Mat_VarGetStructFieldnames+0x2c>
   4d394:	ldr	r3, [r0, #16]
   4d398:	cmp	r3, #2
   4d39c:	bne	4d3b4 <Mat_VarGetStructFieldnames+0x28>
   4d3a0:	ldr	r0, [r0, #52]	; 0x34
   4d3a4:	cmp	r0, #0
   4d3a8:	beq	4d3b8 <Mat_VarGetStructFieldnames+0x2c>
   4d3ac:	ldr	r0, [r0, #8]
   4d3b0:	bx	lr
   4d3b4:	mov	r0, #0
   4d3b8:	bx	lr

0004d3bc <Mat_VarGetStructFieldByIndex>:
   4d3bc:	mov	ip, #1
   4d3c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   4d3c4:	subs	r3, r0, #0
   4d3c8:	strd	r6, [sp, #8]
   4d3cc:	str	lr, [sp, #16]
   4d3d0:	sub	sp, sp, #12
   4d3d4:	str	ip, [sp, #4]
   4d3d8:	beq	4d460 <Mat_VarGetStructFieldByIndex+0xa4>
   4d3dc:	ldr	ip, [r3, #16]
   4d3e0:	cmp	ip, #2
   4d3e4:	bne	4d460 <Mat_VarGetStructFieldByIndex+0xa4>
   4d3e8:	ldr	ip, [r3, #12]
   4d3ec:	cmp	ip, #0
   4d3f0:	beq	4d460 <Mat_VarGetStructFieldByIndex+0xa4>
   4d3f4:	mov	r6, r1
   4d3f8:	add	r1, sp, #4
   4d3fc:	mov	r7, r2
   4d400:	mov	r4, r3
   4d404:	bl	4996c <SafeMulDims>
   4d408:	ldr	r5, [sp, #4]
   4d40c:	ldr	r3, [r4, #52]	; 0x34
   4d410:	cmp	r5, r7
   4d414:	movhi	r0, #0
   4d418:	movls	r0, #1
   4d41c:	cmp	r5, #0
   4d420:	ldr	r1, [r3, #4]
   4d424:	movne	r5, r0
   4d428:	moveq	r5, #0
   4d42c:	cmp	r5, #0
   4d430:	bne	4d454 <Mat_VarGetStructFieldByIndex+0x98>
   4d434:	cmp	r1, #0
   4d438:	beq	4d460 <Mat_VarGetStructFieldByIndex+0xa4>
   4d43c:	cmp	r1, r6
   4d440:	bcc	4d478 <Mat_VarGetStructFieldByIndex+0xbc>
   4d444:	ldr	r3, [r4, #40]	; 0x28
   4d448:	mla	r1, r7, r1, r6
   4d44c:	ldr	r0, [r3, r1, lsl #2]
   4d450:	b	4d464 <Mat_VarGetStructFieldByIndex+0xa8>
   4d454:	ldr	r0, [pc, #48]	; 4d48c <Mat_VarGetStructFieldByIndex+0xd0>
   4d458:	add	r0, pc, r0
   4d45c:	bl	161c <Mat_Critical@plt>
   4d460:	mov	r0, #0
   4d464:	add	sp, sp, #12
   4d468:	ldrd	r4, [sp]
   4d46c:	ldrd	r6, [sp, #8]
   4d470:	add	sp, sp, #16
   4d474:	pop	{pc}		; (ldr pc, [sp], #4)
   4d478:	ldr	r0, [pc, #16]	; 4d490 <Mat_VarGetStructFieldByIndex+0xd4>
   4d47c:	add	r0, pc, r0
   4d480:	bl	161c <Mat_Critical@plt>
   4d484:	mov	r0, r5
   4d488:	b	4d464 <Mat_VarGetStructFieldByIndex+0xa8>
   4d48c:	.word	0x0000215c
   4d490:	.word	0x00002170

0004d494 <Mat_VarGetStructFieldByName>:
   4d494:	mov	ip, #1
   4d498:	strd	r4, [sp, #-28]!	; 0xffffffe4
   4d49c:	subs	r3, r0, #0
   4d4a0:	strd	r6, [sp, #8]
   4d4a4:	strd	r8, [sp, #16]
   4d4a8:	str	lr, [sp, #24]
   4d4ac:	sub	sp, sp, #12
   4d4b0:	str	ip, [sp, #4]
   4d4b4:	beq	4d558 <Mat_VarGetStructFieldByName+0xc4>
   4d4b8:	ldr	ip, [r3, #16]
   4d4bc:	cmp	ip, #2
   4d4c0:	bne	4d558 <Mat_VarGetStructFieldByName+0xc4>
   4d4c4:	ldr	ip, [r3, #12]
   4d4c8:	cmp	ip, #0
   4d4cc:	beq	4d558 <Mat_VarGetStructFieldByName+0xc4>
   4d4d0:	mov	r8, r3
   4d4d4:	mov	r6, r1
   4d4d8:	add	r1, sp, #4
   4d4dc:	mov	r9, r2
   4d4e0:	bl	4996c <SafeMulDims>
   4d4e4:	ldr	r3, [r8, #52]	; 0x34
   4d4e8:	ldr	r7, [r3, #4]
   4d4ec:	cmp	r7, #0
   4d4f0:	ble	4d540 <Mat_VarGetStructFieldByName+0xac>
   4d4f4:	ldr	r5, [r3, #8]
   4d4f8:	mov	r4, #0
   4d4fc:	sub	r5, r5, #4
   4d500:	b	4d510 <Mat_VarGetStructFieldByName+0x7c>
   4d504:	add	r4, r4, #1
   4d508:	cmp	r7, r4
   4d50c:	beq	4d540 <Mat_VarGetStructFieldByName+0xac>
   4d510:	mov	r1, r6
   4d514:	ldr	r0, [r5, #4]!
   4d518:	bl	1424 <strcmp@plt>
   4d51c:	cmp	r0, #0
   4d520:	bne	4d504 <Mat_VarGetStructFieldByName+0x70>
   4d524:	ldr	r3, [sp, #4]
   4d528:	cmp	r9, r3
   4d52c:	bcs	4d54c <Mat_VarGetStructFieldByName+0xb8>
   4d530:	ldr	r3, [r8, #40]	; 0x28
   4d534:	mla	r4, r9, r7, r4
   4d538:	ldr	r0, [r3, r4, lsl #2]
   4d53c:	b	4d55c <Mat_VarGetStructFieldByName+0xc8>
   4d540:	ldr	r3, [sp, #4]
   4d544:	cmp	r9, r3
   4d548:	bcc	4d558 <Mat_VarGetStructFieldByName+0xc4>
   4d54c:	ldr	r0, [pc, #32]	; 4d574 <Mat_VarGetStructFieldByName+0xe0>
   4d550:	add	r0, pc, r0
   4d554:	bl	161c <Mat_Critical@plt>
   4d558:	mov	r0, #0
   4d55c:	add	sp, sp, #12
   4d560:	ldrd	r4, [sp]
   4d564:	ldrd	r6, [sp, #8]
   4d568:	ldrd	r8, [sp, #16]
   4d56c:	add	sp, sp, #24
   4d570:	pop	{pc}		; (ldr pc, [sp], #4)
   4d574:	.word	0x00002064

0004d578 <Mat_VarGetStructField>:
   4d578:	mov	ip, #1
   4d57c:	strd	r4, [sp, #-20]!	; 0xffffffec
   4d580:	mov	r4, r3
   4d584:	strd	r6, [sp, #8]
   4d588:	mov	r6, r1
   4d58c:	mov	r5, r0
   4d590:	str	lr, [sp, #16]
   4d594:	sub	sp, sp, #12
   4d598:	mov	r7, r2
   4d59c:	add	r1, sp, #4
   4d5a0:	str	ip, [sp, #4]
   4d5a4:	bl	4996c <SafeMulDims>
   4d5a8:	cmp	r4, #0
   4d5ac:	blt	4d5fc <Mat_VarGetStructField+0x84>
   4d5b0:	ldr	r3, [sp, #4]
   4d5b4:	cmp	r3, #0
   4d5b8:	bne	4d5f4 <Mat_VarGetStructField+0x7c>
   4d5bc:	ldr	r3, [r5, #52]	; 0x34
   4d5c0:	ldr	r3, [r3, #4]
   4d5c4:	cmp	r3, #0
   4d5c8:	ble	4d5fc <Mat_VarGetStructField+0x84>
   4d5cc:	cmp	r7, #2
   4d5d0:	bne	4d614 <Mat_VarGetStructField+0x9c>
   4d5d4:	ldr	r0, [r6]
   4d5d8:	cmp	r0, #0
   4d5dc:	beq	4d600 <Mat_VarGetStructField+0x88>
   4d5e0:	sub	r1, r0, #1
   4d5e4:	mov	r2, r4
   4d5e8:	mov	r0, r5
   4d5ec:	bl	1688 <Mat_VarGetStructFieldByIndex@plt>
   4d5f0:	b	4d600 <Mat_VarGetStructField+0x88>
   4d5f4:	cmp	r3, r4
   4d5f8:	bhi	4d5bc <Mat_VarGetStructField+0x44>
   4d5fc:	mov	r0, #0
   4d600:	add	sp, sp, #12
   4d604:	ldrd	r4, [sp]
   4d608:	ldrd	r6, [sp, #8]
   4d60c:	add	sp, sp, #16
   4d610:	pop	{pc}		; (ldr pc, [sp], #4)
   4d614:	cmp	r7, #1
   4d618:	bne	4d5fc <Mat_VarGetStructField+0x84>
   4d61c:	mov	r2, r4
   4d620:	mov	r1, r6
   4d624:	mov	r0, r5
   4d628:	bl	1670 <Mat_VarGetStructFieldByName@plt>
   4d62c:	b	4d600 <Mat_VarGetStructField+0x88>

0004d630 <Mat_VarGetStructs>:
   4d630:	clz	ip, r1
   4d634:	cmp	r0, #0
   4d638:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4d63c:	lsr	ip, ip, #5
   4d640:	strd	r6, [sp, #8]
   4d644:	strd	r8, [sp, #16]
   4d648:	mov	r8, #0
   4d64c:	mov	r9, #0
   4d650:	strd	sl, [sp, #24]
   4d654:	str	lr, [sp, #32]
   4d658:	sub	sp, sp, #172	; 0xac
   4d65c:	movne	lr, ip
   4d660:	add	r6, sp, #128	; 0x80
   4d664:	add	r4, sp, #48	; 0x30
   4d668:	ldr	r5, [sp, #208]	; 0xd0
   4d66c:	moveq	lr, #1
   4d670:	strd	r8, [r6, #8]
   4d674:	cmp	lr, #0
   4d678:	strd	r8, [r6, #16]
   4d67c:	strd	r8, [r6, #24]
   4d680:	strd	r8, [r6, #32]
   4d684:	str	r4, [sp, #32]
   4d688:	strd	r8, [sp, #48]	; 0x30
   4d68c:	strd	r8, [sp, #56]	; 0x38
   4d690:	strd	r8, [sp, #64]	; 0x40
   4d694:	strd	r8, [sp, #72]	; 0x48
   4d698:	strd	r8, [sp, #80]	; 0x50
   4d69c:	strd	r8, [sp, #88]	; 0x58
   4d6a0:	strd	r8, [sp, #96]	; 0x60
   4d6a4:	strd	r8, [sp, #104]	; 0x68
   4d6a8:	strd	r8, [sp, #112]	; 0x70
   4d6ac:	strd	r8, [sp, #120]	; 0x78
   4d6b0:	strd	r8, [sp, #128]	; 0x80
   4d6b4:	bne	4d9e0 <Mat_VarGetStructs+0x3b0>
   4d6b8:	clz	ip, r3
   4d6bc:	cmp	r2, #0
   4d6c0:	lsr	ip, ip, #5
   4d6c4:	moveq	ip, #1
   4d6c8:	cmp	ip, #0
   4d6cc:	strne	lr, [sp, #44]	; 0x2c
   4d6d0:	bne	4d99c <Mat_VarGetStructs+0x36c>
   4d6d4:	ldr	lr, [r0, #4]
   4d6d8:	mov	r4, r0
   4d6dc:	cmp	lr, #9
   4d6e0:	bgt	4d998 <Mat_VarGetStructs+0x368>
   4d6e4:	ldr	lr, [r0, #16]
   4d6e8:	cmp	lr, #2
   4d6ec:	bne	4d998 <Mat_VarGetStructs+0x368>
   4d6f0:	str	r2, [sp, #4]
   4d6f4:	str	r1, [sp, #40]	; 0x28
   4d6f8:	mov	r1, ip
   4d6fc:	str	r3, [sp, #12]
   4d700:	bl	16ac <Mat_VarDuplicate@plt>
   4d704:	cmp	r5, #0
   4d708:	str	r0, [sp, #44]	; 0x2c
   4d70c:	moveq	r3, #1
   4d710:	ldr	sl, [sp, #12]
   4d714:	streq	r3, [r0, #44]	; 0x2c
   4d718:	ldr	fp, [r4, #32]
   4d71c:	ldr	r3, [sp, #44]	; 0x2c
   4d720:	ldr	r1, [r4, #52]	; 0x34
   4d724:	ldr	ip, [sl]
   4d728:	ldr	lr, [r3, #32]
   4d72c:	ldr	r1, [r1, #4]
   4d730:	ldr	r9, [sp, #40]	; 0x28
   4d734:	ldr	r2, [fp]
   4d738:	str	r1, [sp]
   4d73c:	str	ip, [sp, #36]	; 0x24
   4d740:	ldr	r3, [r9]
   4d744:	str	ip, [lr]
   4d748:	ldr	r1, [r4, #4]
   4d74c:	str	r2, [sp, #128]	; 0x80
   4d750:	ldr	r0, [r9]
   4d754:	cmp	r1, #1
   4d758:	str	r0, [sp, #48]	; 0x30
   4d75c:	ble	4d7c0 <Mat_VarGetStructs+0x190>
   4d760:	mov	r1, r6
   4d764:	mov	r0, #1
   4d768:	str	r5, [sp, #208]	; 0xd0
   4d76c:	add	r6, sp, #52	; 0x34
   4d770:	mov	r5, ip
   4d774:	b	4d77c <Mat_VarGetStructs+0x14c>
   4d778:	ldr	r2, [r1]
   4d77c:	mov	r7, r1
   4d780:	add	r0, r0, #1
   4d784:	ldr	r8, [fp, #4]!
   4d788:	ldr	ip, [sl, #4]!
   4d78c:	mul	r2, r2, r8
   4d790:	ldr	r8, [r9, #4]!
   4d794:	mul	r5, ip, r5
   4d798:	str	ip, [lr, #4]!
   4d79c:	ldr	ip, [r4, #4]
   4d7a0:	str	r2, [r1, #4]!
   4d7a4:	ldr	r2, [r7]
   4d7a8:	str	r8, [r6], #4
   4d7ac:	cmp	ip, r0
   4d7b0:	mla	r3, r2, r8, r3
   4d7b4:	bgt	4d778 <Mat_VarGetStructs+0x148>
   4d7b8:	str	r5, [sp, #36]	; 0x24
   4d7bc:	ldr	r5, [sp, #208]	; 0xd0
   4d7c0:	ldr	r1, [sp]
   4d7c4:	ldr	r7, [sp, #36]	; 0x24
   4d7c8:	ldr	r8, [sp, #44]	; 0x2c
   4d7cc:	lsl	r2, r1, #2
   4d7d0:	mul	r6, r3, r1
   4d7d4:	mul	r0, r7, r2
   4d7d8:	str	r2, [sp, #8]
   4d7dc:	str	r0, [r8]
   4d7e0:	bl	1544 <malloc@plt>
   4d7e4:	cmp	r0, #0
   4d7e8:	str	r0, [sp, #16]
   4d7ec:	str	r0, [r8, #40]	; 0x28
   4d7f0:	beq	4d9ec <Mat_VarGetStructs+0x3bc>
   4d7f4:	cmp	r7, #0
   4d7f8:	beq	4d99c <Mat_VarGetStructs+0x36c>
   4d7fc:	ldr	r3, [sp, #12]
   4d800:	ldr	r9, [r3]
   4d804:	mov	r3, #0
   4d808:	str	r3, [sp, #24]
   4d80c:	cmp	r9, #0
   4d810:	ble	4d8c4 <Mat_VarGetStructs+0x294>
   4d814:	ldr	r3, [sp, #8]
   4d818:	mov	sl, #0
   4d81c:	ldr	r2, [sp, #24]
   4d820:	mla	fp, r2, r3, r3
   4d824:	mul	r8, r2, r3
   4d828:	ldr	r3, [sp, #16]
   4d82c:	add	fp, fp, r3
   4d830:	ldr	r3, [sp]
   4d834:	cmp	r3, #0
   4d838:	beq	4d89c <Mat_VarGetStructs+0x26c>
   4d83c:	ldr	r3, [sp, #16]
   4d840:	rsb	r9, r3, r6, lsl #2
   4d844:	add	r7, r3, r8
   4d848:	sub	r9, r9, r8
   4d84c:	b	4d85c <Mat_VarGetStructs+0x22c>
   4d850:	add	r7, r7, #4
   4d854:	cmp	fp, r7
   4d858:	beq	4d88c <Mat_VarGetStructs+0x25c>
   4d85c:	ldr	r3, [r4, #40]	; 0x28
   4d860:	cmp	r5, #0
   4d864:	add	r3, r3, r9
   4d868:	ldr	r0, [r3, r7]
   4d86c:	streq	r0, [r7]
   4d870:	beq	4d850 <Mat_VarGetStructs+0x220>
   4d874:	mov	r1, #1
   4d878:	add	r7, r7, #4
   4d87c:	bl	16ac <Mat_VarDuplicate@plt>
   4d880:	str	r0, [r7, #-4]
   4d884:	cmp	fp, r7
   4d888:	bne	4d85c <Mat_VarGetStructs+0x22c>
   4d88c:	ldr	r3, [sp, #12]
   4d890:	ldr	r9, [r3]
   4d894:	ldr	r3, [sp]
   4d898:	add	r6, r6, r3
   4d89c:	ldrd	r2, [sp, #4]
   4d8a0:	add	sl, sl, #1
   4d8a4:	cmp	r9, sl
   4d8a8:	ldr	r1, [r2]
   4d8ac:	add	fp, fp, r3
   4d8b0:	add	r8, r8, r3
   4d8b4:	ldr	r3, [sp]
   4d8b8:	sub	r1, r1, #1
   4d8bc:	mla	r6, r3, r1, r6
   4d8c0:	bgt	4d830 <Mat_VarGetStructs+0x200>
   4d8c4:	ldr	r3, [sp, #4]
   4d8c8:	ldr	r7, [sp, #40]	; 0x28
   4d8cc:	ldr	r2, [sp, #52]	; 0x34
   4d8d0:	ldr	r1, [r3, #4]
   4d8d4:	ldr	lr, [sp, #92]	; 0x5c
   4d8d8:	ldr	sl, [r4, #4]
   4d8dc:	add	r2, r2, r1
   4d8e0:	ldr	r3, [r7]
   4d8e4:	add	lr, lr, #1
   4d8e8:	cmp	sl, #1
   4d8ec:	str	r3, [sp, #48]	; 0x30
   4d8f0:	str	r2, [sp, #52]	; 0x34
   4d8f4:	str	lr, [sp, #92]	; 0x5c
   4d8f8:	ble	4d9bc <Mat_VarGetStructs+0x38c>
   4d8fc:	sub	r2, r7, #4
   4d900:	add	r6, sp, #124	; 0x7c
   4d904:	ldr	r8, [sp, #12]
   4d908:	add	r0, sp, #96	; 0x60
   4d90c:	mov	ip, #1
   4d910:	sub	fp, sl, #1
   4d914:	str	r2, [sp, #20]
   4d918:	ldr	r1, [sp, #32]
   4d91c:	b	4d940 <Mat_VarGetStructs+0x310>
   4d920:	ldr	lr, [r1, #4]
   4d924:	cmp	sl, r2
   4d928:	add	r1, r1, #4
   4d92c:	ldr	r7, [r6, #4]!
   4d930:	mov	ip, r2
   4d934:	mla	r3, r7, lr, r3
   4d938:	beq	4d9bc <Mat_VarGetStructs+0x38c>
   4d93c:	ldr	lr, [r0], #4
   4d940:	add	r2, ip, #1
   4d944:	ldr	r7, [r8, #4]!
   4d948:	cmp	r7, lr
   4d94c:	bne	4d920 <Mat_VarGetStructs+0x2f0>
   4d950:	ldr	lr, [sp, #20]
   4d954:	cmp	fp, ip
   4d958:	mov	ip, #0
   4d95c:	str	ip, [r0, #-4]
   4d960:	ldr	lr, [lr, r2, lsl #2]
   4d964:	str	lr, [r1, #4]
   4d968:	ble	4d924 <Mat_VarGetStructs+0x2f4>
   4d96c:	ldr	r7, [sp, #4]
   4d970:	ldr	ip, [r0]
   4d974:	ldr	r7, [r7, r2, lsl #2]
   4d978:	add	ip, ip, #1
   4d97c:	str	ip, [r0]
   4d980:	str	r7, [sp, #28]
   4d984:	ldr	r7, [r1, #8]
   4d988:	ldr	ip, [sp, #28]
   4d98c:	add	r7, r7, ip
   4d990:	str	r7, [r1, #8]
   4d994:	b	4d924 <Mat_VarGetStructs+0x2f4>
   4d998:	str	ip, [sp, #44]	; 0x2c
   4d99c:	ldr	r0, [sp, #44]	; 0x2c
   4d9a0:	add	sp, sp, #172	; 0xac
   4d9a4:	ldrd	r4, [sp]
   4d9a8:	ldrd	r6, [sp, #8]
   4d9ac:	ldrd	r8, [sp, #16]
   4d9b0:	ldrd	sl, [sp, #24]
   4d9b4:	add	sp, sp, #32
   4d9b8:	pop	{pc}		; (ldr pc, [sp], #4)
   4d9bc:	ldr	r1, [sp]
   4d9c0:	ldr	r2, [sp, #24]
   4d9c4:	mul	r6, r3, r1
   4d9c8:	ldr	r3, [sp, #36]	; 0x24
   4d9cc:	add	r2, r2, r9
   4d9d0:	str	r2, [sp, #24]
   4d9d4:	cmp	r2, r3
   4d9d8:	bcc	4d80c <Mat_VarGetStructs+0x1dc>
   4d9dc:	b	4d99c <Mat_VarGetStructs+0x36c>
   4d9e0:	mov	r3, #0
   4d9e4:	str	r3, [sp, #44]	; 0x2c
   4d9e8:	b	4d99c <Mat_VarGetStructs+0x36c>
   4d9ec:	ldr	r3, [sp, #16]
   4d9f0:	ldr	r0, [sp, #44]	; 0x2c
   4d9f4:	str	r3, [sp, #44]	; 0x2c
   4d9f8:	bl	158c <Mat_VarFree@plt>
   4d9fc:	b	4d99c <Mat_VarGetStructs+0x36c>

0004da00 <Mat_VarGetStructsLinear>:
   4da00:	subs	ip, r0, #0
   4da04:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4da08:	strd	r6, [sp, #8]
   4da0c:	strd	r8, [sp, #16]
   4da10:	strd	sl, [sp, #24]
   4da14:	str	lr, [sp, #32]
   4da18:	sub	sp, sp, #28
   4da1c:	streq	ip, [sp, #20]
   4da20:	beq	4db3c <Mat_VarGetStructsLinear+0x13c>
   4da24:	ldr	lr, [ip, #4]
   4da28:	cmp	lr, #10
   4da2c:	bgt	4db5c <Mat_VarGetStructsLinear+0x15c>
   4da30:	mov	r4, r1
   4da34:	mov	r1, #0
   4da38:	str	r3, [sp, #4]
   4da3c:	mov	fp, ip
   4da40:	mov	r5, r2
   4da44:	bl	16ac <Mat_VarDuplicate@plt>
   4da48:	ldr	r3, [sp, #64]	; 0x40
   4da4c:	str	r0, [sp, #20]
   4da50:	ldr	r6, [sp, #20]
   4da54:	cmp	r3, #0
   4da58:	moveq	r3, #1
   4da5c:	streq	r3, [r0, #44]	; 0x2c
   4da60:	ldr	r3, [fp, #52]	; 0x34
   4da64:	ldr	r9, [r3, #4]
   4da68:	ldr	r3, [sp, #4]
   4da6c:	mul	r3, r3, r9
   4da70:	lsl	r3, r3, #2
   4da74:	mov	r0, r3
   4da78:	str	r3, [r6]
   4da7c:	bl	1544 <malloc@plt>
   4da80:	cmp	r0, #0
   4da84:	mov	r3, r0
   4da88:	str	r0, [sp, #8]
   4da8c:	str	r0, [r6, #40]	; 0x28
   4da90:	beq	4dba8 <Mat_VarGetStructsLinear+0x1a8>
   4da94:	ldr	r2, [sp, #4]
   4da98:	mov	r1, #1
   4da9c:	mul	r4, r4, r9
   4daa0:	ldr	r3, [sp, #20]
   4daa4:	cmp	r2, #0
   4daa8:	ldr	r3, [r3, #32]
   4daac:	str	r2, [r3]
   4dab0:	str	r1, [r3, #4]
   4dab4:	ble	4db3c <Mat_VarGetStructsLinear+0x13c>
   4dab8:	sub	r5, r5, #1
   4dabc:	lsl	r3, r9, #2
   4dac0:	mov	r7, #0
   4dac4:	mov	r8, r7
   4dac8:	mul	r2, r9, r5
   4dacc:	strd	r2, [sp, #12]
   4dad0:	ldr	r2, [sp, #8]
   4dad4:	add	r6, r2, r3
   4dad8:	ldr	r3, [sp, #64]	; 0x40
   4dadc:	cmp	r3, #0
   4dae0:	bne	4db68 <Mat_VarGetStructsLinear+0x168>
   4dae4:	cmp	r9, #0
   4dae8:	ble	4db18 <Mat_VarGetStructsLinear+0x118>
   4daec:	ldr	r0, [fp, #40]	; 0x28
   4daf0:	add	ip, r9, r4
   4daf4:	ldr	r3, [sp, #8]
   4daf8:	add	r4, r0, r4, lsl #2
   4dafc:	add	r0, r0, ip, lsl #2
   4db00:	add	r3, r3, r7
   4db04:	ldr	r2, [r4], #4
   4db08:	cmp	r4, r0
   4db0c:	str	r2, [r3], #4
   4db10:	bne	4db04 <Mat_VarGetStructsLinear+0x104>
   4db14:	mov	r4, ip
   4db18:	ldr	r3, [sp, #12]
   4db1c:	add	r8, r8, #1
   4db20:	add	r4, r4, r3
   4db24:	ldr	r3, [sp, #4]
   4db28:	cmp	r3, r8
   4db2c:	ldr	r3, [sp, #16]
   4db30:	add	r7, r7, r3
   4db34:	add	r6, r6, r3
   4db38:	bne	4dad8 <Mat_VarGetStructsLinear+0xd8>
   4db3c:	ldr	r0, [sp, #20]
   4db40:	add	sp, sp, #28
   4db44:	ldrd	r4, [sp]
   4db48:	ldrd	r6, [sp, #8]
   4db4c:	ldrd	r8, [sp, #16]
   4db50:	ldrd	sl, [sp, #24]
   4db54:	add	sp, sp, #32
   4db58:	pop	{pc}		; (ldr pc, [sp], #4)
   4db5c:	mov	r3, #0
   4db60:	str	r3, [sp, #20]
   4db64:	b	4db3c <Mat_VarGetStructsLinear+0x13c>
   4db68:	cmp	r9, #0
   4db6c:	ble	4db18 <Mat_VarGetStructsLinear+0x118>
   4db70:	ldr	r3, [sp, #8]
   4db74:	rsb	r5, r7, r4, lsl #2
   4db78:	add	sl, r3, r7
   4db7c:	sub	r5, r5, r3
   4db80:	ldr	r3, [fp, #40]	; 0x28
   4db84:	mov	r1, #1
   4db88:	add	r3, r3, r5
   4db8c:	ldr	r0, [r3, sl]
   4db90:	bl	16ac <Mat_VarDuplicate@plt>
   4db94:	str	r0, [sl], #4
   4db98:	cmp	sl, r6
   4db9c:	bne	4db80 <Mat_VarGetStructsLinear+0x180>
   4dba0:	add	r4, r9, r4
   4dba4:	b	4db18 <Mat_VarGetStructsLinear+0x118>
   4dba8:	ldr	r0, [sp, #20]
   4dbac:	str	r3, [sp, #20]
   4dbb0:	bl	158c <Mat_VarFree@plt>
   4dbb4:	b	4db3c <Mat_VarGetStructsLinear+0x13c>

0004dbb8 <Mat_VarSetStructFieldByIndex>:
   4dbb8:	strd	r4, [sp, #-20]!	; 0xffffffec
   4dbbc:	subs	ip, r0, #0
   4dbc0:	strd	r6, [sp, #8]
   4dbc4:	str	lr, [sp, #16]
   4dbc8:	sub	sp, sp, #12
   4dbcc:	mov	lr, #1
   4dbd0:	str	lr, [sp, #4]
   4dbd4:	beq	4dc58 <Mat_VarSetStructFieldByIndex+0xa0>
   4dbd8:	ldr	lr, [ip, #16]
   4dbdc:	cmp	lr, #2
   4dbe0:	bne	4dc58 <Mat_VarSetStructFieldByIndex+0xa0>
   4dbe4:	ldr	lr, [ip, #40]	; 0x28
   4dbe8:	cmp	lr, #0
   4dbec:	beq	4dc58 <Mat_VarSetStructFieldByIndex+0xa0>
   4dbf0:	mov	r5, r1
   4dbf4:	mov	r4, ip
   4dbf8:	add	r1, sp, #4
   4dbfc:	mov	r7, r2
   4dc00:	mov	r6, r3
   4dc04:	bl	4996c <SafeMulDims>
   4dc08:	ldr	r3, [r4, #52]	; 0x34
   4dc0c:	ldr	r1, [sp, #4]
   4dc10:	ldr	r2, [r3, #4]
   4dc14:	cmp	r1, r7
   4dc18:	cmphi	r2, r5
   4dc1c:	bls	4dc58 <Mat_VarSetStructFieldByIndex+0xa0>
   4dc20:	ldr	r0, [r6, #36]	; 0x24
   4dc24:	mla	r2, r7, r2, r5
   4dc28:	ldr	r1, [r4, #40]	; 0x28
   4dc2c:	cmp	r0, #0
   4dc30:	ldr	r7, [r1, r2, lsl #2]
   4dc34:	str	r6, [r1, r2, lsl #2]
   4dc38:	beq	4dc44 <Mat_VarSetStructFieldByIndex+0x8c>
   4dc3c:	bl	1478 <free@plt>
   4dc40:	ldr	r3, [r4, #52]	; 0x34
   4dc44:	ldr	r3, [r3, #8]
   4dc48:	ldr	r0, [r3, r5, lsl #2]
   4dc4c:	bl	14cc <strdup@plt>
   4dc50:	str	r0, [r6, #36]	; 0x24
   4dc54:	b	4dc5c <Mat_VarSetStructFieldByIndex+0xa4>
   4dc58:	mov	r7, #0
   4dc5c:	mov	r0, r7
   4dc60:	add	sp, sp, #12
   4dc64:	ldrd	r4, [sp]
   4dc68:	ldrd	r6, [sp, #8]
   4dc6c:	add	sp, sp, #16
   4dc70:	pop	{pc}		; (ldr pc, [sp], #4)

0004dc74 <Mat_VarSetStructFieldByName>:
   4dc74:	mov	ip, #1
   4dc78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   4dc7c:	strd	r6, [sp, #8]
   4dc80:	strd	r8, [sp, #16]
   4dc84:	subs	r8, r0, #0
   4dc88:	strd	sl, [sp, #24]
   4dc8c:	str	lr, [sp, #32]
   4dc90:	sub	sp, sp, #20
   4dc94:	str	ip, [sp, #12]
   4dc98:	beq	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dc9c:	ldr	ip, [r8, #16]
   4dca0:	cmp	ip, #2
   4dca4:	bne	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dca8:	ldr	ip, [r8, #40]	; 0x28
   4dcac:	cmp	ip, #0
   4dcb0:	beq	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dcb4:	mov	r6, r1
   4dcb8:	add	r1, sp, #12
   4dcbc:	str	r2, [sp, #4]
   4dcc0:	mov	r9, r3
   4dcc4:	bl	4996c <SafeMulDims>
   4dcc8:	ldr	r3, [r8, #52]	; 0x34
   4dccc:	ldr	r7, [r3, #4]
   4dcd0:	cmp	r7, #0
   4dcd4:	ble	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dcd8:	ldr	r5, [r3, #8]
   4dcdc:	mov	r4, #0
   4dce0:	sub	r5, r5, #4
   4dce4:	b	4dcf4 <Mat_VarSetStructFieldByName+0x80>
   4dce8:	add	r4, r4, #1
   4dcec:	cmp	r7, r4
   4dcf0:	beq	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dcf4:	ldr	sl, [r5, #4]!
   4dcf8:	mov	r1, r6
   4dcfc:	lsl	fp, r4, #2
   4dd00:	mov	r0, sl
   4dd04:	bl	1424 <strcmp@plt>
   4dd08:	cmp	r0, #0
   4dd0c:	bne	4dce8 <Mat_VarSetStructFieldByName+0x74>
   4dd10:	ldr	r3, [sp, #4]
   4dd14:	ldr	r2, [sp, #12]
   4dd18:	cmp	r3, r2
   4dd1c:	bcs	4dd60 <Mat_VarSetStructFieldByName+0xec>
   4dd20:	ldr	r3, [sp, #4]
   4dd24:	ldr	r0, [r9, #36]	; 0x24
   4dd28:	ldr	r2, [r8, #40]	; 0x28
   4dd2c:	mla	r4, r3, r7, r4
   4dd30:	cmp	r0, #0
   4dd34:	ldr	r5, [r2, r4, lsl #2]
   4dd38:	str	r9, [r2, r4, lsl #2]
   4dd3c:	beq	4dd50 <Mat_VarSetStructFieldByName+0xdc>
   4dd40:	bl	1478 <free@plt>
   4dd44:	ldr	r3, [r8, #52]	; 0x34
   4dd48:	ldr	r3, [r3, #8]
   4dd4c:	ldr	sl, [r3, fp]
   4dd50:	mov	r0, sl
   4dd54:	bl	14cc <strdup@plt>
   4dd58:	str	r0, [r9, #36]	; 0x24
   4dd5c:	b	4dd64 <Mat_VarSetStructFieldByName+0xf0>
   4dd60:	mov	r5, #0
   4dd64:	mov	r0, r5
   4dd68:	add	sp, sp, #20
   4dd6c:	ldrd	r4, [sp]
   4dd70:	ldrd	r6, [sp, #8]
   4dd74:	ldrd	r8, [sp, #16]
   4dd78:	ldrd	sl, [sp, #24]
   4dd7c:	add	sp, sp, #32
   4dd80:	pop	{pc}		; (ldr pc, [sp], #4)

0004dd84 <__aeabi_drsub>:
   4dd84:	eor	r1, r1, #-2147483648	; 0x80000000
   4dd88:	b	4dd90 <__adddf3>

0004dd8c <__aeabi_dsub>:
   4dd8c:	eor	r3, r3, #-2147483648	; 0x80000000

0004dd90 <__adddf3>:
   4dd90:	push	{r4, r5, lr}
   4dd94:	lsl	r4, r1, #1
   4dd98:	lsl	r5, r3, #1
   4dd9c:	teq	r4, r5
   4dda0:	teqeq	r0, r2
   4dda4:	orrsne	ip, r4, r0
   4dda8:	orrsne	ip, r5, r2
   4ddac:	mvnsne	ip, r4, asr #21
   4ddb0:	mvnsne	ip, r5, asr #21
   4ddb4:	beq	4dfa0 <__adddf3+0x210>
   4ddb8:	lsr	r4, r4, #21
   4ddbc:	rsbs	r5, r4, r5, lsr #21
   4ddc0:	rsblt	r5, r5, #0
   4ddc4:	ble	4dde4 <__adddf3+0x54>
   4ddc8:	add	r4, r4, r5
   4ddcc:	eor	r2, r0, r2
   4ddd0:	eor	r3, r1, r3
   4ddd4:	eor	r0, r2, r0
   4ddd8:	eor	r1, r3, r1
   4dddc:	eor	r2, r0, r2
   4dde0:	eor	r3, r1, r3
   4dde4:	cmp	r5, #54	; 0x36
   4dde8:	pophi	{r4, r5, pc}
   4ddec:	tst	r1, #-2147483648	; 0x80000000
   4ddf0:	lsl	r1, r1, #12
   4ddf4:	mov	ip, #1048576	; 0x100000
   4ddf8:	orr	r1, ip, r1, lsr #12
   4ddfc:	beq	4de08 <__adddf3+0x78>
   4de00:	rsbs	r0, r0, #0
   4de04:	rsc	r1, r1, #0
   4de08:	tst	r3, #-2147483648	; 0x80000000
   4de0c:	lsl	r3, r3, #12
   4de10:	orr	r3, ip, r3, lsr #12
   4de14:	beq	4de20 <__adddf3+0x90>
   4de18:	rsbs	r2, r2, #0
   4de1c:	rsc	r3, r3, #0
   4de20:	teq	r4, r5
   4de24:	beq	4df88 <__adddf3+0x1f8>
   4de28:	sub	r4, r4, #1
   4de2c:	rsbs	lr, r5, #32
   4de30:	blt	4de4c <__adddf3+0xbc>
   4de34:	lsl	ip, r2, lr
   4de38:	adds	r0, r0, r2, lsr r5
   4de3c:	adc	r1, r1, #0
   4de40:	adds	r0, r0, r3, lsl lr
   4de44:	adcs	r1, r1, r3, asr r5
   4de48:	b	4de68 <__adddf3+0xd8>
   4de4c:	sub	r5, r5, #32
   4de50:	add	lr, lr, #32
   4de54:	cmp	r2, #1
   4de58:	lsl	ip, r3, lr
   4de5c:	orrcs	ip, ip, #2
   4de60:	adds	r0, r0, r3, asr r5
   4de64:	adcs	r1, r1, r3, asr #31
   4de68:	and	r5, r1, #-2147483648	; 0x80000000
   4de6c:	bpl	4de7c <__adddf3+0xec>
   4de70:	rsbs	ip, ip, #0
   4de74:	rscs	r0, r0, #0
   4de78:	rsc	r1, r1, #0
   4de7c:	cmp	r1, #1048576	; 0x100000
   4de80:	bcc	4dec0 <__adddf3+0x130>
   4de84:	cmp	r1, #2097152	; 0x200000
   4de88:	bcc	4dea8 <__adddf3+0x118>
   4de8c:	lsrs	r1, r1, #1
   4de90:	rrxs	r0, r0
   4de94:	rrx	ip, ip
   4de98:	add	r4, r4, #1
   4de9c:	lsl	r2, r4, #21
   4dea0:	cmn	r2, #4194304	; 0x400000
   4dea4:	bcs	4e000 <__adddf3+0x270>
   4dea8:	cmp	ip, #-2147483648	; 0x80000000
   4deac:	lsrseq	ip, r0, #1
   4deb0:	adcs	r0, r0, #0
   4deb4:	adc	r1, r1, r4, lsl #20
   4deb8:	orr	r1, r1, r5
   4debc:	pop	{r4, r5, pc}
   4dec0:	lsls	ip, ip, #1
   4dec4:	adcs	r0, r0, r0
   4dec8:	adc	r1, r1, r1
   4decc:	tst	r1, #1048576	; 0x100000
   4ded0:	sub	r4, r4, #1
   4ded4:	bne	4dea8 <__adddf3+0x118>
   4ded8:	teq	r1, #0
   4dedc:	moveq	r1, r0
   4dee0:	moveq	r0, #0
   4dee4:	clz	r3, r1
   4dee8:	addeq	r3, r3, #32
   4deec:	sub	r3, r3, #11
   4def0:	subs	r2, r3, #32
   4def4:	bge	4df18 <__adddf3+0x188>
   4def8:	adds	r2, r2, #12
   4defc:	ble	4df14 <__adddf3+0x184>
   4df00:	add	ip, r2, #20
   4df04:	rsb	r2, r2, #12
   4df08:	lsl	r0, r1, ip
   4df0c:	lsr	r1, r1, r2
   4df10:	b	4df28 <__adddf3+0x198>
   4df14:	add	r2, r2, #20
   4df18:	rsble	ip, r2, #32
   4df1c:	lsl	r1, r1, r2
   4df20:	orrle	r1, r1, r0, lsr ip
   4df24:	lslle	r0, r0, r2
   4df28:	subs	r4, r4, r3
   4df2c:	addge	r1, r1, r4, lsl #20
   4df30:	orrge	r1, r1, r5
   4df34:	popge	{r4, r5, pc}
   4df38:	mvn	r4, r4
   4df3c:	subs	r4, r4, #31
   4df40:	bge	4df7c <__adddf3+0x1ec>
   4df44:	adds	r4, r4, #12
   4df48:	bgt	4df64 <__adddf3+0x1d4>
   4df4c:	add	r4, r4, #20
   4df50:	rsb	r2, r4, #32
   4df54:	lsr	r0, r0, r4
   4df58:	orr	r0, r0, r1, lsl r2
   4df5c:	orr	r1, r5, r1, lsr r4
   4df60:	pop	{r4, r5, pc}
   4df64:	rsb	r4, r4, #12
   4df68:	rsb	r2, r4, #32
   4df6c:	lsr	r0, r0, r2
   4df70:	orr	r0, r0, r1, lsl r4
   4df74:	mov	r1, r5
   4df78:	pop	{r4, r5, pc}
   4df7c:	lsr	r0, r1, r4
   4df80:	mov	r1, r5
   4df84:	pop	{r4, r5, pc}
   4df88:	teq	r4, #0
   4df8c:	eor	r3, r3, #1048576	; 0x100000
   4df90:	eoreq	r1, r1, #1048576	; 0x100000
   4df94:	addeq	r4, r4, #1
   4df98:	subne	r5, r5, #1
   4df9c:	b	4de28 <__adddf3+0x98>
   4dfa0:	mvns	ip, r4, asr #21
   4dfa4:	mvnsne	ip, r5, asr #21
   4dfa8:	beq	4e010 <__adddf3+0x280>
   4dfac:	teq	r4, r5
   4dfb0:	teqeq	r0, r2
   4dfb4:	beq	4dfc8 <__adddf3+0x238>
   4dfb8:	orrs	ip, r4, r0
   4dfbc:	moveq	r1, r3
   4dfc0:	moveq	r0, r2
   4dfc4:	pop	{r4, r5, pc}
   4dfc8:	teq	r1, r3
   4dfcc:	movne	r1, #0
   4dfd0:	movne	r0, #0
   4dfd4:	popne	{r4, r5, pc}
   4dfd8:	lsrs	ip, r4, #21
   4dfdc:	bne	4dff0 <__adddf3+0x260>
   4dfe0:	lsls	r0, r0, #1
   4dfe4:	adcs	r1, r1, r1
   4dfe8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4dfec:	pop	{r4, r5, pc}
   4dff0:	adds	r4, r4, #4194304	; 0x400000
   4dff4:	addcc	r1, r1, #1048576	; 0x100000
   4dff8:	popcc	{r4, r5, pc}
   4dffc:	and	r5, r1, #-2147483648	; 0x80000000
   4e000:	orr	r1, r5, #2130706432	; 0x7f000000
   4e004:	orr	r1, r1, #15728640	; 0xf00000
   4e008:	mov	r0, #0
   4e00c:	pop	{r4, r5, pc}
   4e010:	mvns	ip, r4, asr #21
   4e014:	movne	r1, r3
   4e018:	movne	r0, r2
   4e01c:	mvnseq	ip, r5, asr #21
   4e020:	movne	r3, r1
   4e024:	movne	r2, r0
   4e028:	orrs	r4, r0, r1, lsl #12
   4e02c:	orrseq	r5, r2, r3, lsl #12
   4e030:	teqeq	r1, r3
   4e034:	orrne	r1, r1, #524288	; 0x80000
   4e038:	pop	{r4, r5, pc}

0004e03c <__aeabi_ui2d>:
   4e03c:	teq	r0, #0
   4e040:	moveq	r1, #0
   4e044:	bxeq	lr
   4e048:	push	{r4, r5, lr}
   4e04c:	mov	r4, #1024	; 0x400
   4e050:	add	r4, r4, #50	; 0x32
   4e054:	mov	r5, #0
   4e058:	mov	r1, #0
   4e05c:	b	4ded8 <__adddf3+0x148>

0004e060 <__aeabi_i2d>:
   4e060:	teq	r0, #0
   4e064:	moveq	r1, #0
   4e068:	bxeq	lr
   4e06c:	push	{r4, r5, lr}
   4e070:	mov	r4, #1024	; 0x400
   4e074:	add	r4, r4, #50	; 0x32
   4e078:	ands	r5, r0, #-2147483648	; 0x80000000
   4e07c:	rsbmi	r0, r0, #0
   4e080:	mov	r1, #0
   4e084:	b	4ded8 <__adddf3+0x148>

0004e088 <__aeabi_f2d>:
   4e088:	lsls	r2, r0, #1
   4e08c:	asr	r1, r2, #3
   4e090:	rrx	r1, r1
   4e094:	lsl	r0, r2, #28
   4e098:	andsne	r3, r2, #-16777216	; 0xff000000
   4e09c:	teqne	r3, #-16777216	; 0xff000000
   4e0a0:	eorne	r1, r1, #939524096	; 0x38000000
   4e0a4:	bxne	lr
   4e0a8:	bics	r2, r2, #-16777216	; 0xff000000
   4e0ac:	bxeq	lr
   4e0b0:	teq	r3, #-16777216	; 0xff000000
   4e0b4:	orreq	r1, r1, #524288	; 0x80000
   4e0b8:	bxeq	lr
   4e0bc:	push	{r4, r5, lr}
   4e0c0:	mov	r4, #896	; 0x380
   4e0c4:	and	r5, r1, #-2147483648	; 0x80000000
   4e0c8:	bic	r1, r1, #-2147483648	; 0x80000000
   4e0cc:	b	4ded8 <__adddf3+0x148>

0004e0d0 <__aeabi_ul2d>:
   4e0d0:	orrs	r2, r0, r1
   4e0d4:	bxeq	lr
   4e0d8:	push	{r4, r5, lr}
   4e0dc:	mov	r5, #0
   4e0e0:	b	4e100 <__aeabi_l2d+0x1c>

0004e0e4 <__aeabi_l2d>:
   4e0e4:	orrs	r2, r0, r1
   4e0e8:	bxeq	lr
   4e0ec:	push	{r4, r5, lr}
   4e0f0:	ands	r5, r1, #-2147483648	; 0x80000000
   4e0f4:	bpl	4e100 <__aeabi_l2d+0x1c>
   4e0f8:	rsbs	r0, r0, #0
   4e0fc:	rsc	r1, r1, #0
   4e100:	mov	r4, #1024	; 0x400
   4e104:	add	r4, r4, #50	; 0x32
   4e108:	lsrs	ip, r1, #22
   4e10c:	beq	4de7c <__adddf3+0xec>
   4e110:	mov	r2, #3
   4e114:	lsrs	ip, ip, #3
   4e118:	addne	r2, r2, #3
   4e11c:	lsrs	ip, ip, #3
   4e120:	addne	r2, r2, #3
   4e124:	add	r2, r2, ip, lsr #3
   4e128:	rsb	r3, r2, #32
   4e12c:	lsl	ip, r0, r3
   4e130:	lsr	r0, r0, r2
   4e134:	orr	r0, r0, r1, lsl r3
   4e138:	lsr	r1, r1, r2
   4e13c:	add	r4, r4, r2
   4e140:	b	4de7c <__adddf3+0xec>

0004e144 <__aeabi_frsub>:
   4e144:	eor	r0, r0, #-2147483648	; 0x80000000
   4e148:	b	4e150 <__addsf3>

0004e14c <__aeabi_fsub>:
   4e14c:	eor	r1, r1, #-2147483648	; 0x80000000

0004e150 <__addsf3>:
   4e150:	lsls	r2, r0, #1
   4e154:	lslsne	r3, r1, #1
   4e158:	teqne	r2, r3
   4e15c:	mvnsne	ip, r2, asr #24
   4e160:	mvnsne	ip, r3, asr #24
   4e164:	beq	4e25c <__addsf3+0x10c>
   4e168:	lsr	r2, r2, #24
   4e16c:	rsbs	r3, r2, r3, lsr #24
   4e170:	addgt	r2, r2, r3
   4e174:	eorgt	r1, r0, r1
   4e178:	eorgt	r0, r1, r0
   4e17c:	eorgt	r1, r0, r1
   4e180:	rsblt	r3, r3, #0
   4e184:	cmp	r3, #25
   4e188:	bxhi	lr
   4e18c:	tst	r0, #-2147483648	; 0x80000000
   4e190:	orr	r0, r0, #8388608	; 0x800000
   4e194:	bic	r0, r0, #-16777216	; 0xff000000
   4e198:	rsbne	r0, r0, #0
   4e19c:	tst	r1, #-2147483648	; 0x80000000
   4e1a0:	orr	r1, r1, #8388608	; 0x800000
   4e1a4:	bic	r1, r1, #-16777216	; 0xff000000
   4e1a8:	rsbne	r1, r1, #0
   4e1ac:	teq	r2, r3
   4e1b0:	beq	4e244 <__addsf3+0xf4>
   4e1b4:	sub	r2, r2, #1
   4e1b8:	adds	r0, r0, r1, asr r3
   4e1bc:	rsb	r3, r3, #32
   4e1c0:	lsl	r1, r1, r3
   4e1c4:	and	r3, r0, #-2147483648	; 0x80000000
   4e1c8:	bpl	4e1d4 <__addsf3+0x84>
   4e1cc:	rsbs	r1, r1, #0
   4e1d0:	rsc	r0, r0, #0
   4e1d4:	cmp	r0, #8388608	; 0x800000
   4e1d8:	bcc	4e20c <__addsf3+0xbc>
   4e1dc:	cmp	r0, #16777216	; 0x1000000
   4e1e0:	bcc	4e1f8 <__addsf3+0xa8>
   4e1e4:	lsrs	r0, r0, #1
   4e1e8:	rrx	r1, r1
   4e1ec:	add	r2, r2, #1
   4e1f0:	cmp	r2, #254	; 0xfe
   4e1f4:	bcs	4e2b0 <__addsf3+0x160>
   4e1f8:	cmp	r1, #-2147483648	; 0x80000000
   4e1fc:	adc	r0, r0, r2, lsl #23
   4e200:	biceq	r0, r0, #1
   4e204:	orr	r0, r0, r3
   4e208:	bx	lr
   4e20c:	lsls	r1, r1, #1
   4e210:	adc	r0, r0, r0
   4e214:	tst	r0, #8388608	; 0x800000
   4e218:	sub	r2, r2, #1
   4e21c:	bne	4e1f8 <__addsf3+0xa8>
   4e220:	clz	ip, r0
   4e224:	sub	ip, ip, #8
   4e228:	subs	r2, r2, ip
   4e22c:	lsl	r0, r0, ip
   4e230:	addge	r0, r0, r2, lsl #23
   4e234:	rsblt	r2, r2, #0
   4e238:	orrge	r0, r0, r3
   4e23c:	orrlt	r0, r3, r0, lsr r2
   4e240:	bx	lr
   4e244:	teq	r2, #0
   4e248:	eor	r1, r1, #8388608	; 0x800000
   4e24c:	eoreq	r0, r0, #8388608	; 0x800000
   4e250:	addeq	r2, r2, #1
   4e254:	subne	r3, r3, #1
   4e258:	b	4e1b4 <__addsf3+0x64>
   4e25c:	lsl	r3, r1, #1
   4e260:	mvns	ip, r2, asr #24
   4e264:	mvnsne	ip, r3, asr #24
   4e268:	beq	4e2bc <__addsf3+0x16c>
   4e26c:	teq	r2, r3
   4e270:	beq	4e280 <__addsf3+0x130>
   4e274:	teq	r2, #0
   4e278:	moveq	r0, r1
   4e27c:	bx	lr
   4e280:	teq	r0, r1
   4e284:	movne	r0, #0
   4e288:	bxne	lr
   4e28c:	tst	r2, #-16777216	; 0xff000000
   4e290:	bne	4e2a0 <__addsf3+0x150>
   4e294:	lsls	r0, r0, #1
   4e298:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4e29c:	bx	lr
   4e2a0:	adds	r2, r2, #33554432	; 0x2000000
   4e2a4:	addcc	r0, r0, #8388608	; 0x800000
   4e2a8:	bxcc	lr
   4e2ac:	and	r3, r0, #-2147483648	; 0x80000000
   4e2b0:	orr	r0, r3, #2130706432	; 0x7f000000
   4e2b4:	orr	r0, r0, #8388608	; 0x800000
   4e2b8:	bx	lr
   4e2bc:	mvns	r2, r2, asr #24
   4e2c0:	movne	r0, r1
   4e2c4:	mvnseq	r3, r3, asr #24
   4e2c8:	movne	r1, r0
   4e2cc:	lsls	r2, r0, #9
   4e2d0:	lslseq	r3, r1, #9
   4e2d4:	teqeq	r0, r1
   4e2d8:	orrne	r0, r0, #4194304	; 0x400000
   4e2dc:	bx	lr

0004e2e0 <__aeabi_ui2f>:
   4e2e0:	mov	r3, #0
   4e2e4:	b	4e2f0 <__aeabi_i2f+0x8>

0004e2e8 <__aeabi_i2f>:
   4e2e8:	ands	r3, r0, #-2147483648	; 0x80000000
   4e2ec:	rsbmi	r0, r0, #0
   4e2f0:	movs	ip, r0
   4e2f4:	bxeq	lr
   4e2f8:	orr	r3, r3, #1258291200	; 0x4b000000
   4e2fc:	mov	r1, r0
   4e300:	mov	r0, #0
   4e304:	b	4e348 <__aeabi_l2f+0x30>

0004e308 <__aeabi_ul2f>:
   4e308:	orrs	r2, r0, r1
   4e30c:	bxeq	lr
   4e310:	mov	r3, #0
   4e314:	b	4e330 <__aeabi_l2f+0x18>

0004e318 <__aeabi_l2f>:
   4e318:	orrs	r2, r0, r1
   4e31c:	bxeq	lr
   4e320:	ands	r3, r1, #-2147483648	; 0x80000000
   4e324:	bpl	4e330 <__aeabi_l2f+0x18>
   4e328:	rsbs	r0, r0, #0
   4e32c:	rsc	r1, r1, #0
   4e330:	movs	ip, r1
   4e334:	moveq	ip, r0
   4e338:	moveq	r1, r0
   4e33c:	moveq	r0, #0
   4e340:	orr	r3, r3, #1526726656	; 0x5b000000
   4e344:	subeq	r3, r3, #268435456	; 0x10000000
   4e348:	sub	r3, r3, #8388608	; 0x800000
   4e34c:	clz	r2, ip
   4e350:	subs	r2, r2, #8
   4e354:	sub	r3, r3, r2, lsl #23
   4e358:	blt	4e378 <__aeabi_l2f+0x60>
   4e35c:	add	r3, r3, r1, lsl r2
   4e360:	lsl	ip, r0, r2
   4e364:	rsb	r2, r2, #32
   4e368:	cmp	ip, #-2147483648	; 0x80000000
   4e36c:	adc	r0, r3, r0, lsr r2
   4e370:	biceq	r0, r0, #1
   4e374:	bx	lr
   4e378:	add	r2, r2, #32
   4e37c:	lsl	ip, r1, r2
   4e380:	rsb	r2, r2, #32
   4e384:	orrs	r0, r0, ip, lsl #1
   4e388:	adc	r0, r3, r1, lsr r2
   4e38c:	biceq	r0, r0, ip, lsr #31
   4e390:	bx	lr

0004e394 <__aeabi_f2lz>:
   4e394:	vmov	s15, r0
   4e398:	vcmpe.f32	s15, #0.0
   4e39c:	vmrs	APSR_nzcv, fpscr
   4e3a0:	bmi	4e3a8 <__aeabi_f2lz+0x14>
   4e3a4:	b	4e3f0 <__aeabi_f2ulz>
   4e3a8:	push	{r4, lr}
   4e3ac:	eor	r0, r0, #-2147483648	; 0x80000000
   4e3b0:	bl	4e3f0 <__aeabi_f2ulz>
   4e3b4:	rsbs	r0, r0, #0
   4e3b8:	rsc	r1, r1, #0
   4e3bc:	pop	{r4, pc}

0004e3c0 <__aeabi_d2lz>:
   4e3c0:	vmov	d7, r0, r1
   4e3c4:	vcmpe.f64	d7, #0.0
   4e3c8:	vmrs	APSR_nzcv, fpscr
   4e3cc:	bmi	4e3d4 <__aeabi_d2lz+0x14>
   4e3d0:	b	4e430 <__aeabi_d2ulz>
   4e3d4:	push	{r4, lr}
   4e3d8:	eor	r1, r1, #-2147483648	; 0x80000000
   4e3dc:	bl	4e430 <__aeabi_d2ulz>
   4e3e0:	rsbs	r0, r0, #0
   4e3e4:	rsc	r1, r1, #0
   4e3e8:	pop	{r4, pc}
   4e3ec:	andeq	r0, r0, r0

0004e3f0 <__aeabi_f2ulz>:
   4e3f0:	vmov	s15, r0
   4e3f4:	vldr	d5, [pc, #36]	; 4e420 <__aeabi_f2ulz+0x30>
   4e3f8:	vcvt.f64.f32	d6, s15
   4e3fc:	vldr	d7, [pc, #36]	; 4e428 <__aeabi_f2ulz+0x38>
   4e400:	vmul.f64	d7, d6, d7
   4e404:	vcvt.u32.f64	s14, d7
   4e408:	vcvt.f64.u32	d4, s14
   4e40c:	vmov	r1, s14
   4e410:	vmls.f64	d6, d4, d5
   4e414:	vcvt.u32.f64	s15, d6
   4e418:	vmov	r0, s15
   4e41c:	bx	lr
   4e420:	.word	0x00000000
   4e424:	.word	0x41f00000
   4e428:	.word	0x00000000
   4e42c:	.word	0x3df00000

0004e430 <__aeabi_d2ulz>:
   4e430:	vmov	d6, r0, r1
   4e434:	vldr	d7, [pc, #36]	; 4e460 <__aeabi_d2ulz+0x30>
   4e438:	vldr	d5, [pc, #40]	; 4e468 <__aeabi_d2ulz+0x38>
   4e43c:	vmul.f64	d7, d6, d7
   4e440:	vcvt.u32.f64	s14, d7
   4e444:	vcvt.f64.u32	d4, s14
   4e448:	vmov	r1, s14
   4e44c:	vmls.f64	d6, d4, d5
   4e450:	vcvt.u32.f64	s15, d6
   4e454:	vmov	r0, s15
   4e458:	bx	lr
   4e45c:	nop			; (mov r0, r0)
   4e460:	.word	0x00000000
   4e464:	.word	0x3df00000
   4e468:	.word	0x00000000
   4e46c:	.word	0x41f00000

Disassembly of section .fini:

0004e470 <_fini>:
   4e470:	push	{r3, lr}
   4e474:	pop	{r3, pc}
