
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

00010918 <.init>:
   10918:	push	{r3, lr}
   1091c:	bl	10c20 <_start@@Base+0x3c>
   10920:	pop	{r3, pc}

Disassembly of section .plt:

00010924 <raise@plt-0x14>:
   10924:	push	{lr}		; (str lr, [sp, #-4]!)
   10928:	ldr	lr, [pc, #4]	; 10934 <raise@plt-0x4>
   1092c:	add	lr, pc, lr
   10930:	ldr	pc, [lr, #8]!
   10934:	andeq	r1, r1, ip, asr #13

00010938 <raise@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1740]!	; 0x6cc

00010944 <fopen@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010950 <time@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1724]!	; 0x6bc

0001095c <xcb_connect@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1716]!	; 0x6b4

00010968 <sleep@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1708]!	; 0x6ac

00010974 <xcb_flush@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010980 <rewind@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1692]!	; 0x69c

0001098c <xcb_screen_next@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1684]!	; 0x694

00010998 <fread@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1676]!	; 0x68c

000109a4 <xcb_setup_roots_iterator@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1668]!	; 0x684

000109b0 <puts@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1660]!	; 0x67c

000109bc <__libc_start_main@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1652]!	; 0x674

000109c8 <localtime@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1644]!	; 0x66c

000109d4 <__gmon_start__@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1636]!	; 0x664

000109e0 <exit@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1628]!	; 0x65c

000109ec <snprintf@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1620]!	; 0x654

000109f8 <__isoc99_sscanf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1612]!	; 0x64c

00010a04 <fclose@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1604]!	; 0x644

00010a10 <xcb_disconnect@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1596]!	; 0x63c

00010a1c <xcb_connection_has_error@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1588]!	; 0x634

00010a28 <xcb_get_setup@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1580]!	; 0x62c

00010a34 <xcb_change_property@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1572]!	; 0x624

00010a40 <abort@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00010a4c <main@@Base>:
   10a4c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10a50:	sub	sp, sp, #148	; 0x94
   10a54:	mov	r0, #0
   10a58:	add	r1, sp, #24
   10a5c:	bl	1095c <xcb_connect@plt>
   10a60:	mov	r5, r0
   10a64:	bl	10a1c <xcb_connection_has_error@plt>
   10a68:	cmp	r0, #0
   10a6c:	beq	10a88 <main@@Base+0x3c>
   10a70:	ldr	r0, [pc, #352]	; 10bd8 <main@@Base+0x18c>
   10a74:	bl	109b0 <puts@plt>
   10a78:	mov	r0, r5
   10a7c:	bl	10a10 <xcb_disconnect@plt>
   10a80:	mov	r0, #1
   10a84:	bl	109e0 <exit@plt>
   10a88:	mov	r0, r5
   10a8c:	add	r6, sp, #60	; 0x3c
   10a90:	bl	10a28 <xcb_get_setup@plt>
   10a94:	mov	r1, r0
   10a98:	mov	r0, r6
   10a9c:	bl	109a4 <xcb_setup_roots_iterator@plt>
   10aa0:	ldr	r7, [sp, #24]
   10aa4:	sub	r3, r7, #1
   10aa8:	cmp	r7, #0
   10aac:	str	r3, [sp, #24]
   10ab0:	bne	10bc0 <main@@Base+0x174>
   10ab4:	ldr	r3, [sp, #60]	; 0x3c
   10ab8:	add	r0, sp, #24
   10abc:	ldr	r9, [pc, #280]	; 10bdc <main@@Base+0x190>
   10ac0:	ldr	r8, [r3]
   10ac4:	bl	10d34 <init_bat@@Base>
   10ac8:	ldrb	r4, [sp, #48]	; 0x30
   10acc:	strb	r7, [sp, #140]	; 0x8c
   10ad0:	cmp	r4, #0
   10ad4:	beq	10aec <main@@Base+0xa0>
   10ad8:	mov	r2, #80	; 0x50
   10adc:	mov	r1, r6
   10ae0:	add	r0, sp, #24
   10ae4:	bl	10e54 <bat@@Base>
   10ae8:	mov	r4, r0
   10aec:	mov	r0, #0
   10af0:	bl	10950 <time@plt>
   10af4:	str	r0, [sp, #20]
   10af8:	add	r0, sp, #20
   10afc:	bl	109c8 <localtime@plt>
   10b00:	ldr	r2, [r0, #4]
   10b04:	rsb	r1, r4, #80	; 0x50
   10b08:	ldr	r3, [r0, #20]
   10b0c:	str	r2, [sp, #12]
   10b10:	ldr	r2, [r0, #8]
   10b14:	add	r3, r3, #1888	; 0x760
   10b18:	add	r3, r3, #12
   10b1c:	str	r2, [sp, #8]
   10b20:	ldr	r2, [r0, #12]
   10b24:	str	r2, [sp, #4]
   10b28:	ldr	r2, [r0, #16]
   10b2c:	add	r0, r6, r4
   10b30:	add	r2, r2, #1
   10b34:	str	r2, [sp]
   10b38:	mov	r2, r9
   10b3c:	bl	109ec <snprintf@plt>
   10b40:	mov	r3, #8
   10b44:	add	r0, r0, r4
   10b48:	mov	r2, r8
   10b4c:	mov	r1, #0
   10b50:	str	r3, [sp, #4]
   10b54:	mov	r3, #31
   10b58:	str	r3, [sp]
   10b5c:	mov	r3, #39	; 0x27
   10b60:	str	r0, [sp, #8]
   10b64:	mov	r0, r5
   10b68:	str	r6, [sp, #12]
   10b6c:	bl	10a34 <xcb_change_property@plt>
   10b70:	mov	r0, r5
   10b74:	bl	10974 <xcb_flush@plt>
   10b78:	cmp	r0, #0
   10b7c:	bgt	10bcc <main@@Base+0x180>
   10b80:	ldr	r0, [pc, #88]	; 10be0 <main@@Base+0x194>
   10b84:	bl	109b0 <puts@plt>
   10b88:	mov	r0, r5
   10b8c:	bl	10a10 <xcb_disconnect@plt>
   10b90:	ldrb	r3, [sp, #48]	; 0x30
   10b94:	cmp	r3, #0
   10b98:	beq	10bb4 <main@@Base+0x168>
   10b9c:	ldr	r0, [sp, #24]
   10ba0:	bl	10a04 <fclose@plt>
   10ba4:	ldr	r0, [sp, #32]
   10ba8:	bl	10a04 <fclose@plt>
   10bac:	ldr	r0, [sp, #28]
   10bb0:	bl	10a04 <fclose@plt>
   10bb4:	mov	r0, #2
   10bb8:	add	sp, sp, #148	; 0x94
   10bbc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10bc0:	mov	r0, r6
   10bc4:	bl	1098c <xcb_screen_next@plt>
   10bc8:	b	10aa0 <main@@Base+0x54>
   10bcc:	mov	r0, #60	; 0x3c
   10bd0:	bl	10968 <sleep@plt>
   10bd4:	b	10ac8 <main@@Base+0x7c>
   10bd8:	andeq	r1, r1, ip, lsr #2
   10bdc:	andeq	r1, r1, r4, asr #2
   10be0:	andeq	r1, r1, sp, asr r1

00010be4 <_start@@Base>:
   10be4:	mov	fp, #0
   10be8:	mov	lr, #0
   10bec:	pop	{r1}		; (ldr r1, [sp], #4)
   10bf0:	mov	r2, sp
   10bf4:	push	{r2}		; (str r2, [sp, #-4]!)
   10bf8:	push	{r0}		; (str r0, [sp, #-4]!)
   10bfc:	ldr	ip, [pc, #16]	; 10c14 <_start@@Base+0x30>
   10c00:	push	{ip}		; (str ip, [sp, #-4]!)
   10c04:	ldr	r0, [pc, #12]	; 10c18 <_start@@Base+0x34>
   10c08:	ldr	r3, [pc, #12]	; 10c1c <_start@@Base+0x38>
   10c0c:	bl	109bc <__libc_start_main@plt>
   10c10:	bl	10a40 <abort@plt>
   10c14:	andeq	r1, r1, ip, lsl r1
   10c18:	andeq	r0, r1, ip, asr #20
   10c1c:	strheq	r1, [r1], -ip
   10c20:	ldr	r3, [pc, #20]	; 10c3c <_start@@Base+0x58>
   10c24:	ldr	r2, [pc, #20]	; 10c40 <_start@@Base+0x5c>
   10c28:	add	r3, pc, r3
   10c2c:	ldr	r2, [r3, r2]
   10c30:	cmp	r2, #0
   10c34:	bxeq	lr
   10c38:	b	109d4 <__gmon_start__@plt>
   10c3c:	ldrdeq	r1, [r1], -r0
   10c40:	andeq	r0, r0, r8, rrx
   10c44:	ldr	r0, [pc, #24]	; 10c64 <_start@@Base+0x80>
   10c48:	ldr	r3, [pc, #24]	; 10c68 <_start@@Base+0x84>
   10c4c:	cmp	r3, r0
   10c50:	bxeq	lr
   10c54:	ldr	r3, [pc, #16]	; 10c6c <_start@@Base+0x88>
   10c58:	cmp	r3, #0
   10c5c:	bxeq	lr
   10c60:	bx	r3
   10c64:	andeq	r2, r2, r4, ror r0
   10c68:	andeq	r2, r2, r4, ror r0
   10c6c:	andeq	r0, r0, r0
   10c70:	ldr	r0, [pc, #36]	; 10c9c <_start@@Base+0xb8>
   10c74:	ldr	r1, [pc, #36]	; 10ca0 <_start@@Base+0xbc>
   10c78:	sub	r1, r1, r0
   10c7c:	asr	r1, r1, #2
   10c80:	add	r1, r1, r1, lsr #31
   10c84:	asrs	r1, r1, #1
   10c88:	bxeq	lr
   10c8c:	ldr	r3, [pc, #16]	; 10ca4 <_start@@Base+0xc0>
   10c90:	cmp	r3, #0
   10c94:	bxeq	lr
   10c98:	bx	r3
   10c9c:	andeq	r2, r2, r4, ror r0
   10ca0:	andeq	r2, r2, r4, ror r0
   10ca4:	andeq	r0, r0, r0
   10ca8:	push	{r4, lr}
   10cac:	ldr	r4, [pc, #24]	; 10ccc <_start@@Base+0xe8>
   10cb0:	ldrb	r3, [r4]
   10cb4:	cmp	r3, #0
   10cb8:	popne	{r4, pc}
   10cbc:	bl	10c44 <_start@@Base+0x60>
   10cc0:	mov	r3, #1
   10cc4:	strb	r3, [r4]
   10cc8:	pop	{r4, pc}
   10ccc:	andeq	r2, r2, r4, ror r0
   10cd0:	b	10c70 <_start@@Base+0x8c>

00010cd4 <read_int@@Base>:
   10cd4:	push	{r4, lr}
   10cd8:	mov	r4, r0
   10cdc:	sub	sp, sp, #48	; 0x30
   10ce0:	bl	10980 <rewind@plt>
   10ce4:	mov	r3, r4
   10ce8:	mov	r2, #40	; 0x28
   10cec:	mov	r1, #1
   10cf0:	add	r0, sp, #8
   10cf4:	bl	10998 <fread@plt>
   10cf8:	add	r3, sp, #48	; 0x30
   10cfc:	ldr	r1, [pc, #44]	; 10d30 <read_int@@Base+0x5c>
   10d00:	mov	r2, sp
   10d04:	add	r0, r3, r0
   10d08:	mov	r3, #0
   10d0c:	strb	r3, [r0, #-40]	; 0xffffffd8
   10d10:	add	r0, sp, #8
   10d14:	bl	109f8 <__isoc99_sscanf@plt>
   10d18:	cmp	r0, #1
   10d1c:	ldrdeq	r0, [sp]
   10d20:	mvnne	r0, #0
   10d24:	movne	r1, #0
   10d28:	add	sp, sp, #48	; 0x30
   10d2c:	pop	{r4, pc}
   10d30:	andeq	r1, r1, sp, ror r1

00010d34 <init_bat@@Base>:
   10d34:	push	{r4, r5, r6, lr}
   10d38:	mov	r4, r0
   10d3c:	ldr	r1, [pc, #180]	; 10df8 <init_bat@@Base+0xc4>
   10d40:	ldr	r0, [pc, #180]	; 10dfc <init_bat@@Base+0xc8>
   10d44:	bl	10944 <fopen@plt>
   10d48:	subs	r5, r0, #0
   10d4c:	bne	10d78 <init_bat@@Base+0x44>
   10d50:	ldr	r1, [pc, #160]	; 10df8 <init_bat@@Base+0xc4>
   10d54:	ldr	r0, [pc, #164]	; 10e00 <init_bat@@Base+0xcc>
   10d58:	bl	10944 <fopen@plt>
   10d5c:	subs	r5, r0, #0
   10d60:	bne	10d78 <init_bat@@Base+0x44>
   10d64:	str	r5, [r4]
   10d68:	str	r5, [r4, #4]
   10d6c:	str	r5, [r4, #8]
   10d70:	strb	r5, [r4, #24]
   10d74:	pop	{r4, r5, r6, pc}
   10d78:	mov	r3, #1
   10d7c:	mov	r0, r5
   10d80:	strb	r3, [r4, #24]
   10d84:	bl	10cd4 <read_int@@Base>
   10d88:	strd	r0, [r4, #16]
   10d8c:	ldr	r1, [pc, #100]	; 10df8 <init_bat@@Base+0xc4>
   10d90:	ldr	r0, [pc, #108]	; 10e04 <init_bat@@Base+0xd0>
   10d94:	bl	10944 <fopen@plt>
   10d98:	ldr	r1, [pc, #88]	; 10df8 <init_bat@@Base+0xc4>
   10d9c:	str	r0, [r4]
   10da0:	ldr	r0, [pc, #96]	; 10e08 <init_bat@@Base+0xd4>
   10da4:	bl	10944 <fopen@plt>
   10da8:	cmp	r0, #0
   10dac:	str	r0, [r4, #4]
   10db0:	bne	10dc4 <init_bat@@Base+0x90>
   10db4:	ldr	r1, [pc, #60]	; 10df8 <init_bat@@Base+0xc4>
   10db8:	ldr	r0, [pc, #76]	; 10e0c <init_bat@@Base+0xd8>
   10dbc:	bl	10944 <fopen@plt>
   10dc0:	str	r0, [r4, #4]
   10dc4:	ldr	r1, [pc, #44]	; 10df8 <init_bat@@Base+0xc4>
   10dc8:	ldr	r0, [pc, #64]	; 10e10 <init_bat@@Base+0xdc>
   10dcc:	bl	10944 <fopen@plt>
   10dd0:	cmp	r0, #0
   10dd4:	str	r0, [r4, #8]
   10dd8:	bne	10dec <init_bat@@Base+0xb8>
   10ddc:	ldr	r1, [pc, #20]	; 10df8 <init_bat@@Base+0xc4>
   10de0:	ldr	r0, [pc, #44]	; 10e14 <init_bat@@Base+0xe0>
   10de4:	bl	10944 <fopen@plt>
   10de8:	str	r0, [r4, #8]
   10dec:	mov	r0, r5
   10df0:	pop	{r4, r5, r6, lr}
   10df4:	b	10a04 <fclose@plt>
   10df8:	andeq	r1, r1, r2, lsl #3
   10dfc:	andeq	r1, r1, r4, lsl #3
   10e00:	andeq	r1, r1, sp, lsr #3
   10e04:	ldrdeq	r1, [r1], -r6
   10e08:	strdeq	r1, [r1], -r8
   10e0c:	andeq	r1, r1, r0, lsr #4
   10e10:	andeq	r1, r1, r8, asr #4
   10e14:	andeq	r1, r1, pc, ror #4

00010e18 <close_bat@@Base>:
   10e18:	push	{r4, lr}
   10e1c:	mov	r4, r0
   10e20:	ldr	r0, [r0]
   10e24:	cmp	r0, #0
   10e28:	beq	10e30 <close_bat@@Base+0x18>
   10e2c:	bl	10a04 <fclose@plt>
   10e30:	ldr	r0, [r4, #4]
   10e34:	cmp	r0, #0
   10e38:	beq	10e40 <close_bat@@Base+0x28>
   10e3c:	bl	10a04 <fclose@plt>
   10e40:	ldr	r0, [r4, #8]
   10e44:	cmp	r0, #0
   10e48:	popeq	{r4, pc}
   10e4c:	pop	{r4, lr}
   10e50:	b	10a04 <fclose@plt>

00010e54 <bat@@Base>:
   10e54:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   10e58:	mov	r4, r0
   10e5c:	mov	r6, r2
   10e60:	mov	r5, r1
   10e64:	ldr	r0, [r0]
   10e68:	bl	10cd4 <read_int@@Base>
   10e6c:	strd	r0, [sp, #8]
   10e70:	ldr	r0, [r4, #4]
   10e74:	bl	10cd4 <read_int@@Base>
   10e78:	mov	sl, r0
   10e7c:	ldr	r0, [r4, #8]
   10e80:	mov	r7, r1
   10e84:	bl	10cd4 <read_int@@Base>
   10e88:	mov	r3, #100	; 0x64
   10e8c:	mov	r8, r0
   10e90:	mov	r9, r1
   10e94:	umull	r0, r1, sl, r3
   10e98:	mla	r1, r3, r7, r1
   10e9c:	ldrd	r2, [r4, #16]
   10ea0:	bl	10f48 <bat@@Base+0xf4>
   10ea4:	ldrd	r2, [sp, #8]
   10ea8:	mov	r4, r0
   10eac:	orrs	r3, r2, r3
   10eb0:	movne	r3, r0
   10eb4:	ldrne	r2, [pc, #128]	; 10f3c <bat@@Base+0xe8>
   10eb8:	bne	10f28 <bat@@Base+0xd4>
   10ebc:	orrs	r3, r8, r9
   10ec0:	beq	10f20 <bat@@Base+0xcc>
   10ec4:	mov	r3, #60	; 0x3c
   10ec8:	mov	r2, r8
   10ecc:	umull	r0, r1, sl, r3
   10ed0:	mla	r1, r3, r7, r1
   10ed4:	mov	r3, r9
   10ed8:	bl	10f48 <bat@@Base+0xf4>
   10edc:	mov	r2, #60	; 0x3c
   10ee0:	mov	r3, #0
   10ee4:	bl	10f48 <bat@@Base+0xf4>
   10ee8:	mov	r3, r9
   10eec:	mov	r0, sl
   10ef0:	str	r2, [sp, #4]
   10ef4:	mov	r1, r7
   10ef8:	mov	r2, r8
   10efc:	bl	10f48 <bat@@Base+0xf4>
   10f00:	ldr	r2, [pc, #56]	; 10f40 <bat@@Base+0xec>
   10f04:	mov	r3, r4
   10f08:	mov	r1, r6
   10f0c:	str	r0, [sp]
   10f10:	mov	r0, r5
   10f14:	bl	109ec <snprintf@plt>
   10f18:	add	sp, sp, #16
   10f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f20:	ldr	r2, [pc, #28]	; 10f44 <bat@@Base+0xf0>
   10f24:	mov	r3, r0
   10f28:	mov	r1, r6
   10f2c:	mov	r0, r5
   10f30:	add	sp, sp, #16
   10f34:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f38:	b	109ec <snprintf@plt>
   10f3c:	muleq	r1, r8, r2
   10f40:	andeq	r1, r1, r3, lsr #5
   10f44:			; <UNDEFINED> instruction: 0x000112b7
   10f48:	cmp	r3, #0
   10f4c:	cmpeq	r2, #0
   10f50:	bne	10f68 <bat@@Base+0x114>
   10f54:	cmp	r1, #0
   10f58:	cmpeq	r0, #0
   10f5c:	mvnne	r1, #0
   10f60:	mvnne	r0, #0
   10f64:	b	10f84 <bat@@Base+0x130>
   10f68:	sub	sp, sp, #8
   10f6c:	push	{sp, lr}
   10f70:	bl	10f94 <bat@@Base+0x140>
   10f74:	ldr	lr, [sp, #4]
   10f78:	add	sp, sp, #8
   10f7c:	pop	{r2, r3}
   10f80:	bx	lr
   10f84:	push	{r1, lr}
   10f88:	mov	r0, #8
   10f8c:	bl	10938 <raise@plt>
   10f90:	pop	{r1, pc}
   10f94:	cmp	r1, r3
   10f98:	cmpeq	r0, r2
   10f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa0:	mov	r4, r0
   10fa4:	movcc	r0, #0
   10fa8:	mov	r5, r1
   10fac:	ldr	lr, [sp, #36]	; 0x24
   10fb0:	movcc	r1, r0
   10fb4:	bcc	110b0 <bat@@Base+0x25c>
   10fb8:	cmp	r3, #0
   10fbc:	clzeq	ip, r2
   10fc0:	clzne	ip, r3
   10fc4:	addeq	ip, ip, #32
   10fc8:	cmp	r5, #0
   10fcc:	clzeq	r1, r4
   10fd0:	addeq	r1, r1, #32
   10fd4:	clzne	r1, r5
   10fd8:	sub	ip, ip, r1
   10fdc:	sub	sl, ip, #32
   10fe0:	lsl	r9, r3, ip
   10fe4:	rsb	fp, ip, #32
   10fe8:	orr	r9, r9, r2, lsl sl
   10fec:	orr	r9, r9, r2, lsr fp
   10ff0:	lsl	r8, r2, ip
   10ff4:	cmp	r5, r9
   10ff8:	cmpeq	r4, r8
   10ffc:	movcc	r0, #0
   11000:	movcc	r1, r0
   11004:	bcc	11020 <bat@@Base+0x1cc>
   11008:	mov	r0, #1
   1100c:	subs	r4, r4, r8
   11010:	lsl	r1, r0, sl
   11014:	orr	r1, r1, r0, lsr fp
   11018:	lsl	r0, r0, ip
   1101c:	sbc	r5, r5, r9
   11020:	cmp	ip, #0
   11024:	beq	110b0 <bat@@Base+0x25c>
   11028:	lsr	r6, r8, #1
   1102c:	orr	r6, r6, r9, lsl #31
   11030:	lsr	r7, r9, #1
   11034:	mov	r2, ip
   11038:	b	1105c <bat@@Base+0x208>
   1103c:	subs	r3, r4, r6
   11040:	sbc	r8, r5, r7
   11044:	adds	r3, r3, r3
   11048:	adc	r8, r8, r8
   1104c:	adds	r4, r3, #1
   11050:	adc	r5, r8, #0
   11054:	subs	r2, r2, #1
   11058:	beq	11078 <bat@@Base+0x224>
   1105c:	cmp	r5, r7
   11060:	cmpeq	r4, r6
   11064:	bcs	1103c <bat@@Base+0x1e8>
   11068:	adds	r4, r4, r4
   1106c:	adc	r5, r5, r5
   11070:	subs	r2, r2, #1
   11074:	bne	1105c <bat@@Base+0x208>
   11078:	lsr	r3, r4, ip
   1107c:	orr	r3, r3, r5, lsl fp
   11080:	lsr	r2, r5, ip
   11084:	orr	r3, r3, r5, lsr sl
   11088:	adds	r0, r0, r4
   1108c:	mov	r4, r3
   11090:	lsl	r3, r2, ip
   11094:	orr	r3, r3, r4, lsl sl
   11098:	lsl	ip, r4, ip
   1109c:	orr	r3, r3, r4, lsr fp
   110a0:	adc	r1, r1, r5
   110a4:	subs	r0, r0, ip
   110a8:	mov	r5, r2
   110ac:	sbc	r1, r1, r3
   110b0:	cmp	lr, #0
   110b4:	strdne	r4, [lr]
   110b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000110bc <__libc_csu_init@@Base>:
   110bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110c0:	mov	r7, r0
   110c4:	ldr	r6, [pc, #72]	; 11114 <__libc_csu_init@@Base+0x58>
   110c8:	ldr	r5, [pc, #72]	; 11118 <__libc_csu_init@@Base+0x5c>
   110cc:	add	r6, pc, r6
   110d0:	add	r5, pc, r5
   110d4:	sub	r6, r6, r5
   110d8:	mov	r8, r1
   110dc:	mov	r9, r2
   110e0:	bl	10918 <raise@plt-0x20>
   110e4:	asrs	r6, r6, #2
   110e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   110ec:	mov	r4, #0
   110f0:	add	r4, r4, #1
   110f4:	ldr	r3, [r5], #4
   110f8:	mov	r2, r9
   110fc:	mov	r1, r8
   11100:	mov	r0, r7
   11104:	blx	r3
   11108:	cmp	r6, r4
   1110c:	bne	110f0 <__libc_csu_init@@Base+0x34>
   11110:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11114:	andeq	r0, r1, r8, lsr lr
   11118:	andeq	r0, r1, r0, lsr lr

0001111c <__libc_csu_fini@@Base>:
   1111c:	bx	lr

Disassembly of section .fini:

00011120 <.fini>:
   11120:	push	{r3, lr}
   11124:	pop	{r3, pc}
