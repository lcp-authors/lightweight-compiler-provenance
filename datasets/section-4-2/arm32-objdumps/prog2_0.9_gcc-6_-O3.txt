
../repos/prog2/0.9:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	107f8 <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <strcmp@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <strcmp@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <strcmp@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <printf@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <strcpy@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <__libc_start_main@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__gmon_start__@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <strlen@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <__isoc99_scanf@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <abort@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

Disassembly of section .text:

000106e4 <main@@Base>:
   106e4:	push	{r4, r5, r6, r7, r8, lr}
   106e8:	sub	sp, sp, #20736	; 0x5100
   106ec:	sub	sp, sp, #72	; 0x48
   106f0:	add	r3, sp, #8
   106f4:	mov	r0, r3
   106f8:	str	r3, [sp, #4]
   106fc:	bl	108e4 <ler_albuns@@Base>
   10700:	mov	r7, r0
   10704:	mov	r1, r0
   10708:	ldr	r0, [sp, #4]
   1070c:	bl	1097c <lista_albuns@@Base>
   10710:	mov	r1, r7
   10714:	ldr	r0, [pc, #144]	; 107ac <main@@Base+0xc8>
   10718:	bl	10690 <printf@plt>
   1071c:	cmp	r7, #0
   10720:	ble	107a4 <main@@Base+0xc0>
   10724:	ldr	r3, [sp, #4]
   10728:	mov	r5, #208	; 0xd0
   1072c:	ldr	r6, [pc, #124]	; 107b0 <main@@Base+0xcc>
   10730:	mla	r5, r5, r7, r3
   10734:	mov	r4, r3
   10738:	mov	r8, #0
   1073c:	mov	r1, r4
   10740:	mov	r0, r6
   10744:	bl	10684 <strcmp@plt>
   10748:	cmp	r0, #0
   1074c:	bne	1075c <main@@Base+0x78>
   10750:	ldr	r3, [r4, #204]	; 0xcc
   10754:	cmp	r3, #1
   10758:	addeq	r8, r8, #1
   1075c:	add	r4, r4, #208	; 0xd0
   10760:	cmp	r4, r5
   10764:	bne	1073c <main@@Base+0x58>
   10768:	mov	r1, r8
   1076c:	ldr	r0, [pc, #64]	; 107b4 <main@@Base+0xd0>
   10770:	bl	10690 <printf@plt>
   10774:	mov	r1, r7
   10778:	ldr	r0, [sp, #4]
   1077c:	mov	r3, #0
   10780:	ldr	r2, [pc, #40]	; 107b0 <main@@Base+0xcc>
   10784:	bl	109d0 <albuns_artista@@Base>
   10788:	mov	r1, r0
   1078c:	ldr	r0, [pc, #36]	; 107b8 <main@@Base+0xd4>
   10790:	bl	10690 <printf@plt>
   10794:	mov	r0, #0
   10798:	add	sp, sp, #20736	; 0x5100
   1079c:	add	sp, sp, #72	; 0x48
   107a0:	pop	{r4, r5, r6, r7, r8, pc}
   107a4:	mov	r8, #0
   107a8:	b	10768 <main@@Base+0x84>
   107ac:	andeq	r0, r1, r4, lsl #22
   107b0:	andeq	r0, r1, r4, lsr #22
   107b4:	andeq	r0, r1, r4, lsr fp
   107b8:	andeq	r0, r1, ip, ror #22

000107bc <_start@@Base>:
   107bc:	mov	fp, #0
   107c0:	mov	lr, #0
   107c4:	pop	{r1}		; (ldr r1, [sp], #4)
   107c8:	mov	r2, sp
   107cc:	push	{r2}		; (str r2, [sp, #-4]!)
   107d0:	push	{r0}		; (str r0, [sp, #-4]!)
   107d4:	ldr	ip, [pc, #16]	; 107ec <_start@@Base+0x30>
   107d8:	push	{ip}		; (str ip, [sp, #-4]!)
   107dc:	ldr	r0, [pc, #12]	; 107f0 <_start@@Base+0x34>
   107e0:	ldr	r3, [pc, #12]	; 107f4 <_start@@Base+0x38>
   107e4:	bl	106a8 <__libc_start_main@plt>
   107e8:	bl	106d8 <abort@plt>
   107ec:	ldrdeq	r0, [r1], -r4
   107f0:	andeq	r0, r1, r4, ror #13
   107f4:	andeq	r0, r1, r4, ror sl
   107f8:	ldr	r3, [pc, #20]	; 10814 <_start@@Base+0x58>
   107fc:	ldr	r2, [pc, #20]	; 10818 <_start@@Base+0x5c>
   10800:	add	r3, pc, r3
   10804:	ldr	r2, [r3, r2]
   10808:	cmp	r2, #0
   1080c:	bxeq	lr
   10810:	b	106b4 <__gmon_start__@plt>
   10814:	strdeq	r0, [r1], -r8
   10818:	andeq	r0, r0, ip, lsr #32
   1081c:	ldr	r3, [pc, #28]	; 10840 <_start@@Base+0x84>
   10820:	ldr	r0, [pc, #28]	; 10844 <_start@@Base+0x88>
   10824:	sub	r3, r3, r0
   10828:	cmp	r3, #6
   1082c:	bxls	lr
   10830:	ldr	r3, [pc, #16]	; 10848 <_start@@Base+0x8c>
   10834:	cmp	r3, #0
   10838:	bxeq	lr
   1083c:	bx	r3
   10840:	andeq	r1, r2, fp, lsr r0
   10844:	andeq	r1, r2, r8, lsr r0
   10848:	andeq	r0, r0, r0
   1084c:	ldr	r1, [pc, #36]	; 10878 <_start@@Base+0xbc>
   10850:	ldr	r0, [pc, #36]	; 1087c <_start@@Base+0xc0>
   10854:	sub	r1, r1, r0
   10858:	asr	r1, r1, #2
   1085c:	add	r1, r1, r1, lsr #31
   10860:	asrs	r1, r1, #1
   10864:	bxeq	lr
   10868:	ldr	r3, [pc, #16]	; 10880 <_start@@Base+0xc4>
   1086c:	cmp	r3, #0
   10870:	bxeq	lr
   10874:	bx	r3
   10878:	andeq	r1, r2, r8, lsr r0
   1087c:	andeq	r1, r2, r8, lsr r0
   10880:	andeq	r0, r0, r0
   10884:	push	{r4, lr}
   10888:	ldr	r4, [pc, #24]	; 108a8 <_start@@Base+0xec>
   1088c:	ldrb	r3, [r4]
   10890:	cmp	r3, #0
   10894:	popne	{r4, pc}
   10898:	bl	1081c <_start@@Base+0x60>
   1089c:	mov	r3, #1
   108a0:	strb	r3, [r4]
   108a4:	pop	{r4, pc}
   108a8:	andeq	r1, r2, r8, lsr r0
   108ac:	ldr	r0, [pc, #40]	; 108dc <_start@@Base+0x120>
   108b0:	ldr	r3, [r0]
   108b4:	cmp	r3, #0
   108b8:	bne	108c0 <_start@@Base+0x104>
   108bc:	b	1084c <_start@@Base+0x90>
   108c0:	ldr	r3, [pc, #24]	; 108e0 <_start@@Base+0x124>
   108c4:	cmp	r3, #0
   108c8:	beq	108bc <_start@@Base+0x100>
   108cc:	push	{r4, lr}
   108d0:	blx	r3
   108d4:	pop	{r4, lr}
   108d8:	b	1084c <_start@@Base+0x90>
   108dc:	andeq	r0, r2, r4, lsl pc
   108e0:	andeq	r0, r0, r0

000108e4 <ler_albuns@@Base>:
   108e4:	push	{r4, r5, r6, r7, r8, lr}
   108e8:	sub	sp, sp, #24
   108ec:	mov	r6, #0
   108f0:	str	r6, [sp, #16]
   108f4:	mov	r4, r0
   108f8:	str	r6, [sp, #8]
   108fc:	str	r6, [sp, #12]
   10900:	str	r6, [sp, #19]
   10904:	ldr	r7, [pc, #108]	; 10978 <ler_albuns@@Base+0x94>
   10908:	mov	r8, #32
   1090c:	b	10934 <ler_albuns@@Base+0x50>
   10910:	cmp	r6, #100	; 0x64
   10914:	beq	1096c <ler_albuns@@Base+0x88>
   10918:	bl	106c0 <strlen@plt>
   1091c:	add	r1, sp, #8
   10920:	add	r6, r6, #1
   10924:	add	r3, r0, #1
   10928:	strb	r8, [r5, r0]
   1092c:	add	r0, r5, r3
   10930:	bl	1069c <strcpy@plt>
   10934:	add	r2, r4, #204	; 0xcc
   10938:	add	r3, r4, #200	; 0xc8
   1093c:	str	r2, [sp, #4]
   10940:	str	r3, [sp]
   10944:	mov	r1, r4
   10948:	add	r3, r4, #100	; 0x64
   1094c:	add	r2, sp, #8
   10950:	mov	r0, r7
   10954:	bl	106cc <__isoc99_scanf@plt>
   10958:	mov	r5, r4
   1095c:	add	r4, r4, #208	; 0xd0
   10960:	cmp	r0, #5
   10964:	mov	r0, r5
   10968:	beq	10910 <ler_albuns@@Base+0x2c>
   1096c:	mov	r0, r6
   10970:	add	sp, sp, #24
   10974:	pop	{r4, r5, r6, r7, r8, pc}
   10978:	andeq	r0, r1, r4, ror #21

0001097c <lista_albuns@@Base>:
   1097c:	push	{r4, r5, r6, r7, lr}
   10980:	subs	r6, r1, #0
   10984:	sub	sp, sp, #12
   10988:	ble	109c4 <lista_albuns@@Base+0x48>
   1098c:	ldr	r7, [pc, #56]	; 109cc <lista_albuns@@Base+0x50>
   10990:	mov	r4, r0
   10994:	mov	r5, #0
   10998:	ldr	r2, [r4, #204]	; 0xcc
   1099c:	ldr	r3, [r4, #200]	; 0xc8
   109a0:	mov	r1, r4
   109a4:	str	r2, [sp]
   109a8:	add	r5, r5, #1
   109ac:	add	r2, r4, #100	; 0x64
   109b0:	mov	r0, r7
   109b4:	bl	10690 <printf@plt>
   109b8:	cmp	r6, r5
   109bc:	add	r4, r4, #208	; 0xd0
   109c0:	bne	10998 <lista_albuns@@Base+0x1c>
   109c4:	add	sp, sp, #12
   109c8:	pop	{r4, r5, r6, r7, pc}
   109cc:	strdeq	r0, [r1], -r4

000109d0 <albuns_artista@@Base>:
   109d0:	push	{r4, r5, r6, r7, r8, lr}
   109d4:	subs	r7, r3, #0
   109d8:	mov	r6, r2
   109dc:	beq	10a2c <albuns_artista@@Base+0x5c>
   109e0:	cmp	r1, #0
   109e4:	ble	10a6c <albuns_artista@@Base+0x9c>
   109e8:	mov	r5, #208	; 0xd0
   109ec:	mov	r4, r0
   109f0:	mla	r5, r5, r1, r0
   109f4:	mov	r8, #0
   109f8:	mov	r1, r4
   109fc:	mov	r0, r6
   10a00:	bl	10684 <strcmp@plt>
   10a04:	cmp	r0, #0
   10a08:	bne	10a18 <albuns_artista@@Base+0x48>
   10a0c:	ldr	r3, [r4, #204]	; 0xcc
   10a10:	cmp	r7, r3
   10a14:	addeq	r8, r8, #1
   10a18:	add	r4, r4, #208	; 0xd0
   10a1c:	cmp	r5, r4
   10a20:	bne	109f8 <albuns_artista@@Base+0x28>
   10a24:	mov	r0, r8
   10a28:	pop	{r4, r5, r6, r7, r8, pc}
   10a2c:	cmp	r1, #0
   10a30:	ble	10a6c <albuns_artista@@Base+0x9c>
   10a34:	mov	r5, #208	; 0xd0
   10a38:	mov	r4, r0
   10a3c:	mla	r5, r5, r1, r0
   10a40:	mov	r8, r7
   10a44:	mov	r1, r4
   10a48:	mov	r0, r6
   10a4c:	bl	10684 <strcmp@plt>
   10a50:	add	r4, r4, #208	; 0xd0
   10a54:	cmp	r0, #0
   10a58:	addeq	r8, r8, #1
   10a5c:	cmp	r5, r4
   10a60:	bne	10a44 <albuns_artista@@Base+0x74>
   10a64:	mov	r0, r8
   10a68:	pop	{r4, r5, r6, r7, r8, pc}
   10a6c:	mov	r8, #0
   10a70:	b	10a24 <albuns_artista@@Base+0x54>

00010a74 <__libc_csu_init@@Base>:
   10a74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a78:	mov	r7, r0
   10a7c:	ldr	r6, [pc, #72]	; 10acc <__libc_csu_init@@Base+0x58>
   10a80:	ldr	r5, [pc, #72]	; 10ad0 <__libc_csu_init@@Base+0x5c>
   10a84:	add	r6, pc, r6
   10a88:	add	r5, pc, r5
   10a8c:	sub	r6, r6, r5
   10a90:	mov	r8, r1
   10a94:	mov	r9, r2
   10a98:	bl	10664 <strcmp@plt-0x20>
   10a9c:	asrs	r6, r6, #2
   10aa0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10aa4:	mov	r4, #0
   10aa8:	add	r4, r4, #1
   10aac:	ldr	r3, [r5], #4
   10ab0:	mov	r2, r9
   10ab4:	mov	r1, r8
   10ab8:	mov	r0, r7
   10abc:	blx	r3
   10ac0:	cmp	r6, r4
   10ac4:	bne	10aa8 <__libc_csu_init@@Base+0x34>
   10ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10acc:	andeq	r0, r1, r4, lsl #9
   10ad0:	andeq	r0, r1, ip, ror r4

00010ad4 <__libc_csu_fini@@Base>:
   10ad4:	bx	lr

Disassembly of section .fini:

00010ad8 <.fini>:
   10ad8:	push	{r3, lr}
   10adc:	pop	{r3, pc}
