
../repos/inetutils/src/uucpd:     file format elf32-littlearm


Disassembly of section .init:

000110ec <.init>:
   110ec:	push	{r3, lr}
   110f0:	bl	11580 <putc_unlocked@plt+0x150>
   110f4:	pop	{r3, pc}

Disassembly of section .plt:

000110f8 <fputs_unlocked@plt-0x14>:
   110f8:	push	{lr}		; (str lr, [sp, #-4]!)
   110fc:	ldr	lr, [pc, #4]	; 11108 <fputs_unlocked@plt-0x4>
   11100:	add	lr, pc, lr
   11104:	ldr	pc, [lr, #8]!
   11108:	strdeq	r6, [r1], -r8

0001110c <fputs_unlocked@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #90112	; 0x16000
   11114:	ldr	pc, [ip, #3832]!	; 0xef8

00011118 <getpwnam@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #90112	; 0x16000
   11120:	ldr	pc, [ip, #3824]!	; 0xef0

00011124 <strcmp@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #90112	; 0x16000
   1112c:	ldr	pc, [ip, #3816]!	; 0xee8

00011130 <printf@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #90112	; 0x16000
   11138:	ldr	pc, [ip, #3808]!	; 0xee0

0001113c <read@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #90112	; 0x16000
   11144:	ldr	pc, [ip, #3800]!	; 0xed8

00011148 <fflush@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #90112	; 0x16000
   11150:	ldr	pc, [ip, #3792]!	; 0xed0

00011154 <memmove@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #90112	; 0x16000
   1115c:	ldr	pc, [ip, #3784]!	; 0xec8

00011160 <strchrnul@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #90112	; 0x16000
   11168:	ldr	pc, [ip, #3776]!	; 0xec0

0001116c <free@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #90112	; 0x16000
   11174:	ldr	pc, [ip, #3768]!	; 0xeb8

00011178 <strndup@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #90112	; 0x16000
   11180:	ldr	pc, [ip, #3760]!	; 0xeb0

00011184 <_exit@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #90112	; 0x16000
   1118c:	ldr	pc, [ip, #3752]!	; 0xea8

00011190 <memcpy@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #90112	; 0x16000
   11198:	ldr	pc, [ip, #3744]!	; 0xea0

0001119c <time@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #90112	; 0x16000
   111a4:	ldr	pc, [ip, #3736]!	; 0xe98

000111a8 <fwrite_unlocked@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #90112	; 0x16000
   111b0:	ldr	pc, [ip, #3728]!	; 0xe90

000111b4 <sleep@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #90112	; 0x16000
   111bc:	ldr	pc, [ip, #3720]!	; 0xe88

000111c0 <alarm@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #90112	; 0x16000
   111c8:	ldr	pc, [ip, #3712]!	; 0xe80

000111cc <dup2@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #90112	; 0x16000
   111d4:	ldr	pc, [ip, #3704]!	; 0xe78

000111d8 <realloc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #90112	; 0x16000
   111e0:	ldr	pc, [ip, #3696]!	; 0xe70

000111e4 <initgroups@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #90112	; 0x16000
   111ec:	ldr	pc, [ip, #3688]!	; 0xe68

000111f0 <chdir@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #90112	; 0x16000
   111f8:	ldr	pc, [ip, #3680]!	; 0xe60

000111fc <strcasecmp@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #90112	; 0x16000
   11204:	ldr	pc, [ip, #3672]!	; 0xe58

00011208 <funlockfile@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #90112	; 0x16000
   11210:	ldr	pc, [ip, #3664]!	; 0xe50

00011214 <perror@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #90112	; 0x16000
   1121c:	ldr	pc, [ip, #3656]!	; 0xe48

00011220 <lseek64@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #90112	; 0x16000
   11228:	ldr	pc, [ip, #3648]!	; 0xe40

0001122c <open64@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #90112	; 0x16000
   11234:	ldr	pc, [ip, #3640]!	; 0xe38

00011238 <getenv@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #90112	; 0x16000
   11240:	ldr	pc, [ip, #3632]!	; 0xe30

00011244 <setgid@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #90112	; 0x16000
   1124c:	ldr	pc, [ip, #3624]!	; 0xe28

00011250 <malloc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #90112	; 0x16000
   11258:	ldr	pc, [ip, #3616]!	; 0xe20

0001125c <__libc_start_main@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #90112	; 0x16000
   11264:	ldr	pc, [ip, #3608]!	; 0xe18

00011268 <strerror@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #90112	; 0x16000
   11270:	ldr	pc, [ip, #3600]!	; 0xe10

00011274 <__ctype_tolower_loc@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #90112	; 0x16000
   1127c:	ldr	pc, [ip, #3592]!	; 0xe08

00011280 <__gmon_start__@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #90112	; 0x16000
   11288:	ldr	pc, [ip, #3584]!	; 0xe00

0001128c <mempcpy@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #90112	; 0x16000
   11294:	ldr	pc, [ip, #3576]!	; 0xdf8

00011298 <__ctype_b_loc@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #90112	; 0x16000
   112a0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112a4 <getpid@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #90112	; 0x16000
   112ac:	ldr	pc, [ip, #3560]!	; 0xde8

000112b0 <exit@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #90112	; 0x16000
   112b8:	ldr	pc, [ip, #3552]!	; 0xde0

000112bc <strlen@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #90112	; 0x16000
   112c4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112c8 <strchr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #90112	; 0x16000
   112d0:	ldr	pc, [ip, #3536]!	; 0xdd0

000112d4 <fprintf@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #90112	; 0x16000
   112dc:	ldr	pc, [ip, #3528]!	; 0xdc8

000112e0 <__errno_location@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #90112	; 0x16000
   112e8:	ldr	pc, [ip, #3520]!	; 0xdc0

000112ec <snprintf@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #90112	; 0x16000
   112f4:	ldr	pc, [ip, #3512]!	; 0xdb8

000112f8 <strerror_r@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #90112	; 0x16000
   11300:	ldr	pc, [ip, #3504]!	; 0xdb0

00011304 <memset@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #90112	; 0x16000
   1130c:	ldr	pc, [ip, #3496]!	; 0xda8

00011310 <strncpy@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #90112	; 0x16000
   11318:	ldr	pc, [ip, #3488]!	; 0xda0

0001131c <wait3@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #90112	; 0x16000
   11324:	ldr	pc, [ip, #3480]!	; 0xd98

00011328 <write@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #90112	; 0x16000
   11330:	ldr	pc, [ip, #3472]!	; 0xd90

00011334 <memchr@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #90112	; 0x16000
   1133c:	ldr	pc, [ip, #3464]!	; 0xd88

00011340 <fork@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #90112	; 0x16000
   11348:	ldr	pc, [ip, #3456]!	; 0xd80

0001134c <getnameinfo@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #90112	; 0x16000
   11354:	ldr	pc, [ip, #3448]!	; 0xd78

00011358 <execl@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #90112	; 0x16000
   11360:	ldr	pc, [ip, #3440]!	; 0xd70

00011364 <strrchr@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #90112	; 0x16000
   1136c:	ldr	pc, [ip, #3432]!	; 0xd68

00011370 <vfprintf@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #90112	; 0x16000
   11378:	ldr	pc, [ip, #3424]!	; 0xd60

0001137c <crypt@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #90112	; 0x16000
   11384:	ldr	pc, [ip, #3416]!	; 0xd58

00011388 <fputc@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #90112	; 0x16000
   11390:	ldr	pc, [ip, #3408]!	; 0xd50

00011394 <setuid@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #90112	; 0x16000
   1139c:	ldr	pc, [ip, #3400]!	; 0xd48

000113a0 <sprintf@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #90112	; 0x16000
   113a8:	ldr	pc, [ip, #3392]!	; 0xd40

000113ac <flockfile@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #90112	; 0x16000
   113b4:	ldr	pc, [ip, #3384]!	; 0xd38

000113b8 <vsnprintf@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #90112	; 0x16000
   113c0:	ldr	pc, [ip, #3376]!	; 0xd30

000113c4 <atoi@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #90112	; 0x16000
   113cc:	ldr	pc, [ip, #3368]!	; 0xd28

000113d0 <qsort@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #90112	; 0x16000
   113d8:	ldr	pc, [ip, #3360]!	; 0xd20

000113dc <getpeername@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #90112	; 0x16000
   113e4:	ldr	pc, [ip, #3352]!	; 0xd18

000113e8 <fputs@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #90112	; 0x16000
   113f0:	ldr	pc, [ip, #3344]!	; 0xd10

000113f4 <strncmp@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #90112	; 0x16000
   113fc:	ldr	pc, [ip, #3336]!	; 0xd08

00011400 <abort@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #90112	; 0x16000
   11408:	ldr	pc, [ip, #3328]!	; 0xd00

0001140c <logwtmp@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #90112	; 0x16000
   11414:	ldr	pc, [ip, #3320]!	; 0xcf8

00011418 <close@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #90112	; 0x16000
   11420:	ldr	pc, [ip, #3312]!	; 0xcf0

00011424 <__assert_fail@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #90112	; 0x16000
   1142c:	ldr	pc, [ip, #3304]!	; 0xce8

00011430 <putc_unlocked@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #90112	; 0x16000
   11438:	ldr	pc, [ip, #3296]!	; 0xce0

Disassembly of section .text:

0001143c <argp_parse@@Base-0xb70>:
   1143c:	push	{r4, r5, r6, r7, lr}
   11440:	sub	sp, sp, #148	; 0x94
   11444:	mov	r7, r0
   11448:	mov	r6, #128	; 0x80
   1144c:	ldr	r0, [r1]
   11450:	mov	r5, r1
   11454:	str	r6, [sp, #12]
   11458:	bl	12b3c <argp_parse@@Base+0xb90>
   1145c:	ldr	r3, [pc, #184]	; 1151c <putc_unlocked@plt+0xec>
   11460:	ldr	r2, [pc, #184]	; 11520 <putc_unlocked@plt+0xf0>
   11464:	mov	r4, #0
   11468:	ldr	r1, [pc, #180]	; 11524 <putc_unlocked@plt+0xf4>
   1146c:	ldr	r0, [pc, #180]	; 11528 <putc_unlocked@plt+0xf8>
   11470:	str	r2, [r3]
   11474:	bl	12994 <argp_parse@@Base+0x9e8>
   11478:	mov	r3, r4
   1147c:	mov	r2, r5
   11480:	mov	r1, r7
   11484:	str	r4, [sp, #4]
   11488:	str	r4, [sp]
   1148c:	ldr	r0, [pc, #152]	; 1152c <putc_unlocked@plt+0xfc>
   11490:	bl	11fac <argp_parse@@Base>
   11494:	ldr	r3, [pc, #148]	; 11530 <putc_unlocked@plt+0x100>
   11498:	ldr	r2, [pc, #148]	; 11534 <putc_unlocked@plt+0x104>
   1149c:	mov	r1, #1
   114a0:	mov	r0, r4
   114a4:	str	r2, [r3]
   114a8:	bl	111cc <dup2@plt>
   114ac:	mov	r1, #2
   114b0:	mov	r0, r4
   114b4:	bl	111cc <dup2@plt>
   114b8:	add	r2, sp, #12
   114bc:	add	r1, sp, #16
   114c0:	mov	r0, r4
   114c4:	str	r6, [sp, #12]
   114c8:	bl	113dc <getpeername@plt>
   114cc:	cmp	r0, r4
   114d0:	bge	114f8 <putc_unlocked@plt+0xc8>
   114d4:	ldr	r3, [pc, #92]	; 11538 <putc_unlocked@plt+0x108>
   114d8:	ldr	r2, [r5]
   114dc:	ldr	r1, [pc, #88]	; 1153c <putc_unlocked@plt+0x10c>
   114e0:	ldr	r0, [r3]
   114e4:	bl	112d4 <fprintf@plt>
   114e8:	ldr	r0, [pc, #80]	; 11540 <putc_unlocked@plt+0x110>
   114ec:	bl	11214 <perror@plt>
   114f0:	mov	r0, #1
   114f4:	bl	11184 <_exit@plt>
   114f8:	bl	11340 <fork@plt>
   114fc:	cmp	r0, #0
   11500:	bne	11510 <putc_unlocked@plt+0xe0>
   11504:	ldr	r1, [sp, #12]
   11508:	add	r0, sp, #16
   1150c:	bl	11898 <putc_unlocked@plt+0x468>
   11510:	bl	116f0 <putc_unlocked@plt+0x2c0>
   11514:	mov	r0, #1
   11518:	bl	112b0 <exit@plt>
   1151c:			; <UNDEFINED> instruction: 0x000282b0
   11520:	andeq	r6, r1, sl, lsr #29
   11524:	andeq	r8, r2, r4, lsl #3
   11528:	andeq	r6, r1, r2, asr #29
   1152c:	andeq	r8, r2, ip, lsr #2
   11530:	andeq	r8, r2, ip, asr #3
   11534:	andeq	r8, r2, r8, asr #2
   11538:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1153c:	andeq	r6, r1, r8, asr #29
   11540:	andeq	r6, r1, sp, asr #29
   11544:	mov	fp, #0
   11548:	mov	lr, #0
   1154c:	pop	{r1}		; (ldr r1, [sp], #4)
   11550:	mov	r2, sp
   11554:	push	{r2}		; (str r2, [sp, #-4]!)
   11558:	push	{r0}		; (str r0, [sp, #-4]!)
   1155c:	ldr	ip, [pc, #16]	; 11574 <putc_unlocked@plt+0x144>
   11560:	push	{ip}		; (str ip, [sp, #-4]!)
   11564:	ldr	r0, [pc, #12]	; 11578 <putc_unlocked@plt+0x148>
   11568:	ldr	r3, [pc, #12]	; 1157c <putc_unlocked@plt+0x14c>
   1156c:	bl	1125c <__libc_start_main@plt>
   11570:	bl	11400 <abort@plt>
   11574:	andeq	r6, r1, ip, lsl lr
   11578:	andeq	r1, r1, ip, lsr r4
   1157c:			; <UNDEFINED> instruction: 0x00016dbc
   11580:	ldr	r3, [pc, #20]	; 1159c <putc_unlocked@plt+0x16c>
   11584:	ldr	r2, [pc, #20]	; 115a0 <putc_unlocked@plt+0x170>
   11588:	add	r3, pc, r3
   1158c:	ldr	r2, [r3, r2]
   11590:	cmp	r2, #0
   11594:	bxeq	lr
   11598:	b	11280 <__gmon_start__@plt>
   1159c:	andeq	r6, r1, r0, ror sl
   115a0:	andeq	r0, r0, ip, lsl r1
   115a4:	ldr	r3, [pc, #28]	; 115c8 <putc_unlocked@plt+0x198>
   115a8:	ldr	r0, [pc, #28]	; 115cc <putc_unlocked@plt+0x19c>
   115ac:	sub	r3, r3, r0
   115b0:	cmp	r3, #6
   115b4:	bxls	lr
   115b8:	ldr	r3, [pc, #16]	; 115d0 <putc_unlocked@plt+0x1a0>
   115bc:	cmp	r3, #0
   115c0:	bxeq	lr
   115c4:	bx	r3
   115c8:	andeq	r8, r2, r7, asr #3
   115cc:	andeq	r8, r2, r4, asr #3
   115d0:	andeq	r0, r0, r0
   115d4:	ldr	r1, [pc, #36]	; 11600 <putc_unlocked@plt+0x1d0>
   115d8:	ldr	r0, [pc, #36]	; 11604 <putc_unlocked@plt+0x1d4>
   115dc:	sub	r1, r1, r0
   115e0:	asr	r1, r1, #2
   115e4:	add	r1, r1, r1, lsr #31
   115e8:	asrs	r1, r1, #1
   115ec:	bxeq	lr
   115f0:	ldr	r3, [pc, #16]	; 11608 <putc_unlocked@plt+0x1d8>
   115f4:	cmp	r3, #0
   115f8:	bxeq	lr
   115fc:	bx	r3
   11600:	andeq	r8, r2, r4, asr #3
   11604:	andeq	r8, r2, r4, asr #3
   11608:	andeq	r0, r0, r0
   1160c:	push	{r4, lr}
   11610:	ldr	r4, [pc, #24]	; 11630 <putc_unlocked@plt+0x200>
   11614:	ldrb	r3, [r4]
   11618:	cmp	r3, #0
   1161c:	popne	{r4, pc}
   11620:	bl	115a4 <putc_unlocked@plt+0x174>
   11624:	mov	r3, #1
   11628:	strb	r3, [r4]
   1162c:	pop	{r4, pc}
   11630:	andeq	r8, r2, r0, ror #3
   11634:	ldr	r0, [pc, #40]	; 11664 <putc_unlocked@plt+0x234>
   11638:	ldr	r3, [r0]
   1163c:	cmp	r3, #0
   11640:	bne	11648 <putc_unlocked@plt+0x218>
   11644:	b	115d4 <putc_unlocked@plt+0x1a4>
   11648:	ldr	r3, [pc, #24]	; 11668 <putc_unlocked@plt+0x238>
   1164c:	cmp	r3, #0
   11650:	beq	11644 <putc_unlocked@plt+0x214>
   11654:	push	{r4, lr}
   11658:	blx	r3
   1165c:	pop	{r4, lr}
   11660:	b	115d4 <putc_unlocked@plt+0x1a4>
   11664:	andeq	r7, r2, r4, lsl #30
   11668:	andeq	r0, r0, r0
   1166c:	cmp	r0, #117	; 0x75
   11670:	moveq	r0, #0
   11674:	ldreq	r3, [pc, #8]	; 11684 <putc_unlocked@plt+0x254>
   11678:	movne	r0, #7
   1167c:	streq	r1, [r3]
   11680:	bx	lr
   11684:	andeq	r8, r2, r8, lsr #2
   11688:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1168c:	mov	r4, r0
   11690:	add	r5, r0, #64	; 0x40
   11694:	mov	r6, #1
   11698:	mov	r7, #0
   1169c:	cmp	r4, r5
   116a0:	beq	116bc <putc_unlocked@plt+0x28c>
   116a4:	mov	r2, r6
   116a8:	add	r1, sp, #7
   116ac:	mov	r0, r7
   116b0:	bl	1113c <read@plt>
   116b4:	cmp	r0, #0
   116b8:	bgt	116c8 <putc_unlocked@plt+0x298>
   116bc:	mvn	r0, #0
   116c0:	add	sp, sp, #12
   116c4:	pop	{r4, r5, r6, r7, pc}
   116c8:	ldrb	r3, [sp, #7]
   116cc:	and	r3, r3, #127	; 0x7f
   116d0:	cmp	r3, #13
   116d4:	cmpne	r3, #10
   116d8:	strb	r3, [sp, #7]
   116dc:	moveq	r0, #0
   116e0:	strbeq	r0, [r4]
   116e4:	beq	116c0 <putc_unlocked@plt+0x290>
   116e8:	strb	r3, [r4], #1
   116ec:	b	1169c <putc_unlocked@plt+0x26c>
   116f0:	push	{r4, r5, lr}
   116f4:	sub	sp, sp, #108	; 0x6c
   116f8:	ldr	r4, [pc, #64]	; 11740 <putc_unlocked@plt+0x310>
   116fc:	ldr	r5, [pc, #64]	; 11744 <putc_unlocked@plt+0x314>
   11700:	mov	r2, #0
   11704:	mov	r0, r2
   11708:	mov	r1, #1
   1170c:	bl	1131c <wait3@plt>
   11710:	subs	r2, r0, #0
   11714:	bgt	11720 <putc_unlocked@plt+0x2f0>
   11718:	add	sp, sp, #108	; 0x6c
   1171c:	pop	{r4, r5, pc}
   11720:	mov	r1, r4
   11724:	add	r0, sp, #4
   11728:	bl	113a0 <sprintf@plt>
   1172c:	mov	r2, r5
   11730:	ldr	r1, [pc, #12]	; 11744 <putc_unlocked@plt+0x314>
   11734:	add	r0, sp, #4
   11738:	bl	1140c <logwtmp@plt>
   1173c:	b	11700 <putc_unlocked@plt+0x2d0>
   11740:	andeq	r6, r1, ip, lsr #28
   11744:	andeq	r7, r1, r0, asr #18
   11748:	push	{r4, r5, r6, r7, lr}
   1174c:	sub	sp, sp, #2368	; 0x940
   11750:	sub	sp, sp, #4
   11754:	mov	r4, #0
   11758:	mov	r5, r1
   1175c:	mov	r7, r2
   11760:	add	r2, sp, #1328	; 0x530
   11764:	mov	r6, r0
   11768:	str	r4, [sp, #8]
   1176c:	str	r4, [sp, #4]
   11770:	str	r4, [sp]
   11774:	ldr	r3, [pc, #272]	; 1188c <putc_unlocked@plt+0x45c>
   11778:	add	r2, r2, #12
   1177c:	mov	r1, r7
   11780:	mov	r0, r5
   11784:	bl	1134c <getnameinfo@plt>
   11788:	cmp	r0, r4
   1178c:	beq	117b8 <putc_unlocked@plt+0x388>
   11790:	mov	r3, #1
   11794:	add	r2, sp, #1328	; 0x530
   11798:	str	r3, [sp, #8]
   1179c:	str	r4, [sp, #4]
   117a0:	str	r4, [sp]
   117a4:	add	r3, r3, #1024	; 0x400
   117a8:	add	r2, r2, #12
   117ac:	mov	r1, r7
   117b0:	mov	r0, r5
   117b4:	bl	1134c <getnameinfo@plt>
   117b8:	bl	112a4 <getpid@plt>
   117bc:	ldr	r1, [pc, #204]	; 11890 <putc_unlocked@plt+0x460>
   117c0:	mov	r2, r0
   117c4:	add	r0, sp, #312	; 0x138
   117c8:	bl	113a0 <sprintf@plt>
   117cc:	add	r2, sp, #1328	; 0x530
   117d0:	add	r2, r2, #12
   117d4:	ldr	r1, [r6]
   117d8:	add	r0, sp, #312	; 0x138
   117dc:	bl	1140c <logwtmp@plt>
   117e0:	mov	r1, #2
   117e4:	ldr	r0, [pc, #168]	; 11894 <putc_unlocked@plt+0x464>
   117e8:	bl	1122c <open64@plt>
   117ec:	subs	r5, r0, #0
   117f0:	blt	11880 <putc_unlocked@plt+0x450>
   117f4:	add	r0, sp, #16
   117f8:	bl	1119c <time@plt>
   117fc:	ldr	r2, [r6, #8]
   11800:	ldr	r3, [sp, #16]
   11804:	mov	r6, #292	; 0x124
   11808:	mov	r4, #0
   1180c:	str	r3, [sp, #20]
   11810:	mul	r2, r6, r2
   11814:	mov	r3, #0
   11818:	str	r4, [sp]
   1181c:	mov	r0, r5
   11820:	bl	11220 <lseek64@plt>
   11824:	add	r1, sp, #1328	; 0x530
   11828:	mov	r2, #1024	; 0x400
   1182c:	add	r1, r1, #12
   11830:	add	r0, sp, #312	; 0x138
   11834:	bl	11310 <strncpy@plt>
   11838:	mov	r2, #31
   1183c:	add	r1, sp, #312	; 0x138
   11840:	add	r0, sp, #24
   11844:	strb	r4, [sp, #1336]	; 0x538
   11848:	bl	11310 <strncpy@plt>
   1184c:	add	r1, sp, #1328	; 0x530
   11850:	mov	r2, #255	; 0xff
   11854:	add	r1, r1, #12
   11858:	add	r0, sp, #56	; 0x38
   1185c:	strb	r4, [sp, #55]	; 0x37
   11860:	bl	11310 <strncpy@plt>
   11864:	mov	r2, r6
   11868:	add	r1, sp, #20
   1186c:	mov	r0, r5
   11870:	strb	r4, [sp, #311]	; 0x137
   11874:	bl	11328 <write@plt>
   11878:	mov	r0, r5
   1187c:	bl	11418 <close@plt>
   11880:	add	sp, sp, #2368	; 0x940
   11884:	add	sp, sp, #4
   11888:	pop	{r4, r5, r6, r7, pc}
   1188c:	andeq	r0, r0, r1, lsl #8
   11890:	andeq	r6, r1, ip, lsr #28
   11894:	andeq	r6, r1, r5, lsr lr
   11898:	push	{r4, r5, r6, r7, r8, lr}
   1189c:	mov	r7, r0
   118a0:	ldr	r5, [pc, #404]	; 11a3c <putc_unlocked@plt+0x60c>
   118a4:	sub	sp, sp, #128	; 0x80
   118a8:	mov	r0, #60	; 0x3c
   118ac:	mov	r8, r1
   118b0:	bl	111c0 <alarm@plt>
   118b4:	ldr	r0, [pc, #388]	; 11a40 <putc_unlocked@plt+0x610>
   118b8:	bl	11130 <printf@plt>
   118bc:	ldr	r0, [r5]
   118c0:	bl	11148 <fflush@plt>
   118c4:	mov	r0, sp
   118c8:	bl	11688 <putc_unlocked@plt+0x258>
   118cc:	cmp	r0, #0
   118d0:	bge	118ec <putc_unlocked@plt+0x4bc>
   118d4:	ldr	r3, [pc, #360]	; 11a44 <putc_unlocked@plt+0x614>
   118d8:	ldr	r0, [pc, #360]	; 11a48 <putc_unlocked@plt+0x618>
   118dc:	ldr	r1, [r3]
   118e0:	bl	113e8 <fputs@plt>
   118e4:	add	sp, sp, #128	; 0x80
   118e8:	pop	{r4, r5, r6, r7, r8, pc}
   118ec:	mov	r3, #0
   118f0:	mov	r0, sp
   118f4:	strb	r3, [sp, #63]	; 0x3f
   118f8:	bl	11118 <getpwnam@plt>
   118fc:	subs	r4, r0, #0
   11900:	bne	11934 <putc_unlocked@plt+0x504>
   11904:	ldr	r0, [pc, #320]	; 11a4c <putc_unlocked@plt+0x61c>
   11908:	bl	11130 <printf@plt>
   1190c:	ldr	r0, [r5]
   11910:	bl	11148 <fflush@plt>
   11914:	add	r0, sp, #64	; 0x40
   11918:	bl	11688 <putc_unlocked@plt+0x258>
   1191c:	ldr	r3, [pc, #288]	; 11a44 <putc_unlocked@plt+0x614>
   11920:	ldr	r1, [r3]
   11924:	cmp	r0, #0
   11928:	bge	11998 <putc_unlocked@plt+0x568>
   1192c:	ldr	r0, [pc, #284]	; 11a50 <putc_unlocked@plt+0x620>
   11930:	b	118e0 <putc_unlocked@plt+0x4b0>
   11934:	ldr	r3, [r4, #4]
   11938:	cmp	r3, #0
   1193c:	beq	119a0 <putc_unlocked@plt+0x570>
   11940:	ldrb	r3, [r3]
   11944:	cmp	r3, #0
   11948:	beq	119a0 <putc_unlocked@plt+0x570>
   1194c:	ldr	r0, [pc, #248]	; 11a4c <putc_unlocked@plt+0x61c>
   11950:	bl	11130 <printf@plt>
   11954:	ldr	r0, [r5]
   11958:	bl	11148 <fflush@plt>
   1195c:	add	r0, sp, #64	; 0x40
   11960:	bl	11688 <putc_unlocked@plt+0x258>
   11964:	cmp	r0, #0
   11968:	ldrlt	r3, [pc, #212]	; 11a44 <putc_unlocked@plt+0x614>
   1196c:	ldrlt	r1, [r3]
   11970:	blt	1192c <putc_unlocked@plt+0x4fc>
   11974:	ldr	r1, [r4, #4]
   11978:	add	r0, sp, #64	; 0x40
   1197c:	bl	1137c <crypt@plt>
   11980:	ldr	r1, [r4, #4]
   11984:	bl	11124 <strcmp@plt>
   11988:	cmp	r0, #0
   1198c:	beq	119a0 <putc_unlocked@plt+0x570>
   11990:	ldr	r3, [pc, #172]	; 11a44 <putc_unlocked@plt+0x614>
   11994:	ldr	r1, [r3]
   11998:	ldr	r0, [pc, #180]	; 11a54 <putc_unlocked@plt+0x624>
   1199c:	b	118e0 <putc_unlocked@plt+0x4b0>
   119a0:	ldr	r5, [pc, #176]	; 11a58 <putc_unlocked@plt+0x628>
   119a4:	ldr	r0, [r4, #24]
   119a8:	ldr	r1, [r5]
   119ac:	bl	11124 <strcmp@plt>
   119b0:	subs	r6, r0, #0
   119b4:	bne	11990 <putc_unlocked@plt+0x560>
   119b8:	bl	111c0 <alarm@plt>
   119bc:	mov	r3, sp
   119c0:	ldr	r2, [pc, #148]	; 11a5c <putc_unlocked@plt+0x62c>
   119c4:	mov	r1, #72	; 0x48
   119c8:	ldr	r0, [pc, #144]	; 11a60 <putc_unlocked@plt+0x630>
   119cc:	bl	112ec <snprintf@plt>
   119d0:	mov	r3, sp
   119d4:	ldr	r2, [pc, #136]	; 11a64 <putc_unlocked@plt+0x634>
   119d8:	mov	r1, #72	; 0x48
   119dc:	ldr	r0, [pc, #132]	; 11a68 <putc_unlocked@plt+0x638>
   119e0:	bl	112ec <snprintf@plt>
   119e4:	mov	r2, r8
   119e8:	mov	r1, r7
   119ec:	mov	r0, r4
   119f0:	bl	11748 <putc_unlocked@plt+0x318>
   119f4:	ldr	r0, [r4, #12]
   119f8:	bl	11244 <setgid@plt>
   119fc:	ldr	r1, [r4, #12]
   11a00:	ldr	r0, [r4]
   11a04:	bl	111e4 <initgroups@plt>
   11a08:	ldr	r0, [r4, #20]
   11a0c:	bl	111f0 <chdir@plt>
   11a10:	cmp	r0, #0
   11a14:	blt	11990 <putc_unlocked@plt+0x560>
   11a18:	ldr	r0, [r4, #8]
   11a1c:	bl	11394 <setuid@plt>
   11a20:	mov	r2, r6
   11a24:	ldr	r1, [pc, #64]	; 11a6c <putc_unlocked@plt+0x63c>
   11a28:	ldr	r0, [r5]
   11a2c:	bl	11358 <execl@plt>
   11a30:	ldr	r0, [pc, #56]	; 11a70 <putc_unlocked@plt+0x640>
   11a34:	bl	11214 <perror@plt>
   11a38:	b	118e4 <putc_unlocked@plt+0x4b4>
   11a3c:	ldrdeq	r8, [r2], -ip
   11a40:	andeq	r6, r1, r6, asr #28
   11a44:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   11a48:	andeq	r6, r1, lr, asr #28
   11a4c:	andeq	r6, r1, r9, asr lr
   11a50:	andeq	r6, r1, r4, ror #28
   11a54:	andeq	r6, r1, r1, ror lr
   11a58:	andeq	r8, r2, r8, lsr #2
   11a5c:	andeq	r6, r1, r2, lsl #29
   11a60:	andeq	r8, r2, r8, ror #4
   11a64:	andeq	r6, r1, sl, lsl #29
   11a68:	andeq	r8, r2, ip, lsl r2
   11a6c:	andeq	r6, r1, r8, asr #30
   11a70:	muleq	r1, r5, lr
   11a74:	push	{r4, r5, r6, lr}
   11a78:	ldr	r6, [r0]
   11a7c:	cmp	r6, #0
   11a80:	beq	11acc <putc_unlocked@plt+0x69c>
   11a84:	mov	ip, r2
   11a88:	ldr	r2, [r0, #32]
   11a8c:	mov	r5, r1
   11a90:	str	r2, [r1, #36]	; 0x24
   11a94:	ldr	r2, [r0, #24]
   11a98:	mov	r4, r0
   11a9c:	str	r2, [r1, #28]
   11aa0:	ldr	r2, [r0, #28]
   11aa4:	str	r2, [r1, #32]
   11aa8:	ldr	r2, [r0, #12]
   11aac:	mov	r0, ip
   11ab0:	str	r2, [r1, #20]
   11ab4:	mov	r2, r1
   11ab8:	mov	r1, r3
   11abc:	blx	r6
   11ac0:	ldr	r3, [r5, #36]	; 0x24
   11ac4:	str	r3, [r4, #32]
   11ac8:	pop	{r4, r5, r6, pc}
   11acc:	mov	r0, #7
   11ad0:	pop	{r4, r5, r6, pc}
   11ad4:	ldr	r3, [r0]
   11ad8:	push	{r4, r5, r6, lr}
   11adc:	cmp	r3, #0
   11ae0:	ldr	r4, [r0, #16]
   11ae4:	bne	11af4 <putc_unlocked@plt+0x6c4>
   11ae8:	ldr	r2, [r0, #4]
   11aec:	cmp	r2, #0
   11af0:	beq	11b5c <putc_unlocked@plt+0x72c>
   11af4:	ldr	r2, [r1, #8]
   11af8:	cmp	r3, #0
   11afc:	add	r2, r2, #1
   11b00:	str	r2, [r1, #8]
   11b04:	beq	11b5c <putc_unlocked@plt+0x72c>
   11b08:	mov	r2, #0
   11b0c:	add	r3, r3, #24
   11b10:	ldr	r0, [r3, #-20]	; 0xffffffec
   11b14:	cmp	r0, #0
   11b18:	bne	11b98 <putc_unlocked@plt+0x768>
   11b1c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11b20:	cmp	r0, #0
   11b24:	bne	11b98 <putc_unlocked@plt+0x768>
   11b28:	ldr	r0, [r3, #-8]
   11b2c:	cmp	r0, #0
   11b30:	bne	11b98 <putc_unlocked@plt+0x768>
   11b34:	ldr	r0, [r3, #-4]
   11b38:	cmp	r0, #0
   11b3c:	bne	11b98 <putc_unlocked@plt+0x768>
   11b40:	ldr	r3, [r1]
   11b44:	add	r0, r2, r2, lsl #1
   11b48:	add	r3, r3, r0
   11b4c:	str	r3, [r1]
   11b50:	ldr	r3, [r1, #4]
   11b54:	add	r2, r3, r2
   11b58:	str	r2, [r1, #4]
   11b5c:	cmp	r4, #0
   11b60:	movne	r5, r1
   11b64:	addne	r4, r4, #16
   11b68:	bne	11b84 <putc_unlocked@plt+0x754>
   11b6c:	pop	{r4, r5, r6, pc}
   11b70:	mov	r1, r5
   11b74:	bl	11ad4 <putc_unlocked@plt+0x6a4>
   11b78:	ldr	r3, [r5, #12]
   11b7c:	add	r3, r3, #1
   11b80:	str	r3, [r5, #12]
   11b84:	add	r4, r4, #16
   11b88:	ldr	r0, [r4, #-32]	; 0xffffffe0
   11b8c:	cmp	r0, #0
   11b90:	bne	11b70 <putc_unlocked@plt+0x740>
   11b94:	pop	{r4, r5, r6, pc}
   11b98:	add	r2, r2, #1
   11b9c:	b	11b0c <putc_unlocked@plt+0x6dc>
   11ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ba4:	sub	sp, sp, #36	; 0x24
   11ba8:	ldr	r6, [r0]
   11bac:	mov	r9, r0
   11bb0:	cmp	r6, #0
   11bb4:	str	r1, [sp, #16]
   11bb8:	str	r2, [sp, #20]
   11bbc:	mov	r4, r3
   11bc0:	ldr	r5, [sp, #72]	; 0x48
   11bc4:	ldr	sl, [r0, #16]
   11bc8:	addne	r7, r6, #24
   11bcc:	movne	fp, #0
   11bd0:	bne	11d4c <putc_unlocked@plt+0x91c>
   11bd4:	ldr	r6, [r0, #4]
   11bd8:	cmp	r6, #0
   11bdc:	beq	11c40 <putc_unlocked@plt+0x810>
   11be0:	ldr	r3, [r9, #4]
   11be4:	ldr	r2, [sp, #16]
   11be8:	stm	r4, {r3, r9}
   11bec:	ldr	r3, [r5, #4]
   11bf0:	str	r2, [r4, #16]
   11bf4:	str	r3, [r4, #8]
   11bf8:	ldr	r2, [sp, #20]
   11bfc:	mov	r3, #0
   11c00:	cmp	sl, r3
   11c04:	str	r3, [r4, #12]
   11c08:	str	r2, [r4, #20]
   11c0c:	str	r3, [r4, #24]
   11c10:	str	r3, [r4, #32]
   11c14:	str	r3, [r4, #28]
   11c18:	beq	11c38 <putc_unlocked@plt+0x808>
   11c1c:	ldr	r2, [sl, r3, lsl #4]
   11c20:	cmp	r2, #0
   11c24:	bne	11da8 <putc_unlocked@plt+0x978>
   11c28:	ldr	r2, [r5, #12]
   11c2c:	add	r3, r2, r3, lsl #2
   11c30:	str	r2, [r4, #28]
   11c34:	str	r3, [r5, #12]
   11c38:	mov	r6, r4
   11c3c:	add	r4, r4, #36	; 0x24
   11c40:	cmp	sl, #0
   11c44:	movne	r2, #0
   11c48:	bne	11dcc <putc_unlocked@plt+0x99c>
   11c4c:	mov	r0, r4
   11c50:	add	sp, sp, #36	; 0x24
   11c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c58:	tst	r2, #8
   11c5c:	bne	11c84 <putc_unlocked@plt+0x854>
   11c60:	sub	r3, r8, #1
   11c64:	cmp	r3, #254	; 0xfe
   11c68:	bhi	11c84 <putc_unlocked@plt+0x854>
   11c6c:	bl	11298 <__ctype_b_loc@plt>
   11c70:	lsl	r3, r8, #1
   11c74:	ldr	r2, [r0]
   11c78:	ldrh	r3, [r2, r3]
   11c7c:	tst	r3, #16384	; 0x4000
   11c80:	bne	11ddc <putc_unlocked@plt+0x9ac>
   11c84:	ldr	r3, [r7, #-24]	; 0xffffffe8
   11c88:	cmp	r3, #0
   11c8c:	beq	11d48 <putc_unlocked@plt+0x918>
   11c90:	ldr	r2, [r5]
   11c94:	str	r2, [sp, #12]
   11c98:	ldr	r2, [r2, #8]
   11c9c:	mov	r8, r2
   11ca0:	ldr	r0, [r8]
   11ca4:	cmp	r0, #0
   11ca8:	beq	11cd8 <putc_unlocked@plt+0x8a8>
   11cac:	mov	r1, r3
   11cb0:	str	r2, [sp, #28]
   11cb4:	str	r3, [sp, #24]
   11cb8:	bl	11124 <strcmp@plt>
   11cbc:	ldr	r3, [sp, #24]
   11cc0:	ldr	r2, [sp, #28]
   11cc4:	cmp	r0, #0
   11cc8:	bne	11da0 <putc_unlocked@plt+0x970>
   11ccc:	sub	r8, r8, r2
   11cd0:	cmn	r8, #15
   11cd4:	bge	11d48 <putc_unlocked@plt+0x918>
   11cd8:	ldr	r1, [r5, #8]
   11cdc:	str	r3, [r1]
   11ce0:	ldr	r3, [r6, #8]
   11ce4:	cmp	r3, #0
   11ce8:	beq	11d00 <putc_unlocked@plt+0x8d0>
   11cec:	ldr	r3, [r6, #12]
   11cf0:	tst	r3, #1
   11cf4:	movne	r3, #2
   11cf8:	moveq	r3, #1
   11cfc:	str	r3, [sp, #8]
   11d00:	ldr	r2, [sp, #12]
   11d04:	ldr	r3, [sp, #8]
   11d08:	ldr	r0, [pc, #292]	; 11e34 <putc_unlocked@plt+0xa04>
   11d0c:	ldr	r2, [r2, #48]	; 0x30
   11d10:	stmib	r1, {r3, fp}
   11d14:	sub	r2, r4, r2
   11d18:	ldr	r3, [r7, #-20]	; 0xffffffec
   11d1c:	asr	r2, r2, #2
   11d20:	cmp	r3, #0
   11d24:	mul	r2, r0, r2
   11d28:	ldreq	r3, [r6, #4]
   11d2c:	add	r2, r2, #1
   11d30:	bic	r3, r3, #-16777216	; 0xff000000
   11d34:	add	r3, r3, r2, lsl #24
   11d38:	str	r3, [r1, #12]
   11d3c:	add	r3, r1, #16
   11d40:	str	r3, [r5, #8]
   11d44:	str	fp, [r1, #16]
   11d48:	add	r7, r7, #24
   11d4c:	ldr	r8, [r7, #-20]	; 0xffffffec
   11d50:	sub	r3, r7, #24
   11d54:	cmp	r8, #0
   11d58:	bne	11d80 <putc_unlocked@plt+0x950>
   11d5c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   11d60:	cmp	r2, #0
   11d64:	bne	11d80 <putc_unlocked@plt+0x950>
   11d68:	ldr	r2, [r7, #-8]
   11d6c:	cmp	r2, #0
   11d70:	bne	11d80 <putc_unlocked@plt+0x950>
   11d74:	ldr	r2, [r7, #-4]
   11d78:	cmp	r2, #0
   11d7c:	beq	11be0 <putc_unlocked@plt+0x7b0>
   11d80:	ldr	r2, [r7, #-12]
   11d84:	tst	r2, #4
   11d88:	moveq	r6, r3
   11d8c:	ldr	r3, [r6, #12]
   11d90:	ands	r3, r3, #8
   11d94:	str	r3, [sp, #8]
   11d98:	beq	11c58 <putc_unlocked@plt+0x828>
   11d9c:	b	11d48 <putc_unlocked@plt+0x918>
   11da0:	add	r8, r8, #16
   11da4:	b	11ca0 <putc_unlocked@plt+0x870>
   11da8:	add	r3, r3, #1
   11dac:	b	11c1c <putc_unlocked@plt+0x7ec>
   11db0:	mov	r3, r4
   11db4:	str	r5, [sp]
   11db8:	mov	r1, r6
   11dbc:	add	r7, r2, #1
   11dc0:	bl	11ba0 <putc_unlocked@plt+0x770>
   11dc4:	mov	r2, r7
   11dc8:	mov	r4, r0
   11dcc:	ldr	r0, [sl, r2, lsl #4]
   11dd0:	cmp	r0, #0
   11dd4:	bne	11db0 <putc_unlocked@plt+0x980>
   11dd8:	b	11c4c <putc_unlocked@plt+0x81c>
   11ddc:	ldr	r3, [r5, #4]
   11de0:	add	r2, r3, #1
   11de4:	str	r2, [r5, #4]
   11de8:	strb	r8, [r3]
   11dec:	ldr	r3, [r6, #8]
   11df0:	cmp	r3, #0
   11df4:	beq	11e28 <putc_unlocked@plt+0x9f8>
   11df8:	ldr	r3, [r5, #4]
   11dfc:	add	r2, r3, #1
   11e00:	str	r2, [r5, #4]
   11e04:	mov	r2, #58	; 0x3a
   11e08:	strb	r2, [r3]
   11e0c:	ldr	r3, [r6, #12]
   11e10:	tst	r3, #1
   11e14:	ldrne	r3, [r5, #4]
   11e18:	addne	r2, r3, #1
   11e1c:	strne	r2, [r5, #4]
   11e20:	movne	r2, #58	; 0x3a
   11e24:	strbne	r2, [r3]
   11e28:	ldr	r3, [r5, #4]
   11e2c:	strb	fp, [r3]
   11e30:	b	11c84 <putc_unlocked@plt+0x854>
   11e34:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   11e38:	cmp	r0, #86	; 0x56
   11e3c:	bne	11ea8 <putc_unlocked@plt+0xa78>
   11e40:	ldr	r3, [pc, #112]	; 11eb8 <putc_unlocked@plt+0xa88>
   11e44:	push	{r4, lr}
   11e48:	mov	r4, r2
   11e4c:	ldr	r3, [r3]
   11e50:	cmp	r3, #0
   11e54:	beq	11e74 <putc_unlocked@plt+0xa44>
   11e58:	mov	r1, r2
   11e5c:	ldr	r0, [r2, #48]	; 0x30
   11e60:	blx	r3
   11e64:	ldr	r0, [r4, #16]
   11e68:	ands	r0, r0, #32
   11e6c:	bne	11eb0 <putc_unlocked@plt+0xa80>
   11e70:	bl	112b0 <exit@plt>
   11e74:	ldr	r3, [pc, #64]	; 11ebc <putc_unlocked@plt+0xa8c>
   11e78:	ldr	r2, [r3]
   11e7c:	cmp	r2, #0
   11e80:	beq	11e94 <putc_unlocked@plt+0xa64>
   11e84:	ldr	r1, [pc, #52]	; 11ec0 <putc_unlocked@plt+0xa90>
   11e88:	ldr	r0, [r4, #48]	; 0x30
   11e8c:	bl	112d4 <fprintf@plt>
   11e90:	b	11e64 <putc_unlocked@plt+0xa34>
   11e94:	ldr	r2, [pc, #40]	; 11ec4 <putc_unlocked@plt+0xa94>
   11e98:	ldr	r1, [pc, #40]	; 11ec8 <putc_unlocked@plt+0xa98>
   11e9c:	mov	r0, r4
   11ea0:	bl	15bc8 <argp_error@@Base>
   11ea4:	b	11e64 <putc_unlocked@plt+0xa34>
   11ea8:	mov	r0, #7
   11eac:	bx	lr
   11eb0:	mov	r0, #0
   11eb4:	pop	{r4, pc}
   11eb8:	andeq	r8, r2, r8, ror #3
   11ebc:			; <UNDEFINED> instruction: 0x000282b4
   11ec0:	ldrdeq	r7, [r1], -lr
   11ec4:	andeq	r7, r1, r4, ror r0
   11ec8:	andeq	r7, r1, r6, lsl r7
   11ecc:	cmn	r0, #3
   11ed0:	push	{r4, r5, r6, lr}
   11ed4:	mov	r4, r2
   11ed8:	beq	11f1c <putc_unlocked@plt+0xaec>
   11edc:	mov	r5, r1
   11ee0:	bgt	11ef4 <putc_unlocked@plt+0xac4>
   11ee4:	cmn	r0, #4
   11ee8:	beq	11f58 <putc_unlocked@plt+0xb28>
   11eec:	mov	r0, #7
   11ef0:	pop	{r4, r5, r6, pc}
   11ef4:	cmn	r0, #2
   11ef8:	beq	11f24 <putc_unlocked@plt+0xaf4>
   11efc:	cmp	r0, #63	; 0x3f
   11f00:	ldreq	r2, [pc, #140]	; 11f94 <putc_unlocked@plt+0xb64>
   11f04:	bne	11eec <putc_unlocked@plt+0xabc>
   11f08:	ldr	r1, [r4, #48]	; 0x30
   11f0c:	mov	r0, r4
   11f10:	bl	15b28 <argp_state_help@@Base>
   11f14:	mov	r0, #0
   11f18:	pop	{r4, r5, r6, pc}
   11f1c:	ldr	r2, [pc, #116]	; 11f98 <putc_unlocked@plt+0xb68>
   11f20:	b	11f08 <putc_unlocked@plt+0xad8>
   11f24:	ldr	r3, [pc, #112]	; 11f9c <putc_unlocked@plt+0xb6c>
   11f28:	mov	r0, r1
   11f2c:	str	r1, [r3]
   11f30:	bl	129b8 <argp_parse@@Base+0xa0c>
   11f34:	ldr	r3, [pc, #100]	; 11fa0 <putc_unlocked@plt+0xb70>
   11f38:	str	r0, [r3]
   11f3c:	ldr	r3, [r4, #16]
   11f40:	str	r0, [r4, #40]	; 0x28
   11f44:	and	r3, r3, #3
   11f48:	cmp	r3, #1
   11f4c:	ldreq	r3, [r4, #8]
   11f50:	streq	r5, [r3]
   11f54:	b	11f14 <putc_unlocked@plt+0xae4>
   11f58:	cmp	r1, #0
   11f5c:	ldr	r0, [pc, #64]	; 11fa4 <putc_unlocked@plt+0xb74>
   11f60:	movne	r0, r1
   11f64:	bl	113c4 <atoi@plt>
   11f68:	ldr	r4, [pc, #56]	; 11fa8 <putc_unlocked@plt+0xb78>
   11f6c:	mov	r5, #1
   11f70:	str	r0, [r4]
   11f74:	ldr	r3, [r4]
   11f78:	sub	r2, r3, #1
   11f7c:	cmp	r3, #0
   11f80:	str	r2, [r4]
   11f84:	ble	11f14 <putc_unlocked@plt+0xae4>
   11f88:	mov	r0, r5
   11f8c:	bl	111b4 <sleep@plt>
   11f90:	b	11f74 <putc_unlocked@plt+0xb44>
   11f94:	andeq	r0, r0, sl, ror r2
   11f98:	andeq	r0, r0, r1, lsl #4
   11f9c:	ldrdeq	r8, [r2], -r0
   11fa0:	andeq	r8, r2, r8, asr #3
   11fa4:	muleq	r1, r7, r0
   11fa8:	andeq	r8, r2, r4, ror #3

00011fac <argp_parse@@Base>:
   11fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb0:	add	fp, sp, #32
   11fb4:	tst	r3, #1
   11fb8:	sub	sp, sp, #220	; 0xdc
   11fbc:	mov	r4, r0
   11fc0:	mov	r8, r2
   11fc4:	str	r1, [fp, #-240]	; 0xffffff10
   11fc8:	mov	sl, r3
   11fcc:	bne	12000 <argp_parse@@Base+0x54>
   11fd0:	ldr	r3, [pc, #2296]	; 128d0 <argp_parse@@Base+0x924>
   11fd4:	ldr	r5, [pc, #2296]	; 128d4 <argp_parse@@Base+0x928>
   11fd8:	ldr	r2, [r3]
   11fdc:	cmp	r2, #0
   11fe0:	ldreq	r2, [r8]
   11fe4:	streq	r2, [r3]
   11fe8:	ldr	r3, [r5]
   11fec:	cmp	r3, #0
   11ff0:	bne	12000 <argp_parse@@Base+0x54>
   11ff4:	ldr	r0, [r8]
   11ff8:	bl	129b8 <argp_parse@@Base+0xa0c>
   11ffc:	str	r0, [r5]
   12000:	ands	r7, sl, #16
   12004:	bne	1208c <argp_parse@@Base+0xe0>
   12008:	sub	sp, sp, #72	; 0x48
   1200c:	add	r5, sp, #8
   12010:	sub	sp, sp, #40	; 0x28
   12014:	add	r6, sp, #8
   12018:	mov	r2, #28
   1201c:	mov	r1, r7
   12020:	mov	r0, r6
   12024:	bl	11304 <memset@plt>
   12028:	str	r5, [r6, #16]
   1202c:	mov	r0, r5
   12030:	mov	r2, #64	; 0x40
   12034:	mov	r1, r7
   12038:	bl	11304 <memset@plt>
   1203c:	cmp	r4, #0
   12040:	strne	r4, [r5]
   12044:	ldr	r3, [pc, #2188]	; 128d8 <argp_parse@@Base+0x92c>
   12048:	addne	r5, r5, #16
   1204c:	str	r3, [r5]
   12050:	ldr	r3, [pc, #2180]	; 128dc <argp_parse@@Base+0x930>
   12054:	ldr	r3, [r3]
   12058:	cmp	r3, #0
   1205c:	bne	12074 <argp_parse@@Base+0xc8>
   12060:	ldr	r3, [pc, #2168]	; 128e0 <argp_parse@@Base+0x934>
   12064:	ldr	r3, [r3]
   12068:	cmp	r3, #0
   1206c:	addeq	r3, r5, #16
   12070:	beq	12080 <argp_parse@@Base+0xd4>
   12074:	ldr	r2, [pc, #2152]	; 128e4 <argp_parse@@Base+0x938>
   12078:	add	r3, r5, #32
   1207c:	str	r2, [r5, #16]
   12080:	mov	r4, r6
   12084:	mov	r2, #0
   12088:	str	r2, [r3]
   1208c:	mov	r2, #36	; 0x24
   12090:	mov	r1, #0
   12094:	sub	r0, fp, #196	; 0xc4
   12098:	bl	11304 <memset@plt>
   1209c:	ands	r3, sl, #4
   120a0:	moveq	r3, #1
   120a4:	movne	r3, #0
   120a8:	str	r3, [fp, #-228]	; 0xffffff1c
   120ac:	mov	r3, #0
   120b0:	cmp	r4, r3
   120b4:	str	r3, [fp, #-224]	; 0xffffff20
   120b8:	str	r3, [fp, #-220]	; 0xffffff24
   120bc:	str	r3, [fp, #-216]	; 0xffffff28
   120c0:	beq	120d0 <argp_parse@@Base+0x124>
   120c4:	sub	r1, fp, #228	; 0xe4
   120c8:	mov	r0, r4
   120cc:	bl	11ad4 <putc_unlocked@plt+0x6a4>
   120d0:	ldr	r9, [fp, #-220]	; 0xffffff24
   120d4:	ldr	r5, [fp, #-216]	; 0xffffff28
   120d8:	add	r3, r9, #1
   120dc:	mov	r9, #36	; 0x24
   120e0:	ldr	r6, [fp, #-224]	; 0xffffff20
   120e4:	mul	r9, r9, r3
   120e8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   120ec:	lsl	r5, r5, #2
   120f0:	add	r6, r6, #1
   120f4:	add	r3, r9, r5
   120f8:	add	r6, r3, r6, lsl #4
   120fc:	add	r0, r0, #1
   12100:	add	r0, r0, r6
   12104:	str	r3, [fp, #-236]	; 0xffffff14
   12108:	bl	12fc8 <argp_parse@@Base+0x101c>
   1210c:	cmp	r0, #0
   12110:	mov	r7, r0
   12114:	str	r0, [fp, #-40]	; 0xffffffd8
   12118:	moveq	r4, #12
   1211c:	beq	1229c <argp_parse@@Base+0x2f0>
   12120:	add	r3, r0, r9
   12124:	str	r3, [fp, #-232]	; 0xffffff18
   12128:	str	r3, [fp, #-104]	; 0xffffff98
   1212c:	ldr	r3, [fp, #-236]	; 0xffffff14
   12130:	sub	lr, fp, #196	; 0xc4
   12134:	add	r3, r0, r3
   12138:	str	r3, [fp, #-236]	; 0xffffff14
   1213c:	str	r3, [fp, #-152]	; 0xffffff68
   12140:	mov	r3, #1
   12144:	add	r9, r0, r6
   12148:	str	r0, [fp, #-112]	; 0xffffff90
   1214c:	str	r3, [fp, #-196]	; 0xffffff3c
   12150:	str	r3, [fp, #-192]	; 0xffffff40
   12154:	ldm	lr!, {r0, r1, r2, r3}
   12158:	sub	ip, fp, #148	; 0x94
   1215c:	str	r9, [fp, #-156]	; 0xffffff64
   12160:	stmia	ip!, {r0, r1, r2, r3}
   12164:	ldm	lr!, {r0, r1, r2, r3}
   12168:	stmia	ip!, {r0, r1, r2, r3}
   1216c:	mov	r2, r5
   12170:	ldr	r3, [lr]
   12174:	mov	r1, #0
   12178:	ldr	r0, [fp, #-232]	; 0xffffff18
   1217c:	str	r3, [ip]
   12180:	bl	11304 <memset@plt>
   12184:	ldr	r3, [fp, #-236]	; 0xffffff14
   12188:	tst	sl, #8
   1218c:	str	r3, [fp, #-204]	; 0xffffff34
   12190:	ldr	r3, [fp, #-232]	; 0xffffff18
   12194:	str	r9, [fp, #-208]	; 0xffffff30
   12198:	sub	r5, fp, #160	; 0xa0
   1219c:	addne	r9, r9, #1
   121a0:	str	r3, [fp, #-200]	; 0xffffff38
   121a4:	str	r5, [fp, #-212]	; 0xffffff2c
   121a8:	strne	r9, [fp, #-208]	; 0xffffff30
   121ac:	movne	r3, #45	; 0x2d
   121b0:	bne	121cc <argp_parse@@Base+0x220>
   121b4:	ands	r3, sl, #4
   121b8:	cmp	r3, #0
   121bc:	beq	121d0 <argp_parse@@Base+0x224>
   121c0:	mov	r3, #43	; 0x2b
   121c4:	add	r9, r9, #1
   121c8:	str	r9, [fp, #-208]	; 0xffffff30
   121cc:	strb	r3, [r7, r6]
   121d0:	ldr	r3, [fp, #-208]	; 0xffffff30
   121d4:	mov	r2, #0
   121d8:	cmp	r4, r2
   121dc:	strb	r2, [r3]
   121e0:	ldr	r3, [fp, #-204]	; 0xffffff34
   121e4:	str	r2, [r3]
   121e8:	ldreq	r3, [fp, #-112]	; 0xffffff90
   121ec:	str	r4, [fp, #-160]	; 0xffffff60
   121f0:	streq	r3, [fp, #-108]	; 0xffffff94
   121f4:	beq	12214 <argp_parse@@Base+0x268>
   121f8:	sub	r3, fp, #212	; 0xd4
   121fc:	str	r3, [sp]
   12200:	mov	r1, r2
   12204:	ldr	r3, [fp, #-112]	; 0xffffff90
   12208:	mov	r0, r4
   1220c:	bl	11ba0 <putc_unlocked@plt+0x770>
   12210:	str	r0, [fp, #-108]	; 0xffffff94
   12214:	mov	r2, #56	; 0x38
   12218:	mov	r1, #0
   1221c:	add	r0, r5, #64	; 0x40
   12220:	bl	11304 <memset@plt>
   12224:	ldr	r3, [fp, #-160]	; 0xffffff60
   12228:	ldr	r6, [fp, #-112]	; 0xffffff90
   1222c:	str	r3, [fp, #-96]	; 0xffffffa0
   12230:	ldr	r3, [fp, #-240]	; 0xffffff10
   12234:	str	sl, [fp, #-80]	; 0xffffffb0
   12238:	str	r3, [fp, #-92]	; 0xffffffa4
   1223c:	ldr	r3, [pc, #1700]	; 128e8 <argp_parse@@Base+0x93c>
   12240:	mov	r4, #0
   12244:	ldr	sl, [pc, #1696]	; 128ec <argp_parse@@Base+0x940>
   12248:	ldr	r3, [r3]
   1224c:	add	r7, r5, #64	; 0x40
   12250:	str	r3, [fp, #-52]	; 0xffffffcc
   12254:	ldr	r3, [pc, #1684]	; 128f0 <argp_parse@@Base+0x944>
   12258:	mov	r9, r4
   1225c:	str	r8, [fp, #-88]	; 0xffffffa8
   12260:	ldr	r3, [r3]
   12264:	str	r5, [fp, #-44]	; 0xffffffd4
   12268:	str	r3, [fp, #-48]	; 0xffffffd0
   1226c:	mov	r3, #1
   12270:	str	r3, [fp, #-100]	; 0xffffff9c
   12274:	ldr	r3, [fp, #-108]	; 0xffffff94
   12278:	cmp	r6, r3
   1227c:	ldrcc	r3, [fp, #8]
   12280:	strcc	r3, [r6, #24]
   12284:	ldr	r3, [fp, #-108]	; 0xffffff94
   12288:	cmp	r6, r3
   1228c:	bcs	12310 <argp_parse@@Base+0x364>
   12290:	cmp	r4, #7
   12294:	cmpne	r4, #0
   12298:	beq	122a8 <argp_parse@@Base+0x2fc>
   1229c:	mov	r0, r4
   122a0:	sub	sp, fp, #32
   122a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122a8:	ldr	r3, [r6, #16]
   122ac:	cmp	r3, #0
   122b0:	ldrne	r3, [r3, #28]
   122b4:	ldrne	r2, [r6, #20]
   122b8:	ldrne	r3, [r3, r2, lsl #2]
   122bc:	strne	r3, [r6, #24]
   122c0:	ldr	r3, [r6]
   122c4:	cmp	r3, #0
   122c8:	bne	122f0 <argp_parse@@Base+0x344>
   122cc:	ldr	r3, [r6, #4]
   122d0:	ldr	r3, [r3, #16]
   122d4:	cmp	r3, #0
   122d8:	beq	122f0 <argp_parse@@Base+0x344>
   122dc:	ldr	r3, [r3]
   122e0:	cmp	r3, #0
   122e4:	ldrne	r3, [r6, #28]
   122e8:	ldrne	r2, [r6, #24]
   122ec:	strne	r2, [r3]
   122f0:	mov	r0, r6
   122f4:	mov	r3, r9
   122f8:	mov	r2, sl
   122fc:	mov	r1, r7
   12300:	bl	11a74 <putc_unlocked@plt+0x644>
   12304:	add	r6, r6, #36	; 0x24
   12308:	mov	r4, r0
   1230c:	b	12284 <argp_parse@@Base+0x2d8>
   12310:	cmp	r4, #7
   12314:	beq	12320 <argp_parse@@Base+0x374>
   12318:	cmp	r4, #0
   1231c:	bne	1229c <argp_parse@@Base+0x2f0>
   12320:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12324:	tst	r3, #2
   12328:	moveq	r3, #1
   1232c:	streq	r3, [fp, #-144]	; 0xffffff70
   12330:	beq	12358 <argp_parse@@Base+0x3ac>
   12334:	tst	r3, #1
   12338:	mov	r2, #0
   1233c:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   12340:	str	r2, [fp, #-144]	; 0xffffff70
   12344:	subne	r3, r3, #4
   12348:	strne	r3, [fp, #-88]	; 0xffffffa8
   1234c:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   12350:	addne	r3, r3, #1
   12354:	strne	r3, [fp, #-92]	; 0xffffffa4
   12358:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1235c:	cmp	r8, r3
   12360:	bne	12384 <argp_parse@@Base+0x3d8>
   12364:	ldr	r0, [r8]
   12368:	cmp	r0, #0
   1236c:	beq	12384 <argp_parse@@Base+0x3d8>
   12370:	bl	129b8 <argp_parse@@Base+0xa0c>
   12374:	str	r0, [fp, #-56]	; 0xffffffc8
   12378:	add	r8, r5, #64	; 0x40
   1237c:	ldr	r9, [pc, #1392]	; 128f4 <argp_parse@@Base+0x948>
   12380:	b	12548 <argp_parse@@Base+0x59c>
   12384:	ldr	r3, [pc, #1352]	; 128d4 <argp_parse@@Base+0x928>
   12388:	ldr	r3, [r3]
   1238c:	str	r3, [fp, #-56]	; 0xffffffc8
   12390:	b	12378 <argp_parse@@Base+0x3cc>
   12394:	bl	12ac0 <argp_parse@@Base+0xb14>
   12398:	b	125b4 <argp_parse@@Base+0x608>
   1239c:	cmp	r0, #63	; 0x3f
   123a0:	bne	12864 <argp_parse@@Base+0x8b8>
   123a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   123a8:	cmn	r3, #1
   123ac:	bne	12808 <argp_parse@@Base+0x85c>
   123b0:	asrs	r3, r6, #24
   123b4:	bne	12670 <argp_parse@@Base+0x6c4>
   123b8:	mov	r1, r6
   123bc:	ldr	r0, [fp, #-156]	; 0xffffff64
   123c0:	bl	112c8 <strchr@plt>
   123c4:	subs	r2, r0, #0
   123c8:	beq	12404 <argp_parse@@Base+0x458>
   123cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   123d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   123d4:	cmp	r0, r3
   123d8:	bcs	12404 <argp_parse@@Base+0x458>
   123dc:	ldr	r1, [r0, #8]
   123e0:	cmp	r2, r1
   123e4:	bcs	12668 <argp_parse@@Base+0x6bc>
   123e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   123ec:	mov	r2, r6
   123f0:	mov	r1, r8
   123f4:	bl	11a74 <putc_unlocked@plt+0x644>
   123f8:	cmp	r0, #7
   123fc:	mov	r4, r0
   12400:	bne	126fc <argp_parse@@Base+0x750>
   12404:	ldr	r3, [pc, #1260]	; 128f8 <argp_parse@@Base+0x94c>
   12408:	ldr	r1, [pc, #1260]	; 128fc <argp_parse@@Base+0x950>
   1240c:	mov	r2, r6
   12410:	add	r0, r5, #64	; 0x40
   12414:	bl	15bc8 <argp_error@@Base>
   12418:	sub	r7, r6, #1
   1241c:	mov	r4, #7
   12420:	clz	r7, r7
   12424:	lsr	r7, r7, #5
   12428:	cmp	r4, #7
   1242c:	movne	r7, #0
   12430:	andeq	r7, r7, #1
   12434:	cmp	r7, #0
   12438:	beq	1277c <argp_parse@@Base+0x7d0>
   1243c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12440:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12444:	cmp	r3, r2
   12448:	bne	127d4 <argp_parse@@Base+0x828>
   1244c:	mov	r4, #0
   12450:	ldr	r7, [fp, #-112]	; 0xffffff90
   12454:	ldr	sl, [pc, #1188]	; 12900 <argp_parse@@Base+0x954>
   12458:	add	r8, r5, #64	; 0x40
   1245c:	mov	r9, r4
   12460:	ldr	r6, [fp, #-108]	; 0xffffff94
   12464:	cmp	r7, r6
   12468:	bcc	12708 <argp_parse@@Base+0x75c>
   1246c:	ldr	r9, [pc, #1168]	; 12904 <argp_parse@@Base+0x958>
   12470:	sub	r6, r6, #36	; 0x24
   12474:	add	r7, r5, #64	; 0x40
   12478:	mov	r8, #0
   1247c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12480:	cmp	r6, r3
   12484:	bcc	12760 <argp_parse@@Base+0x7b4>
   12488:	cmp	r4, #7
   1248c:	cmpne	r4, #0
   12490:	beq	12740 <argp_parse@@Base+0x794>
   12494:	ldr	r3, [fp, #4]
   12498:	cmp	r3, #0
   1249c:	beq	1277c <argp_parse@@Base+0x7d0>
   124a0:	ldr	r2, [fp, #4]
   124a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   124a8:	str	r3, [r2]
   124ac:	b	12774 <argp_parse@@Base+0x7c8>
   124b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   124b4:	tst	r2, #4
   124b8:	bne	1243c <argp_parse@@Base+0x490>
   124bc:	add	r2, r3, #1
   124c0:	str	r2, [fp, #-84]	; 0xffffffac
   124c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   124c8:	ldr	r3, [r2, r3, lsl #2]
   124cc:	str	r3, [fp, #-136]	; 0xffffff78
   124d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   124d4:	ldr	r7, [fp, #-84]	; 0xffffffac
   124d8:	str	r3, [fp, #-232]	; 0xffffff18
   124dc:	ldr	r6, [fp, #-112]	; 0xffffff90
   124e0:	mov	r3, #0
   124e4:	mov	r4, #7
   124e8:	mov	sl, r3
   124ec:	sub	r7, r7, #1
   124f0:	str	r7, [fp, #-84]	; 0xffffffac
   124f4:	ldr	r2, [fp, #-108]	; 0xffffff94
   124f8:	cmp	r6, r2
   124fc:	movcs	r2, #0
   12500:	movcc	r2, #1
   12504:	cmp	r4, #7
   12508:	movne	r2, #0
   1250c:	cmp	r2, #0
   12510:	bne	12608 <argp_parse@@Base+0x65c>
   12514:	cmp	r4, #0
   12518:	bne	126ec <argp_parse@@Base+0x740>
   1251c:	cmp	r3, r9
   12520:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   12524:	streq	r3, [fp, #-84]	; 0xffffffac
   12528:	ldr	r3, [fp, #-84]	; 0xffffffac
   1252c:	cmp	r7, r3
   12530:	sublt	r7, r3, r7
   12534:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   12538:	movge	r3, #1
   1253c:	addlt	r7, r3, r7
   12540:	strlt	r7, [r6, #-24]	; 0xffffffe8
   12544:	strge	r3, [fp, #-100]	; 0xffffff9c
   12548:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1254c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12550:	cmp	r2, #0
   12554:	beq	12564 <argp_parse@@Base+0x5b8>
   12558:	cmp	r2, r3
   1255c:	movgt	r2, #0
   12560:	strgt	r2, [fp, #-72]	; 0xffffffb8
   12564:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12568:	cmp	r2, #0
   1256c:	beq	125f4 <argp_parse@@Base+0x648>
   12570:	ldr	r7, [fp, #-72]	; 0xffffffb8
   12574:	cmp	r7, #0
   12578:	bne	125f4 <argp_parse@@Base+0x648>
   1257c:	str	r3, [fp, #-148]	; 0xffffff6c
   12580:	mvn	r3, #0
   12584:	str	r3, [fp, #-140]	; 0xffffff74
   12588:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1258c:	str	r7, [sp]
   12590:	tst	r3, #64	; 0x40
   12594:	add	r3, r5, #12
   12598:	str	r3, [sp, #4]
   1259c:	ldr	r2, [fp, #-156]	; 0xffffff64
   125a0:	ldr	r3, [fp, #-152]	; 0xffffff68
   125a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   125a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   125ac:	beq	12394 <argp_parse@@Base+0x3e8>
   125b0:	bl	12b0c <argp_parse@@Base+0xb60>
   125b4:	ldr	r4, [fp, #-148]	; 0xffffff6c
   125b8:	cmn	r0, #1
   125bc:	mov	r6, r0
   125c0:	str	r4, [fp, #-84]	; 0xffffffac
   125c4:	bne	1239c <argp_parse@@Base+0x3f0>
   125c8:	mov	r3, #0
   125cc:	cmp	r4, #1
   125d0:	str	r3, [fp, #-100]	; 0xffffff9c
   125d4:	ble	125f4 <argp_parse@@Base+0x648>
   125d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   125dc:	sub	r3, r4, #-1073741823	; 0xc0000001
   125e0:	ldr	r1, [pc, #800]	; 12908 <argp_parse@@Base+0x95c>
   125e4:	ldr	r0, [r2, r3, lsl #2]
   125e8:	bl	11124 <strcmp@plt>
   125ec:	cmp	r0, #0
   125f0:	streq	r4, [fp, #-72]	; 0xffffffb8
   125f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   125f8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   125fc:	cmp	r3, r2
   12600:	bge	1243c <argp_parse@@Base+0x490>
   12604:	b	124b0 <argp_parse@@Base+0x504>
   12608:	ldr	r3, [fp, #-84]	; 0xffffffac
   1260c:	mov	r2, sl
   12610:	add	r3, r3, #1
   12614:	str	r3, [fp, #-84]	; 0xffffffac
   12618:	mov	r1, r8
   1261c:	ldr	r3, [fp, #-232]	; 0xffffff18
   12620:	mov	r0, r6
   12624:	bl	11a74 <putc_unlocked@plt+0x644>
   12628:	cmp	r0, #7
   1262c:	mov	r4, r0
   12630:	movne	r3, sl
   12634:	bne	12660 <argp_parse@@Base+0x6b4>
   12638:	ldr	r3, [fp, #-84]	; 0xffffffac
   1263c:	mov	r2, r9
   12640:	sub	r3, r3, #1
   12644:	str	r3, [fp, #-84]	; 0xffffffac
   12648:	mov	r1, r8
   1264c:	mov	r3, sl
   12650:	mov	r0, r6
   12654:	bl	11a74 <putc_unlocked@plt+0x644>
   12658:	mov	r3, r9
   1265c:	mov	r4, r0
   12660:	add	r6, r6, #36	; 0x24
   12664:	b	124f4 <argp_parse@@Base+0x548>
   12668:	add	r0, r0, #36	; 0x24
   1266c:	b	123d4 <argp_parse@@Base+0x428>
   12670:	mov	r0, #36	; 0x24
   12674:	ands	r1, r6, #8388608	; 0x800000
   12678:	mul	r0, r0, r3
   1267c:	ldr	ip, [fp, #-112]	; 0xffffff90
   12680:	movne	r1, #-16777216	; 0xff000000
   12684:	bic	r2, r6, #-16777216	; 0xff000000
   12688:	sub	r0, r0, #36	; 0x24
   1268c:	orr	r2, r2, r1
   12690:	ldr	r3, [fp, #-136]	; 0xffffff78
   12694:	mov	r1, r8
   12698:	add	r0, ip, r0
   1269c:	bl	11a74 <putc_unlocked@plt+0x644>
   126a0:	cmp	r0, #7
   126a4:	mov	r4, r0
   126a8:	bne	126fc <argp_parse@@Base+0x750>
   126ac:	ldr	r3, [fp, #-152]	; 0xffffff68
   126b0:	b	126c4 <argp_parse@@Base+0x718>
   126b4:	ldr	r2, [r3]
   126b8:	cmp	r2, #0
   126bc:	beq	126d0 <argp_parse@@Base+0x724>
   126c0:	add	r3, r3, #16
   126c4:	ldr	r2, [r3, #12]
   126c8:	cmp	r2, r6
   126cc:	bne	126b4 <argp_parse@@Base+0x708>
   126d0:	ldr	r2, [r3]
   126d4:	ldr	r1, [pc, #560]	; 1290c <argp_parse@@Base+0x960>
   126d8:	cmp	r2, #0
   126dc:	moveq	r2, r1
   126e0:	ldr	r3, [pc, #528]	; 128f8 <argp_parse@@Base+0x94c>
   126e4:	ldr	r1, [pc, #548]	; 12910 <argp_parse@@Base+0x964>
   126e8:	b	12410 <argp_parse@@Base+0x464>
   126ec:	cmp	r4, #7
   126f0:	bne	12784 <argp_parse@@Base+0x7d8>
   126f4:	mov	r6, #1
   126f8:	b	12418 <argp_parse@@Base+0x46c>
   126fc:	cmp	r4, #0
   12700:	beq	12548 <argp_parse@@Base+0x59c>
   12704:	b	12428 <argp_parse@@Base+0x47c>
   12708:	cmp	r4, #7
   1270c:	cmpne	r4, #0
   12710:	bne	1246c <argp_parse@@Base+0x4c0>
   12714:	ldr	r3, [r7, #12]
   12718:	cmp	r3, #0
   1271c:	bne	12738 <argp_parse@@Base+0x78c>
   12720:	mov	r3, r9
   12724:	mov	r2, sl
   12728:	mov	r1, r8
   1272c:	mov	r0, r7
   12730:	bl	11a74 <putc_unlocked@plt+0x644>
   12734:	mov	r4, r0
   12738:	add	r7, r7, #36	; 0x24
   1273c:	b	12460 <argp_parse@@Base+0x4b4>
   12740:	mov	r0, r6
   12744:	mov	r3, r8
   12748:	mov	r2, r9
   1274c:	mov	r1, r7
   12750:	bl	11a74 <putc_unlocked@plt+0x644>
   12754:	sub	r6, r6, #36	; 0x24
   12758:	mov	r4, r0
   1275c:	b	1247c <argp_parse@@Base+0x4d0>
   12760:	cmp	r4, #7
   12764:	beq	12870 <argp_parse@@Base+0x8c4>
   12768:	ldr	r3, [fp, #4]
   1276c:	cmp	r3, #0
   12770:	bne	124a0 <argp_parse@@Base+0x4f4>
   12774:	cmp	r4, #0
   12778:	beq	12880 <argp_parse@@Base+0x8d4>
   1277c:	cmp	r4, #7
   12780:	beq	12808 <argp_parse@@Base+0x85c>
   12784:	ldr	r6, [fp, #-112]	; 0xffffff90
   12788:	ldr	r9, [pc, #388]	; 12914 <argp_parse@@Base+0x968>
   1278c:	add	r7, r5, #64	; 0x40
   12790:	mov	r8, #0
   12794:	ldr	r3, [fp, #-108]	; 0xffffff94
   12798:	cmp	r6, r3
   1279c:	bcc	12820 <argp_parse@@Base+0x874>
   127a0:	ldr	r6, [fp, #-108]	; 0xffffff94
   127a4:	ldr	r8, [pc, #364]	; 12918 <argp_parse@@Base+0x96c>
   127a8:	sub	r6, r6, #36	; 0x24
   127ac:	add	r5, r5, #64	; 0x40
   127b0:	mov	r7, #0
   127b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   127b8:	cmp	r6, r3
   127bc:	bcs	12848 <argp_parse@@Base+0x89c>
   127c0:	cmp	r4, #7
   127c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   127c8:	moveq	r4, #22
   127cc:	bl	12a48 <argp_parse@@Base+0xa9c>
   127d0:	b	1229c <argp_parse@@Base+0x2f0>
   127d4:	ldr	r2, [fp, #4]
   127d8:	cmp	r2, #0
   127dc:	strne	r3, [r2]
   127e0:	bne	12880 <argp_parse@@Base+0x8d4>
   127e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   127e8:	tst	r3, #2
   127ec:	bne	12808 <argp_parse@@Base+0x85c>
   127f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   127f4:	cmp	r0, #0
   127f8:	beq	12808 <argp_parse@@Base+0x85c>
   127fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12800:	ldr	r1, [pc, #276]	; 1291c <argp_parse@@Base+0x970>
   12804:	bl	112d4 <fprintf@plt>
   12808:	mov	r2, #260	; 0x104
   1280c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12810:	add	r0, r5, #64	; 0x40
   12814:	bl	15b28 <argp_state_help@@Base>
   12818:	mov	r4, #7
   1281c:	b	12784 <argp_parse@@Base+0x7d8>
   12820:	mov	r0, r6
   12824:	mov	r3, r8
   12828:	mov	r2, r9
   1282c:	mov	r1, r7
   12830:	bl	11a74 <putc_unlocked@plt+0x644>
   12834:	add	r6, r6, #36	; 0x24
   12838:	b	12794 <argp_parse@@Base+0x7e8>
   1283c:	cmp	r4, #7
   12840:	moveq	r4, #0
   12844:	b	127a0 <argp_parse@@Base+0x7f4>
   12848:	mov	r0, r6
   1284c:	mov	r3, r7
   12850:	mov	r2, r8
   12854:	mov	r1, r5
   12858:	bl	11a74 <putc_unlocked@plt+0x644>
   1285c:	sub	r6, r6, #36	; 0x24
   12860:	b	127b4 <argp_parse@@Base+0x808>
   12864:	cmp	r0, #1
   12868:	bne	123b0 <argp_parse@@Base+0x404>
   1286c:	b	124d0 <argp_parse@@Base+0x524>
   12870:	ldr	r3, [fp, #4]
   12874:	cmp	r3, #0
   12878:	movne	r4, #0
   1287c:	bne	124a0 <argp_parse@@Base+0x4f4>
   12880:	ldr	r6, [fp, #-108]	; 0xffffff94
   12884:	mov	r4, #0
   12888:	ldr	r9, [pc, #144]	; 12920 <argp_parse@@Base+0x974>
   1288c:	sub	r6, r6, #36	; 0x24
   12890:	add	r7, r5, #64	; 0x40
   12894:	mov	r8, r4
   12898:	ldr	r3, [fp, #-112]	; 0xffffff90
   1289c:	cmp	r6, r3
   128a0:	bcc	1283c <argp_parse@@Base+0x890>
   128a4:	cmp	r4, #7
   128a8:	cmpne	r4, #0
   128ac:	bne	127a0 <argp_parse@@Base+0x7f4>
   128b0:	mov	r0, r6
   128b4:	mov	r3, r8
   128b8:	mov	r2, r9
   128bc:	mov	r1, r7
   128c0:	bl	11a74 <putc_unlocked@plt+0x644>
   128c4:	sub	r6, r6, #36	; 0x24
   128c8:	mov	r4, r0
   128cc:	b	12898 <argp_parse@@Base+0x8ec>
   128d0:	ldrdeq	r8, [r2], -r0
   128d4:	andeq	r8, r2, r8, asr #3
   128d8:	andeq	r6, r1, ip, asr pc
   128dc:			; <UNDEFINED> instruction: 0x000282b4
   128e0:	andeq	r8, r2, r8, ror #3
   128e4:	andeq	r6, r1, r8, ror pc
   128e8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   128ec:	tsteq	r0, r3
   128f0:	ldrdeq	r8, [r2], -ip
   128f4:	tsteq	r0, r6
   128f8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   128fc:	andeq	r7, r1, r3, lsr #1
   12900:	tsteq	r0, r2
   12904:	tsteq	r0, r1
   12908:	andeq	r7, r1, r0, lsr #1
   1290c:	muleq	r1, ip, r0
   12910:	andeq	r7, r1, fp, lsr #1
   12914:	tsteq	r0, r5
   12918:	tsteq	r0, r7
   1291c:	strheq	r7, [r1], -r4
   12920:	tsteq	r0, r4
   12924:	cmp	r1, #0
   12928:	ldrne	r2, [r1, #52]	; 0x34
   1292c:	ldrne	r3, [r2, #48]	; 0x30
   12930:	ldrne	r2, [r2, #52]	; 0x34
   12934:	bne	12944 <argp_parse@@Base+0x998>
   12938:	mov	r0, #0
   1293c:	bx	lr
   12940:	add	r3, r3, #36	; 0x24
   12944:	cmp	r3, r2
   12948:	bcs	12938 <argp_parse@@Base+0x98c>
   1294c:	ldr	r1, [r3, #4]
   12950:	cmp	r1, r0
   12954:	bne	12940 <argp_parse@@Base+0x994>
   12958:	ldr	r0, [r3, #24]
   1295c:	bx	lr
   12960:	push	{r0, r1, r2, lr}
   12964:	ldr	r1, [pc, #28]	; 12988 <argp_parse@@Base+0x9dc>
   12968:	ldr	r2, [pc, #28]	; 1298c <argp_parse@@Base+0x9e0>
   1296c:	ldr	r3, [r1, #4]
   12970:	str	r3, [sp]
   12974:	ldr	r3, [pc, #20]	; 12990 <argp_parse@@Base+0x9e4>
   12978:	ldr	r1, [r1]
   1297c:	bl	12ec4 <argp_parse@@Base+0xf18>
   12980:	add	sp, sp, #12
   12984:	pop	{pc}		; (ldr pc, [sp], #4)
   12988:	andeq	r8, r2, ip, ror #3
   1298c:	andeq	r7, r1, r4, lsl #3
   12990:	andeq	r7, r1, r7, ror r1
   12994:	ldr	r3, [pc, #16]	; 129ac <argp_parse@@Base+0xa00>
   12998:	ldr	r2, [pc, #16]	; 129b0 <argp_parse@@Base+0xa04>
   1299c:	str	r2, [r3]
   129a0:	ldr	r3, [pc, #12]	; 129b4 <argp_parse@@Base+0xa08>
   129a4:	stm	r3, {r0, r1}
   129a8:	bx	lr
   129ac:	andeq	r8, r2, r8, ror #3
   129b0:	andeq	r2, r1, r0, ror #18
   129b4:	andeq	r8, r2, ip, ror #3
   129b8:	mov	r2, r0
   129bc:	push	{r4, lr}
   129c0:	mov	r0, r2
   129c4:	ldrb	r3, [r2]
   129c8:	add	r1, r2, #1
   129cc:	cmp	r3, #47	; 0x2f
   129d0:	beq	129f4 <argp_parse@@Base+0xa48>
   129d4:	mov	r3, #0
   129d8:	mov	lr, #1
   129dc:	mov	r4, r3
   129e0:	mov	ip, r2
   129e4:	ldrb	r1, [r2], #1
   129e8:	cmp	r1, #0
   129ec:	bne	129fc <argp_parse@@Base+0xa50>
   129f0:	pop	{r4, pc}
   129f4:	mov	r2, r1
   129f8:	b	129c0 <argp_parse@@Base+0xa14>
   129fc:	cmp	r1, #47	; 0x2f
   12a00:	moveq	r3, lr
   12a04:	beq	129e0 <argp_parse@@Base+0xa34>
   12a08:	cmp	r3, #0
   12a0c:	movne	r0, ip
   12a10:	movne	r3, r4
   12a14:	b	129e0 <argp_parse@@Base+0xa34>
   12a18:	push	{r4, lr}
   12a1c:	mov	r4, r0
   12a20:	bl	112bc <strlen@plt>
   12a24:	cmp	r0, #1
   12a28:	popls	{r4, pc}
   12a2c:	sub	r3, r0, #1
   12a30:	ldrb	r2, [r4, r3]
   12a34:	cmp	r2, #47	; 0x2f
   12a38:	beq	12a40 <argp_parse@@Base+0xa94>
   12a3c:	pop	{r4, pc}
   12a40:	mov	r0, r3
   12a44:	b	12a24 <argp_parse@@Base+0xa78>
   12a48:	push	{r0, r1, r2, r4, r5, lr}
   12a4c:	mov	r5, r0
   12a50:	bl	112e0 <__errno_location@plt>
   12a54:	ldr	r3, [r0]
   12a58:	mov	r4, r0
   12a5c:	str	r3, [sp]
   12a60:	str	r3, [sp, #4]
   12a64:	mov	r3, #0
   12a68:	str	r3, [r0]
   12a6c:	mov	r0, r5
   12a70:	bl	1116c <free@plt>
   12a74:	ldr	r3, [r4]
   12a78:	add	r2, sp, #8
   12a7c:	cmp	r3, #0
   12a80:	moveq	r3, #4
   12a84:	movne	r3, #0
   12a88:	add	r3, r2, r3
   12a8c:	ldr	r3, [r3, #-8]
   12a90:	str	r3, [r4]
   12a94:	add	sp, sp, #12
   12a98:	pop	{r4, r5, pc}
   12a9c:	push	{r0, r1, r2, r3, r4, lr}
   12aa0:	mov	ip, #0
   12aa4:	str	ip, [sp, #8]
   12aa8:	str	ip, [sp, #4]
   12aac:	ldr	ip, [sp, #24]
   12ab0:	str	ip, [sp]
   12ab4:	bl	166ac <argp_error@@Base+0xae4>
   12ab8:	add	sp, sp, #20
   12abc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ac0:	push	{r0, r1, r2, r3, r4, lr}
   12ac4:	mov	ip, #0
   12ac8:	ldr	lr, [sp, #28]
   12acc:	str	ip, [sp, #12]
   12ad0:	stmib	sp, {ip, lr}
   12ad4:	ldr	ip, [sp, #24]
   12ad8:	str	ip, [sp]
   12adc:	bl	161b4 <argp_error@@Base+0x5ec>
   12ae0:	add	sp, sp, #20
   12ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ae8:	push	{r0, r1, r2, r3, r4, lr}
   12aec:	mov	ip, #1
   12af0:	mov	lr, #0
   12af4:	stmib	sp, {ip, lr}
   12af8:	ldr	ip, [sp, #24]
   12afc:	str	ip, [sp]
   12b00:	bl	166ac <argp_error@@Base+0xae4>
   12b04:	add	sp, sp, #20
   12b08:	pop	{pc}		; (ldr pc, [sp], #4)
   12b0c:	push	{r0, r1, r2, r3, r4, lr}
   12b10:	mov	ip, #0
   12b14:	str	ip, [sp, #12]
   12b18:	ldr	ip, [sp, #28]
   12b1c:	str	ip, [sp, #8]
   12b20:	mov	ip, #1
   12b24:	str	ip, [sp, #4]
   12b28:	ldr	ip, [sp, #24]
   12b2c:	str	ip, [sp]
   12b30:	bl	161b4 <argp_error@@Base+0x5ec>
   12b34:	add	sp, sp, #20
   12b38:	pop	{pc}		; (ldr pc, [sp], #4)
   12b3c:	push	{r4, r5, r6, lr}
   12b40:	subs	r5, r0, #0
   12b44:	bne	12b5c <argp_parse@@Base+0xbb0>
   12b48:	ldr	r3, [pc, #124]	; 12bcc <argp_parse@@Base+0xc20>
   12b4c:	ldr	r0, [pc, #124]	; 12bd0 <argp_parse@@Base+0xc24>
   12b50:	ldr	r1, [r3]
   12b54:	bl	113e8 <fputs@plt>
   12b58:	bl	11400 <abort@plt>
   12b5c:	mov	r1, #47	; 0x2f
   12b60:	bl	11364 <strrchr@plt>
   12b64:	cmp	r0, #0
   12b68:	addne	r4, r0, #1
   12b6c:	moveq	r4, r5
   12b70:	sub	r3, r4, r5
   12b74:	cmp	r3, #6
   12b78:	ble	12bb8 <argp_parse@@Base+0xc0c>
   12b7c:	mov	r2, #7
   12b80:	ldr	r1, [pc, #76]	; 12bd4 <argp_parse@@Base+0xc28>
   12b84:	sub	r0, r4, #7
   12b88:	bl	113f4 <strncmp@plt>
   12b8c:	cmp	r0, #0
   12b90:	bne	12bb8 <argp_parse@@Base+0xc0c>
   12b94:	mov	r2, #3
   12b98:	ldr	r1, [pc, #56]	; 12bd8 <argp_parse@@Base+0xc2c>
   12b9c:	mov	r0, r4
   12ba0:	bl	113f4 <strncmp@plt>
   12ba4:	cmp	r0, #0
   12ba8:	movne	r5, r4
   12bac:	ldreq	r3, [pc, #40]	; 12bdc <argp_parse@@Base+0xc30>
   12bb0:	addeq	r5, r4, #3
   12bb4:	streq	r5, [r3]
   12bb8:	ldr	r3, [pc, #32]	; 12be0 <argp_parse@@Base+0xc34>
   12bbc:	str	r5, [r3]
   12bc0:	ldr	r3, [pc, #28]	; 12be4 <argp_parse@@Base+0xc38>
   12bc4:	str	r5, [r3]
   12bc8:	pop	{r4, r5, r6, pc}
   12bcc:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   12bd0:	muleq	r1, r2, r1
   12bd4:	andeq	r7, r1, sl, asr #3
   12bd8:	ldrdeq	r7, [r1], -r2
   12bdc:	andeq	r8, r2, r8, asr #3
   12be0:	strdeq	r8, [r2], -r4
   12be4:	ldrdeq	r8, [r2], -r0
   12be8:	push	{r4, r5, r6, lr}
   12bec:	sub	sp, sp, #32
   12bf0:	cmp	r1, #0
   12bf4:	mov	r5, r0
   12bf8:	ldr	r4, [sp, #48]	; 0x30
   12bfc:	ldr	r6, [sp, #52]	; 0x34
   12c00:	beq	12c88 <argp_parse@@Base+0xcdc>
   12c04:	str	r3, [sp]
   12c08:	mov	r3, r2
   12c0c:	mov	r2, r1
   12c10:	ldr	r1, [pc, #616]	; 12e80 <argp_parse@@Base+0xed4>
   12c14:	bl	112d4 <fprintf@plt>
   12c18:	ldr	r3, [pc, #612]	; 12e84 <argp_parse@@Base+0xed8>
   12c1c:	ldr	r2, [pc, #612]	; 12e88 <argp_parse@@Base+0xedc>
   12c20:	ldr	r1, [pc, #612]	; 12e8c <argp_parse@@Base+0xee0>
   12c24:	mov	r0, r5
   12c28:	bl	112d4 <fprintf@plt>
   12c2c:	mov	r1, r5
   12c30:	mov	r0, #10
   12c34:	bl	11388 <fputc@plt>
   12c38:	ldr	r1, [pc, #592]	; 12e90 <argp_parse@@Base+0xee4>
   12c3c:	ldr	r2, [pc, #592]	; 12e94 <argp_parse@@Base+0xee8>
   12c40:	mov	r0, r5
   12c44:	bl	112d4 <fprintf@plt>
   12c48:	mov	r1, r5
   12c4c:	mov	r0, #10
   12c50:	bl	11388 <fputc@plt>
   12c54:	cmp	r6, #9
   12c58:	ldrls	pc, [pc, r6, lsl #2]
   12c5c:	b	12e3c <argp_parse@@Base+0xe90>
   12c60:	andeq	r2, r1, r4, lsr sp
   12c64:	muleq	r1, r4, ip
   12c68:	andeq	r2, r1, ip, lsr #25
   12c6c:	andeq	r2, r1, r4, asr #25
   12c70:	andeq	r2, r1, r4, ror #25
   12c74:	andeq	r2, r1, ip, lsl #26
   12c78:	andeq	r2, r1, ip, lsr sp
   12c7c:	andeq	r2, r1, r0, ror sp
   12c80:	andeq	r2, r1, ip, lsr #27
   12c84:	strdeq	r2, [r1], -r0
   12c88:	ldr	r1, [pc, #520]	; 12e98 <argp_parse@@Base+0xeec>
   12c8c:	bl	112d4 <fprintf@plt>
   12c90:	b	12c18 <argp_parse@@Base+0xc6c>
   12c94:	ldr	r2, [r4]
   12c98:	ldr	r1, [pc, #508]	; 12e9c <argp_parse@@Base+0xef0>
   12c9c:	mov	r0, r5
   12ca0:	add	sp, sp, #32
   12ca4:	pop	{r4, r5, r6, lr}
   12ca8:	b	112d4 <fprintf@plt>
   12cac:	ldm	r4, {r2, r3}
   12cb0:	ldr	r1, [pc, #488]	; 12ea0 <argp_parse@@Base+0xef4>
   12cb4:	mov	r0, r5
   12cb8:	add	sp, sp, #32
   12cbc:	pop	{r4, r5, r6, lr}
   12cc0:	b	112d4 <fprintf@plt>
   12cc4:	ldr	r3, [r4, #8]
   12cc8:	ldr	r1, [pc, #468]	; 12ea4 <argp_parse@@Base+0xef8>
   12ccc:	str	r3, [sp, #48]	; 0x30
   12cd0:	mov	r0, r5
   12cd4:	ldm	r4, {r2, r3}
   12cd8:	add	sp, sp, #32
   12cdc:	pop	{r4, r5, r6, lr}
   12ce0:	b	112d4 <fprintf@plt>
   12ce4:	ldr	r3, [r4, #12]
   12ce8:	ldr	r1, [pc, #440]	; 12ea8 <argp_parse@@Base+0xefc>
   12cec:	str	r3, [sp, #52]	; 0x34
   12cf0:	ldr	r3, [r4, #8]
   12cf4:	mov	r0, r5
   12cf8:	str	r3, [sp, #48]	; 0x30
   12cfc:	ldm	r4, {r2, r3}
   12d00:	add	sp, sp, #32
   12d04:	pop	{r4, r5, r6, lr}
   12d08:	b	112d4 <fprintf@plt>
   12d0c:	ldr	r3, [r4, #16]
   12d10:	ldr	r1, [pc, #404]	; 12eac <argp_parse@@Base+0xf00>
   12d14:	str	r3, [sp, #8]
   12d18:	ldr	r3, [r4, #12]
   12d1c:	mov	r0, r5
   12d20:	str	r3, [sp, #4]
   12d24:	ldr	r3, [r4, #8]
   12d28:	str	r3, [sp]
   12d2c:	ldm	r4, {r2, r3}
   12d30:	bl	112d4 <fprintf@plt>
   12d34:	add	sp, sp, #32
   12d38:	pop	{r4, r5, r6, pc}
   12d3c:	ldr	r3, [r4, #20]
   12d40:	ldr	r1, [pc, #360]	; 12eb0 <argp_parse@@Base+0xf04>
   12d44:	str	r3, [sp, #12]
   12d48:	ldr	r3, [r4, #16]
   12d4c:	mov	r0, r5
   12d50:	str	r3, [sp, #8]
   12d54:	ldr	r3, [r4, #12]
   12d58:	str	r3, [sp, #4]
   12d5c:	ldr	r3, [r4, #8]
   12d60:	str	r3, [sp]
   12d64:	ldm	r4, {r2, r3}
   12d68:	bl	112d4 <fprintf@plt>
   12d6c:	b	12d34 <argp_parse@@Base+0xd88>
   12d70:	ldr	r3, [r4, #24]
   12d74:	ldr	r1, [pc, #312]	; 12eb4 <argp_parse@@Base+0xf08>
   12d78:	str	r3, [sp, #16]
   12d7c:	ldr	r3, [r4, #20]
   12d80:	mov	r0, r5
   12d84:	str	r3, [sp, #12]
   12d88:	ldr	r3, [r4, #16]
   12d8c:	str	r3, [sp, #8]
   12d90:	ldr	r3, [r4, #12]
   12d94:	str	r3, [sp, #4]
   12d98:	ldr	r3, [r4, #8]
   12d9c:	str	r3, [sp]
   12da0:	ldm	r4, {r2, r3}
   12da4:	bl	112d4 <fprintf@plt>
   12da8:	b	12d34 <argp_parse@@Base+0xd88>
   12dac:	ldr	r3, [r4, #28]
   12db0:	ldr	r1, [pc, #256]	; 12eb8 <argp_parse@@Base+0xf0c>
   12db4:	str	r3, [sp, #20]
   12db8:	ldr	r3, [r4, #24]
   12dbc:	mov	r0, r5
   12dc0:	str	r3, [sp, #16]
   12dc4:	ldr	r3, [r4, #20]
   12dc8:	str	r3, [sp, #12]
   12dcc:	ldr	r3, [r4, #16]
   12dd0:	str	r3, [sp, #8]
   12dd4:	ldr	r3, [r4, #12]
   12dd8:	str	r3, [sp, #4]
   12ddc:	ldr	r3, [r4, #8]
   12de0:	str	r3, [sp]
   12de4:	ldm	r4, {r2, r3}
   12de8:	bl	112d4 <fprintf@plt>
   12dec:	b	12d34 <argp_parse@@Base+0xd88>
   12df0:	ldr	r3, [r4, #32]
   12df4:	ldr	r1, [pc, #192]	; 12ebc <argp_parse@@Base+0xf10>
   12df8:	str	r3, [sp, #24]
   12dfc:	ldr	r3, [r4, #28]
   12e00:	str	r3, [sp, #20]
   12e04:	ldr	r3, [r4, #24]
   12e08:	str	r3, [sp, #16]
   12e0c:	ldr	r3, [r4, #20]
   12e10:	str	r3, [sp, #12]
   12e14:	ldr	r3, [r4, #16]
   12e18:	str	r3, [sp, #8]
   12e1c:	ldr	r3, [r4, #12]
   12e20:	str	r3, [sp, #4]
   12e24:	ldr	r3, [r4, #8]
   12e28:	str	r3, [sp]
   12e2c:	ldm	r4, {r2, r3}
   12e30:	mov	r0, r5
   12e34:	bl	112d4 <fprintf@plt>
   12e38:	b	12d34 <argp_parse@@Base+0xd88>
   12e3c:	ldr	r3, [r4, #32]
   12e40:	ldr	r1, [pc, #120]	; 12ec0 <argp_parse@@Base+0xf14>
   12e44:	str	r3, [sp, #24]
   12e48:	ldr	r3, [r4, #28]
   12e4c:	str	r3, [sp, #20]
   12e50:	ldr	r3, [r4, #24]
   12e54:	str	r3, [sp, #16]
   12e58:	ldr	r3, [r4, #20]
   12e5c:	str	r3, [sp, #12]
   12e60:	ldr	r3, [r4, #16]
   12e64:	str	r3, [sp, #8]
   12e68:	ldr	r3, [r4, #12]
   12e6c:	str	r3, [sp, #4]
   12e70:	ldr	r3, [r4, #8]
   12e74:	str	r3, [sp]
   12e78:	ldm	r4, {r2, r3}
   12e7c:	b	12e30 <argp_parse@@Base+0xe84>
   12e80:	ldrdeq	r7, [r1], -r6
   12e84:	andeq	r0, r0, r6, ror #15
   12e88:	andeq	r7, r1, r9, ror #3
   12e8c:	ldrdeq	r7, [r1], -lr
   12e90:	andeq	r7, r1, pc, lsl #4
   12e94:	andeq	r7, r1, sp, ror #3
   12e98:	andeq	r7, r1, r2, ror #3
   12e9c:			; <UNDEFINED> instruction: 0x000172ba
   12ea0:	andeq	r7, r1, sl, asr #5
   12ea4:	andeq	r7, r1, r1, ror #5
   12ea8:	strdeq	r7, [r1], -sp
   12eac:	andeq	r7, r1, sp, lsl r3
   12eb0:	andeq	r7, r1, r1, asr #6
   12eb4:	andeq	r7, r1, r9, ror #6
   12eb8:	muleq	r1, r5, r3
   12ebc:	andeq	r7, r1, r5, asr #7
   12ec0:	strdeq	r7, [r1], -r9
   12ec4:	push	{r0, r1, r4, lr}
   12ec8:	mov	ip, #0
   12ecc:	ldr	lr, [sp, #16]
   12ed0:	ldr	r4, [lr, ip, lsl #2]
   12ed4:	cmp	r4, #0
   12ed8:	bne	12ef0 <argp_parse@@Base+0xf44>
   12edc:	str	ip, [sp, #4]
   12ee0:	str	lr, [sp]
   12ee4:	bl	12be8 <argp_parse@@Base+0xc3c>
   12ee8:	add	sp, sp, #8
   12eec:	pop	{r4, pc}
   12ef0:	add	ip, ip, #1
   12ef4:	b	12ed0 <argp_parse@@Base+0xf24>
   12ef8:	push	{r4, r5, lr}
   12efc:	sub	sp, sp, #52	; 0x34
   12f00:	mov	ip, #0
   12f04:	ldr	r5, [sp, #64]	; 0x40
   12f08:	add	lr, sp, #8
   12f0c:	ldr	r4, [r5, ip, lsl #2]
   12f10:	cmp	r4, #0
   12f14:	str	r4, [lr, ip, lsl #2]
   12f18:	beq	12f28 <argp_parse@@Base+0xf7c>
   12f1c:	add	ip, ip, #1
   12f20:	cmp	ip, #10
   12f24:	bne	12f0c <argp_parse@@Base+0xf60>
   12f28:	str	ip, [sp, #4]
   12f2c:	str	lr, [sp]
   12f30:	bl	12be8 <argp_parse@@Base+0xc3c>
   12f34:	add	sp, sp, #52	; 0x34
   12f38:	pop	{r4, r5, pc}
   12f3c:	push	{r3}		; (str r3, [sp, #-4]!)
   12f40:	push	{r0, r1, r2, r3, lr}
   12f44:	add	r3, sp, #24
   12f48:	str	r3, [sp, #12]
   12f4c:	str	r3, [sp]
   12f50:	ldr	r3, [sp, #20]
   12f54:	bl	12ef8 <argp_parse@@Base+0xf4c>
   12f58:	add	sp, sp, #16
   12f5c:	pop	{lr}		; (ldr lr, [sp], #4)
   12f60:	add	sp, sp, #4
   12f64:	bx	lr
   12f68:	ldr	r3, [pc, #56]	; 12fa8 <argp_parse@@Base+0xffc>
   12f6c:	push	{r4, lr}
   12f70:	mov	r0, #10
   12f74:	ldr	r1, [r3]
   12f78:	bl	11388 <fputc@plt>
   12f7c:	ldr	r1, [pc, #40]	; 12fac <argp_parse@@Base+0x1000>
   12f80:	ldr	r0, [pc, #40]	; 12fb0 <argp_parse@@Base+0x1004>
   12f84:	bl	11130 <printf@plt>
   12f88:	ldr	r1, [pc, #36]	; 12fb4 <argp_parse@@Base+0x1008>
   12f8c:	ldr	r2, [pc, #36]	; 12fb8 <argp_parse@@Base+0x100c>
   12f90:	ldr	r0, [pc, #36]	; 12fbc <argp_parse@@Base+0x1010>
   12f94:	bl	11130 <printf@plt>
   12f98:	ldr	r1, [pc, #32]	; 12fc0 <argp_parse@@Base+0x1014>
   12f9c:	ldr	r0, [pc, #32]	; 12fc4 <argp_parse@@Base+0x1018>
   12fa0:	pop	{r4, lr}
   12fa4:	b	11130 <printf@plt>
   12fa8:	ldrdeq	r8, [r2], -ip
   12fac:	andeq	r7, r1, r5, lsr r4
   12fb0:	andeq	r7, r1, fp, asr #8
   12fb4:	andeq	r7, r1, r4, lsl #3
   12fb8:	andeq	r7, r1, pc, asr r4
   12fbc:	andeq	r7, r1, r6, lsl #9
   12fc0:	muleq	r1, sl, r4
   12fc4:			; <UNDEFINED> instruction: 0x000174b7
   12fc8:	cmp	r0, #0
   12fcc:	mov	r3, #0
   12fd0:	moveq	r0, #1
   12fd4:	adds	r3, r3, #0
   12fd8:	movne	r3, #1
   12fdc:	cmp	r0, #0
   12fe0:	blt	12ff0 <argp_parse@@Base+0x1044>
   12fe4:	cmp	r3, #0
   12fe8:	bne	12ff0 <argp_parse@@Base+0x1044>
   12fec:	b	11250 <malloc@plt>
   12ff0:	push	{r4, lr}
   12ff4:	bl	112e0 <__errno_location@plt>
   12ff8:	mov	r3, #12
   12ffc:	str	r3, [r0]
   13000:	mov	r0, #0
   13004:	pop	{r4, pc}
   13008:	ldr	r2, [r0, #4]
   1300c:	ldr	r3, [r0]
   13010:	cmp	r2, #0
   13014:	add	r3, r3, #24
   13018:	bne	13024 <argp_parse@@Base+0x1078>
   1301c:	mov	r0, r2
   13020:	bx	lr
   13024:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13028:	cmp	r0, #0
   1302c:	beq	1303c <argp_parse@@Base+0x1090>
   13030:	ldr	r1, [r3, #-12]
   13034:	tst	r1, #2
   13038:	bxeq	lr
   1303c:	sub	r2, r2, #1
   13040:	b	13010 <argp_parse@@Base+0x1064>
   13044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13048:	mov	sl, r3
   1304c:	ldm	r0, {r5, r6, r7}
   13050:	mov	r3, #0
   13054:	sub	sp, sp, #20
   13058:	mov	r8, r1
   1305c:	mov	r9, r2
   13060:	mov	r4, r5
   13064:	mov	fp, r3
   13068:	adds	r2, r6, #0
   1306c:	movne	r2, #1
   13070:	cmp	r3, #0
   13074:	movne	r2, #0
   13078:	cmp	r2, #0
   1307c:	bne	1308c <argp_parse@@Base+0x10e0>
   13080:	mov	r0, r3
   13084:	add	sp, sp, #20
   13088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1308c:	ldr	r2, [r4, #12]
   13090:	ands	r3, r2, #8
   13094:	str	r2, [sp, #12]
   13098:	movne	r3, fp
   1309c:	bne	130dc <argp_parse@@Base+0x1130>
   130a0:	ldr	r1, [r4, #4]
   130a4:	sub	r0, r1, #1
   130a8:	cmp	r0, #254	; 0xfe
   130ac:	str	r1, [sp, #8]
   130b0:	bhi	130dc <argp_parse@@Base+0x1130>
   130b4:	str	r3, [sp, #4]
   130b8:	bl	11298 <__ctype_b_loc@plt>
   130bc:	ldr	r1, [sp, #8]
   130c0:	ldr	r3, [sp, #4]
   130c4:	ldr	r2, [sp, #12]
   130c8:	ldr	ip, [r0]
   130cc:	lsl	r0, r1, #1
   130d0:	ldrh	r0, [ip, r0]
   130d4:	tst	r0, #16384	; 0x4000
   130d8:	bne	130e8 <argp_parse@@Base+0x113c>
   130dc:	add	r4, r4, #24
   130e0:	sub	r6, r6, #1
   130e4:	b	13068 <argp_parse@@Base+0x10bc>
   130e8:	ldrb	r0, [r7]
   130ec:	cmp	r0, r1
   130f0:	bne	130dc <argp_parse@@Base+0x1130>
   130f4:	tst	r2, #4
   130f8:	moveq	r5, r4
   130fc:	tst	r2, #2
   13100:	bne	1311c <argp_parse@@Base+0x1170>
   13104:	mov	r3, sl
   13108:	mov	r2, r9
   1310c:	mov	r1, r5
   13110:	mov	r0, r4
   13114:	blx	r8
   13118:	mov	r3, r0
   1311c:	add	r7, r7, #1
   13120:	b	130dc <argp_parse@@Base+0x1130>
   13124:	ldr	r3, [r0, #12]
   13128:	ands	r3, r3, #8
   1312c:	bne	13164 <argp_parse@@Base+0x11b8>
   13130:	push	{r4, lr}
   13134:	ldr	r4, [r0, #4]
   13138:	sub	r2, r4, #1
   1313c:	cmp	r2, #254	; 0xfe
   13140:	bhi	1315c <argp_parse@@Base+0x11b0>
   13144:	bl	11298 <__ctype_b_loc@plt>
   13148:	lsl	r3, r4, #1
   1314c:	ldr	r2, [r0]
   13150:	ldrh	r3, [r2, r3]
   13154:	ands	r3, r3, #16384	; 0x4000
   13158:	movne	r3, r4
   1315c:	mov	r0, r3
   13160:	pop	{r4, pc}
   13164:	mov	r3, #0
   13168:	mov	r0, r3
   1316c:	bx	lr
   13170:	push	{r4, lr}
   13174:	mov	r4, r0
   13178:	bl	11298 <__ctype_b_loc@plt>
   1317c:	ldr	r1, [r0]
   13180:	ldr	r3, [r4]
   13184:	ldrb	r0, [r3]
   13188:	lsl	r2, r0, #1
   1318c:	ldrh	r2, [r1, r2]
   13190:	tst	r2, #8192	; 0x2000
   13194:	bne	131c4 <argp_parse@@Base+0x1218>
   13198:	subs	r0, r0, #45	; 0x2d
   1319c:	movne	r0, #1
   131a0:	ldr	r2, [r4]
   131a4:	ldrb	r3, [r2]
   131a8:	cmp	r3, #0
   131ac:	popeq	{r4, pc}
   131b0:	lsl	r3, r3, #1
   131b4:	ldrh	r3, [r1, r3]
   131b8:	tst	r3, #8
   131bc:	beq	131d0 <argp_parse@@Base+0x1224>
   131c0:	pop	{r4, pc}
   131c4:	add	r3, r3, #1
   131c8:	str	r3, [r4]
   131cc:	b	13180 <argp_parse@@Base+0x11d4>
   131d0:	add	r2, r2, #1
   131d4:	str	r2, [r4]
   131d8:	b	131a0 <argp_parse@@Base+0x11f4>
   131dc:	push	{r4, r5, r6, lr}
   131e0:	mov	r4, r0
   131e4:	ldr	r0, [r0, #12]
   131e8:	cmp	r0, #0
   131ec:	bne	13218 <argp_parse@@Base+0x126c>
   131f0:	ldr	r3, [r4, #4]
   131f4:	cmp	r3, #0
   131f8:	beq	1320c <argp_parse@@Base+0x1260>
   131fc:	ldr	r0, [r4]
   13200:	bl	12a48 <argp_parse@@Base+0xa9c>
   13204:	ldr	r0, [r4, #8]
   13208:	bl	12a48 <argp_parse@@Base+0xa9c>
   1320c:	mov	r0, r4
   13210:	pop	{r4, r5, r6, lr}
   13214:	b	12a48 <argp_parse@@Base+0xa9c>
   13218:	ldr	r5, [r0, #24]
   1321c:	bl	12a48 <argp_parse@@Base+0xa9c>
   13220:	mov	r0, r5
   13224:	b	131e8 <argp_parse@@Base+0x123c>
   13228:	push	{r4, r5, r6, lr}
   1322c:	ldr	r5, [r0, #16]
   13230:	ldr	r0, [r0, #8]
   13234:	cmp	r0, #0
   13238:	beq	1324c <argp_parse@@Base+0x12a0>
   1323c:	mov	r1, #10
   13240:	bl	112c8 <strchr@plt>
   13244:	adds	r0, r0, #0
   13248:	movne	r0, #1
   1324c:	cmp	r5, #0
   13250:	mov	r4, r0
   13254:	addne	r5, r5, #16
   13258:	bne	1326c <argp_parse@@Base+0x12c0>
   1325c:	mov	r0, r4
   13260:	pop	{r4, r5, r6, pc}
   13264:	bl	13228 <argp_parse@@Base+0x127c>
   13268:	add	r4, r4, r0
   1326c:	add	r5, r5, #16
   13270:	ldr	r0, [r5, #-32]	; 0xffffffe0
   13274:	cmp	r0, #0
   13278:	bne	13264 <argp_parse@@Base+0x12b8>
   1327c:	b	1325c <argp_parse@@Base+0x12b0>
   13280:	ldr	r2, [r0, #24]
   13284:	ldr	r3, [r0, #28]
   13288:	push	{r4, r5, r6, r7, r8, lr}
   1328c:	sub	r3, r3, r2
   13290:	ldr	r2, [r0, #16]
   13294:	mov	r4, r0
   13298:	cmp	r3, r2
   1329c:	mov	r5, r1
   132a0:	bls	132a8 <argp_parse@@Base+0x12fc>
   132a4:	bl	167b8 <argp_error@@Base+0xbf0>
   132a8:	ldr	r1, [r4, #20]
   132ac:	mov	r6, #1
   132b0:	cmp	r1, #0
   132b4:	subge	r5, r5, r1
   132b8:	mov	r7, #32
   132bc:	cmp	r5, #0
   132c0:	bgt	132c8 <argp_parse@@Base+0x131c>
   132c4:	pop	{r4, r5, r6, r7, r8, pc}
   132c8:	ldr	r2, [r4, #28]
   132cc:	ldr	r3, [r4, #32]
   132d0:	cmp	r2, r3
   132d4:	bcs	132f0 <argp_parse@@Base+0x1344>
   132d8:	ldr	r3, [r4, #28]
   132dc:	add	r2, r3, #1
   132e0:	str	r2, [r4, #28]
   132e4:	strb	r7, [r3]
   132e8:	sub	r5, r5, #1
   132ec:	b	132bc <argp_parse@@Base+0x1310>
   132f0:	mov	r1, r6
   132f4:	mov	r0, r4
   132f8:	bl	16c08 <argp_error@@Base+0x1040>
   132fc:	cmp	r0, #0
   13300:	bne	132d8 <argp_parse@@Base+0x132c>
   13304:	b	132e8 <argp_parse@@Base+0x133c>
   13308:	push	{r4, r5, r6, lr}
   1330c:	subs	r4, r2, #0
   13310:	popeq	{r4, r5, r6, pc}
   13314:	ldr	r2, [r4, #20]
   13318:	cmp	r2, #0
   1331c:	popeq	{r4, r5, r6, pc}
   13320:	mov	r6, r1
   13324:	mov	r5, r0
   13328:	mov	r1, r3
   1332c:	mov	r0, r4
   13330:	bl	12924 <argp_parse@@Base+0x978>
   13334:	ldr	r3, [r4, #20]
   13338:	mov	r1, r5
   1333c:	mov	r2, r0
   13340:	mov	r0, r6
   13344:	pop	{r4, r5, r6, lr}
   13348:	bx	r3
   1334c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13350:	mov	r4, r2
   13354:	ldr	r3, [r2, #16]
   13358:	mov	r2, r1
   1335c:	ldr	r1, [pc, #440]	; 1351c <argp_parse@@Base+0x1570>
   13360:	mov	r7, r0
   13364:	bl	13308 <argp_parse@@Base+0x135c>
   13368:	subs	r6, r0, #0
   1336c:	beq	134c0 <argp_parse@@Base+0x1514>
   13370:	ldrb	r3, [r6]
   13374:	cmp	r3, #0
   13378:	beq	134b4 <argp_parse@@Base+0x1508>
   1337c:	ldr	r3, [r4, #8]
   13380:	ldr	r3, [r3]
   13384:	cmp	r3, #0
   13388:	beq	133b4 <argp_parse@@Base+0x1408>
   1338c:	ldr	r5, [r4, #4]
   13390:	ldr	r2, [r5, #28]
   13394:	ldr	r3, [r5, #32]
   13398:	cmp	r2, r3
   1339c:	bcs	134d4 <argp_parse@@Base+0x1528>
   133a0:	ldr	r3, [r5, #28]
   133a4:	add	r2, r3, #1
   133a8:	str	r2, [r5, #28]
   133ac:	mov	r2, #10
   133b0:	strb	r2, [r3]
   133b4:	ldr	r8, [pc, #356]	; 13520 <argp_parse@@Base+0x1574>
   133b8:	ldr	r0, [r4, #4]
   133bc:	ldr	r1, [r8, #24]
   133c0:	bl	13280 <argp_parse@@Base+0x12d4>
   133c4:	ldr	r9, [r4, #4]
   133c8:	ldr	sl, [r8, #24]
   133cc:	ldr	r2, [r9, #24]
   133d0:	ldr	r3, [r9, #28]
   133d4:	sub	r3, r3, r2
   133d8:	ldr	r2, [r9, #16]
   133dc:	cmp	r3, r2
   133e0:	bls	133ec <argp_parse@@Base+0x1440>
   133e4:	mov	r0, r9
   133e8:	bl	167b8 <argp_error@@Base+0xbf0>
   133ec:	ldr	r5, [r4, #4]
   133f0:	str	sl, [r9, #4]
   133f4:	ldr	r8, [r8, #24]
   133f8:	ldr	r2, [r5, #24]
   133fc:	ldr	r3, [r5, #28]
   13400:	sub	r3, r3, r2
   13404:	ldr	r2, [r5, #16]
   13408:	cmp	r3, r2
   1340c:	bls	13418 <argp_parse@@Base+0x146c>
   13410:	mov	r0, r5
   13414:	bl	167b8 <argp_error@@Base+0xbf0>
   13418:	str	r8, [r5, #12]
   1341c:	mov	r0, r6
   13420:	bl	112bc <strlen@plt>
   13424:	subs	r8, r0, #0
   13428:	beq	13460 <argp_parse@@Base+0x14b4>
   1342c:	ldr	r5, [r4, #4]
   13430:	ldr	r3, [r5, #28]
   13434:	ldr	r2, [r5, #32]
   13438:	add	r3, r3, r8
   1343c:	cmp	r2, r3
   13440:	bcc	134ec <argp_parse@@Base+0x1540>
   13444:	mov	r2, r8
   13448:	mov	r1, r6
   1344c:	ldr	r0, [r5, #28]
   13450:	bl	11190 <memcpy@plt>
   13454:	ldr	r3, [r5, #28]
   13458:	add	r8, r3, r8
   1345c:	str	r8, [r5, #28]
   13460:	ldr	r5, [r4, #4]
   13464:	ldr	r2, [r5, #24]
   13468:	ldr	r3, [r5, #28]
   1346c:	sub	r3, r3, r2
   13470:	ldr	r2, [r5, #16]
   13474:	cmp	r3, r2
   13478:	bls	13484 <argp_parse@@Base+0x14d8>
   1347c:	mov	r0, r5
   13480:	bl	167b8 <argp_error@@Base+0xbf0>
   13484:	mov	r3, #0
   13488:	str	r3, [r5, #4]
   1348c:	ldr	r5, [r4, #4]
   13490:	ldr	r2, [r5, #28]
   13494:	ldr	r3, [r5, #32]
   13498:	cmp	r2, r3
   1349c:	bcs	13504 <argp_parse@@Base+0x1558>
   134a0:	ldr	r3, [r5, #28]
   134a4:	add	r2, r3, #1
   134a8:	str	r2, [r5, #28]
   134ac:	mov	r2, #10
   134b0:	strb	r2, [r3]
   134b4:	ldr	r3, [r4, #8]
   134b8:	mov	r2, #1
   134bc:	str	r2, [r3, #4]
   134c0:	cmp	r7, r6
   134c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   134c8:	mov	r0, r6
   134cc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   134d0:	b	12a48 <argp_parse@@Base+0xa9c>
   134d4:	mov	r1, #1
   134d8:	mov	r0, r5
   134dc:	bl	16c08 <argp_error@@Base+0x1040>
   134e0:	cmp	r0, #0
   134e4:	bne	133a0 <argp_parse@@Base+0x13f4>
   134e8:	b	133b4 <argp_parse@@Base+0x1408>
   134ec:	mov	r1, r8
   134f0:	mov	r0, r5
   134f4:	bl	16c08 <argp_error@@Base+0x1040>
   134f8:	cmp	r0, #0
   134fc:	bne	13444 <argp_parse@@Base+0x1498>
   13500:	b	13460 <argp_parse@@Base+0x14b4>
   13504:	mov	r1, #1
   13508:	mov	r0, r5
   1350c:	bl	16c08 <argp_error@@Base+0x1040>
   13510:	cmp	r0, #0
   13514:	bne	134a0 <argp_parse@@Base+0x14f4>
   13518:	b	134b4 <argp_parse@@Base+0x1508>
   1351c:	andeq	r0, r0, #3
   13520:	andeq	r8, r2, ip, lsl #3
   13524:	ldr	r3, [r1, #12]
   13528:	push	{r4, r5, r6, r7, r8, lr}
   1352c:	cmp	r3, #0
   13530:	mov	r7, r0
   13534:	mov	r4, r1
   13538:	beq	13650 <argp_parse@@Base+0x16a4>
   1353c:	ldr	r2, [r1, #8]
   13540:	ldr	r3, [r1]
   13544:	ldr	r8, [r2]
   13548:	ldr	r2, [r2, #4]
   1354c:	ldr	r5, [r3, #16]
   13550:	cmp	r2, #0
   13554:	cmpne	r8, #0
   13558:	beq	13594 <argp_parse@@Base+0x15e8>
   1355c:	ldr	r2, [r3, #12]
   13560:	ldr	r3, [r8, #12]
   13564:	cmp	r2, r3
   13568:	beq	13594 <argp_parse@@Base+0x15e8>
   1356c:	ldr	r6, [r1, #4]
   13570:	ldr	r2, [r6, #28]
   13574:	ldr	r3, [r6, #32]
   13578:	cmp	r2, r3
   1357c:	bcs	13630 <argp_parse@@Base+0x1684>
   13580:	ldr	r3, [r6, #28]
   13584:	add	r2, r3, #1
   13588:	str	r2, [r6, #28]
   1358c:	mov	r2, #10
   13590:	strb	r2, [r3]
   13594:	cmp	r5, #0
   13598:	beq	13618 <argp_parse@@Base+0x166c>
   1359c:	ldr	r0, [r5]
   135a0:	cmp	r0, #0
   135a4:	beq	13618 <argp_parse@@Base+0x166c>
   135a8:	ldrb	r3, [r0]
   135ac:	cmp	r3, #0
   135b0:	beq	13618 <argp_parse@@Base+0x166c>
   135b4:	cmp	r8, #0
   135b8:	beq	135dc <argp_parse@@Base+0x1630>
   135bc:	ldr	r3, [r8, #16]
   135c0:	cmp	r5, r3
   135c4:	beq	13618 <argp_parse@@Base+0x166c>
   135c8:	cmp	r3, #0
   135cc:	cmpne	r5, r3
   135d0:	bne	13648 <argp_parse@@Base+0x169c>
   135d4:	cmp	r5, r3
   135d8:	beq	13618 <argp_parse@@Base+0x166c>
   135dc:	ldr	r3, [r4, #4]
   135e0:	mov	r2, r4
   135e4:	ldr	r1, [r5, #16]
   135e8:	ldr	r6, [r3, #12]
   135ec:	bl	1334c <argp_parse@@Base+0x13a0>
   135f0:	ldr	r5, [r4, #4]
   135f4:	ldr	r2, [r5, #24]
   135f8:	ldr	r3, [r5, #28]
   135fc:	sub	r3, r3, r2
   13600:	ldr	r2, [r5, #16]
   13604:	cmp	r3, r2
   13608:	bls	13614 <argp_parse@@Base+0x1668>
   1360c:	mov	r0, r5
   13610:	bl	167b8 <argp_error@@Base+0xbf0>
   13614:	str	r6, [r5, #12]
   13618:	mov	r3, #0
   1361c:	str	r3, [r4, #12]
   13620:	mov	r1, r7
   13624:	ldr	r0, [r4, #4]
   13628:	pop	{r4, r5, r6, r7, r8, lr}
   1362c:	b	13280 <argp_parse@@Base+0x12d4>
   13630:	mov	r1, #1
   13634:	mov	r0, r6
   13638:	bl	16c08 <argp_error@@Base+0x1040>
   1363c:	cmp	r0, #0
   13640:	bne	13580 <argp_parse@@Base+0x15d4>
   13644:	b	13594 <argp_parse@@Base+0x15e8>
   13648:	ldr	r3, [r3, #12]
   1364c:	b	135c8 <argp_parse@@Base+0x161c>
   13650:	ldr	r5, [r1, #4]
   13654:	ldr	r3, [r5, #28]
   13658:	ldr	r2, [r5, #32]
   1365c:	add	r3, r3, #2
   13660:	cmp	r2, r3
   13664:	bcc	13688 <argp_parse@@Base+0x16dc>
   13668:	ldr	r2, [pc, #48]	; 136a0 <argp_parse@@Base+0x16f4>
   1366c:	ldr	r3, [r5, #28]
   13670:	ldrh	r2, [r2]
   13674:	strh	r2, [r3]
   13678:	ldr	r3, [r5, #28]
   1367c:	add	r3, r3, #2
   13680:	str	r3, [r5, #28]
   13684:	b	13620 <argp_parse@@Base+0x1674>
   13688:	mov	r1, #2
   1368c:	mov	r0, r5
   13690:	bl	16c08 <argp_error@@Base+0x1040>
   13694:	cmp	r0, #0
   13698:	bne	13668 <argp_parse@@Base+0x16bc>
   1369c:	b	13620 <argp_parse@@Base+0x1674>
   136a0:			; <UNDEFINED> instruction: 0x000175b1
   136a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136a8:	sub	sp, sp, #28
   136ac:	ldr	r7, [r0, #12]
   136b0:	str	r3, [sp, #8]
   136b4:	cmp	r7, #0
   136b8:	ldr	r3, [r0, #16]
   136bc:	moveq	r5, r7
   136c0:	mov	r8, r0
   136c4:	str	r1, [sp, #16]
   136c8:	mov	fp, r2
   136cc:	ldr	r4, [sp, #68]	; 0x44
   136d0:	str	r3, [sp, #12]
   136d4:	moveq	r6, r5
   136d8:	beq	13718 <argp_parse@@Base+0x176c>
   136dc:	mov	r1, #11
   136e0:	mov	r0, r7
   136e4:	bl	112c8 <strchr@plt>
   136e8:	cmp	fp, #0
   136ec:	moveq	r5, r7
   136f0:	beq	13700 <argp_parse@@Base+0x1754>
   136f4:	cmp	r0, #0
   136f8:	addne	r5, r0, #1
   136fc:	moveq	r5, r0
   13700:	cmp	r0, #0
   13704:	clz	r6, fp
   13708:	lsr	r6, r6, #5
   1370c:	moveq	r6, #0
   13710:	cmp	r6, #0
   13714:	subne	r6, r0, r7
   13718:	ldr	r9, [r8, #20]
   1371c:	cmp	r9, #0
   13720:	moveq	sl, r5
   13724:	beq	13778 <argp_parse@@Base+0x17cc>
   13728:	cmp	r6, #0
   1372c:	beq	13740 <argp_parse@@Base+0x1794>
   13730:	mov	r0, r5
   13734:	mov	r1, r6
   13738:	bl	11178 <strndup@plt>
   1373c:	mov	r5, r0
   13740:	ldr	r1, [sp, #16]
   13744:	mov	r0, r8
   13748:	bl	12924 <argp_parse@@Base+0x978>
   1374c:	ldr	ip, [pc, #928]	; 13af4 <argp_parse@@Base+0x1b48>
   13750:	cmp	fp, #0
   13754:	mov	r1, r5
   13758:	ldr	r3, [r8, #20]
   1375c:	mov	sl, r5
   13760:	mov	r2, r0
   13764:	mov	r9, r0
   13768:	ldr	r0, [pc, #904]	; 13af8 <argp_parse@@Base+0x1b4c>
   1376c:	movne	r0, ip
   13770:	blx	r3
   13774:	mov	r5, r0
   13778:	cmp	r5, #0
   1377c:	moveq	r7, r5
   13780:	beq	13838 <argp_parse@@Base+0x188c>
   13784:	ldr	r3, [sp, #8]
   13788:	cmp	r3, #0
   1378c:	beq	137b4 <argp_parse@@Base+0x1808>
   13790:	ldr	r2, [r4, #28]
   13794:	ldr	r3, [r4, #32]
   13798:	cmp	r2, r3
   1379c:	bcs	13964 <argp_parse@@Base+0x19b8>
   137a0:	ldr	r3, [r4, #28]
   137a4:	add	r2, r3, #1
   137a8:	str	r2, [r4, #28]
   137ac:	mov	r2, #10
   137b0:	strb	r2, [r3]
   137b4:	cmp	r6, #0
   137b8:	sub	r3, r5, sl
   137bc:	clz	r3, r3
   137c0:	lsr	r3, r3, #5
   137c4:	moveq	r3, #0
   137c8:	cmp	r3, #0
   137cc:	ldr	r3, [r4, #28]
   137d0:	beq	13994 <argp_parse@@Base+0x19e8>
   137d4:	ldr	r2, [r4, #32]
   137d8:	add	r3, r3, r6
   137dc:	cmp	r2, r3
   137e0:	bcc	1397c <argp_parse@@Base+0x19d0>
   137e4:	mov	r2, r6
   137e8:	mov	r1, sl
   137ec:	ldr	r0, [r4, #28]
   137f0:	bl	11190 <memcpy@plt>
   137f4:	ldr	r3, [r4, #28]
   137f8:	add	r3, r3, r6
   137fc:	str	r3, [r4, #28]
   13800:	ldr	r2, [r4, #24]
   13804:	ldr	r3, [r4, #28]
   13808:	sub	r3, r3, r2
   1380c:	ldr	r2, [r4, #16]
   13810:	cmp	r3, r2
   13814:	bls	13820 <argp_parse@@Base+0x1874>
   13818:	mov	r0, r4
   1381c:	bl	167b8 <argp_error@@Base+0xbf0>
   13820:	ldr	r3, [r4, #20]
   13824:	ldr	r2, [r4, #4]
   13828:	bic	r3, r3, r3, asr #31
   1382c:	cmp	r2, r3
   13830:	bcc	139f4 <argp_parse@@Base+0x1a48>
   13834:	mov	r7, #1
   13838:	cmp	r5, #0
   1383c:	cmpne	r5, sl
   13840:	beq	1384c <argp_parse@@Base+0x18a0>
   13844:	mov	r0, r5
   13848:	bl	12a48 <argp_parse@@Base+0xa9c>
   1384c:	cmp	sl, #0
   13850:	cmpne	r6, #0
   13854:	beq	1386c <argp_parse@@Base+0x18c0>
   13858:	ldr	r3, [r8, #20]
   1385c:	cmp	r3, #0
   13860:	beq	13948 <argp_parse@@Base+0x199c>
   13864:	mov	r0, sl
   13868:	bl	12a48 <argp_parse@@Base+0xa9c>
   1386c:	cmp	fp, #0
   13870:	beq	13948 <argp_parse@@Base+0x199c>
   13874:	ldr	r3, [r8, #20]
   13878:	cmp	r3, #0
   1387c:	beq	13948 <argp_parse@@Base+0x199c>
   13880:	mov	r2, r9
   13884:	mov	r1, #0
   13888:	ldr	r0, [pc, #620]	; 13afc <argp_parse@@Base+0x1b50>
   1388c:	blx	r3
   13890:	subs	r5, r0, #0
   13894:	beq	13948 <argp_parse@@Base+0x199c>
   13898:	ldr	r3, [sp, #8]
   1389c:	orrs	r3, r7, r3
   138a0:	beq	138c8 <argp_parse@@Base+0x191c>
   138a4:	ldr	r2, [r4, #28]
   138a8:	ldr	r3, [r4, #32]
   138ac:	cmp	r2, r3
   138b0:	bcs	13a34 <argp_parse@@Base+0x1a88>
   138b4:	ldr	r3, [r4, #28]
   138b8:	add	r2, r3, #1
   138bc:	str	r2, [r4, #28]
   138c0:	mov	r2, #10
   138c4:	strb	r2, [r3]
   138c8:	mov	r0, r5
   138cc:	bl	112bc <strlen@plt>
   138d0:	subs	r6, r0, #0
   138d4:	beq	13908 <argp_parse@@Base+0x195c>
   138d8:	ldr	r3, [r4, #28]
   138dc:	ldr	r2, [r4, #32]
   138e0:	add	r3, r3, r6
   138e4:	cmp	r2, r3
   138e8:	bcc	13a4c <argp_parse@@Base+0x1aa0>
   138ec:	mov	r2, r6
   138f0:	mov	r1, r5
   138f4:	ldr	r0, [r4, #28]
   138f8:	bl	11190 <memcpy@plt>
   138fc:	ldr	r3, [r4, #28]
   13900:	add	r6, r3, r6
   13904:	str	r6, [r4, #28]
   13908:	mov	r0, r5
   1390c:	bl	12a48 <argp_parse@@Base+0xa9c>
   13910:	ldr	r2, [r4, #24]
   13914:	ldr	r3, [r4, #28]
   13918:	sub	r3, r3, r2
   1391c:	ldr	r2, [r4, #16]
   13920:	cmp	r3, r2
   13924:	bls	13930 <argp_parse@@Base+0x1984>
   13928:	mov	r0, r4
   1392c:	bl	167b8 <argp_error@@Base+0xbf0>
   13930:	ldr	r3, [r4, #20]
   13934:	ldr	r2, [r4, #4]
   13938:	bic	r3, r3, r3, asr #31
   1393c:	cmp	r2, r3
   13940:	bcc	13a64 <argp_parse@@Base+0x1ab8>
   13944:	mov	r7, #1
   13948:	ldr	r3, [sp, #12]
   1394c:	cmp	r3, #0
   13950:	addne	r5, r3, #16
   13954:	bne	13ad0 <argp_parse@@Base+0x1b24>
   13958:	mov	r0, r7
   1395c:	add	sp, sp, #28
   13960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13964:	mov	r1, #1
   13968:	mov	r0, r4
   1396c:	bl	16c08 <argp_error@@Base+0x1040>
   13970:	cmp	r0, #0
   13974:	bne	137a0 <argp_parse@@Base+0x17f4>
   13978:	b	137b4 <argp_parse@@Base+0x1808>
   1397c:	mov	r1, r6
   13980:	mov	r0, r4
   13984:	bl	16c08 <argp_error@@Base+0x1040>
   13988:	cmp	r0, #0
   1398c:	bne	137e4 <argp_parse@@Base+0x1838>
   13990:	b	13800 <argp_parse@@Base+0x1854>
   13994:	mov	r0, r5
   13998:	str	r3, [sp, #20]
   1399c:	bl	112bc <strlen@plt>
   139a0:	subs	r7, r0, #0
   139a4:	beq	13800 <argp_parse@@Base+0x1854>
   139a8:	ldr	r3, [sp, #20]
   139ac:	ldr	r2, [r4, #32]
   139b0:	add	r3, r3, r7
   139b4:	cmp	r2, r3
   139b8:	bcc	139dc <argp_parse@@Base+0x1a30>
   139bc:	mov	r2, r7
   139c0:	mov	r1, r5
   139c4:	ldr	r0, [r4, #28]
   139c8:	bl	11190 <memcpy@plt>
   139cc:	ldr	r3, [r4, #28]
   139d0:	add	r7, r3, r7
   139d4:	str	r7, [r4, #28]
   139d8:	b	13800 <argp_parse@@Base+0x1854>
   139dc:	mov	r1, r7
   139e0:	mov	r0, r4
   139e4:	bl	16c08 <argp_error@@Base+0x1040>
   139e8:	cmp	r0, #0
   139ec:	bne	139bc <argp_parse@@Base+0x1a10>
   139f0:	b	13800 <argp_parse@@Base+0x1854>
   139f4:	ldr	r2, [r4, #28]
   139f8:	ldr	r3, [r4, #32]
   139fc:	cmp	r2, r3
   13a00:	bcs	13a1c <argp_parse@@Base+0x1a70>
   13a04:	ldr	r3, [r4, #28]
   13a08:	add	r2, r3, #1
   13a0c:	str	r2, [r4, #28]
   13a10:	mov	r2, #10
   13a14:	strb	r2, [r3]
   13a18:	b	13834 <argp_parse@@Base+0x1888>
   13a1c:	mov	r1, #1
   13a20:	mov	r0, r4
   13a24:	bl	16c08 <argp_error@@Base+0x1040>
   13a28:	cmp	r0, #0
   13a2c:	bne	13a04 <argp_parse@@Base+0x1a58>
   13a30:	b	13834 <argp_parse@@Base+0x1888>
   13a34:	mov	r1, #1
   13a38:	mov	r0, r4
   13a3c:	bl	16c08 <argp_error@@Base+0x1040>
   13a40:	cmp	r0, #0
   13a44:	bne	138b4 <argp_parse@@Base+0x1908>
   13a48:	b	138c8 <argp_parse@@Base+0x191c>
   13a4c:	mov	r1, r6
   13a50:	mov	r0, r4
   13a54:	bl	16c08 <argp_error@@Base+0x1040>
   13a58:	cmp	r0, #0
   13a5c:	bne	138ec <argp_parse@@Base+0x1940>
   13a60:	b	13908 <argp_parse@@Base+0x195c>
   13a64:	ldr	r2, [r4, #28]
   13a68:	ldr	r3, [r4, #32]
   13a6c:	cmp	r2, r3
   13a70:	bcs	13a8c <argp_parse@@Base+0x1ae0>
   13a74:	ldr	r3, [r4, #28]
   13a78:	add	r2, r3, #1
   13a7c:	str	r2, [r4, #28]
   13a80:	mov	r2, #10
   13a84:	strb	r2, [r3]
   13a88:	b	13944 <argp_parse@@Base+0x1998>
   13a8c:	mov	r1, #1
   13a90:	mov	r0, r4
   13a94:	bl	16c08 <argp_error@@Base+0x1040>
   13a98:	cmp	r0, #0
   13a9c:	bne	13a74 <argp_parse@@Base+0x1ac8>
   13aa0:	b	13944 <argp_parse@@Base+0x1998>
   13aa4:	ldr	r3, [sp, #8]
   13aa8:	str	r4, [sp, #4]
   13aac:	orrs	r3, r7, r3
   13ab0:	ldr	r3, [sp, #64]	; 0x40
   13ab4:	mov	r2, fp
   13ab8:	str	r3, [sp]
   13abc:	ldr	r1, [sp, #16]
   13ac0:	movne	r3, #1
   13ac4:	moveq	r3, #0
   13ac8:	bl	136a4 <argp_parse@@Base+0x16f8>
   13acc:	orr	r7, r7, r0
   13ad0:	ldr	r0, [r5, #-16]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13958 <argp_parse@@Base+0x19ac>
   13adc:	ldr	r3, [sp, #64]	; 0x40
   13ae0:	add	r5, r5, #16
   13ae4:	cmp	r7, #0
   13ae8:	cmpne	r3, #0
   13aec:	beq	13aa4 <argp_parse@@Base+0x1af8>
   13af0:	b	13958 <argp_parse@@Base+0x19ac>
   13af4:	andeq	r0, r0, #2
   13af8:	andeq	r0, r0, #1
   13afc:	andeq	r0, r0, #4
   13b00:	ldr	r2, [r0, #24]
   13b04:	ldr	r3, [r0, #28]
   13b08:	push	{r4, r5, r6, lr}
   13b0c:	sub	r3, r3, r2
   13b10:	ldr	r2, [r0, #16]
   13b14:	mov	r4, r0
   13b18:	cmp	r3, r2
   13b1c:	mov	r5, r1
   13b20:	bls	13b28 <argp_parse@@Base+0x1b7c>
   13b24:	bl	167b8 <argp_error@@Base+0xbf0>
   13b28:	ldr	r1, [r4, #20]
   13b2c:	ldr	r3, [r4, #8]
   13b30:	cmp	r1, #0
   13b34:	addge	r5, r5, r1
   13b38:	cmp	r5, r3
   13b3c:	ldr	r2, [r4, #28]
   13b40:	ldr	r3, [r4, #32]
   13b44:	bcc	13b80 <argp_parse@@Base+0x1bd4>
   13b48:	cmp	r2, r3
   13b4c:	bcs	13b68 <argp_parse@@Base+0x1bbc>
   13b50:	ldr	r3, [r4, #28]
   13b54:	add	r2, r3, #1
   13b58:	str	r2, [r4, #28]
   13b5c:	mov	r2, #10
   13b60:	strb	r2, [r3]
   13b64:	pop	{r4, r5, r6, pc}
   13b68:	mov	r1, #1
   13b6c:	mov	r0, r4
   13b70:	bl	16c08 <argp_error@@Base+0x1040>
   13b74:	cmp	r0, #0
   13b78:	bne	13b50 <argp_parse@@Base+0x1ba4>
   13b7c:	pop	{r4, r5, r6, pc}
   13b80:	cmp	r2, r3
   13b84:	bcs	13b9c <argp_parse@@Base+0x1bf0>
   13b88:	ldr	r3, [r4, #28]
   13b8c:	add	r2, r3, #1
   13b90:	str	r2, [r4, #28]
   13b94:	mov	r2, #32
   13b98:	b	13b60 <argp_parse@@Base+0x1bb4>
   13b9c:	mov	r1, #1
   13ba0:	mov	r0, r4
   13ba4:	bl	16c08 <argp_error@@Base+0x1040>
   13ba8:	cmp	r0, #0
   13bac:	bne	13b88 <argp_parse@@Base+0x1bdc>
   13bb0:	pop	{r4, r5, r6, pc}
   13bb4:	push	{r4, r5, r6, lr}
   13bb8:	ldr	r5, [r0, #8]
   13bbc:	ldr	r2, [r0, #12]
   13bc0:	ldr	ip, [r1, #12]
   13bc4:	cmp	r5, #0
   13bc8:	orr	r2, r2, ip
   13bcc:	bne	13bdc <argp_parse@@Base+0x1c30>
   13bd0:	ldr	r5, [r1, #8]
   13bd4:	cmp	r5, #0
   13bd8:	beq	13c08 <argp_parse@@Base+0x1c5c>
   13bdc:	tst	r2, #16
   13be0:	bne	13c08 <argp_parse@@Base+0x1c5c>
   13be4:	tst	r2, #1
   13be8:	mov	r6, r3
   13bec:	mov	r4, r0
   13bf0:	beq	13c10 <argp_parse@@Base+0x1c64>
   13bf4:	ldr	r2, [r0, #4]
   13bf8:	ldr	r1, [pc, #52]	; 13c34 <argp_parse@@Base+0x1c88>
   13bfc:	mov	r3, r5
   13c00:	mov	r0, r6
   13c04:	bl	16cec <argp_error@@Base+0x1124>
   13c08:	mov	r0, #0
   13c0c:	pop	{r4, r5, r6, pc}
   13c10:	mov	r0, r5
   13c14:	bl	112bc <strlen@plt>
   13c18:	add	r1, r0, #6
   13c1c:	mov	r0, r6
   13c20:	bl	13b00 <argp_parse@@Base+0x1b54>
   13c24:	mov	r3, r5
   13c28:	ldr	r2, [r4, #4]
   13c2c:	ldr	r1, [pc, #4]	; 13c38 <argp_parse@@Base+0x1c8c>
   13c30:	b	13c00 <argp_parse@@Base+0x1c54>
   13c34:			; <UNDEFINED> instruction: 0x000175b4
   13c38:			; <UNDEFINED> instruction: 0x000175bf
   13c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c40:	mov	r6, r3
   13c44:	sub	sp, sp, #36	; 0x24
   13c48:	ldr	r3, [r0, #16]
   13c4c:	str	r1, [sp, #20]
   13c50:	str	r3, [sp, #12]
   13c54:	ldr	r3, [r0, #8]
   13c58:	ldr	sl, [r2]
   13c5c:	str	r3, [sp, #16]
   13c60:	mov	fp, r2
   13c64:	mov	r3, r1
   13c68:	mov	r2, r0
   13c6c:	ldr	r1, [pc, #404]	; 13e08 <argp_parse@@Base+0x1e5c>
   13c70:	ldr	r0, [sp, #16]
   13c74:	ldr	r5, [sp, #72]	; 0x48
   13c78:	bl	13308 <argp_parse@@Base+0x135c>
   13c7c:	subs	r8, r0, #0
   13c80:	moveq	r7, r8
   13c84:	moveq	r4, r8
   13c88:	beq	13d1c <argp_parse@@Base+0x1d70>
   13c8c:	mov	r1, #10
   13c90:	bl	11160 <strchrnul@plt>
   13c94:	ldrb	r4, [r0]
   13c98:	mov	r7, r0
   13c9c:	cmp	r4, #0
   13ca0:	moveq	r9, r8
   13ca4:	beq	13cd0 <argp_parse@@Base+0x1d24>
   13ca8:	ldrb	r3, [sl]
   13cac:	mov	r9, r8
   13cb0:	mov	r4, #0
   13cb4:	mov	r2, #10
   13cb8:	cmp	r4, r3
   13cbc:	blt	13d8c <argp_parse@@Base+0x1de0>
   13cc0:	ldr	r3, [fp]
   13cc4:	mov	r4, #1
   13cc8:	add	r3, r3, #1
   13ccc:	str	r3, [fp]
   13cd0:	add	r1, r7, #1
   13cd4:	sub	r1, r1, r9
   13cd8:	mov	r0, r5
   13cdc:	bl	13b00 <argp_parse@@Base+0x1b54>
   13ce0:	ldr	r2, [r5, #28]
   13ce4:	sub	r3, r7, r9
   13ce8:	ldr	r1, [r5, #32]
   13cec:	add	r2, r2, r3
   13cf0:	cmp	r1, r2
   13cf4:	bcc	13db8 <argp_parse@@Base+0x1e0c>
   13cf8:	mov	r2, r3
   13cfc:	mov	r1, r9
   13d00:	ldr	r0, [r5, #28]
   13d04:	str	r3, [sp, #24]
   13d08:	bl	11190 <memcpy@plt>
   13d0c:	ldr	r2, [r5, #28]
   13d10:	ldr	r3, [sp, #24]
   13d14:	add	r3, r2, r3
   13d18:	str	r3, [r5, #28]
   13d1c:	ldr	r3, [sp, #16]
   13d20:	cmp	r8, #0
   13d24:	cmpne	r3, r8
   13d28:	beq	13d34 <argp_parse@@Base+0x1d88>
   13d2c:	mov	r0, r8
   13d30:	bl	12a48 <argp_parse@@Base+0xa9c>
   13d34:	ldr	r3, [sp, #12]
   13d38:	cmp	r3, #0
   13d3c:	addne	r8, r3, #16
   13d40:	bne	13df4 <argp_parse@@Base+0x1e48>
   13d44:	cmp	r6, #0
   13d48:	moveq	r4, #0
   13d4c:	andne	r4, r4, #1
   13d50:	cmp	r4, #0
   13d54:	beq	13d7c <argp_parse@@Base+0x1dd0>
   13d58:	ldrb	r2, [r7]
   13d5c:	ldrb	r3, [sl]
   13d60:	cmp	r2, #0
   13d64:	addne	r3, r3, #1
   13d68:	strbne	r3, [sl]
   13d6c:	movne	r6, #0
   13d70:	bne	13d7c <argp_parse@@Base+0x1dd0>
   13d74:	cmp	r3, #0
   13d78:	strbne	r2, [sl]
   13d7c:	clz	r0, r6
   13d80:	lsr	r0, r0, #5
   13d84:	add	sp, sp, #36	; 0x24
   13d88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d8c:	add	r9, r7, #1
   13d90:	mov	r1, r2
   13d94:	mov	r0, r9
   13d98:	str	r3, [sp, #28]
   13d9c:	str	r2, [sp, #24]
   13da0:	bl	11160 <strchrnul@plt>
   13da4:	add	r4, r4, #1
   13da8:	ldr	r3, [sp, #28]
   13dac:	ldr	r2, [sp, #24]
   13db0:	mov	r7, r0
   13db4:	b	13cb8 <argp_parse@@Base+0x1d0c>
   13db8:	mov	r1, r3
   13dbc:	mov	r0, r5
   13dc0:	str	r3, [sp, #24]
   13dc4:	bl	16c08 <argp_error@@Base+0x1040>
   13dc8:	ldr	r3, [sp, #24]
   13dcc:	cmp	r0, #0
   13dd0:	bne	13cf8 <argp_parse@@Base+0x1d4c>
   13dd4:	b	13d1c <argp_parse@@Base+0x1d70>
   13dd8:	mov	r3, r6
   13ddc:	str	r5, [sp]
   13de0:	mov	r2, fp
   13de4:	ldr	r1, [sp, #20]
   13de8:	bl	13c3c <argp_parse@@Base+0x1c90>
   13dec:	clz	r6, r0
   13df0:	lsr	r6, r6, #5
   13df4:	add	r8, r8, #16
   13df8:	ldr	r0, [r8, #-32]	; 0xffffffe0
   13dfc:	cmp	r0, #0
   13e00:	bne	13dd8 <argp_parse@@Base+0x1e2c>
   13e04:	b	13d44 <argp_parse@@Base+0x1d98>
   13e08:	andeq	r0, r0, #6
   13e0c:	ldr	r2, [r0, #8]
   13e10:	cmp	r2, #0
   13e14:	bne	13e48 <argp_parse@@Base+0x1e9c>
   13e18:	ldr	r2, [r1, #8]
   13e1c:	cmp	r2, #0
   13e20:	bne	13e48 <argp_parse@@Base+0x1e9c>
   13e24:	ldr	r1, [r1, #12]
   13e28:	ldr	r2, [r0, #12]
   13e2c:	orr	r2, r2, r1
   13e30:	tst	r2, #16
   13e34:	ldreq	r2, [r3]
   13e38:	addeq	r1, r2, #1
   13e3c:	streq	r1, [r3]
   13e40:	ldreq	r3, [r0, #4]
   13e44:	strbeq	r3, [r2]
   13e48:	mov	r0, #0
   13e4c:	bx	lr
   13e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e54:	add	fp, sp, #32
   13e58:	sub	sp, sp, #12
   13e5c:	ldr	r6, [r0, #4]
   13e60:	cmp	r6, #0
   13e64:	beq	13f08 <argp_parse@@Base+0x1f5c>
   13e68:	mov	r5, r0
   13e6c:	ldr	r0, [r0, #8]
   13e70:	mov	r4, r1
   13e74:	bl	112bc <strlen@plt>
   13e78:	ldr	sl, [pc, #324]	; 13fc4 <argp_parse@@Base+0x2018>
   13e7c:	ldr	r7, [r5]
   13e80:	sub	r9, fp, #36	; 0x24
   13e84:	add	r0, r0, #15
   13e88:	bic	r0, r0, #7
   13e8c:	sub	sp, sp, r0
   13e90:	mov	r8, sp
   13e94:	str	sp, [r9, #-4]!
   13e98:	ldr	r2, [r7, #20]
   13e9c:	mov	r0, r7
   13ea0:	mov	r3, r9
   13ea4:	ldr	r2, [r2, #24]
   13ea8:	mov	r1, sl
   13eac:	bl	13044 <argp_parse@@Base+0x1098>
   13eb0:	subs	r6, r6, #1
   13eb4:	add	r7, r7, #28
   13eb8:	bne	13e98 <argp_parse@@Base+0x1eec>
   13ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ec0:	cmp	r8, r3
   13ec4:	bcs	13ee4 <argp_parse@@Base+0x1f38>
   13ec8:	add	r2, r3, #1
   13ecc:	str	r2, [fp, #-40]	; 0xffffffd8
   13ed0:	ldr	r1, [pc, #240]	; 13fc8 <argp_parse@@Base+0x201c>
   13ed4:	strb	r6, [r3]
   13ed8:	mov	r2, r8
   13edc:	mov	r0, r4
   13ee0:	bl	16cec <argp_error@@Base+0x1124>
   13ee4:	ldm	r5, {r6, r7}
   13ee8:	ldr	r8, [pc, #220]	; 13fcc <argp_parse@@Base+0x2020>
   13eec:	cmp	r7, #0
   13ef0:	bne	13f10 <argp_parse@@Base+0x1f64>
   13ef4:	ldm	r5, {r5, r8}
   13ef8:	ldr	sl, [pc, #208]	; 13fd0 <argp_parse@@Base+0x2024>
   13efc:	add	r5, r5, #28
   13f00:	cmp	r8, #0
   13f04:	bne	13f34 <argp_parse@@Base+0x1f88>
   13f08:	sub	sp, fp, #32
   13f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f10:	ldr	r2, [r6, #20]
   13f14:	mov	r0, r6
   13f18:	mov	r3, r4
   13f1c:	ldr	r2, [r2, #24]
   13f20:	mov	r1, r8
   13f24:	bl	13044 <argp_parse@@Base+0x1098>
   13f28:	add	r6, r6, #28
   13f2c:	sub	r7, r7, #1
   13f30:	b	13eec <argp_parse@@Base+0x1f40>
   13f34:	ldr	r7, [r5, #-28]	; 0xffffffe4
   13f38:	ldr	r9, [r5, #-24]	; 0xffffffe8
   13f3c:	mov	r6, r7
   13f40:	cmp	r9, #0
   13f44:	subeq	r8, r8, #1
   13f48:	addeq	r5, r5, #28
   13f4c:	beq	13f00 <argp_parse@@Base+0x1f54>
   13f50:	ldr	r2, [r6]
   13f54:	cmp	r2, #0
   13f58:	beq	13fa8 <argp_parse@@Base+0x1ffc>
   13f5c:	ldr	r1, [r6, #12]
   13f60:	tst	r1, #4
   13f64:	moveq	r7, r6
   13f68:	tst	r1, #2
   13f6c:	bne	13fa8 <argp_parse@@Base+0x1ffc>
   13f70:	ldr	r3, [r6, #8]
   13f74:	ldr	r0, [r7, #12]
   13f78:	cmp	r3, #0
   13f7c:	orr	r1, r1, r0
   13f80:	ldreq	r3, [r7, #8]
   13f84:	tst	r1, #16
   13f88:	bne	13fa8 <argp_parse@@Base+0x1ffc>
   13f8c:	cmp	r3, #0
   13f90:	beq	13fb4 <argp_parse@@Base+0x2008>
   13f94:	tst	r1, #1
   13f98:	movne	r1, sl
   13f9c:	ldreq	r1, [pc, #48]	; 13fd4 <argp_parse@@Base+0x2028>
   13fa0:	mov	r0, r4
   13fa4:	bl	16cec <argp_error@@Base+0x1124>
   13fa8:	add	r6, r6, #24
   13fac:	sub	r9, r9, #1
   13fb0:	b	13f40 <argp_parse@@Base+0x1f94>
   13fb4:	ldr	r1, [pc, #28]	; 13fd8 <argp_parse@@Base+0x202c>
   13fb8:	mov	r0, r4
   13fbc:	bl	16cec <argp_error@@Base+0x1124>
   13fc0:	b	13fa8 <argp_parse@@Base+0x1ffc>
   13fc4:	andeq	r3, r1, ip, lsl #28
   13fc8:	andeq	r7, r1, r8, asr #11
   13fcc:			; <UNDEFINED> instruction: 0x00013bb4
   13fd0:	andeq	r7, r1, pc, asr #11
   13fd4:	ldrdeq	r7, [r1], -ip
   13fd8:	andeq	r7, r1, r7, ror #11
   13fdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fe0:	mov	r8, r1
   13fe4:	ldm	r0, {r5, r6}
   13fe8:	cmp	r6, #0
   13fec:	bne	13ff4 <argp_parse@@Base+0x2048>
   13ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ff4:	ldm	r5, {r4, r9}
   13ff8:	mov	r7, #0
   13ffc:	add	r4, r4, #24
   14000:	cmp	r9, r7
   14004:	subeq	r6, r6, #1
   14008:	addeq	r5, r5, #28
   1400c:	beq	13fe8 <argp_parse@@Base+0x203c>
   14010:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14014:	cmp	r0, #0
   14018:	beq	14038 <argp_parse@@Base+0x208c>
   1401c:	ldr	r3, [r4, #-12]
   14020:	tst	r3, #2
   14024:	bne	14038 <argp_parse@@Base+0x208c>
   14028:	mov	r1, r8
   1402c:	bl	11124 <strcmp@plt>
   14030:	cmp	r0, #0
   14034:	beq	14044 <argp_parse@@Base+0x2098>
   14038:	add	r7, r7, #1
   1403c:	add	r4, r4, #24
   14040:	b	14000 <argp_parse@@Base+0x2054>
   14044:	mvn	r3, #0
   14048:	str	r3, [r5, #12]
   1404c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14054:	sub	sp, sp, #44	; 0x2c
   14058:	ldr	r6, [r0, #16]
   1405c:	str	r0, [sp, #8]
   14060:	ldr	r5, [r0]
   14064:	mov	r0, #16
   14068:	mov	r9, r1
   1406c:	bl	12fc8 <argp_parse@@Base+0x101c>
   14070:	subs	r4, r0, #0
   14074:	bne	1408c <argp_parse@@Base+0x20e0>
   14078:	ldr	r3, [pc, #1444]	; 14624 <argp_parse@@Base+0x2678>
   1407c:	ldr	r2, [pc, #1444]	; 14628 <argp_parse@@Base+0x267c>
   14080:	ldr	r1, [pc, #1444]	; 1462c <argp_parse@@Base+0x2680>
   14084:	ldr	r0, [pc, #1444]	; 14630 <argp_parse@@Base+0x2684>
   14088:	bl	11424 <__assert_fail@plt>
   1408c:	mov	r3, #0
   14090:	cmp	r5, r3
   14094:	str	r3, [r4, #4]
   14098:	str	r3, [r4, #12]
   1409c:	beq	145f0 <argp_parse@@Base+0x2644>
   140a0:	ldr	r8, [r5, #12]
   140a4:	ands	r8, r8, #4
   140a8:	addeq	r7, r5, #24
   140ac:	moveq	fp, r8
   140b0:	beq	14458 <argp_parse@@Base+0x24ac>
   140b4:	ldr	r3, [pc, #1384]	; 14624 <argp_parse@@Base+0x2678>
   140b8:	mov	r2, #460	; 0x1cc
   140bc:	ldr	r1, [pc, #1384]	; 1462c <argp_parse@@Base+0x2680>
   140c0:	ldr	r0, [pc, #1388]	; 14634 <argp_parse@@Base+0x2688>
   140c4:	b	14088 <argp_parse@@Base+0x20dc>
   140c8:	ldr	r2, [pc, #1384]	; 14638 <argp_parse@@Base+0x268c>
   140cc:	ldr	r0, [r4, #4]
   140d0:	cmp	r0, r2
   140d4:	addls	r7, r7, #28
   140d8:	movls	sl, r3
   140dc:	movls	r2, r1
   140e0:	bls	145bc <argp_parse@@Base+0x2610>
   140e4:	ldr	r3, [pc, #1336]	; 14624 <argp_parse@@Base+0x2678>
   140e8:	mov	r2, #476	; 0x1dc
   140ec:	ldr	r1, [pc, #1336]	; 1462c <argp_parse@@Base+0x2680>
   140f0:	ldr	r0, [pc, #1348]	; 1463c <argp_parse@@Base+0x2690>
   140f4:	b	14088 <argp_parse@@Base+0x20dc>
   140f8:	ldrb	r0, [r0]
   140fc:	add	r1, r1, #1
   14100:	cmp	r0, r8
   14104:	beq	14580 <argp_parse@@Base+0x25d4>
   14108:	cmp	sl, r1
   1410c:	mov	r0, r1
   14110:	bhi	140f8 <argp_parse@@Base+0x214c>
   14114:	strb	r8, [sl]
   14118:	add	sl, sl, #1
   1411c:	b	14580 <argp_parse@@Base+0x25d4>
   14120:	ldr	r8, [r6, #-4]
   14124:	ldr	r7, [r6, #-8]
   14128:	cmp	r8, #0
   1412c:	bne	1413c <argp_parse@@Base+0x2190>
   14130:	cmp	r7, #0
   14134:	moveq	r1, r9
   14138:	beq	14198 <argp_parse@@Base+0x21ec>
   1413c:	ldr	r3, [sp, #8]
   14140:	sub	r5, r6, #16
   14144:	mov	r0, #28
   14148:	ldr	r3, [r3, #16]
   1414c:	sub	r5, r5, r3
   14150:	bl	12fc8 <argp_parse@@Base+0x101c>
   14154:	asr	r5, r5, #4
   14158:	subs	r1, r0, #0
   1415c:	beq	14198 <argp_parse@@Base+0x21ec>
   14160:	ldr	r3, [sp, #8]
   14164:	cmp	r9, #0
   14168:	str	r3, [r1, #16]
   1416c:	ldrne	r3, [r9, #20]
   14170:	moveq	r3, #0
   14174:	addne	r3, r3, #1
   14178:	str	r3, [r1, #20]
   1417c:	ldr	r3, [r4, #12]
   14180:	str	r8, [r1, #8]
   14184:	str	r7, [r1]
   14188:	str	r5, [r1, #4]
   1418c:	str	r9, [r1, #12]
   14190:	str	r3, [r1, #24]
   14194:	str	r1, [r4, #12]
   14198:	ldr	r0, [r6, #-16]
   1419c:	bl	14050 <argp_parse@@Base+0x20a4>
   141a0:	ldr	r2, [sp, #28]
   141a4:	ldr	r3, [r4, #12]
   141a8:	mov	r5, r0
   141ac:	cmp	r3, #0
   141b0:	bne	1420c <argp_parse@@Base+0x2260>
   141b4:	ldr	r1, [r5, #12]
   141b8:	str	r1, [r2]
   141bc:	ldr	r2, [r5, #4]
   141c0:	str	r3, [r5, #12]
   141c4:	cmp	r2, #0
   141c8:	beq	141f0 <argp_parse@@Base+0x2244>
   141cc:	ldr	r1, [r4, #4]
   141d0:	cmp	r1, #0
   141d4:	bne	14218 <argp_parse@@Base+0x226c>
   141d8:	str	r2, [r4, #4]
   141dc:	ldr	r2, [r5]
   141e0:	str	r2, [r4]
   141e4:	ldr	r2, [r5, #8]
   141e8:	str	r2, [r4, #8]
   141ec:	str	r3, [r5, #4]
   141f0:	mov	r0, r5
   141f4:	bl	131dc <argp_parse@@Base+0x1230>
   141f8:	add	r6, r6, #16
   141fc:	ldr	r3, [r6, #-16]
   14200:	cmp	r3, #0
   14204:	bne	14120 <argp_parse@@Base+0x2174>
   14208:	b	14604 <argp_parse@@Base+0x2658>
   1420c:	add	r2, r3, #24
   14210:	ldr	r3, [r3, #24]
   14214:	b	141ac <argp_parse@@Base+0x2200>
   14218:	add	r3, r2, r1
   1421c:	mov	r7, #28
   14220:	str	r3, [sp, #12]
   14224:	mul	r0, r7, r3
   14228:	bl	12fc8 <argp_parse@@Base+0x101c>
   1422c:	str	r0, [sp]
   14230:	ldr	r0, [r4, #8]
   14234:	bl	112bc <strlen@plt>
   14238:	mov	fp, r0
   1423c:	ldr	r0, [r5, #8]
   14240:	bl	112bc <strlen@plt>
   14244:	add	r0, fp, r0
   14248:	add	r0, r0, #1
   1424c:	bl	12fc8 <argp_parse@@Base+0x101c>
   14250:	ldr	r3, [sp]
   14254:	cmp	r3, #0
   14258:	cmpne	r0, #0
   1425c:	mov	r8, r0
   14260:	ldreq	r3, [pc, #984]	; 14640 <argp_parse@@Base+0x2694>
   14264:	ldreq	r2, [pc, #984]	; 14644 <argp_parse@@Base+0x2698>
   14268:	ldreq	r1, [pc, #956]	; 1462c <argp_parse@@Base+0x2680>
   1426c:	ldreq	r0, [pc, #980]	; 14648 <argp_parse@@Base+0x269c>
   14270:	beq	14088 <argp_parse@@Base+0x20dc>
   14274:	ldr	r3, [sp, #12]
   14278:	ldr	r2, [pc, #952]	; 14638 <argp_parse@@Base+0x268c>
   1427c:	cmp	r3, r2
   14280:	ldrhi	r3, [pc, #952]	; 14640 <argp_parse@@Base+0x2694>
   14284:	movhi	r2, #972	; 0x3cc
   14288:	ldrhi	r1, [pc, #924]	; 1462c <argp_parse@@Base+0x2680>
   1428c:	ldrhi	r0, [pc, #952]	; 1464c <argp_parse@@Base+0x26a0>
   14290:	bhi	14088 <argp_parse@@Base+0x20dc>
   14294:	ldr	sl, [r4, #4]
   14298:	ldr	r3, [r4]
   1429c:	ldr	r0, [sp]
   142a0:	str	r3, [sp, #16]
   142a4:	mul	r3, r7, sl
   142a8:	ldr	r1, [sp, #16]
   142ac:	mov	r2, r3
   142b0:	str	r3, [sp, #24]
   142b4:	bl	1128c <mempcpy@plt>
   142b8:	ldr	r3, [r5, #4]
   142bc:	ldr	r1, [r5]
   142c0:	str	r3, [sp, #4]
   142c4:	mul	r2, r7, r3
   142c8:	bl	11190 <memcpy@plt>
   142cc:	ldr	r3, [r4, #8]
   142d0:	mov	r2, fp
   142d4:	mov	r1, r3
   142d8:	mov	r0, r8
   142dc:	str	r3, [sp, #20]
   142e0:	bl	11190 <memcpy@plt>
   142e4:	ldr	r1, [sp]
   142e8:	ldr	r3, [sp, #20]
   142ec:	cmp	sl, #0
   142f0:	bne	1434c <argp_parse@@Base+0x23a0>
   142f4:	add	r3, r8, fp
   142f8:	str	r3, [sp, #20]
   142fc:	ldr	r3, [sp, #24]
   14300:	ldr	r1, [r5, #8]
   14304:	add	r7, r3, #28
   14308:	ldr	r3, [sp]
   1430c:	ldr	sl, [sp, #20]
   14310:	add	r7, r3, r7
   14314:	ldr	r3, [sp, #4]
   14318:	cmp	r3, #0
   1431c:	bne	14368 <argp_parse@@Base+0x23bc>
   14320:	ldrb	r3, [sp, #4]
   14324:	ldr	r0, [sp, #16]
   14328:	strb	r3, [sl]
   1432c:	bl	12a48 <argp_parse@@Base+0xa9c>
   14330:	ldr	r0, [r4, #8]
   14334:	bl	12a48 <argp_parse@@Base+0xa9c>
   14338:	ldr	r3, [sp]
   1433c:	str	r3, [r4]
   14340:	ldr	r3, [sp, #12]
   14344:	stmib	r4, {r3, r8}
   14348:	b	141f0 <argp_parse@@Base+0x2244>
   1434c:	ldr	r2, [r1, #8]
   14350:	sub	sl, sl, #1
   14354:	sub	r2, r2, r3
   14358:	add	r2, r8, r2
   1435c:	str	r2, [r1, #8]
   14360:	add	r1, r1, #28
   14364:	b	142ec <argp_parse@@Base+0x2340>
   14368:	ldr	r3, [r7, #-24]	; 0xffffffe8
   1436c:	ldr	fp, [r7, #-28]	; 0xffffffe4
   14370:	str	sl, [r7, #-20]	; 0xffffffec
   14374:	cmp	r3, #0
   14378:	ldreq	r3, [sp, #4]
   1437c:	addeq	r7, r7, #28
   14380:	subeq	r3, r3, #1
   14384:	streq	r3, [sp, #4]
   14388:	beq	14314 <argp_parse@@Base+0x2368>
   1438c:	ldr	r2, [fp, #12]
   14390:	tst	r2, #8
   14394:	bne	143d8 <argp_parse@@Base+0x242c>
   14398:	ldr	r2, [fp, #4]
   1439c:	sub	r0, r2, #1
   143a0:	cmp	r0, #254	; 0xfe
   143a4:	str	r2, [sp, #36]	; 0x24
   143a8:	bhi	143d8 <argp_parse@@Base+0x242c>
   143ac:	str	r3, [sp, #32]
   143b0:	str	r1, [sp, #24]
   143b4:	bl	11298 <__ctype_b_loc@plt>
   143b8:	ldr	r2, [sp, #36]	; 0x24
   143bc:	ldr	r1, [sp, #24]
   143c0:	ldr	r3, [sp, #32]
   143c4:	ldr	ip, [r0]
   143c8:	lsl	r0, r2, #1
   143cc:	ldrh	r0, [ip, r0]
   143d0:	tst	r0, #16384	; 0x4000
   143d4:	bne	14610 <argp_parse@@Base+0x2664>
   143d8:	add	fp, fp, #24
   143dc:	sub	r3, r3, #1
   143e0:	b	14374 <argp_parse@@Base+0x23c8>
   143e4:	ldrb	ip, [ip]
   143e8:	add	r2, r2, #1
   143ec:	cmp	ip, r0
   143f0:	beq	1440c <argp_parse@@Base+0x2460>
   143f4:	ldr	lr, [sp, #20]
   143f8:	mov	ip, r2
   143fc:	cmp	lr, r2
   14400:	bhi	143e4 <argp_parse@@Base+0x2438>
   14404:	strb	r0, [sl]
   14408:	add	sl, sl, #1
   1440c:	add	r1, r1, #1
   14410:	b	143d8 <argp_parse@@Base+0x242c>
   14414:	ldr	r1, [r7, #-12]
   14418:	tst	r1, #4
   1441c:	ldreq	r2, [r4, #4]
   14420:	addeq	r2, r2, #1
   14424:	streq	r2, [r4, #4]
   14428:	tst	r1, #8
   1442c:	bne	14454 <argp_parse@@Base+0x24a8>
   14430:	sub	r2, sl, #1
   14434:	cmp	r2, #254	; 0xfe
   14438:	bhi	14454 <argp_parse@@Base+0x24a8>
   1443c:	bl	11298 <__ctype_b_loc@plt>
   14440:	lsl	sl, sl, #1
   14444:	ldr	r2, [r0]
   14448:	ldrh	r2, [r2, sl]
   1444c:	tst	r2, #16384	; 0x4000
   14450:	addne	fp, fp, #1
   14454:	add	r7, r7, #24
   14458:	ldr	sl, [r7, #-20]	; 0xffffffec
   1445c:	cmp	sl, #0
   14460:	bne	14414 <argp_parse@@Base+0x2468>
   14464:	ldr	r2, [r7, #-24]	; 0xffffffe8
   14468:	cmp	r2, #0
   1446c:	bne	14414 <argp_parse@@Base+0x2468>
   14470:	ldr	r2, [r7, #-8]
   14474:	cmp	r2, #0
   14478:	bne	14414 <argp_parse@@Base+0x2468>
   1447c:	ldr	r1, [r7, #-4]
   14480:	cmp	r1, #0
   14484:	bne	14414 <argp_parse@@Base+0x2468>
   14488:	ldr	r2, [r4, #4]
   1448c:	mov	r0, #28
   14490:	str	r1, [sp]
   14494:	mul	r0, r0, r2
   14498:	bl	12fc8 <argp_parse@@Base+0x101c>
   1449c:	str	r0, [r4]
   144a0:	add	r0, fp, #1
   144a4:	bl	12fc8 <argp_parse@@Base+0x101c>
   144a8:	ldr	r7, [r4]
   144ac:	ldr	r1, [sp]
   144b0:	cmp	r0, #0
   144b4:	cmpne	r7, #0
   144b8:	mov	r3, r0
   144bc:	str	r0, [r4, #8]
   144c0:	bne	140c8 <argp_parse@@Base+0x211c>
   144c4:	ldr	r3, [pc, #344]	; 14624 <argp_parse@@Base+0x2678>
   144c8:	ldr	r2, [pc, #384]	; 14650 <argp_parse@@Base+0x26a4>
   144cc:	ldr	r1, [pc, #344]	; 1462c <argp_parse@@Base+0x2680>
   144d0:	ldr	r0, [pc, #380]	; 14654 <argp_parse@@Base+0x26a8>
   144d4:	b	14088 <argp_parse@@Base+0x20dc>
   144d8:	uxtb	r8, r8
   144dc:	mov	r1, r3
   144e0:	b	14108 <argp_parse@@Base+0x215c>
   144e4:	ldr	r1, [r5, #12]
   144e8:	tst	r1, #4
   144ec:	bne	14530 <argp_parse@@Base+0x2584>
   144f0:	b	145b4 <argp_parse@@Base+0x2608>
   144f4:	str	r2, [r7, #-24]	; 0xffffffe8
   144f8:	ldr	fp, [r5, #20]
   144fc:	str	r5, [r7, #-28]	; 0xffffffe4
   14500:	cmp	fp, #0
   14504:	str	sl, [r7, #-20]	; 0xffffffec
   14508:	bne	14520 <argp_parse@@Base+0x2574>
   1450c:	ldr	r1, [r5]
   14510:	cmp	r1, #0
   14514:	cmpeq	r0, #0
   14518:	addeq	fp, r8, #1
   1451c:	movne	fp, r8
   14520:	ldr	r1, [sp, #8]
   14524:	str	fp, [r7, #-16]
   14528:	str	r9, [r7, #-12]
   1452c:	str	r1, [r7, #-8]
   14530:	ldr	r1, [r7, #-24]	; 0xffffffe8
   14534:	add	r1, r1, #1
   14538:	str	r1, [r7, #-24]	; 0xffffffe8
   1453c:	ldr	r1, [r5, #12]
   14540:	tst	r1, #8
   14544:	bne	14580 <argp_parse@@Base+0x25d4>
   14548:	ldr	r8, [r5, #4]
   1454c:	sub	r1, r8, #1
   14550:	cmp	r1, #254	; 0xfe
   14554:	bhi	14580 <argp_parse@@Base+0x25d4>
   14558:	str	r2, [sp, #4]
   1455c:	str	r3, [sp]
   14560:	bl	11298 <__ctype_b_loc@plt>
   14564:	lsl	r1, r8, #1
   14568:	ldr	r3, [sp]
   1456c:	ldr	r2, [sp, #4]
   14570:	ldr	r0, [r0]
   14574:	ldrh	r1, [r0, r1]
   14578:	tst	r1, #16384	; 0x4000
   1457c:	bne	144d8 <argp_parse@@Base+0x252c>
   14580:	add	r5, r5, #24
   14584:	ldr	r1, [r5, #4]
   14588:	cmp	r1, #0
   1458c:	bne	144e4 <argp_parse@@Base+0x2538>
   14590:	ldr	r1, [r5]
   14594:	cmp	r1, #0
   14598:	bne	144e4 <argp_parse@@Base+0x2538>
   1459c:	ldr	r1, [r5, #16]
   145a0:	cmp	r1, #0
   145a4:	bne	144e4 <argp_parse@@Base+0x2538>
   145a8:	ldr	r1, [r5, #20]
   145ac:	cmp	r1, #0
   145b0:	bne	144e4 <argp_parse@@Base+0x2538>
   145b4:	add	r7, r7, #28
   145b8:	mov	r8, fp
   145bc:	ldr	r0, [r5, #4]
   145c0:	cmp	r0, #0
   145c4:	bne	144f4 <argp_parse@@Base+0x2548>
   145c8:	ldr	r1, [r5]
   145cc:	cmp	r1, #0
   145d0:	bne	144f4 <argp_parse@@Base+0x2548>
   145d4:	ldr	r1, [r5, #16]
   145d8:	cmp	r1, #0
   145dc:	bne	144f4 <argp_parse@@Base+0x2548>
   145e0:	ldr	r1, [r5, #20]
   145e4:	cmp	r1, #0
   145e8:	bne	144f4 <argp_parse@@Base+0x2548>
   145ec:	strb	r1, [sl]
   145f0:	cmp	r6, #0
   145f4:	addne	r3, r4, #12
   145f8:	addne	r6, r6, #16
   145fc:	strne	r3, [sp, #28]
   14600:	bne	141fc <argp_parse@@Base+0x2250>
   14604:	mov	r0, r4
   14608:	add	sp, sp, #44	; 0x2c
   1460c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14610:	ldrb	r0, [r1]
   14614:	cmp	r0, r2
   14618:	moveq	r2, r8
   1461c:	bne	143d8 <argp_parse@@Base+0x242c>
   14620:	b	143f4 <argp_parse@@Base+0x2448>
   14624:	andeq	r7, r1, sp, lsl #10
   14628:	andeq	r0, r0, r2, asr #3
   1462c:	andeq	r7, r1, pc, ror #11
   14630:	strdeq	r7, [r1], -fp
   14634:	strdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   14638:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1463c:	andeq	r7, r1, r2, lsr r6
   14640:	andeq	r7, r1, r6, lsl r5
   14644:	andeq	r0, r0, sl, asr #7
   14648:	andeq	r7, r1, fp, ror #12
   1464c:	andeq	r7, r1, r7, lsr r6
   14650:	ldrdeq	r0, [r0], -sl
   14654:	andeq	r7, r1, pc, lsl #12
   14658:	push	{r4, r5, r6, lr}
   1465c:	mov	r4, r0
   14660:	mov	r5, r1
   14664:	ldr	r0, [r0, #12]
   14668:	ldr	r1, [r1, #12]
   1466c:	cmp	r0, r1
   14670:	bne	146a8 <argp_parse@@Base+0x26fc>
   14674:	ldr	r0, [r5, #8]
   14678:	ldr	r3, [r4, #8]
   1467c:	mvn	r2, r0
   14680:	lsr	r2, r2, #31
   14684:	cmp	r2, r3, lsr #31
   14688:	subne	r0, r3, r0
   1468c:	subeq	r0, r0, r3
   14690:	cmp	r0, #0
   14694:	popne	{r4, r5, r6, pc}
   14698:	ldr	r0, [r5, #4]
   1469c:	ldr	r3, [r4, #4]
   146a0:	sub	r0, r0, r3
   146a4:	pop	{r4, r5, r6, pc}
   146a8:	bl	14658 <argp_parse@@Base+0x26ac>
   146ac:	cmp	r0, #0
   146b0:	popne	{r4, r5, r6, pc}
   146b4:	ldr	r0, [r5, #8]
   146b8:	ldr	r3, [r4, #8]
   146bc:	mvn	r2, r0
   146c0:	lsr	r2, r2, #31
   146c4:	cmp	r2, r3, lsr #31
   146c8:	subne	r0, r3, r0
   146cc:	subeq	r0, r0, r3
   146d0:	cmp	r0, #0
   146d4:	beq	14698 <argp_parse@@Base+0x26ec>
   146d8:	pop	{r4, r5, r6, pc}
   146dc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   146e0:	mov	r6, r0
   146e4:	ldr	r0, [r0, #16]
   146e8:	mov	r5, r1
   146ec:	cmp	r0, #0
   146f0:	movne	r3, r0
   146f4:	bne	14704 <argp_parse@@Base+0x2758>
   146f8:	ldr	r3, [r6, #12]
   146fc:	b	14714 <argp_parse@@Base+0x2768>
   14700:	mov	r3, r2
   14704:	ldr	r2, [r3, #12]
   14708:	cmp	r2, #0
   1470c:	bne	14700 <argp_parse@@Base+0x2754>
   14710:	ldr	r3, [r3, #8]
   14714:	ldr	r1, [r5, #16]
   14718:	cmp	r1, #0
   1471c:	movne	r2, r1
   14720:	bne	14730 <argp_parse@@Base+0x2784>
   14724:	ldr	r4, [r5, #12]
   14728:	b	14740 <argp_parse@@Base+0x2794>
   1472c:	mov	r2, ip
   14730:	ldr	ip, [r2, #12]
   14734:	cmp	ip, #0
   14738:	bne	1472c <argp_parse@@Base+0x2780>
   1473c:	ldr	r4, [r2, #8]
   14740:	mvn	r2, r4
   14744:	lsr	r2, r2, #31
   14748:	cmp	r2, r3, lsr #31
   1474c:	subne	r4, r3, r4
   14750:	subeq	r4, r4, r3
   14754:	cmp	r4, #0
   14758:	bne	147b0 <argp_parse@@Base+0x2804>
   1475c:	adds	r4, r1, #0
   14760:	movne	r4, #1
   14764:	cmp	r0, #0
   14768:	rsbeq	r4, r4, #0
   1476c:	rsbne	r4, r4, #1
   14770:	cmp	r4, #0
   14774:	bne	147b0 <argp_parse@@Base+0x2804>
   14778:	cmp	r0, #0
   1477c:	beq	147ec <argp_parse@@Base+0x2840>
   14780:	ldr	r3, [r0, #20]
   14784:	ldr	r2, [r1, #20]
   14788:	cmp	r3, r2
   1478c:	ble	147bc <argp_parse@@Base+0x2810>
   14790:	ldr	r0, [r0, #12]
   14794:	ldr	r3, [r0, #20]
   14798:	cmp	r2, r3
   1479c:	blt	14790 <argp_parse@@Base+0x27e4>
   147a0:	bl	14658 <argp_parse@@Base+0x26ac>
   147a4:	cmp	r0, #0
   147a8:	movne	r4, r0
   147ac:	moveq	r4, #1
   147b0:	mov	r0, r4
   147b4:	add	sp, sp, #8
   147b8:	pop	{r4, r5, r6, r7, r8, pc}
   147bc:	bge	147e0 <argp_parse@@Base+0x2834>
   147c0:	ldr	r1, [r1, #12]
   147c4:	ldr	r2, [r1, #20]
   147c8:	cmp	r3, r2
   147cc:	blt	147c0 <argp_parse@@Base+0x2814>
   147d0:	bl	14658 <argp_parse@@Base+0x26ac>
   147d4:	subs	r4, r0, #0
   147d8:	mvneq	r4, #0
   147dc:	b	147b0 <argp_parse@@Base+0x2804>
   147e0:	bl	14658 <argp_parse@@Base+0x26ac>
   147e4:	subs	r4, r0, #0
   147e8:	bne	147b0 <argp_parse@@Base+0x2804>
   147ec:	ldr	r4, [r5, #12]
   147f0:	ldr	r3, [r6, #12]
   147f4:	mvn	r2, r4
   147f8:	lsr	r2, r2, #31
   147fc:	cmp	r2, r3, lsr #31
   14800:	subne	r4, r3, r4
   14804:	subeq	r4, r4, r3
   14808:	cmp	r4, #0
   1480c:	bne	147b0 <argp_parse@@Base+0x2804>
   14810:	mov	r0, r6
   14814:	bl	13008 <argp_parse@@Base+0x105c>
   14818:	mov	r7, r0
   1481c:	str	r0, [sp]
   14820:	mov	r0, r5
   14824:	bl	13008 <argp_parse@@Base+0x105c>
   14828:	ldr	r3, [r6]
   1482c:	adds	r7, r7, #0
   14830:	movne	r7, #1
   14834:	ldr	r3, [r3, #12]
   14838:	ands	r3, r7, r3, lsr #3
   1483c:	moveq	r7, r4
   14840:	str	r0, [sp, #4]
   14844:	beq	14858 <argp_parse@@Base+0x28ac>
   14848:	mov	r0, sp
   1484c:	bl	13170 <argp_parse@@Base+0x11c4>
   14850:	adds	r7, r0, #0
   14854:	movne	r7, #1
   14858:	ldr	r3, [r5]
   1485c:	ldr	r0, [r3, #12]
   14860:	ands	r0, r0, #8
   14864:	beq	14888 <argp_parse@@Base+0x28dc>
   14868:	ldr	r3, [sp, #4]
   1486c:	cmp	r3, #0
   14870:	moveq	r0, r4
   14874:	beq	14888 <argp_parse@@Base+0x28dc>
   14878:	add	r0, sp, #4
   1487c:	bl	13170 <argp_parse@@Base+0x11c4>
   14880:	adds	r0, r0, #0
   14884:	movne	r0, #1
   14888:	subs	r4, r7, r0
   1488c:	bne	147b0 <argp_parse@@Base+0x2804>
   14890:	ldr	r2, [r6, #20]
   14894:	mov	r3, r4
   14898:	ldr	r1, [pc, #224]	; 14980 <argp_parse@@Base+0x29d4>
   1489c:	ldr	r2, [r2, #24]
   148a0:	mov	r0, r6
   148a4:	bl	13044 <argp_parse@@Base+0x1098>
   148a8:	ldr	r2, [r5, #20]
   148ac:	mov	r3, r4
   148b0:	ldr	r1, [pc, #200]	; 14980 <argp_parse@@Base+0x29d4>
   148b4:	ldr	r2, [r2, #24]
   148b8:	uxtb	r8, r0
   148bc:	mov	r0, r5
   148c0:	bl	13044 <argp_parse@@Base+0x1098>
   148c4:	cmp	r8, #0
   148c8:	uxtb	r5, r0
   148cc:	beq	148d8 <argp_parse@@Base+0x292c>
   148d0:	mov	r6, r8
   148d4:	b	148e8 <argp_parse@@Base+0x293c>
   148d8:	ldr	r3, [sp]
   148dc:	cmp	r3, #0
   148e0:	ldrbne	r6, [r3]
   148e4:	beq	148d0 <argp_parse@@Base+0x2924>
   148e8:	cmp	r5, #0
   148ec:	beq	148f8 <argp_parse@@Base+0x294c>
   148f0:	mov	r7, r5
   148f4:	b	14908 <argp_parse@@Base+0x295c>
   148f8:	ldr	r3, [sp, #4]
   148fc:	cmp	r3, #0
   14900:	ldrbne	r7, [r3]
   14904:	beq	148f0 <argp_parse@@Base+0x2944>
   14908:	bl	11274 <__ctype_tolower_loc@plt>
   1490c:	ldr	r3, [r0]
   14910:	ldr	r4, [r3, r6, lsl #2]
   14914:	ldr	r3, [r3, r7, lsl #2]
   14918:	subs	r4, r4, r3
   1491c:	bne	147b0 <argp_parse@@Base+0x2804>
   14920:	subs	r4, r7, r6
   14924:	bne	147b0 <argp_parse@@Base+0x2804>
   14928:	adds	r4, r5, #0
   1492c:	movne	r4, #1
   14930:	cmp	r8, #0
   14934:	rsbeq	r4, r4, #0
   14938:	rsbne	r4, r4, #1
   1493c:	cmp	r4, #0
   14940:	bne	147b0 <argp_parse@@Base+0x2804>
   14944:	cmp	r8, #0
   14948:	bne	147b0 <argp_parse@@Base+0x2804>
   1494c:	ldm	sp, {r0, r1}
   14950:	adds	r4, r1, #0
   14954:	movne	r4, #1
   14958:	cmp	r0, #0
   1495c:	rsbeq	r4, r4, #0
   14960:	rsbne	r4, r4, #1
   14964:	cmp	r4, #0
   14968:	bne	147b0 <argp_parse@@Base+0x2804>
   1496c:	cmp	r0, #0
   14970:	beq	147b0 <argp_parse@@Base+0x2804>
   14974:	bl	111fc <strcasecmp@plt>
   14978:	mov	r4, r0
   1497c:	b	147b0 <argp_parse@@Base+0x2804>
   14980:	andeq	r3, r1, r4, lsr #2

00014984 <argp_failure@@Base>:
   14984:	push	{r3}		; (str r3, [sp, #-4]!)
   14988:	push	{r4, r5, r6, r7, r8, lr}
   1498c:	sub	sp, sp, #204	; 0xcc
   14990:	subs	r5, r0, #0
   14994:	mov	r7, r1
   14998:	mov	r6, r2
   1499c:	ldr	r8, [sp, #228]	; 0xe4
   149a0:	beq	149cc <argp_failure@@Base+0x48>
   149a4:	ldr	r3, [r5, #16]
   149a8:	tst	r3, #2
   149ac:	bne	149bc <argp_failure@@Base+0x38>
   149b0:	ldr	r4, [r5, #44]	; 0x2c
   149b4:	cmp	r4, #0
   149b8:	bne	149f0 <argp_failure@@Base+0x6c>
   149bc:	add	sp, sp, #204	; 0xcc
   149c0:	pop	{r4, r5, r6, r7, r8, lr}
   149c4:	add	sp, sp, #4
   149c8:	bx	lr
   149cc:	ldr	r3, [pc, #244]	; 14ac8 <argp_failure@@Base+0x144>
   149d0:	ldr	r4, [r3]
   149d4:	cmp	r4, #0
   149d8:	beq	149bc <argp_failure@@Base+0x38>
   149dc:	mov	r0, r4
   149e0:	bl	113ac <flockfile@plt>
   149e4:	ldr	r3, [pc, #224]	; 14acc <argp_failure@@Base+0x148>
   149e8:	ldr	r0, [r3]
   149ec:	b	149fc <argp_failure@@Base+0x78>
   149f0:	mov	r0, r4
   149f4:	bl	113ac <flockfile@plt>
   149f8:	ldr	r0, [r5, #40]	; 0x28
   149fc:	mov	r1, r4
   14a00:	bl	1110c <fputs_unlocked@plt>
   14a04:	cmp	r8, #0
   14a08:	beq	14a3c <argp_failure@@Base+0xb8>
   14a0c:	add	r3, sp, #232	; 0xe8
   14a10:	mov	r1, r4
   14a14:	mov	r0, #58	; 0x3a
   14a18:	str	r3, [sp]
   14a1c:	bl	11430 <putc_unlocked@plt>
   14a20:	mov	r1, r4
   14a24:	mov	r0, #32
   14a28:	bl	11430 <putc_unlocked@plt>
   14a2c:	ldr	r2, [sp]
   14a30:	mov	r1, r8
   14a34:	mov	r0, r4
   14a38:	bl	11370 <vfprintf@plt>
   14a3c:	cmp	r6, #0
   14a40:	beq	14a90 <argp_failure@@Base+0x10c>
   14a44:	mov	r1, r4
   14a48:	mov	r0, #58	; 0x3a
   14a4c:	bl	11430 <putc_unlocked@plt>
   14a50:	mov	r1, r4
   14a54:	mov	r0, #32
   14a58:	bl	11430 <putc_unlocked@plt>
   14a5c:	mov	r2, #200	; 0xc8
   14a60:	mov	r1, sp
   14a64:	mov	r0, r6
   14a68:	bl	112f8 <strerror_r@plt>
   14a6c:	cmp	r0, #0
   14a70:	bne	14a88 <argp_failure@@Base+0x104>
   14a74:	mov	r0, r6
   14a78:	bl	11268 <strerror@plt>
   14a7c:	ldr	r3, [pc, #76]	; 14ad0 <argp_failure@@Base+0x14c>
   14a80:	cmp	r0, #0
   14a84:	moveq	r0, r3
   14a88:	mov	r1, r4
   14a8c:	bl	1110c <fputs_unlocked@plt>
   14a90:	mov	r1, r4
   14a94:	mov	r0, #10
   14a98:	bl	11430 <putc_unlocked@plt>
   14a9c:	mov	r0, r4
   14aa0:	bl	11208 <funlockfile@plt>
   14aa4:	cmp	r7, #0
   14aa8:	beq	149bc <argp_failure@@Base+0x38>
   14aac:	cmp	r5, #0
   14ab0:	beq	14ac0 <argp_failure@@Base+0x13c>
   14ab4:	ldr	r3, [r5, #16]
   14ab8:	tst	r3, #32
   14abc:	bne	149bc <argp_failure@@Base+0x38>
   14ac0:	mov	r0, r7
   14ac4:	bl	112b0 <exit@plt>
   14ac8:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   14acc:	andeq	r8, r2, r8, asr #3
   14ad0:	andeq	r7, r1, r4, lsl #13
   14ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ad8:	add	fp, sp, #32
   14adc:	sub	sp, sp, #116	; 0x74
   14ae0:	str	r3, [fp, #-104]	; 0xffffff98
   14ae4:	subs	r3, r2, #0
   14ae8:	str	r0, [fp, #-108]	; 0xffffff94
   14aec:	str	r1, [fp, #-96]	; 0xffffffa0
   14af0:	str	r3, [fp, #-112]	; 0xffffff90
   14af4:	beq	14b70 <argp_failure@@Base+0x1ec>
   14af8:	ldr	r5, [pc, #3996]	; 15a9c <argp_failure@@Base+0x1118>
   14afc:	mov	r0, r3
   14b00:	bl	113ac <flockfile@plt>
   14b04:	ldr	r9, [r5, #36]	; 0x24
   14b08:	cmp	r9, #0
   14b0c:	bne	14b48 <argp_failure@@Base+0x1c4>
   14b10:	ldr	r0, [pc, #3976]	; 15aa0 <argp_failure@@Base+0x111c>
   14b14:	bl	11238 <getenv@plt>
   14b18:	mov	ip, r5
   14b1c:	sub	lr, fp, #76	; 0x4c
   14b20:	mov	r4, r0
   14b24:	ldm	ip!, {r0, r1, r2, r3}
   14b28:	cmp	r4, #0
   14b2c:	movne	r5, #1
   14b30:	stmia	lr!, {r0, r1, r2, r3}
   14b34:	ldm	ip!, {r0, r1, r2, r3}
   14b38:	stmia	lr!, {r0, r1, r2, r3}
   14b3c:	ldm	ip, {r0, r1}
   14b40:	stm	lr, {r0, r1}
   14b44:	bne	14dc4 <argp_failure@@Base+0x440>
   14b48:	ldr	r5, [pc, #3916]	; 15a9c <argp_failure@@Base+0x1118>
   14b4c:	mov	r3, #0
   14b50:	mov	r1, r3
   14b54:	ldr	r2, [r5, #32]
   14b58:	ldr	r0, [fp, #-112]	; 0xffffff90
   14b5c:	bl	16740 <argp_error@@Base+0xb78>
   14b60:	subs	r4, r0, #0
   14b64:	bne	14e58 <argp_failure@@Base+0x4d4>
   14b68:	ldr	r0, [fp, #-112]	; 0xffffff90
   14b6c:	bl	11208 <funlockfile@plt>
   14b70:	sub	sp, fp, #32
   14b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b78:	mov	r3, r1
   14b7c:	mov	r1, r3
   14b80:	str	r3, [fp, #-100]	; 0xffffff9c
   14b84:	ldrb	r0, [r1], #1
   14b88:	lsl	r2, r0, #1
   14b8c:	ldrh	r2, [r6, r2]
   14b90:	tst	r2, #8192	; 0x2000
   14b94:	bne	14b78 <argp_failure@@Base+0x1f4>
   14b98:	ands	r2, r2, #1024	; 0x400
   14b9c:	movne	r2, r3
   14ba0:	bne	14c1c <argp_failure@@Base+0x298>
   14ba4:	cmp	r0, #0
   14ba8:	beq	14e14 <argp_failure@@Base+0x490>
   14bac:	str	r3, [sp]
   14bb0:	mov	r1, r2
   14bb4:	ldr	r3, [pc, #3816]	; 15aa4 <argp_failure@@Base+0x1120>
   14bb8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14bbc:	bl	14984 <argp_failure@@Base>
   14bc0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14bc4:	ldr	r3, [pc, #3804]	; 15aa8 <argp_failure@@Base+0x1124>
   14bc8:	mov	r0, #9
   14bcc:	ldrb	r2, [r3, #14]
   14bd0:	cmp	r2, #0
   14bd4:	bne	14e1c <argp_failure@@Base+0x498>
   14bd8:	ldrb	r1, [r3, #15]
   14bdc:	cmp	r1, #32
   14be0:	beq	14e1c <argp_failure@@Base+0x498>
   14be4:	sub	lr, fp, #36	; 0x24
   14be8:	add	r1, lr, r1
   14bec:	ldr	r1, [r1, #-40]	; 0xffffffd8
   14bf0:	cmp	r1, ip
   14bf4:	blt	14e1c <argp_failure@@Base+0x498>
   14bf8:	str	r3, [sp, #4]
   14bfc:	ldr	r3, [pc, #3752]	; 15aac <argp_failure@@Base+0x1128>
   14c00:	mov	r1, r2
   14c04:	str	r3, [sp]
   14c08:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14c0c:	ldr	r3, [pc, #3740]	; 15ab0 <argp_failure@@Base+0x112c>
   14c10:	bl	14984 <argp_failure@@Base>
   14c14:	b	14b48 <argp_failure@@Base+0x1c4>
   14c18:	mov	r2, lr
   14c1c:	mov	lr, r2
   14c20:	ldrb	r1, [lr], #1
   14c24:	cmp	r1, #95	; 0x5f
   14c28:	cmpne	r1, #45	; 0x2d
   14c2c:	lsl	ip, r1, #1
   14c30:	moveq	r1, #1
   14c34:	ldrh	ip, [r6, ip]
   14c38:	movne	r1, #0
   14c3c:	lsl	ip, ip, #28
   14c40:	orrs	r1, r1, ip, lsr #31
   14c44:	bne	14c18 <argp_failure@@Base+0x294>
   14c48:	sub	r8, r2, r3
   14c4c:	mov	r4, r2
   14c50:	ldrb	r1, [r2], #1
   14c54:	lsl	ip, r1, #1
   14c58:	ldrh	ip, [r6, ip]
   14c5c:	tst	ip, #8192	; 0x2000
   14c60:	bne	14c4c <argp_failure@@Base+0x2c8>
   14c64:	cmp	r1, #44	; 0x2c
   14c68:	cmpne	r1, #0
   14c6c:	beq	159dc <argp_failure@@Base+0x1058>
   14c70:	cmp	r1, #61	; 0x3d
   14c74:	bne	14c94 <argp_failure@@Base+0x310>
   14c78:	mov	r4, r2
   14c7c:	add	r2, r2, #1
   14c80:	ldrb	r3, [r4]
   14c84:	lsl	r3, r3, #1
   14c88:	ldrh	r3, [r6, r3]
   14c8c:	tst	r3, #8192	; 0x2000
   14c90:	bne	14c78 <argp_failure@@Base+0x2f4>
   14c94:	ldrb	r3, [r4]
   14c98:	lsl	r3, r3, #1
   14c9c:	ldrh	r3, [r6, r3]
   14ca0:	tst	r3, #2048	; 0x800
   14ca4:	moveq	sl, r9
   14ca8:	moveq	r7, r9
   14cac:	beq	14d28 <argp_failure@@Base+0x3a4>
   14cb0:	mov	r0, r4
   14cb4:	bl	113c4 <atoi@plt>
   14cb8:	mov	r3, r4
   14cbc:	mov	r7, r0
   14cc0:	ldrb	r2, [r3]
   14cc4:	add	r1, r3, #1
   14cc8:	lsl	r2, r2, #1
   14ccc:	ldrh	r2, [r6, r2]
   14cd0:	tst	r2, #2048	; 0x800
   14cd4:	bne	14de0 <argp_failure@@Base+0x45c>
   14cd8:	mov	r4, r3
   14cdc:	add	r3, r3, #1
   14ce0:	ldrb	r2, [r4]
   14ce4:	lsl	r2, r2, #1
   14ce8:	ldrh	r2, [r6, r2]
   14cec:	tst	r2, #8192	; 0x2000
   14cf0:	bne	14cd8 <argp_failure@@Base+0x354>
   14cf4:	mov	sl, r9
   14cf8:	b	14d28 <argp_failure@@Base+0x3a4>
   14cfc:	ldrb	r2, [r3, #1]
   14d00:	cmp	r2, #111	; 0x6f
   14d04:	bne	159e4 <argp_failure@@Base+0x1060>
   14d08:	ldrb	r2, [r3, #2]
   14d0c:	cmp	r2, #45	; 0x2d
   14d10:	bne	159e4 <argp_failure@@Base+0x1060>
   14d14:	sub	r8, r8, #3
   14d18:	mov	r7, r9
   14d1c:	mov	sl, r5
   14d20:	add	r3, r3, #3
   14d24:	str	r3, [fp, #-100]	; 0xffffff9c
   14d28:	ldr	r6, [pc, #3448]	; 15aa8 <argp_failure@@Base+0x1124>
   14d2c:	mov	r3, #9
   14d30:	str	r3, [fp, #-116]	; 0xffffff8c
   14d34:	mov	r0, r6
   14d38:	bl	112bc <strlen@plt>
   14d3c:	cmp	r0, r8
   14d40:	bne	14dfc <argp_failure@@Base+0x478>
   14d44:	mov	r2, r8
   14d48:	mov	r1, r6
   14d4c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   14d50:	bl	113f4 <strncmp@plt>
   14d54:	cmp	r0, #0
   14d58:	bne	14dfc <argp_failure@@Base+0x478>
   14d5c:	cmp	sl, #0
   14d60:	beq	14de8 <argp_failure@@Base+0x464>
   14d64:	ldrb	r2, [r6, #14]
   14d68:	cmp	r2, #0
   14d6c:	bne	14de8 <argp_failure@@Base+0x464>
   14d70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d74:	str	r8, [sp]
   14d78:	str	r3, [sp, #4]
   14d7c:	mov	r1, r2
   14d80:	ldr	r3, [pc, #3372]	; 15ab4 <argp_failure@@Base+0x1130>
   14d84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14d88:	bl	14984 <argp_failure@@Base>
   14d8c:	ldr	r3, [pc, #3364]	; 15ab8 <argp_failure@@Base+0x1134>
   14d90:	cmp	r6, r3
   14d94:	bne	14db8 <argp_failure@@Base+0x434>
   14d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d9c:	mov	r2, #0
   14da0:	str	r3, [sp, #4]
   14da4:	str	r8, [sp]
   14da8:	ldr	r3, [pc, #3340]	; 15abc <argp_failure@@Base+0x1138>
   14dac:	mov	r1, r2
   14db0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14db4:	bl	14984 <argp_failure@@Base>
   14db8:	ldrb	r3, [r4]
   14dbc:	cmp	r3, #44	; 0x2c
   14dc0:	addeq	r4, r4, #1
   14dc4:	ldrb	r3, [r4]
   14dc8:	cmp	r3, #0
   14dcc:	beq	14bc0 <argp_failure@@Base+0x23c>
   14dd0:	bl	11298 <__ctype_b_loc@plt>
   14dd4:	mov	r3, r4
   14dd8:	ldr	r6, [r0]
   14ddc:	b	14b7c <argp_failure@@Base+0x1f8>
   14de0:	mov	r3, r1
   14de4:	b	14cc0 <argp_failure@@Base+0x33c>
   14de8:	ldrb	r3, [r6, #15]
   14dec:	sub	r2, fp, #36	; 0x24
   14df0:	add	r3, r2, r3
   14df4:	str	r7, [r3, #-40]	; 0xffffffd8
   14df8:	b	14d8c <argp_failure@@Base+0x408>
   14dfc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   14e00:	add	r6, r6, #16
   14e04:	subs	r3, r3, #1
   14e08:	str	r3, [fp, #-116]	; 0xffffff8c
   14e0c:	bne	14d34 <argp_failure@@Base+0x3b0>
   14e10:	b	14d8c <argp_failure@@Base+0x408>
   14e14:	mov	r4, r3
   14e18:	b	14dc4 <argp_failure@@Base+0x440>
   14e1c:	subs	r0, r0, #1
   14e20:	add	r3, r3, #16
   14e24:	bne	14bcc <argp_failure@@Base+0x248>
   14e28:	sub	lr, fp, #76	; 0x4c
   14e2c:	ldr	r4, [pc, #3176]	; 15a9c <argp_failure@@Base+0x1118>
   14e30:	ldm	lr!, {r0, r1, r2, r3}
   14e34:	mov	ip, r4
   14e38:	stmia	ip!, {r0, r1, r2, r3}
   14e3c:	ldm	lr!, {r0, r1, r2, r3}
   14e40:	stmia	ip!, {r0, r1, r2, r3}
   14e44:	mov	r3, #1
   14e48:	ldm	lr, {r0, r1}
   14e4c:	stm	ip, {r0, r1}
   14e50:	str	r3, [r4, #36]	; 0x24
   14e54:	b	14b48 <argp_failure@@Base+0x1c4>
   14e58:	ldr	r3, [fp, #-104]	; 0xffffff98
   14e5c:	ands	r3, r3, #11
   14e60:	moveq	sl, r3
   14e64:	beq	14ec4 <argp_failure@@Base+0x540>
   14e68:	mov	r1, #0
   14e6c:	ldr	r0, [fp, #-108]	; 0xffffff94
   14e70:	bl	14050 <argp_parse@@Base+0x20a4>
   14e74:	ldr	r1, [pc, #3140]	; 15ac0 <argp_failure@@Base+0x113c>
   14e78:	mov	sl, r0
   14e7c:	bl	13fdc <argp_parse@@Base+0x2030>
   14e80:	ldr	r1, [pc, #3132]	; 15ac4 <argp_failure@@Base+0x1140>
   14e84:	mov	r0, sl
   14e88:	bl	13fdc <argp_parse@@Base+0x2030>
   14e8c:	ldr	r1, [sl, #4]
   14e90:	cmp	r1, #0
   14e94:	beq	14ec4 <argp_failure@@Base+0x540>
   14e98:	ldr	r0, [sl]
   14e9c:	mov	r3, #0
   14ea0:	mov	r2, r0
   14ea4:	str	r3, [r2, #24]
   14ea8:	add	r3, r3, #1
   14eac:	cmp	r1, r3
   14eb0:	add	r2, r2, #28
   14eb4:	bne	14ea4 <argp_failure@@Base+0x520>
   14eb8:	ldr	r3, [pc, #3080]	; 15ac8 <argp_failure@@Base+0x1144>
   14ebc:	mov	r2, #28
   14ec0:	bl	113d0 <qsort@plt>
   14ec4:	ldr	r3, [fp, #-104]	; 0xffffff98
   14ec8:	ands	r3, r3, #3
   14ecc:	moveq	r5, r3
   14ed0:	beq	15070 <argp_failure@@Base+0x6ec>
   14ed4:	ldr	r0, [fp, #-108]	; 0xffffff94
   14ed8:	bl	13228 <argp_parse@@Base+0x127c>
   14edc:	mov	r1, #0
   14ee0:	ldr	r6, [pc, #3044]	; 15acc <argp_failure@@Base+0x1148>
   14ee4:	mov	r9, #1
   14ee8:	add	r3, r0, #14
   14eec:	bic	r3, r3, #7
   14ef0:	sub	sp, sp, r3
   14ef4:	add	r7, sp, #8
   14ef8:	mov	r2, r0
   14efc:	mov	r0, r7
   14f00:	bl	11304 <memset@plt>
   14f04:	ldr	r2, [r4, #24]
   14f08:	ldr	r3, [r4, #28]
   14f0c:	ldr	r8, [r5, #28]
   14f10:	sub	r3, r3, r2
   14f14:	ldr	r2, [r4, #16]
   14f18:	cmp	r3, r2
   14f1c:	bls	14f28 <argp_failure@@Base+0x5a4>
   14f20:	mov	r0, r4
   14f24:	bl	167b8 <argp_error@@Base+0xbf0>
   14f28:	ldr	r3, [r4, #12]
   14f2c:	cmp	r9, #0
   14f30:	str	r8, [r4, #12]
   14f34:	ldrne	r2, [pc, #2964]	; 15ad0 <argp_failure@@Base+0x114c>
   14f38:	ldreq	r2, [pc, #2964]	; 15ad4 <argp_failure@@Base+0x1150>
   14f3c:	str	r3, [fp, #-100]	; 0xffffff9c
   14f40:	ldr	r1, [pc, #2960]	; 15ad8 <argp_failure@@Base+0x1154>
   14f44:	ldr	r3, [fp, #4]
   14f48:	mov	r0, r4
   14f4c:	str	r7, [fp, #-76]	; 0xffffffb4
   14f50:	bl	16cec <argp_error@@Base+0x1124>
   14f54:	ldr	r2, [r4, #24]
   14f58:	ldr	r3, [r4, #28]
   14f5c:	ldr	r8, [r5, #28]
   14f60:	sub	r3, r3, r2
   14f64:	ldr	r2, [r4, #16]
   14f68:	cmp	r3, r2
   14f6c:	bls	14f78 <argp_failure@@Base+0x5f4>
   14f70:	mov	r0, r4
   14f74:	bl	167b8 <argp_error@@Base+0xbf0>
   14f78:	ldr	r3, [fp, #-104]	; 0xffffff98
   14f7c:	ldr	r9, [r4, #4]
   14f80:	tst	r3, #2
   14f84:	str	r8, [r4, #4]
   14f88:	beq	152ec <argp_failure@@Base+0x968>
   14f8c:	ldr	r3, [sl, #4]
   14f90:	cmp	r3, #0
   14f94:	beq	14fd4 <argp_failure@@Base+0x650>
   14f98:	ldr	r3, [r4, #28]
   14f9c:	ldr	r2, [r4, #32]
   14fa0:	add	r3, r3, #12
   14fa4:	cmp	r2, r3
   14fa8:	bcc	152d4 <argp_failure@@Base+0x950>
   14fac:	ldr	r2, [r4, #28]
   14fb0:	ldr	r3, [r6]
   14fb4:	str	r3, [r2]
   14fb8:	ldr	r3, [r6, #4]
   14fbc:	str	r3, [r2, #4]
   14fc0:	ldr	r3, [r6, #8]
   14fc4:	str	r3, [r2, #8]
   14fc8:	ldr	r3, [r4, #28]
   14fcc:	add	r3, r3, #12
   14fd0:	str	r3, [r4, #28]
   14fd4:	mov	r3, #1
   14fd8:	sub	r2, fp, #76	; 0x4c
   14fdc:	str	r4, [sp]
   14fe0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   14fe4:	ldr	r0, [fp, #-108]	; 0xffffff94
   14fe8:	bl	13c3c <argp_parse@@Base+0x1c90>
   14fec:	ldr	r2, [r4, #24]
   14ff0:	ldr	r3, [r4, #28]
   14ff4:	sub	r3, r3, r2
   14ff8:	ldr	r2, [r4, #16]
   14ffc:	cmp	r3, r2
   15000:	mov	r8, r0
   15004:	bls	15010 <argp_failure@@Base+0x68c>
   15008:	mov	r0, r4
   1500c:	bl	167b8 <argp_error@@Base+0xbf0>
   15010:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15014:	ldr	r2, [r4, #24]
   15018:	str	r3, [r4, #12]
   1501c:	ldr	r3, [r4, #28]
   15020:	sub	r3, r3, r2
   15024:	ldr	r2, [r4, #16]
   15028:	cmp	r3, r2
   1502c:	bls	15038 <argp_failure@@Base+0x6b4>
   15030:	mov	r0, r4
   15034:	bl	167b8 <argp_error@@Base+0xbf0>
   15038:	ldr	r2, [r4, #28]
   1503c:	ldr	r3, [r4, #32]
   15040:	str	r9, [r4, #4]
   15044:	cmp	r2, r3
   15048:	bcs	15308 <argp_failure@@Base+0x984>
   1504c:	ldr	r3, [r4, #28]
   15050:	add	r2, r3, #1
   15054:	str	r2, [r4, #28]
   15058:	mov	r2, #10
   1505c:	strb	r2, [r3]
   15060:	mov	r9, #0
   15064:	cmp	r8, r9
   15068:	bne	14f04 <argp_failure@@Base+0x580>
   1506c:	mov	r5, #1
   15070:	ldr	r3, [fp, #-104]	; 0xffffff98
   15074:	tst	r3, #16
   15078:	beq	150a0 <argp_failure@@Base+0x71c>
   1507c:	mov	r3, #1
   15080:	str	r3, [sp]
   15084:	mov	r3, #0
   15088:	str	r4, [sp, #4]
   1508c:	mov	r2, r3
   15090:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15094:	ldr	r0, [fp, #-108]	; 0xffffff94
   15098:	bl	136a4 <argp_parse@@Base+0x16f8>
   1509c:	orr	r5, r5, r0
   150a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   150a4:	tst	r3, #4
   150a8:	beq	150c4 <argp_failure@@Base+0x740>
   150ac:	ldr	r3, [fp, #4]
   150b0:	ldr	r1, [pc, #2596]	; 15adc <argp_failure@@Base+0x1158>
   150b4:	mov	r2, r3
   150b8:	mov	r0, r4
   150bc:	bl	16cec <argp_error@@Base+0x1124>
   150c0:	mov	r5, #1
   150c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   150c8:	tst	r3, #8
   150cc:	beq	15224 <argp_failure@@Base+0x8a0>
   150d0:	ldr	r3, [sl, #4]
   150d4:	cmp	r3, #0
   150d8:	beq	15224 <argp_failure@@Base+0x8a0>
   150dc:	cmp	r5, #0
   150e0:	beq	15108 <argp_failure@@Base+0x784>
   150e4:	ldr	r2, [r4, #28]
   150e8:	ldr	r3, [r4, #32]
   150ec:	cmp	r2, r3
   150f0:	bcs	15320 <argp_failure@@Base+0x99c>
   150f4:	ldr	r3, [r4, #28]
   150f8:	add	r2, r3, #1
   150fc:	str	r2, [r4, #28]
   15100:	mov	r2, #10
   15104:	strb	r2, [r3]
   15108:	mov	r3, #0
   1510c:	str	r3, [fp, #-88]	; 0xffffffa8
   15110:	str	r3, [fp, #-84]	; 0xffffffac
   15114:	str	r3, [fp, #-80]	; 0xffffffb0
   15118:	ldr	r3, [sl]
   1511c:	str	r3, [fp, #-100]	; 0xffffff9c
   15120:	ldr	r3, [sl, #4]
   15124:	str	r3, [fp, #-116]	; 0xffffff8c
   15128:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1512c:	cmp	r3, #0
   15130:	bne	15338 <argp_failure@@Base+0x9b4>
   15134:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15138:	cmp	r3, #0
   1513c:	beq	15220 <argp_failure@@Base+0x89c>
   15140:	ldr	r3, [pc, #2388]	; 15a9c <argp_failure@@Base+0x1118>
   15144:	ldr	r3, [r3, #4]
   15148:	cmp	r3, #0
   1514c:	beq	15220 <argp_failure@@Base+0x89c>
   15150:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15154:	ldr	r1, [pc, #2436]	; 15ae0 <argp_failure@@Base+0x115c>
   15158:	cmp	r3, #0
   1515c:	ldr	r0, [pc, #2432]	; 15ae4 <argp_failure@@Base+0x1160>
   15160:	ldrne	r2, [r3]
   15164:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   15168:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1516c:	bl	13308 <argp_parse@@Base+0x135c>
   15170:	subs	r5, r0, #0
   15174:	beq	15220 <argp_failure@@Base+0x89c>
   15178:	ldrb	r3, [r5]
   1517c:	cmp	r3, #0
   15180:	beq	1520c <argp_failure@@Base+0x888>
   15184:	ldr	r2, [r4, #28]
   15188:	ldr	r3, [r4, #32]
   1518c:	cmp	r2, r3
   15190:	bcs	1597c <argp_failure@@Base+0xff8>
   15194:	ldr	r3, [r4, #28]
   15198:	add	r2, r3, #1
   1519c:	str	r2, [r4, #28]
   151a0:	mov	r2, #10
   151a4:	strb	r2, [r3]
   151a8:	mov	r0, r5
   151ac:	bl	112bc <strlen@plt>
   151b0:	subs	r6, r0, #0
   151b4:	beq	151e8 <argp_failure@@Base+0x864>
   151b8:	ldr	r3, [r4, #28]
   151bc:	ldr	r2, [r4, #32]
   151c0:	add	r3, r3, r6
   151c4:	cmp	r2, r3
   151c8:	bcc	15994 <argp_failure@@Base+0x1010>
   151cc:	mov	r2, r6
   151d0:	mov	r1, r5
   151d4:	ldr	r0, [r4, #28]
   151d8:	bl	11190 <memcpy@plt>
   151dc:	ldr	r3, [r4, #28]
   151e0:	add	r6, r3, r6
   151e4:	str	r6, [r4, #28]
   151e8:	ldr	r2, [r4, #28]
   151ec:	ldr	r3, [r4, #32]
   151f0:	cmp	r2, r3
   151f4:	bcs	159ac <argp_failure@@Base+0x1028>
   151f8:	ldr	r3, [r4, #28]
   151fc:	add	r2, r3, #1
   15200:	str	r2, [r4, #28]
   15204:	mov	r2, #10
   15208:	strb	r2, [r3]
   1520c:	ldr	r3, [pc, #2256]	; 15ae4 <argp_failure@@Base+0x1160>
   15210:	cmp	r5, r3
   15214:	beq	15220 <argp_failure@@Base+0x89c>
   15218:	mov	r0, r5
   1521c:	bl	12a48 <argp_parse@@Base+0xa9c>
   15220:	mov	r5, #1
   15224:	ldr	r3, [fp, #-104]	; 0xffffff98
   15228:	tst	r3, #32
   1522c:	beq	15254 <argp_failure@@Base+0x8d0>
   15230:	mov	r3, #0
   15234:	str	r3, [sp]
   15238:	str	r4, [sp, #4]
   1523c:	mov	r3, r5
   15240:	mov	r2, #1
   15244:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15248:	ldr	r0, [fp, #-108]	; 0xffffff94
   1524c:	bl	136a4 <argp_parse@@Base+0x16f8>
   15250:	orr	r5, r5, r0
   15254:	ldr	r3, [fp, #-104]	; 0xffffff98
   15258:	tst	r3, #64	; 0x40
   1525c:	beq	152b0 <argp_failure@@Base+0x92c>
   15260:	ldr	r3, [pc, #2176]	; 15ae8 <argp_failure@@Base+0x1164>
   15264:	mov	r6, r3
   15268:	ldr	r2, [r3]
   1526c:	cmp	r2, #0
   15270:	beq	152b0 <argp_failure@@Base+0x92c>
   15274:	cmp	r5, #0
   15278:	beq	152a0 <argp_failure@@Base+0x91c>
   1527c:	ldr	r2, [r4, #28]
   15280:	ldr	r3, [r4, #32]
   15284:	cmp	r2, r3
   15288:	bcs	159c4 <argp_failure@@Base+0x1040>
   1528c:	ldr	r3, [r4, #28]
   15290:	add	r2, r3, #1
   15294:	str	r2, [r4, #28]
   15298:	mov	r2, #10
   1529c:	strb	r2, [r3]
   152a0:	ldr	r2, [r6]
   152a4:	ldr	r1, [pc, #2112]	; 15aec <argp_failure@@Base+0x1168>
   152a8:	mov	r0, r4
   152ac:	bl	16cec <argp_error@@Base+0x1124>
   152b0:	ldr	r0, [fp, #-112]	; 0xffffff90
   152b4:	bl	11208 <funlockfile@plt>
   152b8:	cmp	sl, #0
   152bc:	beq	152c8 <argp_failure@@Base+0x944>
   152c0:	mov	r0, sl
   152c4:	bl	131dc <argp_parse@@Base+0x1230>
   152c8:	mov	r0, r4
   152cc:	bl	16bc8 <argp_error@@Base+0x1000>
   152d0:	b	14b70 <argp_failure@@Base+0x1ec>
   152d4:	mov	r1, #12
   152d8:	mov	r0, r4
   152dc:	bl	16c08 <argp_error@@Base+0x1040>
   152e0:	cmp	r0, #0
   152e4:	bne	14fac <argp_failure@@Base+0x628>
   152e8:	b	14fd4 <argp_failure@@Base+0x650>
   152ec:	mov	r1, r4
   152f0:	mov	r0, sl
   152f4:	bl	13e50 <argp_parse@@Base+0x1ea4>
   152f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   152fc:	orr	r3, r3, #2
   15300:	str	r3, [fp, #-104]	; 0xffffff98
   15304:	b	14fd4 <argp_failure@@Base+0x650>
   15308:	mov	r1, #1
   1530c:	mov	r0, r4
   15310:	bl	16c08 <argp_error@@Base+0x1040>
   15314:	cmp	r0, #0
   15318:	bne	1504c <argp_failure@@Base+0x6c8>
   1531c:	b	15060 <argp_failure@@Base+0x6dc>
   15320:	mov	r1, #1
   15324:	mov	r0, r4
   15328:	bl	16c08 <argp_error@@Base+0x1040>
   1532c:	cmp	r0, #0
   15330:	bne	150f4 <argp_failure@@Base+0x770>
   15334:	b	15108 <argp_failure@@Base+0x784>
   15338:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1533c:	ldr	r2, [r4, #24]
   15340:	ldr	r5, [r3]
   15344:	ldr	r9, [r3, #8]
   15348:	ldr	r3, [r4, #28]
   1534c:	sub	r3, r3, r2
   15350:	ldr	r2, [r4, #16]
   15354:	cmp	r3, r2
   15358:	bls	15364 <argp_failure@@Base+0x9e0>
   1535c:	mov	r0, r4
   15360:	bl	167b8 <argp_error@@Base+0xbf0>
   15364:	ldr	r2, [r4, #12]
   15368:	ldr	r3, [r4, #4]
   1536c:	str	r2, [fp, #-128]	; 0xffffff80
   15370:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15374:	str	r3, [fp, #-124]	; 0xffffff84
   15378:	mov	r3, #0
   1537c:	str	r3, [r4, #4]
   15380:	str	r2, [fp, #-76]	; 0xffffffb4
   15384:	sub	r2, fp, #88	; 0x58
   15388:	str	r2, [fp, #-68]	; 0xffffffbc
   1538c:	mov	r2, #1
   15390:	str	r2, [fp, #-64]	; 0xffffffc0
   15394:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15398:	str	r4, [fp, #-72]	; 0xffffffb8
   1539c:	str	r2, [fp, #-60]	; 0xffffffc4
   153a0:	ldr	r2, [r5, #12]
   153a4:	ands	r2, r2, #8
   153a8:	str	r2, [fp, #-120]	; 0xffffff88
   153ac:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   153b0:	ldreq	r2, [r3, #4]
   153b4:	addeq	r3, r5, #24
   153b8:	beq	153e4 <argp_failure@@Base+0xa60>
   153bc:	str	r3, [fp, #-120]	; 0xffffff88
   153c0:	b	153ec <argp_failure@@Base+0xa68>
   153c4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   153c8:	cmp	r1, #0
   153cc:	beq	153dc <argp_failure@@Base+0xa58>
   153d0:	ldr	r1, [r3, #-12]
   153d4:	tst	r1, #2
   153d8:	beq	15574 <argp_failure@@Base+0xbf0>
   153dc:	sub	r2, r2, #1
   153e0:	add	r3, r3, #24
   153e4:	cmp	r2, #0
   153e8:	bne	153c4 <argp_failure@@Base+0xa40>
   153ec:	ldr	r3, [pc, #1704]	; 15a9c <argp_failure@@Base+0x1118>
   153f0:	ldr	r2, [r4, #24]
   153f4:	ldr	r6, [r3, #8]
   153f8:	ldr	r3, [r4, #28]
   153fc:	sub	r3, r3, r2
   15400:	ldr	r2, [r4, #16]
   15404:	cmp	r3, r2
   15408:	bls	15414 <argp_failure@@Base+0xa90>
   1540c:	mov	r0, r4
   15410:	bl	167b8 <argp_error@@Base+0xbf0>
   15414:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15418:	str	r6, [r4, #12]
   1541c:	ldr	r7, [pc, #1656]	; 15a9c <argp_failure@@Base+0x1118>
   15420:	ldr	r8, [r3, #4]
   15424:	mov	r6, r5
   15428:	cmp	r8, #0
   1542c:	bne	1557c <argp_failure@@Base+0xbf8>
   15430:	ldr	r3, [r5, #12]
   15434:	ldr	r1, [pc, #1632]	; 15a9c <argp_failure@@Base+0x1118>
   15438:	tst	r3, #8
   1543c:	ldr	r2, [r4, #24]
   15440:	ldr	r3, [r4, #28]
   15444:	beq	156a8 <argp_failure@@Base+0xd24>
   15448:	sub	r3, r3, r2
   1544c:	ldr	r2, [r4, #16]
   15450:	ldr	r6, [r1, #16]
   15454:	cmp	r3, r2
   15458:	bls	15464 <argp_failure@@Base+0xae0>
   1545c:	mov	r0, r4
   15460:	bl	167b8 <argp_error@@Base+0xbf0>
   15464:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15468:	str	r6, [r4, #12]
   1546c:	add	r6, r5, #24
   15470:	ldr	r7, [r3, #4]
   15474:	cmp	r7, #0
   15478:	bne	15618 <argp_failure@@Base+0xc94>
   1547c:	ldr	r2, [r4, #24]
   15480:	ldr	r3, [r4, #28]
   15484:	sub	r3, r3, r2
   15488:	ldr	r2, [r4, #16]
   1548c:	cmp	r3, r2
   15490:	bls	1549c <argp_failure@@Base+0xb18>
   15494:	mov	r0, r4
   15498:	bl	167b8 <argp_error@@Base+0xbf0>
   1549c:	mov	r3, #0
   154a0:	str	r3, [r4, #4]
   154a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   154a8:	cmp	r3, #0
   154ac:	beq	15748 <argp_failure@@Base+0xdc4>
   154b0:	ldr	r3, [r5, #12]
   154b4:	tst	r3, #8
   154b8:	bne	154e4 <argp_failure@@Base+0xb60>
   154bc:	ldr	r6, [r5, #4]
   154c0:	sub	r3, r6, #1
   154c4:	cmp	r3, #254	; 0xfe
   154c8:	bhi	154e4 <argp_failure@@Base+0xb60>
   154cc:	bl	11298 <__ctype_b_loc@plt>
   154d0:	lsl	r6, r6, #1
   154d4:	ldr	r3, [r0]
   154d8:	ldrh	r3, [r3, r6]
   154dc:	tst	r3, #16384	; 0x4000
   154e0:	bne	1550c <argp_failure@@Base+0xb88>
   154e4:	ldr	r3, [r5]
   154e8:	cmp	r3, #0
   154ec:	bne	1550c <argp_failure@@Base+0xb88>
   154f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154f4:	sub	r2, fp, #76	; 0x4c
   154f8:	ldr	r0, [r5, #16]
   154fc:	ldr	r1, [r3, #20]
   15500:	bl	1334c <argp_parse@@Base+0x13a0>
   15504:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15508:	str	r3, [fp, #-88]	; 0xffffffa8
   1550c:	ldr	r2, [r4, #24]
   15510:	ldr	r3, [r4, #28]
   15514:	sub	r3, r3, r2
   15518:	ldr	r2, [r4, #16]
   1551c:	cmp	r3, r2
   15520:	bls	1552c <argp_failure@@Base+0xba8>
   15524:	mov	r0, r4
   15528:	bl	167b8 <argp_error@@Base+0xbf0>
   1552c:	ldr	r3, [fp, #-124]	; 0xffffff84
   15530:	ldr	r2, [r4, #24]
   15534:	str	r3, [r4, #4]
   15538:	ldr	r3, [r4, #28]
   1553c:	sub	r3, r3, r2
   15540:	ldr	r2, [r4, #16]
   15544:	cmp	r3, r2
   15548:	bls	15554 <argp_failure@@Base+0xbd0>
   1554c:	mov	r0, r4
   15550:	bl	167b8 <argp_error@@Base+0xbf0>
   15554:	ldr	r3, [fp, #-128]	; 0xffffff80
   15558:	str	r3, [r4, #12]
   1555c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15560:	add	r3, r3, #28
   15564:	str	r3, [fp, #-100]	; 0xffffff9c
   15568:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1556c:	sub	r3, r3, #1
   15570:	b	15124 <argp_failure@@Base+0x7a0>
   15574:	mov	r3, #1
   15578:	b	153bc <argp_failure@@Base+0xa38>
   1557c:	ldr	r2, [r6, #12]
   15580:	tst	r2, #8
   15584:	str	r2, [fp, #-136]	; 0xffffff78
   15588:	bne	155c0 <argp_failure@@Base+0xc3c>
   1558c:	ldr	r3, [r6, #4]
   15590:	sub	r1, r3, #1
   15594:	cmp	r1, #254	; 0xfe
   15598:	str	r3, [fp, #-132]	; 0xffffff7c
   1559c:	bhi	155c0 <argp_failure@@Base+0xc3c>
   155a0:	bl	11298 <__ctype_b_loc@plt>
   155a4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   155a8:	ldr	r2, [fp, #-136]	; 0xffffff78
   155ac:	lsl	r1, r3, #1
   155b0:	ldr	r0, [r0]
   155b4:	ldrh	r1, [r0, r1]
   155b8:	tst	r1, #16384	; 0x4000
   155bc:	bne	159f0 <argp_failure@@Base+0x106c>
   155c0:	add	r6, r6, #24
   155c4:	sub	r8, r8, #1
   155c8:	b	15428 <argp_failure@@Base+0xaa4>
   155cc:	mov	r1, #1
   155d0:	mov	r0, r4
   155d4:	bl	16c08 <argp_error@@Base+0x1040>
   155d8:	cmp	r0, #0
   155dc:	bne	15a20 <argp_failure@@Base+0x109c>
   155e0:	b	15a34 <argp_failure@@Base+0x10b0>
   155e4:	mov	r1, #1
   155e8:	mov	r0, r4
   155ec:	str	r2, [fp, #-132]	; 0xffffff7c
   155f0:	bl	16c08 <argp_error@@Base+0x1040>
   155f4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   155f8:	cmp	r0, #0
   155fc:	bne	15a48 <argp_failure@@Base+0x10c4>
   15600:	b	15a58 <argp_failure@@Base+0x10d4>
   15604:	ldr	r3, [r5, #8]
   15608:	cmp	r3, #0
   1560c:	movne	r3, #1
   15610:	strne	r3, [fp, #-80]	; 0xffffffb0
   15614:	b	15a94 <argp_failure@@Base+0x1110>
   15618:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1561c:	cmp	r3, #0
   15620:	beq	15684 <argp_failure@@Base+0xd00>
   15624:	ldr	r3, [r6, #-12]
   15628:	tst	r3, #2
   1562c:	bne	15684 <argp_failure@@Base+0xd00>
   15630:	ldr	r3, [pc, #1124]	; 15a9c <argp_failure@@Base+0x1118>
   15634:	sub	r1, fp, #76	; 0x4c
   15638:	ldr	r0, [r3, #16]
   1563c:	bl	13524 <argp_parse@@Base+0x1578>
   15640:	ldr	r8, [r6, #-24]	; 0xffffffe8
   15644:	mov	r0, r8
   15648:	bl	112bc <strlen@plt>
   1564c:	subs	r9, r0, #0
   15650:	beq	15684 <argp_failure@@Base+0xd00>
   15654:	ldr	r3, [r4, #28]
   15658:	ldr	r2, [r4, #32]
   1565c:	add	r3, r3, r9
   15660:	cmp	r2, r3
   15664:	bcc	15690 <argp_failure@@Base+0xd0c>
   15668:	mov	r2, r9
   1566c:	mov	r1, r8
   15670:	ldr	r0, [r4, #28]
   15674:	bl	11190 <memcpy@plt>
   15678:	ldr	r3, [r4, #28]
   1567c:	add	r9, r3, r9
   15680:	str	r9, [r4, #28]
   15684:	sub	r7, r7, #1
   15688:	add	r6, r6, #24
   1568c:	b	15474 <argp_failure@@Base+0xaf0>
   15690:	mov	r1, r9
   15694:	mov	r0, r4
   15698:	bl	16c08 <argp_error@@Base+0x1040>
   1569c:	cmp	r0, #0
   156a0:	bne	15668 <argp_failure@@Base+0xce4>
   156a4:	b	15684 <argp_failure@@Base+0xd00>
   156a8:	sub	r3, r3, r2
   156ac:	ldr	r2, [r4, #16]
   156b0:	ldr	r6, [r1, #12]
   156b4:	cmp	r3, r2
   156b8:	bls	156c4 <argp_failure@@Base+0xd40>
   156bc:	mov	r0, r4
   156c0:	bl	167b8 <argp_error@@Base+0xbf0>
   156c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   156c8:	str	r6, [r4, #12]
   156cc:	ldr	r7, [pc, #968]	; 15a9c <argp_failure@@Base+0x1118>
   156d0:	ldr	r6, [r3, #4]
   156d4:	ldr	r8, [pc, #1044]	; 15af0 <argp_failure@@Base+0x116c>
   156d8:	add	r9, r5, #24
   156dc:	cmp	r6, #0
   156e0:	beq	1547c <argp_failure@@Base+0xaf8>
   156e4:	ldr	r3, [r9, #-24]	; 0xffffffe8
   156e8:	cmp	r3, #0
   156ec:	beq	1573c <argp_failure@@Base+0xdb8>
   156f0:	ldr	r3, [r9, #-12]
   156f4:	tst	r3, #2
   156f8:	bne	1573c <argp_failure@@Base+0xdb8>
   156fc:	sub	r1, fp, #76	; 0x4c
   15700:	ldr	r0, [r7, #12]
   15704:	bl	13524 <argp_parse@@Base+0x1578>
   15708:	ldr	r2, [r9, #-24]	; 0xffffffe8
   1570c:	mov	r1, r8
   15710:	mov	r0, r4
   15714:	bl	16cec <argp_error@@Base+0x1124>
   15718:	ldr	r2, [r5, #8]
   1571c:	cmp	r2, #0
   15720:	beq	1573c <argp_failure@@Base+0xdb8>
   15724:	ldr	r3, [r5, #12]
   15728:	mov	r0, r4
   1572c:	tst	r3, #1
   15730:	ldrne	r1, [pc, #956]	; 15af4 <argp_failure@@Base+0x1170>
   15734:	ldreq	r1, [pc, #956]	; 15af8 <argp_failure@@Base+0x1174>
   15738:	bl	16cec <argp_error@@Base+0x1124>
   1573c:	sub	r6, r6, #1
   15740:	add	r9, r9, #24
   15744:	b	156dc <argp_failure@@Base+0xd58>
   15748:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1574c:	ldr	r6, [r5, #16]
   15750:	ldr	r1, [r5, #4]
   15754:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15758:	ldr	r2, [r2, #20]
   1575c:	mov	r0, r6
   15760:	bl	13308 <argp_parse@@Base+0x135c>
   15764:	subs	r5, r0, #0
   15768:	beq	1587c <argp_failure@@Base+0xef8>
   1576c:	ldrb	r3, [r5]
   15770:	cmp	r3, #0
   15774:	beq	1586c <argp_failure@@Base+0xee8>
   15778:	ldr	r2, [r4, #24]
   1577c:	ldr	r3, [r4, #28]
   15780:	sub	r3, r3, r2
   15784:	ldr	r2, [r4, #16]
   15788:	cmp	r3, r2
   1578c:	bls	15798 <argp_failure@@Base+0xe14>
   15790:	mov	r0, r4
   15794:	bl	167b8 <argp_error@@Base+0xbf0>
   15798:	ldr	r2, [r4, #24]
   1579c:	ldr	r3, [r4, #28]
   157a0:	ldr	r7, [r4, #20]
   157a4:	sub	r3, r3, r2
   157a8:	ldr	r8, [pc, #748]	; 15a9c <argp_failure@@Base+0x1118>
   157ac:	ldr	r2, [r4, #16]
   157b0:	bic	r7, r7, r7, asr #31
   157b4:	cmp	r3, r2
   157b8:	ldr	r9, [r8, #20]
   157bc:	bls	157c8 <argp_failure@@Base+0xe44>
   157c0:	mov	r0, r4
   157c4:	bl	167b8 <argp_error@@Base+0xbf0>
   157c8:	ldr	r2, [r4, #24]
   157cc:	ldr	r3, [r4, #28]
   157d0:	str	r9, [r4, #4]
   157d4:	sub	r3, r3, r2
   157d8:	ldr	r2, [r4, #16]
   157dc:	ldr	r8, [r8, #20]
   157e0:	cmp	r3, r2
   157e4:	bls	157f0 <argp_failure@@Base+0xe6c>
   157e8:	mov	r0, r4
   157ec:	bl	167b8 <argp_error@@Base+0xbf0>
   157f0:	ldr	r3, [pc, #676]	; 15a9c <argp_failure@@Base+0x1118>
   157f4:	str	r8, [r4, #12]
   157f8:	ldr	r1, [r3, #20]
   157fc:	add	r3, r1, #3
   15800:	cmp	r7, r3
   15804:	bls	158e4 <argp_failure@@Base+0xf60>
   15808:	ldr	r2, [r4, #28]
   1580c:	ldr	r3, [r4, #32]
   15810:	cmp	r2, r3
   15814:	bcs	158cc <argp_failure@@Base+0xf48>
   15818:	ldr	r3, [r4, #28]
   1581c:	add	r2, r3, #1
   15820:	str	r2, [r4, #28]
   15824:	mov	r2, #10
   15828:	strb	r2, [r3]
   1582c:	mov	r0, r5
   15830:	bl	112bc <strlen@plt>
   15834:	subs	r7, r0, #0
   15838:	beq	1586c <argp_failure@@Base+0xee8>
   1583c:	ldr	r3, [r4, #28]
   15840:	ldr	r2, [r4, #32]
   15844:	add	r3, r3, r7
   15848:	cmp	r2, r3
   1584c:	bcc	1594c <argp_failure@@Base+0xfc8>
   15850:	mov	r2, r7
   15854:	mov	r1, r5
   15858:	ldr	r0, [r4, #28]
   1585c:	bl	11190 <memcpy@plt>
   15860:	ldr	r3, [r4, #28]
   15864:	add	r7, r3, r7
   15868:	str	r7, [r4, #28]
   1586c:	cmp	r6, r5
   15870:	beq	1587c <argp_failure@@Base+0xef8>
   15874:	mov	r0, r5
   15878:	bl	12a48 <argp_parse@@Base+0xa9c>
   1587c:	ldr	r2, [r4, #24]
   15880:	ldr	r3, [r4, #28]
   15884:	sub	r3, r3, r2
   15888:	ldr	r2, [r4, #16]
   1588c:	cmp	r3, r2
   15890:	bls	1589c <argp_failure@@Base+0xf18>
   15894:	mov	r0, r4
   15898:	bl	167b8 <argp_error@@Base+0xbf0>
   1589c:	mov	r3, #0
   158a0:	str	r3, [r4, #4]
   158a4:	ldr	r2, [r4, #28]
   158a8:	ldr	r3, [r4, #32]
   158ac:	cmp	r2, r3
   158b0:	bcs	15964 <argp_failure@@Base+0xfe0>
   158b4:	ldr	r3, [r4, #28]
   158b8:	add	r2, r3, #1
   158bc:	str	r2, [r4, #28]
   158c0:	mov	r2, #10
   158c4:	strb	r2, [r3]
   158c8:	b	15504 <argp_failure@@Base+0xb80>
   158cc:	mov	r1, #1
   158d0:	mov	r0, r4
   158d4:	bl	16c08 <argp_error@@Base+0x1040>
   158d8:	cmp	r0, #0
   158dc:	bne	15818 <argp_failure@@Base+0xe94>
   158e0:	b	1582c <argp_failure@@Base+0xea8>
   158e4:	cmp	r7, r1
   158e8:	bcc	15940 <argp_failure@@Base+0xfbc>
   158ec:	ldr	r3, [r4, #28]
   158f0:	ldr	r2, [r4, #32]
   158f4:	add	r3, r3, #3
   158f8:	cmp	r2, r3
   158fc:	bcc	15928 <argp_failure@@Base+0xfa4>
   15900:	ldr	r2, [pc, #500]	; 15afc <argp_failure@@Base+0x1178>
   15904:	ldr	r3, [r4, #28]
   15908:	ldrh	r1, [r2]
   1590c:	ldrb	r2, [r2, #2]
   15910:	strh	r1, [r3]
   15914:	strb	r2, [r3, #2]
   15918:	ldr	r3, [r4, #28]
   1591c:	add	r3, r3, #3
   15920:	str	r3, [r4, #28]
   15924:	b	1582c <argp_failure@@Base+0xea8>
   15928:	mov	r1, #3
   1592c:	mov	r0, r4
   15930:	bl	16c08 <argp_error@@Base+0x1040>
   15934:	cmp	r0, #0
   15938:	bne	15900 <argp_failure@@Base+0xf7c>
   1593c:	b	1582c <argp_failure@@Base+0xea8>
   15940:	mov	r0, r4
   15944:	bl	13280 <argp_parse@@Base+0x12d4>
   15948:	b	1582c <argp_failure@@Base+0xea8>
   1594c:	mov	r1, r7
   15950:	mov	r0, r4
   15954:	bl	16c08 <argp_error@@Base+0x1040>
   15958:	cmp	r0, #0
   1595c:	bne	15850 <argp_failure@@Base+0xecc>
   15960:	b	1586c <argp_failure@@Base+0xee8>
   15964:	mov	r1, #1
   15968:	mov	r0, r4
   1596c:	bl	16c08 <argp_error@@Base+0x1040>
   15970:	cmp	r0, #0
   15974:	bne	158b4 <argp_failure@@Base+0xf30>
   15978:	b	15504 <argp_failure@@Base+0xb80>
   1597c:	mov	r1, #1
   15980:	mov	r0, r4
   15984:	bl	16c08 <argp_error@@Base+0x1040>
   15988:	cmp	r0, #0
   1598c:	bne	15194 <argp_failure@@Base+0x810>
   15990:	b	151a8 <argp_failure@@Base+0x824>
   15994:	mov	r1, r6
   15998:	mov	r0, r4
   1599c:	bl	16c08 <argp_error@@Base+0x1040>
   159a0:	cmp	r0, #0
   159a4:	bne	151cc <argp_failure@@Base+0x848>
   159a8:	b	151e8 <argp_failure@@Base+0x864>
   159ac:	mov	r1, #1
   159b0:	mov	r0, r4
   159b4:	bl	16c08 <argp_error@@Base+0x1040>
   159b8:	cmp	r0, #0
   159bc:	bne	151f8 <argp_failure@@Base+0x874>
   159c0:	b	1520c <argp_failure@@Base+0x888>
   159c4:	mov	r1, #1
   159c8:	mov	r0, r4
   159cc:	bl	16c08 <argp_error@@Base+0x1040>
   159d0:	cmp	r0, #0
   159d4:	bne	1528c <argp_failure@@Base+0x908>
   159d8:	b	152a0 <argp_failure@@Base+0x91c>
   159dc:	cmp	r0, #110	; 0x6e
   159e0:	beq	14cfc <argp_failure@@Base+0x378>
   159e4:	mov	sl, r5
   159e8:	mov	r7, r5
   159ec:	b	14d28 <argp_failure@@Base+0x3a4>
   159f0:	ldrb	r1, [r9]
   159f4:	cmp	r3, r1
   159f8:	bne	155c0 <argp_failure@@Base+0xc3c>
   159fc:	tst	r2, #2
   15a00:	bne	15a94 <argp_failure@@Base+0x1110>
   15a04:	sub	r1, fp, #76	; 0x4c
   15a08:	ldr	r0, [r7, #8]
   15a0c:	bl	13524 <argp_parse@@Base+0x1578>
   15a10:	ldr	r2, [r4, #28]
   15a14:	ldr	r3, [r4, #32]
   15a18:	cmp	r2, r3
   15a1c:	bcs	155cc <argp_failure@@Base+0xc48>
   15a20:	ldr	r3, [r4, #28]
   15a24:	add	r2, r3, #1
   15a28:	str	r2, [r4, #28]
   15a2c:	mov	r2, #45	; 0x2d
   15a30:	strb	r2, [r3]
   15a34:	ldr	r1, [r4, #28]
   15a38:	ldr	r3, [r4, #32]
   15a3c:	ldrb	r2, [r9]
   15a40:	cmp	r1, r3
   15a44:	bcs	155e4 <argp_failure@@Base+0xc60>
   15a48:	ldr	r3, [r4, #28]
   15a4c:	add	r1, r3, #1
   15a50:	str	r1, [r4, #28]
   15a54:	strb	r2, [r3]
   15a58:	ldr	r3, [fp, #-120]	; 0xffffff88
   15a5c:	cmp	r3, #0
   15a60:	beq	15a70 <argp_failure@@Base+0x10ec>
   15a64:	ldr	r3, [r7]
   15a68:	cmp	r3, #0
   15a6c:	beq	15604 <argp_failure@@Base+0xc80>
   15a70:	ldr	r2, [r5, #8]
   15a74:	cmp	r2, #0
   15a78:	beq	15a94 <argp_failure@@Base+0x1110>
   15a7c:	ldr	r3, [r5, #12]
   15a80:	mov	r0, r4
   15a84:	tst	r3, #1
   15a88:	ldrne	r1, [pc, #112]	; 15b00 <argp_failure@@Base+0x117c>
   15a8c:	ldreq	r1, [pc, #112]	; 15b04 <argp_failure@@Base+0x1180>
   15a90:	bl	16cec <argp_error@@Base+0x1124>
   15a94:	add	r9, r9, #1
   15a98:	b	155c0 <argp_failure@@Base+0xc3c>
   15a9c:	andeq	r8, r2, ip, lsl #3
   15aa0:	muleq	r1, r9, r6
   15aa4:	strdeq	r7, [r1], -ip
   15aa8:	andeq	r7, r1, r1, lsr #10
   15aac:	andeq	r7, r1, sp, asr #14
   15ab0:	andeq	r7, r1, r9, lsl r7
   15ab4:	andeq	r7, r1, r7, lsr #13
   15ab8:			; <UNDEFINED> instruction: 0x000175b1
   15abc:	ldrdeq	r7, [r1], -r6
   15ac0:	andeq	r7, r1, r7, ror #1
   15ac4:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   15ac8:	ldrdeq	r4, [r1], -ip
   15acc:	andeq	r7, r1, r9, ror #14
   15ad0:	andeq	r7, r1, r5, asr r7
   15ad4:	andeq	r7, r1, r2, ror #14
   15ad8:	andeq	r7, r1, ip, asr r7
   15adc:	andeq	r7, r1, r6, ror r7
   15ae0:	andeq	r0, r0, #5
   15ae4:	andeq	r7, r1, r1, asr #15
   15ae8:			; <UNDEFINED> instruction: 0x000282b0
   15aec:	andeq	r7, r1, r5, lsr r8
   15af0:			; <UNDEFINED> instruction: 0x000177b2
   15af4:			; <UNDEFINED> instruction: 0x000177b7
   15af8:	muleq	r1, r1, lr
   15afc:			; <UNDEFINED> instruction: 0x000177bd
   15b00:	andeq	r7, r1, sp, lsr #15
   15b04:	andeq	r7, r1, r5, lsl r7

00015b08 <argp_help@@Base>:
   15b08:	push	{r0, r1, r2, lr}
   15b0c:	str	r3, [sp]
   15b10:	mov	r3, r2
   15b14:	mov	r2, r1
   15b18:	mov	r1, #0
   15b1c:	bl	14ad4 <argp_failure@@Base+0x150>
   15b20:	add	sp, sp, #12
   15b24:	pop	{pc}		; (ldr pc, [sp], #4)

00015b28 <argp_state_help@@Base>:
   15b28:	push	{r0, r1, r2, r4, r5, lr}
   15b2c:	subs	r4, r0, #0
   15b30:	mov	r5, r2
   15b34:	beq	15b4c <argp_state_help@@Base+0x24>
   15b38:	ldr	r3, [r4, #16]
   15b3c:	tst	r3, #2
   15b40:	beq	15b64 <argp_state_help@@Base+0x3c>
   15b44:	add	sp, sp, #12
   15b48:	pop	{r4, r5, pc}
   15b4c:	cmp	r1, #0
   15b50:	beq	15b44 <argp_state_help@@Base+0x1c>
   15b54:	ldr	r3, [pc, #100]	; 15bc0 <argp_state_help@@Base+0x98>
   15b58:	mov	r0, r4
   15b5c:	ldr	r3, [r3]
   15b60:	b	15b7c <argp_state_help@@Base+0x54>
   15b64:	cmp	r1, #0
   15b68:	beq	15b44 <argp_state_help@@Base+0x1c>
   15b6c:	tst	r3, #64	; 0x40
   15b70:	ldr	r0, [r4]
   15b74:	ldr	r3, [r4, #40]	; 0x28
   15b78:	orrne	r5, r5, #128	; 0x80
   15b7c:	str	r3, [sp]
   15b80:	mov	r2, r1
   15b84:	mov	r3, r5
   15b88:	mov	r1, r4
   15b8c:	bl	14ad4 <argp_failure@@Base+0x150>
   15b90:	cmp	r4, #0
   15b94:	beq	15ba4 <argp_state_help@@Base+0x7c>
   15b98:	ldr	r3, [r4, #16]
   15b9c:	tst	r3, #32
   15ba0:	bne	15b44 <argp_state_help@@Base+0x1c>
   15ba4:	ands	r0, r5, #256	; 0x100
   15ba8:	ldrne	r3, [pc, #20]	; 15bc4 <argp_state_help@@Base+0x9c>
   15bac:	ldrne	r0, [r3]
   15bb0:	bne	15bbc <argp_state_help@@Base+0x94>
   15bb4:	tst	r5, #512	; 0x200
   15bb8:	beq	15b44 <argp_state_help@@Base+0x1c>
   15bbc:	bl	112b0 <exit@plt>
   15bc0:	andeq	r8, r2, r8, asr #3
   15bc4:	andeq	r8, r2, r0, asr #3

00015bc8 <argp_error@@Base>:
   15bc8:	push	{r1, r2, r3}
   15bcc:	push	{r0, r1, r4, r5, lr}
   15bd0:	subs	r5, r0, #0
   15bd4:	beq	15c00 <argp_error@@Base+0x38>
   15bd8:	ldr	r3, [r5, #16]
   15bdc:	tst	r3, #2
   15be0:	bne	15bf0 <argp_error@@Base+0x28>
   15be4:	ldr	r4, [r5, #44]	; 0x2c
   15be8:	cmp	r4, #0
   15bec:	bne	15c2c <argp_error@@Base+0x64>
   15bf0:	add	sp, sp, #8
   15bf4:	pop	{r4, r5, lr}
   15bf8:	add	sp, sp, #12
   15bfc:	bx	lr
   15c00:	ldr	r3, [pc, #144]	; 15c98 <argp_error@@Base+0xd0>
   15c04:	ldr	r4, [r3]
   15c08:	cmp	r4, #0
   15c0c:	beq	15bf0 <argp_error@@Base+0x28>
   15c10:	mov	r0, r4
   15c14:	bl	113ac <flockfile@plt>
   15c18:	add	r3, sp, #24
   15c1c:	str	r3, [sp, #4]
   15c20:	ldr	r3, [pc, #116]	; 15c9c <argp_error@@Base+0xd4>
   15c24:	ldr	r0, [r3]
   15c28:	b	15c40 <argp_error@@Base+0x78>
   15c2c:	mov	r0, r4
   15c30:	bl	113ac <flockfile@plt>
   15c34:	ldr	r0, [r5, #40]	; 0x28
   15c38:	add	r3, sp, #24
   15c3c:	str	r3, [sp, #4]
   15c40:	mov	r1, r4
   15c44:	bl	1110c <fputs_unlocked@plt>
   15c48:	mov	r1, r4
   15c4c:	mov	r0, #58	; 0x3a
   15c50:	bl	11430 <putc_unlocked@plt>
   15c54:	mov	r1, r4
   15c58:	mov	r0, #32
   15c5c:	bl	11430 <putc_unlocked@plt>
   15c60:	ldr	r2, [sp, #4]
   15c64:	ldr	r1, [sp, #20]
   15c68:	mov	r0, r4
   15c6c:	bl	11370 <vfprintf@plt>
   15c70:	mov	r1, r4
   15c74:	mov	r0, #10
   15c78:	bl	11430 <putc_unlocked@plt>
   15c7c:	mov	r0, r5
   15c80:	mov	r2, #260	; 0x104
   15c84:	mov	r1, r4
   15c88:	bl	15b28 <argp_state_help@@Base>
   15c8c:	mov	r0, r4
   15c90:	bl	11208 <funlockfile@plt>
   15c94:	b	15bf0 <argp_error@@Base+0x28>
   15c98:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   15c9c:	andeq	r8, r2, r8, asr #3
   15ca0:	ldr	r3, [r1, #32]
   15ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ca8:	ldr	r7, [r1, #28]
   15cac:	ldr	r6, [r1]
   15cb0:	add	r8, r0, r3, lsl #2
   15cb4:	mov	lr, r6
   15cb8:	mov	r4, r7
   15cbc:	cmp	lr, r3
   15cc0:	movle	r2, #0
   15cc4:	movgt	r2, #1
   15cc8:	cmp	r4, r3
   15ccc:	movge	r2, #0
   15cd0:	cmp	r2, #0
   15cd4:	bne	15cec <argp_error@@Base+0x124>
   15cd8:	sub	r3, r6, r3
   15cdc:	add	r3, r3, r7
   15ce0:	str	r3, [r1, #28]
   15ce4:	str	r6, [r1, #32]
   15ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cec:	sub	r2, r3, r4
   15cf0:	sub	r5, lr, r3
   15cf4:	cmp	r5, r2
   15cf8:	lsl	ip, r4, #2
   15cfc:	addle	r2, r0, ip
   15d00:	movle	r9, r8
   15d04:	movle	ip, #0
   15d08:	ble	15d3c <argp_error@@Base+0x174>
   15d0c:	sub	r2, lr, r2
   15d10:	add	ip, r0, ip
   15d14:	add	r5, r0, r2, lsl #2
   15d18:	add	lr, r0, lr, lsl #2
   15d1c:	ldr	r9, [ip]
   15d20:	ldr	sl, [r5]
   15d24:	str	sl, [ip], #4
   15d28:	str	r9, [r5], #4
   15d2c:	cmp	lr, r5
   15d30:	bne	15d1c <argp_error@@Base+0x154>
   15d34:	mov	lr, r2
   15d38:	b	15cbc <argp_error@@Base+0xf4>
   15d3c:	ldr	sl, [r2]
   15d40:	ldr	fp, [r9]
   15d44:	add	ip, ip, #1
   15d48:	cmp	r5, ip
   15d4c:	str	fp, [r2], #4
   15d50:	str	sl, [r9], #4
   15d54:	bgt	15d3c <argp_error@@Base+0x174>
   15d58:	add	r4, r4, r5
   15d5c:	mov	r2, lr
   15d60:	b	15d34 <argp_error@@Base+0x16c>
   15d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d68:	sub	sp, sp, #44	; 0x2c
   15d6c:	mov	sl, r1
   15d70:	ldr	r4, [sp, #88]	; 0x58
   15d74:	str	r0, [sp, #36]	; 0x24
   15d78:	str	r2, [sp, #32]
   15d7c:	ldr	r8, [r4, #20]
   15d80:	str	r3, [sp, #20]
   15d84:	mov	r9, r8
   15d88:	mov	r3, r9
   15d8c:	ldrb	r6, [r3], #1
   15d90:	cmp	r6, #0
   15d94:	cmpne	r6, #61	; 0x3d
   15d98:	movne	r6, #1
   15d9c:	moveq	r6, #0
   15da0:	bne	15e68 <argp_error@@Base+0x2a0>
   15da4:	sub	r3, r9, r8
   15da8:	str	r3, [sp, #24]
   15dac:	ldr	r3, [sp, #20]
   15db0:	add	r7, r3, r6, lsl #4
   15db4:	ldr	r5, [r3, r6, lsl #4]
   15db8:	cmp	r5, #0
   15dbc:	bne	15e70 <argp_error@@Base+0x2a8>
   15dc0:	mov	r8, r5
   15dc4:	mov	r7, r5
   15dc8:	mov	fp, r3
   15dcc:	mvn	r3, #0
   15dd0:	str	r3, [sp, #16]
   15dd4:	str	r5, [sp, #28]
   15dd8:	str	r5, [sp, #12]
   15ddc:	ldr	r0, [fp]
   15de0:	cmp	r0, #0
   15de4:	bne	15ea4 <argp_error@@Base+0x2dc>
   15de8:	cmp	r5, #0
   15dec:	cmpeq	r8, #0
   15df0:	beq	15fdc <argp_error@@Base+0x414>
   15df4:	ldr	r3, [sp, #92]	; 0x5c
   15df8:	cmp	r3, #0
   15dfc:	beq	15e28 <argp_error@@Base+0x260>
   15e00:	cmp	r5, #0
   15e04:	ldr	r7, [pc, #908]	; 16198 <argp_error@@Base+0x5d0>
   15e08:	beq	15f68 <argp_error@@Base+0x3a0>
   15e0c:	ldr	r3, [r4, #20]
   15e10:	ldr	r2, [sl]
   15e14:	str	r3, [sp]
   15e18:	ldr	r1, [pc, #892]	; 1619c <argp_error@@Base+0x5d4>
   15e1c:	ldr	r3, [sp, #96]	; 0x60
   15e20:	ldr	r0, [r7]
   15e24:	bl	112d4 <fprintf@plt>
   15e28:	ldr	r3, [sp, #28]
   15e2c:	cmp	r3, #0
   15e30:	beq	15e3c <argp_error@@Base+0x274>
   15e34:	mov	r0, r8
   15e38:	bl	12a48 <argp_parse@@Base+0xa9c>
   15e3c:	ldr	r5, [r4, #20]
   15e40:	mov	r0, r5
   15e44:	bl	112bc <strlen@plt>
   15e48:	ldr	r3, [r4]
   15e4c:	add	r3, r3, #1
   15e50:	str	r3, [r4]
   15e54:	mov	r3, #0
   15e58:	add	r0, r5, r0
   15e5c:	str	r0, [r4, #20]
   15e60:	str	r3, [r4, #8]
   15e64:	b	16064 <argp_error@@Base+0x49c>
   15e68:	mov	r9, r3
   15e6c:	b	15d88 <argp_error@@Base+0x1c0>
   15e70:	ldr	r2, [sp, #24]
   15e74:	mov	r1, r8
   15e78:	mov	r0, r5
   15e7c:	bl	113f4 <strncmp@plt>
   15e80:	cmp	r0, #0
   15e84:	bne	15e9c <argp_error@@Base+0x2d4>
   15e88:	mov	r0, r5
   15e8c:	bl	112bc <strlen@plt>
   15e90:	ldr	r3, [sp, #24]
   15e94:	cmp	r3, r0
   15e98:	beq	16070 <argp_error@@Base+0x4a8>
   15e9c:	add	r6, r6, #1
   15ea0:	b	15dac <argp_error@@Base+0x1e4>
   15ea4:	ldr	r2, [sp, #24]
   15ea8:	ldr	r1, [r4, #20]
   15eac:	bl	113f4 <strncmp@plt>
   15eb0:	cmp	r0, #0
   15eb4:	bne	15f54 <argp_error@@Base+0x38c>
   15eb8:	cmp	r7, #0
   15ebc:	moveq	r7, fp
   15ec0:	ldreq	r3, [sp, #12]
   15ec4:	streq	r3, [sp, #16]
   15ec8:	beq	15f54 <argp_error@@Base+0x38c>
   15ecc:	ldr	r3, [sp, #84]	; 0x54
   15ed0:	cmp	r3, #0
   15ed4:	bne	15f08 <argp_error@@Base+0x340>
   15ed8:	ldr	r1, [r7, #4]
   15edc:	ldr	r2, [fp, #4]
   15ee0:	cmp	r1, r2
   15ee4:	bne	15f08 <argp_error@@Base+0x340>
   15ee8:	ldr	r1, [r7, #8]
   15eec:	ldr	r2, [fp, #8]
   15ef0:	cmp	r1, r2
   15ef4:	bne	15f08 <argp_error@@Base+0x340>
   15ef8:	ldr	r1, [r7, #12]
   15efc:	ldr	r2, [fp, #12]
   15f00:	cmp	r1, r2
   15f04:	beq	15f54 <argp_error@@Base+0x38c>
   15f08:	cmp	r5, #0
   15f0c:	bne	15f54 <argp_error@@Base+0x38c>
   15f10:	ldr	r3, [sp, #92]	; 0x5c
   15f14:	cmp	r3, #0
   15f18:	beq	15f3c <argp_error@@Base+0x374>
   15f1c:	cmp	r8, #0
   15f20:	bne	15f48 <argp_error@@Base+0x380>
   15f24:	mov	r0, r6
   15f28:	bl	12fc8 <argp_parse@@Base+0x101c>
   15f2c:	subs	r8, r0, #0
   15f30:	bne	16174 <argp_error@@Base+0x5ac>
   15f34:	mov	r5, #1
   15f38:	b	15f54 <argp_error@@Base+0x38c>
   15f3c:	cmp	r8, #0
   15f40:	mov	r5, #1
   15f44:	beq	15f54 <argp_error@@Base+0x38c>
   15f48:	ldr	r3, [sp, #12]
   15f4c:	mov	r2, #1
   15f50:	strb	r2, [r8, r3]
   15f54:	ldr	r3, [sp, #12]
   15f58:	add	fp, fp, #16
   15f5c:	add	r3, r3, #1
   15f60:	str	r3, [sp, #12]
   15f64:	b	15ddc <argp_error@@Base+0x214>
   15f68:	ldr	r0, [r7]
   15f6c:	bl	113ac <flockfile@plt>
   15f70:	ldr	r3, [r4, #20]
   15f74:	ldr	r2, [sl]
   15f78:	str	r3, [sp]
   15f7c:	ldr	r1, [pc, #540]	; 161a0 <argp_error@@Base+0x5d8>
   15f80:	ldr	r3, [sp, #96]	; 0x60
   15f84:	ldr	r0, [r7]
   15f88:	bl	112d4 <fprintf@plt>
   15f8c:	ldr	r9, [pc, #528]	; 161a4 <argp_error@@Base+0x5dc>
   15f90:	cmp	r6, r5
   15f94:	bne	15fb0 <argp_error@@Base+0x3e8>
   15f98:	ldr	r1, [r7]
   15f9c:	mov	r0, #10
   15fa0:	bl	11388 <fputc@plt>
   15fa4:	ldr	r0, [r7]
   15fa8:	bl	11208 <funlockfile@plt>
   15fac:	b	15e28 <argp_error@@Base+0x260>
   15fb0:	ldrb	r3, [r8, r5]
   15fb4:	cmp	r3, #0
   15fb8:	beq	15fd4 <argp_error@@Base+0x40c>
   15fbc:	ldr	r3, [sp, #20]
   15fc0:	ldr	r2, [sp, #96]	; 0x60
   15fc4:	mov	r1, r9
   15fc8:	ldr	r3, [r3, r5, lsl #4]
   15fcc:	ldr	r0, [r7]
   15fd0:	bl	112d4 <fprintf@plt>
   15fd4:	add	r5, r5, #1
   15fd8:	b	15f90 <argp_error@@Base+0x3c8>
   15fdc:	cmp	r7, #0
   15fe0:	bne	16074 <argp_error@@Base+0x4ac>
   15fe4:	ldr	r3, [sp, #84]	; 0x54
   15fe8:	cmp	r3, #0
   15fec:	beq	16020 <argp_error@@Base+0x458>
   15ff0:	ldr	r3, [r4]
   15ff4:	ldr	r3, [sl, r3, lsl #2]
   15ff8:	ldrb	r3, [r3, #1]
   15ffc:	cmp	r3, #45	; 0x2d
   16000:	beq	16020 <argp_error@@Base+0x458>
   16004:	ldr	r3, [r4, #20]
   16008:	ldr	r0, [sp, #32]
   1600c:	ldrb	r1, [r3]
   16010:	bl	112c8 <strchr@plt>
   16014:	cmp	r0, #0
   16018:	mvnne	r0, #0
   1601c:	bne	16068 <argp_error@@Base+0x4a0>
   16020:	ldr	r3, [sp, #92]	; 0x5c
   16024:	cmp	r3, #0
   16028:	beq	1604c <argp_error@@Base+0x484>
   1602c:	ldr	r0, [pc, #356]	; 16198 <argp_error@@Base+0x5d0>
   16030:	ldr	r3, [r4, #20]
   16034:	ldr	r2, [sl]
   16038:	str	r3, [sp]
   1603c:	ldr	r1, [pc, #356]	; 161a8 <argp_error@@Base+0x5e0>
   16040:	ldr	r3, [sp, #96]	; 0x60
   16044:	ldr	r0, [r0]
   16048:	bl	112d4 <fprintf@plt>
   1604c:	ldr	r3, [r4]
   16050:	mov	r2, #0
   16054:	add	r3, r3, #1
   16058:	str	r2, [r4, #20]
   1605c:	str	r3, [r4]
   16060:	str	r2, [r4, #8]
   16064:	mov	r0, #63	; 0x3f
   16068:	add	sp, sp, #44	; 0x2c
   1606c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16070:	str	r6, [sp, #16]
   16074:	ldr	r3, [r4]
   16078:	mov	r1, #0
   1607c:	add	r2, r3, #1
   16080:	str	r2, [r4]
   16084:	str	r1, [r4, #20]
   16088:	ldrb	r1, [r9]
   1608c:	cmp	r1, #0
   16090:	ldr	r1, [r7, #4]
   16094:	beq	160dc <argp_error@@Base+0x514>
   16098:	cmp	r1, #0
   1609c:	addne	r9, r9, #1
   160a0:	strne	r9, [r4, #12]
   160a4:	bne	16100 <argp_error@@Base+0x538>
   160a8:	ldr	r3, [sp, #92]	; 0x5c
   160ac:	cmp	r3, #0
   160b0:	beq	160d4 <argp_error@@Base+0x50c>
   160b4:	ldr	r0, [pc, #220]	; 16198 <argp_error@@Base+0x5d0>
   160b8:	ldr	r3, [r7]
   160bc:	ldr	r2, [sl]
   160c0:	str	r3, [sp]
   160c4:	ldr	r1, [pc, #224]	; 161ac <argp_error@@Base+0x5e4>
   160c8:	ldr	r3, [sp, #96]	; 0x60
   160cc:	ldr	r0, [r0]
   160d0:	bl	112d4 <fprintf@plt>
   160d4:	ldr	r3, [r7, #12]
   160d8:	b	15e60 <argp_error@@Base+0x298>
   160dc:	cmp	r1, #1
   160e0:	bne	16100 <argp_error@@Base+0x538>
   160e4:	ldr	r1, [sp, #36]	; 0x24
   160e8:	cmp	r2, r1
   160ec:	bge	16128 <argp_error@@Base+0x560>
   160f0:	add	r3, r3, #2
   160f4:	str	r3, [r4]
   160f8:	ldr	r3, [sl, r2, lsl #2]
   160fc:	str	r3, [r4, #12]
   16100:	ldr	r3, [sp, #80]	; 0x50
   16104:	cmp	r3, #0
   16108:	ldrne	r2, [sp, #16]
   1610c:	strne	r2, [r3]
   16110:	ldr	r3, [r7, #8]
   16114:	ldr	r0, [r7, #12]
   16118:	cmp	r3, #0
   1611c:	strne	r0, [r3]
   16120:	movne	r0, #0
   16124:	b	16068 <argp_error@@Base+0x4a0>
   16128:	ldr	r3, [sp, #92]	; 0x5c
   1612c:	cmp	r3, #0
   16130:	beq	16154 <argp_error@@Base+0x58c>
   16134:	ldr	r0, [pc, #92]	; 16198 <argp_error@@Base+0x5d0>
   16138:	ldr	r3, [r7]
   1613c:	ldr	r2, [sl]
   16140:	str	r3, [sp]
   16144:	ldr	r1, [pc, #100]	; 161b0 <argp_error@@Base+0x5e8>
   16148:	ldr	r3, [sp, #96]	; 0x60
   1614c:	ldr	r0, [r0]
   16150:	bl	112d4 <fprintf@plt>
   16154:	ldr	r3, [r7, #12]
   16158:	str	r3, [r4, #8]
   1615c:	ldr	r3, [sp, #32]
   16160:	ldrb	r0, [r3]
   16164:	cmp	r0, #58	; 0x3a
   16168:	moveq	r0, #58	; 0x3a
   1616c:	movne	r0, #63	; 0x3f
   16170:	b	16068 <argp_error@@Base+0x4a0>
   16174:	mov	r2, r6
   16178:	mov	r1, #0
   1617c:	bl	11304 <memset@plt>
   16180:	ldr	r3, [sp, #16]
   16184:	mov	r2, #1
   16188:	strb	r2, [r8, r3]
   1618c:	mov	r3, #1
   16190:	str	r3, [sp, #28]
   16194:	b	15f48 <argp_error@@Base+0x380>
   16198:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1619c:	andeq	r7, r1, r9, asr #16
   161a0:	andeq	r7, r1, r9, ror #16
   161a4:	muleq	r1, r8, r8
   161a8:	andeq	r7, r1, r0, lsr #17
   161ac:	andeq	r7, r1, r0, asr #17
   161b0:	andeq	r7, r1, sp, ror #17
   161b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161b8:	sub	sp, sp, #36	; 0x24
   161bc:	subs	r8, r0, #0
   161c0:	ldr	r4, [sp, #80]	; 0x50
   161c4:	ldr	fp, [sp, #72]	; 0x48
   161c8:	ldr	r5, [sp, #76]	; 0x4c
   161cc:	ldr	r9, [r4, #4]
   161d0:	bgt	161e0 <argp_error@@Base+0x618>
   161d4:	mvn	r0, #0
   161d8:	add	sp, sp, #36	; 0x24
   161dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161e0:	mov	sl, r3
   161e4:	mov	r3, #0
   161e8:	str	r3, [r4, #12]
   161ec:	ldr	r3, [r4]
   161f0:	mov	r7, r1
   161f4:	cmp	r3, #0
   161f8:	mov	r6, r2
   161fc:	beq	16220 <argp_error@@Base+0x658>
   16200:	ldr	r3, [r4, #16]
   16204:	cmp	r3, #0
   16208:	beq	16228 <argp_error@@Base+0x660>
   1620c:	ldrb	r3, [r2]
   16210:	sub	r3, r3, #43	; 0x2b
   16214:	tst	r3, #253	; 0xfd
   16218:	addeq	r6, r2, #1
   1621c:	b	16264 <argp_error@@Base+0x69c>
   16220:	mov	r3, #1
   16224:	str	r3, [r4]
   16228:	ldr	r3, [r4]
   1622c:	str	r3, [r4, #32]
   16230:	str	r3, [r4, #28]
   16234:	mov	r3, #0
   16238:	str	r3, [r4, #20]
   1623c:	ldrb	r2, [r6]
   16240:	cmp	r2, #45	; 0x2d
   16244:	moveq	r3, #2
   16248:	beq	16254 <argp_error@@Base+0x68c>
   1624c:	cmp	r2, #43	; 0x2b
   16250:	bne	16364 <argp_error@@Base+0x79c>
   16254:	add	r6, r6, #1
   16258:	str	r3, [r4, #24]
   1625c:	mov	r3, #1
   16260:	str	r3, [r4, #16]
   16264:	ldrb	r3, [r6]
   16268:	cmp	r3, #58	; 0x3a
   1626c:	ldr	r3, [r4, #20]
   16270:	moveq	r9, #0
   16274:	cmp	r3, #0
   16278:	beq	16288 <argp_error@@Base+0x6c0>
   1627c:	ldrb	r3, [r3]
   16280:	cmp	r3, #0
   16284:	bne	1641c <argp_error@@Base+0x854>
   16288:	ldr	r3, [r4]
   1628c:	ldr	r2, [r4, #32]
   16290:	cmp	r2, r3
   16294:	ldr	r2, [r4, #28]
   16298:	strgt	r3, [r4, #32]
   1629c:	cmp	r3, r2
   162a0:	ldr	r2, [r4, #24]
   162a4:	strlt	r3, [r4, #28]
   162a8:	cmp	r2, #1
   162ac:	bne	162e4 <argp_error@@Base+0x71c>
   162b0:	ldr	r1, [r4, #32]
   162b4:	ldr	r2, [r4, #28]
   162b8:	cmp	r2, r1
   162bc:	beq	16394 <argp_error@@Base+0x7cc>
   162c0:	cmp	r3, r1
   162c4:	beq	162d4 <argp_error@@Base+0x70c>
   162c8:	mov	r1, r4
   162cc:	mov	r0, r7
   162d0:	bl	15ca0 <argp_error@@Base+0xd8>
   162d4:	ldr	r3, [r4]
   162d8:	cmp	r8, r3
   162dc:	bgt	163a0 <argp_error@@Base+0x7d8>
   162e0:	str	r3, [r4, #32]
   162e4:	ldr	r3, [r4]
   162e8:	cmp	r8, r3
   162ec:	beq	16344 <argp_error@@Base+0x77c>
   162f0:	ldr	r1, [pc, #920]	; 16690 <argp_error@@Base+0xac8>
   162f4:	ldr	r0, [r7, r3, lsl #2]
   162f8:	str	r3, [sp, #24]
   162fc:	bl	11124 <strcmp@plt>
   16300:	cmp	r0, #0
   16304:	bne	16344 <argp_error@@Base+0x77c>
   16308:	ldr	r1, [r4, #28]
   1630c:	ldr	r3, [sp, #24]
   16310:	ldr	r2, [r4, #32]
   16314:	add	r3, r3, #1
   16318:	cmp	r1, r2
   1631c:	str	r3, [r4]
   16320:	streq	r3, [r4, #28]
   16324:	beq	1633c <argp_error@@Base+0x774>
   16328:	cmp	r3, r2
   1632c:	beq	1633c <argp_error@@Base+0x774>
   16330:	mov	r1, r4
   16334:	mov	r0, r7
   16338:	bl	15ca0 <argp_error@@Base+0xd8>
   1633c:	str	r8, [r4, #32]
   16340:	str	r8, [r4]
   16344:	ldr	r2, [r4]
   16348:	cmp	r8, r2
   1634c:	bne	163c8 <argp_error@@Base+0x800>
   16350:	ldr	r3, [r4, #28]
   16354:	ldr	r2, [r4, #32]
   16358:	cmp	r3, r2
   1635c:	strne	r3, [r4]
   16360:	b	161d4 <argp_error@@Base+0x60c>
   16364:	ldr	r3, [sp, #84]	; 0x54
   16368:	cmp	r3, #0
   1636c:	beq	1637c <argp_error@@Base+0x7b4>
   16370:	mov	r3, #0
   16374:	str	r3, [r4, #24]
   16378:	b	1625c <argp_error@@Base+0x694>
   1637c:	ldr	r0, [pc, #784]	; 16694 <argp_error@@Base+0xacc>
   16380:	bl	11238 <getenv@plt>
   16384:	cmp	r0, #0
   16388:	bne	16370 <argp_error@@Base+0x7a8>
   1638c:	mov	r3, #1
   16390:	b	16374 <argp_error@@Base+0x7ac>
   16394:	cmp	r3, r2
   16398:	strne	r3, [r4, #28]
   1639c:	b	162d4 <argp_error@@Base+0x70c>
   163a0:	ldr	r2, [r7, r3, lsl #2]
   163a4:	ldrb	r1, [r2]
   163a8:	cmp	r1, #45	; 0x2d
   163ac:	bne	163bc <argp_error@@Base+0x7f4>
   163b0:	ldrb	r2, [r2, #1]
   163b4:	cmp	r2, #0
   163b8:	bne	162e0 <argp_error@@Base+0x718>
   163bc:	add	r3, r3, #1
   163c0:	str	r3, [r4]
   163c4:	b	162d4 <argp_error@@Base+0x70c>
   163c8:	ldr	r3, [r7, r2, lsl #2]
   163cc:	ldrb	r1, [r3]
   163d0:	cmp	r1, #45	; 0x2d
   163d4:	bne	163e4 <argp_error@@Base+0x81c>
   163d8:	ldrb	r1, [r3, #1]
   163dc:	cmp	r1, #0
   163e0:	bne	16404 <argp_error@@Base+0x83c>
   163e4:	ldr	r1, [r4, #24]
   163e8:	cmp	r1, #0
   163ec:	beq	161d4 <argp_error@@Base+0x60c>
   163f0:	add	r2, r2, #1
   163f4:	str	r2, [r4]
   163f8:	str	r3, [r4, #12]
   163fc:	mov	r0, #1
   16400:	b	161d8 <argp_error@@Base+0x610>
   16404:	cmp	sl, #0
   16408:	bne	16498 <argp_error@@Base+0x8d0>
   1640c:	ldr	r3, [r4]
   16410:	ldr	r3, [r7, r3, lsl #2]
   16414:	add	r3, r3, #1
   16418:	str	r3, [r4, #20]
   1641c:	ldr	r3, [r4, #20]
   16420:	mov	r0, r6
   16424:	add	r2, r3, #1
   16428:	str	r2, [r4, #20]
   1642c:	ldrb	r5, [r3]
   16430:	str	r2, [sp, #28]
   16434:	str	r3, [sp, #24]
   16438:	mov	r1, r5
   1643c:	bl	112c8 <strchr@plt>
   16440:	ldr	r3, [sp, #24]
   16444:	ldr	r2, [sp, #28]
   16448:	ldrb	r1, [r3, #1]
   1644c:	cmp	r1, #0
   16450:	ldreq	r1, [r4]
   16454:	addeq	r1, r1, #1
   16458:	streq	r1, [r4]
   1645c:	sub	r1, r5, #58	; 0x3a
   16460:	cmp	r0, #0
   16464:	cmpne	r1, #1
   16468:	bhi	16544 <argp_error@@Base+0x97c>
   1646c:	cmp	r9, #0
   16470:	beq	1648c <argp_error@@Base+0x8c4>
   16474:	ldr	r0, [pc, #540]	; 16698 <argp_error@@Base+0xad0>
   16478:	mov	r3, r5
   1647c:	ldr	r2, [r7]
   16480:	ldr	r1, [pc, #532]	; 1669c <argp_error@@Base+0xad4>
   16484:	ldr	r0, [r0]
   16488:	bl	112d4 <fprintf@plt>
   1648c:	str	r5, [r4, #8]
   16490:	mov	r0, #63	; 0x3f
   16494:	b	161d8 <argp_error@@Base+0x610>
   16498:	cmp	r1, #45	; 0x2d
   1649c:	bne	164d8 <argp_error@@Base+0x910>
   164a0:	add	r3, r3, #2
   164a4:	str	r3, [r4, #20]
   164a8:	ldr	r3, [pc, #480]	; 16690 <argp_error@@Base+0xac8>
   164ac:	str	r9, [sp, #12]
   164b0:	str	r3, [sp, #16]
   164b4:	str	r4, [sp, #8]
   164b8:	str	r5, [sp, #4]
   164bc:	str	fp, [sp]
   164c0:	mov	r3, sl
   164c4:	mov	r2, r6
   164c8:	mov	r1, r7
   164cc:	mov	r0, r8
   164d0:	bl	15d64 <argp_error@@Base+0x19c>
   164d4:	b	161d8 <argp_error@@Base+0x610>
   164d8:	cmp	r5, #0
   164dc:	beq	1640c <argp_error@@Base+0x844>
   164e0:	ldrb	r2, [r3, #2]
   164e4:	cmp	r2, #0
   164e8:	bne	16504 <argp_error@@Base+0x93c>
   164ec:	mov	r0, r6
   164f0:	str	r3, [sp, #24]
   164f4:	bl	112c8 <strchr@plt>
   164f8:	ldr	r3, [sp, #24]
   164fc:	cmp	r0, #0
   16500:	bne	1640c <argp_error@@Base+0x844>
   16504:	add	r3, r3, #1
   16508:	str	r3, [r4, #20]
   1650c:	ldr	r3, [pc, #396]	; 166a0 <argp_error@@Base+0xad8>
   16510:	str	r9, [sp, #12]
   16514:	str	r3, [sp, #16]
   16518:	str	r4, [sp, #8]
   1651c:	str	r5, [sp, #4]
   16520:	str	fp, [sp]
   16524:	mov	r3, sl
   16528:	mov	r2, r6
   1652c:	mov	r1, r7
   16530:	mov	r0, r8
   16534:	bl	15d64 <argp_error@@Base+0x19c>
   16538:	cmn	r0, #1
   1653c:	bne	161d8 <argp_error@@Base+0x610>
   16540:	b	1640c <argp_error@@Base+0x844>
   16544:	ldrb	r1, [r0]
   16548:	cmp	r1, #87	; 0x57
   1654c:	ldrb	r1, [r0, #1]
   16550:	bne	165ec <argp_error@@Base+0xa24>
   16554:	cmp	sl, #0
   16558:	sub	ip, r1, #59	; 0x3b
   1655c:	clz	ip, ip
   16560:	lsr	ip, ip, #5
   16564:	moveq	ip, #0
   16568:	cmp	ip, #0
   1656c:	beq	165ec <argp_error@@Base+0xa24>
   16570:	ldrb	r3, [r3, #1]
   16574:	cmp	r3, #0
   16578:	strne	r2, [r4, #12]
   1657c:	bne	165cc <argp_error@@Base+0xa04>
   16580:	ldr	r3, [r4]
   16584:	cmp	r8, r3
   16588:	ldrne	r3, [r7, r3, lsl #2]
   1658c:	strne	r3, [r4, #12]
   16590:	bne	165cc <argp_error@@Base+0xa04>
   16594:	cmp	r9, #0
   16598:	beq	165b4 <argp_error@@Base+0x9ec>
   1659c:	ldr	r0, [pc, #244]	; 16698 <argp_error@@Base+0xad0>
   165a0:	mov	r3, r5
   165a4:	ldr	r2, [r7]
   165a8:	ldr	r1, [pc, #244]	; 166a4 <argp_error@@Base+0xadc>
   165ac:	ldr	r0, [r0]
   165b0:	bl	112d4 <fprintf@plt>
   165b4:	str	r5, [r4, #8]
   165b8:	ldrb	r0, [r6]
   165bc:	cmp	r0, #58	; 0x3a
   165c0:	moveq	r0, #58	; 0x3a
   165c4:	movne	r0, #63	; 0x3f
   165c8:	b	161d8 <argp_error@@Base+0x610>
   165cc:	ldr	r3, [r4, #12]
   165d0:	ldr	r2, [pc, #208]	; 166a8 <argp_error@@Base+0xae0>
   165d4:	str	r3, [r4, #20]
   165d8:	mov	r3, #0
   165dc:	str	r3, [r4, #12]
   165e0:	str	r2, [sp, #16]
   165e4:	stmib	sp, {r3, r4, r9}
   165e8:	b	164bc <argp_error@@Base+0x8f4>
   165ec:	cmp	r1, #58	; 0x3a
   165f0:	bne	1663c <argp_error@@Base+0xa74>
   165f4:	ldrb	r1, [r0, #2]
   165f8:	ldrb	r3, [r3, #1]
   165fc:	cmp	r1, #58	; 0x3a
   16600:	bne	1661c <argp_error@@Base+0xa54>
   16604:	cmp	r3, #0
   16608:	strne	r2, [r4, #12]
   1660c:	ldrne	r3, [r4]
   16610:	bne	1662c <argp_error@@Base+0xa64>
   16614:	str	r3, [r4, #12]
   16618:	b	16634 <argp_error@@Base+0xa6c>
   1661c:	cmp	r3, #0
   16620:	ldr	r3, [r4]
   16624:	beq	16644 <argp_error@@Base+0xa7c>
   16628:	str	r2, [r4, #12]
   1662c:	add	r3, r3, #1
   16630:	str	r3, [r4]
   16634:	mov	r3, #0
   16638:	str	r3, [r4, #20]
   1663c:	mov	r0, r5
   16640:	b	161d8 <argp_error@@Base+0x610>
   16644:	cmp	r8, r3
   16648:	addne	r2, r3, #1
   1664c:	strne	r2, [r4]
   16650:	ldrne	r3, [r7, r3, lsl #2]
   16654:	bne	16614 <argp_error@@Base+0xa4c>
   16658:	cmp	r9, #0
   1665c:	beq	16678 <argp_error@@Base+0xab0>
   16660:	ldr	r0, [pc, #48]	; 16698 <argp_error@@Base+0xad0>
   16664:	mov	r3, r5
   16668:	ldr	r2, [r7]
   1666c:	ldr	r1, [pc, #48]	; 166a4 <argp_error@@Base+0xadc>
   16670:	ldr	r0, [r0]
   16674:	bl	112d4 <fprintf@plt>
   16678:	str	r5, [r4, #8]
   1667c:	ldrb	r5, [r6]
   16680:	cmp	r5, #58	; 0x3a
   16684:	moveq	r5, #58	; 0x3a
   16688:	movne	r5, #63	; 0x3f
   1668c:	b	16634 <argp_error@@Base+0xa6c>
   16690:	andeq	r7, r1, r0, lsr #1
   16694:	andeq	r7, r1, r5, lsl r9
   16698:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1669c:	andeq	r7, r1, r5, lsr #18
   166a0:	andeq	r7, r1, r1, lsr #1
   166a4:	andeq	r7, r1, r1, asr #18
   166a8:	andeq	r7, r1, sl, ror #18
   166ac:	push	{r4, r5, lr}
   166b0:	sub	sp, sp, #20
   166b4:	ldr	r5, [pc, #84]	; 16710 <argp_error@@Base+0xb48>
   166b8:	ldr	r4, [pc, #84]	; 16714 <argp_error@@Base+0xb4c>
   166bc:	ldr	ip, [r5]
   166c0:	str	r4, [sp, #8]
   166c4:	str	ip, [r4]
   166c8:	ldr	ip, [r5, #4]
   166cc:	str	ip, [r4, #4]
   166d0:	ldr	ip, [sp, #40]	; 0x28
   166d4:	str	ip, [sp, #12]
   166d8:	ldr	ip, [sp, #36]	; 0x24
   166dc:	str	ip, [sp, #4]
   166e0:	ldr	ip, [sp, #32]
   166e4:	str	ip, [sp]
   166e8:	bl	161b4 <argp_error@@Base+0x5ec>
   166ec:	ldr	r3, [r4]
   166f0:	ldr	r2, [r4, #12]
   166f4:	str	r3, [r5]
   166f8:	ldr	r3, [pc, #24]	; 16718 <argp_error@@Base+0xb50>
   166fc:	str	r2, [r3]
   16700:	ldr	r3, [r4, #8]
   16704:	str	r3, [r5, #8]
   16708:	add	sp, sp, #20
   1670c:	pop	{r4, r5, pc}
   16710:			; <UNDEFINED> instruction: 0x000281b4
   16714:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   16718:			; <UNDEFINED> instruction: 0x000282b8
   1671c:	push	{r0, r1, r2, r3, r4, lr}
   16720:	mov	r3, #1
   16724:	str	r3, [sp, #8]
   16728:	mov	r3, #0
   1672c:	str	r3, [sp, #4]
   16730:	str	r3, [sp]
   16734:	bl	166ac <argp_error@@Base+0xae4>
   16738:	add	sp, sp, #20
   1673c:	pop	{pc}		; (ldr pc, [sp], #4)
   16740:	push	{r4, r5, r6, r7, r8, lr}
   16744:	mov	r8, r0
   16748:	mov	r0, #36	; 0x24
   1674c:	mov	r7, r1
   16750:	mov	r6, r2
   16754:	mov	r5, r3
   16758:	bl	12fc8 <argp_parse@@Base+0x101c>
   1675c:	subs	r4, r0, #0
   16760:	beq	167b0 <argp_error@@Base+0xbe8>
   16764:	mov	r3, #0
   16768:	str	r5, [r4, #12]
   1676c:	str	r8, [r4]
   16770:	str	r7, [r4, #4]
   16774:	str	r6, [r4, #8]
   16778:	str	r3, [r4, #20]
   1677c:	str	r3, [r4, #16]
   16780:	mov	r0, #200	; 0xc8
   16784:	bl	12fc8 <argp_parse@@Base+0x101c>
   16788:	cmp	r0, #0
   1678c:	mov	r5, r0
   16790:	addne	r5, r0, #200	; 0xc8
   16794:	str	r0, [r4, #24]
   16798:	strne	r0, [r4, #28]
   1679c:	strne	r5, [r4, #32]
   167a0:	bne	167b0 <argp_error@@Base+0xbe8>
   167a4:	mov	r0, r4
   167a8:	bl	12a48 <argp_parse@@Base+0xa9c>
   167ac:	mov	r4, r5
   167b0:	mov	r0, r4
   167b4:	pop	{r4, r5, r6, r7, r8, pc}
   167b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167bc:	mov	r4, r0
   167c0:	ldr	r6, [r0, #24]
   167c4:	ldr	r3, [r0, #16]
   167c8:	add	r6, r6, r3
   167cc:	ldr	r2, [r4, #28]
   167d0:	cmp	r6, r2
   167d4:	bcs	16884 <argp_error@@Base+0xcbc>
   167d8:	ldr	r7, [r4, #20]
   167dc:	cmp	r7, #0
   167e0:	bne	16838 <argp_error@@Base+0xc70>
   167e4:	ldr	r5, [r4, #4]
   167e8:	cmp	r5, #0
   167ec:	beq	16838 <argp_error@@Base+0xc70>
   167f0:	ldr	r1, [r4, #32]
   167f4:	add	r3, r2, r5
   167f8:	cmp	r1, r3
   167fc:	bls	1689c <argp_error@@Base+0xcd4>
   16800:	add	r7, r6, r5
   16804:	sub	r2, r2, r6
   16808:	mov	r1, r6
   1680c:	mov	r0, r7
   16810:	bl	11154 <memmove@plt>
   16814:	ldr	r3, [r4, #28]
   16818:	mov	r0, r6
   1681c:	add	r3, r3, r5
   16820:	str	r3, [r4, #28]
   16824:	mov	r2, r5
   16828:	mov	r1, #32
   1682c:	bl	11304 <memset@plt>
   16830:	mov	r6, r7
   16834:	str	r5, [r4, #20]
   16838:	ldr	r9, [r4, #28]
   1683c:	mov	r1, #10
   16840:	sub	r8, r9, r6
   16844:	mov	r2, r8
   16848:	mov	r0, r6
   1684c:	bl	11334 <memchr@plt>
   16850:	ldr	r2, [r4, #20]
   16854:	ldr	r5, [r4, #8]
   16858:	cmp	r2, #0
   1685c:	movlt	r3, #0
   16860:	strlt	r3, [r4, #20]
   16864:	cmp	r0, #0
   16868:	mov	fp, r0
   1686c:	ldr	r0, [r4, #20]
   16870:	bne	168b8 <argp_error@@Base+0xcf0>
   16874:	add	r3, r8, r0
   16878:	cmp	r3, r5
   1687c:	bcs	168d8 <argp_error@@Base+0xd10>
   16880:	str	r3, [r4, #20]
   16884:	ldr	r3, [r4, #28]
   16888:	ldr	r2, [r4, #24]
   1688c:	sub	r3, r3, r2
   16890:	str	r3, [r4, #16]
   16894:	add	sp, sp, #12
   16898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1689c:	ldr	r1, [r4]
   168a0:	mov	r0, #32
   168a4:	add	r7, r7, #1
   168a8:	bl	11430 <putc_unlocked@plt>
   168ac:	cmp	r5, r7
   168b0:	bne	1689c <argp_error@@Base+0xcd4>
   168b4:	b	16834 <argp_error@@Base+0xc6c>
   168b8:	sub	r2, fp, r6
   168bc:	add	r2, r2, r0
   168c0:	cmp	r2, r5
   168c4:	bge	168dc <argp_error@@Base+0xd14>
   168c8:	mov	r3, #0
   168cc:	str	r3, [r4, #20]
   168d0:	add	r3, fp, #1
   168d4:	b	1693c <argp_error@@Base+0xd74>
   168d8:	mov	fp, r9
   168dc:	ldr	sl, [r4, #12]
   168e0:	cmp	sl, #0
   168e4:	subge	r5, r5, r0
   168e8:	addge	r5, r6, r5
   168ec:	movge	r7, r5
   168f0:	bge	1695c <argp_error@@Base+0xd94>
   168f4:	cmp	fp, r9
   168f8:	sub	sl, r5, #1
   168fc:	bcs	16944 <argp_error@@Base+0xd7c>
   16900:	sub	r0, sl, r0
   16904:	sub	r2, r9, fp
   16908:	mov	r1, fp
   1690c:	add	r0, r6, r0
   16910:	bl	11154 <memmove@plt>
   16914:	ldr	r8, [r4, #20]
   16918:	sub	sl, sl, r8
   1691c:	add	sl, r6, sl
   16920:	sub	r3, sl, fp
   16924:	ldr	sl, [r4, #28]
   16928:	sub	r3, sl, r3
   1692c:	str	r3, [r4, #28]
   16930:	mov	r3, #0
   16934:	str	r3, [r4, #20]
   16938:	add	r3, r6, r5
   1693c:	mov	r6, r3
   16940:	b	167cc <argp_error@@Base+0xc04>
   16944:	add	r0, r8, r0
   16948:	str	r0, [r4, #20]
   1694c:	sub	r0, sl, r0
   16950:	add	r9, r9, r0
   16954:	str	r9, [r4, #28]
   16958:	b	16884 <argp_error@@Base+0xcbc>
   1695c:	cmp	r6, r7
   16960:	mov	r2, r7
   16964:	bhi	16990 <argp_error@@Base+0xdc8>
   16968:	str	r7, [sp, #4]
   1696c:	bl	11298 <__ctype_b_loc@plt>
   16970:	ldr	r2, [sp, #4]
   16974:	sub	r7, r7, #1
   16978:	ldrb	r1, [r2]
   1697c:	lsl	r1, r1, #1
   16980:	ldr	r0, [r0]
   16984:	ldrh	r1, [r0, r1]
   16988:	tst	r1, #1
   1698c:	beq	1695c <argp_error@@Base+0xd94>
   16990:	add	r7, r2, #1
   16994:	cmp	r6, r7
   16998:	bcs	16a10 <argp_error@@Base+0xe48>
   1699c:	cmp	r6, r2
   169a0:	bhi	169dc <argp_error@@Base+0xe14>
   169a4:	sub	r5, r2, #1
   169a8:	cmp	r6, r5
   169ac:	mov	r2, r5
   169b0:	bhi	169dc <argp_error@@Base+0xe14>
   169b4:	str	r5, [sp, #4]
   169b8:	bl	11298 <__ctype_b_loc@plt>
   169bc:	ldr	r2, [sp, #4]
   169c0:	sub	r5, r5, #1
   169c4:	ldrb	r3, [r2]
   169c8:	lsl	r3, r3, #1
   169cc:	ldr	r1, [r0]
   169d0:	ldrh	r3, [r1, r3]
   169d4:	tst	r3, #1
   169d8:	bne	169a8 <argp_error@@Base+0xde0>
   169dc:	add	r5, r2, #1
   169e0:	add	r3, r8, #1
   169e4:	add	r3, r6, r3
   169e8:	cmp	r7, r3
   169ec:	bne	16a78 <argp_error@@Base+0xeb0>
   169f0:	ldr	r3, [r4, #32]
   169f4:	sub	r3, r3, r5
   169f8:	cmp	sl, r3
   169fc:	bge	16a88 <argp_error@@Base+0xec0>
   16a00:	mov	r3, #10
   16a04:	add	r9, r5, #1
   16a08:	strb	r3, [r5]
   16a0c:	b	16b08 <argp_error@@Base+0xf40>
   16a10:	cmp	fp, r5
   16a14:	bls	16a6c <argp_error@@Base+0xea4>
   16a18:	add	r7, r5, #1
   16a1c:	cmp	fp, r7
   16a20:	mov	r5, r7
   16a24:	beq	16a6c <argp_error@@Base+0xea4>
   16a28:	bl	11298 <__ctype_b_loc@plt>
   16a2c:	ldrb	r2, [r5]
   16a30:	add	r7, r7, #1
   16a34:	lsl	r2, r2, #1
   16a38:	ldr	r1, [r0]
   16a3c:	ldrh	r2, [r1, r2]
   16a40:	tst	r2, #1
   16a44:	beq	16a1c <argp_error@@Base+0xe54>
   16a48:	bl	11298 <__ctype_b_loc@plt>
   16a4c:	mov	r7, r5
   16a50:	ldr	r2, [r0]
   16a54:	ldrb	r3, [r7, #1]!
   16a58:	lsl	r3, r3, #1
   16a5c:	ldrh	r3, [r2, r3]
   16a60:	tst	r3, #1
   16a64:	bne	16a54 <argp_error@@Base+0xe8c>
   16a68:	b	169e0 <argp_error@@Base+0xe18>
   16a6c:	cmp	fp, r5
   16a70:	bne	16a48 <argp_error@@Base+0xe80>
   16a74:	b	168c8 <argp_error@@Base+0xd00>
   16a78:	add	r3, r5, #1
   16a7c:	sub	r3, r7, r3
   16a80:	cmp	sl, r3
   16a84:	ble	16a00 <argp_error@@Base+0xe38>
   16a88:	cmp	r7, r9
   16a8c:	bcs	16a00 <argp_error@@Base+0xe38>
   16a90:	ldr	r3, [r4, #32]
   16a94:	add	r0, sl, #1
   16a98:	sub	r3, r3, r9
   16a9c:	cmp	r3, r0
   16aa0:	ble	16ad0 <argp_error@@Base+0xf08>
   16aa4:	sub	r9, r9, r7
   16aa8:	mov	r2, r9
   16aac:	mov	r1, r7
   16ab0:	add	r0, r5, r0
   16ab4:	bl	11154 <memmove@plt>
   16ab8:	ldr	r7, [r4, #12]
   16abc:	add	r7, r7, #1
   16ac0:	add	r7, r5, r7
   16ac4:	add	r9, r7, r9
   16ac8:	sub	r8, r9, r6
   16acc:	b	16a00 <argp_error@@Base+0xe38>
   16ad0:	ldr	r0, [r4, #24]
   16ad4:	cmp	r5, r0
   16ad8:	bls	16aec <argp_error@@Base+0xf24>
   16adc:	ldr	r3, [r4]
   16ae0:	sub	r2, r5, r0
   16ae4:	mov	r1, #1
   16ae8:	bl	111a8 <fwrite_unlocked@plt>
   16aec:	ldr	r1, [r4]
   16af0:	mov	r0, #10
   16af4:	bl	11430 <putc_unlocked@plt>
   16af8:	ldr	r9, [r4, #24]
   16afc:	sub	r6, r6, r9
   16b00:	add	r8, r8, r6
   16b04:	mov	r6, r9
   16b08:	ldr	r2, [r4, #12]
   16b0c:	sub	r3, r7, r9
   16b10:	cmp	r3, r2
   16b14:	bge	16b50 <argp_error@@Base+0xf88>
   16b18:	add	r3, r8, #1
   16b1c:	add	r3, r6, r3
   16b20:	cmp	r7, r3
   16b24:	bne	16b38 <argp_error@@Base+0xf70>
   16b28:	ldr	r3, [r4, #32]
   16b2c:	sub	r3, r3, r7
   16b30:	cmp	r2, r3
   16b34:	ble	16b50 <argp_error@@Base+0xf88>
   16b38:	mov	r5, #0
   16b3c:	ldr	r3, [r4, #12]
   16b40:	cmp	r5, r3
   16b44:	blt	16bb4 <argp_error@@Base+0xfec>
   16b48:	mov	r3, r9
   16b4c:	b	16b64 <argp_error@@Base+0xf9c>
   16b50:	mov	r3, r9
   16b54:	ldr	r1, [r4, #12]
   16b58:	sub	r2, r3, r9
   16b5c:	cmp	r1, r2
   16b60:	bgt	16ba8 <argp_error@@Base+0xfe0>
   16b64:	cmp	r3, r7
   16b68:	bcs	16b84 <argp_error@@Base+0xfbc>
   16b6c:	add	r2, r6, r8
   16b70:	mov	r0, r3
   16b74:	sub	r2, r2, r7
   16b78:	mov	r1, r7
   16b7c:	bl	11154 <memmove@plt>
   16b80:	mov	r3, r0
   16b84:	ldr	r2, [r4, #12]
   16b88:	sub	r6, r7, r6
   16b8c:	sub	r6, r8, r6
   16b90:	cmp	r2, #0
   16b94:	add	r6, r3, r6
   16b98:	mvneq	r2, #0
   16b9c:	str	r6, [r4, #28]
   16ba0:	str	r2, [r4, #20]
   16ba4:	b	1693c <argp_error@@Base+0xd74>
   16ba8:	mov	r2, #32
   16bac:	strb	r2, [r3], #1
   16bb0:	b	16b54 <argp_error@@Base+0xf8c>
   16bb4:	ldr	r1, [r4]
   16bb8:	mov	r0, #32
   16bbc:	bl	11430 <putc_unlocked@plt>
   16bc0:	add	r5, r5, #1
   16bc4:	b	16b3c <argp_error@@Base+0xf74>
   16bc8:	push	{r4, lr}
   16bcc:	mov	r4, r0
   16bd0:	bl	167b8 <argp_error@@Base+0xbf0>
   16bd4:	ldr	r2, [r4, #28]
   16bd8:	ldr	r0, [r4, #24]
   16bdc:	cmp	r2, r0
   16be0:	bls	16bf4 <argp_error@@Base+0x102c>
   16be4:	ldr	r3, [r4]
   16be8:	sub	r2, r2, r0
   16bec:	mov	r1, #1
   16bf0:	bl	111a8 <fwrite_unlocked@plt>
   16bf4:	ldr	r0, [r4, #24]
   16bf8:	bl	12a48 <argp_parse@@Base+0xa9c>
   16bfc:	mov	r0, r4
   16c00:	pop	{r4, lr}
   16c04:	b	12a48 <argp_parse@@Base+0xa9c>
   16c08:	ldr	r3, [r0, #32]
   16c0c:	ldr	r2, [r0, #28]
   16c10:	sub	r3, r3, r2
   16c14:	cmp	r3, r1
   16c18:	bcc	16c24 <argp_error@@Base+0x105c>
   16c1c:	mov	r0, #1
   16c20:	bx	lr
   16c24:	push	{r4, r5, r6, lr}
   16c28:	mov	r4, r0
   16c2c:	mov	r5, r1
   16c30:	bl	167b8 <argp_error@@Base+0xbf0>
   16c34:	ldr	r0, [r4, #24]
   16c38:	ldr	r2, [r4, #28]
   16c3c:	ldr	r3, [r4]
   16c40:	sub	r2, r2, r0
   16c44:	mov	r1, #1
   16c48:	bl	111a8 <fwrite_unlocked@plt>
   16c4c:	ldr	r2, [r4, #28]
   16c50:	mov	r1, r0
   16c54:	ldr	r0, [r4, #24]
   16c58:	sub	r3, r2, r0
   16c5c:	cmp	r1, r3
   16c60:	bne	16c88 <argp_error@@Base+0x10c0>
   16c64:	ldr	r1, [r4, #32]
   16c68:	mov	r3, #0
   16c6c:	sub	r1, r1, r0
   16c70:	cmp	r5, r1
   16c74:	str	r0, [r4, #28]
   16c78:	str	r3, [r4, #16]
   16c7c:	bhi	16cb0 <argp_error@@Base+0x10e8>
   16c80:	mov	r0, #1
   16c84:	pop	{r4, r5, r6, pc}
   16c88:	ldr	r3, [r4, #16]
   16c8c:	sub	r2, r2, r1
   16c90:	sub	r3, r3, r1
   16c94:	str	r2, [r4, #28]
   16c98:	str	r3, [r4, #16]
   16c9c:	sub	r2, r2, r0
   16ca0:	add	r1, r0, r1
   16ca4:	bl	11154 <memmove@plt>
   16ca8:	mov	r0, #0
   16cac:	pop	{r4, r5, r6, pc}
   16cb0:	adds	r5, r5, r1
   16cb4:	bcc	16cc8 <argp_error@@Base+0x1100>
   16cb8:	bl	112e0 <__errno_location@plt>
   16cbc:	mov	r3, #12
   16cc0:	str	r3, [r0]
   16cc4:	b	16ca8 <argp_error@@Base+0x10e0>
   16cc8:	mov	r1, r5
   16ccc:	bl	16d60 <argp_error@@Base+0x1198>
   16cd0:	cmp	r0, #0
   16cd4:	beq	16cb8 <argp_error@@Base+0x10f0>
   16cd8:	add	r5, r0, r5
   16cdc:	str	r0, [r4, #24]
   16ce0:	str	r5, [r4, #32]
   16ce4:	str	r0, [r4, #28]
   16ce8:	b	16c80 <argp_error@@Base+0x10b8>
   16cec:	push	{r1, r2, r3}
   16cf0:	push	{r0, r1, r2, r4, r5, r6, lr}
   16cf4:	mov	r4, r0
   16cf8:	mov	r1, #150	; 0x96
   16cfc:	add	r6, sp, #32
   16d00:	mov	r0, r4
   16d04:	bl	16c08 <argp_error@@Base+0x1040>
   16d08:	cmp	r0, #0
   16d0c:	bne	16d24 <argp_error@@Base+0x115c>
   16d10:	mvn	r0, #0
   16d14:	add	sp, sp, #12
   16d18:	pop	{r4, r5, r6, lr}
   16d1c:	add	sp, sp, #12
   16d20:	bx	lr
   16d24:	ldr	r0, [r4, #28]
   16d28:	ldr	r5, [r4, #32]
   16d2c:	mov	r3, r6
   16d30:	sub	r5, r5, r0
   16d34:	ldr	r2, [sp, #28]
   16d38:	mov	r1, r5
   16d3c:	str	r6, [sp, #4]
   16d40:	bl	113b8 <vsnprintf@plt>
   16d44:	cmp	r5, r0
   16d48:	addls	r1, r0, #1
   16d4c:	bls	16d00 <argp_error@@Base+0x1138>
   16d50:	ldr	r3, [r4, #28]
   16d54:	add	r3, r3, r0
   16d58:	str	r3, [r4, #28]
   16d5c:	b	16d14 <argp_error@@Base+0x114c>
   16d60:	cmp	r0, #0
   16d64:	push	{r4, lr}
   16d68:	mov	r4, r1
   16d6c:	bne	16d7c <argp_error@@Base+0x11b4>
   16d70:	mov	r0, r1
   16d74:	pop	{r4, lr}
   16d78:	b	12fc8 <argp_parse@@Base+0x101c>
   16d7c:	cmp	r1, #0
   16d80:	bne	16d90 <argp_error@@Base+0x11c8>
   16d84:	bl	12a48 <argp_parse@@Base+0xa9c>
   16d88:	mov	r0, #0
   16d8c:	pop	{r4, pc}
   16d90:	cmp	r1, #0
   16d94:	blt	16da4 <argp_error@@Base+0x11dc>
   16d98:	mov	r3, #0
   16d9c:	cmp	r3, r3
   16da0:	beq	16db4 <argp_error@@Base+0x11ec>
   16da4:	bl	112e0 <__errno_location@plt>
   16da8:	mov	r3, #12
   16dac:	str	r3, [r0]
   16db0:	b	16d88 <argp_error@@Base+0x11c0>
   16db4:	pop	{r4, lr}
   16db8:	b	111d8 <realloc@plt>
   16dbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16dc0:	mov	r7, r0
   16dc4:	ldr	r6, [pc, #72]	; 16e14 <argp_error@@Base+0x124c>
   16dc8:	ldr	r5, [pc, #72]	; 16e18 <argp_error@@Base+0x1250>
   16dcc:	add	r6, pc, r6
   16dd0:	add	r5, pc, r5
   16dd4:	sub	r6, r6, r5
   16dd8:	mov	r8, r1
   16ddc:	mov	r9, r2
   16de0:	bl	110ec <fputs_unlocked@plt-0x20>
   16de4:	asrs	r6, r6, #2
   16de8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16dec:	mov	r4, #0
   16df0:	add	r4, r4, #1
   16df4:	ldr	r3, [r5], #4
   16df8:	mov	r2, r9
   16dfc:	mov	r1, r8
   16e00:	mov	r0, r7
   16e04:	blx	r3
   16e08:	cmp	r6, r4
   16e0c:	bne	16df0 <argp_error@@Base+0x1228>
   16e10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e14:	andeq	r1, r1, ip, lsr #2
   16e18:	andeq	r1, r1, r4, lsr #2
   16e1c:	bx	lr

Disassembly of section .fini:

00016e20 <.fini>:
   16e20:	push	{r3, lr}
   16e24:	pop	{r3, pc}
