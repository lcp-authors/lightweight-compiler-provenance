
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011954 <.init>:
   11954:	push	{r3, lr}
   11958:	bl	11e60 <__assert_fail@plt+0x48>
   1195c:	pop	{r3, pc}

Disassembly of section .plt:

00011960 <calloc@plt-0x14>:
   11960:	push	{lr}		; (str lr, [sp, #-4]!)
   11964:	ldr	lr, [pc, #4]	; 11970 <calloc@plt-0x4>
   11968:	add	lr, pc, lr
   1196c:	ldr	pc, [lr, #8]!
   11970:	muleq	r1, r0, r6

00011974 <calloc@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #118784	; 0x1d000
   1197c:	ldr	pc, [ip, #1680]!	; 0x690

00011980 <fputs_unlocked@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #118784	; 0x1d000
   11988:	ldr	pc, [ip, #1672]!	; 0x688

0001198c <fsync@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #118784	; 0x1d000
   11994:	ldr	pc, [ip, #1664]!	; 0x680

00011998 <strcmp@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #118784	; 0x1d000
   119a0:	ldr	pc, [ip, #1656]!	; 0x678

000119a4 <strtol@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #118784	; 0x1d000
   119ac:	ldr	pc, [ip, #1648]!	; 0x670

000119b0 <setsockopt@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #118784	; 0x1d000
   119b8:	ldr	pc, [ip, #1640]!	; 0x668

000119bc <pause@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #118784	; 0x1d000
   119c4:	ldr	pc, [ip, #1632]!	; 0x660

000119c8 <printf@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #118784	; 0x1d000
   119d0:	ldr	pc, [ip, #1624]!	; 0x658

000119d4 <read@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #118784	; 0x1d000
   119dc:	ldr	pc, [ip, #1616]!	; 0x650

000119e0 <fflush@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #118784	; 0x1d000
   119e8:	ldr	pc, [ip, #1608]!	; 0x648

000119ec <utmpxname@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #118784	; 0x1d000
   119f4:	ldr	pc, [ip, #1600]!	; 0x640

000119f8 <sigprocmask@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #118784	; 0x1d000
   11a00:	ldr	pc, [ip, #1592]!	; 0x638

00011a04 <memmove@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #118784	; 0x1d000
   11a0c:	ldr	pc, [ip, #1584]!	; 0x630

00011a10 <strchrnul@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #118784	; 0x1d000
   11a18:	ldr	pc, [ip, #1576]!	; 0x628

00011a1c <free@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #118784	; 0x1d000
   11a24:	ldr	pc, [ip, #1568]!	; 0x620

00011a28 <gai_strerror@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #118784	; 0x1d000
   11a30:	ldr	pc, [ip, #1560]!	; 0x618

00011a34 <fgets@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #118784	; 0x1d000
   11a3c:	ldr	pc, [ip, #1552]!	; 0x610

00011a40 <strndup@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #118784	; 0x1d000
   11a48:	ldr	pc, [ip, #1544]!	; 0x608

00011a4c <_exit@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #118784	; 0x1d000
   11a54:	ldr	pc, [ip, #1536]!	; 0x600

00011a58 <memcpy@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #118784	; 0x1d000
   11a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00011a64 <signal@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #118784	; 0x1d000
   11a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00011a70 <time@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #118784	; 0x1d000
   11a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00011a7c <fwrite_unlocked@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #118784	; 0x1d000
   11a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00011a88 <sleep@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #118784	; 0x1d000
   11a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00011a94 <ctime@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #118784	; 0x1d000
   11a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00011aa0 <recvfrom@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #118784	; 0x1d000
   11aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00011aac <strdup@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #118784	; 0x1d000
   11ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00011ab8 <setutxent@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #118784	; 0x1d000
   11ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00011ac4 <alarm@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #118784	; 0x1d000
   11acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00011ad0 <sysconf@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #118784	; 0x1d000
   11ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00011adc <unlink@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #118784	; 0x1d000
   11ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00011ae8 <dup2@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #118784	; 0x1d000
   11af0:	ldr	pc, [ip, #1432]!	; 0x598

00011af4 <realloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #118784	; 0x1d000
   11afc:	ldr	pc, [ip, #1424]!	; 0x590

00011b00 <chdir@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #118784	; 0x1d000
   11b08:	ldr	pc, [ip, #1416]!	; 0x588

00011b0c <strcasecmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #118784	; 0x1d000
   11b14:	ldr	pc, [ip, #1408]!	; 0x580

00011b18 <funlockfile@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #118784	; 0x1d000
   11b20:	ldr	pc, [ip, #1400]!	; 0x578

00011b24 <poll@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #118784	; 0x1d000
   11b2c:	ldr	pc, [ip, #1392]!	; 0x570

00011b30 <sigaction@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #118784	; 0x1d000
   11b38:	ldr	pc, [ip, #1384]!	; 0x568

00011b3c <fwrite@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #118784	; 0x1d000
   11b44:	ldr	pc, [ip, #1376]!	; 0x560

00011b48 <strcat@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #118784	; 0x1d000
   11b50:	ldr	pc, [ip, #1368]!	; 0x558

00011b54 <waitpid@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #118784	; 0x1d000
   11b5c:	ldr	pc, [ip, #1360]!	; 0x550

00011b60 <strcpy@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #118784	; 0x1d000
   11b68:	ldr	pc, [ip, #1352]!	; 0x548

00011b6c <error@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #118784	; 0x1d000
   11b74:	ldr	pc, [ip, #1344]!	; 0x540

00011b78 <gethostname@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #118784	; 0x1d000
   11b80:	ldr	pc, [ip, #1336]!	; 0x538

00011b84 <opendir@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #118784	; 0x1d000
   11b8c:	ldr	pc, [ip, #1328]!	; 0x530

00011b90 <open64@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #118784	; 0x1d000
   11b98:	ldr	pc, [ip, #1320]!	; 0x528

00011b9c <getenv@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #118784	; 0x1d000
   11ba4:	ldr	pc, [ip, #1312]!	; 0x520

00011ba8 <malloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #118784	; 0x1d000
   11bb0:	ldr	pc, [ip, #1304]!	; 0x518

00011bb4 <sigaddset@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #118784	; 0x1d000
   11bbc:	ldr	pc, [ip, #1296]!	; 0x510

00011bc0 <__libc_start_main@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #118784	; 0x1d000
   11bc8:	ldr	pc, [ip, #1288]!	; 0x508

00011bcc <strerror@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #118784	; 0x1d000
   11bd4:	ldr	pc, [ip, #1280]!	; 0x500

00011bd8 <__ctype_tolower_loc@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #118784	; 0x1d000
   11be0:	ldr	pc, [ip, #1272]!	; 0x4f8

00011be4 <__gmon_start__@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #118784	; 0x1d000
   11bec:	ldr	pc, [ip, #1264]!	; 0x4f0

00011bf0 <kill@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #118784	; 0x1d000
   11bf8:	ldr	pc, [ip, #1256]!	; 0x4e8

00011bfc <__ctype_b_loc@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #118784	; 0x1d000
   11c04:	ldr	pc, [ip, #1248]!	; 0x4e0

00011c08 <getpid@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #118784	; 0x1d000
   11c10:	ldr	pc, [ip, #1240]!	; 0x4d8

00011c14 <exit@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #118784	; 0x1d000
   11c1c:	ldr	pc, [ip, #1232]!	; 0x4d0

00011c20 <strlen@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #118784	; 0x1d000
   11c28:	ldr	pc, [ip, #1224]!	; 0x4c8

00011c2c <setsid@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #118784	; 0x1d000
   11c34:	ldr	pc, [ip, #1216]!	; 0x4c0

00011c38 <strchr@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #118784	; 0x1d000
   11c40:	ldr	pc, [ip, #1208]!	; 0x4b8

00011c44 <fprintf@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #118784	; 0x1d000
   11c4c:	ldr	pc, [ip, #1200]!	; 0x4b0

00011c50 <__errno_location@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #118784	; 0x1d000
   11c58:	ldr	pc, [ip, #1192]!	; 0x4a8

00011c5c <snprintf@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #118784	; 0x1d000
   11c64:	ldr	pc, [ip, #1184]!	; 0x4a0

00011c68 <strerror_r@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #118784	; 0x1d000
   11c70:	ldr	pc, [ip, #1176]!	; 0x498

00011c74 <bind@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #118784	; 0x1d000
   11c7c:	ldr	pc, [ip, #1168]!	; 0x490

00011c80 <setvbuf@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #118784	; 0x1d000
   11c88:	ldr	pc, [ip, #1160]!	; 0x488

00011c8c <memset@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #118784	; 0x1d000
   11c94:	ldr	pc, [ip, #1152]!	; 0x480

00011c98 <strncpy@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #118784	; 0x1d000
   11ca0:	ldr	pc, [ip, #1144]!	; 0x478

00011ca4 <asprintf@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #118784	; 0x1d000
   11cac:	ldr	pc, [ip, #1136]!	; 0x470

00011cb0 <memchr@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #118784	; 0x1d000
   11cb8:	ldr	pc, [ip, #1128]!	; 0x468

00011cbc <writev@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #118784	; 0x1d000
   11cc4:	ldr	pc, [ip, #1120]!	; 0x460

00011cc8 <fclose@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #118784	; 0x1d000
   11cd0:	ldr	pc, [ip, #1112]!	; 0x458

00011cd4 <fcntl64@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #118784	; 0x1d000
   11cdc:	ldr	pc, [ip, #1104]!	; 0x450

00011ce0 <sendto@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #118784	; 0x1d000
   11ce8:	ldr	pc, [ip, #1096]!	; 0x448

00011cec <endutxent@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #118784	; 0x1d000
   11cf4:	ldr	pc, [ip, #1088]!	; 0x440

00011cf8 <__overflow@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #118784	; 0x1d000
   11d00:	ldr	pc, [ip, #1080]!	; 0x438

00011d04 <sigemptyset@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #118784	; 0x1d000
   11d0c:	ldr	pc, [ip, #1072]!	; 0x430

00011d10 <fork@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #118784	; 0x1d000
   11d18:	ldr	pc, [ip, #1064]!	; 0x428

00011d1c <getnameinfo@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #118784	; 0x1d000
   11d24:	ldr	pc, [ip, #1056]!	; 0x420

00011d28 <strrchr@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #118784	; 0x1d000
   11d30:	ldr	pc, [ip, #1048]!	; 0x418

00011d34 <vfprintf@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #118784	; 0x1d000
   11d3c:	ldr	pc, [ip, #1040]!	; 0x410

00011d40 <fputc@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #118784	; 0x1d000
   11d48:	ldr	pc, [ip, #1032]!	; 0x408

00011d4c <readdir64@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #118784	; 0x1d000
   11d54:	ldr	pc, [ip, #1024]!	; 0x400

00011d58 <flockfile@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #118784	; 0x1d000
   11d60:	ldr	pc, [ip, #1016]!	; 0x3f8

00011d64 <vsnprintf@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #118784	; 0x1d000
   11d6c:	ldr	pc, [ip, #1008]!	; 0x3f0

00011d70 <fopen64@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #118784	; 0x1d000
   11d78:	ldr	pc, [ip, #1000]!	; 0x3e8

00011d7c <qsort@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #118784	; 0x1d000
   11d84:	ldr	pc, [ip, #992]!	; 0x3e0

00011d88 <strpbrk@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #118784	; 0x1d000
   11d90:	ldr	pc, [ip, #984]!	; 0x3d8

00011d94 <freeaddrinfo@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #118784	; 0x1d000
   11d9c:	ldr	pc, [ip, #976]!	; 0x3d0

00011da0 <getaddrinfo@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #118784	; 0x1d000
   11da8:	ldr	pc, [ip, #968]!	; 0x3c8

00011dac <socket@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #118784	; 0x1d000
   11db4:	ldr	pc, [ip, #960]!	; 0x3c0

00011db8 <chmod@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #118784	; 0x1d000
   11dc0:	ldr	pc, [ip, #952]!	; 0x3b8

00011dc4 <__xstat64@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #118784	; 0x1d000
   11dcc:	ldr	pc, [ip, #944]!	; 0x3b0

00011dd0 <isatty@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #118784	; 0x1d000
   11dd8:	ldr	pc, [ip, #936]!	; 0x3a8

00011ddc <strncmp@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #118784	; 0x1d000
   11de4:	ldr	pc, [ip, #928]!	; 0x3a0

00011de8 <abort@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #118784	; 0x1d000
   11df0:	ldr	pc, [ip, #920]!	; 0x398

00011df4 <getutxent@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #118784	; 0x1d000
   11dfc:	ldr	pc, [ip, #912]!	; 0x390

00011e00 <close@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #118784	; 0x1d000
   11e08:	ldr	pc, [ip, #904]!	; 0x388

00011e0c <closedir@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #118784	; 0x1d000
   11e14:	ldr	pc, [ip, #896]!	; 0x380

00011e18 <__assert_fail@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #118784	; 0x1d000
   11e20:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00011e24 <daemon@@Base-0x3ef0>:
   11e24:	mov	fp, #0
   11e28:	mov	lr, #0
   11e2c:	pop	{r1}		; (ldr r1, [sp], #4)
   11e30:	mov	r2, sp
   11e34:	push	{r2}		; (str r2, [sp, #-4]!)
   11e38:	push	{r0}		; (str r0, [sp, #-4]!)
   11e3c:	ldr	ip, [pc, #16]	; 11e54 <__assert_fail@plt+0x3c>
   11e40:	push	{ip}		; (str ip, [sp, #-4]!)
   11e44:	ldr	r0, [pc, #12]	; 11e58 <__assert_fail@plt+0x40>
   11e48:	ldr	r3, [pc, #12]	; 11e5c <__assert_fail@plt+0x44>
   11e4c:	bl	11bc0 <__libc_start_main@plt>
   11e50:	bl	11de8 <abort@plt>
   11e54:	andeq	sp, r1, r0, lsl r5
   11e58:	andeq	r1, r1, r4, lsl pc
   11e5c:			; <UNDEFINED> instruction: 0x0001d4b0
   11e60:	ldr	r3, [pc, #20]	; 11e7c <__assert_fail@plt+0x64>
   11e64:	ldr	r2, [pc, #20]	; 11e80 <__assert_fail@plt+0x68>
   11e68:	add	r3, pc, r3
   11e6c:	ldr	r2, [r3, r2]
   11e70:	cmp	r2, #0
   11e74:	bxeq	lr
   11e78:	b	11be4 <__gmon_start__@plt>
   11e7c:	muleq	r1, r0, r1
   11e80:	muleq	r0, ip, r1
   11e84:	ldr	r0, [pc, #24]	; 11ea4 <__assert_fail@plt+0x8c>
   11e88:	ldr	r3, [pc, #24]	; 11ea8 <__assert_fail@plt+0x90>
   11e8c:	cmp	r3, r0
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #16]	; 11eac <__assert_fail@plt+0x94>
   11e98:	cmp	r3, #0
   11e9c:	bxeq	lr
   11ea0:	bx	r3
   11ea4:			; <UNDEFINED> instruction: 0x0002f5b4
   11ea8:			; <UNDEFINED> instruction: 0x0002f5b4
   11eac:	andeq	r0, r0, r0
   11eb0:	ldr	r0, [pc, #36]	; 11edc <__assert_fail@plt+0xc4>
   11eb4:	ldr	r1, [pc, #36]	; 11ee0 <__assert_fail@plt+0xc8>
   11eb8:	sub	r1, r1, r0
   11ebc:	asr	r1, r1, #2
   11ec0:	add	r1, r1, r1, lsr #31
   11ec4:	asrs	r1, r1, #1
   11ec8:	bxeq	lr
   11ecc:	ldr	r3, [pc, #16]	; 11ee4 <__assert_fail@plt+0xcc>
   11ed0:	cmp	r3, #0
   11ed4:	bxeq	lr
   11ed8:	bx	r3
   11edc:			; <UNDEFINED> instruction: 0x0002f5b4
   11ee0:			; <UNDEFINED> instruction: 0x0002f5b4
   11ee4:	andeq	r0, r0, r0
   11ee8:	push	{r4, lr}
   11eec:	ldr	r4, [pc, #24]	; 11f0c <__assert_fail@plt+0xf4>
   11ef0:	ldrb	r3, [r4]
   11ef4:	cmp	r3, #0
   11ef8:	popne	{r4, pc}
   11efc:	bl	11e84 <__assert_fail@plt+0x6c>
   11f00:	mov	r3, #1
   11f04:	strb	r3, [r4]
   11f08:	pop	{r4, pc}
   11f0c:	andeq	pc, r2, r8, asr #11
   11f10:	b	11eb0 <__assert_fail@plt+0x98>
   11f14:	push	{r4, r5, fp, lr}
   11f18:	add	fp, sp, #8
   11f1c:	sub	sp, sp, #312	; 0x138
   11f20:	sub	sp, sp, #2048	; 0x800
   11f24:	mov	r5, r0
   11f28:	ldr	r0, [r1]
   11f2c:	mov	r4, r1
   11f30:	bl	1ae68 <argp_parse@@Base+0x15a0>
   11f34:	movw	sl, #64544	; 0xfc20
   11f38:	movw	r6, #64640	; 0xfc80
   11f3c:	mov	r1, #8
   11f40:	movt	sl, #2
   11f44:	movt	r6, #2
   11f48:	ldr	r0, [sl]
   11f4c:	add	r1, r1, r0, lsl #3
   11f50:	ldr	r0, [r6]
   11f54:	bl	1bc7c <argp_parse@@Base+0x23b4>
   11f58:	cmp	r0, #0
   11f5c:	str	r0, [r6]
   11f60:	bne	11f80 <__assert_fail@plt+0x168>
   11f64:	bl	11c50 <__errno_location@plt>
   11f68:	ldr	r1, [r0]
   11f6c:	movw	r2, #57795	; 0xe1c3
   11f70:	mov	r0, #1
   11f74:	movt	r2, #1
   11f78:	bl	11b6c <error@plt>
   11f7c:	ldr	r0, [r6]
   11f80:	ldr	r1, [sl]
   11f84:	movw	r2, #57671	; 0xe147
   11f88:	movt	r2, #1
   11f8c:	str	r2, [r0, r1, lsl #3]
   11f90:	ldr	r0, [r6]
   11f94:	add	r0, r0, r1, lsl #3
   11f98:	mvn	r1, #0
   11f9c:	str	r1, [r0, #4]
   11fa0:	movw	r0, #140	; 0x8c
   11fa4:	movw	r1, #54912	; 0xd680
   11fa8:	movt	r0, #3
   11fac:	movt	r1, #1
   11fb0:	str	r1, [r0]
   11fb4:	ldr	r0, [sl]
   11fb8:	movw	r1, #62832	; 0xf570
   11fbc:	movt	r1, #2
   11fc0:	add	r0, r0, #1
   11fc4:	str	r0, [sl]
   11fc8:	movw	r0, #54936	; 0xd698
   11fcc:	movt	r0, #1
   11fd0:	bl	1aaa0 <argp_parse@@Base+0x11d8>
   11fd4:	mov	r0, #0
   11fd8:	mov	r1, r5
   11fdc:	mov	r2, r4
   11fe0:	mov	r3, #0
   11fe4:	str	r0, [sp]
   11fe8:	str	r0, [sp, #4]
   11fec:	movw	r0, #62252	; 0xf32c
   11ff0:	movt	r0, #2
   11ff4:	bl	198c8 <argp_parse@@Base>
   11ff8:	movw	r0, #62928	; 0xf5d0
   11ffc:	movt	r0, #2
   12000:	ldr	r0, [r0]
   12004:	bl	12bf4 <__assert_fail@plt+0xddc>
   12008:	movw	r7, #64572	; 0xfc3c
   1200c:	movt	r7, #2
   12010:	ldr	r0, [r7]
   12014:	cmp	r0, #0
   12018:	beq	12060 <__assert_fail@plt+0x248>
   1201c:	movw	r0, #64548	; 0xfc24
   12020:	mov	r2, #1
   12024:	mov	r3, #0
   12028:	mov	r8, #0
   1202c:	movt	r0, #2
   12030:	ldr	r0, [r0]
   12034:	cmp	r0, #0
   12038:	movwne	r0, #62944	; 0xf5e0
   1203c:	movne	r1, #1
   12040:	movtne	r0, #2
   12044:	strne	r1, [r0]
   12048:	movw	r0, #62916	; 0xf5c4
   1204c:	mov	r1, #0
   12050:	movt	r0, #2
   12054:	ldr	r0, [r0]
   12058:	bl	11c80 <setvbuf@plt>
   1205c:	b	120a4 <__assert_fail@plt+0x28c>
   12060:	movw	r1, #11496	; 0x2ce8
   12064:	mov	r0, #15
   12068:	movt	r1, #1
   1206c:	bl	11a64 <signal@plt>
   12070:	mov	r0, #0
   12074:	mov	r1, #0
   12078:	mov	r2, #30
   1207c:	bl	15bc4 <__assert_fail@plt+0x3dac>
   12080:	mov	r8, r0
   12084:	cmn	r0, #1
   12088:	bgt	120a4 <__assert_fail@plt+0x28c>
   1208c:	bl	11c50 <__errno_location@plt>
   12090:	ldr	r1, [r0]
   12094:	movw	r2, #54944	; 0xd6a0
   12098:	mov	r0, #1
   1209c:	movt	r2, #1
   120a0:	bl	11b6c <error@plt>
   120a4:	bl	15d30 <daemon@@Base+0x1c>
   120a8:	mov	r4, r0
   120ac:	movw	r0, #64568	; 0xfc38
   120b0:	movt	r0, #2
   120b4:	cmp	r4, #0
   120b8:	str	r4, [r0]
   120bc:	bne	120e4 <__assert_fail@plt+0x2cc>
   120c0:	bl	11c50 <__errno_location@plt>
   120c4:	ldr	r1, [r0]
   120c8:	movw	r2, #54968	; 0xd6b8
   120cc:	mov	r0, #1
   120d0:	movt	r2, #1
   120d4:	bl	11b6c <error@plt>
   120d8:	movw	r0, #64568	; 0xfc38
   120dc:	movt	r0, #2
   120e0:	ldr	r4, [r0]
   120e4:	mov	r0, r4
   120e8:	mov	r1, #46	; 0x2e
   120ec:	bl	11c38 <strchr@plt>
   120f0:	cmp	r0, #0
   120f4:	beq	12110 <__assert_fail@plt+0x2f8>
   120f8:	mov	r1, #0
   120fc:	strb	r1, [r0], #1
   12100:	movw	r1, #64564	; 0xfc34
   12104:	movt	r1, #2
   12108:	str	r0, [r1]
   1210c:	b	121b8 <__assert_fail@plt+0x3a0>
   12110:	sub	r2, fp, #1040	; 0x410
   12114:	vmov.i32	q8, #0	; 0x00000000
   12118:	add	r3, sp, #296	; 0x128
   1211c:	mov	r1, #0
   12120:	add	r0, r2, #16
   12124:	vst1.32	{d16-d17}, [r0]
   12128:	add	r0, r2, #4
   1212c:	vst1.32	{d16-d17}, [r0]
   12130:	mov	r0, #2
   12134:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12138:	mov	r0, r4
   1213c:	bl	11da0 <getaddrinfo@plt>
   12140:	cmp	r0, #0
   12144:	bne	12194 <__assert_fail@plt+0x37c>
   12148:	movw	r0, #64568	; 0xfc38
   1214c:	movt	r0, #2
   12150:	mov	r4, r0
   12154:	ldr	r0, [r0]
   12158:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1215c:	ldr	r0, [sp, #296]	; 0x128
   12160:	ldr	r0, [r0, #24]
   12164:	bl	11aac <strdup@plt>
   12168:	mov	r1, #46	; 0x2e
   1216c:	str	r0, [r4]
   12170:	bl	11c38 <strchr@plt>
   12174:	cmp	r0, #0
   12178:	movne	r1, #0
   1217c:	strbne	r1, [r0], #1
   12180:	movwne	r1, #64564	; 0xfc34
   12184:	movtne	r1, #2
   12188:	strne	r0, [r1]
   1218c:	ldr	r0, [sp, #296]	; 0x128
   12190:	bl	11d94 <freeaddrinfo@plt>
   12194:	movw	r4, #64564	; 0xfc34
   12198:	movt	r4, #2
   1219c:	ldr	r0, [r4]
   121a0:	cmp	r0, #0
   121a4:	bne	121b8 <__assert_fail@plt+0x3a0>
   121a8:	movw	r0, #58253	; 0xe38d
   121ac:	movt	r0, #1
   121b0:	bl	11aac <strdup@plt>
   121b4:	str	r0, [r4]
   121b8:	movw	r4, #64076	; 0xfa4c
   121bc:	mov	r0, #3
   121c0:	movt	r4, #2
   121c4:	strh	r0, [r4, #4]
   121c8:	movw	r0, #62164	; 0xf2d4
   121cc:	movt	r0, #2
   121d0:	bl	11aac <strdup@plt>
   121d4:	str	r0, [r4, #40]	; 0x28
   121d8:	movw	r4, #11512	; 0x2cf8
   121dc:	mov	r0, #15
   121e0:	movt	r4, #1
   121e4:	mov	r1, r4
   121e8:	bl	11a64 <signal@plt>
   121ec:	ldr	r0, [r7]
   121f0:	mov	r1, r4
   121f4:	cmp	r0, #0
   121f8:	mov	r0, #2
   121fc:	movweq	r1, #1
   12200:	bl	11a64 <signal@plt>
   12204:	ldr	r0, [r7]
   12208:	cmp	r0, #0
   1220c:	mov	r0, #3
   12210:	movweq	r4, #1
   12214:	mov	r1, r4
   12218:	bl	11a64 <signal@plt>
   1221c:	mov	r0, #268435456	; 0x10000000
   12220:	add	r5, sp, #156	; 0x9c
   12224:	str	r0, [sp, #288]	; 0x120
   12228:	add	r0, r5, #4
   1222c:	bl	11d04 <sigemptyset@plt>
   12230:	movw	r0, #11872	; 0x2e60
   12234:	mov	r1, r5
   12238:	mov	r2, #0
   1223c:	mov	r4, #0
   12240:	movt	r0, #1
   12244:	str	r0, [sp, #156]	; 0x9c
   12248:	mov	r0, #14
   1224c:	bl	11b30 <sigaction@plt>
   12250:	ldr	r0, [r7]
   12254:	movw	r1, #12160	; 0x2f80
   12258:	mov	r2, #0
   1225c:	movt	r1, #1
   12260:	cmp	r0, #0
   12264:	mov	r0, #10
   12268:	movweq	r1, #1
   1226c:	str	r1, [sp, #156]	; 0x9c
   12270:	mov	r1, r5
   12274:	bl	11b30 <sigaction@plt>
   12278:	mov	r0, #30
   1227c:	bl	11ac4 <alarm@plt>
   12280:	ldr	r0, [sl]
   12284:	mov	r1, #24
   12288:	add	r0, r1, r0, lsl #3
   1228c:	bl	1bc4c <argp_parse@@Base+0x2384>
   12290:	mov	r5, r0
   12294:	cmp	r0, #0
   12298:	bne	122b4 <__assert_fail@plt+0x49c>
   1229c:	bl	11c50 <__errno_location@plt>
   122a0:	ldr	r1, [r0]
   122a4:	movw	r2, #54994	; 0xd6d2
   122a8:	mov	r0, #1
   122ac:	movt	r2, #1
   122b0:	bl	11b6c <error@plt>
   122b4:	bl	12fd0 <__assert_fail@plt+0x11b8>
   122b8:	movw	r0, #64060	; 0xfa3c
   122bc:	movt	r0, #2
   122c0:	ldr	r0, [r0]
   122c4:	cmp	r0, #0
   122c8:	bne	12344 <__assert_fail@plt+0x52c>
   122cc:	movw	r0, #57338	; 0xdffa
   122d0:	mov	r1, #0
   122d4:	mov	r2, #0
   122d8:	mov	r4, #0
   122dc:	movt	r0, #1
   122e0:	bl	11b90 <open64@plt>
   122e4:	movw	r1, #62240	; 0xf320
   122e8:	cmp	r0, #0
   122ec:	movt	r1, #2
   122f0:	str	r0, [r1]
   122f4:	blt	12320 <__assert_fail@plt+0x508>
   122f8:	mov	r1, #3
   122fc:	strh	r1, [r5, #4]
   12300:	movw	r1, #57338	; 0xdffa
   12304:	str	r0, [r5]
   12308:	movw	r0, #55018	; 0xd6ea
   1230c:	movt	r0, #1
   12310:	movt	r1, #1
   12314:	bl	133c0 <__assert_fail@plt+0x15a8>
   12318:	mov	r4, #1
   1231c:	b	12344 <__assert_fail@plt+0x52c>
   12320:	bl	11c50 <__errno_location@plt>
   12324:	ldr	r0, [r0]
   12328:	bl	11bcc <strerror@plt>
   1232c:	movw	r1, #57338	; 0xdffa
   12330:	mov	r2, r0
   12334:	movw	r0, #55032	; 0xd6f8
   12338:	movt	r0, #1
   1233c:	movt	r1, #1
   12340:	bl	133c0 <__assert_fail@plt+0x15a8>
   12344:	movw	r0, #64552	; 0xfc28
   12348:	str	r8, [sp, #8]
   1234c:	movt	r0, #2
   12350:	ldr	r0, [r0]
   12354:	cmp	r0, #0
   12358:	bne	12564 <__assert_fail@plt+0x74c>
   1235c:	ldr	r0, [sl]
   12360:	cmp	r0, #0
   12364:	beq	12564 <__assert_fail@plt+0x74c>
   12368:	add	r0, sp, #296	; 0x128
   1236c:	mov	r8, #0
   12370:	vmov.i32	q4, #0	; 0x00000000
   12374:	orr	r0, r0, #2
   12378:	add	r1, r0, #80	; 0x50
   1237c:	str	r0, [sp, #20]
   12380:	add	r0, r0, #64	; 0x40
   12384:	str	r1, [sp, #16]
   12388:	str	r0, [sp, #12]
   1238c:	ldr	r0, [r6]
   12390:	mvn	r7, #0
   12394:	ldr	r9, [r0, r8, lsl #3]
   12398:	ldrb	r0, [r9]
   1239c:	cmp	r0, #0
   123a0:	beq	124ec <__assert_fail@plt+0x6d4>
   123a4:	mov	r0, r9
   123a8:	bl	11c20 <strlen@plt>
   123ac:	cmp	r0, #108	; 0x6c
   123b0:	bcc	123e4 <__assert_fail@plt+0x5cc>
   123b4:	movw	r2, #57834	; 0xe1ea
   123b8:	mov	r6, sl
   123bc:	sub	sl, fp, #1040	; 0x410
   123c0:	movw	r1, #1025	; 0x401
   123c4:	mov	r3, r9
   123c8:	mov	r0, sl
   123cc:	movt	r2, #1
   123d0:	bl	11c5c <snprintf@plt>
   123d4:	mov	r0, sl
   123d8:	mov	sl, r6
   123dc:	bl	13448 <__assert_fail@plt+0x1630>
   123e0:	b	124ec <__assert_fail@plt+0x6d4>
   123e4:	mov	r0, r9
   123e8:	bl	11adc <unlink@plt>
   123ec:	ldr	r0, [sp, #16]
   123f0:	mov	r2, #92	; 0x5c
   123f4:	add	lr, sp, #256	; 0x100
   123f8:	vst1.16	{d8-d9}, [r0]
   123fc:	ldr	r0, [sp, #12]
   12400:	vst1.16	{d8-d9}, [r0]
   12404:	ldr	r0, [sp, #20]
   12408:	add	r1, r0, #48	; 0x30
   1240c:	vst1.16	{d8-d9}, [r1]
   12410:	add	r1, r0, #32
   12414:	vst1.16	{d8-d9}, [r1]
   12418:	add	r1, r0, #16
   1241c:	vst1.16	{d8-d9}, [r1]
   12420:	mov	r1, r0
   12424:	vst1.16	{d8-d9}, [r1], r2
   12428:	mov	r2, #107	; 0x6b
   1242c:	vst1.16	{d8-d9}, [r1]
   12430:	mov	r1, #1
   12434:	strh	r1, [lr, #40]	; 0x28
   12438:	mov	r1, r9
   1243c:	bl	11c98 <strncpy@plt>
   12440:	mov	r0, #1
   12444:	mov	r1, #2
   12448:	mov	r2, #0
   1244c:	bl	11dac <socket@plt>
   12450:	mov	sl, r0
   12454:	cmp	r0, #0
   12458:	blt	12498 <__assert_fail@plt+0x680>
   1245c:	ldr	r0, [sp, #20]
   12460:	bl	11c20 <strlen@plt>
   12464:	add	r2, r0, #2
   12468:	mov	r0, sl
   1246c:	add	r1, sp, #296	; 0x128
   12470:	bl	11c74 <bind@plt>
   12474:	cmp	r0, #0
   12478:	blt	12498 <__assert_fail@plt+0x680>
   1247c:	mov	r0, r9
   12480:	movw	r1, #438	; 0x1b6
   12484:	bl	11db8 <chmod@plt>
   12488:	cmn	r0, #1
   1248c:	ble	12498 <__assert_fail@plt+0x680>
   12490:	mov	r7, sl
   12494:	b	124e4 <__assert_fail@plt+0x6cc>
   12498:	movw	r2, #57864	; 0xe208
   1249c:	sub	r6, fp, #1040	; 0x410
   124a0:	movw	r1, #1025	; 0x401
   124a4:	mov	r3, r9
   124a8:	mov	r0, r6
   124ac:	movt	r2, #1
   124b0:	bl	11c5c <snprintf@plt>
   124b4:	mov	r0, r6
   124b8:	bl	13448 <__assert_fail@plt+0x1630>
   124bc:	bl	11c50 <__errno_location@plt>
   124c0:	ldr	r0, [r0]
   124c4:	bl	11bcc <strerror@plt>
   124c8:	mov	r2, r0
   124cc:	movw	r0, #57881	; 0xe219
   124d0:	mov	r1, r9
   124d4:	movt	r0, #1
   124d8:	bl	133c0 <__assert_fail@plt+0x15a8>
   124dc:	mov	r0, sl
   124e0:	bl	11e00 <close@plt>
   124e4:	movw	sl, #64544	; 0xfc20
   124e8:	movt	sl, #2
   124ec:	movw	r6, #64640	; 0xfc80
   124f0:	cmp	r7, #0
   124f4:	movt	r6, #2
   124f8:	ldr	r0, [r6]
   124fc:	add	r1, r0, r8, lsl #3
   12500:	str	r7, [r1, #4]
   12504:	blt	12530 <__assert_fail@plt+0x718>
   12508:	mov	r1, r5
   1250c:	mov	r2, #3
   12510:	str	r7, [r1, r4, lsl #3]!
   12514:	strh	r2, [r1, #4]
   12518:	ldr	r1, [r0, r8, lsl #3]
   1251c:	movw	r0, #55051	; 0xd70b
   12520:	movt	r0, #1
   12524:	bl	133c0 <__assert_fail@plt+0x15a8>
   12528:	add	r4, r4, #1
   1252c:	b	12554 <__assert_fail@plt+0x73c>
   12530:	ldr	r7, [r0, r8, lsl #3]
   12534:	bl	11c50 <__errno_location@plt>
   12538:	ldr	r0, [r0]
   1253c:	bl	11bcc <strerror@plt>
   12540:	mov	r2, r0
   12544:	movw	r0, #55032	; 0xd6f8
   12548:	mov	r1, r7
   1254c:	movt	r0, #1
   12550:	bl	133c0 <__assert_fail@plt+0x15a8>
   12554:	ldr	r0, [sl]
   12558:	add	r8, r8, #1
   1255c:	cmp	r8, r0
   12560:	bcc	1238c <__assert_fail@plt+0x574>
   12564:	movw	r0, #64064	; 0xfa40
   12568:	movt	r0, #2
   1256c:	ldr	r0, [r0]
   12570:	cmp	r0, #0
   12574:	beq	12698 <__assert_fail@plt+0x880>
   12578:	movw	r9, #62232	; 0xf318
   1257c:	mvn	r1, #0
   12580:	movw	r0, #62228	; 0xf314
   12584:	movt	r9, #2
   12588:	movt	r0, #2
   1258c:	str	r1, [r9]
   12590:	str	r1, [r9, #4]
   12594:	movw	r1, #62932	; 0xf5d4
   12598:	ldr	r0, [r0]
   1259c:	movt	r1, #2
   125a0:	ldr	r1, [r1]
   125a4:	cmp	r1, #0
   125a8:	beq	12604 <__assert_fail@plt+0x7ec>
   125ac:	sub	r2, fp, #1040	; 0x410
   125b0:	mov	r7, #0
   125b4:	vmov.i32	q8, #0	; 0x00000000
   125b8:	add	r3, r2, #12
   125bc:	str	r7, [fp, #-1012]	; 0xfffffc0c
   125c0:	vst1.32	{d16-d17}, [r3]
   125c4:	str	r0, [fp, #-1036]	; 0xfffffbf4
   125c8:	mov	r0, #2
   125cc:	add	r3, sp, #296	; 0x128
   125d0:	str	r0, [fp, #-1032]	; 0xfffffbf8
   125d4:	mov	r0, #1
   125d8:	str	r0, [fp, #-1040]	; 0xfffffbf0
   125dc:	movw	r0, #62924	; 0xf5cc
   125e0:	movt	r0, #2
   125e4:	ldr	r0, [r0]
   125e8:	bl	11da0 <getaddrinfo@plt>
   125ec:	cmp	r0, #0
   125f0:	beq	12ae4 <__assert_fail@plt+0xccc>
   125f4:	movw	r0, #57938	; 0xe252
   125f8:	movt	r0, #1
   125fc:	bl	13448 <__assert_fail@plt+0x1630>
   12600:	b	12610 <__assert_fail@plt+0x7f8>
   12604:	movw	r0, #57903	; 0xe22f
   12608:	movt	r0, #1
   1260c:	bl	133c0 <__assert_fail@plt+0x15a8>
   12610:	ldr	r0, [r9]
   12614:	cmp	r0, #0
   12618:	blt	1263c <__assert_fail@plt+0x824>
   1261c:	mov	r1, r5
   12620:	str	r0, [r1, r4, lsl #3]!
   12624:	mov	r0, #3
   12628:	strh	r0, [r1, #4]
   1262c:	movw	r0, #55077	; 0xd725
   12630:	movt	r0, #1
   12634:	bl	133c0 <__assert_fail@plt+0x15a8>
   12638:	add	r4, r4, #1
   1263c:	ldr	r0, [r9, #4]
   12640:	cmp	r0, #0
   12644:	blt	1266c <__assert_fail@plt+0x854>
   12648:	mov	r1, r5
   1264c:	str	r0, [r1, r4, lsl #3]!
   12650:	mov	r0, #3
   12654:	strh	r0, [r1, #4]
   12658:	movw	r0, #55107	; 0xd743
   1265c:	movt	r0, #1
   12660:	bl	133c0 <__assert_fail@plt+0x15a8>
   12664:	ldr	r0, [r9, #4]
   12668:	add	r4, r4, #1
   1266c:	ldr	r1, [r9]
   12670:	and	r0, r0, r1
   12674:	cmn	r0, #1
   12678:	bgt	12698 <__assert_fail@plt+0x880>
   1267c:	bl	11c50 <__errno_location@plt>
   12680:	ldr	r0, [r0]
   12684:	bl	11bcc <strerror@plt>
   12688:	mov	r1, r0
   1268c:	movw	r0, #55137	; 0xd761
   12690:	movt	r0, #1
   12694:	bl	133c0 <__assert_fail@plt+0x15a8>
   12698:	movw	r0, #62160	; 0xf2d0
   1269c:	movw	r1, #55162	; 0xd77a
   126a0:	movt	r0, #2
   126a4:	movt	r1, #1
   126a8:	ldr	r0, [r0]
   126ac:	bl	11d70 <fopen64@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	126dc <__assert_fail@plt+0x8c4>
   126b8:	mov	r6, r0
   126bc:	bl	11c08 <getpid@plt>
   126c0:	movw	r1, #55677	; 0xd97d
   126c4:	mov	r2, r0
   126c8:	mov	r0, r6
   126cc:	movt	r1, #1
   126d0:	bl	11c44 <fprintf@plt>
   126d4:	mov	r0, r6
   126d8:	bl	11cc8 <fclose@plt>
   126dc:	movw	r0, #55164	; 0xd77c
   126e0:	movt	r0, #1
   126e4:	bl	133c0 <__assert_fail@plt+0x15a8>
   126e8:	movw	r0, #13364	; 0x3434
   126ec:	add	r1, sp, #156	; 0x9c
   126f0:	mov	r2, #0
   126f4:	mov	r7, #1
   126f8:	mov	r8, #0
   126fc:	movt	r0, #1
   12700:	str	r0, [sp, #156]	; 0x9c
   12704:	mov	r0, #1
   12708:	bl	11b30 <sigaction@plt>
   1270c:	movw	r0, #64572	; 0xfc3c
   12710:	movt	r0, #2
   12714:	ldr	r0, [r0]
   12718:	cmp	r0, #0
   1271c:	beq	12744 <__assert_fail@plt+0x92c>
   12720:	movw	r6, #62944	; 0xf5e0
   12724:	movt	r6, #2
   12728:	str	r7, [r6]
   1272c:	bl	11c08 <getpid@plt>
   12730:	mov	r1, r0
   12734:	movw	r0, #55183	; 0xd78f
   12738:	movt	r0, #1
   1273c:	bl	133c0 <__assert_fail@plt+0x15a8>
   12740:	str	r8, [r6]
   12744:	ldr	r0, [sp, #8]
   12748:	cmp	r0, #0
   1274c:	beq	12758 <__assert_fail@plt+0x940>
   12750:	mov	r1, #15
   12754:	bl	11bf0 <kill@plt>
   12758:	mov	r9, #0
   1275c:	add	r8, sp, #24
   12760:	mov	sl, #0
   12764:	movw	r6, #62948	; 0xf5e4
   12768:	movw	r7, #55252	; 0xd7d4
   1276c:	movt	r6, #2
   12770:	movt	r7, #1
   12774:	b	12788 <__assert_fail@plt+0x970>
   12778:	mov	r0, r7
   1277c:	bl	133c0 <__assert_fail@plt+0x15a8>
   12780:	bl	12fd0 <__assert_fail@plt+0x11b8>
   12784:	strb	r9, [r6]
   12788:	mov	r0, r5
   1278c:	mov	r1, r4
   12790:	mvn	r2, #0
   12794:	bl	11b24 <poll@plt>
   12798:	cmp	r0, #0
   1279c:	beq	12788 <__assert_fail@plt+0x970>
   127a0:	ldrb	r1, [r6]
   127a4:	cmp	r1, #1
   127a8:	beq	12778 <__assert_fail@plt+0x960>
   127ac:	cmp	r0, #0
   127b0:	blt	127c0 <__assert_fail@plt+0x9a8>
   127b4:	cmp	r4, #0
   127b8:	beq	12788 <__assert_fail@plt+0x970>
   127bc:	b	127e0 <__assert_fail@plt+0x9c8>
   127c0:	bl	11c50 <__errno_location@plt>
   127c4:	ldr	r0, [r0]
   127c8:	cmp	r0, #4
   127cc:	beq	12788 <__assert_fail@plt+0x970>
   127d0:	movw	r0, #55291	; 0xd7fb
   127d4:	movt	r0, #1
   127d8:	bl	13448 <__assert_fail@plt+0x1630>
   127dc:	b	12788 <__assert_fail@plt+0x970>
   127e0:	mov	r7, #0
   127e4:	sub	r2, fp, #1040	; 0x410
   127e8:	b	12834 <__assert_fail@plt+0xa1c>
   127ec:	cmn	r0, #1
   127f0:	bgt	12998 <__assert_fail@plt+0xb80>
   127f4:	bl	11c50 <__errno_location@plt>
   127f8:	ldr	r0, [r0]
   127fc:	cmp	r0, #4
   12800:	beq	12998 <__assert_fail@plt+0xb80>
   12804:	movw	r0, #55296	; 0xd800
   12808:	movt	r0, #1
   1280c:	b	12994 <__assert_fail@plt+0xb7c>
   12810:	cmn	r0, #1
   12814:	bgt	12998 <__assert_fail@plt+0xb80>
   12818:	bl	11c50 <__errno_location@plt>
   1281c:	ldr	r0, [r0]
   12820:	cmp	r0, #4
   12824:	beq	12998 <__assert_fail@plt+0xb80>
   12828:	movw	r0, #55310	; 0xd80e
   1282c:	movt	r0, #1
   12830:	b	12994 <__assert_fail@plt+0xb7c>
   12834:	add	r0, r5, r7, lsl #3
   12838:	ldrsh	r0, [r0, #6]
   1283c:	tst	r0, #3
   12840:	beq	12888 <__assert_fail@plt+0xa70>
   12844:	ldr	r6, [r5, r7, lsl #3]
   12848:	cmn	r6, #1
   1284c:	beq	12ad4 <__assert_fail@plt+0xcbc>
   12850:	movw	r0, #62240	; 0xf320
   12854:	movt	r0, #2
   12858:	ldr	r0, [r0]
   1285c:	cmp	r6, r0
   12860:	bne	128ac <__assert_fail@plt+0xa94>
   12864:	add	r8, sp, #296	; 0x128
   12868:	rsb	r2, sl, #1024	; 0x400
   1286c:	mov	r0, r6
   12870:	add	r1, r8, sl
   12874:	bl	119d4 <read@plt>
   12878:	cmp	r0, #1
   1287c:	blt	129a0 <__assert_fail@plt+0xb88>
   12880:	add	sl, r0, sl
   12884:	b	129f0 <__assert_fail@plt+0xbd8>
   12888:	tst	r0, #32
   1288c:	bne	12920 <__assert_fail@plt+0xb08>
   12890:	tst	r0, #8
   12894:	bne	1298c <__assert_fail@plt+0xb74>
   12898:	tst	r0, #16
   1289c:	beq	12ad4 <__assert_fail@plt+0xcbc>
   128a0:	movw	r0, #55345	; 0xd831
   128a4:	movt	r0, #1
   128a8:	b	12994 <__assert_fail@plt+0xb7c>
   128ac:	movw	r0, #62232	; 0xf318
   128b0:	movt	r0, #2
   128b4:	ldr	r1, [r0]
   128b8:	ldr	r0, [r0, #4]
   128bc:	cmp	r6, r1
   128c0:	cmpne	r6, r0
   128c4:	bne	1293c <__assert_fail@plt+0xb24>
   128c8:	mov	r0, #128	; 0x80
   128cc:	mov	r1, #0
   128d0:	str	r0, [sp, #152]	; 0x98
   128d4:	mov	r0, r2
   128d8:	movw	r2, #1025	; 0x401
   128dc:	bl	11c8c <memset@plt>
   128e0:	add	r0, sp, #152	; 0x98
   128e4:	mov	r2, #1024	; 0x400
   128e8:	mov	r3, #0
   128ec:	str	r8, [sp]
   128f0:	str	r0, [sp, #4]
   128f4:	mov	r0, r6
   128f8:	sub	r6, fp, #1040	; 0x410
   128fc:	mov	r1, r6
   12900:	bl	11aa0 <recvfrom@plt>
   12904:	cmp	r0, #1
   12908:	blt	127ec <__assert_fail@plt+0x9d4>
   1290c:	ldr	r1, [sp, #152]	; 0x98
   12910:	strb	r9, [r6, r0]
   12914:	mov	r0, r8
   12918:	bl	137a0 <__assert_fail@plt+0x1988>
   1291c:	b	12980 <__assert_fail@plt+0xb68>
   12920:	movw	r0, #55324	; 0xd81c
   12924:	movt	r0, #1
   12928:	bl	13448 <__assert_fail@plt+0x1630>
   1292c:	mvn	r0, #0
   12930:	sub	r2, fp, #1040	; 0x410
   12934:	str	r0, [r5, r7, lsl #3]
   12938:	b	12ad4 <__assert_fail@plt+0xcbc>
   1293c:	mov	r0, #110	; 0x6e
   12940:	mov	r1, r2
   12944:	mov	r3, #0
   12948:	str	r8, [sp]
   1294c:	str	r0, [sp, #152]	; 0x98
   12950:	add	r0, sp, #152	; 0x98
   12954:	str	r0, [sp, #4]
   12958:	mov	r0, r6
   1295c:	mov	r6, r2
   12960:	mov	r2, #1024	; 0x400
   12964:	bl	11aa0 <recvfrom@plt>
   12968:	cmp	r0, #1
   1296c:	blt	12810 <__assert_fail@plt+0x9f8>
   12970:	strb	r9, [r6, r0]
   12974:	movw	r0, #64568	; 0xfc38
   12978:	movt	r0, #2
   1297c:	ldr	r0, [r0]
   12980:	mov	r1, r6
   12984:	bl	13618 <__assert_fail@plt+0x1800>
   12988:	b	12998 <__assert_fail@plt+0xb80>
   1298c:	movw	r0, #55335	; 0xd827
   12990:	movt	r0, #1
   12994:	bl	13448 <__assert_fail@plt+0x1630>
   12998:	sub	r2, fp, #1040	; 0x410
   1299c:	b	12ad4 <__assert_fail@plt+0xcbc>
   129a0:	cmn	r0, #1
   129a4:	bgt	129f0 <__assert_fail@plt+0xbd8>
   129a8:	bl	11c50 <__errno_location@plt>
   129ac:	ldr	r0, [r0]
   129b0:	cmp	r0, #4
   129b4:	beq	129f0 <__assert_fail@plt+0xbd8>
   129b8:	movw	r0, #57298	; 0xdfd2
   129bc:	movt	r0, #1
   129c0:	bl	13448 <__assert_fail@plt+0x1630>
   129c4:	movw	r1, #62240	; 0xf320
   129c8:	mvn	r0, #0
   129cc:	movt	r1, #2
   129d0:	str	r0, [r5, r7, lsl #3]
   129d4:	str	r0, [r1]
   129d8:	b	129f0 <__assert_fail@plt+0xbd8>
   129dc:	mov	r0, r6
   129e0:	mov	r1, r8
   129e4:	mov	r2, sl
   129e8:	bl	11a04 <memmove@plt>
   129ec:	mov	r8, r6
   129f0:	mov	r0, r8
   129f4:	mov	r1, #10
   129f8:	strb	r9, [r8, sl]
   129fc:	bl	11c38 <strchr@plt>
   12a00:	cmp	r0, #0
   12a04:	beq	12a3c <__assert_fail@plt+0xc24>
   12a08:	mov	r6, r8
   12a0c:	mov	r8, r0
   12a10:	mov	r0, r6
   12a14:	strb	r9, [r8], #1
   12a18:	bl	134dc <__assert_fail@plt+0x16c4>
   12a1c:	add	r0, sl, r6
   12a20:	mov	r1, #10
   12a24:	sub	sl, r0, r8
   12a28:	mov	r0, r8
   12a2c:	bl	11c38 <strchr@plt>
   12a30:	cmp	r0, #0
   12a34:	mov	r6, r8
   12a38:	bne	12a0c <__assert_fail@plt+0xbf4>
   12a3c:	cmp	sl, #0
   12a40:	sub	r2, fp, #1040	; 0x410
   12a44:	beq	12acc <__assert_fail@plt+0xcb4>
   12a48:	ldrb	r0, [r8]
   12a4c:	cmp	r0, #0
   12a50:	bne	12a64 <__assert_fail@plt+0xc4c>
   12a54:	subs	sl, sl, #1
   12a58:	add	r8, r8, #1
   12a5c:	bne	12a48 <__assert_fail@plt+0xc30>
   12a60:	b	12acc <__assert_fail@plt+0xcb4>
   12a64:	add	r6, sp, #296	; 0x128
   12a68:	cmp	r6, r8
   12a6c:	bne	129dc <__assert_fail@plt+0xbc4>
   12a70:	cmp	sl, #1024	; 0x400
   12a74:	add	r8, sp, #24
   12a78:	blt	12ad4 <__assert_fail@plt+0xcbc>
   12a7c:	add	r8, sp, #296	; 0x128
   12a80:	mov	r0, r8
   12a84:	bl	134dc <__assert_fail@plt+0x16c4>
   12a88:	ldrb	r0, [sp, #296]	; 0x128
   12a8c:	cmp	r0, #60	; 0x3c
   12a90:	bne	12ac4 <__assert_fail@plt+0xcac>
   12a94:	bl	11bfc <__ctype_b_loc@plt>
   12a98:	ldr	r0, [r0]
   12a9c:	ldrb	r1, [sp, #297]	; 0x129
   12aa0:	add	r0, r0, r1, lsl #1
   12aa4:	ldrh	r0, [r0]
   12aa8:	tst	r0, #2048	; 0x800
   12aac:	beq	12ac4 <__assert_fail@plt+0xcac>
   12ab0:	ldrb	r0, [sp, #298]	; 0x12a
   12ab4:	mov	sl, #3
   12ab8:	cmp	r0, #62	; 0x3e
   12abc:	movne	sl, #0
   12ac0:	b	129f0 <__assert_fail@plt+0xbd8>
   12ac4:	mov	sl, #0
   12ac8:	b	129f0 <__assert_fail@plt+0xbd8>
   12acc:	mov	sl, #0
   12ad0:	add	r8, sp, #24
   12ad4:	add	r7, r7, #1
   12ad8:	cmp	r7, r4
   12adc:	bne	12834 <__assert_fail@plt+0xa1c>
   12ae0:	b	12764 <__assert_fail@plt+0x94c>
   12ae4:	ldr	r6, [sp, #296]	; 0x128
   12ae8:	cmp	r6, #0
   12aec:	beq	12bd0 <__assert_fail@plt+0xdb8>
   12af0:	mov	r8, #1
   12af4:	add	sl, sp, #24
   12af8:	str	r8, [sp, #24]
   12afc:	ldmib	r6, {r0, r1, r2}
   12b00:	bl	11dac <socket@plt>
   12b04:	cmp	r0, #0
   12b08:	blt	12bc0 <__assert_fail@plt+0xda8>
   12b0c:	mov	r7, r0
   12b10:	mov	r0, #4
   12b14:	mov	r1, #1
   12b18:	mov	r2, #2
   12b1c:	mov	r3, sl
   12b20:	str	r0, [sp]
   12b24:	mov	r0, r7
   12b28:	bl	119b0 <setsockopt@plt>
   12b2c:	cmn	r0, #1
   12b30:	bgt	12b40 <__assert_fail@plt+0xd28>
   12b34:	movw	r0, #57976	; 0xe278
   12b38:	movt	r0, #1
   12b3c:	bl	13448 <__assert_fail@plt+0x1630>
   12b40:	ldr	r0, [r6, #4]
   12b44:	cmp	r0, #10
   12b48:	bne	12b68 <__assert_fail@plt+0xd50>
   12b4c:	mov	r0, #4
   12b50:	mov	r1, #41	; 0x29
   12b54:	mov	r2, #26
   12b58:	mov	r3, sl
   12b5c:	str	r0, [sp]
   12b60:	mov	r0, r7
   12b64:	bl	119b0 <setsockopt@plt>
   12b68:	ldr	r2, [r6, #16]
   12b6c:	ldr	r1, [r6, #20]
   12b70:	mov	r0, r7
   12b74:	bl	11c74 <bind@plt>
   12b78:	cmn	r0, #1
   12b7c:	ble	12ba0 <__assert_fail@plt+0xd88>
   12b80:	ldr	r0, [r6, #4]
   12b84:	cmp	r0, #2
   12b88:	bne	12bac <__assert_fail@plt+0xd94>
   12b8c:	ldr	r1, [r9]
   12b90:	cmn	r1, #1
   12b94:	bgt	12bac <__assert_fail@plt+0xd94>
   12b98:	str	r7, [r9]
   12b9c:	b	12bc0 <__assert_fail@plt+0xda8>
   12ba0:	mov	r0, r7
   12ba4:	bl	11e00 <close@plt>
   12ba8:	b	12bc0 <__assert_fail@plt+0xda8>
   12bac:	cmp	r0, #10
   12bb0:	bne	12bc0 <__assert_fail@plt+0xda8>
   12bb4:	ldr	r0, [r9, #4]
   12bb8:	cmn	r0, #1
   12bbc:	strle	r7, [r9, #4]
   12bc0:	ldr	r6, [r6, #28]
   12bc4:	cmp	r6, #0
   12bc8:	bne	12af8 <__assert_fail@plt+0xce0>
   12bcc:	ldr	r7, [sp, #296]	; 0x128
   12bd0:	mov	r0, r7
   12bd4:	bl	11d94 <freeaddrinfo@plt>
   12bd8:	ldm	r9, {r0, r1}
   12bdc:	and	r1, r1, r0
   12be0:	cmn	r1, #1
   12be4:	bgt	12614 <__assert_fail@plt+0x7fc>
   12be8:	movw	r0, #58003	; 0xe293
   12bec:	movt	r0, #1
   12bf0:	b	125fc <__assert_fail@plt+0x7e4>
   12bf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bf8:	add	fp, sp, #24
   12bfc:	sub	sp, sp, #40	; 0x28
   12c00:	movw	r8, #62936	; 0xf5d8
   12c04:	mov	r4, r0
   12c08:	movw	r0, #56601	; 0xdd19
   12c0c:	add	r9, sp, #8
   12c10:	movw	r6, #54683	; 0xd59b
   12c14:	vmov.i32	q8, #0	; 0x00000000
   12c18:	add	r3, sp, #4
   12c1c:	movt	r8, #2
   12c20:	movt	r0, #1
   12c24:	add	r7, r9, #4
   12c28:	add	r5, r9, #16
   12c2c:	movt	r6, #1
   12c30:	mov	r2, r9
   12c34:	str	r0, [r8]
   12c38:	mov	r0, #1
   12c3c:	vst1.32	{d16-d17}, [r7]
   12c40:	vst1.32	{d16-d17}, [r5]
   12c44:	mov	r1, r6
   12c48:	str	r0, [sp, #8]
   12c4c:	mov	r0, #2
   12c50:	str	r0, [sp, #16]
   12c54:	mov	r0, #0
   12c58:	bl	11da0 <getaddrinfo@plt>
   12c5c:	cmp	r0, #0
   12c60:	bne	12c70 <__assert_fail@plt+0xe58>
   12c64:	ldr	r0, [sp, #4]
   12c68:	str	r6, [r8]
   12c6c:	bl	11d94 <freeaddrinfo@plt>
   12c70:	movw	r6, #62932	; 0xf5d4
   12c74:	cmp	r4, #0
   12c78:	movt	r6, #2
   12c7c:	str	r4, [r6]
   12c80:	beq	12cd8 <__assert_fail@plt+0xec0>
   12c84:	vmov.i32	q8, #0	; 0x00000000
   12c88:	mov	r0, #1
   12c8c:	add	r3, sp, #4
   12c90:	mov	r1, r4
   12c94:	mov	r2, r9
   12c98:	vst1.32	{d16-d17}, [r7]
   12c9c:	vst1.32	{d16-d17}, [r5]
   12ca0:	str	r0, [sp, #8]
   12ca4:	mov	r0, #2
   12ca8:	mov	r5, #0
   12cac:	str	r0, [sp, #16]
   12cb0:	mov	r0, #0
   12cb4:	bl	11da0 <getaddrinfo@plt>
   12cb8:	cmp	r0, #0
   12cbc:	strne	r5, [r6]
   12cc0:	subne	sp, fp, #24
   12cc4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   12cc8:	ldr	r0, [sp, #4]
   12ccc:	bl	11d94 <freeaddrinfo@plt>
   12cd0:	sub	sp, fp, #24
   12cd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12cd8:	ldr	r0, [r8]
   12cdc:	str	r0, [r6]
   12ce0:	sub	sp, fp, #24
   12ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ce8:	push	{fp, lr}
   12cec:	mov	fp, sp
   12cf0:	mov	r0, #0
   12cf4:	bl	11a4c <_exit@plt>
   12cf8:	push	{fp, lr}
   12cfc:	mov	fp, sp
   12d00:	sub	sp, sp, #104	; 0x68
   12d04:	movw	r8, #64560	; 0xfc30
   12d08:	mov	r4, r0
   12d0c:	mov	r0, #0
   12d10:	movt	r8, #2
   12d14:	ldr	r7, [r8]
   12d18:	str	r0, [r8]
   12d1c:	movw	r0, #64072	; 0xfa48
   12d20:	movt	r0, #2
   12d24:	ldr	r5, [r0]
   12d28:	cmp	r5, #0
   12d2c:	beq	12d64 <__assert_fail@plt+0xf4c>
   12d30:	movw	r6, #64568	; 0xfc38
   12d34:	movt	r6, #2
   12d38:	ldr	r0, [r5, #452]	; 0x1c4
   12d3c:	cmp	r0, #0
   12d40:	beq	12d58 <__assert_fail@plt+0xf40>
   12d44:	ldr	r1, [r6]
   12d48:	mov	r0, r5
   12d4c:	mov	r2, #0
   12d50:	mov	r3, #0
   12d54:	bl	1413c <__assert_fail@plt+0x2324>
   12d58:	ldr	r5, [r5]
   12d5c:	cmp	r5, #0
   12d60:	bne	12d38 <__assert_fail@plt+0xf20>
   12d64:	cmp	r4, #0
   12d68:	str	r7, [r8]
   12d6c:	beq	12dbc <__assert_fail@plt+0xfa4>
   12d70:	movw	r0, #62908	; 0xf5bc
   12d74:	mov	r2, r4
   12d78:	movt	r0, #2
   12d7c:	ldr	r1, [r0]
   12d80:	movw	r0, #56209	; 0xdb91
   12d84:	movt	r0, #1
   12d88:	bl	133c0 <__assert_fail@plt+0x15a8>
   12d8c:	movw	r2, #56235	; 0xdbab
   12d90:	add	r5, sp, #4
   12d94:	mov	r1, #100	; 0x64
   12d98:	mov	r3, r4
   12d9c:	movt	r2, #1
   12da0:	mov	r0, r5
   12da4:	bl	11c5c <snprintf@plt>
   12da8:	bl	11c50 <__errno_location@plt>
   12dac:	mov	r1, #0
   12db0:	str	r1, [r0]
   12db4:	mov	r0, r5
   12db8:	bl	13448 <__assert_fail@plt+0x1630>
   12dbc:	movw	r0, #62240	; 0xf320
   12dc0:	movt	r0, #2
   12dc4:	ldr	r0, [r0]
   12dc8:	cmp	r0, #0
   12dcc:	blt	12dd4 <__assert_fail@plt+0xfbc>
   12dd0:	bl	11e00 <close@plt>
   12dd4:	movw	r4, #64544	; 0xfc20
   12dd8:	movt	r4, #2
   12ddc:	ldr	r0, [r4]
   12de0:	cmp	r0, #0
   12de4:	beq	12e30 <__assert_fail@plt+0x1018>
   12de8:	movw	r6, #64640	; 0xfc80
   12dec:	mov	r5, #0
   12df0:	movt	r6, #2
   12df4:	ldr	r0, [r6]
   12df8:	add	r0, r0, r5, lsl #3
   12dfc:	ldr	r0, [r0, #4]
   12e00:	cmp	r0, #0
   12e04:	blt	12e20 <__assert_fail@plt+0x1008>
   12e08:	bl	11e00 <close@plt>
   12e0c:	ldr	r0, [r6]
   12e10:	ldr	r0, [r0, r5, lsl #3]
   12e14:	cmp	r0, #0
   12e18:	beq	12e20 <__assert_fail@plt+0x1008>
   12e1c:	bl	11adc <unlink@plt>
   12e20:	ldr	r0, [r4]
   12e24:	add	r5, r5, #1
   12e28:	cmp	r5, r0
   12e2c:	bcc	12df4 <__assert_fail@plt+0xfdc>
   12e30:	movw	r4, #62232	; 0xf318
   12e34:	movt	r4, #2
   12e38:	ldr	r0, [r4]
   12e3c:	cmp	r0, #0
   12e40:	blt	12e48 <__assert_fail@plt+0x1030>
   12e44:	bl	11e00 <close@plt>
   12e48:	ldr	r0, [r4, #4]
   12e4c:	cmp	r0, #0
   12e50:	blt	12e58 <__assert_fail@plt+0x1040>
   12e54:	bl	11e00 <close@plt>
   12e58:	mov	r0, #0
   12e5c:	bl	11c14 <exit@plt>
   12e60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e64:	add	fp, sp, #24
   12e68:	mov	r0, #0
   12e6c:	bl	11a70 <time@plt>
   12e70:	movw	r6, #64632	; 0xfc78
   12e74:	movt	r6, #2
   12e78:	str	r0, [r6]
   12e7c:	movw	r0, #62244	; 0xf324
   12e80:	movt	r0, #2
   12e84:	ldr	r0, [r0]
   12e88:	cmp	r0, #1
   12e8c:	blt	12ed4 <__assert_fail@plt+0x10bc>
   12e90:	movw	r4, #64644	; 0xfc84
   12e94:	movt	r4, #2
   12e98:	ldr	r1, [r4]
   12e9c:	add	r1, r1, #30
   12ea0:	cmp	r1, r0
   12ea4:	str	r1, [r4]
   12ea8:	blt	12ed4 <__assert_fail@plt+0x10bc>
   12eac:	movw	r0, #64568	; 0xfc38
   12eb0:	movw	r1, #56132	; 0xdb44
   12eb4:	mov	r3, #12
   12eb8:	movt	r0, #2
   12ebc:	movt	r1, #1
   12ec0:	ldr	r2, [r0]
   12ec4:	mov	r0, #6
   12ec8:	bl	13b3c <__assert_fail@plt+0x1d24>
   12ecc:	mov	r0, #0
   12ed0:	str	r0, [r4]
   12ed4:	movw	r0, #64072	; 0xfa48
   12ed8:	movt	r0, #2
   12edc:	ldr	r4, [r0]
   12ee0:	cmp	r4, #0
   12ee4:	beq	12f74 <__assert_fail@plt+0x115c>
   12ee8:	movw	r7, #62220	; 0xf30c
   12eec:	movw	r8, #62180	; 0xf2e4
   12ef0:	movw	r9, #56143	; 0xdb4f
   12ef4:	movw	r5, #64568	; 0xfc38
   12ef8:	movt	r7, #2
   12efc:	movt	r8, #2
   12f00:	movt	r9, #1
   12f04:	movt	r5, #2
   12f08:	ldr	r2, [r4, #452]	; 0x1c4
   12f0c:	cmp	r2, #0
   12f10:	beq	12f68 <__assert_fail@plt+0x1150>
   12f14:	ldr	r1, [r4, #456]	; 0x1c8
   12f18:	ldr	r0, [r4, #8]
   12f1c:	ldr	r3, [r7, r1, lsl #2]
   12f20:	ldr	r1, [r6]
   12f24:	add	r0, r3, r0
   12f28:	cmp	r1, r0
   12f2c:	blt	12f68 <__assert_fail@plt+0x1150>
   12f30:	ldrsh	r0, [r4, #4]
   12f34:	ldr	r1, [r8, r0, lsl #2]
   12f38:	mov	r0, r9
   12f3c:	bl	133c0 <__assert_fail@plt+0x15a8>
   12f40:	ldr	r1, [r5]
   12f44:	mov	r0, r4
   12f48:	mov	r2, #0
   12f4c:	mov	r3, #0
   12f50:	bl	1413c <__assert_fail@plt+0x2324>
   12f54:	ldr	r0, [r4, #456]	; 0x1c8
   12f58:	add	r1, r0, #1
   12f5c:	cmn	r0, #1
   12f60:	movwne	r1, #1
   12f64:	str	r1, [r4, #456]	; 0x1c8
   12f68:	ldr	r4, [r4]
   12f6c:	cmp	r4, #0
   12f70:	bne	12f08 <__assert_fail@plt+0x10f0>
   12f74:	mov	r0, #30
   12f78:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f7c:	b	11ac4 <alarm@plt>
   12f80:	push	{r4, r5, fp, lr}
   12f84:	add	fp, sp, #8
   12f88:	movw	r4, #62944	; 0xf5e0
   12f8c:	mov	r0, #1
   12f90:	movw	r1, #56595	; 0xdd13
   12f94:	movt	r4, #2
   12f98:	movt	r1, #1
   12f9c:	ldr	r5, [r4]
   12fa0:	str	r0, [r4]
   12fa4:	movw	r0, #56590	; 0xdd0e
   12fa8:	movt	r0, #1
   12fac:	cmp	r5, #0
   12fb0:	moveq	r1, r0
   12fb4:	movw	r0, #56561	; 0xdcf1
   12fb8:	movt	r0, #1
   12fbc:	bl	133c0 <__assert_fail@plt+0x15a8>
   12fc0:	clz	r0, r5
   12fc4:	lsr	r0, r0, #5
   12fc8:	str	r0, [r4]
   12fcc:	pop	{r4, r5, fp, pc}
   12fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fd4:	add	fp, sp, #28
   12fd8:	sub	sp, sp, #116	; 0x74
   12fdc:	movw	r0, #56256	; 0xdbc0
   12fe0:	movt	r0, #1
   12fe4:	bl	133c0 <__assert_fail@plt+0x15a8>
   12fe8:	movw	r0, #64560	; 0xfc30
   12fec:	mov	r8, #0
   12ff0:	movt	r0, #2
   12ff4:	str	r8, [r0]
   12ff8:	movw	r0, #64072	; 0xfa48
   12ffc:	movt	r0, #2
   13000:	ldr	r5, [r0]
   13004:	cmp	r5, #0
   13008:	beq	130e0 <__assert_fail@plt+0x12c8>
   1300c:	movw	sl, #64568	; 0xfc38
   13010:	mov	r6, #1
   13014:	movw	r7, #526	; 0x20e
   13018:	mov	r9, #400	; 0x190
   1301c:	movt	sl, #2
   13020:	b	13060 <__assert_fail@plt+0x1248>
   13024:	cmp	r0, #5
   13028:	bne	130bc <__assert_fail@plt+0x12a4>
   1302c:	ldr	r1, [r4, #40]	; 0x28
   13030:	ldr	r0, [r4, #44]	; 0x2c
   13034:	cmp	r1, #1
   13038:	blt	130a4 <__assert_fail@plt+0x128c>
   1303c:	mov	r5, #0
   13040:	ldr	r0, [r0, r5, lsl #2]
   13044:	bl	1ad78 <argp_parse@@Base+0x14b0>
   13048:	ldr	r1, [r4, #40]	; 0x28
   1304c:	ldr	r0, [r4, #44]	; 0x2c
   13050:	add	r5, r5, #1
   13054:	cmp	r5, r1
   13058:	blt	13040 <__assert_fail@plt+0x1228>
   1305c:	b	130a4 <__assert_fail@plt+0x128c>
   13060:	ldr	r0, [r5, #452]	; 0x1c4
   13064:	mov	r4, r5
   13068:	cmp	r0, #0
   1306c:	beq	13084 <__assert_fail@plt+0x126c>
   13070:	ldr	r1, [sl]
   13074:	mov	r0, r4
   13078:	mov	r2, #0
   1307c:	mov	r3, #0
   13080:	bl	1413c <__assert_fail@plt+0x2324>
   13084:	ldrsh	r0, [r4, #4]
   13088:	cmp	r0, #9
   1308c:	bhi	130bc <__assert_fail@plt+0x12a4>
   13090:	tst	r7, r6, lsl r0
   13094:	bne	130ac <__assert_fail@plt+0x1294>
   13098:	tst	r9, r6, lsl r0
   1309c:	beq	13024 <__assert_fail@plt+0x120c>
   130a0:	ldr	r0, [r4, #40]	; 0x28
   130a4:	bl	1ad78 <argp_parse@@Base+0x14b0>
   130a8:	b	130bc <__assert_fail@plt+0x12a4>
   130ac:	ldr	r0, [r4, #40]	; 0x28
   130b0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   130b4:	ldrsh	r0, [r4, #6]
   130b8:	bl	11e00 <close@plt>
   130bc:	ldr	r0, [r4, #436]	; 0x1b4
   130c0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   130c4:	ldr	r0, [r4, #432]	; 0x1b0
   130c8:	bl	1ad78 <argp_parse@@Base+0x14b0>
   130cc:	ldr	r5, [r4]
   130d0:	mov	r0, r4
   130d4:	bl	1ad78 <argp_parse@@Base+0x14b0>
   130d8:	cmp	r5, #0
   130dc:	bne	13060 <__assert_fail@plt+0x1248>
   130e0:	movw	r0, #64068	; 0xfa44
   130e4:	movt	r0, #2
   130e8:	str	r8, [r0]
   130ec:	movw	r0, #64072	; 0xfa48
   130f0:	movt	r0, #2
   130f4:	str	r8, [r0]
   130f8:	movw	r0, #62152	; 0xf2c8
   130fc:	movt	r0, #2
   13100:	ldr	r0, [r0]
   13104:	bl	149bc <__assert_fail@plt+0x2ba4>
   13108:	str	r0, [sp]
   1310c:	movw	r0, #62156	; 0xf2cc
   13110:	movt	r0, #2
   13114:	ldr	r5, [r0]
   13118:	mov	r0, r5
   1311c:	bl	11b84 <opendir@plt>
   13120:	cmp	r0, #0
   13124:	beq	131e8 <__assert_fail@plt+0x13d0>
   13128:	mov	r6, r0
   1312c:	bl	11d4c <readdir64@plt>
   13130:	cmp	r0, #0
   13134:	beq	131fc <__assert_fail@plt+0x13e4>
   13138:	movw	r7, #58160	; 0xe330
   1313c:	mov	r8, #0
   13140:	add	r4, sp, #4
   13144:	add	r9, sp, #8
   13148:	mov	sl, #0
   1314c:	movt	r7, #1
   13150:	add	r3, r0, #19
   13154:	mov	r0, r4
   13158:	mov	r1, r7
   1315c:	mov	r2, r5
   13160:	bl	11ca4 <asprintf@plt>
   13164:	cmn	r0, #1
   13168:	ble	13208 <__assert_fail@plt+0x13f0>
   1316c:	ldr	r1, [sp, #4]
   13170:	mov	r0, #3
   13174:	mov	r2, r9
   13178:	bl	11dc4 <__xstat64@plt>
   1317c:	cmp	r0, #0
   13180:	beq	13194 <__assert_fail@plt+0x137c>
   13184:	movw	r0, #58216	; 0xe368
   13188:	movt	r0, #1
   1318c:	bl	133c0 <__assert_fail@plt+0x15a8>
   13190:	b	131bc <__assert_fail@plt+0x13a4>
   13194:	ldr	r0, [sp, #24]
   13198:	and	r0, r0, #61440	; 0xf000
   1319c:	cmp	r0, #32768	; 0x8000
   131a0:	bne	131b4 <__assert_fail@plt+0x139c>
   131a4:	ldr	r0, [sp, #4]
   131a8:	bl	149bc <__assert_fail@plt+0x2ba4>
   131ac:	add	r8, r0, r8
   131b0:	add	sl, sl, #1
   131b4:	ldr	r0, [sp, #4]
   131b8:	bl	1ad78 <argp_parse@@Base+0x14b0>
   131bc:	mov	r0, r6
   131c0:	bl	11d4c <readdir64@plt>
   131c4:	cmp	r0, #0
   131c8:	bne	13150 <__assert_fail@plt+0x1338>
   131cc:	mov	r0, r6
   131d0:	bl	11e0c <closedir@plt>
   131d4:	cmp	sl, #0
   131d8:	beq	1321c <__assert_fail@plt+0x1404>
   131dc:	cmp	r8, #0
   131e0:	beq	13214 <__assert_fail@plt+0x13fc>
   131e4:	b	1321c <__assert_fail@plt+0x1404>
   131e8:	movw	r0, #58032	; 0xe2b0
   131ec:	mov	r1, r5
   131f0:	movt	r0, #1
   131f4:	bl	133c0 <__assert_fail@plt+0x15a8>
   131f8:	b	1321c <__assert_fail@plt+0x1404>
   131fc:	mov	r0, r6
   13200:	bl	11e0c <closedir@plt>
   13204:	b	1321c <__assert_fail@plt+0x1404>
   13208:	movw	r0, #58166	; 0xe336
   1320c:	movt	r0, #1
   13210:	bl	133c0 <__assert_fail@plt+0x15a8>
   13214:	mov	r0, #0
   13218:	str	r0, [sp]
   1321c:	movw	r1, #64560	; 0xfc30
   13220:	mov	r0, #1
   13224:	movt	r1, #2
   13228:	str	r0, [r1]
   1322c:	movw	r0, #64548	; 0xfc24
   13230:	movt	r0, #2
   13234:	ldr	r0, [r0]
   13238:	cmp	r0, #0
   1323c:	beq	13348 <__assert_fail@plt+0x1530>
   13240:	movw	r0, #64072	; 0xfa48
   13244:	movt	r0, #2
   13248:	ldr	r8, [r0]
   1324c:	cmp	r8, #0
   13250:	beq	13348 <__assert_fail@plt+0x1530>
   13254:	movw	r5, #56262	; 0xdbc6
   13258:	movw	r4, #56276	; 0xdbd4
   1325c:	movw	r6, #56266	; 0xdbca
   13260:	mov	r9, #1
   13264:	movt	r5, #1
   13268:	movt	r4, #1
   1326c:	movt	r6, #1
   13270:	b	132b0 <__assert_fail@plt+0x1498>
   13274:	cmp	r0, #5
   13278:	bne	13330 <__assert_fail@plt+0x1518>
   1327c:	ldr	r0, [r8, #40]	; 0x28
   13280:	cmp	r0, #1
   13284:	blt	13330 <__assert_fail@plt+0x1518>
   13288:	mov	r7, #0
   1328c:	ldr	r0, [r8, #44]	; 0x2c
   13290:	ldr	r1, [r0, r7, lsl #2]
   13294:	mov	r0, r4
   13298:	bl	133c0 <__assert_fail@plt+0x15a8>
   1329c:	ldr	r0, [r8, #40]	; 0x28
   132a0:	add	r7, r7, #1
   132a4:	cmp	r7, r0
   132a8:	blt	1328c <__assert_fail@plt+0x1474>
   132ac:	b	13330 <__assert_fail@plt+0x1518>
   132b0:	add	sl, r8, #12
   132b4:	mov	r7, #0
   132b8:	ldrb	r1, [sl, -r7]
   132bc:	cmp	r1, #0
   132c0:	beq	132d0 <__assert_fail@plt+0x14b8>
   132c4:	mov	r0, r6
   132c8:	bl	133c0 <__assert_fail@plt+0x15a8>
   132cc:	b	132d8 <__assert_fail@plt+0x14c0>
   132d0:	mov	r0, r5
   132d4:	bl	133c0 <__assert_fail@plt+0x15a8>
   132d8:	sub	r7, r7, #1
   132dc:	cmn	r7, #25
   132e0:	bne	132b8 <__assert_fail@plt+0x14a0>
   132e4:	ldrsh	r0, [r8, #4]
   132e8:	movw	r1, #62180	; 0xf2e4
   132ec:	movt	r1, #2
   132f0:	ldr	r1, [r1, r0, lsl #2]
   132f4:	movw	r0, #56271	; 0xdbcf
   132f8:	movt	r0, #1
   132fc:	bl	133c0 <__assert_fail@plt+0x15a8>
   13300:	ldrsh	r0, [r8, #4]
   13304:	cmp	r0, #9
   13308:	bhi	13330 <__assert_fail@plt+0x1518>
   1330c:	movw	r1, #526	; 0x20e
   13310:	tst	r1, r9, lsl r0
   13314:	moveq	r1, #400	; 0x190
   13318:	tsteq	r1, r9, lsl r0
   1331c:	beq	13274 <__assert_fail@plt+0x145c>
   13320:	ldr	r1, [r8, #40]	; 0x28
   13324:	movw	r0, #58708	; 0xe554
   13328:	movt	r0, #1
   1332c:	bl	133c0 <__assert_fail@plt+0x15a8>
   13330:	movw	r0, #55516	; 0xd8dc
   13334:	movt	r0, #1
   13338:	bl	133c0 <__assert_fail@plt+0x15a8>
   1333c:	ldr	r8, [r8]
   13340:	cmp	r8, #0
   13344:	bne	132b0 <__assert_fail@plt+0x1498>
   13348:	movw	r0, #64064	; 0xfa40
   1334c:	movw	r4, #64568	; 0xfc38
   13350:	movt	r0, #2
   13354:	movt	r4, #2
   13358:	ldr	r0, [r0]
   1335c:	ldr	r2, [r4]
   13360:	cmp	r0, #0
   13364:	beq	13374 <__assert_fail@plt+0x155c>
   13368:	movw	r1, #56281	; 0xdbd9
   1336c:	movt	r1, #1
   13370:	b	1337c <__assert_fail@plt+0x1564>
   13374:	movw	r1, #56346	; 0xdc1a
   13378:	movt	r1, #1
   1337c:	mov	r0, #46	; 0x2e
   13380:	mov	r3, #4
   13384:	bl	13b3c <__assert_fail@plt+0x1d24>
   13388:	ldr	r0, [sp]
   1338c:	cmp	r0, #0
   13390:	bne	133ac <__assert_fail@plt+0x1594>
   13394:	ldr	r2, [r4]
   13398:	movw	r1, #56392	; 0xdc48
   1339c:	mov	r0, #43	; 0x2b
   133a0:	mov	r3, #4
   133a4:	movt	r1, #1
   133a8:	bl	13b3c <__assert_fail@plt+0x1d24>
   133ac:	movw	r0, #56427	; 0xdc6b
   133b0:	movt	r0, #1
   133b4:	bl	133c0 <__assert_fail@plt+0x15a8>
   133b8:	sub	sp, fp, #28
   133bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133c0:	sub	sp, sp, #12
   133c4:	push	{r4, sl, fp, lr}
   133c8:	add	fp, sp, #8
   133cc:	sub	sp, sp, #4
   133d0:	mov	ip, r0
   133d4:	add	r0, fp, #8
   133d8:	stm	r0, {r1, r2, r3}
   133dc:	movw	r0, #64572	; 0xfc3c
   133e0:	movt	r0, #2
   133e4:	ldr	r0, [r0]
   133e8:	cmp	r0, #0
   133ec:	movwne	r0, #62944	; 0xf5e0
   133f0:	movtne	r0, #2
   133f4:	ldrne	r0, [r0]
   133f8:	cmpne	r0, #0
   133fc:	beq	13424 <__assert_fail@plt+0x160c>
   13400:	movw	r4, #62916	; 0xf5c4
   13404:	add	r2, fp, #8
   13408:	mov	r1, ip
   1340c:	movt	r4, #2
   13410:	str	r2, [sp]
   13414:	ldr	r0, [r4]
   13418:	bl	11d34 <vfprintf@plt>
   1341c:	ldr	r0, [r4]
   13420:	bl	119e0 <fflush@plt>
   13424:	sub	sp, fp, #8
   13428:	pop	{r4, sl, fp, lr}
   1342c:	add	sp, sp, #12
   13430:	bx	lr
   13434:	movw	r0, #62948	; 0xf5e4
   13438:	mov	r1, #1
   1343c:	movt	r0, #2
   13440:	strb	r1, [r0]
   13444:	bx	lr
   13448:	push	{r4, r5, fp, lr}
   1344c:	add	fp, sp, #8
   13450:	sub	sp, sp, #104	; 0x68
   13454:	mov	r5, r0
   13458:	bl	11c50 <__errno_location@plt>
   1345c:	mov	r4, r0
   13460:	ldr	r0, [r0]
   13464:	cmp	r0, #0
   13468:	beq	13484 <__assert_fail@plt+0x166c>
   1346c:	bl	11bcc <strerror@plt>
   13470:	movw	r2, #56181	; 0xdb75
   13474:	str	r0, [sp]
   13478:	add	r0, sp, #4
   1347c:	movt	r2, #1
   13480:	b	13490 <__assert_fail@plt+0x1678>
   13484:	movw	r2, #56197	; 0xdb85
   13488:	add	r0, sp, #4
   1348c:	movt	r2, #1
   13490:	mov	r1, #100	; 0x64
   13494:	mov	r3, r5
   13498:	bl	11c5c <snprintf@plt>
   1349c:	mov	r0, #0
   134a0:	str	r0, [r4]
   134a4:	movw	r0, #60019	; 0xea73
   134a8:	add	r4, sp, #4
   134ac:	movt	r0, #1
   134b0:	mov	r1, r4
   134b4:	bl	133c0 <__assert_fail@plt+0x15a8>
   134b8:	movw	r0, #64568	; 0xfc38
   134bc:	mov	r1, r4
   134c0:	mov	r3, #4
   134c4:	movt	r0, #2
   134c8:	ldr	r2, [r0]
   134cc:	mov	r0, #43	; 0x2b
   134d0:	bl	13b3c <__assert_fail@plt+0x1d24>
   134d4:	sub	sp, fp, #8
   134d8:	pop	{r4, r5, fp, pc}
   134dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134e0:	add	fp, sp, #28
   134e4:	sub	sp, sp, #12
   134e8:	sub	sp, sp, #1024	; 0x400
   134ec:	mov	r6, r0
   134f0:	movw	r0, #58280	; 0xe3a8
   134f4:	mov	r8, sp
   134f8:	mov	sl, #0
   134fc:	movt	r0, #1
   13500:	strb	sl, [sp, #8]
   13504:	vldr	d16, [r0]
   13508:	mov	r0, r8
   1350c:	vstr	d16, [sp]
   13510:	bl	11c20 <strlen@plt>
   13514:	movw	r9, #64568	; 0xfc38
   13518:	add	r7, r8, r0
   1351c:	add	r4, r8, #1024	; 0x400
   13520:	movt	r9, #2
   13524:	b	13538 <__assert_fail@plt+0x1720>
   13528:	strb	sl, [r2]
   1352c:	ldr	r2, [r9]
   13530:	mov	r1, r8
   13534:	bl	13b3c <__assert_fail@plt+0x1d24>
   13538:	ldrb	r1, [r6]
   1353c:	cmp	r1, #60	; 0x3c
   13540:	beq	13594 <__assert_fail@plt+0x177c>
   13544:	cmp	r1, #0
   13548:	subeq	sp, fp, #28
   1354c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13550:	mov	r0, #2
   13554:	mov	r3, #7
   13558:	cmp	r1, #0
   1355c:	beq	13610 <__assert_fail@plt+0x17f8>
   13560:	add	r5, r6, #1
   13564:	mov	r2, r7
   13568:	mov	r6, r5
   1356c:	cmp	r2, r4
   13570:	bcs	13528 <__assert_fail@plt+0x1710>
   13574:	uxtb	r5, r1
   13578:	cmp	r5, #10
   1357c:	strbne	r1, [r2], #1
   13580:	movne	r5, r6
   13584:	ldrbne	r1, [r5], #1
   13588:	cmpne	r1, #0
   1358c:	bne	13568 <__assert_fail@plt+0x1750>
   13590:	b	13528 <__assert_fail@plt+0x1710>
   13594:	bl	11bfc <__ctype_b_loc@plt>
   13598:	mov	r3, r6
   1359c:	ldr	r2, [r0]
   135a0:	ldrb	r1, [r3, #1]!
   135a4:	add	r0, r2, r1, lsl #1
   135a8:	ldrb	r0, [r0, #1]
   135ac:	tst	r0, #8
   135b0:	bne	135c8 <__assert_fail@plt+0x17b0>
   135b4:	cmp	r1, #62	; 0x3e
   135b8:	mov	r0, #0
   135bc:	addeq	r3, r6, #2
   135c0:	mov	r6, r3
   135c4:	b	13600 <__assert_fail@plt+0x17e8>
   135c8:	add	r6, r6, #2
   135cc:	mov	r0, #0
   135d0:	add	r0, r0, r0, lsl #2
   135d4:	add	r0, r1, r0, lsl #1
   135d8:	ldrb	r1, [r6], #1
   135dc:	sub	r0, r0, #48	; 0x30
   135e0:	add	r3, r2, r1, lsl #1
   135e4:	ldrb	r3, [r3, #1]
   135e8:	tst	r3, #8
   135ec:	bne	135d0 <__assert_fail@plt+0x17b8>
   135f0:	cmp	r1, #62	; 0x3e
   135f4:	subne	r6, r6, #1
   135f8:	cmp	sl, r0, lsr #10
   135fc:	movwne	r0, #2
   13600:	ldrb	r1, [r6]
   13604:	mov	r3, #6
   13608:	cmp	r1, #0
   1360c:	bne	13560 <__assert_fail@plt+0x1748>
   13610:	mov	r2, r7
   13614:	b	13528 <__assert_fail@plt+0x1710>
   13618:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1361c:	add	fp, sp, #24
   13620:	sub	sp, sp, #8
   13624:	sub	sp, sp, #1024	; 0x400
   13628:	ldrb	r4, [r1]
   1362c:	mov	r6, r1
   13630:	mov	r8, r0
   13634:	cmp	r4, #60	; 0x3c
   13638:	bne	13670 <__assert_fail@plt+0x1858>
   1363c:	bl	11bfc <__ctype_b_loc@plt>
   13640:	mov	r3, r6
   13644:	ldr	r2, [r0]
   13648:	ldrb	r1, [r3, #1]!
   1364c:	add	r0, r2, r1, lsl #1
   13650:	ldrb	r0, [r0, #1]
   13654:	tst	r0, #8
   13658:	bne	13678 <__assert_fail@plt+0x1860>
   1365c:	cmp	r1, #62	; 0x3e
   13660:	mov	r0, #0
   13664:	addeq	r3, r6, #2
   13668:	mov	r6, r3
   1366c:	b	136b4 <__assert_fail@plt+0x189c>
   13670:	mov	r0, #13
   13674:	b	136b8 <__assert_fail@plt+0x18a0>
   13678:	add	r6, r6, #2
   1367c:	mov	r0, #0
   13680:	add	r0, r0, r0, lsl #2
   13684:	add	r0, r1, r0, lsl #1
   13688:	ldrb	r1, [r6], #1
   1368c:	sub	r0, r0, #48	; 0x30
   13690:	add	r3, r2, r1, lsl #1
   13694:	ldrb	r3, [r3, #1]
   13698:	tst	r3, #8
   1369c:	bne	13680 <__assert_fail@plt+0x1868>
   136a0:	cmp	r1, #62	; 0x3e
   136a4:	mov	r1, #0
   136a8:	subne	r6, r6, #1
   136ac:	cmp	r1, r0, lsr #10
   136b0:	movwne	r0, #13
   136b4:	ldrb	r4, [r6]
   136b8:	and	r1, r0, #1016	; 0x3f8
   136bc:	add	r7, sp, #3
   136c0:	cmp	r1, #192	; 0xc0
   136c4:	mov	r1, #1
   136c8:	movwhi	r0, #13
   136cc:	mov	r9, r0
   136d0:	tst	r0, #1016	; 0x3f8
   136d4:	bfi	r9, r1, #3, #29
   136d8:	movne	r9, r0
   136dc:	cmp	r4, #0
   136e0:	beq	13768 <__assert_fail@plt+0x1950>
   136e4:	add	r5, r7, #1024	; 0x400
   136e8:	add	r6, r6, #1
   136ec:	add	r7, sp, #3
   136f0:	bl	11bfc <__ctype_b_loc@plt>
   136f4:	mov	lr, #9
   136f8:	mov	r2, #32
   136fc:	mov	ip, #94	; 0x5e
   13700:	ldr	r1, [r0]
   13704:	uxtb	r3, r4
   13708:	ldrb	r1, [r1, r3, lsl #1]
   1370c:	tst	r1, #2
   13710:	bne	1371c <__assert_fail@plt+0x1904>
   13714:	strb	r4, [r7]
   13718:	b	13750 <__assert_fail@plt+0x1938>
   1371c:	cmp	r3, #9
   13720:	beq	13734 <__assert_fail@plt+0x191c>
   13724:	cmp	r3, #10
   13728:	bne	1373c <__assert_fail@plt+0x1924>
   1372c:	strb	r2, [r7]
   13730:	b	13750 <__assert_fail@plt+0x1938>
   13734:	strb	lr, [r7]
   13738:	b	13750 <__assert_fail@plt+0x1938>
   1373c:	cmp	r3, #127	; 0x7f
   13740:	bcs	13714 <__assert_fail@plt+0x18fc>
   13744:	eor	r1, r4, #64	; 0x40
   13748:	strb	ip, [r7]
   1374c:	strb	r1, [r7, #1]!
   13750:	add	r7, r7, #1
   13754:	cmp	r7, r5
   13758:	bcs	13768 <__assert_fail@plt+0x1950>
   1375c:	ldrb	r4, [r6], #1
   13760:	cmp	r4, #0
   13764:	bne	13700 <__assert_fail@plt+0x18e8>
   13768:	mov	r0, #0
   1376c:	add	r1, sp, #3
   13770:	mov	r2, r8
   13774:	strb	r0, [r7]
   13778:	movw	r0, #64556	; 0xfc2c
   1377c:	movt	r0, #2
   13780:	ldr	r0, [r0]
   13784:	cmp	r0, #0
   13788:	mov	r0, r9
   1378c:	moveq	r3, #0
   13790:	movne	r3, #2
   13794:	bl	13b3c <__assert_fail@plt+0x1d24>
   13798:	sub	sp, fp, #24
   1379c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137a0:	push	{r4, r5, r6, r7, fp, lr}
   137a4:	add	fp, sp, #16
   137a8:	sub	sp, sp, #16
   137ac:	movw	r2, #64584	; 0xfc48
   137b0:	mov	r6, r0
   137b4:	mov	r0, #1
   137b8:	mov	r4, #0
   137bc:	mov	r3, #46	; 0x2e
   137c0:	mov	r5, r1
   137c4:	str	r0, [sp, #8]
   137c8:	movt	r2, #2
   137cc:	mov	r0, r6
   137d0:	str	r4, [sp]
   137d4:	str	r4, [sp, #4]
   137d8:	bl	11d1c <getnameinfo@plt>
   137dc:	cmp	r0, #0
   137e0:	beq	13804 <__assert_fail@plt+0x19ec>
   137e4:	bl	11a28 <gai_strerror@plt>
   137e8:	mov	r1, r0
   137ec:	movw	r0, #56043	; 0xdaeb
   137f0:	movt	r0, #1
   137f4:	bl	133c0 <__assert_fail@plt+0x15a8>
   137f8:	movw	r4, #56072	; 0xdb08
   137fc:	movt	r4, #1
   13800:	b	13864 <__assert_fail@plt+0x1a4c>
   13804:	movw	r7, #64584	; 0xfc48
   13808:	movw	r0, #56076	; 0xdb0c
   1380c:	movt	r7, #2
   13810:	movt	r0, #1
   13814:	mov	r1, r7
   13818:	bl	133c0 <__assert_fail@plt+0x15a8>
   1381c:	str	r4, [sp]
   13820:	str	r4, [sp, #4]
   13824:	movw	r4, #64648	; 0xfc88
   13828:	mov	r0, #8
   1382c:	mov	r1, r5
   13830:	movw	r3, #1025	; 0x401
   13834:	movt	r4, #2
   13838:	str	r0, [sp, #8]
   1383c:	mov	r0, r6
   13840:	mov	r2, r4
   13844:	bl	11d1c <getnameinfo@plt>
   13848:	cmp	r0, #0
   1384c:	beq	13870 <__assert_fail@plt+0x1a58>
   13850:	movw	r0, #56090	; 0xdb1a
   13854:	mov	r1, r7
   13858:	movt	r0, #1
   1385c:	bl	133c0 <__assert_fail@plt+0x15a8>
   13860:	mov	r4, r7
   13864:	mov	r0, r4
   13868:	sub	sp, fp, #16
   1386c:	pop	{r4, r5, r6, r7, fp, pc}
   13870:	mov	r0, r4
   13874:	mov	r1, #46	; 0x2e
   13878:	bl	11c38 <strchr@plt>
   1387c:	cmp	r0, #0
   13880:	beq	13864 <__assert_fail@plt+0x1a4c>
   13884:	mov	r5, r0
   13888:	movw	r0, #64564	; 0xfc34
   1388c:	movt	r0, #2
   13890:	add	r6, r5, #1
   13894:	ldr	r1, [r0]
   13898:	mov	r0, r6
   1389c:	bl	11b0c <strcasecmp@plt>
   138a0:	cmp	r0, #0
   138a4:	beq	13930 <__assert_fail@plt+0x1b18>
   138a8:	movw	r0, #64540	; 0xfc1c
   138ac:	movt	r0, #2
   138b0:	ldr	r0, [r0]
   138b4:	cmp	r0, #0
   138b8:	ldrne	r1, [r0]
   138bc:	cmpne	r1, #0
   138c0:	bne	1390c <__assert_fail@plt+0x1af4>
   138c4:	movw	r0, #64580	; 0xfc44
   138c8:	movt	r0, #2
   138cc:	ldr	r0, [r0]
   138d0:	cmp	r0, #0
   138d4:	ldrne	r1, [r0]
   138d8:	cmpne	r1, #0
   138dc:	beq	13864 <__assert_fail@plt+0x1a4c>
   138e0:	movw	r4, #64648	; 0xfc88
   138e4:	add	r6, r0, #4
   138e8:	movt	r4, #2
   138ec:	mov	r0, r4
   138f0:	bl	11b0c <strcasecmp@plt>
   138f4:	cmp	r0, #0
   138f8:	beq	13930 <__assert_fail@plt+0x1b18>
   138fc:	ldr	r1, [r6], #4
   13900:	cmp	r1, #0
   13904:	bne	138ec <__assert_fail@plt+0x1ad4>
   13908:	b	13864 <__assert_fail@plt+0x1a4c>
   1390c:	add	r7, r0, #4
   13910:	mov	r0, r6
   13914:	bl	11b0c <strcasecmp@plt>
   13918:	cmp	r0, #0
   1391c:	beq	13930 <__assert_fail@plt+0x1b18>
   13920:	ldr	r1, [r7], #4
   13924:	cmp	r1, #0
   13928:	bne	13910 <__assert_fail@plt+0x1af8>
   1392c:	b	138c4 <__assert_fail@plt+0x1aac>
   13930:	mov	r0, #0
   13934:	strb	r0, [r5]
   13938:	b	13864 <__assert_fail@plt+0x1a4c>
   1393c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13940:	add	fp, sp, #28
   13944:	sub	sp, sp, #4
   13948:	mov	r9, r0
   1394c:	mov	r0, r1
   13950:	mov	r5, r1
   13954:	bl	11c20 <strlen@plt>
   13958:	add	r0, r5, r0
   1395c:	ldrb	r1, [r0, #-1]!
   13960:	cmp	r1, #58	; 0x3a
   13964:	bne	13990 <__assert_fail@plt+0x1b78>
   13968:	mov	r4, #0
   1396c:	strb	r4, [r0]
   13970:	mov	r0, r5
   13974:	bl	11c20 <strlen@plt>
   13978:	add	r0, r5, r0
   1397c:	ldrb	r1, [r0, #-1]!
   13980:	cmp	r1, #58	; 0x3a
   13984:	beq	1396c <__assert_fail@plt+0x1b54>
   13988:	b	13990 <__assert_fail@plt+0x1b78>
   1398c:	add	r5, r5, #1
   13990:	ldrb	r2, [r5]
   13994:	cmp	r2, #58	; 0x3a
   13998:	beq	1398c <__assert_fail@plt+0x1b74>
   1399c:	cmp	r2, #0
   139a0:	beq	13b30 <__assert_fail@plt+0x1d18>
   139a4:	mov	r1, #1
   139a8:	mov	r0, #1
   139ac:	b	139b8 <__assert_fail@plt+0x1ba0>
   139b0:	ldrb	r2, [r5, r1]
   139b4:	add	r1, r1, #1
   139b8:	uxtb	r2, r2
   139bc:	cmp	r2, #58	; 0x3a
   139c0:	beq	139d0 <__assert_fail@plt+0x1bb8>
   139c4:	cmp	r2, #0
   139c8:	bne	139b0 <__assert_fail@plt+0x1b98>
   139cc:	b	139d8 <__assert_fail@plt+0x1bc0>
   139d0:	add	r0, r0, #1
   139d4:	b	139b0 <__assert_fail@plt+0x1b98>
   139d8:	cmp	r9, #0
   139dc:	beq	139fc <__assert_fail@plt+0x1be4>
   139e0:	mov	r1, #0
   139e4:	ldr	r2, [r9, r1, lsl #2]
   139e8:	add	r1, r1, #1
   139ec:	cmp	r2, #0
   139f0:	bne	139e4 <__assert_fail@plt+0x1bcc>
   139f4:	sub	r4, r1, #1
   139f8:	b	13a00 <__assert_fail@plt+0x1be8>
   139fc:	mov	r4, #0
   13a00:	add	r0, r4, r0
   13a04:	mov	r1, #4
   13a08:	add	r1, r1, r0, lsl #2
   13a0c:	mov	r0, r9
   13a10:	bl	1bc7c <argp_parse@@Base+0x23b4>
   13a14:	mov	r9, r0
   13a18:	cmp	r0, #0
   13a1c:	bne	13a38 <__assert_fail@plt+0x1c20>
   13a20:	bl	11c50 <__errno_location@plt>
   13a24:	ldr	r1, [r0]
   13a28:	movw	r2, #55355	; 0xd83b
   13a2c:	mov	r0, #1
   13a30:	movt	r2, #1
   13a34:	bl	11b6c <error@plt>
   13a38:	mov	r0, r5
   13a3c:	mov	r1, #58	; 0x3a
   13a40:	bl	11c38 <strchr@plt>
   13a44:	cmp	r0, #0
   13a48:	beq	13ac0 <__assert_fail@plt+0x1ca8>
   13a4c:	movw	r8, #55355	; 0xd83b
   13a50:	mov	r6, r0
   13a54:	mov	sl, #0
   13a58:	movt	r8, #1
   13a5c:	sub	r7, r6, r5
   13a60:	add	r0, r7, #1
   13a64:	bl	1bc4c <argp_parse@@Base+0x2384>
   13a68:	cmp	r0, #0
   13a6c:	str	r0, [r9, r4, lsl #2]
   13a70:	bne	13a8c <__assert_fail@plt+0x1c74>
   13a74:	bl	11c50 <__errno_location@plt>
   13a78:	ldr	r1, [r0]
   13a7c:	mov	r0, #1
   13a80:	mov	r2, r8
   13a84:	bl	11b6c <error@plt>
   13a88:	ldr	r0, [r9, r4, lsl #2]
   13a8c:	mov	r1, r5
   13a90:	mov	r2, r7
   13a94:	bl	11c98 <strncpy@plt>
   13a98:	ldr	r0, [r9, r4, lsl #2]
   13a9c:	add	r5, r6, #1
   13aa0:	mov	r1, #58	; 0x3a
   13aa4:	strb	sl, [r0, r7]
   13aa8:	mov	r0, r5
   13aac:	bl	11c38 <strchr@plt>
   13ab0:	mov	r6, r0
   13ab4:	add	r4, r4, #1
   13ab8:	cmp	r0, #0
   13abc:	bne	13a5c <__assert_fail@plt+0x1c44>
   13ac0:	mov	r0, r5
   13ac4:	bl	11c20 <strlen@plt>
   13ac8:	add	r0, r0, #1
   13acc:	bl	1b668 <argp_parse@@Base+0x1da0>
   13ad0:	mov	r6, r9
   13ad4:	mov	r1, r5
   13ad8:	str	r0, [r6, r4, lsl #2]!
   13adc:	bl	11b60 <strcpy@plt>
   13ae0:	mov	r0, #0
   13ae4:	str	r0, [r6, #4]
   13ae8:	movw	r0, #64548	; 0xfc24
   13aec:	movt	r0, #2
   13af0:	ldr	r0, [r0]
   13af4:	cmp	r0, #0
   13af8:	ldrne	r2, [r9]
   13afc:	cmpne	r2, #0
   13b00:	beq	13b30 <__assert_fail@plt+0x1d18>
   13b04:	movw	r6, #55377	; 0xd851
   13b08:	add	r4, r9, #4
   13b0c:	mov	r5, #0
   13b10:	movt	r6, #1
   13b14:	mov	r0, r6
   13b18:	mov	r1, r5
   13b1c:	bl	119c8 <printf@plt>
   13b20:	ldr	r2, [r4, r5, lsl #2]
   13b24:	add	r5, r5, #1
   13b28:	cmp	r2, #0
   13b2c:	bne	13b14 <__assert_fail@plt+0x1cfc>
   13b30:	mov	r0, r9
   13b34:	sub	sp, fp, #28
   13b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b40:	add	fp, sp, #28
   13b44:	sub	sp, sp, #292	; 0x124
   13b48:	mov	r5, r1
   13b4c:	movw	r1, #61968	; 0xf210
   13b50:	mov	r9, r2
   13b54:	mov	r4, r3
   13b58:	mov	sl, r0
   13b5c:	mov	r3, #0
   13b60:	movt	r1, #2
   13b64:	ldr	r2, [r1]
   13b68:	cmp	r2, #0
   13b6c:	beq	13bb0 <__assert_fail@plt+0x1d98>
   13b70:	ldr	r3, [r1, #4]
   13b74:	and	r0, sl, #1016	; 0x3f8
   13b78:	cmp	r3, r0
   13b7c:	mov	r3, r2
   13b80:	beq	13bb0 <__assert_fail@plt+0x1d98>
   13b84:	add	r1, r1, #8
   13b88:	ldr	r3, [r1]
   13b8c:	cmp	r3, #0
   13b90:	beq	13bac <__assert_fail@plt+0x1d94>
   13b94:	add	r2, r1, #8
   13b98:	ldr	r1, [r1, #4]
   13b9c:	cmp	r1, r0
   13ba0:	mov	r1, r2
   13ba4:	bne	13b88 <__assert_fail@plt+0x1d70>
   13ba8:	b	13bb0 <__assert_fail@plt+0x1d98>
   13bac:	mov	r3, #0
   13bb0:	movw	r2, #61864	; 0xf1a8
   13bb4:	movt	r2, #2
   13bb8:	ldr	r0, [r2]
   13bbc:	cmp	r0, #0
   13bc0:	beq	13bfc <__assert_fail@plt+0x1de4>
   13bc4:	ldr	r7, [r2, #4]
   13bc8:	and	r1, sl, #7
   13bcc:	cmp	r7, r1
   13bd0:	beq	13c00 <__assert_fail@plt+0x1de8>
   13bd4:	add	r2, r2, #8
   13bd8:	ldr	r0, [r2]
   13bdc:	cmp	r0, #0
   13be0:	beq	13bfc <__assert_fail@plt+0x1de4>
   13be4:	add	r7, r2, #8
   13be8:	ldr	r2, [r2, #4]
   13bec:	cmp	r2, r1
   13bf0:	mov	r2, r7
   13bf4:	bne	13bd8 <__assert_fail@plt+0x1dc0>
   13bf8:	b	13c00 <__assert_fail@plt+0x1de8>
   13bfc:	mov	r0, #0
   13c00:	movw	r6, #62949	; 0xf5e5
   13c04:	movw	r2, #55386	; 0xd85a
   13c08:	str	r0, [sp]
   13c0c:	mov	r1, #20
   13c10:	movt	r6, #2
   13c14:	movt	r2, #1
   13c18:	mov	r0, r6
   13c1c:	bl	11c5c <snprintf@plt>
   13c20:	movw	r0, #55392	; 0xd860
   13c24:	mov	r1, r6
   13c28:	mov	r2, sl
   13c2c:	mov	r3, r4
   13c30:	str	r9, [sp]
   13c34:	str	r5, [sp, #4]
   13c38:	movt	r0, #1
   13c3c:	bl	133c0 <__assert_fail@plt+0x15a8>
   13c40:	add	r6, sp, #160	; 0xa0
   13c44:	mov	r0, r6
   13c48:	bl	11d04 <sigemptyset@plt>
   13c4c:	mov	r0, r6
   13c50:	mov	r1, #1
   13c54:	bl	11bb4 <sigaddset@plt>
   13c58:	mov	r0, r6
   13c5c:	mov	r1, #14
   13c60:	bl	11bb4 <sigaddset@plt>
   13c64:	add	r2, sp, #32
   13c68:	mov	r0, #0
   13c6c:	mov	r1, r6
   13c70:	bl	119f8 <sigprocmask@plt>
   13c74:	mov	r0, r5
   13c78:	bl	11c20 <strlen@plt>
   13c7c:	mov	r7, r0
   13c80:	cmp	r0, #16
   13c84:	blt	13c9c <__assert_fail@plt+0x1e84>
   13c88:	ldrb	r0, [r5, #3]
   13c8c:	cmp	r0, #32
   13c90:	ldrbeq	r0, [r5, #6]
   13c94:	cmpeq	r0, #32
   13c98:	beq	13dc8 <__assert_fail@plt+0x1fb0>
   13c9c:	orr	r4, r4, #4
   13ca0:	movw	r0, #64632	; 0xfc78
   13ca4:	movt	r0, #2
   13ca8:	bl	11a70 <time@plt>
   13cac:	tst	r4, #4
   13cb0:	bne	13cec <__assert_fail@plt+0x1ed4>
   13cb4:	movw	r0, #62940	; 0xf5dc
   13cb8:	str	r5, [sp, #24]
   13cbc:	movt	r0, #2
   13cc0:	ldr	r0, [r0]
   13cc4:	cmp	r0, #0
   13cc8:	beq	13ce0 <__assert_fail@plt+0x1ec8>
   13ccc:	movw	r0, #64632	; 0xfc78
   13cd0:	movt	r0, #2
   13cd4:	bl	11a94 <ctime@plt>
   13cd8:	add	r0, r0, #4
   13cdc:	str	r0, [sp, #24]
   13ce0:	sub	r7, r7, #16
   13ce4:	add	r5, r5, #16
   13ce8:	b	13d00 <__assert_fail@plt+0x1ee8>
   13cec:	movw	r0, #64632	; 0xfc78
   13cf0:	movt	r0, #2
   13cf4:	bl	11a94 <ctime@plt>
   13cf8:	add	r0, r0, #4
   13cfc:	str	r0, [sp, #24]
   13d00:	movw	r0, #64560	; 0xfc30
   13d04:	ubfx	r6, sl, #3, #7
   13d08:	ands	r8, r4, #8
   13d0c:	movt	r0, #2
   13d10:	movwne	r6, #24
   13d14:	ldr	r0, [r0]
   13d18:	cmp	r0, #0
   13d1c:	beq	13d68 <__assert_fail@plt+0x1f50>
   13d20:	movw	r0, #64072	; 0xfa48
   13d24:	str	r9, [sp, #12]
   13d28:	str	r7, [sp, #20]
   13d2c:	str	r5, [sp, #28]
   13d30:	str	sl, [sp, #8]
   13d34:	str	r4, [sp, #16]
   13d38:	movt	r0, #2
   13d3c:	ldr	r9, [r0]
   13d40:	cmp	r9, #0
   13d44:	beq	14044 <__assert_fail@plt+0x222c>
   13d48:	ldr	r0, [sp, #8]
   13d4c:	mov	r1, #1
   13d50:	mov	r2, #0
   13d54:	and	r0, r0, #7
   13d58:	lsl	r4, r1, r0
   13d5c:	ldr	r0, [sp, #16]
   13d60:	and	sl, r0, #1
   13d64:	b	13e8c <__assert_fail@plt+0x2074>
   13d68:	movw	r0, #62164	; 0xf2d4
   13d6c:	mov	r1, #1
   13d70:	mov	r2, #0
   13d74:	movt	r0, #2
   13d78:	bl	11b90 <open64@plt>
   13d7c:	movw	r6, #64076	; 0xfa4c
   13d80:	movt	r6, #2
   13d84:	strh	r0, [r6, #6]
   13d88:	movw	r0, #64568	; 0xfc38
   13d8c:	movt	r0, #2
   13d90:	ldr	r0, [r0]
   13d94:	bl	11aac <strdup@plt>
   13d98:	str	r0, [r6, #432]	; 0x1b0
   13d9c:	ldrsh	r0, [r6, #6]
   13da0:	cmp	r0, #0
   13da4:	blt	14044 <__assert_fail@plt+0x222c>
   13da8:	mov	r0, r6
   13dac:	mov	r1, r9
   13db0:	mov	r2, r4
   13db4:	mov	r3, r5
   13db8:	bl	1413c <__assert_fail@plt+0x2324>
   13dbc:	ldrsh	r0, [r6, #6]
   13dc0:	bl	11e00 <close@plt>
   13dc4:	b	14044 <__assert_fail@plt+0x222c>
   13dc8:	ldrb	r0, [r5, #9]
   13dcc:	cmp	r0, #58	; 0x3a
   13dd0:	ldrbeq	r0, [r5, #12]
   13dd4:	cmpeq	r0, #58	; 0x3a
   13dd8:	bne	13c9c <__assert_fail@plt+0x1e84>
   13ddc:	ldrb	r0, [r5, #15]
   13de0:	cmp	r0, #32
   13de4:	orrne	r4, r4, #4
   13de8:	b	13ca0 <__assert_fail@plt+0x1e88>
   13dec:	ldr	r1, [sp, #24]
   13df0:	add	r0, r9, #416	; 0x1a0
   13df4:	mov	r2, #15
   13df8:	bl	11c98 <strncpy@plt>
   13dfc:	ldr	r1, [r9, #452]	; 0x1c4
   13e00:	ldr	r2, [r9, #456]	; 0x1c8
   13e04:	movw	r7, #62220	; 0xf30c
   13e08:	ldr	r0, [r9, #8]
   13e0c:	movt	r7, #2
   13e10:	add	r1, r1, #1
   13e14:	str	r1, [r9, #452]	; 0x1c4
   13e18:	ldr	r3, [r7, r2, lsl #2]
   13e1c:	movw	r2, #64632	; 0xfc78
   13e20:	movt	r2, #2
   13e24:	mov	r5, r2
   13e28:	ldr	r2, [r2]
   13e2c:	sub	r2, r2, r0
   13e30:	movw	r0, #55438	; 0xd88e
   13e34:	movt	r0, #1
   13e38:	bl	133c0 <__assert_fail@plt+0x15a8>
   13e3c:	ldr	r1, [r9, #456]	; 0x1c8
   13e40:	ldr	r0, [r9, #8]
   13e44:	mov	r2, #0
   13e48:	ldr	r1, [r7, r1, lsl #2]
   13e4c:	add	r0, r1, r0
   13e50:	ldr	r1, [r5]
   13e54:	cmp	r1, r0
   13e58:	ble	14038 <__assert_fail@plt+0x2220>
   13e5c:	ldr	r1, [sp, #12]
   13e60:	ldr	r2, [sp, #16]
   13e64:	mov	r0, r9
   13e68:	mov	r3, #0
   13e6c:	bl	1413c <__assert_fail@plt+0x2324>
   13e70:	ldr	r0, [r9, #456]	; 0x1c8
   13e74:	mov	r2, #0
   13e78:	add	r1, r0, #1
   13e7c:	cmn	r0, #1
   13e80:	movwne	r1, #1
   13e84:	str	r1, [r9, #456]	; 0x1c8
   13e88:	b	14038 <__assert_fail@plt+0x2220>
   13e8c:	add	r0, r9, r6
   13e90:	ldrb	r0, [r0, #12]
   13e94:	tst	r4, r0
   13e98:	beq	14038 <__assert_fail@plt+0x2220>
   13e9c:	cmp	sl, #0
   13ea0:	beq	13eb0 <__assert_fail@plt+0x2098>
   13ea4:	ldrh	r0, [r9, #4]
   13ea8:	cmp	r0, #3
   13eac:	beq	14038 <__assert_fail@plt+0x2220>
   13eb0:	cmp	r8, #0
   13eb4:	beq	13ee4 <__assert_fail@plt+0x20cc>
   13eb8:	movw	r1, #64632	; 0xfc78
   13ebc:	ldr	r0, [r9, #8]
   13ec0:	movt	r1, #2
   13ec4:	ldr	r1, [r1]
   13ec8:	sub	r0, r1, r0
   13ecc:	movw	r1, #62244	; 0xf324
   13ed0:	movt	r1, #2
   13ed4:	ldr	r1, [r1]
   13ed8:	add	r1, r1, r1, lsr #31
   13edc:	cmp	r0, r1, asr #1
   13ee0:	blt	14038 <__assert_fail@plt+0x2220>
   13ee4:	ldr	r1, [r9, #436]	; 0x1b4
   13ee8:	cmp	r1, #0
   13eec:	beq	13f38 <__assert_fail@plt+0x2120>
   13ef0:	ldr	r7, [r9, #440]	; 0x1b8
   13ef4:	ldr	r0, [sp, #28]
   13ef8:	mov	r2, r7
   13efc:	bl	11ddc <strncmp@plt>
   13f00:	mov	r2, #0
   13f04:	cmp	r0, #0
   13f08:	bne	14038 <__assert_fail@plt+0x2220>
   13f0c:	bl	11bfc <__ctype_b_loc@plt>
   13f10:	ldr	r1, [sp, #28]
   13f14:	ldr	r0, [r0]
   13f18:	mov	r2, #0
   13f1c:	ldrb	r1, [r1, r7]
   13f20:	ldrb	r0, [r0, r1, lsl #1]
   13f24:	tst	r0, #8
   13f28:	bne	14038 <__assert_fail@plt+0x2220>
   13f2c:	cmp	r1, #45	; 0x2d
   13f30:	cmpne	r1, #95	; 0x5f
   13f34:	beq	14038 <__assert_fail@plt+0x2220>
   13f38:	cmp	r8, #0
   13f3c:	bne	13f8c <__assert_fail@plt+0x2174>
   13f40:	ldr	r0, [r9, #448]	; 0x1c0
   13f44:	ldr	r1, [sp, #20]
   13f48:	cmp	r1, r0
   13f4c:	bne	13f8c <__assert_fail@plt+0x2174>
   13f50:	ldr	r7, [r9, #432]	; 0x1b0
   13f54:	cmp	r7, #0
   13f58:	beq	13f8c <__assert_fail@plt+0x2174>
   13f5c:	ldr	r0, [sp, #28]
   13f60:	add	r1, r9, #176	; 0xb0
   13f64:	bl	11998 <strcmp@plt>
   13f68:	mov	r2, #0
   13f6c:	cmp	r0, #0
   13f70:	bne	13f8c <__assert_fail@plt+0x2174>
   13f74:	ldr	r0, [sp, #12]
   13f78:	mov	r1, r7
   13f7c:	bl	11998 <strcmp@plt>
   13f80:	mov	r2, #0
   13f84:	cmp	r0, #0
   13f88:	beq	13dec <__assert_fail@plt+0x1fd4>
   13f8c:	ldr	r0, [r9, #452]	; 0x1c4
   13f90:	ldr	r7, [sp, #12]
   13f94:	cmp	r0, #0
   13f98:	beq	13fb4 <__assert_fail@plt+0x219c>
   13f9c:	mov	r0, r9
   13fa0:	mov	r1, r7
   13fa4:	mov	r2, #0
   13fa8:	mov	r3, #0
   13fac:	bl	1413c <__assert_fail@plt+0x2324>
   13fb0:	mov	r2, #0
   13fb4:	ldr	r1, [sp, #24]
   13fb8:	str	r2, [r9, #456]	; 0x1c8
   13fbc:	add	r0, r9, #416	; 0x1a0
   13fc0:	mov	r2, #15
   13fc4:	mov	r5, #0
   13fc8:	bl	11c98 <strncpy@plt>
   13fcc:	ldr	r0, [r9, #432]	; 0x1b0
   13fd0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   13fd4:	mov	r0, r7
   13fd8:	bl	11aac <strdup@plt>
   13fdc:	ldr	r1, [sp, #20]
   13fe0:	str	r0, [r9, #432]	; 0x1b0
   13fe4:	cmp	r1, #239	; 0xef
   13fe8:	bgt	14018 <__assert_fail@plt+0x2200>
   13fec:	ldr	r0, [sp, #8]
   13ff0:	str	r0, [r9, #444]	; 0x1bc
   13ff4:	str	r1, [r9, #448]	; 0x1c0
   13ff8:	ldr	r1, [sp, #28]
   13ffc:	add	r0, r9, #176	; 0xb0
   14000:	bl	11b60 <strcpy@plt>
   14004:	ldr	r2, [sp, #16]
   14008:	mov	r0, r9
   1400c:	mov	r1, r7
   14010:	mov	r3, #0
   14014:	b	14030 <__assert_fail@plt+0x2218>
   14018:	ldr	r2, [sp, #16]
   1401c:	ldr	r3, [sp, #28]
   14020:	mov	r0, r9
   14024:	mov	r1, r7
   14028:	str	r5, [r9, #448]	; 0x1c0
   1402c:	strb	r5, [r9, #176]	; 0xb0
   14030:	bl	1413c <__assert_fail@plt+0x2324>
   14034:	mov	r2, #0
   14038:	ldr	r9, [r9]
   1403c:	cmp	r9, #0
   14040:	bne	13e8c <__assert_fail@plt+0x2074>
   14044:	add	r1, sp, #32
   14048:	mov	r0, #2
   1404c:	mov	r2, #0
   14050:	bl	119f8 <sigprocmask@plt>
   14054:	sub	sp, fp, #28
   14058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1405c:	push	{r4, sl, fp, lr}
   14060:	add	fp, sp, #8
   14064:	sub	sp, sp, #8
   14068:	movw	r2, #61968	; 0xf210
   1406c:	mov	r3, #0
   14070:	movt	r2, #2
   14074:	ldr	r4, [r2]
   14078:	cmp	r4, #0
   1407c:	beq	140c0 <__assert_fail@plt+0x22a8>
   14080:	ldr	r3, [r2, #4]
   14084:	and	r1, r0, #1016	; 0x3f8
   14088:	cmp	r3, r1
   1408c:	mov	r3, r4
   14090:	beq	140c0 <__assert_fail@plt+0x22a8>
   14094:	add	r2, r2, #8
   14098:	ldr	r3, [r2]
   1409c:	cmp	r3, #0
   140a0:	beq	140bc <__assert_fail@plt+0x22a4>
   140a4:	add	r4, r2, #8
   140a8:	ldr	r2, [r2, #4]
   140ac:	cmp	r2, r1
   140b0:	mov	r2, r4
   140b4:	bne	14098 <__assert_fail@plt+0x2280>
   140b8:	b	140c0 <__assert_fail@plt+0x22a8>
   140bc:	mov	r3, #0
   140c0:	movw	r2, #61864	; 0xf1a8
   140c4:	movt	r2, #2
   140c8:	ldr	r1, [r2]
   140cc:	cmp	r1, #0
   140d0:	beq	1410c <__assert_fail@plt+0x22f4>
   140d4:	ldr	r4, [r2, #4]
   140d8:	and	r0, r0, #7
   140dc:	cmp	r4, r0
   140e0:	beq	14110 <__assert_fail@plt+0x22f8>
   140e4:	add	r2, r2, #8
   140e8:	ldr	r1, [r2]
   140ec:	cmp	r1, #0
   140f0:	beq	1410c <__assert_fail@plt+0x22f4>
   140f4:	add	r4, r2, #8
   140f8:	ldr	r2, [r2, #4]
   140fc:	cmp	r2, r0
   14100:	mov	r2, r4
   14104:	bne	140e8 <__assert_fail@plt+0x22d0>
   14108:	b	14110 <__assert_fail@plt+0x22f8>
   1410c:	mov	r1, #0
   14110:	movw	r4, #62949	; 0xf5e5
   14114:	movw	r2, #55386	; 0xd85a
   14118:	str	r1, [sp]
   1411c:	mov	r1, #20
   14120:	movt	r4, #2
   14124:	movt	r2, #1
   14128:	mov	r0, r4
   1412c:	bl	11c5c <snprintf@plt>
   14130:	mov	r0, r4
   14134:	sub	sp, fp, #8
   14138:	pop	{r4, sl, fp, pc}
   1413c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14140:	add	fp, sp, #28
   14144:	sub	sp, sp, #356	; 0x164
   14148:	sub	sp, sp, #1024	; 0x400
   1414c:	sub	r6, fp, #80	; 0x50
   14150:	mov	r8, r1
   14154:	mov	sl, r0
   14158:	vmov.i32	q8, #0	; 0x00000000
   1415c:	mov	r0, #32
   14160:	mov	r7, r3
   14164:	mov	r9, r2
   14168:	mov	r1, r6
   1416c:	add	r5, r6, #16
   14170:	vst1.64	{d16-d17}, [r1], r0
   14174:	vst1.64	{d16-d17}, [r5]
   14178:	vst1.64	{d16-d17}, [r1]
   1417c:	ldrh	r0, [sl, #4]
   14180:	cmp	r0, #6
   14184:	bne	141e0 <__assert_fail@plt+0x23c8>
   14188:	add	r0, sp, #16
   1418c:	mov	r4, sl
   14190:	str	r9, [sp, #8]
   14194:	str	r0, [fp, #-80]	; 0xffffffb0
   14198:	movw	r0, #64632	; 0xfc78
   1419c:	ldr	r9, [r4, #432]!	; 0x1b0
   141a0:	movt	r0, #2
   141a4:	bl	11a94 <ctime@plt>
   141a8:	movw	r2, #55476	; 0xd8b4
   141ac:	str	r0, [sp]
   141b0:	add	r0, sp, #16
   141b4:	mov	r1, #200	; 0xc8
   141b8:	mov	r3, r9
   141bc:	movt	r2, #1
   141c0:	bl	11c5c <snprintf@plt>
   141c4:	ldr	r9, [sp, #8]
   141c8:	add	r0, sp, #16
   141cc:	bl	11c20 <strlen@plt>
   141d0:	movw	r2, #58253	; 0xe38d
   141d4:	mov	r1, #0
   141d8:	movt	r2, #1
   141dc:	b	141fc <__assert_fail@plt+0x23e4>
   141e0:	movw	r2, #59225	; 0xe759
   141e4:	add	r0, sl, #416	; 0x1a0
   141e8:	add	r4, sl, #432	; 0x1b0
   141ec:	mov	r1, #1
   141f0:	str	r0, [fp, #-80]	; 0xffffffb0
   141f4:	movt	r2, #1
   141f8:	mov	r0, #15
   141fc:	str	r2, [fp, #-72]	; 0xffffffb8
   14200:	str	r0, [fp, #-76]	; 0xffffffb4
   14204:	str	r1, [fp, #-68]	; 0xffffffbc
   14208:	ldr	r0, [r4]
   1420c:	cmp	r0, #0
   14210:	beq	14224 <__assert_fail@plt+0x240c>
   14214:	str	r0, [fp, #-64]	; 0xffffffc0
   14218:	bl	11c20 <strlen@plt>
   1421c:	add	r5, r6, #24
   14220:	str	r0, [fp, #-60]	; 0xffffffc4
   14224:	movw	r1, #59225	; 0xe759
   14228:	cmp	r7, #0
   1422c:	mov	r0, #1
   14230:	movt	r1, #1
   14234:	str	r1, [r5]
   14238:	str	r0, [r5, #4]
   1423c:	beq	14250 <__assert_fail@plt+0x2438>
   14240:	mov	r0, r7
   14244:	str	r7, [r5, #8]
   14248:	bl	11c20 <strlen@plt>
   1424c:	b	14290 <__assert_fail@plt+0x2478>
   14250:	ldr	r3, [sl, #452]	; 0x1c4
   14254:	cmp	r3, #2
   14258:	blt	14284 <__assert_fail@plt+0x246c>
   1425c:	add	r4, sp, #216	; 0xd8
   14260:	movw	r2, #55518	; 0xd8de
   14264:	mov	r1, #80	; 0x50
   14268:	movt	r2, #1
   1426c:	mov	r0, r4
   14270:	str	r4, [r5, #8]
   14274:	bl	11c5c <snprintf@plt>
   14278:	mov	r0, r4
   1427c:	bl	11c20 <strlen@plt>
   14280:	b	14290 <__assert_fail@plt+0x2478>
   14284:	add	r0, sl, #176	; 0xb0
   14288:	str	r0, [r5, #8]
   1428c:	ldr	r0, [sl, #448]	; 0x1c0
   14290:	str	r0, [r5, #12]
   14294:	movw	r1, #62180	; 0xf2e4
   14298:	ldrsh	r0, [sl, #4]
   1429c:	movt	r1, #2
   142a0:	ldr	r1, [r1, r0, lsl #2]
   142a4:	movw	r0, #55549	; 0xd8fd
   142a8:	movt	r0, #1
   142ac:	bl	133c0 <__assert_fail@plt+0x15a8>
   142b0:	ldrsh	r0, [sl, #4]
   142b4:	cmp	r0, #9
   142b8:	bhi	1442c <__assert_fail@plt+0x2614>
   142bc:	add	r1, pc, #0
   142c0:	ldr	pc, [r1, r0, lsl #2]
   142c4:	andeq	r4, r1, ip, lsr r4
   142c8:	andeq	r4, r1, ip, ror #5
   142cc:	andeq	r4, r1, ip, ror #5
   142d0:	andeq	r4, r1, ip, asr r4
   142d4:	andeq	r4, r1, r4, lsl r6
   142d8:	andeq	r4, r1, r4, asr #7
   142dc:	andeq	r4, r1, r4, asr #7
   142e0:	andeq	r4, r1, r4, lsl #9
   142e4:			; <UNDEFINED> instruction: 0x000144b4
   142e8:	andeq	r4, r1, ip, ror #5
   142ec:	movw	r0, #64632	; 0xfc78
   142f0:	movt	r0, #2
   142f4:	ldr	r0, [r0]
   142f8:	str	r0, [sl, #8]
   142fc:	movw	r0, #60018	; 0xea72
   14300:	ldr	r1, [sl, #40]	; 0x28
   14304:	movt	r0, #1
   14308:	bl	133c0 <__assert_fail@plt+0x15a8>
   1430c:	ldrh	r0, [sl, #4]
   14310:	movw	r8, #65534	; 0xfffe
   14314:	movw	r1, #55515	; 0xd8db
   14318:	movw	r2, #55516	; 0xd8dc
   1431c:	movt	r1, #1
   14320:	movt	r2, #1
   14324:	and	r0, r0, r8
   14328:	cmp	r0, #2
   1432c:	moveq	r2, r1
   14330:	movwne	r0, #1
   14334:	str	r2, [r5, #16]
   14338:	str	r0, [r5, #20]
   1433c:	sub	r5, fp, #80	; 0x50
   14340:	ldrh	r0, [sl, #6]
   14344:	sxth	r0, r0
   14348:	mov	r1, r5
   1434c:	mov	r2, #6
   14350:	bl	11cbc <writev@plt>
   14354:	cmn	r0, #1
   14358:	bgt	1457c <__assert_fail@plt+0x2764>
   1435c:	bl	11c50 <__errno_location@plt>
   14360:	ldr	r4, [r0]
   14364:	mov	r7, r0
   14368:	cmp	r4, #11
   1436c:	ldrheq	r0, [sl, #4]
   14370:	cmpeq	r0, #9
   14374:	beq	1477c <__assert_fail@plt+0x2964>
   14378:	ldrsh	r0, [sl, #6]
   1437c:	bl	11e00 <close@plt>
   14380:	cmp	r4, #9
   14384:	cmpne	r4, #5
   14388:	bne	14404 <__assert_fail@plt+0x25ec>
   1438c:	ldrh	r0, [sl, #4]
   14390:	and	r0, r0, r8
   14394:	cmp	r0, #2
   14398:	bne	14404 <__assert_fail@plt+0x25ec>
   1439c:	ldr	r0, [sl, #40]	; 0x28
   143a0:	movw	r1, #1025	; 0x401
   143a4:	mov	r2, #0
   143a8:	bl	11b90 <open64@plt>
   143ac:	tst	r0, #32768	; 0x8000
   143b0:	strh	r0, [sl, #6]
   143b4:	beq	14344 <__assert_fail@plt+0x252c>
   143b8:	mov	r0, #0
   143bc:	strh	r0, [sl, #4]
   143c0:	b	14410 <__assert_fail@plt+0x25f8>
   143c4:	movw	r0, #64632	; 0xfc78
   143c8:	movt	r0, #2
   143cc:	ldr	r0, [r0]
   143d0:	str	r0, [sl, #8]
   143d4:	movw	r0, #55516	; 0xd8dc
   143d8:	movt	r0, #1
   143dc:	bl	133c0 <__assert_fail@plt+0x15a8>
   143e0:	movw	r1, #55515	; 0xd8db
   143e4:	mov	r0, #2
   143e8:	movt	r1, #1
   143ec:	str	r1, [r5, #16]
   143f0:	str	r0, [r5, #20]
   143f4:	sub	r1, fp, #80	; 0x50
   143f8:	mov	r0, sl
   143fc:	bl	14860 <__assert_fail@plt+0x2a48>
   14400:	b	14770 <__assert_fail@plt+0x2958>
   14404:	mov	r0, #0
   14408:	strh	r0, [sl, #4]
   1440c:	str	r4, [r7]
   14410:	ldr	r0, [sl, #40]	; 0x28
   14414:	bl	13448 <__assert_fail@plt+0x1630>
   14418:	ldr	r0, [sl, #40]	; 0x28
   1441c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14420:	mov	r0, #0
   14424:	str	r0, [sl, #40]	; 0x28
   14428:	b	14770 <__assert_fail@plt+0x2958>
   1442c:	uxth	r0, r0
   14430:	cmp	r0, #8
   14434:	bne	1477c <__assert_fail@plt+0x2964>
   14438:	b	14784 <__assert_fail@plt+0x296c>
   1443c:	movw	r0, #64632	; 0xfc78
   14440:	movt	r0, #2
   14444:	ldr	r0, [r0]
   14448:	str	r0, [sl, #8]
   1444c:	movw	r0, #55516	; 0xd8dc
   14450:	movt	r0, #1
   14454:	bl	133c0 <__assert_fail@plt+0x15a8>
   14458:	b	14770 <__assert_fail@plt+0x2958>
   1445c:	movw	r0, #64632	; 0xfc78
   14460:	tst	r9, #1
   14464:	movt	r0, #2
   14468:	ldr	r0, [r0]
   1446c:	str	r0, [sl, #8]
   14470:	beq	142ec <__assert_fail@plt+0x24d4>
   14474:	movw	r0, #55999	; 0xdabf
   14478:	movt	r0, #1
   1447c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14480:	b	14770 <__assert_fail@plt+0x2958>
   14484:	mov	r0, #0
   14488:	bl	11a70 <time@plt>
   1448c:	ldr	r1, [sl, #8]
   14490:	sub	r4, r0, r1
   14494:	cmp	r4, #180	; 0xb4
   14498:	blt	1459c <__assert_fail@plt+0x2784>
   1449c:	movw	r0, #55563	; 0xd90b
   144a0:	movt	r0, #1
   144a4:	bl	133c0 <__assert_fail@plt+0x15a8>
   144a8:	mov	r0, #4
   144ac:	strh	r0, [sl, #4]
   144b0:	b	14614 <__assert_fail@plt+0x27fc>
   144b4:	ldr	r1, [sl, #40]	; 0x28
   144b8:	movw	r0, #60018	; 0xea72
   144bc:	movt	r0, #1
   144c0:	bl	133c0 <__assert_fail@plt+0x15a8>
   144c4:	mov	r0, #0
   144c8:	bl	11a70 <time@plt>
   144cc:	ldr	r1, [sl, #8]
   144d0:	sub	r0, r0, r1
   144d4:	cmp	r0, #180	; 0xb4
   144d8:	blt	145bc <__assert_fail@plt+0x27a4>
   144dc:	vmov.i32	q8, #0	; 0x00000000
   144e0:	add	r0, sp, #296	; 0x128
   144e4:	add	r2, sp, #296	; 0x128
   144e8:	add	r3, sp, #12
   144ec:	vst1.64	{d16-d17}, [r0]!
   144f0:	vst1.64	{d16-d17}, [r0]
   144f4:	movw	r0, #62228	; 0xf314
   144f8:	movt	r0, #2
   144fc:	ldr	r0, [r0]
   14500:	cmp	r0, #0
   14504:	str	r0, [sp, #300]	; 0x12c
   14508:	moveq	r0, #32
   1450c:	streq	r0, [sp, #296]	; 0x128
   14510:	movw	r0, #62936	; 0xf5d8
   14514:	movt	r0, #2
   14518:	ldr	r1, [r0]
   1451c:	ldr	r0, [sl, #40]	; 0x28
   14520:	bl	11da0 <getaddrinfo@plt>
   14524:	cmp	r0, #0
   14528:	beq	145d0 <__assert_fail@plt+0x27b8>
   1452c:	bl	11a28 <gai_strerror@plt>
   14530:	mov	r1, r0
   14534:	movw	r0, #55655	; 0xd967
   14538:	movt	r0, #1
   1453c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14540:	ldr	r1, [sl, #452]	; 0x1c4
   14544:	movw	r0, #55668	; 0xd974
   14548:	movt	r0, #1
   1454c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14550:	ldr	r0, [sl, #452]	; 0x1c4
   14554:	sub	r1, r0, #1
   14558:	cmp	r0, #0
   1455c:	str	r1, [sl, #452]	; 0x1c4
   14560:	bgt	14770 <__assert_fail@plt+0x2958>
   14564:	mov	r4, #0
   14568:	strh	r4, [sl, #4]
   1456c:	ldr	r0, [sl, #40]	; 0x28
   14570:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14574:	str	r4, [sl, #40]	; 0x28
   14578:	b	14770 <__assert_fail@plt+0x2958>
   1457c:	tst	r9, #2
   14580:	beq	14770 <__assert_fail@plt+0x2958>
   14584:	ldrb	r0, [sl, #460]	; 0x1cc
   14588:	tst	r0, #1
   1458c:	bne	14770 <__assert_fail@plt+0x2958>
   14590:	ldrsh	r0, [sl, #6]
   14594:	bl	1198c <fsync@plt>
   14598:	b	14770 <__assert_fail@plt+0x2958>
   1459c:	ldr	r1, [sl, #40]	; 0x28
   145a0:	movw	r0, #60018	; 0xea72
   145a4:	movt	r0, #1
   145a8:	bl	133c0 <__assert_fail@plt+0x15a8>
   145ac:	movw	r0, #55607	; 0xd937
   145b0:	rsb	r1, r4, #180	; 0xb4
   145b4:	movt	r0, #1
   145b8:	b	145c8 <__assert_fail@plt+0x27b0>
   145bc:	rsb	r1, r0, #180	; 0xb4
   145c0:	movw	r0, #55702	; 0xd996
   145c4:	movt	r0, #1
   145c8:	bl	133c0 <__assert_fail@plt+0x15a8>
   145cc:	b	14770 <__assert_fail@plt+0x2958>
   145d0:	ldr	r1, [sl, #40]	; 0x28
   145d4:	movw	r0, #55681	; 0xd981
   145d8:	movt	r0, #1
   145dc:	bl	133c0 <__assert_fail@plt+0x15a8>
   145e0:	ldr	r5, [sp, #12]
   145e4:	ldr	r0, [r5, #16]
   145e8:	str	r0, [sl, #172]	; 0xac
   145ec:	add	r0, sl, #44	; 0x2c
   145f0:	ldr	r2, [r5, #16]
   145f4:	ldr	r1, [r5, #20]
   145f8:	bl	11a58 <memcpy@plt>
   145fc:	mov	r0, r5
   14600:	bl	11d94 <freeaddrinfo@plt>
   14604:	mov	r0, #4
   14608:	strh	r0, [sl, #4]
   1460c:	mov	r0, #0
   14610:	str	r0, [sl, #452]	; 0x1c4
   14614:	ldr	r1, [sl, #40]	; 0x28
   14618:	movw	r0, #60018	; 0xea72
   1461c:	movt	r0, #1
   14620:	bl	133c0 <__assert_fail@plt+0x15a8>
   14624:	movw	r0, #64568	; 0xfc38
   14628:	movt	r0, #2
   1462c:	ldr	r1, [r0]
   14630:	mov	r0, r8
   14634:	bl	11b0c <strcasecmp@plt>
   14638:	cmp	r0, #0
   1463c:	movwne	r0, #62248	; 0xf328
   14640:	movtne	r0, #2
   14644:	ldrne	r0, [r0]
   14648:	cmpne	r0, #0
   1464c:	bne	14674 <__assert_fail@plt+0x285c>
   14650:	movw	r0, #64636	; 0xfc7c
   14654:	movt	r0, #2
   14658:	ldr	r0, [r0]
   1465c:	cmp	r0, #0
   14660:	beq	14684 <__assert_fail@plt+0x286c>
   14664:	movw	r0, #55781	; 0xd9e5
   14668:	movt	r0, #1
   1466c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14670:	b	14770 <__assert_fail@plt+0x2958>
   14674:	movw	r0, #55749	; 0xd9c5
   14678:	movt	r0, #1
   1467c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14680:	b	14770 <__assert_fail@plt+0x2958>
   14684:	mov	r4, sl
   14688:	movw	r9, #62232	; 0xf318
   1468c:	ldrh	r0, [r4, #44]!	; 0x2c
   14690:	movt	r9, #2
   14694:	subs	r5, r0, #2
   14698:	movwne	r5, #4
   1469c:	ldr	r8, [r9, r5]
   146a0:	cmn	r8, #1
   146a4:	ble	1478c <__assert_fail@plt+0x2974>
   146a8:	movw	r0, #64632	; 0xfc78
   146ac:	movw	r2, #55950	; 0xda8e
   146b0:	add	r6, sp, #296	; 0x128
   146b4:	movt	r0, #2
   146b8:	movt	r2, #1
   146bc:	ldr	r0, [r0]
   146c0:	str	r0, [sl, #8]
   146c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   146c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   146cc:	ldr	r3, [sl, #444]	; 0x1bc
   146d0:	stm	sp, {r0, r1}
   146d4:	mov	r0, r6
   146d8:	movw	r1, #1025	; 0x401
   146dc:	bl	11c5c <snprintf@plt>
   146e0:	mov	r0, r6
   146e4:	bl	11c20 <strlen@plt>
   146e8:	mov	r7, r0
   146ec:	ldr	r0, [sl, #172]	; 0xac
   146f0:	mov	r1, r6
   146f4:	mov	r3, #0
   146f8:	str	r4, [sp]
   146fc:	cmp	r7, #1024	; 0x400
   14700:	movge	r7, #1024	; 0x400
   14704:	mov	r2, r7
   14708:	str	r0, [sp, #4]
   1470c:	mov	r0, r8
   14710:	bl	11ce0 <sendto@plt>
   14714:	cmp	r0, r7
   14718:	beq	1475c <__assert_fail@plt+0x2944>
   1471c:	bl	11c50 <__errno_location@plt>
   14720:	ldr	r7, [r0]
   14724:	mov	r4, r0
   14728:	mov	r0, r7
   1472c:	bl	11bcc <strerror@plt>
   14730:	mov	r2, r0
   14734:	movw	r0, #55963	; 0xda9b
   14738:	mov	r1, r7
   1473c:	movt	r0, #1
   14740:	bl	133c0 <__assert_fail@plt+0x15a8>
   14744:	mov	r0, #7
   14748:	strh	r0, [sl, #4]
   1474c:	movw	r0, #55992	; 0xdab8
   14750:	str	r7, [r4]
   14754:	movt	r0, #1
   14758:	bl	13448 <__assert_fail@plt+0x1630>
   1475c:	ldr	r0, [r9, r5]
   14760:	cmn	r0, #1
   14764:	bgt	14770 <__assert_fail@plt+0x2958>
   14768:	mov	r0, r8
   1476c:	bl	11e00 <close@plt>
   14770:	ldrh	r0, [sl, #4]
   14774:	cmp	r0, #8
   14778:	beq	14784 <__assert_fail@plt+0x296c>
   1477c:	mov	r0, #0
   14780:	str	r0, [sl, #452]	; 0x1c4
   14784:	sub	sp, fp, #28
   14788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1478c:	add	r2, sp, #296	; 0x128
   14790:	vmov.i32	q8, #0	; 0x00000000
   14794:	add	r3, sp, #12
   14798:	add	r1, r2, #12
   1479c:	vst1.32	{d16-d17}, [r1]
   147a0:	mov	r1, #0
   147a4:	str	r1, [sp, #324]	; 0x144
   147a8:	str	r0, [sp, #300]	; 0x12c
   147ac:	mov	r0, #2
   147b0:	str	r0, [sp, #304]	; 0x130
   147b4:	mov	r0, #1
   147b8:	str	r0, [sp, #296]	; 0x128
   147bc:	movw	r0, #62936	; 0xf5d8
   147c0:	movt	r0, #2
   147c4:	ldr	r1, [r0]
   147c8:	mov	r0, #0
   147cc:	bl	11da0 <getaddrinfo@plt>
   147d0:	cmp	r0, #0
   147d4:	beq	147ec <__assert_fail@plt+0x29d4>
   147d8:	bl	11a28 <gai_strerror@plt>
   147dc:	mov	r1, r0
   147e0:	movw	r0, #55829	; 0xda15
   147e4:	movt	r0, #1
   147e8:	b	145c8 <__assert_fail@plt+0x27b0>
   147ec:	ldr	r2, [sp, #12]
   147f0:	ldmib	r2, {r0, r1, r2}
   147f4:	bl	11dac <socket@plt>
   147f8:	cmn	r0, #1
   147fc:	ble	14848 <__assert_fail@plt+0x2a30>
   14800:	mov	r8, r0
   14804:	ldr	r0, [sp, #12]
   14808:	ldr	r2, [r0, #16]
   1480c:	ldr	r1, [r0, #20]
   14810:	mov	r0, r8
   14814:	bl	11c74 <bind@plt>
   14818:	mov	r7, r0
   1481c:	ldr	r0, [sp, #12]
   14820:	bl	11d94 <freeaddrinfo@plt>
   14824:	cmp	r7, #0
   14828:	beq	146a8 <__assert_fail@plt+0x2890>
   1482c:	bl	11c50 <__errno_location@plt>
   14830:	ldr	r0, [r0]
   14834:	bl	11bcc <strerror@plt>
   14838:	mov	r1, r0
   1483c:	movw	r0, #55911	; 0xda67
   14840:	movt	r0, #1
   14844:	b	145c8 <__assert_fail@plt+0x27b0>
   14848:	movw	r0, #55872	; 0xda40
   1484c:	movt	r0, #1
   14850:	bl	133c0 <__assert_fail@plt+0x15a8>
   14854:	ldr	r0, [sp, #12]
   14858:	bl	11d94 <freeaddrinfo@plt>
   1485c:	b	14770 <__assert_fail@plt+0x2958>
   14860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14864:	add	fp, sp, #28
   14868:	sub	sp, sp, #52	; 0x34
   1486c:	movw	r2, #62972	; 0xf5fc
   14870:	mov	r5, r0
   14874:	mov	r6, r1
   14878:	movt	r2, #2
   1487c:	ldr	r0, [r2]
   14880:	add	r1, r0, #1
   14884:	cmp	r0, #0
   14888:	str	r1, [r2]
   1488c:	beq	14898 <__assert_fail@plt+0x2a80>
   14890:	sub	sp, fp, #28
   14894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14898:	movw	r0, #56011	; 0xdacb
   1489c:	sub	r1, fp, #36	; 0x24
   148a0:	sub	r2, fp, #32
   148a4:	mov	r3, #3
   148a8:	movt	r0, #1
   148ac:	bl	1af94 <argp_parse@@Base+0x16cc>
   148b0:	cmn	r0, #1
   148b4:	ble	14988 <__assert_fail@plt+0x2b70>
   148b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   148bc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   148c0:	cmp	r0, #1
   148c4:	blt	1499c <__assert_fail@plt+0x2b84>
   148c8:	str	r6, [sp, #4]
   148cc:	add	r6, sp, #11
   148d0:	add	r1, r4, #8
   148d4:	mov	r0, r6
   148d8:	mov	r2, #32
   148dc:	bl	11c98 <strncpy@plt>
   148e0:	mov	r0, #0
   148e4:	strb	r0, [sp, #43]	; 0x2b
   148e8:	ldrh	r0, [r5, #4]
   148ec:	cmp	r0, #6
   148f0:	beq	14934 <__assert_fail@plt+0x2b1c>
   148f4:	ldr	r8, [r5, #40]	; 0x28
   148f8:	cmp	r8, #1
   148fc:	blt	14968 <__assert_fail@plt+0x2b50>
   14900:	ldr	r9, [r5, #44]	; 0x2c
   14904:	add	r7, r4, #44	; 0x2c
   14908:	mov	sl, #0
   1490c:	ldr	r0, [r9, sl, lsl #2]
   14910:	mov	r1, r7
   14914:	mov	r2, #32
   14918:	bl	11ddc <strncmp@plt>
   1491c:	cmp	r0, #0
   14920:	beq	14934 <__assert_fail@plt+0x2b1c>
   14924:	add	sl, sl, #1
   14928:	cmp	sl, r8
   1492c:	blt	1490c <__assert_fail@plt+0x2af4>
   14930:	b	14968 <__assert_fail@plt+0x2b50>
   14934:	ldr	r0, [sp, #4]
   14938:	mov	r1, #6
   1493c:	mov	r2, r6
   14940:	mov	r3, #10
   14944:	bl	15ea8 <daemon@@Base+0x194>
   14948:	cmp	r0, #0
   1494c:	beq	14968 <__assert_fail@plt+0x2b50>
   14950:	mov	r7, r0
   14954:	bl	11c50 <__errno_location@plt>
   14958:	mov	r1, #0
   1495c:	str	r1, [r0]
   14960:	mov	r0, r7
   14964:	bl	13448 <__assert_fail@plt+0x1630>
   14968:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1496c:	add	r4, r4, #384	; 0x180
   14970:	add	r1, r0, r0, lsl #1
   14974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14978:	add	r1, r0, r1, lsl #7
   1497c:	cmp	r4, r1
   14980:	bcc	148d0 <__assert_fail@plt+0x2ab8>
   14984:	b	149a0 <__assert_fail@plt+0x2b88>
   14988:	movw	r0, #56025	; 0xdad9
   1498c:	movt	r0, #1
   14990:	bl	13448 <__assert_fail@plt+0x1630>
   14994:	sub	sp, fp, #28
   14998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1499c:	mov	r0, r4
   149a0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   149a4:	movw	r1, #62972	; 0xf5fc
   149a8:	mov	r0, #0
   149ac:	movt	r1, #2
   149b0:	str	r0, [r1]
   149b4:	sub	sp, fp, #28
   149b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149c0:	add	fp, sp, #28
   149c4:	sub	sp, sp, #4
   149c8:	movw	r1, #54693	; 0xd5a5
   149cc:	mov	r4, r0
   149d0:	movt	r1, #1
   149d4:	bl	11d70 <fopen64@plt>
   149d8:	cmp	r0, #0
   149dc:	beq	14c80 <__assert_fail@plt+0x2e68>
   149e0:	mov	r9, r0
   149e4:	mov	r0, #2048	; 0x800
   149e8:	bl	1bc4c <argp_parse@@Base+0x2384>
   149ec:	cmp	r0, #0
   149f0:	beq	14d00 <__assert_fail@plt+0x2ee8>
   149f4:	movw	r4, #64576	; 0xfc40
   149f8:	mov	r6, r0
   149fc:	movt	r4, #2
   14a00:	ldr	r0, [r4]
   14a04:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14a08:	mov	r0, #0
   14a0c:	mov	r1, #2048	; 0x800
   14a10:	mov	r2, r9
   14a14:	mov	r5, #2048	; 0x800
   14a18:	str	r0, [r4]
   14a1c:	mov	r0, r6
   14a20:	bl	11a34 <fgets@plt>
   14a24:	cmp	r0, #0
   14a28:	beq	14d18 <__assert_fail@plt+0x2f00>
   14a2c:	mov	sl, #0
   14a30:	mov	r8, #0
   14a34:	mov	r7, r6
   14a38:	b	14a80 <__assert_fail@plt+0x2c68>
   14a3c:	mov	r8, #0
   14a40:	mov	r0, #1
   14a44:	mov	r1, #464	; 0x1d0
   14a48:	strb	r8, [r6, #1]
   14a4c:	bl	1bbf8 <argp_parse@@Base+0x2330>
   14a50:	mov	r4, r0
   14a54:	mov	r0, r7
   14a58:	mov	r1, r4
   14a5c:	bl	14d60 <__assert_fail@plt+0x2f48>
   14a60:	movw	r0, #64072	; 0xfa48
   14a64:	mov	r6, r7
   14a68:	movt	r0, #2
   14a6c:	mov	r1, r0
   14a70:	ldr	r0, [r0]
   14a74:	str	r4, [r1]
   14a78:	str	r0, [r4]
   14a7c:	b	14c60 <__assert_fail@plt+0x2e48>
   14a80:	mov	r0, r6
   14a84:	bl	11c20 <strlen@plt>
   14a88:	mov	r4, r0
   14a8c:	cmp	r8, #0
   14a90:	beq	14ac4 <__assert_fail@plt+0x2cac>
   14a94:	mov	r1, r6
   14a98:	b	14aa0 <__assert_fail@plt+0x2c88>
   14a9c:	add	r1, r1, #1
   14aa0:	ldrb	r0, [r1]
   14aa4:	cmp	r0, #32
   14aa8:	cmpne	r0, #9
   14aac:	beq	14a9c <__assert_fail@plt+0x2c84>
   14ab0:	sub	r0, r6, r1
   14ab4:	add	r4, r0, r4
   14ab8:	mov	r0, r6
   14abc:	add	r2, r4, #1
   14ac0:	bl	11a04 <memmove@plt>
   14ac4:	mov	r0, r6
   14ac8:	mov	r1, #10
   14acc:	bl	11c38 <strchr@plt>
   14ad0:	cmp	r0, #0
   14ad4:	beq	14b6c <__assert_fail@plt+0x2d54>
   14ad8:	bl	11bfc <__ctype_b_loc@plt>
   14adc:	mov	r4, r0
   14ae0:	ldr	r0, [r0]
   14ae4:	mov	r1, r7
   14ae8:	ldrb	r2, [r1], #1
   14aec:	add	r3, r0, r2, lsl #1
   14af0:	ldrb	r3, [r3, #1]
   14af4:	tst	r3, #32
   14af8:	bne	14ae8 <__assert_fail@plt+0x2cd0>
   14afc:	cmp	r2, #35	; 0x23
   14b00:	beq	14b9c <__assert_fail@plt+0x2d84>
   14b04:	cmp	r2, #33	; 0x21
   14b08:	beq	14bb4 <__assert_fail@plt+0x2d9c>
   14b0c:	cmp	r2, #0
   14b10:	beq	14c58 <__assert_fail@plt+0x2e40>
   14b14:	sub	r6, r1, #1
   14b18:	mov	r0, r6
   14b1c:	bl	11c20 <strlen@plt>
   14b20:	add	r2, r0, #1
   14b24:	mov	r0, r7
   14b28:	mov	r1, r6
   14b2c:	bl	11a04 <memmove@plt>
   14b30:	mov	r0, r7
   14b34:	bl	11c20 <strlen@plt>
   14b38:	add	r6, r7, r0
   14b3c:	ldr	r0, [r4]
   14b40:	ldrb	r1, [r6, #-1]!
   14b44:	add	r2, r0, r1, lsl #1
   14b48:	ldrb	r2, [r2, #1]
   14b4c:	tst	r2, #32
   14b50:	bne	14b40 <__assert_fail@plt+0x2d28>
   14b54:	cmp	r1, #92	; 0x5c
   14b58:	bne	14a3c <__assert_fail@plt+0x2c24>
   14b5c:	mov	r0, #0
   14b60:	mov	r8, #1
   14b64:	strb	r0, [r6]
   14b68:	b	14c60 <__assert_fail@plt+0x2e48>
   14b6c:	lsl	r5, r5, #1
   14b70:	mov	r0, r7
   14b74:	mov	r1, r5
   14b78:	bl	1bc7c <argp_parse@@Base+0x23b4>
   14b7c:	cmp	r0, #0
   14b80:	beq	14d38 <__assert_fail@plt+0x2f20>
   14b84:	add	r1, r0, sl
   14b88:	mov	r8, #0
   14b8c:	mov	r7, r0
   14b90:	add	r1, r1, r4
   14b94:	sub	r6, r1, #1
   14b98:	b	14c60 <__assert_fail@plt+0x2e48>
   14b9c:	ldrb	r2, [r1]
   14ba0:	mov	r8, #0
   14ba4:	cmp	r2, #33	; 0x21
   14ba8:	bne	14c5c <__assert_fail@plt+0x2e44>
   14bac:	add	r1, r1, #1
   14bb0:	b	14bc0 <__assert_fail@plt+0x2da8>
   14bb4:	ldrb	r2, [r1]
   14bb8:	cmp	r2, #33	; 0x21
   14bbc:	addeq	r1, r1, #1
   14bc0:	sub	r4, r1, #1
   14bc4:	ldrb	r1, [r4, #1]!
   14bc8:	add	r2, r0, r1, lsl #1
   14bcc:	ldrb	r2, [r2, #1]
   14bd0:	tst	r2, #32
   14bd4:	bne	14bc4 <__assert_fail@plt+0x2dac>
   14bd8:	cmp	r1, #0
   14bdc:	beq	14c58 <__assert_fail@plt+0x2e40>
   14be0:	movw	r0, #64576	; 0xfc40
   14be4:	movt	r0, #2
   14be8:	mov	r6, r0
   14bec:	ldr	r0, [r0]
   14bf0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14bf4:	mov	r8, #0
   14bf8:	str	r8, [r6]
   14bfc:	ldrb	r0, [r4]
   14c00:	cmp	r0, #42	; 0x2a
   14c04:	beq	14c5c <__assert_fail@plt+0x2e44>
   14c08:	mov	r0, r4
   14c0c:	mov	r1, #44	; 0x2c
   14c10:	bl	11c38 <strchr@plt>
   14c14:	cmp	r0, #0
   14c18:	movne	r1, #0
   14c1c:	strbne	r1, [r0]
   14c20:	movw	r1, #58155	; 0xe32b
   14c24:	mov	r0, r4
   14c28:	movt	r1, #1
   14c2c:	bl	11d88 <strpbrk@plt>
   14c30:	cmp	r0, #0
   14c34:	movne	r1, #0
   14c38:	strbne	r1, [r0]
   14c3c:	mov	r0, r4
   14c40:	bl	11aac <strdup@plt>
   14c44:	movw	r1, #64576	; 0xfc40
   14c48:	mov	r6, r7
   14c4c:	movt	r1, #2
   14c50:	str	r0, [r1]
   14c54:	b	14c60 <__assert_fail@plt+0x2e48>
   14c58:	mov	r8, #0
   14c5c:	mov	r6, r7
   14c60:	sub	sl, r6, r7
   14c64:	mov	r0, r6
   14c68:	mov	r2, r9
   14c6c:	sub	r1, r5, sl
   14c70:	bl	11a34 <fgets@plt>
   14c74:	cmp	r0, #0
   14c78:	bne	14a80 <__assert_fail@plt+0x2c68>
   14c7c:	b	14d1c <__assert_fail@plt+0x2f04>
   14c80:	movw	r0, #58032	; 0xe2b0
   14c84:	mov	r1, r4
   14c88:	movt	r0, #1
   14c8c:	bl	133c0 <__assert_fail@plt+0x15a8>
   14c90:	movw	r5, #64072	; 0xfa48
   14c94:	movt	r5, #2
   14c98:	ldr	r0, [r5]
   14c9c:	cmp	r0, #0
   14ca0:	bne	14ce8 <__assert_fail@plt+0x2ed0>
   14ca4:	mov	r0, #1
   14ca8:	mov	r1, #464	; 0x1d0
   14cac:	bl	1bbf8 <argp_parse@@Base+0x2330>
   14cb0:	mov	r4, r0
   14cb4:	movw	r0, #58048	; 0xe2c0
   14cb8:	movt	r0, #1
   14cbc:	mov	r1, r4
   14cc0:	bl	14d60 <__assert_fail@plt+0x2f48>
   14cc4:	mov	r0, #1
   14cc8:	mov	r1, #464	; 0x1d0
   14ccc:	bl	1bbf8 <argp_parse@@Base+0x2330>
   14cd0:	mov	r1, r0
   14cd4:	str	r0, [r4]
   14cd8:	movw	r0, #58067	; 0xe2d3
   14cdc:	movt	r0, #1
   14ce0:	bl	14d60 <__assert_fail@plt+0x2f48>
   14ce4:	str	r4, [r5]
   14ce8:	movw	r1, #64560	; 0xfc30
   14cec:	mov	r0, #1
   14cf0:	movt	r1, #2
   14cf4:	str	r0, [r1]
   14cf8:	sub	sp, fp, #28
   14cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d00:	movw	r0, #58077	; 0xe2dd
   14d04:	movt	r0, #1
   14d08:	bl	133c0 <__assert_fail@plt+0x15a8>
   14d0c:	mov	r0, r9
   14d10:	bl	11cc8 <fclose@plt>
   14d14:	b	14d54 <__assert_fail@plt+0x2f3c>
   14d18:	mov	r7, r6
   14d1c:	mov	r0, r9
   14d20:	bl	11cc8 <fclose@plt>
   14d24:	mov	r0, r7
   14d28:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14d2c:	mov	r0, #1
   14d30:	sub	sp, fp, #28
   14d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d38:	movw	r0, #58118	; 0xe306
   14d3c:	movt	r0, #1
   14d40:	bl	133c0 <__assert_fail@plt+0x15a8>
   14d44:	mov	r0, r9
   14d48:	bl	11cc8 <fclose@plt>
   14d4c:	mov	r0, r7
   14d50:	bl	1ad78 <argp_parse@@Base+0x14b0>
   14d54:	mov	r0, #0
   14d58:	sub	sp, fp, #28
   14d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d64:	add	fp, sp, #28
   14d68:	sub	sp, sp, #220	; 0xdc
   14d6c:	sub	sp, sp, #1024	; 0x400
   14d70:	mov	r5, r0
   14d74:	movw	r0, #64576	; 0xfc40
   14d78:	movw	r2, #56463	; 0xdc8f
   14d7c:	movw	r3, #58253	; 0xe38d
   14d80:	mov	r4, r1
   14d84:	movt	r0, #2
   14d88:	movt	r2, #1
   14d8c:	movt	r3, #1
   14d90:	mov	r1, r5
   14d94:	ldr	r0, [r0]
   14d98:	cmp	r0, #0
   14d9c:	moveq	r2, r3
   14da0:	movne	r3, r0
   14da4:	movw	r0, #56447	; 0xdc7f
   14da8:	movt	r0, #1
   14dac:	bl	133c0 <__assert_fail@plt+0x15a8>
   14db0:	bl	11c50 <__errno_location@plt>
   14db4:	mov	r1, #0
   14db8:	mov	r2, #464	; 0x1d0
   14dbc:	str	r1, [r0]
   14dc0:	mov	r0, r4
   14dc4:	mov	r1, #0
   14dc8:	bl	11c8c <memset@plt>
   14dcc:	add	r9, r4, #12
   14dd0:	add	r7, sp, #212	; 0xd4
   14dd4:	str	r4, [sp, #4]
   14dd8:	b	15160 <__assert_fail@plt+0x3348>
   14ddc:	mov	r5, r8
   14de0:	uxtb	r0, r6
   14de4:	cmp	r0, #0
   14de8:	cmpne	r0, #9
   14dec:	beq	14dfc <__assert_fail@plt+0x2fe4>
   14df0:	ldrb	r6, [r5, #1]!
   14df4:	cmp	r0, #46	; 0x2e
   14df8:	bne	14de0 <__assert_fail@plt+0x2fc8>
   14dfc:	mov	sl, r7
   14e00:	movw	r7, #56472	; 0xdc98
   14e04:	tst	r6, #255	; 0xff
   14e08:	movt	r7, #1
   14e0c:	mov	r4, sl
   14e10:	beq	14e3c <__assert_fail@plt+0x3024>
   14e14:	uxtb	r1, r6
   14e18:	mov	r0, r7
   14e1c:	mov	r2, #5
   14e20:	bl	11cb0 <memchr@plt>
   14e24:	cmp	r0, #0
   14e28:	bne	14e4c <__assert_fail@plt+0x3034>
   14e2c:	strb	r6, [r4], #1
   14e30:	ldrb	r6, [r5, #1]!
   14e34:	cmp	r6, #0
   14e38:	bne	14e14 <__assert_fail@plt+0x2ffc>
   14e3c:	mov	r0, #0
   14e40:	mov	r7, sl
   14e44:	strb	r0, [r4]
   14e48:	b	14e80 <__assert_fail@plt+0x3068>
   14e4c:	mov	r0, #0
   14e50:	mov	r7, sl
   14e54:	strb	r0, [r4]
   14e58:	movw	r4, #56474	; 0xdc9a
   14e5c:	movt	r4, #1
   14e60:	uxtb	r1, r6
   14e64:	mov	r0, r4
   14e68:	mov	r2, #3
   14e6c:	bl	11cb0 <memchr@plt>
   14e70:	cmp	r0, #0
   14e74:	ldrbne	r6, [r5, #1]!
   14e78:	cmpne	r6, #0
   14e7c:	bne	14e60 <__assert_fail@plt+0x3048>
   14e80:	mov	r4, #0
   14e84:	mov	sl, #0
   14e88:	mov	r6, r7
   14e8c:	b	14e98 <__assert_fail@plt+0x3080>
   14e90:	cmp	r7, #61	; 0x3d
   14e94:	moveq	r4, #1
   14e98:	ldrb	r7, [r6]
   14e9c:	cmp	r7, #33	; 0x21
   14ea0:	cmpne	r7, #61	; 0x3d
   14ea4:	bne	14ebc <__assert_fail@plt+0x30a4>
   14ea8:	add	r6, r6, #1
   14eac:	cmp	r7, #33	; 0x21
   14eb0:	bne	14e90 <__assert_fail@plt+0x3078>
   14eb4:	mov	sl, #1
   14eb8:	b	14e98 <__assert_fail@plt+0x3080>
   14ebc:	cmp	r7, #42	; 0x2a
   14ec0:	bne	14ed4 <__assert_fail@plt+0x30bc>
   14ec4:	mov	r1, #0
   14ec8:	mov	r0, #255	; 0xff
   14ecc:	add	r7, sp, #212	; 0xd4
   14ed0:	b	14fac <__assert_fail@plt+0x3194>
   14ed4:	bl	11bfc <__ctype_b_loc@plt>
   14ed8:	ldr	r0, [r0]
   14edc:	add	r0, r0, r7, lsl #1
   14ee0:	ldrb	r0, [r0, #1]
   14ee4:	tst	r0, #8
   14ee8:	bne	14f34 <__assert_fail@plt+0x311c>
   14eec:	movw	r0, #61864	; 0xf1a8
   14ef0:	movt	r0, #2
   14ef4:	ldr	r1, [r0]
   14ef8:	cmp	r1, #0
   14efc:	beq	15450 <__assert_fail@plt+0x3638>
   14f00:	movw	r0, #61864	; 0xf1a8
   14f04:	movt	r0, #2
   14f08:	add	r7, r0, #4
   14f0c:	mov	r0, r6
   14f10:	bl	11b0c <strcasecmp@plt>
   14f14:	cmp	r0, #0
   14f18:	beq	14f8c <__assert_fail@plt+0x3174>
   14f1c:	ldr	r1, [r7, #4]
   14f20:	add	r0, r7, #8
   14f24:	mov	r7, r0
   14f28:	cmp	r1, #0
   14f2c:	bne	14f0c <__assert_fail@plt+0x30f4>
   14f30:	b	15450 <__assert_fail@plt+0x3638>
   14f34:	mov	r0, r6
   14f38:	mov	r1, #0
   14f3c:	mov	r2, #10
   14f40:	bl	119a4 <strtol@plt>
   14f44:	cmp	r0, #0
   14f48:	blt	15450 <__assert_fail@plt+0x3638>
   14f4c:	cmp	r0, #8
   14f50:	blt	14f5c <__assert_fail@plt+0x3144>
   14f54:	cmp	r0, #16
   14f58:	bne	15450 <__assert_fail@plt+0x3638>
   14f5c:	cmp	r0, #16
   14f60:	bne	14f74 <__assert_fail@plt+0x315c>
   14f64:	mov	r1, #255	; 0xff
   14f68:	mov	r0, #0
   14f6c:	add	r7, sp, #212	; 0xd4
   14f70:	b	14fac <__assert_fail@plt+0x3194>
   14f74:	cmp	r4, #0
   14f78:	add	r7, sp, #212	; 0xd4
   14f7c:	beq	14f9c <__assert_fail@plt+0x3184>
   14f80:	mov	r1, #1
   14f84:	lsl	r0, r1, r0
   14f88:	b	14fa8 <__assert_fail@plt+0x3190>
   14f8c:	ldr	r0, [r7]
   14f90:	cmp	r0, #0
   14f94:	bge	14f4c <__assert_fail@plt+0x3134>
   14f98:	b	15450 <__assert_fail@plt+0x3638>
   14f9c:	add	r0, r0, #1
   14fa0:	mvn	r1, #0
   14fa4:	mvn	r0, r1, lsl r0
   14fa8:	mov	r1, #0
   14fac:	ldrb	r4, [r8]
   14fb0:	cmp	r4, #0
   14fb4:	beq	15160 <__assert_fail@plt+0x3348>
   14fb8:	cmp	sl, #0
   14fbc:	mov	r6, r1
   14fc0:	moveq	r6, r0
   14fc4:	moveq	r0, r1
   14fc8:	mvn	sl, r0
   14fcc:	movw	r0, #56504	; 0xdcb8
   14fd0:	uxtb	r1, r4
   14fd4:	mov	r2, #5
   14fd8:	movt	r0, #1
   14fdc:	bl	11cb0 <memchr@plt>
   14fe0:	cmp	r0, #0
   14fe4:	bne	15160 <__assert_fail@plt+0x3348>
   14fe8:	tst	r4, #255	; 0xff
   14fec:	beq	1501c <__assert_fail@plt+0x3204>
   14ff0:	movw	r0, #56509	; 0xdcbd
   14ff4:	uxtb	r1, r4
   14ff8:	mov	r2, #6
   14ffc:	movt	r0, #1
   15000:	bl	11cb0 <memchr@plt>
   15004:	cmp	r0, #0
   15008:	bne	1501c <__assert_fail@plt+0x3204>
   1500c:	strb	r4, [r7], #1
   15010:	ldrb	r4, [r8, #1]!
   15014:	cmp	r4, #0
   15018:	bne	14ff0 <__assert_fail@plt+0x31d8>
   1501c:	mov	r0, #0
   15020:	strb	r0, [r7]
   15024:	ldrb	r4, [sp, #212]	; 0xd4
   15028:	cmp	r4, #42	; 0x2a
   1502c:	bne	1507c <__assert_fail@plt+0x3264>
   15030:	ldrb	r1, [sp, #213]	; 0xd5
   15034:	movw	r3, #64068	; 0xfa44
   15038:	mov	r0, #0
   1503c:	add	r7, sp, #212	; 0xd4
   15040:	mov	r4, #1
   15044:	movt	r3, #2
   15048:	cmp	r1, #42	; 0x2a
   1504c:	bne	1505c <__assert_fail@plt+0x3244>
   15050:	ldr	r2, [r3]
   15054:	tst	r2, r4, lsl r0
   15058:	bne	1506c <__assert_fail@plt+0x3254>
   1505c:	ldrb	r2, [r9, r0]
   15060:	and	r2, r2, sl
   15064:	orr	r2, r2, r6
   15068:	strb	r2, [r9, r0]
   1506c:	add	r0, r0, #1
   15070:	cmp	r0, #25
   15074:	bne	15048 <__assert_fail@plt+0x3230>
   15078:	b	15148 <__assert_fail@plt+0x3330>
   1507c:	bl	11bfc <__ctype_b_loc@plt>
   15080:	ldr	r0, [r0]
   15084:	add	r7, sp, #212	; 0xd4
   15088:	add	r0, r0, r4, lsl #1
   1508c:	ldrb	r0, [r0, #1]
   15090:	tst	r0, #8
   15094:	bne	150e0 <__assert_fail@plt+0x32c8>
   15098:	movw	r0, #61968	; 0xf210
   1509c:	movt	r0, #2
   150a0:	ldr	r1, [r0]
   150a4:	cmp	r1, #0
   150a8:	beq	15468 <__assert_fail@plt+0x3650>
   150ac:	movw	r0, #61968	; 0xf210
   150b0:	movt	r0, #2
   150b4:	add	r4, r0, #4
   150b8:	mov	r0, r7
   150bc:	bl	11b0c <strcasecmp@plt>
   150c0:	cmp	r0, #0
   150c4:	beq	150fc <__assert_fail@plt+0x32e4>
   150c8:	ldr	r1, [r4, #4]
   150cc:	add	r0, r4, #8
   150d0:	mov	r4, r0
   150d4:	cmp	r1, #0
   150d8:	bne	150b8 <__assert_fail@plt+0x32a0>
   150dc:	b	15468 <__assert_fail@plt+0x3650>
   150e0:	mov	r0, r7
   150e4:	mov	r1, #0
   150e8:	mov	r2, #10
   150ec:	bl	119a4 <strtol@plt>
   150f0:	cmp	r0, #193	; 0xc1
   150f4:	bcc	15108 <__assert_fail@plt+0x32f0>
   150f8:	b	15468 <__assert_fail@plt+0x3650>
   150fc:	ldr	r0, [r4]
   15100:	cmp	r0, #193	; 0xc1
   15104:	bcs	15468 <__assert_fail@plt+0x3650>
   15108:	ubfx	r0, r0, #3, #7
   1510c:	ldr	r1, [sp, #4]
   15110:	mov	r3, #1
   15114:	add	r1, r1, r0
   15118:	ldrb	r2, [r1, #12]
   1511c:	and	r2, r2, sl
   15120:	orr	r2, r2, r6
   15124:	strb	r2, [r1, #12]
   15128:	movw	r1, #64068	; 0xfa44
   1512c:	movt	r1, #2
   15130:	mov	r2, r1
   15134:	ldr	r1, [r1]
   15138:	orr	r0, r1, r3, lsl r0
   1513c:	str	r0, [r2]
   15140:	b	15148 <__assert_fail@plt+0x3330>
   15144:	add	r8, r8, #1
   15148:	ldrb	r4, [r8]
   1514c:	cmp	r4, #32
   15150:	cmpne	r4, #44	; 0x2c
   15154:	beq	15144 <__assert_fail@plt+0x332c>
   15158:	cmp	r4, #0
   1515c:	bne	14fcc <__assert_fail@plt+0x31b4>
   15160:	ldrb	r6, [r5]
   15164:	mov	r8, r5
   15168:	cmp	r6, #0
   1516c:	beq	1517c <__assert_fail@plt+0x3364>
   15170:	cmp	r6, #9
   15174:	cmpne	r6, #32
   15178:	bne	14ddc <__assert_fail@plt+0x2fc4>
   1517c:	ldr	r9, [sp, #4]
   15180:	add	r5, r8, #1
   15184:	b	1518c <__assert_fail@plt+0x3374>
   15188:	ldrb	r6, [r5], #1
   1518c:	uxtb	r0, r6
   15190:	cmp	r0, #9
   15194:	cmpne	r0, #32
   15198:	beq	15188 <__assert_fail@plt+0x3370>
   1519c:	cmp	r0, #45	; 0x2d
   151a0:	bne	151b8 <__assert_fail@plt+0x33a0>
   151a4:	ldr	r0, [r9, #460]	; 0x1cc
   151a8:	orr	r0, r0, #1
   151ac:	str	r0, [r9, #460]	; 0x1cc
   151b0:	ldrb	r6, [r5]
   151b4:	b	151bc <__assert_fail@plt+0x33a4>
   151b8:	sub	r5, r5, #1
   151bc:	uxtb	r0, r6
   151c0:	cmp	r0, #46	; 0x2e
   151c4:	ble	15240 <__assert_fail@plt+0x3428>
   151c8:	cmp	r0, #47	; 0x2f
   151cc:	beq	15258 <__assert_fail@plt+0x3440>
   151d0:	cmp	r0, #64	; 0x40
   151d4:	beq	152b8 <__assert_fail@plt+0x34a0>
   151d8:	cmp	r0, #124	; 0x7c
   151dc:	bne	15370 <__assert_fail@plt+0x3558>
   151e0:	mov	r0, r5
   151e4:	bl	11aac <strdup@plt>
   151e8:	add	r4, r5, #1
   151ec:	str	r0, [r9, #40]	; 0x28
   151f0:	movw	r1, #2050	; 0x802
   151f4:	mov	r0, r4
   151f8:	bl	11b90 <open64@plt>
   151fc:	mov	r5, r0
   15200:	strh	r0, [r9, #6]
   15204:	lsl	r0, r0, #16
   15208:	cmn	r0, #1
   1520c:	ble	1549c <__assert_fail@plt+0x3684>
   15210:	movw	r1, #62164	; 0xf2d4
   15214:	mov	r0, r4
   15218:	movt	r1, #2
   1521c:	bl	11998 <strcmp@plt>
   15220:	cmp	r0, #0
   15224:	beq	15494 <__assert_fail@plt+0x367c>
   15228:	sxth	r0, r5
   1522c:	bl	11dd0 <isatty@plt>
   15230:	cmp	r0, #0
   15234:	bne	152b0 <__assert_fail@plt+0x3498>
   15238:	mov	r0, #9
   1523c:	b	15528 <__assert_fail@plt+0x3710>
   15240:	cmp	r0, #0
   15244:	beq	1535c <__assert_fail@plt+0x3544>
   15248:	cmp	r0, #42	; 0x2a
   1524c:	bne	15370 <__assert_fail@plt+0x3558>
   15250:	mov	r0, #6
   15254:	b	15528 <__assert_fail@plt+0x3710>
   15258:	mov	r0, r5
   1525c:	bl	11aac <strdup@plt>
   15260:	str	r0, [r9, #40]	; 0x28
   15264:	mov	r0, r5
   15268:	movw	r1, #1089	; 0x441
   1526c:	mov	r2, #420	; 0x1a4
   15270:	bl	11b90 <open64@plt>
   15274:	mov	r4, r0
   15278:	strh	r0, [r9, #6]
   1527c:	lsl	r0, r0, #16
   15280:	cmn	r0, #1
   15284:	ble	154bc <__assert_fail@plt+0x36a4>
   15288:	movw	r1, #62164	; 0xf2d4
   1528c:	mov	r0, r5
   15290:	movt	r1, #2
   15294:	bl	11998 <strcmp@plt>
   15298:	cmp	r0, #0
   1529c:	beq	15494 <__assert_fail@plt+0x367c>
   152a0:	sxth	r0, r4
   152a4:	bl	11dd0 <isatty@plt>
   152a8:	cmp	r0, #0
   152ac:	beq	15524 <__assert_fail@plt+0x370c>
   152b0:	mov	r0, #2
   152b4:	b	15528 <__assert_fail@plt+0x3710>
   152b8:	add	r4, r5, #1
   152bc:	mov	r0, r4
   152c0:	bl	11aac <strdup@plt>
   152c4:	str	r0, [r9, #40]	; 0x28
   152c8:	add	r0, sp, #8
   152cc:	vmov.i32	q8, #0	; 0x00000000
   152d0:	add	r5, r9, #44	; 0x2c
   152d4:	mov	r2, #132	; 0x84
   152d8:	add	r1, r0, #16
   152dc:	vst1.64	{d16-d17}, [r1]
   152e0:	mov	r1, #8
   152e4:	vst1.64	{d16-d17}, [r0], r1
   152e8:	mov	r1, #2
   152ec:	str	r1, [r0]
   152f0:	movw	r0, #62228	; 0xf314
   152f4:	mov	r1, #0
   152f8:	movt	r0, #2
   152fc:	ldr	r0, [r0]
   15300:	cmp	r0, #0
   15304:	str	r0, [sp, #12]
   15308:	moveq	r0, #32
   1530c:	streq	r0, [sp, #8]
   15310:	mov	r0, r5
   15314:	bl	11c8c <memset@plt>
   15318:	movw	r0, #62936	; 0xf5d8
   1531c:	add	r2, sp, #8
   15320:	sub	r3, fp, #36	; 0x24
   15324:	movt	r0, #2
   15328:	ldr	r1, [r0]
   1532c:	mov	r0, r4
   15330:	bl	11da0 <getaddrinfo@plt>
   15334:	cmn	r0, #10
   15338:	beq	1534c <__assert_fail@plt+0x3534>
   1533c:	cmp	r0, #0
   15340:	beq	154dc <__assert_fail@plt+0x36c4>
   15344:	cmn	r0, #3
   15348:	bne	1550c <__assert_fail@plt+0x36f4>
   1534c:	mov	r0, #10
   15350:	str	r0, [r9, #452]	; 0x1c4
   15354:	mov	r0, #8
   15358:	b	15510 <__assert_fail@plt+0x36f8>
   1535c:	mov	r0, #0
   15360:	strh	r0, [r9, #4]
   15364:	movw	r0, #56542	; 0xdcde
   15368:	movt	r0, #1
   1536c:	b	15488 <__assert_fail@plt+0x3670>
   15370:	mov	r0, #1
   15374:	mov	r1, r5
   15378:	str	r0, [r9, #40]	; 0x28
   1537c:	b	15384 <__assert_fail@plt+0x356c>
   15380:	add	r1, r1, #1
   15384:	ldrb	r2, [r1]
   15388:	cmp	r2, #44	; 0x2c
   1538c:	beq	1539c <__assert_fail@plt+0x3584>
   15390:	cmp	r2, #0
   15394:	bne	15380 <__assert_fail@plt+0x3568>
   15398:	b	153a8 <__assert_fail@plt+0x3590>
   1539c:	add	r0, r0, #1
   153a0:	str	r0, [r9, #40]	; 0x28
   153a4:	b	15380 <__assert_fail@plt+0x3568>
   153a8:	lsl	r0, r0, #2
   153ac:	bl	1bc4c <argp_parse@@Base+0x2384>
   153b0:	str	r0, [r9, #44]	; 0x2c
   153b4:	ldrb	r0, [r5]
   153b8:	cmp	r0, #0
   153bc:	beq	15448 <__assert_fail@plt+0x3630>
   153c0:	mov	r8, #0
   153c4:	mov	r7, #0
   153c8:	mov	r4, r5
   153cc:	b	153d4 <__assert_fail@plt+0x35bc>
   153d0:	ldrb	r0, [r4, #1]!
   153d4:	uxtb	r0, r0
   153d8:	cmp	r0, #0
   153dc:	cmpne	r0, #44	; 0x2c
   153e0:	bne	153d0 <__assert_fail@plt+0x35b8>
   153e4:	sub	r6, r4, r5
   153e8:	add	r0, r6, #1
   153ec:	bl	1bc4c <argp_parse@@Base+0x2384>
   153f0:	ldr	r1, [r9, #44]	; 0x2c
   153f4:	str	r0, [r1, r7, lsl #2]
   153f8:	ldr	r0, [r9, #44]	; 0x2c
   153fc:	ldr	r0, [r0, r7, lsl #2]
   15400:	cmp	r0, #0
   15404:	beq	15428 <__assert_fail@plt+0x3610>
   15408:	mov	r1, r5
   1540c:	mov	r2, r6
   15410:	bl	11c98 <strncpy@plt>
   15414:	ldr	r0, [r9, #44]	; 0x2c
   15418:	ldr	r0, [r0, r7, lsl #2]
   1541c:	strb	r8, [r0, r6]
   15420:	b	15428 <__assert_fail@plt+0x3610>
   15424:	add	r4, r4, #1
   15428:	ldrb	r0, [r4]
   1542c:	cmp	r0, #44	; 0x2c
   15430:	cmpne	r0, #32
   15434:	beq	15424 <__assert_fail@plt+0x360c>
   15438:	add	r7, r7, #1
   1543c:	cmp	r0, #0
   15440:	mov	r5, r4
   15444:	bne	153d4 <__assert_fail@plt+0x35bc>
   15448:	mov	r0, #5
   1544c:	b	15528 <__assert_fail@plt+0x3710>
   15450:	movw	r2, #56477	; 0xdc9d
   15454:	add	r4, sp, #8
   15458:	mov	r1, #200	; 0xc8
   1545c:	mov	r3, r6
   15460:	movt	r2, #1
   15464:	b	1547c <__assert_fail@plt+0x3664>
   15468:	movw	r2, #56515	; 0xdcc3
   1546c:	add	r4, sp, #8
   15470:	add	r3, sp, #212	; 0xd4
   15474:	mov	r1, #200	; 0xc8
   15478:	movt	r2, #1
   1547c:	mov	r0, r4
   15480:	bl	11c5c <snprintf@plt>
   15484:	mov	r0, r4
   15488:	bl	13448 <__assert_fail@plt+0x1630>
   1548c:	sub	sp, fp, #28
   15490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15494:	mov	r0, #3
   15498:	b	15528 <__assert_fail@plt+0x3710>
   1549c:	mov	r5, #0
   154a0:	mov	r0, r4
   154a4:	strh	r5, [r9, #4]
   154a8:	bl	13448 <__assert_fail@plt+0x1630>
   154ac:	ldr	r0, [r9, #40]	; 0x28
   154b0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   154b4:	str	r5, [r9, #40]	; 0x28
   154b8:	b	1552c <__assert_fail@plt+0x3714>
   154bc:	mov	r4, #0
   154c0:	mov	r0, r5
   154c4:	strh	r4, [r9, #4]
   154c8:	bl	13448 <__assert_fail@plt+0x1630>
   154cc:	ldr	r0, [r9, #40]	; 0x28
   154d0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   154d4:	str	r4, [r9, #40]	; 0x28
   154d8:	b	1552c <__assert_fail@plt+0x3714>
   154dc:	mov	r0, #4
   154e0:	strh	r0, [r9, #4]
   154e4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   154e8:	ldr	r0, [r4, #16]
   154ec:	str	r0, [r9, #172]	; 0xac
   154f0:	mov	r0, r5
   154f4:	ldr	r2, [r4, #16]
   154f8:	ldr	r1, [r4, #20]
   154fc:	bl	11a58 <memcpy@plt>
   15500:	mov	r0, r4
   15504:	bl	11d94 <freeaddrinfo@plt>
   15508:	b	1552c <__assert_fail@plt+0x3714>
   1550c:	mov	r0, #0
   15510:	strh	r0, [r9, #4]
   15514:	mov	r0, #0
   15518:	bl	11a70 <time@plt>
   1551c:	str	r0, [r9, #8]
   15520:	b	1552c <__assert_fail@plt+0x3714>
   15524:	mov	r0, #1
   15528:	strh	r0, [r9, #4]
   1552c:	movw	r4, #64576	; 0xfc40
   15530:	movt	r4, #2
   15534:	ldr	r0, [r4]
   15538:	cmp	r0, #0
   1553c:	beq	1555c <__assert_fail@plt+0x3744>
   15540:	bl	11aac <strdup@plt>
   15544:	str	r0, [r9, #436]	; 0x1b4
   15548:	ldr	r0, [r4]
   1554c:	bl	11c20 <strlen@plt>
   15550:	str	r0, [r9, #440]	; 0x1b8
   15554:	sub	sp, fp, #28
   15558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1555c:	mov	r0, #0
   15560:	str	r0, [r9, #436]	; 0x1b4
   15564:	sub	sp, fp, #28
   15568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1556c:	push	{r4, r5, r6, sl, fp, lr}
   15570:	add	fp, sp, #16
   15574:	mov	r6, r1
   15578:	mov	r4, r0
   1557c:	bl	11bfc <__ctype_b_loc@plt>
   15580:	ldrb	r1, [r4]
   15584:	ldr	r0, [r0]
   15588:	add	r0, r0, r1, lsl #1
   1558c:	ldrb	r0, [r0, #1]
   15590:	tst	r0, #8
   15594:	bne	155d8 <__assert_fail@plt+0x37c0>
   15598:	ldr	r1, [r6]
   1559c:	mvn	r5, #0
   155a0:	cmp	r1, #0
   155a4:	beq	155d0 <__assert_fail@plt+0x37b8>
   155a8:	add	r6, r6, #4
   155ac:	mov	r0, r4
   155b0:	bl	11b0c <strcasecmp@plt>
   155b4:	cmp	r0, #0
   155b8:	beq	155ec <__assert_fail@plt+0x37d4>
   155bc:	ldr	r1, [r6, #4]
   155c0:	add	r0, r6, #8
   155c4:	mov	r6, r0
   155c8:	cmp	r1, #0
   155cc:	bne	155ac <__assert_fail@plt+0x3794>
   155d0:	mov	r0, r5
   155d4:	pop	{r4, r5, r6, sl, fp, pc}
   155d8:	mov	r0, r4
   155dc:	mov	r1, #0
   155e0:	mov	r2, #10
   155e4:	pop	{r4, r5, r6, sl, fp, lr}
   155e8:	b	119a4 <strtol@plt>
   155ec:	ldr	r5, [r6]
   155f0:	mov	r0, r5
   155f4:	pop	{r4, r5, r6, sl, fp, pc}
   155f8:	push	{r4, r5, r6, sl, fp, lr}
   155fc:	add	fp, sp, #16
   15600:	sub	sp, sp, #8
   15604:	mov	r4, r1
   15608:	sub	r1, r0, #52	; 0x34
   1560c:	mov	r0, #7
   15610:	cmp	r1, #207	; 0xcf
   15614:	bhi	15b64 <__assert_fail@plt+0x3d4c>
   15618:	mov	r5, r2
   1561c:	add	r2, pc, #0
   15620:	ldr	pc, [r2, r1, lsl #2]
   15624:	andeq	r5, r1, r4, ror #18
   15628:	andeq	r5, r1, r4, ror #22
   1562c:	andeq	r5, r1, r4, ror r9
   15630:	andeq	r5, r1, r4, ror #22
   15634:	andeq	r5, r1, r4, ror #22
   15638:	andeq	r5, r1, r4, ror #22
   1563c:	andeq	r5, r1, r4, ror #22
   15640:	andeq	r5, r1, r4, ror #22
   15644:	andeq	r5, r1, r4, ror #22
   15648:	andeq	r5, r1, r4, ror #22
   1564c:	andeq	r5, r1, r4, ror #22
   15650:	andeq	r5, r1, r4, ror #22
   15654:	andeq	r5, r1, r4, ror #22
   15658:	andeq	r5, r1, r4, ror #22
   1565c:	andeq	r5, r1, r4, lsl #19
   15660:	andeq	r5, r1, r4, ror #22
   15664:	muleq	r1, r4, r9
   15668:	andeq	r5, r1, r4, ror #22
   1566c:	andeq	r5, r1, r4, ror #22
   15670:	andeq	r5, r1, r4, ror #22
   15674:	andeq	r5, r1, r4, ror #22
   15678:	andeq	r5, r1, r4, ror #22
   1567c:	andeq	r5, r1, r4, ror #22
   15680:	andeq	r5, r1, r4, ror #22
   15684:	andeq	r5, r1, r4, ror #22
   15688:	andeq	r5, r1, r4, ror #22
   1568c:	andeq	r5, r1, r4, ror #22
   15690:	andeq	r5, r1, r4, ror #22
   15694:	andeq	r5, r1, r4, lsr #19
   15698:	andeq	r5, r1, r4, ror #22
   1569c:	andeq	r5, r1, r4, ror #22
   156a0:			; <UNDEFINED> instruction: 0x000159b4
   156a4:	andeq	r5, r1, r0, asr #19
   156a8:	andeq	r5, r1, r4, ror #22
   156ac:	andeq	r5, r1, r4, ror #22
   156b0:	andeq	r5, r1, r4, ror #22
   156b4:	andeq	r5, r1, r4, ror #22
   156b8:	andeq	r5, r1, r4, ror #22
   156bc:	andeq	r5, r1, r4, ror #22
   156c0:	andeq	r5, r1, r4, ror #22
   156c4:	andeq	r5, r1, r4, ror #22
   156c8:	andeq	r5, r1, r4, ror #22
   156cc:	andeq	r5, r1, r4, ror #22
   156d0:	andeq	r5, r1, r4, ror #22
   156d4:	andeq	r5, r1, r4, ror #22
   156d8:	andeq	r5, r1, ip, asr #19
   156dc:	andeq	r5, r1, r0, asr #20
   156e0:	andeq	r5, r1, r4, ror #22
   156e4:	andeq	r5, r1, r0, asr sl
   156e8:	andeq	r5, r1, r4, ror #22
   156ec:	andeq	r5, r1, ip, ror #20
   156f0:	andeq	r5, r1, r4, ror #22
   156f4:	andeq	r5, r1, ip, ror sl
   156f8:	andeq	r5, r1, r4, ror #22
   156fc:	andeq	r5, r1, r4, ror #22
   15700:	andeq	r5, r1, r4, ror #22
   15704:	andeq	r5, r1, r8, lsl #21
   15708:	muleq	r1, r4, sl
   1570c:	andeq	r5, r1, r4, ror #21
   15710:	andeq	r5, r1, r4, ror #22
   15714:	strdeq	r5, [r1], -r0
   15718:	andeq	r5, r1, r4, ror #22
   1571c:	andeq	r5, r1, r0, lsl fp
   15720:	andeq	r5, r1, ip, lsl fp
   15724:	andeq	r5, r1, r4, ror #22
   15728:	andeq	r5, r1, r4, ror #22
   1572c:	andeq	r5, r1, r4, ror #22
   15730:	andeq	r5, r1, r4, ror #22
   15734:	andeq	r5, r1, r4, ror #22
   15738:	andeq	r5, r1, r4, ror #22
   1573c:	andeq	r5, r1, r4, ror #22
   15740:	andeq	r5, r1, r4, ror #22
   15744:	andeq	r5, r1, r4, ror #22
   15748:	andeq	r5, r1, r4, ror #22
   1574c:	andeq	r5, r1, r4, ror #22
   15750:	andeq	r5, r1, r4, ror #22
   15754:	andeq	r5, r1, r4, ror #22
   15758:	andeq	r5, r1, r4, ror #22
   1575c:	andeq	r5, r1, r4, ror #22
   15760:	andeq	r5, r1, r4, ror #22
   15764:	andeq	r5, r1, r4, ror #22
   15768:	andeq	r5, r1, r4, ror #22
   1576c:	andeq	r5, r1, r4, ror #22
   15770:	andeq	r5, r1, r4, ror #22
   15774:	andeq	r5, r1, r4, ror #22
   15778:	andeq	r5, r1, r4, ror #22
   1577c:	andeq	r5, r1, r4, ror #22
   15780:	andeq	r5, r1, r4, ror #22
   15784:	andeq	r5, r1, r4, ror #22
   15788:	andeq	r5, r1, r4, ror #22
   1578c:	andeq	r5, r1, r4, ror #22
   15790:	andeq	r5, r1, r4, ror #22
   15794:	andeq	r5, r1, r4, ror #22
   15798:	andeq	r5, r1, r4, ror #22
   1579c:	andeq	r5, r1, r4, ror #22
   157a0:	andeq	r5, r1, r4, ror #22
   157a4:	andeq	r5, r1, r4, ror #22
   157a8:	andeq	r5, r1, r4, ror #22
   157ac:	andeq	r5, r1, r4, ror #22
   157b0:	andeq	r5, r1, r4, ror #22
   157b4:	andeq	r5, r1, r4, ror #22
   157b8:	andeq	r5, r1, r4, ror #22
   157bc:	andeq	r5, r1, r4, ror #22
   157c0:	andeq	r5, r1, r4, ror #22
   157c4:	andeq	r5, r1, r4, ror #22
   157c8:	andeq	r5, r1, r4, ror #22
   157cc:	andeq	r5, r1, r4, ror #22
   157d0:	andeq	r5, r1, r4, ror #22
   157d4:	andeq	r5, r1, r4, ror #22
   157d8:	andeq	r5, r1, r4, ror #22
   157dc:	andeq	r5, r1, r4, ror #22
   157e0:	andeq	r5, r1, r4, ror #22
   157e4:	andeq	r5, r1, r4, ror #22
   157e8:	andeq	r5, r1, r4, ror #22
   157ec:	andeq	r5, r1, r4, ror #22
   157f0:	andeq	r5, r1, r4, ror #22
   157f4:	andeq	r5, r1, r4, ror #22
   157f8:	andeq	r5, r1, r4, ror #22
   157fc:	andeq	r5, r1, r4, ror #22
   15800:	andeq	r5, r1, r4, ror #22
   15804:	andeq	r5, r1, r4, ror #22
   15808:	andeq	r5, r1, r4, ror #22
   1580c:	andeq	r5, r1, r4, ror #22
   15810:	andeq	r5, r1, r4, ror #22
   15814:	andeq	r5, r1, r4, ror #22
   15818:	andeq	r5, r1, r4, ror #22
   1581c:	andeq	r5, r1, r4, ror #22
   15820:	andeq	r5, r1, r4, ror #22
   15824:	andeq	r5, r1, r4, ror #22
   15828:	andeq	r5, r1, r4, ror #22
   1582c:	andeq	r5, r1, r4, ror #22
   15830:	andeq	r5, r1, r4, ror #22
   15834:	andeq	r5, r1, r4, ror #22
   15838:	andeq	r5, r1, r4, ror #22
   1583c:	andeq	r5, r1, r4, ror #22
   15840:	andeq	r5, r1, r4, ror #22
   15844:	andeq	r5, r1, r4, ror #22
   15848:	andeq	r5, r1, r4, ror #22
   1584c:	andeq	r5, r1, r4, ror #22
   15850:	andeq	r5, r1, r4, ror #22
   15854:	andeq	r5, r1, r4, ror #22
   15858:	andeq	r5, r1, r4, ror #22
   1585c:	andeq	r5, r1, r4, ror #22
   15860:	andeq	r5, r1, r4, ror #22
   15864:	andeq	r5, r1, r4, ror #22
   15868:	andeq	r5, r1, r4, ror #22
   1586c:	andeq	r5, r1, r4, ror #22
   15870:	andeq	r5, r1, r4, ror #22
   15874:	andeq	r5, r1, r4, ror #22
   15878:	andeq	r5, r1, r4, ror #22
   1587c:	andeq	r5, r1, r4, ror #22
   15880:	andeq	r5, r1, r4, ror #22
   15884:	andeq	r5, r1, r4, ror #22
   15888:	andeq	r5, r1, r4, ror #22
   1588c:	andeq	r5, r1, r4, ror #22
   15890:	andeq	r5, r1, r4, ror #22
   15894:	andeq	r5, r1, r4, ror #22
   15898:	andeq	r5, r1, r4, ror #22
   1589c:	andeq	r5, r1, r4, ror #22
   158a0:	andeq	r5, r1, r4, ror #22
   158a4:	andeq	r5, r1, r4, ror #22
   158a8:	andeq	r5, r1, r4, ror #22
   158ac:	andeq	r5, r1, r4, ror #22
   158b0:	andeq	r5, r1, r4, ror #22
   158b4:	andeq	r5, r1, r4, ror #22
   158b8:	andeq	r5, r1, r4, ror #22
   158bc:	andeq	r5, r1, r4, ror #22
   158c0:	andeq	r5, r1, r4, ror #22
   158c4:	andeq	r5, r1, r4, ror #22
   158c8:	andeq	r5, r1, r4, ror #22
   158cc:	andeq	r5, r1, r4, ror #22
   158d0:	andeq	r5, r1, r4, ror #22
   158d4:	andeq	r5, r1, r4, ror #22
   158d8:	andeq	r5, r1, r4, ror #22
   158dc:	andeq	r5, r1, r4, ror #22
   158e0:	andeq	r5, r1, r4, ror #22
   158e4:	andeq	r5, r1, r4, ror #22
   158e8:	andeq	r5, r1, r4, ror #22
   158ec:	andeq	r5, r1, r4, ror #22
   158f0:	andeq	r5, r1, r4, ror #22
   158f4:	andeq	r5, r1, r4, ror #22
   158f8:	andeq	r5, r1, r4, ror #22
   158fc:	andeq	r5, r1, r4, ror #22
   15900:	andeq	r5, r1, r4, ror #22
   15904:	andeq	r5, r1, r4, ror #22
   15908:	andeq	r5, r1, r4, ror #22
   1590c:	andeq	r5, r1, r4, ror #22
   15910:	andeq	r5, r1, r4, ror #22
   15914:	andeq	r5, r1, r4, ror #22
   15918:	andeq	r5, r1, r4, ror #22
   1591c:	andeq	r5, r1, r4, ror #22
   15920:	andeq	r5, r1, r4, ror #22
   15924:	andeq	r5, r1, r4, ror #22
   15928:	andeq	r5, r1, r4, ror #22
   1592c:	andeq	r5, r1, r4, ror #22
   15930:	andeq	r5, r1, r4, ror #22
   15934:	andeq	r5, r1, r4, ror #22
   15938:	andeq	r5, r1, r4, ror #22
   1593c:	andeq	r5, r1, r4, ror #22
   15940:	andeq	r5, r1, r4, ror #22
   15944:	andeq	r5, r1, r4, ror #22
   15948:	andeq	r5, r1, r4, ror #22
   1594c:	andeq	r5, r1, r4, ror #22
   15950:	andeq	r5, r1, r4, ror #22
   15954:	andeq	r5, r1, r8, lsr fp
   15958:	andeq	r5, r1, r4, asr #22
   1595c:	andeq	r5, r1, r0, asr fp
   15960:	andeq	r5, r1, ip, ror #22
   15964:	movw	r0, #62228	; 0xf314
   15968:	mov	r1, #2
   1596c:	movt	r0, #2
   15970:	b	15b5c <__assert_fail@plt+0x3d44>
   15974:	movw	r0, #62228	; 0xf314
   15978:	mov	r1, #10
   1597c:	movt	r0, #2
   15980:	b	15b5c <__assert_fail@plt+0x3d44>
   15984:	movw	r0, #62928	; 0xf5d0
   15988:	movt	r0, #2
   1598c:	str	r4, [r0]
   15990:	b	15b60 <__assert_fail@plt+0x3d48>
   15994:	movw	r0, #62156	; 0xf2cc
   15998:	movt	r0, #2
   1599c:	str	r4, [r0]
   159a0:	b	15b60 <__assert_fail@plt+0x3d48>
   159a4:	movw	r0, #62160	; 0xf2d0
   159a8:	movt	r0, #2
   159ac:	str	r4, [r0]
   159b0:	b	15b60 <__assert_fail@plt+0x3d48>
   159b4:	movw	r0, #64556	; 0xfc2c
   159b8:	movt	r0, #2
   159bc:	b	15b58 <__assert_fail@plt+0x3d40>
   159c0:	movw	r0, #62940	; 0xf5dc
   159c4:	movt	r0, #2
   159c8:	b	15b58 <__assert_fail@plt+0x3d40>
   159cc:	movw	r5, #64544	; 0xfc20
   159d0:	movw	r6, #64640	; 0xfc80
   159d4:	mov	r1, #8
   159d8:	movt	r5, #2
   159dc:	movt	r6, #2
   159e0:	ldr	r0, [r5]
   159e4:	add	r1, r1, r0, lsl #3
   159e8:	ldr	r0, [r6]
   159ec:	bl	1bc7c <argp_parse@@Base+0x23b4>
   159f0:	cmp	r0, #0
   159f4:	str	r0, [r6]
   159f8:	bne	15a18 <__assert_fail@plt+0x3c00>
   159fc:	bl	11c50 <__errno_location@plt>
   15a00:	ldr	r1, [r0]
   15a04:	movw	r2, #57795	; 0xe1c3
   15a08:	mov	r0, #1
   15a0c:	movt	r2, #1
   15a10:	bl	11b6c <error@plt>
   15a14:	ldr	r0, [r6]
   15a18:	ldr	r1, [r5]
   15a1c:	str	r4, [r0, r1, lsl #3]
   15a20:	ldr	r0, [r6]
   15a24:	add	r0, r0, r1, lsl #3
   15a28:	mvn	r1, #0
   15a2c:	str	r1, [r0, #4]
   15a30:	ldr	r0, [r5]
   15a34:	add	r0, r0, #1
   15a38:	str	r0, [r5]
   15a3c:	b	15b60 <__assert_fail@plt+0x3d48>
   15a40:	movw	r0, #62924	; 0xf5cc
   15a44:	movt	r0, #2
   15a48:	str	r4, [r0]
   15a4c:	b	15b60 <__assert_fail@plt+0x3d48>
   15a50:	movw	r0, #64572	; 0xfc3c
   15a54:	mov	r1, #1
   15a58:	movt	r0, #2
   15a5c:	str	r1, [r0]
   15a60:	movw	r0, #64548	; 0xfc24
   15a64:	movt	r0, #2
   15a68:	b	15b5c <__assert_fail@plt+0x3d44>
   15a6c:	movw	r0, #62152	; 0xf2c8
   15a70:	movt	r0, #2
   15a74:	str	r4, [r0]
   15a78:	b	15b60 <__assert_fail@plt+0x3d48>
   15a7c:	movw	r1, #62248	; 0xf328
   15a80:	movt	r1, #2
   15a84:	b	15b74 <__assert_fail@plt+0x3d5c>
   15a88:	movw	r5, #64580	; 0xfc44
   15a8c:	movt	r5, #2
   15a90:	b	15b24 <__assert_fail@plt+0x3d0c>
   15a94:	add	r1, sp, #4
   15a98:	mov	r0, r4
   15a9c:	mov	r2, #10
   15aa0:	bl	119a4 <strtol@plt>
   15aa4:	ldr	r3, [sp, #4]
   15aa8:	mov	r6, r0
   15aac:	ldrb	r0, [r3]
   15ab0:	cmp	r0, #0
   15ab4:	beq	15acc <__assert_fail@plt+0x3cb4>
   15ab8:	movw	r1, #57764	; 0xe1a4
   15abc:	mov	r0, r5
   15ac0:	mov	r2, r4
   15ac4:	movt	r1, #1
   15ac8:	bl	17978 <argp_error@@Base>
   15acc:	rsb	r0, r6, r6, lsl #4
   15ad0:	movw	r1, #62244	; 0xf324
   15ad4:	lsl	r0, r0, #2
   15ad8:	movt	r1, #2
   15adc:	str	r0, [r1]
   15ae0:	b	15b60 <__assert_fail@plt+0x3d48>
   15ae4:	movw	r0, #64572	; 0xfc3c
   15ae8:	movt	r0, #2
   15aec:	b	15b58 <__assert_fail@plt+0x3d40>
   15af0:	movw	r0, #64640	; 0xfc80
   15af4:	movt	r0, #2
   15af8:	ldr	r1, [r0]
   15afc:	str	r4, [r1]
   15b00:	mvn	r1, #0
   15b04:	ldr	r0, [r0]
   15b08:	str	r1, [r0, #4]
   15b0c:	b	15b60 <__assert_fail@plt+0x3d48>
   15b10:	movw	r0, #64064	; 0xfa40
   15b14:	movt	r0, #2
   15b18:	b	15b58 <__assert_fail@plt+0x3d40>
   15b1c:	movw	r5, #64540	; 0xfc1c
   15b20:	movt	r5, #2
   15b24:	ldr	r0, [r5]
   15b28:	mov	r1, r4
   15b2c:	bl	1393c <__assert_fail@plt+0x1b24>
   15b30:	str	r0, [r5]
   15b34:	b	15b60 <__assert_fail@plt+0x3d48>
   15b38:	movw	r0, #64636	; 0xfc7c
   15b3c:	movt	r0, #2
   15b40:	b	15b58 <__assert_fail@plt+0x3d40>
   15b44:	movw	r0, #64060	; 0xfa3c
   15b48:	movt	r0, #2
   15b4c:	b	15b58 <__assert_fail@plt+0x3d40>
   15b50:	movw	r0, #64552	; 0xfc28
   15b54:	movt	r0, #2
   15b58:	mov	r1, #1
   15b5c:	str	r1, [r0]
   15b60:	mov	r0, #0
   15b64:	sub	sp, fp, #16
   15b68:	pop	{r4, r5, r6, sl, fp, pc}
   15b6c:	movw	r1, #62228	; 0xf314
   15b70:	movt	r1, #2
   15b74:	mov	r0, #0
   15b78:	str	r0, [r1]
   15b7c:	sub	sp, fp, #16
   15b80:	pop	{r4, r5, r6, sl, fp, pc}
   15b84:	push	{r4, sl, fp, lr}
   15b88:	add	fp, sp, #8
   15b8c:	mov	r0, #0
   15b90:	bl	11ac4 <alarm@plt>
   15b94:	mov	r4, r0
   15b98:	mov	r0, #14
   15b9c:	mov	r1, #0
   15ba0:	bl	11a64 <signal@plt>
   15ba4:	cmp	r4, #0
   15ba8:	popne	{r4, sl, fp, pc}
   15bac:	movw	r2, #58289	; 0xe3b1
   15bb0:	mov	r0, #1
   15bb4:	mov	r1, #0
   15bb8:	movt	r2, #1
   15bbc:	pop	{r4, sl, fp, lr}
   15bc0:	b	11b6c <error@plt>
   15bc4:	push	{r4, r5, r6, r7, fp, lr}
   15bc8:	add	fp, sp, #16
   15bcc:	mov	r7, r2
   15bd0:	mov	r5, r1
   15bd4:	mov	r6, r0
   15bd8:	bl	11c08 <getpid@plt>
   15bdc:	mov	r4, r0
   15be0:	bl	11d10 <fork@plt>
   15be4:	cmn	r0, #1
   15be8:	beq	15ce4 <__assert_fail@plt+0x3ecc>
   15bec:	cmp	r0, #0
   15bf0:	bne	15ce8 <__assert_fail@plt+0x3ed0>
   15bf4:	bl	11c2c <setsid@plt>
   15bf8:	mov	r1, r0
   15bfc:	mvn	r0, #0
   15c00:	cmn	r1, #1
   15c04:	beq	15ce4 <__assert_fail@plt+0x3ecc>
   15c08:	mov	r0, #1
   15c0c:	mov	r1, #1
   15c10:	bl	11a64 <signal@plt>
   15c14:	bl	11d10 <fork@plt>
   15c18:	cmn	r0, #1
   15c1c:	beq	15ce4 <__assert_fail@plt+0x3ecc>
   15c20:	cmp	r0, #0
   15c24:	bne	15d0c <__assert_fail@plt+0x3ef4>
   15c28:	cmp	r6, #0
   15c2c:	beq	15c3c <__assert_fail@plt+0x3e24>
   15c30:	cmp	r5, #0
   15c34:	bne	15ce0 <__assert_fail@plt+0x3ec8>
   15c38:	b	15c5c <__assert_fail@plt+0x3e44>
   15c3c:	movw	r0, #60785	; 0xed71
   15c40:	movt	r0, #1
   15c44:	bl	11b00 <chdir@plt>
   15c48:	cmp	r0, #0
   15c4c:	mvn	r0, #0
   15c50:	poplt	{r4, r5, r6, r7, fp, pc}
   15c54:	cmp	r5, #0
   15c58:	bne	15ce0 <__assert_fail@plt+0x3ec8>
   15c5c:	mov	r0, #4
   15c60:	bl	11ad0 <sysconf@plt>
   15c64:	mov	r5, r0
   15c68:	cmn	r0, #1
   15c6c:	movweq	r5, #64	; 0x40
   15c70:	cmp	r5, #1
   15c74:	blt	15c90 <__assert_fail@plt+0x3e78>
   15c78:	mov	r6, #0
   15c7c:	mov	r0, r6
   15c80:	bl	11e00 <close@plt>
   15c84:	add	r6, r6, #1
   15c88:	cmp	r5, r6
   15c8c:	bne	15c7c <__assert_fail@plt+0x3e64>
   15c90:	movw	r0, #58317	; 0xe3cd
   15c94:	mov	r1, #2
   15c98:	mov	r2, #0
   15c9c:	movt	r0, #1
   15ca0:	bl	11b90 <open64@plt>
   15ca4:	cmn	r0, #1
   15ca8:	beq	15ce0 <__assert_fail@plt+0x3ec8>
   15cac:	mov	r1, #0
   15cb0:	mov	r5, r0
   15cb4:	bl	11ae8 <dup2@plt>
   15cb8:	mov	r0, r5
   15cbc:	mov	r1, #1
   15cc0:	bl	11ae8 <dup2@plt>
   15cc4:	mov	r0, r5
   15cc8:	mov	r1, #2
   15ccc:	bl	11ae8 <dup2@plt>
   15cd0:	cmp	r5, #3
   15cd4:	blt	15ce0 <__assert_fail@plt+0x3ec8>
   15cd8:	mov	r0, r5
   15cdc:	bl	11e00 <close@plt>
   15ce0:	mov	r0, r4
   15ce4:	pop	{r4, r5, r6, r7, fp, pc}
   15ce8:	cmp	r7, #1
   15cec:	blt	15d0c <__assert_fail@plt+0x3ef4>
   15cf0:	movw	r1, #23428	; 0x5b84
   15cf4:	mov	r0, #14
   15cf8:	movt	r1, #1
   15cfc:	bl	11a64 <signal@plt>
   15d00:	mov	r0, r7
   15d04:	bl	11ac4 <alarm@plt>
   15d08:	bl	119bc <pause@plt>
   15d0c:	mov	r0, #0
   15d10:	bl	11a4c <_exit@plt>

00015d14 <daemon@@Base>:
   15d14:	push	{fp, lr}
   15d18:	mov	fp, sp
   15d1c:	mov	r2, #0
   15d20:	bl	15bc4 <__assert_fail@plt+0x3dac>
   15d24:	cmn	r0, #1
   15d28:	movwne	r0, #0
   15d2c:	pop	{fp, pc}
   15d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d34:	add	fp, sp, #28
   15d38:	sub	sp, sp, #60	; 0x3c
   15d3c:	sub	sp, sp, #1024	; 0x400
   15d40:	bl	11c50 <__errno_location@plt>
   15d44:	mov	r8, #0
   15d48:	mov	r9, r0
   15d4c:	mov	r1, #256	; 0x100
   15d50:	str	r8, [r0]
   15d54:	mov	r0, #0
   15d58:	bl	1bc7c <argp_parse@@Base+0x23b4>
   15d5c:	mov	r4, r0
   15d60:	cmp	r0, #0
   15d64:	mov	r0, #0
   15d68:	beq	15ddc <daemon@@Base+0xc8>
   15d6c:	mov	r7, #512	; 0x200
   15d70:	mov	sl, #0
   15d74:	sub	r6, r7, #256	; 0x100
   15d78:	mov	r0, r4
   15d7c:	mov	r1, r6
   15d80:	bl	11b78 <gethostname@plt>
   15d84:	mov	r5, r0
   15d88:	cmp	r0, #0
   15d8c:	bne	15da8 <daemon@@Base+0x94>
   15d90:	mov	r0, r4
   15d94:	mov	r1, #0
   15d98:	mov	r2, r6
   15d9c:	bl	11cb0 <memchr@plt>
   15da0:	cmp	r0, #0
   15da4:	beq	15db4 <daemon@@Base+0xa0>
   15da8:	ldr	r0, [r9]
   15dac:	cmp	r0, #36	; 0x24
   15db0:	bne	15df4 <daemon@@Base+0xe0>
   15db4:	mov	r0, r4
   15db8:	mov	r1, r7
   15dbc:	str	sl, [r9]
   15dc0:	bl	1bc7c <argp_parse@@Base+0x23b4>
   15dc4:	mov	r1, r0
   15dc8:	mov	r0, r4
   15dcc:	add	r7, r7, #256	; 0x100
   15dd0:	cmp	r1, #0
   15dd4:	mov	r4, r1
   15dd8:	bne	15d74 <daemon@@Base+0x60>
   15ddc:	mov	r1, #12
   15de0:	str	r1, [r9]
   15de4:	bl	1ad78 <argp_parse@@Base+0x14b0>
   15de8:	mov	r0, r8
   15dec:	sub	sp, fp, #28
   15df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15df4:	cmp	r5, #0
   15df8:	cmpne	r0, #0
   15dfc:	bne	15e40 <daemon@@Base+0x12c>
   15e00:	sub	r2, fp, #64	; 0x40
   15e04:	vmov.i32	q8, #0	; 0x00000000
   15e08:	sub	r3, fp, #68	; 0x44
   15e0c:	mov	r1, #0
   15e10:	mov	r5, #0
   15e14:	mov	r0, r2
   15e18:	vst1.64	{d16-d17}, [r0]!
   15e1c:	vst1.64	{d16-d17}, [r0]
   15e20:	mov	r0, #2
   15e24:	str	r0, [fp, #-60]	; 0xffffffc4
   15e28:	mov	r0, r4
   15e2c:	bl	11da0 <getaddrinfo@plt>
   15e30:	cmp	r0, #0
   15e34:	beq	15e50 <daemon@@Base+0x13c>
   15e38:	mov	r8, r4
   15e3c:	b	15de8 <daemon@@Base+0xd4>
   15e40:	mov	r0, r4
   15e44:	bl	1ad78 <argp_parse@@Base+0x14b0>
   15e48:	mov	r8, #0
   15e4c:	b	15de8 <daemon@@Base+0xd4>
   15e50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15e54:	mov	r2, #8
   15e58:	movw	r3, #1025	; 0x401
   15e5c:	ldr	r1, [r0, #16]
   15e60:	ldr	r0, [r0, #20]
   15e64:	str	r2, [sp, #8]
   15e68:	add	r2, sp, #19
   15e6c:	str	r5, [sp]
   15e70:	str	r5, [sp, #4]
   15e74:	bl	11d1c <getnameinfo@plt>
   15e78:	cmp	r0, #0
   15e7c:	beq	15e88 <daemon@@Base+0x174>
   15e80:	mov	r8, r4
   15e84:	b	15e9c <daemon@@Base+0x188>
   15e88:	mov	r0, r4
   15e8c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   15e90:	add	r0, sp, #19
   15e94:	bl	11aac <strdup@plt>
   15e98:	mov	r8, r0
   15e9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ea0:	bl	11d94 <freeaddrinfo@plt>
   15ea4:	b	15de8 <daemon@@Base+0xd4>
   15ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15eac:	add	fp, sp, #28
   15eb0:	sub	sp, sp, #204	; 0xcc
   15eb4:	cmp	r1, #6
   15eb8:	ble	15ec8 <daemon@@Base+0x1b4>
   15ebc:	movw	sl, #58340	; 0xe3e4
   15ec0:	movt	sl, #1
   15ec4:	b	16370 <daemon@@Base+0x65c>
   15ec8:	mov	sl, r0
   15ecc:	mov	r0, r2
   15ed0:	mov	r9, r3
   15ed4:	mov	r7, r2
   15ed8:	mov	r6, r1
   15edc:	bl	11c20 <strlen@plt>
   15ee0:	add	r0, r0, #6
   15ee4:	bl	1bc4c <argp_parse@@Base+0x2384>
   15ee8:	cmp	r0, #0
   15eec:	beq	16020 <daemon@@Base+0x30c>
   15ef0:	mov	r4, r0
   15ef4:	mov	r0, #47	; 0x2f
   15ef8:	mov	r1, r7
   15efc:	strh	r0, [r4, #4]
   15f00:	movw	r0, #25647	; 0x642f
   15f04:	movt	r0, #30309	; 0x7665
   15f08:	str	r0, [r4]
   15f0c:	mov	r0, r4
   15f10:	bl	11b48 <strcat@plt>
   15f14:	mov	r0, r4
   15f18:	bl	11c20 <strlen@plt>
   15f1c:	cmp	r0, #0
   15f20:	beq	15fe0 <daemon@@Base+0x2cc>
   15f24:	sub	r0, r0, #1
   15f28:	ldrb	r1, [r4, r0]
   15f2c:	cmp	r1, #47	; 0x2f
   15f30:	moveq	r1, #0
   15f34:	strbeq	r1, [r4, r0]
   15f38:	mov	r0, r4
   15f3c:	b	15f44 <daemon@@Base+0x230>
   15f40:	mov	r0, r1
   15f44:	mov	r1, #46	; 0x2e
   15f48:	bl	11c38 <strchr@plt>
   15f4c:	cmp	r0, #0
   15f50:	beq	15fd0 <daemon@@Base+0x2bc>
   15f54:	cmp	r0, r4
   15f58:	bls	15f70 <daemon@@Base+0x25c>
   15f5c:	ldrb	r1, [r0, #-1]
   15f60:	cmp	r1, #47	; 0x2f
   15f64:	ldrbeq	r1, [r0, #1]
   15f68:	cmpeq	r1, #46	; 0x2e
   15f6c:	beq	15f78 <daemon@@Base+0x264>
   15f70:	add	r1, r0, #1
   15f74:	b	15f40 <daemon@@Base+0x22c>
   15f78:	ldrb	r3, [r0, #2]
   15f7c:	cmp	r3, #47	; 0x2f
   15f80:	cmpne	r3, #0
   15f84:	bne	15f70 <daemon@@Base+0x25c>
   15f88:	sub	r1, r0, #1
   15f8c:	mov	r2, r1
   15f90:	ldrb	r5, [r1, #-1]!
   15f94:	cmp	r1, r4
   15f98:	bcc	15fa4 <daemon@@Base+0x290>
   15f9c:	cmp	r5, #47	; 0x2f
   15fa0:	bne	15f8c <daemon@@Base+0x278>
   15fa4:	cmp	r1, r4
   15fa8:	bcc	15fd0 <daemon@@Base+0x2bc>
   15fac:	cmp	r3, #0
   15fb0:	strb	r3, [r1]
   15fb4:	beq	15f40 <daemon@@Base+0x22c>
   15fb8:	add	r0, r0, #3
   15fbc:	ldrb	r3, [r0], #1
   15fc0:	strb	r3, [r2], #1
   15fc4:	cmp	r3, #0
   15fc8:	bne	15fbc <daemon@@Base+0x2a8>
   15fcc:	b	15f40 <daemon@@Base+0x22c>
   15fd0:	ldrb	r0, [r4]
   15fd4:	cmp	r0, #0
   15fd8:	moveq	r0, #47	; 0x2f
   15fdc:	strheq	r0, [r4]
   15fe0:	movw	r1, #58386	; 0xe412
   15fe4:	mov	r0, r4
   15fe8:	mov	r2, #5
   15fec:	movt	r1, #1
   15ff0:	bl	11ddc <strncmp@plt>
   15ff4:	cmp	r0, #0
   15ff8:	beq	1605c <daemon@@Base+0x348>
   15ffc:	movw	sl, #62976	; 0xf600
   16000:	movw	r2, #58392	; 0xe418
   16004:	mov	r1, #1024	; 0x400
   16008:	mov	r3, r7
   1600c:	movt	sl, #2
   16010:	movt	r2, #1
   16014:	mov	r0, sl
   16018:	bl	11c5c <snprintf@plt>
   1601c:	b	16370 <daemon@@Base+0x65c>
   16020:	movw	r1, #58424	; 0xe438
   16024:	mov	r0, #30
   16028:	movw	sl, #62976	; 0xf600
   1602c:	movt	r1, #1
   16030:	movt	sl, #2
   16034:	add	r2, r1, #16
   16038:	vld1.64	{d16-d17}, [r1], r0
   1603c:	vld1.64	{d18-d19}, [r2]
   16040:	add	r2, sl, #16
   16044:	vld1.16	{d20}, [r1]
   16048:	mov	r1, sl
   1604c:	vst1.64	{d16-d17}, [r1], r0
   16050:	vst1.64	{d18-d19}, [r2]
   16054:	vst1.16	{d20}, [r1]
   16058:	b	16370 <daemon@@Base+0x65c>
   1605c:	mov	r0, r4
   16060:	movw	r1, #2049	; 0x801
   16064:	mov	r2, #0
   16068:	mov	r8, #0
   1606c:	bl	11b90 <open64@plt>
   16070:	cmp	r0, #0
   16074:	str	r0, [sp, #16]
   16078:	blt	16278 <daemon@@Base+0x564>
   1607c:	cmp	r6, #1
   16080:	blt	160ec <daemon@@Base+0x3d8>
   16084:	mov	r8, #0
   16088:	cmp	r6, #4
   1608c:	mov	r0, #0
   16090:	bls	160d0 <daemon@@Base+0x3bc>
   16094:	ands	r0, r6, #3
   16098:	vmov.i32	q8, #0	; 0x00000000
   1609c:	add	r1, sl, #4
   160a0:	movweq	r0, #4
   160a4:	sub	r0, r6, r0
   160a8:	mov	r2, r0
   160ac:	vld2.32	{d18-d21}, [r1]!
   160b0:	subs	r2, r2, #4
   160b4:	vadd.i32	q8, q9, q8
   160b8:	bne	160ac <daemon@@Base+0x398>
   160bc:	vext.8	q9, q8, q8, #8
   160c0:	vadd.i32	q8, q8, q9
   160c4:	vdup.32	q9, d16[1]
   160c8:	vadd.i32	q8, q8, q9
   160cc:	vmov.32	r8, d16[0]
   160d0:	sub	r1, r6, r0
   160d4:	add	r0, sl, r0, lsl #3
   160d8:	add	r0, r0, #4
   160dc:	ldr	r2, [r0], #8
   160e0:	subs	r1, r1, #1
   160e4:	add	r8, r2, r8
   160e8:	bne	160dc <daemon@@Base+0x3c8>
   160ec:	ldr	r0, [sp, #16]
   160f0:	mov	r1, sl
   160f4:	mov	r2, r6
   160f8:	str	r9, [sp, #8]
   160fc:	str	sl, [sp, #12]
   16100:	bl	11cbc <writev@plt>
   16104:	mov	sl, #0
   16108:	cmp	r8, r0
   1610c:	mov	r9, #0
   16110:	ble	162c8 <daemon@@Base+0x5b4>
   16114:	sub	r7, fp, #80	; 0x50
   16118:	mov	r5, r0
   1611c:	mov	r9, #0
   16120:	orr	r0, r7, #4
   16124:	str	r0, [sp, #4]
   16128:	cmp	r5, #0
   1612c:	bge	161e8 <daemon@@Base+0x4d4>
   16130:	bl	11c50 <__errno_location@plt>
   16134:	mov	r7, r0
   16138:	ldr	r0, [r0]
   1613c:	cmp	r0, #11
   16140:	bne	162bc <daemon@@Base+0x5a8>
   16144:	mov	r0, #0
   16148:	cmp	r9, #0
   1614c:	str	r0, [fp, #-84]	; 0xffffffac
   16150:	bne	163ac <daemon@@Base+0x698>
   16154:	bl	11d10 <fork@plt>
   16158:	ldr	r5, [sp, #8]
   1615c:	cmp	r0, #0
   16160:	bne	162e4 <daemon@@Base+0x5d0>
   16164:	bl	11d10 <fork@plt>
   16168:	cmp	r0, #0
   1616c:	bne	16394 <daemon@@Base+0x680>
   16170:	mov	r0, #14
   16174:	mov	r1, #0
   16178:	bl	11a64 <signal@plt>
   1617c:	mov	r0, #15
   16180:	mov	r1, #0
   16184:	bl	11a64 <signal@plt>
   16188:	add	r7, sp, #20
   1618c:	mov	r0, r7
   16190:	bl	11d04 <sigemptyset@plt>
   16194:	mov	r0, #2
   16198:	mov	r1, r7
   1619c:	mov	r2, #0
   161a0:	bl	119f8 <sigprocmask@plt>
   161a4:	mov	r0, r5
   161a8:	bl	11ac4 <alarm@plt>
   161ac:	ldr	r5, [sp, #16]
   161b0:	mov	r1, #2048	; 0x800
   161b4:	sub	r2, fp, #84	; 0x54
   161b8:	mov	r0, r5
   161bc:	bl	1ab98 <argp_parse@@Base+0x12d0>
   161c0:	ldr	r1, [sp, #12]
   161c4:	mov	r0, r5
   161c8:	mov	r2, r6
   161cc:	bl	11cbc <writev@plt>
   161d0:	mov	r5, r0
   161d4:	mov	r9, #1
   161d8:	cmp	r8, r0
   161dc:	sub	r7, fp, #80	; 0x50
   161e0:	bgt	16128 <daemon@@Base+0x414>
   161e4:	b	162c8 <daemon@@Base+0x5b4>
   161e8:	ldr	r1, [sp, #12]
   161ec:	cmp	r1, r7
   161f0:	beq	16200 <daemon@@Base+0x4ec>
   161f4:	lsl	r2, r6, #3
   161f8:	mov	r0, r7
   161fc:	bl	11a58 <memcpy@plt>
   16200:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16204:	cmp	r5, r0
   16208:	bge	1621c <daemon@@Base+0x508>
   1620c:	ldr	r2, [sp, #4]
   16210:	str	r7, [sp, #12]
   16214:	mov	r7, r5
   16218:	b	16244 <daemon@@Base+0x530>
   1621c:	mov	r1, r7
   16220:	mov	r7, r5
   16224:	sub	r7, r7, r0
   16228:	ldr	r0, [r1, #12]
   1622c:	sub	r6, r6, #1
   16230:	add	r1, r1, #8
   16234:	cmp	r7, r0
   16238:	bge	16224 <daemon@@Base+0x510>
   1623c:	add	r2, r1, #4
   16240:	str	r1, [sp, #12]
   16244:	ldr	r1, [sp, #12]
   16248:	cmp	r7, #0
   1624c:	sub	r8, r8, r5
   16250:	subne	r0, r0, r7
   16254:	ldrne	r3, [r1]
   16258:	addne	r3, r3, r7
   1625c:	strne	r3, [r1]
   16260:	strne	r0, [r2]
   16264:	ldr	r0, [sp, #16]
   16268:	mov	r2, r6
   1626c:	bl	11cbc <writev@plt>
   16270:	mov	r5, r0
   16274:	b	161d8 <daemon@@Base+0x4c4>
   16278:	bl	11c50 <__errno_location@plt>
   1627c:	ldr	r0, [r0]
   16280:	mov	sl, #0
   16284:	cmp	r0, #13
   16288:	cmpne	r0, #16
   1628c:	beq	16370 <daemon@@Base+0x65c>
   16290:	bl	11bcc <strerror@plt>
   16294:	movw	sl, #62976	; 0xf600
   16298:	movw	r2, #56190	; 0xdb7e
   1629c:	str	r0, [sp]
   162a0:	mov	r1, #1024	; 0x400
   162a4:	mov	r3, r4
   162a8:	movt	sl, #2
   162ac:	movt	r2, #1
   162b0:	mov	r0, sl
   162b4:	bl	11c5c <snprintf@plt>
   162b8:	b	16368 <daemon@@Base+0x654>
   162bc:	cmp	r0, #5
   162c0:	cmpne	r0, #19
   162c4:	bne	16310 <daemon@@Base+0x5fc>
   162c8:	mov	r0, r4
   162cc:	bl	1ad78 <argp_parse@@Base+0x14b0>
   162d0:	ldr	r0, [sp, #16]
   162d4:	bl	11e00 <close@plt>
   162d8:	cmp	r9, #0
   162dc:	beq	16370 <daemon@@Base+0x65c>
   162e0:	b	163a4 <daemon@@Base+0x690>
   162e4:	blt	16338 <daemon@@Base+0x624>
   162e8:	add	r1, sp, #20
   162ec:	mov	r2, #0
   162f0:	bl	11b54 <waitpid@plt>
   162f4:	cmp	r0, #0
   162f8:	blt	16338 <daemon@@Base+0x624>
   162fc:	ldr	r0, [sp, #20]
   16300:	tst	r0, #127	; 0x7f
   16304:	beq	16328 <daemon@@Base+0x614>
   16308:	mov	r0, #4
   1630c:	b	16334 <daemon@@Base+0x620>
   16310:	ldr	r0, [sp, #16]
   16314:	bl	11e00 <close@plt>
   16318:	cmp	r9, #0
   1631c:	bne	163bc <daemon@@Base+0x6a8>
   16320:	ldr	r0, [r7]
   16324:	b	16290 <daemon@@Base+0x57c>
   16328:	ubfx	r0, r0, #8, #8
   1632c:	cmp	r0, #0
   16330:	beq	1637c <daemon@@Base+0x668>
   16334:	str	r0, [r7]
   16338:	ldr	r0, [r7]
   1633c:	bl	11bcc <strerror@plt>
   16340:	movw	sl, #62976	; 0xf600
   16344:	movw	r2, #58410	; 0xe42a
   16348:	mov	r3, r0
   1634c:	mov	r1, #1024	; 0x400
   16350:	movt	sl, #2
   16354:	movt	r2, #1
   16358:	mov	r0, sl
   1635c:	bl	11c5c <snprintf@plt>
   16360:	ldr	r0, [sp, #16]
   16364:	bl	11e00 <close@plt>
   16368:	mov	r0, r4
   1636c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   16370:	mov	r0, sl
   16374:	sub	sp, fp, #28
   16378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1637c:	ldr	r0, [sp, #16]
   16380:	bl	11e00 <close@plt>
   16384:	mov	r0, r4
   16388:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1638c:	mov	sl, #0
   16390:	b	16370 <daemon@@Base+0x65c>
   16394:	cmn	r0, #1
   16398:	bne	163a4 <daemon@@Base+0x690>
   1639c:	ldr	r0, [r7]
   163a0:	bl	11a4c <_exit@plt>
   163a4:	mov	r0, #0
   163a8:	bl	11a4c <_exit@plt>
   163ac:	ldr	r0, [sp, #16]
   163b0:	bl	11e00 <close@plt>
   163b4:	mov	r0, #1
   163b8:	bl	11a4c <_exit@plt>
   163bc:	mov	r0, #1
   163c0:	bl	11a4c <_exit@plt>

000163c4 <argp_help@@Base>:
   163c4:	push	{fp, lr}
   163c8:	mov	fp, sp
   163cc:	sub	sp, sp, #8
   163d0:	mov	ip, r2
   163d4:	mov	r2, r1
   163d8:	str	r3, [sp]
   163dc:	mov	r1, #0
   163e0:	mov	r3, ip
   163e4:	bl	163f0 <argp_help@@Base+0x2c>
   163e8:	mov	sp, fp
   163ec:	pop	{fp, pc}
   163f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163f4:	add	fp, sp, #28
   163f8:	sub	sp, sp, #108	; 0x6c
   163fc:	cmp	r2, #0
   16400:	str	r1, [fp, #-96]	; 0xffffffa0
   16404:	str	r0, [fp, #-112]	; 0xffffff90
   16408:	beq	16e60 <argp_help@@Base+0xa9c>
   1640c:	ldr	r0, [fp, #8]
   16410:	mov	r6, r3
   16414:	mov	r5, r2
   16418:	str	r0, [fp, #-100]	; 0xffffff9c
   1641c:	mov	r0, r2
   16420:	bl	11d58 <flockfile@plt>
   16424:	movw	r8, #62840	; 0xf578
   16428:	str	r6, [fp, #-132]	; 0xffffff7c
   1642c:	movt	r8, #2
   16430:	ldr	r0, [r8, #36]	; 0x24
   16434:	cmp	r0, #0
   16438:	bne	16960 <argp_help@@Base+0x59c>
   1643c:	movw	r0, #58583	; 0xe4d7
   16440:	movt	r0, #1
   16444:	bl	11b9c <getenv@plt>
   16448:	mov	r1, r8
   1644c:	mov	r8, r0
   16450:	mov	r0, #32
   16454:	sub	r2, fp, #88	; 0x58
   16458:	add	r3, r1, #16
   1645c:	vld1.64	{d16-d17}, [r1], r0
   16460:	add	r7, r2, #16
   16464:	cmp	r8, #0
   16468:	vld1.64	{d18-d19}, [r3]
   1646c:	vldr	d20, [r1]
   16470:	mov	r1, r2
   16474:	vst1.64	{d16-d17}, [r1], r0
   16478:	vst1.64	{d18-d19}, [r7]
   1647c:	vstr	d20, [r1]
   16480:	beq	16958 <argp_help@@Base+0x594>
   16484:	str	r7, [fp, #-108]	; 0xffffff94
   16488:	str	r3, [fp, #-104]	; 0xffffff98
   1648c:	str	r5, [fp, #-136]	; 0xffffff78
   16490:	ldrb	r5, [r8]
   16494:	cmp	r5, #0
   16498:	beq	16860 <argp_help@@Base+0x49c>
   1649c:	bl	11bfc <__ctype_b_loc@plt>
   164a0:	movw	r7, #59248	; 0xe770
   164a4:	str	r0, [fp, #-92]	; 0xffffffa4
   164a8:	movt	r7, #1
   164ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   164b0:	uxtb	r1, r5
   164b4:	ldr	r0, [r0]
   164b8:	add	r1, r0, r1, lsl #1
   164bc:	b	164c8 <argp_help@@Base+0x104>
   164c0:	ldrb	r5, [r8, #1]!
   164c4:	add	r1, r0, r5, lsl #1
   164c8:	ldrh	r1, [r1]
   164cc:	tst	r1, #8192	; 0x2000
   164d0:	bne	164c0 <argp_help@@Base+0xfc>
   164d4:	tst	r1, #1024	; 0x400
   164d8:	beq	16834 <argp_help@@Base+0x470>
   164dc:	mov	r3, r5
   164e0:	mov	r2, r8
   164e4:	b	164ec <argp_help@@Base+0x128>
   164e8:	ldrb	r3, [r2, #1]!
   164ec:	uxtb	r6, r3
   164f0:	add	r1, r0, r6, lsl #1
   164f4:	ldrh	r1, [r1]
   164f8:	tst	r1, #8
   164fc:	bne	164e8 <argp_help@@Base+0x124>
   16500:	cmp	r6, #95	; 0x5f
   16504:	cmpne	r6, #45	; 0x2d
   16508:	beq	164e8 <argp_help@@Base+0x124>
   1650c:	tst	r1, #8192	; 0x2000
   16510:	mov	r4, r2
   16514:	beq	16530 <argp_help@@Base+0x16c>
   16518:	mov	r4, r2
   1651c:	ldrb	r3, [r4, #1]!
   16520:	add	r1, r0, r3, lsl #1
   16524:	ldrh	r1, [r1]
   16528:	tst	r1, #8192	; 0x2000
   1652c:	bne	1651c <argp_help@@Base+0x158>
   16530:	sub	r9, r2, r8
   16534:	uxtb	r2, r3
   16538:	cmp	r2, #0
   1653c:	cmpne	r2, #44	; 0x2c
   16540:	bne	16590 <argp_help@@Base+0x1cc>
   16544:	uxtb	r0, r5
   16548:	mov	sl, #1
   1654c:	cmp	r0, #110	; 0x6e
   16550:	bne	16588 <argp_help@@Base+0x1c4>
   16554:	ldrb	r0, [r8, #1]
   16558:	mov	sl, #1
   1655c:	cmp	r0, #111	; 0x6f
   16560:	bne	16588 <argp_help@@Base+0x1c4>
   16564:	ldrb	r0, [r8, #2]
   16568:	mov	sl, #1
   1656c:	cmp	r0, #45	; 0x2d
   16570:	bne	16588 <argp_help@@Base+0x1c4>
   16574:	sub	r9, r9, #3
   16578:	add	r8, r8, #3
   1657c:	mov	r5, #0
   16580:	mov	sl, #1
   16584:	b	16614 <argp_help@@Base+0x250>
   16588:	mov	r5, #1
   1658c:	b	16614 <argp_help@@Base+0x250>
   16590:	cmp	r2, #61	; 0x3d
   16594:	bne	165ac <argp_help@@Base+0x1e8>
   16598:	ldrb	r1, [r4, #1]!
   1659c:	add	r1, r0, r1, lsl #1
   165a0:	ldrh	r1, [r1]
   165a4:	tst	r1, #8192	; 0x2000
   165a8:	bne	16598 <argp_help@@Base+0x1d4>
   165ac:	mov	sl, #0
   165b0:	tst	r1, #2048	; 0x800
   165b4:	bne	165c0 <argp_help@@Base+0x1fc>
   165b8:	mov	r5, #0
   165bc:	b	16614 <argp_help@@Base+0x250>
   165c0:	mov	r0, r4
   165c4:	mov	r1, #0
   165c8:	mov	r2, #10
   165cc:	bl	119a4 <strtol@plt>
   165d0:	mov	r5, r0
   165d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   165d8:	sub	r4, r4, #1
   165dc:	ldr	r0, [r0]
   165e0:	ldrb	r1, [r4, #1]!
   165e4:	add	r1, r0, r1, lsl #1
   165e8:	ldrh	r1, [r1]
   165ec:	tst	r1, #2048	; 0x800
   165f0:	bne	165e0 <argp_help@@Base+0x21c>
   165f4:	mov	sl, #0
   165f8:	tst	r1, #8192	; 0x2000
   165fc:	beq	16614 <argp_help@@Base+0x250>
   16600:	ldrb	r1, [r4, #1]!
   16604:	add	r1, r0, r1, lsl #1
   16608:	ldrb	r1, [r1, #1]
   1660c:	tst	r1, #32
   16610:	bne	16600 <argp_help@@Base+0x23c>
   16614:	mov	r0, r7
   16618:	bl	11c20 <strlen@plt>
   1661c:	cmp	r0, r9
   16620:	bne	16640 <argp_help@@Base+0x27c>
   16624:	mov	r0, r8
   16628:	mov	r1, r7
   1662c:	mov	r2, r9
   16630:	bl	11ddc <strncmp@plt>
   16634:	cmp	r0, #0
   16638:	mov	r6, r7
   1663c:	beq	167c4 <argp_help@@Base+0x400>
   16640:	add	r6, r7, #16
   16644:	mov	r0, r6
   16648:	bl	11c20 <strlen@plt>
   1664c:	cmp	r0, r9
   16650:	bne	1666c <argp_help@@Base+0x2a8>
   16654:	mov	r0, r8
   16658:	mov	r1, r6
   1665c:	mov	r2, r9
   16660:	bl	11ddc <strncmp@plt>
   16664:	cmp	r0, #0
   16668:	beq	167c4 <argp_help@@Base+0x400>
   1666c:	add	r6, r7, #32
   16670:	mov	r0, r6
   16674:	bl	11c20 <strlen@plt>
   16678:	cmp	r0, r9
   1667c:	bne	16698 <argp_help@@Base+0x2d4>
   16680:	mov	r0, r8
   16684:	mov	r1, r6
   16688:	mov	r2, r9
   1668c:	bl	11ddc <strncmp@plt>
   16690:	cmp	r0, #0
   16694:	beq	167c4 <argp_help@@Base+0x400>
   16698:	add	r6, r7, #48	; 0x30
   1669c:	mov	r0, r6
   166a0:	bl	11c20 <strlen@plt>
   166a4:	cmp	r0, r9
   166a8:	bne	166c4 <argp_help@@Base+0x300>
   166ac:	mov	r0, r8
   166b0:	mov	r1, r6
   166b4:	mov	r2, r9
   166b8:	bl	11ddc <strncmp@plt>
   166bc:	cmp	r0, #0
   166c0:	beq	167c4 <argp_help@@Base+0x400>
   166c4:	add	r6, r7, #64	; 0x40
   166c8:	mov	r0, r6
   166cc:	bl	11c20 <strlen@plt>
   166d0:	cmp	r0, r9
   166d4:	bne	166f0 <argp_help@@Base+0x32c>
   166d8:	mov	r0, r8
   166dc:	mov	r1, r6
   166e0:	mov	r2, r9
   166e4:	bl	11ddc <strncmp@plt>
   166e8:	cmp	r0, #0
   166ec:	beq	167c4 <argp_help@@Base+0x400>
   166f0:	add	r6, r7, #80	; 0x50
   166f4:	mov	r0, r6
   166f8:	bl	11c20 <strlen@plt>
   166fc:	cmp	r0, r9
   16700:	bne	1671c <argp_help@@Base+0x358>
   16704:	mov	r0, r8
   16708:	mov	r1, r6
   1670c:	mov	r2, r9
   16710:	bl	11ddc <strncmp@plt>
   16714:	cmp	r0, #0
   16718:	beq	167c4 <argp_help@@Base+0x400>
   1671c:	add	r6, r7, #96	; 0x60
   16720:	mov	r0, r6
   16724:	bl	11c20 <strlen@plt>
   16728:	cmp	r0, r9
   1672c:	bne	16748 <argp_help@@Base+0x384>
   16730:	mov	r0, r8
   16734:	mov	r1, r6
   16738:	mov	r2, r9
   1673c:	bl	11ddc <strncmp@plt>
   16740:	cmp	r0, #0
   16744:	beq	167c4 <argp_help@@Base+0x400>
   16748:	add	r6, r7, #112	; 0x70
   1674c:	mov	r0, r6
   16750:	bl	11c20 <strlen@plt>
   16754:	cmp	r0, r9
   16758:	bne	16774 <argp_help@@Base+0x3b0>
   1675c:	mov	r0, r8
   16760:	mov	r1, r6
   16764:	mov	r2, r9
   16768:	bl	11ddc <strncmp@plt>
   1676c:	cmp	r0, #0
   16770:	beq	167c4 <argp_help@@Base+0x400>
   16774:	add	r6, r7, #128	; 0x80
   16778:	mov	r0, r6
   1677c:	bl	11c20 <strlen@plt>
   16780:	cmp	r0, r9
   16784:	bne	167a0 <argp_help@@Base+0x3dc>
   16788:	mov	r0, r8
   1678c:	mov	r1, r6
   16790:	mov	r2, r9
   16794:	bl	11ddc <strncmp@plt>
   16798:	cmp	r0, #0
   1679c:	beq	167c4 <argp_help@@Base+0x400>
   167a0:	sub	sp, sp, #8
   167a4:	str	r9, [sp]
   167a8:	str	r8, [sp, #4]
   167ac:	movw	r3, #58644	; 0xe514
   167b0:	mov	r1, #0
   167b4:	mov	r2, #0
   167b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   167bc:	movt	r3, #1
   167c0:	b	16808 <argp_help@@Base+0x444>
   167c4:	cmp	sl, #0
   167c8:	beq	167d8 <argp_help@@Base+0x414>
   167cc:	ldrb	r0, [r6, #14]
   167d0:	cmp	r0, #0
   167d4:	beq	167e8 <argp_help@@Base+0x424>
   167d8:	ldrb	r0, [r6, #15]
   167dc:	sub	r1, fp, #88	; 0x58
   167e0:	str	r5, [r1, r0]
   167e4:	b	16810 <argp_help@@Base+0x44c>
   167e8:	sub	sp, sp, #8
   167ec:	str	r9, [sp]
   167f0:	str	r8, [sp, #4]
   167f4:	movw	r3, #58597	; 0xe4e5
   167f8:	mov	r1, #0
   167fc:	mov	r2, #0
   16800:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16804:	movt	r3, #1
   16808:	bl	17abc <argp_failure@@Base>
   1680c:	add	sp, sp, #8
   16810:	mov	r8, r4
   16814:	ldr	r6, [fp, #-132]	; 0xffffff7c
   16818:	ldrb	r0, [r8], #1
   1681c:	cmp	r0, #44	; 0x2c
   16820:	movne	r8, r4
   16824:	ldrb	r5, [r8]
   16828:	cmp	r5, #0
   1682c:	bne	164ac <argp_help@@Base+0xe8>
   16830:	b	16860 <argp_help@@Base+0x49c>
   16834:	tst	r5, #255	; 0xff
   16838:	beq	16860 <argp_help@@Base+0x49c>
   1683c:	sub	sp, sp, #8
   16840:	str	r8, [sp]
   16844:	movw	r3, #58682	; 0xe53a
   16848:	mov	r1, #0
   1684c:	mov	r2, #0
   16850:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16854:	movt	r3, #1
   16858:	bl	17abc <argp_failure@@Base>
   1685c:	add	sp, sp, #8
   16860:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16864:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16868:	movw	r0, #59248	; 0xe770
   1686c:	movt	r0, #1
   16870:	cmp	r2, r1
   16874:	bge	16900 <argp_help@@Base+0x53c>
   16878:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1687c:	cmp	r2, r1
   16880:	bge	16908 <argp_help@@Base+0x544>
   16884:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16888:	cmp	r2, r1
   1688c:	bge	16910 <argp_help@@Base+0x54c>
   16890:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16894:	cmp	r2, r1
   16898:	bge	16918 <argp_help@@Base+0x554>
   1689c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   168a0:	cmp	r2, r1
   168a4:	bge	16920 <argp_help@@Base+0x55c>
   168a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   168ac:	ldr	r5, [fp, #-136]	; 0xffffff78
   168b0:	cmp	r2, r1
   168b4:	bge	178b4 <argp_help@@Base+0x14f0>
   168b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   168bc:	sub	r1, fp, #88	; 0x58
   168c0:	movw	r2, #62840	; 0xf578
   168c4:	mov	r3, r1
   168c8:	movt	r2, #2
   168cc:	mov	r1, r2
   168d0:	vld1.64	{d16-d17}, [r0]
   168d4:	mov	r0, #32
   168d8:	vld1.64	{d18-d19}, [r3], r0
   168dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   168e0:	vst1.64	{d16-d17}, [r0]
   168e4:	mov	r0, #36	; 0x24
   168e8:	vst1.64	{d18-d19}, [r1], r0
   168ec:	mov	r0, #1
   168f0:	str	r0, [r1]
   168f4:	ldr	r0, [r3]
   168f8:	str	r0, [r2, #32]
   168fc:	b	16958 <argp_help@@Base+0x594>
   16900:	add	r0, r0, #32
   16904:	b	16924 <argp_help@@Base+0x560>
   16908:	add	r0, r0, #48	; 0x30
   1690c:	b	16924 <argp_help@@Base+0x560>
   16910:	add	r0, r0, #64	; 0x40
   16914:	b	16924 <argp_help@@Base+0x560>
   16918:	add	r0, r0, #80	; 0x50
   1691c:	b	16924 <argp_help@@Base+0x560>
   16920:	add	r0, r0, #96	; 0x60
   16924:	ldr	r5, [fp, #-136]	; 0xffffff78
   16928:	sub	sp, sp, #8
   1692c:	movw	r1, #58763	; 0xe58b
   16930:	str	r0, [sp, #4]
   16934:	movw	r3, #58711	; 0xe557
   16938:	mov	r2, #0
   1693c:	movt	r1, #1
   16940:	movt	r3, #1
   16944:	str	r1, [sp]
   16948:	mov	r1, #0
   1694c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16950:	bl	17abc <argp_failure@@Base>
   16954:	add	sp, sp, #8
   16958:	movw	r8, #62840	; 0xf578
   1695c:	movt	r8, #2
   16960:	ldr	r2, [r8, #32]
   16964:	mov	r0, #0
   16968:	mov	r1, #0
   1696c:	mov	r3, #0
   16970:	str	r0, [fp, #-108]	; 0xffffff94
   16974:	mov	r0, r5
   16978:	bl	1bcd0 <argp_parse@@Base+0x2408>
   1697c:	cmp	r0, #0
   16980:	beq	16a1c <argp_help@@Base+0x658>
   16984:	mov	r4, r0
   16988:	tst	r6, #11
   1698c:	str	r5, [fp, #-136]	; 0xffffff78
   16990:	beq	16aec <argp_help@@Base+0x728>
   16994:	ldr	r0, [fp, #-112]	; 0xffffff90
   16998:	mov	r1, #0
   1699c:	bl	17cc4 <argp_failure@@Base+0x208>
   169a0:	ldr	sl, [r0, #4]
   169a4:	str	r0, [fp, #-108]	; 0xffffff94
   169a8:	cmp	sl, #0
   169ac:	beq	16aec <argp_help@@Base+0x728>
   169b0:	ldr	r6, [r0]
   169b4:	movw	r9, #58483	; 0xe473
   169b8:	mov	r5, sl
   169bc:	movt	r9, #1
   169c0:	str	r6, [fp, #-104]	; 0xffffff98
   169c4:	ldr	r7, [r6, #4]
   169c8:	cmp	r7, #0
   169cc:	beq	16a0c <argp_help@@Base+0x648>
   169d0:	ldr	r0, [r6]
   169d4:	add	r8, r0, #12
   169d8:	ldr	r0, [r8, #-12]
   169dc:	cmp	r0, #0
   169e0:	beq	16a00 <argp_help@@Base+0x63c>
   169e4:	ldrb	r1, [r8]
   169e8:	tst	r1, #2
   169ec:	bne	16a00 <argp_help@@Base+0x63c>
   169f0:	mov	r1, r9
   169f4:	bl	11998 <strcmp@plt>
   169f8:	cmp	r0, #0
   169fc:	beq	16a2c <argp_help@@Base+0x668>
   16a00:	subs	r7, r7, #1
   16a04:	add	r8, r8, #24
   16a08:	bne	169d8 <argp_help@@Base+0x614>
   16a0c:	subs	r5, r5, #1
   16a10:	add	r6, r6, #28
   16a14:	bne	169c4 <argp_help@@Base+0x600>
   16a18:	b	16a38 <argp_help@@Base+0x674>
   16a1c:	mov	r0, r5
   16a20:	sub	sp, fp, #28
   16a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a28:	b	11b18 <funlockfile@plt>
   16a2c:	cmp	r6, #0
   16a30:	mvnne	r0, #0
   16a34:	strne	r0, [r6, #12]
   16a38:	ldr	r6, [fp, #-104]	; 0xffffff98
   16a3c:	movw	r9, #59832	; 0xe9b8
   16a40:	mov	r8, sl
   16a44:	movt	r9, #1
   16a48:	ldr	r5, [r6, #4]
   16a4c:	cmp	r5, #0
   16a50:	beq	16a90 <argp_help@@Base+0x6cc>
   16a54:	ldr	r0, [r6]
   16a58:	add	r7, r0, #12
   16a5c:	ldr	r0, [r7, #-12]
   16a60:	cmp	r0, #0
   16a64:	beq	16a84 <argp_help@@Base+0x6c0>
   16a68:	ldrb	r1, [r7]
   16a6c:	tst	r1, #2
   16a70:	bne	16a84 <argp_help@@Base+0x6c0>
   16a74:	mov	r1, r9
   16a78:	bl	11998 <strcmp@plt>
   16a7c:	cmp	r0, #0
   16a80:	beq	16aa0 <argp_help@@Base+0x6dc>
   16a84:	subs	r5, r5, #1
   16a88:	add	r7, r7, #24
   16a8c:	bne	16a5c <argp_help@@Base+0x698>
   16a90:	subs	r8, r8, #1
   16a94:	add	r6, r6, #28
   16a98:	bne	16a48 <argp_help@@Base+0x684>
   16a9c:	b	16aac <argp_help@@Base+0x6e8>
   16aa0:	cmp	r6, #0
   16aa4:	mvnne	r0, #0
   16aa8:	strne	r0, [r6, #12]
   16aac:	ldr	r0, [fp, #-104]	; 0xffffff98
   16ab0:	mov	r1, #0
   16ab4:	add	r0, r0, #24
   16ab8:	str	r1, [r0], #28
   16abc:	add	r1, r1, #1
   16ac0:	cmp	sl, r1
   16ac4:	bne	16ab8 <argp_help@@Base+0x6f4>
   16ac8:	ldr	r0, [fp, #-104]	; 0xffffff98
   16acc:	movw	r3, #36504	; 0x8e98
   16ad0:	mov	r1, sl
   16ad4:	mov	r2, #28
   16ad8:	movt	r3, #1
   16adc:	bl	11d7c <qsort@plt>
   16ae0:	ldr	r6, [fp, #-132]	; 0xffffff7c
   16ae4:	movw	r8, #62840	; 0xf578
   16ae8:	movt	r8, #2
   16aec:	tst	r6, #3
   16af0:	beq	16e68 <argp_help@@Base+0xaa4>
   16af4:	ldr	r0, [fp, #-112]	; 0xffffff90
   16af8:	bl	18348 <argp_failure@@Base+0x88c>
   16afc:	mov	r2, r0
   16b00:	add	r0, r0, #7
   16b04:	bic	r0, r0, #7
   16b08:	sub	r0, sp, r0
   16b0c:	mov	sp, r0
   16b10:	mov	r1, #0
   16b14:	str	r0, [fp, #-104]	; 0xffffff98
   16b18:	bl	11c8c <memset@plt>
   16b1c:	mov	r7, #1
   16b20:	ldr	r1, [r4, #24]
   16b24:	ldr	r2, [r4, #28]
   16b28:	ldr	r0, [r4, #16]
   16b2c:	mov	r5, r6
   16b30:	ldr	r6, [r8, #28]
   16b34:	sub	r1, r2, r1
   16b38:	cmp	r1, r0
   16b3c:	bls	16b48 <argp_help@@Base+0x784>
   16b40:	mov	r0, r4
   16b44:	bl	1bd94 <argp_parse@@Base+0x24cc>
   16b48:	ldr	r0, [fp, #-104]	; 0xffffff98
   16b4c:	ldr	r9, [r4, #12]
   16b50:	movw	r1, #58488	; 0xe478
   16b54:	str	r6, [r4, #12]
   16b58:	tst	r7, #1
   16b5c:	movt	r1, #1
   16b60:	str	r0, [fp, #-88]	; 0xffffffa8
   16b64:	mov	r0, r4
   16b68:	beq	16b78 <argp_help@@Base+0x7b4>
   16b6c:	movw	r2, #58494	; 0xe47e
   16b70:	movt	r2, #1
   16b74:	b	16b80 <argp_help@@Base+0x7bc>
   16b78:	movw	r2, #58501	; 0xe485
   16b7c:	movt	r2, #1
   16b80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16b84:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   16b88:	ldr	r1, [r4, #24]
   16b8c:	ldr	r2, [r4, #28]
   16b90:	ldr	r0, [r4, #16]
   16b94:	ldr	r6, [r8, #28]
   16b98:	sub	r1, r2, r1
   16b9c:	cmp	r1, r0
   16ba0:	bls	16bac <argp_help@@Base+0x7e8>
   16ba4:	mov	r0, r4
   16ba8:	bl	1bd94 <argp_parse@@Base+0x24cc>
   16bac:	ldr	r8, [r4, #4]
   16bb0:	str	r6, [r4, #4]
   16bb4:	mov	r6, r5
   16bb8:	tst	r5, #2
   16bbc:	bne	16bd4 <argp_help@@Base+0x810>
   16bc0:	ldr	r0, [fp, #-108]	; 0xffffff94
   16bc4:	mov	r1, r4
   16bc8:	bl	183b0 <argp_failure@@Base+0x8f4>
   16bcc:	orr	r6, r6, #2
   16bd0:	b	16c38 <argp_help@@Base+0x874>
   16bd4:	ldr	r0, [fp, #-108]	; 0xffffff94
   16bd8:	ldr	r0, [r0, #4]
   16bdc:	cmp	r0, #0
   16be0:	beq	16c38 <argp_help@@Base+0x874>
   16be4:	ldr	r0, [r4, #28]
   16be8:	ldr	r1, [r4, #32]
   16bec:	add	r2, r0, #12
   16bf0:	cmp	r2, r1
   16bf4:	bls	16c10 <argp_help@@Base+0x84c>
   16bf8:	mov	r0, r4
   16bfc:	mov	r1, #12
   16c00:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   16c04:	cmp	r0, #0
   16c08:	beq	16c38 <argp_help@@Base+0x874>
   16c0c:	ldr	r0, [r4, #28]
   16c10:	movw	r1, #59232	; 0xe760
   16c14:	movt	r1, #1
   16c18:	vldr	d16, [r1]
   16c1c:	movw	r1, #11822	; 0x2e2e
   16c20:	movt	r1, #23854	; 0x5d2e
   16c24:	str	r1, [r0, #8]
   16c28:	vst1.8	{d16}, [r0]
   16c2c:	ldr	r0, [r4, #28]
   16c30:	add	r0, r0, #12
   16c34:	str	r0, [r4, #28]
   16c38:	sub	sp, sp, #8
   16c3c:	str	r4, [sp]
   16c40:	sub	r2, fp, #88	; 0x58
   16c44:	mov	r3, #1
   16c48:	ldr	r0, [fp, #-112]	; 0xffffff90
   16c4c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16c50:	bl	18760 <argp_failure@@Base+0xca4>
   16c54:	add	sp, sp, #8
   16c58:	mov	sl, r0
   16c5c:	ldr	r2, [r4, #24]
   16c60:	ldr	r0, [r4, #28]
   16c64:	ldr	r1, [r4, #16]
   16c68:	sub	r2, r0, r2
   16c6c:	cmp	r2, r1
   16c70:	bls	16c8c <argp_help@@Base+0x8c8>
   16c74:	mov	r0, r4
   16c78:	bl	1bd94 <argp_parse@@Base+0x24cc>
   16c7c:	ldr	r2, [r4, #24]
   16c80:	ldr	r0, [r4, #28]
   16c84:	ldr	r1, [r4, #16]
   16c88:	sub	r2, r0, r2
   16c8c:	cmp	r2, r1
   16c90:	str	r9, [r4, #12]
   16c94:	bls	16ca4 <argp_help@@Base+0x8e0>
   16c98:	mov	r0, r4
   16c9c:	bl	1bd94 <argp_parse@@Base+0x24cc>
   16ca0:	ldr	r0, [r4, #28]
   16ca4:	str	r8, [r4, #4]
   16ca8:	movw	r8, #62840	; 0xf578
   16cac:	ldr	r1, [r4, #32]
   16cb0:	movt	r8, #2
   16cb4:	cmp	r0, r1
   16cb8:	bcc	16cd4 <argp_help@@Base+0x910>
   16cbc:	mov	r0, r4
   16cc0:	mov	r1, #1
   16cc4:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   16cc8:	cmp	r0, #0
   16ccc:	beq	16ce4 <argp_help@@Base+0x920>
   16cd0:	ldr	r0, [r4, #28]
   16cd4:	add	r1, r0, #1
   16cd8:	str	r1, [r4, #28]
   16cdc:	mov	r1, #10
   16ce0:	strb	r1, [r0]
   16ce4:	mov	r7, #0
   16ce8:	cmp	sl, #0
   16cec:	bne	16b20 <argp_help@@Base+0x75c>
   16cf0:	mov	r5, #1
   16cf4:	tst	r6, #16
   16cf8:	beq	16d24 <argp_help@@Base+0x960>
   16cfc:	sub	sp, sp, #8
   16d00:	mov	r0, #1
   16d04:	mov	r2, #0
   16d08:	mov	r3, #0
   16d0c:	stm	sp, {r0, r4}
   16d10:	ldr	r0, [fp, #-112]	; 0xffffff90
   16d14:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16d18:	bl	18a0c <argp_failure@@Base+0xf50>
   16d1c:	add	sp, sp, #8
   16d20:	orr	r5, r0, r5
   16d24:	ldr	r0, [fp, #-108]	; 0xffffff94
   16d28:	tst	r6, #4
   16d2c:	beq	16d50 <argp_help@@Base+0x98c>
   16d30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16d34:	movw	r1, #58508	; 0xe48c
   16d38:	mov	r0, r4
   16d3c:	movt	r1, #1
   16d40:	mov	r3, r2
   16d44:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   16d48:	ldr	r0, [fp, #-108]	; 0xffffff94
   16d4c:	mov	r5, #1
   16d50:	tst	r6, #8
   16d54:	ldrne	r1, [r0, #4]
   16d58:	cmpne	r1, #0
   16d5c:	bne	16e78 <argp_help@@Base+0xab4>
   16d60:	tst	r6, #32
   16d64:	beq	16d90 <argp_help@@Base+0x9cc>
   16d68:	sub	sp, sp, #8
   16d6c:	mov	r0, #0
   16d70:	mov	r2, #1
   16d74:	mov	r3, r5
   16d78:	stm	sp, {r0, r4}
   16d7c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16d80:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16d84:	bl	18a0c <argp_failure@@Base+0xf50>
   16d88:	add	sp, sp, #8
   16d8c:	orr	r5, r0, r5
   16d90:	tst	r6, #64	; 0x40
   16d94:	movwne	r6, #140	; 0x8c
   16d98:	movtne	r6, #3
   16d9c:	ldrne	r0, [r6]
   16da0:	cmpne	r0, #0
   16da4:	beq	16dfc <argp_help@@Base+0xa38>
   16da8:	cmp	r5, #0
   16dac:	beq	16de8 <argp_help@@Base+0xa24>
   16db0:	ldr	r0, [r4, #28]
   16db4:	ldr	r1, [r4, #32]
   16db8:	cmp	r0, r1
   16dbc:	bcc	16dd8 <argp_help@@Base+0xa14>
   16dc0:	mov	r0, r4
   16dc4:	mov	r1, #1
   16dc8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   16dcc:	cmp	r0, #0
   16dd0:	beq	16de8 <argp_help@@Base+0xa24>
   16dd4:	ldr	r0, [r4, #28]
   16dd8:	add	r1, r0, #1
   16ddc:	str	r1, [r4, #28]
   16de0:	mov	r1, #10
   16de4:	strb	r1, [r0]
   16de8:	ldr	r2, [r6]
   16dec:	movw	r1, #58563	; 0xe4c3
   16df0:	mov	r0, r4
   16df4:	movt	r1, #1
   16df8:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   16dfc:	ldr	r0, [fp, #-136]	; 0xffffff78
   16e00:	bl	11b18 <funlockfile@plt>
   16e04:	ldr	r0, [fp, #-108]	; 0xffffff94
   16e08:	cmp	r0, #0
   16e0c:	beq	16e58 <argp_help@@Base+0xa94>
   16e10:	ldr	r0, [r0, #12]
   16e14:	cmp	r0, #0
   16e18:	beq	16e30 <argp_help@@Base+0xa6c>
   16e1c:	ldr	r5, [r0, #24]
   16e20:	bl	1ad78 <argp_parse@@Base+0x14b0>
   16e24:	cmp	r5, #0
   16e28:	mov	r0, r5
   16e2c:	bne	16e1c <argp_help@@Base+0xa58>
   16e30:	ldr	r5, [fp, #-108]	; 0xffffff94
   16e34:	ldr	r0, [r5, #4]
   16e38:	cmp	r0, #0
   16e3c:	beq	16e50 <argp_help@@Base+0xa8c>
   16e40:	ldr	r0, [r5]
   16e44:	bl	1ad78 <argp_parse@@Base+0x14b0>
   16e48:	ldr	r0, [r5, #8]
   16e4c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   16e50:	mov	r0, r5
   16e54:	bl	1ad78 <argp_parse@@Base+0x14b0>
   16e58:	mov	r0, r4
   16e5c:	bl	1bd50 <argp_parse@@Base+0x2488>
   16e60:	sub	sp, fp, #28
   16e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e68:	mov	r5, #0
   16e6c:	tst	r6, #16
   16e70:	bne	16cfc <argp_help@@Base+0x938>
   16e74:	b	16d24 <argp_help@@Base+0x960>
   16e78:	cmp	r5, #0
   16e7c:	str	r6, [fp, #-132]	; 0xffffff7c
   16e80:	beq	16eec <argp_help@@Base+0xb28>
   16e84:	mov	sl, r4
   16e88:	ldr	r0, [sl, #28]!
   16e8c:	mov	r2, sl
   16e90:	ldr	r1, [r2, #4]!
   16e94:	cmp	r0, r1
   16e98:	str	r2, [fp, #-100]	; 0xffffff9c
   16e9c:	bcc	16eb8 <argp_help@@Base+0xaf4>
   16ea0:	mov	r0, r4
   16ea4:	mov	r1, #1
   16ea8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   16eac:	cmp	r0, #0
   16eb0:	beq	16ec8 <argp_help@@Base+0xb04>
   16eb4:	ldr	r0, [sl]
   16eb8:	add	r1, r0, #1
   16ebc:	str	r1, [sl]
   16ec0:	mov	r1, #10
   16ec4:	strb	r1, [r0]
   16ec8:	ldr	r0, [fp, #-108]	; 0xffffff94
   16ecc:	ldr	r1, [r0, #4]
   16ed0:	mov	r0, #0
   16ed4:	str	r0, [fp, #-44]	; 0xffffffd4
   16ed8:	str	r0, [fp, #-48]	; 0xffffffd0
   16edc:	str	r0, [fp, #-40]	; 0xffffffd8
   16ee0:	cmp	r1, #0
   16ee4:	bne	16f08 <argp_help@@Base+0xb44>
   16ee8:	b	17744 <argp_help@@Base+0x1380>
   16eec:	mov	r0, #0
   16ef0:	add	sl, r4, #28
   16ef4:	str	r0, [fp, #-44]	; 0xffffffd4
   16ef8:	str	r0, [fp, #-48]	; 0xffffffd0
   16efc:	str	r0, [fp, #-40]	; 0xffffffd8
   16f00:	add	r0, r4, #32
   16f04:	str	r0, [fp, #-100]	; 0xffffff9c
   16f08:	ldr	r0, [fp, #-108]	; 0xffffff94
   16f0c:	str	r4, [fp, #-92]	; 0xffffffa4
   16f10:	ldr	r6, [r0]
   16f14:	str	r1, [fp, #-116]	; 0xffffff8c
   16f18:	ldr	r1, [r4, #24]
   16f1c:	ldr	r2, [sl]
   16f20:	ldr	r0, [r4, #16]
   16f24:	mov	r5, r4
   16f28:	ldr	r4, [r6]
   16f2c:	ldr	r9, [r6, #8]
   16f30:	sub	r1, r2, r1
   16f34:	cmp	r1, r0
   16f38:	bls	16f44 <argp_help@@Base+0xb80>
   16f3c:	mov	r0, r5
   16f40:	bl	1bd94 <argp_parse@@Base+0x24cc>
   16f44:	mov	r0, #0
   16f48:	mov	r1, #0
   16f4c:	ldr	r7, [r5, #4]
   16f50:	ldr	r3, [r5, #12]
   16f54:	str	r0, [fp, #-128]	; 0xffffff80
   16f58:	sub	r0, fp, #48	; 0x30
   16f5c:	str	r1, [r5, #4]
   16f60:	str	r5, [fp, #-84]	; 0xffffffac
   16f64:	str	r6, [fp, #-88]	; 0xffffffa8
   16f68:	str	r0, [fp, #-80]	; 0xffffffb0
   16f6c:	mov	r0, #1
   16f70:	str	r0, [fp, #-76]	; 0xffffffb4
   16f74:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16f78:	str	r3, [fp, #-120]	; 0xffffff88
   16f7c:	str	r7, [fp, #-124]	; 0xffffff84
   16f80:	str	r0, [fp, #-72]	; 0xffffffb8
   16f84:	ldrb	r0, [r4, #12]
   16f88:	tst	r0, #8
   16f8c:	bne	16fd0 <argp_help@@Base+0xc0c>
   16f90:	ldr	r0, [r6, #4]
   16f94:	cmp	r0, #0
   16f98:	beq	16fd0 <argp_help@@Base+0xc0c>
   16f9c:	add	r1, r4, #12
   16fa0:	ldr	r2, [r1, #-12]
   16fa4:	cmp	r2, #0
   16fa8:	beq	16fb8 <argp_help@@Base+0xbf4>
   16fac:	ldrb	r2, [r1]
   16fb0:	tst	r2, #2
   16fb4:	beq	16fc8 <argp_help@@Base+0xc04>
   16fb8:	add	r1, r1, #24
   16fbc:	subs	r0, r0, #1
   16fc0:	bne	16fa0 <argp_help@@Base+0xbdc>
   16fc4:	b	16fd0 <argp_help@@Base+0xc0c>
   16fc8:	mov	r0, #1
   16fcc:	str	r0, [fp, #-128]	; 0xffffff80
   16fd0:	ldr	r7, [fp, #-92]	; 0xffffffa4
   16fd4:	ldr	r2, [sl]
   16fd8:	ldr	r1, [r7, #24]
   16fdc:	ldr	r0, [r7, #16]
   16fe0:	sub	r1, r2, r1
   16fe4:	movw	r2, #62840	; 0xf578
   16fe8:	movt	r2, #2
   16fec:	cmp	r1, r0
   16ff0:	ldr	r5, [r2, #8]
   16ff4:	bls	17000 <argp_help@@Base+0xc3c>
   16ff8:	mov	r0, r7
   16ffc:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17000:	str	r5, [r7, #12]
   17004:	str	r6, [fp, #-104]	; 0xffffff98
   17008:	ldr	r7, [r6, #4]
   1700c:	cmp	r7, #0
   17010:	beq	1716c <argp_help@@Base+0xda8>
   17014:	add	r6, r4, #12
   17018:	b	1704c <argp_help@@Base+0xc88>
   1701c:	cmp	r2, #0
   17020:	beq	17044 <argp_help@@Base+0xc80>
   17024:	ldrb	r0, [r4, #12]
   17028:	tst	r0, #1
   1702c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17030:	movweq	r1, #58707	; 0xe553
   17034:	movteq	r1, #1
   17038:	movwne	r1, #59203	; 0xe743
   1703c:	movtne	r1, #1
   17040:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   17044:	add	r9, r9, #1
   17048:	b	17160 <argp_help@@Base+0xd9c>
   1704c:	ldr	r5, [r6]
   17050:	tst	r5, #8
   17054:	bne	17160 <argp_help@@Base+0xd9c>
   17058:	mov	r8, sl
   1705c:	ldr	sl, [r6, #-8]
   17060:	sub	r0, sl, #1
   17064:	cmp	r0, #254	; 0xfe
   17068:	bhi	1715c <argp_help@@Base+0xd98>
   1706c:	bl	11bfc <__ctype_b_loc@plt>
   17070:	ldr	r0, [r0]
   17074:	add	r0, r0, sl, lsl #1
   17078:	ldrb	r0, [r0, #1]
   1707c:	tst	r0, #64	; 0x40
   17080:	beq	1715c <argp_help@@Base+0xd98>
   17084:	ldrb	r0, [r9]
   17088:	cmp	sl, r0
   1708c:	bne	1715c <argp_help@@Base+0xd98>
   17090:	tst	r5, #2
   17094:	mov	sl, r8
   17098:	bne	17044 <argp_help@@Base+0xc80>
   1709c:	movw	r0, #62840	; 0xf578
   170a0:	sub	r1, fp, #88	; 0x58
   170a4:	movt	r0, #2
   170a8:	ldr	r0, [r0, #8]
   170ac:	bl	19414 <argp_failure@@Base+0x1958>
   170b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   170b4:	ldr	r0, [sl]
   170b8:	ldr	r1, [r1]
   170bc:	cmp	r0, r1
   170c0:	bcc	170dc <argp_help@@Base+0xd18>
   170c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   170c8:	mov	r1, #1
   170cc:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   170d0:	cmp	r0, #0
   170d4:	beq	170ec <argp_help@@Base+0xd28>
   170d8:	ldr	r0, [sl]
   170dc:	add	r1, r0, #1
   170e0:	str	r1, [sl]
   170e4:	mov	r1, #45	; 0x2d
   170e8:	strb	r1, [r0]
   170ec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   170f0:	ldr	r0, [sl]
   170f4:	ldrb	r5, [r9]
   170f8:	ldr	r1, [r1]
   170fc:	cmp	r0, r1
   17100:	bcc	1711c <argp_help@@Base+0xd58>
   17104:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17108:	mov	r1, #1
   1710c:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   17110:	cmp	r0, #0
   17114:	beq	17128 <argp_help@@Base+0xd64>
   17118:	ldr	r0, [sl]
   1711c:	add	r1, r0, #1
   17120:	str	r1, [sl]
   17124:	strb	r5, [r0]
   17128:	ldr	r0, [fp, #-128]	; 0xffffff80
   1712c:	ldr	r2, [r4, #8]
   17130:	cmp	r0, #0
   17134:	beq	1701c <argp_help@@Base+0xc58>
   17138:	movw	r0, #62840	; 0xf578
   1713c:	movt	r0, #2
   17140:	ldr	r0, [r0]
   17144:	cmp	r0, #0
   17148:	bne	1701c <argp_help@@Base+0xc58>
   1714c:	cmp	r2, #0
   17150:	movne	r0, #1
   17154:	strne	r0, [fp, #-40]	; 0xffffffd8
   17158:	b	17044 <argp_help@@Base+0xc80>
   1715c:	mov	sl, r8
   17160:	add	r6, r6, #24
   17164:	subs	r7, r7, #1
   17168:	bne	1704c <argp_help@@Base+0xc88>
   1716c:	ldrb	r0, [r4, #12]
   17170:	tst	r0, #8
   17174:	bne	17248 <argp_help@@Base+0xe84>
   17178:	ldr	r6, [fp, #-92]	; 0xffffffa4
   1717c:	ldr	r2, [sl]
   17180:	ldr	r1, [r6, #24]
   17184:	ldr	r0, [r6, #16]
   17188:	sub	r1, r2, r1
   1718c:	movw	r2, #62840	; 0xf578
   17190:	movt	r2, #2
   17194:	cmp	r1, r0
   17198:	ldr	r5, [r2, #12]
   1719c:	bls	171a8 <argp_help@@Base+0xde4>
   171a0:	mov	r0, r6
   171a4:	bl	1bd94 <argp_parse@@Base+0x24cc>
   171a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   171ac:	str	r5, [r6, #12]
   171b0:	ldr	r5, [r0, #4]
   171b4:	cmp	r5, #0
   171b8:	beq	17328 <argp_help@@Base+0xf64>
   171bc:	add	r6, r4, #12
   171c0:	ldr	r0, [r6, #-12]
   171c4:	cmp	r0, #0
   171c8:	beq	17238 <argp_help@@Base+0xe74>
   171cc:	ldrb	r0, [r6]
   171d0:	tst	r0, #2
   171d4:	bne	17238 <argp_help@@Base+0xe74>
   171d8:	movw	r0, #62840	; 0xf578
   171dc:	sub	r1, fp, #88	; 0x58
   171e0:	movt	r0, #2
   171e4:	ldr	r0, [r0, #12]
   171e8:	bl	19414 <argp_failure@@Base+0x1958>
   171ec:	ldr	r2, [r6, #-12]
   171f0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   171f4:	movw	r1, #59208	; 0xe748
   171f8:	movt	r1, #1
   171fc:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   17200:	ldr	r2, [r4, #8]
   17204:	cmp	r2, #0
   17208:	beq	17238 <argp_help@@Base+0xe74>
   1720c:	ldrb	r0, [r4, #12]
   17210:	tst	r0, #1
   17214:	bne	17228 <argp_help@@Base+0xe64>
   17218:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1721c:	movw	r1, #59213	; 0xe74d
   17220:	movt	r1, #1
   17224:	b	17234 <argp_help@@Base+0xe70>
   17228:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1722c:	movw	r1, #59217	; 0xe751
   17230:	movt	r1, #1
   17234:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   17238:	add	r6, r6, #24
   1723c:	subs	r5, r5, #1
   17240:	bne	171c0 <argp_help@@Base+0xdfc>
   17244:	b	17328 <argp_help@@Base+0xf64>
   17248:	ldr	r6, [fp, #-92]	; 0xffffffa4
   1724c:	ldr	r2, [sl]
   17250:	ldr	r1, [r6, #24]
   17254:	ldr	r0, [r6, #16]
   17258:	sub	r1, r2, r1
   1725c:	movw	r2, #62840	; 0xf578
   17260:	movt	r2, #2
   17264:	cmp	r1, r0
   17268:	ldr	r5, [r2, #16]
   1726c:	bls	17278 <argp_help@@Base+0xeb4>
   17270:	mov	r0, r6
   17274:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17278:	ldr	r0, [fp, #-104]	; 0xffffff98
   1727c:	str	r5, [r6, #12]
   17280:	ldr	r6, [r0, #4]
   17284:	cmp	r6, #0
   17288:	beq	17328 <argp_help@@Base+0xf64>
   1728c:	add	r9, r4, #12
   17290:	ldr	r0, [r9, #-12]
   17294:	cmp	r0, #0
   17298:	beq	1731c <argp_help@@Base+0xf58>
   1729c:	ldrb	r0, [r9]
   172a0:	tst	r0, #2
   172a4:	bne	1731c <argp_help@@Base+0xf58>
   172a8:	movw	r0, #62840	; 0xf578
   172ac:	sub	r1, fp, #88	; 0x58
   172b0:	movt	r0, #2
   172b4:	ldr	r0, [r0, #16]
   172b8:	bl	19414 <argp_failure@@Base+0x1958>
   172bc:	ldr	r5, [r9, #-12]
   172c0:	mov	r0, r5
   172c4:	bl	11c20 <strlen@plt>
   172c8:	cmp	r0, #0
   172cc:	beq	1731c <argp_help@@Base+0xf58>
   172d0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   172d4:	mov	r7, r0
   172d8:	ldr	r0, [sl]
   172dc:	ldr	r2, [r2]
   172e0:	add	r1, r0, r7
   172e4:	cmp	r1, r2
   172e8:	bls	17304 <argp_help@@Base+0xf40>
   172ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   172f0:	mov	r1, r7
   172f4:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   172f8:	cmp	r0, #0
   172fc:	beq	1731c <argp_help@@Base+0xf58>
   17300:	ldr	r0, [sl]
   17304:	mov	r1, r5
   17308:	mov	r2, r7
   1730c:	bl	11a58 <memcpy@plt>
   17310:	ldr	r0, [sl]
   17314:	add	r0, r0, r7
   17318:	str	r0, [sl]
   1731c:	add	r9, r9, #24
   17320:	subs	r6, r6, #1
   17324:	bne	17290 <argp_help@@Base+0xecc>
   17328:	ldr	r5, [fp, #-92]	; 0xffffffa4
   1732c:	ldr	r2, [sl]
   17330:	ldr	r1, [r5, #24]
   17334:	ldr	r0, [r5, #16]
   17338:	sub	r1, r2, r1
   1733c:	cmp	r1, r0
   17340:	bls	1734c <argp_help@@Base+0xf88>
   17344:	mov	r0, r5
   17348:	bl	1bd94 <argp_parse@@Base+0x24cc>
   1734c:	mov	r0, #0
   17350:	ldr	r6, [fp, #-104]	; 0xffffff98
   17354:	str	r0, [r5, #4]
   17358:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1735c:	cmp	r0, #0
   17360:	beq	173b8 <argp_help@@Base+0xff4>
   17364:	ldrb	r0, [r4, #12]
   17368:	tst	r0, #8
   1736c:	bne	17398 <argp_help@@Base+0xfd4>
   17370:	ldr	r5, [r4, #4]
   17374:	sub	r0, r5, #1
   17378:	cmp	r0, #254	; 0xfe
   1737c:	bhi	17398 <argp_help@@Base+0xfd4>
   17380:	bl	11bfc <__ctype_b_loc@plt>
   17384:	ldr	r0, [r0]
   17388:	add	r0, r0, r5, lsl #1
   1738c:	ldrb	r0, [r0, #1]
   17390:	tst	r0, #64	; 0x40
   17394:	bne	176c4 <argp_help@@Base+0x1300>
   17398:	ldr	r0, [r4]
   1739c:	cmp	r0, #0
   173a0:	bne	176c4 <argp_help@@Base+0x1300>
   173a4:	ldr	r1, [r6, #20]
   173a8:	ldr	r0, [r4, #16]
   173ac:	sub	r2, fp, #88	; 0x58
   173b0:	bl	1961c <argp_failure@@Base+0x1b60>
   173b4:	b	176c0 <argp_help@@Base+0x12fc>
   173b8:	ldr	r6, [r6, #20]
   173bc:	ldr	r7, [r4, #16]
   173c0:	cmp	r6, #0
   173c4:	mov	r9, r7
   173c8:	beq	17404 <argp_help@@Base+0x1040>
   173cc:	ldr	r0, [r6, #20]
   173d0:	mov	r9, r7
   173d4:	cmp	r0, #0
   173d8:	beq	17404 <argp_help@@Base+0x1040>
   173dc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   173e0:	ldr	r4, [r4, #4]
   173e4:	mov	r0, r6
   173e8:	bl	1a504 <argp_parse@@Base+0xc3c>
   173ec:	ldr	r3, [r6, #20]
   173f0:	mov	r2, r0
   173f4:	mov	r0, r4
   173f8:	mov	r1, r7
   173fc:	blx	r3
   17400:	mov	r9, r0
   17404:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17408:	movw	r5, #62840	; 0xf578
   1740c:	cmp	r9, #0
   17410:	movt	r5, #2
   17414:	beq	1765c <argp_help@@Base+0x1298>
   17418:	ldrb	r0, [r9]
   1741c:	cmp	r0, #0
   17420:	beq	1764c <argp_help@@Base+0x1288>
   17424:	ldr	r1, [r4, #24]
   17428:	ldr	r2, [sl]
   1742c:	ldr	r0, [r4, #16]
   17430:	str	r7, [fp, #-128]	; 0xffffff80
   17434:	sub	r1, r2, r1
   17438:	cmp	r1, r0
   1743c:	bls	17458 <argp_help@@Base+0x1094>
   17440:	mov	r0, r4
   17444:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17448:	ldr	r1, [r4, #24]
   1744c:	ldr	r2, [sl]
   17450:	ldr	r0, [r4, #16]
   17454:	sub	r1, r2, r1
   17458:	ldr	r5, [r5, #20]
   1745c:	ldr	r8, [r4, #20]
   17460:	cmp	r1, r0
   17464:	mov	r6, r5
   17468:	bls	17490 <argp_help@@Base+0x10cc>
   1746c:	mov	r0, r4
   17470:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17474:	ldr	r1, [r4, #24]
   17478:	ldr	r2, [sl]
   1747c:	ldr	r0, [r4, #16]
   17480:	sub	r1, r2, r1
   17484:	movw	r2, #62840	; 0xf578
   17488:	movt	r2, #2
   1748c:	ldr	r6, [r2, #20]
   17490:	bic	r7, r8, r8, asr #31
   17494:	movw	r8, #62840	; 0xf578
   17498:	str	r5, [r4, #4]
   1749c:	cmp	r1, r0
   174a0:	mov	r5, r6
   174a4:	movt	r8, #2
   174a8:	bls	174b8 <argp_help@@Base+0x10f4>
   174ac:	mov	r0, r4
   174b0:	bl	1bd94 <argp_parse@@Base+0x24cc>
   174b4:	ldr	r5, [r8, #20]
   174b8:	add	r0, r5, #3
   174bc:	str	r6, [r4, #12]
   174c0:	cmp	r7, r0
   174c4:	bls	1750c <argp_help@@Base+0x1148>
   174c8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   174cc:	ldr	r0, [sl]
   174d0:	ldr	r7, [fp, #-128]	; 0xffffff80
   174d4:	ldr	r1, [r1]
   174d8:	cmp	r0, r1
   174dc:	bcc	174f8 <argp_help@@Base+0x1134>
   174e0:	mov	r0, r4
   174e4:	mov	r1, #1
   174e8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   174ec:	cmp	r0, #0
   174f0:	beq	175f0 <argp_help@@Base+0x122c>
   174f4:	ldr	r0, [sl]
   174f8:	add	r1, r0, #1
   174fc:	str	r1, [sl]
   17500:	mov	r1, #10
   17504:	strb	r1, [r0]
   17508:	b	175f0 <argp_help@@Base+0x122c>
   1750c:	cmp	r7, r5
   17510:	bcs	175a0 <argp_help@@Base+0x11dc>
   17514:	ldr	r1, [r4, #24]
   17518:	ldr	r2, [sl]
   1751c:	ldr	r0, [r4, #16]
   17520:	sub	r1, r2, r1
   17524:	cmp	r1, r0
   17528:	bls	17534 <argp_help@@Base+0x1170>
   1752c:	mov	r0, r4
   17530:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17534:	ldr	r0, [r4, #20]
   17538:	ldr	r7, [fp, #-128]	; 0xffffff80
   1753c:	bic	r0, r0, r0, asr #31
   17540:	sub	r1, r5, r0
   17544:	cmp	r1, #1
   17548:	blt	175f0 <argp_help@@Base+0x122c>
   1754c:	add	r1, r5, #1
   17550:	sub	r6, r1, r0
   17554:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17558:	ldr	r0, [sl]
   1755c:	ldr	r1, [r1]
   17560:	cmp	r0, r1
   17564:	bcc	17580 <argp_help@@Base+0x11bc>
   17568:	mov	r0, r4
   1756c:	mov	r1, #1
   17570:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   17574:	cmp	r0, #0
   17578:	beq	17590 <argp_help@@Base+0x11cc>
   1757c:	ldr	r0, [sl]
   17580:	add	r1, r0, #1
   17584:	str	r1, [sl]
   17588:	mov	r1, #32
   1758c:	strb	r1, [r0]
   17590:	sub	r6, r6, #1
   17594:	cmp	r6, #1
   17598:	bgt	17554 <argp_help@@Base+0x1190>
   1759c:	b	175f0 <argp_help@@Base+0x122c>
   175a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   175a4:	ldr	r7, [fp, #-128]	; 0xffffff80
   175a8:	ldr	r1, [r0]
   175ac:	ldr	r0, [sl]
   175b0:	add	r2, r0, #3
   175b4:	cmp	r2, r1
   175b8:	bls	175d4 <argp_help@@Base+0x1210>
   175bc:	mov	r0, r4
   175c0:	mov	r1, #3
   175c4:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   175c8:	cmp	r0, #0
   175cc:	beq	175f0 <argp_help@@Base+0x122c>
   175d0:	ldr	r0, [sl]
   175d4:	mov	r1, #32
   175d8:	strb	r1, [r0, #2]
   175dc:	movw	r1, #8224	; 0x2020
   175e0:	strh	r1, [r0]
   175e4:	ldr	r0, [sl]
   175e8:	add	r0, r0, #3
   175ec:	str	r0, [sl]
   175f0:	mov	r0, r9
   175f4:	bl	11c20 <strlen@plt>
   175f8:	cmp	r0, #0
   175fc:	beq	1764c <argp_help@@Base+0x1288>
   17600:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17604:	mov	r6, r0
   17608:	ldr	r0, [sl]
   1760c:	ldr	r2, [r2]
   17610:	add	r1, r0, r6
   17614:	cmp	r1, r2
   17618:	bls	17634 <argp_help@@Base+0x1270>
   1761c:	mov	r0, r4
   17620:	mov	r1, r6
   17624:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   17628:	cmp	r0, #0
   1762c:	beq	1764c <argp_help@@Base+0x1288>
   17630:	ldr	r0, [sl]
   17634:	mov	r1, r9
   17638:	mov	r2, r6
   1763c:	bl	11a58 <memcpy@plt>
   17640:	ldr	r0, [sl]
   17644:	add	r0, r0, r6
   17648:	str	r0, [sl]
   1764c:	cmp	r9, r7
   17650:	beq	1765c <argp_help@@Base+0x1298>
   17654:	mov	r0, r9
   17658:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1765c:	ldr	r2, [r4, #24]
   17660:	ldr	r0, [sl]
   17664:	ldr	r1, [r4, #16]
   17668:	sub	r2, r0, r2
   1766c:	cmp	r2, r1
   17670:	bls	17680 <argp_help@@Base+0x12bc>
   17674:	mov	r0, r4
   17678:	bl	1bd94 <argp_parse@@Base+0x24cc>
   1767c:	ldr	r0, [r4, #28]
   17680:	mov	r1, #0
   17684:	ldr	r6, [fp, #-104]	; 0xffffff98
   17688:	str	r1, [r4, #4]
   1768c:	ldr	r1, [r4, #32]
   17690:	cmp	r0, r1
   17694:	bcc	176b0 <argp_help@@Base+0x12ec>
   17698:	mov	r0, r4
   1769c:	mov	r1, #1
   176a0:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   176a4:	cmp	r0, #0
   176a8:	beq	176c0 <argp_help@@Base+0x12fc>
   176ac:	ldr	r0, [sl]
   176b0:	add	r1, r0, #1
   176b4:	str	r1, [sl]
   176b8:	mov	r1, #10
   176bc:	strb	r1, [r0]
   176c0:	str	r6, [fp, #-48]	; 0xffffffd0
   176c4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   176c8:	ldr	r2, [sl]
   176cc:	ldr	r1, [r4, #24]
   176d0:	ldr	r0, [r4, #16]
   176d4:	sub	r1, r2, r1
   176d8:	cmp	r1, r0
   176dc:	bls	176f8 <argp_help@@Base+0x1334>
   176e0:	mov	r0, r4
   176e4:	bl	1bd94 <argp_parse@@Base+0x24cc>
   176e8:	ldr	r1, [r4, #24]
   176ec:	ldr	r2, [sl]
   176f0:	ldr	r0, [r4, #16]
   176f4:	sub	r1, r2, r1
   176f8:	ldr	r2, [fp, #-124]	; 0xffffff84
   176fc:	ldr	r5, [fp, #-120]	; 0xffffff88
   17700:	cmp	r1, r0
   17704:	str	r2, [r4, #4]
   17708:	bls	17714 <argp_help@@Base+0x1350>
   1770c:	mov	r0, r4
   17710:	bl	1bd94 <argp_parse@@Base+0x24cc>
   17714:	ldr	r1, [fp, #-116]	; 0xffffff8c
   17718:	add	r6, r6, #28
   1771c:	str	r5, [r4, #12]
   17720:	subs	r1, r1, #1
   17724:	bne	16f14 <argp_help@@Base+0xb50>
   17728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1772c:	cmp	r0, #0
   17730:	movw	r0, #62840	; 0xf578
   17734:	movt	r0, #2
   17738:	ldrne	r0, [r0, #4]
   1773c:	cmpne	r0, #0
   17740:	bne	17758 <argp_help@@Base+0x1394>
   17744:	ldr	r6, [fp, #-132]	; 0xffffff7c
   17748:	mov	r5, #1
   1774c:	tst	r6, #32
   17750:	bne	16d68 <argp_help@@Base+0x9a4>
   17754:	b	16d90 <argp_help@@Base+0x9cc>
   17758:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1775c:	movw	r5, #59087	; 0xe6cf
   17760:	movt	r5, #1
   17764:	cmp	r0, #0
   17768:	beq	17780 <argp_help@@Base+0x13bc>
   1776c:	ldr	r6, [r0]
   17770:	cmp	r6, #0
   17774:	ldrne	r0, [r6, #20]
   17778:	cmpne	r0, #0
   1777c:	bne	1787c <argp_help@@Base+0x14b8>
   17780:	ldrb	r0, [r5]
   17784:	cmp	r0, #0
   17788:	beq	17860 <argp_help@@Base+0x149c>
   1778c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17790:	ldr	r0, [sl]
   17794:	ldr	r1, [r1]
   17798:	cmp	r0, r1
   1779c:	bcc	177b8 <argp_help@@Base+0x13f4>
   177a0:	mov	r0, r4
   177a4:	mov	r1, #1
   177a8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   177ac:	cmp	r0, #0
   177b0:	beq	177c8 <argp_help@@Base+0x1404>
   177b4:	ldr	r0, [sl]
   177b8:	add	r1, r0, #1
   177bc:	str	r1, [sl]
   177c0:	mov	r1, #10
   177c4:	strb	r1, [r0]
   177c8:	mov	r0, r5
   177cc:	bl	11c20 <strlen@plt>
   177d0:	cmp	r0, #0
   177d4:	beq	17824 <argp_help@@Base+0x1460>
   177d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   177dc:	mov	r6, r0
   177e0:	ldr	r0, [sl]
   177e4:	ldr	r2, [r2]
   177e8:	add	r1, r0, r6
   177ec:	cmp	r1, r2
   177f0:	bls	1780c <argp_help@@Base+0x1448>
   177f4:	mov	r0, r4
   177f8:	mov	r1, r6
   177fc:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   17800:	cmp	r0, #0
   17804:	beq	17824 <argp_help@@Base+0x1460>
   17808:	ldr	r0, [sl]
   1780c:	mov	r1, r5
   17810:	mov	r2, r6
   17814:	bl	11a58 <memcpy@plt>
   17818:	ldr	r0, [sl]
   1781c:	add	r0, r0, r6
   17820:	str	r0, [sl]
   17824:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17828:	ldr	r0, [sl]
   1782c:	ldr	r1, [r1]
   17830:	cmp	r0, r1
   17834:	bcc	17850 <argp_help@@Base+0x148c>
   17838:	mov	r0, r4
   1783c:	mov	r1, #1
   17840:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   17844:	cmp	r0, #0
   17848:	beq	17860 <argp_help@@Base+0x149c>
   1784c:	ldr	r0, [sl]
   17850:	add	r1, r0, #1
   17854:	str	r1, [sl]
   17858:	mov	r1, #10
   1785c:	strb	r1, [r0]
   17860:	movw	r0, #59087	; 0xe6cf
   17864:	movt	r0, #1
   17868:	cmp	r5, r0
   1786c:	beq	17744 <argp_help@@Base+0x1380>
   17870:	mov	r0, r5
   17874:	bl	1ad78 <argp_parse@@Base+0x14b0>
   17878:	b	17744 <argp_help@@Base+0x1380>
   1787c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17880:	mov	r0, r6
   17884:	bl	1a504 <argp_parse@@Base+0xc3c>
   17888:	ldr	r3, [r6, #20]
   1788c:	movw	r1, #59087	; 0xe6cf
   17890:	mov	r2, r0
   17894:	movw	r0, #5
   17898:	movt	r0, #512	; 0x200
   1789c:	movt	r1, #1
   178a0:	blx	r3
   178a4:	mov	r5, r0
   178a8:	cmp	r0, #0
   178ac:	bne	17780 <argp_help@@Base+0x13bc>
   178b0:	b	17744 <argp_help@@Base+0x1380>
   178b4:	add	r0, r0, #112	; 0x70
   178b8:	b	16928 <argp_help@@Base+0x564>

000178bc <argp_state_help@@Base>:
   178bc:	push	{r4, r5, fp, lr}
   178c0:	add	fp, sp, #8
   178c4:	sub	sp, sp, #8
   178c8:	mov	r4, r2
   178cc:	mov	r2, r1
   178d0:	cmp	r0, #0
   178d4:	beq	17920 <argp_state_help@@Base+0x64>
   178d8:	cmp	r2, #0
   178dc:	beq	17958 <argp_state_help@@Base+0x9c>
   178e0:	ldr	r1, [r0, #16]
   178e4:	mov	r5, r0
   178e8:	ands	r0, r1, #2
   178ec:	bne	17958 <argp_state_help@@Base+0x9c>
   178f0:	ldr	r3, [r5, #40]	; 0x28
   178f4:	ldr	r0, [r5]
   178f8:	and	r1, r1, #64	; 0x40
   178fc:	orr	r4, r4, r1, lsl #1
   17900:	mov	r1, r5
   17904:	str	r3, [sp]
   17908:	mov	r3, r4
   1790c:	bl	163f0 <argp_help@@Base+0x2c>
   17910:	ldrb	r0, [r5, #16]
   17914:	tst	r0, #32
   17918:	beq	17948 <argp_state_help@@Base+0x8c>
   1791c:	b	17958 <argp_state_help@@Base+0x9c>
   17920:	cmp	r2, #0
   17924:	beq	17958 <argp_state_help@@Base+0x9c>
   17928:	movw	r0, #62904	; 0xf5b8
   1792c:	mov	r1, #0
   17930:	mov	r3, r4
   17934:	movt	r0, #2
   17938:	ldr	r0, [r0]
   1793c:	str	r0, [sp]
   17940:	mov	r0, #0
   17944:	bl	163f0 <argp_help@@Base+0x2c>
   17948:	tst	r4, #256	; 0x100
   1794c:	bne	17960 <argp_state_help@@Base+0xa4>
   17950:	tst	r4, #512	; 0x200
   17954:	bne	17970 <argp_state_help@@Base+0xb4>
   17958:	sub	sp, fp, #8
   1795c:	pop	{r4, r5, fp, pc}
   17960:	movw	r0, #62880	; 0xf5a0
   17964:	movt	r0, #2
   17968:	ldr	r0, [r0]
   1796c:	bl	11c14 <exit@plt>
   17970:	mov	r0, #0
   17974:	bl	11c14 <exit@plt>

00017978 <argp_error@@Base>:
   17978:	sub	sp, sp, #8
   1797c:	push	{r4, r5, r6, sl, fp, lr}
   17980:	add	fp, sp, #16
   17984:	sub	sp, sp, #8
   17988:	mov	r6, r1
   1798c:	mov	r4, r0
   17990:	cmp	r0, #0
   17994:	str	r3, [fp, #12]
   17998:	str	r2, [fp, #8]
   1799c:	beq	179b4 <argp_error@@Base+0x3c>
   179a0:	ldrb	r0, [r4, #16]
   179a4:	tst	r0, #2
   179a8:	bne	17a7c <argp_error@@Base+0x104>
   179ac:	add	r0, r4, #44	; 0x2c
   179b0:	b	179bc <argp_error@@Base+0x44>
   179b4:	movw	r0, #62912	; 0xf5c0
   179b8:	movt	r0, #2
   179bc:	ldr	r5, [r0]
   179c0:	cmp	r5, #0
   179c4:	beq	17a7c <argp_error@@Base+0x104>
   179c8:	mov	r0, r5
   179cc:	bl	11d58 <flockfile@plt>
   179d0:	add	r0, fp, #8
   179d4:	cmp	r4, #0
   179d8:	mov	r1, r5
   179dc:	str	r0, [sp, #4]
   179e0:	movw	r0, #62904	; 0xf5b8
   179e4:	movt	r0, #2
   179e8:	addne	r0, r4, #40	; 0x28
   179ec:	ldr	r0, [r0]
   179f0:	bl	11980 <fputs_unlocked@plt>
   179f4:	ldr	r0, [r5, #20]
   179f8:	ldr	r1, [r5, #24]
   179fc:	cmp	r0, r1
   17a00:	bcs	17a8c <argp_error@@Base+0x114>
   17a04:	add	r1, r0, #1
   17a08:	str	r1, [r5, #20]
   17a0c:	mov	r1, #58	; 0x3a
   17a10:	strb	r1, [r0]
   17a14:	ldr	r0, [r5, #20]
   17a18:	ldr	r1, [r5, #24]
   17a1c:	cmp	r0, r1
   17a20:	bcs	17a9c <argp_error@@Base+0x124>
   17a24:	add	r1, r0, #1
   17a28:	str	r1, [r5, #20]
   17a2c:	mov	r1, #32
   17a30:	strb	r1, [r0]
   17a34:	ldr	r2, [sp, #4]
   17a38:	mov	r0, r5
   17a3c:	mov	r1, r6
   17a40:	bl	11d34 <vfprintf@plt>
   17a44:	ldr	r0, [r5, #20]
   17a48:	ldr	r1, [r5, #24]
   17a4c:	cmp	r0, r1
   17a50:	bcs	17aac <argp_error@@Base+0x134>
   17a54:	add	r1, r0, #1
   17a58:	str	r1, [r5, #20]
   17a5c:	mov	r1, #10
   17a60:	strb	r1, [r0]
   17a64:	mov	r0, r4
   17a68:	mov	r1, r5
   17a6c:	mov	r2, #260	; 0x104
   17a70:	bl	178bc <argp_state_help@@Base>
   17a74:	mov	r0, r5
   17a78:	bl	11b18 <funlockfile@plt>
   17a7c:	sub	sp, fp, #16
   17a80:	pop	{r4, r5, r6, sl, fp, lr}
   17a84:	add	sp, sp, #8
   17a88:	bx	lr
   17a8c:	mov	r0, r5
   17a90:	mov	r1, #58	; 0x3a
   17a94:	bl	11cf8 <__overflow@plt>
   17a98:	b	17a14 <argp_error@@Base+0x9c>
   17a9c:	mov	r0, r5
   17aa0:	mov	r1, #32
   17aa4:	bl	11cf8 <__overflow@plt>
   17aa8:	b	17a34 <argp_error@@Base+0xbc>
   17aac:	mov	r0, r5
   17ab0:	mov	r1, #10
   17ab4:	bl	11cf8 <__overflow@plt>
   17ab8:	b	17a64 <argp_error@@Base+0xec>

00017abc <argp_failure@@Base>:
   17abc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17ac0:	add	fp, sp, #24
   17ac4:	sub	sp, sp, #200	; 0xc8
   17ac8:	mov	r4, r3
   17acc:	mov	r9, r2
   17ad0:	mov	r8, r1
   17ad4:	mov	r5, r0
   17ad8:	cmp	r0, #0
   17adc:	beq	17af4 <argp_failure@@Base+0x38>
   17ae0:	ldrb	r0, [r5, #16]
   17ae4:	tst	r0, #2
   17ae8:	bne	17c6c <argp_failure@@Base+0x1b0>
   17aec:	add	r0, r5, #44	; 0x2c
   17af0:	b	17afc <argp_failure@@Base+0x40>
   17af4:	movw	r0, #62912	; 0xf5c0
   17af8:	movt	r0, #2
   17afc:	ldr	r6, [r0]
   17b00:	cmp	r6, #0
   17b04:	beq	17c6c <argp_failure@@Base+0x1b0>
   17b08:	mov	r0, r6
   17b0c:	bl	11d58 <flockfile@plt>
   17b10:	movw	r0, #62904	; 0xf5b8
   17b14:	cmp	r5, #0
   17b18:	mov	r1, r6
   17b1c:	movt	r0, #2
   17b20:	addne	r0, r5, #40	; 0x28
   17b24:	ldr	r0, [r0]
   17b28:	bl	11980 <fputs_unlocked@plt>
   17b2c:	cmp	r4, #0
   17b30:	beq	17b8c <argp_failure@@Base+0xd0>
   17b34:	add	r0, fp, #8
   17b38:	str	r0, [sp]
   17b3c:	ldr	r0, [r6, #20]
   17b40:	ldr	r1, [r6, #24]
   17b44:	cmp	r0, r1
   17b48:	bcs	17c84 <argp_failure@@Base+0x1c8>
   17b4c:	add	r1, r0, #1
   17b50:	str	r1, [r6, #20]
   17b54:	mov	r1, #58	; 0x3a
   17b58:	strb	r1, [r0]
   17b5c:	ldr	r0, [r6, #20]
   17b60:	ldr	r1, [r6, #24]
   17b64:	cmp	r0, r1
   17b68:	bcs	17c94 <argp_failure@@Base+0x1d8>
   17b6c:	add	r1, r0, #1
   17b70:	str	r1, [r6, #20]
   17b74:	mov	r1, #32
   17b78:	strb	r1, [r0]
   17b7c:	ldr	r2, [sp]
   17b80:	mov	r0, r6
   17b84:	mov	r1, r4
   17b88:	bl	11d34 <vfprintf@plt>
   17b8c:	cmp	r9, #0
   17b90:	beq	17c1c <argp_failure@@Base+0x160>
   17b94:	mov	r4, r6
   17b98:	ldr	r0, [r4, #20]!
   17b9c:	mov	r7, r4
   17ba0:	ldr	r1, [r7, #4]!
   17ba4:	cmp	r0, r1
   17ba8:	bcs	17ca4 <argp_failure@@Base+0x1e8>
   17bac:	add	r1, r0, #1
   17bb0:	str	r1, [r4]
   17bb4:	mov	r1, #58	; 0x3a
   17bb8:	strb	r1, [r0]
   17bbc:	ldr	r0, [r4]
   17bc0:	ldr	r1, [r7]
   17bc4:	cmp	r0, r1
   17bc8:	bcs	17cb4 <argp_failure@@Base+0x1f8>
   17bcc:	add	r1, r0, #1
   17bd0:	str	r1, [r4]
   17bd4:	mov	r1, #32
   17bd8:	strb	r1, [r0]
   17bdc:	mov	r1, sp
   17be0:	mov	r0, r9
   17be4:	mov	r2, #200	; 0xc8
   17be8:	bl	11c68 <strerror_r@plt>
   17bec:	cmp	r0, #0
   17bf0:	bne	17c10 <argp_failure@@Base+0x154>
   17bf4:	mov	r0, r9
   17bf8:	bl	11bcc <strerror@plt>
   17bfc:	mov	r1, r0
   17c00:	movw	r0, #58462	; 0xe45e
   17c04:	movt	r0, #1
   17c08:	cmp	r1, #0
   17c0c:	movne	r0, r1
   17c10:	mov	r1, r6
   17c14:	bl	11980 <fputs_unlocked@plt>
   17c18:	b	17c24 <argp_failure@@Base+0x168>
   17c1c:	add	r7, r6, #24
   17c20:	add	r4, r6, #20
   17c24:	ldr	r0, [r4]
   17c28:	ldr	r1, [r7]
   17c2c:	cmp	r0, r1
   17c30:	bcs	17c74 <argp_failure@@Base+0x1b8>
   17c34:	add	r1, r0, #1
   17c38:	str	r1, [r4]
   17c3c:	mov	r1, #10
   17c40:	strb	r1, [r0]
   17c44:	mov	r0, r6
   17c48:	bl	11b18 <funlockfile@plt>
   17c4c:	cmp	r8, #0
   17c50:	beq	17c6c <argp_failure@@Base+0x1b0>
   17c54:	cmp	r5, #0
   17c58:	ldrbne	r0, [r5, #16]
   17c5c:	tstne	r0, #32
   17c60:	bne	17c6c <argp_failure@@Base+0x1b0>
   17c64:	mov	r0, r8
   17c68:	bl	11c14 <exit@plt>
   17c6c:	sub	sp, fp, #24
   17c70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17c74:	mov	r0, r6
   17c78:	mov	r1, #10
   17c7c:	bl	11cf8 <__overflow@plt>
   17c80:	b	17c44 <argp_failure@@Base+0x188>
   17c84:	mov	r0, r6
   17c88:	mov	r1, #58	; 0x3a
   17c8c:	bl	11cf8 <__overflow@plt>
   17c90:	b	17b5c <argp_failure@@Base+0xa0>
   17c94:	mov	r0, r6
   17c98:	mov	r1, #32
   17c9c:	bl	11cf8 <__overflow@plt>
   17ca0:	b	17b7c <argp_failure@@Base+0xc0>
   17ca4:	mov	r0, r6
   17ca8:	mov	r1, #58	; 0x3a
   17cac:	bl	11cf8 <__overflow@plt>
   17cb0:	b	17bbc <argp_failure@@Base+0x100>
   17cb4:	mov	r0, r6
   17cb8:	mov	r1, #32
   17cbc:	bl	11cf8 <__overflow@plt>
   17cc0:	b	17bdc <argp_failure@@Base+0x120>
   17cc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17cc8:	add	fp, sp, #28
   17ccc:	sub	sp, sp, #52	; 0x34
   17cd0:	ldr	r4, [r0]
   17cd4:	ldr	r9, [r0, #16]
   17cd8:	mov	r7, r0
   17cdc:	mov	r0, #16
   17ce0:	mov	sl, r1
   17ce4:	bl	1bc4c <argp_parse@@Base+0x2384>
   17ce8:	cmp	r0, #0
   17cec:	beq	182c8 <argp_failure@@Base+0x80c>
   17cf0:	mov	r1, #0
   17cf4:	str	r0, [fp, #-32]	; 0xffffffe0
   17cf8:	cmp	r4, #0
   17cfc:	str	r7, [sp, #40]	; 0x28
   17d00:	str	r1, [r0, #12]!
   17d04:	str	r0, [sp, #20]
   17d08:	str	r1, [r0, #-8]
   17d0c:	beq	17f5c <argp_failure@@Base+0x4a0>
   17d10:	ldrb	r0, [r4, #12]
   17d14:	tst	r0, #4
   17d18:	bne	182e8 <argp_failure@@Base+0x82c>
   17d1c:	add	r5, r4, #12
   17d20:	mov	r6, #0
   17d24:	mov	r8, #0
   17d28:	b	17d30 <argp_failure@@Base+0x274>
   17d2c:	add	r5, r5, #24
   17d30:	ldr	r7, [r5, #-8]
   17d34:	cmp	r7, #0
   17d38:	bne	17d60 <argp_failure@@Base+0x2a4>
   17d3c:	ldr	r0, [r5, #-12]
   17d40:	cmp	r0, #0
   17d44:	bne	17d60 <argp_failure@@Base+0x2a4>
   17d48:	ldr	r0, [r5, #4]
   17d4c:	cmp	r0, #0
   17d50:	bne	17d60 <argp_failure@@Base+0x2a4>
   17d54:	ldr	r0, [r5, #8]
   17d58:	cmp	r0, #0
   17d5c:	beq	17da4 <argp_failure@@Base+0x2e8>
   17d60:	ldr	r0, [r5]
   17d64:	tst	r0, #4
   17d68:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   17d6c:	addeq	r6, r6, #1
   17d70:	streq	r6, [r1, #4]
   17d74:	sub	r1, r7, #1
   17d78:	cmp	r1, #254	; 0xfe
   17d7c:	bhi	17d2c <argp_failure@@Base+0x270>
   17d80:	ands	r0, r0, #8
   17d84:	bne	17d2c <argp_failure@@Base+0x270>
   17d88:	bl	11bfc <__ctype_b_loc@plt>
   17d8c:	ldr	r0, [r0]
   17d90:	add	r0, r0, r7, lsl #1
   17d94:	ldrb	r0, [r0, #1]
   17d98:	tst	r0, #64	; 0x40
   17d9c:	addne	r8, r8, #1
   17da0:	b	17d2c <argp_failure@@Base+0x270>
   17da4:	rsb	r0, r6, r6, lsl #3
   17da8:	lsl	r0, r0, #2
   17dac:	bl	1bc4c <argp_parse@@Base+0x2384>
   17db0:	mov	r5, r0
   17db4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17db8:	str	r5, [r0]
   17dbc:	add	r0, r8, #1
   17dc0:	bl	1bc4c <argp_parse@@Base+0x2384>
   17dc4:	mov	r7, r0
   17dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17dcc:	cmp	r5, #0
   17dd0:	cmpne	r7, #0
   17dd4:	str	r7, [r0, #8]
   17dd8:	bne	17dfc <argp_failure@@Base+0x340>
   17ddc:	movw	r0, #58867	; 0xe5f3
   17de0:	movw	r1, #58775	; 0xe597
   17de4:	movw	r3, #58787	; 0xe5a3
   17de8:	movw	r2, #474	; 0x1da
   17dec:	movt	r0, #1
   17df0:	movt	r1, #1
   17df4:	movt	r3, #1
   17df8:	bl	11e18 <__assert_fail@plt>
   17dfc:	movw	r0, #37450	; 0x924a
   17e00:	str	r9, [sp, #12]
   17e04:	movt	r0, #2340	; 0x924
   17e08:	cmp	r6, r0
   17e0c:	bcs	18308 <argp_failure@@Base+0x84c>
   17e10:	mov	r8, #0
   17e14:	mov	r0, #0
   17e18:	b	17e28 <argp_failure@@Base+0x36c>
   17e1c:	mov	r4, r0
   17e20:	add	r5, r5, #28
   17e24:	mov	r0, r9
   17e28:	ldr	r1, [r4, #4]
   17e2c:	cmp	r1, #0
   17e30:	bne	17e58 <argp_failure@@Base+0x39c>
   17e34:	ldr	r2, [r4]
   17e38:	cmp	r2, #0
   17e3c:	bne	17e58 <argp_failure@@Base+0x39c>
   17e40:	ldr	r2, [r4, #16]
   17e44:	cmp	r2, #0
   17e48:	bne	17e58 <argp_failure@@Base+0x39c>
   17e4c:	ldr	r2, [r4, #20]
   17e50:	cmp	r2, #0
   17e54:	beq	17f4c <argp_failure@@Base+0x490>
   17e58:	stm	r5, {r4, r8}
   17e5c:	str	r7, [r5, #8]
   17e60:	ldr	r9, [r4, #20]
   17e64:	cmp	r9, #0
   17e68:	bne	17e84 <argp_failure@@Base+0x3c8>
   17e6c:	ldr	r2, [r4]
   17e70:	cmp	r2, #0
   17e74:	bne	17e80 <argp_failure@@Base+0x3c4>
   17e78:	cmp	r1, #0
   17e7c:	addeq	r0, r0, #1
   17e80:	mov	r9, r0
   17e84:	ldr	r0, [sp, #40]	; 0x28
   17e88:	mov	r1, #0
   17e8c:	str	r9, [r5, #12]
   17e90:	str	sl, [r5, #16]
   17e94:	str	r0, [r5, #20]
   17e98:	b	17ea4 <argp_failure@@Base+0x3e8>
   17e9c:	ldr	r1, [r5, #4]
   17ea0:	mov	r4, r0
   17ea4:	add	r0, r1, #1
   17ea8:	str	r0, [r5, #4]
   17eac:	ldrb	r0, [r4, #12]
   17eb0:	tst	r0, #8
   17eb4:	bne	17f08 <argp_failure@@Base+0x44c>
   17eb8:	ldr	r6, [r4, #4]
   17ebc:	sub	r0, r6, #1
   17ec0:	cmp	r0, #254	; 0xfe
   17ec4:	bhi	17f08 <argp_failure@@Base+0x44c>
   17ec8:	bl	11bfc <__ctype_b_loc@plt>
   17ecc:	ldr	r0, [r0]
   17ed0:	add	r0, r0, r6, lsl #1
   17ed4:	ldrb	r0, [r0, #1]
   17ed8:	tst	r0, #64	; 0x40
   17edc:	beq	17f08 <argp_failure@@Base+0x44c>
   17ee0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ee4:	ldr	r0, [r0, #8]
   17ee8:	cmp	r0, r7
   17eec:	bcs	17f04 <argp_failure@@Base+0x448>
   17ef0:	ldrb	r1, [r0], #1
   17ef4:	uxtb	r2, r6
   17ef8:	cmp	r1, r2
   17efc:	bne	17ee8 <argp_failure@@Base+0x42c>
   17f00:	b	17f08 <argp_failure@@Base+0x44c>
   17f04:	strb	r6, [r7], #1
   17f08:	ldr	r1, [r4, #28]
   17f0c:	add	r0, r4, #24
   17f10:	cmp	r1, #0
   17f14:	bne	17f3c <argp_failure@@Base+0x480>
   17f18:	ldr	r1, [r0]
   17f1c:	cmp	r1, #0
   17f20:	bne	17f3c <argp_failure@@Base+0x480>
   17f24:	ldr	r1, [r4, #40]	; 0x28
   17f28:	cmp	r1, #0
   17f2c:	bne	17f3c <argp_failure@@Base+0x480>
   17f30:	ldr	r1, [r4, #44]	; 0x2c
   17f34:	cmp	r1, #0
   17f38:	beq	17e1c <argp_failure@@Base+0x360>
   17f3c:	ldrb	r1, [r4, #36]	; 0x24
   17f40:	tst	r1, #4
   17f44:	bne	17e9c <argp_failure@@Base+0x3e0>
   17f48:	b	17e1c <argp_failure@@Base+0x360>
   17f4c:	mov	r0, #0
   17f50:	ldr	r9, [sp, #12]
   17f54:	strb	r0, [r7]
   17f58:	ldr	r7, [sp, #40]	; 0x28
   17f5c:	cmp	r9, #0
   17f60:	ldrne	r0, [r9]
   17f64:	cmpne	r0, #0
   17f68:	bne	17f78 <argp_failure@@Base+0x4bc>
   17f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f70:	sub	sp, fp, #28
   17f74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f78:	str	sl, [sp, #4]
   17f7c:	ldr	r4, [r9, #12]
   17f80:	cmp	r4, #0
   17f84:	beq	17f90 <argp_failure@@Base+0x4d4>
   17f88:	ldr	r5, [r9, #8]
   17f8c:	b	17fa0 <argp_failure@@Base+0x4e4>
   17f90:	ldr	r5, [r9, #8]
   17f94:	mov	r1, sl
   17f98:	cmp	r5, #0
   17f9c:	beq	17ff0 <argp_failure@@Base+0x534>
   17fa0:	ldr	r6, [r7, #16]
   17fa4:	mov	r0, #28
   17fa8:	bl	1bc4c <argp_parse@@Base+0x2384>
   17fac:	mov	r1, r0
   17fb0:	cmp	r0, #0
   17fb4:	beq	17ff0 <argp_failure@@Base+0x534>
   17fb8:	sub	r0, r9, r6
   17fbc:	str	r5, [r1]
   17fc0:	cmp	sl, #0
   17fc4:	asr	r0, r0, #4
   17fc8:	stmib	r1, {r0, r4, sl}
   17fcc:	str	r7, [r1, #16]
   17fd0:	ldr	r3, [sp, #20]
   17fd4:	ldrne	r0, [sl, #20]
   17fd8:	ldr	r2, [r3]
   17fdc:	addne	r0, r0, #1
   17fe0:	str	r1, [r3]
   17fe4:	moveq	r0, #0
   17fe8:	str	r0, [r1, #20]
   17fec:	str	r2, [r1, #24]
   17ff0:	ldr	r0, [r9]
   17ff4:	bl	17cc4 <argp_failure@@Base+0x208>
   17ff8:	ldr	r1, [sp, #20]
   17ffc:	mov	r6, r0
   18000:	ldr	r2, [r1]
   18004:	mov	r0, r1
   18008:	add	r1, r2, #24
   1800c:	cmp	r2, #0
   18010:	bne	18000 <argp_failure@@Base+0x544>
   18014:	ldr	r1, [r6, #12]
   18018:	str	r1, [r0]
   1801c:	mov	r0, #0
   18020:	str	r0, [r6, #12]
   18024:	ldr	r0, [r6, #4]
   18028:	cmp	r0, #0
   1802c:	beq	18290 <argp_failure@@Base+0x7d4>
   18030:	ldr	r5, [fp, #-32]	; 0xffffffe0
   18034:	ldr	r4, [r5, #4]
   18038:	cmp	r4, #0
   1803c:	beq	181ec <argp_failure@@Base+0x730>
   18040:	add	r0, r4, r0
   18044:	str	r0, [sp, #16]
   18048:	rsb	r0, r0, r0, lsl #3
   1804c:	lsl	r0, r0, #2
   18050:	bl	1bc4c <argp_parse@@Base+0x2384>
   18054:	ldr	r8, [r5, #8]
   18058:	str	r0, [sp, #24]
   1805c:	mov	r0, r8
   18060:	bl	11c20 <strlen@plt>
   18064:	mov	r7, r0
   18068:	ldr	r0, [r6, #8]
   1806c:	bl	11c20 <strlen@plt>
   18070:	add	r0, r7, r0
   18074:	str	r7, [sp, #32]
   18078:	add	r0, r0, #1
   1807c:	bl	1bc4c <argp_parse@@Base+0x2384>
   18080:	ldr	r1, [sp, #24]
   18084:	cmp	r1, #0
   18088:	cmpne	r0, #0
   1808c:	beq	182a8 <argp_failure@@Base+0x7ec>
   18090:	ldr	r1, [sp, #16]
   18094:	str	r0, [sp, #36]	; 0x24
   18098:	movw	r0, #37450	; 0x924a
   1809c:	movt	r0, #2340	; 0x924
   180a0:	cmp	r1, r0
   180a4:	bcs	18328 <argp_failure@@Base+0x86c>
   180a8:	ldr	r7, [sp, #24]
   180ac:	ldr	r1, [r5]
   180b0:	rsb	r5, r4, r4, lsl #3
   180b4:	lsl	r2, r5, #2
   180b8:	str	r2, [fp, #-36]	; 0xffffffdc
   180bc:	mov	r0, r7
   180c0:	bl	11a58 <memcpy@plt>
   180c4:	ldm	r6, {r1, r2}
   180c8:	add	r0, r7, r5, lsl #2
   180cc:	rsb	r2, r2, r2, lsl #3
   180d0:	lsl	r2, r2, #2
   180d4:	bl	11a58 <memcpy@plt>
   180d8:	ldr	r5, [sp, #36]	; 0x24
   180dc:	ldr	r2, [sp, #32]
   180e0:	mov	r1, r8
   180e4:	mov	r0, r5
   180e8:	bl	11a58 <memcpy@plt>
   180ec:	add	r0, r7, #8
   180f0:	ldr	r1, [r0]
   180f4:	subs	r4, r4, #1
   180f8:	sub	r1, r1, r8
   180fc:	add	r1, r5, r1
   18100:	str	r1, [r0], #28
   18104:	bne	180f0 <argp_failure@@Base+0x634>
   18108:	ldr	r0, [sp, #32]
   1810c:	ldr	r2, [r6, #4]
   18110:	str	r9, [sp, #12]
   18114:	str	r6, [sp, #8]
   18118:	add	r4, r5, r0
   1811c:	cmp	r2, #0
   18120:	beq	18208 <argp_failure@@Base+0x74c>
   18124:	mov	r0, r6
   18128:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1812c:	ldr	r1, [sp, #24]
   18130:	str	r4, [fp, #-36]	; 0xffffffdc
   18134:	ldr	r7, [r0, #8]
   18138:	add	r6, r1, r3
   1813c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18140:	str	r2, [sp, #28]
   18144:	str	r0, [r6, #8]
   18148:	ldr	r9, [r6, #4]
   1814c:	cmp	r9, #0
   18150:	beq	181d8 <argp_failure@@Base+0x71c>
   18154:	ldr	sl, [r6]
   18158:	ldrb	r0, [sl, #12]
   1815c:	tst	r0, #8
   18160:	bne	181cc <argp_failure@@Base+0x710>
   18164:	ldr	r5, [sl, #4]
   18168:	sub	r0, r5, #1
   1816c:	cmp	r0, #254	; 0xfe
   18170:	bhi	181cc <argp_failure@@Base+0x710>
   18174:	ldrb	r8, [r7]
   18178:	bl	11bfc <__ctype_b_loc@plt>
   1817c:	cmp	r5, r8
   18180:	bne	181cc <argp_failure@@Base+0x710>
   18184:	ldr	r0, [r0]
   18188:	add	r0, r0, r5, lsl #1
   1818c:	ldrh	r0, [r0]
   18190:	ands	r0, r0, #16384	; 0x4000
   18194:	beq	181cc <argp_failure@@Base+0x710>
   18198:	ldr	r0, [sp, #32]
   1819c:	cmp	r0, #1
   181a0:	ldr	r0, [sp, #36]	; 0x24
   181a4:	blt	181bc <argp_failure@@Base+0x700>
   181a8:	ldrb	r1, [r0], #1
   181ac:	cmp	r1, r8
   181b0:	beq	181c8 <argp_failure@@Base+0x70c>
   181b4:	cmp	r0, r4
   181b8:	bcc	181a8 <argp_failure@@Base+0x6ec>
   181bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   181c0:	strb	r8, [r0], #1
   181c4:	str	r0, [fp, #-36]	; 0xffffffdc
   181c8:	add	r7, r7, #1
   181cc:	subs	r9, r9, #1
   181d0:	add	sl, sl, #24
   181d4:	bne	18158 <argp_failure@@Base+0x69c>
   181d8:	ldr	r2, [sp, #28]
   181dc:	add	r6, r6, #28
   181e0:	subs	r2, r2, #1
   181e4:	bne	1813c <argp_failure@@Base+0x680>
   181e8:	b	1820c <argp_failure@@Base+0x750>
   181ec:	ldr	r1, [r6]
   181f0:	ldr	r2, [r6, #8]
   181f4:	str	r1, [r5]
   181f8:	stmib	r5, {r0, r2}
   181fc:	mov	r0, #0
   18200:	str	r0, [r6, #4]
   18204:	b	18290 <argp_failure@@Base+0x7d4>
   18208:	str	r4, [fp, #-36]	; 0xffffffdc
   1820c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18210:	ldr	r4, [fp, #-32]	; 0xffffffe0
   18214:	mov	r0, #0
   18218:	strb	r0, [r1]
   1821c:	ldr	r0, [r4]
   18220:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18224:	ldr	r0, [r4, #8]
   18228:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1822c:	ldr	r0, [sp, #24]
   18230:	ldr	r6, [sp, #8]
   18234:	str	r0, [r4]
   18238:	ldr	r0, [sp, #16]
   1823c:	str	r0, [r4, #4]
   18240:	ldr	r0, [sp, #36]	; 0x24
   18244:	str	r0, [r4, #8]
   18248:	ldr	r0, [r6, #12]
   1824c:	cmp	r0, #0
   18250:	beq	18268 <argp_failure@@Base+0x7ac>
   18254:	ldr	r4, [r0, #24]
   18258:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1825c:	cmp	r4, #0
   18260:	mov	r0, r4
   18264:	bne	18254 <argp_failure@@Base+0x798>
   18268:	ldr	r0, [r6, #4]
   1826c:	ldr	sl, [sp, #4]
   18270:	ldr	r7, [sp, #40]	; 0x28
   18274:	ldr	r9, [sp, #12]
   18278:	cmp	r0, #0
   1827c:	beq	18290 <argp_failure@@Base+0x7d4>
   18280:	ldr	r0, [r6]
   18284:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18288:	ldr	r0, [r6, #8]
   1828c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18290:	mov	r0, r6
   18294:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18298:	ldr	r0, [r9, #16]!
   1829c:	cmp	r0, #0
   182a0:	bne	17f7c <argp_failure@@Base+0x4c0>
   182a4:	b	17f6c <argp_failure@@Base+0x4b0>
   182a8:	movw	r0, #58959	; 0xe64f
   182ac:	movw	r1, #58775	; 0xe597
   182b0:	movw	r3, #58984	; 0xe668
   182b4:	movw	r2, #970	; 0x3ca
   182b8:	movt	r0, #1
   182bc:	movt	r1, #1
   182c0:	movt	r3, #1
   182c4:	bl	11e18 <__assert_fail@plt>
   182c8:	movw	r0, #58771	; 0xe593
   182cc:	movw	r1, #58775	; 0xe597
   182d0:	movw	r3, #58787	; 0xe5a3
   182d4:	movw	r2, #450	; 0x1c2
   182d8:	movt	r0, #1
   182dc:	movt	r1, #1
   182e0:	movt	r3, #1
   182e4:	bl	11e18 <__assert_fail@plt>
   182e8:	movw	r0, #58851	; 0xe5e3
   182ec:	movw	r1, #58775	; 0xe597
   182f0:	movw	r3, #58787	; 0xe5a3
   182f4:	mov	r2, #460	; 0x1cc
   182f8:	movt	r0, #1
   182fc:	movt	r1, #1
   18300:	movt	r3, #1
   18304:	bl	11e18 <__assert_fail@plt>
   18308:	movw	r0, #58902	; 0xe616
   1830c:	movw	r1, #58775	; 0xe597
   18310:	movw	r3, #58787	; 0xe5a3
   18314:	mov	r2, #476	; 0x1dc
   18318:	movt	r0, #1
   1831c:	movt	r1, #1
   18320:	movt	r3, #1
   18324:	bl	11e18 <__assert_fail@plt>
   18328:	movw	r0, #58907	; 0xe61b
   1832c:	movw	r1, #58775	; 0xe597
   18330:	movw	r3, #58984	; 0xe668
   18334:	mov	r2, #972	; 0x3cc
   18338:	movt	r0, #1
   1833c:	movt	r1, #1
   18340:	movt	r3, #1
   18344:	bl	11e18 <__assert_fail@plt>
   18348:	push	{r4, r5, fp, lr}
   1834c:	add	fp, sp, #8
   18350:	mov	r1, r0
   18354:	ldr	r0, [r0, #8]
   18358:	ldr	r5, [r1, #16]
   1835c:	cmp	r0, #0
   18360:	beq	1837c <argp_failure@@Base+0x8c0>
   18364:	mov	r1, #10
   18368:	bl	11c38 <strchr@plt>
   1836c:	mov	r4, r0
   18370:	cmp	r0, #0
   18374:	movwne	r4, #1
   18378:	b	18380 <argp_failure@@Base+0x8c4>
   1837c:	mov	r4, #0
   18380:	cmp	r5, #0
   18384:	ldrne	r0, [r5]
   18388:	cmpne	r0, #0
   1838c:	beq	183a8 <argp_failure@@Base+0x8ec>
   18390:	add	r5, r5, #16
   18394:	bl	18348 <argp_failure@@Base+0x88c>
   18398:	add	r4, r0, r4
   1839c:	ldr	r0, [r5], #16
   183a0:	cmp	r0, #0
   183a4:	bne	18394 <argp_failure@@Base+0x8d8>
   183a8:	mov	r0, r4
   183ac:	pop	{r4, r5, fp, pc}
   183b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183b4:	add	fp, sp, #28
   183b8:	sub	sp, sp, #28
   183bc:	ldr	r4, [r0, #4]
   183c0:	str	r1, [fp, #-40]	; 0xffffffd8
   183c4:	cmp	r4, #0
   183c8:	beq	18758 <argp_failure@@Base+0xc9c>
   183cc:	mov	r5, r0
   183d0:	ldr	r0, [r0, #8]
   183d4:	bl	11c20 <strlen@plt>
   183d8:	add	r0, r0, #8
   183dc:	bic	r0, r0, #7
   183e0:	sub	r0, sp, r0
   183e4:	mov	sp, r0
   183e8:	ldr	r7, [r5]
   183ec:	str	r0, [fp, #-52]	; 0xffffffcc
   183f0:	str	r0, [fp, #-48]	; 0xffffffd0
   183f4:	str	r5, [fp, #-44]	; 0xffffffd4
   183f8:	ldr	r6, [r7, #4]
   183fc:	str	r4, [fp, #-36]	; 0xffffffdc
   18400:	cmp	r6, #0
   18404:	beq	184a8 <argp_failure@@Base+0x9ec>
   18408:	ldr	r4, [r7]
   1840c:	ldr	r5, [r7, #8]
   18410:	mov	sl, r4
   18414:	b	18440 <argp_failure@@Base+0x984>
   18418:	ldr	r0, [r4, #8]
   1841c:	cmp	r0, #0
   18420:	bne	18498 <argp_failure@@Base+0x9dc>
   18424:	ldr	r0, [r4, #12]
   18428:	orr	r0, r0, r8
   1842c:	tst	r0, #16
   18430:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   18434:	strbeq	r9, [r0], #1
   18438:	streq	r0, [fp, #-48]	; 0xffffffd0
   1843c:	b	18498 <argp_failure@@Base+0x9dc>
   18440:	ldr	r8, [sl, #12]
   18444:	tst	r8, #8
   18448:	bne	1849c <argp_failure@@Base+0x9e0>
   1844c:	ldr	r9, [sl, #4]
   18450:	sub	r0, r9, #1
   18454:	cmp	r0, #254	; 0xfe
   18458:	bhi	1849c <argp_failure@@Base+0x9e0>
   1845c:	bl	11bfc <__ctype_b_loc@plt>
   18460:	ldr	r0, [r0]
   18464:	add	r0, r0, r9, lsl #1
   18468:	ldrb	r0, [r0, #1]
   1846c:	tst	r0, #64	; 0x40
   18470:	beq	1849c <argp_failure@@Base+0x9e0>
   18474:	ldrb	r0, [r5]
   18478:	cmp	r9, r0
   1847c:	bne	1849c <argp_failure@@Base+0x9e0>
   18480:	tst	r8, #4
   18484:	moveq	r4, sl
   18488:	tst	r8, #2
   1848c:	ldreq	r0, [sl, #8]
   18490:	cmpeq	r0, #0
   18494:	beq	18418 <argp_failure@@Base+0x95c>
   18498:	add	r5, r5, #1
   1849c:	subs	r6, r6, #1
   184a0:	add	sl, sl, #24
   184a4:	bne	18440 <argp_failure@@Base+0x984>
   184a8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   184ac:	ldr	r6, [fp, #-44]	; 0xffffffd4
   184b0:	add	r7, r7, #28
   184b4:	subs	r4, r4, #1
   184b8:	bne	183f8 <argp_failure@@Base+0x93c>
   184bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   184c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   184c4:	cmp	r1, r2
   184c8:	bls	184e4 <argp_failure@@Base+0xa28>
   184cc:	mov	r0, #0
   184d0:	strb	r0, [r1]
   184d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   184d8:	movw	r1, #59028	; 0xe694
   184dc:	movt	r1, #1
   184e0:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   184e4:	ldr	r5, [r6, #4]
   184e8:	cmp	r5, #0
   184ec:	beq	18758 <argp_failure@@Base+0xc9c>
   184f0:	ldr	r8, [r6]
   184f4:	ldr	r9, [r8, #4]
   184f8:	cmp	r9, #0
   184fc:	beq	18690 <argp_failure@@Base+0xbd4>
   18500:	ldr	sl, [r8]
   18504:	ldr	r4, [r8, #8]
   18508:	str	sl, [fp, #-36]	; 0xffffffdc
   1850c:	ldr	r6, [sl, #12]
   18510:	tst	r6, #8
   18514:	bne	18684 <argp_failure@@Base+0xbc8>
   18518:	ldr	r7, [sl, #4]
   1851c:	sub	r0, r7, #1
   18520:	cmp	r0, #254	; 0xfe
   18524:	bhi	18684 <argp_failure@@Base+0xbc8>
   18528:	bl	11bfc <__ctype_b_loc@plt>
   1852c:	ldr	r0, [r0]
   18530:	add	r0, r0, r7, lsl #1
   18534:	ldrb	r0, [r0, #1]
   18538:	tst	r0, #64	; 0x40
   1853c:	beq	18684 <argp_failure@@Base+0xbc8>
   18540:	ldrb	r0, [r4]
   18544:	cmp	r7, r0
   18548:	bne	18684 <argp_failure@@Base+0xbc8>
   1854c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18550:	tst	r6, #4
   18554:	moveq	r0, sl
   18558:	tst	r6, #2
   1855c:	str	r0, [fp, #-36]	; 0xffffffdc
   18560:	bne	18680 <argp_failure@@Base+0xbc4>
   18564:	ldr	r3, [sl, #8]
   18568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1856c:	cmp	r3, #0
   18570:	ldr	r0, [r0, #12]
   18574:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   18578:	orr	r0, r0, r6
   1857c:	ldreq	r3, [r1, #8]
   18580:	tst	r0, #16
   18584:	bne	18680 <argp_failure@@Base+0xbc4>
   18588:	cmp	r3, #0
   1858c:	beq	18680 <argp_failure@@Base+0xbc4>
   18590:	tst	r0, #1
   18594:	bne	18620 <argp_failure@@Base+0xb64>
   18598:	mov	r0, r3
   1859c:	str	r3, [fp, #-48]	; 0xffffffd0
   185a0:	bl	11c20 <strlen@plt>
   185a4:	ldr	r7, [fp, #-40]	; 0xffffffd8
   185a8:	add	r6, r0, #6
   185ac:	ldr	r2, [r7, #24]
   185b0:	ldr	r0, [r7, #28]
   185b4:	ldr	r1, [r7, #16]
   185b8:	sub	r2, r0, r2
   185bc:	cmp	r2, r1
   185c0:	bls	185d0 <argp_failure@@Base+0xb14>
   185c4:	mov	r0, r7
   185c8:	bl	1bd94 <argp_parse@@Base+0x24cc>
   185cc:	ldr	r0, [r7, #28]
   185d0:	ldr	r3, [r7, #20]
   185d4:	ldr	r2, [r7, #8]
   185d8:	ldr	r1, [r7, #32]
   185dc:	cmp	r3, #0
   185e0:	addgt	r6, r6, r3
   185e4:	cmp	r6, r2
   185e8:	bcs	18634 <argp_failure@@Base+0xb78>
   185ec:	ldr	r6, [fp, #-48]	; 0xffffffd0
   185f0:	cmp	r0, r1
   185f4:	bcc	18610 <argp_failure@@Base+0xb54>
   185f8:	mov	r0, r7
   185fc:	mov	r1, #1
   18600:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18604:	cmp	r0, #0
   18608:	beq	18668 <argp_failure@@Base+0xbac>
   1860c:	ldr	r0, [r7, #28]
   18610:	add	r1, r0, #1
   18614:	str	r1, [r7, #28]
   18618:	mov	r1, #32
   1861c:	b	18664 <argp_failure@@Base+0xba8>
   18620:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18624:	movw	r1, #59035	; 0xe69b
   18628:	mov	r2, r7
   1862c:	movt	r1, #1
   18630:	b	1867c <argp_failure@@Base+0xbc0>
   18634:	ldr	r6, [fp, #-48]	; 0xffffffd0
   18638:	cmp	r0, r1
   1863c:	bcc	18658 <argp_failure@@Base+0xb9c>
   18640:	mov	r0, r7
   18644:	mov	r1, #1
   18648:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   1864c:	cmp	r0, #0
   18650:	beq	18668 <argp_failure@@Base+0xbac>
   18654:	ldr	r0, [r7, #28]
   18658:	add	r1, r0, #1
   1865c:	str	r1, [r7, #28]
   18660:	mov	r1, #10
   18664:	strb	r1, [r0]
   18668:	ldr	r2, [sl, #4]
   1866c:	movw	r1, #59046	; 0xe6a6
   18670:	mov	r0, r7
   18674:	mov	r3, r6
   18678:	movt	r1, #1
   1867c:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   18680:	add	r4, r4, #1
   18684:	subs	r9, r9, #1
   18688:	add	sl, sl, #24
   1868c:	bne	1850c <argp_failure@@Base+0xa50>
   18690:	subs	r5, r5, #1
   18694:	add	r8, r8, #28
   18698:	bne	184f4 <argp_failure@@Base+0xa38>
   1869c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   186a0:	ldr	r4, [r0, #4]
   186a4:	cmp	r4, #0
   186a8:	beq	18758 <argp_failure@@Base+0xc9c>
   186ac:	ldr	r6, [r0]
   186b0:	movw	sl, #59079	; 0xe6c7
   186b4:	movw	r9, #59055	; 0xe6af
   186b8:	movt	sl, #1
   186bc:	movt	r9, #1
   186c0:	ldr	r7, [r6, #4]
   186c4:	cmp	r7, #0
   186c8:	beq	1874c <argp_failure@@Base+0xc90>
   186cc:	ldr	r8, [r6]
   186d0:	mov	r5, r8
   186d4:	ldr	r2, [r5]
   186d8:	cmp	r2, #0
   186dc:	beq	18740 <argp_failure@@Base+0xc84>
   186e0:	ldr	r0, [r5, #12]
   186e4:	tst	r0, #4
   186e8:	moveq	r8, r5
   186ec:	tst	r0, #2
   186f0:	bne	18740 <argp_failure@@Base+0xc84>
   186f4:	ldr	r3, [r5, #8]
   186f8:	ldr	r1, [r8, #12]
   186fc:	cmp	r3, #0
   18700:	orr	r0, r1, r0
   18704:	ldreq	r3, [r8, #8]
   18708:	tst	r0, #16
   1870c:	bne	18740 <argp_failure@@Base+0xc84>
   18710:	cmp	r3, #0
   18714:	beq	18734 <argp_failure@@Base+0xc78>
   18718:	tst	r0, #1
   1871c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18720:	movne	r1, r9
   18724:	movweq	r1, #59068	; 0xe6bc
   18728:	movteq	r1, #1
   1872c:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   18730:	b	18740 <argp_failure@@Base+0xc84>
   18734:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18738:	mov	r1, sl
   1873c:	bl	1c3e0 <argp_parse@@Base+0x2b18>
   18740:	subs	r7, r7, #1
   18744:	add	r5, r5, #24
   18748:	bne	186d4 <argp_failure@@Base+0xc18>
   1874c:	subs	r4, r4, #1
   18750:	add	r6, r6, #28
   18754:	bne	186c0 <argp_failure@@Base+0xc04>
   18758:	sub	sp, fp, #28
   1875c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18764:	add	fp, sp, #28
   18768:	sub	sp, sp, #28
   1876c:	ldr	r6, [r0, #8]
   18770:	ldr	r5, [r0, #16]
   18774:	ldr	sl, [r2]
   18778:	mov	r4, r3
   1877c:	mov	r9, r2
   18780:	mov	r8, r1
   18784:	mov	r7, r0
   18788:	cmp	r0, #0
   1878c:	mov	r0, r6
   18790:	beq	187c8 <argp_failure@@Base+0xd0c>
   18794:	ldr	r0, [r7, #20]
   18798:	cmp	r0, #0
   1879c:	mov	r0, r6
   187a0:	beq	187c8 <argp_failure@@Base+0xd0c>
   187a4:	mov	r0, r7
   187a8:	mov	r1, r8
   187ac:	bl	1a504 <argp_parse@@Base+0xc3c>
   187b0:	ldr	r3, [r7, #20]
   187b4:	mov	r2, r0
   187b8:	movw	r0, #6
   187bc:	mov	r1, r6
   187c0:	movt	r0, #512	; 0x200
   187c4:	blx	r3
   187c8:	cmp	r0, #0
   187cc:	str	sl, [sp, #24]
   187d0:	beq	18830 <argp_failure@@Base+0xd74>
   187d4:	mov	r1, #10
   187d8:	mov	sl, r0
   187dc:	bl	11a10 <strchrnul@plt>
   187e0:	mov	r7, r0
   187e4:	ldrb	r0, [r0]
   187e8:	cmp	r0, #0
   187ec:	add	r0, sp, #12
   187f0:	stm	r0, {r5, r6, sl}
   187f4:	beq	1883c <argp_failure@@Base+0xd80>
   187f8:	ldr	r0, [sp, #24]
   187fc:	ldrb	r6, [r0]
   18800:	cmp	r6, #0
   18804:	beq	18844 <argp_failure@@Base+0xd88>
   18808:	mov	r5, #0
   1880c:	add	sl, r7, #1
   18810:	mov	r1, #10
   18814:	mov	r0, sl
   18818:	bl	11a10 <strchrnul@plt>
   1881c:	add	r5, r5, #1
   18820:	mov	r7, r0
   18824:	cmp	r5, r6
   18828:	bcc	1880c <argp_failure@@Base+0xd50>
   1882c:	b	18848 <argp_failure@@Base+0xd8c>
   18830:	mov	r7, #0
   18834:	mov	sl, #0
   18838:	b	18978 <argp_failure@@Base+0xebc>
   1883c:	mov	r0, #0
   18840:	b	18858 <argp_failure@@Base+0xd9c>
   18844:	ldr	sl, [sp, #20]
   18848:	ldr	r0, [r9]
   1884c:	add	r0, r0, #1
   18850:	str	r0, [r9]
   18854:	mov	r0, #1
   18858:	ldr	r5, [fp, #8]
   1885c:	str	r0, [sp, #8]
   18860:	add	r0, r7, #1
   18864:	sub	r6, r0, sl
   18868:	ldr	r2, [r5, #24]
   1886c:	ldr	r0, [r5, #28]
   18870:	ldr	r1, [r5, #16]
   18874:	sub	r2, r0, r2
   18878:	cmp	r2, r1
   1887c:	bls	1888c <argp_failure@@Base+0xdd0>
   18880:	mov	r0, r5
   18884:	bl	1bd94 <argp_parse@@Base+0x24cc>
   18888:	ldr	r0, [r5, #28]
   1888c:	ldr	r3, [r5, #20]
   18890:	ldr	r2, [r5, #8]
   18894:	ldr	r1, [r5, #32]
   18898:	cmp	r3, #0
   1889c:	addgt	r6, r6, r3
   188a0:	cmp	r6, r2
   188a4:	bcs	188d8 <argp_failure@@Base+0xe1c>
   188a8:	cmp	r0, r1
   188ac:	bcc	188c8 <argp_failure@@Base+0xe0c>
   188b0:	mov	r0, r5
   188b4:	mov	r1, #1
   188b8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   188bc:	cmp	r0, #0
   188c0:	beq	18908 <argp_failure@@Base+0xe4c>
   188c4:	ldr	r0, [r5, #28]
   188c8:	add	r1, r0, #1
   188cc:	str	r1, [r5, #28]
   188d0:	mov	r1, #32
   188d4:	b	18904 <argp_failure@@Base+0xe48>
   188d8:	cmp	r0, r1
   188dc:	bcc	188f8 <argp_failure@@Base+0xe3c>
   188e0:	mov	r0, r5
   188e4:	mov	r1, #1
   188e8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   188ec:	cmp	r0, #0
   188f0:	beq	18908 <argp_failure@@Base+0xe4c>
   188f4:	ldr	r0, [r5, #28]
   188f8:	add	r1, r0, #1
   188fc:	str	r1, [r5, #28]
   18900:	mov	r1, #10
   18904:	strb	r1, [r0]
   18908:	mov	r6, r5
   1890c:	sub	r5, r7, sl
   18910:	ldr	r0, [r6, #28]
   18914:	ldr	r1, [r6, #32]
   18918:	add	r2, r0, r5
   1891c:	cmp	r2, r1
   18920:	bls	18940 <argp_failure@@Base+0xe84>
   18924:	mov	r0, r6
   18928:	mov	r1, r5
   1892c:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18930:	cmp	r0, #0
   18934:	beq	18958 <argp_failure@@Base+0xe9c>
   18938:	ldr	r6, [fp, #8]
   1893c:	ldr	r0, [r6, #28]
   18940:	mov	r1, sl
   18944:	mov	r2, r5
   18948:	bl	11a58 <memcpy@plt>
   1894c:	ldr	r0, [r6, #28]
   18950:	add	r0, r0, r5
   18954:	str	r0, [r6, #28]
   18958:	ldr	r0, [sp, #16]
   1895c:	ldr	r1, [sp, #20]
   18960:	cmp	r1, r0
   18964:	beq	18970 <argp_failure@@Base+0xeb4>
   18968:	mov	r0, r1
   1896c:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18970:	ldr	r5, [sp, #12]
   18974:	ldr	sl, [sp, #8]
   18978:	cmp	r5, #0
   1897c:	ldrne	r0, [r5]
   18980:	cmpne	r0, #0
   18984:	beq	189bc <argp_failure@@Base+0xf00>
   18988:	add	r6, r5, #16
   1898c:	ldr	r5, [fp, #8]
   18990:	mov	r1, r8
   18994:	mov	r2, r9
   18998:	mov	r3, r4
   1899c:	str	r5, [sp]
   189a0:	bl	18760 <argp_failure@@Base+0xca4>
   189a4:	clz	r1, r0
   189a8:	ldr	r0, [r6], #16
   189ac:	lsr	r4, r1, #5
   189b0:	cmp	r0, #0
   189b4:	bne	18990 <argp_failure@@Base+0xed4>
   189b8:	lsr	r4, r1, #5
   189bc:	cmp	sl, #0
   189c0:	cmpne	r4, #0
   189c4:	bne	189d8 <argp_failure@@Base+0xf1c>
   189c8:	clz	r0, r4
   189cc:	lsr	r0, r0, #5
   189d0:	sub	sp, fp, #28
   189d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189d8:	ldr	r2, [sp, #24]
   189dc:	ldrb	r1, [r7]
   189e0:	ldrb	r0, [r2]
   189e4:	cmp	r1, #0
   189e8:	beq	189fc <argp_failure@@Base+0xf40>
   189ec:	add	r0, r0, #1
   189f0:	mov	r4, #0
   189f4:	strb	r0, [r2]
   189f8:	b	189c8 <argp_failure@@Base+0xf0c>
   189fc:	cmp	r0, #0
   18a00:	movne	r0, #0
   18a04:	strbne	r0, [r2]
   18a08:	b	189c8 <argp_failure@@Base+0xf0c>
   18a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a10:	add	fp, sp, #28
   18a14:	sub	sp, sp, #28
   18a18:	ldr	r7, [r0, #12]
   18a1c:	ldr	r8, [r0, #16]
   18a20:	mov	r6, r0
   18a24:	mov	sl, r3
   18a28:	str	r1, [sp, #24]
   18a2c:	str	r3, [sp, #20]
   18a30:	str	r2, [sp, #16]
   18a34:	cmp	r7, #0
   18a38:	beq	18a80 <argp_failure@@Base+0xfc4>
   18a3c:	mov	r0, #0
   18a40:	mov	r1, #11
   18a44:	mov	r5, r2
   18a48:	str	r0, [sp, #12]
   18a4c:	mov	r0, r7
   18a50:	bl	11c38 <strchr@plt>
   18a54:	cmp	r0, #0
   18a58:	mov	r9, r0
   18a5c:	mov	r4, r0
   18a60:	subne	r9, r9, r7
   18a64:	cmp	r5, #0
   18a68:	movne	r9, #0
   18a6c:	cmp	r0, #0
   18a70:	addne	r4, r4, #1
   18a74:	cmp	r5, #0
   18a78:	moveq	r4, r7
   18a7c:	b	18a90 <argp_failure@@Base+0xfd4>
   18a80:	mov	r0, #0
   18a84:	mov	r9, #0
   18a88:	mov	r4, #0
   18a8c:	str	r0, [sp, #12]
   18a90:	ldr	r0, [r6, #20]
   18a94:	movw	r7, #1
   18a98:	mov	r5, r8
   18a9c:	movt	r7, #512	; 0x200
   18aa0:	cmp	r0, #0
   18aa4:	beq	18ba0 <argp_failure@@Base+0x10e4>
   18aa8:	cmp	r9, #0
   18aac:	beq	18ac0 <argp_failure@@Base+0x1004>
   18ab0:	mov	r0, r4
   18ab4:	mov	r1, r9
   18ab8:	bl	11a40 <strndup@plt>
   18abc:	mov	r4, r0
   18ac0:	ldr	r1, [sp, #24]
   18ac4:	mov	r0, r6
   18ac8:	bl	1a504 <argp_parse@@Base+0xc3c>
   18acc:	mov	r2, r0
   18ad0:	ldr	r0, [sp, #16]
   18ad4:	ldr	r3, [r6, #20]
   18ad8:	mov	r1, r4
   18adc:	str	r2, [sp, #12]
   18ae0:	cmp	r0, #0
   18ae4:	mov	r0, r7
   18ae8:	addne	r0, r0, #1
   18aec:	blx	r3
   18af0:	mov	r8, r0
   18af4:	cmp	r8, #0
   18af8:	beq	18bac <argp_failure@@Base+0x10f0>
   18afc:	ldr	r0, [sp, #20]
   18b00:	cmp	r0, #0
   18b04:	beq	18b44 <argp_failure@@Base+0x1088>
   18b08:	ldr	r0, [fp, #12]
   18b0c:	ldr	r2, [r0, #28]
   18b10:	ldr	r1, [r0, #32]
   18b14:	cmp	r2, r1
   18b18:	bcc	18b34 <argp_failure@@Base+0x1078>
   18b1c:	mov	r1, #1
   18b20:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18b24:	cmp	r0, #0
   18b28:	beq	18b44 <argp_failure@@Base+0x1088>
   18b2c:	ldr	r0, [fp, #12]
   18b30:	ldr	r2, [r0, #28]
   18b34:	add	r1, r2, #1
   18b38:	str	r1, [r0, #28]
   18b3c:	mov	r1, #10
   18b40:	strb	r1, [r2]
   18b44:	cmp	r9, #0
   18b48:	str	r5, [sp, #8]
   18b4c:	beq	18bbc <argp_failure@@Base+0x1100>
   18b50:	cmp	r8, r4
   18b54:	bne	18bbc <argp_failure@@Base+0x1100>
   18b58:	ldr	r5, [fp, #12]
   18b5c:	ldr	r0, [r5, #28]!
   18b60:	ldr	r2, [r5, #4]
   18b64:	add	r1, r0, r9
   18b68:	cmp	r1, r2
   18b6c:	bls	18b88 <argp_failure@@Base+0x10cc>
   18b70:	ldr	r0, [fp, #12]
   18b74:	mov	r1, r9
   18b78:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18b7c:	cmp	r0, #0
   18b80:	beq	18c1c <argp_failure@@Base+0x1160>
   18b84:	ldr	r0, [r5]
   18b88:	mov	r1, r4
   18b8c:	mov	r2, r9
   18b90:	bl	11a58 <memcpy@plt>
   18b94:	ldr	r0, [r5]
   18b98:	add	r0, r0, r9
   18b9c:	b	18c18 <argp_failure@@Base+0x115c>
   18ba0:	mov	r8, r4
   18ba4:	cmp	r8, #0
   18ba8:	bne	18afc <argp_failure@@Base+0x1040>
   18bac:	mov	sl, #0
   18bb0:	cmp	r9, #0
   18bb4:	bne	18cb4 <argp_failure@@Base+0x11f8>
   18bb8:	b	18ccc <argp_failure@@Base+0x1210>
   18bbc:	mov	r0, r8
   18bc0:	bl	11c20 <strlen@plt>
   18bc4:	ldr	r1, [fp, #12]
   18bc8:	cmp	r0, #0
   18bcc:	add	r5, r1, #28
   18bd0:	beq	18c1c <argp_failure@@Base+0x1160>
   18bd4:	mov	r7, r0
   18bd8:	ldr	r0, [r1, #28]
   18bdc:	ldr	r1, [r1, #32]
   18be0:	add	r2, r0, r7
   18be4:	cmp	r2, r1
   18be8:	bls	18c04 <argp_failure@@Base+0x1148>
   18bec:	ldr	r0, [fp, #12]
   18bf0:	mov	r1, r7
   18bf4:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18bf8:	cmp	r0, #0
   18bfc:	beq	18c1c <argp_failure@@Base+0x1160>
   18c00:	ldr	r0, [r5]
   18c04:	mov	r1, r8
   18c08:	mov	r2, r7
   18c0c:	bl	11a58 <memcpy@plt>
   18c10:	ldr	r0, [r5]
   18c14:	add	r0, r0, r7
   18c18:	str	r0, [r5]
   18c1c:	ldr	r7, [fp, #12]
   18c20:	ldr	r2, [r5]
   18c24:	ldr	r1, [r7, #24]
   18c28:	ldr	r0, [r7, #16]
   18c2c:	sub	r1, r2, r1
   18c30:	cmp	r1, r0
   18c34:	bls	18c40 <argp_failure@@Base+0x1184>
   18c38:	mov	r0, r7
   18c3c:	bl	1bd94 <argp_parse@@Base+0x24cc>
   18c40:	ldr	r1, [r7, #20]
   18c44:	ldr	r0, [r7, #4]
   18c48:	bic	r1, r1, r1, asr #31
   18c4c:	cmp	r1, r0
   18c50:	bls	18c94 <argp_failure@@Base+0x11d8>
   18c54:	ldr	r0, [fp, #12]
   18c58:	mov	r1, r0
   18c5c:	ldr	r0, [r0, #28]
   18c60:	ldr	r1, [r1, #32]
   18c64:	cmp	r0, r1
   18c68:	bcc	18c84 <argp_failure@@Base+0x11c8>
   18c6c:	ldr	r0, [fp, #12]
   18c70:	mov	r1, #1
   18c74:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18c78:	cmp	r0, #0
   18c7c:	beq	18c94 <argp_failure@@Base+0x11d8>
   18c80:	ldr	r0, [r5]
   18c84:	add	r1, r0, #1
   18c88:	str	r1, [r5]
   18c8c:	mov	r1, #10
   18c90:	strb	r1, [r0]
   18c94:	mov	sl, #1
   18c98:	cmp	r8, r4
   18c9c:	beq	18ca8 <argp_failure@@Base+0x11ec>
   18ca0:	mov	r0, r8
   18ca4:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18ca8:	ldr	r5, [sp, #8]
   18cac:	cmp	r9, #0
   18cb0:	beq	18ccc <argp_failure@@Base+0x1210>
   18cb4:	cmp	r4, #0
   18cb8:	ldrne	r0, [r6, #20]
   18cbc:	cmpne	r0, #0
   18cc0:	beq	18ccc <argp_failure@@Base+0x1210>
   18cc4:	mov	r0, r4
   18cc8:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18ccc:	ldr	r7, [sp, #16]
   18cd0:	ldr	r9, [sp, #24]
   18cd4:	ldr	r8, [sp, #20]
   18cd8:	cmp	r7, #0
   18cdc:	beq	18e38 <argp_failure@@Base+0x137c>
   18ce0:	ldr	r3, [r6, #20]
   18ce4:	cmp	r3, #0
   18ce8:	beq	18e38 <argp_failure@@Base+0x137c>
   18cec:	ldr	r2, [sp, #12]
   18cf0:	movw	r0, #1
   18cf4:	mov	r1, #0
   18cf8:	movt	r0, #512	; 0x200
   18cfc:	add	r0, r0, #3
   18d00:	blx	r3
   18d04:	ldr	r6, [fp, #12]
   18d08:	cmp	r0, #0
   18d0c:	beq	18e3c <argp_failure@@Base+0x1380>
   18d10:	mov	r4, r0
   18d14:	orrs	r0, sl, r8
   18d18:	beq	18d54 <argp_failure@@Base+0x1298>
   18d1c:	ldr	r0, [r6, #28]
   18d20:	ldr	r1, [r6, #32]
   18d24:	cmp	r0, r1
   18d28:	bcc	18d44 <argp_failure@@Base+0x1288>
   18d2c:	mov	r0, r6
   18d30:	mov	r1, #1
   18d34:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18d38:	cmp	r0, #0
   18d3c:	beq	18d54 <argp_failure@@Base+0x1298>
   18d40:	ldr	r0, [r6, #28]
   18d44:	add	r1, r0, #1
   18d48:	str	r1, [r6, #28]
   18d4c:	mov	r1, #10
   18d50:	strb	r1, [r0]
   18d54:	mov	r0, r4
   18d58:	mov	sl, r5
   18d5c:	bl	11c20 <strlen@plt>
   18d60:	cmp	r0, #0
   18d64:	beq	18db0 <argp_failure@@Base+0x12f4>
   18d68:	mov	r5, r0
   18d6c:	ldr	r0, [r6, #28]
   18d70:	ldr	r1, [r6, #32]
   18d74:	add	r2, r0, r5
   18d78:	cmp	r2, r1
   18d7c:	bls	18d98 <argp_failure@@Base+0x12dc>
   18d80:	mov	r0, r6
   18d84:	mov	r1, r5
   18d88:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18d8c:	cmp	r0, #0
   18d90:	beq	18db0 <argp_failure@@Base+0x12f4>
   18d94:	ldr	r0, [r6, #28]
   18d98:	mov	r1, r4
   18d9c:	mov	r2, r5
   18da0:	bl	11a58 <memcpy@plt>
   18da4:	ldr	r0, [r6, #28]
   18da8:	add	r0, r0, r5
   18dac:	str	r0, [r6, #28]
   18db0:	mov	r0, r4
   18db4:	bl	1ad78 <argp_parse@@Base+0x14b0>
   18db8:	ldr	r1, [r6, #24]
   18dbc:	ldr	r2, [r6, #28]
   18dc0:	ldr	r0, [r6, #16]
   18dc4:	mov	r5, sl
   18dc8:	sub	r1, r2, r1
   18dcc:	cmp	r1, r0
   18dd0:	bls	18ddc <argp_failure@@Base+0x1320>
   18dd4:	mov	r0, r6
   18dd8:	bl	1bd94 <argp_parse@@Base+0x24cc>
   18ddc:	ldr	r1, [r6, #20]
   18de0:	ldr	r0, [r6, #4]
   18de4:	mov	sl, #1
   18de8:	bic	r1, r1, r1, asr #31
   18dec:	cmp	r1, r0
   18df0:	bls	18e3c <argp_failure@@Base+0x1380>
   18df4:	ldr	r0, [r6, #28]
   18df8:	ldr	r1, [r6, #32]
   18dfc:	cmp	r0, r1
   18e00:	bcc	18e20 <argp_failure@@Base+0x1364>
   18e04:	mov	r0, r6
   18e08:	mov	r1, #1
   18e0c:	mov	sl, #1
   18e10:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   18e14:	cmp	r0, #0
   18e18:	beq	18e3c <argp_failure@@Base+0x1380>
   18e1c:	ldr	r0, [r6, #28]
   18e20:	add	r1, r0, #1
   18e24:	mov	sl, #1
   18e28:	str	r1, [r6, #28]
   18e2c:	mov	r1, #10
   18e30:	strb	r1, [r0]
   18e34:	b	18e3c <argp_failure@@Base+0x1380>
   18e38:	ldr	r6, [fp, #12]
   18e3c:	cmp	r5, #0
   18e40:	ldrne	r0, [r5]
   18e44:	cmpne	r0, #0
   18e48:	bne	18e58 <argp_failure@@Base+0x139c>
   18e4c:	mov	r0, sl
   18e50:	sub	sp, fp, #28
   18e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e58:	ldr	r4, [fp, #8]
   18e5c:	add	r5, r5, #16
   18e60:	cmp	r4, #0
   18e64:	cmpne	sl, #0
   18e68:	bne	18e4c <argp_failure@@Base+0x1390>
   18e6c:	orrs	r3, sl, r8
   18e70:	mov	r1, r9
   18e74:	mov	r2, r7
   18e78:	stm	sp, {r4, r6}
   18e7c:	movwne	r3, #1
   18e80:	bl	18a0c <argp_failure@@Base+0xf50>
   18e84:	orr	sl, r0, sl
   18e88:	ldr	r0, [r5], #16
   18e8c:	cmp	r0, #0
   18e90:	bne	18e60 <argp_failure@@Base+0x13a4>
   18e94:	b	18e4c <argp_failure@@Base+0x1390>
   18e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e9c:	add	fp, sp, #28
   18ea0:	sub	sp, sp, #28
   18ea4:	mov	r7, r0
   18ea8:	ldr	r0, [r0, #16]
   18eac:	mov	r5, r1
   18eb0:	cmp	r0, #0
   18eb4:	beq	18ed4 <argp_failure@@Base+0x1418>
   18eb8:	mov	r2, r0
   18ebc:	mov	r1, r2
   18ec0:	ldr	r2, [r2, #12]
   18ec4:	cmp	r2, #0
   18ec8:	bne	18ebc <argp_failure@@Base+0x1400>
   18ecc:	add	r2, r1, #8
   18ed0:	b	18ed8 <argp_failure@@Base+0x141c>
   18ed4:	add	r2, r7, #12
   18ed8:	ldr	r1, [r5, #16]
   18edc:	ldr	r3, [r2]
   18ee0:	cmp	r1, #0
   18ee4:	beq	18f04 <argp_failure@@Base+0x1448>
   18ee8:	mov	r2, r1
   18eec:	mov	r6, r2
   18ef0:	ldr	r2, [r2, #12]
   18ef4:	cmp	r2, #0
   18ef8:	bne	18eec <argp_failure@@Base+0x1430>
   18efc:	add	r2, r6, #8
   18f00:	b	18f08 <argp_failure@@Base+0x144c>
   18f04:	add	r2, r5, #12
   18f08:	ldr	r6, [r2]
   18f0c:	orr	r4, r6, r3
   18f10:	sub	r2, r3, r6
   18f14:	cmn	r4, #1
   18f18:	mov	r4, r2
   18f1c:	suble	r4, r6, r3
   18f20:	and	r3, r6, r3
   18f24:	cmp	r3, #0
   18f28:	movlt	r4, r2
   18f2c:	cmp	r4, #0
   18f30:	bne	18f50 <argp_failure@@Base+0x1494>
   18f34:	cmp	r0, #0
   18f38:	mov	r4, r0
   18f3c:	movwne	r4, #1
   18f40:	cmp	r1, #0
   18f44:	subne	r4, r4, #1
   18f48:	cmp	r4, #0
   18f4c:	beq	18f5c <argp_failure@@Base+0x14a0>
   18f50:	mov	r0, r4
   18f54:	sub	sp, fp, #28
   18f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f5c:	cmp	r0, #0
   18f60:	beq	18fd0 <argp_failure@@Base+0x1514>
   18f64:	ldr	r3, [r1, #20]
   18f68:	ldr	r2, [r0, #20]
   18f6c:	cmp	r2, r3
   18f70:	ble	18f98 <argp_failure@@Base+0x14dc>
   18f74:	ldr	r0, [r0, #12]
   18f78:	ldr	r2, [r0, #20]
   18f7c:	cmp	r2, r3
   18f80:	bgt	18f74 <argp_failure@@Base+0x14b8>
   18f84:	bl	193ac <argp_failure@@Base+0x18f0>
   18f88:	mov	r4, r0
   18f8c:	cmp	r0, #0
   18f90:	movweq	r4, #1
   18f94:	b	18f50 <argp_failure@@Base+0x1494>
   18f98:	bge	18fc0 <argp_failure@@Base+0x1504>
   18f9c:	ldr	r1, [r1, #12]
   18fa0:	ldr	r3, [r1, #20]
   18fa4:	cmp	r2, r3
   18fa8:	blt	18f9c <argp_failure@@Base+0x14e0>
   18fac:	bl	193ac <argp_failure@@Base+0x18f0>
   18fb0:	mov	r4, r0
   18fb4:	cmp	r0, #0
   18fb8:	mvneq	r4, #0
   18fbc:	b	18f50 <argp_failure@@Base+0x1494>
   18fc0:	bl	193ac <argp_failure@@Base+0x18f0>
   18fc4:	mov	r4, r0
   18fc8:	cmp	r0, #0
   18fcc:	bne	18f50 <argp_failure@@Base+0x1494>
   18fd0:	ldr	r0, [r7, #12]
   18fd4:	ldr	r1, [r5, #12]
   18fd8:	orr	r2, r1, r0
   18fdc:	sub	r3, r0, r1
   18fe0:	cmn	r2, #1
   18fe4:	mov	r4, r3
   18fe8:	suble	r4, r1, r0
   18fec:	and	r0, r1, r0
   18ff0:	cmp	r0, #0
   18ff4:	movlt	r4, r3
   18ff8:	cmp	r4, #0
   18ffc:	bne	18f50 <argp_failure@@Base+0x1494>
   19000:	ldr	r3, [r7, #4]
   19004:	mov	sl, #0
   19008:	cmp	r3, #0
   1900c:	beq	19044 <argp_failure@@Base+0x1588>
   19010:	ldr	r0, [r7]
   19014:	mov	r1, r3
   19018:	add	r0, r0, #12
   1901c:	ldr	sl, [r0, #-12]
   19020:	cmp	sl, #0
   19024:	beq	19034 <argp_failure@@Base+0x1578>
   19028:	ldrb	r2, [r0]
   1902c:	tst	r2, #2
   19030:	beq	19044 <argp_failure@@Base+0x1588>
   19034:	add	r0, r0, #24
   19038:	subs	r1, r1, #1
   1903c:	bne	1901c <argp_failure@@Base+0x1560>
   19040:	mov	sl, #0
   19044:	ldr	r8, [r5, #4]
   19048:	cmp	r8, #0
   1904c:	beq	19080 <argp_failure@@Base+0x15c4>
   19050:	ldr	r0, [r5]
   19054:	mov	r1, r8
   19058:	add	r0, r0, #12
   1905c:	ldr	r6, [r0, #-12]
   19060:	cmp	r6, #0
   19064:	beq	19074 <argp_failure@@Base+0x15b8>
   19068:	ldrb	r2, [r0]
   1906c:	tst	r2, #2
   19070:	beq	19084 <argp_failure@@Base+0x15c8>
   19074:	add	r0, r0, #24
   19078:	subs	r1, r1, #1
   1907c:	bne	1905c <argp_failure@@Base+0x15a0>
   19080:	mov	r6, #0
   19084:	ldr	r4, [r7]
   19088:	mov	r9, #0
   1908c:	cmp	sl, #0
   19090:	str	r3, [sp, #20]
   19094:	str	r8, [sp, #16]
   19098:	ldr	r1, [r4, #12]
   1909c:	str	r4, [sp, #4]
   190a0:	beq	19108 <argp_failure@@Base+0x164c>
   190a4:	ands	r0, r1, #8
   190a8:	beq	19108 <argp_failure@@Base+0x164c>
   190ac:	str	r1, [sp, #24]
   190b0:	bl	11bfc <__ctype_b_loc@plt>
   190b4:	ldrb	r1, [sl]
   190b8:	ldr	r0, [r0]
   190bc:	b	190c4 <argp_failure@@Base+0x1608>
   190c0:	ldrb	r1, [sl, #1]!
   190c4:	add	r2, r0, r1, lsl #1
   190c8:	ldrb	r2, [r2, #1]
   190cc:	tst	r2, #32
   190d0:	bne	190c0 <argp_failure@@Base+0x1604>
   190d4:	subs	r4, r1, #45	; 0x2d
   190d8:	movwne	r4, #1
   190dc:	cmp	r1, #0
   190e0:	beq	19100 <argp_failure@@Base+0x1644>
   190e4:	uxtb	r1, r1
   190e8:	ldrb	r1, [r0, r1, lsl #1]
   190ec:	tst	r1, #8
   190f0:	bne	19100 <argp_failure@@Base+0x1644>
   190f4:	ldrb	r1, [sl, #1]!
   190f8:	cmp	r1, #0
   190fc:	bne	190e4 <argp_failure@@Base+0x1628>
   19100:	ldr	r1, [sp, #24]
   19104:	b	1910c <argp_failure@@Base+0x1650>
   19108:	mov	r4, #0
   1910c:	ldr	r0, [r5]
   19110:	cmp	r6, #0
   19114:	str	r0, [sp, #8]
   19118:	ldr	r0, [r0, #12]
   1911c:	str	r0, [sp, #12]
   19120:	andsne	r0, r0, #8
   19124:	beq	19180 <argp_failure@@Base+0x16c4>
   19128:	mov	r8, r1
   1912c:	bl	11bfc <__ctype_b_loc@plt>
   19130:	ldrb	r1, [r6]
   19134:	ldr	r0, [r0]
   19138:	b	19140 <argp_failure@@Base+0x1684>
   1913c:	ldrb	r1, [r6, #1]!
   19140:	add	r2, r0, r1, lsl #1
   19144:	ldrb	r2, [r2, #1]
   19148:	tst	r2, #32
   1914c:	bne	1913c <argp_failure@@Base+0x1680>
   19150:	subs	r9, r1, #45	; 0x2d
   19154:	movwne	r9, #1
   19158:	cmp	r1, #0
   1915c:	beq	1917c <argp_failure@@Base+0x16c0>
   19160:	uxtb	r1, r1
   19164:	ldrb	r1, [r0, r1, lsl #1]
   19168:	tst	r1, #8
   1916c:	bne	1917c <argp_failure@@Base+0x16c0>
   19170:	ldrb	r1, [r6, #1]!
   19174:	cmp	r1, #0
   19178:	bne	19160 <argp_failure@@Base+0x16a4>
   1917c:	mov	r1, r8
   19180:	subs	r4, r4, r9
   19184:	bne	18f50 <argp_failure@@Base+0x1494>
   19188:	ldr	r0, [sp, #20]
   1918c:	mov	r2, #0
   19190:	cmp	r0, #0
   19194:	beq	1922c <argp_failure@@Base+0x1770>
   19198:	rsb	r8, r0, #1
   1919c:	ldr	r0, [sp, #4]
   191a0:	ldr	r4, [r7, #8]
   191a4:	add	r9, r0, #36	; 0x24
   191a8:	tst	r1, #8
   191ac:	beq	191d4 <argp_failure@@Base+0x1718>
   191b0:	mov	r2, #0
   191b4:	cmp	r8, #0
   191b8:	beq	1922c <argp_failure@@Base+0x1770>
   191bc:	cmp	r2, #0
   191c0:	bne	1922c <argp_failure@@Base+0x1770>
   191c4:	ldr	r1, [r9], #24
   191c8:	add	r8, r8, #1
   191cc:	tst	r1, #8
   191d0:	bne	191b0 <argp_failure@@Base+0x16f4>
   191d4:	ldr	r7, [r9, #-32]	; 0xffffffe0
   191d8:	sub	r0, r7, #1
   191dc:	cmp	r0, #254	; 0xfe
   191e0:	bhi	191b0 <argp_failure@@Base+0x16f4>
   191e4:	str	r1, [sp, #24]
   191e8:	bl	11bfc <__ctype_b_loc@plt>
   191ec:	ldr	r0, [r0]
   191f0:	add	r0, r0, r7, lsl #1
   191f4:	ldrb	r0, [r0, #1]
   191f8:	tst	r0, #64	; 0x40
   191fc:	beq	191b0 <argp_failure@@Base+0x16f4>
   19200:	ldrb	r0, [r4]
   19204:	mov	r2, r7
   19208:	cmp	r7, r0
   1920c:	bne	191b0 <argp_failure@@Base+0x16f4>
   19210:	ldr	r0, [sp, #24]
   19214:	add	r4, r4, #1
   19218:	tst	r0, #2
   1921c:	mov	r0, #0
   19220:	movne	r2, r0
   19224:	cmp	r8, #0
   19228:	bne	191bc <argp_failure@@Base+0x1700>
   1922c:	ldr	r3, [sp, #16]
   19230:	mov	r9, #0
   19234:	mov	r0, r2
   19238:	str	r2, [sp, #24]
   1923c:	cmp	r3, #0
   19240:	beq	192e4 <argp_failure@@Base+0x1828>
   19244:	ldr	r0, [sp, #8]
   19248:	ldr	r5, [r5, #8]
   1924c:	ldr	r4, [sp, #12]
   19250:	rsb	r7, r3, #1
   19254:	add	r8, r0, #36	; 0x24
   19258:	tst	r4, #8
   1925c:	beq	1927c <argp_failure@@Base+0x17c0>
   19260:	b	192d0 <argp_failure@@Base+0x1814>
   19264:	ldr	r2, [sp, #24]
   19268:	b	192d0 <argp_failure@@Base+0x1814>
   1926c:	ldr	r4, [r8], #24
   19270:	add	r7, r7, #1
   19274:	tst	r4, #8
   19278:	bne	192d0 <argp_failure@@Base+0x1814>
   1927c:	ldr	r9, [r8, #-32]	; 0xffffffe0
   19280:	sub	r0, r9, #1
   19284:	cmp	r0, #254	; 0xfe
   19288:	bhi	192d0 <argp_failure@@Base+0x1814>
   1928c:	bl	11bfc <__ctype_b_loc@plt>
   19290:	ldr	r0, [r0]
   19294:	add	r0, r0, r9, lsl #1
   19298:	ldrb	r0, [r0, #1]
   1929c:	tst	r0, #64	; 0x40
   192a0:	beq	19264 <argp_failure@@Base+0x17a8>
   192a4:	ldrb	r0, [r5]
   192a8:	ldr	r2, [sp, #24]
   192ac:	cmp	r9, r0
   192b0:	bne	192d0 <argp_failure@@Base+0x1814>
   192b4:	tst	r4, #2
   192b8:	mov	r0, #0
   192bc:	add	r5, r5, #1
   192c0:	movne	r9, r0
   192c4:	cmp	r7, #0
   192c8:	bne	192dc <argp_failure@@Base+0x1820>
   192cc:	b	192e4 <argp_failure@@Base+0x1828>
   192d0:	mov	r9, #0
   192d4:	cmp	r7, #0
   192d8:	beq	192e4 <argp_failure@@Base+0x1828>
   192dc:	cmp	r9, #0
   192e0:	beq	1926c <argp_failure@@Base+0x17b0>
   192e4:	tst	r2, #255	; 0xff
   192e8:	mov	r5, r2
   192ec:	bne	192fc <argp_failure@@Base+0x1840>
   192f0:	cmp	sl, #0
   192f4:	ldrbne	r5, [sl]
   192f8:	moveq	r5, #0
   192fc:	tst	r9, #255	; 0xff
   19300:	mov	r7, r9
   19304:	bne	19314 <argp_failure@@Base+0x1858>
   19308:	cmp	r6, #0
   1930c:	ldrbne	r7, [r6]
   19310:	moveq	r7, #0
   19314:	bl	11bd8 <__ctype_tolower_loc@plt>
   19318:	ldr	r2, [r0]
   1931c:	uxtb	r0, r7
   19320:	uxtb	r1, r5
   19324:	ldr	r3, [r2, r0, lsl #2]
   19328:	ldr	r2, [r2, r1, lsl #2]
   1932c:	subs	r4, r2, r3
   19330:	subseq	r4, r0, r1
   19334:	bne	18f50 <argp_failure@@Base+0x1494>
   19338:	ldr	r0, [sp, #24]
   1933c:	uxtb	r4, r0
   19340:	cmp	r4, #0
   19344:	movwne	r4, #1
   19348:	tst	r9, #255	; 0xff
   1934c:	subne	r4, r4, #1
   19350:	cmp	r4, #0
   19354:	bne	18f50 <argp_failure@@Base+0x1494>
   19358:	ldr	r0, [sp, #24]
   1935c:	tst	r0, #255	; 0xff
   19360:	beq	1936c <argp_failure@@Base+0x18b0>
   19364:	mov	r4, #0
   19368:	b	18f50 <argp_failure@@Base+0x1494>
   1936c:	cmp	sl, #0
   19370:	mov	r4, sl
   19374:	movwne	r4, #1
   19378:	cmp	r6, #0
   1937c:	subne	r4, r4, #1
   19380:	cmp	r4, #0
   19384:	bne	18f50 <argp_failure@@Base+0x1494>
   19388:	cmp	sl, #0
   1938c:	beq	19364 <argp_failure@@Base+0x18a8>
   19390:	mov	r0, sl
   19394:	mov	r1, r6
   19398:	bl	11b0c <strcasecmp@plt>
   1939c:	mov	r4, r0
   193a0:	cmp	r0, #0
   193a4:	moveq	r4, #0
   193a8:	b	18f50 <argp_failure@@Base+0x1494>
   193ac:	push	{r4, r5, fp, lr}
   193b0:	add	fp, sp, #8
   193b4:	mov	r4, r1
   193b8:	mov	r5, r0
   193bc:	ldr	r1, [r1, #12]
   193c0:	ldr	r0, [r0, #12]
   193c4:	cmp	r0, r1
   193c8:	beq	193d8 <argp_failure@@Base+0x191c>
   193cc:	bl	193ac <argp_failure@@Base+0x18f0>
   193d0:	cmp	r0, #0
   193d4:	popne	{r4, r5, fp, pc}
   193d8:	ldr	r1, [r5, #8]
   193dc:	ldr	r2, [r4, #8]
   193e0:	orr	r0, r2, r1
   193e4:	sub	r3, r1, r2
   193e8:	cmn	r0, #1
   193ec:	mov	r0, r3
   193f0:	suble	r0, r2, r1
   193f4:	and	r1, r2, r1
   193f8:	cmp	r1, #0
   193fc:	movlt	r0, r3
   19400:	cmp	r0, #0
   19404:	ldreq	r0, [r5, #4]
   19408:	ldreq	r1, [r4, #4]
   1940c:	subeq	r0, r1, r0
   19410:	pop	{r4, r5, fp, pc}
   19414:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19418:	add	fp, sp, #24
   1941c:	mov	r8, r0
   19420:	ldr	r0, [r1, #12]
   19424:	mov	r5, r1
   19428:	cmp	r0, #0
   1942c:	beq	1947c <argp_failure@@Base+0x19c0>
   19430:	ldr	r1, [r5, #8]
   19434:	ldr	r0, [r5]
   19438:	ldr	r4, [r1]
   1943c:	ldr	r7, [r0, #16]
   19440:	cmp	r4, #0
   19444:	ldrne	r1, [r1, #4]
   19448:	cmpne	r1, #0
   1944c:	bne	19548 <argp_failure@@Base+0x1a8c>
   19450:	cmp	r7, #0
   19454:	beq	1946c <argp_failure@@Base+0x19b0>
   19458:	ldr	r0, [r7]
   1945c:	cmp	r0, #0
   19460:	ldrbne	r1, [r0]
   19464:	cmpne	r1, #0
   19468:	bne	195a0 <argp_failure@@Base+0x1ae4>
   1946c:	mov	r0, #0
   19470:	str	r0, [r5, #12]
   19474:	add	r5, r5, #4
   19478:	b	194c0 <argp_failure@@Base+0x1a04>
   1947c:	ldr	r6, [r5, #4]!
   19480:	ldr	r0, [r6, #28]
   19484:	ldr	r1, [r6, #32]
   19488:	add	r2, r0, #2
   1948c:	cmp	r2, r1
   19490:	bls	194ac <argp_failure@@Base+0x19f0>
   19494:	mov	r0, r6
   19498:	mov	r1, #2
   1949c:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   194a0:	cmp	r0, #0
   194a4:	beq	194c0 <argp_failure@@Base+0x1a04>
   194a8:	ldr	r0, [r6, #28]
   194ac:	movw	r1, #8236	; 0x202c
   194b0:	strh	r1, [r0]
   194b4:	ldr	r0, [r6, #28]
   194b8:	add	r0, r0, #2
   194bc:	str	r0, [r6, #28]
   194c0:	ldr	r5, [r5]
   194c4:	ldr	r1, [r5, #24]
   194c8:	ldr	r2, [r5, #28]
   194cc:	ldr	r0, [r5, #16]
   194d0:	sub	r1, r2, r1
   194d4:	cmp	r1, r0
   194d8:	bls	194e4 <argp_failure@@Base+0x1a28>
   194dc:	mov	r0, r5
   194e0:	bl	1bd94 <argp_parse@@Base+0x24cc>
   194e4:	ldr	r0, [r5, #20]
   194e8:	bic	r0, r0, r0, asr #31
   194ec:	sub	r1, r8, r0
   194f0:	cmp	r1, #1
   194f4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   194f8:	add	r1, r8, #1
   194fc:	mov	r6, #32
   19500:	sub	r4, r1, r0
   19504:	ldr	r0, [r5, #28]
   19508:	ldr	r1, [r5, #32]
   1950c:	cmp	r0, r1
   19510:	bcc	1952c <argp_failure@@Base+0x1a70>
   19514:	mov	r0, r5
   19518:	mov	r1, #1
   1951c:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   19520:	cmp	r0, #0
   19524:	beq	19538 <argp_failure@@Base+0x1a7c>
   19528:	ldr	r0, [r5, #28]
   1952c:	add	r1, r0, #1
   19530:	str	r1, [r5, #28]
   19534:	strb	r6, [r0]
   19538:	sub	r4, r4, #1
   1953c:	cmp	r4, #1
   19540:	bgt	19504 <argp_failure@@Base+0x1a48>
   19544:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19548:	ldr	r1, [r4, #12]
   1954c:	ldr	r0, [r0, #12]
   19550:	cmp	r0, r1
   19554:	beq	19450 <argp_failure@@Base+0x1994>
   19558:	ldr	r6, [r5, #4]
   1955c:	ldr	r0, [r6, #28]
   19560:	ldr	r1, [r6, #32]
   19564:	cmp	r0, r1
   19568:	bcc	19584 <argp_failure@@Base+0x1ac8>
   1956c:	mov	r0, r6
   19570:	mov	r1, #1
   19574:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   19578:	cmp	r0, #0
   1957c:	beq	19450 <argp_failure@@Base+0x1994>
   19580:	ldr	r0, [r6, #28]
   19584:	add	r1, r0, #1
   19588:	str	r1, [r6, #28]
   1958c:	mov	r1, #10
   19590:	strb	r1, [r0]
   19594:	cmp	r7, #0
   19598:	bne	19458 <argp_failure@@Base+0x199c>
   1959c:	b	1946c <argp_failure@@Base+0x19b0>
   195a0:	cmp	r4, #0
   195a4:	beq	195dc <argp_failure@@Base+0x1b20>
   195a8:	ldr	r1, [r4, #16]
   195ac:	cmp	r1, r7
   195b0:	beq	1946c <argp_failure@@Base+0x19b0>
   195b4:	cmp	r1, #0
   195b8:	beq	195d0 <argp_failure@@Base+0x1b14>
   195bc:	ldr	r1, [r1, #12]
   195c0:	cmp	r1, r7
   195c4:	cmpne	r1, #0
   195c8:	bne	195bc <argp_failure@@Base+0x1b00>
   195cc:	b	195d4 <argp_failure@@Base+0x1b18>
   195d0:	mov	r1, #0
   195d4:	cmp	r1, r7
   195d8:	beq	1946c <argp_failure@@Base+0x19b0>
   195dc:	ldr	r1, [r5, #4]
   195e0:	mov	r2, r5
   195e4:	ldr	r4, [r1, #12]
   195e8:	ldr	r1, [r7, #16]
   195ec:	bl	1961c <argp_failure@@Base+0x1b60>
   195f0:	ldr	r6, [r5, #4]
   195f4:	ldr	r1, [r6, #24]
   195f8:	ldr	r2, [r6, #28]
   195fc:	ldr	r0, [r6, #16]
   19600:	sub	r1, r2, r1
   19604:	cmp	r1, r0
   19608:	bls	19614 <argp_failure@@Base+0x1b58>
   1960c:	mov	r0, r6
   19610:	bl	1bd94 <argp_parse@@Base+0x24cc>
   19614:	str	r4, [r6, #12]
   19618:	b	1946c <argp_failure@@Base+0x19b0>
   1961c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19620:	add	fp, sp, #28
   19624:	sub	sp, sp, #4
   19628:	mov	r9, r2
   1962c:	mov	r8, r0
   19630:	cmp	r1, #0
   19634:	mov	r6, r0
   19638:	beq	19678 <argp_failure@@Base+0x1bbc>
   1963c:	ldr	r0, [r1, #20]
   19640:	mov	r4, r1
   19644:	mov	r6, r8
   19648:	cmp	r0, #0
   1964c:	beq	19678 <argp_failure@@Base+0x1bbc>
   19650:	ldr	r1, [r9, #16]
   19654:	mov	r0, r4
   19658:	bl	1a504 <argp_parse@@Base+0xc3c>
   1965c:	ldr	r3, [r4, #20]
   19660:	mov	r2, r0
   19664:	movw	r0, #3
   19668:	mov	r1, r8
   1966c:	movt	r0, #512	; 0x200
   19670:	blx	r3
   19674:	mov	r6, r0
   19678:	cmp	r6, #0
   1967c:	beq	198ac <argp_failure@@Base+0x1df0>
   19680:	ldrb	r0, [r6]
   19684:	cmp	r0, #0
   19688:	beq	198a0 <argp_failure@@Base+0x1de4>
   1968c:	ldr	r0, [r9, #8]
   19690:	ldr	r0, [r0]
   19694:	cmp	r0, #0
   19698:	beq	196d8 <argp_failure@@Base+0x1c1c>
   1969c:	ldr	r4, [r9, #4]
   196a0:	ldr	r0, [r4, #28]
   196a4:	ldr	r1, [r4, #32]
   196a8:	cmp	r0, r1
   196ac:	bcc	196c8 <argp_failure@@Base+0x1c0c>
   196b0:	mov	r0, r4
   196b4:	mov	r1, #1
   196b8:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   196bc:	cmp	r0, #0
   196c0:	beq	196d8 <argp_failure@@Base+0x1c1c>
   196c4:	ldr	r0, [r4, #28]
   196c8:	add	r1, r0, #1
   196cc:	str	r1, [r4, #28]
   196d0:	mov	r1, #10
   196d4:	strb	r1, [r0]
   196d8:	ldr	r7, [r9, #4]
   196dc:	movw	sl, #62840	; 0xf578
   196e0:	movt	sl, #2
   196e4:	ldr	r4, [sl, #24]
   196e8:	ldr	r1, [r7, #24]
   196ec:	ldr	r2, [r7, #28]
   196f0:	ldr	r0, [r7, #16]
   196f4:	sub	r1, r2, r1
   196f8:	cmp	r1, r0
   196fc:	bls	19708 <argp_failure@@Base+0x1c4c>
   19700:	mov	r0, r7
   19704:	bl	1bd94 <argp_parse@@Base+0x24cc>
   19708:	ldr	r0, [r7, #20]
   1970c:	bic	r0, r0, r0, asr #31
   19710:	sub	r1, r4, r0
   19714:	cmp	r1, #1
   19718:	blt	19768 <argp_failure@@Base+0x1cac>
   1971c:	add	r1, r4, #1
   19720:	mov	r5, #32
   19724:	sub	r4, r1, r0
   19728:	ldr	r0, [r7, #28]
   1972c:	ldr	r1, [r7, #32]
   19730:	cmp	r0, r1
   19734:	bcc	19750 <argp_failure@@Base+0x1c94>
   19738:	mov	r0, r7
   1973c:	mov	r1, #1
   19740:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   19744:	cmp	r0, #0
   19748:	beq	1975c <argp_failure@@Base+0x1ca0>
   1974c:	ldr	r0, [r7, #28]
   19750:	add	r1, r0, #1
   19754:	str	r1, [r7, #28]
   19758:	strb	r5, [r0]
   1975c:	sub	r4, r4, #1
   19760:	cmp	r4, #1
   19764:	bgt	19728 <argp_failure@@Base+0x1c6c>
   19768:	ldr	r4, [r9, #4]
   1976c:	ldr	r5, [sl, #24]
   19770:	ldr	r1, [r4, #24]
   19774:	ldr	r2, [r4, #28]
   19778:	ldr	r0, [r4, #16]
   1977c:	mov	r7, r4
   19780:	sub	r1, r2, r1
   19784:	mov	r2, sl
   19788:	mov	sl, r5
   1978c:	cmp	r1, r0
   19790:	bls	197b8 <argp_failure@@Base+0x1cfc>
   19794:	mov	r0, r4
   19798:	mov	r7, r2
   1979c:	bl	1bd94 <argp_parse@@Base+0x24cc>
   197a0:	ldr	sl, [r7, #24]
   197a4:	ldr	r7, [r9, #4]
   197a8:	ldr	r1, [r7, #24]
   197ac:	ldr	r2, [r7, #28]
   197b0:	ldr	r0, [r7, #16]
   197b4:	sub	r1, r2, r1
   197b8:	str	r5, [r4, #4]
   197bc:	cmp	r1, r0
   197c0:	mov	r5, r7
   197c4:	bls	197d4 <argp_failure@@Base+0x1d18>
   197c8:	mov	r0, r7
   197cc:	bl	1bd94 <argp_parse@@Base+0x24cc>
   197d0:	ldr	r5, [r9, #4]
   197d4:	mov	r0, r6
   197d8:	str	sl, [r7, #12]
   197dc:	bl	11c20 <strlen@plt>
   197e0:	cmp	r0, #0
   197e4:	beq	19830 <argp_failure@@Base+0x1d74>
   197e8:	mov	r4, r0
   197ec:	ldr	r0, [r5, #28]
   197f0:	ldr	r1, [r5, #32]
   197f4:	add	r2, r0, r4
   197f8:	cmp	r2, r1
   197fc:	bls	19818 <argp_failure@@Base+0x1d5c>
   19800:	mov	r0, r5
   19804:	mov	r1, r4
   19808:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   1980c:	cmp	r0, #0
   19810:	beq	19830 <argp_failure@@Base+0x1d74>
   19814:	ldr	r0, [r5, #28]
   19818:	mov	r1, r6
   1981c:	mov	r2, r4
   19820:	bl	11a58 <memcpy@plt>
   19824:	ldr	r0, [r5, #28]
   19828:	add	r0, r0, r4
   1982c:	str	r0, [r5, #28]
   19830:	ldr	r4, [r9, #4]
   19834:	mov	r5, r4
   19838:	ldr	r2, [r4, #24]
   1983c:	ldr	r0, [r4, #16]
   19840:	ldr	r1, [r5, #28]!
   19844:	sub	r2, r1, r2
   19848:	cmp	r2, r0
   1984c:	mov	r0, r4
   19850:	bls	19868 <argp_failure@@Base+0x1dac>
   19854:	mov	r0, r4
   19858:	bl	1bd94 <argp_parse@@Base+0x24cc>
   1985c:	ldr	r0, [r9, #4]
   19860:	mov	r5, r0
   19864:	ldr	r1, [r5, #28]!
   19868:	mov	r2, #0
   1986c:	str	r2, [r4, #4]
   19870:	ldr	r2, [r0, #32]
   19874:	cmp	r1, r2
   19878:	bcc	19890 <argp_failure@@Base+0x1dd4>
   1987c:	mov	r1, #1
   19880:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   19884:	cmp	r0, #0
   19888:	beq	198a0 <argp_failure@@Base+0x1de4>
   1988c:	ldr	r1, [r5]
   19890:	add	r0, r1, #1
   19894:	str	r0, [r5]
   19898:	mov	r0, #10
   1989c:	strb	r0, [r1]
   198a0:	ldr	r0, [r9, #8]
   198a4:	mov	r1, #1
   198a8:	str	r1, [r0, #4]
   198ac:	cmp	r6, r8
   198b0:	subeq	sp, fp, #28
   198b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198b8:	mov	r0, r6
   198bc:	sub	sp, fp, #28
   198c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198c4:	b	1ad78 <argp_parse@@Base+0x14b0>

000198c8 <argp_parse@@Base>:
   198c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   198cc:	add	fp, sp, #28
   198d0:	sub	sp, sp, #212	; 0xd4
   198d4:	mov	r5, r3
   198d8:	mov	r6, r2
   198dc:	mov	r7, r1
   198e0:	mov	r4, r0
   198e4:	tst	r3, #1
   198e8:	bne	19924 <argp_parse@@Base+0x5c>
   198ec:	movw	r0, #62908	; 0xf5bc
   198f0:	movw	r8, #62904	; 0xf5b8
   198f4:	movt	r0, #2
   198f8:	movt	r8, #2
   198fc:	ldr	r1, [r0]
   19900:	cmp	r1, #0
   19904:	ldreq	r1, [r6]
   19908:	streq	r1, [r0]
   1990c:	ldr	r0, [r8]
   19910:	cmp	r0, #0
   19914:	bne	19924 <argp_parse@@Base+0x5c>
   19918:	ldr	r0, [r6]
   1991c:	bl	1ab14 <argp_parse@@Base+0x124c>
   19920:	str	r0, [r8]
   19924:	tst	r5, #16
   19928:	str	r6, [fp, #-228]	; 0xffffff1c
   1992c:	bne	199d8 <argp_parse@@Base+0x110>
   19930:	mov	r1, sp
   19934:	sub	r3, r1, #64	; 0x40
   19938:	mov	sp, r3
   1993c:	mov	r2, sp
   19940:	sub	r0, r2, #32
   19944:	mov	sp, r0
   19948:	vmov.i32	q8, #0	; 0x00000000
   1994c:	sub	r2, r2, #20
   19950:	cmp	r4, #0
   19954:	vst1.32	{d16-d17}, [r2]
   19958:	mov	r2, r0
   1995c:	vst1.64	{d16-d17}, [r2]!
   19960:	str	r3, [r2]
   19964:	sub	r2, r1, #32
   19968:	sub	r1, r1, #48	; 0x30
   1996c:	vst1.64	{d16-d17}, [r2]
   19970:	vst1.64	{d16-d17}, [r1]
   19974:	mov	r1, #48	; 0x30
   19978:	mov	r2, r3
   1997c:	vst1.64	{d16-d17}, [r2], r1
   19980:	vst1.64	{d16-d17}, [r2]
   19984:	movw	r2, #59392	; 0xe800
   19988:	strne	r4, [r3], #16
   1998c:	movt	r2, #1
   19990:	mov	r1, r3
   19994:	str	r2, [r1], #16
   19998:	movw	r2, #144	; 0x90
   1999c:	movt	r2, #3
   199a0:	ldr	r2, [r2]
   199a4:	cmp	r2, #0
   199a8:	movweq	r2, #64004	; 0xfa04
   199ac:	movteq	r2, #2
   199b0:	ldreq	r2, [r2]
   199b4:	cmpeq	r2, #0
   199b8:	beq	199cc <argp_parse@@Base+0x104>
   199bc:	movw	r2, #59420	; 0xe81c
   199c0:	mov	r3, r1
   199c4:	movt	r2, #1
   199c8:	str	r2, [r1]
   199cc:	mov	r1, #0
   199d0:	str	r1, [r3, #16]
   199d4:	b	199dc <argp_parse@@Base+0x114>
   199d8:	mov	r0, r4
   199dc:	sub	r9, fp, #96	; 0x60
   199e0:	str	r7, [fp, #-232]	; 0xffffff18
   199e4:	vmov.i32	q8, #0	; 0x00000000
   199e8:	mov	r7, #12
   199ec:	mov	r4, #0
   199f0:	cmp	r0, #0
   199f4:	str	r5, [fp, #-224]	; 0xffffff20
   199f8:	str	r0, [fp, #-236]	; 0xffffff14
   199fc:	mov	r1, r9
   19a00:	vst1.64	{d16-d17}, [r1], r7
   19a04:	vst1.32	{d16-d17}, [r1]
   19a08:	mov	r1, #1
   19a0c:	bic	r3, r1, r5, lsr #2
   19a10:	str	r3, [fp, #-64]	; 0xffffffc0
   19a14:	str	r4, [fp, #-60]	; 0xffffffc4
   19a18:	str	r4, [fp, #-56]	; 0xffffffc8
   19a1c:	str	r4, [fp, #-52]	; 0xffffffcc
   19a20:	beq	19a58 <argp_parse@@Base+0x190>
   19a24:	sub	r1, fp, #64	; 0x40
   19a28:	bl	1a6f4 <argp_parse@@Base+0xe2c>
   19a2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19a30:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19a34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19a3c:	mov	r6, #16
   19a40:	add	r1, r6, r1, lsl #4
   19a44:	add	r2, r2, r2, lsl #3
   19a48:	mov	r6, #36	; 0x24
   19a4c:	lsl	r4, r0, #2
   19a50:	add	r8, r6, r2, lsl #2
   19a54:	b	19a60 <argp_parse@@Base+0x198>
   19a58:	mov	r8, #36	; 0x24
   19a5c:	mov	r1, #16
   19a60:	add	r5, r8, r4
   19a64:	add	sl, r5, r1
   19a68:	add	r0, r3, sl
   19a6c:	add	r0, r0, #1
   19a70:	bl	1bc4c <argp_parse@@Base+0x2384>
   19a74:	cmp	r0, #0
   19a78:	str	r0, [fp, #-100]	; 0xffffff9c
   19a7c:	beq	1a48c <argp_parse@@Base+0xbc4>
   19a80:	mov	r6, r0
   19a84:	mov	r0, #12
   19a88:	sub	r1, fp, #220	; 0xdc
   19a8c:	mov	r2, r4
   19a90:	vld1.64	{d16-d17}, [r9], r0
   19a94:	add	r0, r1, #20
   19a98:	add	r7, r6, r8
   19a9c:	add	r8, r6, r5
   19aa0:	add	r5, r6, sl
   19aa4:	vld1.32	{d18-d19}, [r9]
   19aa8:	vst1.32	{d16-d17}, [r0]
   19aac:	add	r0, r1, #32
   19ab0:	mov	r9, r1
   19ab4:	mov	r1, #0
   19ab8:	vst1.32	{d18-d19}, [r0]
   19abc:	mov	r0, #1
   19ac0:	str	r6, [fp, #-172]	; 0xffffff54
   19ac4:	str	r0, [fp, #-208]	; 0xffffff30
   19ac8:	str	r0, [fp, #-204]	; 0xffffff34
   19acc:	mov	r0, r7
   19ad0:	str	r7, [fp, #-164]	; 0xffffff5c
   19ad4:	str	r8, [fp, #-212]	; 0xffffff2c
   19ad8:	str	r5, [fp, #-216]	; 0xffffff28
   19adc:	bl	11c8c <memset@plt>
   19ae0:	str	r5, [fp, #-44]	; 0xffffffd4
   19ae4:	str	r9, [fp, #-48]	; 0xffffffd0
   19ae8:	ldr	r9, [fp, #-224]	; 0xffffff20
   19aec:	mov	r0, #45	; 0x2d
   19af0:	str	r8, [fp, #-40]	; 0xffffffd8
   19af4:	str	r7, [fp, #-36]	; 0xffffffdc
   19af8:	tst	r9, #8
   19afc:	moveq	r0, #43	; 0x2b
   19b00:	tsteq	r9, #4
   19b04:	beq	1a0d4 <argp_parse@@Base+0x80c>
   19b08:	add	r1, r5, #1
   19b0c:	strb	r0, [r5]
   19b10:	str	r1, [fp, #-44]	; 0xffffffd4
   19b14:	ldr	r0, [fp, #-236]	; 0xffffff14
   19b18:	ldr	sl, [fp, #-228]	; 0xffffff1c
   19b1c:	mov	r5, #0
   19b20:	strb	r5, [r1]
   19b24:	str	r5, [r8]
   19b28:	cmp	r0, #0
   19b2c:	str	r0, [fp, #-220]	; 0xffffff24
   19b30:	beq	19b68 <argp_parse@@Base+0x2a0>
   19b34:	sub	sp, sp, #8
   19b38:	sub	r1, fp, #48	; 0x30
   19b3c:	mov	r2, #0
   19b40:	mov	r3, r6
   19b44:	str	r1, [sp]
   19b48:	mov	r1, #0
   19b4c:	bl	1a7d0 <argp_parse@@Base+0xf08>
   19b50:	add	sp, sp, #8
   19b54:	str	r0, [fp, #-168]	; 0xffffff58
   19b58:	mov	r6, r0
   19b5c:	ldr	r5, [fp, #-220]	; 0xffffff24
   19b60:	ldr	r4, [fp, #-172]	; 0xffffff54
   19b64:	b	19b70 <argp_parse@@Base+0x2a8>
   19b68:	mov	r4, r6
   19b6c:	str	r6, [fp, #-168]	; 0xffffff58
   19b70:	ldr	r3, [fp, #-232]	; 0xffffff18
   19b74:	sub	r1, fp, #220	; 0xdc
   19b78:	mov	r7, #0
   19b7c:	vmov.i32	q8, #0	; 0x00000000
   19b80:	mov	r0, #1
   19b84:	mov	r8, sl
   19b88:	cmp	r4, r6
   19b8c:	mov	r2, r1
   19b90:	add	r1, r1, #84	; 0x54
   19b94:	str	r7, [fp, #-116]	; 0xffffff8c
   19b98:	str	r7, [fp, #-120]	; 0xffffff88
   19b9c:	vst1.32	{d16-d17}, [r1]
   19ba0:	str	r5, [fp, #-156]	; 0xffffff64
   19ba4:	str	r3, [fp, #-152]	; 0xffffff68
   19ba8:	str	sl, [fp, #-148]	; 0xffffff6c
   19bac:	str	r9, [fp, #-140]	; 0xffffff74
   19bb0:	str	r7, [fp, #-144]	; 0xffffff70
   19bb4:	str	r2, [fp, #-104]	; 0xffffff98
   19bb8:	str	r0, [fp, #-160]	; 0xffffff60
   19bbc:	movw	r0, #62912	; 0xf5c0
   19bc0:	add	sl, r2, #64	; 0x40
   19bc4:	movt	r0, #2
   19bc8:	ldr	r0, [r0]
   19bcc:	str	r0, [fp, #-112]	; 0xffffff90
   19bd0:	movw	r0, #62916	; 0xf5c4
   19bd4:	movt	r0, #2
   19bd8:	ldr	r0, [r0]
   19bdc:	str	r0, [fp, #-108]	; 0xffffff94
   19be0:	bcs	19cc4 <argp_parse@@Base+0x3fc>
   19be4:	ldr	r0, [fp, #12]
   19be8:	str	r0, [r4, #24]
   19bec:	cmp	r7, #7
   19bf0:	cmpne	r7, #0
   19bf4:	bne	1a48c <argp_parse@@Base+0xbc4>
   19bf8:	ldr	r0, [r4, #16]
   19bfc:	cmp	r0, #0
   19c00:	ldrne	r1, [r4, #20]
   19c04:	ldrne	r0, [r0, #28]
   19c08:	ldrne	r0, [r0, r1, lsl #2]
   19c0c:	strne	r0, [r4, #24]
   19c10:	ldr	r3, [r4]
   19c14:	cmp	r3, #0
   19c18:	beq	19c68 <argp_parse@@Base+0x3a0>
   19c1c:	add	r0, r4, #28
   19c20:	ldr	r1, [r4, #32]
   19c24:	mov	r2, sl
   19c28:	str	r1, [fp, #-120]	; 0xffffff88
   19c2c:	ldr	r1, [r4, #24]
   19c30:	str	r1, [fp, #-128]	; 0xffffff80
   19c34:	mov	r1, #0
   19c38:	ldr	r0, [r0]
   19c3c:	str	r0, [fp, #-124]	; 0xffffff84
   19c40:	ldr	r0, [r4, #12]
   19c44:	str	r0, [fp, #-136]	; 0xffffff78
   19c48:	movw	r0, #6
   19c4c:	movt	r0, #256	; 0x100
   19c50:	sub	r0, r0, #3
   19c54:	blx	r3
   19c58:	mov	r7, r0
   19c5c:	ldr	r0, [fp, #-120]	; 0xffffff88
   19c60:	str	r0, [r4, #32]
   19c64:	b	19c84 <argp_parse@@Base+0x3bc>
   19c68:	ldr	r0, [r4, #4]
   19c6c:	mov	r7, #7
   19c70:	ldr	r0, [r0, #16]
   19c74:	cmp	r0, #0
   19c78:	ldrne	r0, [r0]
   19c7c:	cmpne	r0, #0
   19c80:	bne	19c98 <argp_parse@@Base+0x3d0>
   19c84:	ldr	r0, [fp, #-168]	; 0xffffff58
   19c88:	add	r4, r4, #36	; 0x24
   19c8c:	cmp	r4, r0
   19c90:	bcc	19bec <argp_parse@@Base+0x324>
   19c94:	b	19cb8 <argp_parse@@Base+0x3f0>
   19c98:	mov	r0, r4
   19c9c:	ldr	r2, [r4, #24]
   19ca0:	ldr	r1, [r0, #28]!
   19ca4:	str	r2, [r1]
   19ca8:	ldr	r3, [r4]
   19cac:	cmp	r3, #0
   19cb0:	bne	19c20 <argp_parse@@Base+0x358>
   19cb4:	b	19c84 <argp_parse@@Base+0x3bc>
   19cb8:	cmp	r7, #7
   19cbc:	cmpne	r7, #0
   19cc0:	bne	1a48c <argp_parse@@Base+0xbc4>
   19cc4:	ldr	r0, [fp, #-140]	; 0xffffff74
   19cc8:	tst	r0, #2
   19ccc:	bne	19cdc <argp_parse@@Base+0x414>
   19cd0:	mov	r0, #1
   19cd4:	str	r0, [fp, #-204]	; 0xffffff34
   19cd8:	b	19d04 <argp_parse@@Base+0x43c>
   19cdc:	mov	r1, #0
   19ce0:	tst	r0, #1
   19ce4:	str	r1, [fp, #-204]	; 0xffffff34
   19ce8:	beq	19d04 <argp_parse@@Base+0x43c>
   19cec:	ldr	r0, [fp, #-152]	; 0xffffff68
   19cf0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19cf4:	sub	r1, r1, #4
   19cf8:	add	r0, r0, #1
   19cfc:	str	r1, [fp, #-148]	; 0xffffff6c
   19d00:	str	r0, [fp, #-152]	; 0xffffff68
   19d04:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19d08:	cmp	r0, r8
   19d0c:	beq	19d20 <argp_parse@@Base+0x458>
   19d10:	movw	r0, #62904	; 0xf5b8
   19d14:	movt	r0, #2
   19d18:	ldr	r0, [r0]
   19d1c:	b	19d30 <argp_parse@@Base+0x468>
   19d20:	ldr	r0, [r8]
   19d24:	cmp	r0, #0
   19d28:	beq	19d10 <argp_parse@@Base+0x448>
   19d2c:	bl	1ab14 <argp_parse@@Base+0x124c>
   19d30:	str	r0, [fp, #-116]	; 0xffffff8c
   19d34:	sub	r0, fp, #220	; 0xdc
   19d38:	mov	r8, #0
   19d3c:	add	r6, r0, #12
   19d40:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19d44:	cmp	r0, #0
   19d48:	beq	19d5c <argp_parse@@Base+0x494>
   19d4c:	ldr	r9, [fp, #-144]	; 0xffffff70
   19d50:	cmp	r9, r0
   19d54:	bge	19e10 <argp_parse@@Base+0x548>
   19d58:	str	r8, [fp, #-132]	; 0xffffff7c
   19d5c:	ldr	r0, [fp, #-160]	; 0xffffff60
   19d60:	ldr	r9, [fp, #-144]	; 0xffffff70
   19d64:	cmp	r0, #0
   19d68:	beq	19e10 <argp_parse@@Base+0x548>
   19d6c:	mvn	r0, #0
   19d70:	str	r0, [fp, #-200]	; 0xffffff38
   19d74:	str	r9, [fp, #-208]	; 0xffffff30
   19d78:	ldr	r2, [fp, #-216]	; 0xffffff28
   19d7c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   19d80:	ldr	r0, [fp, #-152]	; 0xffffff68
   19d84:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19d88:	ldrb	r7, [fp, #-140]	; 0xffffff74
   19d8c:	sub	sp, sp, #8
   19d90:	tst	r7, #64	; 0x40
   19d94:	bne	19da8 <argp_parse@@Base+0x4e0>
   19d98:	str	r8, [sp]
   19d9c:	str	r6, [sp, #4]
   19da0:	bl	1adcc <argp_parse@@Base+0x1504>
   19da4:	b	19db4 <argp_parse@@Base+0x4ec>
   19da8:	str	r8, [sp]
   19dac:	str	r6, [sp, #4]
   19db0:	bl	1ae30 <argp_parse@@Base+0x1568>
   19db4:	add	sp, sp, #8
   19db8:	ldr	r9, [fp, #-208]	; 0xffffff30
   19dbc:	mov	r7, r0
   19dc0:	cmn	r0, #1
   19dc4:	str	r9, [fp, #-144]	; 0xffffff70
   19dc8:	beq	19de4 <argp_parse@@Base+0x51c>
   19dcc:	cmp	r7, #63	; 0x3f
   19dd0:	beq	19fac <argp_parse@@Base+0x6e4>
   19dd4:	cmp	r7, #1
   19dd8:	bne	19fbc <argp_parse@@Base+0x6f4>
   19ddc:	ldr	r7, [fp, #-196]	; 0xffffff3c
   19de0:	b	19e48 <argp_parse@@Base+0x580>
   19de4:	cmp	r9, #2
   19de8:	str	r8, [fp, #-160]	; 0xffffff60
   19dec:	blt	19e10 <argp_parse@@Base+0x548>
   19df0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19df4:	movw	r1, #56140	; 0xdb4c
   19df8:	movt	r1, #1
   19dfc:	add	r0, r0, r9, lsl #2
   19e00:	ldr	r0, [r0, #-4]
   19e04:	bl	11998 <strcmp@plt>
   19e08:	cmp	r0, #0
   19e0c:	streq	r9, [fp, #-132]	; 0xffffff7c
   19e10:	ldr	r2, [fp, #-152]	; 0xffffff68
   19e14:	mov	r1, #1
   19e18:	mov	r0, #7
   19e1c:	cmp	r9, r2
   19e20:	bge	1a124 <argp_parse@@Base+0x85c>
   19e24:	ldrb	r2, [fp, #-140]	; 0xffffff74
   19e28:	tst	r2, #4
   19e2c:	bne	1a124 <argp_parse@@Base+0x85c>
   19e30:	add	r0, r9, #1
   19e34:	str	r0, [fp, #-144]	; 0xffffff70
   19e38:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19e3c:	ldr	r7, [r1, r9, lsl #2]
   19e40:	mov	r9, r0
   19e44:	str	r7, [fp, #-196]	; 0xffffff3c
   19e48:	sub	r0, r9, #1
   19e4c:	str	r0, [fp, #-144]	; 0xffffff70
   19e50:	ldr	r1, [fp, #-172]	; 0xffffff54
   19e54:	ldr	r2, [fp, #-168]	; 0xffffff58
   19e58:	cmp	r1, r2
   19e5c:	bcs	1a0dc <argp_parse@@Base+0x814>
   19e60:	add	r4, r1, #24
   19e64:	b	19e70 <argp_parse@@Base+0x5a8>
   19e68:	ldr	r0, [fp, #-144]	; 0xffffff70
   19e6c:	add	r4, r4, #36	; 0x24
   19e70:	add	r1, r0, #1
   19e74:	str	r1, [fp, #-144]	; 0xffffff70
   19e78:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19e7c:	cmp	r3, #0
   19e80:	beq	19f20 <argp_parse@@Base+0x658>
   19e84:	ldr	r0, [r4, #8]
   19e88:	mov	r1, r7
   19e8c:	mov	r2, sl
   19e90:	mov	r5, #0
   19e94:	str	r0, [fp, #-120]	; 0xffffff88
   19e98:	ldr	r0, [r4]
   19e9c:	str	r0, [fp, #-128]	; 0xffffff80
   19ea0:	ldr	r0, [r4, #4]
   19ea4:	str	r0, [fp, #-124]	; 0xffffff84
   19ea8:	ldr	r0, [r4, #-12]
   19eac:	str	r0, [fp, #-136]	; 0xffffff78
   19eb0:	mov	r0, #0
   19eb4:	blx	r3
   19eb8:	ldr	r1, [fp, #-120]	; 0xffffff88
   19ebc:	cmp	r0, #7
   19ec0:	str	r1, [r4, #8]
   19ec4:	bne	19f48 <argp_parse@@Base+0x680>
   19ec8:	ldr	r0, [fp, #-144]	; 0xffffff70
   19ecc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19ed0:	sub	r0, r0, #1
   19ed4:	cmp	r3, #0
   19ed8:	str	r0, [fp, #-144]	; 0xffffff70
   19edc:	beq	19f24 <argp_parse@@Base+0x65c>
   19ee0:	ldr	r0, [r4]
   19ee4:	mov	r1, #0
   19ee8:	mov	r2, sl
   19eec:	str	r0, [fp, #-128]	; 0xffffff80
   19ef0:	ldr	r0, [r4, #4]
   19ef4:	str	r0, [fp, #-124]	; 0xffffff84
   19ef8:	ldr	r0, [r4, #-12]
   19efc:	str	r0, [fp, #-136]	; 0xffffff78
   19f00:	movw	r0, #6
   19f04:	movt	r0, #256	; 0x100
   19f08:	blx	r3
   19f0c:	ldr	r1, [fp, #-120]	; 0xffffff88
   19f10:	str	r1, [r4, #8]
   19f14:	cmp	r0, #7
   19f18:	beq	19f30 <argp_parse@@Base+0x668>
   19f1c:	b	19f40 <argp_parse@@Base+0x678>
   19f20:	str	r0, [fp, #-144]	; 0xffffff70
   19f24:	mov	r0, #7
   19f28:	cmp	r0, #7
   19f2c:	bne	19f40 <argp_parse@@Base+0x678>
   19f30:	ldr	r2, [fp, #-168]	; 0xffffff58
   19f34:	add	r1, r4, #12
   19f38:	cmp	r1, r2
   19f3c:	bcc	19e68 <argp_parse@@Base+0x5a0>
   19f40:	movw	r5, #6
   19f44:	movt	r5, #256	; 0x100
   19f48:	cmp	r0, #0
   19f4c:	beq	19f5c <argp_parse@@Base+0x694>
   19f50:	cmp	r0, #7
   19f54:	bne	1a0c4 <argp_parse@@Base+0x7fc>
   19f58:	b	1a0dc <argp_parse@@Base+0x814>
   19f5c:	movw	r0, #6
   19f60:	movt	r0, #256	; 0x100
   19f64:	cmp	r5, r0
   19f68:	ldreq	r0, [fp, #-152]	; 0xffffff68
   19f6c:	streq	r0, [fp, #-144]	; 0xffffff70
   19f70:	ldrne	r0, [fp, #-144]	; 0xffffff70
   19f74:	cmp	r0, r9
   19f78:	bge	19f88 <argp_parse@@Base+0x6c0>
   19f7c:	mov	r0, #1
   19f80:	str	r0, [fp, #-160]	; 0xffffff60
   19f84:	b	19f9c <argp_parse@@Base+0x6d4>
   19f88:	rsb	r1, r9, #1
   19f8c:	add	r0, r1, r0
   19f90:	ldr	r1, [r4, #-12]
   19f94:	add	r0, r0, r1
   19f98:	str	r0, [r4, #-12]
   19f9c:	mov	r0, #0
   19fa0:	cmp	r0, #0
   19fa4:	beq	19d40 <argp_parse@@Base+0x478>
   19fa8:	b	1a0cc <argp_parse@@Base+0x804>
   19fac:	ldr	r0, [fp, #-200]	; 0xffffff38
   19fb0:	cmn	r0, #1
   19fb4:	beq	1a024 <argp_parse@@Base+0x75c>
   19fb8:	b	1a4cc <argp_parse@@Base+0xc04>
   19fbc:	cmp	r8, r7, asr #24
   19fc0:	beq	1a024 <argp_parse@@Base+0x75c>
   19fc4:	ldr	r1, [fp, #-172]	; 0xffffff54
   19fc8:	asr	r0, r7, #24
   19fcc:	sub	r0, r0, #1
   19fd0:	add	r0, r0, r0, lsl #3
   19fd4:	ldr	r3, [r1, r0, lsl #2]
   19fd8:	cmp	r3, #0
   19fdc:	beq	1a498 <argp_parse@@Base+0xbd0>
   19fe0:	add	r4, r1, r0, lsl #2
   19fe4:	tst	r7, #8388608	; 0x800000
   19fe8:	mov	r2, sl
   19fec:	ldr	r0, [r4, #32]!
   19ff0:	str	r0, [fp, #-120]	; 0xffffff88
   19ff4:	ldr	r0, [r4, #-8]
   19ff8:	str	r0, [fp, #-128]	; 0xffffff80
   19ffc:	ldr	r0, [r4, #-4]
   1a000:	str	r0, [fp, #-124]	; 0xffffff84
   1a004:	ldr	r0, [r4, #-20]	; 0xffffffec
   1a008:	str	r0, [fp, #-136]	; 0xffffff78
   1a00c:	bic	r0, r7, #-16777216	; 0xff000000
   1a010:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1a014:	orrne	r0, r0, #-16777216	; 0xff000000
   1a018:	blx	r3
   1a01c:	mov	r1, #0
   1a020:	b	1a0b4 <argp_parse@@Base+0x7ec>
   1a024:	ldr	r0, [fp, #-216]	; 0xffffff28
   1a028:	mov	r1, r7
   1a02c:	bl	11c38 <strchr@plt>
   1a030:	cmp	r0, #0
   1a034:	beq	1a0f0 <argp_parse@@Base+0x828>
   1a038:	ldr	r1, [fp, #-172]	; 0xffffff54
   1a03c:	ldr	r2, [fp, #-168]	; 0xffffff58
   1a040:	cmp	r1, r2
   1a044:	bcs	1a0f0 <argp_parse@@Base+0x828>
   1a048:	add	r1, r1, #24
   1a04c:	ldr	r3, [r1, #-16]
   1a050:	cmp	r3, r0
   1a054:	bhi	1a070 <argp_parse@@Base+0x7a8>
   1a058:	add	r3, r1, #36	; 0x24
   1a05c:	add	r1, r1, #12
   1a060:	cmp	r1, r2
   1a064:	mov	r1, r3
   1a068:	bcc	1a04c <argp_parse@@Base+0x784>
   1a06c:	b	1a0f0 <argp_parse@@Base+0x828>
   1a070:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1a074:	cmp	r3, #0
   1a078:	beq	1a0f0 <argp_parse@@Base+0x828>
   1a07c:	mov	r4, r1
   1a080:	mov	r2, sl
   1a084:	ldr	r0, [r4, #8]!
   1a088:	str	r0, [fp, #-120]	; 0xffffff88
   1a08c:	ldr	r0, [r1]
   1a090:	str	r0, [fp, #-128]	; 0xffffff80
   1a094:	ldr	r0, [r1, #4]
   1a098:	str	r0, [fp, #-124]	; 0xffffff84
   1a09c:	ldr	r0, [r1, #-12]
   1a0a0:	str	r0, [fp, #-136]	; 0xffffff78
   1a0a4:	mov	r0, r7
   1a0a8:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1a0ac:	blx	r3
   1a0b0:	mov	r1, #1
   1a0b4:	ldr	r2, [fp, #-120]	; 0xffffff88
   1a0b8:	cmp	r0, #7
   1a0bc:	str	r2, [r4]
   1a0c0:	beq	1a0e8 <argp_parse@@Base+0x820>
   1a0c4:	cmp	r0, #0
   1a0c8:	beq	19d40 <argp_parse@@Base+0x478>
   1a0cc:	mov	r1, #0
   1a0d0:	b	1a124 <argp_parse@@Base+0x85c>
   1a0d4:	mov	r1, r5
   1a0d8:	b	19b14 <argp_parse@@Base+0x24c>
   1a0dc:	mov	r7, #1
   1a0e0:	mov	r0, #1
   1a0e4:	b	1a110 <argp_parse@@Base+0x848>
   1a0e8:	cmp	r1, #0
   1a0ec:	beq	1a498 <argp_parse@@Base+0xbd0>
   1a0f0:	movw	r1, #59875	; 0xe9e3
   1a0f4:	movw	r3, #59616	; 0xe8e0
   1a0f8:	mov	r0, sl
   1a0fc:	mov	r2, r7
   1a100:	movt	r1, #1
   1a104:	movt	r3, #1
   1a108:	bl	17978 <argp_error@@Base>
   1a10c:	mov	r0, #0
   1a110:	add	r1, r7, #1
   1a114:	clz	r1, r1
   1a118:	lsr	r1, r1, #5
   1a11c:	orr	r1, r1, r0
   1a120:	mov	r0, #7
   1a124:	subs	r7, r0, #7
   1a128:	movne	r7, r0
   1a12c:	cmp	r1, #0
   1a130:	moveq	r7, r0
   1a134:	cmp	r7, #0
   1a138:	beq	1a1d8 <argp_parse@@Base+0x910>
   1a13c:	cmp	r7, #0
   1a140:	beq	1a36c <argp_parse@@Base+0xaa4>
   1a144:	cmp	r7, #7
   1a148:	bne	1a160 <argp_parse@@Base+0x898>
   1a14c:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a150:	mov	r0, sl
   1a154:	mov	r2, #260	; 0x104
   1a158:	bl	178bc <argp_state_help@@Base>
   1a15c:	mov	r7, #7
   1a160:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a164:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a168:	cmp	r4, r0
   1a16c:	bcs	1a40c <argp_parse@@Base+0xb44>
   1a170:	movw	r1, #6
   1a174:	movt	r1, #256	; 0x100
   1a178:	sub	r6, r1, #1
   1a17c:	ldr	r3, [r4]
   1a180:	cmp	r3, #0
   1a184:	beq	1a1c4 <argp_parse@@Base+0x8fc>
   1a188:	ldr	r0, [r4, #32]
   1a18c:	mov	r1, #0
   1a190:	mov	r2, sl
   1a194:	str	r0, [fp, #-120]	; 0xffffff88
   1a198:	ldr	r0, [r4, #24]
   1a19c:	str	r0, [fp, #-128]	; 0xffffff80
   1a1a0:	ldr	r0, [r4, #28]
   1a1a4:	str	r0, [fp, #-124]	; 0xffffff84
   1a1a8:	ldr	r0, [r4, #12]
   1a1ac:	str	r0, [fp, #-136]	; 0xffffff78
   1a1b0:	mov	r0, r6
   1a1b4:	blx	r3
   1a1b8:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a1bc:	str	r0, [r4, #32]
   1a1c0:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a1c4:	add	r4, r4, #36	; 0x24
   1a1c8:	cmp	r4, r0
   1a1cc:	bcc	1a17c <argp_parse@@Base+0x8b4>
   1a1d0:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a1d4:	b	1a40c <argp_parse@@Base+0xb44>
   1a1d8:	ldr	r1, [fp, #-152]	; 0xffffff68
   1a1dc:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a1e0:	cmp	r0, r1
   1a1e4:	bne	1a310 <argp_parse@@Base+0xa48>
   1a1e8:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a1ec:	ldr	r1, [fp, #-168]	; 0xffffff58
   1a1f0:	mov	r0, #0
   1a1f4:	cmp	r4, r1
   1a1f8:	bcs	1a284 <argp_parse@@Base+0x9bc>
   1a1fc:	movw	r0, #6
   1a200:	mov	r7, #0
   1a204:	movt	r0, #256	; 0x100
   1a208:	sub	r6, r0, #4
   1a20c:	mov	r0, #0
   1a210:	cmp	r0, #7
   1a214:	cmpne	r0, #0
   1a218:	bne	1a280 <argp_parse@@Base+0x9b8>
   1a21c:	ldr	r2, [r4, #12]
   1a220:	cmp	r2, #0
   1a224:	bne	1a274 <argp_parse@@Base+0x9ac>
   1a228:	ldr	r3, [r4]
   1a22c:	cmp	r3, #0
   1a230:	beq	1a270 <argp_parse@@Base+0x9a8>
   1a234:	ldr	r0, [r4, #32]
   1a238:	mov	r1, #0
   1a23c:	mov	r2, sl
   1a240:	str	r0, [fp, #-120]	; 0xffffff88
   1a244:	ldr	r0, [r4, #24]
   1a248:	str	r0, [fp, #-128]	; 0xffffff80
   1a24c:	ldr	r0, [r4, #28]
   1a250:	str	r7, [fp, #-136]	; 0xffffff78
   1a254:	str	r0, [fp, #-124]	; 0xffffff84
   1a258:	mov	r0, r6
   1a25c:	blx	r3
   1a260:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a264:	str	r1, [r4, #32]
   1a268:	ldr	r1, [fp, #-168]	; 0xffffff58
   1a26c:	b	1a274 <argp_parse@@Base+0x9ac>
   1a270:	mov	r0, #7
   1a274:	add	r4, r4, #36	; 0x24
   1a278:	cmp	r4, r1
   1a27c:	bcc	1a210 <argp_parse@@Base+0x948>
   1a280:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a284:	sub	r7, r1, #36	; 0x24
   1a288:	cmp	r7, r4
   1a28c:	bcc	1a304 <argp_parse@@Base+0xa3c>
   1a290:	movw	r1, #6
   1a294:	movt	r1, #256	; 0x100
   1a298:	sub	r6, r1, #5
   1a29c:	cmp	r0, #7
   1a2a0:	cmpne	r0, #0
   1a2a4:	bne	1a350 <argp_parse@@Base+0xa88>
   1a2a8:	ldr	r3, [r7]
   1a2ac:	cmp	r3, #0
   1a2b0:	beq	1a2f4 <argp_parse@@Base+0xa2c>
   1a2b4:	ldr	r0, [r7, #32]
   1a2b8:	mov	r1, #0
   1a2bc:	mov	r2, sl
   1a2c0:	str	r0, [fp, #-120]	; 0xffffff88
   1a2c4:	ldr	r0, [r7, #24]
   1a2c8:	str	r0, [fp, #-128]	; 0xffffff80
   1a2cc:	ldr	r0, [r7, #28]
   1a2d0:	str	r0, [fp, #-124]	; 0xffffff84
   1a2d4:	ldr	r0, [r7, #12]
   1a2d8:	str	r0, [fp, #-136]	; 0xffffff78
   1a2dc:	mov	r0, r6
   1a2e0:	blx	r3
   1a2e4:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a2e8:	str	r1, [r7, #32]
   1a2ec:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a2f0:	b	1a2f8 <argp_parse@@Base+0xa30>
   1a2f4:	mov	r0, #7
   1a2f8:	sub	r7, r7, #36	; 0x24
   1a2fc:	cmp	r7, r4
   1a300:	bcs	1a29c <argp_parse@@Base+0x9d4>
   1a304:	subs	r7, r0, #7
   1a308:	movne	r7, r0
   1a30c:	b	1a354 <argp_parse@@Base+0xa8c>
   1a310:	ldr	r1, [fp, #8]
   1a314:	cmp	r1, #0
   1a318:	beq	1a324 <argp_parse@@Base+0xa5c>
   1a31c:	str	r0, [r1]
   1a320:	b	1a36c <argp_parse@@Base+0xaa4>
   1a324:	ldrb	r0, [fp, #-140]	; 0xffffff74
   1a328:	tst	r0, #2
   1a32c:	bne	1a14c <argp_parse@@Base+0x884>
   1a330:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a334:	cmp	r0, #0
   1a338:	beq	1a14c <argp_parse@@Base+0x884>
   1a33c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1a340:	movw	r1, #59892	; 0xe9f4
   1a344:	movt	r1, #1
   1a348:	bl	11c44 <fprintf@plt>
   1a34c:	b	1a14c <argp_parse@@Base+0x884>
   1a350:	mov	r7, r0
   1a354:	ldr	r1, [fp, #8]
   1a358:	cmp	r1, #0
   1a35c:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1a360:	strne	r0, [r1]
   1a364:	cmp	r7, #0
   1a368:	bne	1a144 <argp_parse@@Base+0x87c>
   1a36c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a370:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a374:	mov	r7, #0
   1a378:	sub	r5, r0, #36	; 0x24
   1a37c:	cmp	r5, r4
   1a380:	bcc	1a40c <argp_parse@@Base+0xb44>
   1a384:	movw	r1, #6
   1a388:	mov	r0, #0
   1a38c:	movt	r1, #256	; 0x100
   1a390:	sub	r6, r1, #2
   1a394:	cmp	r0, #7
   1a398:	cmpne	r0, #0
   1a39c:	bne	1a408 <argp_parse@@Base+0xb40>
   1a3a0:	ldr	r3, [r5]
   1a3a4:	cmp	r3, #0
   1a3a8:	beq	1a3ec <argp_parse@@Base+0xb24>
   1a3ac:	ldr	r0, [r5, #32]
   1a3b0:	mov	r1, #0
   1a3b4:	mov	r2, sl
   1a3b8:	str	r0, [fp, #-120]	; 0xffffff88
   1a3bc:	ldr	r0, [r5, #24]
   1a3c0:	str	r0, [fp, #-128]	; 0xffffff80
   1a3c4:	ldr	r0, [r5, #28]
   1a3c8:	str	r0, [fp, #-124]	; 0xffffff84
   1a3cc:	ldr	r0, [r5, #12]
   1a3d0:	str	r0, [fp, #-136]	; 0xffffff78
   1a3d4:	mov	r0, r6
   1a3d8:	blx	r3
   1a3dc:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a3e0:	str	r1, [r5, #32]
   1a3e4:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a3e8:	b	1a3f0 <argp_parse@@Base+0xb28>
   1a3ec:	mov	r0, #7
   1a3f0:	sub	r5, r5, #36	; 0x24
   1a3f4:	cmp	r5, r4
   1a3f8:	bcs	1a394 <argp_parse@@Base+0xacc>
   1a3fc:	subs	r7, r0, #7
   1a400:	movne	r7, r0
   1a404:	b	1a40c <argp_parse@@Base+0xb44>
   1a408:	mov	r7, r0
   1a40c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a410:	sub	r6, r0, #36	; 0x24
   1a414:	cmp	r6, r4
   1a418:	bcc	1a47c <argp_parse@@Base+0xbb4>
   1a41c:	movw	r0, #6
   1a420:	movt	r0, #256	; 0x100
   1a424:	add	r5, r0, #1
   1a428:	ldr	r3, [r6]
   1a42c:	cmp	r3, #0
   1a430:	beq	1a470 <argp_parse@@Base+0xba8>
   1a434:	ldr	r0, [r6, #32]
   1a438:	mov	r1, #0
   1a43c:	mov	r2, sl
   1a440:	str	r0, [fp, #-120]	; 0xffffff88
   1a444:	ldr	r0, [r6, #24]
   1a448:	str	r0, [fp, #-128]	; 0xffffff80
   1a44c:	ldr	r0, [r6, #28]
   1a450:	str	r0, [fp, #-124]	; 0xffffff84
   1a454:	ldr	r0, [r6, #12]
   1a458:	str	r0, [fp, #-136]	; 0xffffff78
   1a45c:	mov	r0, r5
   1a460:	blx	r3
   1a464:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a468:	str	r0, [r6, #32]
   1a46c:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a470:	sub	r6, r6, #36	; 0x24
   1a474:	cmp	r6, r4
   1a478:	bcs	1a428 <argp_parse@@Base+0xb60>
   1a47c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a480:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1a484:	cmp	r7, #7
   1a488:	movweq	r7, #22
   1a48c:	mov	r0, r7
   1a490:	sub	sp, fp, #28
   1a494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a498:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1a49c:	ldr	r1, [r0, #12]
   1a4a0:	cmp	r1, r7
   1a4a4:	beq	1a4d4 <argp_parse@@Base+0xc0c>
   1a4a8:	ldr	r1, [r0]
   1a4ac:	cmp	r1, #0
   1a4b0:	beq	1a4d4 <argp_parse@@Base+0xc0c>
   1a4b4:	add	r1, r0, #16
   1a4b8:	ldr	r0, [r0, #28]
   1a4bc:	cmp	r0, r7
   1a4c0:	mov	r0, r1
   1a4c4:	bne	1a4a8 <argp_parse@@Base+0xbe0>
   1a4c8:	b	1a4d8 <argp_parse@@Base+0xc10>
   1a4cc:	mov	r1, #0
   1a4d0:	b	1a120 <argp_parse@@Base+0x858>
   1a4d4:	mov	r1, r0
   1a4d8:	ldr	r0, [r1]
   1a4dc:	movw	r2, #56072	; 0xdb08
   1a4e0:	movw	r1, #59883	; 0xe9eb
   1a4e4:	movw	r3, #59616	; 0xe8e0
   1a4e8:	movt	r2, #1
   1a4ec:	movt	r1, #1
   1a4f0:	movt	r3, #1
   1a4f4:	cmp	r0, #0
   1a4f8:	movne	r2, r0
   1a4fc:	mov	r0, sl
   1a500:	b	1a108 <argp_parse@@Base+0x840>
   1a504:	mov	ip, r0
   1a508:	mov	r0, #0
   1a50c:	cmp	r1, #0
   1a510:	beq	1a540 <argp_parse@@Base+0xc78>
   1a514:	ldr	r3, [r1, #52]	; 0x34
   1a518:	ldr	r1, [r3, #48]	; 0x30
   1a51c:	ldr	r3, [r3, #52]	; 0x34
   1a520:	b	1a528 <argp_parse@@Base+0xc60>
   1a524:	add	r1, r1, #36	; 0x24
   1a528:	cmp	r1, r3
   1a52c:	bxcs	lr
   1a530:	ldr	r2, [r1, #4]
   1a534:	cmp	r2, ip
   1a538:	bne	1a524 <argp_parse@@Base+0xc5c>
   1a53c:	ldr	r0, [r1, #24]
   1a540:	bx	lr
   1a544:	push	{r4, r5, r6, sl, fp, lr}
   1a548:	add	fp, sp, #16
   1a54c:	mov	r5, r2
   1a550:	mov	r6, r1
   1a554:	mov	r4, #7
   1a558:	cmn	r0, #3
   1a55c:	bgt	1a580 <argp_parse@@Base+0xcb8>
   1a560:	cmn	r0, #4
   1a564:	beq	1a5ac <argp_parse@@Base+0xce4>
   1a568:	cmn	r0, #3
   1a56c:	bne	1a604 <argp_parse@@Base+0xd3c>
   1a570:	ldr	r1, [r5, #48]	; 0x30
   1a574:	mov	r0, r5
   1a578:	movw	r2, #513	; 0x201
   1a57c:	b	1a59c <argp_parse@@Base+0xcd4>
   1a580:	cmn	r0, #2
   1a584:	beq	1a60c <argp_parse@@Base+0xd44>
   1a588:	cmp	r0, #63	; 0x3f
   1a58c:	bne	1a604 <argp_parse@@Base+0xd3c>
   1a590:	ldr	r1, [r5, #48]	; 0x30
   1a594:	mov	r0, r5
   1a598:	movw	r2, #634	; 0x27a
   1a59c:	bl	178bc <argp_state_help@@Base>
   1a5a0:	mov	r4, #0
   1a5a4:	mov	r0, r4
   1a5a8:	pop	{r4, r5, r6, sl, fp, pc}
   1a5ac:	movw	r0, #59813	; 0xe9a5
   1a5b0:	cmp	r6, #0
   1a5b4:	mov	r1, #0
   1a5b8:	mov	r2, #10
   1a5bc:	mov	r4, #0
   1a5c0:	movt	r0, #1
   1a5c4:	movne	r0, r6
   1a5c8:	bl	119a4 <strtol@plt>
   1a5cc:	movw	r5, #64000	; 0xfa00
   1a5d0:	movt	r5, #2
   1a5d4:	str	r0, [r5]
   1a5d8:	ldr	r0, [r5]
   1a5dc:	subs	r0, r0, #1
   1a5e0:	str	r0, [r5]
   1a5e4:	blt	1a604 <argp_parse@@Base+0xd3c>
   1a5e8:	mov	r0, #1
   1a5ec:	bl	11a88 <sleep@plt>
   1a5f0:	ldr	r0, [r5]
   1a5f4:	sub	r1, r0, #1
   1a5f8:	cmp	r0, #0
   1a5fc:	str	r1, [r5]
   1a600:	bgt	1a5e8 <argp_parse@@Base+0xd20>
   1a604:	mov	r0, r4
   1a608:	pop	{r4, r5, r6, sl, fp, pc}
   1a60c:	movw	r0, #62908	; 0xf5bc
   1a610:	movt	r0, #2
   1a614:	str	r6, [r0]
   1a618:	mov	r0, r6
   1a61c:	bl	1ab14 <argp_parse@@Base+0x124c>
   1a620:	movw	r1, #62904	; 0xf5b8
   1a624:	str	r0, [r5, #40]	; 0x28
   1a628:	mov	r4, #0
   1a62c:	movt	r1, #2
   1a630:	str	r0, [r1]
   1a634:	ldr	r0, [r5, #16]
   1a638:	and	r0, r0, #3
   1a63c:	cmp	r0, #1
   1a640:	ldreq	r0, [r5, #8]
   1a644:	streq	r6, [r0]
   1a648:	moveq	r0, r4
   1a64c:	popeq	{r4, r5, r6, sl, fp, pc}
   1a650:	mov	r0, r4
   1a654:	pop	{r4, r5, r6, sl, fp, pc}
   1a658:	push	{r4, sl, fp, lr}
   1a65c:	add	fp, sp, #8
   1a660:	mov	r1, r0
   1a664:	mov	r0, #7
   1a668:	cmp	r1, #86	; 0x56
   1a66c:	popne	{r4, sl, fp, pc}
   1a670:	movw	r0, #64004	; 0xfa04
   1a674:	mov	r4, r2
   1a678:	movt	r0, #2
   1a67c:	ldr	r2, [r0]
   1a680:	cmp	r2, #0
   1a684:	beq	1a698 <argp_parse@@Base+0xdd0>
   1a688:	ldr	r0, [r4, #48]	; 0x30
   1a68c:	mov	r1, r4
   1a690:	blx	r2
   1a694:	b	1a6d8 <argp_parse@@Base+0xe10>
   1a698:	movw	r0, #144	; 0x90
   1a69c:	movt	r0, #3
   1a6a0:	ldr	r2, [r0]
   1a6a4:	cmp	r2, #0
   1a6a8:	beq	1a6c0 <argp_parse@@Base+0xdf8>
   1a6ac:	ldr	r0, [r4, #48]	; 0x30
   1a6b0:	movw	r1, #60019	; 0xea73
   1a6b4:	movt	r1, #1
   1a6b8:	bl	11c44 <fprintf@plt>
   1a6bc:	b	1a6d8 <argp_parse@@Base+0xe10>
   1a6c0:	movw	r1, #58708	; 0xe554
   1a6c4:	movw	r2, #59840	; 0xe9c0
   1a6c8:	mov	r0, r4
   1a6cc:	movt	r1, #1
   1a6d0:	movt	r2, #1
   1a6d4:	bl	17978 <argp_error@@Base>
   1a6d8:	ldrb	r1, [r4, #16]
   1a6dc:	mov	r0, #0
   1a6e0:	tst	r1, #32
   1a6e4:	beq	1a6ec <argp_parse@@Base+0xe24>
   1a6e8:	pop	{r4, sl, fp, pc}
   1a6ec:	mov	r0, #0
   1a6f0:	bl	11c14 <exit@plt>
   1a6f4:	push	{r4, r5, fp, lr}
   1a6f8:	add	fp, sp, #8
   1a6fc:	ldr	r2, [r0]
   1a700:	ldr	ip, [r0, #16]
   1a704:	mov	r4, r1
   1a708:	cmp	r2, #0
   1a70c:	beq	1a778 <argp_parse@@Base+0xeb0>
   1a710:	ldr	r0, [r4, #8]
   1a714:	mov	r3, #0
   1a718:	add	r0, r0, #1
   1a71c:	str	r0, [r4, #8]
   1a720:	mov	r0, #0
   1a724:	b	1a730 <argp_parse@@Base+0xe68>
   1a728:	add	r3, r3, #3
   1a72c:	add	r0, r0, #1
   1a730:	add	r5, r2, r3, lsl #3
   1a734:	ldr	r1, [r5, #4]
   1a738:	cmp	r1, #0
   1a73c:	bne	1a728 <argp_parse@@Base+0xe60>
   1a740:	ldr	r1, [r2, r3, lsl #3]
   1a744:	cmp	r1, #0
   1a748:	bne	1a728 <argp_parse@@Base+0xe60>
   1a74c:	ldr	r1, [r5, #16]
   1a750:	cmp	r1, #0
   1a754:	bne	1a728 <argp_parse@@Base+0xe60>
   1a758:	ldr	r1, [r5, #20]
   1a75c:	cmp	r1, #0
   1a760:	bne	1a728 <argp_parse@@Base+0xe60>
   1a764:	ldr	r1, [r4]
   1a768:	mov	r2, r4
   1a76c:	add	r1, r1, r3
   1a770:	str	r1, [r2], #4
   1a774:	b	1a78c <argp_parse@@Base+0xec4>
   1a778:	ldr	r0, [r0, #4]
   1a77c:	cmp	r0, #0
   1a780:	beq	1a798 <argp_parse@@Base+0xed0>
   1a784:	add	r2, r4, #8
   1a788:	mov	r0, #1
   1a78c:	ldr	r1, [r2]
   1a790:	add	r0, r1, r0
   1a794:	str	r0, [r2]
   1a798:	cmp	ip, #0
   1a79c:	ldrne	r0, [ip]
   1a7a0:	cmpne	r0, #0
   1a7a4:	beq	1a7cc <argp_parse@@Base+0xf04>
   1a7a8:	add	r5, ip, #16
   1a7ac:	mov	r1, r4
   1a7b0:	bl	1a6f4 <argp_parse@@Base+0xe2c>
   1a7b4:	ldr	r0, [r4, #12]
   1a7b8:	add	r0, r0, #1
   1a7bc:	str	r0, [r4, #12]
   1a7c0:	ldr	r0, [r5], #16
   1a7c4:	cmp	r0, #0
   1a7c8:	bne	1a7ac <argp_parse@@Base+0xee4>
   1a7cc:	pop	{r4, r5, fp, pc}
   1a7d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7d4:	add	fp, sp, #28
   1a7d8:	sub	sp, sp, #28
   1a7dc:	ldr	r7, [r0]
   1a7e0:	mov	r6, r3
   1a7e4:	mov	r3, r1
   1a7e8:	ldr	r5, [r0, #16]
   1a7ec:	ldr	r1, [fp, #8]
   1a7f0:	cmp	r7, #0
   1a7f4:	beq	1a9d0 <argp_parse@@Base+0x1108>
   1a7f8:	str	r0, [sp, #8]
   1a7fc:	add	r0, sp, #16
   1a800:	add	r8, r1, #4
   1a804:	mov	r9, r7
   1a808:	str	r3, [sp, #12]
   1a80c:	stm	r0, {r2, r5, r6}
   1a810:	b	1a818 <argp_parse@@Base+0xf50>
   1a814:	add	r9, r9, #24
   1a818:	ldr	r4, [r9, #4]
   1a81c:	cmp	r4, #0
   1a820:	bne	1a848 <argp_parse@@Base+0xf80>
   1a824:	ldr	r0, [r9]
   1a828:	cmp	r0, #0
   1a82c:	bne	1a848 <argp_parse@@Base+0xf80>
   1a830:	ldr	r0, [r9, #16]
   1a834:	cmp	r0, #0
   1a838:	bne	1a848 <argp_parse@@Base+0xf80>
   1a83c:	ldr	r0, [r9, #20]
   1a840:	cmp	r0, #0
   1a844:	beq	1a9b8 <argp_parse@@Base+0x10f0>
   1a848:	ldr	r0, [r9, #12]
   1a84c:	mov	r5, #0
   1a850:	tst	r0, #4
   1a854:	moveq	r7, r9
   1a858:	ldrb	r1, [r7, #12]
   1a85c:	tst	r1, #8
   1a860:	bne	1a814 <argp_parse@@Base+0xf4c>
   1a864:	sub	r1, r4, #1
   1a868:	cmp	r1, #254	; 0xfe
   1a86c:	bhi	1a8e8 <argp_parse@@Base+0x1020>
   1a870:	ands	r0, r0, #8
   1a874:	bne	1a8e8 <argp_parse@@Base+0x1020>
   1a878:	bl	11bfc <__ctype_b_loc@plt>
   1a87c:	ldr	r0, [r0]
   1a880:	add	r0, r0, r4, lsl #1
   1a884:	ldrb	r0, [r0, #1]
   1a888:	tst	r0, #64	; 0x40
   1a88c:	beq	1a8e8 <argp_parse@@Base+0x1020>
   1a890:	ldr	r0, [r8]
   1a894:	add	r1, r0, #1
   1a898:	str	r1, [r8]
   1a89c:	strb	r4, [r0]
   1a8a0:	ldr	r0, [r7, #8]
   1a8a4:	cmp	r0, #0
   1a8a8:	beq	1a8e0 <argp_parse@@Base+0x1018>
   1a8ac:	ldr	r0, [r8]
   1a8b0:	add	r1, r0, #1
   1a8b4:	str	r1, [r8]
   1a8b8:	mov	r1, #58	; 0x3a
   1a8bc:	strb	r1, [r0]
   1a8c0:	ldrb	r0, [r7, #12]
   1a8c4:	tst	r0, #1
   1a8c8:	beq	1a8e0 <argp_parse@@Base+0x1018>
   1a8cc:	ldr	r0, [r8]
   1a8d0:	add	r1, r0, #1
   1a8d4:	str	r1, [r8]
   1a8d8:	mov	r1, #58	; 0x3a
   1a8dc:	strb	r1, [r0]
   1a8e0:	ldr	r0, [r8]
   1a8e4:	strb	r5, [r0]
   1a8e8:	ldr	r5, [r9]
   1a8ec:	cmp	r5, #0
   1a8f0:	beq	1a814 <argp_parse@@Base+0xf4c>
   1a8f4:	ldr	r0, [fp, #8]
   1a8f8:	ldr	r4, [r0]
   1a8fc:	ldr	sl, [r4, #8]
   1a900:	ldr	r0, [sl]
   1a904:	cmp	r0, #0
   1a908:	beq	1a93c <argp_parse@@Base+0x1074>
   1a90c:	mov	r6, sl
   1a910:	mov	r1, r5
   1a914:	bl	11998 <strcmp@plt>
   1a918:	cmp	r0, #0
   1a91c:	beq	1a930 <argp_parse@@Base+0x1068>
   1a920:	ldr	r0, [r6, #16]!
   1a924:	cmp	r0, #0
   1a928:	bne	1a910 <argp_parse@@Base+0x1048>
   1a92c:	b	1a93c <argp_parse@@Base+0x1074>
   1a930:	sub	r0, r6, sl
   1a934:	cmn	r0, #1
   1a938:	bgt	1a814 <argp_parse@@Base+0xf4c>
   1a93c:	ldr	r6, [fp, #8]
   1a940:	ldr	r0, [r6, #8]
   1a944:	str	r5, [r0]
   1a948:	ldr	r1, [r7, #8]
   1a94c:	cmp	r1, #0
   1a950:	beq	1a968 <argp_parse@@Base+0x10a0>
   1a954:	ldrb	r1, [r7, #12]
   1a958:	tst	r1, #1
   1a95c:	mov	r1, #2
   1a960:	movweq	r1, #1
   1a964:	b	1a96c <argp_parse@@Base+0x10a4>
   1a968:	mov	r1, #0
   1a96c:	mov	r5, #0
   1a970:	stmib	r0, {r1, r5}
   1a974:	ldr	r1, [r9, #4]
   1a978:	ldr	r3, [sp, #24]
   1a97c:	ldr	r2, [r4, #48]	; 0x30
   1a980:	cmp	r1, #0
   1a984:	sub	r2, r3, r2
   1a988:	mov	r3, #956301312	; 0x39000000
   1a98c:	ldreq	r1, [r7, #4]
   1a990:	lsr	r2, r2, #2
   1a994:	mul	r2, r2, r3
   1a998:	add	r2, r2, #16777216	; 0x1000000
   1a99c:	bic	r1, r1, #-16777216	; 0xff000000
   1a9a0:	orr	r1, r2, r1
   1a9a4:	str	r1, [r0, #12]
   1a9a8:	add	r1, r0, #16
   1a9ac:	str	r1, [r6, #8]
   1a9b0:	str	r5, [r0, #16]
   1a9b4:	b	1a814 <argp_parse@@Base+0xf4c>
   1a9b8:	ldr	r0, [sp, #8]
   1a9bc:	add	r6, sp, #16
   1a9c0:	ldr	r7, [r0, #4]
   1a9c4:	ldm	r6, {r2, r5, r6}
   1a9c8:	ldr	r3, [sp, #12]
   1a9cc:	b	1a9e4 <argp_parse@@Base+0x111c>
   1a9d0:	ldr	r7, [r0, #4]
   1a9d4:	cmp	r7, #0
   1a9d8:	beq	1aa94 <argp_parse@@Base+0x11cc>
   1a9dc:	ldr	r1, [fp, #8]
   1a9e0:	add	r8, r1, #4
   1a9e4:	str	r0, [r6, #4]
   1a9e8:	str	r7, [r6]
   1a9ec:	mov	r0, #0
   1a9f0:	cmp	r5, #0
   1a9f4:	ldr	r1, [r8]
   1a9f8:	str	r0, [r6, #12]
   1a9fc:	str	r3, [r6, #16]
   1aa00:	str	r2, [r6, #20]
   1aa04:	str	r0, [r6, #24]
   1aa08:	str	r0, [r6, #32]
   1aa0c:	str	r0, [r6, #28]
   1aa10:	str	r1, [r6, #8]
   1aa14:	beq	1aa44 <argp_parse@@Base+0x117c>
   1aa18:	ldr	r1, [r5, r0, lsl #2]
   1aa1c:	add	r0, r0, #4
   1aa20:	cmp	r1, #0
   1aa24:	bne	1aa18 <argp_parse@@Base+0x1150>
   1aa28:	ldr	r1, [fp, #8]
   1aa2c:	mov	r2, r1
   1aa30:	ldr	r1, [r1, #12]
   1aa34:	add	r0, r1, r0
   1aa38:	str	r1, [r6, #28]
   1aa3c:	sub	r0, r0, #4
   1aa40:	str	r0, [r2, #12]
   1aa44:	add	r3, r6, #36	; 0x24
   1aa48:	cmp	r5, #0
   1aa4c:	ldrne	r0, [r5]
   1aa50:	cmpne	r0, #0
   1aa54:	beq	1aa88 <argp_parse@@Base+0x11c0>
   1aa58:	ldr	r7, [fp, #8]
   1aa5c:	add	r4, r5, #16
   1aa60:	mov	r5, #0
   1aa64:	mov	r1, r6
   1aa68:	mov	r2, r5
   1aa6c:	str	r7, [sp]
   1aa70:	bl	1a7d0 <argp_parse@@Base+0xf08>
   1aa74:	mov	r3, r0
   1aa78:	ldr	r0, [r4, r5, lsl #4]
   1aa7c:	add	r5, r5, #1
   1aa80:	cmp	r0, #0
   1aa84:	bne	1aa64 <argp_parse@@Base+0x119c>
   1aa88:	mov	r0, r3
   1aa8c:	sub	sp, fp, #28
   1aa90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa94:	mov	r3, r6
   1aa98:	mov	r6, #0
   1aa9c:	b	1aa48 <argp_parse@@Base+0x1180>
   1aaa0:	movw	r2, #64008	; 0xfa08
   1aaa4:	movt	r2, #2
   1aaa8:	str	r0, [r2]
   1aaac:	movw	r0, #64004	; 0xfa04
   1aab0:	movw	r2, #43728	; 0xaad0
   1aab4:	movt	r0, #2
   1aab8:	movt	r2, #1
   1aabc:	str	r2, [r0]
   1aac0:	movw	r0, #64012	; 0xfa0c
   1aac4:	movt	r0, #2
   1aac8:	str	r1, [r0]
   1aacc:	bx	lr
   1aad0:	push	{fp, lr}
   1aad4:	mov	fp, sp
   1aad8:	sub	sp, sp, #8
   1aadc:	movw	r2, #64012	; 0xfa0c
   1aae0:	movw	r1, #64008	; 0xfa08
   1aae4:	movw	r3, #59930	; 0xea1a
   1aae8:	movt	r2, #2
   1aaec:	movt	r1, #2
   1aaf0:	movt	r3, #1
   1aaf4:	ldr	r2, [r2]
   1aaf8:	ldr	r1, [r1]
   1aafc:	str	r2, [sp]
   1ab00:	movw	r2, #59916	; 0xea0c
   1ab04:	movt	r2, #1
   1ab08:	bl	1b324 <argp_parse@@Base+0x1a5c>
   1ab0c:	mov	sp, fp
   1ab10:	pop	{fp, pc}
   1ab14:	sub	r0, r0, #1
   1ab18:	ldrb	r3, [r0, #1]!
   1ab1c:	cmp	r3, #47	; 0x2f
   1ab20:	beq	1ab18 <argp_parse@@Base+0x1250>
   1ab24:	mov	r2, #0
   1ab28:	mov	r1, r0
   1ab2c:	b	1ab48 <argp_parse@@Base+0x1280>
   1ab30:	cmp	r3, #0
   1ab34:	bxeq	lr
   1ab38:	tst	r2, #1
   1ab3c:	mov	r2, #0
   1ab40:	movne	r0, r1
   1ab44:	ldrb	r3, [r1, #1]!
   1ab48:	uxtb	r3, r3
   1ab4c:	cmp	r3, #47	; 0x2f
   1ab50:	bne	1ab30 <argp_parse@@Base+0x1268>
   1ab54:	ldrb	r3, [r1, #1]!
   1ab58:	mov	r2, #1
   1ab5c:	b	1ab48 <argp_parse@@Base+0x1280>
   1ab60:	push	{r4, sl, fp, lr}
   1ab64:	add	fp, sp, #8
   1ab68:	mov	r4, r0
   1ab6c:	bl	11c20 <strlen@plt>
   1ab70:	mov	r1, r0
   1ab74:	sub	r2, r4, #1
   1ab78:	mov	r0, r1
   1ab7c:	cmp	r1, #2
   1ab80:	popcc	{r4, sl, fp, pc}
   1ab84:	ldrb	r3, [r2, r0]
   1ab88:	sub	r1, r0, #1
   1ab8c:	cmp	r3, #47	; 0x2f
   1ab90:	beq	1ab78 <argp_parse@@Base+0x12b0>
   1ab94:	pop	{r4, sl, fp, pc}
   1ab98:	sub	sp, sp, #8
   1ab9c:	push	{r4, r5, r6, r7, fp, lr}
   1aba0:	add	fp, sp, #16
   1aba4:	sub	sp, sp, #8
   1aba8:	mov	r5, r0
   1abac:	add	r0, fp, #8
   1abb0:	cmp	r1, #11
   1abb4:	str	r3, [fp, #12]
   1abb8:	str	r2, [fp, #8]
   1abbc:	str	r0, [sp, #4]
   1abc0:	bhi	1abfc <argp_parse@@Base+0x1334>
   1abc4:	mov	r0, #1
   1abc8:	movw	r2, #1300	; 0x514
   1abcc:	tst	r2, r0, lsl r1
   1abd0:	bne	1acbc <argp_parse@@Base+0x13f4>
   1abd4:	movw	r2, #2570	; 0xa0a
   1abd8:	tst	r2, r0, lsl r1
   1abdc:	bne	1ac24 <argp_parse@@Base+0x135c>
   1abe0:	cmp	r1, #0
   1abe4:	bne	1abfc <argp_parse@@Base+0x1334>
   1abe8:	ldr	r0, [sp, #4]
   1abec:	add	r1, r0, #4
   1abf0:	str	r1, [sp, #4]
   1abf4:	mov	r1, #0
   1abf8:	b	1acc8 <argp_parse@@Base+0x1400>
   1abfc:	sub	r0, r1, #1024	; 0x400
   1ac00:	cmp	r0, #10
   1ac04:	bhi	1acbc <argp_parse@@Base+0x13f4>
   1ac08:	mov	r2, #1
   1ac0c:	movw	r3, #645	; 0x285
   1ac10:	tst	r3, r2, lsl r0
   1ac14:	bne	1acbc <argp_parse@@Base+0x13f4>
   1ac18:	movw	r3, #1282	; 0x502
   1ac1c:	tst	r3, r2, lsl r0
   1ac20:	beq	1ac30 <argp_parse@@Base+0x1368>
   1ac24:	mov	r0, r5
   1ac28:	bl	11cd4 <fcntl64@plt>
   1ac2c:	b	1acd4 <argp_parse@@Base+0x140c>
   1ac30:	cmp	r0, #6
   1ac34:	bne	1acbc <argp_parse@@Base+0x13f4>
   1ac38:	ldr	r0, [sp, #4]
   1ac3c:	movw	r7, #64016	; 0xfa10
   1ac40:	movt	r7, #2
   1ac44:	add	r1, r0, #4
   1ac48:	str	r1, [sp, #4]
   1ac4c:	ldr	r6, [r0]
   1ac50:	ldr	r0, [r7]
   1ac54:	cmp	r0, #0
   1ac58:	blt	1acf8 <argp_parse@@Base+0x1430>
   1ac5c:	mov	r0, r5
   1ac60:	movw	r1, #1030	; 0x406
   1ac64:	mov	r2, r6
   1ac68:	bl	11cd4 <fcntl64@plt>
   1ac6c:	mov	r4, r0
   1ac70:	cmn	r0, #1
   1ac74:	bgt	1acec <argp_parse@@Base+0x1424>
   1ac78:	bl	11c50 <__errno_location@plt>
   1ac7c:	ldr	r0, [r0]
   1ac80:	cmp	r0, #22
   1ac84:	bne	1acec <argp_parse@@Base+0x1424>
   1ac88:	mov	r0, r5
   1ac8c:	mov	r1, #0
   1ac90:	mov	r2, r6
   1ac94:	bl	11cd4 <fcntl64@plt>
   1ac98:	mov	r4, r0
   1ac9c:	cmp	r0, #0
   1aca0:	blt	1acd8 <argp_parse@@Base+0x1410>
   1aca4:	mvn	r0, #0
   1aca8:	str	r0, [r7]
   1acac:	mov	r0, #1
   1acb0:	cmp	r0, #0
   1acb4:	bne	1ad24 <argp_parse@@Base+0x145c>
   1acb8:	b	1acd8 <argp_parse@@Base+0x1410>
   1acbc:	ldr	r0, [sp, #4]
   1acc0:	add	r2, r0, #4
   1acc4:	str	r2, [sp, #4]
   1acc8:	ldr	r2, [r0]
   1accc:	mov	r0, r5
   1acd0:	bl	11cd4 <fcntl64@plt>
   1acd4:	mov	r4, r0
   1acd8:	mov	r0, r4
   1acdc:	sub	sp, fp, #16
   1ace0:	pop	{r4, r5, r6, r7, fp, lr}
   1ace4:	add	sp, sp, #8
   1ace8:	bx	lr
   1acec:	mov	r0, #1
   1acf0:	str	r0, [r7]
   1acf4:	b	1acd8 <argp_parse@@Base+0x1410>
   1acf8:	mov	r0, r5
   1acfc:	mov	r1, #0
   1ad00:	mov	r2, r6
   1ad04:	bl	11cd4 <fcntl64@plt>
   1ad08:	mov	r4, r0
   1ad0c:	ldr	r0, [r7]
   1ad10:	add	r0, r0, #1
   1ad14:	clz	r0, r0
   1ad18:	lsr	r0, r0, #5
   1ad1c:	cmp	r0, #0
   1ad20:	beq	1acd8 <argp_parse@@Base+0x1410>
   1ad24:	cmp	r4, #0
   1ad28:	blt	1acd8 <argp_parse@@Base+0x1410>
   1ad2c:	mov	r0, r4
   1ad30:	mov	r1, #1
   1ad34:	bl	11cd4 <fcntl64@plt>
   1ad38:	cmp	r0, #0
   1ad3c:	blt	1ad58 <argp_parse@@Base+0x1490>
   1ad40:	orr	r2, r0, #1
   1ad44:	mov	r0, r4
   1ad48:	mov	r1, #2
   1ad4c:	bl	11cd4 <fcntl64@plt>
   1ad50:	cmn	r0, #1
   1ad54:	bne	1acd8 <argp_parse@@Base+0x1410>
   1ad58:	bl	11c50 <__errno_location@plt>
   1ad5c:	ldr	r6, [r0]
   1ad60:	mov	r5, r0
   1ad64:	mov	r0, r4
   1ad68:	bl	11e00 <close@plt>
   1ad6c:	str	r6, [r5]
   1ad70:	mvn	r4, #0
   1ad74:	b	1acd8 <argp_parse@@Base+0x1410>
   1ad78:	push	{r4, r5, r6, sl, fp, lr}
   1ad7c:	add	fp, sp, #16
   1ad80:	mov	r4, r0
   1ad84:	bl	11c50 <__errno_location@plt>
   1ad88:	ldr	r6, [r0]
   1ad8c:	mov	r5, r0
   1ad90:	mov	r0, r4
   1ad94:	bl	11a1c <free@plt>
   1ad98:	str	r6, [r5]
   1ad9c:	pop	{r4, r5, r6, sl, fp, pc}
   1ada0:	push	{fp, lr}
   1ada4:	mov	fp, sp
   1ada8:	sub	sp, sp, #16
   1adac:	mov	ip, #0
   1adb0:	str	ip, [sp, #8]
   1adb4:	str	ip, [sp, #4]
   1adb8:	ldr	ip, [fp, #8]
   1adbc:	str	ip, [sp]
   1adc0:	bl	1d378 <argp_parse@@Base+0x3ab0>
   1adc4:	mov	sp, fp
   1adc8:	pop	{fp, pc}
   1adcc:	push	{fp, lr}
   1add0:	mov	fp, sp
   1add4:	sub	sp, sp, #16
   1add8:	mov	ip, #0
   1addc:	str	ip, [sp, #12]
   1ade0:	str	ip, [sp, #4]
   1ade4:	ldr	ip, [fp, #12]
   1ade8:	str	ip, [sp, #8]
   1adec:	ldr	ip, [fp, #8]
   1adf0:	str	ip, [sp]
   1adf4:	bl	1c468 <argp_parse@@Base+0x2ba0>
   1adf8:	mov	sp, fp
   1adfc:	pop	{fp, pc}
   1ae00:	push	{fp, lr}
   1ae04:	mov	fp, sp
   1ae08:	sub	sp, sp, #16
   1ae0c:	mov	ip, #0
   1ae10:	str	ip, [sp, #8]
   1ae14:	mov	ip, #1
   1ae18:	str	ip, [sp, #4]
   1ae1c:	ldr	ip, [fp, #8]
   1ae20:	str	ip, [sp]
   1ae24:	bl	1d378 <argp_parse@@Base+0x3ab0>
   1ae28:	mov	sp, fp
   1ae2c:	pop	{fp, pc}
   1ae30:	push	{fp, lr}
   1ae34:	mov	fp, sp
   1ae38:	sub	sp, sp, #16
   1ae3c:	mov	ip, #0
   1ae40:	str	ip, [sp, #12]
   1ae44:	mov	ip, #1
   1ae48:	str	ip, [sp, #4]
   1ae4c:	ldr	ip, [fp, #12]
   1ae50:	str	ip, [sp, #8]
   1ae54:	ldr	ip, [fp, #8]
   1ae58:	str	ip, [sp]
   1ae5c:	bl	1c468 <argp_parse@@Base+0x2ba0>
   1ae60:	mov	sp, fp
   1ae64:	pop	{fp, pc}
   1ae68:	push	{r4, r5, fp, lr}
   1ae6c:	add	fp, sp, #8
   1ae70:	cmp	r0, #0
   1ae74:	beq	1af08 <argp_parse@@Base+0x1640>
   1ae78:	mov	r1, #47	; 0x2f
   1ae7c:	mov	r4, r0
   1ae80:	bl	11d28 <strrchr@plt>
   1ae84:	cmp	r0, #0
   1ae88:	mov	r5, r4
   1ae8c:	addne	r5, r0, #1
   1ae90:	sub	r0, r5, r4
   1ae94:	cmp	r0, #7
   1ae98:	blt	1aeec <argp_parse@@Base+0x1624>
   1ae9c:	movw	r1, #59999	; 0xea5f
   1aea0:	sub	r0, r5, #7
   1aea4:	mov	r2, #7
   1aea8:	movt	r1, #1
   1aeac:	bl	11ddc <strncmp@plt>
   1aeb0:	cmp	r0, #0
   1aeb4:	bne	1aeec <argp_parse@@Base+0x1624>
   1aeb8:	movw	r1, #60007	; 0xea67
   1aebc:	mov	r0, r5
   1aec0:	mov	r2, #3
   1aec4:	movt	r1, #1
   1aec8:	bl	11ddc <strncmp@plt>
   1aecc:	cmp	r0, #0
   1aed0:	beq	1aedc <argp_parse@@Base+0x1614>
   1aed4:	mov	r4, r5
   1aed8:	b	1aeec <argp_parse@@Base+0x1624>
   1aedc:	movw	r0, #62904	; 0xf5b8
   1aee0:	add	r4, r5, #3
   1aee4:	movt	r0, #2
   1aee8:	str	r4, [r0]
   1aeec:	movw	r0, #62908	; 0xf5bc
   1aef0:	movt	r0, #2
   1aef4:	str	r4, [r0]
   1aef8:	movw	r0, #64020	; 0xfa14
   1aefc:	movt	r0, #2
   1af00:	str	r4, [r0]
   1af04:	pop	{r4, r5, fp, pc}
   1af08:	movw	r0, #62912	; 0xf5c0
   1af0c:	mov	r1, #55	; 0x37
   1af10:	mov	r2, #1
   1af14:	movt	r0, #2
   1af18:	ldr	r3, [r0]
   1af1c:	movw	r0, #59943	; 0xea27
   1af20:	movt	r0, #1
   1af24:	bl	11b3c <fwrite@plt>
   1af28:	bl	11de8 <abort@plt>
   1af2c:	push	{r4, r5, fp, lr}
   1af30:	add	fp, sp, #8
   1af34:	mov	r5, r0
   1af38:	mov	r0, #33	; 0x21
   1af3c:	bl	1b668 <argp_parse@@Base+0x1da0>
   1af40:	add	r1, r5, #44	; 0x2c
   1af44:	mov	r2, #32
   1af48:	mov	r4, r0
   1af4c:	bl	11c98 <strncpy@plt>
   1af50:	mov	r5, #0
   1af54:	mov	r0, r4
   1af58:	strb	r5, [r4, #32]
   1af5c:	bl	11c20 <strlen@plt>
   1af60:	cmp	r0, #1
   1af64:	blt	1af8c <argp_parse@@Base+0x16c4>
   1af68:	add	r1, r4, r0
   1af6c:	mov	r0, r1
   1af70:	ldrb	r2, [r0, #-1]!
   1af74:	cmp	r2, #32
   1af78:	bne	1af8c <argp_parse@@Base+0x16c4>
   1af7c:	strb	r5, [r1, #-1]
   1af80:	cmp	r4, r0
   1af84:	mov	r1, r0
   1af88:	bcc	1af70 <argp_parse@@Base+0x16a8>
   1af8c:	mov	r0, r4
   1af90:	pop	{r4, r5, fp, pc}
   1af94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af98:	add	fp, sp, #28
   1af9c:	sub	sp, sp, #20
   1afa0:	mov	r6, #0
   1afa4:	mov	r5, r3
   1afa8:	str	r2, [sp, #12]
   1afac:	str	r1, [sp, #8]
   1afb0:	str	r6, [sp, #16]
   1afb4:	bl	119ec <utmpxname@plt>
   1afb8:	bl	11ab8 <setutxent@plt>
   1afbc:	bl	11df4 <getutxent@plt>
   1afc0:	cmp	r0, #0
   1afc4:	beq	1b0a0 <argp_parse@@Base+0x17d8>
   1afc8:	mov	r4, r0
   1afcc:	and	r7, r5, #1
   1afd0:	and	r8, r5, #2
   1afd4:	mov	r5, #0
   1afd8:	mov	r9, #384	; 0x180
   1afdc:	add	sl, sp, #16
   1afe0:	mov	r6, #0
   1afe4:	ldrb	r0, [r4, #44]	; 0x2c
   1afe8:	cmp	r0, #0
   1afec:	mov	r0, #0
   1aff0:	ldrhne	r0, [r4]
   1aff4:	subne	r0, r0, #7
   1aff8:	clzne	r0, r0
   1affc:	lsrne	r0, r0, #5
   1b000:	cmp	r8, #0
   1b004:	beq	1b010 <argp_parse@@Base+0x1748>
   1b008:	cmp	r0, #0
   1b00c:	beq	1b08c <argp_parse@@Base+0x17c4>
   1b010:	cmp	r7, #0
   1b014:	beq	1b04c <argp_parse@@Base+0x1784>
   1b018:	eors	r0, r0, #1
   1b01c:	bne	1b04c <argp_parse@@Base+0x1784>
   1b020:	ldr	r0, [r4, #4]
   1b024:	cmp	r0, #1
   1b028:	blt	1b04c <argp_parse@@Base+0x1784>
   1b02c:	mov	r1, #0
   1b030:	bl	11bf0 <kill@plt>
   1b034:	cmn	r0, #1
   1b038:	bgt	1b04c <argp_parse@@Base+0x1784>
   1b03c:	bl	11c50 <__errno_location@plt>
   1b040:	ldr	r0, [r0]
   1b044:	cmp	r0, #3
   1b048:	beq	1b08c <argp_parse@@Base+0x17c4>
   1b04c:	ldr	r0, [sp, #16]
   1b050:	cmp	r5, r0
   1b054:	bne	1b074 <argp_parse@@Base+0x17ac>
   1b058:	mov	r0, r6
   1b05c:	mov	r1, sl
   1b060:	mov	r2, #1
   1b064:	mvn	r3, #0
   1b068:	str	r9, [sp]
   1b06c:	bl	1b898 <argp_parse@@Base+0x1fd0>
   1b070:	mov	r6, r0
   1b074:	add	r0, r5, r5, lsl #1
   1b078:	mov	r1, r4
   1b07c:	mov	r2, #384	; 0x180
   1b080:	add	r0, r6, r0, lsl #7
   1b084:	bl	11a58 <memcpy@plt>
   1b088:	add	r5, r5, #1
   1b08c:	bl	11df4 <getutxent@plt>
   1b090:	mov	r4, r0
   1b094:	cmp	r0, #0
   1b098:	bne	1afe4 <argp_parse@@Base+0x171c>
   1b09c:	b	1b0a4 <argp_parse@@Base+0x17dc>
   1b0a0:	mov	r5, #0
   1b0a4:	bl	11cec <endutxent@plt>
   1b0a8:	ldr	r0, [sp, #8]
   1b0ac:	str	r5, [r0]
   1b0b0:	ldr	r0, [sp, #12]
   1b0b4:	str	r6, [r0]
   1b0b8:	mov	r0, #0
   1b0bc:	sub	sp, fp, #28
   1b0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0c4:	push	{r4, r5, r6, r7, fp, lr}
   1b0c8:	add	fp, sp, #16
   1b0cc:	sub	sp, sp, #32
   1b0d0:	ldr	r7, [fp, #12]
   1b0d4:	ldr	r6, [fp, #8]
   1b0d8:	mov	r4, r2
   1b0dc:	mov	r5, r0
   1b0e0:	cmp	r1, #0
   1b0e4:	beq	1b104 <argp_parse@@Base+0x183c>
   1b0e8:	mov	r2, r1
   1b0ec:	movw	r1, #60011	; 0xea6b
   1b0f0:	str	r3, [sp]
   1b0f4:	mov	r0, r5
   1b0f8:	mov	r3, r4
   1b0fc:	movt	r1, #1
   1b100:	b	1b114 <argp_parse@@Base+0x184c>
   1b104:	movw	r1, #60023	; 0xea77
   1b108:	mov	r0, r5
   1b10c:	mov	r2, r4
   1b110:	movt	r1, #1
   1b114:	bl	11c44 <fprintf@plt>
   1b118:	movw	r1, #60787	; 0xed73
   1b11c:	movw	r2, #60030	; 0xea7e
   1b120:	mov	r0, r5
   1b124:	movw	r3, #2022	; 0x7e6
   1b128:	movt	r1, #1
   1b12c:	movt	r2, #1
   1b130:	bl	11c44 <fprintf@plt>
   1b134:	mov	r0, #10
   1b138:	mov	r1, r5
   1b13c:	bl	11d40 <fputc@plt>
   1b140:	movw	r1, #60034	; 0xea82
   1b144:	movw	r2, #60205	; 0xeb2d
   1b148:	mov	r0, r5
   1b14c:	movt	r1, #1
   1b150:	movt	r2, #1
   1b154:	bl	11c44 <fprintf@plt>
   1b158:	mov	r0, #10
   1b15c:	mov	r1, r5
   1b160:	bl	11d40 <fputc@plt>
   1b164:	cmp	r7, #9
   1b168:	bhi	1b1a4 <argp_parse@@Base+0x18dc>
   1b16c:	add	r0, pc, #0
   1b170:	ldr	pc, [r0, r7, lsl #2]
   1b174:	muleq	r1, ip, r1
   1b178:	ldrdeq	fp, [r1], -r8
   1b17c:	strdeq	fp, [r1], -r4
   1b180:	andeq	fp, r1, r0, lsl r2
   1b184:	andeq	fp, r1, r8, lsr #4
   1b188:	andeq	fp, r1, r4, asr #4
   1b18c:	andeq	fp, r1, r0, ror #4
   1b190:	andeq	fp, r1, r4, lsl #5
   1b194:	andeq	fp, r1, r4, ror #5
   1b198:			; <UNDEFINED> instruction: 0x0001b2b0
   1b19c:	sub	sp, fp, #16
   1b1a0:	pop	{r4, r5, r6, r7, fp, pc}
   1b1a4:	add	r7, r6, #8
   1b1a8:	ldm	r6, {r2, r3}
   1b1ac:	add	lr, r6, #20
   1b1b0:	ldm	r7, {r0, r1, r7}
   1b1b4:	ldm	lr, {r4, ip, lr}
   1b1b8:	ldr	r6, [r6, #32]
   1b1bc:	stm	sp, {r0, r1, r7}
   1b1c0:	movw	r1, #60558	; 0xec8e
   1b1c4:	add	r0, sp, #12
   1b1c8:	stm	r0, {r4, ip, lr}
   1b1cc:	str	r6, [sp, #24]
   1b1d0:	movt	r1, #1
   1b1d4:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b1d8:	ldr	r2, [r6]
   1b1dc:	movw	r1, #60239	; 0xeb4f
   1b1e0:	mov	r0, r5
   1b1e4:	movt	r1, #1
   1b1e8:	sub	sp, fp, #16
   1b1ec:	pop	{r4, r5, r6, r7, fp, lr}
   1b1f0:	b	11c44 <fprintf@plt>
   1b1f4:	ldm	r6, {r2, r3}
   1b1f8:	movw	r1, #60255	; 0xeb5f
   1b1fc:	mov	r0, r5
   1b200:	movt	r1, #1
   1b204:	sub	sp, fp, #16
   1b208:	pop	{r4, r5, r6, r7, fp, lr}
   1b20c:	b	11c44 <fprintf@plt>
   1b210:	ldm	r6, {r2, r3}
   1b214:	ldr	r0, [r6, #8]
   1b218:	movw	r1, #60278	; 0xeb76
   1b21c:	movt	r1, #1
   1b220:	str	r0, [sp]
   1b224:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b228:	ldm	r6, {r2, r3}
   1b22c:	ldr	r0, [r6, #8]
   1b230:	ldr	r1, [r6, #12]
   1b234:	stm	sp, {r0, r1}
   1b238:	movw	r1, #60306	; 0xeb92
   1b23c:	movt	r1, #1
   1b240:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b244:	add	r7, r6, #8
   1b248:	ldm	r6, {r2, r3}
   1b24c:	ldm	r7, {r0, r1, r7}
   1b250:	stm	sp, {r0, r1, r7}
   1b254:	movw	r1, #60338	; 0xebb2
   1b258:	movt	r1, #1
   1b25c:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b260:	add	r7, r6, #8
   1b264:	ldm	r6, {r2, r3}
   1b268:	ldm	r7, {r0, r1, r7}
   1b26c:	ldr	r6, [r6, #20]
   1b270:	stm	sp, {r0, r1, r7}
   1b274:	movw	r1, #60374	; 0xebd6
   1b278:	str	r6, [sp, #12]
   1b27c:	movt	r1, #1
   1b280:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b284:	add	r7, r6, #8
   1b288:	ldm	r6, {r2, r3}
   1b28c:	ldm	r7, {r0, r1, r7}
   1b290:	ldr	r4, [r6, #20]
   1b294:	ldr	r6, [r6, #24]
   1b298:	stm	sp, {r0, r1, r7}
   1b29c:	movw	r1, #60414	; 0xebfe
   1b2a0:	str	r4, [sp, #12]
   1b2a4:	str	r6, [sp, #16]
   1b2a8:	movt	r1, #1
   1b2ac:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b2b0:	add	r7, r6, #8
   1b2b4:	ldm	r6, {r2, r3}
   1b2b8:	add	lr, r6, #20
   1b2bc:	ldm	r7, {r0, r1, r7}
   1b2c0:	ldm	lr, {r4, ip, lr}
   1b2c4:	ldr	r6, [r6, #32]
   1b2c8:	stm	sp, {r0, r1, r7}
   1b2cc:	movw	r1, #60506	; 0xec5a
   1b2d0:	add	r0, sp, #12
   1b2d4:	stm	r0, {r4, ip, lr}
   1b2d8:	str	r6, [sp, #24]
   1b2dc:	movt	r1, #1
   1b2e0:	b	1b314 <argp_parse@@Base+0x1a4c>
   1b2e4:	add	r7, r6, #8
   1b2e8:	ldm	r6, {r2, r3}
   1b2ec:	ldm	r7, {r0, r1, r7}
   1b2f0:	ldr	r4, [r6, #20]
   1b2f4:	ldr	ip, [r6, #24]
   1b2f8:	ldr	r6, [r6, #28]
   1b2fc:	stm	sp, {r0, r1, r7}
   1b300:	movw	r1, #60458	; 0xec2a
   1b304:	str	r4, [sp, #12]
   1b308:	str	ip, [sp, #16]
   1b30c:	str	r6, [sp, #20]
   1b310:	movt	r1, #1
   1b314:	mov	r0, r5
   1b318:	bl	11c44 <fprintf@plt>
   1b31c:	sub	sp, fp, #16
   1b320:	pop	{r4, r5, r6, r7, fp, pc}
   1b324:	push	{r4, sl, fp, lr}
   1b328:	add	fp, sp, #8
   1b32c:	sub	sp, sp, #8
   1b330:	ldr	ip, [fp, #8]
   1b334:	mov	lr, #0
   1b338:	ldr	r4, [ip, lr, lsl #2]
   1b33c:	add	lr, lr, #1
   1b340:	cmp	r4, #0
   1b344:	bne	1b338 <argp_parse@@Base+0x1a70>
   1b348:	sub	r4, lr, #1
   1b34c:	str	ip, [sp]
   1b350:	str	r4, [sp, #4]
   1b354:	bl	1b0c4 <argp_parse@@Base+0x17fc>
   1b358:	sub	sp, fp, #8
   1b35c:	pop	{r4, sl, fp, pc}
   1b360:	push	{fp, lr}
   1b364:	mov	fp, sp
   1b368:	sub	sp, sp, #48	; 0x30
   1b36c:	ldr	ip, [fp, #8]
   1b370:	ldr	lr, [ip]
   1b374:	cmp	lr, #0
   1b378:	str	lr, [sp, #8]
   1b37c:	beq	1b418 <argp_parse@@Base+0x1b50>
   1b380:	ldr	lr, [ip, #4]
   1b384:	cmp	lr, #0
   1b388:	str	lr, [sp, #12]
   1b38c:	beq	1b420 <argp_parse@@Base+0x1b58>
   1b390:	ldr	lr, [ip, #8]
   1b394:	cmp	lr, #0
   1b398:	str	lr, [sp, #16]
   1b39c:	beq	1b428 <argp_parse@@Base+0x1b60>
   1b3a0:	ldr	lr, [ip, #12]
   1b3a4:	cmp	lr, #0
   1b3a8:	str	lr, [sp, #20]
   1b3ac:	beq	1b430 <argp_parse@@Base+0x1b68>
   1b3b0:	ldr	lr, [ip, #16]
   1b3b4:	cmp	lr, #0
   1b3b8:	str	lr, [sp, #24]
   1b3bc:	beq	1b438 <argp_parse@@Base+0x1b70>
   1b3c0:	ldr	lr, [ip, #20]
   1b3c4:	cmp	lr, #0
   1b3c8:	str	lr, [sp, #28]
   1b3cc:	beq	1b440 <argp_parse@@Base+0x1b78>
   1b3d0:	ldr	lr, [ip, #24]
   1b3d4:	cmp	lr, #0
   1b3d8:	str	lr, [sp, #32]
   1b3dc:	beq	1b448 <argp_parse@@Base+0x1b80>
   1b3e0:	ldr	lr, [ip, #28]
   1b3e4:	cmp	lr, #0
   1b3e8:	str	lr, [sp, #36]	; 0x24
   1b3ec:	beq	1b450 <argp_parse@@Base+0x1b88>
   1b3f0:	ldr	lr, [ip, #32]
   1b3f4:	cmp	lr, #0
   1b3f8:	str	lr, [sp, #40]	; 0x28
   1b3fc:	beq	1b458 <argp_parse@@Base+0x1b90>
   1b400:	ldr	lr, [ip, #36]	; 0x24
   1b404:	mov	ip, #10
   1b408:	cmp	lr, #0
   1b40c:	str	lr, [sp, #44]	; 0x2c
   1b410:	movweq	ip, #9
   1b414:	b	1b45c <argp_parse@@Base+0x1b94>
   1b418:	mov	ip, #0
   1b41c:	b	1b45c <argp_parse@@Base+0x1b94>
   1b420:	mov	ip, #1
   1b424:	b	1b45c <argp_parse@@Base+0x1b94>
   1b428:	mov	ip, #2
   1b42c:	b	1b45c <argp_parse@@Base+0x1b94>
   1b430:	mov	ip, #3
   1b434:	b	1b45c <argp_parse@@Base+0x1b94>
   1b438:	mov	ip, #4
   1b43c:	b	1b45c <argp_parse@@Base+0x1b94>
   1b440:	mov	ip, #5
   1b444:	b	1b45c <argp_parse@@Base+0x1b94>
   1b448:	mov	ip, #6
   1b44c:	b	1b45c <argp_parse@@Base+0x1b94>
   1b450:	mov	ip, #7
   1b454:	b	1b45c <argp_parse@@Base+0x1b94>
   1b458:	mov	ip, #8
   1b45c:	add	lr, sp, #8
   1b460:	str	ip, [sp, #4]
   1b464:	str	lr, [sp]
   1b468:	bl	1b0c4 <argp_parse@@Base+0x17fc>
   1b46c:	mov	sp, fp
   1b470:	pop	{fp, pc}
   1b474:	push	{fp, lr}
   1b478:	mov	fp, sp
   1b47c:	sub	sp, sp, #56	; 0x38
   1b480:	add	ip, fp, #8
   1b484:	str	ip, [sp, #12]
   1b488:	ldr	lr, [fp, #8]
   1b48c:	cmp	lr, #0
   1b490:	str	lr, [sp, #16]
   1b494:	beq	1b530 <argp_parse@@Base+0x1c68>
   1b498:	ldr	lr, [ip, #4]
   1b49c:	cmp	lr, #0
   1b4a0:	str	lr, [sp, #20]
   1b4a4:	beq	1b538 <argp_parse@@Base+0x1c70>
   1b4a8:	ldr	lr, [ip, #8]
   1b4ac:	cmp	lr, #0
   1b4b0:	str	lr, [sp, #24]
   1b4b4:	beq	1b540 <argp_parse@@Base+0x1c78>
   1b4b8:	ldr	lr, [ip, #12]
   1b4bc:	cmp	lr, #0
   1b4c0:	str	lr, [sp, #28]
   1b4c4:	beq	1b548 <argp_parse@@Base+0x1c80>
   1b4c8:	ldr	lr, [ip, #16]
   1b4cc:	cmp	lr, #0
   1b4d0:	str	lr, [sp, #32]
   1b4d4:	beq	1b550 <argp_parse@@Base+0x1c88>
   1b4d8:	ldr	lr, [ip, #20]
   1b4dc:	cmp	lr, #0
   1b4e0:	str	lr, [sp, #36]	; 0x24
   1b4e4:	beq	1b558 <argp_parse@@Base+0x1c90>
   1b4e8:	ldr	lr, [ip, #24]
   1b4ec:	cmp	lr, #0
   1b4f0:	str	lr, [sp, #40]	; 0x28
   1b4f4:	beq	1b560 <argp_parse@@Base+0x1c98>
   1b4f8:	ldr	lr, [ip, #28]
   1b4fc:	cmp	lr, #0
   1b500:	str	lr, [sp, #44]	; 0x2c
   1b504:	beq	1b568 <argp_parse@@Base+0x1ca0>
   1b508:	ldr	lr, [ip, #32]
   1b50c:	cmp	lr, #0
   1b510:	str	lr, [sp, #48]	; 0x30
   1b514:	beq	1b570 <argp_parse@@Base+0x1ca8>
   1b518:	ldr	lr, [ip, #36]	; 0x24
   1b51c:	mov	ip, #10
   1b520:	cmp	lr, #0
   1b524:	str	lr, [sp, #52]	; 0x34
   1b528:	movweq	ip, #9
   1b52c:	b	1b574 <argp_parse@@Base+0x1cac>
   1b530:	mov	ip, #0
   1b534:	b	1b574 <argp_parse@@Base+0x1cac>
   1b538:	mov	ip, #1
   1b53c:	b	1b574 <argp_parse@@Base+0x1cac>
   1b540:	mov	ip, #2
   1b544:	b	1b574 <argp_parse@@Base+0x1cac>
   1b548:	mov	ip, #3
   1b54c:	b	1b574 <argp_parse@@Base+0x1cac>
   1b550:	mov	ip, #4
   1b554:	b	1b574 <argp_parse@@Base+0x1cac>
   1b558:	mov	ip, #5
   1b55c:	b	1b574 <argp_parse@@Base+0x1cac>
   1b560:	mov	ip, #6
   1b564:	b	1b574 <argp_parse@@Base+0x1cac>
   1b568:	mov	ip, #7
   1b56c:	b	1b574 <argp_parse@@Base+0x1cac>
   1b570:	mov	ip, #8
   1b574:	add	lr, sp, #16
   1b578:	str	ip, [sp, #4]
   1b57c:	str	lr, [sp]
   1b580:	bl	1b0c4 <argp_parse@@Base+0x17fc>
   1b584:	mov	sp, fp
   1b588:	pop	{fp, pc}
   1b58c:	push	{fp, lr}
   1b590:	mov	fp, sp
   1b594:	movw	r0, #62916	; 0xf5c4
   1b598:	movt	r0, #2
   1b59c:	ldr	r1, [r0]
   1b5a0:	mov	r0, #10
   1b5a4:	bl	11d40 <fputc@plt>
   1b5a8:	movw	r0, #60618	; 0xecca
   1b5ac:	movw	r1, #60638	; 0xecde
   1b5b0:	movt	r0, #1
   1b5b4:	movt	r1, #1
   1b5b8:	bl	119c8 <printf@plt>
   1b5bc:	movw	r0, #60660	; 0xecf4
   1b5c0:	movw	r1, #59916	; 0xea0c
   1b5c4:	movw	r2, #60680	; 0xed08
   1b5c8:	movt	r0, #1
   1b5cc:	movt	r1, #1
   1b5d0:	movt	r2, #1
   1b5d4:	bl	119c8 <printf@plt>
   1b5d8:	movw	r0, #60719	; 0xed2f
   1b5dc:	movw	r1, #60758	; 0xed56
   1b5e0:	movt	r0, #1
   1b5e4:	movt	r1, #1
   1b5e8:	pop	{fp, lr}
   1b5ec:	b	119c8 <printf@plt>
   1b5f0:	push	{r4, r5, r6, sl, fp, lr}
   1b5f4:	add	fp, sp, #16
   1b5f8:	mov	r4, r2
   1b5fc:	mov	r5, r1
   1b600:	mov	r6, r0
   1b604:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b608:	cmp	r0, #0
   1b60c:	popne	{r4, r5, r6, sl, fp, pc}
   1b610:	cmp	r6, #0
   1b614:	beq	1b628 <argp_parse@@Base+0x1d60>
   1b618:	cmp	r5, #0
   1b61c:	cmpne	r4, #0
   1b620:	bne	1b628 <argp_parse@@Base+0x1d60>
   1b624:	pop	{r4, r5, r6, sl, fp, pc}
   1b628:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b62c:	push	{r4, r5, r6, sl, fp, lr}
   1b630:	add	fp, sp, #16
   1b634:	mov	r4, r2
   1b638:	mov	r5, r1
   1b63c:	mov	r6, r0
   1b640:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b644:	cmp	r0, #0
   1b648:	popne	{r4, r5, r6, sl, fp, pc}
   1b64c:	cmp	r6, #0
   1b650:	beq	1b664 <argp_parse@@Base+0x1d9c>
   1b654:	cmp	r5, #0
   1b658:	cmpne	r4, #0
   1b65c:	bne	1b664 <argp_parse@@Base+0x1d9c>
   1b660:	pop	{r4, r5, r6, sl, fp, pc}
   1b664:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b668:	push	{fp, lr}
   1b66c:	mov	fp, sp
   1b670:	bl	1bc4c <argp_parse@@Base+0x2384>
   1b674:	cmp	r0, #0
   1b678:	popne	{fp, pc}
   1b67c:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b680:	push	{fp, lr}
   1b684:	mov	fp, sp
   1b688:	bl	1bc4c <argp_parse@@Base+0x2384>
   1b68c:	cmp	r0, #0
   1b690:	popne	{fp, pc}
   1b694:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b698:	push	{fp, lr}
   1b69c:	mov	fp, sp
   1b6a0:	bl	1bc4c <argp_parse@@Base+0x2384>
   1b6a4:	cmp	r0, #0
   1b6a8:	popne	{fp, pc}
   1b6ac:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b6b0:	push	{r4, r5, fp, lr}
   1b6b4:	add	fp, sp, #8
   1b6b8:	mov	r4, r1
   1b6bc:	mov	r5, r0
   1b6c0:	bl	1bc7c <argp_parse@@Base+0x23b4>
   1b6c4:	cmp	r0, #0
   1b6c8:	popne	{r4, r5, fp, pc}
   1b6cc:	cmp	r5, #0
   1b6d0:	beq	1b6e0 <argp_parse@@Base+0x1e18>
   1b6d4:	cmp	r4, #0
   1b6d8:	bne	1b6e0 <argp_parse@@Base+0x1e18>
   1b6dc:	pop	{r4, r5, fp, pc}
   1b6e0:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b6e4:	push	{fp, lr}
   1b6e8:	mov	fp, sp
   1b6ec:	cmp	r1, #0
   1b6f0:	orreq	r1, r1, #1
   1b6f4:	bl	1bc7c <argp_parse@@Base+0x23b4>
   1b6f8:	cmp	r0, #0
   1b6fc:	popne	{fp, pc}
   1b700:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b704:	push	{fp, lr}
   1b708:	mov	fp, sp
   1b70c:	clz	r3, r2
   1b710:	lsr	ip, r3, #5
   1b714:	clz	r3, r1
   1b718:	lsr	r3, r3, #5
   1b71c:	orrs	r3, r3, ip
   1b720:	movwne	r1, #1
   1b724:	movwne	r2, #1
   1b728:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b72c:	cmp	r0, #0
   1b730:	popne	{fp, pc}
   1b734:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b738:	push	{fp, lr}
   1b73c:	mov	fp, sp
   1b740:	mov	r2, r1
   1b744:	mov	r1, r0
   1b748:	mov	r0, #0
   1b74c:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b750:	cmp	r0, #0
   1b754:	popne	{fp, pc}
   1b758:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b75c:	push	{fp, lr}
   1b760:	mov	fp, sp
   1b764:	mov	r2, r1
   1b768:	mov	r1, r0
   1b76c:	clz	r0, r2
   1b770:	clz	r3, r1
   1b774:	lsr	r0, r0, #5
   1b778:	lsr	r3, r3, #5
   1b77c:	orrs	r0, r3, r0
   1b780:	movwne	r1, #1
   1b784:	movwne	r2, #1
   1b788:	mov	r0, #0
   1b78c:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b790:	cmp	r0, #0
   1b794:	popne	{fp, pc}
   1b798:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b79c:	push	{r4, r5, r6, sl, fp, lr}
   1b7a0:	add	fp, sp, #16
   1b7a4:	ldr	r5, [r1]
   1b7a8:	mov	r4, r1
   1b7ac:	mov	r6, r0
   1b7b0:	cmp	r0, #0
   1b7b4:	beq	1b7cc <argp_parse@@Base+0x1f04>
   1b7b8:	mov	r0, #1
   1b7bc:	add	r0, r0, r5, lsr #1
   1b7c0:	adds	r5, r5, r0
   1b7c4:	bcc	1b7d4 <argp_parse@@Base+0x1f0c>
   1b7c8:	b	1b810 <argp_parse@@Base+0x1f48>
   1b7cc:	cmp	r5, #0
   1b7d0:	movweq	r5, #64	; 0x40
   1b7d4:	mov	r0, r6
   1b7d8:	mov	r1, r5
   1b7dc:	mov	r2, #1
   1b7e0:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b7e4:	cmp	r5, #0
   1b7e8:	mov	r1, r5
   1b7ec:	movwne	r1, #1
   1b7f0:	cmp	r0, #0
   1b7f4:	bne	1b808 <argp_parse@@Base+0x1f40>
   1b7f8:	clz	r2, r6
   1b7fc:	lsr	r2, r2, #5
   1b800:	orrs	r1, r2, r1
   1b804:	bne	1b810 <argp_parse@@Base+0x1f48>
   1b808:	str	r5, [r4]
   1b80c:	pop	{r4, r5, r6, sl, fp, pc}
   1b810:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b814:	push	{r4, r5, r6, r7, fp, lr}
   1b818:	add	fp, sp, #16
   1b81c:	ldr	r5, [r1]
   1b820:	mov	r6, r2
   1b824:	mov	r4, r1
   1b828:	mov	r7, r0
   1b82c:	cmp	r0, #0
   1b830:	beq	1b848 <argp_parse@@Base+0x1f80>
   1b834:	mov	r0, #1
   1b838:	add	r0, r0, r5, lsr #1
   1b83c:	adds	r5, r5, r0
   1b840:	bcc	1b860 <argp_parse@@Base+0x1f98>
   1b844:	b	1b894 <argp_parse@@Base+0x1fcc>
   1b848:	cmp	r5, #0
   1b84c:	bne	1b860 <argp_parse@@Base+0x1f98>
   1b850:	mov	r0, #64	; 0x40
   1b854:	cmp	r6, #64	; 0x40
   1b858:	udiv	r5, r0, r6
   1b85c:	addhi	r5, r5, #1
   1b860:	mov	r0, r7
   1b864:	mov	r1, r5
   1b868:	mov	r2, r6
   1b86c:	bl	1d474 <argp_parse@@Base+0x3bac>
   1b870:	cmp	r0, #0
   1b874:	bne	1b88c <argp_parse@@Base+0x1fc4>
   1b878:	cmp	r7, #0
   1b87c:	beq	1b894 <argp_parse@@Base+0x1fcc>
   1b880:	cmp	r6, #0
   1b884:	cmpne	r5, #0
   1b888:	bne	1b894 <argp_parse@@Base+0x1fcc>
   1b88c:	str	r5, [r4]
   1b890:	pop	{r4, r5, r6, r7, fp, pc}
   1b894:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1b898:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b89c:	add	fp, sp, #24
   1b8a0:	mov	r8, r1
   1b8a4:	ldr	r1, [r1]
   1b8a8:	mov	r5, r0
   1b8ac:	add	r0, r1, r1, asr #1
   1b8b0:	cmp	r0, r1
   1b8b4:	mvnvs	r0, #-2147483648	; 0x80000000
   1b8b8:	cmp	r0, r3
   1b8bc:	mov	r7, r0
   1b8c0:	movgt	r7, r3
   1b8c4:	cmn	r3, #1
   1b8c8:	movle	r7, r0
   1b8cc:	ldr	r0, [fp, #8]
   1b8d0:	cmn	r0, #1
   1b8d4:	ble	1b8fc <argp_parse@@Base+0x2034>
   1b8d8:	cmp	r0, #0
   1b8dc:	beq	1b950 <argp_parse@@Base+0x2088>
   1b8e0:	cmn	r7, #1
   1b8e4:	ble	1b924 <argp_parse@@Base+0x205c>
   1b8e8:	mvn	r4, #-2147483648	; 0x80000000
   1b8ec:	udiv	r6, r4, r0
   1b8f0:	cmp	r6, r7
   1b8f4:	bge	1b950 <argp_parse@@Base+0x2088>
   1b8f8:	b	1b960 <argp_parse@@Base+0x2098>
   1b8fc:	cmn	r7, #1
   1b900:	ble	1b940 <argp_parse@@Base+0x2078>
   1b904:	cmn	r0, #1
   1b908:	beq	1b950 <argp_parse@@Base+0x2088>
   1b90c:	mov	r6, #-2147483648	; 0x80000000
   1b910:	mvn	r4, #-2147483648	; 0x80000000
   1b914:	sdiv	r6, r6, r0
   1b918:	cmp	r6, r7
   1b91c:	bge	1b950 <argp_parse@@Base+0x2088>
   1b920:	b	1b960 <argp_parse@@Base+0x2098>
   1b924:	beq	1b950 <argp_parse@@Base+0x2088>
   1b928:	mov	r6, #-2147483648	; 0x80000000
   1b92c:	mvn	r4, #-2147483648	; 0x80000000
   1b930:	sdiv	r6, r6, r7
   1b934:	cmp	r6, r0
   1b938:	bge	1b950 <argp_parse@@Base+0x2088>
   1b93c:	b	1b960 <argp_parse@@Base+0x2098>
   1b940:	mvn	r4, #-2147483648	; 0x80000000
   1b944:	sdiv	r6, r4, r0
   1b948:	cmp	r7, r6
   1b94c:	blt	1b960 <argp_parse@@Base+0x2098>
   1b950:	mul	r6, r7, r0
   1b954:	mov	r4, #64	; 0x40
   1b958:	cmp	r6, #63	; 0x3f
   1b95c:	bgt	1b968 <argp_parse@@Base+0x20a0>
   1b960:	sdiv	r7, r4, r0
   1b964:	mul	r6, r7, r0
   1b968:	cmp	r5, #0
   1b96c:	moveq	r4, #0
   1b970:	streq	r4, [r8]
   1b974:	sub	r4, r7, r1
   1b978:	cmp	r4, r2
   1b97c:	bge	1ba28 <argp_parse@@Base+0x2160>
   1b980:	add	r7, r1, r2
   1b984:	mov	r6, #0
   1b988:	mov	r2, #0
   1b98c:	cmp	r7, r3
   1b990:	movwgt	r6, #1
   1b994:	cmn	r3, #1
   1b998:	movwgt	r2, #1
   1b99c:	cmp	r7, r1
   1b9a0:	bvs	1ba5c <argp_parse@@Base+0x2194>
   1b9a4:	ands	r1, r2, r6
   1b9a8:	bne	1ba5c <argp_parse@@Base+0x2194>
   1b9ac:	cmn	r0, #1
   1b9b0:	ble	1b9d8 <argp_parse@@Base+0x2110>
   1b9b4:	cmp	r0, #0
   1b9b8:	beq	1ba24 <argp_parse@@Base+0x215c>
   1b9bc:	cmn	r7, #1
   1b9c0:	ble	1b9fc <argp_parse@@Base+0x2134>
   1b9c4:	mvn	r1, #-2147483648	; 0x80000000
   1b9c8:	udiv	r1, r1, r0
   1b9cc:	cmp	r1, r7
   1b9d0:	bge	1ba24 <argp_parse@@Base+0x215c>
   1b9d4:	b	1ba5c <argp_parse@@Base+0x2194>
   1b9d8:	cmn	r7, #1
   1b9dc:	ble	1ba14 <argp_parse@@Base+0x214c>
   1b9e0:	cmn	r0, #1
   1b9e4:	beq	1ba24 <argp_parse@@Base+0x215c>
   1b9e8:	mov	r1, #-2147483648	; 0x80000000
   1b9ec:	sdiv	r1, r1, r0
   1b9f0:	cmp	r1, r7
   1b9f4:	bge	1ba24 <argp_parse@@Base+0x215c>
   1b9f8:	b	1ba5c <argp_parse@@Base+0x2194>
   1b9fc:	beq	1ba24 <argp_parse@@Base+0x215c>
   1ba00:	mov	r1, #-2147483648	; 0x80000000
   1ba04:	sdiv	r1, r1, r7
   1ba08:	cmp	r1, r0
   1ba0c:	bge	1ba24 <argp_parse@@Base+0x215c>
   1ba10:	b	1ba5c <argp_parse@@Base+0x2194>
   1ba14:	mvn	r1, #-2147483648	; 0x80000000
   1ba18:	sdiv	r1, r1, r0
   1ba1c:	cmp	r7, r1
   1ba20:	blt	1ba5c <argp_parse@@Base+0x2194>
   1ba24:	mul	r6, r7, r0
   1ba28:	mov	r0, r5
   1ba2c:	mov	r1, r6
   1ba30:	bl	1bc7c <argp_parse@@Base+0x23b4>
   1ba34:	cmp	r6, #0
   1ba38:	movwne	r6, #1
   1ba3c:	cmp	r0, #0
   1ba40:	bne	1ba54 <argp_parse@@Base+0x218c>
   1ba44:	clz	r1, r5
   1ba48:	lsr	r1, r1, #5
   1ba4c:	orrs	r1, r1, r6
   1ba50:	bne	1ba5c <argp_parse@@Base+0x2194>
   1ba54:	str	r7, [r8]
   1ba58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ba5c:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1ba60:	push	{fp, lr}
   1ba64:	mov	fp, sp
   1ba68:	mov	r1, #1
   1ba6c:	bl	1bbf8 <argp_parse@@Base+0x2330>
   1ba70:	cmp	r0, #0
   1ba74:	popne	{fp, pc}
   1ba78:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1ba7c:	push	{fp, lr}
   1ba80:	mov	fp, sp
   1ba84:	bl	1bbf8 <argp_parse@@Base+0x2330>
   1ba88:	cmp	r0, #0
   1ba8c:	popne	{fp, pc}
   1ba90:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1ba94:	push	{fp, lr}
   1ba98:	mov	fp, sp
   1ba9c:	mov	r1, #1
   1baa0:	bl	1bbf8 <argp_parse@@Base+0x2330>
   1baa4:	cmp	r0, #0
   1baa8:	popne	{fp, pc}
   1baac:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bab0:	push	{fp, lr}
   1bab4:	mov	fp, sp
   1bab8:	bl	1bbf8 <argp_parse@@Base+0x2330>
   1babc:	cmp	r0, #0
   1bac0:	popne	{fp, pc}
   1bac4:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bac8:	push	{r4, r5, r6, sl, fp, lr}
   1bacc:	add	fp, sp, #16
   1bad0:	mov	r5, r0
   1bad4:	mov	r0, r1
   1bad8:	mov	r4, r1
   1badc:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bae0:	cmp	r0, #0
   1bae4:	beq	1bb00 <argp_parse@@Base+0x2238>
   1bae8:	mov	r1, r5
   1baec:	mov	r2, r4
   1baf0:	mov	r6, r0
   1baf4:	bl	11a58 <memcpy@plt>
   1baf8:	mov	r0, r6
   1bafc:	pop	{r4, r5, r6, sl, fp, pc}
   1bb00:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bb04:	push	{r4, r5, r6, sl, fp, lr}
   1bb08:	add	fp, sp, #16
   1bb0c:	mov	r5, r0
   1bb10:	mov	r0, r1
   1bb14:	mov	r4, r1
   1bb18:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bb1c:	cmp	r0, #0
   1bb20:	beq	1bb3c <argp_parse@@Base+0x2274>
   1bb24:	mov	r1, r5
   1bb28:	mov	r2, r4
   1bb2c:	mov	r6, r0
   1bb30:	bl	11a58 <memcpy@plt>
   1bb34:	mov	r0, r6
   1bb38:	pop	{r4, r5, r6, sl, fp, pc}
   1bb3c:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bb40:	push	{r4, r5, r6, sl, fp, lr}
   1bb44:	add	fp, sp, #16
   1bb48:	mov	r5, r0
   1bb4c:	add	r0, r1, #1
   1bb50:	mov	r4, r1
   1bb54:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bb58:	cmp	r0, #0
   1bb5c:	beq	1bb84 <argp_parse@@Base+0x22bc>
   1bb60:	mov	r6, r0
   1bb64:	mov	r0, #0
   1bb68:	mov	r1, r5
   1bb6c:	mov	r2, r4
   1bb70:	strb	r0, [r6, r4]
   1bb74:	mov	r0, r6
   1bb78:	bl	11a58 <memcpy@plt>
   1bb7c:	mov	r0, r6
   1bb80:	pop	{r4, r5, r6, sl, fp, pc}
   1bb84:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bb88:	push	{r4, r5, r6, sl, fp, lr}
   1bb8c:	add	fp, sp, #16
   1bb90:	mov	r4, r0
   1bb94:	bl	11c20 <strlen@plt>
   1bb98:	add	r5, r0, #1
   1bb9c:	mov	r0, r5
   1bba0:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bba4:	cmp	r0, #0
   1bba8:	beq	1bbc4 <argp_parse@@Base+0x22fc>
   1bbac:	mov	r1, r4
   1bbb0:	mov	r2, r5
   1bbb4:	mov	r6, r0
   1bbb8:	bl	11a58 <memcpy@plt>
   1bbbc:	mov	r0, r6
   1bbc0:	pop	{r4, r5, r6, sl, fp, pc}
   1bbc4:	bl	1bbc8 <argp_parse@@Base+0x2300>
   1bbc8:	push	{fp, lr}
   1bbcc:	mov	fp, sp
   1bbd0:	movw	r0, #62884	; 0xf5a4
   1bbd4:	movw	r2, #58708	; 0xe554
   1bbd8:	movw	r3, #60834	; 0xeda2
   1bbdc:	mov	r1, #0
   1bbe0:	movt	r0, #2
   1bbe4:	movt	r2, #1
   1bbe8:	movt	r3, #1
   1bbec:	ldr	r0, [r0]
   1bbf0:	bl	11b6c <error@plt>
   1bbf4:	bl	11de8 <abort@plt>
   1bbf8:	clz	r2, r1
   1bbfc:	clz	r3, r0
   1bc00:	lsr	r2, r2, #5
   1bc04:	lsr	r3, r3, #5
   1bc08:	orrs	r2, r3, r2
   1bc0c:	movwne	r1, #1
   1bc10:	movwne	r0, #1
   1bc14:	cmp	r1, #0
   1bc18:	beq	1bc48 <argp_parse@@Base+0x2380>
   1bc1c:	mvn	r2, #-2147483648	; 0x80000000
   1bc20:	udiv	r2, r2, r1
   1bc24:	cmp	r2, r0
   1bc28:	bcs	1bc48 <argp_parse@@Base+0x2380>
   1bc2c:	push	{fp, lr}
   1bc30:	mov	fp, sp
   1bc34:	bl	11c50 <__errno_location@plt>
   1bc38:	mov	r1, #12
   1bc3c:	str	r1, [r0]
   1bc40:	mov	r0, #0
   1bc44:	pop	{fp, pc}
   1bc48:	b	11974 <calloc@plt>
   1bc4c:	cmp	r0, #0
   1bc50:	movweq	r0, #1
   1bc54:	cmn	r0, #1
   1bc58:	ble	1bc60 <argp_parse@@Base+0x2398>
   1bc5c:	b	11ba8 <malloc@plt>
   1bc60:	push	{fp, lr}
   1bc64:	mov	fp, sp
   1bc68:	bl	11c50 <__errno_location@plt>
   1bc6c:	mov	r1, #12
   1bc70:	str	r1, [r0]
   1bc74:	mov	r0, #0
   1bc78:	pop	{fp, pc}
   1bc7c:	push	{fp, lr}
   1bc80:	mov	fp, sp
   1bc84:	cmp	r0, #0
   1bc88:	beq	1bca4 <argp_parse@@Base+0x23dc>
   1bc8c:	cmp	r1, #0
   1bc90:	beq	1bcb0 <argp_parse@@Base+0x23e8>
   1bc94:	cmn	r1, #1
   1bc98:	ble	1bcbc <argp_parse@@Base+0x23f4>
   1bc9c:	pop	{fp, lr}
   1bca0:	b	11af4 <realloc@plt>
   1bca4:	mov	r0, r1
   1bca8:	pop	{fp, lr}
   1bcac:	b	1bc4c <argp_parse@@Base+0x2384>
   1bcb0:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1bcb4:	mov	r0, #0
   1bcb8:	pop	{fp, pc}
   1bcbc:	bl	11c50 <__errno_location@plt>
   1bcc0:	mov	r1, #12
   1bcc4:	str	r1, [r0]
   1bcc8:	mov	r0, #0
   1bccc:	pop	{fp, pc}
   1bcd0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bcd4:	add	fp, sp, #24
   1bcd8:	mov	r5, r0
   1bcdc:	mov	r0, #36	; 0x24
   1bce0:	mov	r8, r3
   1bce4:	mov	r6, r2
   1bce8:	mov	r7, r1
   1bcec:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bcf0:	mov	r4, r0
   1bcf4:	cmp	r0, #0
   1bcf8:	beq	1bd34 <argp_parse@@Base+0x246c>
   1bcfc:	mov	r0, #0
   1bd00:	stm	r4, {r5, r7}
   1bd04:	str	r6, [r4, #8]
   1bd08:	str	r8, [r4, #12]
   1bd0c:	str	r0, [r4, #16]
   1bd10:	str	r0, [r4, #20]
   1bd14:	mov	r0, #200	; 0xc8
   1bd18:	bl	1bc4c <argp_parse@@Base+0x2384>
   1bd1c:	cmp	r0, #0
   1bd20:	str	r0, [r4, #24]
   1bd24:	beq	1bd3c <argp_parse@@Base+0x2474>
   1bd28:	add	r1, r0, #200	; 0xc8
   1bd2c:	str	r0, [r4, #28]
   1bd30:	str	r1, [r4, #32]
   1bd34:	mov	r0, r4
   1bd38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bd3c:	mov	r0, r4
   1bd40:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1bd44:	mov	r4, #0
   1bd48:	mov	r0, r4
   1bd4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bd50:	push	{r4, sl, fp, lr}
   1bd54:	add	fp, sp, #8
   1bd58:	mov	r4, r0
   1bd5c:	bl	1bd94 <argp_parse@@Base+0x24cc>
   1bd60:	ldr	r0, [r4, #24]
   1bd64:	ldr	r1, [r4, #28]
   1bd68:	cmp	r1, r0
   1bd6c:	bls	1bd84 <argp_parse@@Base+0x24bc>
   1bd70:	ldr	r3, [r4]
   1bd74:	sub	r2, r1, r0
   1bd78:	mov	r1, #1
   1bd7c:	bl	11a7c <fwrite_unlocked@plt>
   1bd80:	ldr	r0, [r4, #24]
   1bd84:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1bd88:	mov	r0, r4
   1bd8c:	pop	{r4, sl, fp, lr}
   1bd90:	b	1ad78 <argp_parse@@Base+0x14b0>
   1bd94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd98:	add	fp, sp, #28
   1bd9c:	sub	sp, sp, #12
   1bda0:	mov	r8, r0
   1bda4:	ldr	r0, [r0, #16]
   1bda8:	ldr	r1, [r8, #24]
   1bdac:	ldr	ip, [r8, #28]
   1bdb0:	add	sl, r1, r0
   1bdb4:	cmp	sl, ip
   1bdb8:	bcs	1c2e0 <argp_parse@@Base+0x2a18>
   1bdbc:	ldr	r6, [r8, #20]
   1bdc0:	mov	r3, #32
   1bdc4:	cmp	r6, #0
   1bdc8:	beq	1bdd4 <argp_parse@@Base+0x250c>
   1bdcc:	mov	r9, sl
   1bdd0:	b	1be74 <argp_parse@@Base+0x25ac>
   1bdd4:	ldr	r6, [r8, #4]
   1bdd8:	cmp	r6, #0
   1bddc:	beq	1bfb4 <argp_parse@@Base+0x26ec>
   1bde0:	ldr	r1, [r8, #32]
   1bde4:	add	r0, ip, r6
   1bde8:	mov	r5, r6
   1bdec:	cmp	r0, r1
   1bdf0:	bcs	1be28 <argp_parse@@Base+0x2560>
   1bdf4:	add	r9, sl, r6
   1bdf8:	sub	r2, ip, sl
   1bdfc:	mov	r1, sl
   1be00:	mov	r0, r9
   1be04:	bl	11a04 <memmove@plt>
   1be08:	ldr	r0, [r8, #28]
   1be0c:	mov	r1, #32
   1be10:	mov	r2, r6
   1be14:	add	r0, r0, r6
   1be18:	str	r0, [r8, #28]
   1be1c:	mov	r0, sl
   1be20:	bl	11c8c <memset@plt>
   1be24:	b	1be6c <argp_parse@@Base+0x25a4>
   1be28:	ldr	r0, [r8]
   1be2c:	ldr	r1, [r0, #20]
   1be30:	ldr	r2, [r0, #24]
   1be34:	cmp	r1, r2
   1be38:	bcs	1be54 <argp_parse@@Base+0x258c>
   1be3c:	add	r2, r1, #1
   1be40:	str	r2, [r0, #20]
   1be44:	strb	r3, [r1]
   1be48:	subs	r5, r5, #1
   1be4c:	bne	1be28 <argp_parse@@Base+0x2560>
   1be50:	b	1be68 <argp_parse@@Base+0x25a0>
   1be54:	mov	r1, #32
   1be58:	bl	11cf8 <__overflow@plt>
   1be5c:	mov	r3, #32
   1be60:	subs	r5, r5, #1
   1be64:	bne	1be28 <argp_parse@@Base+0x2560>
   1be68:	mov	r9, sl
   1be6c:	str	r6, [r8, #20]
   1be70:	ldr	ip, [r8, #28]
   1be74:	sub	r4, ip, r9
   1be78:	mov	r0, r9
   1be7c:	mov	r1, #10
   1be80:	str	ip, [sp, #8]
   1be84:	mov	r2, r4
   1be88:	bl	11cb0 <memchr@plt>
   1be8c:	cmn	r6, #1
   1be90:	mov	r7, r0
   1be94:	movle	r6, #0
   1be98:	strle	r6, [r8, #20]
   1be9c:	cmp	r7, #0
   1bea0:	beq	1bed8 <argp_parse@@Base+0x2610>
   1bea4:	ldr	r5, [r8, #8]
   1bea8:	ldr	ip, [sp, #8]
   1beac:	sub	r0, r7, r9
   1beb0:	mov	r3, #32
   1beb4:	add	r0, r0, r6
   1beb8:	cmp	r0, r5
   1bebc:	bge	1bef4 <argp_parse@@Base+0x262c>
   1bec0:	mov	r6, #0
   1bec4:	add	sl, r7, #1
   1bec8:	str	r6, [r8, #20]
   1becc:	cmp	sl, ip
   1bed0:	bcc	1bdc4 <argp_parse@@Base+0x24fc>
   1bed4:	b	1c2e0 <argp_parse@@Base+0x2a18>
   1bed8:	ldr	ip, [sp, #8]
   1bedc:	ldr	r5, [r8, #8]
   1bee0:	add	r0, r6, r4
   1bee4:	mov	r3, #32
   1bee8:	cmp	r0, r5
   1beec:	mov	r7, ip
   1bef0:	bcc	1c2c0 <argp_parse@@Base+0x29f8>
   1bef4:	ldr	r0, [r8, #12]
   1bef8:	str	r4, [sp, #4]
   1befc:	cmn	r0, #1
   1bf00:	ble	1bf54 <argp_parse@@Base+0x268c>
   1bf04:	sub	sl, r5, r6
   1bf08:	mov	r4, r0
   1bf0c:	mov	r1, #0
   1bf10:	add	r6, r9, sl
   1bf14:	cmp	sl, #0
   1bf18:	blt	1bfac <argp_parse@@Base+0x26e4>
   1bf1c:	bl	11bfc <__ctype_b_loc@plt>
   1bf20:	ldr	r1, [r0]
   1bf24:	mov	r0, r6
   1bf28:	ldrb	r2, [r0]
   1bf2c:	ldrb	r2, [r1, r2, lsl #1]
   1bf30:	tst	r2, #1
   1bf34:	bne	1bfbc <argp_parse@@Base+0x26f4>
   1bf38:	sub	r0, r0, #1
   1bf3c:	cmp	r0, r9
   1bf40:	bcs	1bf28 <argp_parse@@Base+0x2660>
   1bf44:	ldr	ip, [sp, #8]
   1bf48:	mov	r3, #32
   1bf4c:	mov	r1, #0
   1bf50:	b	1bfc8 <argp_parse@@Base+0x2700>
   1bf54:	sub	sl, r5, #1
   1bf58:	cmp	r7, ip
   1bf5c:	bcs	1c2c8 <argp_parse@@Base+0x2a00>
   1bf60:	sub	r0, sl, r6
   1bf64:	sub	r2, ip, r7
   1bf68:	mov	r1, r7
   1bf6c:	add	r0, r9, r0
   1bf70:	bl	11a04 <memmove@plt>
   1bf74:	ldr	r0, [r8, #20]
   1bf78:	ldr	r1, [r8, #28]
   1bf7c:	mov	r6, #0
   1bf80:	mov	r3, #32
   1bf84:	str	r6, [r8, #20]
   1bf88:	sub	r0, sl, r0
   1bf8c:	add	sl, r9, r5
   1bf90:	add	r0, r9, r0
   1bf94:	sub	r0, r7, r0
   1bf98:	add	ip, r1, r0
   1bf9c:	str	ip, [r8, #28]
   1bfa0:	cmp	sl, ip
   1bfa4:	bcc	1bdc4 <argp_parse@@Base+0x24fc>
   1bfa8:	b	1c2e0 <argp_parse@@Base+0x2a18>
   1bfac:	mov	r0, r6
   1bfb0:	b	1bfc8 <argp_parse@@Base+0x2700>
   1bfb4:	mov	r6, #0
   1bfb8:	b	1bdcc <argp_parse@@Base+0x2504>
   1bfbc:	ldr	ip, [sp, #8]
   1bfc0:	mov	r1, #1
   1bfc4:	mov	r3, #32
   1bfc8:	add	r5, r0, #1
   1bfcc:	cmp	r5, r9
   1bfd0:	bls	1c01c <argp_parse@@Base+0x2754>
   1bfd4:	cmp	r1, #0
   1bfd8:	beq	1c084 <argp_parse@@Base+0x27bc>
   1bfdc:	sub	r1, r0, #1
   1bfe0:	mov	r7, r4
   1bfe4:	mov	r6, r1
   1bfe8:	cmp	r1, r9
   1bfec:	bcc	1c00c <argp_parse@@Base+0x2744>
   1bff0:	bl	11bfc <__ctype_b_loc@plt>
   1bff4:	mov	r1, r6
   1bff8:	ldr	r0, [r0]
   1bffc:	ldrb	r2, [r1], #-1
   1c000:	ldrb	r0, [r0, r2, lsl #1]
   1c004:	tst	r0, #1
   1c008:	bne	1bfe4 <argp_parse@@Base+0x271c>
   1c00c:	ldr	ip, [sp, #8]
   1c010:	add	r6, r6, #1
   1c014:	mov	r3, #32
   1c018:	b	1c08c <argp_parse@@Base+0x27c4>
   1c01c:	cmp	r6, r7
   1c020:	bcs	1c054 <argp_parse@@Base+0x278c>
   1c024:	add	r0, r9, sl
   1c028:	add	r1, r0, #1
   1c02c:	mov	r6, r1
   1c030:	cmp	r1, r7
   1c034:	bcs	1c054 <argp_parse@@Base+0x278c>
   1c038:	bl	11bfc <__ctype_b_loc@plt>
   1c03c:	mov	r1, r6
   1c040:	ldr	r0, [r0]
   1c044:	ldrb	r2, [r1], #1
   1c048:	ldrb	r0, [r0, r2, lsl #1]
   1c04c:	tst	r0, #1
   1c050:	beq	1c02c <argp_parse@@Base+0x2764>
   1c054:	cmp	r6, r7
   1c058:	beq	1c178 <argp_parse@@Base+0x28b0>
   1c05c:	bl	11bfc <__ctype_b_loc@plt>
   1c060:	ldr	r0, [r0]
   1c064:	mov	r5, r6
   1c068:	ldrb	r1, [r5, #1]!
   1c06c:	ldrb	r1, [r0, r1, lsl #1]
   1c070:	tst	r1, #1
   1c074:	bne	1c068 <argp_parse@@Base+0x27a0>
   1c078:	ldr	ip, [sp, #8]
   1c07c:	mov	r3, #32
   1c080:	b	1c088 <argp_parse@@Base+0x27c0>
   1c084:	mov	r6, r5
   1c088:	mov	r7, r4
   1c08c:	add	r0, ip, #1
   1c090:	cmp	r5, r0
   1c094:	beq	1c0b8 <argp_parse@@Base+0x27f0>
   1c098:	add	sl, r6, #1
   1c09c:	cmp	ip, r5
   1c0a0:	bls	1c19c <argp_parse@@Base+0x28d4>
   1c0a4:	sub	r0, r5, sl
   1c0a8:	cmp	r0, r7
   1c0ac:	bge	1c19c <argp_parse@@Base+0x28d4>
   1c0b0:	ldr	r0, [r8, #32]
   1c0b4:	b	1c0d0 <argp_parse@@Base+0x2808>
   1c0b8:	cmp	ip, r5
   1c0bc:	bls	1c198 <argp_parse@@Base+0x28d0>
   1c0c0:	ldr	r0, [r8, #32]
   1c0c4:	sub	r1, r0, r6
   1c0c8:	cmp	r1, r7
   1c0cc:	bgt	1c198 <argp_parse@@Base+0x28d0>
   1c0d0:	sub	r0, r0, ip
   1c0d4:	add	r1, r7, #1
   1c0d8:	cmp	r0, r1
   1c0dc:	ble	1c11c <argp_parse@@Base+0x2854>
   1c0e0:	sub	r4, ip, r5
   1c0e4:	add	sl, r6, #1
   1c0e8:	mov	r1, r5
   1c0ec:	add	r0, sl, r7
   1c0f0:	mov	r2, r4
   1c0f4:	bl	11a04 <memmove@plt>
   1c0f8:	ldr	r0, [r8, #12]
   1c0fc:	mov	r1, #10
   1c100:	mov	r3, #32
   1c104:	strb	r1, [r6]
   1c108:	add	r5, sl, r0
   1c10c:	add	r0, r5, r4
   1c110:	sub	r0, r0, r9
   1c114:	str	r0, [sp, #4]
   1c118:	b	1c1a4 <argp_parse@@Base+0x28dc>
   1c11c:	ldr	r0, [r8, #24]
   1c120:	cmp	r6, r0
   1c124:	bls	1c140 <argp_parse@@Base+0x2878>
   1c128:	ldr	r3, [r8]
   1c12c:	sub	r2, r6, r0
   1c130:	mov	r1, #1
   1c134:	bl	11a7c <fwrite_unlocked@plt>
   1c138:	ldr	ip, [sp, #8]
   1c13c:	mov	r3, #32
   1c140:	ldr	r0, [r8]
   1c144:	ldr	r1, [r0, #20]
   1c148:	ldr	r2, [r0, #24]
   1c14c:	cmp	r1, r2
   1c150:	bcs	1c2ac <argp_parse@@Base+0x29e4>
   1c154:	add	r2, r1, #1
   1c158:	str	r2, [r0, #20]
   1c15c:	mov	r0, #10
   1c160:	strb	r0, [r1]
   1c164:	ldr	sl, [r8, #24]
   1c168:	sub	r0, ip, sl
   1c16c:	mov	r9, sl
   1c170:	str	r0, [sp, #4]
   1c174:	b	1c1a4 <argp_parse@@Base+0x28dc>
   1c178:	ldr	ip, [sp, #8]
   1c17c:	mov	r6, #0
   1c180:	add	sl, r7, #1
   1c184:	mov	r3, #32
   1c188:	str	r6, [r8, #20]
   1c18c:	cmp	sl, ip
   1c190:	bcc	1bdc4 <argp_parse@@Base+0x24fc>
   1c194:	b	1c2e0 <argp_parse@@Base+0x2a18>
   1c198:	add	sl, r6, #1
   1c19c:	mov	r0, #10
   1c1a0:	strb	r0, [r6]
   1c1a4:	ldr	r6, [r8, #12]
   1c1a8:	sub	r0, r5, sl
   1c1ac:	cmp	r0, r6
   1c1b0:	bge	1c1e8 <argp_parse@@Base+0x2920>
   1c1b4:	ldr	r0, [sp, #4]
   1c1b8:	add	r0, r9, r0
   1c1bc:	add	r0, r0, #1
   1c1c0:	cmp	r5, r0
   1c1c4:	bne	1c1d8 <argp_parse@@Base+0x2910>
   1c1c8:	ldr	r0, [r8, #32]
   1c1cc:	sub	r0, r0, r5
   1c1d0:	cmp	r0, r6
   1c1d4:	bge	1c1e8 <argp_parse@@Base+0x2920>
   1c1d8:	cmp	r6, #1
   1c1dc:	blt	1c258 <argp_parse@@Base+0x2990>
   1c1e0:	mov	r7, #0
   1c1e4:	b	1c228 <argp_parse@@Base+0x2960>
   1c1e8:	cmp	r6, #1
   1c1ec:	blt	1c258 <argp_parse@@Base+0x2990>
   1c1f0:	mov	r0, #0
   1c1f4:	strb	r3, [sl, r0]
   1c1f8:	add	r0, r0, #1
   1c1fc:	ldr	r6, [r8, #12]
   1c200:	cmp	r0, r6
   1c204:	blt	1c1f4 <argp_parse@@Base+0x292c>
   1c208:	add	sl, sl, r0
   1c20c:	cmp	sl, r5
   1c210:	bcc	1c260 <argp_parse@@Base+0x2998>
   1c214:	b	1c280 <argp_parse@@Base+0x29b8>
   1c218:	mov	r1, #32
   1c21c:	bl	11cf8 <__overflow@plt>
   1c220:	mov	r3, #32
   1c224:	b	1c248 <argp_parse@@Base+0x2980>
   1c228:	ldr	r0, [r8]
   1c22c:	ldr	r1, [r0, #20]
   1c230:	ldr	r2, [r0, #24]
   1c234:	cmp	r1, r2
   1c238:	bcs	1c218 <argp_parse@@Base+0x2950>
   1c23c:	add	r2, r1, #1
   1c240:	str	r2, [r0, #20]
   1c244:	strb	r3, [r1]
   1c248:	ldr	r6, [r8, #12]
   1c24c:	add	r7, r7, #1
   1c250:	cmp	r7, r6
   1c254:	blt	1c228 <argp_parse@@Base+0x2960>
   1c258:	cmp	sl, r5
   1c25c:	bcs	1c280 <argp_parse@@Base+0x29b8>
   1c260:	ldr	r0, [sp, #4]
   1c264:	mov	r1, r5
   1c268:	add	r0, r9, r0
   1c26c:	sub	r2, r0, r5
   1c270:	mov	r0, sl
   1c274:	bl	11a04 <memmove@plt>
   1c278:	ldr	r6, [r8, #12]
   1c27c:	mov	r3, #32
   1c280:	ldr	r0, [sp, #4]
   1c284:	cmp	r6, #0
   1c288:	mvneq	r6, #0
   1c28c:	str	r6, [r8, #20]
   1c290:	sub	r0, r0, r5
   1c294:	add	r0, r0, r9
   1c298:	add	ip, sl, r0
   1c29c:	str	ip, [r8, #28]
   1c2a0:	cmp	sl, ip
   1c2a4:	bcc	1bdc4 <argp_parse@@Base+0x24fc>
   1c2a8:	b	1c2e0 <argp_parse@@Base+0x2a18>
   1c2ac:	mov	r1, #10
   1c2b0:	bl	11cf8 <__overflow@plt>
   1c2b4:	ldr	ip, [sp, #8]
   1c2b8:	mov	r3, #32
   1c2bc:	b	1c164 <argp_parse@@Base+0x289c>
   1c2c0:	str	r0, [r8, #20]
   1c2c4:	b	1c2e0 <argp_parse@@Base+0x2a18>
   1c2c8:	ldr	r0, [sp, #4]
   1c2cc:	add	r0, r6, r0
   1c2d0:	str	r0, [r8, #20]
   1c2d4:	sub	r0, sl, r0
   1c2d8:	add	ip, ip, r0
   1c2dc:	str	ip, [r8, #28]
   1c2e0:	ldr	r0, [r8, #24]
   1c2e4:	sub	r0, ip, r0
   1c2e8:	str	r0, [r8, #16]
   1c2ec:	sub	sp, fp, #28
   1c2f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2f4:	push	{r4, r5, r6, sl, fp, lr}
   1c2f8:	add	fp, sp, #16
   1c2fc:	mov	r4, r0
   1c300:	mov	r6, r1
   1c304:	ldr	r0, [r0, #28]
   1c308:	mov	r5, #1
   1c30c:	ldr	r1, [r4, #32]
   1c310:	sub	r0, r1, r0
   1c314:	cmp	r0, r6
   1c318:	bcs	1c3d8 <argp_parse@@Base+0x2b10>
   1c31c:	mov	r0, r4
   1c320:	bl	1bd94 <argp_parse@@Base+0x24cc>
   1c324:	ldr	r0, [r4, #24]
   1c328:	ldr	r1, [r4, #28]
   1c32c:	ldr	r3, [r4]
   1c330:	mov	r5, #1
   1c334:	sub	r2, r1, r0
   1c338:	mov	r1, #1
   1c33c:	bl	11a7c <fwrite_unlocked@plt>
   1c340:	mov	r1, r0
   1c344:	ldr	r0, [r4, #24]
   1c348:	ldr	r2, [r4, #28]
   1c34c:	sub	r3, r2, r0
   1c350:	cmp	r1, r3
   1c354:	bne	1c3a4 <argp_parse@@Base+0x2adc>
   1c358:	mov	r1, #0
   1c35c:	str	r1, [r4, #16]
   1c360:	str	r0, [r4, #28]
   1c364:	ldr	r1, [r4, #32]
   1c368:	sub	r1, r1, r0
   1c36c:	cmp	r1, r6
   1c370:	bcs	1c3d8 <argp_parse@@Base+0x2b10>
   1c374:	adds	r6, r1, r6
   1c378:	bcs	1c3c8 <argp_parse@@Base+0x2b00>
   1c37c:	mov	r1, r6
   1c380:	bl	1bc7c <argp_parse@@Base+0x23b4>
   1c384:	cmp	r0, #0
   1c388:	beq	1c3c8 <argp_parse@@Base+0x2b00>
   1c38c:	str	r0, [r4, #24]
   1c390:	add	r1, r0, r6
   1c394:	str	r0, [r4, #28]
   1c398:	mov	r0, r5
   1c39c:	str	r1, [r4, #32]
   1c3a0:	pop	{r4, r5, r6, sl, fp, pc}
   1c3a4:	sub	r2, r2, r1
   1c3a8:	str	r2, [r4, #28]
   1c3ac:	sub	r2, r2, r0
   1c3b0:	ldr	r3, [r4, #16]
   1c3b4:	sub	r3, r3, r1
   1c3b8:	add	r1, r0, r1
   1c3bc:	str	r3, [r4, #16]
   1c3c0:	bl	11a04 <memmove@plt>
   1c3c4:	b	1c3d4 <argp_parse@@Base+0x2b0c>
   1c3c8:	bl	11c50 <__errno_location@plt>
   1c3cc:	mov	r1, #12
   1c3d0:	str	r1, [r0]
   1c3d4:	mov	r5, #0
   1c3d8:	mov	r0, r5
   1c3dc:	pop	{r4, r5, r6, sl, fp, pc}
   1c3e0:	sub	sp, sp, #8
   1c3e4:	push	{r4, r5, r6, r7, fp, lr}
   1c3e8:	add	fp, sp, #16
   1c3ec:	sub	sp, sp, #8
   1c3f0:	mov	r5, r1
   1c3f4:	mov	r4, r0
   1c3f8:	mov	r1, #150	; 0x96
   1c3fc:	add	r6, fp, #8
   1c400:	str	r3, [fp, #12]
   1c404:	str	r2, [fp, #8]
   1c408:	mov	r0, r4
   1c40c:	bl	1c2f4 <argp_parse@@Base+0x2a2c>
   1c410:	cmp	r0, #0
   1c414:	beq	1c454 <argp_parse@@Base+0x2b8c>
   1c418:	str	r6, [sp, #4]
   1c41c:	mov	r2, r5
   1c420:	mov	r3, r6
   1c424:	ldr	r0, [r4, #28]
   1c428:	ldr	r1, [r4, #32]
   1c42c:	sub	r7, r1, r0
   1c430:	mov	r1, r7
   1c434:	bl	11d64 <vsnprintf@plt>
   1c438:	add	r1, r0, #1
   1c43c:	cmp	r0, r7
   1c440:	bcs	1c408 <argp_parse@@Base+0x2b40>
   1c444:	ldr	r1, [r4, #28]
   1c448:	add	r1, r1, r0
   1c44c:	str	r1, [r4, #28]
   1c450:	b	1c458 <argp_parse@@Base+0x2b90>
   1c454:	mvn	r0, #0
   1c458:	sub	sp, fp, #16
   1c45c:	pop	{r4, r5, r6, r7, fp, lr}
   1c460:	add	sp, sp, #8
   1c464:	bx	lr
   1c468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c46c:	add	fp, sp, #28
   1c470:	sub	sp, sp, #68	; 0x44
   1c474:	mvn	r6, #0
   1c478:	cmp	r0, #1
   1c47c:	blt	1cba4 <argp_parse@@Base+0x32dc>
   1c480:	mov	r7, r2
   1c484:	ldr	r2, [fp, #16]
   1c488:	mov	r5, r3
   1c48c:	mov	r3, r0
   1c490:	mov	sl, r1
   1c494:	mov	r0, #0
   1c498:	ldr	r9, [r2]
   1c49c:	ldr	r6, [r2, #4]
   1c4a0:	str	r0, [r2, #12]
   1c4a4:	cmp	r9, #0
   1c4a8:	beq	1c4cc <argp_parse@@Base+0x2c04>
   1c4ac:	ldr	r0, [r2, #16]
   1c4b0:	cmp	r0, #0
   1c4b4:	beq	1c4d4 <argp_parse@@Base+0x2c0c>
   1c4b8:	ldrb	r0, [r7]
   1c4bc:	cmp	r0, #45	; 0x2d
   1c4c0:	cmpne	r0, #43	; 0x2b
   1c4c4:	addeq	r7, r7, #1
   1c4c8:	b	1c548 <argp_parse@@Base+0x2c80>
   1c4cc:	mov	r9, #1
   1c4d0:	str	r9, [r2]
   1c4d4:	mov	r0, #0
   1c4d8:	str	r9, [r2, #28]
   1c4dc:	str	r9, [r2, #32]
   1c4e0:	str	r0, [r2, #20]
   1c4e4:	ldrb	r1, [r7]
   1c4e8:	cmp	r1, #43	; 0x2b
   1c4ec:	beq	1c4fc <argp_parse@@Base+0x2c34>
   1c4f0:	cmp	r1, #45	; 0x2d
   1c4f4:	bne	1c508 <argp_parse@@Base+0x2c40>
   1c4f8:	mov	r0, #2
   1c4fc:	str	r0, [r2, #24]
   1c500:	add	r7, r7, #1
   1c504:	b	1c540 <argp_parse@@Base+0x2c78>
   1c508:	ldr	r0, [fp, #20]
   1c50c:	cmp	r0, #0
   1c510:	bne	1c538 <argp_parse@@Base+0x2c70>
   1c514:	movw	r0, #60924	; 0xedfc
   1c518:	mov	r8, r2
   1c51c:	mov	r4, r3
   1c520:	movt	r0, #1
   1c524:	bl	11b9c <getenv@plt>
   1c528:	mov	r3, r4
   1c52c:	mov	r2, r8
   1c530:	cmp	r0, #0
   1c534:	beq	1cbb0 <argp_parse@@Base+0x32e8>
   1c538:	mov	r0, #0
   1c53c:	str	r0, [r2, #24]
   1c540:	mov	r0, #1
   1c544:	str	r0, [r2, #16]
   1c548:	ldrb	r0, [r7]
   1c54c:	ldr	r4, [r2, #20]
   1c550:	str	r5, [sp, #48]	; 0x30
   1c554:	subs	r0, r0, #58	; 0x3a
   1c558:	movne	r0, r6
   1c55c:	cmp	r4, #0
   1c560:	str	r0, [fp, #-44]	; 0xffffffd4
   1c564:	ldrbne	r0, [r4]
   1c568:	cmpne	r0, #0
   1c56c:	bne	1c5cc <argp_parse@@Base+0x2d04>
   1c570:	mov	r4, r2
   1c574:	mov	r6, r2
   1c578:	str	r7, [sp, #32]
   1c57c:	ldr	r1, [r4, #32]!
   1c580:	cmp	r1, r9
   1c584:	mov	r8, r1
   1c588:	strgt	r9, [r4]
   1c58c:	movgt	r8, r9
   1c590:	ldr	r5, [r6, #28]!
   1c594:	cmp	r5, r9
   1c598:	strgt	r9, [r6]
   1c59c:	movgt	r5, r9
   1c5a0:	ldr	r7, [r2, #24]
   1c5a4:	cmp	r7, #1
   1c5a8:	bne	1c8c0 <argp_parse@@Base+0x2ff8>
   1c5ac:	cmp	r5, r8
   1c5b0:	cmpne	r8, r9
   1c5b4:	bne	1c684 <argp_parse@@Base+0x2dbc>
   1c5b8:	cmp	r8, r9
   1c5bc:	mov	r1, r6
   1c5c0:	mov	r0, r9
   1c5c4:	bne	1c878 <argp_parse@@Base+0x2fb0>
   1c5c8:	b	1c880 <argp_parse@@Base+0x2fb8>
   1c5cc:	str	r3, [fp, #-40]	; 0xffffffd8
   1c5d0:	add	r8, r4, #1
   1c5d4:	mov	r0, r7
   1c5d8:	mov	r5, r2
   1c5dc:	str	r8, [r2, #20]
   1c5e0:	ldrb	r6, [r4]
   1c5e4:	mov	r1, r6
   1c5e8:	bl	11c38 <strchr@plt>
   1c5ec:	ldrb	r1, [r4, #1]
   1c5f0:	mov	r3, r5
   1c5f4:	cmp	r1, #0
   1c5f8:	orr	r1, r6, #1
   1c5fc:	addeq	r9, r9, #1
   1c600:	streq	r9, [r5]
   1c604:	cmp	r1, #59	; 0x3b
   1c608:	cmpne	r0, #0
   1c60c:	bne	1c628 <argp_parse@@Base+0x2d60>
   1c610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c614:	cmp	r0, #0
   1c618:	bne	1cc70 <argp_parse@@Base+0x33a8>
   1c61c:	str	r6, [r3, #8]
   1c620:	mov	r6, #63	; 0x3f
   1c624:	b	1cba4 <argp_parse@@Base+0x32dc>
   1c628:	ldrb	r2, [r0]
   1c62c:	ldrb	r1, [r0, #1]
   1c630:	cmp	r2, #87	; 0x57
   1c634:	bne	1c9a0 <argp_parse@@Base+0x30d8>
   1c638:	ldr	r2, [sp, #48]	; 0x30
   1c63c:	cmp	r2, #0
   1c640:	beq	1c9a0 <argp_parse@@Base+0x30d8>
   1c644:	cmp	r1, #59	; 0x3b
   1c648:	bne	1c9a0 <argp_parse@@Base+0x30d8>
   1c64c:	ldrb	r0, [r8]
   1c650:	cmp	r0, #0
   1c654:	bne	1cca0 <argp_parse@@Base+0x33d8>
   1c658:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c65c:	cmp	r9, r0
   1c660:	bne	1cc9c <argp_parse@@Base+0x33d4>
   1c664:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c668:	cmp	r0, #0
   1c66c:	bne	1cd28 <argp_parse@@Base+0x3460>
   1c670:	str	r6, [r3, #8]
   1c674:	ldrb	r6, [r7]
   1c678:	cmp	r6, #58	; 0x3a
   1c67c:	movwne	r6, #63	; 0x3f
   1c680:	b	1cba4 <argp_parse@@Base+0x32dc>
   1c684:	cmp	r9, r8
   1c688:	str	r7, [sp, #20]
   1c68c:	str	r6, [sp, #24]
   1c690:	str	r5, [sp, #36]	; 0x24
   1c694:	str	r4, [sp, #28]
   1c698:	str	r3, [fp, #-40]	; 0xffffffd8
   1c69c:	ble	1c850 <argp_parse@@Base+0x2f88>
   1c6a0:	ldr	r0, [sp, #36]	; 0x24
   1c6a4:	cmp	r0, r8
   1c6a8:	bge	1c850 <argp_parse@@Base+0x2f88>
   1c6ac:	add	r0, sl, r8, lsl #2
   1c6b0:	mvn	r1, r1
   1c6b4:	ldr	r2, [sp, #36]	; 0x24
   1c6b8:	mov	r3, r9
   1c6bc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c6c0:	mvn	r0, r9
   1c6c4:	cmp	r0, r1
   1c6c8:	movgt	r1, r0
   1c6cc:	add	r0, r1, #1
   1c6d0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c6d4:	str	r0, [sp, #44]	; 0x2c
   1c6d8:	add	r0, sl, #4
   1c6dc:	str	r0, [sp, #40]	; 0x28
   1c6e0:	sub	ip, r8, r2
   1c6e4:	sub	r7, r3, r8
   1c6e8:	cmp	r7, ip
   1c6ec:	ble	1c79c <argp_parse@@Base+0x2ed4>
   1c6f0:	sub	r4, r3, ip
   1c6f4:	cmp	ip, #1
   1c6f8:	blt	1c794 <argp_parse@@Base+0x2ecc>
   1c6fc:	mov	r7, #0
   1c700:	cmp	ip, #4
   1c704:	bcc	1c75c <argp_parse@@Base+0x2e94>
   1c708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c70c:	ldr	r1, [sp, #40]	; 0x28
   1c710:	add	lr, sl, r2, lsl #2
   1c714:	add	r0, r0, r3
   1c718:	add	r0, r0, r2
   1c71c:	add	r0, r1, r0, lsl #2
   1c720:	add	r1, sl, r3, lsl #2
   1c724:	cmp	lr, r1
   1c728:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1c72c:	cmpcc	r0, r1
   1c730:	bcc	1c75c <argp_parse@@Base+0x2e94>
   1c734:	bic	r7, ip, #3
   1c738:	mov	r1, r7
   1c73c:	vld1.32	{d16-d17}, [r0]
   1c740:	vld1.32	{d18-d19}, [lr]
   1c744:	subs	r1, r1, #4
   1c748:	vst1.32	{d16-d17}, [lr]!
   1c74c:	vst1.32	{d18-d19}, [r0]!
   1c750:	bne	1c73c <argp_parse@@Base+0x2e74>
   1c754:	cmp	ip, r7
   1c758:	beq	1c794 <argp_parse@@Base+0x2ecc>
   1c75c:	add	r0, sl, r3, lsl #2
   1c760:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c764:	add	r1, r7, r2
   1c768:	add	r1, sl, r1, lsl #2
   1c76c:	add	r3, r3, r7
   1c770:	add	r3, r3, r2
   1c774:	add	r7, r0, r3, lsl #2
   1c778:	ldr	r5, [r1]
   1c77c:	add	r3, r3, #1
   1c780:	ldr	r6, [r7, #4]
   1c784:	cmn	r3, #1
   1c788:	str	r6, [r1], #4
   1c78c:	str	r5, [r7, #4]
   1c790:	bne	1c774 <argp_parse@@Base+0x2eac>
   1c794:	mov	r3, r4
   1c798:	b	1c844 <argp_parse@@Base+0x2f7c>
   1c79c:	cmp	r7, #1
   1c7a0:	blt	1c840 <argp_parse@@Base+0x2f78>
   1c7a4:	mov	r4, #0
   1c7a8:	cmp	r7, #3
   1c7ac:	bls	1c80c <argp_parse@@Base+0x2f44>
   1c7b0:	add	r1, sl, r3, lsl #2
   1c7b4:	add	r0, sl, r2, lsl #2
   1c7b8:	cmp	r0, r1
   1c7bc:	bcs	1c7e0 <argp_parse@@Base+0x2f18>
   1c7c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c7c4:	ldr	r6, [sp, #40]	; 0x28
   1c7c8:	add	r1, r1, r3
   1c7cc:	add	r1, r1, r2
   1c7d0:	add	r1, r6, r1, lsl #2
   1c7d4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1c7d8:	cmp	r6, r1
   1c7dc:	bcc	1c80c <argp_parse@@Base+0x2f44>
   1c7e0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1c7e4:	bic	r4, r7, #3
   1c7e8:	mov	r1, r4
   1c7ec:	vld1.32	{d16-d17}, [r6]
   1c7f0:	vld1.32	{d18-d19}, [r0]
   1c7f4:	subs	r1, r1, #4
   1c7f8:	vst1.32	{d16-d17}, [r0]!
   1c7fc:	vst1.32	{d18-d19}, [r6]!
   1c800:	bne	1c7ec <argp_parse@@Base+0x2f24>
   1c804:	cmp	r7, r4
   1c808:	beq	1c840 <argp_parse@@Base+0x2f78>
   1c80c:	ldr	r1, [sp, #44]	; 0x2c
   1c810:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c814:	add	r6, r4, r2
   1c818:	add	r1, r1, r3
   1c81c:	add	r0, r0, r4, lsl #2
   1c820:	sub	r1, r1, r4
   1c824:	add	r4, sl, r6, lsl #2
   1c828:	ldr	r6, [r4]
   1c82c:	ldr	r5, [r0]
   1c830:	subs	r1, r1, #1
   1c834:	str	r5, [r4], #4
   1c838:	str	r6, [r0], #4
   1c83c:	bne	1c828 <argp_parse@@Base+0x2f60>
   1c840:	add	r2, r7, r2
   1c844:	cmp	r3, r8
   1c848:	cmpgt	r8, r2
   1c84c:	bgt	1c6e0 <argp_parse@@Base+0x2e18>
   1c850:	ldr	r0, [sp, #36]	; 0x24
   1c854:	ldr	r4, [sp, #28]
   1c858:	ldr	r6, [sp, #24]
   1c85c:	ldr	r2, [fp, #16]
   1c860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c864:	ldr	r7, [sp, #20]
   1c868:	add	r0, r0, r9
   1c86c:	mov	r1, r4
   1c870:	sub	r0, r0, r8
   1c874:	str	r0, [r6]
   1c878:	mov	r5, r0
   1c87c:	str	r9, [r1]
   1c880:	mov	r8, r9
   1c884:	cmp	r9, r3
   1c888:	bge	1c8b8 <argp_parse@@Base+0x2ff0>
   1c88c:	ldr	r0, [sl, r8, lsl #2]
   1c890:	ldrb	r1, [r0]
   1c894:	cmp	r1, #45	; 0x2d
   1c898:	bne	1c8a8 <argp_parse@@Base+0x2fe0>
   1c89c:	ldrb	r0, [r0, #1]
   1c8a0:	cmp	r0, #0
   1c8a4:	bne	1c8b8 <argp_parse@@Base+0x2ff0>
   1c8a8:	add	r8, r8, #1
   1c8ac:	cmp	r8, r3
   1c8b0:	str	r8, [r2]
   1c8b4:	blt	1c88c <argp_parse@@Base+0x2fc4>
   1c8b8:	mov	r9, r8
   1c8bc:	str	r8, [r4]
   1c8c0:	cmp	r9, r3
   1c8c4:	beq	1cb98 <argp_parse@@Base+0x32d0>
   1c8c8:	ldr	r0, [sl, r9, lsl #2]
   1c8cc:	movw	r1, #56140	; 0xdb4c
   1c8d0:	str	r3, [fp, #-40]	; 0xffffffd8
   1c8d4:	movt	r1, #1
   1c8d8:	bl	11998 <strcmp@plt>
   1c8dc:	cmp	r0, #0
   1c8e0:	beq	1c970 <argp_parse@@Base+0x30a8>
   1c8e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c8e8:	ldr	r2, [fp, #16]
   1c8ec:	cmp	r9, r3
   1c8f0:	beq	1cb98 <argp_parse@@Base+0x32d0>
   1c8f4:	ldr	r0, [sl, r9, lsl #2]
   1c8f8:	mvn	r6, #0
   1c8fc:	ldrb	r1, [r0]
   1c900:	cmp	r1, #45	; 0x2d
   1c904:	bne	1c9c8 <argp_parse@@Base+0x3100>
   1c908:	mov	r4, r0
   1c90c:	ldrb	r1, [r4, #1]!
   1c910:	cmp	r1, #0
   1c914:	beq	1c9c8 <argp_parse@@Base+0x3100>
   1c918:	ldr	r6, [sp, #48]	; 0x30
   1c91c:	cmp	r6, #0
   1c920:	beq	1cbd0 <argp_parse@@Base+0x3308>
   1c924:	ldr	r5, [fp, #12]
   1c928:	ldr	r7, [sp, #32]
   1c92c:	cmp	r1, #45	; 0x2d
   1c930:	bne	1cbd8 <argp_parse@@Base+0x3310>
   1c934:	add	r0, r0, #2
   1c938:	mov	r1, sl
   1c93c:	str	r0, [r2, #20]
   1c940:	ldr	r0, [fp, #8]
   1c944:	stm	sp, {r0, r5}
   1c948:	str	r2, [sp, #8]
   1c94c:	mov	r2, r7
   1c950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c954:	str	r0, [sp, #12]
   1c958:	movw	r0, #56140	; 0xdb4c
   1c95c:	movt	r0, #1
   1c960:	str	r0, [sp, #16]
   1c964:	mov	r0, r3
   1c968:	mov	r3, r6
   1c96c:	b	1cce0 <argp_parse@@Base+0x3418>
   1c970:	ldr	r2, [fp, #16]
   1c974:	add	r3, r9, #1
   1c978:	cmp	r5, r8
   1c97c:	cmpne	r8, r3
   1c980:	str	r3, [r2]
   1c984:	bne	1c9e0 <argp_parse@@Base+0x3118>
   1c988:	cmp	r5, r8
   1c98c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1c990:	mov	r1, r6
   1c994:	mov	r0, r3
   1c998:	beq	1cb88 <argp_parse@@Base+0x32c0>
   1c99c:	b	1cb90 <argp_parse@@Base+0x32c8>
   1c9a0:	cmp	r1, #58	; 0x3a
   1c9a4:	bne	1cba4 <argp_parse@@Base+0x32dc>
   1c9a8:	ldrb	r0, [r0, #2]
   1c9ac:	ldrb	r1, [r8]
   1c9b0:	cmp	r0, #58	; 0x3a
   1c9b4:	bne	1cbb8 <argp_parse@@Base+0x32f0>
   1c9b8:	cmp	r1, #0
   1c9bc:	bne	1cbc0 <argp_parse@@Base+0x32f8>
   1c9c0:	mov	r0, #0
   1c9c4:	b	1ccf8 <argp_parse@@Base+0x3430>
   1c9c8:	cmp	r7, #0
   1c9cc:	strne	r0, [r2, #12]
   1c9d0:	addne	r0, r9, #1
   1c9d4:	movne	r6, #1
   1c9d8:	strne	r0, [r2]
   1c9dc:	b	1cba4 <argp_parse@@Base+0x32dc>
   1c9e0:	cmp	r9, r8
   1c9e4:	str	r3, [fp, #-36]	; 0xffffffdc
   1c9e8:	str	r6, [sp, #24]
   1c9ec:	str	r5, [sp, #36]	; 0x24
   1c9f0:	str	r4, [sp, #28]
   1c9f4:	blt	1cb64 <argp_parse@@Base+0x329c>
   1c9f8:	ldr	r0, [sp, #36]	; 0x24
   1c9fc:	cmp	r0, r8
   1ca00:	bge	1cb64 <argp_parse@@Base+0x329c>
   1ca04:	sub	r0, sl, r8, lsl #2
   1ca08:	ldr	r7, [sp, #36]	; 0x24
   1ca0c:	add	r9, sl, r8, lsl #2
   1ca10:	str	r0, [fp, #-44]	; 0xffffffd4
   1ca14:	rsb	r0, r8, #0
   1ca18:	str	r0, [fp, #-32]	; 0xffffffe0
   1ca1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ca20:	sub	r4, r8, r7
   1ca24:	sub	r3, r0, r8
   1ca28:	cmp	r3, r4
   1ca2c:	ble	1cac0 <argp_parse@@Base+0x31f8>
   1ca30:	sub	r3, r0, r4
   1ca34:	cmp	r4, #1
   1ca38:	blt	1cab8 <argp_parse@@Base+0x31f0>
   1ca3c:	mov	r1, #0
   1ca40:	cmp	r4, #4
   1ca44:	bcc	1ca88 <argp_parse@@Base+0x31c0>
   1ca48:	add	r2, sl, r0, lsl #2
   1ca4c:	add	lr, sl, r7, lsl #2
   1ca50:	add	ip, sl, r3, lsl #2
   1ca54:	cmp	lr, r2
   1ca58:	cmpcc	ip, r9
   1ca5c:	bcc	1ca88 <argp_parse@@Base+0x31c0>
   1ca60:	bic	r1, r4, #3
   1ca64:	mov	r2, r1
   1ca68:	vld1.32	{d16-d17}, [ip]
   1ca6c:	vld1.32	{d18-d19}, [lr]
   1ca70:	subs	r2, r2, #4
   1ca74:	vst1.32	{d16-d17}, [lr]!
   1ca78:	vst1.32	{d18-d19}, [ip]!
   1ca7c:	bne	1ca68 <argp_parse@@Base+0x31a0>
   1ca80:	cmp	r4, r1
   1ca84:	beq	1cab8 <argp_parse@@Base+0x31f0>
   1ca88:	add	r0, r7, r0
   1ca8c:	sub	r2, r8, r1
   1ca90:	add	r1, r1, r7
   1ca94:	add	r1, sl, r1, lsl #2
   1ca98:	add	r0, sl, r0, lsl #2
   1ca9c:	ldr	r6, [r0, -r2, lsl #2]
   1caa0:	ldr	r5, [r1]
   1caa4:	str	r6, [r1], #4
   1caa8:	str	r5, [r0, -r2, lsl #2]
   1caac:	sub	r2, r2, #1
   1cab0:	cmp	r7, r2
   1cab4:	bne	1ca9c <argp_parse@@Base+0x31d4>
   1cab8:	mov	r0, r3
   1cabc:	b	1cb58 <argp_parse@@Base+0x3290>
   1cac0:	cmp	r3, #1
   1cac4:	blt	1cb54 <argp_parse@@Base+0x328c>
   1cac8:	mov	r4, #0
   1cacc:	cmp	r3, #3
   1cad0:	bls	1cb20 <argp_parse@@Base+0x3258>
   1cad4:	add	r2, sl, r0, lsl #2
   1cad8:	add	r1, sl, r7, lsl #2
   1cadc:	cmp	r1, r2
   1cae0:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1cae4:	addcc	r2, r7, r0
   1cae8:	addcc	r2, r6, r2, lsl #2
   1caec:	cmpcc	r9, r2
   1caf0:	bcc	1cb20 <argp_parse@@Base+0x3258>
   1caf4:	bic	r4, r3, #3
   1caf8:	mov	r6, r9
   1cafc:	mov	r2, r4
   1cb00:	vld1.32	{d16-d17}, [r6]
   1cb04:	vld1.32	{d18-d19}, [r1]
   1cb08:	subs	r2, r2, #4
   1cb0c:	vst1.32	{d16-d17}, [r1]!
   1cb10:	vst1.32	{d18-d19}, [r6]!
   1cb14:	bne	1cb00 <argp_parse@@Base+0x3238>
   1cb18:	cmp	r3, r4
   1cb1c:	beq	1cb54 <argp_parse@@Base+0x328c>
   1cb20:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cb24:	add	r2, r4, r7
   1cb28:	add	r6, r8, r4
   1cb2c:	add	r2, sl, r2, lsl #2
   1cb30:	add	r1, r1, r0
   1cb34:	sub	r1, r1, r4
   1cb38:	add	r4, sl, r6, lsl #2
   1cb3c:	ldr	r6, [r2]
   1cb40:	ldr	r5, [r4]
   1cb44:	subs	r1, r1, #1
   1cb48:	str	r5, [r2], #4
   1cb4c:	str	r6, [r4], #4
   1cb50:	bne	1cb3c <argp_parse@@Base+0x3274>
   1cb54:	add	r7, r3, r7
   1cb58:	cmp	r0, r8
   1cb5c:	cmpgt	r8, r7
   1cb60:	bgt	1ca20 <argp_parse@@Base+0x3158>
   1cb64:	ldr	r0, [sp, #36]	; 0x24
   1cb68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb6c:	ldr	r1, [sp, #24]
   1cb70:	ldr	r2, [fp, #16]
   1cb74:	add	r0, r0, r3
   1cb78:	sub	r0, r0, r8
   1cb7c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1cb80:	str	r0, [r1]
   1cb84:	ldr	r1, [sp, #28]
   1cb88:	mov	r5, r0
   1cb8c:	str	r3, [r1]
   1cb90:	str	r8, [r2]
   1cb94:	str	r8, [r2, #32]
   1cb98:	cmp	r5, r8
   1cb9c:	mvn	r6, #0
   1cba0:	strne	r5, [r2]
   1cba4:	mov	r0, r6
   1cba8:	sub	sp, fp, #28
   1cbac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cbb0:	mov	r0, #1
   1cbb4:	b	1c53c <argp_parse@@Base+0x2c74>
   1cbb8:	cmp	r1, #0
   1cbbc:	beq	1cc44 <argp_parse@@Base+0x337c>
   1cbc0:	add	r0, r9, #1
   1cbc4:	str	r8, [r3, #12]
   1cbc8:	str	r0, [r3]
   1cbcc:	b	1ccfc <argp_parse@@Base+0x3434>
   1cbd0:	ldr	r7, [sp, #32]
   1cbd4:	b	1cd20 <argp_parse@@Base+0x3458>
   1cbd8:	cmp	r5, #0
   1cbdc:	beq	1cd20 <argp_parse@@Base+0x3458>
   1cbe0:	ldrb	r0, [r0, #2]
   1cbe4:	cmp	r0, #0
   1cbe8:	beq	1cd08 <argp_parse@@Base+0x3440>
   1cbec:	ldr	r1, [fp, #8]
   1cbf0:	str	r4, [r2, #20]
   1cbf4:	movw	r0, #56141	; 0xdb4d
   1cbf8:	movt	r0, #1
   1cbfc:	stm	sp, {r1, r5}
   1cc00:	str	r2, [sp, #8]
   1cc04:	str	r0, [sp, #16]
   1cc08:	mov	r0, r3
   1cc0c:	mov	r2, r7
   1cc10:	mov	r3, r6
   1cc14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cc18:	str	r1, [sp, #12]
   1cc1c:	mov	r1, sl
   1cc20:	bl	1cd80 <argp_parse@@Base+0x34b8>
   1cc24:	ldr	r2, [fp, #16]
   1cc28:	mov	r6, r0
   1cc2c:	cmn	r0, #1
   1cc30:	bne	1cba4 <argp_parse@@Base+0x32dc>
   1cc34:	ldr	r9, [r2]
   1cc38:	ldr	r0, [sl, r9, lsl #2]
   1cc3c:	add	r4, r0, #1
   1cc40:	b	1cd20 <argp_parse@@Base+0x3458>
   1cc44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc48:	cmp	r9, r0
   1cc4c:	bne	1ccec <argp_parse@@Base+0x3424>
   1cc50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc54:	cmp	r0, #0
   1cc58:	bne	1cd54 <argp_parse@@Base+0x348c>
   1cc5c:	str	r6, [r3, #8]
   1cc60:	ldrb	r6, [r7]
   1cc64:	cmp	r6, #58	; 0x3a
   1cc68:	movwne	r6, #63	; 0x3f
   1cc6c:	b	1ccfc <argp_parse@@Base+0x3434>
   1cc70:	movw	r0, #62912	; 0xf5c0
   1cc74:	ldr	r2, [sl]
   1cc78:	movw	r1, #60851	; 0xedb3
   1cc7c:	mov	r4, r3
   1cc80:	mov	r3, r6
   1cc84:	movt	r0, #2
   1cc88:	movt	r1, #1
   1cc8c:	ldr	r0, [r0]
   1cc90:	bl	11c44 <fprintf@plt>
   1cc94:	mov	r3, r4
   1cc98:	b	1c61c <argp_parse@@Base+0x2d54>
   1cc9c:	ldr	r8, [sl, r9, lsl #2]
   1cca0:	ldr	r2, [fp, #8]
   1cca4:	mov	r0, #0
   1cca8:	str	r8, [r3, #12]
   1ccac:	movw	r1, #60920	; 0xedf8
   1ccb0:	str	r0, [r3, #12]
   1ccb4:	str	r8, [r3, #20]
   1ccb8:	movt	r1, #1
   1ccbc:	str	r2, [sp]
   1ccc0:	stmib	sp, {r0, r3}
   1ccc4:	str	r1, [sp, #16]
   1ccc8:	mov	r1, sl
   1cccc:	mov	r2, r7
   1ccd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ccd4:	ldr	r3, [sp, #48]	; 0x30
   1ccd8:	str	r0, [sp, #12]
   1ccdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cce0:	bl	1cd80 <argp_parse@@Base+0x34b8>
   1cce4:	sub	sp, fp, #28
   1cce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccec:	add	r0, r9, #1
   1ccf0:	str	r0, [r3]
   1ccf4:	ldr	r0, [sl, r9, lsl #2]
   1ccf8:	str	r0, [r3, #12]
   1ccfc:	mov	r0, #0
   1cd00:	str	r0, [r3, #20]
   1cd04:	b	1cba4 <argp_parse@@Base+0x32dc>
   1cd08:	mov	r0, r7
   1cd0c:	bl	11c38 <strchr@plt>
   1cd10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd14:	ldr	r2, [fp, #16]
   1cd18:	cmp	r0, #0
   1cd1c:	beq	1cbec <argp_parse@@Base+0x3324>
   1cd20:	str	r4, [r2, #20]
   1cd24:	b	1c5d0 <argp_parse@@Base+0x2d08>
   1cd28:	movw	r0, #62912	; 0xf5c0
   1cd2c:	ldr	r2, [sl]
   1cd30:	movw	r1, #60879	; 0xedcf
   1cd34:	mov	r4, r3
   1cd38:	mov	r3, r6
   1cd3c:	movt	r0, #2
   1cd40:	movt	r1, #1
   1cd44:	ldr	r0, [r0]
   1cd48:	bl	11c44 <fprintf@plt>
   1cd4c:	mov	r3, r4
   1cd50:	b	1c670 <argp_parse@@Base+0x2da8>
   1cd54:	movw	r0, #62912	; 0xf5c0
   1cd58:	ldr	r2, [sl]
   1cd5c:	movw	r1, #60879	; 0xedcf
   1cd60:	mov	r4, r3
   1cd64:	mov	r3, r6
   1cd68:	movt	r0, #2
   1cd6c:	movt	r1, #1
   1cd70:	ldr	r0, [r0]
   1cd74:	bl	11c44 <fprintf@plt>
   1cd78:	mov	r3, r4
   1cd7c:	b	1cc5c <argp_parse@@Base+0x3394>
   1cd80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd84:	add	fp, sp, #28
   1cd88:	sub	sp, sp, #44	; 0x2c
   1cd8c:	str	r0, [sp, #12]
   1cd90:	ldr	r0, [fp, #16]
   1cd94:	ldr	r5, [fp, #8]
   1cd98:	str	r2, [sp, #16]
   1cd9c:	str	r1, [sp, #20]
   1cda0:	ldr	r9, [r0, #20]
   1cda4:	mov	r6, r9
   1cda8:	b	1cdb0 <argp_parse@@Base+0x34e8>
   1cdac:	add	r6, r6, #1
   1cdb0:	ldrb	r0, [r6]
   1cdb4:	cmp	r0, #0
   1cdb8:	cmpne	r0, #61	; 0x3d
   1cdbc:	bne	1cdac <argp_parse@@Base+0x34e4>
   1cdc0:	ldr	sl, [r3]
   1cdc4:	mvn	ip, #0
   1cdc8:	str	r3, [fp, #-32]	; 0xffffffe0
   1cdcc:	cmp	sl, #0
   1cdd0:	beq	1cfd4 <argp_parse@@Base+0x370c>
   1cdd4:	sub	r4, r6, r9
   1cdd8:	mov	r8, #0
   1cddc:	mov	r5, sl
   1cde0:	mov	r7, r3
   1cde4:	mov	r0, r5
   1cde8:	mov	r1, r9
   1cdec:	mov	r2, r4
   1cdf0:	bl	11ddc <strncmp@plt>
   1cdf4:	cmp	r0, #0
   1cdf8:	bne	1ce0c <argp_parse@@Base+0x3544>
   1cdfc:	mov	r0, r5
   1ce00:	bl	11c20 <strlen@plt>
   1ce04:	cmp	r4, r0
   1ce08:	beq	1d000 <argp_parse@@Base+0x3738>
   1ce0c:	ldr	r5, [r7, #16]!
   1ce10:	add	r8, r8, #1
   1ce14:	cmp	r5, #0
   1ce18:	bne	1cde4 <argp_parse@@Base+0x351c>
   1ce1c:	cmp	sl, #0
   1ce20:	beq	1d00c <argp_parse@@Base+0x3744>
   1ce24:	mvn	r0, #0
   1ce28:	str	r4, [sp, #36]	; 0x24
   1ce2c:	mov	r4, #0
   1ce30:	mov	r5, #0
   1ce34:	mov	r7, #0
   1ce38:	str	r0, [sp, #24]
   1ce3c:	mov	r0, #0
   1ce40:	str	r0, [sp, #32]
   1ce44:	mov	r0, #0
   1ce48:	str	r0, [sp, #8]
   1ce4c:	mov	r0, #0
   1ce50:	str	r0, [sp, #28]
   1ce54:	b	1ce6c <argp_parse@@Base+0x35a4>
   1ce58:	ldr	r0, [fp, #16]
   1ce5c:	add	r1, r1, #16
   1ce60:	add	r5, r5, #1
   1ce64:	mov	r4, r1
   1ce68:	ldr	r9, [r0, #20]
   1ce6c:	ldr	r2, [sp, #36]	; 0x24
   1ce70:	mov	r0, sl
   1ce74:	mov	r1, r9
   1ce78:	bl	11ddc <strncmp@plt>
   1ce7c:	cmp	r0, #0
   1ce80:	beq	1cea0 <argp_parse@@Base+0x35d8>
   1ce84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce88:	mov	r1, r4
   1ce8c:	add	r0, r3, r5, lsl #4
   1ce90:	ldr	sl, [r0, #16]
   1ce94:	cmp	sl, #0
   1ce98:	bne	1ce58 <argp_parse@@Base+0x3590>
   1ce9c:	b	1cfec <argp_parse@@Base+0x3724>
   1cea0:	cmp	r7, #0
   1cea4:	beq	1cf58 <argp_parse@@Base+0x3690>
   1cea8:	ldr	r0, [fp, #12]
   1ceac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ceb0:	cmp	r0, #0
   1ceb4:	bne	1cedc <argp_parse@@Base+0x3614>
   1ceb8:	add	r0, r3, r5, lsl #4
   1cebc:	ldr	r2, [r7, #4]
   1cec0:	ldr	r1, [r0, #4]
   1cec4:	cmp	r2, r1
   1cec8:	bne	1cedc <argp_parse@@Base+0x3614>
   1cecc:	ldr	r1, [r0, #8]
   1ced0:	ldr	r2, [r7, #8]
   1ced4:	cmp	r2, r1
   1ced8:	beq	1cf90 <argp_parse@@Base+0x36c8>
   1cedc:	ldr	r0, [sp, #32]
   1cee0:	mov	r1, r4
   1cee4:	cmp	r0, #0
   1cee8:	bne	1ce8c <argp_parse@@Base+0x35c4>
   1ceec:	ldr	r0, [fp, #20]
   1cef0:	cmp	r0, #0
   1cef4:	beq	1cf6c <argp_parse@@Base+0x36a4>
   1cef8:	ldr	r9, [sp, #28]
   1cefc:	mov	r0, #0
   1cf00:	str	r0, [sp, #32]
   1cf04:	cmp	r9, #0
   1cf08:	bne	1cf80 <argp_parse@@Base+0x36b8>
   1cf0c:	mov	r0, r8
   1cf10:	bl	1bc4c <argp_parse@@Base+0x2384>
   1cf14:	cmp	r0, #0
   1cf18:	beq	1cfc0 <argp_parse@@Base+0x36f8>
   1cf1c:	mov	r9, r0
   1cf20:	mov	r0, #0
   1cf24:	mov	r1, #0
   1cf28:	mov	r2, r8
   1cf2c:	str	r0, [sp, #32]
   1cf30:	mov	r0, r9
   1cf34:	bl	11c8c <memset@plt>
   1cf38:	ldr	r0, [sp, #24]
   1cf3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf40:	mov	r1, #1
   1cf44:	mov	r2, #1
   1cf48:	str	r1, [sp, #8]
   1cf4c:	mov	r1, r4
   1cf50:	strb	r2, [r9, r0]
   1cf54:	b	1cf80 <argp_parse@@Base+0x36b8>
   1cf58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf5c:	mov	r1, r4
   1cf60:	str	r5, [sp, #24]
   1cf64:	add	r7, r3, r4
   1cf68:	b	1ce8c <argp_parse@@Base+0x35c4>
   1cf6c:	ldr	r9, [sp, #28]
   1cf70:	mov	r0, #1
   1cf74:	str	r0, [sp, #32]
   1cf78:	cmp	r9, #0
   1cf7c:	beq	1cfb4 <argp_parse@@Base+0x36ec>
   1cf80:	mov	r0, #1
   1cf84:	str	r9, [sp, #28]
   1cf88:	strb	r0, [r9, r5]
   1cf8c:	b	1ce8c <argp_parse@@Base+0x35c4>
   1cf90:	ldr	r1, [sp, #32]
   1cf94:	cmp	r1, #0
   1cf98:	bne	1ce88 <argp_parse@@Base+0x35c0>
   1cf9c:	ldr	r0, [r0, #12]
   1cfa0:	ldr	r1, [r7, #12]
   1cfa4:	cmp	r1, r0
   1cfa8:	mov	r1, r4
   1cfac:	bne	1ceec <argp_parse@@Base+0x3624>
   1cfb0:	b	1ce8c <argp_parse@@Base+0x35c4>
   1cfb4:	mov	r0, #0
   1cfb8:	str	r0, [sp, #28]
   1cfbc:	b	1ce8c <argp_parse@@Base+0x35c4>
   1cfc0:	mov	r0, #1
   1cfc4:	str	r0, [sp, #32]
   1cfc8:	mov	r0, #0
   1cfcc:	str	r0, [sp, #28]
   1cfd0:	b	1ce84 <argp_parse@@Base+0x35bc>
   1cfd4:	mov	r0, #0
   1cfd8:	mov	r8, #0
   1cfdc:	mov	r7, #0
   1cfe0:	mov	sl, #0
   1cfe4:	mov	r4, #0
   1cfe8:	b	1d024 <argp_parse@@Base+0x375c>
   1cfec:	ldr	r5, [fp, #8]
   1cff0:	ldr	ip, [sp, #24]
   1cff4:	ldr	sl, [sp, #28]
   1cff8:	ldr	r4, [sp, #8]
   1cffc:	b	1d028 <argp_parse@@Base+0x3760>
   1d000:	ldr	r5, [fp, #8]
   1d004:	mov	ip, r8
   1d008:	b	1d090 <argp_parse@@Base+0x37c8>
   1d00c:	ldr	r5, [fp, #8]
   1d010:	mov	r0, #0
   1d014:	mov	r7, #0
   1d018:	mov	sl, #0
   1d01c:	mov	r4, #0
   1d020:	mvn	ip, #0
   1d024:	str	r0, [sp, #32]
   1d028:	cmp	sl, #0
   1d02c:	ldreq	r0, [sp, #32]
   1d030:	cmpeq	r0, #0
   1d034:	beq	1d088 <argp_parse@@Base+0x37c0>
   1d038:	ldr	r0, [fp, #20]
   1d03c:	cmp	r0, #0
   1d040:	bne	1d1f8 <argp_parse@@Base+0x3930>
   1d044:	cmp	r4, #0
   1d048:	beq	1d054 <argp_parse@@Base+0x378c>
   1d04c:	mov	r0, sl
   1d050:	bl	1ad78 <argp_parse@@Base+0x14b0>
   1d054:	ldr	r0, [fp, #16]
   1d058:	ldr	r4, [r0, #20]
   1d05c:	mov	r5, r0
   1d060:	mov	r0, r4
   1d064:	bl	11c20 <strlen@plt>
   1d068:	mov	r1, #0
   1d06c:	add	r0, r4, r0
   1d070:	str	r1, [r5, #8]
   1d074:	str	r0, [r5, #20]
   1d078:	ldr	r0, [r5]
   1d07c:	add	r0, r0, #1
   1d080:	str	r0, [r5]
   1d084:	b	1d1bc <argp_parse@@Base+0x38f4>
   1d088:	cmp	r7, #0
   1d08c:	beq	1d12c <argp_parse@@Base+0x3864>
   1d090:	ldr	r1, [fp, #16]
   1d094:	mov	r0, #0
   1d098:	str	r0, [r1, #20]
   1d09c:	mov	r2, r1
   1d0a0:	ldr	r1, [r1]
   1d0a4:	add	r0, r1, #1
   1d0a8:	str	r0, [r2]
   1d0ac:	ldrb	r3, [r6]
   1d0b0:	ldr	r2, [r7, #4]
   1d0b4:	cmp	r3, #0
   1d0b8:	beq	1d0d4 <argp_parse@@Base+0x380c>
   1d0bc:	cmp	r2, #0
   1d0c0:	beq	1d1a4 <argp_parse@@Base+0x38dc>
   1d0c4:	ldr	r1, [fp, #16]
   1d0c8:	add	r0, r6, #1
   1d0cc:	str	r0, [r1, #12]
   1d0d0:	b	1d100 <argp_parse@@Base+0x3838>
   1d0d4:	cmp	r2, #1
   1d0d8:	bne	1d100 <argp_parse@@Base+0x3838>
   1d0dc:	ldr	r2, [sp, #12]
   1d0e0:	cmp	r0, r2
   1d0e4:	bge	1d1c8 <argp_parse@@Base+0x3900>
   1d0e8:	ldr	r2, [fp, #16]
   1d0ec:	add	r1, r1, #2
   1d0f0:	str	r1, [r2]
   1d0f4:	ldr	r1, [sp, #20]
   1d0f8:	ldr	r0, [r1, r0, lsl #2]
   1d0fc:	str	r0, [r2, #12]
   1d100:	cmp	r5, #0
   1d104:	strne	ip, [r5]
   1d108:	ldr	r1, [r7, #8]
   1d10c:	ldr	r0, [r7, #12]
   1d110:	cmp	r1, #0
   1d114:	strne	r0, [r1]
   1d118:	movne	r0, #0
   1d11c:	subne	sp, fp, #28
   1d120:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d124:	sub	sp, fp, #28
   1d128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d12c:	ldr	r0, [fp, #12]
   1d130:	cmp	r0, #0
   1d134:	beq	1d178 <argp_parse@@Base+0x38b0>
   1d138:	ldr	r0, [fp, #16]
   1d13c:	ldr	r1, [sp, #20]
   1d140:	ldr	r0, [r0]
   1d144:	ldr	r0, [r1, r0, lsl #2]
   1d148:	ldrb	r0, [r0, #1]
   1d14c:	cmp	r0, #45	; 0x2d
   1d150:	beq	1d178 <argp_parse@@Base+0x38b0>
   1d154:	ldr	r0, [fp, #16]
   1d158:	ldr	r0, [r0, #20]
   1d15c:	ldrb	r1, [r0]
   1d160:	ldr	r0, [sp, #16]
   1d164:	bl	11c38 <strchr@plt>
   1d168:	mov	r1, r0
   1d16c:	mvn	r0, #0
   1d170:	cmp	r1, #0
   1d174:	bne	1d1f0 <argp_parse@@Base+0x3928>
   1d178:	ldr	r0, [fp, #20]
   1d17c:	cmp	r0, #0
   1d180:	bne	1d2e4 <argp_parse@@Base+0x3a1c>
   1d184:	ldr	r1, [fp, #16]
   1d188:	mov	r0, #0
   1d18c:	str	r0, [r1, #20]
   1d190:	str	r0, [r1, #8]
   1d194:	ldr	r0, [r1]
   1d198:	add	r0, r0, #1
   1d19c:	str	r0, [r1]
   1d1a0:	b	1d1bc <argp_parse@@Base+0x38f4>
   1d1a4:	ldr	r0, [fp, #20]
   1d1a8:	cmp	r0, #0
   1d1ac:	bne	1d318 <argp_parse@@Base+0x3a50>
   1d1b0:	ldr	r0, [r7, #12]
   1d1b4:	ldr	r1, [fp, #16]
   1d1b8:	str	r0, [r1, #8]
   1d1bc:	mov	r0, #63	; 0x3f
   1d1c0:	sub	sp, fp, #28
   1d1c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1c8:	ldr	r0, [fp, #20]
   1d1cc:	cmp	r0, #0
   1d1d0:	bne	1d348 <argp_parse@@Base+0x3a80>
   1d1d4:	ldr	r0, [r7, #12]
   1d1d8:	ldr	r1, [fp, #16]
   1d1dc:	str	r0, [r1, #8]
   1d1e0:	ldr	r0, [sp, #16]
   1d1e4:	ldrb	r0, [r0]
   1d1e8:	cmp	r0, #58	; 0x3a
   1d1ec:	movwne	r0, #63	; 0x3f
   1d1f0:	sub	sp, fp, #28
   1d1f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1f8:	movw	r5, #62912	; 0xf5c0
   1d1fc:	ldr	r1, [sp, #32]
   1d200:	movt	r5, #2
   1d204:	ldr	r0, [r5]
   1d208:	cmp	r1, #0
   1d20c:	beq	1d240 <argp_parse@@Base+0x3978>
   1d210:	ldr	r1, [sp, #20]
   1d214:	ldr	r3, [fp, #24]
   1d218:	ldr	r2, [r1]
   1d21c:	ldr	r1, [fp, #16]
   1d220:	ldr	r1, [r1, #20]
   1d224:	str	r1, [sp]
   1d228:	movw	r1, #60940	; 0xee0c
   1d22c:	movt	r1, #1
   1d230:	bl	11c44 <fprintf@plt>
   1d234:	cmp	r4, #0
   1d238:	bne	1d04c <argp_parse@@Base+0x3784>
   1d23c:	b	1d054 <argp_parse@@Base+0x378c>
   1d240:	bl	11d58 <flockfile@plt>
   1d244:	ldr	r1, [fp, #16]
   1d248:	ldr	r0, [sp, #20]
   1d24c:	ldr	r9, [fp, #24]
   1d250:	ldr	r1, [r1, #20]
   1d254:	ldr	r2, [r0]
   1d258:	ldr	r0, [r5]
   1d25c:	mov	r3, r9
   1d260:	str	r1, [sp]
   1d264:	movw	r1, #60972	; 0xee2c
   1d268:	movt	r1, #1
   1d26c:	bl	11c44 <fprintf@plt>
   1d270:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d274:	cmp	r8, #0
   1d278:	beq	1d2c4 <argp_parse@@Base+0x39fc>
   1d27c:	mov	r6, sl
   1d280:	b	1d2a8 <argp_parse@@Base+0x39e0>
   1d284:	ldr	r3, [r1]
   1d288:	ldr	r0, [r5]
   1d28c:	mov	r7, r1
   1d290:	movw	r1, #61019	; 0xee5b
   1d294:	mov	r2, r9
   1d298:	movt	r1, #1
   1d29c:	bl	11c44 <fprintf@plt>
   1d2a0:	mov	r1, r7
   1d2a4:	b	1d2b4 <argp_parse@@Base+0x39ec>
   1d2a8:	ldrb	r0, [r6]
   1d2ac:	cmp	r0, #0
   1d2b0:	bne	1d284 <argp_parse@@Base+0x39bc>
   1d2b4:	add	r1, r1, #16
   1d2b8:	add	r6, r6, #1
   1d2bc:	subs	r8, r8, #1
   1d2c0:	bne	1d2a8 <argp_parse@@Base+0x39e0>
   1d2c4:	ldr	r1, [r5]
   1d2c8:	mov	r0, #10
   1d2cc:	bl	11d40 <fputc@plt>
   1d2d0:	ldr	r0, [r5]
   1d2d4:	bl	11b18 <funlockfile@plt>
   1d2d8:	cmp	r4, #0
   1d2dc:	bne	1d04c <argp_parse@@Base+0x3784>
   1d2e0:	b	1d054 <argp_parse@@Base+0x378c>
   1d2e4:	ldr	r1, [fp, #16]
   1d2e8:	ldr	r0, [sp, #20]
   1d2ec:	ldr	r3, [fp, #24]
   1d2f0:	ldr	r2, [r0]
   1d2f4:	movw	r0, #62912	; 0xf5c0
   1d2f8:	ldr	r1, [r1, #20]
   1d2fc:	movt	r0, #2
   1d300:	ldr	r0, [r0]
   1d304:	str	r1, [sp]
   1d308:	movw	r1, #61027	; 0xee63
   1d30c:	movt	r1, #1
   1d310:	bl	11c44 <fprintf@plt>
   1d314:	b	1d184 <argp_parse@@Base+0x38bc>
   1d318:	ldr	r0, [sp, #20]
   1d31c:	ldr	r1, [r7]
   1d320:	ldr	r3, [fp, #24]
   1d324:	ldr	r2, [r0]
   1d328:	movw	r0, #62912	; 0xf5c0
   1d32c:	str	r1, [sp]
   1d330:	movw	r1, #61059	; 0xee83
   1d334:	movt	r0, #2
   1d338:	movt	r1, #1
   1d33c:	ldr	r0, [r0]
   1d340:	bl	11c44 <fprintf@plt>
   1d344:	b	1d1b0 <argp_parse@@Base+0x38e8>
   1d348:	ldr	r0, [sp, #20]
   1d34c:	ldr	r1, [r7]
   1d350:	ldr	r3, [fp, #24]
   1d354:	ldr	r2, [r0]
   1d358:	movw	r0, #62912	; 0xf5c0
   1d35c:	str	r1, [sp]
   1d360:	movw	r1, #61104	; 0xeeb0
   1d364:	movt	r0, #2
   1d368:	movt	r1, #1
   1d36c:	ldr	r0, [r0]
   1d370:	bl	11c44 <fprintf@plt>
   1d374:	b	1d1d4 <argp_parse@@Base+0x390c>
   1d378:	push	{r4, r5, r6, r7, fp, lr}
   1d37c:	add	fp, sp, #16
   1d380:	sub	sp, sp, #16
   1d384:	movw	r7, #62888	; 0xf5a8
   1d388:	movw	r5, #62892	; 0xf5ac
   1d38c:	movw	r6, #64024	; 0xfa18
   1d390:	movt	r5, #2
   1d394:	movt	r7, #2
   1d398:	movt	r6, #2
   1d39c:	ldr	r4, [r7]
   1d3a0:	ldr	r5, [r5]
   1d3a4:	stm	r6, {r4, r5}
   1d3a8:	ldr	r5, [fp, #16]
   1d3ac:	str	r6, [sp, #8]
   1d3b0:	str	r5, [sp, #12]
   1d3b4:	ldr	r5, [fp, #12]
   1d3b8:	str	r5, [sp, #4]
   1d3bc:	ldr	r5, [fp, #8]
   1d3c0:	str	r5, [sp]
   1d3c4:	bl	1c468 <argp_parse@@Base+0x2ba0>
   1d3c8:	ldr	r1, [r6]
   1d3cc:	ldr	r3, [r6, #12]
   1d3d0:	ldr	r2, [r6, #8]
   1d3d4:	str	r1, [r7]
   1d3d8:	movw	r1, #148	; 0x94
   1d3dc:	movt	r1, #3
   1d3e0:	str	r3, [r1]
   1d3e4:	movw	r1, #62896	; 0xf5b0
   1d3e8:	movt	r1, #2
   1d3ec:	str	r2, [r1]
   1d3f0:	sub	sp, fp, #16
   1d3f4:	pop	{r4, r5, r6, r7, fp, pc}
   1d3f8:	push	{r4, r5, r6, sl, fp, lr}
   1d3fc:	add	fp, sp, #16
   1d400:	sub	sp, sp, #16
   1d404:	movw	r6, #62888	; 0xf5a8
   1d408:	movw	r4, #62892	; 0xf5ac
   1d40c:	movw	r5, #64024	; 0xfa18
   1d410:	movt	r4, #2
   1d414:	movt	r6, #2
   1d418:	movt	r5, #2
   1d41c:	ldr	r3, [r6]
   1d420:	ldr	r4, [r4]
   1d424:	stm	r5, {r3, r4}
   1d428:	mov	r4, #0
   1d42c:	mov	r3, #1
   1d430:	str	r4, [sp]
   1d434:	stmib	sp, {r4, r5}
   1d438:	str	r3, [sp, #12]
   1d43c:	mov	r3, #0
   1d440:	bl	1c468 <argp_parse@@Base+0x2ba0>
   1d444:	ldr	r1, [r5]
   1d448:	ldr	r3, [r5, #12]
   1d44c:	ldr	r2, [r5, #8]
   1d450:	str	r1, [r6]
   1d454:	movw	r1, #148	; 0x94
   1d458:	movt	r1, #3
   1d45c:	str	r3, [r1]
   1d460:	movw	r1, #62896	; 0xf5b0
   1d464:	movt	r1, #2
   1d468:	str	r2, [r1]
   1d46c:	sub	sp, fp, #16
   1d470:	pop	{r4, r5, r6, sl, fp, pc}
   1d474:	cmp	r2, #0
   1d478:	beq	1d4a8 <argp_parse@@Base+0x3be0>
   1d47c:	mvn	r3, #0
   1d480:	udiv	r3, r3, r2
   1d484:	cmp	r3, r1
   1d488:	bcs	1d4a8 <argp_parse@@Base+0x3be0>
   1d48c:	push	{fp, lr}
   1d490:	mov	fp, sp
   1d494:	bl	11c50 <__errno_location@plt>
   1d498:	mov	r1, #12
   1d49c:	str	r1, [r0]
   1d4a0:	mov	r0, #0
   1d4a4:	pop	{fp, pc}
   1d4a8:	mul	r1, r2, r1
   1d4ac:	b	1bc7c <argp_parse@@Base+0x23b4>
   1d4b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d4b4:	mov	r7, r0
   1d4b8:	ldr	r6, [pc, #72]	; 1d508 <argp_parse@@Base+0x3c40>
   1d4bc:	ldr	r5, [pc, #72]	; 1d50c <argp_parse@@Base+0x3c44>
   1d4c0:	add	r6, pc, r6
   1d4c4:	add	r5, pc, r5
   1d4c8:	sub	r6, r6, r5
   1d4cc:	mov	r8, r1
   1d4d0:	mov	r9, r2
   1d4d4:	bl	11954 <calloc@plt-0x20>
   1d4d8:	asrs	r6, r6, #2
   1d4dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d4e0:	mov	r4, #0
   1d4e4:	add	r4, r4, #1
   1d4e8:	ldr	r3, [r5], #4
   1d4ec:	mov	r2, r9
   1d4f0:	mov	r1, r8
   1d4f4:	mov	r0, r7
   1d4f8:	blx	r3
   1d4fc:	cmp	r6, r4
   1d500:	bne	1d4e4 <argp_parse@@Base+0x3c1c>
   1d504:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d508:	andeq	r1, r1, ip, lsr sl
   1d50c:	andeq	r1, r1, r4, lsr sl
   1d510:	bx	lr

Disassembly of section .fini:

0001d514 <.fini>:
   1d514:	push	{r3, lr}
   1d518:	pop	{r3, pc}
