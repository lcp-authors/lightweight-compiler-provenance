
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010d8c <.init>:
   10d8c:	push	{r3, lr}
   10d90:	bl	11074 <Mat_VarReadNextInfo@plt+0x4c>
   10d94:	pop	{r3, pc}

Disassembly of section .plt:

00010d98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10d98:	push	{lr}		; (str lr, [sp, #-4]!)
   10d9c:	ldr	lr, [pc, #4]	; 10da8 <Mat_VarGetNumberOfFields@plt-0x4>
   10da0:	add	lr, pc, lr
   10da4:	ldr	pc, [lr, #8]!
   10da8:	andeq	r4, r1, r8, asr r2

00010dac <Mat_VarGetNumberOfFields@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #600]!	; 0x258

00010db8 <Mat_SetVerbose@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #592]!	; 0x250

00010dc4 <raise@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #584]!	; 0x248

00010dd0 <Mat_LogClose@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #576]!	; 0x240

00010ddc <Mat_VarReadNext@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #568]!	; 0x238

00010de8 <strcmp@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #560]!	; 0x230

00010df4 <Mat_Open@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #552]!	; 0x228

00010e00 <strtol@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #544]!	; 0x220

00010e0c <printf@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #536]!	; 0x218

00010e18 <Mat_VarGetCells@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #528]!	; 0x210

00010e24 <Mat_VarGetCell@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #520]!	; 0x208

00010e30 <Mat_VarCreate@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #20, 20	; 0x14000
   10e38:	ldr	pc, [ip, #512]!	; 0x200

00010e3c <free@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #20, 20	; 0x14000
   10e44:	ldr	pc, [ip, #504]!	; 0x1f8

00010e48 <Mat_Warning@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #20, 20	; 0x14000
   10e50:	ldr	pc, [ip, #496]!	; 0x1f0

00010e54 <Mat_VarReadDataLinear@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #20, 20	; 0x14000
   10e5c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e60 <Mat_Message@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #20, 20	; 0x14000
   10e68:	ldr	pc, [ip, #480]!	; 0x1e0

00010e6c <Mat_VarReadData@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #20, 20	; 0x14000
   10e74:	ldr	pc, [ip, #472]!	; 0x1d8

00010e78 <Mat_VarReadDataAll@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #20, 20	; 0x14000
   10e80:	ldr	pc, [ip, #464]!	; 0x1d0

00010e84 <Mat_VarReadInfo@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #20, 20	; 0x14000
   10e8c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e90 <fwrite@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #20, 20	; 0x14000
   10e98:	ldr	pc, [ip, #448]!	; 0x1c0

00010e9c <Mat_VarGetStructFieldnames@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #20, 20	; 0x14000
   10ea4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ea8 <floor@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #20, 20	; 0x14000
   10eb0:	ldr	pc, [ip, #432]!	; 0x1b0

00010eb4 <getenv@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #20, 20	; 0x14000
   10ebc:	ldr	pc, [ip, #424]!	; 0x1a8

00010ec0 <puts@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #20, 20	; 0x14000
   10ec8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ecc <malloc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #20, 20	; 0x14000
   10ed4:	ldr	pc, [ip, #408]!	; 0x198

00010ed8 <log10@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #20, 20	; 0x14000
   10ee0:	ldr	pc, [ip, #400]!	; 0x190

00010ee4 <__libc_start_main@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #20, 20	; 0x14000
   10eec:	ldr	pc, [ip, #392]!	; 0x188

00010ef0 <__gmon_start__@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #20, 20	; 0x14000
   10ef8:	ldr	pc, [ip, #384]!	; 0x180

00010efc <exit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #20, 20	; 0x14000
   10f04:	ldr	pc, [ip, #376]!	; 0x178

00010f08 <Mat_VarFree@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #20, 20	; 0x14000
   10f10:	ldr	pc, [ip, #368]!	; 0x170

00010f14 <Mat_SizeOf@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #20, 20	; 0x14000
   10f1c:	ldr	pc, [ip, #360]!	; 0x168

00010f20 <strlen@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #20, 20	; 0x14000
   10f28:	ldr	pc, [ip, #352]!	; 0x160

00010f2c <strchr@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #20, 20	; 0x14000
   10f34:	ldr	pc, [ip, #344]!	; 0x158

00010f38 <warnx@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #20, 20	; 0x14000
   10f40:	ldr	pc, [ip, #336]!	; 0x150

00010f44 <fprintf@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #20, 20	; 0x14000
   10f4c:	ldr	pc, [ip, #328]!	; 0x148

00010f50 <Mat_GetLibraryVersion@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #20, 20	; 0x14000
   10f58:	ldr	pc, [ip, #320]!	; 0x140

00010f5c <Mat_VarPrint@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #20, 20	; 0x14000
   10f64:	ldr	pc, [ip, #312]!	; 0x138

00010f68 <memset@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #20, 20	; 0x14000
   10f70:	ldr	pc, [ip, #304]!	; 0x130

00010f74 <putchar@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #20, 20	; 0x14000
   10f7c:	ldr	pc, [ip, #296]!	; 0x128

00010f80 <Mat_Close@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #20, 20	; 0x14000
   10f88:	ldr	pc, [ip, #288]!	; 0x120

00010f8c <Mat_Critical@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #20, 20	; 0x14000
   10f94:	ldr	pc, [ip, #280]!	; 0x118

00010f98 <ceil@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #20, 20	; 0x14000
   10fa0:	ldr	pc, [ip, #272]!	; 0x110

00010fa4 <Mat_LogInitFunc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #20, 20	; 0x14000
   10fac:	ldr	pc, [ip, #264]!	; 0x108

00010fb0 <Mat_VerbMessage@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #20, 20	; 0x14000
   10fb8:	ldr	pc, [ip, #256]!	; 0x100

00010fbc <Mat_VarGetCellsLinear@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #20, 20	; 0x14000
   10fc4:	ldr	pc, [ip, #248]!	; 0xf8

00010fc8 <sprintf@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #20, 20	; 0x14000
   10fd0:	ldr	pc, [ip, #240]!	; 0xf0

00010fd4 <Mat_Help@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #20, 20	; 0x14000
   10fdc:	ldr	pc, [ip, #232]!	; 0xe8

00010fe0 <Mat_VarGetStructFieldByName@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #20, 20	; 0x14000
   10fe8:	ldr	pc, [ip, #224]!	; 0xe0

00010fec <Mat_SizeOfClass@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #20, 20	; 0x14000
   10ff4:	ldr	pc, [ip, #216]!	; 0xd8

00010ff8 <Mat_VarGetSize@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #20, 20	; 0x14000
   11000:	ldr	pc, [ip, #208]!	; 0xd0

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #20, 20	; 0x14000
   1100c:	ldr	pc, [ip, #200]!	; 0xc8

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #20, 20	; 0x14000
   11018:	ldr	pc, [ip, #192]!	; 0xc0

0001101c <Mat_VarDuplicate@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #20, 20	; 0x14000
   11024:	ldr	pc, [ip, #184]!	; 0xb8

00011028 <Mat_VarReadNextInfo@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #20, 20	; 0x14000
   11030:	ldr	pc, [ip, #176]!	; 0xb0

Disassembly of section .text:

00011038 <getopt@@Base-0x2bf0>:
   11038:	mov	fp, #0
   1103c:	mov	lr, #0
   11040:	pop	{r1}		; (ldr r1, [sp], #4)
   11044:	mov	r2, sp
   11048:	push	{r2}		; (str r2, [sp, #-4]!)
   1104c:	push	{r0}		; (str r0, [sp, #-4]!)
   11050:	ldr	ip, [pc, #16]	; 11068 <Mat_VarReadNextInfo@plt+0x40>
   11054:	push	{ip}		; (str ip, [sp, #-4]!)
   11058:	ldr	r0, [pc, #12]	; 1106c <Mat_VarReadNextInfo@plt+0x44>
   1105c:	ldr	r3, [pc, #12]	; 11070 <Mat_VarReadNextInfo@plt+0x48>
   11060:	bl	10ee4 <__libc_start_main@plt>
   11064:	bl	11010 <abort@plt>
   11068:	andeq	r4, r1, ip, asr #2
   1106c:	andeq	r2, r1, ip, lsr r3
   11070:	andeq	r4, r1, ip, ror #1
   11074:	ldr	r3, [pc, #20]	; 11090 <Mat_VarReadNextInfo@plt+0x68>
   11078:	ldr	r2, [pc, #20]	; 11094 <Mat_VarReadNextInfo@plt+0x6c>
   1107c:	add	r3, pc, r3
   11080:	ldr	r2, [r3, r2]
   11084:	cmp	r2, #0
   11088:	bxeq	lr
   1108c:	b	10ef0 <__gmon_start__@plt>
   11090:	andeq	r3, r1, ip, ror pc
   11094:	andeq	r0, r0, ip, ror #1
   11098:	ldr	r3, [pc, #28]	; 110bc <Mat_VarReadNextInfo@plt+0x94>
   1109c:	ldr	r0, [pc, #28]	; 110c0 <Mat_VarReadNextInfo@plt+0x98>
   110a0:	sub	r3, r3, r0
   110a4:	cmp	r3, #6
   110a8:	bxls	lr
   110ac:	ldr	r3, [pc, #16]	; 110c4 <Mat_VarReadNextInfo@plt+0x9c>
   110b0:	cmp	r3, #0
   110b4:	bxeq	lr
   110b8:	bx	r3
   110bc:	ldrdeq	r5, [r2], -pc	; <UNPREDICTABLE>
   110c0:	ldrdeq	r5, [r2], -ip
   110c4:	andeq	r0, r0, r0
   110c8:	ldr	r1, [pc, #36]	; 110f4 <Mat_VarReadNextInfo@plt+0xcc>
   110cc:	ldr	r0, [pc, #36]	; 110f8 <Mat_VarReadNextInfo@plt+0xd0>
   110d0:	sub	r1, r1, r0
   110d4:	asr	r1, r1, #2
   110d8:	add	r1, r1, r1, lsr #31
   110dc:	asrs	r1, r1, #1
   110e0:	bxeq	lr
   110e4:	ldr	r3, [pc, #16]	; 110fc <Mat_VarReadNextInfo@plt+0xd4>
   110e8:	cmp	r3, #0
   110ec:	bxeq	lr
   110f0:	bx	r3
   110f4:	ldrdeq	r5, [r2], -ip
   110f8:	ldrdeq	r5, [r2], -ip
   110fc:	andeq	r0, r0, r0
   11100:	push	{r4, lr}
   11104:	ldr	r4, [pc, #24]	; 11124 <Mat_VarReadNextInfo@plt+0xfc>
   11108:	ldrb	r3, [r4]
   1110c:	cmp	r3, #0
   11110:	popne	{r4, pc}
   11114:	bl	11098 <Mat_VarReadNextInfo@plt+0x70>
   11118:	mov	r3, #1
   1111c:	strb	r3, [r4]
   11120:	pop	{r4, pc}
   11124:	andeq	r5, r2, r4, ror #3
   11128:	ldr	r0, [pc, #40]	; 11158 <Mat_VarReadNextInfo@plt+0x130>
   1112c:	ldr	r3, [r0]
   11130:	cmp	r3, #0
   11134:	bne	1113c <Mat_VarReadNextInfo@plt+0x114>
   11138:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   1113c:	ldr	r3, [pc, #24]	; 1115c <Mat_VarReadNextInfo@plt+0x134>
   11140:	cmp	r3, #0
   11144:	beq	11138 <Mat_VarReadNextInfo@plt+0x110>
   11148:	push	{r4, lr}
   1114c:	blx	r3
   11150:	pop	{r4, lr}
   11154:	b	110c8 <Mat_VarReadNextInfo@plt+0xa0>
   11158:	strdeq	r4, [r2], -ip
   1115c:	andeq	r0, r0, r0
   11160:	push	{r4, lr}
   11164:	sub	r0, r0, #1
   11168:	cmp	r0, #12
   1116c:	ldrls	pc, [pc, r0, lsl #2]
   11170:	b	1124c <Mat_VarReadNextInfo@plt+0x224>
   11174:	andeq	r1, r1, r0, lsr r2
   11178:	andeq	r1, r1, r0, asr #4
   1117c:	andeq	r1, r1, r0, lsl r2
   11180:	andeq	r1, r1, r0, lsr #4
   11184:	strdeq	r1, [r1], -r0
   11188:	andeq	r1, r1, r0, lsl #4
   1118c:			; <UNDEFINED> instruction: 0x000111b8
   11190:	andeq	r1, r1, ip, asr #4
   11194:	andeq	r1, r1, r8, lsr #3
   11198:	andeq	r1, r1, ip, asr #4
   1119c:	andeq	r1, r1, ip, asr #4
   111a0:	ldrdeq	r1, [r1], -r0
   111a4:	andeq	r1, r1, r0, ror #3
   111a8:	ldrd	r2, [r1]
   111ac:	ldr	r0, [pc, #156]	; 11250 <Mat_VarReadNextInfo@plt+0x228>
   111b0:	bl	10e0c <printf@plt>
   111b4:	pop	{r4, pc}
   111b8:	vldr	s15, [r1]
   111bc:	vcvt.f64.f32	d7, s15
   111c0:	vmov	r2, r3, d7
   111c4:	ldr	r0, [pc, #132]	; 11250 <Mat_VarReadNextInfo@plt+0x228>
   111c8:	bl	10e0c <printf@plt>
   111cc:	pop	{r4, pc}
   111d0:	ldrd	r2, [r1]
   111d4:	ldr	r0, [pc, #120]	; 11254 <Mat_VarReadNextInfo@plt+0x22c>
   111d8:	bl	10e0c <printf@plt>
   111dc:	pop	{r4, pc}
   111e0:	ldrd	r2, [r1]
   111e4:	ldr	r0, [pc, #108]	; 11258 <Mat_VarReadNextInfo@plt+0x230>
   111e8:	bl	10e0c <printf@plt>
   111ec:	pop	{r4, pc}
   111f0:	ldr	r1, [r1]
   111f4:	ldr	r0, [pc, #96]	; 1125c <Mat_VarReadNextInfo@plt+0x234>
   111f8:	bl	10e0c <printf@plt>
   111fc:	pop	{r4, pc}
   11200:	ldr	r1, [r1]
   11204:	ldr	r0, [pc, #84]	; 11260 <Mat_VarReadNextInfo@plt+0x238>
   11208:	bl	10e0c <printf@plt>
   1120c:	pop	{r4, pc}
   11210:	ldrsh	r1, [r1]
   11214:	ldr	r0, [pc, #72]	; 11264 <Mat_VarReadNextInfo@plt+0x23c>
   11218:	bl	10e0c <printf@plt>
   1121c:	pop	{r4, pc}
   11220:	ldrh	r1, [r1]
   11224:	ldr	r0, [pc, #60]	; 11268 <Mat_VarReadNextInfo@plt+0x240>
   11228:	bl	10e0c <printf@plt>
   1122c:	pop	{r4, pc}
   11230:	ldrsb	r1, [r1]
   11234:	ldr	r0, [pc, #48]	; 1126c <Mat_VarReadNextInfo@plt+0x244>
   11238:	bl	10e0c <printf@plt>
   1123c:	pop	{r4, pc}
   11240:	ldrb	r1, [r1]
   11244:	ldr	r0, [pc, #36]	; 11270 <Mat_VarReadNextInfo@plt+0x248>
   11248:	bl	10e0c <printf@plt>
   1124c:	pop	{r4, pc}
   11250:	andeq	r4, r1, r4, lsr #3
   11254:	andeq	r4, r1, r8, lsr #3
   11258:			; <UNDEFINED> instruction: 0x000141b0
   1125c:	andeq	r4, r1, r8, asr #5
   11260:			; <UNDEFINED> instruction: 0x000141b8
   11264:			; <UNDEFINED> instruction: 0x000141bc
   11268:	andeq	r4, r1, r0, asr #3
   1126c:	andeq	r4, r1, r4, asr #3
   11270:	andeq	r4, r1, ip, asr #3
   11274:	push	{r4, r5, r6, r7, lr}
   11278:	vpush	{d8-d9}
   1127c:	sub	sp, sp, #44	; 0x2c
   11280:	mov	r5, r0
   11284:	mov	r2, #32
   11288:	mov	r1, #0
   1128c:	add	r0, sp, #8
   11290:	bl	10f68 <memset@plt>
   11294:	ldr	r3, [pc, #484]	; 11480 <Mat_VarReadNextInfo@plt+0x458>
   11298:	ldr	r3, [r3]
   1129c:	cmp	r3, #0
   112a0:	bne	112f0 <Mat_VarReadNextInfo@plt+0x2c8>
   112a4:	ldr	r1, [r5, #36]	; 0x24
   112a8:	ldr	r0, [pc, #468]	; 11484 <Mat_VarReadNextInfo@plt+0x45c>
   112ac:	bl	10e0c <printf@plt>
   112b0:	ldr	r3, [r5, #4]
   112b4:	cmp	r3, #0
   112b8:	ble	113d0 <Mat_VarReadNextInfo@plt+0x3a8>
   112bc:	ldr	r3, [r5, #32]
   112c0:	ldr	r1, [r3]
   112c4:	ldr	r0, [pc, #444]	; 11488 <Mat_VarReadNextInfo@plt+0x460>
   112c8:	bl	10e0c <printf@plt>
   112cc:	ldr	r3, [r5, #4]
   112d0:	cmp	r3, #1
   112d4:	ble	11374 <Mat_VarReadNextInfo@plt+0x34c>
   112d8:	mov	r6, #0
   112dc:	mov	r4, #1
   112e0:	vldr	d9, [pc, #368]	; 11458 <Mat_VarReadNextInfo@plt+0x430>
   112e4:	vldr	d8, [pc, #372]	; 11460 <Mat_VarReadNextInfo@plt+0x438>
   112e8:	ldr	r7, [pc, #412]	; 1148c <Mat_VarReadNextInfo@plt+0x464>
   112ec:	b	1132c <Mat_VarReadNextInfo@plt+0x304>
   112f0:	ldr	r3, [pc, #408]	; 11490 <Mat_VarReadNextInfo@plt+0x468>
   112f4:	str	r3, [sp]
   112f8:	ldr	r3, [pc, #404]	; 11494 <Mat_VarReadNextInfo@plt+0x46c>
   112fc:	ldr	r2, [pc, #404]	; 11498 <Mat_VarReadNextInfo@plt+0x470>
   11300:	ldr	r1, [pc, #404]	; 1149c <Mat_VarReadNextInfo@plt+0x474>
   11304:	ldr	r0, [pc, #404]	; 114a0 <Mat_VarReadNextInfo@plt+0x478>
   11308:	bl	10e0c <printf@plt>
   1130c:	mov	r2, #0
   11310:	ldr	r3, [pc, #360]	; 11480 <Mat_VarReadNextInfo@plt+0x458>
   11314:	str	r2, [r3]
   11318:	b	112a4 <Mat_VarReadNextInfo@plt+0x27c>
   1131c:	add	r4, r4, #1
   11320:	ldr	r3, [r5, #4]
   11324:	cmp	r3, r4
   11328:	ble	11374 <Mat_VarReadNextInfo@plt+0x34c>
   1132c:	ldr	r3, [r5, #32]
   11330:	ldr	r3, [r3, r4, lsl #2]
   11334:	vmov	s0, r3
   11338:	vcvt.f64.u32	d0, s0
   1133c:	bl	10ed8 <log10@plt>
   11340:	bl	10f98 <ceil@plt>
   11344:	vadd.f64	d0, d0, d9
   11348:	vcmpe.f64	d0, d8
   1134c:	vmrs	APSR_nzcv, fpscr
   11350:	bpl	1131c <Mat_VarReadNextInfo@plt+0x2f4>
   11354:	ldr	r3, [r5, #32]
   11358:	ldr	r2, [r3, r4, lsl #2]
   1135c:	mov	r1, r7
   11360:	add	r3, sp, #8
   11364:	add	r0, r3, r6
   11368:	bl	10fc8 <sprintf@plt>
   1136c:	add	r6, r6, r0
   11370:	b	1131c <Mat_VarReadNextInfo@plt+0x2f4>
   11374:	add	r1, sp, #8
   11378:	ldr	r0, [pc, #292]	; 114a4 <Mat_VarReadNextInfo@plt+0x47c>
   1137c:	bl	10e0c <printf@plt>
   11380:	mov	r0, r5
   11384:	bl	10ff8 <Mat_VarGetSize@plt>
   11388:	ldr	r3, [pc, #280]	; 114a8 <Mat_VarReadNextInfo@plt+0x480>
   1138c:	ldr	r3, [r3]
   11390:	cmp	r3, #0
   11394:	beq	1142c <Mat_VarReadNextInfo@plt+0x404>
   11398:	cmp	r0, #1073741824	; 0x40000000
   1139c:	bhi	113dc <Mat_VarReadNextInfo@plt+0x3b4>
   113a0:	cmp	r0, #1048576	; 0x100000
   113a4:	bhi	113fc <Mat_VarReadNextInfo@plt+0x3d4>
   113a8:	cmp	r0, #1024	; 0x400
   113ac:	bls	1141c <Mat_VarReadNextInfo@plt+0x3f4>
   113b0:	vmov	s15, r0
   113b4:	vcvt.f64.u32	d7, s15
   113b8:	vldr	d6, [pc, #168]	; 11468 <Mat_VarReadNextInfo@plt+0x440>
   113bc:	vmul.f64	d7, d7, d6
   113c0:	vmov	r2, r3, d7
   113c4:	ldr	r0, [pc, #224]	; 114ac <Mat_VarReadNextInfo@plt+0x484>
   113c8:	bl	10e0c <printf@plt>
   113cc:	b	11438 <Mat_VarReadNextInfo@plt+0x410>
   113d0:	ldr	r0, [pc, #216]	; 114b0 <Mat_VarReadNextInfo@plt+0x488>
   113d4:	bl	10e0c <printf@plt>
   113d8:	b	11380 <Mat_VarReadNextInfo@plt+0x358>
   113dc:	vmov	s15, r0
   113e0:	vcvt.f64.u32	d7, s15
   113e4:	vldr	d6, [pc, #132]	; 11470 <Mat_VarReadNextInfo@plt+0x448>
   113e8:	vmul.f64	d7, d7, d6
   113ec:	vmov	r2, r3, d7
   113f0:	ldr	r0, [pc, #188]	; 114b4 <Mat_VarReadNextInfo@plt+0x48c>
   113f4:	bl	10e0c <printf@plt>
   113f8:	b	11438 <Mat_VarReadNextInfo@plt+0x410>
   113fc:	vmov	s15, r0
   11400:	vcvt.f64.u32	d7, s15
   11404:	vldr	d6, [pc, #108]	; 11478 <Mat_VarReadNextInfo@plt+0x450>
   11408:	vmul.f64	d7, d7, d6
   1140c:	vmov	r2, r3, d7
   11410:	ldr	r0, [pc, #160]	; 114b8 <Mat_VarReadNextInfo@plt+0x490>
   11414:	bl	10e0c <printf@plt>
   11418:	b	11438 <Mat_VarReadNextInfo@plt+0x410>
   1141c:	mov	r1, r0
   11420:	ldr	r0, [pc, #148]	; 114bc <Mat_VarReadNextInfo@plt+0x494>
   11424:	bl	10e0c <printf@plt>
   11428:	b	11438 <Mat_VarReadNextInfo@plt+0x410>
   1142c:	mov	r1, r0
   11430:	ldr	r0, [pc, #136]	; 114c0 <Mat_VarReadNextInfo@plt+0x498>
   11434:	bl	10e0c <printf@plt>
   11438:	ldr	r2, [r5, #16]
   1143c:	ldr	r3, [pc, #128]	; 114c4 <Mat_VarReadNextInfo@plt+0x49c>
   11440:	ldr	r1, [r3, r2, lsl #2]
   11444:	ldr	r0, [pc, #124]	; 114c8 <Mat_VarReadNextInfo@plt+0x4a0>
   11448:	bl	10e0c <printf@plt>
   1144c:	add	sp, sp, #44	; 0x2c
   11450:	vpop	{d8-d9}
   11454:	pop	{r4, r5, r6, r7, pc}
   11458:	andeq	r0, r0, r0
   1145c:	svccc	0x00f00000	; IMB
   11460:	andeq	r0, r0, r0
   11464:	submi	r0, r0, r0
   11468:	andeq	r0, r0, r0
   1146c:	svccc	0x00500000
   11470:	andeq	r0, r0, r0
   11474:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   11478:	andeq	r0, r0, r0
   1147c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   11480:	andeq	r5, r2, r4, lsl #2
   11484:	andeq	r4, r1, ip, lsl r2
   11488:	andeq	r4, r1, r4, lsr #4
   1148c:	andeq	r4, r1, ip, lsr #4
   11490:	andeq	r4, r1, r4, lsl r2
   11494:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11498:	ldrdeq	r4, [r1], -ip
   1149c:	andeq	r4, r1, r4, ror #3
   114a0:	andeq	r4, r1, ip, ror #3
   114a4:	andeq	r4, r1, r4, lsr r2
   114a8:	andeq	r5, r2, r8, ror #3
   114ac:	andeq	r4, r1, ip, ror #4
   114b0:	andeq	r4, r1, ip, lsr r2
   114b4:	andeq	r4, r1, r4, asr r2
   114b8:	andeq	r4, r1, r0, ror #4
   114bc:	andeq	r4, r1, r8, ror r2
   114c0:	andeq	r4, r1, r0, lsl #5
   114c4:	andeq	r4, r1, ip, asr r1
   114c8:	andeq	r4, r1, r8, lsl #5
   114cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114d0:	sub	sp, sp, #12
   114d4:	subs	r4, r0, #0
   114d8:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   114dc:	ldr	r3, [r4, #16]
   114e0:	sub	r3, r3, #1
   114e4:	cmp	r3, #14
   114e8:	ldrls	pc, [pc, r3, lsl #2]
   114ec:	b	11b58 <Mat_VarReadNextInfo@plt+0xb30>
   114f0:	muleq	r1, r8, sl
   114f4:	andeq	r1, r1, r0, lsl r9
   114f8:	andeq	r1, r1, r8, asr fp
   114fc:	strdeq	r1, [r1], -r8
   11500:	strdeq	r1, [r1], -r8
   11504:	andeq	r1, r1, ip, lsr #10
   11508:	andeq	r1, r1, ip, lsr #10
   1150c:	andeq	r1, r1, ip, lsr #10
   11510:	andeq	r1, r1, ip, lsr #10
   11514:	andeq	r1, r1, ip, lsr #10
   11518:	andeq	r1, r1, ip, lsr #10
   1151c:	andeq	r1, r1, ip, lsr #10
   11520:	andeq	r1, r1, ip, lsr #10
   11524:	andeq	r1, r1, ip, lsr #10
   11528:	andeq	r1, r1, ip, lsr #10
   1152c:	ldr	r3, [r4, #4]
   11530:	cmp	r3, #2
   11534:	beq	11590 <Mat_VarReadNextInfo@plt+0x568>
   11538:	cmp	r3, #3
   1153c:	bne	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11540:	ldr	r3, [r4, #40]	; 0x28
   11544:	cmp	r3, #0
   11548:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   1154c:	ldr	r0, [r4, #8]
   11550:	bl	10f14 <Mat_SizeOf@plt>
   11554:	mov	r6, r0
   11558:	ldr	r3, [r4, #20]
   1155c:	cmp	r3, #0
   11560:	beq	117e8 <Mat_VarReadNextInfo@plt+0x7c0>
   11564:	ldr	r3, [r4, #40]	; 0x28
   11568:	ldr	r2, [r3]
   1156c:	str	r2, [sp, #4]
   11570:	ldr	fp, [r3, #4]
   11574:	ldr	r3, [r4, #32]
   11578:	ldr	r3, [r3, #8]
   1157c:	cmp	r3, #0
   11580:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11584:	mov	sl, #0
   11588:	ldr	r9, [pc, #1492]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   1158c:	b	117b4 <Mat_VarReadNextInfo@plt+0x78c>
   11590:	ldr	r3, [r4, #40]	; 0x28
   11594:	cmp	r3, #0
   11598:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   1159c:	ldr	r0, [r4, #8]
   115a0:	bl	10f14 <Mat_SizeOf@plt>
   115a4:	mov	r7, r0
   115a8:	ldr	r3, [r4, #20]
   115ac:	cmp	r3, #0
   115b0:	beq	11658 <Mat_VarReadNextInfo@plt+0x630>
   115b4:	ldr	r3, [r4, #40]	; 0x28
   115b8:	ldr	sl, [r3]
   115bc:	ldr	fp, [r3, #4]
   115c0:	ldr	r3, [r4, #32]
   115c4:	ldr	r3, [r3]
   115c8:	cmp	r3, #0
   115cc:	movne	r8, #0
   115d0:	ldrne	r9, [pc, #1424]	; 11b68 <Mat_VarReadNextInfo@plt+0xb40>
   115d4:	bne	11640 <Mat_VarReadNextInfo@plt+0x618>
   115d8:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   115dc:	ldr	r5, [r3]
   115e0:	mla	r5, r5, r6, r8
   115e4:	mul	r5, r7, r5
   115e8:	add	r1, sl, r5
   115ec:	ldr	r0, [r4, #8]
   115f0:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   115f4:	mov	r0, r9
   115f8:	bl	10e0c <printf@plt>
   115fc:	add	r1, fp, r5
   11600:	ldr	r0, [r4, #8]
   11604:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   11608:	ldr	r0, [pc, #1372]	; 11b6c <Mat_VarReadNextInfo@plt+0xb44>
   1160c:	bl	10e0c <printf@plt>
   11610:	add	r6, r6, #1
   11614:	ldr	r3, [r4, #32]
   11618:	ldr	r2, [r3, #4]
   1161c:	cmp	r6, r2
   11620:	bcc	115dc <Mat_VarReadNextInfo@plt+0x5b4>
   11624:	mov	r0, #10
   11628:	bl	10f74 <putchar@plt>
   1162c:	add	r8, r8, #1
   11630:	ldr	r3, [r4, #32]
   11634:	ldr	r3, [r3]
   11638:	cmp	r8, r3
   1163c:	bcs	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11640:	ldr	r3, [r4, #32]
   11644:	ldr	r2, [r3, #4]
   11648:	cmp	r2, #0
   1164c:	movne	r6, #0
   11650:	bne	115dc <Mat_VarReadNextInfo@plt+0x5b4>
   11654:	b	11624 <Mat_VarReadNextInfo@plt+0x5fc>
   11658:	ldr	r9, [r4, #40]	; 0x28
   1165c:	ldr	r3, [r4, #32]
   11660:	ldr	r3, [r3]
   11664:	cmp	r3, #0
   11668:	movne	r6, #0
   1166c:	movne	r8, #32
   11670:	movne	sl, #10
   11674:	bne	116c8 <Mat_VarReadNextInfo@plt+0x6a0>
   11678:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   1167c:	ldr	r1, [r3]
   11680:	mla	r1, r1, r5, r6
   11684:	mla	r1, r7, r1, r9
   11688:	ldr	r0, [r4, #8]
   1168c:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   11690:	mov	r0, r8
   11694:	bl	10f74 <putchar@plt>
   11698:	add	r5, r5, #1
   1169c:	ldr	r3, [r4, #32]
   116a0:	ldr	r2, [r3, #4]
   116a4:	cmp	r5, r2
   116a8:	bcc	1167c <Mat_VarReadNextInfo@plt+0x654>
   116ac:	mov	r0, sl
   116b0:	bl	10f74 <putchar@plt>
   116b4:	add	r6, r6, #1
   116b8:	ldr	r3, [r4, #32]
   116bc:	ldr	r3, [r3]
   116c0:	cmp	r6, r3
   116c4:	bcs	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   116c8:	ldr	r3, [r4, #32]
   116cc:	ldr	r2, [r3, #4]
   116d0:	cmp	r2, #0
   116d4:	movne	r5, #0
   116d8:	bne	1167c <Mat_VarReadNextInfo@plt+0x654>
   116dc:	b	116ac <Mat_VarReadNextInfo@plt+0x684>
   116e0:	ldr	r0, [pc, #1160]	; 11b70 <Mat_VarReadNextInfo@plt+0xb48>
   116e4:	bl	10e0c <printf@plt>
   116e8:	add	r5, r5, #1
   116ec:	ldr	r3, [r9, #4]
   116f0:	cmp	r5, r3
   116f4:	bcc	116e0 <Mat_VarReadNextInfo@plt+0x6b8>
   116f8:	ldr	r3, [r4, #32]
   116fc:	ldr	r5, [r3, #4]
   11700:	cmp	r5, #0
   11704:	beq	1175c <Mat_VarReadNextInfo@plt+0x734>
   11708:	mov	r7, #0
   1170c:	mla	r5, r5, sl, r7
   11710:	ldr	r3, [r3]
   11714:	mla	r5, r3, r5, r8
   11718:	mul	r5, r6, r5
   1171c:	ldr	r3, [sp, #4]
   11720:	add	r1, r3, r5
   11724:	ldr	r0, [r4, #8]
   11728:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   1172c:	ldr	r0, [pc, #1076]	; 11b68 <Mat_VarReadNextInfo@plt+0xb40>
   11730:	bl	10e0c <printf@plt>
   11734:	add	r1, fp, r5
   11738:	ldr	r0, [r4, #8]
   1173c:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   11740:	ldr	r0, [pc, #1060]	; 11b6c <Mat_VarReadNextInfo@plt+0xb44>
   11744:	bl	10e0c <printf@plt>
   11748:	add	r7, r7, #1
   1174c:	ldr	r3, [r4, #32]
   11750:	ldr	r5, [r3, #4]
   11754:	cmp	r5, r7
   11758:	bhi	1170c <Mat_VarReadNextInfo@plt+0x6e4>
   1175c:	mov	r0, #10
   11760:	bl	10f74 <putchar@plt>
   11764:	add	r8, r8, #1
   11768:	ldr	r3, [r4, #32]
   1176c:	ldr	r3, [r3]
   11770:	cmp	r8, r3
   11774:	bcs	1178c <Mat_VarReadNextInfo@plt+0x764>
   11778:	ldr	r3, [r9, #4]
   1177c:	cmp	r3, #0
   11780:	movne	r5, #0
   11784:	bne	116e0 <Mat_VarReadNextInfo@plt+0x6b8>
   11788:	b	116f8 <Mat_VarReadNextInfo@plt+0x6d0>
   1178c:	ldr	r3, [r9, #4]
   11790:	sub	r3, r3, #1
   11794:	str	r3, [r9, #4]
   11798:	mov	r0, #10
   1179c:	bl	10f74 <putchar@plt>
   117a0:	add	sl, sl, #1
   117a4:	ldr	r3, [r4, #32]
   117a8:	ldr	r3, [r3, #8]
   117ac:	cmp	sl, r3
   117b0:	bcs	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   117b4:	mov	r2, sl
   117b8:	ldr	r1, [r4, #36]	; 0x24
   117bc:	ldr	r0, [pc, #944]	; 11b74 <Mat_VarReadNextInfo@plt+0xb4c>
   117c0:	bl	10e60 <Mat_Message@plt>
   117c4:	ldr	r3, [r9, #4]
   117c8:	add	r3, r3, #1
   117cc:	str	r3, [r9, #4]
   117d0:	ldr	r3, [r4, #32]
   117d4:	ldr	r3, [r3]
   117d8:	cmp	r3, #0
   117dc:	movne	r8, #0
   117e0:	bne	11778 <Mat_VarReadNextInfo@plt+0x750>
   117e4:	b	1178c <Mat_VarReadNextInfo@plt+0x764>
   117e8:	ldr	fp, [r4, #40]	; 0x28
   117ec:	ldr	r3, [r4, #32]
   117f0:	ldr	r3, [r3, #8]
   117f4:	cmp	r3, #0
   117f8:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   117fc:	mov	r9, #0
   11800:	ldr	r8, [pc, #860]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11804:	ldr	sl, [pc, #868]	; 11b70 <Mat_VarReadNextInfo@plt+0xb48>
   11808:	b	118c4 <Mat_VarReadNextInfo@plt+0x89c>
   1180c:	mov	r0, sl
   11810:	bl	10e0c <printf@plt>
   11814:	add	r5, r5, #1
   11818:	ldr	r3, [r8, #4]
   1181c:	cmp	r5, r3
   11820:	bcc	1180c <Mat_VarReadNextInfo@plt+0x7e4>
   11824:	ldr	r3, [r4, #32]
   11828:	ldr	r1, [r3, #4]
   1182c:	cmp	r1, #0
   11830:	beq	1186c <Mat_VarReadNextInfo@plt+0x844>
   11834:	mov	r5, #0
   11838:	mla	r1, r1, r9, r5
   1183c:	ldr	r3, [r3]
   11840:	mla	r1, r3, r1, r7
   11844:	mla	r1, r6, r1, fp
   11848:	ldr	r0, [r4, #8]
   1184c:	bl	11160 <Mat_VarReadNextInfo@plt+0x138>
   11850:	mov	r0, #32
   11854:	bl	10f74 <putchar@plt>
   11858:	add	r5, r5, #1
   1185c:	ldr	r3, [r4, #32]
   11860:	ldr	r1, [r3, #4]
   11864:	cmp	r1, r5
   11868:	bhi	11838 <Mat_VarReadNextInfo@plt+0x810>
   1186c:	mov	r0, #10
   11870:	bl	10f74 <putchar@plt>
   11874:	add	r7, r7, #1
   11878:	ldr	r3, [r4, #32]
   1187c:	ldr	r3, [r3]
   11880:	cmp	r7, r3
   11884:	bcs	1189c <Mat_VarReadNextInfo@plt+0x874>
   11888:	ldr	r3, [r8, #4]
   1188c:	cmp	r3, #0
   11890:	movne	r5, #0
   11894:	bne	1180c <Mat_VarReadNextInfo@plt+0x7e4>
   11898:	b	11824 <Mat_VarReadNextInfo@plt+0x7fc>
   1189c:	ldr	r3, [r8, #4]
   118a0:	sub	r3, r3, #1
   118a4:	str	r3, [r8, #4]
   118a8:	mov	r0, #10
   118ac:	bl	10f74 <putchar@plt>
   118b0:	add	r9, r9, #1
   118b4:	ldr	r3, [r4, #32]
   118b8:	ldr	r3, [r3, #8]
   118bc:	cmp	r9, r3
   118c0:	bcs	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   118c4:	mov	r2, r9
   118c8:	ldr	r1, [r4, #36]	; 0x24
   118cc:	ldr	r0, [pc, #672]	; 11b74 <Mat_VarReadNextInfo@plt+0xb4c>
   118d0:	bl	10e60 <Mat_Message@plt>
   118d4:	ldr	r3, [r8, #4]
   118d8:	add	r3, r3, #1
   118dc:	str	r3, [r8, #4]
   118e0:	ldr	r3, [r4, #32]
   118e4:	ldr	r3, [r3]
   118e8:	cmp	r3, #0
   118ec:	movne	r7, #0
   118f0:	bne	11888 <Mat_VarReadNextInfo@plt+0x860>
   118f4:	b	1189c <Mat_VarReadNextInfo@plt+0x874>
   118f8:	ldr	r3, [pc, #612]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   118fc:	ldr	r1, [r3, #8]
   11900:	mov	r0, r4
   11904:	bl	10f5c <Mat_VarPrint@plt>
   11908:	add	sp, sp, #12
   1190c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11910:	ldr	r1, [r4, #36]	; 0x24
   11914:	cmp	r1, #0
   11918:	beq	11924 <Mat_VarReadNextInfo@plt+0x8fc>
   1191c:	ldr	r0, [pc, #596]	; 11b78 <Mat_VarReadNextInfo@plt+0xb50>
   11920:	bl	10e60 <Mat_Message@plt>
   11924:	ldr	r1, [r4, #4]
   11928:	ldr	r0, [pc, #588]	; 11b7c <Mat_VarReadNextInfo@plt+0xb54>
   1192c:	bl	10e60 <Mat_Message@plt>
   11930:	ldr	r3, [r4, #4]
   11934:	cmp	r3, #0
   11938:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   1193c:	ldr	r0, [pc, #572]	; 11b80 <Mat_VarReadNextInfo@plt+0xb58>
   11940:	bl	10e60 <Mat_Message@plt>
   11944:	mov	r0, r4
   11948:	bl	10dac <Mat_VarGetNumberOfFields@plt>
   1194c:	mov	r7, r0
   11950:	mov	r6, r0
   11954:	ldr	r1, [r4, #32]
   11958:	ldr	r5, [r1]
   1195c:	ldr	r2, [r4, #4]
   11960:	cmp	r2, #1
   11964:	ble	11980 <Mat_VarReadNextInfo@plt+0x958>
   11968:	add	r3, r1, #4
   1196c:	add	r1, r1, r2, lsl #2
   11970:	ldr	r2, [r3], #4
   11974:	mul	r5, r2, r5
   11978:	cmp	r1, r3
   1197c:	bne	11970 <Mat_VarReadNextInfo@plt+0x948>
   11980:	cmp	r7, #0
   11984:	movle	r3, #0
   11988:	movgt	r3, #1
   1198c:	cmp	r5, #0
   11990:	movne	r2, #0
   11994:	andeq	r2, r3, #1
   11998:	cmp	r2, #0
   1199c:	bne	11a20 <Mat_VarReadNextInfo@plt+0x9f8>
   119a0:	cmp	r5, #0
   119a4:	moveq	r3, #0
   119a8:	andne	r3, r3, #1
   119ac:	cmp	r3, #0
   119b0:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   119b4:	mov	r1, r7
   119b8:	ldr	r0, [pc, #452]	; 11b84 <Mat_VarReadNextInfo@plt+0xb5c>
   119bc:	bl	10e60 <Mat_Message@plt>
   119c0:	ldr	r2, [pc, #412]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   119c4:	ldr	r3, [r2, #4]
   119c8:	add	r3, r3, #1
   119cc:	str	r3, [r2, #4]
   119d0:	ldr	r6, [r4, #40]	; 0x28
   119d4:	cmp	r6, #0
   119d8:	beq	11a04 <Mat_VarReadNextInfo@plt+0x9dc>
   119dc:	mul	r4, r5, r7
   119e0:	cmp	r4, #0
   119e4:	beq	11a04 <Mat_VarReadNextInfo@plt+0x9dc>
   119e8:	sub	r6, r6, #4
   119ec:	mov	r5, #0
   119f0:	ldr	r0, [r6, #4]!
   119f4:	bl	114cc <Mat_VarReadNextInfo@plt+0x4a4>
   119f8:	add	r5, r5, #1
   119fc:	cmp	r5, r4
   11a00:	bne	119f0 <Mat_VarReadNextInfo@plt+0x9c8>
   11a04:	ldr	r2, [pc, #344]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11a08:	ldr	r3, [r2, #4]
   11a0c:	sub	r3, r3, #1
   11a10:	str	r3, [r2, #4]
   11a14:	ldr	r0, [pc, #364]	; 11b88 <Mat_VarReadNextInfo@plt+0xb60>
   11a18:	bl	10e60 <Mat_Message@plt>
   11a1c:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11a20:	mov	r0, r4
   11a24:	bl	10e9c <Mat_VarGetStructFieldnames@plt>
   11a28:	mov	r5, r0
   11a2c:	mov	r1, r7
   11a30:	ldr	r0, [pc, #332]	; 11b84 <Mat_VarReadNextInfo@plt+0xb5c>
   11a34:	bl	10e60 <Mat_Message@plt>
   11a38:	ldr	r2, [pc, #292]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11a3c:	ldr	r3, [r2, #4]
   11a40:	add	r3, r3, #1
   11a44:	str	r3, [r2, #4]
   11a48:	cmp	r5, #0
   11a4c:	beq	11a7c <Mat_VarReadNextInfo@plt+0xa54>
   11a50:	cmp	r7, #0
   11a54:	ble	11a7c <Mat_VarReadNextInfo@plt+0xa54>
   11a58:	sub	r5, r5, #4
   11a5c:	mov	r4, #0
   11a60:	ldr	r7, [pc, #292]	; 11b8c <Mat_VarReadNextInfo@plt+0xb64>
   11a64:	ldr	r1, [r5, #4]!
   11a68:	mov	r0, r7
   11a6c:	bl	10e60 <Mat_Message@plt>
   11a70:	add	r4, r4, #1
   11a74:	cmp	r6, r4
   11a78:	bne	11a64 <Mat_VarReadNextInfo@plt+0xa3c>
   11a7c:	ldr	r2, [pc, #224]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11a80:	ldr	r3, [r2, #4]
   11a84:	sub	r3, r3, #1
   11a88:	str	r3, [r2, #4]
   11a8c:	ldr	r0, [pc, #244]	; 11b88 <Mat_VarReadNextInfo@plt+0xb60>
   11a90:	bl	10e60 <Mat_Message@plt>
   11a94:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11a98:	ldr	r1, [r4, #36]	; 0x24
   11a9c:	cmp	r1, #0
   11aa0:	beq	11aac <Mat_VarReadNextInfo@plt+0xa84>
   11aa4:	ldr	r0, [pc, #204]	; 11b78 <Mat_VarReadNextInfo@plt+0xb50>
   11aa8:	bl	10e60 <Mat_Message@plt>
   11aac:	ldr	r1, [r4, #4]
   11ab0:	ldr	r0, [pc, #196]	; 11b7c <Mat_VarReadNextInfo@plt+0xb54>
   11ab4:	bl	10e60 <Mat_Message@plt>
   11ab8:	ldr	r2, [r4, #4]
   11abc:	cmp	r2, #0
   11ac0:	beq	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11ac4:	ldr	r1, [r4, #32]
   11ac8:	ldr	r5, [r1]
   11acc:	cmp	r2, #1
   11ad0:	ble	11aec <Mat_VarReadNextInfo@plt+0xac4>
   11ad4:	add	r3, r1, #4
   11ad8:	add	r1, r1, r2, lsl #2
   11adc:	ldr	r2, [r3], #4
   11ae0:	mul	r5, r2, r5
   11ae4:	cmp	r3, r1
   11ae8:	bne	11adc <Mat_VarReadNextInfo@plt+0xab4>
   11aec:	ldr	r0, [pc, #156]	; 11b90 <Mat_VarReadNextInfo@plt+0xb68>
   11af0:	bl	10e60 <Mat_Message@plt>
   11af4:	ldr	r0, [pc, #152]	; 11b94 <Mat_VarReadNextInfo@plt+0xb6c>
   11af8:	bl	10e60 <Mat_Message@plt>
   11afc:	ldr	r2, [pc, #96]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11b00:	ldr	r3, [r2, #4]
   11b04:	add	r3, r3, #1
   11b08:	str	r3, [r2, #4]
   11b0c:	ldr	r6, [r4, #40]	; 0x28
   11b10:	cmp	r6, #0
   11b14:	beq	11b3c <Mat_VarReadNextInfo@plt+0xb14>
   11b18:	cmp	r5, #0
   11b1c:	beq	11b3c <Mat_VarReadNextInfo@plt+0xb14>
   11b20:	sub	r6, r6, #4
   11b24:	mov	r4, #0
   11b28:	ldr	r0, [r6, #4]!
   11b2c:	bl	114cc <Mat_VarReadNextInfo@plt+0x4a4>
   11b30:	add	r4, r4, #1
   11b34:	cmp	r4, r5
   11b38:	bne	11b28 <Mat_VarReadNextInfo@plt+0xb00>
   11b3c:	ldr	r2, [pc, #32]	; 11b64 <Mat_VarReadNextInfo@plt+0xb3c>
   11b40:	ldr	r3, [r2, #4]
   11b44:	sub	r3, r3, #1
   11b48:	str	r3, [r2, #4]
   11b4c:	ldr	r0, [pc, #52]	; 11b88 <Mat_VarReadNextInfo@plt+0xb60>
   11b50:	bl	10e60 <Mat_Message@plt>
   11b54:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11b58:	ldr	r0, [pc, #56]	; 11b98 <Mat_VarReadNextInfo@plt+0xb70>
   11b5c:	bl	10e60 <Mat_Message@plt>
   11b60:	b	11908 <Mat_VarReadNextInfo@plt+0x8e0>
   11b64:	andeq	r5, r2, r8, ror #3
   11b68:	muleq	r1, r4, r2
   11b6c:	muleq	r1, r8, r2
   11b70:	andeq	r4, r1, ip, asr #4
   11b74:	muleq	r1, ip, r2
   11b78:	andeq	r4, r1, ip, lsr #5
   11b7c:			; <UNDEFINED> instruction: 0x000142bc
   11b80:	andeq	r4, r1, ip, asr #5
   11b84:	andeq	r4, r1, r4, ror #5
   11b88:	andeq	r4, r1, r4, lsl #6
   11b8c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11b90:	andeq	r4, r1, r8, lsl #6
   11b94:	andeq	r4, r1, r0, lsr #6
   11b98:	andeq	r4, r1, r4, lsr #6
   11b9c:	push	{r4, r5, r6, r7, r8, lr}
   11ba0:	mov	r7, r1
   11ba4:	ldr	r3, [pc, #56]	; 11be4 <Mat_VarReadNextInfo@plt+0xbbc>
   11ba8:	ldr	r3, [r3, #4]
   11bac:	cmp	r3, #0
   11bb0:	ble	11bd8 <Mat_VarReadNextInfo@plt+0xbb0>
   11bb4:	mov	r4, #0
   11bb8:	ldr	r6, [pc, #40]	; 11be8 <Mat_VarReadNextInfo@plt+0xbc0>
   11bbc:	ldr	r5, [pc, #32]	; 11be4 <Mat_VarReadNextInfo@plt+0xbbc>
   11bc0:	mov	r0, r6
   11bc4:	bl	10e0c <printf@plt>
   11bc8:	add	r4, r4, #1
   11bcc:	ldr	r3, [r5, #4]
   11bd0:	cmp	r3, r4
   11bd4:	bgt	11bc0 <Mat_VarReadNextInfo@plt+0xb98>
   11bd8:	mov	r0, r7
   11bdc:	bl	10ec0 <puts@plt>
   11be0:	pop	{r4, r5, r6, r7, r8, pc}
   11be4:	andeq	r5, r2, r8, ror #3
   11be8:	andeq	r4, r1, ip, asr #4
   11bec:	push	{r4, r5, r6, lr}
   11bf0:	mov	r6, r0
   11bf4:	mov	r1, #40	; 0x28
   11bf8:	mov	r4, #0
   11bfc:	ldr	r5, [pc, #72]	; 11c4c <Mat_VarReadNextInfo@plt+0xc24>
   11c00:	b	11c10 <Mat_VarReadNextInfo@plt+0xbe8>
   11c04:	ldrb	r1, [r5, #1]!
   11c08:	cmp	r1, #0
   11c0c:	beq	11c3c <Mat_VarReadNextInfo@plt+0xc14>
   11c10:	mov	r0, r6
   11c14:	bl	10f2c <strchr@plt>
   11c18:	cmp	r0, #0
   11c1c:	beq	11c04 <Mat_VarReadNextInfo@plt+0xbdc>
   11c20:	clz	r3, r4
   11c24:	lsr	r3, r3, #5
   11c28:	cmp	r0, r4
   11c2c:	orrcc	r3, r3, #1
   11c30:	cmp	r3, #0
   11c34:	movne	r4, r0
   11c38:	b	11c04 <Mat_VarReadNextInfo@plt+0xbdc>
   11c3c:	cmp	r4, #0
   11c40:	movne	r0, r4
   11c44:	moveq	r0, r6
   11c48:	pop	{r4, r5, r6, pc}
   11c4c:	andeq	r4, r1, ip, lsr #6
   11c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c54:	sub	sp, sp, #12
   11c58:	mov	r4, r0
   11c5c:	mov	r9, r1
   11c60:	str	r3, [sp, #4]
   11c64:	add	r7, r0, #1
   11c68:	mov	r8, #0
   11c6c:	mov	r6, r8
   11c70:	mov	sl, r8
   11c74:	mvn	fp, #0
   11c78:	b	11cf8 <Mat_VarReadNextInfo@plt+0xcd0>
   11c7c:	cmp	r6, #2
   11c80:	beq	11cc0 <Mat_VarReadNextInfo@plt+0xc98>
   11c84:	cmp	r6, #1
   11c88:	beq	11d74 <Mat_VarReadNextInfo@plt+0xd4c>
   11c8c:	cmp	r6, #0
   11c90:	bne	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11c94:	strb	sl, [r5]
   11c98:	ldr	r1, [pc, #712]	; 11f68 <Mat_VarReadNextInfo@plt+0xf40>
   11c9c:	mov	r0, r7
   11ca0:	bl	10de8 <strcmp@plt>
   11ca4:	cmp	r0, #0
   11ca8:	bne	11db0 <Mat_VarReadNextInfo@plt+0xd88>
   11cac:	ldr	r3, [sp, #4]
   11cb0:	str	fp, [r3, r8, lsl #2]
   11cb4:	ldr	r3, [sp, #52]	; 0x34
   11cb8:	str	fp, [r3, r8, lsl #2]
   11cbc:	b	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11cc0:	strb	sl, [r5]
   11cc4:	ldr	r1, [pc, #668]	; 11f68 <Mat_VarReadNextInfo@plt+0xf40>
   11cc8:	mov	r0, r7
   11ccc:	bl	10de8 <strcmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11d58 <Mat_VarReadNextInfo@plt+0xd30>
   11cd8:	ldr	r3, [sp, #52]	; 0x34
   11cdc:	str	fp, [r3, r8, lsl #2]
   11ce0:	add	r8, r8, #1
   11ce4:	add	r7, r4, #2
   11ce8:	mov	r6, #0
   11cec:	mov	r4, r5
   11cf0:	cmp	r5, r9
   11cf4:	beq	11f60 <Mat_VarReadNextInfo@plt+0xf38>
   11cf8:	add	r5, r4, #1
   11cfc:	ldrb	r3, [r4, #1]
   11d00:	cmp	r3, #44	; 0x2c
   11d04:	beq	11c7c <Mat_VarReadNextInfo@plt+0xc54>
   11d08:	cmp	r3, #58	; 0x3a
   11d0c:	beq	11dd8 <Mat_VarReadNextInfo@plt+0xdb0>
   11d10:	cmp	r3, #125	; 0x7d
   11d14:	cmpne	r3, #41	; 0x29
   11d18:	bne	11cec <Mat_VarReadNextInfo@plt+0xcc4>
   11d1c:	strb	sl, [r5]
   11d20:	ldr	r1, [pc, #576]	; 11f68 <Mat_VarReadNextInfo@plt+0xf40>
   11d24:	mov	r0, r7
   11d28:	bl	10de8 <strcmp@plt>
   11d2c:	cmp	r0, #0
   11d30:	bne	11ef0 <Mat_VarReadNextInfo@plt+0xec8>
   11d34:	cmp	r6, #0
   11d38:	bne	11eb0 <Mat_VarReadNextInfo@plt+0xe88>
   11d3c:	ldr	r3, [sp, #4]
   11d40:	str	fp, [r3, r8, lsl #2]
   11d44:	ldr	r3, [sp, #52]	; 0x34
   11d48:	str	fp, [r3, r8, lsl #2]
   11d4c:	add	r6, r6, #1
   11d50:	add	r7, r4, #2
   11d54:	b	11cec <Mat_VarReadNextInfo@plt+0xcc4>
   11d58:	mov	r2, #10
   11d5c:	mov	r1, sl
   11d60:	mov	r0, r7
   11d64:	bl	10e00 <strtol@plt>
   11d68:	ldr	r3, [sp, #52]	; 0x34
   11d6c:	str	r0, [r3, r8, lsl #2]
   11d70:	b	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11d74:	strb	sl, [r5]
   11d78:	ldr	r1, [pc, #488]	; 11f68 <Mat_VarReadNextInfo@plt+0xf40>
   11d7c:	mov	r0, r7
   11d80:	bl	10de8 <strcmp@plt>
   11d84:	cmp	r0, #0
   11d88:	ldreq	r3, [sp, #52]	; 0x34
   11d8c:	streq	fp, [r3, r8, lsl #2]
   11d90:	beq	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11d94:	mov	r2, #10
   11d98:	mov	r1, sl
   11d9c:	mov	r0, r7
   11da0:	bl	10e00 <strtol@plt>
   11da4:	ldr	r3, [sp, #52]	; 0x34
   11da8:	str	r0, [r3, r8, lsl #2]
   11dac:	b	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11db0:	mov	r2, #10
   11db4:	mov	r1, sl
   11db8:	mov	r0, r7
   11dbc:	bl	10e00 <strtol@plt>
   11dc0:	sub	r3, r0, #1
   11dc4:	ldr	r2, [sp, #4]
   11dc8:	str	r3, [r2, r8, lsl #2]
   11dcc:	ldr	r3, [sp, #52]	; 0x34
   11dd0:	str	r0, [r3, r8, lsl #2]
   11dd4:	b	11ce0 <Mat_VarReadNextInfo@plt+0xcb8>
   11dd8:	strb	sl, [r5]
   11ddc:	ldr	r1, [pc, #388]	; 11f68 <Mat_VarReadNextInfo@plt+0xf40>
   11de0:	mov	r0, r7
   11de4:	bl	10de8 <strcmp@plt>
   11de8:	cmp	r0, #0
   11dec:	bne	11e4c <Mat_VarReadNextInfo@plt+0xe24>
   11df0:	cmp	r6, #0
   11df4:	bne	11e0c <Mat_VarReadNextInfo@plt+0xde4>
   11df8:	ldr	r3, [sp, #4]
   11dfc:	str	fp, [r3, r8, lsl #2]
   11e00:	add	r6, r6, #1
   11e04:	add	r7, r4, #2
   11e08:	b	11cec <Mat_VarReadNextInfo@plt+0xcc4>
   11e0c:	cmp	r6, #1
   11e10:	beq	11e34 <Mat_VarReadNextInfo@plt+0xe0c>
   11e14:	cmp	r6, #2
   11e18:	beq	11e40 <Mat_VarReadNextInfo@plt+0xe18>
   11e1c:	add	r2, r8, #1
   11e20:	ldr	r1, [pc, #324]	; 11f6c <Mat_VarReadNextInfo@plt+0xf44>
   11e24:	ldr	r3, [pc, #324]	; 11f70 <Mat_VarReadNextInfo@plt+0xf48>
   11e28:	ldr	r0, [r3]
   11e2c:	bl	10f44 <fprintf@plt>
   11e30:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11e34:	ldr	r3, [sp, #52]	; 0x34
   11e38:	str	fp, [r3, r8, lsl #2]
   11e3c:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11e40:	ldr	r3, [sp, #52]	; 0x34
   11e44:	str	fp, [r3, r8, lsl #2]
   11e48:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11e4c:	mov	r2, #10
   11e50:	mov	r1, sl
   11e54:	mov	r0, r7
   11e58:	bl	10e00 <strtol@plt>
   11e5c:	cmp	r6, #0
   11e60:	subeq	r0, r0, #1
   11e64:	ldreq	r3, [sp, #4]
   11e68:	streq	r0, [r3, r8, lsl #2]
   11e6c:	beq	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11e70:	cmp	r6, #1
   11e74:	beq	11e98 <Mat_VarReadNextInfo@plt+0xe70>
   11e78:	cmp	r6, #2
   11e7c:	beq	11ea4 <Mat_VarReadNextInfo@plt+0xe7c>
   11e80:	add	r2, r8, #1
   11e84:	ldr	r1, [pc, #224]	; 11f6c <Mat_VarReadNextInfo@plt+0xf44>
   11e88:	ldr	r3, [pc, #224]	; 11f70 <Mat_VarReadNextInfo@plt+0xf48>
   11e8c:	ldr	r0, [r3]
   11e90:	bl	10f44 <fprintf@plt>
   11e94:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11e98:	ldr	r3, [sp, #48]	; 0x30
   11e9c:	str	r0, [r3, r8, lsl #2]
   11ea0:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11ea4:	ldr	r3, [sp, #52]	; 0x34
   11ea8:	str	r0, [r3, r8, lsl #2]
   11eac:	b	11e00 <Mat_VarReadNextInfo@plt+0xdd8>
   11eb0:	cmp	r6, #1
   11eb4:	beq	11ed8 <Mat_VarReadNextInfo@plt+0xeb0>
   11eb8:	cmp	r6, #2
   11ebc:	beq	11ee4 <Mat_VarReadNextInfo@plt+0xebc>
   11ec0:	add	r2, r8, #1
   11ec4:	ldr	r1, [pc, #160]	; 11f6c <Mat_VarReadNextInfo@plt+0xf44>
   11ec8:	ldr	r3, [pc, #160]	; 11f70 <Mat_VarReadNextInfo@plt+0xf48>
   11ecc:	ldr	r0, [r3]
   11ed0:	bl	10f44 <fprintf@plt>
   11ed4:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11ed8:	ldr	r3, [sp, #52]	; 0x34
   11edc:	str	fp, [r3, r8, lsl #2]
   11ee0:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11ee4:	ldr	r3, [sp, #52]	; 0x34
   11ee8:	str	fp, [r3, r8, lsl #2]
   11eec:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11ef0:	mov	r2, #10
   11ef4:	mov	r1, sl
   11ef8:	mov	r0, r7
   11efc:	bl	10e00 <strtol@plt>
   11f00:	cmp	r6, #0
   11f04:	bne	11f20 <Mat_VarReadNextInfo@plt+0xef8>
   11f08:	sub	r3, r0, #1
   11f0c:	ldr	r2, [sp, #4]
   11f10:	str	r3, [r2, r8, lsl #2]
   11f14:	ldr	r3, [sp, #52]	; 0x34
   11f18:	str	r0, [r3, r8, lsl #2]
   11f1c:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11f20:	cmp	r6, #1
   11f24:	beq	11f48 <Mat_VarReadNextInfo@plt+0xf20>
   11f28:	cmp	r6, #2
   11f2c:	beq	11f54 <Mat_VarReadNextInfo@plt+0xf2c>
   11f30:	add	r2, r8, #1
   11f34:	ldr	r1, [pc, #48]	; 11f6c <Mat_VarReadNextInfo@plt+0xf44>
   11f38:	ldr	r3, [pc, #48]	; 11f70 <Mat_VarReadNextInfo@plt+0xf48>
   11f3c:	ldr	r0, [r3]
   11f40:	bl	10f44 <fprintf@plt>
   11f44:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11f48:	ldr	r3, [sp, #52]	; 0x34
   11f4c:	str	r0, [r3, r8, lsl #2]
   11f50:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11f54:	ldr	r3, [sp, #52]	; 0x34
   11f58:	str	r0, [r3, r8, lsl #2]
   11f5c:	b	11d4c <Mat_VarReadNextInfo@plt+0xd24>
   11f60:	add	sp, sp, #12
   11f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f68:	andeq	r4, r1, r4, lsr r3
   11f6c:	andeq	r4, r1, r8, lsr r3
   11f70:	andeq	r5, r2, r0, ror #3
   11f74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f78:	mov	r9, r0
   11f7c:	ldr	fp, [sp, #40]	; 0x28
   11f80:	ldr	r0, [fp, #4]
   11f84:	cmp	r0, r9
   11f88:	cmpne	r9, #1
   11f8c:	beq	11f9c <Mat_VarReadNextInfo@plt+0xf74>
   11f90:	mov	r8, #0
   11f94:	mov	r0, r8
   11f98:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f9c:	mov	r4, r3
   11fa0:	cmp	r9, #1
   11fa4:	beq	11fe8 <Mat_VarReadNextInfo@plt+0xfc0>
   11fa8:	cmp	r9, #0
   11fac:	ble	1231c <Mat_VarReadNextInfo@plt+0x12f4>
   11fb0:	ldr	r0, [r2]
   11fb4:	cmp	r0, #0
   11fb8:	movgt	sl, r2
   11fbc:	movgt	r6, r1
   11fc0:	movgt	r8, #1
   11fc4:	movgt	r5, #0
   11fc8:	bgt	122a0 <Mat_VarReadNextInfo@plt+0x1278>
   11fcc:	ldr	r3, [pc, #848]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   11fd0:	ldr	r3, [r3]
   11fd4:	mov	r2, #23
   11fd8:	mov	r1, #1
   11fdc:	ldr	r0, [pc, #836]	; 12328 <Mat_VarReadNextInfo@plt+0x1300>
   11fe0:	bl	10e90 <fwrite@plt>
   11fe4:	b	11f90 <Mat_VarReadNextInfo@plt+0xf68>
   11fe8:	cmp	r0, #0
   11fec:	ble	12008 <Mat_VarReadNextInfo@plt+0xfe0>
   11ff0:	ldr	r3, [fp, #32]
   11ff4:	add	r0, r3, r0, lsl #2
   11ff8:	ldr	ip, [r3], #4
   11ffc:	mul	r9, ip, r9
   12000:	cmp	r3, r0
   12004:	bne	11ff8 <Mat_VarReadNextInfo@plt+0xfd0>
   12008:	ldr	r0, [r2]
   1200c:	cmp	r0, #0
   12010:	ble	12068 <Mat_VarReadNextInfo@plt+0x1040>
   12014:	ldr	r3, [r4]
   12018:	cmp	r3, r9
   1201c:	bgt	12084 <Mat_VarReadNextInfo@plt+0x105c>
   12020:	ldr	ip, [r1]
   12024:	cmp	ip, r9
   12028:	bge	12048 <Mat_VarReadNextInfo@plt+0x1020>
   1202c:	cmp	r3, #0
   12030:	movle	lr, #0
   12034:	movgt	lr, #1
   12038:	cmp	r3, ip
   1203c:	movge	lr, #0
   12040:	cmp	lr, #0
   12044:	beq	120a0 <Mat_VarReadNextInfo@plt+0x1078>
   12048:	ldr	r3, [pc, #724]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   1204c:	ldr	r3, [r3]
   12050:	mov	r2, #18
   12054:	mov	r1, #1
   12058:	ldr	r0, [pc, #716]	; 1232c <Mat_VarReadNextInfo@plt+0x1304>
   1205c:	bl	10e90 <fwrite@plt>
   12060:	mov	r8, #0
   12064:	b	11f94 <Mat_VarReadNextInfo@plt+0xf6c>
   12068:	ldr	r3, [pc, #692]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   1206c:	ldr	r3, [r3]
   12070:	mov	r2, #23
   12074:	mov	r1, #1
   12078:	ldr	r0, [pc, #680]	; 12328 <Mat_VarReadNextInfo@plt+0x1300>
   1207c:	bl	10e90 <fwrite@plt>
   12080:	b	12060 <Mat_VarReadNextInfo@plt+0x1038>
   12084:	ldr	r3, [pc, #664]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   12088:	ldr	r3, [r3]
   1208c:	mov	r2, #17
   12090:	mov	r1, #1
   12094:	ldr	r0, [pc, #660]	; 12330 <Mat_VarReadNextInfo@plt+0x1308>
   12098:	bl	10e90 <fwrite@plt>
   1209c:	b	12060 <Mat_VarReadNextInfo@plt+0x1038>
   120a0:	cmn	r3, #1
   120a4:	movne	lr, #0
   120a8:	moveq	lr, #1
   120ac:	cmn	ip, #1
   120b0:	cmneq	r3, #1
   120b4:	beq	12114 <Mat_VarReadNextInfo@plt+0x10ec>
   120b8:	cmp	r0, #1
   120bc:	movne	lr, #0
   120c0:	andeq	lr, lr, #1
   120c4:	cmp	lr, #0
   120c8:	bne	12128 <Mat_VarReadNextInfo@plt+0x1100>
   120cc:	cmn	r3, #1
   120d0:	beq	12140 <Mat_VarReadNextInfo@plt+0x1118>
   120d4:	cmp	r3, #0
   120d8:	ble	1210c <Mat_VarReadNextInfo@plt+0x10e4>
   120dc:	sub	r3, r3, ip
   120e0:	sub	r3, r3, #1
   120e4:	vmov	s15, r3
   120e8:	vcvt.f64.s32	d7, s15
   120ec:	vmov	s13, r0
   120f0:	vcvt.f64.s32	d0, s13
   120f4:	vdiv.f64	d0, d7, d0
   120f8:	bl	10ea8 <floor@plt>
   120fc:	vcvt.s32.f64	s0, d0
   12100:	vmov	r3, s0
   12104:	add	r3, r3, #1
   12108:	str	r3, [r4]
   1210c:	ldr	r8, [r4]
   12110:	b	11f94 <Mat_VarReadNextInfo@plt+0xf6c>
   12114:	mov	r3, #1
   12118:	str	r3, [r4]
   1211c:	sub	r9, r9, #1
   12120:	str	r9, [r1]
   12124:	b	1210c <Mat_VarReadNextInfo@plt+0x10e4>
   12128:	str	r9, [r4]
   1212c:	ldr	r3, [r1]
   12130:	cmp	r3, #0
   12134:	movlt	r3, #0
   12138:	strlt	r3, [r1]
   1213c:	b	1210c <Mat_VarReadNextInfo@plt+0x10e4>
   12140:	str	r9, [r4]
   12144:	ldr	r3, [r1]
   12148:	sub	r9, r9, r3
   1214c:	sub	r9, r9, #1
   12150:	vmov	s15, r9
   12154:	vcvt.f64.s32	d7, s15
   12158:	vldr	s0, [r2]
   1215c:	vcvt.f64.s32	d0, s0
   12160:	vdiv.f64	d0, d7, d0
   12164:	bl	10ea8 <floor@plt>
   12168:	vcvt.s32.f64	s0, d0
   1216c:	vmov	r3, s0
   12170:	add	r3, r3, #1
   12174:	str	r3, [r4]
   12178:	b	1210c <Mat_VarReadNextInfo@plt+0x10e4>
   1217c:	ldr	r3, [r6]
   12180:	cmn	r3, #1
   12184:	beq	121d0 <Mat_VarReadNextInfo@plt+0x11a8>
   12188:	cmp	r0, #1
   1218c:	beq	122cc <Mat_VarReadNextInfo@plt+0x12a4>
   12190:	ldr	r1, [fp, #32]
   12194:	ldr	r3, [r6]
   12198:	mvn	r3, r3
   1219c:	ldr	r2, [r1, r2]
   121a0:	add	r3, r3, r2
   121a4:	vmov	s15, r3
   121a8:	vcvt.f64.u32	d7, s15
   121ac:	vmov	s13, r0
   121b0:	vcvt.f64.s32	d0, s13
   121b4:	vdiv.f64	d0, d7, d0
   121b8:	bl	10ea8 <floor@plt>
   121bc:	vcvt.s32.f64	s0, d0
   121c0:	vmov	r3, s0
   121c4:	add	r3, r3, #1
   121c8:	str	r3, [r7]
   121cc:	b	12278 <Mat_VarReadNextInfo@plt+0x1250>
   121d0:	mov	r3, #1
   121d4:	str	r3, [r4]
   121d8:	ldr	r3, [fp, #32]
   121dc:	ldr	r3, [r3, r2]
   121e0:	sub	r3, r3, #1
   121e4:	str	r3, [r6]
   121e8:	b	12278 <Mat_VarReadNextInfo@plt+0x1250>
   121ec:	cmp	r3, #0
   121f0:	blt	12190 <Mat_VarReadNextInfo@plt+0x1168>
   121f4:	ldr	r1, [fp, #32]
   121f8:	ldr	r1, [r1, r2]
   121fc:	cmp	r3, r1
   12200:	bhi	122ec <Mat_VarReadNextInfo@plt+0x12c4>
   12204:	ldr	r2, [r6]
   12208:	cmp	r1, r2
   1220c:	bls	12304 <Mat_VarReadNextInfo@plt+0x12dc>
   12210:	cmp	r3, #0
   12214:	movle	r1, #0
   12218:	movgt	r1, #1
   1221c:	cmp	r3, r2
   12220:	movge	r1, #0
   12224:	cmp	r1, #0
   12228:	bne	12304 <Mat_VarReadNextInfo@plt+0x12dc>
   1222c:	add	r1, r2, #1
   12230:	cmp	r3, r1
   12234:	moveq	r3, #1
   12238:	streq	r3, [r4]
   1223c:	beq	12278 <Mat_VarReadNextInfo@plt+0x1250>
   12240:	cmp	r3, #0
   12244:	ble	12278 <Mat_VarReadNextInfo@plt+0x1250>
   12248:	sub	r3, r3, r2
   1224c:	sub	r3, r3, #1
   12250:	vmov	s15, r3
   12254:	vcvt.f64.s32	d7, s15
   12258:	vmov	s13, r0
   1225c:	vcvt.f64.s32	d0, s13
   12260:	vdiv.f64	d0, d7, d0
   12264:	bl	10ea8 <floor@plt>
   12268:	vcvt.s32.f64	s0, d0
   1226c:	vmov	r3, s0
   12270:	add	r3, r3, #1
   12274:	str	r3, [r4]
   12278:	ldr	r3, [r7]
   1227c:	mul	r8, r3, r8
   12280:	add	r5, r5, #1
   12284:	cmp	r9, r5
   12288:	beq	11f94 <Mat_VarReadNextInfo@plt+0xf6c>
   1228c:	ldr	r0, [sl, #4]!
   12290:	add	r4, r4, #4
   12294:	add	r6, r6, #4
   12298:	cmp	r0, #0
   1229c:	ble	11fcc <Mat_VarReadNextInfo@plt+0xfa4>
   122a0:	lsl	r2, r5, #2
   122a4:	mov	r7, r4
   122a8:	ldr	r3, [r4]
   122ac:	cmn	r3, #1
   122b0:	beq	1217c <Mat_VarReadNextInfo@plt+0x1154>
   122b4:	lsr	r1, r3, #31
   122b8:	cmp	r0, #1
   122bc:	movne	r1, #0
   122c0:	andeq	r1, r1, #1
   122c4:	cmp	r1, #0
   122c8:	beq	121ec <Mat_VarReadNextInfo@plt+0x11c4>
   122cc:	ldr	r3, [fp, #32]
   122d0:	ldr	r3, [r3, r2]
   122d4:	str	r3, [r7]
   122d8:	ldr	r3, [r6]
   122dc:	cmp	r3, #0
   122e0:	movlt	r3, #0
   122e4:	strlt	r3, [r6]
   122e8:	b	12278 <Mat_VarReadNextInfo@plt+0x1250>
   122ec:	add	r2, r5, #1
   122f0:	ldr	r1, [pc, #60]	; 12334 <Mat_VarReadNextInfo@plt+0x130c>
   122f4:	ldr	r3, [pc, #40]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   122f8:	ldr	r0, [r3]
   122fc:	bl	10f44 <fprintf@plt>
   12300:	b	11f90 <Mat_VarReadNextInfo@plt+0xf68>
   12304:	add	r2, r5, #1
   12308:	ldr	r1, [pc, #40]	; 12338 <Mat_VarReadNextInfo@plt+0x1310>
   1230c:	ldr	r3, [pc, #16]	; 12324 <Mat_VarReadNextInfo@plt+0x12fc>
   12310:	ldr	r0, [r3]
   12314:	bl	10f44 <fprintf@plt>
   12318:	b	11f90 <Mat_VarReadNextInfo@plt+0xf68>
   1231c:	mov	r8, #1
   12320:	b	11f94 <Mat_VarReadNextInfo@plt+0xf6c>
   12324:	andeq	r5, r2, r0, ror #3
   12328:	andeq	r4, r1, r4, asr r3
   1232c:	andeq	r4, r1, r0, lsl #7
   12330:	andeq	r4, r1, ip, ror #6
   12334:	muleq	r1, r4, r3
   12338:			; <UNDEFINED> instruction: 0x000143b8
   1233c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12340:	sub	sp, sp, #76	; 0x4c
   12344:	str	r0, [sp, #20]
   12348:	mov	r4, r1
   1234c:	add	r2, sp, #68	; 0x44
   12350:	add	r1, sp, #64	; 0x40
   12354:	add	r0, sp, #60	; 0x3c
   12358:	bl	10f50 <Mat_GetLibraryVersion@plt>
   1235c:	ldr	r9, [sp, #60]	; 0x3c
   12360:	cmp	r9, #1
   12364:	bne	12374 <Mat_VarReadNextInfo@plt+0x134c>
   12368:	ldr	r3, [sp, #64]	; 0x40
   1236c:	cmp	r3, #5
   12370:	beq	1239c <Mat_VarReadNextInfo@plt+0x1374>
   12374:	ldr	r3, [pc, #2592]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   12378:	ldr	r3, [r3]
   1237c:	mov	r2, #55	; 0x37
   12380:	mov	r1, #1
   12384:	ldr	r0, [pc, #2580]	; 12da0 <Mat_VarReadNextInfo@plt+0x1d78>
   12388:	bl	10e90 <fwrite@plt>
   1238c:	mov	r9, #1
   12390:	mov	r0, r9
   12394:	add	sp, sp, #76	; 0x4c
   12398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1239c:	ldr	r3, [sp, #68]	; 0x44
   123a0:	cmp	r3, #15
   123a4:	bne	12374 <Mat_VarReadNextInfo@plt+0x134c>
   123a8:	ldr	r1, [pc, #2548]	; 12da4 <Mat_VarReadNextInfo@plt+0x1d7c>
   123ac:	ldr	r0, [pc, #2548]	; 12da8 <Mat_VarReadNextInfo@plt+0x1d80>
   123b0:	bl	10fa4 <Mat_LogInitFunc@plt>
   123b4:	ldr	r2, [pc, #2544]	; 12dac <Mat_VarReadNextInfo@plt+0x1d84>
   123b8:	ldr	r3, [pc, #2544]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   123bc:	str	r2, [r3, #12]
   123c0:	ldr	r6, [pc, #2540]	; 12db4 <Mat_VarReadNextInfo@plt+0x1d8c>
   123c4:	ldr	r5, [pc, #2540]	; 12db8 <Mat_VarReadNextInfo@plt+0x1d90>
   123c8:	mov	r7, r3
   123cc:	ldr	sl, [pc, #2536]	; 12dbc <Mat_VarReadNextInfo@plt+0x1d94>
   123d0:	ldr	r8, [pc, #2536]	; 12dc0 <Mat_VarReadNextInfo@plt+0x1d98>
   123d4:	mov	r3, #0
   123d8:	str	r3, [sp]
   123dc:	mov	r3, r6
   123e0:	mov	r2, r5
   123e4:	mov	r1, r4
   123e8:	ldr	r0, [sp, #20]
   123ec:	bl	13c48 <getopt_long@@Base>
   123f0:	cmn	r0, #1
   123f4:	beq	124d8 <Mat_VarReadNextInfo@plt+0x14b0>
   123f8:	cmp	r0, #100	; 0x64
   123fc:	beq	12454 <Mat_VarReadNextInfo@plt+0x142c>
   12400:	ble	1242c <Mat_VarReadNextInfo@plt+0x1404>
   12404:	cmp	r0, #104	; 0x68
   12408:	beq	124ac <Mat_VarReadNextInfo@plt+0x1484>
   1240c:	cmp	r0, #118	; 0x76
   12410:	beq	124b8 <Mat_VarReadNextInfo@plt+0x1490>
   12414:	cmp	r0, #102	; 0x66
   12418:	beq	12468 <Mat_VarReadNextInfo@plt+0x1440>
   1241c:	mov	r1, r0
   12420:	ldr	r0, [pc, #2460]	; 12dc4 <Mat_VarReadNextInfo@plt+0x1d9c>
   12424:	bl	10e0c <printf@plt>
   12428:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   1242c:	cmp	r0, #72	; 0x48
   12430:	beq	124c8 <Mat_VarReadNextInfo@plt+0x14a0>
   12434:	cmp	r0, #86	; 0x56
   12438:	bne	1241c <Mat_VarReadNextInfo@plt+0x13f4>
   1243c:	ldr	r2, [pc, #2436]	; 12dc8 <Mat_VarReadNextInfo@plt+0x1da0>
   12440:	ldr	r1, [pc, #2400]	; 12da8 <Mat_VarReadNextInfo@plt+0x1d80>
   12444:	ldr	r0, [pc, #2432]	; 12dcc <Mat_VarReadNextInfo@plt+0x1da4>
   12448:	bl	10e0c <printf@plt>
   1244c:	mov	r0, #0
   12450:	bl	10efc <exit@plt>
   12454:	mov	r0, #1
   12458:	str	r0, [r7, #8]
   1245c:	mov	r1, sl
   12460:	bl	10fb0 <Mat_VerbMessage@plt>
   12464:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   12468:	ldr	fp, [r8]
   1246c:	cmp	fp, #0
   12470:	beq	124a0 <Mat_VarReadNextInfo@plt+0x1478>
   12474:	ldr	r1, [pc, #2388]	; 12dd0 <Mat_VarReadNextInfo@plt+0x1da8>
   12478:	mov	r0, fp
   1247c:	bl	10de8 <strcmp@plt>
   12480:	cmp	r0, #0
   12484:	ldreq	r3, [pc, #2376]	; 12dd4 <Mat_VarReadNextInfo@plt+0x1dac>
   12488:	streq	r3, [r7, #12]
   1248c:	beq	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   12490:	mov	r1, fp
   12494:	ldr	r0, [pc, #2364]	; 12dd8 <Mat_VarReadNextInfo@plt+0x1db0>
   12498:	bl	10e48 <Mat_Warning@plt>
   1249c:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   124a0:	ldr	r0, [pc, #2356]	; 12ddc <Mat_VarReadNextInfo@plt+0x1db4>
   124a4:	bl	10e48 <Mat_Warning@plt>
   124a8:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   124ac:	mov	r3, #1
   124b0:	str	r3, [r7]
   124b4:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   124b8:	mov	r1, #0
   124bc:	mov	r0, #1
   124c0:	bl	10db8 <Mat_SetVerbose@plt>
   124c4:	b	123d4 <Mat_VarReadNextInfo@plt+0x13ac>
   124c8:	ldr	r0, [pc, #2320]	; 12de0 <Mat_VarReadNextInfo@plt+0x1db8>
   124cc:	bl	10fd4 <Mat_Help@plt>
   124d0:	mov	r0, #0
   124d4:	bl	10efc <exit@plt>
   124d8:	ldr	r3, [pc, #2308]	; 12de4 <Mat_VarReadNextInfo@plt+0x1dbc>
   124dc:	ldr	r3, [r3]
   124e0:	ldr	r2, [sp, #20]
   124e4:	sub	r2, r2, r3
   124e8:	cmp	r2, #0
   124ec:	ble	12538 <Mat_VarReadNextInfo@plt+0x1510>
   124f0:	mov	r1, #0
   124f4:	ldr	r0, [r4, r3, lsl #2]
   124f8:	bl	10df4 <Mat_Open@plt>
   124fc:	subs	r3, r0, #0
   12500:	str	r3, [sp, #40]	; 0x28
   12504:	beq	12544 <Mat_VarReadNextInfo@plt+0x151c>
   12508:	ldr	r3, [pc, #2260]	; 12de4 <Mat_VarReadNextInfo@plt+0x1dbc>
   1250c:	ldr	r2, [r3]
   12510:	add	r1, r2, #1
   12514:	str	r1, [sp, #44]	; 0x2c
   12518:	str	r1, [r3]
   1251c:	ldr	r3, [sp, #20]
   12520:	cmp	r3, r1
   12524:	ble	12ce4 <Mat_VarReadNextInfo@plt+0x1cbc>
   12528:	add	r3, r4, r2, lsl #2
   1252c:	str	r3, [sp, #36]	; 0x24
   12530:	str	r9, [sp, #52]	; 0x34
   12534:	b	126c0 <Mat_VarReadNextInfo@plt+0x1698>
   12538:	ldr	r0, [pc, #2216]	; 12de8 <Mat_VarReadNextInfo@plt+0x1dc0>
   1253c:	bl	10f8c <Mat_Critical@plt>
   12540:	b	12390 <Mat_VarReadNextInfo@plt+0x1368>
   12544:	ldr	r3, [pc, #2200]	; 12de4 <Mat_VarReadNextInfo@plt+0x1dbc>
   12548:	ldr	r3, [r3]
   1254c:	ldr	r1, [r4, r3, lsl #2]
   12550:	ldr	r0, [pc, #2196]	; 12dec <Mat_VarReadNextInfo@plt+0x1dc4>
   12554:	bl	10f8c <Mat_Critical@plt>
   12558:	b	12390 <Mat_VarReadNextInfo@plt+0x1368>
   1255c:	strb	r6, [r5]
   12560:	mov	r0, r5
   12564:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   12568:	str	r0, [sp, #28]
   1256c:	ldrb	fp, [r0]
   12570:	mov	r9, #1
   12574:	b	12c28 <Mat_VarReadNextInfo@plt+0x1c00>
   12578:	ldr	r3, [sp, #28]
   1257c:	add	r9, r3, #1
   12580:	mov	r1, #41	; 0x29
   12584:	mov	r0, r9
   12588:	bl	10f2c <strchr@plt>
   1258c:	mov	r6, r0
   12590:	add	r7, r0, #1
   12594:	mov	r0, r7
   12598:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   1259c:	cmp	r7, r0
   125a0:	beq	12610 <Mat_VarReadNextInfo@plt+0x15e8>
   125a4:	mov	r3, #0
   125a8:	strb	r3, [r0]
   125ac:	ldr	r3, [pc, #2024]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   125b0:	ldr	r3, [r3]
   125b4:	mov	r2, #56	; 0x38
   125b8:	mov	r1, #1
   125bc:	ldr	r0, [pc, #2092]	; 12df0 <Mat_VarReadNextInfo@plt+0x1dc8>
   125c0:	bl	10e90 <fwrite@plt>
   125c4:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   125c8:	ldrb	r3, [r9], #1
   125cc:	cmp	r3, #44	; 0x2c
   125d0:	addeq	r5, r5, #1
   125d4:	cmp	r6, r9
   125d8:	bne	125c8 <Mat_VarReadNextInfo@plt+0x15a0>
   125dc:	lsl	r6, r5, #2
   125e0:	mov	r0, r6
   125e4:	bl	10ecc <malloc@plt>
   125e8:	mov	r8, r0
   125ec:	mov	r0, r6
   125f0:	bl	10ecc <malloc@plt>
   125f4:	mov	r7, r0
   125f8:	mov	r0, r6
   125fc:	bl	10ecc <malloc@plt>
   12600:	mov	r6, r0
   12604:	mov	r3, #0
   12608:	mov	r2, #1
   1260c:	b	1262c <Mat_VarReadNextInfo@plt+0x1604>
   12610:	ldr	r5, [sp, #52]	; 0x34
   12614:	b	125d4 <Mat_VarReadNextInfo@plt+0x15ac>
   12618:	mov	r1, #0
   1261c:	str	r1, [r8, r3, lsl #2]
   12620:	str	r2, [r7, r3, lsl #2]
   12624:	str	r2, [r6, r3, lsl #2]
   12628:	add	r3, r3, #1
   1262c:	cmp	r3, r5
   12630:	blt	12618 <Mat_VarReadNextInfo@plt+0x15f0>
   12634:	str	r6, [sp, #4]
   12638:	str	r7, [sp]
   1263c:	mov	r3, r8
   12640:	mov	r2, r5
   12644:	mov	r1, r9
   12648:	ldr	r0, [sp, #28]
   1264c:	bl	11c50 <Mat_VarReadNextInfo@plt+0xc28>
   12650:	str	r4, [sp]
   12654:	mov	r3, r6
   12658:	mov	r2, r7
   1265c:	mov	r1, r8
   12660:	mov	r0, r5
   12664:	bl	11f74 <Mat_VarReadNextInfo@plt+0xf4c>
   12668:	subs	r9, r0, #0
   1266c:	bne	12730 <Mat_VarReadNextInfo@plt+0x1708>
   12670:	mov	r0, r8
   12674:	bl	10e3c <free@plt>
   12678:	mov	r0, r7
   1267c:	bl	10e3c <free@plt>
   12680:	mov	r0, r6
   12684:	bl	10e3c <free@plt>
   12688:	mov	r5, r4
   1268c:	mov	r4, r5
   12690:	ldr	r3, [pc, #1816]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   12694:	ldr	r3, [r3, #12]
   12698:	mov	r0, r4
   1269c:	blx	r3
   126a0:	mov	r0, r4
   126a4:	bl	10f08 <Mat_VarFree@plt>
   126a8:	ldr	r3, [sp, #44]	; 0x2c
   126ac:	add	r3, r3, #1
   126b0:	str	r3, [sp, #44]	; 0x2c
   126b4:	ldr	r2, [sp, #20]
   126b8:	cmp	r2, r3
   126bc:	ble	12d24 <Mat_VarReadNextInfo@plt+0x1cfc>
   126c0:	ldr	r3, [sp, #36]	; 0x24
   126c4:	ldr	r4, [r3, #4]
   126c8:	mov	r0, r4
   126cc:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   126d0:	mov	r5, r0
   126d4:	cmp	r4, r0
   126d8:	ldrbne	r6, [r0]
   126dc:	movne	r3, #0
   126e0:	strbne	r3, [r0]
   126e4:	moveq	r6, #0
   126e8:	ldr	r3, [sp, #36]	; 0x24
   126ec:	ldr	r1, [r3, #4]!
   126f0:	str	r3, [sp, #36]	; 0x24
   126f4:	ldr	r7, [sp, #40]	; 0x28
   126f8:	mov	r0, r7
   126fc:	bl	10e84 <Mat_VarReadInfo@plt>
   12700:	subs	r4, r0, #0
   12704:	beq	12cd0 <Mat_VarReadNextInfo@plt+0x1ca8>
   12708:	ldr	r3, [pc, #1696]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   1270c:	ldr	r3, [r3, #8]
   12710:	cmp	r3, #0
   12714:	beq	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12718:	cmp	r6, #0
   1271c:	bne	1255c <Mat_VarReadNextInfo@plt+0x1534>
   12720:	mov	r1, r4
   12724:	mov	r0, r7
   12728:	bl	10e78 <Mat_VarReadDataAll@plt>
   1272c:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12730:	ldr	r0, [r4, #16]
   12734:	bl	10fec <Mat_SizeOfClass@plt>
   12738:	str	r0, [r4, #12]
   1273c:	mul	r9, r0, r9
   12740:	str	r9, [r4]
   12744:	ldr	r3, [r4, #20]
   12748:	cmp	r3, #0
   1274c:	beq	127ac <Mat_VarReadNextInfo@plt+0x1784>
   12750:	mov	r0, #8
   12754:	bl	10ecc <malloc@plt>
   12758:	mov	sl, r0
   1275c:	str	r0, [r4, #40]	; 0x28
   12760:	mov	r0, r9
   12764:	bl	10ecc <malloc@plt>
   12768:	str	r0, [sl]
   1276c:	ldr	r0, [r4]
   12770:	bl	10ecc <malloc@plt>
   12774:	str	r0, [sl, #4]
   12778:	ldr	r2, [r4, #40]	; 0x28
   1277c:	cmp	r2, #0
   12780:	beq	127bc <Mat_VarReadNextInfo@plt+0x1794>
   12784:	cmp	r5, #1
   12788:	beq	127d8 <Mat_VarReadNextInfo@plt+0x17b0>
   1278c:	str	r6, [sp, #4]
   12790:	str	r7, [sp]
   12794:	mov	r3, r8
   12798:	mov	r1, r4
   1279c:	ldr	r0, [sp, #40]	; 0x28
   127a0:	bl	10e6c <Mat_VarReadData@plt>
   127a4:	mov	r3, #0
   127a8:	b	12868 <Mat_VarReadNextInfo@plt+0x1840>
   127ac:	mov	r0, r9
   127b0:	bl	10ecc <malloc@plt>
   127b4:	str	r0, [r4, #40]	; 0x28
   127b8:	b	12778 <Mat_VarReadNextInfo@plt+0x1750>
   127bc:	ldr	r3, [pc, #1496]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   127c0:	ldr	r3, [r3]
   127c4:	mov	r2, #37	; 0x25
   127c8:	mov	r1, #1
   127cc:	ldr	r0, [pc, #1568]	; 12df4 <Mat_VarReadNextInfo@plt+0x1dcc>
   127d0:	bl	10e90 <fwrite@plt>
   127d4:	b	12670 <Mat_VarReadNextInfo@plt+0x1648>
   127d8:	ldr	r3, [r6]
   127dc:	str	r3, [sp, #4]
   127e0:	ldr	r3, [r7]
   127e4:	str	r3, [sp]
   127e8:	ldr	r3, [r8]
   127ec:	mov	r1, r4
   127f0:	ldr	r0, [sp, #40]	; 0x28
   127f4:	bl	10e54 <Mat_VarReadDataLinear@plt>
   127f8:	ldr	r3, [r4, #4]
   127fc:	cmp	r3, #2
   12800:	beq	12828 <Mat_VarReadNextInfo@plt+0x1800>
   12804:	mov	r3, #2
   12808:	str	r3, [r4, #4]
   1280c:	ldr	r3, [r4, #32]
   12810:	ldr	r2, [r6]
   12814:	str	r2, [r3]
   12818:	ldr	r3, [r4, #32]
   1281c:	mov	r2, #1
   12820:	str	r2, [r3, #4]
   12824:	b	12670 <Mat_VarReadNextInfo@plt+0x1648>
   12828:	ldr	r3, [r4, #32]
   1282c:	ldr	r2, [r3]
   12830:	cmp	r2, #1
   12834:	ldreq	r2, [r6]
   12838:	streq	r2, [r3, #4]
   1283c:	beq	12670 <Mat_VarReadNextInfo@plt+0x1648>
   12840:	ldr	r2, [r3, #4]
   12844:	cmp	r2, #1
   12848:	ldreq	r2, [r6]
   1284c:	streq	r2, [r3]
   12850:	bne	12804 <Mat_VarReadNextInfo@plt+0x17dc>
   12854:	b	12670 <Mat_VarReadNextInfo@plt+0x1648>
   12858:	ldr	r2, [r4, #32]
   1285c:	ldr	r1, [r6, r3, lsl #2]
   12860:	str	r1, [r2, r3, lsl #2]
   12864:	add	r3, r3, #1
   12868:	cmp	r3, r5
   1286c:	blt	12858 <Mat_VarReadNextInfo@plt+0x1830>
   12870:	b	12670 <Mat_VarReadNextInfo@plt+0x1648>
   12874:	ldr	r3, [sp, #28]
   12878:	add	r3, r3, #1
   1287c:	str	r3, [sp, #24]
   12880:	ldr	r3, [r4, #16]
   12884:	cmp	r3, #2
   12888:	beq	12940 <Mat_VarReadNextInfo@plt+0x1918>
   1288c:	cmp	r3, #1
   12890:	bne	129f0 <Mat_VarReadNextInfo@plt+0x19c8>
   12894:	ldr	r1, [r4, #12]
   12898:	ldr	r0, [r4]
   1289c:	bl	13c90 <getopt_long_only@@Base+0x24>
   128a0:	mov	r8, r0
   128a4:	ldr	sl, [r4, #40]	; 0x28
   128a8:	ldr	r5, [sp, #24]
   128ac:	mov	r0, r5
   128b0:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   128b4:	mov	r3, r0
   128b8:	str	r0, [sp, #28]
   128bc:	mov	r2, r5
   128c0:	cmp	r5, r0
   128c4:	ldrbne	fp, [r0]
   128c8:	movne	r2, #0
   128cc:	strbne	r2, [r0]
   128d0:	movne	r3, #0
   128d4:	ldreq	r3, [sp, #52]	; 0x34
   128d8:	str	r3, [sp, #32]
   128dc:	mov	r5, #0
   128e0:	cmp	r8, r5
   128e4:	ble	129e8 <Mat_VarReadNextInfo@plt+0x19c0>
   128e8:	mov	r1, r5
   128ec:	mov	r0, r4
   128f0:	bl	10e24 <Mat_VarGetCell@plt>
   128f4:	subs	r6, r0, #0
   128f8:	beq	129b4 <Mat_VarReadNextInfo@plt+0x198c>
   128fc:	ldr	r3, [r6, #16]
   12900:	cmp	r3, #2
   12904:	bne	129b4 <Mat_VarReadNextInfo@plt+0x198c>
   12908:	mov	r2, #0
   1290c:	ldr	r1, [sp, #24]
   12910:	mov	r0, r6
   12914:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   12918:	cmp	r0, #0
   1291c:	beq	129cc <Mat_VarReadNextInfo@plt+0x19a4>
   12920:	mov	r1, r9
   12924:	bl	1101c <Mat_VarDuplicate@plt>
   12928:	mov	r7, r0
   1292c:	mov	r0, r6
   12930:	bl	10f08 <Mat_VarFree@plt>
   12934:	str	r7, [sl, r5, lsl #2]
   12938:	add	r5, r5, #1
   1293c:	b	128e0 <Mat_VarReadNextInfo@plt+0x18b8>
   12940:	ldr	r5, [sp, #24]
   12944:	mov	r0, r5
   12948:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   1294c:	str	r0, [sp, #28]
   12950:	cmp	r5, r0
   12954:	beq	12d60 <Mat_VarReadNextInfo@plt+0x1d38>
   12958:	ldrb	fp, [r0]
   1295c:	mov	r2, #0
   12960:	strb	r2, [r0]
   12964:	mov	r2, #0
   12968:	mov	r1, r5
   1296c:	mov	r0, r4
   12970:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   12974:	cmp	r0, #0
   12978:	beq	12998 <Mat_VarReadNextInfo@plt+0x1970>
   1297c:	mov	r1, r9
   12980:	bl	1101c <Mat_VarDuplicate@plt>
   12984:	mov	r5, r0
   12988:	mov	r0, r4
   1298c:	bl	10f08 <Mat_VarFree@plt>
   12990:	mov	r4, r5
   12994:	b	12c28 <Mat_VarReadNextInfo@plt+0x1c00>
   12998:	ldr	r3, [r4, #36]	; 0x24
   1299c:	ldr	r2, [sp, #24]
   129a0:	ldr	r1, [pc, #1104]	; 12df8 <Mat_VarReadNextInfo@plt+0x1dd0>
   129a4:	ldr	r0, [pc, #1008]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   129a8:	ldr	r0, [r0]
   129ac:	bl	10f44 <fprintf@plt>
   129b0:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   129b4:	mov	r2, r5
   129b8:	ldr	r1, [pc, #1084]	; 12dfc <Mat_VarReadNextInfo@plt+0x1dd4>
   129bc:	ldr	r3, [pc, #984]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   129c0:	ldr	r0, [r3]
   129c4:	bl	10f44 <fprintf@plt>
   129c8:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   129cc:	ldr	r3, [r4, #36]	; 0x24
   129d0:	ldr	r2, [sp, #24]
   129d4:	ldr	r1, [pc, #1052]	; 12df8 <Mat_VarReadNextInfo@plt+0x1dd0>
   129d8:	ldr	r0, [pc, #956]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   129dc:	ldr	r0, [r0]
   129e0:	bl	10f44 <fprintf@plt>
   129e4:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   129e8:	beq	12c1c <Mat_VarReadNextInfo@plt+0x1bf4>
   129ec:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   129f0:	ldr	r2, [sp, #24]
   129f4:	ldr	r1, [pc, #1028]	; 12e00 <Mat_VarReadNextInfo@plt+0x1dd8>
   129f8:	ldr	r3, [pc, #924]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   129fc:	ldr	r0, [r3]
   12a00:	bl	10f44 <fprintf@plt>
   12a04:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12a08:	ldr	r3, [pc, #908]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   12a0c:	ldr	r3, [r3]
   12a10:	mov	r2, #34	; 0x22
   12a14:	mov	r1, #1
   12a18:	ldr	r0, [pc, #996]	; 12e04 <Mat_VarReadNextInfo@plt+0x1ddc>
   12a1c:	bl	10e90 <fwrite@plt>
   12a20:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12a24:	ldrb	r3, [sl], #1
   12a28:	cmp	r3, #44	; 0x2c
   12a2c:	addeq	r5, r5, #1
   12a30:	cmp	r6, sl
   12a34:	bne	12a24 <Mat_VarReadNextInfo@plt+0x19fc>
   12a38:	lsl	r6, r5, #2
   12a3c:	mov	r0, r6
   12a40:	bl	10ecc <malloc@plt>
   12a44:	str	r0, [sp, #24]
   12a48:	mov	r0, r6
   12a4c:	bl	10ecc <malloc@plt>
   12a50:	mov	r8, r0
   12a54:	mov	r0, r6
   12a58:	bl	10ecc <malloc@plt>
   12a5c:	mov	r7, r0
   12a60:	mov	r3, #0
   12a64:	ldr	r2, [sp, #24]
   12a68:	b	12a80 <Mat_VarReadNextInfo@plt+0x1a58>
   12a6c:	mov	r1, #0
   12a70:	str	r1, [r2, r3, lsl #2]
   12a74:	str	r9, [r8, r3, lsl #2]
   12a78:	str	r9, [r7, r3, lsl #2]
   12a7c:	add	r3, r3, #1
   12a80:	cmp	r3, r5
   12a84:	blt	12a6c <Mat_VarReadNextInfo@plt+0x1a44>
   12a88:	str	r7, [sp, #4]
   12a8c:	str	r8, [sp]
   12a90:	ldr	r6, [sp, #24]
   12a94:	mov	r3, r6
   12a98:	mov	r2, r5
   12a9c:	mov	r1, sl
   12aa0:	ldr	r0, [sp, #28]
   12aa4:	bl	11c50 <Mat_VarReadNextInfo@plt+0xc28>
   12aa8:	str	r4, [sp]
   12aac:	mov	r3, r7
   12ab0:	mov	r2, r8
   12ab4:	mov	r1, r6
   12ab8:	mov	r0, r5
   12abc:	bl	11f74 <Mat_VarReadNextInfo@plt+0xf4c>
   12ac0:	subs	sl, r0, #0
   12ac4:	beq	12c98 <Mat_VarReadNextInfo@plt+0x1c70>
   12ac8:	cmp	r5, #1
   12acc:	beq	12af0 <Mat_VarReadNextInfo@plt+0x1ac8>
   12ad0:	mov	r3, r7
   12ad4:	mov	r2, r8
   12ad8:	ldr	r1, [sp, #24]
   12adc:	mov	r0, r4
   12ae0:	bl	10e18 <Mat_VarGetCells@plt>
   12ae4:	str	r0, [sp, #28]
   12ae8:	mov	r3, #0
   12aec:	b	12b6c <Mat_VarReadNextInfo@plt+0x1b44>
   12af0:	ldr	r3, [r7]
   12af4:	ldr	r2, [r8]
   12af8:	ldr	r1, [sp, #24]
   12afc:	ldr	r1, [r1]
   12b00:	mov	r0, r4
   12b04:	bl	10fbc <Mat_VarGetCellsLinear@plt>
   12b08:	str	r0, [sp, #28]
   12b0c:	ldr	r3, [r4, #4]
   12b10:	cmp	r3, #2
   12b14:	beq	12b2c <Mat_VarReadNextInfo@plt+0x1b04>
   12b18:	str	r9, [r4, #4]
   12b1c:	ldr	r3, [r4, #32]
   12b20:	ldr	r2, [r7]
   12b24:	str	r2, [r3]
   12b28:	b	12b74 <Mat_VarReadNextInfo@plt+0x1b4c>
   12b2c:	ldr	r3, [r4, #32]
   12b30:	ldr	r2, [r3]
   12b34:	cmp	r2, #1
   12b38:	ldreq	r2, [r7]
   12b3c:	streq	r2, [r3, #4]
   12b40:	beq	12b74 <Mat_VarReadNextInfo@plt+0x1b4c>
   12b44:	ldr	r2, [r3, #4]
   12b48:	cmp	r2, #1
   12b4c:	ldreq	r2, [r7]
   12b50:	streq	r2, [r3]
   12b54:	bne	12b18 <Mat_VarReadNextInfo@plt+0x1af0>
   12b58:	b	12b74 <Mat_VarReadNextInfo@plt+0x1b4c>
   12b5c:	ldr	r2, [r4, #32]
   12b60:	ldr	r1, [r7, r3, lsl #2]
   12b64:	str	r1, [r2, r3, lsl #2]
   12b68:	add	r3, r3, #1
   12b6c:	cmp	r3, r5
   12b70:	blt	12b5c <Mat_VarReadNextInfo@plt+0x1b34>
   12b74:	ldr	r3, [sp, #28]
   12b78:	cmp	r3, #0
   12b7c:	subne	r6, r3, #4
   12b80:	movne	r5, #0
   12b84:	bne	12bbc <Mat_VarReadNextInfo@plt+0x1b94>
   12b88:	mov	r5, r8
   12b8c:	ldr	r3, [pc, #520]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   12b90:	ldr	r3, [r3]
   12b94:	mov	r2, #31
   12b98:	mov	r1, #1
   12b9c:	ldr	r0, [pc, #612]	; 12e08 <Mat_VarReadNextInfo@plt+0x1de0>
   12ba0:	bl	10e90 <fwrite@plt>
   12ba4:	b	12cb4 <Mat_VarReadNextInfo@plt+0x1c8c>
   12ba8:	mov	r1, r9
   12bac:	ldr	r0, [r6, #4]
   12bb0:	bl	1101c <Mat_VarDuplicate@plt>
   12bb4:	str	r0, [r6, #4]!
   12bb8:	add	r5, r5, #1
   12bbc:	cmp	sl, r5
   12bc0:	bgt	12ba8 <Mat_VarReadNextInfo@plt+0x1b80>
   12bc4:	str	r9, [sp, #8]
   12bc8:	ldr	r3, [sp, #28]
   12bcc:	str	r3, [sp, #4]
   12bd0:	ldr	r3, [r4, #32]
   12bd4:	str	r3, [sp]
   12bd8:	ldr	r3, [r4, #4]
   12bdc:	mov	r2, #21
   12be0:	mov	r1, r9
   12be4:	ldr	r0, [r4, #36]	; 0x24
   12be8:	bl	10e30 <Mat_VarCreate@plt>
   12bec:	mov	r5, r0
   12bf0:	mov	r0, r4
   12bf4:	bl	10f08 <Mat_VarFree@plt>
   12bf8:	ldr	r0, [sp, #24]
   12bfc:	bl	10e3c <free@plt>
   12c00:	mov	r0, r8
   12c04:	bl	10e3c <free@plt>
   12c08:	mov	r0, r7
   12c0c:	bl	10e3c <free@plt>
   12c10:	mov	r4, r5
   12c14:	ldr	r3, [sp, #48]	; 0x30
   12c18:	str	r3, [sp, #28]
   12c1c:	ldr	r3, [sp, #32]
   12c20:	cmp	r3, #0
   12c24:	bne	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12c28:	cmp	fp, #40	; 0x28
   12c2c:	beq	12578 <Mat_VarReadNextInfo@plt+0x1550>
   12c30:	cmp	fp, #46	; 0x2e
   12c34:	beq	12874 <Mat_VarReadNextInfo@plt+0x184c>
   12c38:	cmp	fp, #123	; 0x7b
   12c3c:	bne	12c28 <Mat_VarReadNextInfo@plt+0x1c00>
   12c40:	ldr	r3, [r4, #16]
   12c44:	cmp	r3, #1
   12c48:	bne	12a08 <Mat_VarReadNextInfo@plt+0x19e0>
   12c4c:	ldr	r3, [sp, #28]
   12c50:	add	sl, r3, #1
   12c54:	mov	r1, #125	; 0x7d
   12c58:	mov	r0, sl
   12c5c:	bl	10f2c <strchr@plt>
   12c60:	mov	r6, r0
   12c64:	add	r0, r0, #1
   12c68:	bl	11bec <Mat_VarReadNextInfo@plt+0xbc4>
   12c6c:	str	r0, [sp, #48]	; 0x30
   12c70:	ldrb	r3, [r0]
   12c74:	cmp	r3, #0
   12c78:	movne	r1, #0
   12c7c:	strbne	r1, [r0]
   12c80:	movne	fp, r3
   12c84:	movne	r3, #0
   12c88:	ldreq	r3, [sp, #52]	; 0x34
   12c8c:	str	r3, [sp, #32]
   12c90:	ldr	r5, [sp, #52]	; 0x34
   12c94:	b	12a30 <Mat_VarReadNextInfo@plt+0x1a08>
   12c98:	mov	r5, r8
   12c9c:	ldr	r3, [pc, #248]	; 12d9c <Mat_VarReadNextInfo@plt+0x1d74>
   12ca0:	ldr	r3, [r3]
   12ca4:	mov	r2, #24
   12ca8:	mov	r1, #1
   12cac:	ldr	r0, [pc, #344]	; 12e0c <Mat_VarReadNextInfo@plt+0x1de4>
   12cb0:	bl	10e90 <fwrite@plt>
   12cb4:	ldr	r0, [sp, #24]
   12cb8:	bl	10e3c <free@plt>
   12cbc:	mov	r0, r5
   12cc0:	bl	10e3c <free@plt>
   12cc4:	mov	r0, r7
   12cc8:	bl	10e3c <free@plt>
   12ccc:	b	12690 <Mat_VarReadNextInfo@plt+0x1668>
   12cd0:	ldr	r3, [sp, #36]	; 0x24
   12cd4:	ldr	r1, [r3]
   12cd8:	ldr	r0, [pc, #304]	; 12e10 <Mat_VarReadNextInfo@plt+0x1de8>
   12cdc:	bl	10e48 <Mat_Warning@plt>
   12ce0:	b	126a8 <Mat_VarReadNextInfo@plt+0x1680>
   12ce4:	ldr	r3, [pc, #196]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   12ce8:	ldr	r3, [r3, #8]
   12cec:	cmp	r3, #0
   12cf0:	ldreq	r5, [pc, #184]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   12cf4:	beq	12d4c <Mat_VarReadNextInfo@plt+0x1d24>
   12cf8:	ldr	r5, [pc, #176]	; 12db0 <Mat_VarReadNextInfo@plt+0x1d88>
   12cfc:	b	12d14 <Mat_VarReadNextInfo@plt+0x1cec>
   12d00:	ldr	r3, [r5, #12]
   12d04:	mov	r0, r4
   12d08:	blx	r3
   12d0c:	mov	r0, r4
   12d10:	bl	10f08 <Mat_VarFree@plt>
   12d14:	ldr	r0, [sp, #40]	; 0x28
   12d18:	bl	10ddc <Mat_VarReadNext@plt>
   12d1c:	subs	r4, r0, #0
   12d20:	bne	12d00 <Mat_VarReadNextInfo@plt+0x1cd8>
   12d24:	ldr	r0, [sp, #40]	; 0x28
   12d28:	bl	10f80 <Mat_Close@plt>
   12d2c:	bl	10dd0 <Mat_LogClose@plt>
   12d30:	mov	r9, #0
   12d34:	b	12390 <Mat_VarReadNextInfo@plt+0x1368>
   12d38:	mov	r0, r4
   12d3c:	ldr	r3, [r5, #12]
   12d40:	blx	r3
   12d44:	mov	r0, r4
   12d48:	bl	10f08 <Mat_VarFree@plt>
   12d4c:	ldr	r0, [sp, #40]	; 0x28
   12d50:	bl	11028 <Mat_VarReadNextInfo@plt>
   12d54:	subs	r4, r0, #0
   12d58:	bne	12d38 <Mat_VarReadNextInfo@plt+0x1d10>
   12d5c:	b	12d24 <Mat_VarReadNextInfo@plt+0x1cfc>
   12d60:	mov	r2, #0
   12d64:	ldr	r1, [sp, #28]
   12d68:	mov	r0, r4
   12d6c:	bl	10fe0 <Mat_VarGetStructFieldByName@plt>
   12d70:	cmp	r0, #0
   12d74:	beq	12998 <Mat_VarReadNextInfo@plt+0x1970>
   12d78:	mov	r1, #1
   12d7c:	bl	1101c <Mat_VarDuplicate@plt>
   12d80:	mov	r5, r0
   12d84:	mov	r0, r4
   12d88:	bl	10f08 <Mat_VarFree@plt>
   12d8c:	mov	r1, r5
   12d90:	ldr	r0, [sp, #40]	; 0x28
   12d94:	bl	10e78 <Mat_VarReadDataAll@plt>
   12d98:	b	1268c <Mat_VarReadNextInfo@plt+0x1664>
   12d9c:	andeq	r5, r2, r0, ror #3
   12da0:	ldrdeq	r4, [r1], -ip
   12da4:	muleq	r1, ip, fp
   12da8:	andeq	r4, r1, r4, lsl r4
   12dac:	andeq	r1, r1, ip, asr #9
   12db0:	andeq	r5, r2, r8, ror #3
   12db4:	andeq	r5, r2, r0, asr r1
   12db8:	andeq	r4, r1, ip, lsl #10
   12dbc:	andeq	r4, r1, ip, lsl r4
   12dc0:	strdeq	r5, [r2], -ip
   12dc4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12dc8:	muleq	r1, r4, r4
   12dcc:	muleq	r1, ip, r4
   12dd0:	andeq	r4, r1, ip, lsr #8
   12dd4:	andeq	r1, r1, r4, ror r2
   12dd8:	andeq	r4, r1, r4, lsr r4
   12ddc:	andeq	r4, r1, ip, ror #8
   12de0:	andeq	r5, r2, r8, lsl #2
   12de4:	ldrdeq	r5, [r2], -r0
   12de8:	andeq	r4, r1, r4, lsl r5
   12dec:	andeq	r4, r1, r8, lsr r5
   12df0:	andeq	r4, r1, ip, asr #10
   12df4:	andeq	r4, r1, r8, lsl #11
   12df8:			; <UNDEFINED> instruction: 0x000145b0
   12dfc:	ldrdeq	r4, [r1], -r8
   12e00:	strdeq	r4, [r1], -ip
   12e04:	andeq	r4, r1, r4, lsl r6
   12e08:	andeq	r4, r1, r8, lsr r6
   12e0c:	andeq	r4, r1, r8, asr r6
   12e10:	andeq	r4, r1, r4, ror r6
   12e14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e18:	mov	r9, r0
   12e1c:	mov	r5, r1
   12e20:	mov	sl, r2
   12e24:	mov	r4, r3
   12e28:	sub	r7, r1, r0
   12e2c:	sub	r6, r2, r1
   12e30:	mov	r1, r6
   12e34:	mov	r0, r7
   12e38:	bl	140bc <getopt_long_only@@Base+0x450>
   12e3c:	subs	r8, r1, #0
   12e40:	beq	12ed0 <Mat_VarReadNextInfo@plt+0x1ea8>
   12e44:	mov	r0, r6
   12e48:	b	12e50 <Mat_VarReadNextInfo@plt+0x1e28>
   12e4c:	mov	r8, r1
   12e50:	mov	r1, r8
   12e54:	bl	140bc <getopt_long_only@@Base+0x450>
   12e58:	mov	r0, r8
   12e5c:	cmp	r1, #0
   12e60:	bne	12e4c <Mat_VarReadNextInfo@plt+0x1e24>
   12e64:	mov	r1, r8
   12e68:	sub	r0, sl, r9
   12e6c:	bl	13e9c <getopt_long_only@@Base+0x230>
   12e70:	cmp	r8, #0
   12e74:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e78:	add	r1, r4, r5, lsl #2
   12e7c:	add	r8, r8, r5
   12e80:	mov	r9, r5
   12e84:	mov	r3, r9
   12e88:	cmp	r0, #0
   12e8c:	ble	12ebc <Mat_VarReadNextInfo@plt+0x1e94>
   12e90:	mov	r2, #0
   12e94:	cmp	r5, r3
   12e98:	suble	r3, r3, r7
   12e9c:	addgt	r3, r3, r6
   12ea0:	ldr	ip, [r4, r3, lsl #2]
   12ea4:	ldr	lr, [r1]
   12ea8:	str	lr, [r4, r3, lsl #2]
   12eac:	str	ip, [r1]
   12eb0:	add	r2, r2, #1
   12eb4:	cmp	r0, r2
   12eb8:	bne	12e94 <Mat_VarReadNextInfo@plt+0x1e6c>
   12ebc:	add	r1, r1, #4
   12ec0:	add	r9, r9, #1
   12ec4:	cmp	r9, r8
   12ec8:	bne	12e84 <Mat_VarReadNextInfo@plt+0x1e5c>
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ed0:	mov	r8, r6
   12ed4:	b	12e64 <Mat_VarReadNextInfo@plt+0x1e3c>
   12ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12edc:	sub	sp, sp, #44	; 0x2c
   12ee0:	str	r0, [sp, #36]	; 0x24
   12ee4:	str	r1, [sp, #16]
   12ee8:	str	r2, [sp, #8]
   12eec:	str	r3, [sp, #24]
   12ef0:	ldr	r8, [sp, #80]	; 0x50
   12ef4:	ldr	sl, [pc, #1084]	; 13338 <Mat_VarReadNextInfo@plt+0x2310>
   12ef8:	add	sl, pc, sl
   12efc:	ldr	r3, [pc, #1080]	; 1333c <Mat_VarReadNextInfo@plt+0x2314>
   12f00:	add	r3, pc, r3
   12f04:	ldr	r3, [r3]
   12f08:	str	r3, [sp]
   12f0c:	ldr	r3, [pc, #1068]	; 13340 <Mat_VarReadNextInfo@plt+0x2318>
   12f10:	add	r3, pc, r3
   12f14:	ldr	r3, [r3]
   12f18:	cmp	r3, #1
   12f1c:	beq	12f40 <Mat_VarReadNextInfo@plt+0x1f18>
   12f20:	cmp	r3, #2
   12f24:	beq	12fbc <Mat_VarReadNextInfo@plt+0x1f94>
   12f28:	cmp	r3, #0
   12f2c:	beq	12fcc <Mat_VarReadNextInfo@plt+0x1fa4>
   12f30:	ldr	r3, [pc, #1036]	; 13344 <Mat_VarReadNextInfo@plt+0x231c>
   12f34:	add	r3, pc, r3
   12f38:	str	r3, [sp, #20]
   12f3c:	b	12f4c <Mat_VarReadNextInfo@plt+0x1f24>
   12f40:	ldr	r3, [pc, #1024]	; 13348 <Mat_VarReadNextInfo@plt+0x2320>
   12f44:	add	r3, pc, r3
   12f48:	str	r3, [sp, #20]
   12f4c:	ldr	r3, [pc, #1016]	; 1334c <Mat_VarReadNextInfo@plt+0x2324>
   12f50:	ldr	r3, [sl, r3]
   12f54:	ldr	r2, [r3]
   12f58:	str	r2, [sp, #28]
   12f5c:	add	r2, r2, #1
   12f60:	str	r2, [sp, #32]
   12f64:	str	r2, [r3]
   12f68:	mov	r1, #61	; 0x3d
   12f6c:	ldr	r4, [sp]
   12f70:	mov	r0, r4
   12f74:	bl	10f2c <strchr@plt>
   12f78:	subs	fp, r0, #0
   12f7c:	beq	12fdc <Mat_VarReadNextInfo@plt+0x1fb4>
   12f80:	sub	r7, fp, r4
   12f84:	add	fp, fp, #1
   12f88:	ldr	r3, [sp, #8]
   12f8c:	ldr	r4, [r3]
   12f90:	cmp	r4, #0
   12f94:	beq	132c4 <Mat_VarReadNextInfo@plt+0x229c>
   12f98:	mov	r5, r3
   12f9c:	mov	r3, #0
   12fa0:	str	r3, [sp, #4]
   12fa4:	mvn	r9, #0
   12fa8:	mov	r6, r3
   12fac:	ldr	r3, [sp, #84]	; 0x54
   12fb0:	and	r3, r3, #4
   12fb4:	str	r3, [sp, #12]
   12fb8:	b	12ffc <Mat_VarReadNextInfo@plt+0x1fd4>
   12fbc:	ldr	r3, [pc, #908]	; 13350 <Mat_VarReadNextInfo@plt+0x2328>
   12fc0:	add	r3, pc, r3
   12fc4:	str	r3, [sp, #20]
   12fc8:	b	12f4c <Mat_VarReadNextInfo@plt+0x1f24>
   12fcc:	ldr	r3, [pc, #896]	; 13354 <Mat_VarReadNextInfo@plt+0x232c>
   12fd0:	add	r3, pc, r3
   12fd4:	str	r3, [sp, #20]
   12fd8:	b	12f4c <Mat_VarReadNextInfo@plt+0x1f24>
   12fdc:	ldr	r0, [sp]
   12fe0:	bl	10f20 <strlen@plt>
   12fe4:	mov	r7, r0
   12fe8:	b	12f88 <Mat_VarReadNextInfo@plt+0x1f60>
   12fec:	add	r6, r6, #1
   12ff0:	ldr	r4, [r5, #16]!
   12ff4:	cmp	r4, #0
   12ff8:	beq	130b0 <Mat_VarReadNextInfo@plt+0x2088>
   12ffc:	mov	r2, r7
   13000:	mov	r1, r4
   13004:	ldr	r0, [sp]
   13008:	bl	11004 <strncmp@plt>
   1300c:	cmp	r0, #0
   13010:	bne	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   13014:	mov	r0, r4
   13018:	bl	10f20 <strlen@plt>
   1301c:	cmp	r7, r0
   13020:	beq	13118 <Mat_VarReadNextInfo@plt+0x20f0>
   13024:	adds	r3, r8, #0
   13028:	movne	r3, #1
   1302c:	cmp	r7, #1
   13030:	movne	r3, #0
   13034:	cmp	r3, #0
   13038:	bne	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   1303c:	cmn	r9, #1
   13040:	moveq	r9, r6
   13044:	beq	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   13048:	ldr	r3, [sp, #12]
   1304c:	cmp	r3, #0
   13050:	movne	r3, #1
   13054:	strne	r3, [sp, #4]
   13058:	bne	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   1305c:	ldr	r3, [sp, #8]
   13060:	add	r3, r3, r9, lsl #4
   13064:	ldr	r1, [r5, #4]
   13068:	ldr	r2, [r3, #4]
   1306c:	cmp	r1, r2
   13070:	movne	r3, #1
   13074:	strne	r3, [sp, #4]
   13078:	bne	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   1307c:	ldr	r1, [r5, #8]
   13080:	ldr	r2, [r3, #8]
   13084:	cmp	r1, r2
   13088:	movne	r3, #1
   1308c:	strne	r3, [sp, #4]
   13090:	bne	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   13094:	ldr	r2, [r5, #12]
   13098:	ldr	r3, [r3, #12]
   1309c:	ldr	r1, [sp, #4]
   130a0:	cmp	r2, r3
   130a4:	movne	r1, #1
   130a8:	str	r1, [sp, #4]
   130ac:	b	12fec <Mat_VarReadNextInfo@plt+0x1fc4>
   130b0:	ldr	r3, [sp, #4]
   130b4:	cmp	r3, #0
   130b8:	beq	13114 <Mat_VarReadNextInfo@plt+0x20ec>
   130bc:	ldr	r3, [pc, #660]	; 13358 <Mat_VarReadNextInfo@plt+0x2330>
   130c0:	ldr	r3, [sl, r3]
   130c4:	ldr	r3, [r3]
   130c8:	cmp	r3, #0
   130cc:	beq	130f8 <Mat_VarReadNextInfo@plt+0x20d0>
   130d0:	ldr	r3, [sp, #16]
   130d4:	ldrb	r3, [r3]
   130d8:	cmp	r3, #58	; 0x3a
   130dc:	beq	130f8 <Mat_VarReadNextInfo@plt+0x20d0>
   130e0:	ldr	r3, [sp]
   130e4:	mov	r2, r7
   130e8:	ldr	r1, [sp, #20]
   130ec:	ldr	r0, [pc, #616]	; 1335c <Mat_VarReadNextInfo@plt+0x2334>
   130f0:	add	r0, pc, r0
   130f4:	bl	10f38 <warnx@plt>
   130f8:	ldr	r3, [pc, #608]	; 13360 <Mat_VarReadNextInfo@plt+0x2338>
   130fc:	ldr	r3, [sl, r3]
   13100:	mov	r2, #0
   13104:	str	r2, [r3]
   13108:	mov	r0, #63	; 0x3f
   1310c:	add	sp, sp, #44	; 0x2c
   13110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13114:	mov	r6, r9
   13118:	cmn	r6, #1
   1311c:	beq	132c4 <Mat_VarReadNextInfo@plt+0x229c>
   13120:	ldr	r3, [sp, #8]
   13124:	add	r4, r3, r6, lsl #4
   13128:	ldr	r3, [r4, #4]
   1312c:	adds	r2, fp, #0
   13130:	movne	r2, #1
   13134:	cmp	r3, #0
   13138:	movne	r2, #0
   1313c:	cmp	r2, #0
   13140:	beq	131a8 <Mat_VarReadNextInfo@plt+0x2180>
   13144:	ldr	r3, [pc, #524]	; 13358 <Mat_VarReadNextInfo@plt+0x2330>
   13148:	ldr	r3, [sl, r3]
   1314c:	ldr	r3, [r3]
   13150:	cmp	r3, #0
   13154:	beq	13184 <Mat_VarReadNextInfo@plt+0x215c>
   13158:	ldr	r3, [sp, #16]
   1315c:	ldrb	r3, [r3]
   13160:	cmp	r3, #58	; 0x3a
   13164:	beq	13184 <Mat_VarReadNextInfo@plt+0x215c>
   13168:	ldr	r3, [sp]
   1316c:	mov	r2, r7
   13170:	ldr	r1, [sp, #20]
   13174:	ldr	r0, [pc, #488]	; 13364 <Mat_VarReadNextInfo@plt+0x233c>
   13178:	add	r0, pc, r0
   1317c:	add	r0, r0, #32
   13180:	bl	10f38 <warnx@plt>
   13184:	ldr	r3, [r4, #8]
   13188:	cmp	r3, #0
   1318c:	ldr	r3, [pc, #460]	; 13360 <Mat_VarReadNextInfo@plt+0x2338>
   13190:	ldr	r3, [sl, r3]
   13194:	ldreq	r2, [r4, #12]
   13198:	movne	r2, #0
   1319c:	str	r2, [r3]
   131a0:	mov	r0, #63	; 0x3f
   131a4:	b	1310c <Mat_VarReadNextInfo@plt+0x20e4>
   131a8:	sub	r2, r3, #1
   131ac:	cmp	r2, #1
   131b0:	bls	131e4 <Mat_VarReadNextInfo@plt+0x21bc>
   131b4:	cmp	r3, #1
   131b8:	beq	1322c <Mat_VarReadNextInfo@plt+0x2204>
   131bc:	ldr	r3, [sp, #24]
   131c0:	cmp	r3, #0
   131c4:	strne	r6, [r3]
   131c8:	ldr	r3, [r4, #8]
   131cc:	cmp	r3, #0
   131d0:	ldrne	r2, [r4, #12]
   131d4:	strne	r2, [r3]
   131d8:	movne	r0, #0
   131dc:	ldreq	r0, [r4, #12]
   131e0:	b	1310c <Mat_VarReadNextInfo@plt+0x20e4>
   131e4:	cmp	fp, #0
   131e8:	ldrne	r2, [pc, #376]	; 13368 <Mat_VarReadNextInfo@plt+0x2340>
   131ec:	ldrne	r2, [sl, r2]
   131f0:	strne	fp, [r2]
   131f4:	bne	131b4 <Mat_VarReadNextInfo@plt+0x218c>
   131f8:	cmp	r3, #1
   131fc:	bne	131bc <Mat_VarReadNextInfo@plt+0x2194>
   13200:	ldr	r3, [pc, #324]	; 1334c <Mat_VarReadNextInfo@plt+0x2324>
   13204:	ldr	r3, [sl, r3]
   13208:	ldr	r2, [sp, #28]
   1320c:	add	r2, r2, #2
   13210:	str	r2, [r3]
   13214:	ldr	r3, [sp, #36]	; 0x24
   13218:	ldr	r2, [sp, #32]
   1321c:	ldr	r2, [r3, r2, lsl #2]
   13220:	ldr	r3, [pc, #320]	; 13368 <Mat_VarReadNextInfo@plt+0x2340>
   13224:	ldr	r3, [sl, r3]
   13228:	str	r2, [r3]
   1322c:	ldr	r3, [pc, #308]	; 13368 <Mat_VarReadNextInfo@plt+0x2340>
   13230:	ldr	r3, [sl, r3]
   13234:	ldr	r3, [r3]
   13238:	cmp	r3, #0
   1323c:	bne	131bc <Mat_VarReadNextInfo@plt+0x2194>
   13240:	ldr	r3, [pc, #272]	; 13358 <Mat_VarReadNextInfo@plt+0x2330>
   13244:	ldr	r3, [sl, r3]
   13248:	ldr	r3, [r3]
   1324c:	cmp	r3, #0
   13250:	beq	1327c <Mat_VarReadNextInfo@plt+0x2254>
   13254:	ldr	r3, [sp, #16]
   13258:	ldrb	r3, [r3]
   1325c:	cmp	r3, #58	; 0x3a
   13260:	beq	1327c <Mat_VarReadNextInfo@plt+0x2254>
   13264:	ldr	r2, [sp]
   13268:	ldr	r1, [sp, #20]
   1326c:	ldr	r0, [pc, #248]	; 1336c <Mat_VarReadNextInfo@plt+0x2344>
   13270:	add	r0, pc, r0
   13274:	add	r0, r0, #76	; 0x4c
   13278:	bl	10f38 <warnx@plt>
   1327c:	ldr	r3, [r4, #8]
   13280:	cmp	r3, #0
   13284:	ldr	r3, [pc, #212]	; 13360 <Mat_VarReadNextInfo@plt+0x2338>
   13288:	ldr	r3, [sl, r3]
   1328c:	ldreq	r2, [r4, #12]
   13290:	movne	r2, #0
   13294:	str	r2, [r3]
   13298:	ldr	r3, [pc, #172]	; 1334c <Mat_VarReadNextInfo@plt+0x2324>
   1329c:	ldr	r2, [sl, r3]
   132a0:	ldr	r3, [r2]
   132a4:	sub	r3, r3, #1
   132a8:	str	r3, [r2]
   132ac:	ldr	r3, [sp, #16]
   132b0:	ldrb	r0, [r3]
   132b4:	cmp	r0, #58	; 0x3a
   132b8:	moveq	r0, #58	; 0x3a
   132bc:	movne	r0, #63	; 0x3f
   132c0:	b	1310c <Mat_VarReadNextInfo@plt+0x20e4>
   132c4:	cmp	r8, #0
   132c8:	bne	13320 <Mat_VarReadNextInfo@plt+0x22f8>
   132cc:	ldr	r3, [pc, #132]	; 13358 <Mat_VarReadNextInfo@plt+0x2330>
   132d0:	ldr	r3, [sl, r3]
   132d4:	ldr	r3, [r3]
   132d8:	cmp	r3, #0
   132dc:	beq	13308 <Mat_VarReadNextInfo@plt+0x22e0>
   132e0:	ldr	r3, [sp, #16]
   132e4:	ldrb	r3, [r3]
   132e8:	cmp	r3, #58	; 0x3a
   132ec:	beq	13308 <Mat_VarReadNextInfo@plt+0x22e0>
   132f0:	ldr	r2, [sp]
   132f4:	ldr	r1, [sp, #20]
   132f8:	ldr	r0, [pc, #112]	; 13370 <Mat_VarReadNextInfo@plt+0x2348>
   132fc:	add	r0, pc, r0
   13300:	add	r0, r0, #112	; 0x70
   13304:	bl	10f38 <warnx@plt>
   13308:	ldr	r3, [pc, #80]	; 13360 <Mat_VarReadNextInfo@plt+0x2338>
   1330c:	ldr	r3, [sl, r3]
   13310:	mov	r2, #0
   13314:	str	r2, [r3]
   13318:	mov	r0, #63	; 0x3f
   1331c:	b	1310c <Mat_VarReadNextInfo@plt+0x20e4>
   13320:	ldr	r3, [pc, #36]	; 1334c <Mat_VarReadNextInfo@plt+0x2324>
   13324:	ldr	r3, [sl, r3]
   13328:	ldr	r2, [sp, #28]
   1332c:	str	r2, [r3]
   13330:	mvn	r0, #0
   13334:	b	1310c <Mat_VarReadNextInfo@plt+0x20e4>
   13338:	andeq	r2, r1, r0, lsl #2
   1333c:	ldrdeq	r2, [r1], -r0
   13340:	andeq	r2, r1, r8, lsr #5
   13344:	andeq	r1, r0, r4, asr r3
   13348:			; <UNDEFINED> instruction: 0x00001bb8
   1334c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13350:	andeq	r1, r0, r0, asr #22
   13354:	andeq	r1, r0, r8, lsr #22
   13358:	andeq	r0, r0, r8, ror #1
   1335c:	andeq	r1, r0, r8, lsr #18
   13360:	strdeq	r0, [r0], -r4
   13364:	andeq	r1, r0, r0, lsr #17
   13368:	strdeq	r0, [r0], -r8
   1336c:	andeq	r1, r0, r8, lsr #15
   13370:	andeq	r1, r0, ip, lsl r7
   13374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13378:	sub	sp, sp, #44	; 0x2c
   1337c:	str	r0, [sp, #12]
   13380:	str	r3, [sp, #32]
   13384:	ldr	r8, [sp, #84]	; 0x54
   13388:	ldr	r6, [pc, #1996]	; 13b5c <Mat_VarReadNextInfo@plt+0x2b34>
   1338c:	add	r6, pc, r6
   13390:	subs	r3, r2, #0
   13394:	str	r3, [sp, #28]
   13398:	beq	13ab8 <Mat_VarReadNextInfo@plt+0x2a90>
   1339c:	mov	r7, r1
   133a0:	mov	r4, r3
   133a4:	ldr	r0, [pc, #1972]	; 13b60 <Mat_VarReadNextInfo@plt+0x2b38>
   133a8:	add	r0, pc, r0
   133ac:	bl	10eb4 <getenv@plt>
   133b0:	str	r0, [sp, #36]	; 0x24
   133b4:	ldrb	r3, [r4]
   133b8:	cmp	r3, #45	; 0x2d
   133bc:	orreq	r8, r8, #2
   133c0:	beq	133ec <Mat_VarReadNextInfo@plt+0x23c4>
   133c4:	ldr	r2, [sp, #36]	; 0x24
   133c8:	adds	r2, r2, #0
   133cc:	movne	r2, #1
   133d0:	cmp	r3, #43	; 0x2b
   133d4:	orreq	r2, r2, #1
   133d8:	cmp	r2, #0
   133dc:	bicne	r8, r8, #1
   133e0:	sub	r3, r3, #43	; 0x2b
   133e4:	tst	r3, #253	; 0xfd
   133e8:	bne	133f8 <Mat_VarReadNextInfo@plt+0x23d0>
   133ec:	ldr	r3, [sp, #28]
   133f0:	add	r3, r3, #1
   133f4:	str	r3, [sp, #28]
   133f8:	ldr	r3, [pc, #1892]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   133fc:	ldr	r3, [r6, r3]
   13400:	ldr	r3, [r3]
   13404:	cmp	r3, #0
   13408:	bne	13428 <Mat_VarReadNextInfo@plt+0x2400>
   1340c:	ldr	r3, [pc, #1876]	; 13b68 <Mat_VarReadNextInfo@plt+0x2b40>
   13410:	ldr	r2, [r6, r3]
   13414:	mov	r3, #1
   13418:	str	r3, [r2]
   1341c:	ldr	r2, [pc, #1856]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13420:	ldr	r2, [r6, r2]
   13424:	str	r3, [r2]
   13428:	ldr	r3, [pc, #1852]	; 13b6c <Mat_VarReadNextInfo@plt+0x2b44>
   1342c:	ldr	r3, [r6, r3]
   13430:	mov	r2, #0
   13434:	str	r2, [r3]
   13438:	ldr	r3, [pc, #1832]	; 13b68 <Mat_VarReadNextInfo@plt+0x2b40>
   1343c:	ldr	r3, [r6, r3]
   13440:	ldr	r3, [r3]
   13444:	cmp	r3, r2
   13448:	beq	13460 <Mat_VarReadNextInfo@plt+0x2438>
   1344c:	ldr	r3, [pc, #1820]	; 13b70 <Mat_VarReadNextInfo@plt+0x2b48>
   13450:	add	r3, pc, r3
   13454:	mvn	r2, #0
   13458:	str	r2, [r3, #4]
   1345c:	str	r2, [r3, #8]
   13460:	ldr	r3, [pc, #1792]	; 13b68 <Mat_VarReadNextInfo@plt+0x2b40>
   13464:	ldr	r9, [r6, r3]
   13468:	ldr	fp, [pc, #1796]	; 13b74 <Mat_VarReadNextInfo@plt+0x2b4c>
   1346c:	add	fp, pc, fp
   13470:	ldr	sl, [pc, #1792]	; 13b78 <Mat_VarReadNextInfo@plt+0x2b50>
   13474:	add	sl, pc, sl
   13478:	ldr	r3, [pc, #1788]	; 13b7c <Mat_VarReadNextInfo@plt+0x2b54>
   1347c:	add	r3, pc, r3
   13480:	str	r3, [sp, #16]
   13484:	ldr	r3, [pc, #1780]	; 13b80 <Mat_VarReadNextInfo@plt+0x2b58>
   13488:	add	r3, pc, r3
   1348c:	str	r3, [sp, #20]
   13490:	ldr	r3, [pc, #1772]	; 13b84 <Mat_VarReadNextInfo@plt+0x2b5c>
   13494:	add	r3, pc, r3
   13498:	str	r3, [sp, #24]
   1349c:	b	136a8 <Mat_VarReadNextInfo@plt+0x2680>
   134a0:	ldr	r3, [pc, #1760]	; 13b88 <Mat_VarReadNextInfo@plt+0x2b60>
   134a4:	add	r3, pc, r3
   134a8:	ldr	r1, [pc, #1756]	; 13b8c <Mat_VarReadNextInfo@plt+0x2b64>
   134ac:	add	r1, pc, r1
   134b0:	str	r3, [r1]
   134b4:	ldr	r3, [pc, #1748]	; 13b90 <Mat_VarReadNextInfo@plt+0x2b68>
   134b8:	add	r3, pc, r3
   134bc:	ldr	r4, [r3, #4]
   134c0:	cmn	r4, #1
   134c4:	beq	1351c <Mat_VarReadNextInfo@plt+0x24f4>
   134c8:	ldr	r3, [pc, #1732]	; 13b94 <Mat_VarReadNextInfo@plt+0x2b6c>
   134cc:	add	r3, pc, r3
   134d0:	ldr	r5, [r3, #8]
   134d4:	mov	r3, r7
   134d8:	mov	r1, r4
   134dc:	mov	r0, r5
   134e0:	bl	12e14 <Mat_VarReadNextInfo@plt+0x1dec>
   134e4:	ldr	r3, [pc, #1656]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   134e8:	ldr	r2, [r6, r3]
   134ec:	sub	r4, r4, r5
   134f0:	ldr	r3, [r2]
   134f4:	sub	r4, r3, r4
   134f8:	str	r4, [r2]
   134fc:	ldr	r3, [pc, #1684]	; 13b98 <Mat_VarReadNextInfo@plt+0x2b70>
   13500:	add	r3, pc, r3
   13504:	mvn	r4, #0
   13508:	str	r4, [r3, #4]
   1350c:	str	r4, [r3, #8]
   13510:	mov	r0, r4
   13514:	add	sp, sp, #44	; 0x2c
   13518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1351c:	ldr	r3, [pc, #1656]	; 13b9c <Mat_VarReadNextInfo@plt+0x2b74>
   13520:	add	r3, pc, r3
   13524:	ldr	r3, [r3, #8]
   13528:	cmn	r3, #1
   1352c:	ldrne	r2, [pc, #1584]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13530:	ldrne	r2, [r6, r2]
   13534:	strne	r3, [r2]
   13538:	b	134fc <Mat_VarReadNextInfo@plt+0x24d4>
   1353c:	ldrb	r1, [r3, #1]
   13540:	cmp	r1, #0
   13544:	beq	13704 <Mat_VarReadNextInfo@plt+0x26dc>
   13548:	ldr	r0, [pc, #1616]	; 13ba0 <Mat_VarReadNextInfo@plt+0x2b78>
   1354c:	add	r0, pc, r0
   13550:	ldr	r4, [r0, #8]
   13554:	cmn	r4, #1
   13558:	beq	13570 <Mat_VarReadNextInfo@plt+0x2548>
   1355c:	ldr	r0, [pc, #1600]	; 13ba4 <Mat_VarReadNextInfo@plt+0x2b7c>
   13560:	add	r0, pc, r0
   13564:	ldr	r0, [r0, #4]
   13568:	cmn	r0, #1
   1356c:	beq	13780 <Mat_VarReadNextInfo@plt+0x2758>
   13570:	add	r0, r3, #1
   13574:	ldr	ip, [pc, #1580]	; 13ba8 <Mat_VarReadNextInfo@plt+0x2b80>
   13578:	add	ip, pc, ip
   1357c:	str	r0, [ip]
   13580:	cmp	r1, #45	; 0x2d
   13584:	beq	13790 <Mat_VarReadNextInfo@plt+0x2768>
   13588:	ldr	r3, [sp, #32]
   1358c:	cmp	r3, #0
   13590:	beq	135cc <Mat_VarReadNextInfo@plt+0x25a4>
   13594:	ldr	r3, [pc, #1552]	; 13bac <Mat_VarReadNextInfo@plt+0x2b84>
   13598:	add	r3, pc, r3
   1359c:	ldr	r3, [r3]
   135a0:	ldr	r2, [pc, #1468]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   135a4:	ldr	r2, [r6, r2]
   135a8:	ldr	r2, [r2]
   135ac:	ldr	r2, [r7, r2, lsl #2]
   135b0:	cmp	r2, r3
   135b4:	beq	135cc <Mat_VarReadNextInfo@plt+0x25a4>
   135b8:	ldrb	r1, [r3]
   135bc:	cmp	r1, #45	; 0x2d
   135c0:	beq	13ac8 <Mat_VarReadNextInfo@plt+0x2aa0>
   135c4:	tst	r8, #4
   135c8:	bne	13af0 <Mat_VarReadNextInfo@plt+0x2ac8>
   135cc:	ldr	r3, [pc, #1500]	; 13bb0 <Mat_VarReadNextInfo@plt+0x2b88>
   135d0:	add	r3, pc, r3
   135d4:	ldr	r5, [r3]
   135d8:	add	r9, r5, #1
   135dc:	str	r9, [r3]
   135e0:	ldrb	r4, [r5]
   135e4:	cmp	r4, #58	; 0x3a
   135e8:	beq	1383c <Mat_VarReadNextInfo@plt+0x2814>
   135ec:	cmp	r4, #45	; 0x2d
   135f0:	beq	13814 <Mat_VarReadNextInfo@plt+0x27ec>
   135f4:	mov	r1, r4
   135f8:	ldr	r0, [sp, #28]
   135fc:	bl	10f2c <strchr@plt>
   13600:	cmp	r0, #0
   13604:	beq	1383c <Mat_VarReadNextInfo@plt+0x2814>
   13608:	ldr	r3, [sp, #32]
   1360c:	adds	r3, r3, #0
   13610:	movne	r3, #1
   13614:	cmp	r4, #87	; 0x57
   13618:	movne	r3, #0
   1361c:	cmp	r3, #0
   13620:	beq	13630 <Mat_VarReadNextInfo@plt+0x2608>
   13624:	ldrb	r3, [r0, #1]
   13628:	cmp	r3, #59	; 0x3b
   1362c:	beq	138bc <Mat_VarReadNextInfo@plt+0x2894>
   13630:	ldrb	r3, [r0, #1]
   13634:	cmp	r3, #58	; 0x3a
   13638:	beq	139b4 <Mat_VarReadNextInfo@plt+0x298c>
   1363c:	ldrb	r3, [r5, #1]
   13640:	cmp	r3, #0
   13644:	bne	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13648:	ldr	r3, [pc, #1300]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   1364c:	ldr	r2, [r6, r3]
   13650:	ldr	r3, [r2]
   13654:	add	r3, r3, #1
   13658:	str	r3, [r2]
   1365c:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13660:	ldr	r3, [pc, #1276]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13664:	ldr	r3, [r6, r3]
   13668:	add	r2, r2, #1
   1366c:	str	r2, [r3]
   13670:	ldr	r2, [r0]
   13674:	ldr	r3, [pc, #1264]	; 13b6c <Mat_VarReadNextInfo@plt+0x2b44>
   13678:	ldr	r3, [r6, r3]
   1367c:	str	r2, [r3]
   13680:	mov	r4, #1
   13684:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13688:	ldr	r3, [pc, #1316]	; 13bb4 <Mat_VarReadNextInfo@plt+0x2b8c>
   1368c:	add	r3, pc, r3
   13690:	str	r2, [r3, #8]
   13694:	ldr	r3, [pc, #1224]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13698:	ldr	r2, [r6, r3]
   1369c:	ldr	r3, [r2]
   136a0:	add	r3, r3, #1
   136a4:	str	r3, [r2]
   136a8:	ldr	r3, [r9]
   136ac:	cmp	r3, #0
   136b0:	bne	136c4 <Mat_VarReadNextInfo@plt+0x269c>
   136b4:	ldr	r3, [fp]
   136b8:	ldrb	r3, [r3]
   136bc:	cmp	r3, #0
   136c0:	bne	13588 <Mat_VarReadNextInfo@plt+0x2560>
   136c4:	ldr	r3, [pc, #1180]	; 13b68 <Mat_VarReadNextInfo@plt+0x2b40>
   136c8:	ldr	r3, [r6, r3]
   136cc:	mov	r2, #0
   136d0:	str	r2, [r3]
   136d4:	ldr	r3, [pc, #1160]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   136d8:	ldr	r3, [r6, r3]
   136dc:	ldr	r2, [r3]
   136e0:	ldr	r3, [sp, #12]
   136e4:	cmp	r2, r3
   136e8:	bge	134a0 <Mat_VarReadNextInfo@plt+0x2478>
   136ec:	add	r0, r7, r2, lsl #2
   136f0:	ldr	r3, [r7, r2, lsl #2]
   136f4:	str	r3, [sl]
   136f8:	ldrb	r1, [r3]
   136fc:	cmp	r1, #45	; 0x2d
   13700:	beq	1353c <Mat_VarReadNextInfo@plt+0x2514>
   13704:	ldr	r3, [sp, #16]
   13708:	ldr	r1, [sp, #20]
   1370c:	str	r1, [r3]
   13710:	tst	r8, #2
   13714:	bne	13660 <Mat_VarReadNextInfo@plt+0x2638>
   13718:	tst	r8, #1
   1371c:	beq	13ac0 <Mat_VarReadNextInfo@plt+0x2a98>
   13720:	ldr	r3, [sp, #24]
   13724:	ldr	r5, [r3, #8]
   13728:	cmn	r5, #1
   1372c:	beq	13688 <Mat_VarReadNextInfo@plt+0x2660>
   13730:	ldr	r3, [pc, #1152]	; 13bb8 <Mat_VarReadNextInfo@plt+0x2b90>
   13734:	add	r3, pc, r3
   13738:	ldr	r4, [r3, #4]
   1373c:	cmn	r4, #1
   13740:	beq	13694 <Mat_VarReadNextInfo@plt+0x266c>
   13744:	mov	r3, r7
   13748:	mov	r1, r4
   1374c:	mov	r0, r5
   13750:	bl	12e14 <Mat_VarReadNextInfo@plt+0x1dec>
   13754:	ldr	r3, [pc, #1120]	; 13bbc <Mat_VarReadNextInfo@plt+0x2b94>
   13758:	add	r3, pc, r3
   1375c:	ldr	r2, [pc, #1024]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13760:	ldr	r2, [r6, r2]
   13764:	sub	r4, r4, r5
   13768:	ldr	r5, [r2]
   1376c:	sub	r4, r5, r4
   13770:	str	r4, [r3, #8]
   13774:	mvn	r2, #0
   13778:	str	r2, [r3, #4]
   1377c:	b	13694 <Mat_VarReadNextInfo@plt+0x266c>
   13780:	ldr	r0, [pc, #1080]	; 13bc0 <Mat_VarReadNextInfo@plt+0x2b98>
   13784:	add	r0, pc, r0
   13788:	str	r2, [r0, #4]
   1378c:	b	13570 <Mat_VarReadNextInfo@plt+0x2548>
   13790:	ldrb	r3, [r3, #2]
   13794:	cmp	r3, #0
   13798:	bne	13588 <Mat_VarReadNextInfo@plt+0x2560>
   1379c:	add	r2, r2, #1
   137a0:	ldr	r3, [pc, #956]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   137a4:	ldr	r3, [r6, r3]
   137a8:	str	r2, [r3]
   137ac:	ldr	r3, [pc, #1040]	; 13bc4 <Mat_VarReadNextInfo@plt+0x2b9c>
   137b0:	add	r3, pc, r3
   137b4:	ldr	r1, [pc, #1036]	; 13bc8 <Mat_VarReadNextInfo@plt+0x2ba0>
   137b8:	add	r1, pc, r1
   137bc:	str	r3, [r1]
   137c0:	ldr	r3, [pc, #1028]	; 13bcc <Mat_VarReadNextInfo@plt+0x2ba4>
   137c4:	add	r3, pc, r3
   137c8:	ldr	r5, [r3, #4]
   137cc:	cmn	r5, #1
   137d0:	beq	137fc <Mat_VarReadNextInfo@plt+0x27d4>
   137d4:	mov	r3, r7
   137d8:	mov	r1, r5
   137dc:	mov	r0, r4
   137e0:	bl	12e14 <Mat_VarReadNextInfo@plt+0x1dec>
   137e4:	ldr	r3, [pc, #888]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   137e8:	ldr	r2, [r6, r3]
   137ec:	sub	r4, r5, r4
   137f0:	ldr	r3, [r2]
   137f4:	sub	r4, r3, r4
   137f8:	str	r4, [r2]
   137fc:	ldr	r3, [pc, #972]	; 13bd0 <Mat_VarReadNextInfo@plt+0x2ba8>
   13800:	add	r3, pc, r3
   13804:	mvn	r4, #0
   13808:	str	r4, [r3, #4]
   1380c:	str	r4, [r3, #8]
   13810:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13814:	ldrb	r3, [r5, #1]
   13818:	cmp	r3, #0
   1381c:	bne	1385c <Mat_VarReadNextInfo@plt+0x2834>
   13820:	mov	r1, #45	; 0x2d
   13824:	ldr	r0, [sp, #28]
   13828:	bl	10f2c <strchr@plt>
   1382c:	cmp	r0, #0
   13830:	bne	13630 <Mat_VarReadNextInfo@plt+0x2608>
   13834:	mvn	r4, #0
   13838:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   1383c:	ldrb	r3, [r5, #1]
   13840:	cmp	r3, #0
   13844:	bne	1385c <Mat_VarReadNextInfo@plt+0x2834>
   13848:	ldr	r3, [pc, #788]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   1384c:	ldr	r2, [r6, r3]
   13850:	ldr	r3, [r2]
   13854:	add	r3, r3, #1
   13858:	str	r3, [r2]
   1385c:	ldr	r3, [pc, #880]	; 13bd4 <Mat_VarReadNextInfo@plt+0x2bac>
   13860:	ldr	r3, [r6, r3]
   13864:	ldr	r3, [r3]
   13868:	cmp	r3, #0
   1386c:	beq	138a8 <Mat_VarReadNextInfo@plt+0x2880>
   13870:	ldr	r3, [sp, #28]
   13874:	ldrb	r3, [r3]
   13878:	cmp	r3, #58	; 0x3a
   1387c:	beq	138a8 <Mat_VarReadNextInfo@plt+0x2880>
   13880:	ldr	r3, [sp, #36]	; 0x24
   13884:	ldr	r0, [pc, #844]	; 13bd8 <Mat_VarReadNextInfo@plt+0x2bb0>
   13888:	add	r0, pc, r0
   1388c:	add	r0, r0, #164	; 0xa4
   13890:	cmp	r3, #0
   13894:	ldrne	r0, [pc, #832]	; 13bdc <Mat_VarReadNextInfo@plt+0x2bb4>
   13898:	addne	r0, pc, r0
   1389c:	addne	r0, r0, #140	; 0x8c
   138a0:	mov	r1, r4
   138a4:	bl	10f38 <warnx@plt>
   138a8:	ldr	r3, [pc, #816]	; 13be0 <Mat_VarReadNextInfo@plt+0x2bb8>
   138ac:	ldr	r3, [r6, r3]
   138b0:	str	r4, [r3]
   138b4:	mov	r4, #63	; 0x3f
   138b8:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   138bc:	ldrb	r3, [r5, #1]
   138c0:	cmp	r3, #0
   138c4:	bne	13968 <Mat_VarReadNextInfo@plt+0x2940>
   138c8:	ldr	r3, [pc, #660]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   138cc:	ldr	r2, [r6, r3]
   138d0:	ldr	r3, [r2]
   138d4:	add	r3, r3, #1
   138d8:	str	r3, [r2]
   138dc:	ldr	r2, [sp, #12]
   138e0:	cmp	r2, r3
   138e4:	bgt	13958 <Mat_VarReadNextInfo@plt+0x2930>
   138e8:	ldr	r3, [pc, #756]	; 13be4 <Mat_VarReadNextInfo@plt+0x2bbc>
   138ec:	add	r3, pc, r3
   138f0:	ldr	r2, [pc, #752]	; 13be8 <Mat_VarReadNextInfo@plt+0x2bc0>
   138f4:	add	r2, pc, r2
   138f8:	str	r3, [r2]
   138fc:	ldr	r3, [pc, #720]	; 13bd4 <Mat_VarReadNextInfo@plt+0x2bac>
   13900:	ldr	r3, [r6, r3]
   13904:	ldr	r3, [r3]
   13908:	cmp	r3, #0
   1390c:	beq	13934 <Mat_VarReadNextInfo@plt+0x290c>
   13910:	ldr	r3, [sp, #28]
   13914:	ldrb	r3, [r3]
   13918:	cmp	r3, #58	; 0x3a
   1391c:	beq	13934 <Mat_VarReadNextInfo@plt+0x290c>
   13920:	mov	r1, r4
   13924:	ldr	r0, [pc, #704]	; 13bec <Mat_VarReadNextInfo@plt+0x2bc4>
   13928:	add	r0, pc, r0
   1392c:	add	r0, r0, #188	; 0xbc
   13930:	bl	10f38 <warnx@plt>
   13934:	ldr	r3, [pc, #676]	; 13be0 <Mat_VarReadNextInfo@plt+0x2bb8>
   13938:	ldr	r3, [r6, r3]
   1393c:	str	r4, [r3]
   13940:	ldr	r3, [sp, #28]
   13944:	ldrb	r4, [r3]
   13948:	cmp	r4, #58	; 0x3a
   1394c:	moveq	r4, #58	; 0x3a
   13950:	movne	r4, #63	; 0x3f
   13954:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13958:	ldr	r2, [r7, r3, lsl #2]
   1395c:	ldr	r3, [pc, #652]	; 13bf0 <Mat_VarReadNextInfo@plt+0x2bc8>
   13960:	add	r3, pc, r3
   13964:	str	r2, [r3]
   13968:	mov	r2, #2
   1396c:	ldr	r3, [pc, #640]	; 13bf4 <Mat_VarReadNextInfo@plt+0x2bcc>
   13970:	add	r3, pc, r3
   13974:	str	r2, [r3]
   13978:	str	r8, [sp, #4]
   1397c:	mov	r3, #0
   13980:	str	r3, [sp]
   13984:	ldr	r3, [sp, #80]	; 0x50
   13988:	ldr	r2, [sp, #32]
   1398c:	ldr	r1, [sp, #28]
   13990:	mov	r0, r7
   13994:	bl	12ed8 <Mat_VarReadNextInfo@plt+0x1eb0>
   13998:	mov	r4, r0
   1399c:	ldr	r3, [pc, #596]	; 13bf8 <Mat_VarReadNextInfo@plt+0x2bd0>
   139a0:	add	r3, pc, r3
   139a4:	ldr	r2, [pc, #592]	; 13bfc <Mat_VarReadNextInfo@plt+0x2bd4>
   139a8:	add	r2, pc, r2
   139ac:	str	r3, [r2]
   139b0:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   139b4:	ldr	r3, [pc, #432]	; 13b6c <Mat_VarReadNextInfo@plt+0x2b44>
   139b8:	ldr	r3, [r6, r3]
   139bc:	mov	r2, #0
   139c0:	str	r2, [r3]
   139c4:	ldrb	r3, [r5, #1]
   139c8:	cmp	r3, r2
   139cc:	beq	13a08 <Mat_VarReadNextInfo@plt+0x29e0>
   139d0:	ldr	r3, [pc, #404]	; 13b6c <Mat_VarReadNextInfo@plt+0x2b44>
   139d4:	ldr	r3, [r6, r3]
   139d8:	str	r9, [r3]
   139dc:	ldr	r3, [pc, #540]	; 13c00 <Mat_VarReadNextInfo@plt+0x2bd8>
   139e0:	add	r3, pc, r3
   139e4:	ldr	r2, [pc, #536]	; 13c04 <Mat_VarReadNextInfo@plt+0x2bdc>
   139e8:	add	r2, pc, r2
   139ec:	str	r3, [r2]
   139f0:	ldr	r3, [pc, #364]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   139f4:	ldr	r2, [r6, r3]
   139f8:	ldr	r3, [r2]
   139fc:	add	r3, r3, #1
   13a00:	str	r3, [r2]
   13a04:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13a08:	ldrb	r3, [r0, #2]
   13a0c:	cmp	r3, #58	; 0x3a
   13a10:	beq	139dc <Mat_VarReadNextInfo@plt+0x29b4>
   13a14:	ldr	r3, [pc, #328]	; 13b64 <Mat_VarReadNextInfo@plt+0x2b3c>
   13a18:	ldr	r2, [r6, r3]
   13a1c:	ldr	r3, [r2]
   13a20:	add	r3, r3, #1
   13a24:	str	r3, [r2]
   13a28:	ldr	r2, [sp, #12]
   13a2c:	cmp	r2, r3
   13a30:	bgt	13aa4 <Mat_VarReadNextInfo@plt+0x2a7c>
   13a34:	ldr	r3, [pc, #460]	; 13c08 <Mat_VarReadNextInfo@plt+0x2be0>
   13a38:	add	r3, pc, r3
   13a3c:	ldr	r2, [pc, #456]	; 13c0c <Mat_VarReadNextInfo@plt+0x2be4>
   13a40:	add	r2, pc, r2
   13a44:	str	r3, [r2]
   13a48:	ldr	r3, [pc, #388]	; 13bd4 <Mat_VarReadNextInfo@plt+0x2bac>
   13a4c:	ldr	r3, [r6, r3]
   13a50:	ldr	r3, [r3]
   13a54:	cmp	r3, #0
   13a58:	beq	13a80 <Mat_VarReadNextInfo@plt+0x2a58>
   13a5c:	ldr	r3, [sp, #28]
   13a60:	ldrb	r3, [r3]
   13a64:	cmp	r3, #58	; 0x3a
   13a68:	beq	13a80 <Mat_VarReadNextInfo@plt+0x2a58>
   13a6c:	mov	r1, r4
   13a70:	ldr	r0, [pc, #408]	; 13c10 <Mat_VarReadNextInfo@plt+0x2be8>
   13a74:	add	r0, pc, r0
   13a78:	add	r0, r0, #188	; 0xbc
   13a7c:	bl	10f38 <warnx@plt>
   13a80:	ldr	r3, [pc, #344]	; 13be0 <Mat_VarReadNextInfo@plt+0x2bb8>
   13a84:	ldr	r3, [r6, r3]
   13a88:	str	r4, [r3]
   13a8c:	ldr	r3, [sp, #28]
   13a90:	ldrb	r4, [r3]
   13a94:	cmp	r4, #58	; 0x3a
   13a98:	moveq	r4, #58	; 0x3a
   13a9c:	movne	r4, #63	; 0x3f
   13aa0:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13aa4:	ldr	r2, [r7, r3, lsl #2]
   13aa8:	ldr	r3, [pc, #188]	; 13b6c <Mat_VarReadNextInfo@plt+0x2b44>
   13aac:	ldr	r3, [r6, r3]
   13ab0:	str	r2, [r3]
   13ab4:	b	139dc <Mat_VarReadNextInfo@plt+0x29b4>
   13ab8:	mvn	r4, #0
   13abc:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13ac0:	mvn	r4, #0
   13ac4:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13ac8:	add	r3, r3, #1
   13acc:	ldr	r2, [pc, #320]	; 13c14 <Mat_VarReadNextInfo@plt+0x2bec>
   13ad0:	add	r2, pc, r2
   13ad4:	str	r3, [r2]
   13ad8:	mov	r2, #1
   13adc:	ldr	r3, [pc, #308]	; 13c18 <Mat_VarReadNextInfo@plt+0x2bf0>
   13ae0:	add	r3, pc, r3
   13ae4:	str	r2, [r3]
   13ae8:	mov	r0, #0
   13aec:	b	13b1c <Mat_VarReadNextInfo@plt+0x2af4>
   13af0:	mov	r2, #0
   13af4:	ldr	r3, [pc, #288]	; 13c1c <Mat_VarReadNextInfo@plt+0x2bf4>
   13af8:	add	r3, pc, r3
   13afc:	str	r2, [r3]
   13b00:	cmp	r1, #58	; 0x3a
   13b04:	moveq	r0, r2
   13b08:	beq	13b1c <Mat_VarReadNextInfo@plt+0x2af4>
   13b0c:	ldr	r0, [sp, #28]
   13b10:	bl	10f2c <strchr@plt>
   13b14:	adds	r0, r0, #0
   13b18:	movne	r0, #1
   13b1c:	str	r8, [sp, #4]
   13b20:	str	r0, [sp]
   13b24:	ldr	r3, [sp, #80]	; 0x50
   13b28:	ldr	r2, [sp, #32]
   13b2c:	ldr	r1, [sp, #28]
   13b30:	mov	r0, r7
   13b34:	bl	12ed8 <Mat_VarReadNextInfo@plt+0x1eb0>
   13b38:	mov	r4, r0
   13b3c:	cmn	r0, #1
   13b40:	beq	135cc <Mat_VarReadNextInfo@plt+0x25a4>
   13b44:	ldr	r3, [pc, #212]	; 13c20 <Mat_VarReadNextInfo@plt+0x2bf8>
   13b48:	add	r3, pc, r3
   13b4c:	ldr	r2, [pc, #208]	; 13c24 <Mat_VarReadNextInfo@plt+0x2bfc>
   13b50:	add	r2, pc, r2
   13b54:	str	r3, [r2]
   13b58:	b	13510 <Mat_VarReadNextInfo@plt+0x24e8>
   13b5c:	andeq	r1, r1, ip, ror #24
   13b60:	andeq	r1, r0, ip, asr r7
   13b64:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b68:	andeq	r0, r0, r4, ror #1
   13b6c:	strdeq	r0, [r0], -r8
   13b70:	andeq	r1, r1, r8, ror #26
   13b74:	andeq	r1, r1, r4, ror #26
   13b78:	andeq	r1, r1, ip, asr sp
   13b7c:	andeq	r1, r1, r4, asr sp
   13b80:	andeq	r0, r0, r0, lsl #28
   13b84:	andeq	r1, r1, r4, lsr #26
   13b88:	andeq	r0, r0, r4, ror #27
   13b8c:	andeq	r1, r1, r4, lsr #26
   13b90:	andeq	r1, r1, r0, lsl #26
   13b94:	andeq	r1, r1, ip, ror #25
   13b98:			; <UNDEFINED> instruction: 0x00011cb8
   13b9c:	muleq	r1, r8, ip
   13ba0:	andeq	r1, r1, ip, ror #24
   13ba4:	andeq	r1, r1, r8, asr ip
   13ba8:	andeq	r1, r1, r8, asr ip
   13bac:	andeq	r1, r1, r8, lsr ip
   13bb0:	andeq	r1, r1, r0, lsl #24
   13bb4:	andeq	r1, r1, ip, lsr #22
   13bb8:	andeq	r1, r1, r4, lsl #21
   13bbc:	andeq	r1, r1, r0, ror #20
   13bc0:	andeq	r1, r1, r4, lsr sl
   13bc4:	ldrdeq	r0, [r0], -r8
   13bc8:	andeq	r1, r1, r8, lsl sl
   13bcc:	strdeq	r1, [r1], -r4
   13bd0:			; <UNDEFINED> instruction: 0x000119b8
   13bd4:	andeq	r0, r0, r8, ror #1
   13bd8:	muleq	r0, r0, r1
   13bdc:	andeq	r1, r0, r0, lsl #3
   13be0:	strdeq	r0, [r0], -r4
   13be4:	muleq	r0, ip, r9
   13be8:	ldrdeq	r1, [r1], -ip
   13bec:	strdeq	r1, [r0], -r0
   13bf0:	andeq	r1, r1, r0, ror r8
   13bf4:	andeq	r1, r1, r8, asr #16
   13bf8:	andeq	r0, r0, r8, ror #17
   13bfc:	andeq	r1, r1, r8, lsr #16
   13c00:	andeq	r0, r0, r8, lsr #17
   13c04:	andeq	r1, r1, r8, ror #15
   13c08:	andeq	r0, r0, r0, asr r8
   13c0c:	muleq	r1, r0, r7
   13c10:	andeq	r0, r0, r4, lsr #31
   13c14:	andeq	r1, r1, r0, lsl #14
   13c18:	ldrdeq	r1, [r1], -r8
   13c1c:	andeq	r1, r1, r0, asr #13
   13c20:	andeq	r0, r0, r0, asr #14
   13c24:	andeq	r1, r1, r0, lsl #13

00013c28 <getopt@@Base>:
   13c28:	push	{lr}		; (str lr, [sp, #-4]!)
   13c2c:	sub	sp, sp, #12
   13c30:	mov	r3, #0
   13c34:	str	r3, [sp, #4]
   13c38:	str	r3, [sp]
   13c3c:	bl	13374 <Mat_VarReadNextInfo@plt+0x234c>
   13c40:	add	sp, sp, #12
   13c44:	pop	{pc}		; (ldr pc, [sp], #4)

00013c48 <getopt_long@@Base>:
   13c48:	push	{lr}		; (str lr, [sp, #-4]!)
   13c4c:	sub	sp, sp, #12
   13c50:	mov	ip, #1
   13c54:	str	ip, [sp, #4]
   13c58:	ldr	ip, [sp, #16]
   13c5c:	str	ip, [sp]
   13c60:	bl	13374 <Mat_VarReadNextInfo@plt+0x234c>
   13c64:	add	sp, sp, #12
   13c68:	pop	{pc}		; (ldr pc, [sp], #4)

00013c6c <getopt_long_only@@Base>:
   13c6c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c70:	sub	sp, sp, #12
   13c74:	mov	ip, #5
   13c78:	str	ip, [sp, #4]
   13c7c:	ldr	ip, [sp, #16]
   13c80:	str	ip, [sp]
   13c84:	bl	13374 <Mat_VarReadNextInfo@plt+0x234c>
   13c88:	add	sp, sp, #12
   13c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c90:	subs	r2, r1, #1
   13c94:	bxeq	lr
   13c98:	bcc	13e70 <getopt_long_only@@Base+0x204>
   13c9c:	cmp	r0, r1
   13ca0:	bls	13e54 <getopt_long_only@@Base+0x1e8>
   13ca4:	tst	r1, r2
   13ca8:	beq	13e60 <getopt_long_only@@Base+0x1f4>
   13cac:	clz	r3, r0
   13cb0:	clz	r2, r1
   13cb4:	sub	r3, r2, r3
   13cb8:	rsbs	r3, r3, #31
   13cbc:	addne	r3, r3, r3, lsl #1
   13cc0:	mov	r2, #0
   13cc4:	addne	pc, pc, r3, lsl #2
   13cc8:	nop			; (mov r0, r0)
   13ccc:	cmp	r0, r1, lsl #31
   13cd0:	adc	r2, r2, r2
   13cd4:	subcs	r0, r0, r1, lsl #31
   13cd8:	cmp	r0, r1, lsl #30
   13cdc:	adc	r2, r2, r2
   13ce0:	subcs	r0, r0, r1, lsl #30
   13ce4:	cmp	r0, r1, lsl #29
   13ce8:	adc	r2, r2, r2
   13cec:	subcs	r0, r0, r1, lsl #29
   13cf0:	cmp	r0, r1, lsl #28
   13cf4:	adc	r2, r2, r2
   13cf8:	subcs	r0, r0, r1, lsl #28
   13cfc:	cmp	r0, r1, lsl #27
   13d00:	adc	r2, r2, r2
   13d04:	subcs	r0, r0, r1, lsl #27
   13d08:	cmp	r0, r1, lsl #26
   13d0c:	adc	r2, r2, r2
   13d10:	subcs	r0, r0, r1, lsl #26
   13d14:	cmp	r0, r1, lsl #25
   13d18:	adc	r2, r2, r2
   13d1c:	subcs	r0, r0, r1, lsl #25
   13d20:	cmp	r0, r1, lsl #24
   13d24:	adc	r2, r2, r2
   13d28:	subcs	r0, r0, r1, lsl #24
   13d2c:	cmp	r0, r1, lsl #23
   13d30:	adc	r2, r2, r2
   13d34:	subcs	r0, r0, r1, lsl #23
   13d38:	cmp	r0, r1, lsl #22
   13d3c:	adc	r2, r2, r2
   13d40:	subcs	r0, r0, r1, lsl #22
   13d44:	cmp	r0, r1, lsl #21
   13d48:	adc	r2, r2, r2
   13d4c:	subcs	r0, r0, r1, lsl #21
   13d50:	cmp	r0, r1, lsl #20
   13d54:	adc	r2, r2, r2
   13d58:	subcs	r0, r0, r1, lsl #20
   13d5c:	cmp	r0, r1, lsl #19
   13d60:	adc	r2, r2, r2
   13d64:	subcs	r0, r0, r1, lsl #19
   13d68:	cmp	r0, r1, lsl #18
   13d6c:	adc	r2, r2, r2
   13d70:	subcs	r0, r0, r1, lsl #18
   13d74:	cmp	r0, r1, lsl #17
   13d78:	adc	r2, r2, r2
   13d7c:	subcs	r0, r0, r1, lsl #17
   13d80:	cmp	r0, r1, lsl #16
   13d84:	adc	r2, r2, r2
   13d88:	subcs	r0, r0, r1, lsl #16
   13d8c:	cmp	r0, r1, lsl #15
   13d90:	adc	r2, r2, r2
   13d94:	subcs	r0, r0, r1, lsl #15
   13d98:	cmp	r0, r1, lsl #14
   13d9c:	adc	r2, r2, r2
   13da0:	subcs	r0, r0, r1, lsl #14
   13da4:	cmp	r0, r1, lsl #13
   13da8:	adc	r2, r2, r2
   13dac:	subcs	r0, r0, r1, lsl #13
   13db0:	cmp	r0, r1, lsl #12
   13db4:	adc	r2, r2, r2
   13db8:	subcs	r0, r0, r1, lsl #12
   13dbc:	cmp	r0, r1, lsl #11
   13dc0:	adc	r2, r2, r2
   13dc4:	subcs	r0, r0, r1, lsl #11
   13dc8:	cmp	r0, r1, lsl #10
   13dcc:	adc	r2, r2, r2
   13dd0:	subcs	r0, r0, r1, lsl #10
   13dd4:	cmp	r0, r1, lsl #9
   13dd8:	adc	r2, r2, r2
   13ddc:	subcs	r0, r0, r1, lsl #9
   13de0:	cmp	r0, r1, lsl #8
   13de4:	adc	r2, r2, r2
   13de8:	subcs	r0, r0, r1, lsl #8
   13dec:	cmp	r0, r1, lsl #7
   13df0:	adc	r2, r2, r2
   13df4:	subcs	r0, r0, r1, lsl #7
   13df8:	cmp	r0, r1, lsl #6
   13dfc:	adc	r2, r2, r2
   13e00:	subcs	r0, r0, r1, lsl #6
   13e04:	cmp	r0, r1, lsl #5
   13e08:	adc	r2, r2, r2
   13e0c:	subcs	r0, r0, r1, lsl #5
   13e10:	cmp	r0, r1, lsl #4
   13e14:	adc	r2, r2, r2
   13e18:	subcs	r0, r0, r1, lsl #4
   13e1c:	cmp	r0, r1, lsl #3
   13e20:	adc	r2, r2, r2
   13e24:	subcs	r0, r0, r1, lsl #3
   13e28:	cmp	r0, r1, lsl #2
   13e2c:	adc	r2, r2, r2
   13e30:	subcs	r0, r0, r1, lsl #2
   13e34:	cmp	r0, r1, lsl #1
   13e38:	adc	r2, r2, r2
   13e3c:	subcs	r0, r0, r1, lsl #1
   13e40:	cmp	r0, r1
   13e44:	adc	r2, r2, r2
   13e48:	subcs	r0, r0, r1
   13e4c:	mov	r0, r2
   13e50:	bx	lr
   13e54:	moveq	r0, #1
   13e58:	movne	r0, #0
   13e5c:	bx	lr
   13e60:	clz	r2, r1
   13e64:	rsb	r2, r2, #31
   13e68:	lsr	r0, r0, r2
   13e6c:	bx	lr
   13e70:	cmp	r0, #0
   13e74:	mvnne	r0, #0
   13e78:	b	140dc <getopt_long_only@@Base+0x470>
   13e7c:	cmp	r1, #0
   13e80:	beq	13e70 <getopt_long_only@@Base+0x204>
   13e84:	push	{r0, r1, lr}
   13e88:	bl	13c90 <getopt_long_only@@Base+0x24>
   13e8c:	pop	{r1, r2, lr}
   13e90:	mul	r3, r2, r0
   13e94:	sub	r1, r1, r3
   13e98:	bx	lr
   13e9c:	cmp	r1, #0
   13ea0:	beq	140ac <getopt_long_only@@Base+0x440>
   13ea4:	eor	ip, r0, r1
   13ea8:	rsbmi	r1, r1, #0
   13eac:	subs	r2, r1, #1
   13eb0:	beq	14078 <getopt_long_only@@Base+0x40c>
   13eb4:	movs	r3, r0
   13eb8:	rsbmi	r3, r0, #0
   13ebc:	cmp	r3, r1
   13ec0:	bls	14084 <getopt_long_only@@Base+0x418>
   13ec4:	tst	r1, r2
   13ec8:	beq	14094 <getopt_long_only@@Base+0x428>
   13ecc:	clz	r2, r3
   13ed0:	clz	r0, r1
   13ed4:	sub	r2, r0, r2
   13ed8:	rsbs	r2, r2, #31
   13edc:	addne	r2, r2, r2, lsl #1
   13ee0:	mov	r0, #0
   13ee4:	addne	pc, pc, r2, lsl #2
   13ee8:	nop			; (mov r0, r0)
   13eec:	cmp	r3, r1, lsl #31
   13ef0:	adc	r0, r0, r0
   13ef4:	subcs	r3, r3, r1, lsl #31
   13ef8:	cmp	r3, r1, lsl #30
   13efc:	adc	r0, r0, r0
   13f00:	subcs	r3, r3, r1, lsl #30
   13f04:	cmp	r3, r1, lsl #29
   13f08:	adc	r0, r0, r0
   13f0c:	subcs	r3, r3, r1, lsl #29
   13f10:	cmp	r3, r1, lsl #28
   13f14:	adc	r0, r0, r0
   13f18:	subcs	r3, r3, r1, lsl #28
   13f1c:	cmp	r3, r1, lsl #27
   13f20:	adc	r0, r0, r0
   13f24:	subcs	r3, r3, r1, lsl #27
   13f28:	cmp	r3, r1, lsl #26
   13f2c:	adc	r0, r0, r0
   13f30:	subcs	r3, r3, r1, lsl #26
   13f34:	cmp	r3, r1, lsl #25
   13f38:	adc	r0, r0, r0
   13f3c:	subcs	r3, r3, r1, lsl #25
   13f40:	cmp	r3, r1, lsl #24
   13f44:	adc	r0, r0, r0
   13f48:	subcs	r3, r3, r1, lsl #24
   13f4c:	cmp	r3, r1, lsl #23
   13f50:	adc	r0, r0, r0
   13f54:	subcs	r3, r3, r1, lsl #23
   13f58:	cmp	r3, r1, lsl #22
   13f5c:	adc	r0, r0, r0
   13f60:	subcs	r3, r3, r1, lsl #22
   13f64:	cmp	r3, r1, lsl #21
   13f68:	adc	r0, r0, r0
   13f6c:	subcs	r3, r3, r1, lsl #21
   13f70:	cmp	r3, r1, lsl #20
   13f74:	adc	r0, r0, r0
   13f78:	subcs	r3, r3, r1, lsl #20
   13f7c:	cmp	r3, r1, lsl #19
   13f80:	adc	r0, r0, r0
   13f84:	subcs	r3, r3, r1, lsl #19
   13f88:	cmp	r3, r1, lsl #18
   13f8c:	adc	r0, r0, r0
   13f90:	subcs	r3, r3, r1, lsl #18
   13f94:	cmp	r3, r1, lsl #17
   13f98:	adc	r0, r0, r0
   13f9c:	subcs	r3, r3, r1, lsl #17
   13fa0:	cmp	r3, r1, lsl #16
   13fa4:	adc	r0, r0, r0
   13fa8:	subcs	r3, r3, r1, lsl #16
   13fac:	cmp	r3, r1, lsl #15
   13fb0:	adc	r0, r0, r0
   13fb4:	subcs	r3, r3, r1, lsl #15
   13fb8:	cmp	r3, r1, lsl #14
   13fbc:	adc	r0, r0, r0
   13fc0:	subcs	r3, r3, r1, lsl #14
   13fc4:	cmp	r3, r1, lsl #13
   13fc8:	adc	r0, r0, r0
   13fcc:	subcs	r3, r3, r1, lsl #13
   13fd0:	cmp	r3, r1, lsl #12
   13fd4:	adc	r0, r0, r0
   13fd8:	subcs	r3, r3, r1, lsl #12
   13fdc:	cmp	r3, r1, lsl #11
   13fe0:	adc	r0, r0, r0
   13fe4:	subcs	r3, r3, r1, lsl #11
   13fe8:	cmp	r3, r1, lsl #10
   13fec:	adc	r0, r0, r0
   13ff0:	subcs	r3, r3, r1, lsl #10
   13ff4:	cmp	r3, r1, lsl #9
   13ff8:	adc	r0, r0, r0
   13ffc:	subcs	r3, r3, r1, lsl #9
   14000:	cmp	r3, r1, lsl #8
   14004:	adc	r0, r0, r0
   14008:	subcs	r3, r3, r1, lsl #8
   1400c:	cmp	r3, r1, lsl #7
   14010:	adc	r0, r0, r0
   14014:	subcs	r3, r3, r1, lsl #7
   14018:	cmp	r3, r1, lsl #6
   1401c:	adc	r0, r0, r0
   14020:	subcs	r3, r3, r1, lsl #6
   14024:	cmp	r3, r1, lsl #5
   14028:	adc	r0, r0, r0
   1402c:	subcs	r3, r3, r1, lsl #5
   14030:	cmp	r3, r1, lsl #4
   14034:	adc	r0, r0, r0
   14038:	subcs	r3, r3, r1, lsl #4
   1403c:	cmp	r3, r1, lsl #3
   14040:	adc	r0, r0, r0
   14044:	subcs	r3, r3, r1, lsl #3
   14048:	cmp	r3, r1, lsl #2
   1404c:	adc	r0, r0, r0
   14050:	subcs	r3, r3, r1, lsl #2
   14054:	cmp	r3, r1, lsl #1
   14058:	adc	r0, r0, r0
   1405c:	subcs	r3, r3, r1, lsl #1
   14060:	cmp	r3, r1
   14064:	adc	r0, r0, r0
   14068:	subcs	r3, r3, r1
   1406c:	cmp	ip, #0
   14070:	rsbmi	r0, r0, #0
   14074:	bx	lr
   14078:	teq	ip, r0
   1407c:	rsbmi	r0, r0, #0
   14080:	bx	lr
   14084:	movcc	r0, #0
   14088:	asreq	r0, ip, #31
   1408c:	orreq	r0, r0, #1
   14090:	bx	lr
   14094:	clz	r2, r1
   14098:	rsb	r2, r2, #31
   1409c:	cmp	ip, #0
   140a0:	lsr	r0, r3, r2
   140a4:	rsbmi	r0, r0, #0
   140a8:	bx	lr
   140ac:	cmp	r0, #0
   140b0:	mvngt	r0, #-2147483648	; 0x80000000
   140b4:	movlt	r0, #-2147483648	; 0x80000000
   140b8:	b	140dc <getopt_long_only@@Base+0x470>
   140bc:	cmp	r1, #0
   140c0:	beq	140ac <getopt_long_only@@Base+0x440>
   140c4:	push	{r0, r1, lr}
   140c8:	bl	13ea4 <getopt_long_only@@Base+0x238>
   140cc:	pop	{r1, r2, lr}
   140d0:	mul	r3, r2, r0
   140d4:	sub	r1, r1, r3
   140d8:	bx	lr
   140dc:	push	{r1, lr}
   140e0:	mov	r0, #8
   140e4:	bl	10dc4 <raise@plt>
   140e8:	pop	{r1, pc}
   140ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140f0:	mov	r7, r0
   140f4:	ldr	r6, [pc, #72]	; 14144 <getopt_long_only@@Base+0x4d8>
   140f8:	ldr	r5, [pc, #72]	; 14148 <getopt_long_only@@Base+0x4dc>
   140fc:	add	r6, pc, r6
   14100:	add	r5, pc, r5
   14104:	sub	r6, r6, r5
   14108:	mov	r8, r1
   1410c:	mov	r9, r2
   14110:	bl	10d8c <Mat_VarGetNumberOfFields@plt-0x20>
   14114:	asrs	r6, r6, #2
   14118:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1411c:	mov	r4, #0
   14120:	add	r4, r4, #1
   14124:	ldr	r3, [r5], #4
   14128:	mov	r2, r9
   1412c:	mov	r1, r8
   14130:	mov	r0, r7
   14134:	blx	r3
   14138:	cmp	r6, r4
   1413c:	bne	14120 <getopt_long_only@@Base+0x4b4>
   14140:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14144:	strdeq	r0, [r1], -r4
   14148:	andeq	r0, r1, ip, ror #27
   1414c:	bx	lr

Disassembly of section .fini:

00014150 <.fini>:
   14150:	push	{r3, lr}
   14154:	pop	{r3, pc}
