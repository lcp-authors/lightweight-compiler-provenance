
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000ddc <_init>:
 ddc:	push	{r3, lr}
 de0:	bl	fdc <call_weak_fn>
 de4:	pop	{r3, pc}

Disassembly of section .plt:

00000de8 <.plt>:
 de8:	push	{lr}		; (str lr, [sp, #-4]!)
 dec:	ldr	lr, [pc, #4]	; df8 <.plt+0x10>
 df0:	add	lr, pc, lr
 df4:	ldr	pc, [lr, #8]!
 df8:	.word	0x0002f208

00000dfc <calloc@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #192512	; 0x2f000
 e04:	ldr	pc, [ip, #520]!	; 0x208

00000e08 <strcmp@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #192512	; 0x2f000
 e10:	ldr	pc, [ip, #512]!	; 0x200

00000e14 <__cxa_finalize@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #192512	; 0x2f000
 e1c:	ldr	pc, [ip, #504]!	; 0x1f8

00000e20 <printf@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #192512	; 0x2f000
 e28:	ldr	pc, [ip, #496]!	; 0x1f0

00000e2c <fopen@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #192512	; 0x2f000
 e34:	ldr	pc, [ip, #488]!	; 0x1e8

00000e38 <getprotobyname@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #192512	; 0x2f000
 e40:	ldr	pc, [ip, #480]!	; 0x1e0

00000e44 <longjmp@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #192512	; 0x2f000
 e4c:	ldr	pc, [ip, #472]!	; 0x1d8

00000e50 <_setjmp@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #192512	; 0x2f000
 e58:	ldr	pc, [ip, #464]!	; 0x1d0

00000e5c <free@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #192512	; 0x2f000
 e64:	ldr	pc, [ip, #456]!	; 0x1c8

00000e68 <getnetbyname@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #192512	; 0x2f000
 e70:	ldr	pc, [ip, #448]!	; 0x1c0

00000e74 <ferror@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #192512	; 0x2f000
 e7c:	ldr	pc, [ip, #440]!	; 0x1b8

00000e80 <memcpy@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #192512	; 0x2f000
 e88:	ldr	pc, [ip, #432]!	; 0x1b0

00000e8c <strdup@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #192512	; 0x2f000
 e94:	ldr	pc, [ip, #424]!	; 0x1a8

00000e98 <rewind@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #192512	; 0x2f000
 ea0:	ldr	pc, [ip, #416]!	; 0x1a0

00000ea4 <realloc@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #192512	; 0x2f000
 eac:	ldr	pc, [ip, #408]!	; 0x198

00000eb0 <fwrite@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #192512	; 0x2f000
 eb8:	ldr	pc, [ip, #400]!	; 0x190

00000ebc <fread@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #192512	; 0x2f000
 ec4:	ldr	pc, [ip, #392]!	; 0x188

00000ec8 <puts@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #192512	; 0x2f000
 ed0:	ldr	pc, [ip, #384]!	; 0x180

00000ed4 <malloc@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #192512	; 0x2f000
 edc:	ldr	pc, [ip, #376]!	; 0x178

00000ee0 <__gmon_start__@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #192512	; 0x2f000
 ee8:	ldr	pc, [ip, #368]!	; 0x170

00000eec <__ctype_b_loc@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #192512	; 0x2f000
 ef4:	ldr	pc, [ip, #360]!	; 0x168

00000ef8 <exit@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #192512	; 0x2f000
 f00:	ldr	pc, [ip, #352]!	; 0x160

00000f04 <strlen@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #192512	; 0x2f000
 f0c:	ldr	pc, [ip, #344]!	; 0x158

00000f10 <strchr@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #192512	; 0x2f000
 f18:	ldr	pc, [ip, #336]!	; 0x150

00000f1c <fprintf@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #192512	; 0x2f000
 f24:	ldr	pc, [ip, #328]!	; 0x148

00000f28 <__errno_location@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #192512	; 0x2f000
 f30:	ldr	pc, [ip, #320]!	; 0x140

00000f34 <getservbyname@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #192512	; 0x2f000
 f3c:	ldr	pc, [ip, #312]!	; 0x138

00000f40 <memset@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #192512	; 0x2f000
 f48:	ldr	pc, [ip, #304]!	; 0x130

00000f4c <putchar@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #192512	; 0x2f000
 f54:	ldr	pc, [ip, #296]!	; 0x128

00000f58 <strncpy@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #192512	; 0x2f000
 f60:	ldr	pc, [ip, #288]!	; 0x120

00000f64 <fileno@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #192512	; 0x2f000
 f6c:	ldr	pc, [ip, #280]!	; 0x118

00000f70 <sscanf@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #192512	; 0x2f000
 f78:	ldr	pc, [ip, #272]!	; 0x110

00000f7c <clearerr@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #192512	; 0x2f000
 f84:	ldr	pc, [ip, #264]!	; 0x108

00000f88 <vsnprintf@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #192512	; 0x2f000
 f90:	ldr	pc, [ip, #256]!	; 0x100

00000f94 <freeaddrinfo@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #192512	; 0x2f000
 f9c:	ldr	pc, [ip, #248]!	; 0xf8

00000fa0 <getaddrinfo@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #192512	; 0x2f000
 fa8:	ldr	pc, [ip, #240]!	; 0xf0

00000fac <gethostbyname@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #192512	; 0x2f000
 fb4:	ldr	pc, [ip, #232]!	; 0xe8

00000fb8 <isatty@plt>:
 fb8:	add	ip, pc, #0, 12
 fbc:	add	ip, ip, #192512	; 0x2f000
 fc0:	ldr	pc, [ip, #224]!	; 0xe0

00000fc4 <abort@plt>:
 fc4:	add	ip, pc, #0, 12
 fc8:	add	ip, ip, #192512	; 0x2f000
 fcc:	ldr	pc, [ip, #216]!	; 0xd8

00000fd0 <getc@plt>:
 fd0:	add	ip, pc, #0, 12
 fd4:	add	ip, ip, #192512	; 0x2f000
 fd8:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00000fdc <call_weak_fn>:
     fdc:	ldr	r3, [pc, #20]	; ff8 <call_weak_fn+0x1c>
     fe0:	ldr	r2, [pc, #20]	; ffc <call_weak_fn+0x20>
     fe4:	add	r3, pc, r3
     fe8:	ldr	r2, [r3, r2]
     fec:	cmp	r2, #0
     ff0:	bxeq	lr
     ff4:	b	ee0 <__gmon_start__@plt>
     ff8:	.word	0x0002f014
     ffc:	.word	0x000000bc

00001000 <deregister_tm_clones>:
    1000:	ldr	r0, [pc, #44]	; 1034 <deregister_tm_clones+0x34>
    1004:	ldr	r3, [pc, #44]	; 1038 <deregister_tm_clones+0x38>
    1008:	add	r0, pc, r0
    100c:	add	r3, pc, r3
    1010:	cmp	r3, r0
    1014:	ldr	r3, [pc, #32]	; 103c <deregister_tm_clones+0x3c>
    1018:	add	r3, pc, r3
    101c:	bxeq	lr
    1020:	ldr	r2, [pc, #24]	; 1040 <deregister_tm_clones+0x40>
    1024:	ldr	r3, [r3, r2]
    1028:	cmp	r3, #0
    102c:	bxeq	lr
    1030:	bx	r3
    1034:	.word	0x0002f2f0
    1038:	.word	0x0002f2ec
    103c:	.word	0x0002efe0
    1040:	.word	0x000000b0

00001044 <register_tm_clones>:
    1044:	ldr	r0, [pc, #56]	; 1084 <register_tm_clones+0x40>
    1048:	ldr	r3, [pc, #56]	; 1088 <register_tm_clones+0x44>
    104c:	add	r0, pc, r0
    1050:	add	r3, pc, r3
    1054:	sub	r1, r3, r0
    1058:	ldr	r3, [pc, #44]	; 108c <register_tm_clones+0x48>
    105c:	asr	r1, r1, #2
    1060:	add	r3, pc, r3
    1064:	add	r1, r1, r1, lsr #31
    1068:	asrs	r1, r1, #1
    106c:	bxeq	lr
    1070:	ldr	r2, [pc, #24]	; 1090 <register_tm_clones+0x4c>
    1074:	ldr	r3, [r3, r2]
    1078:	cmp	r3, #0
    107c:	bxeq	lr
    1080:	bx	r3
    1084:	.word	0x0002f2ac
    1088:	.word	0x0002f2a8
    108c:	.word	0x0002ef98
    1090:	.word	0x000000cc

00001094 <__do_global_dtors_aux>:
    1094:	ldr	r3, [pc, #76]	; 10e8 <__do_global_dtors_aux+0x54>
    1098:	ldr	r2, [pc, #76]	; 10ec <__do_global_dtors_aux+0x58>
    109c:	add	r3, pc, r3
    10a0:	add	r2, pc, r2
    10a4:	ldrb	r3, [r3]
    10a8:	cmp	r3, #0
    10ac:	bxne	lr
    10b0:	ldr	r3, [pc, #56]	; 10f0 <__do_global_dtors_aux+0x5c>
    10b4:	push	{r4, lr}
    10b8:	ldr	r3, [r2, r3]
    10bc:	cmp	r3, #0
    10c0:	beq	10d0 <__do_global_dtors_aux+0x3c>
    10c4:	ldr	r3, [pc, #40]	; 10f4 <__do_global_dtors_aux+0x60>
    10c8:	ldr	r0, [pc, r3]
    10cc:	bl	e14 <__cxa_finalize@plt>
    10d0:	bl	1000 <deregister_tm_clones>
    10d4:	ldr	r3, [pc, #28]	; 10f8 <__do_global_dtors_aux+0x64>
    10d8:	mov	r2, #1
    10dc:	add	r3, pc, r3
    10e0:	strb	r2, [r3]
    10e4:	pop	{r4, pc}
    10e8:	.word	0x0002f25c
    10ec:	.word	0x0002ef58
    10f0:	.word	0x000000ac
    10f4:	.word	0x0002f000
    10f8:	.word	0x0002f21c

000010fc <frame_dummy>:
    10fc:	b	1044 <register_tm_clones>

00001100 <sfbpf_filter>:
    1100:	push	{r4, r5, r6, r7, fp, lr}
    1104:	add	fp, sp, #16
    1108:	sub	sp, sp, #64	; 0x40
    110c:	cmp	r0, #0
    1110:	beq	1124 <sfbpf_filter+0x24>
    1114:	sub	ip, r0, #8
    1118:	mov	r4, #0
    111c:	mov	lr, #0
    1120:	b	114c <sfbpf_filter+0x4c>
    1124:	mvn	r0, #0
    1128:	sub	sp, fp, #16
    112c:	pop	{r4, r5, r6, r7, fp, pc}
    1130:	ldr	r4, [r5, #12]
    1134:	mov	r6, #10
    1138:	tst	r4, r0
    113c:	movweq	r6, #11
    1140:	ldrb	r4, [r5, r6]
    1144:	add	ip, ip, r4, lsl #3
    1148:	mov	r4, r0
    114c:	mov	r0, r4
    1150:	mov	r5, ip
    1154:	ldrh	r4, [ip, #8]!
    1158:	cmp	r4, #177	; 0xb1
    115c:	bhi	16b8 <sfbpf_filter+0x5b8>
    1160:	add	r6, pc, #8
    1164:	ldr	r7, [r6, r4, lsl #2]
    1168:	mov	r4, r2
    116c:	add	pc, r6, r7
    1170:	.word	0x000002c8
    1174:	.word	0x00000350
    1178:	.word	0x0000035c
    117c:	.word	0x00000370
    1180:	.word	0x00000384
    1184:	.word	0x00000390
    1188:	.word	0x00000530
    118c:	.word	0x00000318
    1190:	.word	0x00000548
    1194:	.word	0x00000548
    1198:	.word	0x00000548
    119c:	.word	0x00000548
    11a0:	.word	0x00000398
    11a4:	.word	0x00000548
    11a8:	.word	0x00000548
    11ac:	.word	0x00000548
    11b0:	.word	0x00000548
    11b4:	.word	0x00000548
    11b8:	.word	0x00000548
    11bc:	.word	0x00000548
    11c0:	.word	0x000003a0
    11c4:	.word	0x000003ac
    11c8:	.word	0x00000534
    11cc:	.word	0x00000548
    11d0:	.word	0x00000548
    11d4:	.word	0x00000548
    11d8:	.word	0x00000548
    11dc:	.word	0x00000548
    11e0:	.word	0x00000324
    11e4:	.word	0x000003c0
    11e8:	.word	0x00000548
    11ec:	.word	0x00000548
    11f0:	.word	0x000003d4
    11f4:	.word	0x00000548
    11f8:	.word	0x00000548
    11fc:	.word	0x00000548
    1200:	.word	0x000003dc
    1204:	.word	0x000003e8
    1208:	.word	0x00000548
    120c:	.word	0x00000548
    1210:	.word	0x000003fc
    1214:	.word	0x00000548
    1218:	.word	0x00000548
    121c:	.word	0x00000548
    1220:	.word	0x00000404
    1224:	.word	0x0000040c
    1228:	.word	0x00000548
    122c:	.word	0x00000548
    1230:	.word	0x00000420
    1234:	.word	0x00000548
    1238:	.word	0x00000548
    123c:	.word	0x00000548
    1240:	.word	0x00000434
    1244:	.word	0x00000440
    1248:	.word	0x00000548
    124c:	.word	0x00000548
    1250:	.word	0x00000548
    1254:	.word	0x00000548
    1258:	.word	0x00000548
    125c:	.word	0x00000548
    1260:	.word	0x00000454
    1264:	.word	0x00000464
    1268:	.word	0x00000548
    126c:	.word	0x00000548
    1270:	.word	0x00000478
    1274:	.word	0x00000548
    1278:	.word	0x00000548
    127c:	.word	0x00000548
    1280:	.word	0x00000518
    1284:	.word	0xffffffc0
    1288:	.word	0x00000548
    128c:	.word	0x00000548
    1290:	.word	0x00000498
    1294:	.word	0x00000548
    1298:	.word	0x00000548
    129c:	.word	0x00000548
    12a0:	.word	0x000004c0
    12a4:	.word	0x000004c8
    12a8:	.word	0x00000548
    12ac:	.word	0x00000548
    12b0:	.word	0x000004dc
    12b4:	.word	0x00000548
    12b8:	.word	0x00000548
    12bc:	.word	0x00000548
    12c0:	.word	0x000004f4
    12c4:	.word	0x00000548
    12c8:	.word	0x00000548
    12cc:	.word	0x00000548
    12d0:	.word	0x00000548
    12d4:	.word	0x00000548
    12d8:	.word	0x00000548
    12dc:	.word	0x00000548
    12e0:	.word	0x0000032c
    12e4:	.word	0x00000548
    12e8:	.word	0x00000548
    12ec:	.word	0x00000548
    12f0:	.word	0x00000334
    12f4:	.word	0x000002d0
    12f8:	.word	0x00000548
    12fc:	.word	0x00000548
    1300:	.word	0x000002e4
    1304:	.word	0x00000548
    1308:	.word	0x00000548
    130c:	.word	0x00000548
    1310:	.word	0x00000548
    1314:	.word	0x00000548
    1318:	.word	0x00000548
    131c:	.word	0x00000548
    1320:	.word	0x000002f0
    1324:	.word	0x00000548
    1328:	.word	0x00000548
    132c:	.word	0x00000548
    1330:	.word	0x00000548
    1334:	.word	0x00000548
    1338:	.word	0x00000548
    133c:	.word	0x00000548
    1340:	.word	0x00000524
    1344:	.word	0x00000548
    1348:	.word	0x00000548
    134c:	.word	0x00000548
    1350:	.word	0x00000548
    1354:	.word	0x00000548
    1358:	.word	0x00000548
    135c:	.word	0x00000548
    1360:	.word	0x00000500
    1364:	.word	0x00000548
    1368:	.word	0x00000548
    136c:	.word	0x00000548
    1370:	.word	0xffffffdc
    1374:	.word	0x00000344
    1378:	.word	0x00000548
    137c:	.word	0x00000548
    1380:	.word	0x00000508
    1384:	.word	0x00000548
    1388:	.word	0x00000548
    138c:	.word	0x00000510
    1390:	.word	0x00000548
    1394:	.word	0x00000548
    1398:	.word	0x00000548
    139c:	.word	0x00000548
    13a0:	.word	0x00000548
    13a4:	.word	0x00000548
    13a8:	.word	0x00000548
    13ac:	.word	0x00000548
    13b0:	.word	0x00000548
    13b4:	.word	0x00000548
    13b8:	.word	0x00000548
    13bc:	.word	0x00000548
    13c0:	.word	0x00000548
    13c4:	.word	0x00000548
    13c8:	.word	0x00000548
    13cc:	.word	0x00000548
    13d0:	.word	0x00000548
    13d4:	.word	0x00000548
    13d8:	.word	0x00000548
    13dc:	.word	0x00000548
    13e0:	.word	0x00000548
    13e4:	.word	0x00000548
    13e8:	.word	0x00000548
    13ec:	.word	0x00000548
    13f0:	.word	0x00000548
    13f4:	.word	0x00000548
    13f8:	.word	0x00000548
    13fc:	.word	0x00000548
    1400:	.word	0x00000548
    1404:	.word	0x00000548
    1408:	.word	0x00000548
    140c:	.word	0x00000548
    1410:	.word	0x00000548
    1414:	.word	0x00000548
    1418:	.word	0x00000548
    141c:	.word	0x00000548
    1420:	.word	0x00000548
    1424:	.word	0x00000548
    1428:	.word	0x00000548
    142c:	.word	0x00000548
    1430:	.word	0x00000548
    1434:	.word	0x000002f8
    1438:	ldr	r4, [r5, #12]
    143c:	b	114c <sfbpf_filter+0x4c>
    1440:	ldr	r7, [r5, #12]
    1444:	mov	r6, sp
    1448:	ldr	lr, [r6, r7, lsl #2]
    144c:	mov	r4, r0
    1450:	b	114c <sfbpf_filter+0x4c>
    1454:	ldr	r4, [r5, #12]
    1458:	lsl	r4, r0, r4
    145c:	b	114c <sfbpf_filter+0x4c>
    1460:	lsl	r4, r0, lr
    1464:	b	114c <sfbpf_filter+0x4c>
    1468:	ldr	r5, [r5, #12]
    146c:	cmp	r5, r3
    1470:	bcs	16ac <sfbpf_filter+0x5ac>
    1474:	ldrb	r7, [r1, r5]
    1478:	mov	r6, #60	; 0x3c
    147c:	and	lr, r6, r7, lsl #2
    1480:	mov	r4, r0
    1484:	b	114c <sfbpf_filter+0x4c>
    1488:	mov	r4, r0
    148c:	mov	lr, r0
    1490:	b	114c <sfbpf_filter+0x4c>
    1494:	sub	r4, r0, lr
    1498:	b	114c <sfbpf_filter+0x4c>
    149c:	and	r4, lr, r0
    14a0:	b	114c <sfbpf_filter+0x4c>
    14a4:	ldr	r0, [r5, #12]
    14a8:	mov	r4, sp
    14ac:	ldr	r4, [r4, r0, lsl #2]
    14b0:	b	114c <sfbpf_filter+0x4c>
    14b4:	mov	r4, r0
    14b8:	mov	lr, r2
    14bc:	b	114c <sfbpf_filter+0x4c>
    14c0:	ldr	lr, [r5, #12]
    14c4:	mov	r4, r0
    14c8:	b	114c <sfbpf_filter+0x4c>
    14cc:	ldr	r4, [r5, #12]
    14d0:	mov	r5, sp
    14d4:	str	r0, [r5, r4, lsl #2]
    14d8:	mov	r4, r0
    14dc:	b	114c <sfbpf_filter+0x4c>
    14e0:	ldr	r4, [r5, #12]
    14e4:	mov	r5, sp
    14e8:	str	lr, [r5, r4, lsl #2]
    14ec:	mov	r4, r0
    14f0:	b	114c <sfbpf_filter+0x4c>
    14f4:	ldr	r4, [r5, #12]
    14f8:	add	r4, r4, r0
    14fc:	b	114c <sfbpf_filter+0x4c>
    1500:	ldr	r4, [r5, #12]
    1504:	b	1144 <sfbpf_filter+0x44>
    1508:	add	r4, lr, r0
    150c:	b	114c <sfbpf_filter+0x4c>
    1510:	ldr	r4, [r5, #12]
    1514:	sub	r4, r0, r4
    1518:	b	114c <sfbpf_filter+0x4c>
    151c:	ldr	r4, [r5, #12]
    1520:	mov	r6, #11
    1524:	cmp	r0, r4
    1528:	movweq	r6, #10
    152c:	b	1140 <sfbpf_filter+0x40>
    1530:	mov	r4, #11
    1534:	cmp	r0, lr
    1538:	movweq	r4, #10
    153c:	ldrb	r4, [r5, r4]
    1540:	b	1144 <sfbpf_filter+0x44>
    1544:	ldr	r0, [r5, #12]
    1548:	b	15f0 <sfbpf_filter+0x4f0>
    154c:	ldr	r4, [r5, #12]
    1550:	mul	r4, r4, r0
    1554:	b	114c <sfbpf_filter+0x4c>
    1558:	ldr	r4, [r5, #12]
    155c:	mov	r6, #11
    1560:	cmp	r0, r4
    1564:	movwhi	r6, #10
    1568:	b	1140 <sfbpf_filter+0x40>
    156c:	ldr	r0, [r5, #12]
    1570:	b	1610 <sfbpf_filter+0x510>
    1574:	mul	r4, lr, r0
    1578:	b	114c <sfbpf_filter+0x4c>
    157c:	mov	r4, #11
    1580:	cmp	r0, lr
    1584:	movwhi	r4, #10
    1588:	ldrb	r4, [r5, r4]
    158c:	b	1144 <sfbpf_filter+0x44>
    1590:	ldr	r0, [r5, #12]
    1594:	cmp	r0, r3
    1598:	bcs	16ac <sfbpf_filter+0x5ac>
    159c:	ldrb	r4, [r1, r0]
    15a0:	b	114c <sfbpf_filter+0x4c>
    15a4:	ldr	r4, [r5, #12]
    15a8:	udiv	r4, r0, r4
    15ac:	b	114c <sfbpf_filter+0x4c>
    15b0:	ldr	r4, [r5, #12]
    15b4:	mov	r6, #10
    15b8:	cmp	r0, r4
    15bc:	movwcc	r6, #11
    15c0:	b	1140 <sfbpf_filter+0x40>
    15c4:	cmp	lr, #0
    15c8:	beq	16ac <sfbpf_filter+0x5ac>
    15cc:	udiv	r4, r0, lr
    15d0:	b	114c <sfbpf_filter+0x4c>
    15d4:	mov	r4, #10
    15d8:	cmp	r0, lr
    15dc:	movwcc	r4, #11
    15e0:	ldrb	r4, [r5, r4]
    15e4:	b	1144 <sfbpf_filter+0x44>
    15e8:	ldr	r0, [r5, #12]
    15ec:	add	r0, r0, lr
    15f0:	add	r4, r0, #4
    15f4:	cmp	r4, r3
    15f8:	bhi	16ac <sfbpf_filter+0x5ac>
    15fc:	ldr	r0, [r1, r0]
    1600:	rev	r4, r0
    1604:	b	114c <sfbpf_filter+0x4c>
    1608:	ldr	r0, [r5, #12]
    160c:	add	r0, r0, lr
    1610:	add	r4, r0, #2
    1614:	cmp	r4, r3
    1618:	bhi	16ac <sfbpf_filter+0x5ac>
    161c:	mov	r4, r1
    1620:	ldrb	r0, [r4, r0]!
    1624:	ldrb	r4, [r4, #1]
    1628:	orr	r4, r4, r0, lsl #8
    162c:	b	114c <sfbpf_filter+0x4c>
    1630:	orr	r4, lr, r0
    1634:	b	114c <sfbpf_filter+0x4c>
    1638:	mov	r4, #10
    163c:	tst	lr, r0
    1640:	movweq	r4, #11
    1644:	ldrb	r4, [r5, r4]
    1648:	b	1144 <sfbpf_filter+0x44>
    164c:	ldr	r0, [r5, #12]
    1650:	add	r0, r0, lr
    1654:	cmp	r0, r3
    1658:	bcs	16ac <sfbpf_filter+0x5ac>
    165c:	ldrb	r4, [r1, r0]
    1660:	b	114c <sfbpf_filter+0x4c>
    1664:	ldr	r4, [r5, #12]
    1668:	and	r4, r4, r0
    166c:	b	114c <sfbpf_filter+0x4c>
    1670:	lsr	r4, r0, lr
    1674:	b	114c <sfbpf_filter+0x4c>
    1678:	rsb	r4, r0, #0
    167c:	b	114c <sfbpf_filter+0x4c>
    1680:	mov	r4, lr
    1684:	b	114c <sfbpf_filter+0x4c>
    1688:	ldr	r4, [r5, #12]
    168c:	orr	r4, r4, r0
    1690:	b	114c <sfbpf_filter+0x4c>
    1694:	ldr	r4, [r5, #12]
    1698:	lsr	r4, r0, r4
    169c:	b	114c <sfbpf_filter+0x4c>
    16a0:	ldr	r0, [r5, #12]
    16a4:	sub	sp, fp, #16
    16a8:	pop	{r4, r5, r6, r7, fp, pc}
    16ac:	mov	r0, #0
    16b0:	sub	sp, fp, #16
    16b4:	pop	{r4, r5, r6, r7, fp, pc}
    16b8:	bl	fc4 <abort@plt>

000016bc <sfbpf_validate>:
    16bc:	push	{r4, r5, fp, lr}
    16c0:	add	fp, sp, #8
    16c4:	cmp	r1, #1
    16c8:	blt	17e8 <sfbpf_validate+0x12c>
    16cc:	mov	lr, #0
    16d0:	mov	r2, #0
    16d4:	b	16f8 <sfbpf_validate+0x3c>
    16d8:	add	r3, r0, r2, lsl #3
    16dc:	ldr	r3, [r3, #4]
    16e0:	cmp	r3, #15
    16e4:	bhi	17e8 <sfbpf_validate+0x12c>
    16e8:	add	lr, lr, #8
    16ec:	add	r2, r2, #1
    16f0:	cmp	r1, r2
    16f4:	beq	17f4 <sfbpf_validate+0x138>
    16f8:	add	r3, r0, lr
    16fc:	ldrh	r5, [r3]
    1700:	and	r4, r5, #7
    1704:	add	r3, pc, #4
    1708:	ldr	r4, [r3, r4, lsl #2]
    170c:	add	pc, r3, r4
    1710:	.word	0x00000020
    1714:	.word	0x00000020
    1718:	.word	0xffffffc8
    171c:	.word	0xffffffc8
    1720:	.word	0x0000004c
    1724:	.word	0x0000007c
    1728:	.word	0xffffffd8
    172c:	.word	0xffffffd8
    1730:	ubfx	r3, r5, #5, #3
    1734:	mov	ip, #0
    1738:	cmp	r3, #5
    173c:	bhi	17e0 <sfbpf_validate+0x124>
    1740:	cmp	r3, #3
    1744:	bne	16e8 <sfbpf_validate+0x2c>
    1748:	add	r3, r0, r2, lsl #3
    174c:	ldr	r3, [r3, #4]
    1750:	cmp	r3, #15
    1754:	bls	16e8 <sfbpf_validate+0x2c>
    1758:	b	17e0 <sfbpf_validate+0x124>
    175c:	ubfx	r4, r5, #4, #4
    1760:	mov	ip, #0
    1764:	cmp	r4, #8
    1768:	bhi	17e0 <sfbpf_validate+0x124>
    176c:	cmp	r4, #3
    1770:	tsteq	r5, #24
    1774:	bne	16e8 <sfbpf_validate+0x2c>
    1778:	add	r3, r0, r2, lsl #3
    177c:	ldr	r3, [r3, #4]
    1780:	cmp	r3, #0
    1784:	bne	16e8 <sfbpf_validate+0x2c>
    1788:	b	17e0 <sfbpf_validate+0x124>
    178c:	ubfx	r3, r5, #4, #4
    1790:	sub	r4, r3, #1
    1794:	mov	ip, #0
    1798:	cmp	r4, #4
    179c:	bcs	17c0 <sfbpf_validate+0x104>
    17a0:	add	r3, r0, r2, lsl #3
    17a4:	ldrb	r4, [r3, #2]
    17a8:	add	r4, r2, r4
    17ac:	add	r4, r4, #1
    17b0:	cmp	r4, r1
    17b4:	bcs	17e0 <sfbpf_validate+0x124>
    17b8:	ldrb	r3, [r3, #3]
    17bc:	b	17d0 <sfbpf_validate+0x114>
    17c0:	cmp	r3, #0
    17c4:	bne	17e0 <sfbpf_validate+0x124>
    17c8:	add	r3, r0, r2, lsl #3
    17cc:	ldr	r3, [r3, #4]
    17d0:	add	r3, r2, r3
    17d4:	add	r3, r3, #1
    17d8:	cmp	r3, r1
    17dc:	bcc	16e8 <sfbpf_validate+0x2c>
    17e0:	mov	r0, ip
    17e4:	pop	{r4, r5, fp, pc}
    17e8:	mov	ip, #0
    17ec:	mov	r0, ip
    17f0:	pop	{r4, r5, fp, pc}
    17f4:	add	r0, r0, r1, lsl #3
    17f8:	ldrh	r0, [r0, #-8]
    17fc:	and	r0, r0, #7
    1800:	sub	r0, r0, #6
    1804:	clz	r0, r0
    1808:	lsr	ip, r0, #5
    180c:	mov	r0, ip
    1810:	pop	{r4, r5, fp, pc}

00001814 <sfbpf_print>:
    1814:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1818:	add	fp, sp, #24
    181c:	mov	r9, r1
    1820:	mov	r5, r0
    1824:	ldr	r0, [pc, #104]	; 1894 <sfbpf_print+0x80>
    1828:	add	r0, pc, r0
    182c:	bl	ec8 <puts@plt>
    1830:	ldr	r0, [r5]
    1834:	cmp	r0, #0
    1838:	beq	1890 <sfbpf_print+0x7c>
    183c:	mov	r6, #0
    1840:	ldr	r8, [pc, #80]	; 1898 <sfbpf_print+0x84>
    1844:	add	r8, pc, r8
    1848:	mov	r7, #0
    184c:	b	186c <sfbpf_print+0x58>
    1850:	mov	r1, r7
    1854:	bl	1a1c <pretty_print_instruction>
    1858:	add	r6, r6, #8
    185c:	add	r7, r7, #1
    1860:	ldr	r0, [r5]
    1864:	cmp	r7, r0
    1868:	bcs	1890 <sfbpf_print+0x7c>
    186c:	ldr	r4, [r5, #4]
    1870:	mov	r0, r8
    1874:	mov	r1, r7
    1878:	bl	e20 <printf@plt>
    187c:	add	r0, r4, r6
    1880:	cmp	r9, #0
    1884:	beq	1850 <sfbpf_print+0x3c>
    1888:	bl	189c <print_instruction>
    188c:	b	1858 <sfbpf_print+0x44>
    1890:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1894:	.word	0x00010c25
    1898:	.word	0x00010a5c

0000189c <print_instruction>:
    189c:	push	{r4, r5, r6, sl, fp, lr}
    18a0:	add	fp, sp, #16
    18a4:	mov	r4, r0
    18a8:	ldrh	r0, [r0]
    18ac:	and	r1, r0, #7
    18b0:	ldr	r0, [pc, #300]	; 19e4 <print_instruction+0x148>
    18b4:	add	r0, pc, r0
    18b8:	bl	1a90 <get_code_name>
    18bc:	mov	r1, r0
    18c0:	ldr	r0, [pc, #288]	; 19e8 <print_instruction+0x14c>
    18c4:	add	r0, pc, r0
    18c8:	bl	e20 <printf@plt>
    18cc:	ldrh	r6, [r4]
    18d0:	and	r0, r6, #7
    18d4:	cmp	r0, #7
    18d8:	bhi	19c8 <print_instruction+0x12c>
    18dc:	add	r1, pc, #4
    18e0:	ldr	r0, [r1, r0, lsl #2]
    18e4:	add	pc, r1, r0
    18e8:	.word	0x00000020
    18ec:	.word	0x00000020
    18f0:	.word	0x000000e0
    18f4:	.word	0x000000e0
    18f8:	.word	0x00000054
    18fc:	.word	0x00000064
    1900:	.word	0x000000a0
    1904:	.word	0x000000c0
    1908:	and	r1, r6, #24
    190c:	ldr	r0, [pc, #216]	; 19ec <print_instruction+0x150>
    1910:	add	r0, pc, r0
    1914:	bl	1a90 <get_code_name>
    1918:	mov	r5, r0
    191c:	and	r1, r6, #224	; 0xe0
    1920:	ldr	r0, [pc, #200]	; 19f0 <print_instruction+0x154>
    1924:	add	r0, pc, r0
    1928:	bl	1a90 <get_code_name>
    192c:	mov	r2, r0
    1930:	ldr	r0, [pc, #188]	; 19f4 <print_instruction+0x158>
    1934:	add	r0, pc, r0
    1938:	b	197c <print_instruction+0xe0>
    193c:	and	r1, r6, #240	; 0xf0
    1940:	ldr	r0, [pc, #176]	; 19f8 <print_instruction+0x15c>
    1944:	add	r0, pc, r0
    1948:	b	1958 <print_instruction+0xbc>
    194c:	and	r1, r6, #240	; 0xf0
    1950:	ldr	r0, [pc, #172]	; 1a04 <print_instruction+0x168>
    1954:	add	r0, pc, r0
    1958:	bl	1a90 <get_code_name>
    195c:	mov	r5, r0
    1960:	and	r1, r6, #8
    1964:	ldr	r0, [pc, #144]	; 19fc <print_instruction+0x160>
    1968:	add	r0, pc, r0
    196c:	bl	1a90 <get_code_name>
    1970:	mov	r2, r0
    1974:	ldr	r0, [pc, #132]	; 1a00 <print_instruction+0x164>
    1978:	add	r0, pc, r0
    197c:	mov	r1, r5
    1980:	bl	e20 <printf@plt>
    1984:	b	19c8 <print_instruction+0x12c>
    1988:	and	r1, r6, #24
    198c:	ldr	r0, [pc, #116]	; 1a08 <print_instruction+0x16c>
    1990:	add	r0, pc, r0
    1994:	bl	1a90 <get_code_name>
    1998:	mov	r1, r0
    199c:	ldr	r0, [pc, #104]	; 1a0c <print_instruction+0x170>
    19a0:	add	r0, pc, r0
    19a4:	b	19c4 <print_instruction+0x128>
    19a8:	and	r1, r6, #248	; 0xf8
    19ac:	ldr	r0, [pc, #92]	; 1a10 <print_instruction+0x174>
    19b0:	add	r0, pc, r0
    19b4:	bl	1a90 <get_code_name>
    19b8:	mov	r1, r0
    19bc:	ldr	r0, [pc, #80]	; 1a14 <print_instruction+0x178>
    19c0:	add	r0, pc, r0
    19c4:	bl	e20 <printf@plt>
    19c8:	ldr	r3, [r4, #4]
    19cc:	ldrb	r1, [r4, #2]
    19d0:	ldrb	r2, [r4, #3]
    19d4:	ldr	r0, [pc, #60]	; 1a18 <print_instruction+0x17c>
    19d8:	add	r0, pc, r0
    19dc:	pop	{r4, r5, r6, sl, fp, lr}
    19e0:	b	e20 <printf@plt>
    19e4:	.word	0x0002e818
    19e8:	.word	0x00010b55
    19ec:	.word	0x0002e804
    19f0:	.word	0x0002e810
    19f4:	.word	0x00010972
    19f8:	.word	0x0002e828
    19fc:	.word	0x0002e854
    1a00:	.word	0x0001093f
    1a04:	.word	0x0002e880
    1a08:	.word	0x0002e874
    1a0c:	.word	0x00010925
    1a10:	.word	0x0002e874
    1a14:	.word	0x0001090e
    1a18:	.word	0x000108fd

00001a1c <pretty_print_instruction>:
    1a1c:	ldrh	r2, [r0]
    1a20:	and	r2, r2, #7
    1a24:	add	r3, pc, #4
    1a28:	ldr	r2, [r3, r2, lsl #2]
    1a2c:	add	pc, r3, r2
    1a30:	.word	0x00000020
    1a34:	.word	0x00000024
    1a38:	.word	0x00000028
    1a3c:	.word	0x00000038
    1a40:	.word	0x00000048
    1a44:	.word	0x0000004c
    1a48:	.word	0x00000050
    1a4c:	.word	0x00000054
    1a50:	b	1ad4 <print_ld>
    1a54:	b	1bbc <print_ldx>
    1a58:	ldr	r1, [r0, #4]
    1a5c:	ldr	r0, [pc, #36]	; 1a88 <pretty_print_instruction+0x6c>
    1a60:	add	r0, pc, r0
    1a64:	b	e20 <printf@plt>
    1a68:	ldr	r1, [r0, #4]
    1a6c:	ldr	r0, [pc, #24]	; 1a8c <pretty_print_instruction+0x70>
    1a70:	add	r0, pc, r0
    1a74:	b	e20 <printf@plt>
    1a78:	b	1c68 <print_alu>
    1a7c:	b	1d98 <print_jmp>
    1a80:	b	1ea4 <print_ret>
    1a84:	b	1f34 <print_misc>
    1a88:	.word	0x00010914
    1a8c:	.word	0x00010915

00001a90 <get_code_name>:
    1a90:	mov	r2, r0
    1a94:	ldr	r0, [r0, #4]
    1a98:	cmp	r0, #0
    1a9c:	beq	1acc <get_code_name+0x3c>
    1aa0:	ldr	r3, [r2]
    1aa4:	cmp	r3, r1
    1aa8:	bxeq	lr
    1aac:	add	r2, r2, #8
    1ab0:	ldr	r0, [r2, #4]
    1ab4:	cmp	r0, #0
    1ab8:	beq	1acc <get_code_name+0x3c>
    1abc:	ldr	r3, [r2], #8
    1ac0:	cmp	r3, r1
    1ac4:	bne	1ab0 <get_code_name+0x20>
    1ac8:	bx	lr
    1acc:	mov	r0, #0
    1ad0:	bx	lr

00001ad4 <print_ld>:
    1ad4:	push	{r4, sl, fp, lr}
    1ad8:	add	fp, sp, #8
    1adc:	mov	r4, r0
    1ae0:	ldr	r0, [pc, #184]	; 1ba0 <print_ld+0xcc>
    1ae4:	add	r0, pc, r0
    1ae8:	bl	e20 <printf@plt>
    1aec:	ldrh	r0, [r4]
    1af0:	ubfx	r1, r0, #5, #3
    1af4:	cmp	r1, #4
    1af8:	bhi	1b30 <print_ld+0x5c>
    1afc:	add	r2, pc, #4
    1b00:	ldr	r1, [r2, r1, lsl #2]
    1b04:	add	pc, r2, r1
    1b08:	.word	0x00000014
    1b0c:	.word	0x00000034
    1b10:	.word	0x0000004c
    1b14:	.word	0x0000006c
    1b18:	.word	0x00000080
    1b1c:	ldr	r1, [r4, #4]
    1b20:	ldr	r0, [pc, #136]	; 1bb0 <print_ld+0xdc>
    1b24:	add	r0, pc, r0
    1b28:	bl	e20 <printf@plt>
    1b2c:	b	1b94 <print_ld+0xc0>
    1b30:	ldr	r0, [pc, #128]	; 1bb8 <print_ld+0xe4>
    1b34:	add	r0, pc, r0
    1b38:	b	1b90 <print_ld+0xbc>
    1b3c:	ldr	r4, [r4, #4]
    1b40:	bl	1f9c <get_size>
    1b44:	mov	r2, r0
    1b48:	ldr	r0, [pc, #84]	; 1ba4 <print_ld+0xd0>
    1b4c:	add	r0, pc, r0
    1b50:	b	1b68 <print_ld+0x94>
    1b54:	ldr	r4, [r4, #4]
    1b58:	bl	1f9c <get_size>
    1b5c:	mov	r2, r0
    1b60:	ldr	r0, [pc, #64]	; 1ba8 <print_ld+0xd4>
    1b64:	add	r0, pc, r0
    1b68:	mov	r1, r4
    1b6c:	bl	e20 <printf@plt>
    1b70:	b	1b94 <print_ld+0xc0>
    1b74:	ldr	r1, [r4, #4]
    1b78:	ldr	r0, [pc, #52]	; 1bb4 <print_ld+0xe0>
    1b7c:	add	r0, pc, r0
    1b80:	bl	e20 <printf@plt>
    1b84:	b	1b94 <print_ld+0xc0>
    1b88:	ldr	r0, [pc, #28]	; 1bac <print_ld+0xd8>
    1b8c:	add	r0, pc, r0
    1b90:	bl	e20 <printf@plt>
    1b94:	mov	r0, #10
    1b98:	pop	{r4, sl, fp, lr}
    1b9c:	b	f4c <putchar@plt>
    1ba0:	.word	0x000108b2
    1ba4:	.word	0x00010855
    1ba8:	.word	0x00010846
    1bac:	.word	0x00010829
    1bb0:	.word	0x000114cf
    1bb4:	.word	0x0001083d
    1bb8:	.word	0x0001088b

00001bbc <print_ldx>:
    1bbc:	push	{r4, sl, fp, lr}
    1bc0:	add	fp, sp, #8
    1bc4:	mov	r4, r0
    1bc8:	ldr	r0, [pc, #132]	; 1c54 <print_ldx+0x98>
    1bcc:	add	r0, pc, r0
    1bd0:	bl	e20 <printf@plt>
    1bd4:	ldrh	r0, [r4]
    1bd8:	ubfx	r0, r0, #5, #3
    1bdc:	cmp	r0, #5
    1be0:	bhi	1c48 <print_ldx+0x8c>
    1be4:	add	r1, pc, #4
    1be8:	ldr	r0, [r1, r0, lsl #2]
    1bec:	add	pc, r1, r0
    1bf0:	.word	0x00000018
    1bf4:	.word	0x00000058
    1bf8:	.word	0x00000058
    1bfc:	.word	0x00000028
    1c00:	.word	0x00000038
    1c04:	.word	0x00000048
    1c08:	ldr	r1, [r4, #4]
    1c0c:	ldr	r0, [pc, #72]	; 1c5c <print_ldx+0xa0>
    1c10:	add	r0, pc, r0
    1c14:	b	1c44 <print_ldx+0x88>
    1c18:	ldr	r1, [r4, #4]
    1c1c:	ldr	r0, [pc, #60]	; 1c60 <print_ldx+0xa4>
    1c20:	add	r0, pc, r0
    1c24:	b	1c44 <print_ldx+0x88>
    1c28:	ldr	r0, [pc, #40]	; 1c58 <print_ldx+0x9c>
    1c2c:	add	r0, pc, r0
    1c30:	bl	e20 <printf@plt>
    1c34:	b	1c48 <print_ldx+0x8c>
    1c38:	ldr	r1, [r4, #4]
    1c3c:	ldr	r0, [pc, #32]	; 1c64 <print_ldx+0xa8>
    1c40:	add	r0, pc, r0
    1c44:	bl	e20 <printf@plt>
    1c48:	mov	r0, #10
    1c4c:	pop	{r4, sl, fp, lr}
    1c50:	b	f4c <putchar@plt>
    1c54:	.word	0x000107f7
    1c58:	.word	0x00010789
    1c5c:	.word	0x000113e3
    1c60:	.word	0x00010799
    1c64:	.word	0x0001078e

00001c68 <print_alu>:
    1c68:	push	{r4, sl, fp, lr}
    1c6c:	add	fp, sp, #8
    1c70:	mov	r4, r0
    1c74:	ldrh	r0, [r0]
    1c78:	ubfx	r0, r0, #4, #4
    1c7c:	cmp	r0, #8
    1c80:	bhi	1cc8 <print_alu+0x60>
    1c84:	ldr	r1, [pc, #220]	; 1d68 <print_alu+0x100>
    1c88:	add	r1, pc, r1
    1c8c:	add	r2, pc, #4
    1c90:	ldr	r0, [r2, r0, lsl #2]
    1c94:	add	pc, r2, r0
    1c98:	.word	0x00000080
    1c9c:	.word	0x00000024
    1ca0:	.word	0x0000003c
    1ca4:	.word	0x00000048
    1ca8:	.word	0x00000054
    1cac:	.word	0x00000060
    1cb0:	.word	0x0000006c
    1cb4:	.word	0x00000078
    1cb8:	.word	0x000000c0
    1cbc:	ldr	r1, [pc, #168]	; 1d6c <print_alu+0x104>
    1cc0:	add	r1, pc, r1
    1cc4:	b	1d18 <print_alu+0xb0>
    1cc8:	ldr	r1, [pc, #188]	; 1d8c <print_alu+0x124>
    1ccc:	add	r1, pc, r1
    1cd0:	b	1d18 <print_alu+0xb0>
    1cd4:	ldr	r1, [pc, #148]	; 1d70 <print_alu+0x108>
    1cd8:	add	r1, pc, r1
    1cdc:	b	1d18 <print_alu+0xb0>
    1ce0:	ldr	r1, [pc, #140]	; 1d74 <print_alu+0x10c>
    1ce4:	add	r1, pc, r1
    1ce8:	b	1d18 <print_alu+0xb0>
    1cec:	ldr	r1, [pc, #132]	; 1d78 <print_alu+0x110>
    1cf0:	add	r1, pc, r1
    1cf4:	b	1d18 <print_alu+0xb0>
    1cf8:	ldr	r1, [pc, #124]	; 1d7c <print_alu+0x114>
    1cfc:	add	r1, pc, r1
    1d00:	b	1d18 <print_alu+0xb0>
    1d04:	ldr	r1, [pc, #116]	; 1d80 <print_alu+0x118>
    1d08:	add	r1, pc, r1
    1d0c:	b	1d18 <print_alu+0xb0>
    1d10:	ldr	r1, [pc, #108]	; 1d84 <print_alu+0x11c>
    1d14:	add	r1, pc, r1
    1d18:	ldr	r0, [pc, #112]	; 1d90 <print_alu+0x128>
    1d1c:	add	r0, pc, r0
    1d20:	bl	e20 <printf@plt>
    1d24:	ldrb	r0, [r4]
    1d28:	tst	r0, #8
    1d2c:	bne	1d44 <print_alu+0xdc>
    1d30:	ldr	r1, [r4, #4]
    1d34:	ldr	r0, [pc, #88]	; 1d94 <print_alu+0x12c>
    1d38:	add	r0, pc, r0
    1d3c:	bl	e20 <printf@plt>
    1d40:	b	1d4c <print_alu+0xe4>
    1d44:	mov	r0, #88	; 0x58
    1d48:	bl	f4c <putchar@plt>
    1d4c:	mov	r0, #10
    1d50:	pop	{r4, sl, fp, lr}
    1d54:	b	f4c <putchar@plt>
    1d58:	ldr	r0, [pc, #40]	; 1d88 <print_alu+0x120>
    1d5c:	add	r0, pc, r0
    1d60:	pop	{r4, sl, fp, lr}
    1d64:	b	ec8 <puts@plt>
    1d68:	.word	0x00010756
    1d6c:	.word	0x00010720
    1d70:	.word	0x0001070a
    1d74:	.word	0x00010700
    1d78:	.word	0x000106f6
    1d7c:	.word	0x000106ec
    1d80:	.word	0x000106e2
    1d84:	.word	0x000106d9
    1d88:	.word	0x000106ff
    1d8c:	.word	0x000106f3
    1d90:	.word	0x000106d4
    1d94:	.word	0x000112bb

00001d98 <print_jmp>:
    1d98:	push	{r4, r5, fp, lr}
    1d9c:	add	fp, sp, #8
    1da0:	mov	r4, r1
    1da4:	mov	r5, r0
    1da8:	ldrh	r0, [r0]
    1dac:	ubfx	r0, r0, #4, #4
    1db0:	cmp	r0, #4
    1db4:	bhi	1dfc <print_jmp+0x64>
    1db8:	ldr	r1, [pc, #192]	; 1e80 <print_jmp+0xe8>
    1dbc:	add	r1, pc, r1
    1dc0:	add	r2, pc, #4
    1dc4:	ldr	r0, [r2, r0, lsl #2]
    1dc8:	add	pc, r2, r0
    1dcc:	.word	0x00000014
    1dd0:	.word	0x0000005c
    1dd4:	.word	0x0000003c
    1dd8:	.word	0x00000048
    1ddc:	.word	0x00000054
    1de0:	ldr	r0, [r5, #4]
    1de4:	add	r0, r4, r0
    1de8:	add	r1, r0, #1
    1dec:	ldr	r0, [pc, #144]	; 1e84 <print_jmp+0xec>
    1df0:	add	r0, pc, r0
    1df4:	pop	{r4, r5, fp, lr}
    1df8:	b	e20 <printf@plt>
    1dfc:	ldr	r1, [pc, #144]	; 1e94 <print_jmp+0xfc>
    1e00:	add	r1, pc, r1
    1e04:	b	1e28 <print_jmp+0x90>
    1e08:	ldr	r1, [pc, #120]	; 1e88 <print_jmp+0xf0>
    1e0c:	add	r1, pc, r1
    1e10:	b	1e28 <print_jmp+0x90>
    1e14:	ldr	r1, [pc, #112]	; 1e8c <print_jmp+0xf4>
    1e18:	add	r1, pc, r1
    1e1c:	b	1e28 <print_jmp+0x90>
    1e20:	ldr	r1, [pc, #104]	; 1e90 <print_jmp+0xf8>
    1e24:	add	r1, pc, r1
    1e28:	ldr	r0, [pc, #104]	; 1e98 <print_jmp+0x100>
    1e2c:	add	r0, pc, r0
    1e30:	bl	e20 <printf@plt>
    1e34:	ldrb	r0, [r5]
    1e38:	tst	r0, #8
    1e3c:	bne	1e54 <print_jmp+0xbc>
    1e40:	ldr	r1, [r5, #4]
    1e44:	ldr	r0, [pc, #80]	; 1e9c <print_jmp+0x104>
    1e48:	add	r0, pc, r0
    1e4c:	bl	e20 <printf@plt>
    1e50:	b	1e5c <print_jmp+0xc4>
    1e54:	mov	r0, #88	; 0x58
    1e58:	bl	f4c <putchar@plt>
    1e5c:	ldrb	r0, [r5, #2]
    1e60:	ldrb	r2, [r5, #3]
    1e64:	add	r3, r4, #1
    1e68:	add	r1, r3, r0
    1e6c:	add	r2, r3, r2
    1e70:	ldr	r0, [pc, #40]	; 1ea0 <print_jmp+0x108>
    1e74:	add	r0, pc, r0
    1e78:	pop	{r4, r5, fp, lr}
    1e7c:	b	e20 <printf@plt>
    1e80:	.word	0x0001064f
    1e84:	.word	0x00010611
    1e88:	.word	0x000105e2
    1e8c:	.word	0x000105f6
    1e90:	.word	0x000105c4
    1e94:	.word	0x000105bf
    1e98:	.word	0x000105e5
    1e9c:	.word	0x000111ab
    1ea0:	.word	0x000105a9

00001ea4 <print_ret>:
    1ea4:	push	{r4, sl, fp, lr}
    1ea8:	add	fp, sp, #8
    1eac:	mov	r4, r0
    1eb0:	ldr	r0, [pc, #108]	; 1f24 <print_ret+0x80>
    1eb4:	add	r0, pc, r0
    1eb8:	bl	e20 <printf@plt>
    1ebc:	ldrh	r0, [r4]
    1ec0:	and	r0, r0, #24
    1ec4:	cmp	r0, #16
    1ec8:	beq	1ef0 <print_ret+0x4c>
    1ecc:	cmp	r0, #8
    1ed0:	beq	1efc <print_ret+0x58>
    1ed4:	cmp	r0, #0
    1ed8:	bne	1f08 <print_ret+0x64>
    1edc:	ldr	r1, [r4, #4]
    1ee0:	ldr	r0, [pc, #64]	; 1f28 <print_ret+0x84>
    1ee4:	add	r0, pc, r0
    1ee8:	bl	e20 <printf@plt>
    1eec:	b	1f14 <print_ret+0x70>
    1ef0:	mov	r0, #65	; 0x41
    1ef4:	bl	f4c <putchar@plt>
    1ef8:	b	1f14 <print_ret+0x70>
    1efc:	mov	r0, #88	; 0x58
    1f00:	bl	f4c <putchar@plt>
    1f04:	b	1f14 <print_ret+0x70>
    1f08:	ldr	r0, [pc, #28]	; 1f2c <print_ret+0x88>
    1f0c:	add	r0, pc, r0
    1f10:	bl	e20 <printf@plt>
    1f14:	ldr	r0, [pc, #20]	; 1f30 <print_ret+0x8c>
    1f18:	add	r0, pc, r0
    1f1c:	pop	{r4, sl, fp, lr}
    1f20:	b	ec8 <puts@plt>
    1f24:	.word	0x00010578
    1f28:	.word	0x0001110f
    1f2c:	.word	0x000104b3
    1f30:	.word	0x0001054b

00001f34 <print_misc>:
    1f34:	push	{r4, sl, fp, lr}
    1f38:	add	fp, sp, #8
    1f3c:	mov	r4, r0
    1f40:	ldr	r0, [pc, #68]	; 1f8c <print_misc+0x58>
    1f44:	add	r0, pc, r0
    1f48:	bl	e20 <printf@plt>
    1f4c:	ldrb	r0, [r4]
    1f50:	and	r1, r0, #248	; 0xf8
    1f54:	ldr	r0, [pc, #52]	; 1f90 <print_misc+0x5c>
    1f58:	add	r0, pc, r0
    1f5c:	ldr	r2, [pc, #48]	; 1f94 <print_misc+0x60>
    1f60:	add	r2, pc, r2
    1f64:	cmp	r1, #128	; 0x80
    1f68:	moveq	r2, r0
    1f6c:	ldr	r0, [pc, #36]	; 1f98 <print_misc+0x64>
    1f70:	add	r0, pc, r0
    1f74:	cmp	r1, #0
    1f78:	movne	r0, r2
    1f7c:	bl	e20 <printf@plt>
    1f80:	mov	r0, #10
    1f84:	pop	{r4, sl, fp, lr}
    1f88:	b	f4c <putchar@plt>
    1f8c:	.word	0x000104f5
    1f90:	.word	0x000104ee
    1f94:	.word	0x0001045f
    1f98:	.word	0x000104cf

00001f9c <get_size>:
    1f9c:	ands	r0, r0, #24
    1fa0:	moveq	r0, #4
    1fa4:	bxeq	lr
    1fa8:	cmp	r0, #16
    1fac:	moveq	r0, #1
    1fb0:	bxeq	lr
    1fb4:	cmp	r0, #8
    1fb8:	movne	r0, #0
    1fbc:	moveq	r0, #2
    1fc0:	bx	lr

00001fc4 <sf_bpf_error>:
    1fc4:	sub	sp, sp, #12
    1fc8:	push	{fp, lr}
    1fcc:	mov	fp, sp
    1fd0:	sub	sp, sp, #4
    1fd4:	mov	ip, r0
    1fd8:	add	r0, fp, #8
    1fdc:	stm	r0, {r1, r2, r3}
    1fe0:	add	r3, fp, #8
    1fe4:	str	r3, [sp]
    1fe8:	ldr	r0, [pc, #28]	; 200c <sf_bpf_error+0x48>
    1fec:	add	r0, pc, r0
    1ff0:	mov	r1, #256	; 0x100
    1ff4:	mov	r2, ip
    1ff8:	bl	f88 <vsnprintf@plt>
    1ffc:	ldr	r0, [pc, #12]	; 2010 <sf_bpf_error+0x4c>
    2000:	add	r0, pc, r0
    2004:	mov	r1, #1
    2008:	bl	e44 <longjmp@plt>
    200c:	.word	0x0002e314
    2010:	.word	0x0002e408

00002014 <sf_sdup>:
    2014:	push	{r4, r5, r6, sl, fp, lr}
    2018:	add	fp, sp, #16
    201c:	mov	r5, r0
    2020:	bl	f04 <strlen@plt>
    2024:	mov	r4, r0
    2028:	add	r6, r0, #1
    202c:	mov	r0, r6
    2030:	bl	2050 <newchunk>
    2034:	mov	r1, r5
    2038:	mov	r2, r6
    203c:	bl	f58 <strncpy@plt>
    2040:	cmp	r6, #1
    2044:	movge	r1, #0
    2048:	strbge	r1, [r0, r4]
    204c:	pop	{r4, r5, r6, sl, fp, pc}

00002050 <newchunk>:
    2050:	push	{r4, r5, r6, sl, fp, lr}
    2054:	add	fp, sp, #16
    2058:	ldr	r1, [pc, #140]	; 20ec <newchunk+0x9c>
    205c:	ldr	r1, [pc, r1]
    2060:	ldr	r5, [pc, #136]	; 20f0 <newchunk+0xa0>
    2064:	add	r5, pc, r5
    2068:	ldr	r2, [r5, r1, lsl #3]!
    206c:	add	r0, r0, #3
    2070:	bic	r6, r0, #3
    2074:	cmp	r6, r2
    2078:	bls	20cc <newchunk+0x7c>
    207c:	add	r0, r1, #1
    2080:	ldr	r2, [pc, #108]	; 20f4 <newchunk+0xa4>
    2084:	add	r2, pc, r2
    2088:	str	r0, [r2]
    208c:	cmp	r1, #15
    2090:	bge	20e0 <newchunk+0x90>
    2094:	mov	r1, #1024	; 0x400
    2098:	lsl	r4, r1, r0
    209c:	mov	r0, r4
    20a0:	bl	ed4 <malloc@plt>
    20a4:	str	r0, [r5, #12]
    20a8:	cmp	r0, #0
    20ac:	beq	20e0 <newchunk+0x90>
    20b0:	add	r5, r5, #8
    20b4:	mov	r1, #0
    20b8:	mov	r2, r4
    20bc:	bl	f40 <memset@plt>
    20c0:	str	r4, [r5]
    20c4:	cmp	r6, r4
    20c8:	bhi	20e0 <newchunk+0x90>
    20cc:	ldm	r5, {r0, r1}
    20d0:	sub	r0, r0, r6
    20d4:	str	r0, [r5]
    20d8:	add	r0, r1, r0
    20dc:	pop	{r4, r5, r6, sl, fp, pc}
    20e0:	ldr	r0, [pc, #16]	; 20f8 <newchunk+0xa8>
    20e4:	add	r0, pc, r0
    20e8:	bl	1fc4 <sf_bpf_error>
    20ec:	.word	0x0002e610
    20f0:	.word	0x0002e588
    20f4:	.word	0x0002e5e8
    20f8:	.word	0x00010ec8

000020fc <sfbpf_compile>:
    20fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    2100:	add	fp, sp, #24
    2104:	sub	sp, sp, #8
    2108:	mov	r8, r2
    210c:	mov	r5, r1
    2110:	mov	r6, r0
    2114:	ldr	r0, [pc, #436]	; 22d0 <sfbpf_compile+0x1d4>
    2118:	add	r0, pc, r0
    211c:	mov	r1, #0
    2120:	str	r1, [r0]
    2124:	ldr	r7, [pc, #424]	; 22d4 <sfbpf_compile+0x1d8>
    2128:	add	r7, pc, r7
    212c:	str	r1, [r7]
    2130:	ldr	r4, [pc, #416]	; 22d8 <sfbpf_compile+0x1dc>
    2134:	ldr	r4, [pc, r4]
    2138:	str	r1, [r4]
    213c:	str	r3, [sp, #4]
    2140:	bl	2318 <init_regs>
    2144:	ldr	r0, [pc, #400]	; 22dc <sfbpf_compile+0x1e0>
    2148:	add	r0, pc, r0
    214c:	bl	e50 <_setjmp@plt>
    2150:	cmp	r0, #0
    2154:	beq	2190 <sfbpf_compile+0x94>
    2158:	ldr	r0, [pc, #384]	; 22e0 <sfbpf_compile+0x1e4>
    215c:	ldr	r0, [pc, r0]
    2160:	cmp	r0, #0
    2164:	beq	217c <sfbpf_compile+0x80>
    2168:	bl	f94 <freeaddrinfo@plt>
    216c:	ldr	r0, [pc, #368]	; 22e4 <sfbpf_compile+0x1e8>
    2170:	add	r0, pc, r0
    2174:	mov	r1, #0
    2178:	str	r1, [r0]
    217c:	bl	1222c <sf_lex_cleanup>
    2180:	bl	235c <freechunks>
    2184:	mvn	r0, #0
    2188:	sub	sp, fp, #24
    218c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    2190:	ldr	r0, [fp, #12]
    2194:	ldr	r1, [pc, #332]	; 22e8 <sfbpf_compile+0x1ec>
    2198:	add	r1, pc, r1
    219c:	str	r6, [r1]
    21a0:	ldr	r1, [pc, #324]	; 22ec <sfbpf_compile+0x1f0>
    21a4:	add	r1, pc, r1
    21a8:	str	r0, [r1]
    21ac:	cmp	r6, #0
    21b0:	beq	21c8 <sfbpf_compile+0xcc>
    21b4:	ldr	r0, [sp, #4]
    21b8:	cmp	r0, #0
    21bc:	beq	21fc <sfbpf_compile+0x100>
    21c0:	ldr	r0, [sp, #4]
    21c4:	b	2204 <sfbpf_compile+0x108>
    21c8:	ldr	r0, [pc, #288]	; 22f0 <sfbpf_compile+0x1f4>
    21cc:	add	r0, pc, r0
    21d0:	vld1.64	{d16-d17}, [r0]!
    21d4:	mov	r1, #32
    21d8:	ldr	r2, [pc, #276]	; 22f4 <sfbpf_compile+0x1f8>
    21dc:	add	r2, pc, r2
    21e0:	add	r3, r2, #16
    21e4:	vst1.64	{d16-d17}, [r2], r1
    21e8:	mov	r1, #0
    21ec:	vld1.64	{d16-d17}, [r0]
    21f0:	strb	r1, [r2]
    21f4:	vst1.64	{d16-d17}, [r3]
    21f8:	b	2184 <sfbpf_compile+0x88>
    21fc:	ldr	r0, [pc, #244]	; 22f8 <sfbpf_compile+0x1fc>
    2200:	add	r0, pc, r0
    2204:	bl	1220c <sf_lex_init>
    2208:	mov	r0, r5
    220c:	bl	23c0 <init_linktype>
    2210:	bl	eae4 <sfbpf_parse>
    2214:	ldr	r0, [r4]
    2218:	cmp	r0, #0
    221c:	bne	22c0 <sfbpf_compile+0x1c4>
    2220:	ldr	r4, [fp, #8]
    2224:	ldr	r0, [pc, #208]	; 22fc <sfbpf_compile+0x200>
    2228:	ldr	r0, [pc, r0]
    222c:	cmp	r0, #0
    2230:	bne	2244 <sfbpf_compile+0x148>
    2234:	ldr	r0, [pc, #196]	; 2300 <sfbpf_compile+0x204>
    2238:	ldr	r0, [pc, r0]
    223c:	bl	2f90 <gen_retblk>
    2240:	str	r0, [r7]
    2244:	cmp	r4, #0
    2248:	beq	2290 <sfbpf_compile+0x194>
    224c:	ldr	r0, [pc, #176]	; 2304 <sfbpf_compile+0x208>
    2250:	ldr	r0, [pc, r0]
    2254:	cmp	r0, #0
    2258:	bne	2290 <sfbpf_compile+0x194>
    225c:	ldr	r0, [pc, #164]	; 2308 <sfbpf_compile+0x20c>
    2260:	add	r0, pc, r0
    2264:	bl	ba58 <sf_bpf_optimize>
    2268:	ldr	r0, [pc, #156]	; 230c <sfbpf_compile+0x210>
    226c:	ldr	r0, [pc, r0]
    2270:	cmp	r0, #0
    2274:	beq	22c4 <sfbpf_compile+0x1c8>
    2278:	ldr	r1, [r0, #8]
    227c:	cmp	r1, #6
    2280:	bne	2290 <sfbpf_compile+0x194>
    2284:	ldr	r0, [r0, #20]
    2288:	cmp	r0, #0
    228c:	beq	22c4 <sfbpf_compile+0x1c8>
    2290:	ldr	r0, [pc, #120]	; 2310 <sfbpf_compile+0x214>
    2294:	ldr	r0, [pc, r0]
    2298:	mov	r1, sp
    229c:	bl	c0ec <sf_icode_to_fcode>
    22a0:	ldr	r1, [sp]
    22a4:	str	r1, [r8]
    22a8:	str	r0, [r8, #4]
    22ac:	bl	1222c <sf_lex_cleanup>
    22b0:	bl	235c <freechunks>
    22b4:	mov	r0, #0
    22b8:	sub	sp, fp, #24
    22bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    22c0:	bl	2f78 <syntax>
    22c4:	ldr	r0, [pc, #72]	; 2314 <sfbpf_compile+0x218>
    22c8:	add	r0, pc, r0
    22cc:	bl	1fc4 <sf_bpf_error>
    22d0:	.word	0x0002e9fc
    22d4:	.word	0x0002e468
    22d8:	.word	0x0002df7c
    22dc:	.word	0x0002e2c0
    22e0:	.word	0x0002e438
    22e4:	.word	0x0002e424
    22e8:	.word	0x0002e404
    22ec:	.word	0x0002e3f4
    22f0:	.word	0x000102a4
    22f4:	.word	0x0002e124
    22f8:	.word	0x00010200
    22fc:	.word	0x0002e368
    2300:	.word	0x0002e364
    2304:	.word	0x0002e8c4
    2308:	.word	0x0002e330
    230c:	.word	0x0002e324
    2310:	.word	0x0002e2fc
    2314:	.word	0x000101d0

00002318 <init_regs>:
    2318:	ldr	r0, [pc, #52]	; 2354 <init_regs+0x3c>
    231c:	add	r0, pc, r0
    2320:	mov	r1, #0
    2324:	vmov.i32	q8, #0	; 0x00000000
    2328:	str	r1, [r0]
    232c:	ldr	r0, [pc, #36]	; 2358 <init_regs+0x40>
    2330:	add	r0, pc, r0
    2334:	add	r1, r0, #16
    2338:	vst1.64	{d16-d17}, [r1]
    233c:	add	r1, r0, #32
    2340:	vst1.64	{d16-d17}, [r1]
    2344:	mov	r1, #48	; 0x30
    2348:	vst1.64	{d16-d17}, [r0], r1
    234c:	vst1.64	{d16-d17}, [r0]
    2350:	bx	lr
    2354:	.word	0x0002e360
    2358:	.word	0x0002e350

0000235c <freechunks>:
    235c:	push	{r4, r5, r6, r7, fp, lr}
    2360:	add	fp, sp, #16
    2364:	ldr	r0, [pc, #76]	; 23b8 <freechunks+0x5c>
    2368:	add	r0, pc, r0
    236c:	mov	r4, #0
    2370:	str	r4, [r0]
    2374:	ldr	r5, [pc, #64]	; 23bc <freechunks+0x60>
    2378:	add	r5, pc, r5
    237c:	mov	r6, #0
    2380:	b	2390 <freechunks+0x34>
    2384:	add	r6, r6, #1
    2388:	cmp	r6, #16
    238c:	beq	23b4 <freechunks+0x58>
    2390:	add	r0, r5, r6, lsl #3
    2394:	ldr	r0, [r0, #4]
    2398:	cmp	r0, #0
    239c:	beq	2384 <freechunks+0x28>
    23a0:	lsl	r7, r6, #1
    23a4:	bl	e5c <free@plt>
    23a8:	add	r0, r5, r7, lsl #2
    23ac:	str	r4, [r0, #4]
    23b0:	b	2384 <freechunks+0x28>
    23b4:	pop	{r4, r5, r6, r7, fp, pc}
    23b8:	.word	0x0002e304
    23bc:	.word	0x0002e274

000023c0 <init_linktype>:
    23c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    23c4:	add	fp, sp, #28
    23c8:	sub	sp, sp, #4
    23cc:	mov	r1, r0
    23d0:	ldr	r0, [pc, #2588]	; 2df4 <init_linktype+0xa34>
    23d4:	add	r0, pc, r0
    23d8:	mov	r4, #0
    23dc:	str	r4, [r0]
    23e0:	ldr	r0, [pc, #2576]	; 2df8 <init_linktype+0xa38>
    23e4:	add	r0, pc, r0
    23e8:	str	r1, [r0]
    23ec:	ldr	r0, [pc, #2568]	; 2dfc <init_linktype+0xa3c>
    23f0:	add	r0, pc, r0
    23f4:	strb	r4, [r0]
    23f8:	ldr	r0, [pc, #2560]	; 2e00 <init_linktype+0xa40>
    23fc:	add	r0, pc, r0
    2400:	strb	r4, [r0]
    2404:	ldr	r6, [pc, #2552]	; 2e04 <init_linktype+0xa44>
    2408:	add	r6, pc, r6
    240c:	mvn	r8, #0
    2410:	str	r8, [r6]
    2414:	ldr	r7, [pc, #2540]	; 2e08 <init_linktype+0xa48>
    2418:	add	r7, pc, r7
    241c:	str	r8, [r7]
    2420:	ldr	r0, [pc, #2532]	; 2e0c <init_linktype+0xa4c>
    2424:	add	r0, pc, r0
    2428:	mov	r2, #1
    242c:	strb	r2, [r0]
    2430:	ldr	r2, [pc, #2520]	; 2e10 <init_linktype+0xa50>
    2434:	add	r2, pc, r2
    2438:	str	r8, [r2]
    243c:	ldr	r2, [pc, #2512]	; 2e14 <init_linktype+0xa54>
    2440:	add	r2, pc, r2
    2444:	strb	r4, [r2]
    2448:	ldr	r3, [pc, #2504]	; 2e18 <init_linktype+0xa58>
    244c:	add	r3, pc, r3
    2450:	str	r8, [r3]
    2454:	ldr	ip, [pc, #2496]	; 2e1c <init_linktype+0xa5c>
    2458:	add	ip, pc, ip
    245c:	str	r8, [ip]
    2460:	ldr	r5, [pc, #2488]	; 2e20 <init_linktype+0xa60>
    2464:	add	r5, pc, r5
    2468:	str	r8, [r5]
    246c:	ldr	sl, [pc, #2480]	; 2e24 <init_linktype+0xa64>
    2470:	add	sl, pc, sl
    2474:	str	r8, [sl]
    2478:	ldr	r2, [pc, #2472]	; 2e28 <init_linktype+0xa68>
    247c:	add	r2, pc, r2
    2480:	str	r8, [r2]
    2484:	ldr	r2, [pc, #2464]	; 2e2c <init_linktype+0xa6c>
    2488:	add	r2, pc, r2
    248c:	str	r4, [r2]
    2490:	ldr	lr, [pc, #2456]	; 2e30 <init_linktype+0xa70>
    2494:	add	lr, pc, lr
    2498:	strb	r4, [lr]
    249c:	ldr	r9, [pc, #2448]	; 2e34 <init_linktype+0xa74>
    24a0:	add	r9, pc, r9
    24a4:	str	r8, [r9]
    24a8:	ldr	r2, [pc, #2440]	; 2e38 <init_linktype+0xa78>
    24ac:	add	r2, pc, r2
    24b0:	str	r4, [r2]
    24b4:	ldr	r2, [pc, #2432]	; 2e3c <init_linktype+0xa7c>
    24b8:	add	r2, pc, r2
    24bc:	str	r8, [r2]
    24c0:	ldr	r2, [pc, #2424]	; 2e40 <init_linktype+0xa80>
    24c4:	add	r2, pc, r2
    24c8:	str	r8, [r2]
    24cc:	cmp	r1, #229	; 0xe5
    24d0:	bhi	2de8 <init_linktype+0xa28>
    24d4:	add	r2, pc, #4
    24d8:	ldr	r4, [r2, r1, lsl #2]
    24dc:	add	pc, r2, r4
    24e0:	.word	0x00000444
    24e4:	.word	0x000004f8
    24e8:	.word	0x00000908
    24ec:	.word	0x00000908
    24f0:	.word	0x00000908
    24f4:	.word	0x00000908
    24f8:	.word	0x00000528
    24fc:	.word	0x00000530
    2500:	.word	0x00000538
    2504:	.word	0x00000424
    2508:	.word	0x00000540
    250c:	.word	0x0000044c
    2510:	.word	0x000003d8
    2514:	.word	0x00000908
    2518:	.word	0x00000908
    251c:	.word	0x00000548
    2520:	.word	0x00000568
    2524:	.word	0x00000908
    2528:	.word	0x00000908
    252c:	.word	0x0000044c
    2530:	.word	0x00000908
    2534:	.word	0x00000908
    2538:	.word	0x00000908
    253c:	.word	0x00000908
    2540:	.word	0x00000908
    2544:	.word	0x00000908
    2548:	.word	0x00000908
    254c:	.word	0x00000908
    2550:	.word	0x00000908
    2554:	.word	0x00000908
    2558:	.word	0x00000908
    255c:	.word	0x00000908
    2560:	.word	0x00000908
    2564:	.word	0x00000908
    2568:	.word	0x00000908
    256c:	.word	0x00000908
    2570:	.word	0x00000908
    2574:	.word	0x00000908
    2578:	.word	0x00000908
    257c:	.word	0x00000908
    2580:	.word	0x00000908
    2584:	.word	0x00000908
    2588:	.word	0x00000908
    258c:	.word	0x00000908
    2590:	.word	0x00000908
    2594:	.word	0x00000908
    2598:	.word	0x00000908
    259c:	.word	0x00000908
    25a0:	.word	0x00000908
    25a4:	.word	0x00000908
    25a8:	.word	0x00000424
    25ac:	.word	0x00000588
    25b0:	.word	0x00000908
    25b4:	.word	0x00000908
    25b8:	.word	0x00000908
    25bc:	.word	0x00000908
    25c0:	.word	0x00000908
    25c4:	.word	0x00000908
    25c8:	.word	0x00000908
    25cc:	.word	0x00000908
    25d0:	.word	0x00000908
    25d4:	.word	0x00000908
    25d8:	.word	0x00000908
    25dc:	.word	0x00000908
    25e0:	.word	0x00000908
    25e4:	.word	0x00000908
    25e8:	.word	0x00000908
    25ec:	.word	0x00000908
    25f0:	.word	0x00000908
    25f4:	.word	0x00000908
    25f8:	.word	0x00000908
    25fc:	.word	0x00000908
    2600:	.word	0x00000908
    2604:	.word	0x00000908
    2608:	.word	0x00000908
    260c:	.word	0x00000908
    2610:	.word	0x00000908
    2614:	.word	0x00000908
    2618:	.word	0x00000908
    261c:	.word	0x00000908
    2620:	.word	0x00000908
    2624:	.word	0x00000908
    2628:	.word	0x00000908
    262c:	.word	0x00000908
    2630:	.word	0x00000908
    2634:	.word	0x00000908
    2638:	.word	0x00000908
    263c:	.word	0x00000908
    2640:	.word	0x00000908
    2644:	.word	0x00000908
    2648:	.word	0x00000908
    264c:	.word	0x00000908
    2650:	.word	0x00000908
    2654:	.word	0x00000908
    2658:	.word	0x00000908
    265c:	.word	0x00000908
    2660:	.word	0x00000908
    2664:	.word	0x00000908
    2668:	.word	0x00000908
    266c:	.word	0x00000590
    2670:	.word	0x00000908
    2674:	.word	0x00000908
    2678:	.word	0x00000908
    267c:	.word	0x00000908
    2680:	.word	0x00000424
    2684:	.word	0x000003f8
    2688:	.word	0x00000908
    268c:	.word	0x000003d8
    2690:	.word	0x00000444
    2694:	.word	0x00000678
    2698:	.word	0x00000908
    269c:	.word	0x00000908
    26a0:	.word	0x00000908
    26a4:	.word	0x00000698
    26a8:	.word	0x000003d8
    26ac:	.word	0x00000908
    26b0:	.word	0x00000908
    26b4:	.word	0x00000908
    26b8:	.word	0x00000908
    26bc:	.word	0x000003f8
    26c0:	.word	0x00000908
    26c4:	.word	0x00000908
    26c8:	.word	0x000006c8
    26cc:	.word	0x00000704
    26d0:	.word	0x00000908
    26d4:	.word	0x00000908
    26d8:	.word	0x00000908
    26dc:	.word	0x000003f8
    26e0:	.word	0x00000908
    26e4:	.word	0x000005b0
    26e8:	.word	0x000003b8
    26ec:	.word	0x000003b8
    26f0:	.word	0x00000760
    26f4:	.word	0x00000780
    26f8:	.word	0x000003b8
    26fc:	.word	0x000005d0
    2700:	.word	0x000007a0
    2704:	.word	0x000007e0
    2708:	.word	0x000005d8
    270c:	.word	0x000005f8
    2710:	.word	0x000004b4
    2714:	.word	0x00000908
    2718:	.word	0x00000908
    271c:	.word	0x00000398
    2720:	.word	0x00000398
    2724:	.word	0x00000908
    2728:	.word	0x00000908
    272c:	.word	0x00000908
    2730:	.word	0x00000908
    2734:	.word	0x00000908
    2738:	.word	0x00000908
    273c:	.word	0x00000908
    2740:	.word	0x00000908
    2744:	.word	0x00000908
    2748:	.word	0x00000908
    274c:	.word	0x00000908
    2750:	.word	0x00000908
    2754:	.word	0x00000908
    2758:	.word	0x00000908
    275c:	.word	0x00000908
    2760:	.word	0x00000908
    2764:	.word	0x00000908
    2768:	.word	0x00000908
    276c:	.word	0x000003f8
    2770:	.word	0x0000061c
    2774:	.word	0x00000908
    2778:	.word	0x00000424
    277c:	.word	0x00000454
    2780:	.word	0x00000624
    2784:	.word	0x00000908
    2788:	.word	0x00000908
    278c:	.word	0x00000908
    2790:	.word	0x00000908
    2794:	.word	0x00000908
    2798:	.word	0x00000908
    279c:	.word	0x00000908
    27a0:	.word	0x00000908
    27a4:	.word	0x00000398
    27a8:	.word	0x00000454
    27ac:	.word	0x000003b8
    27b0:	.word	0x000003b8
    27b4:	.word	0x000003b8
    27b8:	.word	0x00000644
    27bc:	.word	0x00000494
    27c0:	.word	0x00000908
    27c4:	.word	0x00000908
    27c8:	.word	0x00000398
    27cc:	.word	0x00000398
    27d0:	.word	0x00000908
    27d4:	.word	0x00000398
    27d8:	.word	0x00000398
    27dc:	.word	0x00000398
    27e0:	.word	0x000003f8
    27e4:	.word	0x00000398
    27e8:	.word	0x000004d8
    27ec:	.word	0x00000398
    27f0:	.word	0x00000398
    27f4:	.word	0x000008a0
    27f8:	.word	0x00000398
    27fc:	.word	0x00000398
    2800:	.word	0x00000494
    2804:	.word	0x00000398
    2808:	.word	0x0000081c
    280c:	.word	0x00000908
    2810:	.word	0x00000908
    2814:	.word	0x00000908
    2818:	.word	0x00000908
    281c:	.word	0x00000908
    2820:	.word	0x00000908
    2824:	.word	0x00000908
    2828:	.word	0x00000908
    282c:	.word	0x00000908
    2830:	.word	0x00000908
    2834:	.word	0x00000908
    2838:	.word	0x00000908
    283c:	.word	0x00000398
    2840:	.word	0x00000908
    2844:	.word	0x00000908
    2848:	.word	0x00000908
    284c:	.word	0x00000398
    2850:	.word	0x00000398
    2854:	.word	0x00000908
    2858:	.word	0x00000908
    285c:	.word	0x00000908
    2860:	.word	0x00000908
    2864:	.word	0x00000908
    2868:	.word	0x00000860
    286c:	.word	0x00000398
    2870:	.word	0x000003d8
    2874:	.word	0x000003d8
    2878:	mvn	r0, #0
    287c:	ldr	r1, [pc, #1744]	; 2f54 <init_linktype+0xb94>
    2880:	add	r1, pc, r1
    2884:	str	r0, [r1]
    2888:	ldr	r1, [pc, #1736]	; 2f58 <init_linktype+0xb98>
    288c:	add	r1, pc, r1
    2890:	str	r0, [r1]
    2894:	b	2ca0 <init_linktype+0x8e0>
    2898:	mov	r0, #4
    289c:	ldr	r1, [pc, #1600]	; 2ee4 <init_linktype+0xb24>
    28a0:	add	r1, pc, r1
    28a4:	str	r0, [r1]
    28a8:	ldr	r1, [pc, #1592]	; 2ee8 <init_linktype+0xb28>
    28ac:	add	r1, pc, r1
    28b0:	str	r0, [r1]
    28b4:	b	2d60 <init_linktype+0x9a0>
    28b8:	mov	r0, #0
    28bc:	ldr	r1, [pc, #1524]	; 2eb8 <init_linktype+0xaf8>
    28c0:	add	r1, pc, r1
    28c4:	str	r0, [r1]
    28c8:	ldr	r1, [pc, #1516]	; 2ebc <init_linktype+0xafc>
    28cc:	add	r1, pc, r1
    28d0:	mvn	r2, #0
    28d4:	b	2c9c <init_linktype+0x8dc>
    28d8:	mov	r0, #0
    28dc:	ldr	r1, [pc, #1464]	; 2e9c <init_linktype+0xadc>
    28e0:	add	r1, pc, r1
    28e4:	str	r0, [r1]
    28e8:	ldr	r0, [pc, #1456]	; 2ea0 <init_linktype+0xae0>
    28ec:	add	r0, pc, r0
    28f0:	mov	r1, #24
    28f4:	str	r1, [r0]
    28f8:	mov	r0, #1
    28fc:	strb	r0, [lr]
    2900:	b	2bc4 <init_linktype+0x804>
    2904:	mov	r0, #4
    2908:	ldr	r1, [pc, #1332]	; 2e44 <init_linktype+0xa84>
    290c:	add	r1, pc, r1
    2910:	str	r0, [r1]
    2914:	ldr	r0, [pc, #1324]	; 2e48 <init_linktype+0xa88>
    2918:	add	r0, pc, r0
    291c:	mov	r1, #2
    2920:	b	2b94 <init_linktype+0x7d4>
    2924:	mov	r0, #4
    2928:	b	2b5c <init_linktype+0x79c>
    292c:	mov	r0, #0
    2930:	b	2bac <init_linktype+0x7ec>
    2934:	ldr	r0, [pc, #1580]	; 2f68 <init_linktype+0xba8>
    2938:	add	r0, pc, r0
    293c:	mov	r1, #16
    2940:	str	r1, [r0]
    2944:	mov	r0, #14
    2948:	ldr	r1, [pc, #1564]	; 2f6c <init_linktype+0xbac>
    294c:	add	r1, pc, r1
    2950:	str	r0, [r1]
    2954:	ldr	r0, [pc, #1556]	; 2f70 <init_linktype+0xbb0>
    2958:	add	r0, pc, r0
    295c:	mov	r1, #18
    2960:	str	r1, [r0]
    2964:	ldr	r0, [pc, #1544]	; 2f74 <init_linktype+0xbb4>
    2968:	add	r0, pc, r0
    296c:	mov	r1, #21
    2970:	b	2ddc <init_linktype+0xa1c>
    2974:	mvn	r0, #0
    2978:	ldr	r1, [pc, #1444]	; 2f24 <init_linktype+0xb64>
    297c:	add	r1, pc, r1
    2980:	str	r0, [r1]
    2984:	ldr	r1, [pc, #1436]	; 2f28 <init_linktype+0xb68>
    2988:	add	r1, pc, r1
    298c:	mov	r2, #18
    2990:	b	2c9c <init_linktype+0x8dc>
    2994:	mov	r0, #3
    2998:	str	r0, [ip]
    299c:	mov	r0, #2
    29a0:	str	r0, [r3]
    29a4:	mov	r0, #4
    29a8:	str	r0, [r5]
    29ac:	str	r0, [sl]
    29b0:	mov	r0, #7
    29b4:	b	2da0 <init_linktype+0x9e0>
    29b8:	mvn	r0, #0
    29bc:	ldr	r1, [pc, #1384]	; 2f2c <init_linktype+0xb6c>
    29c0:	add	r1, pc, r1
    29c4:	str	r0, [r1]
    29c8:	ldr	r1, [pc, #1376]	; 2f30 <init_linktype+0xb70>
    29cc:	add	r1, pc, r1
    29d0:	mov	r2, #8
    29d4:	b	2c9c <init_linktype+0x8dc>
    29d8:	mov	r0, #14
    29dc:	ldr	r1, [pc, #1140]	; 2e58 <init_linktype+0xa98>
    29e0:	add	r1, pc, r1
    29e4:	str	r0, [r1]
    29e8:	ldr	r0, [pc, #1132]	; 2e5c <init_linktype+0xa9c>
    29ec:	add	r0, pc, r0
    29f0:	mov	r1, #12
    29f4:	str	r1, [r0]
    29f8:	ldr	r0, [pc, #1120]	; 2e60 <init_linktype+0xaa0>
    29fc:	add	r0, pc, r0
    2a00:	mov	r1, #0
    2a04:	b	2bd0 <init_linktype+0x810>
    2a08:	mov	r0, #14
    2a0c:	b	2bac <init_linktype+0x7ec>
    2a10:	mov	r0, #6
    2a14:	b	2908 <init_linktype+0x548>
    2a18:	mov	r0, #16
    2a1c:	b	2a2c <init_linktype+0x66c>
    2a20:	mov	r0, #13
    2a24:	b	2bac <init_linktype+0x7ec>
    2a28:	mov	r0, #24
    2a2c:	ldr	r1, [pc, #1072]	; 2e64 <init_linktype+0xaa4>
    2a30:	add	r1, pc, r1
    2a34:	str	r0, [r1]
    2a38:	ldr	r0, [pc, #1064]	; 2e68 <init_linktype+0xaa8>
    2a3c:	add	r0, pc, r0
    2a40:	mvn	r1, #0
    2a44:	b	2b94 <init_linktype+0x7d4>
    2a48:	mov	r0, #24
    2a4c:	ldr	r1, [pc, #1072]	; 2e84 <init_linktype+0xac4>
    2a50:	add	r1, pc, r1
    2a54:	str	r0, [r1]
    2a58:	ldr	r0, [pc, #1064]	; 2e88 <init_linktype+0xac8>
    2a5c:	add	r0, pc, r0
    2a60:	mov	r1, #5
    2a64:	b	2b94 <init_linktype+0x7d4>
    2a68:	mov	r0, #8
    2a6c:	b	2a74 <init_linktype+0x6b4>
    2a70:	mov	r0, #44	; 0x2c
    2a74:	ldr	r1, [pc, #1024]	; 2e7c <init_linktype+0xabc>
    2a78:	add	r1, pc, r1
    2a7c:	str	r0, [r1]
    2a80:	ldr	r0, [pc, #1016]	; 2e80 <init_linktype+0xac0>
    2a84:	add	r0, pc, r0
    2a88:	mov	r1, #6
    2a8c:	b	2b94 <init_linktype+0x7d4>
    2a90:	mov	r0, #8
    2a94:	ldr	r1, [pc, #948]	; 2e50 <init_linktype+0xa90>
    2a98:	add	r1, pc, r1
    2a9c:	str	r0, [r1]
    2aa0:	ldr	r0, [pc, #940]	; 2e54 <init_linktype+0xa94>
    2aa4:	add	r0, pc, r0
    2aa8:	mov	r1, #4
    2aac:	b	2b94 <init_linktype+0x7d4>
    2ab0:	mov	r0, #8
    2ab4:	b	2cc4 <init_linktype+0x904>
    2ab8:	mov	r0, #18
    2abc:	ldr	r1, [pc, #1048]	; 2edc <init_linktype+0xb1c>
    2ac0:	add	r1, pc, r1
    2ac4:	str	r0, [r1]
    2ac8:	ldr	r0, [pc, #1040]	; 2ee0 <init_linktype+0xb20>
    2acc:	add	r0, pc, r0
    2ad0:	mov	r1, #16
    2ad4:	b	2b94 <init_linktype+0x7d4>
    2ad8:	mov	r0, #7
    2adc:	str	r0, [ip]
    2ae0:	mov	r0, #6
    2ae4:	str	r0, [r3]
    2ae8:	mov	r0, #8
    2aec:	str	r0, [r5]
    2af0:	str	r0, [sl]
    2af4:	mov	r0, #11
    2af8:	b	2da0 <init_linktype+0x9e0>
    2afc:	mov	r0, #12
    2b00:	b	289c <init_linktype+0x4dc>
    2b04:	mov	r0, #6
    2b08:	ldr	r1, [pc, #1004]	; 2efc <init_linktype+0xb3c>
    2b0c:	add	r1, pc, r1
    2b10:	str	r0, [r1]
    2b14:	ldr	r0, [pc, #996]	; 2f00 <init_linktype+0xb40>
    2b18:	add	r0, pc, r0
    2b1c:	mov	r1, #4
    2b20:	b	2d5c <init_linktype+0x99c>
    2b24:	mov	r0, #0
    2b28:	ldr	r1, [pc, #928]	; 2ed0 <init_linktype+0xb10>
    2b2c:	add	r1, pc, r1
    2b30:	str	r0, [r1]
    2b34:	ldr	r1, [pc, #920]	; 2ed4 <init_linktype+0xb14>
    2b38:	add	r1, pc, r1
    2b3c:	mvn	r2, #0
    2b40:	str	r2, [r1]
    2b44:	ldr	r1, [pc, #908]	; 2ed8 <init_linktype+0xb18>
    2b48:	add	r1, pc, r1
    2b4c:	mov	r2, #4
    2b50:	str	r2, [r1]
    2b54:	b	2cac <init_linktype+0x8ec>
    2b58:	mov	r0, #12
    2b5c:	ldr	r1, [pc, #776]	; 2e6c <init_linktype+0xaac>
    2b60:	add	r1, pc, r1
    2b64:	str	r0, [r1]
    2b68:	ldr	r0, [pc, #768]	; 2e70 <init_linktype+0xab0>
    2b6c:	add	r0, pc, r0
    2b70:	mov	r1, #0
    2b74:	b	2dc4 <init_linktype+0xa04>
    2b78:	mov	r0, #16
    2b7c:	ldr	r1, [pc, #836]	; 2ec8 <init_linktype+0xb08>
    2b80:	add	r1, pc, r1
    2b84:	str	r0, [r1]
    2b88:	ldr	r0, [pc, #828]	; 2ecc <init_linktype+0xb0c>
    2b8c:	add	r0, pc, r0
    2b90:	mov	r1, #14
    2b94:	str	r1, [r0]
    2b98:	ldr	r0, [pc, #684]	; 2e4c <init_linktype+0xa8c>
    2b9c:	add	r0, pc, r0
    2ba0:	mov	r1, #0
    2ba4:	b	2dd0 <init_linktype+0xa10>
    2ba8:	mov	r0, #16
    2bac:	ldr	r1, [pc, #728]	; 2e8c <init_linktype+0xacc>
    2bb0:	add	r1, pc, r1
    2bb4:	str	r0, [r1]
    2bb8:	ldr	r1, [pc, #720]	; 2e90 <init_linktype+0xad0>
    2bbc:	add	r1, pc, r1
    2bc0:	str	r0, [r1]
    2bc4:	ldr	r0, [pc, #712]	; 2e94 <init_linktype+0xad4>
    2bc8:	add	r0, pc, r0
    2bcc:	mov	r1, #8
    2bd0:	str	r1, [r0]
    2bd4:	ldr	r0, [pc, #700]	; 2e98 <init_linktype+0xad8>
    2bd8:	add	r0, pc, r0
    2bdc:	mov	r1, #3
    2be0:	b	2ddc <init_linktype+0xa1c>
    2be4:	mov	r1, #1
    2be8:	str	r1, [r6]
    2bec:	ldr	r2, [pc, #688]	; 2ea4 <init_linktype+0xae4>
    2bf0:	add	r2, pc, r2
    2bf4:	strb	r1, [r2]
    2bf8:	mov	r1, #2
    2bfc:	str	r1, [r7]
    2c00:	mov	r1, #0
    2c04:	strb	r1, [r0]
    2c08:	mvn	r0, #0
    2c0c:	ldr	r1, [pc, #660]	; 2ea8 <init_linktype+0xae8>
    2c10:	add	r1, pc, r1
    2c14:	str	r0, [r1]
    2c18:	mov	r0, #4
    2c1c:	ldr	r1, [pc, #648]	; 2eac <init_linktype+0xaec>
    2c20:	add	r1, pc, r1
    2c24:	str	r0, [r1]
    2c28:	ldr	r1, [pc, #640]	; 2eb0 <init_linktype+0xaf0>
    2c2c:	add	r1, pc, r1
    2c30:	str	r0, [r1]
    2c34:	ldr	r1, [pc, #632]	; 2eb4 <init_linktype+0xaf4>
    2c38:	add	r1, pc, r1
    2c3c:	b	2bc0 <init_linktype+0x800>
    2c40:	mvn	r0, #0
    2c44:	ldr	r1, [pc, #712]	; 2f14 <init_linktype+0xb54>
    2c48:	add	r1, pc, r1
    2c4c:	str	r0, [r1]
    2c50:	ldr	r1, [pc, #704]	; 2f18 <init_linktype+0xb58>
    2c54:	add	r1, pc, r1
    2c58:	mov	r2, #6
    2c5c:	b	2c9c <init_linktype+0x8dc>
    2c60:	mov	r0, #12
    2c64:	ldr	r1, [pc, #672]	; 2f0c <init_linktype+0xb4c>
    2c68:	add	r1, pc, r1
    2c6c:	str	r0, [r1]
    2c70:	ldr	r0, [pc, #664]	; 2f10 <init_linktype+0xb50>
    2c74:	add	r0, pc, r0
    2c78:	mov	r1, #6
    2c7c:	b	2d5c <init_linktype+0x99c>
    2c80:	mvn	r0, #0
    2c84:	ldr	r1, [pc, #656]	; 2f1c <init_linktype+0xb5c>
    2c88:	add	r1, pc, r1
    2c8c:	str	r0, [r1]
    2c90:	ldr	r1, [pc, #648]	; 2f20 <init_linktype+0xb60>
    2c94:	add	r1, pc, r1
    2c98:	mov	r2, #12
    2c9c:	str	r2, [r1]
    2ca0:	ldr	r1, [pc, #536]	; 2ec0 <init_linktype+0xb00>
    2ca4:	add	r1, pc, r1
    2ca8:	str	r0, [r1]
    2cac:	ldr	r1, [pc, #528]	; 2ec4 <init_linktype+0xb04>
    2cb0:	add	r1, pc, r1
    2cb4:	str	r0, [r1]
    2cb8:	sub	sp, fp, #28
    2cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2cc0:	mov	r0, #4
    2cc4:	ldr	r1, [pc, #544]	; 2eec <init_linktype+0xb2c>
    2cc8:	add	r1, pc, r1
    2ccc:	str	r0, [r1]
    2cd0:	ldr	r1, [pc, #536]	; 2ef0 <init_linktype+0xb30>
    2cd4:	add	r1, pc, r1
    2cd8:	str	r0, [r1]
    2cdc:	ldr	r0, [pc, #528]	; 2ef4 <init_linktype+0xb34>
    2ce0:	add	r0, pc, r0
    2ce4:	mov	r1, #0
    2ce8:	str	r1, [r0]
    2cec:	ldr	r0, [pc, #516]	; 2ef8 <init_linktype+0xb38>
    2cf0:	add	r0, pc, r0
    2cf4:	mov	r1, #10
    2cf8:	b	2ddc <init_linktype+0xa1c>
    2cfc:	mvn	r0, #0
    2d00:	ldr	r1, [pc, #568]	; 2f40 <init_linktype+0xb80>
    2d04:	add	r1, pc, r1
    2d08:	str	r0, [r1]
    2d0c:	ldr	r1, [pc, #560]	; 2f44 <init_linktype+0xb84>
    2d10:	add	r1, pc, r1
    2d14:	str	r0, [r1]
    2d18:	ldr	r1, [pc, #552]	; 2f48 <init_linktype+0xb88>
    2d1c:	add	r1, pc, r1
    2d20:	str	r0, [r1]
    2d24:	ldr	r1, [pc, #544]	; 2f4c <init_linktype+0xb8c>
    2d28:	add	r1, pc, r1
    2d2c:	str	r0, [r1]
    2d30:	mov	r0, #1
    2d34:	ldr	r1, [pc, #532]	; 2f50 <init_linktype+0xb90>
    2d38:	add	r1, pc, r1
    2d3c:	b	2cb4 <init_linktype+0x8f4>
    2d40:	mov	r0, #24
    2d44:	ldr	r1, [pc, #528]	; 2f5c <init_linktype+0xb9c>
    2d48:	add	r1, pc, r1
    2d4c:	str	r0, [r1]
    2d50:	ldr	r0, [pc, #520]	; 2f60 <init_linktype+0xba0>
    2d54:	add	r0, pc, r0
    2d58:	mov	r1, #1
    2d5c:	str	r1, [r0]
    2d60:	ldr	r0, [pc, #412]	; 2f04 <init_linktype+0xb44>
    2d64:	add	r0, pc, r0
    2d68:	mov	r1, #0
    2d6c:	str	r1, [r0]
    2d70:	ldr	r0, [pc, #400]	; 2f08 <init_linktype+0xb48>
    2d74:	add	r0, pc, r0
    2d78:	mvn	r1, #0
    2d7c:	b	2ddc <init_linktype+0xa1c>
    2d80:	mov	r0, #23
    2d84:	str	r0, [ip]
    2d88:	mov	r0, #22
    2d8c:	str	r0, [r3]
    2d90:	mov	r0, #24
    2d94:	str	r0, [r5]
    2d98:	str	r0, [sl]
    2d9c:	mov	r0, #27
    2da0:	ldr	r1, [pc, #396]	; 2f34 <init_linktype+0xb74>
    2da4:	add	r1, pc, r1
    2da8:	str	r0, [r1]
    2dac:	ldr	r0, [pc, #388]	; 2f38 <init_linktype+0xb78>
    2db0:	add	r0, pc, r0
    2db4:	mvn	r1, #0
    2db8:	str	r1, [r0]
    2dbc:	ldr	r0, [pc, #376]	; 2f3c <init_linktype+0xb7c>
    2dc0:	add	r0, pc, r0
    2dc4:	str	r1, [r0]
    2dc8:	ldr	r0, [pc, #164]	; 2e74 <init_linktype+0xab4>
    2dcc:	add	r0, pc, r0
    2dd0:	str	r1, [r0]
    2dd4:	ldr	r0, [pc, #156]	; 2e78 <init_linktype+0xab8>
    2dd8:	add	r0, pc, r0
    2ddc:	str	r1, [r0]
    2de0:	sub	sp, fp, #28
    2de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2de8:	ldr	r0, [pc, #372]	; 2f64 <init_linktype+0xba4>
    2dec:	add	r0, pc, r0
    2df0:	bl	1fc4 <sf_bpf_error>
    2df4:	.word	0x0002e1e4
    2df8:	.word	0x0002e1bc
    2dfc:	.word	0x0002e1d4
    2e00:	.word	0x0002e1a8
    2e04:	.word	0x0002e1c0
    2e08:	.word	0x0002e1b4
    2e0c:	.word	0x0002e1ac
    2e10:	.word	0x0002e1a0
    2e14:	.word	0x0002e180
    2e18:	.word	0x0002e18c
    2e1c:	.word	0x0002e184
    2e20:	.word	0x0002e17c
    2e24:	.word	0x0002e174
    2e28:	.word	0x0002e16c
    2e2c:	.word	0x0002e124
    2e30:	.word	0x0002e1dc
    2e34:	.word	0x0002dda8
    2e38:	.word	0x0002dd98
    2e3c:	.word	0x0002e1bc
    2e40:	.word	0x0002e1b4
    2e44:	.word	0x0002dca0
    2e48:	.word	0x0002dc90
    2e4c:	.word	0x0002da14
    2e50:	.word	0x0002db14
    2e54:	.word	0x0002db04
    2e58:	.word	0x0002dbcc
    2e5c:	.word	0x0002dbbc
    2e60:	.word	0x0002dbb4
    2e64:	.word	0x0002db7c
    2e68:	.word	0x0002db6c
    2e6c:	.word	0x0002da4c
    2e70:	.word	0x0002da3c
    2e74:	.word	0x0002d7e4
    2e78:	.word	0x0002d7e4
    2e7c:	.word	0x0002db34
    2e80:	.word	0x0002db24
    2e84:	.word	0x0002db5c
    2e88:	.word	0x0002db4c
    2e8c:	.word	0x0002d9fc
    2e90:	.word	0x0002d9ec
    2e94:	.word	0x0002d9e8
    2e98:	.word	0x0002d9e4
    2e9c:	.word	0x0002dccc
    2ea0:	.word	0x0002dcbc
    2ea4:	.word	0x0002d9d4
    2ea8:	.word	0x0002d9a8
    2eac:	.word	0x0002d9b4
    2eb0:	.word	0x0002d97c
    2eb4:	.word	0x0002d974
    2eb8:	.word	0x0002dcec
    2ebc:	.word	0x0002dcdc
    2ec0:	.word	0x0002d90c
    2ec4:	.word	0x0002d90c
    2ec8:	.word	0x0002da2c
    2ecc:	.word	0x0002da1c
    2ed0:	.word	0x0002da80
    2ed4:	.word	0x0002da70
    2ed8:	.word	0x0002da68
    2edc:	.word	0x0002daec
    2ee0:	.word	0x0002dadc
    2ee4:	.word	0x0002dd0c
    2ee8:	.word	0x0002dcfc
    2eec:	.word	0x0002d8e4
    2ef0:	.word	0x0002d8d4
    2ef4:	.word	0x0002d8d0
    2ef8:	.word	0x0002d8cc
    2efc:	.word	0x0002daa0
    2f00:	.word	0x0002da90
    2f04:	.word	0x0002d84c
    2f08:	.word	0x0002d848
    2f0c:	.word	0x0002d944
    2f10:	.word	0x0002d934
    2f14:	.word	0x0002d964
    2f18:	.word	0x0002d954
    2f1c:	.word	0x0002d924
    2f20:	.word	0x0002d914
    2f24:	.word	0x0002dc30
    2f28:	.word	0x0002dc20
    2f2c:	.word	0x0002dbec
    2f30:	.word	0x0002dbdc
    2f34:	.word	0x0002d844
    2f38:	.word	0x0002d7f8
    2f3c:	.word	0x0002d7ec
    2f40:	.word	0x0002d8a8
    2f44:	.word	0x0002d898
    2f48:	.word	0x0002d894
    2f4c:	.word	0x0002d894
    2f50:	.word	0x0002d880
    2f54:	.word	0x0002dd2c
    2f58:	.word	0x0002dd1c
    2f5c:	.word	0x0002d864
    2f60:	.word	0x0002d854
    2f64:	.word	0x000101f0
    2f68:	.word	0x0002dc70
    2f6c:	.word	0x0002dc60
    2f70:	.word	0x0002dc58
    2f74:	.word	0x0002dc54

00002f78 <syntax>:
    2f78:	push	{fp, lr}
    2f7c:	mov	fp, sp
    2f80:	ldr	r0, [pc, #4]	; 2f8c <syntax+0x14>
    2f84:	add	r0, pc, r0
    2f88:	bl	1fc4 <sf_bpf_error>
    2f8c:	.word	0x00010036

00002f90 <gen_retblk>:
    2f90:	push	{r4, sl, fp, lr}
    2f94:	add	fp, sp, #8
    2f98:	mov	r4, r0
    2f9c:	mov	r0, #6
    2fa0:	bl	7c8c <new_block>
    2fa4:	str	r4, [r0, #20]
    2fa8:	pop	{r4, sl, fp, pc}

00002fac <sfbpf_freecode>:
    2fac:	push	{r4, r5, fp, lr}
    2fb0:	add	fp, sp, #8
    2fb4:	mov	r4, r0
    2fb8:	mov	r5, #0
    2fbc:	str	r5, [r0]
    2fc0:	ldr	r0, [r0, #4]
    2fc4:	cmp	r0, #0
    2fc8:	popeq	{r4, r5, fp, pc}
    2fcc:	bl	e5c <free@plt>
    2fd0:	str	r5, [r4, #4]
    2fd4:	pop	{r4, r5, fp, pc}

00002fd8 <sf_finish_parse>:
    2fd8:	push	{r4, sl, fp, lr}
    2fdc:	add	fp, sp, #8
    2fe0:	mov	r4, r0
    2fe4:	ldr	r0, [r0, #96]	; 0x60
    2fe8:	bl	3054 <insert_compute_vloffsets>
    2fec:	bl	3120 <gen_ppi_dlt_check>
    2ff0:	cmp	r0, #0
    2ff4:	movne	r1, r4
    2ff8:	blne	316c <sf_gen_and>
    2ffc:	ldr	r0, [pc, #72]	; 304c <sf_finish_parse+0x74>
    3000:	ldr	r0, [pc, r0]
    3004:	bl	2f90 <gen_retblk>
    3008:	mov	r1, r0
    300c:	mov	r0, r4
    3010:	bl	31cc <backpatch>
    3014:	ldr	r0, [r4, #44]	; 0x2c
    3018:	clz	r0, r0
    301c:	lsr	r0, r0, #5
    3020:	str	r0, [r4, #44]	; 0x2c
    3024:	mov	r0, #0
    3028:	bl	2f90 <gen_retblk>
    302c:	mov	r1, r0
    3030:	mov	r0, r4
    3034:	bl	31cc <backpatch>
    3038:	ldr	r0, [r4, #96]	; 0x60
    303c:	ldr	r1, [pc, #12]	; 3050 <sf_finish_parse+0x78>
    3040:	add	r1, pc, r1
    3044:	str	r0, [r1]
    3048:	pop	{r4, sl, fp, pc}
    304c:	.word	0x0002d59c
    3050:	.word	0x0002d550

00003054 <insert_compute_vloffsets>:
    3054:	push	{r4, r5, fp, lr}
    3058:	add	fp, sp, #8
    305c:	mov	r4, r0
    3060:	mov	r5, #0
    3064:	ldr	r0, [pc, #172]	; 3118 <insert_compute_vloffsets+0xc4>
    3068:	ldr	r0, [pc, r0]
    306c:	cmp	r0, #162	; 0xa2
    3070:	bgt	308c <insert_compute_vloffsets+0x38>
    3074:	cmp	r0, #119	; 0x77
    3078:	beq	30a4 <insert_compute_vloffsets+0x50>
    307c:	cmp	r0, #127	; 0x7f
    3080:	bne	30bc <insert_compute_vloffsets+0x68>
    3084:	bl	9efc <gen_load_radiotap_llprefixlen>
    3088:	b	30b0 <insert_compute_vloffsets+0x5c>
    308c:	cmp	r0, #163	; 0xa3
    3090:	beq	30ac <insert_compute_vloffsets+0x58>
    3094:	cmp	r0, #192	; 0xc0
    3098:	bne	30bc <insert_compute_vloffsets+0x68>
    309c:	bl	9fe0 <gen_load_ppi_llprefixlen>
    30a0:	b	30b0 <insert_compute_vloffsets+0x5c>
    30a4:	bl	9d40 <gen_load_prism_llprefixlen>
    30a8:	b	30b0 <insert_compute_vloffsets+0x5c>
    30ac:	bl	9e80 <gen_load_avs_llprefixlen>
    30b0:	mov	r5, r0
    30b4:	ldr	r0, [pc, #96]	; 311c <insert_compute_vloffsets+0xc8>
    30b8:	ldr	r0, [pc, r0]
    30bc:	sub	r1, r0, #105	; 0x69
    30c0:	cmp	r1, #22
    30c4:	bhi	30dc <insert_compute_vloffsets+0x88>
    30c8:	mov	r2, #1
    30cc:	movw	r3, #16385	; 0x4001
    30d0:	movt	r3, #64	; 0x40
    30d4:	tst	r3, r2, lsl r1
    30d8:	bne	30ec <insert_compute_vloffsets+0x98>
    30dc:	cmp	r0, #192	; 0xc0
    30e0:	beq	30ec <insert_compute_vloffsets+0x98>
    30e4:	cmp	r0, #163	; 0xa3
    30e8:	bne	30fc <insert_compute_vloffsets+0xa8>
    30ec:	ldr	r1, [r4, #4]
    30f0:	mov	r0, r5
    30f4:	bl	a0c4 <gen_load_802_11_header_len>
    30f8:	mov	r5, r0
    30fc:	cmp	r5, #0
    3100:	popeq	{r4, r5, fp, pc}
    3104:	ldr	r1, [r4, #4]
    3108:	mov	r0, r5
    310c:	bl	7544 <sf_append>
    3110:	str	r5, [r4, #4]
    3114:	pop	{r4, r5, fp, pc}
    3118:	.word	0x0002d538
    311c:	.word	0x0002d4e8

00003120 <gen_ppi_dlt_check>:
    3120:	push	{r4, sl, fp, lr}
    3124:	add	fp, sp, #8
    3128:	mov	r0, #0
    312c:	ldr	r1, [pc, #52]	; 3168 <gen_ppi_dlt_check+0x48>
    3130:	ldr	r1, [pc, r1]
    3134:	cmp	r1, #192	; 0xc0
    3138:	popne	{r4, sl, fp, pc}
    313c:	mov	r0, #32
    3140:	bl	79c0 <new_stmt>
    3144:	mov	r4, r0
    3148:	mov	r0, #4
    314c:	str	r0, [r4, #12]
    3150:	mov	r0, #21
    3154:	bl	7c8c <new_block>
    3158:	mov	r1, #1761607680	; 0x69000000
    315c:	str	r1, [r0, #20]
    3160:	str	r4, [r0, #4]
    3164:	pop	{r4, sl, fp, pc}
    3168:	.word	0x0002d470

0000316c <sf_gen_and>:
    316c:	push	{r4, r5, fp, lr}
    3170:	add	fp, sp, #8
    3174:	mov	r4, r1
    3178:	mov	r5, r0
    317c:	ldr	r1, [r1, #96]	; 0x60
    3180:	bl	31cc <backpatch>
    3184:	ldr	r0, [r5, #44]	; 0x2c
    3188:	clz	r0, r0
    318c:	lsr	r0, r0, #5
    3190:	str	r0, [r5, #44]	; 0x2c
    3194:	ldr	r0, [r4, #44]	; 0x2c
    3198:	clz	r0, r0
    319c:	lsr	r0, r0, #5
    31a0:	str	r0, [r4, #44]	; 0x2c
    31a4:	mov	r0, r4
    31a8:	mov	r1, r5
    31ac:	bl	31fc <merge>
    31b0:	ldr	r0, [r4, #44]	; 0x2c
    31b4:	clz	r0, r0
    31b8:	lsr	r0, r0, #5
    31bc:	str	r0, [r4, #44]	; 0x2c
    31c0:	ldr	r0, [r5, #96]	; 0x60
    31c4:	str	r0, [r4, #96]	; 0x60
    31c8:	pop	{r4, r5, fp, pc}

000031cc <backpatch>:
    31cc:	cmp	r0, #0
    31d0:	bxeq	lr
    31d4:	ldr	r2, [r0, #44]	; 0x2c
    31d8:	cmp	r2, #0
    31dc:	mov	r2, #84	; 0x54
    31e0:	movweq	r2, #60	; 0x3c
    31e4:	ldr	r3, [r0, r2]
    31e8:	str	r1, [r0, r2]
    31ec:	cmp	r3, #0
    31f0:	mov	r0, r3
    31f4:	bne	31d4 <backpatch+0x8>
    31f8:	bx	lr

000031fc <merge>:
    31fc:	sub	sp, sp, #4
    3200:	str	r0, [sp]
    3204:	cmp	r0, #0
    3208:	beq	3234 <merge+0x38>
    320c:	ldr	r3, [r0, #44]	; 0x2c
    3210:	add	r2, r0, #84	; 0x54
    3214:	cmp	r3, #0
    3218:	addeq	r2, r0, #60	; 0x3c
    321c:	mov	r3, #84	; 0x54
    3220:	movweq	r3, #60	; 0x3c
    3224:	ldr	r0, [r0, r3]
    3228:	cmp	r0, #0
    322c:	bne	320c <merge+0x10>
    3230:	b	3238 <merge+0x3c>
    3234:	mov	r2, sp
    3238:	str	r1, [r2]
    323c:	add	sp, sp, #4
    3240:	bx	lr

00003244 <sf_gen_or>:
    3244:	push	{r4, r5, fp, lr}
    3248:	add	fp, sp, #8
    324c:	mov	r4, r1
    3250:	mov	r5, r0
    3254:	ldr	r0, [r0, #44]	; 0x2c
    3258:	clz	r0, r0
    325c:	lsr	r0, r0, #5
    3260:	str	r0, [r5, #44]	; 0x2c
    3264:	ldr	r1, [r1, #96]	; 0x60
    3268:	mov	r0, r5
    326c:	bl	31cc <backpatch>
    3270:	ldr	r0, [r5, #44]	; 0x2c
    3274:	clz	r0, r0
    3278:	lsr	r0, r0, #5
    327c:	str	r0, [r5, #44]	; 0x2c
    3280:	mov	r0, r4
    3284:	mov	r1, r5
    3288:	bl	31fc <merge>
    328c:	ldr	r0, [r5, #96]	; 0x60
    3290:	str	r0, [r4, #96]	; 0x60
    3294:	pop	{r4, r5, fp, pc}

00003298 <sf_gen_not>:
    3298:	ldr	r1, [r0, #44]	; 0x2c
    329c:	clz	r1, r1
    32a0:	lsr	r1, r1, #5
    32a4:	str	r1, [r0, #44]	; 0x2c
    32a8:	bx	lr

000032ac <sf_gen_proto_abbrev>:
    32ac:	push	{r4, r5, fp, lr}
    32b0:	add	fp, sp, #8
    32b4:	sub	r0, r0, #1
    32b8:	cmp	r0, #39	; 0x27
    32bc:	bhi	3700 <sf_gen_proto_abbrev+0x454>
    32c0:	add	r1, pc, #4
    32c4:	ldr	r0, [r1, r0, lsl #2]
    32c8:	add	pc, r1, r0
    32cc:	.word	0x00000438
    32d0:	.word	0x000000a0
    32d4:	.word	0x00000114
    32d8:	.word	0x00000120
    32dc:	.word	0x000001f0
    32e0:	.word	0x0000012c
    32e4:	.word	0x0000020c
    32e8:	.word	0x00000148
    32ec:	.word	0x00000150
    32f0:	.word	0x00000228
    32f4:	.word	0x0000023c
    32f8:	.word	0x000000e4
    32fc:	.word	0x00000248
    3300:	.word	0x00000318
    3304:	.word	0x00000158
    3308:	.word	0x00000254
    330c:	.word	0x000000f0
    3310:	.word	0x00000324
    3314:	.word	0x00000164
    3318:	.word	0x00000180
    331c:	.word	0x00000330
    3320:	.word	0x0000019c
    3324:	.word	0x000001a4
    3328:	.word	0x00000260
    332c:	.word	0x00000358
    3330:	.word	0x000000fc
    3334:	.word	0x00000108
    3338:	.word	0x00000364
    333c:	.word	0x000003ec
    3340:	.word	0x00000370
    3344:	.word	0x0000037c
    3348:	.word	0x0000026c
    334c:	.word	0x000001b0
    3350:	.word	0x00000434
    3354:	.word	0x00000434
    3358:	.word	0x000002c0
    335c:	.word	0x000000c8
    3360:	.word	0x000000ac
    3364:	.word	0x000003f8
    3368:	.word	0x00000444
    336c:	mov	r0, #2048	; 0x800
    3370:	pop	{r4, r5, fp, lr}
    3374:	b	3a80 <gen_linktype>
    3378:	mov	r0, #26
    337c:	mov	r1, #26
    3380:	mov	r2, #0
    3384:	bl	3724 <gen_proto>
    3388:	mov	r5, r0
    338c:	mov	r0, #27
    3390:	b	36dc <sf_gen_proto_abbrev+0x430>
    3394:	mov	r0, #24
    3398:	mov	r1, #26
    339c:	mov	r2, #0
    33a0:	bl	3724 <gen_proto>
    33a4:	mov	r5, r0
    33a8:	mov	r0, #25
    33ac:	b	36dc <sf_gen_proto_abbrev+0x430>
    33b0:	movw	r0, #24579	; 0x6003
    33b4:	pop	{r4, r5, fp, lr}
    33b8:	b	3a80 <gen_linktype>
    33bc:	movw	r0, #34525	; 0x86dd
    33c0:	pop	{r4, r5, fp, lr}
    33c4:	b	3a80 <gen_linktype>
    33c8:	mov	r0, #131	; 0x83
    33cc:	mov	r1, #24
    33d0:	b	34fc <sf_gen_proto_abbrev+0x250>
    33d4:	mov	r0, #129	; 0x81
    33d8:	mov	r1, #24
    33dc:	b	34fc <sf_gen_proto_abbrev+0x250>
    33e0:	movw	r0, #2054	; 0x806
    33e4:	pop	{r4, r5, fp, lr}
    33e8:	b	3a80 <gen_linktype>
    33ec:	movw	r0, #32821	; 0x8035
    33f0:	pop	{r4, r5, fp, lr}
    33f4:	b	3a80 <gen_linktype>
    33f8:	mov	r0, #6
    33fc:	mov	r1, #2
    3400:	mov	r2, #0
    3404:	bl	3724 <gen_proto>
    3408:	mov	r4, r0
    340c:	mov	r0, #6
    3410:	b	3614 <sf_gen_proto_abbrev+0x368>
    3414:	mov	r0, #1
    3418:	b	34f8 <sf_gen_proto_abbrev+0x24c>
    341c:	mov	r0, #2
    3420:	b	34f8 <sf_gen_proto_abbrev+0x24c>
    3424:	movw	r0, #24578	; 0x6002
    3428:	pop	{r4, r5, fp, lr}
    342c:	b	3a80 <gen_linktype>
    3430:	mov	r0, #51	; 0x33
    3434:	mov	r1, #2
    3438:	mov	r2, #0
    343c:	bl	3724 <gen_proto>
    3440:	mov	r4, r0
    3444:	mov	r0, #51	; 0x33
    3448:	b	3614 <sf_gen_proto_abbrev+0x368>
    344c:	mov	r0, #50	; 0x32
    3450:	mov	r1, #2
    3454:	mov	r2, #0
    3458:	bl	3724 <gen_proto>
    345c:	mov	r4, r0
    3460:	mov	r0, #50	; 0x32
    3464:	b	3614 <sf_gen_proto_abbrev+0x368>
    3468:	mov	r0, #112	; 0x70
    346c:	b	34f8 <sf_gen_proto_abbrev+0x24c>
    3470:	movw	r0, #33011	; 0x80f3
    3474:	pop	{r4, r5, fp, lr}
    3478:	b	3a80 <gen_linktype>
    347c:	mov	r0, #15
    3480:	mov	r1, #26
    3484:	mov	r2, #0
    3488:	bl	3724 <gen_proto>
    348c:	mov	r5, r0
    3490:	mov	r0, #16
    3494:	mov	r1, #26
    3498:	mov	r2, #0
    349c:	bl	3724 <gen_proto>
    34a0:	mov	r4, r0
    34a4:	mov	r0, r5
    34a8:	mov	r1, r4
    34ac:	bl	3244 <sf_gen_or>
    34b0:	mov	r0, #17
    34b4:	mov	r1, #26
    34b8:	b	3618 <sf_gen_proto_abbrev+0x36c>
    34bc:	mov	r0, #132	; 0x84
    34c0:	mov	r1, #2
    34c4:	mov	r2, #0
    34c8:	bl	3724 <gen_proto>
    34cc:	mov	r4, r0
    34d0:	mov	r0, #132	; 0x84
    34d4:	b	3614 <sf_gen_proto_abbrev+0x368>
    34d8:	mov	r0, #17
    34dc:	mov	r1, #2
    34e0:	mov	r2, #0
    34e4:	bl	3724 <gen_proto>
    34e8:	mov	r4, r0
    34ec:	mov	r0, #17
    34f0:	b	3614 <sf_gen_proto_abbrev+0x368>
    34f4:	mov	r0, #9
    34f8:	mov	r1, #2
    34fc:	mov	r2, #0
    3500:	pop	{r4, r5, fp, lr}
    3504:	b	3724 <gen_proto>
    3508:	movw	r0, #32923	; 0x809b
    350c:	pop	{r4, r5, fp, lr}
    3510:	b	3a80 <gen_linktype>
    3514:	movw	r0, #24580	; 0x6004
    3518:	pop	{r4, r5, fp, lr}
    351c:	b	3a80 <gen_linktype>
    3520:	movw	r0, #24577	; 0x6001
    3524:	pop	{r4, r5, fp, lr}
    3528:	b	3a80 <gen_linktype>
    352c:	mov	r0, #254	; 0xfe
    3530:	pop	{r4, r5, fp, lr}
    3534:	b	3a80 <gen_linktype>
    3538:	mov	r0, #16
    353c:	mov	r1, #26
    3540:	mov	r2, #0
    3544:	bl	3724 <gen_proto>
    3548:	mov	r5, r0
    354c:	mov	r0, #17
    3550:	mov	r1, #26
    3554:	mov	r2, #0
    3558:	bl	3724 <gen_proto>
    355c:	mov	r4, r0
    3560:	mov	r0, r5
    3564:	mov	r1, r4
    3568:	bl	3244 <sf_gen_or>
    356c:	mov	r0, #20
    3570:	mov	r1, #26
    3574:	mov	r2, #0
    3578:	bl	3724 <gen_proto>
    357c:	mov	r1, r4
    3580:	bl	3244 <sf_gen_or>
    3584:	mov	r0, #25
    3588:	b	35c4 <sf_gen_proto_abbrev+0x318>
    358c:	mov	r0, #24
    3590:	mov	r1, #26
    3594:	mov	r2, #0
    3598:	bl	3724 <gen_proto>
    359c:	mov	r5, r0
    35a0:	mov	r0, #25
    35a4:	mov	r1, #26
    35a8:	mov	r2, #0
    35ac:	bl	3724 <gen_proto>
    35b0:	mov	r4, r0
    35b4:	mov	r0, r5
    35b8:	mov	r1, r4
    35bc:	bl	3244 <sf_gen_or>
    35c0:	mov	r0, #26
    35c4:	mov	r1, #26
    35c8:	mov	r2, #0
    35cc:	bl	3724 <gen_proto>
    35d0:	mov	r1, r4
    35d4:	bl	3244 <sf_gen_or>
    35d8:	mov	r0, #27
    35dc:	mov	r1, #26
    35e0:	b	3618 <sf_gen_proto_abbrev+0x36c>
    35e4:	movw	r0, #24583	; 0x6007
    35e8:	pop	{r4, r5, fp, lr}
    35ec:	b	3a80 <gen_linktype>
    35f0:	mov	r0, #58	; 0x3a
    35f4:	mov	r1, #17
    35f8:	b	34fc <sf_gen_proto_abbrev+0x250>
    35fc:	mov	r0, #103	; 0x67
    3600:	mov	r1, #2
    3604:	mov	r2, #0
    3608:	bl	3724 <gen_proto>
    360c:	mov	r4, r0
    3610:	mov	r0, #103	; 0x67
    3614:	mov	r1, #17
    3618:	mov	r2, #0
    361c:	bl	3724 <gen_proto>
    3620:	b	36f0 <sf_gen_proto_abbrev+0x444>
    3624:	mov	r0, #130	; 0x82
    3628:	mov	r1, #24
    362c:	b	34fc <sf_gen_proto_abbrev+0x250>
    3630:	mov	r0, #66	; 0x42
    3634:	pop	{r4, r5, fp, lr}
    3638:	b	3a80 <gen_linktype>
    363c:	mov	r0, #240	; 0xf0
    3640:	pop	{r4, r5, fp, lr}
    3644:	b	3a80 <gen_linktype>
    3648:	mov	r0, #15
    364c:	mov	r1, #26
    3650:	mov	r2, #0
    3654:	bl	3724 <gen_proto>
    3658:	mov	r5, r0
    365c:	mov	r0, #17
    3660:	mov	r1, #26
    3664:	mov	r2, #0
    3668:	bl	3724 <gen_proto>
    366c:	mov	r4, r0
    3670:	mov	r0, r5
    3674:	mov	r1, r4
    3678:	bl	3244 <sf_gen_or>
    367c:	mov	r0, #18
    3680:	mov	r1, #26
    3684:	mov	r2, #0
    3688:	bl	3724 <gen_proto>
    368c:	mov	r1, r4
    3690:	bl	3244 <sf_gen_or>
    3694:	mov	r0, #24
    3698:	mov	r1, #26
    369c:	mov	r2, #0
    36a0:	bl	3724 <gen_proto>
    36a4:	mov	r1, r4
    36a8:	bl	3244 <sf_gen_or>
    36ac:	mov	r0, #26
    36b0:	mov	r1, #26
    36b4:	b	3618 <sf_gen_proto_abbrev+0x36c>
    36b8:	mov	r0, #224	; 0xe0
    36bc:	pop	{r4, r5, fp, lr}
    36c0:	b	3a80 <gen_linktype>
    36c4:	mov	r0, #18
    36c8:	mov	r1, #26
    36cc:	mov	r2, #0
    36d0:	bl	3724 <gen_proto>
    36d4:	mov	r5, r0
    36d8:	mov	r0, #20
    36dc:	mov	r1, #26
    36e0:	mov	r2, #0
    36e4:	bl	3724 <gen_proto>
    36e8:	mov	r4, r0
    36ec:	mov	r0, r5
    36f0:	mov	r1, r4
    36f4:	bl	3244 <sf_gen_or>
    36f8:	mov	r0, r4
    36fc:	pop	{r4, r5, fp, pc}
    3700:	bl	fc4 <abort@plt>
    3704:	ldr	r0, [pc, #16]	; 371c <sf_gen_proto_abbrev+0x470>
    3708:	add	r0, pc, r0
    370c:	bl	1fc4 <sf_bpf_error>
    3710:	ldr	r0, [pc, #8]	; 3720 <sf_gen_proto_abbrev+0x474>
    3714:	add	r0, pc, r0
    3718:	bl	1fc4 <sf_bpf_error>
    371c:	.word	0x0000edaf
    3720:	.word	0x0000edc7

00003724 <gen_proto>:
    3724:	push	{r4, r5, fp, lr}
    3728:	add	fp, sp, #8
    372c:	cmp	r2, #0
    3730:	bne	3930 <gen_proto+0x20c>
    3734:	cmp	r1, #40	; 0x28
    3738:	bhi	3914 <gen_proto+0x1f0>
    373c:	mov	r4, r0
    3740:	add	r0, pc, #4
    3744:	ldr	r1, [r0, r1, lsl #2]
    3748:	add	pc, r0, r1
    374c:	.word	0x000000a4
    3750:	.word	0x00000148
    3754:	.word	0x00000110
    3758:	.word	0x000001f0
    375c:	.word	0x000001fc
    3760:	.word	0x00000208
    3764:	.word	0x00000214
    3768:	.word	0x00000220
    376c:	.word	0x0000022c
    3770:	.word	0x00000238
    3774:	.word	0x00000244
    3778:	.word	0x00000250
    377c:	.word	0x0000025c
    3780:	.word	0x00000268
    3784:	.word	0x00000274
    3788:	.word	0x00000280
    378c:	.word	0x000001d8
    3790:	.word	0x00000154
    3794:	.word	0x000001cc
    3798:	.word	0x000001bc
    379c:	.word	0x000001bc
    37a0:	.word	0x000002bc
    37a4:	.word	0x000002c8
    37a8:	.word	0x000001c8
    37ac:	.word	0x000000e0
    37b0:	.word	0x000001c8
    37b4:	.word	0x00000128
    37b8:	.word	0x000001c8
    37bc:	.word	0x0000028c
    37c0:	.word	0x00000298
    37c4:	.word	0x000002a4
    37c8:	.word	0x000001c8
    37cc:	.word	0x000001c8
    37d0:	.word	0x000001c8
    37d4:	.word	0x000001c8
    37d8:	.word	0x000001c8
    37dc:	.word	0x000001c8
    37e0:	.word	0x000001c8
    37e4:	.word	0x000001c8
    37e8:	.word	0x000001c8
    37ec:	.word	0x000002b0
    37f0:	mov	r0, r4
    37f4:	mov	r1, #2
    37f8:	mov	r2, #0
    37fc:	bl	3724 <gen_proto>
    3800:	mov	r5, r0
    3804:	mov	r0, r4
    3808:	mov	r1, #17
    380c:	mov	r2, #0
    3810:	bl	3724 <gen_proto>
    3814:	mov	r4, r0
    3818:	mov	r0, r5
    381c:	mov	r1, r4
    3820:	bl	3244 <sf_gen_or>
    3824:	mov	r0, r4
    3828:	pop	{r4, r5, fp, pc}
    382c:	ldr	r0, [pc, #492]	; 3a20 <gen_proto+0x2fc>
    3830:	ldr	r0, [pc, r0]
    3834:	cmp	r0, #104	; 0x68
    3838:	beq	38b8 <gen_proto+0x194>
    383c:	cmp	r0, #107	; 0x6b
    3840:	bne	38d0 <gen_proto+0x1ac>
    3844:	orr	r3, r4, #768	; 0x300
    3848:	mov	r0, #1
    384c:	mov	r1, #2
    3850:	mov	r2, #8
    3854:	pop	{r4, r5, fp, lr}
    3858:	b	4528 <gen_cmp>
    385c:	mov	r0, #2048	; 0x800
    3860:	bl	3a80 <gen_linktype>
    3864:	mov	r5, r0
    3868:	mov	r0, #3
    386c:	mov	r1, #9
    3870:	b	38e4 <gen_proto+0x1c0>
    3874:	mov	r0, #131	; 0x83
    3878:	mov	r1, #24
    387c:	mov	r2, #0
    3880:	bl	3724 <gen_proto>
    3884:	mov	r5, r0
    3888:	mov	r0, #4
    388c:	mov	r1, #4
    3890:	b	38e4 <gen_proto+0x1c0>
    3894:	mov	r0, r4
    3898:	pop	{r4, r5, fp, lr}
    389c:	b	3a80 <gen_linktype>
    38a0:	movw	r0, #34525	; 0x86dd
    38a4:	bl	3a80 <gen_linktype>
    38a8:	mov	r5, r0
    38ac:	mov	r0, #3
    38b0:	mov	r1, #6
    38b4:	b	38e4 <gen_proto+0x1c0>
    38b8:	movw	r0, #65278	; 0xfefe
    38bc:	bl	3a80 <gen_linktype>
    38c0:	mov	r5, r0
    38c4:	mov	r0, #4
    38c8:	mov	r1, #1
    38cc:	b	38e4 <gen_proto+0x1c0>
    38d0:	mov	r0, #254	; 0xfe
    38d4:	bl	3a80 <gen_linktype>
    38d8:	mov	r5, r0
    38dc:	mov	r0, #4
    38e0:	mov	r1, #0
    38e4:	mov	r2, #16
    38e8:	mov	r3, r4
    38ec:	bl	4528 <gen_cmp>
    38f0:	mov	r4, r0
    38f4:	mov	r0, r5
    38f8:	mov	r1, r4
    38fc:	bl	316c <sf_gen_and>
    3900:	mov	r0, r4
    3904:	pop	{r4, r5, fp, pc}
    3908:	ldr	r0, [pc, #344]	; 3a68 <gen_proto+0x344>
    390c:	add	r0, pc, r0
    3910:	bl	1fc4 <sf_bpf_error>
    3914:	bl	fc4 <abort@plt>
    3918:	ldr	r0, [pc, #324]	; 3a64 <gen_proto+0x340>
    391c:	add	r0, pc, r0
    3920:	bl	1fc4 <sf_bpf_error>
    3924:	ldr	r0, [pc, #276]	; 3a40 <gen_proto+0x31c>
    3928:	add	r0, pc, r0
    392c:	bl	1fc4 <sf_bpf_error>
    3930:	ldr	r0, [pc, #324]	; 3a7c <gen_proto+0x358>
    3934:	add	r0, pc, r0
    3938:	bl	1fc4 <sf_bpf_error>
    393c:	ldr	r0, [pc, #224]	; 3a24 <gen_proto+0x300>
    3940:	add	r0, pc, r0
    3944:	bl	1fc4 <sf_bpf_error>
    3948:	ldr	r0, [pc, #216]	; 3a28 <gen_proto+0x304>
    394c:	add	r0, pc, r0
    3950:	bl	1fc4 <sf_bpf_error>
    3954:	ldr	r0, [pc, #240]	; 3a4c <gen_proto+0x328>
    3958:	add	r0, pc, r0
    395c:	bl	1fc4 <sf_bpf_error>
    3960:	ldr	r0, [pc, #224]	; 3a48 <gen_proto+0x324>
    3964:	add	r0, pc, r0
    3968:	bl	1fc4 <sf_bpf_error>
    396c:	ldr	r0, [pc, #208]	; 3a44 <gen_proto+0x320>
    3970:	add	r0, pc, r0
    3974:	bl	1fc4 <sf_bpf_error>
    3978:	ldr	r0, [pc, #208]	; 3a50 <gen_proto+0x32c>
    397c:	add	r0, pc, r0
    3980:	bl	1fc4 <sf_bpf_error>
    3984:	ldr	r0, [pc, #200]	; 3a54 <gen_proto+0x330>
    3988:	add	r0, pc, r0
    398c:	bl	1fc4 <sf_bpf_error>
    3990:	ldr	r0, [pc, #192]	; 3a58 <gen_proto+0x334>
    3994:	add	r0, pc, r0
    3998:	bl	1fc4 <sf_bpf_error>
    399c:	ldr	r0, [pc, #136]	; 3a2c <gen_proto+0x308>
    39a0:	add	r0, pc, r0
    39a4:	bl	1fc4 <sf_bpf_error>
    39a8:	ldr	r0, [pc, #128]	; 3a30 <gen_proto+0x30c>
    39ac:	add	r0, pc, r0
    39b0:	bl	1fc4 <sf_bpf_error>
    39b4:	ldr	r0, [pc, #124]	; 3a38 <gen_proto+0x314>
    39b8:	add	r0, pc, r0
    39bc:	bl	1fc4 <sf_bpf_error>
    39c0:	ldr	r0, [pc, #108]	; 3a34 <gen_proto+0x310>
    39c4:	add	r0, pc, r0
    39c8:	bl	1fc4 <sf_bpf_error>
    39cc:	ldr	r0, [pc, #104]	; 3a3c <gen_proto+0x318>
    39d0:	add	r0, pc, r0
    39d4:	bl	1fc4 <sf_bpf_error>
    39d8:	ldr	r0, [pc, #140]	; 3a6c <gen_proto+0x348>
    39dc:	add	r0, pc, r0
    39e0:	bl	1fc4 <sf_bpf_error>
    39e4:	ldr	r0, [pc, #132]	; 3a70 <gen_proto+0x34c>
    39e8:	add	r0, pc, r0
    39ec:	bl	1fc4 <sf_bpf_error>
    39f0:	ldr	r0, [pc, #124]	; 3a74 <gen_proto+0x350>
    39f4:	add	r0, pc, r0
    39f8:	bl	1fc4 <sf_bpf_error>
    39fc:	ldr	r0, [pc, #116]	; 3a78 <gen_proto+0x354>
    3a00:	add	r0, pc, r0
    3a04:	bl	1fc4 <sf_bpf_error>
    3a08:	ldr	r0, [pc, #76]	; 3a5c <gen_proto+0x338>
    3a0c:	add	r0, pc, r0
    3a10:	bl	1fc4 <sf_bpf_error>
    3a14:	ldr	r0, [pc, #68]	; 3a60 <gen_proto+0x33c>
    3a18:	add	r0, pc, r0
    3a1c:	bl	1fc4 <sf_bpf_error>
    3a20:	.word	0x0002cd70
    3a24:	.word	0x0000f9dc
    3a28:	.word	0x0000f9cf
    3a2c:	.word	0x0000f9a6
    3a30:	.word	0x0000f9c1
    3a34:	.word	0x0000f9d1
    3a38:	.word	0x0000fa07
    3a3c:	.word	0x0000fa19
    3a40:	.word	0x0000faed
    3a44:	.word	0x0000fad1
    3a48:	.word	0x0000faf2
    3a4c:	.word	0x0000fb13
    3a50:	.word	0x0000fb05
    3a54:	.word	0x0000fb0f
    3a58:	.word	0x0000fb19
    3a5c:	.word	0x0000fab7
    3a60:	.word	0x0000fac0
    3a64:	.word	0x0000fbd2
    3a68:	.word	0x0000fbf9
    3a6c:	.word	0x0000fb3d
    3a70:	.word	0x0000fb46
    3a74:	.word	0x0000fb4f
    3a78:	.word	0x0000fb5c
    3a7c:	.word	0x0000f9ca

00003a80 <gen_linktype>:
    3a80:	push	{r4, r5, r6, sl, fp, lr}
    3a84:	add	fp, sp, #16
    3a88:	sub	sp, sp, #8
    3a8c:	mov	r4, r0
    3a90:	ldr	r0, [pc, #2324]	; 43ac <gen_linktype+0x92c>
    3a94:	ldr	r0, [pc, r0]
    3a98:	cmp	r0, #0
    3a9c:	beq	3abc <gen_linktype+0x3c>
    3aa0:	cmp	r4, #2048	; 0x800
    3aa4:	bge	3af8 <gen_linktype+0x78>
    3aa8:	cmp	r4, #33	; 0x21
    3aac:	beq	3ef0 <gen_linktype+0x470>
    3ab0:	cmp	r4, #87	; 0x57
    3ab4:	beq	3b04 <gen_linktype+0x84>
    3ab8:	b	4328 <gen_linktype+0x8a8>
    3abc:	ldr	r0, [pc, #2288]	; 43b4 <gen_linktype+0x934>
    3ac0:	add	r0, pc, r0
    3ac4:	ldrb	r0, [r0]
    3ac8:	cmp	r0, #1
    3acc:	bne	3b0c <gen_linktype+0x8c>
    3ad0:	mov	r0, r4
    3ad4:	bl	a4a8 <ethertype_to_ppptype>
    3ad8:	mov	r3, r0
    3adc:	ldr	r1, [pc, #2260]	; 43b8 <gen_linktype+0x938>
    3ae0:	ldr	r1, [pc, r1]
    3ae4:	mov	r0, #2
    3ae8:	mov	r2, #8
    3aec:	sub	sp, fp, #16
    3af0:	pop	{r4, r5, r6, sl, fp, lr}
    3af4:	b	4528 <gen_cmp>
    3af8:	movw	r0, #34525	; 0x86dd
    3afc:	cmp	r4, r0
    3b00:	bne	3ee8 <gen_linktype+0x468>
    3b04:	mov	r0, #17
    3b08:	b	3ef4 <gen_linktype+0x474>
    3b0c:	ldr	r0, [pc, #2216]	; 43bc <gen_linktype+0x93c>
    3b10:	ldr	r0, [pc, r0]
    3b14:	cmp	r0, #229	; 0xe5
    3b18:	bhi	4064 <gen_linktype+0x5e4>
    3b1c:	add	r1, pc, #4
    3b20:	ldr	r2, [r1, r0, lsl #2]
    3b24:	add	pc, r1, r2
    3b28:	.word	0x00000444
    3b2c:	.word	0x000005d0
    3b30:	.word	0x0000053c
    3b34:	.word	0x0000053c
    3b38:	.word	0x0000053c
    3b3c:	.word	0x0000053c
    3b40:	.word	0x000003d8
    3b44:	.word	0x00000460
    3b48:	.word	0x00000414
    3b4c:	.word	0x000005b4
    3b50:	.word	0x000003d8
    3b54:	.word	0x000003d8
    3b58:	.word	0x00000414
    3b5c:	.word	0x0000053c
    3b60:	.word	0x0000053c
    3b64:	.word	0x00000414
    3b68:	.word	0x00000550
    3b6c:	.word	0x0000053c
    3b70:	.word	0x0000053c
    3b74:	.word	0x000003d8
    3b78:	.word	0x0000053c
    3b7c:	.word	0x0000053c
    3b80:	.word	0x0000053c
    3b84:	.word	0x0000053c
    3b88:	.word	0x0000053c
    3b8c:	.word	0x0000053c
    3b90:	.word	0x0000053c
    3b94:	.word	0x0000053c
    3b98:	.word	0x0000053c
    3b9c:	.word	0x0000053c
    3ba0:	.word	0x0000053c
    3ba4:	.word	0x0000053c
    3ba8:	.word	0x0000053c
    3bac:	.word	0x0000053c
    3bb0:	.word	0x0000053c
    3bb4:	.word	0x0000053c
    3bb8:	.word	0x0000053c
    3bbc:	.word	0x0000053c
    3bc0:	.word	0x0000053c
    3bc4:	.word	0x0000053c
    3bc8:	.word	0x0000053c
    3bcc:	.word	0x0000053c
    3bd0:	.word	0x0000053c
    3bd4:	.word	0x0000053c
    3bd8:	.word	0x0000053c
    3bdc:	.word	0x0000053c
    3be0:	.word	0x0000053c
    3be4:	.word	0x0000053c
    3be8:	.word	0x0000053c
    3bec:	.word	0x0000053c
    3bf0:	.word	0x000005b4
    3bf4:	.word	0x000005b4
    3bf8:	.word	0x0000053c
    3bfc:	.word	0x0000053c
    3c00:	.word	0x0000053c
    3c04:	.word	0x0000053c
    3c08:	.word	0x0000053c
    3c0c:	.word	0x0000053c
    3c10:	.word	0x0000053c
    3c14:	.word	0x0000053c
    3c18:	.word	0x0000053c
    3c1c:	.word	0x0000053c
    3c20:	.word	0x0000053c
    3c24:	.word	0x0000053c
    3c28:	.word	0x0000053c
    3c2c:	.word	0x0000053c
    3c30:	.word	0x0000053c
    3c34:	.word	0x0000053c
    3c38:	.word	0x0000053c
    3c3c:	.word	0x0000053c
    3c40:	.word	0x0000053c
    3c44:	.word	0x0000053c
    3c48:	.word	0x0000053c
    3c4c:	.word	0x0000053c
    3c50:	.word	0x0000053c
    3c54:	.word	0x0000053c
    3c58:	.word	0x0000053c
    3c5c:	.word	0x0000053c
    3c60:	.word	0x0000053c
    3c64:	.word	0x0000053c
    3c68:	.word	0x0000053c
    3c6c:	.word	0x0000053c
    3c70:	.word	0x0000053c
    3c74:	.word	0x0000053c
    3c78:	.word	0x0000053c
    3c7c:	.word	0x0000053c
    3c80:	.word	0x0000053c
    3c84:	.word	0x0000053c
    3c88:	.word	0x0000053c
    3c8c:	.word	0x0000053c
    3c90:	.word	0x0000053c
    3c94:	.word	0x0000053c
    3c98:	.word	0x0000053c
    3c9c:	.word	0x0000053c
    3ca0:	.word	0x0000053c
    3ca4:	.word	0x0000053c
    3ca8:	.word	0x0000053c
    3cac:	.word	0x0000053c
    3cb0:	.word	0x0000053c
    3cb4:	.word	0x0000053c
    3cb8:	.word	0x0000053c
    3cbc:	.word	0x0000053c
    3cc0:	.word	0x0000053c
    3cc4:	.word	0x0000053c
    3cc8:	.word	0x00000610
    3ccc:	.word	0x000003e8
    3cd0:	.word	0x0000053c
    3cd4:	.word	0x00000630
    3cd8:	.word	0x00000444
    3cdc:	.word	0x00000444
    3ce0:	.word	0x0000053c
    3ce4:	.word	0x0000053c
    3ce8:	.word	0x0000053c
    3cec:	.word	0x000005e0
    3cf0:	.word	0x000005f0
    3cf4:	.word	0x0000053c
    3cf8:	.word	0x0000053c
    3cfc:	.word	0x0000053c
    3d00:	.word	0x0000053c
    3d04:	.word	0x000003e8
    3d08:	.word	0x0000053c
    3d0c:	.word	0x0000053c
    3d10:	.word	0x000003d8
    3d14:	.word	0x00000500
    3d18:	.word	0x0000053c
    3d1c:	.word	0x0000053c
    3d20:	.word	0x0000053c
    3d24:	.word	0x000003e8
    3d28:	.word	0x0000053c
    3d2c:	.word	0x00000460
    3d30:	.word	0x00000398
    3d34:	.word	0x00000398
    3d38:	.word	0x00000398
    3d3c:	.word	0x00000398
    3d40:	.word	0x00000398
    3d44:	.word	0x00000398
    3d48:	.word	0x00000398
    3d4c:	.word	0x00000398
    3d50:	.word	0x0000053c
    3d54:	.word	0x000007dc
    3d58:	.word	0x000007dc
    3d5c:	.word	0x0000053c
    3d60:	.word	0x0000053c
    3d64:	.word	0x0000080c
    3d68:	.word	0x00000818
    3d6c:	.word	0x0000053c
    3d70:	.word	0x0000053c
    3d74:	.word	0x0000053c
    3d78:	.word	0x0000053c
    3d7c:	.word	0x0000053c
    3d80:	.word	0x0000053c
    3d84:	.word	0x0000053c
    3d88:	.word	0x0000053c
    3d8c:	.word	0x0000053c
    3d90:	.word	0x0000053c
    3d94:	.word	0x0000053c
    3d98:	.word	0x0000053c
    3d9c:	.word	0x0000053c
    3da0:	.word	0x0000053c
    3da4:	.word	0x0000053c
    3da8:	.word	0x0000053c
    3dac:	.word	0x0000053c
    3db0:	.word	0x0000053c
    3db4:	.word	0x000003e8
    3db8:	.word	0x00000398
    3dbc:	.word	0x0000053c
    3dc0:	.word	0x000005b4
    3dc4:	.word	0x00000398
    3dc8:	.word	0x00000398
    3dcc:	.word	0x0000053c
    3dd0:	.word	0x0000053c
    3dd4:	.word	0x0000053c
    3dd8:	.word	0x0000053c
    3ddc:	.word	0x0000053c
    3de0:	.word	0x0000053c
    3de4:	.word	0x0000053c
    3de8:	.word	0x0000053c
    3dec:	.word	0x00000824
    3df0:	.word	0x00000398
    3df4:	.word	0x00000398
    3df8:	.word	0x00000398
    3dfc:	.word	0x00000398
    3e00:	.word	0x00000830
    3e04:	.word	0x00000398
    3e08:	.word	0x0000053c
    3e0c:	.word	0x0000053c
    3e10:	.word	0x000007c4
    3e14:	.word	0x000007e8
    3e18:	.word	0x0000053c
    3e1c:	.word	0x000007c4
    3e20:	.word	0x000007f4
    3e24:	.word	0x000007d0
    3e28:	.word	0x000003e8
    3e2c:	.word	0x0000083c
    3e30:	.word	0x00000398
    3e34:	.word	0x000007d0
    3e38:	.word	0x00000848
    3e3c:	.word	0x00000854
    3e40:	.word	0x00000860
    3e44:	.word	0x0000086c
    3e48:	.word	0x00000398
    3e4c:	.word	0x000007e8
    3e50:	.word	0x00000878
    3e54:	.word	0x0000053c
    3e58:	.word	0x0000053c
    3e5c:	.word	0x0000053c
    3e60:	.word	0x0000053c
    3e64:	.word	0x0000053c
    3e68:	.word	0x0000053c
    3e6c:	.word	0x0000053c
    3e70:	.word	0x0000053c
    3e74:	.word	0x0000053c
    3e78:	.word	0x0000053c
    3e7c:	.word	0x0000053c
    3e80:	.word	0x0000053c
    3e84:	.word	0x000007d0
    3e88:	.word	0x0000053c
    3e8c:	.word	0x0000053c
    3e90:	.word	0x0000053c
    3e94:	.word	0x0000053c
    3e98:	.word	0x000007c4
    3e9c:	.word	0x0000053c
    3ea0:	.word	0x0000053c
    3ea4:	.word	0x0000053c
    3ea8:	.word	0x0000053c
    3eac:	.word	0x0000053c
    3eb0:	.word	0x000004f0
    3eb4:	.word	0x000007f4
    3eb8:	.word	0x00000660
    3ebc:	.word	0x00000600
    3ec0:	mvn	r0, #255	; 0xff
    3ec4:	str	r0, [sp]
    3ec8:	movw	r3, #17152	; 0x4300
    3ecc:	movt	r3, #19783	; 0x4d47
    3ed0:	mov	r0, #1
    3ed4:	mov	r1, #0
    3ed8:	mov	r2, #0
    3edc:	bl	83ec <gen_mcmp>
    3ee0:	sub	sp, fp, #16
    3ee4:	pop	{r4, r5, r6, sl, fp, pc}
    3ee8:	cmp	r4, #2048	; 0x800
    3eec:	bne	4328 <gen_linktype+0x8a8>
    3ef0:	mov	r0, #2
    3ef4:	sub	sp, fp, #16
    3ef8:	pop	{r4, r5, r6, sl, fp, lr}
    3efc:	b	a3f4 <gen_mpls_linktype>
    3f00:	mov	r0, r4
    3f04:	sub	sp, fp, #16
    3f08:	pop	{r4, r5, r6, sl, fp, lr}
    3f0c:	b	a7e0 <gen_llc_linktype>
    3f10:	bl	a764 <gen_check_802_11_data_frame>
    3f14:	mov	r5, r0
    3f18:	mov	r0, r4
    3f1c:	bl	a7e0 <gen_llc_linktype>
    3f20:	mov	r4, r0
    3f24:	mov	r0, r5
    3f28:	mov	r1, r4
    3f2c:	bl	316c <sf_gen_and>
    3f30:	mov	r0, r4
    3f34:	sub	sp, fp, #16
    3f38:	pop	{r4, r5, r6, sl, fp, pc}
    3f3c:	movw	r0, #34525	; 0x86dd
    3f40:	cmp	r4, r0
    3f44:	beq	3fd0 <gen_linktype+0x550>
    3f48:	cmp	r4, #2048	; 0x800
    3f4c:	bne	41e4 <gen_linktype+0x764>
    3f50:	mov	r0, #240	; 0xf0
    3f54:	str	r0, [sp]
    3f58:	mov	r0, #1
    3f5c:	mov	r1, #0
    3f60:	mov	r2, #16
    3f64:	mov	r3, #64	; 0x40
    3f68:	b	3edc <gen_linktype+0x45c>
    3f6c:	cmp	r4, #2048	; 0x800
    3f70:	beq	3fec <gen_linktype+0x56c>
    3f74:	movw	r1, #34525	; 0x86dd
    3f78:	cmp	r4, r1
    3f7c:	bne	41e4 <gen_linktype+0x764>
    3f80:	mov	r3, #10
    3f84:	b	3ff0 <gen_linktype+0x570>
    3f88:	movw	r0, #32820	; 0x8034
    3f8c:	cmp	r4, r0
    3f90:	ble	419c <gen_linktype+0x71c>
    3f94:	movw	r0, #32821	; 0x8035
    3f98:	cmp	r4, r0
    3f9c:	beq	4208 <gen_linktype+0x788>
    3fa0:	movw	r0, #32923	; 0x809b
    3fa4:	cmp	r4, r0
    3fa8:	beq	4220 <gen_linktype+0x7a0>
    3fac:	movw	r0, #34525	; 0x86dd
    3fb0:	cmp	r4, r0
    3fb4:	bne	41e4 <gen_linktype+0x764>
    3fb8:	ldr	r1, [pc, #1052]	; 43dc <gen_linktype+0x95c>
    3fbc:	ldr	r1, [pc, r1]
    3fc0:	mov	r0, #1
    3fc4:	mov	r2, #16
    3fc8:	mov	r3, #196	; 0xc4
    3fcc:	b	3aec <gen_linktype+0x6c>
    3fd0:	mov	r0, #240	; 0xf0
    3fd4:	str	r0, [sp]
    3fd8:	mov	r0, #1
    3fdc:	mov	r1, #0
    3fe0:	mov	r2, #16
    3fe4:	mov	r3, #96	; 0x60
    3fe8:	b	3edc <gen_linktype+0x45c>
    3fec:	mov	r3, #2
    3ff0:	cmp	r0, #109	; 0x6d
    3ff4:	cmpne	r0, #0
    3ff8:	bne	4008 <gen_linktype+0x588>
    3ffc:	mov	r0, r3
    4000:	bl	5dac <__bswap_32>
    4004:	mov	r3, r0
    4008:	mov	r0, #1
    400c:	mov	r1, #0
    4010:	mov	r2, #0
    4014:	b	3aec <gen_linktype+0x6c>
    4018:	mov	r0, r4
    401c:	sub	sp, fp, #16
    4020:	pop	{r4, r5, r6, sl, fp, lr}
    4024:	b	aa90 <gen_ipnet_linktype>
    4028:	ldr	r0, [pc, #912]	; 43c0 <gen_linktype+0x940>
    402c:	add	r0, pc, r0
    4030:	ldrb	r0, [r0]
    4034:	cmp	r0, #1
    4038:	bne	41f0 <gen_linktype+0x770>
    403c:	mov	r0, #1
    4040:	mov	r1, #4
    4044:	mov	r2, #8
    4048:	mov	r3, #65280	; 0xff00
    404c:	bl	4528 <gen_cmp>
    4050:	mov	r5, r0
    4054:	bl	3298 <sf_gen_not>
    4058:	mov	r0, r4
    405c:	bl	a544 <gen_ether_linktype>
    4060:	b	3f20 <gen_linktype+0x4a0>
    4064:	ldr	r1, [pc, #960]	; 442c <gen_linktype+0x9ac>
    4068:	ldr	r1, [pc, r1]
    406c:	cmn	r1, #1
    4070:	bne	4148 <gen_linktype+0x6c8>
    4074:	bl	fc4 <abort@plt>
    4078:	cmp	r4, #2048	; 0x800
    407c:	bne	40dc <gen_linktype+0x65c>
    4080:	ldr	r1, [pc, #828]	; 43c4 <gen_linktype+0x944>
    4084:	ldr	r1, [pc, r1]
    4088:	mov	r0, #1
    408c:	mov	r2, #8
    4090:	mov	r3, #33	; 0x21
    4094:	bl	4528 <gen_cmp>
    4098:	mov	r4, r0
    409c:	ldr	r1, [pc, #804]	; 43c8 <gen_linktype+0x948>
    40a0:	ldr	r1, [pc, r1]
    40a4:	mov	r0, #1
    40a8:	mov	r2, #8
    40ac:	mov	r3, #45	; 0x2d
    40b0:	bl	4528 <gen_cmp>
    40b4:	mov	r5, r0
    40b8:	mov	r0, r4
    40bc:	mov	r1, r5
    40c0:	bl	3244 <sf_gen_or>
    40c4:	ldr	r1, [pc, #768]	; 43cc <gen_linktype+0x94c>
    40c8:	ldr	r1, [pc, r1]
    40cc:	mov	r0, #1
    40d0:	mov	r2, #8
    40d4:	mov	r3, #47	; 0x2f
    40d8:	b	4268 <gen_linktype+0x7e8>
    40dc:	mov	r0, r4
    40e0:	bl	a4a8 <ethertype_to_ppptype>
    40e4:	mov	r3, r0
    40e8:	ldr	r1, [pc, #736]	; 43d0 <gen_linktype+0x950>
    40ec:	ldr	r1, [pc, r1]
    40f0:	mov	r0, #1
    40f4:	b	3ae8 <gen_linktype+0x68>
    40f8:	mov	r0, r4
    40fc:	sub	sp, fp, #16
    4100:	pop	{r4, r5, r6, sl, fp, lr}
    4104:	b	a544 <gen_ether_linktype>
    4108:	mov	r0, r4
    410c:	sub	sp, fp, #16
    4110:	pop	{r4, r5, r6, sl, fp, lr}
    4114:	b	a874 <gen_linux_sll_linktype>
    4118:	movw	r0, #32923	; 0x809b
    411c:	cmp	r4, r0
    4120:	beq	4190 <gen_linktype+0x710>
    4124:	b	41e4 <gen_linktype+0x764>
    4128:	movw	r0, #34525	; 0x86dd
    412c:	cmp	r4, r0
    4130:	beq	4190 <gen_linktype+0x710>
    4134:	b	41e4 <gen_linktype+0x764>
    4138:	cmp	r4, #254	; 0xfe
    413c:	movweq	r4, #65278	; 0xfefe
    4140:	ldr	r1, [pc, #744]	; 4430 <gen_linktype+0x9b0>
    4144:	ldr	r1, [pc, r1]
    4148:	mov	r0, #1
    414c:	mov	r2, #8
    4150:	mov	r3, r4
    4154:	b	3aec <gen_linktype+0x6c>
    4158:	cmp	r4, #254	; 0xfe
    415c:	beq	4294 <gen_linktype+0x814>
    4160:	movw	r0, #34525	; 0x86dd
    4164:	cmp	r4, r0
    4168:	beq	4280 <gen_linktype+0x800>
    416c:	cmp	r4, #2048	; 0x800
    4170:	bne	41e4 <gen_linktype+0x764>
    4174:	mov	r0, #1
    4178:	mov	r1, #2
    417c:	mov	r2, #8
    4180:	mov	r3, #972	; 0x3cc
    4184:	b	3aec <gen_linktype+0x6c>
    4188:	cmp	r4, #2048	; 0x800
    418c:	bne	41e4 <gen_linktype+0x764>
    4190:	sub	sp, fp, #16
    4194:	pop	{r4, r5, r6, sl, fp, lr}
    4198:	b	aa88 <gen_true>
    419c:	cmp	r4, #2048	; 0x800
    41a0:	beq	4238 <gen_linktype+0x7b8>
    41a4:	movw	r0, #2054	; 0x806
    41a8:	cmp	r4, r0
    41ac:	bne	41e4 <gen_linktype+0x764>
    41b0:	ldr	r1, [pc, #540]	; 43d4 <gen_linktype+0x954>
    41b4:	ldr	r1, [pc, r1]
    41b8:	mov	r0, #1
    41bc:	mov	r2, #16
    41c0:	mov	r3, #213	; 0xd5
    41c4:	bl	4528 <gen_cmp>
    41c8:	mov	r5, r0
    41cc:	ldr	r1, [pc, #516]	; 43d8 <gen_linktype+0x958>
    41d0:	ldr	r1, [pc, r1]
    41d4:	mov	r0, #1
    41d8:	mov	r2, #16
    41dc:	mov	r3, #241	; 0xf1
    41e0:	b	4268 <gen_linktype+0x7e8>
    41e4:	sub	sp, fp, #16
    41e8:	pop	{r4, r5, r6, sl, fp, lr}
    41ec:	b	aa80 <gen_false>
    41f0:	mov	r0, #53	; 0x35
    41f4:	mov	r1, #2
    41f8:	mov	r2, #16
    41fc:	mov	r3, #0
    4200:	bl	9280 <sf_gen_atmfield_code>
    4204:	b	3f14 <gen_linktype+0x494>
    4208:	ldr	r1, [pc, #472]	; 43e8 <gen_linktype+0x968>
    420c:	ldr	r1, [pc, r1]
    4210:	mov	r0, #1
    4214:	mov	r2, #16
    4218:	mov	r3, #214	; 0xd6
    421c:	b	3aec <gen_linktype+0x6c>
    4220:	ldr	r1, [pc, #452]	; 43ec <gen_linktype+0x96c>
    4224:	ldr	r1, [pc, r1]
    4228:	mov	r0, #1
    422c:	mov	r2, #16
    4230:	mov	r3, #221	; 0xdd
    4234:	b	3aec <gen_linktype+0x6c>
    4238:	ldr	r1, [pc, #416]	; 43e0 <gen_linktype+0x960>
    423c:	ldr	r1, [pc, r1]
    4240:	mov	r0, #1
    4244:	mov	r2, #16
    4248:	mov	r3, #212	; 0xd4
    424c:	bl	4528 <gen_cmp>
    4250:	mov	r5, r0
    4254:	ldr	r1, [pc, #392]	; 43e4 <gen_linktype+0x964>
    4258:	ldr	r1, [pc, r1]
    425c:	mov	r0, #1
    4260:	mov	r2, #16
    4264:	mov	r3, #240	; 0xf0
    4268:	bl	4528 <gen_cmp>
    426c:	mov	r4, r0
    4270:	mov	r0, r5
    4274:	mov	r1, r4
    4278:	bl	3244 <sf_gen_or>
    427c:	b	3f30 <gen_linktype+0x4b0>
    4280:	mov	r0, #1
    4284:	mov	r1, #2
    4288:	mov	r2, #8
    428c:	movw	r3, #910	; 0x38e
    4290:	b	3aec <gen_linktype+0x6c>
    4294:	mov	r0, #1
    4298:	mov	r1, #2
    429c:	mov	r2, #8
    42a0:	movw	r3, #897	; 0x381
    42a4:	bl	4528 <gen_cmp>
    42a8:	mov	r5, r0
    42ac:	mov	r0, #1
    42b0:	mov	r1, #2
    42b4:	mov	r2, #8
    42b8:	movw	r3, #898	; 0x382
    42bc:	bl	4528 <gen_cmp>
    42c0:	mov	r6, r0
    42c4:	mov	r0, #1
    42c8:	mov	r1, #2
    42cc:	mov	r2, #8
    42d0:	movw	r3, #899	; 0x383
    42d4:	bl	4528 <gen_cmp>
    42d8:	mov	r4, r0
    42dc:	mov	r0, r6
    42e0:	mov	r1, r4
    42e4:	bl	3244 <sf_gen_or>
    42e8:	b	4270 <gen_linktype+0x7f0>
    42ec:	ldr	r0, [pc, #276]	; 4408 <gen_linktype+0x988>
    42f0:	add	r0, pc, r0
    42f4:	bl	1fc4 <sf_bpf_error>
    42f8:	ldr	r0, [pc, #276]	; 4414 <gen_linktype+0x994>
    42fc:	add	r0, pc, r0
    4300:	bl	1fc4 <sf_bpf_error>
    4304:	ldr	r0, [pc, #240]	; 43fc <gen_linktype+0x97c>
    4308:	add	r0, pc, r0
    430c:	bl	1fc4 <sf_bpf_error>
    4310:	ldr	r0, [pc, #244]	; 440c <gen_linktype+0x98c>
    4314:	add	r0, pc, r0
    4318:	bl	1fc4 <sf_bpf_error>
    431c:	ldr	r0, [pc, #236]	; 4410 <gen_linktype+0x990>
    4320:	add	r0, pc, r0
    4324:	bl	1fc4 <sf_bpf_error>
    4328:	ldr	r0, [pc, #128]	; 43b0 <gen_linktype+0x930>
    432c:	add	r0, pc, r0
    4330:	bl	1fc4 <sf_bpf_error>
    4334:	ldr	r0, [pc, #188]	; 43f8 <gen_linktype+0x978>
    4338:	add	r0, pc, r0
    433c:	bl	1fc4 <sf_bpf_error>
    4340:	ldr	r0, [pc, #172]	; 43f4 <gen_linktype+0x974>
    4344:	add	r0, pc, r0
    4348:	bl	1fc4 <sf_bpf_error>
    434c:	ldr	r0, [pc, #176]	; 4404 <gen_linktype+0x984>
    4350:	add	r0, pc, r0
    4354:	bl	1fc4 <sf_bpf_error>
    4358:	ldr	r0, [pc, #144]	; 43f0 <gen_linktype+0x970>
    435c:	add	r0, pc, r0
    4360:	bl	1fc4 <sf_bpf_error>
    4364:	ldr	r0, [pc, #172]	; 4418 <gen_linktype+0x998>
    4368:	add	r0, pc, r0
    436c:	bl	1fc4 <sf_bpf_error>
    4370:	ldr	r0, [pc, #164]	; 441c <gen_linktype+0x99c>
    4374:	add	r0, pc, r0
    4378:	bl	1fc4 <sf_bpf_error>
    437c:	ldr	r0, [pc, #124]	; 4400 <gen_linktype+0x980>
    4380:	add	r0, pc, r0
    4384:	bl	1fc4 <sf_bpf_error>
    4388:	ldr	r0, [pc, #144]	; 4420 <gen_linktype+0x9a0>
    438c:	add	r0, pc, r0
    4390:	bl	1fc4 <sf_bpf_error>
    4394:	ldr	r0, [pc, #136]	; 4424 <gen_linktype+0x9a4>
    4398:	add	r0, pc, r0
    439c:	bl	1fc4 <sf_bpf_error>
    43a0:	ldr	r0, [pc, #128]	; 4428 <gen_linktype+0x9a8>
    43a4:	add	r0, pc, r0
    43a8:	bl	1fc4 <sf_bpf_error>
    43ac:	.word	0x0002c7b0
    43b0:	.word	0x0000ecca
    43b4:	.word	0x0002cb00
    43b8:	.word	0x0002cac8
    43bc:	.word	0x0002ca90
    43c0:	.word	0x0002c578
    43c4:	.word	0x0002c524
    43c8:	.word	0x0002c508
    43cc:	.word	0x0002c4e0
    43d0:	.word	0x0002c4bc
    43d4:	.word	0x0002c3f4
    43d8:	.word	0x0002c3d8
    43dc:	.word	0x0002c5ec
    43e0:	.word	0x0002c36c
    43e4:	.word	0x0002c350
    43e8:	.word	0x0002c39c
    43ec:	.word	0x0002c384
    43f0:	.word	0x0000ecb9
    43f4:	.word	0x0000ed12
    43f8:	.word	0x0000ed4d
    43fc:	.word	0x0000edae
    4400:	.word	0x0000ed65
    4404:	.word	0x0000edc3
    4408:	.word	0x0000ee52
    440c:	.word	0x0000ee5c
    4410:	.word	0x0000ee84
    4414:	.word	0x0000eed6
    4418:	.word	0x0000eea2
    441c:	.word	0x0000eecc
    4420:	.word	0x0000eee3
    4424:	.word	0x0000ef07
    4428:	.word	0x0000ef2a
    442c:	.word	0x0002c540
    4430:	.word	0x0002c464

00004434 <sf_gen_portop>:
    4434:	push	{r4, r5, r6, r7, fp, lr}
    4438:	add	fp, sp, #16
    443c:	mov	r6, r2
    4440:	mov	r3, r1
    4444:	mov	r5, r0
    4448:	mov	r0, #3
    444c:	mov	r1, #9
    4450:	mov	r2, #16
    4454:	bl	4528 <gen_cmp>
    4458:	mov	r7, r0
    445c:	bl	4558 <gen_ipfrag>
    4460:	mov	r4, r0
    4464:	mov	r0, r7
    4468:	mov	r1, r4
    446c:	bl	316c <sf_gen_and>
    4470:	cmp	r6, #4
    4474:	bhi	4524 <sf_gen_portop+0xf0>
    4478:	add	r0, pc, #4
    447c:	ldr	r1, [r0, r6, lsl #2]
    4480:	add	pc, r0, r1
    4484:	.word	0x00000014
    4488:	.word	0x00000074
    448c:	.word	0x0000007c
    4490:	.word	0x00000014
    4494:	.word	0x00000044
    4498:	mov	r0, #0
    449c:	mov	r1, r5
    44a0:	bl	459c <gen_portatom>
    44a4:	mov	r6, r0
    44a8:	mov	r0, #2
    44ac:	mov	r1, r5
    44b0:	bl	459c <gen_portatom>
    44b4:	mov	r5, r0
    44b8:	mov	r0, r6
    44bc:	mov	r1, r5
    44c0:	bl	3244 <sf_gen_or>
    44c4:	b	4510 <sf_gen_portop+0xdc>
    44c8:	mov	r0, #0
    44cc:	mov	r1, r5
    44d0:	bl	459c <gen_portatom>
    44d4:	mov	r6, r0
    44d8:	mov	r0, #2
    44dc:	mov	r1, r5
    44e0:	bl	459c <gen_portatom>
    44e4:	mov	r5, r0
    44e8:	mov	r0, r6
    44ec:	mov	r1, r5
    44f0:	bl	316c <sf_gen_and>
    44f4:	b	4510 <sf_gen_portop+0xdc>
    44f8:	mov	r0, #0
    44fc:	b	4504 <sf_gen_portop+0xd0>
    4500:	mov	r0, #2
    4504:	mov	r1, r5
    4508:	bl	459c <gen_portatom>
    450c:	mov	r5, r0
    4510:	mov	r0, r4
    4514:	mov	r1, r5
    4518:	bl	316c <sf_gen_and>
    451c:	mov	r0, r5
    4520:	pop	{r4, r5, r6, r7, fp, pc}
    4524:	bl	fc4 <abort@plt>

00004528 <gen_cmp>:
    4528:	push	{fp, lr}
    452c:	mov	fp, sp
    4530:	sub	sp, sp, #16
    4534:	mov	ip, #0
    4538:	mov	lr, #16
    453c:	str	lr, [sp]
    4540:	str	ip, [sp, #4]
    4544:	str	r3, [sp, #8]
    4548:	mvn	r3, #0
    454c:	bl	941c <gen_ncmp>
    4550:	mov	sp, fp
    4554:	pop	{fp, pc}

00004558 <gen_ipfrag>:
    4558:	push	{r4, r5, fp, lr}
    455c:	add	fp, sp, #8
    4560:	mov	r0, #3
    4564:	mov	r1, #6
    4568:	mov	r2, #8
    456c:	bl	8800 <gen_load_a>
    4570:	mov	r4, r0
    4574:	mov	r0, #69	; 0x45
    4578:	bl	7c8c <new_block>
    457c:	mov	r5, r0
    4580:	movw	r0, #8191	; 0x1fff
    4584:	str	r0, [r5, #20]
    4588:	str	r4, [r5, #4]
    458c:	mov	r0, r5
    4590:	bl	3298 <sf_gen_not>
    4594:	mov	r0, r5
    4598:	pop	{r4, r5, fp, pc}

0000459c <gen_portatom>:
    459c:	mov	r3, r1
    45a0:	mov	r1, r0
    45a4:	mov	r0, #5
    45a8:	mov	r2, #8
    45ac:	b	4528 <gen_cmp>

000045b0 <sf_gen_portop6>:
    45b0:	push	{r4, r5, r6, sl, fp, lr}
    45b4:	add	fp, sp, #16
    45b8:	mov	r6, r2
    45bc:	mov	r3, r1
    45c0:	mov	r5, r0
    45c4:	mov	r0, #3
    45c8:	mov	r1, #6
    45cc:	mov	r2, #16
    45d0:	bl	4528 <gen_cmp>
    45d4:	cmp	r6, #4
    45d8:	bhi	468c <sf_gen_portop6+0xdc>
    45dc:	mov	r4, r0
    45e0:	add	r0, pc, #4
    45e4:	ldr	r1, [r0, r6, lsl #2]
    45e8:	add	pc, r0, r1
    45ec:	.word	0x00000014
    45f0:	.word	0x00000074
    45f4:	.word	0x0000007c
    45f8:	.word	0x00000014
    45fc:	.word	0x00000044
    4600:	mov	r0, #0
    4604:	mov	r1, r5
    4608:	bl	4690 <gen_portatom6>
    460c:	mov	r6, r0
    4610:	mov	r0, #2
    4614:	mov	r1, r5
    4618:	bl	4690 <gen_portatom6>
    461c:	mov	r5, r0
    4620:	mov	r0, r6
    4624:	mov	r1, r5
    4628:	bl	3244 <sf_gen_or>
    462c:	b	4678 <sf_gen_portop6+0xc8>
    4630:	mov	r0, #0
    4634:	mov	r1, r5
    4638:	bl	4690 <gen_portatom6>
    463c:	mov	r6, r0
    4640:	mov	r0, #2
    4644:	mov	r1, r5
    4648:	bl	4690 <gen_portatom6>
    464c:	mov	r5, r0
    4650:	mov	r0, r6
    4654:	mov	r1, r5
    4658:	bl	316c <sf_gen_and>
    465c:	b	4678 <sf_gen_portop6+0xc8>
    4660:	mov	r0, #0
    4664:	b	466c <sf_gen_portop6+0xbc>
    4668:	mov	r0, #2
    466c:	mov	r1, r5
    4670:	bl	4690 <gen_portatom6>
    4674:	mov	r5, r0
    4678:	mov	r0, r4
    467c:	mov	r1, r5
    4680:	bl	316c <sf_gen_and>
    4684:	mov	r0, r5
    4688:	pop	{r4, r5, r6, sl, fp, pc}
    468c:	bl	fc4 <abort@plt>

00004690 <gen_portatom6>:
    4690:	mov	r3, r1
    4694:	mov	r1, r0
    4698:	mov	r0, #6
    469c:	mov	r2, #8
    46a0:	b	4528 <gen_cmp>

000046a4 <sf_gen_portrangeop>:
    46a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    46a8:	add	fp, sp, #24
    46ac:	mov	r7, r3
    46b0:	mov	r3, r2
    46b4:	mov	r5, r1
    46b8:	mov	r6, r0
    46bc:	mov	r0, #3
    46c0:	mov	r1, #9
    46c4:	mov	r2, #16
    46c8:	bl	4528 <gen_cmp>
    46cc:	mov	r4, r0
    46d0:	bl	4558 <gen_ipfrag>
    46d4:	mov	r8, r0
    46d8:	mov	r0, r4
    46dc:	mov	r1, r8
    46e0:	bl	316c <sf_gen_and>
    46e4:	cmp	r7, #4
    46e8:	bhi	47ac <sf_gen_portrangeop+0x108>
    46ec:	add	r0, pc, #4
    46f0:	ldr	r1, [r0, r7, lsl #2]
    46f4:	add	pc, r0, r1
    46f8:	.word	0x00000014
    46fc:	.word	0x00000084
    4700:	.word	0x0000008c
    4704:	.word	0x00000014
    4708:	.word	0x0000004c
    470c:	mov	r0, #0
    4710:	mov	r1, r6
    4714:	mov	r2, r5
    4718:	bl	47b0 <gen_portrangeatom>
    471c:	mov	r4, r0
    4720:	mov	r0, #2
    4724:	mov	r1, r6
    4728:	mov	r2, r5
    472c:	bl	47b0 <gen_portrangeatom>
    4730:	mov	r5, r0
    4734:	mov	r0, r4
    4738:	mov	r1, r5
    473c:	bl	3244 <sf_gen_or>
    4740:	b	4798 <sf_gen_portrangeop+0xf4>
    4744:	mov	r0, #0
    4748:	mov	r1, r6
    474c:	mov	r2, r5
    4750:	bl	47b0 <gen_portrangeatom>
    4754:	mov	r4, r0
    4758:	mov	r0, #2
    475c:	mov	r1, r6
    4760:	mov	r2, r5
    4764:	bl	47b0 <gen_portrangeatom>
    4768:	mov	r5, r0
    476c:	mov	r0, r4
    4770:	mov	r1, r5
    4774:	bl	316c <sf_gen_and>
    4778:	b	4798 <sf_gen_portrangeop+0xf4>
    477c:	mov	r0, #0
    4780:	b	4788 <sf_gen_portrangeop+0xe4>
    4784:	mov	r0, #2
    4788:	mov	r1, r6
    478c:	mov	r2, r5
    4790:	bl	47b0 <gen_portrangeatom>
    4794:	mov	r5, r0
    4798:	mov	r0, r8
    479c:	mov	r1, r5
    47a0:	bl	316c <sf_gen_and>
    47a4:	mov	r0, r5
    47a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    47ac:	bl	fc4 <abort@plt>

000047b0 <gen_portrangeatom>:
    47b0:	push	{r4, r5, r6, r7, fp, lr}
    47b4:	add	fp, sp, #16
    47b8:	mov	r4, r2
    47bc:	mov	r5, r1
    47c0:	mov	r6, r0
    47c4:	cmp	r1, r2
    47c8:	mov	r3, r1
    47cc:	movgt	r3, r2
    47d0:	mov	r0, #5
    47d4:	mov	r1, r6
    47d8:	mov	r2, #8
    47dc:	bl	88fc <gen_cmp_ge>
    47e0:	mov	r7, r0
    47e4:	cmp	r5, r4
    47e8:	movgt	r4, r5
    47ec:	mov	r0, #5
    47f0:	mov	r1, r6
    47f4:	mov	r2, #8
    47f8:	mov	r3, r4
    47fc:	bl	ac90 <gen_cmp_le>
    4800:	mov	r4, r0
    4804:	mov	r0, r7
    4808:	mov	r1, r4
    480c:	bl	316c <sf_gen_and>
    4810:	mov	r0, r4
    4814:	pop	{r4, r5, r6, r7, fp, pc}

00004818 <sf_gen_portrangeop6>:
    4818:	push	{r4, r5, r6, r7, fp, lr}
    481c:	add	fp, sp, #16
    4820:	mov	r7, r3
    4824:	mov	r3, r2
    4828:	mov	r5, r1
    482c:	mov	r6, r0
    4830:	mov	r0, #3
    4834:	mov	r1, #6
    4838:	mov	r2, #16
    483c:	bl	4528 <gen_cmp>
    4840:	cmp	r7, #4
    4844:	bhi	490c <sf_gen_portrangeop6+0xf4>
    4848:	mov	r4, r0
    484c:	add	r0, pc, #4
    4850:	ldr	r1, [r0, r7, lsl #2]
    4854:	add	pc, r0, r1
    4858:	.word	0x00000014
    485c:	.word	0x00000084
    4860:	.word	0x0000008c
    4864:	.word	0x00000014
    4868:	.word	0x0000004c
    486c:	mov	r0, #0
    4870:	mov	r1, r6
    4874:	mov	r2, r5
    4878:	bl	4910 <gen_portrangeatom6>
    487c:	mov	r7, r0
    4880:	mov	r0, #2
    4884:	mov	r1, r6
    4888:	mov	r2, r5
    488c:	bl	4910 <gen_portrangeatom6>
    4890:	mov	r5, r0
    4894:	mov	r0, r7
    4898:	mov	r1, r5
    489c:	bl	3244 <sf_gen_or>
    48a0:	b	48f8 <sf_gen_portrangeop6+0xe0>
    48a4:	mov	r0, #0
    48a8:	mov	r1, r6
    48ac:	mov	r2, r5
    48b0:	bl	4910 <gen_portrangeatom6>
    48b4:	mov	r7, r0
    48b8:	mov	r0, #2
    48bc:	mov	r1, r6
    48c0:	mov	r2, r5
    48c4:	bl	4910 <gen_portrangeatom6>
    48c8:	mov	r5, r0
    48cc:	mov	r0, r7
    48d0:	mov	r1, r5
    48d4:	bl	316c <sf_gen_and>
    48d8:	b	48f8 <sf_gen_portrangeop6+0xe0>
    48dc:	mov	r0, #0
    48e0:	b	48e8 <sf_gen_portrangeop6+0xd0>
    48e4:	mov	r0, #2
    48e8:	mov	r1, r6
    48ec:	mov	r2, r5
    48f0:	bl	4910 <gen_portrangeatom6>
    48f4:	mov	r5, r0
    48f8:	mov	r0, r4
    48fc:	mov	r1, r5
    4900:	bl	316c <sf_gen_and>
    4904:	mov	r0, r5
    4908:	pop	{r4, r5, r6, r7, fp, pc}
    490c:	bl	fc4 <abort@plt>

00004910 <gen_portrangeatom6>:
    4910:	push	{r4, r5, r6, r7, fp, lr}
    4914:	add	fp, sp, #16
    4918:	mov	r4, r2
    491c:	mov	r5, r1
    4920:	mov	r6, r0
    4924:	cmp	r1, r2
    4928:	mov	r3, r1
    492c:	movgt	r3, r2
    4930:	mov	r0, #6
    4934:	mov	r1, r6
    4938:	mov	r2, #8
    493c:	bl	88fc <gen_cmp_ge>
    4940:	mov	r7, r0
    4944:	cmp	r5, r4
    4948:	movgt	r4, r5
    494c:	mov	r0, #6
    4950:	mov	r1, r6
    4954:	mov	r2, #8
    4958:	mov	r3, r4
    495c:	bl	ac90 <gen_cmp_le>
    4960:	mov	r4, r0
    4964:	mov	r0, r7
    4968:	mov	r1, r4
    496c:	bl	316c <sf_gen_and>
    4970:	mov	r0, r4
    4974:	pop	{r4, r5, r6, r7, fp, pc}

00004978 <sf_gen_scode>:
    4978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    497c:	add	fp, sp, #28
    4980:	sub	sp, sp, #44	; 0x2c
    4984:	uxtb	r9, r1
    4988:	ubfx	r6, r1, #16, #8
    498c:	ubfx	r5, r1, #8, #8
    4990:	cmp	r9, #7
    4994:	bhi	4fdc <sf_gen_scode+0x664>
    4998:	mov	r7, r0
    499c:	lsr	r0, r1, #8
    49a0:	add	r1, pc, #4
    49a4:	ldr	r2, [r1, r9, lsl #2]
    49a8:	add	pc, r1, r2
    49ac:	.word	0x00000020
    49b0:	.word	0x00000020
    49b4:	.word	0x00000174
    49b8:	.word	0x000001c8
    49bc:	.word	0x0000063c
    49c0:	.word	0x000002c0
    49c4:	.word	0x00000230
    49c8:	.word	0x00000254
    49cc:	uxtb	r0, r0
    49d0:	cmp	r0, #12
    49d4:	beq	4c94 <sf_gen_scode+0x31c>
    49d8:	cmp	r0, #1
    49dc:	bne	4cb8 <sf_gen_scode+0x340>
    49e0:	ldr	r0, [pc, #1844]	; 511c <sf_gen_scode+0x7a4>
    49e4:	ldr	r0, [pc, r0]
    49e8:	cmp	r0, #104	; 0x68
    49ec:	ble	4ed0 <sf_gen_scode+0x558>
    49f0:	sub	r1, r0, #105	; 0x69
    49f4:	cmp	r1, #58	; 0x3a
    49f8:	bhi	4f88 <sf_gen_scode+0x610>
    49fc:	add	r0, pc, #4
    4a00:	ldr	r1, [r0, r1, lsl #2]
    4a04:	add	pc, r0, r1
    4a08:	.word	0x000000ec
    4a0c:	.word	0x000006b8
    4a10:	.word	0x000006b8
    4a14:	.word	0x000006b8
    4a18:	.word	0x000006b8
    4a1c:	.word	0x000006b8
    4a20:	.word	0x000006b8
    4a24:	.word	0x000006b8
    4a28:	.word	0x000006b8
    4a2c:	.word	0x000006b8
    4a30:	.word	0x000006b8
    4a34:	.word	0x000006b8
    4a38:	.word	0x000006b8
    4a3c:	.word	0x000006b8
    4a40:	.word	0x000000ec
    4a44:	.word	0x000006b8
    4a48:	.word	0x000006b8
    4a4c:	.word	0x0000058c
    4a50:	.word	0x00000518
    4a54:	.word	0x000006b8
    4a58:	.word	0x000006b8
    4a5c:	.word	0x000006b8
    4a60:	.word	0x000000ec
    4a64:	.word	0x000006b8
    4a68:	.word	0x000006b8
    4a6c:	.word	0x000006b8
    4a70:	.word	0x000006b8
    4a74:	.word	0x000006b8
    4a78:	.word	0x000006b8
    4a7c:	.word	0x000006b8
    4a80:	.word	0x000006b8
    4a84:	.word	0x000006b8
    4a88:	.word	0x000006b8
    4a8c:	.word	0x000006b8
    4a90:	.word	0x000006b8
    4a94:	.word	0x000006b8
    4a98:	.word	0x000006b8
    4a9c:	.word	0x000006b8
    4aa0:	.word	0x000006b8
    4aa4:	.word	0x000006b8
    4aa8:	.word	0x000006b8
    4aac:	.word	0x000006b8
    4ab0:	.word	0x000006b8
    4ab4:	.word	0x000006b8
    4ab8:	.word	0x000006b8
    4abc:	.word	0x000006b8
    4ac0:	.word	0x000006b8
    4ac4:	.word	0x000006b8
    4ac8:	.word	0x000006b8
    4acc:	.word	0x000006b8
    4ad0:	.word	0x000006b8
    4ad4:	.word	0x000006b8
    4ad8:	.word	0x000006b8
    4adc:	.word	0x000006b8
    4ae0:	.word	0x000006b8
    4ae4:	.word	0x000006b8
    4ae8:	.word	0x000006b8
    4aec:	.word	0x000006b8
    4af0:	.word	0x000000ec
    4af4:	mov	r0, r7
    4af8:	bl	b940 <pcap_ether_hostton>
    4afc:	cmp	r0, #0
    4b00:	beq	50cc <sf_gen_scode+0x754>
    4b04:	mov	r4, r0
    4b08:	mov	r1, r6
    4b0c:	bl	5798 <gen_wlanhostop>
    4b10:	mov	r8, r0
    4b14:	mov	r0, r4
    4b18:	bl	e5c <free@plt>
    4b1c:	b	4ec4 <sf_gen_scode+0x54c>
    4b20:	mov	r0, r7
    4b24:	bl	b4d0 <pcap_nametonetaddr>
    4b28:	cmp	r0, #0
    4b2c:	beq	5008 <sf_gen_scode+0x690>
    4b30:	sub	r2, r0, #1
    4b34:	mvn	r1, #0
    4b38:	movw	r3, #65534	; 0xfffe
    4b3c:	movt	r3, #255	; 0xff
    4b40:	cmp	r2, r3
    4b44:	bhi	4b68 <sf_gen_scode+0x1f0>
    4b48:	mvn	r2, #0
    4b4c:	mvn	r3, #-16777216	; 0xff000000
    4b50:	mvn	r1, #0
    4b54:	add	r7, r2, r0, lsl #8
    4b58:	lsl	r1, r1, #8
    4b5c:	lsl	r0, r0, #8
    4b60:	cmp	r7, r3
    4b64:	bcc	4b54 <sf_gen_scode+0x1dc>
    4b68:	str	r9, [sp]
    4b6c:	mov	r2, r5
    4b70:	b	4ca8 <sf_gen_scode+0x330>
    4b74:	mvn	r1, #4
    4b78:	uxtab	r1, r1, r0
    4b7c:	uxtb	r4, r0
    4b80:	cmp	r1, #3
    4b84:	bcc	4b90 <sf_gen_scode+0x218>
    4b88:	cmp	r4, #0
    4b8c:	bne	5018 <sf_gen_scode+0x6a0>
    4b90:	add	r1, sp, #24
    4b94:	add	r2, sp, #20
    4b98:	mov	r0, r7
    4b9c:	bl	b4ec <pcap_nametoport>
    4ba0:	cmp	r0, #0
    4ba4:	beq	5024 <sf_gen_scode+0x6ac>
    4ba8:	cmp	r4, #5
    4bac:	beq	4e14 <sf_gen_scode+0x49c>
    4bb0:	cmp	r4, #6
    4bb4:	beq	4df8 <sf_gen_scode+0x480>
    4bb8:	cmp	r4, #7
    4bbc:	bne	4e30 <sf_gen_scode+0x4b8>
    4bc0:	ldr	r0, [sp, #20]
    4bc4:	cmp	r0, #132	; 0x84
    4bc8:	beq	5060 <sf_gen_scode+0x6e8>
    4bcc:	cmp	r0, #6
    4bd0:	beq	5070 <sf_gen_scode+0x6f8>
    4bd4:	mov	r0, #17
    4bd8:	b	4e2c <sf_gen_scode+0x4b4>
    4bdc:	mov	r0, r7
    4be0:	mov	r1, r5
    4be4:	bl	6648 <lookup_proto>
    4be8:	str	r0, [sp, #20]
    4bec:	cmp	r0, #0
    4bf0:	bmi	4ff8 <sf_gen_scode+0x680>
    4bf4:	mov	r1, r5
    4bf8:	bl	67ac <gen_protochain>
    4bfc:	b	4cb0 <sf_gen_scode+0x338>
    4c00:	mvn	r1, #4
    4c04:	uxtab	r1, r1, r0
    4c08:	uxtb	r4, r0
    4c0c:	cmp	r1, #3
    4c10:	bcc	4c1c <sf_gen_scode+0x2a4>
    4c14:	cmp	r4, #0
    4c18:	bne	5034 <sf_gen_scode+0x6bc>
    4c1c:	add	r1, sp, #24
    4c20:	add	r2, sp, #16
    4c24:	add	r3, sp, #20
    4c28:	mov	r0, r7
    4c2c:	bl	b5a8 <pcap_nametoportrange>
    4c30:	cmp	r0, #0
    4c34:	beq	5040 <sf_gen_scode+0x6c8>
    4c38:	cmp	r4, #5
    4c3c:	beq	4e74 <sf_gen_scode+0x4fc>
    4c40:	cmp	r4, #6
    4c44:	beq	4e58 <sf_gen_scode+0x4e0>
    4c48:	cmp	r4, #7
    4c4c:	bne	4e90 <sf_gen_scode+0x518>
    4c50:	ldr	r0, [sp, #20]
    4c54:	cmp	r0, #132	; 0x84
    4c58:	beq	5090 <sf_gen_scode+0x718>
    4c5c:	cmp	r0, #6
    4c60:	beq	50a0 <sf_gen_scode+0x728>
    4c64:	mov	r0, #17
    4c68:	b	4e8c <sf_gen_scode+0x514>
    4c6c:	mov	r0, r7
    4c70:	mov	r1, r5
    4c74:	bl	6648 <lookup_proto>
    4c78:	str	r0, [sp, #20]
    4c7c:	cmp	r0, #0
    4c80:	bmi	4ff8 <sf_gen_scode+0x680>
    4c84:	mov	r1, r5
    4c88:	mov	r2, r6
    4c8c:	bl	3724 <gen_proto>
    4c90:	b	4cb0 <sf_gen_scode+0x338>
    4c94:	mov	r0, r7
    4c98:	bl	ba3c <__pcap_nametodnaddr>
    4c9c:	str	r9, [sp]
    4ca0:	mov	r1, #0
    4ca4:	mov	r2, #12
    4ca8:	mov	r3, r6
    4cac:	bl	518c <gen_host>
    4cb0:	mov	r8, r0
    4cb4:	b	4ec4 <sf_gen_scode+0x54c>
    4cb8:	mov	r4, r6
    4cbc:	mvn	r0, #0
    4cc0:	str	r0, [sp, #36]	; 0x24
    4cc4:	str	r0, [sp, #32]
    4cc8:	str	r0, [sp, #28]
    4ccc:	str	r0, [sp, #24]
    4cd0:	str	r7, [sp, #8]
    4cd4:	mov	r0, r7
    4cd8:	bl	b470 <pcap_nametoaddrinfo>
    4cdc:	cmp	r0, #0
    4ce0:	beq	5050 <sf_gen_scode+0x6d8>
    4ce4:	ldr	r1, [pc, #1084]	; 5128 <sf_gen_scode+0x7b0>
    4ce8:	add	r1, pc, r1
    4cec:	str	r0, [r1]
    4cf0:	ldr	r1, [pc, #1076]	; 512c <sf_gen_scode+0x7b4>
    4cf4:	ldr	r1, [pc, r1]
    4cf8:	mvn	r1, r1
    4cfc:	orrs	r1, r5, r1
    4d00:	mov	r6, r5
    4d04:	movweq	r6, #2
    4d08:	str	r5, [sp, #4]
    4d0c:	movweq	r5, #17
    4d10:	mov	r8, #0
    4d14:	str	r0, [sp, #12]
    4d18:	mov	sl, r0
    4d1c:	b	4d44 <sf_gen_scode+0x3cc>
    4d20:	mov	r7, r0
    4d24:	cmp	r8, #0
    4d28:	movne	r0, r8
    4d2c:	movne	r1, r7
    4d30:	blne	3244 <sf_gen_or>
    4d34:	mov	r8, r7
    4d38:	ldr	sl, [sl, #28]
    4d3c:	cmp	sl, #0
    4d40:	beq	4dac <sf_gen_scode+0x434>
    4d44:	ldr	r0, [sl, #4]
    4d48:	cmp	r0, #10
    4d4c:	beq	4d84 <sf_gen_scode+0x40c>
    4d50:	cmp	r0, #2
    4d54:	bne	4d38 <sf_gen_scode+0x3c0>
    4d58:	cmp	r6, #17
    4d5c:	beq	4d38 <sf_gen_scode+0x3c0>
    4d60:	ldr	r0, [sl, #20]
    4d64:	ldr	r0, [r0, #4]
    4d68:	bl	5dac <__bswap_32>
    4d6c:	str	r9, [sp]
    4d70:	mvn	r1, #0
    4d74:	mov	r2, r6
    4d78:	mov	r3, r4
    4d7c:	bl	518c <gen_host>
    4d80:	b	4d20 <sf_gen_scode+0x3a8>
    4d84:	cmp	r5, #2
    4d88:	beq	4d38 <sf_gen_scode+0x3c0>
    4d8c:	ldr	r0, [sl, #20]
    4d90:	str	r9, [sp]
    4d94:	add	r0, r0, #8
    4d98:	add	r1, sp, #24
    4d9c:	mov	r2, r5
    4da0:	mov	r3, r4
    4da4:	bl	5db4 <gen_host6>
    4da8:	b	4d20 <sf_gen_scode+0x3a8>
    4dac:	mov	r0, #0
    4db0:	ldr	r1, [pc, #888]	; 5130 <sf_gen_scode+0x7b8>
    4db4:	add	r1, pc, r1
    4db8:	str	r0, [r1]
    4dbc:	ldr	r0, [sp, #12]
    4dc0:	bl	f94 <freeaddrinfo@plt>
    4dc4:	cmp	r8, #0
    4dc8:	bne	4ec4 <sf_gen_scode+0x54c>
    4dcc:	ldr	r0, [pc, #864]	; 5134 <sf_gen_scode+0x7bc>
    4dd0:	add	r0, pc, r0
    4dd4:	ldr	r2, [pc, #860]	; 5138 <sf_gen_scode+0x7c0>
    4dd8:	add	r2, pc, r2
    4ddc:	ldr	r1, [sp, #4]
    4de0:	cmp	r1, #0
    4de4:	moveq	r2, r0
    4de8:	ldr	r0, [pc, #844]	; 513c <sf_gen_scode+0x7c4>
    4dec:	add	r0, pc, r0
    4df0:	ldr	r1, [sp, #8]
    4df4:	bl	1fc4 <sf_bpf_error>
    4df8:	ldr	r0, [sp, #20]
    4dfc:	cmp	r0, #132	; 0x84
    4e00:	beq	5060 <sf_gen_scode+0x6e8>
    4e04:	cmp	r0, #17
    4e08:	beq	5080 <sf_gen_scode+0x708>
    4e0c:	mov	r0, #6
    4e10:	b	4e2c <sf_gen_scode+0x4b4>
    4e14:	ldr	r0, [sp, #20]
    4e18:	cmp	r0, #6
    4e1c:	beq	5070 <sf_gen_scode+0x6f8>
    4e20:	cmp	r0, #17
    4e24:	beq	5080 <sf_gen_scode+0x708>
    4e28:	mov	r0, #132	; 0x84
    4e2c:	str	r0, [sp, #20]
    4e30:	ldr	r1, [sp, #20]
    4e34:	ldr	r0, [sp, #24]
    4e38:	mov	r2, r6
    4e3c:	bl	6320 <gen_port>
    4e40:	mov	r8, r0
    4e44:	ldr	r0, [sp, #24]
    4e48:	ldr	r1, [sp, #20]
    4e4c:	mov	r2, r6
    4e50:	bl	63e0 <gen_port6>
    4e54:	b	4ebc <sf_gen_scode+0x544>
    4e58:	ldr	r0, [sp, #20]
    4e5c:	cmp	r0, #132	; 0x84
    4e60:	beq	5090 <sf_gen_scode+0x718>
    4e64:	cmp	r0, #17
    4e68:	beq	50b0 <sf_gen_scode+0x738>
    4e6c:	mov	r0, #6
    4e70:	b	4e8c <sf_gen_scode+0x514>
    4e74:	ldr	r0, [sp, #20]
    4e78:	cmp	r0, #6
    4e7c:	beq	50a0 <sf_gen_scode+0x728>
    4e80:	cmp	r0, #17
    4e84:	beq	50b0 <sf_gen_scode+0x738>
    4e88:	mov	r0, #132	; 0x84
    4e8c:	str	r0, [sp, #20]
    4e90:	ldr	r2, [sp, #20]
    4e94:	ldr	r1, [sp, #16]
    4e98:	ldr	r0, [sp, #24]
    4e9c:	mov	r3, r6
    4ea0:	bl	64a0 <gen_portrange>
    4ea4:	mov	r8, r0
    4ea8:	ldr	r0, [sp, #24]
    4eac:	ldr	r1, [sp, #16]
    4eb0:	ldr	r2, [sp, #20]
    4eb4:	mov	r3, r6
    4eb8:	bl	6574 <gen_portrange6>
    4ebc:	mov	r1, r8
    4ec0:	bl	3244 <sf_gen_or>
    4ec4:	mov	r0, r8
    4ec8:	sub	sp, fp, #28
    4ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ed0:	cmp	r0, #1
    4ed4:	beq	4f00 <sf_gen_scode+0x588>
    4ed8:	cmp	r0, #6
    4edc:	bne	4fb4 <sf_gen_scode+0x63c>
    4ee0:	mov	r0, r7
    4ee4:	bl	b940 <pcap_ether_hostton>
    4ee8:	cmp	r0, #0
    4eec:	beq	50ec <sf_gen_scode+0x774>
    4ef0:	mov	r4, r0
    4ef4:	mov	r1, r6
    4ef8:	bl	56d8 <gen_thostop>
    4efc:	b	4b10 <sf_gen_scode+0x198>
    4f00:	mov	r0, r7
    4f04:	bl	b940 <pcap_ether_hostton>
    4f08:	cmp	r0, #0
    4f0c:	beq	50dc <sf_gen_scode+0x764>
    4f10:	mov	r4, r0
    4f14:	mov	r1, r6
    4f18:	bl	5544 <gen_ehostop>
    4f1c:	b	4b10 <sf_gen_scode+0x198>
    4f20:	ldr	r0, [pc, #508]	; 5124 <sf_gen_scode+0x7ac>
    4f24:	add	r0, pc, r0
    4f28:	ldrb	r0, [r0]
    4f2c:	cmp	r0, #1
    4f30:	bne	50c0 <sf_gen_scode+0x748>
    4f34:	mov	r0, #1
    4f38:	mov	r1, #4
    4f3c:	mov	r2, #8
    4f40:	mov	r3, #65280	; 0xff00
    4f44:	bl	4528 <gen_cmp>
    4f48:	mov	r4, r0
    4f4c:	bl	3298 <sf_gen_not>
    4f50:	mov	r0, r7
    4f54:	bl	b940 <pcap_ether_hostton>
    4f58:	cmp	r0, #0
    4f5c:	beq	50dc <sf_gen_scode+0x764>
    4f60:	mov	r5, r0
    4f64:	mov	r1, r6
    4f68:	bl	5544 <gen_ehostop>
    4f6c:	mov	r8, r0
    4f70:	mov	r0, r4
    4f74:	mov	r1, r8
    4f78:	bl	316c <sf_gen_and>
    4f7c:	mov	r0, r5
    4f80:	bl	e5c <free@plt>
    4f84:	b	4ec4 <sf_gen_scode+0x54c>
    4f88:	cmp	r0, #192	; 0xc0
    4f8c:	beq	4af4 <sf_gen_scode+0x17c>
    4f90:	b	50c0 <sf_gen_scode+0x748>
    4f94:	mov	r0, r7
    4f98:	bl	b940 <pcap_ether_hostton>
    4f9c:	cmp	r0, #0
    4fa0:	beq	50fc <sf_gen_scode+0x784>
    4fa4:	mov	r4, r0
    4fa8:	mov	r1, r6
    4fac:	bl	5cec <gen_ipfchostop>
    4fb0:	b	4b10 <sf_gen_scode+0x198>
    4fb4:	cmp	r0, #10
    4fb8:	bne	50c0 <sf_gen_scode+0x748>
    4fbc:	mov	r0, r7
    4fc0:	bl	b940 <pcap_ether_hostton>
    4fc4:	cmp	r0, #0
    4fc8:	beq	510c <sf_gen_scode+0x794>
    4fcc:	mov	r4, r0
    4fd0:	mov	r1, r6
    4fd4:	bl	5618 <gen_fhostop>
    4fd8:	b	4b10 <sf_gen_scode+0x198>
    4fdc:	cmp	r9, #255	; 0xff
    4fe0:	bne	4ff4 <sf_gen_scode+0x67c>
    4fe4:	bl	2f78 <syntax>
    4fe8:	ldr	r0, [pc, #352]	; 5150 <sf_gen_scode+0x7d8>
    4fec:	add	r0, pc, r0
    4ff0:	bl	1fc4 <sf_bpf_error>
    4ff4:	bl	fc4 <abort@plt>
    4ff8:	ldr	r0, [pc, #340]	; 5154 <sf_gen_scode+0x7dc>
    4ffc:	add	r0, pc, r0
    5000:	mov	r1, r7
    5004:	bl	1fc4 <sf_bpf_error>
    5008:	ldr	r0, [pc, #328]	; 5158 <sf_gen_scode+0x7e0>
    500c:	add	r0, pc, r0
    5010:	mov	r1, r7
    5014:	bl	1fc4 <sf_bpf_error>
    5018:	ldr	r0, [pc, #340]	; 5174 <sf_gen_scode+0x7fc>
    501c:	add	r0, pc, r0
    5020:	bl	1fc4 <sf_bpf_error>
    5024:	ldr	r0, [pc, #332]	; 5178 <sf_gen_scode+0x800>
    5028:	add	r0, pc, r0
    502c:	mov	r1, r7
    5030:	bl	1fc4 <sf_bpf_error>
    5034:	ldr	r0, [pc, #320]	; 517c <sf_gen_scode+0x804>
    5038:	add	r0, pc, r0
    503c:	bl	1fc4 <sf_bpf_error>
    5040:	ldr	r0, [pc, #312]	; 5180 <sf_gen_scode+0x808>
    5044:	add	r0, pc, r0
    5048:	mov	r1, r7
    504c:	bl	1fc4 <sf_bpf_error>
    5050:	ldr	r0, [pc, #280]	; 5170 <sf_gen_scode+0x7f8>
    5054:	add	r0, pc, r0
    5058:	ldr	r1, [sp, #8]
    505c:	bl	1fc4 <sf_bpf_error>
    5060:	ldr	r0, [pc, #220]	; 5144 <sf_gen_scode+0x7cc>
    5064:	add	r0, pc, r0
    5068:	mov	r1, r7
    506c:	bl	1fc4 <sf_bpf_error>
    5070:	ldr	r0, [pc, #268]	; 5184 <sf_gen_scode+0x80c>
    5074:	add	r0, pc, r0
    5078:	mov	r1, r7
    507c:	bl	1fc4 <sf_bpf_error>
    5080:	ldr	r0, [pc, #184]	; 5140 <sf_gen_scode+0x7c8>
    5084:	add	r0, pc, r0
    5088:	mov	r1, r7
    508c:	bl	1fc4 <sf_bpf_error>
    5090:	ldr	r0, [pc, #180]	; 514c <sf_gen_scode+0x7d4>
    5094:	add	r0, pc, r0
    5098:	mov	r1, r7
    509c:	bl	1fc4 <sf_bpf_error>
    50a0:	ldr	r0, [pc, #224]	; 5188 <sf_gen_scode+0x810>
    50a4:	add	r0, pc, r0
    50a8:	mov	r1, r7
    50ac:	bl	1fc4 <sf_bpf_error>
    50b0:	ldr	r0, [pc, #144]	; 5148 <sf_gen_scode+0x7d0>
    50b4:	add	r0, pc, r0
    50b8:	mov	r1, r7
    50bc:	bl	1fc4 <sf_bpf_error>
    50c0:	ldr	r0, [pc, #88]	; 5120 <sf_gen_scode+0x7a8>
    50c4:	add	r0, pc, r0
    50c8:	bl	1fc4 <sf_bpf_error>
    50cc:	ldr	r0, [pc, #148]	; 5168 <sf_gen_scode+0x7f0>
    50d0:	add	r0, pc, r0
    50d4:	mov	r1, r7
    50d8:	bl	1fc4 <sf_bpf_error>
    50dc:	ldr	r0, [pc, #120]	; 515c <sf_gen_scode+0x7e4>
    50e0:	add	r0, pc, r0
    50e4:	mov	r1, r7
    50e8:	bl	1fc4 <sf_bpf_error>
    50ec:	ldr	r0, [pc, #112]	; 5164 <sf_gen_scode+0x7ec>
    50f0:	add	r0, pc, r0
    50f4:	mov	r1, r7
    50f8:	bl	1fc4 <sf_bpf_error>
    50fc:	ldr	r0, [pc, #104]	; 516c <sf_gen_scode+0x7f4>
    5100:	add	r0, pc, r0
    5104:	mov	r1, r7
    5108:	bl	1fc4 <sf_bpf_error>
    510c:	ldr	r0, [pc, #76]	; 5160 <sf_gen_scode+0x7e8>
    5110:	add	r0, pc, r0
    5114:	mov	r1, r7
    5118:	bl	1fc4 <sf_bpf_error>
    511c:	.word	0x0002bbbc
    5120:	.word	0x0000d4d6
    5124:	.word	0x0002b680
    5128:	.word	0x0002b8ac
    512c:	.word	0x0002b8b4
    5130:	.word	0x0002b7e0
    5134:	.word	0x0000d630
    5138:	.word	0x0000d842
    513c:	.word	0x0000d81a
    5140:	.word	0x0000d605
    5144:	.word	0x0000d613
    5148:	.word	0x0000d657
    514c:	.word	0x0000d65c
    5150:	.word	0x0000d739
    5154:	.word	0x0000d757
    5158:	.word	0x0000d4f4
    515c:	.word	0x0000d435
    5160:	.word	0x0000d41d
    5164:	.word	0x0000d454
    5168:	.word	0x0000d491
    516c:	.word	0x0000d47a
    5170:	.word	0x0000d5a0
    5174:	.word	0x0000d61c
    5178:	.word	0x0000d62c
    517c:	.word	0x0000d662
    5180:	.word	0x0000d677
    5184:	.word	0x0000d5f2
    5188:	.word	0x0000d632

0000518c <gen_host>:
    518c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5190:	add	fp, sp, #24
    5194:	sub	sp, sp, #8
    5198:	mov	r5, r1
    519c:	mov	r6, r0
    51a0:	ldr	r7, [fp, #8]
    51a4:	ldr	r0, [pc, #804]	; 54d0 <gen_host+0x344>
    51a8:	add	r0, pc, r0
    51ac:	ldr	r1, [pc, #800]	; 54d4 <gen_host+0x348>
    51b0:	add	r1, pc, r1
    51b4:	cmp	r7, #2
    51b8:	moveq	r1, r0
    51bc:	cmp	r2, #40	; 0x28
    51c0:	bhi	5394 <gen_host+0x208>
    51c4:	mov	r4, r3
    51c8:	add	r0, pc, #4
    51cc:	ldr	r2, [r0, r2, lsl #2]
    51d0:	add	pc, r0, r2
    51d4:	.word	0x000000a4
    51d8:	.word	0x000001c0
    51dc:	.word	0x00000100
    51e0:	.word	0x00000124
    51e4:	.word	0x000000dc
    51e8:	.word	0x000002a8
    51ec:	.word	0x000002b4
    51f0:	.word	0x000002c0
    51f4:	.word	0x000002cc
    51f8:	.word	0x000002d8
    51fc:	.word	0x000002e4
    5200:	.word	0x000002f0
    5204:	.word	0x00000150
    5208:	.word	0x000001c4
    520c:	.word	0x000001d0
    5210:	.word	0x000001dc
    5214:	.word	0x000001e8
    5218:	.word	0x000001f4
    521c:	.word	0x00000200
    5220:	.word	0x0000020c
    5224:	.word	0x00000218
    5228:	.word	0x00000224
    522c:	.word	0x00000230
    5230:	.word	0x0000023c
    5234:	.word	0x00000248
    5238:	.word	0x00000254
    523c:	.word	0x00000260
    5240:	.word	0x0000026c
    5244:	.word	0x00000278
    5248:	.word	0x00000284
    524c:	.word	0x00000290
    5250:	.word	0x000001c0
    5254:	.word	0x000001c0
    5258:	.word	0x000001c0
    525c:	.word	0x000001c0
    5260:	.word	0x000001c0
    5264:	.word	0x000001c0
    5268:	.word	0x000001c0
    526c:	.word	0x000001c0
    5270:	.word	0x000001c0
    5274:	.word	0x0000029c
    5278:	str	r7, [sp]
    527c:	mov	r0, r6
    5280:	mov	r1, r5
    5284:	mov	r2, #2
    5288:	mov	r3, r4
    528c:	bl	518c <gen_host>
    5290:	mov	r9, r0
    5294:	ldr	r0, [pc, #572]	; 54d8 <gen_host+0x34c>
    5298:	ldr	r0, [pc, r0]
    529c:	cmp	r0, #0
    52a0:	beq	5338 <gen_host+0x1ac>
    52a4:	mov	r0, r9
    52a8:	sub	sp, fp, #24
    52ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    52b0:	mov	r0, #24
    52b4:	mov	r1, #14
    52b8:	str	r1, [sp]
    52bc:	str	r0, [sp, #4]
    52c0:	mov	r0, r6
    52c4:	mov	r1, r5
    52c8:	mov	r2, r4
    52cc:	movw	r3, #32821	; 0x8035
    52d0:	b	5318 <gen_host+0x18c>
    52d4:	mov	r0, #16
    52d8:	mov	r1, #12
    52dc:	str	r1, [sp]
    52e0:	str	r0, [sp, #4]
    52e4:	mov	r0, r6
    52e8:	mov	r1, r5
    52ec:	mov	r2, r4
    52f0:	mov	r3, #2048	; 0x800
    52f4:	b	5318 <gen_host+0x18c>
    52f8:	mov	r0, #24
    52fc:	mov	r1, #14
    5300:	str	r1, [sp]
    5304:	str	r0, [sp, #4]
    5308:	mov	r0, r6
    530c:	mov	r1, r5
    5310:	mov	r2, r4
    5314:	movw	r3, #2054	; 0x806
    5318:	bl	acc0 <gen_hostop>
    531c:	sub	sp, fp, #24
    5320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5324:	mov	r0, r6
    5328:	mov	r1, r4
    532c:	sub	sp, fp, #24
    5330:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5334:	b	add8 <gen_dnhostop>
    5338:	str	r7, [sp]
    533c:	mov	r0, r6
    5340:	mov	r1, r5
    5344:	mov	r2, #3
    5348:	mov	r3, r4
    534c:	bl	518c <gen_host>
    5350:	mov	r8, r0
    5354:	mov	r0, r9
    5358:	mov	r1, r8
    535c:	bl	3244 <sf_gen_or>
    5360:	str	r7, [sp]
    5364:	mov	r0, r6
    5368:	mov	r1, r5
    536c:	mov	r2, #4
    5370:	mov	r3, r4
    5374:	bl	518c <gen_host>
    5378:	mov	r4, r0
    537c:	mov	r0, r8
    5380:	mov	r1, r4
    5384:	bl	3244 <sf_gen_or>
    5388:	mov	r0, r4
    538c:	sub	sp, fp, #24
    5390:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5394:	bl	fc4 <abort@plt>
    5398:	ldr	r0, [pc, #360]	; 5508 <gen_host+0x37c>
    539c:	add	r0, pc, r0
    53a0:	bl	1fc4 <sf_bpf_error>
    53a4:	ldr	r0, [pc, #344]	; 5504 <gen_host+0x378>
    53a8:	add	r0, pc, r0
    53ac:	bl	1fc4 <sf_bpf_error>
    53b0:	ldr	r0, [pc, #344]	; 5510 <gen_host+0x384>
    53b4:	add	r0, pc, r0
    53b8:	bl	1fc4 <sf_bpf_error>
    53bc:	ldr	r0, [pc, #328]	; 550c <gen_host+0x380>
    53c0:	add	r0, pc, r0
    53c4:	bl	1fc4 <sf_bpf_error>
    53c8:	ldr	r0, [pc, #324]	; 5514 <gen_host+0x388>
    53cc:	add	r0, pc, r0
    53d0:	bl	1fc4 <sf_bpf_error>
    53d4:	ldr	r0, [pc, #316]	; 5518 <gen_host+0x38c>
    53d8:	add	r0, pc, r0
    53dc:	bl	1fc4 <sf_bpf_error>
    53e0:	ldr	r0, [pc, #308]	; 551c <gen_host+0x390>
    53e4:	add	r0, pc, r0
    53e8:	bl	1fc4 <sf_bpf_error>
    53ec:	ldr	r0, [pc, #300]	; 5520 <gen_host+0x394>
    53f0:	add	r0, pc, r0
    53f4:	bl	1fc4 <sf_bpf_error>
    53f8:	ldr	r0, [pc, #244]	; 54f4 <gen_host+0x368>
    53fc:	add	r0, pc, r0
    5400:	bl	1fc4 <sf_bpf_error>
    5404:	ldr	r0, [pc, #236]	; 54f8 <gen_host+0x36c>
    5408:	add	r0, pc, r0
    540c:	bl	1fc4 <sf_bpf_error>
    5410:	ldr	r0, [pc, #232]	; 5500 <gen_host+0x374>
    5414:	add	r0, pc, r0
    5418:	bl	1fc4 <sf_bpf_error>
    541c:	ldr	r0, [pc, #256]	; 5524 <gen_host+0x398>
    5420:	add	r0, pc, r0
    5424:	bl	1fc4 <sf_bpf_error>
    5428:	ldr	r0, [pc, #248]	; 5528 <gen_host+0x39c>
    542c:	add	r0, pc, r0
    5430:	bl	1fc4 <sf_bpf_error>
    5434:	ldr	r0, [pc, #240]	; 552c <gen_host+0x3a0>
    5438:	add	r0, pc, r0
    543c:	bl	1fc4 <sf_bpf_error>
    5440:	ldr	r0, [pc, #232]	; 5530 <gen_host+0x3a4>
    5444:	add	r0, pc, r0
    5448:	bl	1fc4 <sf_bpf_error>
    544c:	ldr	r0, [pc, #224]	; 5534 <gen_host+0x3a8>
    5450:	add	r0, pc, r0
    5454:	bl	1fc4 <sf_bpf_error>
    5458:	ldr	r0, [pc, #216]	; 5538 <gen_host+0x3ac>
    545c:	add	r0, pc, r0
    5460:	bl	1fc4 <sf_bpf_error>
    5464:	ldr	r0, [pc, #208]	; 553c <gen_host+0x3b0>
    5468:	add	r0, pc, r0
    546c:	bl	1fc4 <sf_bpf_error>
    5470:	ldr	r0, [pc, #200]	; 5540 <gen_host+0x3b4>
    5474:	add	r0, pc, r0
    5478:	bl	1fc4 <sf_bpf_error>
    547c:	ldr	r0, [pc, #92]	; 54e0 <gen_host+0x354>
    5480:	add	r0, pc, r0
    5484:	bl	1fc4 <sf_bpf_error>
    5488:	ldr	r0, [pc, #76]	; 54dc <gen_host+0x350>
    548c:	add	r0, pc, r0
    5490:	bl	1fc4 <sf_bpf_error>
    5494:	ldr	r0, [pc, #72]	; 54e4 <gen_host+0x358>
    5498:	add	r0, pc, r0
    549c:	bl	1fc4 <sf_bpf_error>
    54a0:	ldr	r0, [pc, #64]	; 54e8 <gen_host+0x35c>
    54a4:	add	r0, pc, r0
    54a8:	bl	1fc4 <sf_bpf_error>
    54ac:	ldr	r0, [pc, #56]	; 54ec <gen_host+0x360>
    54b0:	add	r0, pc, r0
    54b4:	bl	1fc4 <sf_bpf_error>
    54b8:	ldr	r0, [pc, #48]	; 54f0 <gen_host+0x364>
    54bc:	add	r0, pc, r0
    54c0:	bl	1fc4 <sf_bpf_error>
    54c4:	ldr	r0, [pc, #48]	; 54fc <gen_host+0x370>
    54c8:	add	r0, pc, r0
    54cc:	bl	1fc4 <sf_bpf_error>
    54d0:	.word	0x0000da38
    54d4:	.word	0x0000e5a6
    54d8:	.word	0x0002afac
    54dc:	.word	0x0000e0e7
    54e0:	.word	0x0000e110
    54e4:	.word	0x0000e116
    54e8:	.word	0x0000e127
    54ec:	.word	0x0000e139
    54f0:	.word	0x0000e14b
    54f4:	.word	0x0000e229
    54f8:	.word	0x0000e23a
    54fc:	.word	0x0000e198
    5500:	.word	0x0000e271
    5504:	.word	0x0000e301
    5508:	.word	0x0000e330
    550c:	.word	0x0000e32f
    5510:	.word	0x0000e360
    5514:	.word	0x0000e36d
    5518:	.word	0x0000e383
    551c:	.word	0x0000e396
    5520:	.word	0x0000e3a6
    5524:	.word	0x0000e393
    5528:	.word	0x0000e3aa
    552c:	.word	0x0000e3bc
    5530:	.word	0x0000e3ce
    5534:	.word	0x0000e3e0
    5538:	.word	0x0000e3f1
    553c:	.word	0x0000e408
    5540:	.word	0x0000e41d

00005544 <gen_ehostop>:
    5544:	push	{r4, r5, fp, lr}
    5548:	add	fp, sp, #8
    554c:	cmp	r1, #4
    5550:	bhi	560c <gen_ehostop+0xc8>
    5554:	mov	r4, r0
    5558:	add	r0, pc, #4
    555c:	ldr	r1, [r0, r1, lsl #2]
    5560:	add	pc, r0, r1
    5564:	.word	0x00000014
    5568:	.word	0x0000007c
    556c:	.word	0x0000008c
    5570:	.word	0x00000014
    5574:	.word	0x00000048
    5578:	mov	r0, r4
    557c:	mov	r1, #1
    5580:	bl	5544 <gen_ehostop>
    5584:	mov	r5, r0
    5588:	mov	r0, r4
    558c:	mov	r1, #2
    5590:	bl	5544 <gen_ehostop>
    5594:	mov	r4, r0
    5598:	mov	r0, r5
    559c:	mov	r1, r4
    55a0:	bl	3244 <sf_gen_or>
    55a4:	mov	r0, r4
    55a8:	pop	{r4, r5, fp, pc}
    55ac:	mov	r0, r4
    55b0:	mov	r1, #1
    55b4:	bl	5544 <gen_ehostop>
    55b8:	mov	r5, r0
    55bc:	mov	r0, r4
    55c0:	mov	r1, #2
    55c4:	bl	5544 <gen_ehostop>
    55c8:	mov	r4, r0
    55cc:	mov	r0, r5
    55d0:	mov	r1, r4
    55d4:	bl	316c <sf_gen_and>
    55d8:	mov	r0, r4
    55dc:	pop	{r4, r5, fp, pc}
    55e0:	ldr	r0, [pc, #44]	; 5614 <gen_ehostop+0xd0>
    55e4:	ldr	r0, [pc, r0]
    55e8:	add	r1, r0, #6
    55ec:	b	55f8 <gen_ehostop+0xb4>
    55f0:	ldr	r1, [pc, #24]	; 5610 <gen_ehostop+0xcc>
    55f4:	ldr	r1, [pc, r1]
    55f8:	mov	r0, #1
    55fc:	mov	r2, #6
    5600:	mov	r3, r4
    5604:	pop	{r4, r5, fp, lr}
    5608:	b	ab38 <gen_bcmp>
    560c:	bl	fc4 <abort@plt>
    5610:	.word	0x0002afc4
    5614:	.word	0x0002afd4

00005618 <gen_fhostop>:
    5618:	push	{r4, r5, fp, lr}
    561c:	add	fp, sp, #8
    5620:	cmp	r1, #4
    5624:	bhi	56d4 <gen_fhostop+0xbc>
    5628:	mov	r2, r1
    562c:	mov	r4, r0
    5630:	mov	r1, #7
    5634:	add	r0, pc, #4
    5638:	ldr	r2, [r0, r2, lsl #2]
    563c:	add	pc, r0, r2
    5640:	.word	0x00000014
    5644:	.word	0x00000080
    5648:	.word	0x0000007c
    564c:	.word	0x00000014
    5650:	.word	0x00000048
    5654:	mov	r0, r4
    5658:	mov	r1, #1
    565c:	bl	5618 <gen_fhostop>
    5660:	mov	r5, r0
    5664:	mov	r0, r4
    5668:	mov	r1, #2
    566c:	bl	5618 <gen_fhostop>
    5670:	mov	r4, r0
    5674:	mov	r0, r5
    5678:	mov	r1, r4
    567c:	bl	3244 <sf_gen_or>
    5680:	mov	r0, r4
    5684:	pop	{r4, r5, fp, pc}
    5688:	mov	r0, r4
    568c:	mov	r1, #1
    5690:	bl	5618 <gen_fhostop>
    5694:	mov	r5, r0
    5698:	mov	r0, r4
    569c:	mov	r1, #2
    56a0:	bl	5618 <gen_fhostop>
    56a4:	mov	r4, r0
    56a8:	mov	r0, r5
    56ac:	mov	r1, r4
    56b0:	bl	316c <sf_gen_and>
    56b4:	mov	r0, r4
    56b8:	pop	{r4, r5, fp, pc}
    56bc:	mov	r1, #1
    56c0:	mov	r0, #1
    56c4:	mov	r2, #6
    56c8:	mov	r3, r4
    56cc:	pop	{r4, r5, fp, lr}
    56d0:	b	ab38 <gen_bcmp>
    56d4:	bl	fc4 <abort@plt>

000056d8 <gen_thostop>:
    56d8:	push	{r4, r5, fp, lr}
    56dc:	add	fp, sp, #8
    56e0:	cmp	r1, #4
    56e4:	bhi	5794 <gen_thostop+0xbc>
    56e8:	mov	r2, r1
    56ec:	mov	r4, r0
    56f0:	mov	r1, #8
    56f4:	add	r0, pc, #4
    56f8:	ldr	r2, [r0, r2, lsl #2]
    56fc:	add	pc, r0, r2
    5700:	.word	0x00000014
    5704:	.word	0x00000080
    5708:	.word	0x0000007c
    570c:	.word	0x00000014
    5710:	.word	0x00000048
    5714:	mov	r0, r4
    5718:	mov	r1, #1
    571c:	bl	56d8 <gen_thostop>
    5720:	mov	r5, r0
    5724:	mov	r0, r4
    5728:	mov	r1, #2
    572c:	bl	56d8 <gen_thostop>
    5730:	mov	r4, r0
    5734:	mov	r0, r5
    5738:	mov	r1, r4
    573c:	bl	3244 <sf_gen_or>
    5740:	mov	r0, r4
    5744:	pop	{r4, r5, fp, pc}
    5748:	mov	r0, r4
    574c:	mov	r1, #1
    5750:	bl	56d8 <gen_thostop>
    5754:	mov	r5, r0
    5758:	mov	r0, r4
    575c:	mov	r1, #2
    5760:	bl	56d8 <gen_thostop>
    5764:	mov	r4, r0
    5768:	mov	r0, r5
    576c:	mov	r1, r4
    5770:	bl	316c <sf_gen_and>
    5774:	mov	r0, r4
    5778:	pop	{r4, r5, fp, pc}
    577c:	mov	r1, #2
    5780:	mov	r0, #1
    5784:	mov	r2, #6
    5788:	mov	r3, r4
    578c:	pop	{r4, r5, fp, lr}
    5790:	b	ab38 <gen_bcmp>
    5794:	bl	fc4 <abort@plt>

00005798 <gen_wlanhostop>:
    5798:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    579c:	add	fp, sp, #24
    57a0:	sub	sp, sp, #8
    57a4:	cmp	r1, #8
    57a8:	bhi	5ce8 <gen_wlanhostop+0x550>
    57ac:	mov	r4, r0
    57b0:	add	r0, pc, #4
    57b4:	ldr	r1, [r0, r1, lsl #2]
    57b8:	add	pc, r0, r1
    57bc:	.word	0x00000024
    57c0:	.word	0x0000008c
    57c4:	.word	0x00000284
    57c8:	.word	0x00000024
    57cc:	.word	0x00000054
    57d0:	.word	0x00000420
    57d4:	.word	0x0000043c
    57d8:	.word	0x000003f0
    57dc:	.word	0x000004dc
    57e0:	mov	r0, r4
    57e4:	mov	r1, #1
    57e8:	bl	5798 <gen_wlanhostop>
    57ec:	mov	r5, r0
    57f0:	mov	r0, r4
    57f4:	mov	r1, #2
    57f8:	bl	5798 <gen_wlanhostop>
    57fc:	mov	r4, r0
    5800:	mov	r0, r5
    5804:	mov	r1, r4
    5808:	bl	3244 <sf_gen_or>
    580c:	b	583c <gen_wlanhostop+0xa4>
    5810:	mov	r0, r4
    5814:	mov	r1, #1
    5818:	bl	5798 <gen_wlanhostop>
    581c:	mov	r5, r0
    5820:	mov	r0, r4
    5824:	mov	r1, #2
    5828:	bl	5798 <gen_wlanhostop>
    582c:	mov	r4, r0
    5830:	mov	r0, r5
    5834:	mov	r1, r4
    5838:	bl	316c <sf_gen_and>
    583c:	mov	r0, r4
    5840:	sub	sp, fp, #24
    5844:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5848:	mov	r8, #1
    584c:	mov	r0, #1
    5850:	mov	r1, #1
    5854:	mov	r2, #16
    5858:	bl	8800 <gen_load_a>
    585c:	mov	r5, r0
    5860:	mov	r0, #69	; 0x45
    5864:	bl	7c8c <new_block>
    5868:	mov	r6, r0
    586c:	str	r8, [r0, #20]
    5870:	str	r5, [r0, #4]
    5874:	mov	r0, #1
    5878:	mov	r1, #24
    587c:	mov	r2, #6
    5880:	mov	r3, r4
    5884:	bl	ab38 <gen_bcmp>
    5888:	mov	r5, r0
    588c:	mov	r0, r6
    5890:	mov	r1, r5
    5894:	bl	316c <sf_gen_and>
    5898:	mov	r0, #1
    589c:	mov	r1, #1
    58a0:	mov	r2, #16
    58a4:	bl	8800 <gen_load_a>
    58a8:	mov	r6, r0
    58ac:	mov	r0, #69	; 0x45
    58b0:	bl	7c8c <new_block>
    58b4:	mov	r7, r0
    58b8:	str	r8, [r0, #20]
    58bc:	str	r6, [r0, #4]
    58c0:	bl	3298 <sf_gen_not>
    58c4:	mov	r0, #1
    58c8:	mov	r1, #16
    58cc:	mov	r2, #6
    58d0:	mov	r3, r4
    58d4:	bl	ab38 <gen_bcmp>
    58d8:	mov	r6, r0
    58dc:	mov	r0, r7
    58e0:	mov	r1, r6
    58e4:	bl	316c <sf_gen_and>
    58e8:	mov	r0, r6
    58ec:	mov	r1, r5
    58f0:	bl	3244 <sf_gen_or>
    58f4:	mov	r0, #1
    58f8:	mov	r1, #1
    58fc:	mov	r2, #16
    5900:	bl	8800 <gen_load_a>
    5904:	mov	r6, r0
    5908:	mov	r0, #69	; 0x45
    590c:	bl	7c8c <new_block>
    5910:	str	r6, [r0, #4]
    5914:	mov	r8, #2
    5918:	str	r8, [r0, #20]
    591c:	mov	r1, r5
    5920:	bl	316c <sf_gen_and>
    5924:	mov	r0, #1
    5928:	mov	r1, #1
    592c:	mov	r2, #16
    5930:	bl	8800 <gen_load_a>
    5934:	mov	r6, r0
    5938:	mov	r0, #69	; 0x45
    593c:	bl	7c8c <new_block>
    5940:	mov	r7, r0
    5944:	str	r8, [r0, #20]
    5948:	str	r6, [r0, #4]
    594c:	bl	3298 <sf_gen_not>
    5950:	mov	r0, #1
    5954:	mov	r1, #10
    5958:	mov	r2, #6
    595c:	mov	r3, r4
    5960:	bl	ab38 <gen_bcmp>
    5964:	mov	r6, r0
    5968:	mov	r0, r7
    596c:	mov	r1, r6
    5970:	bl	316c <sf_gen_and>
    5974:	mov	r0, r6
    5978:	mov	r1, r5
    597c:	bl	3244 <sf_gen_or>
    5980:	mov	r0, #1
    5984:	mov	r1, #0
    5988:	mov	r2, #16
    598c:	bl	8800 <gen_load_a>
    5990:	mov	r6, r0
    5994:	mov	r0, #69	; 0x45
    5998:	bl	7c8c <new_block>
    599c:	str	r6, [r0, #4]
    59a0:	mov	r8, #8
    59a4:	str	r8, [r0, #20]
    59a8:	mov	r1, r5
    59ac:	bl	316c <sf_gen_and>
    59b0:	mov	r0, #1
    59b4:	mov	r1, #0
    59b8:	mov	r2, #16
    59bc:	bl	8800 <gen_load_a>
    59c0:	mov	r6, r0
    59c4:	mov	r0, #69	; 0x45
    59c8:	bl	7c8c <new_block>
    59cc:	mov	r7, r0
    59d0:	str	r8, [r0, #20]
    59d4:	str	r6, [r0, #4]
    59d8:	bl	3298 <sf_gen_not>
    59dc:	mov	r0, #1
    59e0:	mov	r1, #10
    59e4:	mov	r2, #6
    59e8:	mov	r3, r4
    59ec:	bl	ab38 <gen_bcmp>
    59f0:	mov	r4, r0
    59f4:	mov	r0, r7
    59f8:	mov	r1, r4
    59fc:	bl	316c <sf_gen_and>
    5a00:	mov	r0, r4
    5a04:	mov	r1, r5
    5a08:	bl	3244 <sf_gen_or>
    5a0c:	mov	r0, #1
    5a10:	mov	r1, #0
    5a14:	mov	r2, #16
    5a18:	bl	8800 <gen_load_a>
    5a1c:	mov	r4, r0
    5a20:	mov	r0, #69	; 0x45
    5a24:	bl	7c8c <new_block>
    5a28:	mov	r6, r0
    5a2c:	mov	r0, #4
    5a30:	str	r0, [r6, #20]
    5a34:	str	r4, [r6, #4]
    5a38:	mov	r0, r6
    5a3c:	b	5ba4 <gen_wlanhostop+0x40c>
    5a40:	mov	r8, #1
    5a44:	mov	r0, #1
    5a48:	mov	r1, #1
    5a4c:	mov	r2, #16
    5a50:	bl	8800 <gen_load_a>
    5a54:	mov	r5, r0
    5a58:	mov	r0, #69	; 0x45
    5a5c:	bl	7c8c <new_block>
    5a60:	mov	r6, r0
    5a64:	str	r8, [r0, #20]
    5a68:	str	r5, [r0, #4]
    5a6c:	mov	r0, #1
    5a70:	mov	r1, #16
    5a74:	mov	r2, #6
    5a78:	mov	r3, r4
    5a7c:	bl	ab38 <gen_bcmp>
    5a80:	mov	r5, r0
    5a84:	mov	r0, r6
    5a88:	mov	r1, r5
    5a8c:	bl	316c <sf_gen_and>
    5a90:	mov	r0, #1
    5a94:	mov	r1, #1
    5a98:	mov	r2, #16
    5a9c:	bl	8800 <gen_load_a>
    5aa0:	mov	r6, r0
    5aa4:	mov	r0, #69	; 0x45
    5aa8:	bl	7c8c <new_block>
    5aac:	mov	r7, r0
    5ab0:	str	r8, [r0, #20]
    5ab4:	str	r6, [r0, #4]
    5ab8:	bl	3298 <sf_gen_not>
    5abc:	mov	r8, #4
    5ac0:	mov	r0, #1
    5ac4:	mov	r1, #4
    5ac8:	mov	r2, #6
    5acc:	mov	r3, r4
    5ad0:	bl	ab38 <gen_bcmp>
    5ad4:	mov	r6, r0
    5ad8:	mov	r0, r7
    5adc:	mov	r1, r6
    5ae0:	bl	316c <sf_gen_and>
    5ae4:	mov	r0, r6
    5ae8:	mov	r1, r5
    5aec:	bl	3244 <sf_gen_or>
    5af0:	mov	r0, #1
    5af4:	mov	r1, #0
    5af8:	mov	r2, #16
    5afc:	bl	8800 <gen_load_a>
    5b00:	mov	r6, r0
    5b04:	mov	r0, #69	; 0x45
    5b08:	bl	7c8c <new_block>
    5b0c:	str	r6, [r0, #4]
    5b10:	mov	r9, #8
    5b14:	str	r9, [r0, #20]
    5b18:	mov	r1, r5
    5b1c:	bl	316c <sf_gen_and>
    5b20:	mov	r0, #1
    5b24:	mov	r1, #0
    5b28:	mov	r2, #16
    5b2c:	bl	8800 <gen_load_a>
    5b30:	mov	r6, r0
    5b34:	mov	r0, #69	; 0x45
    5b38:	bl	7c8c <new_block>
    5b3c:	mov	r7, r0
    5b40:	str	r9, [r0, #20]
    5b44:	str	r6, [r0, #4]
    5b48:	bl	3298 <sf_gen_not>
    5b4c:	mov	r0, #1
    5b50:	mov	r1, #4
    5b54:	mov	r2, #6
    5b58:	mov	r3, r4
    5b5c:	bl	ab38 <gen_bcmp>
    5b60:	mov	r4, r0
    5b64:	mov	r0, r7
    5b68:	mov	r1, r4
    5b6c:	bl	316c <sf_gen_and>
    5b70:	mov	r0, r4
    5b74:	mov	r1, r5
    5b78:	bl	3244 <sf_gen_or>
    5b7c:	mov	r0, #1
    5b80:	mov	r1, #0
    5b84:	mov	r2, #16
    5b88:	bl	8800 <gen_load_a>
    5b8c:	mov	r4, r0
    5b90:	mov	r0, #69	; 0x45
    5b94:	bl	7c8c <new_block>
    5b98:	mov	r6, r0
    5b9c:	str	r8, [r0, #20]
    5ba0:	str	r4, [r0, #4]
    5ba4:	bl	3298 <sf_gen_not>
    5ba8:	b	5cd0 <gen_wlanhostop+0x538>
    5bac:	mov	r0, #12
    5bb0:	str	r0, [sp]
    5bb4:	mov	r0, #1
    5bb8:	mov	r1, #0
    5bbc:	mov	r2, #16
    5bc0:	mov	r3, #4
    5bc4:	bl	83ec <gen_mcmp>
    5bc8:	mov	r6, r0
    5bcc:	bl	3298 <sf_gen_not>
    5bd0:	mov	r0, #1
    5bd4:	mov	r1, #16
    5bd8:	b	5cc0 <gen_wlanhostop+0x528>
    5bdc:	mov	r0, #1
    5be0:	mov	r1, #4
    5be4:	mov	r2, #6
    5be8:	mov	r3, r4
    5bec:	sub	sp, fp, #24
    5bf0:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5bf4:	b	ab38 <gen_bcmp>
    5bf8:	mov	r0, #12
    5bfc:	str	r0, [sp]
    5c00:	mov	r0, #1
    5c04:	mov	r1, #0
    5c08:	mov	r2, #16
    5c0c:	mov	r3, #4
    5c10:	bl	83ec <gen_mcmp>
    5c14:	mov	r5, r0
    5c18:	bl	3298 <sf_gen_not>
    5c1c:	mov	r7, #240	; 0xf0
    5c20:	str	r7, [sp]
    5c24:	mov	r0, #1
    5c28:	mov	r1, #0
    5c2c:	mov	r2, #16
    5c30:	mov	r3, #192	; 0xc0
    5c34:	bl	83ec <gen_mcmp>
    5c38:	mov	r6, r0
    5c3c:	bl	3298 <sf_gen_not>
    5c40:	str	r7, [sp]
    5c44:	mov	r0, #1
    5c48:	mov	r1, #0
    5c4c:	mov	r2, #16
    5c50:	mov	r3, #208	; 0xd0
    5c54:	bl	83ec <gen_mcmp>
    5c58:	mov	r7, r0
    5c5c:	bl	3298 <sf_gen_not>
    5c60:	mov	r0, r6
    5c64:	mov	r1, r7
    5c68:	bl	316c <sf_gen_and>
    5c6c:	mov	r0, r5
    5c70:	mov	r1, r7
    5c74:	bl	3244 <sf_gen_or>
    5c78:	mov	r0, #1
    5c7c:	mov	r1, #10
    5c80:	mov	r2, #6
    5c84:	mov	r3, r4
    5c88:	bl	ab38 <gen_bcmp>
    5c8c:	mov	r5, r0
    5c90:	mov	r0, r7
    5c94:	b	5cd4 <gen_wlanhostop+0x53c>
    5c98:	mov	r0, #3
    5c9c:	str	r0, [sp]
    5ca0:	mov	r0, #1
    5ca4:	mov	r1, #1
    5ca8:	mov	r2, #16
    5cac:	mov	r3, #3
    5cb0:	bl	83ec <gen_mcmp>
    5cb4:	mov	r6, r0
    5cb8:	mov	r0, #1
    5cbc:	mov	r1, #24
    5cc0:	mov	r2, #6
    5cc4:	mov	r3, r4
    5cc8:	bl	ab38 <gen_bcmp>
    5ccc:	mov	r5, r0
    5cd0:	mov	r0, r6
    5cd4:	mov	r1, r5
    5cd8:	bl	316c <sf_gen_and>
    5cdc:	mov	r0, r5
    5ce0:	sub	sp, fp, #24
    5ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5ce8:	bl	fc4 <abort@plt>

00005cec <gen_ipfchostop>:
    5cec:	push	{r4, r5, fp, lr}
    5cf0:	add	fp, sp, #8
    5cf4:	cmp	r1, #4
    5cf8:	bhi	5da8 <gen_ipfchostop+0xbc>
    5cfc:	mov	r2, r1
    5d00:	mov	r4, r0
    5d04:	mov	r1, #10
    5d08:	add	r0, pc, #4
    5d0c:	ldr	r2, [r0, r2, lsl #2]
    5d10:	add	pc, r0, r2
    5d14:	.word	0x00000014
    5d18:	.word	0x00000080
    5d1c:	.word	0x0000007c
    5d20:	.word	0x00000014
    5d24:	.word	0x00000048
    5d28:	mov	r0, r4
    5d2c:	mov	r1, #1
    5d30:	bl	5cec <gen_ipfchostop>
    5d34:	mov	r5, r0
    5d38:	mov	r0, r4
    5d3c:	mov	r1, #2
    5d40:	bl	5cec <gen_ipfchostop>
    5d44:	mov	r4, r0
    5d48:	mov	r0, r5
    5d4c:	mov	r1, r4
    5d50:	bl	3244 <sf_gen_or>
    5d54:	mov	r0, r4
    5d58:	pop	{r4, r5, fp, pc}
    5d5c:	mov	r0, r4
    5d60:	mov	r1, #1
    5d64:	bl	5cec <gen_ipfchostop>
    5d68:	mov	r5, r0
    5d6c:	mov	r0, r4
    5d70:	mov	r1, #2
    5d74:	bl	5cec <gen_ipfchostop>
    5d78:	mov	r4, r0
    5d7c:	mov	r0, r5
    5d80:	mov	r1, r4
    5d84:	bl	316c <sf_gen_and>
    5d88:	mov	r0, r4
    5d8c:	pop	{r4, r5, fp, pc}
    5d90:	mov	r1, #2
    5d94:	mov	r0, #1
    5d98:	mov	r2, #6
    5d9c:	mov	r3, r4
    5da0:	pop	{r4, r5, fp, lr}
    5da4:	b	ab38 <gen_bcmp>
    5da8:	bl	fc4 <abort@plt>

00005dac <__bswap_32>:
    5dac:	rev	r0, r0
    5db0:	bx	lr

00005db4 <gen_host6>:
    5db4:	push	{r4, sl, fp, lr}
    5db8:	add	fp, sp, #8
    5dbc:	sub	sp, sp, #8
    5dc0:	mov	lr, r3
    5dc4:	ldr	ip, [fp, #8]
    5dc8:	cmp	r2, #40	; 0x28
    5dcc:	bhi	5eac <gen_host6+0xf8>
    5dd0:	mov	r3, r2
    5dd4:	mov	r2, #17
    5dd8:	add	r4, pc, #4
    5ddc:	ldr	r3, [r4, r3, lsl #2]
    5de0:	add	pc, r4, r3
    5de4:	.word	0xffffffe4
    5de8:	.word	0x000000c8
    5dec:	.word	0x000000cc
    5df0:	.word	0x000000f0
    5df4:	.word	0x00000114
    5df8:	.word	0x00000138
    5dfc:	.word	0x0000015c
    5e00:	.word	0x00000180
    5e04:	.word	0x000001a4
    5e08:	.word	0x000001c8
    5e0c:	.word	0x000001ec
    5e10:	.word	0x00000210
    5e14:	.word	0x0000021c
    5e18:	.word	0x00000240
    5e1c:	.word	0x0000024c
    5e20:	.word	0x00000258
    5e24:	.word	0x00000264
    5e28:	.word	0x000000a4
    5e2c:	.word	0x00000270
    5e30:	.word	0x00000294
    5e34:	.word	0x000002b8
    5e38:	.word	0x000002dc
    5e3c:	.word	0x00000300
    5e40:	.word	0x00000324
    5e44:	.word	0x00000330
    5e48:	.word	0x0000033c
    5e4c:	.word	0x00000360
    5e50:	.word	0x00000384
    5e54:	.word	0x000003a8
    5e58:	.word	0x000003cc
    5e5c:	.word	0x000003d8
    5e60:	.word	0x000000c8
    5e64:	.word	0x000000c8
    5e68:	.word	0x000000c8
    5e6c:	.word	0x000000c8
    5e70:	.word	0x000000c8
    5e74:	.word	0x000000c8
    5e78:	.word	0x000000c8
    5e7c:	.word	0x000000c8
    5e80:	.word	0x000000c8
    5e84:	.word	0x000003fc
    5e88:	mov	r2, #24
    5e8c:	mov	r3, #8
    5e90:	str	r3, [sp]
    5e94:	str	r2, [sp, #4]
    5e98:	mov	r2, lr
    5e9c:	movw	r3, #34525	; 0x86dd
    5ea0:	bl	b05c <gen_hostop6>
    5ea4:	sub	sp, fp, #8
    5ea8:	pop	{r4, sl, fp, pc}
    5eac:	bl	fc4 <abort@plt>
    5eb0:	ldr	r0, [pc, #844]	; 6204 <gen_host6+0x450>
    5eb4:	add	r0, pc, r0
    5eb8:	ldr	r1, [pc, #840]	; 6208 <gen_host6+0x454>
    5ebc:	add	r1, pc, r1
    5ec0:	cmp	ip, #2
    5ec4:	moveq	r1, r0
    5ec8:	ldr	r0, [pc, #828]	; 620c <gen_host6+0x458>
    5ecc:	add	r0, pc, r0
    5ed0:	bl	1fc4 <sf_bpf_error>
    5ed4:	ldr	r0, [pc, #832]	; 621c <gen_host6+0x468>
    5ed8:	add	r0, pc, r0
    5edc:	ldr	r1, [pc, #828]	; 6220 <gen_host6+0x46c>
    5ee0:	add	r1, pc, r1
    5ee4:	cmp	ip, #2
    5ee8:	moveq	r1, r0
    5eec:	ldr	r0, [pc, #816]	; 6224 <gen_host6+0x470>
    5ef0:	add	r0, pc, r0
    5ef4:	bl	1fc4 <sf_bpf_error>
    5ef8:	ldr	r0, [pc, #784]	; 6210 <gen_host6+0x45c>
    5efc:	add	r0, pc, r0
    5f00:	ldr	r1, [pc, #780]	; 6214 <gen_host6+0x460>
    5f04:	add	r1, pc, r1
    5f08:	cmp	ip, #2
    5f0c:	moveq	r1, r0
    5f10:	ldr	r0, [pc, #768]	; 6218 <gen_host6+0x464>
    5f14:	add	r0, pc, r0
    5f18:	bl	1fc4 <sf_bpf_error>
    5f1c:	ldr	r0, [pc, #772]	; 6228 <gen_host6+0x474>
    5f20:	add	r0, pc, r0
    5f24:	ldr	r1, [pc, #768]	; 622c <gen_host6+0x478>
    5f28:	add	r1, pc, r1
    5f2c:	cmp	ip, #2
    5f30:	moveq	r1, r0
    5f34:	ldr	r0, [pc, #756]	; 6230 <gen_host6+0x47c>
    5f38:	add	r0, pc, r0
    5f3c:	bl	1fc4 <sf_bpf_error>
    5f40:	ldr	r0, [pc, #748]	; 6234 <gen_host6+0x480>
    5f44:	add	r0, pc, r0
    5f48:	ldr	r1, [pc, #744]	; 6238 <gen_host6+0x484>
    5f4c:	add	r1, pc, r1
    5f50:	cmp	ip, #2
    5f54:	moveq	r1, r0
    5f58:	ldr	r0, [pc, #732]	; 623c <gen_host6+0x488>
    5f5c:	add	r0, pc, r0
    5f60:	bl	1fc4 <sf_bpf_error>
    5f64:	ldr	r0, [pc, #724]	; 6240 <gen_host6+0x48c>
    5f68:	add	r0, pc, r0
    5f6c:	ldr	r1, [pc, #720]	; 6244 <gen_host6+0x490>
    5f70:	add	r1, pc, r1
    5f74:	cmp	ip, #2
    5f78:	moveq	r1, r0
    5f7c:	ldr	r0, [pc, #708]	; 6248 <gen_host6+0x494>
    5f80:	add	r0, pc, r0
    5f84:	bl	1fc4 <sf_bpf_error>
    5f88:	ldr	r0, [pc, #700]	; 624c <gen_host6+0x498>
    5f8c:	add	r0, pc, r0
    5f90:	ldr	r1, [pc, #696]	; 6250 <gen_host6+0x49c>
    5f94:	add	r1, pc, r1
    5f98:	cmp	ip, #2
    5f9c:	moveq	r1, r0
    5fa0:	ldr	r0, [pc, #684]	; 6254 <gen_host6+0x4a0>
    5fa4:	add	r0, pc, r0
    5fa8:	bl	1fc4 <sf_bpf_error>
    5fac:	ldr	r0, [pc, #676]	; 6258 <gen_host6+0x4a4>
    5fb0:	add	r0, pc, r0
    5fb4:	ldr	r1, [pc, #672]	; 625c <gen_host6+0x4a8>
    5fb8:	add	r1, pc, r1
    5fbc:	cmp	ip, #2
    5fc0:	moveq	r1, r0
    5fc4:	ldr	r0, [pc, #660]	; 6260 <gen_host6+0x4ac>
    5fc8:	add	r0, pc, r0
    5fcc:	bl	1fc4 <sf_bpf_error>
    5fd0:	ldr	r0, [pc, #652]	; 6264 <gen_host6+0x4b0>
    5fd4:	add	r0, pc, r0
    5fd8:	ldr	r1, [pc, #648]	; 6268 <gen_host6+0x4b4>
    5fdc:	add	r1, pc, r1
    5fe0:	cmp	ip, #2
    5fe4:	moveq	r1, r0
    5fe8:	ldr	r0, [pc, #636]	; 626c <gen_host6+0x4b8>
    5fec:	add	r0, pc, r0
    5ff0:	bl	1fc4 <sf_bpf_error>
    5ff4:	ldr	r0, [pc, #652]	; 6288 <gen_host6+0x4d4>
    5ff8:	add	r0, pc, r0
    5ffc:	bl	1fc4 <sf_bpf_error>
    6000:	ldr	r0, [pc, #648]	; 6290 <gen_host6+0x4dc>
    6004:	add	r0, pc, r0
    6008:	ldr	r1, [pc, #644]	; 6294 <gen_host6+0x4e0>
    600c:	add	r1, pc, r1
    6010:	cmp	ip, #2
    6014:	moveq	r1, r0
    6018:	ldr	r0, [pc, #632]	; 6298 <gen_host6+0x4e4>
    601c:	add	r0, pc, r0
    6020:	bl	1fc4 <sf_bpf_error>
    6024:	ldr	r0, [pc, #628]	; 62a0 <gen_host6+0x4ec>
    6028:	add	r0, pc, r0
    602c:	bl	1fc4 <sf_bpf_error>
    6030:	ldr	r0, [pc, #612]	; 629c <gen_host6+0x4e8>
    6034:	add	r0, pc, r0
    6038:	bl	1fc4 <sf_bpf_error>
    603c:	ldr	r0, [pc, #612]	; 62a8 <gen_host6+0x4f4>
    6040:	add	r0, pc, r0
    6044:	bl	1fc4 <sf_bpf_error>
    6048:	ldr	r0, [pc, #596]	; 62a4 <gen_host6+0x4f0>
    604c:	add	r0, pc, r0
    6050:	bl	1fc4 <sf_bpf_error>
    6054:	ldr	r0, [pc, #592]	; 62ac <gen_host6+0x4f8>
    6058:	add	r0, pc, r0
    605c:	ldr	r1, [pc, #588]	; 62b0 <gen_host6+0x4fc>
    6060:	add	r1, pc, r1
    6064:	cmp	ip, #2
    6068:	moveq	r1, r0
    606c:	ldr	r0, [pc, #576]	; 62b4 <gen_host6+0x500>
    6070:	add	r0, pc, r0
    6074:	bl	1fc4 <sf_bpf_error>
    6078:	ldr	r0, [pc, #568]	; 62b8 <gen_host6+0x504>
    607c:	add	r0, pc, r0
    6080:	ldr	r1, [pc, #564]	; 62bc <gen_host6+0x508>
    6084:	add	r1, pc, r1
    6088:	cmp	ip, #2
    608c:	moveq	r1, r0
    6090:	ldr	r0, [pc, #552]	; 62c0 <gen_host6+0x50c>
    6094:	add	r0, pc, r0
    6098:	bl	1fc4 <sf_bpf_error>
    609c:	ldr	r0, [pc, #544]	; 62c4 <gen_host6+0x510>
    60a0:	add	r0, pc, r0
    60a4:	ldr	r1, [pc, #540]	; 62c8 <gen_host6+0x514>
    60a8:	add	r1, pc, r1
    60ac:	cmp	ip, #2
    60b0:	moveq	r1, r0
    60b4:	ldr	r0, [pc, #528]	; 62cc <gen_host6+0x518>
    60b8:	add	r0, pc, r0
    60bc:	bl	1fc4 <sf_bpf_error>
    60c0:	ldr	r0, [pc, #424]	; 6270 <gen_host6+0x4bc>
    60c4:	add	r0, pc, r0
    60c8:	ldr	r1, [pc, #420]	; 6274 <gen_host6+0x4c0>
    60cc:	add	r1, pc, r1
    60d0:	cmp	ip, #2
    60d4:	moveq	r1, r0
    60d8:	ldr	r0, [pc, #408]	; 6278 <gen_host6+0x4c4>
    60dc:	add	r0, pc, r0
    60e0:	bl	1fc4 <sf_bpf_error>
    60e4:	ldr	r0, [pc, #400]	; 627c <gen_host6+0x4c8>
    60e8:	add	r0, pc, r0
    60ec:	ldr	r1, [pc, #396]	; 6280 <gen_host6+0x4cc>
    60f0:	add	r1, pc, r1
    60f4:	cmp	ip, #2
    60f8:	moveq	r1, r0
    60fc:	ldr	r0, [pc, #384]	; 6284 <gen_host6+0x4d0>
    6100:	add	r0, pc, r0
    6104:	bl	1fc4 <sf_bpf_error>
    6108:	ldr	r0, [pc, #380]	; 628c <gen_host6+0x4d8>
    610c:	add	r0, pc, r0
    6110:	bl	1fc4 <sf_bpf_error>
    6114:	ldr	r0, [pc, #436]	; 62d0 <gen_host6+0x51c>
    6118:	add	r0, pc, r0
    611c:	bl	1fc4 <sf_bpf_error>
    6120:	ldr	r0, [pc, #428]	; 62d4 <gen_host6+0x520>
    6124:	add	r0, pc, r0
    6128:	ldr	r1, [pc, #424]	; 62d8 <gen_host6+0x524>
    612c:	add	r1, pc, r1
    6130:	cmp	ip, #2
    6134:	moveq	r1, r0
    6138:	ldr	r0, [pc, #412]	; 62dc <gen_host6+0x528>
    613c:	add	r0, pc, r0
    6140:	bl	1fc4 <sf_bpf_error>
    6144:	ldr	r0, [pc, #404]	; 62e0 <gen_host6+0x52c>
    6148:	add	r0, pc, r0
    614c:	ldr	r1, [pc, #400]	; 62e4 <gen_host6+0x530>
    6150:	add	r1, pc, r1
    6154:	cmp	ip, #2
    6158:	moveq	r1, r0
    615c:	ldr	r0, [pc, #388]	; 62e8 <gen_host6+0x534>
    6160:	add	r0, pc, r0
    6164:	bl	1fc4 <sf_bpf_error>
    6168:	ldr	r0, [pc, #380]	; 62ec <gen_host6+0x538>
    616c:	add	r0, pc, r0
    6170:	ldr	r1, [pc, #376]	; 62f0 <gen_host6+0x53c>
    6174:	add	r1, pc, r1
    6178:	cmp	ip, #2
    617c:	moveq	r1, r0
    6180:	ldr	r0, [pc, #364]	; 62f4 <gen_host6+0x540>
    6184:	add	r0, pc, r0
    6188:	bl	1fc4 <sf_bpf_error>
    618c:	ldr	r0, [pc, #356]	; 62f8 <gen_host6+0x544>
    6190:	add	r0, pc, r0
    6194:	ldr	r1, [pc, #352]	; 62fc <gen_host6+0x548>
    6198:	add	r1, pc, r1
    619c:	cmp	ip, #2
    61a0:	moveq	r1, r0
    61a4:	ldr	r0, [pc, #340]	; 6300 <gen_host6+0x54c>
    61a8:	add	r0, pc, r0
    61ac:	bl	1fc4 <sf_bpf_error>
    61b0:	ldr	r0, [pc, #332]	; 6304 <gen_host6+0x550>
    61b4:	add	r0, pc, r0
    61b8:	bl	1fc4 <sf_bpf_error>
    61bc:	ldr	r0, [pc, #324]	; 6308 <gen_host6+0x554>
    61c0:	add	r0, pc, r0
    61c4:	ldr	r1, [pc, #320]	; 630c <gen_host6+0x558>
    61c8:	add	r1, pc, r1
    61cc:	cmp	ip, #2
    61d0:	moveq	r1, r0
    61d4:	ldr	r0, [pc, #308]	; 6310 <gen_host6+0x55c>
    61d8:	add	r0, pc, r0
    61dc:	bl	1fc4 <sf_bpf_error>
    61e0:	ldr	r0, [pc, #300]	; 6314 <gen_host6+0x560>
    61e4:	add	r0, pc, r0
    61e8:	ldr	r1, [pc, #296]	; 6318 <gen_host6+0x564>
    61ec:	add	r1, pc, r1
    61f0:	cmp	ip, #2
    61f4:	moveq	r1, r0
    61f8:	ldr	r0, [pc, #284]	; 631c <gen_host6+0x568>
    61fc:	add	r0, pc, r0
    6200:	bl	1fc4 <sf_bpf_error>
    6204:	.word	0x0000cd2c
    6208:	.word	0x0000d89a
    620c:	.word	0x0000d9e4
    6210:	.word	0x0000cce4
    6214:	.word	0x0000d852
    6218:	.word	0x0000d9bc
    621c:	.word	0x0000cd08
    6220:	.word	0x0000d876
    6224:	.word	0x0000da02
    6228:	.word	0x0000ccc0
    622c:	.word	0x0000d82e
    6230:	.word	0x0000d658
    6234:	.word	0x0000cc9c
    6238:	.word	0x0000d80a
    623c:	.word	0x0000d617
    6240:	.word	0x0000cc78
    6244:	.word	0x0000d7e6
    6248:	.word	0x0000d62e
    624c:	.word	0x0000cc54
    6250:	.word	0x0000d7c2
    6254:	.word	0x0000d627
    6258:	.word	0x0000cc30
    625c:	.word	0x0000d79e
    6260:	.word	0x0000d621
    6264:	.word	0x0000cc0c
    6268:	.word	0x0000d77a
    626c:	.word	0x0000d61b
    6270:	.word	0x0000cb1c
    6274:	.word	0x0000d68a
    6278:	.word	0x0000d549
    627c:	.word	0x0000caf8
    6280:	.word	0x0000d666
    6284:	.word	0x0000d542
    6288:	.word	0x0000d668
    628c:	.word	0x0000d579
    6290:	.word	0x0000cbdc
    6294:	.word	0x0000d74a
    6298:	.word	0x0000d8f7
    629c:	.word	0x0000d675
    62a0:	.word	0x0000d6a4
    62a4:	.word	0x0000d6a3
    62a8:	.word	0x0000d6d4
    62ac:	.word	0x0000cb88
    62b0:	.word	0x0000d6f6
    62b4:	.word	0x0000d6eb
    62b8:	.word	0x0000cb64
    62bc:	.word	0x0000d6d2
    62c0:	.word	0x0000d6e6
    62c4:	.word	0x0000cb40
    62c8:	.word	0x0000d6ae
    62cc:	.word	0x0000d6de
    62d0:	.word	0x0000d69b
    62d4:	.word	0x0000cabc
    62d8:	.word	0x0000d62a
    62dc:	.word	0x0000d69a
    62e0:	.word	0x0000ca98
    62e4:	.word	0x0000d606
    62e8:	.word	0x0000d694
    62ec:	.word	0x0000ca74
    62f0:	.word	0x0000d5e2
    62f4:	.word	0x0000d68e
    62f8:	.word	0x0000ca50
    62fc:	.word	0x0000d5be
    6300:	.word	0x0000d688
    6304:	.word	0x0000d699
    6308:	.word	0x0000ca20
    630c:	.word	0x0000d58e
    6310:	.word	0x0000d698
    6314:	.word	0x0000c9fc
    6318:	.word	0x0000d56a
    631c:	.word	0x0000d695

00006320 <gen_port>:
    6320:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6324:	add	fp, sp, #24
    6328:	mov	r5, r2
    632c:	mov	r7, r1
    6330:	mov	r6, r0
    6334:	mov	r0, #2048	; 0x800
    6338:	bl	3a80 <gen_linktype>
    633c:	mov	r4, r0
    6340:	cmp	r7, #16
    6344:	bgt	63a0 <gen_port+0x80>
    6348:	cmn	r7, #1
    634c:	bne	63d4 <gen_port+0xb4>
    6350:	mov	r0, r6
    6354:	mov	r1, #6
    6358:	mov	r2, r5
    635c:	bl	4434 <sf_gen_portop>
    6360:	mov	r8, r0
    6364:	mov	r0, r6
    6368:	mov	r1, #17
    636c:	mov	r2, r5
    6370:	bl	4434 <sf_gen_portop>
    6374:	mov	r7, r0
    6378:	mov	r0, r8
    637c:	mov	r1, r7
    6380:	bl	3244 <sf_gen_or>
    6384:	mov	r0, r6
    6388:	mov	r1, #132	; 0x84
    638c:	mov	r2, r5
    6390:	bl	4434 <sf_gen_portop>
    6394:	mov	r1, r7
    6398:	bl	3244 <sf_gen_or>
    639c:	b	63c0 <gen_port+0xa0>
    63a0:	cmp	r7, #132	; 0x84
    63a4:	cmpne	r7, #17
    63a8:	bne	63dc <gen_port+0xbc>
    63ac:	mov	r0, r6
    63b0:	mov	r1, r7
    63b4:	mov	r2, r5
    63b8:	bl	4434 <sf_gen_portop>
    63bc:	mov	r7, r0
    63c0:	mov	r0, r4
    63c4:	mov	r1, r7
    63c8:	bl	316c <sf_gen_and>
    63cc:	mov	r0, r7
    63d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    63d4:	cmp	r7, #6
    63d8:	beq	63ac <gen_port+0x8c>
    63dc:	bl	fc4 <abort@plt>

000063e0 <gen_port6>:
    63e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    63e4:	add	fp, sp, #24
    63e8:	mov	r5, r2
    63ec:	mov	r7, r1
    63f0:	mov	r6, r0
    63f4:	movw	r0, #34525	; 0x86dd
    63f8:	bl	3a80 <gen_linktype>
    63fc:	mov	r4, r0
    6400:	cmp	r7, #16
    6404:	bgt	6460 <gen_port6+0x80>
    6408:	cmn	r7, #1
    640c:	bne	6494 <gen_port6+0xb4>
    6410:	mov	r0, r6
    6414:	mov	r1, #6
    6418:	mov	r2, r5
    641c:	bl	45b0 <sf_gen_portop6>
    6420:	mov	r8, r0
    6424:	mov	r0, r6
    6428:	mov	r1, #17
    642c:	mov	r2, r5
    6430:	bl	45b0 <sf_gen_portop6>
    6434:	mov	r7, r0
    6438:	mov	r0, r8
    643c:	mov	r1, r7
    6440:	bl	3244 <sf_gen_or>
    6444:	mov	r0, r6
    6448:	mov	r1, #132	; 0x84
    644c:	mov	r2, r5
    6450:	bl	45b0 <sf_gen_portop6>
    6454:	mov	r1, r7
    6458:	bl	3244 <sf_gen_or>
    645c:	b	6480 <gen_port6+0xa0>
    6460:	cmp	r7, #132	; 0x84
    6464:	cmpne	r7, #17
    6468:	bne	649c <gen_port6+0xbc>
    646c:	mov	r0, r6
    6470:	mov	r1, r7
    6474:	mov	r2, r5
    6478:	bl	45b0 <sf_gen_portop6>
    647c:	mov	r7, r0
    6480:	mov	r0, r4
    6484:	mov	r1, r7
    6488:	bl	316c <sf_gen_and>
    648c:	mov	r0, r7
    6490:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6494:	cmp	r7, #6
    6498:	beq	646c <gen_port6+0x8c>
    649c:	bl	fc4 <abort@plt>

000064a0 <gen_portrange>:
    64a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    64a4:	add	fp, sp, #24
    64a8:	mov	r5, r3
    64ac:	mov	r4, r2
    64b0:	mov	r6, r1
    64b4:	mov	r7, r0
    64b8:	mov	r0, #2048	; 0x800
    64bc:	bl	3a80 <gen_linktype>
    64c0:	mov	r8, r0
    64c4:	cmp	r4, #16
    64c8:	bgt	6530 <gen_portrange+0x90>
    64cc:	cmn	r4, #1
    64d0:	bne	6568 <gen_portrange+0xc8>
    64d4:	mov	r0, r7
    64d8:	mov	r1, r6
    64dc:	mov	r2, #6
    64e0:	mov	r3, r5
    64e4:	bl	46a4 <sf_gen_portrangeop>
    64e8:	mov	r9, r0
    64ec:	mov	r0, r7
    64f0:	mov	r1, r6
    64f4:	mov	r2, #17
    64f8:	mov	r3, r5
    64fc:	bl	46a4 <sf_gen_portrangeop>
    6500:	mov	r4, r0
    6504:	mov	r0, r9
    6508:	mov	r1, r4
    650c:	bl	3244 <sf_gen_or>
    6510:	mov	r0, r7
    6514:	mov	r1, r6
    6518:	mov	r2, #132	; 0x84
    651c:	mov	r3, r5
    6520:	bl	46a4 <sf_gen_portrangeop>
    6524:	mov	r1, r4
    6528:	bl	3244 <sf_gen_or>
    652c:	b	6554 <gen_portrange+0xb4>
    6530:	cmp	r4, #132	; 0x84
    6534:	cmpne	r4, #17
    6538:	bne	6570 <gen_portrange+0xd0>
    653c:	mov	r0, r7
    6540:	mov	r1, r6
    6544:	mov	r2, r4
    6548:	mov	r3, r5
    654c:	bl	46a4 <sf_gen_portrangeop>
    6550:	mov	r4, r0
    6554:	mov	r0, r8
    6558:	mov	r1, r4
    655c:	bl	316c <sf_gen_and>
    6560:	mov	r0, r4
    6564:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6568:	cmp	r4, #6
    656c:	beq	653c <gen_portrange+0x9c>
    6570:	bl	fc4 <abort@plt>

00006574 <gen_portrange6>:
    6574:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6578:	add	fp, sp, #24
    657c:	mov	r5, r3
    6580:	mov	r4, r2
    6584:	mov	r6, r1
    6588:	mov	r7, r0
    658c:	movw	r0, #34525	; 0x86dd
    6590:	bl	3a80 <gen_linktype>
    6594:	mov	r8, r0
    6598:	cmp	r4, #16
    659c:	bgt	6604 <gen_portrange6+0x90>
    65a0:	cmn	r4, #1
    65a4:	bne	663c <gen_portrange6+0xc8>
    65a8:	mov	r0, r7
    65ac:	mov	r1, r6
    65b0:	mov	r2, #6
    65b4:	mov	r3, r5
    65b8:	bl	4818 <sf_gen_portrangeop6>
    65bc:	mov	r9, r0
    65c0:	mov	r0, r7
    65c4:	mov	r1, r6
    65c8:	mov	r2, #17
    65cc:	mov	r3, r5
    65d0:	bl	4818 <sf_gen_portrangeop6>
    65d4:	mov	r4, r0
    65d8:	mov	r0, r9
    65dc:	mov	r1, r4
    65e0:	bl	3244 <sf_gen_or>
    65e4:	mov	r0, r7
    65e8:	mov	r1, r6
    65ec:	mov	r2, #132	; 0x84
    65f0:	mov	r3, r5
    65f4:	bl	4818 <sf_gen_portrangeop6>
    65f8:	mov	r1, r4
    65fc:	bl	3244 <sf_gen_or>
    6600:	b	6628 <gen_portrange6+0xb4>
    6604:	cmp	r4, #132	; 0x84
    6608:	cmpne	r4, #17
    660c:	bne	6644 <gen_portrange6+0xd0>
    6610:	mov	r0, r7
    6614:	mov	r1, r6
    6618:	mov	r2, r4
    661c:	mov	r3, r5
    6620:	bl	4818 <sf_gen_portrangeop6>
    6624:	mov	r4, r0
    6628:	mov	r0, r8
    662c:	mov	r1, r4
    6630:	bl	316c <sf_gen_and>
    6634:	mov	r0, r4
    6638:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    663c:	cmp	r4, #6
    6640:	beq	6610 <gen_portrange6+0x9c>
    6644:	bl	fc4 <abort@plt>

00006648 <lookup_proto>:
    6648:	push	{r4, sl, fp, lr}
    664c:	add	fp, sp, #8
    6650:	mov	r4, r0
    6654:	mvn	r0, #0
    6658:	cmp	r1, #24
    665c:	bhi	66e0 <lookup_proto+0x98>
    6660:	add	r2, pc, #4
    6664:	ldr	r1, [r2, r1, lsl #2]
    6668:	add	pc, r2, r1
    666c:	.word	0x00000064
    6670:	.word	0x00000078
    6674:	.word	0x00000064
    6678:	.word	0x00000074
    667c:	.word	0x00000074
    6680:	.word	0x00000074
    6684:	.word	0x00000074
    6688:	.word	0x00000074
    668c:	.word	0x00000074
    6690:	.word	0x00000074
    6694:	.word	0x00000074
    6698:	.word	0x00000074
    669c:	.word	0x00000074
    66a0:	.word	0x00000074
    66a4:	.word	0x00000074
    66a8:	.word	0x00000074
    66ac:	.word	0x00000074
    66b0:	.word	0x00000064
    66b4:	.word	0x00000074
    66b8:	.word	0x00000074
    66bc:	.word	0x00000074
    66c0:	.word	0x00000074
    66c4:	.word	0x00000074
    66c8:	.word	0x00000074
    66cc:	.word	0x000000a8
    66d0:	mov	r0, r4
    66d4:	bl	b6a8 <pcap_nametoproto>
    66d8:	cmn	r0, #1
    66dc:	beq	6784 <lookup_proto+0x13c>
    66e0:	pop	{r4, sl, fp, pc}
    66e4:	mov	r0, r4
    66e8:	bl	b6c4 <pcap_nametoeproto>
    66ec:	cmn	r0, #1
    66f0:	bne	66e0 <lookup_proto+0x98>
    66f4:	mov	r0, r4
    66f8:	bl	b730 <pcap_nametollc>
    66fc:	cmn	r0, #1
    6700:	bne	66e0 <lookup_proto+0x98>
    6704:	ldr	r0, [pc, #140]	; 6798 <lookup_proto+0x150>
    6708:	add	r0, pc, r0
    670c:	mov	r1, r4
    6710:	bl	1fc4 <sf_bpf_error>
    6714:	ldr	r1, [pc, #128]	; 679c <lookup_proto+0x154>
    6718:	add	r1, pc, r1
    671c:	mov	r0, r4
    6720:	bl	e08 <strcmp@plt>
    6724:	cmp	r0, #0
    6728:	beq	6774 <lookup_proto+0x12c>
    672c:	ldr	r1, [pc, #108]	; 67a0 <lookup_proto+0x158>
    6730:	add	r1, pc, r1
    6734:	mov	r0, r4
    6738:	bl	e08 <strcmp@plt>
    673c:	cmp	r0, #0
    6740:	beq	677c <lookup_proto+0x134>
    6744:	ldr	r1, [pc, #88]	; 67a4 <lookup_proto+0x15c>
    6748:	add	r1, pc, r1
    674c:	mov	r0, r4
    6750:	bl	e08 <strcmp@plt>
    6754:	mov	r1, r0
    6758:	mov	r0, #129	; 0x81
    675c:	cmp	r1, #0
    6760:	popeq	{r4, sl, fp, pc}
    6764:	ldr	r0, [pc, #60]	; 67a8 <lookup_proto+0x160>
    6768:	add	r0, pc, r0
    676c:	mov	r1, r4
    6770:	bl	1fc4 <sf_bpf_error>
    6774:	mov	r0, #130	; 0x82
    6778:	pop	{r4, sl, fp, pc}
    677c:	mov	r0, #131	; 0x83
    6780:	pop	{r4, sl, fp, pc}
    6784:	ldr	r0, [pc, #8]	; 6794 <lookup_proto+0x14c>
    6788:	add	r0, pc, r0
    678c:	mov	r1, r4
    6790:	bl	1fc4 <sf_bpf_error>
    6794:	.word	0x0000d1af
    6798:	.word	0x0000d245
    679c:	.word	0x0000d24e
    67a0:	.word	0x0000d23b
    67a4:	.word	0x0000d228
    67a8:	.word	0x0000d20d

000067ac <gen_protochain>:
    67ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    67b0:	add	fp, sp, #28
    67b4:	sub	sp, sp, #412	; 0x19c
    67b8:	mov	r7, r1
    67bc:	mov	r4, r0
    67c0:	bl	7910 <alloc_reg>
    67c4:	mov	r9, r0
    67c8:	add	r6, sp, #8
    67cc:	mov	r0, r6
    67d0:	mov	r1, #0
    67d4:	mov	r2, #400	; 0x190
    67d8:	bl	f40 <memset@plt>
    67dc:	cmp	r7, #17
    67e0:	cmpne	r7, #2
    67e4:	bne	68ac <gen_protochain+0x100>
    67e8:	ldr	r0, [pc, #1432]	; 6d88 <gen_protochain+0x5dc>
    67ec:	ldr	r0, [pc, r0]
    67f0:	sub	r1, r0, #105	; 0x69
    67f4:	cmp	r1, #22
    67f8:	bhi	6810 <gen_protochain+0x64>
    67fc:	mov	r2, #1
    6800:	movw	r3, #16385	; 0x4001
    6804:	movt	r3, #64	; 0x40
    6808:	tst	r3, r2, lsl r1
    680c:	bne	681c <gen_protochain+0x70>
    6810:	cmp	r0, #192	; 0xc0
    6814:	cmpne	r0, #163	; 0xa3
    6818:	bne	6828 <gen_protochain+0x7c>
    681c:	ldr	r0, [pc, #1448]	; 6dcc <gen_protochain+0x620>
    6820:	add	r0, pc, r0
    6824:	bl	1fc4 <sf_bpf_error>
    6828:	ldr	r0, [pc, #1372]	; 6d8c <gen_protochain+0x5e0>
    682c:	add	r0, pc, r0
    6830:	mov	r1, #1
    6834:	str	r1, [r0]
    6838:	mov	r0, #0
    683c:	bl	79c0 <new_stmt>
    6840:	str	r0, [sp, #8]
    6844:	cmp	r7, #17
    6848:	beq	68e4 <gen_protochain+0x138>
    684c:	cmp	r7, #2
    6850:	bne	6d78 <gen_protochain+0x5cc>
    6854:	mov	r0, #2048	; 0x800
    6858:	bl	3a80 <gen_linktype>
    685c:	str	r0, [sp]
    6860:	mov	r0, #48	; 0x30
    6864:	bl	79c0 <new_stmt>
    6868:	str	r0, [sp, #12]
    686c:	ldr	r1, [pc, #1308]	; 6d90 <gen_protochain+0x5e4>
    6870:	ldr	r1, [pc, r1]
    6874:	ldr	r2, [pc, #1304]	; 6d94 <gen_protochain+0x5e8>
    6878:	ldr	r2, [pc, r2]
    687c:	add	r1, r2, r1
    6880:	add	r1, r1, #9
    6884:	str	r1, [r0, #12]
    6888:	mov	r0, #177	; 0xb1
    688c:	bl	79c0 <new_stmt>
    6890:	str	r0, [sp, #16]
    6894:	ldr	r1, [pc, #1276]	; 6d98 <gen_protochain+0x5ec>
    6898:	ldr	r1, [pc, r1]
    689c:	ldr	r2, [pc, #1272]	; 6d9c <gen_protochain+0x5f0>
    68a0:	ldr	r2, [pc, r2]
    68a4:	add	r1, r2, r1
    68a8:	b	6928 <gen_protochain+0x17c>
    68ac:	cmp	r7, #0
    68b0:	bne	6d6c <gen_protochain+0x5c0>
    68b4:	mov	r0, r4
    68b8:	mov	r1, #2
    68bc:	bl	67ac <gen_protochain>
    68c0:	mov	r5, r0
    68c4:	mov	r0, r4
    68c8:	mov	r1, #17
    68cc:	bl	67ac <gen_protochain>
    68d0:	mov	r6, r0
    68d4:	mov	r0, r5
    68d8:	mov	r1, r6
    68dc:	bl	3244 <sf_gen_or>
    68e0:	b	6d60 <gen_protochain+0x5b4>
    68e4:	movw	r0, #34525	; 0x86dd
    68e8:	bl	3a80 <gen_linktype>
    68ec:	str	r0, [sp]
    68f0:	mov	r0, #48	; 0x30
    68f4:	bl	79c0 <new_stmt>
    68f8:	str	r0, [sp, #12]
    68fc:	ldr	r1, [pc, #1184]	; 6da4 <gen_protochain+0x5f8>
    6900:	ldr	r1, [pc, r1]
    6904:	ldr	r2, [pc, #1180]	; 6da8 <gen_protochain+0x5fc>
    6908:	ldr	r2, [pc, r2]
    690c:	add	r1, r2, r1
    6910:	add	r1, r1, #6
    6914:	str	r1, [r0, #12]
    6918:	mov	r0, #1
    691c:	bl	79c0 <new_stmt>
    6920:	str	r0, [sp, #16]
    6924:	mov	r1, #40	; 0x28
    6928:	str	r1, [r0, #12]
    692c:	mov	r0, #21
    6930:	bl	79c0 <new_stmt>
    6934:	str	r0, [sp, #20]
    6938:	str	r4, [r0, #12]
    693c:	ldr	r0, [sp, #20]
    6940:	mov	r5, #0
    6944:	str	r5, [r0, #4]
    6948:	ldr	r0, [sp, #20]
    694c:	str	r5, [r0, #8]
    6950:	mov	r0, #21
    6954:	bl	79c0 <new_stmt>
    6958:	str	r0, [sp, #24]
    695c:	str	r5, [r0, #4]
    6960:	ldr	r0, [sp, #24]
    6964:	str	r5, [r0, #8]
    6968:	ldr	r0, [sp, #24]
    696c:	mov	r1, #59	; 0x3b
    6970:	str	r1, [r0, #12]
    6974:	ldr	r0, [sp, #20]
    6978:	ldr	r1, [sp, #24]
    697c:	str	r1, [r0, #8]
    6980:	cmp	r7, #17
    6984:	str	r4, [sp, #4]
    6988:	bne	6b60 <gen_protochain+0x3b4>
    698c:	mov	sl, #21
    6990:	mov	r0, #21
    6994:	bl	79c0 <new_stmt>
    6998:	str	r0, [sp, #28]
    699c:	mov	r4, #0
    69a0:	str	r4, [r0, #4]
    69a4:	ldr	r0, [sp, #28]
    69a8:	str	r4, [r0, #8]
    69ac:	ldr	r0, [sp, #28]
    69b0:	str	r4, [r0, #12]
    69b4:	ldr	r0, [sp, #24]
    69b8:	ldr	r1, [sp, #28]
    69bc:	str	r1, [r0, #8]
    69c0:	mov	r0, #21
    69c4:	bl	79c0 <new_stmt>
    69c8:	str	r0, [sp, #32]
    69cc:	ldr	r1, [sp, #28]
    69d0:	str	r0, [r1, #8]
    69d4:	ldr	r0, [sp, #32]
    69d8:	str	r4, [r0, #4]
    69dc:	ldr	r0, [sp, #32]
    69e0:	str	r4, [r0, #8]
    69e4:	ldr	r0, [sp, #32]
    69e8:	mov	r1, #60	; 0x3c
    69ec:	str	r1, [r0, #12]
    69f0:	mov	r0, #21
    69f4:	bl	79c0 <new_stmt>
    69f8:	str	r0, [sp, #36]	; 0x24
    69fc:	ldr	r1, [sp, #32]
    6a00:	str	r0, [r1, #8]
    6a04:	ldr	r0, [sp, #36]	; 0x24
    6a08:	str	r4, [r0, #4]
    6a0c:	ldr	r0, [sp, #36]	; 0x24
    6a10:	str	r4, [r0, #8]
    6a14:	ldr	r0, [sp, #36]	; 0x24
    6a18:	mov	r1, #43	; 0x2b
    6a1c:	str	r1, [r0, #12]
    6a20:	mov	r0, #21
    6a24:	bl	79c0 <new_stmt>
    6a28:	str	r0, [sp, #40]	; 0x28
    6a2c:	ldr	r1, [sp, #36]	; 0x24
    6a30:	str	r0, [r1, #8]
    6a34:	ldr	r0, [sp, #40]	; 0x28
    6a38:	str	r4, [r0, #4]
    6a3c:	ldr	r0, [sp, #40]	; 0x28
    6a40:	str	r4, [r0, #8]
    6a44:	ldr	r0, [sp, #40]	; 0x28
    6a48:	mov	r1, #44	; 0x2c
    6a4c:	str	r1, [r0, #12]
    6a50:	mov	r0, #135	; 0x87
    6a54:	bl	79c0 <new_stmt>
    6a58:	str	r0, [sp, #44]	; 0x2c
    6a5c:	mov	r0, #80	; 0x50
    6a60:	bl	79c0 <new_stmt>
    6a64:	str	r0, [sp, #48]	; 0x30
    6a68:	ldr	r1, [pc, #828]	; 6dac <gen_protochain+0x600>
    6a6c:	ldr	r1, [pc, r1]
    6a70:	ldr	r2, [pc, #824]	; 6db0 <gen_protochain+0x604>
    6a74:	ldr	r2, [pc, r2]
    6a78:	add	r1, r2, r1
    6a7c:	str	r1, [r0, #12]
    6a80:	mov	r0, #2
    6a84:	bl	79c0 <new_stmt>
    6a88:	str	r0, [sp, #52]	; 0x34
    6a8c:	str	r9, [r0, #12]
    6a90:	mov	r0, #135	; 0x87
    6a94:	bl	79c0 <new_stmt>
    6a98:	str	r0, [sp, #56]	; 0x38
    6a9c:	mov	r0, #4
    6aa0:	bl	79c0 <new_stmt>
    6aa4:	str	r0, [sp, #60]	; 0x3c
    6aa8:	mov	r5, #1
    6aac:	str	r5, [r0, #12]
    6ab0:	mov	r0, #7
    6ab4:	bl	79c0 <new_stmt>
    6ab8:	str	r0, [sp, #64]	; 0x40
    6abc:	mov	r0, #80	; 0x50
    6ac0:	bl	79c0 <new_stmt>
    6ac4:	str	r0, [sp, #68]	; 0x44
    6ac8:	ldr	r1, [pc, #740]	; 6db4 <gen_protochain+0x608>
    6acc:	ldr	r1, [pc, r1]
    6ad0:	ldr	r2, [pc, #736]	; 6db8 <gen_protochain+0x60c>
    6ad4:	ldr	r2, [pc, r2]
    6ad8:	add	r1, r2, r1
    6adc:	str	r1, [r0, #12]
    6ae0:	mov	r0, #4
    6ae4:	bl	79c0 <new_stmt>
    6ae8:	str	r0, [sp, #72]	; 0x48
    6aec:	str	r5, [r0, #12]
    6af0:	mov	r0, #36	; 0x24
    6af4:	bl	79c0 <new_stmt>
    6af8:	str	r0, [sp, #76]	; 0x4c
    6afc:	mov	r5, #8
    6b00:	str	r5, [r0, #12]
    6b04:	mov	r0, #7
    6b08:	bl	79c0 <new_stmt>
    6b0c:	str	r0, [sp, #80]	; 0x50
    6b10:	mov	r0, #96	; 0x60
    6b14:	bl	79c0 <new_stmt>
    6b18:	str	r0, [sp, #84]	; 0x54
    6b1c:	str	r9, [r0, #12]
    6b20:	mov	r0, #5
    6b24:	bl	79c0 <new_stmt>
    6b28:	str	r0, [sp, #88]	; 0x58
    6b2c:	mvn	r1, #17
    6b30:	str	r1, [r0, #12]
    6b34:	ldr	r0, [sp, #84]	; 0x54
    6b38:	ldr	r1, [sp, #88]	; 0x58
    6b3c:	str	r1, [r0, #8]
    6b40:	add	r0, r6, #20
    6b44:	ldr	r1, [r0, r4, lsl #2]
    6b48:	ldr	r2, [sp, #44]	; 0x2c
    6b4c:	str	r2, [r1, #4]
    6b50:	add	r4, r4, #1
    6b54:	cmp	r4, #4
    6b58:	bne	6b44 <gen_protochain+0x398>
    6b5c:	b	6b80 <gen_protochain+0x3d4>
    6b60:	mov	r0, #4
    6b64:	bl	79c0 <new_stmt>
    6b68:	str	r0, [sp, #28]
    6b6c:	str	r5, [r0, #12]
    6b70:	ldr	r0, [sp, #24]
    6b74:	ldr	r1, [sp, #28]
    6b78:	str	r1, [r0, #8]
    6b7c:	mov	sl, #6
    6b80:	mov	r0, #21
    6b84:	bl	79c0 <new_stmt>
    6b88:	str	r0, [r6, sl, lsl #2]
    6b8c:	mov	r1, #0
    6b90:	str	r1, [r0, #4]
    6b94:	ldr	r0, [r6, sl, lsl #2]
    6b98:	str	r1, [r0, #8]
    6b9c:	ldr	r0, [r6, sl, lsl #2]
    6ba0:	mov	r1, #51	; 0x33
    6ba4:	str	r1, [r0, #12]
    6ba8:	cmp	r5, #0
    6bac:	beq	6bbc <gen_protochain+0x410>
    6bb0:	ldr	r0, [r6, r5, lsl #2]
    6bb4:	ldr	r1, [r6, sl, lsl #2]
    6bb8:	str	r1, [r0, #8]
    6bbc:	add	r5, r6, sl, lsl #2
    6bc0:	mov	r0, #135	; 0x87
    6bc4:	bl	79c0 <new_stmt>
    6bc8:	str	r0, [r5, #4]
    6bcc:	ldr	r1, [r6, sl, lsl #2]
    6bd0:	str	r0, [r1, #4]
    6bd4:	mov	r0, #80	; 0x50
    6bd8:	bl	79c0 <new_stmt>
    6bdc:	str	r0, [r5, #8]
    6be0:	ldr	r1, [pc, #468]	; 6dbc <gen_protochain+0x610>
    6be4:	ldr	r1, [pc, r1]
    6be8:	ldr	r2, [pc, #464]	; 6dc0 <gen_protochain+0x614>
    6bec:	ldr	r2, [pc, r2]
    6bf0:	add	r1, r2, r1
    6bf4:	str	r1, [r0, #12]
    6bf8:	mov	r8, #2
    6bfc:	mov	r0, #2
    6c00:	bl	79c0 <new_stmt>
    6c04:	str	r0, [r5, #12]
    6c08:	str	r9, [r0, #12]
    6c0c:	mov	r0, #135	; 0x87
    6c10:	bl	79c0 <new_stmt>
    6c14:	str	r0, [r5, #16]
    6c18:	ldr	r1, [r5, #12]
    6c1c:	str	r0, [r1, #4]
    6c20:	mov	r7, r9
    6c24:	mov	r9, #4
    6c28:	mov	r0, #4
    6c2c:	bl	79c0 <new_stmt>
    6c30:	str	r0, [r5, #20]
    6c34:	mov	r1, #1
    6c38:	str	r1, [r0, #12]
    6c3c:	mov	r0, #7
    6c40:	bl	79c0 <new_stmt>
    6c44:	str	r0, [r5, #24]
    6c48:	mov	r0, #80	; 0x50
    6c4c:	bl	79c0 <new_stmt>
    6c50:	str	r0, [r5, #28]
    6c54:	ldr	r1, [pc, #360]	; 6dc4 <gen_protochain+0x618>
    6c58:	ldr	r1, [pc, r1]
    6c5c:	ldr	r2, [pc, #356]	; 6dc8 <gen_protochain+0x61c>
    6c60:	ldr	r2, [pc, r2]
    6c64:	add	r1, r2, r1
    6c68:	str	r1, [r0, #12]
    6c6c:	orr	r5, sl, #8
    6c70:	mov	r0, #4
    6c74:	bl	79c0 <new_stmt>
    6c78:	str	r0, [r6, r5, lsl #2]
    6c7c:	str	r8, [r0, #12]
    6c80:	add	r4, r6, r5, lsl #2
    6c84:	mov	r0, #36	; 0x24
    6c88:	bl	79c0 <new_stmt>
    6c8c:	str	r0, [r4, #4]
    6c90:	str	r9, [r0, #12]
    6c94:	mov	r0, #7
    6c98:	bl	79c0 <new_stmt>
    6c9c:	str	r0, [r4, #8]
    6ca0:	mov	r0, #96	; 0x60
    6ca4:	bl	79c0 <new_stmt>
    6ca8:	str	r0, [r4, #12]
    6cac:	str	r7, [r0, #12]
    6cb0:	mov	r0, #5
    6cb4:	bl	79c0 <new_stmt>
    6cb8:	str	r0, [r4, #16]
    6cbc:	mvn	r1, #8
    6cc0:	eor	r1, sl, r1
    6cc4:	sub	r1, r1, #1
    6cc8:	str	r1, [r0, #12]
    6ccc:	add	r5, r5, #5
    6cd0:	mov	r0, #4
    6cd4:	bl	79c0 <new_stmt>
    6cd8:	str	r0, [r6, r5, lsl #2]
    6cdc:	mov	r1, #0
    6ce0:	str	r1, [r0, #12]
    6ce4:	ldr	r0, [r6, r5, lsl #2]
    6ce8:	ldr	r1, [sp, #24]
    6cec:	str	r0, [r1, #4]
    6cf0:	ldr	r0, [r6, sl, lsl #2]
    6cf4:	ldr	r1, [r6, r5, lsl #2]
    6cf8:	str	r1, [r0, #8]
    6cfc:	ldr	r0, [r6, r5, lsl #2]
    6d00:	ldr	r1, [sp, #20]
    6d04:	str	r0, [r1, #4]
    6d08:	orr	r0, r6, #4
    6d0c:	mov	r1, r5
    6d10:	ldmda	r0, {r2, r3}
    6d14:	str	r3, [r2, #16]
    6d18:	subs	r1, r1, #1
    6d1c:	add	r0, r0, #4
    6d20:	bne	6d10 <gen_protochain+0x564>
    6d24:	ldr	r0, [r6, r5, lsl #2]
    6d28:	mov	r1, #0
    6d2c:	str	r1, [r0, #16]
    6d30:	mov	r0, #21
    6d34:	bl	7c8c <new_block>
    6d38:	mov	r6, r0
    6d3c:	ldr	r0, [sp, #12]
    6d40:	ldr	r1, [sp, #4]
    6d44:	str	r1, [r6, #20]
    6d48:	str	r0, [r6, #4]
    6d4c:	mov	r0, r7
    6d50:	bl	7988 <free_reg>
    6d54:	ldr	r0, [sp]
    6d58:	mov	r1, r6
    6d5c:	bl	316c <sf_gen_and>
    6d60:	mov	r0, r6
    6d64:	sub	sp, fp, #28
    6d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6d6c:	ldr	r0, [pc, #16]	; 6d84 <gen_protochain+0x5d8>
    6d70:	add	r0, pc, r0
    6d74:	bl	1fc4 <sf_bpf_error>
    6d78:	ldr	r0, [pc, #32]	; 6da0 <gen_protochain+0x5f4>
    6d7c:	add	r0, pc, r0
    6d80:	bl	1fc4 <sf_bpf_error>
    6d84:	.word	0x0000cc1c
    6d88:	.word	0x00029db4
    6d8c:	.word	0x0002a2e8
    6d90:	.word	0x00029d40
    6d94:	.word	0x00029d34
    6d98:	.word	0x00029d14
    6d9c:	.word	0x00029d10
    6da0:	.word	0x0000cc5d
    6da4:	.word	0x00029cb0
    6da8:	.word	0x00029ca4
    6dac:	.word	0x00029b40
    6db0:	.word	0x00029b3c
    6db4:	.word	0x00029ae0
    6db8:	.word	0x00029adc
    6dbc:	.word	0x000299c8
    6dc0:	.word	0x000299c4
    6dc4:	.word	0x00029954
    6dc8:	.word	0x00029950
    6dcc:	.word	0x0000d192

00006dd0 <sf_gen_mcode>:
    6dd0:	push	{r4, r5, r6, r7, fp, lr}
    6dd4:	add	fp, sp, #16
    6dd8:	sub	sp, sp, #16
    6ddc:	mov	r4, r3
    6de0:	mov	r7, r2
    6de4:	mov	r6, r1
    6de8:	mov	r5, r0
    6dec:	add	r1, sp, #12
    6df0:	bl	b78c <__pcap_atoin>
    6df4:	rsb	r0, r0, #32
    6df8:	ldr	r1, [sp, #12]
    6dfc:	lsl	r0, r1, r0
    6e00:	str	r0, [sp, #12]
    6e04:	cmp	r6, #0
    6e08:	beq	6e4c <sf_gen_mcode+0x7c>
    6e0c:	add	r1, sp, #8
    6e10:	mov	r0, r6
    6e14:	bl	b78c <__pcap_atoin>
    6e18:	rsb	r0, r0, #32
    6e1c:	ldr	r1, [sp, #8]
    6e20:	lsl	r2, r1, r0
    6e24:	str	r2, [sp, #8]
    6e28:	mvn	r0, r1, lsl r0
    6e2c:	ldr	r1, [sp, #12]
    6e30:	tst	r1, r0
    6e34:	beq	6e78 <sf_gen_mcode+0xa8>
    6e38:	ldr	r0, [pc, #156]	; 6edc <sf_gen_mcode+0x10c>
    6e3c:	add	r0, pc, r0
    6e40:	mov	r1, r5
    6e44:	mov	r2, r6
    6e48:	bl	1fc4 <sf_bpf_error>
    6e4c:	cmp	r7, #33	; 0x21
    6e50:	bge	6ebc <sf_gen_mcode+0xec>
    6e54:	rsb	r1, r7, #32
    6e58:	mvn	r2, #0
    6e5c:	cmp	r7, #0
    6e60:	mov	r3, r7
    6e64:	lslne	r3, r2, r1
    6e68:	str	r3, [sp, #8]
    6e6c:	mvn	r1, r3
    6e70:	tst	r0, r1
    6e74:	bne	6ec8 <sf_gen_mcode+0xf8>
    6e78:	uxtb	r0, r4
    6e7c:	cmp	r0, #2
    6e80:	bne	6eb0 <sf_gen_mcode+0xe0>
    6e84:	lsr	r3, r4, #16
    6e88:	lsr	r2, r4, #8
    6e8c:	ldr	r1, [sp, #8]
    6e90:	ldr	r0, [sp, #12]
    6e94:	mov	r7, #2
    6e98:	str	r7, [sp]
    6e9c:	uxtb	r2, r2
    6ea0:	uxtb	r3, r3
    6ea4:	bl	518c <gen_host>
    6ea8:	sub	sp, fp, #16
    6eac:	pop	{r4, r5, r6, r7, fp, pc}
    6eb0:	ldr	r0, [pc, #40]	; 6ee0 <sf_gen_mcode+0x110>
    6eb4:	add	r0, pc, r0
    6eb8:	bl	1fc4 <sf_bpf_error>
    6ebc:	ldr	r0, [pc, #32]	; 6ee4 <sf_gen_mcode+0x114>
    6ec0:	add	r0, pc, r0
    6ec4:	bl	1fc4 <sf_bpf_error>
    6ec8:	ldr	r0, [pc, #24]	; 6ee8 <sf_gen_mcode+0x118>
    6ecc:	add	r0, pc, r0
    6ed0:	mov	r1, r5
    6ed4:	mov	r2, r7
    6ed8:	bl	1fc4 <sf_bpf_error>
    6edc:	.word	0x0000b92c
    6ee0:	.word	0x0000b913
    6ee4:	.word	0x0000b8cd
    6ee8:	.word	0x0000b8db

00006eec <sf_gen_ncode>:
    6eec:	push	{r4, r5, r6, r7, fp, lr}
    6ef0:	add	fp, sp, #16
    6ef4:	sub	sp, sp, #8
    6ef8:	mov	r7, r2
    6efc:	mov	r6, r0
    6f00:	str	r1, [sp, #4]
    6f04:	ubfx	r4, r2, #16, #8
    6f08:	ubfx	r5, r2, #8, #8
    6f0c:	cmp	r0, #0
    6f10:	beq	6f2c <sf_gen_ncode+0x40>
    6f14:	add	r1, sp, #4
    6f18:	mov	r0, r6
    6f1c:	cmp	r5, #12
    6f20:	bne	6f34 <sf_gen_ncode+0x48>
    6f24:	bl	b7f0 <__pcap_atodn>
    6f28:	b	6f38 <sf_gen_ncode+0x4c>
    6f2c:	mov	r0, #32
    6f30:	b	6f38 <sf_gen_ncode+0x4c>
    6f34:	bl	b78c <__pcap_atoin>
    6f38:	uxtb	r2, r7
    6f3c:	cmp	r2, #7
    6f40:	bhi	7104 <sf_gen_ncode+0x218>
    6f44:	lsr	r1, r7, #8
    6f48:	add	r3, pc, #4
    6f4c:	ldr	r7, [r3, r2, lsl #2]
    6f50:	add	pc, r3, r7
    6f54:	.word	0x00000020
    6f58:	.word	0x00000020
    6f5c:	.word	0x00000020
    6f60:	.word	0x00000084
    6f64:	.word	0x000001bc
    6f68:	.word	0x0000014c
    6f6c:	.word	0x000000d8
    6f70:	.word	0x000000e8
    6f74:	uxtb	r1, r1
    6f78:	cmp	r1, #12
    6f7c:	beq	6fbc <sf_gen_ncode+0xd0>
    6f80:	cmp	r1, #1
    6f84:	beq	7120 <sf_gen_ncode+0x234>
    6f88:	cmp	r6, #0
    6f8c:	cmpeq	r2, #2
    6f90:	beq	70c0 <sf_gen_ncode+0x1d4>
    6f94:	rsb	r0, r0, #32
    6f98:	ldr	r1, [sp, #4]
    6f9c:	lsl	r1, r1, r0
    6fa0:	str	r1, [sp, #4]
    6fa4:	mvn	r1, #0
    6fa8:	lsl	r1, r1, r0
    6fac:	ldr	r0, [sp, #4]
    6fb0:	str	r2, [sp]
    6fb4:	mov	r2, r5
    6fb8:	b	6fcc <sf_gen_ncode+0xe0>
    6fbc:	ldr	r0, [sp, #4]
    6fc0:	str	r2, [sp]
    6fc4:	mov	r1, #0
    6fc8:	mov	r2, #12
    6fcc:	mov	r3, r4
    6fd0:	bl	518c <gen_host>
    6fd4:	b	70b0 <sf_gen_ncode+0x1c4>
    6fd8:	uxtb	r0, r1
    6fdc:	cmp	r0, #8
    6fe0:	bcs	712c <sf_gen_ncode+0x240>
    6fe4:	mov	r2, #225	; 0xe1
    6fe8:	mov	r3, #1
    6fec:	tst	r3, r2, lsr r0
    6ff0:	beq	712c <sf_gen_ncode+0x240>
    6ff4:	lsl	r0, r1, #24
    6ff8:	ldr	r1, [pc, #324]	; 7144 <sf_gen_ncode+0x258>
    6ffc:	add	r1, pc, r1
    7000:	ldr	r6, [r1, r0, asr #22]
    7004:	ldr	r0, [sp, #4]
    7008:	mov	r1, r6
    700c:	mov	r2, r4
    7010:	bl	6320 <gen_port>
    7014:	mov	r5, r0
    7018:	ldr	r0, [sp, #4]
    701c:	mov	r1, r6
    7020:	mov	r2, r4
    7024:	bl	63e0 <gen_port6>
    7028:	b	7094 <sf_gen_ncode+0x1a8>
    702c:	ldr	r0, [sp, #4]
    7030:	mov	r1, r5
    7034:	bl	67ac <gen_protochain>
    7038:	b	70b0 <sf_gen_ncode+0x1c4>
    703c:	uxtb	r0, r1
    7040:	cmp	r0, #8
    7044:	bcs	7138 <sf_gen_ncode+0x24c>
    7048:	mov	r2, #225	; 0xe1
    704c:	mov	r3, #1
    7050:	tst	r3, r2, lsr r0
    7054:	beq	7138 <sf_gen_ncode+0x24c>
    7058:	lsl	r0, r1, #24
    705c:	ldr	r1, [pc, #228]	; 7148 <sf_gen_ncode+0x25c>
    7060:	add	r1, pc, r1
    7064:	ldr	r6, [r1, r0, asr #22]
    7068:	ldr	r0, [sp, #4]
    706c:	mov	r1, r0
    7070:	mov	r2, r6
    7074:	mov	r3, r4
    7078:	bl	64a0 <gen_portrange>
    707c:	mov	r5, r0
    7080:	ldr	r0, [sp, #4]
    7084:	mov	r1, r0
    7088:	mov	r2, r6
    708c:	mov	r3, r4
    7090:	bl	6574 <gen_portrange6>
    7094:	mov	r1, r5
    7098:	bl	3244 <sf_gen_or>
    709c:	b	70b4 <sf_gen_ncode+0x1c8>
    70a0:	ldr	r0, [sp, #4]
    70a4:	mov	r1, r5
    70a8:	mov	r2, r4
    70ac:	bl	3724 <gen_proto>
    70b0:	mov	r5, r0
    70b4:	mov	r0, r5
    70b8:	sub	sp, fp, #16
    70bc:	pop	{r4, r5, r6, r7, fp, pc}
    70c0:	ldr	r0, [sp, #4]
    70c4:	sub	r3, r0, #1
    70c8:	mvn	r1, #0
    70cc:	movw	r7, #65534	; 0xfffe
    70d0:	movt	r7, #255	; 0xff
    70d4:	cmp	r3, r7
    70d8:	bhi	6fac <sf_gen_ncode+0xc0>
    70dc:	mvn	r3, #0
    70e0:	mvn	r7, #-16777216	; 0xff000000
    70e4:	mvn	r1, #0
    70e8:	add	r6, r3, r0, lsl #8
    70ec:	lsl	r1, r1, #8
    70f0:	lsl	r0, r0, #8
    70f4:	cmp	r6, r7
    70f8:	bcc	70e8 <sf_gen_ncode+0x1fc>
    70fc:	str	r0, [sp, #4]
    7100:	b	6fac <sf_gen_ncode+0xc0>
    7104:	cmp	r2, #255	; 0xff
    7108:	bne	711c <sf_gen_ncode+0x230>
    710c:	bl	2f78 <syntax>
    7110:	ldr	r0, [pc, #52]	; 714c <sf_gen_ncode+0x260>
    7114:	add	r0, pc, r0
    7118:	bl	1fc4 <sf_bpf_error>
    711c:	bl	fc4 <abort@plt>
    7120:	ldr	r0, [pc, #40]	; 7150 <sf_gen_ncode+0x264>
    7124:	add	r0, pc, r0
    7128:	bl	1fc4 <sf_bpf_error>
    712c:	ldr	r0, [pc, #32]	; 7154 <sf_gen_ncode+0x268>
    7130:	add	r0, pc, r0
    7134:	bl	1fc4 <sf_bpf_error>
    7138:	ldr	r0, [pc, #24]	; 7158 <sf_gen_ncode+0x26c>
    713c:	add	r0, pc, r0
    7140:	bl	1fc4 <sf_bpf_error>
    7144:	.word	0x0000ca34
    7148:	.word	0x0000c9d0
    714c:	.word	0x0000b6ec
    7150:	.word	0x0000b6c1
    7154:	.word	0x0000b508
    7158:	.word	0x0000b55e

0000715c <sf_gen_mcode6>:
    715c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7160:	add	fp, sp, #28
    7164:	sub	sp, sp, #28
    7168:	cmp	r1, #0
    716c:	bne	72b4 <sf_gen_mcode6+0x158>
    7170:	mov	sl, r3
    7174:	mov	r6, r2
    7178:	mov	r5, r0
    717c:	bl	b470 <pcap_nametoaddrinfo>
    7180:	cmp	r0, #0
    7184:	beq	72c0 <sf_gen_mcode6+0x164>
    7188:	mov	r4, r0
    718c:	ldr	r0, [pc, #360]	; 72fc <sf_gen_mcode6+0x1a0>
    7190:	add	r0, pc, r0
    7194:	str	r4, [r0]
    7198:	ldr	r0, [r4, #28]
    719c:	cmp	r0, #0
    71a0:	bne	72d0 <sf_gen_mcode6+0x174>
    71a4:	str	r5, [sp, #4]
    71a8:	cmp	r6, #129	; 0x81
    71ac:	bcs	72e0 <sf_gen_mcode6+0x184>
    71b0:	ldr	r8, [r4, #20]
    71b4:	add	r9, r8, #8
    71b8:	vmov.i32	q8, #0	; 0x00000000
    71bc:	add	r7, sp, #8
    71c0:	vst1.64	{d16-d17}, [r7]
    71c4:	ubfx	r5, r6, #3, #5
    71c8:	mov	r0, r7
    71cc:	mov	r1, #255	; 0xff
    71d0:	mov	r2, r5
    71d4:	bl	f40 <memset@plt>
    71d8:	ands	r0, r6, #7
    71dc:	rsbne	r0, r0, #8
    71e0:	movne	r1, #255	; 0xff
    71e4:	lslne	r0, r1, r0
    71e8:	strbne	r0, [r7, r5]
    71ec:	ldr	r0, [r9]
    71f0:	ldr	r1, [sp, #8]
    71f4:	mvn	r1, r1
    71f8:	tst	r0, r1
    71fc:	ldreq	r0, [r8, #12]
    7200:	ldreq	r1, [sp, #12]
    7204:	mvneq	r1, r1
    7208:	tsteq	r0, r1
    720c:	bne	7234 <sf_gen_mcode6+0xd8>
    7210:	ldr	r0, [r8, #16]
    7214:	ldr	r1, [sp, #16]
    7218:	mvn	r1, r1
    721c:	tst	r0, r1
    7220:	ldreq	r0, [r8, #20]
    7224:	ldreq	r1, [sp, #20]
    7228:	mvneq	r1, r1
    722c:	tsteq	r0, r1
    7230:	beq	7248 <sf_gen_mcode6+0xec>
    7234:	ldr	r0, [pc, #220]	; 7318 <sf_gen_mcode6+0x1bc>
    7238:	add	r0, pc, r0
    723c:	ldr	r1, [sp, #4]
    7240:	mov	r2, r6
    7244:	bl	1fc4 <sf_bpf_error>
    7248:	uxtb	r0, sl
    724c:	cmp	r0, #2
    7250:	bcs	7268 <sf_gen_mcode6+0x10c>
    7254:	cmp	r6, #128	; 0x80
    7258:	beq	726c <sf_gen_mcode6+0x110>
    725c:	ldr	r0, [pc, #184]	; 731c <sf_gen_mcode6+0x1c0>
    7260:	add	r0, pc, r0
    7264:	bl	1fc4 <sf_bpf_error>
    7268:	bne	72f0 <sf_gen_mcode6+0x194>
    726c:	lsr	r1, sl, #16
    7270:	lsr	r2, sl, #8
    7274:	str	r0, [sp]
    7278:	uxtb	r2, r2
    727c:	uxtb	r3, r1
    7280:	add	r1, sp, #8
    7284:	mov	r0, r9
    7288:	bl	5db4 <gen_host6>
    728c:	mov	r5, r0
    7290:	mov	r0, #0
    7294:	ldr	r1, [pc, #104]	; 7304 <sf_gen_mcode6+0x1a8>
    7298:	add	r1, pc, r1
    729c:	str	r0, [r1]
    72a0:	mov	r0, r4
    72a4:	bl	f94 <freeaddrinfo@plt>
    72a8:	mov	r0, r5
    72ac:	sub	sp, fp, #28
    72b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72b4:	ldr	r0, [pc, #76]	; 7308 <sf_gen_mcode6+0x1ac>
    72b8:	add	r0, pc, r0
    72bc:	bl	1fc4 <sf_bpf_error>
    72c0:	ldr	r0, [pc, #68]	; 730c <sf_gen_mcode6+0x1b0>
    72c4:	add	r0, pc, r0
    72c8:	mov	r1, r5
    72cc:	bl	1fc4 <sf_bpf_error>
    72d0:	ldr	r0, [pc, #56]	; 7310 <sf_gen_mcode6+0x1b4>
    72d4:	add	r0, pc, r0
    72d8:	mov	r1, r5
    72dc:	bl	1fc4 <sf_bpf_error>
    72e0:	ldr	r0, [pc, #44]	; 7314 <sf_gen_mcode6+0x1b8>
    72e4:	add	r0, pc, r0
    72e8:	mov	r1, #128	; 0x80
    72ec:	bl	1fc4 <sf_bpf_error>
    72f0:	ldr	r0, [pc, #8]	; 7300 <sf_gen_mcode6+0x1a4>
    72f4:	add	r0, pc, r0
    72f8:	bl	1fc4 <sf_bpf_error>
    72fc:	.word	0x00029404
    7300:	.word	0x0000b58c
    7304:	.word	0x000292fc
    7308:	.word	0x0000b562
    730c:	.word	0x0000b56b
    7310:	.word	0x0000b572
    7314:	.word	0x0000b582
    7318:	.word	0x0000b56f
    731c:	.word	0x0000b567

00007320 <sf_gen_ecode>:
    7320:	push	{r4, r5, r6, sl, fp, lr}
    7324:	add	fp, sp, #16
    7328:	mov	r4, r0
    732c:	movw	r0, #65534	; 0xfffe
    7330:	and	r0, r1, r0
    7334:	cmp	r0, #256	; 0x100
    7338:	bne	751c <sf_gen_ecode+0x1fc>
    733c:	lsr	r6, r1, #16
    7340:	ldr	r0, [pc, #492]	; 7534 <sf_gen_ecode+0x214>
    7344:	ldr	r0, [pc, r0]
    7348:	cmp	r0, #104	; 0x68
    734c:	ble	7464 <sf_gen_ecode+0x144>
    7350:	sub	r1, r0, #105	; 0x69
    7354:	cmp	r1, #58	; 0x3a
    7358:	bhi	7494 <sf_gen_ecode+0x174>
    735c:	add	r0, pc, #4
    7360:	ldr	r1, [r0, r1, lsl #2]
    7364:	add	pc, r0, r1
    7368:	.word	0x000000ec
    736c:	.word	0x000001c0
    7370:	.word	0x000001c0
    7374:	.word	0x000001c0
    7378:	.word	0x000001c0
    737c:	.word	0x000001c0
    7380:	.word	0x000001c0
    7384:	.word	0x000001c0
    7388:	.word	0x000001c0
    738c:	.word	0x000001c0
    7390:	.word	0x000001c0
    7394:	.word	0x000001c0
    7398:	.word	0x000001c0
    739c:	.word	0x000001c0
    73a0:	.word	0x000000ec
    73a4:	.word	0x000001c0
    73a8:	.word	0x000001c0
    73ac:	.word	0x00000138
    73b0:	.word	0x00000148
    73b4:	.word	0x000001c0
    73b8:	.word	0x000001c0
    73bc:	.word	0x000001c0
    73c0:	.word	0x000000ec
    73c4:	.word	0x000001c0
    73c8:	.word	0x000001c0
    73cc:	.word	0x000001c0
    73d0:	.word	0x000001c0
    73d4:	.word	0x000001c0
    73d8:	.word	0x000001c0
    73dc:	.word	0x000001c0
    73e0:	.word	0x000001c0
    73e4:	.word	0x000001c0
    73e8:	.word	0x000001c0
    73ec:	.word	0x000001c0
    73f0:	.word	0x000001c0
    73f4:	.word	0x000001c0
    73f8:	.word	0x000001c0
    73fc:	.word	0x000001c0
    7400:	.word	0x000001c0
    7404:	.word	0x000001c0
    7408:	.word	0x000001c0
    740c:	.word	0x000001c0
    7410:	.word	0x000001c0
    7414:	.word	0x000001c0
    7418:	.word	0x000001c0
    741c:	.word	0x000001c0
    7420:	.word	0x000001c0
    7424:	.word	0x000001c0
    7428:	.word	0x000001c0
    742c:	.word	0x000001c0
    7430:	.word	0x000001c0
    7434:	.word	0x000001c0
    7438:	.word	0x000001c0
    743c:	.word	0x000001c0
    7440:	.word	0x000001c0
    7444:	.word	0x000001c0
    7448:	.word	0x000001c0
    744c:	.word	0x000001c0
    7450:	.word	0x000000ec
    7454:	uxtb	r1, r6
    7458:	mov	r0, r4
    745c:	pop	{r4, r5, r6, sl, fp, lr}
    7460:	b	5798 <gen_wlanhostop>
    7464:	cmp	r0, #1
    7468:	beq	7484 <sf_gen_ecode+0x164>
    746c:	cmp	r0, #6
    7470:	bne	7504 <sf_gen_ecode+0x1e4>
    7474:	uxtb	r1, r6
    7478:	mov	r0, r4
    747c:	pop	{r4, r5, r6, sl, fp, lr}
    7480:	b	56d8 <gen_thostop>
    7484:	uxtb	r1, r6
    7488:	mov	r0, r4
    748c:	pop	{r4, r5, r6, sl, fp, lr}
    7490:	b	5544 <gen_ehostop>
    7494:	cmp	r0, #192	; 0xc0
    7498:	beq	7454 <sf_gen_ecode+0x134>
    749c:	b	7528 <sf_gen_ecode+0x208>
    74a0:	uxtb	r1, r6
    74a4:	mov	r0, r4
    74a8:	pop	{r4, r5, r6, sl, fp, lr}
    74ac:	b	5cec <gen_ipfchostop>
    74b0:	ldr	r0, [pc, #128]	; 7538 <sf_gen_ecode+0x218>
    74b4:	add	r0, pc, r0
    74b8:	ldrb	r0, [r0]
    74bc:	cmp	r0, #1
    74c0:	bne	751c <sf_gen_ecode+0x1fc>
    74c4:	mov	r0, #1
    74c8:	mov	r1, #4
    74cc:	mov	r2, #8
    74d0:	mov	r3, #65280	; 0xff00
    74d4:	bl	4528 <gen_cmp>
    74d8:	mov	r5, r0
    74dc:	bl	3298 <sf_gen_not>
    74e0:	uxtb	r1, r6
    74e4:	mov	r0, r4
    74e8:	bl	5544 <gen_ehostop>
    74ec:	mov	r4, r0
    74f0:	mov	r0, r5
    74f4:	mov	r1, r4
    74f8:	bl	316c <sf_gen_and>
    74fc:	mov	r0, r4
    7500:	pop	{r4, r5, r6, sl, fp, pc}
    7504:	cmp	r0, #10
    7508:	bne	7528 <sf_gen_ecode+0x208>
    750c:	uxtb	r1, r6
    7510:	mov	r0, r4
    7514:	pop	{r4, r5, r6, sl, fp, lr}
    7518:	b	5618 <gen_fhostop>
    751c:	ldr	r0, [pc, #28]	; 7540 <sf_gen_ecode+0x220>
    7520:	add	r0, pc, r0
    7524:	bl	1fc4 <sf_bpf_error>
    7528:	ldr	r0, [pc, #12]	; 753c <sf_gen_ecode+0x21c>
    752c:	add	r0, pc, r0
    7530:	bl	1fc4 <sf_bpf_error>
    7534:	.word	0x0002925c
    7538:	.word	0x000290f0
    753c:	.word	0x0000b37b
    7540:	.word	0x0000b3e3

00007544 <sf_append>:
    7544:	mov	r2, r0
    7548:	ldr	r0, [r0, #16]
    754c:	cmp	r0, #0
    7550:	bne	7544 <sf_append>
    7554:	str	r1, [r2, #16]
    7558:	bx	lr

0000755c <sf_gen_load>:
    755c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7560:	add	fp, sp, #24
    7564:	mov	r5, r2
    7568:	mov	r4, r1
    756c:	mov	r7, r0
    7570:	bl	7910 <alloc_reg>
    7574:	mov	r8, r0
    7578:	ldr	r0, [r4, #8]
    757c:	bl	7988 <free_reg>
    7580:	cmp	r5, #1
    7584:	beq	75a8 <sf_gen_load+0x4c>
    7588:	cmp	r5, #2
    758c:	beq	75a0 <sf_gen_load+0x44>
    7590:	cmp	r5, #4
    7594:	bne	78d4 <sf_gen_load+0x378>
    7598:	mov	r6, #64	; 0x40
    759c:	b	75ac <sf_gen_load+0x50>
    75a0:	mov	r6, #72	; 0x48
    75a4:	b	75ac <sf_gen_load+0x50>
    75a8:	mov	r6, #80	; 0x50
    75ac:	sub	r0, r7, #1
    75b0:	cmp	r0, #39	; 0x27
    75b4:	bhi	78c8 <sf_gen_load+0x36c>
    75b8:	add	r1, pc, #4
    75bc:	ldr	r0, [r1, r0, lsl #2]
    75c0:	add	pc, r1, r0
    75c4:	.word	0x00000268
    75c8:	.word	0x000000a0
    75cc:	.word	0x000000a0
    75d0:	.word	0x000000a0
    75d4:	.word	0x000000f0
    75d8:	.word	0x000000f0
    75dc:	.word	0x000000f0
    75e0:	.word	0x000000f0
    75e4:	.word	0x000000f0
    75e8:	.word	0x000000f0
    75ec:	.word	0x000000a0
    75f0:	.word	0x000000a0
    75f4:	.word	0x000000a0
    75f8:	.word	0x000000a0
    75fc:	.word	0x000000a0
    7600:	.word	0x000000a0
    7604:	.word	0x000000a0
    7608:	.word	0x0000031c
    760c:	.word	0x00000304
    7610:	.word	0x00000304
    7614:	.word	0x000000f0
    7618:	.word	0x000000f0
    761c:	.word	0x00000304
    7620:	.word	0x00000304
    7624:	.word	0x00000304
    7628:	.word	0x00000304
    762c:	.word	0x00000304
    7630:	.word	0x00000304
    7634:	.word	0x00000304
    7638:	.word	0x00000304
    763c:	.word	0x00000304
    7640:	.word	0x00000304
    7644:	.word	0x00000304
    7648:	.word	0x00000304
    764c:	.word	0x00000304
    7650:	.word	0x00000304
    7654:	.word	0x00000304
    7658:	.word	0x00000304
    765c:	.word	0x00000304
    7660:	.word	0x00000238
    7664:	bl	7a48 <gen_off_macpl>
    7668:	cmp	r0, #0
    766c:	beq	7770 <sf_gen_load+0x214>
    7670:	mov	r5, r0
    7674:	mov	r0, r4
    7678:	bl	7a28 <xfer_to_a>
    767c:	mov	r1, r0
    7680:	mov	r0, r5
    7684:	bl	7544 <sf_append>
    7688:	mov	r0, #12
    768c:	bl	79c0 <new_stmt>
    7690:	mov	r1, r0
    7694:	mov	r0, r5
    7698:	bl	7544 <sf_append>
    769c:	mov	r0, #7
    76a0:	bl	79c0 <new_stmt>
    76a4:	mov	r1, r0
    76a8:	mov	r0, r5
    76ac:	bl	7544 <sf_append>
    76b0:	b	777c <sf_gen_load+0x220>
    76b4:	bl	7ab0 <gen_loadx_iphdrlen>
    76b8:	mov	r5, r0
    76bc:	mov	r0, r4
    76c0:	bl	7a28 <xfer_to_a>
    76c4:	mov	r1, r0
    76c8:	mov	r0, r5
    76cc:	bl	7544 <sf_append>
    76d0:	mov	r0, #12
    76d4:	bl	79c0 <new_stmt>
    76d8:	mov	r1, r0
    76dc:	mov	r0, r5
    76e0:	bl	7544 <sf_append>
    76e4:	mov	r0, #7
    76e8:	bl	79c0 <new_stmt>
    76ec:	mov	r1, r0
    76f0:	mov	r0, r5
    76f4:	bl	7544 <sf_append>
    76f8:	mov	r0, r6
    76fc:	bl	79c0 <new_stmt>
    7700:	mov	r6, r0
    7704:	mov	r0, r5
    7708:	mov	r1, r6
    770c:	bl	7544 <sf_append>
    7710:	ldr	r0, [pc, #488]	; 7900 <sf_gen_load+0x3a4>
    7714:	ldr	r0, [pc, r0]
    7718:	ldr	r1, [pc, #484]	; 7904 <sf_gen_load+0x3a8>
    771c:	ldr	r1, [pc, r1]
    7720:	add	r0, r1, r0
    7724:	str	r0, [r6, #12]
    7728:	ldr	r0, [r4, #4]
    772c:	mov	r1, r5
    7730:	bl	7544 <sf_append>
    7734:	mov	r0, r7
    7738:	bl	32ac <sf_gen_proto_abbrev>
    773c:	mov	r6, r0
    7740:	bl	4558 <gen_ipfrag>
    7744:	mov	r5, r0
    7748:	mov	r0, r6
    774c:	mov	r1, r5
    7750:	bl	316c <sf_gen_and>
    7754:	ldr	r0, [r4]
    7758:	cmp	r0, #0
    775c:	movne	r1, r5
    7760:	blne	316c <sf_gen_and>
    7764:	mov	r0, #2
    7768:	bl	32ac <sf_gen_proto_abbrev>
    776c:	b	77cc <sf_gen_load+0x270>
    7770:	mov	r0, r4
    7774:	bl	79a0 <xfer_to_x>
    7778:	mov	r5, r0
    777c:	mov	r0, r6
    7780:	bl	79c0 <new_stmt>
    7784:	mov	r1, r0
    7788:	ldr	r0, [pc, #360]	; 78f8 <sf_gen_load+0x39c>
    778c:	ldr	r0, [pc, r0]
    7790:	ldr	r2, [pc, #356]	; 78fc <sf_gen_load+0x3a0>
    7794:	ldr	r2, [pc, r2]
    7798:	add	r0, r2, r0
    779c:	str	r0, [r1, #12]
    77a0:	mov	r0, r5
    77a4:	bl	7544 <sf_append>
    77a8:	ldr	r0, [r4, #4]
    77ac:	mov	r1, r5
    77b0:	bl	7544 <sf_append>
    77b4:	mov	r0, r7
    77b8:	bl	32ac <sf_gen_proto_abbrev>
    77bc:	mov	r5, r0
    77c0:	ldr	r0, [r4]
    77c4:	cmp	r0, #0
    77c8:	beq	77d4 <sf_gen_load+0x278>
    77cc:	mov	r1, r5
    77d0:	bl	316c <sf_gen_and>
    77d4:	str	r5, [r4]
    77d8:	str	r8, [r4, #8]
    77dc:	mov	r0, #2
    77e0:	bl	79c0 <new_stmt>
    77e4:	mov	r1, r0
    77e8:	str	r8, [r0, #12]
    77ec:	ldr	r0, [r4, #4]
    77f0:	bl	7544 <sf_append>
    77f4:	mov	r0, r4
    77f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    77fc:	ldr	r0, [pc, #240]	; 78f4 <sf_gen_load+0x398>
    7800:	ldr	r0, [pc, r0]
    7804:	cmp	r0, #119	; 0x77
    7808:	cmpne	r0, #127	; 0x7f
    780c:	bne	78b4 <sf_gen_load+0x358>
    7810:	mov	r0, r4
    7814:	bl	79a0 <xfer_to_x>
    7818:	mov	r5, r0
    781c:	mov	r0, r6
    7820:	bl	79c0 <new_stmt>
    7824:	mov	r1, r0
    7828:	b	789c <sf_gen_load+0x340>
    782c:	bl	79dc <gen_llprefixlen>
    7830:	cmp	r0, #0
    7834:	beq	787c <sf_gen_load+0x320>
    7838:	mov	r5, r0
    783c:	mov	r0, r4
    7840:	bl	7a28 <xfer_to_a>
    7844:	mov	r1, r0
    7848:	mov	r0, r5
    784c:	bl	7544 <sf_append>
    7850:	mov	r0, #12
    7854:	bl	79c0 <new_stmt>
    7858:	mov	r1, r0
    785c:	mov	r0, r5
    7860:	bl	7544 <sf_append>
    7864:	mov	r0, #7
    7868:	bl	79c0 <new_stmt>
    786c:	mov	r1, r0
    7870:	mov	r0, r5
    7874:	bl	7544 <sf_append>
    7878:	b	7888 <sf_gen_load+0x32c>
    787c:	mov	r0, r4
    7880:	bl	79a0 <xfer_to_x>
    7884:	mov	r5, r0
    7888:	mov	r0, r6
    788c:	bl	79c0 <new_stmt>
    7890:	mov	r1, r0
    7894:	mov	r0, #0
    7898:	str	r0, [r1, #12]
    789c:	mov	r0, r5
    78a0:	bl	7544 <sf_append>
    78a4:	ldr	r0, [r4, #4]
    78a8:	mov	r1, r5
    78ac:	bl	7544 <sf_append>
    78b0:	b	77d8 <sf_gen_load+0x27c>
    78b4:	cmp	r0, #163	; 0xa3
    78b8:	beq	7810 <sf_gen_load+0x2b4>
    78bc:	ldr	r0, [pc, #68]	; 7908 <sf_gen_load+0x3ac>
    78c0:	add	r0, pc, r0
    78c4:	bl	1fc4 <sf_bpf_error>
    78c8:	ldr	r0, [pc, #32]	; 78f0 <sf_gen_load+0x394>
    78cc:	add	r0, pc, r0
    78d0:	bl	1fc4 <sf_bpf_error>
    78d4:	ldr	r0, [pc, #16]	; 78ec <sf_gen_load+0x390>
    78d8:	add	r0, pc, r0
    78dc:	bl	1fc4 <sf_bpf_error>
    78e0:	ldr	r0, [pc, #36]	; 790c <sf_gen_load+0x3b0>
    78e4:	add	r0, pc, r0
    78e8:	bl	1fc4 <sf_bpf_error>
    78ec:	.word	0x0000b059
    78f0:	.word	0x0000b082
    78f4:	.word	0x00028da0
    78f8:	.word	0x00028e20
    78fc:	.word	0x00028e1c
    7900:	.word	0x00028e98
    7904:	.word	0x00028e94
    7908:	.word	0x0000b0aa
    790c:	.word	0x0000b0af

00007910 <alloc_reg>:
    7910:	push	{fp, lr}
    7914:	mov	fp, sp
    7918:	mvn	r2, #15
    791c:	ldr	ip, [pc, #84]	; 7978 <alloc_reg+0x68>
    7920:	add	ip, pc, ip
    7924:	ldr	r3, [pc, #80]	; 797c <alloc_reg+0x6c>
    7928:	add	r3, pc, r3
    792c:	ldr	r0, [pc, #76]	; 7980 <alloc_reg+0x70>
    7930:	ldr	r0, [pc, r0]
    7934:	ldr	r1, [ip, r0, lsl #2]
    7938:	cmp	r1, #0
    793c:	beq	796c <alloc_reg+0x5c>
    7940:	add	r0, r0, #1
    7944:	asr	r1, r0, #31
    7948:	add	r1, r0, r1, lsr #28
    794c:	bic	r1, r1, #15
    7950:	sub	r0, r0, r1
    7954:	str	r0, [r3]
    7958:	adds	r2, r2, #1
    795c:	bcc	792c <alloc_reg+0x1c>
    7960:	ldr	r0, [pc, #28]	; 7984 <alloc_reg+0x74>
    7964:	add	r0, pc, r0
    7968:	bl	1fc4 <sf_bpf_error>
    796c:	mov	r1, #1
    7970:	str	r1, [ip, r0, lsl #2]
    7974:	pop	{fp, pc}
    7978:	.word	0x00028d60
    797c:	.word	0x00028d54
    7980:	.word	0x00028d4c
    7984:	.word	0x0000c099

00007988 <free_reg>:
    7988:	ldr	r1, [pc, #12]	; 799c <free_reg+0x14>
    798c:	add	r1, pc, r1
    7990:	mov	r2, #0
    7994:	str	r2, [r1, r0, lsl #2]
    7998:	bx	lr
    799c:	.word	0x00028cf4

000079a0 <xfer_to_x>:
    79a0:	push	{r4, sl, fp, lr}
    79a4:	add	fp, sp, #8
    79a8:	mov	r4, r0
    79ac:	mov	r0, #97	; 0x61
    79b0:	bl	79c0 <new_stmt>
    79b4:	ldr	r1, [r4, #8]
    79b8:	str	r1, [r0, #12]
    79bc:	pop	{r4, sl, fp, pc}

000079c0 <new_stmt>:
    79c0:	push	{r4, sl, fp, lr}
    79c4:	add	fp, sp, #8
    79c8:	mov	r4, r0
    79cc:	mov	r0, #20
    79d0:	bl	2050 <newchunk>
    79d4:	str	r4, [r0]
    79d8:	pop	{r4, sl, fp, pc}

000079dc <gen_llprefixlen>:
    79dc:	ldr	r0, [pc, #64]	; 7a24 <gen_llprefixlen+0x48>
    79e0:	ldr	r0, [pc, r0]
    79e4:	cmp	r0, #162	; 0xa2
    79e8:	bgt	7a00 <gen_llprefixlen+0x24>
    79ec:	cmp	r0, #119	; 0x77
    79f0:	beq	7a1c <gen_llprefixlen+0x40>
    79f4:	cmp	r0, #127	; 0x7f
    79f8:	bne	7a14 <gen_llprefixlen+0x38>
    79fc:	b	b2c4 <gen_radiotap_llprefixlen>
    7a00:	cmp	r0, #163	; 0xa3
    7a04:	beq	7a20 <gen_llprefixlen+0x44>
    7a08:	cmp	r0, #192	; 0xc0
    7a0c:	bne	7a14 <gen_llprefixlen+0x38>
    7a10:	b	b310 <gen_ppi_llprefixlen>
    7a14:	mov	r0, #0
    7a18:	bx	lr
    7a1c:	b	b22c <gen_prism_llprefixlen>
    7a20:	b	b278 <gen_avs_llprefixlen>
    7a24:	.word	0x00028bc0

00007a28 <xfer_to_a>:
    7a28:	push	{r4, sl, fp, lr}
    7a2c:	add	fp, sp, #8
    7a30:	mov	r4, r0
    7a34:	mov	r0, #96	; 0x60
    7a38:	bl	79c0 <new_stmt>
    7a3c:	ldr	r1, [r4, #8]
    7a40:	str	r1, [r0, #12]
    7a44:	pop	{r4, sl, fp, pc}

00007a48 <gen_off_macpl>:
    7a48:	push	{fp, lr}
    7a4c:	mov	fp, sp
    7a50:	ldr	r0, [pc, #72]	; 7aa0 <gen_off_macpl+0x58>
    7a54:	add	r0, pc, r0
    7a58:	ldrb	r1, [r0]
    7a5c:	mov	r0, #0
    7a60:	cmp	r1, #1
    7a64:	popne	{fp, pc}
    7a68:	ldr	r0, [pc, #52]	; 7aa4 <gen_off_macpl+0x5c>
    7a6c:	ldr	r0, [pc, r0]
    7a70:	cmn	r0, #1
    7a74:	bne	7a88 <gen_off_macpl+0x40>
    7a78:	bl	7910 <alloc_reg>
    7a7c:	ldr	r1, [pc, #36]	; 7aa8 <gen_off_macpl+0x60>
    7a80:	add	r1, pc, r1
    7a84:	str	r0, [r1]
    7a88:	mov	r0, #97	; 0x61
    7a8c:	bl	79c0 <new_stmt>
    7a90:	ldr	r1, [pc, #20]	; 7aac <gen_off_macpl+0x64>
    7a94:	ldr	r1, [pc, r1]
    7a98:	str	r1, [r0, #12]
    7a9c:	pop	{fp, pc}
    7aa0:	.word	0x00028c1c
    7aa4:	.word	0x00028c0c
    7aa8:	.word	0x00028bf8
    7aac:	.word	0x00028be4

00007ab0 <gen_loadx_iphdrlen>:
    7ab0:	push	{r4, sl, fp, lr}
    7ab4:	add	fp, sp, #8
    7ab8:	bl	7a48 <gen_off_macpl>
    7abc:	cmp	r0, #0
    7ac0:	beq	7b50 <gen_loadx_iphdrlen+0xa0>
    7ac4:	mov	r4, r0
    7ac8:	mov	r0, #80	; 0x50
    7acc:	bl	79c0 <new_stmt>
    7ad0:	mov	r1, r0
    7ad4:	ldr	r0, [pc, #160]	; 7b7c <gen_loadx_iphdrlen+0xcc>
    7ad8:	ldr	r0, [pc, r0]
    7adc:	str	r0, [r1, #12]
    7ae0:	mov	r0, r4
    7ae4:	bl	7544 <sf_append>
    7ae8:	mov	r0, #84	; 0x54
    7aec:	bl	79c0 <new_stmt>
    7af0:	mov	r1, r0
    7af4:	mov	r0, #15
    7af8:	str	r0, [r1, #12]
    7afc:	mov	r0, r4
    7b00:	bl	7544 <sf_append>
    7b04:	mov	r0, #100	; 0x64
    7b08:	bl	79c0 <new_stmt>
    7b0c:	mov	r1, r0
    7b10:	mov	r0, #2
    7b14:	str	r0, [r1, #12]
    7b18:	mov	r0, r4
    7b1c:	bl	7544 <sf_append>
    7b20:	mov	r0, #12
    7b24:	bl	79c0 <new_stmt>
    7b28:	mov	r1, r0
    7b2c:	mov	r0, r4
    7b30:	bl	7544 <sf_append>
    7b34:	mov	r0, #7
    7b38:	bl	79c0 <new_stmt>
    7b3c:	mov	r1, r0
    7b40:	mov	r0, r4
    7b44:	bl	7544 <sf_append>
    7b48:	mov	r0, r4
    7b4c:	pop	{r4, sl, fp, pc}
    7b50:	mov	r0, #177	; 0xb1
    7b54:	bl	79c0 <new_stmt>
    7b58:	mov	r4, r0
    7b5c:	ldr	r0, [pc, #28]	; 7b80 <gen_loadx_iphdrlen+0xd0>
    7b60:	ldr	r0, [pc, r0]
    7b64:	ldr	r1, [pc, #24]	; 7b84 <gen_loadx_iphdrlen+0xd4>
    7b68:	ldr	r1, [pc, r1]
    7b6c:	add	r0, r1, r0
    7b70:	str	r0, [r4, #12]
    7b74:	mov	r0, r4
    7b78:	pop	{r4, sl, fp, pc}
    7b7c:	.word	0x00028ad8
    7b80:	.word	0x00028a4c
    7b84:	.word	0x00028a48

00007b88 <sf_gen_relation>:
    7b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b8c:	add	fp, sp, #28
    7b90:	sub	sp, sp, #4
    7b94:	mov	r8, r3
    7b98:	mov	r5, r2
    7b9c:	mov	r4, r1
    7ba0:	mov	r6, r0
    7ba4:	mov	r0, r2
    7ba8:	bl	79a0 <xfer_to_x>
    7bac:	mov	r7, r0
    7bb0:	mov	r0, r4
    7bb4:	bl	7a28 <xfer_to_a>
    7bb8:	mov	r9, r0
    7bbc:	cmp	r6, #16
    7bc0:	bne	7bec <sf_gen_relation+0x64>
    7bc4:	mov	r0, #28
    7bc8:	bl	79c0 <new_stmt>
    7bcc:	mov	sl, r0
    7bd0:	mov	r0, #21
    7bd4:	bl	7c8c <new_block>
    7bd8:	mov	r6, r0
    7bdc:	mov	r0, r9
    7be0:	mov	r1, sl
    7be4:	bl	7544 <sf_append>
    7be8:	b	7bf8 <sf_gen_relation+0x70>
    7bec:	orr	r0, r6, #13
    7bf0:	bl	7c8c <new_block>
    7bf4:	mov	r6, r0
    7bf8:	cmp	r8, #0
    7bfc:	movne	r0, r6
    7c00:	blne	3298 <sf_gen_not>
    7c04:	mov	r0, r7
    7c08:	mov	r1, r9
    7c0c:	bl	7544 <sf_append>
    7c10:	ldr	r0, [r5, #4]
    7c14:	mov	r1, r7
    7c18:	bl	7544 <sf_append>
    7c1c:	ldr	r1, [r5, #4]
    7c20:	ldr	r0, [r4, #4]
    7c24:	bl	7544 <sf_append>
    7c28:	ldr	r0, [r4, #4]
    7c2c:	str	r0, [r6, #4]
    7c30:	ldr	r0, [r4, #8]
    7c34:	bl	7988 <free_reg>
    7c38:	ldr	r0, [r5, #8]
    7c3c:	bl	7988 <free_reg>
    7c40:	ldr	r5, [r5]
    7c44:	ldr	r0, [r4]
    7c48:	cmp	r0, #0
    7c4c:	beq	7c64 <sf_gen_relation+0xdc>
    7c50:	cmp	r5, #0
    7c54:	beq	7c70 <sf_gen_relation+0xe8>
    7c58:	mov	r1, r5
    7c5c:	bl	316c <sf_gen_and>
    7c60:	b	7c74 <sf_gen_relation+0xec>
    7c64:	cmp	r5, #0
    7c68:	bne	7c74 <sf_gen_relation+0xec>
    7c6c:	b	7c80 <sf_gen_relation+0xf8>
    7c70:	mov	r5, r0
    7c74:	mov	r0, r5
    7c78:	mov	r1, r6
    7c7c:	bl	316c <sf_gen_and>
    7c80:	mov	r0, r6
    7c84:	sub	sp, fp, #28
    7c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00007c8c <new_block>:
    7c8c:	push	{r4, sl, fp, lr}
    7c90:	add	fp, sp, #8
    7c94:	mov	r4, r0
    7c98:	mov	r0, #208	; 0xd0
    7c9c:	bl	2050 <newchunk>
    7ca0:	str	r4, [r0, #8]
    7ca4:	str	r0, [r0, #96]	; 0x60
    7ca8:	pop	{r4, sl, fp, pc}

00007cac <sf_gen_loadlen>:
    7cac:	push	{r4, r5, r6, sl, fp, lr}
    7cb0:	add	fp, sp, #16
    7cb4:	bl	7910 <alloc_reg>
    7cb8:	mov	r4, r0
    7cbc:	mov	r0, #12
    7cc0:	bl	2050 <newchunk>
    7cc4:	mov	r5, r0
    7cc8:	mov	r0, #128	; 0x80
    7ccc:	bl	79c0 <new_stmt>
    7cd0:	mov	r6, r0
    7cd4:	mov	r0, #2
    7cd8:	bl	79c0 <new_stmt>
    7cdc:	str	r0, [r6, #16]
    7ce0:	str	r4, [r0, #12]
    7ce4:	str	r6, [r5, #4]
    7ce8:	str	r4, [r5, #8]
    7cec:	mov	r0, r5
    7cf0:	pop	{r4, r5, r6, sl, fp, pc}

00007cf4 <sf_gen_loadi>:
    7cf4:	push	{r4, r5, r6, r7, fp, lr}
    7cf8:	add	fp, sp, #16
    7cfc:	mov	r4, r0
    7d00:	mov	r0, #12
    7d04:	bl	2050 <newchunk>
    7d08:	mov	r5, r0
    7d0c:	bl	7910 <alloc_reg>
    7d10:	mov	r6, r0
    7d14:	mov	r0, #0
    7d18:	bl	79c0 <new_stmt>
    7d1c:	mov	r7, r0
    7d20:	str	r4, [r0, #12]
    7d24:	mov	r0, #2
    7d28:	bl	79c0 <new_stmt>
    7d2c:	str	r0, [r7, #16]
    7d30:	str	r6, [r0, #12]
    7d34:	str	r7, [r5, #4]
    7d38:	str	r6, [r5, #8]
    7d3c:	mov	r0, r5
    7d40:	pop	{r4, r5, r6, r7, fp, pc}

00007d44 <sf_gen_neg>:
    7d44:	push	{r4, sl, fp, lr}
    7d48:	add	fp, sp, #8
    7d4c:	mov	r4, r0
    7d50:	bl	7a28 <xfer_to_a>
    7d54:	mov	r1, r0
    7d58:	ldr	r0, [r4, #4]
    7d5c:	bl	7544 <sf_append>
    7d60:	mov	r0, #132	; 0x84
    7d64:	bl	79c0 <new_stmt>
    7d68:	mov	r1, r0
    7d6c:	mov	r0, #0
    7d70:	str	r0, [r1, #12]
    7d74:	ldr	r0, [r4, #4]
    7d78:	bl	7544 <sf_append>
    7d7c:	mov	r0, #2
    7d80:	bl	79c0 <new_stmt>
    7d84:	mov	r1, r0
    7d88:	ldr	r0, [r4, #8]
    7d8c:	str	r0, [r1, #12]
    7d90:	ldr	r0, [r4, #4]
    7d94:	bl	7544 <sf_append>
    7d98:	mov	r0, r4
    7d9c:	pop	{r4, sl, fp, pc}

00007da0 <sf_gen_arth>:
    7da0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7da4:	add	fp, sp, #24
    7da8:	mov	r5, r2
    7dac:	mov	r4, r1
    7db0:	mov	r8, r0
    7db4:	mov	r0, r2
    7db8:	bl	79a0 <xfer_to_x>
    7dbc:	mov	r7, r0
    7dc0:	mov	r0, r4
    7dc4:	bl	7a28 <xfer_to_a>
    7dc8:	mov	r6, r0
    7dcc:	orr	r0, r8, #12
    7dd0:	bl	79c0 <new_stmt>
    7dd4:	mov	r1, r0
    7dd8:	mov	r0, r6
    7ddc:	bl	7544 <sf_append>
    7de0:	mov	r0, r7
    7de4:	mov	r1, r6
    7de8:	bl	7544 <sf_append>
    7dec:	ldr	r0, [r5, #4]
    7df0:	mov	r1, r7
    7df4:	bl	7544 <sf_append>
    7df8:	ldr	r1, [r5, #4]
    7dfc:	ldr	r0, [r4, #4]
    7e00:	bl	7544 <sf_append>
    7e04:	ldr	r0, [r4, #8]
    7e08:	bl	7988 <free_reg>
    7e0c:	ldr	r0, [r5, #8]
    7e10:	bl	7988 <free_reg>
    7e14:	mov	r0, #2
    7e18:	bl	79c0 <new_stmt>
    7e1c:	mov	r5, r0
    7e20:	bl	7910 <alloc_reg>
    7e24:	str	r0, [r5, #12]
    7e28:	str	r0, [r4, #8]
    7e2c:	ldr	r0, [r4, #4]
    7e30:	mov	r1, r5
    7e34:	bl	7544 <sf_append>
    7e38:	mov	r0, r4
    7e3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007e40 <sf_gen_greater>:
    7e40:	mov	r1, r0
    7e44:	mov	r0, #48	; 0x30
    7e48:	b	7e4c <gen_len>

00007e4c <gen_len>:
    7e4c:	push	{r4, r5, r6, sl, fp, lr}
    7e50:	add	fp, sp, #16
    7e54:	mov	r4, r1
    7e58:	mov	r5, r0
    7e5c:	mov	r0, #128	; 0x80
    7e60:	bl	79c0 <new_stmt>
    7e64:	mov	r6, r0
    7e68:	orr	r0, r5, #5
    7e6c:	bl	7c8c <new_block>
    7e70:	str	r4, [r0, #20]
    7e74:	str	r6, [r0, #4]
    7e78:	pop	{r4, r5, r6, sl, fp, pc}

00007e7c <sf_gen_less>:
    7e7c:	push	{r4, sl, fp, lr}
    7e80:	add	fp, sp, #8
    7e84:	mov	r1, r0
    7e88:	mov	r0, #32
    7e8c:	bl	7e4c <gen_len>
    7e90:	mov	r4, r0
    7e94:	bl	3298 <sf_gen_not>
    7e98:	mov	r0, r4
    7e9c:	pop	{r4, sl, fp, pc}

00007ea0 <sf_gen_byteop>:
    7ea0:	push	{r4, r5, fp, lr}
    7ea4:	add	fp, sp, #8
    7ea8:	mov	r4, r2
    7eac:	mov	r2, r0
    7eb0:	sub	r0, r0, #38	; 0x26
    7eb4:	cmp	r0, #24
    7eb8:	bhi	7f34 <sf_gen_byteop+0x94>
    7ebc:	add	r2, pc, #4
    7ec0:	ldr	r0, [r2, r0, lsl #2]
    7ec4:	add	pc, r2, r0
    7ec8:	.word	0x00000064
    7ecc:	.word	0x000000dc
    7ed0:	.word	0x000000dc
    7ed4:	.word	0x000000dc
    7ed8:	.word	0x000000dc
    7edc:	.word	0x000000dc
    7ee0:	.word	0x000000dc
    7ee4:	.word	0x000000dc
    7ee8:	.word	0x000000dc
    7eec:	.word	0x000000dc
    7ef0:	.word	0x000000dc
    7ef4:	.word	0x000000dc
    7ef8:	.word	0x000000dc
    7efc:	.word	0x000000dc
    7f00:	.word	0x000000dc
    7f04:	.word	0x000000dc
    7f08:	.word	0x000000dc
    7f0c:	.word	0x000000dc
    7f10:	.word	0x000000dc
    7f14:	.word	0x000000dc
    7f18:	.word	0x000000dc
    7f1c:	.word	0x000000dc
    7f20:	.word	0x000000b4
    7f24:	.word	0x000000c8
    7f28:	.word	0x000000a0
    7f2c:	mov	r0, #84	; 0x54
    7f30:	b	7f40 <sf_gen_byteop+0xa0>
    7f34:	mov	r0, #68	; 0x44
    7f38:	cmp	r2, #124	; 0x7c
    7f3c:	bne	7fa4 <sf_gen_byteop+0x104>
    7f40:	bl	79c0 <new_stmt>
    7f44:	mov	r5, r0
    7f48:	str	r4, [r0, #12]
    7f4c:	mov	r0, #21
    7f50:	bl	7c8c <new_block>
    7f54:	mov	r4, r0
    7f58:	str	r5, [r0, #4]
    7f5c:	bl	3298 <sf_gen_not>
    7f60:	mov	r0, r4
    7f64:	pop	{r4, r5, fp, pc}
    7f68:	mov	r0, #1
    7f6c:	mov	r2, #16
    7f70:	mov	r3, r4
    7f74:	pop	{r4, r5, fp, lr}
    7f78:	b	7fd8 <gen_cmp_gt>
    7f7c:	mov	r0, #1
    7f80:	mov	r2, #16
    7f84:	mov	r3, r4
    7f88:	pop	{r4, r5, fp, lr}
    7f8c:	b	7fa8 <gen_cmp_lt>
    7f90:	mov	r0, #1
    7f94:	mov	r2, #16
    7f98:	mov	r3, r4
    7f9c:	pop	{r4, r5, fp, lr}
    7fa0:	b	4528 <gen_cmp>
    7fa4:	bl	fc4 <abort@plt>

00007fa8 <gen_cmp_lt>:
    7fa8:	push	{fp, lr}
    7fac:	mov	fp, sp
    7fb0:	sub	sp, sp, #16
    7fb4:	mov	ip, #1
    7fb8:	mov	lr, #48	; 0x30
    7fbc:	str	lr, [sp]
    7fc0:	str	ip, [sp, #4]
    7fc4:	str	r3, [sp, #8]
    7fc8:	mvn	r3, #0
    7fcc:	bl	941c <gen_ncmp>
    7fd0:	mov	sp, fp
    7fd4:	pop	{fp, pc}

00007fd8 <gen_cmp_gt>:
    7fd8:	push	{fp, lr}
    7fdc:	mov	fp, sp
    7fe0:	sub	sp, sp, #16
    7fe4:	mov	ip, #0
    7fe8:	mov	lr, #32
    7fec:	str	lr, [sp]
    7ff0:	str	ip, [sp, #4]
    7ff4:	str	r3, [sp, #8]
    7ff8:	mvn	r3, #0
    7ffc:	bl	941c <gen_ncmp>
    8000:	mov	sp, fp
    8004:	pop	{fp, pc}

00008008 <sf_gen_broadcast>:
    8008:	push	{r4, r5, r6, sl, fp, lr}
    800c:	add	fp, sp, #16
    8010:	sub	sp, sp, #8
    8014:	cmp	r0, #2
    8018:	bcs	8140 <sf_gen_broadcast+0x138>
    801c:	ldr	r0, [pc, #724]	; 82f8 <sf_gen_broadcast+0x2f0>
    8020:	ldr	r0, [pc, r0]
    8024:	sub	r1, r0, #105	; 0x69
    8028:	cmp	r1, #58	; 0x3a
    802c:	bhi	81c8 <sf_gen_broadcast+0x1c0>
    8030:	add	r0, pc, #4
    8034:	ldr	r1, [r0, r1, lsl #2]
    8038:	add	pc, r0, r1
    803c:	.word	0x000000ec
    8040:	.word	0x00000204
    8044:	.word	0x00000204
    8048:	.word	0x00000204
    804c:	.word	0x00000204
    8050:	.word	0x00000204
    8054:	.word	0x00000204
    8058:	.word	0x00000204
    805c:	.word	0x00000204
    8060:	.word	0x00000204
    8064:	.word	0x00000204
    8068:	.word	0x00000204
    806c:	.word	0x00000204
    8070:	.word	0x00000204
    8074:	.word	0x000000ec
    8078:	.word	0x00000204
    807c:	.word	0x00000204
    8080:	.word	0x00000240
    8084:	.word	0x00000258
    8088:	.word	0x00000204
    808c:	.word	0x00000204
    8090:	.word	0x00000204
    8094:	.word	0x000000ec
    8098:	.word	0x00000204
    809c:	.word	0x000001e4
    80a0:	.word	0x00000204
    80a4:	.word	0x00000204
    80a8:	.word	0x00000204
    80ac:	.word	0x00000204
    80b0:	.word	0x00000204
    80b4:	.word	0x00000204
    80b8:	.word	0x00000204
    80bc:	.word	0x00000204
    80c0:	.word	0x00000204
    80c4:	.word	0x00000204
    80c8:	.word	0x00000204
    80cc:	.word	0x00000204
    80d0:	.word	0x00000204
    80d4:	.word	0x00000204
    80d8:	.word	0x00000204
    80dc:	.word	0x00000204
    80e0:	.word	0x00000204
    80e4:	.word	0x00000204
    80e8:	.word	0x00000204
    80ec:	.word	0x00000204
    80f0:	.word	0x00000204
    80f4:	.word	0x00000204
    80f8:	.word	0x00000204
    80fc:	.word	0x00000204
    8100:	.word	0x00000204
    8104:	.word	0x00000204
    8108:	.word	0x00000204
    810c:	.word	0x00000204
    8110:	.word	0x00000204
    8114:	.word	0x00000204
    8118:	.word	0x00000204
    811c:	.word	0x00000204
    8120:	.word	0x00000204
    8124:	.word	0x000000ec
    8128:	ldr	r0, [pc, #460]	; 82fc <sf_gen_broadcast+0x2f4>
    812c:	add	r0, pc, r0
    8130:	mov	r1, #2
    8134:	sub	sp, fp, #16
    8138:	pop	{r4, r5, r6, sl, fp, lr}
    813c:	b	5798 <gen_wlanhostop>
    8140:	bne	82dc <sf_gen_broadcast+0x2d4>
    8144:	ldr	r0, [pc, #468]	; 8320 <sf_gen_broadcast+0x318>
    8148:	ldr	r0, [pc, r0]
    814c:	cmn	r0, #1
    8150:	beq	82e8 <sf_gen_broadcast+0x2e0>
    8154:	mov	r0, #2048	; 0x800
    8158:	bl	3a80 <gen_linktype>
    815c:	mov	r5, r0
    8160:	ldr	r0, [pc, #444]	; 8324 <sf_gen_broadcast+0x31c>
    8164:	ldr	r0, [pc, r0]
    8168:	mvn	r4, r0
    816c:	str	r4, [sp]
    8170:	mov	r0, #3
    8174:	mov	r1, #16
    8178:	mov	r2, #0
    817c:	mov	r3, #0
    8180:	bl	83ec <gen_mcmp>
    8184:	mov	r6, r0
    8188:	str	r4, [sp]
    818c:	mov	r0, #3
    8190:	mov	r1, #16
    8194:	mov	r2, #0
    8198:	mov	r3, r4
    819c:	bl	83ec <gen_mcmp>
    81a0:	mov	r4, r0
    81a4:	mov	r0, r6
    81a8:	mov	r1, r4
    81ac:	bl	3244 <sf_gen_or>
    81b0:	mov	r0, r5
    81b4:	mov	r1, r4
    81b8:	bl	316c <sf_gen_and>
    81bc:	mov	r0, r4
    81c0:	sub	sp, fp, #16
    81c4:	pop	{r4, r5, r6, sl, fp, pc}
    81c8:	sub	r1, r0, #1
    81cc:	cmp	r1, #9
    81d0:	bhi	8238 <sf_gen_broadcast+0x230>
    81d4:	add	r0, pc, #4
    81d8:	ldr	r1, [r0, r1, lsl #2]
    81dc:	add	pc, r0, r1
    81e0:	.word	0x00000028
    81e4:	.word	0x00000060
    81e8:	.word	0x00000060
    81ec:	.word	0x00000060
    81f0:	.word	0x00000060
    81f4:	.word	0x00000084
    81f8:	.word	0x00000040
    81fc:	.word	0x00000060
    8200:	.word	0x00000060
    8204:	.word	0x0000006c
    8208:	ldr	r0, [pc, #244]	; 8304 <sf_gen_broadcast+0x2fc>
    820c:	add	r0, pc, r0
    8210:	mov	r1, #2
    8214:	sub	sp, fp, #16
    8218:	pop	{r4, r5, r6, sl, fp, lr}
    821c:	b	5544 <gen_ehostop>
    8220:	ldr	r0, [pc, #216]	; 8300 <sf_gen_broadcast+0x2f8>
    8224:	add	r0, pc, r0
    8228:	mov	r1, #2
    822c:	sub	sp, fp, #16
    8230:	pop	{r4, r5, r6, sl, fp, lr}
    8234:	b	832c <gen_ahostop>
    8238:	cmp	r0, #192	; 0xc0
    823c:	beq	8128 <sf_gen_broadcast+0x120>
    8240:	ldr	r0, [pc, #212]	; 831c <sf_gen_broadcast+0x314>
    8244:	add	r0, pc, r0
    8248:	bl	1fc4 <sf_bpf_error>
    824c:	ldr	r0, [pc, #180]	; 8308 <sf_gen_broadcast+0x300>
    8250:	add	r0, pc, r0
    8254:	mov	r1, #2
    8258:	sub	sp, fp, #16
    825c:	pop	{r4, r5, r6, sl, fp, lr}
    8260:	b	5618 <gen_fhostop>
    8264:	ldr	r0, [pc, #160]	; 830c <sf_gen_broadcast+0x304>
    8268:	add	r0, pc, r0
    826c:	mov	r1, #2
    8270:	sub	sp, fp, #16
    8274:	pop	{r4, r5, r6, sl, fp, lr}
    8278:	b	56d8 <gen_thostop>
    827c:	ldr	r0, [pc, #140]	; 8310 <sf_gen_broadcast+0x308>
    8280:	add	r0, pc, r0
    8284:	mov	r1, #2
    8288:	sub	sp, fp, #16
    828c:	pop	{r4, r5, r6, sl, fp, lr}
    8290:	b	5cec <gen_ipfchostop>
    8294:	ldr	r0, [pc, #120]	; 8314 <sf_gen_broadcast+0x30c>
    8298:	add	r0, pc, r0
    829c:	ldrb	r0, [r0]
    82a0:	cmp	r0, #1
    82a4:	bne	82dc <sf_gen_broadcast+0x2d4>
    82a8:	mov	r0, #1
    82ac:	mov	r1, #4
    82b0:	mov	r2, #8
    82b4:	mov	r3, #65280	; 0xff00
    82b8:	bl	4528 <gen_cmp>
    82bc:	mov	r5, r0
    82c0:	bl	3298 <sf_gen_not>
    82c4:	ldr	r0, [pc, #76]	; 8318 <sf_gen_broadcast+0x310>
    82c8:	add	r0, pc, r0
    82cc:	mov	r1, #2
    82d0:	bl	5544 <gen_ehostop>
    82d4:	mov	r4, r0
    82d8:	b	81b0 <sf_gen_broadcast+0x1a8>
    82dc:	ldr	r0, [pc, #16]	; 82f4 <sf_gen_broadcast+0x2ec>
    82e0:	add	r0, pc, r0
    82e4:	bl	1fc4 <sf_bpf_error>
    82e8:	ldr	r0, [pc, #56]	; 8328 <sf_gen_broadcast+0x320>
    82ec:	add	r0, pc, r0
    82f0:	bl	1fc4 <sf_bpf_error>
    82f4:	.word	0x0000a732
    82f8:	.word	0x00028580
    82fc:	.word	0x00028110
    8300:	.word	0x00028390
    8304:	.word	0x00028030
    8308:	.word	0x00027fec
    830c:	.word	0x00027fd4
    8310:	.word	0x00027fbc
    8314:	.word	0x0002830c
    8318:	.word	0x00027f74
    831c:	.word	0x0000a786
    8320:	.word	0x00028450
    8324:	.word	0x00028434
    8328:	.word	0x0000a6f3

0000832c <gen_ahostop>:
    832c:	push	{r4, r5, fp, lr}
    8330:	add	fp, sp, #8
    8334:	cmp	r1, #4
    8338:	bhi	83e8 <gen_ahostop+0xbc>
    833c:	mov	r2, r1
    8340:	mov	r4, r0
    8344:	mov	r1, #0
    8348:	add	r0, pc, #4
    834c:	ldr	r2, [r0, r2, lsl #2]
    8350:	add	pc, r0, r2
    8354:	.word	0x00000014
    8358:	.word	0x00000080
    835c:	.word	0x0000007c
    8360:	.word	0x00000014
    8364:	.word	0x00000048
    8368:	mov	r0, r4
    836c:	mov	r1, #1
    8370:	bl	832c <gen_ahostop>
    8374:	mov	r5, r0
    8378:	mov	r0, r4
    837c:	mov	r1, #2
    8380:	bl	832c <gen_ahostop>
    8384:	mov	r4, r0
    8388:	mov	r0, r5
    838c:	mov	r1, r4
    8390:	bl	3244 <sf_gen_or>
    8394:	mov	r0, r4
    8398:	pop	{r4, r5, fp, pc}
    839c:	mov	r0, r4
    83a0:	mov	r1, #1
    83a4:	bl	832c <gen_ahostop>
    83a8:	mov	r5, r0
    83ac:	mov	r0, r4
    83b0:	mov	r1, #2
    83b4:	bl	832c <gen_ahostop>
    83b8:	mov	r4, r0
    83bc:	mov	r0, r5
    83c0:	mov	r1, r4
    83c4:	bl	316c <sf_gen_and>
    83c8:	mov	r0, r4
    83cc:	pop	{r4, r5, fp, pc}
    83d0:	mov	r1, #1
    83d4:	mov	r0, #1
    83d8:	mov	r2, #1
    83dc:	mov	r3, r4
    83e0:	pop	{r4, r5, fp, lr}
    83e4:	b	ab38 <gen_bcmp>
    83e8:	bl	fc4 <abort@plt>

000083ec <gen_mcmp>:
    83ec:	push	{fp, lr}
    83f0:	mov	fp, sp
    83f4:	sub	sp, sp, #16
    83f8:	mov	ip, #0
    83fc:	mov	lr, #16
    8400:	str	lr, [sp]
    8404:	str	ip, [sp, #4]
    8408:	str	r3, [sp, #8]
    840c:	ldr	r3, [fp, #8]
    8410:	bl	941c <gen_ncmp>
    8414:	mov	sp, fp
    8418:	pop	{fp, pc}

0000841c <sf_gen_multicast>:
    841c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    8420:	add	fp, sp, #24
    8424:	cmp	r0, #2
    8428:	bcc	845c <sf_gen_multicast+0x40>
    842c:	beq	85a8 <sf_gen_multicast+0x18c>
    8430:	cmp	r0, #17
    8434:	bne	87ac <sf_gen_multicast+0x390>
    8438:	movw	r0, #34525	; 0x86dd
    843c:	bl	3a80 <gen_linktype>
    8440:	mov	r5, r0
    8444:	mov	r0, #3
    8448:	mov	r1, #24
    844c:	mov	r2, #16
    8450:	mov	r3, #255	; 0xff
    8454:	bl	4528 <gen_cmp>
    8458:	b	85c8 <sf_gen_multicast+0x1ac>
    845c:	ldr	r0, [pc, #852]	; 87b8 <sf_gen_multicast+0x39c>
    8460:	ldr	r0, [pc, r0]
    8464:	sub	r1, r0, #105	; 0x69
    8468:	cmp	r1, #58	; 0x3a
    846c:	bhi	85d4 <sf_gen_multicast+0x1b8>
    8470:	add	r0, pc, #4
    8474:	ldr	r1, [r0, r1, lsl #2]
    8478:	add	pc, r0, r1
    847c:	.word	0x000001cc
    8480:	.word	0x00000330
    8484:	.word	0x00000330
    8488:	.word	0x00000330
    848c:	.word	0x00000330
    8490:	.word	0x00000330
    8494:	.word	0x00000330
    8498:	.word	0x00000330
    849c:	.word	0x00000330
    84a0:	.word	0x00000330
    84a4:	.word	0x00000330
    84a8:	.word	0x00000330
    84ac:	.word	0x00000330
    84b0:	.word	0x00000330
    84b4:	.word	0x000001cc
    84b8:	.word	0x00000330
    84bc:	.word	0x00000330
    84c0:	.word	0x000001a4
    84c4:	.word	0x000000ec
    84c8:	.word	0x00000330
    84cc:	.word	0x00000330
    84d0:	.word	0x00000330
    84d4:	.word	0x000001cc
    84d8:	.word	0x00000330
    84dc:	.word	0x000001b0
    84e0:	.word	0x00000330
    84e4:	.word	0x00000330
    84e8:	.word	0x00000330
    84ec:	.word	0x00000330
    84f0:	.word	0x00000330
    84f4:	.word	0x00000330
    84f8:	.word	0x00000330
    84fc:	.word	0x00000330
    8500:	.word	0x00000330
    8504:	.word	0x00000330
    8508:	.word	0x00000330
    850c:	.word	0x00000330
    8510:	.word	0x00000330
    8514:	.word	0x00000330
    8518:	.word	0x00000330
    851c:	.word	0x00000330
    8520:	.word	0x00000330
    8524:	.word	0x00000330
    8528:	.word	0x00000330
    852c:	.word	0x00000330
    8530:	.word	0x00000330
    8534:	.word	0x00000330
    8538:	.word	0x00000330
    853c:	.word	0x00000330
    8540:	.word	0x00000330
    8544:	.word	0x00000330
    8548:	.word	0x00000330
    854c:	.word	0x00000330
    8550:	.word	0x00000330
    8554:	.word	0x00000330
    8558:	.word	0x00000330
    855c:	.word	0x00000330
    8560:	.word	0x00000330
    8564:	.word	0x000001cc
    8568:	ldr	r0, [pc, #592]	; 87c0 <sf_gen_multicast+0x3a4>
    856c:	add	r0, pc, r0
    8570:	ldrb	r0, [r0]
    8574:	cmp	r0, #1
    8578:	bne	87ac <sf_gen_multicast+0x390>
    857c:	mov	r0, #1
    8580:	mov	r1, #4
    8584:	mov	r2, #8
    8588:	mov	r3, #65280	; 0xff00
    858c:	bl	4528 <gen_cmp>
    8590:	mov	r5, r0
    8594:	bl	3298 <sf_gen_not>
    8598:	ldr	r0, [pc, #548]	; 87c4 <sf_gen_multicast+0x3a8>
    859c:	ldr	r0, [pc, r0]
    85a0:	bl	87cc <gen_mac_multicast>
    85a4:	b	85c8 <sf_gen_multicast+0x1ac>
    85a8:	mov	r0, #2048	; 0x800
    85ac:	bl	3a80 <gen_linktype>
    85b0:	mov	r5, r0
    85b4:	mov	r0, #3
    85b8:	mov	r1, #16
    85bc:	mov	r2, #16
    85c0:	mov	r3, #224	; 0xe0
    85c4:	bl	88fc <gen_cmp_ge>
    85c8:	mov	r4, r0
    85cc:	mov	r0, r5
    85d0:	b	8790 <sf_gen_multicast+0x374>
    85d4:	sub	r1, r0, #1
    85d8:	cmp	r1, #9
    85dc:	bhi	8640 <sf_gen_multicast+0x224>
    85e0:	add	r0, pc, #4
    85e4:	ldr	r1, [r0, r1, lsl #2]
    85e8:	add	pc, r0, r1
    85ec:	.word	0x00000028
    85f0:	.word	0x000001c0
    85f4:	.word	0x000001c0
    85f8:	.word	0x000001c0
    85fc:	.word	0x000001c0
    8600:	.word	0x00000034
    8604:	.word	0x00000040
    8608:	.word	0x000001c0
    860c:	.word	0x000001c0
    8610:	.word	0x000001b4
    8614:	mov	r0, #0
    8618:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    861c:	b	87cc <gen_mac_multicast>
    8620:	mov	r0, #2
    8624:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    8628:	b	87cc <gen_mac_multicast>
    862c:	ldr	r0, [pc, #392]	; 87bc <sf_gen_multicast+0x3a0>
    8630:	add	r0, pc, r0
    8634:	mov	r1, #2
    8638:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    863c:	b	832c <gen_ahostop>
    8640:	cmp	r0, #192	; 0xc0
    8644:	bne	87ac <sf_gen_multicast+0x390>
    8648:	mov	r7, #1
    864c:	mov	r0, #1
    8650:	mov	r1, #1
    8654:	mov	r2, #16
    8658:	bl	8800 <gen_load_a>
    865c:	mov	r4, r0
    8660:	mov	r0, #69	; 0x45
    8664:	bl	7c8c <new_block>
    8668:	mov	r5, r0
    866c:	str	r7, [r0, #20]
    8670:	str	r4, [r0, #4]
    8674:	mov	r0, #16
    8678:	bl	87cc <gen_mac_multicast>
    867c:	mov	r4, r0
    8680:	mov	r0, r5
    8684:	mov	r1, r4
    8688:	bl	316c <sf_gen_and>
    868c:	mov	r0, #1
    8690:	mov	r1, #1
    8694:	mov	r2, #16
    8698:	bl	8800 <gen_load_a>
    869c:	mov	r5, r0
    86a0:	mov	r0, #69	; 0x45
    86a4:	bl	7c8c <new_block>
    86a8:	mov	r6, r0
    86ac:	str	r7, [r0, #20]
    86b0:	str	r5, [r0, #4]
    86b4:	bl	3298 <sf_gen_not>
    86b8:	mov	r8, #4
    86bc:	mov	r0, #4
    86c0:	bl	87cc <gen_mac_multicast>
    86c4:	mov	r5, r0
    86c8:	mov	r0, r6
    86cc:	mov	r1, r5
    86d0:	bl	316c <sf_gen_and>
    86d4:	mov	r0, r5
    86d8:	mov	r1, r4
    86dc:	bl	3244 <sf_gen_or>
    86e0:	mov	r0, #1
    86e4:	mov	r1, #0
    86e8:	mov	r2, #16
    86ec:	bl	8800 <gen_load_a>
    86f0:	mov	r5, r0
    86f4:	mov	r0, #69	; 0x45
    86f8:	bl	7c8c <new_block>
    86fc:	str	r5, [r0, #4]
    8700:	mov	r7, #8
    8704:	str	r7, [r0, #20]
    8708:	mov	r1, r4
    870c:	bl	316c <sf_gen_and>
    8710:	mov	r0, #1
    8714:	mov	r1, #0
    8718:	mov	r2, #16
    871c:	bl	8800 <gen_load_a>
    8720:	mov	r5, r0
    8724:	mov	r0, #69	; 0x45
    8728:	bl	7c8c <new_block>
    872c:	mov	r6, r0
    8730:	str	r7, [r0, #20]
    8734:	str	r5, [r0, #4]
    8738:	bl	3298 <sf_gen_not>
    873c:	mov	r0, #4
    8740:	bl	87cc <gen_mac_multicast>
    8744:	mov	r5, r0
    8748:	mov	r0, r6
    874c:	mov	r1, r5
    8750:	bl	316c <sf_gen_and>
    8754:	mov	r0, r5
    8758:	mov	r1, r4
    875c:	bl	3244 <sf_gen_or>
    8760:	mov	r0, #1
    8764:	mov	r1, #0
    8768:	mov	r2, #16
    876c:	bl	8800 <gen_load_a>
    8770:	mov	r5, r0
    8774:	mov	r0, #69	; 0x45
    8778:	bl	7c8c <new_block>
    877c:	mov	r6, r0
    8780:	str	r8, [r0, #20]
    8784:	str	r5, [r0, #4]
    8788:	bl	3298 <sf_gen_not>
    878c:	mov	r0, r6
    8790:	mov	r1, r4
    8794:	bl	316c <sf_gen_and>
    8798:	mov	r0, r4
    879c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    87a0:	mov	r0, #1
    87a4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    87a8:	b	87cc <gen_mac_multicast>
    87ac:	ldr	r0, [pc, #20]	; 87c8 <sf_gen_multicast+0x3ac>
    87b0:	add	r0, pc, r0
    87b4:	bl	1fc4 <sf_bpf_error>
    87b8:	.word	0x00028140
    87bc:	.word	0x00027f84
    87c0:	.word	0x00028038
    87c4:	.word	0x0002801c
    87c8:	.word	0x0000a291

000087cc <gen_mac_multicast>:
    87cc:	push	{r4, r5, fp, lr}
    87d0:	add	fp, sp, #8
    87d4:	mov	r1, r0
    87d8:	mov	r5, #1
    87dc:	mov	r0, #1
    87e0:	mov	r2, #16
    87e4:	bl	8800 <gen_load_a>
    87e8:	mov	r4, r0
    87ec:	mov	r0, #69	; 0x45
    87f0:	bl	7c8c <new_block>
    87f4:	str	r5, [r0, #20]
    87f8:	str	r4, [r0, #4]
    87fc:	pop	{r4, r5, fp, pc}

00008800 <gen_load_a>:
    8800:	push	{r4, r5, r6, sl, fp, lr}
    8804:	add	fp, sp, #16
    8808:	cmp	r0, #6
    880c:	bhi	88e4 <gen_load_a+0xe4>
    8810:	mov	r5, r2
    8814:	mov	r4, r1
    8818:	add	r1, pc, #4
    881c:	ldr	r0, [r1, r0, lsl #2]
    8820:	add	pc, r1, r0
    8824:	.word	0x0000001c
    8828:	.word	0x00000054
    882c:	.word	0x0000003c
    8830:	.word	0x00000044
    8834:	.word	0x0000002c
    8838:	.word	0x00000064
    883c:	.word	0x000000a4
    8840:	orr	r0, r5, #32
    8844:	bl	79c0 <new_stmt>
    8848:	str	r4, [r0, #12]
    884c:	pop	{r4, r5, r6, sl, fp, pc}
    8850:	ldr	r0, [pc, #148]	; 88ec <gen_load_a+0xec>
    8854:	ldr	r0, [pc, r0]
    8858:	add	r0, r0, r4
    885c:	b	88d8 <gen_load_a+0xd8>
    8860:	mov	r0, r4
    8864:	b	88d8 <gen_load_a+0xd8>
    8868:	ldr	r0, [pc, #120]	; 88e8 <gen_load_a+0xe8>
    886c:	ldr	r0, [pc, r0]
    8870:	add	r0, r0, r4
    8874:	b	88d8 <gen_load_a+0xd8>
    8878:	mov	r0, r4
    887c:	mov	r1, r5
    8880:	pop	{r4, r5, r6, sl, fp, lr}
    8884:	b	b35c <gen_load_llrel>
    8888:	bl	7ab0 <gen_loadx_iphdrlen>
    888c:	mov	r6, r0
    8890:	orr	r0, r5, #64	; 0x40
    8894:	bl	79c0 <new_stmt>
    8898:	mov	r1, r0
    889c:	ldr	r0, [pc, #76]	; 88f0 <gen_load_a+0xf0>
    88a0:	ldr	r0, [pc, r0]
    88a4:	add	r0, r0, r4
    88a8:	ldr	r2, [pc, #68]	; 88f4 <gen_load_a+0xf4>
    88ac:	ldr	r2, [pc, r2]
    88b0:	add	r0, r0, r2
    88b4:	str	r0, [r1, #12]
    88b8:	mov	r0, r6
    88bc:	bl	7544 <sf_append>
    88c0:	mov	r0, r6
    88c4:	pop	{r4, r5, r6, sl, fp, pc}
    88c8:	ldr	r0, [pc, #40]	; 88f8 <gen_load_a+0xf8>
    88cc:	ldr	r0, [pc, r0]
    88d0:	add	r0, r4, r0
    88d4:	add	r0, r0, #40	; 0x28
    88d8:	mov	r1, r5
    88dc:	pop	{r4, r5, r6, sl, fp, lr}
    88e0:	b	b3ac <gen_load_macplrel>
    88e4:	bl	fc4 <abort@plt>
    88e8:	.word	0x00027d44
    88ec:	.word	0x00027d68
    88f0:	.word	0x00027d0c
    88f4:	.word	0x00027d04
    88f8:	.word	0x00027ce4

000088fc <gen_cmp_ge>:
    88fc:	push	{fp, lr}
    8900:	mov	fp, sp
    8904:	sub	sp, sp, #16
    8908:	mov	ip, #0
    890c:	mov	lr, #48	; 0x30
    8910:	str	lr, [sp]
    8914:	str	ip, [sp, #4]
    8918:	str	r3, [sp, #8]
    891c:	mvn	r3, #0
    8920:	bl	941c <gen_ncmp>
    8924:	mov	sp, fp
    8928:	pop	{fp, pc}

0000892c <sf_gen_inbound>:
    892c:	push	{r4, r5, fp, lr}
    8930:	add	fp, sp, #8
    8934:	sub	sp, sp, #8
    8938:	mov	r4, r0
    893c:	ldr	r1, [pc, #1120]	; 8da4 <sf_gen_inbound+0x478>
    8940:	ldr	r1, [pc, r1]
    8944:	sub	r0, r1, #8
    8948:	cmp	r0, #218	; 0xda
    894c:	bhi	8d98 <sf_gen_inbound+0x46c>
    8950:	add	r2, pc, #4
    8954:	ldr	r0, [r2, r0, lsl #2]
    8958:	add	pc, r2, r0
    895c:	.word	0x00000398
    8960:	.word	0x0000043c
    8964:	.word	0x0000043c
    8968:	.word	0x0000043c
    896c:	.word	0x0000043c
    8970:	.word	0x0000043c
    8974:	.word	0x0000043c
    8978:	.word	0x0000043c
    897c:	.word	0x0000043c
    8980:	.word	0x0000043c
    8984:	.word	0x0000043c
    8988:	.word	0x0000043c
    898c:	.word	0x0000043c
    8990:	.word	0x0000043c
    8994:	.word	0x0000043c
    8998:	.word	0x0000043c
    899c:	.word	0x0000043c
    89a0:	.word	0x0000043c
    89a4:	.word	0x0000043c
    89a8:	.word	0x0000043c
    89ac:	.word	0x0000043c
    89b0:	.word	0x0000043c
    89b4:	.word	0x0000043c
    89b8:	.word	0x0000043c
    89bc:	.word	0x0000043c
    89c0:	.word	0x0000043c
    89c4:	.word	0x0000043c
    89c8:	.word	0x0000043c
    89cc:	.word	0x0000043c
    89d0:	.word	0x0000043c
    89d4:	.word	0x0000043c
    89d8:	.word	0x0000043c
    89dc:	.word	0x0000043c
    89e0:	.word	0x0000043c
    89e4:	.word	0x0000043c
    89e8:	.word	0x0000043c
    89ec:	.word	0x0000043c
    89f0:	.word	0x0000043c
    89f4:	.word	0x0000043c
    89f8:	.word	0x0000043c
    89fc:	.word	0x0000043c
    8a00:	.word	0x0000043c
    8a04:	.word	0x0000043c
    8a08:	.word	0x0000043c
    8a0c:	.word	0x0000043c
    8a10:	.word	0x0000043c
    8a14:	.word	0x0000043c
    8a18:	.word	0x0000043c
    8a1c:	.word	0x0000043c
    8a20:	.word	0x0000043c
    8a24:	.word	0x0000043c
    8a28:	.word	0x0000043c
    8a2c:	.word	0x0000043c
    8a30:	.word	0x0000043c
    8a34:	.word	0x0000043c
    8a38:	.word	0x0000043c
    8a3c:	.word	0x0000043c
    8a40:	.word	0x0000043c
    8a44:	.word	0x0000043c
    8a48:	.word	0x0000043c
    8a4c:	.word	0x0000043c
    8a50:	.word	0x0000043c
    8a54:	.word	0x0000043c
    8a58:	.word	0x0000043c
    8a5c:	.word	0x0000043c
    8a60:	.word	0x0000043c
    8a64:	.word	0x0000043c
    8a68:	.word	0x0000043c
    8a6c:	.word	0x0000043c
    8a70:	.word	0x0000043c
    8a74:	.word	0x0000043c
    8a78:	.word	0x0000043c
    8a7c:	.word	0x0000043c
    8a80:	.word	0x0000043c
    8a84:	.word	0x0000043c
    8a88:	.word	0x0000043c
    8a8c:	.word	0x0000043c
    8a90:	.word	0x0000043c
    8a94:	.word	0x0000043c
    8a98:	.word	0x0000043c
    8a9c:	.word	0x0000043c
    8aa0:	.word	0x0000043c
    8aa4:	.word	0x0000043c
    8aa8:	.word	0x0000043c
    8aac:	.word	0x0000043c
    8ab0:	.word	0x0000043c
    8ab4:	.word	0x0000043c
    8ab8:	.word	0x0000043c
    8abc:	.word	0x0000043c
    8ac0:	.word	0x0000043c
    8ac4:	.word	0x0000043c
    8ac8:	.word	0x0000043c
    8acc:	.word	0x0000043c
    8ad0:	.word	0x0000043c
    8ad4:	.word	0x0000043c
    8ad8:	.word	0x0000043c
    8adc:	.word	0x0000043c
    8ae0:	.word	0x0000043c
    8ae4:	.word	0x0000043c
    8ae8:	.word	0x0000043c
    8aec:	.word	0x0000043c
    8af0:	.word	0x0000043c
    8af4:	.word	0x0000043c
    8af8:	.word	0x0000043c
    8afc:	.word	0x0000043c
    8b00:	.word	0x000003d8
    8b04:	.word	0x0000043c
    8b08:	.word	0x0000043c
    8b0c:	.word	0x0000043c
    8b10:	.word	0x0000043c
    8b14:	.word	0x0000043c
    8b18:	.word	0x0000043c
    8b1c:	.word	0x0000043c
    8b20:	.word	0x0000043c
    8b24:	.word	0x0000043c
    8b28:	.word	0x0000043c
    8b2c:	.word	0x0000043c
    8b30:	.word	0x0000043c
    8b34:	.word	0x0000043c
    8b38:	.word	0x0000043c
    8b3c:	.word	0x0000043c
    8b40:	.word	0x0000043c
    8b44:	.word	0x0000036c
    8b48:	.word	0x0000036c
    8b4c:	.word	0x0000036c
    8b50:	.word	0x0000036c
    8b54:	.word	0x0000036c
    8b58:	.word	0x0000036c
    8b5c:	.word	0x0000036c
    8b60:	.word	0x0000036c
    8b64:	.word	0x0000043c
    8b68:	.word	0x0000043c
    8b6c:	.word	0x0000043c
    8b70:	.word	0x0000043c
    8b74:	.word	0x0000043c
    8b78:	.word	0x0000043c
    8b7c:	.word	0x0000043c
    8b80:	.word	0x0000043c
    8b84:	.word	0x0000043c
    8b88:	.word	0x0000043c
    8b8c:	.word	0x0000043c
    8b90:	.word	0x0000043c
    8b94:	.word	0x0000043c
    8b98:	.word	0x0000043c
    8b9c:	.word	0x0000043c
    8ba0:	.word	0x0000043c
    8ba4:	.word	0x0000043c
    8ba8:	.word	0x0000043c
    8bac:	.word	0x0000043c
    8bb0:	.word	0x0000043c
    8bb4:	.word	0x0000043c
    8bb8:	.word	0x0000043c
    8bbc:	.word	0x0000043c
    8bc0:	.word	0x0000043c
    8bc4:	.word	0x0000043c
    8bc8:	.word	0x0000043c
    8bcc:	.word	0x0000036c
    8bd0:	.word	0x0000043c
    8bd4:	.word	0x000003f4
    8bd8:	.word	0x0000036c
    8bdc:	.word	0x0000036c
    8be0:	.word	0x0000043c
    8be4:	.word	0x0000043c
    8be8:	.word	0x0000043c
    8bec:	.word	0x0000043c
    8bf0:	.word	0x0000043c
    8bf4:	.word	0x0000043c
    8bf8:	.word	0x0000043c
    8bfc:	.word	0x0000043c
    8c00:	.word	0x0000043c
    8c04:	.word	0x0000036c
    8c08:	.word	0x0000036c
    8c0c:	.word	0x0000036c
    8c10:	.word	0x0000036c
    8c14:	.word	0x0000043c
    8c18:	.word	0x0000036c
    8c1c:	.word	0x0000043c
    8c20:	.word	0x0000043c
    8c24:	.word	0x0000043c
    8c28:	.word	0x0000043c
    8c2c:	.word	0x0000043c
    8c30:	.word	0x0000043c
    8c34:	.word	0x0000043c
    8c38:	.word	0x0000043c
    8c3c:	.word	0x0000043c
    8c40:	.word	0x0000043c
    8c44:	.word	0x0000036c
    8c48:	.word	0x0000043c
    8c4c:	.word	0x0000043c
    8c50:	.word	0x0000043c
    8c54:	.word	0x0000043c
    8c58:	.word	0x0000043c
    8c5c:	.word	0x0000036c
    8c60:	.word	0x0000043c
    8c64:	.word	0x0000043c
    8c68:	.word	0x0000043c
    8c6c:	.word	0x0000043c
    8c70:	.word	0x0000043c
    8c74:	.word	0x0000043c
    8c78:	.word	0x0000043c
    8c7c:	.word	0x0000043c
    8c80:	.word	0x0000043c
    8c84:	.word	0x0000043c
    8c88:	.word	0x0000043c
    8c8c:	.word	0x0000043c
    8c90:	.word	0x0000043c
    8c94:	.word	0x0000043c
    8c98:	.word	0x0000043c
    8c9c:	.word	0x0000043c
    8ca0:	.word	0x0000043c
    8ca4:	.word	0x0000043c
    8ca8:	.word	0x0000043c
    8cac:	.word	0x0000043c
    8cb0:	.word	0x0000043c
    8cb4:	.word	0x0000043c
    8cb8:	.word	0x0000043c
    8cbc:	.word	0x0000043c
    8cc0:	.word	0x0000043c
    8cc4:	.word	0x00000410
    8cc8:	mov	r0, #1
    8ccc:	cmp	r4, #0
    8cd0:	str	r0, [sp]
    8cd4:	mov	r0, #1
    8cd8:	mov	r1, #3
    8cdc:	mov	r2, #16
    8ce0:	movne	r3, #0
    8ce4:	moveq	r3, #1
    8ce8:	bl	83ec <gen_mcmp>
    8cec:	sub	sp, fp, #8
    8cf0:	pop	{r4, r5, fp, pc}
    8cf4:	mov	r0, #0
    8cf8:	bl	7cf4 <sf_gen_loadi>
    8cfc:	mov	r1, r0
    8d00:	mov	r0, #1
    8d04:	mov	r2, #1
    8d08:	bl	755c <sf_gen_load>
    8d0c:	mov	r5, r0
    8d10:	mov	r0, #0
    8d14:	bl	7cf4 <sf_gen_loadi>
    8d18:	mov	r2, r0
    8d1c:	mov	r0, #16
    8d20:	mov	r1, r5
    8d24:	mov	r3, r4
    8d28:	sub	sp, fp, #8
    8d2c:	pop	{r4, r5, fp, lr}
    8d30:	b	7b88 <sf_gen_relation>
    8d34:	mov	r0, #1
    8d38:	mov	r1, #0
    8d3c:	mov	r2, #8
    8d40:	cmp	r4, #0
    8d44:	beq	8d64 <sf_gen_inbound+0x438>
    8d48:	mov	r3, #4
    8d4c:	b	8d8c <sf_gen_inbound+0x460>
    8d50:	mov	r0, #1
    8d54:	mov	r1, #0
    8d58:	mov	r2, #16
    8d5c:	cmp	r4, #0
    8d60:	bne	8d80 <sf_gen_inbound+0x454>
    8d64:	mov	r3, #0
    8d68:	b	8d8c <sf_gen_inbound+0x460>
    8d6c:	mov	r0, #1
    8d70:	mov	r1, #2
    8d74:	mov	r2, #8
    8d78:	cmp	r4, #0
    8d7c:	beq	8d88 <sf_gen_inbound+0x45c>
    8d80:	mov	r3, #1
    8d84:	b	8d8c <sf_gen_inbound+0x460>
    8d88:	mov	r3, #2
    8d8c:	sub	sp, fp, #8
    8d90:	pop	{r4, r5, fp, lr}
    8d94:	b	4528 <gen_cmp>
    8d98:	ldr	r0, [pc, #8]	; 8da8 <sf_gen_inbound+0x47c>
    8d9c:	add	r0, pc, r0
    8da0:	bl	1fc4 <sf_bpf_error>
    8da4:	.word	0x00027c60
    8da8:	.word	0x00009d12

00008dac <sf_gen_pf_ifname>:
    8dac:	push	{fp, lr}
    8db0:	mov	fp, sp
    8db4:	ldr	r0, [pc, #4]	; 8dc0 <sf_gen_pf_ifname+0x14>
    8db8:	add	r0, pc, r0
    8dbc:	bl	1fc4 <sf_bpf_error>
    8dc0:	.word	0x00009d24

00008dc4 <sf_gen_pf_ruleset>:
    8dc4:	push	{fp, lr}
    8dc8:	mov	fp, sp
    8dcc:	ldr	r0, [pc, #4]	; 8dd8 <sf_gen_pf_ruleset+0x14>
    8dd0:	add	r0, pc, r0
    8dd4:	bl	1fc4 <sf_bpf_error>
    8dd8:	.word	0x00009d34

00008ddc <sf_gen_pf_rnr>:
    8ddc:	push	{fp, lr}
    8de0:	mov	fp, sp
    8de4:	ldr	r0, [pc, #4]	; 8df0 <sf_gen_pf_rnr+0x14>
    8de8:	add	r0, pc, r0
    8dec:	bl	1fc4 <sf_bpf_error>
    8df0:	.word	0x00009d1c

00008df4 <sf_gen_pf_srnr>:
    8df4:	push	{fp, lr}
    8df8:	mov	fp, sp
    8dfc:	ldr	r0, [pc, #4]	; 8e08 <sf_gen_pf_srnr+0x14>
    8e00:	add	r0, pc, r0
    8e04:	bl	1fc4 <sf_bpf_error>
    8e08:	.word	0x00009d04

00008e0c <sf_gen_pf_reason>:
    8e0c:	push	{fp, lr}
    8e10:	mov	fp, sp
    8e14:	ldr	r0, [pc, #4]	; 8e20 <sf_gen_pf_reason+0x14>
    8e18:	add	r0, pc, r0
    8e1c:	bl	1fc4 <sf_bpf_error>
    8e20:	.word	0x00009cec

00008e24 <sf_gen_pf_action>:
    8e24:	push	{fp, lr}
    8e28:	mov	fp, sp
    8e2c:	ldr	r0, [pc, #4]	; 8e38 <sf_gen_pf_action+0x14>
    8e30:	add	r0, pc, r0
    8e34:	bl	1fc4 <sf_bpf_error>
    8e38:	.word	0x00009cd4

00008e3c <sf_gen_p80211_type>:
    8e3c:	push	{fp, lr}
    8e40:	mov	fp, sp
    8e44:	sub	sp, sp, #8
    8e48:	mov	lr, r0
    8e4c:	ldr	r0, [pc, #84]	; 8ea8 <sf_gen_p80211_type+0x6c>
    8e50:	ldr	r0, [pc, r0]
    8e54:	sub	r2, r0, #105	; 0x69
    8e58:	cmp	r2, #22
    8e5c:	bhi	8e74 <sf_gen_p80211_type+0x38>
    8e60:	mov	ip, #1
    8e64:	movw	r3, #16385	; 0x4001
    8e68:	movt	r3, #64	; 0x40
    8e6c:	tst	r3, ip, lsl r2
    8e70:	bne	8e7c <sf_gen_p80211_type+0x40>
    8e74:	cmp	r0, #163	; 0xa3
    8e78:	bne	8e9c <sf_gen_p80211_type+0x60>
    8e7c:	str	r1, [sp]
    8e80:	mov	r0, #1
    8e84:	mov	r1, #0
    8e88:	mov	r2, #16
    8e8c:	mov	r3, lr
    8e90:	bl	83ec <gen_mcmp>
    8e94:	mov	sp, fp
    8e98:	pop	{fp, pc}
    8e9c:	ldr	r0, [pc, #8]	; 8eac <sf_gen_p80211_type+0x70>
    8ea0:	add	r0, pc, r0
    8ea4:	bl	1fc4 <sf_bpf_error>
    8ea8:	.word	0x00027750
    8eac:	.word	0x00009c99

00008eb0 <sf_gen_p80211_fcdir>:
    8eb0:	push	{fp, lr}
    8eb4:	mov	fp, sp
    8eb8:	sub	sp, sp, #8
    8ebc:	mov	r3, r0
    8ec0:	ldr	r0, [pc, #84]	; 8f1c <sf_gen_p80211_fcdir+0x6c>
    8ec4:	ldr	r0, [pc, r0]
    8ec8:	sub	r1, r0, #105	; 0x69
    8ecc:	cmp	r1, #22
    8ed0:	bhi	8ee8 <sf_gen_p80211_fcdir+0x38>
    8ed4:	mov	ip, #1
    8ed8:	movw	r2, #16385	; 0x4001
    8edc:	movt	r2, #64	; 0x40
    8ee0:	tst	r2, ip, lsl r1
    8ee4:	bne	8ef0 <sf_gen_p80211_fcdir+0x40>
    8ee8:	cmp	r0, #163	; 0xa3
    8eec:	bne	8f10 <sf_gen_p80211_fcdir+0x60>
    8ef0:	mov	r0, #3
    8ef4:	str	r0, [sp]
    8ef8:	mov	r0, #1
    8efc:	mov	r1, #1
    8f00:	mov	r2, #16
    8f04:	bl	83ec <gen_mcmp>
    8f08:	mov	sp, fp
    8f0c:	pop	{fp, pc}
    8f10:	ldr	r0, [pc, #8]	; 8f20 <sf_gen_p80211_fcdir+0x70>
    8f14:	add	r0, pc, r0
    8f18:	bl	1fc4 <sf_bpf_error>
    8f1c:	.word	0x000276dc
    8f20:	.word	0x00009c56

00008f24 <sf_gen_acode>:
    8f24:	push	{fp, lr}
    8f28:	mov	fp, sp
    8f2c:	ldr	r2, [pc, #68]	; 8f78 <sf_gen_acode+0x54>
    8f30:	ldr	r2, [pc, r2]
    8f34:	cmp	r2, #129	; 0x81
    8f38:	cmpne	r2, #7
    8f3c:	bne	8f60 <sf_gen_acode+0x3c>
    8f40:	movw	r2, #65534	; 0xfffe
    8f44:	and	r2, r1, r2
    8f48:	cmp	r2, #256	; 0x100
    8f4c:	bne	8f6c <sf_gen_acode+0x48>
    8f50:	lsr	r1, r1, #16
    8f54:	uxtb	r1, r1
    8f58:	pop	{fp, lr}
    8f5c:	b	832c <gen_ahostop>
    8f60:	ldr	r0, [pc, #24]	; 8f80 <sf_gen_acode+0x5c>
    8f64:	add	r0, pc, r0
    8f68:	bl	1fc4 <sf_bpf_error>
    8f6c:	ldr	r0, [pc, #8]	; 8f7c <sf_gen_acode+0x58>
    8f70:	add	r0, pc, r0
    8f74:	bl	1fc4 <sf_bpf_error>
    8f78:	.word	0x00027670
    8f7c:	.word	0x00009c2d
    8f80:	.word	0x00009c63

00008f84 <sf_gen_vlan>:
    8f84:	push	{r4, r5, fp, lr}
    8f88:	add	fp, sp, #8
    8f8c:	sub	sp, sp, #8
    8f90:	mov	r4, r0
    8f94:	ldr	r0, [pc, #216]	; 9074 <sf_gen_vlan+0xf0>
    8f98:	ldr	r0, [pc, r0]
    8f9c:	cmp	r0, #0
    8fa0:	bne	905c <sf_gen_vlan+0xd8>
    8fa4:	ldr	r0, [pc, #204]	; 9078 <sf_gen_vlan+0xf4>
    8fa8:	ldr	r0, [pc, r0]
    8fac:	ldr	r1, [pc, #200]	; 907c <sf_gen_vlan+0xf8>
    8fb0:	add	r1, pc, r1
    8fb4:	str	r0, [r1]
    8fb8:	ldr	r1, [pc, #192]	; 9080 <sf_gen_vlan+0xfc>
    8fbc:	ldr	r1, [pc, r1]
    8fc0:	cmp	r1, #1
    8fc4:	bne	9068 <sf_gen_vlan+0xe4>
    8fc8:	ldr	r1, [pc, #180]	; 9084 <sf_gen_vlan+0x100>
    8fcc:	ldr	r1, [pc, r1]
    8fd0:	mov	r0, #1
    8fd4:	mov	r2, #8
    8fd8:	mov	r3, #33024	; 0x8100
    8fdc:	bl	4528 <gen_cmp>
    8fe0:	mov	r5, r0
    8fe4:	cmp	r4, #0
    8fe8:	bmi	901c <sf_gen_vlan+0x98>
    8fec:	movw	r0, #4095	; 0xfff
    8ff0:	str	r0, [sp]
    8ff4:	mov	r0, #2
    8ff8:	mov	r1, #0
    8ffc:	mov	r2, #8
    9000:	mov	r3, r4
    9004:	bl	83ec <gen_mcmp>
    9008:	mov	r4, r0
    900c:	mov	r0, r5
    9010:	mov	r1, r4
    9014:	bl	316c <sf_gen_and>
    9018:	b	9020 <sf_gen_vlan+0x9c>
    901c:	mov	r4, r5
    9020:	ldr	r0, [pc, #96]	; 9088 <sf_gen_vlan+0x104>
    9024:	ldr	r0, [pc, r0]
    9028:	add	r0, r0, #4
    902c:	ldr	r1, [pc, #88]	; 908c <sf_gen_vlan+0x108>
    9030:	add	r1, pc, r1
    9034:	str	r0, [r1]
    9038:	ldr	r0, [pc, #80]	; 9090 <sf_gen_vlan+0x10c>
    903c:	ldr	r0, [pc, r0]
    9040:	add	r0, r0, #4
    9044:	ldr	r1, [pc, #72]	; 9094 <sf_gen_vlan+0x110>
    9048:	add	r1, pc, r1
    904c:	str	r0, [r1]
    9050:	mov	r0, r4
    9054:	sub	sp, fp, #8
    9058:	pop	{r4, r5, fp, pc}
    905c:	ldr	r0, [pc, #56]	; 909c <sf_gen_vlan+0x118>
    9060:	add	r0, pc, r0
    9064:	bl	1fc4 <sf_bpf_error>
    9068:	ldr	r0, [pc, #40]	; 9098 <sf_gen_vlan+0x114>
    906c:	add	r0, pc, r0
    9070:	bl	1fc4 <sf_bpf_error>
    9074:	.word	0x000272ac
    9078:	.word	0x00027608
    907c:	.word	0x00027298
    9080:	.word	0x000275e4
    9084:	.word	0x000275dc
    9088:	.word	0x00027588
    908c:	.word	0x0002757c
    9090:	.word	0x0002756c
    9094:	.word	0x00027560
    9098:	.word	0x00009b91
    909c:	.word	0x00009b84

000090a0 <sf_gen_mpls>:
    90a0:	push	{r4, r5, fp, lr}
    90a4:	add	fp, sp, #8
    90a8:	sub	sp, sp, #8
    90ac:	mov	r4, r0
    90b0:	ldr	r0, [pc, #276]	; 91cc <sf_gen_mpls+0x12c>
    90b4:	ldr	r0, [pc, r0]
    90b8:	ldr	r1, [pc, #272]	; 91d0 <sf_gen_mpls+0x130>
    90bc:	add	r1, pc, r1
    90c0:	str	r0, [r1]
    90c4:	ldr	r1, [pc, #264]	; 91d4 <sf_gen_mpls+0x134>
    90c8:	ldr	r1, [pc, r1]
    90cc:	cmp	r1, #0
    90d0:	beq	90f4 <sf_gen_mpls+0x54>
    90d4:	mov	r1, #1
    90d8:	str	r1, [sp]
    90dc:	sub	r1, r0, #2
    90e0:	mov	r0, #2
    90e4:	mov	r2, #16
    90e8:	mov	r3, #0
    90ec:	bl	83ec <gen_mcmp>
    90f0:	b	9124 <sf_gen_mpls+0x84>
    90f4:	ldr	r1, [pc, #220]	; 91d8 <sf_gen_mpls+0x138>
    90f8:	ldr	r1, [pc, r1]
    90fc:	cmp	r1, #104	; 0x68
    9100:	beq	9114 <sf_gen_mpls+0x74>
    9104:	cmp	r1, #9
    9108:	beq	911c <sf_gen_mpls+0x7c>
    910c:	cmp	r1, #1
    9110:	bne	91c0 <sf_gen_mpls+0x120>
    9114:	movw	r0, #34887	; 0x8847
    9118:	b	9120 <sf_gen_mpls+0x80>
    911c:	movw	r0, #641	; 0x281
    9120:	bl	3a80 <gen_linktype>
    9124:	mov	r5, r0
    9128:	cmp	r4, #0
    912c:	bmi	9168 <sf_gen_mpls+0xc8>
    9130:	ldr	r1, [pc, #168]	; 91e0 <sf_gen_mpls+0x140>
    9134:	ldr	r1, [pc, r1]
    9138:	movw	r0, #61440	; 0xf000
    913c:	movt	r0, #65535	; 0xffff
    9140:	str	r0, [sp]
    9144:	lsl	r3, r4, #12
    9148:	mov	r0, #2
    914c:	mov	r2, #0
    9150:	bl	83ec <gen_mcmp>
    9154:	mov	r4, r0
    9158:	mov	r0, r5
    915c:	mov	r1, r4
    9160:	bl	316c <sf_gen_and>
    9164:	b	916c <sf_gen_mpls+0xcc>
    9168:	mov	r4, r5
    916c:	ldr	r0, [pc, #112]	; 91e4 <sf_gen_mpls+0x144>
    9170:	ldr	r0, [pc, r0]
    9174:	add	r0, r0, #4
    9178:	ldr	r1, [pc, #104]	; 91e8 <sf_gen_mpls+0x148>
    917c:	add	r1, pc, r1
    9180:	str	r0, [r1]
    9184:	ldr	r0, [pc, #96]	; 91ec <sf_gen_mpls+0x14c>
    9188:	ldr	r0, [pc, r0]
    918c:	add	r0, r0, #4
    9190:	ldr	r1, [pc, #88]	; 91f0 <sf_gen_mpls+0x150>
    9194:	add	r1, pc, r1
    9198:	str	r0, [r1]
    919c:	ldr	r0, [pc, #80]	; 91f4 <sf_gen_mpls+0x154>
    91a0:	ldr	r0, [pc, r0]
    91a4:	add	r0, r0, #1
    91a8:	ldr	r1, [pc, #72]	; 91f8 <sf_gen_mpls+0x158>
    91ac:	add	r1, pc, r1
    91b0:	str	r0, [r1]
    91b4:	mov	r0, r4
    91b8:	sub	sp, fp, #8
    91bc:	pop	{r4, r5, fp, pc}
    91c0:	ldr	r0, [pc, #20]	; 91dc <sf_gen_mpls+0x13c>
    91c4:	add	r0, pc, r0
    91c8:	bl	1fc4 <sf_bpf_error>
    91cc:	.word	0x000274fc
    91d0:	.word	0x0002718c
    91d4:	.word	0x0002717c
    91d8:	.word	0x000274a8
    91dc:	.word	0x00009a5f
    91e0:	.word	0x00027114
    91e4:	.word	0x0002744c
    91e8:	.word	0x00027440
    91ec:	.word	0x00027428
    91f0:	.word	0x0002741c
    91f4:	.word	0x000270a4
    91f8:	.word	0x00027098

000091fc <sf_gen_pppoed>:
    91fc:	movw	r0, #34915	; 0x8863
    9200:	b	3a80 <gen_linktype>

00009204 <sf_gen_pppoes>:
    9204:	push	{fp, lr}
    9208:	mov	fp, sp
    920c:	movw	r0, #34916	; 0x8864
    9210:	bl	3a80 <gen_linktype>
    9214:	ldr	r1, [pc, #76]	; 9268 <sf_gen_pppoes+0x64>
    9218:	add	r1, pc, r1
    921c:	mov	r2, #1
    9220:	strb	r2, [r1]
    9224:	ldr	r1, [pc, #64]	; 926c <sf_gen_pppoes+0x68>
    9228:	add	r1, pc, r1
    922c:	mov	r2, #8
    9230:	str	r2, [r1]
    9234:	ldr	r1, [pc, #52]	; 9270 <sf_gen_pppoes+0x6c>
    9238:	ldr	r1, [pc, r1]
    923c:	ldr	r3, [pc, #48]	; 9274 <sf_gen_pppoes+0x70>
    9240:	add	r3, pc, r3
    9244:	str	r2, [r3]
    9248:	ldr	r2, [pc, #40]	; 9278 <sf_gen_pppoes+0x74>
    924c:	add	r2, pc, r2
    9250:	str	r1, [r2]
    9254:	add	r1, r1, #6
    9258:	ldr	r2, [pc, #28]	; 927c <sf_gen_pppoes+0x78>
    925c:	add	r2, pc, r2
    9260:	str	r1, [r2]
    9264:	pop	{fp, pc}
    9268:	.word	0x000273a8
    926c:	.word	0x00027394
    9270:	.word	0x00027378
    9274:	.word	0x00027370
    9278:	.word	0x00026ffc
    927c:	.word	0x0002734c

00009280 <sf_gen_atmfield_code>:
    9280:	push	{fp, lr}
    9284:	mov	fp, sp
    9288:	sub	sp, sp, #16
    928c:	sub	ip, r0, #51	; 0x33
    9290:	cmp	ip, #4
    9294:	bhi	93c8 <sf_gen_atmfield_code+0x148>
    9298:	add	lr, pc, #4
    929c:	ldr	r0, [lr, ip, lsl #2]
    92a0:	add	pc, lr, r0
    92a4:	.word	0x00000014
    92a8:	.word	0x000000dc
    92ac:	.word	0x00000084
    92b0:	.word	0x000000b4
    92b4:	.word	0x0000004c
    92b8:	ldr	r0, [pc, #304]	; 93f0 <sf_gen_atmfield_code+0x170>
    92bc:	add	r0, pc, r0
    92c0:	ldrb	r0, [r0]
    92c4:	cmp	r0, #0
    92c8:	beq	93cc <sf_gen_atmfield_code+0x14c>
    92cc:	ldr	ip, [pc, #288]	; 93f4 <sf_gen_atmfield_code+0x174>
    92d0:	ldr	ip, [pc, ip]
    92d4:	cmn	ip, #1
    92d8:	beq	93c8 <sf_gen_atmfield_code+0x148>
    92dc:	stm	sp, {r2, r3}
    92e0:	str	r1, [sp, #8]
    92e4:	mov	r0, #1
    92e8:	mov	r1, ip
    92ec:	b	9378 <sf_gen_atmfield_code+0xf8>
    92f0:	ldr	r0, [pc, #272]	; 9408 <sf_gen_atmfield_code+0x188>
    92f4:	add	r0, pc, r0
    92f8:	ldrb	r0, [r0]
    92fc:	cmp	r0, #0
    9300:	beq	93d8 <sf_gen_atmfield_code+0x158>
    9304:	ldr	r0, [pc, #256]	; 940c <sf_gen_atmfield_code+0x18c>
    9308:	add	r0, pc, r0
    930c:	ldrb	r0, [r0]
    9310:	cmp	r0, #1
    9314:	beq	93c8 <sf_gen_atmfield_code+0x148>
    9318:	stm	sp, {r2, r3}
    931c:	str	r1, [sp, #8]
    9320:	rsb	r1, r0, #0
    9324:	b	9374 <sf_gen_atmfield_code+0xf4>
    9328:	ldr	r0, [pc, #208]	; 9400 <sf_gen_atmfield_code+0x180>
    932c:	add	r0, pc, r0
    9330:	ldrb	r0, [r0]
    9334:	cmp	r0, #1
    9338:	beq	93c8 <sf_gen_atmfield_code+0x148>
    933c:	stm	sp, {r2, r3}
    9340:	str	r1, [sp, #8]
    9344:	rsb	r1, r0, #0
    9348:	mov	r0, #1
    934c:	mov	r2, #16
    9350:	mov	r3, #15
    9354:	b	93bc <sf_gen_atmfield_code+0x13c>
    9358:	ldr	r0, [pc, #164]	; 9404 <sf_gen_atmfield_code+0x184>
    935c:	ldr	r0, [pc, r0]
    9360:	cmn	r0, #1
    9364:	beq	93c8 <sf_gen_atmfield_code+0x148>
    9368:	stm	sp, {r2, r3}
    936c:	str	r1, [sp, #8]
    9370:	add	r1, r0, #5
    9374:	mov	r0, #1
    9378:	mov	r2, #16
    937c:	b	93b8 <sf_gen_atmfield_code+0x138>
    9380:	ldr	r0, [pc, #112]	; 93f8 <sf_gen_atmfield_code+0x178>
    9384:	add	r0, pc, r0
    9388:	ldrb	r0, [r0]
    938c:	cmp	r0, #0
    9390:	beq	93e4 <sf_gen_atmfield_code+0x164>
    9394:	ldr	ip, [pc, #96]	; 93fc <sf_gen_atmfield_code+0x17c>
    9398:	ldr	ip, [pc, ip]
    939c:	cmn	ip, #1
    93a0:	beq	93c8 <sf_gen_atmfield_code+0x148>
    93a4:	stm	sp, {r2, r3}
    93a8:	str	r1, [sp, #8]
    93ac:	mov	r0, #1
    93b0:	mov	r1, ip
    93b4:	mov	r2, #8
    93b8:	mvn	r3, #0
    93bc:	bl	941c <gen_ncmp>
    93c0:	mov	sp, fp
    93c4:	pop	{fp, pc}
    93c8:	bl	fc4 <abort@plt>
    93cc:	ldr	r0, [pc, #60]	; 9410 <sf_gen_atmfield_code+0x190>
    93d0:	add	r0, pc, r0
    93d4:	bl	1fc4 <sf_bpf_error>
    93d8:	ldr	r0, [pc, #56]	; 9418 <sf_gen_atmfield_code+0x198>
    93dc:	add	r0, pc, r0
    93e0:	bl	1fc4 <sf_bpf_error>
    93e4:	ldr	r0, [pc, #40]	; 9414 <sf_gen_atmfield_code+0x194>
    93e8:	add	r0, pc, r0
    93ec:	bl	1fc4 <sf_bpf_error>
    93f0:	.word	0x00027308
    93f4:	.word	0x000272f8
    93f8:	.word	0x00027240
    93fc:	.word	0x00027234
    9400:	.word	0x000272a4
    9404:	.word	0x00027278
    9408:	.word	0x000272d0
    940c:	.word	0x000272c8
    9410:	.word	0x00009879
    9414:	.word	0x00009881
    9418:	.word	0x000098ad

0000941c <gen_ncmp>:
    941c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    9420:	add	fp, sp, #24
    9424:	mov	r5, r3
    9428:	bl	8800 <gen_load_a>
    942c:	mov	r4, r0
    9430:	ldr	r7, [fp, #16]
    9434:	ldr	r8, [fp, #12]
    9438:	ldr	r6, [fp, #8]
    943c:	cmn	r5, #1
    9440:	beq	945c <gen_ncmp+0x40>
    9444:	mov	r0, #84	; 0x54
    9448:	bl	79c0 <new_stmt>
    944c:	mov	r1, r0
    9450:	str	r5, [r0, #12]
    9454:	mov	r0, r4
    9458:	bl	7544 <sf_append>
    945c:	orr	r0, r6, #5
    9460:	bl	7c8c <new_block>
    9464:	mov	r5, r0
    9468:	str	r7, [r0, #20]
    946c:	str	r4, [r0, #4]
    9470:	cmp	r8, #0
    9474:	beq	9488 <gen_ncmp+0x6c>
    9478:	orr	r0, r6, #16
    947c:	cmp	r0, #48	; 0x30
    9480:	moveq	r0, r5
    9484:	bleq	3298 <sf_gen_not>
    9488:	mov	r0, r5
    948c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00009490 <sf_gen_atmtype_abbrev>:
    9490:	push	{r4, r5, fp, lr}
    9494:	add	fp, sp, #8
    9498:	sub	r0, r0, #22
    949c:	cmp	r0, #9
    94a0:	bhi	9718 <sf_gen_atmtype_abbrev+0x288>
    94a4:	add	r1, pc, #4
    94a8:	ldr	r0, [r1, r0, lsl #2]
    94ac:	add	pc, r1, r0
    94b0:	.word	0x00000028
    94b4:	.word	0x0000010c
    94b8:	.word	0x000000d4
    94bc:	.word	0x00000060
    94c0:	.word	0x00000210
    94c4:	.word	0x00000144
    94c8:	.word	0x00000268
    94cc:	.word	0x00000268
    94d0:	.word	0x0000017c
    94d4:	.word	0x00000098
    94d8:	ldr	r0, [pc, #668]	; 977c <sf_gen_atmtype_abbrev+0x2ec>
    94dc:	add	r0, pc, r0
    94e0:	ldrb	r0, [r0]
    94e4:	cmp	r0, #0
    94e8:	beq	971c <sf_gen_atmtype_abbrev+0x28c>
    94ec:	mov	r0, #51	; 0x33
    94f0:	mov	r1, #0
    94f4:	mov	r2, #16
    94f8:	mov	r3, #0
    94fc:	bl	9280 <sf_gen_atmfield_code>
    9500:	mov	r5, r0
    9504:	mov	r0, #52	; 0x34
    9508:	mov	r1, #1
    950c:	b	96f4 <sf_gen_atmtype_abbrev+0x264>
    9510:	ldr	r0, [pc, #624]	; 9788 <sf_gen_atmtype_abbrev+0x2f8>
    9514:	add	r0, pc, r0
    9518:	ldrb	r0, [r0]
    951c:	cmp	r0, #0
    9520:	beq	9728 <sf_gen_atmtype_abbrev+0x298>
    9524:	mov	r0, #51	; 0x33
    9528:	mov	r1, #0
    952c:	mov	r2, #16
    9530:	mov	r3, #0
    9534:	bl	9280 <sf_gen_atmfield_code>
    9538:	mov	r5, r0
    953c:	mov	r0, #52	; 0x34
    9540:	mov	r1, #4
    9544:	b	96f4 <sf_gen_atmtype_abbrev+0x264>
    9548:	ldr	r0, [pc, #612]	; 97b4 <sf_gen_atmtype_abbrev+0x324>
    954c:	add	r0, pc, r0
    9550:	ldrb	r0, [r0]
    9554:	cmp	r0, #0
    9558:	beq	9734 <sf_gen_atmtype_abbrev+0x2a4>
    955c:	mov	r4, #0
    9560:	mov	r0, #53	; 0x35
    9564:	mov	r1, #2
    9568:	mov	r2, #16
    956c:	mov	r3, #0
    9570:	bl	9280 <sf_gen_atmfield_code>
    9574:	ldr	r1, [pc, #572]	; 97b8 <sf_gen_atmtype_abbrev+0x328>
    9578:	add	r1, pc, r1
    957c:	strb	r4, [r1]
    9580:	pop	{r4, r5, fp, pc}
    9584:	ldr	r0, [pc, #504]	; 9784 <sf_gen_atmtype_abbrev+0x2f4>
    9588:	add	r0, pc, r0
    958c:	ldrb	r0, [r0]
    9590:	cmp	r0, #0
    9594:	beq	9740 <sf_gen_atmtype_abbrev+0x2b0>
    9598:	mov	r0, #51	; 0x33
    959c:	mov	r1, #0
    95a0:	mov	r2, #16
    95a4:	mov	r3, #0
    95a8:	bl	9280 <sf_gen_atmfield_code>
    95ac:	mov	r5, r0
    95b0:	mov	r0, #52	; 0x34
    95b4:	mov	r1, #3
    95b8:	b	96f4 <sf_gen_atmtype_abbrev+0x264>
    95bc:	ldr	r0, [pc, #444]	; 9780 <sf_gen_atmtype_abbrev+0x2f0>
    95c0:	add	r0, pc, r0
    95c4:	ldrb	r0, [r0]
    95c8:	cmp	r0, #0
    95cc:	beq	974c <sf_gen_atmtype_abbrev+0x2bc>
    95d0:	mov	r0, #51	; 0x33
    95d4:	mov	r1, #0
    95d8:	mov	r2, #16
    95dc:	mov	r3, #0
    95e0:	bl	9280 <sf_gen_atmfield_code>
    95e4:	mov	r5, r0
    95e8:	mov	r0, #52	; 0x34
    95ec:	mov	r1, #2
    95f0:	b	96f4 <sf_gen_atmtype_abbrev+0x264>
    95f4:	ldr	r0, [pc, #404]	; 9790 <sf_gen_atmtype_abbrev+0x300>
    95f8:	add	r0, pc, r0
    95fc:	ldrb	r0, [r0]
    9600:	cmp	r0, #0
    9604:	beq	9758 <sf_gen_atmtype_abbrev+0x2c8>
    9608:	mov	r0, #51	; 0x33
    960c:	mov	r1, #0
    9610:	mov	r2, #16
    9614:	mov	r3, #0
    9618:	bl	9280 <sf_gen_atmfield_code>
    961c:	mov	r5, r0
    9620:	mov	r0, #52	; 0x34
    9624:	mov	r1, #16
    9628:	b	96f4 <sf_gen_atmtype_abbrev+0x264>
    962c:	ldr	r0, [pc, #352]	; 9794 <sf_gen_atmtype_abbrev+0x304>
    9630:	add	r0, pc, r0
    9634:	ldrb	r0, [r0]
    9638:	cmp	r0, #0
    963c:	beq	9764 <sf_gen_atmtype_abbrev+0x2d4>
    9640:	mov	r4, #1
    9644:	mov	r5, #0
    9648:	mov	r0, #53	; 0x35
    964c:	mov	r1, #1
    9650:	mov	r2, #16
    9654:	mov	r3, #0
    9658:	bl	9280 <sf_gen_atmfield_code>
    965c:	ldr	r1, [pc, #308]	; 9798 <sf_gen_atmtype_abbrev+0x308>
    9660:	add	r1, pc, r1
    9664:	strb	r4, [r1]
    9668:	ldr	r1, [pc, #300]	; 979c <sf_gen_atmtype_abbrev+0x30c>
    966c:	add	r1, pc, r1
    9670:	str	r5, [r1]
    9674:	ldr	r1, [pc, #292]	; 97a0 <sf_gen_atmtype_abbrev+0x310>
    9678:	add	r1, pc, r1
    967c:	mov	r2, #3
    9680:	str	r2, [r1]
    9684:	ldr	r1, [pc, #280]	; 97a4 <sf_gen_atmtype_abbrev+0x314>
    9688:	ldr	r1, [pc, r1]
    968c:	add	r2, r1, #2
    9690:	ldr	r3, [pc, #272]	; 97a8 <sf_gen_atmtype_abbrev+0x318>
    9694:	add	r3, pc, r3
    9698:	str	r2, [r3]
    969c:	add	r2, r1, #14
    96a0:	ldr	r3, [pc, #260]	; 97ac <sf_gen_atmtype_abbrev+0x31c>
    96a4:	add	r3, pc, r3
    96a8:	str	r2, [r3]
    96ac:	add	r1, r1, #16
    96b0:	ldr	r2, [pc, #248]	; 97b0 <sf_gen_atmtype_abbrev+0x320>
    96b4:	add	r2, pc, r2
    96b8:	str	r1, [r2]
    96bc:	pop	{r4, r5, fp, pc}
    96c0:	ldr	r0, [pc, #196]	; 978c <sf_gen_atmtype_abbrev+0x2fc>
    96c4:	add	r0, pc, r0
    96c8:	ldrb	r0, [r0]
    96cc:	cmp	r0, #0
    96d0:	beq	9770 <sf_gen_atmtype_abbrev+0x2e0>
    96d4:	mov	r0, #51	; 0x33
    96d8:	mov	r1, #0
    96dc:	mov	r2, #16
    96e0:	mov	r3, #0
    96e4:	bl	9280 <sf_gen_atmfield_code>
    96e8:	mov	r5, r0
    96ec:	mov	r0, #52	; 0x34
    96f0:	mov	r1, #5
    96f4:	mov	r2, #16
    96f8:	mov	r3, #0
    96fc:	bl	9280 <sf_gen_atmfield_code>
    9700:	mov	r4, r0
    9704:	mov	r0, r5
    9708:	mov	r1, r4
    970c:	bl	316c <sf_gen_and>
    9710:	mov	r0, r4
    9714:	pop	{r4, r5, fp, pc}
    9718:	bl	fc4 <abort@plt>
    971c:	ldr	r0, [pc, #152]	; 97bc <sf_gen_atmtype_abbrev+0x32c>
    9720:	add	r0, pc, r0
    9724:	bl	1fc4 <sf_bpf_error>
    9728:	ldr	r0, [pc, #152]	; 97c8 <sf_gen_atmtype_abbrev+0x338>
    972c:	add	r0, pc, r0
    9730:	bl	1fc4 <sf_bpf_error>
    9734:	ldr	r0, [pc, #156]	; 97d8 <sf_gen_atmtype_abbrev+0x348>
    9738:	add	r0, pc, r0
    973c:	bl	1fc4 <sf_bpf_error>
    9740:	ldr	r0, [pc, #124]	; 97c4 <sf_gen_atmtype_abbrev+0x334>
    9744:	add	r0, pc, r0
    9748:	bl	1fc4 <sf_bpf_error>
    974c:	ldr	r0, [pc, #108]	; 97c0 <sf_gen_atmtype_abbrev+0x330>
    9750:	add	r0, pc, r0
    9754:	bl	1fc4 <sf_bpf_error>
    9758:	ldr	r0, [pc, #112]	; 97d0 <sf_gen_atmtype_abbrev+0x340>
    975c:	add	r0, pc, r0
    9760:	bl	1fc4 <sf_bpf_error>
    9764:	ldr	r0, [pc, #104]	; 97d4 <sf_gen_atmtype_abbrev+0x344>
    9768:	add	r0, pc, r0
    976c:	bl	1fc4 <sf_bpf_error>
    9770:	ldr	r0, [pc, #84]	; 97cc <sf_gen_atmtype_abbrev+0x33c>
    9774:	add	r0, pc, r0
    9778:	bl	1fc4 <sf_bpf_error>
    977c:	.word	0x000270e8
    9780:	.word	0x00027004
    9784:	.word	0x0002703c
    9788:	.word	0x000270b0
    978c:	.word	0x00026f00
    9790:	.word	0x00026fcc
    9794:	.word	0x00026f94
    9798:	.word	0x00026f44
    979c:	.word	0x00026f44
    97a0:	.word	0x00026f44
    97a4:	.word	0x00026f4c
    97a8:	.word	0x00026f24
    97ac:	.word	0x00026f04
    97b0:	.word	0x00026ef8
    97b4:	.word	0x00027078
    97b8:	.word	0x0002702c
    97bc:	.word	0x0000958d
    97c0:	.word	0x0000957f
    97c4:	.word	0x000095ab
    97c8:	.word	0x000095e6
    97cc:	.word	0x000095c1
    97d0:	.word	0x000095f8
    97d4:	.word	0x0000960e
    97d8:	.word	0x0000965f

000097dc <sf_gen_mtp2type_abbrev>:
    97dc:	push	{r4, r5, r6, sl, fp, lr}
    97e0:	add	fp, sp, #16
    97e4:	sub	sp, sp, #16
    97e8:	cmp	r0, #24
    97ec:	beq	98c0 <sf_gen_mtp2type_abbrev+0xe4>
    97f0:	cmp	r0, #23
    97f4:	beq	9838 <sf_gen_mtp2type_abbrev+0x5c>
    97f8:	cmp	r0, #22
    97fc:	bne	9914 <sf_gen_mtp2type_abbrev+0x138>
    9800:	ldr	r0, [pc, #308]	; 993c <sf_gen_mtp2type_abbrev+0x160>
    9804:	ldr	r0, [pc, r0]
    9808:	sub	r1, r0, #139	; 0x8b
    980c:	cmp	r1, #2
    9810:	bcc	981c <sf_gen_mtp2type_abbrev+0x40>
    9814:	cmp	r0, #197	; 0xc5
    9818:	bne	9918 <sf_gen_mtp2type_abbrev+0x13c>
    981c:	ldr	r1, [pc, #284]	; 9940 <sf_gen_mtp2type_abbrev+0x164>
    9820:	ldr	r1, [pc, r1]
    9824:	mov	r0, #0
    9828:	mov	r2, #16
    982c:	str	r2, [sp]
    9830:	str	r0, [sp, #4]
    9834:	b	98f8 <sf_gen_mtp2type_abbrev+0x11c>
    9838:	ldr	r0, [pc, #260]	; 9944 <sf_gen_mtp2type_abbrev+0x168>
    983c:	ldr	r0, [pc, r0]
    9840:	sub	r1, r0, #139	; 0x8b
    9844:	cmp	r1, #2
    9848:	bcc	9854 <sf_gen_mtp2type_abbrev+0x78>
    984c:	cmp	r0, #197	; 0xc5
    9850:	bne	9924 <sf_gen_mtp2type_abbrev+0x148>
    9854:	ldr	r1, [pc, #236]	; 9948 <sf_gen_mtp2type_abbrev+0x16c>
    9858:	ldr	r1, [pc, r1]
    985c:	mov	r0, #2
    9860:	mov	r2, #1
    9864:	mov	r5, #32
    9868:	str	r5, [sp]
    986c:	str	r2, [sp, #4]
    9870:	str	r0, [sp, #8]
    9874:	mov	r6, #0
    9878:	mov	r0, #0
    987c:	mov	r2, #16
    9880:	mov	r3, #63	; 0x3f
    9884:	bl	941c <gen_ncmp>
    9888:	mov	r4, r0
    988c:	ldr	r1, [pc, #184]	; 994c <sf_gen_mtp2type_abbrev+0x170>
    9890:	ldr	r1, [pc, r1]
    9894:	stm	sp, {r5, r6}
    9898:	str	r6, [sp, #8]
    989c:	mov	r0, #0
    98a0:	mov	r2, #16
    98a4:	mov	r3, #63	; 0x3f
    98a8:	bl	941c <gen_ncmp>
    98ac:	mov	r1, r4
    98b0:	bl	316c <sf_gen_and>
    98b4:	mov	r0, r4
    98b8:	sub	sp, fp, #16
    98bc:	pop	{r4, r5, r6, sl, fp, pc}
    98c0:	ldr	r0, [pc, #136]	; 9950 <sf_gen_mtp2type_abbrev+0x174>
    98c4:	ldr	r0, [pc, r0]
    98c8:	sub	r1, r0, #139	; 0x8b
    98cc:	cmp	r1, #2
    98d0:	bcc	98dc <sf_gen_mtp2type_abbrev+0x100>
    98d4:	cmp	r0, #197	; 0xc5
    98d8:	bne	9930 <sf_gen_mtp2type_abbrev+0x154>
    98dc:	ldr	r1, [pc, #112]	; 9954 <sf_gen_mtp2type_abbrev+0x178>
    98e0:	ldr	r1, [pc, r1]
    98e4:	mov	r0, #2
    98e8:	mov	r2, #0
    98ec:	mov	r3, #32
    98f0:	str	r3, [sp]
    98f4:	str	r2, [sp, #4]
    98f8:	str	r0, [sp, #8]
    98fc:	mov	r0, #0
    9900:	mov	r2, #16
    9904:	mov	r3, #63	; 0x3f
    9908:	bl	941c <gen_ncmp>
    990c:	sub	sp, fp, #16
    9910:	pop	{r4, r5, r6, sl, fp, pc}
    9914:	bl	fc4 <abort@plt>
    9918:	ldr	r0, [pc, #56]	; 9958 <sf_gen_mtp2type_abbrev+0x17c>
    991c:	add	r0, pc, r0
    9920:	bl	1fc4 <sf_bpf_error>
    9924:	ldr	r0, [pc, #48]	; 995c <sf_gen_mtp2type_abbrev+0x180>
    9928:	add	r0, pc, r0
    992c:	bl	1fc4 <sf_bpf_error>
    9930:	ldr	r0, [pc, #40]	; 9960 <sf_gen_mtp2type_abbrev+0x184>
    9934:	add	r0, pc, r0
    9938:	bl	1fc4 <sf_bpf_error>
    993c:	.word	0x00026d9c
    9940:	.word	0x00026db8
    9944:	.word	0x00026d64
    9948:	.word	0x00026d80
    994c:	.word	0x00026d48
    9950:	.word	0x00026cdc
    9954:	.word	0x00026cf8
    9958:	.word	0x0000949b
    995c:	.word	0x000094ad
    9960:	.word	0x000094bf

00009964 <sf_gen_mtp3field_code>:
    9964:	push	{fp, lr}
    9968:	mov	fp, sp
    996c:	sub	sp, sp, #16
    9970:	sub	ip, r0, #1
    9974:	cmp	ip, #3
    9978:	bhi	9a90 <sf_gen_mtp3field_code+0x12c>
    997c:	add	lr, pc, #4
    9980:	ldr	r0, [lr, ip, lsl #2]
    9984:	add	pc, lr, r0
    9988:	.word	0x00000010
    998c:	.word	0x000000b4
    9990:	.word	0x00000044
    9994:	.word	0x0000007c
    9998:	ldr	ip, [pc, #340]	; 9af4 <sf_gen_mtp3field_code+0x190>
    999c:	ldr	ip, [pc, ip]
    99a0:	cmn	ip, #1
    99a4:	beq	9a94 <sf_gen_mtp3field_code+0x130>
    99a8:	cmp	r1, #256	; 0x100
    99ac:	bcs	9aa0 <sf_gen_mtp3field_code+0x13c>
    99b0:	stm	sp, {r2, r3}
    99b4:	str	r1, [sp, #8]
    99b8:	mov	r0, #0
    99bc:	mov	r1, ip
    99c0:	mov	r2, #16
    99c4:	mvn	r3, #0
    99c8:	b	9a84 <sf_gen_mtp3field_code+0x120>
    99cc:	ldr	ip, [pc, #296]	; 9afc <sf_gen_mtp3field_code+0x198>
    99d0:	ldr	ip, [pc, ip]
    99d4:	cmn	ip, #1
    99d8:	beq	9aac <sf_gen_mtp3field_code+0x148>
    99dc:	cmp	r1, #16384	; 0x4000
    99e0:	bcs	9ab8 <sf_gen_mtp3field_code+0x154>
    99e4:	mov	r0, #4128768	; 0x3f0000
    99e8:	and	r0, r0, r1, lsl #8
    99ec:	orr	r0, r0, r1, lsl #24
    99f0:	stm	sp, {r2, r3}
    99f4:	str	r0, [sp, #8]
    99f8:	movw	r3, #0
    99fc:	movt	r3, #65343	; 0xff3f
    9a00:	b	9a78 <sf_gen_mtp3field_code+0x114>
    9a04:	ldr	ip, [pc, #244]	; 9b00 <sf_gen_mtp3field_code+0x19c>
    9a08:	ldr	ip, [pc, ip]
    9a0c:	cmn	ip, #1
    9a10:	beq	9ac4 <sf_gen_mtp3field_code+0x160>
    9a14:	cmp	r1, #16
    9a18:	bcs	9ad0 <sf_gen_mtp3field_code+0x16c>
    9a1c:	lsl	r0, r1, #4
    9a20:	stm	sp, {r2, r3}
    9a24:	str	r0, [sp, #8]
    9a28:	mov	r0, #0
    9a2c:	mov	r1, ip
    9a30:	mov	r2, #16
    9a34:	mov	r3, #240	; 0xf0
    9a38:	b	9a84 <sf_gen_mtp3field_code+0x120>
    9a3c:	ldr	ip, [pc, #180]	; 9af8 <sf_gen_mtp3field_code+0x194>
    9a40:	ldr	ip, [pc, ip]
    9a44:	cmn	ip, #1
    9a48:	beq	9adc <sf_gen_mtp3field_code+0x178>
    9a4c:	cmp	r1, #16384	; 0x4000
    9a50:	bcs	9ae8 <sf_gen_mtp3field_code+0x184>
    9a54:	stm	sp, {r2, r3}
    9a58:	and	r0, r1, #1020	; 0x3fc
    9a5c:	ubfx	r2, r1, #10, #4
    9a60:	orr	r0, r2, r0, lsl #6
    9a64:	and	r1, r1, #3
    9a68:	orr	r0, r0, r1, lsl #22
    9a6c:	str	r0, [sp, #8]
    9a70:	movw	r3, #65295	; 0xff0f
    9a74:	movt	r3, #192	; 0xc0
    9a78:	mov	r0, #0
    9a7c:	mov	r1, ip
    9a80:	mov	r2, #0
    9a84:	bl	941c <gen_ncmp>
    9a88:	mov	sp, fp
    9a8c:	pop	{fp, pc}
    9a90:	bl	fc4 <abort@plt>
    9a94:	ldr	r0, [pc, #104]	; 9b04 <sf_gen_mtp3field_code+0x1a0>
    9a98:	add	r0, pc, r0
    9a9c:	bl	1fc4 <sf_bpf_error>
    9aa0:	ldr	r0, [pc, #96]	; 9b08 <sf_gen_mtp3field_code+0x1a4>
    9aa4:	add	r0, pc, r0
    9aa8:	bl	1fc4 <sf_bpf_error>
    9aac:	ldr	r0, [pc, #96]	; 9b14 <sf_gen_mtp3field_code+0x1b0>
    9ab0:	add	r0, pc, r0
    9ab4:	bl	1fc4 <sf_bpf_error>
    9ab8:	ldr	r0, [pc, #88]	; 9b18 <sf_gen_mtp3field_code+0x1b4>
    9abc:	add	r0, pc, r0
    9ac0:	bl	1fc4 <sf_bpf_error>
    9ac4:	ldr	r0, [pc, #80]	; 9b1c <sf_gen_mtp3field_code+0x1b8>
    9ac8:	add	r0, pc, r0
    9acc:	bl	1fc4 <sf_bpf_error>
    9ad0:	ldr	r0, [pc, #72]	; 9b20 <sf_gen_mtp3field_code+0x1bc>
    9ad4:	add	r0, pc, r0
    9ad8:	bl	1fc4 <sf_bpf_error>
    9adc:	ldr	r0, [pc, #40]	; 9b0c <sf_gen_mtp3field_code+0x1a8>
    9ae0:	add	r0, pc, r0
    9ae4:	bl	1fc4 <sf_bpf_error>
    9ae8:	ldr	r0, [pc, #32]	; 9b10 <sf_gen_mtp3field_code+0x1ac>
    9aec:	add	r0, pc, r0
    9af0:	bl	1fc4 <sf_bpf_error>
    9af4:	.word	0x00026c40
    9af8:	.word	0x00026ba0
    9afc:	.word	0x00026c14
    9b00:	.word	0x00026be0
    9b04:	.word	0x00009378
    9b08:	.word	0x00009388
    9b0c:	.word	0x00009372
    9b10:	.word	0x00009382
    9b14:	.word	0x000093e6
    9b18:	.word	0x000093f6
    9b1c:	.word	0x00009412
    9b20:	.word	0x00009422

00009b24 <sf_gen_atmmulti_abbrev>:
    9b24:	push	{r4, r5, fp, lr}
    9b28:	add	fp, sp, #8
    9b2c:	ldr	r1, [pc, #444]	; 9cf0 <sf_gen_atmmulti_abbrev+0x1cc>
    9b30:	add	r1, pc, r1
    9b34:	ldrb	r2, [r1]
    9b38:	cmp	r0, #69	; 0x45
    9b3c:	bgt	9b60 <sf_gen_atmmulti_abbrev+0x3c>
    9b40:	cmp	r0, #28
    9b44:	bne	9be0 <sf_gen_atmmulti_abbrev+0xbc>
    9b48:	mov	r0, #29
    9b4c:	cmp	r2, #0
    9b50:	bne	9b38 <sf_gen_atmmulti_abbrev+0x14>
    9b54:	ldr	r0, [pc, #408]	; 9cf4 <sf_gen_atmmulti_abbrev+0x1d0>
    9b58:	add	r0, pc, r0
    9b5c:	bl	1fc4 <sf_bpf_error>
    9b60:	cmp	r0, #70	; 0x46
    9b64:	bne	9c48 <sf_gen_atmmulti_abbrev+0x124>
    9b68:	ldrb	r0, [r1]
    9b6c:	cmp	r0, #0
    9b70:	beq	9ccc <sf_gen_atmmulti_abbrev+0x1a8>
    9b74:	mov	r0, #41	; 0x29
    9b78:	bl	9d04 <gen_msg_abbrev>
    9b7c:	mov	r5, r0
    9b80:	mov	r0, #42	; 0x2a
    9b84:	bl	9d04 <gen_msg_abbrev>
    9b88:	mov	r4, r0
    9b8c:	mov	r0, r5
    9b90:	mov	r1, r4
    9b94:	bl	3244 <sf_gen_or>
    9b98:	mov	r0, #43	; 0x2b
    9b9c:	bl	9d04 <gen_msg_abbrev>
    9ba0:	mov	r1, r4
    9ba4:	bl	3244 <sf_gen_or>
    9ba8:	mov	r0, #44	; 0x2c
    9bac:	bl	9d04 <gen_msg_abbrev>
    9bb0:	mov	r1, r4
    9bb4:	bl	3244 <sf_gen_or>
    9bb8:	mov	r0, #45	; 0x2d
    9bbc:	bl	9d04 <gen_msg_abbrev>
    9bc0:	mov	r1, r4
    9bc4:	bl	3244 <sf_gen_or>
    9bc8:	mov	r0, #46	; 0x2e
    9bcc:	bl	9d04 <gen_msg_abbrev>
    9bd0:	mov	r1, r4
    9bd4:	bl	3244 <sf_gen_or>
    9bd8:	mov	r0, #26
    9bdc:	b	9cb4 <sf_gen_atmmulti_abbrev+0x190>
    9be0:	cmp	r0, #29
    9be4:	bne	9cc8 <sf_gen_atmmulti_abbrev+0x1a4>
    9be8:	ldrb	r0, [r1]
    9bec:	cmp	r0, #0
    9bf0:	beq	9cd8 <sf_gen_atmmulti_abbrev+0x1b4>
    9bf4:	mov	r0, #52	; 0x34
    9bf8:	mov	r1, #3
    9bfc:	mov	r2, #16
    9c00:	mov	r3, #0
    9c04:	bl	9280 <sf_gen_atmfield_code>
    9c08:	mov	r5, r0
    9c0c:	mov	r0, #52	; 0x34
    9c10:	mov	r1, #4
    9c14:	mov	r2, #16
    9c18:	mov	r3, #0
    9c1c:	bl	9280 <sf_gen_atmfield_code>
    9c20:	mov	r4, r0
    9c24:	mov	r0, r5
    9c28:	mov	r1, r4
    9c2c:	bl	3244 <sf_gen_or>
    9c30:	mov	r0, #51	; 0x33
    9c34:	mov	r1, #0
    9c38:	mov	r2, #16
    9c3c:	mov	r3, #0
    9c40:	bl	9280 <sf_gen_atmfield_code>
    9c44:	b	9cb8 <sf_gen_atmmulti_abbrev+0x194>
    9c48:	cmp	r0, #71	; 0x47
    9c4c:	bne	9cc8 <sf_gen_atmmulti_abbrev+0x1a4>
    9c50:	ldrb	r0, [r1]
    9c54:	cmp	r0, #0
    9c58:	beq	9ce4 <sf_gen_atmmulti_abbrev+0x1c0>
    9c5c:	mov	r0, #41	; 0x29
    9c60:	bl	9d04 <gen_msg_abbrev>
    9c64:	mov	r5, r0
    9c68:	mov	r0, #42	; 0x2a
    9c6c:	bl	9d04 <gen_msg_abbrev>
    9c70:	mov	r4, r0
    9c74:	mov	r0, r5
    9c78:	mov	r1, r4
    9c7c:	bl	3244 <sf_gen_or>
    9c80:	mov	r0, #43	; 0x2b
    9c84:	bl	9d04 <gen_msg_abbrev>
    9c88:	mov	r1, r4
    9c8c:	bl	3244 <sf_gen_or>
    9c90:	mov	r0, #45	; 0x2d
    9c94:	bl	9d04 <gen_msg_abbrev>
    9c98:	mov	r1, r4
    9c9c:	bl	3244 <sf_gen_or>
    9ca0:	mov	r0, #46	; 0x2e
    9ca4:	bl	9d04 <gen_msg_abbrev>
    9ca8:	mov	r1, r4
    9cac:	bl	3244 <sf_gen_or>
    9cb0:	mov	r0, #22
    9cb4:	bl	9490 <sf_gen_atmtype_abbrev>
    9cb8:	mov	r1, r4
    9cbc:	bl	316c <sf_gen_and>
    9cc0:	mov	r0, r4
    9cc4:	pop	{r4, r5, fp, pc}
    9cc8:	bl	fc4 <abort@plt>
    9ccc:	ldr	r0, [pc, #40]	; 9cfc <sf_gen_atmmulti_abbrev+0x1d8>
    9cd0:	add	r0, pc, r0
    9cd4:	bl	1fc4 <sf_bpf_error>
    9cd8:	ldr	r0, [pc, #24]	; 9cf8 <sf_gen_atmmulti_abbrev+0x1d4>
    9cdc:	add	r0, pc, r0
    9ce0:	bl	1fc4 <sf_bpf_error>
    9ce4:	ldr	r0, [pc, #20]	; 9d00 <sf_gen_atmmulti_abbrev+0x1dc>
    9ce8:	add	r0, pc, r0
    9cec:	bl	1fc4 <sf_bpf_error>
    9cf0:	.word	0x00026a94
    9cf4:	.word	0x000093c3
    9cf8:	.word	0x0000925f
    9cfc:	.word	0x0000928d
    9d00:	.word	0x0000929c

00009d04 <gen_msg_abbrev>:
    9d04:	push	{fp, lr}
    9d08:	mov	fp, sp
    9d0c:	sub	r0, r0, #41	; 0x29
    9d10:	cmp	r0, #6
    9d14:	bcs	9d38 <gen_msg_abbrev+0x34>
    9d18:	ldr	r1, [pc, #28]	; 9d3c <gen_msg_abbrev+0x38>
    9d1c:	add	r1, pc, r1
    9d20:	ldr	r1, [r1, r0, lsl #2]
    9d24:	mov	r0, #54	; 0x36
    9d28:	mov	r2, #16
    9d2c:	mov	r3, #0
    9d30:	pop	{fp, lr}
    9d34:	b	9280 <sf_gen_atmfield_code>
    9d38:	bl	fc4 <abort@plt>
    9d3c:	.word	0x00009d34

00009d40 <gen_load_prism_llprefixlen>:
    9d40:	push	{r4, r5, r6, r7, fp, lr}
    9d44:	add	fp, sp, #16
    9d48:	ldr	r0, [pc, #292]	; 9e74 <gen_load_prism_llprefixlen+0x134>
    9d4c:	add	r0, pc, r0
    9d50:	mov	r7, #1
    9d54:	str	r7, [r0]
    9d58:	ldr	r0, [pc, #280]	; 9e78 <gen_load_prism_llprefixlen+0x138>
    9d5c:	ldr	r0, [pc, r0]
    9d60:	cmn	r0, #1
    9d64:	beq	9e68 <gen_load_prism_llprefixlen+0x128>
    9d68:	mov	r0, #32
    9d6c:	bl	79c0 <new_stmt>
    9d70:	mov	r4, r0
    9d74:	mov	r0, #0
    9d78:	str	r0, [r4, #12]
    9d7c:	mov	r0, #84	; 0x54
    9d80:	bl	79c0 <new_stmt>
    9d84:	mov	r1, r0
    9d88:	movw	r0, #61440	; 0xf000
    9d8c:	movt	r0, #65535	; 0xffff
    9d90:	str	r0, [r1, #12]
    9d94:	mov	r0, r4
    9d98:	bl	7544 <sf_append>
    9d9c:	mov	r0, #21
    9da0:	bl	79c0 <new_stmt>
    9da4:	mov	r5, r0
    9da8:	movw	r0, #4096	; 0x1000
    9dac:	movt	r0, #32801	; 0x8021
    9db0:	str	r0, [r5, #12]
    9db4:	mov	r0, r4
    9db8:	mov	r1, r5
    9dbc:	bl	7544 <sf_append>
    9dc0:	mov	r0, #32
    9dc4:	bl	79c0 <new_stmt>
    9dc8:	mov	r6, r0
    9dcc:	mov	r0, #4
    9dd0:	str	r0, [r6, #12]
    9dd4:	mov	r0, r4
    9dd8:	mov	r1, r6
    9ddc:	bl	7544 <sf_append>
    9de0:	str	r6, [r5, #4]
    9de4:	mov	r0, #5
    9de8:	bl	79c0 <new_stmt>
    9dec:	mov	r6, r0
    9df0:	str	r7, [r0, #12]
    9df4:	mov	r0, r4
    9df8:	mov	r1, r6
    9dfc:	bl	7544 <sf_append>
    9e00:	mov	r0, #0
    9e04:	bl	79c0 <new_stmt>
    9e08:	mov	r7, r0
    9e0c:	mov	r0, #144	; 0x90
    9e10:	str	r0, [r7, #12]
    9e14:	mov	r0, r4
    9e18:	mov	r1, r7
    9e1c:	bl	7544 <sf_append>
    9e20:	str	r7, [r5, #8]
    9e24:	mov	r0, #2
    9e28:	bl	79c0 <new_stmt>
    9e2c:	mov	r5, r0
    9e30:	ldr	r0, [pc, #68]	; 9e7c <gen_load_prism_llprefixlen+0x13c>
    9e34:	ldr	r0, [pc, r0]
    9e38:	str	r0, [r5, #12]
    9e3c:	mov	r0, r4
    9e40:	mov	r1, r5
    9e44:	bl	7544 <sf_append>
    9e48:	str	r5, [r6, #8]
    9e4c:	mov	r0, #7
    9e50:	bl	79c0 <new_stmt>
    9e54:	mov	r1, r0
    9e58:	mov	r0, r4
    9e5c:	bl	7544 <sf_append>
    9e60:	mov	r0, r4
    9e64:	pop	{r4, r5, r6, r7, fp, pc}
    9e68:	mov	r4, #0
    9e6c:	mov	r0, r4
    9e70:	pop	{r4, r5, r6, r7, fp, pc}
    9e74:	.word	0x00026dc8
    9e78:	.word	0x00026918
    9e7c:	.word	0x00026840

00009e80 <gen_load_avs_llprefixlen>:
    9e80:	push	{r4, sl, fp, lr}
    9e84:	add	fp, sp, #8
    9e88:	ldr	r0, [pc, #100]	; 9ef4 <gen_load_avs_llprefixlen+0x74>
    9e8c:	ldr	r0, [pc, r0]
    9e90:	cmn	r0, #1
    9e94:	beq	9ee8 <gen_load_avs_llprefixlen+0x68>
    9e98:	mov	r0, #32
    9e9c:	bl	79c0 <new_stmt>
    9ea0:	mov	r4, r0
    9ea4:	mov	r0, #4
    9ea8:	str	r0, [r4, #12]
    9eac:	mov	r0, #2
    9eb0:	bl	79c0 <new_stmt>
    9eb4:	mov	r1, r0
    9eb8:	ldr	r0, [pc, #56]	; 9ef8 <gen_load_avs_llprefixlen+0x78>
    9ebc:	ldr	r0, [pc, r0]
    9ec0:	str	r0, [r1, #12]
    9ec4:	mov	r0, r4
    9ec8:	bl	7544 <sf_append>
    9ecc:	mov	r0, #7
    9ed0:	bl	79c0 <new_stmt>
    9ed4:	mov	r1, r0
    9ed8:	mov	r0, r4
    9edc:	bl	7544 <sf_append>
    9ee0:	mov	r0, r4
    9ee4:	pop	{r4, sl, fp, pc}
    9ee8:	mov	r4, #0
    9eec:	mov	r0, r4
    9ef0:	pop	{r4, sl, fp, pc}
    9ef4:	.word	0x000267e8
    9ef8:	.word	0x000267b8

00009efc <gen_load_radiotap_llprefixlen>:
    9efc:	push	{r4, r5, fp, lr}
    9f00:	add	fp, sp, #8
    9f04:	ldr	r0, [pc, #204]	; 9fd8 <gen_load_radiotap_llprefixlen+0xdc>
    9f08:	ldr	r0, [pc, r0]
    9f0c:	cmn	r0, #1
    9f10:	beq	9fcc <gen_load_radiotap_llprefixlen+0xd0>
    9f14:	mov	r0, #48	; 0x30
    9f18:	bl	79c0 <new_stmt>
    9f1c:	mov	r4, r0
    9f20:	mov	r0, #3
    9f24:	str	r0, [r4, #12]
    9f28:	mov	r0, #100	; 0x64
    9f2c:	bl	79c0 <new_stmt>
    9f30:	mov	r5, r0
    9f34:	mov	r0, r4
    9f38:	mov	r1, r5
    9f3c:	bl	7544 <sf_append>
    9f40:	mov	r0, #8
    9f44:	str	r0, [r5, #12]
    9f48:	mov	r0, #7
    9f4c:	bl	79c0 <new_stmt>
    9f50:	mov	r1, r0
    9f54:	mov	r0, r4
    9f58:	bl	7544 <sf_append>
    9f5c:	mov	r0, #48	; 0x30
    9f60:	bl	79c0 <new_stmt>
    9f64:	mov	r5, r0
    9f68:	mov	r0, r4
    9f6c:	mov	r1, r5
    9f70:	bl	7544 <sf_append>
    9f74:	mov	r0, #2
    9f78:	str	r0, [r5, #12]
    9f7c:	mov	r0, #76	; 0x4c
    9f80:	bl	79c0 <new_stmt>
    9f84:	mov	r1, r0
    9f88:	mov	r0, r4
    9f8c:	bl	7544 <sf_append>
    9f90:	mov	r0, #2
    9f94:	bl	79c0 <new_stmt>
    9f98:	mov	r1, r0
    9f9c:	ldr	r0, [pc, #56]	; 9fdc <gen_load_radiotap_llprefixlen+0xe0>
    9fa0:	ldr	r0, [pc, r0]
    9fa4:	str	r0, [r1, #12]
    9fa8:	mov	r0, r4
    9fac:	bl	7544 <sf_append>
    9fb0:	mov	r0, #7
    9fb4:	bl	79c0 <new_stmt>
    9fb8:	mov	r1, r0
    9fbc:	mov	r0, r4
    9fc0:	bl	7544 <sf_append>
    9fc4:	mov	r0, r4
    9fc8:	pop	{r4, r5, fp, pc}
    9fcc:	mov	r4, #0
    9fd0:	mov	r0, r4
    9fd4:	pop	{r4, r5, fp, pc}
    9fd8:	.word	0x0002676c
    9fdc:	.word	0x000266d4

00009fe0 <gen_load_ppi_llprefixlen>:
    9fe0:	push	{r4, r5, fp, lr}
    9fe4:	add	fp, sp, #8
    9fe8:	ldr	r0, [pc, #204]	; a0bc <gen_load_ppi_llprefixlen+0xdc>
    9fec:	ldr	r0, [pc, r0]
    9ff0:	cmn	r0, #1
    9ff4:	beq	a0b0 <gen_load_ppi_llprefixlen+0xd0>
    9ff8:	mov	r0, #48	; 0x30
    9ffc:	bl	79c0 <new_stmt>
    a000:	mov	r4, r0
    a004:	mov	r0, #3
    a008:	str	r0, [r4, #12]
    a00c:	mov	r0, #100	; 0x64
    a010:	bl	79c0 <new_stmt>
    a014:	mov	r5, r0
    a018:	mov	r0, r4
    a01c:	mov	r1, r5
    a020:	bl	7544 <sf_append>
    a024:	mov	r0, #8
    a028:	str	r0, [r5, #12]
    a02c:	mov	r0, #7
    a030:	bl	79c0 <new_stmt>
    a034:	mov	r1, r0
    a038:	mov	r0, r4
    a03c:	bl	7544 <sf_append>
    a040:	mov	r0, #48	; 0x30
    a044:	bl	79c0 <new_stmt>
    a048:	mov	r5, r0
    a04c:	mov	r0, r4
    a050:	mov	r1, r5
    a054:	bl	7544 <sf_append>
    a058:	mov	r0, #2
    a05c:	str	r0, [r5, #12]
    a060:	mov	r0, #76	; 0x4c
    a064:	bl	79c0 <new_stmt>
    a068:	mov	r1, r0
    a06c:	mov	r0, r4
    a070:	bl	7544 <sf_append>
    a074:	mov	r0, #2
    a078:	bl	79c0 <new_stmt>
    a07c:	mov	r1, r0
    a080:	ldr	r0, [pc, #56]	; a0c0 <gen_load_ppi_llprefixlen+0xe0>
    a084:	ldr	r0, [pc, r0]
    a088:	str	r0, [r1, #12]
    a08c:	mov	r0, r4
    a090:	bl	7544 <sf_append>
    a094:	mov	r0, #7
    a098:	bl	79c0 <new_stmt>
    a09c:	mov	r1, r0
    a0a0:	mov	r0, r4
    a0a4:	bl	7544 <sf_append>
    a0a8:	mov	r0, r4
    a0ac:	pop	{r4, r5, fp, pc}
    a0b0:	mov	r4, #0
    a0b4:	mov	r0, r4
    a0b8:	pop	{r4, r5, fp, pc}
    a0bc:	.word	0x00026688
    a0c0:	.word	0x000265f0

0000a0c4 <gen_load_802_11_header_len>:
    a0c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a0c8:	add	fp, sp, #28
    a0cc:	sub	sp, sp, #4
    a0d0:	mov	r5, r0
    a0d4:	ldr	r0, [pc, #760]	; a3d4 <gen_load_802_11_header_len+0x310>
    a0d8:	ldr	r0, [pc, r0]
    a0dc:	cmn	r0, #1
    a0e0:	beq	a3c8 <gen_load_802_11_header_len+0x304>
    a0e4:	mov	r8, r1
    a0e8:	ldr	r0, [pc, #744]	; a3d8 <gen_load_802_11_header_len+0x314>
    a0ec:	add	r0, pc, r0
    a0f0:	mov	r1, #1
    a0f4:	str	r1, [r0]
    a0f8:	cmp	r5, #0
    a0fc:	bne	a114 <gen_load_802_11_header_len+0x50>
    a100:	mov	r0, #1
    a104:	bl	79c0 <new_stmt>
    a108:	mov	r5, r0
    a10c:	mov	r0, #0
    a110:	str	r0, [r5, #12]
    a114:	mov	r0, #135	; 0x87
    a118:	bl	79c0 <new_stmt>
    a11c:	mov	r1, r0
    a120:	mov	r0, r5
    a124:	bl	7544 <sf_append>
    a128:	mov	sl, #4
    a12c:	mov	r0, #4
    a130:	bl	79c0 <new_stmt>
    a134:	mov	r1, r0
    a138:	mov	r0, #24
    a13c:	str	r0, [r1, #12]
    a140:	mov	r0, r5
    a144:	bl	7544 <sf_append>
    a148:	mov	r9, #2
    a14c:	mov	r0, #2
    a150:	bl	79c0 <new_stmt>
    a154:	mov	r1, r0
    a158:	ldr	r0, [pc, #636]	; a3dc <gen_load_802_11_header_len+0x318>
    a15c:	ldr	r0, [pc, r0]
    a160:	str	r0, [r1, #12]
    a164:	mov	r0, r5
    a168:	bl	7544 <sf_append>
    a16c:	mov	r0, #80	; 0x50
    a170:	bl	79c0 <new_stmt>
    a174:	mov	r1, r0
    a178:	mov	r0, #0
    a17c:	str	r0, [r1, #12]
    a180:	mov	r0, r5
    a184:	bl	7544 <sf_append>
    a188:	mov	r0, #69	; 0x45
    a18c:	bl	79c0 <new_stmt>
    a190:	mov	r4, r0
    a194:	mov	r0, #8
    a198:	str	r0, [r4, #12]
    a19c:	mov	r0, r5
    a1a0:	mov	r1, r4
    a1a4:	bl	7544 <sf_append>
    a1a8:	mov	r0, #69	; 0x45
    a1ac:	bl	79c0 <new_stmt>
    a1b0:	mov	r7, r0
    a1b4:	str	r0, [r4, #4]
    a1b8:	str	sl, [r0, #12]
    a1bc:	mov	r0, r5
    a1c0:	mov	r1, r7
    a1c4:	bl	7544 <sf_append>
    a1c8:	str	r8, [r4, #8]
    a1cc:	str	r8, [r7, #4]
    a1d0:	mov	r0, #69	; 0x45
    a1d4:	bl	79c0 <new_stmt>
    a1d8:	mov	r6, r0
    a1dc:	str	r0, [r7, #8]
    a1e0:	mov	r0, #128	; 0x80
    a1e4:	str	r0, [r6, #12]
    a1e8:	mov	r0, r5
    a1ec:	mov	r1, r6
    a1f0:	bl	7544 <sf_append>
    a1f4:	mov	r0, #96	; 0x60
    a1f8:	bl	79c0 <new_stmt>
    a1fc:	mov	r1, r0
    a200:	str	r0, [r6, #4]
    a204:	ldr	r0, [pc, #468]	; a3e0 <gen_load_802_11_header_len+0x31c>
    a208:	ldr	r0, [pc, r0]
    a20c:	str	r0, [r1, #12]
    a210:	mov	r0, r5
    a214:	bl	7544 <sf_append>
    a218:	mov	r0, #4
    a21c:	bl	79c0 <new_stmt>
    a220:	mov	r1, r0
    a224:	str	r9, [r0, #12]
    a228:	mov	r0, r5
    a22c:	bl	7544 <sf_append>
    a230:	mov	r0, #2
    a234:	bl	79c0 <new_stmt>
    a238:	mov	r1, r0
    a23c:	ldr	r0, [pc, #416]	; a3e4 <gen_load_802_11_header_len+0x320>
    a240:	ldr	r0, [pc, r0]
    a244:	str	r0, [r1, #12]
    a248:	mov	r0, r5
    a24c:	bl	7544 <sf_append>
    a250:	ldr	r0, [pc, #400]	; a3e8 <gen_load_802_11_header_len+0x324>
    a254:	ldr	r0, [pc, r0]
    a258:	cmp	r0, #127	; 0x7f
    a25c:	bne	a3c4 <gen_load_802_11_header_len+0x300>
    a260:	mov	r9, #32
    a264:	mov	r0, #32
    a268:	bl	79c0 <new_stmt>
    a26c:	mov	r1, r0
    a270:	str	r0, [r6, #8]
    a274:	str	sl, [r0, #12]
    a278:	mov	r0, r5
    a27c:	bl	7544 <sf_append>
    a280:	mov	r0, #69	; 0x45
    a284:	bl	79c0 <new_stmt>
    a288:	mov	r6, r0
    a28c:	mov	r0, #33554432	; 0x2000000
    a290:	str	r0, [r6, #12]
    a294:	mov	r0, r5
    a298:	mov	r1, r6
    a29c:	bl	7544 <sf_append>
    a2a0:	str	r8, [r6, #8]
    a2a4:	mov	r0, #69	; 0x45
    a2a8:	bl	79c0 <new_stmt>
    a2ac:	mov	r4, r0
    a2b0:	str	r0, [r6, #4]
    a2b4:	mov	r0, #16777216	; 0x1000000
    a2b8:	str	r0, [r4, #12]
    a2bc:	mov	r0, r5
    a2c0:	mov	r1, r4
    a2c4:	bl	7544 <sf_append>
    a2c8:	mov	r0, #48	; 0x30
    a2cc:	bl	79c0 <new_stmt>
    a2d0:	mov	r1, r0
    a2d4:	str	r0, [r4, #4]
    a2d8:	mov	r0, #16
    a2dc:	str	r0, [r1, #12]
    a2e0:	mov	r0, r5
    a2e4:	bl	7544 <sf_append>
    a2e8:	mov	r0, #69	; 0x45
    a2ec:	bl	79c0 <new_stmt>
    a2f0:	mov	r7, r0
    a2f4:	str	r9, [r0, #12]
    a2f8:	mov	r0, r5
    a2fc:	mov	r1, r7
    a300:	bl	7544 <sf_append>
    a304:	mov	r0, #48	; 0x30
    a308:	bl	79c0 <new_stmt>
    a30c:	mov	r1, r0
    a310:	str	r0, [r4, #8]
    a314:	mov	r0, #8
    a318:	str	r0, [r1, #12]
    a31c:	mov	r0, r5
    a320:	bl	7544 <sf_append>
    a324:	mov	r0, #69	; 0x45
    a328:	bl	79c0 <new_stmt>
    a32c:	mov	r6, r0
    a330:	str	r9, [r0, #12]
    a334:	mov	r0, r5
    a338:	mov	r1, r6
    a33c:	bl	7544 <sf_append>
    a340:	mov	r0, #96	; 0x60
    a344:	bl	79c0 <new_stmt>
    a348:	mov	r4, r0
    a34c:	ldr	r0, [pc, #152]	; a3ec <gen_load_802_11_header_len+0x328>
    a350:	ldr	r0, [pc, r0]
    a354:	str	r0, [r4, #12]
    a358:	mov	r0, r5
    a35c:	mov	r1, r4
    a360:	bl	7544 <sf_append>
    a364:	mov	r0, #4
    a368:	bl	79c0 <new_stmt>
    a36c:	mov	r1, r0
    a370:	mov	r0, #3
    a374:	str	r0, [r1, #12]
    a378:	mov	r0, r5
    a37c:	bl	7544 <sf_append>
    a380:	mov	r0, #84	; 0x54
    a384:	bl	79c0 <new_stmt>
    a388:	mov	r1, r0
    a38c:	mvn	r0, #3
    a390:	str	r0, [r1, #12]
    a394:	mov	r0, r5
    a398:	bl	7544 <sf_append>
    a39c:	mov	r0, #2
    a3a0:	bl	79c0 <new_stmt>
    a3a4:	mov	r1, r0
    a3a8:	ldr	r0, [pc, #64]	; a3f0 <gen_load_802_11_header_len+0x32c>
    a3ac:	ldr	r0, [pc, r0]
    a3b0:	str	r0, [r1, #12]
    a3b4:	mov	r0, r5
    a3b8:	bl	7544 <sf_append>
    a3bc:	stmib	r7, {r4, r8}
    a3c0:	str	r4, [r6, #4]
    a3c4:	str	r8, [r6, #8]
    a3c8:	mov	r0, r5
    a3cc:	sub	sp, fp, #28
    a3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a3d4:	.word	0x000265a0
    a3d8:	.word	0x00026a28
    a3dc:	.word	0x0002651c
    a3e0:	.word	0x00026470
    a3e4:	.word	0x00026438
    a3e8:	.word	0x0002634c
    a3ec:	.word	0x00026328
    a3f0:	.word	0x000262cc

0000a3f4 <gen_mpls_linktype>:
    a3f4:	push	{r4, r5, fp, lr}
    a3f8:	add	fp, sp, #8
    a3fc:	sub	sp, sp, #8
    a400:	cmp	r0, #17
    a404:	beq	a44c <gen_mpls_linktype+0x58>
    a408:	cmp	r0, #2
    a40c:	bne	a4a4 <gen_mpls_linktype+0xb0>
    a410:	mov	r0, #1
    a414:	str	r0, [sp]
    a418:	mov	r0, #3
    a41c:	mvn	r1, #1
    a420:	mov	r2, #16
    a424:	mov	r3, #1
    a428:	bl	83ec <gen_mcmp>
    a42c:	mov	r5, r0
    a430:	mov	r0, #240	; 0xf0
    a434:	str	r0, [sp]
    a438:	mov	r0, #3
    a43c:	mov	r1, #0
    a440:	mov	r2, #16
    a444:	mov	r3, #64	; 0x40
    a448:	b	a484 <gen_mpls_linktype+0x90>
    a44c:	mov	r0, #1
    a450:	str	r0, [sp]
    a454:	mov	r0, #3
    a458:	mvn	r1, #1
    a45c:	mov	r2, #16
    a460:	mov	r3, #1
    a464:	bl	83ec <gen_mcmp>
    a468:	mov	r5, r0
    a46c:	mov	r0, #240	; 0xf0
    a470:	str	r0, [sp]
    a474:	mov	r0, #3
    a478:	mov	r1, #0
    a47c:	mov	r2, #16
    a480:	mov	r3, #96	; 0x60
    a484:	bl	83ec <gen_mcmp>
    a488:	mov	r4, r0
    a48c:	mov	r0, r5
    a490:	mov	r1, r4
    a494:	bl	316c <sf_gen_and>
    a498:	mov	r0, r4
    a49c:	sub	sp, fp, #8
    a4a0:	pop	{r4, r5, fp, pc}
    a4a4:	bl	fc4 <abort@plt>

0000a4a8 <ethertype_to_ppptype>:
    a4a8:	cmp	r0, #2048	; 0x800
    a4ac:	bge	a4d0 <ethertype_to_ppptype+0x28>
    a4b0:	cmp	r0, #253	; 0xfd
    a4b4:	bgt	a4fc <ethertype_to_ppptype+0x54>
    a4b8:	cmp	r0, #66	; 0x42
    a4bc:	beq	a53c <ethertype_to_ppptype+0x94>
    a4c0:	cmp	r0, #224	; 0xe0
    a4c4:	moveq	r0, #43	; 0x2b
    a4c8:	bxeq	lr
    a4cc:	bx	lr
    a4d0:	movw	r1, #32922	; 0x809a
    a4d4:	cmp	r0, r1
    a4d8:	bgt	a518 <ethertype_to_ppptype+0x70>
    a4dc:	cmp	r0, #2048	; 0x800
    a4e0:	moveq	r0, #33	; 0x21
    a4e4:	bxeq	lr
    a4e8:	movw	r1, #24579	; 0x6003
    a4ec:	cmp	r0, r1
    a4f0:	moveq	r0, #39	; 0x27
    a4f4:	bxeq	lr
    a4f8:	bx	lr
    a4fc:	cmp	r0, #254	; 0xfe
    a500:	moveq	r0, #35	; 0x23
    a504:	bxeq	lr
    a508:	cmp	r0, #1536	; 0x600
    a50c:	moveq	r0, #37	; 0x25
    a510:	bxeq	lr
    a514:	bx	lr
    a518:	movw	r1, #32923	; 0x809b
    a51c:	cmp	r0, r1
    a520:	moveq	r0, #41	; 0x29
    a524:	bxeq	lr
    a528:	movw	r1, #34525	; 0x86dd
    a52c:	cmp	r0, r1
    a530:	moveq	r0, #87	; 0x57
    a534:	bxeq	lr
    a538:	bx	lr
    a53c:	mov	r0, #49	; 0x31
    a540:	bx	lr

0000a544 <gen_ether_linktype>:
    a544:	push	{r4, r5, r6, sl, fp, lr}
    a548:	add	fp, sp, #16
    a54c:	mov	r4, r0
    a550:	cmp	r0, #253	; 0xfd
    a554:	bgt	a5bc <gen_ether_linktype+0x78>
    a558:	cmp	r4, #6
    a55c:	beq	a570 <gen_ether_linktype+0x2c>
    a560:	cmp	r4, #224	; 0xe0
    a564:	beq	a690 <gen_ether_linktype+0x14c>
    a568:	cmp	r4, #240	; 0xf0
    a56c:	bne	a648 <gen_ether_linktype+0x104>
    a570:	ldr	r1, [pc, #472]	; a750 <gen_ether_linktype+0x20c>
    a574:	ldr	r1, [pc, r1]
    a578:	mov	r0, #1
    a57c:	mov	r2, #8
    a580:	movw	r3, #1500	; 0x5dc
    a584:	bl	7fd8 <gen_cmp_gt>
    a588:	mov	r6, r0
    a58c:	bl	3298 <sf_gen_not>
    a590:	orr	r3, r4, r4, lsl #8
    a594:	mov	r0, #2
    a598:	mov	r1, #0
    a59c:	mov	r2, #8
    a5a0:	bl	4528 <gen_cmp>
    a5a4:	mov	r5, r0
    a5a8:	mov	r0, r6
    a5ac:	mov	r1, r5
    a5b0:	bl	316c <sf_gen_and>
    a5b4:	mov	r0, r5
    a5b8:	pop	{r4, r5, r6, sl, fp, pc}
    a5bc:	movw	r0, #33011	; 0x80f3
    a5c0:	cmp	r4, r0
    a5c4:	movwne	r0, #32923	; 0x809b
    a5c8:	cmpne	r4, r0
    a5cc:	bne	a640 <gen_ether_linktype+0xfc>
    a5d0:	ldr	r1, [pc, #388]	; a75c <gen_ether_linktype+0x218>
    a5d4:	ldr	r1, [pc, r1]
    a5d8:	mov	r0, #1
    a5dc:	mov	r2, #8
    a5e0:	movw	r3, #1500	; 0x5dc
    a5e4:	bl	7fd8 <gen_cmp_gt>
    a5e8:	mov	r6, r0
    a5ec:	bl	3298 <sf_gen_not>
    a5f0:	movw	r0, #32923	; 0x809b
    a5f4:	cmp	r4, r0
    a5f8:	bne	a60c <gen_ether_linktype+0xc8>
    a5fc:	movw	r0, #7
    a600:	movt	r0, #8
    a604:	movw	r1, #32923	; 0x809b
    a608:	b	a614 <gen_ether_linktype+0xd0>
    a60c:	mov	r0, #0
    a610:	movw	r1, #33011	; 0x80f3
    a614:	bl	aae0 <gen_snap>
    a618:	mov	r5, r0
    a61c:	mov	r0, r6
    a620:	mov	r1, r5
    a624:	bl	316c <sf_gen_and>
    a628:	ldr	r1, [pc, #304]	; a760 <gen_ether_linktype+0x21c>
    a62c:	ldr	r1, [pc, r1]
    a630:	mov	r0, #1
    a634:	mov	r2, #8
    a638:	mov	r3, r4
    a63c:	b	a720 <gen_ether_linktype+0x1dc>
    a640:	cmp	r4, #254	; 0xfe
    a644:	beq	a570 <gen_ether_linktype+0x2c>
    a648:	ldr	r1, [pc, #248]	; a748 <gen_ether_linktype+0x204>
    a64c:	ldr	r1, [pc, r1]
    a650:	movw	r0, #1500	; 0x5dc
    a654:	cmp	r4, r0
    a658:	bgt	a734 <gen_ether_linktype+0x1f0>
    a65c:	mov	r0, #1
    a660:	mov	r2, #8
    a664:	movw	r3, #1500	; 0x5dc
    a668:	bl	7fd8 <gen_cmp_gt>
    a66c:	mov	r6, r0
    a670:	bl	3298 <sf_gen_not>
    a674:	ldr	r0, [pc, #208]	; a74c <gen_ether_linktype+0x208>
    a678:	ldr	r0, [pc, r0]
    a67c:	add	r1, r0, #2
    a680:	mov	r0, #1
    a684:	mov	r2, #16
    a688:	mov	r3, r4
    a68c:	b	a5a0 <gen_ether_linktype+0x5c>
    a690:	mov	r0, #2
    a694:	mov	r1, #0
    a698:	mov	r2, #16
    a69c:	mov	r3, #224	; 0xe0
    a6a0:	bl	4528 <gen_cmp>
    a6a4:	mov	r4, r0
    a6a8:	mov	r0, #2
    a6ac:	mov	r1, #0
    a6b0:	mov	r2, #8
    a6b4:	movw	r3, #65535	; 0xffff
    a6b8:	bl	4528 <gen_cmp>
    a6bc:	mov	r5, r0
    a6c0:	mov	r0, r4
    a6c4:	mov	r1, r5
    a6c8:	bl	3244 <sf_gen_or>
    a6cc:	mov	r0, #0
    a6d0:	movw	r1, #33079	; 0x8137
    a6d4:	bl	aae0 <gen_snap>
    a6d8:	mov	r1, r5
    a6dc:	bl	3244 <sf_gen_or>
    a6e0:	ldr	r1, [pc, #108]	; a754 <gen_ether_linktype+0x210>
    a6e4:	ldr	r1, [pc, r1]
    a6e8:	mov	r0, #1
    a6ec:	mov	r2, #8
    a6f0:	movw	r3, #1500	; 0x5dc
    a6f4:	bl	7fd8 <gen_cmp_gt>
    a6f8:	mov	r4, r0
    a6fc:	bl	3298 <sf_gen_not>
    a700:	mov	r0, r4
    a704:	mov	r1, r5
    a708:	bl	316c <sf_gen_and>
    a70c:	ldr	r1, [pc, #68]	; a758 <gen_ether_linktype+0x214>
    a710:	ldr	r1, [pc, r1]
    a714:	mov	r0, #1
    a718:	mov	r2, #8
    a71c:	movw	r3, #33079	; 0x8137
    a720:	bl	4528 <gen_cmp>
    a724:	mov	r1, r5
    a728:	bl	3244 <sf_gen_or>
    a72c:	mov	r0, r5
    a730:	pop	{r4, r5, r6, sl, fp, pc}
    a734:	mov	r0, #1
    a738:	mov	r2, #8
    a73c:	mov	r3, r4
    a740:	pop	{r4, r5, r6, sl, fp, lr}
    a744:	b	4528 <gen_cmp>
    a748:	.word	0x00025f5c
    a74c:	.word	0x00025f30
    a750:	.word	0x00026034
    a754:	.word	0x00025ec4
    a758:	.word	0x00025e98
    a75c:	.word	0x00025fd4
    a760:	.word	0x00025f7c

0000a764 <gen_check_802_11_data_frame>:
    a764:	push	{r4, r5, r6, sl, fp, lr}
    a768:	add	fp, sp, #16
    a76c:	mov	r0, #1
    a770:	mov	r1, #0
    a774:	mov	r2, #16
    a778:	bl	8800 <gen_load_a>
    a77c:	mov	r4, r0
    a780:	mov	r0, #69	; 0x45
    a784:	bl	7c8c <new_block>
    a788:	mov	r5, r0
    a78c:	mov	r0, #8
    a790:	str	r0, [r5, #20]
    a794:	str	r4, [r5, #4]
    a798:	mov	r0, #1
    a79c:	mov	r1, #0
    a7a0:	mov	r2, #16
    a7a4:	bl	8800 <gen_load_a>
    a7a8:	mov	r4, r0
    a7ac:	mov	r0, #69	; 0x45
    a7b0:	bl	7c8c <new_block>
    a7b4:	mov	r6, r0
    a7b8:	mov	r0, #4
    a7bc:	str	r0, [r6, #20]
    a7c0:	str	r4, [r6, #4]
    a7c4:	mov	r0, r6
    a7c8:	bl	3298 <sf_gen_not>
    a7cc:	mov	r0, r6
    a7d0:	mov	r1, r5
    a7d4:	bl	316c <sf_gen_and>
    a7d8:	mov	r0, r5
    a7dc:	pop	{r4, r5, r6, sl, fp, pc}

0000a7e0 <gen_llc_linktype>:
    a7e0:	mov	r3, r0
    a7e4:	cmp	r0, #239	; 0xef
    a7e8:	ble	a80c <gen_llc_linktype+0x2c>
    a7ec:	cmp	r3, #240	; 0xf0
    a7f0:	beq	a830 <gen_llc_linktype+0x50>
    a7f4:	movw	r0, #32923	; 0x809b
    a7f8:	cmp	r3, r0
    a7fc:	beq	a844 <gen_llc_linktype+0x64>
    a800:	cmp	r3, #254	; 0xfe
    a804:	beq	a830 <gen_llc_linktype+0x50>
    a808:	b	a854 <gen_llc_linktype+0x74>
    a80c:	cmp	r3, #6
    a810:	beq	a830 <gen_llc_linktype+0x50>
    a814:	cmp	r3, #224	; 0xe0
    a818:	bne	a854 <gen_llc_linktype+0x74>
    a81c:	mov	r0, #2
    a820:	mov	r1, #0
    a824:	mov	r2, #16
    a828:	mov	r3, #224	; 0xe0
    a82c:	b	4528 <gen_cmp>
    a830:	orr	r3, r3, r3, lsl #8
    a834:	mov	r0, #2
    a838:	mov	r1, #0
    a83c:	mov	r2, #8
    a840:	b	4528 <gen_cmp>
    a844:	movw	r0, #7
    a848:	movt	r0, #8
    a84c:	movw	r1, #32923	; 0x809b
    a850:	b	aae0 <gen_snap>
    a854:	movw	r0, #1500	; 0x5dc
    a858:	cmp	r3, r0
    a85c:	mov	r0, #2
    a860:	movgt	r1, #6
    a864:	movgt	r2, #8
    a868:	movle	r1, #0
    a86c:	movle	r2, #16
    a870:	b	4528 <gen_cmp>

0000a874 <gen_linux_sll_linktype>:
    a874:	push	{r4, r5, r6, sl, fp, lr}
    a878:	add	fp, sp, #16
    a87c:	mov	r4, r0
    a880:	cmp	r0, #253	; 0xfd
    a884:	bgt	a8e8 <gen_linux_sll_linktype+0x74>
    a888:	cmp	r4, #6
    a88c:	beq	a8a0 <gen_linux_sll_linktype+0x2c>
    a890:	cmp	r4, #224	; 0xe0
    a894:	beq	a9b0 <gen_linux_sll_linktype+0x13c>
    a898:	cmp	r4, #240	; 0xf0
    a89c:	bne	a970 <gen_linux_sll_linktype+0xfc>
    a8a0:	ldr	r1, [pc, #448]	; aa68 <gen_linux_sll_linktype+0x1f4>
    a8a4:	ldr	r1, [pc, r1]
    a8a8:	mov	r0, #1
    a8ac:	mov	r2, #8
    a8b0:	mov	r3, #4
    a8b4:	bl	4528 <gen_cmp>
    a8b8:	mov	r6, r0
    a8bc:	orr	r3, r4, r4, lsl #8
    a8c0:	mov	r0, #2
    a8c4:	mov	r1, #0
    a8c8:	mov	r2, #8
    a8cc:	bl	4528 <gen_cmp>
    a8d0:	mov	r5, r0
    a8d4:	mov	r0, r6
    a8d8:	mov	r1, r5
    a8dc:	bl	316c <sf_gen_and>
    a8e0:	mov	r0, r5
    a8e4:	pop	{r4, r5, r6, sl, fp, pc}
    a8e8:	movw	r0, #33011	; 0x80f3
    a8ec:	cmp	r4, r0
    a8f0:	movwne	r0, #32923	; 0x809b
    a8f4:	cmpne	r4, r0
    a8f8:	bne	a968 <gen_linux_sll_linktype+0xf4>
    a8fc:	ldr	r1, [pc, #372]	; aa78 <gen_linux_sll_linktype+0x204>
    a900:	ldr	r1, [pc, r1]
    a904:	mov	r0, #1
    a908:	mov	r2, #8
    a90c:	mov	r3, #4
    a910:	bl	4528 <gen_cmp>
    a914:	mov	r6, r0
    a918:	movw	r0, #32923	; 0x809b
    a91c:	cmp	r4, r0
    a920:	bne	a934 <gen_linux_sll_linktype+0xc0>
    a924:	movw	r0, #7
    a928:	movt	r0, #8
    a92c:	movw	r1, #32923	; 0x809b
    a930:	b	a93c <gen_linux_sll_linktype+0xc8>
    a934:	mov	r0, #0
    a938:	movw	r1, #33011	; 0x80f3
    a93c:	bl	aae0 <gen_snap>
    a940:	mov	r5, r0
    a944:	mov	r0, r6
    a948:	mov	r1, r5
    a94c:	bl	316c <sf_gen_and>
    a950:	ldr	r1, [pc, #292]	; aa7c <gen_linux_sll_linktype+0x208>
    a954:	ldr	r1, [pc, r1]
    a958:	mov	r0, #1
    a95c:	mov	r2, #8
    a960:	mov	r3, r4
    a964:	b	aa38 <gen_linux_sll_linktype+0x1c4>
    a968:	cmp	r4, #254	; 0xfe
    a96c:	beq	a8a0 <gen_linux_sll_linktype+0x2c>
    a970:	ldr	r1, [pc, #232]	; aa60 <gen_linux_sll_linktype+0x1ec>
    a974:	ldr	r1, [pc, r1]
    a978:	movw	r0, #1500	; 0x5dc
    a97c:	cmp	r4, r0
    a980:	bgt	aa4c <gen_linux_sll_linktype+0x1d8>
    a984:	mov	r0, #1
    a988:	mov	r2, #8
    a98c:	mov	r3, #4
    a990:	bl	4528 <gen_cmp>
    a994:	mov	r6, r0
    a998:	ldr	r1, [pc, #196]	; aa64 <gen_linux_sll_linktype+0x1f0>
    a99c:	ldr	r1, [pc, r1]
    a9a0:	mov	r0, #1
    a9a4:	mov	r2, #16
    a9a8:	mov	r3, r4
    a9ac:	b	a8cc <gen_linux_sll_linktype+0x58>
    a9b0:	mov	r0, #2
    a9b4:	mov	r1, #0
    a9b8:	mov	r2, #16
    a9bc:	mov	r3, #224	; 0xe0
    a9c0:	bl	4528 <gen_cmp>
    a9c4:	mov	r4, r0
    a9c8:	mov	r0, #0
    a9cc:	movw	r1, #33079	; 0x8137
    a9d0:	bl	aae0 <gen_snap>
    a9d4:	mov	r5, r0
    a9d8:	mov	r0, r4
    a9dc:	mov	r1, r5
    a9e0:	bl	3244 <sf_gen_or>
    a9e4:	ldr	r1, [pc, #128]	; aa6c <gen_linux_sll_linktype+0x1f8>
    a9e8:	ldr	r1, [pc, r1]
    a9ec:	mov	r0, #1
    a9f0:	mov	r2, #8
    a9f4:	mov	r3, #4
    a9f8:	bl	4528 <gen_cmp>
    a9fc:	mov	r1, r5
    aa00:	bl	316c <sf_gen_and>
    aa04:	ldr	r1, [pc, #100]	; aa70 <gen_linux_sll_linktype+0x1fc>
    aa08:	ldr	r1, [pc, r1]
    aa0c:	mov	r0, #1
    aa10:	mov	r2, #8
    aa14:	mov	r3, #1
    aa18:	bl	4528 <gen_cmp>
    aa1c:	mov	r1, r5
    aa20:	bl	3244 <sf_gen_or>
    aa24:	ldr	r1, [pc, #72]	; aa74 <gen_linux_sll_linktype+0x200>
    aa28:	ldr	r1, [pc, r1]
    aa2c:	mov	r0, #1
    aa30:	mov	r2, #8
    aa34:	movw	r3, #33079	; 0x8137
    aa38:	bl	4528 <gen_cmp>
    aa3c:	mov	r1, r5
    aa40:	bl	3244 <sf_gen_or>
    aa44:	mov	r0, r5
    aa48:	pop	{r4, r5, r6, sl, fp, pc}
    aa4c:	mov	r0, #1
    aa50:	mov	r2, #8
    aa54:	mov	r3, r4
    aa58:	pop	{r4, r5, r6, sl, fp, lr}
    aa5c:	b	4528 <gen_cmp>
    aa60:	.word	0x00025c34
    aa64:	.word	0x00025c10
    aa68:	.word	0x00025d04
    aa6c:	.word	0x00025bc0
    aa70:	.word	0x00025ba0
    aa74:	.word	0x00025b80
    aa78:	.word	0x00025ca8
    aa7c:	.word	0x00025c54

0000aa80 <gen_false>:
    aa80:	mov	r0, #0
    aa84:	b	ac5c <gen_uncond>

0000aa88 <gen_true>:
    aa88:	mov	r0, #1
    aa8c:	b	ac5c <gen_uncond>

0000aa90 <gen_ipnet_linktype>:
    aa90:	movw	r1, #34525	; 0x86dd
    aa94:	cmp	r0, r1
    aa98:	beq	aabc <gen_ipnet_linktype+0x2c>
    aa9c:	cmp	r0, #2048	; 0x800
    aaa0:	bne	aad4 <gen_ipnet_linktype+0x44>
    aaa4:	ldr	r1, [pc, #44]	; aad8 <gen_ipnet_linktype+0x48>
    aaa8:	ldr	r1, [pc, r1]
    aaac:	mov	r0, #1
    aab0:	mov	r2, #16
    aab4:	mov	r3, #2
    aab8:	b	4528 <gen_cmp>
    aabc:	ldr	r1, [pc, #24]	; aadc <gen_ipnet_linktype+0x4c>
    aac0:	ldr	r1, [pc, r1]
    aac4:	mov	r0, #1
    aac8:	mov	r2, #16
    aacc:	mov	r3, #26
    aad0:	b	4528 <gen_cmp>
    aad4:	b	aa80 <gen_false>
    aad8:	.word	0x00025b00
    aadc:	.word	0x00025ae8

0000aae0 <gen_snap>:
    aae0:	push	{fp, lr}
    aae4:	mov	fp, sp
    aae8:	sub	sp, sp, #8
    aaec:	strb	r1, [sp, #7]
    aaf0:	strb	r0, [sp, #5]
    aaf4:	mov	r2, #3
    aaf8:	strb	r2, [sp, #2]
    aafc:	movw	r2, #43690	; 0xaaaa
    ab00:	strh	r2, [sp]
    ab04:	lsr	r1, r1, #8
    ab08:	strb	r1, [sp, #6]
    ab0c:	lsr	r1, r0, #8
    ab10:	strb	r1, [sp, #4]
    ab14:	lsr	r0, r0, #16
    ab18:	strb	r0, [sp, #3]
    ab1c:	mov	r3, sp
    ab20:	mov	r0, #2
    ab24:	mov	r1, #0
    ab28:	mov	r2, #8
    ab2c:	bl	ab38 <gen_bcmp>
    ab30:	mov	sp, fp
    ab34:	pop	{fp, pc}

0000ab38 <gen_bcmp>:
    ab38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ab3c:	add	fp, sp, #28
    ab40:	sub	sp, sp, #4
    ab44:	mov	r9, r3
    ab48:	mov	r7, r2
    ab4c:	mov	sl, r0
    ab50:	mov	r4, #0
    ab54:	cmp	r2, #4
    ab58:	str	r1, [sp]
    ab5c:	bcc	abac <gen_bcmp+0x74>
    ab60:	sub	r5, r9, #2
    ab64:	sub	r8, r1, #4
    ab68:	mov	r6, #0
    ab6c:	add	r1, r8, r7
    ab70:	add	r0, r5, r7
    ab74:	ldr	r0, [r0, #-2]
    ab78:	rev	r3, r0
    ab7c:	mov	r0, sl
    ab80:	mov	r2, #0
    ab84:	bl	4528 <gen_cmp>
    ab88:	mov	r4, r0
    ab8c:	sub	r7, r7, #4
    ab90:	cmp	r6, #0
    ab94:	movne	r0, r6
    ab98:	movne	r1, r4
    ab9c:	blne	316c <sf_gen_and>
    aba0:	cmp	r7, #3
    aba4:	mov	r6, r4
    aba8:	bhi	ab6c <gen_bcmp+0x34>
    abac:	cmp	r7, #2
    abb0:	bcc	ac18 <gen_bcmp+0xe0>
    abb4:	sub	r5, r7, #2
    abb8:	ldr	r8, [sp]
    abbc:	mov	r0, r9
    abc0:	ldrb	r1, [r0, r5]!
    abc4:	ldrb	r0, [r0, #1]
    abc8:	orr	r3, r0, r1, lsl #8
    abcc:	add	r1, r8, r5
    abd0:	mov	r0, sl
    abd4:	mov	r2, #8
    abd8:	bl	4528 <gen_cmp>
    abdc:	mov	r6, r0
    abe0:	cmp	r4, #0
    abe4:	movne	r0, r4
    abe8:	movne	r1, r6
    abec:	blne	316c <sf_gen_and>
    abf0:	sub	r0, r5, #2
    abf4:	cmp	r5, #1
    abf8:	mov	r5, r0
    abfc:	mov	r4, r6
    ac00:	bhi	abbc <gen_bcmp+0x84>
    ac04:	add	r7, r0, #2
    ac08:	cmp	r7, #1
    ac0c:	beq	ac28 <gen_bcmp+0xf0>
    ac10:	mov	r4, r6
    ac14:	b	ac50 <gen_bcmp+0x118>
    ac18:	mov	r6, r4
    ac1c:	ldr	r8, [sp]
    ac20:	cmp	r7, #1
    ac24:	bne	ac10 <gen_bcmp+0xd8>
    ac28:	ldrb	r3, [r9]
    ac2c:	mov	r0, sl
    ac30:	mov	r1, r8
    ac34:	mov	r2, #16
    ac38:	bl	4528 <gen_cmp>
    ac3c:	mov	r4, r0
    ac40:	cmp	r6, #0
    ac44:	movne	r0, r6
    ac48:	movne	r1, r4
    ac4c:	blne	316c <sf_gen_and>
    ac50:	mov	r0, r4
    ac54:	sub	sp, fp, #28
    ac58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ac5c <gen_uncond>:
    ac5c:	push	{r4, r5, fp, lr}
    ac60:	add	fp, sp, #8
    ac64:	mov	r4, r0
    ac68:	mov	r0, #0
    ac6c:	bl	79c0 <new_stmt>
    ac70:	mov	r5, r0
    ac74:	clz	r0, r4
    ac78:	lsr	r0, r0, #5
    ac7c:	str	r0, [r5, #12]
    ac80:	mov	r0, #21
    ac84:	bl	7c8c <new_block>
    ac88:	str	r5, [r0, #4]
    ac8c:	pop	{r4, r5, fp, pc}

0000ac90 <gen_cmp_le>:
    ac90:	push	{fp, lr}
    ac94:	mov	fp, sp
    ac98:	sub	sp, sp, #16
    ac9c:	mov	ip, #1
    aca0:	mov	lr, #32
    aca4:	str	lr, [sp]
    aca8:	str	ip, [sp, #4]
    acac:	str	r3, [sp, #8]
    acb0:	mvn	r3, #0
    acb4:	bl	941c <gen_ncmp>
    acb8:	mov	sp, fp
    acbc:	pop	{fp, pc}

0000acc0 <gen_hostop>:
    acc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    acc4:	add	fp, sp, #24
    acc8:	sub	sp, sp, #8
    accc:	cmp	r2, #4
    acd0:	bhi	add4 <gen_hostop+0x114>
    acd4:	mov	r6, r3
    acd8:	mov	r5, r1
    acdc:	mov	r4, r0
    ace0:	ldr	r9, [fp, #12]
    ace4:	ldr	r7, [fp, #8]
    ace8:	add	r0, pc, #4
    acec:	ldr	r1, [r0, r2, lsl #2]
    acf0:	add	pc, r0, r1
    acf4:	.word	0x00000014
    acf8:	.word	0x000000a0
    acfc:	.word	0x0000009c
    ad00:	.word	0x00000014
    ad04:	.word	0x0000005c
    ad08:	stm	sp, {r7, r9}
    ad0c:	mov	r0, r4
    ad10:	mov	r1, r5
    ad14:	mov	r2, #1
    ad18:	mov	r3, r6
    ad1c:	bl	acc0 <gen_hostop>
    ad20:	mov	r8, r0
    ad24:	stm	sp, {r7, r9}
    ad28:	mov	r0, r4
    ad2c:	mov	r1, r5
    ad30:	mov	r2, #2
    ad34:	mov	r3, r6
    ad38:	bl	acc0 <gen_hostop>
    ad3c:	mov	r4, r0
    ad40:	mov	r0, r8
    ad44:	mov	r1, r4
    ad48:	bl	3244 <sf_gen_or>
    ad4c:	b	adc8 <gen_hostop+0x108>
    ad50:	stm	sp, {r7, r9}
    ad54:	mov	r0, r4
    ad58:	mov	r1, r5
    ad5c:	mov	r2, #1
    ad60:	mov	r3, r6
    ad64:	bl	acc0 <gen_hostop>
    ad68:	mov	r8, r0
    ad6c:	stm	sp, {r7, r9}
    ad70:	mov	r0, r4
    ad74:	mov	r1, r5
    ad78:	mov	r2, #2
    ad7c:	mov	r3, r6
    ad80:	bl	acc0 <gen_hostop>
    ad84:	mov	r4, r0
    ad88:	mov	r0, r8
    ad8c:	b	adc0 <gen_hostop+0x100>
    ad90:	mov	r7, r9
    ad94:	mov	r0, r6
    ad98:	bl	3a80 <gen_linktype>
    ad9c:	mov	r6, r0
    ada0:	str	r5, [sp]
    ada4:	mov	r0, #3
    ada8:	mov	r1, r7
    adac:	mov	r2, #0
    adb0:	mov	r3, r4
    adb4:	bl	83ec <gen_mcmp>
    adb8:	mov	r4, r0
    adbc:	mov	r0, r6
    adc0:	mov	r1, r4
    adc4:	bl	316c <sf_gen_and>
    adc8:	mov	r0, r4
    adcc:	sub	sp, fp, #24
    add0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    add4:	bl	fc4 <abort@plt>

0000add8 <gen_dnhostop>:
    add8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    addc:	add	fp, sp, #28
    ade0:	sub	sp, sp, #12
    ade4:	cmp	r1, #24
    ade8:	bhi	b040 <gen_dnhostop+0x268>
    adec:	mov	r5, r0
    adf0:	mov	sl, #1
    adf4:	mov	r7, #7
    adf8:	add	r0, pc, #4
    adfc:	ldr	r1, [r0, r1, lsl #2]
    ae00:	add	pc, r0, r1
    ae04:	.word	0x00000064
    ae08:	.word	0x00000094
    ae0c:	.word	0x0000009c
    ae10:	.word	0x00000064
    ae14:	.word	0x00000204
    ae18:	.word	0x0000023c
    ae1c:	.word	0x0000023c
    ae20:	.word	0x0000023c
    ae24:	.word	0x0000023c
    ae28:	.word	0x0000023c
    ae2c:	.word	0x0000023c
    ae30:	.word	0x0000023c
    ae34:	.word	0x0000023c
    ae38:	.word	0x0000023c
    ae3c:	.word	0x0000023c
    ae40:	.word	0x0000023c
    ae44:	.word	0x0000023c
    ae48:	.word	0x0000023c
    ae4c:	.word	0x0000023c
    ae50:	.word	0x0000023c
    ae54:	.word	0x0000023c
    ae58:	.word	0x0000023c
    ae5c:	.word	0x0000023c
    ae60:	.word	0x0000023c
    ae64:	.word	0x00000240
    ae68:	mov	r0, r5
    ae6c:	mov	r1, #1
    ae70:	bl	add8 <gen_dnhostop>
    ae74:	mov	r4, r0
    ae78:	mov	r0, r5
    ae7c:	mov	r1, #2
    ae80:	bl	add8 <gen_dnhostop>
    ae84:	mov	r5, r0
    ae88:	mov	r0, r4
    ae8c:	mov	r1, r5
    ae90:	bl	3244 <sf_gen_or>
    ae94:	b	b034 <gen_dnhostop+0x25c>
    ae98:	mov	sl, #3
    ae9c:	mov	r7, #15
    aea0:	movw	r0, #24579	; 0x6003
    aea4:	bl	3a80 <gen_linktype>
    aea8:	str	r0, [sp, #8]
    aeac:	movw	r0, #1665	; 0x681
    aeb0:	bl	b054 <__bswap_16>
    aeb4:	mov	r6, r0
    aeb8:	movw	r0, #2047	; 0x7ff
    aebc:	bl	b054 <__bswap_16>
    aec0:	mov	r9, r0
    aec4:	str	r0, [sp]
    aec8:	mov	r0, #3
    aecc:	mov	r1, #2
    aed0:	mov	r2, #8
    aed4:	mov	r3, r6
    aed8:	bl	83ec <gen_mcmp>
    aedc:	mov	r4, r0
    aee0:	uxth	r0, r5
    aee4:	bl	b054 <__bswap_16>
    aee8:	mov	r6, r0
    aeec:	add	r1, r7, #3
    aef0:	mov	r0, #3
    aef4:	mov	r2, #8
    aef8:	mov	r3, r6
    aefc:	bl	4528 <gen_cmp>
    af00:	mov	r5, r0
    af04:	mov	r0, r4
    af08:	mov	r1, r5
    af0c:	bl	316c <sf_gen_and>
    af10:	mov	r8, #7
    af14:	str	r8, [sp]
    af18:	mov	r0, #3
    af1c:	mov	r1, #2
    af20:	mov	r2, #16
    af24:	mov	r3, #6
    af28:	bl	83ec <gen_mcmp>
    af2c:	mov	r4, r0
    af30:	add	r1, r7, #2
    af34:	mov	r0, #3
    af38:	mov	r2, #8
    af3c:	mov	r3, r6
    af40:	bl	4528 <gen_cmp>
    af44:	mov	r7, r0
    af48:	mov	r0, r4
    af4c:	mov	r1, r7
    af50:	bl	316c <sf_gen_and>
    af54:	mov	r0, r7
    af58:	mov	r1, r5
    af5c:	bl	3244 <sf_gen_or>
    af60:	movw	r0, #641	; 0x281
    af64:	bl	b054 <__bswap_16>
    af68:	mov	r3, r0
    af6c:	str	r9, [sp]
    af70:	mov	r0, #3
    af74:	mov	r1, #2
    af78:	mov	r2, #8
    af7c:	bl	83ec <gen_mcmp>
    af80:	mov	r4, r0
    af84:	add	r1, sl, #3
    af88:	mov	r0, #3
    af8c:	mov	r2, #8
    af90:	mov	r3, r6
    af94:	bl	4528 <gen_cmp>
    af98:	mov	r7, r0
    af9c:	mov	r0, r4
    afa0:	mov	r1, r7
    afa4:	bl	316c <sf_gen_and>
    afa8:	mov	r0, r7
    afac:	mov	r1, r5
    afb0:	bl	3244 <sf_gen_or>
    afb4:	str	r8, [sp]
    afb8:	mov	r0, #3
    afbc:	mov	r1, #2
    afc0:	mov	r2, #16
    afc4:	mov	r3, #2
    afc8:	bl	83ec <gen_mcmp>
    afcc:	mov	r4, r0
    afd0:	add	r1, sl, #2
    afd4:	mov	r0, #3
    afd8:	mov	r2, #8
    afdc:	mov	r3, r6
    afe0:	bl	4528 <gen_cmp>
    afe4:	mov	r6, r0
    afe8:	mov	r0, r4
    afec:	mov	r1, r6
    aff0:	bl	316c <sf_gen_and>
    aff4:	mov	r0, r6
    aff8:	mov	r1, r5
    affc:	bl	3244 <sf_gen_or>
    b000:	ldr	r0, [sp, #8]
    b004:	b	b02c <gen_dnhostop+0x254>
    b008:	mov	r0, r5
    b00c:	mov	r1, #1
    b010:	bl	add8 <gen_dnhostop>
    b014:	mov	r4, r0
    b018:	mov	r0, r5
    b01c:	mov	r1, #2
    b020:	bl	add8 <gen_dnhostop>
    b024:	mov	r5, r0
    b028:	mov	r0, r4
    b02c:	mov	r1, r5
    b030:	bl	316c <sf_gen_and>
    b034:	mov	r0, r5
    b038:	sub	sp, fp, #28
    b03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b040:	bl	fc4 <abort@plt>
    b044:	ldr	r0, [pc, #4]	; b050 <gen_dnhostop+0x278>
    b048:	add	r0, pc, r0
    b04c:	bl	1fc4 <sf_bpf_error>
    b050:	.word	0x0000876b

0000b054 <__bswap_16>:
    b054:	rev16	r0, r0
    b058:	bx	lr

0000b05c <gen_hostop6>:
    b05c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b060:	add	fp, sp, #24
    b064:	sub	sp, sp, #8
    b068:	cmp	r2, #4
    b06c:	bhi	b228 <gen_hostop6+0x1cc>
    b070:	mov	r8, r3
    b074:	mov	r5, r1
    b078:	mov	r7, r0
    b07c:	ldr	r9, [fp, #12]
    b080:	ldr	r6, [fp, #8]
    b084:	add	r0, pc, #4
    b088:	ldr	r1, [r0, r2, lsl #2]
    b08c:	add	pc, r0, r1
    b090:	.word	0x00000014
    b094:	.word	0x000000b0
    b098:	.word	0x000000ac
    b09c:	.word	0x00000014
    b0a0:	.word	0x0000005c
    b0a4:	stm	sp, {r6, r9}
    b0a8:	mov	r0, r7
    b0ac:	mov	r1, r5
    b0b0:	mov	r2, #1
    b0b4:	mov	r3, r8
    b0b8:	bl	b05c <gen_hostop6>
    b0bc:	mov	r4, r0
    b0c0:	stm	sp, {r6, r9}
    b0c4:	mov	r0, r7
    b0c8:	mov	r1, r5
    b0cc:	mov	r2, #2
    b0d0:	mov	r3, r8
    b0d4:	bl	b05c <gen_hostop6>
    b0d8:	mov	r5, r0
    b0dc:	mov	r0, r4
    b0e0:	mov	r1, r5
    b0e4:	bl	3244 <sf_gen_or>
    b0e8:	b	b130 <gen_hostop6+0xd4>
    b0ec:	stm	sp, {r6, r9}
    b0f0:	mov	r0, r7
    b0f4:	mov	r1, r5
    b0f8:	mov	r2, #1
    b0fc:	mov	r3, r8
    b100:	bl	b05c <gen_hostop6>
    b104:	mov	r4, r0
    b108:	stm	sp, {r6, r9}
    b10c:	mov	r0, r7
    b110:	mov	r1, r5
    b114:	mov	r2, #2
    b118:	mov	r3, r8
    b11c:	bl	b05c <gen_hostop6>
    b120:	mov	r5, r0
    b124:	mov	r0, r4
    b128:	mov	r1, r5
    b12c:	bl	316c <sf_gen_and>
    b130:	mov	r0, r5
    b134:	sub	sp, fp, #24
    b138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b13c:	mov	r6, r9
    b140:	ldr	r0, [r7, #12]
    b144:	bl	5dac <__bswap_32>
    b148:	mov	r4, r0
    b14c:	ldr	r0, [r5, #12]
    b150:	bl	5dac <__bswap_32>
    b154:	str	r0, [sp]
    b158:	add	r1, r6, #12
    b15c:	mov	r0, #3
    b160:	mov	r2, #0
    b164:	mov	r3, r4
    b168:	bl	83ec <gen_mcmp>
    b16c:	mov	r9, r0
    b170:	ldr	r0, [r7, #8]
    b174:	bl	5dac <__bswap_32>
    b178:	mov	r4, r0
    b17c:	ldr	r0, [r5, #8]
    b180:	bl	5dac <__bswap_32>
    b184:	str	r0, [sp]
    b188:	add	r1, r6, #8
    b18c:	mov	r0, #3
    b190:	mov	r2, #0
    b194:	mov	r3, r4
    b198:	bl	83ec <gen_mcmp>
    b19c:	mov	r1, r9
    b1a0:	bl	316c <sf_gen_and>
    b1a4:	ldr	r0, [r7, #4]
    b1a8:	bl	5dac <__bswap_32>
    b1ac:	mov	r4, r0
    b1b0:	ldr	r0, [r5, #4]
    b1b4:	bl	5dac <__bswap_32>
    b1b8:	str	r0, [sp]
    b1bc:	add	r1, r6, #4
    b1c0:	mov	r0, #3
    b1c4:	mov	r2, #0
    b1c8:	mov	r3, r4
    b1cc:	bl	83ec <gen_mcmp>
    b1d0:	mov	r1, r9
    b1d4:	bl	316c <sf_gen_and>
    b1d8:	ldr	r0, [r7]
    b1dc:	bl	5dac <__bswap_32>
    b1e0:	mov	r4, r0
    b1e4:	ldr	r0, [r5]
    b1e8:	bl	5dac <__bswap_32>
    b1ec:	str	r0, [sp]
    b1f0:	mov	r0, #3
    b1f4:	mov	r1, r6
    b1f8:	mov	r2, #0
    b1fc:	mov	r3, r4
    b200:	bl	83ec <gen_mcmp>
    b204:	mov	r1, r9
    b208:	bl	316c <sf_gen_and>
    b20c:	mov	r0, r8
    b210:	bl	3a80 <gen_linktype>
    b214:	mov	r1, r9
    b218:	bl	316c <sf_gen_and>
    b21c:	mov	r0, r9
    b220:	sub	sp, fp, #24
    b224:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b228:	bl	fc4 <abort@plt>

0000b22c <gen_prism_llprefixlen>:
    b22c:	push	{fp, lr}
    b230:	mov	fp, sp
    b234:	ldr	r0, [pc, #48]	; b26c <gen_prism_llprefixlen+0x40>
    b238:	ldr	r0, [pc, r0]
    b23c:	cmn	r0, #1
    b240:	bne	b254 <gen_prism_llprefixlen+0x28>
    b244:	bl	7910 <alloc_reg>
    b248:	ldr	r1, [pc, #32]	; b270 <gen_prism_llprefixlen+0x44>
    b24c:	add	r1, pc, r1
    b250:	str	r0, [r1]
    b254:	mov	r0, #97	; 0x61
    b258:	bl	79c0 <new_stmt>
    b25c:	ldr	r1, [pc, #16]	; b274 <gen_prism_llprefixlen+0x48>
    b260:	ldr	r1, [pc, r1]
    b264:	str	r1, [r0, #12]
    b268:	pop	{fp, pc}
    b26c:	.word	0x0002543c
    b270:	.word	0x00025428
    b274:	.word	0x00025414

0000b278 <gen_avs_llprefixlen>:
    b278:	push	{fp, lr}
    b27c:	mov	fp, sp
    b280:	ldr	r0, [pc, #48]	; b2b8 <gen_avs_llprefixlen+0x40>
    b284:	ldr	r0, [pc, r0]
    b288:	cmn	r0, #1
    b28c:	bne	b2a0 <gen_avs_llprefixlen+0x28>
    b290:	bl	7910 <alloc_reg>
    b294:	ldr	r1, [pc, #32]	; b2bc <gen_avs_llprefixlen+0x44>
    b298:	add	r1, pc, r1
    b29c:	str	r0, [r1]
    b2a0:	mov	r0, #97	; 0x61
    b2a4:	bl	79c0 <new_stmt>
    b2a8:	ldr	r1, [pc, #16]	; b2c0 <gen_avs_llprefixlen+0x48>
    b2ac:	ldr	r1, [pc, r1]
    b2b0:	str	r1, [r0, #12]
    b2b4:	pop	{fp, pc}
    b2b8:	.word	0x000253f0
    b2bc:	.word	0x000253dc
    b2c0:	.word	0x000253c8

0000b2c4 <gen_radiotap_llprefixlen>:
    b2c4:	push	{fp, lr}
    b2c8:	mov	fp, sp
    b2cc:	ldr	r0, [pc, #48]	; b304 <gen_radiotap_llprefixlen+0x40>
    b2d0:	ldr	r0, [pc, r0]
    b2d4:	cmn	r0, #1
    b2d8:	bne	b2ec <gen_radiotap_llprefixlen+0x28>
    b2dc:	bl	7910 <alloc_reg>
    b2e0:	ldr	r1, [pc, #32]	; b308 <gen_radiotap_llprefixlen+0x44>
    b2e4:	add	r1, pc, r1
    b2e8:	str	r0, [r1]
    b2ec:	mov	r0, #97	; 0x61
    b2f0:	bl	79c0 <new_stmt>
    b2f4:	ldr	r1, [pc, #16]	; b30c <gen_radiotap_llprefixlen+0x48>
    b2f8:	ldr	r1, [pc, r1]
    b2fc:	str	r1, [r0, #12]
    b300:	pop	{fp, pc}
    b304:	.word	0x000253a4
    b308:	.word	0x00025390
    b30c:	.word	0x0002537c

0000b310 <gen_ppi_llprefixlen>:
    b310:	push	{fp, lr}
    b314:	mov	fp, sp
    b318:	ldr	r0, [pc, #48]	; b350 <gen_ppi_llprefixlen+0x40>
    b31c:	ldr	r0, [pc, r0]
    b320:	cmn	r0, #1
    b324:	bne	b338 <gen_ppi_llprefixlen+0x28>
    b328:	bl	7910 <alloc_reg>
    b32c:	ldr	r1, [pc, #32]	; b354 <gen_ppi_llprefixlen+0x44>
    b330:	add	r1, pc, r1
    b334:	str	r0, [r1]
    b338:	mov	r0, #97	; 0x61
    b33c:	bl	79c0 <new_stmt>
    b340:	ldr	r1, [pc, #16]	; b358 <gen_ppi_llprefixlen+0x48>
    b344:	ldr	r1, [pc, r1]
    b348:	str	r1, [r0, #12]
    b34c:	pop	{fp, pc}
    b350:	.word	0x00025358
    b354:	.word	0x00025344
    b358:	.word	0x00025330

0000b35c <gen_load_llrel>:
    b35c:	push	{r4, r5, r6, sl, fp, lr}
    b360:	add	fp, sp, #16
    b364:	mov	r6, r1
    b368:	mov	r5, r0
    b36c:	bl	79dc <gen_llprefixlen>
    b370:	cmp	r0, #0
    b374:	beq	b39c <gen_load_llrel+0x40>
    b378:	mov	r4, r0
    b37c:	orr	r0, r6, #64	; 0x40
    b380:	bl	79c0 <new_stmt>
    b384:	mov	r1, r0
    b388:	str	r5, [r0, #12]
    b38c:	mov	r0, r4
    b390:	bl	7544 <sf_append>
    b394:	mov	r0, r4
    b398:	pop	{r4, r5, r6, sl, fp, pc}
    b39c:	orr	r0, r6, #32
    b3a0:	bl	79c0 <new_stmt>
    b3a4:	str	r5, [r0, #12]
    b3a8:	pop	{r4, r5, r6, sl, fp, pc}

0000b3ac <gen_load_macplrel>:
    b3ac:	push	{r4, r5, r6, sl, fp, lr}
    b3b0:	add	fp, sp, #16
    b3b4:	mov	r6, r1
    b3b8:	mov	r5, r0
    b3bc:	bl	7a48 <gen_off_macpl>
    b3c0:	cmp	r0, #0
    b3c4:	beq	b3ec <gen_load_macplrel+0x40>
    b3c8:	mov	r4, r0
    b3cc:	orr	r0, r6, #64	; 0x40
    b3d0:	bl	79c0 <new_stmt>
    b3d4:	mov	r1, r0
    b3d8:	str	r5, [r0, #12]
    b3dc:	mov	r0, r4
    b3e0:	bl	7544 <sf_append>
    b3e4:	mov	r0, r4
    b3e8:	pop	{r4, r5, r6, sl, fp, pc}
    b3ec:	orr	r0, r6, #32
    b3f0:	bl	79c0 <new_stmt>
    b3f4:	mov	r4, r0
    b3f8:	ldr	r0, [pc, #16]	; b410 <gen_load_macplrel+0x64>
    b3fc:	ldr	r0, [pc, r0]
    b400:	add	r0, r0, r5
    b404:	str	r0, [r4, #12]
    b408:	mov	r0, r4
    b40c:	pop	{r4, r5, r6, sl, fp, pc}
    b410:	.word	0x000251b0

0000b414 <pcap_nametoaddr>:
    b414:	push	{r4, r5, r6, sl, fp, lr}
    b418:	add	fp, sp, #16
    b41c:	bl	fac <gethostbyname@plt>
    b420:	cmp	r0, #0
    b424:	beq	b460 <pcap_nametoaddr+0x4c>
    b428:	mov	r4, r0
    b42c:	ldr	r0, [r0, #16]
    b430:	ldr	r5, [r0]
    b434:	cmp	r5, #0
    b438:	beq	b458 <pcap_nametoaddr+0x44>
    b43c:	add	r6, r0, #4
    b440:	ldr	r0, [r5]
    b444:	bl	b468 <__bswap_32>
    b448:	str	r0, [r5]
    b44c:	ldr	r5, [r6], #4
    b450:	cmp	r5, #0
    b454:	bne	b440 <pcap_nametoaddr+0x2c>
    b458:	ldr	r0, [r4, #16]
    b45c:	pop	{r4, r5, r6, sl, fp, pc}
    b460:	mov	r0, #0
    b464:	pop	{r4, r5, r6, sl, fp, pc}

0000b468 <__bswap_32>:
    b468:	rev	r0, r0
    b46c:	bx	lr

0000b470 <pcap_nametoaddrinfo>:
    b470:	push	{r4, sl, fp, lr}
    b474:	add	fp, sp, #8
    b478:	sub	sp, sp, #40	; 0x28
    b47c:	add	r2, sp, #8
    b480:	vmov.i32	q8, #0	; 0x00000000
    b484:	add	r1, r2, #16
    b488:	vst1.64	{d16-d17}, [r1]
    b48c:	mov	r1, #12
    b490:	mov	r3, r2
    b494:	vst1.64	{d16-d17}, [r3], r1
    b498:	mov	r1, #6
    b49c:	str	r1, [r3]
    b4a0:	mov	r1, #1
    b4a4:	str	r1, [sp, #16]
    b4a8:	mov	r4, #0
    b4ac:	add	r3, sp, #4
    b4b0:	mov	r1, #0
    b4b4:	bl	fa0 <getaddrinfo@plt>
    b4b8:	ldr	r1, [sp, #4]
    b4bc:	cmp	r0, #0
    b4c0:	movne	r1, r4
    b4c4:	mov	r0, r1
    b4c8:	sub	sp, fp, #8
    b4cc:	pop	{r4, sl, fp, pc}

0000b4d0 <pcap_nametonetaddr>:
    b4d0:	push	{fp, lr}
    b4d4:	mov	fp, sp
    b4d8:	bl	e68 <getnetbyname@plt>
    b4dc:	cmp	r0, #0
    b4e0:	ldrne	r0, [r0, #12]
    b4e4:	moveq	r0, #0
    b4e8:	pop	{fp, pc}

0000b4ec <pcap_nametoport>:
    b4ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    b4f0:	add	fp, sp, #24
    b4f4:	mov	r8, r2
    b4f8:	mov	r5, r1
    b4fc:	mov	r4, r0
    b500:	ldr	r1, [pc, #144]	; b598 <pcap_nametoport+0xac>
    b504:	add	r1, pc, r1
    b508:	bl	f34 <getservbyname@plt>
    b50c:	mvn	r6, #0
    b510:	cmp	r0, #0
    b514:	mvn	r7, #0
    b518:	beq	b528 <pcap_nametoport+0x3c>
    b51c:	ldrh	r0, [r0, #8]
    b520:	bl	b5a0 <__bswap_16>
    b524:	mov	r7, r0
    b528:	ldr	r1, [pc, #108]	; b59c <pcap_nametoport+0xb0>
    b52c:	add	r1, pc, r1
    b530:	mov	r0, r4
    b534:	bl	f34 <getservbyname@plt>
    b538:	cmp	r0, #0
    b53c:	beq	b54c <pcap_nametoport+0x60>
    b540:	ldrh	r0, [r0, #8]
    b544:	bl	b5a0 <__bswap_16>
    b548:	mov	r6, r0
    b54c:	cmp	r7, #0
    b550:	bmi	b57c <pcap_nametoport+0x90>
    b554:	str	r7, [r5]
    b558:	mov	r0, #6
    b55c:	cmp	r6, r7
    b560:	mov	r1, #6
    b564:	mvneq	r1, #0
    b568:	cmn	r6, #1
    b56c:	movle	r1, r0
    b570:	str	r1, [r8]
    b574:	mov	r0, #1
    b578:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b57c:	cmp	r6, #0
    b580:	movmi	r0, #0
    b584:	strpl	r6, [r5]
    b588:	movpl	r0, #17
    b58c:	strpl	r0, [r8]
    b590:	movpl	r0, #1
    b594:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b598:	.word	0x000071e8
    b59c:	.word	0x000071f5

0000b5a0 <__bswap_16>:
    b5a0:	rev16	r0, r0
    b5a4:	bx	lr

0000b5a8 <pcap_nametoportrange>:
    b5a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b5ac:	add	fp, sp, #24
    b5b0:	sub	sp, sp, #8
    b5b4:	mov	r9, r3
    b5b8:	mov	r8, r2
    b5bc:	mov	r6, r1
    b5c0:	mov	r4, r0
    b5c4:	ldr	r1, [pc, #216]	; b6a4 <pcap_nametoportrange+0xfc>
    b5c8:	add	r1, pc, r1
    b5cc:	add	r2, sp, #4
    b5d0:	mov	r3, sp
    b5d4:	bl	f70 <sscanf@plt>
    b5d8:	cmp	r0, #2
    b5dc:	bne	b600 <pcap_nametoportrange+0x58>
    b5e0:	ldr	r0, [sp, #4]
    b5e4:	str	r0, [r6]
    b5e8:	ldr	r0, [sp]
    b5ec:	str	r0, [r8]
    b5f0:	mvn	r0, #0
    b5f4:	str	r0, [r9]
    b5f8:	mov	r5, #1
    b5fc:	b	b698 <pcap_nametoportrange+0xf0>
    b600:	mov	r0, r4
    b604:	bl	e8c <strdup@plt>
    b608:	mov	r5, #0
    b60c:	cmp	r0, #0
    b610:	beq	b698 <pcap_nametoportrange+0xf0>
    b614:	mov	r7, r0
    b618:	mov	r1, #45	; 0x2d
    b61c:	bl	f10 <strchr@plt>
    b620:	cmp	r0, #0
    b624:	beq	b680 <pcap_nametoportrange+0xd8>
    b628:	mov	r4, r0
    b62c:	mov	r5, #0
    b630:	strb	r5, [r0]
    b634:	mov	r0, r7
    b638:	mov	r1, r6
    b63c:	mov	r2, r9
    b640:	bl	b4ec <pcap_nametoport>
    b644:	cmp	r0, #0
    b648:	beq	b680 <pcap_nametoportrange+0xd8>
    b64c:	ldr	r6, [r9]
    b650:	add	r0, r4, #1
    b654:	mov	r1, r8
    b658:	mov	r2, r9
    b65c:	bl	b4ec <pcap_nametoport>
    b660:	cmp	r0, #0
    b664:	beq	b68c <pcap_nametoportrange+0xe4>
    b668:	ldr	r0, [r9]
    b66c:	mov	r5, #1
    b670:	cmp	r0, r6
    b674:	mvnne	r0, #0
    b678:	strne	r0, [r9]
    b67c:	b	b698 <pcap_nametoportrange+0xf0>
    b680:	mov	r0, r7
    b684:	bl	e5c <free@plt>
    b688:	b	b698 <pcap_nametoportrange+0xf0>
    b68c:	mov	r0, r7
    b690:	bl	e5c <free@plt>
    b694:	mov	r5, #0
    b698:	mov	r0, r5
    b69c:	sub	sp, fp, #24
    b6a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b6a4:	.word	0x000084a0

0000b6a8 <pcap_nametoproto>:
    b6a8:	push	{fp, lr}
    b6ac:	mov	fp, sp
    b6b0:	bl	e38 <getprotobyname@plt>
    b6b4:	cmp	r0, #0
    b6b8:	ldrne	r0, [r0, #8]
    b6bc:	mvneq	r0, #0
    b6c0:	pop	{fp, pc}

0000b6c4 <pcap_nametoeproto>:
    b6c4:	push	{r4, r5, r6, sl, fp, lr}
    b6c8:	add	fp, sp, #16
    b6cc:	mov	r5, r0
    b6d0:	mvn	r4, #0
    b6d4:	ldr	r0, [pc, #76]	; b728 <pcap_nametoeproto+0x64>
    b6d8:	ldr	r0, [pc, r0]
    b6dc:	cmp	r0, #0
    b6e0:	beq	b714 <pcap_nametoeproto+0x50>
    b6e4:	ldr	r1, [pc, #64]	; b72c <pcap_nametoeproto+0x68>
    b6e8:	add	r1, pc, r1
    b6ec:	add	r6, r1, #4
    b6f0:	mov	r1, r5
    b6f4:	bl	e08 <strcmp@plt>
    b6f8:	cmp	r0, #0
    b6fc:	beq	b71c <pcap_nametoeproto+0x58>
    b700:	add	r1, r6, #8
    b704:	ldr	r0, [r6, #4]
    b708:	cmp	r0, #0
    b70c:	mov	r6, r1
    b710:	bne	b6f0 <pcap_nametoeproto+0x2c>
    b714:	mov	r0, r4
    b718:	pop	{r4, r5, r6, sl, fp, pc}
    b71c:	ldrh	r4, [r6]
    b720:	mov	r0, r4
    b724:	pop	{r4, r5, r6, sl, fp, pc}
    b728:	.word	0x00024b74
    b72c:	.word	0x00024b64

0000b730 <pcap_nametollc>:
    b730:	push	{r4, r5, fp, lr}
    b734:	add	fp, sp, #8
    b738:	mov	r4, r0
    b73c:	ldr	r0, [pc, #64]	; b784 <pcap_nametollc+0x54>
    b740:	add	r0, pc, r0
    b744:	add	r5, r0, #4
    b748:	ldr	r0, [pc, #56]	; b788 <pcap_nametollc+0x58>
    b74c:	add	r0, pc, r0
    b750:	mov	r1, r4
    b754:	bl	e08 <strcmp@plt>
    b758:	cmp	r0, #0
    b75c:	beq	b77c <pcap_nametollc+0x4c>
    b760:	add	r1, r5, #8
    b764:	ldr	r0, [r5, #4]
    b768:	cmp	r0, #0
    b76c:	mov	r5, r1
    b770:	bne	b750 <pcap_nametollc+0x20>
    b774:	mvn	r0, #0
    b778:	pop	{r4, r5, fp, pc}
    b77c:	ldrh	r0, [r5]
    b780:	pop	{r4, r5, fp, pc}
    b784:	.word	0x000245f0
    b788:	.word	0x00008400

0000b78c <__pcap_atoin>:
    b78c:	push	{fp, lr}
    b790:	mov	fp, sp
    b794:	mov	lr, r0
    b798:	mov	r0, #0
    b79c:	str	r0, [r1]
    b7a0:	add	lr, lr, #1
    b7a4:	mov	ip, #0
    b7a8:	b	b7bc <__pcap_atoin+0x30>
    b7ac:	add	r2, ip, ip, lsl #2
    b7b0:	add	r2, r3, r2, lsl #1
    b7b4:	sub	ip, r2, #48	; 0x30
    b7b8:	add	lr, lr, #1
    b7bc:	ldrb	r3, [lr, #-1]
    b7c0:	cmp	r3, #0
    b7c4:	cmpne	r3, #46	; 0x2e
    b7c8:	bne	b7ac <__pcap_atoin+0x20>
    b7cc:	ldr	r2, [r1]
    b7d0:	uxtb	r3, ip
    b7d4:	orr	r2, r3, r2, lsl #8
    b7d8:	str	r2, [r1]
    b7dc:	add	r0, r0, #8
    b7e0:	ldrb	r2, [lr, #-1]
    b7e4:	cmp	r2, #0
    b7e8:	bne	b7a0 <__pcap_atoin+0x14>
    b7ec:	pop	{fp, pc}

0000b7f0 <__pcap_atodn>:
    b7f0:	push	{r4, r5, fp, lr}
    b7f4:	add	fp, sp, #8
    b7f8:	sub	sp, sp, #8
    b7fc:	mov	r4, r1
    b800:	mov	r5, r0
    b804:	ldr	r1, [pc, #72]	; b854 <__pcap_atodn+0x64>
    b808:	add	r1, pc, r1
    b80c:	mov	r2, sp
    b810:	add	r3, sp, #4
    b814:	bl	f70 <sscanf@plt>
    b818:	cmp	r0, #2
    b81c:	ldreq	r0, [sp, #4]
    b820:	bfceq	r0, #10, #22
    b824:	ldreq	r1, [sp]
    b828:	lsleq	r1, r1, #10
    b82c:	uxtheq	r1, r1
    b830:	orreq	r0, r0, r1
    b834:	streq	r0, [r4]
    b838:	moveq	r0, #32
    b83c:	subeq	sp, fp, #8
    b840:	popeq	{r4, r5, fp, pc}
    b844:	ldr	r0, [pc, #12]	; b858 <__pcap_atodn+0x68>
    b848:	add	r0, pc, r0
    b84c:	mov	r1, r5
    b850:	bl	1fc4 <sf_bpf_error>
    b854:	.word	0x000082d7
    b858:	.word	0x0000829d

0000b85c <pcap_ether_aton>:
    b85c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b860:	add	fp, sp, #24
    b864:	mov	r5, r0
    b868:	mov	r0, #6
    b86c:	bl	ed4 <malloc@plt>
    b870:	mov	r8, r0
    b874:	cmp	r0, #0
    b878:	beq	b8fc <pcap_ether_aton+0xa0>
    b87c:	mov	r9, #1
    b880:	movw	r4, #8195	; 0x2003
    b884:	mov	r7, r8
    b888:	b	b894 <pcap_ether_aton+0x38>
    b88c:	strb	r6, [r7], #1
    b890:	mov	r5, r2
    b894:	ldrb	r0, [r5]
    b898:	sub	r1, r0, #45	; 0x2d
    b89c:	cmp	r1, #13
    b8a0:	bhi	b8b4 <pcap_ether_aton+0x58>
    b8a4:	tst	r4, r9, lsl r1
    b8a8:	beq	b8b4 <pcap_ether_aton+0x58>
    b8ac:	add	r5, r5, #1
    b8b0:	b	b8bc <pcap_ether_aton+0x60>
    b8b4:	cmp	r0, #0
    b8b8:	beq	b8fc <pcap_ether_aton+0xa0>
    b8bc:	ldrb	r0, [r5]
    b8c0:	bl	b904 <xdtoi>
    b8c4:	mov	r6, r0
    b8c8:	bl	eec <__ctype_b_loc@plt>
    b8cc:	mov	r1, r0
    b8d0:	mov	r2, r5
    b8d4:	ldrb	r0, [r2, #1]!
    b8d8:	ldr	r1, [r1]
    b8dc:	add	r1, r1, r0, lsl #1
    b8e0:	ldrb	r1, [r1, #1]
    b8e4:	tst	r1, #16
    b8e8:	beq	b88c <pcap_ether_aton+0x30>
    b8ec:	bl	b904 <xdtoi>
    b8f0:	orr	r6, r0, r6, lsl #4
    b8f4:	add	r2, r5, #2
    b8f8:	b	b88c <pcap_ether_aton+0x30>
    b8fc:	mov	r0, r8
    b900:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000b904 <xdtoi>:
    b904:	push	{r4, sl, fp, lr}
    b908:	add	fp, sp, #8
    b90c:	mov	r4, r0
    b910:	bl	eec <__ctype_b_loc@plt>
    b914:	ldr	r0, [r0]
    b918:	add	r0, r0, r4, lsl #1
    b91c:	ldrh	r1, [r0]
    b920:	mvn	r0, #47	; 0x2f
    b924:	tst	r1, #2048	; 0x800
    b928:	bne	b938 <xdtoi+0x34>
    b92c:	mvn	r0, #86	; 0x56
    b930:	tst	r1, #512	; 0x200
    b934:	mvneq	r0, #54	; 0x36
    b938:	add	r0, r0, r4
    b93c:	pop	{r4, sl, fp, pc}

0000b940 <pcap_ether_hostton>:
    b940:	push	{r4, r5, r6, sl, fp, lr}
    b944:	add	fp, sp, #16
    b948:	mov	r4, r0
    b94c:	ldr	r0, [pc, #200]	; ba1c <pcap_ether_hostton+0xdc>
    b950:	ldr	r0, [pc, r0]
    b954:	cmp	r0, #0
    b958:	beq	b974 <pcap_ether_hostton+0x34>
    b95c:	ldr	r0, [pc, #208]	; ba34 <pcap_ether_hostton+0xf4>
    b960:	ldr	r0, [pc, r0]
    b964:	cmp	r0, #0
    b968:	beq	ba10 <pcap_ether_hostton+0xd0>
    b96c:	bl	e98 <rewind@plt>
    b970:	b	b9b4 <pcap_ether_hostton+0x74>
    b974:	ldr	r0, [pc, #164]	; ba20 <pcap_ether_hostton+0xe0>
    b978:	add	r0, pc, r0
    b97c:	ldr	r1, [pc, #160]	; ba24 <pcap_ether_hostton+0xe4>
    b980:	add	r1, pc, r1
    b984:	bl	e2c <fopen@plt>
    b988:	ldr	r1, [pc, #152]	; ba28 <pcap_ether_hostton+0xe8>
    b98c:	add	r1, pc, r1
    b990:	str	r0, [r1]
    b994:	ldr	r1, [pc, #144]	; ba2c <pcap_ether_hostton+0xec>
    b998:	ldr	r1, [pc, r1]
    b99c:	add	r1, r1, #1
    b9a0:	ldr	r2, [pc, #136]	; ba30 <pcap_ether_hostton+0xf0>
    b9a4:	add	r2, pc, r2
    b9a8:	str	r1, [r2]
    b9ac:	cmp	r0, #0
    b9b0:	beq	ba10 <pcap_ether_hostton+0xd0>
    b9b4:	mov	r5, #0
    b9b8:	ldr	r0, [pc, #120]	; ba38 <pcap_ether_hostton+0xf8>
    b9bc:	ldr	r0, [pc, r0]
    b9c0:	bl	e89c <pcap_next_etherent>
    b9c4:	cmp	r0, #0
    b9c8:	beq	ba08 <pcap_ether_hostton+0xc8>
    b9cc:	mov	r6, r0
    b9d0:	add	r0, r0, #6
    b9d4:	mov	r1, r4
    b9d8:	bl	e08 <strcmp@plt>
    b9dc:	cmp	r0, #0
    b9e0:	bne	b9b8 <pcap_ether_hostton+0x78>
    b9e4:	mov	r0, #6
    b9e8:	bl	ed4 <malloc@plt>
    b9ec:	cmp	r0, #0
    b9f0:	beq	ba08 <pcap_ether_hostton+0xc8>
    b9f4:	ldrh	r1, [r6, #4]
    b9f8:	strh	r1, [r0, #4]
    b9fc:	ldr	r1, [r6]
    ba00:	str	r1, [r0]
    ba04:	mov	r5, r0
    ba08:	mov	r0, r5
    ba0c:	pop	{r4, r5, r6, sl, fp, pc}
    ba10:	mov	r5, #0
    ba14:	mov	r0, r5
    ba18:	pop	{r4, r5, r6, sl, fp, pc}
    ba1c:	.word	0x00024d74
    ba20:	.word	0x0000818b
    ba24:	.word	0x000095ec
    ba28:	.word	0x00024d34
    ba2c:	.word	0x00024d2c
    ba30:	.word	0x00024d20
    ba34:	.word	0x00024d60
    ba38:	.word	0x00024d04

0000ba3c <__pcap_nametodnaddr>:
    ba3c:	push	{fp, lr}
    ba40:	mov	fp, sp
    ba44:	mov	r1, r0
    ba48:	ldr	r0, [pc, #4]	; ba54 <__pcap_nametodnaddr+0x18>
    ba4c:	add	r0, pc, r0
    ba50:	bl	1fc4 <sf_bpf_error>
    ba54:	.word	0x000080c3

0000ba58 <sf_bpf_optimize>:
    ba58:	push	{r4, r5, fp, lr}
    ba5c:	add	fp, sp, #8
    ba60:	mov	r4, r0
    ba64:	ldr	r5, [r0]
    ba68:	mov	r0, r5
    ba6c:	bl	baa0 <opt_init>
    ba70:	mov	r0, r5
    ba74:	mov	r1, #0
    ba78:	bl	bdf0 <opt_loop>
    ba7c:	mov	r0, r5
    ba80:	mov	r1, #1
    ba84:	bl	bdf0 <opt_loop>
    ba88:	mov	r0, r5
    ba8c:	bl	be58 <intern_blocks>
    ba90:	mov	r0, r4
    ba94:	bl	c000 <opt_root>
    ba98:	pop	{r4, r5, fp, lr}
    ba9c:	b	c080 <opt_cleanup>

0000baa0 <opt_init>:
    baa0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    baa4:	add	fp, sp, #24
    baa8:	mov	r5, r0
    baac:	ldr	r6, [pc, #724]	; bd88 <opt_init+0x2e8>
    bab0:	ldr	r6, [pc, r6]
    bab4:	add	r0, r6, #1
    bab8:	ldr	r7, [pc, #716]	; bd8c <opt_init+0x2ec>
    babc:	add	r7, pc, r7
    bac0:	str	r0, [r7]
    bac4:	mov	r0, r5
    bac8:	bl	e74c <count_blocks>
    bacc:	mov	r4, r0
    bad0:	mov	r1, #4
    bad4:	bl	dfc <calloc@plt>
    bad8:	ldr	r1, [pc, #688]	; bd90 <opt_init+0x2f0>
    badc:	add	r1, pc, r1
    bae0:	str	r0, [r1]
    bae4:	cmp	r0, #0
    bae8:	beq	bd78 <opt_init+0x2d8>
    baec:	ldr	r0, [pc, #672]	; bd94 <opt_init+0x2f4>
    baf0:	add	r0, pc, r0
    baf4:	mov	r1, #0
    baf8:	str	r1, [r0]
    bafc:	add	r0, r6, #2
    bb00:	str	r0, [r7]
    bb04:	mov	r0, r5
    bb08:	bl	e7a4 <number_blks_r>
    bb0c:	ldr	r9, [pc, #644]	; bd98 <opt_init+0x2f8>
    bb10:	ldr	r9, [pc, r9]
    bb14:	lsl	r0, r9, #1
    bb18:	ldr	r1, [pc, #636]	; bd9c <opt_init+0x2fc>
    bb1c:	add	r1, pc, r1
    bb20:	str	r0, [r1]
    bb24:	mov	r1, #4
    bb28:	bl	dfc <calloc@plt>
    bb2c:	ldr	r1, [pc, #620]	; bda0 <opt_init+0x300>
    bb30:	add	r1, pc, r1
    bb34:	str	r0, [r1]
    bb38:	cmp	r0, #0
    bb3c:	beq	bd78 <opt_init+0x2d8>
    bb40:	mov	r0, r9
    bb44:	mov	r1, #4
    bb48:	bl	dfc <calloc@plt>
    bb4c:	ldr	r1, [pc, #592]	; bda4 <opt_init+0x304>
    bb50:	add	r1, pc, r1
    bb54:	str	r0, [r1]
    bb58:	cmp	r0, #0
    bb5c:	beq	bd78 <opt_init+0x2d8>
    bb60:	mov	r0, #1
    bb64:	add	r0, r0, r9, lsr #5
    bb68:	ldr	r1, [pc, #568]	; bda8 <opt_init+0x308>
    bb6c:	add	r1, pc, r1
    bb70:	str	r0, [r1]
    bb74:	ubfx	r8, r9, #4, #27
    bb78:	add	r1, r8, #1
    bb7c:	ldr	r2, [pc, #552]	; bdac <opt_init+0x30c>
    bb80:	add	r2, pc, r2
    bb84:	str	r1, [r2]
    bb88:	add	r0, r1, r0
    bb8c:	mul	r0, r9, r0
    bb90:	lsl	r0, r0, #3
    bb94:	bl	ed4 <malloc@plt>
    bb98:	ldr	r1, [pc, #528]	; bdb0 <opt_init+0x310>
    bb9c:	add	r1, pc, r1
    bba0:	str	r0, [r1]
    bba4:	cmp	r0, #0
    bba8:	beq	bd78 <opt_init+0x2d8>
    bbac:	ldr	r1, [pc, #512]	; bdb4 <opt_init+0x314>
    bbb0:	add	r1, pc, r1
    bbb4:	str	r0, [r1]
    bbb8:	cmp	r4, #1
    bbbc:	blt	bd0c <opt_init+0x26c>
    bbc0:	lsr	ip, r9, #5
    bbc4:	mov	r1, #4
    bbc8:	add	r3, r1, ip, lsl #2
    bbcc:	mov	r1, #0
    bbd0:	mov	r5, #0
    bbd4:	ldr	r6, [pc, #476]	; bdb8 <opt_init+0x318>
    bbd8:	ldr	r6, [pc, r6]
    bbdc:	ldr	r6, [r6, r5, lsl #2]
    bbe0:	add	r2, r0, r1
    bbe4:	str	r2, [r6, #104]	; 0x68
    bbe8:	add	r1, r1, r3
    bbec:	add	r5, r5, #1
    bbf0:	cmp	r4, r5
    bbf4:	bne	bbd4 <opt_init+0x134>
    bbf8:	add	r3, r0, r1
    bbfc:	ldr	r2, [pc, #440]	; bdbc <opt_init+0x31c>
    bc00:	add	r2, pc, r2
    bc04:	str	r3, [r2]
    bc08:	cmp	r4, #1
    bc0c:	blt	bd1c <opt_init+0x27c>
    bc10:	mov	r2, #4
    bc14:	add	r2, r2, ip, lsl #2
    bc18:	mov	r3, #0
    bc1c:	ldr	r6, [pc, #412]	; bdc0 <opt_init+0x320>
    bc20:	ldr	r6, [pc, r6]
    bc24:	ldr	r6, [r6, r3, lsl #2]
    bc28:	add	r5, r0, r1
    bc2c:	str	r5, [r6, #108]	; 0x6c
    bc30:	add	r1, r1, r2
    bc34:	add	r3, r3, #1
    bc38:	cmp	r4, r3
    bc3c:	bne	bc1c <opt_init+0x17c>
    bc40:	add	r2, r0, r1
    bc44:	ldr	r3, [pc, #376]	; bdc4 <opt_init+0x324>
    bc48:	add	r3, pc, r3
    bc4c:	str	r2, [r3]
    bc50:	cmp	r4, #1
    bc54:	blt	bd28 <opt_init+0x288>
    bc58:	mov	r2, #8
    bc5c:	add	ip, r2, r8, lsl #3
    bc60:	add	r3, r0, r8, lsl #2
    bc64:	add	lr, r3, #4
    bc68:	lsl	r6, r9, #2
    bc6c:	mov	r5, #0
    bc70:	ldr	r7, [pc, #344]	; bdd0 <opt_init+0x330>
    bc74:	ldr	r7, [pc, r7]
    bc78:	ldr	r7, [r7, r5, lsl #2]
    bc7c:	add	r2, lr, r1
    bc80:	str	r2, [r7, #80]	; 0x50
    bc84:	add	r2, r0, r1
    bc88:	str	r2, [r7, #56]	; 0x38
    bc8c:	mov	r2, r7
    bc90:	str	r5, [r2, #48]!	; 0x30
    bc94:	ldr	r3, [pc, #312]	; bdd4 <opt_init+0x334>
    bc98:	ldr	r3, [pc, r3]
    bc9c:	str	r2, [r3, r5, lsl #2]
    bca0:	add	r2, r9, r5
    bca4:	mov	r3, r7
    bca8:	str	r2, [r3, #72]!	; 0x48
    bcac:	ldr	r2, [pc, #292]	; bdd8 <opt_init+0x338>
    bcb0:	ldr	r2, [pc, r2]
    bcb4:	add	r2, r2, r6
    bcb8:	str	r3, [r2, r5, lsl #2]
    bcbc:	str	r7, [r7, #88]	; 0x58
    bcc0:	str	r7, [r7, #64]	; 0x40
    bcc4:	add	r1, r1, ip
    bcc8:	add	r5, r5, #1
    bccc:	cmp	r4, r5
    bcd0:	bne	bc70 <opt_init+0x1d0>
    bcd4:	cmp	r4, #1
    bcd8:	blt	bd28 <opt_init+0x288>
    bcdc:	mov	r5, #0
    bce0:	ldr	r6, [pc, #244]	; bddc <opt_init+0x33c>
    bce4:	ldr	r6, [pc, r6]
    bce8:	ldr	r0, [r6], #4
    bcec:	ldr	r0, [r0, #4]
    bcf0:	bl	e820 <slength>
    bcf4:	add	r0, r5, r0
    bcf8:	add	r5, r0, #1
    bcfc:	subs	r4, r4, #1
    bd00:	bne	bce8 <opt_init+0x248>
    bd04:	add	r4, r5, r5, lsl #1
    bd08:	b	bd2c <opt_init+0x28c>
    bd0c:	ldr	r1, [pc, #180]	; bdc8 <opt_init+0x328>
    bd10:	add	r1, pc, r1
    bd14:	str	r0, [r1]
    bd18:	mov	r3, r0
    bd1c:	ldr	r0, [pc, #168]	; bdcc <opt_init+0x32c>
    bd20:	add	r0, pc, r0
    bd24:	str	r3, [r0]
    bd28:	mov	r4, #0
    bd2c:	ldr	r0, [pc, #172]	; bde0 <opt_init+0x340>
    bd30:	add	r0, pc, r0
    bd34:	str	r4, [r0]
    bd38:	mov	r0, r4
    bd3c:	mov	r1, #8
    bd40:	bl	dfc <calloc@plt>
    bd44:	mov	r5, r0
    bd48:	ldr	r0, [pc, #148]	; bde4 <opt_init+0x344>
    bd4c:	add	r0, pc, r0
    bd50:	str	r5, [r0]
    bd54:	mov	r0, r4
    bd58:	mov	r1, #20
    bd5c:	bl	dfc <calloc@plt>
    bd60:	ldr	r1, [pc, #128]	; bde8 <opt_init+0x348>
    bd64:	add	r1, pc, r1
    bd68:	str	r0, [r1]
    bd6c:	cmp	r5, #0
    bd70:	cmpne	r0, #0
    bd74:	bne	bd84 <opt_init+0x2e4>
    bd78:	ldr	r0, [pc, #108]	; bdec <opt_init+0x34c>
    bd7c:	add	r0, pc, r0
    bd80:	bl	1fc4 <sf_bpf_error>
    bd84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bd88:	.word	0x00024c18
    bd8c:	.word	0x00024c0c
    bd90:	.word	0x00025044
    bd94:	.word	0x00024be8
    bd98:	.word	0x00024bc8
    bd9c:	.word	0x00024bd0
    bda0:	.word	0x00024ff4
    bda4:	.word	0x00024fcc
    bda8:	.word	0x00024b74
    bdac:	.word	0x00024b70
    bdb0:	.word	0x00024f7c
    bdb4:	.word	0x00024b2c
    bdb8:	.word	0x00024f48
    bdbc:	.word	0x00024ae4
    bdc0:	.word	0x00024f00
    bdc4:	.word	0x00024aa0
    bdc8:	.word	0x000249d4
    bdcc:	.word	0x000249c8
    bdd0:	.word	0x00024eac
    bdd4:	.word	0x00024e8c
    bdd8:	.word	0x00024e74
    bddc:	.word	0x00024e3c
    bde0:	.word	0x000249c8
    bde4:	.word	0x00024de4
    bde8:	.word	0x00024dc8
    bdec:	.word	0x00007de4

0000bdf0 <opt_loop>:
    bdf0:	push	{r4, r5, r6, r7, fp, lr}
    bdf4:	add	fp, sp, #16
    bdf8:	mov	r4, r1
    bdfc:	mov	r5, r0
    be00:	ldr	r6, [pc, #76]	; be54 <opt_loop+0x64>
    be04:	add	r6, pc, r6
    be08:	mov	r7, #1
    be0c:	strb	r7, [r6]
    be10:	mov	r0, r5
    be14:	bl	c614 <find_levels>
    be18:	mov	r0, r5
    be1c:	bl	c670 <find_dom>
    be20:	mov	r0, r5
    be24:	bl	c7d0 <find_closure>
    be28:	mov	r0, r5
    be2c:	bl	c900 <find_ud>
    be30:	mov	r0, r5
    be34:	bl	c9e8 <find_edom>
    be38:	mov	r0, r5
    be3c:	mov	r1, r4
    be40:	bl	cab0 <opt_blks>
    be44:	ldrb	r0, [r6]
    be48:	cmp	r0, #1
    be4c:	bne	be0c <opt_loop+0x1c>
    be50:	pop	{r4, r5, r6, r7, fp, pc}
    be54:	.word	0x000248d0

0000be58 <intern_blocks>:
    be58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be5c:	add	fp, sp, #28
    be60:	sub	sp, sp, #20
    be64:	str	r0, [sp, #8]
    be68:	ldr	r7, [pc, #380]	; bfec <intern_blocks+0x194>
    be6c:	ldr	r7, [pc, r7]
    be70:	sub	r0, r7, #2
    be74:	str	r0, [sp, #4]
    be78:	sub	r0, r7, #1
    be7c:	str	r0, [sp, #12]
    be80:	mov	r6, #0
    be84:	str	r7, [sp, #16]
    be88:	cmp	r7, #1
    be8c:	bge	bea4 <intern_blocks+0x4c>
    be90:	b	bec4 <intern_blocks+0x6c>
    be94:	cmp	r1, #0
    be98:	bne	bfe4 <intern_blocks+0x18c>
    be9c:	cmp	r7, #1
    bea0:	blt	bec4 <intern_blocks+0x6c>
    bea4:	mov	r0, #0
    bea8:	ldr	r1, [pc, #320]	; bff0 <intern_blocks+0x198>
    beac:	ldr	r1, [pc, r1]
    beb0:	ldr	r1, [r1, r0, lsl #2]
    beb4:	str	r6, [r1, #100]	; 0x64
    beb8:	add	r0, r0, #1
    bebc:	cmp	r7, r0
    bec0:	bne	bea8 <intern_blocks+0x50>
    bec4:	ldr	r0, [sp, #8]
    bec8:	bl	e5bc <mark_code>
    becc:	ldr	r0, [sp, #12]
    bed0:	cmp	r0, #1
    bed4:	blt	bf7c <intern_blocks+0x124>
    bed8:	mov	r7, #1
    bedc:	ldr	r9, [pc, #272]	; bff4 <intern_blocks+0x19c>
    bee0:	ldr	r9, [pc, r9]
    bee4:	ldr	r0, [sp, #4]
    bee8:	ldr	sl, [sp, #12]
    beec:	b	bf00 <intern_blocks+0xa8>
    bef0:	add	r7, r7, #1
    bef4:	sub	r0, sl, #1
    bef8:	cmp	sl, #0
    befc:	ble	bf7c <intern_blocks+0x124>
    bf00:	mov	r1, sl
    bf04:	mov	sl, r0
    bf08:	ldr	r0, [pc, #232]	; bff8 <intern_blocks+0x1a0>
    bf0c:	ldr	r0, [pc, r0]
    bf10:	ldr	r5, [r0, sl, lsl #2]
    bf14:	ldr	r2, [r5, #24]
    bf18:	cmp	r2, r9
    bf1c:	bne	bef0 <intern_blocks+0x98>
    bf20:	ldr	r2, [sp, #16]
    bf24:	cmp	r1, r2
    bf28:	bge	bef0 <intern_blocks+0x98>
    bf2c:	ldr	r1, [sp, #16]
    bf30:	add	r4, r0, r1, lsl #2
    bf34:	mov	r8, r7
    bf38:	b	bf44 <intern_blocks+0xec>
    bf3c:	subs	r8, r8, #1
    bf40:	beq	bef0 <intern_blocks+0x98>
    bf44:	ldr	r6, [r4, -r8, lsl #2]
    bf48:	ldr	r0, [r6, #24]
    bf4c:	cmp	r0, r9
    bf50:	bne	bf3c <intern_blocks+0xe4>
    bf54:	mov	r0, r5
    bf58:	mov	r1, r6
    bf5c:	bl	e5e0 <eq_blk>
    bf60:	cmp	r0, #0
    bf64:	beq	bf3c <intern_blocks+0xe4>
    bf68:	ldr	r0, [r6, #100]	; 0x64
    bf6c:	cmp	r0, #0
    bf70:	moveq	r0, r6
    bf74:	str	r0, [r5, #100]	; 0x64
    bf78:	b	bef0 <intern_blocks+0x98>
    bf7c:	ldr	r7, [sp, #16]
    bf80:	cmp	r7, #1
    bf84:	mov	r6, #0
    bf88:	blt	bfe4 <intern_blocks+0x18c>
    bf8c:	mov	r0, #0
    bf90:	mov	r1, #1
    bf94:	b	bfa4 <intern_blocks+0x14c>
    bf98:	add	r0, r0, #1
    bf9c:	cmp	r7, r0
    bfa0:	beq	be94 <intern_blocks+0x3c>
    bfa4:	ldr	r2, [pc, #80]	; bffc <intern_blocks+0x1a4>
    bfa8:	ldr	r2, [pc, r2]
    bfac:	ldr	r2, [r2, r0, lsl #2]
    bfb0:	ldr	r3, [r2, #60]	; 0x3c
    bfb4:	cmp	r3, #0
    bfb8:	beq	bf98 <intern_blocks+0x140>
    bfbc:	ldr	r3, [r3, #100]	; 0x64
    bfc0:	cmp	r3, #0
    bfc4:	strne	r3, [r2, #60]	; 0x3c
    bfc8:	movne	r1, #0
    bfcc:	ldr	r3, [r2, #84]	; 0x54
    bfd0:	ldr	r3, [r3, #100]	; 0x64
    bfd4:	cmp	r3, #0
    bfd8:	strne	r3, [r2, #84]	; 0x54
    bfdc:	movne	r1, #0
    bfe0:	b	bf98 <intern_blocks+0x140>
    bfe4:	sub	sp, fp, #28
    bfe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfec:	.word	0x0002486c
    bff0:	.word	0x00024c74
    bff4:	.word	0x000247e8
    bff8:	.word	0x00024c14
    bffc:	.word	0x00024b78

0000c000 <opt_root>:
    c000:	push	{r4, r5, fp, lr}
    c004:	add	fp, sp, #8
    c008:	mov	r4, r0
    c00c:	ldr	r0, [r0]
    c010:	ldr	r5, [r0, #4]
    c014:	mov	r1, #0
    c018:	str	r1, [r0, #4]
    c01c:	ldr	r0, [r4]
    c020:	b	c02c <opt_root+0x2c>
    c024:	ldr	r0, [r0, #60]	; 0x3c
    c028:	str	r0, [r4]
    c02c:	ldr	r1, [r0, #8]
    c030:	and	r1, r1, #7
    c034:	cmp	r1, #5
    c038:	ldreq	r1, [r0, #60]	; 0x3c
    c03c:	ldreq	r2, [r0, #84]	; 0x54
    c040:	cmpeq	r1, r2
    c044:	beq	c024 <opt_root+0x24>
    c048:	ldr	r1, [r0, #4]
    c04c:	cmp	r1, #0
    c050:	beq	c05c <opt_root+0x5c>
    c054:	mov	r0, r5
    c058:	bl	7544 <sf_append>
    c05c:	ldr	r0, [r4]
    c060:	str	r5, [r0, #4]
    c064:	ldr	r0, [r4]
    c068:	ldr	r1, [r0, #8]
    c06c:	and	r1, r1, #7
    c070:	cmp	r1, #6
    c074:	moveq	r1, #0
    c078:	streq	r1, [r0, #4]
    c07c:	pop	{r4, r5, fp, pc}

0000c080 <opt_cleanup>:
    c080:	push	{fp, lr}
    c084:	mov	fp, sp
    c088:	ldr	r0, [pc, #68]	; c0d4 <opt_cleanup+0x54>
    c08c:	ldr	r0, [pc, r0]
    c090:	bl	e5c <free@plt>
    c094:	ldr	r0, [pc, #60]	; c0d8 <opt_cleanup+0x58>
    c098:	ldr	r0, [pc, r0]
    c09c:	bl	e5c <free@plt>
    c0a0:	ldr	r0, [pc, #52]	; c0dc <opt_cleanup+0x5c>
    c0a4:	ldr	r0, [pc, r0]
    c0a8:	bl	e5c <free@plt>
    c0ac:	ldr	r0, [pc, #44]	; c0e0 <opt_cleanup+0x60>
    c0b0:	ldr	r0, [pc, r0]
    c0b4:	bl	e5c <free@plt>
    c0b8:	ldr	r0, [pc, #36]	; c0e4 <opt_cleanup+0x64>
    c0bc:	ldr	r0, [pc, r0]
    c0c0:	bl	e5c <free@plt>
    c0c4:	ldr	r0, [pc, #28]	; c0e8 <opt_cleanup+0x68>
    c0c8:	ldr	r0, [pc, r0]
    c0cc:	pop	{fp, lr}
    c0d0:	b	e5c <free@plt>
    c0d4:	.word	0x00024aa0
    c0d8:	.word	0x00024a98
    c0dc:	.word	0x00024a80
    c0e0:	.word	0x00024a68
    c0e4:	.word	0x00024a60
    c0e8:	.word	0x00024a58

0000c0ec <sf_icode_to_fcode>:
    c0ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c0f0:	add	fp, sp, #28
    c0f4:	sub	sp, sp, #4
    c0f8:	mov	r8, r1
    c0fc:	mov	sl, r0
    c100:	ldr	r5, [pc, #212]	; c1dc <sf_icode_to_fcode+0xf0>
    c104:	ldr	r5, [pc, r5]
    c108:	add	r0, r5, #1
    c10c:	ldr	r9, [pc, #204]	; c1e0 <sf_icode_to_fcode+0xf4>
    c110:	add	r9, pc, r9
    c114:	str	r0, [r9]
    c118:	mov	r0, sl
    c11c:	bl	c1f4 <count_stmts>
    c120:	mov	r7, r0
    c124:	str	r0, [r8]
    c128:	lsl	r4, r0, #3
    c12c:	mov	r0, r4
    c130:	bl	ed4 <malloc@plt>
    c134:	cmp	r0, #0
    c138:	beq	c1c4 <sf_icode_to_fcode+0xd8>
    c13c:	mov	r6, r0
    c140:	mov	r0, r6
    c144:	mov	r1, #0
    c148:	mov	r2, r4
    c14c:	bl	f40 <memset@plt>
    c150:	ldr	r0, [pc, #140]	; c1e4 <sf_icode_to_fcode+0xf8>
    c154:	add	r0, pc, r0
    c158:	str	r6, [r0]
    c15c:	add	r0, r6, r7, lsl #3
    c160:	ldr	r1, [pc, #128]	; c1e8 <sf_icode_to_fcode+0xfc>
    c164:	add	r1, pc, r1
    c168:	str	r0, [r1]
    c16c:	add	r0, r5, #2
    c170:	str	r0, [r9]
    c174:	mov	r0, sl
    c178:	bl	c268 <convert_code_r>
    c17c:	cmp	r0, #0
    c180:	bne	c1d0 <sf_icode_to_fcode+0xe4>
    c184:	mov	r0, r6
    c188:	bl	e5c <free@plt>
    c18c:	ldr	r5, [pc, #88]	; c1ec <sf_icode_to_fcode+0x100>
    c190:	ldr	r5, [pc, r5]
    c194:	add	r0, r5, #1
    c198:	str	r0, [r9]
    c19c:	mov	r0, sl
    c1a0:	bl	c1f4 <count_stmts>
    c1a4:	mov	r7, r0
    c1a8:	str	r0, [r8]
    c1ac:	lsl	r4, r0, #3
    c1b0:	mov	r0, r4
    c1b4:	bl	ed4 <malloc@plt>
    c1b8:	mov	r6, r0
    c1bc:	cmp	r0, #0
    c1c0:	bne	c140 <sf_icode_to_fcode+0x54>
    c1c4:	ldr	r0, [pc, #36]	; c1f0 <sf_icode_to_fcode+0x104>
    c1c8:	add	r0, pc, r0
    c1cc:	bl	1fc4 <sf_bpf_error>
    c1d0:	mov	r0, r6
    c1d4:	sub	sp, fp, #28
    c1d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1dc:	.word	0x000245c4
    c1e0:	.word	0x000245b8
    c1e4:	.word	0x00024578
    c1e8:	.word	0x0002456c
    c1ec:	.word	0x00024538
    c1f0:	.word	0x00007998

0000c1f4 <count_stmts>:
    c1f4:	push	{r4, r5, fp, lr}
    c1f8:	add	fp, sp, #8
    c1fc:	cmp	r0, #0
    c200:	beq	c21c <count_stmts+0x28>
    c204:	mov	r4, r0
    c208:	ldr	r1, [r0, #24]
    c20c:	ldr	r0, [pc, #80]	; c264 <count_stmts+0x70>
    c210:	ldr	r0, [pc, r0]
    c214:	cmp	r1, r0
    c218:	bne	c224 <count_stmts+0x30>
    c21c:	mov	r0, #0
    c220:	pop	{r4, r5, fp, pc}
    c224:	str	r0, [r4, #24]
    c228:	ldr	r0, [r4, #60]	; 0x3c
    c22c:	bl	c1f4 <count_stmts>
    c230:	mov	r5, r0
    c234:	ldr	r0, [r4, #84]	; 0x54
    c238:	bl	c1f4 <count_stmts>
    c23c:	add	r5, r5, r0
    c240:	ldr	r0, [r4, #4]
    c244:	bl	e820 <slength>
    c248:	add	r0, r5, r0
    c24c:	ldr	r1, [r4, #28]
    c250:	ldr	r2, [r4, #32]
    c254:	add	r0, r0, r1
    c258:	add	r0, r0, r2
    c25c:	add	r0, r0, #1
    c260:	pop	{r4, r5, fp, pc}
    c264:	.word	0x000244b8

0000c268 <convert_code_r>:
    c268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c26c:	add	fp, sp, #28
    c270:	sub	sp, sp, #20
    c274:	cmp	r0, #0
    c278:	beq	c294 <convert_code_r+0x2c>
    c27c:	mov	r4, r0
    c280:	ldr	r1, [r0, #24]
    c284:	ldr	r0, [pc, #860]	; c5e8 <convert_code_r+0x380>
    c288:	ldr	r0, [pc, r0]
    c28c:	cmp	r1, r0
    c290:	bne	c2a4 <convert_code_r+0x3c>
    c294:	mov	r5, #1
    c298:	mov	r0, r5
    c29c:	sub	sp, fp, #28
    c2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c2a4:	str	r0, [r4, #24]
    c2a8:	ldr	r0, [r4, #84]	; 0x54
    c2ac:	bl	c268 <convert_code_r>
    c2b0:	mov	r5, #0
    c2b4:	cmp	r0, #0
    c2b8:	beq	c298 <convert_code_r+0x30>
    c2bc:	ldr	r0, [r4, #60]	; 0x3c
    c2c0:	bl	c268 <convert_code_r>
    c2c4:	cmp	r0, #0
    c2c8:	beq	c298 <convert_code_r+0x30>
    c2cc:	ldr	r0, [r4, #4]
    c2d0:	bl	e820 <slength>
    c2d4:	mov	r5, r0
    c2d8:	ldr	r0, [r4, #28]
    c2dc:	ldr	r1, [r4, #32]
    c2e0:	add	r0, r5, r0
    c2e4:	add	r0, r0, r1
    c2e8:	ldr	r1, [pc, #764]	; c5ec <convert_code_r+0x384>
    c2ec:	ldr	r1, [pc, r1]
    c2f0:	sub	r0, r1, r0, lsl #3
    c2f4:	sub	r1, r0, #8
    c2f8:	ldr	r0, [pc, #752]	; c5f0 <convert_code_r+0x388>
    c2fc:	add	r0, pc, r0
    c300:	str	r1, [r0]
    c304:	ldr	r0, [pc, #744]	; c5f4 <convert_code_r+0x38c>
    c308:	ldr	r0, [pc, r0]
    c30c:	str	r1, [sp, #16]
    c310:	sub	r0, r1, r0
    c314:	asr	r0, r0, #3
    c318:	str	r0, [r4, #40]	; 0x28
    c31c:	cmp	r5, #0
    c320:	str	r4, [sp, #4]
    c324:	beq	c370 <convert_code_r+0x108>
    c328:	mov	r0, r5
    c32c:	mov	r1, #4
    c330:	bl	dfc <calloc@plt>
    c334:	cmp	r0, #0
    c338:	beq	c5dc <convert_code_r+0x374>
    c33c:	ldr	sl, [r4, #4]
    c340:	cmp	sl, #0
    c344:	beq	c378 <convert_code_r+0x110>
    c348:	mov	r2, #0
    c34c:	str	sl, [r0, r2, lsl #2]
    c350:	add	r2, r2, #1
    c354:	cmp	r2, r5
    c358:	bcs	c368 <convert_code_r+0x100>
    c35c:	ldr	sl, [sl, #16]
    c360:	cmp	sl, #0
    c364:	bne	c34c <convert_code_r+0xe4>
    c368:	ldr	r4, [sp, #4]
    c36c:	b	c374 <convert_code_r+0x10c>
    c370:	mov	r0, #0
    c374:	ldr	sl, [r4, #4]
    c378:	cmp	sl, #0
    c37c:	beq	c4b0 <convert_code_r+0x248>
    c380:	sub	r7, r5, #2
    c384:	mov	r2, #0
    c388:	str	r0, [sp, #12]
    c38c:	str	r7, [sp, #8]
    c390:	b	c3b0 <convert_code_r+0x148>
    c394:	add	r2, r2, #1
    c398:	ldr	r1, [sp, #16]
    c39c:	add	r1, r1, #8
    c3a0:	str	r1, [sp, #16]
    c3a4:	ldr	sl, [sl, #16]
    c3a8:	cmp	sl, #0
    c3ac:	beq	c4b0 <convert_code_r+0x248>
    c3b0:	ldr	r3, [sl]
    c3b4:	cmn	r3, #1
    c3b8:	beq	c3a4 <convert_code_r+0x13c>
    c3bc:	ldr	r1, [sp, #16]
    c3c0:	strh	r3, [r1]
    c3c4:	ldr	r3, [sl, #12]
    c3c8:	str	r3, [r1, #4]
    c3cc:	cmp	r2, r7
    c3d0:	ldrne	r3, [sl]
    c3d4:	cmpne	r3, #5
    c3d8:	beq	c394 <convert_code_r+0x12c>
    c3dc:	and	r3, r3, #7
    c3e0:	cmp	r3, #5
    c3e4:	bne	c394 <convert_code_r+0x12c>
    c3e8:	ldr	r3, [sl, #4]
    c3ec:	cmp	r3, #0
    c3f0:	ldrne	r3, [sl, #8]
    c3f4:	cmpne	r3, #0
    c3f8:	beq	c52c <convert_code_r+0x2c4>
    c3fc:	cmp	r5, #1
    c400:	blt	c49c <convert_code_r+0x234>
    c404:	eor	r7, r2, #255	; 0xff
    c408:	mov	lr, #0
    c40c:	mov	r3, r7
    c410:	mov	r4, r0
    c414:	mov	r0, r5
    c418:	mov	r6, r5
    c41c:	mov	r9, #0
    c420:	b	c438 <convert_code_r+0x1d0>
    c424:	add	r7, r7, #1
    c428:	add	r3, r3, #1
    c42c:	add	r4, r4, #4
    c430:	subs	r6, r6, #1
    c434:	beq	c484 <convert_code_r+0x21c>
    c438:	ldr	ip, [sl, #4]
    c43c:	ldr	r8, [r4]
    c440:	cmp	r8, ip
    c444:	bne	c45c <convert_code_r+0x1f4>
    c448:	cmp	r9, #0
    c44c:	bne	c5c8 <convert_code_r+0x360>
    c450:	ldr	r1, [sp, #16]
    c454:	strb	r3, [r1, #2]
    c458:	mov	r9, #1
    c45c:	ldr	r5, [sl, #8]
    c460:	ldr	r1, [r4]
    c464:	cmp	r1, r5
    c468:	bne	c424 <convert_code_r+0x1bc>
    c46c:	cmp	lr, #0
    c470:	bne	c5c8 <convert_code_r+0x360>
    c474:	ldr	r1, [sp, #16]
    c478:	strb	r7, [r1, #3]
    c47c:	mov	lr, #1
    c480:	b	c424 <convert_code_r+0x1bc>
    c484:	cmp	r9, #0
    c488:	mov	r5, r0
    c48c:	ldr	r0, [sp, #12]
    c490:	ldr	r7, [sp, #8]
    c494:	cmpne	lr, #0
    c498:	bne	c394 <convert_code_r+0x12c>
    c49c:	ldr	r0, [pc, #360]	; c60c <convert_code_r+0x3a4>
    c4a0:	add	r0, pc, r0
    c4a4:	ldr	r1, [pc, #356]	; c610 <convert_code_r+0x3a8>
    c4a8:	add	r1, pc, r1
    c4ac:	bl	1fc4 <sf_bpf_error>
    c4b0:	cmp	r0, #0
    c4b4:	beq	c4bc <convert_code_r+0x254>
    c4b8:	bl	e5c <free@plt>
    c4bc:	ldr	r3, [sp, #4]
    c4c0:	ldr	r0, [r3, #8]
    c4c4:	ldr	r1, [sp, #16]
    c4c8:	strh	r0, [r1]
    c4cc:	ldr	r0, [r3, #20]
    c4d0:	str	r0, [r1, #4]
    c4d4:	ldr	r0, [r3, #60]	; 0x3c
    c4d8:	cmp	r0, #0
    c4dc:	beq	c294 <convert_code_r+0x2c>
    c4e0:	ldr	r1, [r3, #40]	; 0x28
    c4e4:	add	r1, r1, r5
    c4e8:	mvn	r1, r1
    c4ec:	ldr	r0, [r0, #40]	; 0x28
    c4f0:	add	r0, r0, r1
    c4f4:	cmp	r0, #256	; 0x100
    c4f8:	bcc	c540 <convert_code_r+0x2d8>
    c4fc:	ldr	r1, [r3, #28]
    c500:	cmp	r1, #0
    c504:	beq	c5a8 <convert_code_r+0x340>
    c508:	mov	r1, #5
    c50c:	ldr	r2, [sp, #16]
    c510:	strh	r1, [r2, #8]
    c514:	mov	r1, #0
    c518:	strb	r1, [r2, #2]
    c51c:	sub	r0, r0, #1
    c520:	str	r0, [r2, #12]
    c524:	mov	r0, #1
    c528:	b	c54c <convert_code_r+0x2e4>
    c52c:	ldr	r0, [pc, #204]	; c600 <convert_code_r+0x398>
    c530:	add	r0, pc, r0
    c534:	ldr	r1, [pc, #200]	; c604 <convert_code_r+0x39c>
    c538:	add	r1, pc, r1
    c53c:	bl	1fc4 <sf_bpf_error>
    c540:	ldr	r1, [sp, #16]
    c544:	strb	r0, [r1, #2]
    c548:	mov	r0, #0
    c54c:	ldr	r1, [r3, #40]	; 0x28
    c550:	ldr	r2, [r3, #84]	; 0x54
    c554:	add	r1, r1, r5
    c558:	mvn	r1, r1
    c55c:	ldr	r2, [r2, #40]	; 0x28
    c560:	add	r1, r2, r1
    c564:	cmp	r1, #256	; 0x100
    c568:	bcc	c59c <convert_code_r+0x334>
    c56c:	ldr	r2, [r3, #32]
    c570:	cmp	r2, #0
    c574:	beq	c5b8 <convert_code_r+0x350>
    c578:	ldr	r7, [sp, #16]
    c57c:	strb	r0, [r7, #3]
    c580:	add	r0, r0, #1
    c584:	lsl	r2, r0, #3
    c588:	mov	r3, #5
    c58c:	strh	r3, [r7, r2]!
    c590:	sub	r0, r1, r0
    c594:	str	r0, [r7, #4]
    c598:	b	c294 <convert_code_r+0x2c>
    c59c:	ldr	r0, [sp, #16]
    c5a0:	strb	r1, [r0, #3]
    c5a4:	b	c294 <convert_code_r+0x2c>
    c5a8:	mov	r0, #1
    c5ac:	str	r0, [r3, #28]
    c5b0:	mov	r5, #0
    c5b4:	b	c298 <convert_code_r+0x30>
    c5b8:	mov	r0, #1
    c5bc:	str	r0, [r3, #32]
    c5c0:	mov	r5, #0
    c5c4:	b	c298 <convert_code_r+0x30>
    c5c8:	ldr	r0, [pc, #40]	; c5f8 <convert_code_r+0x390>
    c5cc:	add	r0, pc, r0
    c5d0:	ldr	r1, [pc, #36]	; c5fc <convert_code_r+0x394>
    c5d4:	add	r1, pc, r1
    c5d8:	bl	1fc4 <sf_bpf_error>
    c5dc:	ldr	r0, [pc, #36]	; c608 <convert_code_r+0x3a0>
    c5e0:	add	r0, pc, r0
    c5e4:	bl	1fc4 <sf_bpf_error>
    c5e8:	.word	0x00024440
    c5ec:	.word	0x000243e4
    c5f0:	.word	0x000243d4
    c5f4:	.word	0x000243c4
    c5f8:	.word	0x000075bc
    c5fc:	.word	0x000075f0
    c600:	.word	0x00007658
    c604:	.word	0x00007679
    c608:	.word	0x00007598
    c60c:	.word	0x000076e8
    c610:	.word	0x0000772d

0000c614 <find_levels>:
    c614:	push	{r4, sl, fp, lr}
    c618:	add	fp, sp, #8
    c61c:	mov	r4, r0
    c620:	ldr	r0, [pc, #56]	; c660 <find_levels+0x4c>
    c624:	ldr	r0, [pc, r0]
    c628:	ldr	r1, [pc, #52]	; c664 <find_levels+0x50>
    c62c:	ldr	r1, [pc, r1]
    c630:	lsl	r2, r1, #2
    c634:	mov	r1, #0
    c638:	bl	f40 <memset@plt>
    c63c:	ldr	r0, [pc, #36]	; c668 <find_levels+0x54>
    c640:	ldr	r0, [pc, r0]
    c644:	add	r0, r0, #1
    c648:	ldr	r1, [pc, #28]	; c66c <find_levels+0x58>
    c64c:	add	r1, pc, r1
    c650:	str	r0, [r1]
    c654:	mov	r0, r4
    c658:	pop	{r4, sl, fp, lr}
    c65c:	b	cbf4 <find_levels_r>
    c660:	.word	0x000244f8
    c664:	.word	0x000240ac
    c668:	.word	0x00024088
    c66c:	.word	0x0002407c

0000c670 <find_dom>:
    c670:	push	{r4, r5, fp, lr}
    c674:	add	fp, sp, #8
    c678:	mov	r4, r0
    c67c:	ldr	r0, [pc, #308]	; c7b8 <find_dom+0x148>
    c680:	ldr	r0, [pc, r0]
    c684:	ldr	r5, [pc, #304]	; c7bc <find_dom+0x14c>
    c688:	ldr	r5, [pc, r5]
    c68c:	mul	r0, r5, r0
    c690:	cmp	r0, #1
    c694:	blt	c6ac <find_dom+0x3c>
    c698:	lsl	r2, r0, #2
    c69c:	ldr	r0, [pc, #284]	; c7c0 <find_dom+0x150>
    c6a0:	ldr	r0, [pc, r0]
    c6a4:	mov	r1, #255	; 0xff
    c6a8:	bl	f40 <memset@plt>
    c6ac:	cmp	r5, #1
    c6b0:	blt	c6d4 <find_dom+0x64>
    c6b4:	sub	r1, r5, #1
    c6b8:	mov	r0, #0
    c6bc:	ldr	r2, [r4, #104]	; 0x68
    c6c0:	str	r0, [r2, r1, lsl #2]
    c6c4:	sub	r2, r1, #1
    c6c8:	cmp	r1, #0
    c6cc:	mov	r1, r2
    c6d0:	bgt	c6bc <find_dom+0x4c>
    c6d4:	ldr	ip, [r4, #36]	; 0x24
    c6d8:	cmp	ip, #0
    c6dc:	popmi	{r4, r5, fp, pc}
    c6e0:	mov	lr, #1
    c6e4:	b	c6f8 <find_dom+0x88>
    c6e8:	sub	r0, ip, #1
    c6ec:	cmp	ip, #0
    c6f0:	mov	ip, r0
    c6f4:	ble	c7b4 <find_dom+0x144>
    c6f8:	ldr	r0, [pc, #196]	; c7c4 <find_dom+0x154>
    c6fc:	ldr	r0, [pc, r0]
    c700:	ldr	r2, [r0, ip, lsl #2]
    c704:	cmp	r2, #0
    c708:	bne	c71c <find_dom+0xac>
    c70c:	b	c6e8 <find_dom+0x78>
    c710:	ldr	r2, [r2, #100]	; 0x64
    c714:	cmp	r2, #0
    c718:	beq	c6e8 <find_dom+0x78>
    c71c:	ldr	r0, [r2]
    c720:	ldr	r3, [r2, #104]	; 0x68
    c724:	lsr	r5, r0, #5
    c728:	ldr	r4, [r3, r5, lsl #2]
    c72c:	and	r0, r0, #31
    c730:	orr	r0, r4, lr, lsl r0
    c734:	str	r0, [r3, r5, lsl #2]
    c738:	ldr	r0, [r2, #60]	; 0x3c
    c73c:	cmp	r0, #0
    c740:	beq	c710 <find_dom+0xa0>
    c744:	ldr	r3, [pc, #124]	; c7c8 <find_dom+0x158>
    c748:	ldr	r3, [pc, r3]
    c74c:	cmp	r3, #1
    c750:	blt	c710 <find_dom+0xa0>
    c754:	ldr	r4, [r0, #104]	; 0x68
    c758:	ldr	r0, [r2, #104]	; 0x68
    c75c:	ldr	r5, [r0], #4
    c760:	ldr	r1, [r4]
    c764:	and	r1, r1, r5
    c768:	str	r1, [r4], #4
    c76c:	sub	r3, r3, #1
    c770:	cmp	r3, #0
    c774:	bgt	c75c <find_dom+0xec>
    c778:	ldr	r3, [pc, #76]	; c7cc <find_dom+0x15c>
    c77c:	ldr	r3, [pc, r3]
    c780:	cmp	r3, #1
    c784:	blt	c710 <find_dom+0xa0>
    c788:	ldr	r0, [r2, #84]	; 0x54
    c78c:	ldr	r4, [r2, #104]	; 0x68
    c790:	ldr	r0, [r0, #104]	; 0x68
    c794:	ldr	r1, [r4], #4
    c798:	ldr	r5, [r0]
    c79c:	and	r1, r5, r1
    c7a0:	str	r1, [r0], #4
    c7a4:	sub	r3, r3, #1
    c7a8:	cmp	r3, #0
    c7ac:	bgt	c794 <find_dom+0x124>
    c7b0:	b	c710 <find_dom+0xa0>
    c7b4:	pop	{r4, r5, fp, pc}
    c7b8:	.word	0x00024058
    c7bc:	.word	0x00024058
    c7c0:	.word	0x0002403c
    c7c4:	.word	0x00024420
    c7c8:	.word	0x00023f98
    c7cc:	.word	0x00023f64

0000c7d0 <find_closure>:
    c7d0:	push	{r4, r5, fp, lr}
    c7d4:	add	fp, sp, #8
    c7d8:	mov	r4, r0
    c7dc:	ldr	r0, [pc, #260]	; c8e8 <find_closure+0x118>
    c7e0:	ldr	r0, [pc, r0]
    c7e4:	ldr	r1, [pc, #256]	; c8ec <find_closure+0x11c>
    c7e8:	ldr	r1, [pc, r1]
    c7ec:	mul	r0, r1, r0
    c7f0:	lsl	r2, r0, #2
    c7f4:	ldr	r0, [pc, #244]	; c8f0 <find_closure+0x120>
    c7f8:	ldr	r0, [pc, r0]
    c7fc:	mov	r1, #0
    c800:	bl	f40 <memset@plt>
    c804:	ldr	ip, [r4, #36]	; 0x24
    c808:	cmp	ip, #0
    c80c:	popmi	{r4, r5, fp, pc}
    c810:	mov	lr, #1
    c814:	b	c828 <find_closure+0x58>
    c818:	sub	r0, ip, #1
    c81c:	cmp	ip, #0
    c820:	mov	ip, r0
    c824:	ble	c8e4 <find_closure+0x114>
    c828:	ldr	r0, [pc, #196]	; c8f4 <find_closure+0x124>
    c82c:	ldr	r0, [pc, r0]
    c830:	ldr	r2, [r0, ip, lsl #2]
    c834:	cmp	r2, #0
    c838:	bne	c84c <find_closure+0x7c>
    c83c:	b	c818 <find_closure+0x48>
    c840:	ldr	r2, [r2, #100]	; 0x64
    c844:	cmp	r2, #0
    c848:	beq	c818 <find_closure+0x48>
    c84c:	ldr	r0, [r2]
    c850:	ldr	r3, [r2, #108]	; 0x6c
    c854:	lsr	r4, r0, #5
    c858:	ldr	r1, [r3, r4, lsl #2]
    c85c:	and	r0, r0, #31
    c860:	orr	r0, r1, lr, lsl r0
    c864:	str	r0, [r3, r4, lsl #2]
    c868:	ldr	r0, [r2, #60]	; 0x3c
    c86c:	cmp	r0, #0
    c870:	beq	c840 <find_closure+0x70>
    c874:	ldr	r3, [pc, #124]	; c8f8 <find_closure+0x128>
    c878:	ldr	r3, [pc, r3]
    c87c:	cmp	r3, #1
    c880:	blt	c840 <find_closure+0x70>
    c884:	ldr	r4, [r0, #108]	; 0x6c
    c888:	ldr	r0, [r2, #108]	; 0x6c
    c88c:	ldr	r1, [r0], #4
    c890:	ldr	r5, [r4]
    c894:	orr	r1, r5, r1
    c898:	str	r1, [r4], #4
    c89c:	sub	r3, r3, #1
    c8a0:	cmp	r3, #0
    c8a4:	bgt	c88c <find_closure+0xbc>
    c8a8:	ldr	r3, [pc, #76]	; c8fc <find_closure+0x12c>
    c8ac:	ldr	r3, [pc, r3]
    c8b0:	cmp	r3, #1
    c8b4:	blt	c840 <find_closure+0x70>
    c8b8:	ldr	r0, [r2, #84]	; 0x54
    c8bc:	ldr	r4, [r2, #108]	; 0x6c
    c8c0:	ldr	r0, [r0, #108]	; 0x6c
    c8c4:	ldr	r1, [r4], #4
    c8c8:	ldr	r5, [r0]
    c8cc:	orr	r1, r5, r1
    c8d0:	str	r1, [r0], #4
    c8d4:	sub	r3, r3, #1
    c8d8:	cmp	r3, #0
    c8dc:	bgt	c8c4 <find_closure+0xf4>
    c8e0:	b	c840 <find_closure+0x70>
    c8e4:	pop	{r4, r5, fp, pc}
    c8e8:	.word	0x00023f00
    c8ec:	.word	0x00023ef0
    c8f0:	.word	0x00023eec
    c8f4:	.word	0x000242f0
    c8f8:	.word	0x00023e68
    c8fc:	.word	0x00023e34

0000c900 <find_ud>:
    c900:	push	{r4, r5, r6, r7, fp, lr}
    c904:	add	fp, sp, #16
    c908:	ldr	r5, [r0, #36]	; 0x24
    c90c:	cmp	r5, #0
    c910:	bmi	c9dc <find_ud+0xdc>
    c914:	mov	r6, #0
    c918:	mov	r7, r5
    c91c:	b	c930 <find_ud+0x30>
    c920:	sub	r0, r7, #1
    c924:	cmp	r7, #0
    c928:	mov	r7, r0
    c92c:	ble	c960 <find_ud+0x60>
    c930:	ldr	r0, [pc, #168]	; c9e0 <find_ud+0xe0>
    c934:	ldr	r0, [pc, r0]
    c938:	ldr	r4, [r0, r7, lsl #2]
    c93c:	cmp	r4, #0
    c940:	beq	c920 <find_ud+0x20>
    c944:	mov	r0, r4
    c948:	bl	cc78 <compute_local_ud>
    c94c:	str	r6, [r4, #128]	; 0x80
    c950:	ldr	r4, [r4, #100]	; 0x64
    c954:	cmp	r4, #0
    c958:	bne	c944 <find_ud+0x44>
    c95c:	b	c920 <find_ud+0x20>
    c960:	cmp	r5, #1
    c964:	blt	c9dc <find_ud+0xdc>
    c968:	mov	r0, #1
    c96c:	b	c980 <find_ud+0x80>
    c970:	add	r1, r0, #1
    c974:	cmp	r0, r5
    c978:	mov	r0, r1
    c97c:	beq	c9dc <find_ud+0xdc>
    c980:	ldr	r1, [pc, #92]	; c9e4 <find_ud+0xe4>
    c984:	ldr	r1, [pc, r1]
    c988:	ldr	r1, [r1, r0, lsl #2]
    c98c:	cmp	r1, #0
    c990:	beq	c970 <find_ud+0x70>
    c994:	ldr	r2, [r1, #60]	; 0x3c
    c998:	ldr	r3, [r1, #84]	; 0x54
    c99c:	ldr	r7, [r1, #100]	; 0x64
    c9a0:	ldr	r6, [r1, #120]	; 0x78
    c9a4:	ldr	r2, [r2, #124]	; 0x7c
    c9a8:	ldr	r3, [r3, #124]	; 0x7c
    c9ac:	orr	r2, r3, r2
    c9b0:	ldr	r3, [r1, #128]	; 0x80
    c9b4:	orr	r2, r2, r3
    c9b8:	str	r2, [r1, #128]	; 0x80
    c9bc:	bic	r2, r2, r6
    c9c0:	ldr	r3, [r1, #124]	; 0x7c
    c9c4:	orr	r2, r3, r2
    c9c8:	str	r2, [r1, #124]	; 0x7c
    c9cc:	cmp	r7, #0
    c9d0:	mov	r1, r7
    c9d4:	bne	c994 <find_ud+0x94>
    c9d8:	b	c970 <find_ud+0x70>
    c9dc:	pop	{r4, r5, r6, r7, fp, pc}
    c9e0:	.word	0x000241e8
    c9e4:	.word	0x00024198

0000c9e8 <find_edom>:
    c9e8:	push	{r4, r5, fp, lr}
    c9ec:	add	fp, sp, #8
    c9f0:	mov	r4, r0
    c9f4:	ldr	r0, [pc, #164]	; caa0 <find_edom+0xb8>
    c9f8:	ldr	r0, [pc, r0]
    c9fc:	ldr	r5, [pc, #160]	; caa4 <find_edom+0xbc>
    ca00:	ldr	r5, [pc, r5]
    ca04:	mul	r0, r5, r0
    ca08:	cmp	r0, #1
    ca0c:	blt	ca24 <find_edom+0x3c>
    ca10:	lsl	r2, r0, #2
    ca14:	ldr	r0, [pc, #140]	; caa8 <find_edom+0xc0>
    ca18:	ldr	r0, [pc, r0]
    ca1c:	mov	r1, #255	; 0xff
    ca20:	bl	f40 <memset@plt>
    ca24:	ldr	r0, [r4, #56]	; 0x38
    ca28:	lsl	r5, r5, #2
    ca2c:	mov	r1, #0
    ca30:	mov	r2, r5
    ca34:	bl	f40 <memset@plt>
    ca38:	ldr	r0, [r4, #80]	; 0x50
    ca3c:	mov	r1, #0
    ca40:	mov	r2, r5
    ca44:	bl	f40 <memset@plt>
    ca48:	ldr	r4, [r4, #36]	; 0x24
    ca4c:	cmp	r4, #0
    ca50:	popmi	{r4, r5, fp, pc}
    ca54:	b	ca68 <find_edom+0x80>
    ca58:	sub	r0, r4, #1
    ca5c:	cmp	r4, #0
    ca60:	mov	r4, r0
    ca64:	ble	ca9c <find_edom+0xb4>
    ca68:	ldr	r0, [pc, #60]	; caac <find_edom+0xc4>
    ca6c:	ldr	r0, [pc, r0]
    ca70:	ldr	r5, [r0, r4, lsl #2]
    ca74:	cmp	r5, #0
    ca78:	beq	ca58 <find_edom+0x70>
    ca7c:	add	r0, r5, #48	; 0x30
    ca80:	bl	cecc <propedom>
    ca84:	add	r0, r5, #72	; 0x48
    ca88:	bl	cecc <propedom>
    ca8c:	ldr	r5, [r5, #100]	; 0x64
    ca90:	cmp	r5, #0
    ca94:	bne	ca7c <find_edom+0x94>
    ca98:	b	ca58 <find_edom+0x70>
    ca9c:	pop	{r4, r5, fp, pc}
    caa0:	.word	0x00023cf4
    caa4:	.word	0x00023cf0
    caa8:	.word	0x00023cd0
    caac:	.word	0x000240b0

0000cab0 <opt_blks>:
    cab0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    cab4:	add	fp, sp, #24
    cab8:	mov	r5, r1
    cabc:	mov	r4, r0
    cac0:	bl	cf74 <init_val>
    cac4:	ldr	r8, [r4, #36]	; 0x24
    cac8:	mov	r0, r4
    cacc:	bl	cfec <find_inedges>
    cad0:	cmp	r8, #0
    cad4:	bmi	cb20 <opt_blks+0x70>
    cad8:	mov	r7, r8
    cadc:	b	caf0 <opt_blks+0x40>
    cae0:	sub	r0, r7, #1
    cae4:	cmp	r7, #0
    cae8:	mov	r7, r0
    caec:	ble	cb20 <opt_blks+0x70>
    caf0:	ldr	r0, [pc, #240]	; cbe8 <opt_blks+0x138>
    caf4:	ldr	r0, [pc, r0]
    caf8:	ldr	r6, [r0, r7, lsl #2]
    cafc:	cmp	r6, #0
    cb00:	beq	cae0 <opt_blks+0x30>
    cb04:	mov	r0, r6
    cb08:	mov	r1, r5
    cb0c:	bl	d09c <opt_blk>
    cb10:	ldr	r6, [r6, #100]	; 0x64
    cb14:	cmp	r6, #0
    cb18:	bne	cb04 <opt_blks+0x54>
    cb1c:	b	cae0 <opt_blks+0x30>
    cb20:	cmp	r5, #0
    cb24:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    cb28:	cmp	r8, #1
    cb2c:	blt	cbdc <opt_blks+0x12c>
    cb30:	mov	r5, #1
    cb34:	b	cb48 <opt_blks+0x98>
    cb38:	add	r0, r5, #1
    cb3c:	cmp	r5, r8
    cb40:	mov	r5, r0
    cb44:	beq	cb7c <opt_blks+0xcc>
    cb48:	ldr	r0, [pc, #156]	; cbec <opt_blks+0x13c>
    cb4c:	ldr	r0, [pc, r0]
    cb50:	ldr	r6, [r0, r5, lsl #2]
    cb54:	cmp	r6, #0
    cb58:	beq	cb38 <opt_blks+0x88>
    cb5c:	add	r0, r6, #48	; 0x30
    cb60:	bl	d238 <opt_j>
    cb64:	add	r0, r6, #72	; 0x48
    cb68:	bl	d238 <opt_j>
    cb6c:	ldr	r6, [r6, #100]	; 0x64
    cb70:	cmp	r6, #0
    cb74:	bne	cb5c <opt_blks+0xac>
    cb78:	b	cb38 <opt_blks+0x88>
    cb7c:	mov	r0, r4
    cb80:	bl	cfec <find_inedges>
    cb84:	cmp	r8, #1
    cb88:	blt	cbd8 <opt_blks+0x128>
    cb8c:	mov	r5, #1
    cb90:	b	cba4 <opt_blks+0xf4>
    cb94:	add	r0, r5, #1
    cb98:	cmp	r5, r8
    cb9c:	mov	r5, r0
    cba0:	beq	cbd8 <opt_blks+0x128>
    cba4:	ldr	r0, [pc, #68]	; cbf0 <opt_blks+0x140>
    cba8:	ldr	r0, [pc, r0]
    cbac:	ldr	r4, [r0, r5, lsl #2]
    cbb0:	cmp	r4, #0
    cbb4:	beq	cb94 <opt_blks+0xe4>
    cbb8:	mov	r0, r4
    cbbc:	bl	d37c <or_pullup>
    cbc0:	mov	r0, r4
    cbc4:	bl	d4c8 <and_pullup>
    cbc8:	ldr	r4, [r4, #100]	; 0x64
    cbcc:	cmp	r4, #0
    cbd0:	bne	cbb8 <opt_blks+0x108>
    cbd4:	b	cb94 <opt_blks+0xe4>
    cbd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    cbdc:	mov	r0, r4
    cbe0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    cbe4:	b	cfec <find_inedges>
    cbe8:	.word	0x00024028
    cbec:	.word	0x00023fd0
    cbf0:	.word	0x00023f74

0000cbf4 <find_levels_r>:
    cbf4:	push	{r4, sl, fp, lr}
    cbf8:	add	fp, sp, #8
    cbfc:	mov	r4, r0
    cc00:	ldr	r1, [r0, #24]
    cc04:	ldr	r0, [pc, #100]	; cc70 <find_levels_r+0x7c>
    cc08:	ldr	r0, [pc, r0]
    cc0c:	cmp	r1, r0
    cc10:	popeq	{r4, sl, fp, pc}
    cc14:	mov	r1, #0
    cc18:	str	r1, [r4, #100]	; 0x64
    cc1c:	str	r0, [r4, #24]
    cc20:	ldr	r0, [r4, #60]	; 0x3c
    cc24:	cmp	r0, #0
    cc28:	beq	cc54 <find_levels_r+0x60>
    cc2c:	bl	cbf4 <find_levels_r>
    cc30:	ldr	r0, [r4, #84]	; 0x54
    cc34:	bl	cbf4 <find_levels_r>
    cc38:	ldr	r0, [r4, #60]	; 0x3c
    cc3c:	ldr	r1, [r4, #84]	; 0x54
    cc40:	ldr	r0, [r0, #36]	; 0x24
    cc44:	ldr	r1, [r1, #36]	; 0x24
    cc48:	cmp	r0, r1
    cc4c:	movgt	r1, r0
    cc50:	add	r1, r1, #1
    cc54:	str	r1, [r4, #36]	; 0x24
    cc58:	ldr	r0, [pc, #20]	; cc74 <find_levels_r+0x80>
    cc5c:	ldr	r0, [pc, r0]
    cc60:	ldr	r2, [r0, r1, lsl #2]
    cc64:	str	r2, [r4, #100]	; 0x64
    cc68:	str	r4, [r0, r1, lsl #2]
    cc6c:	pop	{r4, sl, fp, pc}
    cc70:	.word	0x00023ac0
    cc74:	.word	0x00023ec0

0000cc78 <compute_local_ud>:
    cc78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc7c:	add	fp, sp, #28
    cc80:	sub	sp, sp, #4
    cc84:	mov	r8, r0
    cc88:	ldr	r5, [r0, #4]
    cc8c:	cmp	r5, #0
    cc90:	beq	cd24 <compute_local_ud+0xac>
    cc94:	mov	r6, #0
    cc98:	mov	sl, #131072	; 0x20000
    cc9c:	mov	r9, #1
    cca0:	mov	r4, #0
    cca4:	mov	r7, #0
    cca8:	b	ccb8 <compute_local_ud+0x40>
    ccac:	ldr	r5, [r5, #16]
    ccb0:	cmp	r5, #0
    ccb4:	beq	cd30 <compute_local_ud+0xb8>
    ccb8:	ldr	r0, [r5]
    ccbc:	cmn	r0, #1
    ccc0:	beq	ccac <compute_local_ud+0x34>
    ccc4:	mov	r0, r5
    ccc8:	bl	cda0 <atomuse>
    cccc:	cmp	r0, #0
    ccd0:	bmi	cd04 <compute_local_ud+0x8c>
    ccd4:	cmp	r0, #18
    ccd8:	bne	ccf4 <compute_local_ud+0x7c>
    ccdc:	mov	r0, #65536	; 0x10000
    cce0:	bic	r0, r0, r7
    cce4:	bic	r1, sl, r7
    cce8:	orr	r1, r1, r4
    ccec:	orr	r4, r1, r0
    ccf0:	b	cd04 <compute_local_ud+0x8c>
    ccf4:	cmp	r0, #17
    ccf8:	bgt	cd9c <compute_local_ud+0x124>
    ccfc:	tst	r7, r9, lsl r0
    cd00:	orreq	r4, r4, r9, lsl r0
    cd04:	mov	r0, r5
    cd08:	bl	ce54 <atomdef>
    cd0c:	cmp	r0, #0
    cd10:	bmi	ccac <compute_local_ud+0x34>
    cd14:	tst	r4, r9, lsl r0
    cd18:	orreq	r6, r6, r9, lsl r0
    cd1c:	orr	r7, r7, r9, lsl r0
    cd20:	b	ccac <compute_local_ud+0x34>
    cd24:	mov	r7, #0
    cd28:	mov	r4, #0
    cd2c:	mov	r6, #0
    cd30:	mov	r0, r8
    cd34:	ldr	r1, [r0, #8]!
    cd38:	and	r1, r1, #7
    cd3c:	cmp	r1, #5
    cd40:	bne	cd88 <compute_local_ud+0x110>
    cd44:	bl	cda0 <atomuse>
    cd48:	cmp	r0, #0
    cd4c:	bmi	cd88 <compute_local_ud+0x110>
    cd50:	cmp	r0, #18
    cd54:	bne	cd74 <compute_local_ud+0xfc>
    cd58:	mov	r0, #65536	; 0x10000
    cd5c:	bic	r0, r0, r7
    cd60:	mov	r1, #131072	; 0x20000
    cd64:	bic	r1, r1, r7
    cd68:	orr	r1, r1, r4
    cd6c:	orr	r4, r1, r0
    cd70:	b	cd88 <compute_local_ud+0x110>
    cd74:	cmp	r0, #17
    cd78:	bgt	cd9c <compute_local_ud+0x124>
    cd7c:	mov	r1, #1
    cd80:	tst	r7, r1, lsl r0
    cd84:	orreq	r4, r4, r1, lsl r0
    cd88:	str	r7, [r8, #116]	; 0x74
    cd8c:	str	r6, [r8, #120]	; 0x78
    cd90:	str	r4, [r8, #124]	; 0x7c
    cd94:	sub	sp, fp, #28
    cd98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd9c:	bl	fc4 <abort@plt>

0000cda0 <atomuse>:
    cda0:	push	{fp, lr}
    cda4:	mov	fp, sp
    cda8:	mov	lr, r0
    cdac:	ldr	r2, [r0]
    cdb0:	mvn	r0, #0
    cdb4:	cmn	r2, #1
    cdb8:	popeq	{fp, pc}
    cdbc:	and	ip, r2, #7
    cdc0:	mov	r0, #16
    cdc4:	add	r3, pc, #4
    cdc8:	ldr	r1, [r3, ip, lsl #2]
    cdcc:	add	pc, r3, r1
    cdd0:	.word	0x00000020
    cdd4:	.word	0x00000020
    cdd8:	.word	0x00000080
    cddc:	.word	0x0000004c
    cde0:	.word	0x0000003c
    cde4:	.word	0x0000003c
    cde8:	.word	0x00000054
    cdec:	.word	0x00000070
    cdf0:	and	r0, r2, #224	; 0xe0
    cdf4:	cmp	r0, #64	; 0x40
    cdf8:	beq	ce1c <atomuse+0x7c>
    cdfc:	cmp	r0, #96	; 0x60
    ce00:	ldreq	r0, [lr, #12]
    ce04:	mvnne	r0, #0
    ce08:	pop	{fp, pc}
    ce0c:	mov	r0, #18
    ce10:	tst	r2, #8
    ce14:	movweq	r0, #16
    ce18:	pop	{fp, pc}
    ce1c:	mov	r0, #17
    ce20:	pop	{fp, pc}
    ce24:	and	r1, r2, #24
    ce28:	mvn	r0, #0
    ce2c:	cmp	r1, #8
    ce30:	movweq	r0, #17
    ce34:	cmp	r1, #16
    ce38:	moveq	r0, r1
    ce3c:	pop	{fp, pc}
    ce40:	and	r1, r2, #248	; 0xf8
    ce44:	mov	r0, #16
    ce48:	cmp	r1, #128	; 0x80
    ce4c:	movweq	r0, #17
    ce50:	pop	{fp, pc}

0000ce54 <atomdef>:
    ce54:	mov	ip, r0
    ce58:	ldr	r2, [r0]
    ce5c:	mvn	r0, #0
    ce60:	cmn	r2, #1
    ce64:	bxeq	lr
    ce68:	and	r3, r2, #7
    ce6c:	cmp	r3, #7
    ce70:	bhi	ceb4 <atomdef+0x60>
    ce74:	mov	r0, #16
    ce78:	add	r1, pc, #4
    ce7c:	ldr	r3, [r1, r3, lsl #2]
    ce80:	add	pc, r1, r3
    ce84:	.word	0x00000034
    ce88:	.word	0x00000028
    ce8c:	.word	0x00000020
    ce90:	.word	0x00000020
    ce94:	.word	0x00000034
    ce98:	.word	0x00000030
    ce9c:	.word	0x00000030
    cea0:	.word	0x00000038
    cea4:	ldr	r0, [ip, #12]
    cea8:	bx	lr
    ceac:	mov	r0, #17
    ceb0:	bx	lr
    ceb4:	mvn	r0, #0
    ceb8:	bx	lr
    cebc:	mov	r0, #16
    cec0:	tst	r2, #248	; 0xf8
    cec4:	movweq	r0, #17
    cec8:	bx	lr

0000cecc <propedom>:
    cecc:	push	{r4, sl, fp, lr}
    ced0:	add	fp, sp, #8
    ced4:	ldr	r1, [r0]
    ced8:	ldr	r2, [r0, #8]
    cedc:	lsr	r3, r1, #5
    cee0:	ldr	ip, [r2, r3, lsl #2]
    cee4:	and	lr, r1, #31
    cee8:	mov	r1, #1
    ceec:	orr	r1, ip, r1, lsl lr
    cef0:	str	r1, [r2, r3, lsl #2]
    cef4:	ldr	r2, [r0, #12]
    cef8:	cmp	r2, #0
    cefc:	beq	cf6c <propedom+0xa0>
    cf00:	ldr	r1, [pc, #104]	; cf70 <propedom+0xa4>
    cf04:	ldr	r1, [pc, r1]
    cf08:	cmp	r1, #1
    cf0c:	blt	cf6c <propedom+0xa0>
    cf10:	ldr	lr, [r2, #56]	; 0x38
    cf14:	ldr	ip, [r0, #8]
    cf18:	mov	r3, #0
    cf1c:	ldr	r2, [ip, -r3, lsl #2]
    cf20:	ldr	r4, [lr, -r3, lsl #2]
    cf24:	and	r2, r4, r2
    cf28:	str	r2, [lr, -r3, lsl #2]
    cf2c:	sub	r3, r3, #1
    cf30:	add	r2, r1, r3
    cf34:	cmp	r2, #0
    cf38:	bgt	cf1c <propedom+0x50>
    cf3c:	cmp	r1, #1
    cf40:	poplt	{r4, sl, fp, pc}
    cf44:	ldr	r2, [r0, #8]
    cf48:	ldr	r0, [r0, #12]
    cf4c:	ldr	r0, [r0, #80]	; 0x50
    cf50:	ldr	r3, [r2], #4
    cf54:	ldr	r4, [r0]
    cf58:	and	r3, r4, r3
    cf5c:	str	r3, [r0], #4
    cf60:	sub	r1, r1, #1
    cf64:	cmp	r1, #0
    cf68:	bgt	cf50 <propedom+0x84>
    cf6c:	pop	{r4, sl, fp, pc}
    cf70:	.word	0x000237ec

0000cf74 <init_val>:
    cf74:	push	{fp, lr}
    cf78:	mov	fp, sp
    cf7c:	ldr	r0, [pc, #80]	; cfd4 <init_val+0x60>
    cf80:	add	r0, pc, r0
    cf84:	mov	r1, #0
    cf88:	str	r1, [r0]
    cf8c:	ldr	r0, [pc, #68]	; cfd8 <init_val+0x64>
    cf90:	ldr	r0, [pc, r0]
    cf94:	ldr	r1, [pc, #64]	; cfdc <init_val+0x68>
    cf98:	add	r1, pc, r1
    cf9c:	str	r0, [r1]
    cfa0:	ldr	r0, [pc, #56]	; cfe0 <init_val+0x6c>
    cfa4:	ldr	r0, [pc, r0]
    cfa8:	ldr	r1, [pc, #52]	; cfe4 <init_val+0x70>
    cfac:	ldr	r1, [pc, r1]
    cfb0:	lsl	r2, r1, #3
    cfb4:	mov	r1, #0
    cfb8:	bl	f40 <memset@plt>
    cfbc:	ldr	r0, [pc, #36]	; cfe8 <init_val+0x74>
    cfc0:	add	r0, pc, r0
    cfc4:	mov	r1, #0
    cfc8:	mov	r2, #852	; 0x354
    cfcc:	pop	{fp, lr}
    cfd0:	b	f40 <memset@plt>
    cfd4:	.word	0x00023774
    cfd8:	.word	0x00023b9c
    cfdc:	.word	0x00023b90
    cfe0:	.word	0x00023b8c
    cfe4:	.word	0x0002374c
    cfe8:	.word	0x00023740

0000cfec <find_inedges>:
    cfec:	push	{r4, r5, fp, lr}
    cff0:	add	fp, sp, #8
    cff4:	ldr	r1, [pc, #144]	; d08c <find_inedges+0xa0>
    cff8:	ldr	r1, [pc, r1]
    cffc:	cmp	r1, #1
    d000:	blt	d030 <find_inedges+0x44>
    d004:	mov	r1, #0
    d008:	ldr	r2, [pc, #128]	; d090 <find_inedges+0xa4>
    d00c:	ldr	r2, [pc, r2]
    d010:	mov	r3, #0
    d014:	ldr	r5, [pc, #120]	; d094 <find_inedges+0xa8>
    d018:	ldr	r5, [pc, r5]
    d01c:	ldr	r5, [r5, r3, lsl #2]
    d020:	str	r1, [r5, #112]	; 0x70
    d024:	add	r3, r3, #1
    d028:	cmp	r3, r2
    d02c:	blt	d014 <find_inedges+0x28>
    d030:	ldr	r4, [r0, #36]	; 0x24
    d034:	cmp	r4, #1
    d038:	poplt	{r4, r5, fp, pc}
    d03c:	b	d04c <find_inedges+0x60>
    d040:	sub	r4, r4, #1
    d044:	cmp	r4, #0
    d048:	ble	d088 <find_inedges+0x9c>
    d04c:	ldr	r0, [pc, #68]	; d098 <find_inedges+0xac>
    d050:	ldr	r0, [pc, r0]
    d054:	ldr	r5, [r0, r4, lsl #2]
    d058:	cmp	r5, #0
    d05c:	beq	d040 <find_inedges+0x54>
    d060:	ldr	r1, [r5, #60]	; 0x3c
    d064:	add	r0, r5, #48	; 0x30
    d068:	bl	d614 <link_inedge>
    d06c:	ldr	r1, [r5, #84]	; 0x54
    d070:	add	r0, r5, #72	; 0x48
    d074:	bl	d614 <link_inedge>
    d078:	ldr	r5, [r5, #100]	; 0x64
    d07c:	cmp	r5, #0
    d080:	bne	d060 <find_inedges+0x74>
    d084:	b	d040 <find_inedges+0x54>
    d088:	pop	{r4, r5, fp, pc}
    d08c:	.word	0x000236e0
    d090:	.word	0x000236cc
    d094:	.word	0x00023b08
    d098:	.word	0x00023acc

0000d09c <opt_blk>:
    d09c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d0a0:	add	fp, sp, #24
    d0a4:	mov	r5, r1
    d0a8:	mov	r4, r0
    d0ac:	add	r6, r0, #136	; 0x88
    d0b0:	ldr	r7, [r0, #112]	; 0x70
    d0b4:	cmp	r7, #0
    d0b8:	beq	d114 <opt_blk+0x78>
    d0bc:	ldr	r0, [r7, #16]
    d0c0:	add	r1, r0, #136	; 0x88
    d0c4:	mov	r0, r6
    d0c8:	mov	r2, #72	; 0x48
    d0cc:	bl	e80 <memcpy@plt>
    d0d0:	ldr	r0, [r7, #20]
    d0d4:	cmp	r0, #0
    d0d8:	beq	d148 <opt_blk+0xac>
    d0dc:	mov	r1, #0
    d0e0:	mov	r2, #34	; 0x22
    d0e4:	ldr	r3, [r4, r2, lsl #2]
    d0e8:	ldr	r7, [r0, #16]
    d0ec:	ldr	r7, [r7, r2, lsl #2]
    d0f0:	cmp	r3, r7
    d0f4:	strne	r1, [r4, r2, lsl #2]
    d0f8:	add	r2, r2, #1
    d0fc:	cmp	r2, #52	; 0x34
    d100:	bne	d0e4 <opt_blk+0x48>
    d104:	ldr	r0, [r0, #20]
    d108:	cmp	r0, #0
    d10c:	bne	d0e0 <opt_blk+0x44>
    d110:	b	d148 <opt_blk+0xac>
    d114:	mov	r0, #0
    d118:	vmov.i32	q8, #0	; 0x00000000
    d11c:	str	r0, [r6, #64]	; 0x40
    d120:	mov	r1, #68	; 0x44
    d124:	mov	r2, r6
    d128:	vst1.32	{d16-d17}, [r2], r1
    d12c:	str	r0, [r2]
    d130:	add	r0, r6, #48	; 0x30
    d134:	vst1.32	{d16-d17}, [r0]
    d138:	add	r0, r6, #32
    d13c:	vst1.32	{d16-d17}, [r0]
    d140:	add	r0, r6, #16
    d144:	vst1.32	{d16-d17}, [r0]
    d148:	ldr	r7, [r4, #4]
    d14c:	ldr	r9, [r4, #200]	; 0xc8
    d150:	ldr	r8, [r4, #204]	; 0xcc
    d154:	cmp	r7, #0
    d158:	beq	d178 <opt_blk+0xdc>
    d15c:	mov	r0, r7
    d160:	mov	r1, r6
    d164:	mov	r2, r5
    d168:	bl	d624 <opt_stmt>
    d16c:	ldr	r7, [r7, #16]
    d170:	cmp	r7, #0
    d174:	bne	d15c <opt_blk+0xc0>
    d178:	cmp	r5, #0
    d17c:	beq	d1e8 <opt_blk+0x14c>
    d180:	cmp	r9, #0
    d184:	beq	d1b4 <opt_blk+0x118>
    d188:	ldr	r0, [r4, #128]	; 0x80
    d18c:	cmp	r0, #0
    d190:	bne	d1b4 <opt_blk+0x118>
    d194:	cmp	r8, #0
    d198:	beq	d1b4 <opt_blk+0x118>
    d19c:	ldr	r0, [r4, #200]	; 0xc8
    d1a0:	cmp	r0, r9
    d1a4:	bne	d1b4 <opt_blk+0x118>
    d1a8:	ldr	r0, [r4, #204]	; 0xcc
    d1ac:	cmp	r0, r8
    d1b0:	beq	d1c4 <opt_blk+0x128>
    d1b4:	ldr	r0, [r4, #8]
    d1b8:	and	r0, r0, #7
    d1bc:	cmp	r0, #6
    d1c0:	bne	d1e8 <opt_blk+0x14c>
    d1c4:	ldr	r0, [r4, #4]
    d1c8:	cmp	r0, #0
    d1cc:	beq	d1f8 <opt_blk+0x15c>
    d1d0:	mov	r0, #0
    d1d4:	str	r0, [r4, #4]
    d1d8:	ldr	r1, [pc, #84]	; d234 <opt_blk+0x198>
    d1dc:	add	r1, pc, r1
    d1e0:	strb	r0, [r1]
    d1e4:	b	d1f8 <opt_blk+0x15c>
    d1e8:	mov	r0, r4
    d1ec:	bl	dd5c <opt_peep>
    d1f0:	mov	r0, r4
    d1f4:	bl	e144 <opt_deadstores>
    d1f8:	ldrb	r0, [r4, #8]
    d1fc:	tst	r0, #8
    d200:	bne	d218 <opt_blk+0x17c>
    d204:	ldr	r1, [r4, #20]
    d208:	mov	r0, #0
    d20c:	mov	r2, #0
    d210:	bl	e210 <F>
    d214:	b	d21c <opt_blk+0x180>
    d218:	ldr	r0, [r4, #204]	; 0xcc
    d21c:	str	r0, [r4, #132]	; 0x84
    d220:	ldr	r0, [r4, #8]
    d224:	str	r0, [r4, #52]	; 0x34
    d228:	rsb	r0, r0, #0
    d22c:	str	r0, [r4, #76]	; 0x4c
    d230:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d234:	.word	0x000234f8

0000d238 <opt_j>:
    d238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d23c:	add	fp, sp, #28
    d240:	sub	sp, sp, #12
    d244:	str	r0, [sp, #8]
    d248:	ldr	r5, [r0, #12]
    d24c:	ldr	r1, [r5, #60]	; 0x3c
    d250:	cmp	r1, #0
    d254:	beq	d364 <opt_j+0x12c>
    d258:	ldr	r0, [r5, #84]	; 0x54
    d25c:	cmp	r1, r0
    d260:	bne	d294 <opt_j+0x5c>
    d264:	ldr	r0, [sp, #8]
    d268:	ldr	r0, [r0, #16]
    d26c:	bl	e4d4 <use_conflict>
    d270:	cmp	r0, #0
    d274:	bne	d294 <opt_j+0x5c>
    d278:	ldr	r0, [pc, #236]	; d36c <opt_j+0x134>
    d27c:	add	r0, pc, r0
    d280:	mov	r1, #0
    d284:	strb	r1, [r0]
    d288:	ldr	r0, [r5, #60]	; 0x3c
    d28c:	ldr	r1, [sp, #8]
    d290:	str	r0, [r1, #12]
    d294:	ldr	r0, [pc, #212]	; d370 <opt_j+0x138>
    d298:	ldr	r0, [pc, r0]
    d29c:	str	r0, [sp]
    d2a0:	cmp	r0, #1
    d2a4:	blt	d364 <opt_j+0x12c>
    d2a8:	ldr	r0, [sp, #8]
    d2ac:	ldr	r0, [r0, #8]
    d2b0:	str	r0, [sp, #4]
    d2b4:	ldr	sl, [pc, #184]	; d374 <opt_j+0x13c>
    d2b8:	ldr	sl, [pc, sl]
    d2bc:	mov	r8, #0
    d2c0:	b	d2d4 <opt_j+0x9c>
    d2c4:	add	r8, r8, #1
    d2c8:	ldr	r0, [sp]
    d2cc:	cmp	r8, r0
    d2d0:	beq	d364 <opt_j+0x12c>
    d2d4:	ldr	r0, [sp, #4]
    d2d8:	ldr	r9, [r0, r8, lsl #2]
    d2dc:	cmp	r9, #0
    d2e0:	beq	d2c4 <opt_j+0x8c>
    d2e4:	lsl	r7, r8, #5
    d2e8:	ldr	r0, [sp, #8]
    d2ec:	ldr	r5, [r0, #12]
    d2f0:	b	d304 <opt_j+0xcc>
    d2f4:	mov	r0, #1
    d2f8:	bic	r9, r9, r0, lsl r4
    d2fc:	cmp	r9, #0
    d300:	beq	d2c4 <opt_j+0x8c>
    d304:	rbit	r0, r9
    d308:	clz	r4, r0
    d30c:	orr	r0, r4, r7
    d310:	ldr	r1, [sl, r0, lsl #2]
    d314:	mov	r0, r5
    d318:	bl	e534 <fold_edge>
    d31c:	cmp	r0, #0
    d320:	beq	d2f4 <opt_j+0xbc>
    d324:	mov	r6, r0
    d328:	ldr	r0, [sp, #8]
    d32c:	ldr	r0, [r0, #16]
    d330:	mov	r1, r6
    d334:	bl	e4d4 <use_conflict>
    d338:	cmp	r0, #0
    d33c:	bne	d2f4 <opt_j+0xbc>
    d340:	ldr	r0, [pc, #48]	; d378 <opt_j+0x140>
    d344:	add	r0, pc, r0
    d348:	mov	r1, #0
    d34c:	strb	r1, [r0]
    d350:	ldr	r0, [sp, #8]
    d354:	str	r6, [r0, #12]
    d358:	ldr	r0, [r6, #60]	; 0x3c
    d35c:	cmp	r0, #0
    d360:	bne	d2a8 <opt_j+0x70>
    d364:	sub	sp, fp, #28
    d368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d36c:	.word	0x00023458
    d370:	.word	0x00023458
    d374:	.word	0x0002386c
    d378:	.word	0x00023390

0000d37c <or_pullup>:
    d37c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d380:	add	fp, sp, #24
    d384:	ldr	r2, [r0, #112]	; 0x70
    d388:	cmp	r2, #0
    d38c:	beq	d4c0 <or_pullup+0x144>
    d390:	ldr	r4, [r2, #16]
    d394:	ldr	r1, [r4, #200]	; 0xc8
    d398:	ldr	r2, [r2, #20]
    d39c:	cmp	r2, #0
    d3a0:	beq	d3b8 <or_pullup+0x3c>
    d3a4:	ldr	r3, [r2, #16]
    d3a8:	ldr	r3, [r3, #200]	; 0xc8
    d3ac:	cmp	r1, r3
    d3b0:	beq	d398 <or_pullup+0x1c>
    d3b4:	b	d4c0 <or_pullup+0x144>
    d3b8:	ldr	r2, [r4, #60]!	; 0x3c
    d3bc:	cmp	r2, r0
    d3c0:	addne	r4, r4, #24
    d3c4:	mov	ip, #1
    d3c8:	mov	r6, #1
    d3cc:	mov	lr, r6
    d3d0:	ldr	r6, [r4]
    d3d4:	cmp	r6, #0
    d3d8:	beq	d4c0 <or_pullup+0x144>
    d3dc:	mov	r8, r4
    d3e0:	ldr	r3, [r0, #60]	; 0x3c
    d3e4:	ldr	r4, [r6, #60]	; 0x3c
    d3e8:	cmp	r4, r3
    d3ec:	bne	d4c0 <or_pullup+0x144>
    d3f0:	ldr	r4, [r0]
    d3f4:	and	r7, r4, #31
    d3f8:	ldr	r2, [r6, #104]	; 0x68
    d3fc:	lsr	r5, r4, #5
    d400:	ldr	r2, [r2, r5, lsl #2]
    d404:	tst	r2, ip, lsl r7
    d408:	beq	d4c0 <or_pullup+0x144>
    d40c:	add	r4, r6, #84	; 0x54
    d410:	ldr	r2, [r6, #200]	; 0xc8
    d414:	mov	r6, #0
    d418:	cmp	r2, r1
    d41c:	beq	d3cc <or_pullup+0x50>
    d420:	lsl	r6, ip, r7
    d424:	ldr	ip, [r4]
    d428:	cmp	ip, #0
    d42c:	beq	d4c0 <or_pullup+0x144>
    d430:	ldr	r2, [ip, #60]	; 0x3c
    d434:	cmp	r2, r3
    d438:	bne	d4c0 <or_pullup+0x144>
    d43c:	ldr	r2, [ip, #104]	; 0x68
    d440:	ldr	r2, [r2, r5, lsl #2]
    d444:	tst	r2, r6
    d448:	beq	d4c0 <or_pullup+0x144>
    d44c:	mov	r7, r4
    d450:	add	r4, ip, #84	; 0x54
    d454:	ldr	r2, [ip, #200]	; 0xc8
    d458:	cmp	r2, r1
    d45c:	bne	d424 <or_pullup+0xa8>
    d460:	ldr	r1, [r4]
    d464:	str	r1, [r7]
    d468:	ldr	r1, [r8]
    d46c:	str	r1, [r4]
    d470:	cmp	lr, #0
    d474:	beq	d4ac <or_pullup+0x130>
    d478:	ldr	r1, [r0, #112]	; 0x70
    d47c:	cmp	r1, #0
    d480:	beq	d4b0 <or_pullup+0x134>
    d484:	ldr	r2, [r1, #16]
    d488:	ldr	r3, [r2, #60]	; 0x3c
    d48c:	cmp	r3, r0
    d490:	mov	r3, #84	; 0x54
    d494:	movweq	r3, #60	; 0x3c
    d498:	str	ip, [r2, r3]
    d49c:	ldr	r1, [r1, #20]
    d4a0:	cmp	r1, #0
    d4a4:	bne	d484 <or_pullup+0x108>
    d4a8:	b	d4b0 <or_pullup+0x134>
    d4ac:	str	ip, [r8]
    d4b0:	ldr	r0, [pc, #12]	; d4c4 <or_pullup+0x148>
    d4b4:	add	r0, pc, r0
    d4b8:	mov	r1, #0
    d4bc:	strb	r1, [r0]
    d4c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    d4c4:	.word	0x00023220

0000d4c8 <and_pullup>:
    d4c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d4cc:	add	fp, sp, #24
    d4d0:	ldr	r2, [r0, #112]	; 0x70
    d4d4:	cmp	r2, #0
    d4d8:	beq	d60c <and_pullup+0x144>
    d4dc:	ldr	r4, [r2, #16]
    d4e0:	ldr	r1, [r4, #200]	; 0xc8
    d4e4:	ldr	r2, [r2, #20]
    d4e8:	cmp	r2, #0
    d4ec:	beq	d504 <and_pullup+0x3c>
    d4f0:	ldr	r3, [r2, #16]
    d4f4:	ldr	r3, [r3, #200]	; 0xc8
    d4f8:	cmp	r1, r3
    d4fc:	beq	d4e4 <and_pullup+0x1c>
    d500:	b	d60c <and_pullup+0x144>
    d504:	ldr	r2, [r4, #60]!	; 0x3c
    d508:	cmp	r2, r0
    d50c:	addne	r4, r4, #24
    d510:	mov	ip, #1
    d514:	mov	r6, #1
    d518:	mov	lr, r6
    d51c:	ldr	r6, [r4]
    d520:	cmp	r6, #0
    d524:	beq	d60c <and_pullup+0x144>
    d528:	mov	r8, r4
    d52c:	ldr	r3, [r0, #84]	; 0x54
    d530:	ldr	r4, [r6, #84]	; 0x54
    d534:	cmp	r4, r3
    d538:	bne	d60c <and_pullup+0x144>
    d53c:	ldr	r4, [r0]
    d540:	and	r7, r4, #31
    d544:	ldr	r2, [r6, #104]	; 0x68
    d548:	lsr	r5, r4, #5
    d54c:	ldr	r2, [r2, r5, lsl #2]
    d550:	tst	r2, ip, lsl r7
    d554:	beq	d60c <and_pullup+0x144>
    d558:	add	r4, r6, #60	; 0x3c
    d55c:	ldr	r2, [r6, #200]	; 0xc8
    d560:	mov	r6, #0
    d564:	cmp	r2, r1
    d568:	beq	d518 <and_pullup+0x50>
    d56c:	lsl	r6, ip, r7
    d570:	ldr	ip, [r4]
    d574:	cmp	ip, #0
    d578:	beq	d60c <and_pullup+0x144>
    d57c:	ldr	r2, [ip, #84]	; 0x54
    d580:	cmp	r2, r3
    d584:	bne	d60c <and_pullup+0x144>
    d588:	ldr	r2, [ip, #104]	; 0x68
    d58c:	ldr	r2, [r2, r5, lsl #2]
    d590:	tst	r2, r6
    d594:	beq	d60c <and_pullup+0x144>
    d598:	mov	r7, r4
    d59c:	add	r4, ip, #60	; 0x3c
    d5a0:	ldr	r2, [ip, #200]	; 0xc8
    d5a4:	cmp	r2, r1
    d5a8:	bne	d570 <and_pullup+0xa8>
    d5ac:	ldr	r1, [r4]
    d5b0:	str	r1, [r7]
    d5b4:	ldr	r1, [r8]
    d5b8:	str	r1, [r4]
    d5bc:	cmp	lr, #0
    d5c0:	beq	d5f8 <and_pullup+0x130>
    d5c4:	ldr	r1, [r0, #112]	; 0x70
    d5c8:	cmp	r1, #0
    d5cc:	beq	d5fc <and_pullup+0x134>
    d5d0:	ldr	r2, [r1, #16]
    d5d4:	ldr	r3, [r2, #60]	; 0x3c
    d5d8:	cmp	r3, r0
    d5dc:	mov	r3, #84	; 0x54
    d5e0:	movweq	r3, #60	; 0x3c
    d5e4:	str	ip, [r2, r3]
    d5e8:	ldr	r1, [r1, #20]
    d5ec:	cmp	r1, #0
    d5f0:	bne	d5d0 <and_pullup+0x108>
    d5f4:	b	d5fc <and_pullup+0x134>
    d5f8:	str	ip, [r8]
    d5fc:	ldr	r0, [pc, #12]	; d610 <and_pullup+0x148>
    d600:	add	r0, pc, r0
    d604:	mov	r1, #0
    d608:	strb	r1, [r0]
    d60c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    d610:	.word	0x000230d4

0000d614 <link_inedge>:
    d614:	ldr	r2, [r1, #112]	; 0x70
    d618:	str	r2, [r0, #20]
    d61c:	str	r0, [r1, #112]	; 0x70
    d620:	bx	lr

0000d624 <opt_stmt>:
    d624:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d628:	add	fp, sp, #24
    d62c:	ldr	r7, [r0]
    d630:	cmp	r7, #177	; 0xb1
    d634:	bhi	d9c4 <opt_stmt+0x3a0>
    d638:	mov	r9, r2
    d63c:	mov	r4, r1
    d640:	mov	r5, r0
    d644:	add	r0, pc, #4
    d648:	ldr	r1, [r0, r7, lsl #2]
    d64c:	add	pc, r0, r1
    d650:	.word	0x000004bc
    d654:	.word	0x000004c8
    d658:	.word	0x000004d4
    d65c:	.word	0x000004e4
    d660:	.word	0x000002c8
    d664:	.word	0x00000374
    d668:	.word	0x00000374
    d66c:	.word	0x000004f4
    d670:	.word	0x00000374
    d674:	.word	0x00000374
    d678:	.word	0x00000374
    d67c:	.word	0x00000374
    d680:	.word	0x00000320
    d684:	.word	0x00000374
    d688:	.word	0x00000374
    d68c:	.word	0x00000374
    d690:	.word	0x00000374
    d694:	.word	0x00000374
    d698:	.word	0x00000374
    d69c:	.word	0x00000374
    d6a0:	.word	0x000002c8
    d6a4:	.word	0x00000374
    d6a8:	.word	0x00000374
    d6ac:	.word	0x00000374
    d6b0:	.word	0x00000374
    d6b4:	.word	0x00000374
    d6b8:	.word	0x00000374
    d6bc:	.word	0x00000374
    d6c0:	.word	0x00000320
    d6c4:	.word	0x00000374
    d6c8:	.word	0x00000374
    d6cc:	.word	0x00000374
    d6d0:	.word	0x0000039c
    d6d4:	.word	0x00000374
    d6d8:	.word	0x00000374
    d6dc:	.word	0x00000374
    d6e0:	.word	0x000002c8
    d6e4:	.word	0x00000374
    d6e8:	.word	0x00000374
    d6ec:	.word	0x00000374
    d6f0:	.word	0x0000039c
    d6f4:	.word	0x00000374
    d6f8:	.word	0x00000374
    d6fc:	.word	0x00000374
    d700:	.word	0x00000320
    d704:	.word	0x00000374
    d708:	.word	0x00000374
    d70c:	.word	0x00000374
    d710:	.word	0x0000039c
    d714:	.word	0x00000374
    d718:	.word	0x00000374
    d71c:	.word	0x00000374
    d720:	.word	0x000002c8
    d724:	.word	0x00000374
    d728:	.word	0x00000374
    d72c:	.word	0x00000374
    d730:	.word	0x00000374
    d734:	.word	0x00000374
    d738:	.word	0x00000374
    d73c:	.word	0x00000374
    d740:	.word	0x00000320
    d744:	.word	0x00000374
    d748:	.word	0x00000374
    d74c:	.word	0x00000374
    d750:	.word	0x000003a8
    d754:	.word	0x00000374
    d758:	.word	0x00000374
    d75c:	.word	0x00000374
    d760:	.word	0x000002c8
    d764:	.word	0x00000374
    d768:	.word	0x00000374
    d76c:	.word	0x00000374
    d770:	.word	0x000003a8
    d774:	.word	0x00000374
    d778:	.word	0x00000374
    d77c:	.word	0x00000374
    d780:	.word	0x00000320
    d784:	.word	0x00000374
    d788:	.word	0x00000374
    d78c:	.word	0x00000374
    d790:	.word	0x000003a8
    d794:	.word	0x00000374
    d798:	.word	0x00000374
    d79c:	.word	0x00000374
    d7a0:	.word	0x000002c8
    d7a4:	.word	0x00000374
    d7a8:	.word	0x00000374
    d7ac:	.word	0x00000374
    d7b0:	.word	0x00000374
    d7b4:	.word	0x00000374
    d7b8:	.word	0x00000374
    d7bc:	.word	0x00000374
    d7c0:	.word	0x00000320
    d7c4:	.word	0x00000374
    d7c8:	.word	0x00000374
    d7cc:	.word	0x00000374
    d7d0:	.word	0x00000500
    d7d4:	.word	0x00000550
    d7d8:	.word	0x00000374
    d7dc:	.word	0x00000374
    d7e0:	.word	0x000002c8
    d7e4:	.word	0x00000374
    d7e8:	.word	0x00000374
    d7ec:	.word	0x00000374
    d7f0:	.word	0x00000374
    d7f4:	.word	0x00000374
    d7f8:	.word	0x00000374
    d7fc:	.word	0x00000374
    d800:	.word	0x00000320
    d804:	.word	0x00000374
    d808:	.word	0x00000374
    d80c:	.word	0x00000374
    d810:	.word	0x00000374
    d814:	.word	0x00000374
    d818:	.word	0x00000374
    d81c:	.word	0x00000374
    d820:	.word	0x000002c8
    d824:	.word	0x00000374
    d828:	.word	0x00000374
    d82c:	.word	0x00000374
    d830:	.word	0x00000374
    d834:	.word	0x00000374
    d838:	.word	0x00000374
    d83c:	.word	0x00000374
    d840:	.word	0x00000320
    d844:	.word	0x00000374
    d848:	.word	0x00000374
    d84c:	.word	0x00000374
    d850:	.word	0x000005a8
    d854:	.word	0x00000374
    d858:	.word	0x00000374
    d85c:	.word	0x00000374
    d860:	.word	0x000005d0
    d864:	.word	0x00000374
    d868:	.word	0x00000374
    d86c:	.word	0x00000618
    d870:	.word	0x00000374
    d874:	.word	0x00000374
    d878:	.word	0x00000374
    d87c:	.word	0x00000374
    d880:	.word	0x00000374
    d884:	.word	0x00000374
    d888:	.word	0x00000374
    d88c:	.word	0x00000374
    d890:	.word	0x00000374
    d894:	.word	0x00000374
    d898:	.word	0x00000374
    d89c:	.word	0x00000374
    d8a0:	.word	0x00000374
    d8a4:	.word	0x00000374
    d8a8:	.word	0x00000374
    d8ac:	.word	0x00000374
    d8b0:	.word	0x00000374
    d8b4:	.word	0x00000374
    d8b8:	.word	0x00000374
    d8bc:	.word	0x00000374
    d8c0:	.word	0x00000374
    d8c4:	.word	0x00000374
    d8c8:	.word	0x00000374
    d8cc:	.word	0x00000374
    d8d0:	.word	0x00000374
    d8d4:	.word	0x00000374
    d8d8:	.word	0x00000374
    d8dc:	.word	0x00000374
    d8e0:	.word	0x00000374
    d8e4:	.word	0x00000374
    d8e8:	.word	0x00000374
    d8ec:	.word	0x00000374
    d8f0:	.word	0x00000374
    d8f4:	.word	0x00000374
    d8f8:	.word	0x00000374
    d8fc:	.word	0x00000374
    d900:	.word	0x00000374
    d904:	.word	0x00000374
    d908:	.word	0x00000374
    d90c:	.word	0x00000374
    d910:	.word	0x00000374
    d914:	.word	0x00000620
    d918:	cmp	r9, #0
    d91c:	beq	d9c8 <opt_stmt+0x3a4>
    d920:	ldr	r1, [r5, #12]
    d924:	cmp	r1, #0
    d928:	beq	da60 <opt_stmt+0x43c>
    d92c:	ldr	r6, [r4, #64]	; 0x40
    d930:	ldr	r0, [pc, #1020]	; dd34 <opt_stmt+0x710>
    d934:	ldr	r0, [pc, r0]
    d938:	ldr	r0, [r0, r6, lsl #3]
    d93c:	cmp	r0, #0
    d940:	beq	d9c8 <opt_stmt+0x3a4>
    d944:	mov	r0, #0
    d948:	mov	r2, #0
    d94c:	bl	e210 <F>
    d950:	mov	r2, r0
    d954:	mov	r0, r5
    d958:	mov	r1, r6
    d95c:	bl	e33c <fold_op>
    d960:	ldr	r1, [r5, #12]
    d964:	mov	r0, #0
    d968:	mov	r2, #0
    d96c:	b	db00 <opt_stmt+0x4dc>
    d970:	cmp	r9, #0
    d974:	beq	da98 <opt_stmt+0x474>
    d978:	and	ip, r7, #240	; 0xf0
    d97c:	mov	r8, r4
    d980:	ldr	r1, [r8, #64]!	; 0x40
    d984:	ldr	r3, [pc, #940]	; dd38 <opt_stmt+0x714>
    d988:	ldr	r3, [pc, r3]
    d98c:	ldr	r0, [r3, r1, lsl #3]
    d990:	ldr	r2, [r8, #4]
    d994:	ldr	r6, [r3, r2, lsl #3]
    d998:	cmp	r6, #0
    d99c:	beq	da80 <opt_stmt+0x45c>
    d9a0:	cmp	r0, #0
    d9a4:	beq	dab4 <opt_stmt+0x490>
    d9a8:	mov	r0, r5
    d9ac:	bl	e33c <fold_op>
    d9b0:	ldr	r1, [r5, #12]
    d9b4:	mov	r0, #0
    d9b8:	mov	r2, #0
    d9bc:	bl	e210 <F>
    d9c0:	str	r0, [r8]
    d9c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d9c8:	ldr	r6, [r4, #64]	; 0x40
    d9cc:	ldr	r1, [r5, #12]
    d9d0:	mov	r0, #0
    d9d4:	mov	r2, #0
    d9d8:	bl	e210 <F>
    d9dc:	mov	r2, r0
    d9e0:	mov	r0, r7
    d9e4:	mov	r1, r6
    d9e8:	b	db00 <opt_stmt+0x4dc>
    d9ec:	ldr	r1, [r5, #12]
    d9f0:	mov	r0, r7
    d9f4:	b	dc00 <opt_stmt+0x5dc>
    d9f8:	ldr	r2, [r4, #68]	; 0x44
    d9fc:	cmp	r9, #0
    da00:	beq	daa8 <opt_stmt+0x484>
    da04:	ldr	r0, [pc, #788]	; dd20 <opt_stmt+0x6fc>
    da08:	ldr	r0, [pc, r0]
    da0c:	ldr	r0, [r0, r2, lsl #3]
    da10:	cmp	r0, #0
    da14:	beq	daa8 <opt_stmt+0x484>
    da18:	and	r0, r7, #24
    da1c:	orr	r0, r0, #32
    da20:	str	r0, [r5]
    da24:	ldr	r1, [pc, #760]	; dd24 <opt_stmt+0x700>
    da28:	ldr	r1, [pc, r1]
    da2c:	add	r1, r1, r2, lsl #3
    da30:	ldr	r1, [r1, #4]
    da34:	ldr	r2, [r5, #12]
    da38:	add	r1, r2, r1
    da3c:	str	r1, [r5, #12]
    da40:	mov	r7, #0
    da44:	mov	r2, #0
    da48:	bl	e210 <F>
    da4c:	mov	r2, r0
    da50:	ldr	r0, [pc, #720]	; dd28 <opt_stmt+0x704>
    da54:	add	r0, pc, r0
    da58:	strb	r7, [r0]
    da5c:	b	dc0c <opt_stmt+0x5e8>
    da60:	tst	r7, #176	; 0xb0
    da64:	andne	r0, r7, #240	; 0xf0
    da68:	orrne	r2, r0, #16
    da6c:	cmpne	r2, #112	; 0x70
    da70:	bne	dc8c <opt_stmt+0x668>
    da74:	mvn	r0, #0
    da78:	str	r0, [r5]
    da7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    da80:	cmp	r0, #0
    da84:	beq	da98 <opt_stmt+0x474>
    da88:	add	r0, r3, r1, lsl #3
    da8c:	ldr	r0, [r0, #4]
    da90:	cmp	r0, #0
    da94:	beq	dcb0 <opt_stmt+0x68c>
    da98:	ldr	r1, [r4, #64]	; 0x40
    da9c:	ldr	r2, [r4, #68]	; 0x44
    daa0:	mov	r0, r7
    daa4:	b	db00 <opt_stmt+0x4dc>
    daa8:	ldr	r1, [r5, #12]
    daac:	mov	r0, r7
    dab0:	b	dc04 <opt_stmt+0x5e0>
    dab4:	orr	r6, ip, #4
    dab8:	str	r6, [r5]
    dabc:	ldr	r0, [r4, #68]	; 0x44
    dac0:	ldr	r1, [pc, #628]	; dd3c <opt_stmt+0x718>
    dac4:	ldr	r1, [pc, r1]
    dac8:	add	r0, r1, r0, lsl #3
    dacc:	ldr	r1, [r0, #4]
    dad0:	str	r1, [r5, #12]
    dad4:	ldr	r0, [pc, #612]	; dd40 <opt_stmt+0x71c>
    dad8:	add	r0, pc, r0
    dadc:	mov	r2, #0
    dae0:	strb	r2, [r0]
    dae4:	ldr	r5, [r4, #64]	; 0x40
    dae8:	mov	r0, #0
    daec:	mov	r2, #0
    daf0:	bl	e210 <F>
    daf4:	mov	r2, r0
    daf8:	mov	r0, r6
    dafc:	mov	r1, r5
    db00:	bl	e210 <F>
    db04:	str	r0, [r4, #64]	; 0x40
    db08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    db0c:	ldr	r1, [r5, #12]
    db10:	mov	r0, #0
    db14:	b	dc00 <opt_stmt+0x5dc>
    db18:	ldr	r1, [r5, #12]
    db1c:	mov	r0, #0
    db20:	b	dc78 <opt_stmt+0x654>
    db24:	ldr	r0, [r5, #12]
    db28:	add	r1, r4, r0, lsl #2
    db2c:	ldr	r2, [r4, #64]	; 0x40
    db30:	b	dc10 <opt_stmt+0x5ec>
    db34:	ldr	r0, [r5, #12]
    db38:	add	r1, r4, r0, lsl #2
    db3c:	ldr	r2, [r4, #68]	; 0x44
    db40:	b	dc10 <opt_stmt+0x5ec>
    db44:	ldr	r2, [r4, #64]	; 0x40
    db48:	add	r1, r4, #68	; 0x44
    db4c:	b	dc10 <opt_stmt+0x5ec>
    db50:	ldr	r0, [r5, #12]
    db54:	ldr	r2, [r4, r0, lsl #2]
    db58:	cmp	r9, #0
    db5c:	beq	dc0c <opt_stmt+0x5e8>
    db60:	ldr	r0, [pc, #476]	; dd44 <opt_stmt+0x720>
    db64:	ldr	r0, [pc, r0]
    db68:	ldr	r0, [r0, r2, lsl #3]
    db6c:	cmp	r0, #0
    db70:	beq	dc0c <opt_stmt+0x5e8>
    db74:	mov	r0, #0
    db78:	str	r0, [r5]
    db7c:	ldr	r1, [pc, #452]	; dd48 <opt_stmt+0x724>
    db80:	ldr	r1, [pc, r1]
    db84:	add	r1, r1, r2, lsl #3
    db88:	ldr	r1, [r1, #4]
    db8c:	str	r1, [r5, #12]
    db90:	ldr	r1, [pc, #436]	; dd4c <opt_stmt+0x728>
    db94:	add	r1, pc, r1
    db98:	strb	r0, [r1]
    db9c:	b	dc0c <opt_stmt+0x5e8>
    dba0:	ldr	r0, [r5, #12]
    dba4:	ldr	r2, [r4, r0, lsl #2]
    dba8:	cmp	r9, #0
    dbac:	beq	dbf0 <opt_stmt+0x5cc>
    dbb0:	ldr	r0, [pc, #408]	; dd50 <opt_stmt+0x72c>
    dbb4:	ldr	r0, [pc, r0]
    dbb8:	ldr	r0, [r0, r2, lsl #3]
    dbbc:	cmp	r0, #0
    dbc0:	beq	dbf0 <opt_stmt+0x5cc>
    dbc4:	mov	r0, #1
    dbc8:	str	r0, [r5]
    dbcc:	ldr	r0, [pc, #384]	; dd54 <opt_stmt+0x730>
    dbd0:	ldr	r0, [pc, r0]
    dbd4:	add	r0, r0, r2, lsl #3
    dbd8:	ldr	r0, [r0, #4]
    dbdc:	str	r0, [r5, #12]
    dbe0:	ldr	r0, [pc, #368]	; dd58 <opt_stmt+0x734>
    dbe4:	add	r0, pc, r0
    dbe8:	mov	r1, #0
    dbec:	strb	r1, [r0]
    dbf0:	add	r1, r4, #68	; 0x44
    dbf4:	b	dc10 <opt_stmt+0x5ec>
    dbf8:	mov	r0, r7
    dbfc:	mov	r1, #0
    dc00:	mov	r2, #0
    dc04:	bl	e210 <F>
    dc08:	mov	r2, r0
    dc0c:	add	r1, r4, #64	; 0x40
    dc10:	mov	r0, r5
    dc14:	mov	r3, r9
    dc18:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    dc1c:	b	e318 <vstore>
    dc20:	cmp	r9, #0
    dc24:	beq	dca4 <opt_stmt+0x680>
    dc28:	ldr	r0, [r4, #64]	; 0x40
    dc2c:	ldr	r1, [pc, #248]	; dd2c <opt_stmt+0x708>
    dc30:	ldr	r1, [pc, r1]
    dc34:	ldr	r0, [r1, r0, lsl #3]
    dc38:	cmp	r0, #0
    dc3c:	beq	dca4 <opt_stmt+0x680>
    dc40:	mov	r0, #0
    dc44:	str	r0, [r5]
    dc48:	ldr	r0, [r4, #64]	; 0x40
    dc4c:	ldr	r1, [pc, #220]	; dd30 <opt_stmt+0x70c>
    dc50:	ldr	r1, [pc, r1]
    dc54:	add	r0, r1, r0, lsl #3
    dc58:	ldr	r0, [r0, #4]
    dc5c:	rsb	r1, r0, #0
    dc60:	str	r1, [r5, #12]
    dc64:	b	d964 <opt_stmt+0x340>
    dc68:	ldr	r2, [r4, #68]	; 0x44
    dc6c:	b	dc0c <opt_stmt+0x5e8>
    dc70:	ldr	r1, [r5, #12]
    dc74:	mov	r0, r7
    dc78:	mov	r2, #0
    dc7c:	bl	e210 <F>
    dc80:	mov	r2, r0
    dc84:	add	r1, r4, #68	; 0x44
    dc88:	b	dc10 <opt_stmt+0x5ec>
    dc8c:	cmp	r0, #80	; 0x50
    dc90:	cmpne	r0, #32
    dc94:	bne	d92c <opt_stmt+0x308>
    dc98:	mov	r0, #0
    dc9c:	str	r0, [r5]
    dca0:	b	d964 <opt_stmt+0x340>
    dca4:	ldr	r1, [r4, #64]	; 0x40
    dca8:	mov	r0, r7
    dcac:	b	d968 <opt_stmt+0x344>
    dcb0:	tst	r7, #176	; 0xb0
    dcb4:	beq	dcfc <opt_stmt+0x6d8>
    dcb8:	sub	r0, ip, #32
    dcbc:	lsr	r0, r0, #4
    dcc0:	cmp	r0, #6
    dcc4:	bhi	da98 <opt_stmt+0x474>
    dcc8:	mov	r1, #1
    dccc:	mov	r2, #59	; 0x3b
    dcd0:	tst	r2, r1, lsl r0
    dcd4:	beq	dd14 <opt_stmt+0x6f0>
    dcd8:	mov	r0, #0
    dcdc:	str	r0, [r5, #12]
    dce0:	str	r0, [r5]
    dce4:	mov	r0, #0
    dce8:	mov	r1, #0
    dcec:	mov	r2, #0
    dcf0:	bl	e210 <F>
    dcf4:	mov	r2, r0
    dcf8:	b	dd08 <opt_stmt+0x6e4>
    dcfc:	mov	r0, #135	; 0x87
    dd00:	str	r0, [r5]
    dd04:	ldr	r2, [r4, #68]	; 0x44
    dd08:	mov	r0, r5
    dd0c:	mov	r1, r8
    dd10:	b	dc14 <opt_stmt+0x5f0>
    dd14:	cmp	r0, #6
    dd18:	beq	da74 <opt_stmt+0x450>
    dd1c:	b	da98 <opt_stmt+0x474>
    dd20:	.word	0x00023128
    dd24:	.word	0x00023108
    dd28:	.word	0x00022c80
    dd2c:	.word	0x00022f00
    dd30:	.word	0x00022ee0
    dd34:	.word	0x000231fc
    dd38:	.word	0x000231a8
    dd3c:	.word	0x0002306c
    dd40:	.word	0x00022bfc
    dd44:	.word	0x00022fcc
    dd48:	.word	0x00022fb0
    dd4c:	.word	0x00022b40
    dd50:	.word	0x00022f7c
    dd54:	.word	0x00022f60
    dd58:	.word	0x00022af0

0000dd5c <opt_peep>:
    dd5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dd60:	add	fp, sp, #28
    dd64:	sub	sp, sp, #4
    dd68:	ldr	r5, [r0, #4]
    dd6c:	cmp	r5, #0
    dd70:	beq	e0ec <opt_peep+0x390>
    dd74:	mov	r4, r0
    dd78:	mov	r0, r5
    dd7c:	bl	e420 <this_op>
    dd80:	cmp	r0, #0
    dd84:	beq	ded4 <opt_peep+0x178>
    dd88:	mov	r6, r0
    dd8c:	ldr	r0, [r0, #16]
    dd90:	bl	e420 <this_op>
    dd94:	cmp	r0, #0
    dd98:	beq	ded4 <opt_peep+0x178>
    dd9c:	ldr	r9, [pc, #900]	; e128 <opt_peep+0x3cc>
    dda0:	add	r9, pc, r9
    dda4:	mov	sl, #0
    dda8:	mov	r5, r0
    ddac:	ldr	r0, [r6]
    ddb0:	cmp	r0, #2
    ddb4:	bne	dde0 <opt_peep+0x84>
    ddb8:	ldr	r0, [r5]
    ddbc:	cmp	r0, #97	; 0x61
    ddc0:	bne	dddc <opt_peep+0x80>
    ddc4:	ldr	r0, [r5, #12]
    ddc8:	ldr	r1, [r6, #12]
    ddcc:	cmp	r1, r0
    ddd0:	strbeq	sl, [r9]
    ddd4:	moveq	r0, #7
    ddd8:	streq	r0, [r5]
    dddc:	ldr	r0, [r6]
    dde0:	cmp	r0, #0
    dde4:	bne	de04 <opt_peep+0xa8>
    dde8:	ldr	r0, [r5]
    ddec:	cmp	r0, #7
    ddf0:	moveq	r0, #1
    ddf4:	streq	r0, [r6]
    ddf8:	moveq	r0, #135	; 0x87
    ddfc:	streq	r0, [r5]
    de00:	strbeq	sl, [r9]
    de04:	ldr	r0, [r6]
    de08:	cmp	r0, #0
    de0c:	bne	deb0 <opt_peep+0x154>
    de10:	ldrb	r0, [r4, #130]	; 0x82
    de14:	tst	r0, #2
    de18:	bne	deb0 <opt_peep+0x154>
    de1c:	ldr	r0, [r5]
    de20:	cmp	r0, #177	; 0xb1
    de24:	mov	r7, r5
    de28:	bne	de40 <opt_peep+0xe4>
    de2c:	ldr	r0, [r5, #16]
    de30:	bl	e420 <this_op>
    de34:	mov	r7, r0
    de38:	cmp	r0, #0
    de3c:	beq	deb0 <opt_peep+0x154>
    de40:	ldr	r0, [r7]
    de44:	cmp	r0, #12
    de48:	bne	deb0 <opt_peep+0x154>
    de4c:	ldr	r0, [r7, #16]
    de50:	bl	e420 <this_op>
    de54:	cmp	r0, #0
    de58:	beq	deb0 <opt_peep+0x154>
    de5c:	mov	r8, r0
    de60:	ldr	r0, [r0]
    de64:	cmp	r0, #7
    de68:	bne	deb0 <opt_peep+0x154>
    de6c:	ldr	r0, [r8, #16]
    de70:	bl	e420 <this_op>
    de74:	cmp	r0, #0
    de78:	beq	deb0 <opt_peep+0x154>
    de7c:	ldr	r1, [r0]
    de80:	and	r1, r1, #231	; 0xe7
    de84:	cmp	r1, #64	; 0x40
    de88:	bne	deb0 <opt_peep+0x154>
    de8c:	ldr	r1, [r6, #12]
    de90:	ldr	r2, [r0, #12]
    de94:	add	r1, r2, r1
    de98:	str	r1, [r0, #12]
    de9c:	mvn	r0, #0
    dea0:	str	r0, [r6]
    dea4:	str	r0, [r7]
    dea8:	str	r0, [r8]
    deac:	strb	sl, [r9]
    deb0:	mov	r0, r5
    deb4:	bl	e420 <this_op>
    deb8:	cmp	r0, #0
    debc:	beq	ded4 <opt_peep+0x178>
    dec0:	mov	r6, r0
    dec4:	ldr	r0, [r0, #16]
    dec8:	bl	e420 <this_op>
    decc:	cmp	r0, #0
    ded0:	bne	dda8 <opt_peep+0x4c>
    ded4:	ldr	r0, [r4, #8]
    ded8:	cmp	r0, #21
    dedc:	bne	dfac <opt_peep+0x250>
    dee0:	ldrb	r0, [r4, #130]	; 0x82
    dee4:	tst	r0, #1
    dee8:	bne	dfa8 <opt_peep+0x24c>
    deec:	ldr	r0, [r5]
    def0:	cmp	r0, #20
    def4:	beq	df80 <opt_peep+0x224>
    def8:	cmp	r0, #84	; 0x54
    defc:	beq	df40 <opt_peep+0x1e4>
    df00:	cmp	r0, #28
    df04:	bne	dfa8 <opt_peep+0x24c>
    df08:	ldr	r0, [r4, #204]	; 0xcc
    df0c:	ldr	r1, [pc, #536]	; e12c <opt_peep+0x3d0>
    df10:	ldr	r1, [pc, r1]
    df14:	ldr	r2, [r1, r0, lsl #3]
    df18:	cmp	r2, #0
    df1c:	beq	e0f4 <opt_peep+0x398>
    df20:	add	r0, r1, r0, lsl #3
    df24:	ldr	r0, [r0, #4]
    df28:	ldr	r1, [r4, #20]
    df2c:	add	r0, r1, r0
    df30:	str	r0, [r4, #20]
    df34:	mvn	r0, #0
    df38:	str	r0, [r5]
    df3c:	b	df98 <opt_peep+0x23c>
    df40:	ldr	r0, [r4, #20]
    df44:	cmp	r0, #0
    df48:	bne	dfa8 <opt_peep+0x24c>
    df4c:	ldr	r0, [r5, #12]
    df50:	mov	r1, #69	; 0x45
    df54:	str	r1, [r4, #8]
    df58:	str	r0, [r4, #20]
    df5c:	mvn	r0, #0
    df60:	str	r0, [r5]
    df64:	ldr	r0, [pc, #460]	; e138 <opt_peep+0x3dc>
    df68:	add	r0, pc, r0
    df6c:	mov	r1, #0
    df70:	strb	r1, [r0]
    df74:	mov	r0, r4
    df78:	bl	e44c <opt_not>
    df7c:	b	dfa8 <opt_peep+0x24c>
    df80:	mvn	r0, #0
    df84:	str	r0, [r5]
    df88:	ldr	r0, [r5, #12]
    df8c:	ldr	r1, [r4, #20]
    df90:	add	r0, r1, r0
    df94:	str	r0, [r4, #20]
    df98:	ldr	r0, [pc, #404]	; e134 <opt_peep+0x3d8>
    df9c:	add	r0, pc, r0
    dfa0:	mov	r1, #0
    dfa4:	strb	r1, [r0]
    dfa8:	ldr	r0, [r4, #8]
    dfac:	cmp	r0, #69	; 0x45
    dfb0:	bne	dfe0 <opt_peep+0x284>
    dfb4:	ldr	r1, [r4, #20]
    dfb8:	mov	r0, #69	; 0x45
    dfbc:	cmn	r1, #1
    dfc0:	beq	dfd8 <opt_peep+0x27c>
    dfc4:	cmp	r1, #0
    dfc8:	bne	dfe0 <opt_peep+0x284>
    dfcc:	ldr	r1, [r4, #84]	; 0x54
    dfd0:	str	r1, [r4, #60]	; 0x3c
    dfd4:	b	dfe0 <opt_peep+0x284>
    dfd8:	ldr	r1, [r4, #60]	; 0x3c
    dfdc:	str	r1, [r4, #84]	; 0x54
    dfe0:	ldr	r1, [pc, #340]	; e13c <opt_peep+0x3e0>
    dfe4:	ldr	r1, [pc, r1]
    dfe8:	tst	r0, #8
    dfec:	beq	e014 <opt_peep+0x2b8>
    dff0:	ldr	r2, [r4, #204]	; 0xcc
    dff4:	ldr	r3, [r1, r2, lsl #3]
    dff8:	cmp	r3, #0
    dffc:	beq	e014 <opt_peep+0x2b8>
    e000:	add	r2, r1, r2, lsl #3
    e004:	ldr	r2, [r2, #4]
    e008:	bic	r0, r0, #8
    e00c:	str	r0, [r4, #8]
    e010:	str	r2, [r4, #20]
    e014:	ldr	r0, [r4, #200]	; 0xc8
    e018:	ldr	r2, [r1, r0, lsl #3]
    e01c:	cmp	r2, #0
    e020:	beq	e0ec <opt_peep+0x390>
    e024:	ldr	r2, [r4, #8]
    e028:	tst	r2, #8
    e02c:	bne	e0ec <opt_peep+0x390>
    e030:	and	r2, r2, #240	; 0xf0
    e034:	sub	r2, r2, #16
    e038:	lsr	r2, r2, #4
    e03c:	cmp	r2, #3
    e040:	bhi	e124 <opt_peep+0x3c8>
    e044:	add	r0, r1, r0, lsl #3
    e048:	ldr	r1, [r0, #4]
    e04c:	add	r0, pc, #4
    e050:	ldr	r2, [r0, r2, lsl #2]
    e054:	add	pc, r0, r2
    e058:	.word	0x00000010
    e05c:	.word	0x00000044
    e060:	.word	0x00000024
    e064:	.word	0x00000038
    e068:	ldr	r0, [r4, #20]
    e06c:	sub	r0, r1, r0
    e070:	clz	r0, r0
    e074:	lsr	r0, r0, #5
    e078:	b	e0ac <opt_peep+0x350>
    e07c:	ldr	r2, [r4, #20]
    e080:	mov	r0, #0
    e084:	cmp	r1, r2
    e088:	movwcs	r0, #1
    e08c:	b	e0ac <opt_peep+0x350>
    e090:	ldr	r0, [r4, #20]
    e094:	and	r0, r0, r1
    e098:	b	e0ac <opt_peep+0x350>
    e09c:	ldr	r2, [r4, #20]
    e0a0:	mov	r0, #0
    e0a4:	cmp	r1, r2
    e0a8:	movwhi	r0, #1
    e0ac:	ldr	r1, [r4, #60]	; 0x3c
    e0b0:	ldr	r2, [r4, #84]	; 0x54
    e0b4:	cmp	r2, r1
    e0b8:	beq	e0cc <opt_peep+0x370>
    e0bc:	ldr	r1, [pc, #124]	; e140 <opt_peep+0x3e4>
    e0c0:	add	r1, pc, r1
    e0c4:	mov	r2, #0
    e0c8:	strb	r2, [r1]
    e0cc:	cmp	r0, #0
    e0d0:	beq	e0e4 <opt_peep+0x388>
    e0d4:	ldr	r0, [r4, #60]	; 0x3c
    e0d8:	str	r0, [r4, #84]	; 0x54
    e0dc:	sub	sp, fp, #28
    e0e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0e4:	ldr	r0, [r4, #84]	; 0x54
    e0e8:	str	r0, [r4, #60]	; 0x3c
    e0ec:	sub	sp, fp, #28
    e0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0f4:	ldr	r0, [r4, #20]
    e0f8:	cmp	r0, #0
    e0fc:	bne	dfa8 <opt_peep+0x24c>
    e100:	mvn	r0, #0
    e104:	str	r0, [r5]
    e108:	mov	r0, #29
    e10c:	str	r0, [r4, #8]
    e110:	ldr	r1, [pc, #24]	; e130 <opt_peep+0x3d4>
    e114:	add	r1, pc, r1
    e118:	mov	r2, #0
    e11c:	strb	r2, [r1]
    e120:	b	dfe0 <opt_peep+0x284>
    e124:	bl	fc4 <abort@plt>
    e128:	.word	0x00022934
    e12c:	.word	0x00022c20
    e130:	.word	0x000225c0
    e134:	.word	0x00022738
    e138:	.word	0x0002276c
    e13c:	.word	0x00022b4c
    e140:	.word	0x00022614

0000e144 <opt_deadstores>:
    e144:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e148:	add	fp, sp, #24
    e14c:	sub	sp, sp, #72	; 0x48
    e150:	mov	r4, r0
    e154:	vmov.i32	q8, #0	; 0x00000000
    e158:	mov	r0, #68	; 0x44
    e15c:	mov	r5, sp
    e160:	mov	r1, r5
    e164:	vst1.64	{d16-d17}, [r1], r0
    e168:	mov	r8, #0
    e16c:	str	r8, [r1]
    e170:	add	r0, r5, #48	; 0x30
    e174:	vst1.64	{d16-d17}, [r0]
    e178:	add	r0, r5, #32
    e17c:	vst1.64	{d16-d17}, [r0]
    e180:	add	r0, r5, #16
    e184:	vst1.64	{d16-d17}, [r0]
    e188:	str	r8, [sp, #64]	; 0x40
    e18c:	ldr	r6, [r4, #4]
    e190:	cmp	r6, #0
    e194:	beq	e1b4 <opt_deadstores+0x70>
    e198:	mov	r7, sp
    e19c:	mov	r0, r6
    e1a0:	mov	r1, r7
    e1a4:	bl	e460 <deadstmt>
    e1a8:	ldr	r6, [r6, #16]
    e1ac:	cmp	r6, #0
    e1b0:	bne	e19c <opt_deadstores+0x58>
    e1b4:	add	r0, r4, #8
    e1b8:	mov	r1, r5
    e1bc:	bl	e460 <deadstmt>
    e1c0:	mov	r0, #1
    e1c4:	mvn	r1, #0
    e1c8:	ldr	r2, [pc, #60]	; e20c <opt_deadstores+0xc8>
    e1cc:	add	r2, pc, r2
    e1d0:	mov	r3, #0
    e1d4:	b	e1e4 <opt_deadstores+0xa0>
    e1d8:	add	r3, r3, #1
    e1dc:	cmp	r3, #18
    e1e0:	beq	e204 <opt_deadstores+0xc0>
    e1e4:	ldr	r7, [r5, r3, lsl #2]
    e1e8:	cmp	r7, #0
    e1ec:	beq	e1d8 <opt_deadstores+0x94>
    e1f0:	ldr	r6, [r4, #128]	; 0x80
    e1f4:	tst	r6, r0, lsl r3
    e1f8:	streq	r1, [r7]
    e1fc:	strbeq	r8, [r2]
    e200:	b	e1d8 <opt_deadstores+0x94>
    e204:	sub	sp, fp, #24
    e208:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    e20c:	.word	0x00022508

0000e210 <F>:
    e210:	push	{r4, r5, r6, sl, fp, lr}
    e214:	add	fp, sp, #16
    e218:	eor	r3, r0, r1, lsl #4
    e21c:	eor	ip, r3, r2, lsl #8
    e220:	movw	r3, #8923	; 0x22db
    e224:	movt	r3, #39383	; 0x99d7
    e228:	umull	r3, lr, ip, r3
    e22c:	lsr	lr, lr, #7
    e230:	mov	r3, #213	; 0xd5
    e234:	mls	ip, lr, r3, ip
    e238:	ldr	lr, [pc, #188]	; e2fc <F+0xec>
    e23c:	add	lr, pc, lr
    e240:	ldr	r3, [lr, ip, lsl #2]
    e244:	cmp	r3, #0
    e248:	bne	e25c <F+0x4c>
    e24c:	b	e28c <F+0x7c>
    e250:	ldr	r3, [r3, #16]
    e254:	cmp	r3, #0
    e258:	beq	e28c <F+0x7c>
    e25c:	ldr	r4, [r3]
    e260:	cmp	r4, r0
    e264:	bne	e250 <F+0x40>
    e268:	ldr	r4, [r3, #4]
    e26c:	cmp	r4, r1
    e270:	bne	e250 <F+0x40>
    e274:	ldr	r4, [r3, #8]
    e278:	cmp	r4, r2
    e27c:	bne	e250 <F+0x40>
    e280:	ldr	r3, [r3, #12]
    e284:	mov	r0, r3
    e288:	pop	{r4, r5, r6, sl, fp, pc}
    e28c:	ldr	r3, [pc, #108]	; e300 <F+0xf0>
    e290:	ldr	r3, [pc, r3]
    e294:	add	r3, r3, #1
    e298:	ldr	r4, [pc, #100]	; e304 <F+0xf4>
    e29c:	add	r4, pc, r4
    e2a0:	str	r3, [r4]
    e2a4:	tst	r0, #230	; 0xe6
    e2a8:	bne	e2cc <F+0xbc>
    e2ac:	ldr	r4, [pc, #84]	; e308 <F+0xf8>
    e2b0:	ldr	r4, [pc, r4]
    e2b4:	add	r4, r4, r3, lsl #3
    e2b8:	str	r1, [r4, #4]
    e2bc:	ldr	r4, [pc, #72]	; e30c <F+0xfc>
    e2c0:	ldr	r4, [pc, r4]
    e2c4:	mov	r5, #1
    e2c8:	str	r5, [r4, r3, lsl #3]
    e2cc:	ldr	r4, [pc, #60]	; e310 <F+0x100>
    e2d0:	ldr	r4, [pc, r4]
    e2d4:	add	r5, r4, #20
    e2d8:	ldr	r6, [pc, #52]	; e314 <F+0x104>
    e2dc:	add	r6, pc, r6
    e2e0:	str	r5, [r6]
    e2e4:	stm	r4, {r0, r1, r2, r3}
    e2e8:	ldr	r0, [lr, ip, lsl #2]
    e2ec:	str	r0, [r4, #16]
    e2f0:	str	r4, [lr, ip, lsl #2]
    e2f4:	mov	r0, r3
    e2f8:	pop	{r4, r5, r6, sl, fp, pc}
    e2fc:	.word	0x000224c4
    e300:	.word	0x00022464
    e304:	.word	0x00022458
    e308:	.word	0x00022880
    e30c:	.word	0x00022870
    e310:	.word	0x00022858
    e314:	.word	0x0002284c

0000e318 <vstore>:
    e318:	cmp	r3, #0
    e31c:	beq	e334 <vstore+0x1c>
    e320:	ldr	r3, [r1]
    e324:	cmp	r3, r2
    e328:	mvneq	r1, #0
    e32c:	streq	r1, [r0]
    e330:	bxeq	lr
    e334:	str	r2, [r1]
    e338:	bx	lr

0000e33c <fold_op>:
    e33c:	push	{fp, lr}
    e340:	mov	fp, sp
    e344:	ldr	r3, [r0]
    e348:	ubfx	ip, r3, #4, #4
    e34c:	cmp	ip, #8
    e350:	bhi	e404 <fold_op+0xc8>
    e354:	ldr	r3, [pc, #184]	; e414 <fold_op+0xd8>
    e358:	ldr	r3, [pc, r3]
    e35c:	add	r2, r3, r2, lsl #3
    e360:	ldr	lr, [r2, #4]
    e364:	add	r1, r3, r1, lsl #3
    e368:	ldr	r1, [r1, #4]
    e36c:	add	r3, pc, #4
    e370:	ldr	r2, [r3, ip, lsl #2]
    e374:	add	pc, r3, r2
    e378:	.word	0x00000024
    e37c:	.word	0x00000054
    e380:	.word	0x00000034
    e384:	.word	0x0000003c
    e388:	.word	0x0000002c
    e38c:	.word	0x0000005c
    e390:	.word	0x00000064
    e394:	.word	0x0000004c
    e398:	.word	0x0000006c
    e39c:	add	r1, lr, r1
    e3a0:	b	e3e8 <fold_op+0xac>
    e3a4:	orr	r1, lr, r1
    e3a8:	b	e3e8 <fold_op+0xac>
    e3ac:	mul	r1, lr, r1
    e3b0:	b	e3e8 <fold_op+0xac>
    e3b4:	cmp	lr, #0
    e3b8:	beq	e408 <fold_op+0xcc>
    e3bc:	udiv	r1, r1, lr
    e3c0:	b	e3e8 <fold_op+0xac>
    e3c4:	lsr	r1, r1, lr
    e3c8:	b	e3e8 <fold_op+0xac>
    e3cc:	sub	r1, r1, lr
    e3d0:	b	e3e8 <fold_op+0xac>
    e3d4:	and	r1, lr, r1
    e3d8:	b	e3e8 <fold_op+0xac>
    e3dc:	lsl	r1, r1, lr
    e3e0:	b	e3e8 <fold_op+0xac>
    e3e4:	rsb	r1, r1, #0
    e3e8:	mov	r2, #0
    e3ec:	str	r2, [r0]
    e3f0:	str	r1, [r0, #12]
    e3f4:	ldr	r0, [pc, #28]	; e418 <fold_op+0xdc>
    e3f8:	add	r0, pc, r0
    e3fc:	strb	r2, [r0]
    e400:	pop	{fp, pc}
    e404:	bl	fc4 <abort@plt>
    e408:	ldr	r0, [pc, #12]	; e41c <fold_op+0xe0>
    e40c:	add	r0, pc, r0
    e410:	bl	1fc4 <sf_bpf_error>
    e414:	.word	0x000227d8
    e418:	.word	0x000222dc
    e41c:	.word	0x0000575b

0000e420 <this_op>:
    e420:	mov	r1, r0
    e424:	mov	r0, #0
    e428:	cmp	r1, #0
    e42c:	bxeq	lr
    e430:	ldr	r2, [r1]
    e434:	cmn	r2, #1
    e438:	bne	e444 <this_op+0x24>
    e43c:	ldr	r1, [r1, #16]
    e440:	b	e428 <this_op+0x8>
    e444:	mov	r0, r1
    e448:	bx	lr

0000e44c <opt_not>:
    e44c:	ldr	r1, [r0, #60]	; 0x3c
    e450:	ldr	r2, [r0, #84]	; 0x54
    e454:	str	r1, [r0, #84]	; 0x54
    e458:	str	r2, [r0, #60]	; 0x3c
    e45c:	bx	lr

0000e460 <deadstmt>:
    e460:	push	{r4, r5, fp, lr}
    e464:	add	fp, sp, #8
    e468:	mov	r4, r1
    e46c:	mov	r5, r0
    e470:	bl	cda0 <atomuse>
    e474:	cmp	r0, #0
    e478:	bmi	e494 <deadstmt+0x34>
    e47c:	cmp	r0, #18
    e480:	moveq	r0, #0
    e484:	streq	r0, [r4, #68]	; 0x44
    e488:	moveq	r0, #16
    e48c:	mov	r1, #0
    e490:	str	r1, [r4, r0, lsl #2]
    e494:	mov	r0, r5
    e498:	bl	ce54 <atomdef>
    e49c:	cmp	r0, #0
    e4a0:	popmi	{r4, r5, fp, pc}
    e4a4:	ldr	r1, [r4, r0, lsl #2]
    e4a8:	cmp	r1, #0
    e4ac:	beq	e4c8 <deadstmt+0x68>
    e4b0:	ldr	r2, [pc, #24]	; e4d0 <deadstmt+0x70>
    e4b4:	add	r2, pc, r2
    e4b8:	mov	r3, #0
    e4bc:	strb	r3, [r2]
    e4c0:	mvn	r2, #0
    e4c4:	str	r2, [r1]
    e4c8:	str	r5, [r4, r0, lsl #2]
    e4cc:	pop	{r4, r5, fp, pc}
    e4d0:	.word	0x00022220

0000e4d4 <use_conflict>:
    e4d4:	push	{r4, sl, fp, lr}
    e4d8:	add	fp, sp, #8
    e4dc:	ldr	r2, [r1, #128]	; 0x80
    e4e0:	cmp	r2, #0
    e4e4:	beq	e52c <use_conflict+0x58>
    e4e8:	add	lr, r1, #136	; 0x88
    e4ec:	add	r0, r0, #136	; 0x88
    e4f0:	mov	r3, #0
    e4f4:	mov	ip, #1
    e4f8:	tst	r2, ip, lsl r3
    e4fc:	bne	e514 <use_conflict+0x40>
    e500:	add	r3, r3, #1
    e504:	cmp	r3, #18
    e508:	beq	e52c <use_conflict+0x58>
    e50c:	tst	r2, ip, lsl r3
    e510:	beq	e500 <use_conflict+0x2c>
    e514:	ldr	r1, [lr, r3, lsl #2]
    e518:	ldr	r4, [r0, r3, lsl #2]
    e51c:	cmp	r4, r1
    e520:	beq	e500 <use_conflict+0x2c>
    e524:	mov	r0, #1
    e528:	pop	{r4, sl, fp, pc}
    e52c:	mov	r0, #0
    e530:	pop	{r4, sl, fp, pc}

0000e534 <fold_edge>:
    e534:	push	{r4, r5, fp, lr}
    e538:	add	fp, sp, #8
    e53c:	mov	ip, r0
    e540:	ldr	r3, [r1, #4]
    e544:	mov	r0, #0
    e548:	cmn	r3, #1
    e54c:	mov	r2, #0
    e550:	movwgt	r2, #1
    e554:	cmp	r3, #0
    e558:	mov	lr, r3
    e55c:	rsbmi	lr, r3, #0
    e560:	ldr	r4, [ip, #8]
    e564:	cmp	r4, lr
    e568:	bne	e5b8 <fold_edge+0x84>
    e56c:	ldr	r4, [ip, #200]	; 0xc8
    e570:	ldr	r1, [r1, #16]
    e574:	ldr	r5, [r1, #200]	; 0xc8
    e578:	cmp	r4, r5
    e57c:	popne	{r4, r5, fp, pc}
    e580:	ldr	r1, [r1, #132]	; 0x84
    e584:	ldr	r4, [ip, #132]	; 0x84
    e588:	cmp	r4, r1
    e58c:	bne	e5a4 <fold_edge+0x70>
    e590:	mov	r0, #60	; 0x3c
    e594:	cmp	r3, #0
    e598:	movwmi	r0, #84	; 0x54
    e59c:	ldr	r0, [ip, r0]
    e5a0:	pop	{r4, r5, fp, pc}
    e5a4:	subs	r1, lr, #21
    e5a8:	movwne	r1, #1
    e5ac:	eor	r2, r2, #1
    e5b0:	orrs	r1, r1, r2
    e5b4:	ldreq	r0, [ip, #84]	; 0x54
    e5b8:	pop	{r4, r5, fp, pc}

0000e5bc <mark_code>:
    e5bc:	ldr	r1, [pc, #20]	; e5d8 <mark_code+0x1c>
    e5c0:	ldr	r1, [pc, r1]
    e5c4:	add	r1, r1, #1
    e5c8:	ldr	r2, [pc, #12]	; e5dc <mark_code+0x20>
    e5cc:	add	r2, pc, r2
    e5d0:	str	r1, [r2]
    e5d4:	b	e634 <make_marks>
    e5d8:	.word	0x00022108
    e5dc:	.word	0x000220fc

0000e5e0 <eq_blk>:
    e5e0:	ldr	r2, [r1, #8]
    e5e4:	ldr	r3, [r0, #8]
    e5e8:	cmp	r3, r2
    e5ec:	bne	e620 <eq_blk+0x40>
    e5f0:	ldr	r2, [r1, #20]
    e5f4:	ldr	r3, [r0, #20]
    e5f8:	cmp	r3, r2
    e5fc:	bne	e620 <eq_blk+0x40>
    e600:	ldr	r2, [r1, #60]	; 0x3c
    e604:	ldr	r3, [r0, #60]	; 0x3c
    e608:	cmp	r3, r2
    e60c:	bne	e620 <eq_blk+0x40>
    e610:	ldr	r2, [r1, #84]	; 0x54
    e614:	ldr	r3, [r0, #84]	; 0x54
    e618:	cmp	r3, r2
    e61c:	beq	e628 <eq_blk+0x48>
    e620:	mov	r0, #0
    e624:	bx	lr
    e628:	ldr	r1, [r1, #4]
    e62c:	ldr	r0, [r0, #4]
    e630:	b	e680 <eq_slist>

0000e634 <make_marks>:
    e634:	push	{r4, sl, fp, lr}
    e638:	add	fp, sp, #8
    e63c:	mov	r4, r0
    e640:	ldr	r1, [r0, #24]
    e644:	b	e658 <make_marks+0x24>
    e648:	ldr	r0, [r4, #60]	; 0x3c
    e64c:	bl	e634 <make_marks>
    e650:	ldr	r4, [r4, #84]	; 0x54
    e654:	ldr	r1, [r4, #24]
    e658:	ldr	r0, [pc, #28]	; e67c <make_marks+0x48>
    e65c:	ldr	r0, [pc, r0]
    e660:	cmp	r1, r0
    e664:	strne	r0, [r4, #24]
    e668:	ldrne	r0, [r4, #8]
    e66c:	andne	r0, r0, #7
    e670:	cmpne	r0, #6
    e674:	bne	e648 <make_marks+0x14>
    e678:	pop	{r4, sl, fp, pc}
    e67c:	.word	0x0002206c

0000e680 <eq_slist>:
    e680:	push	{fp, lr}
    e684:	mov	fp, sp
    e688:	b	e694 <eq_slist+0x14>
    e68c:	ldr	r1, [r1, #16]
    e690:	ldr	r0, [lr, #16]
    e694:	mov	ip, #1
    e698:	cmp	r0, #0
    e69c:	mov	lr, #0
    e6a0:	mov	r2, #1
    e6a4:	beq	e6c8 <eq_slist+0x48>
    e6a8:	ldr	r2, [r0]
    e6ac:	cmn	r2, #1
    e6b0:	bne	e6f8 <eq_slist+0x78>
    e6b4:	ldr	r0, [r0, #16]
    e6b8:	cmp	r0, #0
    e6bc:	bne	e6a8 <eq_slist+0x28>
    e6c0:	mov	lr, #0
    e6c4:	mov	r2, #1
    e6c8:	cmp	r1, #0
    e6cc:	beq	e6e8 <eq_slist+0x68>
    e6d0:	ldr	r0, [r1]
    e6d4:	cmn	r0, #1
    e6d8:	bne	e70c <eq_slist+0x8c>
    e6dc:	ldr	r1, [r1, #16]
    e6e0:	cmp	r1, #0
    e6e4:	bne	e6d0 <eq_slist+0x50>
    e6e8:	mov	r1, #0
    e6ec:	cmp	r2, #0
    e6f0:	beq	e718 <eq_slist+0x98>
    e6f4:	b	e744 <eq_slist+0xc4>
    e6f8:	mov	r2, #0
    e6fc:	mov	lr, r0
    e700:	cmp	r1, #0
    e704:	bne	e6d0 <eq_slist+0x50>
    e708:	b	e6e8 <eq_slist+0x68>
    e70c:	mov	ip, #0
    e710:	cmp	r2, #0
    e714:	bne	e744 <eq_slist+0xc4>
    e718:	mov	r0, #0
    e71c:	cmp	ip, #0
    e720:	bne	e740 <eq_slist+0xc0>
    e724:	ldr	r2, [r1]
    e728:	ldr	r3, [lr]
    e72c:	cmp	r3, r2
    e730:	ldreq	r2, [r1, #12]
    e734:	ldreq	r3, [lr, #12]
    e738:	cmpeq	r3, r2
    e73c:	beq	e68c <eq_slist+0xc>
    e740:	pop	{fp, pc}
    e744:	mov	r0, ip
    e748:	pop	{fp, pc}

0000e74c <count_blocks>:
    e74c:	push	{r4, r5, fp, lr}
    e750:	add	fp, sp, #8
    e754:	cmp	r0, #0
    e758:	beq	e774 <count_blocks+0x28>
    e75c:	mov	r4, r0
    e760:	ldr	r1, [r0, #24]
    e764:	ldr	r0, [pc, #52]	; e7a0 <count_blocks+0x54>
    e768:	ldr	r0, [pc, r0]
    e76c:	cmp	r1, r0
    e770:	bne	e77c <count_blocks+0x30>
    e774:	mov	r0, #0
    e778:	pop	{r4, r5, fp, pc}
    e77c:	str	r0, [r4, #24]
    e780:	ldr	r0, [r4, #60]	; 0x3c
    e784:	bl	e74c <count_blocks>
    e788:	mov	r5, r0
    e78c:	ldr	r0, [r4, #84]	; 0x54
    e790:	bl	e74c <count_blocks>
    e794:	add	r0, r5, r0
    e798:	add	r0, r0, #1
    e79c:	pop	{r4, r5, fp, pc}
    e7a0:	.word	0x00021f60

0000e7a4 <number_blks_r>:
    e7a4:	push	{r4, r5, fp, lr}
    e7a8:	add	fp, sp, #8
    e7ac:	cmp	r0, #0
    e7b0:	popeq	{r4, r5, fp, pc}
    e7b4:	mov	r4, r0
    e7b8:	ldr	r5, [pc, #80]	; e810 <number_blks_r+0x6c>
    e7bc:	add	r5, pc, r5
    e7c0:	ldr	r1, [r4, #24]
    e7c4:	ldr	r0, [pc, #72]	; e814 <number_blks_r+0x70>
    e7c8:	ldr	r0, [pc, r0]
    e7cc:	cmp	r1, r0
    e7d0:	beq	e80c <number_blks_r+0x68>
    e7d4:	str	r0, [r4, #24]
    e7d8:	ldr	r0, [pc, #56]	; e818 <number_blks_r+0x74>
    e7dc:	ldr	r0, [pc, r0]
    e7e0:	add	r1, r0, #1
    e7e4:	str	r1, [r5]
    e7e8:	str	r0, [r4]
    e7ec:	ldr	r1, [pc, #40]	; e81c <number_blks_r+0x78>
    e7f0:	ldr	r1, [pc, r1]
    e7f4:	str	r4, [r1, r0, lsl #2]
    e7f8:	ldr	r0, [r4, #60]	; 0x3c
    e7fc:	bl	e7a4 <number_blks_r>
    e800:	ldr	r4, [r4, #84]	; 0x54
    e804:	cmp	r4, #0
    e808:	bne	e7c0 <number_blks_r+0x1c>
    e80c:	pop	{r4, r5, fp, pc}
    e810:	.word	0x00021f1c
    e814:	.word	0x00021f00
    e818:	.word	0x00021efc
    e81c:	.word	0x00022330

0000e820 <slength>:
    e820:	cmp	r0, #0
    e824:	moveq	r0, #0
    e828:	bxeq	lr
    e82c:	mov	r1, r0
    e830:	mov	r0, #0
    e834:	ldr	r2, [r1]
    e838:	ldr	r1, [r1, #16]
    e83c:	cmn	r2, #1
    e840:	addne	r0, r0, #1
    e844:	cmp	r1, #0
    e848:	bne	e834 <slength+0x14>
    e84c:	bx	lr

0000e850 <sfbpf_strcasecmp>:
    e850:	push	{fp, lr}
    e854:	mov	fp, sp
    e858:	ldr	ip, [pc, #56]	; e898 <sfbpf_strcasecmp+0x48>
    e85c:	add	ip, pc, ip
    e860:	ldrb	r2, [r1]
    e864:	ldrb	lr, [ip, r2]
    e868:	ldrb	r3, [r0]
    e86c:	ldrb	r2, [ip, r3]
    e870:	cmp	r2, lr
    e874:	bne	e890 <sfbpf_strcasecmp+0x40>
    e878:	add	r0, r0, #1
    e87c:	add	r1, r1, #1
    e880:	cmp	r3, #0
    e884:	bne	e860 <sfbpf_strcasecmp+0x10>
    e888:	mov	r0, #0
    e88c:	pop	{fp, pc}
    e890:	sub	r0, r2, lr
    e894:	pop	{fp, pc}
    e898:	.word	0x0000538e

0000e89c <pcap_next_etherent>:
    e89c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e8a0:	add	fp, sp, #24
    e8a4:	mov	r5, r0
    e8a8:	vmov.i32	q8, #0	; 0x00000000
    e8ac:	mov	r0, #112	; 0x70
    e8b0:	ldr	r8, [pc, #396]	; ea44 <pcap_next_etherent+0x1a8>
    e8b4:	add	r8, pc, r8
    e8b8:	mov	r1, r8
    e8bc:	vst1.64	{d16-d17}, [r1], r0
    e8c0:	vst1.64	{d16-d17}, [r1]
    e8c4:	add	r0, r8, #96	; 0x60
    e8c8:	vst1.64	{d16-d17}, [r0]
    e8cc:	add	r0, r8, #80	; 0x50
    e8d0:	vst1.64	{d16-d17}, [r0]
    e8d4:	add	r0, r8, #64	; 0x40
    e8d8:	vst1.64	{d16-d17}, [r0]
    e8dc:	add	r0, r8, #48	; 0x30
    e8e0:	vst1.64	{d16-d17}, [r0]
    e8e4:	add	r0, r8, #32
    e8e8:	vst1.64	{d16-d17}, [r0]
    e8ec:	add	r0, r8, #16
    e8f0:	vst1.64	{d16-d17}, [r0]
    e8f4:	b	e908 <pcap_next_etherent+0x6c>
    e8f8:	mov	r0, r5
    e8fc:	bl	ea84 <skip_line>
    e900:	cmn	r0, #1
    e904:	beq	ea38 <pcap_next_etherent+0x19c>
    e908:	mov	r0, r5
    e90c:	bl	ea48 <skip_space>
    e910:	mov	r7, r0
    e914:	mov	r0, #10
    e918:	cmp	r7, #10
    e91c:	beq	e900 <pcap_next_etherent+0x64>
    e920:	bl	eec <__ctype_b_loc@plt>
    e924:	mov	r9, r0
    e928:	ldr	r0, [r0]
    e92c:	add	r0, r0, r7, lsl #1
    e930:	ldrb	r0, [r0, #1]
    e934:	tst	r0, #16
    e938:	beq	e8f8 <pcap_next_etherent+0x5c>
    e93c:	mov	r6, #0
    e940:	mov	r0, r7
    e944:	bl	eaa8 <xdtoi>
    e948:	mov	r4, r0
    e94c:	mov	r0, r5
    e950:	bl	fd0 <getc@plt>
    e954:	mov	r7, r0
    e958:	ldr	r0, [r9]
    e95c:	add	r0, r0, r7, lsl #1
    e960:	ldrb	r0, [r0, #1]
    e964:	tst	r0, #16
    e968:	beq	e984 <pcap_next_etherent+0xe8>
    e96c:	mov	r0, r7
    e970:	bl	eaa8 <xdtoi>
    e974:	orr	r4, r0, r4, lsl #4
    e978:	mov	r0, r5
    e97c:	bl	fd0 <getc@plt>
    e980:	mov	r7, r0
    e984:	strb	r4, [r8, -r6]
    e988:	cmp	r7, #58	; 0x3a
    e98c:	bne	e9a8 <pcap_next_etherent+0x10c>
    e990:	mov	r0, r5
    e994:	bl	fd0 <getc@plt>
    e998:	mov	r7, r0
    e99c:	sub	r6, r6, #1
    e9a0:	cmn	r6, #6
    e9a4:	bne	e940 <pcap_next_etherent+0xa4>
    e9a8:	cmn	r7, #1
    e9ac:	beq	ea38 <pcap_next_etherent+0x19c>
    e9b0:	ldr	r0, [r9]
    e9b4:	add	r0, r0, r7, lsl #1
    e9b8:	ldrb	r0, [r0, #1]
    e9bc:	tst	r0, #32
    e9c0:	beq	e8f8 <pcap_next_etherent+0x5c>
    e9c4:	mov	r0, r5
    e9c8:	bl	ea48 <skip_space>
    e9cc:	cmp	r0, #10
    e9d0:	beq	e900 <pcap_next_etherent+0x64>
    e9d4:	cmp	r0, #35	; 0x23
    e9d8:	beq	e8f8 <pcap_next_etherent+0x5c>
    e9dc:	mvn	r4, #5
    e9e0:	strb	r0, [r8, -r4]
    e9e4:	mov	r0, r5
    e9e8:	bl	fd0 <getc@plt>
    e9ec:	ldr	r1, [r9]
    e9f0:	add	r1, r1, r0, lsl #1
    e9f4:	ldrb	r2, [r1, #1]
    e9f8:	sub	r1, r4, #1
    e9fc:	tst	r2, #32
    ea00:	bne	ea18 <pcap_next_etherent+0x17c>
    ea04:	cmn	r0, #1
    ea08:	beq	ea18 <pcap_next_etherent+0x17c>
    ea0c:	cmn	r4, #126	; 0x7e
    ea10:	mov	r4, r1
    ea14:	bne	e9e0 <pcap_next_etherent+0x144>
    ea18:	mov	r2, #0
    ea1c:	strb	r2, [r8, -r1]
    ea20:	cmp	r0, #10
    ea24:	beq	ea3c <pcap_next_etherent+0x1a0>
    ea28:	mov	r0, r5
    ea2c:	bl	ea84 <skip_line>
    ea30:	mov	r0, r8
    ea34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ea38:	mov	r8, #0
    ea3c:	mov	r0, r8
    ea40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ea44:	.word	0x000221a4

0000ea48 <skip_space>:
    ea48:	push	{r4, r5, fp, lr}
    ea4c:	add	fp, sp, #8
    ea50:	mov	r4, r0
    ea54:	mov	r0, r4
    ea58:	bl	fd0 <getc@plt>
    ea5c:	mov	r5, r0
    ea60:	bl	eec <__ctype_b_loc@plt>
    ea64:	cmp	r5, #10
    ea68:	ldrne	r0, [r0]
    ea6c:	addne	r0, r0, r5, lsl #1
    ea70:	ldrhne	r0, [r0]
    ea74:	andsne	r0, r0, #8192	; 0x2000
    ea78:	bne	ea54 <skip_space+0xc>
    ea7c:	mov	r0, r5
    ea80:	pop	{r4, r5, fp, pc}

0000ea84 <skip_line>:
    ea84:	push	{r4, sl, fp, lr}
    ea88:	add	fp, sp, #8
    ea8c:	mov	r4, r0
    ea90:	mov	r0, r4
    ea94:	bl	fd0 <getc@plt>
    ea98:	cmp	r0, #10
    ea9c:	cmnne	r0, #1
    eaa0:	bne	ea90 <skip_line+0xc>
    eaa4:	pop	{r4, sl, fp, pc}

0000eaa8 <xdtoi>:
    eaa8:	push	{r4, sl, fp, lr}
    eaac:	add	fp, sp, #8
    eab0:	mov	r4, r0
    eab4:	bl	eec <__ctype_b_loc@plt>
    eab8:	ldr	r0, [r0]
    eabc:	add	r0, r0, r4, lsl #1
    eac0:	ldrh	r1, [r0]
    eac4:	mvn	r0, #47	; 0x2f
    eac8:	tst	r1, #2048	; 0x800
    eacc:	bne	eadc <xdtoi+0x34>
    ead0:	mvn	r0, #86	; 0x56
    ead4:	tst	r1, #512	; 0x200
    ead8:	mvneq	r0, #54	; 0x36
    eadc:	add	r0, r0, r4
    eae0:	pop	{r4, sl, fp, pc}

0000eae4 <sfbpf_parse>:
    eae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eae8:	add	fp, sp, #28
    eaec:	sub	sp, sp, #564	; 0x234
    eaf0:	sub	sp, sp, #3072	; 0xc00
    eaf4:	ldr	r0, [pc, #4076]	; fae8 <sfbpf_parse+0x1004>
    eaf8:	add	r0, pc, r0
    eafc:	mov	sl, #0
    eb00:	str	sl, [r0]
    eb04:	ldr	r0, [pc, #4064]	; faec <sfbpf_parse+0x1008>
    eb08:	add	r0, pc, r0
    eb0c:	mvn	r1, #1
    eb10:	str	r1, [r0]
    eb14:	mov	ip, #200	; 0xc8
    eb18:	add	r9, sp, #32
    eb1c:	sub	r4, fp, #432	; 0x1b0
    eb20:	mov	r6, #15
    eb24:	str	r9, [sp, #20]
    eb28:	mov	r8, r4
    eb2c:	b	eb4c <sfbpf_parse+0x68>
    eb30:	ldr	r1, [pc, #4076]	; fb24 <sfbpf_parse+0x1040>
    eb34:	add	r1, pc, r1
    eb38:	add	r0, r1, r0, lsl #1
    eb3c:	ldrsh	sl, [r0]
    eb40:	mov	r6, #15
    eb44:	ldr	r4, [sp, #24]
    eb48:	add	r8, r8, #2
    eb4c:	strh	sl, [r8]
    eb50:	add	r0, r4, ip, lsl #1
    eb54:	sub	r0, r0, #2
    eb58:	cmp	r0, r8
    eb5c:	bhi	ec14 <sfbpf_parse+0x130>
    eb60:	movw	r0, #9999	; 0x270f
    eb64:	cmp	ip, r0
    eb68:	bhi	fe64 <sfbpf_parse+0x1380>
    eb6c:	lsl	r0, ip, #1
    eb70:	movw	r1, #10000	; 0x2710
    eb74:	cmp	r0, r1
    eb78:	movw	r7, #10000	; 0x2710
    eb7c:	lslcc	r7, ip, #1
    eb80:	add	r0, r7, r7, lsl #3
    eb84:	add	r0, r6, r0, lsl #1
    eb88:	bl	ed4 <malloc@plt>
    eb8c:	cmp	r0, #0
    eb90:	beq	fe64 <sfbpf_parse+0x1380>
    eb94:	mov	r5, r0
    eb98:	sub	r0, r8, r4
    eb9c:	mov	r1, #1
    eba0:	mov	r8, r4
    eba4:	add	r4, r1, r0, asr #1
    eba8:	asr	r9, r0, #1
    ebac:	lsl	r2, r4, #1
    ebb0:	mov	r0, r5
    ebb4:	mov	r1, r8
    ebb8:	bl	e80 <memcpy@plt>
    ebbc:	add	r0, r6, r7, lsl #1
    ebc0:	bic	r0, r0, #15
    ebc4:	add	r6, r5, r0
    ebc8:	lsl	r2, r4, #4
    ebcc:	mov	r0, r6
    ebd0:	ldr	r1, [sp, #20]
    ebd4:	bl	e80 <memcpy@plt>
    ebd8:	sub	r0, fp, #432	; 0x1b0
    ebdc:	cmp	r8, r0
    ebe0:	beq	ebec <sfbpf_parse+0x108>
    ebe4:	mov	r0, r8
    ebe8:	bl	e5c <free@plt>
    ebec:	add	r8, r5, r9, lsl #1
    ebf0:	add	r0, r5, r7, lsl #1
    ebf4:	sub	r0, r0, #2
    ebf8:	cmp	r0, r8
    ebfc:	bls	fe48 <sfbpf_parse+0x1364>
    ec00:	add	r9, r6, r9, lsl #4
    ec04:	mov	ip, r7
    ec08:	str	r6, [sp, #20]
    ec0c:	mov	r4, r5
    ec10:	mov	r6, #15
    ec14:	cmp	sl, #3
    ec18:	beq	fe34 <sfbpf_parse+0x1350>
    ec1c:	ldr	r0, [pc, #4068]	; fc08 <sfbpf_parse+0x1124>
    ec20:	add	r0, pc, r0
    ec24:	add	r0, r0, sl, lsl #1
    ec28:	ldrsh	r5, [r0]
    ec2c:	cmn	r5, #198	; 0xc6
    ec30:	str	r4, [sp, #24]
    ec34:	beq	ed00 <sfbpf_parse+0x21c>
    ec38:	ldr	r0, [pc, #4044]	; fc0c <sfbpf_parse+0x1128>
    ec3c:	ldr	r0, [pc, r0]
    ec40:	cmn	r0, #2
    ec44:	bne	ec60 <sfbpf_parse+0x17c>
    ec48:	mov	r7, ip
    ec4c:	bl	10018 <sfbpf_lex>
    ec50:	mov	ip, r7
    ec54:	ldr	r1, [pc, #4092]	; fc58 <sfbpf_parse+0x1174>
    ec58:	add	r1, pc, r1
    ec5c:	str	r0, [r1]
    ec60:	cmp	r0, #0
    ec64:	ble	ec88 <sfbpf_parse+0x1a4>
    ec68:	lsr	r2, r0, #1
    ec6c:	mov	r1, #2
    ec70:	cmp	r2, #182	; 0xb6
    ec74:	bhi	ec98 <sfbpf_parse+0x1b4>
    ec78:	ldr	r1, [pc, #4080]	; fc70 <sfbpf_parse+0x118c>
    ec7c:	add	r1, pc, r1
    ec80:	ldrb	r1, [r1, r0]
    ec84:	b	ec98 <sfbpf_parse+0x1b4>
    ec88:	mov	r1, #0
    ec8c:	ldr	r0, [pc, #4084]	; fc88 <sfbpf_parse+0x11a4>
    ec90:	add	r0, pc, r0
    ec94:	str	r1, [r0]
    ec98:	add	r0, r1, r5
    ec9c:	movw	r2, #669	; 0x29d
    eca0:	cmp	r0, r2
    eca4:	bhi	ed00 <sfbpf_parse+0x21c>
    eca8:	ldr	r2, [pc, #4060]	; fc8c <sfbpf_parse+0x11a8>
    ecac:	add	r2, pc, r2
    ecb0:	add	r2, r2, r0, lsl #1
    ecb4:	ldrsh	r2, [r2]
    ecb8:	cmp	r1, r2
    ecbc:	bne	ed00 <sfbpf_parse+0x21c>
    ecc0:	ldr	r1, [pc, #4076]	; fcb4 <sfbpf_parse+0x11d0>
    ecc4:	add	r1, pc, r1
    ecc8:	add	r0, r1, r0, lsl #1
    eccc:	ldrsh	sl, [r0]
    ecd0:	cmp	sl, #0
    ecd4:	ble	f094 <sfbpf_parse+0x5b0>
    ecd8:	ldr	r0, [pc, #4056]	; fcb8 <sfbpf_parse+0x11d4>
    ecdc:	add	r0, pc, r0
    ece0:	vld1.32	{d16-d17}, [r0]
    ece4:	ldr	r0, [pc, #4048]	; fcbc <sfbpf_parse+0x11d8>
    ece8:	add	r0, pc, r0
    ecec:	mvn	r1, #1
    ecf0:	str	r1, [r0]
    ecf4:	add	r9, r9, #16
    ecf8:	vst1.32	{d16-d17}, [r9]
    ecfc:	b	eb48 <sfbpf_parse+0x64>
    ed00:	ldr	r0, [pc, #4024]	; fcc0 <sfbpf_parse+0x11dc>
    ed04:	add	r0, pc, r0
    ed08:	ldrb	r7, [r0, sl]
    ed0c:	cmp	r7, #0
    ed10:	beq	fe78 <sfbpf_parse+0x1394>
    ed14:	ldr	r0, [pc, #4008]	; fcc4 <sfbpf_parse+0x11e0>
    ed18:	add	r0, pc, r0
    ed1c:	ldrb	lr, [r0, r7]
    ed20:	rsb	r0, lr, #1
    ed24:	mov	r1, r9
    ed28:	ldr	r6, [r1, r0, lsl #4]!
    ed2c:	lsr	r5, r6, #24
    ed30:	lsr	r4, r6, #16
    ed34:	lsr	sl, r6, #8
    ed38:	sub	r0, r7, #2
    ed3c:	ldmib	r1, {r2, r3}
    ed40:	ldr	r1, [r1, #12]
    ed44:	str	r1, [sp, #28]
    ed48:	cmp	r0, #200	; 0xc8
    ed4c:	bhi	fd10 <sfbpf_parse+0x122c>
    ed50:	add	r1, pc, #4
    ed54:	ldr	r0, [r1, r0, lsl #2]
    ed58:	add	pc, r1, r0
    ed5c:	.word	0x00000dcc
    ed60:	.word	0x00000fb4
    ed64:	.word	0x00000b78
    ed68:	.word	0x00000fb4
    ed6c:	.word	0x00000364
    ed70:	.word	0x00000364
    ed74:	.word	0x00000340
    ed78:	.word	0x00000340
    ed7c:	.word	0x00000324
    ed80:	.word	0x00000324
    ed84:	.word	0x00000fb4
    ed88:	.word	0x000003a8
    ed8c:	.word	0x00000324
    ed90:	.word	0x00000674
    ed94:	.word	0x000004a8
    ed98:	.word	0x000005b0
    ed9c:	.word	0x000004cc
    eda0:	.word	0x00000460
    eda4:	.word	0x00000f6c
    eda8:	.word	0x00000f34
    edac:	.word	0x00001040
    edb0:	.word	0x000003d0
    edb4:	.word	0x00000324
    edb8:	.word	0x00000324
    edbc:	.word	0x00000fb4
    edc0:	.word	0x00000364
    edc4:	.word	0x00000340
    edc8:	.word	0x000003a8
    edcc:	.word	0x00000fb4
    edd0:	.word	0x00000fb4
    edd4:	.word	0x000003d0
    edd8:	.word	0x00000530
    eddc:	.word	0x00000564
    ede0:	.word	0x0000040c
    ede4:	.word	0x00000574
    ede8:	.word	0x000005dc
    edec:	.word	0x0000040c
    edf0:	.word	0x000003e8
    edf4:	.word	0x000009fc
    edf8:	.word	0x00000610
    edfc:	.word	0x000006a0
    ee00:	.word	0x00000a08
    ee04:	.word	0x00000478
    ee08:	.word	0x00000794
    ee0c:	.word	0x00000480
    ee10:	.word	0x000003fc
    ee14:	.word	0x00000b4c
    ee18:	.word	0x000003fc
    ee1c:	.word	0x00000fb4
    ee20:	.word	0x00000700
    ee24:	.word	0x0000039c
    ee28:	.word	0x0000037c
    ee2c:	.word	0x00000358
    ee30:	.word	0x00000358
    ee34:	.word	0x00000388
    ee38:	.word	0x00000388
    ee3c:	.word	0x000008f4
    ee40:	.word	0x00000b8c
    ee44:	.word	0x00000424
    ee48:	.word	0x00000a40
    ee4c:	.word	0x0000039c
    ee50:	.word	0x0000037c
    ee54:	.word	0x00000358
    ee58:	.word	0x00000424
    ee5c:	.word	0x00000388
    ee60:	.word	0x0000039c
    ee64:	.word	0x0000037c
    ee68:	.word	0x00000358
    ee6c:	.word	0x00000d20
    ee70:	.word	0x00000f18
    ee74:	.word	0x000004c0
    ee78:	.word	0x0000089c
    ee7c:	.word	0x0000058c
    ee80:	.word	0x00000b98
    ee84:	.word	0x00000ba4
    ee88:	.word	0x000007e0
    ee8c:	.word	0x00000c70
    ee90:	.word	0x00000bb0
    ee94:	.word	0x000006bc
    ee98:	.word	0x00000708
    ee9c:	.word	0x00000bbc
    eea0:	.word	0x00000cf8
    eea4:	.word	0x0000049c
    eea8:	.word	0x00000540
    eeac:	.word	0x00000714
    eeb0:	.word	0x00000720
    eeb4:	.word	0x00000558
    eeb8:	.word	0x000005a4
    eebc:	.word	0x00000d2c
    eec0:	.word	0x00000d6c
    eec4:	.word	0x0000065c
    eec8:	.word	0x00000df0
    eecc:	.word	0x00000e54
    eed0:	.word	0x00000f00
    eed4:	.word	0x00000a4c
    eed8:	.word	0x00000ef0
    eedc:	.word	0x00000598
    eee0:	.word	0x00000e3c
    eee4:	.word	0x00000a80
    eee8:	.word	0x00000604
    eeec:	.word	0x00000a58
    eef0:	.word	0x0000054c
    eef4:	.word	0x00000e60
    eef8:	.word	0x00000e6c
    eefc:	.word	0x0000062c
    ef00:	.word	0x00000d38
    ef04:	.word	0x00000af0
    ef08:	.word	0x00000b0c
    ef0c:	.word	0x00000ea4
    ef10:	.word	0x00000eb4
    ef14:	.word	0x000007ec
    ef18:	.word	0x000008a8
    ef1c:	.word	0x000006c8
    ef20:	.word	0x00000584
    ef24:	.word	0x00000d54
    ef28:	.word	0x000005ec
    ef2c:	.word	0x00000394
    ef30:	.word	0x00000394
    ef34:	.word	0x00000d04
    ef38:	.word	0x00000cc0
    ef3c:	.word	0x000006e4
    ef40:	.word	0x00000e88
    ef44:	.word	0x00000740
    ef48:	.word	0x00000dfc
    ef4c:	.word	0x000007b0
    ef50:	.word	0x00000668
    ef54:	.word	0x0000094c
    ef58:	.word	0x000007f4
    ef5c:	.word	0x00000fb4
    ef60:	.word	0x00000900
    ef64:	.word	0x00000fb4
    ef68:	.word	0x0000096c
    ef6c:	.word	0x000009bc
    ef70:	.word	0x00000fb4
    ef74:	.word	0x00000810
    ef78:	.word	0x00000394
    ef7c:	.word	0x00001114
    ef80:	.word	0x00001118
    ef84:	.word	0x00000450
    ef88:	.word	0x00000458
    ef8c:	.word	0x00000404
    ef90:	.word	0x00000450
    ef94:	.word	0x00000458
    ef98:	.word	0x00000404
    ef9c:	.word	0x0000075c
    efa0:	.word	0x00000fb4
    efa4:	.word	0x00000d78
    efa8:	.word	0x00000e18
    efac:	.word	0x00000648
    efb0:	.word	0x00000a64
    efb4:	.word	0x00000938
    efb8:	.word	0x00000778
    efbc:	.word	0x00000d94
    efc0:	.word	0x00000c5c
    efc4:	.word	0x000008c4
    efc8:	.word	0x0000072c
    efcc:	.word	0x00000c94
    efd0:	.word	0x00000440
    efd4:	.word	0x00000c7c
    efd8:	.word	0x00000cdc
    efdc:	.word	0x0000078c
    efe0:	.word	0x000007c0
    efe4:	.word	0x000007c8
    efe8:	.word	0x000007d0
    efec:	.word	0x00000fb4
    eff0:	.word	0x00000440
    eff4:	.word	0x000008d8
    eff8:	.word	0x00000bc8
    effc:	.word	0x00000438
    f000:	.word	0x0000041c
    f004:	.word	0x000007d8
    f008:	.word	0x00000430
    f00c:	.word	0x00000ac0
    f010:	.word	0x00000ce4
    f014:	.word	0x00000cb0
    f018:	.word	0x00000bd0
    f01c:	.word	0x00000bd8
    f020:	.word	0x00000cb8
    f024:	.word	0x00000be0
    f028:	.word	0x00000b30
    f02c:	.word	0x00000fb4
    f030:	.word	0x000008e0
    f034:	.word	0x00000ac8
    f038:	.word	0x00000448
    f03c:	.word	0x00000a8c
    f040:	.word	0x00000fb4
    f044:	.word	0x00000340
    f048:	.word	0x00000438
    f04c:	.word	0x0000041c
    f050:	.word	0x00000430
    f054:	.word	0x00000a78
    f058:	.word	0x00000be8
    f05c:	.word	0x00000ab8
    f060:	.word	0x00000bf0
    f064:	.word	0x00000fb4
    f068:	.word	0x00000b38
    f06c:	.word	0x00000bf8
    f070:	.word	0x00000448
    f074:	.word	0x00000c14
    f078:	.word	0x00000fb4
    f07c:	.word	0x00000340
    f080:	ldr	r6, [r9, #-16]
    f084:	ldr	r2, [r9, #-12]
    f088:	ldr	r3, [r9, #-8]
    f08c:	ldr	r0, [r9, #-4]
    f090:	b	fd00 <sfbpf_parse+0x121c>
    f094:	rsb	r7, sl, #0
    f098:	b	ed14 <sfbpf_parse+0x230>
    f09c:	ldr	r0, [r9, #-20]	; 0xffffffec
    f0a0:	ldr	r1, [r9, #12]
    f0a4:	mov	r4, ip
    f0a8:	mov	r5, lr
    f0ac:	bl	3244 <sf_gen_or>
    f0b0:	b	f13c <sfbpf_parse+0x658>
    f0b4:	mov	sl, #0
    f0b8:	mov	r6, #3
    f0bc:	b	fa48 <sfbpf_parse+0xf64>
    f0c0:	ldr	r0, [r9, #-20]	; 0xffffffec
    f0c4:	ldr	r1, [r9, #12]
    f0c8:	mov	r4, ip
    f0cc:	mov	r5, lr
    f0d0:	bl	316c <sf_gen_and>
    f0d4:	b	f13c <sfbpf_parse+0x658>
    f0d8:	mov	sl, #0
    f0dc:	mov	r6, #2
    f0e0:	b	fa48 <sfbpf_parse+0xf64>
    f0e4:	mov	sl, #0
    f0e8:	mov	r6, #4
    f0ec:	b	fa48 <sfbpf_parse+0xf64>
    f0f0:	ldr	r6, [r9]
    f0f4:	b	fd04 <sfbpf_parse+0x1220>
    f0f8:	mov	sl, #0
    f0fc:	mov	r6, #1
    f100:	b	fa48 <sfbpf_parse+0xf64>
    f104:	ldr	r6, [r9, #-16]
    f108:	ldr	r1, [r9]
    f10c:	mov	r0, #0
    f110:	str	r2, [sp, #16]
    f114:	mov	r2, r6
    f118:	mov	r4, ip
    f11c:	mov	r5, lr
    f120:	mov	sl, r3
    f124:	bl	6eec <sf_gen_ncode>
    f128:	b	fcf0 <sfbpf_parse+0x120c>
    f12c:	ldr	r0, [r9, #12]
    f130:	mov	r4, ip
    f134:	mov	r5, lr
    f138:	bl	3298 <sf_gen_not>
    f13c:	mov	lr, r5
    f140:	mov	ip, r4
    f144:	ldr	r6, [r9]
    f148:	ldr	r2, [r9, #4]
    f14c:	ldr	r3, [r9, #8]
    f150:	ldr	r0, [r9, #12]
    f154:	b	fd00 <sfbpf_parse+0x121c>
    f158:	ldr	r0, [r9, #12]
    f15c:	b	f8d0 <sfbpf_parse+0xdec>
    f160:	mov	r6, #16
    f164:	b	fa44 <sfbpf_parse+0xf60>
    f168:	ldrb	r6, [r9]
    f16c:	ldr	sl, [r9, #-16]
    f170:	mov	r4, #0
    f174:	b	fd10 <sfbpf_parse+0x122c>
    f178:	mov	r6, #23
    f17c:	b	fa44 <sfbpf_parse+0xf60>
    f180:	mov	sl, #0
    f184:	mov	r6, #7
    f188:	b	fa48 <sfbpf_parse+0xf64>
    f18c:	mov	r6, #24
    f190:	b	fa44 <sfbpf_parse+0xf60>
    f194:	mov	r6, #22
    f198:	b	fa44 <sfbpf_parse+0xf60>
    f19c:	ldr	r6, [r9, #-16]
    f1a0:	b	fd04 <sfbpf_parse+0x1220>
    f1a4:	ldr	r0, [r9, #-4]
    f1a8:	b	f8d0 <sfbpf_parse+0xdec>
    f1ac:	mov	r6, #32
    f1b0:	b	fa44 <sfbpf_parse+0xf60>
    f1b4:	mov	r6, #48	; 0x30
    f1b8:	b	fa44 <sfbpf_parse+0xf60>
    f1bc:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f1c0:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f1c4:	str	r2, [sp, #16]
    f1c8:	ldr	r2, [r9]
    f1cc:	mov	r1, #0
    f1d0:	b	fcdc <sfbpf_parse+0x11f8>
    f1d4:	ldr	r0, [r9]
    f1d8:	b	f8d0 <sfbpf_parse+0xdec>
    f1dc:	ldr	r0, [r9]
    f1e0:	mov	sl, ip
    f1e4:	mov	r5, lr
    f1e8:	mov	r6, r2
    f1ec:	mov	r4, r3
    f1f0:	bl	9b24 <sf_gen_atmmulti_abbrev>
    f1f4:	b	f8c0 <sfbpf_parse+0xddc>
    f1f8:	mov	r4, #0
    f1fc:	mov	r6, #16
    f200:	b	fc7c <sfbpf_parse+0x1198>
    f204:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f208:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f20c:	str	r2, [sp, #16]
    f210:	ldr	r2, [r9]
    f214:	mov	r1, #0
    f218:	b	f320 <sfbpf_parse+0x83c>
    f21c:	mov	r4, #0
    f220:	mov	r6, #6
    f224:	b	fc7c <sfbpf_parse+0x1198>
    f228:	str	r2, [sp, #16]
    f22c:	stmib	sp, {r3, lr}
    f230:	str	ip, [sp, #12]
    f234:	ldr	r6, [r9, #-16]
    f238:	mvn	r0, #2
    f23c:	uxtab	r0, r0, r6
    f240:	cmp	r0, #4
    f244:	bhi	f268 <sfbpf_parse+0x784>
    f248:	add	r1, pc, #4
    f24c:	ldr	r0, [r1, r0, lsl #2]
    f250:	add	pc, r1, r0
    f254:	.word	0x00000c9c
    f258:	.word	0x00000014
    f25c:	.word	0x00000c60
    f260:	.word	0x00000c6c
    f264:	.word	0x00000c78
    f268:	ldr	r0, [r9]
    f26c:	mov	r1, #0
    f270:	mov	r2, r6
    f274:	bl	6eec <sf_gen_ncode>
    f278:	str	r0, [sp, #28]
    f27c:	lsr	sl, r6, #8
    f280:	lsr	r4, r6, #16
    f284:	lsr	r5, r6, #24
    f288:	b	fe24 <sfbpf_parse+0x1340>
    f28c:	ldrb	r6, [r9]
    f290:	ldr	sl, [r9, #-32]	; 0xffffffe0
    f294:	ldr	r4, [r9, #-16]
    f298:	b	fd10 <sfbpf_parse+0x122c>
    f29c:	mov	r4, #0
    f2a0:	mov	r6, #15
    f2a4:	b	fc7c <sfbpf_parse+0x1198>
    f2a8:	mov	r5, #0
    f2ac:	mov	r6, #30
    f2b0:	b	fc64 <sfbpf_parse+0x1180>
    f2b4:	mov	r4, #0
    f2b8:	mov	r6, #19
    f2bc:	b	fc7c <sfbpf_parse+0x1198>
    f2c0:	ldr	sl, [r9, #-16]
    f2c4:	ldr	r4, [r9]
    f2c8:	mov	r6, #0
    f2cc:	b	fd10 <sfbpf_parse+0x122c>
    f2d0:	ldr	sl, [r9, #-16]
    f2d4:	mov	r4, #0
    f2d8:	mov	r6, #5
    f2dc:	b	fd10 <sfbpf_parse+0x122c>
    f2e0:	mvn	r0, #0
    f2e4:	b	f428 <sfbpf_parse+0x944>
    f2e8:	mov	r4, #0
    f2ec:	mov	r6, #8
    f2f0:	b	fc7c <sfbpf_parse+0x1198>
    f2f4:	mov	r5, #0
    f2f8:	mov	r6, #38	; 0x26
    f2fc:	b	fc64 <sfbpf_parse+0x1180>
    f300:	mov	r5, #0
    f304:	mov	r6, #20
    f308:	b	fc64 <sfbpf_parse+0x1180>
    f30c:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f310:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f314:	ldr	r1, [r9]
    f318:	str	r2, [sp, #16]
    f31c:	mov	r2, #0
    f320:	mov	sl, r3
    f324:	mov	r3, r6
    f328:	mov	r4, ip
    f32c:	mov	r5, lr
    f330:	bl	6dd0 <sf_gen_mcode>
    f334:	b	fcf0 <sfbpf_parse+0x120c>
    f338:	ldr	sl, [r9, #-16]
    f33c:	mov	r4, #0
    f340:	mov	r6, #6
    f344:	b	fd10 <sfbpf_parse+0x122c>
    f348:	mov	sl, ip
    f34c:	mov	r5, lr
    f350:	mov	r6, r2
    f354:	mov	r4, r3
    f358:	bl	9204 <sf_gen_pppoes>
    f35c:	b	fc28 <sfbpf_parse+0x1144>
    f360:	mov	r5, #0
    f364:	mov	r6, #28
    f368:	b	fc64 <sfbpf_parse+0x1180>
    f36c:	ldr	r0, [r9]
    f370:	mov	sl, ip
    f374:	mov	r5, lr
    f378:	mov	r6, r2
    f37c:	mov	r4, r3
    f380:	bl	32ac <sf_gen_proto_abbrev>
    f384:	b	f8c0 <sfbpf_parse+0xddc>
    f388:	ldr	r0, [r9, #-16]
    f38c:	mov	sl, ip
    f390:	mov	r5, lr
    f394:	mov	r6, r2
    f398:	mov	r4, r3
    f39c:	bl	841c <sf_gen_multicast>
    f3a0:	b	fc28 <sfbpf_parse+0x1144>
    f3a4:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f3a8:	mov	sl, r2
    f3ac:	ldr	r2, [r9]
    f3b0:	mov	r0, #0
    f3b4:	b	fb00 <sfbpf_parse+0x101c>
    f3b8:	mov	r5, #0
    f3bc:	mov	r6, #26
    f3c0:	b	fc64 <sfbpf_parse+0x1180>
    f3c4:	ldr	r0, [r9]
    f3c8:	mov	r1, #12
    f3cc:	b	f6b0 <sfbpf_parse+0xbcc>
    f3d0:	ldr	r6, [r9, #-16]
    f3d4:	ldr	r0, [r9]
    f3d8:	lsr	r5, r6, #24
    f3dc:	lsr	r4, r6, #16
    f3e0:	lsr	sl, r6, #8
    f3e4:	mov	r1, r6
    f3e8:	str	ip, [sp, #12]
    f3ec:	str	r2, [sp, #16]
    f3f0:	stmib	sp, {r3, lr}
    f3f4:	bl	4978 <sf_gen_scode>
    f3f8:	b	f9a4 <sfbpf_parse+0xec0>
    f3fc:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f400:	ldr	r0, [r9, #-16]
    f404:	mov	sl, r2
    f408:	ldr	r2, [r9]
    f40c:	mov	r6, r3
    f410:	mov	r3, #0
    f414:	b	f77c <sfbpf_parse+0xc98>
    f418:	mov	r4, #0
    f41c:	mov	r6, #23
    f420:	b	fc7c <sfbpf_parse+0x1198>
    f424:	ldr	r0, [r9]
    f428:	mov	sl, ip
    f42c:	mov	r5, lr
    f430:	mov	r6, r2
    f434:	mov	r4, r3
    f438:	bl	90a0 <sf_gen_mpls>
    f43c:	b	fc28 <sfbpf_parse+0x1144>
    f440:	ldr	r0, [r9]
    f444:	mov	sl, ip
    f448:	mov	r5, lr
    f44c:	mov	r6, r2
    f450:	mov	r4, r3
    f454:	bl	8ddc <sf_gen_pf_rnr>
    f458:	b	fc28 <sfbpf_parse+0x1144>
    f45c:	mov	r6, #0
    f460:	b	fa44 <sfbpf_parse+0xf60>
    f464:	mov	r4, #0
    f468:	mov	r6, #12
    f46c:	b	fc7c <sfbpf_parse+0x1198>
    f470:	mov	r4, #0
    f474:	mov	r6, #17
    f478:	b	fc7c <sfbpf_parse+0x1198>
    f47c:	mov	r4, #0
    f480:	mov	r6, #18
    f484:	b	fc7c <sfbpf_parse+0x1198>
    f488:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f48c:	mov	sl, r2
    f490:	ldr	r2, [r9]
    f494:	mov	r0, #112	; 0x70
    f498:	b	fb00 <sfbpf_parse+0x101c>
    f49c:	ldr	r0, [r9]
    f4a0:	mov	sl, ip
    f4a4:	mov	r5, lr
    f4a8:	mov	r6, r2
    f4ac:	mov	r4, r3
    f4b0:	bl	8e0c <sf_gen_pf_reason>
    f4b4:	b	fc28 <sfbpf_parse+0x1144>
    f4b8:	ldr	r0, [r9]
    f4bc:	mov	sl, ip
    f4c0:	mov	r5, lr
    f4c4:	mov	r6, r2
    f4c8:	mov	r4, r3
    f4cc:	bl	7cf4 <sf_gen_loadi>
    f4d0:	b	fc28 <sfbpf_parse+0x1144>
    f4d4:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f4d8:	mov	sl, r2
    f4dc:	ldr	r2, [r9]
    f4e0:	mov	r0, #48	; 0x30
    f4e4:	b	fb00 <sfbpf_parse+0x101c>
    f4e8:	mov	r6, #124	; 0x7c
    f4ec:	b	fa44 <sfbpf_parse+0xf60>
    f4f0:	ldr	r0, [r9]
    f4f4:	mov	sl, ip
    f4f8:	mov	r5, lr
    f4fc:	mov	r6, r2
    f500:	mov	r4, r3
    f504:	bl	9490 <sf_gen_atmtype_abbrev>
    f508:	b	f8c0 <sfbpf_parse+0xddc>
    f50c:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f510:	ldr	r1, [r9]
    f514:	orr	r0, r1, r0
    f518:	b	f6ac <sfbpf_parse+0xbc8>
    f51c:	mov	r6, #60	; 0x3c
    f520:	b	fa44 <sfbpf_parse+0xf60>
    f524:	mov	r6, #62	; 0x3e
    f528:	b	fa44 <sfbpf_parse+0xf60>
    f52c:	mov	r6, #61	; 0x3d
    f530:	b	fa44 <sfbpf_parse+0xf60>
    f534:	mov	r6, #25
    f538:	b	fa44 <sfbpf_parse+0xf60>
    f53c:	mov	r4, #0
    f540:	mov	r6, #21
    f544:	b	fc7c <sfbpf_parse+0x1198>
    f548:	ldr	r0, [r9]
    f54c:	b	f608 <sfbpf_parse+0xb24>
    f550:	ldr	r0, [r9]
    f554:	mov	sl, ip
    f558:	mov	r5, lr
    f55c:	mov	r6, r2
    f560:	mov	r4, r3
    f564:	bl	8eb0 <sf_gen_p80211_fcdir>
    f568:	b	fc28 <sfbpf_parse+0x1144>
    f56c:	str	r2, [sp, #16]
    f570:	stmib	sp, {r3, lr}
    f574:	str	ip, [sp, #12]
    f578:	ldr	r0, [r9]
    f57c:	ldr	r1, [pc, #2460]	; ff20 <sfbpf_parse+0x143c>
    f580:	add	r1, pc, r1
    f584:	bl	e850 <sfbpf_strcasecmp>
    f588:	mov	sl, #0
    f58c:	cmp	r0, #0
    f590:	beq	fddc <sfbpf_parse+0x12f8>
    f594:	ldr	r0, [r9]
    f598:	ldr	r1, [pc, #2436]	; ff24 <sfbpf_parse+0x1440>
    f59c:	add	r1, pc, r1
    f5a0:	bl	e850 <sfbpf_strcasecmp>
    f5a4:	cmp	r0, #0
    f5a8:	beq	fe10 <sfbpf_parse+0x132c>
    f5ac:	ldr	r0, [r9]
    f5b0:	ldr	r1, [pc, #2416]	; ff28 <sfbpf_parse+0x1444>
    f5b4:	add	r1, pc, r1
    f5b8:	bl	e850 <sfbpf_strcasecmp>
    f5bc:	cmp	r0, #0
    f5c0:	beq	fe18 <sfbpf_parse+0x1334>
    f5c4:	ldr	r0, [r9]
    f5c8:	ldr	r1, [pc, #2396]	; ff2c <sfbpf_parse+0x1448>
    f5cc:	add	r1, pc, r1
    f5d0:	bl	e850 <sfbpf_strcasecmp>
    f5d4:	mov	r6, #3
    f5d8:	cmp	r0, #0
    f5dc:	mov	r4, #0
    f5e0:	mov	r5, #0
    f5e4:	ldr	ip, [sp, #12]
    f5e8:	ldr	r2, [sp, #16]
    f5ec:	ldmib	sp, {r3, lr}
    f5f0:	beq	fd10 <sfbpf_parse+0x122c>
    f5f4:	b	fed8 <sfbpf_parse+0x13f4>
    f5f8:	mov	r4, #0
    f5fc:	mov	r6, #7
    f600:	b	fc7c <sfbpf_parse+0x1198>
    f604:	mvn	r0, #0
    f608:	mov	sl, ip
    f60c:	mov	r5, lr
    f610:	mov	r6, r2
    f614:	mov	r4, r3
    f618:	bl	8f84 <sf_gen_vlan>
    f61c:	b	fc28 <sfbpf_parse+0x1144>
    f620:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f624:	mov	sl, r2
    f628:	ldr	r2, [r9]
    f62c:	mov	r0, #96	; 0x60
    f630:	b	fb00 <sfbpf_parse+0x101c>
    f634:	mov	r6, #30
    f638:	b	fa44 <sfbpf_parse+0xf60>
    f63c:	ldr	r0, [r9, #-28]	; 0xffffffe4
    f640:	str	r2, [sp, #16]
    f644:	ldr	r2, [r9, #-16]
    f648:	ldr	r1, [r9]
    f64c:	b	f808 <sfbpf_parse+0xd24>
    f650:	mov	sl, #0
    f654:	mov	r6, #5
    f658:	b	fa48 <sfbpf_parse+0xf64>
    f65c:	str	r2, [sp, #16]
    f660:	stmib	sp, {r3, lr}
    f664:	str	ip, [sp, #12]
    f668:	ldr	r0, [r9]
    f66c:	ldr	r1, [pc, #2204]	; ff10 <sfbpf_parse+0x142c>
    f670:	add	r1, pc, r1
    f674:	bl	ff5c <str2tok>
    f678:	cmn	r0, #1
    f67c:	beq	fe9c <sfbpf_parse+0x13b8>
    f680:	lsr	r5, r0, #24
    f684:	lsr	r4, r0, #16
    f688:	lsr	sl, r0, #8
    f68c:	mov	r6, r0
    f690:	b	fe24 <sfbpf_parse+0x1340>
    f694:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f698:	mov	sl, r2
    f69c:	ldr	r2, [r9]
    f6a0:	mov	r0, #32
    f6a4:	b	fb00 <sfbpf_parse+0x101c>
    f6a8:	ldr	r0, [r9]
    f6ac:	mov	r1, #252	; 0xfc
    f6b0:	mov	sl, ip
    f6b4:	mov	r5, lr
    f6b8:	mov	r6, r2
    f6bc:	mov	r4, r3
    f6c0:	bl	8e3c <sf_gen_p80211_type>
    f6c4:	b	fc28 <sfbpf_parse+0x1144>
    f6c8:	str	r3, [sp, #4]
    f6cc:	str	r2, [sp, #16]
    f6d0:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f6d4:	cmp	r0, #0
    f6d8:	str	ip, [sp, #12]
    f6dc:	str	lr, [sp, #8]
    f6e0:	beq	fde4 <sfbpf_parse+0x1300>
    f6e4:	mov	r1, #0
    f6e8:	cmp	r1, #2
    f6ec:	beq	fea8 <sfbpf_parse+0x13c4>
    f6f0:	ldr	r2, [pc, #2076]	; ff14 <sfbpf_parse+0x1430>
    f6f4:	add	r2, pc, r2
    f6f8:	add	r3, r2, r1, lsl #3
    f6fc:	ldr	r3, [r3, #8]
    f700:	add	r1, r1, #1
    f704:	cmp	r0, r3
    f708:	bne	f6e8 <sfbpf_parse+0xc04>
    f70c:	add	r0, r2, r1, lsl #3
    f710:	ldr	r1, [r0, #4]
    f714:	b	fdec <sfbpf_parse+0x1308>
    f718:	str	r2, [sp, #16]
    f71c:	stmib	sp, {r3, lr}
    f720:	str	ip, [sp, #12]
    f724:	mov	r4, #0
    f728:	ldr	r5, [pc, #2024]	; ff18 <sfbpf_parse+0x1434>
    f72c:	add	r5, pc, r5
    f730:	add	r0, r5, r4, lsl #3
    f734:	ldr	r1, [r0, #4]
    f738:	ldr	r0, [r9]
    f73c:	bl	ff5c <str2tok>
    f740:	cmn	r0, #1
    f744:	bne	fba4 <sfbpf_parse+0x10c0>
    f748:	add	r4, r4, #1
    f74c:	cmp	r4, #3
    f750:	bne	f728 <sfbpf_parse+0xc44>
    f754:	b	fe9c <sfbpf_parse+0x13b8>
    f758:	ldr	r6, [r9, #-32]	; 0xffffffe0
    f75c:	ldr	r0, [r9, #-4]
    f760:	b	fd00 <sfbpf_parse+0x121c>
    f764:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f768:	ldr	r0, [r9, #-16]
    f76c:	mov	sl, r2
    f770:	ldr	r2, [r9]
    f774:	mov	r6, r3
    f778:	mov	r3, #1
    f77c:	mov	r4, ip
    f780:	mov	r5, lr
    f784:	bl	7b88 <sf_gen_relation>
    f788:	mov	r3, r6
    f78c:	mov	r2, sl
    f790:	mov	lr, r5
    f794:	mov	ip, r4
    f798:	b	f8d0 <sfbpf_parse+0xdec>
    f79c:	mov	sl, #0
    f7a0:	mov	r6, #8
    f7a4:	b	fa48 <sfbpf_parse+0xf64>
    f7a8:	mov	r5, #0
    f7ac:	mov	r6, #39	; 0x27
    f7b0:	b	fc64 <sfbpf_parse+0x1180>
    f7b4:	mov	r5, #0
    f7b8:	mov	r6, #29
    f7bc:	b	fc64 <sfbpf_parse+0x1180>
    f7c0:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f7c4:	mov	sl, r2
    f7c8:	ldr	r2, [r9]
    f7cc:	mov	r0, #16
    f7d0:	b	fb00 <sfbpf_parse+0x101c>
    f7d4:	mov	r3, #1
    f7d8:	b	fd10 <sfbpf_parse+0x122c>
    f7dc:	mov	r5, #0
    f7e0:	mov	r6, #27
    f7e4:	b	fc64 <sfbpf_parse+0x1180>
    f7e8:	ldr	r2, [r9, #-12]
    f7ec:	sub	r0, r2, #51	; 0x33
    f7f0:	cmp	r0, #1
    f7f4:	bhi	fd10 <sfbpf_parse+0x122c>
    f7f8:	ldr	r1, [r9]
    f7fc:	mov	r0, r2
    f800:	str	r2, [sp, #16]
    f804:	mov	r2, #16
    f808:	str	r3, [sp, #4]
    f80c:	mov	r3, #0
    f810:	b	f83c <sfbpf_parse+0xd58>
    f814:	mov	r3, #3
    f818:	b	fd10 <sfbpf_parse+0x122c>
    f81c:	mov	r6, #26
    f820:	b	fa44 <sfbpf_parse+0xf60>
    f824:	ldr	r0, [r9, #-28]	; 0xffffffe4
    f828:	str	r2, [sp, #16]
    f82c:	ldr	r2, [r9, #-16]
    f830:	ldr	r1, [r9]
    f834:	str	r3, [sp, #4]
    f838:	mov	r3, #1
    f83c:	str	ip, [sp, #12]
    f840:	str	lr, [sp, #8]
    f844:	bl	9280 <sf_gen_atmfield_code>
    f848:	b	f9a4 <sfbpf_parse+0xec0>
    f84c:	ldr	r0, [r9]
    f850:	mov	sl, ip
    f854:	mov	r5, lr
    f858:	mov	r6, r2
    f85c:	mov	r4, r3
    f860:	bl	7e40 <sf_gen_greater>
    f864:	b	fc28 <sfbpf_parse+0x1144>
    f868:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f86c:	ldr	r0, [r9, #-16]
    f870:	mov	sl, r2
    f874:	ldr	r2, [r9]
    f878:	mov	r4, ip
    f87c:	mov	r5, lr
    f880:	mov	r6, r3
    f884:	bl	7ea0 <sf_gen_byteop>
    f888:	b	fb10 <sfbpf_parse+0x102c>
    f88c:	mov	r2, #52	; 0x34
    f890:	b	fd10 <sfbpf_parse+0x122c>
    f894:	ldr	r0, [r9, #-24]	; 0xffffffe8
    f898:	str	r2, [sp, #16]
    f89c:	ldr	r2, [r9, #-16]
    f8a0:	ldr	r1, [r9]
    f8a4:	b	f990 <sfbpf_parse+0xeac>
    f8a8:	ldr	r0, [r9]
    f8ac:	mov	sl, ip
    f8b0:	mov	r5, lr
    f8b4:	mov	r6, r2
    f8b8:	mov	r4, r3
    f8bc:	bl	97dc <sf_gen_mtp2type_abbrev>
    f8c0:	mov	r3, r4
    f8c4:	mov	r2, r6
    f8c8:	mov	lr, r5
    f8cc:	mov	ip, sl
    f8d0:	str	r0, [sp, #28]
    f8d4:	mov	r6, #255	; 0xff
    f8d8:	mov	sl, #255	; 0xff
    f8dc:	mov	r4, #255	; 0xff
    f8e0:	mov	r5, #255	; 0xff
    f8e4:	b	fd10 <sfbpf_parse+0x122c>
    f8e8:	mov	sl, #0
    f8ec:	mov	r6, #6
    f8f0:	b	fa48 <sfbpf_parse+0xf64>
    f8f4:	mov	r4, #0
    f8f8:	mov	r6, #9
    f8fc:	b	fc7c <sfbpf_parse+0x1198>
    f900:	mov	r4, #0
    f904:	mov	r6, #10
    f908:	b	fc7c <sfbpf_parse+0x1198>
    f90c:	mov	r4, #0
    f910:	mov	r6, #11
    f914:	b	fc7c <sfbpf_parse+0x1198>
    f918:	mov	r4, #0
    f91c:	mov	r6, #13
    f920:	b	fc7c <sfbpf_parse+0x1198>
    f924:	mov	r6, #31
    f928:	b	fa44 <sfbpf_parse+0xf60>
    f92c:	mov	r6, #29
    f930:	b	fa44 <sfbpf_parse+0xf60>
    f934:	mov	r6, #70	; 0x46
    f938:	b	fa44 <sfbpf_parse+0xf60>
    f93c:	mov	r2, #51	; 0x33
    f940:	b	fd10 <sfbpf_parse+0x122c>
    f944:	mov	r3, #2
    f948:	b	fd10 <sfbpf_parse+0x122c>
    f94c:	mov	r3, #4
    f950:	b	fd10 <sfbpf_parse+0x122c>
    f954:	ldr	r0, [r9, #-24]	; 0xffffffe8
    f958:	str	r2, [sp, #16]
    f95c:	ldr	r2, [r9, #-16]
    f960:	ldr	r1, [r9]
    f964:	str	r3, [sp, #4]
    f968:	mov	r3, #1
    f96c:	b	f998 <sfbpf_parse+0xeb4>
    f970:	ldr	r3, [r9, #-8]
    f974:	sub	r0, r3, #1
    f978:	cmp	r0, #3
    f97c:	bhi	fd10 <sfbpf_parse+0x122c>
    f980:	ldr	r1, [r9]
    f984:	mov	r0, r3
    f988:	str	r2, [sp, #16]
    f98c:	mov	r2, #16
    f990:	str	r3, [sp, #4]
    f994:	mov	r3, #0
    f998:	str	ip, [sp, #12]
    f99c:	str	lr, [sp, #8]
    f9a0:	bl	9964 <sf_gen_mtp3field_code>
    f9a4:	ldr	r2, [sp, #16]
    f9a8:	ldmib	sp, {r3, lr}
    f9ac:	ldr	ip, [sp, #12]
    f9b0:	str	r0, [sp, #28]
    f9b4:	b	fd10 <sfbpf_parse+0x122c>
    f9b8:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f9bc:	mov	sl, r2
    f9c0:	ldr	r2, [r9]
    f9c4:	mov	r0, #64	; 0x40
    f9c8:	b	fb00 <sfbpf_parse+0x101c>
    f9cc:	mov	r4, #0
    f9d0:	mov	r6, #22
    f9d4:	b	fc7c <sfbpf_parse+0x1198>
    f9d8:	mov	sl, ip
    f9dc:	mov	r5, lr
    f9e0:	mov	r6, r2
    f9e4:	mov	r4, r3
    f9e8:	bl	7cac <sf_gen_loadlen>
    f9ec:	b	fc28 <sfbpf_parse+0x1144>
    f9f0:	ldr	r0, [r9]
    f9f4:	mov	sl, ip
    f9f8:	mov	r5, lr
    f9fc:	mov	r6, r2
    fa00:	mov	r4, r3
    fa04:	bl	7d44 <sf_gen_neg>
    fa08:	b	fc28 <sfbpf_parse+0x1144>
    fa0c:	mov	r6, #28
    fa10:	b	fa44 <sfbpf_parse+0xf60>
    fa14:	mov	r6, #71	; 0x47
    fa18:	b	fa44 <sfbpf_parse+0xf60>
    fa1c:	ldr	r0, [r9]
    fa20:	mov	sl, ip
    fa24:	mov	r5, lr
    fa28:	mov	r6, r2
    fa2c:	mov	r4, r3
    fa30:	bl	8dc4 <sf_gen_pf_ruleset>
    fa34:	b	fc28 <sfbpf_parse+0x1144>
    fa38:	mov	r6, #38	; 0x26
    fa3c:	b	fa44 <sfbpf_parse+0xf60>
    fa40:	mov	r6, #27
    fa44:	mov	sl, #0
    fa48:	mov	r4, #0
    fa4c:	mov	r5, #0
    fa50:	b	fd10 <sfbpf_parse+0x122c>
    fa54:	mov	r4, #0
    fa58:	mov	r6, #14
    fa5c:	b	fc7c <sfbpf_parse+0x1198>
    fa60:	ldr	r0, [r9]
    fa64:	mov	sl, ip
    fa68:	mov	r5, lr
    fa6c:	mov	r6, r2
    fa70:	mov	r4, r3
    fa74:	bl	8dac <sf_gen_pf_ifname>
    fa78:	b	fc28 <sfbpf_parse+0x1144>
    fa7c:	mov	r4, #0
    fa80:	mov	r6, #4
    fa84:	b	fc7c <sfbpf_parse+0x1198>
    fa88:	mov	r5, #0
    fa8c:	mov	r6, #24
    fa90:	b	fc64 <sfbpf_parse+0x1180>
    fa94:	ldr	r0, [r9]
    fa98:	mov	sl, ip
    fa9c:	mov	r5, lr
    faa0:	mov	r6, r2
    faa4:	mov	r4, r3
    faa8:	bl	7e7c <sf_gen_less>
    faac:	b	fc28 <sfbpf_parse+0x1144>
    fab0:	mov	sl, ip
    fab4:	mov	r5, lr
    fab8:	mov	r6, r2
    fabc:	mov	r4, r3
    fac0:	bl	91fc <sf_gen_pppoed>
    fac4:	b	fc28 <sfbpf_parse+0x1144>
    fac8:	mov	r5, #0
    facc:	mov	r6, #25
    fad0:	b	fc64 <sfbpf_parse+0x1180>
    fad4:	ldr	r0, [r9, #-48]	; 0xffffffd0
    fad8:	ldr	r1, [r9, #-16]
    fadc:	mov	sl, r2
    fae0:	mov	r2, #1
    fae4:	b	fb84 <sfbpf_parse+0x10a0>
    fae8:	.word	0x00022040
    faec:	.word	0x0002202c
    faf0:	ldr	r1, [r9, #-32]	; 0xffffffe0
    faf4:	mov	sl, r2
    faf8:	ldr	r2, [r9]
    fafc:	mov	r0, #80	; 0x50
    fb00:	mov	r4, ip
    fb04:	mov	r5, lr
    fb08:	mov	r6, r3
    fb0c:	bl	7da0 <sf_gen_arth>
    fb10:	mov	r3, r6
    fb14:	mov	r2, sl
    fb18:	mov	lr, r5
    fb1c:	mov	ip, r4
    fb20:	b	fc38 <sfbpf_parse+0x1154>
    fb24:	.word	0x000062c4
    fb28:	ldr	r0, [r9, #12]
    fb2c:	str	ip, [sp, #12]
    fb30:	str	r2, [sp, #16]
    fb34:	stmib	sp, {r3, lr}
    fb38:	bl	2fd8 <sf_finish_parse>
    fb3c:	ldr	r2, [sp, #16]
    fb40:	ldmib	sp, {r3, lr}
    fb44:	ldr	ip, [sp, #12]
    fb48:	b	fd10 <sfbpf_parse+0x122c>
    fb4c:	mov	r5, #0
    fb50:	mov	r6, #31
    fb54:	b	fc64 <sfbpf_parse+0x1180>
    fb58:	ldr	r0, [r9]
    fb5c:	mov	sl, ip
    fb60:	mov	r5, lr
    fb64:	mov	r6, r2
    fb68:	mov	r4, r3
    fb6c:	bl	8e24 <sf_gen_pf_action>
    fb70:	b	fc28 <sfbpf_parse+0x1144>
    fb74:	ldr	r0, [r9, #-80]	; 0xffffffb0
    fb78:	ldr	r1, [r9, #-48]	; 0xffffffd0
    fb7c:	mov	sl, r2
    fb80:	ldr	r2, [r9, #-16]
    fb84:	mov	r4, ip
    fb88:	mov	r5, lr
    fb8c:	mov	r6, r3
    fb90:	bl	755c <sf_gen_load>
    fb94:	b	fb10 <sfbpf_parse+0x102c>
    fb98:	mov	r5, #0
    fb9c:	mov	r6, #37	; 0x25
    fba0:	b	fc64 <sfbpf_parse+0x1180>
    fba4:	ldr	r1, [r5, r4, lsl #3]
    fba8:	orr	r6, r1, r0
    fbac:	b	fe00 <sfbpf_parse+0x131c>
    fbb0:	mov	r5, #0
    fbb4:	mov	r6, #32
    fbb8:	b	fc64 <sfbpf_parse+0x1180>
    fbbc:	mov	r5, #0
    fbc0:	mov	r6, #40	; 0x28
    fbc4:	b	fc64 <sfbpf_parse+0x1180>
    fbc8:	ldr	r0, [r9, #-16]
    fbcc:	mov	sl, ip
    fbd0:	mov	r5, lr
    fbd4:	mov	r6, r2
    fbd8:	mov	r4, r3
    fbdc:	bl	8008 <sf_gen_broadcast>
    fbe0:	b	fc28 <sfbpf_parse+0x1144>
    fbe4:	ldr	r0, [r9]
    fbe8:	mov	sl, ip
    fbec:	mov	r5, lr
    fbf0:	mov	r6, r2
    fbf4:	mov	r4, r3
    fbf8:	bl	8df4 <sf_gen_pf_srnr>
    fbfc:	b	fc28 <sfbpf_parse+0x1144>
    fc00:	mov	r0, #0
    fc04:	b	fc14 <sfbpf_parse+0x1130>
    fc08:	.word	0x000050ca
    fc0c:	.word	0x00021ef8
    fc10:	mov	r0, #1
    fc14:	mov	sl, ip
    fc18:	mov	r5, lr
    fc1c:	mov	r6, r2
    fc20:	mov	r4, r3
    fc24:	bl	892c <sf_gen_inbound>
    fc28:	mov	r3, r4
    fc2c:	mov	r2, r6
    fc30:	mov	lr, r5
    fc34:	mov	ip, sl
    fc38:	mov	r6, r0
    fc3c:	lsr	r5, r0, #24
    fc40:	lsr	r4, r0, #16
    fc44:	lsr	sl, r0, #8
    fc48:	b	fd10 <sfbpf_parse+0x122c>
    fc4c:	mov	r5, #0
    fc50:	mov	r6, #36	; 0x24
    fc54:	b	fc64 <sfbpf_parse+0x1180>
    fc58:	.word	0x00021edc
    fc5c:	mov	r5, #0
    fc60:	mov	r6, #33	; 0x21
    fc64:	mov	sl, #0
    fc68:	mov	r4, #0
    fc6c:	b	fd10 <sfbpf_parse+0x122c>
    fc70:	.word	0x00005292
    fc74:	mov	r4, #0
    fc78:	mov	r6, #5
    fc7c:	mov	sl, #0
    fc80:	mov	r5, #0
    fc84:	b	fd10 <sfbpf_parse+0x122c>
    fc88:	.word	0x00021ea4
    fc8c:	.word	0x000053d0
    fc90:	ldr	r6, [r9, #-16]
    fc94:	ldr	r0, [r9]
    fc98:	mov	r1, r6
    fc9c:	str	ip, [sp, #12]
    fca0:	mov	r5, lr
    fca4:	mov	r4, r2
    fca8:	mov	sl, r3
    fcac:	bl	7320 <sf_gen_ecode>
    fcb0:	b	fdbc <sfbpf_parse+0x12d8>
    fcb4:	.word	0x000058f4
    fcb8:	.word	0x00021e60
    fcbc:	.word	0x00021e4c
    fcc0:	.word	0x00005df0
    fcc4:	.word	0x00005eee
    fcc8:	ldr	r6, [r9, #-16]
    fccc:	ldr	r0, [r9]
    fcd0:	mov	r1, #0
    fcd4:	str	r2, [sp, #16]
    fcd8:	mov	r2, #128	; 0x80
    fcdc:	mov	sl, r3
    fce0:	mov	r3, r6
    fce4:	mov	r4, ip
    fce8:	mov	r5, lr
    fcec:	bl	715c <sf_gen_mcode6>
    fcf0:	mov	r3, sl
    fcf4:	ldr	r2, [sp, #16]
    fcf8:	mov	lr, r5
    fcfc:	mov	ip, r4
    fd00:	str	r0, [sp, #28]
    fd04:	lsr	r5, r6, #24
    fd08:	lsr	r4, r6, #16
    fd0c:	lsr	sl, r6, #8
    fd10:	sub	r9, r9, lr, lsl #4
    fd14:	uxtb	r0, r6
    fd18:	bfi	r0, sl, #8, #8
    fd1c:	uxtb	r1, r4
    fd20:	orr	r0, r0, r1, lsl #16
    fd24:	orr	r0, r0, r5, lsl #24
    fd28:	str	r0, [r9, #16]!
    fd2c:	stmib	r9, {r2, r3}
    fd30:	ldr	r0, [sp, #28]
    fd34:	str	r0, [r9, #12]
    fd38:	lsl	r0, lr, #1
    fd3c:	ldrsh	r2, [r8, -r0]!
    fd40:	ldr	r0, [pc, #492]	; ff34 <sfbpf_parse+0x1450>
    fd44:	add	r0, pc, r0
    fd48:	ldrb	r0, [r0, r7]
    fd4c:	sub	r0, r0, #126	; 0x7e
    fd50:	ldr	r1, [pc, #480]	; ff38 <sfbpf_parse+0x1454>
    fd54:	add	r1, pc, r1
    fd58:	add	r1, r1, r0, lsl #1
    fd5c:	ldrsh	r1, [r1]
    fd60:	add	r1, r2, r1
    fd64:	movw	r3, #669	; 0x29d
    fd68:	cmp	r1, r3
    fd6c:	bhi	eb30 <sfbpf_parse+0x4c>
    fd70:	uxth	r2, r2
    fd74:	ldr	r3, [pc, #448]	; ff3c <sfbpf_parse+0x1458>
    fd78:	add	r3, pc, r3
    fd7c:	add	r3, r3, r1, lsl #1
    fd80:	ldrh	r3, [r3]
    fd84:	cmp	r3, r2
    fd88:	bne	eb30 <sfbpf_parse+0x4c>
    fd8c:	ldr	r0, [pc, #428]	; ff40 <sfbpf_parse+0x145c>
    fd90:	add	r0, pc, r0
    fd94:	add	r0, r0, r1, lsl #1
    fd98:	b	eb3c <sfbpf_parse+0x58>
    fd9c:	ldr	r6, [r9, #-16]
    fda0:	ldr	r0, [r9]
    fda4:	mov	r1, r6
    fda8:	str	ip, [sp, #12]
    fdac:	mov	r5, lr
    fdb0:	mov	r4, r2
    fdb4:	mov	sl, r3
    fdb8:	bl	8f24 <sf_gen_acode>
    fdbc:	str	r0, [sp, #28]
    fdc0:	ldr	r0, [r9]
    fdc4:	bl	e5c <free@plt>
    fdc8:	mov	r3, sl
    fdcc:	mov	r2, r4
    fdd0:	mov	lr, r5
    fdd4:	ldr	ip, [sp, #12]
    fdd8:	b	fd04 <sfbpf_parse+0x1220>
    fddc:	mov	r6, #0
    fde0:	b	fe1c <sfbpf_parse+0x1338>
    fde4:	ldr	r1, [pc, #272]	; fefc <sfbpf_parse+0x1418>
    fde8:	add	r1, pc, r1
    fdec:	ldr	r0, [r9]
    fdf0:	bl	ff5c <str2tok>
    fdf4:	cmn	r0, #1
    fdf8:	beq	fee4 <sfbpf_parse+0x1400>
    fdfc:	mov	r6, r0
    fe00:	lsr	r5, r6, #24
    fe04:	lsr	r4, r6, #16
    fe08:	lsr	sl, r6, #8
    fe0c:	b	fe24 <sfbpf_parse+0x1340>
    fe10:	mov	r6, #1
    fe14:	b	fe1c <sfbpf_parse+0x1338>
    fe18:	mov	r6, #2
    fe1c:	mov	r4, #0
    fe20:	mov	r5, #0
    fe24:	ldr	ip, [sp, #12]
    fe28:	ldr	r2, [sp, #16]
    fe2c:	ldmib	sp, {r3, lr}
    fe30:	b	fd10 <sfbpf_parse+0x122c>
    fe34:	mov	r6, #0
    fe38:	sub	r0, fp, #432	; 0x1b0
    fe3c:	cmp	r4, r0
    fe40:	bne	fe50 <sfbpf_parse+0x136c>
    fe44:	b	fe58 <sfbpf_parse+0x1374>
    fe48:	mov	r6, #1
    fe4c:	mov	r4, r5
    fe50:	mov	r0, r4
    fe54:	bl	e5c <free@plt>
    fe58:	mov	r0, r6
    fe5c:	sub	sp, fp, #28
    fe60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fe64:	ldr	r0, [pc, #228]	; ff50 <sfbpf_parse+0x146c>
    fe68:	add	r0, pc, r0
    fe6c:	bl	ffdc <sfbpf_error>
    fe70:	bl	ffac <pfreason_to_num>
    fe74:	bl	ffc4 <pfaction_to_num>
    fe78:	ldr	r0, [pc, #196]	; ff44 <sfbpf_parse+0x1460>
    fe7c:	ldr	r0, [pc, r0]
    fe80:	add	r0, r0, #1
    fe84:	ldr	r1, [pc, #188]	; ff48 <sfbpf_parse+0x1464>
    fe88:	add	r1, pc, r1
    fe8c:	str	r0, [r1]
    fe90:	ldr	r0, [pc, #180]	; ff4c <sfbpf_parse+0x1468>
    fe94:	add	r0, pc, r0
    fe98:	bl	ffdc <sfbpf_error>
    fe9c:	ldr	r0, [pc, #120]	; ff1c <sfbpf_parse+0x1438>
    fea0:	add	r0, pc, r0
    fea4:	bl	1fc4 <sf_bpf_error>
    fea8:	ldr	r0, [pc, #164]	; ff54 <sfbpf_parse+0x1470>
    feac:	add	r0, pc, r0
    feb0:	bl	1fc4 <sf_bpf_error>
    feb4:	ldr	r0, [pc, #76]	; ff08 <sfbpf_parse+0x1424>
    feb8:	add	r0, pc, r0
    febc:	bl	1fc4 <sf_bpf_error>
    fec0:	ldr	r0, [pc, #68]	; ff0c <sfbpf_parse+0x1428>
    fec4:	add	r0, pc, r0
    fec8:	bl	1fc4 <sf_bpf_error>
    fecc:	ldr	r0, [pc, #48]	; ff04 <sfbpf_parse+0x1420>
    fed0:	add	r0, pc, r0
    fed4:	bl	1fc4 <sf_bpf_error>
    fed8:	ldr	r0, [pc, #80]	; ff30 <sfbpf_parse+0x144c>
    fedc:	add	r0, pc, r0
    fee0:	bl	1fc4 <sf_bpf_error>
    fee4:	ldr	r0, [pc, #108]	; ff58 <sfbpf_parse+0x1474>
    fee8:	add	r0, pc, r0
    feec:	bl	1fc4 <sf_bpf_error>
    fef0:	ldr	r0, [pc, #8]	; ff00 <sfbpf_parse+0x141c>
    fef4:	add	r0, pc, r0
    fef8:	bl	1fc4 <sf_bpf_error>
    fefc:	.word	0x0001ffc0
    ff00:	.word	0x00004f60
    ff04:	.word	0x00004fa7
    ff08:	.word	0x00004fe7
    ff0c:	.word	0x00004fff
    ff10:	.word	0x000206e8
    ff14:	.word	0x00020694
    ff18:	.word	0x0002065c
    ff1c:	.word	0x0000504c
    ff20:	.word	0x000059b5
    ff24:	.word	0x000059a7
    ff28:	.word	0x00005986
    ff2c:	.word	0x00005975
    ff30:	.word	0x0000506c
    ff34:	.word	0x00004f8d
    ff38:	.word	0x00005048
    ff3c:	.word	0x00004304
    ff40:	.word	0x00004828
    ff44:	.word	0x00020cbc
    ff48:	.word	0x00020cb0
    ff4c:	.word	0x000050cd
    ff50:	.word	0x00005106
    ff54:	.word	0x00005059
    ff58:	.word	0x00005031

0000ff5c <str2tok>:
    ff5c:	push	{r4, r5, r6, sl, fp, lr}
    ff60:	add	fp, sp, #16
    ff64:	mov	r5, r0
    ff68:	ldr	r0, [r1, #4]
    ff6c:	mvn	r4, #0
    ff70:	cmp	r0, #0
    ff74:	beq	ff98 <str2tok+0x3c>
    ff78:	add	r6, r1, #12
    ff7c:	mov	r1, r5
    ff80:	bl	e850 <sfbpf_strcasecmp>
    ff84:	cmp	r0, #0
    ff88:	beq	ffa0 <str2tok+0x44>
    ff8c:	ldr	r0, [r6], #8
    ff90:	cmp	r0, #0
    ff94:	bne	ff7c <str2tok+0x20>
    ff98:	mov	r0, r4
    ff9c:	pop	{r4, r5, r6, sl, fp, pc}
    ffa0:	ldr	r4, [r6, #-12]
    ffa4:	mov	r0, r4
    ffa8:	pop	{r4, r5, r6, sl, fp, pc}

0000ffac <pfreason_to_num>:
    ffac:	push	{fp, lr}
    ffb0:	mov	fp, sp
    ffb4:	ldr	r0, [pc, #4]	; ffc0 <pfreason_to_num+0x14>
    ffb8:	add	r0, pc, r0
    ffbc:	bl	1fc4 <sf_bpf_error>
    ffc0:	.word	0x00002b4c

0000ffc4 <pfaction_to_num>:
    ffc4:	push	{fp, lr}
    ffc8:	mov	fp, sp
    ffcc:	ldr	r0, [pc, #4]	; ffd8 <pfaction_to_num+0x14>
    ffd0:	add	r0, pc, r0
    ffd4:	bl	1fc4 <sf_bpf_error>
    ffd8:	.word	0x00002b34

0000ffdc <sfbpf_error>:
    ffdc:	push	{fp, lr}
    ffe0:	mov	fp, sp
    ffe4:	mov	r1, r0
    ffe8:	ldr	r0, [pc, #28]	; 1000c <sfbpf_error+0x30>
    ffec:	ldr	r0, [pc, r0]
    fff0:	add	r0, r0, #1
    fff4:	ldr	r2, [pc, #20]	; 10010 <sfbpf_error+0x34>
    fff8:	add	r2, pc, r2
    fffc:	str	r0, [r2]
   10000:	ldr	r0, [pc, #12]	; 10014 <sfbpf_error+0x38>
   10004:	add	r0, pc, r0
   10008:	bl	1fc4 <sf_bpf_error>
   1000c:	.word	0x00020aec
   10010:	.word	0x00020ae0
   10014:	.word	0x000038c9

00010018 <sfbpf_lex>:
   10018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1001c:	add	fp, sp, #28
   10020:	sub	sp, sp, #44	; 0x2c
   10024:	ldr	r0, [pc, #3788]	; 10ef8 <sfbpf_lex+0xee0>
   10028:	add	r0, pc, r0
   1002c:	ldrb	r1, [r0]
   10030:	cmp	r1, #0
   10034:	ldr	ip, [pc, #3776]	; 10efc <sfbpf_lex+0xee4>
   10038:	add	ip, pc, ip
   1003c:	bne	100fc <sfbpf_lex+0xe4>
   10040:	mov	r1, #1
   10044:	strb	r1, [r0]
   10048:	ldrb	r0, [ip]
   1004c:	cmp	r0, #0
   10050:	strbeq	r1, [ip]
   10054:	ldr	r0, [pc, #3748]	; 10f00 <sfbpf_lex+0xee8>
   10058:	ldr	r0, [pc, r0]
   1005c:	cmp	r0, #0
   10060:	bne	1007c <sfbpf_lex+0x64>
   10064:	ldr	r0, [pc, #3736]	; 10f04 <sfbpf_lex+0xeec>
   10068:	ldr	r0, [pc, r0]
   1006c:	ldr	r0, [r0]
   10070:	ldr	r1, [pc, #3728]	; 10f08 <sfbpf_lex+0xef0>
   10074:	add	r1, pc, r1
   10078:	str	r0, [r1]
   1007c:	ldr	r0, [pc, #3720]	; 10f0c <sfbpf_lex+0xef4>
   10080:	ldr	r0, [pc, r0]
   10084:	cmp	r0, #0
   10088:	bne	100a4 <sfbpf_lex+0x8c>
   1008c:	ldr	r0, [pc, #3708]	; 10f10 <sfbpf_lex+0xef8>
   10090:	ldr	r0, [pc, r0]
   10094:	ldr	r0, [r0]
   10098:	ldr	r1, [pc, #3700]	; 10f14 <sfbpf_lex+0xefc>
   1009c:	add	r1, pc, r1
   100a0:	str	r0, [r1]
   100a4:	mov	r4, ip
   100a8:	ldr	r0, [pc, #3688]	; 10f18 <sfbpf_lex+0xf00>
   100ac:	ldr	r0, [pc, r0]
   100b0:	cmp	r0, #0
   100b4:	beq	100cc <sfbpf_lex+0xb4>
   100b8:	ldr	r1, [pc, #3676]	; 10f1c <sfbpf_lex+0xf04>
   100bc:	ldr	r1, [pc, r1]
   100c0:	ldr	r0, [r0, r1, lsl #2]
   100c4:	cmp	r0, #0
   100c8:	bne	100f4 <sfbpf_lex+0xdc>
   100cc:	bl	110b4 <sfbpf_ensure_buffer_stack>
   100d0:	ldr	r0, [pc, #3656]	; 10f20 <sfbpf_lex+0xf08>
   100d4:	ldr	r0, [pc, r0]
   100d8:	mov	r1, #16384	; 0x4000
   100dc:	bl	111a4 <sfbpf__create_buffer>
   100e0:	ldr	r1, [pc, #3644]	; 10f24 <sfbpf_lex+0xf0c>
   100e4:	ldr	r1, [pc, r1]
   100e8:	ldr	r2, [pc, #3640]	; 10f28 <sfbpf_lex+0xf10>
   100ec:	ldr	r2, [pc, r2]
   100f0:	str	r0, [r1, r2, lsl #2]
   100f4:	bl	1120c <sfbpf__load_buffer_state>
   100f8:	mov	ip, r4
   100fc:	ldr	lr, [pc, #3624]	; 10f2c <sfbpf_lex+0xf14>
   10100:	add	lr, pc, lr
   10104:	ldr	r3, [pc, #3620]	; 10f30 <sfbpf_lex+0xf18>
   10108:	add	r3, pc, r3
   1010c:	ldr	r6, [pc, #3616]	; 10f34 <sfbpf_lex+0xf1c>
   10110:	add	r6, pc, r6
   10114:	ldr	r9, [pc, #3612]	; 10f38 <sfbpf_lex+0xf20>
   10118:	add	r9, pc, r9
   1011c:	ldr	sl, [pc, #3608]	; 10f3c <sfbpf_lex+0xf24>
   10120:	add	sl, pc, sl
   10124:	movw	r8, #1434	; 0x59a
   10128:	ldrb	r0, [lr]
   1012c:	ldr	r5, [pc, #3596]	; 10f40 <sfbpf_lex+0xf28>
   10130:	ldr	r5, [pc, r5]
   10134:	strb	r0, [r5]
   10138:	ldrb	r4, [ip]
   1013c:	str	r5, [sp]
   10140:	b	10174 <sfbpf_lex+0x15c>
   10144:	ldr	r3, [pc, #3592]	; 10f54 <sfbpf_lex+0xf3c>
   10148:	add	r3, pc, r3
   1014c:	ldr	r0, [pc, #3588]	; 10f58 <sfbpf_lex+0xf40>
   10150:	add	r0, pc, r0
   10154:	add	r0, r0, r2, lsl #1
   10158:	ldrsh	r4, [r0]
   1015c:	add	r0, r6, r4, lsl #1
   10160:	ldrh	r0, [r0]
   10164:	add	r5, r5, #1
   10168:	movw	r1, #7401	; 0x1ce9
   1016c:	cmp	r0, r1
   10170:	beq	1022c <sfbpf_lex+0x214>
   10174:	ldrb	r0, [r5]
   10178:	ldrb	r0, [r3, r0]
   1017c:	ldr	r1, [pc, #3520]	; 10f44 <sfbpf_lex+0xf2c>
   10180:	add	r1, pc, r1
   10184:	add	r1, r1, r4, lsl #1
   10188:	ldrh	r1, [r1]
   1018c:	cmp	r1, #0
   10190:	beq	101ac <sfbpf_lex+0x194>
   10194:	ldr	r1, [pc, #3500]	; 10f48 <sfbpf_lex+0xf30>
   10198:	add	r1, pc, r1
   1019c:	str	r5, [r1]
   101a0:	ldr	r1, [pc, #3492]	; 10f4c <sfbpf_lex+0xf34>
   101a4:	add	r1, pc, r1
   101a8:	str	r4, [r1]
   101ac:	add	r1, r6, r4, lsl #1
   101b0:	ldrsh	r1, [r1]
   101b4:	add	r2, r1, r0
   101b8:	add	r1, r9, r2, lsl #1
   101bc:	ldrsh	r1, [r1]
   101c0:	cmp	r4, r1
   101c4:	beq	1014c <sfbpf_lex+0x134>
   101c8:	mov	r1, r0
   101cc:	b	101f4 <sfbpf_lex+0x1dc>
   101d0:	add	r0, r6, r4, lsl #1
   101d4:	ldrsh	r0, [r0]
   101d8:	uxtab	r2, r0, r1
   101dc:	add	r0, r9, r2, lsl #1
   101e0:	ldrh	r3, [r0]
   101e4:	uxtb	r0, r1
   101e8:	uxth	r7, r4
   101ec:	cmp	r7, r3
   101f0:	beq	10144 <sfbpf_lex+0x12c>
   101f4:	add	r2, sl, r4, lsl #1
   101f8:	ldrsh	r4, [r2]
   101fc:	cmp	r4, r8
   10200:	blt	101d0 <sfbpf_lex+0x1b8>
   10204:	ldr	r1, [pc, #3396]	; 10f50 <sfbpf_lex+0xf38>
   10208:	add	r1, pc, r1
   1020c:	ldrb	r1, [r1, r0]
   10210:	b	101d0 <sfbpf_lex+0x1b8>
   10214:	ldrb	r0, [lr]
   10218:	strb	r0, [r5]
   1021c:	ldr	r4, [pc, #3412]	; 10f78 <sfbpf_lex+0xf60>
   10220:	ldr	r4, [pc, r4]
   10224:	ldr	r5, [pc, #3408]	; 10f7c <sfbpf_lex+0xf64>
   10228:	ldr	r5, [pc, r5]
   1022c:	ldr	r0, [pc, #3368]	; 10f5c <sfbpf_lex+0xf44>
   10230:	add	r0, pc, r0
   10234:	add	r0, r0, r4, lsl #1
   10238:	ldrh	r0, [r0]
   1023c:	cmp	r0, #0
   10240:	bne	10264 <sfbpf_lex+0x24c>
   10244:	ldr	r0, [pc, #3348]	; 10f60 <sfbpf_lex+0xf48>
   10248:	ldr	r0, [pc, r0]
   1024c:	ldr	r1, [pc, #3344]	; 10f64 <sfbpf_lex+0xf4c>
   10250:	add	r1, pc, r1
   10254:	add	r0, r1, r0, lsl #1
   10258:	ldrh	r0, [r0]
   1025c:	ldr	r5, [pc, #3332]	; 10f68 <sfbpf_lex+0xf50>
   10260:	ldr	r5, [pc, r5]
   10264:	ldr	r1, [pc, #3328]	; 10f6c <sfbpf_lex+0xf54>
   10268:	add	r1, pc, r1
   1026c:	ldr	r2, [sp]
   10270:	str	r2, [r1]
   10274:	sub	r1, r5, r2
   10278:	ldr	r2, [pc, #3312]	; 10f70 <sfbpf_lex+0xf58>
   1027c:	add	r2, pc, r2
   10280:	str	r1, [r2]
   10284:	ldrb	r1, [r5]
   10288:	strb	r1, [lr]
   1028c:	mov	r1, #0
   10290:	strb	r1, [r5]
   10294:	ldr	r1, [pc, #3288]	; 10f74 <sfbpf_lex+0xf5c>
   10298:	add	r1, pc, r1
   1029c:	str	r5, [r1]
   102a0:	sxth	r0, r0
   102a4:	cmp	r0, #146	; 0x92
   102a8:	bhi	10e98 <sfbpf_lex+0xe80>
   102ac:	add	r1, pc, #4
   102b0:	ldr	r0, [r1, r0, lsl #2]
   102b4:	add	pc, r1, r0
   102b8:	.word	0xffffff5c
   102bc:	.word	0x00000910
   102c0:	.word	0x000009f0
   102c4:	.word	0x00000500
   102c8:	.word	0x00000500
   102cc:	.word	0x00000828
   102d0:	.word	0x000009bc
   102d4:	.word	0x00000b54
   102d8:	.word	0x00000958
   102dc:	.word	0x000009fc
   102e0:	.word	0x000007c4
   102e4:	.word	0x00000734
   102e8:	.word	0x0000066c
   102ec:	.word	0x00000770
   102f0:	.word	0x00000834
   102f4:	.word	0x000005a4
   102f8:	.word	0x00000690
   102fc:	.word	0x0000081c
   10300:	.word	0x0000051c
   10304:	.word	0x00000ad8
   10308:	.word	0x00000758
   1030c:	.word	0x000008e8
   10310:	.word	0x00000740
   10314:	.word	0x00000764
   10318:	.word	0x000007d0
   1031c:	.word	0x000005f0
   10320:	.word	0x00000b24
   10324:	.word	0x000006fc
   10328:	.word	0x00000558
   1032c:	.word	0x000004a8
   10330:	.word	0x000004a8
   10334:	.word	0x0000049c
   10338:	.word	0x0000049c
   1033c:	.word	0x00000a2c
   10340:	.word	0x00000540
   10344:	.word	0x000009d4
   10348:	.word	0x00000a38
   1034c:	.word	0x000009a4
   10350:	.word	0x00000a20
   10354:	.word	0x00000580
   10358:	.word	0x000007a0
   1035c:	.word	0x000006ac
   10360:	.word	0x0000077c
   10364:	.word	0x00000620
   10368:	.word	0x00000638
   1036c:	.word	0x0000087c
   10370:	.word	0x00000654
   10374:	.word	0x000008c4
   10378:	.word	0x000007ac
   1037c:	.word	0x00000728
   10380:	.word	0x00000870
   10384:	.word	0x000008a0
   10388:	.word	0x00000a50
   1038c:	.word	0x000009b0
   10390:	.word	0x00000614
   10394:	.word	0x000008dc
   10398:	.word	0x00000980
   1039c:	.word	0x00000b18
   103a0:	.word	0x0000091c
   103a4:	.word	0x000005e4
   103a8:	.word	0x0000074c
   103ac:	.word	0x00000598
   103b0:	.word	0x00000b48
   103b4:	.word	0x00000acc
   103b8:	.word	0x00000534
   103bc:	.word	0x00000b60
   103c0:	.word	0x00000a14
   103c4:	.word	0x000008d0
   103c8:	.word	0x00000794
   103cc:	.word	0x000006b8
   103d0:	.word	0x00000708
   103d4:	.word	0x00000660
   103d8:	.word	0x000006d4
   103dc:	.word	0x000007b8
   103e0:	.word	0x0000058c
   103e4:	.word	0x000005fc
   103e8:	.word	0x00000810
   103ec:	.word	0x0000054c
   103f0:	.word	0x00000964
   103f4:	.word	0x00000888
   103f8:	.word	0x000007f8
   103fc:	.word	0x00000a44
   10400:	.word	0x00000a80
   10404:	.word	0x000008ac
   10408:	.word	0x0000098c
   1040c:	.word	0x00000b30
   10410:	.word	0x0000062c
   10414:	.word	0x00000528
   10418:	.word	0x00000b3c
   1041c:	.word	0x000007ec
   10420:	.word	0x00000b00
   10424:	.word	0x000009c8
   10428:	.word	0x00000a08
   1042c:	.word	0x00000998
   10430:	.word	0x00000928
   10434:	.word	0x000004d4
   10438:	.word	0x000004d4
   1043c:	.word	0x00000804
   10440:	.word	0x00000678
   10444:	.word	0x000006e0
   10448:	.word	0x00000684
   1044c:	.word	0x000005d8
   10450:	.word	0xfffffe70
   10454:	.word	0x00000714
   10458:	.word	0x000008b8
   1045c:	.word	0x00000788
   10460:	.word	0x00000ac0
   10464:	.word	0x00000b0c
   10468:	.word	0x00000894
   1046c:	.word	0x000008f4
   10470:	.word	0x000005b0
   10474:	.word	0x00000a5c
   10478:	.word	0x00000564
   1047c:	.word	0x00000a9c
   10480:	.word	0x00000b6c
   10484:	.word	0x00000c18
   10488:	.word	0x0000050c
   1048c:	.word	0x000004f0
   10490:	.word	0x0000050c
   10494:	.word	0x000009e0
   10498:	.word	0x0000048c
   1049c:	.word	0x00000a8c
   104a0:	.word	0x000004c4
   104a4:	.word	0x000006ec
   104a8:	.word	0x000006c4
   104ac:	.word	0x00000644
   104b0:	.word	0x00000840
   104b4:	.word	0x000004e0
   104b8:	.word	0x0000069c
   104bc:	.word	0x00000860
   104c0:	.word	0x000004b4
   104c4:	.word	0x00000ae4
   104c8:	.word	0x00000970
   104cc:	.word	0x000004e0
   104d0:	.word	0x000004f0
   104d4:	.word	0x00000900
   104d8:	.word	0x0000048c
   104dc:	.word	0x000004c4
   104e0:	.word	0x000004b4
   104e4:	.word	0x00000850
   104e8:	.word	0x00000934
   104ec:	.word	0x000007dc
   104f0:	.word	0x00000c04
   104f4:	.word	0x00000bec
   104f8:	.word	0x00000450
   104fc:	.word	0x0000024c
   10500:	.word	0x00000608
   10504:	ldrb	r0, [lr]
   10508:	ldr	r4, [pc, #2844]	; 1102c <sfbpf_lex+0x1014>
   1050c:	ldr	r4, [pc, r4]
   10510:	strb	r0, [r5]
   10514:	ldr	r0, [pc, #2836]	; 11030 <sfbpf_lex+0x1018>
   10518:	ldr	r0, [pc, r0]
   1051c:	ldr	r1, [pc, #2832]	; 11034 <sfbpf_lex+0x101c>
   10520:	ldr	r1, [pc, r1]
   10524:	ldr	r2, [r1, r0, lsl #2]
   10528:	ldr	r3, [r2, #44]	; 0x2c
   1052c:	cmp	r3, #0
   10530:	bne	10560 <sfbpf_lex+0x548>
   10534:	ldr	r2, [r2, #16]
   10538:	ldr	r3, [pc, #2808]	; 11038 <sfbpf_lex+0x1020>
   1053c:	add	r3, pc, r3
   10540:	str	r2, [r3]
   10544:	ldr	r2, [r1, r0, lsl #2]
   10548:	ldr	r3, [pc, #2796]	; 1103c <sfbpf_lex+0x1024>
   1054c:	ldr	r3, [pc, r3]
   10550:	str	r3, [r2]
   10554:	ldr	r2, [r1, r0, lsl #2]
   10558:	mov	r3, #1
   1055c:	str	r3, [r2, #44]	; 0x2c
   10560:	mov	r7, ip
   10564:	ldr	r0, [r1, r0, lsl #2]
   10568:	ldr	r0, [r0, #4]
   1056c:	ldr	r1, [pc, #2764]	; 11040 <sfbpf_lex+0x1028>
   10570:	ldr	r1, [pc, r1]
   10574:	add	r0, r0, r1
   10578:	ldr	r1, [pc, #2756]	; 11044 <sfbpf_lex+0x102c>
   1057c:	ldr	r1, [pc, r1]
   10580:	cmp	r1, r0
   10584:	bls	105cc <sfbpf_lex+0x5b4>
   10588:	bl	11580 <yy_get_next_buffer>
   1058c:	cmp	r0, #1
   10590:	bne	10624 <sfbpf_lex+0x60c>
   10594:	ldr	r0, [pc, #2812]	; 11098 <sfbpf_lex+0x1080>
   10598:	ldr	r0, [pc, r0]
   1059c:	ldr	r1, [pc, #2808]	; 1109c <sfbpf_lex+0x1084>
   105a0:	add	r1, pc, r1
   105a4:	str	r0, [r1]
   105a8:	mov	r0, #146	; 0x92
   105ac:	mov	ip, r7
   105b0:	ldr	lr, [pc, #2792]	; 110a0 <sfbpf_lex+0x1088>
   105b4:	add	lr, pc, lr
   105b8:	ldr	r3, [pc, #2788]	; 110a4 <sfbpf_lex+0x108c>
   105bc:	add	r3, pc, r3
   105c0:	cmp	r0, #146	; 0x92
   105c4:	bls	102ac <sfbpf_lex+0x294>
   105c8:	b	10e98 <sfbpf_lex+0xe80>
   105cc:	mvn	r0, r4
   105d0:	add	r0, r0, r5
   105d4:	ldr	r1, [pc, #2668]	; 11048 <sfbpf_lex+0x1030>
   105d8:	ldr	r1, [pc, r1]
   105dc:	add	r5, r1, r0
   105e0:	ldr	r0, [pc, #2660]	; 1104c <sfbpf_lex+0x1034>
   105e4:	add	r0, pc, r0
   105e8:	str	r5, [r0]
   105ec:	bl	1131c <yy_get_previous_state>
   105f0:	mov	r4, r0
   105f4:	bl	114a0 <yy_try_NUL_trans>
   105f8:	ldr	r1, [pc, #2640]	; 11050 <sfbpf_lex+0x1038>
   105fc:	ldr	r1, [pc, r1]
   10600:	str	r1, [sp]
   10604:	cmp	r0, #0
   10608:	mov	ip, r7
   1060c:	ldr	lr, [pc, #2624]	; 11054 <sfbpf_lex+0x103c>
   10610:	add	lr, pc, lr
   10614:	ldr	r3, [pc, #2620]	; 11058 <sfbpf_lex+0x1040>
   10618:	add	r3, pc, r3
   1061c:	beq	1022c <sfbpf_lex+0x214>
   10620:	b	106f0 <sfbpf_lex+0x6d8>
   10624:	cmp	r0, #2
   10628:	bne	10688 <sfbpf_lex+0x670>
   1062c:	ldr	r0, [pc, #2632]	; 1107c <sfbpf_lex+0x1064>
   10630:	ldr	r0, [pc, r0]
   10634:	ldr	r1, [pc, #2628]	; 11080 <sfbpf_lex+0x1068>
   10638:	ldr	r1, [pc, r1]
   1063c:	ldr	r0, [r1, r0, lsl #2]
   10640:	ldr	r0, [r0, #4]
   10644:	ldr	r1, [pc, #2616]	; 11084 <sfbpf_lex+0x106c>
   10648:	ldr	r1, [pc, r1]
   1064c:	add	r5, r0, r1
   10650:	ldr	r0, [pc, #2608]	; 11088 <sfbpf_lex+0x1070>
   10654:	add	r0, pc, r0
   10658:	str	r5, [r0]
   1065c:	bl	1131c <yy_get_previous_state>
   10660:	mov	r4, r0
   10664:	ldr	r0, [pc, #2592]	; 1108c <sfbpf_lex+0x1074>
   10668:	ldr	r0, [pc, r0]
   1066c:	str	r0, [sp]
   10670:	mov	ip, r7
   10674:	ldr	lr, [pc, #2580]	; 11090 <sfbpf_lex+0x1078>
   10678:	add	lr, pc, lr
   1067c:	ldr	r3, [pc, #2576]	; 11094 <sfbpf_lex+0x107c>
   10680:	add	r3, pc, r3
   10684:	b	1022c <sfbpf_lex+0x214>
   10688:	cmp	r0, #0
   1068c:	mov	ip, r7
   10690:	ldr	lr, [pc, #2504]	; 11060 <sfbpf_lex+0x1048>
   10694:	add	lr, pc, lr
   10698:	ldr	r3, [pc, #2500]	; 11064 <sfbpf_lex+0x104c>
   1069c:	add	r3, pc, r3
   106a0:	bne	10128 <sfbpf_lex+0x110>
   106a4:	mvn	r0, r4
   106a8:	add	r0, r0, r5
   106ac:	ldr	r1, [pc, #2484]	; 11068 <sfbpf_lex+0x1050>
   106b0:	ldr	r1, [pc, r1]
   106b4:	add	r5, r1, r0
   106b8:	ldr	r0, [pc, #2476]	; 1106c <sfbpf_lex+0x1054>
   106bc:	add	r0, pc, r0
   106c0:	str	r5, [r0]
   106c4:	bl	1131c <yy_get_previous_state>
   106c8:	ldr	r3, [pc, #2464]	; 11070 <sfbpf_lex+0x1058>
   106cc:	add	r3, pc, r3
   106d0:	ldr	lr, [pc, #2460]	; 11074 <sfbpf_lex+0x105c>
   106d4:	add	lr, pc, lr
   106d8:	mov	ip, r7
   106dc:	mov	r4, r0
   106e0:	ldr	r0, [pc, #2448]	; 11078 <sfbpf_lex+0x1060>
   106e4:	ldr	r0, [pc, r0]
   106e8:	str	r0, [sp]
   106ec:	b	10174 <sfbpf_lex+0x15c>
   106f0:	add	r5, r5, #1
   106f4:	ldr	r1, [pc, #2400]	; 1105c <sfbpf_lex+0x1044>
   106f8:	add	r1, pc, r1
   106fc:	str	r5, [r1]
   10700:	mov	r4, r0
   10704:	b	10174 <sfbpf_lex+0x15c>
   10708:	ldr	r3, [pc, #2316]	; 1101c <sfbpf_lex+0x1004>
   1070c:	ldr	r3, [pc, r3]
   10710:	ldr	r1, [pc, #2312]	; 11020 <sfbpf_lex+0x1008>
   10714:	ldr	r1, [pc, r1]
   10718:	ldr	r0, [pc, #2308]	; 11024 <sfbpf_lex+0x100c>
   1071c:	ldr	r0, [pc, r0]
   10720:	mov	r2, #1
   10724:	mov	r4, ip
   10728:	mov	r5, lr
   1072c:	bl	eb0 <fwrite@plt>
   10730:	ldr	r3, [pc, #2288]	; 11028 <sfbpf_lex+0x1010>
   10734:	add	r3, pc, r3
   10738:	mov	lr, r5
   1073c:	mov	ip, r4
   10740:	b	10128 <sfbpf_lex+0x110>
   10744:	ldr	r0, [pc, #2212]	; 10ff0 <sfbpf_lex+0xfd8>
   10748:	ldr	r0, [pc, r0]
   1074c:	mov	r1, #4
   10750:	b	10da8 <sfbpf_lex+0xd90>
   10754:	movw	r0, #330	; 0x14a
   10758:	sub	sp, fp, #28
   1075c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10760:	mov	r0, #328	; 0x148
   10764:	sub	sp, fp, #28
   10768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1076c:	ldr	r0, [pc, #2180]	; 10ff8 <sfbpf_lex+0xfe0>
   10770:	ldr	r0, [pc, r0]
   10774:	mov	r1, #16
   10778:	b	10da8 <sfbpf_lex+0xd90>
   1077c:	ldr	r0, [pc, #2160]	; 10ff4 <sfbpf_lex+0xfdc>
   10780:	ldr	r0, [pc, r0]
   10784:	mov	r1, #8
   10788:	b	10da8 <sfbpf_lex+0xd90>
   1078c:	movw	r0, #357	; 0x165
   10790:	sub	sp, fp, #28
   10794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10798:	ldr	r0, [pc, #2116]	; 10fe4 <sfbpf_lex+0xfcc>
   1079c:	ldr	r0, [pc, r0]
   107a0:	mov	r1, #13
   107a4:	b	10da8 <sfbpf_lex+0xd90>
   107a8:	ldr	r0, [pc, #2104]	; 10fe8 <sfbpf_lex+0xfd0>
   107ac:	ldr	r0, [pc, r0]
   107b0:	mov	r1, #1
   107b4:	b	10da8 <sfbpf_lex+0xd90>
   107b8:	movw	r0, #307	; 0x133
   107bc:	sub	sp, fp, #28
   107c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107c4:	ldr	r0, [pc, #2028]	; 10fb8 <sfbpf_lex+0xfa0>
   107c8:	ldr	r0, [pc, r0]
   107cc:	mov	r1, #0
   107d0:	b	10da8 <sfbpf_lex+0xd90>
   107d4:	mov	r0, #320	; 0x140
   107d8:	sub	sp, fp, #28
   107dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107e0:	mov	r0, #352	; 0x160
   107e4:	sub	sp, fp, #28
   107e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107ec:	mov	r0, #364	; 0x16c
   107f0:	sub	sp, fp, #28
   107f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107f8:	mov	r0, #332	; 0x14c
   107fc:	sub	sp, fp, #28
   10800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10804:	mov	r0, #344	; 0x158
   10808:	sub	sp, fp, #28
   1080c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10810:	movw	r0, #327	; 0x147
   10814:	sub	sp, fp, #28
   10818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1081c:	ldr	r0, [pc, #1904]	; 10f94 <sfbpf_lex+0xf7c>
   10820:	ldr	r0, [pc, r0]
   10824:	bl	11290 <stoi>
   10828:	ldr	r1, [pc, #1896]	; 10f98 <sfbpf_lex+0xf80>
   1082c:	ldr	r1, [pc, r1]
   10830:	str	r0, [r1]
   10834:	b	10dac <sfbpf_lex+0xd94>
   10838:	movw	r0, #337	; 0x151
   1083c:	sub	sp, fp, #28
   10840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10844:	movw	r0, #341	; 0x155
   10848:	sub	sp, fp, #28
   1084c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10850:	movw	r0, #270	; 0x10e
   10854:	sub	sp, fp, #28
   10858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1085c:	movw	r0, #281	; 0x119
   10860:	sub	sp, fp, #28
   10864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10868:	ldr	r0, [pc, #1812]	; 10f84 <sfbpf_lex+0xf6c>
   1086c:	ldr	r0, [pc, r0]
   10870:	add	r0, r0, #1
   10874:	bl	b85c <pcap_ether_aton>
   10878:	ldr	r1, [pc, #1800]	; 10f88 <sfbpf_lex+0xf70>
   1087c:	ldr	r1, [pc, r1]
   10880:	str	r0, [r1]
   10884:	movw	r0, #315	; 0x13b
   10888:	sub	sp, fp, #28
   1088c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10890:	movw	r0, #362	; 0x16a
   10894:	sub	sp, fp, #28
   10898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1089c:	movw	r0, #266	; 0x10a
   108a0:	sub	sp, fp, #28
   108a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108a8:	movw	r0, #286	; 0x11e
   108ac:	sub	sp, fp, #28
   108b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108b4:	movw	r0, #342	; 0x156
   108b8:	sub	sp, fp, #28
   108bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108c0:	mov	r0, #0
   108c4:	sub	sp, fp, #28
   108c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108cc:	movw	r0, #302	; 0x12e
   108d0:	sub	sp, fp, #28
   108d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108d8:	mov	r0, #340	; 0x154
   108dc:	sub	sp, fp, #28
   108e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108e4:	movw	r0, #351	; 0x15f
   108e8:	sub	sp, fp, #28
   108ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108f0:	mov	r0, #260	; 0x104
   108f4:	sub	sp, fp, #28
   108f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108fc:	ldr	r0, [pc, #1736]	; 10fcc <sfbpf_lex+0xfb4>
   10900:	ldr	r0, [pc, r0]
   10904:	mov	r1, #11
   10908:	b	10da8 <sfbpf_lex+0xd90>
   1090c:	movw	r0, #263	; 0x107
   10910:	sub	sp, fp, #28
   10914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10918:	mov	r0, #324	; 0x144
   1091c:	sub	sp, fp, #28
   10920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10924:	movw	r0, #278	; 0x116
   10928:	sub	sp, fp, #28
   1092c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10930:	movw	r0, #359	; 0x167
   10934:	sub	sp, fp, #28
   10938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1093c:	movw	r0, #361	; 0x169
   10940:	sub	sp, fp, #28
   10944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10948:	movw	r0, #355	; 0x163
   1094c:	sub	sp, fp, #28
   10950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10954:	ldr	r0, [pc, #1656]	; 10fd4 <sfbpf_lex+0xfbc>
   10958:	ldr	r0, [pc, r0]
   1095c:	mov	r1, #14
   10960:	b	10da8 <sfbpf_lex+0xd90>
   10964:	movw	r0, #338	; 0x152
   10968:	sub	sp, fp, #28
   1096c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10970:	movw	r0, #293	; 0x125
   10974:	sub	sp, fp, #28
   10978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1097c:	ldr	r0, [pc, #1604]	; 10fc8 <sfbpf_lex+0xfb0>
   10980:	ldr	r0, [pc, r0]
   10984:	mov	r1, #10
   10988:	b	10da8 <sfbpf_lex+0xd90>
   1098c:	movw	r0, #325	; 0x145
   10990:	sub	sp, fp, #28
   10994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10998:	mov	r0, #360	; 0x168
   1099c:	sub	sp, fp, #28
   109a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109a4:	ldr	r0, [pc, #1560]	; 10fc4 <sfbpf_lex+0xfac>
   109a8:	ldr	r0, [pc, r0]
   109ac:	mov	r1, #9
   109b0:	b	10da8 <sfbpf_lex+0xd90>
   109b4:	mov	r0, #288	; 0x120
   109b8:	sub	sp, fp, #28
   109bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109c0:	movw	r0, #323	; 0x143
   109c4:	sub	sp, fp, #28
   109c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109cc:	ldr	r0, [pc, #1452]	; 10f80 <sfbpf_lex+0xf68>
   109d0:	ldr	r0, [pc, r0]
   109d4:	ldrb	r0, [r0]
   109d8:	sub	sp, fp, #28
   109dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109e0:	mov	r0, #268	; 0x10c
   109e4:	sub	sp, fp, #28
   109e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109ec:	movw	r0, #277	; 0x115
   109f0:	sub	sp, fp, #28
   109f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109f8:	movw	r0, #283	; 0x11b
   109fc:	sub	sp, fp, #28
   10a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a04:	movw	r0, #267	; 0x10b
   10a08:	sub	sp, fp, #28
   10a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a10:	movw	r0, #322	; 0x142
   10a14:	sub	sp, fp, #28
   10a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a1c:	mov	r0, #284	; 0x11c
   10a20:	sub	sp, fp, #28
   10a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a28:	movw	r0, #279	; 0x117
   10a2c:	sub	sp, fp, #28
   10a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a34:	movw	r0, #339	; 0x153
   10a38:	sub	sp, fp, #28
   10a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a40:	movw	r0, #309	; 0x135
   10a44:	sub	sp, fp, #28
   10a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a4c:	mov	r0, #292	; 0x124
   10a50:	sub	sp, fp, #28
   10a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a58:	movw	r0, #329	; 0x149
   10a5c:	sub	sp, fp, #28
   10a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a64:	movw	r0, #265	; 0x109
   10a68:	sub	sp, fp, #28
   10a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a70:	movw	r0, #326	; 0x146
   10a74:	sub	sp, fp, #28
   10a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a7c:	mov	r0, #276	; 0x114
   10a80:	sub	sp, fp, #28
   10a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a88:	movw	r0, #285	; 0x11d
   10a8c:	sub	sp, fp, #28
   10a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a94:	ldr	r0, [pc, #1388]	; 11008 <sfbpf_lex+0xff0>
   10a98:	ldr	r0, [pc, r0]
   10a9c:	add	r0, r0, #1
   10aa0:	b	10bf4 <sfbpf_lex+0xbdc>
   10aa4:	movw	r0, #295	; 0x127
   10aa8:	sub	sp, fp, #28
   10aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ab0:	movw	r0, #347	; 0x15b
   10ab4:	sub	sp, fp, #28
   10ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10abc:	movw	r0, #358	; 0x166
   10ac0:	sub	sp, fp, #28
   10ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ac8:	movw	r0, #343	; 0x157
   10acc:	sub	sp, fp, #28
   10ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ad4:	movw	r0, #319	; 0x13f
   10ad8:	sub	sp, fp, #28
   10adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ae0:	movw	r0, #271	; 0x10f
   10ae4:	sub	sp, fp, #28
   10ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10aec:	mov	r0, #280	; 0x118
   10af0:	sub	sp, fp, #28
   10af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10af8:	ldr	r0, [pc, #1232]	; 10fd0 <sfbpf_lex+0xfb8>
   10afc:	ldr	r0, [pc, r0]
   10b00:	mov	r1, #12
   10b04:	b	10da8 <sfbpf_lex+0xd90>
   10b08:	ldr	r0, [pc, #1260]	; 10ffc <sfbpf_lex+0xfe4>
   10b0c:	ldr	r0, [pc, r0]
   10b10:	mov	r1, #32
   10b14:	b	10da8 <sfbpf_lex+0xd90>
   10b18:	ldr	r0, [pc, #1208]	; 10fd8 <sfbpf_lex+0xfc0>
   10b1c:	ldr	r0, [pc, r0]
   10b20:	mov	r1, #15
   10b24:	b	10da8 <sfbpf_lex+0xd90>
   10b28:	movw	r0, #269	; 0x10d
   10b2c:	sub	sp, fp, #28
   10b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b34:	movw	r0, #262	; 0x106
   10b38:	sub	sp, fp, #28
   10b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b40:	movw	r0, #350	; 0x15e
   10b44:	sub	sp, fp, #28
   10b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b4c:	mov	r0, #316	; 0x13c
   10b50:	sub	sp, fp, #28
   10b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b58:	movw	r0, #261	; 0x105
   10b5c:	sub	sp, fp, #28
   10b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b64:	movw	r0, #346	; 0x15a
   10b68:	sub	sp, fp, #28
   10b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b70:	mov	r0, #308	; 0x134
   10b74:	sub	sp, fp, #28
   10b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b7c:	mov	r0, #264	; 0x108
   10b80:	sub	sp, fp, #28
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b88:	movw	r0, #318	; 0x13e
   10b8c:	sub	sp, fp, #28
   10b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b94:	movw	r0, #303	; 0x12f
   10b98:	sub	sp, fp, #28
   10b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ba0:	movw	r0, #282	; 0x11a
   10ba4:	sub	sp, fp, #28
   10ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bac:	movw	r0, #317	; 0x13d
   10bb0:	sub	sp, fp, #28
   10bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bb8:	ldr	r0, [pc, #1068]	; 10fec <sfbpf_lex+0xfd4>
   10bbc:	ldr	r0, [pc, r0]
   10bc0:	mov	r1, #2
   10bc4:	b	10da8 <sfbpf_lex+0xd90>
   10bc8:	movw	r0, #258	; 0x102
   10bcc:	sub	sp, fp, #28
   10bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bd4:	movw	r0, #306	; 0x132
   10bd8:	sub	sp, fp, #28
   10bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be0:	mov	r0, #356	; 0x164
   10be4:	sub	sp, fp, #28
   10be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bec:	ldr	r0, [pc, #1036]	; 11000 <sfbpf_lex+0xfe8>
   10bf0:	ldr	r0, [pc, r0]
   10bf4:	bl	2014 <sf_sdup>
   10bf8:	ldr	r1, [pc, #1028]	; 11004 <sfbpf_lex+0xfec>
   10bfc:	ldr	r1, [pc, r1]
   10c00:	str	r0, [r1]
   10c04:	movw	r0, #311	; 0x137
   10c08:	sub	sp, fp, #28
   10c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c10:	movw	r0, #274	; 0x112
   10c14:	sub	sp, fp, #28
   10c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c1c:	movw	r0, #349	; 0x15d
   10c20:	sub	sp, fp, #28
   10c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c28:	ldr	r0, [pc, #944]	; 10fe0 <sfbpf_lex+0xfc8>
   10c2c:	ldr	r0, [pc, r0]
   10c30:	mov	r1, #18
   10c34:	b	10da8 <sfbpf_lex+0xd90>
   10c38:	mov	r0, #304	; 0x130
   10c3c:	sub	sp, fp, #28
   10c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c44:	movw	r0, #353	; 0x161
   10c48:	sub	sp, fp, #28
   10c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c50:	movw	r0, #299	; 0x12b
   10c54:	sub	sp, fp, #28
   10c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c5c:	movw	r0, #335	; 0x14f
   10c60:	sub	sp, fp, #28
   10c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c68:	movw	r0, #301	; 0x12d
   10c6c:	sub	sp, fp, #28
   10c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c74:	mov	r0, #272	; 0x110
   10c78:	sub	sp, fp, #28
   10c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c80:	movw	r0, #297	; 0x129
   10c84:	sub	sp, fp, #28
   10c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c8c:	movw	r0, #333	; 0x14d
   10c90:	sub	sp, fp, #28
   10c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c98:	ldr	r0, [pc, #796]	; 10fbc <sfbpf_lex+0xfa4>
   10c9c:	ldr	r0, [pc, r0]
   10ca0:	mov	r1, #3
   10ca4:	b	10da8 <sfbpf_lex+0xd90>
   10ca8:	movw	r0, #259	; 0x103
   10cac:	sub	sp, fp, #28
   10cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cb4:	movw	r0, #275	; 0x113
   10cb8:	sub	sp, fp, #28
   10cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cc0:	movw	r0, #298	; 0x12a
   10cc4:	sub	sp, fp, #28
   10cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ccc:	mov	r0, #33	; 0x21
   10cd0:	sub	sp, fp, #28
   10cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cd8:	mov	r0, #336	; 0x150
   10cdc:	sub	sp, fp, #28
   10ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ce4:	movw	r0, #331	; 0x14b
   10ce8:	sub	sp, fp, #28
   10cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cf0:	movw	r0, #334	; 0x14e
   10cf4:	sub	sp, fp, #28
   10cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cfc:	mov	r0, #348	; 0x15c
   10d00:	sub	sp, fp, #28
   10d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d08:	mov	r0, #300	; 0x12c
   10d0c:	sub	sp, fp, #28
   10d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d14:	ldr	r0, [pc, #624]	; 10f8c <sfbpf_lex+0xf74>
   10d18:	ldr	r0, [pc, r0]
   10d1c:	bl	b85c <pcap_ether_aton>
   10d20:	ldr	r1, [pc, #616]	; 10f90 <sfbpf_lex+0xf78>
   10d24:	ldr	r1, [pc, r1]
   10d28:	str	r0, [r1]
   10d2c:	mov	r0, #312	; 0x138
   10d30:	sub	sp, fp, #28
   10d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d38:	movw	r0, #345	; 0x159
   10d3c:	sub	sp, fp, #28
   10d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d44:	ldr	r0, [pc, #628]	; 10fc0 <sfbpf_lex+0xfa8>
   10d48:	ldr	r0, [pc, r0]
   10d4c:	mov	r1, #5
   10d50:	b	10da8 <sfbpf_lex+0xd90>
   10d54:	ldr	r0, [pc, #576]	; 10f9c <sfbpf_lex+0xf84>
   10d58:	ldr	r0, [pc, r0]
   10d5c:	bl	2014 <sf_sdup>
   10d60:	ldr	r1, [pc, #568]	; 10fa0 <sfbpf_lex+0xf88>
   10d64:	ldr	r1, [pc, r1]
   10d68:	str	r0, [r1]
   10d6c:	movw	r0, #313	; 0x139
   10d70:	sub	sp, fp, #28
   10d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d78:	movw	r0, #310	; 0x136
   10d7c:	sub	sp, fp, #28
   10d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d84:	movw	r0, #290	; 0x122
   10d88:	sub	sp, fp, #28
   10d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d90:	movw	r0, #321	; 0x141
   10d94:	sub	sp, fp, #28
   10d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d9c:	ldr	r0, [pc, #568]	; 10fdc <sfbpf_lex+0xfc4>
   10da0:	ldr	r0, [pc, r0]
   10da4:	mov	r1, #17
   10da8:	str	r1, [r0]
   10dac:	movw	r0, #291	; 0x123
   10db0:	sub	sp, fp, #28
   10db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10db8:	mov	r0, #296	; 0x128
   10dbc:	sub	sp, fp, #28
   10dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dc4:	mov	r0, #61	; 0x3d
   10dc8:	sub	sp, fp, #28
   10dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dd0:	movw	r0, #305	; 0x131
   10dd4:	sub	sp, fp, #28
   10dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ddc:	movw	r0, #287	; 0x11f
   10de0:	sub	sp, fp, #28
   10de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10de8:	movw	r0, #354	; 0x162
   10dec:	sub	sp, fp, #28
   10df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10df4:	movw	r0, #294	; 0x126
   10df8:	sub	sp, fp, #28
   10dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e00:	movw	r0, #289	; 0x121
   10e04:	sub	sp, fp, #28
   10e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e0c:	movw	r0, #273	; 0x111
   10e10:	sub	sp, fp, #28
   10e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e18:	movw	r0, #363	; 0x16b
   10e1c:	sub	sp, fp, #28
   10e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e24:	add	r2, sp, #8
   10e28:	vmov.i32	q8, #0	; 0x00000000
   10e2c:	add	r0, r2, #8
   10e30:	vst1.64	{d16-d17}, [r0]
   10e34:	mov	r0, #0
   10e38:	str	r0, [sp, #36]	; 0x24
   10e3c:	str	r0, [sp, #32]
   10e40:	mov	r0, #10
   10e44:	str	r0, [sp, #12]
   10e48:	mov	r0, #4
   10e4c:	str	r0, [sp, #8]
   10e50:	ldr	r0, [pc, #332]	; 10fa4 <sfbpf_lex+0xf8c>
   10e54:	ldr	r0, [pc, r0]
   10e58:	add	r3, sp, #4
   10e5c:	mov	r1, #0
   10e60:	bl	fa0 <getaddrinfo@plt>
   10e64:	cmp	r0, #0
   10e68:	bne	10ee4 <sfbpf_lex+0xecc>
   10e6c:	ldr	r0, [sp, #4]
   10e70:	bl	f94 <freeaddrinfo@plt>
   10e74:	ldr	r0, [pc, #300]	; 10fa8 <sfbpf_lex+0xf90>
   10e78:	ldr	r0, [pc, r0]
   10e7c:	bl	2014 <sf_sdup>
   10e80:	ldr	r1, [pc, #292]	; 10fac <sfbpf_lex+0xf94>
   10e84:	ldr	r1, [pc, r1]
   10e88:	str	r0, [r1]
   10e8c:	movw	r0, #314	; 0x13a
   10e90:	sub	sp, fp, #28
   10e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e98:	ldr	r0, [pc, #520]	; 110a8 <sfbpf_lex+0x1090>
   10e9c:	add	r0, pc, r0
   10ea0:	bl	11b78 <yy_fatal_error>
   10ea4:	ldr	r0, [pc, #360]	; 11014 <sfbpf_lex+0xffc>
   10ea8:	ldr	r0, [pc, r0]
   10eac:	ldrb	r1, [r0]
   10eb0:	ldr	r0, [pc, #352]	; 11018 <sfbpf_lex+0x1000>
   10eb4:	add	r0, pc, r0
   10eb8:	bl	1fc4 <sf_bpf_error>
   10ebc:	ldr	r1, [pc, #328]	; 1100c <sfbpf_lex+0xff4>
   10ec0:	ldr	r1, [pc, r1]
   10ec4:	ldr	r0, [pc, #324]	; 11010 <sfbpf_lex+0xff8>
   10ec8:	add	r0, pc, r0
   10ecc:	bl	1fc4 <sf_bpf_error>
   10ed0:	ldr	r1, [pc, #216]	; 10fb0 <sfbpf_lex+0xf98>
   10ed4:	ldr	r1, [pc, r1]
   10ed8:	ldr	r0, [pc, #212]	; 10fb4 <sfbpf_lex+0xf9c>
   10edc:	add	r0, pc, r0
   10ee0:	bl	1fc4 <sf_bpf_error>
   10ee4:	ldr	r1, [pc, #448]	; 110ac <sfbpf_lex+0x1094>
   10ee8:	ldr	r1, [pc, r1]
   10eec:	ldr	r0, [pc, #444]	; 110b0 <sfbpf_lex+0x1098>
   10ef0:	add	r0, pc, r0
   10ef4:	bl	1fc4 <sf_bpf_error>
   10ef8:	.word	0x00020ac0
   10efc:	.word	0x00020ab4
   10f00:	.word	0x00020a84
   10f04:	.word	0x00020050
   10f08:	.word	0x00020a68
   10f0c:	.word	0x00020a60
   10f10:	.word	0x0002002c
   10f14:	.word	0x00020a44
   10f18:	.word	0x00020a44
   10f1c:	.word	0x00020a38
   10f20:	.word	0x00020a08
   10f24:	.word	0x00020a0c
   10f28:	.word	0x00020a08
   10f2c:	.word	0x000209fc
   10f30:	.word	0x00004fac
   10f34:	.word	0x00009616
   10f38:	.word	0x00005bd0
   10f3c:	.word	0x0000a4d2
   10f40:	.word	0x000209c8
   10f44:	.word	0x00005034
   10f48:	.word	0x0002096c
   10f4c:	.word	0x0002095c
   10f50:	.word	0x0000b2b6
   10f54:	.word	0x00004f6c
   10f58:	.word	0x0000b3a4
   10f5c:	.word	0x00004f84
   10f60:	.word	0x000208b8
   10f64:	.word	0x00004f64
   10f68:	.word	0x000208a4
   10f6c:	.word	0x000208e8
   10f70:	.word	0x000208d0
   10f74:	.word	0x00020860
   10f78:	.word	0x000208e0
   10f7c:	.word	0x000208dc
   10f80:	.word	0x00020180
   10f84:	.word	0x000202e4
   10f88:	.word	0x0001f844
   10f8c:	.word	0x0001fe38
   10f90:	.word	0x0001f39c
   10f94:	.word	0x00020330
   10f98:	.word	0x0001f894
   10f9c:	.word	0x0001fdf8
   10fa0:	.word	0x0001f35c
   10fa4:	.word	0x0001fcfc
   10fa8:	.word	0x0001fcd8
   10fac:	.word	0x0001f23c
   10fb0:	.word	0x0001fc7c
   10fb4:	.word	0x0000e06c
   10fb8:	.word	0x0001f8f8
   10fbc:	.word	0x0001f424
   10fc0:	.word	0x0001f378
   10fc4:	.word	0x0001f718
   10fc8:	.word	0x0001f740
   10fcc:	.word	0x0001f7c0
   10fd0:	.word	0x0001f5c4
   10fd4:	.word	0x0001f768
   10fd8:	.word	0x0001f5a4
   10fdc:	.word	0x0001f320
   10fe0:	.word	0x0001f494
   10fe4:	.word	0x0001f924
   10fe8:	.word	0x0001f914
   10fec:	.word	0x0001f504
   10ff0:	.word	0x0001f978
   10ff4:	.word	0x0001f940
   10ff8:	.word	0x0001f950
   10ffc:	.word	0x0001f5b4
   11000:	.word	0x0001ff60
   11004:	.word	0x0001f4c4
   11008:	.word	0x000200b8
   1100c:	.word	0x0001fc90
   11010:	.word	0x0000e09a
   11014:	.word	0x0001fca8
   11018:	.word	0x0000e0c0
   1101c:	.word	0x000203d4
   11020:	.word	0x00020438
   11024:	.word	0x00020434
   11028:	.word	0x00004980
   1102c:	.word	0x00020644
   11030:	.word	0x000205dc
   11034:	.word	0x000205d0
   11038:	.word	0x000205cc
   1103c:	.word	0x00020590
   11040:	.word	0x00020598
   11044:	.word	0x0002057c
   11048:	.word	0x00020578
   1104c:	.word	0x00020514
   11050:	.word	0x00020554
   11054:	.word	0x000204ec
   11058:	.word	0x00004a9c
   1105c:	.word	0x00020400
   11060:	.word	0x00020468
   11064:	.word	0x00004a18
   11068:	.word	0x000204a0
   1106c:	.word	0x0002043c
   11070:	.word	0x000049e8
   11074:	.word	0x00020428
   11078:	.word	0x0002046c
   1107c:	.word	0x000204c4
   11080:	.word	0x000204b8
   11084:	.word	0x000204c0
   11088:	.word	0x000204a4
   1108c:	.word	0x000204e8
   11090:	.word	0x00020484
   11094:	.word	0x00004a34
   11098:	.word	0x000205b8
   1109c:	.word	0x00020558
   110a0:	.word	0x00020548
   110a4:	.word	0x00004af8
   110a8:	.word	0x0000e0ea
   110ac:	.word	0x0001fc68
   110b0:	.word	0x0000e042

000110b4 <sfbpf_ensure_buffer_stack>:
   110b4:	push	{r4, sl, fp, lr}
   110b8:	add	fp, sp, #8
   110bc:	ldr	r0, [pc, #184]	; 1117c <sfbpf_ensure_buffer_stack+0xc8>
   110c0:	ldr	r0, [pc, r0]
   110c4:	cmp	r0, #0
   110c8:	beq	11130 <sfbpf_ensure_buffer_stack+0x7c>
   110cc:	ldr	r1, [pc, #184]	; 1118c <sfbpf_ensure_buffer_stack+0xd8>
   110d0:	ldr	r1, [pc, r1]
   110d4:	sub	r2, r1, #1
   110d8:	ldr	r3, [pc, #176]	; 11190 <sfbpf_ensure_buffer_stack+0xdc>
   110dc:	ldr	r3, [pc, r3]
   110e0:	cmp	r3, r2
   110e4:	popcc	{r4, sl, fp, pc}
   110e8:	add	r4, r1, #8
   110ec:	lsl	r1, r4, #2
   110f0:	bl	12208 <sfbpf_realloc>
   110f4:	ldr	r1, [pc, #152]	; 11194 <sfbpf_ensure_buffer_stack+0xe0>
   110f8:	add	r1, pc, r1
   110fc:	str	r0, [r1]
   11100:	cmp	r0, #0
   11104:	beq	11170 <sfbpf_ensure_buffer_stack+0xbc>
   11108:	ldr	r1, [pc, #136]	; 11198 <sfbpf_ensure_buffer_stack+0xe4>
   1110c:	ldr	r1, [pc, r1]
   11110:	vmov.i32	q8, #0	; 0x00000000
   11114:	add	r0, r0, r1, lsl #2
   11118:	vst1.32	{d16-d17}, [r0]!
   1111c:	vst1.32	{d16-d17}, [r0]
   11120:	ldr	r0, [pc, #116]	; 1119c <sfbpf_ensure_buffer_stack+0xe8>
   11124:	add	r0, pc, r0
   11128:	str	r4, [r0]
   1112c:	pop	{r4, sl, fp, pc}
   11130:	mov	r0, #4
   11134:	bl	11d08 <sfbpf_alloc>
   11138:	ldr	r1, [pc, #64]	; 11180 <sfbpf_ensure_buffer_stack+0xcc>
   1113c:	add	r1, pc, r1
   11140:	str	r0, [r1]
   11144:	cmp	r0, #0
   11148:	movne	r1, #0
   1114c:	strne	r1, [r0]
   11150:	ldrne	r0, [pc, #44]	; 11184 <sfbpf_ensure_buffer_stack+0xd0>
   11154:	addne	r0, pc, r0
   11158:	strne	r1, [r0]
   1115c:	ldrne	r0, [pc, #36]	; 11188 <sfbpf_ensure_buffer_stack+0xd4>
   11160:	addne	r0, pc, r0
   11164:	movne	r1, #1
   11168:	strne	r1, [r0]
   1116c:	popne	{r4, sl, fp, pc}
   11170:	ldr	r0, [pc, #40]	; 111a0 <sfbpf_ensure_buffer_stack+0xec>
   11174:	add	r0, pc, r0
   11178:	bl	11b78 <yy_fatal_error>
   1117c:	.word	0x0001fa30
   11180:	.word	0x0001f9b4
   11184:	.word	0x0001f9a0
   11188:	.word	0x0001f9b0
   1118c:	.word	0x0001fa40
   11190:	.word	0x0001fa18
   11194:	.word	0x0001f9f8
   11198:	.word	0x0001fa04
   1119c:	.word	0x0001f9ec
   111a0:	.word	0x0000df91

000111a4 <sfbpf__create_buffer>:
   111a4:	push	{r4, r5, r6, sl, fp, lr}
   111a8:	add	fp, sp, #16
   111ac:	mov	r6, r1
   111b0:	mov	r4, r0
   111b4:	mov	r0, #48	; 0x30
   111b8:	bl	11d08 <sfbpf_alloc>
   111bc:	cmp	r0, #0
   111c0:	beq	111fc <sfbpf__create_buffer+0x58>
   111c4:	mov	r5, r0
   111c8:	str	r6, [r0, #12]
   111cc:	add	r0, r6, #2
   111d0:	bl	11d08 <sfbpf_alloc>
   111d4:	str	r0, [r5, #4]
   111d8:	cmp	r0, #0
   111dc:	beq	111fc <sfbpf__create_buffer+0x58>
   111e0:	mov	r0, #1
   111e4:	str	r0, [r5, #20]
   111e8:	mov	r0, r5
   111ec:	mov	r1, r4
   111f0:	bl	11bac <sfbpf__init_buffer>
   111f4:	mov	r0, r5
   111f8:	pop	{r4, r5, r6, sl, fp, pc}
   111fc:	ldr	r0, [pc, #4]	; 11208 <sfbpf__create_buffer+0x64>
   11200:	add	r0, pc, r0
   11204:	bl	11b78 <yy_fatal_error>
   11208:	.word	0x0000ddb9

0001120c <sfbpf__load_buffer_state>:
   1120c:	ldr	r0, [pc, #96]	; 11274 <sfbpf__load_buffer_state+0x68>
   11210:	ldr	r0, [pc, r0]
   11214:	ldr	r1, [pc, #92]	; 11278 <sfbpf__load_buffer_state+0x6c>
   11218:	ldr	r1, [pc, r1]
   1121c:	ldr	r2, [r1, r0, lsl #2]
   11220:	ldr	ip, [r2, #16]
   11224:	ldr	r3, [pc, #80]	; 1127c <sfbpf__load_buffer_state+0x70>
   11228:	add	r3, pc, r3
   1122c:	str	ip, [r3]
   11230:	ldr	r2, [r2, #8]
   11234:	ldr	r3, [pc, #68]	; 11280 <sfbpf__load_buffer_state+0x74>
   11238:	add	r3, pc, r3
   1123c:	str	r2, [r3]
   11240:	ldr	r3, [pc, #60]	; 11284 <sfbpf__load_buffer_state+0x78>
   11244:	add	r3, pc, r3
   11248:	str	r2, [r3]
   1124c:	ldr	r0, [r1, r0, lsl #2]
   11250:	ldr	r0, [r0]
   11254:	ldr	r1, [pc, #44]	; 11288 <sfbpf__load_buffer_state+0x7c>
   11258:	add	r1, pc, r1
   1125c:	str	r0, [r1]
   11260:	ldrb	r0, [r2]
   11264:	ldr	r1, [pc, #32]	; 1128c <sfbpf__load_buffer_state+0x80>
   11268:	add	r1, pc, r1
   1126c:	strb	r0, [r1]
   11270:	bx	lr
   11274:	.word	0x0001f8e4
   11278:	.word	0x0001f8d8
   1127c:	.word	0x0001f8e0
   11280:	.word	0x0001f8c0
   11284:	.word	0x0001f90c
   11288:	.word	0x0001f884
   1128c:	.word	0x0001f894

00011290 <stoi>:
   11290:	push	{r4, r5, r6, sl, fp, lr}
   11294:	add	fp, sp, #16
   11298:	ldrb	r1, [r0]
   1129c:	cmp	r1, #48	; 0x30
   112a0:	bne	112d4 <stoi+0x44>
   112a4:	mov	r2, r0
   112a8:	ldrb	r1, [r2, #1]!
   112ac:	orr	r3, r1, #32
   112b0:	cmp	r3, #120	; 0x78
   112b4:	bne	11308 <stoi+0x78>
   112b8:	ldrb	r1, [r0, #2]!
   112bc:	mov	r5, #16
   112c0:	cmp	r1, #0
   112c4:	bne	112e0 <stoi+0x50>
   112c8:	mov	r4, #0
   112cc:	mov	r0, r4
   112d0:	pop	{r4, r5, r6, sl, fp, pc}
   112d4:	mov	r5, #10
   112d8:	cmp	r1, #0
   112dc:	beq	112c8 <stoi+0x38>
   112e0:	add	r6, r0, #1
   112e4:	mov	r4, #0
   112e8:	uxtb	r0, r1
   112ec:	bl	12260 <xdtoi>
   112f0:	mla	r4, r4, r5, r0
   112f4:	ldrb	r1, [r6], #1
   112f8:	cmp	r1, #0
   112fc:	bne	112e8 <stoi+0x58>
   11300:	mov	r0, r4
   11304:	pop	{r4, r5, r6, sl, fp, pc}
   11308:	mov	r5, #8
   1130c:	mov	r0, r2
   11310:	cmp	r1, #0
   11314:	bne	112e0 <stoi+0x50>
   11318:	b	112c8 <stoi+0x38>

0001131c <yy_get_previous_state>:
   1131c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11320:	add	fp, sp, #28
   11324:	sub	sp, sp, #4
   11328:	ldr	r0, [pc, #312]	; 11468 <yy_get_previous_state+0x14c>
   1132c:	add	r0, pc, r0
   11330:	ldrb	r0, [r0]
   11334:	ldr	r1, [pc, #304]	; 1146c <yy_get_previous_state+0x150>
   11338:	ldr	r1, [pc, r1]
   1133c:	ldr	r2, [pc, #300]	; 11470 <yy_get_previous_state+0x154>
   11340:	ldr	r2, [pc, r2]
   11344:	cmp	r1, r2
   11348:	bcs	11460 <yy_get_previous_state+0x144>
   1134c:	ldr	r7, [pc, #288]	; 11474 <yy_get_previous_state+0x158>
   11350:	ldr	r7, [pc, r7]
   11354:	ldr	ip, [pc, #284]	; 11478 <yy_get_previous_state+0x15c>
   11358:	add	ip, pc, ip
   1135c:	ldr	r3, [pc, #280]	; 1147c <yy_get_previous_state+0x160>
   11360:	add	r3, pc, r3
   11364:	ldr	r2, [pc, #276]	; 11480 <yy_get_previous_state+0x164>
   11368:	add	r2, pc, r2
   1136c:	ldr	r9, [pc, #272]	; 11484 <yy_get_previous_state+0x168>
   11370:	add	r9, pc, r9
   11374:	ldr	r5, [pc, #268]	; 11488 <yy_get_previous_state+0x16c>
   11378:	add	r5, pc, r5
   1137c:	movw	r6, #1434	; 0x59a
   11380:	ldr	lr, [pc, #260]	; 1148c <yy_get_previous_state+0x170>
   11384:	add	lr, pc, lr
   11388:	str	r7, [sp]
   1138c:	b	113a4 <yy_get_previous_state+0x88>
   11390:	add	r0, r9, sl, lsl #1
   11394:	ldrsh	r0, [r0]
   11398:	add	r1, r1, #1
   1139c:	cmp	r1, r7
   113a0:	bcs	11460 <yy_get_previous_state+0x144>
   113a4:	ldrb	r4, [r1]
   113a8:	cmp	r4, #0
   113ac:	beq	113c8 <yy_get_previous_state+0xac>
   113b0:	mov	sl, r7
   113b4:	ldr	r7, [pc, #212]	; 11490 <yy_get_previous_state+0x174>
   113b8:	add	r7, pc, r7
   113bc:	ldrb	r8, [r7, r4]
   113c0:	mov	r7, sl
   113c4:	b	113cc <yy_get_previous_state+0xb0>
   113c8:	mov	r8, #1
   113cc:	add	r4, ip, r0, lsl #1
   113d0:	ldrh	r4, [r4]
   113d4:	cmp	r4, #0
   113d8:	beq	113f4 <yy_get_previous_state+0xd8>
   113dc:	ldr	r4, [pc, #176]	; 11494 <yy_get_previous_state+0x178>
   113e0:	add	r4, pc, r4
   113e4:	str	r1, [r4]
   113e8:	ldr	r4, [pc, #168]	; 11498 <yy_get_previous_state+0x17c>
   113ec:	add	r4, pc, r4
   113f0:	str	r0, [r4]
   113f4:	add	r4, r3, r0, lsl #1
   113f8:	ldrsh	r4, [r4]
   113fc:	add	sl, r4, r8
   11400:	add	r4, r2, sl, lsl #1
   11404:	ldrsh	r4, [r4]
   11408:	cmp	r0, r4
   1140c:	beq	11390 <yy_get_previous_state+0x74>
   11410:	mov	r7, ip
   11414:	mov	r9, r8
   11418:	add	r0, r5, r0, lsl #1
   1141c:	ldrsh	r0, [r0]
   11420:	cmp	r0, r6
   11424:	ldrbge	r9, [lr, r8]
   11428:	add	r4, r3, r0, lsl #1
   1142c:	ldrsh	r4, [r4]
   11430:	uxtab	sl, r4, r9
   11434:	add	r4, r2, sl, lsl #1
   11438:	ldrh	r4, [r4]
   1143c:	uxtb	r8, r9
   11440:	uxth	ip, r0
   11444:	cmp	ip, r4
   11448:	bne	11418 <yy_get_previous_state+0xfc>
   1144c:	mov	ip, r7
   11450:	ldr	r7, [sp]
   11454:	ldr	r9, [pc, #64]	; 1149c <yy_get_previous_state+0x180>
   11458:	add	r9, pc, r9
   1145c:	b	11390 <yy_get_previous_state+0x74>
   11460:	sub	sp, fp, #28
   11464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11468:	.word	0x0001f7c0
   1146c:	.word	0x0001f818
   11470:	.word	0x0001f7b8
   11474:	.word	0x0001f7a8
   11478:	.word	0x00003e5c
   1147c:	.word	0x000083c6
   11480:	.word	0x00004980
   11484:	.word	0x0000a184
   11488:	.word	0x0000927a
   1148c:	.word	0x0000a13a
   11490:	.word	0x00003cfc
   11494:	.word	0x0001f724
   11498:	.word	0x0001f714
   1149c:	.word	0x0000a09c

000114a0 <yy_try_NUL_trans>:
   114a0:	push	{r4, sl, fp, lr}
   114a4:	add	fp, sp, #8
   114a8:	ldr	r1, [pc, #176]	; 11560 <yy_try_NUL_trans+0xc0>
   114ac:	add	r1, pc, r1
   114b0:	add	r1, r1, r0, lsl #1
   114b4:	ldrh	r1, [r1]
   114b8:	cmp	r1, #0
   114bc:	beq	114e0 <yy_try_NUL_trans+0x40>
   114c0:	ldr	r1, [pc, #156]	; 11564 <yy_try_NUL_trans+0xc4>
   114c4:	add	r1, pc, r1
   114c8:	str	r0, [r1]
   114cc:	ldr	r1, [pc, #148]	; 11568 <yy_try_NUL_trans+0xc8>
   114d0:	ldr	r1, [pc, r1]
   114d4:	ldr	r2, [pc, #144]	; 1156c <yy_try_NUL_trans+0xcc>
   114d8:	add	r2, pc, r2
   114dc:	str	r1, [r2]
   114e0:	ldr	ip, [pc, #136]	; 11570 <yy_try_NUL_trans+0xd0>
   114e4:	add	ip, pc, ip
   114e8:	add	r1, ip, r0, lsl #1
   114ec:	ldrsh	r1, [r1]
   114f0:	add	r3, r1, #1
   114f4:	ldr	lr, [pc, #120]	; 11574 <yy_try_NUL_trans+0xd4>
   114f8:	add	lr, pc, lr
   114fc:	add	r1, lr, r3, lsl #1
   11500:	ldrsh	r1, [r1]
   11504:	cmp	r1, r0
   11508:	beq	1153c <yy_try_NUL_trans+0x9c>
   1150c:	ldr	r1, [pc, #100]	; 11578 <yy_try_NUL_trans+0xd8>
   11510:	add	r1, pc, r1
   11514:	add	r0, r1, r0, lsl #1
   11518:	ldrh	r2, [r0]
   1151c:	sxth	r0, r2
   11520:	add	r3, ip, r0, lsl #1
   11524:	ldrsh	r3, [r3]
   11528:	add	r3, r3, #1
   1152c:	add	r4, lr, r3, lsl #1
   11530:	ldrh	r4, [r4]
   11534:	cmp	r2, r4
   11538:	bne	11514 <yy_try_NUL_trans+0x74>
   1153c:	ldr	r0, [pc, #56]	; 1157c <yy_try_NUL_trans+0xdc>
   11540:	add	r0, pc, r0
   11544:	add	r0, r0, r3, lsl #1
   11548:	ldrh	r0, [r0]
   1154c:	movw	r1, #1433	; 0x599
   11550:	subs	r1, r0, r1
   11554:	movne	r1, r0
   11558:	sxth	r0, r1
   1155c:	pop	{r4, sl, fp, pc}
   11560:	.word	0x00003d08
   11564:	.word	0x0001f63c
   11568:	.word	0x0001f628
   1156c:	.word	0x0001f62c
   11570:	.word	0x00008242
   11574:	.word	0x000047f0
   11578:	.word	0x000090e2
   1157c:	.word	0x00009fb4

00011580 <yy_get_next_buffer>:
   11580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11584:	add	fp, sp, #28
   11588:	sub	sp, sp, #4
   1158c:	ldr	r0, [pc, #1124]	; 119f8 <yy_get_next_buffer+0x478>
   11590:	ldr	r0, [pc, r0]
   11594:	ldr	r1, [pc, #1120]	; 119fc <yy_get_next_buffer+0x47c>
   11598:	ldr	r1, [pc, r1]
   1159c:	ldr	r3, [r1, r0, lsl #2]
   115a0:	ldr	r2, [r3, #4]
   115a4:	ldr	r7, [pc, #1108]	; 11a00 <yy_get_next_buffer+0x480>
   115a8:	ldr	r7, [pc, r7]
   115ac:	add	r7, r7, r2
   115b0:	add	r7, r7, #1
   115b4:	ldr	r5, [pc, #1096]	; 11a04 <yy_get_next_buffer+0x484>
   115b8:	ldr	r5, [pc, r5]
   115bc:	cmp	r5, r7
   115c0:	bhi	119d4 <yy_get_next_buffer+0x454>
   115c4:	ldr	sl, [pc, #1084]	; 11a08 <yy_get_next_buffer+0x488>
   115c8:	ldr	sl, [pc, sl]
   115cc:	sub	r6, r5, sl
   115d0:	ldr	r3, [r3, #40]	; 0x28
   115d4:	cmp	r3, #0
   115d8:	beq	11634 <yy_get_next_buffer+0xb4>
   115dc:	sub	r8, r6, #1
   115e0:	cmp	r8, #1
   115e4:	blt	11604 <yy_get_next_buffer+0x84>
   115e8:	mvn	r3, sl
   115ec:	add	r3, r3, r5
   115f0:	mov	r7, sl
   115f4:	ldrb	r4, [r7], #1
   115f8:	strb	r4, [r2], #1
   115fc:	subs	r3, r3, #1
   11600:	bne	115f4 <yy_get_next_buffer+0x74>
   11604:	ldr	r0, [r1, r0, lsl #2]
   11608:	ldr	r1, [r0, #44]	; 0x2c
   1160c:	cmp	r1, #2
   11610:	ldr	r9, [pc, #1012]	; 11a0c <yy_get_next_buffer+0x48c>
   11614:	add	r9, pc, r9
   11618:	bne	11644 <yy_get_next_buffer+0xc4>
   1161c:	mov	r1, #0
   11620:	str	r1, [r9]
   11624:	str	r1, [r0, #16]
   11628:	cmp	r8, #0
   1162c:	bne	118c4 <yy_get_next_buffer+0x344>
   11630:	b	118e4 <yy_get_next_buffer+0x364>
   11634:	cmp	r6, #1
   11638:	movwne	r6, #2
   1163c:	mov	r4, r6
   11640:	b	119b4 <yy_get_next_buffer+0x434>
   11644:	str	r8, [sp]
   11648:	ldr	r0, [r0, #12]
   1164c:	sub	r4, r0, r6
   11650:	cmp	r4, #0
   11654:	bgt	116f8 <yy_get_next_buffer+0x178>
   11658:	ldr	r7, [pc, #944]	; 11a10 <yy_get_next_buffer+0x490>
   1165c:	add	r7, pc, r7
   11660:	ldr	r0, [pc, #940]	; 11a14 <yy_get_next_buffer+0x494>
   11664:	ldr	r0, [pc, r0]
   11668:	ldr	r1, [pc, #936]	; 11a18 <yy_get_next_buffer+0x498>
   1166c:	ldr	r1, [pc, r1]
   11670:	ldr	r4, [r1, r0, lsl #2]
   11674:	ldr	r0, [r4, #20]
   11678:	cmp	r0, #0
   1167c:	beq	119c0 <yy_get_next_buffer+0x440>
   11680:	ldr	r8, [r4, #4]
   11684:	ldr	r9, [pc, #916]	; 11a20 <yy_get_next_buffer+0x4a0>
   11688:	ldr	r9, [pc, r9]
   1168c:	ldr	r0, [r4, #12]
   11690:	cmp	r0, #0
   11694:	ble	116a0 <yy_get_next_buffer+0x120>
   11698:	lsl	r1, r0, #1
   1169c:	b	116ac <yy_get_next_buffer+0x12c>
   116a0:	asr	r1, r0, #31
   116a4:	add	r1, r0, r1, lsr #29
   116a8:	add	r1, r0, r1, asr #3
   116ac:	str	r1, [r4, #12]
   116b0:	ldr	r0, [r4, #4]
   116b4:	add	r1, r1, #2
   116b8:	bl	12208 <sfbpf_realloc>
   116bc:	str	r0, [r4, #4]
   116c0:	cmp	r0, #0
   116c4:	beq	119c8 <yy_get_next_buffer+0x448>
   116c8:	sub	r1, r9, r8
   116cc:	add	r0, r0, r1
   116d0:	str	r0, [r7]
   116d4:	ldr	r0, [pc, #840]	; 11a24 <yy_get_next_buffer+0x4a4>
   116d8:	ldr	r0, [pc, r0]
   116dc:	ldr	r1, [pc, #836]	; 11a28 <yy_get_next_buffer+0x4a8>
   116e0:	ldr	r1, [pc, r1]
   116e4:	ldr	r0, [r1, r0, lsl #2]
   116e8:	ldr	r0, [r0, #12]
   116ec:	sub	r4, r0, r6
   116f0:	cmp	r4, #1
   116f4:	blt	11660 <yy_get_next_buffer+0xe0>
   116f8:	cmp	r4, #8192	; 0x2000
   116fc:	movge	r4, #8192	; 0x2000
   11700:	ldr	r0, [pc, #804]	; 11a2c <yy_get_next_buffer+0x4ac>
   11704:	ldr	r0, [pc, r0]
   11708:	ldr	r1, [pc, #800]	; 11a30 <yy_get_next_buffer+0x4b0>
   1170c:	ldr	r1, [pc, r1]
   11710:	ldr	r0, [r1, r0, lsl #2]
   11714:	ldr	r0, [r0, #24]
   11718:	cmp	r0, #0
   1171c:	beq	117b4 <yy_get_next_buffer+0x234>
   11720:	mvn	r0, sl
   11724:	add	r7, r0, r5
   11728:	mov	r5, #0
   1172c:	ldr	r8, [sp]
   11730:	ldr	r9, [pc, #764]	; 11a34 <yy_get_next_buffer+0x4b4>
   11734:	add	r9, pc, r9
   11738:	ldr	r0, [pc, #760]	; 11a38 <yy_get_next_buffer+0x4b8>
   1173c:	ldr	r0, [pc, r0]
   11740:	bl	fd0 <getc@plt>
   11744:	cmn	r0, #1
   11748:	cmpne	r0, #10
   1174c:	beq	1177c <yy_get_next_buffer+0x1fc>
   11750:	ldr	r1, [pc, #740]	; 11a3c <yy_get_next_buffer+0x4bc>
   11754:	ldr	r1, [pc, r1]
   11758:	ldr	r2, [pc, #736]	; 11a40 <yy_get_next_buffer+0x4c0>
   1175c:	ldr	r2, [pc, r2]
   11760:	ldr	r1, [r2, r1, lsl #2]
   11764:	ldr	r1, [r1, #4]
   11768:	add	r1, r1, r7
   1176c:	strb	r0, [r1, r5]
   11770:	add	r5, r5, #1
   11774:	cmp	r5, r4
   11778:	blt	11738 <yy_get_next_buffer+0x1b8>
   1177c:	cmn	r0, #1
   11780:	beq	11870 <yy_get_next_buffer+0x2f0>
   11784:	cmp	r0, #10
   11788:	bne	11884 <yy_get_next_buffer+0x304>
   1178c:	ldr	r1, [pc, #688]	; 11a44 <yy_get_next_buffer+0x4c4>
   11790:	ldr	r1, [pc, r1]
   11794:	ldr	r2, [pc, #684]	; 11a48 <yy_get_next_buffer+0x4c8>
   11798:	ldr	r2, [pc, r2]
   1179c:	ldr	r1, [r2, r1, lsl #2]
   117a0:	ldr	r1, [r1, #4]
   117a4:	add	r1, r1, r8
   117a8:	strb	r0, [r1, r5]
   117ac:	add	r5, r5, #1
   117b0:	b	11884 <yy_get_next_buffer+0x304>
   117b4:	bl	f28 <__errno_location@plt>
   117b8:	mov	r5, r0
   117bc:	mov	r7, #0
   117c0:	str	r7, [r0]
   117c4:	ldr	r0, [pc, #664]	; 11a64 <yy_get_next_buffer+0x4e4>
   117c8:	ldr	r0, [pc, r0]
   117cc:	ldr	r1, [pc, #660]	; 11a68 <yy_get_next_buffer+0x4e8>
   117d0:	ldr	r1, [pc, r1]
   117d4:	ldr	r0, [r1, r0, lsl #2]
   117d8:	ldr	r0, [r0, #4]
   117dc:	ldr	r8, [sp]
   117e0:	add	r0, r0, r8
   117e4:	ldr	r3, [pc, #640]	; 11a6c <yy_get_next_buffer+0x4ec>
   117e8:	ldr	r3, [pc, r3]
   117ec:	mov	r1, #1
   117f0:	mov	r2, r4
   117f4:	bl	ebc <fread@plt>
   117f8:	ldr	r9, [pc, #624]	; 11a70 <yy_get_next_buffer+0x4f0>
   117fc:	add	r9, pc, r9
   11800:	str	r0, [r9]
   11804:	cmp	r0, #0
   11808:	bne	11888 <yy_get_next_buffer+0x308>
   1180c:	ldr	r0, [pc, #608]	; 11a74 <yy_get_next_buffer+0x4f4>
   11810:	ldr	r0, [pc, r0]
   11814:	bl	e74 <ferror@plt>
   11818:	cmp	r0, #0
   1181c:	beq	11888 <yy_get_next_buffer+0x308>
   11820:	ldr	r0, [r5]
   11824:	cmp	r0, #4
   11828:	bne	119e0 <yy_get_next_buffer+0x460>
   1182c:	str	r7, [r5]
   11830:	ldr	r0, [pc, #576]	; 11a78 <yy_get_next_buffer+0x4f8>
   11834:	ldr	r0, [pc, r0]
   11838:	bl	f7c <clearerr@plt>
   1183c:	ldr	r0, [pc, #568]	; 11a7c <yy_get_next_buffer+0x4fc>
   11840:	ldr	r0, [pc, r0]
   11844:	ldr	r1, [pc, #564]	; 11a80 <yy_get_next_buffer+0x500>
   11848:	ldr	r1, [pc, r1]
   1184c:	ldr	r0, [r1, r0, lsl #2]
   11850:	ldr	r0, [r0, #4]
   11854:	add	r0, r0, r8
   11858:	ldr	r3, [pc, #548]	; 11a84 <yy_get_next_buffer+0x504>
   1185c:	ldr	r3, [pc, r3]
   11860:	mov	r1, #1
   11864:	mov	r2, r4
   11868:	bl	ebc <fread@plt>
   1186c:	b	11800 <yy_get_next_buffer+0x280>
   11870:	ldr	r0, [pc, #468]	; 11a4c <yy_get_next_buffer+0x4cc>
   11874:	ldr	r0, [pc, r0]
   11878:	bl	e74 <ferror@plt>
   1187c:	cmp	r0, #0
   11880:	bne	119e0 <yy_get_next_buffer+0x460>
   11884:	str	r5, [r9]
   11888:	ldr	r0, [pc, #448]	; 11a50 <yy_get_next_buffer+0x4d0>
   1188c:	ldr	r0, [pc, r0]
   11890:	ldr	r1, [pc, #444]	; 11a54 <yy_get_next_buffer+0x4d4>
   11894:	ldr	r1, [pc, r1]
   11898:	ldr	r0, [r1, r0, lsl #2]
   1189c:	ldr	r1, [pc, #436]	; 11a58 <yy_get_next_buffer+0x4d8>
   118a0:	ldr	r1, [pc, r1]
   118a4:	str	r1, [r0, #16]
   118a8:	mov	r4, #0
   118ac:	ldr	r0, [pc, #424]	; 11a5c <yy_get_next_buffer+0x4dc>
   118b0:	ldr	r0, [pc, r0]
   118b4:	cmp	r0, #0
   118b8:	bne	118f4 <yy_get_next_buffer+0x374>
   118bc:	cmp	r8, #0
   118c0:	beq	118e4 <yy_get_next_buffer+0x364>
   118c4:	ldr	r0, [pc, #444]	; 11a88 <yy_get_next_buffer+0x508>
   118c8:	ldr	r0, [pc, r0]
   118cc:	ldr	r1, [pc, #440]	; 11a8c <yy_get_next_buffer+0x50c>
   118d0:	ldr	r1, [pc, r1]
   118d4:	ldr	r0, [r1, r0, lsl #2]
   118d8:	mov	r4, #2
   118dc:	str	r4, [r0, #44]	; 0x2c
   118e0:	b	118f4 <yy_get_next_buffer+0x374>
   118e4:	ldr	r0, [pc, #372]	; 11a60 <yy_get_next_buffer+0x4e0>
   118e8:	ldr	r0, [pc, r0]
   118ec:	bl	11ac8 <sfbpf_restart>
   118f0:	mov	r4, #1
   118f4:	ldr	r0, [pc, #404]	; 11a90 <yy_get_next_buffer+0x510>
   118f8:	ldr	r0, [pc, r0]
   118fc:	add	r1, r0, r8
   11900:	ldr	r2, [pc, #396]	; 11a94 <yy_get_next_buffer+0x514>
   11904:	ldr	r2, [pc, r2]
   11908:	ldr	r3, [pc, #392]	; 11a98 <yy_get_next_buffer+0x518>
   1190c:	ldr	r3, [pc, r3]
   11910:	ldr	r2, [r3, r2, lsl #2]
   11914:	ldr	r3, [r2, #12]
   11918:	cmp	r1, r3
   1191c:	ble	11960 <yy_get_next_buffer+0x3e0>
   11920:	add	r5, r1, r0, asr #1
   11924:	ldr	r0, [r2, #4]
   11928:	mov	r1, r5
   1192c:	bl	12208 <sfbpf_realloc>
   11930:	ldr	r1, [pc, #356]	; 11a9c <yy_get_next_buffer+0x51c>
   11934:	ldr	r1, [pc, r1]
   11938:	ldr	r2, [pc, #352]	; 11aa0 <yy_get_next_buffer+0x520>
   1193c:	ldr	r2, [pc, r2]
   11940:	ldr	r3, [r2, r1, lsl #2]
   11944:	str	r0, [r3, #4]
   11948:	ldr	r0, [r2, r1, lsl #2]
   1194c:	ldr	r1, [r0, #4]
   11950:	cmp	r1, #0
   11954:	beq	119ec <yy_get_next_buffer+0x46c>
   11958:	sub	r1, r5, #2
   1195c:	str	r1, [r0, #12]
   11960:	ldr	r0, [pc, #316]	; 11aa4 <yy_get_next_buffer+0x524>
   11964:	ldr	r0, [pc, r0]
   11968:	add	r1, r0, r8
   1196c:	str	r1, [r9]
   11970:	ldr	r2, [pc, #304]	; 11aa8 <yy_get_next_buffer+0x528>
   11974:	ldr	r2, [pc, r2]
   11978:	ldr	r3, [pc, #300]	; 11aac <yy_get_next_buffer+0x52c>
   1197c:	ldr	r3, [pc, r3]
   11980:	ldr	r7, [r3, r2, lsl #2]
   11984:	ldr	r7, [r7, #4]
   11988:	mov	r5, #0
   1198c:	strb	r5, [r7, r1]
   11990:	add	r0, r0, r6
   11994:	ldr	r1, [r3, r2, lsl #2]
   11998:	ldr	r1, [r1, #4]
   1199c:	strb	r5, [r1, r0]
   119a0:	ldr	r0, [r3, r2, lsl #2]
   119a4:	ldr	r0, [r0, #4]
   119a8:	ldr	r1, [pc, #256]	; 11ab0 <yy_get_next_buffer+0x530>
   119ac:	add	r1, pc, r1
   119b0:	str	r0, [r1]
   119b4:	mov	r0, r4
   119b8:	sub	sp, fp, #28
   119bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119c0:	mov	r0, #0
   119c4:	str	r0, [r4, #4]
   119c8:	ldr	r0, [pc, #76]	; 11a1c <yy_get_next_buffer+0x49c>
   119cc:	add	r0, pc, r0
   119d0:	bl	11b78 <yy_fatal_error>
   119d4:	ldr	r0, [pc, #216]	; 11ab4 <yy_get_next_buffer+0x534>
   119d8:	add	r0, pc, r0
   119dc:	bl	11b78 <yy_fatal_error>
   119e0:	ldr	r0, [pc, #208]	; 11ab8 <yy_get_next_buffer+0x538>
   119e4:	add	r0, pc, r0
   119e8:	bl	11b78 <yy_fatal_error>
   119ec:	ldr	r0, [pc, #200]	; 11abc <yy_get_next_buffer+0x53c>
   119f0:	add	r0, pc, r0
   119f4:	bl	11b78 <yy_fatal_error>
   119f8:	.word	0x0001f564
   119fc:	.word	0x0001f558
   11a00:	.word	0x0001f560
   11a04:	.word	0x0001f540
   11a08:	.word	0x0001f588
   11a0c:	.word	0x0001f4f4
   11a10:	.word	0x0001f49c
   11a14:	.word	0x0001f490
   11a18:	.word	0x0001f484
   11a1c:	.word	0x0000d6c2
   11a20:	.word	0x0001f470
   11a24:	.word	0x0001f41c
   11a28:	.word	0x0001f410
   11a2c:	.word	0x0001f3f0
   11a30:	.word	0x0001f3e4
   11a34:	.word	0x0001f3d4
   11a38:	.word	0x0001f3a0
   11a3c:	.word	0x0001f3a0
   11a40:	.word	0x0001f394
   11a44:	.word	0x0001f364
   11a48:	.word	0x0001f358
   11a4c:	.word	0x0001f268
   11a50:	.word	0x0001f268
   11a54:	.word	0x0001f25c
   11a58:	.word	0x0001f268
   11a5c:	.word	0x0001f258
   11a60:	.word	0x0001f1f4
   11a64:	.word	0x0001f32c
   11a68:	.word	0x0001f320
   11a6c:	.word	0x0001f2f4
   11a70:	.word	0x0001f30c
   11a74:	.word	0x0001f2cc
   11a78:	.word	0x0001f2a8
   11a7c:	.word	0x0001f2b4
   11a80:	.word	0x0001f2a8
   11a84:	.word	0x0001f280
   11a88:	.word	0x0001f22c
   11a8c:	.word	0x0001f220
   11a90:	.word	0x0001f210
   11a94:	.word	0x0001f1f0
   11a98:	.word	0x0001f1e4
   11a9c:	.word	0x0001f1c0
   11aa0:	.word	0x0001f1b4
   11aa4:	.word	0x0001f1a4
   11aa8:	.word	0x0001f180
   11aac:	.word	0x0001f174
   11ab0:	.word	0x0001f1a4
   11ab4:	.word	0x0000d67e
   11ab8:	.word	0x0000d6d6
   11abc:	.word	0x0000d6e7

00011ac0 <sfbpf_wrap>:
   11ac0:	mov	r0, #1
   11ac4:	bx	lr

00011ac8 <sfbpf_restart>:
   11ac8:	push	{r4, sl, fp, lr}
   11acc:	add	fp, sp, #8
   11ad0:	mov	r4, r0
   11ad4:	ldr	r0, [pc, #128]	; 11b5c <sfbpf_restart+0x94>
   11ad8:	ldr	r0, [pc, r0]
   11adc:	cmp	r0, #0
   11ae0:	beq	11b10 <sfbpf_restart+0x48>
   11ae4:	ldr	r1, [pc, #116]	; 11b60 <sfbpf_restart+0x98>
   11ae8:	ldr	r1, [pc, r1]
   11aec:	ldr	r0, [r0, r1, lsl #2]
   11af0:	cmp	r0, #0
   11af4:	beq	11b10 <sfbpf_restart+0x48>
   11af8:	ldr	r1, [pc, #112]	; 11b70 <sfbpf_restart+0xa8>
   11afc:	ldr	r1, [pc, r1]
   11b00:	cmp	r1, #0
   11b04:	bne	11b40 <sfbpf_restart+0x78>
   11b08:	mov	r0, #0
   11b0c:	b	11b4c <sfbpf_restart+0x84>
   11b10:	bl	110b4 <sfbpf_ensure_buffer_stack>
   11b14:	ldr	r0, [pc, #72]	; 11b64 <sfbpf_restart+0x9c>
   11b18:	ldr	r0, [pc, r0]
   11b1c:	mov	r1, #16384	; 0x4000
   11b20:	bl	111a4 <sfbpf__create_buffer>
   11b24:	ldr	r1, [pc, #60]	; 11b68 <sfbpf_restart+0xa0>
   11b28:	ldr	r1, [pc, r1]
   11b2c:	ldr	r2, [pc, #56]	; 11b6c <sfbpf_restart+0xa4>
   11b30:	ldr	r2, [pc, r2]
   11b34:	str	r0, [r1, r2, lsl #2]
   11b38:	cmp	r1, #0
   11b3c:	beq	11b08 <sfbpf_restart+0x40>
   11b40:	ldr	r0, [pc, #44]	; 11b74 <sfbpf_restart+0xac>
   11b44:	ldr	r0, [pc, r0]
   11b48:	ldr	r0, [r1, r0, lsl #2]
   11b4c:	mov	r1, r4
   11b50:	bl	11bac <sfbpf__init_buffer>
   11b54:	pop	{r4, sl, fp, lr}
   11b58:	b	1120c <sfbpf__load_buffer_state>
   11b5c:	.word	0x0001f018
   11b60:	.word	0x0001f00c
   11b64:	.word	0x0001efc4
   11b68:	.word	0x0001efc8
   11b6c:	.word	0x0001efc4
   11b70:	.word	0x0001eff4
   11b74:	.word	0x0001efb0

00011b78 <yy_fatal_error>:
   11b78:	push	{fp, lr}
   11b7c:	mov	fp, sp
   11b80:	mov	r2, r0
   11b84:	ldr	r0, [pc, #24]	; 11ba4 <yy_fatal_error+0x2c>
   11b88:	ldr	r0, [pc, r0]
   11b8c:	ldr	r0, [r0]
   11b90:	ldr	r1, [pc, #16]	; 11ba8 <yy_fatal_error+0x30>
   11b94:	add	r1, pc, r1
   11b98:	bl	f1c <fprintf@plt>
   11b9c:	mov	r0, #2
   11ba0:	bl	ef8 <exit@plt>
   11ba4:	.word	0x0001e524
   11ba8:	.word	0x0000072d

00011bac <sfbpf__init_buffer>:
   11bac:	push	{r4, r5, r6, r7, fp, lr}
   11bb0:	add	fp, sp, #16
   11bb4:	mov	r6, r1
   11bb8:	mov	r4, r0
   11bbc:	bl	f28 <__errno_location@plt>
   11bc0:	mov	r5, r0
   11bc4:	ldr	r7, [r0]
   11bc8:	mov	r0, r4
   11bcc:	bl	11d94 <sfbpf__flush_buffer>
   11bd0:	mov	r0, #1
   11bd4:	str	r0, [r4, #40]	; 0x28
   11bd8:	str	r6, [r4]
   11bdc:	ldr	r0, [pc, #100]	; 11c48 <sfbpf__init_buffer+0x9c>
   11be0:	ldr	r0, [pc, r0]
   11be4:	cmp	r0, #0
   11be8:	beq	11bfc <sfbpf__init_buffer+0x50>
   11bec:	ldr	r1, [pc, #88]	; 11c4c <sfbpf__init_buffer+0xa0>
   11bf0:	ldr	r1, [pc, r1]
   11bf4:	ldr	r0, [r0, r1, lsl #2]
   11bf8:	b	11c00 <sfbpf__init_buffer+0x54>
   11bfc:	mov	r0, #0
   11c00:	cmp	r0, r4
   11c04:	movne	r0, #0
   11c08:	movne	r1, #1
   11c0c:	strne	r1, [r4, #32]
   11c10:	strne	r0, [r4, #36]	; 0x24
   11c14:	cmp	r6, #0
   11c18:	beq	11c38 <sfbpf__init_buffer+0x8c>
   11c1c:	mov	r0, r6
   11c20:	bl	f64 <fileno@plt>
   11c24:	bl	fb8 <isatty@plt>
   11c28:	mov	r1, #0
   11c2c:	cmp	r0, #0
   11c30:	movwgt	r1, #1
   11c34:	b	11c3c <sfbpf__init_buffer+0x90>
   11c38:	mov	r1, #0
   11c3c:	str	r1, [r4, #24]
   11c40:	str	r7, [r5]
   11c44:	pop	{r4, r5, r6, r7, fp, pc}
   11c48:	.word	0x0001ef10
   11c4c:	.word	0x0001ef04

00011c50 <sfbpf__switch_to_buffer>:
   11c50:	push	{r4, sl, fp, lr}
   11c54:	add	fp, sp, #8
   11c58:	mov	r4, r0
   11c5c:	bl	110b4 <sfbpf_ensure_buffer_stack>
   11c60:	ldr	r0, [pc, #132]	; 11cec <sfbpf__switch_to_buffer+0x9c>
   11c64:	ldr	r0, [pc, r0]
   11c68:	cmp	r0, #0
   11c6c:	beq	11c80 <sfbpf__switch_to_buffer+0x30>
   11c70:	ldr	r1, [pc, #120]	; 11cf0 <sfbpf__switch_to_buffer+0xa0>
   11c74:	ldr	r1, [pc, r1]
   11c78:	ldr	r1, [r0, r1, lsl #2]
   11c7c:	b	11c84 <sfbpf__switch_to_buffer+0x34>
   11c80:	mov	r1, #0
   11c84:	cmp	r1, r4
   11c88:	popeq	{r4, sl, fp, pc}
   11c8c:	cmp	r0, #0
   11c90:	beq	11cd8 <sfbpf__switch_to_buffer+0x88>
   11c94:	ldr	r1, [pc, #88]	; 11cf4 <sfbpf__switch_to_buffer+0xa4>
   11c98:	ldr	r1, [pc, r1]
   11c9c:	ldr	r2, [r0, r1, lsl #2]
   11ca0:	cmp	r2, #0
   11ca4:	beq	11cd8 <sfbpf__switch_to_buffer+0x88>
   11ca8:	ldr	r2, [pc, #72]	; 11cf8 <sfbpf__switch_to_buffer+0xa8>
   11cac:	add	r2, pc, r2
   11cb0:	ldrb	r2, [r2]
   11cb4:	ldr	r3, [pc, #64]	; 11cfc <sfbpf__switch_to_buffer+0xac>
   11cb8:	ldr	r3, [pc, r3]
   11cbc:	strb	r2, [r3]
   11cc0:	ldr	r2, [r0, r1, lsl #2]
   11cc4:	str	r3, [r2, #8]
   11cc8:	ldr	r1, [r0, r1, lsl #2]
   11ccc:	ldr	r2, [pc, #44]	; 11d00 <sfbpf__switch_to_buffer+0xb0>
   11cd0:	ldr	r2, [pc, r2]
   11cd4:	str	r2, [r1, #16]
   11cd8:	ldr	r1, [pc, #36]	; 11d04 <sfbpf__switch_to_buffer+0xb4>
   11cdc:	ldr	r1, [pc, r1]
   11ce0:	str	r4, [r0, r1, lsl #2]
   11ce4:	pop	{r4, sl, fp, lr}
   11ce8:	b	1120c <sfbpf__load_buffer_state>
   11cec:	.word	0x0001ee8c
   11cf0:	.word	0x0001ee80
   11cf4:	.word	0x0001ee5c
   11cf8:	.word	0x0001ee50
   11cfc:	.word	0x0001ee40
   11d00:	.word	0x0001ee38
   11d04:	.word	0x0001ee18

00011d08 <sfbpf_alloc>:
   11d08:	b	ed4 <malloc@plt>

00011d0c <sfbpf__delete_buffer>:
   11d0c:	cmp	r0, #0
   11d10:	bxeq	lr
   11d14:	push	{r4, sl, fp, lr}
   11d18:	add	fp, sp, #8
   11d1c:	mov	r4, r0
   11d20:	ldr	r0, [pc, #92]	; 11d84 <sfbpf__delete_buffer+0x78>
   11d24:	ldr	r0, [pc, r0]
   11d28:	cmp	r0, #0
   11d2c:	beq	11d74 <sfbpf__delete_buffer+0x68>
   11d30:	ldr	r1, [pc, #80]	; 11d88 <sfbpf__delete_buffer+0x7c>
   11d34:	ldr	r1, [pc, r1]
   11d38:	ldr	r1, [r0, r1, lsl #2]
   11d3c:	cmp	r1, r4
   11d40:	bne	11d54 <sfbpf__delete_buffer+0x48>
   11d44:	ldr	r1, [pc, #64]	; 11d8c <sfbpf__delete_buffer+0x80>
   11d48:	ldr	r1, [pc, r1]
   11d4c:	mov	r2, #0
   11d50:	str	r2, [r0, r1, lsl #2]
   11d54:	ldr	r0, [r4, #20]
   11d58:	cmp	r0, #0
   11d5c:	beq	11d68 <sfbpf__delete_buffer+0x5c>
   11d60:	ldr	r0, [r4, #4]
   11d64:	bl	11d90 <sfbpf_free>
   11d68:	mov	r0, r4
   11d6c:	pop	{r4, sl, fp, lr}
   11d70:	b	11d90 <sfbpf_free>
   11d74:	mov	r1, #0
   11d78:	cmp	r1, r4
   11d7c:	bne	11d54 <sfbpf__delete_buffer+0x48>
   11d80:	b	11d44 <sfbpf__delete_buffer+0x38>
   11d84:	.word	0x0001edcc
   11d88:	.word	0x0001edc0
   11d8c:	.word	0x0001edac

00011d90 <sfbpf_free>:
   11d90:	b	e5c <free@plt>

00011d94 <sfbpf__flush_buffer>:
   11d94:	cmp	r0, #0
   11d98:	bxeq	lr
   11d9c:	mov	r1, #0
   11da0:	str	r1, [r0, #16]
   11da4:	ldr	r2, [r0, #4]
   11da8:	strb	r1, [r2]
   11dac:	ldr	r2, [r0, #4]
   11db0:	strb	r1, [r2, #1]
   11db4:	str	r1, [r0, #44]	; 0x2c
   11db8:	mov	r2, #1
   11dbc:	str	r2, [r0, #28]
   11dc0:	ldr	r2, [r0, #4]
   11dc4:	str	r2, [r0, #8]
   11dc8:	ldr	r2, [pc, #36]	; 11df4 <sfbpf__flush_buffer+0x60>
   11dcc:	ldr	r2, [pc, r2]
   11dd0:	cmp	r2, #0
   11dd4:	beq	11de4 <sfbpf__flush_buffer+0x50>
   11dd8:	ldr	r1, [pc, #24]	; 11df8 <sfbpf__flush_buffer+0x64>
   11ddc:	ldr	r1, [pc, r1]
   11de0:	ldr	r1, [r2, r1, lsl #2]
   11de4:	cmp	r1, r0
   11de8:	beq	11df0 <sfbpf__flush_buffer+0x5c>
   11dec:	bx	lr
   11df0:	b	1120c <sfbpf__load_buffer_state>
   11df4:	.word	0x0001ed24
   11df8:	.word	0x0001ed18

00011dfc <sfbpf_push_buffer_state>:
   11dfc:	cmp	r0, #0
   11e00:	bxeq	lr
   11e04:	push	{r4, sl, fp, lr}
   11e08:	add	fp, sp, #8
   11e0c:	mov	r4, r0
   11e10:	bl	110b4 <sfbpf_ensure_buffer_stack>
   11e14:	ldr	r0, [pc, #132]	; 11ea0 <sfbpf_push_buffer_state+0xa4>
   11e18:	ldr	r0, [pc, r0]
   11e1c:	cmp	r0, #0
   11e20:	beq	11e8c <sfbpf_push_buffer_state+0x90>
   11e24:	ldr	r1, [pc, #120]	; 11ea4 <sfbpf_push_buffer_state+0xa8>
   11e28:	ldr	r1, [pc, r1]
   11e2c:	ldr	r2, [r0, r1, lsl #2]
   11e30:	cmp	r2, #0
   11e34:	beq	11e68 <sfbpf_push_buffer_state+0x6c>
   11e38:	ldr	r2, [pc, #104]	; 11ea8 <sfbpf_push_buffer_state+0xac>
   11e3c:	add	r2, pc, r2
   11e40:	ldrb	r2, [r2]
   11e44:	ldr	r3, [pc, #96]	; 11eac <sfbpf_push_buffer_state+0xb0>
   11e48:	ldr	r3, [pc, r3]
   11e4c:	strb	r2, [r3]
   11e50:	ldr	r2, [r0, r1, lsl #2]
   11e54:	str	r3, [r2, #8]
   11e58:	ldr	r1, [r0, r1, lsl #2]
   11e5c:	ldr	r2, [pc, #76]	; 11eb0 <sfbpf_push_buffer_state+0xb4>
   11e60:	ldr	r2, [pc, r2]
   11e64:	str	r2, [r1, #16]
   11e68:	ldr	r1, [pc, #68]	; 11eb4 <sfbpf_push_buffer_state+0xb8>
   11e6c:	ldr	r1, [pc, r1]
   11e70:	ldr	r2, [r0, r1, lsl #2]
   11e74:	cmp	r2, #0
   11e78:	beq	11e8c <sfbpf_push_buffer_state+0x90>
   11e7c:	add	r1, r1, #1
   11e80:	ldr	r2, [pc, #48]	; 11eb8 <sfbpf_push_buffer_state+0xbc>
   11e84:	add	r2, pc, r2
   11e88:	str	r1, [r2]
   11e8c:	ldr	r1, [pc, #40]	; 11ebc <sfbpf_push_buffer_state+0xc0>
   11e90:	ldr	r1, [pc, r1]
   11e94:	str	r4, [r0, r1, lsl #2]
   11e98:	pop	{r4, sl, fp, lr}
   11e9c:	b	1120c <sfbpf__load_buffer_state>
   11ea0:	.word	0x0001ecd8
   11ea4:	.word	0x0001eccc
   11ea8:	.word	0x0001ecc0
   11eac:	.word	0x0001ecb0
   11eb0:	.word	0x0001eca8
   11eb4:	.word	0x0001ec88
   11eb8:	.word	0x0001ec70
   11ebc:	.word	0x0001ec64

00011ec0 <sfbpf_pop_buffer_state>:
   11ec0:	push	{fp, lr}
   11ec4:	mov	fp, sp
   11ec8:	ldr	r0, [pc, #120]	; 11f48 <sfbpf_pop_buffer_state+0x88>
   11ecc:	ldr	r0, [pc, r0]
   11ed0:	cmp	r0, #0
   11ed4:	beq	11f44 <sfbpf_pop_buffer_state+0x84>
   11ed8:	ldr	r1, [pc, #108]	; 11f4c <sfbpf_pop_buffer_state+0x8c>
   11edc:	ldr	r1, [pc, r1]
   11ee0:	ldr	r0, [r0, r1, lsl #2]
   11ee4:	cmp	r0, #0
   11ee8:	beq	11f44 <sfbpf_pop_buffer_state+0x84>
   11eec:	bl	11d0c <sfbpf__delete_buffer>
   11ef0:	ldr	r1, [pc, #88]	; 11f50 <sfbpf_pop_buffer_state+0x90>
   11ef4:	ldr	r1, [pc, r1]
   11ef8:	ldr	r0, [pc, #84]	; 11f54 <sfbpf_pop_buffer_state+0x94>
   11efc:	ldr	r0, [pc, r0]
   11f00:	mov	r2, #0
   11f04:	str	r2, [r0, r1, lsl #2]
   11f08:	cmp	r1, #0
   11f0c:	beq	11f20 <sfbpf_pop_buffer_state+0x60>
   11f10:	sub	r1, r1, #1
   11f14:	ldr	r2, [pc, #60]	; 11f58 <sfbpf_pop_buffer_state+0x98>
   11f18:	add	r2, pc, r2
   11f1c:	str	r1, [r2]
   11f20:	cmp	r0, #0
   11f24:	popeq	{fp, pc}
   11f28:	ldr	r1, [pc, #44]	; 11f5c <sfbpf_pop_buffer_state+0x9c>
   11f2c:	ldr	r1, [pc, r1]
   11f30:	ldr	r0, [r0, r1, lsl #2]
   11f34:	cmp	r0, #0
   11f38:	beq	11f44 <sfbpf_pop_buffer_state+0x84>
   11f3c:	pop	{fp, lr}
   11f40:	b	1120c <sfbpf__load_buffer_state>
   11f44:	pop	{fp, pc}
   11f48:	.word	0x0001ec24
   11f4c:	.word	0x0001ec18
   11f50:	.word	0x0001ec00
   11f54:	.word	0x0001ebf4
   11f58:	.word	0x0001ebdc
   11f5c:	.word	0x0001ebc8

00011f60 <sfbpf__scan_buffer>:
   11f60:	push	{r4, r5, r6, sl, fp, lr}
   11f64:	add	fp, sp, #16
   11f68:	mov	r4, #0
   11f6c:	cmp	r1, #2
   11f70:	bcc	11f98 <sfbpf__scan_buffer+0x38>
   11f74:	mov	r5, r0
   11f78:	sub	r6, r1, #2
   11f7c:	ldrb	r0, [r0, r6]
   11f80:	cmp	r0, #0
   11f84:	bne	11f98 <sfbpf__scan_buffer+0x38>
   11f88:	add	r0, r1, r5
   11f8c:	ldrb	r0, [r0, #-1]
   11f90:	cmp	r0, #0
   11f94:	beq	11fa0 <sfbpf__scan_buffer+0x40>
   11f98:	mov	r0, r4
   11f9c:	pop	{r4, r5, r6, sl, fp, pc}
   11fa0:	mov	r0, #48	; 0x30
   11fa4:	bl	11d08 <sfbpf_alloc>
   11fa8:	cmp	r0, #0
   11fac:	beq	11ff0 <sfbpf__scan_buffer+0x90>
   11fb0:	mov	r4, r0
   11fb4:	mov	r0, #0
   11fb8:	str	r0, [r4, #40]	; 0x28
   11fbc:	str	r0, [r4, #44]	; 0x2c
   11fc0:	mov	r1, #1
   11fc4:	stm	r4, {r0, r5}
   11fc8:	str	r5, [r4, #8]
   11fcc:	str	r6, [r4, #12]
   11fd0:	str	r6, [r4, #16]
   11fd4:	str	r0, [r4, #20]
   11fd8:	str	r0, [r4, #24]
   11fdc:	str	r1, [r4, #28]
   11fe0:	mov	r0, r4
   11fe4:	bl	11c50 <sfbpf__switch_to_buffer>
   11fe8:	mov	r0, r4
   11fec:	pop	{r4, r5, r6, sl, fp, pc}
   11ff0:	ldr	r0, [pc, #4]	; 11ffc <sfbpf__scan_buffer+0x9c>
   11ff4:	add	r0, pc, r0
   11ff8:	bl	11b78 <yy_fatal_error>
   11ffc:	.word	0x0000cff1

00012000 <sfbpf__scan_string>:
   12000:	push	{r4, sl, fp, lr}
   12004:	add	fp, sp, #8
   12008:	mov	r4, r0
   1200c:	bl	f04 <strlen@plt>
   12010:	mov	r1, r0
   12014:	mov	r0, r4
   12018:	pop	{r4, sl, fp, lr}
   1201c:	b	12020 <sfbpf__scan_bytes>

00012020 <sfbpf__scan_bytes>:
   12020:	push	{r4, r5, r6, r7, fp, lr}
   12024:	add	fp, sp, #16
   12028:	mov	r5, r1
   1202c:	mov	r7, r0
   12030:	add	r4, r1, #2
   12034:	mov	r0, r4
   12038:	bl	11d08 <sfbpf_alloc>
   1203c:	cmp	r0, #0
   12040:	beq	12094 <sfbpf__scan_bytes+0x74>
   12044:	mov	r6, r0
   12048:	cmp	r5, #0
   1204c:	ble	12060 <sfbpf__scan_bytes+0x40>
   12050:	mov	r0, r6
   12054:	mov	r1, r7
   12058:	mov	r2, r5
   1205c:	bl	e80 <memcpy@plt>
   12060:	add	r0, r6, r5
   12064:	mov	r1, #0
   12068:	strh	r1, [r0]
   1206c:	mov	r0, r6
   12070:	mov	r1, r4
   12074:	bl	11f60 <sfbpf__scan_buffer>
   12078:	cmp	r0, #0
   1207c:	movne	r1, #1
   12080:	strne	r1, [r0, #20]
   12084:	popne	{r4, r5, r6, r7, fp, pc}
   12088:	ldr	r0, [pc, #20]	; 120a4 <sfbpf__scan_bytes+0x84>
   1208c:	add	r0, pc, r0
   12090:	bl	11b78 <yy_fatal_error>
   12094:	ldr	r0, [pc, #4]	; 120a0 <sfbpf__scan_bytes+0x80>
   12098:	add	r0, pc, r0
   1209c:	bl	11b78 <yy_fatal_error>
   120a0:	.word	0x0000cf77
   120a4:	.word	0x0000cfac

000120a8 <sfbpf_get_debug>:
   120a8:	ldr	r0, [pc, #4]	; 120b4 <sfbpf_get_debug+0xc>
   120ac:	ldr	r0, [pc, r0]
   120b0:	bx	lr
   120b4:	.word	0x0001ea38

000120b8 <sfbpf_set_debug>:
   120b8:	ldr	r1, [pc, #8]	; 120c8 <sfbpf_set_debug+0x10>
   120bc:	add	r1, pc, r1
   120c0:	str	r0, [r1]
   120c4:	bx	lr
   120c8:	.word	0x0001ea28

000120cc <sfbpf_lex_destroy>:
   120cc:	push	{r4, r5, fp, lr}
   120d0:	add	fp, sp, #8
   120d4:	mov	r5, #0
   120d8:	ldr	r0, [pc, #132]	; 12164 <sfbpf_lex_destroy+0x98>
   120dc:	ldr	r0, [pc, r0]
   120e0:	cmp	r0, #0
   120e4:	mov	r4, #0
   120e8:	beq	12144 <sfbpf_lex_destroy+0x78>
   120ec:	mov	r4, #0
   120f0:	ldr	r1, [pc, #112]	; 12168 <sfbpf_lex_destroy+0x9c>
   120f4:	ldr	r1, [pc, r1]
   120f8:	ldr	r1, [r0, r1, lsl #2]
   120fc:	cmp	r1, #0
   12100:	beq	12140 <sfbpf_lex_destroy+0x74>
   12104:	ldr	r1, [pc, #96]	; 1216c <sfbpf_lex_destroy+0xa0>
   12108:	ldr	r1, [pc, r1]
   1210c:	ldr	r0, [r0, r1, lsl #2]
   12110:	bl	11d0c <sfbpf__delete_buffer>
   12114:	ldr	r0, [pc, #84]	; 12170 <sfbpf_lex_destroy+0xa4>
   12118:	ldr	r0, [pc, r0]
   1211c:	ldr	r1, [pc, #80]	; 12174 <sfbpf_lex_destroy+0xa8>
   12120:	ldr	r1, [pc, r1]
   12124:	str	r4, [r1, r0, lsl #2]
   12128:	bl	11ec0 <sfbpf_pop_buffer_state>
   1212c:	ldr	r0, [pc, #68]	; 12178 <sfbpf_lex_destroy+0xac>
   12130:	ldr	r0, [pc, r0]
   12134:	cmp	r0, #0
   12138:	bne	120f0 <sfbpf_lex_destroy+0x24>
   1213c:	b	12144 <sfbpf_lex_destroy+0x78>
   12140:	mov	r4, r0
   12144:	mov	r0, r4
   12148:	bl	11d90 <sfbpf_free>
   1214c:	ldr	r0, [pc, #40]	; 1217c <sfbpf_lex_destroy+0xb0>
   12150:	add	r0, pc, r0
   12154:	str	r5, [r0]
   12158:	bl	12180 <yy_init_globals>
   1215c:	mov	r0, #0
   12160:	pop	{r4, r5, fp, pc}
   12164:	.word	0x0001ea14
   12168:	.word	0x0001ea00
   1216c:	.word	0x0001e9ec
   12170:	.word	0x0001e9dc
   12174:	.word	0x0001e9d0
   12178:	.word	0x0001e9c0
   1217c:	.word	0x0001e9a0

00012180 <yy_init_globals>:
   12180:	ldr	r0, [pc, #96]	; 121e8 <yy_init_globals+0x68>
   12184:	add	r0, pc, r0
   12188:	mov	r1, #0
   1218c:	str	r1, [r0]
   12190:	ldr	r0, [pc, #84]	; 121ec <yy_init_globals+0x6c>
   12194:	add	r0, pc, r0
   12198:	str	r1, [r0]
   1219c:	ldr	r0, [pc, #76]	; 121f0 <yy_init_globals+0x70>
   121a0:	add	r0, pc, r0
   121a4:	str	r1, [r0]
   121a8:	ldr	r0, [pc, #68]	; 121f4 <yy_init_globals+0x74>
   121ac:	add	r0, pc, r0
   121b0:	str	r1, [r0]
   121b4:	ldr	r0, [pc, #60]	; 121f8 <yy_init_globals+0x78>
   121b8:	add	r0, pc, r0
   121bc:	strb	r1, [r0]
   121c0:	ldr	r0, [pc, #52]	; 121fc <yy_init_globals+0x7c>
   121c4:	add	r0, pc, r0
   121c8:	strb	r1, [r0]
   121cc:	ldr	r0, [pc, #44]	; 12200 <yy_init_globals+0x80>
   121d0:	add	r0, pc, r0
   121d4:	str	r1, [r0]
   121d8:	ldr	r0, [pc, #36]	; 12204 <yy_init_globals+0x84>
   121dc:	add	r0, pc, r0
   121e0:	str	r1, [r0]
   121e4:	bx	lr
   121e8:	.word	0x0001e970
   121ec:	.word	0x0001e95c
   121f0:	.word	0x0001e970
   121f4:	.word	0x0001e94c
   121f8:	.word	0x0001e930
   121fc:	.word	0x0001e928
   12200:	.word	0x0001e90c
   12204:	.word	0x0001e904

00012208 <sfbpf_realloc>:
   12208:	b	ea4 <realloc@plt>

0001220c <sf_lex_init>:
   1220c:	push	{fp, lr}
   12210:	mov	fp, sp
   12214:	bl	12000 <sfbpf__scan_string>
   12218:	ldr	r1, [pc, #8]	; 12228 <sf_lex_init+0x1c>
   1221c:	add	r1, pc, r1
   12220:	str	r0, [r1]
   12224:	pop	{fp, pc}
   12228:	.word	0x0001e8f0

0001222c <sf_lex_cleanup>:
   1222c:	push	{fp, lr}
   12230:	mov	fp, sp
   12234:	ldr	r0, [pc, #28]	; 12258 <sf_lex_cleanup+0x2c>
   12238:	ldr	r0, [pc, r0]
   1223c:	cmp	r0, #0
   12240:	blne	11d0c <sfbpf__delete_buffer>
   12244:	ldr	r0, [pc, #16]	; 1225c <sf_lex_cleanup+0x30>
   12248:	add	r0, pc, r0
   1224c:	mov	r1, #0
   12250:	str	r1, [r0]
   12254:	pop	{fp, pc}
   12258:	.word	0x0001e8d4
   1225c:	.word	0x0001e8c4

00012260 <xdtoi>:
   12260:	push	{r4, sl, fp, lr}
   12264:	add	fp, sp, #8
   12268:	mov	r4, r0
   1226c:	bl	eec <__ctype_b_loc@plt>
   12270:	ldr	r0, [r0]
   12274:	add	r0, r0, r4, lsl #1
   12278:	ldrh	r1, [r0]
   1227c:	mvn	r0, #47	; 0x2f
   12280:	tst	r1, #2048	; 0x800
   12284:	bne	12294 <xdtoi+0x34>
   12288:	mvn	r0, #86	; 0x56
   1228c:	tst	r1, #512	; 0x200
   12290:	mvneq	r0, #54	; 0x36
   12294:	add	r0, r0, r4
   12298:	pop	{r4, sl, fp, pc}

Disassembly of section .fini:

0001229c <_fini>:
   1229c:	push	{r3, lr}
   122a0:	pop	{r3, pc}
