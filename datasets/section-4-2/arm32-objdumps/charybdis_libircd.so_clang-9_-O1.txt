
../repos/charybdis/ircd/.libs/libircd.so:     file format elf32-littlearm


Disassembly of section .init:

0000cf30 <_init>:
    cf30:	push	{r3, lr}
    cf34:	bl	e820 <call_weak_fn>
    cf38:	pop	{r3, pc}

Disassembly of section .plt:

0000cf3c <.plt>:
    cf3c:	push	{lr}		; (str lr, [sp, #-4]!)
    cf40:	ldr	lr, [pc, #4]	; cf4c <.plt+0x10>
    cf44:	add	lr, pc, lr
    cf48:	ldr	pc, [lr, #8]!
    cf4c:	.word	0x0004d0b4

0000cf50 <rb_inet_ntop_sock@plt>:
    cf50:	add	ip, pc, #0, 12
    cf54:	add	ip, ip, #315392	; 0x4d000
    cf58:	ldr	pc, [ip, #180]!	; 0xb4

0000cf5c <sendto_channel_local@plt>:
    cf5c:	add	ip, pc, #0, 12
    cf60:	add	ip, ip, #315392	; 0x4d000
    cf64:	ldr	pc, [ip, #172]!	; 0xac

0000cf68 <rb_setenv@plt>:
    cf68:	add	ip, pc, #0, 12
    cf6c:	add	ip, ip, #315392	; 0x4d000
    cf70:	ldr	pc, [ip, #164]!	; 0xa4

0000cf74 <rb_patricia_remove@plt>:
    cf74:	add	ip, pc, #0, 12
    cf78:	add	ip, ip, #315392	; 0x4d000
    cf7c:	ldr	pc, [ip, #156]!	; 0x9c

0000cf80 <yy_switch_to_buffer@plt>:
    cf80:	add	ip, pc, #0, 12
    cf84:	add	ip, ip, #315392	; 0x4d000
    cf88:	ldr	pc, [ip, #148]!	; 0x94

0000cf8c <authd_initiate_client@plt>:
    cf8c:	add	ip, pc, #0, 12
    cf90:	add	ip, ip, #315392	; 0x4d000
    cf94:	ldr	pc, [ip, #140]!	; 0x8c

0000cf98 <lt_dlclose@plt>:
    cf98:	add	ip, pc, #0, 12
    cf9c:	add	ip, ip, #315392	; 0x4d000
    cfa0:	ldr	pc, [ip, #132]!	; 0x84

0000cfa4 <calloc@plt>:
    cfa4:	add	ip, pc, #0, 12
    cfa8:	add	ip, ip, #315392	; 0x4d000
    cfac:	ldr	pc, [ip, #124]!	; 0x7c

0000cfb0 <fputs_unlocked@plt>:
    cfb0:	add	ip, pc, #0, 12
    cfb4:	add	ip, ip, #315392	; 0x4d000
    cfb8:	ldr	pc, [ip, #116]!	; 0x74

0000cfbc <make_conf@plt>:
    cfbc:	add	ip, pc, #0, 12
    cfc0:	add	ip, ip, #315392	; 0x4d000
    cfc4:	ldr	pc, [ip, #108]!	; 0x6c

0000cfc8 <strstr@plt>:
    cfc8:	add	ip, pc, #0, 12
    cfcc:	add	ip, ip, #315392	; 0x4d000
    cfd0:	ldr	pc, [ip, #100]!	; 0x64

0000cfd4 <mod_del_cmd@plt>:
    cfd4:	add	ip, pc, #0, 12
    cfd8:	add	ip, ip, #315392	; 0x4d000
    cfdc:	ldr	pc, [ip, #92]!	; 0x5c

0000cfe0 <rb_listen@plt>:
    cfe0:	add	ip, pc, #0, 12
    cfe4:	add	ip, ip, #315392	; 0x4d000
    cfe8:	ldr	pc, [ip, #84]!	; 0x54

0000cfec <parse_netmask_strict@plt>:
    cfec:	add	ip, pc, #0, 12
    cff0:	add	ip, ip, #315392	; 0x4d000
    cff4:	ldr	pc, [ip, #76]!	; 0x4c

0000cff8 <_sendto_channel_local@plt>:
    cff8:	add	ip, pc, #0, 12
    cffc:	add	ip, ip, #315392	; 0x4d000
    d000:	ldr	pc, [ip, #68]!	; 0x44

0000d004 <get_client_name@plt>:
    d004:	add	ip, pc, #0, 12
    d008:	add	ip, ip, #315392	; 0x4d000
    d00c:	ldr	pc, [ip, #60]!	; 0x3c

0000d010 <get_user_ban_reason@plt>:
    d010:	add	ip, pc, #0, 12
    d014:	add	ip, ip, #315392	; 0x4d000
    d018:	ldr	pc, [ip, #52]!	; 0x34

0000d01c <find_channel_status@plt>:
    d01c:	add	ip, pc, #0, 12
    d020:	add	ip, ip, #315392	; 0x4d000
    d024:	ldr	pc, [ip, #44]!	; 0x2c

0000d028 <yyrestart@plt>:
    d028:	add	ip, pc, #0, 12
    d02c:	add	ip, ip, #315392	; 0x4d000
    d030:	ldr	pc, [ip, #36]!	; 0x24

0000d034 <comp_with_mask_sock@plt>:
    d034:	add	ip, pc, #0, 12
    d038:	add	ip, ip, #315392	; 0x4d000
    d03c:	ldr	pc, [ip, #28]!

0000d040 <throttle_add@plt>:
    d040:	add	ip, pc, #0, 12
    d044:	add	ip, ip, #315392	; 0x4d000
    d048:	ldr	pc, [ip, #20]!

0000d04c <show_ip_conf@plt>:
    d04c:	add	ip, pc, #0, 12
    d050:	add	ip, ip, #315392	; 0x4d000
    d054:	ldr	pc, [ip, #12]!

0000d058 <init_bandb@plt>:
    d058:	add	ip, pc, #0, 12
    d05c:	add	ip, ip, #315392	; 0x4d000
    d060:	ldr	pc, [ip, #4]!

0000d064 <load_help@plt>:
    d064:	add	ip, pc, #0, 12
    d068:	add	ip, ip, #76, 20	; 0x4c000
    d06c:	ldr	pc, [ip, #4092]!	; 0xffc

0000d070 <scache_get_name@plt>:
    d070:	add	ip, pc, #0, 12
    d074:	add	ip, ip, #76, 20	; 0x4c000
    d078:	ldr	pc, [ip, #4084]!	; 0xff4

0000d07c <rb_current_time@plt>:
    d07c:	add	ip, pc, #0, 12
    d080:	add	ip, ip, #76, 20	; 0x4c000
    d084:	ldr	pc, [ip, #4076]!	; 0xfec

0000d088 <add_to_resv_hash@plt>:
    d088:	add	ip, pc, #0, 12
    d08c:	add	ip, ip, #76, 20	; 0x4c000
    d090:	ldr	pc, [ip, #4068]!	; 0xfe4

0000d094 <rb_linebuf_parse@plt>:
    d094:	add	ip, pc, #0, 12
    d098:	add	ip, ip, #76, 20	; 0x4c000
    d09c:	ldr	pc, [ip, #4060]!	; 0xfdc

0000d0a0 <comp_with_mask@plt>:
    d0a0:	add	ip, pc, #0, 12
    d0a4:	add	ip, ip, #76, 20	; 0x4c000
    d0a8:	ldr	pc, [ip, #4052]!	; 0xfd4

0000d0ac <introduce_client@plt>:
    d0ac:	add	ip, pc, #0, 12
    d0b0:	add	ip, ip, #76, 20	; 0x4c000
    d0b4:	ldr	pc, [ip, #4044]!	; 0xfcc

0000d0b8 <sendto_match_servs@plt>:
    d0b8:	add	ip, pc, #0, 12
    d0bc:	add	ip, ip, #76, 20	; 0x4c000
    d0c0:	ldr	pc, [ip, #4036]!	; 0xfc4

0000d0c4 <strcmp@plt>:
    d0c4:	add	ip, pc, #0, 12
    d0c8:	add	ip, ip, #76, 20	; 0x4c000
    d0cc:	ldr	pc, [ip, #4028]!	; 0xfbc

0000d0d0 <add_to_id_hash@plt>:
    d0d0:	add	ip, pc, #0, 12
    d0d4:	add	ip, ip, #76, 20	; 0x4c000
    d0d8:	ldr	pc, [ip, #4020]!	; 0xfb4

0000d0dc <send_capabilities@plt>:
    d0dc:	add	ip, pc, #0, 12
    d0e0:	add	ip, ip, #76, 20	; 0x4c000
    d0e4:	ldr	pc, [ip, #4012]!	; 0xfac

0000d0e8 <rb_event_add@plt>:
    d0e8:	add	ip, pc, #0, 12
    d0ec:	add	ip, ip, #76, 20	; 0x4c000
    d0f0:	ldr	pc, [ip, #4004]!	; 0xfa4

0000d0f4 <__cxa_finalize@plt>:
    d0f4:	add	ip, pc, #0, 12
    d0f8:	add	ip, ip, #76, 20	; 0x4c000
    d0fc:	ldr	pc, [ip, #3996]!	; 0xf9c

0000d100 <add_id@plt>:
    d100:	add	ip, pc, #0, 12
    d104:	add	ip, ip, #76, 20	; 0x4c000
    d108:	ldr	pc, [ip, #3988]!	; 0xf94

0000d10c <inotice@plt>:
    d10c:	add	ip, pc, #0, 12
    d110:	add	ip, ip, #76, 20	; 0x4c000
    d114:	ldr	pc, [ip, #3980]!	; 0xf8c

0000d118 <strtol@plt>:
    d118:	add	ip, pc, #0, 12
    d11c:	add	ip, ip, #76, 20	; 0x4c000
    d120:	ldr	pc, [ip, #3972]!	; 0xf84

0000d124 <init_builtin_capabs@plt>:
    d124:	add	ip, pc, #0, 12
    d128:	add	ip, ip, #76, 20	; 0x4c000
    d12c:	ldr	pc, [ip, #3964]!	; 0xf7c

0000d130 <restart@plt>:
    d130:	add	ip, pc, #0, 12
    d134:	add	ip, ip, #76, 20	; 0x4c000
    d138:	ldr	pc, [ip, #3956]!	; 0xf74

0000d13c <mod_notify_clicaps@plt>:
    d13c:	add	ip, pc, #0, 12
    d140:	add	ip, ip, #76, 20	; 0x4c000
    d144:	ldr	pc, [ip, #3948]!	; 0xf6c

0000d148 <rb_helper_write@plt>:
    d148:	add	ip, pc, #0, 12
    d14c:	add	ip, ip, #76, 20	; 0x4c000
    d150:	ldr	pc, [ip, #3940]!	; 0xf64

0000d154 <mask_match@plt>:
    d154:	add	ip, pc, #0, 12
    d158:	add	ip, ip, #76, 20	; 0x4c000
    d15c:	ldr	pc, [ip, #3932]!	; 0xf5c

0000d160 <findmodule_byname@plt>:
    d160:	add	ip, pc, #0, 12
    d164:	add	ip, ip, #76, 20	; 0x4c000
    d168:	ldr	pc, [ip, #3924]!	; 0xf54

0000d16c <match_esc@plt>:
    d16c:	add	ip, pc, #0, 12
    d170:	add	ip, ip, #76, 20	; 0x4c000
    d174:	ldr	pc, [ip, #3916]!	; 0xf4c

0000d178 <construct_snobuf@plt>:
    d178:	add	ip, pc, #0, 12
    d17c:	add	ip, ip, #76, 20	; 0x4c000
    d180:	ldr	pc, [ip, #3908]!	; 0xf44

0000d184 <deref_conf@plt>:
    d184:	add	ip, pc, #0, 12
    d188:	add	ip, ip, #76, 20	; 0x4c000
    d18c:	ldr	pc, [ip, #3900]!	; 0xf3c

0000d190 <make_oper_conf@plt>:
    d190:	add	ip, pc, #0, 12
    d194:	add	ip, ip, #76, 20	; 0x4c000
    d198:	ldr	pc, [ip, #3892]!	; 0xf34

0000d19c <rb_helper_close@plt>:
    d19c:	add	ip, pc, #0, 12
    d1a0:	add	ip, ip, #76, 20	; 0x4c000
    d1a4:	ldr	pc, [ip, #3884]!	; 0xf2c

0000d1a8 <allocate_channel@plt>:
    d1a8:	add	ip, pc, #0, 12
    d1ac:	add	ip, ip, #76, 20	; 0x4c000
    d1b0:	ldr	pc, [ip, #3876]!	; 0xf24

0000d1b4 <rb_inet_ntop@plt>:
    d1b4:	add	ip, pc, #0, 12
    d1b8:	add	ip, ip, #76, 20	; 0x4c000
    d1bc:	ldr	pc, [ip, #3868]!	; 0xf1c

0000d1c0 <printf@plt>:
    d1c0:	add	ip, pc, #0, 12
    d1c4:	add	ip, ip, #76, 20	; 0x4c000
    d1c8:	ldr	pc, [ip, #3860]!	; 0xf14

0000d1cc <find_chasing@plt>:
    d1cc:	add	ip, pc, #0, 12
    d1d0:	add	ip, ip, #76, 20	; 0x4c000
    d1d4:	ldr	pc, [ip, #3852]!	; 0xf0c

0000d1d8 <start_ssld_connect@plt>:
    d1d8:	add	ip, pc, #0, 12
    d1dc:	add	ip, ip, #76, 20	; 0x4c000
    d1e0:	ldr	pc, [ip, #3844]!	; 0xf04

0000d1e4 <sendto_one@plt>:
    d1e4:	add	ip, pc, #0, 12
    d1e8:	add	ip, ip, #76, 20	; 0x4c000
    d1ec:	ldr	pc, [ip, #3836]!	; 0xefc

0000d1f0 <fopen@plt>:
    d1f0:	add	ip, pc, #0, 12
    d1f4:	add	ip, ip, #76, 20	; 0x4c000
    d1f8:	ldr	pc, [ip, #3828]!	; 0xef4

0000d1fc <init_modules@plt>:
    d1fc:	add	ip, pc, #0, 12
    d200:	add	ip, ip, #76, 20	; 0x4c000
    d204:	ldr	pc, [ip, #3820]!	; 0xeec

0000d208 <ssld_decrement_clicount@plt>:
    d208:	add	ip, pc, #0, 12
    d20c:	add	ip, ip, #76, 20	; 0x4c000
    d210:	ldr	pc, [ip, #3812]!	; 0xee4

0000d214 <read@plt>:
    d214:	add	ip, pc, #0, 12
    d218:	add	ip, ip, #76, 20	; 0x4c000
    d21c:	ldr	pc, [ip, #3804]!	; 0xedc

0000d220 <rb_event_addish@plt>:
    d220:	add	ip, pc, #0, 12
    d224:	add	ip, ip, #76, 20	; 0x4c000
    d228:	ldr	pc, [ip, #3796]!	; 0xed4

0000d22c <lt_dlopenext@plt>:
    d22c:	add	ip, pc, #0, 12
    d230:	add	ip, ip, #76, 20	; 0x4c000
    d234:	ldr	pc, [ip, #3788]!	; 0xecc

0000d238 <rb_setup_ssl_server@plt>:
    d238:	add	ip, pc, #0, 12
    d23c:	add	ip, ip, #76, 20	; 0x4c000
    d240:	ldr	pc, [ip, #3780]!	; 0xec4

0000d244 <init_main_logfile@plt>:
    d244:	add	ip, pc, #0, 12
    d248:	add	ip, ip, #76, 20	; 0x4c000
    d24c:	ldr	pc, [ip, #3772]!	; 0xebc

0000d250 <make_and_lookup_ip@plt>:
    d250:	add	ip, pc, #0, 12
    d254:	add	ip, ip, #76, 20	; 0x4c000
    d258:	ldr	pc, [ip, #3764]!	; 0xeb4

0000d25c <fflush@plt>:
    d25c:	add	ip, pc, #0, 12
    d260:	add	ip, ip, #76, 20	; 0x4c000
    d264:	ldr	pc, [ip, #3756]!	; 0xeac

0000d268 <close_listeners@plt>:
    d268:	add	ip, pc, #0, 12
    d26c:	add	ip, ip, #76, 20	; 0x4c000
    d270:	ldr	pc, [ip, #3748]!	; 0xea4

0000d274 <rb_dirname@plt>:
    d274:	add	ip, pc, #0, 12
    d278:	add	ip, ip, #76, 20	; 0x4c000
    d27c:	ldr	pc, [ip, #3740]!	; 0xe9c

0000d280 <detach_conf@plt>:
    d280:	add	ip, pc, #0, 12
    d284:	add	ip, ip, #76, 20	; 0x4c000
    d288:	ldr	pc, [ip, #3732]!	; 0xe94

0000d28c <rb_event_delete@plt>:
    d28c:	add	ip, pc, #0, 12
    d290:	add	ip, ip, #76, 20	; 0x4c000
    d294:	ldr	pc, [ip, #3724]!	; 0xe8c

0000d298 <client_release_connids@plt>:
    d298:	add	ip, pc, #0, 12
    d29c:	add	ip, ip, #76, 20	; 0x4c000
    d2a0:	ldr	pc, [ip, #3716]!	; 0xe84

0000d2a4 <lt_dlerror@plt>:
    d2a4:	add	ip, pc, #0, 12
    d2a8:	add	ip, ip, #76, 20	; 0x4c000
    d2ac:	ldr	pc, [ip, #3708]!	; 0xe7c

0000d2b0 <sigprocmask@plt>:
    d2b0:	add	ip, pc, #0, 12
    d2b4:	add	ip, ip, #76, 20	; 0x4c000
    d2b8:	ldr	pc, [ip, #3700]!	; 0xe74

0000d2bc <rb_connect_tcp@plt>:
    d2bc:	add	ip, pc, #0, 12
    d2c0:	add	ip, ip, #76, 20	; 0x4c000
    d2c4:	ldr	pc, [ip, #3692]!	; 0xe6c

0000d2c8 <user_welcome@plt>:
    d2c8:	add	ip, pc, #0, 12
    d2cc:	add	ip, ip, #76, 20	; 0x4c000
    d2d0:	ldr	pc, [ip, #3684]!	; 0xe64

0000d2d4 <rb_linebuf_attach@plt>:
    d2d4:	add	ip, pc, #0, 12
    d2d8:	add	ip, ip, #76, 20	; 0x4c000
    d2dc:	ldr	pc, [ip, #3676]!	; 0xe5c

0000d2e0 <init_ssld@plt>:
    d2e0:	add	ip, pc, #0, 12
    d2e4:	add	ip, ip, #76, 20	; 0x4c000
    d2e8:	ldr	pc, [ip, #3668]!	; 0xe54

0000d2ec <sendto_channel_local_with_capability@plt>:
    d2ec:	add	ip, pc, #0, 12
    d2f0:	add	ip, ip, #76, 20	; 0x4c000
    d2f4:	ldr	pc, [ip, #3660]!	; 0xe4c

0000d2f8 <find_conf_by_address@plt>:
    d2f8:	add	ip, pc, #0, 12
    d2fc:	add	ip, ip, #76, 20	; 0x4c000
    d300:	ldr	pc, [ip, #3652]!	; 0xe44

0000d304 <rb_setselect@plt>:
    d304:	add	ip, pc, #0, 12
    d308:	add	ip, ip, #76, 20	; 0x4c000
    d30c:	ldr	pc, [ip, #3644]!	; 0xe3c

0000d310 <matches_mask@plt>:
    d310:	add	ip, pc, #0, 12
    d314:	add	ip, ip, #76, 20	; 0x4c000
    d318:	ldr	pc, [ip, #3636]!	; 0xe34

0000d31c <capability_put_anonymous@plt>:
    d31c:	add	ip, pc, #0, 12
    d320:	add	ip, ip, #76, 20	; 0x4c000
    d324:	ldr	pc, [ip, #3628]!	; 0xe2c

0000d328 <free@plt>:
    d328:	add	ip, pc, #0, 12
    d32c:	add	ip, ip, #76, 20	; 0x4c000
    d330:	ldr	pc, [ip, #3620]!	; 0xe24

0000d334 <rb_connect_sockaddr@plt>:
    d334:	add	ip, pc, #0, 12
    d338:	add	ip, ip, #76, 20	; 0x4c000
    d33c:	ldr	pc, [ip, #3612]!	; 0xe1c

0000d340 <rb_strcasecmp@plt>:
    d340:	add	ip, pc, #0, 12
    d344:	add	ip, ip, #76, 20	; 0x4c000
    d348:	ldr	pc, [ip, #3604]!	; 0xe14

0000d34c <free_cachefile@plt>:
    d34c:	add	ip, pc, #0, 12
    d350:	add	ip, ip, #76, 20	; 0x4c000
    d354:	ldr	pc, [ip, #3596]!	; 0xe0c

0000d358 <check_channel_name@plt>:
    d358:	add	ip, pc, #0, 12
    d35c:	add	ip, ip, #76, 20	; 0x4c000
    d360:	ldr	pc, [ip, #3588]!	; 0xe04

0000d364 <dead_link@plt>:
    d364:	add	ip, pc, #0, 12
    d368:	add	ip, ip, #76, 20	; 0x4c000
    d36c:	ldr	pc, [ip, #3580]!	; 0xdfc

0000d370 <fgets@plt>:
    d370:	add	ip, pc, #0, 12
    d374:	add	ip, ip, #76, 20	; 0x4c000
    d378:	ldr	pc, [ip, #3572]!	; 0xdf4

0000d37c <find_named_client@plt>:
    d37c:	add	ip, pc, #0, 12
    d380:	add	ip, ip, #76, 20	; 0x4c000
    d384:	ldr	pc, [ip, #3564]!	; 0xdec

0000d388 <privilegeset_delete_all_illegal@plt>:
    d388:	add	ip, pc, #0, 12
    d38c:	add	ip, ip, #76, 20	; 0x4c000
    d390:	ldr	pc, [ip, #3556]!	; 0xde4

0000d394 <privilegeset_get@plt>:
    d394:	add	ip, pc, #0, 12
    d398:	add	ip, ip, #76, 20	; 0x4c000
    d39c:	ldr	pc, [ip, #3548]!	; 0xddc

0000d3a0 <find_address_conf@plt>:
    d3a0:	add	ip, pc, #0, 12
    d3a4:	add	ip, ip, #76, 20	; 0x4c000
    d3a8:	ldr	pc, [ip, #3540]!	; 0xdd4

0000d3ac <iwarn@plt>:
    d3ac:	add	ip, pc, #0, 12
    d3b0:	add	ip, ip, #76, 20	; 0x4c000
    d3b4:	ldr	pc, [ip, #3532]!	; 0xdcc

0000d3b8 <initclass@plt>:
    d3b8:	add	ip, pc, #0, 12
    d3bc:	add	ip, ip, #76, 20	; 0x4c000
    d3c0:	ldr	pc, [ip, #3524]!	; 0xdc4

0000d3c4 <rb_match_ip@plt>:
    d3c4:	add	ip, pc, #0, 12
    d3c8:	add	ip, ip, #76, 20	; 0x4c000
    d3cc:	ldr	pc, [ip, #3516]!	; 0xdbc

0000d3d0 <conf_yy_fatal_error@plt>:
    d3d0:	add	ip, pc, #0, 12
    d3d4:	add	ip, ip, #76, 20	; 0x4c000
    d3d8:	ldr	pc, [ip, #3508]!	; 0xdb4

0000d3dc <make_remote_conf@plt>:
    d3dc:	add	ip, pc, #0, 12
    d3e0:	add	ip, ip, #76, 20	; 0x4c000
    d3e4:	ldr	pc, [ip, #3500]!	; 0xdac

0000d3e8 <get_con_freq@plt>:
    d3e8:	add	ip, pc, #0, 12
    d3ec:	add	ip, ip, #76, 20	; 0x4c000
    d3f0:	ldr	pc, [ip, #3492]!	; 0xda4

0000d3f4 <add_conf_item@plt>:
    d3f4:	add	ip, pc, #0, 12
    d3f8:	add	ip, ip, #76, 20	; 0x4c000
    d3fc:	ldr	pc, [ip, #3484]!	; 0xd9c

0000d400 <conf_report_error@plt>:
    d400:	add	ip, pc, #0, 12
    d404:	add	ip, ip, #76, 20	; 0x4c000
    d408:	ldr	pc, [ip, #3476]!	; 0xd94

0000d40c <memcpy@plt>:
    d40c:	add	ip, pc, #0, 12
    d410:	add	ip, ip, #76, 20	; 0x4c000
    d414:	ldr	pc, [ip, #3468]!	; 0xd8c

0000d418 <rb_new_patricia@plt>:
    d418:	add	ip, pc, #0, 12
    d41c:	add	ip, ip, #76, 20	; 0x4c000
    d420:	ldr	pc, [ip, #3460]!	; 0xd84

0000d424 <find_client@plt>:
    d424:	add	ip, pc, #0, 12
    d428:	add	ip, ip, #76, 20	; 0x4c000
    d42c:	ldr	pc, [ip, #3452]!	; 0xd7c

0000d430 <sendto_channel_flags@plt>:
    d430:	add	ip, pc, #0, 12
    d434:	add	ip, ip, #76, 20	; 0x4c000
    d438:	ldr	pc, [ip, #3444]!	; 0xd74

0000d43c <del_from_hostname_hash@plt>:
    d43c:	add	ip, pc, #0, 12
    d440:	add	ip, ip, #76, 20	; 0x4c000
    d444:	ldr	pc, [ip, #3436]!	; 0xd6c

0000d448 <rb_outofmemory@plt>:
    d448:	add	ip, pc, #0, 12
    d44c:	add	ip, ip, #76, 20	; 0x4c000
    d450:	ldr	pc, [ip, #3428]!	; 0xd64

0000d454 <wsockd_decrement_clicount@plt>:
    d454:	add	ip, pc, #0, 12
    d458:	add	ip, ip, #76, 20	; 0x4c000
    d45c:	ldr	pc, [ip, #3420]!	; 0xd5c

0000d460 <remove_user_from_channels@plt>:
    d460:	add	ip, pc, #0, 12
    d464:	add	ip, ip, #76, 20	; 0x4c000
    d468:	ldr	pc, [ip, #3412]!	; 0xd54

0000d46c <del_invite@plt>:
    d46c:	add	ip, pc, #0, 12
    d470:	add	ip, ip, #76, 20	; 0x4c000
    d474:	ldr	pc, [ip, #3404]!	; 0xd4c

0000d478 <rb_kill@plt>:
    d478:	add	ip, pc, #0, 12
    d47c:	add	ip, ip, #76, 20	; 0x4c000
    d480:	ldr	pc, [ip, #3396]!	; 0xd44

0000d484 <yyerror@plt>:
    d484:	add	ip, pc, #0, 12
    d488:	add	ip, ip, #76, 20	; 0x4c000
    d48c:	ldr	pc, [ip, #3388]!	; 0xd3c

0000d490 <idebug@plt>:
    d490:	add	ip, pc, #0, 12
    d494:	add	ip, ip, #76, 20	; 0x4c000
    d498:	ldr	pc, [ip, #3380]!	; 0xd34

0000d49c <time@plt>:
    d49c:	add	ip, pc, #0, 12
    d4a0:	add	ip, ip, #76, 20	; 0x4c000
    d4a4:	ldr	pc, [ip, #3372]!	; 0xd2c

0000d4a8 <make_client@plt>:
    d4a8:	add	ip, pc, #0, 12
    d4ac:	add	ip, ip, #76, 20	; 0x4c000
    d4b0:	ldr	pc, [ip, #3364]!	; 0xd24

0000d4b4 <yyparse@plt>:
    d4b4:	add	ip, pc, #0, 12
    d4b8:	add	ip, ip, #76, 20	; 0x4c000
    d4bc:	ldr	pc, [ip, #3356]!	; 0xd1c

0000d4c0 <init_operhash@plt>:
    d4c0:	add	ip, pc, #0, 12
    d4c4:	add	ip, ip, #76, 20	; 0x4c000
    d4c8:	ldr	pc, [ip, #3348]!	; 0xd14

0000d4cc <capability_index_create@plt>:
    d4cc:	add	ip, pc, #0, 12
    d4d0:	add	ip, ip, #76, 20	; 0x4c000
    d4d4:	ldr	pc, [ip, #3340]!	; 0xd0c

0000d4d8 <rehash@plt>:
    d4d8:	add	ip, pc, #0, 12
    d4dc:	add	ip, ip, #76, 20	; 0x4c000
    d4e0:	ldr	pc, [ip, #3332]!	; 0xd04

0000d4e4 <dns_results_callback@plt>:
    d4e4:	add	ip, pc, #0, 12
    d4e8:	add	ip, ip, #76, 20	; 0x4c000
    d4ec:	ldr	pc, [ip, #3324]!	; 0xcfc

0000d4f0 <check_client@plt>:
    d4f0:	add	ip, pc, #0, 12
    d4f4:	add	ip, ip, #76, 20	; 0x4c000
    d4f8:	ldr	pc, [ip, #3316]!	; 0xcf4

0000d4fc <free_monitor@plt>:
    d4fc:	add	ip, pc, #0, 12
    d500:	add	ip, ip, #76, 20	; 0x4c000
    d504:	ldr	pc, [ip, #3308]!	; 0xcec

0000d508 <init_channels@plt>:
    d508:	add	ip, pc, #0, 12
    d50c:	add	ip, ip, #76, 20	; 0x4c000
    d510:	ldr	pc, [ip, #3300]!	; 0xce4

0000d514 <rb_socketpair@plt>:
    d514:	add	ip, pc, #0, 12
    d518:	add	ip, ip, #76, 20	; 0x4c000
    d51c:	ldr	pc, [ip, #3292]!	; 0xcdc

0000d520 <unload_one_module@plt>:
    d520:	add	ip, pc, #0, 12
    d524:	add	ip, ip, #76, 20	; 0x4c000
    d528:	ldr	pc, [ip, #3284]!	; 0xcd4

0000d52c <delete_opm_proxy_scanner_all@plt>:
    d52c:	add	ip, pc, #0, 12
    d530:	add	ip, ip, #76, 20	; 0x4c000
    d534:	ldr	pc, [ip, #3276]!	; 0xccc

0000d538 <rb_strncasecmp@plt>:
    d538:	add	ip, pc, #0, 12
    d53c:	add	ip, ip, #76, 20	; 0x4c000
    d540:	ldr	pc, [ip, #3268]!	; 0xcc4

0000d544 <send_pop_queue@plt>:
    d544:	add	ip, pc, #0, 12
    d548:	add	ip, ip, #76, 20	; 0x4c000
    d54c:	ldr	pc, [ip, #3260]!	; 0xcbc

0000d550 <get_listener_name@plt>:
    d550:	add	ip, pc, #0, 12
    d554:	add	ip, ip, #76, 20	; 0x4c000
    d558:	ldr	pc, [ip, #3252]!	; 0xcb4

0000d55c <parse_netmask@plt>:
    d55c:	add	ip, pc, #0, 12
    d560:	add	ip, ip, #76, 20	; 0x4c000
    d564:	ldr	pc, [ip, #3244]!	; 0xcac

0000d568 <create_opm_proxy_scanner@plt>:
    d568:	add	ip, pc, #0, 12
    d56c:	add	ip, ip, #76, 20	; 0x4c000
    d570:	ldr	pc, [ip, #3236]!	; 0xca4

0000d574 <rb_radixtree_foreach_next@plt>:
    d574:	add	ip, pc, #0, 12
    d578:	add	ip, ip, #76, 20	; 0x4c000
    d57c:	ldr	pc, [ip, #3228]!	; 0xc9c

0000d580 <get_client_ping@plt>:
    d580:	add	ip, pc, #0, 12
    d584:	add	ip, ip, #76, 20	; 0x4c000
    d588:	ldr	pc, [ip, #3220]!	; 0xc94

0000d58c <match_cidr@plt>:
    d58c:	add	ip, pc, #0, 12
    d590:	add	ip, ip, #76, 20	; 0x4c000
    d594:	ldr	pc, [ip, #3212]!	; 0xc8c

0000d598 <ssld_update_config@plt>:
    d598:	add	ip, pc, #0, 12
    d59c:	add	ip, ip, #76, 20	; 0x4c000
    d5a0:	ldr	pc, [ip, #3204]!	; 0xc84

0000d5a4 <del_dnsbl_entry_all@plt>:
    d5a4:	add	ip, pc, #0, 12
    d5a8:	add	ip, ip, #76, 20	; 0x4c000
    d5ac:	ldr	pc, [ip, #3196]!	; 0xc7c

0000d5b0 <rb_ctime@plt>:
    d5b0:	add	ip, pc, #0, 12
    d5b4:	add	ip, ip, #76, 20	; 0x4c000
    d5b8:	ldr	pc, [ip, #3188]!	; 0xc74

0000d5bc <operhash_delete@plt>:
    d5bc:	add	ip, pc, #0, 12
    d5c0:	add	ip, ip, #76, 20	; 0x4c000
    d5c4:	ldr	pc, [ip, #3180]!	; 0xc6c

0000d5c8 <rb_dictionary_find@plt>:
    d5c8:	add	ip, pc, #0, 12
    d5cc:	add	ip, ip, #76, 20	; 0x4c000
    d5d0:	ldr	pc, [ip, #3172]!	; 0xc64

0000d5d4 <rb_socket@plt>:
    d5d4:	add	ip, pc, #0, 12
    d5d8:	add	ip, ip, #76, 20	; 0x4c000
    d5dc:	ldr	pc, [ip, #3164]!	; 0xc5c

0000d5e0 <make_server@plt>:
    d5e0:	add	ip, pc, #0, 12
    d5e4:	add	ip, ip, #76, 20	; 0x4c000
    d5e8:	ldr	pc, [ip, #3156]!	; 0xc54

0000d5ec <get_client_class@plt>:
    d5ec:	add	ip, pc, #0, 12
    d5f0:	add	ip, ip, #76, 20	; 0x4c000
    d5f4:	ldr	pc, [ip, #3148]!	; 0xc4c

0000d5f8 <ilog_error@plt>:
    d5f8:	add	ip, pc, #0, 12
    d5fc:	add	ip, ip, #76, 20	; 0x4c000
    d600:	ldr	pc, [ip, #3140]!	; 0xc44

0000d604 <rb_current_time_tv@plt>:
    d604:	add	ip, pc, #0, 12
    d608:	add	ip, ip, #76, 20	; 0x4c000
    d60c:	ldr	pc, [ip, #3132]!	; 0xc3c

0000d610 <add_tgchange@plt>:
    d610:	add	ip, pc, #0, 12
    d614:	add	ip, ip, #76, 20	; 0x4c000
    d618:	ldr	pc, [ip, #3124]!	; 0xc34

0000d61c <user_mode@plt>:
    d61c:	add	ip, pc, #0, 12
    d620:	add	ip, ip, #76, 20	; 0x4c000
    d624:	ldr	pc, [ip, #3116]!	; 0xc2c

0000d628 <send_user_motd@plt>:
    d628:	add	ip, pc, #0, 12
    d62c:	add	ip, ip, #76, 20	; 0x4c000
    d630:	ldr	pc, [ip, #3108]!	; 0xc24

0000d634 <sendto_realops_snomask@plt>:
    d634:	add	ip, pc, #0, 12
    d638:	add	ip, ip, #76, 20	; 0x4c000
    d63c:	ldr	pc, [ip, #3100]!	; 0xc1c

0000d640 <ierror@plt>:
    d640:	add	ip, pc, #0, 12
    d644:	add	ip, ip, #76, 20	; 0x4c000
    d648:	ldr	pc, [ip, #3092]!	; 0xc14

0000d64c <conf_create_opm_proxy_scanner@plt>:
    d64c:	add	ip, pc, #0, 12
    d650:	add	ip, ip, #76, 20	; 0x4c000
    d654:	ldr	pc, [ip, #3084]!	; 0xc0c

0000d658 <rb_snprintf_append@plt>:
    d658:	add	ip, pc, #0, 12
    d65c:	add	ip, ip, #76, 20	; 0x4c000
    d660:	ldr	pc, [ip, #3076]!	; 0xc04

0000d664 <init_hash@plt>:
    d664:	add	ip, pc, #0, 12
    d668:	add	ip, ip, #76, 20	; 0x4c000
    d66c:	ldr	pc, [ip, #3068]!	; 0xbfc

0000d670 <yyrealloc@plt>:
    d670:	add	ip, pc, #0, 12
    d674:	add	ip, ip, #76, 20	; 0x4c000
    d678:	ldr	pc, [ip, #3060]!	; 0xbf4

0000d67c <RSA_free@plt>:
    d67c:	add	ip, pc, #0, 12
    d680:	add	ip, ip, #76, 20	; 0x4c000
    d684:	ldr	pc, [ip, #3052]!	; 0xbec

0000d688 <msgbuf_vunparse_fmt@plt>:
    d688:	add	ip, pc, #0, 12
    d68c:	add	ip, ip, #76, 20	; 0x4c000
    d690:	ldr	pc, [ip, #3044]!	; 0xbe4

0000d694 <unlink@plt>:
    d694:	add	ip, pc, #0, 12
    d698:	add	ip, ip, #76, 20	; 0x4c000
    d69c:	ldr	pc, [ip, #3036]!	; 0xbdc

0000d6a0 <find_class@plt>:
    d6a0:	add	ip, pc, #0, 12
    d6a4:	add	ip, ip, #76, 20	; 0x4c000
    d6a8:	ldr	pc, [ip, #3028]!	; 0xbd4

0000d6ac <dup2@plt>:
    d6ac:	add	ip, pc, #0, 12
    d6b0:	add	ip, ip, #76, 20	; 0x4c000
    d6b4:	ldr	pc, [ip, #3020]!	; 0xbcc

0000d6b8 <msgbuf_cache_initf@plt>:
    d6b8:	add	ip, pc, #0, 12
    d6bc:	add	ip, ip, #76, 20	; 0x4c000
    d6c0:	ldr	pc, [ip, #3012]!	; 0xbc4

0000d6c4 <realloc@plt>:
    d6c4:	add	ip, pc, #0, 12
    d6c8:	add	ip, ip, #76, 20	; 0x4c000
    d6cc:	ldr	pc, [ip, #3004]!	; 0xbbc

0000d6d0 <yy_create_buffer@plt>:
    d6d0:	add	ip, pc, #0, 12
    d6d4:	add	ip, ip, #76, 20	; 0x4c000
    d6d8:	ldr	pc, [ip, #2996]!	; 0xbb4

0000d6dc <deactivate_conf@plt>:
    d6dc:	add	ip, pc, #0, 12
    d6e0:	add	ip, ip, #76, 20	; 0x4c000
    d6e4:	ldr	pc, [ip, #2988]!	; 0xbac

0000d6e8 <getrlimit@plt>:
    d6e8:	add	ip, pc, #0, 12
    d6ec:	add	ip, ip, #76, 20	; 0x4c000
    d6f0:	ldr	pc, [ip, #2980]!	; 0xba4

0000d6f4 <delete_opm_listener_all@plt>:
    d6f4:	add	ip, pc, #0, 12
    d6f8:	add	ip, ip, #76, 20	; 0x4c000
    d6fc:	ldr	pc, [ip, #2972]!	; 0xb9c

0000d700 <rb_dictionary_add@plt>:
    d700:	add	ip, pc, #0, 12
    d704:	add	ip, ip, #76, 20	; 0x4c000
    d708:	ldr	pc, [ip, #2964]!	; 0xb94

0000d70c <conf_call_set@plt>:
    d70c:	add	ip, pc, #0, 12
    d710:	add	ip, ip, #76, 20	; 0x4c000
    d714:	ldr	pc, [ip, #2956]!	; 0xb8c

0000d718 <check_authd@plt>:
    d718:	add	ip, pc, #0, 12
    d71c:	add	ip, ip, #76, 20	; 0x4c000
    d720:	ldr	pc, [ip, #2948]!	; 0xb84

0000d724 <get_oper_name@plt>:
    d724:	add	ip, pc, #0, 12
    d728:	add	ip, ip, #76, 20	; 0x4c000
    d72c:	ldr	pc, [ip, #2940]!	; 0xb7c

0000d730 <sendto_channel_local_priv@plt>:
    d730:	add	ip, pc, #0, 12
    d734:	add	ip, ip, #76, 20	; 0x4c000
    d738:	ldr	pc, [ip, #2932]!	; 0xb74

0000d73c <find_channel@plt>:
    d73c:	add	ip, pc, #0, 12
    d740:	add	ip, ip, #76, 20	; 0x4c000
    d744:	ldr	pc, [ip, #2924]!	; 0xb6c

0000d748 <start_wsockd_accept@plt>:
    d748:	add	ip, pc, #0, 12
    d74c:	add	ip, ip, #76, 20	; 0x4c000
    d750:	ldr	pc, [ip, #2916]!	; 0xb64

0000d754 <substitution_append_var@plt>:
    d754:	add	ip, pc, #0, 12
    d758:	add	ip, ip, #76, 20	; 0x4c000
    d75c:	ldr	pc, [ip, #2908]!	; 0xb5c

0000d760 <read_packet@plt>:
    d760:	add	ip, pc, #0, 12
    d764:	add	ip, ip, #76, 20	; 0x4c000
    d768:	ldr	pc, [ip, #2900]!	; 0xb54

0000d76c <privilegeset_set_new@plt>:
    d76c:	add	ip, pc, #0, 12
    d770:	add	ip, ip, #76, 20	; 0x4c000
    d774:	ldr	pc, [ip, #2892]!	; 0xb4c

0000d778 <send_cap_mode_changes@plt>:
    d778:	add	ip, pc, #0, 12
    d77c:	add	ip, ip, #76, 20	; 0x4c000
    d780:	ldr	pc, [ip, #2884]!	; 0xb44

0000d784 <chdir@plt>:
    d784:	add	ip, pc, #0, 12
    d788:	add	ip, ip, #76, 20	; 0x4c000
    d78c:	ldr	pc, [ip, #2876]!	; 0xb3c

0000d790 <ccomment@plt>:
    d790:	add	ip, pc, #0, 12
    d794:	add	ip, ip, #76, 20	; 0x4c000
    d798:	ldr	pc, [ip, #2868]!	; 0xb34

0000d79c <clear_resv_hash@plt>:
    d79c:	add	ip, pc, #0, 12
    d7a0:	add	ip, ip, #76, 20	; 0x4c000
    d7a4:	ldr	pc, [ip, #2860]!	; 0xb2c

0000d7a8 <rb_linebuf_newbuf@plt>:
    d7a8:	add	ip, pc, #0, 12
    d7ac:	add	ip, ip, #76, 20	; 0x4c000
    d7b0:	ldr	pc, [ip, #2852]!	; 0xb24

0000d7b4 <rb_free_rb_dlink_node@plt>:
    d7b4:	add	ip, pc, #0, 12
    d7b8:	add	ip, ip, #76, 20	; 0x4c000
    d7bc:	ldr	pc, [ip, #2844]!	; 0xb1c

0000d7c0 <configure_authd@plt>:
    d7c0:	add	ip, pc, #0, 12
    d7c4:	add	ip, ip, #76, 20	; 0x4c000
    d7c8:	ldr	pc, [ip, #2836]!	; 0xb14

0000d7cc <geteuid@plt>:
    d7cc:	add	ip, pc, #0, 12
    d7d0:	add	ip, ip, #76, 20	; 0x4c000
    d7d4:	ldr	pc, [ip, #2828]!	; 0xb0c

0000d7d8 <rb_sctp_bindx@plt>:
    d7d8:	add	ip, pc, #0, 12
    d7dc:	add	ip, ip, #76, 20	; 0x4c000
    d7e0:	ldr	pc, [ip, #2820]!	; 0xb04

0000d7e4 <invalidate_bancache_user@plt>:
    d7e4:	add	ip, pc, #0, 12
    d7e8:	add	ip, ip, #76, 20	; 0x4c000
    d7ec:	ldr	pc, [ip, #2812]!	; 0xafc

0000d7f0 <perror@plt>:
    d7f0:	add	ip, pc, #0, 12
    d7f4:	add	ip, ip, #76, 20	; 0x4c000
    d7f8:	ldr	pc, [ip, #2804]!	; 0xaf4

0000d7fc <__xstat@plt>:
    d7fc:	add	ip, pc, #0, 12
    d800:	add	ip, ip, #76, 20	; 0x4c000
    d804:	ldr	pc, [ip, #2796]!	; 0xaec

0000d808 <rb_recv_fd_buf@plt>:
    d808:	add	ip, pc, #0, 12
    d80c:	add	ip, ip, #76, 20	; 0x4c000
    d810:	ldr	pc, [ip, #2788]!	; 0xae4

0000d814 <rb_inet_pton@plt>:
    d814:	add	ip, pc, #0, 12
    d818:	add	ip, ip, #76, 20	; 0x4c000
    d81c:	ldr	pc, [ip, #2780]!	; 0xadc

0000d820 <load_core_modules@plt>:
    d820:	add	ip, pc, #0, 12
    d824:	add	ip, ip, #76, 20	; 0x4c000
    d828:	ldr	pc, [ip, #2772]!	; 0xad4

0000d82c <rb_dictionary_delete@plt>:
    d82c:	add	ip, pc, #0, 12
    d830:	add	ip, ip, #76, 20	; 0x4c000
    d834:	ldr	pc, [ip, #2764]!	; 0xacc

0000d838 <free_listener@plt>:
    d838:	add	ip, pc, #0, 12
    d83c:	add	ip, ip, #76, 20	; 0x4c000
    d840:	ldr	pc, [ip, #2756]!	; 0xac4

0000d844 <send_umode@plt>:
    d844:	add	ip, pc, #0, 12
    d848:	add	ip, ip, #76, 20	; 0x4c000
    d84c:	ldr	pc, [ip, #2748]!	; 0xabc

0000d850 <rb_radixtree_create@plt>:
    d850:	add	ip, pc, #0, 12
    d854:	add	ip, ip, #76, 20	; 0x4c000
    d858:	ldr	pc, [ip, #2740]!	; 0xab4

0000d85c <add_nd_entry@plt>:
    d85c:	add	ip, pc, #0, 12
    d860:	add	ip, ip, #76, 20	; 0x4c000
    d864:	ldr	pc, [ip, #2732]!	; 0xaac

0000d868 <parseargs@plt>:
    d868:	add	ip, pc, #0, 12
    d86c:	add	ip, ip, #76, 20	; 0x4c000
    d870:	ldr	pc, [ip, #2724]!	; 0xaa4

0000d874 <allocate_ban@plt>:
    d874:	add	ip, pc, #0, 12
    d878:	add	ip, ip, #76, 20	; 0x4c000
    d87c:	ldr	pc, [ip, #2716]!	; 0xa9c

0000d880 <rb_ipv4_from_ipv6@plt>:
    d880:	add	ip, pc, #0, 12
    d884:	add	ip, ip, #76, 20	; 0x4c000
    d888:	ldr	pc, [ip, #2708]!	; 0xa94

0000d88c <sigaction@plt>:
    d88c:	add	ip, pc, #0, 12
    d890:	add	ip, ip, #76, 20	; 0x4c000
    d894:	ldr	pc, [ip, #2700]!	; 0xa8c

0000d898 <bandb_rehash_bans@plt>:
    d898:	add	ip, pc, #0, 12
    d89c:	add	ip, ip, #76, 20	; 0x4c000
    d8a0:	ldr	pc, [ip, #2692]!	; 0xa84

0000d8a4 <fwrite@plt>:
    d8a4:	add	ip, pc, #0, 12
    d8a8:	add	ip, ip, #76, 20	; 0x4c000
    d8ac:	ldr	pc, [ip, #2684]!	; 0xa7c

0000d8b0 <strcat@plt>:
    d8b0:	add	ip, pc, #0, 12
    d8b4:	add	ip, ip, #76, 20	; 0x4c000
    d8b8:	ldr	pc, [ip, #2676]!	; 0xa74

0000d8bc <operhash_add@plt>:
    d8bc:	add	ip, pc, #0, 12
    d8c0:	add	ip, ip, #76, 20	; 0x4c000
    d8c4:	ldr	pc, [ip, #2668]!	; 0xa6c

0000d8c8 <show_lusers@plt>:
    d8c8:	add	ip, pc, #0, 12
    d8cc:	add	ip, ip, #76, 20	; 0x4c000
    d8d0:	ldr	pc, [ip, #2660]!	; 0xa64

0000d8d4 <read_conf_files@plt>:
    d8d4:	add	ip, pc, #0, 12
    d8d8:	add	ip, ip, #76, 20	; 0x4c000
    d8dc:	ldr	pc, [ip, #2652]!	; 0xa5c

0000d8e0 <waitpid@plt>:
    d8e0:	add	ip, pc, #0, 12
    d8e4:	add	ip, ip, #76, 20	; 0x4c000
    d8e8:	ldr	pc, [ip, #2644]!	; 0xa54

0000d8ec <yyalloc@plt>:
    d8ec:	add	ip, pc, #0, 12
    d8f0:	add	ip, ip, #76, 20	; 0x4c000
    d8f4:	ldr	pc, [ip, #2636]!	; 0xa4c

0000d8f8 <capability_index_mask@plt>:
    d8f8:	add	ip, pc, #0, 12
    d8fc:	add	ip, ip, #76, 20	; 0x4c000
    d900:	ldr	pc, [ip, #2628]!	; 0xa44

0000d904 <add_dnsbl_entry@plt>:
    d904:	add	ip, pc, #0, 12
    d908:	add	ip, ip, #76, 20	; 0x4c000
    d90c:	ldr	pc, [ip, #2620]!	; 0xa3c

0000d910 <init_s_newconf@plt>:
    d910:	add	ip, pc, #0, 12
    d914:	add	ip, ip, #76, 20	; 0x4c000
    d918:	ldr	pc, [ip, #2612]!	; 0xa34

0000d91c <strcpy@plt>:
    d91c:	add	ip, pc, #0, 12
    d920:	add	ip, ip, #76, 20	; 0x4c000
    d924:	ldr	pc, [ip, #2604]!	; 0xa2c

0000d928 <yyfree@plt>:
    d928:	add	ip, pc, #0, 12
    d92c:	add	ip, ip, #76, 20	; 0x4c000
    d930:	ldr	pc, [ip, #2596]!	; 0xa24

0000d934 <conf_fgets@plt>:
    d934:	add	ip, pc, #0, 12
    d938:	add	ip, ip, #76, 20	; 0x4c000
    d93c:	ldr	pc, [ip, #2588]!	; 0xa1c

0000d940 <load_all_modules@plt>:
    d940:	add	ip, pc, #0, 12
    d944:	add	ip, ip, #76, 20	; 0x4c000
    d948:	ldr	pc, [ip, #2580]!	; 0xa14

0000d94c <find_channel_membership@plt>:
    d94c:	add	ip, pc, #0, 12
    d950:	add	ip, ip, #76, 20	; 0x4c000
    d954:	ldr	pc, [ip, #2572]!	; 0xa0c

0000d958 <restart_authd@plt>:
    d958:	add	ip, pc, #0, 12
    d95c:	add	ip, ip, #76, 20	; 0x4c000
    d960:	ldr	pc, [ip, #2564]!	; 0xa04

0000d964 <yy_scan_buffer@plt>:
    d964:	add	ip, pc, #0, 12
    d968:	add	ip, ip, #76, 20	; 0x4c000
    d96c:	ldr	pc, [ip, #2556]!	; 0x9fc

0000d970 <rb_dictionary_foreach_start@plt>:
    d970:	add	ip, pc, #0, 12
    d974:	add	ip, ip, #76, 20	; 0x4c000
    d978:	ldr	pc, [ip, #2548]!	; 0x9f4

0000d97c <rb_crypt@plt>:
    d97c:	add	ip, pc, #0, 12
    d980:	add	ip, ip, #76, 20	; 0x4c000
    d984:	ldr	pc, [ip, #2540]!	; 0x9ec

0000d988 <find_conf_item@plt>:
    d988:	add	ip, pc, #0, 12
    d98c:	add	ip, ip, #76, 20	; 0x4c000
    d990:	ldr	pc, [ip, #2532]!	; 0x9e4

0000d994 <sendto_server@plt>:
    d994:	add	ip, pc, #0, 12
    d998:	add	ip, ip, #76, 20	; 0x4c000
    d99c:	ldr	pc, [ip, #2524]!	; 0x9dc

0000d9a0 <close_connection@plt>:
    d9a0:	add	ip, pc, #0, 12
    d9a4:	add	ip, ip, #76, 20	; 0x4c000
    d9a8:	ldr	pc, [ip, #2516]!	; 0x9d4

0000d9ac <init_host_hash@plt>:
    d9ac:	add	ip, pc, #0, 12
    d9b0:	add	ip, ip, #76, 20	; 0x4c000
    d9b4:	ldr	pc, [ip, #2508]!	; 0x9cc

0000d9b8 <find_nick_resv@plt>:
    d9b8:	add	ip, pc, #0, 12
    d9bc:	add	ip, ip, #76, 20	; 0x4c000
    d9c0:	ldr	pc, [ip, #2500]!	; 0x9c4

0000d9c4 <free_oper_conf@plt>:
    d9c4:	add	ip, pc, #0, 12
    d9c8:	add	ip, ip, #76, 20	; 0x4c000
    d9cc:	ldr	pc, [ip, #2492]!	; 0x9bc

0000d9d0 <rb_helper_read@plt>:
    d9d0:	add	ip, pc, #0, 12
    d9d4:	add	ip, ip, #76, 20	; 0x4c000
    d9d8:	ldr	pc, [ip, #2484]!	; 0x9b4

0000d9dc <make_server_conf@plt>:
    d9dc:	add	ip, pc, #0, 12
    d9e0:	add	ip, ip, #76, 20	; 0x4c000
    d9e4:	ldr	pc, [ip, #2476]!	; 0x9ac

0000d9e8 <opendir@plt>:
    d9e8:	add	ip, pc, #0, 12
    d9ec:	add	ip, ip, #76, 20	; 0x4c000
    d9f0:	ldr	pc, [ip, #2468]!	; 0x9a4

0000d9f4 <sendto_monitor@plt>:
    d9f4:	add	ip, pc, #0, 12
    d9f8:	add	ip, ip, #76, 20	; 0x4c000
    d9fc:	ldr	pc, [ip, #2460]!	; 0x99c

0000da00 <rb_set_time@plt>:
    da00:	add	ip, pc, #0, 12
    da04:	add	ip, ip, #76, 20	; 0x4c000
    da08:	ldr	pc, [ip, #2452]!	; 0x994

0000da0c <clear_hash_parse@plt>:
    da0c:	add	ip, pc, #0, 12
    da10:	add	ip, ip, #76, 20	; 0x4c000
    da14:	ldr	pc, [ip, #2444]!	; 0x98c

0000da18 <setrlimit@plt>:
    da18:	add	ip, pc, #0, 12
    da1c:	add	ip, ip, #76, 20	; 0x4c000
    da20:	ldr	pc, [ip, #2436]!	; 0x984

0000da24 <channel_modes@plt>:
    da24:	add	ip, pc, #0, 12
    da28:	add	ip, ip, #76, 20	; 0x4c000
    da2c:	ldr	pc, [ip, #2428]!	; 0x97c

0000da30 <rb_basename@plt>:
    da30:	add	ip, pc, #0, 12
    da34:	add	ip, ip, #76, 20	; 0x4c000
    da38:	ldr	pc, [ip, #2420]!	; 0x974

0000da3c <add_to_client_hash@plt>:
    da3c:	add	ip, pc, #0, 12
    da40:	add	ip, ip, #76, 20	; 0x4c000
    da44:	ldr	pc, [ip, #2412]!	; 0x96c

0000da48 <show_isupport@plt>:
    da48:	add	ip, pc, #0, 12
    da4c:	add	ip, ip, #76, 20	; 0x4c000
    da50:	ldr	pc, [ip, #2404]!	; 0x964

0000da54 <rb_string_to_array@plt>:
    da54:	add	ip, pc, #0, 12
    da58:	add	ip, ip, #76, 20	; 0x4c000
    da5c:	ldr	pc, [ip, #2396]!	; 0x95c

0000da60 <mod_remember_clicaps@plt>:
    da60:	add	ip, pc, #0, 12
    da64:	add	ip, ip, #76, 20	; 0x4c000
    da68:	ldr	pc, [ip, #2388]!	; 0x954

0000da6c <puts@plt>:
    da6c:	add	ip, pc, #0, 12
    da70:	add	ip, ip, #76, 20	; 0x4c000
    da74:	ldr	pc, [ip, #2380]!	; 0x94c

0000da78 <fnv_hash_upper@plt>:
    da78:	add	ip, pc, #0, 12
    da7c:	add	ip, ip, #76, 20	; 0x4c000
    da80:	ldr	pc, [ip, #2372]!	; 0x944

0000da84 <malloc@plt>:
    da84:	add	ip, pc, #0, 12
    da88:	add	ip, ip, #76, 20	; 0x4c000
    da8c:	ldr	pc, [ip, #2364]!	; 0x93c

0000da90 <del_from_id_hash@plt>:
    da90:	add	ip, pc, #0, 12
    da94:	add	ip, ip, #76, 20	; 0x4c000
    da98:	ldr	pc, [ip, #2356]!	; 0x934

0000da9c <start_ssld_accept@plt>:
    da9c:	add	ip, pc, #0, 12
    daa0:	add	ip, ip, #76, 20	; 0x4c000
    daa4:	ldr	pc, [ip, #2348]!	; 0x92c

0000daa8 <sigaddset@plt>:
    daa8:	add	ip, pc, #0, 12
    daac:	add	ip, ip, #76, 20	; 0x4c000
    dab0:	ldr	pc, [ip, #2340]!	; 0x924

0000dab4 <rb_ignore_errno@plt>:
    dab4:	add	ip, pc, #0, 12
    dab8:	add	ip, ip, #76, 20	; 0x4c000
    dabc:	ldr	pc, [ip, #2332]!	; 0x91c

0000dac0 <strerror@plt>:
    dac0:	add	ip, pc, #0, 12
    dac4:	add	ip, ip, #76, 20	; 0x4c000
    dac8:	ldr	pc, [ip, #2324]!	; 0x914

0000dacc <add_conf_by_address@plt>:
    dacc:	add	ip, pc, #0, 12
    dad0:	add	ip, ip, #76, 20	; 0x4c000
    dad4:	ldr	pc, [ip, #2316]!	; 0x90c

0000dad8 <find_top_conf@plt>:
    dad8:	add	ip, pc, #0, 12
    dadc:	add	ip, ip, #76, 20	; 0x4c000
    dae0:	ldr	pc, [ip, #2308]!	; 0x904

0000dae4 <rb_get_random@plt>:
    dae4:	add	ip, pc, #0, 12
    dae8:	add	ip, ip, #76, 20	; 0x4c000
    daec:	ldr	pc, [ip, #2300]!	; 0x8fc

0000daf0 <privilegeset_ref@plt>:
    daf0:	add	ip, pc, #0, 12
    daf4:	add	ip, ip, #76, 20	; 0x4c000
    daf8:	ldr	pc, [ip, #2292]!	; 0x8f4

0000dafc <cache_file@plt>:
    dafc:	add	ip, pc, #0, 12
    db00:	add	ip, ip, #76, 20	; 0x4c000
    db04:	ldr	pc, [ip, #2284]!	; 0x8ec

0000db08 <show_iline_prefix@plt>:
    db08:	add	ip, pc, #0, 12
    db0c:	add	ip, ip, #76, 20	; 0x4c000
    db10:	ldr	pc, [ip, #2276]!	; 0x8e4

0000db14 <del_from_client_hash@plt>:
    db14:	add	ip, pc, #0, 12
    db18:	add	ip, ip, #76, 20	; 0x4c000
    db1c:	ldr	pc, [ip, #2268]!	; 0x8dc

0000db20 <rb_match_exact_string@plt>:
    db20:	add	ip, pc, #0, 12
    db24:	add	ip, ip, #76, 20	; 0x4c000
    db28:	ldr	pc, [ip, #2260]!	; 0x8d4

0000db2c <rb_read@plt>:
    db2c:	add	ip, pc, #0, 12
    db30:	add	ip, ip, #76, 20	; 0x4c000
    db34:	ldr	pc, [ip, #2252]!	; 0x8cc

0000db38 <localtime@plt>:
    db38:	add	ip, pc, #0, 12
    db3c:	add	ip, ip, #76, 20	; 0x4c000
    db40:	ldr	pc, [ip, #2244]!	; 0x8c4

0000db44 <init_authd@plt>:
    db44:	add	ip, pc, #0, 12
    db48:	add	ip, ip, #76, 20	; 0x4c000
    db4c:	ldr	pc, [ip, #2236]!	; 0x8bc

0000db50 <rb_close@plt>:
    db50:	add	ip, pc, #0, 12
    db54:	add	ip, ip, #76, 20	; 0x4c000
    db58:	ldr	pc, [ip, #2228]!	; 0x8b4

0000db5c <scache_split@plt>:
    db5c:	add	ip, pc, #0, 12
    db60:	add	ip, ip, #76, 20	; 0x4c000
    db64:	ldr	pc, [ip, #2220]!	; 0x8ac

0000db68 <authd_reject_client@plt>:
    db68:	add	ip, pc, #0, 12
    db6c:	add	ip, ip, #76, 20	; 0x4c000
    db70:	ldr	pc, [ip, #2212]!	; 0x8a4

0000db74 <start_zlib_session@plt>:
    db74:	add	ip, pc, #0, 12
    db78:	add	ip, ip, #76, 20	; 0x4c000
    db7c:	ldr	pc, [ip, #2204]!	; 0x89c

0000db80 <free_away@plt>:
    db80:	add	ip, pc, #0, 12
    db84:	add	ip, ip, #76, 20	; 0x4c000
    db88:	ldr	pc, [ip, #2196]!	; 0x894

0000db8c <rb_get_fd@plt>:
    db8c:	add	ip, pc, #0, 12
    db90:	add	ip, ip, #76, 20	; 0x4c000
    db94:	ldr	pc, [ip, #2188]!	; 0x88c

0000db98 <init_hook@plt>:
    db98:	add	ip, pc, #0, 12
    db9c:	add	ip, ip, #76, 20	; 0x4c000
    dba0:	ldr	pc, [ip, #2180]!	; 0x884

0000dba4 <find_monitor@plt>:
    dba4:	add	ip, pc, #0, 12
    dba8:	add	ip, ip, #76, 20	; 0x4c000
    dbac:	ldr	pc, [ip, #2172]!	; 0x87c

0000dbb0 <register_hook@plt>:
    dbb0:	add	ip, pc, #0, 12
    dbb4:	add	ip, ip, #76, 20	; 0x4c000
    dbb8:	ldr	pc, [ip, #2164]!	; 0x874

0000dbbc <__ctype_toupper_loc@plt>:
    dbbc:	add	ip, pc, #0, 12
    dbc0:	add	ip, ip, #76, 20	; 0x4c000
    dbc4:	ldr	pc, [ip, #2156]!	; 0x86c

0000dbc8 <__gmon_start__@plt>:
    dbc8:	add	ip, pc, #0, 12
    dbcc:	add	ip, ip, #76, 20	; 0x4c000
    dbd0:	ldr	pc, [ip, #2148]!	; 0x864

0000dbd4 <privilegeset_extend@plt>:
    dbd4:	add	ip, pc, #0, 12
    dbd8:	add	ip, ip, #76, 20	; 0x4c000
    dbdc:	ldr	pc, [ip, #2140]!	; 0x85c

0000dbe0 <connid_get@plt>:
    dbe0:	add	ip, pc, #0, 12
    dbe4:	add	ip, ip, #76, 20	; 0x4c000
    dbe8:	ldr	pc, [ip, #2132]!	; 0x854

0000dbec <open@plt>:
    dbec:	add	ip, pc, #0, 12
    dbf0:	add	ip, ip, #76, 20	; 0x4c000
    dbf4:	ldr	pc, [ip, #2124]!	; 0x84c

0000dbf8 <mod_clear_paths@plt>:
    dbf8:	add	ip, pc, #0, 12
    dbfc:	add	ip, ip, #76, 20	; 0x4c000
    dc00:	ldr	pc, [ip, #2116]!	; 0x844

0000dc04 <rb_accept_tcp@plt>:
    dc04:	add	ip, pc, #0, 12
    dc08:	add	ip, ip, #76, 20	; 0x4c000
    dc0c:	ldr	pc, [ip, #2108]!	; 0x83c

0000dc10 <__ctype_b_loc@plt>:
    dc10:	add	ip, pc, #0, 12
    dc14:	add	ip, ip, #76, 20	; 0x4c000
    dc18:	ldr	pc, [ip, #2100]!	; 0x834

0000dc1c <getpid@plt>:
    dc1c:	add	ip, pc, #0, 12
    dc20:	add	ip, ip, #76, 20	; 0x4c000
    dc24:	ldr	pc, [ip, #2092]!	; 0x82c

0000dc28 <exit@plt>:
    dc28:	add	ip, pc, #0, 12
    dc2c:	add	ip, ip, #76, 20	; 0x4c000
    dc30:	ldr	pc, [ip, #2084]!	; 0x824

0000dc34 <free_conf@plt>:
    dc34:	add	ip, pc, #0, 12
    dc38:	add	ip, ip, #76, 20	; 0x4c000
    dc3c:	ldr	pc, [ip, #2076]!	; 0x81c

0000dc40 <get_channel_access@plt>:
    dc40:	add	ip, pc, #0, 12
    dc44:	add	ip, ip, #76, 20	; 0x4c000
    dc48:	ldr	pc, [ip, #2068]!	; 0x814

0000dc4c <send_oper_motd@plt>:
    dc4c:	add	ip, pc, #0, 12
    dc50:	add	ip, ip, #76, 20	; 0x4c000
    dc54:	ldr	pc, [ip, #2060]!	; 0x80c

0000dc58 <rb_make_rb_dlink_node@plt>:
    dc58:	add	ip, pc, #0, 12
    dc5c:	add	ip, ip, #76, 20	; 0x4c000
    dc60:	ldr	pc, [ip, #2052]!	; 0x804

0000dc64 <notify_banned_client@plt>:
    dc64:	add	ip, pc, #0, 12
    dc68:	add	ip, ip, #76, 20	; 0x4c000
    dc6c:	ldr	pc, [ip, #2044]!	; 0x7fc

0000dc70 <get_sendq@plt>:
    dc70:	add	ip, pc, #0, 12
    dc74:	add	ip, ip, #76, 20	; 0x4c000
    dc78:	ldr	pc, [ip, #2036]!	; 0x7f4

0000dc7c <sendto_one_numeric@plt>:
    dc7c:	add	ip, pc, #0, 12
    dc80:	add	ip, ip, #76, 20	; 0x4c000
    dc84:	ldr	pc, [ip, #2028]!	; 0x7ec

0000dc88 <bcmp@plt>:
    dc88:	add	ip, pc, #0, 12
    dc8c:	add	ip, ip, #76, 20	; 0x4c000
    dc90:	ldr	pc, [ip, #2020]!	; 0x7e4

0000dc94 <strlen@plt>:
    dc94:	add	ip, pc, #0, 12
    dc98:	add	ip, ip, #76, 20	; 0x4c000
    dc9c:	ldr	pc, [ip, #2012]!	; 0x7dc

0000dca0 <setup_signals@plt>:
    dca0:	add	ip, pc, #0, 12
    dca4:	add	ip, ip, #76, 20	; 0x4c000
    dca8:	ldr	pc, [ip, #2004]!	; 0x7d4

0000dcac <setsid@plt>:
    dcac:	add	ip, pc, #0, 12
    dcb0:	add	ip, ip, #76, 20	; 0x4c000
    dcb4:	ldr	pc, [ip, #1996]!	; 0x7cc

0000dcb8 <cache_user_motd@plt>:
    dcb8:	add	ip, pc, #0, 12
    dcbc:	add	ip, ip, #76, 20	; 0x4c000
    dcc0:	ldr	pc, [ip, #1988]!	; 0x7c4

0000dcc4 <del_all_accepts@plt>:
    dcc4:	add	ip, pc, #0, 12
    dcc8:	add	ip, ip, #76, 20	; 0x4c000
    dccc:	ldr	pc, [ip, #1980]!	; 0x7bc

0000dcd0 <lt_dlinit@plt>:
    dcd0:	add	ip, pc, #0, 12
    dcd4:	add	ip, ip, #76, 20	; 0x4c000
    dcd8:	ldr	pc, [ip, #1972]!	; 0x7b4

0000dcdc <valid_extban@plt>:
    dcdc:	add	ip, pc, #0, 12
    dce0:	add	ip, ip, #76, 20	; 0x4c000
    dce4:	ldr	pc, [ip, #1964]!	; 0x7ac

0000dce8 <strchr@plt>:
    dce8:	add	ip, pc, #0, 12
    dcec:	add	ip, ip, #76, 20	; 0x4c000
    dcf0:	ldr	pc, [ip, #1956]!	; 0x7a4

0000dcf4 <free_server_conf@plt>:
    dcf4:	add	ip, pc, #0, 12
    dcf8:	add	ip, ip, #76, 20	; 0x4c000
    dcfc:	ldr	pc, [ip, #1948]!	; 0x79c

0000dd00 <dns_stats_results_callback@plt>:
    dd00:	add	ip, pc, #0, 12
    dd04:	add	ip, ip, #76, 20	; 0x4c000
    dd08:	ldr	pc, [ip, #1940]!	; 0x794

0000dd0c <srand@plt>:
    dd0c:	add	ip, pc, #0, 12
    dd10:	add	ip, ip, #76, 20	; 0x4c000
    dd14:	ldr	pc, [ip, #1932]!	; 0x78c

0000dd18 <PEM_read_bio_RSA_PUBKEY@plt>:
    dd18:	add	ip, pc, #0, 12
    dd1c:	add	ip, ip, #76, 20	; 0x4c000
    dd20:	ldr	pc, [ip, #1924]!	; 0x784

0000dd24 <newconf_init@plt>:
    dd24:	add	ip, pc, #0, 12
    dd28:	add	ip, ip, #76, 20	; 0x4c000
    dd2c:	ldr	pc, [ip, #1916]!	; 0x77c

0000dd30 <clear_monitor@plt>:
    dd30:	add	ip, pc, #0, 12
    dd34:	add	ip, ip, #76, 20	; 0x4c000
    dd38:	ldr	pc, [ip, #1908]!	; 0x774

0000dd3c <clear_s_newconf_bans@plt>:
    dd3c:	add	ip, pc, #0, 12
    dd40:	add	ip, ip, #76, 20	; 0x4c000
    dd44:	ldr	pc, [ip, #1900]!	; 0x76c

0000dd48 <whowas_init@plt>:
    dd48:	add	ip, pc, #0, 12
    dd4c:	add	ip, ip, #76, 20	; 0x4c000
    dd50:	ldr	pc, [ip, #1892]!	; 0x764

0000dd54 <conf_add_class_to_conf@plt>:
    dd54:	add	ip, pc, #0, 12
    dd58:	add	ip, ip, #76, 20	; 0x4c000
    dd5c:	ldr	pc, [ip, #1884]!	; 0x75c

0000dd60 <fprintf@plt>:
    dd60:	add	ip, pc, #0, 12
    dd64:	add	ip, ip, #76, 20	; 0x4c000
    dd68:	ldr	pc, [ip, #1876]!	; 0x754

0000dd6c <conf_create_opm_listener@plt>:
    dd6c:	add	ip, pc, #0, 12
    dd70:	add	ip, ip, #76, 20	; 0x4c000
    dd74:	ldr	pc, [ip, #1868]!	; 0x74c

0000dd78 <match_extban@plt>:
    dd78:	add	ip, pc, #0, 12
    dd7c:	add	ip, ip, #76, 20	; 0x4c000
    dd80:	ldr	pc, [ip, #1860]!	; 0x744

0000dd84 <yy_delete_buffer@plt>:
    dd84:	add	ip, pc, #0, 12
    dd88:	add	ip, ip, #76, 20	; 0x4c000
    dd8c:	ldr	pc, [ip, #1852]!	; 0x73c

0000dd90 <sendto_local_clients_with_capability@plt>:
    dd90:	add	ip, pc, #0, 12
    dd94:	add	ip, ip, #76, 20	; 0x4c000
    dd98:	ldr	pc, [ip, #1844]!	; 0x734

0000dd9c <rb_radixtree_add@plt>:
    dd9c:	add	ip, pc, #0, 12
    dda0:	add	ip, ip, #76, 20	; 0x4c000
    dda4:	ldr	pc, [ip, #1836]!	; 0x72c

0000dda8 <show_capabilities@plt>:
    dda8:	add	ip, pc, #0, 12
    ddac:	add	ip, ip, #76, 20	; 0x4c000
    ddb0:	ldr	pc, [ip, #1828]!	; 0x724

0000ddb4 <execv@plt>:
    ddb4:	add	ip, pc, #0, 12
    ddb8:	add	ip, ip, #76, 20	; 0x4c000
    ddbc:	ldr	pc, [ip, #1820]!	; 0x71c

0000ddc0 <add_server_conf@plt>:
    ddc0:	add	ip, pc, #0, 12
    ddc4:	add	ip, ip, #76, 20	; 0x4c000
    ddc8:	ldr	pc, [ip, #1812]!	; 0x714

0000ddcc <detach_server_conf@plt>:
    ddcc:	add	ip, pc, #0, 12
    ddd0:	add	ip, ip, #76, 20	; 0x4c000
    ddd4:	ldr	pc, [ip, #1804]!	; 0x70c

0000ddd8 <rehash_authd@plt>:
    ddd8:	add	ip, pc, #0, 12
    dddc:	add	ip, ip, #76, 20	; 0x4c000
    dde0:	ldr	pc, [ip, #1796]!	; 0x704

0000dde4 <check_class@plt>:
    dde4:	add	ip, pc, #0, 12
    dde8:	add	ip, ip, #76, 20	; 0x4c000
    ddec:	ldr	pc, [ip, #1788]!	; 0x6fc

0000ddf0 <free_user@plt>:
    ddf0:	add	ip, pc, #0, 12
    ddf4:	add	ip, ip, #76, 20	; 0x4c000
    ddf8:	ldr	pc, [ip, #1780]!	; 0x6f4

0000ddfc <monitor_signon@plt>:
    ddfc:	add	ip, pc, #0, 12
    de00:	add	ip, ip, #76, 20	; 0x4c000
    de04:	ldr	pc, [ip, #1772]!	; 0x6ec

0000de08 <check_banned_lines@plt>:
    de08:	add	ip, pc, #0, 12
    de0c:	add	ip, ip, #76, 20	; 0x4c000
    de10:	ldr	pc, [ip, #1764]!	; 0x6e4

0000de14 <capability_put@plt>:
    de14:	add	ip, pc, #0, 12
    de18:	add	ip, ip, #76, 20	; 0x4c000
    de1c:	ldr	pc, [ip, #1756]!	; 0x6dc

0000de20 <rb_bh_alloc@plt>:
    de20:	add	ip, pc, #0, 12
    de24:	add	ip, ip, #76, 20	; 0x4c000
    de28:	ldr	pc, [ip, #1748]!	; 0x6d4

0000de2c <sendto_common_channels_local@plt>:
    de2c:	add	ip, pc, #0, 12
    de30:	add	ip, ip, #76, 20	; 0x4c000
    de34:	ldr	pc, [ip, #1740]!	; 0x6cc

0000de38 <__errno_location@plt>:
    de38:	add	ip, pc, #0, 12
    de3c:	add	ip, ip, #76, 20	; 0x4c000
    de40:	ldr	pc, [ip, #1732]!	; 0x6c4

0000de44 <add_to_cli_connid_hash@plt>:
    de44:	add	ip, pc, #0, 12
    de48:	add	ip, ip, #76, 20	; 0x4c000
    de4c:	ldr	pc, [ip, #1724]!	; 0x6bc

0000de50 <free_pre_client@plt>:
    de50:	add	ip, pc, #0, 12
    de54:	add	ip, ip, #76, 20	; 0x4c000
    de58:	ldr	pc, [ip, #1716]!	; 0x6b4

0000de5c <rb_helper_run@plt>:
    de5c:	add	ip, pc, #0, 12
    de60:	add	ip, ip, #76, 20	; 0x4c000
    de64:	ldr	pc, [ip, #1708]!	; 0x6ac

0000de68 <make_class@plt>:
    de68:	add	ip, pc, #0, 12
    de6c:	add	ip, ip, #76, 20	; 0x4c000
    de70:	ldr	pc, [ip, #1700]!	; 0x6a4

0000de74 <snprintf@plt>:
    de74:	add	ip, pc, #0, 12
    de78:	add	ip, ip, #76, 20	; 0x4c000
    de7c:	ldr	pc, [ip, #1692]!	; 0x69c

0000de80 <msgbuf_cache_free@plt>:
    de80:	add	ip, pc, #0, 12
    de84:	add	ip, ip, #76, 20	; 0x4c000
    de88:	ldr	pc, [ip, #1684]!	; 0x694

0000de8c <__isoc99_sscanf@plt>:
    de8c:	add	ip, pc, #0, 12
    de90:	add	ip, ip, #76, 20	; 0x4c000
    de94:	ldr	pc, [ip, #1676]!	; 0x68c

0000de98 <parse_snobuf_to_mask@plt>:
    de98:	add	ip, pc, #0, 12
    de9c:	add	ip, ip, #76, 20	; 0x4c000
    dea0:	ldr	pc, [ip, #1668]!	; 0x684

0000dea4 <is_remote_connect@plt>:
    dea4:	add	ip, pc, #0, 12
    dea8:	add	ip, ip, #76, 20	; 0x4c000
    deac:	ldr	pc, [ip, #1660]!	; 0x67c

0000deb0 <get_ssld_count@plt>:
    deb0:	add	ip, pc, #0, 12
    deb4:	add	ip, ip, #76, 20	; 0x4c000
    deb8:	ldr	pc, [ip, #1652]!	; 0x674

0000debc <load_one_module@plt>:
    debc:	add	ip, pc, #0, 12
    dec0:	add	ip, ip, #76, 20	; 0x4c000
    dec4:	ldr	pc, [ip, #1644]!	; 0x66c

0000dec8 <init_dns@plt>:
    dec8:	add	ip, pc, #0, 12
    decc:	add	ip, ip, #76, 20	; 0x4c000
    ded0:	ldr	pc, [ip, #1636]!	; 0x664

0000ded4 <rb_bh_create@plt>:
    ded4:	add	ip, pc, #0, 12
    ded8:	add	ip, ip, #76, 20	; 0x4c000
    dedc:	ldr	pc, [ip, #1628]!	; 0x65c

0000dee0 <rb_radixtree_retrieve@plt>:
    dee0:	add	ip, pc, #0, 12
    dee4:	add	ip, ip, #76, 20	; 0x4c000
    dee8:	ldr	pc, [ip, #1620]!	; 0x654

0000deec <capability_index_list@plt>:
    deec:	add	ip, pc, #0, 12
    def0:	add	ip, ip, #76, 20	; 0x4c000
    def4:	ldr	pc, [ip, #1612]!	; 0x64c

0000def8 <BIO_ctrl@plt>:
    def8:	add	ip, pc, #0, 12
    defc:	add	ip, ip, #76, 20	; 0x4c000
    df00:	ldr	pc, [ip, #1604]!	; 0x644

0000df04 <find_server@plt>:
    df04:	add	ip, pc, #0, 12
    df08:	add	ip, ip, #76, 20	; 0x4c000
    df0c:	ldr	pc, [ip, #1596]!	; 0x63c

0000df10 <add_to_hostname_hash@plt>:
    df10:	add	ip, pc, #0, 12
    df14:	add	ip, ip, #76, 20	; 0x4c000
    df18:	ldr	pc, [ip, #1588]!	; 0x634

0000df1c <hashcomment@plt>:
    df1c:	add	ip, pc, #0, 12
    df20:	add	ip, ip, #76, 20	; 0x4c000
    df24:	ldr	pc, [ip, #1580]!	; 0x62c

0000df28 <memset@plt>:
    df28:	add	ip, pc, #0, 12
    df2c:	add	ip, ip, #76, 20	; 0x4c000
    df30:	ldr	pc, [ip, #1572]!	; 0x624

0000df34 <BIO_free@plt>:
    df34:	add	ip, pc, #0, 12
    df38:	add	ip, ip, #76, 20	; 0x4c000
    df3c:	ldr	pc, [ip, #1564]!	; 0x61c

0000df40 <opm_check_enable@plt>:
    df40:	add	ip, pc, #0, 12
    df44:	add	ip, ip, #76, 20	; 0x4c000
    df48:	ldr	pc, [ip, #1556]!	; 0x614

0000df4c <yypop_buffer_state@plt>:
    df4c:	add	ip, pc, #0, 12
    df50:	add	ip, ip, #76, 20	; 0x4c000
    df54:	ldr	pc, [ip, #1548]!	; 0x60c

0000df58 <server_reboot@plt>:
    df58:	add	ip, pc, #0, 12
    df5c:	add	ip, ip, #76, 20	; 0x4c000
    df60:	ldr	pc, [ip, #1540]!	; 0x604

0000df64 <chantypes_update@plt>:
    df64:	add	ip, pc, #0, 12
    df68:	add	ip, ip, #76, 20	; 0x4c000
    df6c:	ldr	pc, [ip, #1532]!	; 0x5fc

0000df70 <construct_cflags_strings@plt>:
    df70:	add	ip, pc, #0, 12
    df74:	add	ip, ip, #76, 20	; 0x4c000
    df78:	ldr	pc, [ip, #1524]!	; 0x5f4

0000df7c <strncpy@plt>:
    df7c:	add	ip, pc, #0, 12
    df80:	add	ip, ip, #76, 20	; 0x4c000
    df84:	ldr	pc, [ip, #1516]!	; 0x5ec

0000df88 <generate_uid@plt>:
    df88:	add	ip, pc, #0, 12
    df8c:	add	ip, ip, #76, 20	; 0x4c000
    df90:	ldr	pc, [ip, #1508]!	; 0x5e4

0000df94 <rb_send_fd_buf@plt>:
    df94:	add	ip, pc, #0, 12
    df98:	add	ip, ip, #76, 20	; 0x4c000
    df9c:	ldr	pc, [ip, #1500]!	; 0x5dc

0000dfa0 <load_a_module@plt>:
    dfa0:	add	ip, pc, #0, 12
    dfa4:	add	ip, ip, #76, 20	; 0x4c000
    dfa8:	ldr	pc, [ip, #1492]!	; 0x5d4

0000dfac <ircd_shutdown@plt>:
    dfac:	add	ip, pc, #0, 12
    dfb0:	add	ip, ip, #76, 20	; 0x4c000
    dfb4:	ldr	pc, [ip, #1484]!	; 0x5cc

0000dfb8 <rb_dictionary_create@plt>:
    dfb8:	add	ip, pc, #0, 12
    dfbc:	add	ip, ip, #76, 20	; 0x4c000
    dfc0:	ldr	pc, [ip, #1476]!	; 0x5c4

0000dfc4 <privilegeset_mark_all_illegal@plt>:
    dfc4:	add	ip, pc, #0, 12
    dfc8:	add	ip, ip, #76, 20	; 0x4c000
    dfcc:	ldr	pc, [ip, #1468]!	; 0x5bc

0000dfd0 <find_xline_mask@plt>:
    dfd0:	add	ip, pc, #0, 12
    dfd4:	add	ip, ip, #76, 20	; 0x4c000
    dfd8:	ldr	pc, [ip, #1460]!	; 0x5b4

0000dfdc <find_cli_connid_hash@plt>:
    dfdc:	add	ip, pc, #0, 12
    dfe0:	add	ip, ip, #76, 20	; 0x4c000
    dfe4:	ldr	pc, [ip, #1452]!	; 0x5ac

0000dfe8 <strtoull@plt>:
    dfe8:	add	ip, pc, #0, 12
    dfec:	add	ip, ip, #76, 20	; 0x4c000
    dff0:	ldr	pc, [ip, #1444]!	; 0x5a4

0000dff4 <rb_linebuf_flush@plt>:
    dff4:	add	ip, pc, #0, 12
    dff8:	add	ip, ip, #76, 20	; 0x4c000
    dffc:	ldr	pc, [ip, #1436]!	; 0x59c

0000e000 <rb_inet_pton_sock@plt>:
    e000:	add	ip, pc, #0, 12
    e004:	add	ip, ip, #76, 20	; 0x4c000
    e008:	ldr	pc, [ip, #1428]!	; 0x594

0000e00c <rb_linebuf_donebuf@plt>:
    e00c:	add	ip, pc, #0, 12
    e010:	add	ip, ip, #76, 20	; 0x4c000
    e014:	ldr	pc, [ip, #1420]!	; 0x58c

0000e018 <matchset_for_client@plt>:
    e018:	add	ip, pc, #0, 12
    e01c:	add	ip, ip, #76, 20	; 0x4c000
    e020:	ldr	pc, [ip, #1412]!	; 0x584

0000e024 <lookup_hostname@plt>:
    e024:	add	ip, pc, #0, 12
    e028:	add	ip, ip, #76, 20	; 0x4c000
    e02c:	ldr	pc, [ip, #1404]!	; 0x57c

0000e030 <add_class@plt>:
    e030:	add	ip, pc, #0, 12
    e034:	add	ip, ip, #76, 20	; 0x4c000
    e038:	ldr	pc, [ip, #1396]!	; 0x574

0000e03c <fileno@plt>:
    e03c:	add	ip, pc, #0, 12
    e040:	add	ip, ip, #76, 20	; 0x4c000
    e044:	ldr	pc, [ip, #1388]!	; 0x56c

0000e048 <rb_lib_init@plt>:
    e048:	add	ip, pc, #0, 12
    e04c:	add	ip, ip, #76, 20	; 0x4c000
    e050:	ldr	pc, [ip, #1380]!	; 0x564

0000e054 <delete_one_address_conf@plt>:
    e054:	add	ip, pc, #0, 12
    e058:	add	ip, ip, #76, 20	; 0x4c000
    e05c:	ldr	pc, [ip, #1372]!	; 0x55c

0000e060 <rb_linebuf_init@plt>:
    e060:	add	ip, pc, #0, 12
    e064:	add	ip, ip, #76, 20	; 0x4c000
    e068:	ldr	pc, [ip, #1364]!	; 0x554

0000e06c <rb_radixtree_foreach_cur@plt>:
    e06c:	add	ip, pc, #0, 12
    e070:	add	ip, ip, #76, 20	; 0x4c000
    e074:	ldr	pc, [ip, #1356]!	; 0x54c

0000e078 <valid_username@plt>:
    e078:	add	ip, pc, #0, 12
    e07c:	add	ip, ip, #76, 20	; 0x4c000
    e080:	ldr	pc, [ip, #1348]!	; 0x544

0000e084 <valid_hostname@plt>:
    e084:	add	ip, pc, #0, 12
    e088:	add	ip, ip, #76, 20	; 0x4c000
    e08c:	ldr	pc, [ip, #1340]!	; 0x53c

0000e090 <memchr@plt>:
    e090:	add	ip, pc, #0, 12
    e094:	add	ip, ip, #76, 20	; 0x4c000
    e098:	ldr	pc, [ip, #1332]!	; 0x534

0000e09c <access@plt>:
    e09c:	add	ip, pc, #0, 12
    e0a0:	add	ip, ip, #76, 20	; 0x4c000
    e0a4:	ldr	pc, [ip, #1324]!	; 0x52c

0000e0a8 <rand@plt>:
    e0a8:	add	ip, pc, #0, 12
    e0ac:	add	ip, ip, #76, 20	; 0x4c000
    e0b0:	ldr	pc, [ip, #1316]!	; 0x524

0000e0b4 <ilog@plt>:
    e0b4:	add	ip, pc, #0, 12
    e0b8:	add	ip, ip, #76, 20	; 0x4c000
    e0bc:	ldr	pc, [ip, #1308]!	; 0x51c

0000e0c0 <rb_radixtree_delete@plt>:
    e0c0:	add	ip, pc, #0, 12
    e0c4:	add	ip, ip, #76, 20	; 0x4c000
    e0c8:	ldr	pc, [ip, #1300]!	; 0x514

0000e0cc <rb_dictionary_destroy@plt>:
    e0cc:	add	ip, pc, #0, 12
    e0d0:	add	ip, ip, #76, 20	; 0x4c000
    e0d4:	ldr	pc, [ip, #1292]!	; 0x50c

0000e0d8 <find_server_conf@plt>:
    e0d8:	add	ip, pc, #0, 12
    e0dc:	add	ip, ip, #76, 20	; 0x4c000
    e0e0:	ldr	pc, [ip, #1284]!	; 0x504

0000e0e4 <destroy_channel@plt>:
    e0e4:	add	ip, pc, #0, 12
    e0e8:	add	ip, ip, #76, 20	; 0x4c000
    e0ec:	ldr	pc, [ip, #1276]!	; 0x4fc

0000e0f0 <fclose@plt>:
    e0f0:	add	ip, pc, #0, 12
    e0f4:	add	ip, ip, #76, 20	; 0x4c000
    e0f8:	ldr	pc, [ip, #1268]!	; 0x4f4

0000e0fc <open_logfiles@plt>:
    e0fc:	add	ip, pc, #0, 12
    e100:	add	ip, ip, #76, 20	; 0x4c000
    e104:	ldr	pc, [ip, #1260]!	; 0x4ec

0000e108 <collapse@plt>:
    e108:	add	ip, pc, #0, 12
    e10c:	add	ip, ip, #76, 20	; 0x4c000
    e110:	ldr	pc, [ip, #1252]!	; 0x4e4

0000e114 <match@plt>:
    e114:	add	ip, pc, #0, 12
    e118:	add	ip, ip, #76, 20	; 0x4c000
    e11c:	ldr	pc, [ip, #1244]!	; 0x4dc

0000e120 <close_listener@plt>:
    e120:	add	ip, pc, #0, 12
    e124:	add	ip, ip, #76, 20	; 0x4c000
    e128:	ldr	pc, [ip, #1236]!	; 0x4d4

0000e12c <free_nd_entry@plt>:
    e12c:	add	ip, pc, #0, 12
    e130:	add	ip, ip, #76, 20	; 0x4c000
    e134:	ldr	pc, [ip, #1228]!	; 0x4cc

0000e138 <add_reject@plt>:
    e138:	add	ip, pc, #0, 12
    e13c:	add	ip, ip, #76, 20	; 0x4c000
    e140:	ldr	pc, [ip, #1220]!	; 0x4c4

0000e144 <usage@plt>:
    e144:	add	ip, pc, #0, 12
    e148:	add	ip, ip, #76, 20	; 0x4c000
    e14c:	ldr	pc, [ip, #1212]!	; 0x4bc

0000e150 <monitor_signoff@plt>:
    e150:	add	ip, pc, #0, 12
    e154:	add	ip, ip, #76, 20	; 0x4c000
    e158:	ldr	pc, [ip, #1204]!	; 0x4b4

0000e15c <ieof@plt>:
    e15c:	add	ip, pc, #0, 12
    e160:	add	ip, ip, #76, 20	; 0x4c000
    e164:	ldr	pc, [ip, #1196]!	; 0x4ac

0000e168 <log_client_name@plt>:
    e168:	add	ip, pc, #0, 12
    e16c:	add	ip, ip, #76, 20	; 0x4c000
    e170:	ldr	pc, [ip, #1188]!	; 0x4a4

0000e174 <find_hostname@plt>:
    e174:	add	ip, pc, #0, 12
    e178:	add	ip, ip, #76, 20	; 0x4c000
    e17c:	ldr	pc, [ip, #1180]!	; 0x49c

0000e180 <substitution_free@plt>:
    e180:	add	ip, pc, #0, 12
    e184:	add	ip, ip, #76, 20	; 0x4c000
    e188:	ldr	pc, [ip, #1172]!	; 0x494

0000e18c <yylex@plt>:
    e18c:	add	ip, pc, #0, 12
    e190:	add	ip, ip, #76, 20	; 0x4c000
    e194:	ldr	pc, [ip, #1164]!	; 0x48c

0000e198 <make_and_lookup@plt>:
    e198:	add	ip, pc, #0, 12
    e19c:	add	ip, ip, #76, 20	; 0x4c000
    e1a0:	ldr	pc, [ip, #1156]!	; 0x484

0000e1a4 <clear_s_newconf@plt>:
    e1a4:	add	ip, pc, #0, 12
    e1a8:	add	ip, ip, #76, 20	; 0x4c000
    e1ac:	ldr	pc, [ip, #1148]!	; 0x47c

0000e1b0 <find_xline@plt>:
    e1b0:	add	ip, pc, #0, 12
    e1b4:	add	ip, ip, #76, 20	; 0x4c000
    e1b8:	ldr	pc, [ip, #1140]!	; 0x474

0000e1bc <sendto_channel_local_with_capability_butone@plt>:
    e1bc:	add	ip, pc, #0, 12
    e1c0:	add	ip, ip, #76, 20	; 0x4c000
    e1c4:	ldr	pc, [ip, #1132]!	; 0x46c

0000e1c8 <del_from_resv_hash@plt>:
    e1c8:	add	ip, pc, #0, 12
    e1cc:	add	ip, ip, #76, 20	; 0x4c000
    e1d0:	ldr	pc, [ip, #1124]!	; 0x464

0000e1d4 <clear_out_address_conf@plt>:
    e1d4:	add	ip, pc, #0, 12
    e1d8:	add	ip, ip, #76, 20	; 0x4c000
    e1dc:	ldr	pc, [ip, #1116]!	; 0x45c

0000e1e0 <find_person@plt>:
    e1e0:	add	ip, pc, #0, 12
    e1e4:	add	ip, ip, #76, 20	; 0x4c000
    e1e8:	ldr	pc, [ip, #1108]!	; 0x454

0000e1ec <sigemptyset@plt>:
    e1ec:	add	ip, pc, #0, 12
    e1f0:	add	ip, ip, #76, 20	; 0x4c000
    e1f4:	ldr	pc, [ip, #1100]!	; 0x44c

0000e1f8 <rb_fsnprint@plt>:
    e1f8:	add	ip, pc, #0, 12
    e1fc:	add	ip, ip, #76, 20	; 0x4c000
    e200:	ldr	pc, [ip, #1092]!	; 0x444

0000e204 <authd_deferred_client@plt>:
    e204:	add	ip, pc, #0, 12
    e208:	add	ip, ip, #76, 20	; 0x4c000
    e20c:	ldr	pc, [ip, #1084]!	; 0x43c

0000e210 <rb_set_buffers@plt>:
    e210:	add	ip, pc, #0, 12
    e214:	add	ip, ip, #76, 20	; 0x4c000
    e218:	ldr	pc, [ip, #1076]!	; 0x434

0000e21c <capability_require@plt>:
    e21c:	add	ip, pc, #0, 12
    e220:	add	ip, ip, #76, 20	; 0x4c000
    e224:	ldr	pc, [ip, #1068]!	; 0x42c

0000e228 <whowas_get_history@plt>:
    e228:	add	ip, pc, #0, 12
    e22c:	add	ip, ip, #76, 20	; 0x4c000
    e230:	ldr	pc, [ip, #1060]!	; 0x424

0000e234 <fork@plt>:
    e234:	add	ip, pc, #0, 12
    e238:	add	ip, ip, #76, 20	; 0x4c000
    e23c:	ldr	pc, [ip, #1052]!	; 0x41c

0000e240 <is_banned@plt>:
    e240:	add	ip, pc, #0, 12
    e244:	add	ip, ip, #76, 20	; 0x4c000
    e248:	ldr	pc, [ip, #1044]!	; 0x414

0000e24c <add_hook_prio@plt>:
    e24c:	add	ip, pc, #0, 12
    e250:	add	ip, ip, #76, 20	; 0x4c000
    e254:	ldr	pc, [ip, #1036]!	; 0x40c

0000e258 <find_prop_ban@plt>:
    e258:	add	ip, pc, #0, 12
    e25c:	add	ip, ip, #76, 20	; 0x4c000
    e260:	ldr	pc, [ip, #1028]!	; 0x404

0000e264 <readdir@plt>:
    e264:	add	ip, pc, #0, 12
    e268:	add	ip, ip, #76, 20	; 0x4c000
    e26c:	ldr	pc, [ip, #1020]!	; 0x3fc

0000e270 <rb_note@plt>:
    e270:	add	ip, pc, #0, 12
    e274:	add	ip, ip, #76, 20	; 0x4c000
    e278:	ldr	pc, [ip, #1012]!	; 0x3f4

0000e27c <strrchr@plt>:
    e27c:	add	ip, pc, #0, 12
    e280:	add	ip, ip, #76, 20	; 0x4c000
    e284:	ldr	pc, [ip, #1004]!	; 0x3ec

0000e288 <del_from_channel_hash@plt>:
    e288:	add	ip, pc, #0, 12
    e28c:	add	ip, ip, #76, 20	; 0x4c000
    e290:	ldr	pc, [ip, #996]!	; 0x3e4

0000e294 <rb_spawn_process@plt>:
    e294:	add	ip, pc, #0, 12
    e298:	add	ip, ip, #76, 20	; 0x4c000
    e29c:	ldr	pc, [ip, #988]!	; 0x3dc

0000e2a0 <rb_pipe@plt>:
    e2a0:	add	ip, pc, #0, 12
    e2a4:	add	ip, ip, #76, 20	; 0x4c000
    e2a8:	ldr	pc, [ip, #980]!	; 0x3d4

0000e2ac <rb_errstr@plt>:
    e2ac:	add	ip, pc, #0, 12
    e2b0:	add	ip, ip, #76, 20	; 0x4c000
    e2b4:	ldr	pc, [ip, #972]!	; 0x3cc

0000e2b8 <scache_connect@plt>:
    e2b8:	add	ip, pc, #0, 12
    e2bc:	add	ip, ip, #76, 20	; 0x4c000
    e2c0:	ldr	pc, [ip, #964]!	; 0x3c4

0000e2c4 <smalldate@plt>:
    e2c4:	add	ip, pc, #0, 12
    e2c8:	add	ip, ip, #76, 20	; 0x4c000
    e2cc:	ldr	pc, [ip, #956]!	; 0x3bc

0000e2d0 <del_id@plt>:
    e2d0:	add	ip, pc, #0, 12
    e2d4:	add	ip, ip, #76, 20	; 0x4c000
    e2d8:	ldr	pc, [ip, #948]!	; 0x3b4

0000e2dc <remove_user_from_channel@plt>:
    e2dc:	add	ip, pc, #0, 12
    e2e0:	add	ip, ip, #76, 20	; 0x4c000
    e2e4:	ldr	pc, [ip, #940]!	; 0x3ac

0000e2e8 <msgbuf_unparse_prefix@plt>:
    e2e8:	add	ip, pc, #0, 12
    e2ec:	add	ip, ip, #76, 20	; 0x4c000
    e2f0:	ldr	pc, [ip, #932]!	; 0x3a4

0000e2f4 <yy_flush_buffer@plt>:
    e2f4:	add	ip, pc, #0, 12
    e2f8:	add	ip, ip, #76, 20	; 0x4c000
    e2fc:	ldr	pc, [ip, #924]!	; 0x39c

0000e300 <rb_dictionary_foreach_cur@plt>:
    e300:	add	ip, pc, #0, 12
    e304:	add	ip, ip, #76, 20	; 0x4c000
    e308:	ldr	pc, [ip, #916]!	; 0x394

0000e30c <capability_orphan@plt>:
    e30c:	add	ip, pc, #0, 12
    e310:	add	ip, ip, #76, 20	; 0x4c000
    e314:	ldr	pc, [ip, #908]!	; 0x38c

0000e318 <rb_radixtree_foreach_start@plt>:
    e318:	add	ip, pc, #0, 12
    e31c:	add	ip, ip, #76, 20	; 0x4c000
    e320:	ldr	pc, [ip, #900]!	; 0x384

0000e324 <start_wsockd@plt>:
    e324:	add	ip, pc, #0, 12
    e328:	add	ip, ip, #76, 20	; 0x4c000
    e32c:	ldr	pc, [ip, #892]!	; 0x37c

0000e330 <add_tcp_listener@plt>:
    e330:	add	ip, pc, #0, 12
    e334:	add	ip, ip, #76, 20	; 0x4c000
    e338:	ldr	pc, [ip, #884]!	; 0x374

0000e33c <rb_lib_loop@plt>:
    e33c:	add	ip, pc, #0, 12
    e340:	add	ip, ip, #76, 20	; 0x4c000
    e344:	ldr	pc, [ip, #876]!	; 0x36c

0000e348 <add_hook@plt>:
    e348:	add	ip, pc, #0, 12
    e34c:	add	ip, ip, #76, 20	; 0x4c000
    e350:	ldr	pc, [ip, #868]!	; 0x364

0000e354 <is_quieted@plt>:
    e354:	add	ip, pc, #0, 12
    e358:	add	ip, ip, #76, 20	; 0x4c000
    e35c:	ldr	pc, [ip, #860]!	; 0x35c

0000e360 <get_extban_string@plt>:
    e360:	add	ip, pc, #0, 12
    e364:	add	ip, ip, #76, 20	; 0x4c000
    e368:	ldr	pc, [ip, #852]!	; 0x354

0000e36c <ident_check_enable@plt>:
    e36c:	add	ip, pc, #0, 12
    e370:	add	ip, ip, #76, 20	; 0x4c000
    e374:	ldr	pc, [ip, #844]!	; 0x34c

0000e378 <remove_hook@plt>:
    e378:	add	ip, pc, #0, 12
    e37c:	add	ip, ip, #76, 20	; 0x4c000
    e380:	ldr	pc, [ip, #836]!	; 0x344

0000e384 <rb_bh_usage@plt>:
    e384:	add	ip, pc, #0, 12
    e388:	add	ip, ip, #76, 20	; 0x4c000
    e38c:	ldr	pc, [ip, #828]!	; 0x33c

0000e390 <check_dlines@plt>:
    e390:	add	ip, pc, #0, 12
    e394:	add	ip, ip, #76, 20	; 0x4c000
    e398:	ldr	pc, [ip, #820]!	; 0x334

0000e39c <substitution_parse@plt>:
    e39c:	add	ip, pc, #0, 12
    e3a0:	add	ip, ip, #76, 20	; 0x4c000
    e3a4:	ldr	pc, [ip, #812]!	; 0x32c

0000e3a8 <sprintf@plt>:
    e3a8:	add	ip, pc, #0, 12
    e3ac:	add	ip, ip, #76, 20	; 0x4c000
    e3b0:	ldr	pc, [ip, #804]!	; 0x324

0000e3b4 <rb_strcasestr@plt>:
    e3b4:	add	ip, pc, #0, 12
    e3b8:	add	ip, ip, #76, 20	; 0x4c000
    e3bc:	ldr	pc, [ip, #796]!	; 0x31c

0000e3c0 <close_logfiles@plt>:
    e3c0:	add	ip, pc, #0, 12
    e3c4:	add	ip, ip, #76, 20	; 0x4c000
    e3c8:	ldr	pc, [ip, #788]!	; 0x314

0000e3cc <whowas_add_history@plt>:
    e3cc:	add	ip, pc, #0, 12
    e3d0:	add	ip, ip, #76, 20	; 0x4c000
    e3d4:	ldr	pc, [ip, #780]!	; 0x30c

0000e3d8 <del_from_cli_connid_hash@plt>:
    e3d8:	add	ip, pc, #0, 12
    e3dc:	add	ip, ip, #76, 20	; 0x4c000
    e3e0:	ldr	pc, [ip, #772]!	; 0x304

0000e3e4 <free_remote_conf@plt>:
    e3e4:	add	ip, pc, #0, 12
    e3e8:	add	ip, ip, #76, 20	; 0x4c000
    e3ec:	ldr	pc, [ip, #764]!	; 0x2fc

0000e3f0 <set_authd_timeout@plt>:
    e3f0:	add	ip, pc, #0, 12
    e3f4:	add	ip, ip, #76, 20	; 0x4c000
    e3f8:	ldr	pc, [ip, #756]!	; 0x2f4

0000e3fc <getsockname@plt>:
    e3fc:	add	ip, pc, #0, 12
    e400:	add	ip, ip, #76, 20	; 0x4c000
    e404:	ldr	pc, [ip, #748]!	; 0x2ec

0000e408 <error_exit_client@plt>:
    e408:	add	ip, pc, #0, 12
    e40c:	add	ip, ip, #76, 20	; 0x4c000
    e410:	ldr	pc, [ip, #740]!	; 0x2e4

0000e414 <sendto_one_notice@plt>:
    e414:	add	ip, pc, #0, 12
    e418:	add	ip, ip, #76, 20	; 0x4c000
    e41c:	ldr	pc, [ip, #732]!	; 0x2dc

0000e420 <add_top_conf@plt>:
    e420:	add	ip, pc, #0, 12
    e424:	add	ip, ip, #76, 20	; 0x4c000
    e428:	ldr	pc, [ip, #724]!	; 0x2d4

0000e42c <rehash_bans@plt>:
    e42c:	add	ip, pc, #0, 12
    e430:	add	ip, ip, #76, 20	; 0x4c000
    e434:	ldr	pc, [ip, #716]!	; 0x2cc

0000e438 <free_ban@plt>:
    e438:	add	ip, pc, #0, 12
    e43c:	add	ip, ip, #76, 20	; 0x4c000
    e440:	ldr	pc, [ip, #708]!	; 0x2c4

0000e444 <send_umode_out@plt>:
    e444:	add	ip, pc, #0, 12
    e448:	add	ip, ip, #76, 20	; 0x4c000
    e44c:	ldr	pc, [ip, #700]!	; 0x2bc

0000e450 <vsnprintf@plt>:
    e450:	add	ip, pc, #0, 12
    e454:	add	ip, ip, #76, 20	; 0x4c000
    e458:	ldr	pc, [ip, #692]!	; 0x2b4

0000e45c <rb_linebuf_put@plt>:
    e45c:	add	ip, pc, #0, 12
    e460:	add	ip, ip, #76, 20	; 0x4c000
    e464:	ldr	pc, [ip, #684]!	; 0x2ac

0000e468 <atoi@plt>:
    e468:	add	ip, pc, #0, 12
    e46c:	add	ip, ip, #76, 20	; 0x4c000
    e470:	ldr	pc, [ip, #676]!	; 0x2a4

0000e474 <find_named_person@plt>:
    e474:	add	ip, pc, #0, 12
    e478:	add	ip, ip, #76, 20	; 0x4c000
    e47c:	ldr	pc, [ip, #668]!	; 0x29c

0000e480 <sendto_common_channels_local_butone@plt>:
    e480:	add	ip, pc, #0, 12
    e484:	add	ip, ip, #76, 20	; 0x4c000
    e488:	ldr	pc, [ip, #660]!	; 0x294

0000e48c <rb_helper_start@plt>:
    e48c:	add	ip, pc, #0, 12
    e490:	add	ip, ip, #76, 20	; 0x4c000
    e494:	ldr	pc, [ip, #652]!	; 0x28c

0000e498 <find_exact_conf_by_address@plt>:
    e498:	add	ip, pc, #0, 12
    e49c:	add	ip, ip, #76, 20	; 0x4c000
    e4a0:	ldr	pc, [ip, #644]!	; 0x284

0000e4a4 <add_isupport@plt>:
    e4a4:	add	ip, pc, #0, 12
    e4a8:	add	ip, ip, #76, 20	; 0x4c000
    e4ac:	ldr	pc, [ip, #636]!	; 0x27c

0000e4b0 <get_wsockd_count@plt>:
    e4b0:	add	ip, pc, #0, 12
    e4b4:	add	ip, ip, #76, 20	; 0x4c000
    e4b8:	ldr	pc, [ip, #628]!	; 0x274

0000e4bc <rb_get_sockerr@plt>:
    e4bc:	add	ip, pc, #0, 12
    e4c0:	add	ip, ip, #76, 20	; 0x4c000
    e4c4:	ldr	pc, [ip, #620]!	; 0x26c

0000e4c8 <strpbrk@plt>:
    e4c8:	add	ip, pc, #0, 12
    e4cc:	add	ip, ip, #76, 20	; 0x4c000
    e4d0:	ldr	pc, [ip, #612]!	; 0x264

0000e4d4 <parse@plt>:
    e4d4:	add	ip, pc, #0, 12
    e4d8:	add	ip, ip, #76, 20	; 0x4c000
    e4dc:	ldr	pc, [ip, #604]!	; 0x25c

0000e4e0 <whowas_off_history@plt>:
    e4e0:	add	ip, pc, #0, 12
    e4e4:	add	ip, ip, #76, 20	; 0x4c000
    e4e8:	ldr	pc, [ip, #596]!	; 0x254

0000e4ec <attach_server_conf@plt>:
    e4ec:	add	ip, pc, #0, 12
    e4f0:	add	ip, ip, #76, 20	; 0x4c000
    e4f4:	ldr	pc, [ip, #588]!	; 0x24c

0000e4f8 <find_id@plt>:
    e4f8:	add	ip, pc, #0, 12
    e4fc:	add	ip, ip, #76, 20	; 0x4c000
    e500:	ldr	pc, [ip, #580]!	; 0x244

0000e504 <init_uid@plt>:
    e504:	add	ip, pc, #0, 12
    e508:	add	ip, ip, #76, 20	; 0x4c000
    e50c:	ldr	pc, [ip, #572]!	; 0x23c

0000e510 <rb_strlcpy@plt>:
    e510:	add	ip, pc, #0, 12
    e514:	add	ip, ip, #76, 20	; 0x4c000
    e518:	ldr	pc, [ip, #564]!	; 0x234

0000e51c <cinclude@plt>:
    e51c:	add	ip, pc, #0, 12
    e520:	add	ip, ip, #76, 20	; 0x4c000
    e524:	ldr	pc, [ip, #556]!	; 0x22c

0000e528 <fgets_unlocked@plt>:
    e528:	add	ip, pc, #0, 12
    e52c:	add	ip, ip, #76, 20	; 0x4c000
    e530:	ldr	pc, [ip, #548]!	; 0x224

0000e534 <exit_client@plt>:
    e534:	add	ip, pc, #0, 12
    e538:	add	ip, ip, #76, 20	; 0x4c000
    e53c:	ldr	pc, [ip, #540]!	; 0x21c

0000e540 <msgbuf_cache_get@plt>:
    e540:	add	ip, pc, #0, 12
    e544:	add	ip, ip, #76, 20	; 0x4c000
    e548:	ldr	pc, [ip, #532]!	; 0x214

0000e54c <rb_linebuf_get@plt>:
    e54c:	add	ip, pc, #0, 12
    e550:	add	ip, ip, #76, 20	; 0x4c000
    e554:	ldr	pc, [ip, #524]!	; 0x20c

0000e558 <rb_destroy_patricia@plt>:
    e558:	add	ip, pc, #0, 12
    e55c:	add	ip, ip, #76, 20	; 0x4c000
    e560:	ldr	pc, [ip, #516]!	; 0x204

0000e564 <mod_add_path@plt>:
    e564:	add	ip, pc, #0, 12
    e568:	add	ip, ip, #76, 20	; 0x4c000
    e56c:	ldr	pc, [ip, #508]!	; 0x1fc

0000e570 <rb_get_type@plt>:
    e570:	add	ip, pc, #0, 12
    e574:	add	ip, ip, #76, 20	; 0x4c000
    e578:	ldr	pc, [ip, #500]!	; 0x1f4

0000e57c <rb_bind@plt>:
    e57c:	add	ip, pc, #0, 12
    e580:	add	ip, ip, #76, 20	; 0x4c000
    e584:	ldr	pc, [ip, #492]!	; 0x1ec

0000e588 <init_monitor@plt>:
    e588:	add	ip, pc, #0, 12
    e58c:	add	ip, ip, #76, 20	; 0x4c000
    e590:	ldr	pc, [ip, #484]!	; 0x1e4

0000e594 <privilegeset_in_set@plt>:
    e594:	add	ip, pc, #0, 12
    e598:	add	ip, ip, #76, 20	; 0x4c000
    e59c:	ldr	pc, [ip, #476]!	; 0x1dc

0000e5a0 <rb_dictionary_foreach_next@plt>:
    e5a0:	add	ip, pc, #0, 12
    e5a4:	add	ip, ip, #76, 20	; 0x4c000
    e5a8:	ldr	pc, [ip, #468]!	; 0x1d4

0000e5ac <init_cache@plt>:
    e5ac:	add	ip, pc, #0, 12
    e5b0:	add	ip, ip, #76, 20	; 0x4c000
    e5b4:	ldr	pc, [ip, #460]!	; 0x1cc

0000e5b8 <lt_dlsym@plt>:
    e5b8:	add	ip, pc, #0, 12
    e5bc:	add	ip, ip, #76, 20	; 0x4c000
    e5c0:	ldr	pc, [ip, #452]!	; 0x1c4

0000e5c4 <init_client@plt>:
    e5c4:	add	ip, pc, #0, 12
    e5c8:	add	ip, ip, #76, 20	; 0x4c000
    e5cc:	ldr	pc, [ip, #444]!	; 0x1bc

0000e5d0 <conf_end_block@plt>:
    e5d0:	add	ip, pc, #0, 12
    e5d4:	add	ip, ip, #76, 20	; 0x4c000
    e5d8:	ldr	pc, [ip, #436]!	; 0x1b4

0000e5dc <rb_match_string@plt>:
    e5dc:	add	ip, pc, #0, 12
    e5e0:	add	ip, ip, #76, 20	; 0x4c000
    e5e4:	ldr	pc, [ip, #428]!	; 0x1ac

0000e5e8 <init_reject@plt>:
    e5e8:	add	ip, pc, #0, 12
    e5ec:	add	ip, ip, #76, 20	; 0x4c000
    e5f0:	ldr	pc, [ip, #420]!	; 0x1a4

0000e5f4 <check_splitmode@plt>:
    e5f4:	add	ip, pc, #0, 12
    e5f8:	add	ip, ip, #76, 20	; 0x4c000
    e5fc:	ldr	pc, [ip, #412]!	; 0x19c

0000e600 <hash_find_resv@plt>:
    e600:	add	ip, pc, #0, 12
    e604:	add	ip, ip, #76, 20	; 0x4c000
    e608:	ldr	pc, [ip, #404]!	; 0x194

0000e60c <show_ip@plt>:
    e60c:	add	ip, pc, #0, 12
    e610:	add	ip, ip, #76, 20	; 0x4c000
    e614:	ldr	pc, [ip, #396]!	; 0x18c

0000e618 <msgbuf_parse@plt>:
    e618:	add	ip, pc, #0, 12
    e61c:	add	ip, ip, #76, 20	; 0x4c000
    e620:	ldr	pc, [ip, #388]!	; 0x184

0000e624 <rb_radixtree_size@plt>:
    e624:	add	ip, pc, #0, 12
    e628:	add	ip, ip, #76, 20	; 0x4c000
    e62c:	ldr	pc, [ip, #380]!	; 0x17c

0000e630 <privilegeset_unref@plt>:
    e630:	add	ip, pc, #0, 12
    e634:	add	ip, ip, #76, 20	; 0x4c000
    e638:	ldr	pc, [ip, #372]!	; 0x174

0000e63c <umask@plt>:
    e63c:	add	ip, pc, #0, 12
    e640:	add	ip, ip, #76, 20	; 0x4c000
    e644:	ldr	pc, [ip, #364]!	; 0x16c

0000e648 <free_channel_list@plt>:
    e648:	add	ip, pc, #0, 12
    e64c:	add	ip, ip, #76, 20	; 0x4c000
    e650:	ldr	pc, [ip, #356]!	; 0x164

0000e654 <call_hook@plt>:
    e654:	add	ip, pc, #0, 12
    e658:	add	ip, ip, #76, 20	; 0x4c000
    e65c:	ldr	pc, [ip, #348]!	; 0x15c

0000e660 <rb_lib_version@plt>:
    e660:	add	ip, pc, #0, 12
    e664:	add	ip, ip, #76, 20	; 0x4c000
    e668:	ldr	pc, [ip, #340]!	; 0x154

0000e66c <isatty@plt>:
    e66c:	add	ip, pc, #0, 12
    e670:	add	ip, ip, #76, 20	; 0x4c000
    e674:	ldr	pc, [ip, #332]!	; 0x14c

0000e678 <reconstruct_parv@plt>:
    e678:	add	ip, pc, #0, 12
    e67c:	add	ip, ip, #76, 20	; 0x4c000
    e680:	ldr	pc, [ip, #324]!	; 0x144

0000e684 <check_reject@plt>:
    e684:	add	ip, pc, #0, 12
    e688:	add	ip, ip, #76, 20	; 0x4c000
    e68c:	ldr	pc, [ip, #316]!	; 0x13c

0000e690 <start_ssldaemon@plt>:
    e690:	add	ip, pc, #0, 12
    e694:	add	ip, ip, #76, 20	; 0x4c000
    e698:	ldr	pc, [ip, #308]!	; 0x134

0000e69c <init_s_conf@plt>:
    e69c:	add	ip, pc, #0, 12
    e6a0:	add	ip, ip, #76, 20	; 0x4c000
    e6a4:	ldr	pc, [ip, #300]!	; 0x12c

0000e6a8 <fputs@plt>:
    e6a8:	add	ip, pc, #0, 12
    e6ac:	add	ip, ip, #76, 20	; 0x4c000
    e6b0:	ldr	pc, [ip, #292]!	; 0x124

0000e6b4 <mod_add_cmd@plt>:
    e6b4:	add	ip, pc, #0, 12
    e6b8:	add	ip, ip, #76, 20	; 0x4c000
    e6bc:	ldr	pc, [ip, #284]!	; 0x11c

0000e6c0 <conf_report_warning@plt>:
    e6c0:	add	ip, pc, #0, 12
    e6c4:	add	ip, ip, #76, 20	; 0x4c000
    e6c8:	ldr	pc, [ip, #276]!	; 0x114

0000e6cc <abort@plt>:
    e6cc:	add	ip, pc, #0, 12
    e6d0:	add	ip, ip, #76, 20	; 0x4c000
    e6d4:	ldr	pc, [ip, #268]!	; 0x10c

0000e6d8 <check_klines@plt>:
    e6d8:	add	ip, pc, #0, 12
    e6dc:	add	ip, ip, #76, 20	; 0x4c000
    e6e0:	ldr	pc, [ip, #260]!	; 0x104

0000e6e4 <rb_dictionary_retrieve@plt>:
    e6e4:	add	ip, pc, #0, 12
    e6e8:	add	ip, ip, #76, 20	; 0x4c000
    e6ec:	ldr	pc, [ip, #252]!	; 0xfc

0000e6f0 <connid_put@plt>:
    e6f0:	add	ip, pc, #0, 12
    e6f4:	add	ip, ip, #76, 20	; 0x4c000
    e6f8:	ldr	pc, [ip, #244]!	; 0xf4

0000e6fc <get_printable_conf@plt>:
    e6fc:	add	ip, pc, #0, 12
    e700:	add	ip, ip, #76, 20	; 0x4c000
    e704:	ldr	pc, [ip, #236]!	; 0xec

0000e708 <rb_bh_free@plt>:
    e708:	add	ip, pc, #0, 12
    e70c:	add	ip, ip, #76, 20	; 0x4c000
    e710:	ldr	pc, [ip, #228]!	; 0xe4

0000e714 <authd_abort_client@plt>:
    e714:	add	ip, pc, #0, 12
    e718:	add	ip, ip, #76, 20	; 0x4c000
    e71c:	ldr	pc, [ip, #220]!	; 0xdc

0000e720 <BIO_new_file@plt>:
    e720:	add	ip, pc, #0, 12
    e724:	add	ip, ip, #76, 20	; 0x4c000
    e728:	ldr	pc, [ip, #212]!	; 0xd4

0000e72c <close@plt>:
    e72c:	add	ip, pc, #0, 12
    e730:	add	ip, ip, #76, 20	; 0x4c000
    e734:	ldr	pc, [ip, #204]!	; 0xcc

0000e738 <rb_write@plt>:
    e738:	add	ip, pc, #0, 12
    e73c:	add	ip, ip, #76, 20	; 0x4c000
    e740:	ldr	pc, [ip, #196]!	; 0xc4

0000e744 <rb_init_prng@plt>:
    e744:	add	ip, pc, #0, 12
    e748:	add	ip, ip, #76, 20	; 0x4c000
    e74c:	ldr	pc, [ip, #188]!	; 0xbc

0000e750 <irccmp@plt>:
    e750:	add	ip, pc, #0, 12
    e754:	add	ip, ip, #76, 20	; 0x4c000
    e758:	ldr	pc, [ip, #180]!	; 0xb4

0000e75c <closedir@plt>:
    e75c:	add	ip, pc, #0, 12
    e760:	add	ip, ip, #76, 20	; 0x4c000
    e764:	ldr	pc, [ip, #172]!	; 0xac

0000e768 <find_tgchange@plt>:
    e768:	add	ip, pc, #0, 12
    e76c:	add	ip, ip, #76, 20	; 0x4c000
    e770:	ldr	pc, [ip, #164]!	; 0xa4

0000e774 <conf_start_block@plt>:
    e774:	add	ip, pc, #0, 12
    e778:	add	ip, ip, #76, 20	; 0x4c000
    e77c:	ldr	pc, [ip, #156]!	; 0x9c

0000e780 <clear_out_address_conf_bans@plt>:
    e780:	add	ip, pc, #0, 12
    e784:	add	ip, ip, #76, 20	; 0x4c000
    e788:	ldr	pc, [ip, #148]!	; 0x94

0000e78c <find_dline@plt>:
    e78c:	add	ip, pc, #0, 12
    e790:	add	ip, ip, #76, 20	; 0x4c000
    e794:	ldr	pc, [ip, #140]!	; 0x8c

0000e798 <msgbuf_cache_init@plt>:
    e798:	add	ip, pc, #0, 12
    e79c:	add	ip, ip, #76, 20	; 0x4c000
    e7a0:	ldr	pc, [ip, #132]!	; 0x84

0000e7a4 <init_isupport@plt>:
    e7a4:	add	ip, pc, #0, 12
    e7a8:	add	ip, ip, #76, 20	; 0x4c000
    e7ac:	ldr	pc, [ip, #124]!	; 0x7c

0000e7b0 <init_wsockd@plt>:
    e7b0:	add	ip, pc, #0, 12
    e7b4:	add	ip, ip, #76, 20	; 0x4c000
    e7b8:	ldr	pc, [ip, #116]!	; 0x74

0000e7bc <free_class@plt>:
    e7bc:	add	ip, pc, #0, 12
    e7c0:	add	ip, ip, #76, 20	; 0x4c000
    e7c4:	ldr	pc, [ip, #108]!	; 0x6c

0000e7c8 <clean_resv_nick@plt>:
    e7c8:	add	ip, pc, #0, 12
    e7cc:	add	ip, ip, #76, 20	; 0x4c000
    e7d0:	ldr	pc, [ip, #100]!	; 0x64

0000e7d4 <rb_strlcat@plt>:
    e7d4:	add	ip, pc, #0, 12
    e7d8:	add	ip, ip, #76, 20	; 0x4c000
    e7dc:	ldr	pc, [ip, #92]!	; 0x5c

0000e7e0 <__assert_fail@plt>:
    e7e0:	add	ip, pc, #0, 12
    e7e4:	add	ip, ip, #76, 20	; 0x4c000
    e7e8:	ldr	pc, [ip, #84]!	; 0x54

0000e7ec <rb_event_addonce@plt>:
    e7ec:	add	ip, pc, #0, 12
    e7f0:	add	ip, ip, #76, 20	; 0x4c000
    e7f4:	ldr	pc, [ip, #76]!	; 0x4c

0000e7f8 <send_queued@plt>:
    e7f8:	add	ip, pc, #0, 12
    e7fc:	add	ip, ip, #76, 20	; 0x4c000
    e800:	ldr	pc, [ip, #68]!	; 0x44

0000e804 <construct_umodebuf@plt>:
    e804:	add	ip, pc, #0, 12
    e808:	add	ip, ip, #76, 20	; 0x4c000
    e80c:	ldr	pc, [ip, #60]!	; 0x3c

0000e810 <clear_scache_hash_table@plt>:
    e810:	add	ip, pc, #0, 12
    e814:	add	ip, ip, #76, 20	; 0x4c000
    e818:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

0000e820 <call_weak_fn>:
    e820:	ldr	r3, [pc, #20]	; e83c <call_weak_fn+0x1c>
    e824:	ldr	r2, [pc, #20]	; e840 <call_weak_fn+0x20>
    e828:	add	r3, pc, r3
    e82c:	ldr	r2, [r3, r2]
    e830:	cmp	r2, #0
    e834:	bxeq	lr
    e838:	b	dbc8 <__gmon_start__@plt>
    e83c:	.word	0x0004b7d0
    e840:	.word	0x000009c8

0000e844 <deregister_tm_clones>:
    e844:	ldr	r0, [pc, #44]	; e878 <deregister_tm_clones+0x34>
    e848:	ldr	r3, [pc, #44]	; e87c <deregister_tm_clones+0x38>
    e84c:	add	r0, pc, r0
    e850:	add	r3, pc, r3
    e854:	cmp	r3, r0
    e858:	ldr	r3, [pc, #32]	; e880 <deregister_tm_clones+0x3c>
    e85c:	add	r3, pc, r3
    e860:	bxeq	lr
    e864:	ldr	r2, [pc, #24]	; e884 <deregister_tm_clones+0x40>
    e868:	ldr	r3, [r3, r2]
    e86c:	cmp	r3, #0
    e870:	bxeq	lr
    e874:	bx	r3
    e878:	.word	0x0004ea78
    e87c:	.word	0x0004ea74
    e880:	.word	0x0004b79c
    e884:	.word	0x00000894

0000e888 <register_tm_clones>:
    e888:	ldr	r0, [pc, #56]	; e8c8 <register_tm_clones+0x40>
    e88c:	ldr	r3, [pc, #56]	; e8cc <register_tm_clones+0x44>
    e890:	add	r0, pc, r0
    e894:	add	r3, pc, r3
    e898:	sub	r1, r3, r0
    e89c:	ldr	r3, [pc, #44]	; e8d0 <register_tm_clones+0x48>
    e8a0:	asr	r1, r1, #2
    e8a4:	add	r3, pc, r3
    e8a8:	add	r1, r1, r1, lsr #31
    e8ac:	asrs	r1, r1, #1
    e8b0:	bxeq	lr
    e8b4:	ldr	r2, [pc, #24]	; e8d4 <register_tm_clones+0x4c>
    e8b8:	ldr	r3, [r3, r2]
    e8bc:	cmp	r3, #0
    e8c0:	bxeq	lr
    e8c4:	bx	r3
    e8c8:	.word	0x0004ea34
    e8cc:	.word	0x0004ea30
    e8d0:	.word	0x0004b754
    e8d4:	.word	0x00000b34

0000e8d8 <__do_global_dtors_aux>:
    e8d8:	ldr	r3, [pc, #76]	; e92c <__do_global_dtors_aux+0x54>
    e8dc:	ldr	r2, [pc, #76]	; e930 <__do_global_dtors_aux+0x58>
    e8e0:	add	r3, pc, r3
    e8e4:	add	r2, pc, r2
    e8e8:	ldrb	r3, [r3]
    e8ec:	cmp	r3, #0
    e8f0:	bxne	lr
    e8f4:	ldr	r3, [pc, #56]	; e934 <__do_global_dtors_aux+0x5c>
    e8f8:	push	{r4, lr}
    e8fc:	ldr	r3, [r2, r3]
    e900:	cmp	r3, #0
    e904:	beq	e914 <__do_global_dtors_aux+0x3c>
    e908:	ldr	r3, [pc, #40]	; e938 <__do_global_dtors_aux+0x60>
    e90c:	ldr	r0, [pc, r3]
    e910:	bl	d0f4 <__cxa_finalize@plt>
    e914:	bl	e844 <deregister_tm_clones>
    e918:	ldr	r3, [pc, #28]	; e93c <__do_global_dtors_aux+0x64>
    e91c:	mov	r2, #1
    e920:	add	r3, pc, r3
    e924:	strb	r2, [r3]
    e928:	pop	{r4, pc}
    e92c:	.word	0x0004e9e8
    e930:	.word	0x0004b714
    e934:	.word	0x00000884
    e938:	.word	0x0004c27c
    e93c:	.word	0x0004e9a8

0000e940 <frame_dummy>:
    e940:	b	e888 <register_tm_clones>

0000e944 <init_authd>:
    e944:	push	{fp, lr}
    e948:	mov	fp, sp
    e94c:	bl	e980 <start_authd>
    e950:	cmp	r0, #0
    e954:	popeq	{fp, pc}
    e958:	bl	de38 <__errno_location@plt>
    e95c:	ldr	r0, [r0]
    e960:	bl	dac0 <strerror@plt>
    e964:	mov	r1, r0
    e968:	ldr	r0, [pc, #12]	; e97c <init_authd+0x38>
    e96c:	add	r0, pc, r0
    e970:	bl	d640 <ierror@plt>
    e974:	mov	r0, #0
    e978:	bl	dc28 <exit@plt>
    e97c:	.word	0x00031c1c

0000e980 <start_authd>:
    e980:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e984:	add	fp, sp, #24
    e988:	sub	sp, sp, #16
    e98c:	sub	sp, sp, #4096	; 0x1000
    e990:	ldr	r0, [pc, #524]	; eba4 <start_authd+0x224>
    e994:	ldr	r0, [pc, r0]
    e998:	cmp	r0, #0
    e99c:	bne	ea48 <start_authd+0xc8>
    e9a0:	ldr	r6, [pc, #512]	; eba8 <start_authd+0x228>
    e9a4:	ldr	r6, [pc, r6]
    e9a8:	ldr	r3, [r6, #60]	; 0x3c
    e9ac:	ldr	r5, [pc, #504]	; ebac <start_authd+0x22c>
    e9b0:	add	r5, pc, r5
    e9b4:	mov	r7, #47	; 0x2f
    e9b8:	str	r7, [sp]
    e9bc:	str	r5, [sp, #4]
    e9c0:	add	r4, sp, #15
    e9c4:	ldr	r2, [pc, #484]	; ebb0 <start_authd+0x230>
    e9c8:	add	r2, pc, r2
    e9cc:	mov	r0, r4
    e9d0:	movw	r1, #4097	; 0x1001
    e9d4:	bl	de74 <snprintf@plt>
    e9d8:	mov	r0, r4
    e9dc:	mov	r1, #1
    e9e0:	bl	e09c <access@plt>
    e9e4:	cmn	r0, #1
    e9e8:	bne	ea34 <start_authd+0xb4>
    e9ec:	ldr	r8, [pc, #448]	; ebb4 <start_authd+0x234>
    e9f0:	ldr	r8, [pc, r8]
    e9f4:	ldr	r3, [r8]
    e9f8:	str	r7, [sp]
    e9fc:	str	r7, [sp, #4]
    ea00:	str	r5, [sp, #8]
    ea04:	add	r5, sp, #15
    ea08:	ldr	r2, [pc, #424]	; ebb8 <start_authd+0x238>
    ea0c:	add	r2, pc, r2
    ea10:	mov	r0, r5
    ea14:	movw	r1, #4097	; 0x1001
    ea18:	bl	de74 <snprintf@plt>
    ea1c:	mov	r4, #1
    ea20:	mov	r0, r5
    ea24:	mov	r1, #1
    ea28:	bl	e09c <access@plt>
    ea2c:	cmn	r0, #1
    ea30:	beq	eb6c <start_authd+0x1ec>
    ea34:	add	r0, sp, #15
    ea38:	bl	f42c <rb_strdup>
    ea3c:	ldr	r1, [pc, #380]	; ebc0 <start_authd+0x240>
    ea40:	add	r1, pc, r1
    ea44:	str	r0, [r1]
    ea48:	ldr	r0, [pc, #372]	; ebc4 <start_authd+0x244>
    ea4c:	ldr	r0, [pc, r0]
    ea50:	cmp	r0, #0
    ea54:	bne	ea78 <start_authd+0xf8>
    ea58:	ldr	r0, [pc, #360]	; ebc8 <start_authd+0x248>
    ea5c:	add	r0, pc, r0
    ea60:	ldr	r1, [pc, #356]	; ebcc <start_authd+0x24c>
    ea64:	add	r1, pc, r1
    ea68:	bl	dfb8 <rb_dictionary_create@plt>
    ea6c:	ldr	r1, [pc, #348]	; ebd0 <start_authd+0x250>
    ea70:	add	r1, pc, r1
    ea74:	str	r0, [r1]
    ea78:	ldr	r0, [pc, #340]	; ebd4 <start_authd+0x254>
    ea7c:	ldr	r0, [pc, r0]
    ea80:	cmp	r0, #0
    ea84:	bne	eab0 <start_authd+0x130>
    ea88:	ldr	r0, [pc, #328]	; ebd8 <start_authd+0x258>
    ea8c:	add	r0, pc, r0
    ea90:	ldr	r1, [pc, #324]	; ebdc <start_authd+0x25c>
    ea94:	add	r1, pc, r1
    ea98:	mov	r2, #0
    ea9c:	mov	r3, #1
    eaa0:	bl	d220 <rb_event_addish@plt>
    eaa4:	ldr	r1, [pc, #308]	; ebe0 <start_authd+0x260>
    eaa8:	add	r1, pc, r1
    eaac:	str	r0, [r1]
    eab0:	ldr	r1, [pc, #300]	; ebe4 <start_authd+0x264>
    eab4:	ldr	r1, [pc, r1]
    eab8:	ldr	r0, [pc, #296]	; ebe8 <start_authd+0x268>
    eabc:	add	r0, pc, r0
    eac0:	ldr	r2, [pc, #292]	; ebec <start_authd+0x26c>
    eac4:	add	r2, pc, r2
    eac8:	ldr	r3, [pc, #288]	; ebf0 <start_authd+0x270>
    eacc:	add	r3, pc, r3
    ead0:	bl	e48c <rb_helper_start@plt>
    ead4:	ldr	r6, [pc, #280]	; ebf4 <start_authd+0x274>
    ead8:	ldr	r6, [pc, r6]
    eadc:	str	r0, [r6]
    eae0:	cmp	r0, #0
    eae4:	beq	eb1c <start_authd+0x19c>
    eae8:	mov	r4, #0
    eaec:	ldr	r5, [pc, #264]	; ebfc <start_authd+0x27c>
    eaf0:	add	r5, pc, r5
    eaf4:	mov	r0, #0
    eaf8:	mov	r1, r5
    eafc:	bl	e0b4 <ilog@plt>
    eb00:	mov	r0, #256	; 0x100
    eb04:	mov	r1, #0
    eb08:	mov	r2, r5
    eb0c:	bl	d634 <sendto_realops_snomask@plt>
    eb10:	ldr	r0, [r6]
    eb14:	bl	de5c <rb_helper_run@plt>
    eb18:	b	eb60 <start_authd+0x1e0>
    eb1c:	bl	de38 <__errno_location@plt>
    eb20:	mov	r4, r0
    eb24:	ldr	r0, [r0]
    eb28:	bl	dac0 <strerror@plt>
    eb2c:	mov	r1, r0
    eb30:	ldr	r5, [pc, #192]	; ebf8 <start_authd+0x278>
    eb34:	add	r5, pc, r5
    eb38:	mov	r0, r5
    eb3c:	bl	d640 <ierror@plt>
    eb40:	ldr	r0, [r4]
    eb44:	bl	dac0 <strerror@plt>
    eb48:	mov	r3, r0
    eb4c:	mov	r0, #256	; 0x100
    eb50:	mov	r1, #0
    eb54:	mov	r2, r5
    eb58:	bl	d634 <sendto_realops_snomask@plt>
    eb5c:	mov	r4, #1
    eb60:	mov	r0, r4
    eb64:	sub	sp, fp, #24
    eb68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    eb6c:	ldr	r2, [r8]
    eb70:	ldr	r1, [r6, #60]	; 0x3c
    eb74:	ldr	r5, [pc, #64]	; ebbc <start_authd+0x23c>
    eb78:	add	r5, pc, r5
    eb7c:	mov	r0, r5
    eb80:	bl	d640 <ierror@plt>
    eb84:	ldr	r3, [r6, #60]	; 0x3c
    eb88:	ldr	r0, [r8]
    eb8c:	str	r0, [sp]
    eb90:	mov	r0, #256	; 0x100
    eb94:	mov	r1, #0
    eb98:	mov	r2, r5
    eb9c:	bl	d634 <sendto_realops_snomask@plt>
    eba0:	b	eb60 <start_authd+0x1e0>
    eba4:	.word	0x0004e93c
    eba8:	.word	0x0004c0a4
    ebac:	.word	0x000371a5
    ebb0:	.word	0x00031d06
    ebb4:	.word	0x0004c18c
    ebb8:	.word	0x00031cce
    ebbc:	.word	0x00031b73
    ebc0:	.word	0x0004e890
    ebc4:	.word	0x0004e880
    ebc8:	.word	0x00031cb7
    ebcc:	.word	0x00000fc8
    ebd0:	.word	0x0004e85c
    ebd4:	.word	0x0004e858
    ebd8:	.word	0x00031ca0
    ebdc:	.word	0x00000fa0
    ebe0:	.word	0x0004e82c
    ebe4:	.word	0x0004e81c
    ebe8:	.word	0x00031c8b
    ebec:	.word	0x00001074
    ebf0:	.word	0x000003e0
    ebf4:	.word	0x0004bf30
    ebf8:	.word	0x00031a54
    ebfc:	.word	0x00031c5d

0000ec00 <configure_authd>:
    ec00:	push	{r4, r5, r6, r7, fp, lr}
    ec04:	add	fp, sp, #16
    ec08:	ldr	r0, [pc, #280]	; ed28 <configure_authd+0x128>
    ec0c:	ldr	r0, [pc, r0]
    ec10:	ldr	r1, [r0, #12]
    ec14:	ldr	r0, [pc, #272]	; ed2c <configure_authd+0x12c>
    ec18:	add	r0, pc, r0
    ec1c:	bl	e3f0 <set_authd_timeout@plt>
    ec20:	ldr	r4, [pc, #264]	; ed30 <configure_authd+0x130>
    ec24:	ldr	r4, [pc, r4]
    ec28:	ldr	r1, [r4, #272]	; 0x110
    ec2c:	ldr	r0, [pc, #256]	; ed34 <configure_authd+0x134>
    ec30:	add	r0, pc, r0
    ec34:	bl	e3f0 <set_authd_timeout@plt>
    ec38:	ldr	r1, [r4, #272]	; 0x110
    ec3c:	ldr	r0, [pc, #244]	; ed38 <configure_authd+0x138>
    ec40:	add	r0, pc, r0
    ec44:	bl	e3f0 <set_authd_timeout@plt>
    ec48:	ldr	r0, [r4, #264]	; 0x108
    ec4c:	clz	r0, r0
    ec50:	lsr	r0, r0, #5
    ec54:	bl	e36c <ident_check_enable@plt>
    ec58:	ldr	r6, [pc, #220]	; ed3c <configure_authd+0x13c>
    ec5c:	ldr	r6, [pc, r6]
    ec60:	ldr	r0, [r6, #8]
    ec64:	mov	r4, #0
    ec68:	cmp	r0, #0
    ec6c:	beq	ed1c <configure_authd+0x11c>
    ec70:	ldr	r5, [pc, #200]	; ed40 <configure_authd+0x140>
    ec74:	ldr	r5, [pc, r5]
    ec78:	ldrb	r1, [r5]
    ec7c:	ldrb	r0, [r5, #56]	; 0x38
    ec80:	orrs	r2, r0, r1
    ec84:	beq	ed1c <configure_authd+0x11c>
    ec88:	cmp	r1, #0
    ec8c:	beq	ecb4 <configure_authd+0xb4>
    ec90:	ldrh	r3, [r5, #54]	; 0x36
    ec94:	ldr	r0, [pc, #168]	; ed44 <configure_authd+0x144>
    ec98:	ldr	r0, [pc, r0]
    ec9c:	ldr	r0, [r0]
    eca0:	ldr	r1, [pc, #160]	; ed48 <configure_authd+0x148>
    eca4:	add	r1, pc, r1
    eca8:	mov	r2, r5
    ecac:	bl	d148 <rb_helper_write@plt>
    ecb0:	ldrb	r0, [r5, #56]	; 0x38
    ecb4:	cmp	r0, #0
    ecb8:	beq	ecdc <configure_authd+0xdc>
    ecbc:	ldrh	r3, [r5, #110]	; 0x6e
    ecc0:	ldr	r0, [pc, #132]	; ed4c <configure_authd+0x14c>
    ecc4:	ldr	r0, [pc, r0]
    ecc8:	ldr	r0, [r0]
    eccc:	add	r2, r5, #56	; 0x38
    ecd0:	ldr	r1, [pc, #120]	; ed50 <configure_authd+0x150>
    ecd4:	add	r1, pc, r1
    ecd8:	bl	d148 <rb_helper_write@plt>
    ecdc:	ldr	r6, [r6]
    ece0:	mov	r4, #1
    ece4:	cmp	r6, #0
    ece8:	beq	ed1c <configure_authd+0x11c>
    ecec:	ldr	r7, [pc, #96]	; ed54 <configure_authd+0x154>
    ecf0:	ldr	r7, [pc, r7]
    ecf4:	ldr	r5, [pc, #92]	; ed58 <configure_authd+0x158>
    ecf8:	add	r5, pc, r5
    ecfc:	ldr	r0, [r7]
    ed00:	ldr	r2, [r6]
    ed04:	ldrh	r3, [r2, #16]
    ed08:	mov	r1, r5
    ed0c:	bl	d148 <rb_helper_write@plt>
    ed10:	ldr	r6, [r6, #8]
    ed14:	cmp	r6, #0
    ed18:	bne	ecfc <configure_authd+0xfc>
    ed1c:	mov	r0, r4
    ed20:	pop	{r4, r5, r6, r7, fp, lr}
    ed24:	b	edc4 <opm_check_enable>
    ed28:	.word	0x0004bc4c
    ed2c:	.word	0x00035e70
    ed30:	.word	0x0004bf58
    ed34:	.word	0x00031979
    ed38:	.word	0x00031976
    ed3c:	.word	0x0004beb4
    ed40:	.word	0x0004be5c
    ed44:	.word	0x0004bd70
    ed48:	.word	0x0003191e
    ed4c:	.word	0x0004bd44
    ed50:	.word	0x000318ee
    ed54:	.word	0x0004bd18
    ed58:	.word	0x000318e0

0000ed5c <set_authd_timeout>:
    ed5c:	cmp	r1, #1
    ed60:	movlt	r0, #0
    ed64:	bxlt	lr
    ed68:	push	{fp, lr}
    ed6c:	mov	fp, sp
    ed70:	mov	r3, r1
    ed74:	mov	r2, r0
    ed78:	ldr	r0, [pc, #24]	; ed98 <set_authd_timeout+0x3c>
    ed7c:	ldr	r0, [pc, r0]
    ed80:	ldr	r0, [r0]
    ed84:	ldr	r1, [pc, #16]	; ed9c <set_authd_timeout+0x40>
    ed88:	add	r1, pc, r1
    ed8c:	bl	d148 <rb_helper_write@plt>
    ed90:	mov	r0, #1
    ed94:	pop	{fp, pc}
    ed98:	.word	0x0004bc8c
    ed9c:	.word	0x000318d4

0000eda0 <ident_check_enable>:
    eda0:	mov	r2, r0
    eda4:	ldr	r0, [pc, #16]	; edbc <ident_check_enable+0x1c>
    eda8:	ldr	r0, [pc, r0]
    edac:	ldr	r0, [r0]
    edb0:	ldr	r1, [pc, #8]	; edc0 <ident_check_enable+0x20>
    edb4:	add	r1, pc, r1
    edb8:	b	d148 <rb_helper_write@plt>
    edbc:	.word	0x0004bc60
    edc0:	.word	0x000318b0

0000edc4 <opm_check_enable>:
    edc4:	mov	r2, r0
    edc8:	ldr	r0, [pc, #16]	; ede0 <opm_check_enable+0x1c>
    edcc:	ldr	r0, [pc, r0]
    edd0:	ldr	r0, [r0]
    edd4:	ldr	r1, [pc, #8]	; ede4 <opm_check_enable+0x20>
    edd8:	add	r1, pc, r1
    eddc:	b	d148 <rb_helper_write@plt>
    ede0:	.word	0x0004bc3c
    ede4:	.word	0x000318b6

0000ede8 <authd_abort_client>:
    ede8:	push	{r4, sl, fp, lr}
    edec:	add	fp, sp, #8
    edf0:	mov	r4, r0
    edf4:	ldr	r0, [r0, #436]	; 0x1b4
    edf8:	ldr	r1, [r0, #108]	; 0x6c
    edfc:	ldr	r0, [pc, #16]	; ee14 <authd_abort_client+0x2c>
    ee00:	ldr	r0, [pc, r0]
    ee04:	bl	d82c <rb_dictionary_delete@plt>
    ee08:	mov	r0, r4
    ee0c:	pop	{r4, sl, fp, lr}
    ee10:	b	ee18 <authd_free_client>
    ee14:	.word	0x0004e4cc

0000ee18 <authd_free_client>:
    ee18:	push	{r4, sl, fp, lr}
    ee1c:	add	fp, sp, #8
    ee20:	cmp	r0, #0
    ee24:	beq	ee78 <authd_free_client+0x60>
    ee28:	mov	r4, r0
    ee2c:	ldr	r0, [r0, #436]	; 0x1b4
    ee30:	cmp	r0, #0
    ee34:	beq	ee78 <authd_free_client+0x60>
    ee38:	ldr	r2, [r0, #108]	; 0x6c
    ee3c:	cmp	r2, #0
    ee40:	popeq	{r4, sl, fp, pc}
    ee44:	ldr	r0, [pc, #48]	; ee7c <authd_free_client+0x64>
    ee48:	ldr	r0, [pc, r0]
    ee4c:	ldr	r0, [r0]
    ee50:	cmp	r0, #0
    ee54:	beq	ee64 <authd_free_client+0x4c>
    ee58:	ldr	r1, [pc, #32]	; ee80 <authd_free_client+0x68>
    ee5c:	add	r1, pc, r1
    ee60:	bl	d148 <rb_helper_write@plt>
    ee64:	ldr	r0, [r4, #436]	; 0x1b4
    ee68:	mov	r1, #0
    ee6c:	str	r1, [r0, #108]	; 0x6c
    ee70:	mov	r1, #1
    ee74:	strb	r1, [r0, #116]	; 0x74
    ee78:	pop	{r4, sl, fp, pc}
    ee7c:	.word	0x0004bbc0
    ee80:	.word	0x00031a7f

0000ee84 <restart_authd>:
    ee84:	push	{fp, lr}
    ee88:	mov	fp, sp
    ee8c:	ldr	r0, [pc, #24]	; eeac <restart_authd+0x28>
    ee90:	add	r0, pc, r0
    ee94:	bl	d640 <ierror@plt>
    ee98:	ldr	r0, [pc, #16]	; eeb0 <restart_authd+0x2c>
    ee9c:	ldr	r0, [pc, r0]
    eea0:	ldr	r0, [r0]
    eea4:	pop	{fp, lr}
    eea8:	b	eeb4 <restart_authd_cb>
    eeac:	.word	0x0003175d
    eeb0:	.word	0x0004bb6c

0000eeb4 <restart_authd_cb>:
    eeb4:	push	{r4, r5, r6, sl, fp, lr}
    eeb8:	add	fp, sp, #16
    eebc:	mov	r4, r0
    eec0:	ldr	r5, [pc, #104]	; ef30 <restart_authd_cb+0x7c>
    eec4:	add	r5, pc, r5
    eec8:	mov	r0, r5
    eecc:	bl	d3ac <iwarn@plt>
    eed0:	mov	r6, #0
    eed4:	mov	r0, #256	; 0x100
    eed8:	mov	r1, #0
    eedc:	mov	r2, r5
    eee0:	bl	d634 <sendto_realops_snomask@plt>
    eee4:	cmp	r4, #0
    eee8:	beq	ef00 <restart_authd_cb+0x4c>
    eeec:	mov	r0, r4
    eef0:	bl	d19c <rb_helper_close@plt>
    eef4:	ldr	r0, [pc, #56]	; ef34 <restart_authd_cb+0x80>
    eef8:	ldr	r0, [pc, r0]
    eefc:	str	r6, [r0]
    ef00:	ldr	r0, [pc, #48]	; ef38 <restart_authd_cb+0x84>
    ef04:	ldr	r0, [pc, r0]
    ef08:	ldr	r1, [pc, #44]	; ef3c <restart_authd_cb+0x88>
    ef0c:	add	r1, pc, r1
    ef10:	mov	r2, #0
    ef14:	bl	e0cc <rb_dictionary_destroy@plt>
    ef18:	ldr	r0, [pc, #32]	; ef40 <restart_authd_cb+0x8c>
    ef1c:	add	r0, pc, r0
    ef20:	str	r6, [r0]
    ef24:	bl	e980 <start_authd>
    ef28:	pop	{r4, r5, r6, sl, fp, lr}
    ef2c:	b	ec00 <configure_authd>
    ef30:	.word	0x00031a1c
    ef34:	.word	0x0004bb10
    ef38:	.word	0x0004e3c8
    ef3c:	.word	0x00001080
    ef40:	.word	0x0004e3b0

0000ef44 <rehash_authd>:
    ef44:	ldr	r0, [pc, #16]	; ef5c <rehash_authd+0x18>
    ef48:	ldr	r0, [pc, r0]
    ef4c:	ldr	r0, [r0]
    ef50:	ldr	r1, [pc, #8]	; ef60 <rehash_authd+0x1c>
    ef54:	add	r1, pc, r1
    ef58:	b	d148 <rb_helper_write@plt>
    ef5c:	.word	0x0004bac0
    ef60:	.word	0x0003740e

0000ef64 <check_authd>:
    ef64:	ldr	r0, [pc, #16]	; ef7c <check_authd+0x18>
    ef68:	ldr	r0, [pc, r0]
    ef6c:	ldr	r0, [r0]
    ef70:	cmp	r0, #0
    ef74:	bxne	lr
    ef78:	b	ee84 <restart_authd>
    ef7c:	.word	0x0004baa0

0000ef80 <authd_initiate_client>:
    ef80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef84:	add	fp, sp, #28
    ef88:	sub	sp, sp, #124	; 0x7c
    ef8c:	mov	r5, r0
    ef90:	ldr	r0, [r0, #436]	; 0x1b4
    ef94:	cmp	r0, #0
    ef98:	beq	efa8 <authd_initiate_client+0x28>
    ef9c:	ldr	r0, [r0, #108]	; 0x6c
    efa0:	cmp	r0, #0
    efa4:	beq	efb0 <authd_initiate_client+0x30>
    efa8:	sub	sp, fp, #28
    efac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    efb0:	mov	r6, r1
    efb4:	bl	f0a0 <generate_cid>
    efb8:	mov	r4, r0
    efbc:	ldr	r0, [r5, #436]	; 0x1b4
    efc0:	str	r4, [r0, #108]	; 0x6c
    efc4:	ldr	r0, [pc, #196]	; f090 <authd_initiate_client+0x110>
    efc8:	ldr	r0, [pc, r0]
    efcc:	mov	r1, r4
    efd0:	mov	r2, r5
    efd4:	bl	d700 <rb_dictionary_add@plt>
    efd8:	ldr	r0, [r5, #436]	; 0x1b4
    efdc:	add	r0, r0, #132	; 0x84
    efe0:	add	r1, sp, #16
    efe4:	mov	r2, #54	; 0x36
    efe8:	bl	cf50 <rb_inet_ntop_sock@plt>
    efec:	ldr	r0, [r5, #432]	; 0x1b0
    eff0:	add	r0, r0, #140	; 0x8c
    eff4:	add	r8, sp, #70	; 0x46
    eff8:	mov	r1, r8
    effc:	mov	r2, #54	; 0x36
    f000:	bl	cf50 <rb_inet_ntop_sock@plt>
    f004:	ldr	r7, [r5, #436]	; 0x1b4
    f008:	ldrh	r0, [r7, #134]	; 0x86
    f00c:	bl	f0c0 <__bswap_16>
    f010:	mov	r9, r0
    f014:	ldr	r0, [r5, #432]	; 0x1b0
    f018:	ldrh	r0, [r0, #142]	; 0x8e
    f01c:	bl	f0c0 <__bswap_16>
    f020:	mov	sl, r0
    f024:	cmp	r6, #0
    f028:	beq	f038 <authd_initiate_client+0xb8>
    f02c:	ldr	r0, [r7, #128]	; 0x80
    f030:	orr	r0, r0, #1
    f034:	str	r0, [r7, #128]	; 0x80
    f038:	bl	d07c <rb_current_time@plt>
    f03c:	ldr	r1, [pc, #80]	; f094 <authd_initiate_client+0x114>
    f040:	ldr	r1, [pc, r1]
    f044:	ldr	r1, [r1, #272]	; 0x110
    f048:	add	r0, r0, r1
    f04c:	add	r0, r0, #10
    f050:	ldr	r1, [r5, #436]	; 0x1b4
    f054:	str	r0, [r1, #112]	; 0x70
    f058:	ldr	r0, [pc, #56]	; f098 <authd_initiate_client+0x118>
    f05c:	ldr	r0, [pc, r0]
    f060:	ldr	r0, [r0]
    f064:	mov	r1, #6
    f068:	str	r9, [sp]
    f06c:	stmib	sp, {r8, sl}
    f070:	str	r1, [sp, #12]
    f074:	ldr	r1, [pc, #32]	; f09c <authd_initiate_client+0x11c>
    f078:	add	r1, pc, r1
    f07c:	add	r3, sp, #16
    f080:	mov	r2, r4
    f084:	bl	d148 <rb_helper_write@plt>
    f088:	sub	sp, fp, #28
    f08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f090:	.word	0x0004e304
    f094:	.word	0x0004bb3c
    f098:	.word	0x0004b9ac
    f09c:	.word	0x00031589

0000f0a0 <generate_cid>:
    f0a0:	ldr	r1, [pc, #20]	; f0bc <generate_cid+0x1c>
    f0a4:	ldr	r1, [pc, r1]
    f0a8:	ldr	r0, [r1]
    f0ac:	adds	r0, r0, #1
    f0b0:	movcs	r0, #1
    f0b4:	str	r0, [r1]
    f0b8:	bx	lr
    f0bc:	.word	0x0004bae0

0000f0c0 <__bswap_16>:
    f0c0:	rev16	r0, r0
    f0c4:	bx	lr

0000f0c8 <authd_deferred_client>:
    f0c8:	ldr	r1, [r0, #436]	; 0x1b4
    f0cc:	ldr	r2, [r1, #128]	; 0x80
    f0d0:	bic	r3, r2, #1
    f0d4:	str	r3, [r1, #128]	; 0x80
    f0d8:	tst	r2, #2
    f0dc:	bxeq	lr
    f0e0:	b	f0e4 <authd_read_client>

0000f0e4 <authd_read_client>:
    f0e4:	push	{r4, sl, fp, lr}
    f0e8:	add	fp, sp, #8
    f0ec:	mov	r4, r0
    f0f0:	mov	r1, r0
    f0f4:	bl	ff9c <rb_dlinkAddTail>
    f0f8:	ldr	r0, [r4, #432]	; 0x1b0
    f0fc:	ldr	r0, [r0, #300]	; 0x12c
    f100:	mov	r1, r4
    f104:	pop	{r4, sl, fp, lr}
    f108:	b	d760 <read_packet@plt>

0000f10c <authd_accept_client>:
    f10c:	push	{fp, lr}
    f110:	mov	fp, sp
    f114:	sub	sp, sp, #16
    f118:	mov	r3, #0
    f11c:	str	r3, [sp]
    f120:	str	r3, [sp, #4]
    f124:	str	r3, [sp, #8]
    f128:	mov	r3, #1
    f12c:	bl	f138 <authd_decide_client>
    f130:	mov	sp, fp
    f134:	pop	{fp, pc}

0000f138 <authd_decide_client>:
    f138:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f13c:	add	fp, sp, #24
    f140:	mov	r4, r0
    f144:	ldr	r0, [r0, #436]	; 0x1b4
    f148:	cmp	r0, #0
    f14c:	beq	f25c <authd_decide_client+0x124>
    f150:	ldr	r0, [r0, #108]	; 0x6c
    f154:	cmp	r0, #0
    f158:	beq	f25c <authd_decide_client+0x124>
    f15c:	mov	r6, r3
    f160:	mov	r5, r2
    f164:	ldr	r8, [fp, #16]
    f168:	ldr	r7, [fp, #12]
    f16c:	ldr	r9, [fp, #8]
    f170:	ldrb	r0, [r1]
    f174:	cmp	r0, #42	; 0x2a
    f178:	bne	f194 <authd_decide_client+0x5c>
    f17c:	ldr	r0, [pc, #224]	; f264 <authd_decide_client+0x12c>
    f180:	ldr	r0, [pc, r0]
    f184:	ldr	r1, [r0, #104]	; 0x68
    f188:	add	r1, r1, #1
    f18c:	str	r1, [r0, #104]	; 0x68
    f190:	b	f1c0 <authd_decide_client+0x88>
    f194:	add	r0, r4, #152	; 0x98
    f198:	mov	r2, #11
    f19c:	bl	e510 <rb_strlcpy@plt>
    f1a0:	ldr	r0, [r4, #64]	; 0x40
    f1a4:	orr	r0, r0, #128	; 0x80
    f1a8:	str	r0, [r4, #64]	; 0x40
    f1ac:	ldr	r0, [pc, #172]	; f260 <authd_decide_client+0x128>
    f1b0:	ldr	r0, [pc, r0]
    f1b4:	ldr	r1, [r0, #100]	; 0x64
    f1b8:	add	r1, r1, #1
    f1bc:	str	r1, [r0, #100]	; 0x64
    f1c0:	ldrb	r0, [r5]
    f1c4:	cmp	r0, #42	; 0x2a
    f1c8:	beq	f1dc <authd_decide_client+0xa4>
    f1cc:	add	r0, r4, #163	; 0xa3
    f1d0:	mov	r1, r5
    f1d4:	mov	r2, #64	; 0x40
    f1d8:	bl	e510 <rb_strlcpy@plt>
    f1dc:	ldr	r0, [r4, #436]	; 0x1b4
    f1e0:	ldr	r1, [r0, #108]	; 0x6c
    f1e4:	ldr	r0, [pc, #124]	; f268 <authd_decide_client+0x130>
    f1e8:	ldr	r0, [pc, r0]
    f1ec:	bl	d82c <rb_dictionary_delete@plt>
    f1f0:	ldr	r0, [r4, #436]	; 0x1b4
    f1f4:	strb	r9, [r0, #117]	; 0x75
    f1f8:	strb	r6, [r0, #116]	; 0x74
    f1fc:	mov	r5, #0
    f200:	cmp	r7, #0
    f204:	mov	r0, #0
    f208:	movne	r0, r7
    f20c:	blne	f42c <rb_strdup>
    f210:	ldr	r1, [r4, #436]	; 0x1b4
    f214:	str	r0, [r1, #120]	; 0x78
    f218:	cmp	r8, #0
    f21c:	beq	f22c <authd_decide_client+0xf4>
    f220:	mov	r0, r8
    f224:	bl	f42c <rb_strdup>
    f228:	mov	r5, r0
    f22c:	ldr	r0, [r4, #436]	; 0x1b4
    f230:	mov	r1, #0
    f234:	str	r1, [r0, #108]	; 0x6c
    f238:	str	r5, [r0, #124]	; 0x7c
    f23c:	ldr	r1, [r0, #128]	; 0x80
    f240:	orr	r2, r1, #2
    f244:	str	r2, [r0, #128]	; 0x80
    f248:	tst	r1, #1
    f24c:	bne	f25c <authd_decide_client+0x124>
    f250:	mov	r0, r4
    f254:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    f258:	b	f0e4 <authd_read_client>
    f25c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    f260:	.word	0x0004b80c
    f264:	.word	0x0004b83c
    f268:	.word	0x0004e0e4

0000f26c <authd_reject_client>:
    f26c:	push	{fp, lr}
    f270:	mov	fp, sp
    f274:	sub	sp, sp, #16
    f278:	str	r3, [sp]
    f27c:	ldr	r3, [fp, #12]
    f280:	str	r3, [sp, #8]
    f284:	ldr	r3, [fp, #8]
    f288:	str	r3, [sp, #4]
    f28c:	mov	r3, #0
    f290:	bl	f138 <authd_decide_client>
    f294:	mov	sp, fp
    f298:	pop	{fp, pc}

0000f29c <add_dnsbl_entry>:
    f29c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f2a0:	add	fp, sp, #28
    f2a4:	sub	sp, sp, #540	; 0x21c
    f2a8:	mov	r8, r3
    f2ac:	mov	r9, r2
    f2b0:	mov	sl, r1
    f2b4:	mov	r6, r0
    f2b8:	mov	r0, #12
    f2bc:	bl	f40c <rb_malloc>
    f2c0:	mov	r7, r0
    f2c4:	add	r5, sp, #24
    f2c8:	add	r0, r5, #1
    f2cc:	mov	r1, #0
    f2d0:	movw	r2, #511	; 0x1ff
    f2d4:	bl	df28 <memset@plt>
    f2d8:	mov	r0, #42	; 0x2a
    f2dc:	strb	r0, [sp, #24]
    f2e0:	ldr	r4, [pc, #264]	; f3f0 <add_dnsbl_entry+0x154>
    f2e4:	ldr	r4, [pc, r4]
    f2e8:	ldr	r0, [r4]
    f2ec:	cmp	r0, #0
    f2f0:	bne	f30c <add_dnsbl_entry+0x70>
    f2f4:	ldr	r1, [pc, #248]	; f3f4 <add_dnsbl_entry+0x158>
    f2f8:	ldr	r1, [pc, r1]
    f2fc:	ldr	r0, [pc, #244]	; f3f8 <add_dnsbl_entry+0x15c>
    f300:	add	r0, pc, r0
    f304:	bl	dfb8 <rb_dictionary_create@plt>
    f308:	str	r0, [r4]
    f30c:	ldr	r8, [r8]
    f310:	cmp	r8, #0
    f314:	mov	r4, sl
    f318:	beq	f390 <add_dnsbl_entry+0xf4>
    f31c:	add	r0, sp, #12
    f320:	stm	r0, {r4, r6, r9}
    f324:	mov	r9, #0
    f328:	ldr	r6, [pc, #204]	; f3fc <add_dnsbl_entry+0x160>
    f32c:	add	r6, pc, r6
    f330:	ldr	r4, [r8]
    f334:	mov	r0, r4
    f338:	bl	dc94 <strlen@plt>
    f33c:	add	r0, r9, r0
    f340:	add	sl, r0, #1
    f344:	cmp	sl, #512	; 0x200
    f348:	bhi	f374 <add_dnsbl_entry+0xd8>
    f34c:	add	r0, r5, r9
    f350:	rsb	r1, r9, #512	; 0x200
    f354:	mov	r2, r6
    f358:	mov	r3, r4
    f35c:	bl	de74 <snprintf@plt>
    f360:	ldr	r8, [r8, #8]
    f364:	cmp	r8, #0
    f368:	mov	r9, sl
    f36c:	bne	f330 <add_dnsbl_entry+0x94>
    f370:	b	f378 <add_dnsbl_entry+0xdc>
    f374:	mov	sl, r9
    f378:	cmp	sl, #0
    f37c:	add	r9, sp, #12
    f380:	ldm	r9, {r4, r6, r9}
    f384:	addne	r0, sl, r5
    f388:	movne	r1, #0
    f38c:	strbne	r1, [r0, #-1]
    f390:	mov	r0, r6
    f394:	bl	f42c <rb_strdup>
    f398:	mov	r1, r0
    f39c:	mov	r0, #0
    f3a0:	str	r0, [r7, #8]
    f3a4:	strb	r9, [r7, #4]
    f3a8:	str	r1, [r7]
    f3ac:	ldr	r0, [pc, #76]	; f400 <add_dnsbl_entry+0x164>
    f3b0:	ldr	r0, [pc, r0]
    f3b4:	ldr	r0, [r0]
    f3b8:	mov	r2, r7
    f3bc:	bl	d700 <rb_dictionary_add@plt>
    f3c0:	ldr	r0, [pc, #60]	; f404 <add_dnsbl_entry+0x168>
    f3c4:	ldr	r0, [pc, r0]
    f3c8:	ldr	r0, [r0]
    f3cc:	str	r5, [sp]
    f3d0:	str	r4, [sp, #4]
    f3d4:	ldr	r1, [pc, #44]	; f408 <add_dnsbl_entry+0x16c>
    f3d8:	add	r1, pc, r1
    f3dc:	mov	r2, r6
    f3e0:	mov	r3, r9
    f3e4:	bl	d148 <rb_helper_write@plt>
    f3e8:	sub	sp, fp, #28
    f3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f3f0:	.word	0x0004b79c
    f3f4:	.word	0x0004b5b8
    f3f8:	.word	0x00031317
    f3fc:	.word	0x000312fc
    f400:	.word	0x0004b6d0
    f404:	.word	0x0004b644
    f408:	.word	0x00031254

0000f40c <rb_malloc>:
    f40c:	push	{fp, lr}
    f410:	mov	fp, sp
    f414:	mov	r1, r0
    f418:	mov	r0, #1
    f41c:	bl	cfa4 <calloc@plt>
    f420:	cmp	r0, #0
    f424:	popne	{fp, pc}
    f428:	bl	d448 <rb_outofmemory@plt>

0000f42c <rb_strdup>:
    f42c:	push	{r4, sl, fp, lr}
    f430:	add	fp, sp, #8
    f434:	mov	r4, r0
    f438:	bl	dc94 <strlen@plt>
    f43c:	add	r0, r0, #1
    f440:	bl	da84 <malloc@plt>
    f444:	cmp	r0, #0
    f448:	beq	f458 <rb_strdup+0x2c>
    f44c:	mov	r1, r4
    f450:	pop	{r4, sl, fp, lr}
    f454:	b	d91c <strcpy@plt>
    f458:	bl	d448 <rb_outofmemory@plt>

0000f45c <del_dnsbl_entry>:
    f45c:	push	{r4, r5, r6, sl, fp, lr}
    f460:	add	fp, sp, #16
    f464:	mov	r4, r0
    f468:	ldr	r6, [pc, #84]	; f4c4 <del_dnsbl_entry+0x68>
    f46c:	ldr	r6, [pc, r6]
    f470:	ldr	r0, [r6]
    f474:	mov	r1, r4
    f478:	bl	e6e4 <rb_dictionary_retrieve@plt>
    f47c:	cmp	r0, #0
    f480:	beq	f4a4 <del_dnsbl_entry+0x48>
    f484:	mov	r5, r0
    f488:	ldr	r0, [r6]
    f48c:	mov	r1, r4
    f490:	bl	d82c <rb_dictionary_delete@plt>
    f494:	ldr	r0, [r5]
    f498:	bl	f4d0 <rb_free>
    f49c:	mov	r0, r5
    f4a0:	bl	f4d0 <rb_free>
    f4a4:	ldr	r0, [pc, #28]	; f4c8 <del_dnsbl_entry+0x6c>
    f4a8:	ldr	r0, [pc, r0]
    f4ac:	ldr	r0, [r0]
    f4b0:	ldr	r1, [pc, #20]	; f4cc <del_dnsbl_entry+0x70>
    f4b4:	add	r1, pc, r1
    f4b8:	mov	r2, r4
    f4bc:	pop	{r4, r5, r6, sl, fp, lr}
    f4c0:	b	d148 <rb_helper_write@plt>
    f4c4:	.word	0x0004b614
    f4c8:	.word	0x0004b560
    f4cc:	.word	0x0003118d

0000f4d0 <rb_free>:
    f4d0:	cmp	r0, #0
    f4d4:	bxeq	lr
    f4d8:	b	d328 <free@plt>

0000f4dc <del_dnsbl_entry_all>:
    f4dc:	push	{r4, sl, fp, lr}
    f4e0:	add	fp, sp, #8
    f4e4:	ldr	r4, [pc, #64]	; f52c <del_dnsbl_entry_all+0x50>
    f4e8:	ldr	r4, [pc, r4]
    f4ec:	ldr	r0, [r4]
    f4f0:	cmp	r0, #0
    f4f4:	beq	f508 <del_dnsbl_entry_all+0x2c>
    f4f8:	ldr	r1, [pc, #48]	; f530 <del_dnsbl_entry_all+0x54>
    f4fc:	add	r1, pc, r1
    f500:	mov	r2, #0
    f504:	bl	e0cc <rb_dictionary_destroy@plt>
    f508:	mov	r0, #0
    f50c:	str	r0, [r4]
    f510:	ldr	r0, [pc, #28]	; f534 <del_dnsbl_entry_all+0x58>
    f514:	ldr	r0, [pc, r0]
    f518:	ldr	r0, [r0]
    f51c:	ldr	r1, [pc, #20]	; f538 <del_dnsbl_entry_all+0x5c>
    f520:	add	r1, pc, r1
    f524:	pop	{r4, sl, fp, lr}
    f528:	b	d148 <rb_helper_write@plt>
    f52c:	.word	0x0004b598
    f530:	.word	0x00000038
    f534:	.word	0x0004b4f4
    f538:	.word	0x0003112e

0000f53c <dnsbl_delete_elem>:
    f53c:	push	{r4, sl, fp, lr}
    f540:	add	fp, sp, #8
    f544:	ldr	r4, [r0, #16]
    f548:	ldr	r0, [r4]
    f54c:	bl	f4d0 <rb_free>
    f550:	mov	r0, r4
    f554:	pop	{r4, sl, fp, lr}
    f558:	b	f4d0 <rb_free>

0000f55c <conf_create_opm_listener>:
    f55c:	push	{r4, r5, r6, sl, fp, lr}
    f560:	add	fp, sp, #16
    f564:	sub	sp, sp, #56	; 0x38
    f568:	mov	r4, r1
    f56c:	mov	r1, r0
    f570:	mov	r5, sp
    f574:	mov	r0, r5
    f578:	mov	r2, #53	; 0x35
    f57c:	bl	e510 <rb_strlcpy@plt>
    f580:	ldrb	r0, [sp]
    f584:	cmp	r0, #58	; 0x3a
    f588:	bne	f5cc <conf_create_opm_listener+0x70>
    f58c:	add	r0, r5, #16
    f590:	mov	r1, #17
    f594:	mov	r2, r5
    f598:	vld1.64	{d16-d17}, [r2], r1
    f59c:	vld1.64	{d18-d19}, [r0]
    f5a0:	orr	r0, r5, #1
    f5a4:	add	r1, r5, #32
    f5a8:	vld1.64	{d20-d21}, [r1]
    f5ac:	vst1.8	{d16-d17}, [r0]
    f5b0:	vst1.8	{d18-d19}, [r2]
    f5b4:	add	r0, r5, #33	; 0x21
    f5b8:	ldr	r1, [sp, #48]	; 0x30
    f5bc:	vst1.8	{d20-d21}, [r0]
    f5c0:	mov	r0, #48	; 0x30
    f5c4:	strb	r0, [sp]
    f5c8:	str	r1, [sp, #49]	; 0x31
    f5cc:	mov	r5, sp
    f5d0:	mov	r0, r5
    f5d4:	mov	r1, #58	; 0x3a
    f5d8:	bl	dce8 <strchr@plt>
    f5dc:	cmp	r0, #0
    f5e0:	movwne	r0, #1
    f5e4:	rsb	r0, r0, r0, lsl #3
    f5e8:	ldr	r1, [pc, #32]	; f610 <conf_create_opm_listener+0xb4>
    f5ec:	ldr	r1, [pc, r1]
    f5f0:	add	r6, r1, r0, lsl #3
    f5f4:	mov	r0, r6
    f5f8:	mov	r1, r5
    f5fc:	mov	r2, #53	; 0x35
    f600:	bl	e510 <rb_strlcpy@plt>
    f604:	strh	r4, [r6, #54]	; 0x36
    f608:	sub	sp, fp, #16
    f60c:	pop	{r4, r5, r6, sl, fp, pc}
    f610:	.word	0x0004b4e4

0000f614 <create_opm_listener>:
    f614:	push	{r4, r5, r6, sl, fp, lr}
    f618:	add	fp, sp, #16
    f61c:	sub	sp, sp, #56	; 0x38
    f620:	mov	r4, r1
    f624:	mov	r5, r0
    f628:	mov	r6, sp
    f62c:	mov	r0, r6
    f630:	mov	r1, r5
    f634:	mov	r2, #53	; 0x35
    f638:	bl	e510 <rb_strlcpy@plt>
    f63c:	ldrb	r0, [sp]
    f640:	cmp	r0, #58	; 0x3a
    f644:	bne	f688 <create_opm_listener+0x74>
    f648:	add	r0, r6, #16
    f64c:	mov	r1, #17
    f650:	mov	r2, r6
    f654:	vld1.64	{d16-d17}, [r2], r1
    f658:	vld1.64	{d18-d19}, [r0]
    f65c:	orr	r0, r6, #1
    f660:	add	r1, r6, #32
    f664:	vld1.64	{d20-d21}, [r1]
    f668:	vst1.8	{d16-d17}, [r0]
    f66c:	vst1.8	{d18-d19}, [r2]
    f670:	add	r0, r6, #33	; 0x21
    f674:	ldr	r1, [sp, #48]	; 0x30
    f678:	vst1.8	{d20-d21}, [r0]
    f67c:	mov	r0, #48	; 0x30
    f680:	strb	r0, [sp]
    f684:	str	r1, [sp, #49]	; 0x31
    f688:	mov	r0, r5
    f68c:	mov	r1, r4
    f690:	bl	dd6c <conf_create_opm_listener@plt>
    f694:	ldr	r0, [pc, #32]	; f6bc <create_opm_listener+0xa8>
    f698:	ldr	r0, [pc, r0]
    f69c:	ldr	r0, [r0]
    f6a0:	ldr	r1, [pc, #24]	; f6c0 <create_opm_listener+0xac>
    f6a4:	add	r1, pc, r1
    f6a8:	mov	r2, sp
    f6ac:	mov	r3, r4
    f6b0:	bl	d148 <rb_helper_write@plt>
    f6b4:	sub	sp, fp, #16
    f6b8:	pop	{r4, r5, r6, sl, fp, pc}
    f6bc:	.word	0x0004b370
    f6c0:	.word	0x00030f1e

0000f6c4 <delete_opm_listener_all>:
    f6c4:	ldr	r0, [pc, #84]	; f720 <delete_opm_listener_all+0x5c>
    f6c8:	ldr	r0, [pc, r0]
    f6cc:	vmov.i32	q8, #0	; 0x00000000
    f6d0:	mov	r1, #96	; 0x60
    f6d4:	mov	r2, r0
    f6d8:	vst1.16	{d16-d17}, [r2], r1
    f6dc:	vst1.16	{d16-d17}, [r2]
    f6e0:	add	r1, r0, #80	; 0x50
    f6e4:	vst1.16	{d16-d17}, [r1]
    f6e8:	add	r1, r0, #64	; 0x40
    f6ec:	vst1.16	{d16-d17}, [r1]
    f6f0:	add	r1, r0, #48	; 0x30
    f6f4:	vst1.16	{d16-d17}, [r1]
    f6f8:	add	r1, r0, #32
    f6fc:	vst1.16	{d16-d17}, [r1]
    f700:	add	r0, r0, #16
    f704:	vst1.16	{d16-d17}, [r0]
    f708:	ldr	r0, [pc, #20]	; f724 <delete_opm_listener_all+0x60>
    f70c:	ldr	r0, [pc, r0]
    f710:	ldr	r0, [r0]
    f714:	ldr	r1, [pc, #12]	; f728 <delete_opm_listener_all+0x64>
    f718:	add	r1, pc, r1
    f71c:	b	d148 <rb_helper_write@plt>
    f720:	.word	0x0004b408
    f724:	.word	0x0004b2fc
    f728:	.word	0x00030f5f

0000f72c <conf_create_opm_proxy_scanner>:
    f72c:	push	{r4, r5, r6, sl, fp, lr}
    f730:	add	fp, sp, #16
    f734:	mov	r4, r1
    f738:	mov	r5, r0
    f73c:	mov	r0, #32
    f740:	bl	f40c <rb_malloc>
    f744:	mov	r6, r0
    f748:	mov	r1, r5
    f74c:	mov	r2, #16
    f750:	bl	e510 <rb_strlcpy@plt>
    f754:	strh	r4, [r6, #16]
    f758:	add	r1, r6, #20
    f75c:	ldr	r2, [pc, #12]	; f770 <conf_create_opm_proxy_scanner+0x44>
    f760:	ldr	r2, [pc, r2]
    f764:	mov	r0, r6
    f768:	pop	{r4, r5, r6, sl, fp, lr}
    f76c:	b	f774 <rb_dlinkAdd>
    f770:	.word	0x0004b3b0

0000f774 <rb_dlinkAdd>:
    f774:	push	{fp, lr}
    f778:	mov	fp, sp
    f77c:	cmp	r0, #0
    f780:	beq	f7e0 <rb_dlinkAdd+0x6c>
    f784:	cmp	r1, #0
    f788:	beq	f800 <rb_dlinkAdd+0x8c>
    f78c:	cmp	r2, #0
    f790:	beq	f820 <rb_dlinkAdd+0xac>
    f794:	mov	r3, #0
    f798:	stm	r1, {r0, r3}
    f79c:	ldr	r0, [r2]
    f7a0:	str	r0, [r1, #8]
    f7a4:	ldr	r0, [r2]
    f7a8:	cmp	r0, #0
    f7ac:	beq	f7bc <rb_dlinkAdd+0x48>
    f7b0:	add	r0, r0, #4
    f7b4:	str	r1, [r0]
    f7b8:	b	f7cc <rb_dlinkAdd+0x58>
    f7bc:	mov	r0, r2
    f7c0:	ldr	r3, [r0, #4]!
    f7c4:	cmp	r3, #0
    f7c8:	streq	r1, [r0]
    f7cc:	str	r1, [r2]
    f7d0:	ldr	r0, [r2, #8]
    f7d4:	add	r0, r0, #1
    f7d8:	str	r0, [r2, #8]
    f7dc:	pop	{fp, pc}
    f7e0:	ldr	r0, [pc, #88]	; f840 <rb_dlinkAdd+0xcc>
    f7e4:	add	r0, pc, r0
    f7e8:	ldr	r1, [pc, #84]	; f844 <rb_dlinkAdd+0xd0>
    f7ec:	add	r1, pc, r1
    f7f0:	ldr	r3, [pc, #80]	; f848 <rb_dlinkAdd+0xd4>
    f7f4:	add	r3, pc, r3
    f7f8:	mov	r2, #143	; 0x8f
    f7fc:	bl	e7e0 <__assert_fail@plt>
    f800:	ldr	r0, [pc, #68]	; f84c <rb_dlinkAdd+0xd8>
    f804:	add	r0, pc, r0
    f808:	ldr	r1, [pc, #64]	; f850 <rb_dlinkAdd+0xdc>
    f80c:	add	r1, pc, r1
    f810:	ldr	r3, [pc, #60]	; f854 <rb_dlinkAdd+0xe0>
    f814:	add	r3, pc, r3
    f818:	mov	r2, #144	; 0x90
    f81c:	bl	e7e0 <__assert_fail@plt>
    f820:	ldr	r0, [pc, #48]	; f858 <rb_dlinkAdd+0xe4>
    f824:	add	r0, pc, r0
    f828:	ldr	r1, [pc, #44]	; f85c <rb_dlinkAdd+0xe8>
    f82c:	add	r1, pc, r1
    f830:	ldr	r3, [pc, #40]	; f860 <rb_dlinkAdd+0xec>
    f834:	add	r3, pc, r3
    f838:	mov	r2, #145	; 0x91
    f83c:	bl	e7e0 <__assert_fail@plt>
    f840:	.word	0x0003118d
    f844:	.word	0x0003112a
    f848:	.word	0x0003118a
    f84c:	.word	0x00031108
    f850:	.word	0x0003110a
    f854:	.word	0x0003116a
    f858:	.word	0x00036971
    f85c:	.word	0x000310ea
    f860:	.word	0x0003114a

0000f864 <create_opm_proxy_scanner>:
    f864:	push	{r4, r5, fp, lr}
    f868:	add	fp, sp, #8
    f86c:	mov	r4, r1
    f870:	mov	r5, r0
    f874:	bl	d64c <conf_create_opm_proxy_scanner@plt>
    f878:	ldr	r0, [pc, #28]	; f89c <create_opm_proxy_scanner+0x38>
    f87c:	ldr	r0, [pc, r0]
    f880:	ldr	r0, [r0]
    f884:	ldr	r1, [pc, #20]	; f8a0 <create_opm_proxy_scanner+0x3c>
    f888:	add	r1, pc, r1
    f88c:	mov	r2, r5
    f890:	mov	r3, r4
    f894:	pop	{r4, r5, fp, lr}
    f898:	b	d148 <rb_helper_write@plt>
    f89c:	.word	0x0004b18c
    f8a0:	.word	0x00030d50

0000f8a4 <delete_opm_proxy_scanner>:
    f8a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f8a8:	add	fp, sp, #24
    f8ac:	mov	r8, r1
    f8b0:	mov	r5, r0
    f8b4:	ldr	r0, [pc, #124]	; f938 <delete_opm_proxy_scanner+0x94>
    f8b8:	ldr	r0, [pc, r0]
    f8bc:	ldr	r6, [r0]
    f8c0:	cmp	r6, #0
    f8c4:	bne	f8d8 <delete_opm_proxy_scanner+0x34>
    f8c8:	b	f914 <delete_opm_proxy_scanner+0x70>
    f8cc:	cmp	r4, #0
    f8d0:	mov	r6, r4
    f8d4:	beq	f914 <delete_opm_proxy_scanner+0x70>
    f8d8:	ldr	r7, [r6]
    f8dc:	ldr	r4, [r6, #8]
    f8e0:	mov	r0, r7
    f8e4:	mov	r1, r5
    f8e8:	mov	r2, #16
    f8ec:	bl	d538 <rb_strncasecmp@plt>
    f8f0:	cmp	r0, #0
    f8f4:	bne	f8cc <delete_opm_proxy_scanner+0x28>
    f8f8:	ldrh	r0, [r7, #16]
    f8fc:	cmp	r0, r8
    f900:	bne	f8cc <delete_opm_proxy_scanner+0x28>
    f904:	mov	r0, r6
    f908:	bl	f944 <rb_dlinkDelete>
    f90c:	mov	r0, r7
    f910:	bl	f4d0 <rb_free>
    f914:	ldr	r0, [pc, #32]	; f93c <delete_opm_proxy_scanner+0x98>
    f918:	ldr	r0, [pc, r0]
    f91c:	ldr	r0, [r0]
    f920:	ldr	r1, [pc, #24]	; f940 <delete_opm_proxy_scanner+0x9c>
    f924:	add	r1, pc, r1
    f928:	mov	r2, r5
    f92c:	mov	r3, r8
    f930:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    f934:	b	d148 <rb_helper_write@plt>
    f938:	.word	0x0004b258
    f93c:	.word	0x0004b0f0
    f940:	.word	0x00030d7b

0000f944 <rb_dlinkDelete>:
    f944:	push	{fp, lr}
    f948:	mov	fp, sp
    f94c:	cmp	r0, #0
    f950:	beq	f9a0 <rb_dlinkDelete+0x5c>
    f954:	ldr	ip, [pc, #100]	; f9c0 <rb_dlinkDelete+0x7c>
    f958:	ldr	ip, [pc, ip]
    f95c:	ldmib	r0, {r2, r3}
    f960:	add	r1, r3, #4
    f964:	cmp	r3, #0
    f968:	addeq	r1, ip, #4
    f96c:	str	r2, [r1]
    f970:	ldmib	r0, {r1, r2}
    f974:	cmp	r1, #0
    f978:	mov	r3, ip
    f97c:	addne	r3, r1, #8
    f980:	str	r2, [r3]
    f984:	mov	r1, #0
    f988:	str	r1, [r0, #4]
    f98c:	str	r1, [r0, #8]
    f990:	ldr	r0, [ip, #8]
    f994:	sub	r0, r0, #1
    f998:	str	r0, [ip, #8]
    f99c:	pop	{fp, pc}
    f9a0:	ldr	r0, [pc, #28]	; f9c4 <rb_dlinkDelete+0x80>
    f9a4:	add	r0, pc, r0
    f9a8:	ldr	r1, [pc, #24]	; f9c8 <rb_dlinkDelete+0x84>
    f9ac:	add	r1, pc, r1
    f9b0:	ldr	r3, [pc, #20]	; f9cc <rb_dlinkDelete+0x88>
    f9b4:	add	r3, pc, r3
    f9b8:	mov	r2, #235	; 0xeb
    f9bc:	bl	e7e0 <__assert_fail@plt>
    f9c0:	.word	0x0004b1b8
    f9c4:	.word	0x00030f68
    f9c8:	.word	0x00030f6a
    f9cc:	.word	0x00031005

0000f9d0 <delete_opm_proxy_scanner_all>:
    f9d0:	push	{r4, r5, fp, lr}
    f9d4:	add	fp, sp, #8
    f9d8:	ldr	r0, [pc, #72]	; fa28 <delete_opm_proxy_scanner_all+0x58>
    f9dc:	ldr	r0, [pc, r0]
    f9e0:	ldr	r0, [r0]
    f9e4:	cmp	r0, #0
    f9e8:	beq	fa0c <delete_opm_proxy_scanner_all+0x3c>
    f9ec:	ldr	r4, [r0]
    f9f0:	ldr	r5, [r0, #8]
    f9f4:	bl	f944 <rb_dlinkDelete>
    f9f8:	mov	r0, r4
    f9fc:	bl	f4d0 <rb_free>
    fa00:	cmp	r5, #0
    fa04:	mov	r0, r5
    fa08:	bne	f9ec <delete_opm_proxy_scanner_all+0x1c>
    fa0c:	ldr	r0, [pc, #24]	; fa2c <delete_opm_proxy_scanner_all+0x5c>
    fa10:	ldr	r0, [pc, r0]
    fa14:	ldr	r0, [r0]
    fa18:	ldr	r1, [pc, #16]	; fa30 <delete_opm_proxy_scanner_all+0x60>
    fa1c:	add	r1, pc, r1
    fa20:	pop	{r4, r5, fp, lr}
    fa24:	b	d148 <rb_helper_write@plt>
    fa28:	.word	0x0004b134
    fa2c:	.word	0x0004aff8
    fa30:	.word	0x00030c9c

0000fa34 <rb_uint32cmp>:
    fa34:	sub	r0, r1, r0
    fa38:	bx	lr

0000fa3c <timeout_dead_authd_clients>:
    fa3c:	push	{r4, r5, r6, r7, fp, lr}
    fa40:	add	fp, sp, #16
    fa44:	sub	sp, sp, #24
    fa48:	mov	r0, #0
    fa4c:	str	r0, [sp, #4]
    fa50:	str	r0, [sp]
    fa54:	str	r0, [sp, #8]
    fa58:	ldr	r0, [pc, #204]	; fb2c <timeout_dead_authd_clients+0xf0>
    fa5c:	ldr	r0, [pc, r0]
    fa60:	add	r4, sp, #16
    fa64:	mov	r1, r4
    fa68:	bl	d970 <rb_dictionary_foreach_start@plt>
    fa6c:	ldr	r0, [pc, #188]	; fb30 <timeout_dead_authd_clients+0xf4>
    fa70:	ldr	r0, [pc, r0]
    fa74:	mov	r1, r4
    fa78:	bl	e300 <rb_dictionary_foreach_cur@plt>
    fa7c:	cmp	r0, #0
    fa80:	beq	faf4 <timeout_dead_authd_clients+0xb8>
    fa84:	mov	r6, r0
    fa88:	mov	r4, sp
    fa8c:	add	r5, sp, #16
    fa90:	b	fac0 <timeout_dead_authd_clients+0x84>
    fa94:	ldr	r0, [pc, #152]	; fb34 <timeout_dead_authd_clients+0xf8>
    fa98:	ldr	r0, [pc, r0]
    fa9c:	mov	r1, r5
    faa0:	bl	e5a0 <rb_dictionary_foreach_next@plt>
    faa4:	ldr	r0, [pc, #140]	; fb38 <timeout_dead_authd_clients+0xfc>
    faa8:	ldr	r0, [pc, r0]
    faac:	mov	r1, r5
    fab0:	bl	e300 <rb_dictionary_foreach_cur@plt>
    fab4:	mov	r6, r0
    fab8:	cmp	r0, #0
    fabc:	beq	faf4 <timeout_dead_authd_clients+0xb8>
    fac0:	ldr	r0, [r6, #436]	; 0x1b4
    fac4:	ldr	r7, [r0, #112]	; 0x70
    fac8:	bl	d07c <rb_current_time@plt>
    facc:	cmp	r7, r0
    fad0:	bge	fa94 <timeout_dead_authd_clients+0x58>
    fad4:	mov	r0, r6
    fad8:	bl	ee18 <authd_free_client>
    fadc:	bl	dc58 <rb_make_rb_dlink_node@plt>
    fae0:	mov	r1, r0
    fae4:	mov	r0, r6
    fae8:	mov	r2, r4
    faec:	bl	f774 <rb_dlinkAdd>
    faf0:	b	fa94 <timeout_dead_authd_clients+0x58>
    faf4:	ldr	r4, [sp]
    faf8:	cmp	r4, #0
    fafc:	beq	fb24 <timeout_dead_authd_clients+0xe8>
    fb00:	ldr	r0, [r4]
    fb04:	ldr	r4, [r4, #8]
    fb08:	ldr	r0, [r0, #436]	; 0x1b4
    fb0c:	ldr	r1, [r0, #108]	; 0x6c
    fb10:	ldr	r0, [pc, #36]	; fb3c <timeout_dead_authd_clients+0x100>
    fb14:	ldr	r0, [pc, r0]
    fb18:	bl	d82c <rb_dictionary_delete@plt>
    fb1c:	cmp	r4, #0
    fb20:	bne	fb00 <timeout_dead_authd_clients+0xc4>
    fb24:	sub	sp, fp, #16
    fb28:	pop	{r4, r5, r6, r7, fp, pc}
    fb2c:	.word	0x0004d870
    fb30:	.word	0x0004d85c
    fb34:	.word	0x0004d834
    fb38:	.word	0x0004d824
    fb3c:	.word	0x0004d7b8

0000fb40 <parse_authd_reply>:
    fb40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    fb44:	add	fp, sp, #24
    fb48:	sub	sp, sp, #64	; 0x40
    fb4c:	sub	sp, sp, #16384	; 0x4000
    fb50:	mov	r4, r0
    fb54:	add	r1, sp, #60	; 0x3c
    fb58:	mov	r2, #16384	; 0x4000
    fb5c:	bl	d9d0 <rb_helper_read@plt>
    fb60:	cmp	r0, #1
    fb64:	blt	fc04 <parse_authd_reply+0xc4>
    fb68:	add	r5, sp, #60	; 0x3c
    fb6c:	mov	r6, sp
    fb70:	ldr	r7, [pc, #148]	; fc0c <parse_authd_reply+0xcc>
    fb74:	add	r7, pc, r7
    fb78:	ldr	r9, [pc, #144]	; fc10 <parse_authd_reply+0xd0>
    fb7c:	add	r9, pc, r9
    fb80:	ldr	r8, [pc, #140]	; fc14 <parse_authd_reply+0xd4>
    fb84:	add	r8, pc, r8
    fb88:	b	fbb0 <parse_authd_reply+0x70>
    fb8c:	mov	r0, r9
    fb90:	bl	d3ac <iwarn@plt>
    fb94:	bl	d958 <restart_authd@plt>
    fb98:	mov	r0, r4
    fb9c:	mov	r1, r5
    fba0:	mov	r2, #16384	; 0x4000
    fba4:	bl	d9d0 <rb_helper_read@plt>
    fba8:	cmp	r0, #0
    fbac:	ble	fc04 <parse_authd_reply+0xc4>
    fbb0:	mov	r0, r5
    fbb4:	mov	r1, r6
    fbb8:	mov	r2, #60	; 0x3c
    fbbc:	bl	da54 <rb_string_to_array@plt>
    fbc0:	mov	r2, r0
    fbc4:	ldr	r0, [sp]
    fbc8:	ldrb	r1, [r0]
    fbcc:	ldr	r3, [r7, r1, lsl #3]
    fbd0:	cmp	r3, #0
    fbd4:	beq	fb8c <parse_authd_reply+0x4c>
    fbd8:	add	r0, r7, r1, lsl #3
    fbdc:	ldr	r1, [r0, #4]
    fbe0:	cmp	r1, r2
    fbe4:	ble	fbf4 <parse_authd_reply+0xb4>
    fbe8:	mov	r0, r8
    fbec:	bl	d3ac <iwarn@plt>
    fbf0:	b	fb94 <parse_authd_reply+0x54>
    fbf4:	mov	r0, r2
    fbf8:	mov	r1, r6
    fbfc:	blx	r3
    fc00:	b	fb98 <parse_authd_reply+0x58>
    fc04:	sub	sp, fp, #24
    fc08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    fc0c:	.word	0x00049994
    fc10:	.word	0x00030c2e
    fc14:	.word	0x00030bde

0000fc18 <cmd_accept_client>:
    fc18:	push	{r4, sl, fp, lr}
    fc1c:	add	fp, sp, #8
    fc20:	mov	r4, r1
    fc24:	ldr	r0, [r1, #4]
    fc28:	mov	r1, #1
    fc2c:	bl	fefc <str_cid_to_client>
    fc30:	cmp	r0, #0
    fc34:	popeq	{r4, sl, fp, pc}
    fc38:	ldr	r1, [r4, #8]
    fc3c:	ldr	r2, [r4, #12]
    fc40:	pop	{r4, sl, fp, lr}
    fc44:	b	f10c <authd_accept_client>

0000fc48 <cmd_dns_result>:
    fc48:	ldmib	r1, {r0, ip}
    fc4c:	ldr	r2, [r1, #12]
    fc50:	ldr	r3, [r1, #16]
    fc54:	mov	r1, ip
    fc58:	b	d4e4 <dns_results_callback@plt>

0000fc5c <cmd_notice_client>:
    fc5c:	push	{r4, sl, fp, lr}
    fc60:	add	fp, sp, #8
    fc64:	mov	r4, r1
    fc68:	ldr	r0, [r1, #4]
    fc6c:	mov	r1, #0
    fc70:	bl	fefc <str_cid_to_client>
    fc74:	cmp	r0, #0
    fc78:	popeq	{r4, sl, fp, pc}
    fc7c:	ldr	r2, [r4, #8]
    fc80:	ldr	r1, [pc, #8]	; fc90 <cmd_notice_client+0x34>
    fc84:	add	r1, pc, r1
    fc88:	pop	{r4, sl, fp, lr}
    fc8c:	b	e414 <sendto_one_notice@plt>
    fc90:	.word	0x000367bc

0000fc94 <cmd_reject_client>:
    fc94:	push	{r4, r5, r6, r7, fp, lr}
    fc98:	add	fp, sp, #16
    fc9c:	sub	sp, sp, #8
    fca0:	mov	r4, r1
    fca4:	ldr	r0, [r1, #4]
    fca8:	mov	r1, #1
    fcac:	bl	fefc <str_cid_to_client>
    fcb0:	cmp	r0, #0
    fcb4:	beq	fcf4 <cmd_reject_client+0x60>
    fcb8:	mov	r5, r0
    fcbc:	ldr	r6, [r4, #12]
    fcc0:	ldr	r7, [r4, #16]
    fcc4:	bl	dbbc <__ctype_toupper_loc@plt>
    fcc8:	ldr	r0, [r0]
    fccc:	ldr	r1, [r4, #8]
    fcd0:	ldr	r2, [r4, #20]
    fcd4:	ldr	r4, [r4, #24]
    fcd8:	ldrb	r1, [r1]
    fcdc:	ldrb	r3, [r0, r1, lsl #2]
    fce0:	stm	sp, {r2, r4}
    fce4:	mov	r0, r5
    fce8:	mov	r1, r6
    fcec:	mov	r2, r7
    fcf0:	bl	db68 <authd_reject_client@plt>
    fcf4:	sub	sp, fp, #16
    fcf8:	pop	{r4, r5, r6, r7, fp, pc}

0000fcfc <cmd_oper_warn>:
    fcfc:	push	{r4, sl, fp, lr}
    fd00:	add	fp, sp, #8
    fd04:	sub	sp, sp, #8
    fd08:	mov	r4, r1
    fd0c:	ldr	r3, [r1, #4]
    fd10:	ldrb	r0, [r3]
    fd14:	sub	r0, r0, #67	; 0x43
    fd18:	cmp	r0, #20
    fd1c:	bhi	fde0 <cmd_oper_warn+0xe4>
    fd20:	add	r1, pc, #4
    fd24:	ldr	r0, [r1, r0, lsl #2]
    fd28:	add	pc, r1, r0
    fd2c:	.word	0x00000054
    fd30:	.word	0x00000084
    fd34:	.word	0x000000b4
    fd38:	.word	0x000000b4
    fd3c:	.word	0x000000b4
    fd40:	.word	0x000000b4
    fd44:	.word	0x000000ec
    fd48:	.word	0x000000b4
    fd4c:	.word	0x000000b4
    fd50:	.word	0x000000b4
    fd54:	.word	0x000000b4
    fd58:	.word	0x000000b4
    fd5c:	.word	0x000000b4
    fd60:	.word	0x000000b4
    fd64:	.word	0x000000b4
    fd68:	.word	0x000000b4
    fd6c:	.word	0x000000b4
    fd70:	.word	0x000000b4
    fd74:	.word	0x000000b4
    fd78:	.word	0x000000b4
    fd7c:	.word	0x0000011c
    fd80:	ldr	r3, [r4, #8]
    fd84:	ldr	r2, [pc, #260]	; fe90 <cmd_oper_warn+0x194>
    fd88:	add	r2, pc, r2
    fd8c:	mov	r0, #256	; 0x100
    fd90:	mov	r1, #0
    fd94:	bl	d634 <sendto_realops_snomask@plt>
    fd98:	ldr	r1, [r4, #8]
    fd9c:	ldr	r0, [pc, #240]	; fe94 <cmd_oper_warn+0x198>
    fda0:	add	r0, pc, r0
    fda4:	sub	sp, fp, #8
    fda8:	pop	{r4, sl, fp, lr}
    fdac:	b	d640 <ierror@plt>
    fdb0:	ldr	r3, [r4, #8]
    fdb4:	ldr	r2, [pc, #188]	; fe78 <cmd_oper_warn+0x17c>
    fdb8:	add	r2, pc, r2
    fdbc:	mov	r0, #8
    fdc0:	mov	r1, #0
    fdc4:	bl	d634 <sendto_realops_snomask@plt>
    fdc8:	ldr	r1, [r4, #8]
    fdcc:	ldr	r0, [pc, #168]	; fe7c <cmd_oper_warn+0x180>
    fdd0:	add	r0, pc, r0
    fdd4:	sub	sp, fp, #8
    fdd8:	pop	{r4, sl, fp, lr}
    fddc:	b	d490 <idebug@plt>
    fde0:	ldr	r0, [r4, #8]
    fde4:	str	r0, [sp]
    fde8:	ldr	r2, [pc, #168]	; fe98 <cmd_oper_warn+0x19c>
    fdec:	add	r2, pc, r2
    fdf0:	mov	r0, #256	; 0x100
    fdf4:	mov	r1, #0
    fdf8:	bl	d634 <sendto_realops_snomask@plt>
    fdfc:	ldmib	r4, {r2, r3}
    fe00:	ldr	r1, [pc, #148]	; fe9c <cmd_oper_warn+0x1a0>
    fe04:	add	r1, pc, r1
    fe08:	mov	r0, #0
    fe0c:	sub	sp, fp, #8
    fe10:	pop	{r4, sl, fp, lr}
    fe14:	b	e0b4 <ilog@plt>
    fe18:	ldr	r3, [r4, #8]
    fe1c:	ldr	r2, [pc, #92]	; fe80 <cmd_oper_warn+0x184>
    fe20:	add	r2, pc, r2
    fe24:	mov	r0, #256	; 0x100
    fe28:	mov	r1, #0
    fe2c:	bl	d634 <sendto_realops_snomask@plt>
    fe30:	ldr	r1, [r4, #8]
    fe34:	ldr	r0, [pc, #72]	; fe84 <cmd_oper_warn+0x188>
    fe38:	add	r0, pc, r0
    fe3c:	sub	sp, fp, #8
    fe40:	pop	{r4, sl, fp, lr}
    fe44:	b	d10c <inotice@plt>
    fe48:	ldr	r3, [r4, #8]
    fe4c:	ldr	r2, [pc, #52]	; fe88 <cmd_oper_warn+0x18c>
    fe50:	add	r2, pc, r2
    fe54:	mov	r0, #256	; 0x100
    fe58:	mov	r1, #0
    fe5c:	bl	d634 <sendto_realops_snomask@plt>
    fe60:	ldr	r1, [r4, #8]
    fe64:	ldr	r0, [pc, #32]	; fe8c <cmd_oper_warn+0x190>
    fe68:	add	r0, pc, r0
    fe6c:	sub	sp, fp, #8
    fe70:	pop	{r4, sl, fp, lr}
    fe74:	b	d3ac <iwarn@plt>
    fe78:	.word	0x00030a3f
    fe7c:	.word	0x00030a37
    fe80:	.word	0x000309f1
    fe84:	.word	0x000309cf
    fe88:	.word	0x000309d0
    fe8c:	.word	0x0003099f
    fe90:	.word	0x00030aaa
    fe94:	.word	0x00030a67
    fe98:	.word	0x00030a59
    fe9c:	.word	0x00030a74

0000fea0 <cmd_stats_results>:
    fea0:	push	{fp, lr}
    fea4:	mov	fp, sp
    fea8:	mov	r2, r0
    feac:	ldr	r0, [r1, #8]
    feb0:	ldrb	r0, [r0]
    feb4:	cmp	r0, #68	; 0x44
    feb8:	popne	{fp, pc}
    febc:	cmp	r2, #3
    fec0:	bgt	fedc <cmd_stats_results+0x3c>
    fec4:	ldr	r0, [pc, #44]	; fef8 <cmd_stats_results+0x58>
    fec8:	add	r0, pc, r0
    fecc:	mov	r1, r2
    fed0:	bl	d3ac <iwarn@plt>
    fed4:	pop	{fp, lr}
    fed8:	b	ee84 <restart_authd>
    fedc:	ldr	ip, [r1]
    fee0:	ldr	r0, [r1, #4]
    fee4:	sub	r2, r2, #3
    fee8:	add	r3, r1, #12
    feec:	mov	r1, ip
    fef0:	pop	{fp, lr}
    fef4:	b	dd00 <dns_stats_results_callback@plt>
    fef8:	.word	0x000309d8

0000fefc <str_cid_to_client>:
    fefc:	push	{r4, sl, fp, lr}
    ff00:	add	fp, sp, #8
    ff04:	mov	r4, r1
    ff08:	bl	ff28 <str_to_cid>
    ff0c:	cmp	r0, #0
    ff10:	beq	ff20 <str_cid_to_client+0x24>
    ff14:	mov	r1, r4
    ff18:	pop	{r4, sl, fp, lr}
    ff1c:	b	ff6c <cid_to_client>
    ff20:	mov	r0, #0
    ff24:	pop	{r4, sl, fp, pc}

0000ff28 <str_to_cid>:
    ff28:	push	{r4, sl, fp, lr}
    ff2c:	add	fp, sp, #8
    ff30:	mov	r4, #0
    ff34:	mov	r1, #0
    ff38:	mov	r2, #16
    ff3c:	bl	d118 <strtol@plt>
    ff40:	mov	r1, r0
    ff44:	cmp	r0, #0
    ff48:	movgt	r0, r1
    ff4c:	popgt	{r4, sl, fp, pc}
    ff50:	ldr	r0, [pc, #16]	; ff68 <str_to_cid+0x40>
    ff54:	add	r0, pc, r0
    ff58:	bl	d3ac <iwarn@plt>
    ff5c:	bl	d958 <restart_authd@plt>
    ff60:	mov	r0, r4
    ff64:	pop	{r4, sl, fp, pc}
    ff68:	.word	0x0003087b

0000ff6c <cid_to_client>:
    ff6c:	mov	r2, r0
    ff70:	ldr	r0, [pc, #24]	; ff90 <cid_to_client+0x24>
    ff74:	ldr	r0, [pc, r0]
    ff78:	cmp	r1, #0
    ff7c:	beq	ff88 <cid_to_client+0x1c>
    ff80:	mov	r1, r2
    ff84:	b	d82c <rb_dictionary_delete@plt>
    ff88:	mov	r1, r2
    ff8c:	b	e6e4 <rb_dictionary_retrieve@plt>
    ff90:	.word	0x0004d358

0000ff94 <authd_free_client_cb>:
    ff94:	ldr	r0, [r0, #16]
    ff98:	b	ee18 <authd_free_client>

0000ff9c <rb_dlinkAddTail>:
    ff9c:	push	{fp, lr}
    ffa0:	mov	fp, sp
    ffa4:	cmp	r1, #0
    ffa8:	beq	1000c <rb_dlinkAddTail+0x70>
    ffac:	cmp	r0, #0
    ffb0:	beq	1002c <rb_dlinkAddTail+0x90>
    ffb4:	mov	r2, #0
    ffb8:	str	r2, [r1, #8]
    ffbc:	str	r0, [r1]
    ffc0:	ldr	r0, [pc, #132]	; 1004c <rb_dlinkAddTail+0xb0>
    ffc4:	ldr	r0, [pc, r0]
    ffc8:	ldr	r2, [r0, #4]
    ffcc:	str	r2, [r1, #4]
    ffd0:	ldr	r2, [r0, #4]
    ffd4:	cmp	r2, #0
    ffd8:	beq	ffe8 <rb_dlinkAddTail+0x4c>
    ffdc:	add	r2, r2, #8
    ffe0:	str	r1, [r2]
    ffe4:	b	fff8 <rb_dlinkAddTail+0x5c>
    ffe8:	ldr	r2, [r0]
    ffec:	cmp	r2, #0
    fff0:	mov	r2, r0
    fff4:	streq	r1, [r2]
    fff8:	str	r1, [r0, #4]
    fffc:	ldr	r1, [r0, #8]
   10000:	add	r1, r1, #1
   10004:	str	r1, [r0, #8]
   10008:	pop	{fp, pc}
   1000c:	ldr	r0, [pc, #60]	; 10050 <rb_dlinkAddTail+0xb4>
   10010:	add	r0, pc, r0
   10014:	ldr	r1, [pc, #56]	; 10054 <rb_dlinkAddTail+0xb8>
   10018:	add	r1, pc, r1
   1001c:	ldr	r3, [pc, #52]	; 10058 <rb_dlinkAddTail+0xbc>
   10020:	add	r3, pc, r3
   10024:	mov	r2, #211	; 0xd3
   10028:	bl	e7e0 <__assert_fail@plt>
   1002c:	ldr	r0, [pc, #40]	; 1005c <rb_dlinkAddTail+0xc0>
   10030:	add	r0, pc, r0
   10034:	ldr	r1, [pc, #36]	; 10060 <rb_dlinkAddTail+0xc4>
   10038:	add	r1, pc, r1
   1003c:	ldr	r3, [pc, #32]	; 10064 <rb_dlinkAddTail+0xc8>
   10040:	add	r3, pc, r3
   10044:	mov	r2, #213	; 0xd5
   10048:	bl	e7e0 <__assert_fail@plt>
   1004c:	.word	0x0004aacc
   10050:	.word	0x000308fc
   10054:	.word	0x000308fe
   10058:	.word	0x00030912
   1005c:	.word	0x00030941
   10060:	.word	0x000308de
   10064:	.word	0x000308f2

00010068 <init_bandb>:
   10068:	push	{fp, lr}
   1006c:	mov	fp, sp
   10070:	bl	100a8 <start_bandb>
   10074:	cmp	r0, #0
   10078:	popeq	{fp, pc}
   1007c:	bl	de38 <__errno_location@plt>
   10080:	ldr	r0, [r0]
   10084:	bl	dac0 <strerror@plt>
   10088:	mov	r2, r0
   1008c:	ldr	r1, [pc, #16]	; 100a4 <init_bandb+0x3c>
   10090:	add	r1, pc, r1
   10094:	mov	r0, #0
   10098:	bl	e0b4 <ilog@plt>
   1009c:	mov	r0, #0
   100a0:	bl	dc28 <exit@plt>
   100a4:	.word	0x0003095f

000100a8 <start_bandb>:
   100a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   100ac:	add	fp, sp, #24
   100b0:	sub	sp, sp, #16
   100b4:	sub	sp, sp, #4096	; 0x1000
   100b8:	ldr	r5, [pc, #388]	; 10244 <start_bandb+0x19c>
   100bc:	ldr	r5, [pc, r5]
   100c0:	ldr	r1, [r5, #52]	; 0x34
   100c4:	ldr	r0, [pc, #380]	; 10248 <start_bandb+0x1a0>
   100c8:	add	r0, pc, r0
   100cc:	mov	r2, #1
   100d0:	bl	cf68 <rb_setenv@plt>
   100d4:	ldr	r0, [pc, #368]	; 1024c <start_bandb+0x1a4>
   100d8:	ldr	r0, [pc, r0]
   100dc:	cmp	r0, #0
   100e0:	bne	10180 <start_bandb+0xd8>
   100e4:	ldr	r3, [r5, #60]	; 0x3c
   100e8:	ldr	r6, [pc, #352]	; 10250 <start_bandb+0x1a8>
   100ec:	add	r6, pc, r6
   100f0:	mov	r7, #47	; 0x2f
   100f4:	str	r7, [sp]
   100f8:	str	r6, [sp, #4]
   100fc:	add	r4, sp, #15
   10100:	ldr	r2, [pc, #332]	; 10254 <start_bandb+0x1ac>
   10104:	add	r2, pc, r2
   10108:	mov	r0, r4
   1010c:	movw	r1, #4097	; 0x1001
   10110:	bl	de74 <snprintf@plt>
   10114:	mov	r0, r4
   10118:	mov	r1, #1
   1011c:	bl	e09c <access@plt>
   10120:	cmn	r0, #1
   10124:	bne	1016c <start_bandb+0xc4>
   10128:	ldr	r8, [pc, #296]	; 10258 <start_bandb+0x1b0>
   1012c:	ldr	r8, [pc, r8]
   10130:	ldr	r3, [r8]
   10134:	str	r7, [sp]
   10138:	str	r7, [sp, #4]
   1013c:	str	r6, [sp, #8]
   10140:	add	r4, sp, #15
   10144:	ldr	r2, [pc, #272]	; 1025c <start_bandb+0x1b4>
   10148:	add	r2, pc, r2
   1014c:	mov	r0, r4
   10150:	movw	r1, #4097	; 0x1001
   10154:	bl	de74 <snprintf@plt>
   10158:	mov	r0, r4
   1015c:	mov	r1, #1
   10160:	bl	e09c <access@plt>
   10164:	cmn	r0, #1
   10168:	beq	10218 <start_bandb+0x170>
   1016c:	add	r0, sp, #15
   10170:	bl	104c8 <rb_strdup>
   10174:	ldr	r1, [pc, #236]	; 10268 <start_bandb+0x1c0>
   10178:	add	r1, pc, r1
   1017c:	str	r0, [r1]
   10180:	ldr	r1, [pc, #228]	; 1026c <start_bandb+0x1c4>
   10184:	ldr	r1, [pc, r1]
   10188:	ldr	r0, [pc, #224]	; 10270 <start_bandb+0x1c8>
   1018c:	add	r0, pc, r0
   10190:	ldr	r2, [pc, #220]	; 10274 <start_bandb+0x1cc>
   10194:	add	r2, pc, r2
   10198:	ldr	r3, [pc, #216]	; 10278 <start_bandb+0x1d0>
   1019c:	add	r3, pc, r3
   101a0:	bl	e48c <rb_helper_start@plt>
   101a4:	ldr	r1, [pc, #208]	; 1027c <start_bandb+0x1d4>
   101a8:	add	r1, pc, r1
   101ac:	str	r0, [r1]
   101b0:	cmp	r0, #0
   101b4:	beq	101c4 <start_bandb+0x11c>
   101b8:	bl	de5c <rb_helper_run@plt>
   101bc:	mov	r4, #0
   101c0:	b	1020c <start_bandb+0x164>
   101c4:	bl	de38 <__errno_location@plt>
   101c8:	mov	r4, r0
   101cc:	ldr	r0, [r0]
   101d0:	bl	dac0 <strerror@plt>
   101d4:	mov	r2, r0
   101d8:	ldr	r5, [pc, #160]	; 10280 <start_bandb+0x1d8>
   101dc:	add	r5, pc, r5
   101e0:	mov	r0, #0
   101e4:	mov	r1, r5
   101e8:	bl	e0b4 <ilog@plt>
   101ec:	ldr	r0, [r4]
   101f0:	bl	dac0 <strerror@plt>
   101f4:	mov	r3, r0
   101f8:	mov	r0, #256	; 0x100
   101fc:	mov	r1, #0
   10200:	mov	r2, r5
   10204:	bl	d634 <sendto_realops_snomask@plt>
   10208:	mov	r4, #1
   1020c:	mov	r0, r4
   10210:	sub	sp, fp, #24
   10214:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10218:	ldr	r3, [r5, #60]	; 0x3c
   1021c:	ldr	r0, [r8]
   10220:	str	r0, [sp]
   10224:	mov	r4, #0
   10228:	ldr	r1, [pc, #48]	; 10260 <start_bandb+0x1b8>
   1022c:	add	r1, pc, r1
   10230:	ldr	r2, [pc, #44]	; 10264 <start_bandb+0x1bc>
   10234:	add	r2, pc, r2
   10238:	mov	r0, #0
   1023c:	bl	e0b4 <ilog@plt>
   10240:	b	1020c <start_bandb+0x164>
   10244:	.word	0x0004a98c
   10248:	.word	0x00030961
   1024c:	.word	0x0004d604
   10250:	.word	0x00035a69
   10254:	.word	0x00030932
   10258:	.word	0x0004aa50
   1025c:	.word	0x000308fa
   10260:	.word	0x00030827
   10264:	.word	0x00035921
   10268:	.word	0x0004d564
   1026c:	.word	0x0004d558
   10270:	.word	0x000308f1
   10274:	.word	0x0000035c
   10278:	.word	0x000004ec
   1027c:	.word	0x0004d130
   10280:	.word	0x000308a7

00010284 <bandb_add>:
   10284:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10288:	add	fp, sp, #24
   1028c:	sub	sp, sp, #16
   10290:	mov	r5, r1
   10294:	ldr	r1, [pc, #256]	; 1039c <bandb_add+0x118>
   10298:	ldr	r1, [pc, r1]
   1029c:	cmp	r1, #0
   102a0:	beq	10394 <bandb_add+0x110>
   102a4:	mov	r6, r3
   102a8:	ldr	r8, [fp, #16]
   102ac:	ldr	r4, [fp, #12]
   102b0:	ldr	r7, [fp, #8]
   102b4:	str	r2, [sp]
   102b8:	ldr	r1, [pc, #224]	; 103a0 <bandb_add+0x11c>
   102bc:	add	r1, pc, r1
   102c0:	ldrb	r3, [r1, r0]
   102c4:	ldr	r0, [pc, #216]	; 103a4 <bandb_add+0x120>
   102c8:	add	r0, pc, r0
   102cc:	ldr	r2, [pc, #212]	; 103a8 <bandb_add+0x124>
   102d0:	add	r2, pc, r2
   102d4:	mov	r1, #512	; 0x200
   102d8:	bl	de74 <snprintf@plt>
   102dc:	cmp	r6, #0
   102e0:	beq	1030c <bandb_add+0x88>
   102e4:	ldrb	r0, [r6]
   102e8:	cmp	r0, #0
   102ec:	beq	1030c <bandb_add+0x88>
   102f0:	ldr	r0, [pc, #180]	; 103ac <bandb_add+0x128>
   102f4:	add	r0, pc, r0
   102f8:	ldr	r2, [pc, #176]	; 103b0 <bandb_add+0x12c>
   102fc:	add	r2, pc, r2
   10300:	mov	r1, #512	; 0x200
   10304:	mov	r3, r6
   10308:	bl	d658 <rb_snprintf_append@plt>
   1030c:	mov	r0, r5
   10310:	bl	d724 <get_oper_name@plt>
   10314:	mov	r5, r0
   10318:	bl	d07c <rb_current_time@plt>
   1031c:	stm	sp, {r0, r8}
   10320:	str	r7, [sp, #8]
   10324:	ldr	r0, [pc, #136]	; 103b4 <bandb_add+0x130>
   10328:	add	r0, pc, r0
   1032c:	ldr	r2, [pc, #132]	; 103b8 <bandb_add+0x134>
   10330:	add	r2, pc, r2
   10334:	mov	r1, #512	; 0x200
   10338:	mov	r3, r5
   1033c:	bl	d658 <rb_snprintf_append@plt>
   10340:	cmp	r4, #0
   10344:	beq	10370 <bandb_add+0xec>
   10348:	ldrb	r0, [r4]
   1034c:	cmp	r0, #0
   10350:	beq	10370 <bandb_add+0xec>
   10354:	ldr	r0, [pc, #96]	; 103bc <bandb_add+0x138>
   10358:	add	r0, pc, r0
   1035c:	ldr	r2, [pc, #92]	; 103c0 <bandb_add+0x13c>
   10360:	add	r2, pc, r2
   10364:	mov	r1, #512	; 0x200
   10368:	mov	r3, r4
   1036c:	bl	d658 <rb_snprintf_append@plt>
   10370:	ldr	r0, [pc, #76]	; 103c4 <bandb_add+0x140>
   10374:	ldr	r0, [pc, r0]
   10378:	ldr	r1, [pc, #72]	; 103c8 <bandb_add+0x144>
   1037c:	add	r1, pc, r1
   10380:	ldr	r2, [pc, #68]	; 103cc <bandb_add+0x148>
   10384:	add	r2, pc, r2
   10388:	sub	sp, fp, #24
   1038c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10390:	b	d148 <rb_helper_write@plt>
   10394:	sub	sp, fp, #24
   10398:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1039c:	.word	0x0004d040
   103a0:	.word	0x0003084a
   103a4:	.word	0x0004d014
   103a8:	.word	0x00030740
   103ac:	.word	0x0004cfe8
   103b0:	.word	0x0003733b
   103b4:	.word	0x0004cfb4
   103b8:	.word	0x000306e7
   103bc:	.word	0x0004cf84
   103c0:	.word	0x000306c5
   103c4:	.word	0x0004cf64
   103c8:	.word	0x00037639
   103cc:	.word	0x0004cf58

000103d0 <bandb_del>:
   103d0:	push	{r4, sl, fp, lr}
   103d4:	add	fp, sp, #8
   103d8:	sub	sp, sp, #8
   103dc:	mov	r4, r2
   103e0:	ldr	r2, [pc, #152]	; 10480 <bandb_del+0xb0>
   103e4:	ldr	r2, [pc, r2]
   103e8:	cmp	r2, #0
   103ec:	beq	10478 <bandb_del+0xa8>
   103f0:	ldr	ip, [pc, #140]	; 10484 <bandb_del+0xb4>
   103f4:	add	ip, pc, ip
   103f8:	mov	r2, #0
   103fc:	strb	r2, [ip]
   10400:	str	r1, [sp]
   10404:	ldr	r1, [pc, #124]	; 10488 <bandb_del+0xb8>
   10408:	add	r1, pc, r1
   1040c:	ldrb	r3, [r1, r0]
   10410:	ldr	r2, [pc, #116]	; 1048c <bandb_del+0xbc>
   10414:	add	r2, pc, r2
   10418:	mov	r0, ip
   1041c:	mov	r1, #512	; 0x200
   10420:	bl	d658 <rb_snprintf_append@plt>
   10424:	cmp	r4, #0
   10428:	beq	10454 <bandb_del+0x84>
   1042c:	ldrb	r0, [r4]
   10430:	cmp	r0, #0
   10434:	beq	10454 <bandb_del+0x84>
   10438:	ldr	r0, [pc, #80]	; 10490 <bandb_del+0xc0>
   1043c:	add	r0, pc, r0
   10440:	ldr	r2, [pc, #76]	; 10494 <bandb_del+0xc4>
   10444:	add	r2, pc, r2
   10448:	mov	r1, #512	; 0x200
   1044c:	mov	r3, r4
   10450:	bl	d658 <rb_snprintf_append@plt>
   10454:	ldr	r0, [pc, #60]	; 10498 <bandb_del+0xc8>
   10458:	ldr	r0, [pc, r0]
   1045c:	ldr	r1, [pc, #56]	; 1049c <bandb_del+0xcc>
   10460:	add	r1, pc, r1
   10464:	ldr	r2, [pc, #52]	; 104a0 <bandb_del+0xd0>
   10468:	add	r2, pc, r2
   1046c:	sub	sp, fp, #8
   10470:	pop	{r4, sl, fp, lr}
   10474:	b	d148 <rb_helper_write@plt>
   10478:	sub	sp, fp, #8
   1047c:	pop	{r4, sl, fp, pc}
   10480:	.word	0x0004cef4
   10484:	.word	0x0004d0e8
   10488:	.word	0x00030702
   1048c:	.word	0x00031633
   10490:	.word	0x0004d0a0
   10494:	.word	0x00037570
   10498:	.word	0x0004ce80
   1049c:	.word	0x00037555
   104a0:	.word	0x0004d074

000104a4 <bandb_rehash_bans>:
   104a4:	ldr	r0, [pc, #20]	; 104c0 <bandb_rehash_bans+0x1c>
   104a8:	ldr	r0, [pc, r0]
   104ac:	cmp	r0, #0
   104b0:	bxeq	lr
   104b4:	ldr	r1, [pc, #8]	; 104c4 <bandb_rehash_bans+0x20>
   104b8:	add	r1, pc, r1
   104bc:	b	d148 <rb_helper_write@plt>
   104c0:	.word	0x0004ce30
   104c4:	.word	0x000304c4

000104c8 <rb_strdup>:
   104c8:	push	{r4, sl, fp, lr}
   104cc:	add	fp, sp, #8
   104d0:	mov	r4, r0
   104d4:	bl	dc94 <strlen@plt>
   104d8:	add	r0, r0, #1
   104dc:	bl	da84 <malloc@plt>
   104e0:	cmp	r0, #0
   104e4:	beq	104f4 <rb_strdup+0x2c>
   104e8:	mov	r1, r4
   104ec:	pop	{r4, sl, fp, lr}
   104f0:	b	d91c <strcpy@plt>
   104f4:	bl	d448 <rb_outofmemory@plt>

000104f8 <bandb_parse>:
   104f8:	push	{r4, r5, r6, sl, fp, lr}
   104fc:	add	fp, sp, #16
   10500:	sub	sp, sp, #64	; 0x40
   10504:	mov	r4, r0
   10508:	ldr	r1, [pc, #376]	; 10688 <bandb_parse+0x190>
   1050c:	add	r1, pc, r1
   10510:	mov	r2, #16384	; 0x4000
   10514:	bl	d9d0 <rb_helper_read@plt>
   10518:	cmp	r0, #0
   1051c:	beq	10678 <bandb_parse+0x180>
   10520:	ldr	r5, [pc, #356]	; 1068c <bandb_parse+0x194>
   10524:	add	r5, pc, r5
   10528:	add	r6, sp, #4
   1052c:	b	1054c <bandb_parse+0x54>
   10530:	bl	10930 <bandb_handle_finish>
   10534:	mov	r0, r4
   10538:	mov	r1, r5
   1053c:	mov	r2, #16384	; 0x4000
   10540:	bl	d9d0 <rb_helper_read@plt>
   10544:	cmp	r0, #0
   10548:	beq	10678 <bandb_parse+0x180>
   1054c:	mov	r0, r5
   10550:	mov	r1, r6
   10554:	mov	r2, #60	; 0x3c
   10558:	bl	da54 <rb_string_to_array@plt>
   1055c:	cmp	r0, #1
   10560:	blt	10534 <bandb_parse+0x3c>
   10564:	ldr	r0, [sp, #4]
   10568:	ldrb	r0, [r0]
   1056c:	sub	r0, r0, #33	; 0x21
   10570:	cmp	r0, #55	; 0x37
   10574:	bhi	10534 <bandb_parse+0x3c>
   10578:	add	r1, pc, #4
   1057c:	ldr	r0, [r1, r0, lsl #2]
   10580:	add	pc, r1, r0
   10584:	.word	0x000000fc
   10588:	.word	0xffffffb0
   1058c:	.word	0xffffffb0
   10590:	.word	0xffffffb0
   10594:	.word	0xffffffb0
   10598:	.word	0xffffffb0
   1059c:	.word	0xffffffb0
   105a0:	.word	0xffffffb0
   105a4:	.word	0xffffffb0
   105a8:	.word	0xffffffb0
   105ac:	.word	0xffffffb0
   105b0:	.word	0xffffffb0
   105b4:	.word	0xffffffb0
   105b8:	.word	0xffffffb0
   105bc:	.word	0xffffffb0
   105c0:	.word	0xffffffb0
   105c4:	.word	0xffffffb0
   105c8:	.word	0xffffffb0
   105cc:	.word	0xffffffb0
   105d0:	.word	0xffffffb0
   105d4:	.word	0xffffffb0
   105d8:	.word	0xffffffb0
   105dc:	.word	0xffffffb0
   105e0:	.word	0xffffffb0
   105e4:	.word	0xffffffb0
   105e8:	.word	0xffffffb0
   105ec:	.word	0xffffffb0
   105f0:	.word	0xffffffb0
   105f4:	.word	0xffffffb0
   105f8:	.word	0xffffffb0
   105fc:	.word	0xffffffb0
   10600:	.word	0xffffffb0
   10604:	.word	0xffffffb0
   10608:	.word	0xffffffb0
   1060c:	.word	0x000000ec
   10610:	.word	0x000000e0
   10614:	.word	0xffffffb0
   10618:	.word	0xffffffac
   1061c:	.word	0xffffffb0
   10620:	.word	0xffffffb0
   10624:	.word	0xffffffb0
   10628:	.word	0xffffffb0
   1062c:	.word	0x000000e0
   10630:	.word	0xffffffb0
   10634:	.word	0xffffffb0
   10638:	.word	0xffffffb0
   1063c:	.word	0xffffffb0
   10640:	.word	0xffffffb0
   10644:	.word	0xffffffb0
   10648:	.word	0x000000e0
   1064c:	.word	0xffffffb0
   10650:	.word	0xffffffb0
   10654:	.word	0xffffffb0
   10658:	.word	0xffffffb0
   1065c:	.word	0xffffffb0
   10660:	.word	0x000000e0
   10664:	mov	r0, r6
   10668:	bl	10770 <bandb_handle_ban>
   1066c:	b	10534 <bandb_parse+0x3c>
   10670:	bl	108e4 <bandb_handle_clear>
   10674:	b	10534 <bandb_parse+0x3c>
   10678:	sub	sp, fp, #16
   1067c:	pop	{r4, r5, r6, sl, fp, pc}
   10680:	add	r0, sp, #4
   10684:	bl	106f0 <bandb_handle_failure>
   10688:	.word	0x0004d1d4
   1068c:	.word	0x0004d1bc

00010690 <bandb_restart_cb>:
   10690:	push	{r4, r5, r6, sl, fp, lr}
   10694:	add	fp, sp, #16
   10698:	mov	r4, r0
   1069c:	mov	r6, #0
   106a0:	ldr	r5, [pc, #64]	; 106e8 <bandb_restart_cb+0x58>
   106a4:	add	r5, pc, r5
   106a8:	mov	r0, #0
   106ac:	mov	r1, r5
   106b0:	bl	e0b4 <ilog@plt>
   106b4:	mov	r0, #256	; 0x100
   106b8:	mov	r1, #0
   106bc:	mov	r2, r5
   106c0:	bl	d634 <sendto_realops_snomask@plt>
   106c4:	cmp	r4, #0
   106c8:	beq	106e0 <bandb_restart_cb+0x50>
   106cc:	mov	r0, r4
   106d0:	bl	d19c <rb_helper_close@plt>
   106d4:	ldr	r0, [pc, #16]	; 106ec <bandb_restart_cb+0x5c>
   106d8:	add	r0, pc, r0
   106dc:	str	r6, [r0]
   106e0:	pop	{r4, r5, r6, sl, fp, lr}
   106e4:	b	100a8 <start_bandb>
   106e8:	.word	0x0003042e
   106ec:	.word	0x0004cc00

000106f0 <bandb_handle_failure>:
   106f0:	push	{fp, lr}
   106f4:	mov	fp, sp
   106f8:	mov	r4, r0
   106fc:	ldr	r0, [pc, #92]	; 10760 <bandb_handle_failure+0x70>
   10700:	ldr	r0, [pc, r0]
   10704:	ldrb	r0, [r0]
   10708:	cmp	r0, #0
   1070c:	beq	1072c <bandb_handle_failure+0x3c>
   10710:	ldr	r2, [r4, #4]
   10714:	ldr	r0, [pc, #72]	; 10764 <bandb_handle_failure+0x74>
   10718:	ldr	r0, [pc, r0]
   1071c:	ldr	r0, [r0]
   10720:	ldr	r1, [pc, #64]	; 10768 <bandb_handle_failure+0x78>
   10724:	add	r1, pc, r1
   10728:	bl	dd60 <fprintf@plt>
   1072c:	ldr	r2, [r4, #4]
   10730:	ldr	r5, [pc, #52]	; 1076c <bandb_handle_failure+0x7c>
   10734:	add	r5, pc, r5
   10738:	mov	r0, #0
   1073c:	mov	r1, r5
   10740:	bl	e0b4 <ilog@plt>
   10744:	ldr	r3, [r4, #4]
   10748:	mov	r0, #256	; 0x100
   1074c:	mov	r1, #0
   10750:	mov	r2, r5
   10754:	bl	d634 <sendto_realops_snomask@plt>
   10758:	mov	r0, #1
   1075c:	bl	dc28 <exit@plt>
   10760:	.word	0x0004a248
   10764:	.word	0x0004a240
   10768:	.word	0x00030379
   1076c:	.word	0x00030384

00010770 <bandb_handle_ban>:
   10770:	push	{r4, r5, r6, r7, fp, lr}
   10774:	add	fp, sp, #16
   10778:	mov	r5, r0
   1077c:	bl	cfbc <make_conf@plt>
   10780:	mov	r4, r0
   10784:	mov	r0, #0
   10788:	str	r0, [r4, #32]
   1078c:	ldr	r0, [r5]
   10790:	ldrb	r0, [r0]
   10794:	mov	r6, #1
   10798:	cmp	r0, #75	; 0x4b
   1079c:	bne	107b0 <bandb_handle_ban+0x40>
   107a0:	ldr	r0, [r5, #4]
   107a4:	bl	104c8 <rb_strdup>
   107a8:	str	r0, [r4, #28]
   107ac:	mov	r6, #2
   107b0:	mov	r7, r5
   107b4:	ldr	r0, [r7, r6, lsl #2]!
   107b8:	bl	104c8 <rb_strdup>
   107bc:	str	r0, [r4, #16]
   107c0:	ldr	r0, [r7, #4]
   107c4:	bl	d8bc <operhash_add@plt>
   107c8:	str	r0, [r4, #12]
   107cc:	add	r6, r6, #2
   107d0:	ldr	r0, [r5]
   107d4:	ldrb	r0, [r0]
   107d8:	sub	r1, r0, #68	; 0x44
   107dc:	cmp	r1, #20
   107e0:	bhi	10890 <bandb_handle_ban+0x120>
   107e4:	mov	r0, #64	; 0x40
   107e8:	add	r2, pc, #4
   107ec:	ldr	r1, [r2, r1, lsl #2]
   107f0:	add	pc, r2, r1
   107f4:	.word	0x00000054
   107f8:	.word	0x0000009c
   107fc:	.word	0x0000009c
   10800:	.word	0x0000009c
   10804:	.word	0x0000009c
   10808:	.word	0x0000009c
   1080c:	.word	0x0000009c
   10810:	.word	0x00000098
   10814:	.word	0x0000009c
   10818:	.word	0x0000009c
   1081c:	.word	0x0000009c
   10820:	.word	0x0000009c
   10824:	.word	0x0000009c
   10828:	.word	0x0000009c
   1082c:	.word	0x0000005c
   10830:	.word	0x0000009c
   10834:	.word	0x0000009c
   10838:	.word	0x0000009c
   1083c:	.word	0x0000009c
   10840:	.word	0x0000009c
   10844:	.word	0x0000008c
   10848:	mov	r0, #131072	; 0x20000
   1084c:	b	1088c <bandb_handle_ban+0x11c>
   10850:	ldr	r0, [r4, #16]
   10854:	cmp	r0, #0
   10858:	beq	10888 <bandb_handle_ban+0x118>
   1085c:	ldrb	r0, [r0]
   10860:	ldr	r1, [pc, #116]	; 108dc <bandb_handle_ban+0x16c>
   10864:	ldr	r1, [pc, r1]
   10868:	add	r0, r1, r0, lsl #2
   1086c:	ldrb	r1, [r0, #1]
   10870:	mov	r0, #256	; 0x100
   10874:	tst	r1, #2
   10878:	moveq	r0, #512	; 0x200
   1087c:	b	1088c <bandb_handle_ban+0x11c>
   10880:	mov	r0, #128	; 0x80
   10884:	b	1088c <bandb_handle_ban+0x11c>
   10888:	mov	r0, #512	; 0x200
   1088c:	str	r0, [r4]
   10890:	ldr	r0, [r5, r6, lsl #2]
   10894:	mov	r1, #124	; 0x7c
   10898:	bl	dce8 <strchr@plt>
   1089c:	cmp	r0, #0
   108a0:	beq	108b4 <bandb_handle_ban+0x144>
   108a4:	mov	r1, #0
   108a8:	strb	r1, [r0], #1
   108ac:	bl	104c8 <rb_strdup>
   108b0:	str	r0, [r4, #24]
   108b4:	ldr	r0, [r5, r6, lsl #2]
   108b8:	bl	104c8 <rb_strdup>
   108bc:	str	r0, [r4, #20]
   108c0:	bl	dc58 <rb_make_rb_dlink_node@plt>
   108c4:	mov	r1, r0
   108c8:	ldr	r2, [pc, #16]	; 108e0 <bandb_handle_ban+0x170>
   108cc:	ldr	r2, [pc, r2]
   108d0:	mov	r0, r4
   108d4:	pop	{r4, r5, r6, r7, fp, lr}
   108d8:	b	10ac0 <rb_dlinkAdd>
   108dc:	.word	0x0004a194
   108e0:	.word	0x0004a0d4

000108e4 <bandb_handle_clear>:
   108e4:	push	{r4, r5, fp, lr}
   108e8:	add	fp, sp, #8
   108ec:	ldr	r0, [pc, #56]	; 1092c <bandb_handle_clear+0x48>
   108f0:	ldr	r0, [pc, r0]
   108f4:	ldr	r4, [r0]
   108f8:	cmp	r4, #0
   108fc:	popeq	{r4, r5, fp, pc}
   10900:	ldr	r0, [r4]
   10904:	ldr	r5, [r4, #8]
   10908:	bl	dc34 <free_conf@plt>
   1090c:	mov	r0, r4
   10910:	bl	10bb0 <rb_dlinkDelete>
   10914:	mov	r0, r4
   10918:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   1091c:	cmp	r5, #0
   10920:	mov	r4, r5
   10924:	bne	10900 <bandb_handle_clear+0x1c>
   10928:	pop	{r4, r5, fp, pc}
   1092c:	.word	0x0004a0b0

00010930 <bandb_handle_finish>:
   10930:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10934:	add	fp, sp, #24
   10938:	sub	sp, sp, #8
   1093c:	bl	e780 <clear_out_address_conf_bans@plt>
   10940:	bl	dd3c <clear_s_newconf_bans@plt>
   10944:	ldr	r0, [pc, #360]	; 10ab4 <bandb_handle_finish+0x184>
   10948:	ldr	r0, [pc, r0]
   1094c:	ldr	r4, [r0]
   10950:	cmp	r4, #0
   10954:	beq	10aa8 <bandb_handle_finish+0x178>
   10958:	ldr	r8, [pc, #344]	; 10ab8 <bandb_handle_finish+0x188>
   1095c:	ldr	r8, [pc, r8]
   10960:	ldr	r5, [pc, #340]	; 10abc <bandb_handle_finish+0x18c>
   10964:	ldr	r5, [pc, r5]
   10968:	b	1097c <bandb_handle_finish+0x4c>
   1096c:	mov	r0, r6
   10970:	bl	dc34 <free_conf@plt>
   10974:	cmp	r4, #0
   10978:	beq	10aa8 <bandb_handle_finish+0x178>
   1097c:	mov	r7, r4
   10980:	ldr	r6, [r4]
   10984:	ldr	r4, [r4, #8]
   10988:	mov	r0, r7
   1098c:	bl	10bb0 <rb_dlinkDelete>
   10990:	mov	r0, r7
   10994:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   10998:	ldr	r0, [r6]
   1099c:	cmp	r0, #255	; 0xff
   109a0:	ble	109e0 <bandb_handle_finish+0xb0>
   109a4:	cmp	r0, #256	; 0x100
   109a8:	beq	10a20 <bandb_handle_finish+0xf0>
   109ac:	cmp	r0, #512	; 0x200
   109b0:	beq	10a48 <bandb_handle_finish+0x118>
   109b4:	cmp	r0, #131072	; 0x20000
   109b8:	bne	10974 <bandb_handle_finish+0x44>
   109bc:	mov	r0, r6
   109c0:	bl	10d74 <bandb_check_dline>
   109c4:	cmp	r0, #0
   109c8:	beq	1096c <bandb_handle_finish+0x3c>
   109cc:	ldr	r0, [r6, #16]
   109d0:	ldr	r2, [r6, #28]
   109d4:	str	r6, [sp]
   109d8:	mov	r1, #131072	; 0x20000
   109dc:	b	10a98 <bandb_handle_finish+0x168>
   109e0:	cmp	r0, #64	; 0x40
   109e4:	beq	10a78 <bandb_handle_finish+0x148>
   109e8:	cmp	r0, #128	; 0x80
   109ec:	bne	10974 <bandb_handle_finish+0x44>
   109f0:	mov	r0, r6
   109f4:	bl	10da0 <bandb_check_xline>
   109f8:	cmp	r0, #0
   109fc:	beq	1096c <bandb_handle_finish+0x3c>
   10a00:	bl	dc58 <rb_make_rb_dlink_node@plt>
   10a04:	mov	r1, r0
   10a08:	mov	r0, r6
   10a0c:	mov	r2, r8
   10a10:	bl	10ac0 <rb_dlinkAdd>
   10a14:	cmp	r4, #0
   10a18:	bne	1097c <bandb_handle_finish+0x4c>
   10a1c:	b	10aa8 <bandb_handle_finish+0x178>
   10a20:	mov	r0, r6
   10a24:	bl	10dd4 <bandb_check_resv_channel>
   10a28:	cmp	r0, #0
   10a2c:	beq	1096c <bandb_handle_finish+0x3c>
   10a30:	ldr	r0, [r6, #16]
   10a34:	mov	r1, r6
   10a38:	bl	d088 <add_to_resv_hash@plt>
   10a3c:	cmp	r4, #0
   10a40:	bne	1097c <bandb_handle_finish+0x4c>
   10a44:	b	10aa8 <bandb_handle_finish+0x178>
   10a48:	mov	r0, r6
   10a4c:	bl	10e4c <bandb_check_resv_nick>
   10a50:	cmp	r0, #0
   10a54:	beq	1096c <bandb_handle_finish+0x3c>
   10a58:	bl	dc58 <rb_make_rb_dlink_node@plt>
   10a5c:	mov	r1, r0
   10a60:	mov	r0, r6
   10a64:	mov	r2, r5
   10a68:	bl	10ac0 <rb_dlinkAdd>
   10a6c:	cmp	r4, #0
   10a70:	bne	1097c <bandb_handle_finish+0x4c>
   10a74:	b	10aa8 <bandb_handle_finish+0x178>
   10a78:	mov	r0, r6
   10a7c:	bl	10c3c <bandb_check_kline>
   10a80:	cmp	r0, #0
   10a84:	beq	1096c <bandb_handle_finish+0x3c>
   10a88:	ldr	r0, [r6, #16]
   10a8c:	ldr	r2, [r6, #28]
   10a90:	str	r6, [sp]
   10a94:	mov	r1, #64	; 0x40
   10a98:	mov	r3, #0
   10a9c:	bl	dacc <add_conf_by_address@plt>
   10aa0:	cmp	r4, #0
   10aa4:	bne	1097c <bandb_handle_finish+0x4c>
   10aa8:	sub	sp, fp, #24
   10aac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10ab0:	b	de08 <check_banned_lines@plt>
   10ab4:	.word	0x0004a058
   10ab8:	.word	0x00049f68
   10abc:	.word	0x00049f48

00010ac0 <rb_dlinkAdd>:
   10ac0:	push	{fp, lr}
   10ac4:	mov	fp, sp
   10ac8:	cmp	r0, #0
   10acc:	beq	10b2c <rb_dlinkAdd+0x6c>
   10ad0:	cmp	r1, #0
   10ad4:	beq	10b4c <rb_dlinkAdd+0x8c>
   10ad8:	cmp	r2, #0
   10adc:	beq	10b6c <rb_dlinkAdd+0xac>
   10ae0:	mov	r3, #0
   10ae4:	stm	r1, {r0, r3}
   10ae8:	ldr	r0, [r2]
   10aec:	str	r0, [r1, #8]
   10af0:	ldr	r0, [r2]
   10af4:	cmp	r0, #0
   10af8:	beq	10b08 <rb_dlinkAdd+0x48>
   10afc:	add	r0, r0, #4
   10b00:	str	r1, [r0]
   10b04:	b	10b18 <rb_dlinkAdd+0x58>
   10b08:	mov	r0, r2
   10b0c:	ldr	r3, [r0, #4]!
   10b10:	cmp	r3, #0
   10b14:	streq	r1, [r0]
   10b18:	str	r1, [r2]
   10b1c:	ldr	r0, [r2, #8]
   10b20:	add	r0, r0, #1
   10b24:	str	r0, [r2, #8]
   10b28:	pop	{fp, pc}
   10b2c:	ldr	r0, [pc, #88]	; 10b8c <rb_dlinkAdd+0xcc>
   10b30:	add	r0, pc, r0
   10b34:	ldr	r1, [pc, #84]	; 10b90 <rb_dlinkAdd+0xd0>
   10b38:	add	r1, pc, r1
   10b3c:	ldr	r3, [pc, #80]	; 10b94 <rb_dlinkAdd+0xd4>
   10b40:	add	r3, pc, r3
   10b44:	mov	r2, #143	; 0x8f
   10b48:	bl	e7e0 <__assert_fail@plt>
   10b4c:	ldr	r0, [pc, #68]	; 10b98 <rb_dlinkAdd+0xd8>
   10b50:	add	r0, pc, r0
   10b54:	ldr	r1, [pc, #64]	; 10b9c <rb_dlinkAdd+0xdc>
   10b58:	add	r1, pc, r1
   10b5c:	ldr	r3, [pc, #60]	; 10ba0 <rb_dlinkAdd+0xe0>
   10b60:	add	r3, pc, r3
   10b64:	mov	r2, #144	; 0x90
   10b68:	bl	e7e0 <__assert_fail@plt>
   10b6c:	ldr	r0, [pc, #48]	; 10ba4 <rb_dlinkAdd+0xe4>
   10b70:	add	r0, pc, r0
   10b74:	ldr	r1, [pc, #44]	; 10ba8 <rb_dlinkAdd+0xe8>
   10b78:	add	r1, pc, r1
   10b7c:	ldr	r3, [pc, #40]	; 10bac <rb_dlinkAdd+0xec>
   10b80:	add	r3, pc, r3
   10b84:	mov	r2, #145	; 0x91
   10b88:	bl	e7e0 <__assert_fail@plt>
   10b8c:	.word	0x0002fe41
   10b90:	.word	0x0002fdde
   10b94:	.word	0x0002fe3e
   10b98:	.word	0x0002fdbc
   10b9c:	.word	0x0002fdbe
   10ba0:	.word	0x0002fe1e
   10ba4:	.word	0x00035625
   10ba8:	.word	0x0002fd9e
   10bac:	.word	0x0002fdfe

00010bb0 <rb_dlinkDelete>:
   10bb0:	push	{fp, lr}
   10bb4:	mov	fp, sp
   10bb8:	cmp	r0, #0
   10bbc:	beq	10c0c <rb_dlinkDelete+0x5c>
   10bc0:	ldr	ip, [pc, #100]	; 10c2c <rb_dlinkDelete+0x7c>
   10bc4:	ldr	ip, [pc, ip]
   10bc8:	ldmib	r0, {r2, r3}
   10bcc:	add	r1, r3, #4
   10bd0:	cmp	r3, #0
   10bd4:	addeq	r1, ip, #4
   10bd8:	str	r2, [r1]
   10bdc:	ldmib	r0, {r1, r2}
   10be0:	cmp	r1, #0
   10be4:	mov	r3, ip
   10be8:	addne	r3, r1, #8
   10bec:	str	r2, [r3]
   10bf0:	mov	r1, #0
   10bf4:	str	r1, [r0, #4]
   10bf8:	str	r1, [r0, #8]
   10bfc:	ldr	r0, [ip, #8]
   10c00:	sub	r0, r0, #1
   10c04:	str	r0, [ip, #8]
   10c08:	pop	{fp, pc}
   10c0c:	ldr	r0, [pc, #28]	; 10c30 <rb_dlinkDelete+0x80>
   10c10:	add	r0, pc, r0
   10c14:	ldr	r1, [pc, #24]	; 10c34 <rb_dlinkDelete+0x84>
   10c18:	add	r1, pc, r1
   10c1c:	ldr	r3, [pc, #20]	; 10c38 <rb_dlinkDelete+0x88>
   10c20:	add	r3, pc, r3
   10c24:	mov	r2, #235	; 0xeb
   10c28:	bl	e7e0 <__assert_fail@plt>
   10c2c:	.word	0x00049ddc
   10c30:	.word	0x0002fcfc
   10c34:	.word	0x0002fcfe
   10c38:	.word	0x0002fd99

00010c3c <bandb_check_kline>:
   10c3c:	push	{r4, r5, fp, lr}
   10c40:	add	fp, sp, #8
   10c44:	sub	sp, sp, #144	; 0x90
   10c48:	mov	r4, r0
   10c4c:	ldr	r0, [r0, #16]
   10c50:	add	r1, sp, #16
   10c54:	mov	r5, #0
   10c58:	mov	r2, #0
   10c5c:	bl	d55c <parse_netmask@plt>
   10c60:	cmp	r0, #1
   10c64:	beq	10c9c <bandb_check_kline+0x60>
   10c68:	mov	r1, #10
   10c6c:	cmp	r0, #3
   10c70:	movne	r1, #2
   10c74:	ldr	r0, [r4, #16]
   10c78:	ldr	r2, [r4, #28]
   10c7c:	mov	r3, #0
   10c80:	mov	r5, #64	; 0x40
   10c84:	str	r5, [sp]
   10c88:	stmib	sp, {r1, r2, r3}
   10c8c:	add	r3, sp, #16
   10c90:	mov	r1, #0
   10c94:	mov	r2, #0
   10c98:	b	10cc0 <bandb_check_kline+0x84>
   10c9c:	ldr	r0, [r4, #16]
   10ca0:	ldr	r1, [r4, #28]
   10ca4:	mov	r2, #64	; 0x40
   10ca8:	stm	sp, {r2, r5}
   10cac:	str	r1, [sp, #8]
   10cb0:	str	r5, [sp, #12]
   10cb4:	mov	r1, #0
   10cb8:	mov	r2, #0
   10cbc:	mov	r3, #0
   10cc0:	bl	d2f8 <find_conf_by_address@plt>
   10cc4:	cmp	r0, #0
   10cc8:	beq	10cdc <bandb_check_kline+0xa0>
   10ccc:	ldrb	r1, [r0, #6]
   10cd0:	mov	r0, #0
   10cd4:	tst	r1, #128	; 0x80
   10cd8:	beq	10d58 <bandb_check_kline+0x11c>
   10cdc:	ldr	r0, [r4, #28]
   10ce0:	ldrb	r2, [r0]
   10ce4:	cmp	r2, #0
   10ce8:	beq	10d18 <bandb_check_kline+0xdc>
   10cec:	add	r0, r0, #1
   10cf0:	ldr	r1, [pc, #116]	; 10d6c <bandb_check_kline+0x130>
   10cf4:	ldr	r1, [pc, r1]
   10cf8:	uxtb	r2, r2
   10cfc:	add	r2, r1, r2, lsl #2
   10d00:	ldrb	r2, [r2, #1]
   10d04:	tst	r2, #5
   10d08:	beq	10d60 <bandb_check_kline+0x124>
   10d0c:	ldrb	r2, [r0], #1
   10d10:	cmp	r2, #0
   10d14:	bne	10cf8 <bandb_check_kline+0xbc>
   10d18:	ldr	r1, [r4, #16]
   10d1c:	ldrb	r3, [r1]
   10d20:	mov	r0, #1
   10d24:	cmp	r3, #0
   10d28:	beq	10d58 <bandb_check_kline+0x11c>
   10d2c:	add	r1, r1, #1
   10d30:	ldr	r2, [pc, #56]	; 10d70 <bandb_check_kline+0x134>
   10d34:	ldr	r2, [pc, r2]
   10d38:	uxtb	r3, r3
   10d3c:	add	r3, r2, r3, lsl #2
   10d40:	ldrb	r3, [r3, #1]
   10d44:	tst	r3, #9
   10d48:	beq	10d60 <bandb_check_kline+0x124>
   10d4c:	ldrb	r3, [r1], #1
   10d50:	cmp	r3, #0
   10d54:	bne	10d38 <bandb_check_kline+0xfc>
   10d58:	sub	sp, fp, #8
   10d5c:	pop	{r4, r5, fp, pc}
   10d60:	mov	r0, #0
   10d64:	sub	sp, fp, #8
   10d68:	pop	{r4, r5, fp, pc}
   10d6c:	.word	0x00049d04
   10d70:	.word	0x00049cc4

00010d74 <bandb_check_dline>:
   10d74:	push	{fp, lr}
   10d78:	mov	fp, sp
   10d7c:	sub	sp, sp, #136	; 0x88
   10d80:	ldr	r0, [r0, #16]
   10d84:	add	r1, sp, #8
   10d88:	add	r2, sp, #4
   10d8c:	bl	d55c <parse_netmask@plt>
   10d90:	cmp	r0, #0
   10d94:	movwne	r0, #1
   10d98:	mov	sp, fp
   10d9c:	pop	{fp, pc}

00010da0 <bandb_check_xline>:
   10da0:	push	{fp, lr}
   10da4:	mov	fp, sp
   10da8:	ldr	r0, [r0, #16]
   10dac:	bl	dfd0 <find_xline_mask@plt>
   10db0:	cmp	r0, #0
   10db4:	beq	10dcc <bandb_check_xline+0x2c>
   10db8:	ldrb	r1, [r0, #6]
   10dbc:	mov	r0, #0
   10dc0:	tst	r1, #128	; 0x80
   10dc4:	movne	r0, #1
   10dc8:	pop	{fp, pc}
   10dcc:	mov	r0, #1
   10dd0:	pop	{fp, pc}

00010dd4 <bandb_check_resv_channel>:
   10dd4:	push	{r4, r5, fp, lr}
   10dd8:	add	fp, sp, #8
   10ddc:	mov	r5, r0
   10de0:	ldr	r0, [r0, #16]
   10de4:	bl	e600 <hash_find_resv@plt>
   10de8:	mov	r4, #0
   10dec:	cmp	r0, #0
   10df0:	bne	10e40 <bandb_check_resv_channel+0x6c>
   10df4:	ldr	r5, [r5, #16]
   10df8:	mov	r0, r5
   10dfc:	bl	dc94 <strlen@plt>
   10e00:	cmp	r0, #200	; 0xc8
   10e04:	bhi	10e40 <bandb_check_resv_channel+0x6c>
   10e08:	ldrb	r1, [r5]
   10e0c:	cmp	r1, #0
   10e10:	beq	10e3c <bandb_check_resv_channel+0x68>
   10e14:	add	r0, r5, #1
   10e18:	ldr	r2, [pc, #40]	; 10e48 <bandb_check_resv_channel+0x74>
   10e1c:	ldr	r2, [pc, r2]
   10e20:	uxtb	r1, r1
   10e24:	ldrb	r1, [r2, r1, lsl #2]
   10e28:	tst	r1, #128	; 0x80
   10e2c:	beq	10e40 <bandb_check_resv_channel+0x6c>
   10e30:	ldrb	r1, [r0], #1
   10e34:	cmp	r1, #0
   10e38:	bne	10e20 <bandb_check_resv_channel+0x4c>
   10e3c:	mov	r4, #1
   10e40:	mov	r0, r4
   10e44:	pop	{r4, r5, fp, pc}
   10e48:	.word	0x00049bdc

00010e4c <bandb_check_resv_nick>:
   10e4c:	push	{r4, sl, fp, lr}
   10e50:	add	fp, sp, #8
   10e54:	mov	r4, r0
   10e58:	ldr	r0, [r0, #16]
   10e5c:	bl	e7c8 <clean_resv_nick@plt>
   10e60:	cmp	r0, #0
   10e64:	beq	10e7c <bandb_check_resv_nick+0x30>
   10e68:	ldr	r0, [r4, #16]
   10e6c:	bl	d9b8 <find_nick_resv@plt>
   10e70:	clz	r0, r0
   10e74:	lsr	r0, r0, #5
   10e78:	pop	{r4, sl, fp, pc}
   10e7c:	mov	r0, #0
   10e80:	pop	{r4, sl, fp, pc}

00010e84 <init_cache>:
   10e84:	push	{r4, r5, fp, lr}
   10e88:	add	fp, sp, #8
   10e8c:	mov	r0, #16
   10e90:	bl	10f9c <rb_malloc>
   10e94:	ldr	r4, [pc, #200]	; 10f64 <init_cache+0xe0>
   10e98:	ldr	r4, [pc, r4]
   10e9c:	str	r0, [r4]
   10ea0:	ldr	r0, [pc, #192]	; 10f68 <init_cache+0xe4>
   10ea4:	add	r0, pc, r0
   10ea8:	bl	10fbc <rb_strdup>
   10eac:	ldr	r1, [r4]
   10eb0:	str	r0, [r1]
   10eb4:	ldr	r0, [pc, #176]	; 10f6c <init_cache+0xe8>
   10eb8:	ldr	r0, [pc, r0]
   10ebc:	mov	r4, #0
   10ec0:	strb	r4, [r0]
   10ec4:	ldr	r5, [pc, #164]	; 10f70 <init_cache+0xec>
   10ec8:	ldr	r5, [pc, r5]
   10ecc:	ldr	r0, [r5, #36]	; 0x24
   10ed0:	ldr	r1, [pc, #156]	; 10f74 <init_cache+0xf0>
   10ed4:	add	r1, pc, r1
   10ed8:	mov	r2, #0
   10edc:	bl	dafc <cache_file@plt>
   10ee0:	ldr	r1, [pc, #144]	; 10f78 <init_cache+0xf4>
   10ee4:	ldr	r1, [pc, r1]
   10ee8:	str	r0, [r1]
   10eec:	ldr	r0, [r5, #48]	; 0x30
   10ef0:	ldr	r1, [pc, #132]	; 10f7c <init_cache+0xf8>
   10ef4:	add	r1, pc, r1
   10ef8:	mov	r2, #0
   10efc:	bl	dafc <cache_file@plt>
   10f00:	ldr	r1, [pc, #120]	; 10f80 <init_cache+0xfc>
   10f04:	ldr	r1, [pc, r1]
   10f08:	str	r0, [r1]
   10f0c:	ldr	r0, [pc, #112]	; 10f84 <init_cache+0x100>
   10f10:	ldr	r0, [pc, r0]
   10f14:	str	r4, [r0]
   10f18:	str	r4, [r0, #4]
   10f1c:	str	r4, [r0, #8]
   10f20:	ldr	r4, [pc, #96]	; 10f88 <init_cache+0x104>
   10f24:	ldr	r4, [pc, r4]
   10f28:	ldr	r0, [pc, #92]	; 10f8c <init_cache+0x108>
   10f2c:	add	r0, pc, r0
   10f30:	mov	r1, r4
   10f34:	bl	dfb8 <rb_dictionary_create@plt>
   10f38:	ldr	r1, [pc, #80]	; 10f90 <init_cache+0x10c>
   10f3c:	ldr	r1, [pc, r1]
   10f40:	str	r0, [r1]
   10f44:	ldr	r0, [pc, #72]	; 10f94 <init_cache+0x110>
   10f48:	add	r0, pc, r0
   10f4c:	mov	r1, r4
   10f50:	bl	dfb8 <rb_dictionary_create@plt>
   10f54:	ldr	r1, [pc, #60]	; 10f98 <init_cache+0x114>
   10f58:	ldr	r1, [pc, r1]
   10f5c:	str	r0, [r1]
   10f60:	pop	{r4, r5, fp, pc}
   10f64:	.word	0x000499d8
   10f68:	.word	0x00035614
   10f6c:	.word	0x00049bec
   10f70:	.word	0x00049b80
   10f74:	.word	0x00030f21
   10f78:	.word	0x00049b58
   10f7c:	.word	0x00030f54
   10f80:	.word	0x00049b10
   10f84:	.word	0x00049c30
   10f88:	.word	0x0004998c
   10f8c:	.word	0x0002fbe2
   10f90:	.word	0x00049c10
   10f94:	.word	0x0002fbd0
   10f98:	.word	0x00049908

00010f9c <rb_malloc>:
   10f9c:	push	{fp, lr}
   10fa0:	mov	fp, sp
   10fa4:	mov	r1, r0
   10fa8:	mov	r0, #1
   10fac:	bl	cfa4 <calloc@plt>
   10fb0:	cmp	r0, #0
   10fb4:	popne	{fp, pc}
   10fb8:	bl	d448 <rb_outofmemory@plt>

00010fbc <rb_strdup>:
   10fbc:	push	{r4, sl, fp, lr}
   10fc0:	add	fp, sp, #8
   10fc4:	mov	r4, r0
   10fc8:	bl	dc94 <strlen@plt>
   10fcc:	add	r0, r0, #1
   10fd0:	bl	da84 <malloc@plt>
   10fd4:	cmp	r0, #0
   10fd8:	beq	10fe8 <rb_strdup+0x2c>
   10fdc:	mov	r1, r4
   10fe0:	pop	{r4, sl, fp, lr}
   10fe4:	b	d91c <strcpy@plt>
   10fe8:	bl	d448 <rb_outofmemory@plt>

00010fec <cache_file>:
   10fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff0:	add	fp, sp, #28
   10ff4:	sub	sp, sp, #12
   10ff8:	sub	sp, sp, #1024	; 0x400
   10ffc:	mov	r5, r2
   11000:	mov	r6, r1
   11004:	ldr	r1, [pc, #292]	; 11130 <cache_file+0x144>
   11008:	add	r1, pc, r1
   1100c:	bl	d1f0 <fopen@plt>
   11010:	cmp	r0, #0
   11014:	beq	11120 <cache_file+0x134>
   11018:	mov	r4, r0
   1101c:	mov	r0, #48	; 0x30
   11020:	bl	10f9c <rb_malloc>
   11024:	mov	r7, r0
   11028:	mov	r1, r6
   1102c:	mov	r2, #30
   11030:	bl	e510 <rb_strlcpy@plt>
   11034:	str	r7, [sp, #4]
   11038:	str	r5, [r7, #44]	; 0x2c
   1103c:	add	r0, sp, #520	; 0x208
   11040:	mov	r1, #512	; 0x200
   11044:	mov	r2, r4
   11048:	bl	e528 <fgets_unlocked@plt>
   1104c:	cmp	r0, #0
   11050:	beq	110f8 <cache_file+0x10c>
   11054:	ldr	r0, [sp, #4]
   11058:	add	r6, r0, #32
   1105c:	add	r7, sp, #520	; 0x208
   11060:	ldr	r9, [pc, #204]	; 11134 <cache_file+0x148>
   11064:	add	r9, pc, r9
   11068:	add	sl, sp, #8
   1106c:	mov	r8, #0
   11070:	b	110ac <cache_file+0xc0>
   11074:	ldr	r0, [pc, #188]	; 11138 <cache_file+0x14c>
   11078:	ldr	r0, [pc, r0]
   1107c:	ldr	r5, [r0]
   11080:	bl	dc58 <rb_make_rb_dlink_node@plt>
   11084:	mov	r1, r0
   11088:	mov	r0, r5
   1108c:	mov	r2, r6
   11090:	bl	111e0 <rb_dlinkAddTail>
   11094:	mov	r0, r7
   11098:	mov	r1, #512	; 0x200
   1109c:	mov	r2, r4
   110a0:	bl	e528 <fgets_unlocked@plt>
   110a4:	cmp	r0, #0
   110a8:	beq	110f8 <cache_file+0x10c>
   110ac:	mov	r0, r7
   110b0:	mov	r1, r9
   110b4:	bl	e4c8 <strpbrk@plt>
   110b8:	cmp	r0, #0
   110bc:	strbne	r8, [r0]
   110c0:	ldrb	r0, [sp, #520]	; 0x208
   110c4:	cmp	r0, #0
   110c8:	beq	11074 <cache_file+0x88>
   110cc:	mov	r0, #16
   110d0:	bl	10f9c <rb_malloc>
   110d4:	mov	r5, r0
   110d8:	mov	r0, sl
   110dc:	mov	r1, r7
   110e0:	bl	1113c <untabify>
   110e4:	mov	r0, sl
   110e8:	bl	10fbc <rb_strdup>
   110ec:	mov	r1, r5
   110f0:	str	r0, [r1], #4
   110f4:	b	11088 <cache_file+0x9c>
   110f8:	ldr	r5, [sp, #4]
   110fc:	ldr	r0, [r5, #40]	; 0x28
   11100:	cmp	r0, #0
   11104:	bne	11114 <cache_file+0x128>
   11108:	mov	r0, r5
   1110c:	bl	112d8 <rb_free>
   11110:	mov	r5, #0
   11114:	mov	r0, r4
   11118:	bl	e0f0 <fclose@plt>
   1111c:	b	11124 <cache_file+0x138>
   11120:	mov	r5, #0
   11124:	mov	r0, r5
   11128:	sub	sp, fp, #28
   1112c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11130:	.word	0x00031695
   11134:	.word	0x00034aef
   11138:	.word	0x000497f8

0001113c <untabify>:
   1113c:	push	{r4, r5, r6, r7, fp, lr}
   11140:	add	fp, sp, #16
   11144:	mov	r4, r0
   11148:	ldrb	r0, [r1]
   1114c:	cmp	r0, #0
   11150:	beq	111d4 <untabify+0x98>
   11154:	mov	r5, r1
   11158:	mov	r6, #0
   1115c:	movw	r7, #510	; 0x1fe
   11160:	uxtb	r1, r0
   11164:	cmp	r1, #9
   11168:	bne	111b8 <untabify+0x7c>
   1116c:	sub	r0, r7, r6
   11170:	cmp	r0, #7
   11174:	movcs	r0, #7
   11178:	add	r2, r0, #1
   1117c:	mov	r0, r4
   11180:	mov	r1, #32
   11184:	bl	df28 <memset@plt>
   11188:	mov	r0, #0
   1118c:	add	r1, r6, r0
   11190:	add	r1, r1, #1
   11194:	add	r0, r0, #1
   11198:	cmp	r1, r7
   1119c:	cmpls	r0, #8
   111a0:	bcc	1118c <untabify+0x50>
   111a4:	add	r6, r6, r0
   111a8:	add	r4, r4, r0
   111ac:	cmp	r6, r7
   111b0:	bls	111c8 <untabify+0x8c>
   111b4:	b	111d4 <untabify+0x98>
   111b8:	strb	r0, [r4], #1
   111bc:	add	r6, r6, #1
   111c0:	cmp	r6, r7
   111c4:	bhi	111d4 <untabify+0x98>
   111c8:	ldrb	r0, [r5, #1]!
   111cc:	cmp	r0, #0
   111d0:	bne	11160 <untabify+0x24>
   111d4:	mov	r0, #0
   111d8:	strb	r0, [r4]
   111dc:	pop	{r4, r5, r6, r7, fp, pc}

000111e0 <rb_dlinkAddTail>:
   111e0:	push	{fp, lr}
   111e4:	mov	fp, sp
   111e8:	cmp	r1, #0
   111ec:	beq	11254 <rb_dlinkAddTail+0x74>
   111f0:	cmp	r2, #0
   111f4:	beq	11274 <rb_dlinkAddTail+0x94>
   111f8:	cmp	r0, #0
   111fc:	beq	11294 <rb_dlinkAddTail+0xb4>
   11200:	mov	r3, #0
   11204:	str	r3, [r1, #8]
   11208:	str	r0, [r1]
   1120c:	ldr	r0, [r2, #4]
   11210:	str	r0, [r1, #4]
   11214:	ldr	r0, [r2, #4]
   11218:	cmp	r0, #0
   1121c:	beq	1122c <rb_dlinkAddTail+0x4c>
   11220:	add	r0, r0, #8
   11224:	str	r1, [r0]
   11228:	b	11238 <rb_dlinkAddTail+0x58>
   1122c:	ldr	r0, [r2]
   11230:	cmp	r0, #0
   11234:	beq	1124c <rb_dlinkAddTail+0x6c>
   11238:	str	r1, [r2, #4]
   1123c:	ldr	r0, [r2, #8]
   11240:	add	r0, r0, #1
   11244:	str	r0, [r2, #8]
   11248:	pop	{fp, pc}
   1124c:	mov	r0, r2
   11250:	b	11224 <rb_dlinkAddTail+0x44>
   11254:	ldr	r0, [pc, #88]	; 112b4 <rb_dlinkAddTail+0xd4>
   11258:	add	r0, pc, r0
   1125c:	ldr	r1, [pc, #84]	; 112b8 <rb_dlinkAddTail+0xd8>
   11260:	add	r1, pc, r1
   11264:	ldr	r3, [pc, #80]	; 112bc <rb_dlinkAddTail+0xdc>
   11268:	add	r3, pc, r3
   1126c:	mov	r2, #211	; 0xd3
   11270:	bl	e7e0 <__assert_fail@plt>
   11274:	ldr	r0, [pc, #68]	; 112c0 <rb_dlinkAddTail+0xe0>
   11278:	add	r0, pc, r0
   1127c:	ldr	r1, [pc, #64]	; 112c4 <rb_dlinkAddTail+0xe4>
   11280:	add	r1, pc, r1
   11284:	ldr	r3, [pc, #60]	; 112c8 <rb_dlinkAddTail+0xe8>
   11288:	add	r3, pc, r3
   1128c:	mov	r2, #212	; 0xd4
   11290:	bl	e7e0 <__assert_fail@plt>
   11294:	ldr	r0, [pc, #48]	; 112cc <rb_dlinkAddTail+0xec>
   11298:	add	r0, pc, r0
   1129c:	ldr	r1, [pc, #44]	; 112d0 <rb_dlinkAddTail+0xf0>
   112a0:	add	r1, pc, r1
   112a4:	ldr	r3, [pc, #40]	; 112d4 <rb_dlinkAddTail+0xf4>
   112a8:	add	r3, pc, r3
   112ac:	mov	r2, #213	; 0xd5
   112b0:	bl	e7e0 <__assert_fail@plt>
   112b4:	.word	0x0002f6b4
   112b8:	.word	0x0002f6b6
   112bc:	.word	0x0002f6ca
   112c0:	.word	0x00034f1d
   112c4:	.word	0x0002f696
   112c8:	.word	0x0002f6aa
   112cc:	.word	0x0002f6d9
   112d0:	.word	0x0002f676
   112d4:	.word	0x0002f68a

000112d8 <rb_free>:
   112d8:	cmp	r0, #0
   112dc:	bxeq	lr
   112e0:	b	d328 <free@plt>

000112e4 <cache_links>:
   112e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112e8:	add	fp, sp, #28
   112ec:	sub	sp, sp, #12
   112f0:	ldr	r5, [pc, #264]	; 11400 <cache_links+0x11c>
   112f4:	ldr	r5, [pc, r5]
   112f8:	ldr	r4, [r5]
   112fc:	cmp	r4, #0
   11300:	beq	11324 <cache_links+0x40>
   11304:	ldr	r0, [r4]
   11308:	ldr	r6, [r4, #8]
   1130c:	bl	112d8 <rb_free>
   11310:	mov	r0, r4
   11314:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   11318:	cmp	r6, #0
   1131c:	mov	r4, r6
   11320:	bne	11304 <cache_links+0x20>
   11324:	mov	r0, #0
   11328:	str	r0, [r5]
   1132c:	str	r0, [r5, #4]
   11330:	str	r0, [r5, #8]
   11334:	ldr	r0, [pc, #200]	; 11404 <cache_links+0x120>
   11338:	ldr	r0, [pc, r0]
   1133c:	ldr	r7, [r0]
   11340:	cmp	r7, #0
   11344:	beq	113f8 <cache_links+0x114>
   11348:	ldr	r4, [pc, #184]	; 11408 <cache_links+0x124>
   1134c:	ldr	r4, [pc, r4]
   11350:	ldr	r0, [pc, #180]	; 1140c <cache_links+0x128>
   11354:	ldr	r0, [pc, r0]
   11358:	add	r5, r0, #88	; 0x58
   1135c:	ldr	r8, [pc, #172]	; 11410 <cache_links+0x12c>
   11360:	add	r8, pc, r8
   11364:	ldr	r9, [pc, #168]	; 11414 <cache_links+0x130>
   11368:	ldr	r9, [pc, r9]
   1136c:	b	113cc <cache_links+0xe8>
   11370:	mov	r0, #182	; 0xb6
   11374:	bl	10f9c <rb_malloc>
   11378:	mov	r6, r0
   1137c:	ldrb	r0, [sl, #345]!	; 0x159
   11380:	cmp	r0, #0
   11384:	movw	r0, #257	; 0x101
   11388:	sub	r3, sl, r0
   1138c:	ldr	r0, [pc, #132]	; 11418 <cache_links+0x134>
   11390:	add	r0, pc, r0
   11394:	moveq	sl, r0
   11398:	stm	sp, {r5, sl}
   1139c:	mov	r0, r6
   113a0:	mov	r1, #182	; 0xb6
   113a4:	mov	r2, r8
   113a8:	bl	de74 <snprintf@plt>
   113ac:	bl	dc58 <rb_make_rb_dlink_node@plt>
   113b0:	mov	r1, r0
   113b4:	mov	r0, r6
   113b8:	mov	r2, r9
   113bc:	bl	111e0 <rb_dlinkAddTail>
   113c0:	ldr	r7, [r7, #8]
   113c4:	cmp	r7, #0
   113c8:	beq	113f8 <cache_links+0x114>
   113cc:	ldr	sl, [r7]
   113d0:	ldrh	r0, [sl, #80]	; 0x50
   113d4:	cmp	r0, #4
   113d8:	beq	113c0 <cache_links+0xdc>
   113dc:	ldrb	r0, [sl, #65]	; 0x41
   113e0:	tst	r0, #8
   113e4:	beq	11370 <cache_links+0x8c>
   113e8:	ldr	r0, [r4, #12]
   113ec:	cmp	r0, #0
   113f0:	beq	113c0 <cache_links+0xdc>
   113f4:	b	11370 <cache_links+0x8c>
   113f8:	sub	sp, fp, #28
   113fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11400:	.word	0x0004984c
   11404:	.word	0x00049540
   11408:	.word	0x00049668
   1140c:	.word	0x00049804
   11410:	.word	0x0002f7c2
   11414:	.word	0x000497d8
   11418:	.word	0x0002f79e

0001141c <free_cachefile>:
   1141c:	cmp	r0, #0
   11420:	bxeq	lr
   11424:	push	{r4, r5, r6, r7, fp, lr}
   11428:	add	fp, sp, #16
   1142c:	mov	r4, r0
   11430:	ldr	r0, [r0, #32]
   11434:	cmp	r0, #0
   11438:	beq	11480 <free_cachefile+0x64>
   1143c:	ldr	r6, [pc, #72]	; 1148c <free_cachefile+0x70>
   11440:	ldr	r6, [pc, r6]
   11444:	b	11458 <free_cachefile+0x3c>
   11448:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   1144c:	cmp	r7, #0
   11450:	mov	r0, r7
   11454:	beq	11480 <free_cachefile+0x64>
   11458:	ldr	r5, [r0]
   1145c:	ldr	r7, [r0, #8]
   11460:	ldr	r1, [r6]
   11464:	cmp	r5, r1
   11468:	beq	11448 <free_cachefile+0x2c>
   1146c:	ldr	r0, [r5]
   11470:	bl	112d8 <rb_free>
   11474:	mov	r0, r5
   11478:	bl	112d8 <rb_free>
   1147c:	b	1144c <free_cachefile+0x30>
   11480:	mov	r0, r4
   11484:	pop	{r4, r5, r6, r7, fp, lr}
   11488:	b	112d8 <rb_free>
   1148c:	.word	0x00049430

00011490 <load_help>:
   11490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11494:	add	fp, sp, #28
   11498:	sub	sp, sp, #20
   1149c:	sub	sp, sp, #4096	; 0x1000
   114a0:	ldr	r6, [pc, #564]	; 116dc <load_help+0x24c>
   114a4:	ldr	r6, [pc, r6]
   114a8:	ldr	r0, [r6]
   114ac:	add	r4, sp, #8
   114b0:	mov	r1, r4
   114b4:	bl	d970 <rb_dictionary_foreach_start@plt>
   114b8:	ldr	r0, [r6]
   114bc:	mov	r1, r4
   114c0:	bl	e300 <rb_dictionary_foreach_cur@plt>
   114c4:	cmp	r0, #0
   114c8:	beq	1150c <load_help+0x7c>
   114cc:	mov	r5, r0
   114d0:	add	r4, sp, #8
   114d4:	ldr	r0, [r6]
   114d8:	mov	r1, r5
   114dc:	bl	d82c <rb_dictionary_delete@plt>
   114e0:	mov	r0, r5
   114e4:	bl	d34c <free_cachefile@plt>
   114e8:	ldr	r0, [r6]
   114ec:	mov	r1, r4
   114f0:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   114f4:	ldr	r0, [r6]
   114f8:	mov	r1, r4
   114fc:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11500:	mov	r5, r0
   11504:	cmp	r0, #0
   11508:	bne	114d4 <load_help+0x44>
   1150c:	ldr	r9, [pc, #460]	; 116e0 <load_help+0x250>
   11510:	ldr	r9, [pc, r9]
   11514:	ldr	r0, [r9]
   11518:	add	r4, sp, #8
   1151c:	mov	r1, r4
   11520:	bl	d970 <rb_dictionary_foreach_start@plt>
   11524:	ldr	r0, [r9]
   11528:	mov	r1, r4
   1152c:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11530:	cmp	r0, #0
   11534:	beq	11578 <load_help+0xe8>
   11538:	mov	r5, r0
   1153c:	add	r4, sp, #8
   11540:	ldr	r0, [r9]
   11544:	mov	r1, r5
   11548:	bl	d82c <rb_dictionary_delete@plt>
   1154c:	mov	r0, r5
   11550:	bl	d34c <free_cachefile@plt>
   11554:	ldr	r0, [r9]
   11558:	mov	r1, r4
   1155c:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11560:	ldr	r0, [r9]
   11564:	mov	r1, r4
   11568:	bl	e300 <rb_dictionary_foreach_cur@plt>
   1156c:	mov	r5, r0
   11570:	cmp	r0, #0
   11574:	bne	11540 <load_help+0xb0>
   11578:	ldr	r0, [pc, #356]	; 116e4 <load_help+0x254>
   1157c:	ldr	r0, [pc, r0]
   11580:	ldr	r0, [r0, #24]
   11584:	bl	d9e8 <opendir@plt>
   11588:	cmp	r0, #0
   1158c:	beq	116d4 <load_help+0x244>
   11590:	mov	r4, r0
   11594:	bl	e264 <readdir@plt>
   11598:	cmp	r0, #0
   1159c:	beq	11620 <load_help+0x190>
   115a0:	mov	r7, r0
   115a4:	mov	sl, #47	; 0x2f
   115a8:	add	r5, sp, #16
   115ac:	ldr	r8, [pc, #308]	; 116e8 <load_help+0x258>
   115b0:	add	r8, pc, r8
   115b4:	b	115cc <load_help+0x13c>
   115b8:	mov	r0, r4
   115bc:	bl	e264 <readdir@plt>
   115c0:	mov	r7, r0
   115c4:	cmp	r0, #0
   115c8:	beq	11620 <load_help+0x190>
   115cc:	ldrb	r0, [r7, #11]!
   115d0:	cmp	r0, #46	; 0x2e
   115d4:	beq	115b8 <load_help+0x128>
   115d8:	ldr	r0, [pc, #268]	; 116ec <load_help+0x25c>
   115dc:	ldr	r0, [pc, r0]
   115e0:	ldr	r3, [r0, #24]
   115e4:	str	sl, [sp]
   115e8:	str	r7, [sp, #4]
   115ec:	mov	r0, r5
   115f0:	mov	r1, #4096	; 0x1000
   115f4:	mov	r2, r8
   115f8:	bl	de74 <snprintf@plt>
   115fc:	mov	r0, r5
   11600:	mov	r1, r7
   11604:	mov	r2, #2
   11608:	bl	dafc <cache_file@plt>
   1160c:	mov	r1, r0
   11610:	ldr	r0, [r6]
   11614:	mov	r2, r1
   11618:	bl	d700 <rb_dictionary_add@plt>
   1161c:	b	115b8 <load_help+0x128>
   11620:	mov	r0, r4
   11624:	bl	e75c <closedir@plt>
   11628:	ldr	r0, [pc, #192]	; 116f0 <load_help+0x260>
   1162c:	ldr	r0, [pc, r0]
   11630:	ldr	r0, [r0, #20]
   11634:	bl	d9e8 <opendir@plt>
   11638:	cmp	r0, #0
   1163c:	beq	116d4 <load_help+0x244>
   11640:	mov	r4, r0
   11644:	bl	e264 <readdir@plt>
   11648:	cmp	r0, #0
   1164c:	beq	116cc <load_help+0x23c>
   11650:	mov	r7, r0
   11654:	mov	r6, #47	; 0x2f
   11658:	add	r5, sp, #16
   1165c:	ldr	r8, [pc, #144]	; 116f4 <load_help+0x264>
   11660:	add	r8, pc, r8
   11664:	b	1167c <load_help+0x1ec>
   11668:	mov	r0, r4
   1166c:	bl	e264 <readdir@plt>
   11670:	mov	r7, r0
   11674:	cmp	r0, #0
   11678:	beq	116cc <load_help+0x23c>
   1167c:	ldrb	r0, [r7, #11]!
   11680:	cmp	r0, #46	; 0x2e
   11684:	beq	11668 <load_help+0x1d8>
   11688:	ldr	r0, [pc, #104]	; 116f8 <load_help+0x268>
   1168c:	ldr	r0, [pc, r0]
   11690:	ldr	r3, [r0, #20]
   11694:	stm	sp, {r6, r7}
   11698:	mov	r0, r5
   1169c:	mov	r1, #4096	; 0x1000
   116a0:	mov	r2, r8
   116a4:	bl	de74 <snprintf@plt>
   116a8:	mov	r0, r5
   116ac:	mov	r1, r7
   116b0:	mov	r2, #1
   116b4:	bl	dafc <cache_file@plt>
   116b8:	mov	r1, r0
   116bc:	ldr	r0, [r9]
   116c0:	mov	r2, r1
   116c4:	bl	d700 <rb_dictionary_add@plt>
   116c8:	b	11668 <load_help+0x1d8>
   116cc:	mov	r0, r4
   116d0:	bl	e75c <closedir@plt>
   116d4:	sub	sp, fp, #28
   116d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116dc:	.word	0x000496a8
   116e0:	.word	0x00049350
   116e4:	.word	0x000494cc
   116e8:	.word	0x0002f591
   116ec:	.word	0x0004946c
   116f0:	.word	0x0004941c
   116f4:	.word	0x0002f4e1
   116f8:	.word	0x000493bc

000116fc <send_user_motd>:
   116fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11700:	add	fp, sp, #24
   11704:	sub	sp, sp, #8
   11708:	mov	r4, r0
   1170c:	ldr	r0, [pc, #272]	; 11824 <send_user_motd+0x128>
   11710:	ldr	r0, [pc, r0]
   11714:	ldr	r1, [r4, #36]	; 0x24
   11718:	ldrh	r2, [r1, #80]	; 0x50
   1171c:	cmp	r2, #32
   11720:	bne	11744 <send_user_motd+0x48>
   11724:	ldrb	r2, [r1, #396]	; 0x18c
   11728:	cmp	r2, #0
   1172c:	beq	1174c <send_user_motd+0x50>
   11730:	mov	r5, r0
   11734:	ldrb	r2, [r5, #396]!	; 0x18c
   11738:	cmp	r2, #0
   1173c:	subeq	r5, r5, #308	; 0x134
   11740:	b	11750 <send_user_motd+0x54>
   11744:	add	r5, r0, #88	; 0x58
   11748:	b	11770 <send_user_motd+0x74>
   1174c:	add	r5, r0, #88	; 0x58
   11750:	ldrb	r1, [r1, #396]	; 0x18c
   11754:	cmp	r1, #0
   11758:	beq	11770 <send_user_motd+0x74>
   1175c:	mov	r6, r4
   11760:	ldrb	r1, [r6, #396]!	; 0x18c
   11764:	cmp	r1, #0
   11768:	subeq	r6, r6, #308	; 0x134
   1176c:	b	11774 <send_user_motd+0x78>
   11770:	add	r6, r4, #88	; 0x58
   11774:	ldr	r7, [pc, #172]	; 11828 <send_user_motd+0x12c>
   11778:	ldr	r7, [pc, r7]
   1177c:	ldr	r1, [r7]
   11780:	cmp	r1, #0
   11784:	beq	11804 <send_user_motd+0x108>
   11788:	ldr	r1, [r1, #40]	; 0x28
   1178c:	cmp	r1, #0
   11790:	beq	11804 <send_user_motd+0x108>
   11794:	add	r0, r0, #88	; 0x58
   11798:	str	r0, [sp]
   1179c:	ldr	r1, [pc, #140]	; 11830 <send_user_motd+0x134>
   117a0:	add	r1, pc, r1
   117a4:	mov	r0, r4
   117a8:	mov	r2, r5
   117ac:	mov	r3, r6
   117b0:	bl	d1e4 <sendto_one@plt>
   117b4:	ldr	r0, [r7]
   117b8:	ldr	r7, [r0, #32]
   117bc:	cmp	r7, #0
   117c0:	beq	117f8 <send_user_motd+0xfc>
   117c4:	ldr	r8, [pc, #104]	; 11834 <send_user_motd+0x138>
   117c8:	add	r8, pc, r8
   117cc:	ldr	r0, [r7]
   117d0:	ldr	r0, [r0]
   117d4:	str	r0, [sp]
   117d8:	mov	r0, r4
   117dc:	mov	r1, r8
   117e0:	mov	r2, r5
   117e4:	mov	r3, r6
   117e8:	bl	d1e4 <sendto_one@plt>
   117ec:	ldr	r7, [r7, #8]
   117f0:	cmp	r7, #0
   117f4:	bne	117cc <send_user_motd+0xd0>
   117f8:	ldr	r1, [pc, #56]	; 11838 <send_user_motd+0x13c>
   117fc:	add	r1, pc, r1
   11800:	b	1180c <send_user_motd+0x110>
   11804:	ldr	r1, [pc, #32]	; 1182c <send_user_motd+0x130>
   11808:	add	r1, pc, r1
   1180c:	mov	r0, r4
   11810:	mov	r2, r5
   11814:	mov	r3, r6
   11818:	sub	sp, fp, #24
   1181c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11820:	b	d1e4 <sendto_one@plt>
   11824:	.word	0x00049448
   11828:	.word	0x000492c4
   1182c:	.word	0x0002f340
   11830:	.word	0x0002f3c9
   11834:	.word	0x0002f3c8
   11838:	.word	0x0002f3a5

0001183c <cache_user_motd>:
   1183c:	push	{r4, r5, fp, lr}
   11840:	add	fp, sp, #8
   11844:	sub	sp, sp, #104	; 0x68
   11848:	ldr	r5, [pc, #148]	; 118e4 <cache_user_motd+0xa8>
   1184c:	ldr	r5, [pc, r5]
   11850:	ldr	r0, [r5, #36]	; 0x24
   11854:	add	r4, sp, #16
   11858:	mov	r1, r4
   1185c:	bl	40578 <__stat>
   11860:	cmp	r0, #0
   11864:	bne	118b4 <cache_user_motd+0x78>
   11868:	add	r0, r4, #64	; 0x40
   1186c:	bl	db38 <localtime@plt>
   11870:	cmp	r0, #0
   11874:	beq	118b4 <cache_user_motd+0x78>
   11878:	ldr	ip, [r0, #4]
   1187c:	add	r4, r0, #8
   11880:	ldm	r4, {r2, r3, r4}
   11884:	ldr	r0, [r0, #20]
   11888:	movw	r1, #1900	; 0x76c
   1188c:	add	r0, r0, r1
   11890:	add	r1, r4, #1
   11894:	str	r1, [sp]
   11898:	stmib	sp, {r0, r2, ip}
   1189c:	ldr	r0, [pc, #68]	; 118e8 <cache_user_motd+0xac>
   118a0:	ldr	r0, [pc, r0]
   118a4:	ldr	r2, [pc, #64]	; 118ec <cache_user_motd+0xb0>
   118a8:	add	r2, pc, r2
   118ac:	mov	r1, #32
   118b0:	bl	de74 <snprintf@plt>
   118b4:	ldr	r4, [pc, #52]	; 118f0 <cache_user_motd+0xb4>
   118b8:	ldr	r4, [pc, r4]
   118bc:	ldr	r0, [r4]
   118c0:	bl	d34c <free_cachefile@plt>
   118c4:	ldr	r0, [r5, #36]	; 0x24
   118c8:	ldr	r1, [pc, #36]	; 118f4 <cache_user_motd+0xb8>
   118cc:	add	r1, pc, r1
   118d0:	mov	r2, #0
   118d4:	bl	dafc <cache_file@plt>
   118d8:	str	r0, [r4]
   118dc:	sub	sp, fp, #8
   118e0:	pop	{r4, r5, fp, pc}
   118e4:	.word	0x000491fc
   118e8:	.word	0x00049204
   118ec:	.word	0x0002f31b
   118f0:	.word	0x00049184
   118f4:	.word	0x00030529

000118f8 <send_oper_motd>:
   118f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   118fc:	add	fp, sp, #24
   11900:	sub	sp, sp, #8
   11904:	mov	r4, r0
   11908:	ldr	r7, [pc, #172]	; 119bc <send_oper_motd+0xc4>
   1190c:	ldr	r7, [pc, r7]
   11910:	ldr	r0, [r7]
   11914:	cmp	r0, #0
   11918:	beq	119b4 <send_oper_motd+0xbc>
   1191c:	ldr	r0, [r0, #40]	; 0x28
   11920:	cmp	r0, #0
   11924:	beq	119b4 <send_oper_motd+0xbc>
   11928:	add	r5, r4, #88	; 0x58
   1192c:	ldr	r0, [pc, #140]	; 119c0 <send_oper_motd+0xc8>
   11930:	ldr	r0, [pc, r0]
   11934:	add	r6, r0, #88	; 0x58
   11938:	ldr	r1, [pc, #132]	; 119c4 <send_oper_motd+0xcc>
   1193c:	add	r1, pc, r1
   11940:	mov	r0, r4
   11944:	mov	r2, r6
   11948:	mov	r3, r5
   1194c:	bl	d1e4 <sendto_one@plt>
   11950:	ldr	r0, [r7]
   11954:	ldr	r7, [r0, #32]
   11958:	cmp	r7, #0
   1195c:	beq	11994 <send_oper_motd+0x9c>
   11960:	ldr	r8, [pc, #96]	; 119c8 <send_oper_motd+0xd0>
   11964:	add	r8, pc, r8
   11968:	ldr	r0, [r7]
   1196c:	ldr	r0, [r0]
   11970:	str	r0, [sp]
   11974:	mov	r0, r4
   11978:	mov	r1, r8
   1197c:	mov	r2, r6
   11980:	mov	r3, r5
   11984:	bl	d1e4 <sendto_one@plt>
   11988:	ldr	r7, [r7, #8]
   1198c:	cmp	r7, #0
   11990:	bne	11968 <send_oper_motd+0x70>
   11994:	ldr	r1, [pc, #48]	; 119cc <send_oper_motd+0xd4>
   11998:	add	r1, pc, r1
   1199c:	mov	r0, r4
   119a0:	mov	r2, r6
   119a4:	mov	r3, r5
   119a8:	sub	sp, fp, #24
   119ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   119b0:	b	d1e4 <sendto_one@plt>
   119b4:	sub	sp, fp, #24
   119b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119bc:	.word	0x00049108
   119c0:	.word	0x00049228
   119c4:	.word	0x0002f296
   119c8:	.word	0x0002f28d
   119cc:	.word	0x0002f268

000119d0 <capability_find>:
   119d0:	cmp	r1, #0
   119d4:	moveq	r0, #0
   119d8:	bxeq	lr
   119dc:	ldr	r0, [r0, #4]
   119e0:	b	e6e4 <rb_dictionary_retrieve@plt>

000119e4 <capability_get>:
   119e4:	push	{r4, r5, fp, lr}
   119e8:	add	fp, sp, #8
   119ec:	mov	r4, #0
   119f0:	cmp	r1, #0
   119f4:	beq	11a30 <capability_get+0x4c>
   119f8:	mov	r5, r2
   119fc:	ldr	r0, [r0, #4]
   11a00:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11a04:	cmp	r0, #0
   11a08:	beq	11a30 <capability_get+0x4c>
   11a0c:	ldrb	r1, [r0, #8]
   11a10:	tst	r1, #1
   11a14:	bne	11a30 <capability_get+0x4c>
   11a18:	cmp	r5, #0
   11a1c:	ldrne	r1, [r0, #12]
   11a20:	strne	r1, [r5]
   11a24:	ldr	r0, [r0, #4]
   11a28:	mov	r1, #1
   11a2c:	lsl	r4, r1, r0
   11a30:	mov	r0, r4
   11a34:	pop	{r4, r5, fp, pc}

00011a38 <capability_put>:
   11a38:	push	{r4, r5, r6, r7, fp, lr}
   11a3c:	add	fp, sp, #16
   11a40:	mov	r4, r0
   11a44:	ldr	r0, [r0, #8]
   11a48:	cmp	r0, #0
   11a4c:	beq	11a84 <capability_put+0x4c>
   11a50:	mov	r5, r2
   11a54:	mov	r6, r1
   11a58:	ldr	r0, [r4, #4]
   11a5c:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11a60:	cmp	r0, #0
   11a64:	beq	11a8c <capability_put+0x54>
   11a68:	ldr	r1, [r0, #8]
   11a6c:	bic	r1, r1, #1
   11a70:	str	r1, [r0, #8]
   11a74:	cmp	r5, #0
   11a78:	strne	r5, [r0, #12]
   11a7c:	add	r5, r0, #4
   11a80:	b	11adc <capability_put+0xa4>
   11a84:	mvn	r0, #0
   11a88:	pop	{r4, r5, r6, r7, fp, pc}
   11a8c:	mov	r0, #16
   11a90:	bl	11aec <rb_malloc>
   11a94:	mov	r7, r0
   11a98:	mov	r0, r6
   11a9c:	bl	11b0c <rb_strdup>
   11aa0:	mov	r1, r0
   11aa4:	mov	r2, #0
   11aa8:	str	r0, [r7]
   11aac:	ldmib	r4, {r0, r3}
   11ab0:	str	r2, [r7, #8]
   11ab4:	str	r5, [r7, #12]
   11ab8:	mov	r5, r7
   11abc:	str	r3, [r5, #4]!
   11ac0:	mov	r2, r7
   11ac4:	bl	d700 <rb_dictionary_add@plt>
   11ac8:	ldr	r0, [r4, #8]
   11acc:	add	r0, r0, #1
   11ad0:	ands	r1, r0, #31
   11ad4:	movne	r1, r0
   11ad8:	str	r1, [r4, #8]
   11adc:	ldr	r0, [r5]
   11ae0:	mov	r1, #1
   11ae4:	lsl	r0, r1, r0
   11ae8:	pop	{r4, r5, r6, r7, fp, pc}

00011aec <rb_malloc>:
   11aec:	push	{fp, lr}
   11af0:	mov	fp, sp
   11af4:	mov	r1, r0
   11af8:	mov	r0, #1
   11afc:	bl	cfa4 <calloc@plt>
   11b00:	cmp	r0, #0
   11b04:	popne	{fp, pc}
   11b08:	bl	d448 <rb_outofmemory@plt>

00011b0c <rb_strdup>:
   11b0c:	push	{r4, sl, fp, lr}
   11b10:	add	fp, sp, #8
   11b14:	mov	r4, r0
   11b18:	bl	dc94 <strlen@plt>
   11b1c:	add	r0, r0, #1
   11b20:	bl	da84 <malloc@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	11b38 <rb_strdup+0x2c>
   11b2c:	mov	r1, r4
   11b30:	pop	{r4, sl, fp, lr}
   11b34:	b	d91c <strcpy@plt>
   11b38:	bl	d448 <rb_outofmemory@plt>

00011b3c <capability_put_anonymous>:
   11b3c:	ldr	r1, [r0, #8]
   11b40:	cmp	r1, #0
   11b44:	mvneq	r0, #0
   11b48:	bxeq	lr
   11b4c:	add	r2, r1, #1
   11b50:	ands	r3, r2, #31
   11b54:	movne	r3, r2
   11b58:	str	r3, [r0, #8]
   11b5c:	mov	r0, #1
   11b60:	lsl	r0, r0, r1
   11b64:	bx	lr

00011b68 <capability_orphan>:
   11b68:	push	{fp, lr}
   11b6c:	mov	fp, sp
   11b70:	ldr	r0, [r0, #4]
   11b74:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11b78:	cmp	r0, #0
   11b7c:	popeq	{fp, pc}
   11b80:	mov	r1, #0
   11b84:	str	r1, [r0, #12]
   11b88:	ldr	r1, [r0, #8]
   11b8c:	mov	r2, #1
   11b90:	bfi	r1, r2, #0, #2
   11b94:	str	r1, [r0, #8]
   11b98:	pop	{fp, pc}

00011b9c <capability_require>:
   11b9c:	push	{fp, lr}
   11ba0:	mov	fp, sp
   11ba4:	ldr	r0, [r0, #4]
   11ba8:	bl	e6e4 <rb_dictionary_retrieve@plt>
   11bac:	cmp	r0, #0
   11bb0:	ldrne	r1, [r0, #8]
   11bb4:	orrne	r1, r1, #2
   11bb8:	strne	r1, [r0, #8]
   11bbc:	pop	{fp, pc}

00011bc0 <capability_index_create>:
   11bc0:	push	{r4, r5, fp, lr}
   11bc4:	add	fp, sp, #8
   11bc8:	mov	r4, r0
   11bcc:	mov	r0, #24
   11bd0:	bl	11aec <rb_malloc>
   11bd4:	mov	r5, r0
   11bd8:	str	r4, [r0]
   11bdc:	ldr	r1, [pc, #36]	; 11c08 <capability_index_create+0x48>
   11be0:	ldr	r1, [pc, r1]
   11be4:	mov	r0, r4
   11be8:	bl	dfb8 <rb_dictionary_create@plt>
   11bec:	mov	r1, #1
   11bf0:	stmib	r5, {r0, r1}
   11bf4:	add	r1, r5, #12
   11bf8:	mov	r0, r5
   11bfc:	bl	11c0c <rb_dlinkAdd>
   11c00:	mov	r0, r5
   11c04:	pop	{r4, r5, fp, pc}
   11c08:	.word	0x00048cd0

00011c0c <rb_dlinkAdd>:
   11c0c:	push	{fp, lr}
   11c10:	mov	fp, sp
   11c14:	cmp	r0, #0
   11c18:	beq	11c78 <rb_dlinkAdd+0x6c>
   11c1c:	cmp	r1, #0
   11c20:	beq	11c98 <rb_dlinkAdd+0x8c>
   11c24:	mov	r2, #0
   11c28:	stm	r1, {r0, r2}
   11c2c:	ldr	r2, [pc, #132]	; 11cb8 <rb_dlinkAdd+0xac>
   11c30:	ldr	r2, [pc, r2]
   11c34:	str	r2, [r1, #8]
   11c38:	cmp	r2, #0
   11c3c:	ldr	r0, [pc, #120]	; 11cbc <rb_dlinkAdd+0xb0>
   11c40:	add	r0, pc, r0
   11c44:	beq	11c54 <rb_dlinkAdd+0x48>
   11c48:	add	r2, r2, #4
   11c4c:	str	r1, [r2]
   11c50:	b	11c64 <rb_dlinkAdd+0x58>
   11c54:	mov	r2, r0
   11c58:	ldr	r3, [r2, #4]!
   11c5c:	cmp	r3, #0
   11c60:	streq	r1, [r2]
   11c64:	str	r1, [r0]
   11c68:	ldr	r1, [r0, #8]
   11c6c:	add	r1, r1, #1
   11c70:	str	r1, [r0, #8]
   11c74:	pop	{fp, pc}
   11c78:	ldr	r0, [pc, #64]	; 11cc0 <rb_dlinkAdd+0xb4>
   11c7c:	add	r0, pc, r0
   11c80:	ldr	r1, [pc, #60]	; 11cc4 <rb_dlinkAdd+0xb8>
   11c84:	add	r1, pc, r1
   11c88:	ldr	r3, [pc, #56]	; 11cc8 <rb_dlinkAdd+0xbc>
   11c8c:	add	r3, pc, r3
   11c90:	mov	r2, #143	; 0x8f
   11c94:	bl	e7e0 <__assert_fail@plt>
   11c98:	ldr	r0, [pc, #44]	; 11ccc <rb_dlinkAdd+0xc0>
   11c9c:	add	r0, pc, r0
   11ca0:	ldr	r1, [pc, #40]	; 11cd0 <rb_dlinkAdd+0xc4>
   11ca4:	add	r1, pc, r1
   11ca8:	ldr	r3, [pc, #36]	; 11cd4 <rb_dlinkAdd+0xc8>
   11cac:	add	r3, pc, r3
   11cb0:	mov	r2, #144	; 0x90
   11cb4:	bl	e7e0 <__assert_fail@plt>
   11cb8:	.word	0x0004fac4
   11cbc:	.word	0x0004fab4
   11cc0:	.word	0x0002ecf5
   11cc4:	.word	0x0002ec92
   11cc8:	.word	0x0002ecf2
   11ccc:	.word	0x0002ec70
   11cd0:	.word	0x0002ec72
   11cd4:	.word	0x0002ecd2

00011cd8 <capability_index_destroy>:
   11cd8:	push	{r4, sl, fp, lr}
   11cdc:	add	fp, sp, #8
   11ce0:	mov	r4, r0
   11ce4:	add	r0, r0, #12
   11ce8:	bl	11d10 <rb_dlinkDelete>
   11cec:	ldr	r0, [r4, #4]
   11cf0:	ldr	r1, [pc, #20]	; 11d0c <capability_index_destroy+0x34>
   11cf4:	add	r1, pc, r1
   11cf8:	mov	r2, #0
   11cfc:	bl	e0cc <rb_dictionary_destroy@plt>
   11d00:	mov	r0, r4
   11d04:	pop	{r4, sl, fp, lr}
   11d08:	b	11dbc <rb_free>
   11d0c:	.word	0x000000a0

00011d10 <rb_dlinkDelete>:
   11d10:	push	{fp, lr}
   11d14:	mov	fp, sp
   11d18:	cmp	r0, #0
   11d1c:	beq	11d6c <rb_dlinkDelete+0x5c>
   11d20:	ldr	ip, [pc, #100]	; 11d8c <rb_dlinkDelete+0x7c>
   11d24:	add	ip, pc, ip
   11d28:	ldmib	r0, {r2, r3}
   11d2c:	add	r1, r3, #4
   11d30:	cmp	r3, #0
   11d34:	addeq	r1, ip, #4
   11d38:	str	r2, [r1]
   11d3c:	ldmib	r0, {r1, r2}
   11d40:	cmp	r1, #0
   11d44:	mov	r3, ip
   11d48:	addne	r3, r1, #8
   11d4c:	str	r2, [r3]
   11d50:	mov	r1, #0
   11d54:	str	r1, [r0, #4]
   11d58:	str	r1, [r0, #8]
   11d5c:	ldr	r0, [ip, #8]
   11d60:	sub	r0, r0, #1
   11d64:	str	r0, [ip, #8]
   11d68:	pop	{fp, pc}
   11d6c:	ldr	r0, [pc, #28]	; 11d90 <rb_dlinkDelete+0x80>
   11d70:	add	r0, pc, r0
   11d74:	ldr	r1, [pc, #24]	; 11d94 <rb_dlinkDelete+0x84>
   11d78:	add	r1, pc, r1
   11d7c:	ldr	r3, [pc, #20]	; 11d98 <rb_dlinkDelete+0x88>
   11d80:	add	r3, pc, r3
   11d84:	mov	r2, #235	; 0xeb
   11d88:	bl	e7e0 <__assert_fail@plt>
   11d8c:	.word	0x0004f9d0
   11d90:	.word	0x0002eb9c
   11d94:	.word	0x0002eb9e
   11d98:	.word	0x0002ec39

00011d9c <capability_destroy>:
   11d9c:	push	{r4, sl, fp, lr}
   11da0:	add	fp, sp, #8
   11da4:	ldr	r4, [r0, #16]
   11da8:	ldr	r0, [r4]
   11dac:	bl	11dbc <rb_free>
   11db0:	mov	r0, r4
   11db4:	pop	{r4, sl, fp, lr}
   11db8:	b	11dbc <rb_free>

00011dbc <rb_free>:
   11dbc:	cmp	r0, #0
   11dc0:	bxeq	lr
   11dc4:	b	d328 <free@plt>

00011dc8 <capability_index_list>:
   11dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dcc:	add	fp, sp, #28
   11dd0:	sub	sp, sp, #12
   11dd4:	mov	r4, r1
   11dd8:	mov	r5, r0
   11ddc:	ldr	r6, [pc, #160]	; 11e84 <capability_index_list+0xbc>
   11de0:	add	r6, pc, r6
   11de4:	mov	r9, #0
   11de8:	strb	r9, [r6]
   11dec:	ldr	r0, [r0, #4]
   11df0:	add	r7, sp, #4
   11df4:	mov	r1, r7
   11df8:	bl	d970 <rb_dictionary_foreach_start@plt>
   11dfc:	ldr	r0, [r5, #4]
   11e00:	mov	r1, r7
   11e04:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11e08:	cmp	r0, #0
   11e0c:	beq	11e70 <capability_index_list+0xa8>
   11e10:	ldr	r6, [pc, #112]	; 11e88 <capability_index_list+0xc0>
   11e14:	add	r6, pc, r6
   11e18:	mov	sl, #1
   11e1c:	add	r7, sp, #4
   11e20:	ldr	r8, [pc, #100]	; 11e8c <capability_index_list+0xc4>
   11e24:	add	r8, pc, r8
   11e28:	b	11e4c <capability_index_list+0x84>
   11e2c:	ldr	r0, [r5, #4]
   11e30:	mov	r1, r7
   11e34:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11e38:	ldr	r0, [r5, #4]
   11e3c:	mov	r1, r7
   11e40:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11e44:	cmp	r0, #0
   11e48:	beq	11e70 <capability_index_list+0xa8>
   11e4c:	ldr	r1, [r0, #4]
   11e50:	tst	r4, sl, lsl r1
   11e54:	beq	11e2c <capability_index_list+0x64>
   11e58:	ldr	r2, [r0]
   11e5c:	mov	r0, r6
   11e60:	mov	r1, r8
   11e64:	bl	e3a8 <sprintf@plt>
   11e68:	add	r6, r6, r0
   11e6c:	b	11e2c <capability_index_list+0x64>
   11e70:	strb	r9, [r6, #-1]
   11e74:	ldr	r0, [pc, #20]	; 11e90 <capability_index_list+0xc8>
   11e78:	add	r0, pc, r0
   11e7c:	sub	sp, fp, #28
   11e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e84:	.word	0x0004f920
   11e88:	.word	0x0004f8ec
   11e8c:	.word	0x00035813
   11e90:	.word	0x0004f888

00011e94 <capability_index_mask>:
   11e94:	push	{r4, r5, r6, r7, fp, lr}
   11e98:	add	fp, sp, #16
   11e9c:	sub	sp, sp, #8
   11ea0:	mov	r4, r0
   11ea4:	ldr	r0, [r0, #4]
   11ea8:	mov	r5, sp
   11eac:	mov	r1, r5
   11eb0:	bl	d970 <rb_dictionary_foreach_start@plt>
   11eb4:	ldr	r0, [r4, #4]
   11eb8:	mov	r1, r5
   11ebc:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11ec0:	mov	r5, #0
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f10 <capability_index_mask+0x7c>
   11ecc:	mov	r7, #1
   11ed0:	mov	r6, sp
   11ed4:	b	11ef8 <capability_index_mask+0x64>
   11ed8:	ldr	r0, [r4, #4]
   11edc:	mov	r1, r6
   11ee0:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11ee4:	ldr	r0, [r4, #4]
   11ee8:	mov	r1, r6
   11eec:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11ef0:	cmp	r0, #0
   11ef4:	beq	11f10 <capability_index_mask+0x7c>
   11ef8:	ldrb	r1, [r0, #8]
   11efc:	tst	r1, #1
   11f00:	bne	11ed8 <capability_index_mask+0x44>
   11f04:	ldr	r0, [r0, #4]
   11f08:	orr	r5, r5, r7, lsl r0
   11f0c:	b	11ed8 <capability_index_mask+0x44>
   11f10:	mov	r0, r5
   11f14:	sub	sp, fp, #16
   11f18:	pop	{r4, r5, r6, r7, fp, pc}

00011f1c <capability_index_get_required>:
   11f1c:	push	{r4, r5, r6, r7, fp, lr}
   11f20:	add	fp, sp, #16
   11f24:	sub	sp, sp, #8
   11f28:	mov	r4, r0
   11f2c:	ldr	r0, [r0, #4]
   11f30:	mov	r5, sp
   11f34:	mov	r1, r5
   11f38:	bl	d970 <rb_dictionary_foreach_start@plt>
   11f3c:	ldr	r0, [r4, #4]
   11f40:	mov	r1, r5
   11f44:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11f48:	mov	r5, #0
   11f4c:	cmp	r0, #0
   11f50:	beq	11f9c <capability_index_get_required+0x80>
   11f54:	mov	r7, #1
   11f58:	mov	r6, sp
   11f5c:	b	11f80 <capability_index_get_required+0x64>
   11f60:	ldr	r0, [r4, #4]
   11f64:	mov	r1, r6
   11f68:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   11f6c:	ldr	r0, [r4, #4]
   11f70:	mov	r1, r6
   11f74:	bl	e300 <rb_dictionary_foreach_cur@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11f9c <capability_index_get_required+0x80>
   11f80:	ldr	r1, [r0, #8]
   11f84:	and	r1, r1, #3
   11f88:	cmp	r1, #2
   11f8c:	bne	11f60 <capability_index_get_required+0x44>
   11f90:	ldr	r0, [r0, #4]
   11f94:	orr	r5, r5, r7, lsl r0
   11f98:	b	11f60 <capability_index_get_required+0x44>
   11f9c:	mov	r0, r5
   11fa0:	sub	sp, fp, #16
   11fa4:	pop	{r4, r5, r6, r7, fp, pc}

00011fa8 <capability_index_stats>:
   11fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fac:	add	fp, sp, #28
   11fb0:	sub	sp, sp, #532	; 0x214
   11fb4:	mov	r5, r1
   11fb8:	mov	r4, r0
   11fbc:	ldr	r8, [pc, #280]	; 120dc <capability_index_stats+0x134>
   11fc0:	ldr	r8, [pc, r8]
   11fc4:	cmp	r8, #0
   11fc8:	beq	120a4 <capability_index_stats+0xfc>
   11fcc:	add	r6, sp, #16
   11fd0:	add	r7, sp, #8
   11fd4:	ldr	sl, [pc, #260]	; 120e0 <capability_index_stats+0x138>
   11fd8:	add	sl, pc, sl
   11fdc:	b	1201c <capability_index_stats+0x74>
   11fe0:	ldr	r3, [r9]
   11fe4:	ldr	r0, [r9, #8]
   11fe8:	rsb	r0, r0, #33	; 0x21
   11fec:	str	r0, [sp]
   11ff0:	mov	r0, r6
   11ff4:	mov	r1, #512	; 0x200
   11ff8:	ldr	r2, [pc, #232]	; 120e8 <capability_index_stats+0x140>
   11ffc:	add	r2, pc, r2
   12000:	bl	de74 <snprintf@plt>
   12004:	mov	r0, r6
   12008:	mov	r1, r5
   1200c:	blx	r4
   12010:	ldr	r8, [r8, #8]
   12014:	cmp	r8, #0
   12018:	beq	120a4 <capability_index_stats+0xfc>
   1201c:	ldr	r9, [r8]
   12020:	ldr	r3, [r9]
   12024:	ldr	r0, [r9, #8]
   12028:	sub	r0, r0, #1
   1202c:	str	r0, [sp]
   12030:	mov	r0, r6
   12034:	mov	r1, #512	; 0x200
   12038:	ldr	r2, [pc, #164]	; 120e4 <capability_index_stats+0x13c>
   1203c:	add	r2, pc, r2
   12040:	bl	de74 <snprintf@plt>
   12044:	mov	r0, r6
   12048:	mov	r1, r5
   1204c:	blx	r4
   12050:	ldr	r0, [r9, #4]
   12054:	mov	r1, r7
   12058:	bl	d970 <rb_dictionary_foreach_start@plt>
   1205c:	ldr	r0, [r9, #4]
   12060:	mov	r1, r7
   12064:	bl	e300 <rb_dictionary_foreach_cur@plt>
   12068:	cmp	r0, #0
   1206c:	beq	11fe0 <capability_index_stats+0x38>
   12070:	ldm	r0, {r1, r3}
   12074:	str	r1, [sp]
   12078:	mov	r0, r6
   1207c:	mov	r1, #512	; 0x200
   12080:	mov	r2, sl
   12084:	bl	de74 <snprintf@plt>
   12088:	mov	r0, r6
   1208c:	mov	r1, r5
   12090:	blx	r4
   12094:	ldr	r0, [r9, #4]
   12098:	mov	r1, r7
   1209c:	bl	e5a0 <rb_dictionary_foreach_next@plt>
   120a0:	b	1205c <capability_index_stats+0xb4>
   120a4:	ldr	r0, [pc, #64]	; 120ec <capability_index_stats+0x144>
   120a8:	add	r0, pc, r0
   120ac:	ldr	r3, [r0, #8]
   120b0:	add	r6, sp, #16
   120b4:	ldr	r2, [pc, #52]	; 120f0 <capability_index_stats+0x148>
   120b8:	add	r2, pc, r2
   120bc:	mov	r0, r6
   120c0:	mov	r1, #512	; 0x200
   120c4:	bl	de74 <snprintf@plt>
   120c8:	mov	r0, r6
   120cc:	mov	r1, r5
   120d0:	blx	r4
   120d4:	sub	sp, fp, #28
   120d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120dc:	.word	0x0004f734
   120e0:	.word	0x0002ec5f
   120e4:	.word	0x0002ebe1
   120e8:	.word	0x0002ec48
   120ec:	.word	0x0004f64c
   120f0:	.word	0x0002eba6

000120f4 <init_channels>:
   120f4:	push	{fp, lr}
   120f8:	mov	fp, sp
   120fc:	ldr	r2, [pc, #196]	; 121c8 <init_channels+0xd4>
   12100:	add	r2, pc, r2
   12104:	mov	r0, #256	; 0x100
   12108:	mov	r1, #8192	; 0x2000
   1210c:	bl	ded4 <rb_bh_create@plt>
   12110:	ldr	r1, [pc, #180]	; 121cc <init_channels+0xd8>
   12114:	add	r1, pc, r1
   12118:	str	r0, [r1]
   1211c:	ldr	r2, [pc, #172]	; 121d0 <init_channels+0xdc>
   12120:	add	r2, pc, r2
   12124:	mov	r0, #28
   12128:	mov	r1, #4096	; 0x1000
   1212c:	bl	ded4 <rb_bh_create@plt>
   12130:	ldr	r1, [pc, #156]	; 121d4 <init_channels+0xe0>
   12134:	add	r1, pc, r1
   12138:	str	r0, [r1]
   1213c:	ldr	r2, [pc, #148]	; 121d8 <init_channels+0xe4>
   12140:	add	r2, pc, r2
   12144:	mov	r0, #532	; 0x214
   12148:	mov	r1, #4096	; 0x1000
   1214c:	bl	ded4 <rb_bh_create@plt>
   12150:	ldr	r1, [pc, #132]	; 121dc <init_channels+0xe8>
   12154:	add	r1, pc, r1
   12158:	str	r0, [r1]
   1215c:	ldr	r2, [pc, #124]	; 121e0 <init_channels+0xec>
   12160:	add	r2, pc, r2
   12164:	mov	r0, #52	; 0x34
   12168:	mov	r1, #32768	; 0x8000
   1216c:	bl	ded4 <rb_bh_create@plt>
   12170:	ldr	r1, [pc, #108]	; 121e4 <init_channels+0xf0>
   12174:	add	r1, pc, r1
   12178:	str	r0, [r1]
   1217c:	ldr	r0, [pc, #100]	; 121e8 <init_channels+0xf4>
   12180:	add	r0, pc, r0
   12184:	bl	dbb0 <register_hook@plt>
   12188:	ldr	r1, [pc, #92]	; 121ec <init_channels+0xf8>
   1218c:	add	r1, pc, r1
   12190:	str	r0, [r1]
   12194:	ldr	r0, [pc, #84]	; 121f0 <init_channels+0xfc>
   12198:	add	r0, pc, r0
   1219c:	bl	dbb0 <register_hook@plt>
   121a0:	ldr	r1, [pc, #76]	; 121f4 <init_channels+0x100>
   121a4:	add	r1, pc, r1
   121a8:	str	r0, [r1]
   121ac:	ldr	r0, [pc, #68]	; 121f8 <init_channels+0x104>
   121b0:	add	r0, pc, r0
   121b4:	bl	dbb0 <register_hook@plt>
   121b8:	ldr	r1, [pc, #60]	; 121fc <init_channels+0x108>
   121bc:	ldr	r1, [pc, r1]
   121c0:	str	r0, [r1]
   121c4:	pop	{fp, pc}
   121c8:	.word	0x0002eb75
   121cc:	.word	0x0004f7ec
   121d0:	.word	0x0002eb62
   121d4:	.word	0x0004f7d0
   121d8:	.word	0x0002eb4b
   121dc:	.word	0x0004f7b4
   121e0:	.word	0x0002eb36
   121e4:	.word	0x0004f798
   121e8:	.word	0x0002eb22
   121ec:	.word	0x0004f784
   121f0:	.word	0x0002eb13
   121f4:	.word	0x0004f770
   121f8:	.word	0x0002eb04
   121fc:	.word	0x000487e0

00012200 <allocate_channel>:
   12200:	push	{r4, r5, fp, lr}
   12204:	add	fp, sp, #8
   12208:	mov	r4, r0
   1220c:	ldr	r0, [pc, #28]	; 12230 <allocate_channel+0x30>
   12210:	ldr	r0, [pc, r0]
   12214:	bl	de20 <rb_bh_alloc@plt>
   12218:	mov	r5, r0
   1221c:	mov	r0, r4
   12220:	bl	12234 <rb_strdup>
   12224:	str	r0, [r5, #236]	; 0xec
   12228:	mov	r0, r5
   1222c:	pop	{r4, r5, fp, pc}
   12230:	.word	0x0004f6f0

00012234 <rb_strdup>:
   12234:	push	{r4, sl, fp, lr}
   12238:	add	fp, sp, #8
   1223c:	mov	r4, r0
   12240:	bl	dc94 <strlen@plt>
   12244:	add	r0, r0, #1
   12248:	bl	da84 <malloc@plt>
   1224c:	cmp	r0, #0
   12250:	beq	12260 <rb_strdup+0x2c>
   12254:	mov	r1, r4
   12258:	pop	{r4, sl, fp, lr}
   1225c:	b	d91c <strcpy@plt>
   12260:	bl	d448 <rb_outofmemory@plt>

00012264 <free_channel>:
   12264:	push	{r4, sl, fp, lr}
   12268:	add	fp, sp, #8
   1226c:	mov	r4, r0
   12270:	ldr	r0, [r0, #236]	; 0xec
   12274:	bl	12298 <rb_free>
   12278:	ldr	r0, [r4, #104]	; 0x68
   1227c:	bl	12298 <rb_free>
   12280:	ldr	r0, [pc, #12]	; 12294 <free_channel+0x30>
   12284:	ldr	r0, [pc, r0]
   12288:	mov	r1, r4
   1228c:	pop	{r4, sl, fp, lr}
   12290:	b	e708 <rb_bh_free@plt>
   12294:	.word	0x0004f67c

00012298 <rb_free>:
   12298:	cmp	r0, #0
   1229c:	bxeq	lr
   122a0:	b	d328 <free@plt>

000122a4 <allocate_ban>:
   122a4:	push	{r4, r5, r6, r7, fp, lr}
   122a8:	add	fp, sp, #16
   122ac:	mov	r5, r2
   122b0:	mov	r6, r1
   122b4:	mov	r7, r0
   122b8:	ldr	r0, [pc, #68]	; 12304 <allocate_ban+0x60>
   122bc:	ldr	r0, [pc, r0]
   122c0:	bl	de20 <rb_bh_alloc@plt>
   122c4:	mov	r4, r0
   122c8:	mov	r0, r7
   122cc:	bl	12234 <rb_strdup>
   122d0:	str	r0, [r4]
   122d4:	mov	r0, r6
   122d8:	bl	12234 <rb_strdup>
   122dc:	str	r0, [r4, #4]
   122e0:	cmp	r5, #0
   122e4:	beq	122f4 <allocate_ban+0x50>
   122e8:	mov	r0, r5
   122ec:	bl	12234 <rb_strdup>
   122f0:	b	122f8 <allocate_ban+0x54>
   122f4:	mov	r0, #0
   122f8:	str	r0, [r4, #12]
   122fc:	mov	r0, r4
   12300:	pop	{r4, r5, r6, r7, fp, pc}
   12304:	.word	0x0004f648

00012308 <free_ban>:
   12308:	push	{r4, sl, fp, lr}
   1230c:	add	fp, sp, #8
   12310:	mov	r4, r0
   12314:	ldr	r0, [r0]
   12318:	bl	12298 <rb_free>
   1231c:	ldr	r0, [r4, #4]
   12320:	bl	12298 <rb_free>
   12324:	ldr	r0, [r4, #12]
   12328:	bl	12298 <rb_free>
   1232c:	ldr	r0, [pc, #12]	; 12340 <free_ban+0x38>
   12330:	ldr	r0, [pc, r0]
   12334:	mov	r1, r4
   12338:	pop	{r4, sl, fp, lr}
   1233c:	b	e708 <rb_bh_free@plt>
   12340:	.word	0x0004f5d4

00012344 <send_channel_join>:
   12344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12348:	add	fp, sp, #28
   1234c:	sub	sp, sp, #36	; 0x24
   12350:	mov	r5, r0
   12354:	ldrh	r0, [r1, #80]	; 0x50
   12358:	cmp	r0, #64	; 0x40
   1235c:	bne	12448 <send_channel_join+0x104>
   12360:	mov	r4, r1
   12364:	ldr	r9, [pc, #228]	; 12450 <send_channel_join+0x10c>
   12368:	ldr	r9, [pc, r9]
   1236c:	ldr	r3, [r9]
   12370:	ldr	r0, [r5, #236]	; 0xec
   12374:	add	r8, r1, #163	; 0xa3
   12378:	add	sl, r1, #152	; 0x98
   1237c:	add	r6, r1, #88	; 0x58
   12380:	ldr	r1, [pc, #204]	; 12454 <send_channel_join+0x110>
   12384:	add	r1, pc, r1
   12388:	str	r5, [sp]
   1238c:	stmib	sp, {r1, r6, sl}
   12390:	str	r8, [sp, #16]
   12394:	str	r0, [sp, #20]
   12398:	mov	r0, r4
   1239c:	mov	r1, #0
   123a0:	mov	r2, #0
   123a4:	bl	d2ec <sendto_channel_local_with_capability@plt>
   123a8:	movw	r0, #345	; 0x159
   123ac:	add	lr, r4, r0
   123b0:	ldr	r2, [r9]
   123b4:	ldr	r1, [r4, #24]
   123b8:	ldrb	r3, [r1, #40]!	; 0x28
   123bc:	ldr	r7, [r5, #236]	; 0xec
   123c0:	ldr	ip, [pc, #144]	; 12458 <send_channel_join+0x114>
   123c4:	add	ip, pc, ip
   123c8:	ldr	r0, [pc, #140]	; 1245c <send_channel_join+0x118>
   123cc:	add	r0, pc, r0
   123d0:	cmp	r3, #0
   123d4:	movne	r0, r1
   123d8:	stm	sp, {r5, ip}
   123dc:	str	r6, [sp, #8]
   123e0:	str	sl, [sp, #12]
   123e4:	str	r8, [sp, #16]
   123e8:	str	r7, [sp, #20]
   123ec:	str	r0, [sp, #24]
   123f0:	str	lr, [sp, #28]
   123f4:	mov	r0, r4
   123f8:	mov	r1, #0
   123fc:	mov	r3, #0
   12400:	bl	d2ec <sendto_channel_local_with_capability@plt>
   12404:	ldr	r0, [r4, #24]
   12408:	ldr	r0, [r0, #24]
   1240c:	cmp	r0, #0
   12410:	beq	12448 <send_channel_join+0x104>
   12414:	ldr	r1, [pc, #68]	; 12460 <send_channel_join+0x11c>
   12418:	ldr	r1, [pc, r1]
   1241c:	ldr	r2, [r1]
   12420:	ldr	r1, [pc, #60]	; 12464 <send_channel_join+0x120>
   12424:	add	r1, pc, r1
   12428:	str	r5, [sp]
   1242c:	stmib	sp, {r1, r6, sl}
   12430:	str	r8, [sp, #16]
   12434:	str	r0, [sp, #20]
   12438:	mov	r0, r4
   1243c:	mov	r1, #0
   12440:	mov	r3, #0
   12444:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   12448:	sub	sp, fp, #28
   1244c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12450:	.word	0x00048764
   12454:	.word	0x0002e943
   12458:	.word	0x0002e915
   1245c:	.word	0x0002f2d1
   12460:	.word	0x000485d0
   12464:	.word	0x0002e8ce

00012468 <find_channel_membership>:
   12468:	ldrh	r2, [r1, #80]	; 0x50
   1246c:	cmp	r2, #64	; 0x40
   12470:	bne	124dc <find_channel_membership+0x74>
   12474:	ldr	ip, [r0, #132]	; 0x84
   12478:	ldr	r2, [r1, #24]
   1247c:	ldr	r3, [r2, #8]
   12480:	cmp	ip, r3
   12484:	bcs	124b4 <find_channel_membership+0x4c>
   12488:	ldr	r0, [r0, #124]	; 0x7c
   1248c:	cmp	r0, #0
   12490:	beq	124dc <find_channel_membership+0x74>
   12494:	ldr	r2, [r0]
   12498:	ldr	r3, [r2, #40]	; 0x28
   1249c:	cmp	r3, r1
   124a0:	beq	124e0 <find_channel_membership+0x78>
   124a4:	ldr	r0, [r0, #8]
   124a8:	cmp	r0, #0
   124ac:	bne	12494 <find_channel_membership+0x2c>
   124b0:	b	124dc <find_channel_membership+0x74>
   124b4:	ldr	r1, [r2]
   124b8:	cmp	r1, #0
   124bc:	beq	124dc <find_channel_membership+0x74>
   124c0:	ldr	r2, [r1]
   124c4:	ldr	r3, [r2, #36]	; 0x24
   124c8:	cmp	r3, r0
   124cc:	beq	124e0 <find_channel_membership+0x78>
   124d0:	ldr	r1, [r1, #8]
   124d4:	cmp	r1, #0
   124d8:	bne	124c0 <find_channel_membership+0x58>
   124dc:	mov	r2, #0
   124e0:	mov	r0, r2
   124e4:	bx	lr

000124e8 <find_channel_status>:
   124e8:	mov	r2, r0
   124ec:	ldr	r0, [pc, #100]	; 12558 <find_channel_status+0x70>
   124f0:	add	r0, pc, r0
   124f4:	cmp	r2, #0
   124f8:	mov	r3, r0
   124fc:	beq	12540 <find_channel_status+0x58>
   12500:	ldrb	r3, [r2, #44]	; 0x2c
   12504:	tst	r3, #2
   12508:	bne	12518 <find_channel_status+0x30>
   1250c:	ldr	r3, [pc, #72]	; 1255c <find_channel_status+0x74>
   12510:	add	r3, pc, r3
   12514:	b	12530 <find_channel_status+0x48>
   12518:	cmp	r1, #0
   1251c:	beq	1254c <find_channel_status+0x64>
   12520:	ldr	r3, [pc, #60]	; 12564 <find_channel_status+0x7c>
   12524:	add	r3, pc, r3
   12528:	mov	r1, #64	; 0x40
   1252c:	strb	r1, [r3], #1
   12530:	ldrb	r1, [r2, #44]	; 0x2c
   12534:	tst	r1, #1
   12538:	movne	r1, #43	; 0x2b
   1253c:	strbne	r1, [r3], #1
   12540:	mov	r1, #0
   12544:	strb	r1, [r3]
   12548:	bx	lr
   1254c:	ldr	r0, [pc, #12]	; 12560 <find_channel_status+0x78>
   12550:	add	r0, pc, r0
   12554:	bx	lr
   12558:	.word	0x0004f428
   1255c:	.word	0x0004f408
   12560:	.word	0x00030c07
   12564:	.word	0x0004f3f4

00012568 <add_user_to_channel>:
   12568:	push	{r4, r5, r6, r7, fp, lr}
   1256c:	add	fp, sp, #16
   12570:	mov	r4, r0
   12574:	ldr	r0, [r1, #24]
   12578:	cmp	r0, #0
   1257c:	beq	125e8 <add_user_to_channel+0x80>
   12580:	mov	r7, r2
   12584:	mov	r5, r1
   12588:	ldr	r0, [pc, #92]	; 125ec <add_user_to_channel+0x84>
   1258c:	ldr	r0, [pc, r0]
   12590:	bl	de20 <rb_bh_alloc@plt>
   12594:	mov	r6, r0
   12598:	add	r1, r0, #36	; 0x24
   1259c:	stm	r1, {r4, r5, r7}
   125a0:	ldr	r2, [r5, #24]
   125a4:	add	r1, r0, #24
   125a8:	bl	125f0 <rb_dlinkAdd>
   125ac:	add	r2, r4, #124	; 0x7c
   125b0:	mov	r0, r6
   125b4:	mov	r1, r6
   125b8:	bl	125f0 <rb_dlinkAdd>
   125bc:	ldrb	r0, [r5, #65]	; 0x41
   125c0:	tst	r0, #32
   125c4:	popeq	{r4, r5, r6, r7, fp, pc}
   125c8:	ldrh	r0, [r5, #80]	; 0x50
   125cc:	cmp	r0, #64	; 0x40
   125d0:	bne	125e8 <add_user_to_channel+0x80>
   125d4:	add	r1, r6, #12
   125d8:	add	r2, r4, #136	; 0x88
   125dc:	mov	r0, r6
   125e0:	pop	{r4, r5, r6, r7, fp, lr}
   125e4:	b	125f0 <rb_dlinkAdd>
   125e8:	pop	{r4, r5, r6, r7, fp, pc}
   125ec:	.word	0x0004f380

000125f0 <rb_dlinkAdd>:
   125f0:	push	{fp, lr}
   125f4:	mov	fp, sp
   125f8:	cmp	r0, #0
   125fc:	beq	1265c <rb_dlinkAdd+0x6c>
   12600:	cmp	r1, #0
   12604:	beq	1267c <rb_dlinkAdd+0x8c>
   12608:	cmp	r2, #0
   1260c:	beq	1269c <rb_dlinkAdd+0xac>
   12610:	mov	r3, #0
   12614:	stm	r1, {r0, r3}
   12618:	ldr	r0, [r2]
   1261c:	str	r0, [r1, #8]
   12620:	ldr	r0, [r2]
   12624:	cmp	r0, #0
   12628:	beq	12638 <rb_dlinkAdd+0x48>
   1262c:	add	r0, r0, #4
   12630:	str	r1, [r0]
   12634:	b	12648 <rb_dlinkAdd+0x58>
   12638:	mov	r0, r2
   1263c:	ldr	r3, [r0, #4]!
   12640:	cmp	r3, #0
   12644:	streq	r1, [r0]
   12648:	str	r1, [r2]
   1264c:	ldr	r0, [r2, #8]
   12650:	add	r0, r0, #1
   12654:	str	r0, [r2, #8]
   12658:	pop	{fp, pc}
   1265c:	ldr	r0, [pc, #88]	; 126bc <rb_dlinkAdd+0xcc>
   12660:	add	r0, pc, r0
   12664:	ldr	r1, [pc, #84]	; 126c0 <rb_dlinkAdd+0xd0>
   12668:	add	r1, pc, r1
   1266c:	ldr	r3, [pc, #80]	; 126c4 <rb_dlinkAdd+0xd4>
   12670:	add	r3, pc, r3
   12674:	mov	r2, #143	; 0x8f
   12678:	bl	e7e0 <__assert_fail@plt>
   1267c:	ldr	r0, [pc, #68]	; 126c8 <rb_dlinkAdd+0xd8>
   12680:	add	r0, pc, r0
   12684:	ldr	r1, [pc, #64]	; 126cc <rb_dlinkAdd+0xdc>
   12688:	add	r1, pc, r1
   1268c:	ldr	r3, [pc, #60]	; 126d0 <rb_dlinkAdd+0xe0>
   12690:	add	r3, pc, r3
   12694:	mov	r2, #144	; 0x90
   12698:	bl	e7e0 <__assert_fail@plt>
   1269c:	ldr	r0, [pc, #48]	; 126d4 <rb_dlinkAdd+0xe4>
   126a0:	add	r0, pc, r0
   126a4:	ldr	r1, [pc, #44]	; 126d8 <rb_dlinkAdd+0xe8>
   126a8:	add	r1, pc, r1
   126ac:	ldr	r3, [pc, #40]	; 126dc <rb_dlinkAdd+0xec>
   126b0:	add	r3, pc, r3
   126b4:	mov	r2, #145	; 0x91
   126b8:	bl	e7e0 <__assert_fail@plt>
   126bc:	.word	0x0002e311
   126c0:	.word	0x0002e2ae
   126c4:	.word	0x0002e30e
   126c8:	.word	0x0002e28c
   126cc:	.word	0x0002e28e
   126d0:	.word	0x0002e2ee
   126d4:	.word	0x00033af5
   126d8:	.word	0x0002e26e
   126dc:	.word	0x0002e2ce

000126e0 <remove_user_from_channel>:
   126e0:	cmp	r0, #0
   126e4:	bxeq	lr
   126e8:	push	{r4, r5, r6, sl, fp, lr}
   126ec:	add	fp, sp, #16
   126f0:	mov	r4, r0
   126f4:	ldr	r5, [r0, #36]	; 0x24
   126f8:	ldr	r6, [r0, #40]	; 0x28
   126fc:	ldr	r1, [r6, #24]
   12700:	add	r0, r0, #24
   12704:	bl	1276c <rb_dlinkDelete>
   12708:	add	r1, r5, #124	; 0x7c
   1270c:	mov	r0, r4
   12710:	bl	1276c <rb_dlinkDelete>
   12714:	ldr	r0, [r6, #32]
   12718:	ldr	r1, [pc, #68]	; 12764 <remove_user_from_channel+0x84>
   1271c:	ldr	r1, [pc, r1]
   12720:	cmp	r0, r1
   12724:	bne	12734 <remove_user_from_channel+0x54>
   12728:	add	r0, r4, #12
   1272c:	add	r1, r5, #136	; 0x88
   12730:	bl	1276c <rb_dlinkDelete>
   12734:	ldrb	r0, [r5, #13]
   12738:	tst	r0, #2
   1273c:	bne	12750 <remove_user_from_channel+0x70>
   12740:	ldr	r0, [r5, #132]	; 0x84
   12744:	cmp	r0, #0
   12748:	moveq	r0, r5
   1274c:	bleq	e0e4 <destroy_channel@plt>
   12750:	ldr	r0, [pc, #16]	; 12768 <remove_user_from_channel+0x88>
   12754:	ldr	r0, [pc, r0]
   12758:	mov	r1, r4
   1275c:	pop	{r4, r5, r6, sl, fp, lr}
   12760:	b	e708 <rb_bh_free@plt>
   12764:	.word	0x0004843c
   12768:	.word	0x0004f1b8

0001276c <rb_dlinkDelete>:
   1276c:	push	{fp, lr}
   12770:	mov	fp, sp
   12774:	cmp	r0, #0
   12778:	beq	127cc <rb_dlinkDelete+0x60>
   1277c:	cmp	r1, #0
   12780:	beq	127ec <rb_dlinkDelete+0x80>
   12784:	ldr	ip, [r0, #4]
   12788:	ldr	r3, [r0, #8]
   1278c:	add	r2, r3, #4
   12790:	cmp	r3, #0
   12794:	addeq	r2, r1, #4
   12798:	str	ip, [r2]
   1279c:	ldmib	r0, {r2, ip}
   127a0:	cmp	r2, #0
   127a4:	mov	r3, r1
   127a8:	addne	r3, r2, #8
   127ac:	str	ip, [r3]
   127b0:	mov	r2, #0
   127b4:	str	r2, [r0, #4]
   127b8:	str	r2, [r0, #8]
   127bc:	ldr	r0, [r1, #8]
   127c0:	sub	r0, r0, #1
   127c4:	str	r0, [r1, #8]
   127c8:	pop	{fp, pc}
   127cc:	ldr	r0, [pc, #56]	; 1280c <rb_dlinkDelete+0xa0>
   127d0:	add	r0, pc, r0
   127d4:	ldr	r1, [pc, #52]	; 12810 <rb_dlinkDelete+0xa4>
   127d8:	add	r1, pc, r1
   127dc:	ldr	r3, [pc, #48]	; 12814 <rb_dlinkDelete+0xa8>
   127e0:	add	r3, pc, r3
   127e4:	mov	r2, #235	; 0xeb
   127e8:	bl	e7e0 <__assert_fail@plt>
   127ec:	ldr	r0, [pc, #36]	; 12818 <rb_dlinkDelete+0xac>
   127f0:	add	r0, pc, r0
   127f4:	ldr	r1, [pc, #32]	; 1281c <rb_dlinkDelete+0xb0>
   127f8:	add	r1, pc, r1
   127fc:	ldr	r3, [pc, #28]	; 12820 <rb_dlinkDelete+0xb4>
   12800:	add	r3, pc, r3
   12804:	mov	r2, #236	; 0xec
   12808:	bl	e7e0 <__assert_fail@plt>
   1280c:	.word	0x0002e13c
   12810:	.word	0x0002e13e
   12814:	.word	0x0002e1d9
   12818:	.word	0x000339a5
   1281c:	.word	0x0002e11e
   12820:	.word	0x0002e1b9

00012824 <destroy_channel>:
   12824:	push	{r4, r5, fp, lr}
   12828:	add	fp, sp, #8
   1282c:	mov	r4, r0
   12830:	ldr	r5, [r0, #148]	; 0x94
   12834:	cmp	r5, #0
   12838:	beq	12854 <destroy_channel+0x30>
   1283c:	ldr	r1, [r5]
   12840:	ldr	r5, [r5, #8]
   12844:	mov	r0, r4
   12848:	bl	d46c <del_invite@plt>
   1284c:	cmp	r5, #0
   12850:	bne	1283c <destroy_channel+0x18>
   12854:	add	r0, r4, #160	; 0xa0
   12858:	bl	e648 <free_channel_list@plt>
   1285c:	add	r0, r4, #172	; 0xac
   12860:	bl	e648 <free_channel_list@plt>
   12864:	add	r0, r4, #184	; 0xb8
   12868:	bl	e648 <free_channel_list@plt>
   1286c:	add	r0, r4, #196	; 0xc4
   12870:	bl	e648 <free_channel_list@plt>
   12874:	mov	r0, r4
   12878:	bl	12a6c <free_topic>
   1287c:	ldr	r1, [pc, #32]	; 128a4 <destroy_channel+0x80>
   12880:	ldr	r1, [pc, r1]
   12884:	mov	r0, r4
   12888:	bl	1276c <rb_dlinkDelete>
   1288c:	ldr	r0, [r4, #236]	; 0xec
   12890:	mov	r1, r4
   12894:	bl	e288 <del_from_channel_hash@plt>
   12898:	mov	r0, r4
   1289c:	pop	{r4, r5, fp, lr}
   128a0:	b	12264 <free_channel>
   128a4:	.word	0x000480ec

000128a8 <remove_user_from_channels>:
   128a8:	cmp	r0, #0
   128ac:	bxeq	lr
   128b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128b4:	add	fp, sp, #24
   128b8:	mov	r4, r0
   128bc:	ldr	r0, [r0, #24]
   128c0:	ldr	r7, [r0]
   128c4:	cmp	r7, #0
   128c8:	beq	12940 <remove_user_from_channels+0x98>
   128cc:	ldr	r8, [pc, #136]	; 1295c <remove_user_from_channels+0xb4>
   128d0:	ldr	r8, [pc, r8]
   128d4:	b	128f0 <remove_user_from_channels+0x48>
   128d8:	ldr	r0, [pc, #128]	; 12960 <remove_user_from_channels+0xb8>
   128dc:	ldr	r0, [pc, r0]
   128e0:	mov	r1, r5
   128e4:	bl	e708 <rb_bh_free@plt>
   128e8:	cmp	r7, #0
   128ec:	beq	12940 <remove_user_from_channels+0x98>
   128f0:	ldr	r5, [r7]
   128f4:	ldr	r7, [r7, #8]
   128f8:	ldr	r6, [r5, #36]	; 0x24
   128fc:	add	r1, r6, #124	; 0x7c
   12900:	mov	r0, r5
   12904:	bl	1276c <rb_dlinkDelete>
   12908:	ldr	r0, [r4, #32]
   1290c:	cmp	r0, r8
   12910:	bne	12920 <remove_user_from_channels+0x78>
   12914:	add	r0, r5, #12
   12918:	add	r1, r6, #136	; 0x88
   1291c:	bl	1276c <rb_dlinkDelete>
   12920:	ldrb	r0, [r6, #13]
   12924:	tst	r0, #2
   12928:	bne	128d8 <remove_user_from_channels+0x30>
   1292c:	ldr	r0, [r6, #132]	; 0x84
   12930:	cmp	r0, #0
   12934:	moveq	r0, r6
   12938:	bleq	e0e4 <destroy_channel@plt>
   1293c:	b	128d8 <remove_user_from_channels+0x30>
   12940:	ldr	r0, [r4, #24]
   12944:	mov	r1, #0
   12948:	str	r1, [r0]
   1294c:	str	r1, [r0, #4]
   12950:	str	r1, [r0, #8]
   12954:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12958:	bx	lr
   1295c:	.word	0x00048288
   12960:	.word	0x0004f030

00012964 <invalidate_bancache_user>:
   12964:	cmp	r0, #0
   12968:	beq	129a0 <invalidate_bancache_user+0x3c>
   1296c:	ldr	r0, [r0, #24]
   12970:	ldr	r0, [r0]
   12974:	cmp	r0, #0
   12978:	bxeq	lr
   1297c:	mov	r1, #0
   12980:	ldr	r2, [r0]
   12984:	str	r1, [r2, #48]	; 0x30
   12988:	ldr	r3, [r2, #44]	; 0x2c
   1298c:	bic	r3, r3, #8
   12990:	str	r3, [r2, #44]	; 0x2c
   12994:	ldr	r0, [r0, #8]
   12998:	cmp	r0, #0
   1299c:	bne	12980 <invalidate_bancache_user+0x1c>
   129a0:	bx	lr

000129a4 <check_channel_name>:
   129a4:	mov	r1, r0
   129a8:	mov	r0, #0
   129ac:	cmp	r1, #0
   129b0:	bxeq	lr
   129b4:	ldrb	r2, [r1]
   129b8:	cmp	r2, #0
   129bc:	moveq	r0, #1
   129c0:	bxeq	lr
   129c4:	add	r1, r1, #1
   129c8:	ldr	r3, [pc, #40]	; 129f8 <check_channel_name+0x54>
   129cc:	ldr	r3, [pc, r3]
   129d0:	uxtb	r2, r2
   129d4:	ldrb	r2, [r3, r2, lsl #2]
   129d8:	tst	r2, #128	; 0x80
   129dc:	beq	129f4 <check_channel_name+0x50>
   129e0:	ldrb	r2, [r1], #1
   129e4:	cmp	r2, #0
   129e8:	moveq	r0, #1
   129ec:	bxeq	lr
   129f0:	b	129d0 <check_channel_name+0x2c>
   129f4:	bx	lr
   129f8:	.word	0x0004802c

000129fc <free_channel_list>:
   129fc:	push	{r4, r5, fp, lr}
   12a00:	add	fp, sp, #8
   12a04:	mov	r4, r0
   12a08:	ldr	r5, [r0]
   12a0c:	cmp	r5, #0
   12a10:	beq	12a28 <free_channel_list+0x2c>
   12a14:	ldr	r0, [r5]
   12a18:	ldr	r5, [r5, #8]
   12a1c:	bl	e438 <free_ban@plt>
   12a20:	cmp	r5, #0
   12a24:	bne	12a14 <free_channel_list+0x18>
   12a28:	mov	r0, #0
   12a2c:	str	r0, [r4]
   12a30:	str	r0, [r4, #4]
   12a34:	str	r0, [r4, #8]
   12a38:	pop	{r4, r5, fp, pc}

00012a3c <del_invite>:
   12a3c:	push	{r4, r5, fp, lr}
   12a40:	add	fp, sp, #8
   12a44:	mov	r4, r1
   12a48:	mov	r5, r0
   12a4c:	add	r1, r0, #148	; 0x94
   12a50:	mov	r0, r4
   12a54:	bl	12e28 <rb_dlinkFindDestroy>
   12a58:	ldr	r0, [r4, #24]
   12a5c:	add	r1, r0, #12
   12a60:	mov	r0, r5
   12a64:	pop	{r4, r5, fp, lr}
   12a68:	b	12e28 <rb_dlinkFindDestroy>

00012a6c <free_topic>:
   12a6c:	push	{r4, sl, fp, lr}
   12a70:	add	fp, sp, #8
   12a74:	cmp	r0, #0
   12a78:	beq	12aa4 <free_topic+0x38>
   12a7c:	mov	r4, r0
   12a80:	ldr	r1, [r0, #108]	; 0x6c
   12a84:	cmp	r1, #0
   12a88:	popeq	{r4, sl, fp, pc}
   12a8c:	ldr	r0, [pc, #20]	; 12aa8 <free_topic+0x3c>
   12a90:	ldr	r0, [pc, r0]
   12a94:	bl	e708 <rb_bh_free@plt>
   12a98:	mov	r0, #0
   12a9c:	str	r0, [r4, #108]	; 0x6c
   12aa0:	str	r0, [r4, #112]	; 0x70
   12aa4:	pop	{r4, sl, fp, pc}
   12aa8:	.word	0x0004ee78

00012aac <channel_member_names>:
   12aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab0:	add	fp, sp, #28
   12ab4:	sub	sp, sp, #564	; 0x234
   12ab8:	str	r2, [sp, #8]
   12abc:	mov	sl, r1
   12ac0:	ldr	r1, [pc, #748]	; 12db4 <channel_member_names+0x308>
   12ac4:	ldr	r1, [pc, r1]
   12ac8:	ldr	r9, [r1]
   12acc:	ldr	r1, [sl, #432]	; 0x1b0
   12ad0:	ldr	r4, [r1, #296]	; 0x128
   12ad4:	str	r0, [sp, #12]
   12ad8:	cmp	r0, #0
   12adc:	beq	12b10 <channel_member_names+0x64>
   12ae0:	ldr	r0, [sp, #12]
   12ae4:	ldrb	r0, [r0, #12]
   12ae8:	tst	r0, #3
   12aec:	beq	12b10 <channel_member_names+0x64>
   12af0:	ldr	r0, [sl, #24]
   12af4:	cmp	r0, #0
   12af8:	beq	12d74 <channel_member_names+0x2c8>
   12afc:	ldr	r0, [sp, #12]
   12b00:	mov	r1, sl
   12b04:	bl	d94c <find_channel_membership@plt>
   12b08:	cmp	r0, #0
   12b0c:	beq	12d74 <channel_member_names+0x2c8>
   12b10:	ldr	r0, [sl, #24]
   12b14:	cmp	r0, #0
   12b18:	beq	12b3c <channel_member_names+0x90>
   12b1c:	ldr	r6, [sp, #12]
   12b20:	mov	r0, r6
   12b24:	mov	r1, sl
   12b28:	bl	d94c <find_channel_membership@plt>
   12b2c:	mov	r7, r0
   12b30:	cmp	r0, #0
   12b34:	movwne	r7, #1
   12b38:	b	12b44 <channel_member_names+0x98>
   12b3c:	mov	r7, #0
   12b40:	ldr	r6, [sp, #12]
   12b44:	mov	r0, r6
   12b48:	bl	12de0 <channel_pub_or_secret>
   12b4c:	ldr	r1, [r6, #236]	; 0xec
   12b50:	stm	sp, {r0, r1}
   12b54:	add	r3, sl, #88	; 0x58
   12b58:	ldr	r0, [pc, #600]	; 12db8 <channel_member_names+0x30c>
   12b5c:	ldr	r0, [pc, r0]
   12b60:	add	r2, r0, #88	; 0x58
   12b64:	add	r5, sp, #48	; 0x30
   12b68:	ldr	r1, [pc, #588]	; 12dbc <channel_member_names+0x310>
   12b6c:	add	r1, pc, r1
   12b70:	mov	r0, r5
   12b74:	bl	e3a8 <sprintf@plt>
   12b78:	ldr	r6, [r6, #124]	; 0x7c
   12b7c:	cmp	r6, #0
   12b80:	beq	12d74 <channel_member_names+0x2c8>
   12b84:	mov	r8, r0
   12b88:	and	r0, r9, r4
   12b8c:	sub	r0, r0, r9
   12b90:	clz	r0, r0
   12b94:	lsr	r0, r0, #5
   12b98:	str	r0, [sp, #32]
   12b9c:	add	r4, r5, r8
   12ba0:	mvn	r5, r7
   12ba4:	str	r4, [sp, #16]
   12ba8:	str	r8, [sp, #44]	; 0x2c
   12bac:	str	r8, [sp, #28]
   12bb0:	str	r5, [sp, #24]
   12bb4:	str	sl, [sp, #20]
   12bb8:	b	12c34 <channel_member_names+0x188>
   12bbc:	mov	r0, #0
   12bc0:	ldr	r1, [sp, #36]	; 0x24
   12bc4:	strb	r0, [r1, #-1]
   12bc8:	mov	sl, r8
   12bcc:	mov	r0, r8
   12bd0:	ldr	r1, [pc, #500]	; 12dcc <channel_member_names+0x320>
   12bd4:	add	r1, pc, r1
   12bd8:	add	r2, sp, #48	; 0x30
   12bdc:	bl	d1e4 <sendto_one@plt>
   12be0:	ldr	r8, [sp, #28]
   12be4:	str	r8, [sp, #44]	; 0x2c
   12be8:	ldr	r4, [sp, #16]
   12bec:	ldr	r5, [sp, #24]
   12bf0:	ldr	r7, [sp, #40]	; 0x28
   12bf4:	mov	r0, r9
   12bf8:	ldr	r1, [sp, #32]
   12bfc:	bl	d01c <find_channel_status@plt>
   12c00:	mov	r2, r0
   12c04:	mov	r0, r4
   12c08:	ldr	r1, [pc, #448]	; 12dd0 <channel_member_names+0x324>
   12c0c:	add	r1, pc, r1
   12c10:	mov	r3, r7
   12c14:	bl	e3a8 <sprintf@plt>
   12c18:	add	r4, r4, r0
   12c1c:	ldr	r1, [sp, #44]	; 0x2c
   12c20:	add	r1, r1, r0
   12c24:	str	r1, [sp, #44]	; 0x2c
   12c28:	ldr	r6, [r6, #8]
   12c2c:	cmp	r6, #0
   12c30:	beq	12d4c <channel_member_names+0x2a0>
   12c34:	ldr	r9, [r6]
   12c38:	ldr	r7, [r9, #40]	; 0x28
   12c3c:	ldrb	r0, [r7, #56]	; 0x38
   12c40:	and	r0, r0, #8
   12c44:	tst	r5, r0, lsr #3
   12c48:	bne	12c28 <channel_member_names+0x17c>
   12c4c:	str	r4, [sp, #36]	; 0x24
   12c50:	ldr	r0, [pc, #360]	; 12dc0 <channel_member_names+0x314>
   12c54:	ldr	r0, [pc, r0]
   12c58:	ldr	r4, [r0]
   12c5c:	mov	r8, sl
   12c60:	ldr	r0, [sl, #432]	; 0x1b0
   12c64:	ldr	sl, [r0, #296]	; 0x128
   12c68:	add	r0, r7, #88	; 0x58
   12c6c:	str	r0, [sp, #40]	; 0x28
   12c70:	bl	dc94 <strlen@plt>
   12c74:	ldr	r1, [sp, #44]	; 0x2c
   12c78:	add	r5, r0, r1
   12c7c:	and	r0, r4, sl
   12c80:	cmp	r0, r4
   12c84:	bne	12cec <channel_member_names+0x240>
   12c88:	add	sl, r7, #152	; 0x98
   12c8c:	mov	r0, sl
   12c90:	bl	dc94 <strlen@plt>
   12c94:	add	r5, r5, r0
   12c98:	add	r7, r7, #163	; 0xa3
   12c9c:	mov	r0, r7
   12ca0:	bl	dc94 <strlen@plt>
   12ca4:	add	r0, r5, r0
   12ca8:	add	r0, r0, #5
   12cac:	movw	r1, #507	; 0x1fb
   12cb0:	cmp	r0, r1
   12cb4:	bcc	12d0c <channel_member_names+0x260>
   12cb8:	mov	r0, #0
   12cbc:	ldr	r1, [sp, #36]	; 0x24
   12cc0:	strb	r0, [r1, #-1]
   12cc4:	mov	r0, r8
   12cc8:	ldr	r1, [pc, #244]	; 12dc4 <channel_member_names+0x318>
   12ccc:	add	r1, pc, r1
   12cd0:	add	r2, sp, #48	; 0x30
   12cd4:	bl	d1e4 <sendto_one@plt>
   12cd8:	ldr	r8, [sp, #28]
   12cdc:	str	r8, [sp, #44]	; 0x2c
   12ce0:	ldr	r4, [sp, #16]
   12ce4:	ldr	r5, [sp, #24]
   12ce8:	b	12d18 <channel_member_names+0x26c>
   12cec:	add	r0, r5, #3
   12cf0:	cmp	r0, #508	; 0x1fc
   12cf4:	bhi	12bbc <channel_member_names+0x110>
   12cf8:	mov	sl, r8
   12cfc:	ldr	r8, [sp, #28]
   12d00:	ldr	r5, [sp, #24]
   12d04:	ldr	r4, [sp, #36]	; 0x24
   12d08:	b	12bf0 <channel_member_names+0x144>
   12d0c:	ldr	r8, [sp, #28]
   12d10:	ldr	r5, [sp, #24]
   12d14:	ldr	r4, [sp, #36]	; 0x24
   12d18:	mov	r0, r9
   12d1c:	ldr	r1, [sp, #32]
   12d20:	bl	d01c <find_channel_status@plt>
   12d24:	mov	r2, r0
   12d28:	str	sl, [sp]
   12d2c:	str	r7, [sp, #4]
   12d30:	mov	r0, r4
   12d34:	ldr	r1, [pc, #140]	; 12dc8 <channel_member_names+0x31c>
   12d38:	add	r1, pc, r1
   12d3c:	ldr	r3, [sp, #40]	; 0x28
   12d40:	bl	e3a8 <sprintf@plt>
   12d44:	ldr	sl, [sp, #20]
   12d48:	b	12c18 <channel_member_names+0x16c>
   12d4c:	ldr	r0, [sp, #44]	; 0x2c
   12d50:	cmp	r0, r8
   12d54:	beq	12d74 <channel_member_names+0x2c8>
   12d58:	mov	r0, #0
   12d5c:	strb	r0, [r4, #-1]
   12d60:	ldr	r1, [pc, #108]	; 12dd4 <channel_member_names+0x328>
   12d64:	add	r1, pc, r1
   12d68:	add	r2, sp, #48	; 0x30
   12d6c:	mov	r0, sl
   12d70:	bl	d1e4 <sendto_one@plt>
   12d74:	ldr	r0, [sp, #8]
   12d78:	cmp	r0, #0
   12d7c:	beq	12dac <channel_member_names+0x300>
   12d80:	ldr	r0, [sp, #12]
   12d84:	ldr	r0, [r0, #236]	; 0xec
   12d88:	str	r0, [sp]
   12d8c:	add	r3, sl, #88	; 0x58
   12d90:	ldr	r0, [pc, #64]	; 12dd8 <channel_member_names+0x32c>
   12d94:	ldr	r0, [pc, r0]
   12d98:	add	r2, r0, #88	; 0x58
   12d9c:	ldr	r1, [pc, #56]	; 12ddc <channel_member_names+0x330>
   12da0:	add	r1, pc, r1
   12da4:	mov	r0, sl
   12da8:	bl	d1e4 <sendto_one@plt>
   12dac:	sub	sp, fp, #28
   12db0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12db4:	.word	0x000480a0
   12db8:	.word	0x00047ffc
   12dbc:	.word	0x0002e199
   12dc0:	.word	0x00047cec
   12dc4:	.word	0x00034ce9
   12dc8:	.word	0x0002dfe0
   12dcc:	.word	0x00034de1
   12dd0:	.word	0x0002e118
   12dd4:	.word	0x00034c51
   12dd8:	.word	0x00047dc4
   12ddc:	.word	0x0002df8a

00012de0 <channel_pub_or_secret>:
   12de0:	mov	r1, r0
   12de4:	ldr	r0, [pc, #48]	; 12e1c <channel_pub_or_secret+0x3c>
   12de8:	add	r0, pc, r0
   12dec:	cmp	r1, #0
   12df0:	beq	12e18 <channel_pub_or_secret+0x38>
   12df4:	ldr	r1, [r1, #12]
   12df8:	tst	r1, #3
   12dfc:	bxeq	lr
   12e00:	ldr	r2, [pc, #24]	; 12e20 <channel_pub_or_secret+0x40>
   12e04:	add	r2, pc, r2
   12e08:	ldr	r0, [pc, #20]	; 12e24 <channel_pub_or_secret+0x44>
   12e0c:	add	r0, pc, r0
   12e10:	tst	r1, #2
   12e14:	moveq	r0, r2
   12e18:	bx	lr
   12e1c:	.word	0x0002e13b
   12e20:	.word	0x0002e899
   12e24:	.word	0x0003034b

00012e28 <rb_dlinkFindDestroy>:
   12e28:	push	{fp, lr}
   12e2c:	mov	fp, sp
   12e30:	cmp	r1, #0
   12e34:	beq	12e54 <rb_dlinkFindDestroy+0x2c>
   12e38:	cmp	r0, #0
   12e3c:	beq	12e74 <rb_dlinkFindDestroy+0x4c>
   12e40:	bl	14190 <rb_dlinkFindDelete>
   12e44:	cmp	r0, #0
   12e48:	popeq	{fp, pc}
   12e4c:	pop	{fp, lr}
   12e50:	b	d7b4 <rb_free_rb_dlink_node@plt>
   12e54:	ldr	r0, [pc, #56]	; 12e94 <rb_dlinkFindDestroy+0x6c>
   12e58:	add	r0, pc, r0
   12e5c:	ldr	r1, [pc, #52]	; 12e98 <rb_dlinkFindDestroy+0x70>
   12e60:	add	r1, pc, r1
   12e64:	ldr	r3, [pc, #48]	; 12e9c <rb_dlinkFindDestroy+0x74>
   12e68:	add	r3, pc, r3
   12e6c:	movw	r2, #287	; 0x11f
   12e70:	bl	e7e0 <__assert_fail@plt>
   12e74:	ldr	r0, [pc, #36]	; 12ea0 <rb_dlinkFindDestroy+0x78>
   12e78:	add	r0, pc, r0
   12e7c:	ldr	r1, [pc, #32]	; 12ea4 <rb_dlinkFindDestroy+0x7c>
   12e80:	add	r1, pc, r1
   12e84:	ldr	r3, [pc, #28]	; 12ea8 <rb_dlinkFindDestroy+0x80>
   12e88:	add	r3, pc, r3
   12e8c:	mov	r2, #288	; 0x120
   12e90:	bl	e7e0 <__assert_fail@plt>
   12e94:	.word	0x0003333d
   12e98:	.word	0x0002dab6
   12e9c:	.word	0x0002e0bd
   12ea0:	.word	0x0002daf9
   12ea4:	.word	0x0002da96
   12ea8:	.word	0x0002e09d

00012eac <is_banned>:
   12eac:	push	{fp, lr}
   12eb0:	mov	fp, sp
   12eb4:	sub	sp, sp, #8
   12eb8:	mov	ip, r2
   12ebc:	mov	r2, r1
   12ec0:	str	r3, [sp]
   12ec4:	ldr	r1, [fp, #8]
   12ec8:	str	r1, [sp, #4]
   12ecc:	add	r1, r0, #160	; 0xa0
   12ed0:	mov	r3, ip
   12ed4:	bl	12ee0 <is_banned_list>
   12ed8:	mov	sp, fp
   12edc:	pop	{fp, pc}

00012ee0 <is_banned_list>:
   12ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ee4:	add	fp, sp, #28
   12ee8:	sub	sp, sp, #556	; 0x22c
   12eec:	mov	r9, r0
   12ef0:	ldrb	r0, [r2, #65]	; 0x41
   12ef4:	mov	sl, #0
   12ef8:	tst	r0, #32
   12efc:	beq	13068 <is_banned_list+0x188>
   12f00:	mov	r7, r2
   12f04:	ldrh	r0, [r2, #80]	; 0x50
   12f08:	cmp	r0, #64	; 0x40
   12f0c:	bne	13068 <is_banned_list+0x188>
   12f10:	mov	r8, r3
   12f14:	mov	r5, r1
   12f18:	ldr	r4, [fp, #8]
   12f1c:	cmp	r4, #0
   12f20:	bne	12f34 <is_banned_list+0x54>
   12f24:	add	r4, sp, #4
   12f28:	mov	r0, r7
   12f2c:	mov	r1, r4
   12f30:	bl	e018 <matchset_for_client@plt>
   12f34:	ldr	r6, [r5]
   12f38:	cmp	r6, #0
   12f3c:	beq	12f80 <is_banned_list+0xa0>
   12f40:	ldr	r5, [r6]
   12f44:	ldr	r1, [r5]
   12f48:	mov	r0, r4
   12f4c:	bl	d310 <matches_mask@plt>
   12f50:	cmp	r0, #0
   12f54:	bne	12fb4 <is_banned_list+0xd4>
   12f58:	ldr	r0, [r5]
   12f5c:	mov	r1, r7
   12f60:	mov	r2, r9
   12f64:	mov	r3, #268435456	; 0x10000000
   12f68:	bl	dd78 <match_extban@plt>
   12f6c:	cmp	r0, #0
   12f70:	bne	12fb4 <is_banned_list+0xd4>
   12f74:	ldr	r6, [r6, #8]
   12f78:	cmp	r6, #0
   12f7c:	bne	12f40 <is_banned_list+0x60>
   12f80:	mov	sl, #0
   12f84:	mov	r5, #0
   12f88:	cmp	r8, #0
   12f8c:	beq	13034 <is_banned_list+0x154>
   12f90:	ldr	r0, [r9, #228]	; 0xe4
   12f94:	str	r0, [r8, #48]	; 0x30
   12f98:	ldr	r0, [r8, #44]	; 0x2c
   12f9c:	cmp	sl, #0
   12fa0:	beq	1305c <is_banned_list+0x17c>
   12fa4:	orr	r0, r0, #8
   12fa8:	str	r0, [r8, #44]	; 0x2c
   12fac:	mov	sl, #268435456	; 0x10000000
   12fb0:	b	13068 <is_banned_list+0x188>
   12fb4:	cmp	r5, #0
   12fb8:	mov	sl, r5
   12fbc:	movwne	sl, #1
   12fc0:	beq	12f88 <is_banned_list+0xa8>
   12fc4:	ldr	r0, [pc, #208]	; 1309c <is_banned_list+0x1bc>
   12fc8:	ldr	r0, [pc, r0]
   12fcc:	ldr	r0, [r0]
   12fd0:	cmp	r0, #0
   12fd4:	beq	12f88 <is_banned_list+0xa8>
   12fd8:	ldr	r6, [r9, #172]	; 0xac
   12fdc:	cmp	r6, #0
   12fe0:	beq	12f88 <is_banned_list+0xa8>
   12fe4:	str	r8, [sp]
   12fe8:	ldr	r8, [r6]
   12fec:	ldr	r1, [r8]
   12ff0:	mov	r0, r4
   12ff4:	bl	d310 <matches_mask@plt>
   12ff8:	cmp	r0, #0
   12ffc:	bne	13074 <is_banned_list+0x194>
   13000:	ldr	r0, [r8]
   13004:	mov	r1, r7
   13008:	mov	r2, r9
   1300c:	mov	r3, #268435456	; 0x10000000
   13010:	bl	dd78 <match_extban@plt>
   13014:	cmp	r0, #0
   13018:	bne	13074 <is_banned_list+0x194>
   1301c:	ldr	r6, [r6, #8]
   13020:	cmp	r6, #0
   13024:	bne	12fe8 <is_banned_list+0x108>
   13028:	ldr	r8, [sp]
   1302c:	cmp	r8, #0
   13030:	bne	12f90 <is_banned_list+0xb0>
   13034:	cmp	sl, #0
   13038:	beq	13050 <is_banned_list+0x170>
   1303c:	ldr	r0, [fp, #12]
   13040:	cmp	r0, #0
   13044:	ldrne	r1, [r5, #12]
   13048:	cmpne	r1, #0
   1304c:	strne	r1, [r0]
   13050:	cmp	sl, #0
   13054:	movne	sl, #268435456	; 0x10000000
   13058:	b	13068 <is_banned_list+0x188>
   1305c:	bic	r0, r0, #8
   13060:	str	r0, [r8, #44]	; 0x2c
   13064:	mov	sl, #0
   13068:	mov	r0, sl
   1306c:	sub	sp, fp, #28
   13070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13074:	mov	sl, #536870912	; 0x20000000
   13078:	ldr	r1, [sp]
   1307c:	cmp	r1, #0
   13080:	beq	13068 <is_banned_list+0x188>
   13084:	ldr	r0, [r9, #228]	; 0xe4
   13088:	str	r0, [r1, #48]	; 0x30
   1308c:	ldr	r0, [r1, #44]	; 0x2c
   13090:	bic	r0, r0, #8
   13094:	str	r0, [r1, #44]	; 0x2c
   13098:	b	13068 <is_banned_list+0x188>
   1309c:	.word	0x00047b50

000130a0 <is_quieted>:
   130a0:	push	{fp, lr}
   130a4:	mov	fp, sp
   130a8:	sub	sp, sp, #8
   130ac:	mov	ip, r2
   130b0:	mov	r2, r1
   130b4:	mov	r1, #0
   130b8:	str	r3, [sp]
   130bc:	str	r1, [sp, #4]
   130c0:	add	r1, r0, #196	; 0xc4
   130c4:	mov	r3, ip
   130c8:	bl	12ee0 <is_banned_list>
   130cc:	mov	sp, fp
   130d0:	pop	{fp, pc}

000130d4 <can_join>:
   130d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130d8:	add	fp, sp, #24
   130dc:	sub	sp, sp, #568	; 0x238
   130e0:	mov	r6, r3
   130e4:	mov	r7, r2
   130e8:	mov	r4, r1
   130ec:	mov	r8, r0
   130f0:	mov	r0, #0
   130f4:	str	r0, [sp, #12]
   130f8:	str	r1, [sp, #8]
   130fc:	str	r8, [sp, #4]
   13100:	add	r5, sp, #16
   13104:	mov	r0, r8
   13108:	mov	r1, r5
   1310c:	bl	e018 <matchset_for_client@plt>
   13110:	str	r6, [sp]
   13114:	mov	r0, r4
   13118:	mov	r1, r8
   1311c:	mov	r2, #0
   13120:	mov	r3, r5
   13124:	bl	e240 <is_banned@plt>
   13128:	cmp	r0, #268435456	; 0x10000000
   1312c:	bne	1313c <can_join+0x68>
   13130:	movw	r0, #474	; 0x1da
   13134:	str	r0, [sp, #12]
   13138:	b	132fc <can_join+0x228>
   1313c:	mov	r0, r4
   13140:	ldrb	r1, [r0, #20]!
   13144:	cmp	r1, #0
   13148:	beq	1317c <can_join+0xa8>
   1314c:	cmp	r7, #0
   13150:	beq	13170 <can_join+0x9c>
   13154:	ldrb	r1, [r7]
   13158:	cmp	r1, #0
   1315c:	beq	13170 <can_join+0x9c>
   13160:	mov	r1, r7
   13164:	bl	e750 <irccmp@plt>
   13168:	cmp	r0, #0
   1316c:	beq	1317c <can_join+0xa8>
   13170:	movw	r0, #475	; 0x1db
   13174:	str	r0, [sp, #12]
   13178:	b	132fc <can_join+0x228>
   1317c:	cmp	r6, #0
   13180:	addne	r0, r4, #52	; 0x34
   13184:	strne	r0, [r6]
   13188:	ldrb	r0, [r4, #12]
   1318c:	mov	r5, #0
   13190:	tst	r0, #16
   13194:	mov	r6, #0
   13198:	beq	13238 <can_join+0x164>
   1319c:	ldr	r0, [r8, #24]
   131a0:	ldr	r6, [r0, #12]
   131a4:	cmp	r6, #0
   131a8:	beq	131c4 <can_join+0xf0>
   131ac:	ldr	r0, [r6]
   131b0:	cmp	r0, r4
   131b4:	beq	13238 <can_join+0x164>
   131b8:	ldr	r6, [r6, #8]
   131bc:	cmp	r6, #0
   131c0:	bne	131ac <can_join+0xd8>
   131c4:	ldr	r0, [pc, #332]	; 13318 <can_join+0x244>
   131c8:	ldr	r0, [pc, r0]
   131cc:	ldr	r0, [r0, #4]
   131d0:	cmp	r0, #0
   131d4:	movweq	r0, #473	; 0x1d9
   131d8:	streq	r0, [sp, #12]
   131dc:	ldr	r7, [r4, #184]	; 0xb8
   131e0:	cmp	r7, #0
   131e4:	beq	1322c <can_join+0x158>
   131e8:	add	r9, sp, #16
   131ec:	ldr	r6, [r7]
   131f0:	ldr	r1, [r6]
   131f4:	mov	r0, r9
   131f8:	bl	d310 <matches_mask@plt>
   131fc:	cmp	r0, #0
   13200:	bne	13234 <can_join+0x160>
   13204:	ldr	r0, [r6]
   13208:	mov	r1, r8
   1320c:	mov	r2, r4
   13210:	mov	r3, #1073741824	; 0x40000000
   13214:	bl	dd78 <match_extban@plt>
   13218:	cmp	r0, #0
   1321c:	bne	13234 <can_join+0x160>
   13220:	ldr	r7, [r7, #8]
   13224:	cmp	r7, #0
   13228:	bne	131ec <can_join+0x118>
   1322c:	movw	r0, #473	; 0x1d9
   13230:	str	r0, [sp, #12]
   13234:	mov	r6, #0
   13238:	ldr	r0, [r4, #16]
   1323c:	cmp	r0, #0
   13240:	beq	13254 <can_join+0x180>
   13244:	ldr	r1, [r4, #132]	; 0x84
   13248:	movw	r5, #471	; 0x1d7
   1324c:	cmp	r1, r0
   13250:	movwcc	r5, #0
   13254:	ldrb	r0, [r4, #12]
   13258:	tst	r0, #64	; 0x40
   1325c:	beq	13270 <can_join+0x19c>
   13260:	ldr	r0, [r8, #24]
   13264:	ldrb	r0, [r0, #40]	; 0x28
   13268:	cmp	r0, #0
   1326c:	beq	132bc <can_join+0x1e8>
   13270:	ldr	r0, [r4, #44]	; 0x2c
   13274:	cmp	r0, #0
   13278:	beq	132c0 <can_join+0x1ec>
   1327c:	ldr	r0, [r4, #48]	; 0x30
   13280:	cmp	r0, #0
   13284:	beq	132c0 <can_join+0x1ec>
   13288:	bl	d07c <rb_current_time@plt>
   1328c:	ldr	r1, [r4, #48]	; 0x30
   13290:	ldr	r2, [r4, #224]	; 0xe0
   13294:	sub	r0, r0, r2
   13298:	cmp	r0, r1
   1329c:	bhi	132c0 <can_join+0x1ec>
   132a0:	ldr	r0, [r4, #44]	; 0x2c
   132a4:	ldr	r1, [r4, #220]	; 0xdc
   132a8:	cmp	r1, r0
   132ac:	movcs	r5, #480	; 0x1e0
   132b0:	cmp	r6, #0
   132b4:	beq	132c8 <can_join+0x1f4>
   132b8:	b	132fc <can_join+0x228>
   132bc:	movw	r5, #477	; 0x1dd
   132c0:	cmp	r6, #0
   132c4:	bne	132fc <can_join+0x228>
   132c8:	cmp	r5, #0
   132cc:	beq	132fc <can_join+0x228>
   132d0:	ldr	r0, [r8, #24]
   132d4:	ldr	r0, [r0, #12]
   132d8:	cmp	r0, #0
   132dc:	beq	132f8 <can_join+0x224>
   132e0:	ldr	r1, [r0]
   132e4:	cmp	r1, r4
   132e8:	beq	132fc <can_join+0x228>
   132ec:	ldr	r0, [r0, #8]
   132f0:	cmp	r0, #0
   132f4:	bne	132e0 <can_join+0x20c>
   132f8:	str	r5, [sp, #12]
   132fc:	ldr	r0, [pc, #24]	; 1331c <can_join+0x248>
   13300:	ldr	r0, [pc, r0]
   13304:	add	r1, sp, #4
   13308:	bl	e654 <call_hook@plt>
   1330c:	ldr	r0, [sp, #12]
   13310:	sub	sp, fp, #24
   13314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13318:	.word	0x00047950
   1331c:	.word	0x0004e610

00013320 <can_send>:
   13320:	push	{r4, r5, r6, r7, fp, lr}
   13324:	add	fp, sp, #16
   13328:	sub	sp, sp, #40	; 0x28
   1332c:	mov	r4, r1
   13330:	mov	r6, r0
   13334:	mov	r0, #0
   13338:	str	r0, [sp, #28]
   1333c:	mov	r0, #1
   13340:	str	r0, [sp, #24]
   13344:	ldrh	r1, [r1, #80]	; 0x50
   13348:	mov	r0, #2
   1334c:	cmp	r1, #32
   13350:	beq	134c4 <can_send+0x1a4>
   13354:	mov	r5, r2
   13358:	ldrb	r2, [r4, #56]	; 0x38
   1335c:	tst	r2, #64	; 0x40
   13360:	bne	134c4 <can_send+0x1a4>
   13364:	mov	r7, r4
   13368:	ldr	r0, [r7, #64]!	; 0x40
   1336c:	cmp	r1, #64	; 0x40
   13370:	bne	133a8 <can_send+0x88>
   13374:	ands	r0, r0, #8192	; 0x2000
   13378:	beq	133a8 <can_send+0x88>
   1337c:	ldr	r0, [r6, #236]	; 0xec
   13380:	bl	e600 <hash_find_resv@plt>
   13384:	cmp	r0, #0
   13388:	beq	133a8 <can_send+0x88>
   1338c:	ldrb	r0, [r4, #57]	; 0x39
   13390:	tst	r0, #16
   13394:	bne	133a8 <can_send+0x88>
   13398:	ldrb	r0, [r7, #2]
   1339c:	tst	r0, #32
   133a0:	moveq	r0, #0
   133a4:	streq	r0, [sp, #24]
   133a8:	cmp	r5, #0
   133ac:	bne	133c8 <can_send+0xa8>
   133b0:	mov	r0, r6
   133b4:	mov	r1, r4
   133b8:	bl	d94c <find_channel_membership@plt>
   133bc:	mov	r5, r0
   133c0:	cmp	r0, #0
   133c4:	beq	13414 <can_send+0xf4>
   133c8:	ldrb	r0, [r6, #12]
   133cc:	tst	r0, #4
   133d0:	movne	r0, #0
   133d4:	strne	r0, [sp, #24]
   133d8:	ldrb	r0, [r7, #1]
   133dc:	tst	r0, #32
   133e0:	beq	13478 <can_send+0x158>
   133e4:	ldrh	r0, [r4, #80]	; 0x50
   133e8:	cmp	r0, #64	; 0x40
   133ec:	bne	13478 <can_send+0x158>
   133f0:	ldr	r0, [r6, #228]	; 0xe4
   133f4:	ldr	r1, [r5, #48]	; 0x30
   133f8:	cmp	r1, r0
   133fc:	bne	13430 <can_send+0x110>
   13400:	ldrb	r0, [r5, #44]	; 0x2c
   13404:	tst	r0, #24
   13408:	movne	r0, #0
   1340c:	strne	r0, [sp, #24]
   13410:	b	13478 <can_send+0x158>
   13414:	ldr	r0, [r6, #12]
   13418:	and	r0, r0, #36	; 0x24
   1341c:	clz	r0, r0
   13420:	lsr	r0, r0, #5
   13424:	str	r0, [sp, #24]
   13428:	sub	sp, fp, #16
   1342c:	pop	{r4, r5, r6, r7, fp, pc}
   13430:	mov	r7, #0
   13434:	str	r7, [sp]
   13438:	mov	r0, r6
   1343c:	mov	r1, r4
   13440:	mov	r2, r5
   13444:	mov	r3, #0
   13448:	bl	e240 <is_banned@plt>
   1344c:	cmp	r0, #268435456	; 0x10000000
   13450:	bne	1345c <can_send+0x13c>
   13454:	str	r7, [sp, #24]
   13458:	b	13478 <can_send+0x158>
   1345c:	mov	r0, r6
   13460:	mov	r1, r4
   13464:	mov	r2, r5
   13468:	mov	r3, #0
   1346c:	bl	e354 <is_quieted@plt>
   13470:	cmp	r0, #268435456	; 0x10000000
   13474:	streq	r7, [sp, #24]
   13478:	ldrb	r0, [r5, #44]	; 0x2c
   1347c:	tst	r0, #3
   13480:	movne	r0, #2
   13484:	strne	r0, [sp, #24]
   13488:	str	r4, [sp, #8]
   1348c:	ldr	r0, [r5, #36]	; 0x24
   13490:	mov	r1, #0
   13494:	str	r1, [sp, #20]
   13498:	str	r5, [sp, #16]
   1349c:	str	r0, [sp, #12]
   134a0:	ldr	r0, [sp, #24]
   134a4:	clz	r0, r0
   134a8:	lsr	r0, r0, #5
   134ac:	str	r0, [sp, #28]
   134b0:	ldr	r0, [pc, #20]	; 134cc <can_send+0x1ac>
   134b4:	ldr	r0, [pc, r0]
   134b8:	add	r1, sp, #8
   134bc:	bl	e654 <call_hook@plt>
   134c0:	ldr	r0, [sp, #24]
   134c4:	sub	sp, fp, #16
   134c8:	pop	{r4, r5, r6, r7, fp, pc}
   134cc:	.word	0x0004e460

000134d0 <flood_attack_channel>:
   134d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   134d4:	add	fp, sp, #24
   134d8:	sub	sp, sp, #16
   134dc:	mov	r8, r0
   134e0:	ldr	r7, [pc, #356]	; 1364c <flood_attack_channel+0x17c>
   134e4:	ldr	r7, [pc, r7]
   134e8:	ldr	r0, [r7, #8]
   134ec:	mov	r6, #0
   134f0:	cmp	r0, #0
   134f4:	beq	135fc <flood_attack_channel+0x12c>
   134f8:	mov	r4, r1
   134fc:	ldrb	r0, [r1, #65]	; 0x41
   13500:	tst	r0, #32
   13504:	beq	135fc <flood_attack_channel+0x12c>
   13508:	ldrh	r0, [r4, #80]	; 0x50
   1350c:	cmp	r0, #64	; 0x40
   13510:	bne	135fc <flood_attack_channel+0x12c>
   13514:	mov	r5, r2
   13518:	ldr	r0, [r2, #208]	; 0xd0
   1351c:	add	r9, r0, #1
   13520:	bl	d07c <rb_current_time@plt>
   13524:	cmp	r9, r0
   13528:	bge	13560 <flood_attack_channel+0x90>
   1352c:	bl	d07c <rb_current_time@plt>
   13530:	ldr	r1, [r5, #208]	; 0xd0
   13534:	ldr	r2, [r5, #212]	; 0xd4
   13538:	sub	r0, r1, r0
   1353c:	add	r0, r0, r2
   13540:	str	r0, [r5, #212]	; 0xd4
   13544:	bl	d07c <rb_current_time@plt>
   13548:	str	r0, [r5, #208]	; 0xd0
   1354c:	ldr	r0, [r5, #212]	; 0xd4
   13550:	cmp	r0, #0
   13554:	movle	r0, #0
   13558:	strle	r0, [r5, #212]	; 0xd4
   1355c:	strle	r0, [r5, #216]	; 0xd8
   13560:	ldr	r0, [r5, #212]	; 0xd4
   13564:	ldr	r1, [r7, #8]
   13568:	cmp	r0, r1
   1356c:	bge	1357c <flood_attack_channel+0xac>
   13570:	ldr	r1, [r5, #216]	; 0xd8
   13574:	cmp	r1, #0
   13578:	beq	13640 <flood_attack_channel+0x170>
   1357c:	add	r6, r4, #64	; 0x40
   13580:	ldr	r0, [r5, #216]	; 0xd8
   13584:	cmp	r0, #0
   13588:	bne	135e8 <flood_attack_channel+0x118>
   1358c:	ldr	r0, [r5, #236]	; 0xec
   13590:	ldrb	r1, [r0]
   13594:	ldr	r2, [r4, #32]
   13598:	add	r2, r2, #88	; 0x58
   1359c:	add	r3, r4, #227	; 0xe3
   135a0:	add	r7, r4, #152	; 0x98
   135a4:	str	r7, [sp]
   135a8:	str	r3, [sp, #4]
   135ac:	str	r2, [sp, #8]
   135b0:	str	r0, [sp, #12]
   135b4:	subs	r0, r1, #38	; 0x26
   135b8:	movwne	r0, #1
   135bc:	lsl	r1, r0, #8
   135c0:	add	r3, r4, #88	; 0x58
   135c4:	ldr	r2, [pc, #132]	; 13650 <flood_attack_channel+0x180>
   135c8:	add	r2, pc, r2
   135cc:	mov	r0, #2
   135d0:	bl	d634 <sendto_realops_snomask@plt>
   135d4:	mov	r0, #1
   135d8:	str	r0, [r5, #216]	; 0xd8
   135dc:	ldr	r0, [r5, #212]	; 0xd4
   135e0:	add	r0, r0, #2
   135e4:	str	r0, [r5, #212]	; 0xd4
   135e8:	ldrb	r0, [r6, #1]
   135ec:	mov	r6, #1
   135f0:	tst	r0, #32
   135f4:	cmpne	r8, #1
   135f8:	bne	13608 <flood_attack_channel+0x138>
   135fc:	mov	r0, r6
   13600:	sub	sp, fp, #24
   13604:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13608:	ldrh	r0, [r4, #80]	; 0x50
   1360c:	cmp	r0, #64	; 0x40
   13610:	bne	135fc <flood_attack_channel+0x12c>
   13614:	ldr	r0, [r5, #236]	; 0xec
   13618:	str	r0, [sp]
   1361c:	add	r3, r4, #88	; 0x58
   13620:	ldr	r0, [pc, #44]	; 13654 <flood_attack_channel+0x184>
   13624:	ldr	r0, [pc, r0]
   13628:	add	r2, r0, #88	; 0x58
   1362c:	ldr	r1, [pc, #36]	; 13658 <flood_attack_channel+0x188>
   13630:	add	r1, pc, r1
   13634:	mov	r0, r4
   13638:	bl	d1e4 <sendto_one@plt>
   1363c:	b	135fc <flood_attack_channel+0x12c>
   13640:	add	r0, r0, #1
   13644:	str	r0, [r5, #212]	; 0xd4
   13648:	b	135fc <flood_attack_channel+0x12c>
   1364c:	.word	0x00047374
   13650:	.word	0x0002d785
   13654:	.word	0x00047534
   13658:	.word	0x0002d749

0001365c <find_bannickchange_channel>:
   1365c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13660:	add	fp, sp, #24
   13664:	sub	sp, sp, #560	; 0x230
   13668:	mov	r4, r0
   1366c:	ldrb	r0, [r0, #65]	; 0x41
   13670:	mov	r5, #0
   13674:	tst	r0, #32
   13678:	beq	13738 <find_bannickchange_channel+0xdc>
   1367c:	ldrh	r0, [r4, #80]	; 0x50
   13680:	cmp	r0, #64	; 0x40
   13684:	bne	13738 <find_bannickchange_channel+0xdc>
   13688:	add	r1, sp, #8
   1368c:	mov	r0, r4
   13690:	bl	e018 <matchset_for_client@plt>
   13694:	ldr	r0, [r4, #24]
   13698:	ldr	r6, [r0]
   1369c:	cmp	r6, #0
   136a0:	beq	13738 <find_bannickchange_channel+0xdc>
   136a4:	mov	r9, #0
   136a8:	add	r8, sp, #8
   136ac:	b	136c8 <find_bannickchange_channel+0x6c>
   136b0:	ldrb	r0, [r7, #44]	; 0x2c
   136b4:	tst	r0, #24
   136b8:	bne	13738 <find_bannickchange_channel+0xdc>
   136bc:	ldr	r6, [r6, #8]
   136c0:	cmp	r6, #0
   136c4:	beq	13734 <find_bannickchange_channel+0xd8>
   136c8:	ldr	r7, [r6]
   136cc:	ldr	r5, [r7, #36]	; 0x24
   136d0:	cmp	r7, #0
   136d4:	beq	136e4 <find_bannickchange_channel+0x88>
   136d8:	ldrb	r0, [r7, #44]	; 0x2c
   136dc:	tst	r0, #3
   136e0:	bne	136bc <find_bannickchange_channel+0x60>
   136e4:	ldr	r0, [r5, #228]	; 0xe4
   136e8:	ldr	r1, [r7, #48]	; 0x30
   136ec:	cmp	r1, r0
   136f0:	beq	136b0 <find_bannickchange_channel+0x54>
   136f4:	str	r9, [sp]
   136f8:	mov	r0, r5
   136fc:	mov	r1, r4
   13700:	mov	r2, r7
   13704:	mov	r3, r8
   13708:	bl	e240 <is_banned@plt>
   1370c:	cmp	r0, #268435456	; 0x10000000
   13710:	beq	13738 <find_bannickchange_channel+0xdc>
   13714:	mov	r0, r5
   13718:	mov	r1, r4
   1371c:	mov	r2, r7
   13720:	mov	r3, r8
   13724:	bl	e354 <is_quieted@plt>
   13728:	cmp	r0, #268435456	; 0x10000000
   1372c:	bne	136bc <find_bannickchange_channel+0x60>
   13730:	b	13738 <find_bannickchange_channel+0xdc>
   13734:	mov	r5, #0
   13738:	mov	r0, r5
   1373c:	sub	sp, fp, #24
   13740:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013744 <check_spambot_warning>:
   13744:	push	{r4, r5, r6, sl, fp, lr}
   13748:	add	fp, sp, #16
   1374c:	sub	sp, sp, #16
   13750:	mov	r5, r1
   13754:	mov	r4, r0
   13758:	ldr	r6, [pc, #288]	; 13880 <check_spambot_warning+0x13c>
   1375c:	ldr	r6, [pc, r6]
   13760:	ldr	r1, [r6, #16]
   13764:	cmp	r1, #0
   13768:	beq	1377c <check_spambot_warning+0x38>
   1376c:	ldr	r0, [r4, #432]	; 0x1b0
   13770:	ldr	r2, [r0, #32]
   13774:	cmp	r2, r1
   13778:	bge	137ec <check_spambot_warning+0xa8>
   1377c:	bl	d07c <rb_current_time@plt>
   13780:	ldr	r1, [r4, #432]	; 0x1b0
   13784:	ldr	r2, [r1, #28]
   13788:	sub	r0, r0, r2
   1378c:	cmp	r0, #121	; 0x79
   13790:	blt	137a8 <check_spambot_warning+0x64>
   13794:	cmp	r5, #0
   13798:	beq	1384c <check_spambot_warning+0x108>
   1379c:	bl	d07c <rb_current_time@plt>
   137a0:	ldr	r1, [r4, #432]	; 0x1b0
   137a4:	b	137e0 <check_spambot_warning+0x9c>
   137a8:	bl	d07c <rb_current_time@plt>
   137ac:	ldr	r1, [r4, #432]	; 0x1b0
   137b0:	ldr	r2, [r1, #24]
   137b4:	sub	r0, r0, r2
   137b8:	ldr	r2, [r6, #20]
   137bc:	cmp	r0, r2
   137c0:	bge	137d0 <check_spambot_warning+0x8c>
   137c4:	ldr	r0, [r1, #32]
   137c8:	add	r0, r0, #1
   137cc:	str	r0, [r1, #32]
   137d0:	bl	d07c <rb_current_time@plt>
   137d4:	ldr	r1, [r4, #432]	; 0x1b0
   137d8:	cmp	r5, #0
   137dc:	beq	13874 <check_spambot_warning+0x130>
   137e0:	str	r0, [r1, #24]
   137e4:	sub	sp, fp, #16
   137e8:	pop	{r4, r5, r6, sl, fp, pc}
   137ec:	ldr	r2, [r0, #36]	; 0x24
   137f0:	mov	r1, #0
   137f4:	cmp	r2, #0
   137f8:	subgt	r1, r2, #1
   137fc:	str	r1, [r0, #36]	; 0x24
   13800:	cmp	r5, #0
   13804:	beq	13878 <check_spambot_warning+0x134>
   13808:	cmp	r1, #0
   1380c:	bne	13878 <check_spambot_warning+0x134>
   13810:	add	r0, r4, #227	; 0xe3
   13814:	add	r1, r4, #152	; 0x98
   13818:	str	r1, [sp]
   1381c:	stmib	sp, {r0, r5}
   13820:	add	r3, r4, #88	; 0x58
   13824:	ldr	r2, [pc, #88]	; 13884 <check_spambot_warning+0x140>
   13828:	add	r2, pc, r2
   1382c:	mov	r0, #2
   13830:	mov	r1, #256	; 0x100
   13834:	bl	d634 <sendto_realops_snomask@plt>
   13838:	ldr	r0, [r4, #432]	; 0x1b0
   1383c:	mov	r1, #5
   13840:	str	r1, [r0, #36]	; 0x24
   13844:	sub	sp, fp, #16
   13848:	pop	{r4, r5, r6, sl, fp, pc}
   1384c:	movw	r2, #34953	; 0x8889
   13850:	movt	r2, #34952	; 0x8888
   13854:	umull	r0, r2, r0, r2
   13858:	lsr	r0, r2, #6
   1385c:	ldr	r2, [r1, #32]
   13860:	subs	r0, r2, r0
   13864:	movwlt	r0, #0
   13868:	str	r0, [r1, #32]
   1386c:	bl	d07c <rb_current_time@plt>
   13870:	ldr	r1, [r4, #432]	; 0x1b0
   13874:	str	r0, [r1, #28]
   13878:	sub	sp, fp, #16
   1387c:	pop	{r4, r5, r6, sl, fp, pc}
   13880:	.word	0x000470fc
   13884:	.word	0x0002d58c

00013888 <check_splitmode>:
   13888:	push	{r4, r5, fp, lr}
   1388c:	add	fp, sp, #8
   13890:	ldr	r0, [pc, #284]	; 139b4 <check_splitmode+0x12c>
   13894:	ldr	r0, [pc, r0]
   13898:	ldr	r0, [r0]
   1389c:	cmp	r0, #0
   138a0:	beq	139b0 <check_splitmode+0x128>
   138a4:	ldr	r0, [pc, #268]	; 139b8 <check_splitmode+0x130>
   138a8:	ldr	r0, [pc, r0]
   138ac:	ldr	r1, [r0, #40]	; 0x28
   138b0:	ldr	r0, [r0, #44]	; 0x2c
   138b4:	orrs	r0, r1, r0
   138b8:	beq	139b0 <check_splitmode+0x128>
   138bc:	ldr	r0, [pc, #248]	; 139bc <check_splitmode+0x134>
   138c0:	ldr	r0, [pc, r0]
   138c4:	ldr	r1, [r0]
   138c8:	ldr	r0, [pc, #240]	; 139c0 <check_splitmode+0x138>
   138cc:	ldr	r0, [pc, r0]
   138d0:	ldr	r2, [r0]
   138d4:	ldr	r0, [pc, #232]	; 139c4 <check_splitmode+0x13c>
   138d8:	ldr	r0, [pc, r0]
   138dc:	ldr	r3, [r0]
   138e0:	cmp	r3, #0
   138e4:	beq	13944 <check_splitmode+0xbc>
   138e8:	cmp	r2, r1
   138ec:	blt	139b0 <check_splitmode+0x128>
   138f0:	ldr	r1, [pc, #232]	; 139e0 <check_splitmode+0x158>
   138f4:	ldr	r1, [pc, r1]
   138f8:	ldr	r1, [r1]
   138fc:	ldr	r2, [pc, #224]	; 139e4 <check_splitmode+0x15c>
   13900:	ldr	r2, [pc, r2]
   13904:	ldr	r2, [r2, #4]
   13908:	cmp	r2, r1
   1390c:	poplt	{r4, r5, fp, pc}
   13910:	mov	r4, #0
   13914:	str	r4, [r0]
   13918:	ldr	r2, [pc, #200]	; 139e8 <check_splitmode+0x160>
   1391c:	add	r2, pc, r2
   13920:	mov	r0, #256	; 0x100
   13924:	mov	r1, #0
   13928:	bl	d634 <sendto_realops_snomask@plt>
   1392c:	ldr	r5, [pc, #184]	; 139ec <check_splitmode+0x164>
   13930:	ldr	r5, [pc, r5]
   13934:	ldr	r0, [r5]
   13938:	bl	d28c <rb_event_delete@plt>
   1393c:	str	r4, [r5]
   13940:	pop	{r4, r5, fp, pc}
   13944:	cmp	r2, r1
   13948:	blt	1396c <check_splitmode+0xe4>
   1394c:	ldr	r1, [pc, #116]	; 139c8 <check_splitmode+0x140>
   13950:	ldr	r1, [pc, r1]
   13954:	ldr	r1, [r1]
   13958:	ldr	r2, [pc, #108]	; 139cc <check_splitmode+0x144>
   1395c:	ldr	r2, [pc, r2]
   13960:	ldr	r2, [r2, #4]
   13964:	cmp	r2, r1
   13968:	bge	139b0 <check_splitmode+0x128>
   1396c:	mov	r1, #1
   13970:	str	r1, [r0]
   13974:	ldr	r2, [pc, #84]	; 139d0 <check_splitmode+0x148>
   13978:	add	r2, pc, r2
   1397c:	mov	r0, #256	; 0x100
   13980:	mov	r1, #0
   13984:	bl	d634 <sendto_realops_snomask@plt>
   13988:	ldr	r1, [pc, #68]	; 139d4 <check_splitmode+0x14c>
   1398c:	ldr	r1, [pc, r1]
   13990:	ldr	r0, [pc, #64]	; 139d8 <check_splitmode+0x150>
   13994:	add	r0, pc, r0
   13998:	mov	r2, #0
   1399c:	mov	r3, #2
   139a0:	bl	d220 <rb_event_addish@plt>
   139a4:	ldr	r1, [pc, #48]	; 139dc <check_splitmode+0x154>
   139a8:	ldr	r1, [pc, r1]
   139ac:	str	r0, [r1]
   139b0:	pop	{r4, r5, fp, pc}
   139b4:	.word	0x00047160
   139b8:	.word	0x00047270
   139bc:	.word	0x00047140
   139c0:	.word	0x00047250
   139c4:	.word	0x00047284
   139c8:	.word	0x000470c0
   139cc:	.word	0x00046fc4
   139d0:	.word	0x0002d474
   139d4:	.word	0x000471ac
   139d8:	.word	0x0002d47c
   139dc:	.word	0x00046ef0
   139e0:	.word	0x0004711c
   139e4:	.word	0x00047020
   139e8:	.word	0x0002d504
   139ec:	.word	0x00046f68

000139f0 <set_channel_topic>:
   139f0:	push	{r4, r5, r6, r7, fp, lr}
   139f4:	add	fp, sp, #16
   139f8:	mov	r7, r1
   139fc:	mov	r5, r0
   13a00:	ldr	r0, [r0, #108]	; 0x6c
   13a04:	ldrb	r1, [r1]
   13a08:	cmp	r1, #0
   13a0c:	beq	13a4c <set_channel_topic+0x5c>
   13a10:	mov	r4, r3
   13a14:	mov	r6, r2
   13a18:	cmp	r0, #0
   13a1c:	moveq	r0, r5
   13a20:	bleq	13a64 <allocate_topic>
   13a24:	ldr	r0, [r5, #108]	; 0x6c
   13a28:	mov	r1, r7
   13a2c:	movw	r2, #391	; 0x187
   13a30:	bl	e510 <rb_strlcpy@plt>
   13a34:	ldr	r0, [r5, #112]	; 0x70
   13a38:	mov	r1, r6
   13a3c:	mov	r2, #141	; 0x8d
   13a40:	bl	e510 <rb_strlcpy@plt>
   13a44:	str	r4, [r5, #116]	; 0x74
   13a48:	pop	{r4, r5, r6, r7, fp, pc}
   13a4c:	mov	r4, #0
   13a50:	cmp	r0, #0
   13a54:	movne	r0, r5
   13a58:	blne	12a6c <free_topic>
   13a5c:	str	r4, [r5, #116]	; 0x74
   13a60:	pop	{r4, r5, r6, r7, fp, pc}

00013a64 <allocate_topic>:
   13a64:	cmp	r0, #0
   13a68:	bxeq	lr
   13a6c:	push	{r4, sl, fp, lr}
   13a70:	add	fp, sp, #8
   13a74:	mov	r4, r0
   13a78:	ldr	r0, [pc, #44]	; 13aac <allocate_topic+0x48>
   13a7c:	ldr	r0, [pc, r0]
   13a80:	bl	de20 <rb_bh_alloc@plt>
   13a84:	movw	r1, #391	; 0x187
   13a88:	add	r1, r0, r1
   13a8c:	str	r0, [r4, #108]	; 0x6c
   13a90:	str	r1, [r4, #112]	; 0x70
   13a94:	mov	r1, #0
   13a98:	strb	r1, [r0]
   13a9c:	ldr	r0, [r4, #112]	; 0x70
   13aa0:	strb	r1, [r0]
   13aa4:	pop	{r4, sl, fp, lr}
   13aa8:	bx	lr
   13aac:	.word	0x0004de8c

00013ab0 <channel_modes>:
   13ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ab4:	add	fp, sp, #28
   13ab8:	sub	sp, sp, #4
   13abc:	sub	sp, sp, #1024	; 0x400
   13ac0:	mov	sl, r1
   13ac4:	mov	r9, r0
   13ac8:	mov	r0, #43	; 0x2b
   13acc:	strb	r0, [sp, #512]	; 0x200
   13ad0:	mov	r7, #0
   13ad4:	strb	r7, [sp]
   13ad8:	add	r0, sp, #512	; 0x200
   13adc:	add	r6, r0, #1
   13ae0:	ldr	r4, [pc, #604]	; 13d44 <channel_modes+0x294>
   13ae4:	ldr	r4, [pc, r4]
   13ae8:	ldr	r5, [pc, #600]	; 13d48 <channel_modes+0x298>
   13aec:	ldr	r5, [pc, r5]
   13af0:	ldr	r8, [pc, #596]	; 13d4c <channel_modes+0x29c>
   13af4:	ldr	r8, [pc, r8]
   13af8:	b	13b18 <channel_modes+0x68>
   13afc:	ldr	r0, [r8, r7, lsl #2]
   13b00:	ldr	r1, [r9, #12]
   13b04:	tst	r0, r1
   13b08:	strbne	r7, [r6], #1
   13b0c:	add	r7, r7, #1
   13b10:	cmp	r7, #256	; 0x100
   13b14:	beq	13b60 <channel_modes+0xb0>
   13b18:	ldr	r0, [r4, r7, lsl #3]
   13b1c:	cmp	r0, r5
   13b20:	bne	13afc <channel_modes+0x4c>
   13b24:	ldr	r0, [sl, #24]
   13b28:	cmp	r0, #0
   13b2c:	beq	13b0c <channel_modes+0x5c>
   13b30:	ldr	r0, [r0, #36]	; 0x24
   13b34:	cmp	r0, #0
   13b38:	beq	13b0c <channel_modes+0x5c>
   13b3c:	ldr	r1, [pc, #524]	; 13d50 <channel_modes+0x2a0>
   13b40:	add	r1, pc, r1
   13b44:	bl	e594 <privilegeset_in_set@plt>
   13b48:	cmp	r0, #0
   13b4c:	beq	13b0c <channel_modes+0x5c>
   13b50:	ldrh	r0, [sl, #80]	; 0x50
   13b54:	cmp	r0, #64	; 0x40
   13b58:	beq	13afc <channel_modes+0x4c>
   13b5c:	b	13b0c <channel_modes+0x5c>
   13b60:	ldr	r0, [r9, #16]
   13b64:	mov	r8, #0
   13b68:	cmp	r0, #0
   13b6c:	beq	13bbc <channel_modes+0x10c>
   13b70:	mov	r0, #108	; 0x6c
   13b74:	strb	r0, [r6], #1
   13b78:	ldrh	r0, [sl, #80]	; 0x50
   13b7c:	cmp	r0, #64	; 0x40
   13b80:	bne	13ba4 <channel_modes+0xf4>
   13b84:	ldr	r0, [sl, #24]
   13b88:	cmp	r0, #0
   13b8c:	beq	13bbc <channel_modes+0x10c>
   13b90:	mov	r0, r9
   13b94:	mov	r1, sl
   13b98:	bl	d94c <find_channel_membership@plt>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13bbc <channel_modes+0x10c>
   13ba4:	ldr	r2, [r9, #16]
   13ba8:	mov	r0, sp
   13bac:	ldr	r1, [pc, #416]	; 13d54 <channel_modes+0x2a4>
   13bb0:	add	r1, pc, r1
   13bb4:	bl	e3a8 <sprintf@plt>
   13bb8:	mov	r8, r0
   13bbc:	mov	r4, sp
   13bc0:	mov	r7, r9
   13bc4:	ldrb	r0, [r7, #20]!
   13bc8:	cmp	r0, #0
   13bcc:	beq	13c24 <channel_modes+0x174>
   13bd0:	mov	r0, #107	; 0x6b
   13bd4:	strb	r0, [r6], #1
   13bd8:	cmp	r8, #0
   13bdc:	bgt	13c0c <channel_modes+0x15c>
   13be0:	ldrh	r0, [sl, #80]	; 0x50
   13be4:	cmp	r0, #64	; 0x40
   13be8:	bne	13c0c <channel_modes+0x15c>
   13bec:	ldr	r0, [sl, #24]
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c24 <channel_modes+0x174>
   13bf8:	mov	r0, r9
   13bfc:	mov	r1, sl
   13c00:	bl	d94c <find_channel_membership@plt>
   13c04:	cmp	r0, #0
   13c08:	beq	13c24 <channel_modes+0x174>
   13c0c:	add	r0, r4, r8
   13c10:	ldr	r1, [pc, #320]	; 13d58 <channel_modes+0x2a8>
   13c14:	add	r1, pc, r1
   13c18:	mov	r2, r7
   13c1c:	bl	e3a8 <sprintf@plt>
   13c20:	add	r8, r0, r8
   13c24:	ldr	r0, [r9, #44]	; 0x2c
   13c28:	cmp	r0, #0
   13c2c:	beq	13c88 <channel_modes+0x1d8>
   13c30:	mov	r0, #106	; 0x6a
   13c34:	strb	r0, [r6], #1
   13c38:	cmp	r8, #0
   13c3c:	bgt	13c6c <channel_modes+0x1bc>
   13c40:	ldrh	r0, [sl, #80]	; 0x50
   13c44:	cmp	r0, #64	; 0x40
   13c48:	bne	13c6c <channel_modes+0x1bc>
   13c4c:	ldr	r0, [sl, #24]
   13c50:	cmp	r0, #0
   13c54:	beq	13c88 <channel_modes+0x1d8>
   13c58:	mov	r0, r9
   13c5c:	mov	r1, sl
   13c60:	bl	d94c <find_channel_membership@plt>
   13c64:	cmp	r0, #0
   13c68:	beq	13c88 <channel_modes+0x1d8>
   13c6c:	add	r0, r4, r8
   13c70:	ldr	r2, [r9, #44]	; 0x2c
   13c74:	ldr	r3, [r9, #48]	; 0x30
   13c78:	ldr	r1, [pc, #220]	; 13d5c <channel_modes+0x2ac>
   13c7c:	add	r1, pc, r1
   13c80:	bl	e3a8 <sprintf@plt>
   13c84:	add	r8, r0, r8
   13c88:	mov	r7, r9
   13c8c:	ldrb	r0, [r7, #52]!	; 0x34
   13c90:	cmp	r0, #0
   13c94:	beq	13d08 <channel_modes+0x258>
   13c98:	ldr	r0, [pc, #192]	; 13d60 <channel_modes+0x2b0>
   13c9c:	ldr	r0, [pc, r0]
   13ca0:	ldr	r0, [r0, #8]
   13ca4:	cmp	r0, #0
   13ca8:	bne	13cb8 <channel_modes+0x208>
   13cac:	ldrh	r0, [sl, #80]	; 0x50
   13cb0:	cmp	r0, #64	; 0x40
   13cb4:	beq	13d08 <channel_modes+0x258>
   13cb8:	mov	r0, #102	; 0x66
   13cbc:	strb	r0, [r6], #1
   13cc0:	cmp	r8, #0
   13cc4:	bgt	13cf4 <channel_modes+0x244>
   13cc8:	ldrh	r0, [sl, #80]	; 0x50
   13ccc:	cmp	r0, #64	; 0x40
   13cd0:	bne	13cf4 <channel_modes+0x244>
   13cd4:	ldr	r0, [sl, #24]
   13cd8:	cmp	r0, #0
   13cdc:	beq	13d08 <channel_modes+0x258>
   13ce0:	mov	r0, r9
   13ce4:	mov	r1, sl
   13ce8:	bl	d94c <find_channel_membership@plt>
   13cec:	cmp	r0, #0
   13cf0:	beq	13d08 <channel_modes+0x258>
   13cf4:	add	r0, r4, r8
   13cf8:	ldr	r1, [pc, #100]	; 13d64 <channel_modes+0x2b4>
   13cfc:	add	r1, pc, r1
   13d00:	mov	r2, r7
   13d04:	bl	e3a8 <sprintf@plt>
   13d08:	mov	r0, #0
   13d0c:	strb	r0, [r6]
   13d10:	ldr	r4, [pc, #80]	; 13d68 <channel_modes+0x2b8>
   13d14:	add	r4, pc, r4
   13d18:	add	r1, sp, #512	; 0x200
   13d1c:	mov	r0, r4
   13d20:	mov	r2, #512	; 0x200
   13d24:	bl	e510 <rb_strlcpy@plt>
   13d28:	mov	r1, sp
   13d2c:	mov	r0, r4
   13d30:	mov	r2, #512	; 0x200
   13d34:	bl	e7d4 <rb_strlcat@plt>
   13d38:	mov	r0, r4
   13d3c:	sub	sp, fp, #28
   13d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d44:	.word	0x00046fb0
   13d48:	.word	0x00046e9c
   13d4c:	.word	0x00046ff0
   13d50:	.word	0x0002d309
   13d54:	.word	0x0002d083
   13d58:	.word	0x00033da0
   13d5c:	.word	0x0002cf4f
   13d60:	.word	0x00046e7c
   13d64:	.word	0x00033cb8
   13d68:	.word	0x0004dc07

00013d6c <send_cap_mode_changes>:
   13d6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d70:	add	fp, sp, #28
   13d74:	sub	sp, sp, #36	; 0x24
   13d78:	mov	r4, r3
   13d7c:	mov	r7, r1
   13d80:	str	r0, [sp, #12]
   13d84:	ldr	r5, [pc, #620]	; 13ff8 <send_cap_mode_changes+0x28c>
   13d88:	add	r5, pc, r5
   13d8c:	mov	r0, #0
   13d90:	strb	r0, [r5]
   13d94:	ldrb	r0, [r7, #396]!	; 0x18c
   13d98:	ldr	r3, [r2, #232]	; 0xe8
   13d9c:	str	r2, [sp, #16]
   13da0:	ldr	r1, [r2, #236]	; 0xec
   13da4:	str	r1, [sp]
   13da8:	cmp	r0, #0
   13dac:	subeq	r7, r7, #308	; 0x134
   13db0:	ldr	r0, [pc, #580]	; 13ffc <send_cap_mode_changes+0x290>
   13db4:	add	r0, pc, r0
   13db8:	ldr	r1, [pc, #576]	; 14000 <send_cap_mode_changes+0x294>
   13dbc:	add	r1, pc, r1
   13dc0:	mov	r2, r7
   13dc4:	bl	e3a8 <sprintf@plt>
   13dc8:	ldr	r9, [fp, #8]
   13dcc:	cmp	r9, #1
   13dd0:	blt	13ff0 <send_cap_mode_changes+0x284>
   13dd4:	add	sl, r4, #12
   13dd8:	mov	r7, #0
   13ddc:	str	r5, [sp, #24]
   13de0:	str	r0, [sp, #20]
   13de4:	mov	r5, r0
   13de8:	mov	r8, #0
   13dec:	mov	r0, #0
   13df0:	str	r0, [sp, #32]
   13df4:	mov	r0, #0
   13df8:	str	r0, [sp, #28]
   13dfc:	b	13e0c <send_cap_mode_changes+0xa0>
   13e00:	add	sl, sl, #20
   13e04:	subs	r9, r9, #1
   13e08:	beq	13f84 <send_cap_mode_changes+0x218>
   13e0c:	ldrb	r0, [sl, #-12]
   13e10:	cmp	r0, #0
   13e14:	beq	13e00 <send_cap_mode_changes+0x94>
   13e18:	ldr	r4, [sl, #-4]
   13e1c:	cmp	r4, #0
   13e20:	beq	13e30 <send_cap_mode_changes+0xc4>
   13e24:	ldrb	r0, [r4]
   13e28:	cmp	r0, #0
   13e2c:	bne	13e3c <send_cap_mode_changes+0xd0>
   13e30:	ldr	r4, [sl, #-8]
   13e34:	cmp	r4, #0
   13e38:	beq	13ee4 <send_cap_mode_changes+0x178>
   13e3c:	mov	r0, r4
   13e40:	bl	dc94 <strlen@plt>
   13e44:	cmp	r0, #195	; 0xc3
   13e48:	bgt	13e00 <send_cap_mode_changes+0x94>
   13e4c:	cmp	r8, #10
   13e50:	beq	13e70 <send_cap_mode_changes+0x104>
   13e54:	ldr	r1, [sp, #28]
   13e58:	add	r1, r5, r1
   13e5c:	add	r1, r1, r0
   13e60:	mov	r0, #1
   13e64:	movw	r2, #506	; 0x1fa
   13e68:	cmp	r1, r2
   13e6c:	blt	13eec <send_cap_mode_changes+0x180>
   13e70:	ldr	r0, [sp, #32]
   13e74:	cmp	r0, #0
   13e78:	ldr	r5, [pc, #388]	; 14004 <send_cap_mode_changes+0x298>
   13e7c:	add	r5, pc, r5
   13e80:	beq	13eb0 <send_cap_mode_changes+0x144>
   13e84:	ldr	r0, [pc, #380]	; 14008 <send_cap_mode_changes+0x29c>
   13e88:	add	r0, pc, r0
   13e8c:	str	r0, [sp]
   13e90:	ldr	r0, [pc, #372]	; 1400c <send_cap_mode_changes+0x2a0>
   13e94:	add	r0, pc, r0
   13e98:	stmib	sp, {r0, r5}
   13e9c:	ldr	r0, [sp, #12]
   13ea0:	ldr	r1, [sp, #16]
   13ea4:	mov	r2, #0
   13ea8:	mov	r3, #0
   13eac:	bl	d994 <sendto_server@plt>
   13eb0:	mov	r1, #0
   13eb4:	mov	r0, #0
   13eb8:	str	r0, [sp, #28]
   13ebc:	strb	r1, [r5]
   13ec0:	mov	r0, #1
   13ec4:	mov	r1, #0
   13ec8:	str	r1, [sp, #32]
   13ecc:	mov	r8, #0
   13ed0:	mov	r1, r5
   13ed4:	ldr	r5, [sp, #20]
   13ed8:	str	r1, [sp, #24]
   13edc:	mov	r7, #0
   13ee0:	b	13eec <send_cap_mode_changes+0x180>
   13ee4:	mov	r4, #0
   13ee8:	mov	r0, #0
   13eec:	ldr	r1, [sl]
   13ef0:	cmp	r7, r1
   13ef4:	bne	13f08 <send_cap_mode_changes+0x19c>
   13ef8:	mov	r1, r5
   13efc:	ldr	r3, [pc, #268]	; 14010 <send_cap_mode_changes+0x2a4>
   13f00:	add	r3, pc, r3
   13f04:	b	13f28 <send_cap_mode_changes+0x1bc>
   13f08:	cmp	r1, #1
   13f0c:	mov	r1, #45	; 0x2d
   13f10:	movweq	r1, #43	; 0x2b
   13f14:	ldr	r3, [pc, #248]	; 14014 <send_cap_mode_changes+0x2a8>
   13f18:	add	r3, pc, r3
   13f1c:	strb	r1, [r3, r5]
   13f20:	add	r1, r5, #1
   13f24:	ldr	r7, [sl]
   13f28:	ldrb	r2, [sl, #-12]
   13f2c:	add	r5, r1, #1
   13f30:	mov	r6, #0
   13f34:	strb	r6, [r3, r5]
   13f38:	strb	r2, [r3, r1]
   13f3c:	ldr	r1, [sp, #32]
   13f40:	add	r1, r1, #1
   13f44:	str	r1, [sp, #32]
   13f48:	cmp	r0, #0
   13f4c:	beq	13e00 <send_cap_mode_changes+0x94>
   13f50:	ldr	r6, [sp, #24]
   13f54:	mov	r0, r6
   13f58:	ldr	r1, [pc, #184]	; 14018 <send_cap_mode_changes+0x2ac>
   13f5c:	add	r1, pc, r1
   13f60:	mov	r2, r4
   13f64:	bl	e3a8 <sprintf@plt>
   13f68:	ldr	r1, [sp, #28]
   13f6c:	add	r1, r0, r1
   13f70:	str	r1, [sp, #28]
   13f74:	add	r6, r6, r0
   13f78:	str	r6, [sp, #24]
   13f7c:	add	r8, r8, #1
   13f80:	b	13e00 <send_cap_mode_changes+0x94>
   13f84:	ldr	r0, [sp, #28]
   13f88:	cmp	r0, #0
   13f8c:	beq	13fac <send_cap_mode_changes+0x240>
   13f90:	sub	r0, r0, #1
   13f94:	ldr	r1, [pc, #128]	; 1401c <send_cap_mode_changes+0x2b0>
   13f98:	add	r1, pc, r1
   13f9c:	ldrb	r2, [r1, r0]
   13fa0:	cmp	r2, #32
   13fa4:	moveq	r2, #0
   13fa8:	strbeq	r2, [r1, r0]
   13fac:	ldr	r0, [sp, #32]
   13fb0:	cmp	r0, #0
   13fb4:	ldr	r1, [pc, #100]	; 14020 <send_cap_mode_changes+0x2b4>
   13fb8:	add	r1, pc, r1
   13fbc:	beq	13ff0 <send_cap_mode_changes+0x284>
   13fc0:	ldr	r0, [pc, #92]	; 14024 <send_cap_mode_changes+0x2b8>
   13fc4:	add	r0, pc, r0
   13fc8:	ldr	r2, [pc, #88]	; 14028 <send_cap_mode_changes+0x2bc>
   13fcc:	add	r2, pc, r2
   13fd0:	str	r2, [sp]
   13fd4:	str	r1, [sp, #4]
   13fd8:	str	r0, [sp, #8]
   13fdc:	ldr	r0, [sp, #12]
   13fe0:	ldr	r1, [sp, #16]
   13fe4:	mov	r2, #0
   13fe8:	mov	r3, #0
   13fec:	bl	d994 <sendto_server@plt>
   13ff0:	sub	sp, fp, #28
   13ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff8:	.word	0x0004df93
   13ffc:	.word	0x0004dd67
   14000:	.word	0x0002d09b
   14004:	.word	0x0004de9f
   14008:	.word	0x000321e0
   1400c:	.word	0x0004dc87
   14010:	.word	0x0004dc1b
   14014:	.word	0x0004dc03
   14018:	.word	0x000336db
   1401c:	.word	0x0004dd83
   14020:	.word	0x0004db63
   14024:	.word	0x0004dd57
   14028:	.word	0x0003209c

0001402c <resv_chan_forcepart>:
   1402c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14030:	add	fp, sp, #28
   14034:	sub	sp, sp, #36	; 0x24
   14038:	str	r2, [sp, #28]
   1403c:	str	r1, [sp, #24]
   14040:	str	r0, [sp, #32]
   14044:	ldr	r0, [pc, #296]	; 14174 <resv_chan_forcepart+0x148>
   14048:	ldr	r0, [pc, r0]
   1404c:	ldr	r0, [r0, #68]	; 0x44
   14050:	cmp	r0, #0
   14054:	beq	1416c <resv_chan_forcepart+0x140>
   14058:	ldr	r0, [sp, #32]
   1405c:	bl	d73c <find_channel@plt>
   14060:	cmp	r0, #0
   14064:	beq	1416c <resv_chan_forcepart+0x140>
   14068:	mov	r7, r0
   1406c:	ldr	sl, [r0, #136]	; 0x88
   14070:	cmp	sl, #0
   14074:	beq	1416c <resv_chan_forcepart+0x140>
   14078:	ldr	r8, [sl]
   1407c:	ldr	sl, [sl, #8]
   14080:	ldr	r4, [r8, #40]	; 0x28
   14084:	ldrb	r0, [r4, #66]	; 0x42
   14088:	tst	r0, #32
   1408c:	bne	14070 <resv_chan_forcepart+0x44>
   14090:	ldr	r0, [pc, #224]	; 14178 <resv_chan_forcepart+0x14c>
   14094:	ldr	r0, [pc, r0]
   14098:	ldr	r2, [r0]
   1409c:	ldr	r0, [r7, #236]	; 0xec
   140a0:	add	r1, r4, #396	; 0x18c
   140a4:	ldr	r3, [pc, #208]	; 1417c <resv_chan_forcepart+0x150>
   140a8:	add	r3, pc, r3
   140ac:	str	r3, [sp]
   140b0:	str	r1, [sp, #4]
   140b4:	str	r0, [sp, #8]
   140b8:	mov	r0, r4
   140bc:	mov	r1, r7
   140c0:	mov	r3, #0
   140c4:	bl	d994 <sendto_server@plt>
   140c8:	ldr	r0, [r7, #236]	; 0xec
   140cc:	add	r9, r4, #88	; 0x58
   140d0:	add	r5, r4, #163	; 0xa3
   140d4:	add	r6, r4, #152	; 0x98
   140d8:	str	r9, [sp]
   140dc:	str	r6, [sp, #4]
   140e0:	str	r5, [sp, #8]
   140e4:	str	r0, [sp, #12]
   140e8:	str	r9, [sp, #16]
   140ec:	mov	r0, r4
   140f0:	mov	r1, #0
   140f4:	mov	r2, r7
   140f8:	ldr	r3, [pc, #128]	; 14180 <resv_chan_forcepart+0x154>
   140fc:	add	r3, pc, r3
   14100:	bl	cf5c <sendto_channel_local@plt>
   14104:	mov	r0, r8
   14108:	bl	e2dc <remove_user_from_channel@plt>
   1410c:	str	r6, [sp]
   14110:	str	r5, [sp, #4]
   14114:	ldr	r5, [sp, #32]
   14118:	str	r5, [sp, #8]
   1411c:	ldr	r0, [sp, #24]
   14120:	str	r0, [sp, #12]
   14124:	mov	r0, #256	; 0x100
   14128:	mov	r1, #0
   1412c:	ldr	r2, [pc, #80]	; 14184 <resv_chan_forcepart+0x158>
   14130:	add	r2, pc, r2
   14134:	mov	r3, r9
   14138:	bl	d634 <sendto_realops_snomask@plt>
   1413c:	ldr	r0, [sp, #28]
   14140:	cmp	r0, #0
   14144:	ldr	r1, [pc, #60]	; 14188 <resv_chan_forcepart+0x15c>
   14148:	add	r1, pc, r1
   1414c:	ldr	r0, [pc, #56]	; 1418c <resv_chan_forcepart+0x160>
   14150:	add	r0, pc, r0
   14154:	movgt	r1, r0
   14158:	mov	r0, r4
   1415c:	mov	r2, r5
   14160:	bl	e414 <sendto_one_notice@plt>
   14164:	cmp	sl, #0
   14168:	bne	14078 <resv_chan_forcepart+0x4c>
   1416c:	sub	sp, fp, #28
   14170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14174:	.word	0x00046ad0
   14178:	.word	0x00046894
   1417c:	.word	0x0002cdc1
   14180:	.word	0x0002cd79
   14184:	.word	0x0002cd5b
   14188:	.word	0x0002cda4
   1418c:	.word	0x0002cd61

00014190 <rb_dlinkFindDelete>:
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	cmp	r1, #0
   1419c:	beq	14210 <rb_dlinkFindDelete+0x80>
   141a0:	mov	ip, r0
   141a4:	cmp	r0, #0
   141a8:	beq	14230 <rb_dlinkFindDelete+0xa0>
   141ac:	ldr	r3, [r1]
   141b0:	mov	r0, r3
   141b4:	cmp	r3, #0
   141b8:	beq	1420c <rb_dlinkFindDelete+0x7c>
   141bc:	ldr	r2, [r0]
   141c0:	ldr	r3, [r0, #8]
   141c4:	cmp	r2, ip
   141c8:	bne	141b0 <rb_dlinkFindDelete+0x20>
   141cc:	add	r2, r3, #4
   141d0:	cmp	r3, #0
   141d4:	addeq	r2, r1, #4
   141d8:	ldr	r3, [r0, #4]
   141dc:	str	r3, [r2]
   141e0:	ldmib	r0, {r2, ip}
   141e4:	cmp	r2, #0
   141e8:	mov	r3, r1
   141ec:	addne	r3, r2, #8
   141f0:	str	ip, [r3]
   141f4:	mov	r2, #0
   141f8:	str	r2, [r0, #4]
   141fc:	str	r2, [r0, #8]
   14200:	ldr	r2, [r1, #8]
   14204:	sub	r2, r2, #1
   14208:	str	r2, [r1, #8]
   1420c:	pop	{fp, pc}
   14210:	ldr	r0, [pc, #56]	; 14250 <rb_dlinkFindDelete+0xc0>
   14214:	add	r0, pc, r0
   14218:	ldr	r1, [pc, #52]	; 14254 <rb_dlinkFindDelete+0xc4>
   1421c:	add	r1, pc, r1
   14220:	ldr	r3, [pc, #48]	; 14258 <rb_dlinkFindDelete+0xc8>
   14224:	add	r3, pc, r3
   14228:	movw	r2, #258	; 0x102
   1422c:	bl	e7e0 <__assert_fail@plt>
   14230:	ldr	r0, [pc, #36]	; 1425c <rb_dlinkFindDelete+0xcc>
   14234:	add	r0, pc, r0
   14238:	ldr	r1, [pc, #32]	; 14260 <rb_dlinkFindDelete+0xd0>
   1423c:	add	r1, pc, r1
   14240:	ldr	r3, [pc, #28]	; 14264 <rb_dlinkFindDelete+0xd4>
   14244:	add	r3, pc, r3
   14248:	movw	r2, #259	; 0x103
   1424c:	bl	e7e0 <__assert_fail@plt>
   14250:	.word	0x00031f81
   14254:	.word	0x0002c6fa
   14258:	.word	0x0002cd32
   1425c:	.word	0x0002c73d
   14260:	.word	0x0002c6da
   14264:	.word	0x0002cd12

00014268 <construct_cflags_strings>:
   14268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1426c:	add	fp, sp, #28
   14270:	ldr	r0, [pc, #300]	; 143a4 <construct_cflags_strings+0x13c>
   14274:	ldr	r0, [pc, r0]
   14278:	mov	r2, #0
   1427c:	strb	r2, [r0]
   14280:	ldr	r1, [pc, #288]	; 143a8 <construct_cflags_strings+0x140>
   14284:	ldr	r1, [pc, r1]
   14288:	strb	r2, [r1]
   1428c:	ldr	r3, [pc, #280]	; 143ac <construct_cflags_strings+0x144>
   14290:	ldr	r3, [pc, r3]
   14294:	ldr	ip, [pc, #276]	; 143b0 <construct_cflags_strings+0x148>
   14298:	ldr	ip, [pc, ip]
   1429c:	ldr	lr, [pc, #272]	; 143b4 <construct_cflags_strings+0x14c>
   142a0:	ldr	lr, [pc, lr]
   142a4:	ldr	r4, [pc, #268]	; 143b8 <construct_cflags_strings+0x150>
   142a8:	ldr	r4, [pc, r4]
   142ac:	ldr	r5, [pc, #264]	; 143bc <construct_cflags_strings+0x154>
   142b0:	ldr	r5, [pc, r5]
   142b4:	ldr	r7, [pc, #260]	; 143c0 <construct_cflags_strings+0x158>
   142b8:	ldr	r7, [pc, r7]
   142bc:	ldr	r9, [pc, #256]	; 143c4 <construct_cflags_strings+0x15c>
   142c0:	ldr	r9, [pc, r9]
   142c4:	b	142e8 <construct_cflags_strings+0x80>
   142c8:	strb	r2, [r1], #1
   142cc:	ldr	r6, [r3, r2, lsl #3]
   142d0:	cmp	r6, r4
   142d4:	cmpne	r6, r5
   142d8:	strbne	r2, [r0], #1
   142dc:	add	r2, r2, #1
   142e0:	cmp	r2, #256	; 0x100
   142e4:	beq	14394 <construct_cflags_strings+0x12c>
   142e8:	ldr	sl, [r3, r2, lsl #3]
   142ec:	cmp	sl, ip
   142f0:	mov	r8, #0
   142f4:	beq	14364 <construct_cflags_strings+0xfc>
   142f8:	cmp	sl, r7
   142fc:	mov	r8, #0
   14300:	beq	14364 <construct_cflags_strings+0xfc>
   14304:	cmp	sl, r9
   14308:	mov	r8, #0
   1430c:	beq	14364 <construct_cflags_strings+0xfc>
   14310:	ldr	r6, [pc, #176]	; 143c8 <construct_cflags_strings+0x160>
   14314:	ldr	r6, [pc, r6]
   14318:	cmp	sl, r6
   1431c:	mov	r8, #0
   14320:	beq	14364 <construct_cflags_strings+0xfc>
   14324:	ldr	r6, [pc, #160]	; 143cc <construct_cflags_strings+0x164>
   14328:	ldr	r6, [pc, r6]
   1432c:	cmp	sl, r6
   14330:	mov	r8, #0
   14334:	beq	14364 <construct_cflags_strings+0xfc>
   14338:	ldr	r6, [pc, #144]	; 143d0 <construct_cflags_strings+0x168>
   1433c:	ldr	r6, [pc, r6]
   14340:	cmp	sl, r6
   14344:	mov	r8, #0
   14348:	beq	14364 <construct_cflags_strings+0xfc>
   1434c:	ldr	r6, [pc, #128]	; 143d4 <construct_cflags_strings+0x16c>
   14350:	ldr	r6, [pc, r6]
   14354:	cmp	sl, r6
   14358:	mov	r8, #0
   1435c:	addne	r6, r3, r2, lsl #3
   14360:	ldrne	r8, [r6, #4]
   14364:	str	r8, [lr, r2, lsl #2]
   14368:	cmp	r8, #0
   1436c:	beq	142cc <construct_cflags_strings+0x64>
   14370:	cmp	r8, #8192	; 0x2000
   14374:	cmpne	r8, #4096	; 0x1000
   14378:	bne	142c8 <construct_cflags_strings+0x60>
   1437c:	ldr	r6, [pc, #84]	; 143d8 <construct_cflags_strings+0x170>
   14380:	ldr	r6, [pc, r6]
   14384:	ldr	r6, [r6, #8]
   14388:	cmp	r6, #0
   1438c:	strbne	r2, [r1], #1
   14390:	b	142cc <construct_cflags_strings+0x64>
   14394:	mov	r2, #0
   14398:	strb	r2, [r1]
   1439c:	strb	r2, [r0]
   143a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a4:	.word	0x000465e8
   143a8:	.word	0x0004665c
   143ac:	.word	0x00046804
   143b0:	.word	0x00046814
   143b4:	.word	0x00046844
   143b8:	.word	0x00046644
   143bc:	.word	0x000467ac
   143c0:	.word	0x000468a8
   143c4:	.word	0x00046874
   143c8:	.word	0x0004686c
   143cc:	.word	0x00046748
   143d0:	.word	0x00046814
   143d4:	.word	0x000466e0
   143d8:	.word	0x00046798

000143dc <chm_ban>:
   143dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143e0:	add	fp, sp, #28
   143e4:	sub	sp, sp, #236	; 0xec
   143e8:	mov	r7, r1
   143ec:	str	r0, [sp, #32]
   143f0:	ldr	r9, [fp, #28]
   143f4:	ldr	ip, [fp, #24]
   143f8:	ldr	r5, [fp, #20]
   143fc:	ldr	r8, [fp, #16]
   14400:	ldr	r0, [fp, #12]
   14404:	ldr	sl, [fp, #8]
   14408:	cmn	r9, #-536870911	; 0xe0000001
   1440c:	bgt	14450 <chm_ban+0x74>
   14410:	cmp	r9, #-2147483648	; 0x80000000
   14414:	beq	144c4 <chm_ban+0xe8>
   14418:	cmp	r9, #268435456	; 0x10000000
   1441c:	bne	146ec <chm_ban+0x310>
   14420:	str	r0, [sp, #24]
   14424:	add	lr, r7, #160	; 0xa0
   14428:	mov	r4, #0
   1442c:	ldr	r0, [pc, #1760]	; 14b14 <chm_ban+0x738>
   14430:	add	r0, pc, r0
   14434:	str	r0, [sp, #28]
   14438:	ldr	r6, [pc, #1752]	; 14b18 <chm_ban+0x73c>
   1443c:	add	r6, pc, r6
   14440:	mov	r0, #16
   14444:	cmp	r5, #0
   14448:	bne	14554 <chm_ban+0x178>
   1444c:	b	1461c <chm_ban+0x240>
   14450:	cmp	r9, #536870912	; 0x20000000
   14454:	beq	144f4 <chm_ban+0x118>
   14458:	cmp	r9, #1073741824	; 0x40000000
   1445c:	bne	146ec <chm_ban+0x310>
   14460:	str	r0, [sp, #24]
   14464:	ldr	r0, [pc, #1712]	; 14b1c <chm_ban+0x740>
   14468:	ldr	r0, [pc, r0]
   1446c:	ldr	r0, [r0, #4]
   14470:	cmp	r0, #0
   14474:	bne	14488 <chm_ban+0xac>
   14478:	ldr	r1, [sp, #32]
   1447c:	ldrb	r1, [r1, #65]	; 0x41
   14480:	tst	r1, #32
   14484:	bne	14734 <chm_ban+0x358>
   14488:	mov	r4, #32
   1448c:	cmp	r0, #0
   14490:	movwne	r4, #2
   14494:	cmn	r5, #1
   14498:	movweq	r4, #2
   1449c:	add	lr, r7, #184	; 0xb8
   144a0:	ldr	r0, [pc, #1656]	; 14b20 <chm_ban+0x744>
   144a4:	add	r0, pc, r0
   144a8:	str	r0, [sp, #28]
   144ac:	ldr	r6, [pc, #1648]	; 14b24 <chm_ban+0x748>
   144b0:	add	r6, pc, r6
   144b4:	mov	r0, #256	; 0x100
   144b8:	cmp	r5, #0
   144bc:	bne	14554 <chm_ban+0x178>
   144c0:	b	1461c <chm_ban+0x240>
   144c4:	str	r0, [sp, #24]
   144c8:	add	lr, r7, #196	; 0xc4
   144cc:	mov	r4, #0
   144d0:	ldr	r0, [pc, #1632]	; 14b38 <chm_ban+0x75c>
   144d4:	add	r0, pc, r0
   144d8:	str	r0, [sp, #28]
   144dc:	ldr	r6, [pc, #1624]	; 14b3c <chm_ban+0x760>
   144e0:	add	r6, pc, r6
   144e4:	mov	r0, #2048	; 0x800
   144e8:	cmp	r5, #0
   144ec:	bne	14554 <chm_ban+0x178>
   144f0:	b	1461c <chm_ban+0x240>
   144f4:	str	r0, [sp, #24]
   144f8:	ldr	r0, [pc, #1576]	; 14b28 <chm_ban+0x74c>
   144fc:	ldr	r0, [pc, r0]
   14500:	ldr	r1, [r0]
   14504:	cmp	r1, #0
   14508:	bne	1451c <chm_ban+0x140>
   1450c:	ldr	r0, [sp, #32]
   14510:	ldrb	r0, [r0, #65]	; 0x41
   14514:	tst	r0, #32
   14518:	bne	1475c <chm_ban+0x380>
   1451c:	mov	r0, #32
   14520:	cmp	r1, #0
   14524:	mov	r4, #32
   14528:	movwne	r4, #2
   1452c:	cmn	r5, #1
   14530:	movweq	r4, #2
   14534:	add	lr, r7, #172	; 0xac
   14538:	ldr	r1, [pc, #1516]	; 14b2c <chm_ban+0x750>
   1453c:	add	r1, pc, r1
   14540:	str	r1, [sp, #28]
   14544:	ldr	r6, [pc, #1508]	; 14b30 <chm_ban+0x754>
   14548:	add	r6, pc, r6
   1454c:	cmp	r5, #0
   14550:	beq	1461c <chm_ban+0x240>
   14554:	ldr	r1, [sl]
   14558:	cmp	r1, r3
   1455c:	bge	1461c <chm_ban+0x240>
   14560:	str	r4, [sp, #20]
   14564:	str	ip, [sp]
   14568:	ldr	r0, [sp, #32]
   1456c:	mov	r1, r7
   14570:	mov	r3, r8
   14574:	str	ip, [sp, #28]
   14578:	mov	r4, lr
   1457c:	mov	r8, r7
   14580:	bl	1615c <allow_mode_change>
   14584:	cmp	r0, #0
   14588:	beq	14628 <chm_ban+0x24c>
   1458c:	ldr	r7, [sp, #32]
   14590:	ldr	r0, [r7, #64]!	; 0x40
   14594:	ands	r0, r0, #8192	; 0x2000
   14598:	beq	145cc <chm_ban+0x1f0>
   1459c:	ldr	r1, [sp, #32]
   145a0:	ldrh	r1, [r1, #80]	; 0x50
   145a4:	cmp	r1, #64	; 0x40
   145a8:	bne	145cc <chm_ban+0x1f0>
   145ac:	ldr	r1, [pc, #1440]	; 14b54 <chm_ban+0x778>
   145b0:	ldr	r1, [pc, r1]
   145b4:	add	r2, r1, #1
   145b8:	ldr	r3, [pc, #1432]	; 14b58 <chm_ban+0x77c>
   145bc:	add	r3, pc, r3
   145c0:	str	r2, [r3]
   145c4:	cmp	r1, #3
   145c8:	bgt	14628 <chm_ban+0x24c>
   145cc:	ldr	r1, [sl]
   145d0:	ldr	r2, [sp, #24]
   145d4:	ldr	r6, [r2, r1, lsl #2]
   145d8:	add	r1, r1, #1
   145dc:	str	r1, [sl]
   145e0:	cmp	r6, #0
   145e4:	beq	14628 <chm_ban+0x24c>
   145e8:	ldrb	r1, [r6]
   145ec:	cmp	r1, #0
   145f0:	cmpne	r1, #58	; 0x3a
   145f4:	beq	14628 <chm_ban+0x24c>
   145f8:	cmp	r0, #0
   145fc:	beq	147c8 <chm_ban+0x3ec>
   14600:	ldr	r0, [sp, #32]
   14604:	ldrh	r0, [r0, #80]	; 0x50
   14608:	cmp	r0, #64	; 0x40
   1460c:	bne	147c8 <chm_ban+0x3ec>
   14610:	mov	r0, r6
   14614:	bl	1672c <pretty_mask>
   14618:	b	147e0 <chm_ban+0x404>
   1461c:	ldr	r1, [r8]
   14620:	tst	r1, r0
   14624:	beq	14630 <chm_ban+0x254>
   14628:	sub	sp, fp, #28
   1462c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14630:	orr	r0, r1, r0
   14634:	str	r0, [r8]
   14638:	cmp	r2, #1
   1463c:	bgt	1464c <chm_ban+0x270>
   14640:	cmp	r9, #-2147483648	; 0x80000000
   14644:	cmpne	r9, #268435456	; 0x10000000
   14648:	bne	14784 <chm_ban+0x3a8>
   1464c:	mov	r9, r7
   14650:	ldr	sl, [lr]
   14654:	cmp	sl, #0
   14658:	beq	14708 <chm_ban+0x32c>
   1465c:	ldr	r0, [sp, #32]
   14660:	add	r7, r0, #88	; 0x58
   14664:	add	r4, sp, #37	; 0x25
   14668:	ldr	r0, [pc, #1240]	; 14b48 <chm_ban+0x76c>
   1466c:	ldr	r0, [pc, r0]
   14670:	add	r5, r0, #88	; 0x58
   14674:	b	146bc <chm_ban+0x2e0>
   14678:	mov	r0, r4
   1467c:	mov	r1, r3
   14680:	mov	r2, #195	; 0xc3
   14684:	bl	e510 <rb_strlcpy@plt>
   14688:	ldr	r0, [r9, #236]	; 0xec
   1468c:	ldmib	r8, {r1, r2}
   14690:	stm	sp, {r0, r4}
   14694:	str	r1, [sp, #8]
   14698:	str	r2, [sp, #12]
   1469c:	ldr	r0, [sp, #32]
   146a0:	mov	r1, r6
   146a4:	mov	r2, r5
   146a8:	mov	r3, r7
   146ac:	bl	d1e4 <sendto_one@plt>
   146b0:	ldr	sl, [sl, #8]
   146b4:	cmp	sl, #0
   146b8:	beq	14708 <chm_ban+0x32c>
   146bc:	ldr	r8, [sl]
   146c0:	ldr	r3, [r8]
   146c4:	ldr	r0, [r8, #12]
   146c8:	cmp	r0, #0
   146cc:	beq	14678 <chm_ban+0x29c>
   146d0:	str	r0, [sp]
   146d4:	mov	r0, r4
   146d8:	mov	r1, #195	; 0xc3
   146dc:	ldr	r2, [pc, #1128]	; 14b4c <chm_ban+0x770>
   146e0:	add	r2, pc, r2
   146e4:	bl	de74 <snprintf@plt>
   146e8:	b	14688 <chm_ban+0x2ac>
   146ec:	ldr	r2, [pc, #1088]	; 14b34 <chm_ban+0x758>
   146f0:	add	r2, pc, r2
   146f4:	mov	r0, #256	; 0x100
   146f8:	mov	r1, #0
   146fc:	sub	sp, fp, #28
   14700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14704:	b	d634 <sendto_realops_snomask@plt>
   14708:	ldr	r0, [r9, #236]	; 0xec
   1470c:	str	r0, [sp]
   14710:	ldr	r0, [sp, #32]
   14714:	add	r3, r0, #88	; 0x58
   14718:	ldr	r1, [pc, #1072]	; 14b50 <chm_ban+0x774>
   1471c:	ldr	r1, [pc, r1]
   14720:	add	r2, r1, #88	; 0x58
   14724:	ldr	r1, [sp, #28]
   14728:	bl	d1e4 <sendto_one@plt>
   1472c:	sub	sp, fp, #28
   14730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14734:	cmp	r5, #1
   14738:	bne	14488 <chm_ban+0xac>
   1473c:	ldr	r1, [sp, #32]
   14740:	ldrh	r1, [r1, #80]	; 0x50
   14744:	cmp	r1, #64	; 0x40
   14748:	bne	14488 <chm_ban+0xac>
   1474c:	ldr	r1, [sl]
   14750:	cmp	r1, r3
   14754:	bge	14488 <chm_ban+0xac>
   14758:	b	14628 <chm_ban+0x24c>
   1475c:	cmp	r5, #1
   14760:	bne	1451c <chm_ban+0x140>
   14764:	ldr	r0, [sp, #32]
   14768:	ldrh	r0, [r0, #80]	; 0x50
   1476c:	cmp	r0, #64	; 0x40
   14770:	bne	1451c <chm_ban+0x140>
   14774:	ldr	r0, [sl]
   14778:	cmp	r0, r3
   1477c:	bge	1451c <chm_ban+0x140>
   14780:	b	14628 <chm_ban+0x24c>
   14784:	tst	r1, #2
   14788:	bne	147b4 <chm_ban+0x3d8>
   1478c:	ldr	r0, [r7, #236]	; 0xec
   14790:	str	r0, [sp]
   14794:	ldr	r0, [sp, #32]
   14798:	add	r3, r0, #88	; 0x58
   1479c:	ldr	r1, [pc, #924]	; 14b40 <chm_ban+0x764>
   147a0:	ldr	r1, [pc, r1]
   147a4:	add	r2, r1, #88	; 0x58
   147a8:	ldr	r1, [pc, #916]	; 14b44 <chm_ban+0x768>
   147ac:	add	r1, pc, r1
   147b0:	bl	d1e4 <sendto_one@plt>
   147b4:	ldr	r0, [r8]
   147b8:	orr	r0, r0, #2
   147bc:	str	r0, [r8]
   147c0:	sub	sp, fp, #28
   147c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147c8:	mov	r0, r6
   147cc:	mov	r1, #32
   147d0:	bl	dce8 <strchr@plt>
   147d4:	cmp	r0, #0
   147d8:	mov	r0, r6
   147dc:	bne	14628 <chm_ban+0x24c>
   147e0:	mov	sl, r0
   147e4:	bl	dc94 <strlen@plt>
   147e8:	cmp	r0, #196	; 0xc4
   147ec:	bcc	1481c <chm_ban+0x440>
   147f0:	ldr	r3, [r8, #236]	; 0xec
   147f4:	ldr	r0, [sp, #28]
   147f8:	str	r0, [sp]
   147fc:	str	r6, [sp, #4]
   14800:	ldr	r2, [pc, #852]	; 14b5c <chm_ban+0x780>
   14804:	add	r2, pc, r2
   14808:	ldr	r0, [sp, #32]
   1480c:	movw	r1, #743	; 0x2e7
   14810:	bl	dc7c <sendto_one_numeric@plt>
   14814:	sub	sp, fp, #28
   14818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1481c:	str	sl, [sp, #24]
   14820:	add	r0, sl, #1
   14824:	mov	r1, #36	; 0x24
   14828:	bl	dce8 <strchr@plt>
   1482c:	cmp	r0, #0
   14830:	beq	14850 <chm_ban+0x474>
   14834:	mov	sl, r0
   14838:	mov	r0, #0
   1483c:	strb	r0, [sl]
   14840:	ldrb	r0, [sl, #1]!
   14844:	cmp	r0, #0
   14848:	moveq	sl, r0
   1484c:	b	14854 <chm_ban+0x478>
   14850:	mov	sl, #0
   14854:	mov	r2, r4
   14858:	cmn	r5, #1
   1485c:	mov	ip, r8
   14860:	ldr	lr, [sp, #24]
   14864:	beq	1491c <chm_ban+0x540>
   14868:	cmp	r5, #1
   1486c:	bne	14628 <chm_ban+0x24c>
   14870:	ldrb	r0, [lr]
   14874:	cmp	r0, #36	; 0x24
   14878:	bne	148c4 <chm_ban+0x4e8>
   1487c:	ldrb	r0, [r7, #1]
   14880:	tst	r0, #32
   14884:	beq	148c4 <chm_ban+0x4e8>
   14888:	ldr	r0, [sp, #32]
   1488c:	ldrh	r0, [r0, #80]	; 0x50
   14890:	cmp	r0, #64	; 0x40
   14894:	bne	148c4 <chm_ban+0x4e8>
   14898:	mov	r0, lr
   1489c:	ldr	r1, [sp, #32]
   148a0:	mov	r2, ip
   148a4:	mov	r3, r9
   148a8:	bl	dcdc <valid_extban@plt>
   148ac:	ldr	lr, [sp, #24]
   148b0:	mov	ip, r8
   148b4:	mov	r2, r4
   148b8:	ldr	r1, [sp, #28]
   148bc:	cmp	r0, #0
   148c0:	beq	14a50 <chm_ban+0x674>
   148c4:	cmp	sl, #0
   148c8:	beq	14a8c <chm_ban+0x6b0>
   148cc:	ldrb	r0, [r7, #1]
   148d0:	tst	r0, #32
   148d4:	beq	14a8c <chm_ban+0x6b0>
   148d8:	ldr	r0, [sp, #32]
   148dc:	ldrh	r0, [r0, #80]	; 0x50
   148e0:	cmp	r0, #64	; 0x40
   148e4:	bne	14a8c <chm_ban+0x6b0>
   148e8:	ldr	r0, [pc, #624]	; 14b60 <chm_ban+0x784>
   148ec:	ldr	r0, [pc, r0]
   148f0:	ldr	r0, [r0, #8]
   148f4:	cmp	r0, #0
   148f8:	beq	14914 <chm_ban+0x538>
   148fc:	mov	r0, sl
   14900:	mov	r1, #36	; 0x24
   14904:	bl	dce8 <strchr@plt>
   14908:	mov	ip, r8
   1490c:	cmp	r0, #0
   14910:	beq	14a5c <chm_ban+0x680>
   14914:	ldr	r3, [ip, #236]	; 0xec
   14918:	b	147f4 <chm_ban+0x418>
   1491c:	ldr	r5, [pc, #588]	; 14b70 <chm_ban+0x794>
   14920:	ldr	r5, [pc, r5]
   14924:	mov	r0, ip
   14928:	mov	r1, lr
   1492c:	mov	r3, r9
   14930:	mov	r8, r2
   14934:	mov	r4, ip
   14938:	mov	sl, lr
   1493c:	bl	e2d0 <del_id@plt>
   14940:	cmp	r0, #0
   14944:	bne	14968 <chm_ban+0x58c>
   14948:	mov	r0, r4
   1494c:	mov	r1, r6
   14950:	mov	r2, r8
   14954:	mov	r3, r9
   14958:	bl	e2d0 <del_id@plt>
   1495c:	cmp	r0, #0
   14960:	movne	sl, r6
   14964:	beq	149c4 <chm_ban+0x5e8>
   14968:	mov	r7, r0
   1496c:	ldr	r4, [pc, #512]	; 14b74 <chm_ban+0x798>
   14970:	add	r4, pc, r4
   14974:	ldr	r0, [r0, #12]
   14978:	cmp	r0, #0
   1497c:	beq	149bc <chm_ban+0x5e0>
   14980:	ldr	r3, [r7]
   14984:	str	r0, [sp]
   14988:	add	r0, r4, r5
   1498c:	ldr	r2, [pc, #496]	; 14b84 <chm_ban+0x7a8>
   14990:	add	r2, pc, r2
   14994:	mov	r1, #780	; 0x30c
   14998:	bl	de74 <snprintf@plt>
   1499c:	ldr	r1, [pc, #484]	; 14b88 <chm_ban+0x7ac>
   149a0:	ldr	r1, [pc, r1]
   149a4:	add	r0, r0, r1
   149a8:	add	r0, r0, #1
   149ac:	ldr	r1, [pc, #472]	; 14b8c <chm_ban+0x7b0>
   149b0:	add	r1, pc, r1
   149b4:	str	r0, [r1]
   149b8:	b	14a08 <chm_ban+0x62c>
   149bc:	mov	r6, #1
   149c0:	b	149d4 <chm_ban+0x5f8>
   149c4:	mov	r6, #0
   149c8:	mov	r7, #0
   149cc:	ldr	r4, [pc, #420]	; 14b78 <chm_ban+0x79c>
   149d0:	add	r4, pc, r4
   149d4:	add	r0, r4, r5
   149d8:	mov	r1, sl
   149dc:	mov	r2, #780	; 0x30c
   149e0:	bl	e510 <rb_strlcpy@plt>
   149e4:	ldr	r1, [pc, #400]	; 14b7c <chm_ban+0x7a0>
   149e8:	ldr	r1, [pc, r1]
   149ec:	add	r0, r0, r1
   149f0:	add	r0, r0, #1
   149f4:	ldr	r1, [pc, #388]	; 14b80 <chm_ban+0x7a4>
   149f8:	add	r1, pc, r1
   149fc:	str	r0, [r1]
   14a00:	cmp	r6, #0
   14a04:	beq	14a10 <chm_ban+0x634>
   14a08:	mov	r0, r7
   14a0c:	bl	e438 <free_ban@plt>
   14a10:	ldr	r0, [pc, #376]	; 14b90 <chm_ban+0x7b4>
   14a14:	ldr	r0, [pc, r0]
   14a18:	add	r1, r0, r0, lsl #2
   14a1c:	ldr	r2, [pc, #368]	; 14b94 <chm_ban+0x7b8>
   14a20:	add	r2, pc, r2
   14a24:	ldr	r3, [sp, #28]
   14a28:	strb	r3, [r2, r1, lsl #2]!
   14a2c:	mvn	r1, #0
   14a30:	mov	r3, #0
   14a34:	add	r0, r0, #1
   14a38:	ldr	r7, [pc, #344]	; 14b98 <chm_ban+0x7bc>
   14a3c:	add	r7, pc, r7
   14a40:	str	r0, [r7]
   14a44:	add	r0, r4, r5
   14a48:	str	r0, [r2, #4]
   14a4c:	b	14af4 <chm_ban+0x718>
   14a50:	ldr	r3, [ip, #236]	; 0xec
   14a54:	str	r1, [sp]
   14a58:	b	147fc <chm_ban+0x420>
   14a5c:	ldr	r0, [sp, #32]
   14a60:	mov	r1, ip
   14a64:	mov	r2, sl
   14a68:	bl	16b84 <check_forward>
   14a6c:	cmp	r0, #0
   14a70:	ldr	r0, [sp, #28]
   14a74:	ldr	lr, [sp, #24]
   14a78:	beq	14628 <chm_ban+0x24c>
   14a7c:	mov	ip, r8
   14a80:	mov	r2, r4
   14a84:	cmp	r9, #268435456	; 0x10000000
   14a88:	bne	14b0c <chm_ban+0x730>
   14a8c:	stm	sp, {r2, r9}
   14a90:	ldr	r0, [sp, #32]
   14a94:	mov	r1, ip
   14a98:	mov	r2, lr
   14a9c:	mov	r3, sl
   14aa0:	bl	d100 <add_id@plt>
   14aa4:	ldr	r6, [sp, #24]
   14aa8:	ldr	r4, [sp, #28]
   14aac:	cmp	r0, #0
   14ab0:	beq	14628 <chm_ban+0x24c>
   14ab4:	cmp	sl, #0
   14ab8:	movne	r0, #36	; 0x24
   14abc:	strbne	r0, [sl, #-1]
   14ac0:	ldr	r0, [pc, #156]	; 14b64 <chm_ban+0x788>
   14ac4:	ldr	r0, [pc, r0]
   14ac8:	add	r1, r0, r0, lsl #2
   14acc:	ldr	r2, [pc, #148]	; 14b68 <chm_ban+0x78c>
   14ad0:	add	r2, pc, r2
   14ad4:	strb	r4, [r2, r1, lsl #2]!
   14ad8:	mov	r1, #1
   14adc:	mov	r3, #0
   14ae0:	add	r0, r0, #1
   14ae4:	ldr	r7, [pc, #128]	; 14b6c <chm_ban+0x790>
   14ae8:	add	r7, pc, r7
   14aec:	str	r0, [r7]
   14af0:	str	r6, [r2, #4]
   14af4:	str	r3, [r2, #8]
   14af8:	str	r1, [r2, #12]
   14afc:	ldr	r0, [sp, #20]
   14b00:	str	r0, [r2, #16]
   14b04:	sub	sp, fp, #28
   14b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b0c:	ldr	r3, [ip, #236]	; 0xec
   14b10:	b	147f8 <chm_ban+0x41c>
   14b14:	.word	0x0002cc67
   14b18:	.word	0x0002cc43
   14b1c:	.word	0x000466b0
   14b20:	.word	0x0002cc77
   14b24:	.word	0x0002cc53
   14b28:	.word	0x0004661c
   14b2c:	.word	0x0002cb9a
   14b30:	.word	0x0002cb76
   14b34:	.word	0x0002ca9a
   14b38:	.word	0x0002cc8b
   14b3c:	.word	0x0002cc65
   14b40:	.word	0x000463b8
   14b44:	.word	0x0002ca02
   14b48:	.word	0x000464ec
   14b4c:	.word	0x0002cafb
   14b50:	.word	0x0004643c
   14b54:	.word	0x00050204
   14b58:	.word	0x000501f8
   14b5c:	.word	0x0002c9dd
   14b60:	.word	0x0004622c
   14b64:	.word	0x0004fcec
   14b68:	.word	0x0004d4e0
   14b6c:	.word	0x0004fcc8
   14b70:	.word	0x000501a4
   14b74:	.word	0x0004fe48
   14b78:	.word	0x0004fde8
   14b7c:	.word	0x000500dc
   14b80:	.word	0x000500cc
   14b84:	.word	0x0002c84b
   14b88:	.word	0x00050124
   14b8c:	.word	0x00050114
   14b90:	.word	0x0004fd9c
   14b94:	.word	0x0004d590
   14b98:	.word	0x0004fd74

00014b9c <chm_forward>:
   14b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ba0:	add	fp, sp, #28
   14ba4:	sub	sp, sp, #4
   14ba8:	mov	r6, r3
   14bac:	mov	r4, r1
   14bb0:	mov	r5, r0
   14bb4:	ldr	r0, [pc, #576]	; 14dfc <chm_forward+0x260>
   14bb8:	ldr	r0, [pc, r0]
   14bbc:	ldr	r0, [r0, #8]
   14bc0:	ldr	r9, [fp, #20]
   14bc4:	ldr	r7, [fp, #16]
   14bc8:	ldr	sl, [fp, #8]
   14bcc:	cmp	r0, #0
   14bd0:	bne	14bf0 <chm_forward+0x54>
   14bd4:	ldrb	r0, [r5, #65]	; 0x41
   14bd8:	tst	r0, #32
   14bdc:	beq	14bf0 <chm_forward+0x54>
   14be0:	cmp	r9, #1
   14be4:	ldrheq	r0, [r5, #80]	; 0x50
   14be8:	cmpeq	r0, #64	; 0x40
   14bec:	beq	14de8 <chm_forward+0x24c>
   14bf0:	cmp	r9, #0
   14bf4:	beq	14d2c <chm_forward+0x190>
   14bf8:	mov	r8, #0
   14bfc:	cmp	r9, #1
   14c00:	bne	14c14 <chm_forward+0x78>
   14c04:	ldr	r0, [sl]
   14c08:	mov	r8, #1
   14c0c:	cmp	r0, r6
   14c10:	bge	14d2c <chm_forward+0x190>
   14c14:	ldr	r0, [fp, #24]
   14c18:	str	r0, [sp]
   14c1c:	mov	r0, r5
   14c20:	mov	r1, r4
   14c24:	mov	r3, r7
   14c28:	bl	1615c <allow_mode_change>
   14c2c:	cmp	r0, #0
   14c30:	beq	14df4 <chm_forward+0x258>
   14c34:	ldrb	r0, [r5, #65]	; 0x41
   14c38:	tst	r0, #32
   14c3c:	beq	14c6c <chm_forward+0xd0>
   14c40:	ldrh	r0, [r5, #80]	; 0x50
   14c44:	cmp	r0, #64	; 0x40
   14c48:	bne	14c6c <chm_forward+0xd0>
   14c4c:	ldr	r0, [pc, #436]	; 14e08 <chm_forward+0x26c>
   14c50:	ldr	r0, [pc, r0]
   14c54:	add	r1, r0, #1
   14c58:	ldr	r2, [pc, #428]	; 14e0c <chm_forward+0x270>
   14c5c:	add	r2, pc, r2
   14c60:	str	r1, [r2]
   14c64:	cmp	r0, #45	; 0x2d
   14c68:	bgt	14df4 <chm_forward+0x258>
   14c6c:	cmp	r8, #0
   14c70:	beq	14d60 <chm_forward+0x1c4>
   14c74:	ldr	r0, [sl]
   14c78:	cmp	r0, r6
   14c7c:	bge	14d60 <chm_forward+0x1c4>
   14c80:	ldr	r1, [fp, #12]
   14c84:	ldr	r6, [r1, r0, lsl #2]
   14c88:	add	r0, r0, #1
   14c8c:	str	r0, [sl]
   14c90:	cmp	r6, #0
   14c94:	beq	14df4 <chm_forward+0x258>
   14c98:	ldrb	r0, [r6]
   14c9c:	cmp	r0, #0
   14ca0:	beq	14df4 <chm_forward+0x258>
   14ca4:	mov	r0, r5
   14ca8:	mov	r1, r4
   14cac:	mov	r2, r6
   14cb0:	bl	16b84 <check_forward>
   14cb4:	cmp	r0, #0
   14cb8:	beq	14df4 <chm_forward+0x258>
   14cbc:	add	r0, r4, #52	; 0x34
   14cc0:	mov	r1, r6
   14cc4:	mov	r2, #51	; 0x33
   14cc8:	bl	e510 <rb_strlcpy@plt>
   14ccc:	ldr	r0, [pc, #316]	; 14e10 <chm_forward+0x274>
   14cd0:	ldr	r0, [pc, r0]
   14cd4:	add	r1, r0, r0, lsl #2
   14cd8:	ldr	r2, [pc, #308]	; 14e14 <chm_forward+0x278>
   14cdc:	add	r2, pc, r2
   14ce0:	ldr	r3, [fp, #24]
   14ce4:	strb	r3, [r2, r1, lsl #2]!
   14ce8:	mov	r1, #1
   14cec:	ldr	r3, [pc, #292]	; 14e18 <chm_forward+0x27c>
   14cf0:	ldr	r3, [pc, r3]
   14cf4:	ldr	r3, [r3, #8]
   14cf8:	mov	r7, #0
   14cfc:	clz	r3, r3
   14d00:	lsr	r3, r3, #5
   14d04:	lsl	r3, r3, #5
   14d08:	add	r0, r0, #1
   14d0c:	ldr	r5, [pc, #264]	; 14e1c <chm_forward+0x280>
   14d10:	add	r5, pc, r5
   14d14:	str	r0, [r5]
   14d18:	stmib	r2, {r6, r7}
   14d1c:	str	r1, [r2, #12]
   14d20:	str	r3, [r2, #16]
   14d24:	sub	sp, fp, #28
   14d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d2c:	ldrb	r0, [r7, #1]
   14d30:	tst	r0, #16
   14d34:	bne	14df4 <chm_forward+0x258>
   14d38:	ldrb	r0, [r4, #52]!	; 0x34
   14d3c:	ldr	r2, [r4, #184]	; 0xb8
   14d40:	cmp	r0, #0
   14d44:	beq	14dc4 <chm_forward+0x228>
   14d48:	ldr	r1, [pc, #180]	; 14e04 <chm_forward+0x268>
   14d4c:	add	r1, pc, r1
   14d50:	mov	r0, r5
   14d54:	mov	r3, r4
   14d58:	bl	e414 <sendto_one_notice@plt>
   14d5c:	b	14dd4 <chm_forward+0x238>
   14d60:	cmn	r9, #1
   14d64:	bne	14df4 <chm_forward+0x258>
   14d68:	ldrb	r0, [r4, #52]	; 0x34
   14d6c:	cmp	r0, #0
   14d70:	beq	14df4 <chm_forward+0x258>
   14d74:	mov	r0, #0
   14d78:	strb	r0, [r4, #52]	; 0x34
   14d7c:	ldr	r1, [pc, #156]	; 14e20 <chm_forward+0x284>
   14d80:	ldr	r1, [pc, r1]
   14d84:	add	r2, r1, r1, lsl #2
   14d88:	ldr	r3, [pc, #148]	; 14e24 <chm_forward+0x288>
   14d8c:	add	r3, pc, r3
   14d90:	ldr	r7, [fp, #24]
   14d94:	strb	r7, [r3, r2, lsl #2]!
   14d98:	mvn	r2, #0
   14d9c:	add	r1, r1, #1
   14da0:	ldr	r7, [pc, #128]	; 14e28 <chm_forward+0x28c>
   14da4:	add	r7, pc, r7
   14da8:	str	r1, [r7]
   14dac:	str	r0, [r3, #4]
   14db0:	str	r0, [r3, #8]
   14db4:	str	r2, [r3, #12]
   14db8:	str	r0, [r3, #16]
   14dbc:	sub	sp, fp, #28
   14dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc4:	ldr	r1, [pc, #52]	; 14e00 <chm_forward+0x264>
   14dc8:	add	r1, pc, r1
   14dcc:	mov	r0, r5
   14dd0:	bl	e414 <sendto_one_notice@plt>
   14dd4:	ldr	r0, [r7]
   14dd8:	orr	r0, r0, #4096	; 0x1000
   14ddc:	str	r0, [r7]
   14de0:	sub	sp, fp, #28
   14de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14de8:	ldr	r0, [sl]
   14dec:	cmp	r0, r6
   14df0:	bge	14c04 <chm_forward+0x68>
   14df4:	sub	sp, fp, #28
   14df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dfc:	.word	0x00045f60
   14e00:	.word	0x0002c4a8
   14e04:	.word	0x0002c53f
   14e08:	.word	0x0004d35c
   14e0c:	.word	0x0004d350
   14e10:	.word	0x0004fae0
   14e14:	.word	0x0004d2d4
   14e18:	.word	0x00045e28
   14e1c:	.word	0x0004faa0
   14e20:	.word	0x0004fa30
   14e24:	.word	0x0004d224
   14e28:	.word	0x0004fa0c

00014e2c <chm_throttle>:
   14e2c:	push	{r4, r5, r6, r7, fp, lr}
   14e30:	add	fp, sp, #16
   14e34:	sub	sp, sp, #16
   14e38:	mov	r5, r3
   14e3c:	mov	r4, r1
   14e40:	mov	r6, r0
   14e44:	mov	r0, #0
   14e48:	str	r0, [sp, #12]
   14e4c:	str	r0, [sp, #8]
   14e50:	ldr	r7, [fp, #24]
   14e54:	str	r7, [sp]
   14e58:	ldr	r3, [fp, #16]
   14e5c:	mov	r0, r6
   14e60:	bl	1615c <allow_mode_change>
   14e64:	ldr	r1, [fp, #20]
   14e68:	cmp	r1, #0
   14e6c:	cmpne	r0, #0
   14e70:	bne	14e7c <chm_throttle+0x50>
   14e74:	sub	sp, fp, #16
   14e78:	pop	{r4, r5, r6, r7, fp, pc}
   14e7c:	ldrb	r0, [r6, #65]	; 0x41
   14e80:	tst	r0, #32
   14e84:	beq	14eb4 <chm_throttle+0x88>
   14e88:	ldrh	r0, [r6, #80]	; 0x50
   14e8c:	cmp	r0, #64	; 0x40
   14e90:	bne	14eb4 <chm_throttle+0x88>
   14e94:	ldr	r0, [pc, #308]	; 14fd0 <chm_throttle+0x1a4>
   14e98:	ldr	r0, [pc, r0]
   14e9c:	add	r2, r0, #1
   14ea0:	ldr	r3, [pc, #300]	; 14fd4 <chm_throttle+0x1a8>
   14ea4:	add	r3, pc, r3
   14ea8:	str	r2, [r3]
   14eac:	cmp	r0, #45	; 0x2d
   14eb0:	bgt	14e74 <chm_throttle+0x48>
   14eb4:	cmn	r1, #1
   14eb8:	beq	14f6c <chm_throttle+0x140>
   14ebc:	cmp	r1, #1
   14ec0:	bne	14e74 <chm_throttle+0x48>
   14ec4:	ldr	r6, [fp, #8]
   14ec8:	ldr	r0, [r6]
   14ecc:	cmp	r0, r5
   14ed0:	bge	14e74 <chm_throttle+0x48>
   14ed4:	ldr	r5, [fp, #12]
   14ed8:	ldr	r0, [r5, r0, lsl #2]
   14edc:	ldr	r1, [pc, #244]	; 14fd8 <chm_throttle+0x1ac>
   14ee0:	add	r1, pc, r1
   14ee4:	add	r2, sp, #12
   14ee8:	add	r3, sp, #8
   14eec:	bl	de8c <__isoc99_sscanf@plt>
   14ef0:	cmp	r0, #2
   14ef4:	blt	14e74 <chm_throttle+0x48>
   14ef8:	ldr	r0, [sp, #12]
   14efc:	cmp	r0, #1
   14f00:	ldrge	r1, [sp, #8]
   14f04:	cmpge	r1, #1
   14f08:	blt	14e74 <chm_throttle+0x48>
   14f0c:	ldr	r2, [pc, #200]	; 14fdc <chm_throttle+0x1b0>
   14f10:	ldr	r2, [pc, r2]
   14f14:	add	ip, r2, r2, lsl #2
   14f18:	ldr	r3, [pc, #192]	; 14fe0 <chm_throttle+0x1b4>
   14f1c:	add	r3, pc, r3
   14f20:	strb	r7, [r3, ip, lsl #2]!
   14f24:	mov	ip, #0
   14f28:	str	ip, [r3, #16]
   14f2c:	mov	r7, #1
   14f30:	str	r7, [r3, #12]
   14f34:	str	ip, [r3, #8]
   14f38:	ldr	r7, [r6]
   14f3c:	ldr	ip, [r5, r7, lsl #2]
   14f40:	add	r2, r2, #1
   14f44:	ldr	r5, [pc, #152]	; 14fe4 <chm_throttle+0x1b8>
   14f48:	add	r5, pc, r5
   14f4c:	str	r2, [r5]
   14f50:	str	ip, [r3, #4]
   14f54:	add	r2, r7, #1
   14f58:	str	r2, [r6]
   14f5c:	str	r0, [r4, #44]	; 0x2c
   14f60:	str	r1, [r4, #48]	; 0x30
   14f64:	sub	sp, fp, #16
   14f68:	pop	{r4, r5, r6, r7, fp, pc}
   14f6c:	ldr	r0, [r4, #44]	; 0x2c
   14f70:	cmp	r0, #0
   14f74:	beq	14e74 <chm_throttle+0x48>
   14f78:	mov	r0, #0
   14f7c:	str	r0, [r4, #220]	; 0xdc
   14f80:	str	r0, [r4, #224]	; 0xe0
   14f84:	str	r0, [r4, #44]	; 0x2c
   14f88:	str	r0, [r4, #48]	; 0x30
   14f8c:	ldr	r1, [pc, #84]	; 14fe8 <chm_throttle+0x1bc>
   14f90:	ldr	r1, [pc, r1]
   14f94:	add	r2, r1, r1, lsl #2
   14f98:	ldr	r3, [pc, #76]	; 14fec <chm_throttle+0x1c0>
   14f9c:	add	r3, pc, r3
   14fa0:	strb	r7, [r3, r2, lsl #2]!
   14fa4:	mvn	r2, #0
   14fa8:	add	r1, r1, #1
   14fac:	ldr	r7, [pc, #60]	; 14ff0 <chm_throttle+0x1c4>
   14fb0:	add	r7, pc, r7
   14fb4:	str	r1, [r7]
   14fb8:	str	r0, [r3, #4]
   14fbc:	str	r0, [r3, #8]
   14fc0:	str	r2, [r3, #12]
   14fc4:	str	r0, [r3, #16]
   14fc8:	sub	sp, fp, #16
   14fcc:	pop	{r4, r5, r6, r7, fp, pc}
   14fd0:	.word	0x0004d114
   14fd4:	.word	0x0004d108
   14fd8:	.word	0x0002bcec
   14fdc:	.word	0x0004f8a0
   14fe0:	.word	0x0004d094
   14fe4:	.word	0x0004f868
   14fe8:	.word	0x0004f820
   14fec:	.word	0x0004d014
   14ff0:	.word	0x0004f800

00014ff4 <chm_key>:
   14ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ff8:	add	fp, sp, #28
   14ffc:	sub	sp, sp, #4
   15000:	mov	r6, r3
   15004:	mov	r4, r1
   15008:	mov	r5, r0
   1500c:	sub	sp, sp, #8
   15010:	ldr	r8, [fp, #24]
   15014:	str	r8, [sp]
   15018:	ldr	r3, [fp, #16]
   1501c:	bl	1615c <allow_mode_change>
   15020:	add	sp, sp, #8
   15024:	ldr	r1, [fp, #20]
   15028:	cmp	r1, #0
   1502c:	cmpne	r0, #0
   15030:	bne	1503c <chm_key+0x48>
   15034:	sub	sp, fp, #28
   15038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1503c:	ldrb	r0, [r5, #65]	; 0x41
   15040:	tst	r0, #32
   15044:	beq	15074 <chm_key+0x80>
   15048:	ldrh	r0, [r5, #80]	; 0x50
   1504c:	cmp	r0, #64	; 0x40
   15050:	bne	15074 <chm_key+0x80>
   15054:	ldr	r0, [pc, #456]	; 15224 <chm_key+0x230>
   15058:	ldr	r0, [pc, r0]
   1505c:	add	r2, r0, #1
   15060:	ldr	r3, [pc, #448]	; 15228 <chm_key+0x234>
   15064:	add	r3, pc, r3
   15068:	str	r2, [r3]
   1506c:	cmp	r0, #45	; 0x2d
   15070:	bgt	15034 <chm_key+0x40>
   15074:	ldr	r7, [fp, #8]
   15078:	cmn	r1, #1
   1507c:	beq	150f4 <chm_key+0x100>
   15080:	cmp	r1, #1
   15084:	bne	15034 <chm_key+0x40>
   15088:	ldr	r0, [r7]
   1508c:	cmp	r0, r6
   15090:	bge	15034 <chm_key+0x40>
   15094:	ldr	r1, [fp, #12]
   15098:	add	sl, r5, #64	; 0x40
   1509c:	ldr	r9, [r1, r0, lsl #2]
   150a0:	mov	r0, r9
   150a4:	bl	dc94 <strlen@plt>
   150a8:	add	r0, r0, #8
   150ac:	bic	r0, r0, #7
   150b0:	sub	r6, sp, r0
   150b4:	mov	sp, r6
   150b8:	mov	r0, r6
   150bc:	mov	r1, r9
   150c0:	bl	d91c <strcpy@plt>
   150c4:	ldr	r0, [r7]
   150c8:	add	r0, r0, #1
   150cc:	str	r0, [r7]
   150d0:	ldrb	r0, [sl, #1]
   150d4:	tst	r0, #32
   150d8:	beq	151b4 <chm_key+0x1c0>
   150dc:	ldrh	r0, [r5, #80]	; 0x50
   150e0:	cmp	r0, #64	; 0x40
   150e4:	bne	151b4 <chm_key+0x1c0>
   150e8:	mov	r0, r6
   150ec:	bl	16d0c <fix_key>
   150f0:	b	151bc <chm_key+0x1c8>
   150f4:	ldr	r0, [r7]
   150f8:	cmp	r0, r6
   150fc:	addlt	r0, r0, #1
   15100:	strlt	r0, [r7]
   15104:	ldrb	r0, [r4, #20]
   15108:	cmp	r0, #0
   1510c:	beq	15034 <chm_key+0x40>
   15110:	ldr	r0, [pc, #288]	; 15238 <chm_key+0x244>
   15114:	ldr	r0, [pc, r0]
   15118:	cmp	r0, #1
   1511c:	blt	15170 <chm_key+0x17c>
   15120:	ldr	r0, [pc, #276]	; 1523c <chm_key+0x248>
   15124:	add	r0, pc, r0
   15128:	add	r1, r0, #12
   1512c:	mov	r2, #0
   15130:	ldr	r0, [pc, #264]	; 15240 <chm_key+0x24c>
   15134:	ldr	r0, [pc, r0]
   15138:	ldr	r3, [pc, #260]	; 15244 <chm_key+0x250>
   1513c:	add	r3, pc, r3
   15140:	b	15154 <chm_key+0x160>
   15144:	add	r1, r1, #20
   15148:	add	r2, r2, #1
   1514c:	cmp	r2, r0
   15150:	bge	15170 <chm_key+0x17c>
   15154:	ldrb	r7, [r1, #-12]
   15158:	cmp	r7, #107	; 0x6b
   1515c:	bne	15144 <chm_key+0x150>
   15160:	ldr	r7, [r1]
   15164:	cmp	r7, #1
   15168:	streq	r3, [r1, #-8]
   1516c:	b	15144 <chm_key+0x150>
   15170:	mov	r1, #0
   15174:	strb	r1, [r4, #20]
   15178:	add	r2, r0, r0, lsl #2
   1517c:	ldr	r3, [pc, #196]	; 15248 <chm_key+0x254>
   15180:	add	r3, pc, r3
   15184:	strb	r8, [r3, r2, lsl #2]!
   15188:	mvn	r2, #0
   1518c:	add	r0, r0, #1
   15190:	ldr	r7, [pc, #180]	; 1524c <chm_key+0x258>
   15194:	add	r7, pc, r7
   15198:	str	r0, [r7]
   1519c:	ldr	r0, [pc, #172]	; 15250 <chm_key+0x25c>
   151a0:	add	r0, pc, r0
   151a4:	stmib	r3, {r0, r1, r2}
   151a8:	str	r1, [r3, #16]
   151ac:	sub	sp, fp, #28
   151b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151b4:	mov	r0, r6
   151b8:	bl	16d54 <fix_key_remote>
   151bc:	ldrb	r0, [r6]
   151c0:	cmp	r0, #0
   151c4:	beq	15034 <chm_key+0x40>
   151c8:	add	r4, r4, #20
   151cc:	mov	r0, r4
   151d0:	mov	r1, r6
   151d4:	mov	r2, #24
   151d8:	bl	e510 <rb_strlcpy@plt>
   151dc:	ldr	r0, [pc, #72]	; 1522c <chm_key+0x238>
   151e0:	ldr	r0, [pc, r0]
   151e4:	add	r1, r0, r0, lsl #2
   151e8:	ldr	r2, [pc, #64]	; 15230 <chm_key+0x23c>
   151ec:	add	r2, pc, r2
   151f0:	strb	r8, [r2, r1, lsl #2]!
   151f4:	mov	r1, #0
   151f8:	mov	r3, #1
   151fc:	add	r0, r0, #1
   15200:	ldr	r7, [pc, #44]	; 15234 <chm_key+0x240>
   15204:	add	r7, pc, r7
   15208:	str	r0, [r7]
   1520c:	str	r4, [r2, #4]
   15210:	str	r1, [r2, #8]
   15214:	str	r3, [r2, #12]
   15218:	str	r1, [r2, #16]
   1521c:	sub	sp, fp, #28
   15220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15224:	.word	0x0004cf54
   15228:	.word	0x0004cf48
   1522c:	.word	0x0004f5d0
   15230:	.word	0x0004cdc4
   15234:	.word	0x0004f5ac
   15238:	.word	0x0004f69c
   1523c:	.word	0x0004ce8c
   15240:	.word	0x0004f67c
   15244:	.word	0x00046250
   15248:	.word	0x0004ce30
   1524c:	.word	0x0004f61c
   15250:	.word	0x0002c4fd

00015254 <chm_limit>:
   15254:	push	{r4, r5, r6, r7, fp, lr}
   15258:	add	fp, sp, #16
   1525c:	sub	sp, sp, #8
   15260:	mov	r5, r3
   15264:	mov	r4, r1
   15268:	mov	r6, r0
   1526c:	ldr	r7, [fp, #24]
   15270:	str	r7, [sp]
   15274:	ldr	r3, [fp, #16]
   15278:	bl	1615c <allow_mode_change>
   1527c:	ldr	r1, [fp, #20]
   15280:	cmp	r1, #0
   15284:	cmpne	r0, #0
   15288:	bne	15294 <chm_limit+0x40>
   1528c:	sub	sp, fp, #16
   15290:	pop	{r4, r5, r6, r7, fp, pc}
   15294:	ldrb	r0, [r6, #65]	; 0x41
   15298:	tst	r0, #32
   1529c:	beq	152cc <chm_limit+0x78>
   152a0:	ldrh	r0, [r6, #80]	; 0x50
   152a4:	cmp	r0, #64	; 0x40
   152a8:	bne	152cc <chm_limit+0x78>
   152ac:	ldr	r0, [pc, #300]	; 153e0 <chm_limit+0x18c>
   152b0:	ldr	r0, [pc, r0]
   152b4:	add	r2, r0, #1
   152b8:	ldr	r3, [pc, #292]	; 153e4 <chm_limit+0x190>
   152bc:	add	r3, pc, r3
   152c0:	str	r2, [r3]
   152c4:	cmp	r0, #45	; 0x2d
   152c8:	bgt	1528c <chm_limit+0x38>
   152cc:	cmn	r1, #1
   152d0:	beq	15388 <chm_limit+0x134>
   152d4:	cmp	r1, #1
   152d8:	bne	1528c <chm_limit+0x38>
   152dc:	ldr	r1, [fp, #8]
   152e0:	ldr	r2, [r1]
   152e4:	cmp	r2, r5
   152e8:	bge	1528c <chm_limit+0x38>
   152ec:	ldr	r0, [fp, #12]
   152f0:	ldr	r0, [r0, r2, lsl #2]
   152f4:	add	r2, r2, #1
   152f8:	str	r2, [r1]
   152fc:	cmp	r0, #0
   15300:	beq	1528c <chm_limit+0x38>
   15304:	ldrb	r1, [r0]
   15308:	cmp	r1, #0
   1530c:	beq	1528c <chm_limit+0x38>
   15310:	bl	e468 <atoi@plt>
   15314:	cmp	r0, #1
   15318:	blt	1528c <chm_limit+0x38>
   1531c:	mov	r5, r0
   15320:	ldr	r6, [pc, #192]	; 153e8 <chm_limit+0x194>
   15324:	add	r6, pc, r6
   15328:	ldr	r1, [pc, #188]	; 153ec <chm_limit+0x198>
   1532c:	add	r1, pc, r1
   15330:	mov	r0, r6
   15334:	mov	r2, r5
   15338:	bl	e3a8 <sprintf@plt>
   1533c:	ldr	r0, [pc, #172]	; 153f0 <chm_limit+0x19c>
   15340:	ldr	r0, [pc, r0]
   15344:	add	r1, r0, r0, lsl #2
   15348:	ldr	r2, [pc, #164]	; 153f4 <chm_limit+0x1a0>
   1534c:	add	r2, pc, r2
   15350:	strb	r7, [r2, r1, lsl #2]!
   15354:	mov	r1, #0
   15358:	mov	r3, #1
   1535c:	add	r0, r0, #1
   15360:	ldr	r7, [pc, #144]	; 153f8 <chm_limit+0x1a4>
   15364:	add	r7, pc, r7
   15368:	str	r0, [r7]
   1536c:	str	r6, [r2, #4]
   15370:	str	r1, [r2, #8]
   15374:	str	r3, [r2, #12]
   15378:	str	r1, [r2, #16]
   1537c:	str	r5, [r4, #16]
   15380:	sub	sp, fp, #16
   15384:	pop	{r4, r5, r6, r7, fp, pc}
   15388:	ldr	r0, [r4, #16]
   1538c:	cmp	r0, #0
   15390:	beq	1528c <chm_limit+0x38>
   15394:	mov	r0, #0
   15398:	str	r0, [r4, #16]
   1539c:	ldr	r1, [pc, #88]	; 153fc <chm_limit+0x1a8>
   153a0:	ldr	r1, [pc, r1]
   153a4:	add	r2, r1, r1, lsl #2
   153a8:	ldr	r3, [pc, #80]	; 15400 <chm_limit+0x1ac>
   153ac:	add	r3, pc, r3
   153b0:	strb	r7, [r3, r2, lsl #2]!
   153b4:	mvn	r2, #0
   153b8:	add	r1, r1, #1
   153bc:	ldr	r7, [pc, #64]	; 15404 <chm_limit+0x1b0>
   153c0:	add	r7, pc, r7
   153c4:	str	r1, [r7]
   153c8:	str	r0, [r3, #4]
   153cc:	str	r0, [r3, #8]
   153d0:	str	r2, [r3, #12]
   153d4:	str	r0, [r3, #16]
   153d8:	sub	sp, fp, #16
   153dc:	pop	{r4, r5, r6, r7, fp, pc}
   153e0:	.word	0x0004ccfc
   153e4:	.word	0x0004ccf0
   153e8:	.word	0x0004f7a4
   153ec:	.word	0x0002b908
   153f0:	.word	0x0004f470
   153f4:	.word	0x0004cc64
   153f8:	.word	0x0004f44c
   153fc:	.word	0x0004f410
   15400:	.word	0x0004cc04
   15404:	.word	0x0004f3f0

00015408 <chm_op>:
   15408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1540c:	add	fp, sp, #28
   15410:	sub	sp, sp, #12
   15414:	mov	r6, r3
   15418:	mov	r5, r1
   1541c:	mov	sl, r0
   15420:	ldr	r9, [fp, #24]
   15424:	str	r9, [sp]
   15428:	ldr	r7, [fp, #16]
   1542c:	mov	r3, r7
   15430:	bl	1615c <allow_mode_change>
   15434:	ldr	r4, [fp, #20]
   15438:	cmp	r4, #0
   1543c:	cmpne	r0, #0
   15440:	bne	1544c <chm_op+0x44>
   15444:	sub	sp, fp, #28
   15448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1544c:	ldr	r0, [fp, #8]
   15450:	ldr	r1, [r0]
   15454:	cmp	r1, r6
   15458:	bge	15444 <chm_op+0x3c>
   1545c:	ldr	r2, [fp, #12]
   15460:	ldr	r6, [r2, r1, lsl #2]
   15464:	add	r1, r1, #1
   15468:	str	r1, [r0]
   1546c:	cmp	r6, #0
   15470:	beq	15550 <chm_op+0x148>
   15474:	ldrb	r0, [r6]
   15478:	cmp	r0, #0
   1547c:	beq	15550 <chm_op+0x148>
   15480:	mov	r0, sl
   15484:	mov	r1, r6
   15488:	mov	r2, #0
   1548c:	bl	d1cc <find_chasing@plt>
   15490:	cmp	r0, #0
   15494:	beq	15444 <chm_op+0x3c>
   15498:	mov	r8, r0
   1549c:	mov	r0, r5
   154a0:	mov	r1, r8
   154a4:	bl	d94c <find_channel_membership@plt>
   154a8:	cmp	r0, #0
   154ac:	beq	15574 <chm_op+0x16c>
   154b0:	ldr	r1, [sl, #64]	; 0x40
   154b4:	ands	r1, r1, #8192	; 0x2000
   154b8:	beq	154e8 <chm_op+0xe0>
   154bc:	ldrh	r2, [sl, #80]	; 0x50
   154c0:	cmp	r2, #64	; 0x40
   154c4:	bne	154e8 <chm_op+0xe0>
   154c8:	ldr	r2, [pc, #428]	; 1567c <chm_op+0x274>
   154cc:	ldr	r2, [pc, r2]
   154d0:	add	r3, r2, #1
   154d4:	ldr	r7, [pc, #420]	; 15680 <chm_op+0x278>
   154d8:	add	r7, pc, r7
   154dc:	str	r3, [r7]
   154e0:	cmp	r2, #3
   154e4:	bgt	15444 <chm_op+0x3c>
   154e8:	cmp	r4, #1
   154ec:	bne	155cc <chm_op+0x1c4>
   154f0:	cmp	r8, sl
   154f4:	bne	15504 <chm_op+0xfc>
   154f8:	ldrb	r1, [r0, #44]	; 0x2c
   154fc:	tst	r1, #2
   15500:	bne	15444 <chm_op+0x3c>
   15504:	ldr	r1, [pc, #376]	; 15684 <chm_op+0x27c>
   15508:	ldr	r1, [pc, r1]
   1550c:	add	r2, r1, r1, lsl #2
   15510:	ldr	r3, [pc, #368]	; 15688 <chm_op+0x280>
   15514:	add	r3, pc, r3
   15518:	strb	r9, [r3, r2, lsl #2]!
   1551c:	mov	r2, #0
   15520:	mov	r7, #1
   15524:	add	r6, r8, #396	; 0x18c
   15528:	add	r1, r1, #1
   1552c:	ldr	r5, [pc, #344]	; 1568c <chm_op+0x284>
   15530:	add	r5, pc, r5
   15534:	str	r1, [r5]
   15538:	add	r1, r8, #88	; 0x58
   1553c:	stmib	r3, {r1, r6, r7}
   15540:	str	r2, [r3, #16]
   15544:	ldr	r1, [r0, #44]	; 0x2c
   15548:	orr	r1, r1, #2
   1554c:	b	15634 <chm_op+0x22c>
   15550:	ldr	r2, [pc, #324]	; 1569c <chm_op+0x294>
   15554:	add	r2, pc, r2
   15558:	ldr	r3, [pc, #320]	; 156a0 <chm_op+0x298>
   1555c:	add	r3, pc, r3
   15560:	mov	r0, sl
   15564:	movw	r1, #401	; 0x191
   15568:	sub	sp, fp, #28
   1556c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15570:	b	dc7c <sendto_one_numeric@plt>
   15574:	ldrb	r0, [r7]
   15578:	tst	r0, #64	; 0x40
   1557c:	bne	155b8 <chm_op+0x1b0>
   15580:	ldrb	r0, [sl, #65]	; 0x41
   15584:	tst	r0, #32
   15588:	beq	155b8 <chm_op+0x1b0>
   1558c:	ldrh	r0, [sl, #80]	; 0x50
   15590:	cmp	r0, #64	; 0x40
   15594:	bne	155b8 <chm_op+0x1b0>
   15598:	ldr	r0, [r5, #236]	; 0xec
   1559c:	str	r0, [sp]
   155a0:	ldr	r2, [pc, #208]	; 15678 <chm_op+0x270>
   155a4:	add	r2, pc, r2
   155a8:	mov	r0, sl
   155ac:	movw	r1, #441	; 0x1b9
   155b0:	mov	r3, r6
   155b4:	bl	dc7c <sendto_one_numeric@plt>
   155b8:	ldr	r0, [r7]
   155bc:	orr	r0, r0, #64	; 0x40
   155c0:	str	r0, [r7]
   155c4:	sub	sp, fp, #28
   155c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155cc:	cmp	r1, #0
   155d0:	beq	155ec <chm_op+0x1e4>
   155d4:	ldrh	r1, [sl, #80]	; 0x50
   155d8:	cmp	r1, #64	; 0x40
   155dc:	bne	155ec <chm_op+0x1e4>
   155e0:	ldrb	r1, [r8, #56]	; 0x38
   155e4:	tst	r1, #64	; 0x40
   155e8:	bne	15640 <chm_op+0x238>
   155ec:	ldr	r1, [pc, #156]	; 15690 <chm_op+0x288>
   155f0:	ldr	r1, [pc, r1]
   155f4:	add	r2, r1, r1, lsl #2
   155f8:	ldr	r3, [pc, #148]	; 15694 <chm_op+0x28c>
   155fc:	add	r3, pc, r3
   15600:	strb	r9, [r3, r2, lsl #2]!
   15604:	mov	r2, #0
   15608:	mvn	r7, #0
   1560c:	add	r6, r8, #396	; 0x18c
   15610:	add	r1, r1, #1
   15614:	ldr	r5, [pc, #124]	; 15698 <chm_op+0x290>
   15618:	add	r5, pc, r5
   1561c:	str	r1, [r5]
   15620:	add	r1, r8, #88	; 0x58
   15624:	stmib	r3, {r1, r6, r7}
   15628:	str	r2, [r3, #16]
   1562c:	ldr	r1, [r0, #44]	; 0x2c
   15630:	bic	r1, r1, #2
   15634:	str	r1, [r0, #44]	; 0x2c
   15638:	sub	sp, fp, #28
   1563c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15640:	ldr	r0, [r5, #236]	; 0xec
   15644:	add	r1, r8, #88	; 0x58
   15648:	str	r1, [sp]
   1564c:	str	r0, [sp, #4]
   15650:	add	r3, sl, #88	; 0x58
   15654:	ldr	r0, [pc, #72]	; 156a4 <chm_op+0x29c>
   15658:	ldr	r0, [pc, r0]
   1565c:	add	r2, r0, #88	; 0x58
   15660:	ldr	r1, [pc, #64]	; 156a8 <chm_op+0x2a0>
   15664:	add	r1, pc, r1
   15668:	mov	r0, sl
   1566c:	bl	d1e4 <sendto_one@plt>
   15670:	sub	sp, fp, #28
   15674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15678:	.word	0x0002bc71
   1567c:	.word	0x0004f2e8
   15680:	.word	0x0004f2dc
   15684:	.word	0x0004f2a8
   15688:	.word	0x0004ca9c
   1568c:	.word	0x0004f280
   15690:	.word	0x0004f1c0
   15694:	.word	0x0004c9b4
   15698:	.word	0x0004f198
   1569c:	.word	0x0002bca8
   156a0:	.word	0x0002c141
   156a4:	.word	0x00045500
   156a8:	.word	0x0002bbd4

000156ac <chm_voice>:
   156ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156b0:	add	fp, sp, #28
   156b4:	sub	sp, sp, #4
   156b8:	mov	r7, r3
   156bc:	mov	r6, r1
   156c0:	mov	r4, r0
   156c4:	ldr	r9, [fp, #24]
   156c8:	str	r9, [sp]
   156cc:	ldr	sl, [fp, #16]
   156d0:	mov	r3, sl
   156d4:	bl	1615c <allow_mode_change>
   156d8:	ldr	r5, [fp, #20]
   156dc:	cmp	r5, #0
   156e0:	cmpne	r0, #0
   156e4:	bne	156f0 <chm_voice+0x44>
   156e8:	sub	sp, fp, #28
   156ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156f0:	ldr	r0, [fp, #8]
   156f4:	ldr	r1, [r0]
   156f8:	cmp	r1, r7
   156fc:	bge	156e8 <chm_voice+0x3c>
   15700:	ldr	r2, [fp, #12]
   15704:	ldr	r7, [r2, r1, lsl #2]
   15708:	add	r1, r1, #1
   1570c:	str	r1, [r0]
   15710:	cmp	r7, #0
   15714:	beq	157e4 <chm_voice+0x138>
   15718:	ldrb	r0, [r7]
   1571c:	cmp	r0, #0
   15720:	beq	157e4 <chm_voice+0x138>
   15724:	mov	r0, r4
   15728:	mov	r1, r7
   1572c:	mov	r2, #0
   15730:	bl	d1cc <find_chasing@plt>
   15734:	cmp	r0, #0
   15738:	beq	156e8 <chm_voice+0x3c>
   1573c:	mov	r8, r0
   15740:	mov	r0, r6
   15744:	mov	r1, r8
   15748:	bl	d94c <find_channel_membership@plt>
   1574c:	cmp	r0, #0
   15750:	beq	15808 <chm_voice+0x15c>
   15754:	ldrb	r1, [r4, #65]	; 0x41
   15758:	tst	r1, #32
   1575c:	beq	1578c <chm_voice+0xe0>
   15760:	ldrh	r1, [r4, #80]	; 0x50
   15764:	cmp	r1, #64	; 0x40
   15768:	bne	1578c <chm_voice+0xe0>
   1576c:	ldr	r1, [pc, #308]	; 158a8 <chm_voice+0x1fc>
   15770:	ldr	r1, [pc, r1]
   15774:	add	r2, r1, #1
   15778:	ldr	r3, [pc, #300]	; 158ac <chm_voice+0x200>
   1577c:	add	r3, pc, r3
   15780:	str	r2, [r3]
   15784:	cmp	r1, #3
   15788:	bgt	156e8 <chm_voice+0x3c>
   1578c:	ldr	r2, [pc, #284]	; 158b0 <chm_voice+0x204>
   15790:	ldr	r2, [pc, r2]
   15794:	add	r1, r2, r2, lsl #2
   15798:	ldr	r3, [pc, #276]	; 158b4 <chm_voice+0x208>
   1579c:	add	r3, pc, r3
   157a0:	add	r1, r3, r1, lsl #2
   157a4:	cmp	r5, #1
   157a8:	bne	15860 <chm_voice+0x1b4>
   157ac:	strb	r9, [r1]
   157b0:	mov	r3, #0
   157b4:	mov	r7, #1
   157b8:	add	r6, r8, #396	; 0x18c
   157bc:	add	r2, r2, #1
   157c0:	ldr	r5, [pc, #240]	; 158b8 <chm_voice+0x20c>
   157c4:	add	r5, pc, r5
   157c8:	str	r2, [r5]
   157cc:	add	r2, r8, #88	; 0x58
   157d0:	stmib	r1, {r2, r6, r7}
   157d4:	str	r3, [r1, #16]
   157d8:	ldr	r1, [r0, #44]	; 0x2c
   157dc:	orr	r1, r1, #1
   157e0:	b	15898 <chm_voice+0x1ec>
   157e4:	ldr	r2, [pc, #212]	; 158c0 <chm_voice+0x214>
   157e8:	add	r2, pc, r2
   157ec:	ldr	r3, [pc, #208]	; 158c4 <chm_voice+0x218>
   157f0:	add	r3, pc, r3
   157f4:	mov	r0, r4
   157f8:	movw	r1, #401	; 0x191
   157fc:	sub	sp, fp, #28
   15800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15804:	b	dc7c <sendto_one_numeric@plt>
   15808:	ldrb	r0, [sl]
   1580c:	tst	r0, #64	; 0x40
   15810:	bne	1584c <chm_voice+0x1a0>
   15814:	ldrb	r0, [r4, #65]	; 0x41
   15818:	tst	r0, #32
   1581c:	beq	1584c <chm_voice+0x1a0>
   15820:	ldrh	r0, [r4, #80]	; 0x50
   15824:	cmp	r0, #64	; 0x40
   15828:	bne	1584c <chm_voice+0x1a0>
   1582c:	ldr	r0, [r6, #236]	; 0xec
   15830:	str	r0, [sp]
   15834:	ldr	r2, [pc, #104]	; 158a4 <chm_voice+0x1f8>
   15838:	add	r2, pc, r2
   1583c:	mov	r0, r4
   15840:	movw	r1, #441	; 0x1b9
   15844:	mov	r3, r7
   15848:	bl	dc7c <sendto_one_numeric@plt>
   1584c:	ldr	r0, [sl]
   15850:	orr	r0, r0, #64	; 0x40
   15854:	str	r0, [sl]
   15858:	sub	sp, fp, #28
   1585c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15860:	mov	r3, #118	; 0x76
   15864:	strb	r3, [r1]
   15868:	mov	r3, #0
   1586c:	mvn	r7, #0
   15870:	add	r6, r8, #396	; 0x18c
   15874:	add	r2, r2, #1
   15878:	ldr	r5, [pc, #60]	; 158bc <chm_voice+0x210>
   1587c:	add	r5, pc, r5
   15880:	str	r2, [r5]
   15884:	add	r2, r8, #88	; 0x58
   15888:	stmib	r1, {r2, r6, r7}
   1588c:	str	r3, [r1, #16]
   15890:	ldr	r1, [r0, #44]	; 0x2c
   15894:	bic	r1, r1, #1
   15898:	str	r1, [r0, #44]	; 0x2c
   1589c:	sub	sp, fp, #28
   158a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158a4:	.word	0x0002b9dd
   158a8:	.word	0x0004f044
   158ac:	.word	0x0004f038
   158b0:	.word	0x0004f020
   158b4:	.word	0x0004c814
   158b8:	.word	0x0004efec
   158bc:	.word	0x0004ef34
   158c0:	.word	0x0002ba14
   158c4:	.word	0x0002bead

000158c8 <chm_nosuch>:
   158c8:	push	{fp, lr}
   158cc:	mov	fp, sp
   158d0:	sub	sp, sp, #8
   158d4:	ldr	r1, [fp, #16]
   158d8:	ldr	r2, [r1]
   158dc:	tst	r2, #4
   158e0:	bne	15910 <chm_nosuch+0x48>
   158e4:	ldr	r3, [fp, #24]
   158e8:	orr	r2, r2, #4
   158ec:	str	r2, [r1]
   158f0:	str	r3, [sp]
   158f4:	add	r3, r0, #88	; 0x58
   158f8:	ldr	r1, [pc, #24]	; 15918 <chm_nosuch+0x50>
   158fc:	ldr	r1, [pc, r1]
   15900:	add	r2, r1, #88	; 0x58
   15904:	ldr	r1, [pc, #16]	; 1591c <chm_nosuch+0x54>
   15908:	add	r1, pc, r1
   1590c:	bl	d1e4 <sendto_one@plt>
   15910:	mov	sp, fp
   15914:	pop	{fp, pc}
   15918:	.word	0x0004525c
   1591c:	.word	0x0002b6bd

00015920 <chm_orphaned>:
   15920:	ldrb	r2, [r0, #65]	; 0x41
   15924:	tst	r2, #32
   15928:	beq	15938 <chm_orphaned+0x18>
   1592c:	ldrh	r0, [r0, #80]	; 0x50
   15930:	cmp	r0, #64	; 0x40
   15934:	beq	15960 <chm_orphaned+0x40>
   15938:	ldr	r2, [sp, #20]
   1593c:	ldr	r0, [sp, #16]
   15940:	ldr	r3, [sp, #12]
   15944:	cmn	r3, #1
   15948:	beq	15964 <chm_orphaned+0x44>
   1594c:	cmp	r3, #1
   15950:	bne	15960 <chm_orphaned+0x40>
   15954:	ldr	r3, [r1, #12]
   15958:	tst	r3, r2
   1595c:	beq	159bc <chm_orphaned+0x9c>
   15960:	bx	lr
   15964:	ldr	r3, [r1, #12]
   15968:	tst	r3, r2
   1596c:	bxeq	lr
   15970:	bic	r2, r3, r2
   15974:	str	r2, [r1, #12]
   15978:	ldr	r1, [pc, #148]	; 15a14 <chm_orphaned+0xf4>
   1597c:	ldr	r1, [pc, r1]
   15980:	add	r2, r1, r1, lsl #2
   15984:	ldr	r3, [pc, #140]	; 15a18 <chm_orphaned+0xf8>
   15988:	add	r3, pc, r3
   1598c:	strb	r0, [r3, r2, lsl #2]!
   15990:	mov	r0, #0
   15994:	mvn	ip, #0
   15998:	add	r1, r1, #1
   1599c:	ldr	r2, [pc, #120]	; 15a1c <chm_orphaned+0xfc>
   159a0:	add	r2, pc, r2
   159a4:	str	r1, [r2]
   159a8:	str	r0, [r3, #4]
   159ac:	str	r0, [r3, #8]
   159b0:	str	ip, [r3, #12]
   159b4:	str	r0, [r3, #16]
   159b8:	bx	lr
   159bc:	orr	r2, r3, r2
   159c0:	str	r2, [r1, #12]
   159c4:	ldr	r1, [pc, #60]	; 15a08 <chm_orphaned+0xe8>
   159c8:	ldr	r1, [pc, r1]
   159cc:	add	r2, r1, r1, lsl #2
   159d0:	ldr	r3, [pc, #52]	; 15a0c <chm_orphaned+0xec>
   159d4:	add	r3, pc, r3
   159d8:	strb	r0, [r3, r2, lsl #2]!
   159dc:	mov	ip, #1
   159e0:	mov	r2, #0
   159e4:	add	r1, r1, #1
   159e8:	ldr	r0, [pc, #32]	; 15a10 <chm_orphaned+0xf0>
   159ec:	add	r0, pc, r0
   159f0:	str	r1, [r0]
   159f4:	str	r2, [r3, #4]
   159f8:	str	r2, [r3, #8]
   159fc:	str	ip, [r3, #12]
   15a00:	str	r2, [r3, #16]
   15a04:	bx	lr
   15a08:	.word	0x0004ede8
   15a0c:	.word	0x0004c5dc
   15a10:	.word	0x0004edc4
   15a14:	.word	0x0004ee34
   15a18:	.word	0x0004c628
   15a1c:	.word	0x0004ee10

00015a20 <cflag_add>:
   15a20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a24:	add	fp, sp, #24
   15a28:	mov	r8, r1
   15a2c:	mov	r6, r0
   15a30:	ldr	r7, [pc, #96]	; 15a98 <cflag_add+0x78>
   15a34:	ldr	r7, [pc, r7]
   15a38:	ldr	r0, [r7, r0, lsl #3]
   15a3c:	mov	r4, #0
   15a40:	ldr	r1, [pc, #84]	; 15a9c <cflag_add+0x7c>
   15a44:	ldr	r1, [pc, r1]
   15a48:	cmp	r0, r1
   15a4c:	beq	15a60 <cflag_add+0x40>
   15a50:	ldr	r2, [pc, #72]	; 15aa0 <cflag_add+0x80>
   15a54:	ldr	r2, [pc, r2]
   15a58:	cmp	r0, r2
   15a5c:	bne	15a90 <cflag_add+0x70>
   15a60:	cmp	r0, r1
   15a64:	bne	15a74 <cflag_add+0x54>
   15a68:	add	r5, r7, r6, lsl #3
   15a6c:	bl	15aa4 <find_cflag_slot>
   15a70:	str	r0, [r5, #4]
   15a74:	add	r5, r7, r6, lsl #3
   15a78:	ldr	r0, [r5, #4]!
   15a7c:	cmp	r0, #0
   15a80:	beq	15a90 <cflag_add+0x70>
   15a84:	str	r8, [r7, r6, lsl #3]
   15a88:	bl	df70 <construct_cflags_strings@plt>
   15a8c:	ldr	r4, [r5]
   15a90:	mov	r0, r4
   15a94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a98:	.word	0x00045060
   15a9c:	.word	0x00044ea8
   15aa0:	.word	0x00045008

00015aa4 <find_cflag_slot>:
   15aa4:	mov	r0, #0
   15aa8:	ldr	r2, [pc, #48]	; 15ae0 <find_cflag_slot+0x3c>
   15aac:	ldr	r2, [pc, r2]
   15ab0:	mov	r1, #0
   15ab4:	ldr	r3, [r2, r0, lsl #2]
   15ab8:	orr	r1, r3, r1
   15abc:	add	r0, r0, #1
   15ac0:	cmp	r0, #256	; 0x100
   15ac4:	bne	15ab4 <find_cflag_slot+0x10>
   15ac8:	mov	r2, #1
   15acc:	mov	r0, r2
   15ad0:	lsl	r2, r2, #1
   15ad4:	tst	r0, r1
   15ad8:	bne	15acc <find_cflag_slot+0x28>
   15adc:	bx	lr
   15ae0:	.word	0x00045038

00015ae4 <cflag_orphan>:
   15ae4:	ldr	r1, [pc, #16]	; 15afc <cflag_orphan+0x18>
   15ae8:	ldr	r1, [pc, r1]
   15aec:	ldr	r2, [pc, #12]	; 15b00 <cflag_orphan+0x1c>
   15af0:	ldr	r2, [pc, r2]
   15af4:	str	r2, [r1, r0, lsl #3]
   15af8:	b	14268 <construct_cflags_strings>
   15afc:	.word	0x00044fac
   15b00:	.word	0x00044f6c

00015b04 <get_channel_access>:
   15b04:	push	{fp, lr}
   15b08:	mov	fp, sp
   15b0c:	sub	sp, sp, #32
   15b10:	ldrb	lr, [r0, #65]	; 0x41
   15b14:	mov	ip, #2
   15b18:	tst	lr, #32
   15b1c:	beq	15b68 <get_channel_access+0x64>
   15b20:	ldrh	lr, [r0, #80]	; 0x50
   15b24:	cmp	lr, #64	; 0x40
   15b28:	bne	15b68 <get_channel_access+0x64>
   15b2c:	ldr	ip, [fp, #8]
   15b30:	mov	lr, #0
   15b34:	stm	sp, {r0, r1, r2, lr}
   15b38:	cmp	r2, #0
   15b3c:	ldrne	r0, [r2, #44]	; 0x2c
   15b40:	andne	lr, r0, #2
   15b44:	str	ip, [sp, #24]
   15b48:	str	r3, [sp, #20]
   15b4c:	str	lr, [sp, #16]
   15b50:	ldr	r0, [pc, #28]	; 15b74 <get_channel_access+0x70>
   15b54:	ldr	r0, [pc, r0]
   15b58:	ldr	r0, [r0]
   15b5c:	mov	r1, sp
   15b60:	bl	e654 <call_hook@plt>
   15b64:	ldr	ip, [sp, #16]
   15b68:	mov	r0, ip
   15b6c:	mov	sp, fp
   15b70:	pop	{fp, pc}
   15b74:	.word	0x00044e48

00015b78 <add_id>:
   15b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b7c:	add	fp, sp, #28
   15b80:	sub	sp, sp, #4
   15b84:	mov	r9, r3
   15b88:	mov	r5, r2
   15b8c:	mov	r4, r1
   15b90:	mov	r6, r0
   15b94:	mov	r0, r2
   15b98:	bl	dc94 <strlen@plt>
   15b9c:	add	r0, r0, #8
   15ba0:	bic	r0, r0, #7
   15ba4:	sub	r7, sp, r0
   15ba8:	mov	sp, r7
   15bac:	mov	r0, r7
   15bb0:	mov	r1, r5
   15bb4:	bl	d91c <strcpy@plt>
   15bb8:	ldrb	r0, [r6, #65]	; 0x41
   15bbc:	ldr	r8, [fp, #8]
   15bc0:	tst	r0, #32
   15bc4:	beq	15c48 <add_id+0xd0>
   15bc8:	ldrh	r0, [r6, #80]	; 0x50
   15bcc:	cmp	r0, #64	; 0x40
   15bd0:	bne	15c48 <add_id+0xd0>
   15bd4:	ldrb	r0, [r4, #13]
   15bd8:	ldr	r1, [pc, #396]	; 15d6c <add_id+0x1f4>
   15bdc:	ldr	r1, [pc, r1]
   15be0:	add	r2, r1, #28
   15be4:	tst	r0, #1
   15be8:	addeq	r2, r1, #24
   15bec:	ldr	r0, [r2]
   15bf0:	ldr	r1, [r4, #168]	; 0xa8
   15bf4:	ldr	r2, [r4, #180]	; 0xb4
   15bf8:	add	r1, r2, r1
   15bfc:	ldr	r2, [r4, #192]	; 0xc0
   15c00:	add	r1, r1, r2
   15c04:	ldr	r2, [r4, #204]	; 0xcc
   15c08:	add	r1, r1, r2
   15c0c:	cmp	r1, r0
   15c10:	bcs	15d30 <add_id+0x1b8>
   15c14:	ldr	r5, [r8]
   15c18:	cmp	r5, #0
   15c1c:	beq	15c78 <add_id+0x100>
   15c20:	ldr	r0, [r5]
   15c24:	ldr	r0, [r0]
   15c28:	mov	r1, r7
   15c2c:	bl	d154 <mask_match@plt>
   15c30:	cmp	r0, #0
   15c34:	bne	15d5c <add_id+0x1e4>
   15c38:	ldr	r5, [r5, #8]
   15c3c:	cmp	r5, #0
   15c40:	bne	15c20 <add_id+0xa8>
   15c44:	b	15c78 <add_id+0x100>
   15c48:	ldr	r5, [r8]
   15c4c:	cmp	r5, #0
   15c50:	beq	15c78 <add_id+0x100>
   15c54:	ldr	r0, [r5]
   15c58:	ldr	r0, [r0]
   15c5c:	mov	r1, r7
   15c60:	bl	e750 <irccmp@plt>
   15c64:	cmp	r0, #0
   15c68:	beq	15d5c <add_id+0x1e4>
   15c6c:	ldr	r5, [r5, #8]
   15c70:	cmp	r5, #0
   15c74:	bne	15c54 <add_id+0xdc>
   15c78:	ldr	sl, [fp, #12]
   15c7c:	ldrh	r0, [r6, #80]	; 0x50
   15c80:	cmp	r0, #64	; 0x40
   15c84:	bne	15cc4 <add_id+0x14c>
   15c88:	ldr	r0, [r6, #24]
   15c8c:	cmp	r0, #0
   15c90:	beq	15cc4 <add_id+0x14c>
   15c94:	sub	sp, sp, #8
   15c98:	add	r0, r6, #163	; 0xa3
   15c9c:	str	r0, [sp]
   15ca0:	add	r2, r6, #88	; 0x58
   15ca4:	add	r3, r6, #152	; 0x98
   15ca8:	ldr	r0, [pc, #200]	; 15d78 <add_id+0x200>
   15cac:	add	r0, pc, r0
   15cb0:	ldr	r1, [pc, #196]	; 15d7c <add_id+0x204>
   15cb4:	add	r1, pc, r1
   15cb8:	bl	e3a8 <sprintf@plt>
   15cbc:	add	sp, sp, #8
   15cc0:	b	15cd8 <add_id+0x160>
   15cc4:	add	r1, r6, #88	; 0x58
   15cc8:	ldr	r0, [pc, #176]	; 15d80 <add_id+0x208>
   15ccc:	add	r0, pc, r0
   15cd0:	mov	r2, #141	; 0x8d
   15cd4:	bl	e510 <rb_strlcpy@plt>
   15cd8:	ldr	r1, [pc, #164]	; 15d84 <add_id+0x20c>
   15cdc:	add	r1, pc, r1
   15ce0:	mov	r0, r7
   15ce4:	mov	r2, r9
   15ce8:	bl	d874 <allocate_ban@plt>
   15cec:	mov	r5, r0
   15cf0:	bl	d07c <rb_current_time@plt>
   15cf4:	str	r0, [r5, #8]
   15cf8:	add	r1, r5, #16
   15cfc:	mov	r0, r5
   15d00:	mov	r2, r8
   15d04:	bl	15d88 <rb_dlinkAdd>
   15d08:	mov	r5, #1
   15d0c:	cmp	sl, #-2147483648	; 0x80000000
   15d10:	cmpne	sl, #536870912	; 0x20000000
   15d14:	bne	15d24 <add_id+0x1ac>
   15d18:	bl	d07c <rb_current_time@plt>
   15d1c:	str	r0, [r4, #228]	; 0xe4
   15d20:	b	15d60 <add_id+0x1e8>
   15d24:	cmp	sl, #268435456	; 0x10000000
   15d28:	beq	15d18 <add_id+0x1a0>
   15d2c:	b	15d60 <add_id+0x1e8>
   15d30:	ldr	r0, [r4, #236]	; 0xec
   15d34:	push	{r0, r7}
   15d38:	add	r3, r6, #88	; 0x58
   15d3c:	ldr	r0, [pc, #44]	; 15d70 <add_id+0x1f8>
   15d40:	ldr	r0, [pc, r0]
   15d44:	add	r2, r0, #88	; 0x58
   15d48:	ldr	r1, [pc, #36]	; 15d74 <add_id+0x1fc>
   15d4c:	add	r1, pc, r1
   15d50:	mov	r0, r6
   15d54:	bl	d1e4 <sendto_one@plt>
   15d58:	add	sp, sp, #8
   15d5c:	mov	r5, #0
   15d60:	mov	r0, r5
   15d64:	sub	sp, fp, #28
   15d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d6c:	.word	0x00044f3c
   15d70:	.word	0x00044e18
   15d74:	.word	0x0002b245
   15d78:	.word	0x0004c270
   15d7c:	.word	0x0002b308
   15d80:	.word	0x0004c250
   15d84:	.word	0x0004c240

00015d88 <rb_dlinkAdd>:
   15d88:	push	{fp, lr}
   15d8c:	mov	fp, sp
   15d90:	cmp	r0, #0
   15d94:	beq	15df4 <rb_dlinkAdd+0x6c>
   15d98:	cmp	r1, #0
   15d9c:	beq	15e14 <rb_dlinkAdd+0x8c>
   15da0:	cmp	r2, #0
   15da4:	beq	15e34 <rb_dlinkAdd+0xac>
   15da8:	mov	r3, #0
   15dac:	stm	r1, {r0, r3}
   15db0:	ldr	r0, [r2]
   15db4:	str	r0, [r1, #8]
   15db8:	ldr	r0, [r2]
   15dbc:	cmp	r0, #0
   15dc0:	beq	15dd0 <rb_dlinkAdd+0x48>
   15dc4:	add	r0, r0, #4
   15dc8:	str	r1, [r0]
   15dcc:	b	15de0 <rb_dlinkAdd+0x58>
   15dd0:	mov	r0, r2
   15dd4:	ldr	r3, [r0, #4]!
   15dd8:	cmp	r3, #0
   15ddc:	streq	r1, [r0]
   15de0:	str	r1, [r2]
   15de4:	ldr	r0, [r2, #8]
   15de8:	add	r0, r0, #1
   15dec:	str	r0, [r2, #8]
   15df0:	pop	{fp, pc}
   15df4:	ldr	r0, [pc, #88]	; 15e54 <rb_dlinkAdd+0xcc>
   15df8:	add	r0, pc, r0
   15dfc:	ldr	r1, [pc, #84]	; 15e58 <rb_dlinkAdd+0xd0>
   15e00:	add	r1, pc, r1
   15e04:	ldr	r3, [pc, #80]	; 15e5c <rb_dlinkAdd+0xd4>
   15e08:	add	r3, pc, r3
   15e0c:	mov	r2, #143	; 0x8f
   15e10:	bl	e7e0 <__assert_fail@plt>
   15e14:	ldr	r0, [pc, #68]	; 15e60 <rb_dlinkAdd+0xd8>
   15e18:	add	r0, pc, r0
   15e1c:	ldr	r1, [pc, #64]	; 15e64 <rb_dlinkAdd+0xdc>
   15e20:	add	r1, pc, r1
   15e24:	ldr	r3, [pc, #60]	; 15e68 <rb_dlinkAdd+0xe0>
   15e28:	add	r3, pc, r3
   15e2c:	mov	r2, #144	; 0x90
   15e30:	bl	e7e0 <__assert_fail@plt>
   15e34:	ldr	r0, [pc, #48]	; 15e6c <rb_dlinkAdd+0xe4>
   15e38:	add	r0, pc, r0
   15e3c:	ldr	r1, [pc, #44]	; 15e70 <rb_dlinkAdd+0xe8>
   15e40:	add	r1, pc, r1
   15e44:	ldr	r3, [pc, #40]	; 15e74 <rb_dlinkAdd+0xec>
   15e48:	add	r3, pc, r3
   15e4c:	mov	r2, #145	; 0x91
   15e50:	bl	e7e0 <__assert_fail@plt>
   15e54:	.word	0x0002ab79
   15e58:	.word	0x0002ab16
   15e5c:	.word	0x0002ab76
   15e60:	.word	0x0002aaf4
   15e64:	.word	0x0002aaf6
   15e68:	.word	0x0002ab56
   15e6c:	.word	0x0003035d
   15e70:	.word	0x0002aad6
   15e74:	.word	0x0002ab36

00015e78 <del_id>:
   15e78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15e7c:	add	fp, sp, #24
   15e80:	cmp	r1, #0
   15e84:	beq	15ed4 <del_id+0x5c>
   15e88:	mov	r4, r1
   15e8c:	mov	r8, r0
   15e90:	ldrb	r0, [r1]
   15e94:	cmp	r0, #0
   15e98:	beq	15ed4 <del_id+0x5c>
   15e9c:	mov	r7, r2
   15ea0:	ldr	r5, [r2]
   15ea4:	cmp	r5, #0
   15ea8:	beq	15ed4 <del_id+0x5c>
   15eac:	mov	r9, r3
   15eb0:	ldr	r6, [r5]
   15eb4:	ldr	r1, [r6]
   15eb8:	mov	r0, r4
   15ebc:	bl	e750 <irccmp@plt>
   15ec0:	cmp	r0, #0
   15ec4:	beq	15ee0 <del_id+0x68>
   15ec8:	ldr	r5, [r5, #8]
   15ecc:	cmp	r5, #0
   15ed0:	bne	15eb0 <del_id+0x38>
   15ed4:	mov	r6, #0
   15ed8:	mov	r0, r6
   15edc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ee0:	add	r0, r6, #16
   15ee4:	mov	r1, r7
   15ee8:	bl	15f18 <rb_dlinkDelete>
   15eec:	cmp	r9, #-2147483648	; 0x80000000
   15ef0:	cmpne	r9, #536870912	; 0x20000000
   15ef4:	bne	15f08 <del_id+0x90>
   15ef8:	bl	d07c <rb_current_time@plt>
   15efc:	str	r0, [r8, #228]	; 0xe4
   15f00:	mov	r0, r6
   15f04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f08:	cmp	r9, #268435456	; 0x10000000
   15f0c:	beq	15ef8 <del_id+0x80>
   15f10:	mov	r0, r6
   15f14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015f18 <rb_dlinkDelete>:
   15f18:	push	{fp, lr}
   15f1c:	mov	fp, sp
   15f20:	cmp	r0, #0
   15f24:	beq	15f78 <rb_dlinkDelete+0x60>
   15f28:	cmp	r1, #0
   15f2c:	beq	15f98 <rb_dlinkDelete+0x80>
   15f30:	ldr	ip, [r0, #4]
   15f34:	ldr	r3, [r0, #8]
   15f38:	add	r2, r3, #4
   15f3c:	cmp	r3, #0
   15f40:	addeq	r2, r1, #4
   15f44:	str	ip, [r2]
   15f48:	ldmib	r0, {r2, ip}
   15f4c:	cmp	r2, #0
   15f50:	mov	r3, r1
   15f54:	addne	r3, r2, #8
   15f58:	str	ip, [r3]
   15f5c:	mov	r2, #0
   15f60:	str	r2, [r0, #4]
   15f64:	str	r2, [r0, #8]
   15f68:	ldr	r0, [r1, #8]
   15f6c:	sub	r0, r0, #1
   15f70:	str	r0, [r1, #8]
   15f74:	pop	{fp, pc}
   15f78:	ldr	r0, [pc, #56]	; 15fb8 <rb_dlinkDelete+0xa0>
   15f7c:	add	r0, pc, r0
   15f80:	ldr	r1, [pc, #52]	; 15fbc <rb_dlinkDelete+0xa4>
   15f84:	add	r1, pc, r1
   15f88:	ldr	r3, [pc, #48]	; 15fc0 <rb_dlinkDelete+0xa8>
   15f8c:	add	r3, pc, r3
   15f90:	mov	r2, #235	; 0xeb
   15f94:	bl	e7e0 <__assert_fail@plt>
   15f98:	ldr	r0, [pc, #36]	; 15fc4 <rb_dlinkDelete+0xac>
   15f9c:	add	r0, pc, r0
   15fa0:	ldr	r1, [pc, #32]	; 15fc8 <rb_dlinkDelete+0xb0>
   15fa4:	add	r1, pc, r1
   15fa8:	ldr	r3, [pc, #28]	; 15fcc <rb_dlinkDelete+0xb4>
   15fac:	add	r3, pc, r3
   15fb0:	mov	r2, #236	; 0xec
   15fb4:	bl	e7e0 <__assert_fail@plt>
   15fb8:	.word	0x0002a990
   15fbc:	.word	0x0002a992
   15fc0:	.word	0x0002aa2d
   15fc4:	.word	0x000301f9
   15fc8:	.word	0x0002a972
   15fcc:	.word	0x0002aa0d

00015fd0 <chm_simple>:
   15fd0:	push	{r4, r5, r6, sl, fp, lr}
   15fd4:	add	fp, sp, #16
   15fd8:	sub	sp, sp, #8
   15fdc:	mov	r4, r1
   15fe0:	mov	r5, r0
   15fe4:	ldr	r6, [fp, #24]
   15fe8:	str	r6, [sp]
   15fec:	ldr	r3, [fp, #16]
   15ff0:	bl	1615c <allow_mode_change>
   15ff4:	cmp	r0, #0
   15ff8:	beq	16130 <chm_simple+0x160>
   15ffc:	ldr	r0, [r5, #64]	; 0x40
   16000:	ands	r1, r0, #8192	; 0x2000
   16004:	beq	16034 <chm_simple+0x64>
   16008:	ldrh	r0, [r5, #80]	; 0x50
   1600c:	cmp	r0, #64	; 0x40
   16010:	bne	16034 <chm_simple+0x64>
   16014:	ldr	r0, [pc, #284]	; 16138 <chm_simple+0x168>
   16018:	ldr	r0, [pc, r0]
   1601c:	add	r2, r0, #1
   16020:	ldr	r3, [pc, #276]	; 1613c <chm_simple+0x16c>
   16024:	add	r3, pc, r3
   16028:	str	r2, [r3]
   1602c:	cmp	r0, #45	; 0x2d
   16030:	bgt	16130 <chm_simple+0x160>
   16034:	ldr	r0, [fp, #28]
   16038:	ldr	r2, [fp, #20]
   1603c:	cmn	r2, #1
   16040:	beq	160dc <chm_simple+0x10c>
   16044:	cmp	r2, #1
   16048:	bne	16130 <chm_simple+0x160>
   1604c:	ldr	r2, [r4, #12]
   16050:	tst	r2, r0
   16054:	bne	16130 <chm_simple+0x160>
   16058:	cmp	r1, #0
   1605c:	beq	1608c <chm_simple+0xbc>
   16060:	ldr	r1, [pc, #216]	; 16140 <chm_simple+0x170>
   16064:	ldr	r1, [pc, r1]
   16068:	ldr	r1, [r1, #8]
   1606c:	cmp	r1, #0
   16070:	bne	1608c <chm_simple+0xbc>
   16074:	ldrh	r1, [r5, #80]	; 0x50
   16078:	cmp	r1, #64	; 0x40
   1607c:	bne	1608c <chm_simple+0xbc>
   16080:	cmp	r6, #70	; 0x46
   16084:	cmpne	r6, #81	; 0x51
   16088:	beq	16130 <chm_simple+0x160>
   1608c:	orr	r0, r2, r0
   16090:	str	r0, [r4, #12]
   16094:	ldr	r0, [pc, #168]	; 16144 <chm_simple+0x174>
   16098:	ldr	r0, [pc, r0]
   1609c:	add	r1, r0, r0, lsl #2
   160a0:	ldr	r2, [pc, #160]	; 16148 <chm_simple+0x178>
   160a4:	add	r2, pc, r2
   160a8:	strb	r6, [r2, r1, lsl #2]!
   160ac:	mov	r1, #1
   160b0:	mov	r3, #0
   160b4:	add	r0, r0, #1
   160b8:	ldr	r6, [pc, #140]	; 1614c <chm_simple+0x17c>
   160bc:	add	r6, pc, r6
   160c0:	str	r0, [r6]
   160c4:	str	r3, [r2, #4]
   160c8:	str	r3, [r2, #8]
   160cc:	str	r1, [r2, #12]
   160d0:	str	r3, [r2, #16]
   160d4:	sub	sp, fp, #16
   160d8:	pop	{r4, r5, r6, sl, fp, pc}
   160dc:	ldr	r1, [r4, #12]
   160e0:	tst	r1, r0
   160e4:	beq	16130 <chm_simple+0x160>
   160e8:	bic	r0, r1, r0
   160ec:	str	r0, [r4, #12]
   160f0:	ldr	r0, [pc, #88]	; 16150 <chm_simple+0x180>
   160f4:	ldr	r0, [pc, r0]
   160f8:	add	r1, r0, r0, lsl #2
   160fc:	ldr	r2, [pc, #80]	; 16154 <chm_simple+0x184>
   16100:	add	r2, pc, r2
   16104:	strb	r6, [r2, r1, lsl #2]!
   16108:	mov	r1, #0
   1610c:	mvn	r3, #0
   16110:	add	r0, r0, #1
   16114:	ldr	r6, [pc, #60]	; 16158 <chm_simple+0x188>
   16118:	add	r6, pc, r6
   1611c:	str	r0, [r6]
   16120:	str	r1, [r2, #4]
   16124:	str	r1, [r2, #8]
   16128:	str	r3, [r2, #12]
   1612c:	str	r1, [r2, #16]
   16130:	sub	sp, fp, #16
   16134:	pop	{r4, r5, r6, sl, fp, pc}
   16138:	.word	0x0004bf94
   1613c:	.word	0x0004bf88
   16140:	.word	0x00044ab4
   16144:	.word	0x0004e718
   16148:	.word	0x0004bf0c
   1614c:	.word	0x0004e6f4
   16150:	.word	0x0004e6bc
   16154:	.word	0x0004beb0
   16158:	.word	0x0004e698

0001615c <allow_mode_change>:
   1615c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16160:	add	fp, sp, #24
   16164:	sub	sp, sp, #8
   16168:	mov	r4, r3
   1616c:	mov	r7, r2
   16170:	mov	r6, r1
   16174:	mov	r5, r0
   16178:	ldrb	r0, [r0, #65]	; 0x41
   1617c:	tst	r0, #32
   16180:	beq	161e8 <allow_mode_change+0x8c>
   16184:	ldrh	r0, [r5, #80]	; 0x50
   16188:	cmp	r0, #64	; 0x40
   1618c:	bne	161e8 <allow_mode_change+0x8c>
   16190:	ldr	r8, [r6, #104]	; 0x68
   16194:	cmp	r8, #0
   16198:	beq	161e8 <allow_mode_change+0x8c>
   1619c:	ldr	r9, [fp, #8]
   161a0:	mov	r0, r8
   161a4:	mov	r1, r9
   161a8:	bl	dce8 <strchr@plt>
   161ac:	cmp	r0, #0
   161b0:	beq	161e8 <allow_mode_change+0x8c>
   161b4:	ldrb	r0, [r4, #1]
   161b8:	mov	r7, #8192	; 0x2000
   161bc:	tst	r0, #32
   161c0:	bne	1622c <allow_mode_change+0xd0>
   161c4:	ldr	r3, [r6, #236]	; 0xec
   161c8:	str	r9, [sp]
   161cc:	str	r8, [sp, #4]
   161d0:	ldr	r2, [pc, #108]	; 16244 <allow_mode_change+0xe8>
   161d4:	add	r2, pc, r2
   161d8:	mov	r0, r5
   161dc:	movw	r1, #742	; 0x2e6
   161e0:	bl	dc7c <sendto_one_numeric@plt>
   161e4:	b	1622c <allow_mode_change+0xd0>
   161e8:	mov	r0, #1
   161ec:	cmp	r7, #1
   161f0:	bgt	1623c <allow_mode_change+0xe0>
   161f4:	ldrb	r0, [r4]
   161f8:	mov	r7, #2
   161fc:	tst	r0, #2
   16200:	bne	1622c <allow_mode_change+0xd0>
   16204:	ldr	r0, [r6, #236]	; 0xec
   16208:	str	r0, [sp]
   1620c:	add	r3, r5, #88	; 0x58
   16210:	ldr	r0, [pc, #48]	; 16248 <allow_mode_change+0xec>
   16214:	ldr	r0, [pc, r0]
   16218:	add	r2, r0, #88	; 0x58
   1621c:	ldr	r1, [pc, #40]	; 1624c <allow_mode_change+0xf0>
   16220:	add	r1, pc, r1
   16224:	mov	r0, r5
   16228:	bl	d1e4 <sendto_one@plt>
   1622c:	ldr	r0, [r4]
   16230:	orr	r0, r0, r7
   16234:	str	r0, [r4]
   16238:	mov	r0, #0
   1623c:	sub	sp, fp, #24
   16240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16244:	.word	0x0002b106
   16248:	.word	0x00044944
   1624c:	.word	0x0002af8e

00016250 <chm_hidden>:
   16250:	push	{r4, r5, r6, r7, fp, lr}
   16254:	add	fp, sp, #16
   16258:	sub	sp, sp, #8
   1625c:	mov	r4, r1
   16260:	mov	r5, r0
   16264:	ldrb	r0, [r0, #65]	; 0x41
   16268:	ldr	r6, [fp, #16]
   1626c:	tst	r0, #32
   16270:	beq	162f4 <chm_hidden+0xa4>
   16274:	ldrh	r0, [r5, #80]	; 0x50
   16278:	cmp	r0, #64	; 0x40
   1627c:	bne	162f4 <chm_hidden+0xa4>
   16280:	ldr	r0, [r5, #24]
   16284:	cmp	r0, #0
   16288:	beq	162ac <chm_hidden+0x5c>
   1628c:	ldr	r0, [r0, #36]	; 0x24
   16290:	cmp	r0, #0
   16294:	beq	162ac <chm_hidden+0x5c>
   16298:	ldr	r1, [pc, #552]	; 164c8 <chm_hidden+0x278>
   1629c:	add	r1, pc, r1
   162a0:	bl	e594 <privilegeset_in_set@plt>
   162a4:	cmp	r0, #0
   162a8:	bne	162f4 <chm_hidden+0xa4>
   162ac:	ldrb	r0, [r5, #57]	; 0x39
   162b0:	tst	r0, #16
   162b4:	beq	162d0 <chm_hidden+0x80>
   162b8:	ldr	r0, [r5, #24]
   162bc:	cmp	r0, #0
   162c0:	beq	162d0 <chm_hidden+0x80>
   162c4:	ldr	r0, [r0, #36]	; 0x24
   162c8:	cmp	r0, #0
   162cc:	beq	162f4 <chm_hidden+0xa4>
   162d0:	ldrb	r0, [r6, #1]
   162d4:	tst	r0, #4
   162d8:	bne	164b4 <chm_hidden+0x264>
   162dc:	ldr	r2, [pc, #488]	; 164cc <chm_hidden+0x27c>
   162e0:	add	r2, pc, r2
   162e4:	mov	r0, r5
   162e8:	movw	r1, #481	; 0x1e1
   162ec:	bl	dc7c <sendto_one_numeric@plt>
   162f0:	b	164b4 <chm_hidden+0x264>
   162f4:	add	r7, r5, #64	; 0x40
   162f8:	ldrb	r0, [r7, #1]
   162fc:	tst	r0, #32
   16300:	beq	16368 <chm_hidden+0x118>
   16304:	ldrh	r0, [r5, #80]	; 0x50
   16308:	cmp	r0, #64	; 0x40
   1630c:	bne	16368 <chm_hidden+0x118>
   16310:	ldr	r0, [r5, #24]
   16314:	cmp	r0, #0
   16318:	beq	1647c <chm_hidden+0x22c>
   1631c:	ldr	r0, [r0, #36]	; 0x24
   16320:	cmp	r0, #0
   16324:	beq	1633c <chm_hidden+0xec>
   16328:	ldr	r1, [pc, #416]	; 164d0 <chm_hidden+0x280>
   1632c:	add	r1, pc, r1
   16330:	bl	e594 <privilegeset_in_set@plt>
   16334:	cmp	r0, #0
   16338:	bne	16368 <chm_hidden+0x118>
   1633c:	ldr	r0, [r5, #24]
   16340:	cmp	r0, #0
   16344:	beq	1647c <chm_hidden+0x22c>
   16348:	ldr	r0, [r0, #36]	; 0x24
   1634c:	cmp	r0, #0
   16350:	beq	1647c <chm_hidden+0x22c>
   16354:	ldr	r1, [pc, #376]	; 164d4 <chm_hidden+0x284>
   16358:	add	r1, pc, r1
   1635c:	bl	e594 <privilegeset_in_set@plt>
   16360:	cmp	r0, #0
   16364:	beq	1647c <chm_hidden+0x22c>
   16368:	ldrb	r0, [r7, #1]
   1636c:	tst	r0, #32
   16370:	beq	163a0 <chm_hidden+0x150>
   16374:	ldrh	r0, [r5, #80]	; 0x50
   16378:	cmp	r0, #64	; 0x40
   1637c:	bne	163a0 <chm_hidden+0x150>
   16380:	ldr	r0, [pc, #348]	; 164e4 <chm_hidden+0x294>
   16384:	ldr	r0, [pc, r0]
   16388:	add	r1, r0, #1
   1638c:	ldr	r2, [pc, #340]	; 164e8 <chm_hidden+0x298>
   16390:	add	r2, pc, r2
   16394:	str	r1, [r2]
   16398:	cmp	r0, #45	; 0x2d
   1639c:	bgt	16474 <chm_hidden+0x224>
   163a0:	ldr	r1, [fp, #28]
   163a4:	ldr	r0, [fp, #24]
   163a8:	ldr	r2, [fp, #20]
   163ac:	cmn	r2, #1
   163b0:	beq	1641c <chm_hidden+0x1cc>
   163b4:	cmp	r2, #1
   163b8:	bne	16474 <chm_hidden+0x224>
   163bc:	ldr	r2, [r4, #12]
   163c0:	tst	r2, r1
   163c4:	bne	16474 <chm_hidden+0x224>
   163c8:	orr	r1, r2, r1
   163cc:	str	r1, [r4, #12]
   163d0:	ldr	r1, [pc, #276]	; 164ec <chm_hidden+0x29c>
   163d4:	ldr	r1, [pc, r1]
   163d8:	add	r2, r1, r1, lsl #2
   163dc:	ldr	r3, [pc, #268]	; 164f0 <chm_hidden+0x2a0>
   163e0:	add	r3, pc, r3
   163e4:	strb	r0, [r3, r2, lsl #2]!
   163e8:	mov	r0, #1
   163ec:	mov	r2, #64	; 0x40
   163f0:	mov	r7, #0
   163f4:	add	r1, r1, #1
   163f8:	ldr	r6, [pc, #244]	; 164f4 <chm_hidden+0x2a4>
   163fc:	add	r6, pc, r6
   16400:	str	r1, [r6]
   16404:	str	r7, [r3, #4]
   16408:	str	r7, [r3, #8]
   1640c:	str	r0, [r3, #12]
   16410:	str	r2, [r3, #16]
   16414:	sub	sp, fp, #16
   16418:	pop	{r4, r5, r6, r7, fp, pc}
   1641c:	ldr	r2, [r4, #12]
   16420:	tst	r2, r1
   16424:	beq	16474 <chm_hidden+0x224>
   16428:	bic	r1, r2, r1
   1642c:	str	r1, [r4, #12]
   16430:	ldr	r1, [pc, #192]	; 164f8 <chm_hidden+0x2a8>
   16434:	ldr	r1, [pc, r1]
   16438:	add	r2, r1, r1, lsl #2
   1643c:	ldr	r3, [pc, #184]	; 164fc <chm_hidden+0x2ac>
   16440:	add	r3, pc, r3
   16444:	strb	r0, [r3, r2, lsl #2]!
   16448:	mov	r0, #64	; 0x40
   1644c:	mvn	r2, #0
   16450:	mov	r7, #0
   16454:	add	r1, r1, #1
   16458:	ldr	r6, [pc, #160]	; 16500 <chm_hidden+0x2b0>
   1645c:	add	r6, pc, r6
   16460:	str	r1, [r6]
   16464:	str	r7, [r3, #4]
   16468:	str	r7, [r3, #8]
   1646c:	str	r2, [r3, #12]
   16470:	str	r0, [r3, #16]
   16474:	sub	sp, fp, #16
   16478:	pop	{r4, r5, r6, r7, fp, pc}
   1647c:	ldrb	r0, [r6, #1]
   16480:	tst	r0, #4
   16484:	bne	164b4 <chm_hidden+0x264>
   16488:	ldr	r0, [pc, #72]	; 164d8 <chm_hidden+0x288>
   1648c:	add	r0, pc, r0
   16490:	str	r0, [sp]
   16494:	add	r3, r5, #88	; 0x58
   16498:	ldr	r0, [pc, #60]	; 164dc <chm_hidden+0x28c>
   1649c:	ldr	r0, [pc, r0]
   164a0:	add	r2, r0, #88	; 0x58
   164a4:	ldr	r1, [pc, #52]	; 164e0 <chm_hidden+0x290>
   164a8:	add	r1, pc, r1
   164ac:	mov	r0, r5
   164b0:	bl	d1e4 <sendto_one@plt>
   164b4:	ldr	r0, [r6]
   164b8:	orr	r0, r0, #1024	; 0x400
   164bc:	str	r0, [r6]
   164c0:	sub	sp, fp, #16
   164c4:	pop	{r4, r5, r6, r7, fp, pc}
   164c8:	.word	0x0002ad56
   164cc:	.word	0x0002ad1f
   164d0:	.word	0x0002ad03
   164d4:	.word	0x0002ace2
   164d8:	.word	0x0002aba8
   164dc:	.word	0x000446bc
   164e0:	.word	0x0002aba4
   164e4:	.word	0x0004bc28
   164e8:	.word	0x0004bc1c
   164ec:	.word	0x0004e3dc
   164f0:	.word	0x0004bbd0
   164f4:	.word	0x0004e3b4
   164f8:	.word	0x0004e37c
   164fc:	.word	0x0004bb70
   16500:	.word	0x0004e354

00016504 <chm_staff>:
   16504:	push	{r4, r5, r6, sl, fp, lr}
   16508:	add	fp, sp, #16
   1650c:	sub	sp, sp, #8
   16510:	mov	r4, r1
   16514:	mov	r5, r0
   16518:	ldrb	r0, [r0, #65]	; 0x41
   1651c:	tst	r0, #32
   16520:	beq	1659c <chm_staff+0x98>
   16524:	ldr	r6, [fp, #16]
   16528:	ldrh	r0, [r5, #80]	; 0x50
   1652c:	cmp	r0, #64	; 0x40
   16530:	bne	16564 <chm_staff+0x60>
   16534:	ldrb	r0, [r5, #57]	; 0x39
   16538:	tst	r0, #16
   1653c:	bne	16564 <chm_staff+0x60>
   16540:	ldrb	r0, [r6, #1]
   16544:	tst	r0, #4
   16548:	bne	166e4 <chm_staff+0x1e0>
   1654c:	ldr	r2, [pc, #420]	; 166f8 <chm_staff+0x1f4>
   16550:	add	r2, pc, r2
   16554:	mov	r0, r5
   16558:	movw	r1, #481	; 0x1e1
   1655c:	bl	dc7c <sendto_one_numeric@plt>
   16560:	b	166e4 <chm_staff+0x1e0>
   16564:	ldrh	r0, [r5, #80]	; 0x50
   16568:	cmp	r0, #64	; 0x40
   1656c:	bne	1659c <chm_staff+0x98>
   16570:	ldr	r0, [r5, #24]
   16574:	cmp	r0, #0
   16578:	beq	166ac <chm_staff+0x1a8>
   1657c:	ldr	r0, [r0, #36]	; 0x24
   16580:	cmp	r0, #0
   16584:	beq	166ac <chm_staff+0x1a8>
   16588:	ldr	r1, [pc, #364]	; 166fc <chm_staff+0x1f8>
   1658c:	add	r1, pc, r1
   16590:	bl	e594 <privilegeset_in_set@plt>
   16594:	cmp	r0, #0
   16598:	beq	166ac <chm_staff+0x1a8>
   1659c:	add	r0, r5, #64	; 0x40
   165a0:	ldrb	r0, [r0, #1]
   165a4:	tst	r0, #32
   165a8:	beq	165d8 <chm_staff+0xd4>
   165ac:	ldrh	r0, [r5, #80]	; 0x50
   165b0:	cmp	r0, #64	; 0x40
   165b4:	bne	165d8 <chm_staff+0xd4>
   165b8:	ldr	r0, [pc, #332]	; 1670c <chm_staff+0x208>
   165bc:	ldr	r0, [pc, r0]
   165c0:	add	r1, r0, #1
   165c4:	ldr	r2, [pc, #324]	; 16710 <chm_staff+0x20c>
   165c8:	add	r2, pc, r2
   165cc:	str	r1, [r2]
   165d0:	cmp	r0, #45	; 0x2d
   165d4:	bgt	166a4 <chm_staff+0x1a0>
   165d8:	ldr	r1, [fp, #28]
   165dc:	ldr	r0, [fp, #24]
   165e0:	ldr	r2, [fp, #20]
   165e4:	cmn	r2, #1
   165e8:	beq	16650 <chm_staff+0x14c>
   165ec:	cmp	r2, #1
   165f0:	bne	166a4 <chm_staff+0x1a0>
   165f4:	ldr	r2, [r4, #12]
   165f8:	tst	r2, r1
   165fc:	bne	166a4 <chm_staff+0x1a0>
   16600:	orr	r1, r2, r1
   16604:	str	r1, [r4, #12]
   16608:	ldr	r1, [pc, #260]	; 16714 <chm_staff+0x210>
   1660c:	ldr	r1, [pc, r1]
   16610:	add	r2, r1, r1, lsl #2
   16614:	ldr	r3, [pc, #252]	; 16718 <chm_staff+0x214>
   16618:	add	r3, pc, r3
   1661c:	strb	r0, [r3, r2, lsl #2]!
   16620:	mov	r0, #1
   16624:	mov	r2, #0
   16628:	add	r1, r1, #1
   1662c:	ldr	r6, [pc, #232]	; 1671c <chm_staff+0x218>
   16630:	add	r6, pc, r6
   16634:	str	r1, [r6]
   16638:	str	r2, [r3, #4]
   1663c:	str	r2, [r3, #8]
   16640:	str	r0, [r3, #12]
   16644:	str	r2, [r3, #16]
   16648:	sub	sp, fp, #16
   1664c:	pop	{r4, r5, r6, sl, fp, pc}
   16650:	ldr	r2, [r4, #12]
   16654:	tst	r2, r1
   16658:	beq	166a4 <chm_staff+0x1a0>
   1665c:	bic	r1, r2, r1
   16660:	str	r1, [r4, #12]
   16664:	ldr	r1, [pc, #180]	; 16720 <chm_staff+0x21c>
   16668:	ldr	r1, [pc, r1]
   1666c:	add	r2, r1, r1, lsl #2
   16670:	ldr	r3, [pc, #172]	; 16724 <chm_staff+0x220>
   16674:	add	r3, pc, r3
   16678:	strb	r0, [r3, r2, lsl #2]!
   1667c:	mov	r0, #0
   16680:	mvn	r2, #0
   16684:	add	r1, r1, #1
   16688:	ldr	r6, [pc, #152]	; 16728 <chm_staff+0x224>
   1668c:	add	r6, pc, r6
   16690:	str	r1, [r6]
   16694:	str	r0, [r3, #4]
   16698:	str	r0, [r3, #8]
   1669c:	str	r2, [r3, #12]
   166a0:	str	r0, [r3, #16]
   166a4:	sub	sp, fp, #16
   166a8:	pop	{r4, r5, r6, sl, fp, pc}
   166ac:	ldrb	r0, [r6, #1]
   166b0:	tst	r0, #4
   166b4:	bne	166e4 <chm_staff+0x1e0>
   166b8:	ldr	r0, [pc, #64]	; 16700 <chm_staff+0x1fc>
   166bc:	add	r0, pc, r0
   166c0:	str	r0, [sp]
   166c4:	add	r3, r5, #88	; 0x58
   166c8:	ldr	r0, [pc, #52]	; 16704 <chm_staff+0x200>
   166cc:	ldr	r0, [pc, r0]
   166d0:	add	r2, r0, #88	; 0x58
   166d4:	ldr	r1, [pc, #44]	; 16708 <chm_staff+0x204>
   166d8:	add	r1, pc, r1
   166dc:	mov	r0, r5
   166e0:	bl	d1e4 <sendto_one@plt>
   166e4:	ldr	r0, [r6]
   166e8:	orr	r0, r0, #1024	; 0x400
   166ec:	str	r0, [r6]
   166f0:	sub	sp, fp, #16
   166f4:	pop	{r4, r5, r6, sl, fp, pc}
   166f8:	.word	0x0002aaaf
   166fc:	.word	0x0002aae7
   16700:	.word	0x0002a9bc
   16704:	.word	0x0004448c
   16708:	.word	0x0002a974
   1670c:	.word	0x0004b9f0
   16710:	.word	0x0004b9e4
   16714:	.word	0x0004e1a4
   16718:	.word	0x0004b998
   1671c:	.word	0x0004e180
   16720:	.word	0x0004e148
   16724:	.word	0x0004b93c
   16728:	.word	0x0004e124

0001672c <pretty_mask>:
   1672c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16730:	add	fp, sp, #28
   16734:	sub	sp, sp, #20
   16738:	mov	r4, r0
   1673c:	bl	dc94 <strlen@plt>
   16740:	add	r0, r0, #8
   16744:	bic	r0, r0, #7
   16748:	sub	r0, sp, r0
   1674c:	mov	sp, r0
   16750:	mov	r1, r4
   16754:	bl	d91c <strcpy@plt>
   16758:	bl	17560 <check_string>
   1675c:	mov	r4, r0
   16760:	bl	e108 <collapse@plt>
   16764:	mov	r0, r4
   16768:	bl	dc94 <strlen@plt>
   1676c:	mov	r5, r0
   16770:	add	r0, r0, #5
   16774:	ldr	r9, [pc, #976]	; 16b4c <pretty_mask+0x420>
   16778:	ldr	r9, [pc, r9]
   1677c:	rsb	r1, r9, #512	; 0x200
   16780:	mov	r6, #0
   16784:	cmp	r1, r0
   16788:	bcc	16a6c <pretty_mask+0x340>
   1678c:	ldrb	r0, [r4]
   16790:	cmp	r0, #36	; 0x24
   16794:	bne	16800 <pretty_mask+0xd4>
   16798:	ldr	r0, [pc, #944]	; 16b50 <pretty_mask+0x424>
   1679c:	add	r0, pc, r0
   167a0:	add	r6, r0, r9
   167a4:	add	r5, r5, #1
   167a8:	mov	r0, r6
   167ac:	mov	r1, r4
   167b0:	mov	r2, r5
   167b4:	bl	d40c <memcpy@plt>
   167b8:	add	r0, r9, r5
   167bc:	ldr	r1, [pc, #912]	; 16b54 <pretty_mask+0x428>
   167c0:	add	r1, pc, r1
   167c4:	str	r0, [r1]
   167c8:	ldrb	r0, [r6, #1]
   167cc:	cmp	r0, #33	; 0x21
   167d0:	moveq	r0, #126	; 0x7e
   167d4:	strbeq	r0, [r6, #1]
   167d8:	ldrb	r0, [r6, #1]
   167dc:	mov	r1, #1
   167e0:	cmp	r0, #126	; 0x7e
   167e4:	movweq	r1, #2
   167e8:	ldrb	r0, [r6, r1]
   167ec:	ldr	r2, [pc, #868]	; 16b58 <pretty_mask+0x42c>
   167f0:	ldr	r2, [pc, r2]
   167f4:	ldrb	r0, [r2, r0]
   167f8:	strb	r0, [r6, r1]
   167fc:	b	16a6c <pretty_mask+0x340>
   16800:	mov	r0, r4
   16804:	mov	r1, #64	; 0x40
   16808:	mov	r2, r5
   1680c:	bl	e090 <memchr@plt>
   16810:	cmp	r0, #0
   16814:	beq	1683c <pretty_mask+0x110>
   16818:	mov	r7, r0
   1681c:	mov	r8, r0
   16820:	ldrb	r0, [r8, #1]!
   16824:	cmp	r0, #0
   16828:	beq	16898 <pretty_mask+0x16c>
   1682c:	mov	r0, r8
   16830:	bl	dc94 <strlen@plt>
   16834:	mov	sl, r0
   16838:	b	168a4 <pretty_mask+0x178>
   1683c:	mov	r0, r4
   16840:	mov	r1, #33	; 0x21
   16844:	mov	r2, r5
   16848:	bl	e090 <memchr@plt>
   1684c:	cmp	r0, #0
   16850:	beq	16a78 <pretty_mask+0x34c>
   16854:	ldr	r8, [pc, #780]	; 16b68 <pretty_mask+0x43c>
   16858:	add	r8, pc, r8
   1685c:	cmp	r0, r4
   16860:	sub	r5, r0, r4
   16864:	moveq	r4, r8
   16868:	movweq	r5, #1
   1686c:	ldrb	r1, [r0, #1]!
   16870:	cmp	r1, #0
   16874:	beq	16af4 <pretty_mask+0x3c8>
   16878:	str	r0, [fp, #-40]	; 0xffffffd8
   1687c:	bl	dc94 <strlen@plt>
   16880:	mov	r7, r0
   16884:	mov	r0, #0
   16888:	str	r0, [fp, #-44]	; 0xffffffd4
   1688c:	mov	sl, #1
   16890:	mov	r6, #0
   16894:	b	16970 <pretty_mask+0x244>
   16898:	mov	sl, #1
   1689c:	ldr	r8, [pc, #696]	; 16b5c <pretty_mask+0x430>
   168a0:	add	r8, pc, r8
   168a4:	sub	r6, r7, r4
   168a8:	mov	r0, r4
   168ac:	mov	r1, #33	; 0x21
   168b0:	mov	r2, r6
   168b4:	bl	e090 <memchr@plt>
   168b8:	cmp	r0, #0
   168bc:	beq	168f0 <pretty_mask+0x1c4>
   168c0:	add	r2, r0, #1
   168c4:	ldr	r1, [pc, #660]	; 16b60 <pretty_mask+0x434>
   168c8:	add	r1, pc, r1
   168cc:	cmp	r7, r2
   168d0:	sub	r7, r7, r2
   168d4:	moveq	r2, r1
   168d8:	str	r2, [fp, #-40]	; 0xffffffd8
   168dc:	movweq	r7, #1
   168e0:	cmp	r0, r4
   168e4:	beq	16918 <pretty_mask+0x1ec>
   168e8:	sub	r5, r0, r4
   168ec:	b	16920 <pretty_mask+0x1f4>
   168f0:	ldr	r0, [pc, #620]	; 16b64 <pretty_mask+0x438>
   168f4:	add	r0, pc, r0
   168f8:	cmp	r7, r4
   168fc:	moveq	r4, r0
   16900:	movweq	r6, #1
   16904:	mov	r5, #1
   16908:	str	r4, [fp, #-40]	; 0xffffffd8
   1690c:	mov	r4, r0
   16910:	mov	r7, r6
   16914:	b	16920 <pretty_mask+0x1f4>
   16918:	mov	r5, #1
   1691c:	mov	r4, r1
   16920:	mov	r0, r8
   16924:	mov	r1, #33	; 0x21
   16928:	mov	r2, sl
   1692c:	bl	e090 <memchr@plt>
   16930:	cmp	r0, #0
   16934:	bne	16950 <pretty_mask+0x224>
   16938:	mov	r0, r8
   1693c:	mov	r1, #36	; 0x24
   16940:	mov	r2, sl
   16944:	bl	e090 <memchr@plt>
   16948:	cmp	r0, #0
   1694c:	beq	16adc <pretty_mask+0x3b0>
   16950:	add	r1, r8, sl
   16954:	add	r2, r0, #1
   16958:	subs	r3, r1, r2
   1695c:	mov	r6, r3
   16960:	subne	r6, r1, r2
   16964:	movne	r3, r2
   16968:	str	r3, [fp, #-44]	; 0xffffffd4
   1696c:	sub	sl, r0, r8
   16970:	cmp	r5, #31
   16974:	movge	r5, #31
   16978:	mov	r0, #10
   1697c:	cmp	r7, #9
   16980:	movle	r0, r7
   16984:	str	r0, [fp, #-36]	; 0xffffffdc
   16988:	mov	r7, r5
   1698c:	cmp	r6, #200	; 0xc8
   16990:	movge	r6, #200	; 0xc8
   16994:	str	r6, [fp, #-48]	; 0xffffffd0
   16998:	cmp	sl, #63	; 0x3f
   1699c:	movge	sl, #63	; 0x3f
   169a0:	mov	r5, sl
   169a4:	mov	r1, r4
   169a8:	mov	r4, r8
   169ac:	ldr	r8, [pc, #452]	; 16b78 <pretty_mask+0x44c>
   169b0:	add	r8, pc, r8
   169b4:	add	r6, r8, r9
   169b8:	mov	r0, r6
   169bc:	mov	r2, r7
   169c0:	bl	d40c <memcpy@plt>
   169c4:	add	r0, r7, r9
   169c8:	add	sl, r0, #1
   169cc:	ldr	r9, [pc, #424]	; 16b7c <pretty_mask+0x450>
   169d0:	add	r9, pc, r9
   169d4:	str	sl, [r9]
   169d8:	mov	r1, #33	; 0x21
   169dc:	strb	r1, [r8, r0]
   169e0:	add	r0, r8, sl
   169e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   169e8:	ldr	r7, [fp, #-36]	; 0xffffffdc
   169ec:	mov	r2, r7
   169f0:	bl	d40c <memcpy@plt>
   169f4:	add	r0, sl, r7
   169f8:	add	r7, r0, #1
   169fc:	str	r7, [r9]
   16a00:	mov	r1, #64	; 0x40
   16a04:	strb	r1, [r8, r0]
   16a08:	add	r0, r8, r7
   16a0c:	mov	r1, r4
   16a10:	mov	r2, r5
   16a14:	bl	d40c <memcpy@plt>
   16a18:	add	r0, r7, r5
   16a1c:	str	r0, [r9]
   16a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16a24:	cmp	r1, #0
   16a28:	beq	16a54 <pretty_mask+0x328>
   16a2c:	add	r4, r0, #1
   16a30:	str	r4, [r9]
   16a34:	mov	r2, #36	; 0x24
   16a38:	strb	r2, [r8, r0]
   16a3c:	add	r0, r8, r4
   16a40:	ldr	r5, [fp, #-48]	; 0xffffffd0
   16a44:	mov	r2, r5
   16a48:	bl	d40c <memcpy@plt>
   16a4c:	add	r0, r4, r5
   16a50:	str	r0, [r9]
   16a54:	ldr	r0, [pc, #292]	; 16b80 <pretty_mask+0x454>
   16a58:	ldr	r0, [pc, r0]
   16a5c:	add	r1, r0, #1
   16a60:	str	r1, [r9]
   16a64:	mov	r1, #0
   16a68:	strb	r1, [r8, r0]
   16a6c:	mov	r0, r6
   16a70:	sub	sp, fp, #28
   16a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a78:	mov	r0, r4
   16a7c:	mov	r1, #46	; 0x2e
   16a80:	mov	r2, r5
   16a84:	bl	e090 <memchr@plt>
   16a88:	cmp	r0, #0
   16a8c:	bne	16aa8 <pretty_mask+0x37c>
   16a90:	mov	r0, r4
   16a94:	mov	r1, #58	; 0x3a
   16a98:	mov	r2, r5
   16a9c:	bl	e090 <memchr@plt>
   16aa0:	cmp	r0, #0
   16aa4:	beq	16aec <pretty_mask+0x3c0>
   16aa8:	cmp	r5, #63	; 0x3f
   16aac:	movge	r5, #63	; 0x3f
   16ab0:	mov	r0, #0
   16ab4:	str	r0, [fp, #-44]	; 0xffffffd4
   16ab8:	ldr	r1, [pc, #176]	; 16b70 <pretty_mask+0x444>
   16abc:	add	r1, pc, r1
   16ac0:	mov	r0, #1
   16ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   16ac8:	str	r1, [fp, #-40]	; 0xffffffd8
   16acc:	mov	r7, #1
   16ad0:	mov	r0, #0
   16ad4:	str	r0, [fp, #-48]	; 0xffffffd0
   16ad8:	b	169ac <pretty_mask+0x280>
   16adc:	mov	r0, #0
   16ae0:	str	r0, [fp, #-44]	; 0xffffffd4
   16ae4:	mov	r6, #0
   16ae8:	b	16970 <pretty_mask+0x244>
   16aec:	cmp	r5, #0
   16af0:	beq	16b24 <pretty_mask+0x3f8>
   16af4:	cmp	r5, #31
   16af8:	movge	r5, #31
   16afc:	mov	r6, #0
   16b00:	mov	sl, #1
   16b04:	ldr	r8, [pc, #104]	; 16b74 <pretty_mask+0x448>
   16b08:	add	r8, pc, r8
   16b0c:	mov	r7, #1
   16b10:	mov	r1, #0
   16b14:	str	r1, [fp, #-44]	; 0xffffffd4
   16b18:	str	r8, [fp, #-40]	; 0xffffffd8
   16b1c:	mov	r0, r7
   16b20:	b	16984 <pretty_mask+0x258>
   16b24:	mov	r0, #0
   16b28:	str	r0, [fp, #-44]	; 0xffffffd4
   16b2c:	ldr	r1, [pc, #56]	; 16b6c <pretty_mask+0x440>
   16b30:	add	r1, pc, r1
   16b34:	mov	r5, #1
   16b38:	mov	r0, #1
   16b3c:	str	r0, [fp, #-36]	; 0xffffffdc
   16b40:	str	r1, [fp, #-40]	; 0xffffffd8
   16b44:	mov	r4, r1
   16b48:	b	16acc <pretty_mask+0x3a0>
   16b4c:	.word	0x0004e770
   16b50:	.word	0x0004e750
   16b54:	.word	0x0004e728
   16b58:	.word	0x000442ec
   16b5c:	.word	0x0002adfd
   16b60:	.word	0x0002add5
   16b64:	.word	0x0002ada9
   16b68:	.word	0x0002ae45
   16b6c:	.word	0x0002ab6d
   16b70:	.word	0x0002abe1
   16b74:	.word	0x0002ab95
   16b78:	.word	0x0004e53c
   16b7c:	.word	0x0004e518
   16b80:	.word	0x0004e490

00016b84 <check_forward>:
   16b84:	push	{r4, r5, r6, r7, fp, lr}
   16b88:	add	fp, sp, #16
   16b8c:	sub	sp, sp, #8
   16b90:	mov	r5, r2
   16b94:	mov	r6, r1
   16b98:	mov	r4, r0
   16b9c:	mov	r0, r2
   16ba0:	bl	d358 <check_channel_name@plt>
   16ba4:	cmp	r0, #0
   16ba8:	beq	16c00 <check_forward+0x7c>
   16bac:	ldrb	r0, [r4, #65]	; 0x41
   16bb0:	tst	r0, #32
   16bb4:	beq	16be4 <check_forward+0x60>
   16bb8:	ldrh	r0, [r4, #80]	; 0x50
   16bbc:	cmp	r0, #64	; 0x40
   16bc0:	bne	16be4 <check_forward+0x60>
   16bc4:	mov	r0, r5
   16bc8:	bl	dc94 <strlen@plt>
   16bcc:	cmp	r0, #50	; 0x32
   16bd0:	bhi	16c00 <check_forward+0x7c>
   16bd4:	mov	r0, r5
   16bd8:	bl	e600 <hash_find_resv@plt>
   16bdc:	cmp	r0, #0
   16be0:	bne	16c00 <check_forward+0x7c>
   16be4:	ldr	r0, [r6, #236]	; 0xec
   16be8:	ldrb	r0, [r0]
   16bec:	cmp	r0, #35	; 0x23
   16bf0:	bne	16c28 <check_forward+0xa4>
   16bf4:	ldrb	r0, [r5]
   16bf8:	cmp	r0, #38	; 0x26
   16bfc:	bne	16c28 <check_forward+0xa4>
   16c00:	ldr	r2, [pc, #244]	; 16cfc <check_forward+0x178>
   16c04:	add	r2, pc, r2
   16c08:	mov	r0, r4
   16c0c:	movw	r1, #479	; 0x1df
   16c10:	mov	r3, r5
   16c14:	bl	dc7c <sendto_one_numeric@plt>
   16c18:	mov	r5, #0
   16c1c:	mov	r0, r5
   16c20:	sub	sp, fp, #16
   16c24:	pop	{r4, r5, r6, r7, fp, pc}
   16c28:	add	r7, r4, #64	; 0x40
   16c2c:	ldrb	r0, [r7, #1]
   16c30:	mov	r6, #0
   16c34:	tst	r0, #32
   16c38:	beq	16c5c <check_forward+0xd8>
   16c3c:	ldrh	r0, [r4, #80]	; 0x50
   16c40:	cmp	r0, #64	; 0x40
   16c44:	bne	16c5c <check_forward+0xd8>
   16c48:	mov	r0, r5
   16c4c:	bl	d73c <find_channel@plt>
   16c50:	mov	r6, r0
   16c54:	cmp	r0, #0
   16c58:	beq	16ce8 <check_forward+0x164>
   16c5c:	ldrb	r0, [r7, #1]
   16c60:	mov	r5, #1
   16c64:	tst	r0, #32
   16c68:	beq	16c1c <check_forward+0x98>
   16c6c:	ldrh	r0, [r4, #80]	; 0x50
   16c70:	cmp	r0, #64	; 0x40
   16c74:	bne	16c1c <check_forward+0x98>
   16c78:	ldrb	r0, [r6, #13]
   16c7c:	tst	r0, #16
   16c80:	bne	16c1c <check_forward+0x98>
   16c84:	mov	r0, r6
   16c88:	mov	r1, r4
   16c8c:	bl	d94c <find_channel_membership@plt>
   16c90:	cmp	r0, #0
   16c94:	beq	16cbc <check_forward+0x138>
   16c98:	mov	r2, r0
   16c9c:	mov	r0, #0
   16ca0:	str	r0, [sp]
   16ca4:	mov	r0, r4
   16ca8:	mov	r1, r6
   16cac:	mov	r3, #0
   16cb0:	bl	dc40 <get_channel_access@plt>
   16cb4:	cmp	r0, #1
   16cb8:	bgt	16c1c <check_forward+0x98>
   16cbc:	ldr	r0, [r6, #236]	; 0xec
   16cc0:	str	r0, [sp]
   16cc4:	add	r3, r4, #88	; 0x58
   16cc8:	ldr	r0, [pc, #52]	; 16d04 <check_forward+0x180>
   16ccc:	ldr	r0, [pc, r0]
   16cd0:	add	r2, r0, #88	; 0x58
   16cd4:	ldr	r1, [pc, #44]	; 16d08 <check_forward+0x184>
   16cd8:	add	r1, pc, r1
   16cdc:	mov	r0, r4
   16ce0:	bl	d1e4 <sendto_one@plt>
   16ce4:	b	16c18 <check_forward+0x94>
   16ce8:	ldr	r2, [pc, #16]	; 16d00 <check_forward+0x17c>
   16cec:	add	r2, pc, r2
   16cf0:	mov	r0, r4
   16cf4:	movw	r1, #403	; 0x193
   16cf8:	b	16c10 <check_forward+0x8c>
   16cfc:	.word	0x0002a72c
   16d00:	.word	0x0002a65d
   16d04:	.word	0x00043e8c
   16d08:	.word	0x0002a4d6

00016d0c <fix_key>:
   16d0c:	ldrb	r2, [r0]
   16d10:	cmp	r2, #0
   16d14:	beq	16d48 <fix_key+0x3c>
   16d18:	add	r1, r0, #1
   16d1c:	b	16d2c <fix_key+0x20>
   16d20:	ldrb	r2, [r1], #1
   16d24:	cmp	r2, #0
   16d28:	beq	16d48 <fix_key+0x3c>
   16d2c:	and	r2, r2, #127	; 0x7f
   16d30:	cmp	r2, #44	; 0x2c
   16d34:	cmpne	r2, #58	; 0x3a
   16d38:	beq	16d20 <fix_key+0x14>
   16d3c:	cmp	r2, #33	; 0x21
   16d40:	strbcs	r2, [r0], #1
   16d44:	b	16d20 <fix_key+0x14>
   16d48:	mov	r1, #0
   16d4c:	strb	r1, [r0]
   16d50:	bx	lr

00016d54 <fix_key_remote>:
   16d54:	ldrb	r2, [r0]
   16d58:	cmp	r2, #0
   16d5c:	beq	16e58 <fix_key_remote+0x104>
   16d60:	add	r1, r0, #1
   16d64:	b	16d78 <fix_key_remote+0x24>
   16d68:	strb	ip, [r0], #1
   16d6c:	ldrb	r2, [r1], #1
   16d70:	cmp	r2, #0
   16d74:	beq	16e58 <fix_key_remote+0x104>
   16d78:	and	ip, r2, #127	; 0x7f
   16d7c:	sub	r3, ip, #10
   16d80:	cmp	r3, #48	; 0x30
   16d84:	bhi	16d68 <fix_key_remote+0x14>
   16d88:	add	r2, pc, #4
   16d8c:	ldr	r3, [r2, r3, lsl #2]
   16d90:	add	pc, r2, r3
   16d94:	.word	0xffffffd8
   16d98:	.word	0xffffffd4
   16d9c:	.word	0xffffffd4
   16da0:	.word	0xffffffd8
   16da4:	.word	0xffffffd4
   16da8:	.word	0xffffffd4
   16dac:	.word	0xffffffd4
   16db0:	.word	0xffffffd4
   16db4:	.word	0xffffffd4
   16db8:	.word	0xffffffd4
   16dbc:	.word	0xffffffd4
   16dc0:	.word	0xffffffd4
   16dc4:	.word	0xffffffd4
   16dc8:	.word	0xffffffd4
   16dcc:	.word	0xffffffd4
   16dd0:	.word	0xffffffd4
   16dd4:	.word	0xffffffd4
   16dd8:	.word	0xffffffd4
   16ddc:	.word	0xffffffd4
   16de0:	.word	0xffffffd4
   16de4:	.word	0xffffffd4
   16de8:	.word	0xffffffd4
   16dec:	.word	0xffffffd8
   16df0:	.word	0xffffffd4
   16df4:	.word	0xffffffd4
   16df8:	.word	0xffffffd4
   16dfc:	.word	0xffffffd4
   16e00:	.word	0xffffffd4
   16e04:	.word	0xffffffd4
   16e08:	.word	0xffffffd4
   16e0c:	.word	0xffffffd4
   16e10:	.word	0xffffffd4
   16e14:	.word	0xffffffd4
   16e18:	.word	0xffffffd4
   16e1c:	.word	0xffffffd8
   16e20:	.word	0xffffffd4
   16e24:	.word	0xffffffd4
   16e28:	.word	0xffffffd4
   16e2c:	.word	0xffffffd4
   16e30:	.word	0xffffffd4
   16e34:	.word	0xffffffd4
   16e38:	.word	0xffffffd4
   16e3c:	.word	0xffffffd4
   16e40:	.word	0xffffffd4
   16e44:	.word	0xffffffd4
   16e48:	.word	0xffffffd4
   16e4c:	.word	0xffffffd4
   16e50:	.word	0xffffffd4
   16e54:	.word	0xffffffd8
   16e58:	mov	r1, #0
   16e5c:	strb	r1, [r0]
   16e60:	bx	lr

00016e64 <set_channel_mode>:
   16e64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e68:	add	fp, sp, #28
   16e6c:	sub	sp, sp, #84	; 0x54
   16e70:	str	r3, [fp, #-40]	; 0xffffffd8
   16e74:	str	r2, [sp, #48]	; 0x30
   16e78:	mov	r4, r1
   16e7c:	str	r0, [sp, #24]
   16e80:	mov	r0, #1
   16e84:	str	r0, [fp, #-32]	; 0xffffffe0
   16e88:	mov	r0, #0
   16e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   16e90:	ldr	r8, [fp, #12]
   16e94:	ldr	r5, [r8]
   16e98:	ldr	r1, [pc, #1352]	; 173e8 <set_channel_mode+0x584>
   16e9c:	add	r1, pc, r1
   16ea0:	str	r0, [r1]
   16ea4:	ldr	r1, [pc, #1344]	; 173ec <set_channel_mode+0x588>
   16ea8:	add	r1, pc, r1
   16eac:	str	r0, [r1]
   16eb0:	ldr	r1, [pc, #1336]	; 173f0 <set_channel_mode+0x58c>
   16eb4:	add	r1, pc, r1
   16eb8:	str	r0, [r1]
   16ebc:	ldr	r1, [pc, #1328]	; 173f4 <set_channel_mode+0x590>
   16ec0:	add	r1, pc, r1
   16ec4:	str	r0, [r1]
   16ec8:	ldr	r1, [pc, #1320]	; 173f8 <set_channel_mode+0x594>
   16ecc:	add	r1, pc, r1
   16ed0:	str	r0, [r1]
   16ed4:	ldr	r0, [pc, #1312]	; 173fc <set_channel_mode+0x598>
   16ed8:	ldr	r0, [pc, r0]
   16edc:	ldr	r0, [r0]
   16ee0:	ldr	r7, [fp, #8]
   16ee4:	cmp	r0, #0
   16ee8:	beq	16f20 <set_channel_mode+0xbc>
   16eec:	ldrh	r0, [r4, #80]	; 0x50
   16ef0:	cmp	r0, #32
   16ef4:	bne	16f20 <set_channel_mode+0xbc>
   16ef8:	ldrb	r0, [r4, #396]	; 0x18c
   16efc:	cmp	r0, #0
   16f00:	bne	16f20 <set_channel_mode+0xbc>
   16f04:	ldrb	r0, [r4, #65]	; 0x41
   16f08:	tst	r0, #16
   16f0c:	bne	16f20 <set_channel_mode+0xbc>
   16f10:	ldr	r0, [pc, #1256]	; 17400 <set_channel_mode+0x59c>
   16f14:	ldr	r0, [pc, r0]
   16f18:	str	r0, [sp, #36]	; 0x24
   16f1c:	b	16f24 <set_channel_mode+0xc0>
   16f20:	str	r4, [sp, #36]	; 0x24
   16f24:	mov	r0, r7
   16f28:	mov	r1, r8
   16f2c:	bl	e678 <reconstruct_parv@plt>
   16f30:	str	r0, [sp]
   16f34:	mov	r9, #0
   16f38:	str	r4, [sp, #40]	; 0x28
   16f3c:	mov	r0, r4
   16f40:	ldr	r1, [sp, #48]	; 0x30
   16f44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16f48:	mov	r3, #0
   16f4c:	bl	dc40 <get_channel_access@plt>
   16f50:	mov	r4, r0
   16f54:	mov	sl, #0
   16f58:	b	16fa8 <set_channel_mode+0x144>
   16f5c:	cmp	r0, #0
   16f60:	beq	17050 <set_channel_mode+0x1ec>
   16f64:	ldr	r1, [pc, #1176]	; 17404 <set_channel_mode+0x5a0>
   16f68:	ldr	r1, [pc, r1]
   16f6c:	ldr	r6, [r1, r0, lsl #3]!
   16f70:	ldr	r1, [r1, #4]
   16f74:	sub	r2, fp, #32
   16f78:	stm	sp, {r2, r8}
   16f7c:	sub	r2, fp, #36	; 0x24
   16f80:	str	r2, [sp, #8]
   16f84:	str	r9, [sp, #12]
   16f88:	str	r0, [sp, #16]
   16f8c:	str	r1, [sp, #20]
   16f90:	ldr	r0, [sp, #36]	; 0x24
   16f94:	ldr	r1, [sp, #48]	; 0x30
   16f98:	mov	r2, r4
   16f9c:	mov	r3, r7
   16fa0:	blx	r6
   16fa4:	add	r5, r5, #1
   16fa8:	ldrb	r0, [r5]
   16fac:	cmp	r0, #44	; 0x2c
   16fb0:	ble	16fd0 <set_channel_mode+0x16c>
   16fb4:	cmp	r0, #45	; 0x2d
   16fb8:	beq	1700c <set_channel_mode+0x1a8>
   16fbc:	cmp	r0, #61	; 0x3d
   16fc0:	bne	16f64 <set_channel_mode+0x100>
   16fc4:	mov	r9, #0
   16fc8:	add	r5, r5, #1
   16fcc:	b	16fa8 <set_channel_mode+0x144>
   16fd0:	cmp	r0, #43	; 0x2b
   16fd4:	bne	16f5c <set_channel_mode+0xf8>
   16fd8:	mov	r9, #1
   16fdc:	cmp	sl, #0
   16fe0:	bne	16fa4 <set_channel_mode+0x140>
   16fe4:	mov	r0, r7
   16fe8:	mov	r1, r8
   16fec:	bl	e678 <reconstruct_parv@plt>
   16ff0:	str	r0, [sp]
   16ff4:	mov	r9, #1
   16ff8:	ldr	r0, [sp, #40]	; 0x28
   16ffc:	ldr	r1, [sp, #48]	; 0x30
   17000:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17004:	mov	r3, #1
   17008:	b	1703c <set_channel_mode+0x1d8>
   1700c:	mvn	r9, #0
   17010:	cmp	sl, #0
   17014:	bne	16fa4 <set_channel_mode+0x140>
   17018:	mov	r0, r7
   1701c:	mov	r1, r8
   17020:	bl	e678 <reconstruct_parv@plt>
   17024:	str	r0, [sp]
   17028:	mvn	r9, #0
   1702c:	ldr	r0, [sp, #40]	; 0x28
   17030:	ldr	r1, [sp, #48]	; 0x30
   17034:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17038:	mvn	r3, #0
   1703c:	bl	dc40 <get_channel_access@plt>
   17040:	mov	r4, r0
   17044:	mov	sl, #1
   17048:	add	r5, r5, #1
   1704c:	b	16fa8 <set_channel_mode+0x144>
   17050:	ldr	r0, [pc, #944]	; 17408 <set_channel_mode+0x5a4>
   17054:	ldr	r0, [pc, r0]
   17058:	cmp	r0, #0
   1705c:	ldr	r4, [sp, #40]	; 0x28
   17060:	beq	173e0 <set_channel_mode+0x57c>
   17064:	ldrh	r0, [r4, #80]	; 0x50
   17068:	cmp	r0, #32
   1706c:	bne	17094 <set_channel_mode+0x230>
   17070:	ldr	r0, [sp, #48]	; 0x30
   17074:	ldr	r3, [r0, #236]	; 0xec
   17078:	ldr	r0, [sp, #36]	; 0x24
   1707c:	add	r2, r0, #88	; 0x58
   17080:	ldr	r0, [pc, #900]	; 1740c <set_channel_mode+0x5a8>
   17084:	add	r0, pc, r0
   17088:	ldr	r1, [pc, #896]	; 17410 <set_channel_mode+0x5ac>
   1708c:	add	r1, pc, r1
   17090:	b	170c0 <set_channel_mode+0x25c>
   17094:	ldr	r0, [sp, #48]	; 0x30
   17098:	ldr	r0, [r0, #236]	; 0xec
   1709c:	add	r1, r4, #163	; 0xa3
   170a0:	str	r1, [sp]
   170a4:	str	r0, [sp, #4]
   170a8:	add	r2, r4, #88	; 0x58
   170ac:	add	r3, r4, #152	; 0x98
   170b0:	ldr	r0, [pc, #860]	; 17414 <set_channel_mode+0x5b0>
   170b4:	add	r0, pc, r0
   170b8:	ldr	r1, [pc, #856]	; 17418 <set_channel_mode+0x5b4>
   170bc:	add	r1, pc, r1
   170c0:	bl	e3a8 <sprintf@plt>
   170c4:	mov	r8, r0
   170c8:	ldr	r0, [pc, #844]	; 1741c <set_channel_mode+0x5b8>
   170cc:	add	r0, pc, r0
   170d0:	add	r0, r0, r8
   170d4:	str	r0, [sp, #44]	; 0x2c
   170d8:	mov	r5, #0
   170dc:	ldr	r9, [pc, #828]	; 17420 <set_channel_mode+0x5bc>
   170e0:	add	r9, pc, r9
   170e4:	ldr	r0, [pc, #824]	; 17424 <set_channel_mode+0x5c0>
   170e8:	add	r0, pc, r0
   170ec:	add	r0, r0, #12
   170f0:	str	r0, [sp, #28]
   170f4:	mov	r6, #0
   170f8:	str	r8, [fp, #-52]	; 0xffffffcc
   170fc:	b	17114 <set_channel_mode+0x2b0>
   17100:	ldr	r0, [sp, #44]	; 0x2c
   17104:	strb	r5, [r0]
   17108:	add	r6, r6, #1
   1710c:	cmp	r6, #3
   17110:	beq	17390 <set_channel_mode+0x52c>
   17114:	strb	r5, [r9]
   17118:	cmp	r6, #2
   1711c:	mov	r1, #0
   17120:	ldr	r0, [pc, #768]	; 17428 <set_channel_mode+0x5c4>
   17124:	add	r0, pc, r0
   17128:	moveq	r1, r0
   1712c:	str	r1, [sp, #56]	; 0x38
   17130:	ldr	r0, [pc, #756]	; 1742c <set_channel_mode+0x5c8>
   17134:	add	r0, pc, r0
   17138:	ldr	r1, [r0, r6, lsl #2]
   1713c:	subs	r0, r6, #2
   17140:	str	r1, [fp, #-48]	; 0xffffffd0
   17144:	movne	r0, r1
   17148:	str	r0, [sp, #52]	; 0x34
   1714c:	ldr	r0, [pc, #732]	; 17430 <set_channel_mode+0x5cc>
   17150:	ldr	r0, [pc, r0]
   17154:	cmp	r0, #1
   17158:	blt	17100 <set_channel_mode+0x29c>
   1715c:	str	r6, [sp, #32]
   17160:	mov	r1, #0
   17164:	ldr	r5, [sp, #28]
   17168:	ldr	sl, [sp, #44]	; 0x2c
   1716c:	mov	r4, r9
   17170:	mov	r6, #0
   17174:	mov	r0, #0
   17178:	str	r0, [fp, #-44]	; 0xffffffd4
   1717c:	mov	r0, #0
   17180:	str	r0, [fp, #-40]	; 0xffffffd8
   17184:	ldr	r7, [fp, #-48]	; 0xffffffd0
   17188:	b	171a8 <set_channel_mode+0x344>
   1718c:	mov	r1, r9
   17190:	add	r5, r5, #20
   17194:	add	r6, r6, #1
   17198:	ldr	r0, [pc, #676]	; 17444 <set_channel_mode+0x5e0>
   1719c:	ldr	r0, [pc, r0]
   171a0:	cmp	r6, r0
   171a4:	bge	17308 <set_channel_mode+0x4a4>
   171a8:	ldrb	r0, [r5, #-12]
   171ac:	cmp	r0, #0
   171b0:	beq	17190 <set_channel_mode+0x32c>
   171b4:	ldr	r0, [r5, #4]
   171b8:	cmp	r0, r7
   171bc:	bne	17190 <set_channel_mode+0x32c>
   171c0:	ldr	r0, [r5, #-8]
   171c4:	cmp	r0, #0
   171c8:	beq	17290 <set_channel_mode+0x42c>
   171cc:	mov	r9, r1
   171d0:	bl	dc94 <strlen@plt>
   171d4:	cmp	r0, #195	; 0xc3
   171d8:	bgt	1718c <set_channel_mode+0x328>
   171dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   171e0:	cmp	r1, #10
   171e4:	beq	17200 <set_channel_mode+0x39c>
   171e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   171ec:	add	r1, r8, r1
   171f0:	add	r0, r1, r0
   171f4:	movw	r1, #506	; 0x1fa
   171f8:	cmp	r0, r1
   171fc:	blt	1728c <set_channel_mode+0x428>
   17200:	mov	r0, #0
   17204:	strb	r0, [sl]
   17208:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1720c:	cmp	r8, r0
   17210:	mov	r1, r9
   17214:	ble	17190 <set_channel_mode+0x32c>
   17218:	ldr	r1, [sp, #40]	; 0x28
   1721c:	ldrh	r0, [r1, #80]	; 0x50
   17220:	ldr	r2, [pc, #524]	; 17434 <set_channel_mode+0x5d0>
   17224:	add	r2, pc, r2
   17228:	str	r2, [sp]
   1722c:	ldr	r2, [pc, #516]	; 17438 <set_channel_mode+0x5d4>
   17230:	add	r2, pc, r2
   17234:	str	r2, [sp, #4]
   17238:	ldr	r4, [pc, #508]	; 1743c <set_channel_mode+0x5d8>
   1723c:	add	r4, pc, r4
   17240:	str	r4, [sp, #8]
   17244:	cmp	r0, #32
   17248:	mov	r0, r1
   1724c:	ldr	r1, [sp, #36]	; 0x24
   17250:	moveq	r0, r1
   17254:	ldr	r1, [sp, #52]	; 0x34
   17258:	ldr	r2, [sp, #56]	; 0x38
   1725c:	ldr	r3, [sp, #48]	; 0x30
   17260:	bl	d730 <sendto_channel_local_priv@plt>
   17264:	mov	r1, #0
   17268:	mov	r0, #0
   1726c:	str	r0, [fp, #-40]	; 0xffffffd8
   17270:	strb	r1, [r4]
   17274:	mov	r0, #0
   17278:	str	r0, [fp, #-44]	; 0xffffffd4
   1727c:	ldr	r8, [fp, #-52]	; 0xffffffcc
   17280:	mov	r1, #0
   17284:	ldr	sl, [sp, #44]	; 0x2c
   17288:	b	17290 <set_channel_mode+0x42c>
   1728c:	mov	r1, r9
   17290:	ldr	r0, [r5]
   17294:	cmp	r1, r0
   17298:	beq	172b4 <set_channel_mode+0x450>
   1729c:	cmp	r0, #1
   172a0:	mov	r0, #45	; 0x2d
   172a4:	movweq	r0, #43	; 0x2b
   172a8:	strb	r0, [sl], #1
   172ac:	add	r8, r8, #1
   172b0:	ldr	r1, [r5]
   172b4:	ldrb	r0, [r5, #-12]
   172b8:	strb	r0, [sl], #1
   172bc:	add	r8, r8, #1
   172c0:	ldr	r2, [r5, #-8]
   172c4:	cmp	r2, #0
   172c8:	beq	17190 <set_channel_mode+0x32c>
   172cc:	mov	r0, r4
   172d0:	mov	r7, r1
   172d4:	ldr	r1, [pc, #356]	; 17440 <set_channel_mode+0x5dc>
   172d8:	add	r1, pc, r1
   172dc:	bl	e3a8 <sprintf@plt>
   172e0:	mov	r1, r7
   172e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   172e8:	ldr	r7, [fp, #-48]	; 0xffffffd0
   172ec:	add	r2, r0, r2
   172f0:	str	r2, [fp, #-40]	; 0xffffffd8
   172f4:	add	r4, r4, r0
   172f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   172fc:	add	r0, r0, #1
   17300:	str	r0, [fp, #-44]	; 0xffffffd4
   17304:	b	17190 <set_channel_mode+0x32c>
   17308:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1730c:	cmp	r0, #0
   17310:	mov	r5, #0
   17314:	ldr	r9, [pc, #300]	; 17448 <set_channel_mode+0x5e4>
   17318:	add	r9, pc, r9
   1731c:	beq	17334 <set_channel_mode+0x4d0>
   17320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17324:	sub	r0, r0, #1
   17328:	ldrb	r1, [r9, r0]
   1732c:	cmp	r1, #32
   17330:	strbeq	r5, [r9, r0]
   17334:	strb	r5, [sl]
   17338:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1733c:	cmp	r8, r0
   17340:	mov	r8, r0
   17344:	ldr	r4, [sp, #40]	; 0x28
   17348:	ldr	r6, [sp, #32]
   1734c:	ble	17108 <set_channel_mode+0x2a4>
   17350:	ldrh	r0, [r4, #80]	; 0x50
   17354:	ldr	r1, [pc, #240]	; 1744c <set_channel_mode+0x5e8>
   17358:	add	r1, pc, r1
   1735c:	str	r1, [sp]
   17360:	ldr	r1, [pc, #232]	; 17450 <set_channel_mode+0x5ec>
   17364:	add	r1, pc, r1
   17368:	stmib	sp, {r1, r9}
   1736c:	cmp	r0, #32
   17370:	mov	r0, r4
   17374:	ldr	r1, [sp, #36]	; 0x24
   17378:	moveq	r0, r1
   1737c:	ldr	r1, [sp, #52]	; 0x34
   17380:	ldr	r2, [sp, #56]	; 0x38
   17384:	ldr	r3, [sp, #48]	; 0x30
   17388:	bl	d730 <sendto_channel_local_priv@plt>
   1738c:	b	17108 <set_channel_mode+0x2a4>
   17390:	ldrb	r0, [r4, #65]	; 0x41
   17394:	tst	r0, #32
   17398:	beq	173a8 <set_channel_mode+0x544>
   1739c:	ldrh	r0, [r4, #80]	; 0x50
   173a0:	cmp	r0, #64	; 0x40
   173a4:	beq	173bc <set_channel_mode+0x558>
   173a8:	ldr	r0, [pc, #164]	; 17454 <set_channel_mode+0x5f0>
   173ac:	ldr	r0, [pc, r0]
   173b0:	ldr	r0, [r0, #8]
   173b4:	cmp	r0, #2
   173b8:	bcc	173e0 <set_channel_mode+0x57c>
   173bc:	ldr	r0, [pc, #148]	; 17458 <set_channel_mode+0x5f4>
   173c0:	ldr	r0, [pc, r0]
   173c4:	str	r0, [sp]
   173c8:	ldr	r3, [pc, #140]	; 1745c <set_channel_mode+0x5f8>
   173cc:	add	r3, pc, r3
   173d0:	ldr	r0, [sp, #24]
   173d4:	mov	r1, r4
   173d8:	ldr	r2, [sp, #48]	; 0x30
   173dc:	bl	d778 <send_cap_mode_changes@plt>
   173e0:	sub	sp, fp, #28
   173e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173e8:	.word	0x0004dc28
   173ec:	.word	0x0004e040
   173f0:	.word	0x0004d8fc
   173f4:	.word	0x0004d8f4
   173f8:	.word	0x0004b0e0
   173fc:	.word	0x00043adc
   17400:	.word	0x00043c44
   17404:	.word	0x00043b2c
   17408:	.word	0x0004d75c
   1740c:	.word	0x0004da62
   17410:	.word	0x0002a219
   17414:	.word	0x0004da32
   17418:	.word	0x0002a1f6
   1741c:	.word	0x0004da1a
   17420:	.word	0x0004dc06
   17424:	.word	0x0004aec8
   17428:	.word	0x00029d25
   1742c:	.word	0x0002a22c
   17430:	.word	0x0004d660
   17434:	.word	0x0002ee44
   17438:	.word	0x0004d8b6
   1743c:	.word	0x0004daaa
   17440:	.word	0x0003035f
   17444:	.word	0x0004d614
   17448:	.word	0x0004d9ce
   1744c:	.word	0x0002ed10
   17450:	.word	0x0004d782
   17454:	.word	0x00043624
   17458:	.word	0x0004d3f0
   1745c:	.word	0x0004abe4

00017460 <set_channel_mlock>:
   17460:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17464:	add	fp, sp, #24
   17468:	sub	sp, sp, #24
   1746c:	mov	r7, r3
   17470:	mov	r6, r2
   17474:	mov	r5, r1
   17478:	mov	r8, r0
   1747c:	ldr	r0, [r2, #104]	; 0x68
   17480:	bl	17524 <rb_free>
   17484:	ldr	r4, [fp, #8]
   17488:	cmp	r7, #0
   1748c:	beq	1749c <set_channel_mlock+0x3c>
   17490:	mov	r0, r7
   17494:	bl	17530 <rb_strdup>
   17498:	b	174a0 <set_channel_mlock+0x40>
   1749c:	mov	r0, #0
   174a0:	str	r0, [r6, #104]	; 0x68
   174a4:	cmp	r4, #0
   174a8:	beq	1750c <set_channel_mlock+0xac>
   174ac:	ldr	r1, [pc, #96]	; 17514 <set_channel_mlock+0xb4>
   174b0:	add	r1, pc, r1
   174b4:	cmp	r0, #0
   174b8:	movne	r1, r0
   174bc:	ldr	r0, [pc, #84]	; 17518 <set_channel_mlock+0xb8>
   174c0:	ldr	r0, [pc, r0]
   174c4:	ldr	r0, [r0]
   174c8:	ldr	r2, [pc, #76]	; 1751c <set_channel_mlock+0xbc>
   174cc:	ldr	r2, [pc, r2]
   174d0:	ldr	r2, [r2]
   174d4:	ldr	r3, [r6, #232]	; 0xe8
   174d8:	ldr	r7, [r6, #236]	; 0xec
   174dc:	add	r6, r5, #396	; 0x18c
   174e0:	ldr	r5, [pc, #56]	; 17520 <set_channel_mlock+0xc0>
   174e4:	add	r5, pc, r5
   174e8:	stm	sp, {r5, r6}
   174ec:	str	r3, [sp, #8]
   174f0:	str	r7, [sp, #12]
   174f4:	str	r1, [sp, #16]
   174f8:	orr	r2, r0, r2
   174fc:	mov	r0, r8
   17500:	mov	r1, #0
   17504:	mov	r3, #0
   17508:	bl	d994 <sendto_server@plt>
   1750c:	sub	sp, fp, #24
   17510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17514:	.word	0x0002e6a5
   17518:	.word	0x000433d4
   1751c:	.word	0x0004345c
   17520:	.word	0x00029de1

00017524 <rb_free>:
   17524:	cmp	r0, #0
   17528:	bxeq	lr
   1752c:	b	d328 <free@plt>

00017530 <rb_strdup>:
   17530:	push	{r4, sl, fp, lr}
   17534:	add	fp, sp, #8
   17538:	mov	r4, r0
   1753c:	bl	dc94 <strlen@plt>
   17540:	add	r0, r0, #1
   17544:	bl	da84 <malloc@plt>
   17548:	cmp	r0, #0
   1754c:	beq	1755c <rb_strdup+0x2c>
   17550:	mov	r1, r4
   17554:	pop	{r4, sl, fp, lr}
   17558:	b	d91c <strcpy@plt>
   1755c:	bl	d448 <rb_outofmemory@plt>

00017560 <check_string>:
   17560:	ldr	r1, [pc, #84]	; 175bc <check_string+0x5c>
   17564:	add	r1, pc, r1
   17568:	cmp	r0, #0
   1756c:	beq	175b4 <check_string+0x54>
   17570:	ldrb	r2, [r0]
   17574:	cmp	r2, #0
   17578:	beq	175b4 <check_string+0x54>
   1757c:	add	r1, r0, #1
   17580:	ldr	r3, [pc, #56]	; 175c0 <check_string+0x60>
   17584:	ldr	r3, [pc, r3]
   17588:	uxtb	r2, r2
   1758c:	ldrb	r2, [r3, r2, lsl #2]
   17590:	tst	r2, #32
   17594:	bne	175a8 <check_string+0x48>
   17598:	ldrb	r2, [r1], #1
   1759c:	cmp	r2, #0
   175a0:	bne	17588 <check_string+0x28>
   175a4:	b	175b0 <check_string+0x50>
   175a8:	mov	r2, #0
   175ac:	strb	r2, [r1, #-1]
   175b0:	mov	r1, r0
   175b4:	mov	r0, r1
   175b8:	bx	lr
   175bc:	.word	0x00043e2a
   175c0:	.word	0x00043474

000175c4 <make_class>:
   175c4:	push	{r4, sl, fp, lr}
   175c8:	add	fp, sp, #8
   175cc:	bl	1760c <rb_malloc>
   175d0:	mov	r4, r0
   175d4:	mov	r0, #120	; 0x78
   175d8:	mov	r1, #600	; 0x258
   175dc:	movw	r2, #11520	; 0x2d00
   175e0:	movt	r2, #305	; 0x131
   175e4:	str	r2, [r4, #24]
   175e8:	str	r1, [r4, #28]
   175ec:	str	r0, [r4, #32]
   175f0:	mov	r0, #1
   175f4:	str	r0, [r4, #8]
   175f8:	mov	r0, #128	; 0x80
   175fc:	bl	d418 <rb_new_patricia@plt>
   17600:	str	r0, [r4, #40]	; 0x28
   17604:	mov	r0, r4
   17608:	pop	{r4, sl, fp, pc}

0001760c <rb_malloc>:
   1760c:	push	{fp, lr}
   17610:	mov	fp, sp
   17614:	mov	r0, #1
   17618:	mov	r1, #56	; 0x38
   1761c:	bl	cfa4 <calloc@plt>
   17620:	cmp	r0, #0
   17624:	popne	{fp, pc}
   17628:	bl	d448 <rb_outofmemory@plt>

0001762c <free_class>:
   1762c:	push	{r4, sl, fp, lr}
   17630:	add	fp, sp, #8
   17634:	mov	r4, r0
   17638:	ldr	r0, [r0, #40]	; 0x28
   1763c:	cmp	r0, #0
   17640:	beq	1764c <free_class+0x20>
   17644:	mov	r1, #0
   17648:	bl	e558 <rb_destroy_patricia@plt>
   1764c:	ldr	r0, [r4, #4]
   17650:	bl	17660 <rb_free>
   17654:	mov	r0, r4
   17658:	pop	{r4, sl, fp, lr}
   1765c:	b	17660 <rb_free>

00017660 <rb_free>:
   17660:	cmp	r0, #0
   17664:	bxeq	lr
   17668:	b	d328 <free@plt>

0001766c <get_client_class>:
   1766c:	mov	r1, r0
   17670:	ldr	r0, [pc, #96]	; 176d8 <get_client_class+0x6c>
   17674:	add	r0, pc, r0
   17678:	cmp	r1, #0
   1767c:	beq	176c8 <get_client_class+0x5c>
   17680:	ldrh	r2, [r1, #80]	; 0x50
   17684:	cmp	r2, #4
   17688:	bxeq	lr
   1768c:	cmp	r2, #32
   17690:	bne	176a4 <get_client_class+0x38>
   17694:	ldr	r0, [r1, #432]	; 0x1b0
   17698:	ldr	r0, [r0, #136]	; 0x88
   1769c:	ldr	r0, [r0, #572]	; 0x23c
   176a0:	bx	lr
   176a4:	ldr	r0, [r1, #432]	; 0x1b0
   176a8:	ldr	r0, [r0, #132]	; 0x84
   176ac:	cmp	r0, #0
   176b0:	beq	176cc <get_client_class+0x60>
   176b4:	ldr	r1, [r0, #48]	; 0x30
   176b8:	ldr	r0, [pc, #32]	; 176e0 <get_client_class+0x74>
   176bc:	add	r0, pc, r0
   176c0:	cmp	r1, #0
   176c4:	movne	r0, r1
   176c8:	bx	lr
   176cc:	ldr	r0, [pc, #8]	; 176dc <get_client_class+0x70>
   176d0:	add	r0, pc, r0
   176d4:	bx	lr
   176d8:	.word	0x00029cf8
   176dc:	.word	0x00029ca4
   176e0:	.word	0x00029cb8

000176e4 <get_client_ping>:
   176e4:	push	{fp, lr}
   176e8:	mov	fp, sp
   176ec:	ldr	r1, [r0, #432]	; 0x1b0
   176f0:	ldrh	r0, [r0, #80]	; 0x50
   176f4:	cmp	r0, #32
   176f8:	bne	1770c <get_client_ping+0x28>
   176fc:	ldr	r0, [r1, #136]	; 0x88
   17700:	ldr	r0, [r0, #576]	; 0x240
   17704:	ldr	r0, [r0, #32]
   17708:	b	1771c <get_client_ping+0x38>
   1770c:	ldr	r0, [r1, #132]	; 0x84
   17710:	cmp	r0, #0
   17714:	beq	17728 <get_client_ping+0x44>
   17718:	bl	17730 <get_conf_ping>
   1771c:	cmp	r0, #1
   17720:	movwlt	r0, #120	; 0x78
   17724:	pop	{fp, pc}
   17728:	mov	r0, #120	; 0x78
   1772c:	pop	{fp, pc}

00017730 <get_conf_ping>:
   17730:	mov	r1, r0
   17734:	mvn	r0, #1
   17738:	cmp	r1, #0
   1773c:	bxeq	lr
   17740:	ldr	r1, [r1, #52]	; 0x34
   17744:	cmp	r1, #0
   17748:	ldrne	r0, [r1, #32]
   1774c:	bx	lr

00017750 <get_con_freq>:
   17750:	cmp	r0, #0
   17754:	ldrne	r0, [r0, #28]
   17758:	moveq	r0, #600	; 0x258
   1775c:	bx	lr

00017760 <add_class>:
   17760:	push	{r4, sl, fp, lr}
   17764:	add	fp, sp, #8
   17768:	mov	r4, r0
   1776c:	ldr	r0, [r0, #4]
   17770:	bl	d6a0 <find_class@plt>
   17774:	ldr	r1, [pc, #132]	; 17800 <add_class+0xa0>
   17778:	ldr	r1, [pc, r1]
   1777c:	ldr	r1, [r1]
   17780:	cmp	r0, r1
   17784:	beq	177e4 <add_class+0x84>
   17788:	ldr	r1, [r4, #8]
   1778c:	str	r1, [r0, #8]
   17790:	ldr	r1, [r4, #12]
   17794:	str	r1, [r0, #12]
   17798:	ldr	r1, [r4, #16]
   1779c:	str	r1, [r0, #16]
   177a0:	ldr	r1, [r4, #20]
   177a4:	str	r1, [r0, #20]
   177a8:	ldr	r1, [r4, #32]
   177ac:	str	r1, [r0, #32]
   177b0:	ldr	r1, [r4, #24]
   177b4:	str	r1, [r0, #24]
   177b8:	ldr	r1, [r4, #28]
   177bc:	str	r1, [r0, #28]
   177c0:	ldr	r1, [r4, #44]	; 0x2c
   177c4:	str	r1, [r0, #44]	; 0x2c
   177c8:	ldr	r1, [r4, #48]	; 0x30
   177cc:	str	r1, [r0, #48]	; 0x30
   177d0:	ldr	r1, [r4, #52]	; 0x34
   177d4:	str	r1, [r0, #52]	; 0x34
   177d8:	mov	r0, r4
   177dc:	pop	{r4, sl, fp, lr}
   177e0:	b	1762c <free_class>
   177e4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   177e8:	mov	r1, r0
   177ec:	mov	r0, r4
   177f0:	bl	1786c <rb_dlinkAdd>
   177f4:	mov	r0, #0
   177f8:	str	r0, [r4, #36]	; 0x24
   177fc:	pop	{r4, sl, fp, pc}
   17800:	.word	0x000430d4

00017804 <find_class>:
   17804:	push	{r4, r5, r6, sl, fp, lr}
   17808:	add	fp, sp, #16
   1780c:	cmp	r0, #0
   17810:	beq	17850 <find_class+0x4c>
   17814:	mov	r4, r0
   17818:	ldr	r0, [pc, #68]	; 17864 <find_class+0x60>
   1781c:	ldr	r0, [pc, r0]
   17820:	ldr	r6, [r0]
   17824:	cmp	r6, #0
   17828:	beq	17850 <find_class+0x4c>
   1782c:	ldr	r5, [r6]
   17830:	ldr	r0, [r5, #4]
   17834:	mov	r1, r4
   17838:	bl	d0c4 <strcmp@plt>
   1783c:	cmp	r0, #0
   17840:	beq	1785c <find_class+0x58>
   17844:	ldr	r6, [r6, #8]
   17848:	cmp	r6, #0
   1784c:	bne	1782c <find_class+0x28>
   17850:	ldr	r0, [pc, #16]	; 17868 <find_class+0x64>
   17854:	ldr	r0, [pc, r0]
   17858:	ldr	r5, [r0]
   1785c:	mov	r0, r5
   17860:	pop	{r4, r5, r6, sl, fp, pc}
   17864:	.word	0x000432a8
   17868:	.word	0x00042ff8

0001786c <rb_dlinkAdd>:
   1786c:	push	{fp, lr}
   17870:	mov	fp, sp
   17874:	cmp	r0, #0
   17878:	beq	178d4 <rb_dlinkAdd+0x68>
   1787c:	cmp	r1, #0
   17880:	beq	178f4 <rb_dlinkAdd+0x88>
   17884:	mov	r2, #0
   17888:	stm	r1, {r0, r2}
   1788c:	ldr	r0, [pc, #128]	; 17914 <rb_dlinkAdd+0xa8>
   17890:	ldr	r0, [pc, r0]
   17894:	ldr	r2, [r0]
   17898:	str	r2, [r1, #8]
   1789c:	cmp	r2, #0
   178a0:	beq	178b0 <rb_dlinkAdd+0x44>
   178a4:	add	r2, r2, #4
   178a8:	str	r1, [r2]
   178ac:	b	178c0 <rb_dlinkAdd+0x54>
   178b0:	mov	r2, r0
   178b4:	ldr	r3, [r2, #4]!
   178b8:	cmp	r3, #0
   178bc:	streq	r1, [r2]
   178c0:	str	r1, [r0]
   178c4:	ldr	r1, [r0, #8]
   178c8:	add	r1, r1, #1
   178cc:	str	r1, [r0, #8]
   178d0:	pop	{fp, pc}
   178d4:	ldr	r0, [pc, #60]	; 17918 <rb_dlinkAdd+0xac>
   178d8:	add	r0, pc, r0
   178dc:	ldr	r1, [pc, #56]	; 1791c <rb_dlinkAdd+0xb0>
   178e0:	add	r1, pc, r1
   178e4:	ldr	r3, [pc, #52]	; 17920 <rb_dlinkAdd+0xb4>
   178e8:	add	r3, pc, r3
   178ec:	mov	r2, #143	; 0x8f
   178f0:	bl	e7e0 <__assert_fail@plt>
   178f4:	ldr	r0, [pc, #40]	; 17924 <rb_dlinkAdd+0xb8>
   178f8:	add	r0, pc, r0
   178fc:	ldr	r1, [pc, #36]	; 17928 <rb_dlinkAdd+0xbc>
   17900:	add	r1, pc, r1
   17904:	ldr	r3, [pc, #32]	; 1792c <rb_dlinkAdd+0xc0>
   17908:	add	r3, pc, r3
   1790c:	mov	r2, #144	; 0x90
   17910:	bl	e7e0 <__assert_fail@plt>
   17914:	.word	0x00043234
   17918:	.word	0x00029099
   1791c:	.word	0x00029036
   17920:	.word	0x00029096
   17924:	.word	0x00029014
   17928:	.word	0x00029016
   1792c:	.word	0x00029076

00017930 <check_class>:
   17930:	push	{r4, r5, r6, sl, fp, lr}
   17934:	add	fp, sp, #16
   17938:	ldr	r0, [pc, #84]	; 17994 <check_class+0x64>
   1793c:	ldr	r0, [pc, r0]
   17940:	ldr	r6, [r0]
   17944:	cmp	r6, #0
   17948:	beq	17990 <check_class+0x60>
   1794c:	mov	r5, r6
   17950:	ldr	r4, [r6]
   17954:	ldr	r6, [r6, #8]
   17958:	ldr	r0, [r4, #8]
   1795c:	cmn	r0, #1
   17960:	bgt	17944 <check_class+0x14>
   17964:	mov	r0, r5
   17968:	bl	17998 <rb_dlinkDelete>
   1796c:	mov	r0, r5
   17970:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   17974:	ldr	r0, [r4, #36]	; 0x24
   17978:	cmp	r0, #0
   1797c:	bgt	17944 <check_class+0x14>
   17980:	mov	r0, r4
   17984:	bl	e7bc <free_class@plt>
   17988:	cmp	r6, #0
   1798c:	bne	1794c <check_class+0x1c>
   17990:	pop	{r4, r5, r6, sl, fp, pc}
   17994:	.word	0x00043188

00017998 <rb_dlinkDelete>:
   17998:	push	{fp, lr}
   1799c:	mov	fp, sp
   179a0:	cmp	r0, #0
   179a4:	beq	179f4 <rb_dlinkDelete+0x5c>
   179a8:	ldr	ip, [pc, #100]	; 17a14 <rb_dlinkDelete+0x7c>
   179ac:	ldr	ip, [pc, ip]
   179b0:	ldmib	r0, {r2, r3}
   179b4:	add	r1, r3, #4
   179b8:	cmp	r3, #0
   179bc:	addeq	r1, ip, #4
   179c0:	str	r2, [r1]
   179c4:	ldmib	r0, {r1, r2}
   179c8:	cmp	r1, #0
   179cc:	mov	r3, ip
   179d0:	addne	r3, r1, #8
   179d4:	str	r2, [r3]
   179d8:	mov	r1, #0
   179dc:	str	r1, [r0, #4]
   179e0:	str	r1, [r0, #8]
   179e4:	ldr	r0, [ip, #8]
   179e8:	sub	r0, r0, #1
   179ec:	str	r0, [ip, #8]
   179f0:	pop	{fp, pc}
   179f4:	ldr	r0, [pc, #28]	; 17a18 <rb_dlinkDelete+0x80>
   179f8:	add	r0, pc, r0
   179fc:	ldr	r1, [pc, #24]	; 17a1c <rb_dlinkDelete+0x84>
   17a00:	add	r1, pc, r1
   17a04:	ldr	r3, [pc, #20]	; 17a20 <rb_dlinkDelete+0x88>
   17a08:	add	r3, pc, r3
   17a0c:	mov	r2, #235	; 0xeb
   17a10:	bl	e7e0 <__assert_fail@plt>
   17a14:	.word	0x00043118
   17a18:	.word	0x00028f14
   17a1c:	.word	0x00028f16
   17a20:	.word	0x00028fb1

00017a24 <initclass>:
   17a24:	push	{r4, sl, fp, lr}
   17a28:	add	fp, sp, #8
   17a2c:	bl	de68 <make_class@plt>
   17a30:	ldr	r4, [pc, #20]	; 17a4c <initclass+0x28>
   17a34:	ldr	r4, [pc, r4]
   17a38:	str	r0, [r4]
   17a3c:	bl	17a50 <rb_strdup>
   17a40:	ldr	r1, [r4]
   17a44:	str	r0, [r1, #4]
   17a48:	pop	{r4, sl, fp, pc}
   17a4c:	.word	0x00042e18

00017a50 <rb_strdup>:
   17a50:	push	{fp, lr}
   17a54:	mov	fp, sp
   17a58:	mov	r0, #8
   17a5c:	bl	da84 <malloc@plt>
   17a60:	cmp	r0, #0
   17a64:	movwne	r1, #27765	; 0x6c75
   17a68:	movtne	r1, #116	; 0x74
   17a6c:	strne	r1, [r0, #4]
   17a70:	movwne	r1, #25956	; 0x6564
   17a74:	movtne	r1, #24934	; 0x6166
   17a78:	strne	r1, [r0]
   17a7c:	popne	{fp, pc}
   17a80:	bl	d448 <rb_outofmemory@plt>

00017a84 <report_classes>:
   17a84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a88:	add	fp, sp, #24
   17a8c:	sub	sp, sp, #40	; 0x28
   17a90:	mov	r9, r0
   17a94:	ldr	r0, [pc, #220]	; 17b78 <report_classes+0xf4>
   17a98:	ldr	r0, [pc, r0]
   17a9c:	ldr	r6, [r0]
   17aa0:	cmp	r6, #0
   17aa4:	beq	17b10 <report_classes+0x8c>
   17aa8:	ldr	r8, [pc, #204]	; 17b7c <report_classes+0xf8>
   17aac:	add	r8, pc, r8
   17ab0:	ldr	r0, [r6]
   17ab4:	ldr	r3, [r0, #4]
   17ab8:	ldr	r1, [r0, #8]
   17abc:	ldr	lr, [r0, #12]
   17ac0:	ldr	ip, [r0, #16]
   17ac4:	ldr	r7, [r0, #20]
   17ac8:	ldr	r4, [r0, #24]
   17acc:	ldr	r5, [r0, #28]
   17ad0:	ldr	r2, [r0, #32]
   17ad4:	ldr	r0, [r0, #36]	; 0x24
   17ad8:	str	r0, [sp, #32]
   17adc:	stm	sp, {r2, r5}
   17ae0:	add	r0, sp, #8
   17ae4:	stm	r0, {r1, r4, lr}
   17ae8:	str	r7, [sp, #20]
   17aec:	str	ip, [sp, #24]
   17af0:	str	r7, [sp, #28]
   17af4:	mov	r0, r9
   17af8:	mov	r1, #218	; 0xda
   17afc:	mov	r2, r8
   17b00:	bl	dc7c <sendto_one_numeric@plt>
   17b04:	ldr	r6, [r6, #8]
   17b08:	cmp	r6, #0
   17b0c:	bne	17ab0 <report_classes+0x2c>
   17b10:	ldr	r0, [pc, #104]	; 17b80 <report_classes+0xfc>
   17b14:	ldr	r0, [pc, r0]
   17b18:	ldr	r0, [r0]
   17b1c:	ldr	r3, [r0, #4]
   17b20:	add	ip, r0, #8
   17b24:	ldm	ip, {r1, r2, ip}
   17b28:	ldr	r6, [r0, #20]
   17b2c:	ldr	r5, [r0, #24]
   17b30:	ldr	r4, [r0, #28]
   17b34:	ldr	r7, [r0, #32]
   17b38:	ldr	r0, [r0, #36]	; 0x24
   17b3c:	str	r0, [sp, #32]
   17b40:	str	r7, [sp]
   17b44:	str	r4, [sp, #4]
   17b48:	str	r1, [sp, #8]
   17b4c:	str	r5, [sp, #12]
   17b50:	add	r0, sp, #16
   17b54:	stm	r0, {r2, r6, ip}
   17b58:	str	r6, [sp, #28]
   17b5c:	ldr	r2, [pc, #32]	; 17b84 <report_classes+0x100>
   17b60:	add	r2, pc, r2
   17b64:	mov	r0, r9
   17b68:	mov	r1, #218	; 0xda
   17b6c:	bl	dc7c <sendto_one_numeric@plt>
   17b70:	sub	sp, fp, #24
   17b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17b78:	.word	0x0004302c
   17b7c:	.word	0x000298d0
   17b80:	.word	0x00042d38
   17b84:	.word	0x0002981c

00017b88 <get_sendq>:
   17b88:	mov	r1, r0
   17b8c:	movw	r0, #11520	; 0x2d00
   17b90:	movt	r0, #305	; 0x131
   17b94:	cmp	r1, #0
   17b98:	beq	17be4 <get_sendq+0x5c>
   17b9c:	ldrh	r2, [r1, #80]	; 0x50
   17ba0:	cmp	r2, #4
   17ba4:	beq	17be4 <get_sendq+0x5c>
   17ba8:	cmp	r2, #32
   17bac:	bne	17bc0 <get_sendq+0x38>
   17bb0:	ldr	r0, [r1, #432]	; 0x1b0
   17bb4:	ldr	r0, [r0, #136]	; 0x88
   17bb8:	ldr	r0, [r0, #576]	; 0x240
   17bbc:	b	17be0 <get_sendq+0x58>
   17bc0:	ldr	r1, [r1, #432]	; 0x1b0
   17bc4:	ldr	r1, [r1, #132]	; 0x84
   17bc8:	cmp	r1, #0
   17bcc:	beq	17be4 <get_sendq+0x5c>
   17bd0:	ldrb	r2, [r1]
   17bd4:	tst	r2, #2
   17bd8:	bxeq	lr
   17bdc:	ldr	r0, [r1, #52]	; 0x34
   17be0:	ldr	r0, [r0, #24]
   17be4:	bx	lr

00017be8 <init_client>:
   17be8:	push	{fp, lr}
   17bec:	mov	fp, sp
   17bf0:	ldr	r2, [pc, #300]	; 17d24 <init_client+0x13c>
   17bf4:	add	r2, pc, r2
   17bf8:	mov	r0, #448	; 0x1c0
   17bfc:	mov	r1, #8192	; 0x2000
   17c00:	bl	ded4 <rb_bh_create@plt>
   17c04:	ldr	r1, [pc, #284]	; 17d28 <init_client+0x140>
   17c08:	add	r1, pc, r1
   17c0c:	str	r0, [r1]
   17c10:	ldr	r2, [pc, #276]	; 17d2c <init_client+0x144>
   17c14:	add	r2, pc, r2
   17c18:	mov	r0, #492	; 0x1ec
   17c1c:	mov	r1, #1024	; 0x400
   17c20:	bl	ded4 <rb_bh_create@plt>
   17c24:	ldr	r1, [pc, #260]	; 17d30 <init_client+0x148>
   17c28:	add	r1, pc, r1
   17c2c:	str	r0, [r1]
   17c30:	ldr	r2, [pc, #252]	; 17d34 <init_client+0x14c>
   17c34:	add	r2, pc, r2
   17c38:	mov	r0, #272	; 0x110
   17c3c:	mov	r1, #256	; 0x100
   17c40:	bl	ded4 <rb_bh_create@plt>
   17c44:	ldr	r1, [pc, #236]	; 17d38 <init_client+0x150>
   17c48:	add	r1, pc, r1
   17c4c:	str	r0, [r1]
   17c50:	ldr	r2, [pc, #228]	; 17d3c <init_client+0x154>
   17c54:	add	r2, pc, r2
   17c58:	mov	r0, #76	; 0x4c
   17c5c:	mov	r1, #8192	; 0x2000
   17c60:	bl	ded4 <rb_bh_create@plt>
   17c64:	ldr	r1, [pc, #212]	; 17d40 <init_client+0x158>
   17c68:	add	r1, pc, r1
   17c6c:	str	r0, [r1]
   17c70:	ldr	r2, [pc, #204]	; 17d44 <init_client+0x15c>
   17c74:	add	r2, pc, r2
   17c78:	movw	r0, #390	; 0x186
   17c7c:	mov	r1, #512	; 0x200
   17c80:	bl	ded4 <rb_bh_create@plt>
   17c84:	ldr	r1, [pc, #188]	; 17d48 <init_client+0x160>
   17c88:	add	r1, pc, r1
   17c8c:	str	r0, [r1]
   17c90:	ldr	r0, [pc, #180]	; 17d4c <init_client+0x164>
   17c94:	add	r0, pc, r0
   17c98:	ldr	r1, [pc, #176]	; 17d50 <init_client+0x168>
   17c9c:	add	r1, pc, r1
   17ca0:	mov	r2, #0
   17ca4:	mov	r3, #30
   17ca8:	bl	d220 <rb_event_addish@plt>
   17cac:	ldr	r0, [pc, #160]	; 17d54 <init_client+0x16c>
   17cb0:	add	r0, pc, r0
   17cb4:	ldr	r1, [pc, #156]	; 17d58 <init_client+0x170>
   17cb8:	add	r1, pc, r1
   17cbc:	mov	r2, #0
   17cc0:	mov	r3, #4
   17cc4:	bl	d220 <rb_event_addish@plt>
   17cc8:	ldr	r0, [pc, #140]	; 17d5c <init_client+0x174>
   17ccc:	add	r0, pc, r0
   17cd0:	ldr	r1, [pc, #136]	; 17d60 <init_client+0x178>
   17cd4:	add	r1, pc, r1
   17cd8:	mov	r2, #0
   17cdc:	mov	r3, #1
   17ce0:	bl	d220 <rb_event_addish@plt>
   17ce4:	ldr	r1, [pc, #120]	; 17d64 <init_client+0x17c>
   17ce8:	ldr	r1, [pc, r1]
   17cec:	ldr	r0, [pc, #116]	; 17d68 <init_client+0x180>
   17cf0:	add	r0, pc, r0
   17cf4:	mov	r2, #0
   17cf8:	mov	r3, #1
   17cfc:	bl	d0e8 <rb_event_add@plt>
   17d00:	ldr	r1, [pc, #100]	; 17d6c <init_client+0x184>
   17d04:	ldr	r1, [pc, r1]
   17d08:	ldr	r0, [pc, #96]	; 17d70 <init_client+0x188>
   17d0c:	add	r0, pc, r0
   17d10:	bl	dfb8 <rb_dictionary_create@plt>
   17d14:	ldr	r1, [pc, #88]	; 17d74 <init_client+0x18c>
   17d18:	ldr	r1, [pc, r1]
   17d1c:	str	r0, [r1]
   17d20:	pop	{fp, pc}
   17d24:	.word	0x000297a9
   17d28:	.word	0x0004d4ec
   17d2c:	.word	0x00029788
   17d30:	.word	0x0004d4d0
   17d34:	.word	0x00029775
   17d38:	.word	0x0004d4b4
   17d3c:	.word	0x00029762
   17d40:	.word	0x0004d498
   17d44:	.word	0x0002974c
   17d48:	.word	0x0004d47c
   17d4c:	.word	0x00029736
   17d50:	.word	0x000000d4
   17d54:	.word	0x00029726
   17d58:	.word	0x000000e8
   17d5c:	.word	0x0002971e
   17d60:	.word	0x000002b0
   17d64:	.word	0x00042e6c
   17d68:	.word	0x0002970f
   17d6c:	.word	0x00042e74
   17d70:	.word	0x00029700
   17d74:	.word	0x00042c24

00017d78 <check_pings>:
   17d78:	push	{fp, lr}
   17d7c:	mov	fp, sp
   17d80:	ldr	r0, [pc, #24]	; 17da0 <check_pings+0x28>
   17d84:	ldr	r0, [pc, r0]
   17d88:	bl	1a870 <check_pings_list>
   17d8c:	ldr	r0, [pc, #16]	; 17da4 <check_pings+0x2c>
   17d90:	ldr	r0, [pc, r0]
   17d94:	bl	1a870 <check_pings_list>
   17d98:	pop	{fp, lr}
   17d9c:	b	1a9f4 <check_unknowns_list>
   17da0:	.word	0x00042da4
   17da4:	.word	0x00042c40

00017da8 <free_exited_clients>:
   17da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dac:	add	fp, sp, #28
   17db0:	sub	sp, sp, #28
   17db4:	ldr	r0, [pc, #424]	; 17f64 <free_exited_clients+0x1bc>
   17db8:	ldr	r0, [pc, r0]
   17dbc:	ldr	r6, [r0]
   17dc0:	cmp	r6, #0
   17dc4:	beq	17edc <free_exited_clients+0x134>
   17dc8:	ldr	r7, [pc, #408]	; 17f68 <free_exited_clients+0x1c0>
   17dcc:	add	r7, pc, r7
   17dd0:	b	17e04 <free_exited_clients+0x5c>
   17dd4:	mov	r0, r5
   17dd8:	bl	1ab2c <release_client_state>
   17ddc:	mov	r0, r5
   17de0:	bl	1ab80 <free_client>
   17de4:	mov	r0, r4
   17de8:	ldr	r1, [pc, #392]	; 17f78 <free_exited_clients+0x1d0>
   17dec:	ldr	r1, [pc, r1]
   17df0:	bl	19020 <rb_dlinkDelete>
   17df4:	mov	r0, r4
   17df8:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   17dfc:	cmp	r6, #0
   17e00:	beq	17edc <free_exited_clients+0x134>
   17e04:	mov	r4, r6
   17e08:	ldr	r5, [r6]
   17e0c:	ldr	r6, [r6, #8]
   17e10:	ldr	r9, [pc, #340]	; 17f6c <free_exited_clients+0x1c4>
   17e14:	ldr	r9, [pc, r9]
   17e18:	cmp	r9, #0
   17e1c:	beq	17eb8 <free_exited_clients+0x110>
   17e20:	str	r6, [sp, #24]
   17e24:	add	r8, r5, #64	; 0x40
   17e28:	add	r6, r5, #88	; 0x58
   17e2c:	mov	sl, #0
   17e30:	b	17e40 <free_exited_clients+0x98>
   17e34:	ldr	r9, [r9, #8]
   17e38:	cmp	r9, #0
   17e3c:	beq	17e9c <free_exited_clients+0xf4>
   17e40:	ldr	r0, [r9]
   17e44:	ldr	r0, [r0, #12]
   17e48:	cmp	r0, r5
   17e4c:	bne	17e34 <free_exited_clients+0x8c>
   17e50:	ldrh	r0, [r5, #80]	; 0x50
   17e54:	ldrd	r2, [r8]
   17e58:	ldrb	r1, [r5, #82]	; 0x52
   17e5c:	str	r2, [sp, #8]
   17e60:	str	r3, [sp, #12]
   17e64:	str	r1, [sp, #16]
   17e68:	str	r0, [sp]
   17e6c:	mov	r0, #256	; 0x100
   17e70:	mov	r1, #0
   17e74:	ldr	r2, [pc, #244]	; 17f70 <free_exited_clients+0x1c8>
   17e78:	add	r2, pc, r2
   17e7c:	mov	r3, r6
   17e80:	bl	d634 <sendto_realops_snomask@plt>
   17e84:	mov	r0, #256	; 0x100
   17e88:	mov	r1, #0
   17e8c:	mov	r2, r7
   17e90:	bl	d634 <sendto_realops_snomask@plt>
   17e94:	add	sl, sl, #1
   17e98:	b	17e34 <free_exited_clients+0x8c>
   17e9c:	cmp	sl, #0
   17ea0:	ldr	r6, [sp, #24]
   17ea4:	bne	17de4 <free_exited_clients+0x3c>
   17ea8:	ldr	r0, [r4]
   17eac:	cmp	r0, #0
   17eb0:	bne	17dd4 <free_exited_clients+0x2c>
   17eb4:	b	17ec4 <free_exited_clients+0x11c>
   17eb8:	mov	r0, r5
   17ebc:	cmp	r0, #0
   17ec0:	bne	17dd4 <free_exited_clients+0x2c>
   17ec4:	mov	r0, #256	; 0x100
   17ec8:	mov	r1, #0
   17ecc:	ldr	r2, [pc, #160]	; 17f74 <free_exited_clients+0x1cc>
   17ed0:	add	r2, pc, r2
   17ed4:	bl	d634 <sendto_realops_snomask@plt>
   17ed8:	b	17de4 <free_exited_clients+0x3c>
   17edc:	ldr	r4, [pc, #152]	; 17f7c <free_exited_clients+0x1d4>
   17ee0:	ldr	r4, [pc, r4]
   17ee4:	cmp	r4, #0
   17ee8:	beq	17f5c <free_exited_clients+0x1b4>
   17eec:	ldr	r8, [pc, #140]	; 17f80 <free_exited_clients+0x1d8>
   17ef0:	add	r8, pc, r8
   17ef4:	ldr	r7, [pc, #136]	; 17f84 <free_exited_clients+0x1dc>
   17ef8:	add	r7, pc, r7
   17efc:	b	17f30 <free_exited_clients+0x188>
   17f00:	mov	r0, r6
   17f04:	bl	1ab2c <release_client_state>
   17f08:	mov	r0, r6
   17f0c:	bl	1ab80 <free_client>
   17f10:	mov	r1, r7
   17f14:	mov	r0, r4
   17f18:	bl	19020 <rb_dlinkDelete>
   17f1c:	mov	r0, r4
   17f20:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   17f24:	cmp	r5, #0
   17f28:	mov	r4, r5
   17f2c:	beq	17f5c <free_exited_clients+0x1b4>
   17f30:	ldr	r6, [r4]
   17f34:	ldr	r5, [r4, #8]
   17f38:	cmp	r6, #0
   17f3c:	bne	17f00 <free_exited_clients+0x158>
   17f40:	mov	r0, #256	; 0x100
   17f44:	mov	r1, #0
   17f48:	mov	r2, r8
   17f4c:	bl	d634 <sendto_realops_snomask@plt>
   17f50:	ldr	r1, [pc, #48]	; 17f88 <free_exited_clients+0x1e0>
   17f54:	ldr	r1, [pc, r1]
   17f58:	b	17f14 <free_exited_clients+0x16c>
   17f5c:	sub	sp, fp, #28
   17f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f64:	.word	0x00042ccc
   17f68:	.word	0x000299d3
   17f6c:	.word	0x0004d414
   17f70:	.word	0x000298f4
   17f74:	.word	0x000298ff
   17f78:	.word	0x00042c98
   17f7c:	.word	0x0004d368
   17f80:	.word	0x000298df
   17f84:	.word	0x0004d350
   17f88:	.word	0x00042b30

00017f8c <exit_aborted_clients>:
   17f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f90:	add	fp, sp, #28
   17f94:	sub	sp, sp, #20
   17f98:	ldr	r5, [pc, #276]	; 180b4 <exit_aborted_clients+0x128>
   17f9c:	ldr	r5, [pc, r5]
   17fa0:	cmp	r5, #0
   17fa4:	beq	180ac <exit_aborted_clients+0x120>
   17fa8:	ldr	r9, [pc, #264]	; 180b8 <exit_aborted_clients+0x12c>
   17fac:	add	r9, pc, r9
   17fb0:	ldr	sl, [pc, #260]	; 180bc <exit_aborted_clients+0x130>
   17fb4:	ldr	sl, [pc, sl]
   17fb8:	ldr	r7, [pc, #256]	; 180c0 <exit_aborted_clients+0x134>
   17fbc:	add	r7, pc, r7
   17fc0:	ldr	r6, [pc, #252]	; 180c4 <exit_aborted_clients+0x138>
   17fc4:	add	r6, pc, r6
   17fc8:	b	18018 <exit_aborted_clients+0x8c>
   17fcc:	ldr	r0, [r4, #12]
   17fd0:	ldrh	r1, [r0, #80]	; 0x50
   17fd4:	ldrd	r2, [r0, #64]	; 0x40
   17fd8:	ldrb	r5, [r0, #82]	; 0x52
   17fdc:	add	ip, sp, #8
   17fe0:	stm	ip, {r2, r3, r5}
   17fe4:	str	r1, [sp]
   17fe8:	add	r3, r0, #88	; 0x58
   17fec:	mov	r0, #256	; 0x100
   17ff0:	mov	r1, #0
   17ff4:	mov	r2, r7
   17ff8:	bl	d634 <sendto_realops_snomask@plt>
   17ffc:	mov	r0, #256	; 0x100
   18000:	mov	r1, #0
   18004:	mov	r2, r6
   18008:	bl	d634 <sendto_realops_snomask@plt>
   1800c:	cmp	r8, #0
   18010:	mov	r5, r8
   18014:	beq	180ac <exit_aborted_clients+0x120>
   18018:	ldr	r4, [r5]
   1801c:	ldr	r8, [r5, #8]
   18020:	ldr	r0, [r4, #12]
   18024:	bl	1ad18 <rb_dlinkFind>
   18028:	cmp	r0, #0
   1802c:	bne	17fcc <exit_aborted_clients+0x40>
   18030:	mov	r0, r5
   18034:	mov	r1, r9
   18038:	bl	19020 <rb_dlinkDelete>
   1803c:	ldr	r0, [r4, #12]
   18040:	ldrh	r1, [r0, #80]	; 0x50
   18044:	sub	r1, r1, #1
   18048:	cmp	r1, #31
   1804c:	bhi	18080 <exit_aborted_clients+0xf4>
   18050:	mov	r2, #1
   18054:	mov	r3, #-2147483645	; 0x80000003
   18058:	tst	r3, r2, lsl r1
   1805c:	beq	18080 <exit_aborted_clients+0xf4>
   18060:	add	r1, r4, #16
   18064:	str	r1, [sp]
   18068:	add	r3, r0, #88	; 0x58
   1806c:	mov	r0, #256	; 0x100
   18070:	mov	r1, #0
   18074:	ldr	r2, [pc, #76]	; 180c8 <exit_aborted_clients+0x13c>
   18078:	add	r2, pc, r2
   1807c:	bl	d634 <sendto_realops_snomask@plt>
   18080:	ldr	r0, [r4, #12]
   18084:	ldr	r1, [r0, #64]	; 0x40
   18088:	bic	r1, r1, #32
   1808c:	str	r1, [r0, #64]	; 0x40
   18090:	add	r3, r4, #16
   18094:	mov	r1, r0
   18098:	mov	r2, sl
   1809c:	bl	e534 <exit_client@plt>
   180a0:	mov	r0, r4
   180a4:	bl	184a8 <rb_free>
   180a8:	b	1800c <exit_aborted_clients+0x80>
   180ac:	sub	sp, fp, #28
   180b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180b4:	.word	0x0004d28c
   180b8:	.word	0x0004d27c
   180bc:	.word	0x00042ba4
   180c0:	.word	0x00029836
   180c4:	.word	0x000297db
   180c8:	.word	0x000297ac

000180cc <connid_get>:
   180cc:	push	{r4, r5, r6, sl, fp, lr}
   180d0:	add	fp, sp, #16
   180d4:	mov	r4, r0
   180d8:	ldrb	r1, [r0, #65]	; 0x41
   180dc:	mov	r0, #0
   180e0:	tst	r1, #32
   180e4:	beq	18174 <connid_get+0xa8>
   180e8:	ldr	r0, [pc, #136]	; 18178 <connid_get+0xac>
   180ec:	ldr	r0, [pc, r0]
   180f0:	add	r0, r0, #1
   180f4:	ldr	r5, [pc, #128]	; 1817c <connid_get+0xb0>
   180f8:	add	r5, pc, r5
   180fc:	str	r0, [r5]
   18100:	bl	dfdc <find_cli_connid_hash@plt>
   18104:	ldr	r1, [pc, #116]	; 18180 <connid_get+0xb4>
   18108:	ldr	r1, [pc, r1]
   1810c:	cmp	r0, #0
   18110:	beq	18144 <connid_get+0x78>
   18114:	mov	r6, #1
   18118:	cmp	r1, #0
   1811c:	streq	r6, [r5]
   18120:	ldr	r0, [pc, #92]	; 18184 <connid_get+0xb8>
   18124:	ldr	r0, [pc, r0]
   18128:	add	r0, r0, #1
   1812c:	str	r0, [r5]
   18130:	bl	dfdc <find_cli_connid_hash@plt>
   18134:	ldr	r1, [pc, #76]	; 18188 <connid_get+0xbc>
   18138:	ldr	r1, [pc, r1]
   1813c:	cmp	r0, #0
   18140:	bne	18118 <connid_get+0x4c>
   18144:	mov	r0, r4
   18148:	bl	de44 <add_to_cli_connid_hash@plt>
   1814c:	ldr	r5, [pc, #56]	; 1818c <connid_get+0xc0>
   18150:	ldr	r5, [pc, r5]
   18154:	bl	dc58 <rb_make_rb_dlink_node@plt>
   18158:	mov	r1, r0
   1815c:	ldr	r0, [r4, #432]	; 0x1b0
   18160:	add	r2, r0, #12
   18164:	mov	r0, r5
   18168:	bl	18194 <rb_dlinkAdd>
   1816c:	ldr	r0, [pc, #28]	; 18190 <connid_get+0xc4>
   18170:	ldr	r0, [pc, r0]
   18174:	pop	{r4, r5, r6, sl, fp, pc}
   18178:	.word	0x0004d01c
   1817c:	.word	0x0004d010
   18180:	.word	0x0004d000
   18184:	.word	0x0004cfe4
   18188:	.word	0x0004cfd0
   1818c:	.word	0x0004cfb8
   18190:	.word	0x0004cf98

00018194 <rb_dlinkAdd>:
   18194:	push	{fp, lr}
   18198:	mov	fp, sp
   1819c:	cmp	r0, #0
   181a0:	beq	18200 <rb_dlinkAdd+0x6c>
   181a4:	cmp	r1, #0
   181a8:	beq	18220 <rb_dlinkAdd+0x8c>
   181ac:	cmp	r2, #0
   181b0:	beq	18240 <rb_dlinkAdd+0xac>
   181b4:	mov	r3, #0
   181b8:	stm	r1, {r0, r3}
   181bc:	ldr	r0, [r2]
   181c0:	str	r0, [r1, #8]
   181c4:	ldr	r0, [r2]
   181c8:	cmp	r0, #0
   181cc:	beq	181dc <rb_dlinkAdd+0x48>
   181d0:	add	r0, r0, #4
   181d4:	str	r1, [r0]
   181d8:	b	181ec <rb_dlinkAdd+0x58>
   181dc:	mov	r0, r2
   181e0:	ldr	r3, [r0, #4]!
   181e4:	cmp	r3, #0
   181e8:	streq	r1, [r0]
   181ec:	str	r1, [r2]
   181f0:	ldr	r0, [r2, #8]
   181f4:	add	r0, r0, #1
   181f8:	str	r0, [r2, #8]
   181fc:	pop	{fp, pc}
   18200:	ldr	r0, [pc, #88]	; 18260 <rb_dlinkAdd+0xcc>
   18204:	add	r0, pc, r0
   18208:	ldr	r1, [pc, #84]	; 18264 <rb_dlinkAdd+0xd0>
   1820c:	add	r1, pc, r1
   18210:	ldr	r3, [pc, #80]	; 18268 <rb_dlinkAdd+0xd4>
   18214:	add	r3, pc, r3
   18218:	mov	r2, #143	; 0x8f
   1821c:	bl	e7e0 <__assert_fail@plt>
   18220:	ldr	r0, [pc, #68]	; 1826c <rb_dlinkAdd+0xd8>
   18224:	add	r0, pc, r0
   18228:	ldr	r1, [pc, #64]	; 18270 <rb_dlinkAdd+0xdc>
   1822c:	add	r1, pc, r1
   18230:	ldr	r3, [pc, #60]	; 18274 <rb_dlinkAdd+0xe0>
   18234:	add	r3, pc, r3
   18238:	mov	r2, #144	; 0x90
   1823c:	bl	e7e0 <__assert_fail@plt>
   18240:	ldr	r0, [pc, #48]	; 18278 <rb_dlinkAdd+0xe4>
   18244:	add	r0, pc, r0
   18248:	ldr	r1, [pc, #44]	; 1827c <rb_dlinkAdd+0xe8>
   1824c:	add	r1, pc, r1
   18250:	ldr	r3, [pc, #40]	; 18280 <rb_dlinkAdd+0xec>
   18254:	add	r3, pc, r3
   18258:	mov	r2, #145	; 0x91
   1825c:	bl	e7e0 <__assert_fail@plt>
   18260:	.word	0x0002876d
   18264:	.word	0x0002870a
   18268:	.word	0x0002876a
   1826c:	.word	0x000286e8
   18270:	.word	0x000286ea
   18274:	.word	0x0002874a
   18278:	.word	0x0002df51
   1827c:	.word	0x000286ca
   18280:	.word	0x0002872a

00018284 <connid_put>:
   18284:	push	{r4, r5, fp, lr}
   18288:	add	fp, sp, #8
   1828c:	cmp	r0, #0
   18290:	popeq	{r4, r5, fp, pc}
   18294:	mov	r4, r0
   18298:	bl	dfdc <find_cli_connid_hash@plt>
   1829c:	cmp	r0, #0
   182a0:	beq	182c4 <connid_put+0x40>
   182a4:	mov	r5, r0
   182a8:	mov	r0, r4
   182ac:	bl	e3d8 <del_from_cli_connid_hash@plt>
   182b0:	ldr	r0, [r5, #432]	; 0x1b0
   182b4:	add	r1, r0, #12
   182b8:	mov	r0, r4
   182bc:	pop	{r4, r5, fp, lr}
   182c0:	b	182c8 <rb_dlinkFindDestroy>
   182c4:	pop	{r4, r5, fp, pc}

000182c8 <rb_dlinkFindDestroy>:
   182c8:	push	{fp, lr}
   182cc:	mov	fp, sp
   182d0:	cmp	r1, #0
   182d4:	beq	182f4 <rb_dlinkFindDestroy+0x2c>
   182d8:	cmp	r0, #0
   182dc:	beq	18314 <rb_dlinkFindDestroy+0x4c>
   182e0:	bl	1a798 <rb_dlinkFindDelete>
   182e4:	cmp	r0, #0
   182e8:	popeq	{fp, pc}
   182ec:	pop	{fp, lr}
   182f0:	b	d7b4 <rb_free_rb_dlink_node@plt>
   182f4:	ldr	r0, [pc, #56]	; 18334 <rb_dlinkFindDestroy+0x6c>
   182f8:	add	r0, pc, r0
   182fc:	ldr	r1, [pc, #52]	; 18338 <rb_dlinkFindDestroy+0x70>
   18300:	add	r1, pc, r1
   18304:	ldr	r3, [pc, #48]	; 1833c <rb_dlinkFindDestroy+0x74>
   18308:	add	r3, pc, r3
   1830c:	movw	r2, #287	; 0x11f
   18310:	bl	e7e0 <__assert_fail@plt>
   18314:	ldr	r0, [pc, #36]	; 18340 <rb_dlinkFindDestroy+0x78>
   18318:	add	r0, pc, r0
   1831c:	ldr	r1, [pc, #32]	; 18344 <rb_dlinkFindDestroy+0x7c>
   18320:	add	r1, pc, r1
   18324:	ldr	r3, [pc, #28]	; 18348 <rb_dlinkFindDestroy+0x80>
   18328:	add	r3, pc, r3
   1832c:	mov	r2, #288	; 0x120
   18330:	bl	e7e0 <__assert_fail@plt>
   18334:	.word	0x0002de9d
   18338:	.word	0x00028616
   1833c:	.word	0x00028c1d
   18340:	.word	0x00028659
   18344:	.word	0x000285f6
   18348:	.word	0x00028bfd

0001834c <client_release_connids>:
   1834c:	push	{r4, sl, fp, lr}
   18350:	add	fp, sp, #8
   18354:	ldrb	r1, [r0, #65]	; 0x41
   18358:	tst	r1, #32
   1835c:	beq	18384 <client_release_connids+0x38>
   18360:	ldr	r0, [r0, #432]	; 0x1b0
   18364:	ldr	r4, [r0, #12]
   18368:	cmp	r4, #0
   1836c:	beq	18384 <client_release_connids+0x38>
   18370:	ldr	r0, [r4]
   18374:	ldr	r4, [r4, #8]
   18378:	bl	e6f0 <connid_put@plt>
   1837c:	cmp	r4, #0
   18380:	bne	18370 <client_release_connids+0x24>
   18384:	pop	{r4, sl, fp, pc}

00018388 <make_client>:
   18388:	push	{r4, r5, fp, lr}
   1838c:	add	fp, sp, #8
   18390:	mov	r5, r0
   18394:	ldr	r0, [pc, #172]	; 18448 <make_client+0xc0>
   18398:	ldr	r0, [pc, r0]
   1839c:	bl	de20 <rb_bh_alloc@plt>
   183a0:	mov	r4, r0
   183a4:	cmp	r5, #0
   183a8:	beq	183c0 <make_client+0x38>
   183ac:	mov	r0, #0
   183b0:	str	r0, [r4, #432]	; 0x1b0
   183b4:	str	r0, [r4, #436]	; 0x1b4
   183b8:	str	r5, [r4, #36]	; 0x24
   183bc:	b	1841c <make_client+0x94>
   183c0:	str	r4, [r4, #36]	; 0x24
   183c4:	ldr	r0, [pc, #128]	; 1844c <make_client+0xc4>
   183c8:	ldr	r0, [pc, r0]
   183cc:	bl	de20 <rb_bh_alloc@plt>
   183d0:	str	r0, [r4, #432]	; 0x1b0
   183d4:	ldr	r0, [r4, #64]	; 0x40
   183d8:	orr	r0, r0, #8192	; 0x2000
   183dc:	str	r0, [r4, #64]	; 0x40
   183e0:	bl	d07c <rb_current_time@plt>
   183e4:	ldr	r1, [r4, #432]	; 0x1b0
   183e8:	str	r0, [r1, #44]	; 0x2c
   183ec:	str	r0, [r1, #48]	; 0x30
   183f0:	mov	r0, #0
   183f4:	str	r0, [r1, #300]	; 0x12c
   183f8:	ldr	r0, [pc, #80]	; 18450 <make_client+0xc8>
   183fc:	ldr	r0, [pc, r0]
   18400:	bl	de20 <rb_bh_alloc@plt>
   18404:	str	r0, [r4, #436]	; 0x1b4
   18408:	ldr	r1, [r4, #432]	; 0x1b0
   1840c:	ldr	r2, [pc, #64]	; 18454 <make_client+0xcc>
   18410:	ldr	r2, [pc, r2]
   18414:	mov	r0, r4
   18418:	bl	18194 <rb_dlinkAdd>
   1841c:	mov	r0, #0
   18420:	strb	r0, [r4, #82]	; 0x52
   18424:	mov	r0, #8
   18428:	strh	r0, [r4, #80]	; 0x50
   1842c:	add	r0, r4, #152	; 0x98
   18430:	ldr	r1, [pc, #32]	; 18458 <make_client+0xd0>
   18434:	add	r1, pc, r1
   18438:	mov	r2, #11
   1843c:	bl	e510 <rb_strlcpy@plt>
   18440:	mov	r0, r4
   18444:	pop	{r4, r5, fp, pc}
   18448:	.word	0x0004cd5c
   1844c:	.word	0x0004cd30
   18450:	.word	0x0004cd00
   18454:	.word	0x00042464
   18458:	.word	0x00028f38

0001845c <free_pre_client>:
   1845c:	push	{r4, sl, fp, lr}
   18460:	add	fp, sp, #8
   18464:	mov	r4, r0
   18468:	ldr	r0, [r0, #436]	; 0x1b4
   1846c:	cmp	r0, #0
   18470:	popeq	{r4, sl, fp, pc}
   18474:	ldr	r0, [r0, #120]	; 0x78
   18478:	bl	184a8 <rb_free>
   1847c:	ldr	r0, [r4, #436]	; 0x1b4
   18480:	ldr	r0, [r0, #124]	; 0x7c
   18484:	bl	184a8 <rb_free>
   18488:	ldr	r1, [r4, #436]	; 0x1b4
   1848c:	ldr	r0, [pc, #16]	; 184a4 <free_pre_client+0x48>
   18490:	ldr	r0, [pc, r0]
   18494:	bl	e708 <rb_bh_free@plt>
   18498:	mov	r0, #0
   1849c:	str	r0, [r4, #436]	; 0x1b4
   184a0:	pop	{r4, sl, fp, pc}
   184a4:	.word	0x0004cc6c

000184a8 <rb_free>:
   184a8:	cmp	r0, #0
   184ac:	bxeq	lr
   184b0:	b	d328 <free@plt>

000184b4 <notify_banned_client>:
   184b4:	push	{r4, r5, r6, r7, fp, lr}
   184b8:	add	fp, sp, #16
   184bc:	sub	sp, sp, #8
   184c0:	mov	r6, r2
   184c4:	mov	r4, r0
   184c8:	ldr	r7, [pc, #216]	; 185a8 <notify_banned_client+0xf4>
   184cc:	ldr	r7, [pc, r7]
   184d0:	ldr	r0, [r7, #124]	; 0x7c
   184d4:	cmp	r0, #0
   184d8:	beq	184f4 <notify_banned_client+0x40>
   184dc:	mov	r0, r1
   184e0:	bl	d010 <get_user_ban_reason@plt>
   184e4:	mov	r5, r0
   184e8:	cmp	r6, #0
   184ec:	bne	18538 <notify_banned_client+0x84>
   184f0:	b	18520 <notify_banned_client+0x6c>
   184f4:	ldr	r1, [r1]
   184f8:	ldr	r2, [pc, #172]	; 185ac <notify_banned_client+0xf8>
   184fc:	add	r2, pc, r2
   18500:	ldr	r0, [pc, #168]	; 185b0 <notify_banned_client+0xfc>
   18504:	add	r0, pc, r0
   18508:	cmp	r1, #0
   1850c:	moveq	r0, r2
   18510:	ldr	r5, [pc, #156]	; 185b4 <notify_banned_client+0x100>
   18514:	add	r5, pc, r5
   18518:	cmp	r6, #0
   1851c:	bne	18538 <notify_banned_client+0x84>
   18520:	ldrh	r1, [r4, #80]	; 0x50
   18524:	cmp	r1, #64	; 0x40
   18528:	bne	18560 <notify_banned_client+0xac>
   1852c:	ldr	r1, [r4, #24]
   18530:	cmp	r1, #0
   18534:	beq	18560 <notify_banned_client+0xac>
   18538:	str	r0, [sp]
   1853c:	add	r3, r4, #88	; 0x58
   18540:	ldr	r0, [pc, #116]	; 185bc <notify_banned_client+0x108>
   18544:	ldr	r0, [pc, r0]
   18548:	add	r2, r0, #88	; 0x58
   1854c:	ldr	r1, [pc, #108]	; 185c0 <notify_banned_client+0x10c>
   18550:	add	r1, pc, r1
   18554:	mov	r0, r4
   18558:	bl	d1e4 <sendto_one@plt>
   1855c:	b	18570 <notify_banned_client+0xbc>
   18560:	ldr	r1, [pc, #80]	; 185b8 <notify_banned_client+0x104>
   18564:	add	r1, pc, r1
   18568:	mov	r0, r4
   1856c:	bl	d1e4 <sendto_one@plt>
   18570:	ldr	r0, [r7, #20]
   18574:	cmp	r0, #0
   18578:	beq	18588 <notify_banned_client+0xd4>
   1857c:	ldrb	r1, [r0]
   18580:	cmp	r1, #0
   18584:	movne	r5, r0
   18588:	ldr	r2, [pc, #52]	; 185c4 <notify_banned_client+0x110>
   1858c:	ldr	r2, [pc, r2]
   18590:	mov	r0, r4
   18594:	mov	r1, r4
   18598:	mov	r3, r5
   1859c:	sub	sp, fp, #16
   185a0:	pop	{r4, r5, r6, r7, fp, lr}
   185a4:	b	185c8 <exit_client>
   185a8:	.word	0x000426b0
   185ac:	.word	0x000294d4
   185b0:	.word	0x000294d4
   185b4:	.word	0x000294aa
   185b8:	.word	0x00028eb2
   185bc:	.word	0x00042614
   185c0:	.word	0x00028eee
   185c4:	.word	0x000425cc

000185c8 <exit_client>:
   185c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   185cc:	add	fp, sp, #24
   185d0:	sub	sp, sp, #16
   185d4:	mov	r6, r0
   185d8:	mov	r5, r1
   185dc:	ldr	r0, [r5, #64]!	; 0x40
   185e0:	mvn	r4, #0
   185e4:	tst	r0, #32
   185e8:	bne	18708 <exit_client+0x140>
   185ec:	mov	r8, r3
   185f0:	mov	r9, r2
   185f4:	mov	r7, r1
   185f8:	ldr	r1, [r5, #4]
   185fc:	orr	r0, r0, #32
   18600:	strd	r0, [r5]
   18604:	str	r3, [sp, #12]
   18608:	str	r2, [sp, #8]
   1860c:	stm	sp, {r6, r7}
   18610:	ldr	r0, [pc, #252]	; 18714 <exit_client+0x14c>
   18614:	ldr	r0, [pc, r0]
   18618:	ldr	r0, [r0]
   1861c:	mov	r1, sp
   18620:	bl	e654 <call_hook@plt>
   18624:	ldrh	r0, [r7, #80]	; 0x50
   18628:	ldrb	r1, [r5, #1]
   1862c:	tst	r1, #32
   18630:	bne	18660 <exit_client+0x98>
   18634:	cmp	r0, #64	; 0x40
   18638:	bne	1868c <exit_client+0xc4>
   1863c:	ldr	r0, [r7, #24]
   18640:	cmp	r0, #0
   18644:	beq	186dc <exit_client+0x114>
   18648:	mov	r0, r6
   1864c:	mov	r1, r7
   18650:	mov	r2, r8
   18654:	bl	19ac4 <exit_remote_client>
   18658:	mvn	r4, #1
   1865c:	b	186f4 <exit_client+0x12c>
   18660:	cmp	r0, #64	; 0x40
   18664:	bne	186b0 <exit_client+0xe8>
   18668:	ldr	r0, [r7, #24]
   1866c:	cmp	r0, #0
   18670:	beq	186e4 <exit_client+0x11c>
   18674:	mov	r0, r6
   18678:	mov	r1, r7
   1867c:	mov	r2, r8
   18680:	bl	19484 <exit_local_client>
   18684:	mvn	r4, #1
   18688:	b	186f4 <exit_client+0x12c>
   1868c:	mvn	r4, #0
   18690:	cmp	r0, #32
   18694:	bne	186f4 <exit_client+0x12c>
   18698:	mov	r0, r6
   1869c:	mov	r1, r7
   186a0:	mov	r2, r9
   186a4:	mov	r3, r8
   186a8:	bl	19b8c <exit_remote_server>
   186ac:	b	186d4 <exit_client+0x10c>
   186b0:	cmp	r0, #16
   186b4:	beq	186dc <exit_client+0x114>
   186b8:	cmp	r0, #32
   186bc:	bne	186e4 <exit_client+0x11c>
   186c0:	mov	r0, r6
   186c4:	mov	r1, r7
   186c8:	mov	r2, r9
   186cc:	mov	r3, r8
   186d0:	bl	196f0 <exit_local_server>
   186d4:	mov	r4, #0
   186d8:	b	186f4 <exit_client+0x12c>
   186dc:	mvn	r4, #0
   186e0:	b	186f4 <exit_client+0x12c>
   186e4:	mov	r0, r7
   186e8:	mov	r1, r8
   186ec:	bl	199d0 <exit_unknown_client>
   186f0:	mvn	r4, #1
   186f4:	ldr	r0, [pc, #28]	; 18718 <exit_client+0x150>
   186f8:	ldr	r0, [pc, r0]
   186fc:	ldr	r0, [r0]
   18700:	mov	r1, #0
   18704:	bl	e654 <call_hook@plt>
   18708:	mov	r0, r4
   1870c:	sub	sp, fp, #24
   18710:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18714:	.word	0x000424d4
   18718:	.word	0x0004236c

0001871c <check_banned_lines>:
   1871c:	push	{fp, lr}
   18720:	mov	fp, sp
   18724:	bl	e390 <check_dlines@plt>
   18728:	bl	e6d8 <check_klines@plt>
   1872c:	pop	{fp, lr}
   18730:	b	18984 <check_xlines>

00018734 <check_dlines>:
   18734:	push	{r4, r5, r6, r7, fp, lr}
   18738:	add	fp, sp, #16
   1873c:	ldr	r0, [pc, #228]	; 18828 <check_dlines+0xf4>
   18740:	ldr	r0, [pc, r0]
   18744:	ldr	r7, [r0]
   18748:	cmp	r7, #0
   1874c:	beq	187d0 <check_dlines+0x9c>
   18750:	ldr	r4, [pc, #212]	; 1882c <check_dlines+0xf8>
   18754:	add	r4, pc, r4
   18758:	b	18764 <check_dlines+0x30>
   1875c:	cmp	r7, #0
   18760:	beq	187d0 <check_dlines+0x9c>
   18764:	ldr	r5, [r7]
   18768:	ldr	r7, [r7, #8]
   1876c:	ldrh	r0, [r5, #80]	; 0x50
   18770:	cmp	r0, #4
   18774:	beq	1875c <check_dlines+0x28>
   18778:	ldr	r0, [r5, #432]	; 0x1b0
   1877c:	ldrh	r1, [r0, #140]!	; 0x8c
   18780:	bl	e78c <find_dline@plt>
   18784:	cmp	r0, #0
   18788:	beq	1875c <check_dlines+0x28>
   1878c:	mov	r6, r0
   18790:	ldrb	r0, [r0, #2]
   18794:	tst	r0, #16
   18798:	bne	1875c <check_dlines+0x28>
   1879c:	mov	r0, r5
   187a0:	mov	r1, #0
   187a4:	bl	d004 <get_client_name@plt>
   187a8:	mov	r3, r0
   187ac:	mov	r0, #256	; 0x100
   187b0:	mov	r1, #0
   187b4:	mov	r2, r4
   187b8:	bl	d634 <sendto_realops_snomask@plt>
   187bc:	mov	r0, r5
   187c0:	mov	r1, r6
   187c4:	mov	r2, #0
   187c8:	bl	dc64 <notify_banned_client@plt>
   187cc:	b	1875c <check_dlines+0x28>
   187d0:	ldr	r0, [pc, #88]	; 18830 <check_dlines+0xfc>
   187d4:	ldr	r0, [pc, r0]
   187d8:	ldr	r5, [r0]
   187dc:	cmp	r5, #0
   187e0:	beq	18824 <check_dlines+0xf0>
   187e4:	ldr	r4, [r5]
   187e8:	ldr	r5, [r5, #8]
   187ec:	ldr	r0, [r4, #432]	; 0x1b0
   187f0:	ldrh	r1, [r0, #140]!	; 0x8c
   187f4:	bl	e78c <find_dline@plt>
   187f8:	cmp	r0, #0
   187fc:	beq	187dc <check_dlines+0xa8>
   18800:	mov	r1, r0
   18804:	ldrb	r0, [r0, #2]
   18808:	tst	r0, #16
   1880c:	bne	187dc <check_dlines+0xa8>
   18810:	mov	r0, r4
   18814:	mov	r2, #0
   18818:	bl	dc64 <notify_banned_client@plt>
   1881c:	cmp	r5, #0
   18820:	bne	187e4 <check_dlines+0xb0>
   18824:	pop	{r4, r5, r6, r7, fp, pc}
   18828:	.word	0x000423e8
   1882c:	.word	0x00028d66
   18830:	.word	0x000420a0

00018834 <check_klines>:
   18834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18838:	add	fp, sp, #28
   1883c:	sub	sp, sp, #20
   18840:	ldr	r0, [pc, #304]	; 18978 <check_klines+0x144>
   18844:	ldr	r0, [pc, r0]
   18848:	ldr	r4, [r0]
   1884c:	cmp	r4, #0
   18850:	beq	18970 <check_klines+0x13c>
   18854:	movw	r5, #512	; 0x200
   18858:	movt	r5, #8192	; 0x2000
   1885c:	mov	sl, #0
   18860:	mov	r9, #64	; 0x40
   18864:	b	18894 <check_klines+0x60>
   18868:	mov	r0, #256	; 0x100
   1886c:	mov	r1, #0
   18870:	ldr	r2, [pc, #264]	; 18980 <check_klines+0x14c>
   18874:	add	r2, pc, r2
   18878:	bl	d634 <sendto_realops_snomask@plt>
   1887c:	mov	r0, r6
   18880:	mov	r1, r7
   18884:	mov	r2, #1
   18888:	bl	dc64 <notify_banned_client@plt>
   1888c:	cmp	r4, #0
   18890:	beq	18970 <check_klines+0x13c>
   18894:	ldr	r6, [r4]
   18898:	ldr	r4, [r4, #8]
   1889c:	ldrh	r0, [r6, #80]	; 0x50
   188a0:	cmp	r0, #64	; 0x40
   188a4:	bne	1888c <check_klines+0x58>
   188a8:	ldr	r0, [r6, #24]
   188ac:	cmp	r0, #0
   188b0:	beq	1888c <check_klines+0x58>
   188b4:	ldr	r3, [r6, #432]	; 0x1b0
   188b8:	ldr	r0, [r3, #132]	; 0x84
   188bc:	ldr	r0, [r0, #4]
   188c0:	and	r0, r0, r5
   188c4:	cmp	r0, r5
   188c8:	bne	188f8 <check_klines+0xc4>
   188cc:	add	r0, r6, #152	; 0x98
   188d0:	str	r9, [sp]
   188d4:	mov	r1, #2
   188d8:	str	r1, [sp, #4]
   188dc:	str	r0, [sp, #8]
   188e0:	str	sl, [sp, #12]
   188e4:	add	r0, r6, #227	; 0xe3
   188e8:	mov	r1, #0
   188ec:	mov	r2, #0
   188f0:	mov	r3, #0
   188f4:	b	18918 <check_klines+0xe4>
   188f8:	ldrh	r0, [r3, #140]!	; 0x8c
   188fc:	add	r1, r6, #152	; 0x98
   18900:	str	r9, [sp]
   18904:	stmib	sp, {r0, r1, sl}
   18908:	movw	r0, #291	; 0x123
   1890c:	add	r1, r6, r0
   18910:	add	r0, r6, #163	; 0xa3
   18914:	add	r2, r6, #227	; 0xe3
   18918:	bl	d2f8 <find_conf_by_address@plt>
   1891c:	mov	r7, r0
   18920:	cmp	r0, #0
   18924:	beq	1888c <check_klines+0x58>
   18928:	ldr	r8, [r6, #64]	; 0x40
   1892c:	mov	r0, r6
   18930:	mov	r1, #0
   18934:	bl	d004 <get_client_name@plt>
   18938:	mov	r3, r0
   1893c:	tst	r8, #4194304	; 0x400000
   18940:	beq	18868 <check_klines+0x34>
   18944:	ldr	r0, [r7, #16]
   18948:	ldr	r1, [r7, #28]
   1894c:	str	r1, [sp]
   18950:	str	r0, [sp, #4]
   18954:	mov	r0, #256	; 0x100
   18958:	mov	r1, #0
   1895c:	ldr	r2, [pc, #24]	; 1897c <check_klines+0x148>
   18960:	add	r2, pc, r2
   18964:	bl	d634 <sendto_realops_snomask@plt>
   18968:	cmp	r4, #0
   1896c:	bne	18894 <check_klines+0x60>
   18970:	sub	sp, fp, #28
   18974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18978:	.word	0x000422e4
   1897c:	.word	0x00028b0e
   18980:	.word	0x00028c32

00018984 <check_xlines>:
   18984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18988:	add	fp, sp, #28
   1898c:	sub	sp, sp, #4
   18990:	ldr	r0, [pc, #212]	; 18a6c <check_xlines+0xe8>
   18994:	ldr	r0, [pc, r0]
   18998:	ldr	r6, [r0]
   1899c:	cmp	r6, #0
   189a0:	beq	18a64 <check_xlines+0xe0>
   189a4:	movw	r8, #345	; 0x159
   189a8:	ldr	sl, [pc, #192]	; 18a70 <check_xlines+0xec>
   189ac:	add	sl, pc, sl
   189b0:	ldr	r7, [pc, #188]	; 18a74 <check_xlines+0xf0>
   189b4:	add	r7, pc, r7
   189b8:	b	189f0 <check_xlines+0x6c>
   189bc:	mov	r0, #256	; 0x100
   189c0:	mov	r1, #0
   189c4:	ldr	r2, [pc, #172]	; 18a78 <check_xlines+0xf4>
   189c8:	add	r2, pc, r2
   189cc:	bl	d634 <sendto_realops_snomask@plt>
   189d0:	mov	r0, r4
   189d4:	mov	r1, r4
   189d8:	ldr	r2, [pc, #156]	; 18a7c <check_xlines+0xf8>
   189dc:	ldr	r2, [pc, r2]
   189e0:	mov	r3, sl
   189e4:	bl	e534 <exit_client@plt>
   189e8:	cmp	r6, #0
   189ec:	beq	18a64 <check_xlines+0xe0>
   189f0:	ldr	r4, [r6]
   189f4:	ldr	r6, [r6, #8]
   189f8:	ldrh	r0, [r4, #80]	; 0x50
   189fc:	cmp	r0, #64	; 0x40
   18a00:	bne	189e8 <check_xlines+0x64>
   18a04:	ldr	r0, [r4, #24]
   18a08:	cmp	r0, #0
   18a0c:	beq	189e8 <check_xlines+0x64>
   18a10:	add	r0, r4, r8
   18a14:	mov	r1, #1
   18a18:	bl	e1b0 <find_xline@plt>
   18a1c:	cmp	r0, #0
   18a20:	beq	189e8 <check_xlines+0x64>
   18a24:	mov	r5, r0
   18a28:	ldr	r9, [r4, #64]	; 0x40
   18a2c:	mov	r0, r4
   18a30:	mov	r1, #0
   18a34:	bl	d004 <get_client_name@plt>
   18a38:	mov	r3, r0
   18a3c:	tst	r9, #4194304	; 0x400000
   18a40:	beq	189bc <check_xlines+0x38>
   18a44:	ldr	r0, [r5, #16]
   18a48:	str	r0, [sp]
   18a4c:	mov	r0, #256	; 0x100
   18a50:	mov	r1, #0
   18a54:	mov	r2, r7
   18a58:	bl	d634 <sendto_realops_snomask@plt>
   18a5c:	cmp	r6, #0
   18a60:	bne	189f0 <check_xlines+0x6c>
   18a64:	sub	sp, fp, #28
   18a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a6c:	.word	0x00042194
   18a70:	.word	0x00028b6b
   18a74:	.word	0x00028b1a
   18a78:	.word	0x00028b3b
   18a7c:	.word	0x0004217c

00018a80 <get_client_name>:
   18a80:	push	{r4, r5, r6, r7, fp, lr}
   18a84:	add	fp, sp, #16
   18a88:	sub	sp, sp, #8
   18a8c:	cmp	r0, #0
   18a90:	beq	18b48 <get_client_name+0xc8>
   18a94:	mov	r5, r0
   18a98:	add	r4, r0, #88	; 0x58
   18a9c:	ldrb	r0, [r0, #65]	; 0x41
   18aa0:	tst	r0, #32
   18aa4:	beq	18b40 <get_client_name+0xc0>
   18aa8:	mov	r7, r1
   18aac:	add	r6, r5, #163	; 0xa3
   18ab0:	mov	r0, r4
   18ab4:	mov	r1, r6
   18ab8:	bl	e750 <irccmp@plt>
   18abc:	cmp	r0, #0
   18ac0:	beq	18b40 <get_client_name+0xc0>
   18ac4:	cmp	r7, #1
   18ac8:	bne	18af4 <get_client_name+0x74>
   18acc:	ldr	r0, [pc, #200]	; 18b9c <get_client_name+0x11c>
   18ad0:	ldr	r0, [pc, r0]
   18ad4:	ldr	r0, [r0, #204]	; 0xcc
   18ad8:	cmp	r0, #0
   18adc:	beq	18af4 <get_client_name+0x74>
   18ae0:	add	r0, r5, #64	; 0x40
   18ae4:	ldrb	r0, [r0, #3]
   18ae8:	mov	r7, #2
   18aec:	tst	r0, #1
   18af0:	movweq	r7, #1
   18af4:	ldrh	r0, [r5, #80]	; 0x50
   18af8:	sub	r0, r0, #1
   18afc:	cmp	r0, #31
   18b00:	bhi	18b58 <get_client_name+0xd8>
   18b04:	mov	r1, #1
   18b08:	mov	r2, #-2147483645	; 0x80000003
   18b0c:	tst	r2, r1, lsl r0
   18b10:	beq	18b58 <get_client_name+0xd8>
   18b14:	add	r0, r5, #152	; 0x98
   18b18:	str	r0, [sp]
   18b1c:	ldr	r5, [pc, #124]	; 18ba0 <get_client_name+0x120>
   18b20:	add	r5, pc, r5
   18b24:	ldr	r2, [pc, #120]	; 18ba4 <get_client_name+0x124>
   18b28:	add	r2, pc, r2
   18b2c:	mov	r0, r5
   18b30:	mov	r1, #141	; 0x8d
   18b34:	mov	r3, r4
   18b38:	bl	de74 <snprintf@plt>
   18b3c:	b	18b4c <get_client_name+0xcc>
   18b40:	mov	r5, r4
   18b44:	b	18b4c <get_client_name+0xcc>
   18b48:	mov	r5, #0
   18b4c:	mov	r0, r5
   18b50:	sub	sp, fp, #16
   18b54:	pop	{r4, r5, r6, r7, fp, pc}
   18b58:	cmp	r7, #2
   18b5c:	beq	18b14 <get_client_name+0x94>
   18b60:	cmp	r7, #1
   18b64:	bne	18b80 <get_client_name+0x100>
   18b68:	movw	r0, #291	; 0x123
   18b6c:	add	r0, r5, r0
   18b70:	add	r1, r5, #152	; 0x98
   18b74:	str	r1, [sp]
   18b78:	str	r0, [sp, #4]
   18b7c:	b	18b88 <get_client_name+0x108>
   18b80:	add	r0, r5, #152	; 0x98
   18b84:	stm	sp, {r0, r6}
   18b88:	ldr	r5, [pc, #24]	; 18ba8 <get_client_name+0x128>
   18b8c:	add	r5, pc, r5
   18b90:	ldr	r2, [pc, #20]	; 18bac <get_client_name+0x12c>
   18b94:	add	r2, pc, r2
   18b98:	b	18b2c <get_client_name+0xac>
   18b9c:	.word	0x000420ac
   18ba0:	.word	0x0004c5ec
   18ba4:	.word	0x00028b06
   18ba8:	.word	0x0004c580
   18bac:	.word	0x00028a90

00018bb0 <check_one_kline>:
   18bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bb4:	add	fp, sp, #28
   18bb8:	sub	sp, sp, #156	; 0x9c
   18bbc:	mov	r4, r0
   18bc0:	ldr	r0, [r0, #16]
   18bc4:	add	r1, sp, #24
   18bc8:	sub	r2, fp, #32
   18bcc:	bl	d55c <parse_netmask@plt>
   18bd0:	mov	r6, r0
   18bd4:	ldr	r0, [pc, #428]	; 18d88 <check_one_kline+0x1d8>
   18bd8:	ldr	r0, [pc, r0]
   18bdc:	ldr	r9, [r0]
   18be0:	cmp	r9, #0
   18be4:	beq	18d80 <check_one_kline+0x1d0>
   18be8:	movw	r5, #512	; 0x200
   18bec:	movt	r5, #8192	; 0x2000
   18bf0:	sub	sl, r6, #2
   18bf4:	b	18c2c <check_one_kline+0x7c>
   18bf8:	mov	r0, #256	; 0x100
   18bfc:	mov	r1, #0
   18c00:	ldr	r2, [pc, #392]	; 18d90 <check_one_kline+0x1e0>
   18c04:	add	r2, pc, r2
   18c08:	bl	d634 <sendto_realops_snomask@plt>
   18c0c:	mov	r0, r7
   18c10:	mov	r1, r4
   18c14:	mov	r2, #1
   18c18:	bl	dc64 <notify_banned_client@plt>
   18c1c:	mov	r5, r6
   18c20:	mov	r6, r8
   18c24:	cmp	r9, #0
   18c28:	beq	18d80 <check_one_kline+0x1d0>
   18c2c:	ldr	r7, [r9]
   18c30:	ldr	r9, [r9, #8]
   18c34:	ldrh	r0, [r7, #80]	; 0x50
   18c38:	cmp	r0, #64	; 0x40
   18c3c:	bne	18c24 <check_one_kline+0x74>
   18c40:	ldr	r0, [r7, #24]
   18c44:	cmp	r0, #0
   18c48:	beq	18c24 <check_one_kline+0x74>
   18c4c:	ldr	r0, [r4, #28]
   18c50:	add	r1, r7, #152	; 0x98
   18c54:	bl	e114 <match@plt>
   18c58:	cmp	r0, #0
   18c5c:	beq	18c24 <check_one_kline+0x74>
   18c60:	cmp	sl, #2
   18c64:	bcs	18cc0 <check_one_kline+0x110>
   18c68:	ldr	r0, [r7, #432]	; 0x1b0
   18c6c:	ldr	r1, [r0, #132]	; 0x84
   18c70:	ldr	r1, [r1, #4]
   18c74:	and	r1, r1, r5
   18c78:	cmp	r1, r5
   18c7c:	beq	18c24 <check_one_kline+0x74>
   18c80:	ldrh	r1, [r0, #140]!	; 0x8c
   18c84:	cmp	r1, #10
   18c88:	ldrheq	r1, [sp, #24]
   18c8c:	cmpeq	r1, #2
   18c90:	beq	18d0c <check_one_kline+0x15c>
   18c94:	ldr	r0, [r7, #432]	; 0x1b0
   18c98:	ldrh	r1, [r0, #140]!	; 0x8c
   18c9c:	ldrh	r2, [sp, #24]
   18ca0:	cmp	r1, r2
   18ca4:	bne	18c24 <check_one_kline+0x74>
   18ca8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18cac:	add	r1, sp, #24
   18cb0:	bl	d034 <comp_with_mask_sock@plt>
   18cb4:	cmp	r0, #0
   18cb8:	bne	18d34 <check_one_kline+0x184>
   18cbc:	b	18c24 <check_one_kline+0x74>
   18cc0:	cmp	r6, #1
   18cc4:	bne	18c24 <check_one_kline+0x74>
   18cc8:	ldr	r0, [r4, #16]
   18ccc:	add	r1, r7, #227	; 0xe3
   18cd0:	bl	e114 <match@plt>
   18cd4:	mov	r8, r0
   18cd8:	ldr	r0, [r7, #432]	; 0x1b0
   18cdc:	ldr	r0, [r0, #132]	; 0x84
   18ce0:	ldr	r0, [r0, #4]
   18ce4:	and	r0, r0, r5
   18ce8:	cmp	r0, r5
   18cec:	beq	18c24 <check_one_kline+0x74>
   18cf0:	movw	r0, #291	; 0x123
   18cf4:	add	r1, r7, r0
   18cf8:	ldr	r0, [r4, #16]
   18cfc:	bl	e114 <match@plt>
   18d00:	orrs	r0, r0, r8
   18d04:	bne	18d34 <check_one_kline+0x184>
   18d08:	b	18c24 <check_one_kline+0x74>
   18d0c:	add	r1, sp, #8
   18d10:	bl	d880 <rb_ipv4_from_ipv6@plt>
   18d14:	cmp	r0, #0
   18d18:	beq	18c94 <check_one_kline+0xe4>
   18d1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18d20:	add	r0, sp, #8
   18d24:	add	r1, sp, #24
   18d28:	bl	d034 <comp_with_mask_sock@plt>
   18d2c:	cmp	r0, #0
   18d30:	beq	18c94 <check_one_kline+0xe4>
   18d34:	mov	r8, r6
   18d38:	mov	r6, r5
   18d3c:	ldr	r5, [r7, #64]	; 0x40
   18d40:	mov	r0, r7
   18d44:	mov	r1, #0
   18d48:	bl	d004 <get_client_name@plt>
   18d4c:	mov	r3, r0
   18d50:	tst	r5, #4194304	; 0x400000
   18d54:	beq	18bf8 <check_one_kline+0x48>
   18d58:	ldr	r0, [r4, #16]
   18d5c:	ldr	r1, [r4, #28]
   18d60:	str	r1, [sp]
   18d64:	str	r0, [sp, #4]
   18d68:	mov	r0, #256	; 0x100
   18d6c:	mov	r1, #256	; 0x100
   18d70:	ldr	r2, [pc, #20]	; 18d8c <check_one_kline+0x1dc>
   18d74:	add	r2, pc, r2
   18d78:	bl	d634 <sendto_realops_snomask@plt>
   18d7c:	b	18c1c <check_one_kline+0x6c>
   18d80:	sub	sp, fp, #28
   18d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d88:	.word	0x00041f50
   18d8c:	.word	0x000286fa
   18d90:	.word	0x000288a2

00018d94 <resv_nick_fnc>:
   18d94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d98:	add	fp, sp, #28
   18d9c:	sub	sp, sp, #68	; 0x44
   18da0:	mov	r7, r0
   18da4:	ldr	r0, [pc, #584]	; 18ff4 <resv_nick_fnc+0x260>
   18da8:	ldr	r0, [pc, r0]
   18dac:	ldr	r0, [r0, #308]	; 0x134
   18db0:	cmp	r0, #0
   18db4:	beq	18fec <resv_nick_fnc+0x258>
   18db8:	ldr	r0, [pc, #568]	; 18ff8 <resv_nick_fnc+0x264>
   18dbc:	ldr	r0, [pc, r0]
   18dc0:	ldr	r5, [r0]
   18dc4:	cmp	r5, #0
   18dc8:	beq	18fec <resv_nick_fnc+0x258>
   18dcc:	mov	r9, r2
   18dd0:	mov	sl, r1
   18dd4:	ldr	r8, [pc, #544]	; 18ffc <resv_nick_fnc+0x268>
   18dd8:	ldr	r8, [pc, r8]
   18ddc:	b	18de8 <resv_nick_fnc+0x54>
   18de0:	cmp	r5, #0
   18de4:	beq	18fec <resv_nick_fnc+0x258>
   18de8:	ldr	r4, [r5]
   18dec:	ldr	r5, [r5, #8]
   18df0:	ldrh	r0, [r4, #80]	; 0x50
   18df4:	cmp	r0, #64	; 0x40
   18df8:	bne	18de0 <resv_nick_fnc+0x4c>
   18dfc:	ldr	r0, [r4, #24]
   18e00:	cmp	r0, #0
   18e04:	beq	18de0 <resv_nick_fnc+0x4c>
   18e08:	ldrb	r0, [r4, #66]	; 0x42
   18e0c:	tst	r0, #32
   18e10:	bne	18de0 <resv_nick_fnc+0x4c>
   18e14:	mov	r6, r4
   18e18:	ldrb	r0, [r6, #88]!	; 0x58
   18e1c:	ldrb	r0, [r8, r0, lsl #2]
   18e20:	tst	r0, #16
   18e24:	bne	18de0 <resv_nick_fnc+0x4c>
   18e28:	mov	r0, r7
   18e2c:	mov	r1, r6
   18e30:	bl	d16c <match_esc@plt>
   18e34:	cmp	r0, #0
   18e38:	beq	18de0 <resv_nick_fnc+0x4c>
   18e3c:	add	r8, r4, #396	; 0x18c
   18e40:	add	r5, r4, #163	; 0xa3
   18e44:	add	r1, r4, #152	; 0x98
   18e48:	str	r1, [sp, #20]
   18e4c:	stm	sp, {r1, r5, r8}
   18e50:	str	r7, [sp, #12]
   18e54:	str	sl, [sp, #16]
   18e58:	ldr	r2, [pc, #416]	; 19000 <resv_nick_fnc+0x26c>
   18e5c:	add	r2, pc, r2
   18e60:	mov	r0, #256	; 0x100
   18e64:	mov	r1, #0
   18e68:	mov	r3, r6
   18e6c:	bl	d634 <sendto_realops_snomask@plt>
   18e70:	str	r8, [sp]
   18e74:	ldr	r7, [sp, #20]
   18e78:	str	r7, [sp, #4]
   18e7c:	str	r5, [sp, #8]
   18e80:	ldr	r2, [pc, #380]	; 19004 <resv_nick_fnc+0x270>
   18e84:	add	r2, pc, r2
   18e88:	mov	r0, #64	; 0x40
   18e8c:	mov	r1, #0
   18e90:	mov	r3, r6
   18e94:	bl	d634 <sendto_realops_snomask@plt>
   18e98:	ldr	r0, [pc, #360]	; 19008 <resv_nick_fnc+0x274>
   18e9c:	add	r0, pc, r0
   18ea0:	ldr	r1, [pc, #356]	; 1900c <resv_nick_fnc+0x278>
   18ea4:	add	r1, pc, r1
   18ea8:	cmp	r9, #0
   18eac:	movgt	r1, r0
   18eb0:	mov	r0, r4
   18eb4:	mov	r2, r6
   18eb8:	bl	e414 <sendto_one_notice@plt>
   18ebc:	bl	d07c <rb_current_time@plt>
   18ec0:	str	r0, [r4, #52]	; 0x34
   18ec4:	mov	r0, r4
   18ec8:	mov	r1, #1
   18ecc:	bl	e3cc <whowas_add_history@plt>
   18ed0:	mov	r0, r4
   18ed4:	bl	e150 <monitor_signoff@plt>
   18ed8:	mov	r0, r4
   18edc:	bl	d7e4 <invalidate_bancache_user@plt>
   18ee0:	stm	sp, {r6, r7}
   18ee4:	str	r5, [sp, #8]
   18ee8:	str	r8, [sp, #12]
   18eec:	ldr	r3, [pc, #284]	; 19010 <resv_nick_fnc+0x27c>
   18ef0:	add	r3, pc, r3
   18ef4:	mov	r0, r4
   18ef8:	mov	r1, #0
   18efc:	mov	r2, #0
   18f00:	bl	de2c <sendto_common_channels_local@plt>
   18f04:	ldr	r0, [pc, #264]	; 19014 <resv_nick_fnc+0x280>
   18f08:	ldr	r0, [pc, r0]
   18f0c:	ldr	r2, [r0]
   18f10:	ldrb	r0, [r4, #396]	; 0x18c
   18f14:	ldr	r1, [r4, #52]	; 0x34
   18f18:	ldr	r3, [pc, #248]	; 19018 <resv_nick_fnc+0x284>
   18f1c:	add	r3, pc, r3
   18f20:	cmp	r0, #0
   18f24:	mov	r0, r8
   18f28:	moveq	r0, r6
   18f2c:	str	r3, [sp]
   18f30:	stmib	sp, {r0, r8}
   18f34:	str	r1, [sp, #12]
   18f38:	mov	r0, r4
   18f3c:	mov	r1, #0
   18f40:	mov	r3, #0
   18f44:	bl	d994 <sendto_server@plt>
   18f48:	mov	r0, r6
   18f4c:	mov	r1, r4
   18f50:	bl	db14 <del_from_client_hash@plt>
   18f54:	mov	r0, r6
   18f58:	mov	r1, r8
   18f5c:	mov	r2, #64	; 0x40
   18f60:	bl	e510 <rb_strlcpy@plt>
   18f64:	mov	r0, r8
   18f68:	mov	r1, r4
   18f6c:	bl	da3c <add_to_client_hash@plt>
   18f70:	mov	r0, r4
   18f74:	bl	ddfc <monitor_signon@plt>
   18f78:	mov	r5, r4
   18f7c:	ldr	r6, [r5, #408]!	; 0x198
   18f80:	cmp	r6, #0
   18f84:	beq	18fc0 <resv_nick_fnc+0x22c>
   18f88:	ldr	r0, [r6]
   18f8c:	ldr	r7, [r6, #8]
   18f90:	ldr	r0, [r0, #432]	; 0x1b0
   18f94:	add	r1, r0, #316	; 0x13c
   18f98:	mov	r0, r4
   18f9c:	bl	182c8 <rb_dlinkFindDestroy>
   18fa0:	mov	r0, r6
   18fa4:	mov	r1, r5
   18fa8:	bl	19020 <rb_dlinkDelete>
   18fac:	mov	r0, r6
   18fb0:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   18fb4:	cmp	r7, #0
   18fb8:	mov	r6, r7
   18fbc:	bne	18f88 <resv_nick_fnc+0x1f4>
   18fc0:	add	r5, sp, #26
   18fc4:	ldr	r2, [pc, #80]	; 1901c <resv_nick_fnc+0x288>
   18fc8:	add	r2, pc, r2
   18fcc:	mov	r0, r5
   18fd0:	mov	r1, #42	; 0x2a
   18fd4:	mov	r3, r8
   18fd8:	bl	de74 <snprintf@plt>
   18fdc:	ldr	r0, [r4, #432]	; 0x1b0
   18fe0:	ldr	r0, [r0, #300]	; 0x12c
   18fe4:	mov	r1, r5
   18fe8:	bl	e270 <rb_note@plt>
   18fec:	sub	sp, fp, #28
   18ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ff4:	.word	0x00041dd4
   18ff8:	.word	0x00041d6c
   18ffc:	.word	0x00041c20
   19000:	.word	0x000286c9
   19004:	.word	0x000286e4
   19008:	.word	0x000286ef
   1900c:	.word	0x0002871f
   19010:	.word	0x00028707
   19014:	.word	0x00041a20
   19018:	.word	0x000286ee
   1901c:	.word	0x00028653

00019020 <rb_dlinkDelete>:
   19020:	push	{fp, lr}
   19024:	mov	fp, sp
   19028:	cmp	r0, #0
   1902c:	beq	19080 <rb_dlinkDelete+0x60>
   19030:	cmp	r1, #0
   19034:	beq	190a0 <rb_dlinkDelete+0x80>
   19038:	ldr	ip, [r0, #4]
   1903c:	ldr	r3, [r0, #8]
   19040:	add	r2, r3, #4
   19044:	cmp	r3, #0
   19048:	addeq	r2, r1, #4
   1904c:	str	ip, [r2]
   19050:	ldmib	r0, {r2, ip}
   19054:	cmp	r2, #0
   19058:	mov	r3, r1
   1905c:	addne	r3, r2, #8
   19060:	str	ip, [r3]
   19064:	mov	r2, #0
   19068:	str	r2, [r0, #4]
   1906c:	str	r2, [r0, #8]
   19070:	ldr	r0, [r1, #8]
   19074:	sub	r0, r0, #1
   19078:	str	r0, [r1, #8]
   1907c:	pop	{fp, pc}
   19080:	ldr	r0, [pc, #56]	; 190c0 <rb_dlinkDelete+0xa0>
   19084:	add	r0, pc, r0
   19088:	ldr	r1, [pc, #52]	; 190c4 <rb_dlinkDelete+0xa4>
   1908c:	add	r1, pc, r1
   19090:	ldr	r3, [pc, #48]	; 190c8 <rb_dlinkDelete+0xa8>
   19094:	add	r3, pc, r3
   19098:	mov	r2, #235	; 0xeb
   1909c:	bl	e7e0 <__assert_fail@plt>
   190a0:	ldr	r0, [pc, #36]	; 190cc <rb_dlinkDelete+0xac>
   190a4:	add	r0, pc, r0
   190a8:	ldr	r1, [pc, #32]	; 190d0 <rb_dlinkDelete+0xb0>
   190ac:	add	r1, pc, r1
   190b0:	ldr	r3, [pc, #28]	; 190d4 <rb_dlinkDelete+0xb4>
   190b4:	add	r3, pc, r3
   190b8:	mov	r2, #236	; 0xec
   190bc:	bl	e7e0 <__assert_fail@plt>
   190c0:	.word	0x00027888
   190c4:	.word	0x0002788a
   190c8:	.word	0x00027925
   190cc:	.word	0x0002d0f1
   190d0:	.word	0x0002786a
   190d4:	.word	0x00027905

000190d8 <clean_nick>:
   190d8:	ldrb	r2, [r0]
   190dc:	cmp	r2, #0
   190e0:	cmpne	r2, #45	; 0x2d
   190e4:	bne	190f0 <clean_nick+0x18>
   190e8:	mov	r0, #0
   190ec:	bx	lr
   190f0:	cmp	r1, #0
   190f4:	beq	19118 <clean_nick+0x40>
   190f8:	ldr	r1, [pc, #124]	; 1917c <clean_nick+0xa4>
   190fc:	ldr	r1, [pc, r1]
   19100:	ldrb	r1, [r1, r2, lsl #2]
   19104:	tst	r1, #16
   19108:	bne	190e8 <clean_nick+0x10>
   1910c:	ldrb	r2, [r0]
   19110:	cmp	r2, #0
   19114:	beq	1914c <clean_nick+0x74>
   19118:	add	r1, r0, #1
   1911c:	mov	r0, #0
   19120:	ldr	r3, [pc, #88]	; 19180 <clean_nick+0xa8>
   19124:	ldr	r3, [pc, r3]
   19128:	uxtb	r2, r2
   1912c:	ldrb	r2, [r3, r2, lsl #2]
   19130:	tst	r2, #64	; 0x40
   19134:	beq	190e8 <clean_nick+0x10>
   19138:	ldrb	r2, [r1, r0]
   1913c:	add	r0, r0, #1
   19140:	cmp	r2, #0
   19144:	bne	19128 <clean_nick+0x50>
   19148:	b	19150 <clean_nick+0x78>
   1914c:	mov	r0, #0
   19150:	ldr	r1, [pc, #44]	; 19184 <clean_nick+0xac>
   19154:	ldr	r1, [pc, r1]
   19158:	ldr	r1, [r1, #360]	; 0x168
   1915c:	mov	r2, #0
   19160:	cmp	r0, r1
   19164:	mov	r1, #0
   19168:	movwcc	r1, #1
   1916c:	cmp	r0, #32
   19170:	movwcc	r2, #1
   19174:	orr	r0, r2, r1
   19178:	bx	lr
   1917c:	.word	0x000418fc
   19180:	.word	0x000418d4
   19184:	.word	0x00041a28

00019188 <find_person>:
   19188:	push	{fp, lr}
   1918c:	mov	fp, sp
   19190:	bl	d424 <find_client@plt>
   19194:	cmp	r0, #0
   19198:	beq	191b8 <find_person+0x30>
   1919c:	ldrh	r1, [r0, #80]	; 0x50
   191a0:	cmp	r1, #64	; 0x40
   191a4:	bne	191b8 <find_person+0x30>
   191a8:	ldr	r1, [r0, #24]
   191ac:	cmp	r1, #0
   191b0:	moveq	r0, #0
   191b4:	pop	{fp, pc}
   191b8:	mov	r0, #0
   191bc:	pop	{fp, pc}

000191c0 <find_named_person>:
   191c0:	push	{fp, lr}
   191c4:	mov	fp, sp
   191c8:	bl	d37c <find_named_client@plt>
   191cc:	cmp	r0, #0
   191d0:	beq	191f0 <find_named_person+0x30>
   191d4:	ldrh	r1, [r0, #80]	; 0x50
   191d8:	cmp	r1, #64	; 0x40
   191dc:	bne	191f0 <find_named_person+0x30>
   191e0:	ldr	r1, [r0, #24]
   191e4:	cmp	r1, #0
   191e8:	moveq	r0, #0
   191ec:	pop	{fp, pc}
   191f0:	mov	r0, #0
   191f4:	pop	{fp, pc}

000191f8 <find_chasing>:
   191f8:	push	{r4, r5, r6, r7, fp, lr}
   191fc:	add	fp, sp, #16
   19200:	mov	r5, r2
   19204:	mov	r4, r1
   19208:	mov	r6, r0
   1920c:	ldrb	r0, [r0, #65]	; 0x41
   19210:	tst	r0, #32
   19214:	beq	19230 <find_chasing+0x38>
   19218:	ldrh	r0, [r6, #80]	; 0x50
   1921c:	cmp	r0, #64	; 0x40
   19220:	bne	19230 <find_chasing+0x38>
   19224:	mov	r0, r4
   19228:	bl	e474 <find_named_person@plt>
   1922c:	b	19238 <find_chasing+0x40>
   19230:	mov	r0, r4
   19234:	bl	e1e0 <find_person@plt>
   19238:	mov	r7, r0
   1923c:	cmp	r5, #0
   19240:	movne	r0, #0
   19244:	strne	r0, [r5]
   19248:	cmp	r7, #0
   1924c:	bne	19290 <find_chasing+0x98>
   19250:	ldrb	r0, [r4]
   19254:	ldr	r1, [pc, #92]	; 192b8 <find_chasing+0xc0>
   19258:	ldr	r1, [pc, r1]
   1925c:	ldrb	r0, [r1, r0, lsl #2]
   19260:	mov	r7, #0
   19264:	tst	r0, #16
   19268:	bne	19290 <find_chasing+0x98>
   1926c:	mov	r0, r4
   19270:	mov	r1, #90	; 0x5a
   19274:	bl	e228 <whowas_get_history@plt>
   19278:	cmp	r0, #0
   1927c:	beq	19298 <find_chasing+0xa0>
   19280:	cmp	r5, #0
   19284:	movne	r1, #1
   19288:	strne	r1, [r5]
   1928c:	mov	r7, r0
   19290:	mov	r0, r7
   19294:	pop	{r4, r5, r6, r7, fp, pc}
   19298:	ldr	r2, [pc, #28]	; 192bc <find_chasing+0xc4>
   1929c:	add	r2, pc, r2
   192a0:	mov	r0, r6
   192a4:	movw	r1, #401	; 0x191
   192a8:	mov	r3, r4
   192ac:	bl	dc7c <sendto_one_numeric@plt>
   192b0:	mov	r0, r7
   192b4:	pop	{r4, r5, r6, r7, fp, pc}
   192b8:	.word	0x000417a0
   192bc:	.word	0x00027f60

000192c0 <log_client_name>:
   192c0:	push	{r4, r5, r6, r7, fp, lr}
   192c4:	add	fp, sp, #16
   192c8:	sub	sp, sp, #8
   192cc:	cmp	r0, #0
   192d0:	beq	19348 <log_client_name+0x88>
   192d4:	mov	r5, r0
   192d8:	ldrb	r0, [r0, #65]	; 0x41
   192dc:	add	r4, r5, #88	; 0x58
   192e0:	tst	r0, #32
   192e4:	beq	19340 <log_client_name+0x80>
   192e8:	mov	r6, r1
   192ec:	add	r7, r5, #163	; 0xa3
   192f0:	mov	r0, r4
   192f4:	mov	r1, r7
   192f8:	bl	e750 <irccmp@plt>
   192fc:	cmp	r0, #0
   19300:	beq	19340 <log_client_name+0x80>
   19304:	add	r0, r5, #152	; 0x98
   19308:	cmp	r6, #1
   1930c:	stmne	sp, {r0, r7}
   19310:	movweq	r1, #291	; 0x123
   19314:	addeq	r1, r5, r1
   19318:	stmeq	sp, {r0, r1}
   1931c:	ldr	r5, [pc, #52]	; 19358 <log_client_name+0x98>
   19320:	add	r5, pc, r5
   19324:	ldr	r2, [pc, #48]	; 1935c <log_client_name+0x9c>
   19328:	add	r2, pc, r2
   1932c:	mov	r0, r5
   19330:	mov	r1, #141	; 0x8d
   19334:	mov	r3, r4
   19338:	bl	de74 <snprintf@plt>
   1933c:	b	1934c <log_client_name+0x8c>
   19340:	mov	r5, r4
   19344:	b	1934c <log_client_name+0x8c>
   19348:	mov	r5, #0
   1934c:	mov	r0, r5
   19350:	sub	sp, fp, #16
   19354:	pop	{r4, r5, r6, r7, fp, pc}
   19358:	.word	0x0004be79
   1935c:	.word	0x000282fc

00019360 <is_remote_connect>:
   19360:	push	{r4, sl, fp, lr}
   19364:	add	fp, sp, #8
   19368:	ldr	r0, [r0, #28]
   1936c:	mov	r4, #0
   19370:	cmp	r0, #0
   19374:	beq	193a0 <is_remote_connect+0x40>
   19378:	add	r0, r0, #4
   1937c:	bl	e474 <find_named_person@plt>
   19380:	cmp	r0, #0
   19384:	beq	193a0 <is_remote_connect+0x40>
   19388:	ldrb	r1, [r0, #57]	; 0x39
   1938c:	tst	r1, #16
   19390:	beq	193a0 <is_remote_connect+0x40>
   19394:	ldr	r0, [r0, #64]	; 0x40
   19398:	mov	r1, #1
   1939c:	bic	r4, r1, r0, lsr #13
   193a0:	mov	r0, r4
   193a4:	pop	{r4, sl, fp, pc}

000193a8 <dead_link>:
   193a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   193ac:	add	fp, sp, #24
   193b0:	mov	r6, r0
   193b4:	mov	r4, r0
   193b8:	ldrb	r0, [r4, #64]!	; 0x40
   193bc:	tst	r0, #34	; 0x22
   193c0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   193c4:	ldrh	r0, [r6, #80]	; 0x50
   193c8:	cmp	r0, #4
   193cc:	bne	193d4 <dead_link+0x2c>
   193d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   193d4:	mov	r7, r1
   193d8:	mov	r0, #276	; 0x114
   193dc:	bl	19464 <rb_malloc>
   193e0:	mov	r5, r0
   193e4:	add	r8, r0, #16
   193e8:	cmp	r7, #0
   193ec:	beq	19408 <dead_link+0x60>
   193f0:	ldr	r1, [pc, #96]	; 19458 <dead_link+0xb0>
   193f4:	add	r1, pc, r1
   193f8:	mov	r0, r8
   193fc:	mov	r2, #260	; 0x104
   19400:	bl	e510 <rb_strlcpy@plt>
   19404:	b	1942c <dead_link+0x84>
   19408:	bl	de38 <__errno_location@plt>
   1940c:	ldr	r0, [r0]
   19410:	bl	dac0 <strerror@plt>
   19414:	mov	r3, r0
   19418:	ldr	r2, [pc, #60]	; 1945c <dead_link+0xb4>
   1941c:	add	r2, pc, r2
   19420:	mov	r0, r8
   19424:	mov	r1, #260	; 0x104
   19428:	bl	de74 <snprintf@plt>
   1942c:	str	r6, [r5, #12]
   19430:	ldr	r0, [r4]
   19434:	movw	r1, #16418	; 0x4022
   19438:	orr	r0, r0, r1
   1943c:	str	r0, [r4]
   19440:	ldr	r2, [pc, #24]	; 19460 <dead_link+0xb8>
   19444:	add	r2, pc, r2
   19448:	mov	r0, r5
   1944c:	mov	r1, r5
   19450:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   19454:	b	18194 <rb_dlinkAdd>
   19458:	.word	0x00028251
   1945c:	.word	0x0002823c
   19460:	.word	0x0004bde4

00019464 <rb_malloc>:
   19464:	push	{fp, lr}
   19468:	mov	fp, sp
   1946c:	mov	r1, r0
   19470:	mov	r0, #1
   19474:	bl	cfa4 <calloc@plt>
   19478:	cmp	r0, #0
   1947c:	popne	{fp, pc}
   19480:	bl	d448 <rb_outofmemory@plt>

00019484 <exit_local_client>:
   19484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19488:	add	fp, sp, #28
   1948c:	sub	sp, sp, #68	; 0x44
   19490:	mov	r9, r2
   19494:	mov	r4, r1
   19498:	str	r0, [sp, #32]
   1949c:	mov	r0, r1
   194a0:	mov	r1, r2
   194a4:	bl	1ad98 <exit_generic_client>
   194a8:	mov	r0, r4
   194ac:	bl	dd30 <clear_monitor@plt>
   194b0:	ldr	r0, [r4, #432]	; 0x1b0
   194b4:	ldr	r1, [pc, #520]	; 196c4 <exit_local_client+0x240>
   194b8:	ldr	r1, [pc, r1]
   194bc:	bl	19020 <rb_dlinkDelete>
   194c0:	ldr	r0, [pc, #512]	; 196c8 <exit_local_client+0x244>
   194c4:	ldr	r0, [pc, r0]
   194c8:	ldr	r1, [r0, #28]
   194cc:	add	r0, r4, #12
   194d0:	add	r1, r1, #48	; 0x30
   194d4:	bl	19020 <rb_dlinkDelete>
   194d8:	ldrb	r0, [r4, #57]	; 0x39
   194dc:	tst	r0, #16
   194e0:	beq	194f4 <exit_local_client+0x70>
   194e4:	ldr	r1, [pc, #480]	; 196cc <exit_local_client+0x248>
   194e8:	ldr	r1, [pc, r1]
   194ec:	mov	r0, r4
   194f0:	bl	182c8 <rb_dlinkFindDestroy>
   194f4:	mov	r0, #0
   194f8:	mov	r1, r4
   194fc:	bl	e60c <show_ip@plt>
   19500:	movw	r1, #291	; 0x123
   19504:	add	r7, r4, r1
   19508:	ldr	r6, [pc, #448]	; 196d0 <exit_local_client+0x24c>
   1950c:	add	r6, pc, r6
   19510:	cmp	r0, #0
   19514:	mov	r0, r7
   19518:	moveq	r0, r6
   1951c:	add	r5, r4, #163	; 0xa3
   19520:	add	r8, r4, #152	; 0x98
   19524:	str	r8, [sp]
   19528:	stmib	sp, {r5, r9}
   1952c:	str	r0, [sp, #12]
   19530:	add	sl, r4, #88	; 0x58
   19534:	ldr	r2, [pc, #408]	; 196d4 <exit_local_client+0x250>
   19538:	add	r2, pc, r2
   1953c:	mov	r0, #4
   19540:	mov	r1, #0
   19544:	mov	r3, sl
   19548:	bl	d634 <sendto_realops_snomask@plt>
   1954c:	mov	r0, #0
   19550:	mov	r1, r4
   19554:	bl	e60c <show_ip@plt>
   19558:	cmp	r0, #0
   1955c:	movne	r6, r7
   19560:	str	r8, [sp]
   19564:	stmib	sp, {r5, r6, r9}
   19568:	ldr	r2, [pc, #360]	; 196d8 <exit_local_client+0x254>
   1956c:	add	r2, pc, r2
   19570:	mov	r0, #1
   19574:	mov	r1, #0
   19578:	mov	r3, sl
   1957c:	bl	d634 <sendto_realops_snomask@plt>
   19580:	bl	d07c <rb_current_time@plt>
   19584:	str	r0, [sp, #36]	; 0x24
   19588:	ldr	r0, [r4, #432]	; 0x1b0
   1958c:	mov	r6, r9
   19590:	ldr	r9, [r0, #48]	; 0x30
   19594:	bl	d07c <rb_current_time@plt>
   19598:	add	r1, sp, #42	; 0x2a
   1959c:	mov	r2, #26
   195a0:	bl	d5b0 <rb_ctime@plt>
   195a4:	mov	r2, r0
   195a8:	ldr	r0, [r4, #432]	; 0x1b0
   195ac:	ldr	r1, [r0, #112]	; 0x70
   195b0:	ldr	r0, [r0, #120]	; 0x78
   195b4:	str	r0, [sp, #28]
   195b8:	str	r1, [sp, #24]
   195bc:	str	r7, [sp, #20]
   195c0:	str	r8, [sp, #12]
   195c4:	ldr	r0, [sp, #36]	; 0x24
   195c8:	sub	r0, r0, r9
   195cc:	movw	r1, #34953	; 0x8889
   195d0:	movt	r1, #34952	; 0x8888
   195d4:	umull	r3, r7, r0, r1
   195d8:	lsr	r3, r7, #5
   195dc:	lsl	r3, r3, #4
   195e0:	sub	r3, r3, r7, lsr #5
   195e4:	sub	r3, r0, r3, lsl #2
   195e8:	str	r3, [sp, #4]
   195ec:	movw	r3, #46021	; 0xb3c5
   195f0:	movt	r3, #37282	; 0x91a2
   195f4:	umull	r3, r7, r0, r3
   195f8:	lsr	r3, r7, #11
   195fc:	mov	r7, #3600	; 0xe10
   19600:	mls	r0, r3, r7, r0
   19604:	uxth	r0, r0
   19608:	umull	r0, r1, r0, r1
   1960c:	lsr	r0, r1, #5
   19610:	str	r5, [sp, #16]
   19614:	str	sl, [sp, #8]
   19618:	str	r0, [sp]
   1961c:	ldr	r1, [pc, #184]	; 196dc <exit_local_client+0x258>
   19620:	add	r1, pc, r1
   19624:	mov	r0, #1
   19628:	bl	e0b4 <ilog@plt>
   1962c:	ldr	r1, [pc, #172]	; 196e0 <exit_local_client+0x25c>
   19630:	add	r1, pc, r1
   19634:	mov	r0, r4
   19638:	mov	r2, r5
   1963c:	mov	r3, r6
   19640:	bl	d1e4 <sendto_one@plt>
   19644:	mov	r0, r4
   19648:	bl	d9a0 <close_connection@plt>
   1964c:	mov	r5, r4
   19650:	ldrb	r0, [r5, #64]!	; 0x40
   19654:	tst	r0, #4
   19658:	bne	19698 <exit_local_client+0x214>
   1965c:	ldr	r0, [pc, #128]	; 196e4 <exit_local_client+0x260>
   19660:	ldr	r0, [pc, r0]
   19664:	ldr	r2, [r0]
   19668:	mov	r0, r4
   1966c:	ldrb	r1, [r0, #396]!	; 0x18c
   19670:	cmp	r1, #0
   19674:	moveq	r0, sl
   19678:	ldr	r1, [pc, #104]	; 196e8 <exit_local_client+0x264>
   1967c:	add	r1, pc, r1
   19680:	str	r1, [sp]
   19684:	stmib	sp, {r0, r6}
   19688:	ldr	r0, [sp, #32]
   1968c:	mov	r1, #0
   19690:	mov	r3, #0
   19694:	bl	d994 <sendto_server@plt>
   19698:	ldr	r0, [r5]
   1969c:	orr	r0, r0, #2
   196a0:	str	r0, [r5]
   196a4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   196a8:	mov	r1, r0
   196ac:	ldr	r2, [pc, #56]	; 196ec <exit_local_client+0x268>
   196b0:	ldr	r2, [pc, r2]
   196b4:	mov	r0, r4
   196b8:	bl	18194 <rb_dlinkAdd>
   196bc:	sub	sp, fp, #28
   196c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196c4:	.word	0x00041670
   196c8:	.word	0x00041694
   196cc:	.word	0x00041450
   196d0:	.word	0x00028389
   196d4:	.word	0x00028338
   196d8:	.word	0x00028339
   196dc:	.word	0x0002829e
   196e0:	.word	0x000282b7
   196e4:	.word	0x000412c8
   196e8:	.word	0x00028288
   196ec:	.word	0x000413d4

000196f0 <exit_local_server>:
   196f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   196f4:	add	fp, sp, #28
   196f8:	sub	sp, sp, #20
   196fc:	mov	r6, r3
   19700:	mov	r7, r2
   19704:	mov	r4, r1
   19708:	mov	r9, r0
   1970c:	ldr	r0, [r1, #432]	; 0x1b0
   19710:	ldr	r1, [pc, #636]	; 19994 <exit_local_server+0x2a4>
   19714:	ldr	r1, [pc, r1]
   19718:	bl	19020 <rb_dlinkDelete>
   1971c:	ldr	r1, [pc, #628]	; 19998 <exit_local_server+0x2a8>
   19720:	ldr	r1, [pc, r1]
   19724:	mov	r0, r4
   19728:	bl	182c8 <rb_dlinkFindDestroy>
   1972c:	ldr	r0, [r4, #432]	; 0x1b0
   19730:	ldr	r5, [r0, #112]	; 0x70
   19734:	ldr	r8, [r0, #120]	; 0x78
   19738:	str	r6, [sp, #16]
   1973c:	str	r6, [sp]
   19740:	add	r3, r7, #88	; 0x58
   19744:	ldr	r0, [pc, #592]	; 1999c <exit_local_server+0x2ac>
   19748:	ldr	r0, [pc, r0]
   1974c:	cmp	r7, r4
   19750:	addeq	r3, r0, #88	; 0x58
   19754:	ldr	r6, [pc, #580]	; 199a0 <exit_local_server+0x2b0>
   19758:	add	r6, pc, r6
   1975c:	ldr	r2, [pc, #576]	; 199a4 <exit_local_server+0x2b4>
   19760:	add	r2, pc, r2
   19764:	mov	r0, r6
   19768:	mov	r1, #512	; 0x200
   1976c:	bl	de74 <snprintf@plt>
   19770:	ldrb	r0, [r4, #65]	; 0x41
   19774:	tst	r0, #64	; 0x40
   19778:	bne	197a4 <exit_local_server+0xb4>
   1977c:	mov	r2, r4
   19780:	ldrb	r0, [r2, #396]!	; 0x18c
   19784:	cmp	r0, #0
   19788:	addeq	r2, r4, #88	; 0x58
   1978c:	ldr	r1, [pc, #532]	; 199a8 <exit_local_server+0x2b8>
   19790:	add	r1, pc, r1
   19794:	ldr	r3, [pc, #528]	; 199ac <exit_local_server+0x2bc>
   19798:	add	r3, pc, r3
   1979c:	mov	r0, r4
   197a0:	bl	d1e4 <sendto_one@plt>
   197a4:	add	sl, r4, #64	; 0x40
   197a8:	cmp	r9, #0
   197ac:	cmpne	r4, r9
   197b0:	bne	19890 <exit_local_server+0x1a0>
   197b4:	ldr	r0, [r4, #32]
   197b8:	cmp	r0, #0
   197bc:	beq	197d4 <exit_local_server+0xe4>
   197c0:	ldr	r1, [r0, #28]
   197c4:	cmp	r1, #0
   197c8:	addne	r0, r4, #12
   197cc:	addne	r1, r1, #36	; 0x24
   197d0:	blne	19020 <rb_dlinkDelete>
   197d4:	mov	r0, r4
   197d8:	bl	d9a0 <close_connection@plt>
   197dc:	ldr	r0, [pc, #464]	; 199b4 <exit_local_server+0x2c4>
   197e0:	ldr	r0, [pc, r0]
   197e4:	ldr	r0, [r0]
   197e8:	cmp	r0, #0
   197ec:	beq	1981c <exit_local_server+0x12c>
   197f0:	ldr	r0, [pc, #448]	; 199b8 <exit_local_server+0x2c8>
   197f4:	add	r0, pc, r0
   197f8:	vldr	d16, [r0]
   197fc:	add	r0, r0, #6
   19800:	ldr	r1, [pc, #436]	; 199bc <exit_local_server+0x2cc>
   19804:	add	r1, pc, r1
   19808:	vld1.16	{d17}, [r0]
   1980c:	vstr	d16, [r1]
   19810:	add	r0, r1, #6
   19814:	vst1.16	{d17}, [r0]
   19818:	b	19868 <exit_local_server+0x178>
   1981c:	ldr	r0, [r4, #32]
   19820:	add	r1, r0, #88	; 0x58
   19824:	str	sl, [sp, #12]
   19828:	mov	sl, r8
   1982c:	mov	r8, r5
   19830:	ldr	r5, [pc, #392]	; 199c0 <exit_local_server+0x2d0>
   19834:	add	r5, pc, r5
   19838:	mov	r0, r5
   1983c:	bl	d91c <strcpy@plt>
   19840:	bl	dc94 <strlen@plt>
   19844:	add	r0, r5, r0
   19848:	mov	r1, #32
   1984c:	strh	r1, [r0]
   19850:	add	r1, r4, #88	; 0x58
   19854:	mov	r0, r5
   19858:	mov	r5, r8
   1985c:	mov	r8, sl
   19860:	ldr	sl, [sp, #12]
   19864:	bl	d8b0 <strcat@plt>
   19868:	ldr	r0, [r4, #28]
   1986c:	cmp	r0, #0
   19870:	beq	198d4 <exit_local_server+0x1e4>
   19874:	ldrh	r0, [r7, #80]	; 0x50
   19878:	cmp	r0, #64	; 0x40
   1987c:	bne	198b8 <exit_local_server+0x1c8>
   19880:	ldr	r0, [r7, #24]
   19884:	cmp	r0, #0
   19888:	ldreq	r6, [sp, #16]
   1988c:	b	198bc <exit_local_server+0x1cc>
   19890:	ldrb	r0, [sl, #1]
   19894:	tst	r0, #64	; 0x40
   19898:	bne	197b4 <exit_local_server+0xc4>
   1989c:	add	r2, r4, #88	; 0x58
   198a0:	ldr	r1, [pc, #264]	; 199b0 <exit_local_server+0x2c0>
   198a4:	add	r1, pc, r1
   198a8:	mov	r0, r4
   198ac:	ldr	r3, [sp, #16]
   198b0:	bl	d1e4 <sendto_one@plt>
   198b4:	b	197b4 <exit_local_server+0xc4>
   198b8:	ldr	r6, [sp, #16]
   198bc:	ldr	r3, [pc, #256]	; 199c4 <exit_local_server+0x2d4>
   198c0:	add	r3, pc, r3
   198c4:	mov	r0, r9
   198c8:	mov	r1, r4
   198cc:	mov	r2, r6
   198d0:	bl	1afe8 <remove_dependents>
   198d4:	bl	d07c <rb_current_time@plt>
   198d8:	ldr	r1, [r4, #432]	; 0x1b0
   198dc:	ldr	r1, [r1, #48]	; 0x30
   198e0:	sub	r0, r0, r1
   198e4:	stm	sp, {r0, r5, r8}
   198e8:	mov	r7, r5
   198ec:	add	r5, r4, #88	; 0x58
   198f0:	ldr	r6, [pc, #208]	; 199c8 <exit_local_server+0x2d8>
   198f4:	add	r6, pc, r6
   198f8:	mov	r0, #256	; 0x100
   198fc:	mov	r1, #0
   19900:	mov	r2, r6
   19904:	mov	r3, r5
   19908:	bl	d634 <sendto_realops_snomask@plt>
   1990c:	bl	d07c <rb_current_time@plt>
   19910:	ldr	r1, [r4, #432]	; 0x1b0
   19914:	ldr	r1, [r1, #48]	; 0x30
   19918:	stm	sp, {r7, r8}
   1991c:	sub	r3, r0, r1
   19920:	mov	r0, #5
   19924:	mov	r1, r6
   19928:	mov	r2, r5
   1992c:	bl	e0b4 <ilog@plt>
   19930:	mov	r0, r4
   19934:	ldrb	r1, [r0, #396]!	; 0x18c
   19938:	cmp	r1, #0
   1993c:	beq	19948 <exit_local_server+0x258>
   19940:	mov	r1, r4
   19944:	bl	da90 <del_from_id_hash@plt>
   19948:	mov	r0, r5
   1994c:	mov	r1, r4
   19950:	bl	db14 <del_from_client_hash@plt>
   19954:	mov	r0, r4
   19958:	bl	1ae98 <remove_client_from_list>
   1995c:	ldr	r0, [r4, #28]
   19960:	ldr	r0, [r0, #68]	; 0x44
   19964:	bl	db5c <scache_split@plt>
   19968:	ldr	r0, [sl]
   1996c:	orr	r0, r0, #2
   19970:	str	r0, [sl]
   19974:	bl	dc58 <rb_make_rb_dlink_node@plt>
   19978:	mov	r1, r0
   1997c:	ldr	r2, [pc, #72]	; 199cc <exit_local_server+0x2dc>
   19980:	ldr	r2, [pc, r2]
   19984:	mov	r0, r4
   19988:	sub	sp, fp, #28
   1998c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19990:	b	18194 <rb_dlinkAdd>
   19994:	.word	0x000412bc
   19998:	.word	0x00041158
   1999c:	.word	0x00041410
   199a0:	.word	0x0004bb80
   199a4:	.word	0x000281dc
   199a8:	.word	0x00028221
   199ac:	.word	0x0004bb40
   199b0:	.word	0x000280a2
   199b4:	.word	0x000411d4
   199b8:	.word	0x000281ec
   199bc:	.word	0x0004ba54
   199c0:	.word	0x0004ba24
   199c4:	.word	0x0004b998
   199c8:	.word	0x00028079
   199cc:	.word	0x00041104

000199d0 <exit_unknown_client>:
   199d0:	push	{r4, r5, fp, lr}
   199d4:	add	fp, sp, #8
   199d8:	mov	r5, r1
   199dc:	mov	r4, r0
   199e0:	bl	e714 <authd_abort_client@plt>
   199e4:	ldr	r0, [r4, #432]	; 0x1b0
   199e8:	ldr	r1, [pc, #196]	; 19ab4 <exit_unknown_client+0xe4>
   199ec:	ldr	r1, [pc, r1]
   199f0:	bl	19020 <rb_dlinkDelete>
   199f4:	ldrb	r0, [r4, #65]	; 0x41
   199f8:	tst	r0, #64	; 0x40
   199fc:	bne	19a28 <exit_unknown_client+0x58>
   19a00:	ldr	r0, [r4, #24]
   19a04:	ldr	r2, [pc, #172]	; 19ab8 <exit_unknown_client+0xe8>
   19a08:	add	r2, pc, r2
   19a0c:	cmp	r0, #0
   19a10:	addne	r2, r4, #163	; 0xa3
   19a14:	ldr	r1, [pc, #160]	; 19abc <exit_unknown_client+0xec>
   19a18:	add	r1, pc, r1
   19a1c:	mov	r0, r4
   19a20:	mov	r3, r5
   19a24:	bl	d1e4 <sendto_one@plt>
   19a28:	mov	r0, r4
   19a2c:	bl	d9a0 <close_connection@plt>
   19a30:	mov	r0, r4
   19a34:	ldrb	r1, [r0, #396]!	; 0x18c
   19a38:	cmp	r1, #0
   19a3c:	beq	19a48 <exit_unknown_client+0x78>
   19a40:	mov	r1, r4
   19a44:	bl	da90 <del_from_id_hash@plt>
   19a48:	add	r5, r4, #64	; 0x40
   19a4c:	add	r0, r4, #163	; 0xa3
   19a50:	mov	r1, r4
   19a54:	bl	d43c <del_from_hostname_hash@plt>
   19a58:	ldrh	r0, [r4, #80]	; 0x50
   19a5c:	sub	r0, r0, #1
   19a60:	cmp	r0, #31
   19a64:	bhi	19a78 <exit_unknown_client+0xa8>
   19a68:	mov	r1, #1
   19a6c:	mov	r2, #-2147483645	; 0x80000003
   19a70:	tst	r2, r1, lsl r0
   19a74:	bne	19a84 <exit_unknown_client+0xb4>
   19a78:	add	r0, r4, #88	; 0x58
   19a7c:	mov	r1, r4
   19a80:	bl	db14 <del_from_client_hash@plt>
   19a84:	mov	r0, r4
   19a88:	bl	1ae98 <remove_client_from_list>
   19a8c:	ldr	r0, [r5]
   19a90:	orr	r0, r0, #2
   19a94:	str	r0, [r5]
   19a98:	bl	dc58 <rb_make_rb_dlink_node@plt>
   19a9c:	mov	r1, r0
   19aa0:	ldr	r2, [pc, #24]	; 19ac0 <exit_unknown_client+0xf0>
   19aa4:	ldr	r2, [pc, r2]
   19aa8:	mov	r0, r4
   19aac:	pop	{r4, r5, fp, lr}
   19ab0:	b	18194 <rb_dlinkAdd>
   19ab4:	.word	0x00040e88
   19ab8:	.word	0x00027f9b
   19abc:	.word	0x00027ecf
   19ac0:	.word	0x00040fe0

00019ac4 <exit_remote_client>:
   19ac4:	push	{r4, r5, r6, r7, fp, lr}
   19ac8:	add	fp, sp, #16
   19acc:	sub	sp, sp, #16
   19ad0:	mov	r6, r2
   19ad4:	mov	r4, r1
   19ad8:	mov	r5, r0
   19adc:	mov	r0, r1
   19ae0:	mov	r1, r2
   19ae4:	bl	1ad98 <exit_generic_client>
   19ae8:	ldr	r0, [r4, #32]
   19aec:	cmp	r0, #0
   19af0:	beq	19b08 <exit_remote_client+0x44>
   19af4:	ldr	r1, [r0, #28]
   19af8:	cmp	r1, #0
   19afc:	addne	r0, r4, #12
   19b00:	addne	r1, r1, #48	; 0x30
   19b04:	blne	19020 <rb_dlinkDelete>
   19b08:	mov	r7, r4
   19b0c:	ldrb	r0, [r7, #64]!	; 0x40
   19b10:	tst	r0, #4
   19b14:	bne	19b54 <exit_remote_client+0x90>
   19b18:	ldr	r0, [pc, #96]	; 19b80 <exit_remote_client+0xbc>
   19b1c:	ldr	r0, [pc, r0]
   19b20:	ldr	r2, [r0]
   19b24:	mov	r0, r4
   19b28:	ldrb	r1, [r0, #396]!	; 0x18c
   19b2c:	cmp	r1, #0
   19b30:	subeq	r0, r0, #308	; 0x134
   19b34:	ldr	r1, [pc, #72]	; 19b84 <exit_remote_client+0xc0>
   19b38:	add	r1, pc, r1
   19b3c:	str	r1, [sp]
   19b40:	stmib	sp, {r0, r6}
   19b44:	mov	r0, r5
   19b48:	mov	r1, #0
   19b4c:	mov	r3, #0
   19b50:	bl	d994 <sendto_server@plt>
   19b54:	ldr	r0, [r7]
   19b58:	orr	r0, r0, #2
   19b5c:	str	r0, [r7]
   19b60:	bl	dc58 <rb_make_rb_dlink_node@plt>
   19b64:	mov	r1, r0
   19b68:	ldr	r2, [pc, #24]	; 19b88 <exit_remote_client+0xc4>
   19b6c:	add	r2, pc, r2
   19b70:	mov	r0, r4
   19b74:	sub	sp, fp, #16
   19b78:	pop	{r4, r5, r6, r7, fp, lr}
   19b7c:	b	18194 <rb_dlinkAdd>
   19b80:	.word	0x00040e0c
   19b84:	.word	0x00027dcc
   19b88:	.word	0x0004b6dc

00019b8c <exit_remote_server>:
   19b8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19b90:	add	fp, sp, #24
   19b94:	sub	sp, sp, #8
   19b98:	mov	r8, r3
   19b9c:	mov	r5, r2
   19ba0:	mov	r4, r1
   19ba4:	mov	r7, r0
   19ba8:	ldr	r0, [pc, #516]	; 19db4 <exit_remote_server+0x228>
   19bac:	ldr	r0, [pc, r0]
   19bb0:	ldr	r0, [r0]
   19bb4:	cmp	r0, #0
   19bb8:	beq	19be8 <exit_remote_server+0x5c>
   19bbc:	ldr	r0, [pc, #500]	; 19db8 <exit_remote_server+0x22c>
   19bc0:	add	r0, pc, r0
   19bc4:	vldr	d16, [r0]
   19bc8:	add	r0, r0, #6
   19bcc:	ldr	r1, [pc, #488]	; 19dbc <exit_remote_server+0x230>
   19bd0:	add	r1, pc, r1
   19bd4:	vld1.16	{d17}, [r0]
   19bd8:	vstr	d16, [r1]
   19bdc:	add	r0, r1, #6
   19be0:	vst1.16	{d17}, [r0]
   19be4:	b	19c1c <exit_remote_server+0x90>
   19be8:	ldr	r0, [r4, #32]
   19bec:	add	r1, r0, #88	; 0x58
   19bf0:	ldr	r6, [pc, #456]	; 19dc0 <exit_remote_server+0x234>
   19bf4:	add	r6, pc, r6
   19bf8:	mov	r0, r6
   19bfc:	bl	d91c <strcpy@plt>
   19c00:	bl	dc94 <strlen@plt>
   19c04:	add	r0, r6, r0
   19c08:	mov	r1, #32
   19c0c:	strh	r1, [r0]
   19c10:	add	r1, r4, #88	; 0x58
   19c14:	mov	r0, r6
   19c18:	bl	d8b0 <strcat@plt>
   19c1c:	ldrh	r0, [r5, #80]	; 0x50
   19c20:	cmp	r0, #64	; 0x40
   19c24:	bne	19c78 <exit_remote_server+0xec>
   19c28:	ldr	r0, [r5, #24]
   19c2c:	cmp	r0, #0
   19c30:	beq	19c54 <exit_remote_server+0xc8>
   19c34:	str	r8, [sp]
   19c38:	add	r3, r5, #88	; 0x58
   19c3c:	ldr	r0, [pc, #384]	; 19dc4 <exit_remote_server+0x238>
   19c40:	add	r0, pc, r0
   19c44:	ldr	r2, [pc, #380]	; 19dc8 <exit_remote_server+0x23c>
   19c48:	add	r2, pc, r2
   19c4c:	mov	r1, #512	; 0x200
   19c50:	bl	de74 <snprintf@plt>
   19c54:	ldrh	r0, [r5, #80]	; 0x50
   19c58:	cmp	r0, #64	; 0x40
   19c5c:	bne	19c78 <exit_remote_server+0xec>
   19c60:	ldr	r0, [r5, #24]
   19c64:	cmp	r0, #0
   19c68:	beq	19c78 <exit_remote_server+0xec>
   19c6c:	ldr	r2, [pc, #344]	; 19dcc <exit_remote_server+0x240>
   19c70:	add	r2, pc, r2
   19c74:	b	19c7c <exit_remote_server+0xf0>
   19c78:	mov	r2, r8
   19c7c:	ldr	r3, [pc, #332]	; 19dd0 <exit_remote_server+0x244>
   19c80:	add	r3, pc, r3
   19c84:	mov	r0, r7
   19c88:	mov	r1, r4
   19c8c:	bl	1afe8 <remove_dependents>
   19c90:	ldr	r0, [r4, #32]
   19c94:	ldr	r1, [r0, #28]
   19c98:	add	r0, r4, #12
   19c9c:	add	r1, r1, #36	; 0x24
   19ca0:	bl	19020 <rb_dlinkDelete>
   19ca4:	ldr	r1, [pc, #296]	; 19dd4 <exit_remote_server+0x248>
   19ca8:	ldr	r1, [pc, r1]
   19cac:	mov	r0, r4
   19cb0:	bl	182c8 <rb_dlinkFindDestroy>
   19cb4:	ldr	r0, [r4, #36]	; 0x24
   19cb8:	cmp	r0, #0
   19cbc:	cmpne	r0, r7
   19cc0:	bne	19d28 <exit_remote_server+0x19c>
   19cc4:	mov	r0, r4
   19cc8:	ldrb	r1, [r0, #396]!	; 0x18c
   19ccc:	cmp	r1, #0
   19cd0:	beq	19cdc <exit_remote_server+0x150>
   19cd4:	mov	r1, r4
   19cd8:	bl	da90 <del_from_id_hash@plt>
   19cdc:	add	r0, r4, #88	; 0x58
   19ce0:	mov	r1, r4
   19ce4:	bl	db14 <del_from_client_hash@plt>
   19ce8:	mov	r0, r4
   19cec:	bl	1ae98 <remove_client_from_list>
   19cf0:	ldr	r0, [r4, #28]
   19cf4:	ldr	r0, [r0, #68]	; 0x44
   19cf8:	bl	db5c <scache_split@plt>
   19cfc:	ldr	r0, [r4, #64]	; 0x40
   19d00:	orr	r0, r0, #2
   19d04:	str	r0, [r4, #64]	; 0x40
   19d08:	bl	dc58 <rb_make_rb_dlink_node@plt>
   19d0c:	mov	r1, r0
   19d10:	ldr	r2, [pc, #196]	; 19ddc <exit_remote_server+0x250>
   19d14:	add	r2, pc, r2
   19d18:	mov	r0, r4
   19d1c:	sub	sp, fp, #24
   19d20:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   19d24:	b	18194 <rb_dlinkAdd>
   19d28:	ldrh	r1, [r0, #80]	; 0x50
   19d2c:	cmp	r1, #32
   19d30:	bne	19cc4 <exit_remote_server+0x138>
   19d34:	ldrb	r1, [r4, #64]	; 0x40
   19d38:	tst	r1, #4
   19d3c:	bne	19cc4 <exit_remote_server+0x138>
   19d40:	ldr	r1, [r0, #36]	; 0x24
   19d44:	ldrh	r2, [r1, #80]	; 0x50
   19d48:	cmp	r2, #32
   19d4c:	bne	19d6c <exit_remote_server+0x1e0>
   19d50:	ldrb	r2, [r1, #396]	; 0x18c
   19d54:	cmp	r2, #0
   19d58:	beq	19d74 <exit_remote_server+0x1e8>
   19d5c:	ldrb	r2, [r5, #396]!	; 0x18c
   19d60:	cmp	r2, #0
   19d64:	subeq	r5, r5, #308	; 0x134
   19d68:	b	19d78 <exit_remote_server+0x1ec>
   19d6c:	add	r5, r5, #88	; 0x58
   19d70:	b	19d98 <exit_remote_server+0x20c>
   19d74:	add	r5, r5, #88	; 0x58
   19d78:	ldrb	r1, [r1, #396]	; 0x18c
   19d7c:	cmp	r1, #0
   19d80:	beq	19d98 <exit_remote_server+0x20c>
   19d84:	mov	r3, r4
   19d88:	ldrb	r1, [r3, #396]!	; 0x18c
   19d8c:	cmp	r1, #0
   19d90:	subeq	r3, r3, #308	; 0x134
   19d94:	b	19d9c <exit_remote_server+0x210>
   19d98:	add	r3, r4, #88	; 0x58
   19d9c:	str	r8, [sp]
   19da0:	ldr	r1, [pc, #48]	; 19dd8 <exit_remote_server+0x24c>
   19da4:	add	r1, pc, r1
   19da8:	mov	r2, r5
   19dac:	bl	d1e4 <sendto_one@plt>
   19db0:	b	19cc4 <exit_remote_server+0x138>
   19db4:	.word	0x00040e08
   19db8:	.word	0x00027e20
   19dbc:	.word	0x0004b908
   19dc0:	.word	0x0004b8e4
   19dc4:	.word	0x0004b918
   19dc8:	.word	0x00027cf4
   19dcc:	.word	0x0004b8e8
   19dd0:	.word	0x0004b858
   19dd4:	.word	0x00040bd0
   19dd8:	.word	0x00027c09
   19ddc:	.word	0x0004b534

00019de0 <count_local_client_memory>:
   19de0:	push	{r4, r5, fp, lr}
   19de4:	add	fp, sp, #8
   19de8:	sub	sp, sp, #8
   19dec:	mov	r4, r1
   19df0:	mov	r5, r0
   19df4:	ldr	r0, [pc, #52]	; 19e30 <count_local_client_memory+0x50>
   19df8:	ldr	r0, [pc, r0]
   19dfc:	mov	r1, #0
   19e00:	str	r1, [sp]
   19e04:	add	r3, sp, #4
   19e08:	mov	r1, r5
   19e0c:	mov	r2, #0
   19e10:	bl	e384 <rb_bh_usage@plt>
   19e14:	ldr	r0, [r5]
   19e18:	ldr	r1, [sp, #4]
   19e1c:	mov	r2, #452	; 0x1c4
   19e20:	mla	r0, r0, r2, r1
   19e24:	str	r0, [r4]
   19e28:	sub	sp, fp, #8
   19e2c:	pop	{r4, r5, fp, pc}
   19e30:	.word	0x0004b300

00019e34 <count_remote_client_memory>:
   19e34:	push	{r4, r5, r6, sl, fp, lr}
   19e38:	add	fp, sp, #16
   19e3c:	sub	sp, sp, #16
   19e40:	mov	r4, r1
   19e44:	mov	r5, r0
   19e48:	ldr	r0, [pc, #88]	; 19ea8 <count_remote_client_memory+0x74>
   19e4c:	ldr	r0, [pc, r0]
   19e50:	mov	r6, #0
   19e54:	str	r6, [sp]
   19e58:	add	r1, sp, #12
   19e5c:	mov	r2, #0
   19e60:	mov	r3, #0
   19e64:	bl	e384 <rb_bh_usage@plt>
   19e68:	ldr	r0, [pc, #60]	; 19eac <count_remote_client_memory+0x78>
   19e6c:	ldr	r0, [pc, r0]
   19e70:	str	r6, [sp]
   19e74:	add	r1, sp, #8
   19e78:	mov	r2, #0
   19e7c:	mov	r3, #0
   19e80:	bl	e384 <rb_bh_usage@plt>
   19e84:	ldr	r0, [sp, #12]
   19e88:	ldr	r1, [sp, #8]
   19e8c:	sub	r0, r1, r0
   19e90:	str	r0, [r5]
   19e94:	mov	r1, #452	; 0x1c4
   19e98:	mul	r0, r0, r1
   19e9c:	str	r0, [r4]
   19ea0:	sub	sp, fp, #16
   19ea4:	pop	{r4, r5, r6, sl, fp, pc}
   19ea8:	.word	0x0004b2ac
   19eac:	.word	0x0004b288

00019eb0 <del_all_accepts>:
   19eb0:	push	{r4, r5, r6, r7, fp, lr}
   19eb4:	add	fp, sp, #16
   19eb8:	mov	r4, r0
   19ebc:	ldrb	r0, [r0, #65]	; 0x41
   19ec0:	tst	r0, #32
   19ec4:	beq	19f1c <del_all_accepts+0x6c>
   19ec8:	ldrh	r0, [r4, #80]	; 0x50
   19ecc:	cmp	r0, #64	; 0x40
   19ed0:	bne	19f1c <del_all_accepts+0x6c>
   19ed4:	ldr	r0, [r4, #432]	; 0x1b0
   19ed8:	ldr	r5, [r0, #316]	; 0x13c
   19edc:	cmp	r5, #0
   19ee0:	beq	19f1c <del_all_accepts+0x6c>
   19ee4:	ldr	r0, [r5]
   19ee8:	ldr	r6, [r5, #8]
   19eec:	add	r1, r0, #408	; 0x198
   19ef0:	mov	r0, r4
   19ef4:	bl	182c8 <rb_dlinkFindDestroy>
   19ef8:	ldr	r0, [r4, #432]	; 0x1b0
   19efc:	add	r1, r0, #316	; 0x13c
   19f00:	mov	r0, r5
   19f04:	bl	19020 <rb_dlinkDelete>
   19f08:	mov	r0, r5
   19f0c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   19f10:	cmp	r6, #0
   19f14:	mov	r5, r6
   19f18:	bne	19ee4 <del_all_accepts+0x34>
   19f1c:	mov	r5, r4
   19f20:	ldr	r6, [r5, #408]!	; 0x198
   19f24:	cmp	r6, #0
   19f28:	beq	19f64 <del_all_accepts+0xb4>
   19f2c:	ldr	r0, [r6]
   19f30:	ldr	r7, [r6, #8]
   19f34:	ldr	r0, [r0, #432]	; 0x1b0
   19f38:	add	r1, r0, #316	; 0x13c
   19f3c:	mov	r0, r4
   19f40:	bl	182c8 <rb_dlinkFindDestroy>
   19f44:	mov	r0, r6
   19f48:	mov	r1, r5
   19f4c:	bl	19020 <rb_dlinkDelete>
   19f50:	mov	r0, r6
   19f54:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   19f58:	cmp	r7, #0
   19f5c:	mov	r6, r7
   19f60:	bne	19f2c <del_all_accepts+0x7c>
   19f64:	pop	{r4, r5, r6, r7, fp, pc}

00019f68 <show_ip>:
   19f68:	push	{r4, r5, fp, lr}
   19f6c:	add	fp, sp, #8
   19f70:	ldrh	r2, [r1, #80]	; 0x50
   19f74:	sub	r2, r2, #1
   19f78:	mov	r5, #0
   19f7c:	cmp	r2, #31
   19f80:	bhi	19f9c <show_ip+0x34>
   19f84:	mov	r3, #1
   19f88:	mov	r4, #-2147483645	; 0x80000003
   19f8c:	tst	r4, r3, lsl r2
   19f90:	beq	19f9c <show_ip+0x34>
   19f94:	mov	r0, r5
   19f98:	pop	{r4, r5, fp, pc}
   19f9c:	ldr	r1, [r1, #64]	; 0x40
   19fa0:	tst	r1, #16777216	; 0x1000000
   19fa4:	bne	19fc0 <show_ip+0x58>
   19fa8:	cmp	r0, #0
   19fac:	andsne	r1, r1, #131072	; 0x20000
   19fb0:	bne	1a028 <show_ip+0xc0>
   19fb4:	mov	r5, #1
   19fb8:	mov	r0, r5
   19fbc:	pop	{r4, r5, fp, pc}
   19fc0:	ldr	r1, [pc, #148]	; 1a05c <show_ip+0xf4>
   19fc4:	ldr	r1, [pc, r1]
   19fc8:	ldr	r1, [r1, #204]	; 0xcc
   19fcc:	cmp	r1, #0
   19fd0:	beq	19fe0 <show_ip+0x78>
   19fd4:	mov	r5, #0
   19fd8:	mov	r0, r5
   19fdc:	pop	{r4, r5, fp, pc}
   19fe0:	mov	r5, #1
   19fe4:	cmp	r0, #0
   19fe8:	beq	19f94 <show_ip+0x2c>
   19fec:	ldrb	r1, [r0, #65]	; 0x41
   19ff0:	tst	r1, #32
   19ff4:	beq	19fd4 <show_ip+0x6c>
   19ff8:	ldr	r0, [r0, #24]
   19ffc:	cmp	r0, #0
   1a000:	beq	19fd4 <show_ip+0x6c>
   1a004:	ldr	r0, [r0, #36]	; 0x24
   1a008:	cmp	r0, #0
   1a00c:	beq	19fd4 <show_ip+0x6c>
   1a010:	ldr	r1, [pc, #72]	; 1a060 <show_ip+0xf8>
   1a014:	add	r1, pc, r1
   1a018:	bl	e594 <privilegeset_in_set@plt>
   1a01c:	cmp	r0, #0
   1a020:	bne	19f94 <show_ip+0x2c>
   1a024:	b	19fd4 <show_ip+0x6c>
   1a028:	ldr	r0, [r0, #24]
   1a02c:	cmp	r0, #0
   1a030:	beq	19f94 <show_ip+0x2c>
   1a034:	ldr	r0, [r0, #36]	; 0x24
   1a038:	cmp	r0, #0
   1a03c:	beq	19f94 <show_ip+0x2c>
   1a040:	ldr	r1, [pc, #28]	; 1a064 <show_ip+0xfc>
   1a044:	add	r1, pc, r1
   1a048:	bl	e594 <privilegeset_in_set@plt>
   1a04c:	cmp	r0, #0
   1a050:	movne	r5, #1
   1a054:	mov	r0, r5
   1a058:	pop	{r4, r5, fp, pc}
   1a05c:	.word	0x00040bb8
   1a060:	.word	0x00027654
   1a064:	.word	0x00027624

0001a068 <show_ip_conf>:
   1a068:	ldrb	r2, [r0, #5]
   1a06c:	mov	r0, #1
   1a070:	tst	r2, #2
   1a074:	bxeq	lr
   1a078:	ldr	r2, [pc, #48]	; 1a0b0 <show_ip_conf+0x48>
   1a07c:	ldr	r2, [pc, r2]
   1a080:	ldr	r2, [r2, #204]	; 0xcc
   1a084:	cmp	r2, #0
   1a088:	bne	1a098 <show_ip_conf+0x30>
   1a08c:	ldrb	r2, [r1, #65]	; 0x41
   1a090:	tst	r2, #32
   1a094:	bne	1a0a0 <show_ip_conf+0x38>
   1a098:	mov	r0, #0
   1a09c:	bx	lr
   1a0a0:	ldrb	r1, [r1, #57]	; 0x39
   1a0a4:	tst	r1, #16
   1a0a8:	moveq	r0, #0
   1a0ac:	bx	lr
   1a0b0:	.word	0x00040b00

0001a0b4 <show_ip_whowas>:
   1a0b4:	ldrb	r2, [r0, #286]	; 0x11e
   1a0b8:	tst	r2, #1
   1a0bc:	bne	1a0d0 <show_ip_whowas+0x1c>
   1a0c0:	tst	r2, #2
   1a0c4:	bne	1a108 <show_ip_whowas+0x54>
   1a0c8:	mov	r0, #1
   1a0cc:	bx	lr
   1a0d0:	ldr	r0, [pc, #68]	; 1a11c <show_ip_whowas+0x68>
   1a0d4:	ldr	r0, [pc, r0]
   1a0d8:	ldr	r3, [r0, #204]	; 0xcc
   1a0dc:	mov	r0, #0
   1a0e0:	cmp	r3, #0
   1a0e4:	bne	1a118 <show_ip_whowas+0x64>
   1a0e8:	ldrb	r3, [r1, #65]	; 0x41
   1a0ec:	tst	r3, #32
   1a0f0:	beq	1a118 <show_ip_whowas+0x64>
   1a0f4:	ldrb	r3, [r1, #57]	; 0x39
   1a0f8:	tst	r3, #16
   1a0fc:	bxeq	lr
   1a100:	tst	r2, #2
   1a104:	beq	1a0c8 <show_ip_whowas+0x14>
   1a108:	ldrb	r1, [r1, #57]	; 0x39
   1a10c:	mov	r0, #0
   1a110:	tst	r1, #16
   1a114:	movne	r0, #1
   1a118:	bx	lr
   1a11c:	.word	0x00040aa8

0001a120 <make_user>:
   1a120:	push	{r4, sl, fp, lr}
   1a124:	add	fp, sp, #8
   1a128:	mov	r4, r0
   1a12c:	ldr	r0, [r0, #24]
   1a130:	cmp	r0, #0
   1a134:	popne	{r4, sl, fp, pc}
   1a138:	ldr	r0, [pc, #20]	; 1a154 <make_user+0x34>
   1a13c:	ldr	r0, [pc, r0]
   1a140:	bl	de20 <rb_bh_alloc@plt>
   1a144:	mov	r1, #1
   1a148:	str	r1, [r0, #28]
   1a14c:	str	r0, [r4, #24]
   1a150:	pop	{r4, sl, fp, pc}
   1a154:	.word	0x0004afc4

0001a158 <make_server>:
   1a158:	push	{r4, sl, fp, lr}
   1a15c:	add	fp, sp, #8
   1a160:	mov	r4, r0
   1a164:	ldr	r0, [r0, #28]
   1a168:	cmp	r0, #0
   1a16c:	beq	1a178 <make_server+0x20>
   1a170:	ldr	r0, [r4, #28]
   1a174:	pop	{r4, sl, fp, pc}
   1a178:	mov	r0, #72	; 0x48
   1a17c:	bl	19464 <rb_malloc>
   1a180:	str	r0, [r4, #28]
   1a184:	ldr	r0, [r4, #28]
   1a188:	pop	{r4, sl, fp, pc}

0001a18c <free_user>:
   1a18c:	push	{r4, r5, r6, sl, fp, lr}
   1a190:	add	fp, sp, #16
   1a194:	sub	sp, sp, #32
   1a198:	mov	r5, r1
   1a19c:	mov	r4, r0
   1a1a0:	mov	r0, r1
   1a1a4:	bl	db80 <free_away@plt>
   1a1a8:	ldr	r0, [r4, #28]
   1a1ac:	subs	r0, r0, #1
   1a1b0:	str	r0, [r4, #28]
   1a1b4:	bgt	1a270 <free_user+0xe4>
   1a1b8:	ldr	r0, [r4, #24]
   1a1bc:	cmp	r0, #0
   1a1c0:	blne	184a8 <rb_free>
   1a1c4:	ldr	r0, [r4, #32]
   1a1c8:	bl	184a8 <rb_free>
   1a1cc:	ldr	r0, [r4, #36]	; 0x24
   1a1d0:	cmp	r0, #0
   1a1d4:	beq	1a1dc <free_user+0x50>
   1a1d8:	bl	e630 <privilegeset_unref@plt>
   1a1dc:	ldr	r0, [r4, #28]
   1a1e0:	cmp	r0, #0
   1a1e4:	bmi	1a200 <free_user+0x74>
   1a1e8:	ldr	r1, [r4, #12]
   1a1ec:	cmp	r1, #0
   1a1f0:	bne	1a200 <free_user+0x74>
   1a1f4:	ldr	r1, [r4]
   1a1f8:	cmp	r1, #0
   1a1fc:	beq	1a258 <free_user+0xcc>
   1a200:	ldr	ip, [r4]
   1a204:	ldr	lr, [r4, #8]
   1a208:	ldr	r3, [r4, #12]
   1a20c:	add	r1, r5, #163	; 0xa3
   1a210:	add	r2, r5, #152	; 0x98
   1a214:	ldr	r6, [pc, #92]	; 1a278 <free_user+0xec>
   1a218:	add	r6, pc, r6
   1a21c:	cmp	r5, #0
   1a220:	addne	r6, r5, #88	; 0x58
   1a224:	str	r6, [sp]
   1a228:	str	r2, [sp, #4]
   1a22c:	str	r1, [sp, #8]
   1a230:	str	r4, [sp, #12]
   1a234:	add	r1, sp, #16
   1a238:	stm	r1, {r3, ip, lr}
   1a23c:	str	r0, [sp, #28]
   1a240:	ldr	r2, [pc, #52]	; 1a27c <free_user+0xf0>
   1a244:	add	r2, pc, r2
   1a248:	mov	r0, #256	; 0x100
   1a24c:	mov	r1, #0
   1a250:	mov	r3, r5
   1a254:	bl	d634 <sendto_realops_snomask@plt>
   1a258:	ldr	r0, [pc, #32]	; 1a280 <free_user+0xf4>
   1a25c:	ldr	r0, [pc, r0]
   1a260:	mov	r1, r4
   1a264:	sub	sp, fp, #16
   1a268:	pop	{r4, r5, r6, sl, fp, lr}
   1a26c:	b	e708 <rb_bh_free@plt>
   1a270:	sub	sp, fp, #16
   1a274:	pop	{r4, r5, r6, sl, fp, pc}
   1a278:	.word	0x00027487
   1a27c:	.word	0x00027434
   1a280:	.word	0x0004aea4

0001a284 <free_away>:
   1a284:	push	{r4, sl, fp, lr}
   1a288:	add	fp, sp, #8
   1a28c:	mov	r4, r0
   1a290:	ldr	r0, [r0, #24]
   1a294:	cmp	r0, #0
   1a298:	beq	1a2c0 <free_away+0x3c>
   1a29c:	ldr	r1, [r0, #24]
   1a2a0:	cmp	r1, #0
   1a2a4:	popeq	{r4, sl, fp, pc}
   1a2a8:	ldr	r0, [pc, #20]	; 1a2c4 <free_away+0x40>
   1a2ac:	ldr	r0, [pc, r0]
   1a2b0:	bl	e708 <rb_bh_free@plt>
   1a2b4:	ldr	r0, [r4, #24]
   1a2b8:	mov	r1, #0
   1a2bc:	str	r1, [r0, #24]
   1a2c0:	pop	{r4, sl, fp, pc}
   1a2c4:	.word	0x0004ae58

0001a2c8 <allocate_away>:
   1a2c8:	push	{r4, sl, fp, lr}
   1a2cc:	add	fp, sp, #8
   1a2d0:	mov	r4, r0
   1a2d4:	ldr	r0, [r0, #24]
   1a2d8:	ldr	r0, [r0, #24]
   1a2dc:	cmp	r0, #0
   1a2e0:	popne	{r4, sl, fp, pc}
   1a2e4:	ldr	r0, [pc, #16]	; 1a2fc <allocate_away+0x34>
   1a2e8:	ldr	r0, [pc, r0]
   1a2ec:	bl	de20 <rb_bh_alloc@plt>
   1a2f0:	ldr	r1, [r4, #24]
   1a2f4:	str	r0, [r1, #24]
   1a2f8:	pop	{r4, sl, fp, pc}
   1a2fc:	.word	0x0004ae1c

0001a300 <init_uid>:
   1a300:	ldr	r0, [pc, #60]	; 1a344 <init_uid+0x44>
   1a304:	add	r0, pc, r0
   1a308:	movw	r1, #16705	; 0x4141
   1a30c:	movt	r1, #16705	; 0x4141
   1a310:	str	r1, [r0, #3]
   1a314:	movw	r1, #16705	; 0x4141
   1a318:	strh	r1, [r0, #7]
   1a31c:	mov	r1, #0
   1a320:	strb	r1, [r0, #9]
   1a324:	ldr	r1, [pc, #28]	; 1a348 <init_uid+0x48>
   1a328:	ldr	r1, [pc, r1]
   1a32c:	mov	r2, #396	; 0x18c
   1a330:	ldrh	r2, [r1, r2]!	; <UNPREDICTABLE>
   1a334:	strh	r2, [r0]
   1a338:	ldrb	r1, [r1, #2]
   1a33c:	strb	r1, [r0, #2]
   1a340:	bx	lr
   1a344:	.word	0x0004af34
   1a348:	.word	0x00040830

0001a34c <generate_uid>:
   1a34c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a350:	add	fp, sp, #24
   1a354:	mov	r0, #8
   1a358:	ldr	r4, [pc, #148]	; 1a3f4 <generate_uid+0xa8>
   1a35c:	add	r4, pc, r4
   1a360:	mov	r5, #65	; 0x41
   1a364:	ldr	r6, [pc, #140]	; 1a3f8 <generate_uid+0xac>
   1a368:	add	r6, pc, r6
   1a36c:	mov	r8, #1
   1a370:	mov	r7, #48	; 0x30
   1a374:	ldrb	r1, [r4, r0]
   1a378:	cmp	r1, #57	; 0x39
   1a37c:	beq	1a390 <generate_uid+0x44>
   1a380:	cmp	r1, #90	; 0x5a
   1a384:	bne	1a3b0 <generate_uid+0x64>
   1a388:	strb	r7, [r4, r0]
   1a38c:	b	1a3b8 <generate_uid+0x6c>
   1a390:	strb	r5, [r4, r0]
   1a394:	sub	r0, r0, #1
   1a398:	cmp	r0, #3
   1a39c:	bhi	1a374 <generate_uid+0x28>
   1a3a0:	ldrb	r1, [r4, #3]
   1a3a4:	cmp	r1, #90	; 0x5a
   1a3a8:	beq	1a3dc <generate_uid+0x90>
   1a3ac:	ldrb	r1, [r4, r0]
   1a3b0:	add	r1, r1, #1
   1a3b4:	strb	r1, [r4, r0]
   1a3b8:	ldrb	r0, [r6]
   1a3bc:	cmp	r0, #1
   1a3c0:	bne	1a3e8 <generate_uid+0x9c>
   1a3c4:	mov	r0, r4
   1a3c8:	bl	e4f8 <find_id@plt>
   1a3cc:	cmp	r0, #0
   1a3d0:	mov	r0, #8
   1a3d4:	bne	1a374 <generate_uid+0x28>
   1a3d8:	b	1a3e8 <generate_uid+0x9c>
   1a3dc:	strb	r5, [r4, r0]
   1a3e0:	strb	r8, [r6]
   1a3e4:	b	1a3c4 <generate_uid+0x78>
   1a3e8:	ldr	r0, [pc, #12]	; 1a3fc <generate_uid+0xb0>
   1a3ec:	add	r0, pc, r0
   1a3f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a3f4:	.word	0x0004aedc
   1a3f8:	.word	0x0004aedc
   1a3fc:	.word	0x0004ae4c

0001a400 <close_connection>:
   1a400:	push	{r4, r5, fp, lr}
   1a404:	add	fp, sp, #8
   1a408:	cmp	r0, #0
   1a40c:	beq	1a5f8 <close_connection+0x1f8>
   1a410:	mov	r4, r0
   1a414:	ldrb	r0, [r0, #65]	; 0x41
   1a418:	tst	r0, #32
   1a41c:	popeq	{r4, r5, fp, pc}
   1a420:	ldrh	r0, [r4, #80]	; 0x50
   1a424:	cmp	r0, #64	; 0x40
   1a428:	beq	1a4ec <close_connection+0xec>
   1a42c:	cmp	r0, #32
   1a430:	bne	1a55c <close_connection+0x15c>
   1a434:	ldr	r5, [pc, #448]	; 1a5fc <close_connection+0x1fc>
   1a438:	ldr	r5, [pc, r5]
   1a43c:	ldr	r0, [r5, #4]
   1a440:	add	ip, r5, #32
   1a444:	ldm	ip, {r1, r2, ip}
   1a448:	add	r0, r0, #1
   1a44c:	str	r0, [r5, #4]
   1a450:	ldr	r0, [r4, #432]	; 0x1b0
   1a454:	ldrh	r3, [r0, #124]	; 0x7c
   1a458:	adds	r1, r1, r3
   1a45c:	str	r1, [r5, #32]
   1a460:	adc	r1, r2, #0
   1a464:	str	r1, [r5, #36]	; 0x24
   1a468:	ldrh	r0, [r0, #126]	; 0x7e
   1a46c:	adds	r0, ip, r0
   1a470:	str	r0, [r5, #40]	; 0x28
   1a474:	ldr	r0, [r5, #44]	; 0x2c
   1a478:	adc	r0, r0, #0
   1a47c:	str	r0, [r5, #44]	; 0x2c
   1a480:	bl	d07c <rb_current_time@plt>
   1a484:	ldr	r1, [r4, #432]	; 0x1b0
   1a488:	ldr	r1, [r1, #48]	; 0x30
   1a48c:	sub	r0, r0, r1
   1a490:	ldrd	r2, [r5, #56]	; 0x38
   1a494:	adds	r2, r2, r0
   1a498:	adc	r3, r3, r0, asr #31
   1a49c:	strd	r2, [r5, #56]	; 0x38
   1a4a0:	add	r0, r4, #88	; 0x58
   1a4a4:	bl	e0d8 <find_server_conf@plt>
   1a4a8:	cmp	r0, #0
   1a4ac:	beq	1a570 <close_connection+0x170>
   1a4b0:	mov	r5, r0
   1a4b4:	mov	r0, #0
   1a4b8:	bl	d49c <time@plt>
   1a4bc:	str	r0, [r5, #296]	; 0x128
   1a4c0:	ldr	r1, [r4, #432]	; 0x1b0
   1a4c4:	ldr	r1, [r1, #44]	; 0x2c
   1a4c8:	sub	r2, r0, r1
   1a4cc:	mov	r1, #60	; 0x3c
   1a4d0:	cmp	r2, #3600	; 0xe10
   1a4d4:	bgt	1a4e0 <close_connection+0xe0>
   1a4d8:	ldr	r1, [r5, #576]	; 0x240
   1a4dc:	ldr	r1, [r1, #28]
   1a4e0:	add	r0, r1, r0
   1a4e4:	str	r0, [r5, #296]	; 0x128
   1a4e8:	b	1a570 <close_connection+0x170>
   1a4ec:	ldr	r5, [pc, #268]	; 1a600 <close_connection+0x200>
   1a4f0:	ldr	r5, [pc, r5]
   1a4f4:	ldr	r0, [r5]
   1a4f8:	add	ip, r5, #16
   1a4fc:	ldm	ip, {r1, r2, ip}
   1a500:	add	r0, r0, #1
   1a504:	str	r0, [r5]
   1a508:	ldr	r0, [r4, #432]	; 0x1b0
   1a50c:	ldrh	r3, [r0, #124]	; 0x7c
   1a510:	adds	r1, r1, r3
   1a514:	str	r1, [r5, #16]
   1a518:	adc	r1, r2, #0
   1a51c:	str	r1, [r5, #20]
   1a520:	ldrh	r0, [r0, #126]	; 0x7e
   1a524:	adds	r0, ip, r0
   1a528:	str	r0, [r5, #24]
   1a52c:	ldr	r0, [r5, #28]
   1a530:	adc	r0, r0, #0
   1a534:	str	r0, [r5, #28]
   1a538:	bl	d07c <rb_current_time@plt>
   1a53c:	ldr	r1, [r4, #432]	; 0x1b0
   1a540:	ldr	r1, [r1, #48]	; 0x30
   1a544:	sub	r0, r0, r1
   1a548:	ldrd	r2, [r5, #48]	; 0x30
   1a54c:	adds	r2, r2, r0
   1a550:	adc	r3, r3, r0, asr #31
   1a554:	strd	r2, [r5, #48]	; 0x30
   1a558:	b	1a570 <close_connection+0x170>
   1a55c:	ldr	r0, [pc, #160]	; 1a604 <close_connection+0x204>
   1a560:	ldr	r0, [pc, r0]
   1a564:	ldr	r1, [r0, #8]
   1a568:	add	r1, r1, #1
   1a56c:	str	r1, [r0, #8]
   1a570:	add	r5, r4, #64	; 0x40
   1a574:	mov	r0, r4
   1a578:	bl	d298 <client_release_connids@plt>
   1a57c:	ldr	r0, [r4, #432]	; 0x1b0
   1a580:	ldr	r0, [r0, #300]	; 0x12c
   1a584:	cmp	r0, #0
   1a588:	beq	1a5b8 <close_connection+0x1b8>
   1a58c:	ldrb	r0, [r5, #1]
   1a590:	tst	r0, #64	; 0x40
   1a594:	bne	1a5a0 <close_connection+0x1a0>
   1a598:	mov	r0, r4
   1a59c:	bl	e7f8 <send_queued@plt>
   1a5a0:	ldr	r0, [r4, #432]	; 0x1b0
   1a5a4:	ldr	r0, [r0, #300]	; 0x12c
   1a5a8:	bl	db50 <rb_close@plt>
   1a5ac:	ldr	r0, [r4, #432]	; 0x1b0
   1a5b0:	mov	r1, #0
   1a5b4:	str	r1, [r0, #300]	; 0x12c
   1a5b8:	ldr	r0, [r4, #432]	; 0x1b0
   1a5bc:	add	r0, r0, #52	; 0x34
   1a5c0:	bl	e00c <rb_linebuf_donebuf@plt>
   1a5c4:	ldr	r0, [r4, #432]	; 0x1b0
   1a5c8:	add	r0, r0, #80	; 0x50
   1a5cc:	bl	e00c <rb_linebuf_donebuf@plt>
   1a5d0:	mov	r0, r4
   1a5d4:	bl	d280 <detach_conf@plt>
   1a5d8:	mov	r0, r4
   1a5dc:	bl	ddcc <detach_server_conf@plt>
   1a5e0:	mov	r0, #0
   1a5e4:	str	r0, [r4, #36]	; 0x24
   1a5e8:	ldr	r0, [r5]
   1a5ec:	mov	r1, #2
   1a5f0:	bfi	r0, r1, #13, #2
   1a5f4:	str	r0, [r5]
   1a5f8:	pop	{r4, r5, fp, pc}
   1a5fc:	.word	0x00040584
   1a600:	.word	0x000404cc
   1a604:	.word	0x0004045c

0001a608 <error_exit_client>:
   1a608:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a60c:	add	fp, sp, #24
   1a610:	sub	sp, sp, #264	; 0x108
   1a614:	mov	r6, r1
   1a618:	mov	r4, r0
   1a61c:	ldr	r0, [r0, #432]	; 0x1b0
   1a620:	ldr	r0, [r0, #300]	; 0x12c
   1a624:	bl	e4bc <rb_get_sockerr@plt>
   1a628:	mov	r5, r0
   1a62c:	ldr	r0, [r4, #64]	; 0x40
   1a630:	orr	r0, r0, #16384	; 0x4000
   1a634:	str	r0, [r4, #64]	; 0x40
   1a638:	ldrh	r0, [r4, #80]	; 0x50
   1a63c:	cmp	r0, #32
   1a640:	cmpne	r0, #2
   1a644:	bne	1a674 <error_exit_client+0x6c>
   1a648:	mov	r0, r4
   1a64c:	bl	dea4 <is_remote_connect@plt>
   1a650:	cmp	r6, #0
   1a654:	beq	1a680 <error_exit_client+0x78>
   1a658:	cmp	r0, #0
   1a65c:	beq	1a69c <error_exit_client+0x94>
   1a660:	ldrh	r0, [r4, #80]	; 0x50
   1a664:	subs	r0, r0, #32
   1a668:	movwne	r0, #1
   1a66c:	lsl	r6, r0, #8
   1a670:	b	1a6a0 <error_exit_client+0x98>
   1a674:	cmp	r6, #0
   1a678:	bne	1a6f4 <error_exit_client+0xec>
   1a67c:	b	1a750 <error_exit_client+0x148>
   1a680:	cmp	r0, #0
   1a684:	beq	1a718 <error_exit_client+0x110>
   1a688:	ldrh	r0, [r4, #80]	; 0x50
   1a68c:	subs	r0, r0, #32
   1a690:	movwne	r0, #1
   1a694:	lsl	r1, r0, #8
   1a698:	b	1a71c <error_exit_client+0x114>
   1a69c:	mov	r6, #0
   1a6a0:	mov	r0, r5
   1a6a4:	bl	dac0 <strerror@plt>
   1a6a8:	str	r0, [sp]
   1a6ac:	add	r3, r4, #88	; 0x58
   1a6b0:	ldr	r7, [pc, #208]	; 1a788 <error_exit_client+0x180>
   1a6b4:	add	r7, pc, r7
   1a6b8:	mov	r0, #256	; 0x100
   1a6bc:	mov	r1, r6
   1a6c0:	mov	r2, r7
   1a6c4:	bl	d634 <sendto_realops_snomask@plt>
   1a6c8:	mov	r0, r4
   1a6cc:	mov	r1, #1
   1a6d0:	bl	e168 <log_client_name@plt>
   1a6d4:	mov	r6, r0
   1a6d8:	mov	r0, r5
   1a6dc:	bl	dac0 <strerror@plt>
   1a6e0:	mov	r3, r0
   1a6e4:	mov	r0, #5
   1a6e8:	mov	r1, r7
   1a6ec:	mov	r2, r6
   1a6f0:	bl	e0b4 <ilog@plt>
   1a6f4:	mov	r0, r5
   1a6f8:	bl	dac0 <strerror@plt>
   1a6fc:	mov	r3, r0
   1a700:	add	r0, sp, #9
   1a704:	ldr	r2, [pc, #128]	; 1a78c <error_exit_client+0x184>
   1a708:	add	r2, pc, r2
   1a70c:	mov	r1, #255	; 0xff
   1a710:	bl	de74 <snprintf@plt>
   1a714:	b	1a764 <error_exit_client+0x15c>
   1a718:	mov	r1, #0
   1a71c:	add	r3, r4, #88	; 0x58
   1a720:	ldr	r5, [pc, #92]	; 1a784 <error_exit_client+0x17c>
   1a724:	add	r5, pc, r5
   1a728:	mov	r0, #256	; 0x100
   1a72c:	mov	r2, r5
   1a730:	bl	d634 <sendto_realops_snomask@plt>
   1a734:	mov	r0, r4
   1a738:	mov	r1, #1
   1a73c:	bl	e168 <log_client_name@plt>
   1a740:	mov	r2, r0
   1a744:	mov	r0, #5
   1a748:	mov	r1, r5
   1a74c:	bl	e0b4 <ilog@plt>
   1a750:	add	r0, sp, #9
   1a754:	ldr	r1, [pc, #52]	; 1a790 <error_exit_client+0x188>
   1a758:	add	r1, pc, r1
   1a75c:	mov	r2, #255	; 0xff
   1a760:	bl	e510 <rb_strlcpy@plt>
   1a764:	ldr	r2, [pc, #40]	; 1a794 <error_exit_client+0x18c>
   1a768:	ldr	r2, [pc, r2]
   1a76c:	add	r3, sp, #9
   1a770:	mov	r0, r4
   1a774:	mov	r1, r4
   1a778:	bl	e534 <exit_client@plt>
   1a77c:	sub	sp, fp, #24
   1a780:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a784:	.word	0x00026f84
   1a788:	.word	0x00027014
   1a78c:	.word	0x00026ffc
   1a790:	.word	0x00026f8a
   1a794:	.word	0x000403f0

0001a798 <rb_dlinkFindDelete>:
   1a798:	push	{fp, lr}
   1a79c:	mov	fp, sp
   1a7a0:	cmp	r1, #0
   1a7a4:	beq	1a818 <rb_dlinkFindDelete+0x80>
   1a7a8:	mov	ip, r0
   1a7ac:	cmp	r0, #0
   1a7b0:	beq	1a838 <rb_dlinkFindDelete+0xa0>
   1a7b4:	ldr	r3, [r1]
   1a7b8:	mov	r0, r3
   1a7bc:	cmp	r3, #0
   1a7c0:	beq	1a814 <rb_dlinkFindDelete+0x7c>
   1a7c4:	ldr	r2, [r0]
   1a7c8:	ldr	r3, [r0, #8]
   1a7cc:	cmp	r2, ip
   1a7d0:	bne	1a7b8 <rb_dlinkFindDelete+0x20>
   1a7d4:	add	r2, r3, #4
   1a7d8:	cmp	r3, #0
   1a7dc:	addeq	r2, r1, #4
   1a7e0:	ldr	r3, [r0, #4]
   1a7e4:	str	r3, [r2]
   1a7e8:	ldmib	r0, {r2, ip}
   1a7ec:	cmp	r2, #0
   1a7f0:	mov	r3, r1
   1a7f4:	addne	r3, r2, #8
   1a7f8:	str	ip, [r3]
   1a7fc:	mov	r2, #0
   1a800:	str	r2, [r0, #4]
   1a804:	str	r2, [r0, #8]
   1a808:	ldr	r2, [r1, #8]
   1a80c:	sub	r2, r2, #1
   1a810:	str	r2, [r1, #8]
   1a814:	pop	{fp, pc}
   1a818:	ldr	r0, [pc, #56]	; 1a858 <rb_dlinkFindDelete+0xc0>
   1a81c:	add	r0, pc, r0
   1a820:	ldr	r1, [pc, #52]	; 1a85c <rb_dlinkFindDelete+0xc4>
   1a824:	add	r1, pc, r1
   1a828:	ldr	r3, [pc, #48]	; 1a860 <rb_dlinkFindDelete+0xc8>
   1a82c:	add	r3, pc, r3
   1a830:	movw	r2, #258	; 0x102
   1a834:	bl	e7e0 <__assert_fail@plt>
   1a838:	ldr	r0, [pc, #36]	; 1a864 <rb_dlinkFindDelete+0xcc>
   1a83c:	add	r0, pc, r0
   1a840:	ldr	r1, [pc, #32]	; 1a868 <rb_dlinkFindDelete+0xd0>
   1a844:	add	r1, pc, r1
   1a848:	ldr	r3, [pc, #28]	; 1a86c <rb_dlinkFindDelete+0xd4>
   1a84c:	add	r3, pc, r3
   1a850:	movw	r2, #259	; 0x103
   1a854:	bl	e7e0 <__assert_fail@plt>
   1a858:	.word	0x0002b979
   1a85c:	.word	0x000260f2
   1a860:	.word	0x0002672a
   1a864:	.word	0x00026135
   1a868:	.word	0x000260d2
   1a86c:	.word	0x0002670a

0001a870 <check_pings_list>:
   1a870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a874:	add	fp, sp, #28
   1a878:	sub	sp, sp, #36	; 0x24
   1a87c:	ldr	r9, [r0]
   1a880:	cmp	r9, #0
   1a884:	beq	1a9d8 <check_pings_list+0x168>
   1a888:	movw	sl, #8194	; 0x2002
   1a88c:	ldr	r0, [pc, #332]	; 1a9e0 <check_pings_list+0x170>
   1a890:	ldr	r0, [pc, r0]
   1a894:	add	r5, r0, #88	; 0x58
   1a898:	add	r7, sp, #4
   1a89c:	b	1a8e4 <check_pings_list+0x74>
   1a8a0:	bl	d07c <rb_current_time@plt>
   1a8a4:	ldr	r1, [r6, #432]	; 0x1b0
   1a8a8:	ldr	r1, [r1, #44]	; 0x2c
   1a8ac:	sub	r3, r0, r1
   1a8b0:	mov	r0, r7
   1a8b4:	mov	r1, #32
   1a8b8:	ldr	r2, [pc, #296]	; 1a9e8 <check_pings_list+0x178>
   1a8bc:	add	r2, pc, r2
   1a8c0:	bl	de74 <snprintf@plt>
   1a8c4:	mov	r0, r6
   1a8c8:	mov	r1, r6
   1a8cc:	ldr	r2, [pc, #280]	; 1a9ec <check_pings_list+0x17c>
   1a8d0:	ldr	r2, [pc, r2]
   1a8d4:	mov	r3, r7
   1a8d8:	bl	e534 <exit_client@plt>
   1a8dc:	cmp	r9, #0
   1a8e0:	beq	1a9d8 <check_pings_list+0x168>
   1a8e4:	ldr	r6, [r9]
   1a8e8:	ldr	r9, [r9, #8]
   1a8ec:	mov	r4, r6
   1a8f0:	ldr	r0, [r4, #64]!	; 0x40
   1a8f4:	and	r0, r0, sl
   1a8f8:	teq	r0, #8192	; 0x2000
   1a8fc:	bne	1a8dc <check_pings_list+0x6c>
   1a900:	mov	r0, r6
   1a904:	bl	d580 <get_client_ping@plt>
   1a908:	mov	r8, r0
   1a90c:	bl	d07c <rb_current_time@plt>
   1a910:	ldr	r1, [r6, #432]	; 0x1b0
   1a914:	ldr	r1, [r1, #44]	; 0x2c
   1a918:	sub	r0, r0, r1
   1a91c:	cmp	r8, r0
   1a920:	bge	1a8dc <check_pings_list+0x6c>
   1a924:	bl	d07c <rb_current_time@plt>
   1a928:	ldr	r1, [r6, #432]	; 0x1b0
   1a92c:	ldr	r1, [r1, #44]	; 0x2c
   1a930:	sub	r0, r0, r1
   1a934:	cmp	r0, r8, lsl #1
   1a938:	blt	1a948 <check_pings_list+0xd8>
   1a93c:	ldrb	r0, [r4]
   1a940:	tst	r0, #1
   1a944:	bne	1a990 <check_pings_list+0x120>
   1a948:	ldr	r0, [r4]
   1a94c:	tst	r0, #1
   1a950:	bne	1a8dc <check_pings_list+0x6c>
   1a954:	ldr	r1, [r4, #4]
   1a958:	orr	r0, r0, #1
   1a95c:	strd	r0, [r4]
   1a960:	bl	d07c <rb_current_time@plt>
   1a964:	sub	r0, r0, r8
   1a968:	ldr	r1, [r6, #432]	; 0x1b0
   1a96c:	str	r0, [r1, #44]	; 0x2c
   1a970:	mov	r0, r6
   1a974:	ldr	r1, [pc, #116]	; 1a9f0 <check_pings_list+0x180>
   1a978:	add	r1, pc, r1
   1a97c:	mov	r2, r5
   1a980:	bl	d1e4 <sendto_one@plt>
   1a984:	cmp	r9, #0
   1a988:	bne	1a8e4 <check_pings_list+0x74>
   1a98c:	b	1a9d8 <check_pings_list+0x168>
   1a990:	ldrh	r0, [r6, #80]	; 0x50
   1a994:	cmp	r0, #32
   1a998:	bne	1a8a0 <check_pings_list+0x30>
   1a99c:	add	r3, r6, #88	; 0x58
   1a9a0:	mov	r0, #256	; 0x100
   1a9a4:	mov	r1, #0
   1a9a8:	ldr	r4, [pc, #52]	; 1a9e4 <check_pings_list+0x174>
   1a9ac:	add	r4, pc, r4
   1a9b0:	mov	r2, r4
   1a9b4:	bl	d634 <sendto_realops_snomask@plt>
   1a9b8:	mov	r0, r6
   1a9bc:	mov	r1, #0
   1a9c0:	bl	e168 <log_client_name@plt>
   1a9c4:	mov	r2, r0
   1a9c8:	mov	r0, #5
   1a9cc:	mov	r1, r4
   1a9d0:	bl	e0b4 <ilog@plt>
   1a9d4:	b	1a8a0 <check_pings_list+0x30>
   1a9d8:	sub	sp, fp, #28
   1a9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9e0:	.word	0x000402c8
   1a9e4:	.word	0x00026d67
   1a9e8:	.word	0x00026e79
   1a9ec:	.word	0x00040288
   1a9f0:	.word	0x00026dd6

0001a9f4 <check_unknowns_list>:
   1a9f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a9f8:	add	fp, sp, #28
   1a9fc:	sub	sp, sp, #4
   1aa00:	ldr	r0, [pc, #272]	; 1ab18 <check_unknowns_list+0x124>
   1aa04:	ldr	r0, [pc, r0]
   1aa08:	ldr	r4, [r0]
   1aa0c:	cmp	r4, #0
   1aa10:	beq	1ab10 <check_unknowns_list+0x11c>
   1aa14:	mov	r5, #1
   1aa18:	mov	r6, #-2147483645	; 0x80000003
   1aa1c:	ldr	sl, [pc, #248]	; 1ab1c <check_unknowns_list+0x128>
   1aa20:	add	sl, pc, sl
   1aa24:	ldr	r8, [pc, #244]	; 1ab20 <check_unknowns_list+0x12c>
   1aa28:	ldr	r8, [pc, r8]
   1aa2c:	b	1aa54 <check_unknowns_list+0x60>
   1aa30:	mov	r0, r7
   1aa34:	mov	r1, r7
   1aa38:	ldr	r2, [pc, #228]	; 1ab24 <check_unknowns_list+0x130>
   1aa3c:	ldr	r2, [pc, r2]
   1aa40:	ldr	r3, [pc, #224]	; 1ab28 <check_unknowns_list+0x134>
   1aa44:	add	r3, pc, r3
   1aa48:	bl	e534 <exit_client@plt>
   1aa4c:	cmp	r4, #0
   1aa50:	beq	1ab10 <check_unknowns_list+0x11c>
   1aa54:	ldr	r7, [r4]
   1aa58:	ldr	r4, [r4, #8]
   1aa5c:	ldrb	r0, [r7, #64]	; 0x40
   1aa60:	tst	r0, #34	; 0x22
   1aa64:	bne	1aa4c <check_unknowns_list+0x58>
   1aa68:	ldr	r0, [r7, #436]	; 0x1b4
   1aa6c:	cmp	r0, #0
   1aa70:	beq	1aa80 <check_unknowns_list+0x8c>
   1aa74:	ldr	r0, [r0, #108]	; 0x6c
   1aa78:	cmp	r0, #0
   1aa7c:	bne	1aa4c <check_unknowns_list+0x58>
   1aa80:	ldrh	r0, [r7, #80]	; 0x50
   1aa84:	sub	r0, r0, #1
   1aa88:	mov	r9, #30
   1aa8c:	cmp	r0, #31
   1aa90:	bhi	1aa9c <check_unknowns_list+0xa8>
   1aa94:	tst	r6, r5, lsl r0
   1aa98:	ldrne	r9, [r8, #272]	; 0x110
   1aa9c:	bl	d07c <rb_current_time@plt>
   1aaa0:	ldr	r1, [r7, #432]	; 0x1b0
   1aaa4:	ldr	r1, [r1, #48]	; 0x30
   1aaa8:	sub	r0, r0, r1
   1aaac:	cmp	r0, r9
   1aab0:	ble	1aa4c <check_unknowns_list+0x58>
   1aab4:	ldrh	r0, [r7, #80]	; 0x50
   1aab8:	sub	r0, r0, #1
   1aabc:	cmp	r0, #31
   1aac0:	bhi	1aa30 <check_unknowns_list+0x3c>
   1aac4:	tst	r6, r5, lsl r0
   1aac8:	beq	1aa30 <check_unknowns_list+0x3c>
   1aacc:	mov	r0, r7
   1aad0:	bl	dea4 <is_remote_connect@plt>
   1aad4:	add	r3, r7, #88	; 0x58
   1aad8:	cmp	r0, #0
   1aadc:	movwne	r0, #1
   1aae0:	lsl	r1, r0, #8
   1aae4:	mov	r0, #256	; 0x100
   1aae8:	mov	r2, sl
   1aaec:	bl	d634 <sendto_realops_snomask@plt>
   1aaf0:	mov	r0, r7
   1aaf4:	mov	r1, #0
   1aaf8:	bl	e168 <log_client_name@plt>
   1aafc:	mov	r2, r0
   1ab00:	mov	r0, #5
   1ab04:	mov	r1, sl
   1ab08:	bl	e0b4 <ilog@plt>
   1ab0c:	b	1aa30 <check_unknowns_list+0x3c>
   1ab10:	sub	sp, fp, #28
   1ab14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab18:	.word	0x0003fe70
   1ab1c:	.word	0x00026cf3
   1ab20:	.word	0x00040154
   1ab24:	.word	0x0004011c
   1ab28:	.word	0x00026d13

0001ab2c <release_client_state>:
   1ab2c:	push	{r4, sl, fp, lr}
   1ab30:	add	fp, sp, #8
   1ab34:	mov	r4, r0
   1ab38:	ldr	r0, [r0, #24]
   1ab3c:	cmp	r0, #0
   1ab40:	movne	r1, r4
   1ab44:	blne	ddf0 <free_user@plt>
   1ab48:	ldr	r0, [r4, #28]
   1ab4c:	cmp	r0, #0
   1ab50:	popeq	{r4, sl, fp, pc}
   1ab54:	ldr	r0, [r0]
   1ab58:	cmp	r0, #0
   1ab5c:	movne	r1, r4
   1ab60:	blne	ddf0 <free_user@plt>
   1ab64:	ldr	r0, [r4, #28]
   1ab68:	ldr	r0, [r0, #64]	; 0x40
   1ab6c:	cmp	r0, #0
   1ab70:	blne	184a8 <rb_free>
   1ab74:	ldr	r0, [r4, #28]
   1ab78:	pop	{r4, sl, fp, lr}
   1ab7c:	b	184a8 <rb_free>

0001ab80 <free_client>:
   1ab80:	push	{r4, sl, fp, lr}
   1ab84:	add	fp, sp, #8
   1ab88:	mov	r4, r0
   1ab8c:	bl	1abb8 <free_local_client>
   1ab90:	mov	r0, r4
   1ab94:	bl	de50 <free_pre_client@plt>
   1ab98:	ldr	r0, [r4, #444]	; 0x1bc
   1ab9c:	bl	184a8 <rb_free>
   1aba0:	ldr	r0, [pc, #12]	; 1abb4 <free_client+0x34>
   1aba4:	ldr	r0, [pc, r0]
   1aba8:	mov	r1, r4
   1abac:	pop	{r4, sl, fp, lr}
   1abb0:	b	e708 <rb_bh_free@plt>
   1abb4:	.word	0x0004a550

0001abb8 <free_local_client>:
   1abb8:	push	{r4, r5, fp, lr}
   1abbc:	add	fp, sp, #8
   1abc0:	mov	r4, r0
   1abc4:	ldr	r0, [r0, #432]	; 0x1b0
   1abc8:	cmp	r0, #0
   1abcc:	popeq	{r4, r5, fp, pc}
   1abd0:	ldr	r0, [r0, #128]	; 0x80
   1abd4:	cmp	r0, #0
   1abd8:	beq	1ac08 <free_local_client+0x50>
   1abdc:	ldr	r1, [r0, #12]
   1abe0:	subs	r1, r1, #1
   1abe4:	str	r1, [r0, #12]
   1abe8:	bne	1abfc <free_local_client+0x44>
   1abec:	ldr	r1, [r0, #16]
   1abf0:	cmp	r1, #0
   1abf4:	bne	1abfc <free_local_client+0x44>
   1abf8:	bl	d838 <free_listener@plt>
   1abfc:	ldr	r0, [r4, #432]	; 0x1b0
   1ac00:	mov	r1, #0
   1ac04:	str	r1, [r0, #128]	; 0x80
   1ac08:	mov	r0, r4
   1ac0c:	bl	d298 <client_release_connids@plt>
   1ac10:	ldr	r0, [r4, #432]	; 0x1b0
   1ac14:	ldr	r0, [r0, #300]	; 0x12c
   1ac18:	cmp	r0, #0
   1ac1c:	beq	1ac24 <free_local_client+0x6c>
   1ac20:	bl	db50 <rb_close@plt>
   1ac24:	ldr	r0, [r4, #432]	; 0x1b0
   1ac28:	ldr	r5, [r0, #276]	; 0x114
   1ac2c:	cmp	r5, #0
   1ac30:	beq	1ac58 <free_local_client+0xa0>
   1ac34:	mov	r0, r5
   1ac38:	bl	dc94 <strlen@plt>
   1ac3c:	mov	r2, r0
   1ac40:	mov	r0, r5
   1ac44:	mov	r1, #0
   1ac48:	bl	df28 <memset@plt>
   1ac4c:	ldr	r0, [r4, #432]	; 0x1b0
   1ac50:	ldr	r0, [r0, #276]	; 0x114
   1ac54:	bl	184a8 <rb_free>
   1ac58:	ldr	r0, [r4, #432]	; 0x1b0
   1ac5c:	ldr	r0, [r0, #280]	; 0x118
   1ac60:	bl	184a8 <rb_free>
   1ac64:	ldr	r0, [r4, #432]	; 0x1b0
   1ac68:	ldr	r0, [r0, #284]	; 0x11c
   1ac6c:	bl	184a8 <rb_free>
   1ac70:	ldr	r0, [r4, #432]	; 0x1b0
   1ac74:	ldr	r0, [r0, #288]	; 0x120
   1ac78:	bl	184a8 <rb_free>
   1ac7c:	ldr	r0, [r4, #432]	; 0x1b0
   1ac80:	ldr	r0, [r0, #432]	; 0x1b0
   1ac84:	bl	184a8 <rb_free>
   1ac88:	ldr	r0, [r4, #432]	; 0x1b0
   1ac8c:	ldrb	r1, [r0, #452]	; 0x1c4
   1ac90:	tst	r1, #1
   1ac94:	beq	1aca0 <free_local_client+0xe8>
   1ac98:	ldr	r0, [r0, #436]	; 0x1b4
   1ac9c:	bl	d208 <ssld_decrement_clicount@plt>
   1aca0:	ldr	r0, [r4, #432]	; 0x1b0
   1aca4:	ldr	r0, [r0, #292]	; 0x124
   1aca8:	bl	184a8 <rb_free>
   1acac:	ldr	r0, [pc, #92]	; 1ad10 <free_local_client+0x158>
   1acb0:	ldr	r0, [pc, r0]
   1acb4:	ldr	r1, [r0]
   1acb8:	ldr	r0, [r4, #432]	; 0x1b0
   1acbc:	ldr	r2, [r0, #296]	; 0x128
   1acc0:	and	r2, r1, r2
   1acc4:	cmp	r2, r1
   1acc8:	bne	1acd4 <free_local_client+0x11c>
   1accc:	ldr	r0, [r0, #440]	; 0x1b8
   1acd0:	bl	d208 <ssld_decrement_clicount@plt>
   1acd4:	ldr	r0, [r4, #432]	; 0x1b0
   1acd8:	ldr	r0, [r0, #456]	; 0x1c8
   1acdc:	bl	184a8 <rb_free>
   1ace0:	ldr	r0, [r4, #432]	; 0x1b0
   1ace4:	ldr	r0, [r0, #444]	; 0x1bc
   1ace8:	cmp	r0, #0
   1acec:	beq	1acf4 <free_local_client+0x13c>
   1acf0:	bl	d454 <wsockd_decrement_clicount@plt>
   1acf4:	ldr	r1, [r4, #432]	; 0x1b0
   1acf8:	ldr	r0, [pc, #20]	; 1ad14 <free_local_client+0x15c>
   1acfc:	ldr	r0, [pc, r0]
   1ad00:	bl	e708 <rb_bh_free@plt>
   1ad04:	mov	r0, #0
   1ad08:	str	r0, [r4, #432]	; 0x1b0
   1ad0c:	pop	{r4, r5, fp, pc}
   1ad10:	.word	0x0003fc34
   1ad14:	.word	0x0004a3fc

0001ad18 <rb_dlinkFind>:
   1ad18:	push	{fp, lr}
   1ad1c:	mov	fp, sp
   1ad20:	cmp	r0, #0
   1ad24:	beq	1ad68 <rb_dlinkFind+0x50>
   1ad28:	mov	r1, r0
   1ad2c:	ldr	r0, [pc, #84]	; 1ad88 <rb_dlinkFind+0x70>
   1ad30:	ldr	r0, [pc, r0]
   1ad34:	ldr	r2, [r0]
   1ad38:	mov	r0, #0
   1ad3c:	cmp	r2, #0
   1ad40:	beq	1ad5c <rb_dlinkFind+0x44>
   1ad44:	ldr	r3, [r2]
   1ad48:	cmp	r3, r1
   1ad4c:	beq	1ad60 <rb_dlinkFind+0x48>
   1ad50:	ldr	r2, [r2, #8]
   1ad54:	cmp	r2, #0
   1ad58:	bne	1ad44 <rb_dlinkFind+0x2c>
   1ad5c:	pop	{fp, pc}
   1ad60:	mov	r0, r2
   1ad64:	pop	{fp, pc}
   1ad68:	ldr	r0, [pc, #28]	; 1ad8c <rb_dlinkFind+0x74>
   1ad6c:	add	r0, pc, r0
   1ad70:	ldr	r1, [pc, #24]	; 1ad90 <rb_dlinkFind+0x78>
   1ad74:	add	r1, pc, r1
   1ad78:	ldr	r3, [pc, #20]	; 1ad94 <rb_dlinkFind+0x7c>
   1ad7c:	add	r3, pc, r3
   1ad80:	movw	r2, #311	; 0x137
   1ad84:	bl	e7e0 <__assert_fail@plt>
   1ad88:	.word	0x0003fd54
   1ad8c:	.word	0x00025c05
   1ad90:	.word	0x00025ba2
   1ad94:	.word	0x00026abf

0001ad98 <exit_generic_client>:
   1ad98:	push	{r4, r5, r6, sl, fp, lr}
   1ad9c:	add	fp, sp, #16
   1ada0:	sub	sp, sp, #16
   1ada4:	mov	r6, r1
   1ada8:	mov	r4, r0
   1adac:	ldrb	r0, [r0, #57]	; 0x39
   1adb0:	tst	r0, #16
   1adb4:	beq	1adc8 <exit_generic_client+0x30>
   1adb8:	ldr	r1, [pc, #208]	; 1ae90 <exit_generic_client+0xf8>
   1adbc:	ldr	r1, [pc, r1]
   1adc0:	mov	r0, r4
   1adc4:	bl	182c8 <rb_dlinkFindDestroy>
   1adc8:	add	r0, r4, #163	; 0xa3
   1adcc:	add	r1, r4, #152	; 0x98
   1add0:	add	r5, r4, #88	; 0x58
   1add4:	str	r5, [sp]
   1add8:	str	r1, [sp, #4]
   1addc:	str	r0, [sp, #8]
   1ade0:	str	r6, [sp, #12]
   1ade4:	ldr	r3, [pc, #168]	; 1ae94 <exit_generic_client+0xfc>
   1ade8:	add	r3, pc, r3
   1adec:	mov	r0, r4
   1adf0:	mov	r1, #0
   1adf4:	mov	r2, #0
   1adf8:	bl	de2c <sendto_common_channels_local@plt>
   1adfc:	mov	r0, r4
   1ae00:	bl	d460 <remove_user_from_channels@plt>
   1ae04:	ldr	r0, [r4, #24]
   1ae08:	ldr	r6, [r0, #12]
   1ae0c:	cmp	r6, #0
   1ae10:	beq	1ae2c <exit_generic_client+0x94>
   1ae14:	ldr	r0, [r6]
   1ae18:	ldr	r6, [r6, #8]
   1ae1c:	mov	r1, r4
   1ae20:	bl	d46c <del_invite@plt>
   1ae24:	cmp	r6, #0
   1ae28:	bne	1ae14 <exit_generic_client+0x7c>
   1ae2c:	mov	r0, r4
   1ae30:	bl	dcc4 <del_all_accepts@plt>
   1ae34:	mov	r0, r4
   1ae38:	mov	r1, #0
   1ae3c:	bl	e3cc <whowas_add_history@plt>
   1ae40:	mov	r0, r4
   1ae44:	bl	e4e0 <whowas_off_history@plt>
   1ae48:	mov	r0, r4
   1ae4c:	bl	e150 <monitor_signoff@plt>
   1ae50:	mov	r0, r4
   1ae54:	ldrb	r1, [r0, #396]!	; 0x18c
   1ae58:	cmp	r1, #0
   1ae5c:	beq	1ae68 <exit_generic_client+0xd0>
   1ae60:	mov	r1, r4
   1ae64:	bl	da90 <del_from_id_hash@plt>
   1ae68:	add	r0, r4, #227	; 0xe3
   1ae6c:	mov	r1, r4
   1ae70:	bl	d43c <del_from_hostname_hash@plt>
   1ae74:	mov	r0, r5
   1ae78:	mov	r1, r4
   1ae7c:	bl	db14 <del_from_client_hash@plt>
   1ae80:	mov	r0, r4
   1ae84:	sub	sp, fp, #16
   1ae88:	pop	{r4, r5, r6, sl, fp, lr}
   1ae8c:	b	1ae98 <remove_client_from_list>
   1ae90:	.word	0x0003fce4
   1ae94:	.word	0x00026b29

0001ae98 <remove_client_from_list>:
   1ae98:	push	{r4, sl, fp, lr}
   1ae9c:	add	fp, sp, #8
   1aea0:	cmp	r0, #0
   1aea4:	popeq	{r4, sl, fp, pc}
   1aea8:	mov	r4, r0
   1aeac:	ldr	r0, [r0, #4]
   1aeb0:	cmp	r0, #0
   1aeb4:	bne	1aec4 <remove_client_from_list+0x2c>
   1aeb8:	ldr	r0, [r4, #8]
   1aebc:	cmp	r0, #0
   1aec0:	beq	1aee0 <remove_client_from_list+0x48>
   1aec4:	ldr	r1, [pc, #24]	; 1aee4 <remove_client_from_list+0x4c>
   1aec8:	ldr	r1, [pc, r1]
   1aecc:	mov	r0, r4
   1aed0:	bl	19020 <rb_dlinkDelete>
   1aed4:	mov	r0, r4
   1aed8:	pop	{r4, sl, fp, lr}
   1aedc:	b	1aee8 <update_client_exit_stats>
   1aee0:	pop	{r4, sl, fp, pc}
   1aee4:	.word	0x0003fbc8

0001aee8 <update_client_exit_stats>:
   1aee8:	push	{r4, sl, fp, lr}
   1aeec:	add	fp, sp, #8
   1aef0:	sub	sp, sp, #8
   1aef4:	mov	r4, r0
   1aef8:	ldrh	r0, [r0, #80]	; 0x50
   1aefc:	cmp	r0, #64	; 0x40
   1af00:	beq	1af54 <update_client_exit_stats+0x6c>
   1af04:	cmp	r0, #32
   1af08:	bne	1af94 <update_client_exit_stats+0xac>
   1af0c:	ldr	r0, [r4, #32]
   1af10:	add	r0, r0, #88	; 0x58
   1af14:	str	r0, [sp]
   1af18:	add	r3, r4, #88	; 0x58
   1af1c:	ldr	r2, [pc, #176]	; 1afd4 <update_client_exit_stats+0xec>
   1af20:	add	r2, pc, r2
   1af24:	mov	r0, #1024	; 0x400
   1af28:	mov	r1, #0
   1af2c:	bl	d634 <sendto_realops_snomask@plt>
   1af30:	ldrb	r0, [r4, #65]	; 0x41
   1af34:	tst	r0, #16
   1af38:	beq	1af94 <update_client_exit_stats+0xac>
   1af3c:	ldr	r0, [pc, #148]	; 1afd8 <update_client_exit_stats+0xf0>
   1af40:	ldr	r0, [pc, r0]
   1af44:	ldr	r1, [r0]
   1af48:	sub	r1, r1, #1
   1af4c:	str	r1, [r0]
   1af50:	b	1af94 <update_client_exit_stats+0xac>
   1af54:	ldr	r0, [pc, #128]	; 1afdc <update_client_exit_stats+0xf4>
   1af58:	ldr	r0, [pc, r0]
   1af5c:	ldr	r1, [r0, #4]
   1af60:	sub	r1, r1, #1
   1af64:	str	r1, [r0, #4]
   1af68:	ldr	r1, [r4, #56]	; 0x38
   1af6c:	tst	r1, #4096	; 0x1000
   1af70:	beq	1af80 <update_client_exit_stats+0x98>
   1af74:	ldr	r2, [r0]
   1af78:	sub	r2, r2, #1
   1af7c:	str	r2, [r0]
   1af80:	tst	r1, #8
   1af84:	beq	1af94 <update_client_exit_stats+0xac>
   1af88:	ldr	r1, [r0, #8]
   1af8c:	sub	r1, r1, #1
   1af90:	str	r1, [r0, #8]
   1af94:	ldr	r0, [pc, #68]	; 1afe0 <update_client_exit_stats+0xf8>
   1af98:	ldr	r0, [pc, r0]
   1af9c:	ldr	r0, [r0]
   1afa0:	cmp	r0, #0
   1afa4:	beq	1afcc <update_client_exit_stats+0xe4>
   1afa8:	ldr	r0, [pc, #52]	; 1afe4 <update_client_exit_stats+0xfc>
   1afac:	ldr	r0, [pc, r0]
   1afb0:	ldr	r0, [r0]
   1afb4:	cmp	r0, #0
   1afb8:	bne	1afcc <update_client_exit_stats+0xe4>
   1afbc:	mov	r0, #0
   1afc0:	sub	sp, fp, #8
   1afc4:	pop	{r4, sl, fp, lr}
   1afc8:	b	e5f4 <check_splitmode@plt>
   1afcc:	sub	sp, fp, #8
   1afd0:	pop	{r4, sl, fp, pc}
   1afd4:	.word	0x00026a04
   1afd8:	.word	0x0003fbdc
   1afdc:	.word	0x0003f9c8
   1afe0:	.word	0x0003fa5c
   1afe4:	.word	0x0003fbb0

0001afe8 <remove_dependents>:
   1afe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afec:	add	fp, sp, #28
   1aff0:	push	{r3}		; (str r3, [sp, #-4]!)
   1aff4:	mov	r5, r1
   1aff8:	mov	r7, r0
   1affc:	ldr	r0, [pc, #168]	; 1b0ac <remove_dependents+0xc4>
   1b000:	ldr	r0, [pc, r0]
   1b004:	ldr	r4, [r0]
   1b008:	cmp	r4, #0
   1b00c:	beq	1b098 <remove_dependents+0xb0>
   1b010:	mov	sl, r2
   1b014:	add	r6, r5, #88	; 0x58
   1b018:	add	r8, r5, #396	; 0x18c
   1b01c:	ldr	r9, [pc, #140]	; 1b0b0 <remove_dependents+0xc8>
   1b020:	add	r9, pc, r9
   1b024:	b	1b03c <remove_dependents+0x54>
   1b028:	mov	r1, r9
   1b02c:	mov	r3, sl
   1b030:	bl	d1e4 <sendto_one@plt>
   1b034:	cmp	r4, #0
   1b038:	beq	1b098 <remove_dependents+0xb0>
   1b03c:	ldr	r0, [r4]
   1b040:	ldr	r4, [r4, #8]
   1b044:	ldrh	r1, [r0, #80]	; 0x50
   1b048:	cmp	r1, #4
   1b04c:	beq	1b034 <remove_dependents+0x4c>
   1b050:	cmp	r0, r7
   1b054:	ldrne	r1, [r5, #36]	; 0x24
   1b058:	cmpne	r0, r1
   1b05c:	beq	1b034 <remove_dependents+0x4c>
   1b060:	ldr	r1, [r0, #36]	; 0x24
   1b064:	ldrh	r2, [r1, #80]	; 0x50
   1b068:	cmp	r2, #32
   1b06c:	mov	r2, r6
   1b070:	bne	1b028 <remove_dependents+0x40>
   1b074:	ldrb	r1, [r1, #396]	; 0x18c
   1b078:	cmp	r1, #0
   1b07c:	mov	r2, r6
   1b080:	beq	1b028 <remove_dependents+0x40>
   1b084:	ldrb	r1, [r8]
   1b088:	cmp	r1, #0
   1b08c:	mov	r2, r8
   1b090:	moveq	r2, r6
   1b094:	b	1b028 <remove_dependents+0x40>
   1b098:	mov	r0, r5
   1b09c:	ldr	r1, [sp]
   1b0a0:	sub	sp, fp, #28
   1b0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0a8:	b	1b0b4 <recurse_remove_clients>
   1b0ac:	.word	0x0003f9d0
   1b0b0:	.word	0x00026991

0001b0b4 <recurse_remove_clients>:
   1b0b4:	push	{r4, r5, r6, r7, fp, lr}
   1b0b8:	add	fp, sp, #16
   1b0bc:	mov	r5, r0
   1b0c0:	ldrh	r0, [r0, #80]	; 0x50
   1b0c4:	cmp	r0, #4
   1b0c8:	popeq	{r4, r5, r6, r7, fp, pc}
   1b0cc:	ldr	r0, [r5, #28]
   1b0d0:	cmp	r0, #0
   1b0d4:	beq	1b1a4 <recurse_remove_clients+0xf0>
   1b0d8:	mov	r4, r1
   1b0dc:	ldr	r7, [r0, #48]	; 0x30
   1b0e0:	ldr	r0, [pc, #192]	; 1b1a8 <recurse_remove_clients+0xf4>
   1b0e4:	ldr	r0, [pc, r0]
   1b0e8:	ldr	r0, [r0, #136]	; 0x88
   1b0ec:	cmp	r0, #1
   1b0f0:	blt	1b168 <recurse_remove_clients+0xb4>
   1b0f4:	cmp	r7, #0
   1b0f8:	beq	1b170 <recurse_remove_clients+0xbc>
   1b0fc:	ldr	r6, [r7]
   1b100:	ldr	r7, [r7, #8]
   1b104:	ldr	r0, [r6, #64]	; 0x40
   1b108:	orr	r0, r0, #4
   1b10c:	str	r0, [r6, #64]	; 0x40
   1b110:	add	r0, r6, #88	; 0x58
   1b114:	bl	d85c <add_nd_entry@plt>
   1b118:	ldrb	r0, [r6, #64]	; 0x40
   1b11c:	tst	r0, #34	; 0x22
   1b120:	bne	1b0f4 <recurse_remove_clients+0x40>
   1b124:	mov	r0, #0
   1b128:	mov	r1, r6
   1b12c:	mov	r2, r4
   1b130:	bl	19ac4 <exit_remote_client>
   1b134:	cmp	r7, #0
   1b138:	bne	1b0fc <recurse_remove_clients+0x48>
   1b13c:	b	1b170 <recurse_remove_clients+0xbc>
   1b140:	ldr	r1, [r7]
   1b144:	ldr	r7, [r7, #8]
   1b148:	ldr	r0, [r1, #64]	; 0x40
   1b14c:	orr	r2, r0, #4
   1b150:	str	r2, [r1, #64]	; 0x40
   1b154:	tst	r0, #34	; 0x22
   1b158:	bne	1b168 <recurse_remove_clients+0xb4>
   1b15c:	mov	r0, #0
   1b160:	mov	r2, r4
   1b164:	bl	19ac4 <exit_remote_client>
   1b168:	cmp	r7, #0
   1b16c:	bne	1b140 <recurse_remove_clients+0x8c>
   1b170:	ldr	r0, [r5, #28]
   1b174:	ldr	r6, [r0, #36]	; 0x24
   1b178:	cmp	r6, #0
   1b17c:	beq	1b1a4 <recurse_remove_clients+0xf0>
   1b180:	ldr	r5, [r6]
   1b184:	ldr	r6, [r6, #8]
   1b188:	mov	r0, r5
   1b18c:	mov	r1, r4
   1b190:	bl	1b0b4 <recurse_remove_clients>
   1b194:	mov	r0, r5
   1b198:	bl	1b1ac <qs_server>
   1b19c:	cmp	r6, #0
   1b1a0:	bne	1b180 <recurse_remove_clients+0xcc>
   1b1a4:	pop	{r4, r5, r6, r7, fp, pc}
   1b1a8:	.word	0x0003fa98

0001b1ac <qs_server>:
   1b1ac:	push	{r4, sl, fp, lr}
   1b1b0:	add	fp, sp, #8
   1b1b4:	mov	r4, r0
   1b1b8:	ldr	r0, [r0, #32]
   1b1bc:	cmp	r0, #0
   1b1c0:	beq	1b1d8 <qs_server+0x2c>
   1b1c4:	ldr	r1, [r0, #28]
   1b1c8:	cmp	r1, #0
   1b1cc:	addne	r0, r4, #12
   1b1d0:	addne	r1, r1, #36	; 0x24
   1b1d4:	blne	19020 <rb_dlinkDelete>
   1b1d8:	ldr	r1, [pc, #104]	; 1b248 <qs_server+0x9c>
   1b1dc:	ldr	r1, [pc, r1]
   1b1e0:	mov	r0, r4
   1b1e4:	bl	182c8 <rb_dlinkFindDestroy>
   1b1e8:	mov	r0, r4
   1b1ec:	ldrb	r1, [r0, #396]!	; 0x18c
   1b1f0:	cmp	r1, #0
   1b1f4:	beq	1b200 <qs_server+0x54>
   1b1f8:	mov	r1, r4
   1b1fc:	bl	da90 <del_from_id_hash@plt>
   1b200:	add	r0, r4, #88	; 0x58
   1b204:	mov	r1, r4
   1b208:	bl	db14 <del_from_client_hash@plt>
   1b20c:	mov	r0, r4
   1b210:	bl	1ae98 <remove_client_from_list>
   1b214:	ldr	r0, [r4, #28]
   1b218:	ldr	r0, [r0, #68]	; 0x44
   1b21c:	bl	db5c <scache_split@plt>
   1b220:	ldr	r0, [r4, #64]	; 0x40
   1b224:	orr	r0, r0, #2
   1b228:	str	r0, [r4, #64]	; 0x40
   1b22c:	bl	dc58 <rb_make_rb_dlink_node@plt>
   1b230:	mov	r1, r0
   1b234:	ldr	r2, [pc, #16]	; 1b24c <qs_server+0xa0>
   1b238:	ldr	r2, [pc, r2]
   1b23c:	mov	r0, r4
   1b240:	pop	{r4, sl, fp, lr}
   1b244:	b	18194 <rb_dlinkAdd>
   1b248:	.word	0x0003f69c
   1b24c:	.word	0x0003f84c

0001b250 <cancel_lookup>:
   1b250:	push	{fp, lr}
   1b254:	mov	fp, sp
   1b258:	mov	r1, r0
   1b25c:	ldr	r0, [pc, #24]	; 1b27c <cancel_lookup+0x2c>
   1b260:	ldr	r0, [pc, r0]
   1b264:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b268:	cmp	r0, #0
   1b26c:	movne	r1, #0
   1b270:	strne	r1, [r0]
   1b274:	strne	r1, [r0, #4]
   1b278:	pop	{fp, pc}
   1b27c:	.word	0x0004a4f8

0001b280 <cancel_dns_stats>:
   1b280:	push	{fp, lr}
   1b284:	mov	fp, sp
   1b288:	mov	r1, r0
   1b28c:	ldr	r0, [pc, #24]	; 1b2ac <cancel_dns_stats+0x2c>
   1b290:	ldr	r0, [pc, r0]
   1b294:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b298:	cmp	r0, #0
   1b29c:	movne	r1, #0
   1b2a0:	strne	r1, [r0]
   1b2a4:	strne	r1, [r0, #4]
   1b2a8:	pop	{fp, pc}
   1b2ac:	.word	0x0004a4cc

0001b2b0 <lookup_hostname>:
   1b2b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b2b4:	add	fp, sp, #24
   1b2b8:	mov	r9, r3
   1b2bc:	mov	r5, r2
   1b2c0:	mov	r6, r1
   1b2c4:	mov	r8, r0
   1b2c8:	bl	1b324 <rb_malloc>
   1b2cc:	mov	r7, r0
   1b2d0:	ldr	r0, [pc, #68]	; 1b31c <lookup_hostname+0x6c>
   1b2d4:	add	r0, pc, r0
   1b2d8:	bl	1b344 <assign_id>
   1b2dc:	mov	r4, r0
   1b2e0:	bl	d718 <check_authd@plt>
   1b2e4:	ldr	r0, [pc, #52]	; 1b320 <lookup_hostname+0x70>
   1b2e8:	ldr	r0, [pc, r0]
   1b2ec:	mov	r1, r4
   1b2f0:	mov	r2, r7
   1b2f4:	bl	d700 <rb_dictionary_add@plt>
   1b2f8:	stm	r7, {r5, r9}
   1b2fc:	mov	r1, #52	; 0x34
   1b300:	cmp	r6, #10
   1b304:	movweq	r1, #54	; 0x36
   1b308:	mov	r0, r4
   1b30c:	mov	r2, r8
   1b310:	bl	1b35c <submit_dns>
   1b314:	mov	r0, r4
   1b318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b31c:	.word	0x0004a48c
   1b320:	.word	0x0004a470

0001b324 <rb_malloc>:
   1b324:	push	{fp, lr}
   1b328:	mov	fp, sp
   1b32c:	mov	r0, #1
   1b330:	mov	r1, #8
   1b334:	bl	cfa4 <calloc@plt>
   1b338:	cmp	r0, #0
   1b33c:	popne	{fp, pc}
   1b340:	bl	d448 <rb_outofmemory@plt>

0001b344 <assign_id>:
   1b344:	ldr	r1, [r0]
   1b348:	adds	r1, r1, #1
   1b34c:	movcs	r1, #1
   1b350:	str	r1, [r0]
   1b354:	mov	r0, r1
   1b358:	bx	lr

0001b35c <submit_dns>:
   1b35c:	push	{fp, lr}
   1b360:	mov	fp, sp
   1b364:	sub	sp, sp, #8
   1b368:	mov	r3, r0
   1b36c:	ldr	r0, [pc, #64]	; 1b3b4 <submit_dns+0x58>
   1b370:	ldr	r0, [pc, r0]
   1b374:	ldr	r0, [r0]
   1b378:	cmp	r0, #0
   1b37c:	beq	1b3a4 <submit_dns+0x48>
   1b380:	mov	ip, r1
   1b384:	str	r2, [sp]
   1b388:	ldr	r1, [pc, #40]	; 1b3b8 <submit_dns+0x5c>
   1b38c:	add	r1, pc, r1
   1b390:	mov	r2, r3
   1b394:	mov	r3, ip
   1b398:	bl	d148 <rb_helper_write@plt>
   1b39c:	mov	sp, fp
   1b3a0:	pop	{fp, pc}
   1b3a4:	mov	r0, r3
   1b3a8:	mov	sp, fp
   1b3ac:	pop	{fp, lr}
   1b3b0:	b	1b964 <handle_dns_failure>
   1b3b4:	.word	0x0003f698
   1b3b8:	.word	0x000266b6

0001b3bc <lookup_ip>:
   1b3bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b3c0:	add	fp, sp, #24
   1b3c4:	mov	r9, r3
   1b3c8:	mov	r5, r2
   1b3cc:	mov	r6, r1
   1b3d0:	mov	r8, r0
   1b3d4:	bl	1b324 <rb_malloc>
   1b3d8:	mov	r7, r0
   1b3dc:	ldr	r0, [pc, #68]	; 1b428 <lookup_ip+0x6c>
   1b3e0:	add	r0, pc, r0
   1b3e4:	bl	1b344 <assign_id>
   1b3e8:	mov	r4, r0
   1b3ec:	bl	d718 <check_authd@plt>
   1b3f0:	ldr	r0, [pc, #52]	; 1b42c <lookup_ip+0x70>
   1b3f4:	ldr	r0, [pc, r0]
   1b3f8:	mov	r1, r4
   1b3fc:	mov	r2, r7
   1b400:	bl	d700 <rb_dictionary_add@plt>
   1b404:	stm	r7, {r5, r9}
   1b408:	mov	r1, #82	; 0x52
   1b40c:	cmp	r6, #10
   1b410:	movweq	r1, #83	; 0x53
   1b414:	mov	r0, r4
   1b418:	mov	r2, r8
   1b41c:	bl	1b35c <submit_dns>
   1b420:	mov	r0, r4
   1b424:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b428:	.word	0x0004a380
   1b42c:	.word	0x0004a364

0001b430 <dns_results_callback>:
   1b430:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b434:	add	fp, sp, #24
   1b438:	mov	r8, r3
   1b43c:	mov	r4, r2
   1b440:	mov	r9, r1
   1b444:	mov	r1, #0
   1b448:	mov	r2, #16
   1b44c:	bl	d118 <strtol@plt>
   1b450:	mov	r5, r0
   1b454:	ldr	r0, [pc, #124]	; 1b4d8 <dns_results_callback+0xa8>
   1b458:	ldr	r0, [pc, r0]
   1b45c:	mov	r1, r5
   1b460:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b464:	cmp	r0, #0
   1b468:	beq	1b4d4 <dns_results_callback+0xa4>
   1b46c:	mov	r7, r0
   1b470:	ldr	r6, [r0]
   1b474:	cmp	r6, #0
   1b478:	beq	1b4cc <dns_results_callback+0x9c>
   1b47c:	ldrb	r0, [r4]
   1b480:	mov	r2, #2
   1b484:	cmp	r0, #83	; 0x53
   1b488:	movweq	r2, #10
   1b48c:	cmp	r0, #54	; 0x36
   1b490:	movweq	r2, #10
   1b494:	ldr	r3, [r7, #4]
   1b498:	ldrb	r0, [r9]
   1b49c:	sub	r0, r0, #79	; 0x4f
   1b4a0:	clz	r0, r0
   1b4a4:	lsr	r1, r0, #5
   1b4a8:	mov	r0, r8
   1b4ac:	blx	r6
   1b4b0:	mov	r0, r7
   1b4b4:	bl	1b4e0 <rb_free>
   1b4b8:	ldr	r0, [pc, #28]	; 1b4dc <dns_results_callback+0xac>
   1b4bc:	ldr	r0, [pc, r0]
   1b4c0:	mov	r1, r5
   1b4c4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b4c8:	b	d82c <rb_dictionary_delete@plt>
   1b4cc:	mov	r0, #0
   1b4d0:	str	r0, [r7, #4]
   1b4d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b4d8:	.word	0x0004a300
   1b4dc:	.word	0x0004a29c

0001b4e0 <rb_free>:
   1b4e0:	cmp	r0, #0
   1b4e4:	bxeq	lr
   1b4e8:	b	d328 <free@plt>

0001b4ec <dns_stats_results_callback>:
   1b4ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b4f0:	add	fp, sp, #24
   1b4f4:	mov	r8, r3
   1b4f8:	mov	r9, r2
   1b4fc:	mov	r4, r1
   1b500:	mov	r1, #0
   1b504:	mov	r2, #16
   1b508:	bl	d118 <strtol@plt>
   1b50c:	mov	r5, r0
   1b510:	ldr	r0, [pc, #120]	; 1b590 <dns_stats_results_callback+0xa4>
   1b514:	ldr	r0, [pc, r0]
   1b518:	mov	r1, r5
   1b51c:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b520:	cmp	r0, #0
   1b524:	beq	1b55c <dns_stats_results_callback+0x70>
   1b528:	mov	r7, r0
   1b52c:	ldr	r6, [r0]
   1b530:	cmp	r6, #0
   1b534:	beq	1b554 <dns_stats_results_callback+0x68>
   1b538:	ldrb	r0, [r4]
   1b53c:	cmp	r0, #89	; 0x59
   1b540:	beq	1b560 <dns_stats_results_callback+0x74>
   1b544:	cmp	r0, #88	; 0x58
   1b548:	bne	1b55c <dns_stats_results_callback+0x70>
   1b54c:	mov	r2, #1
   1b550:	b	1b564 <dns_stats_results_callback+0x78>
   1b554:	mov	r0, #0
   1b558:	str	r0, [r7, #4]
   1b55c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b560:	mov	r2, #0
   1b564:	ldr	r3, [r7, #4]
   1b568:	mov	r0, r9
   1b56c:	mov	r1, r8
   1b570:	blx	r6
   1b574:	mov	r0, r7
   1b578:	bl	1b4e0 <rb_free>
   1b57c:	ldr	r0, [pc, #16]	; 1b594 <dns_stats_results_callback+0xa8>
   1b580:	ldr	r0, [pc, r0]
   1b584:	mov	r1, r5
   1b588:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b58c:	b	d82c <rb_dictionary_delete@plt>
   1b590:	.word	0x0004a248
   1b594:	.word	0x0004a1dc

0001b598 <init_dns>:
   1b598:	push	{r4, sl, fp, lr}
   1b59c:	add	fp, sp, #8
   1b5a0:	ldr	r0, [pc, #64]	; 1b5e8 <init_dns+0x50>
   1b5a4:	add	r0, pc, r0
   1b5a8:	ldr	r4, [pc, #60]	; 1b5ec <init_dns+0x54>
   1b5ac:	add	r4, pc, r4
   1b5b0:	mov	r1, r4
   1b5b4:	bl	dfb8 <rb_dictionary_create@plt>
   1b5b8:	ldr	r1, [pc, #48]	; 1b5f0 <init_dns+0x58>
   1b5bc:	add	r1, pc, r1
   1b5c0:	str	r0, [r1]
   1b5c4:	ldr	r0, [pc, #40]	; 1b5f4 <init_dns+0x5c>
   1b5c8:	add	r0, pc, r0
   1b5cc:	mov	r1, r4
   1b5d0:	bl	dfb8 <rb_dictionary_create@plt>
   1b5d4:	ldr	r1, [pc, #28]	; 1b5f8 <init_dns+0x60>
   1b5d8:	add	r1, pc, r1
   1b5dc:	str	r0, [r1]
   1b5e0:	pop	{r4, sl, fp, lr}
   1b5e4:	b	1b604 <get_nameservers>
   1b5e8:	.word	0x0002644a
   1b5ec:	.word	0x00000048
   1b5f0:	.word	0x0004a19c
   1b5f4:	.word	0x00026432
   1b5f8:	.word	0x0004a184

0001b5fc <rb_uint32cmp>:
   1b5fc:	sub	r0, r1, r0
   1b600:	bx	lr

0001b604 <get_nameservers>:
   1b604:	push	{r4, r5, fp, lr}
   1b608:	add	fp, sp, #8
   1b60c:	bl	1b324 <rb_malloc>
   1b610:	mov	r4, r0
   1b614:	ldr	r0, [pc, #64]	; 1b65c <get_nameservers+0x58>
   1b618:	add	r0, pc, r0
   1b61c:	bl	1b344 <assign_id>
   1b620:	mov	r5, r0
   1b624:	bl	d718 <check_authd@plt>
   1b628:	ldr	r0, [pc, #48]	; 1b660 <get_nameservers+0x5c>
   1b62c:	ldr	r0, [pc, r0]
   1b630:	mov	r1, r5
   1b634:	mov	r2, r4
   1b638:	bl	d700 <rb_dictionary_add@plt>
   1b63c:	mov	r0, #0
   1b640:	ldr	r1, [pc, #28]	; 1b664 <get_nameservers+0x60>
   1b644:	add	r1, pc, r1
   1b648:	str	r1, [r4]
   1b64c:	str	r0, [r4, #4]
   1b650:	mov	r0, r5
   1b654:	pop	{r4, r5, fp, lr}
   1b658:	b	1b758 <submit_dns_stat>
   1b65c:	.word	0x0004a14c
   1b660:	.word	0x0004a130
   1b664:	.word	0x0000001c

0001b668 <stats_results_callback>:
   1b668:	push	{r4, r5, r6, r7, fp, lr}
   1b66c:	add	fp, sp, #16
   1b670:	mov	r4, r1
   1b674:	mov	r5, r0
   1b678:	cmp	r2, #0
   1b67c:	beq	1b694 <stats_results_callback+0x2c>
   1b680:	cmp	r5, #0
   1b684:	beq	1b700 <stats_results_callback+0x98>
   1b688:	add	r0, r4, r5, lsl #2
   1b68c:	ldr	r1, [r0, #-4]
   1b690:	b	1b708 <stats_results_callback+0xa0>
   1b694:	ldr	r0, [pc, #124]	; 1b718 <stats_results_callback+0xb0>
   1b698:	ldr	r0, [pc, r0]
   1b69c:	ldr	r6, [r0]
   1b6a0:	cmp	r6, #0
   1b6a4:	beq	1b6d0 <stats_results_callback+0x68>
   1b6a8:	ldr	r0, [r6]
   1b6ac:	ldr	r7, [r6, #8]
   1b6b0:	bl	1b4e0 <rb_free>
   1b6b4:	mov	r0, r6
   1b6b8:	bl	1b7e4 <rb_dlinkDelete>
   1b6bc:	mov	r0, r6
   1b6c0:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   1b6c4:	cmp	r7, #0
   1b6c8:	mov	r6, r7
   1b6cc:	bne	1b6a8 <stats_results_callback+0x40>
   1b6d0:	cmp	r5, #1
   1b6d4:	blt	1b6fc <stats_results_callback+0x94>
   1b6d8:	ldr	r0, [r4], #4
   1b6dc:	bl	1b934 <rb_strdup>
   1b6e0:	mov	r6, r0
   1b6e4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   1b6e8:	mov	r1, r0
   1b6ec:	mov	r0, r6
   1b6f0:	bl	1b870 <rb_dlinkAdd>
   1b6f4:	subs	r5, r5, #1
   1b6f8:	bne	1b6d8 <stats_results_callback+0x70>
   1b6fc:	pop	{r4, r5, r6, r7, fp, pc}
   1b700:	ldr	r1, [pc, #20]	; 1b71c <stats_results_callback+0xb4>
   1b704:	add	r1, pc, r1
   1b708:	ldr	r0, [pc, #16]	; 1b720 <stats_results_callback+0xb8>
   1b70c:	add	r0, pc, r0
   1b710:	pop	{r4, r5, r6, r7, fp, lr}
   1b714:	b	d3ac <iwarn@plt>
   1b718:	.word	0x0003f354
   1b71c:	.word	0x00026312
   1b720:	.word	0x00026318

0001b724 <reload_nameservers>:
   1b724:	push	{fp, lr}
   1b728:	mov	fp, sp
   1b72c:	bl	d718 <check_authd@plt>
   1b730:	ldr	r0, [pc, #24]	; 1b750 <reload_nameservers+0x2c>
   1b734:	ldr	r0, [pc, r0]
   1b738:	ldr	r0, [r0]
   1b73c:	ldr	r1, [pc, #16]	; 1b754 <reload_nameservers+0x30>
   1b740:	add	r1, pc, r1
   1b744:	bl	d148 <rb_helper_write@plt>
   1b748:	pop	{fp, lr}
   1b74c:	b	1b604 <get_nameservers>
   1b750:	.word	0x0003f2d4
   1b754:	.word	0x000262cb

0001b758 <submit_dns_stat>:
   1b758:	mov	r2, r0
   1b75c:	ldr	r0, [pc, #32]	; 1b784 <submit_dns_stat+0x2c>
   1b760:	ldr	r0, [pc, r0]
   1b764:	ldr	r0, [r0]
   1b768:	cmp	r0, #0
   1b76c:	beq	1b77c <submit_dns_stat+0x24>
   1b770:	ldr	r1, [pc, #16]	; 1b788 <submit_dns_stat+0x30>
   1b774:	add	r1, pc, r1
   1b778:	b	d148 <rb_helper_write@plt>
   1b77c:	mov	r0, r2
   1b780:	b	1b78c <handle_dns_stat_failure>
   1b784:	.word	0x0003f2a8
   1b788:	.word	0x0002629b

0001b78c <handle_dns_stat_failure>:
   1b78c:	push	{r4, r5, fp, lr}
   1b790:	add	fp, sp, #8
   1b794:	mov	r1, r0
   1b798:	ldr	r0, [pc, #64]	; 1b7e0 <handle_dns_stat_failure+0x54>
   1b79c:	ldr	r0, [pc, r0]
   1b7a0:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b7a4:	cmp	r0, #0
   1b7a8:	beq	1b7dc <handle_dns_stat_failure+0x50>
   1b7ac:	mov	r4, r0
   1b7b0:	ldr	ip, [r0]
   1b7b4:	cmp	ip, #0
   1b7b8:	popeq	{r4, r5, fp, pc}
   1b7bc:	ldr	r3, [r4, #4]
   1b7c0:	mov	r5, #0
   1b7c4:	mov	r0, #1
   1b7c8:	mov	r1, #0
   1b7cc:	mov	r2, #2
   1b7d0:	blx	ip
   1b7d4:	str	r5, [r4]
   1b7d8:	str	r5, [r4, #4]
   1b7dc:	pop	{r4, r5, fp, pc}
   1b7e0:	.word	0x00049fc0

0001b7e4 <rb_dlinkDelete>:
   1b7e4:	push	{fp, lr}
   1b7e8:	mov	fp, sp
   1b7ec:	cmp	r0, #0
   1b7f0:	beq	1b840 <rb_dlinkDelete+0x5c>
   1b7f4:	ldr	ip, [pc, #100]	; 1b860 <rb_dlinkDelete+0x7c>
   1b7f8:	ldr	ip, [pc, ip]
   1b7fc:	ldmib	r0, {r2, r3}
   1b800:	add	r1, r3, #4
   1b804:	cmp	r3, #0
   1b808:	addeq	r1, ip, #4
   1b80c:	str	r2, [r1]
   1b810:	ldmib	r0, {r1, r2}
   1b814:	cmp	r1, #0
   1b818:	mov	r3, ip
   1b81c:	addne	r3, r1, #8
   1b820:	str	r2, [r3]
   1b824:	mov	r1, #0
   1b828:	str	r1, [r0, #4]
   1b82c:	str	r1, [r0, #8]
   1b830:	ldr	r0, [ip, #8]
   1b834:	sub	r0, r0, #1
   1b838:	str	r0, [ip, #8]
   1b83c:	pop	{fp, pc}
   1b840:	ldr	r0, [pc, #28]	; 1b864 <rb_dlinkDelete+0x80>
   1b844:	add	r0, pc, r0
   1b848:	ldr	r1, [pc, #24]	; 1b868 <rb_dlinkDelete+0x84>
   1b84c:	add	r1, pc, r1
   1b850:	ldr	r3, [pc, #20]	; 1b86c <rb_dlinkDelete+0x88>
   1b854:	add	r3, pc, r3
   1b858:	mov	r2, #235	; 0xeb
   1b85c:	bl	e7e0 <__assert_fail@plt>
   1b860:	.word	0x0003f1f4
   1b864:	.word	0x000250c8
   1b868:	.word	0x000250ca
   1b86c:	.word	0x00025165

0001b870 <rb_dlinkAdd>:
   1b870:	push	{fp, lr}
   1b874:	mov	fp, sp
   1b878:	cmp	r0, #0
   1b87c:	beq	1b8d8 <rb_dlinkAdd+0x68>
   1b880:	cmp	r1, #0
   1b884:	beq	1b8f8 <rb_dlinkAdd+0x88>
   1b888:	mov	r2, #0
   1b88c:	stm	r1, {r0, r2}
   1b890:	ldr	r0, [pc, #128]	; 1b918 <rb_dlinkAdd+0xa8>
   1b894:	ldr	r0, [pc, r0]
   1b898:	ldr	r2, [r0]
   1b89c:	str	r2, [r1, #8]
   1b8a0:	cmp	r2, #0
   1b8a4:	beq	1b8b4 <rb_dlinkAdd+0x44>
   1b8a8:	add	r2, r2, #4
   1b8ac:	str	r1, [r2]
   1b8b0:	b	1b8c4 <rb_dlinkAdd+0x54>
   1b8b4:	mov	r2, r0
   1b8b8:	ldr	r3, [r2, #4]!
   1b8bc:	cmp	r3, #0
   1b8c0:	streq	r1, [r2]
   1b8c4:	str	r1, [r0]
   1b8c8:	ldr	r1, [r0, #8]
   1b8cc:	add	r1, r1, #1
   1b8d0:	str	r1, [r0, #8]
   1b8d4:	pop	{fp, pc}
   1b8d8:	ldr	r0, [pc, #60]	; 1b91c <rb_dlinkAdd+0xac>
   1b8dc:	add	r0, pc, r0
   1b8e0:	ldr	r1, [pc, #56]	; 1b920 <rb_dlinkAdd+0xb0>
   1b8e4:	add	r1, pc, r1
   1b8e8:	ldr	r3, [pc, #52]	; 1b924 <rb_dlinkAdd+0xb4>
   1b8ec:	add	r3, pc, r3
   1b8f0:	mov	r2, #143	; 0x8f
   1b8f4:	bl	e7e0 <__assert_fail@plt>
   1b8f8:	ldr	r0, [pc, #40]	; 1b928 <rb_dlinkAdd+0xb8>
   1b8fc:	add	r0, pc, r0
   1b900:	ldr	r1, [pc, #36]	; 1b92c <rb_dlinkAdd+0xbc>
   1b904:	add	r1, pc, r1
   1b908:	ldr	r3, [pc, #32]	; 1b930 <rb_dlinkAdd+0xc0>
   1b90c:	add	r3, pc, r3
   1b910:	mov	r2, #144	; 0x90
   1b914:	bl	e7e0 <__assert_fail@plt>
   1b918:	.word	0x0003f158
   1b91c:	.word	0x00025095
   1b920:	.word	0x00025032
   1b924:	.word	0x00025092
   1b928:	.word	0x00025010
   1b92c:	.word	0x00025012
   1b930:	.word	0x00025072

0001b934 <rb_strdup>:
   1b934:	push	{r4, sl, fp, lr}
   1b938:	add	fp, sp, #8
   1b93c:	mov	r4, r0
   1b940:	bl	dc94 <strlen@plt>
   1b944:	add	r0, r0, #1
   1b948:	bl	da84 <malloc@plt>
   1b94c:	cmp	r0, #0
   1b950:	beq	1b960 <rb_strdup+0x2c>
   1b954:	mov	r1, r4
   1b958:	pop	{r4, sl, fp, lr}
   1b95c:	b	d91c <strcpy@plt>
   1b960:	bl	d448 <rb_outofmemory@plt>

0001b964 <handle_dns_failure>:
   1b964:	push	{r4, r5, fp, lr}
   1b968:	add	fp, sp, #8
   1b96c:	mov	r1, r0
   1b970:	ldr	r0, [pc, #68]	; 1b9bc <handle_dns_failure+0x58>
   1b974:	ldr	r0, [pc, r0]
   1b978:	bl	e6e4 <rb_dictionary_retrieve@plt>
   1b97c:	cmp	r0, #0
   1b980:	beq	1b9b8 <handle_dns_failure+0x54>
   1b984:	mov	r4, r0
   1b988:	ldr	ip, [r0]
   1b98c:	cmp	ip, #0
   1b990:	popeq	{r4, r5, fp, pc}
   1b994:	ldr	r3, [r4, #4]
   1b998:	ldr	r0, [pc, #32]	; 1b9c0 <handle_dns_failure+0x5c>
   1b99c:	add	r0, pc, r0
   1b9a0:	mov	r5, #0
   1b9a4:	mov	r1, #0
   1b9a8:	mov	r2, #0
   1b9ac:	blx	ip
   1b9b0:	str	r5, [r4]
   1b9b4:	str	r5, [r4, #4]
   1b9b8:	pop	{r4, r5, fp, pc}
   1b9bc:	.word	0x00049de4
   1b9c0:	.word	0x000260b1

0001b9c4 <match_extban>:
   1b9c4:	push	{r4, r5, r6, r7, fp, lr}
   1b9c8:	add	fp, sp, #16
   1b9cc:	ldrb	r6, [r0]
   1b9d0:	mov	ip, #0
   1b9d4:	cmp	r6, #36	; 0x24
   1b9d8:	bne	1ba58 <match_extban+0x94>
   1b9dc:	mov	r5, r0
   1b9e0:	ldrb	r7, [r5, #1]!
   1b9e4:	cmp	r7, #126	; 0x7e
   1b9e8:	addeq	r5, r0, #2
   1b9ec:	mov	r4, #1
   1b9f0:	movweq	r4, #2
   1b9f4:	ldrb	r0, [r0, r4]
   1b9f8:	ldr	r4, [pc, #96]	; 1ba60 <match_extban+0x9c>
   1b9fc:	ldr	r4, [pc, r4]
   1ba00:	ldrb	r4, [r4, r0]
   1ba04:	ldr	r6, [pc, #88]	; 1ba64 <match_extban+0xa0>
   1ba08:	ldr	r6, [pc, r6]
   1ba0c:	ldr	r4, [r6, r4, lsl #2]
   1ba10:	cmp	r0, #0
   1ba14:	beq	1ba38 <match_extban+0x74>
   1ba18:	ldrb	r6, [r5, #1]
   1ba1c:	mov	r0, #0
   1ba20:	cmp	r6, #58	; 0x3a
   1ba24:	addeq	r0, r5, #2
   1ba28:	cmp	r4, #0
   1ba2c:	beq	1ba44 <match_extban+0x80>
   1ba30:	blx	r4
   1ba34:	b	1ba48 <match_extban+0x84>
   1ba38:	mov	r0, r5
   1ba3c:	cmp	r4, #0
   1ba40:	bne	1ba30 <match_extban+0x6c>
   1ba44:	mvn	r0, #0
   1ba48:	cmp	r7, #126	; 0x7e
   1ba4c:	subne	r0, r0, #1
   1ba50:	clz	r0, r0
   1ba54:	lsr	ip, r0, #5
   1ba58:	mov	r0, ip
   1ba5c:	pop	{r4, r5, r6, r7, fp, pc}
   1ba60:	.word	0x0003f0e0
   1ba64:	.word	0x0003f10c

0001ba68 <valid_extban>:
   1ba68:	push	{r4, r5, fp, lr}
   1ba6c:	add	fp, sp, #8
   1ba70:	mov	ip, r0
   1ba74:	ldrb	r4, [r0]
   1ba78:	mov	r0, #0
   1ba7c:	cmp	r4, #36	; 0x24
   1ba80:	popne	{r4, r5, fp, pc}
   1ba84:	mov	r5, ip
   1ba88:	ldrb	r4, [r5, #1]!
   1ba8c:	cmp	r4, #126	; 0x7e
   1ba90:	addeq	r5, ip, #2
   1ba94:	mov	r4, #1
   1ba98:	movweq	r4, #2
   1ba9c:	ldrb	ip, [ip, r4]
   1baa0:	ldr	r4, [pc, #88]	; 1bb00 <valid_extban+0x98>
   1baa4:	ldr	r4, [pc, r4]
   1baa8:	ldrb	lr, [r4, ip]
   1baac:	ldr	r4, [pc, #80]	; 1bb04 <valid_extban+0x9c>
   1bab0:	ldr	r4, [pc, r4]
   1bab4:	ldr	lr, [r4, lr, lsl #2]
   1bab8:	cmp	ip, #0
   1babc:	beq	1baf0 <valid_extban+0x88>
   1bac0:	ldrb	r4, [r5, #1]
   1bac4:	mov	ip, #0
   1bac8:	cmp	r4, #58	; 0x3a
   1bacc:	addeq	ip, r5, #2
   1bad0:	cmp	lr, #0
   1bad4:	beq	1baec <valid_extban+0x84>
   1bad8:	mov	r0, ip
   1badc:	blx	lr
   1bae0:	mvn	r1, #0
   1bae4:	subs	r0, r0, r1
   1bae8:	movwne	r0, #1
   1baec:	pop	{r4, r5, fp, pc}
   1baf0:	mov	ip, r5
   1baf4:	cmp	lr, #0
   1baf8:	bne	1bad8 <valid_extban+0x70>
   1bafc:	b	1baec <valid_extban+0x84>
   1bb00:	.word	0x0003f038
   1bb04:	.word	0x0003f064

0001bb08 <get_extban_string>:
   1bb08:	push	{fp, lr}
   1bb0c:	mov	fp, sp
   1bb10:	mov	r2, #1
   1bb14:	mov	r1, #0
   1bb18:	ldr	lr, [pc, #76]	; 1bb6c <get_extban_string+0x64>
   1bb1c:	ldr	lr, [pc, lr]
   1bb20:	ldr	ip, [pc, #72]	; 1bb70 <get_extban_string+0x68>
   1bb24:	ldr	ip, [pc, ip]
   1bb28:	ldr	r0, [pc, #68]	; 1bb74 <get_extban_string+0x6c>
   1bb2c:	add	r0, pc, r0
   1bb30:	b	1bb40 <get_extban_string+0x38>
   1bb34:	add	r2, r2, #1
   1bb38:	cmp	r2, #256	; 0x100
   1bb3c:	beq	1bb60 <get_extban_string+0x58>
   1bb40:	ldrb	r3, [lr, r2]
   1bb44:	cmp	r2, r3
   1bb48:	bne	1bb34 <get_extban_string+0x2c>
   1bb4c:	ldr	r3, [ip, r2, lsl #2]
   1bb50:	cmp	r3, #0
   1bb54:	strbne	r2, [r0, r1]
   1bb58:	addne	r1, r1, #1
   1bb5c:	b	1bb34 <get_extban_string+0x2c>
   1bb60:	mov	r2, #0
   1bb64:	strb	r2, [r0, r1]
   1bb68:	pop	{fp, pc}
   1bb6c:	.word	0x0003efc0
   1bb70:	.word	0x0003eff0
   1bb74:	.word	0x0004a03c

0001bb78 <parseargs>:
   1bb78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb7c:	add	fp, sp, #28
   1bb80:	sub	sp, sp, #12
   1bb84:	mov	sl, r2
   1bb88:	mov	r5, r1
   1bb8c:	mov	r7, r0
   1bb90:	add	r0, r2, #8
   1bb94:	str	r0, [sp, #8]
   1bb98:	ldr	r0, [r1]
   1bb9c:	ldr	r0, [r0]
   1bba0:	str	r0, [sp, #4]
   1bba4:	b	1bbb0 <parseargs+0x38>
   1bba8:	cmp	r9, #0
   1bbac:	beq	1bd64 <parseargs+0x1ec>
   1bbb0:	ldr	r1, [r7]
   1bbb4:	sub	r0, r1, #1
   1bbb8:	str	r0, [r7]
   1bbbc:	ldr	r0, [r5]
   1bbc0:	add	r0, r0, #4
   1bbc4:	str	r0, [r5]
   1bbc8:	cmp	r1, #2
   1bbcc:	blt	1bce8 <parseargs+0x170>
   1bbd0:	ldr	r0, [r0]
   1bbd4:	ldrb	r0, [r0]
   1bbd8:	cmp	r0, #45	; 0x2d
   1bbdc:	bne	1bce8 <parseargs+0x170>
   1bbe0:	ldr	r4, [sl]
   1bbe4:	cmp	r4, #0
   1bbe8:	beq	1bd64 <parseargs+0x1ec>
   1bbec:	mov	r9, #0
   1bbf0:	ldr	r0, [sp, #8]
   1bbf4:	b	1bc14 <parseargs+0x9c>
   1bbf8:	ldr	r0, [r6, #-4]
   1bbfc:	mov	r9, #1
   1bc00:	strb	r9, [r0]
   1bc04:	add	r0, r6, #16
   1bc08:	ldr	r4, [r6, #8]
   1bc0c:	cmp	r4, #0
   1bc10:	beq	1bba8 <parseargs+0x30>
   1bc14:	mov	r6, r0
   1bc18:	ldr	r8, [r5]
   1bc1c:	ldr	r0, [r8]
   1bc20:	add	r1, r0, #1
   1bc24:	mov	r0, r4
   1bc28:	bl	d0c4 <strcmp@plt>
   1bc2c:	cmp	r0, #0
   1bc30:	bne	1bc04 <parseargs+0x8c>
   1bc34:	ldr	r0, [r6]
   1bc38:	cmp	r0, #3
   1bc3c:	bhi	1bcf0 <parseargs+0x178>
   1bc40:	add	r1, pc, #4
   1bc44:	ldr	r0, [r1, r0, lsl #2]
   1bc48:	add	pc, r1, r0
   1bc4c:	.word	0x00000010
   1bc50:	.word	0xffffffac
   1bc54:	.word	0x00000044
   1bc58:	.word	0x000000d0
   1bc5c:	ldr	r0, [r7]
   1bc60:	cmp	r0, #1
   1bc64:	ble	1bd24 <parseargs+0x1ac>
   1bc68:	ldr	r0, [r8, #4]!
   1bc6c:	bl	e468 <atoi@plt>
   1bc70:	ldr	r1, [r6, #-4]
   1bc74:	str	r0, [r1]
   1bc78:	ldr	r0, [r7]
   1bc7c:	sub	r0, r0, #1
   1bc80:	str	r0, [r7]
   1bc84:	str	r8, [r5]
   1bc88:	mov	r9, #1
   1bc8c:	b	1bc04 <parseargs+0x8c>
   1bc90:	ldr	r0, [r7]
   1bc94:	cmp	r0, #1
   1bc98:	ble	1bd3c <parseargs+0x1c4>
   1bc9c:	ldr	r0, [r8, #4]
   1bca0:	bl	dc94 <strlen@plt>
   1bca4:	add	r0, r0, #1
   1bca8:	bl	da84 <malloc@plt>
   1bcac:	ldr	r1, [r6, #-4]
   1bcb0:	str	r0, [r1]
   1bcb4:	ldr	r0, [r5]
   1bcb8:	ldr	r1, [r0, #4]
   1bcbc:	ldr	r0, [r6, #-4]
   1bcc0:	ldr	r0, [r0]
   1bcc4:	bl	d91c <strcpy@plt>
   1bcc8:	ldr	r0, [r7]
   1bccc:	sub	r0, r0, #1
   1bcd0:	str	r0, [r7]
   1bcd4:	ldr	r0, [r5]
   1bcd8:	add	r0, r0, #4
   1bcdc:	str	r0, [r5]
   1bce0:	mov	r9, #1
   1bce4:	b	1bc04 <parseargs+0x8c>
   1bce8:	sub	sp, fp, #28
   1bcec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcf0:	ldr	r0, [pc, #164]	; 1bd9c <parseargs+0x224>
   1bcf4:	ldr	r0, [pc, r0]
   1bcf8:	ldr	r0, [r0]
   1bcfc:	ldr	r1, [pc, #156]	; 1bda0 <parseargs+0x228>
   1bd00:	add	r1, pc, r1
   1bd04:	ldr	r2, [pc, #152]	; 1bda4 <parseargs+0x22c>
   1bd08:	add	r2, pc, r2
   1bd0c:	mov	r3, #105	; 0x69
   1bd10:	bl	dd60 <fprintf@plt>
   1bd14:	mov	r0, #1
   1bd18:	bl	dc28 <exit@plt>
   1bd1c:	ldr	r0, [sp, #4]
   1bd20:	bl	e144 <usage@plt>
   1bd24:	ldr	r0, [pc, #96]	; 1bd8c <parseargs+0x214>
   1bd28:	ldr	r0, [pc, r0]
   1bd2c:	ldr	r0, [r0]
   1bd30:	ldr	r1, [pc, #88]	; 1bd90 <parseargs+0x218>
   1bd34:	add	r1, pc, r1
   1bd38:	b	1bd50 <parseargs+0x1d8>
   1bd3c:	ldr	r0, [pc, #80]	; 1bd94 <parseargs+0x21c>
   1bd40:	ldr	r0, [pc, r0]
   1bd44:	ldr	r0, [r0]
   1bd48:	ldr	r1, [pc, #72]	; 1bd98 <parseargs+0x220>
   1bd4c:	add	r1, pc, r1
   1bd50:	mov	r2, #45	; 0x2d
   1bd54:	mov	r3, r4
   1bd58:	bl	dd60 <fprintf@plt>
   1bd5c:	ldr	r0, [sp, #4]
   1bd60:	bl	e144 <usage@plt>
   1bd64:	ldr	r0, [pc, #60]	; 1bda8 <parseargs+0x230>
   1bd68:	ldr	r0, [pc, r0]
   1bd6c:	ldr	r0, [r0]
   1bd70:	ldr	r1, [r5]
   1bd74:	ldr	r1, [r1]
   1bd78:	add	r3, r1, #1
   1bd7c:	ldr	r1, [pc, #40]	; 1bdac <parseargs+0x234>
   1bd80:	add	r1, pc, r1
   1bd84:	mov	r2, #45	; 0x2d
   1bd88:	b	1bd58 <parseargs+0x1e0>
   1bd8c:	.word	0x0003ec30
   1bd90:	.word	0x00025d20
   1bd94:	.word	0x0003ec18
   1bd98:	.word	0x00025d33
   1bd9c:	.word	0x0003ec64
   1bda0:	.word	0x00025daa
   1bda4:	.word	0x00025dd1
   1bda8:	.word	0x0003ebf0
   1bdac:	.word	0x00025d62

0001bdb0 <usage>:
   1bdb0:	push	{fp, lr}
   1bdb4:	mov	fp, sp
   1bdb8:	sub	sp, sp, #8
   1bdbc:	mov	r2, r0
   1bdc0:	ldr	r5, [pc, #188]	; 1be84 <usage+0xd4>
   1bdc4:	ldr	r5, [pc, r5]
   1bdc8:	ldr	r0, [r5]
   1bdcc:	ldr	r1, [pc, #180]	; 1be88 <usage+0xd8>
   1bdd0:	add	r1, pc, r1
   1bdd4:	bl	dd60 <fprintf@plt>
   1bdd8:	ldr	r3, [r5]
   1bddc:	ldr	r0, [pc, #168]	; 1be8c <usage+0xdc>
   1bde0:	add	r0, pc, r0
   1bde4:	mov	r1, #25
   1bde8:	mov	r2, #1
   1bdec:	bl	d8a4 <fwrite@plt>
   1bdf0:	ldr	r0, [pc, #152]	; 1be90 <usage+0xe0>
   1bdf4:	ldr	r0, [pc, r0]
   1bdf8:	ldr	r3, [r0]
   1bdfc:	cmp	r3, #0
   1be00:	beq	1be7c <usage+0xcc>
   1be04:	add	r7, r0, #8
   1be08:	ldr	r6, [pc, #132]	; 1be94 <usage+0xe4>
   1be0c:	add	r6, pc, r6
   1be10:	ldr	r4, [pc, #128]	; 1be98 <usage+0xe8>
   1be14:	add	r4, pc, r4
   1be18:	ldr	r8, [pc, #124]	; 1be9c <usage+0xec>
   1be1c:	add	r8, pc, r8
   1be20:	ldr	r9, [pc, #120]	; 1bea0 <usage+0xf0>
   1be24:	add	r9, pc, r9
   1be28:	b	1be54 <usage+0xa4>
   1be2c:	ldr	r2, [r7, #4]
   1be30:	stm	sp, {r1, r2}
   1be34:	mov	r1, r4
   1be38:	mov	r2, #45	; 0x2d
   1be3c:	bl	dd60 <fprintf@plt>
   1be40:	add	r0, r7, #16
   1be44:	ldr	r3, [r7, #8]
   1be48:	cmp	r3, #0
   1be4c:	mov	r7, r0
   1be50:	beq	1be7c <usage+0xcc>
   1be54:	ldr	r0, [r5]
   1be58:	ldr	r2, [r7]
   1be5c:	orr	r1, r2, #2
   1be60:	cmp	r1, #3
   1be64:	mov	r1, r6
   1be68:	beq	1be2c <usage+0x7c>
   1be6c:	cmp	r2, #0
   1be70:	mov	r1, r9
   1be74:	moveq	r1, r8
   1be78:	b	1be2c <usage+0x7c>
   1be7c:	mov	r0, #1
   1be80:	bl	dc28 <exit@plt>
   1be84:	.word	0x0003eb94
   1be88:	.word	0x00025d32
   1be8c:	.word	0x00025d37
   1be90:	.word	0x0003ece4
   1be94:	.word	0x00029d49
   1be98:	.word	0x00025d1d
   1be9c:	.word	0x00025d27
   1bea0:	.word	0x00025d28

0001bea4 <init_hash>:
   1bea4:	push	{r4, sl, fp, lr}
   1bea8:	add	fp, sp, #8
   1beac:	ldr	r0, [pc, #176]	; 1bf64 <init_hash+0xc0>
   1beb0:	add	r0, pc, r0
   1beb4:	ldr	r1, [pc, #172]	; 1bf68 <init_hash+0xc4>
   1beb8:	add	r1, pc, r1
   1bebc:	bl	dfb8 <rb_dictionary_create@plt>
   1bec0:	ldr	r1, [pc, #164]	; 1bf6c <init_hash+0xc8>
   1bec4:	ldr	r1, [pc, r1]
   1bec8:	str	r0, [r1]
   1becc:	ldr	r0, [pc, #156]	; 1bf70 <init_hash+0xcc>
   1bed0:	add	r0, pc, r0
   1bed4:	mov	r1, #0
   1bed8:	bl	d850 <rb_radixtree_create@plt>
   1bedc:	ldr	r1, [pc, #144]	; 1bf74 <init_hash+0xd0>
   1bee0:	ldr	r1, [pc, r1]
   1bee4:	str	r0, [r1]
   1bee8:	ldr	r0, [pc, #136]	; 1bf78 <init_hash+0xd4>
   1beec:	add	r0, pc, r0
   1bef0:	ldr	r4, [pc, #132]	; 1bf7c <init_hash+0xd8>
   1bef4:	add	r4, pc, r4
   1bef8:	mov	r1, r4
   1befc:	bl	d850 <rb_radixtree_create@plt>
   1bf00:	ldr	r1, [pc, #120]	; 1bf80 <init_hash+0xdc>
   1bf04:	ldr	r1, [pc, r1]
   1bf08:	str	r0, [r1]
   1bf0c:	ldr	r0, [pc, #112]	; 1bf84 <init_hash+0xe0>
   1bf10:	add	r0, pc, r0
   1bf14:	mov	r1, r4
   1bf18:	bl	d850 <rb_radixtree_create@plt>
   1bf1c:	ldr	r1, [pc, #100]	; 1bf88 <init_hash+0xe4>
   1bf20:	ldr	r1, [pc, r1]
   1bf24:	str	r0, [r1]
   1bf28:	ldr	r0, [pc, #92]	; 1bf8c <init_hash+0xe8>
   1bf2c:	add	r0, pc, r0
   1bf30:	mov	r1, r4
   1bf34:	bl	d850 <rb_radixtree_create@plt>
   1bf38:	ldr	r1, [pc, #80]	; 1bf90 <init_hash+0xec>
   1bf3c:	ldr	r1, [pc, r1]
   1bf40:	str	r0, [r1]
   1bf44:	ldr	r0, [pc, #72]	; 1bf94 <init_hash+0xf0>
   1bf48:	add	r0, pc, r0
   1bf4c:	mov	r1, r4
   1bf50:	bl	d850 <rb_radixtree_create@plt>
   1bf54:	ldr	r1, [pc, #60]	; 1bf98 <init_hash+0xf4>
   1bf58:	ldr	r1, [pc, r1]
   1bf5c:	str	r0, [r1]
   1bf60:	pop	{r4, sl, fp, pc}
   1bf64:	.word	0x00025ca5
   1bf68:	.word	0x000000dc
   1bf6c:	.word	0x0003eb58
   1bf70:	.word	0x00025c93
   1bf74:	.word	0x0003ea74
   1bf78:	.word	0x00025c81
   1bf7c:	.word	0x000000a8
   1bf80:	.word	0x0003ea78
   1bf84:	.word	0x00025373
   1bf88:	.word	0x0003eb38
   1bf8c:	.word	0x00028730
   1bf90:	.word	0x0003ea6c
   1bf94:	.word	0x0002ab50
   1bf98:	.word	0x0003ea04

0001bf9c <rb_uint32cmp>:
   1bf9c:	sub	r0, r1, r0
   1bfa0:	bx	lr

0001bfa4 <irccasecanon>:
   1bfa4:	ldrb	r1, [r0]
   1bfa8:	cmp	r1, #0
   1bfac:	bxeq	lr
   1bfb0:	add	r0, r0, #1
   1bfb4:	ldr	r2, [pc, #32]	; 1bfdc <irccasecanon+0x38>
   1bfb8:	ldr	r2, [pc, r2]
   1bfbc:	uxtb	r1, r1
   1bfc0:	ldrb	r1, [r2, r1]
   1bfc4:	strb	r1, [r0, #-1]
   1bfc8:	ldrb	r1, [r0]
   1bfcc:	add	r0, r0, #1
   1bfd0:	cmp	r1, #0
   1bfd4:	bne	1bfbc <irccasecanon+0x18>
   1bfd8:	bx	lr
   1bfdc:	.word	0x0003e9b0

0001bfe0 <fnv_hash_upper>:
   1bfe0:	push	{fp, lr}
   1bfe4:	mov	fp, sp
   1bfe8:	mov	r2, r0
   1bfec:	ldrb	r3, [r0]
   1bff0:	movw	r0, #40389	; 0x9dc5
   1bff4:	movt	r0, #33052	; 0x811c
   1bff8:	cmp	r3, #0
   1bffc:	beq	1c030 <fnv_hash_upper+0x50>
   1c000:	add	r2, r2, #1
   1c004:	ldr	ip, [pc, #56]	; 1c044 <fnv_hash_upper+0x64>
   1c008:	ldr	ip, [pc, ip]
   1c00c:	movw	lr, #403	; 0x193
   1c010:	movt	lr, #256	; 0x100
   1c014:	uxtb	r3, r3
   1c018:	ldrb	r3, [ip, r3]
   1c01c:	eor	r0, r0, r3
   1c020:	mul	r0, r0, lr
   1c024:	ldrb	r3, [r2], #1
   1c028:	cmp	r3, #0
   1c02c:	bne	1c014 <fnv_hash_upper+0x34>
   1c030:	cmp	r1, #31
   1c034:	eorle	r0, r0, r0, lsr r1
   1c038:	mvnle	r2, #0
   1c03c:	bicle	r0, r0, r2, lsl r1
   1c040:	pop	{fp, pc}
   1c044:	.word	0x0003e960

0001c048 <fnv_hash>:
   1c048:	mov	r2, r0
   1c04c:	ldrb	r3, [r0]
   1c050:	movw	r0, #40389	; 0x9dc5
   1c054:	movt	r0, #33052	; 0x811c
   1c058:	cmp	r3, #0
   1c05c:	beq	1c084 <fnv_hash+0x3c>
   1c060:	add	r2, r2, #1
   1c064:	movw	ip, #403	; 0x193
   1c068:	movt	ip, #256	; 0x100
   1c06c:	uxtb	r3, r3
   1c070:	eor	r0, r0, r3
   1c074:	mul	r0, r0, ip
   1c078:	ldrb	r3, [r2], #1
   1c07c:	cmp	r3, #0
   1c080:	bne	1c06c <fnv_hash+0x24>
   1c084:	cmp	r1, #31
   1c088:	eorle	r0, r0, r0, lsr r1
   1c08c:	mvnle	r2, #0
   1c090:	bicle	r0, r0, r2, lsl r1
   1c094:	bx	lr

0001c098 <fnv_hash_len>:
   1c098:	push	{fp, lr}
   1c09c:	mov	fp, sp
   1c0a0:	mov	ip, r0
   1c0a4:	movw	r0, #40389	; 0x9dc5
   1c0a8:	movt	r0, #33052	; 0x811c
   1c0ac:	cmp	r2, #1
   1c0b0:	blt	1c0f0 <fnv_hash_len+0x58>
   1c0b4:	mov	lr, ip
   1c0b8:	ldrb	r3, [lr], r2
   1c0bc:	cmp	r3, #0
   1c0c0:	beq	1c0f0 <fnv_hash_len+0x58>
   1c0c4:	add	r2, ip, #1
   1c0c8:	movw	ip, #403	; 0x193
   1c0cc:	movt	ip, #256	; 0x100
   1c0d0:	uxtb	r3, r3
   1c0d4:	eor	r0, r0, r3
   1c0d8:	mul	r0, r0, ip
   1c0dc:	cmp	r2, lr
   1c0e0:	bcs	1c0f0 <fnv_hash_len+0x58>
   1c0e4:	ldrb	r3, [r2], #1
   1c0e8:	cmp	r3, #0
   1c0ec:	bne	1c0d0 <fnv_hash_len+0x38>
   1c0f0:	cmp	r1, #31
   1c0f4:	eorle	r0, r0, r0, lsr r1
   1c0f8:	mvnle	r2, #0
   1c0fc:	bicle	r0, r0, r2, lsl r1
   1c100:	pop	{fp, pc}

0001c104 <fnv_hash_upper_len>:
   1c104:	push	{r4, sl, fp, lr}
   1c108:	add	fp, sp, #8
   1c10c:	mov	ip, r0
   1c110:	movw	r0, #40389	; 0x9dc5
   1c114:	movt	r0, #33052	; 0x811c
   1c118:	cmp	r2, #1
   1c11c:	blt	1c168 <fnv_hash_upper_len+0x64>
   1c120:	mov	r3, ip
   1c124:	ldrb	r4, [r3], r2
   1c128:	cmp	r4, #0
   1c12c:	beq	1c168 <fnv_hash_upper_len+0x64>
   1c130:	add	r2, ip, #1
   1c134:	ldr	ip, [pc, #64]	; 1c17c <fnv_hash_upper_len+0x78>
   1c138:	ldr	ip, [pc, ip]
   1c13c:	movw	lr, #403	; 0x193
   1c140:	movt	lr, #256	; 0x100
   1c144:	uxtb	r4, r4
   1c148:	ldrb	r4, [ip, r4]
   1c14c:	eor	r0, r0, r4
   1c150:	mul	r0, r0, lr
   1c154:	cmp	r2, r3
   1c158:	bcs	1c168 <fnv_hash_upper_len+0x64>
   1c15c:	ldrb	r4, [r2], #1
   1c160:	cmp	r4, #0
   1c164:	bne	1c144 <fnv_hash_upper_len+0x40>
   1c168:	cmp	r1, #31
   1c16c:	eorle	r0, r0, r0, lsr r1
   1c170:	mvnle	r2, #0
   1c174:	bicle	r0, r0, r2, lsl r1
   1c178:	pop	{r4, sl, fp, pc}
   1c17c:	.word	0x0003e830

0001c180 <add_to_id_hash>:
   1c180:	cmp	r0, #0
   1c184:	movne	r2, r1
   1c188:	cmpne	r1, #0
   1c18c:	bne	1c194 <add_to_id_hash+0x14>
   1c190:	bx	lr
   1c194:	mov	r1, r0
   1c198:	ldrb	r0, [r0]
   1c19c:	cmp	r0, #0
   1c1a0:	bxeq	lr
   1c1a4:	ldr	r0, [pc, #8]	; 1c1b4 <add_to_id_hash+0x34>
   1c1a8:	ldr	r0, [pc, r0]
   1c1ac:	ldr	r0, [r0]
   1c1b0:	b	dd9c <rb_radixtree_add@plt>
   1c1b4:	.word	0x0003e7ac

0001c1b8 <add_to_client_hash>:
   1c1b8:	cmp	r0, #0
   1c1bc:	movne	r2, r1
   1c1c0:	cmpne	r1, #0
   1c1c4:	bne	1c1cc <add_to_client_hash+0x14>
   1c1c8:	bx	lr
   1c1cc:	mov	r1, r0
   1c1d0:	ldrb	r0, [r0]
   1c1d4:	cmp	r0, #0
   1c1d8:	bxeq	lr
   1c1dc:	ldr	r0, [pc, #8]	; 1c1ec <add_to_client_hash+0x34>
   1c1e0:	ldr	r0, [pc, r0]
   1c1e4:	ldr	r0, [r0]
   1c1e8:	b	dd9c <rb_radixtree_add@plt>
   1c1ec:	.word	0x0003e79c

0001c1f0 <add_to_hostname_hash>:
   1c1f0:	push	{r4, r5, r6, r7, fp, lr}
   1c1f4:	add	fp, sp, #16
   1c1f8:	cmp	r0, #0
   1c1fc:	beq	1c218 <add_to_hostname_hash+0x28>
   1c200:	mov	r4, r1
   1c204:	cmp	r1, #0
   1c208:	movne	r5, r0
   1c20c:	ldrbne	r0, [r0]
   1c210:	cmpne	r0, #0
   1c214:	bne	1c21c <add_to_hostname_hash+0x2c>
   1c218:	pop	{r4, r5, r6, r7, fp, pc}
   1c21c:	ldr	r7, [pc, #76]	; 1c270 <add_to_hostname_hash+0x80>
   1c220:	ldr	r7, [pc, r7]
   1c224:	ldr	r0, [r7]
   1c228:	mov	r1, r5
   1c22c:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c230:	cmp	r0, #0
   1c234:	beq	1c240 <add_to_hostname_hash+0x50>
   1c238:	mov	r6, r0
   1c23c:	b	1c258 <add_to_hostname_hash+0x68>
   1c240:	bl	1c364 <rb_malloc>
   1c244:	mov	r6, r0
   1c248:	ldr	r0, [r7]
   1c24c:	mov	r1, r5
   1c250:	mov	r2, r6
   1c254:	bl	dd9c <rb_radixtree_add@plt>
   1c258:	bl	dc58 <rb_make_rb_dlink_node@plt>
   1c25c:	mov	r1, r0
   1c260:	mov	r0, r4
   1c264:	mov	r2, r6
   1c268:	pop	{r4, r5, r6, r7, fp, lr}
   1c26c:	b	1c274 <rb_dlinkAdd>
   1c270:	.word	0x0003e73c

0001c274 <rb_dlinkAdd>:
   1c274:	push	{fp, lr}
   1c278:	mov	fp, sp
   1c27c:	cmp	r0, #0
   1c280:	beq	1c2e0 <rb_dlinkAdd+0x6c>
   1c284:	cmp	r1, #0
   1c288:	beq	1c300 <rb_dlinkAdd+0x8c>
   1c28c:	cmp	r2, #0
   1c290:	beq	1c320 <rb_dlinkAdd+0xac>
   1c294:	mov	r3, #0
   1c298:	stm	r1, {r0, r3}
   1c29c:	ldr	r0, [r2]
   1c2a0:	str	r0, [r1, #8]
   1c2a4:	ldr	r0, [r2]
   1c2a8:	cmp	r0, #0
   1c2ac:	beq	1c2bc <rb_dlinkAdd+0x48>
   1c2b0:	add	r0, r0, #4
   1c2b4:	str	r1, [r0]
   1c2b8:	b	1c2cc <rb_dlinkAdd+0x58>
   1c2bc:	mov	r0, r2
   1c2c0:	ldr	r3, [r0, #4]!
   1c2c4:	cmp	r3, #0
   1c2c8:	streq	r1, [r0]
   1c2cc:	str	r1, [r2]
   1c2d0:	ldr	r0, [r2, #8]
   1c2d4:	add	r0, r0, #1
   1c2d8:	str	r0, [r2, #8]
   1c2dc:	pop	{fp, pc}
   1c2e0:	ldr	r0, [pc, #88]	; 1c340 <rb_dlinkAdd+0xcc>
   1c2e4:	add	r0, pc, r0
   1c2e8:	ldr	r1, [pc, #84]	; 1c344 <rb_dlinkAdd+0xd0>
   1c2ec:	add	r1, pc, r1
   1c2f0:	ldr	r3, [pc, #80]	; 1c348 <rb_dlinkAdd+0xd4>
   1c2f4:	add	r3, pc, r3
   1c2f8:	mov	r2, #143	; 0x8f
   1c2fc:	bl	e7e0 <__assert_fail@plt>
   1c300:	ldr	r0, [pc, #68]	; 1c34c <rb_dlinkAdd+0xd8>
   1c304:	add	r0, pc, r0
   1c308:	ldr	r1, [pc, #64]	; 1c350 <rb_dlinkAdd+0xdc>
   1c30c:	add	r1, pc, r1
   1c310:	ldr	r3, [pc, #60]	; 1c354 <rb_dlinkAdd+0xe0>
   1c314:	add	r3, pc, r3
   1c318:	mov	r2, #144	; 0x90
   1c31c:	bl	e7e0 <__assert_fail@plt>
   1c320:	ldr	r0, [pc, #48]	; 1c358 <rb_dlinkAdd+0xe4>
   1c324:	add	r0, pc, r0
   1c328:	ldr	r1, [pc, #44]	; 1c35c <rb_dlinkAdd+0xe8>
   1c32c:	add	r1, pc, r1
   1c330:	ldr	r3, [pc, #40]	; 1c360 <rb_dlinkAdd+0xec>
   1c334:	add	r3, pc, r3
   1c338:	mov	r2, #145	; 0x91
   1c33c:	bl	e7e0 <__assert_fail@plt>
   1c340:	.word	0x0002468d
   1c344:	.word	0x0002462a
   1c348:	.word	0x0002468a
   1c34c:	.word	0x00024608
   1c350:	.word	0x0002460a
   1c354:	.word	0x0002466a
   1c358:	.word	0x00029e71
   1c35c:	.word	0x000245ea
   1c360:	.word	0x0002464a

0001c364 <rb_malloc>:
   1c364:	push	{fp, lr}
   1c368:	mov	fp, sp
   1c36c:	mov	r0, #1
   1c370:	mov	r1, #12
   1c374:	bl	cfa4 <calloc@plt>
   1c378:	cmp	r0, #0
   1c37c:	popne	{fp, pc}
   1c380:	bl	d448 <rb_outofmemory@plt>

0001c384 <add_to_resv_hash>:
   1c384:	cmp	r0, #0
   1c388:	movne	r2, r1
   1c38c:	cmpne	r1, #0
   1c390:	bne	1c398 <add_to_resv_hash+0x14>
   1c394:	bx	lr
   1c398:	mov	r1, r0
   1c39c:	ldrb	r0, [r0]
   1c3a0:	cmp	r0, #0
   1c3a4:	bxeq	lr
   1c3a8:	ldr	r0, [pc, #8]	; 1c3b8 <add_to_resv_hash+0x34>
   1c3ac:	ldr	r0, [pc, r0]
   1c3b0:	ldr	r0, [r0]
   1c3b4:	b	dd9c <rb_radixtree_add@plt>
   1c3b8:	.word	0x0003e5fc

0001c3bc <del_from_id_hash>:
   1c3bc:	cmp	r0, #0
   1c3c0:	cmpne	r1, #0
   1c3c4:	bne	1c3cc <del_from_id_hash+0x10>
   1c3c8:	bx	lr
   1c3cc:	mov	r2, r0
   1c3d0:	ldrb	r0, [r0]
   1c3d4:	cmp	r0, #0
   1c3d8:	bxeq	lr
   1c3dc:	ldr	r0, [pc, #12]	; 1c3f0 <del_from_id_hash+0x34>
   1c3e0:	ldr	r0, [pc, r0]
   1c3e4:	ldr	r0, [r0]
   1c3e8:	mov	r1, r2
   1c3ec:	b	e0c0 <rb_radixtree_delete@plt>
   1c3f0:	.word	0x0003e574

0001c3f4 <del_from_client_hash>:
   1c3f4:	cmp	r0, #0
   1c3f8:	cmpne	r1, #0
   1c3fc:	bne	1c404 <del_from_client_hash+0x10>
   1c400:	bx	lr
   1c404:	mov	r2, r0
   1c408:	ldrb	r0, [r0]
   1c40c:	cmp	r0, #0
   1c410:	bxeq	lr
   1c414:	ldr	r0, [pc, #12]	; 1c428 <del_from_client_hash+0x34>
   1c418:	ldr	r0, [pc, r0]
   1c41c:	ldr	r0, [r0]
   1c420:	mov	r1, r2
   1c424:	b	e0c0 <rb_radixtree_delete@plt>
   1c428:	.word	0x0003e564

0001c42c <del_from_channel_hash>:
   1c42c:	cmp	r0, #0
   1c430:	cmpne	r1, #0
   1c434:	bne	1c43c <del_from_channel_hash+0x10>
   1c438:	bx	lr
   1c43c:	mov	r2, r0
   1c440:	ldrb	r0, [r0]
   1c444:	cmp	r0, #0
   1c448:	bxeq	lr
   1c44c:	ldr	r0, [pc, #12]	; 1c460 <del_from_channel_hash+0x34>
   1c450:	ldr	r0, [pc, r0]
   1c454:	ldr	r0, [r0]
   1c458:	mov	r1, r2
   1c45c:	b	e0c0 <rb_radixtree_delete@plt>
   1c460:	.word	0x0003e608

0001c464 <del_from_hostname_hash>:
   1c464:	push	{r4, r5, r6, r7, fp, lr}
   1c468:	add	fp, sp, #16
   1c46c:	cmp	r0, #0
   1c470:	movne	r5, r1
   1c474:	cmpne	r1, #0
   1c478:	bne	1c480 <del_from_hostname_hash+0x1c>
   1c47c:	pop	{r4, r5, r6, r7, fp, pc}
   1c480:	mov	r4, r0
   1c484:	ldr	r7, [pc, #72]	; 1c4d4 <del_from_hostname_hash+0x70>
   1c488:	ldr	r7, [pc, r7]
   1c48c:	ldr	r0, [r7]
   1c490:	mov	r1, r4
   1c494:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c498:	cmp	r0, #0
   1c49c:	beq	1c47c <del_from_hostname_hash+0x18>
   1c4a0:	mov	r6, r0
   1c4a4:	mov	r0, r5
   1c4a8:	mov	r1, r6
   1c4ac:	bl	1c4d8 <rb_dlinkFindDestroy>
   1c4b0:	ldr	r0, [r6, #8]
   1c4b4:	cmp	r0, #0
   1c4b8:	popne	{r4, r5, r6, r7, fp, pc}
   1c4bc:	ldr	r0, [r7]
   1c4c0:	mov	r1, r4
   1c4c4:	bl	e0c0 <rb_radixtree_delete@plt>
   1c4c8:	mov	r0, r6
   1c4cc:	pop	{r4, r5, r6, r7, fp, lr}
   1c4d0:	b	1c55c <rb_free>
   1c4d4:	.word	0x0003e4d4

0001c4d8 <rb_dlinkFindDestroy>:
   1c4d8:	push	{fp, lr}
   1c4dc:	mov	fp, sp
   1c4e0:	cmp	r1, #0
   1c4e4:	beq	1c504 <rb_dlinkFindDestroy+0x2c>
   1c4e8:	cmp	r0, #0
   1c4ec:	beq	1c524 <rb_dlinkFindDestroy+0x4c>
   1c4f0:	bl	1c9f8 <rb_dlinkFindDelete>
   1c4f4:	cmp	r0, #0
   1c4f8:	popeq	{fp, pc}
   1c4fc:	pop	{fp, lr}
   1c500:	b	d7b4 <rb_free_rb_dlink_node@plt>
   1c504:	ldr	r0, [pc, #56]	; 1c544 <rb_dlinkFindDestroy+0x6c>
   1c508:	add	r0, pc, r0
   1c50c:	ldr	r1, [pc, #52]	; 1c548 <rb_dlinkFindDestroy+0x70>
   1c510:	add	r1, pc, r1
   1c514:	ldr	r3, [pc, #48]	; 1c54c <rb_dlinkFindDestroy+0x74>
   1c518:	add	r3, pc, r3
   1c51c:	movw	r2, #287	; 0x11f
   1c520:	bl	e7e0 <__assert_fail@plt>
   1c524:	ldr	r0, [pc, #36]	; 1c550 <rb_dlinkFindDestroy+0x78>
   1c528:	add	r0, pc, r0
   1c52c:	ldr	r1, [pc, #32]	; 1c554 <rb_dlinkFindDestroy+0x7c>
   1c530:	add	r1, pc, r1
   1c534:	ldr	r3, [pc, #28]	; 1c558 <rb_dlinkFindDestroy+0x80>
   1c538:	add	r3, pc, r3
   1c53c:	mov	r2, #288	; 0x120
   1c540:	bl	e7e0 <__assert_fail@plt>
   1c544:	.word	0x00029c8d
   1c548:	.word	0x00024406
   1c54c:	.word	0x00024a0d
   1c550:	.word	0x00024449
   1c554:	.word	0x000243e6
   1c558:	.word	0x000249ed

0001c55c <rb_free>:
   1c55c:	cmp	r0, #0
   1c560:	bxeq	lr
   1c564:	b	d328 <free@plt>

0001c568 <del_from_resv_hash>:
   1c568:	cmp	r0, #0
   1c56c:	cmpne	r1, #0
   1c570:	bne	1c578 <del_from_resv_hash+0x10>
   1c574:	bx	lr
   1c578:	mov	r2, r0
   1c57c:	ldrb	r0, [r0]
   1c580:	cmp	r0, #0
   1c584:	bxeq	lr
   1c588:	ldr	r0, [pc, #12]	; 1c59c <del_from_resv_hash+0x34>
   1c58c:	ldr	r0, [pc, r0]
   1c590:	ldr	r0, [r0]
   1c594:	mov	r1, r2
   1c598:	b	e0c0 <rb_radixtree_delete@plt>
   1c59c:	.word	0x0003e41c

0001c5a0 <find_id>:
   1c5a0:	cmp	r0, #0
   1c5a4:	beq	1c5c8 <find_id+0x28>
   1c5a8:	mov	r1, r0
   1c5ac:	ldrb	r0, [r0]
   1c5b0:	cmp	r0, #0
   1c5b4:	beq	1c5c8 <find_id+0x28>
   1c5b8:	ldr	r0, [pc, #16]	; 1c5d0 <find_id+0x30>
   1c5bc:	ldr	r0, [pc, r0]
   1c5c0:	ldr	r0, [r0]
   1c5c4:	b	dee0 <rb_radixtree_retrieve@plt>
   1c5c8:	mov	r0, #0
   1c5cc:	bx	lr
   1c5d0:	.word	0x0003e398

0001c5d4 <find_client>:
   1c5d4:	cmp	r0, #0
   1c5d8:	beq	1c610 <find_client+0x3c>
   1c5dc:	mov	r1, r0
   1c5e0:	ldrb	r0, [r0]
   1c5e4:	cmp	r0, #0
   1c5e8:	beq	1c610 <find_client+0x3c>
   1c5ec:	ldr	r2, [pc, #44]	; 1c620 <find_client+0x4c>
   1c5f0:	ldr	r2, [pc, r2]
   1c5f4:	ldrb	r0, [r2, r0, lsl #2]
   1c5f8:	tst	r0, #16
   1c5fc:	bne	1c618 <find_client+0x44>
   1c600:	ldr	r0, [pc, #28]	; 1c624 <find_client+0x50>
   1c604:	ldr	r0, [pc, r0]
   1c608:	ldr	r0, [r0]
   1c60c:	b	dee0 <rb_radixtree_retrieve@plt>
   1c610:	mov	r0, #0
   1c614:	bx	lr
   1c618:	mov	r0, r1
   1c61c:	b	1c5a0 <find_id>
   1c620:	.word	0x0003e408
   1c624:	.word	0x0003e378

0001c628 <find_named_client>:
   1c628:	cmp	r0, #0
   1c62c:	beq	1c650 <find_named_client+0x28>
   1c630:	mov	r1, r0
   1c634:	ldrb	r0, [r0]
   1c638:	cmp	r0, #0
   1c63c:	beq	1c650 <find_named_client+0x28>
   1c640:	ldr	r0, [pc, #16]	; 1c658 <find_named_client+0x30>
   1c644:	ldr	r0, [pc, r0]
   1c648:	ldr	r0, [r0]
   1c64c:	b	dee0 <rb_radixtree_retrieve@plt>
   1c650:	mov	r0, #0
   1c654:	bx	lr
   1c658:	.word	0x0003e338

0001c65c <find_server>:
   1c65c:	push	{r4, sl, fp, lr}
   1c660:	add	fp, sp, #8
   1c664:	mov	r4, r1
   1c668:	mov	r1, r0
   1c66c:	mov	r0, #0
   1c670:	cmp	r4, #0
   1c674:	beq	1c700 <find_server+0xa4>
   1c678:	ldrb	r2, [r4]
   1c67c:	cmp	r2, #0
   1c680:	beq	1c700 <find_server+0xa4>
   1c684:	cmp	r1, #0
   1c688:	beq	1c6a4 <find_server+0x48>
   1c68c:	ldrb	r0, [r1, #65]	; 0x41
   1c690:	tst	r0, #32
   1c694:	beq	1c6a4 <find_server+0x48>
   1c698:	ldrh	r0, [r1, #80]	; 0x50
   1c69c:	cmp	r0, #64	; 0x40
   1c6a0:	beq	1c6d4 <find_server+0x78>
   1c6a4:	ldr	r0, [pc, #96]	; 1c70c <find_server+0xb0>
   1c6a8:	ldr	r0, [pc, r0]
   1c6ac:	ldrb	r0, [r0, r2, lsl #2]
   1c6b0:	tst	r0, #16
   1c6b4:	beq	1c6d4 <find_server+0x78>
   1c6b8:	mov	r0, r4
   1c6bc:	bl	dc94 <strlen@plt>
   1c6c0:	cmp	r0, #3
   1c6c4:	bne	1c6d4 <find_server+0x78>
   1c6c8:	mov	r0, r4
   1c6cc:	pop	{r4, sl, fp, lr}
   1c6d0:	b	1c5a0 <find_id>
   1c6d4:	ldr	r0, [pc, #52]	; 1c710 <find_server+0xb4>
   1c6d8:	ldr	r0, [pc, r0]
   1c6dc:	ldr	r0, [r0]
   1c6e0:	mov	r1, r4
   1c6e4:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c6e8:	cmp	r0, #0
   1c6ec:	beq	1c704 <find_server+0xa8>
   1c6f0:	ldrh	r1, [r0, #80]	; 0x50
   1c6f4:	cmp	r1, #4
   1c6f8:	cmpne	r1, #32
   1c6fc:	bne	1c704 <find_server+0xa8>
   1c700:	pop	{r4, sl, fp, pc}
   1c704:	mov	r0, #0
   1c708:	pop	{r4, sl, fp, pc}
   1c70c:	.word	0x0003e350
   1c710:	.word	0x0003e2a4

0001c714 <find_hostname>:
   1c714:	push	{r4, sl, fp, lr}
   1c718:	add	fp, sp, #8
   1c71c:	mov	r4, #0
   1c720:	cmp	r0, #0
   1c724:	beq	1c750 <find_hostname+0x3c>
   1c728:	mov	r1, r0
   1c72c:	ldrb	r0, [r0]
   1c730:	cmp	r0, #0
   1c734:	beq	1c750 <find_hostname+0x3c>
   1c738:	ldr	r0, [pc, #24]	; 1c758 <find_hostname+0x44>
   1c73c:	ldr	r0, [pc, r0]
   1c740:	ldr	r0, [r0]
   1c744:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c748:	cmp	r0, #0
   1c74c:	ldrne	r4, [r0]
   1c750:	mov	r0, r4
   1c754:	pop	{r4, sl, fp, pc}
   1c758:	.word	0x0003e220

0001c75c <find_channel>:
   1c75c:	cmp	r0, #0
   1c760:	beq	1c784 <find_channel+0x28>
   1c764:	mov	r1, r0
   1c768:	ldrb	r0, [r0]
   1c76c:	cmp	r0, #0
   1c770:	beq	1c784 <find_channel+0x28>
   1c774:	ldr	r0, [pc, #16]	; 1c78c <find_channel+0x30>
   1c778:	ldr	r0, [pc, r0]
   1c77c:	ldr	r0, [r0]
   1c780:	b	dee0 <rb_radixtree_retrieve@plt>
   1c784:	mov	r0, #0
   1c788:	bx	lr
   1c78c:	.word	0x0003e2e0

0001c790 <get_or_create_channel>:
   1c790:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c794:	add	fp, sp, #24
   1c798:	mov	r6, #0
   1c79c:	cmp	r1, #0
   1c7a0:	beq	1c8a8 <get_or_create_channel+0x118>
   1c7a4:	mov	r5, r1
   1c7a8:	mov	r7, r0
   1c7ac:	ldrb	r0, [r1]
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1c8a8 <get_or_create_channel+0x118>
   1c7b8:	mov	r4, r2
   1c7bc:	mov	r0, r5
   1c7c0:	bl	dc94 <strlen@plt>
   1c7c4:	cmp	r0, #201	; 0xc9
   1c7c8:	blt	1c830 <get_or_create_channel+0xa0>
   1c7cc:	ldrh	r1, [r7, #80]	; 0x50
   1c7d0:	cmp	r1, #32
   1c7d4:	bne	1c800 <get_or_create_channel+0x70>
   1c7d8:	sub	sp, sp, #16
   1c7dc:	mov	r1, #200	; 0xc8
   1c7e0:	stm	sp, {r0, r1, r5}
   1c7e4:	add	r3, r7, #88	; 0x58
   1c7e8:	ldr	r2, [pc, #196]	; 1c8b4 <get_or_create_channel+0x124>
   1c7ec:	add	r2, pc, r2
   1c7f0:	mov	r0, #8
   1c7f4:	mov	r1, #0
   1c7f8:	bl	d634 <sendto_realops_snomask@plt>
   1c7fc:	add	sp, sp, #16
   1c800:	mov	r0, r5
   1c804:	bl	dc94 <strlen@plt>
   1c808:	add	r0, r0, #8
   1c80c:	bic	r0, r0, #7
   1c810:	sub	r7, sp, r0
   1c814:	mov	sp, r7
   1c818:	mov	r0, r7
   1c81c:	mov	r1, r5
   1c820:	bl	d91c <strcpy@plt>
   1c824:	mov	r0, #0
   1c828:	strb	r0, [r7, #200]	; 0xc8
   1c82c:	b	1c834 <get_or_create_channel+0xa4>
   1c830:	mov	r7, r5
   1c834:	ldr	r5, [pc, #124]	; 1c8b8 <get_or_create_channel+0x128>
   1c838:	ldr	r5, [pc, r5]
   1c83c:	ldr	r0, [r5]
   1c840:	mov	r1, r7
   1c844:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c848:	cmp	r0, #0
   1c84c:	beq	1c864 <get_or_create_channel+0xd4>
   1c850:	mov	r6, r0
   1c854:	cmp	r4, #0
   1c858:	movne	r0, #0
   1c85c:	strbne	r0, [r4]
   1c860:	b	1c8a8 <get_or_create_channel+0x118>
   1c864:	cmp	r4, #0
   1c868:	movne	r0, #1
   1c86c:	strbne	r0, [r4]
   1c870:	mov	r0, r7
   1c874:	bl	d1a8 <allocate_channel@plt>
   1c878:	mov	r6, r0
   1c87c:	bl	d07c <rb_current_time@plt>
   1c880:	str	r0, [r6, #232]	; 0xe8
   1c884:	ldr	r2, [pc, #48]	; 1c8bc <get_or_create_channel+0x12c>
   1c888:	ldr	r2, [pc, r2]
   1c88c:	mov	r0, r6
   1c890:	mov	r1, r6
   1c894:	bl	1c274 <rb_dlinkAdd>
   1c898:	ldr	r1, [r6, #236]	; 0xec
   1c89c:	ldr	r0, [r5]
   1c8a0:	mov	r2, r6
   1c8a4:	bl	dd9c <rb_radixtree_add@plt>
   1c8a8:	mov	r0, r6
   1c8ac:	sub	sp, fp, #24
   1c8b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c8b4:	.word	0x0002538d
   1c8b8:	.word	0x0003e220
   1c8bc:	.word	0x0003e0e4

0001c8c0 <hash_find_resv>:
   1c8c0:	push	{r4, sl, fp, lr}
   1c8c4:	add	fp, sp, #8
   1c8c8:	mov	r4, #0
   1c8cc:	cmp	r0, #0
   1c8d0:	beq	1c90c <hash_find_resv+0x4c>
   1c8d4:	mov	r1, r0
   1c8d8:	ldrb	r0, [r0]
   1c8dc:	cmp	r0, #0
   1c8e0:	beq	1c90c <hash_find_resv+0x4c>
   1c8e4:	ldr	r0, [pc, #40]	; 1c914 <hash_find_resv+0x54>
   1c8e8:	ldr	r0, [pc, r0]
   1c8ec:	ldr	r0, [r0]
   1c8f0:	bl	dee0 <rb_radixtree_retrieve@plt>
   1c8f4:	cmp	r0, #0
   1c8f8:	beq	1c90c <hash_find_resv+0x4c>
   1c8fc:	ldr	r1, [r0, #32]
   1c900:	add	r1, r1, #1
   1c904:	str	r1, [r0, #32]
   1c908:	mov	r4, r0
   1c90c:	mov	r0, r4
   1c910:	pop	{r4, sl, fp, pc}
   1c914:	.word	0x0003e0c0

0001c918 <clear_resv_hash>:
   1c918:	push	{r4, r5, r6, sl, fp, lr}
   1c91c:	add	fp, sp, #16
   1c920:	sub	sp, sp, #40	; 0x28
   1c924:	ldr	r6, [pc, #128]	; 1c9ac <clear_resv_hash+0x94>
   1c928:	ldr	r6, [pc, r6]
   1c92c:	ldr	r0, [r6]
   1c930:	mov	r4, sp
   1c934:	mov	r1, r4
   1c938:	bl	e318 <rb_radixtree_foreach_start@plt>
   1c93c:	ldr	r0, [r6]
   1c940:	mov	r1, r4
   1c944:	bl	e06c <rb_radixtree_foreach_cur@plt>
   1c948:	cmp	r0, #0
   1c94c:	beq	1c9a4 <clear_resv_hash+0x8c>
   1c950:	mov	r5, r0
   1c954:	mov	r4, sp
   1c958:	b	1c980 <clear_resv_hash+0x68>
   1c95c:	ldr	r0, [r6]
   1c960:	mov	r1, r4
   1c964:	bl	d574 <rb_radixtree_foreach_next@plt>
   1c968:	ldr	r0, [r6]
   1c96c:	mov	r1, r4
   1c970:	bl	e06c <rb_radixtree_foreach_cur@plt>
   1c974:	mov	r5, r0
   1c978:	cmp	r0, #0
   1c97c:	beq	1c9a4 <clear_resv_hash+0x8c>
   1c980:	ldr	r0, [r5, #36]	; 0x24
   1c984:	cmp	r0, #0
   1c988:	bne	1c95c <clear_resv_hash+0x44>
   1c98c:	ldr	r1, [r5, #16]
   1c990:	ldr	r0, [r6]
   1c994:	bl	e0c0 <rb_radixtree_delete@plt>
   1c998:	mov	r0, r5
   1c99c:	bl	dc34 <free_conf@plt>
   1c9a0:	b	1c95c <clear_resv_hash+0x44>
   1c9a4:	sub	sp, fp, #16
   1c9a8:	pop	{r4, r5, r6, sl, fp, pc}
   1c9ac:	.word	0x0003e080

0001c9b0 <add_to_cli_connid_hash>:
   1c9b0:	mov	r2, r0
   1c9b4:	ldr	r0, [pc, #8]	; 1c9c4 <add_to_cli_connid_hash+0x14>
   1c9b8:	ldr	r0, [pc, r0]
   1c9bc:	ldr	r0, [r0]
   1c9c0:	b	d700 <rb_dictionary_add@plt>
   1c9c4:	.word	0x0003e064

0001c9c8 <del_from_cli_connid_hash>:
   1c9c8:	mov	r1, r0
   1c9cc:	ldr	r0, [pc, #8]	; 1c9dc <del_from_cli_connid_hash+0x14>
   1c9d0:	ldr	r0, [pc, r0]
   1c9d4:	ldr	r0, [r0]
   1c9d8:	b	d82c <rb_dictionary_delete@plt>
   1c9dc:	.word	0x0003e04c

0001c9e0 <find_cli_connid_hash>:
   1c9e0:	mov	r1, r0
   1c9e4:	ldr	r0, [pc, #8]	; 1c9f4 <find_cli_connid_hash+0x14>
   1c9e8:	ldr	r0, [pc, r0]
   1c9ec:	ldr	r0, [r0]
   1c9f0:	b	e6e4 <rb_dictionary_retrieve@plt>
   1c9f4:	.word	0x0003e034

0001c9f8 <rb_dlinkFindDelete>:
   1c9f8:	push	{fp, lr}
   1c9fc:	mov	fp, sp
   1ca00:	cmp	r1, #0
   1ca04:	beq	1ca78 <rb_dlinkFindDelete+0x80>
   1ca08:	mov	ip, r0
   1ca0c:	cmp	r0, #0
   1ca10:	beq	1ca98 <rb_dlinkFindDelete+0xa0>
   1ca14:	ldr	r3, [r1]
   1ca18:	mov	r0, r3
   1ca1c:	cmp	r3, #0
   1ca20:	beq	1ca74 <rb_dlinkFindDelete+0x7c>
   1ca24:	ldr	r2, [r0]
   1ca28:	ldr	r3, [r0, #8]
   1ca2c:	cmp	r2, ip
   1ca30:	bne	1ca18 <rb_dlinkFindDelete+0x20>
   1ca34:	add	r2, r3, #4
   1ca38:	cmp	r3, #0
   1ca3c:	addeq	r2, r1, #4
   1ca40:	ldr	r3, [r0, #4]
   1ca44:	str	r3, [r2]
   1ca48:	ldmib	r0, {r2, ip}
   1ca4c:	cmp	r2, #0
   1ca50:	mov	r3, r1
   1ca54:	addne	r3, r2, #8
   1ca58:	str	ip, [r3]
   1ca5c:	mov	r2, #0
   1ca60:	str	r2, [r0, #4]
   1ca64:	str	r2, [r0, #8]
   1ca68:	ldr	r2, [r1, #8]
   1ca6c:	sub	r2, r2, #1
   1ca70:	str	r2, [r1, #8]
   1ca74:	pop	{fp, pc}
   1ca78:	ldr	r0, [pc, #56]	; 1cab8 <rb_dlinkFindDelete+0xc0>
   1ca7c:	add	r0, pc, r0
   1ca80:	ldr	r1, [pc, #52]	; 1cabc <rb_dlinkFindDelete+0xc4>
   1ca84:	add	r1, pc, r1
   1ca88:	ldr	r3, [pc, #48]	; 1cac0 <rb_dlinkFindDelete+0xc8>
   1ca8c:	add	r3, pc, r3
   1ca90:	movw	r2, #258	; 0x102
   1ca94:	bl	e7e0 <__assert_fail@plt>
   1ca98:	ldr	r0, [pc, #36]	; 1cac4 <rb_dlinkFindDelete+0xcc>
   1ca9c:	add	r0, pc, r0
   1caa0:	ldr	r1, [pc, #32]	; 1cac8 <rb_dlinkFindDelete+0xd0>
   1caa4:	add	r1, pc, r1
   1caa8:	ldr	r3, [pc, #28]	; 1cacc <rb_dlinkFindDelete+0xd4>
   1caac:	add	r3, pc, r3
   1cab0:	movw	r2, #259	; 0x103
   1cab4:	bl	e7e0 <__assert_fail@plt>
   1cab8:	.word	0x00029719
   1cabc:	.word	0x00023e92
   1cac0:	.word	0x000244ca
   1cac4:	.word	0x00023ed5
   1cac8:	.word	0x00023e72
   1cacc:	.word	0x000244aa

0001cad0 <init_hook>:
   1cad0:	push	{fp, lr}
   1cad4:	mov	fp, sp
   1cad8:	mov	r0, #16000	; 0x3e80
   1cadc:	bl	1cd34 <rb_malloc>
   1cae0:	ldr	r1, [pc, #440]	; 1cca0 <init_hook+0x1d0>
   1cae4:	ldr	r1, [pc, r1]
   1cae8:	str	r0, [r1]
   1caec:	ldr	r0, [pc, #432]	; 1cca4 <init_hook+0x1d4>
   1caf0:	add	r0, pc, r0
   1caf4:	bl	dbb0 <register_hook@plt>
   1caf8:	ldr	r1, [pc, #424]	; 1cca8 <init_hook+0x1d8>
   1cafc:	ldr	r1, [pc, r1]
   1cb00:	str	r0, [r1]
   1cb04:	ldr	r0, [pc, #416]	; 1ccac <init_hook+0x1dc>
   1cb08:	add	r0, pc, r0
   1cb0c:	bl	dbb0 <register_hook@plt>
   1cb10:	ldr	r1, [pc, #408]	; 1ccb0 <init_hook+0x1e0>
   1cb14:	ldr	r1, [pc, r1]
   1cb18:	str	r0, [r1]
   1cb1c:	ldr	r0, [pc, #400]	; 1ccb4 <init_hook+0x1e4>
   1cb20:	add	r0, pc, r0
   1cb24:	bl	dbb0 <register_hook@plt>
   1cb28:	ldr	r1, [pc, #392]	; 1ccb8 <init_hook+0x1e8>
   1cb2c:	ldr	r1, [pc, r1]
   1cb30:	str	r0, [r1]
   1cb34:	ldr	r0, [pc, #384]	; 1ccbc <init_hook+0x1ec>
   1cb38:	add	r0, pc, r0
   1cb3c:	bl	dbb0 <register_hook@plt>
   1cb40:	ldr	r1, [pc, #376]	; 1ccc0 <init_hook+0x1f0>
   1cb44:	ldr	r1, [pc, r1]
   1cb48:	str	r0, [r1]
   1cb4c:	ldr	r0, [pc, #368]	; 1ccc4 <init_hook+0x1f4>
   1cb50:	add	r0, pc, r0
   1cb54:	bl	dbb0 <register_hook@plt>
   1cb58:	ldr	r1, [pc, #360]	; 1ccc8 <init_hook+0x1f8>
   1cb5c:	ldr	r1, [pc, r1]
   1cb60:	str	r0, [r1]
   1cb64:	ldr	r0, [pc, #352]	; 1cccc <init_hook+0x1fc>
   1cb68:	add	r0, pc, r0
   1cb6c:	bl	dbb0 <register_hook@plt>
   1cb70:	ldr	r1, [pc, #344]	; 1ccd0 <init_hook+0x200>
   1cb74:	ldr	r1, [pc, r1]
   1cb78:	str	r0, [r1]
   1cb7c:	ldr	r0, [pc, #336]	; 1ccd4 <init_hook+0x204>
   1cb80:	add	r0, pc, r0
   1cb84:	bl	dbb0 <register_hook@plt>
   1cb88:	ldr	r1, [pc, #328]	; 1ccd8 <init_hook+0x208>
   1cb8c:	ldr	r1, [pc, r1]
   1cb90:	str	r0, [r1]
   1cb94:	ldr	r0, [pc, #320]	; 1ccdc <init_hook+0x20c>
   1cb98:	add	r0, pc, r0
   1cb9c:	bl	dbb0 <register_hook@plt>
   1cba0:	ldr	r1, [pc, #312]	; 1cce0 <init_hook+0x210>
   1cba4:	ldr	r1, [pc, r1]
   1cba8:	str	r0, [r1]
   1cbac:	ldr	r0, [pc, #304]	; 1cce4 <init_hook+0x214>
   1cbb0:	add	r0, pc, r0
   1cbb4:	bl	dbb0 <register_hook@plt>
   1cbb8:	ldr	r1, [pc, #296]	; 1cce8 <init_hook+0x218>
   1cbbc:	ldr	r1, [pc, r1]
   1cbc0:	str	r0, [r1]
   1cbc4:	ldr	r0, [pc, #288]	; 1ccec <init_hook+0x21c>
   1cbc8:	add	r0, pc, r0
   1cbcc:	bl	dbb0 <register_hook@plt>
   1cbd0:	ldr	r1, [pc, #280]	; 1ccf0 <init_hook+0x220>
   1cbd4:	ldr	r1, [pc, r1]
   1cbd8:	str	r0, [r1]
   1cbdc:	ldr	r0, [pc, #272]	; 1ccf4 <init_hook+0x224>
   1cbe0:	add	r0, pc, r0
   1cbe4:	bl	dbb0 <register_hook@plt>
   1cbe8:	ldr	r1, [pc, #264]	; 1ccf8 <init_hook+0x228>
   1cbec:	ldr	r1, [pc, r1]
   1cbf0:	str	r0, [r1]
   1cbf4:	ldr	r0, [pc, #256]	; 1ccfc <init_hook+0x22c>
   1cbf8:	add	r0, pc, r0
   1cbfc:	bl	dbb0 <register_hook@plt>
   1cc00:	ldr	r1, [pc, #248]	; 1cd00 <init_hook+0x230>
   1cc04:	ldr	r1, [pc, r1]
   1cc08:	str	r0, [r1]
   1cc0c:	ldr	r0, [pc, #240]	; 1cd04 <init_hook+0x234>
   1cc10:	add	r0, pc, r0
   1cc14:	bl	dbb0 <register_hook@plt>
   1cc18:	ldr	r1, [pc, #232]	; 1cd08 <init_hook+0x238>
   1cc1c:	ldr	r1, [pc, r1]
   1cc20:	str	r0, [r1]
   1cc24:	ldr	r0, [pc, #224]	; 1cd0c <init_hook+0x23c>
   1cc28:	add	r0, pc, r0
   1cc2c:	bl	dbb0 <register_hook@plt>
   1cc30:	ldr	r1, [pc, #216]	; 1cd10 <init_hook+0x240>
   1cc34:	ldr	r1, [pc, r1]
   1cc38:	str	r0, [r1]
   1cc3c:	ldr	r0, [pc, #208]	; 1cd14 <init_hook+0x244>
   1cc40:	add	r0, pc, r0
   1cc44:	bl	dbb0 <register_hook@plt>
   1cc48:	ldr	r1, [pc, #200]	; 1cd18 <init_hook+0x248>
   1cc4c:	ldr	r1, [pc, r1]
   1cc50:	str	r0, [r1]
   1cc54:	ldr	r0, [pc, #192]	; 1cd1c <init_hook+0x24c>
   1cc58:	add	r0, pc, r0
   1cc5c:	bl	dbb0 <register_hook@plt>
   1cc60:	ldr	r1, [pc, #184]	; 1cd20 <init_hook+0x250>
   1cc64:	ldr	r1, [pc, r1]
   1cc68:	str	r0, [r1]
   1cc6c:	ldr	r0, [pc, #176]	; 1cd24 <init_hook+0x254>
   1cc70:	add	r0, pc, r0
   1cc74:	bl	dbb0 <register_hook@plt>
   1cc78:	ldr	r1, [pc, #168]	; 1cd28 <init_hook+0x258>
   1cc7c:	ldr	r1, [pc, r1]
   1cc80:	str	r0, [r1]
   1cc84:	ldr	r0, [pc, #160]	; 1cd2c <init_hook+0x25c>
   1cc88:	add	r0, pc, r0
   1cc8c:	bl	dbb0 <register_hook@plt>
   1cc90:	ldr	r1, [pc, #152]	; 1cd30 <init_hook+0x260>
   1cc94:	ldr	r1, [pc, r1]
   1cc98:	str	r0, [r1]
   1cc9c:	pop	{fp, pc}
   1cca0:	.word	0x0003df6c
   1cca4:	.word	0x000250b5
   1cca8:	.word	0x0003dfb8
   1ccac:	.word	0x000250aa
   1ccb0:	.word	0x0003dd88
   1ccb4:	.word	0x000250a0
   1ccb8:	.word	0x0003df00
   1ccbc:	.word	0x00025097
   1ccc0:	.word	0x0003ddb0
   1ccc4:	.word	0x00025091
   1ccc8:	.word	0x0003de6c
   1cccc:	.word	0x0002508a
   1ccd0:	.word	0x0003df74
   1ccd4:	.word	0x0002506c
   1ccd8:	.word	0x0003ded8
   1ccdc:	.word	0x00025066
   1cce0:	.word	0x0003dea0
   1cce4:	.word	0x0002505c
   1cce8:	.word	0x0003dfb0
   1ccec:	.word	0x00025053
   1ccf0:	.word	0x0003de04
   1ccf4:	.word	0x0002504b
   1ccf8:	.word	0x0003dcb4
   1ccfc:	.word	0x00025044
   1cd00:	.word	0x0003df2c
   1cd04:	.word	0x00025035
   1cd08:	.word	0x0003de4c
   1cd0c:	.word	0x0002502a
   1cd10:	.word	0x0003dc98
   1cd14:	.word	0x00025022
   1cd18:	.word	0x0003dc84
   1cd1c:	.word	0x0002501a
   1cd20:	.word	0x0003debc
   1cd24:	.word	0x00025010
   1cd28:	.word	0x0003dd9c
   1cd2c:	.word	0x00025505
   1cd30:	.word	0x0003de68

0001cd34 <rb_malloc>:
   1cd34:	push	{fp, lr}
   1cd38:	mov	fp, sp
   1cd3c:	mov	r1, r0
   1cd40:	mov	r0, #1
   1cd44:	bl	cfa4 <calloc@plt>
   1cd48:	cmp	r0, #0
   1cd4c:	popne	{fp, pc}
   1cd50:	bl	d448 <rb_outofmemory@plt>

0001cd54 <register_hook>:
   1cd54:	push	{r4, r5, fp, lr}
   1cd58:	add	fp, sp, #8
   1cd5c:	mov	r5, r0
   1cd60:	bl	1cdbc <find_hook>
   1cd64:	mov	r4, r0
   1cd68:	cmn	r0, #1
   1cd6c:	ble	1cd78 <register_hook+0x24>
   1cd70:	mov	r0, r4
   1cd74:	pop	{r4, r5, fp, pc}
   1cd78:	bl	1ce38 <find_freehookslot>
   1cd7c:	mov	r4, r0
   1cd80:	mov	r0, r5
   1cd84:	bl	1ceb0 <rb_strdup>
   1cd88:	ldr	r1, [pc, #36]	; 1cdb4 <register_hook+0x60>
   1cd8c:	ldr	r1, [pc, r1]
   1cd90:	ldr	r1, [r1]
   1cd94:	str	r0, [r1, r4, lsl #4]
   1cd98:	ldr	r0, [pc, #24]	; 1cdb8 <register_hook+0x64>
   1cd9c:	ldr	r0, [pc, r0]
   1cda0:	ldr	r1, [r0]
   1cda4:	add	r1, r1, #1
   1cda8:	str	r1, [r0]
   1cdac:	mov	r0, r4
   1cdb0:	pop	{r4, r5, fp, pc}
   1cdb4:	.word	0x0003dcc4
   1cdb8:	.word	0x0003db64

0001cdbc <find_hook>:
   1cdbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cdc0:	add	fp, sp, #24
   1cdc4:	mov	r5, r0
   1cdc8:	ldr	r6, [pc, #96]	; 1ce30 <find_hook+0x74>
   1cdcc:	ldr	r6, [pc, r6]
   1cdd0:	ldr	r0, [r6]
   1cdd4:	mvn	r8, #0
   1cdd8:	cmp	r0, #1
   1cddc:	blt	1ce28 <find_hook+0x6c>
   1cde0:	mov	r7, #0
   1cde4:	ldr	r4, [pc, #72]	; 1ce34 <find_hook+0x78>
   1cde8:	ldr	r4, [pc, r4]
   1cdec:	b	1ce00 <find_hook+0x44>
   1cdf0:	add	r7, r7, #1
   1cdf4:	ldr	r0, [r6]
   1cdf8:	cmp	r7, r0
   1cdfc:	bge	1ce28 <find_hook+0x6c>
   1ce00:	ldr	r0, [r4]
   1ce04:	ldr	r0, [r0, r7, lsl #4]
   1ce08:	cmp	r0, #0
   1ce0c:	beq	1cdf0 <find_hook+0x34>
   1ce10:	mov	r1, r5
   1ce14:	bl	e750 <irccmp@plt>
   1ce18:	cmp	r0, #0
   1ce1c:	bne	1cdf0 <find_hook+0x34>
   1ce20:	mov	r0, r7
   1ce24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ce28:	mov	r0, r8
   1ce2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ce30:	.word	0x0003dca0
   1ce34:	.word	0x0003dc68

0001ce38 <find_freehookslot>:
   1ce38:	push	{r4, sl, fp, lr}
   1ce3c:	add	fp, sp, #8
   1ce40:	ldr	r4, [pc, #92]	; 1cea4 <find_freehookslot+0x6c>
   1ce44:	ldr	r4, [pc, r4]
   1ce48:	ldr	r1, [r4]
   1ce4c:	ldr	r0, [pc, #84]	; 1cea8 <find_freehookslot+0x70>
   1ce50:	ldr	r0, [pc, r0]
   1ce54:	ldr	r0, [r0]
   1ce58:	cmp	r0, r1
   1ce5c:	blt	1ce68 <find_freehookslot+0x30>
   1ce60:	bl	1d300 <grow_hooktable>
   1ce64:	ldr	r1, [r4]
   1ce68:	cmp	r1, #1
   1ce6c:	blt	1ce9c <find_freehookslot+0x64>
   1ce70:	ldr	r1, [r4]
   1ce74:	ldr	r0, [pc, #48]	; 1ceac <find_freehookslot+0x74>
   1ce78:	ldr	r0, [pc, r0]
   1ce7c:	ldr	r2, [r0]
   1ce80:	mov	r0, #0
   1ce84:	ldr	r3, [r2, r0, lsl #4]
   1ce88:	cmp	r3, #0
   1ce8c:	beq	1cea0 <find_freehookslot+0x68>
   1ce90:	add	r0, r0, #1
   1ce94:	cmp	r0, r1
   1ce98:	blt	1ce84 <find_freehookslot+0x4c>
   1ce9c:	sub	r0, r1, #1
   1cea0:	pop	{r4, sl, fp, pc}
   1cea4:	.word	0x0003dc28
   1cea8:	.word	0x0003dab0
   1ceac:	.word	0x0003dbd8

0001ceb0 <rb_strdup>:
   1ceb0:	push	{r4, sl, fp, lr}
   1ceb4:	add	fp, sp, #8
   1ceb8:	mov	r4, r0
   1cebc:	bl	dc94 <strlen@plt>
   1cec0:	add	r0, r0, #1
   1cec4:	bl	da84 <malloc@plt>
   1cec8:	cmp	r0, #0
   1cecc:	beq	1cedc <rb_strdup+0x2c>
   1ced0:	mov	r1, r4
   1ced4:	pop	{r4, sl, fp, lr}
   1ced8:	b	d91c <strcpy@plt>
   1cedc:	bl	d448 <rb_outofmemory@plt>

0001cee0 <add_hook>:
   1cee0:	mov	r2, #30
   1cee4:	b	1cee8 <add_hook_prio>

0001cee8 <add_hook_prio>:
   1cee8:	push	{r4, r5, r6, r7, fp, lr}
   1ceec:	add	fp, sp, #16
   1cef0:	mov	r4, r2
   1cef4:	mov	r6, r1
   1cef8:	mov	r7, r0
   1cefc:	mov	r0, #20
   1cf00:	bl	1cd34 <rb_malloc>
   1cf04:	mov	r5, r0
   1cf08:	mov	r0, r7
   1cf0c:	bl	dbb0 <register_hook@plt>
   1cf10:	str	r6, [r5, #12]
   1cf14:	str	r4, [r5, #16]
   1cf18:	ldr	r1, [pc, #88]	; 1cf78 <add_hook_prio+0x90>
   1cf1c:	ldr	r1, [pc, r1]
   1cf20:	ldr	r1, [r1]
   1cf24:	add	r1, r1, r0, lsl #4
   1cf28:	ldr	r0, [r1, #4]
   1cf2c:	cmp	r0, #0
   1cf30:	beq	1cf50 <add_hook_prio+0x68>
   1cf34:	ldr	r2, [r0]
   1cf38:	ldr	r2, [r2, #16]
   1cf3c:	cmp	r2, r4
   1cf40:	bcs	1cf64 <add_hook_prio+0x7c>
   1cf44:	ldr	r0, [r0, #8]
   1cf48:	cmp	r0, #0
   1cf4c:	bne	1cf34 <add_hook_prio+0x4c>
   1cf50:	add	r2, r1, #4
   1cf54:	mov	r0, r5
   1cf58:	mov	r1, r5
   1cf5c:	pop	{r4, r5, r6, r7, fp, lr}
   1cf60:	b	1d0a0 <rb_dlinkAddTail>
   1cf64:	add	r3, r1, #4
   1cf68:	mov	r1, r5
   1cf6c:	mov	r2, r5
   1cf70:	pop	{r4, r5, r6, r7, fp, lr}
   1cf74:	b	1cf7c <rb_dlinkAddBefore>
   1cf78:	.word	0x0003db34

0001cf7c <rb_dlinkAddBefore>:
   1cf7c:	push	{fp, lr}
   1cf80:	mov	fp, sp
   1cf84:	cmp	r0, #0
   1cf88:	beq	1cff0 <rb_dlinkAddBefore+0x74>
   1cf8c:	cmp	r1, #0
   1cf90:	beq	1d010 <rb_dlinkAddBefore+0x94>
   1cf94:	cmp	r2, #0
   1cf98:	beq	1d030 <rb_dlinkAddBefore+0xb4>
   1cf9c:	cmp	r3, #0
   1cfa0:	beq	1d050 <rb_dlinkAddBefore+0xd4>
   1cfa4:	ldr	ip, [r3]
   1cfa8:	cmp	ip, r0
   1cfac:	beq	1cfdc <rb_dlinkAddBefore+0x60>
   1cfb0:	str	r1, [r2]
   1cfb4:	ldr	r1, [r0, #4]
   1cfb8:	str	r2, [r1, #8]
   1cfbc:	ldr	r1, [r0, #4]
   1cfc0:	str	r1, [r2, #4]
   1cfc4:	str	r2, [r0, #4]
   1cfc8:	str	r0, [r2, #8]
   1cfcc:	ldr	r0, [r3, #8]
   1cfd0:	add	r0, r0, #1
   1cfd4:	str	r0, [r3, #8]
   1cfd8:	pop	{fp, pc}
   1cfdc:	mov	r0, r1
   1cfe0:	mov	r1, r2
   1cfe4:	mov	r2, r3
   1cfe8:	pop	{fp, lr}
   1cfec:	b	1d380 <rb_dlinkAdd>
   1cff0:	ldr	r0, [pc, #120]	; 1d070 <rb_dlinkAddBefore+0xf4>
   1cff4:	add	r0, pc, r0
   1cff8:	ldr	r1, [pc, #116]	; 1d074 <rb_dlinkAddBefore+0xf8>
   1cffc:	add	r1, pc, r1
   1d000:	ldr	r3, [pc, #112]	; 1d078 <rb_dlinkAddBefore+0xfc>
   1d004:	add	r3, pc, r3
   1d008:	mov	r2, #164	; 0xa4
   1d00c:	bl	e7e0 <__assert_fail@plt>
   1d010:	ldr	r0, [pc, #100]	; 1d07c <rb_dlinkAddBefore+0x100>
   1d014:	add	r0, pc, r0
   1d018:	ldr	r1, [pc, #96]	; 1d080 <rb_dlinkAddBefore+0x104>
   1d01c:	add	r1, pc, r1
   1d020:	ldr	r3, [pc, #92]	; 1d084 <rb_dlinkAddBefore+0x108>
   1d024:	add	r3, pc, r3
   1d028:	mov	r2, #165	; 0xa5
   1d02c:	bl	e7e0 <__assert_fail@plt>
   1d030:	ldr	r0, [pc, #80]	; 1d088 <rb_dlinkAddBefore+0x10c>
   1d034:	add	r0, pc, r0
   1d038:	ldr	r1, [pc, #76]	; 1d08c <rb_dlinkAddBefore+0x110>
   1d03c:	add	r1, pc, r1
   1d040:	ldr	r3, [pc, #72]	; 1d090 <rb_dlinkAddBefore+0x114>
   1d044:	add	r3, pc, r3
   1d048:	mov	r2, #166	; 0xa6
   1d04c:	bl	e7e0 <__assert_fail@plt>
   1d050:	ldr	r0, [pc, #60]	; 1d094 <rb_dlinkAddBefore+0x118>
   1d054:	add	r0, pc, r0
   1d058:	ldr	r1, [pc, #56]	; 1d098 <rb_dlinkAddBefore+0x11c>
   1d05c:	add	r1, pc, r1
   1d060:	ldr	r3, [pc, #52]	; 1d09c <rb_dlinkAddBefore+0x120>
   1d064:	add	r3, pc, r3
   1d068:	mov	r2, #167	; 0xa7
   1d06c:	bl	e7e0 <__assert_fail@plt>
   1d070:	.word	0x00024c9c
   1d074:	.word	0x0002391a
   1d078:	.word	0x00024c96
   1d07c:	.word	0x0002395d
   1d080:	.word	0x000238fa
   1d084:	.word	0x00024c76
   1d088:	.word	0x000238d8
   1d08c:	.word	0x000238da
   1d090:	.word	0x00024c56
   1d094:	.word	0x00029141
   1d098:	.word	0x000238ba
   1d09c:	.word	0x00024c36

0001d0a0 <rb_dlinkAddTail>:
   1d0a0:	push	{fp, lr}
   1d0a4:	mov	fp, sp
   1d0a8:	cmp	r1, #0
   1d0ac:	beq	1d114 <rb_dlinkAddTail+0x74>
   1d0b0:	cmp	r2, #0
   1d0b4:	beq	1d134 <rb_dlinkAddTail+0x94>
   1d0b8:	cmp	r0, #0
   1d0bc:	beq	1d154 <rb_dlinkAddTail+0xb4>
   1d0c0:	mov	r3, #0
   1d0c4:	str	r3, [r1, #8]
   1d0c8:	str	r0, [r1]
   1d0cc:	ldr	r0, [r2, #4]
   1d0d0:	str	r0, [r1, #4]
   1d0d4:	ldr	r0, [r2, #4]
   1d0d8:	cmp	r0, #0
   1d0dc:	beq	1d0ec <rb_dlinkAddTail+0x4c>
   1d0e0:	add	r0, r0, #8
   1d0e4:	str	r1, [r0]
   1d0e8:	b	1d0f8 <rb_dlinkAddTail+0x58>
   1d0ec:	ldr	r0, [r2]
   1d0f0:	cmp	r0, #0
   1d0f4:	beq	1d10c <rb_dlinkAddTail+0x6c>
   1d0f8:	str	r1, [r2, #4]
   1d0fc:	ldr	r0, [r2, #8]
   1d100:	add	r0, r0, #1
   1d104:	str	r0, [r2, #8]
   1d108:	pop	{fp, pc}
   1d10c:	mov	r0, r2
   1d110:	b	1d0e4 <rb_dlinkAddTail+0x44>
   1d114:	ldr	r0, [pc, #88]	; 1d174 <rb_dlinkAddTail+0xd4>
   1d118:	add	r0, pc, r0
   1d11c:	ldr	r1, [pc, #84]	; 1d178 <rb_dlinkAddTail+0xd8>
   1d120:	add	r1, pc, r1
   1d124:	ldr	r3, [pc, #80]	; 1d17c <rb_dlinkAddTail+0xdc>
   1d128:	add	r3, pc, r3
   1d12c:	mov	r2, #211	; 0xd3
   1d130:	bl	e7e0 <__assert_fail@plt>
   1d134:	ldr	r0, [pc, #68]	; 1d180 <rb_dlinkAddTail+0xe0>
   1d138:	add	r0, pc, r0
   1d13c:	ldr	r1, [pc, #64]	; 1d184 <rb_dlinkAddTail+0xe4>
   1d140:	add	r1, pc, r1
   1d144:	ldr	r3, [pc, #60]	; 1d188 <rb_dlinkAddTail+0xe8>
   1d148:	add	r3, pc, r3
   1d14c:	mov	r2, #212	; 0xd4
   1d150:	bl	e7e0 <__assert_fail@plt>
   1d154:	ldr	r0, [pc, #48]	; 1d18c <rb_dlinkAddTail+0xec>
   1d158:	add	r0, pc, r0
   1d15c:	ldr	r1, [pc, #44]	; 1d190 <rb_dlinkAddTail+0xf0>
   1d160:	add	r1, pc, r1
   1d164:	ldr	r3, [pc, #40]	; 1d194 <rb_dlinkAddTail+0xf4>
   1d168:	add	r3, pc, r3
   1d16c:	mov	r2, #213	; 0xd5
   1d170:	bl	e7e0 <__assert_fail@plt>
   1d174:	.word	0x000237f4
   1d178:	.word	0x000237f6
   1d17c:	.word	0x0002380a
   1d180:	.word	0x0002905d
   1d184:	.word	0x000237d6
   1d188:	.word	0x000237ea
   1d18c:	.word	0x00023819
   1d190:	.word	0x000237b6
   1d194:	.word	0x000237ca

0001d198 <remove_hook>:
   1d198:	push	{r4, sl, fp, lr}
   1d19c:	add	fp, sp, #8
   1d1a0:	mov	r4, r1
   1d1a4:	bl	1cdbc <find_hook>
   1d1a8:	cmp	r0, #0
   1d1ac:	popmi	{r4, sl, fp, pc}
   1d1b0:	ldr	r1, [pc, #64]	; 1d1f8 <remove_hook+0x60>
   1d1b4:	ldr	r1, [pc, r1]
   1d1b8:	ldr	r1, [r1]
   1d1bc:	add	r1, r1, r0, lsl #4
   1d1c0:	ldr	r0, [r1, #4]
   1d1c4:	cmp	r0, #0
   1d1c8:	beq	1d1e8 <remove_hook+0x50>
   1d1cc:	ldr	r2, [r0]
   1d1d0:	ldr	r2, [r2, #12]
   1d1d4:	cmp	r2, r4
   1d1d8:	beq	1d1ec <remove_hook+0x54>
   1d1dc:	ldr	r0, [r0, #8]
   1d1e0:	cmp	r0, #0
   1d1e4:	bne	1d1cc <remove_hook+0x34>
   1d1e8:	pop	{r4, sl, fp, pc}
   1d1ec:	add	r1, r1, #4
   1d1f0:	pop	{r4, sl, fp, lr}
   1d1f4:	b	1d1fc <rb_dlinkDelete>
   1d1f8:	.word	0x0003d89c

0001d1fc <rb_dlinkDelete>:
   1d1fc:	push	{fp, lr}
   1d200:	mov	fp, sp
   1d204:	cmp	r0, #0
   1d208:	beq	1d25c <rb_dlinkDelete+0x60>
   1d20c:	cmp	r1, #0
   1d210:	beq	1d27c <rb_dlinkDelete+0x80>
   1d214:	ldr	ip, [r0, #4]
   1d218:	ldr	r3, [r0, #8]
   1d21c:	add	r2, r3, #4
   1d220:	cmp	r3, #0
   1d224:	addeq	r2, r1, #4
   1d228:	str	ip, [r2]
   1d22c:	ldmib	r0, {r2, ip}
   1d230:	cmp	r2, #0
   1d234:	mov	r3, r1
   1d238:	addne	r3, r2, #8
   1d23c:	str	ip, [r3]
   1d240:	mov	r2, #0
   1d244:	str	r2, [r0, #4]
   1d248:	str	r2, [r0, #8]
   1d24c:	ldr	r0, [r1, #8]
   1d250:	sub	r0, r0, #1
   1d254:	str	r0, [r1, #8]
   1d258:	pop	{fp, pc}
   1d25c:	ldr	r0, [pc, #56]	; 1d29c <rb_dlinkDelete+0xa0>
   1d260:	add	r0, pc, r0
   1d264:	ldr	r1, [pc, #52]	; 1d2a0 <rb_dlinkDelete+0xa4>
   1d268:	add	r1, pc, r1
   1d26c:	ldr	r3, [pc, #48]	; 1d2a4 <rb_dlinkDelete+0xa8>
   1d270:	add	r3, pc, r3
   1d274:	mov	r2, #235	; 0xeb
   1d278:	bl	e7e0 <__assert_fail@plt>
   1d27c:	ldr	r0, [pc, #36]	; 1d2a8 <rb_dlinkDelete+0xac>
   1d280:	add	r0, pc, r0
   1d284:	ldr	r1, [pc, #32]	; 1d2ac <rb_dlinkDelete+0xb0>
   1d288:	add	r1, pc, r1
   1d28c:	ldr	r3, [pc, #28]	; 1d2b0 <rb_dlinkDelete+0xb4>
   1d290:	add	r3, pc, r3
   1d294:	mov	r2, #236	; 0xec
   1d298:	bl	e7e0 <__assert_fail@plt>
   1d29c:	.word	0x000236ac
   1d2a0:	.word	0x000236ae
   1d2a4:	.word	0x00023749
   1d2a8:	.word	0x00028f15
   1d2ac:	.word	0x0002368e
   1d2b0:	.word	0x00023729

0001d2b4 <call_hook>:
   1d2b4:	push	{r4, r5, fp, lr}
   1d2b8:	add	fp, sp, #8
   1d2bc:	mov	r4, r1
   1d2c0:	ldr	r1, [pc, #52]	; 1d2fc <call_hook+0x48>
   1d2c4:	ldr	r1, [pc, r1]
   1d2c8:	ldr	r1, [r1]
   1d2cc:	add	r0, r1, r0, lsl #4
   1d2d0:	ldr	r5, [r0, #4]
   1d2d4:	cmp	r5, #0
   1d2d8:	beq	1d2f8 <call_hook+0x44>
   1d2dc:	ldr	r0, [r5]
   1d2e0:	ldr	r1, [r0, #12]
   1d2e4:	mov	r0, r4
   1d2e8:	blx	r1
   1d2ec:	ldr	r5, [r5, #8]
   1d2f0:	cmp	r5, #0
   1d2f4:	bne	1d2dc <call_hook+0x28>
   1d2f8:	pop	{r4, r5, fp, pc}
   1d2fc:	.word	0x0003d78c

0001d300 <grow_hooktable>:
   1d300:	push	{r4, r5, r6, r7, fp, lr}
   1d304:	add	fp, sp, #16
   1d308:	ldr	r6, [pc, #88]	; 1d368 <grow_hooktable+0x68>
   1d30c:	ldr	r6, [pc, r6]
   1d310:	ldr	r0, [r6]
   1d314:	mov	r1, #16000	; 0x3e80
   1d318:	add	r0, r1, r0, lsl #4
   1d31c:	bl	1cd34 <rb_malloc>
   1d320:	mov	r4, r0
   1d324:	ldr	r7, [pc, #64]	; 1d36c <grow_hooktable+0x6c>
   1d328:	ldr	r7, [pc, r7]
   1d32c:	ldr	r5, [r7]
   1d330:	ldr	r0, [pc, #56]	; 1d370 <grow_hooktable+0x70>
   1d334:	ldr	r0, [pc, r0]
   1d338:	ldr	r0, [r0]
   1d33c:	lsl	r2, r0, #4
   1d340:	mov	r0, r4
   1d344:	mov	r1, r5
   1d348:	bl	d40c <memcpy@plt>
   1d34c:	mov	r0, r5
   1d350:	bl	1d374 <rb_free>
   1d354:	str	r4, [r7]
   1d358:	ldr	r0, [r6]
   1d35c:	add	r0, r0, #1000	; 0x3e8
   1d360:	str	r0, [r6]
   1d364:	pop	{r4, r5, r6, r7, fp, pc}
   1d368:	.word	0x0003d760
   1d36c:	.word	0x0003d728
   1d370:	.word	0x0003d5cc

0001d374 <rb_free>:
   1d374:	cmp	r0, #0
   1d378:	bxeq	lr
   1d37c:	b	d328 <free@plt>

0001d380 <rb_dlinkAdd>:
   1d380:	push	{fp, lr}
   1d384:	mov	fp, sp
   1d388:	cmp	r0, #0
   1d38c:	beq	1d3ec <rb_dlinkAdd+0x6c>
   1d390:	cmp	r1, #0
   1d394:	beq	1d40c <rb_dlinkAdd+0x8c>
   1d398:	cmp	r2, #0
   1d39c:	beq	1d42c <rb_dlinkAdd+0xac>
   1d3a0:	mov	r3, #0
   1d3a4:	stm	r1, {r0, r3}
   1d3a8:	ldr	r0, [r2]
   1d3ac:	str	r0, [r1, #8]
   1d3b0:	ldr	r0, [r2]
   1d3b4:	cmp	r0, #0
   1d3b8:	beq	1d3c8 <rb_dlinkAdd+0x48>
   1d3bc:	add	r0, r0, #4
   1d3c0:	str	r1, [r0]
   1d3c4:	b	1d3d8 <rb_dlinkAdd+0x58>
   1d3c8:	mov	r0, r2
   1d3cc:	ldr	r3, [r0, #4]!
   1d3d0:	cmp	r3, #0
   1d3d4:	streq	r1, [r0]
   1d3d8:	str	r1, [r2]
   1d3dc:	ldr	r0, [r2, #8]
   1d3e0:	add	r0, r0, #1
   1d3e4:	str	r0, [r2, #8]
   1d3e8:	pop	{fp, pc}
   1d3ec:	ldr	r0, [pc, #88]	; 1d44c <rb_dlinkAdd+0xcc>
   1d3f0:	add	r0, pc, r0
   1d3f4:	ldr	r1, [pc, #84]	; 1d450 <rb_dlinkAdd+0xd0>
   1d3f8:	add	r1, pc, r1
   1d3fc:	ldr	r3, [pc, #80]	; 1d454 <rb_dlinkAdd+0xd4>
   1d400:	add	r3, pc, r3
   1d404:	mov	r2, #143	; 0x8f
   1d408:	bl	e7e0 <__assert_fail@plt>
   1d40c:	ldr	r0, [pc, #68]	; 1d458 <rb_dlinkAdd+0xd8>
   1d410:	add	r0, pc, r0
   1d414:	ldr	r1, [pc, #64]	; 1d45c <rb_dlinkAdd+0xdc>
   1d418:	add	r1, pc, r1
   1d41c:	ldr	r3, [pc, #60]	; 1d460 <rb_dlinkAdd+0xe0>
   1d420:	add	r3, pc, r3
   1d424:	mov	r2, #144	; 0x90
   1d428:	bl	e7e0 <__assert_fail@plt>
   1d42c:	ldr	r0, [pc, #48]	; 1d464 <rb_dlinkAdd+0xe4>
   1d430:	add	r0, pc, r0
   1d434:	ldr	r1, [pc, #44]	; 1d468 <rb_dlinkAdd+0xe8>
   1d438:	add	r1, pc, r1
   1d43c:	ldr	r3, [pc, #40]	; 1d46c <rb_dlinkAdd+0xec>
   1d440:	add	r3, pc, r3
   1d444:	mov	r2, #145	; 0x91
   1d448:	bl	e7e0 <__assert_fail@plt>
   1d44c:	.word	0x00023581
   1d450:	.word	0x0002351e
   1d454:	.word	0x0002357e
   1d458:	.word	0x000234fc
   1d45c:	.word	0x000234fe
   1d460:	.word	0x0002355e
   1d464:	.word	0x00028d65
   1d468:	.word	0x000234de
   1d46c:	.word	0x0002353e

0001d470 <parse_netmask>:
   1d470:	mov	r3, #0
   1d474:	b	1d478 <_parse_netmask>

0001d478 <_parse_netmask>:
   1d478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d47c:	add	fp, sp, #24
   1d480:	sub	sp, sp, #144	; 0x90
   1d484:	mov	r8, r3
   1d488:	mov	r7, r2
   1d48c:	mov	r5, r1
   1d490:	mov	r6, r0
   1d494:	bl	dc94 <strlen@plt>
   1d498:	add	r0, r0, #8
   1d49c:	bic	r0, r0, #7
   1d4a0:	sub	r4, sp, r0
   1d4a4:	mov	sp, r4
   1d4a8:	mov	r0, r4
   1d4ac:	mov	r1, r6
   1d4b0:	bl	d91c <strcpy@plt>
   1d4b4:	sub	r9, fp, #160	; 0xa0
   1d4b8:	cmp	r5, #0
   1d4bc:	movne	r9, r5
   1d4c0:	sub	r5, fp, #164	; 0xa4
   1d4c4:	cmp	r7, #0
   1d4c8:	movne	r5, r7
   1d4cc:	ldr	r1, [pc, #388]	; 1d658 <_parse_netmask+0x1e0>
   1d4d0:	add	r1, pc, r1
   1d4d4:	bl	e4c8 <strpbrk@plt>
   1d4d8:	mov	r7, #1
   1d4dc:	cmp	r0, #0
   1d4e0:	beq	1d4f0 <_parse_netmask+0x78>
   1d4e4:	mov	r0, r7
   1d4e8:	sub	sp, fp, #24
   1d4ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d4f0:	mov	r0, r4
   1d4f4:	mov	r1, #58	; 0x3a
   1d4f8:	bl	dce8 <strchr@plt>
   1d4fc:	cmp	r0, #0
   1d500:	beq	1d568 <_parse_netmask+0xf0>
   1d504:	mov	r0, r4
   1d508:	mov	r1, #47	; 0x2f
   1d50c:	bl	dce8 <strchr@plt>
   1d510:	mov	r6, r0
   1d514:	mov	r0, #128	; 0x80
   1d518:	cmp	r6, #0
   1d51c:	beq	1d5fc <_parse_netmask+0x184>
   1d520:	mov	r0, #0
   1d524:	strb	r0, [r6], #1
   1d528:	sub	r1, fp, #32
   1d52c:	mov	r0, r6
   1d530:	mov	r2, #10
   1d534:	bl	d118 <strtol@plt>
   1d538:	cmp	r0, #0
   1d53c:	bmi	1d4e4 <_parse_netmask+0x6c>
   1d540:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d544:	cmp	r1, r6
   1d548:	beq	1d4e4 <_parse_netmask+0x6c>
   1d54c:	cmp	r0, #128	; 0x80
   1d550:	ble	1d5e0 <_parse_netmask+0x168>
   1d554:	mov	r7, #0
   1d558:	cmp	r8, #0
   1d55c:	mov	r0, #128	; 0x80
   1d560:	bne	1d4e4 <_parse_netmask+0x6c>
   1d564:	b	1d5fc <_parse_netmask+0x184>
   1d568:	mov	r0, r6
   1d56c:	mov	r1, #46	; 0x2e
   1d570:	bl	dce8 <strchr@plt>
   1d574:	cmp	r0, #0
   1d578:	beq	1d4e4 <_parse_netmask+0x6c>
   1d57c:	mov	r0, r4
   1d580:	mov	r1, #47	; 0x2f
   1d584:	bl	dce8 <strchr@plt>
   1d588:	mov	r6, r0
   1d58c:	mov	r0, #32
   1d590:	cmp	r6, #0
   1d594:	beq	1d638 <_parse_netmask+0x1c0>
   1d598:	mov	r0, #0
   1d59c:	strb	r0, [r6], #1
   1d5a0:	sub	r1, fp, #32
   1d5a4:	mov	r0, r6
   1d5a8:	mov	r2, #10
   1d5ac:	bl	d118 <strtol@plt>
   1d5b0:	cmp	r0, #0
   1d5b4:	bmi	1d4e4 <_parse_netmask+0x6c>
   1d5b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d5bc:	cmp	r1, r6
   1d5c0:	beq	1d4e4 <_parse_netmask+0x6c>
   1d5c4:	cmp	r0, #32
   1d5c8:	ble	1d61c <_parse_netmask+0x1a4>
   1d5cc:	mov	r7, #0
   1d5d0:	cmp	r8, #0
   1d5d4:	mov	r0, #32
   1d5d8:	bne	1d4e4 <_parse_netmask+0x6c>
   1d5dc:	b	1d638 <_parse_netmask+0x1c0>
   1d5e0:	ldrb	r1, [r1]
   1d5e4:	cmp	r1, #0
   1d5e8:	movne	r0, #128	; 0x80
   1d5ec:	beq	1d5fc <_parse_netmask+0x184>
   1d5f0:	mov	r7, #0
   1d5f4:	cmp	r8, #0
   1d5f8:	bne	1d4e4 <_parse_netmask+0x6c>
   1d5fc:	str	r0, [r5]
   1d600:	mov	r0, r4
   1d604:	mov	r1, r9
   1d608:	bl	e000 <rb_inet_pton_sock@plt>
   1d60c:	mov	r7, #1
   1d610:	cmp	r0, #0
   1d614:	movwgt	r7, #3
   1d618:	b	1d4e4 <_parse_netmask+0x6c>
   1d61c:	ldrb	r1, [r1]
   1d620:	cmp	r1, #0
   1d624:	movne	r0, #32
   1d628:	beq	1d638 <_parse_netmask+0x1c0>
   1d62c:	mov	r7, #0
   1d630:	cmp	r8, #0
   1d634:	bne	1d4e4 <_parse_netmask+0x6c>
   1d638:	str	r0, [r5]
   1d63c:	mov	r0, r4
   1d640:	mov	r1, r9
   1d644:	bl	e000 <rb_inet_pton_sock@plt>
   1d648:	mov	r7, #1
   1d64c:	cmp	r0, #0
   1d650:	movwgt	r7, #2
   1d654:	b	1d4e4 <_parse_netmask+0x6c>
   1d658:	.word	0x0002483b

0001d65c <parse_netmask_strict>:
   1d65c:	mov	r3, #1
   1d660:	b	1d478 <_parse_netmask>

0001d664 <init_host_hash>:
   1d664:	ldr	r0, [pc, #12]	; 1d678 <init_host_hash+0x14>
   1d668:	ldr	r0, [pc, r0]
   1d66c:	mov	r1, #0
   1d670:	mov	r2, #16384	; 0x4000
   1d674:	b	df28 <memset@plt>
   1d678:	.word	0x0003d310

0001d67c <find_conf_by_address>:
   1d67c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d680:	add	fp, sp, #28
   1d684:	sub	sp, sp, #36	; 0x24
   1d688:	str	r2, [sp, #8]
   1d68c:	mov	r2, r1
   1d690:	ldr	r1, [fp, #16]
   1d694:	ldr	r9, [pc, #1612]	; 1dce8 <find_conf_by_address+0x66c>
   1d698:	add	r9, pc, r9
   1d69c:	cmp	r1, #0
   1d6a0:	movne	r9, r1
   1d6a4:	cmp	r3, #0
   1d6a8:	stm	sp, {r0, r2}
   1d6ac:	beq	1d7f8 <find_conf_by_address+0x17c>
   1d6b0:	mov	r8, r3
   1d6b4:	ldr	r1, [fp, #12]
   1d6b8:	mov	sl, #0
   1d6bc:	cmp	r1, #2
   1d6c0:	mov	r3, #0
   1d6c4:	moveq	r3, r8
   1d6c8:	str	r3, [sp, #16]
   1d6cc:	cmp	r1, #10
   1d6d0:	bne	1d808 <find_conf_by_address+0x18c>
   1d6d4:	ldr	r1, [fp, #8]
   1d6d8:	mov	r5, r9
   1d6dc:	cmp	r1, #64	; 0x40
   1d6e0:	bne	1d704 <find_conf_by_address+0x88>
   1d6e4:	add	r4, sp, #20
   1d6e8:	mov	r0, r8
   1d6ec:	mov	r1, r4
   1d6f0:	bl	d880 <rb_ipv4_from_ipv6@plt>
   1d6f4:	cmp	r0, #0
   1d6f8:	ldr	r0, [sp, #16]
   1d6fc:	movne	r0, r4
   1d700:	str	r0, [sp, #16]
   1d704:	ldr	r0, [fp, #8]
   1d708:	and	r6, r0, #1
   1d70c:	bic	r7, r0, #1
   1d710:	mov	r0, #0
   1d714:	str	r0, [sp, #12]
   1d718:	mov	r4, #128	; 0x80
   1d71c:	mov	sl, #0
   1d720:	b	1d730 <find_conf_by_address+0xb4>
   1d724:	sub	r4, r4, #16
   1d728:	cmn	r4, #1
   1d72c:	ble	1d814 <find_conf_by_address+0x198>
   1d730:	mov	r0, r8
   1d734:	mov	r1, r4
   1d738:	bl	1dcfc <hash_ipv6>
   1d73c:	ldr	r1, [pc, #1448]	; 1dcec <find_conf_by_address+0x670>
   1d740:	ldr	r1, [pc, r1]
   1d744:	ldr	r9, [r1, r0, lsl #2]
   1d748:	cmp	r9, #0
   1d74c:	bne	1d760 <find_conf_by_address+0xe4>
   1d750:	b	1d724 <find_conf_by_address+0xa8>
   1d754:	ldr	r9, [r9, #156]	; 0x9c
   1d758:	cmp	r9, #0
   1d75c:	beq	1d724 <find_conf_by_address+0xa8>
   1d760:	ldr	r0, [r9, #136]	; 0x88
   1d764:	cmp	r0, r7
   1d768:	bne	1d754 <find_conf_by_address+0xd8>
   1d76c:	ldr	r0, [r9]
   1d770:	cmp	r0, #3
   1d774:	bne	1d754 <find_conf_by_address+0xd8>
   1d778:	ldr	r2, [r9, #132]	; 0x84
   1d77c:	add	r1, r9, #4
   1d780:	mov	r0, r8
   1d784:	bl	d034 <comp_with_mask_sock@plt>
   1d788:	cmp	r0, #0
   1d78c:	beq	1d754 <find_conf_by_address+0xd8>
   1d790:	cmp	r6, #0
   1d794:	bne	1d7ac <find_conf_by_address+0x130>
   1d798:	ldr	r0, [r9, #144]	; 0x90
   1d79c:	mov	r1, r5
   1d7a0:	bl	e114 <match@plt>
   1d7a4:	cmp	r0, #0
   1d7a8:	beq	1d754 <find_conf_by_address+0xd8>
   1d7ac:	ldr	r0, [fp, #8]
   1d7b0:	cmp	r0, #2
   1d7b4:	bne	1d7dc <find_conf_by_address+0x160>
   1d7b8:	ldr	r0, [r9, #148]	; 0x94
   1d7bc:	cmp	r0, #0
   1d7c0:	beq	1d7dc <find_conf_by_address+0x160>
   1d7c4:	ldr	r1, [fp, #20]
   1d7c8:	cmp	r1, #0
   1d7cc:	beq	1d754 <find_conf_by_address+0xd8>
   1d7d0:	bl	e114 <match@plt>
   1d7d4:	cmp	r0, #0
   1d7d8:	beq	1d754 <find_conf_by_address+0xd8>
   1d7dc:	ldr	r0, [r9, #140]	; 0x8c
   1d7e0:	cmp	r0, sl
   1d7e4:	bls	1d754 <find_conf_by_address+0xd8>
   1d7e8:	ldr	r1, [r9, #152]	; 0x98
   1d7ec:	str	r1, [sp, #12]
   1d7f0:	mov	sl, r0
   1d7f4:	b	1d754 <find_conf_by_address+0xd8>
   1d7f8:	mov	sl, #0
   1d7fc:	mov	r0, #0
   1d800:	str	r0, [sp, #12]
   1d804:	b	1d90c <find_conf_by_address+0x290>
   1d808:	mov	r0, #0
   1d80c:	str	r0, [sp, #12]
   1d810:	b	1d818 <find_conf_by_address+0x19c>
   1d814:	mov	r9, r5
   1d818:	ldr	r0, [sp, #16]
   1d81c:	cmp	r0, #0
   1d820:	beq	1d90c <find_conf_by_address+0x290>
   1d824:	ldr	r0, [fp, #8]
   1d828:	and	r6, r0, #1
   1d82c:	bic	r7, r0, #1
   1d830:	mov	r4, #32
   1d834:	ldr	r8, [pc, #1204]	; 1dcf0 <find_conf_by_address+0x674>
   1d838:	ldr	r8, [pc, r8]
   1d83c:	b	1d84c <find_conf_by_address+0x1d0>
   1d840:	sub	r4, r4, #8
   1d844:	cmn	r4, #1
   1d848:	ble	1d90c <find_conf_by_address+0x290>
   1d84c:	ldr	r0, [sp, #16]
   1d850:	mov	r1, r4
   1d854:	bl	1dd60 <hash_ipv4>
   1d858:	ldr	r5, [r8, r0, lsl #2]
   1d85c:	cmp	r5, #0
   1d860:	bne	1d874 <find_conf_by_address+0x1f8>
   1d864:	b	1d840 <find_conf_by_address+0x1c4>
   1d868:	ldr	r5, [r5, #156]	; 0x9c
   1d86c:	cmp	r5, #0
   1d870:	beq	1d840 <find_conf_by_address+0x1c4>
   1d874:	ldr	r0, [r5, #136]	; 0x88
   1d878:	cmp	r0, r7
   1d87c:	bne	1d868 <find_conf_by_address+0x1ec>
   1d880:	ldr	r0, [r5]
   1d884:	cmp	r0, #2
   1d888:	bne	1d868 <find_conf_by_address+0x1ec>
   1d88c:	ldr	r2, [r5, #132]	; 0x84
   1d890:	add	r1, r5, #4
   1d894:	ldr	r0, [sp, #16]
   1d898:	bl	d034 <comp_with_mask_sock@plt>
   1d89c:	cmp	r0, #0
   1d8a0:	beq	1d868 <find_conf_by_address+0x1ec>
   1d8a4:	cmp	r6, #0
   1d8a8:	bne	1d8c0 <find_conf_by_address+0x244>
   1d8ac:	ldr	r0, [r5, #144]	; 0x90
   1d8b0:	mov	r1, r9
   1d8b4:	bl	e114 <match@plt>
   1d8b8:	cmp	r0, #0
   1d8bc:	beq	1d868 <find_conf_by_address+0x1ec>
   1d8c0:	ldr	r0, [fp, #8]
   1d8c4:	cmp	r0, #2
   1d8c8:	bne	1d8f0 <find_conf_by_address+0x274>
   1d8cc:	ldr	r0, [r5, #148]	; 0x94
   1d8d0:	cmp	r0, #0
   1d8d4:	beq	1d8f0 <find_conf_by_address+0x274>
   1d8d8:	ldr	r1, [fp, #20]
   1d8dc:	cmp	r1, #0
   1d8e0:	beq	1d868 <find_conf_by_address+0x1ec>
   1d8e4:	bl	e114 <match@plt>
   1d8e8:	cmp	r0, #0
   1d8ec:	beq	1d868 <find_conf_by_address+0x1ec>
   1d8f0:	ldr	r0, [r5, #140]	; 0x8c
   1d8f4:	cmp	r0, sl
   1d8f8:	bls	1d868 <find_conf_by_address+0x1ec>
   1d8fc:	ldr	r1, [r5, #152]	; 0x98
   1d900:	str	r1, [sp, #12]
   1d904:	mov	sl, r0
   1d908:	b	1d868 <find_conf_by_address+0x1ec>
   1d90c:	ldr	r4, [sp, #8]
   1d910:	cmp	r4, #0
   1d914:	beq	1daf0 <find_conf_by_address+0x474>
   1d918:	ldr	r0, [fp, #8]
   1d91c:	and	r1, r0, #1
   1d920:	str	r1, [sp, #16]
   1d924:	bic	r5, r0, #1
   1d928:	ldr	r8, [pc, #964]	; 1dcf4 <find_conf_by_address+0x678>
   1d92c:	ldr	r8, [pc, r8]
   1d930:	ldr	r7, [fp, #20]
   1d934:	b	1d950 <find_conf_by_address+0x2d4>
   1d938:	mov	r0, r4
   1d93c:	mov	r1, #46	; 0x2e
   1d940:	bl	dce8 <strchr@plt>
   1d944:	add	r4, r0, #1
   1d948:	cmp	r0, #0
   1d94c:	beq	1da10 <find_conf_by_address+0x394>
   1d950:	mov	r0, r4
   1d954:	bl	1dd9c <hash_text>
   1d958:	ldr	r6, [r8, r0, lsl #2]
   1d95c:	cmp	r6, #0
   1d960:	bne	1d980 <find_conf_by_address+0x304>
   1d964:	b	1d938 <find_conf_by_address+0x2bc>
   1d968:	ldr	sl, [r6, #140]	; 0x8c
   1d96c:	ldr	r0, [r6, #152]	; 0x98
   1d970:	str	r0, [sp, #12]
   1d974:	ldr	r6, [r6, #156]	; 0x9c
   1d978:	cmp	r6, #0
   1d97c:	beq	1d938 <find_conf_by_address+0x2bc>
   1d980:	ldr	r0, [r6, #136]	; 0x88
   1d984:	cmp	r0, r5
   1d988:	bne	1d974 <find_conf_by_address+0x2f8>
   1d98c:	ldr	r0, [r6]
   1d990:	cmp	r0, #1
   1d994:	bne	1d974 <find_conf_by_address+0x2f8>
   1d998:	ldr	r0, [r6, #140]	; 0x8c
   1d99c:	cmp	r0, sl
   1d9a0:	bls	1d974 <find_conf_by_address+0x2f8>
   1d9a4:	ldr	r0, [r6, #4]
   1d9a8:	ldr	r1, [sp, #8]
   1d9ac:	bl	e114 <match@plt>
   1d9b0:	cmp	r0, #0
   1d9b4:	beq	1d974 <find_conf_by_address+0x2f8>
   1d9b8:	ldr	r0, [fp, #8]
   1d9bc:	cmp	r0, #2
   1d9c0:	bne	1d9ec <find_conf_by_address+0x370>
   1d9c4:	ldr	r0, [r6, #148]	; 0x94
   1d9c8:	cmp	r0, #0
   1d9cc:	beq	1d9f8 <find_conf_by_address+0x37c>
   1d9d0:	cmp	r7, #0
   1d9d4:	beq	1d974 <find_conf_by_address+0x2f8>
   1d9d8:	mov	r1, r7
   1d9dc:	bl	e114 <match@plt>
   1d9e0:	cmp	r0, #0
   1d9e4:	bne	1d9f8 <find_conf_by_address+0x37c>
   1d9e8:	b	1d974 <find_conf_by_address+0x2f8>
   1d9ec:	ldr	r0, [sp, #16]
   1d9f0:	cmp	r0, #0
   1d9f4:	bne	1d968 <find_conf_by_address+0x2ec>
   1d9f8:	ldr	r0, [r6, #144]	; 0x90
   1d9fc:	mov	r1, r9
   1da00:	bl	e114 <match@plt>
   1da04:	cmp	r0, #0
   1da08:	bne	1d968 <find_conf_by_address+0x2ec>
   1da0c:	b	1d974 <find_conf_by_address+0x2f8>
   1da10:	ldr	r4, [r8]
   1da14:	cmp	r4, #0
   1da18:	ldr	r6, [sp]
   1da1c:	beq	1daf4 <find_conf_by_address+0x478>
   1da20:	ldr	r8, [sp, #8]
   1da24:	b	1da40 <find_conf_by_address+0x3c4>
   1da28:	ldr	sl, [r4, #140]	; 0x8c
   1da2c:	ldr	r0, [r4, #152]	; 0x98
   1da30:	str	r0, [sp, #12]
   1da34:	ldr	r4, [r4, #156]	; 0x9c
   1da38:	cmp	r4, #0
   1da3c:	beq	1daf4 <find_conf_by_address+0x478>
   1da40:	ldr	r0, [r4, #136]	; 0x88
   1da44:	cmp	r0, r5
   1da48:	bne	1da34 <find_conf_by_address+0x3b8>
   1da4c:	ldr	r0, [r4]
   1da50:	cmp	r0, #1
   1da54:	bne	1da34 <find_conf_by_address+0x3b8>
   1da58:	ldr	r0, [r4, #140]	; 0x8c
   1da5c:	cmp	r0, sl
   1da60:	bls	1da34 <find_conf_by_address+0x3b8>
   1da64:	ldr	r0, [r4, #4]
   1da68:	mov	r1, r8
   1da6c:	bl	e114 <match@plt>
   1da70:	cmp	r0, #0
   1da74:	beq	1dad0 <find_conf_by_address+0x454>
   1da78:	ldr	r0, [fp, #8]
   1da7c:	cmp	r0, #2
   1da80:	bne	1daac <find_conf_by_address+0x430>
   1da84:	ldr	r0, [r4, #148]	; 0x94
   1da88:	cmp	r0, #0
   1da8c:	beq	1dab8 <find_conf_by_address+0x43c>
   1da90:	cmp	r7, #0
   1da94:	beq	1da34 <find_conf_by_address+0x3b8>
   1da98:	mov	r1, r7
   1da9c:	bl	e114 <match@plt>
   1daa0:	cmp	r0, #0
   1daa4:	bne	1dab8 <find_conf_by_address+0x43c>
   1daa8:	b	1da34 <find_conf_by_address+0x3b8>
   1daac:	ldr	r0, [sp, #16]
   1dab0:	cmp	r0, #0
   1dab4:	bne	1da28 <find_conf_by_address+0x3ac>
   1dab8:	ldr	r0, [r4, #144]	; 0x90
   1dabc:	mov	r1, r9
   1dac0:	bl	e114 <match@plt>
   1dac4:	cmp	r0, #0
   1dac8:	bne	1da28 <find_conf_by_address+0x3ac>
   1dacc:	b	1da34 <find_conf_by_address+0x3b8>
   1dad0:	ldr	r1, [sp, #4]
   1dad4:	cmp	r1, #0
   1dad8:	beq	1da34 <find_conf_by_address+0x3b8>
   1dadc:	ldr	r0, [r4, #4]
   1dae0:	bl	e114 <match@plt>
   1dae4:	cmp	r0, #0
   1dae8:	bne	1da78 <find_conf_by_address+0x3fc>
   1daec:	b	1da34 <find_conf_by_address+0x3b8>
   1daf0:	ldr	r6, [sp]
   1daf4:	cmp	r6, #0
   1daf8:	beq	1dcd8 <find_conf_by_address+0x65c>
   1dafc:	mov	r8, r9
   1db00:	ldr	r0, [fp, #8]
   1db04:	and	r1, r0, #1
   1db08:	str	r1, [sp, #16]
   1db0c:	bic	r7, r0, #1
   1db10:	ldr	r5, [pc, #480]	; 1dcf8 <find_conf_by_address+0x67c>
   1db14:	ldr	r5, [pc, r5]
   1db18:	mov	r9, r6
   1db1c:	mov	r4, r6
   1db20:	b	1db3c <find_conf_by_address+0x4c0>
   1db24:	mov	r0, r4
   1db28:	mov	r1, #46	; 0x2e
   1db2c:	bl	dce8 <strchr@plt>
   1db30:	add	r4, r0, #1
   1db34:	cmp	r0, #0
   1db38:	beq	1dbfc <find_conf_by_address+0x580>
   1db3c:	mov	r0, r4
   1db40:	bl	1dd9c <hash_text>
   1db44:	ldr	r6, [r5, r0, lsl #2]
   1db48:	cmp	r6, #0
   1db4c:	bne	1db6c <find_conf_by_address+0x4f0>
   1db50:	b	1db24 <find_conf_by_address+0x4a8>
   1db54:	ldr	sl, [r6, #140]	; 0x8c
   1db58:	ldr	r0, [r6, #152]	; 0x98
   1db5c:	str	r0, [sp, #12]
   1db60:	ldr	r6, [r6, #156]	; 0x9c
   1db64:	cmp	r6, #0
   1db68:	beq	1db24 <find_conf_by_address+0x4a8>
   1db6c:	ldr	r0, [r6, #136]	; 0x88
   1db70:	cmp	r0, r7
   1db74:	bne	1db60 <find_conf_by_address+0x4e4>
   1db78:	ldr	r0, [r6]
   1db7c:	cmp	r0, #1
   1db80:	bne	1db60 <find_conf_by_address+0x4e4>
   1db84:	ldr	r0, [r6, #140]	; 0x8c
   1db88:	cmp	r0, sl
   1db8c:	bls	1db60 <find_conf_by_address+0x4e4>
   1db90:	ldr	r0, [r6, #4]
   1db94:	mov	r1, r9
   1db98:	bl	e114 <match@plt>
   1db9c:	cmp	r0, #0
   1dba0:	beq	1db60 <find_conf_by_address+0x4e4>
   1dba4:	ldr	r0, [fp, #8]
   1dba8:	cmp	r0, #2
   1dbac:	bne	1dbd8 <find_conf_by_address+0x55c>
   1dbb0:	ldr	r0, [r6, #148]	; 0x94
   1dbb4:	cmp	r0, #0
   1dbb8:	beq	1dbe4 <find_conf_by_address+0x568>
   1dbbc:	ldr	r1, [fp, #20]
   1dbc0:	cmp	r1, #0
   1dbc4:	beq	1db60 <find_conf_by_address+0x4e4>
   1dbc8:	bl	e114 <match@plt>
   1dbcc:	cmp	r0, #0
   1dbd0:	bne	1dbe4 <find_conf_by_address+0x568>
   1dbd4:	b	1db60 <find_conf_by_address+0x4e4>
   1dbd8:	ldr	r0, [sp, #16]
   1dbdc:	cmp	r0, #0
   1dbe0:	bne	1db54 <find_conf_by_address+0x4d8>
   1dbe4:	ldr	r0, [r6, #144]	; 0x90
   1dbe8:	mov	r1, r8
   1dbec:	bl	e114 <match@plt>
   1dbf0:	cmp	r0, #0
   1dbf4:	bne	1db54 <find_conf_by_address+0x4d8>
   1dbf8:	b	1db60 <find_conf_by_address+0x4e4>
   1dbfc:	ldr	r4, [r5]
   1dc00:	cmp	r4, #0
   1dc04:	ldr	r6, [sp, #4]
   1dc08:	beq	1dcd8 <find_conf_by_address+0x65c>
   1dc0c:	ldr	r5, [sp, #12]
   1dc10:	b	1dc28 <find_conf_by_address+0x5ac>
   1dc14:	ldr	sl, [r4, #140]	; 0x8c
   1dc18:	ldr	r5, [r4, #152]	; 0x98
   1dc1c:	ldr	r4, [r4, #156]	; 0x9c
   1dc20:	cmp	r4, #0
   1dc24:	beq	1dcdc <find_conf_by_address+0x660>
   1dc28:	ldr	r0, [r4, #136]	; 0x88
   1dc2c:	cmp	r0, r7
   1dc30:	bne	1dc1c <find_conf_by_address+0x5a0>
   1dc34:	ldr	r0, [r4]
   1dc38:	cmp	r0, #1
   1dc3c:	bne	1dc1c <find_conf_by_address+0x5a0>
   1dc40:	ldr	r0, [r4, #140]	; 0x8c
   1dc44:	cmp	r0, sl
   1dc48:	bls	1dc1c <find_conf_by_address+0x5a0>
   1dc4c:	ldr	r0, [r4, #4]
   1dc50:	mov	r1, r9
   1dc54:	bl	e114 <match@plt>
   1dc58:	cmp	r0, #0
   1dc5c:	beq	1dcb8 <find_conf_by_address+0x63c>
   1dc60:	ldr	r0, [fp, #8]
   1dc64:	cmp	r0, #2
   1dc68:	bne	1dc94 <find_conf_by_address+0x618>
   1dc6c:	ldr	r0, [r4, #148]	; 0x94
   1dc70:	cmp	r0, #0
   1dc74:	beq	1dca0 <find_conf_by_address+0x624>
   1dc78:	ldr	r1, [fp, #20]
   1dc7c:	cmp	r1, #0
   1dc80:	beq	1dc1c <find_conf_by_address+0x5a0>
   1dc84:	bl	e114 <match@plt>
   1dc88:	cmp	r0, #0
   1dc8c:	bne	1dca0 <find_conf_by_address+0x624>
   1dc90:	b	1dc1c <find_conf_by_address+0x5a0>
   1dc94:	ldr	r0, [sp, #16]
   1dc98:	cmp	r0, #0
   1dc9c:	bne	1dc14 <find_conf_by_address+0x598>
   1dca0:	ldr	r0, [r4, #144]	; 0x90
   1dca4:	mov	r1, r8
   1dca8:	bl	e114 <match@plt>
   1dcac:	cmp	r0, #0
   1dcb0:	bne	1dc14 <find_conf_by_address+0x598>
   1dcb4:	b	1dc1c <find_conf_by_address+0x5a0>
   1dcb8:	cmp	r6, #0
   1dcbc:	beq	1dc1c <find_conf_by_address+0x5a0>
   1dcc0:	ldr	r0, [r4, #4]
   1dcc4:	mov	r1, r6
   1dcc8:	bl	e114 <match@plt>
   1dccc:	cmp	r0, #0
   1dcd0:	bne	1dc60 <find_conf_by_address+0x5e4>
   1dcd4:	b	1dc1c <find_conf_by_address+0x5a0>
   1dcd8:	ldr	r5, [sp, #12]
   1dcdc:	mov	r0, r5
   1dce0:	sub	sp, fp, #28
   1dce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dce8:	.word	0x000284bd
   1dcec:	.word	0x0003d238
   1dcf0:	.word	0x0003d140
   1dcf4:	.word	0x0003d04c
   1dcf8:	.word	0x0003ce64

0001dcfc <hash_ipv6>:
   1dcfc:	push	{fp, lr}
   1dd00:	mov	fp, sp
   1dd04:	mov	ip, r0
   1dd08:	add	lr, r0, #8
   1dd0c:	mov	r3, #0
   1dd10:	mov	r0, #0
   1dd14:	cmp	r1, #8
   1dd18:	blt	1dd38 <hash_ipv6+0x3c>
   1dd1c:	ldrb	r2, [lr, r3]
   1dd20:	eor	r0, r0, r2
   1dd24:	add	r3, r3, #1
   1dd28:	sub	r1, r1, #8
   1dd2c:	cmp	r3, #16
   1dd30:	bne	1dd14 <hash_ipv6+0x18>
   1dd34:	b	1dd58 <hash_ipv6+0x5c>
   1dd38:	cmp	r1, #0
   1dd3c:	beq	1dd58 <hash_ipv6+0x5c>
   1dd40:	add	r2, ip, r3
   1dd44:	ldrb	r2, [r2, #8]
   1dd48:	rsb	r1, r1, #8
   1dd4c:	mvn	r3, #0
   1dd50:	and	r1, r2, r3, lsl r1
   1dd54:	eor	r0, r1, r0
   1dd58:	bfc	r0, #12, #20
   1dd5c:	pop	{fp, pc}

0001dd60 <hash_ipv4>:
   1dd60:	cmp	r1, #0
   1dd64:	moveq	r0, #0
   1dd68:	bxeq	lr
   1dd6c:	push	{r4, sl, fp, lr}
   1dd70:	add	fp, sp, #8
   1dd74:	mov	r4, r1
   1dd78:	ldr	r0, [r0, #4]
   1dd7c:	bl	1e840 <__bswap_32>
   1dd80:	rsb	r1, r4, #32
   1dd84:	mvn	r2, #0
   1dd88:	and	r0, r0, r2, lsl r1
   1dd8c:	eor	r1, r0, r0, lsr #12
   1dd90:	bfc	r1, #12, #20
   1dd94:	eor	r0, r1, r0, lsr #24
   1dd98:	pop	{r4, sl, fp, pc}

0001dd9c <hash_text>:
   1dd9c:	ldrb	r2, [r0]
   1dda0:	cmp	r2, #0
   1dda4:	moveq	r0, #0
   1dda8:	bxeq	lr
   1ddac:	add	r1, r0, #1
   1ddb0:	mov	r0, #0
   1ddb4:	ldr	r3, [pc, #36]	; 1dde0 <hash_text+0x44>
   1ddb8:	ldr	r3, [pc, r3]
   1ddbc:	uxtb	r2, r2
   1ddc0:	ldrb	r2, [r3, r2]
   1ddc4:	rsb	r0, r0, r0, lsl #4
   1ddc8:	sub	r0, r0, r2
   1ddcc:	ldrb	r2, [r1], #1
   1ddd0:	cmp	r2, #0
   1ddd4:	bne	1ddbc <hash_text+0x20>
   1ddd8:	bfc	r0, #12, #20
   1dddc:	bx	lr
   1dde0:	.word	0x0003cd24

0001dde4 <find_address_conf>:
   1dde4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dde8:	add	fp, sp, #28
   1ddec:	sub	sp, sp, #20
   1ddf0:	mov	r8, r3
   1ddf4:	mov	r4, r2
   1ddf8:	mov	r9, r1
   1ddfc:	mov	sl, r0
   1de00:	str	r2, [sp, #8]
   1de04:	mov	r0, #2
   1de08:	str	r0, [sp]
   1de0c:	ldr	r0, [fp, #16]
   1de10:	str	r0, [sp, #12]
   1de14:	ldr	r0, [fp, #12]
   1de18:	str	r0, [sp, #4]
   1de1c:	ldr	r5, [fp, #8]
   1de20:	mov	r7, #0
   1de24:	mov	r0, sl
   1de28:	mov	r2, #0
   1de2c:	mov	r3, r5
   1de30:	bl	d2f8 <find_conf_by_address@plt>
   1de34:	cmp	r0, #0
   1de38:	beq	1df84 <find_address_conf+0x1a0>
   1de3c:	mov	r6, r0
   1de40:	ldr	r0, [r0, #4]
   1de44:	tst	r0, #4
   1de48:	moveq	r8, r4
   1de4c:	tst	r0, #64	; 0x40
   1de50:	bne	1df80 <find_address_conf+0x19c>
   1de54:	tst	r0, #512	; 0x200
   1de58:	bne	1ded8 <find_address_conf+0xf4>
   1de5c:	mov	r0, #0
   1de60:	mov	r1, #64	; 0x40
   1de64:	str	r1, [sp]
   1de68:	ldr	r1, [fp, #12]
   1de6c:	stmib	sp, {r1, r4}
   1de70:	str	r0, [sp, #12]
   1de74:	mov	r0, sl
   1de78:	mov	r1, r9
   1de7c:	mov	r2, #0
   1de80:	mov	r3, r5
   1de84:	bl	d2f8 <find_conf_by_address@plt>
   1de88:	mov	r7, r0
   1de8c:	cmp	r0, #0
   1de90:	bne	1df84 <find_address_conf+0x1a0>
   1de94:	cmp	r8, r4
   1de98:	beq	1df80 <find_address_conf+0x19c>
   1de9c:	mov	r0, #0
   1dea0:	mov	r1, #64	; 0x40
   1dea4:	str	r1, [sp]
   1dea8:	ldr	r1, [fp, #12]
   1deac:	stmib	sp, {r1, r8}
   1deb0:	str	r0, [sp, #12]
   1deb4:	mov	r0, sl
   1deb8:	mov	r1, r9
   1debc:	mov	r2, #0
   1dec0:	mov	r3, r5
   1dec4:	bl	d2f8 <find_conf_by_address@plt>
   1dec8:	mov	r7, r0
   1decc:	cmp	r0, #0
   1ded0:	moveq	r7, r6
   1ded4:	b	1df84 <find_address_conf+0x1a0>
   1ded8:	ldr	r7, [r6, #12]
   1dedc:	mov	r0, r7
   1dee0:	mov	r1, #64	; 0x40
   1dee4:	bl	dce8 <strchr@plt>
   1dee8:	cmp	r0, #0
   1deec:	beq	1df38 <find_address_conf+0x154>
   1def0:	mov	r5, r0
   1def4:	mov	r1, #0
   1def8:	strb	r1, [r0], #1
   1defc:	ldr	r2, [r6, #12]
   1df00:	mov	r3, #64	; 0x40
   1df04:	str	r3, [sp]
   1df08:	ldr	r3, [fp, #12]
   1df0c:	str	r3, [sp, #4]
   1df10:	str	r2, [sp, #8]
   1df14:	str	r1, [sp, #12]
   1df18:	mov	r1, #0
   1df1c:	mov	r2, #0
   1df20:	mov	r3, #0
   1df24:	bl	d2f8 <find_conf_by_address@plt>
   1df28:	mov	r7, r0
   1df2c:	mov	r0, #64	; 0x40
   1df30:	strb	r0, [r5]
   1df34:	b	1df68 <find_address_conf+0x184>
   1df38:	mov	r0, #0
   1df3c:	mov	r1, #64	; 0x40
   1df40:	str	r1, [sp]
   1df44:	ldr	r1, [fp, #12]
   1df48:	stmib	sp, {r1, r8}
   1df4c:	str	r0, [sp, #12]
   1df50:	mov	r0, r7
   1df54:	mov	r1, #0
   1df58:	mov	r2, #0
   1df5c:	mov	r3, #0
   1df60:	bl	d2f8 <find_conf_by_address@plt>
   1df64:	mov	r7, r0
   1df68:	ldr	r5, [fp, #8]
   1df6c:	cmp	r7, #0
   1df70:	bne	1df84 <find_address_conf+0x1a0>
   1df74:	ldrb	r0, [r6, #7]
   1df78:	tst	r0, #32
   1df7c:	beq	1de5c <find_address_conf+0x78>
   1df80:	mov	r7, r6
   1df84:	mov	r0, r7
   1df88:	sub	sp, fp, #28
   1df8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df90 <find_dline>:
   1df90:	push	{r4, r5, r6, r7, fp, lr}
   1df94:	add	fp, sp, #16
   1df98:	sub	sp, sp, #32
   1df9c:	mov	r5, r1
   1dfa0:	mov	r4, r0
   1dfa4:	mov	r7, #0
   1dfa8:	movw	r6, #1
   1dfac:	movt	r6, #2
   1dfb0:	add	r0, r6, #917504	; 0xe0000
   1dfb4:	stm	sp, {r0, r1, r7}
   1dfb8:	str	r7, [sp, #12]
   1dfbc:	mov	r0, #0
   1dfc0:	mov	r1, #0
   1dfc4:	mov	r2, #0
   1dfc8:	mov	r3, r4
   1dfcc:	bl	d2f8 <find_conf_by_address@plt>
   1dfd0:	cmp	r0, #0
   1dfd4:	bne	1e000 <find_dline+0x70>
   1dfd8:	str	r6, [sp]
   1dfdc:	stmib	sp, {r5, r7}
   1dfe0:	str	r7, [sp, #12]
   1dfe4:	mov	r0, #0
   1dfe8:	mov	r1, #0
   1dfec:	mov	r2, #0
   1dff0:	mov	r3, r4
   1dff4:	bl	d2f8 <find_conf_by_address@plt>
   1dff8:	cmp	r0, #0
   1dffc:	beq	1e008 <find_dline+0x78>
   1e000:	sub	sp, fp, #16
   1e004:	pop	{r4, r5, r6, r7, fp, pc}
   1e008:	ldrh	r0, [r4]
   1e00c:	cmp	r0, #10
   1e010:	bne	1e064 <find_dline+0xd4>
   1e014:	add	r1, sp, #16
   1e018:	mov	r0, r4
   1e01c:	bl	d880 <rb_ipv4_from_ipv6@plt>
   1e020:	cmp	r0, #0
   1e024:	beq	1e064 <find_dline+0xd4>
   1e028:	mov	r0, #0
   1e02c:	mov	r1, #2
   1e030:	str	r6, [sp]
   1e034:	str	r1, [sp, #4]
   1e038:	str	r0, [sp, #8]
   1e03c:	str	r0, [sp, #12]
   1e040:	add	r3, sp, #16
   1e044:	mov	r0, #0
   1e048:	mov	r1, #0
   1e04c:	mov	r2, #0
   1e050:	bl	d2f8 <find_conf_by_address@plt>
   1e054:	cmp	r0, #0
   1e058:	moveq	r0, #0
   1e05c:	sub	sp, fp, #16
   1e060:	pop	{r4, r5, r6, r7, fp, pc}
   1e064:	mov	r0, #0
   1e068:	sub	sp, fp, #16
   1e06c:	pop	{r4, r5, r6, r7, fp, pc}

0001e070 <find_exact_conf_by_address>:
   1e070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e074:	add	fp, sp, #28
   1e078:	sub	sp, sp, #132	; 0x84
   1e07c:	mov	r4, r2
   1e080:	mov	r5, r1
   1e084:	ldr	sl, [pc, #300]	; 1e1b8 <find_exact_conf_by_address+0x148>
   1e088:	add	sl, pc, sl
   1e08c:	cmp	r0, #0
   1e090:	movne	sl, r0
   1e094:	mov	r1, sp
   1e098:	sub	r2, fp, #32
   1e09c:	mov	r0, sl
   1e0a0:	bl	d55c <parse_netmask@plt>
   1e0a4:	mov	r7, r0
   1e0a8:	cmp	r0, #2
   1e0ac:	beq	1e0d4 <find_exact_conf_by_address+0x64>
   1e0b0:	cmp	r7, #3
   1e0b4:	bne	1e0f0 <find_exact_conf_by_address+0x80>
   1e0b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0bc:	asr	r1, r0, #31
   1e0c0:	add	r0, r0, r1, lsr #28
   1e0c4:	bic	r1, r0, #15
   1e0c8:	mov	r0, sp
   1e0cc:	bl	1dcfc <hash_ipv6>
   1e0d0:	b	1e0f8 <find_exact_conf_by_address+0x88>
   1e0d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e0d8:	asr	r1, r0, #31
   1e0dc:	add	r0, r0, r1, lsr #29
   1e0e0:	bic	r1, r0, #7
   1e0e4:	mov	r0, sp
   1e0e8:	bl	1dd60 <hash_ipv4>
   1e0ec:	b	1e0f8 <find_exact_conf_by_address+0x88>
   1e0f0:	mov	r0, sl
   1e0f4:	bl	1e1c0 <get_mask_hash>
   1e0f8:	ldr	r1, [pc, #188]	; 1e1bc <find_exact_conf_by_address+0x14c>
   1e0fc:	ldr	r1, [pc, r1]
   1e100:	ldr	r6, [r1, r0, lsl #2]
   1e104:	mov	r8, #0
   1e108:	cmp	r6, #0
   1e10c:	beq	1e1ac <find_exact_conf_by_address+0x13c>
   1e110:	mov	r9, sp
   1e114:	b	1e138 <find_exact_conf_by_address+0xc8>
   1e118:	ldr	r0, [r0]
   1e11c:	mov	r1, sl
   1e120:	bl	e750 <irccmp@plt>
   1e124:	cmp	r0, #0
   1e128:	beq	1e1a8 <find_exact_conf_by_address+0x138>
   1e12c:	ldr	r6, [r6, #156]	; 0x9c
   1e130:	cmp	r6, #0
   1e134:	beq	1e1ac <find_exact_conf_by_address+0x13c>
   1e138:	ldr	r0, [r6, #136]	; 0x88
   1e13c:	cmp	r0, r5
   1e140:	bne	1e12c <find_exact_conf_by_address+0xbc>
   1e144:	ldr	r0, [r6]
   1e148:	cmp	r0, r7
   1e14c:	bne	1e12c <find_exact_conf_by_address+0xbc>
   1e150:	ldr	r0, [r6, #144]	; 0x90
   1e154:	cmp	r4, #0
   1e158:	cmpne	r0, #0
   1e15c:	bne	1e16c <find_exact_conf_by_address+0xfc>
   1e160:	cmp	r0, r4
   1e164:	bne	1e12c <find_exact_conf_by_address+0xbc>
   1e168:	b	1e17c <find_exact_conf_by_address+0x10c>
   1e16c:	mov	r1, r4
   1e170:	bl	e750 <irccmp@plt>
   1e174:	cmp	r0, #0
   1e178:	bne	1e12c <find_exact_conf_by_address+0xbc>
   1e17c:	add	r0, r6, #4
   1e180:	cmp	r7, #1
   1e184:	beq	1e118 <find_exact_conf_by_address+0xa8>
   1e188:	ldr	r1, [r6, #132]	; 0x84
   1e18c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e190:	cmp	r1, r2
   1e194:	bne	1e12c <find_exact_conf_by_address+0xbc>
   1e198:	mov	r1, r9
   1e19c:	bl	d034 <comp_with_mask_sock@plt>
   1e1a0:	cmp	r0, #0
   1e1a4:	beq	1e12c <find_exact_conf_by_address+0xbc>
   1e1a8:	ldr	r8, [r6, #152]	; 0x98
   1e1ac:	mov	r0, r8
   1e1b0:	sub	sp, fp, #28
   1e1b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1b8:	.word	0x00023c64
   1e1bc:	.word	0x0003c87c

0001e1c0 <get_mask_hash>:
   1e1c0:	push	{r4, sl, fp, lr}
   1e1c4:	add	fp, sp, #8
   1e1c8:	mov	r4, r0
   1e1cc:	bl	dc94 <strlen@plt>
   1e1d0:	add	r0, r4, r0
   1e1d4:	sub	r1, r0, #1
   1e1d8:	cmp	r1, r4
   1e1dc:	bcc	1e224 <get_mask_hash+0x64>
   1e1e0:	ldr	r0, [pc, #72]	; 1e230 <get_mask_hash+0x70>
   1e1e4:	add	r0, pc, r0
   1e1e8:	b	1e1fc <get_mask_hash+0x3c>
   1e1ec:	mov	r0, r3
   1e1f0:	sub	r1, r1, #1
   1e1f4:	cmp	r1, r4
   1e1f8:	bcc	1e224 <get_mask_hash+0x64>
   1e1fc:	mov	r3, r1
   1e200:	ldrb	r2, [r3], #1
   1e204:	cmp	r2, #46	; 0x2e
   1e208:	beq	1e1ec <get_mask_hash+0x2c>
   1e20c:	cmp	r2, #42	; 0x2a
   1e210:	beq	1e21c <get_mask_hash+0x5c>
   1e214:	cmp	r2, #63	; 0x3f
   1e218:	bne	1e1f0 <get_mask_hash+0x30>
   1e21c:	pop	{r4, sl, fp, lr}
   1e220:	b	1dd9c <hash_text>
   1e224:	mov	r0, r4
   1e228:	pop	{r4, sl, fp, lr}
   1e22c:	b	1dd9c <hash_text>
   1e230:	.word	0x00027971

0001e234 <add_conf_by_address>:
   1e234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e238:	add	fp, sp, #28
   1e23c:	sub	sp, sp, #4
   1e240:	mov	r8, r3
   1e244:	mov	r9, r2
   1e248:	mov	r6, r1
   1e24c:	ldr	r5, [pc, #216]	; 1e32c <add_conf_by_address+0xf8>
   1e250:	add	r5, pc, r5
   1e254:	cmp	r0, #0
   1e258:	movne	r5, r0
   1e25c:	bl	1e33c <rb_malloc>
   1e260:	mov	r7, r0
   1e264:	add	r4, r0, #4
   1e268:	mov	r2, sp
   1e26c:	mov	r0, r5
   1e270:	mov	r1, r4
   1e274:	bl	d55c <parse_netmask@plt>
   1e278:	str	r0, [r7]
   1e27c:	ldr	sl, [fp, #8]
   1e280:	cmp	r0, #2
   1e284:	beq	1e2b4 <add_conf_by_address+0x80>
   1e288:	cmp	r0, #3
   1e28c:	bne	1e2d8 <add_conf_by_address+0xa4>
   1e290:	ldr	r0, [sp]
   1e294:	str	r0, [r7, #132]	; 0x84
   1e298:	asr	r1, r0, #31
   1e29c:	add	r0, r0, r1, lsr #28
   1e2a0:	bic	r1, r0, #15
   1e2a4:	str	r1, [sp]
   1e2a8:	mov	r0, r4
   1e2ac:	bl	1dcfc <hash_ipv6>
   1e2b0:	b	1e2e4 <add_conf_by_address+0xb0>
   1e2b4:	ldr	r0, [sp]
   1e2b8:	str	r0, [r7, #132]	; 0x84
   1e2bc:	asr	r1, r0, #31
   1e2c0:	add	r0, r0, r1, lsr #29
   1e2c4:	bic	r1, r0, #7
   1e2c8:	str	r1, [sp]
   1e2cc:	mov	r0, r4
   1e2d0:	bl	1dd60 <hash_ipv4>
   1e2d4:	b	1e2e4 <add_conf_by_address+0xb0>
   1e2d8:	str	r5, [r4]
   1e2dc:	mov	r0, r5
   1e2e0:	bl	1e1c0 <get_mask_hash>
   1e2e4:	ldr	r1, [pc, #68]	; 1e330 <add_conf_by_address+0xfc>
   1e2e8:	ldr	r1, [pc, r1]
   1e2ec:	ldr	r2, [r1, r0, lsl #2]
   1e2f0:	str	r7, [r1, r0, lsl #2]
   1e2f4:	ldr	r0, [pc, #56]	; 1e334 <add_conf_by_address+0x100>
   1e2f8:	ldr	r0, [pc, r0]
   1e2fc:	sub	r1, r0, #1
   1e300:	ldr	r3, [pc, #48]	; 1e338 <add_conf_by_address+0x104>
   1e304:	add	r3, pc, r3
   1e308:	str	r1, [r3]
   1e30c:	str	r6, [r7, #136]	; 0x88
   1e310:	str	r0, [r7, #140]	; 0x8c
   1e314:	str	r9, [r7, #144]	; 0x90
   1e318:	str	r8, [r7, #148]	; 0x94
   1e31c:	str	sl, [r7, #152]	; 0x98
   1e320:	str	r2, [r7, #156]	; 0x9c
   1e324:	sub	sp, fp, #28
   1e328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e32c:	.word	0x00023a9c
   1e330:	.word	0x0003c690
   1e334:	.word	0x0003d09c
   1e338:	.word	0x0003d090

0001e33c <rb_malloc>:
   1e33c:	push	{fp, lr}
   1e340:	mov	fp, sp
   1e344:	mov	r0, #1
   1e348:	mov	r1, #160	; 0xa0
   1e34c:	bl	cfa4 <calloc@plt>
   1e350:	cmp	r0, #0
   1e354:	popne	{fp, pc}
   1e358:	bl	d448 <rb_outofmemory@plt>

0001e35c <delete_one_address_conf>:
   1e35c:	push	{r4, r5, fp, lr}
   1e360:	add	fp, sp, #8
   1e364:	sub	sp, sp, #136	; 0x88
   1e368:	mov	r4, r1
   1e36c:	mov	r5, r0
   1e370:	add	r1, sp, #4
   1e374:	sub	r2, fp, #12
   1e378:	bl	d55c <parse_netmask@plt>
   1e37c:	cmp	r0, #2
   1e380:	beq	1e3ac <delete_one_address_conf+0x50>
   1e384:	cmp	r0, #3
   1e388:	bne	1e3cc <delete_one_address_conf+0x70>
   1e38c:	ldr	r0, [fp, #-12]
   1e390:	asr	r1, r0, #31
   1e394:	add	r0, r0, r1, lsr #28
   1e398:	bic	r1, r0, #15
   1e39c:	str	r1, [fp, #-12]
   1e3a0:	add	r0, sp, #4
   1e3a4:	bl	1dcfc <hash_ipv6>
   1e3a8:	b	1e3d4 <delete_one_address_conf+0x78>
   1e3ac:	ldr	r0, [fp, #-12]
   1e3b0:	asr	r1, r0, #31
   1e3b4:	add	r0, r0, r1, lsr #29
   1e3b8:	bic	r1, r0, #7
   1e3bc:	str	r1, [fp, #-12]
   1e3c0:	add	r0, sp, #4
   1e3c4:	bl	1dd60 <hash_ipv4>
   1e3c8:	b	1e3d4 <delete_one_address_conf+0x78>
   1e3cc:	mov	r0, r5
   1e3d0:	bl	1e1c0 <get_mask_hash>
   1e3d4:	ldr	r1, [pc, #140]	; 1e468 <delete_one_address_conf+0x10c>
   1e3d8:	ldr	r1, [pc, r1]
   1e3dc:	ldr	r5, [r1, r0, lsl #2]!
   1e3e0:	cmp	r5, #0
   1e3e4:	beq	1e41c <delete_one_address_conf+0xc0>
   1e3e8:	ldr	r0, [r5, #152]	; 0x98
   1e3ec:	cmp	r0, r4
   1e3f0:	beq	1e424 <delete_one_address_conf+0xc8>
   1e3f4:	mov	r0, r5
   1e3f8:	ldr	r5, [r0, #156]	; 0x9c
   1e3fc:	cmp	r5, #0
   1e400:	beq	1e41c <delete_one_address_conf+0xc0>
   1e404:	ldr	r2, [r5, #152]	; 0x98
   1e408:	cmp	r2, r4
   1e40c:	mov	r2, r0
   1e410:	mov	r0, r5
   1e414:	bne	1e3f8 <delete_one_address_conf+0x9c>
   1e418:	b	1e428 <delete_one_address_conf+0xcc>
   1e41c:	sub	sp, fp, #8
   1e420:	pop	{r4, r5, fp, pc}
   1e424:	mov	r2, #0
   1e428:	cmp	r2, #0
   1e42c:	addne	r1, r2, #156	; 0x9c
   1e430:	ldr	r0, [r5, #156]	; 0x9c
   1e434:	str	r0, [r1]
   1e438:	ldr	r0, [r4]
   1e43c:	ldr	r1, [r4, #8]
   1e440:	orr	r0, r0, #-2147483648	; 0x80000000
   1e444:	str	r0, [r4]
   1e448:	cmp	r1, #0
   1e44c:	bne	1e458 <delete_one_address_conf+0xfc>
   1e450:	mov	r0, r4
   1e454:	bl	dc34 <free_conf@plt>
   1e458:	mov	r0, r5
   1e45c:	bl	1e46c <rb_free>
   1e460:	sub	sp, fp, #8
   1e464:	pop	{r4, r5, fp, pc}
   1e468:	.word	0x0003c5a0

0001e46c <rb_free>:
   1e46c:	cmp	r0, #0
   1e470:	bxeq	lr
   1e474:	b	d328 <free@plt>

0001e478 <clear_out_address_conf>:
   1e478:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e47c:	add	fp, sp, #24
   1e480:	mov	r8, #0
   1e484:	ldr	r9, [pc, #148]	; 1e520 <clear_out_address_conf+0xa8>
   1e488:	ldr	r9, [pc, r9]
   1e48c:	mov	r7, #0
   1e490:	b	1e4a4 <clear_out_address_conf+0x2c>
   1e494:	str	r8, [r6]
   1e498:	add	r7, r7, #1
   1e49c:	cmp	r7, #4096	; 0x1000
   1e4a0:	beq	1e51c <clear_out_address_conf+0xa4>
   1e4a4:	mov	r6, r9
   1e4a8:	ldr	r4, [r6, r7, lsl #2]!
   1e4ac:	cmp	r4, #0
   1e4b0:	bne	1e4cc <clear_out_address_conf+0x54>
   1e4b4:	b	1e494 <clear_out_address_conf+0x1c>
   1e4b8:	str	r4, [r6]
   1e4bc:	mov	r6, r1
   1e4c0:	cmp	r5, #0
   1e4c4:	mov	r4, r5
   1e4c8:	beq	1e494 <clear_out_address_conf+0x1c>
   1e4cc:	mov	r1, r4
   1e4d0:	ldr	r5, [r1, #156]!	; 0x9c
   1e4d4:	ldr	r0, [r1, #-4]
   1e4d8:	ldrb	r2, [r0, #6]
   1e4dc:	tst	r2, #128	; 0x80
   1e4e0:	bne	1e4b8 <clear_out_address_conf+0x40>
   1e4e4:	ldr	r2, [r4, #136]	; 0x88
   1e4e8:	cmp	r2, #2
   1e4ec:	cmpne	r2, #1048576	; 0x100000
   1e4f0:	bne	1e4b8 <clear_out_address_conf+0x40>
   1e4f4:	ldr	r1, [r0]
   1e4f8:	ldr	r2, [r0, #8]
   1e4fc:	orr	r1, r1, #-2147483648	; 0x80000000
   1e500:	str	r1, [r0]
   1e504:	cmp	r2, #0
   1e508:	bne	1e510 <clear_out_address_conf+0x98>
   1e50c:	bl	dc34 <free_conf@plt>
   1e510:	mov	r0, r4
   1e514:	bl	1e46c <rb_free>
   1e518:	b	1e4c0 <clear_out_address_conf+0x48>
   1e51c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e520:	.word	0x0003c4f0

0001e524 <clear_out_address_conf_bans>:
   1e524:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e528:	add	fp, sp, #24
   1e52c:	mov	r8, #0
   1e530:	ldr	r9, [pc, #156]	; 1e5d4 <clear_out_address_conf_bans+0xb0>
   1e534:	ldr	r9, [pc, r9]
   1e538:	mov	r7, #0
   1e53c:	b	1e550 <clear_out_address_conf_bans+0x2c>
   1e540:	str	r8, [r1]
   1e544:	add	r7, r7, #1
   1e548:	cmp	r7, #4096	; 0x1000
   1e54c:	beq	1e5d0 <clear_out_address_conf_bans+0xac>
   1e550:	mov	r6, r9
   1e554:	ldr	r4, [r6, r7, lsl #2]!
   1e558:	cmp	r4, #0
   1e55c:	bne	1e57c <clear_out_address_conf_bans+0x58>
   1e560:	mov	r1, r6
   1e564:	b	1e540 <clear_out_address_conf_bans+0x1c>
   1e568:	str	r4, [r6]
   1e56c:	mov	r6, r1
   1e570:	cmp	r5, #0
   1e574:	mov	r4, r5
   1e578:	beq	1e540 <clear_out_address_conf_bans+0x1c>
   1e57c:	mov	r1, r4
   1e580:	ldr	r5, [r1, #156]!	; 0x9c
   1e584:	ldr	r0, [r1, #-4]
   1e588:	ldrb	r2, [r0, #6]
   1e58c:	tst	r2, #128	; 0x80
   1e590:	bne	1e568 <clear_out_address_conf_bans+0x44>
   1e594:	ldr	r2, [r4, #136]	; 0x88
   1e598:	cmp	r2, #1048576	; 0x100000
   1e59c:	cmpne	r2, #2
   1e5a0:	beq	1e568 <clear_out_address_conf_bans+0x44>
   1e5a4:	ldr	r1, [r0]
   1e5a8:	ldr	r2, [r0, #8]
   1e5ac:	orr	r1, r1, #-2147483648	; 0x80000000
   1e5b0:	str	r1, [r0]
   1e5b4:	cmp	r2, #0
   1e5b8:	bne	1e5c0 <clear_out_address_conf_bans+0x9c>
   1e5bc:	bl	dc34 <free_conf@plt>
   1e5c0:	mov	r0, r4
   1e5c4:	bl	1e46c <rb_free>
   1e5c8:	mov	r1, r6
   1e5cc:	b	1e570 <clear_out_address_conf_bans+0x4c>
   1e5d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e5d4:	.word	0x0003c444

0001e5d8 <show_iline_prefix>:
   1e5d8:	push	{fp, lr}
   1e5dc:	mov	fp, sp
   1e5e0:	mov	ip, r2
   1e5e4:	mov	lr, r0
   1e5e8:	ldr	r2, [r1, #4]
   1e5ec:	ldr	r0, [pc, #192]	; 1e6b4 <show_iline_prefix+0xdc>
   1e5f0:	add	r0, pc, r0
   1e5f4:	tst	r2, #4
   1e5f8:	movne	r3, #45	; 0x2d
   1e5fc:	strbne	r3, [r0], #1
   1e600:	tst	r2, #8
   1e604:	movne	r3, #43	; 0x2b
   1e608:	strbne	r3, [r0], #1
   1e60c:	tst	r2, #512	; 0x200
   1e610:	movne	r2, #61	; 0x3d
   1e614:	strbne	r2, [r0], #1
   1e618:	ldrb	r2, [lr, #57]	; 0x39
   1e61c:	tst	r2, #16
   1e620:	beq	1e634 <show_iline_prefix+0x5c>
   1e624:	ldrb	r2, [r1, #5]
   1e628:	tst	r2, #64	; 0x40
   1e62c:	movne	r2, #124	; 0x7c
   1e630:	strbne	r2, [r0], #1
   1e634:	ldrb	r2, [lr, #57]	; 0x39
   1e638:	tst	r2, #16
   1e63c:	beq	1e65c <show_iline_prefix+0x84>
   1e640:	ldr	r2, [r1, #4]
   1e644:	movw	r3, #64	; 0x40
   1e648:	movt	r3, #1024	; 0x400
   1e64c:	and	r2, r2, r3
   1e650:	cmp	r2, #67108864	; 0x4000000
   1e654:	moveq	r2, #36	; 0x24
   1e658:	strbeq	r2, [r0], #1
   1e65c:	ldrb	r2, [lr, #57]	; 0x39
   1e660:	tst	r2, #16
   1e664:	beq	1e678 <show_iline_prefix+0xa0>
   1e668:	ldrb	r2, [r1, #4]
   1e66c:	tst	r2, #64	; 0x40
   1e670:	movne	r2, #94	; 0x5e
   1e674:	strbne	r2, [r0], #1
   1e678:	ldrb	r2, [lr, #57]	; 0x39
   1e67c:	tst	r2, #16
   1e680:	beq	1e694 <show_iline_prefix+0xbc>
   1e684:	ldrb	r1, [r1, #4]
   1e688:	tst	r1, #128	; 0x80
   1e68c:	movne	r1, #62	; 0x3e
   1e690:	strbne	r1, [r0], #1
   1e694:	mov	r1, #0
   1e698:	strb	r1, [r0]
   1e69c:	mov	r1, ip
   1e6a0:	mov	r2, #10
   1e6a4:	bl	df7c <strncpy@plt>
   1e6a8:	ldr	r0, [pc, #8]	; 1e6b8 <show_iline_prefix+0xe0>
   1e6ac:	add	r0, pc, r0
   1e6b0:	pop	{fp, pc}
   1e6b4:	.word	0x00047698
   1e6b8:	.word	0x000475dc

0001e6bc <report_auth>:
   1e6bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6c0:	add	fp, sp, #28
   1e6c4:	sub	sp, sp, #44	; 0x2c
   1e6c8:	mov	r4, r0
   1e6cc:	mov	r8, #0
   1e6d0:	ldr	r5, [pc, #340]	; 1e82c <report_auth+0x170>
   1e6d4:	add	r5, pc, r5
   1e6d8:	b	1e6e8 <report_auth+0x2c>
   1e6dc:	add	r8, r8, #1
   1e6e0:	cmp	r8, #4096	; 0x1000
   1e6e4:	beq	1e824 <report_auth+0x168>
   1e6e8:	ldr	r0, [pc, #320]	; 1e830 <report_auth+0x174>
   1e6ec:	ldr	r0, [pc, r0]
   1e6f0:	ldr	r7, [r0, r8, lsl #2]
   1e6f4:	cmp	r7, #0
   1e6f8:	bne	1e770 <report_auth+0xb4>
   1e6fc:	b	1e6dc <report_auth+0x20>
   1e700:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1e704:	ldr	sl, [sp, #24]
   1e708:	ldr	r2, [sp, #32]
   1e70c:	mov	r0, r4
   1e710:	mov	r1, r6
   1e714:	bl	db08 <show_iline_prefix@plt>
   1e718:	mov	r0, r6
   1e71c:	mov	r1, r4
   1e720:	bl	d04c <show_ip_conf@plt>
   1e724:	ldr	r1, [sp, #36]	; 0x24
   1e728:	ldr	r2, [sp, #20]
   1e72c:	ldr	r3, [sp, #28]
   1e730:	cmp	r0, #0
   1e734:	ldr	r0, [pc, #252]	; 1e838 <report_auth+0x17c>
   1e738:	add	r0, pc, r0
   1e73c:	moveq	r1, r0
   1e740:	str	sl, [sp]
   1e744:	ldr	r0, [pc, #240]	; 1e83c <report_auth+0x180>
   1e748:	add	r0, pc, r0
   1e74c:	stmib	sp, {r0, r1, r2, r3}
   1e750:	mov	r0, r4
   1e754:	mov	r1, #215	; 0xd7
   1e758:	mov	r2, r5
   1e75c:	mov	r3, r9
   1e760:	bl	dc7c <sendto_one_numeric@plt>
   1e764:	ldr	r7, [r7, #156]	; 0x9c
   1e768:	cmp	r7, #0
   1e76c:	beq	1e6dc <report_auth+0x20>
   1e770:	ldr	r0, [r7, #136]	; 0x88
   1e774:	cmp	r0, #2
   1e778:	bne	1e764 <report_auth+0xa8>
   1e77c:	ldr	r0, [r4, #24]
   1e780:	ldr	r6, [r7, #152]	; 0x98
   1e784:	cmp	r0, #0
   1e788:	beq	1e7ac <report_auth+0xf0>
   1e78c:	ldr	r0, [r0, #36]	; 0x24
   1e790:	cmp	r0, #0
   1e794:	beq	1e7ac <report_auth+0xf0>
   1e798:	ldr	r1, [pc, #148]	; 1e834 <report_auth+0x178>
   1e79c:	add	r1, pc, r1
   1e7a0:	bl	e594 <privilegeset_in_set@plt>
   1e7a4:	cmp	r0, #0
   1e7a8:	bne	1e7dc <report_auth+0x120>
   1e7ac:	ldrb	r0, [r4, #57]	; 0x39
   1e7b0:	tst	r0, #16
   1e7b4:	beq	1e7d0 <report_auth+0x114>
   1e7b8:	ldr	r0, [r4, #24]
   1e7bc:	cmp	r0, #0
   1e7c0:	beq	1e7d0 <report_auth+0x114>
   1e7c4:	ldr	r0, [r0, #36]	; 0x24
   1e7c8:	cmp	r0, #0
   1e7cc:	beq	1e7dc <report_auth+0x120>
   1e7d0:	ldrb	r0, [r6, #5]
   1e7d4:	tst	r0, #2
   1e7d8:	bne	1e764 <report_auth+0xa8>
   1e7dc:	add	r0, sp, #32
   1e7e0:	str	r0, [sp]
   1e7e4:	add	r0, sp, #20
   1e7e8:	str	r0, [sp, #4]
   1e7ec:	add	r0, sp, #28
   1e7f0:	str	r0, [sp, #8]
   1e7f4:	mov	r0, r6
   1e7f8:	sub	r1, fp, #32
   1e7fc:	add	r2, sp, #36	; 0x24
   1e800:	add	r3, sp, #24
   1e804:	bl	e6fc <get_printable_conf@plt>
   1e808:	ldr	r0, [r6, #24]
   1e80c:	cmp	r0, #0
   1e810:	beq	1e700 <report_auth+0x44>
   1e814:	ldrb	r1, [r0]
   1e818:	cmp	r1, #0
   1e81c:	strne	r0, [sp, #24]
   1e820:	b	1e700 <report_auth+0x44>
   1e824:	sub	sp, fp, #28
   1e828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e82c:	.word	0x00023623
   1e830:	.word	0x0003c28c
   1e834:	.word	0x00022856
   1e838:	.word	0x0002315d
   1e83c:	.word	0x00047540

0001e840 <__bswap_32>:
   1e840:	rev	r0, r0
   1e844:	bx	lr

0001e848 <ircd_shutdown>:
   1e848:	push	{fp, lr}
   1e84c:	mov	fp, sp
   1e850:	sub	sp, sp, #8
   1e854:	mov	r4, r0
   1e858:	ldr	r0, [pc, #188]	; 1e91c <ircd_shutdown+0xd4>
   1e85c:	ldr	r0, [pc, r0]
   1e860:	ldr	r7, [r0]
   1e864:	cmp	r7, #0
   1e868:	beq	1e8a4 <ircd_shutdown+0x5c>
   1e86c:	ldr	r0, [pc, #172]	; 1e920 <ircd_shutdown+0xd8>
   1e870:	ldr	r0, [pc, r0]
   1e874:	add	r5, r0, #88	; 0x58
   1e878:	ldr	r6, [pc, #164]	; 1e924 <ircd_shutdown+0xdc>
   1e87c:	add	r6, pc, r6
   1e880:	ldr	r0, [r7]
   1e884:	str	r4, [sp]
   1e888:	add	r3, r0, #88	; 0x58
   1e88c:	mov	r1, r6
   1e890:	mov	r2, r5
   1e894:	bl	d1e4 <sendto_one@plt>
   1e898:	ldr	r7, [r7, #8]
   1e89c:	cmp	r7, #0
   1e8a0:	bne	1e880 <ircd_shutdown+0x38>
   1e8a4:	ldr	r0, [pc, #124]	; 1e928 <ircd_shutdown+0xe0>
   1e8a8:	ldr	r0, [pc, r0]
   1e8ac:	ldr	r7, [r0]
   1e8b0:	cmp	r7, #0
   1e8b4:	beq	1e8ec <ircd_shutdown+0xa4>
   1e8b8:	ldr	r0, [pc, #108]	; 1e92c <ircd_shutdown+0xe4>
   1e8bc:	ldr	r0, [pc, r0]
   1e8c0:	add	r5, r0, #88	; 0x58
   1e8c4:	ldr	r6, [pc, #100]	; 1e930 <ircd_shutdown+0xe8>
   1e8c8:	add	r6, pc, r6
   1e8cc:	ldr	r0, [r7]
   1e8d0:	mov	r1, r6
   1e8d4:	mov	r2, r5
   1e8d8:	mov	r3, r4
   1e8dc:	bl	d1e4 <sendto_one@plt>
   1e8e0:	ldr	r7, [r7, #8]
   1e8e4:	cmp	r7, #0
   1e8e8:	bne	1e8cc <ircd_shutdown+0x84>
   1e8ec:	ldr	r1, [pc, #64]	; 1e934 <ircd_shutdown+0xec>
   1e8f0:	add	r1, pc, r1
   1e8f4:	mov	r0, #0
   1e8f8:	mov	r2, r4
   1e8fc:	bl	e0b4 <ilog@plt>
   1e900:	bl	e3c0 <close_logfiles@plt>
   1e904:	ldr	r0, [pc, #44]	; 1e938 <ircd_shutdown+0xf0>
   1e908:	ldr	r0, [pc, r0]
   1e90c:	ldr	r0, [r0]
   1e910:	bl	d694 <unlink@plt>
   1e914:	mov	r0, #0
   1e918:	bl	dc28 <exit@plt>
   1e91c:	.word	0x0003c2cc
   1e920:	.word	0x0003c2e8
   1e924:	.word	0x0002365a
   1e928:	.word	0x0003c128
   1e92c:	.word	0x0003c29c
   1e930:	.word	0x00023634
   1e934:	.word	0x000235f5
   1e938:	.word	0x0003c1b4

0001e93c <charybdis_main>:
   1e93c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e940:	add	fp, sp, #28
   1e944:	sub	sp, sp, #20
   1e948:	str	r1, [sp, #12]
   1e94c:	str	r0, [sp, #16]
   1e950:	bl	d7cc <geteuid@plt>
   1e954:	cmp	r0, #0
   1e958:	beq	1eeb4 <charybdis_main+0x578>
   1e95c:	ldr	r9, [pc, #1848]	; 1f09c <charybdis_main+0x760>
   1e960:	ldr	r9, [pc, r9]
   1e964:	mov	r0, #30
   1e968:	str	r0, [r9, #272]	; 0x110
   1e96c:	ldr	r0, [pc, #1836]	; 1f0a0 <charybdis_main+0x764>
   1e970:	ldr	r0, [pc, r0]
   1e974:	ldr	r1, [r0]
   1e978:	ldr	r2, [r0, #32]
   1e97c:	ldr	r3, [r0, #40]	; 0x28
   1e980:	ldr	r0, [r0, #44]	; 0x2c
   1e984:	ldr	r7, [pc, #1816]	; 1f0a4 <charybdis_main+0x768>
   1e988:	ldr	r7, [pc, r7]
   1e98c:	str	r3, [r7]
   1e990:	ldr	r7, [pc, #1808]	; 1f0a8 <charybdis_main+0x76c>
   1e994:	ldr	r7, [pc, r7]
   1e998:	str	r0, [r7]
   1e99c:	stm	r9, {r1, r2}
   1e9a0:	bl	1f1b0 <init_sys>
   1e9a4:	mov	r0, #63	; 0x3f
   1e9a8:	bl	e63c <umask@plt>
   1e9ac:	ldr	r0, [pc, #1784]	; 1f0ac <charybdis_main+0x770>
   1e9b0:	ldr	r0, [pc, r0]
   1e9b4:	ldr	r1, [sp, #12]
   1e9b8:	str	r1, [r0]
   1e9bc:	ldr	r2, [pc, #1772]	; 1f0b0 <charybdis_main+0x774>
   1e9c0:	ldr	r2, [pc, r2]
   1e9c4:	add	r0, sp, #16
   1e9c8:	add	r1, sp, #12
   1e9cc:	bl	d868 <parseargs@plt>
   1e9d0:	ldr	r0, [r9]
   1e9d4:	bl	d784 <chdir@plt>
   1e9d8:	cmp	r0, #0
   1e9dc:	bne	1eefc <charybdis_main+0x5c0>
   1e9e0:	bl	da00 <rb_set_time@plt>
   1e9e4:	bl	1f258 <setup_corefile>
   1e9e8:	bl	d4c0 <init_operhash@plt>
   1e9ec:	ldr	r8, [pc, #1728]	; 1f0b4 <charybdis_main+0x778>
   1e9f0:	ldr	r8, [pc, r8]
   1e9f4:	mov	r6, #0
   1e9f8:	mov	r0, r8
   1e9fc:	mov	r1, #0
   1ea00:	mov	r2, #448	; 0x1c0
   1ea04:	bl	df28 <memset@plt>
   1ea08:	ldr	r4, [pc, #1704]	; 1f0b8 <charybdis_main+0x77c>
   1ea0c:	ldr	r4, [pc, r4]
   1ea10:	mov	r0, r4
   1ea14:	mov	r1, #0
   1ea18:	mov	r2, #492	; 0x1ec
   1ea1c:	bl	df28 <memset@plt>
   1ea20:	str	r4, [r8, #432]	; 0x1b0
   1ea24:	ldr	r0, [pc, #1680]	; 1f0bc <charybdis_main+0x780>
   1ea28:	ldr	r0, [pc, r0]
   1ea2c:	str	r6, [r0]
   1ea30:	str	r6, [r0, #4]
   1ea34:	str	r6, [r0, #8]
   1ea38:	ldr	r0, [pc, #1664]	; 1f0c0 <charybdis_main+0x784>
   1ea3c:	ldr	r0, [pc, r0]
   1ea40:	str	r6, [r0]
   1ea44:	str	r6, [r0, #4]
   1ea48:	str	r6, [r0, #8]
   1ea4c:	ldr	r0, [pc, #1648]	; 1f0c4 <charybdis_main+0x788>
   1ea50:	ldr	r0, [pc, r0]
   1ea54:	str	r6, [r0]
   1ea58:	str	r6, [r0, #4]
   1ea5c:	str	r6, [r0, #8]
   1ea60:	ldr	r0, [pc, #1632]	; 1f0c8 <charybdis_main+0x78c>
   1ea64:	ldr	r0, [pc, r0]
   1ea68:	str	r6, [r0]
   1ea6c:	str	r6, [r0, #4]
   1ea70:	str	r6, [r0, #8]
   1ea74:	ldr	r0, [pc, #1616]	; 1f0cc <charybdis_main+0x790>
   1ea78:	ldr	r0, [pc, r0]
   1ea7c:	str	r6, [r0]
   1ea80:	str	r6, [r0, #4]
   1ea84:	str	r6, [r0, #8]
   1ea88:	ldr	r0, [pc, #1600]	; 1f0d0 <charybdis_main+0x794>
   1ea8c:	ldr	r0, [pc, r0]
   1ea90:	str	r6, [r0]
   1ea94:	str	r6, [r0, #4]
   1ea98:	str	r6, [r0, #8]
   1ea9c:	ldr	r0, [pc, #1584]	; 1f0d4 <charybdis_main+0x798>
   1eaa0:	ldr	r0, [pc, r0]
   1eaa4:	str	r6, [r0]
   1eaa8:	str	r6, [r0, #4]
   1eaac:	str	r6, [r0, #8]
   1eab0:	bl	1f29c <rb_dlinkAddTail>
   1eab4:	ldr	r0, [pc, #1564]	; 1f0d8 <charybdis_main+0x79c>
   1eab8:	ldr	r0, [pc, r0]
   1eabc:	vmov.i32	q8, #0	; 0x00000000
   1eac0:	str	r6, [r0, #16]
   1eac4:	mov	r1, #20
   1eac8:	vst1.32	{d16-d17}, [r0], r1
   1eacc:	str	r6, [r0]
   1ead0:	ldr	r5, [pc, #1540]	; 1f0dc <charybdis_main+0x7a0>
   1ead4:	ldr	r5, [pc, r5]
   1ead8:	mov	r0, r5
   1eadc:	mov	r1, #0
   1eae0:	mov	r2, #308	; 0x134
   1eae4:	bl	df28 <memset@plt>
   1eae8:	ldr	r0, [pc, #1520]	; 1f0e0 <charybdis_main+0x7a4>
   1eaec:	ldr	r0, [pc, r0]
   1eaf0:	str	r6, [r0]
   1eaf4:	str	r6, [r0, #4]
   1eaf8:	str	r6, [r0, #8]
   1eafc:	ldr	r0, [pc, #1504]	; 1f0e4 <charybdis_main+0x7a8>
   1eb00:	ldr	r0, [pc, r0]
   1eb04:	mov	r1, #0
   1eb08:	mov	r2, #136	; 0x88
   1eb0c:	bl	df28 <memset@plt>
   1eb10:	ldr	r0, [pc, #1488]	; 1f0e8 <charybdis_main+0x7ac>
   1eb14:	ldr	r0, [pc, r0]
   1eb18:	cmp	r0, #0
   1eb1c:	bne	1ef38 <charybdis_main+0x5fc>
   1eb20:	bl	dca0 <setup_signals@plt>
   1eb24:	ldr	sl, [pc, #1472]	; 1f0ec <charybdis_main+0x7b0>
   1eb28:	ldr	sl, [pc, sl]
   1eb2c:	ldr	r0, [sl]
   1eb30:	cmp	r0, #0
   1eb34:	beq	1eb48 <charybdis_main+0x20c>
   1eb38:	ldr	r0, [pc, #1456]	; 1f0f0 <charybdis_main+0x7b4>
   1eb3c:	ldr	r0, [pc, r0]
   1eb40:	mov	r1, #1
   1eb44:	strb	r1, [r0]
   1eb48:	ldr	r4, [pc, #1444]	; 1f0f4 <charybdis_main+0x7b8>
   1eb4c:	add	r4, pc, r4
   1eb50:	mov	r0, r4
   1eb54:	mov	r1, #2
   1eb58:	bl	dbec <open@plt>
   1eb5c:	cmp	r0, #1
   1eb60:	bgt	1eb6c <charybdis_main+0x230>
   1eb64:	cmn	r0, #1
   1eb68:	bne	1eb50 <charybdis_main+0x214>
   1eb6c:	cmp	r0, #3
   1eb70:	blt	1eb7c <charybdis_main+0x240>
   1eb74:	bl	e72c <close@plt>
   1eb78:	b	1eb84 <charybdis_main+0x248>
   1eb7c:	cmn	r0, #1
   1eb80:	beq	1ef78 <charybdis_main+0x63c>
   1eb84:	ldr	r0, [sl]
   1eb88:	cmp	r0, #0
   1eb8c:	bne	1ebd8 <charybdis_main+0x29c>
   1eb90:	ldr	r0, [r7]
   1eb94:	bl	1f2f8 <check_pidfile>
   1eb98:	ldr	r0, [pc, #1368]	; 1f0f8 <charybdis_main+0x7bc>
   1eb9c:	ldr	r0, [pc, r0]
   1eba0:	ldr	r1, [r0]
   1eba4:	ldr	r0, [pc, #1360]	; 1f0fc <charybdis_main+0x7c0>
   1eba8:	add	r0, pc, r0
   1ebac:	bl	d10c <inotice@plt>
   1ebb0:	bl	e660 <rb_lib_version@plt>
   1ebb4:	mov	r1, r0
   1ebb8:	ldr	r0, [pc, #1344]	; 1f100 <charybdis_main+0x7c4>
   1ebbc:	add	r0, pc, r0
   1ebc0:	bl	d10c <inotice@plt>
   1ebc4:	ldr	r0, [pc, #1336]	; 1f104 <charybdis_main+0x7c8>
   1ebc8:	ldr	r0, [pc, r0]
   1ebcc:	ldrb	r0, [r0]
   1ebd0:	cmp	r0, #0
   1ebd4:	bleq	1f378 <make_daemon>
   1ebd8:	ldr	r0, [pc, #1320]	; 1f108 <charybdis_main+0x7cc>
   1ebdc:	ldr	r0, [pc, r0]
   1ebe0:	ldrb	r0, [r0]
   1ebe4:	ldr	r1, [pc, #1312]	; 1f10c <charybdis_main+0x7d0>
   1ebe8:	ldr	r1, [pc, r1]
   1ebec:	ldr	r1, [r1]
   1ebf0:	mov	r2, #1024	; 0x400
   1ebf4:	mov	r3, #8192	; 0x2000
   1ebf8:	stm	sp, {r1, r3}
   1ebfc:	str	r2, [sp, #8]
   1ec00:	eor	r3, r0, #1
   1ec04:	ldr	r0, [pc, #1284]	; 1f110 <charybdis_main+0x7d4>
   1ec08:	add	r0, pc, r0
   1ec0c:	ldr	r1, [pc, #1280]	; 1f114 <charybdis_main+0x7d8>
   1ec10:	add	r1, pc, r1
   1ec14:	ldr	r2, [pc, #1276]	; 1f118 <charybdis_main+0x7dc>
   1ec18:	add	r2, pc, r2
   1ec1c:	bl	e048 <rb_lib_init@plt>
   1ec20:	mov	r0, #2048	; 0x800
   1ec24:	bl	e060 <rb_linebuf_init@plt>
   1ec28:	mov	r0, #0
   1ec2c:	mov	r1, #1
   1ec30:	bl	e744 <rb_init_prng@plt>
   1ec34:	mov	r0, #0
   1ec38:	bl	1f500 <seed_random>
   1ec3c:	bl	d124 <init_builtin_capabs@plt>
   1ec40:	ldr	r0, [pc, #1236]	; 1f11c <charybdis_main+0x7e0>
   1ec44:	ldr	r0, [pc, r0]
   1ec48:	ldr	r0, [r0]
   1ec4c:	bl	d8f8 <capability_index_mask@plt>
   1ec50:	ldr	r1, [pc, #1224]	; 1f120 <charybdis_main+0x7e4>
   1ec54:	ldr	r1, [pc, r1]
   1ec58:	ldr	r1, [r1]
   1ec5c:	ldr	r2, [pc, #1216]	; 1f124 <charybdis_main+0x7e8>
   1ec60:	ldr	r2, [pc, r2]
   1ec64:	ldr	r2, [r2]
   1ec68:	orr	r1, r2, r1
   1ec6c:	bic	r0, r0, r1
   1ec70:	ldr	r1, [pc, #1200]	; 1f128 <charybdis_main+0x7ec>
   1ec74:	ldr	r1, [pc, r1]
   1ec78:	str	r0, [r1]
   1ec7c:	bl	d244 <init_main_logfile@plt>
   1ec80:	bl	dd24 <newconf_init@plt>
   1ec84:	bl	e69c <init_s_conf@plt>
   1ec88:	bl	d910 <init_s_newconf@plt>
   1ec8c:	bl	d664 <init_hash@plt>
   1ec90:	bl	e810 <clear_scache_hash_table@plt>
   1ec94:	bl	d9ac <init_host_hash@plt>
   1ec98:	bl	da0c <clear_hash_parse@plt>
   1ec9c:	bl	e5c4 <init_client@plt>
   1eca0:	bl	db98 <init_hook@plt>
   1eca4:	bl	d508 <init_channels@plt>
   1eca8:	bl	d3b8 <initclass@plt>
   1ecac:	bl	dd48 <whowas_init@plt>
   1ecb0:	bl	e5e8 <init_reject@plt>
   1ecb4:	bl	e5ac <init_cache@plt>
   1ecb8:	bl	e588 <init_monitor@plt>
   1ecbc:	bl	df70 <construct_cflags_strings@plt>
   1ecc0:	bl	db44 <init_authd@plt>
   1ecc4:	bl	dec8 <init_dns@plt>
   1ecc8:	bl	d1fc <init_modules@plt>
   1eccc:	ldr	r0, [pc, #1112]	; 1f12c <charybdis_main+0x7f0>
   1ecd0:	add	r0, pc, r0
   1ecd4:	ldr	r1, [pc, #1108]	; 1f130 <charybdis_main+0x7f4>
   1ecd8:	add	r1, pc, r1
   1ecdc:	mov	r2, #0
   1ece0:	bl	d76c <privilegeset_set_new@plt>
   1ece4:	ldr	r0, [sl]
   1ece8:	cmp	r0, #0
   1ecec:	bne	1eed8 <charybdis_main+0x59c>
   1ecf0:	mov	r0, #1
   1ecf4:	bl	d8d4 <read_conf_files@plt>
   1ecf8:	mov	r0, #1
   1ecfc:	bl	d940 <load_all_modules@plt>
   1ed00:	mov	r0, #1
   1ed04:	bl	d820 <load_core_modules@plt>
   1ed08:	bl	e7a4 <init_isupport@plt>
   1ed0c:	bl	d058 <init_bandb@plt>
   1ed10:	bl	d2e0 <init_ssld@plt>
   1ed14:	bl	e7b0 <init_wsockd@plt>
   1ed18:	bl	e42c <rehash_bans@plt>
   1ed1c:	bl	1f550 <initialize_server_capabs>
   1ed20:	bl	1f57c <initialize_global_set_options>
   1ed24:	ldr	r1, [r5]
   1ed28:	cmp	r1, #0
   1ed2c:	beq	1ee70 <charybdis_main+0x534>
   1ed30:	add	r6, r8, #88	; 0x58
   1ed34:	mov	r0, r6
   1ed38:	mov	r2, #64	; 0x40
   1ed3c:	bl	e510 <rb_strlcpy@plt>
   1ed40:	ldrb	r0, [r5, #4]
   1ed44:	cmp	r0, #0
   1ed48:	beq	1ee84 <charybdis_main+0x548>
   1ed4c:	add	r7, r8, #396	; 0x18c
   1ed50:	add	r1, r5, #4
   1ed54:	mov	r0, r7
   1ed58:	mov	r2, #10
   1ed5c:	bl	e510 <rb_strlcpy@plt>
   1ed60:	bl	e504 <init_uid@plt>
   1ed64:	ldr	r1, [r5, #8]
   1ed68:	cmp	r1, #0
   1ed6c:	beq	1ee98 <charybdis_main+0x55c>
   1ed70:	movw	r0, #345	; 0x159
   1ed74:	add	r4, r8, r0
   1ed78:	mov	r0, r4
   1ed7c:	mov	r2, #51	; 0x33
   1ed80:	bl	e510 <rb_strlcpy@plt>
   1ed84:	ldr	r0, [r5, #288]	; 0x120
   1ed88:	cmp	r0, #0
   1ed8c:	beq	1edcc <charybdis_main+0x490>
   1ed90:	ldr	r1, [r5, #280]	; 0x118
   1ed94:	ldr	r2, [r5, #292]	; 0x124
   1ed98:	ldr	r3, [r5, #296]	; 0x128
   1ed9c:	bl	d238 <rb_setup_ssl_server@plt>
   1eda0:	mov	r5, #1
   1eda4:	cmp	r0, #0
   1eda8:	bne	1edc0 <charybdis_main+0x484>
   1edac:	mov	r5, #0
   1edb0:	ldr	r1, [pc, #912]	; 1f148 <charybdis_main+0x80c>
   1edb4:	add	r1, pc, r1
   1edb8:	mov	r0, #0
   1edbc:	bl	e0b4 <ilog@plt>
   1edc0:	ldr	r0, [pc, #900]	; 1f14c <charybdis_main+0x810>
   1edc4:	ldr	r0, [pc, r0]
   1edc8:	strb	r5, [r0]
   1edcc:	mov	r5, #0
   1edd0:	strb	r5, [r8, #82]	; 0x52
   1edd4:	mov	r0, #4
   1edd8:	strh	r0, [r8, #80]	; 0x50
   1eddc:	str	r8, [r8, #32]
   1ede0:	str	r8, [r8, #36]	; 0x24
   1ede4:	mov	r0, r8
   1ede8:	bl	d5e0 <make_server@plt>
   1edec:	bl	d07c <rb_current_time@plt>
   1edf0:	ldr	r1, [pc, #856]	; 1f150 <charybdis_main+0x814>
   1edf4:	ldr	r1, [pc, r1]
   1edf8:	str	r0, [r1]
   1edfc:	mov	r0, r6
   1ee00:	mov	r1, r8
   1ee04:	bl	da3c <add_to_client_hash@plt>
   1ee08:	mov	r0, r7
   1ee0c:	mov	r1, r8
   1ee10:	bl	d0d0 <add_to_id_hash@plt>
   1ee14:	mov	r0, r6
   1ee18:	mov	r1, r4
   1ee1c:	mov	r2, #0
   1ee20:	bl	e2b8 <scache_connect@plt>
   1ee24:	ldr	r1, [r8, #28]
   1ee28:	str	r0, [r1, #68]	; 0x44
   1ee2c:	bl	dc58 <rb_make_rb_dlink_node@plt>
   1ee30:	bl	1f6d8 <rb_dlinkAdd>
   1ee34:	bl	e804 <construct_umodebuf@plt>
   1ee38:	ldr	r0, [sl]
   1ee3c:	cmp	r0, #0
   1ee40:	beq	1ef80 <charybdis_main+0x644>
   1ee44:	ldr	r4, [pc, #776]	; 1f154 <charybdis_main+0x818>
   1ee48:	ldr	r4, [pc, r4]
   1ee4c:	ldr	r3, [r4]
   1ee50:	ldr	r0, [pc, #768]	; 1f158 <charybdis_main+0x81c>
   1ee54:	add	r0, pc, r0
   1ee58:	mov	r1, #26
   1ee5c:	mov	r2, #1
   1ee60:	bl	d8a4 <fwrite@plt>
   1ee64:	ldr	r0, [r4]
   1ee68:	bl	d25c <fflush@plt>
   1ee6c:	b	1eea8 <charybdis_main+0x56c>
   1ee70:	ldr	r0, [pc, #708]	; 1f13c <charybdis_main+0x800>
   1ee74:	add	r0, pc, r0
   1ee78:	bl	d640 <ierror@plt>
   1ee7c:	mvn	r5, #0
   1ee80:	b	1eea8 <charybdis_main+0x56c>
   1ee84:	ldr	r0, [pc, #692]	; 1f140 <charybdis_main+0x804>
   1ee88:	add	r0, pc, r0
   1ee8c:	bl	d640 <ierror@plt>
   1ee90:	mvn	r5, #1
   1ee94:	b	1eea8 <charybdis_main+0x56c>
   1ee98:	ldr	r0, [pc, #676]	; 1f144 <charybdis_main+0x808>
   1ee9c:	add	r0, pc, r0
   1eea0:	bl	d640 <ierror@plt>
   1eea4:	mvn	r5, #2
   1eea8:	mov	r0, r5
   1eeac:	sub	sp, fp, #28
   1eeb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eeb4:	ldr	r0, [pc, #472]	; 1f094 <charybdis_main+0x758>
   1eeb8:	ldr	r0, [pc, r0]
   1eebc:	ldr	r3, [r0]
   1eec0:	ldr	r0, [pc, #464]	; 1f098 <charybdis_main+0x75c>
   1eec4:	add	r0, pc, r0
   1eec8:	mov	r1, #26
   1eecc:	mov	r2, #1
   1eed0:	bl	d8a4 <fwrite@plt>
   1eed4:	b	1ee7c <charybdis_main+0x540>
   1eed8:	ldr	r0, [pc, #596]	; 1f134 <charybdis_main+0x7f8>
   1eedc:	ldr	r0, [pc, r0]
   1eee0:	ldr	r3, [r0]
   1eee4:	ldr	r0, [pc, #588]	; 1f138 <charybdis_main+0x7fc>
   1eee8:	add	r0, pc, r0
   1eeec:	mov	r1, #23
   1eef0:	mov	r2, #1
   1eef4:	bl	d8a4 <fwrite@plt>
   1eef8:	b	1ecf0 <charybdis_main+0x3b4>
   1eefc:	ldr	r4, [r9]
   1ef00:	ldr	r0, [pc, #656]	; 1f198 <charybdis_main+0x85c>
   1ef04:	ldr	r0, [pc, r0]
   1ef08:	ldr	r5, [r0]
   1ef0c:	bl	de38 <__errno_location@plt>
   1ef10:	ldr	r0, [r0]
   1ef14:	bl	dac0 <strerror@plt>
   1ef18:	mov	r3, r0
   1ef1c:	ldr	r1, [pc, #632]	; 1f19c <charybdis_main+0x860>
   1ef20:	add	r1, pc, r1
   1ef24:	mov	r0, r5
   1ef28:	mov	r2, r4
   1ef2c:	bl	dd60 <fprintf@plt>
   1ef30:	mov	r0, #1
   1ef34:	bl	dc28 <exit@plt>
   1ef38:	ldr	r0, [pc, #608]	; 1f1a0 <charybdis_main+0x864>
   1ef3c:	ldr	r0, [pc, r0]
   1ef40:	ldr	r2, [r0]
   1ef44:	ldr	r0, [pc, #600]	; 1f1a4 <charybdis_main+0x868>
   1ef48:	ldr	r0, [pc, r0]
   1ef4c:	ldr	r1, [r0]
   1ef50:	ldr	r0, [pc, #592]	; 1f1a8 <charybdis_main+0x86c>
   1ef54:	add	r0, pc, r0
   1ef58:	bl	d1c0 <printf@plt>
   1ef5c:	bl	e660 <rb_lib_version@plt>
   1ef60:	mov	r1, r0
   1ef64:	ldr	r0, [pc, #576]	; 1f1ac <charybdis_main+0x870>
   1ef68:	add	r0, pc, r0
   1ef6c:	bl	d1c0 <printf@plt>
   1ef70:	mov	r0, #0
   1ef74:	bl	dc28 <exit@plt>
   1ef78:	mov	r0, #1
   1ef7c:	bl	dc28 <exit@plt>
   1ef80:	bl	dde4 <check_class@plt>
   1ef84:	ldr	r0, [pc, #464]	; 1f15c <charybdis_main+0x820>
   1ef88:	ldr	r0, [pc, r0]
   1ef8c:	ldr	r0, [r0]
   1ef90:	bl	1f778 <write_pidfile>
   1ef94:	bl	d064 <load_help@plt>
   1ef98:	bl	e0fc <open_logfiles@plt>
   1ef9c:	bl	d7c0 <configure_authd@plt>
   1efa0:	ldr	r1, [pc, #440]	; 1f160 <charybdis_main+0x824>
   1efa4:	add	r1, pc, r1
   1efa8:	mov	r0, #0
   1efac:	bl	e0b4 <ilog@plt>
   1efb0:	ldr	r4, [pc, #428]	; 1f164 <charybdis_main+0x828>
   1efb4:	ldr	r4, [pc, r4]
   1efb8:	ldr	r0, [pc, #424]	; 1f168 <charybdis_main+0x82c>
   1efbc:	add	r0, pc, r0
   1efc0:	mov	r1, r4
   1efc4:	mov	r2, #0
   1efc8:	mov	r3, #60	; 0x3c
   1efcc:	bl	d220 <rb_event_addish@plt>
   1efd0:	ldr	r0, [pc, #404]	; 1f16c <charybdis_main+0x830>
   1efd4:	add	r0, pc, r0
   1efd8:	mov	r1, r4
   1efdc:	mov	r2, #0
   1efe0:	mov	r3, #2
   1efe4:	bl	e7ec <rb_event_addonce@plt>
   1efe8:	ldr	r0, [pc, #384]	; 1f170 <charybdis_main+0x834>
   1efec:	add	r0, pc, r0
   1eff0:	ldr	r1, [pc, #380]	; 1f174 <charybdis_main+0x838>
   1eff4:	add	r1, pc, r1
   1eff8:	mov	r2, #0
   1effc:	mov	r3, #3
   1f000:	bl	d0e8 <rb_event_add@plt>
   1f004:	ldr	r0, [pc, #364]	; 1f178 <charybdis_main+0x83c>
   1f008:	add	r0, pc, r0
   1f00c:	ldr	r1, [pc, #360]	; 1f17c <charybdis_main+0x840>
   1f010:	add	r1, pc, r1
   1f014:	mov	r2, #0
   1f018:	mov	r3, #300	; 0x12c
   1f01c:	bl	d220 <rb_event_addish@plt>
   1f020:	ldr	r0, [pc, #344]	; 1f180 <charybdis_main+0x844>
   1f024:	ldr	r0, [pc, r0]
   1f028:	ldr	r0, [r0]
   1f02c:	cmp	r0, #0
   1f030:	beq	1f05c <charybdis_main+0x720>
   1f034:	ldr	r1, [pc, #328]	; 1f184 <charybdis_main+0x848>
   1f038:	ldr	r1, [pc, r1]
   1f03c:	ldr	r0, [pc, #324]	; 1f188 <charybdis_main+0x84c>
   1f040:	add	r0, pc, r0
   1f044:	mov	r2, #0
   1f048:	mov	r3, #5
   1f04c:	bl	d0e8 <rb_event_add@plt>
   1f050:	ldr	r1, [pc, #308]	; 1f18c <charybdis_main+0x850>
   1f054:	ldr	r1, [pc, r1]
   1f058:	str	r0, [r1]
   1f05c:	ldr	r0, [pc, #300]	; 1f190 <charybdis_main+0x854>
   1f060:	ldr	r0, [pc, r0]
   1f064:	ldrb	r0, [r0]
   1f068:	cmp	r0, #0
   1f06c:	beq	1f08c <charybdis_main+0x750>
   1f070:	ldr	r4, [r9]
   1f074:	bl	dc1c <getpid@plt>
   1f078:	mov	r2, r0
   1f07c:	ldr	r0, [pc, #272]	; 1f194 <charybdis_main+0x858>
   1f080:	add	r0, pc, r0
   1f084:	mov	r1, r4
   1f088:	bl	d10c <inotice@plt>
   1f08c:	mov	r0, #0
   1f090:	bl	e33c <rb_lib_loop@plt>
   1f094:	.word	0x0003baa0
   1f098:	.word	0x00023147
   1f09c:	.word	0x0003c21c
   1f0a0:	.word	0x0003c0d8
   1f0a4:	.word	0x0003c09c
   1f0a8:	.word	0x0003c128
   1f0ac:	.word	0x0003bfc4
   1f0b0:	.word	0x0003c118
   1f0b4:	.word	0x0003c168
   1f0b8:	.word	0x0003bf78
   1f0bc:	.word	0x0003c068
   1f0c0:	.word	0x0003be38
   1f0c4:	.word	0x0003c0d8
   1f0c8:	.word	0x0003bf6c
   1f0cc:	.word	0x0003be00
   1f0d0:	.word	0x0003beac
   1f0d4:	.word	0x0003c000
   1f0d8:	.word	0x0003be68
   1f0dc:	.word	0x0003be7c
   1f0e0:	.word	0x0003c058
   1f0e4:	.word	0x0003bebc
   1f0e8:	.word	0x000471ac
   1f0ec:	.word	0x0003bf64
   1f0f0:	.word	0x0003be0c
   1f0f4:	.word	0x000236f7
   1f0f8:	.word	0x0003bcf4
   1f0fc:	.word	0x000234b9
   1f100:	.word	0x00028df9
   1f104:	.word	0x0003bd80
   1f108:	.word	0x0003bd6c
   1f10c:	.word	0x0003bee0
   1f110:	.word	0x00000840
   1f114:	.word	0x00000850
   1f118:	.word	0x00000870
   1f11c:	.word	0x0003bc3c
   1f120:	.word	0x0003bcd4
   1f124:	.word	0x0003bc04
   1f128:	.word	0x0003be28
   1f12c:	.word	0x000226a4
   1f130:	.word	0x00026e7d
   1f134:	.word	0x0003ba7c
   1f138:	.word	0x00023189
   1f13c:	.word	0x00023215
   1f140:	.word	0x0002322f
   1f144:	.word	0x00023248
   1f148:	.word	0x00023365
   1f14c:	.word	0x0003bb9c
   1f150:	.word	0x0003bd54
   1f154:	.word	0x0003bb10
   1f158:	.word	0x000232e3
   1f15c:	.word	0x0003bb34
   1f160:	.word	0x000231ae
   1f164:	.word	0x0003bb70
   1f168:	.word	0x000231a3
   1f16c:	.word	0x0002319b
   1f170:	.word	0x0002319b
   1f174:	.word	0x00000840
   1f178:	.word	0x0002318c
   1f17c:	.word	0x000004e8
   1f180:	.word	0x0003bb38
   1f184:	.word	0x0003bb00
   1f188:	.word	0x00021dd0
   1f18c:	.word	0x0003b844
   1f190:	.word	0x0003b8e8
   1f194:	.word	0x00023121
   1f198:	.word	0x0003ba54
   1f19c:	.word	0x00023106
   1f1a0:	.word	0x0003ba54
   1f1a4:	.word	0x0003b948
   1f1a8:	.word	0x000230ed
   1f1ac:	.word	0x000230ef

0001f1b0 <init_sys>:
   1f1b0:	push	{r4, sl, fp, lr}
   1f1b4:	add	fp, sp, #8
   1f1b8:	sub	sp, sp, #8
   1f1bc:	mov	r1, sp
   1f1c0:	mov	r0, #7
   1f1c4:	bl	d6e8 <getrlimit@plt>
   1f1c8:	cmp	r0, #0
   1f1cc:	beq	1f1e8 <init_sys+0x38>
   1f1d0:	ldr	r0, [pc, #124]	; 1f254 <init_sys+0xa4>
   1f1d4:	ldr	r0, [pc, r0]
   1f1d8:	movw	r1, #65535	; 0xffff
   1f1dc:	str	r1, [r0]
   1f1e0:	sub	sp, fp, #8
   1f1e4:	pop	{r4, sl, fp, pc}
   1f1e8:	ldr	r0, [pc, #84]	; 1f244 <init_sys+0x94>
   1f1ec:	ldr	r0, [pc, r0]
   1f1f0:	ldr	r1, [sp]
   1f1f4:	str	r1, [r0]
   1f1f8:	cmp	r1, #60	; 0x3c
   1f1fc:	ble	1f208 <init_sys+0x58>
   1f200:	sub	sp, fp, #8
   1f204:	pop	{r4, sl, fp, pc}
   1f208:	ldr	r4, [pc, #56]	; 1f248 <init_sys+0x98>
   1f20c:	ldr	r4, [pc, r4]
   1f210:	ldr	r3, [r4]
   1f214:	ldr	r0, [pc, #48]	; 1f24c <init_sys+0x9c>
   1f218:	add	r0, pc, r0
   1f21c:	mov	r1, #36	; 0x24
   1f220:	mov	r2, #1
   1f224:	bl	d8a4 <fwrite@plt>
   1f228:	ldr	r0, [r4]
   1f22c:	ldr	r1, [pc, #28]	; 1f250 <init_sys+0xa0>
   1f230:	add	r1, pc, r1
   1f234:	mov	r2, #60	; 0x3c
   1f238:	bl	dd60 <fprintf@plt>
   1f23c:	mov	r0, #1
   1f240:	bl	dc28 <exit@plt>
   1f244:	.word	0x0003b8dc
   1f248:	.word	0x0003b74c
   1f24c:	.word	0x00022fbe
   1f250:	.word	0x00022fcb
   1f254:	.word	0x0003b8f4

0001f258 <setup_corefile>:
   1f258:	push	{fp, lr}
   1f25c:	mov	fp, sp
   1f260:	sub	sp, sp, #8
   1f264:	mov	r1, sp
   1f268:	mov	r0, #4
   1f26c:	bl	d6e8 <getrlimit@plt>
   1f270:	cmp	r0, #0
   1f274:	beq	1f280 <setup_corefile+0x28>
   1f278:	mov	sp, fp
   1f27c:	pop	{fp, pc}
   1f280:	ldr	r0, [sp, #4]
   1f284:	str	r0, [sp]
   1f288:	mov	r1, sp
   1f28c:	mov	r0, #4
   1f290:	bl	da18 <setrlimit@plt>
   1f294:	mov	sp, fp
   1f298:	pop	{fp, pc}

0001f29c <rb_dlinkAddTail>:
   1f29c:	ldr	r1, [pc, #76]	; 1f2f0 <rb_dlinkAddTail+0x54>
   1f2a0:	ldr	r1, [pc, r1]
   1f2a4:	mov	r3, #0
   1f2a8:	ldr	r0, [pc, #68]	; 1f2f4 <rb_dlinkAddTail+0x58>
   1f2ac:	ldr	r0, [pc, r0]
   1f2b0:	ldr	r2, [r0, #4]
   1f2b4:	stm	r1, {r1, r2, r3}
   1f2b8:	cmp	r2, #0
   1f2bc:	beq	1f2cc <rb_dlinkAddTail+0x30>
   1f2c0:	add	r2, r2, #8
   1f2c4:	str	r1, [r2]
   1f2c8:	b	1f2dc <rb_dlinkAddTail+0x40>
   1f2cc:	ldr	r2, [r0]
   1f2d0:	cmp	r2, #0
   1f2d4:	mov	r2, r0
   1f2d8:	streq	r1, [r2]
   1f2dc:	str	r1, [r0, #4]
   1f2e0:	ldr	r1, [r0, #8]
   1f2e4:	add	r1, r1, #1
   1f2e8:	str	r1, [r0, #8]
   1f2ec:	bx	lr
   1f2f0:	.word	0x0003b8b8
   1f2f4:	.word	0x0003b7e4

0001f2f8 <check_pidfile>:
   1f2f8:	push	{r4, sl, fp, lr}
   1f2fc:	add	fp, sp, #8
   1f300:	sub	sp, sp, #32
   1f304:	ldr	r1, [pc, #100]	; 1f370 <check_pidfile+0x78>
   1f308:	add	r1, pc, r1
   1f30c:	bl	d1f0 <fopen@plt>
   1f310:	cmp	r0, #0
   1f314:	beq	1f354 <check_pidfile+0x5c>
   1f318:	mov	r4, r0
   1f31c:	mov	r0, sp
   1f320:	mov	r1, #20
   1f324:	mov	r2, r4
   1f328:	bl	e528 <fgets_unlocked@plt>
   1f32c:	cmp	r0, #0
   1f330:	beq	1f34c <check_pidfile+0x54>
   1f334:	mov	r0, sp
   1f338:	bl	e468 <atoi@plt>
   1f33c:	mov	r1, #0
   1f340:	bl	d478 <rb_kill@plt>
   1f344:	cmp	r0, #0
   1f348:	beq	1f35c <check_pidfile+0x64>
   1f34c:	mov	r0, r4
   1f350:	bl	e0f0 <fclose@plt>
   1f354:	sub	sp, fp, #8
   1f358:	pop	{r4, sl, fp, pc}
   1f35c:	ldr	r0, [pc, #16]	; 1f374 <check_pidfile+0x7c>
   1f360:	add	r0, pc, r0
   1f364:	bl	da6c <puts@plt>
   1f368:	mvn	r0, #0
   1f36c:	bl	dc28 <exit@plt>
   1f370:	.word	0x00023395
   1f374:	.word	0x0002303c

0001f378 <make_daemon>:
   1f378:	push	{r4, r5, fp, lr}
   1f37c:	add	fp, sp, #8
   1f380:	ldr	r0, [pc, #180]	; 1f43c <make_daemon+0xc4>
   1f384:	add	r0, pc, r0
   1f388:	mov	r1, #2
   1f38c:	bl	dbec <open@plt>
   1f390:	cmn	r0, #1
   1f394:	ble	1f3fc <make_daemon+0x84>
   1f398:	mov	r4, r0
   1f39c:	bl	e234 <fork@plt>
   1f3a0:	cmn	r0, #1
   1f3a4:	ble	1f408 <make_daemon+0x90>
   1f3a8:	mov	r2, r0
   1f3ac:	cmp	r0, #0
   1f3b0:	bne	1f41c <make_daemon+0xa4>
   1f3b4:	mov	r5, #0
   1f3b8:	cmp	r4, r5
   1f3bc:	bne	1f3d4 <make_daemon+0x5c>
   1f3c0:	add	r5, r5, #1
   1f3c4:	cmp	r5, #3
   1f3c8:	beq	1f3e4 <make_daemon+0x6c>
   1f3cc:	cmp	r4, r5
   1f3d0:	beq	1f3c0 <make_daemon+0x48>
   1f3d4:	mov	r0, r4
   1f3d8:	mov	r1, r5
   1f3dc:	bl	d6ac <dup2@plt>
   1f3e0:	b	1f3c0 <make_daemon+0x48>
   1f3e4:	cmp	r4, #3
   1f3e8:	blt	1f3f4 <make_daemon+0x7c>
   1f3ec:	mov	r0, r4
   1f3f0:	bl	e72c <close@plt>
   1f3f4:	pop	{r4, r5, fp, lr}
   1f3f8:	b	dcac <setsid@plt>
   1f3fc:	ldr	r0, [pc, #60]	; 1f440 <make_daemon+0xc8>
   1f400:	add	r0, pc, r0
   1f404:	b	1f410 <make_daemon+0x98>
   1f408:	ldr	r0, [pc, #52]	; 1f444 <make_daemon+0xcc>
   1f40c:	add	r0, pc, r0
   1f410:	bl	d7f0 <perror@plt>
   1f414:	mov	r0, #1
   1f418:	bl	dc28 <exit@plt>
   1f41c:	ldr	r0, [pc, #36]	; 1f448 <make_daemon+0xd0>
   1f420:	ldr	r0, [pc, r0]
   1f424:	ldr	r1, [r0]
   1f428:	ldr	r0, [pc, #28]	; 1f44c <make_daemon+0xd4>
   1f42c:	add	r0, pc, r0
   1f430:	bl	d10c <inotice@plt>
   1f434:	mov	r0, #0
   1f438:	bl	dc28 <exit@plt>
   1f43c:	.word	0x00022ebf
   1f440:	.word	0x00022e3e
   1f444:	.word	0x00022e41
   1f448:	.word	0x0003b75c
   1f44c:	.word	0x00022e26

0001f450 <ircd_log_cb>:
   1f450:	mov	r2, r0
   1f454:	ldr	r1, [pc, #8]	; 1f464 <ircd_log_cb+0x14>
   1f458:	add	r1, pc, r1
   1f45c:	mov	r0, #0
   1f460:	b	e0b4 <ilog@plt>
   1f464:	.word	0x00022e2f

0001f468 <ircd_restart_cb>:
   1f468:	push	{fp, lr}
   1f46c:	mov	fp, sp
   1f470:	mov	r4, r0
   1f474:	ldr	r0, [pc, #16]	; 1f48c <ircd_restart_cb+0x24>
   1f478:	add	r0, pc, r0
   1f47c:	mov	r1, r4
   1f480:	bl	d10c <inotice@plt>
   1f484:	mov	r0, r4
   1f488:	bl	d130 <restart@plt>
   1f48c:	.word	0x00022e21

0001f490 <ircd_die_cb>:
   1f490:	push	{fp, lr}
   1f494:	mov	fp, sp
   1f498:	cmp	r0, #0
   1f49c:	bne	1f4b0 <ircd_die_cb+0x20>
   1f4a0:	ldr	r0, [pc, #80]	; 1f4f8 <ircd_die_cb+0x68>
   1f4a4:	add	r0, pc, r0
   1f4a8:	bl	d10c <inotice@plt>
   1f4ac:	b	1f4dc <ircd_die_cb+0x4c>
   1f4b0:	mov	r4, r0
   1f4b4:	ldr	r5, [pc, #56]	; 1f4f4 <ircd_die_cb+0x64>
   1f4b8:	add	r5, pc, r5
   1f4bc:	mov	r0, #256	; 0x100
   1f4c0:	mov	r1, #256	; 0x100
   1f4c4:	mov	r2, r5
   1f4c8:	mov	r3, r4
   1f4cc:	bl	d634 <sendto_realops_snomask@plt>
   1f4d0:	mov	r0, r5
   1f4d4:	mov	r1, r4
   1f4d8:	bl	d10c <inotice@plt>
   1f4dc:	ldr	r0, [pc, #24]	; 1f4fc <ircd_die_cb+0x6c>
   1f4e0:	ldr	r0, [pc, r0]
   1f4e4:	ldr	r0, [r0]
   1f4e8:	bl	d694 <unlink@plt>
   1f4ec:	mov	r0, #1
   1f4f0:	bl	dc28 <exit@plt>
   1f4f4:	.word	0x00022e0b
   1f4f8:	.word	0x00022e4f
   1f4fc:	.word	0x0003b5dc

0001f500 <seed_random>:
   1f500:	push	{fp, lr}
   1f504:	mov	fp, sp
   1f508:	sub	sp, sp, #8
   1f50c:	add	r0, sp, #4
   1f510:	mov	r1, #4
   1f514:	bl	dae4 <rb_get_random@plt>
   1f518:	cmn	r0, #1
   1f51c:	beq	1f530 <seed_random+0x30>
   1f520:	ldr	r0, [sp, #4]
   1f524:	bl	dd0c <srand@plt>
   1f528:	mov	sp, fp
   1f52c:	pop	{fp, pc}
   1f530:	bl	1f8d0 <seed_with_urandom>
   1f534:	cmp	r0, #0
   1f538:	beq	1f544 <seed_random+0x44>
   1f53c:	mov	sp, fp
   1f540:	pop	{fp, pc}
   1f544:	bl	1f938 <seed_with_clock>
   1f548:	mov	sp, fp
   1f54c:	pop	{fp, pc}

0001f550 <initialize_server_capabs>:
   1f550:	ldr	r0, [pc, #28]	; 1f574 <initialize_server_capabs+0x24>
   1f554:	ldr	r0, [pc, r0]
   1f558:	ldr	r0, [r0]
   1f55c:	ldr	r1, [pc, #20]	; 1f578 <initialize_server_capabs+0x28>
   1f560:	ldr	r1, [pc, r1]
   1f564:	ldr	r2, [r1]
   1f568:	bic	r0, r2, r0
   1f56c:	str	r0, [r1]
   1f570:	bx	lr
   1f574:	.word	0x0003b390
   1f578:	.word	0x0003b53c

0001f57c <initialize_global_set_options>:
   1f57c:	push	{r4, r5, r6, r7, fp, lr}
   1f580:	add	fp, sp, #16
   1f584:	ldr	r4, [pc, #296]	; 1f6b4 <initialize_global_set_options+0x138>
   1f588:	ldr	r4, [pc, r4]
   1f58c:	vmov.i32	q8, #0	; 0x00000000
   1f590:	add	r0, r4, #12
   1f594:	vst1.32	{d16-d17}, [r0]
   1f598:	mov	r0, #1
   1f59c:	str	r0, [r4, #4]
   1f5a0:	add	r0, r4, #108	; 0x6c
   1f5a4:	vst1.32	{d16-d17}, [r0]
   1f5a8:	add	r0, r4, #92	; 0x5c
   1f5ac:	vst1.32	{d16-d17}, [r0]
   1f5b0:	add	r0, r4, #76	; 0x4c
   1f5b4:	vst1.32	{d16-d17}, [r0]
   1f5b8:	add	r0, r4, #60	; 0x3c
   1f5bc:	vst1.32	{d16-d17}, [r0]
   1f5c0:	add	r0, r4, #44	; 0x2c
   1f5c4:	vst1.32	{d16-d17}, [r0]
   1f5c8:	add	r0, r4, #28
   1f5cc:	vst1.32	{d16-d17}, [r0]
   1f5d0:	mov	r0, #60	; 0x3c
   1f5d4:	mov	r1, #25
   1f5d8:	str	r1, [r4, #16]
   1f5dc:	str	r0, [r4, #20]
   1f5e0:	ldr	r7, [pc, #208]	; 1f6b8 <initialize_global_set_options+0x13c>
   1f5e4:	ldr	r7, [pc, r7]
   1f5e8:	ldr	r0, [r7, #244]	; 0xf4
   1f5ec:	str	r0, [r4, #8]
   1f5f0:	ldr	r0, [pc, #196]	; 1f6bc <initialize_global_set_options+0x140>
   1f5f4:	ldr	r0, [pc, r0]
   1f5f8:	ldr	r2, [r0, #48]	; 0x30
   1f5fc:	ldr	r1, [r0, #52]	; 0x34
   1f600:	ldr	r3, [pc, #184]	; 1f6c0 <initialize_global_set_options+0x144>
   1f604:	ldr	r3, [pc, r3]
   1f608:	str	r2, [r3]
   1f60c:	ldr	r3, [pc, #176]	; 1f6c4 <initialize_global_set_options+0x148>
   1f610:	ldr	r3, [pc, r3]
   1f614:	ldr	r6, [r3, #276]	; 0x114
   1f618:	ldr	r5, [pc, #168]	; 1f6c8 <initialize_global_set_options+0x14c>
   1f61c:	ldr	r5, [pc, r5]
   1f620:	ldr	r5, [r5]
   1f624:	sub	r5, r5, #60	; 0x3c
   1f628:	cmp	r6, r5
   1f62c:	mov	r3, r6
   1f630:	movgt	r3, r5
   1f634:	cmp	r6, #1
   1f638:	movlt	r3, r5
   1f63c:	str	r3, [r4]
   1f640:	ldr	r3, [pc, #132]	; 1f6cc <initialize_global_set_options+0x150>
   1f644:	ldr	r3, [pc, r3]
   1f648:	str	r1, [r3]
   1f64c:	cmp	r2, #0
   1f650:	cmpne	r1, #0
   1f654:	bne	1f684 <initialize_global_set_options+0x108>
   1f658:	ldr	r1, [r7, #8]
   1f65c:	ldr	r0, [r7, #248]	; 0xf8
   1f660:	str	r0, [r4, #12]
   1f664:	add	r0, r4, #24
   1f668:	mov	r2, #50	; 0x32
   1f66c:	bl	e510 <rb_strlcpy@plt>
   1f670:	ldr	r1, [r7, #12]
   1f674:	add	r0, r4, #74	; 0x4a
   1f678:	mov	r2, #50	; 0x32
   1f67c:	pop	{r4, r5, r6, r7, fp, lr}
   1f680:	b	e510 <rb_strlcpy@plt>
   1f684:	ldr	r1, [r0, #40]	; 0x28
   1f688:	ldr	r0, [r0, #44]	; 0x2c
   1f68c:	orrs	r0, r0, r1
   1f690:	beq	1f658 <initialize_global_set_options+0xdc>
   1f694:	ldr	r0, [pc, #52]	; 1f6d0 <initialize_global_set_options+0x154>
   1f698:	ldr	r0, [pc, r0]
   1f69c:	mov	r1, #1
   1f6a0:	str	r1, [r0]
   1f6a4:	ldr	r0, [pc, #40]	; 1f6d4 <initialize_global_set_options+0x158>
   1f6a8:	ldr	r0, [pc, r0]
   1f6ac:	str	r1, [r0]
   1f6b0:	b	1f658 <initialize_global_set_options+0xdc>
   1f6b4:	.word	0x0003b2d0
   1f6b8:	.word	0x0003b598
   1f6bc:	.word	0x0003b524
   1f6c0:	.word	0x0003b3fc
   1f6c4:	.word	0x0003b340
   1f6c8:	.word	0x0003b4ac
   1f6cc:	.word	0x0003b3cc
   1f6d0:	.word	0x0003b35c
   1f6d4:	.word	0x0003b4b4

0001f6d8 <rb_dlinkAdd>:
   1f6d8:	push	{fp, lr}
   1f6dc:	mov	fp, sp
   1f6e0:	cmp	r0, #0
   1f6e4:	beq	1f744 <rb_dlinkAdd+0x6c>
   1f6e8:	mov	r1, #0
   1f6ec:	str	r1, [r0, #4]
   1f6f0:	ldr	r1, [pc, #108]	; 1f764 <rb_dlinkAdd+0x8c>
   1f6f4:	ldr	r1, [pc, r1]
   1f6f8:	str	r1, [r0]
   1f6fc:	ldr	r1, [pc, #100]	; 1f768 <rb_dlinkAdd+0x90>
   1f700:	ldr	r1, [pc, r1]
   1f704:	ldr	r2, [r1]
   1f708:	str	r2, [r0, #8]
   1f70c:	cmp	r2, #0
   1f710:	beq	1f720 <rb_dlinkAdd+0x48>
   1f714:	add	r2, r2, #4
   1f718:	str	r0, [r2]
   1f71c:	b	1f730 <rb_dlinkAdd+0x58>
   1f720:	mov	r2, r1
   1f724:	ldr	r3, [r2, #4]!
   1f728:	cmp	r3, #0
   1f72c:	streq	r0, [r2]
   1f730:	str	r0, [r1]
   1f734:	ldr	r0, [r1, #8]
   1f738:	add	r0, r0, #1
   1f73c:	str	r0, [r1, #8]
   1f740:	pop	{fp, pc}
   1f744:	ldr	r0, [pc, #32]	; 1f76c <rb_dlinkAdd+0x94>
   1f748:	add	r0, pc, r0
   1f74c:	ldr	r1, [pc, #28]	; 1f770 <rb_dlinkAdd+0x98>
   1f750:	add	r1, pc, r1
   1f754:	ldr	r3, [pc, #24]	; 1f774 <rb_dlinkAdd+0x9c>
   1f758:	add	r3, pc, r3
   1f75c:	mov	r2, #144	; 0x90
   1f760:	bl	e7e0 <__assert_fail@plt>
   1f764:	.word	0x0003b464
   1f768:	.word	0x0003b178
   1f76c:	.word	0x000211c4
   1f770:	.word	0x000211c6
   1f774:	.word	0x00021226

0001f778 <write_pidfile>:
   1f778:	push	{r4, r5, r6, r7, fp, lr}
   1f77c:	add	fp, sp, #16
   1f780:	sub	sp, sp, #40	; 0x28
   1f784:	mov	r4, r0
   1f788:	ldr	r1, [pc, #156]	; 1f82c <write_pidfile+0xb4>
   1f78c:	add	r1, pc, r1
   1f790:	bl	d1f0 <fopen@plt>
   1f794:	cmp	r0, #0
   1f798:	beq	1f810 <write_pidfile+0x98>
   1f79c:	mov	r5, r0
   1f7a0:	bl	dc1c <getpid@plt>
   1f7a4:	mov	r6, r0
   1f7a8:	add	r7, sp, #8
   1f7ac:	ldr	r2, [pc, #124]	; 1f830 <write_pidfile+0xb8>
   1f7b0:	add	r2, pc, r2
   1f7b4:	mov	r0, r7
   1f7b8:	mov	r1, #32
   1f7bc:	mov	r3, r6
   1f7c0:	bl	de74 <snprintf@plt>
   1f7c4:	mov	r0, r7
   1f7c8:	mov	r1, r5
   1f7cc:	bl	cfb0 <fputs_unlocked@plt>
   1f7d0:	cmn	r0, #1
   1f7d4:	bne	1f800 <write_pidfile+0x88>
   1f7d8:	bl	de38 <__errno_location@plt>
   1f7dc:	ldr	r0, [r0]
   1f7e0:	bl	dac0 <strerror@plt>
   1f7e4:	str	r0, [sp]
   1f7e8:	ldr	r1, [pc, #68]	; 1f834 <write_pidfile+0xbc>
   1f7ec:	add	r1, pc, r1
   1f7f0:	mov	r0, #0
   1f7f4:	mov	r2, r6
   1f7f8:	mov	r3, r4
   1f7fc:	bl	e0b4 <ilog@plt>
   1f800:	mov	r0, r5
   1f804:	bl	e0f0 <fclose@plt>
   1f808:	sub	sp, fp, #16
   1f80c:	pop	{r4, r5, r6, r7, fp, pc}
   1f810:	ldr	r1, [pc, #32]	; 1f838 <write_pidfile+0xc0>
   1f814:	add	r1, pc, r1
   1f818:	mov	r0, #0
   1f81c:	mov	r2, r4
   1f820:	bl	e0b4 <ilog@plt>
   1f824:	sub	sp, fp, #16
   1f828:	pop	{r4, r5, r6, r7, fp, pc}
   1f82c:	.word	0x000235a5
   1f830:	.word	0x00022b7c
   1f834:	.word	0x00022b44
   1f838:	.word	0x00022b41

0001f83c <check_rehash>:
   1f83c:	push	{r4, r5, fp, lr}
   1f840:	add	fp, sp, #8
   1f844:	ldr	r4, [pc, #116]	; 1f8c0 <check_rehash+0x84>
   1f848:	ldr	r4, [pc, r4]
   1f84c:	ldr	r0, [r4]
   1f850:	cmp	r0, #0
   1f854:	beq	1f868 <check_rehash+0x2c>
   1f858:	mov	r0, #1
   1f85c:	bl	d4d8 <rehash@plt>
   1f860:	mov	r0, #0
   1f864:	str	r0, [r4]
   1f868:	ldr	r4, [pc, #84]	; 1f8c4 <check_rehash+0x88>
   1f86c:	ldr	r4, [pc, r4]
   1f870:	ldr	r0, [r4]
   1f874:	cmp	r0, #0
   1f878:	beq	1f888 <check_rehash+0x4c>
   1f87c:	bl	e42c <rehash_bans@plt>
   1f880:	mov	r0, #0
   1f884:	str	r0, [r4]
   1f888:	ldr	r4, [pc, #56]	; 1f8c8 <check_rehash+0x8c>
   1f88c:	ldr	r4, [pc, r4]
   1f890:	ldr	r0, [r4]
   1f894:	cmp	r0, #0
   1f898:	popeq	{r4, r5, fp, pc}
   1f89c:	mov	r5, #0
   1f8a0:	ldr	r2, [pc, #36]	; 1f8cc <check_rehash+0x90>
   1f8a4:	add	r2, pc, r2
   1f8a8:	mov	r0, #256	; 0x100
   1f8ac:	mov	r1, #0
   1f8b0:	bl	d634 <sendto_realops_snomask@plt>
   1f8b4:	bl	dcb8 <cache_user_motd@plt>
   1f8b8:	str	r5, [r4]
   1f8bc:	pop	{r4, r5, fp, pc}
   1f8c0:	.word	0x0003b320
   1f8c4:	.word	0x0003b2d0
   1f8c8:	.word	0x0003b224
   1f8cc:	.word	0x00022acb

0001f8d0 <seed_with_urandom>:
   1f8d0:	push	{r4, r5, r6, sl, fp, lr}
   1f8d4:	add	fp, sp, #16
   1f8d8:	sub	sp, sp, #8
   1f8dc:	ldr	r0, [pc, #80]	; 1f934 <seed_with_urandom+0x64>
   1f8e0:	add	r0, pc, r0
   1f8e4:	mov	r4, #0
   1f8e8:	mov	r1, #0
   1f8ec:	bl	dbec <open@plt>
   1f8f0:	cmp	r0, #0
   1f8f4:	bmi	1f928 <seed_with_urandom+0x58>
   1f8f8:	mov	r5, r0
   1f8fc:	add	r1, sp, #4
   1f900:	mov	r2, #4
   1f904:	bl	d214 <read@plt>
   1f908:	mov	r6, r0
   1f90c:	mov	r0, r5
   1f910:	bl	e72c <close@plt>
   1f914:	cmp	r6, #4
   1f918:	bne	1f928 <seed_with_urandom+0x58>
   1f91c:	ldr	r0, [sp, #4]
   1f920:	bl	dd0c <srand@plt>
   1f924:	mov	r4, #1
   1f928:	mov	r0, r4
   1f92c:	sub	sp, fp, #16
   1f930:	pop	{r4, r5, r6, sl, fp, pc}
   1f934:	.word	0x00022a3f

0001f938 <seed_with_clock>:
   1f938:	push	{r4, r5, fp, lr}
   1f93c:	add	fp, sp, #8
   1f940:	bl	da00 <rb_set_time@plt>
   1f944:	bl	d604 <rb_current_time_tv@plt>
   1f948:	ldm	r0, {r4, r5}
   1f94c:	bl	dc1c <getpid@plt>
   1f950:	orr	r0, r5, r0, lsl #20
   1f954:	eor	r0, r0, r4
   1f958:	pop	{r4, r5, fp, lr}
   1f95c:	b	dd0c <srand@plt>

0001f960 <yyparse>:
   1f960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f964:	add	fp, sp, #28
   1f968:	sub	sp, sp, #420	; 0x1a4
   1f96c:	sub	sp, sp, #205824	; 0x32400
   1f970:	ldr	r0, [pc, #1664]	; 1fff8 <yyparse+0x698>
   1f974:	ldr	r0, [pc, r0]
   1f978:	mov	r1, #0
   1f97c:	str	r1, [r0]
   1f980:	ldr	r8, [pc, #1652]	; 1fffc <yyparse+0x69c>
   1f984:	ldr	r8, [pc, r8]
   1f988:	mvn	r0, #1
   1f98c:	str	r0, [r8]
   1f990:	mov	r2, #200	; 0xc8
   1f994:	add	r6, sp, #1040	; 0x410
   1f998:	sub	r3, fp, #432	; 0x1b0
   1f99c:	ldr	r5, [pc, #1628]	; 20000 <yyparse+0x6a0>
   1f9a0:	add	r5, pc, r5
   1f9a4:	ldr	r9, [pc, #1624]	; 20004 <yyparse+0x6a4>
   1f9a8:	add	r9, pc, r9
   1f9ac:	str	r6, [sp, #4]
   1f9b0:	mov	sl, r3
   1f9b4:	mov	r0, #0
   1f9b8:	str	r0, [sp]
   1f9bc:	mov	r7, #0
   1f9c0:	strh	r7, [sl]
   1f9c4:	add	r0, r3, r2, lsl #1
   1f9c8:	sub	r0, r0, #2
   1f9cc:	cmp	r0, sl
   1f9d0:	bhi	1faa4 <yyparse+0x144>
   1f9d4:	mov	r8, r3
   1f9d8:	movw	r0, #9999	; 0x270f
   1f9dc:	cmp	r2, r0
   1f9e0:	movw	r9, #1023	; 0x3ff
   1f9e4:	bhi	1ffcc <yyparse+0x66c>
   1f9e8:	lsl	r0, r2, #1
   1f9ec:	movw	r1, #10000	; 0x2710
   1f9f0:	cmp	r0, r1
   1f9f4:	movw	r4, #10000	; 0x2710
   1f9f8:	lslcc	r4, r2, #1
   1f9fc:	add	r0, r4, r4, lsl #9
   1fa00:	add	r0, r9, r0, lsl #1
   1fa04:	bl	da84 <malloc@plt>
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1ffcc <yyparse+0x66c>
   1fa10:	mov	r5, r0
   1fa14:	sub	r0, sl, r8
   1fa18:	mov	r1, #1
   1fa1c:	add	r6, r1, r0, asr #1
   1fa20:	asr	sl, r0, #1
   1fa24:	lsl	r2, r6, #1
   1fa28:	mov	r0, r5
   1fa2c:	mov	r1, r8
   1fa30:	bl	d40c <memcpy@plt>
   1fa34:	add	r0, r9, r4, lsl #1
   1fa38:	bfc	r0, #0, #10
   1fa3c:	add	r9, r5, r0
   1fa40:	lsl	r2, r6, #10
   1fa44:	mov	r0, r9
   1fa48:	ldr	r1, [sp, #4]
   1fa4c:	bl	d40c <memcpy@plt>
   1fa50:	sub	r0, fp, #432	; 0x1b0
   1fa54:	cmp	r8, r0
   1fa58:	beq	1fa64 <yyparse+0x104>
   1fa5c:	mov	r0, r8
   1fa60:	bl	d328 <free@plt>
   1fa64:	mov	r1, sl
   1fa68:	add	sl, r5, sl, lsl #1
   1fa6c:	add	r0, r5, r4, lsl #1
   1fa70:	sub	r0, r0, #2
   1fa74:	cmp	r0, sl
   1fa78:	bls	1ffec <yyparse+0x68c>
   1fa7c:	add	r6, r9, r1, lsl #10
   1fa80:	mov	r2, r4
   1fa84:	str	r9, [sp, #4]
   1fa88:	mov	r3, r5
   1fa8c:	ldr	r8, [pc, #1400]	; 2000c <yyparse+0x6ac>
   1fa90:	ldr	r8, [pc, r8]
   1fa94:	ldr	r5, [pc, #1396]	; 20010 <yyparse+0x6b0>
   1fa98:	add	r5, pc, r5
   1fa9c:	ldr	r9, [pc, #1392]	; 20014 <yyparse+0x6b4>
   1faa0:	add	r9, pc, r9
   1faa4:	cmp	r7, #3
   1faa8:	beq	1ffe4 <yyparse+0x684>
   1faac:	add	r0, r5, r7
   1fab0:	ldrsb	r4, [r0]
   1fab4:	cmn	r4, #33	; 0x21
   1fab8:	str	r3, [sp, #12]
   1fabc:	str	r2, [sp, #8]
   1fac0:	beq	1fb74 <yyparse+0x214>
   1fac4:	ldr	r0, [r8]
   1fac8:	cmn	r0, #2
   1facc:	bne	1fadc <yyparse+0x17c>
   1fad0:	bl	e18c <yylex@plt>
   1fad4:	ldr	r3, [sp, #12]
   1fad8:	str	r0, [r8]
   1fadc:	cmp	r0, #0
   1fae0:	ble	1fb04 <yyparse+0x1a4>
   1fae4:	mov	r1, #2
   1fae8:	movw	r2, #262	; 0x106
   1faec:	cmp	r0, r2
   1faf0:	bhi	1fb0c <yyparse+0x1ac>
   1faf4:	ldr	r1, [pc, #1308]	; 20018 <yyparse+0x6b8>
   1faf8:	add	r1, pc, r1
   1fafc:	ldrb	r1, [r1, r0]
   1fb00:	b	1fb0c <yyparse+0x1ac>
   1fb04:	mov	r1, #0
   1fb08:	str	r1, [r8]
   1fb0c:	add	r0, r1, r4
   1fb10:	cmp	r0, #42	; 0x2a
   1fb14:	bhi	1fb74 <yyparse+0x214>
   1fb18:	ldr	r2, [pc, #1276]	; 2001c <yyparse+0x6bc>
   1fb1c:	add	r2, pc, r2
   1fb20:	ldrb	r2, [r2, r0]
   1fb24:	cmp	r1, r2
   1fb28:	bne	1fb74 <yyparse+0x214>
   1fb2c:	add	r0, r9, r0
   1fb30:	ldrsb	r7, [r0]
   1fb34:	cmp	r7, #0
   1fb38:	ble	1fc94 <yyparse+0x334>
   1fb3c:	mvn	r0, #1
   1fb40:	str	r0, [r8]
   1fb44:	add	r6, r6, #1024	; 0x400
   1fb48:	mov	r0, r6
   1fb4c:	ldr	r1, [pc, #1204]	; 20008 <yyparse+0x6a8>
   1fb50:	ldr	r1, [pc, r1]
   1fb54:	mov	r2, #1024	; 0x400
   1fb58:	bl	d40c <memcpy@plt>
   1fb5c:	ldr	r2, [sp, #8]
   1fb60:	ldr	r3, [sp, #12]
   1fb64:	ldr	r0, [sp]
   1fb68:	cmp	r0, #0
   1fb6c:	subne	r0, r0, #1
   1fb70:	b	1fd0c <yyparse+0x3ac>
   1fb74:	ldr	r0, [pc, #1188]	; 20020 <yyparse+0x6c0>
   1fb78:	add	r0, pc, r0
   1fb7c:	ldrb	r4, [r0, r7]
   1fb80:	cmp	r4, #0
   1fb84:	beq	1fc2c <yyparse+0x2cc>
   1fb88:	ldr	r0, [pc, #1172]	; 20024 <yyparse+0x6c4>
   1fb8c:	add	r0, pc, r0
   1fb90:	ldrb	r9, [r0, r4]
   1fb94:	rsb	r0, r9, #1
   1fb98:	add	r1, r6, r0, lsl #10
   1fb9c:	add	r0, sp, #16
   1fba0:	mov	r2, #1024	; 0x400
   1fba4:	bl	d40c <memcpy@plt>
   1fba8:	sub	r0, r4, #7
   1fbac:	cmp	r0, #22
   1fbb0:	bhi	1ff0c <yyparse+0x5ac>
   1fbb4:	add	r1, pc, #4
   1fbb8:	ldr	r0, [r1, r0, lsl #2]
   1fbbc:	add	pc, r1, r0
   1fbc0:	.word	0x00000154
   1fbc4:	.word	0x00000164
   1fbc8:	.word	0x00000170
   1fbcc:	.word	0x00000180
   1fbd0:	.word	0x0000034c
   1fbd4:	.word	0x0000034c
   1fbd8:	.word	0x0000019c
   1fbdc:	.word	0x0000034c
   1fbe0:	.word	0x0000034c
   1fbe4:	.word	0x000001d4
   1fbe8:	.word	0x000001e0
   1fbec:	.word	0x00000248
   1fbf0:	.word	0x00000258
   1fbf4:	.word	0x00000268
   1fbf8:	.word	0x00000284
   1fbfc:	.word	0x000002b4
   1fc00:	.word	0x0000034c
   1fc04:	.word	0x0000005c
   1fc08:	.word	0x0000005c
   1fc0c:	.word	0x000002e8
   1fc10:	.word	0x000002f0
   1fc14:	.word	0x000000c4
   1fc18:	.word	0x000000c4
   1fc1c:	add	r0, sp, #16
   1fc20:	mov	r1, r6
   1fc24:	bl	d91c <strcpy@plt>
   1fc28:	b	1ff0c <yyparse+0x5ac>
   1fc2c:	ldr	r0, [sp]
   1fc30:	cmp	r0, #3
   1fc34:	beq	1fc6c <yyparse+0x30c>
   1fc38:	cmp	r0, #0
   1fc3c:	bne	1fca0 <yyparse+0x340>
   1fc40:	ldr	r0, [pc, #1040]	; 20058 <yyparse+0x6f8>
   1fc44:	ldr	r0, [pc, r0]
   1fc48:	mov	r1, r0
   1fc4c:	ldr	r0, [r0]
   1fc50:	add	r0, r0, #1
   1fc54:	str	r0, [r1]
   1fc58:	ldr	r0, [pc, #1020]	; 2005c <yyparse+0x6fc>
   1fc5c:	add	r0, pc, r0
   1fc60:	bl	d484 <yyerror@plt>
   1fc64:	ldr	r3, [sp, #12]
   1fc68:	b	1fca0 <yyparse+0x340>
   1fc6c:	ldr	r0, [r8]
   1fc70:	cmp	r0, #0
   1fc74:	ble	1fc9c <yyparse+0x33c>
   1fc78:	mvn	r0, #1
   1fc7c:	str	r0, [r8]
   1fc80:	b	1fca0 <yyparse+0x340>
   1fc84:	ldr	r0, [r6, #-1024]	; 0xfffffc00
   1fc88:	ldr	r1, [r6]
   1fc8c:	add	r0, r1, r0
   1fc90:	b	1fedc <yyparse+0x57c>
   1fc94:	rsb	r4, r7, #0
   1fc98:	b	1fb88 <yyparse+0x228>
   1fc9c:	beq	1ffa8 <yyparse+0x648>
   1fca0:	add	r6, r6, #1024	; 0x400
   1fca4:	add	r0, r5, r7
   1fca8:	ldrsb	r0, [r0]
   1fcac:	cmn	r0, #33	; 0x21
   1fcb0:	beq	1fcd8 <yyparse+0x378>
   1fcb4:	cmn	r0, #1
   1fcb8:	blt	1fcd8 <yyparse+0x378>
   1fcbc:	add	r0, r0, #1
   1fcc0:	cmp	r0, #12
   1fcc4:	bne	1fcd8 <yyparse+0x378>
   1fcc8:	add	r0, r9, r0
   1fccc:	ldrsb	r7, [r0]
   1fcd0:	cmp	r7, #0
   1fcd4:	bgt	1fcec <yyparse+0x38c>
   1fcd8:	cmp	r3, sl
   1fcdc:	beq	1ffa8 <yyparse+0x648>
   1fce0:	sub	r6, r6, #1024	; 0x400
   1fce4:	ldrsh	r7, [sl, #-2]!
   1fce8:	b	1fca4 <yyparse+0x344>
   1fcec:	mov	r0, r6
   1fcf0:	ldr	r1, [pc, #872]	; 20060 <yyparse+0x700>
   1fcf4:	ldr	r1, [pc, r1]
   1fcf8:	mov	r2, #1024	; 0x400
   1fcfc:	bl	d40c <memcpy@plt>
   1fd00:	ldr	r2, [sp, #8]
   1fd04:	ldr	r3, [sp, #12]
   1fd08:	mov	r0, #3
   1fd0c:	str	r0, [sp]
   1fd10:	b	1ffa0 <yyparse+0x640>
   1fd14:	mov	r0, r6
   1fd18:	mov	r1, #0
   1fd1c:	bl	e774 <conf_start_block@plt>
   1fd20:	b	1ff0c <yyparse+0x5ac>
   1fd24:	ldr	r0, [pc, #764]	; 20028 <yyparse+0x6c8>
   1fd28:	ldr	r0, [pc, r0]
   1fd2c:	b	1fd48 <yyparse+0x3e8>
   1fd30:	sub	r0, r6, #1024	; 0x400
   1fd34:	mov	r1, r6
   1fd38:	bl	e774 <conf_start_block@plt>
   1fd3c:	b	1ff0c <yyparse+0x5ac>
   1fd40:	ldr	r0, [pc, #740]	; 2002c <yyparse+0x6cc>
   1fd44:	ldr	r0, [pc, r0]
   1fd48:	ldr	r0, [r0]
   1fd4c:	cmp	r0, #0
   1fd50:	beq	1ff0c <yyparse+0x5ac>
   1fd54:	bl	e5d0 <conf_end_block@plt>
   1fd58:	b	1ff0c <yyparse+0x5ac>
   1fd5c:	ldr	r0, [pc, #716]	; 20030 <yyparse+0x6d0>
   1fd60:	ldr	r0, [pc, r0]
   1fd64:	mov	r7, r0
   1fd68:	ldr	r2, [r0]
   1fd6c:	ldr	r0, [pc, #704]	; 20034 <yyparse+0x6d4>
   1fd70:	ldr	r0, [pc, r0]
   1fd74:	ldr	r0, [r0]
   1fd78:	sub	r1, r6, #3072	; 0xc00
   1fd7c:	bl	d70c <conf_call_set@plt>
   1fd80:	ldr	r0, [r7]
   1fd84:	bl	20068 <free_cur_list>
   1fd88:	mov	r0, #0
   1fd8c:	str	r0, [r7]
   1fd90:	b	1ff0c <yyparse+0x5ac>
   1fd94:	ldr	r0, [r6]
   1fd98:	bl	200bc <add_cur_list_cpt>
   1fd9c:	b	1ff0c <yyparse+0x5ac>
   1fda0:	ldr	r0, [r6, #-2048]	; 0xfffff800
   1fda4:	ldr	r1, [r0, #4]
   1fda8:	cmp	r1, #2
   1fdac:	bne	1fee4 <yyparse+0x584>
   1fdb0:	ldr	r1, [r6]
   1fdb4:	ldr	r1, [r1, #4]
   1fdb8:	cmp	r1, #2
   1fdbc:	bne	1fee4 <yyparse+0x584>
   1fdc0:	ldr	r7, [r0, #8]
   1fdc4:	ldr	r0, [r6]
   1fdc8:	ldr	r0, [r0, #8]
   1fdcc:	cmp	r7, r0
   1fdd0:	bgt	1fdf4 <yyparse+0x494>
   1fdd4:	mov	r0, r7
   1fdd8:	bl	2010c <add_cur_list>
   1fddc:	add	r0, r7, #1
   1fde0:	ldr	r1, [r6]
   1fde4:	ldr	r1, [r1, #8]
   1fde8:	cmp	r7, r1
   1fdec:	mov	r7, r0
   1fdf0:	blt	1fdd4 <yyparse+0x474>
   1fdf4:	ldr	r0, [r6, #-2048]	; 0xfffff800
   1fdf8:	bl	20134 <rb_free>
   1fdfc:	ldr	r0, [r6]
   1fe00:	bl	20134 <rb_free>
   1fe04:	b	1ff0c <yyparse+0x5ac>
   1fe08:	bl	20140 <rb_malloc>
   1fe0c:	str	r0, [sp, #16]
   1fe10:	mov	r1, #1
   1fe14:	b	1fef8 <yyparse+0x598>
   1fe18:	bl	20140 <rb_malloc>
   1fe1c:	str	r0, [sp, #16]
   1fe20:	mov	r1, #4
   1fe24:	b	1fe34 <yyparse+0x4d4>
   1fe28:	bl	20140 <rb_malloc>
   1fe2c:	str	r0, [sp, #16]
   1fe30:	mov	r1, #2
   1fe34:	str	r1, [r0, #4]
   1fe38:	ldr	r1, [r6]
   1fe3c:	str	r1, [r0, #8]
   1fe40:	b	1ff0c <yyparse+0x5ac>
   1fe44:	mov	r0, r6
   1fe48:	bl	20190 <conf_get_yesno_value>
   1fe4c:	mov	r7, r0
   1fe50:	bl	20140 <rb_malloc>
   1fe54:	str	r0, [sp, #16]
   1fe58:	cmn	r7, #1
   1fe5c:	beq	1fef4 <yyparse+0x594>
   1fe60:	mov	r1, #5
   1fe64:	str	r1, [r0, #4]
   1fe68:	ldr	r0, [sp, #16]
   1fe6c:	str	r7, [r0, #8]
   1fe70:	b	1ff0c <yyparse+0x5ac>
   1fe74:	mov	r0, r6
   1fe78:	bl	da30 <rb_basename@plt>
   1fe7c:	mov	r7, r0
   1fe80:	bl	d160 <findmodule_byname@plt>
   1fe84:	cmp	r0, #0
   1fe88:	bne	1fe9c <yyparse+0x53c>
   1fe8c:	mov	r0, r6
   1fe90:	mov	r1, #1
   1fe94:	mov	r2, #0
   1fe98:	bl	debc <load_one_module@plt>
   1fe9c:	mov	r0, r7
   1fea0:	bl	20134 <rb_free>
   1fea4:	b	1ff0c <yyparse+0x5ac>
   1fea8:	ldr	r0, [r6]
   1feac:	b	1fedc <yyparse+0x57c>
   1feb0:	mov	r0, r6
   1feb4:	bl	201e0 <conf_find_time>
   1feb8:	cmp	r0, #0
   1febc:	bne	1fed4 <yyparse+0x574>
   1fec0:	ldr	r0, [pc, #372]	; 2003c <yyparse+0x6dc>
   1fec4:	add	r0, pc, r0
   1fec8:	mov	r1, r6
   1fecc:	bl	d400 <conf_report_error@plt>
   1fed0:	mov	r0, #1
   1fed4:	ldr	r1, [r6, #-1024]	; 0xfffffc00
   1fed8:	mul	r0, r1, r0
   1fedc:	str	r0, [sp, #16]
   1fee0:	b	1ff0c <yyparse+0x5ac>
   1fee4:	ldr	r0, [pc, #332]	; 20038 <yyparse+0x6d8>
   1fee8:	add	r0, pc, r0
   1feec:	bl	d400 <conf_report_error@plt>
   1fef0:	b	1ff0c <yyparse+0x5ac>
   1fef4:	mov	r1, #3
   1fef8:	str	r1, [r0, #4]
   1fefc:	mov	r0, r6
   1ff00:	bl	20160 <rb_strdup>
   1ff04:	ldr	r1, [sp, #16]
   1ff08:	str	r0, [r1, #8]
   1ff0c:	sub	r0, r6, r9, lsl #10
   1ff10:	add	r6, r0, #1024	; 0x400
   1ff14:	mov	r0, r6
   1ff18:	add	r1, sp, #16
   1ff1c:	mov	r2, #1024	; 0x400
   1ff20:	bl	d40c <memcpy@plt>
   1ff24:	lsl	r0, r9, #1
   1ff28:	ldrsh	r1, [sl, -r0]!
   1ff2c:	ldr	r0, [pc, #268]	; 20040 <yyparse+0x6e0>
   1ff30:	add	r0, pc, r0
   1ff34:	ldrb	r0, [r0, r4]
   1ff38:	sub	r0, r0, #13
   1ff3c:	ldr	r2, [pc, #256]	; 20044 <yyparse+0x6e4>
   1ff40:	add	r2, pc, r2
   1ff44:	add	r2, r2, r0
   1ff48:	ldrsb	r2, [r2]
   1ff4c:	add	r2, r1, r2
   1ff50:	cmp	r2, #42	; 0x2a
   1ff54:	bhi	1ff80 <yyparse+0x620>
   1ff58:	ldr	r3, [pc, #232]	; 20048 <yyparse+0x6e8>
   1ff5c:	add	r3, pc, r3
   1ff60:	ldrb	r3, [r3, r2]
   1ff64:	cmp	r3, r1
   1ff68:	bne	1ff80 <yyparse+0x620>
   1ff6c:	ldr	r9, [pc, #216]	; 2004c <yyparse+0x6ec>
   1ff70:	add	r9, pc, r9
   1ff74:	add	r0, r9, r2
   1ff78:	ldrsb	r7, [r0]
   1ff7c:	b	1ff98 <yyparse+0x638>
   1ff80:	ldr	r1, [pc, #200]	; 20050 <yyparse+0x6f0>
   1ff84:	add	r1, pc, r1
   1ff88:	add	r0, r1, r0
   1ff8c:	ldrsb	r7, [r0]
   1ff90:	ldr	r9, [pc, #188]	; 20054 <yyparse+0x6f4>
   1ff94:	add	r9, pc, r9
   1ff98:	ldr	r3, [sp, #12]
   1ff9c:	ldr	r2, [sp, #8]
   1ffa0:	add	sl, sl, #2
   1ffa4:	b	1f9c0 <yyparse+0x60>
   1ffa8:	mov	r4, #1
   1ffac:	sub	r0, fp, #432	; 0x1b0
   1ffb0:	cmp	r3, r0
   1ffb4:	beq	1ffc0 <yyparse+0x660>
   1ffb8:	mov	r0, r3
   1ffbc:	bl	d328 <free@plt>
   1ffc0:	mov	r0, r4
   1ffc4:	sub	sp, fp, #28
   1ffc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffcc:	ldr	r0, [pc, #144]	; 20064 <yyparse+0x704>
   1ffd0:	add	r0, pc, r0
   1ffd4:	bl	d484 <yyerror@plt>
   1ffd8:	mov	r4, #2
   1ffdc:	mov	r3, r8
   1ffe0:	b	1ffac <yyparse+0x64c>
   1ffe4:	mov	r4, #0
   1ffe8:	b	1ffac <yyparse+0x64c>
   1ffec:	mov	r4, #1
   1fff0:	mov	r3, r5
   1fff4:	b	1ffb8 <yyparse+0x658>
   1fff8:	.word	0x0003aef4
   1fffc:	.word	0x0003b06c
   20000:	.word	0x00022a1c
   20004:	.word	0x00022b73
   20008:	.word	0x0003afb8
   2000c:	.word	0x0003af60
   20010:	.word	0x00022924
   20014:	.word	0x00022a7b
   20018:	.word	0x000228f1
   2001c:	.word	0x000229d4
   20020:	.word	0x000229ce
   20024:	.word	0x000229e7
   20028:	.word	0x0003ace4
   2002c:	.word	0x0003acc8
   20030:	.word	0x0003ad60
   20034:	.word	0x0003ac9c
   20038:	.word	0x000226e9
   2003c:	.word	0x0002273f
   20040:	.word	0x00022661
   20044:	.word	0x0002266f
   20048:	.word	0x00022594
   2004c:	.word	0x000225ab
   20050:	.word	0x0002263c
   20054:	.word	0x00022587
   20058:	.word	0x0003ac24
   2005c:	.word	0x000229c8
   20060:	.word	0x0003ae14
   20064:	.word	0x00022661

00020068 <free_cur_list>:
   20068:	push	{r4, sl, fp, lr}
   2006c:	add	fp, sp, #8
   20070:	mov	r4, r0
   20074:	ldr	r0, [r0, #4]
   20078:	cmp	r0, #1
   2007c:	beq	20090 <free_cur_list+0x28>
   20080:	cmp	r0, #256	; 0x100
   20084:	beq	2009c <free_cur_list+0x34>
   20088:	cmp	r0, #3
   2008c:	bne	200a4 <free_cur_list+0x3c>
   20090:	ldr	r0, [r4, #8]
   20094:	bl	20134 <rb_free>
   20098:	b	200a4 <free_cur_list+0x3c>
   2009c:	ldr	r0, [r4, #8]
   200a0:	bl	20068 <free_cur_list>
   200a4:	ldr	r0, [r4]
   200a8:	cmp	r0, #0
   200ac:	blne	20068 <free_cur_list>
   200b0:	mov	r0, r4
   200b4:	pop	{r4, sl, fp, lr}
   200b8:	b	20134 <rb_free>

000200bc <add_cur_list_cpt>:
   200bc:	push	{r4, r5, fp, lr}
   200c0:	add	fp, sp, #8
   200c4:	mov	r4, r0
   200c8:	ldr	r5, [pc, #56]	; 20108 <add_cur_list_cpt+0x4c>
   200cc:	ldr	r5, [pc, r5]
   200d0:	ldr	r0, [r5]
   200d4:	cmp	r0, #0
   200d8:	beq	200ec <add_cur_list_cpt+0x30>
   200dc:	ldr	r0, [r0, #8]
   200e0:	str	r0, [r4]
   200e4:	ldr	r0, [r5]
   200e8:	b	200fc <add_cur_list_cpt+0x40>
   200ec:	bl	20140 <rb_malloc>
   200f0:	str	r0, [r5]
   200f4:	mov	r1, #256	; 0x100
   200f8:	str	r1, [r0, #4]
   200fc:	add	r0, r0, #8
   20100:	str	r4, [r0]
   20104:	pop	{r4, r5, fp, pc}
   20108:	.word	0x0003a9f4

0002010c <add_cur_list>:
   2010c:	push	{r4, sl, fp, lr}
   20110:	add	fp, sp, #8
   20114:	mov	r4, r0
   20118:	bl	20140 <rb_malloc>
   2011c:	mov	r1, #2
   20120:	mov	r2, #0
   20124:	str	r2, [r0]
   20128:	stmib	r0, {r1, r4}
   2012c:	pop	{r4, sl, fp, lr}
   20130:	b	200bc <add_cur_list_cpt>

00020134 <rb_free>:
   20134:	cmp	r0, #0
   20138:	bxeq	lr
   2013c:	b	d328 <free@plt>

00020140 <rb_malloc>:
   20140:	push	{fp, lr}
   20144:	mov	fp, sp
   20148:	mov	r0, #1
   2014c:	mov	r1, #12
   20150:	bl	cfa4 <calloc@plt>
   20154:	cmp	r0, #0
   20158:	popne	{fp, pc}
   2015c:	bl	d448 <rb_outofmemory@plt>

00020160 <rb_strdup>:
   20160:	push	{r4, sl, fp, lr}
   20164:	add	fp, sp, #8
   20168:	mov	r4, r0
   2016c:	bl	dc94 <strlen@plt>
   20170:	add	r0, r0, #1
   20174:	bl	da84 <malloc@plt>
   20178:	cmp	r0, #0
   2017c:	beq	2018c <rb_strdup+0x2c>
   20180:	mov	r1, r4
   20184:	pop	{r4, sl, fp, lr}
   20188:	b	d91c <strcpy@plt>
   2018c:	bl	d448 <rb_outofmemory@plt>

00020190 <conf_get_yesno_value>:
   20190:	push	{r4, r5, r6, sl, fp, lr}
   20194:	add	fp, sp, #16
   20198:	mov	r4, r0
   2019c:	mov	r5, #0
   201a0:	ldr	r6, [pc, #52]	; 201dc <conf_get_yesno_value+0x4c>
   201a4:	add	r6, pc, r6
   201a8:	ldr	r1, [r6, r5, lsl #3]
   201ac:	mov	r0, r4
   201b0:	bl	d340 <rb_strcasecmp@plt>
   201b4:	cmp	r0, #0
   201b8:	beq	201d0 <conf_get_yesno_value+0x40>
   201bc:	add	r5, r5, #1
   201c0:	cmp	r5, #6
   201c4:	bne	201a8 <conf_get_yesno_value+0x18>
   201c8:	mvn	r0, #0
   201cc:	pop	{r4, r5, r6, sl, fp, pc}
   201d0:	add	r0, r6, r5, lsl #3
   201d4:	ldr	r0, [r0, #4]
   201d8:	pop	{r4, r5, r6, sl, fp, pc}
   201dc:	.word	0x00039b64

000201e0 <conf_find_time>:
   201e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   201e4:	add	fp, sp, #24
   201e8:	mov	r4, r0
   201ec:	ldr	r0, [pc, #100]	; 20258 <conf_find_time+0x78>
   201f0:	add	r0, pc, r0
   201f4:	add	r5, r0, #4
   201f8:	mov	r6, #0
   201fc:	movw	r8, #28159	; 0x6dff
   20200:	mov	r7, #1
   20204:	b	20218 <conf_find_time+0x38>
   20208:	add	r5, r5, #12
   2020c:	add	r6, r6, #1
   20210:	cmp	r6, #15
   20214:	beq	20250 <conf_find_time+0x70>
   20218:	ldr	r0, [r5, #-4]
   2021c:	mov	r1, r4
   20220:	bl	d340 <rb_strcasecmp@plt>
   20224:	cmp	r0, #0
   20228:	beq	20248 <conf_find_time+0x68>
   2022c:	tst	r7, r8, lsr r6
   20230:	beq	20208 <conf_find_time+0x28>
   20234:	ldr	r0, [r5]
   20238:	mov	r1, r4
   2023c:	bl	d340 <rb_strcasecmp@plt>
   20240:	cmp	r0, #0
   20244:	bne	20208 <conf_find_time+0x28>
   20248:	ldr	r0, [r5, #4]
   2024c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20250:	mov	r0, #0
   20254:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20258:	.word	0x00039b50

0002025c <yylex>:
   2025c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20260:	add	fp, sp, #28
   20264:	sub	sp, sp, #4
   20268:	ldr	r0, [pc, #1940]	; 20a04 <yylex+0x7a8>
   2026c:	add	r0, pc, r0
   20270:	ldrb	r1, [r0]
   20274:	cmp	r1, #0
   20278:	bne	20338 <yylex+0xdc>
   2027c:	mov	r1, #1
   20280:	strb	r1, [r0]
   20284:	ldr	r0, [pc, #1916]	; 20a08 <yylex+0x7ac>
   20288:	add	r0, pc, r0
   2028c:	ldrb	r0, [r0]
   20290:	cmp	r0, #0
   20294:	bne	202a4 <yylex+0x48>
   20298:	ldr	r0, [pc, #1900]	; 20a0c <yylex+0x7b0>
   2029c:	add	r0, pc, r0
   202a0:	strb	r1, [r0]
   202a4:	ldr	r4, [pc, #1892]	; 20a10 <yylex+0x7b4>
   202a8:	ldr	r4, [pc, r4]
   202ac:	ldr	r0, [r4]
   202b0:	cmp	r0, #0
   202b4:	bne	202c8 <yylex+0x6c>
   202b8:	ldr	r0, [pc, #1876]	; 20a14 <yylex+0x7b8>
   202bc:	ldr	r0, [pc, r0]
   202c0:	ldr	r0, [r0]
   202c4:	str	r0, [r4]
   202c8:	ldr	r0, [pc, #1864]	; 20a18 <yylex+0x7bc>
   202cc:	ldr	r0, [pc, r0]
   202d0:	ldr	r1, [r0]
   202d4:	cmp	r1, #0
   202d8:	bne	202ec <yylex+0x90>
   202dc:	ldr	r1, [pc, #1848]	; 20a1c <yylex+0x7c0>
   202e0:	ldr	r1, [pc, r1]
   202e4:	ldr	r1, [r1]
   202e8:	str	r1, [r0]
   202ec:	ldr	r0, [pc, #1836]	; 20a20 <yylex+0x7c4>
   202f0:	ldr	r0, [pc, r0]
   202f4:	cmp	r0, #0
   202f8:	beq	20310 <yylex+0xb4>
   202fc:	ldr	r1, [pc, #1824]	; 20a24 <yylex+0x7c8>
   20300:	ldr	r1, [pc, r1]
   20304:	ldr	r0, [r0, r1, lsl #2]
   20308:	cmp	r0, #0
   2030c:	bne	20334 <yylex+0xd8>
   20310:	bl	20b44 <yyensure_buffer_stack>
   20314:	ldr	r0, [r4]
   20318:	mov	r1, #16384	; 0x4000
   2031c:	bl	d6d0 <yy_create_buffer@plt>
   20320:	ldr	r1, [pc, #1792]	; 20a28 <yylex+0x7cc>
   20324:	ldr	r1, [pc, r1]
   20328:	ldr	r2, [pc, #1788]	; 20a2c <yylex+0x7d0>
   2032c:	ldr	r2, [pc, r2]
   20330:	str	r0, [r1, r2, lsl #2]
   20334:	bl	20cd8 <yy_load_buffer_state>
   20338:	ldr	r6, [pc, #1776]	; 20a30 <yylex+0x7d4>
   2033c:	ldr	r6, [pc, r6]
   20340:	ldr	r9, [pc, #1772]	; 20a34 <yylex+0x7d8>
   20344:	add	r9, pc, r9
   20348:	ldr	sl, [pc, #1768]	; 20a38 <yylex+0x7dc>
   2034c:	add	sl, pc, sl
   20350:	ldr	r8, [pc, #1764]	; 20a3c <yylex+0x7e0>
   20354:	add	r8, pc, r8
   20358:	ldr	r5, [pc, #1760]	; 20a40 <yylex+0x7e4>
   2035c:	add	r5, pc, r5
   20360:	ldr	r0, [pc, #1756]	; 20a44 <yylex+0x7e8>
   20364:	add	r0, pc, r0
   20368:	mov	r1, #0
   2036c:	str	r1, [r0]
   20370:	ldr	r0, [pc, #1744]	; 20a48 <yylex+0x7ec>
   20374:	add	r0, pc, r0
   20378:	ldrb	r0, [r0]
   2037c:	cmp	r0, #1
   20380:	bne	203b0 <yylex+0x154>
   20384:	mov	r0, #0
   20388:	ldr	r1, [pc, #1724]	; 20a4c <yylex+0x7f0>
   2038c:	add	r1, pc, r1
   20390:	strb	r0, [r1]
   20394:	ldr	r0, [r6]
   20398:	ldr	r1, [pc, #1712]	; 20a50 <yylex+0x7f4>
   2039c:	ldr	r1, [pc, r1]
   203a0:	sub	r0, r1, r0
   203a4:	ldr	r1, [pc, #1704]	; 20a54 <yylex+0x7f8>
   203a8:	add	r1, pc, r1
   203ac:	str	r0, [r1]
   203b0:	ldr	r0, [pc, #1696]	; 20a58 <yylex+0x7fc>
   203b4:	add	r0, pc, r0
   203b8:	ldrb	r0, [r0]
   203bc:	ldr	r4, [pc, #1688]	; 20a5c <yylex+0x800>
   203c0:	ldr	r4, [pc, r4]
   203c4:	strb	r0, [r4]
   203c8:	ldr	r0, [pc, #1680]	; 20a60 <yylex+0x804>
   203cc:	add	r0, pc, r0
   203d0:	ldrb	r7, [r0]
   203d4:	str	r4, [sp]
   203d8:	b	20400 <yylex+0x1a4>
   203dc:	ldr	r0, [pc, #1684]	; 20a78 <yylex+0x81c>
   203e0:	add	r0, pc, r0
   203e4:	add	r0, r0, r2, lsl #1
   203e8:	ldrsh	r7, [r0]
   203ec:	add	r0, r9, r7, lsl #1
   203f0:	ldrh	r0, [r0]
   203f4:	add	r4, r4, #1
   203f8:	cmp	r0, #104	; 0x68
   203fc:	beq	204e4 <yylex+0x288>
   20400:	ldrb	r0, [r4]
   20404:	ldr	r1, [pc, #1624]	; 20a64 <yylex+0x808>
   20408:	add	r1, pc, r1
   2040c:	ldrb	r0, [r1, r0]
   20410:	ldr	r1, [pc, #1616]	; 20a68 <yylex+0x80c>
   20414:	add	r1, pc, r1
   20418:	add	r1, r1, r7, lsl #1
   2041c:	ldrh	r1, [r1]
   20420:	cmp	r1, #0
   20424:	beq	20440 <yylex+0x1e4>
   20428:	ldr	r1, [pc, #1596]	; 20a6c <yylex+0x810>
   2042c:	add	r1, pc, r1
   20430:	str	r4, [r1]
   20434:	ldr	r1, [pc, #1588]	; 20a70 <yylex+0x814>
   20438:	add	r1, pc, r1
   2043c:	str	r7, [r1]
   20440:	add	r1, r9, r7, lsl #1
   20444:	ldrsh	r1, [r1]
   20448:	add	r2, r1, r0
   2044c:	add	r1, sl, r2, lsl #1
   20450:	ldrsh	r1, [r1]
   20454:	cmp	r7, r1
   20458:	beq	203dc <yylex+0x180>
   2045c:	mov	r1, r0
   20460:	add	r2, r8, r7, lsl #1
   20464:	ldrsh	r7, [r2]
   20468:	cmp	r7, #47	; 0x2f
   2046c:	ldrbge	r1, [r5, r0]
   20470:	add	r0, r9, r7, lsl #1
   20474:	ldrsh	r0, [r0]
   20478:	uxtab	r2, r0, r1
   2047c:	add	r0, sl, r2, lsl #1
   20480:	ldrh	r3, [r0]
   20484:	uxtb	r0, r1
   20488:	uxth	r6, r7
   2048c:	cmp	r6, r3
   20490:	bne	20460 <yylex+0x204>
   20494:	ldr	r6, [pc, #1496]	; 20a74 <yylex+0x818>
   20498:	ldr	r6, [pc, r6]
   2049c:	b	203dc <yylex+0x180>
   204a0:	mvn	r0, r7
   204a4:	add	r0, r0, r4
   204a8:	ldr	r1, [r6]
   204ac:	add	r4, r1, r0
   204b0:	ldr	r0, [pc, #1628]	; 20b14 <yylex+0x8b8>
   204b4:	add	r0, pc, r0
   204b8:	str	r4, [r0]
   204bc:	bl	21184 <yy_get_previous_state>
   204c0:	mov	r7, r0
   204c4:	bl	21304 <yy_try_NUL_trans>
   204c8:	ldr	r1, [r6]
   204cc:	ldr	r2, [pc, #1604]	; 20b18 <yylex+0x8bc>
   204d0:	ldr	r2, [pc, r2]
   204d4:	add	r1, r1, r2
   204d8:	str	r1, [sp]
   204dc:	cmp	r0, #0
   204e0:	bne	20730 <yylex+0x4d4>
   204e4:	ldr	r0, [pc, #1424]	; 20a7c <yylex+0x820>
   204e8:	add	r0, pc, r0
   204ec:	add	r0, r0, r7, lsl #1
   204f0:	ldrh	r0, [r0]
   204f4:	cmp	r0, #0
   204f8:	bne	2051c <yylex+0x2c0>
   204fc:	ldr	r0, [pc, #1404]	; 20a80 <yylex+0x824>
   20500:	ldr	r0, [pc, r0]
   20504:	ldr	r1, [pc, #1400]	; 20a84 <yylex+0x828>
   20508:	add	r1, pc, r1
   2050c:	add	r0, r1, r0, lsl #1
   20510:	ldrh	r0, [r0]
   20514:	ldr	r4, [pc, #1388]	; 20a88 <yylex+0x82c>
   20518:	ldr	r4, [pc, r4]
   2051c:	ldr	r1, [pc, #1384]	; 20a8c <yylex+0x830>
   20520:	ldr	r1, [pc, r1]
   20524:	ldr	r2, [sp]
   20528:	sub	r1, r2, r1
   2052c:	str	r1, [r6]
   20530:	sub	r1, r4, r1
   20534:	ldr	r2, [pc, #1364]	; 20a90 <yylex+0x834>
   20538:	ldr	r2, [pc, r2]
   2053c:	str	r1, [r2]
   20540:	ldrb	r1, [r4]
   20544:	ldr	r2, [pc, #1352]	; 20a94 <yylex+0x838>
   20548:	add	r2, pc, r2
   2054c:	strb	r1, [r2]
   20550:	mov	r1, #0
   20554:	strb	r1, [r4]
   20558:	sxth	r0, r0
   2055c:	mov	r1, r4
   20560:	ldr	r2, [pc, #1328]	; 20a98 <yylex+0x83c>
   20564:	add	r2, pc, r2
   20568:	str	r1, [r2]
   2056c:	cmp	r0, #13
   20570:	bne	20620 <yylex+0x3c4>
   20574:	ldr	r7, [r6]
   20578:	ldr	r0, [pc, #1400]	; 20af8 <yylex+0x89c>
   2057c:	add	r0, pc, r0
   20580:	ldrb	r0, [r0]
   20584:	strb	r0, [r4]
   20588:	ldr	r0, [pc, #1388]	; 20afc <yylex+0x8a0>
   2058c:	ldr	r0, [pc, r0]
   20590:	ldr	r1, [pc, #1384]	; 20b00 <yylex+0x8a4>
   20594:	ldr	r1, [pc, r1]
   20598:	ldr	r2, [r1, r0, lsl #2]
   2059c:	ldr	r3, [r2, #44]	; 0x2c
   205a0:	cmp	r3, #0
   205a4:	bne	205d8 <yylex+0x37c>
   205a8:	ldr	r2, [r2, #16]
   205ac:	ldr	r3, [pc, #1360]	; 20b04 <yylex+0x8a8>
   205b0:	add	r3, pc, r3
   205b4:	str	r2, [r3]
   205b8:	ldr	r2, [r1, r0, lsl #2]
   205bc:	ldr	r3, [pc, #1348]	; 20b08 <yylex+0x8ac>
   205c0:	ldr	r3, [pc, r3]
   205c4:	ldr	r3, [r3]
   205c8:	str	r3, [r2]
   205cc:	ldr	r2, [r1, r0, lsl #2]
   205d0:	mov	r3, #1
   205d4:	str	r3, [r2, #44]	; 0x2c
   205d8:	ldr	r0, [r1, r0, lsl #2]
   205dc:	ldr	r0, [r0, #4]
   205e0:	ldr	r1, [pc, #1316]	; 20b0c <yylex+0x8b0>
   205e4:	ldr	r1, [pc, r1]
   205e8:	add	r0, r0, r1
   205ec:	ldr	r1, [pc, #1308]	; 20b10 <yylex+0x8b4>
   205f0:	ldr	r1, [pc, r1]
   205f4:	cmp	r1, r0
   205f8:	bls	204a0 <yylex+0x244>
   205fc:	bl	213e0 <yy_get_next_buffer>
   20600:	cmp	r0, #1
   20604:	bne	20694 <yylex+0x438>
   20608:	ldr	r0, [r6]
   2060c:	ldr	r1, [pc, #1320]	; 20b3c <yylex+0x8e0>
   20610:	ldr	r1, [pc, r1]
   20614:	add	r1, r0, r1
   20618:	mov	r0, #14
   2061c:	b	20560 <yylex+0x304>
   20620:	cmp	r0, #14
   20624:	bhi	208bc <yylex+0x660>
   20628:	add	r1, pc, #4
   2062c:	ldr	r0, [r1, r0, lsl #2]
   20630:	add	pc, r1, r0
   20634:	.word	0x0000003c
   20638:	.word	0x00000114
   2063c:	.word	0x0000011c
   20640:	.word	0x00000124
   20644:	.word	0xfffffd2c
   20648:	.word	0x000001b8
   2064c:	.word	0x000002e0
   20650:	.word	0x000001c0
   20654:	.word	0x00000300
   20658:	.word	0x0000030c
   2065c:	.word	0x00000344
   20660:	.word	0x00000350
   20664:	.word	0x00000250
   20668:	.word	0x00000288
   2066c:	.word	0x00000278
   20670:	ldr	r0, [pc, #1060]	; 20a9c <yylex+0x840>
   20674:	add	r0, pc, r0
   20678:	ldrb	r0, [r0]
   2067c:	strb	r0, [r4]
   20680:	ldr	r7, [pc, #1048]	; 20aa0 <yylex+0x844>
   20684:	ldr	r7, [pc, r7]
   20688:	ldr	r4, [pc, #1044]	; 20aa4 <yylex+0x848>
   2068c:	ldr	r4, [pc, r4]
   20690:	b	204e4 <yylex+0x288>
   20694:	cmp	r0, #2
   20698:	bne	206ec <yylex+0x490>
   2069c:	ldr	r0, [pc, #1156]	; 20b28 <yylex+0x8cc>
   206a0:	ldr	r0, [pc, r0]
   206a4:	ldr	r1, [pc, #1152]	; 20b2c <yylex+0x8d0>
   206a8:	ldr	r1, [pc, r1]
   206ac:	ldr	r0, [r1, r0, lsl #2]
   206b0:	ldr	r0, [r0, #4]
   206b4:	ldr	r1, [pc, #1140]	; 20b30 <yylex+0x8d4>
   206b8:	ldr	r1, [pc, r1]
   206bc:	add	r4, r0, r1
   206c0:	ldr	r0, [pc, #1132]	; 20b34 <yylex+0x8d8>
   206c4:	add	r0, pc, r0
   206c8:	str	r4, [r0]
   206cc:	bl	21184 <yy_get_previous_state>
   206d0:	mov	r7, r0
   206d4:	ldr	r0, [r6]
   206d8:	ldr	r1, [pc, #1112]	; 20b38 <yylex+0x8dc>
   206dc:	ldr	r1, [pc, r1]
   206e0:	add	r0, r0, r1
   206e4:	str	r0, [sp]
   206e8:	b	204e4 <yylex+0x288>
   206ec:	cmp	r0, #0
   206f0:	bne	20360 <yylex+0x104>
   206f4:	mvn	r0, r7
   206f8:	add	r0, r0, r4
   206fc:	ldr	r1, [r6]
   20700:	add	r4, r1, r0
   20704:	ldr	r0, [pc, #1044]	; 20b20 <yylex+0x8c4>
   20708:	add	r0, pc, r0
   2070c:	str	r4, [r0]
   20710:	bl	21184 <yy_get_previous_state>
   20714:	mov	r7, r0
   20718:	ldr	r0, [r6]
   2071c:	ldr	r1, [pc, #1024]	; 20b24 <yylex+0x8c8>
   20720:	ldr	r1, [pc, r1]
   20724:	add	r0, r0, r1
   20728:	str	r0, [sp]
   2072c:	b	20400 <yylex+0x1a4>
   20730:	add	r4, r4, #1
   20734:	ldr	r1, [pc, #992]	; 20b1c <yylex+0x8c0>
   20738:	add	r1, pc, r1
   2073c:	str	r4, [r1]
   20740:	mov	r7, r0
   20744:	b	20400 <yylex+0x1a4>
   20748:	bl	e51c <cinclude@plt>
   2074c:	b	20360 <yylex+0x104>
   20750:	bl	d790 <ccomment@plt>
   20754:	b	20360 <yylex+0x104>
   20758:	ldr	r0, [r6]
   2075c:	add	r1, r0, #1
   20760:	ldr	r0, [pc, #832]	; 20aa8 <yylex+0x84c>
   20764:	ldr	r0, [pc, r0]
   20768:	mov	r2, #16384	; 0x4000
   2076c:	bl	e510 <rb_strlcpy@plt>
   20770:	ldr	r0, [pc, #820]	; 20aac <yylex+0x850>
   20774:	ldr	r0, [pc, r0]
   20778:	mov	r1, r0
   2077c:	ldr	r0, [r0]
   20780:	add	r0, r0, #1
   20784:	str	r0, [r1]
   20788:	ldr	r0, [pc, #800]	; 20ab0 <yylex+0x854>
   2078c:	add	r0, pc, r0
   20790:	mov	r3, r0
   20794:	ldrb	r0, [r0]
   20798:	strb	r0, [r4]
   2079c:	ldr	r0, [pc, #784]	; 20ab4 <yylex+0x858>
   207a0:	ldr	r0, [pc, r0]
   207a4:	mov	r1, #1
   207a8:	str	r1, [r0]
   207ac:	ldr	r0, [pc, #772]	; 20ab8 <yylex+0x85c>
   207b0:	ldr	r0, [pc, r0]
   207b4:	ldr	r1, [sp]
   207b8:	sub	r0, r1, r0
   207bc:	str	r0, [r6]
   207c0:	add	r1, r0, #1
   207c4:	ldr	r2, [pc, #752]	; 20abc <yylex+0x860>
   207c8:	add	r2, pc, r2
   207cc:	mov	r7, r2
   207d0:	str	r1, [r2]
   207d4:	ldrb	r2, [r0, #1]
   207d8:	strb	r2, [r3]
   207dc:	mov	r2, #0
   207e0:	strb	r2, [r0, #1]
   207e4:	str	r1, [r7]
   207e8:	b	20360 <yylex+0x104>
   207ec:	bl	df1c <hashcomment@plt>
   207f0:	b	20360 <yylex+0x104>
   207f4:	ldr	r1, [r6]
   207f8:	ldr	r7, [pc, #708]	; 20ac4 <yylex+0x868>
   207fc:	ldr	r7, [pc, r7]
   20800:	ldr	r0, [r7]
   20804:	add	r2, r0, r1
   20808:	ldrb	r2, [r2, #-2]
   2080c:	cmp	r2, #92	; 0x5c
   20810:	bne	208cc <yylex+0x670>
   20814:	ldr	r1, [pc, #684]	; 20ac8 <yylex+0x86c>
   20818:	add	r1, pc, r1
   2081c:	mov	ip, r1
   20820:	ldrb	r1, [r1]
   20824:	strb	r1, [r4]
   20828:	ldr	r1, [pc, #668]	; 20acc <yylex+0x870>
   2082c:	ldr	r1, [pc, r1]
   20830:	ldr	r3, [sp]
   20834:	sub	r2, r3, r1
   20838:	str	r2, [r6]
   2083c:	add	r0, r0, r3
   20840:	mvn	r1, r1
   20844:	add	r3, r1, r0
   20848:	ldr	r4, [pc, #640]	; 20ad0 <yylex+0x874>
   2084c:	add	r4, pc, r4
   20850:	str	r3, [r4]
   20854:	sub	r2, r3, r2
   20858:	str	r2, [r7]
   2085c:	ldrb	r2, [r1, r0]
   20860:	strb	r2, [ip]
   20864:	mov	r2, #0
   20868:	strb	r2, [r1, r0]
   2086c:	ldr	r0, [pc, #608]	; 20ad4 <yylex+0x878>
   20870:	add	r0, pc, r0
   20874:	mov	r1, #1
   20878:	strb	r1, [r0]
   2087c:	str	r3, [r4]
   20880:	b	20360 <yylex+0x104>
   20884:	ldr	r0, [pc, #612]	; 20af0 <yylex+0x894>
   20888:	ldr	r0, [pc, r0]
   2088c:	ldr	r3, [r0]
   20890:	ldr	r0, [pc, #604]	; 20af4 <yylex+0x898>
   20894:	ldr	r0, [pc, r0]
   20898:	ldr	r1, [r0]
   2089c:	ldr	r0, [r6]
   208a0:	mov	r2, #1
   208a4:	bl	d8a4 <fwrite@plt>
   208a8:	b	20360 <yylex+0x104>
   208ac:	bl	e15c <ieof@plt>
   208b0:	cmp	r0, #0
   208b4:	beq	20360 <yylex+0x104>
   208b8:	b	20994 <yylex+0x738>
   208bc:	ldr	r0, [pc, #636]	; 20b40 <yylex+0x8e4>
   208c0:	add	r0, pc, r0
   208c4:	bl	d3d0 <conf_yy_fatal_error@plt>
   208c8:	b	20360 <yylex+0x104>
   208cc:	add	r1, r1, #1
   208d0:	ldr	r6, [pc, #512]	; 20ad8 <yylex+0x87c>
   208d4:	ldr	r6, [pc, r6]
   208d8:	mov	r0, r6
   208dc:	mov	r2, #1024	; 0x400
   208e0:	bl	e510 <rb_strlcpy@plt>
   208e4:	ldr	r0, [r7]
   208e8:	sub	r1, r0, #2
   208ec:	ldrb	r0, [r6, r1]
   208f0:	cmp	r0, #34	; 0x22
   208f4:	beq	209a0 <yylex+0x744>
   208f8:	mov	r0, #0
   208fc:	ldr	r1, [pc, #472]	; 20adc <yylex+0x880>
   20900:	add	r1, pc, r1
   20904:	bl	e0b4 <ilog@plt>
   20908:	ldr	r6, [pc, #464]	; 20ae0 <yylex+0x884>
   2090c:	ldr	r6, [pc, r6]
   20910:	b	20360 <yylex+0x104>
   20914:	ldr	r0, [r6]
   20918:	bl	e468 <atoi@plt>
   2091c:	ldr	r1, [pc, #412]	; 20ac0 <yylex+0x864>
   20920:	ldr	r1, [pc, r1]
   20924:	str	r0, [r1]
   20928:	movw	r0, #262	; 0x106
   2092c:	sub	sp, fp, #28
   20930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20934:	movw	r0, #258	; 0x102
   20938:	sub	sp, fp, #28
   2093c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20940:	ldr	r1, [r6]
   20944:	ldr	r4, [pc, #412]	; 20ae8 <yylex+0x88c>
   20948:	ldr	r4, [pc, r4]
   2094c:	mov	r0, r4
   20950:	mov	r2, #1024	; 0x400
   20954:	bl	e510 <rb_strlcpy@plt>
   20958:	ldr	r0, [pc, #396]	; 20aec <yylex+0x890>
   2095c:	ldr	r0, [pc, r0]
   20960:	ldr	r0, [r0]
   20964:	mov	r1, #0
   20968:	strb	r1, [r4, r0]
   2096c:	movw	r0, #261	; 0x105
   20970:	sub	sp, fp, #28
   20974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20978:	movw	r0, #259	; 0x103
   2097c:	sub	sp, fp, #28
   20980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20984:	ldr	r0, [r6]
   20988:	ldrb	r0, [r0]
   2098c:	sub	sp, fp, #28
   20990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20994:	mov	r0, #0
   20998:	sub	sp, fp, #28
   2099c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   209a0:	mov	r0, #0
   209a4:	strb	r0, [r6, r1]
   209a8:	mov	r4, r6
   209ac:	b	209c8 <yylex+0x76c>
   209b0:	add	r0, r0, #1
   209b4:	ldrb	r1, [r6, r0]
   209b8:	cmp	r1, #0
   209bc:	beq	209e0 <yylex+0x784>
   209c0:	strb	r1, [r4], #1
   209c4:	add	r0, r0, #1
   209c8:	ldrb	r1, [r6, r0]
   209cc:	cmp	r1, #92	; 0x5c
   209d0:	beq	209b0 <yylex+0x754>
   209d4:	cmp	r1, #0
   209d8:	bne	209c0 <yylex+0x764>
   209dc:	b	209f0 <yylex+0x794>
   209e0:	ldr	r1, [pc, #252]	; 20ae4 <yylex+0x888>
   209e4:	add	r1, pc, r1
   209e8:	mov	r0, #0
   209ec:	bl	e0b4 <ilog@plt>
   209f0:	mov	r0, #0
   209f4:	strb	r0, [r4]
   209f8:	mov	r0, #260	; 0x104
   209fc:	sub	sp, fp, #28
   20a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a04:	.word	0x00045a70
   20a08:	.word	0x00045a58
   20a0c:	.word	0x00045a44
   20a10:	.word	0x0003a620
   20a14:	.word	0x0003a77c
   20a18:	.word	0x0003a6cc
   20a1c:	.word	0x0003a7a8
   20a20:	.word	0x000459f4
   20a24:	.word	0x000459e8
   20a28:	.word	0x000459c0
   20a2c:	.word	0x000459bc
   20a30:	.word	0x0003a5d0
   20a34:	.word	0x0002261a
   20a38:	.word	0x000224fe
   20a3c:	.word	0x00022676
   20a40:	.word	0x000226da
   20a44:	.word	0x00045988
   20a48:	.word	0x0004597c
   20a4c:	.word	0x00045964
   20a50:	.word	0x00045958
   20a54:	.word	0x00045944
   20a58:	.word	0x00045944
   20a5c:	.word	0x00045934
   20a60:	.word	0x00045914
   20a64:	.word	0x000222e4
   20a68:	.word	0x000223d8
   20a6c:	.word	0x000458d4
   20a70:	.word	0x000458c4
   20a74:	.word	0x0003a474
   20a78:	.word	0x00022678
   20a7c:	.word	0x00022304
   20a80:	.word	0x000457fc
   20a84:	.word	0x000222e4
   20a88:	.word	0x000457e8
   20a8c:	.word	0x000457cc
   20a90:	.word	0x0003a528
   20a94:	.word	0x000457b0
   20a98:	.word	0x00045790
   20a9c:	.word	0x00045684
   20aa0:	.word	0x00045678
   20aa4:	.word	0x00045674
   20aa8:	.word	0x0003a198
   20aac:	.word	0x0003a2cc
   20ab0:	.word	0x0004556c
   20ab4:	.word	0x0003a2c0
   20ab8:	.word	0x0004553c
   20abc:	.word	0x0004552c
   20ac0:	.word	0x0003a1e8
   20ac4:	.word	0x0003a264
   20ac8:	.word	0x000454e0
   20acc:	.word	0x000454c0
   20ad0:	.word	0x000454a8
   20ad4:	.word	0x00045480
   20ad8:	.word	0x0003a234
   20adc:	.word	0x0002226c
   20ae0:	.word	0x0003a000
   20ae4:	.word	0x00022188
   20ae8:	.word	0x0003a1c0
   20aec:	.word	0x0003a104
   20af0:	.word	0x0003a110
   20af4:	.word	0x0003a1cc
   20af8:	.word	0x0004577c
   20afc:	.word	0x0004575c
   20b00:	.word	0x00045750
   20b04:	.word	0x00045754
   20b08:	.word	0x0003a308
   20b0c:	.word	0x00045720
   20b10:	.word	0x00045704
   20b14:	.word	0x00045840
   20b18:	.word	0x0004581c
   20b1c:	.word	0x000455bc
   20b20:	.word	0x000455ec
   20b24:	.word	0x000455cc
   20b28:	.word	0x00045648
   20b2c:	.word	0x0004563c
   20b30:	.word	0x0004564c
   20b34:	.word	0x00045630
   20b38:	.word	0x00045610
   20b3c:	.word	0x000456dc
   20b40:	.word	0x000222ca

00020b44 <yyensure_buffer_stack>:
   20b44:	push	{r4, sl, fp, lr}
   20b48:	add	fp, sp, #8
   20b4c:	ldr	r0, [pc, #216]	; 20c2c <yyensure_buffer_stack+0xe8>
   20b50:	ldr	r0, [pc, r0]
   20b54:	cmp	r0, #0
   20b58:	beq	20bd4 <yyensure_buffer_stack+0x90>
   20b5c:	ldr	r1, [pc, #224]	; 20c44 <yyensure_buffer_stack+0x100>
   20b60:	ldr	r1, [pc, r1]
   20b64:	sub	r2, r1, #1
   20b68:	ldr	r3, [pc, #216]	; 20c48 <yyensure_buffer_stack+0x104>
   20b6c:	ldr	r3, [pc, r3]
   20b70:	cmp	r3, r2
   20b74:	popcc	{r4, sl, fp, pc}
   20b78:	add	r4, r1, #8
   20b7c:	lsl	r1, r4, #2
   20b80:	bl	d670 <yyrealloc@plt>
   20b84:	ldr	r1, [pc, #192]	; 20c4c <yyensure_buffer_stack+0x108>
   20b88:	add	r1, pc, r1
   20b8c:	str	r0, [r1]
   20b90:	cmp	r0, #0
   20b94:	bne	20ba4 <yyensure_buffer_stack+0x60>
   20b98:	ldr	r0, [pc, #176]	; 20c50 <yyensure_buffer_stack+0x10c>
   20b9c:	add	r0, pc, r0
   20ba0:	bl	d3d0 <conf_yy_fatal_error@plt>
   20ba4:	ldr	r0, [pc, #168]	; 20c54 <yyensure_buffer_stack+0x110>
   20ba8:	ldr	r0, [pc, r0]
   20bac:	ldr	r1, [pc, #164]	; 20c58 <yyensure_buffer_stack+0x114>
   20bb0:	ldr	r1, [pc, r1]
   20bb4:	vmov.i32	q8, #0	; 0x00000000
   20bb8:	add	r0, r1, r0, lsl #2
   20bbc:	vst1.32	{d16-d17}, [r0]!
   20bc0:	vst1.32	{d16-d17}, [r0]
   20bc4:	ldr	r0, [pc, #144]	; 20c5c <yyensure_buffer_stack+0x118>
   20bc8:	add	r0, pc, r0
   20bcc:	str	r4, [r0]
   20bd0:	pop	{r4, sl, fp, pc}
   20bd4:	mov	r0, #4
   20bd8:	bl	d8ec <yyalloc@plt>
   20bdc:	ldr	r1, [pc, #76]	; 20c30 <yyensure_buffer_stack+0xec>
   20be0:	add	r1, pc, r1
   20be4:	str	r0, [r1]
   20be8:	cmp	r0, #0
   20bec:	bne	20bfc <yyensure_buffer_stack+0xb8>
   20bf0:	ldr	r0, [pc, #60]	; 20c34 <yyensure_buffer_stack+0xf0>
   20bf4:	add	r0, pc, r0
   20bf8:	bl	d3d0 <conf_yy_fatal_error@plt>
   20bfc:	ldr	r0, [pc, #52]	; 20c38 <yyensure_buffer_stack+0xf4>
   20c00:	ldr	r0, [pc, r0]
   20c04:	mov	r1, #0
   20c08:	str	r1, [r0]
   20c0c:	ldr	r0, [pc, #40]	; 20c3c <yyensure_buffer_stack+0xf8>
   20c10:	add	r0, pc, r0
   20c14:	str	r1, [r0]
   20c18:	ldr	r0, [pc, #32]	; 20c40 <yyensure_buffer_stack+0xfc>
   20c1c:	add	r0, pc, r0
   20c20:	mov	r1, #1
   20c24:	str	r1, [r0]
   20c28:	pop	{r4, sl, fp, pc}
   20c2c:	.word	0x00045194
   20c30:	.word	0x00045104
   20c34:	.word	0x0002218a
   20c38:	.word	0x000450e4
   20c3c:	.word	0x000450d8
   20c40:	.word	0x000450ec
   20c44:	.word	0x000451a8
   20c48:	.word	0x0004517c
   20c4c:	.word	0x0004515c
   20c50:	.word	0x000221e2
   20c54:	.word	0x00045160
   20c58:	.word	0x00045134
   20c5c:	.word	0x00045140

00020c60 <yy_create_buffer>:
   20c60:	push	{r4, r5, r6, sl, fp, lr}
   20c64:	add	fp, sp, #16
   20c68:	mov	r6, r1
   20c6c:	mov	r4, r0
   20c70:	mov	r0, #48	; 0x30
   20c74:	bl	d8ec <yyalloc@plt>
   20c78:	mov	r5, r0
   20c7c:	cmp	r0, #0
   20c80:	bne	20c90 <yy_create_buffer+0x30>
   20c84:	ldr	r0, [pc, #68]	; 20cd0 <yy_create_buffer+0x70>
   20c88:	add	r0, pc, r0
   20c8c:	bl	d3d0 <conf_yy_fatal_error@plt>
   20c90:	str	r6, [r5, #12]
   20c94:	add	r0, r6, #2
   20c98:	bl	d8ec <yyalloc@plt>
   20c9c:	str	r0, [r5, #4]
   20ca0:	cmp	r0, #0
   20ca4:	bne	20cb4 <yy_create_buffer+0x54>
   20ca8:	ldr	r0, [pc, #36]	; 20cd4 <yy_create_buffer+0x74>
   20cac:	add	r0, pc, r0
   20cb0:	bl	d3d0 <conf_yy_fatal_error@plt>
   20cb4:	mov	r0, #1
   20cb8:	str	r0, [r5, #20]
   20cbc:	mov	r0, r5
   20cc0:	mov	r1, r4
   20cc4:	bl	218bc <yy_init_buffer>
   20cc8:	mov	r0, r5
   20ccc:	pop	{r4, r5, r6, sl, fp, pc}
   20cd0:	.word	0x00021f35
   20cd4:	.word	0x00021f11

00020cd8 <yy_load_buffer_state>:
   20cd8:	ldr	r0, [pc, #96]	; 20d40 <yy_load_buffer_state+0x68>
   20cdc:	ldr	r0, [pc, r0]
   20ce0:	ldr	r1, [pc, #92]	; 20d44 <yy_load_buffer_state+0x6c>
   20ce4:	ldr	r1, [pc, r1]
   20ce8:	ldr	r2, [r1, r0, lsl #2]
   20cec:	ldr	ip, [r2, #16]
   20cf0:	ldr	r3, [pc, #80]	; 20d48 <yy_load_buffer_state+0x70>
   20cf4:	add	r3, pc, r3
   20cf8:	str	ip, [r3]
   20cfc:	ldr	r2, [r2, #8]
   20d00:	ldr	r3, [pc, #68]	; 20d4c <yy_load_buffer_state+0x74>
   20d04:	add	r3, pc, r3
   20d08:	str	r2, [r3]
   20d0c:	ldr	r3, [pc, #60]	; 20d50 <yy_load_buffer_state+0x78>
   20d10:	ldr	r3, [pc, r3]
   20d14:	str	r2, [r3]
   20d18:	ldr	r0, [r1, r0, lsl #2]
   20d1c:	ldr	r0, [r0]
   20d20:	ldr	r1, [pc, #44]	; 20d54 <yy_load_buffer_state+0x7c>
   20d24:	ldr	r1, [pc, r1]
   20d28:	str	r0, [r1]
   20d2c:	ldrb	r0, [r2]
   20d30:	ldr	r1, [pc, #32]	; 20d58 <yy_load_buffer_state+0x80>
   20d34:	add	r1, pc, r1
   20d38:	strb	r0, [r1]
   20d3c:	bx	lr
   20d40:	.word	0x0004500c
   20d44:	.word	0x00045000
   20d48:	.word	0x00045010
   20d4c:	.word	0x00044ff0
   20d50:	.word	0x00039bfc
   20d54:	.word	0x00039ba4
   20d58:	.word	0x00044fc4

00020d5c <cinclude>:
   20d5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20d60:	add	fp, sp, #24
   20d64:	sub	sp, sp, #520	; 0x208
   20d68:	ldr	r0, [pc, #452]	; 20f34 <cinclude+0x1d8>
   20d6c:	ldr	r0, [pc, r0]
   20d70:	ldr	r4, [r0]
   20d74:	mov	r0, r4
   20d78:	mov	r1, #60	; 0x3c
   20d7c:	bl	dce8 <strchr@plt>
   20d80:	cmp	r0, #0
   20d84:	beq	20d98 <cinclude+0x3c>
   20d88:	add	r4, r0, #1
   20d8c:	mov	r0, r4
   20d90:	mov	r1, #62	; 0x3e
   20d94:	b	20db0 <cinclude+0x54>
   20d98:	mov	r0, r4
   20d9c:	mov	r1, #34	; 0x22
   20da0:	bl	dce8 <strchr@plt>
   20da4:	add	r4, r0, #1
   20da8:	mov	r0, r4
   20dac:	mov	r1, #34	; 0x22
   20db0:	bl	dce8 <strchr@plt>
   20db4:	mov	r1, #0
   20db8:	strb	r1, [r0]
   20dbc:	ldr	r6, [pc, #372]	; 20f38 <cinclude+0x1dc>
   20dc0:	ldr	r6, [pc, r6]
   20dc4:	ldr	r0, [r6]
   20dc8:	cmp	r0, #10
   20dcc:	blt	20de8 <cinclude+0x8c>
   20dd0:	ldr	r0, [pc, #412]	; 20f74 <cinclude+0x218>
   20dd4:	add	r0, pc, r0
   20dd8:	mov	r1, #10
   20ddc:	sub	sp, fp, #24
   20de0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20de4:	b	d400 <conf_report_error@plt>
   20de8:	ldr	r1, [pc, #332]	; 20f3c <cinclude+0x1e0>
   20dec:	add	r1, pc, r1
   20df0:	mov	r0, r4
   20df4:	bl	d1f0 <fopen@plt>
   20df8:	mov	r5, r0
   20dfc:	cmp	r0, #0
   20e00:	bne	20e4c <cinclude+0xf0>
   20e04:	ldr	r0, [pc, #308]	; 20f40 <cinclude+0x1e4>
   20e08:	ldr	r0, [pc, r0]
   20e0c:	ldr	r3, [r0, #12]
   20e10:	mov	r0, #47	; 0x2f
   20e14:	stm	sp, {r0, r4}
   20e18:	add	r5, sp, #8
   20e1c:	ldr	r2, [pc, #288]	; 20f44 <cinclude+0x1e8>
   20e20:	add	r2, pc, r2
   20e24:	mov	r0, r5
   20e28:	mov	r1, #512	; 0x200
   20e2c:	bl	de74 <snprintf@plt>
   20e30:	ldr	r1, [pc, #272]	; 20f48 <cinclude+0x1ec>
   20e34:	add	r1, pc, r1
   20e38:	mov	r0, r5
   20e3c:	bl	d1f0 <fopen@plt>
   20e40:	cmp	r0, #0
   20e44:	beq	20f0c <cinclude+0x1b0>
   20e48:	mov	r5, r0
   20e4c:	ldr	r0, [r6]
   20e50:	ldr	r1, [pc, #244]	; 20f4c <cinclude+0x1f0>
   20e54:	ldr	r1, [pc, r1]
   20e58:	ldr	r2, [r1]
   20e5c:	ldr	r3, [pc, #236]	; 20f50 <cinclude+0x1f4>
   20e60:	ldr	r3, [pc, r3]
   20e64:	str	r2, [r3, r0, lsl #2]
   20e68:	mov	r2, #1
   20e6c:	str	r2, [r1]
   20e70:	ldr	r8, [pc, #220]	; 20f54 <cinclude+0x1f8>
   20e74:	ldr	r8, [pc, r8]
   20e78:	ldr	r1, [r8]
   20e7c:	ldr	r2, [pc, #212]	; 20f58 <cinclude+0x1fc>
   20e80:	ldr	r2, [pc, r2]
   20e84:	str	r1, [r2, r0, lsl #2]
   20e88:	ldr	r7, [pc, #204]	; 20f5c <cinclude+0x200>
   20e8c:	ldr	r7, [pc, r7]
   20e90:	add	r0, r7, r0, lsl #9
   20e94:	mov	r1, r4
   20e98:	bl	d91c <strcpy@plt>
   20e9c:	ldr	r0, [r6]
   20ea0:	add	r1, r7, r0, lsl #9
   20ea4:	ldr	r2, [pc, #180]	; 20f60 <cinclude+0x204>
   20ea8:	ldr	r2, [pc, r2]
   20eac:	str	r1, [r2]
   20eb0:	ldr	r1, [pc, #172]	; 20f64 <cinclude+0x208>
   20eb4:	ldr	r1, [pc, r1]
   20eb8:	cmp	r1, #0
   20ebc:	beq	20ed0 <cinclude+0x174>
   20ec0:	ldr	r2, [pc, #160]	; 20f68 <cinclude+0x20c>
   20ec4:	ldr	r2, [pc, r2]
   20ec8:	ldr	r1, [r1, r2, lsl #2]
   20ecc:	b	20ed4 <cinclude+0x178>
   20ed0:	mov	r1, #0
   20ed4:	add	r2, r0, #1
   20ed8:	str	r2, [r6]
   20edc:	ldr	r2, [pc, #136]	; 20f6c <cinclude+0x210>
   20ee0:	ldr	r2, [pc, r2]
   20ee4:	str	r1, [r2, r0, lsl #2]
   20ee8:	str	r5, [r8]
   20eec:	ldr	r0, [pc, #124]	; 20f70 <cinclude+0x214>
   20ef0:	ldr	r0, [pc, r0]
   20ef4:	ldr	r0, [r0]
   20ef8:	mov	r1, #16384	; 0x4000
   20efc:	bl	d6d0 <yy_create_buffer@plt>
   20f00:	sub	sp, fp, #24
   20f04:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20f08:	b	21960 <yy_switch_to_buffer>
   20f0c:	bl	de38 <__errno_location@plt>
   20f10:	ldr	r0, [r0]
   20f14:	bl	dac0 <strerror@plt>
   20f18:	mov	r2, r0
   20f1c:	ldr	r0, [pc, #84]	; 20f78 <cinclude+0x21c>
   20f20:	add	r0, pc, r0
   20f24:	mov	r1, r4
   20f28:	sub	sp, fp, #24
   20f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20f30:	b	d400 <conf_report_error@plt>
   20f34:	.word	0x00039ba0
   20f38:	.word	0x00039b14
   20f3c:	.word	0x000218b1
   20f40:	.word	0x00039c40
   20f44:	.word	0x0001fd21
   20f48:	.word	0x00021869
   20f4c:	.word	0x00039bec
   20f50:	.word	0x00039b6c
   20f54:	.word	0x00039b88
   20f58:	.word	0x00039a88
   20f5c:	.word	0x00039c1c
   20f60:	.word	0x00039a50
   20f64:	.word	0x00044e30
   20f68:	.word	0x00044e24
   20f6c:	.word	0x00039a50
   20f70:	.word	0x000399d8
   20f74:	.word	0x00021e95
   20f78:	.word	0x00021d6e

00020f7c <ccomment>:
   20f7c:	push	{r4, sl, fp, lr}
   20f80:	add	fp, sp, #8
   20f84:	ldr	r4, [pc, #104]	; 20ff4 <ccomment+0x78>
   20f88:	ldr	r4, [pc, r4]
   20f8c:	b	20fa4 <ccomment+0x28>
   20f90:	cmp	r0, #10
   20f94:	bne	20fb8 <ccomment+0x3c>
   20f98:	ldr	r0, [r4]
   20f9c:	add	r0, r0, #1
   20fa0:	str	r0, [r4]
   20fa4:	bl	21fd8 <input>
   20fa8:	cmp	r0, #10
   20fac:	beq	20f98 <ccomment+0x1c>
   20fb0:	cmp	r0, #42	; 0x2a
   20fb4:	beq	20fc4 <ccomment+0x48>
   20fb8:	cmn	r0, #1
   20fbc:	bne	20fa4 <ccomment+0x28>
   20fc0:	b	20fe4 <ccomment+0x68>
   20fc4:	bl	21fd8 <input>
   20fc8:	cmp	r0, #41	; 0x29
   20fcc:	ble	20f90 <ccomment+0x14>
   20fd0:	cmp	r0, #42	; 0x2a
   20fd4:	beq	20fc4 <ccomment+0x48>
   20fd8:	cmp	r0, #47	; 0x2f
   20fdc:	popeq	{r4, sl, fp, pc}
   20fe0:	b	20fa4 <ccomment+0x28>
   20fe4:	ldr	r0, [pc, #12]	; 20ff8 <ccomment+0x7c>
   20fe8:	add	r0, pc, r0
   20fec:	bl	d3d0 <conf_yy_fatal_error@plt>
   20ff0:	bl	220e8 <yy_fatal_error>
   20ff4:	.word	0x00039ab8
   20ff8:	.word	0x00021c72

00020ffc <hashcomment>:
   20ffc:	push	{r4, sl, fp, lr}
   21000:	add	fp, sp, #8
   21004:	ldr	r0, [pc, #68]	; 21050 <hashcomment+0x54>
   21008:	ldr	r0, [pc, r0]
   2100c:	ldr	r4, [r0]
   21010:	mov	r0, r4
   21014:	bl	dc94 <strlen@plt>
   21018:	cmp	r0, #8
   2101c:	popcc	{r4, sl, fp, pc}
   21020:	ldr	r1, [pc, #44]	; 21054 <hashcomment+0x58>
   21024:	add	r1, pc, r1
   21028:	mov	r0, r4
   2102c:	mov	r2, #8
   21030:	bl	d538 <rb_strncasecmp@plt>
   21034:	cmp	r0, #0
   21038:	beq	21040 <hashcomment+0x44>
   2103c:	pop	{r4, sl, fp, pc}
   21040:	ldr	r0, [pc, #16]	; 21058 <hashcomment+0x5c>
   21044:	add	r0, pc, r0
   21048:	pop	{r4, sl, fp, lr}
   2104c:	b	d484 <yyerror@plt>
   21050:	.word	0x00039904
   21054:	.word	0x00021c7a
   21058:	.word	0x00021c63

0002105c <ieof>:
   2105c:	push	{r4, r5, r6, sl, fp, lr}
   21060:	add	fp, sp, #16
   21064:	ldr	r5, [pc, #232]	; 21154 <ieof+0xf8>
   21068:	ldr	r5, [pc, r5]
   2106c:	ldr	r0, [r5]
   21070:	cmp	r0, #0
   21074:	beq	2112c <ieof+0xd0>
   21078:	ldr	r6, [pc, #216]	; 21158 <ieof+0xfc>
   2107c:	ldr	r6, [pc, r6]
   21080:	ldr	r0, [r6]
   21084:	bl	e0f0 <fclose@plt>
   21088:	ldr	r0, [r5]
   2108c:	sub	r1, r0, #1
   21090:	str	r1, [r5]
   21094:	cmp	r0, #0
   21098:	ble	21134 <ieof+0xd8>
   2109c:	mov	r4, #0
   210a0:	ldr	r1, [pc, #184]	; 21160 <ieof+0x104>
   210a4:	ldr	r1, [pc, r1]
   210a8:	cmp	r1, #0
   210ac:	mov	r0, #0
   210b0:	beq	210c0 <ieof+0x64>
   210b4:	ldr	r0, [pc, #168]	; 21164 <ieof+0x108>
   210b8:	ldr	r0, [pc, r0]
   210bc:	ldr	r0, [r1, r0, lsl #2]
   210c0:	bl	dd84 <yy_delete_buffer@plt>
   210c4:	ldr	r0, [r5]
   210c8:	ldr	r1, [pc, #152]	; 21168 <ieof+0x10c>
   210cc:	ldr	r1, [pc, r1]
   210d0:	ldr	r1, [r1, r0, lsl #2]
   210d4:	ldr	r2, [pc, #144]	; 2116c <ieof+0x110>
   210d8:	ldr	r2, [pc, r2]
   210dc:	str	r1, [r2]
   210e0:	ldr	r1, [pc, #136]	; 21170 <ieof+0x114>
   210e4:	ldr	r1, [pc, r1]
   210e8:	ldr	r1, [r1, r0, lsl #2]
   210ec:	ldr	r2, [pc, #128]	; 21174 <ieof+0x118>
   210f0:	ldr	r2, [pc, r2]
   210f4:	ldr	r3, [pc, #124]	; 21178 <ieof+0x11c>
   210f8:	ldr	r3, [pc, r3]
   210fc:	cmp	r0, #0
   21100:	addne	r3, r2, r0, lsl #9
   21104:	ldr	r2, [pc, #112]	; 2117c <ieof+0x120>
   21108:	ldr	r2, [pc, r2]
   2110c:	str	r3, [r2]
   21110:	str	r1, [r6]
   21114:	ldr	r1, [pc, #100]	; 21180 <ieof+0x124>
   21118:	ldr	r1, [pc, r1]
   2111c:	ldr	r0, [r1, r0, lsl #2]
   21120:	bl	cf80 <yy_switch_to_buffer@plt>
   21124:	mov	r0, r4
   21128:	pop	{r4, r5, r6, sl, fp, pc}
   2112c:	mvn	r0, #0
   21130:	str	r0, [r5]
   21134:	ldr	r0, [pc, #32]	; 2115c <ieof+0x100>
   21138:	ldr	r0, [pc, r0]
   2113c:	mov	r4, #1
   21140:	str	r4, [r0]
   21144:	mov	r0, #0
   21148:	str	r0, [r5]
   2114c:	mov	r0, r4
   21150:	pop	{r4, r5, r6, sl, fp, pc}
   21154:	.word	0x0003986c
   21158:	.word	0x00039980
   2115c:	.word	0x00039908
   21160:	.word	0x00044c40
   21164:	.word	0x00044c30
   21168:	.word	0x00039900
   2116c:	.word	0x00039968
   21170:	.word	0x00039824
   21174:	.word	0x000399b8
   21178:	.word	0x00039a78
   2117c:	.word	0x000397f0
   21180:	.word	0x00039818

00021184 <yy_get_previous_state>:
   21184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21188:	add	fp, sp, #28
   2118c:	sub	sp, sp, #4
   21190:	ldr	r0, [pc, #308]	; 212cc <yy_get_previous_state+0x148>
   21194:	ldr	r0, [pc, r0]
   21198:	ldr	r0, [r0]
   2119c:	ldr	r1, [pc, #300]	; 212d0 <yy_get_previous_state+0x14c>
   211a0:	ldr	r1, [pc, r1]
   211a4:	add	r1, r0, r1
   211a8:	ldr	r0, [pc, #292]	; 212d4 <yy_get_previous_state+0x150>
   211ac:	add	r0, pc, r0
   211b0:	ldrb	r0, [r0]
   211b4:	ldr	r2, [pc, #284]	; 212d8 <yy_get_previous_state+0x154>
   211b8:	ldr	r2, [pc, r2]
   211bc:	cmp	r1, r2
   211c0:	bcs	212c4 <yy_get_previous_state+0x140>
   211c4:	ldr	lr, [pc, #272]	; 212dc <yy_get_previous_state+0x158>
   211c8:	ldr	lr, [pc, lr]
   211cc:	ldr	sl, [pc, #268]	; 212e0 <yy_get_previous_state+0x15c>
   211d0:	add	sl, pc, sl
   211d4:	ldr	r3, [pc, #264]	; 212e4 <yy_get_previous_state+0x160>
   211d8:	add	r3, pc, r3
   211dc:	ldr	r2, [pc, #260]	; 212e8 <yy_get_previous_state+0x164>
   211e0:	add	r2, pc, r2
   211e4:	ldr	r8, [pc, #256]	; 212ec <yy_get_previous_state+0x168>
   211e8:	add	r8, pc, r8
   211ec:	ldr	r5, [pc, #252]	; 212f0 <yy_get_previous_state+0x16c>
   211f0:	add	r5, pc, r5
   211f4:	ldr	r6, [pc, #248]	; 212f4 <yy_get_previous_state+0x170>
   211f8:	add	r6, pc, r6
   211fc:	str	lr, [sp]
   21200:	b	21218 <yy_get_previous_state+0x94>
   21204:	add	r0, r8, r9, lsl #1
   21208:	ldrsh	r0, [r0]
   2120c:	add	r1, r1, #1
   21210:	cmp	r1, lr
   21214:	bcs	212c4 <yy_get_previous_state+0x140>
   21218:	ldrb	r7, [r1]
   2121c:	cmp	r7, #0
   21220:	beq	21234 <yy_get_previous_state+0xb0>
   21224:	ldr	r4, [pc, #204]	; 212f8 <yy_get_previous_state+0x174>
   21228:	add	r4, pc, r4
   2122c:	ldrb	r7, [r4, r7]
   21230:	b	21238 <yy_get_previous_state+0xb4>
   21234:	mov	r7, #1
   21238:	add	r4, sl, r0, lsl #1
   2123c:	ldrh	r4, [r4]
   21240:	cmp	r4, #0
   21244:	beq	21260 <yy_get_previous_state+0xdc>
   21248:	ldr	r4, [pc, #172]	; 212fc <yy_get_previous_state+0x178>
   2124c:	add	r4, pc, r4
   21250:	str	r1, [r4]
   21254:	ldr	r4, [pc, #164]	; 21300 <yy_get_previous_state+0x17c>
   21258:	add	r4, pc, r4
   2125c:	str	r0, [r4]
   21260:	add	r4, r3, r0, lsl #1
   21264:	ldrsh	r4, [r4]
   21268:	add	r9, r4, r7
   2126c:	add	r4, r2, r9, lsl #1
   21270:	ldrsh	r4, [r4]
   21274:	cmp	r0, r4
   21278:	beq	21204 <yy_get_previous_state+0x80>
   2127c:	mov	lr, r8
   21280:	mov	r8, r7
   21284:	add	r0, r5, r0, lsl #1
   21288:	ldrsh	r0, [r0]
   2128c:	cmp	r0, #47	; 0x2f
   21290:	ldrbge	r8, [r6, r7]
   21294:	add	r4, r3, r0, lsl #1
   21298:	ldrsh	r4, [r4]
   2129c:	uxtab	r9, r4, r8
   212a0:	add	r4, r2, r9, lsl #1
   212a4:	ldrh	r4, [r4]
   212a8:	uxtb	r7, r8
   212ac:	uxth	ip, r0
   212b0:	cmp	ip, r4
   212b4:	bne	21284 <yy_get_previous_state+0x100>
   212b8:	mov	r8, lr
   212bc:	ldr	lr, [sp]
   212c0:	b	21204 <yy_get_previous_state+0x80>
   212c4:	sub	sp, fp, #28
   212c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212cc:	.word	0x00039778
   212d0:	.word	0x00044b4c
   212d4:	.word	0x00044b34
   212d8:	.word	0x00044b3c
   212dc:	.word	0x00044b2c
   212e0:	.word	0x0002161c
   212e4:	.word	0x00021786
   212e8:	.word	0x0002166a
   212ec:	.word	0x00021870
   212f0:	.word	0x000217da
   212f4:	.word	0x0002183e
   212f8:	.word	0x000214c4
   212fc:	.word	0x00044ab4
   21300:	.word	0x00044aa4

00021304 <yy_try_NUL_trans>:
   21304:	push	{r4, sl, fp, lr}
   21308:	add	fp, sp, #8
   2130c:	ldr	r1, [pc, #172]	; 213c0 <yy_try_NUL_trans+0xbc>
   21310:	add	r1, pc, r1
   21314:	add	r1, r1, r0, lsl #1
   21318:	ldrh	r1, [r1]
   2131c:	cmp	r1, #0
   21320:	beq	21344 <yy_try_NUL_trans+0x40>
   21324:	ldr	r1, [pc, #152]	; 213c4 <yy_try_NUL_trans+0xc0>
   21328:	add	r1, pc, r1
   2132c:	str	r0, [r1]
   21330:	ldr	r1, [pc, #144]	; 213c8 <yy_try_NUL_trans+0xc4>
   21334:	ldr	r1, [pc, r1]
   21338:	ldr	r2, [pc, #140]	; 213cc <yy_try_NUL_trans+0xc8>
   2133c:	add	r2, pc, r2
   21340:	str	r1, [r2]
   21344:	ldr	ip, [pc, #132]	; 213d0 <yy_try_NUL_trans+0xcc>
   21348:	add	ip, pc, ip
   2134c:	add	r1, ip, r0, lsl #1
   21350:	ldrsh	r1, [r1]
   21354:	add	r3, r1, #1
   21358:	ldr	lr, [pc, #116]	; 213d4 <yy_try_NUL_trans+0xd0>
   2135c:	add	lr, pc, lr
   21360:	add	r1, lr, r3, lsl #1
   21364:	ldrsh	r1, [r1]
   21368:	cmp	r1, r0
   2136c:	beq	213a0 <yy_try_NUL_trans+0x9c>
   21370:	ldr	r1, [pc, #96]	; 213d8 <yy_try_NUL_trans+0xd4>
   21374:	add	r1, pc, r1
   21378:	add	r0, r1, r0, lsl #1
   2137c:	ldrh	r2, [r0]
   21380:	sxth	r0, r2
   21384:	add	r3, ip, r0, lsl #1
   21388:	ldrsh	r3, [r3]
   2138c:	add	r3, r3, #1
   21390:	add	r4, lr, r3, lsl #1
   21394:	ldrh	r4, [r4]
   21398:	cmp	r2, r4
   2139c:	bne	21378 <yy_try_NUL_trans+0x74>
   213a0:	ldr	r0, [pc, #52]	; 213dc <yy_try_NUL_trans+0xd8>
   213a4:	add	r0, pc, r0
   213a8:	add	r0, r0, r3, lsl #1
   213ac:	ldrh	r0, [r0]
   213b0:	subs	r1, r0, #46	; 0x2e
   213b4:	movne	r1, r0
   213b8:	sxth	r0, r1
   213bc:	pop	{r4, sl, fp, pc}
   213c0:	.word	0x000214dc
   213c4:	.word	0x000449d4
   213c8:	.word	0x000449c0
   213cc:	.word	0x000449c4
   213d0:	.word	0x00021616
   213d4:	.word	0x000214ee
   213d8:	.word	0x00021656
   213dc:	.word	0x000216b4

000213e0 <yy_get_next_buffer>:
   213e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   213e4:	add	fp, sp, #28
   213e8:	sub	sp, sp, #4
   213ec:	ldr	r0, [pc, #872]	; 2175c <yy_get_next_buffer+0x37c>
   213f0:	ldr	r0, [pc, r0]
   213f4:	ldr	r1, [pc, #868]	; 21760 <yy_get_next_buffer+0x380>
   213f8:	ldr	r1, [pc, r1]
   213fc:	ldr	r0, [r1, r0, lsl #2]
   21400:	ldr	r4, [r0, #4]
   21404:	ldr	r0, [pc, #856]	; 21764 <yy_get_next_buffer+0x384>
   21408:	ldr	r0, [pc, r0]
   2140c:	add	r0, r0, r4
   21410:	add	r0, r0, #1
   21414:	ldr	r8, [pc, #844]	; 21768 <yy_get_next_buffer+0x388>
   21418:	ldr	r8, [pc, r8]
   2141c:	ldr	r5, [r8]
   21420:	ldr	r1, [pc, #836]	; 2176c <yy_get_next_buffer+0x38c>
   21424:	ldr	r1, [pc, r1]
   21428:	cmp	r1, r0
   2142c:	bls	2143c <yy_get_next_buffer+0x5c>
   21430:	ldr	r0, [pc, #824]	; 21770 <yy_get_next_buffer+0x390>
   21434:	add	r0, pc, r0
   21438:	bl	d3d0 <conf_yy_fatal_error@plt>
   2143c:	ldr	r3, [r8]
   21440:	ldr	r2, [pc, #812]	; 21774 <yy_get_next_buffer+0x394>
   21444:	ldr	r2, [pc, r2]
   21448:	sub	r7, r2, r3
   2144c:	ldr	r0, [pc, #804]	; 21778 <yy_get_next_buffer+0x398>
   21450:	ldr	r0, [pc, r0]
   21454:	ldr	r1, [pc, #800]	; 2177c <yy_get_next_buffer+0x39c>
   21458:	ldr	r1, [pc, r1]
   2145c:	ldr	r6, [r1, r0, lsl #2]
   21460:	ldr	r6, [r6, #40]	; 0x28
   21464:	cmp	r6, #0
   21468:	beq	214b8 <yy_get_next_buffer+0xd8>
   2146c:	sub	sl, r7, #1
   21470:	cmp	sl, #1
   21474:	blt	21490 <yy_get_next_buffer+0xb0>
   21478:	mvn	r3, r3
   2147c:	add	r2, r2, r3
   21480:	ldrb	r3, [r5], #1
   21484:	strb	r3, [r4], #1
   21488:	subs	r2, r2, #1
   2148c:	bne	21480 <yy_get_next_buffer+0xa0>
   21490:	ldr	r0, [r1, r0, lsl #2]
   21494:	ldr	r1, [r0, #44]	; 0x2c
   21498:	cmp	r1, #2
   2149c:	ldr	r6, [pc, #736]	; 21784 <yy_get_next_buffer+0x3a4>
   214a0:	add	r6, pc, r6
   214a4:	bne	214d0 <yy_get_next_buffer+0xf0>
   214a8:	mov	r1, #0
   214ac:	str	r1, [r6]
   214b0:	str	r1, [r0, #16]
   214b4:	b	21634 <yy_get_next_buffer+0x254>
   214b8:	ldr	r0, [pc, #704]	; 21780 <yy_get_next_buffer+0x3a0>
   214bc:	ldr	r0, [pc, r0]
   214c0:	sub	r4, r7, r0
   214c4:	cmp	r4, #1
   214c8:	movwne	r4, #2
   214cc:	b	21750 <yy_get_next_buffer+0x370>
   214d0:	ldr	r0, [r0, #12]
   214d4:	sub	r1, r0, r7
   214d8:	cmp	r1, #0
   214dc:	bgt	215a4 <yy_get_next_buffer+0x1c4>
   214e0:	mov	r6, #0
   214e4:	ldr	r4, [pc, #668]	; 21788 <yy_get_next_buffer+0x3a8>
   214e8:	add	r4, pc, r4
   214ec:	ldr	r5, [pc, #664]	; 2178c <yy_get_next_buffer+0x3ac>
   214f0:	add	r5, pc, r5
   214f4:	b	21534 <yy_get_next_buffer+0x154>
   214f8:	str	r6, [r9, #4]
   214fc:	mov	r0, r4
   21500:	bl	d3d0 <conf_yy_fatal_error@plt>
   21504:	ldr	r0, [r9, #4]
   21508:	add	r0, r0, r8
   2150c:	str	r0, [r5]
   21510:	ldr	r0, [pc, #644]	; 2179c <yy_get_next_buffer+0x3bc>
   21514:	ldr	r0, [pc, r0]
   21518:	ldr	r1, [pc, #640]	; 217a0 <yy_get_next_buffer+0x3c0>
   2151c:	ldr	r1, [pc, r1]
   21520:	ldr	r0, [r1, r0, lsl #2]
   21524:	ldr	r0, [r0, #12]
   21528:	sub	r1, r0, r7
   2152c:	cmp	r1, #1
   21530:	bge	215a4 <yy_get_next_buffer+0x1c4>
   21534:	ldr	r0, [pc, #596]	; 21790 <yy_get_next_buffer+0x3b0>
   21538:	ldr	r0, [pc, r0]
   2153c:	ldr	r1, [pc, #592]	; 21794 <yy_get_next_buffer+0x3b4>
   21540:	ldr	r1, [pc, r1]
   21544:	ldr	r9, [r1, r0, lsl #2]
   21548:	ldr	r0, [r9, #4]
   2154c:	ldr	r1, [r9, #20]
   21550:	ldr	r2, [pc, #576]	; 21798 <yy_get_next_buffer+0x3b8>
   21554:	ldr	r2, [pc, r2]
   21558:	sub	r8, r2, r0
   2155c:	cmp	r1, #0
   21560:	beq	214f8 <yy_get_next_buffer+0x118>
   21564:	ldr	r0, [r9, #12]
   21568:	cmp	r0, #0
   2156c:	ble	21578 <yy_get_next_buffer+0x198>
   21570:	lsl	r1, r0, #1
   21574:	b	21584 <yy_get_next_buffer+0x1a4>
   21578:	asr	r1, r0, #31
   2157c:	add	r1, r0, r1, lsr #29
   21580:	add	r1, r0, r1, asr #3
   21584:	str	r1, [r9, #12]
   21588:	ldr	r0, [r9, #4]
   2158c:	add	r1, r1, #2
   21590:	bl	d670 <yyrealloc@plt>
   21594:	str	r0, [r9, #4]
   21598:	cmp	r0, #0
   2159c:	bne	21504 <yy_get_next_buffer+0x124>
   215a0:	b	214fc <yy_get_next_buffer+0x11c>
   215a4:	cmp	r1, #8192	; 0x2000
   215a8:	movge	r1, #8192	; 0x2000
   215ac:	ldr	r0, [pc, #496]	; 217a4 <yy_get_next_buffer+0x3c4>
   215b0:	ldr	r0, [pc, r0]
   215b4:	ldr	r2, [pc, #492]	; 217a8 <yy_get_next_buffer+0x3c8>
   215b8:	ldr	r2, [pc, r2]
   215bc:	ldr	r0, [r2, r0, lsl #2]
   215c0:	ldr	r0, [r0, #4]
   215c4:	add	r0, r0, sl
   215c8:	ldr	r2, [pc, #476]	; 217ac <yy_get_next_buffer+0x3cc>
   215cc:	ldr	r2, [pc, r2]
   215d0:	ldr	r2, [r2]
   215d4:	bl	d934 <conf_fgets@plt>
   215d8:	ldr	r6, [pc, #464]	; 217b0 <yy_get_next_buffer+0x3d0>
   215dc:	add	r6, pc, r6
   215e0:	str	r0, [r6]
   215e4:	cmp	r0, #0
   215e8:	bne	215f8 <yy_get_next_buffer+0x218>
   215ec:	ldr	r0, [pc, #448]	; 217b4 <yy_get_next_buffer+0x3d4>
   215f0:	add	r0, pc, r0
   215f4:	bl	d3d0 <conf_yy_fatal_error@plt>
   215f8:	ldr	r0, [pc, #440]	; 217b8 <yy_get_next_buffer+0x3d8>
   215fc:	ldr	r0, [pc, r0]
   21600:	ldr	r1, [pc, #436]	; 217bc <yy_get_next_buffer+0x3dc>
   21604:	ldr	r1, [pc, r1]
   21608:	ldr	r0, [r1, r0, lsl #2]
   2160c:	ldr	r1, [pc, #428]	; 217c0 <yy_get_next_buffer+0x3e0>
   21610:	ldr	r1, [pc, r1]
   21614:	str	r1, [r0, #16]
   21618:	mov	r4, #0
   2161c:	ldr	r0, [pc, #416]	; 217c4 <yy_get_next_buffer+0x3e4>
   21620:	ldr	r0, [pc, r0]
   21624:	cmp	r0, #0
   21628:	ldr	r8, [pc, #408]	; 217c8 <yy_get_next_buffer+0x3e8>
   2162c:	ldr	r8, [pc, r8]
   21630:	bne	21678 <yy_get_next_buffer+0x298>
   21634:	ldr	r0, [pc, #400]	; 217cc <yy_get_next_buffer+0x3ec>
   21638:	ldr	r0, [pc, r0]
   2163c:	cmp	sl, r0
   21640:	bne	2165c <yy_get_next_buffer+0x27c>
   21644:	ldr	r0, [pc, #388]	; 217d0 <yy_get_next_buffer+0x3f0>
   21648:	ldr	r0, [pc, r0]
   2164c:	ldr	r0, [r0]
   21650:	bl	d028 <yyrestart@plt>
   21654:	mov	r4, #1
   21658:	b	21678 <yy_get_next_buffer+0x298>
   2165c:	ldr	r0, [pc, #368]	; 217d4 <yy_get_next_buffer+0x3f4>
   21660:	ldr	r0, [pc, r0]
   21664:	ldr	r1, [pc, #364]	; 217d8 <yy_get_next_buffer+0x3f8>
   21668:	ldr	r1, [pc, r1]
   2166c:	ldr	r0, [r1, r0, lsl #2]
   21670:	mov	r4, #2
   21674:	str	r4, [r0, #44]	; 0x2c
   21678:	ldr	r0, [pc, #348]	; 217dc <yy_get_next_buffer+0x3fc>
   2167c:	ldr	r0, [pc, r0]
   21680:	add	r1, r0, sl
   21684:	ldr	r2, [pc, #340]	; 217e0 <yy_get_next_buffer+0x400>
   21688:	ldr	r2, [pc, r2]
   2168c:	ldr	r3, [pc, #336]	; 217e4 <yy_get_next_buffer+0x404>
   21690:	ldr	r3, [pc, r3]
   21694:	ldr	r2, [r3, r2, lsl #2]
   21698:	ldr	r3, [r2, #12]
   2169c:	cmp	r1, r3
   216a0:	ble	21704 <yy_get_next_buffer+0x324>
   216a4:	add	r5, r1, r0, asr #1
   216a8:	ldr	r0, [r2, #4]
   216ac:	mov	r1, r5
   216b0:	bl	d670 <yyrealloc@plt>
   216b4:	ldr	r1, [pc, #300]	; 217e8 <yy_get_next_buffer+0x408>
   216b8:	ldr	r1, [pc, r1]
   216bc:	ldr	r2, [pc, #296]	; 217ec <yy_get_next_buffer+0x40c>
   216c0:	ldr	r2, [pc, r2]
   216c4:	ldr	r3, [r2, r1, lsl #2]
   216c8:	str	r0, [r3, #4]
   216cc:	ldr	r0, [r2, r1, lsl #2]
   216d0:	ldr	r0, [r0, #4]
   216d4:	cmp	r0, #0
   216d8:	bne	216e8 <yy_get_next_buffer+0x308>
   216dc:	ldr	r0, [pc, #268]	; 217f0 <yy_get_next_buffer+0x410>
   216e0:	add	r0, pc, r0
   216e4:	bl	d3d0 <conf_yy_fatal_error@plt>
   216e8:	ldr	r0, [pc, #260]	; 217f4 <yy_get_next_buffer+0x414>
   216ec:	ldr	r0, [pc, r0]
   216f0:	ldr	r1, [pc, #256]	; 217f8 <yy_get_next_buffer+0x418>
   216f4:	ldr	r1, [pc, r1]
   216f8:	ldr	r0, [r1, r0, lsl #2]
   216fc:	sub	r1, r5, #2
   21700:	str	r1, [r0, #12]
   21704:	ldr	r0, [pc, #240]	; 217fc <yy_get_next_buffer+0x41c>
   21708:	ldr	r0, [pc, r0]
   2170c:	add	r1, r0, sl
   21710:	str	r1, [r6]
   21714:	ldr	r2, [pc, #228]	; 21800 <yy_get_next_buffer+0x420>
   21718:	ldr	r2, [pc, r2]
   2171c:	ldr	r3, [pc, #224]	; 21804 <yy_get_next_buffer+0x424>
   21720:	ldr	r3, [pc, r3]
   21724:	ldr	r6, [r3, r2, lsl #2]
   21728:	ldr	r6, [r6, #4]
   2172c:	mov	r5, #0
   21730:	strb	r5, [r6, r1]
   21734:	add	r0, r0, r7
   21738:	ldr	r1, [r3, r2, lsl #2]
   2173c:	ldr	r1, [r1, #4]
   21740:	strb	r5, [r1, r0]
   21744:	ldr	r0, [r3, r2, lsl #2]
   21748:	ldr	r0, [r0, #4]
   2174c:	str	r0, [r8]
   21750:	mov	r0, r4
   21754:	sub	sp, fp, #28
   21758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2175c:	.word	0x000448f8
   21760:	.word	0x000448ec
   21764:	.word	0x000448fc
   21768:	.word	0x000394f4
   2176c:	.word	0x000448d0
   21770:	.word	0x0002189b
   21774:	.word	0x000448b0
   21778:	.word	0x00044898
   2177c:	.word	0x0004488c
   21780:	.word	0x00044830
   21784:	.word	0x00044864
   21788:	.word	0x0002181f
   2178c:	.word	0x00044804
   21790:	.word	0x000447b0
   21794:	.word	0x000447a4
   21798:	.word	0x000447a0
   2179c:	.word	0x000447d4
   217a0:	.word	0x000447c8
   217a4:	.word	0x00044738
   217a8:	.word	0x0004472c
   217ac:	.word	0x00039430
   217b0:	.word	0x00044728
   217b4:	.word	0x00021743
   217b8:	.word	0x000446ec
   217bc:	.word	0x000446e0
   217c0:	.word	0x000446f4
   217c4:	.word	0x000446e4
   217c8:	.word	0x000392e0
   217cc:	.word	0x000446b4
   217d0:	.word	0x00039280
   217d4:	.word	0x00044688
   217d8:	.word	0x0004467c
   217dc:	.word	0x00044688
   217e0:	.word	0x00044660
   217e4:	.word	0x00044654
   217e8:	.word	0x00044630
   217ec:	.word	0x00044624
   217f0:	.word	0x00021670
   217f4:	.word	0x000445fc
   217f8:	.word	0x000445f0
   217fc:	.word	0x000445fc
   21800:	.word	0x000445d0
   21804:	.word	0x000445c4

00021808 <yyrestart>:
   21808:	push	{r4, sl, fp, lr}
   2180c:	add	fp, sp, #8
   21810:	mov	r4, r0
   21814:	ldr	r0, [pc, #132]	; 218a0 <yyrestart+0x98>
   21818:	ldr	r0, [pc, r0]
   2181c:	cmp	r0, #0
   21820:	beq	21850 <yyrestart+0x48>
   21824:	ldr	r1, [pc, #120]	; 218a4 <yyrestart+0x9c>
   21828:	ldr	r1, [pc, r1]
   2182c:	ldr	r0, [r0, r1, lsl #2]
   21830:	cmp	r0, #0
   21834:	beq	21850 <yyrestart+0x48>
   21838:	ldr	r1, [pc, #116]	; 218b4 <yyrestart+0xac>
   2183c:	ldr	r1, [pc, r1]
   21840:	cmp	r1, #0
   21844:	bne	21884 <yyrestart+0x7c>
   21848:	mov	r0, #0
   2184c:	b	21890 <yyrestart+0x88>
   21850:	bl	20b44 <yyensure_buffer_stack>
   21854:	ldr	r0, [pc, #76]	; 218a8 <yyrestart+0xa0>
   21858:	ldr	r0, [pc, r0]
   2185c:	ldr	r0, [r0]
   21860:	mov	r1, #16384	; 0x4000
   21864:	bl	d6d0 <yy_create_buffer@plt>
   21868:	ldr	r1, [pc, #60]	; 218ac <yyrestart+0xa4>
   2186c:	ldr	r1, [pc, r1]
   21870:	ldr	r2, [pc, #56]	; 218b0 <yyrestart+0xa8>
   21874:	ldr	r2, [pc, r2]
   21878:	str	r0, [r1, r2, lsl #2]
   2187c:	cmp	r1, #0
   21880:	beq	21848 <yyrestart+0x40>
   21884:	ldr	r0, [pc, #44]	; 218b8 <yyrestart+0xb0>
   21888:	ldr	r0, [pc, r0]
   2188c:	ldr	r0, [r1, r0, lsl #2]
   21890:	mov	r1, r4
   21894:	bl	218bc <yy_init_buffer>
   21898:	pop	{r4, sl, fp, lr}
   2189c:	b	20cd8 <yy_load_buffer_state>
   218a0:	.word	0x000444cc
   218a4:	.word	0x000444c0
   218a8:	.word	0x00039070
   218ac:	.word	0x00044478
   218b0:	.word	0x00044474
   218b4:	.word	0x000444a8
   218b8:	.word	0x00044460

000218bc <yy_init_buffer>:
   218bc:	push	{r4, r5, r6, r7, fp, lr}
   218c0:	add	fp, sp, #16
   218c4:	mov	r6, r1
   218c8:	mov	r4, r0
   218cc:	bl	de38 <__errno_location@plt>
   218d0:	mov	r5, r0
   218d4:	ldr	r7, [r0]
   218d8:	mov	r0, r4
   218dc:	bl	e2f4 <yy_flush_buffer@plt>
   218e0:	mov	r0, #1
   218e4:	str	r0, [r4, #40]	; 0x28
   218e8:	str	r6, [r4]
   218ec:	ldr	r0, [pc, #100]	; 21958 <yy_init_buffer+0x9c>
   218f0:	ldr	r0, [pc, r0]
   218f4:	cmp	r0, #0
   218f8:	beq	2190c <yy_init_buffer+0x50>
   218fc:	ldr	r1, [pc, #88]	; 2195c <yy_init_buffer+0xa0>
   21900:	ldr	r1, [pc, r1]
   21904:	ldr	r0, [r0, r1, lsl #2]
   21908:	b	21910 <yy_init_buffer+0x54>
   2190c:	mov	r0, #0
   21910:	cmp	r0, r4
   21914:	movne	r0, #0
   21918:	movne	r1, #1
   2191c:	strne	r1, [r4, #32]
   21920:	strne	r0, [r4, #36]	; 0x24
   21924:	cmp	r6, #0
   21928:	beq	21948 <yy_init_buffer+0x8c>
   2192c:	mov	r0, r6
   21930:	bl	e03c <fileno@plt>
   21934:	bl	e66c <isatty@plt>
   21938:	mov	r1, #0
   2193c:	cmp	r0, #0
   21940:	movwgt	r1, #1
   21944:	b	2194c <yy_init_buffer+0x90>
   21948:	mov	r1, #0
   2194c:	str	r1, [r4, #24]
   21950:	str	r7, [r5]
   21954:	pop	{r4, r5, r6, r7, fp, pc}
   21958:	.word	0x000443f4
   2195c:	.word	0x000443e8

00021960 <yy_switch_to_buffer>:
   21960:	push	{r4, sl, fp, lr}
   21964:	add	fp, sp, #8
   21968:	mov	r4, r0
   2196c:	bl	20b44 <yyensure_buffer_stack>
   21970:	ldr	r0, [pc, #132]	; 219fc <yy_switch_to_buffer+0x9c>
   21974:	ldr	r0, [pc, r0]
   21978:	cmp	r0, #0
   2197c:	beq	21990 <yy_switch_to_buffer+0x30>
   21980:	ldr	r1, [pc, #120]	; 21a00 <yy_switch_to_buffer+0xa0>
   21984:	ldr	r1, [pc, r1]
   21988:	ldr	r1, [r0, r1, lsl #2]
   2198c:	b	21994 <yy_switch_to_buffer+0x34>
   21990:	mov	r1, #0
   21994:	cmp	r1, r4
   21998:	popeq	{r4, sl, fp, pc}
   2199c:	cmp	r0, #0
   219a0:	beq	219e8 <yy_switch_to_buffer+0x88>
   219a4:	ldr	r1, [pc, #88]	; 21a04 <yy_switch_to_buffer+0xa4>
   219a8:	ldr	r1, [pc, r1]
   219ac:	ldr	r2, [r0, r1, lsl #2]
   219b0:	cmp	r2, #0
   219b4:	beq	219e8 <yy_switch_to_buffer+0x88>
   219b8:	ldr	r2, [pc, #72]	; 21a08 <yy_switch_to_buffer+0xa8>
   219bc:	add	r2, pc, r2
   219c0:	ldrb	r2, [r2]
   219c4:	ldr	r3, [pc, #64]	; 21a0c <yy_switch_to_buffer+0xac>
   219c8:	ldr	r3, [pc, r3]
   219cc:	strb	r2, [r3]
   219d0:	ldr	r2, [r0, r1, lsl #2]
   219d4:	str	r3, [r2, #8]
   219d8:	ldr	r1, [r0, r1, lsl #2]
   219dc:	ldr	r2, [pc, #44]	; 21a10 <yy_switch_to_buffer+0xb0>
   219e0:	ldr	r2, [pc, r2]
   219e4:	str	r2, [r1, #16]
   219e8:	ldr	r1, [pc, #36]	; 21a14 <yy_switch_to_buffer+0xb4>
   219ec:	ldr	r1, [pc, r1]
   219f0:	str	r4, [r0, r1, lsl #2]
   219f4:	pop	{r4, sl, fp, lr}
   219f8:	b	20cd8 <yy_load_buffer_state>
   219fc:	.word	0x00044370
   21a00:	.word	0x00044364
   21a04:	.word	0x00044340
   21a08:	.word	0x0004433c
   21a0c:	.word	0x0004432c
   21a10:	.word	0x00044324
   21a14:	.word	0x000442fc

00021a18 <yyalloc>:
   21a18:	b	da84 <malloc@plt>

00021a1c <yy_delete_buffer>:
   21a1c:	cmp	r0, #0
   21a20:	bxeq	lr
   21a24:	push	{r4, sl, fp, lr}
   21a28:	add	fp, sp, #8
   21a2c:	mov	r4, r0
   21a30:	ldr	r0, [pc, #92]	; 21a94 <yy_delete_buffer+0x78>
   21a34:	ldr	r0, [pc, r0]
   21a38:	cmp	r0, #0
   21a3c:	beq	21a84 <yy_delete_buffer+0x68>
   21a40:	ldr	r1, [pc, #80]	; 21a98 <yy_delete_buffer+0x7c>
   21a44:	ldr	r1, [pc, r1]
   21a48:	ldr	r1, [r0, r1, lsl #2]
   21a4c:	cmp	r1, r4
   21a50:	bne	21a64 <yy_delete_buffer+0x48>
   21a54:	ldr	r1, [pc, #64]	; 21a9c <yy_delete_buffer+0x80>
   21a58:	ldr	r1, [pc, r1]
   21a5c:	mov	r2, #0
   21a60:	str	r2, [r0, r1, lsl #2]
   21a64:	ldr	r0, [r4, #20]
   21a68:	cmp	r0, #0
   21a6c:	beq	21a78 <yy_delete_buffer+0x5c>
   21a70:	ldr	r0, [r4, #4]
   21a74:	bl	d928 <yyfree@plt>
   21a78:	mov	r0, r4
   21a7c:	pop	{r4, sl, fp, lr}
   21a80:	b	21aa0 <yyfree>
   21a84:	mov	r1, #0
   21a88:	cmp	r1, r4
   21a8c:	bne	21a64 <yy_delete_buffer+0x48>
   21a90:	b	21a54 <yy_delete_buffer+0x38>
   21a94:	.word	0x000442b0
   21a98:	.word	0x000442a4
   21a9c:	.word	0x00044290

00021aa0 <yyfree>:
   21aa0:	b	d328 <free@plt>

00021aa4 <yy_flush_buffer>:
   21aa4:	cmp	r0, #0
   21aa8:	bxeq	lr
   21aac:	mov	r1, #0
   21ab0:	str	r1, [r0, #16]
   21ab4:	ldr	r2, [r0, #4]
   21ab8:	strb	r1, [r2]
   21abc:	ldr	r2, [r0, #4]
   21ac0:	strb	r1, [r2, #1]
   21ac4:	str	r1, [r0, #44]	; 0x2c
   21ac8:	mov	r2, #1
   21acc:	str	r2, [r0, #28]
   21ad0:	ldr	r2, [r0, #4]
   21ad4:	str	r2, [r0, #8]
   21ad8:	ldr	r2, [pc, #36]	; 21b04 <yy_flush_buffer+0x60>
   21adc:	ldr	r2, [pc, r2]
   21ae0:	cmp	r2, #0
   21ae4:	beq	21af4 <yy_flush_buffer+0x50>
   21ae8:	ldr	r1, [pc, #24]	; 21b08 <yy_flush_buffer+0x64>
   21aec:	ldr	r1, [pc, r1]
   21af0:	ldr	r1, [r2, r1, lsl #2]
   21af4:	cmp	r1, r0
   21af8:	beq	21b00 <yy_flush_buffer+0x5c>
   21afc:	bx	lr
   21b00:	b	20cd8 <yy_load_buffer_state>
   21b04:	.word	0x00044208
   21b08:	.word	0x000441fc

00021b0c <yypush_buffer_state>:
   21b0c:	cmp	r0, #0
   21b10:	bxeq	lr
   21b14:	push	{r4, sl, fp, lr}
   21b18:	add	fp, sp, #8
   21b1c:	mov	r4, r0
   21b20:	bl	20b44 <yyensure_buffer_stack>
   21b24:	ldr	r0, [pc, #132]	; 21bb0 <yypush_buffer_state+0xa4>
   21b28:	ldr	r0, [pc, r0]
   21b2c:	cmp	r0, #0
   21b30:	beq	21b9c <yypush_buffer_state+0x90>
   21b34:	ldr	r1, [pc, #120]	; 21bb4 <yypush_buffer_state+0xa8>
   21b38:	ldr	r1, [pc, r1]
   21b3c:	ldr	r2, [r0, r1, lsl #2]
   21b40:	cmp	r2, #0
   21b44:	beq	21b78 <yypush_buffer_state+0x6c>
   21b48:	ldr	r2, [pc, #104]	; 21bb8 <yypush_buffer_state+0xac>
   21b4c:	add	r2, pc, r2
   21b50:	ldrb	r2, [r2]
   21b54:	ldr	r3, [pc, #96]	; 21bbc <yypush_buffer_state+0xb0>
   21b58:	ldr	r3, [pc, r3]
   21b5c:	strb	r2, [r3]
   21b60:	ldr	r2, [r0, r1, lsl #2]
   21b64:	str	r3, [r2, #8]
   21b68:	ldr	r1, [r0, r1, lsl #2]
   21b6c:	ldr	r2, [pc, #76]	; 21bc0 <yypush_buffer_state+0xb4>
   21b70:	ldr	r2, [pc, r2]
   21b74:	str	r2, [r1, #16]
   21b78:	ldr	r1, [pc, #68]	; 21bc4 <yypush_buffer_state+0xb8>
   21b7c:	ldr	r1, [pc, r1]
   21b80:	ldr	r2, [r0, r1, lsl #2]
   21b84:	cmp	r2, #0
   21b88:	beq	21b9c <yypush_buffer_state+0x90>
   21b8c:	add	r1, r1, #1
   21b90:	ldr	r2, [pc, #48]	; 21bc8 <yypush_buffer_state+0xbc>
   21b94:	add	r2, pc, r2
   21b98:	str	r1, [r2]
   21b9c:	ldr	r1, [pc, #40]	; 21bcc <yypush_buffer_state+0xc0>
   21ba0:	ldr	r1, [pc, r1]
   21ba4:	str	r4, [r0, r1, lsl #2]
   21ba8:	pop	{r4, sl, fp, lr}
   21bac:	b	20cd8 <yy_load_buffer_state>
   21bb0:	.word	0x000441bc
   21bb4:	.word	0x000441b0
   21bb8:	.word	0x000441ac
   21bbc:	.word	0x0004419c
   21bc0:	.word	0x00044194
   21bc4:	.word	0x0004416c
   21bc8:	.word	0x00044154
   21bcc:	.word	0x00044148

00021bd0 <yypop_buffer_state>:
   21bd0:	push	{fp, lr}
   21bd4:	mov	fp, sp
   21bd8:	ldr	r0, [pc, #120]	; 21c58 <yypop_buffer_state+0x88>
   21bdc:	ldr	r0, [pc, r0]
   21be0:	cmp	r0, #0
   21be4:	beq	21c54 <yypop_buffer_state+0x84>
   21be8:	ldr	r1, [pc, #108]	; 21c5c <yypop_buffer_state+0x8c>
   21bec:	ldr	r1, [pc, r1]
   21bf0:	ldr	r0, [r0, r1, lsl #2]
   21bf4:	cmp	r0, #0
   21bf8:	beq	21c54 <yypop_buffer_state+0x84>
   21bfc:	bl	dd84 <yy_delete_buffer@plt>
   21c00:	ldr	r1, [pc, #88]	; 21c60 <yypop_buffer_state+0x90>
   21c04:	ldr	r1, [pc, r1]
   21c08:	ldr	r0, [pc, #84]	; 21c64 <yypop_buffer_state+0x94>
   21c0c:	ldr	r0, [pc, r0]
   21c10:	mov	r2, #0
   21c14:	str	r2, [r0, r1, lsl #2]
   21c18:	cmp	r1, #0
   21c1c:	beq	21c30 <yypop_buffer_state+0x60>
   21c20:	sub	r1, r1, #1
   21c24:	ldr	r2, [pc, #60]	; 21c68 <yypop_buffer_state+0x98>
   21c28:	add	r2, pc, r2
   21c2c:	str	r1, [r2]
   21c30:	cmp	r0, #0
   21c34:	popeq	{fp, pc}
   21c38:	ldr	r1, [pc, #44]	; 21c6c <yypop_buffer_state+0x9c>
   21c3c:	ldr	r1, [pc, r1]
   21c40:	ldr	r0, [r0, r1, lsl #2]
   21c44:	cmp	r0, #0
   21c48:	beq	21c54 <yypop_buffer_state+0x84>
   21c4c:	pop	{fp, lr}
   21c50:	b	20cd8 <yy_load_buffer_state>
   21c54:	pop	{fp, pc}
   21c58:	.word	0x00044108
   21c5c:	.word	0x000440fc
   21c60:	.word	0x000440e4
   21c64:	.word	0x000440d8
   21c68:	.word	0x000440c0
   21c6c:	.word	0x000440ac

00021c70 <yy_scan_buffer>:
   21c70:	push	{r4, r5, r6, sl, fp, lr}
   21c74:	add	fp, sp, #16
   21c78:	mov	r4, #0
   21c7c:	cmp	r1, #2
   21c80:	bcc	21ca8 <yy_scan_buffer+0x38>
   21c84:	mov	r5, r0
   21c88:	sub	r6, r1, #2
   21c8c:	ldrb	r0, [r0, r6]
   21c90:	cmp	r0, #0
   21c94:	bne	21ca8 <yy_scan_buffer+0x38>
   21c98:	add	r0, r1, r5
   21c9c:	ldrb	r0, [r0, #-1]
   21ca0:	cmp	r0, #0
   21ca4:	beq	21cb0 <yy_scan_buffer+0x40>
   21ca8:	mov	r0, r4
   21cac:	pop	{r4, r5, r6, sl, fp, pc}
   21cb0:	mov	r0, #48	; 0x30
   21cb4:	bl	d8ec <yyalloc@plt>
   21cb8:	mov	r4, r0
   21cbc:	cmp	r0, #0
   21cc0:	bne	21cd0 <yy_scan_buffer+0x60>
   21cc4:	ldr	r0, [pc, #64]	; 21d0c <yy_scan_buffer+0x9c>
   21cc8:	add	r0, pc, r0
   21ccc:	bl	d3d0 <conf_yy_fatal_error@plt>
   21cd0:	mov	r0, #0
   21cd4:	str	r0, [r4, #40]	; 0x28
   21cd8:	str	r0, [r4, #44]	; 0x2c
   21cdc:	mov	r1, #1
   21ce0:	stm	r4, {r0, r5}
   21ce4:	str	r5, [r4, #8]
   21ce8:	str	r6, [r4, #12]
   21cec:	str	r6, [r4, #16]
   21cf0:	str	r0, [r4, #20]
   21cf4:	str	r0, [r4, #24]
   21cf8:	str	r1, [r4, #28]
   21cfc:	mov	r0, r4
   21d00:	bl	cf80 <yy_switch_to_buffer@plt>
   21d04:	mov	r0, r4
   21d08:	pop	{r4, r5, r6, sl, fp, pc}
   21d0c:	.word	0x00020f21

00021d10 <yy_scan_string>:
   21d10:	push	{r4, sl, fp, lr}
   21d14:	add	fp, sp, #8
   21d18:	mov	r4, r0
   21d1c:	bl	dc94 <strlen@plt>
   21d20:	mov	r1, r0
   21d24:	mov	r0, r4
   21d28:	pop	{r4, sl, fp, lr}
   21d2c:	b	21d30 <yy_scan_bytes>

00021d30 <yy_scan_bytes>:
   21d30:	push	{r4, r5, r6, r7, fp, lr}
   21d34:	add	fp, sp, #16
   21d38:	mov	r5, r1
   21d3c:	mov	r7, r0
   21d40:	add	r4, r1, #2
   21d44:	mov	r0, r4
   21d48:	bl	d8ec <yyalloc@plt>
   21d4c:	mov	r6, r0
   21d50:	cmp	r0, #0
   21d54:	beq	21db0 <yy_scan_bytes+0x80>
   21d58:	cmp	r5, #1
   21d5c:	blt	21d70 <yy_scan_bytes+0x40>
   21d60:	mov	r0, r6
   21d64:	mov	r1, r7
   21d68:	mov	r2, r5
   21d6c:	bl	d40c <memcpy@plt>
   21d70:	add	r0, r6, r5
   21d74:	mov	r1, #0
   21d78:	strh	r1, [r0]
   21d7c:	mov	r0, r6
   21d80:	mov	r1, r4
   21d84:	bl	d964 <yy_scan_buffer@plt>
   21d88:	mov	r4, r0
   21d8c:	cmp	r0, #0
   21d90:	bne	21da0 <yy_scan_bytes+0x70>
   21d94:	ldr	r0, [pc, #48]	; 21dcc <yy_scan_bytes+0x9c>
   21d98:	add	r0, pc, r0
   21d9c:	bl	d3d0 <conf_yy_fatal_error@plt>
   21da0:	mov	r0, #1
   21da4:	str	r0, [r4, #20]
   21da8:	mov	r0, r4
   21dac:	pop	{r4, r5, r6, r7, fp, pc}
   21db0:	ldr	r0, [pc, #16]	; 21dc8 <yy_scan_bytes+0x98>
   21db4:	add	r0, pc, r0
   21db8:	bl	d3d0 <conf_yy_fatal_error@plt>
   21dbc:	cmp	r5, #1
   21dc0:	bge	21d60 <yy_scan_bytes+0x30>
   21dc4:	b	21d70 <yy_scan_bytes+0x40>
   21dc8:	.word	0x00020e5f
   21dcc:	.word	0x00020ea4

00021dd0 <yyget_lineno>:
   21dd0:	ldr	r0, [pc, #8]	; 21de0 <yyget_lineno+0x10>
   21dd4:	ldr	r0, [pc, r0]
   21dd8:	ldr	r0, [r0]
   21ddc:	bx	lr
   21de0:	.word	0x00038b70

00021de4 <yyget_in>:
   21de4:	ldr	r0, [pc, #8]	; 21df4 <yyget_in+0x10>
   21de8:	ldr	r0, [pc, r0]
   21dec:	ldr	r0, [r0]
   21df0:	bx	lr
   21df4:	.word	0x00038ae0

00021df8 <yyget_out>:
   21df8:	ldr	r0, [pc, #8]	; 21e08 <yyget_out+0x10>
   21dfc:	ldr	r0, [pc, r0]
   21e00:	ldr	r0, [r0]
   21e04:	bx	lr
   21e08:	.word	0x00038b9c

00021e0c <yyget_leng>:
   21e0c:	ldr	r0, [pc, #8]	; 21e1c <yyget_leng+0x10>
   21e10:	ldr	r0, [pc, r0]
   21e14:	ldr	r0, [r0]
   21e18:	bx	lr
   21e1c:	.word	0x00038c50

00021e20 <yyget_text>:
   21e20:	ldr	r0, [pc, #8]	; 21e30 <yyget_text+0x10>
   21e24:	ldr	r0, [pc, r0]
   21e28:	ldr	r0, [r0]
   21e2c:	bx	lr
   21e30:	.word	0x00038ae8

00021e34 <yyset_lineno>:
   21e34:	ldr	r1, [pc, #8]	; 21e44 <yyset_lineno+0x10>
   21e38:	ldr	r1, [pc, r1]
   21e3c:	str	r0, [r1]
   21e40:	bx	lr
   21e44:	.word	0x00038b0c

00021e48 <yyset_in>:
   21e48:	ldr	r1, [pc, #8]	; 21e58 <yyset_in+0x10>
   21e4c:	ldr	r1, [pc, r1]
   21e50:	str	r0, [r1]
   21e54:	bx	lr
   21e58:	.word	0x00038a7c

00021e5c <yyset_out>:
   21e5c:	ldr	r1, [pc, #8]	; 21e6c <yyset_out+0x10>
   21e60:	ldr	r1, [pc, r1]
   21e64:	str	r0, [r1]
   21e68:	bx	lr
   21e6c:	.word	0x00038b38

00021e70 <yyget_debug>:
   21e70:	ldr	r0, [pc, #8]	; 21e80 <yyget_debug+0x10>
   21e74:	ldr	r0, [pc, r0]
   21e78:	ldr	r0, [r0]
   21e7c:	bx	lr
   21e80:	.word	0x00038ad8

00021e84 <yyset_debug>:
   21e84:	ldr	r1, [pc, #8]	; 21e94 <yyset_debug+0x10>
   21e88:	ldr	r1, [pc, r1]
   21e8c:	str	r0, [r1]
   21e90:	bx	lr
   21e94:	.word	0x00038ac4

00021e98 <yylex_destroy>:
   21e98:	push	{r4, r5, fp, lr}
   21e9c:	add	fp, sp, #8
   21ea0:	mov	r5, #0
   21ea4:	ldr	r0, [pc, #132]	; 21f30 <yylex_destroy+0x98>
   21ea8:	ldr	r0, [pc, r0]
   21eac:	cmp	r0, #0
   21eb0:	mov	r4, #0
   21eb4:	beq	21f10 <yylex_destroy+0x78>
   21eb8:	mov	r4, #0
   21ebc:	ldr	r1, [pc, #112]	; 21f34 <yylex_destroy+0x9c>
   21ec0:	ldr	r1, [pc, r1]
   21ec4:	ldr	r1, [r0, r1, lsl #2]
   21ec8:	cmp	r1, #0
   21ecc:	beq	21f0c <yylex_destroy+0x74>
   21ed0:	ldr	r1, [pc, #96]	; 21f38 <yylex_destroy+0xa0>
   21ed4:	ldr	r1, [pc, r1]
   21ed8:	ldr	r0, [r0, r1, lsl #2]
   21edc:	bl	dd84 <yy_delete_buffer@plt>
   21ee0:	ldr	r0, [pc, #84]	; 21f3c <yylex_destroy+0xa4>
   21ee4:	ldr	r0, [pc, r0]
   21ee8:	ldr	r1, [pc, #80]	; 21f40 <yylex_destroy+0xa8>
   21eec:	ldr	r1, [pc, r1]
   21ef0:	str	r4, [r1, r0, lsl #2]
   21ef4:	bl	df4c <yypop_buffer_state@plt>
   21ef8:	ldr	r0, [pc, #68]	; 21f44 <yylex_destroy+0xac>
   21efc:	ldr	r0, [pc, r0]
   21f00:	cmp	r0, #0
   21f04:	bne	21ebc <yylex_destroy+0x24>
   21f08:	b	21f10 <yylex_destroy+0x78>
   21f0c:	mov	r4, r0
   21f10:	mov	r0, r4
   21f14:	bl	d928 <yyfree@plt>
   21f18:	ldr	r0, [pc, #40]	; 21f48 <yylex_destroy+0xb0>
   21f1c:	add	r0, pc, r0
   21f20:	str	r5, [r0]
   21f24:	bl	21f4c <yy_init_globals>
   21f28:	mov	r0, #0
   21f2c:	pop	{r4, r5, fp, pc}
   21f30:	.word	0x00043e3c
   21f34:	.word	0x00043e28
   21f38:	.word	0x00043e14
   21f3c:	.word	0x00043e04
   21f40:	.word	0x00043df8
   21f44:	.word	0x00043de8
   21f48:	.word	0x00043dc8

00021f4c <yy_init_globals>:
   21f4c:	ldr	r0, [pc, #96]	; 21fb4 <yy_init_globals+0x68>
   21f50:	add	r0, pc, r0
   21f54:	mov	r1, #0
   21f58:	str	r1, [r0]
   21f5c:	ldr	r0, [pc, #84]	; 21fb8 <yy_init_globals+0x6c>
   21f60:	add	r0, pc, r0
   21f64:	str	r1, [r0]
   21f68:	ldr	r0, [pc, #76]	; 21fbc <yy_init_globals+0x70>
   21f6c:	add	r0, pc, r0
   21f70:	str	r1, [r0]
   21f74:	ldr	r0, [pc, #68]	; 21fc0 <yy_init_globals+0x74>
   21f78:	add	r0, pc, r0
   21f7c:	str	r1, [r0]
   21f80:	ldr	r0, [pc, #60]	; 21fc4 <yy_init_globals+0x78>
   21f84:	add	r0, pc, r0
   21f88:	strb	r1, [r0]
   21f8c:	ldr	r0, [pc, #52]	; 21fc8 <yy_init_globals+0x7c>
   21f90:	add	r0, pc, r0
   21f94:	strb	r1, [r0]
   21f98:	ldr	r0, [pc, #44]	; 21fcc <yy_init_globals+0x80>
   21f9c:	ldr	r0, [pc, r0]
   21fa0:	str	r1, [r0]
   21fa4:	ldr	r0, [pc, #36]	; 21fd0 <yy_init_globals+0x84>
   21fa8:	ldr	r0, [pc, r0]
   21fac:	str	r1, [r0]
   21fb0:	bx	lr
   21fb4:	.word	0x00043d98
   21fb8:	.word	0x00043d84
   21fbc:	.word	0x00043d9c
   21fc0:	.word	0x00043d7c
   21fc4:	.word	0x00043d58
   21fc8:	.word	0x00043d50
   21fcc:	.word	0x0003892c
   21fd0:	.word	0x000389f0

00021fd4 <yyrealloc>:
   21fd4:	b	d6c4 <realloc@plt>

00021fd8 <input>:
   21fd8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21fdc:	add	fp, sp, #24
   21fe0:	ldr	r5, [pc, #220]	; 220c4 <input+0xec>
   21fe4:	add	r5, pc, r5
   21fe8:	ldrb	r0, [r5]
   21fec:	ldr	r4, [pc, #212]	; 220c8 <input+0xf0>
   21ff0:	ldr	r4, [pc, r4]
   21ff4:	strb	r0, [r4]
   21ff8:	cmp	r0, #0
   21ffc:	ldr	r6, [pc, #200]	; 220cc <input+0xf4>
   22000:	add	r6, pc, r6
   22004:	bne	2209c <input+0xc4>
   22008:	ldr	r0, [pc, #192]	; 220d0 <input+0xf8>
   2200c:	ldr	r0, [pc, r0]
   22010:	ldr	r1, [pc, #188]	; 220d4 <input+0xfc>
   22014:	ldr	r1, [pc, r1]
   22018:	ldr	r0, [r1, r0, lsl #2]
   2201c:	ldr	r0, [r0, #4]
   22020:	ldr	r1, [pc, #176]	; 220d8 <input+0x100>
   22024:	ldr	r1, [pc, r1]
   22028:	add	r0, r0, r1
   2202c:	cmp	r4, r0
   22030:	bcs	22040 <input+0x68>
   22034:	mov	r0, #0
   22038:	strb	r0, [r4]
   2203c:	b	2209c <input+0xc4>
   22040:	add	r0, r4, #1
   22044:	str	r0, [r6]
   22048:	ldr	r8, [pc, #140]	; 220dc <input+0x104>
   2204c:	ldr	r8, [pc, r8]
   22050:	ldr	r7, [r8]
   22054:	bl	213e0 <yy_get_next_buffer>
   22058:	cmp	r0, #0
   2205c:	beq	2208c <input+0xb4>
   22060:	mov	r4, #0
   22064:	cmp	r0, #1
   22068:	beq	220bc <input+0xe4>
   2206c:	cmp	r0, #2
   22070:	bne	2209c <input+0xc4>
   22074:	ldr	r0, [pc, #100]	; 220e0 <input+0x108>
   22078:	ldr	r0, [pc, r0]
   2207c:	ldr	r0, [r0]
   22080:	bl	d028 <yyrestart@plt>
   22084:	mov	r0, r4
   22088:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2208c:	sub	r0, r4, r7
   22090:	ldr	r1, [r8]
   22094:	add	r0, r1, r0
   22098:	str	r0, [r6]
   2209c:	ldr	r0, [pc, #64]	; 220e4 <input+0x10c>
   220a0:	ldr	r0, [pc, r0]
   220a4:	ldrb	r4, [r0]
   220a8:	mov	r1, #0
   220ac:	strb	r1, [r0], #1
   220b0:	str	r0, [r6]
   220b4:	ldrb	r0, [r0]
   220b8:	strb	r0, [r5]
   220bc:	mov	r0, r4
   220c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   220c4:	.word	0x00043d14
   220c8:	.word	0x00043d04
   220cc:	.word	0x00043cf4
   220d0:	.word	0x00043cdc
   220d4:	.word	0x00043cd0
   220d8:	.word	0x00043ce0
   220dc:	.word	0x000388c0
   220e0:	.word	0x00038850
   220e4:	.word	0x00043c54

000220e8 <yy_fatal_error>:
   220e8:	push	{fp, lr}
   220ec:	mov	fp, sp
   220f0:	ldr	r0, [pc, #32]	; 22118 <yy_fatal_error+0x30>
   220f4:	ldr	r0, [pc, r0]
   220f8:	ldr	r0, [r0]
   220fc:	ldr	r1, [pc, #24]	; 2211c <yy_fatal_error+0x34>
   22100:	add	r1, pc, r1
   22104:	ldr	r2, [pc, #20]	; 22120 <yy_fatal_error+0x38>
   22108:	add	r2, pc, r2
   2210c:	bl	dd60 <fprintf@plt>
   22110:	mov	r0, #2
   22114:	bl	dc28 <exit@plt>
   22118:	.word	0x00038864
   2211c:	.word	0x0002191b
   22120:	.word	0x00020b52

00022124 <setup_signals>:
   22124:	push	{r4, r5, r6, sl, fp, lr}
   22128:	add	fp, sp, #16
   2212c:	sub	sp, sp, #272	; 0x110
   22130:	add	r4, sp, #144	; 0x90
   22134:	mov	r0, r4
   22138:	bl	e1ec <sigemptyset@plt>
   2213c:	mov	r0, #0
   22140:	str	r0, [sp, #136]	; 0x88
   22144:	mov	r0, #1
   22148:	str	r0, [sp, #4]
   2214c:	add	r5, sp, #4
   22150:	add	r6, r5, #4
   22154:	mov	r0, r6
   22158:	bl	e1ec <sigemptyset@plt>
   2215c:	mov	r0, r6
   22160:	mov	r1, #13
   22164:	bl	daa8 <sigaddset@plt>
   22168:	mov	r0, r6
   2216c:	mov	r1, #14
   22170:	bl	daa8 <sigaddset@plt>
   22174:	mov	r0, r6
   22178:	mov	r1, #5
   2217c:	bl	daa8 <sigaddset@plt>
   22180:	mov	r0, r6
   22184:	mov	r1, #28
   22188:	bl	daa8 <sigaddset@plt>
   2218c:	mov	r0, #28
   22190:	mov	r1, r5
   22194:	mov	r2, #0
   22198:	bl	d88c <sigaction@plt>
   2219c:	mov	r0, #13
   221a0:	mov	r1, r5
   221a4:	mov	r2, #0
   221a8:	bl	d88c <sigaction@plt>
   221ac:	mov	r0, #5
   221b0:	mov	r1, r5
   221b4:	mov	r2, #0
   221b8:	bl	d88c <sigaction@plt>
   221bc:	ldr	r0, [pc, #376]	; 2233c <setup_signals+0x218>
   221c0:	add	r0, pc, r0
   221c4:	str	r0, [sp, #4]
   221c8:	mov	r0, #14
   221cc:	mov	r1, r5
   221d0:	mov	r2, #0
   221d4:	bl	d88c <sigaction@plt>
   221d8:	mov	r0, r4
   221dc:	mov	r1, #14
   221e0:	bl	daa8 <sigaddset@plt>
   221e4:	ldr	r0, [pc, #340]	; 22340 <setup_signals+0x21c>
   221e8:	add	r0, pc, r0
   221ec:	str	r0, [sp, #4]
   221f0:	mov	r0, r6
   221f4:	bl	e1ec <sigemptyset@plt>
   221f8:	mov	r0, r6
   221fc:	mov	r1, #1
   22200:	bl	daa8 <sigaddset@plt>
   22204:	mov	r0, #1
   22208:	mov	r1, r5
   2220c:	mov	r2, #0
   22210:	bl	d88c <sigaction@plt>
   22214:	mov	r0, r4
   22218:	mov	r1, #1
   2221c:	bl	daa8 <sigaddset@plt>
   22220:	ldr	r0, [pc, #284]	; 22344 <setup_signals+0x220>
   22224:	add	r0, pc, r0
   22228:	str	r0, [sp, #4]
   2222c:	mov	r0, r6
   22230:	mov	r1, #2
   22234:	bl	daa8 <sigaddset@plt>
   22238:	mov	r0, #2
   2223c:	mov	r1, r5
   22240:	mov	r2, #0
   22244:	bl	d88c <sigaction@plt>
   22248:	mov	r0, r4
   2224c:	mov	r1, #2
   22250:	bl	daa8 <sigaddset@plt>
   22254:	ldr	r0, [pc, #236]	; 22348 <setup_signals+0x224>
   22258:	add	r0, pc, r0
   2225c:	str	r0, [sp, #4]
   22260:	mov	r0, r6
   22264:	mov	r1, #15
   22268:	bl	daa8 <sigaddset@plt>
   2226c:	mov	r0, #15
   22270:	mov	r1, r5
   22274:	mov	r2, #0
   22278:	bl	d88c <sigaction@plt>
   2227c:	mov	r0, r4
   22280:	mov	r1, #15
   22284:	bl	daa8 <sigaddset@plt>
   22288:	ldr	r0, [pc, #188]	; 2234c <setup_signals+0x228>
   2228c:	add	r0, pc, r0
   22290:	str	r0, [sp, #4]
   22294:	mov	r0, r6
   22298:	mov	r1, #10
   2229c:	bl	daa8 <sigaddset@plt>
   222a0:	mov	r0, #10
   222a4:	mov	r1, r5
   222a8:	mov	r2, #0
   222ac:	bl	d88c <sigaction@plt>
   222b0:	mov	r0, r4
   222b4:	mov	r1, #10
   222b8:	bl	daa8 <sigaddset@plt>
   222bc:	ldr	r0, [pc, #140]	; 22350 <setup_signals+0x22c>
   222c0:	add	r0, pc, r0
   222c4:	str	r0, [sp, #4]
   222c8:	mov	r0, r6
   222cc:	mov	r1, #12
   222d0:	bl	daa8 <sigaddset@plt>
   222d4:	mov	r0, #12
   222d8:	mov	r1, r5
   222dc:	mov	r2, #0
   222e0:	bl	d88c <sigaction@plt>
   222e4:	mov	r0, r4
   222e8:	mov	r1, #12
   222ec:	bl	daa8 <sigaddset@plt>
   222f0:	ldr	r0, [pc, #92]	; 22354 <setup_signals+0x230>
   222f4:	add	r0, pc, r0
   222f8:	str	r0, [sp, #4]
   222fc:	mov	r0, r6
   22300:	mov	r1, #17
   22304:	bl	daa8 <sigaddset@plt>
   22308:	mov	r0, #17
   2230c:	mov	r1, r5
   22310:	mov	r2, #0
   22314:	bl	d88c <sigaction@plt>
   22318:	mov	r0, r4
   2231c:	mov	r1, #17
   22320:	bl	daa8 <sigaddset@plt>
   22324:	mov	r0, #1
   22328:	mov	r1, r4
   2232c:	mov	r2, #0
   22330:	bl	d2b0 <sigprocmask@plt>
   22334:	sub	sp, fp, #16
   22338:	pop	{r4, r5, r6, sl, fp, pc}
   2233c:	.word	0x00000190
   22340:	.word	0x0000016c
   22344:	.word	0x00000148
   22348:	.word	0x00000188
   2234c:	.word	0x0000016c
   22350:	.word	0x00000150
   22354:	.word	0x00000134

00022358 <dummy_handler>:
   22358:	bx	lr

0002235c <sighup_handler>:
   2235c:	ldr	r0, [pc, #12]	; 22370 <sighup_handler+0x14>
   22360:	ldr	r0, [pc, r0]
   22364:	mov	r1, #1
   22368:	str	r1, [r0]
   2236c:	bx	lr
   22370:	.word	0x00038808

00022374 <sigint_handler>:
   22374:	push	{fp, lr}
   22378:	mov	fp, sp
   2237c:	ldr	r0, [pc, #84]	; 223d8 <sigint_handler+0x64>
   22380:	ldr	r0, [pc, r0]
   22384:	ldrb	r0, [r0]
   22388:	cmp	r0, #0
   2238c:	bne	223c0 <sigint_handler+0x4c>
   22390:	ldr	r1, [pc, #68]	; 223dc <sigint_handler+0x68>
   22394:	add	r1, pc, r1
   22398:	mov	r0, #0
   2239c:	bl	e0b4 <ilog@plt>
   223a0:	ldr	r0, [pc, #56]	; 223e0 <sigint_handler+0x6c>
   223a4:	add	r0, pc, r0
   223a8:	ldrb	r1, [r0]
   223ac:	cmp	r1, #0
   223b0:	popne	{fp, pc}
   223b4:	mov	r1, #1
   223b8:	strb	r1, [r0]
   223bc:	bl	df58 <server_reboot@plt>
   223c0:	ldr	r1, [pc, #28]	; 223e4 <sigint_handler+0x70>
   223c4:	add	r1, pc, r1
   223c8:	mov	r0, #0
   223cc:	bl	e0b4 <ilog@plt>
   223d0:	mov	r0, #0
   223d4:	bl	dc28 <exit@plt>
   223d8:	.word	0x000385c8
   223dc:	.word	0x00020a34
   223e0:	.word	0x00043968
   223e4:	.word	0x000209eb

000223e8 <sigterm_handler>:
   223e8:	push	{fp, lr}
   223ec:	mov	fp, sp
   223f0:	ldr	r0, [pc, #4]	; 223fc <sigterm_handler+0x14>
   223f4:	add	r0, pc, r0
   223f8:	bl	dfac <ircd_shutdown@plt>
   223fc:	.word	0x000209f0

00022400 <sigusr1_handler>:
   22400:	ldr	r0, [pc, #12]	; 22414 <sigusr1_handler+0x14>
   22404:	ldr	r0, [pc, r0]
   22408:	mov	r1, #1
   2240c:	str	r1, [r0]
   22410:	bx	lr
   22414:	.word	0x000386ac

00022418 <sigusr2_handler>:
   22418:	ldr	r0, [pc, #12]	; 2242c <sigusr2_handler+0x14>
   2241c:	ldr	r0, [pc, r0]
   22420:	mov	r1, #1
   22424:	str	r1, [r0]
   22428:	bx	lr
   2242c:	.word	0x00038720

00022430 <sigchld_handler>:
   22430:	push	{r4, r5, r6, sl, fp, lr}
   22434:	add	fp, sp, #16
   22438:	sub	sp, sp, #8
   2243c:	bl	de38 <__errno_location@plt>
   22440:	mov	r4, r0
   22444:	ldr	r6, [r0]
   22448:	add	r5, sp, #4
   2244c:	mvn	r0, #0
   22450:	mov	r1, r5
   22454:	mov	r2, #1
   22458:	bl	d8e0 <waitpid@plt>
   2245c:	cmp	r0, #0
   22460:	bgt	2244c <sigchld_handler+0x1c>
   22464:	str	r6, [r4]
   22468:	sub	sp, fp, #16
   2246c:	pop	{r4, r5, r6, sl, fp, pc}

00022470 <free_listener>:
   22470:	cmp	r0, #0
   22474:	bxeq	lr
   22478:	ldr	r2, [pc, #64]	; 224c0 <free_listener+0x50>
   2247c:	ldr	r2, [pc, r2]
   22480:	cmp	r2, r0
   22484:	beq	224ac <free_listener+0x3c>
   22488:	cmp	r2, #0
   2248c:	beq	224a8 <free_listener+0x38>
   22490:	mov	r1, r2
   22494:	ldr	r2, [r2]
   22498:	cmp	r2, r0
   2249c:	bne	22488 <free_listener+0x18>
   224a0:	ldr	r2, [r0]
   224a4:	str	r2, [r1]
   224a8:	b	224c8 <rb_free>
   224ac:	ldr	r1, [r0]
   224b0:	ldr	r2, [pc, #12]	; 224c4 <free_listener+0x54>
   224b4:	add	r2, pc, r2
   224b8:	str	r1, [r2]
   224bc:	b	224c8 <rb_free>
   224c0:	.word	0x00043894
   224c4:	.word	0x0004385c

000224c8 <rb_free>:
   224c8:	cmp	r0, #0
   224cc:	bxeq	lr
   224d0:	b	d328 <free@plt>

000224d4 <get_listener_name>:
   224d4:	push	{r4, sl, fp, lr}
   224d8:	add	fp, sp, #8
   224dc:	sub	sp, sp, #8
   224e0:	ldr	r4, [r0, #4]
   224e4:	bl	22530 <get_listener_port>
   224e8:	str	r4, [sp]
   224ec:	str	r0, [sp, #4]
   224f0:	ldr	r0, [pc, #44]	; 22524 <get_listener_name+0x50>
   224f4:	ldr	r0, [pc, r0]
   224f8:	add	r3, r0, #88	; 0x58
   224fc:	ldr	r4, [pc, #36]	; 22528 <get_listener_name+0x54>
   22500:	add	r4, pc, r4
   22504:	ldr	r2, [pc, #32]	; 2252c <get_listener_name+0x58>
   22508:	add	r2, pc, r2
   2250c:	mov	r0, r4
   22510:	mov	r1, #512	; 0x200
   22514:	bl	de74 <snprintf@plt>
   22518:	mov	r0, r4
   2251c:	sub	sp, fp, #8
   22520:	pop	{r4, sl, fp, pc}
   22524:	.word	0x00038664
   22528:	.word	0x00043814
   2252c:	.word	0x000208ed

00022530 <get_listener_port>:
   22530:	ldrh	r0, [r0, #38]	; 0x26
   22534:	b	22828 <__bswap_16>

00022538 <show_ports>:
   22538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2253c:	add	fp, sp, #28
   22540:	sub	sp, sp, #28
   22544:	ldr	r5, [pc, #300]	; 22678 <show_ports+0x140>
   22548:	ldr	r5, [pc, r5]
   2254c:	cmp	r5, #0
   22550:	beq	22670 <show_ports+0x138>
   22554:	mov	r9, r0
   22558:	ldr	r0, [pc, #284]	; 2267c <show_ports+0x144>
   2255c:	ldr	r0, [pc, r0]
   22560:	add	r8, r0, #88	; 0x58
   22564:	ldr	sl, [pc, #276]	; 22680 <show_ports+0x148>
   22568:	add	sl, pc, sl
   2256c:	b	225f8 <show_ports+0xc0>
   22570:	ldr	r1, [r5, #4]
   22574:	ldrb	r0, [r5, #28]
   22578:	add	r6, r5, #12
   2257c:	ldm	r6, {r2, r3, r6}
   22580:	cmp	r6, #0
   22584:	ldr	r6, [pc, #256]	; 2268c <show_ports+0x154>
   22588:	add	r6, pc, r6
   2258c:	ldr	r4, [pc, #252]	; 22690 <show_ports+0x158>
   22590:	add	r4, pc, r4
   22594:	moveq	r6, r4
   22598:	cmp	r0, #0
   2259c:	ldr	r0, [pc, #240]	; 22694 <show_ports+0x15c>
   225a0:	add	r0, pc, r0
   225a4:	ldr	r4, [pc, #236]	; 22698 <show_ports+0x160>
   225a8:	add	r4, pc, r4
   225ac:	moveq	r0, r4
   225b0:	cmp	r3, #0
   225b4:	ldr	r3, [pc, #224]	; 2269c <show_ports+0x164>
   225b8:	add	r3, pc, r3
   225bc:	ldr	r4, [pc, #220]	; 226a0 <show_ports+0x168>
   225c0:	add	r4, pc, r4
   225c4:	moveq	r3, r4
   225c8:	str	r7, [sp]
   225cc:	stmib	sp, {r1, r2, r3}
   225d0:	str	r0, [sp, #16]
   225d4:	str	r6, [sp, #20]
   225d8:	mov	r0, r9
   225dc:	mov	r1, #220	; 0xdc
   225e0:	mov	r2, sl
   225e4:	mov	r3, #80	; 0x50
   225e8:	bl	dc7c <sendto_one_numeric@plt>
   225ec:	ldr	r5, [r5]
   225f0:	cmp	r5, #0
   225f4:	beq	22670 <show_ports+0x138>
   225f8:	mov	r0, r5
   225fc:	bl	22530 <get_listener_port>
   22600:	mov	r7, r0
   22604:	ldr	r0, [r9, #24]
   22608:	cmp	r0, #0
   2260c:	mov	r1, r8
   22610:	beq	22574 <show_ports+0x3c>
   22614:	ldr	r0, [r0, #36]	; 0x24
   22618:	cmp	r0, #0
   2261c:	beq	22634 <show_ports+0xfc>
   22620:	ldr	r1, [pc, #92]	; 22684 <show_ports+0x14c>
   22624:	add	r1, pc, r1
   22628:	bl	e594 <privilegeset_in_set@plt>
   2262c:	cmp	r0, #0
   22630:	bne	22570 <show_ports+0x38>
   22634:	ldr	r0, [r9, #24]
   22638:	cmp	r0, #0
   2263c:	mov	r1, r8
   22640:	beq	22574 <show_ports+0x3c>
   22644:	ldr	r0, [r0, #36]	; 0x24
   22648:	cmp	r0, #0
   2264c:	mov	r1, r8
   22650:	beq	22574 <show_ports+0x3c>
   22654:	ldr	r1, [pc, #44]	; 22688 <show_ports+0x150>
   22658:	add	r1, pc, r1
   2265c:	bl	e594 <privilegeset_in_set@plt>
   22660:	cmp	r0, #0
   22664:	mov	r1, r8
   22668:	ldrne	r1, [r5, #4]
   2266c:	b	22574 <show_ports+0x3c>
   22670:	sub	sp, fp, #28
   22674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22678:	.word	0x000437c8
   2267c:	.word	0x000385fc
   22680:	.word	0x00020897
   22684:	.word	0x0001ea0b
   22688:	.word	0x0001e9e2
   2268c:	.word	0x0002089d
   22690:	.word	0x000235c5
   22694:	.word	0x0002087a
   22698:	.word	0x00020878
   2269c:	.word	0x0002085b
   226a0:	.word	0x000226a5

000226a4 <add_tcp_listener>:
   226a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   226a8:	add	fp, sp, #24
   226ac:	sub	sp, sp, #256	; 0x100
   226b0:	cmp	r0, #0
   226b4:	beq	227a0 <add_tcp_listener+0xfc>
   226b8:	mov	r8, r3
   226bc:	mov	r6, r2
   226c0:	mov	r7, r1
   226c4:	mov	r5, r0
   226c8:	mov	r4, sp
   226cc:	mov	r0, r4
   226d0:	mov	r1, #0
   226d4:	mov	r2, #256	; 0x100
   226d8:	bl	df28 <memset@plt>
   226dc:	cmp	r7, #0
   226e0:	beq	2270c <add_tcp_listener+0x68>
   226e4:	cmp	r6, #2
   226e8:	bne	2272c <add_tcp_listener+0x88>
   226ec:	orr	r2, r4, #4
   226f0:	mov	r4, #2
   226f4:	mov	r0, #2
   226f8:	mov	r1, r7
   226fc:	bl	d814 <rb_inet_pton@plt>
   22700:	cmp	r0, #1
   22704:	bge	2276c <add_tcp_listener+0xc8>
   22708:	b	227a0 <add_tcp_listener+0xfc>
   2270c:	cmp	r6, #10
   22710:	beq	22754 <add_tcp_listener+0xb0>
   22714:	cmp	r6, #2
   22718:	bne	227a0 <add_tcp_listener+0xfc>
   2271c:	mov	r0, #0
   22720:	str	r0, [sp, #4]
   22724:	mov	r4, #2
   22728:	b	2276c <add_tcp_listener+0xc8>
   2272c:	add	r2, r4, #8
   22730:	mov	r0, r6
   22734:	mov	r1, r7
   22738:	bl	d814 <rb_inet_pton@plt>
   2273c:	cmp	r0, #1
   22740:	blt	227a0 <add_tcp_listener+0xfc>
   22744:	mov	r4, #10
   22748:	cmp	r6, #10
   2274c:	beq	2276c <add_tcp_listener+0xc8>
   22750:	b	2277c <add_tcp_listener+0xd8>
   22754:	ldr	r0, [pc, #192]	; 2281c <add_tcp_listener+0x178>
   22758:	ldr	r0, [pc, r0]
   2275c:	vld1.32	{d16-d17}, [r0]
   22760:	add	r0, r4, #8
   22764:	vst1.64	{d16-d17}, [r0]
   22768:	mov	r4, #10
   2276c:	strh	r4, [sp]
   22770:	uxth	r0, r5
   22774:	bl	22828 <__bswap_16>
   22778:	strh	r0, [sp, #2]
   2277c:	mov	r0, sp
   22780:	mov	r1, #0
   22784:	bl	22830 <find_listener>
   22788:	cmp	r0, #0
   2278c:	beq	227a8 <add_tcp_listener+0x104>
   22790:	mov	r5, r0
   22794:	ldr	r0, [r0, #8]
   22798:	cmp	r0, #0
   2279c:	beq	227cc <add_tcp_listener+0x128>
   227a0:	sub	sp, fp, #24
   227a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   227a8:	mov	r0, sp
   227ac:	bl	22920 <make_listener>
   227b0:	mov	r5, r0
   227b4:	ldr	r0, [pc, #100]	; 22820 <add_tcp_listener+0x17c>
   227b8:	ldr	r0, [pc, r0]
   227bc:	str	r0, [r5]
   227c0:	ldr	r0, [pc, #92]	; 22824 <add_tcp_listener+0x180>
   227c4:	add	r0, pc, r0
   227c8:	str	r5, [r0]
   227cc:	ldr	r0, [fp, #12]
   227d0:	ldr	r1, [fp, #8]
   227d4:	str	r0, [r5, #32]
   227d8:	mov	r0, #0
   227dc:	strb	r0, [r5, #28]
   227e0:	str	r8, [r5, #20]
   227e4:	str	r1, [r5, #24]
   227e8:	str	r0, [r5, #8]
   227ec:	mov	r0, r5
   227f0:	bl	22968 <inetport>
   227f4:	cmp	r0, #0
   227f8:	beq	2280c <add_tcp_listener+0x168>
   227fc:	mov	r0, #1
   22800:	str	r0, [r5, #16]
   22804:	sub	sp, fp, #24
   22808:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2280c:	mov	r0, r5
   22810:	bl	e120 <close_listener@plt>
   22814:	sub	sp, fp, #24
   22818:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2281c:	.word	0x00038394
   22820:	.word	0x00043558
   22824:	.word	0x0004354c

00022828 <__bswap_16>:
   22828:	rev16	r0, r0
   2282c:	bx	lr

00022830 <find_listener>:
   22830:	push	{r4, r5, r6, sl, fp, lr}
   22834:	add	fp, sp, #16
   22838:	ldr	lr, [pc, #220]	; 2291c <find_listener+0xec>
   2283c:	ldr	lr, [pc, lr]
   22840:	mov	ip, #0
   22844:	cmp	lr, #0
   22848:	bne	22870 <find_listener+0x40>
   2284c:	mov	r0, ip
   22850:	pop	{r4, r5, r6, sl, fp, pc}
   22854:	ldr	r2, [lr, #8]
   22858:	cmp	r2, #0
   2285c:	mov	ip, lr
   22860:	bne	22910 <find_listener+0xe0>
   22864:	ldr	lr, [lr]
   22868:	cmp	lr, #0
   2286c:	beq	2284c <find_listener+0x1c>
   22870:	ldrb	r2, [lr, #28]
   22874:	cmp	r2, r1
   22878:	bne	22864 <find_listener+0x34>
   2287c:	mov	r2, #0
   22880:	b	228a4 <find_listener+0x74>
   22884:	cmp	r6, r5
   22888:	ldrheq	r4, [r4, #38]	; 0x26
   2288c:	ldrheq	r3, [r3, #2]
   22890:	cmpeq	r3, r4
   22894:	bne	22864 <find_listener+0x34>
   22898:	add	r2, r2, #128	; 0x80
   2289c:	cmp	r2, #256	; 0x100
   228a0:	beq	22854 <find_listener+0x24>
   228a4:	add	r3, r0, r2
   228a8:	ldrh	r5, [r3]
   228ac:	add	r4, lr, r2
   228b0:	ldrh	r6, [r4, #36]	; 0x24
   228b4:	cmp	r5, r6
   228b8:	bne	22864 <find_listener+0x34>
   228bc:	cmp	r5, #10
   228c0:	beq	228d8 <find_listener+0xa8>
   228c4:	cmp	r5, #2
   228c8:	bne	22898 <find_listener+0x68>
   228cc:	ldr	r5, [r4, #40]	; 0x28
   228d0:	ldr	r6, [r3, #4]
   228d4:	b	22884 <find_listener+0x54>
   228d8:	ldr	r5, [r4, #44]	; 0x2c
   228dc:	ldr	r6, [r3, #8]
   228e0:	cmp	r6, r5
   228e4:	bne	22864 <find_listener+0x34>
   228e8:	ldr	r5, [r4, #48]	; 0x30
   228ec:	ldr	r6, [r3, #12]
   228f0:	cmp	r6, r5
   228f4:	ldreq	r5, [r4, #52]	; 0x34
   228f8:	ldreq	r6, [r3, #16]
   228fc:	cmpeq	r6, r5
   22900:	bne	22864 <find_listener+0x34>
   22904:	ldr	r5, [r4, #56]	; 0x38
   22908:	ldr	r6, [r3, #20]
   2290c:	b	22884 <find_listener+0x54>
   22910:	mov	ip, lr
   22914:	mov	r0, ip
   22918:	pop	{r4, r5, r6, sl, fp, pc}
   2291c:	.word	0x000434d4

00022920 <make_listener>:
   22920:	push	{r4, r5, r6, sl, fp, lr}
   22924:	add	fp, sp, #16
   22928:	mov	r4, r0
   2292c:	bl	22f50 <rb_malloc>
   22930:	mov	r5, r0
   22934:	mov	r6, #0
   22938:	ldr	r0, [pc, #36]	; 22964 <make_listener+0x44>
   2293c:	ldr	r0, [pc, r0]
   22940:	add	r0, r0, #88	; 0x58
   22944:	stmib	r5, {r0, r6}
   22948:	add	r0, r5, #36	; 0x24
   2294c:	mov	r1, r4
   22950:	mov	r2, #256	; 0x100
   22954:	bl	d40c <memcpy@plt>
   22958:	str	r6, [r5]
   2295c:	mov	r0, r5
   22960:	pop	{r4, r5, r6, sl, fp, pc}
   22964:	.word	0x0003821c

00022968 <inetport>:
   22968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2296c:	add	fp, sp, #28
   22970:	sub	sp, sp, #12
   22974:	mov	r4, r0
   22978:	ldrb	r0, [r0, #28]
   2297c:	mov	r8, #0
   22980:	cmp	r0, #0
   22984:	bne	229a4 <inetport+0x3c>
   22988:	ldrh	r0, [r4, #36]	; 0x24
   2298c:	ldr	r3, [pc, #808]	; 22cbc <inetport+0x354>
   22990:	add	r3, pc, r3
   22994:	mov	r1, #1
   22998:	mov	r2, #6
   2299c:	bl	d5d4 <rb_socket@plt>
   229a0:	mov	r8, r0
   229a4:	mov	r6, r4
   229a8:	ldrh	r0, [r6, #36]!	; 0x24
   229ac:	movw	r1, #367	; 0x16f
   229b0:	vmov.i32	q8, #0	; 0x00000000
   229b4:	add	r1, r6, r1
   229b8:	vst1.8	{d16-d17}, [r1]
   229bc:	add	r1, r6, #352	; 0x160
   229c0:	vst1.32	{d16-d17}, [r1]
   229c4:	add	r1, r6, #336	; 0x150
   229c8:	vst1.32	{d16-d17}, [r1]
   229cc:	add	r1, r6, #320	; 0x140
   229d0:	vst1.32	{d16-d17}, [r1]
   229d4:	add	r1, r6, #304	; 0x130
   229d8:	vst1.32	{d16-d17}, [r1]
   229dc:	add	r1, r6, #288	; 0x120
   229e0:	vst1.32	{d16-d17}, [r1]
   229e4:	add	r1, r6, #272	; 0x110
   229e8:	vst1.32	{d16-d17}, [r1]
   229ec:	add	r7, r6, #256	; 0x100
   229f0:	vst1.32	{d16-d17}, [r7]
   229f4:	cmp	r0, #2
   229f8:	beq	22a10 <inetport+0xa8>
   229fc:	cmp	r0, #10
   22a00:	bne	22a24 <inetport+0xbc>
   22a04:	add	r1, r4, #44	; 0x2c
   22a08:	mov	r0, #10
   22a0c:	b	22a18 <inetport+0xb0>
   22a10:	add	r1, r4, #40	; 0x28
   22a14:	mov	r0, #2
   22a18:	mov	r2, r7
   22a1c:	mov	r3, #127	; 0x7f
   22a20:	bl	d1b4 <rb_inet_ntop@plt>
   22a24:	ldrh	r0, [r4, #164]	; 0xa4
   22a28:	cmp	r0, #2
   22a2c:	beq	22a6c <inetport+0x104>
   22a30:	cmp	r0, #10
   22a34:	bne	22aa0 <inetport+0x138>
   22a38:	mov	r0, r7
   22a3c:	bl	dc94 <strlen@plt>
   22a40:	add	r5, r4, #292	; 0x124
   22a44:	add	r0, r5, r0
   22a48:	mov	r1, #38	; 0x26
   22a4c:	strh	r1, [r0]
   22a50:	mov	r0, r7
   22a54:	bl	dc94 <strlen@plt>
   22a58:	add	r2, r5, r0
   22a5c:	add	r1, r4, #172	; 0xac
   22a60:	rsb	r3, r0, #127	; 0x7f
   22a64:	mov	r0, #10
   22a68:	b	22a9c <inetport+0x134>
   22a6c:	mov	r0, r7
   22a70:	bl	dc94 <strlen@plt>
   22a74:	add	r5, r4, #292	; 0x124
   22a78:	add	r0, r5, r0
   22a7c:	mov	r1, #38	; 0x26
   22a80:	strh	r1, [r0]
   22a84:	mov	r0, r7
   22a88:	bl	dc94 <strlen@plt>
   22a8c:	add	r2, r5, r0
   22a90:	add	r1, r4, #168	; 0xa8
   22a94:	rsb	r3, r0, #127	; 0x7f
   22a98:	mov	r0, #2
   22a9c:	bl	d1b4 <rb_inet_ntop@plt>
   22aa0:	ldrb	r0, [r7]
   22aa4:	cmp	r0, #0
   22aa8:	strne	r7, [r4, #4]
   22aac:	ldrb	r7, [r4, #28]
   22ab0:	cmp	r8, #0
   22ab4:	beq	22b60 <inetport+0x1f8>
   22ab8:	mov	r0, r8
   22abc:	mov	r1, r6
   22ac0:	cmp	r7, #0
   22ac4:	beq	22bd4 <inetport+0x26c>
   22ac8:	mov	r2, #2
   22acc:	bl	d7d8 <rb_sctp_bindx@plt>
   22ad0:	cmp	r0, #0
   22ad4:	beq	22be0 <inetport+0x278>
   22ad8:	mov	r0, r8
   22adc:	bl	e4bc <rb_get_sockerr@plt>
   22ae0:	bl	dac0 <strerror@plt>
   22ae4:	mov	r7, r0
   22ae8:	ldrb	r6, [r4, #28]
   22aec:	mov	r0, r4
   22af0:	bl	22530 <get_listener_port>
   22af4:	stm	sp, {r0, r7}
   22af8:	ldr	r9, [pc, #468]	; 22cd4 <inetport+0x36c>
   22afc:	add	r9, pc, r9
   22b00:	ldr	r5, [pc, #464]	; 22cd8 <inetport+0x370>
   22b04:	add	r5, pc, r5
   22b08:	cmp	r6, #0
   22b0c:	mov	r3, r5
   22b10:	moveq	r3, r9
   22b14:	mov	sl, #0
   22b18:	ldr	r2, [pc, #444]	; 22cdc <inetport+0x374>
   22b1c:	add	r2, pc, r2
   22b20:	mov	r0, #256	; 0x100
   22b24:	mov	r1, #0
   22b28:	bl	d634 <sendto_realops_snomask@plt>
   22b2c:	ldrb	r6, [r4, #28]
   22b30:	mov	r0, r4
   22b34:	bl	d550 <get_listener_name@plt>
   22b38:	str	r7, [sp]
   22b3c:	cmp	r6, #0
   22b40:	moveq	r5, r9
   22b44:	ldr	r1, [pc, #404]	; 22ce0 <inetport+0x378>
   22b48:	add	r1, pc, r1
   22b4c:	ldr	r3, [pc, #400]	; 22ce4 <inetport+0x37c>
   22b50:	add	r3, pc, r3
   22b54:	mov	r0, #0
   22b58:	mov	r2, r5
   22b5c:	b	22c7c <inetport+0x314>
   22b60:	mov	r0, r4
   22b64:	bl	22530 <get_listener_port>
   22b68:	str	r0, [sp]
   22b6c:	ldr	r8, [pc, #332]	; 22cc0 <inetport+0x358>
   22b70:	add	r8, pc, r8
   22b74:	ldr	r5, [pc, #328]	; 22cc4 <inetport+0x35c>
   22b78:	add	r5, pc, r5
   22b7c:	cmp	r7, #0
   22b80:	mov	r3, r5
   22b84:	movne	r3, r8
   22b88:	mov	sl, #0
   22b8c:	ldr	r2, [pc, #308]	; 22cc8 <inetport+0x360>
   22b90:	add	r2, pc, r2
   22b94:	mov	r0, #256	; 0x100
   22b98:	mov	r1, #0
   22b9c:	bl	d634 <sendto_realops_snomask@plt>
   22ba0:	ldrb	r7, [r4, #28]
   22ba4:	mov	r0, r4
   22ba8:	bl	d550 <get_listener_name@plt>
   22bac:	cmp	r7, #0
   22bb0:	movne	r5, r8
   22bb4:	ldr	r1, [pc, #272]	; 22ccc <inetport+0x364>
   22bb8:	add	r1, pc, r1
   22bbc:	ldr	r3, [pc, #268]	; 22cd0 <inetport+0x368>
   22bc0:	add	r3, pc, r3
   22bc4:	mov	r0, #0
   22bc8:	mov	r2, r5
   22bcc:	bl	e0b4 <ilog@plt>
   22bd0:	b	22c88 <inetport+0x320>
   22bd4:	bl	e57c <rb_bind@plt>
   22bd8:	cmp	r0, #0
   22bdc:	bne	22ad8 <inetport+0x170>
   22be0:	ldr	r2, [r4, #24]
   22be4:	mov	r0, r8
   22be8:	mov	r1, #128	; 0x80
   22bec:	bl	cfe0 <rb_listen@plt>
   22bf0:	cmp	r0, #0
   22bf4:	beq	22c94 <inetport+0x32c>
   22bf8:	mov	r0, r8
   22bfc:	bl	e4bc <rb_get_sockerr@plt>
   22c00:	bl	dac0 <strerror@plt>
   22c04:	mov	r5, r0
   22c08:	ldrb	r6, [r4, #28]
   22c0c:	mov	r0, r4
   22c10:	bl	22530 <get_listener_port>
   22c14:	stm	sp, {r0, r5}
   22c18:	ldr	r9, [pc, #200]	; 22ce8 <inetport+0x380>
   22c1c:	add	r9, pc, r9
   22c20:	ldr	r7, [pc, #196]	; 22cec <inetport+0x384>
   22c24:	add	r7, pc, r7
   22c28:	cmp	r6, #0
   22c2c:	mov	r3, r7
   22c30:	moveq	r3, r9
   22c34:	mov	sl, #0
   22c38:	ldr	r2, [pc, #176]	; 22cf0 <inetport+0x388>
   22c3c:	add	r2, pc, r2
   22c40:	mov	r0, #256	; 0x100
   22c44:	mov	r1, #0
   22c48:	bl	d634 <sendto_realops_snomask@plt>
   22c4c:	ldrb	r6, [r4, #28]
   22c50:	mov	r0, r4
   22c54:	bl	d550 <get_listener_name@plt>
   22c58:	str	r5, [sp]
   22c5c:	cmp	r6, #0
   22c60:	moveq	r7, r9
   22c64:	ldr	r1, [pc, #136]	; 22cf4 <inetport+0x38c>
   22c68:	add	r1, pc, r1
   22c6c:	ldr	r3, [pc, #132]	; 22cf8 <inetport+0x390>
   22c70:	add	r3, pc, r3
   22c74:	mov	r0, #0
   22c78:	mov	r2, r7
   22c7c:	bl	e0b4 <ilog@plt>
   22c80:	mov	r0, r8
   22c84:	bl	db50 <rb_close@plt>
   22c88:	mov	r0, sl
   22c8c:	sub	sp, fp, #28
   22c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c94:	str	r8, [r4, #8]
   22c98:	ldr	r1, [pc, #92]	; 22cfc <inetport+0x394>
   22c9c:	add	r1, pc, r1
   22ca0:	ldr	r2, [pc, #88]	; 22d00 <inetport+0x398>
   22ca4:	add	r2, pc, r2
   22ca8:	mov	r0, r8
   22cac:	mov	r3, r4
   22cb0:	bl	dc04 <rb_accept_tcp@plt>
   22cb4:	mov	sl, #1
   22cb8:	b	22c88 <inetport+0x320>
   22cbc:	.word	0x0002049a
   22cc0:	.word	0x000202f8
   22cc4:	.word	0x000202f5
   22cc8:	.word	0x000202aa
   22ccc:	.word	0x000202b9
   22cd0:	.word	0x00043154
   22cd4:	.word	0x00020371
   22cd8:	.word	0x00020364
   22cdc:	.word	0x0002037b
   22ce0:	.word	0x0002037a
   22ce4:	.word	0x000431c4
   22ce8:	.word	0x00020251
   22cec:	.word	0x00020244
   22cf0:	.word	0x000202a9
   22cf4:	.word	0x000202ac
   22cf8:	.word	0x000430a4
   22cfc:	.word	0x000002cc
   22d00:	.word	0x00000500

00022d04 <close_listener>:
   22d04:	push	{r4, sl, fp, lr}
   22d08:	add	fp, sp, #8
   22d0c:	cmp	r0, #0
   22d10:	popeq	{r4, sl, fp, pc}
   22d14:	mov	r4, r0
   22d18:	ldr	r0, [r0, #8]
   22d1c:	cmp	r0, #0
   22d20:	beq	22d30 <close_listener+0x2c>
   22d24:	bl	db50 <rb_close@plt>
   22d28:	mov	r0, #0
   22d2c:	str	r0, [r4, #8]
   22d30:	mov	r0, #0
   22d34:	str	r0, [r4, #16]
   22d38:	ldr	r0, [r4, #12]
   22d3c:	cmp	r0, #0
   22d40:	beq	22d48 <close_listener+0x44>
   22d44:	pop	{r4, sl, fp, pc}
   22d48:	mov	r0, r4
   22d4c:	pop	{r4, sl, fp, lr}
   22d50:	b	22470 <free_listener>

00022d54 <add_sctp_listener>:
   22d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d58:	add	fp, sp, #28
   22d5c:	sub	sp, sp, #388	; 0x184
   22d60:	cmp	r0, #0
   22d64:	beq	22e98 <add_sctp_listener+0x144>
   22d68:	mov	r8, r3
   22d6c:	mov	r6, r2
   22d70:	mov	r4, r1
   22d74:	mov	r5, r0
   22d78:	add	r9, sp, #128	; 0x80
   22d7c:	add	r7, sp, #128	; 0x80
   22d80:	mov	sl, #0
   22d84:	mov	r0, r7
   22d88:	mov	r1, #0
   22d8c:	mov	r2, #256	; 0x100
   22d90:	bl	df28 <memset@plt>
   22d94:	cmp	r4, #0
   22d98:	beq	22dd4 <add_sctp_listener+0x80>
   22d9c:	add	r7, sp, #128	; 0x80
   22da0:	mov	r0, r4
   22da4:	mov	r1, r7
   22da8:	bl	e000 <rb_inet_pton_sock@plt>
   22dac:	cmp	r0, #1
   22db0:	blt	22e98 <add_sctp_listener+0x144>
   22db4:	cmp	r6, #0
   22db8:	beq	22dfc <add_sctp_listener+0xa8>
   22dbc:	add	r1, r7, #128	; 0x80
   22dc0:	mov	r0, r6
   22dc4:	bl	e000 <rb_inet_pton_sock@plt>
   22dc8:	cmp	r0, #1
   22dcc:	bge	22e08 <add_sctp_listener+0xb4>
   22dd0:	b	22e98 <add_sctp_listener+0x144>
   22dd4:	ldr	r0, [pc, #308]	; 22f10 <add_sctp_listener+0x1bc>
   22dd8:	ldr	r0, [pc, r0]
   22ddc:	vld1.32	{d16-d17}, [r0]
   22de0:	add	r0, r7, #8
   22de4:	vst1.64	{d16-d17}, [r0]
   22de8:	add	lr, sp, #256	; 0x100
   22dec:	strh	sl, [lr]
   22df0:	mov	r0, #10
   22df4:	strh	r0, [r9]
   22df8:	b	22e60 <add_sctp_listener+0x10c>
   22dfc:	mov	r0, #0
   22e00:	add	lr, sp, #256	; 0x100
   22e04:	strh	r0, [lr]
   22e08:	ldrh	r0, [r9]
   22e0c:	cmp	r0, #2
   22e10:	bne	22e60 <add_sctp_listener+0x10c>
   22e14:	add	lr, sp, #256	; 0x100
   22e18:	ldrh	r0, [lr]
   22e1c:	cmp	r0, #10
   22e20:	bne	22e60 <add_sctp_listener+0x10c>
   22e24:	add	r4, r7, #128	; 0x80
   22e28:	mov	r6, sp
   22e2c:	add	r7, sp, #128	; 0x80
   22e30:	mov	r0, r6
   22e34:	mov	r1, r7
   22e38:	mov	r2, #128	; 0x80
   22e3c:	bl	d40c <memcpy@plt>
   22e40:	mov	r0, r7
   22e44:	mov	r1, r4
   22e48:	mov	r2, #128	; 0x80
   22e4c:	bl	d40c <memcpy@plt>
   22e50:	mov	r0, r4
   22e54:	mov	r1, r6
   22e58:	mov	r2, #128	; 0x80
   22e5c:	bl	d40c <memcpy@plt>
   22e60:	uxth	r0, r5
   22e64:	bl	22828 <__bswap_16>
   22e68:	add	lr, sp, #256	; 0x100
   22e6c:	strh	r0, [lr, #2]
   22e70:	strh	r0, [r9, #2]
   22e74:	add	r0, sp, #128	; 0x80
   22e78:	mov	r1, #1
   22e7c:	bl	22830 <find_listener>
   22e80:	cmp	r0, #0
   22e84:	beq	22ea0 <add_sctp_listener+0x14c>
   22e88:	mov	r5, r0
   22e8c:	ldr	r0, [r0, #8]
   22e90:	cmp	r0, #0
   22e94:	beq	22ec4 <add_sctp_listener+0x170>
   22e98:	sub	sp, fp, #28
   22e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ea0:	add	r0, sp, #128	; 0x80
   22ea4:	bl	22920 <make_listener>
   22ea8:	mov	r5, r0
   22eac:	ldr	r0, [pc, #96]	; 22f14 <add_sctp_listener+0x1c0>
   22eb0:	ldr	r0, [pc, r0]
   22eb4:	str	r0, [r5]
   22eb8:	ldr	r0, [pc, #88]	; 22f18 <add_sctp_listener+0x1c4>
   22ebc:	add	r0, pc, r0
   22ec0:	str	r5, [r0]
   22ec4:	ldr	r0, [fp, #8]
   22ec8:	str	r0, [r5, #32]
   22ecc:	mov	r4, #1
   22ed0:	strb	r4, [r5, #28]
   22ed4:	mov	r0, #0
   22ed8:	str	r8, [r5, #20]
   22edc:	str	r0, [r5, #24]
   22ee0:	str	r0, [r5, #8]
   22ee4:	mov	r0, r5
   22ee8:	bl	22968 <inetport>
   22eec:	cmp	r0, #0
   22ef0:	beq	22f00 <add_sctp_listener+0x1ac>
   22ef4:	str	r4, [r5, #16]
   22ef8:	sub	sp, fp, #28
   22efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f00:	mov	r0, r5
   22f04:	bl	e120 <close_listener@plt>
   22f08:	sub	sp, fp, #28
   22f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f10:	.word	0x00037d14
   22f14:	.word	0x00042e60
   22f18:	.word	0x00042e54

00022f1c <close_listeners>:
   22f1c:	push	{r4, sl, fp, lr}
   22f20:	add	fp, sp, #8
   22f24:	ldr	r0, [pc, #32]	; 22f4c <close_listeners+0x30>
   22f28:	ldr	r0, [pc, r0]
   22f2c:	cmp	r0, #0
   22f30:	popeq	{r4, sl, fp, pc}
   22f34:	ldr	r4, [r0]
   22f38:	bl	e120 <close_listener@plt>
   22f3c:	cmp	r4, #0
   22f40:	mov	r0, r4
   22f44:	bne	22f34 <close_listeners+0x18>
   22f48:	pop	{r4, sl, fp, pc}
   22f4c:	.word	0x00042de8

00022f50 <rb_malloc>:
   22f50:	push	{fp, lr}
   22f54:	mov	fp, sp
   22f58:	mov	r0, #1
   22f5c:	mov	r1, #420	; 0x1a4
   22f60:	bl	cfa4 <calloc@plt>
   22f64:	cmp	r0, #0
   22f68:	popne	{fp, pc}
   22f6c:	bl	d448 <rb_outofmemory@plt>

00022f70 <accept_precallback>:
   22f70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22f74:	add	fp, sp, #24
   22f78:	sub	sp, sp, #512	; 0x200
   22f7c:	mov	r6, r3
   22f80:	mov	r5, r1
   22f84:	mov	r4, r0
   22f88:	ldr	r0, [r3, #20]
   22f8c:	cmp	r0, #0
   22f90:	beq	22fb4 <accept_precallback+0x44>
   22f94:	ldr	r0, [pc, #476]	; 23178 <accept_precallback+0x208>
   22f98:	ldr	r0, [pc, r0]
   22f9c:	ldrb	r0, [r0]
   22fa0:	cmp	r0, #0
   22fa4:	beq	23158 <accept_precallback+0x1e8>
   22fa8:	bl	deb0 <get_ssld_count@plt>
   22fac:	cmp	r0, #0
   22fb0:	beq	23158 <accept_precallback+0x1e8>
   22fb4:	ldr	r0, [pc, #448]	; 2317c <accept_precallback+0x20c>
   22fb8:	ldr	r0, [pc, r0]
   22fbc:	ldr	r0, [r0]
   22fc0:	sub	r7, r0, #10
   22fc4:	mov	r0, r4
   22fc8:	bl	db8c <rb_get_fd@plt>
   22fcc:	cmp	r7, r0
   22fd0:	bge	23048 <accept_precallback+0xd8>
   22fd4:	ldr	r0, [pc, #420]	; 23180 <accept_precallback+0x210>
   22fd8:	ldr	r0, [pc, r0]
   22fdc:	ldr	r1, [r0, #68]	; 0x44
   22fe0:	add	r1, r1, #1
   22fe4:	str	r1, [r0, #68]	; 0x44
   22fe8:	ldr	r0, [pc, #404]	; 23184 <accept_precallback+0x214>
   22fec:	ldr	r0, [pc, r0]
   22ff0:	add	r5, r0, #20
   22ff4:	bl	d07c <rb_current_time@plt>
   22ff8:	cmp	r5, r0
   22ffc:	bgt	23034 <accept_precallback+0xc4>
   23000:	mov	r0, r6
   23004:	bl	d550 <get_listener_name@plt>
   23008:	ldr	r2, [pc, #376]	; 23188 <accept_precallback+0x218>
   2300c:	add	r2, pc, r2
   23010:	ldr	r3, [pc, #372]	; 2318c <accept_precallback+0x21c>
   23014:	add	r3, pc, r3
   23018:	mov	r0, #256	; 0x100
   2301c:	mov	r1, #0
   23020:	bl	d634 <sendto_realops_snomask@plt>
   23024:	bl	d07c <rb_current_time@plt>
   23028:	ldr	r1, [pc, #352]	; 23190 <accept_precallback+0x220>
   2302c:	add	r1, pc, r1
   23030:	str	r0, [r1]
   23034:	ldr	r1, [pc, #344]	; 23194 <accept_precallback+0x224>
   23038:	add	r1, pc, r1
   2303c:	mov	r0, r4
   23040:	mov	r2, #31
   23044:	b	23154 <accept_precallback+0x1e4>
   23048:	ldrh	r1, [r5]
   2304c:	mov	r0, r5
   23050:	bl	e78c <find_dline@plt>
   23054:	cmp	r0, #0
   23058:	beq	230d8 <accept_precallback+0x168>
   2305c:	ldrb	r1, [r0, #2]
   23060:	mov	r6, #1
   23064:	tst	r1, #16
   23068:	bne	23164 <accept_precallback+0x1f4>
   2306c:	ldr	r1, [pc, #292]	; 23198 <accept_precallback+0x228>
   23070:	ldr	r1, [pc, r1]
   23074:	ldr	r2, [r1, #68]	; 0x44
   23078:	add	r2, r2, #1
   2307c:	str	r2, [r1, #68]	; 0x44
   23080:	ldr	r1, [pc, #276]	; 2319c <accept_precallback+0x22c>
   23084:	ldr	r1, [pc, r1]
   23088:	ldr	r1, [r1, #120]	; 0x78
   2308c:	cmp	r1, #0
   23090:	beq	23120 <accept_precallback+0x1b0>
   23094:	bl	d010 <get_user_ban_reason@plt>
   23098:	mov	r3, r0
   2309c:	mov	r5, sp
   230a0:	ldr	r2, [pc, #248]	; 231a0 <accept_precallback+0x230>
   230a4:	add	r2, pc, r2
   230a8:	mov	r0, r5
   230ac:	mov	r1, #512	; 0x200
   230b0:	bl	de74 <snprintf@plt>
   230b4:	movw	r1, #511	; 0x1ff
   230b8:	cmp	r0, r1
   230bc:	blt	2313c <accept_precallback+0x1cc>
   230c0:	movw	r0, #509	; 0x1fd
   230c4:	movw	r1, #2573	; 0xa0d
   230c8:	strh	r1, [r5, r0]
   230cc:	mov	r0, #0
   230d0:	strb	r0, [sp, #511]	; 0x1ff
   230d4:	b	2313c <accept_precallback+0x1cc>
   230d8:	mov	r0, r4
   230dc:	mov	r1, r5
   230e0:	bl	e684 <check_reject@plt>
   230e4:	mov	r6, #0
   230e8:	cmp	r0, #0
   230ec:	bne	23164 <accept_precallback+0x1f4>
   230f0:	mov	r0, r5
   230f4:	bl	d040 <throttle_add@plt>
   230f8:	cmp	r0, #0
   230fc:	beq	23170 <accept_precallback+0x200>
   23100:	ldr	r1, [pc, #160]	; 231a8 <accept_precallback+0x238>
   23104:	add	r1, pc, r1
   23108:	mov	r0, r4
   2310c:	mov	r2, #42	; 0x2a
   23110:	bl	e738 <rb_write@plt>
   23114:	mov	r0, r4
   23118:	bl	db50 <rb_close@plt>
   2311c:	b	23164 <accept_precallback+0x1f4>
   23120:	ldr	r0, [pc, #124]	; 231a4 <accept_precallback+0x234>
   23124:	add	r0, pc, r0
   23128:	vld1.64	{d16-d17}, [r0]!
   2312c:	vld1.64	{d18-d19}, [r0]
   23130:	mov	r0, sp
   23134:	vst1.64	{d16-d17}, [r0]!
   23138:	vst1.64	{d18-d19}, [r0]
   2313c:	mov	r5, sp
   23140:	mov	r0, r5
   23144:	bl	dc94 <strlen@plt>
   23148:	mov	r2, r0
   2314c:	mov	r0, r4
   23150:	mov	r1, r5
   23154:	bl	e738 <rb_write@plt>
   23158:	mov	r0, r4
   2315c:	bl	db50 <rb_close@plt>
   23160:	mov	r6, #0
   23164:	mov	r0, r6
   23168:	sub	sp, fp, #24
   2316c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23170:	mov	r6, #1
   23174:	b	23164 <accept_precallback+0x1f4>
   23178:	.word	0x000379c8
   2317c:	.word	0x00037b10
   23180:	.word	0x000379e4
   23184:	.word	0x00042f28
   23188:	.word	0x0001ff2f
   2318c:	.word	0x00042d00
   23190:	.word	0x00042ee8
   23194:	.word	0x0001ff20
   23198:	.word	0x0003794c
   2319c:	.word	0x00037af8
   231a0:	.word	0x0001fed4
   231a4:	.word	0x0001feec
   231a8:	.word	0x0001fe8c

000231ac <accept_callback>:
   231ac:	push	{r4, r5, fp, lr}
   231b0:	add	fp, sp, #8
   231b4:	sub	sp, sp, #136	; 0x88
   231b8:	mov	r5, r2
   231bc:	mov	r4, r0
   231c0:	ldr	r0, [pc, #92]	; 23224 <accept_callback+0x78>
   231c4:	ldr	r0, [pc, r0]
   231c8:	ldr	r1, [r0, #64]	; 0x40
   231cc:	add	r1, r1, #1
   231d0:	str	r1, [r0, #64]	; 0x40
   231d4:	mov	r0, #128	; 0x80
   231d8:	str	r0, [sp, #4]
   231dc:	mov	r0, r4
   231e0:	bl	db8c <rb_get_fd@plt>
   231e4:	add	r1, sp, #8
   231e8:	add	r2, sp, #4
   231ec:	bl	e3fc <getsockname@plt>
   231f0:	cmn	r0, #1
   231f4:	ble	23214 <accept_callback+0x68>
   231f8:	ldr	r0, [fp, #8]
   231fc:	add	r3, sp, #8
   23200:	mov	r1, r4
   23204:	mov	r2, r5
   23208:	bl	23228 <add_connection>
   2320c:	sub	sp, fp, #8
   23210:	pop	{r4, r5, fp, pc}
   23214:	mov	r0, r4
   23218:	bl	db50 <rb_close@plt>
   2321c:	sub	sp, fp, #8
   23220:	pop	{r4, r5, fp, pc}
   23224:	.word	0x000377f8

00023228 <add_connection>:
   23228:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2322c:	add	fp, sp, #24
   23230:	sub	sp, sp, #16
   23234:	mov	r7, r3
   23238:	mov	r6, r2
   2323c:	mov	r9, r1
   23240:	mov	r5, r0
   23244:	mov	r8, #0
   23248:	mov	r0, #0
   2324c:	bl	d4a8 <make_client@plt>
   23250:	mov	r4, r0
   23254:	ldr	r0, [r0, #432]	; 0x1b0
   23258:	str	r9, [r0, #300]	; 0x12c
   2325c:	add	r0, r0, #140	; 0x8c
   23260:	mov	r1, r6
   23264:	mov	r2, #128	; 0x80
   23268:	bl	d40c <memcpy@plt>
   2326c:	ldr	r0, [r4, #436]	; 0x1b4
   23270:	add	r0, r0, #132	; 0x84
   23274:	mov	r1, r7
   23278:	mov	r2, #128	; 0x80
   2327c:	bl	d40c <memcpy@plt>
   23280:	movw	r0, #291	; 0x123
   23284:	add	r6, r4, r0
   23288:	ldr	r0, [r4, #432]	; 0x1b0
   2328c:	add	r0, r0, #140	; 0x8c
   23290:	mov	r1, r6
   23294:	mov	r2, #54	; 0x36
   23298:	bl	cf50 <rb_inet_ntop_sock@plt>
   2329c:	add	r0, r4, #163	; 0xa3
   232a0:	mov	r1, r6
   232a4:	mov	r2, #64	; 0x40
   232a8:	bl	e510 <rb_strlcpy@plt>
   232ac:	ldrb	r0, [r5, #28]
   232b0:	cmp	r0, #0
   232b4:	beq	232c8 <add_connection+0xa0>
   232b8:	ldr	r0, [r4, #432]	; 0x1b0
   232bc:	ldr	r1, [r0, #452]	; 0x1c4
   232c0:	orr	r1, r1, #8
   232c4:	str	r1, [r0, #452]	; 0x1c4
   232c8:	ldr	r0, [r5, #20]
   232cc:	cmp	r0, #0
   232d0:	beq	23358 <add_connection+0x130>
   232d4:	ldr	r0, [pc, #344]	; 23434 <add_connection+0x20c>
   232d8:	add	r0, pc, r0
   232dc:	add	r3, sp, #8
   232e0:	add	r1, r3, #4
   232e4:	str	r1, [sp]
   232e8:	str	r0, [sp, #4]
   232ec:	mov	r0, #1
   232f0:	mov	r1, #1
   232f4:	mov	r2, #0
   232f8:	bl	d514 <rb_socketpair@plt>
   232fc:	cmn	r0, #1
   23300:	beq	233f0 <add_connection+0x1c8>
   23304:	ldr	r0, [r4, #432]	; 0x1b0
   23308:	ldr	r1, [pc, #300]	; 2343c <add_connection+0x214>
   2330c:	add	r1, pc, r1
   23310:	str	r1, [r0, #448]	; 0x1c0
   23314:	ldr	r6, [sp, #12]
   23318:	mov	r0, r4
   2331c:	bl	dbe0 <connid_get@plt>
   23320:	mov	r2, r0
   23324:	mov	r0, r9
   23328:	mov	r1, r6
   2332c:	bl	da9c <start_ssld_accept@plt>
   23330:	ldr	r1, [r4, #432]	; 0x1b0
   23334:	str	r0, [r1, #436]	; 0x1b4
   23338:	cmp	r0, #0
   2333c:	beq	23408 <add_connection+0x1e0>
   23340:	ldr	r9, [sp, #8]
   23344:	str	r9, [r1, #300]	; 0x12c
   23348:	ldr	r0, [r1, #452]	; 0x1c4
   2334c:	orr	r0, r0, #1
   23350:	str	r0, [r1, #452]	; 0x1c4
   23354:	mov	r8, #1
   23358:	ldr	r0, [r5, #32]
   2335c:	cmp	r0, #0
   23360:	beq	233c8 <add_connection+0x1a0>
   23364:	ldr	r0, [pc, #216]	; 23444 <add_connection+0x21c>
   23368:	add	r0, pc, r0
   2336c:	add	r3, sp, #8
   23370:	add	r1, r3, #4
   23374:	str	r1, [sp]
   23378:	str	r0, [sp, #4]
   2337c:	mov	r0, #1
   23380:	mov	r1, #1
   23384:	mov	r2, #0
   23388:	bl	d514 <rb_socketpair@plt>
   2338c:	cmn	r0, #1
   23390:	beq	233f0 <add_connection+0x1c8>
   23394:	ldr	r6, [sp, #12]
   23398:	mov	r0, r4
   2339c:	bl	dbe0 <connid_get@plt>
   233a0:	mov	r2, r0
   233a4:	mov	r0, r9
   233a8:	mov	r1, r6
   233ac:	bl	d748 <start_wsockd_accept@plt>
   233b0:	ldr	r1, [r4, #432]	; 0x1b0
   233b4:	str	r0, [r1, #444]	; 0x1bc
   233b8:	cmp	r0, #0
   233bc:	beq	23408 <add_connection+0x1e0>
   233c0:	ldr	r0, [sp, #8]
   233c4:	str	r0, [r1, #300]	; 0x12c
   233c8:	ldr	r0, [r4, #432]	; 0x1b0
   233cc:	str	r5, [r0, #128]	; 0x80
   233d0:	ldr	r0, [r5, #12]
   233d4:	add	r0, r0, #1
   233d8:	str	r0, [r5, #12]
   233dc:	mov	r0, r4
   233e0:	mov	r1, r8
   233e4:	bl	cf8c <authd_initiate_client@plt>
   233e8:	sub	sp, fp, #24
   233ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   233f0:	ldr	r0, [r4, #64]	; 0x40
   233f4:	orr	r0, r0, #16384	; 0x4000
   233f8:	str	r0, [r4, #64]	; 0x40
   233fc:	ldr	r3, [pc, #52]	; 23438 <add_connection+0x210>
   23400:	add	r3, pc, r3
   23404:	b	2341c <add_connection+0x1f4>
   23408:	ldr	r0, [r4, #64]	; 0x40
   2340c:	orr	r0, r0, #16384	; 0x4000
   23410:	str	r0, [r4, #64]	; 0x40
   23414:	ldr	r3, [pc, #36]	; 23440 <add_connection+0x218>
   23418:	add	r3, pc, r3
   2341c:	mov	r0, r4
   23420:	mov	r1, r4
   23424:	mov	r2, r4
   23428:	bl	e534 <exit_client@plt>
   2342c:	sub	sp, fp, #24
   23430:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23434:	.word	0x0001fce3
   23438:	.word	0x0001fbd4
   2343c:	.word	0x00000134
   23440:	.word	0x0001fbc8
   23444:	.word	0x0001fc8c

00023448 <accept_sslcallback>:
   23448:	push	{fp, lr}
   2344c:	mov	fp, sp
   23450:	bl	e204 <authd_deferred_client@plt>
   23454:	mov	r0, #0
   23458:	pop	{fp, pc}

0002345c <init_main_logfile>:
   2345c:	push	{r4, sl, fp, lr}
   23460:	add	fp, sp, #8
   23464:	ldr	r4, [pc, #56]	; 234a4 <init_main_logfile+0x48>
   23468:	ldr	r4, [pc, r4]
   2346c:	ldr	r0, [r4]
   23470:	bl	234b4 <verify_logfile_access>
   23474:	ldr	r0, [pc, #44]	; 234a8 <init_main_logfile+0x4c>
   23478:	ldr	r0, [pc, r0]
   2347c:	cmp	r0, #0
   23480:	popne	{r4, sl, fp, pc}
   23484:	ldr	r0, [r4]
   23488:	ldr	r1, [pc, #28]	; 234ac <init_main_logfile+0x50>
   2348c:	add	r1, pc, r1
   23490:	bl	d1f0 <fopen@plt>
   23494:	ldr	r1, [pc, #20]	; 234b0 <init_main_logfile+0x54>
   23498:	add	r1, pc, r1
   2349c:	str	r0, [r1]
   234a0:	pop	{r4, sl, fp, pc}
   234a4:	.word	0x000375bc
   234a8:	.word	0x00042aa0
   234ac:	.word	0x00023a6a
   234b0:	.word	0x00042a80

000234b4 <verify_logfile_access>:
   234b4:	push	{r4, r5, r6, sl, fp, lr}
   234b8:	add	fp, sp, #16
   234bc:	sub	sp, sp, #512	; 0x200
   234c0:	mov	r4, r0
   234c4:	bl	d274 <rb_dirname@plt>
   234c8:	mov	r6, r0
   234cc:	bl	dc94 <strlen@plt>
   234d0:	add	r0, r0, #8
   234d4:	bic	r0, r0, #7
   234d8:	sub	r5, sp, r0
   234dc:	mov	sp, r5
   234e0:	mov	r0, r5
   234e4:	mov	r1, r6
   234e8:	bl	d91c <strcpy@plt>
   234ec:	mov	r0, r6
   234f0:	bl	23b6c <rb_free>
   234f4:	mov	r0, r5
   234f8:	mov	r1, #0
   234fc:	bl	e09c <access@plt>
   23500:	cmn	r0, #1
   23504:	beq	23554 <verify_logfile_access+0xa0>
   23508:	mov	r0, r4
   2350c:	mov	r1, #0
   23510:	bl	e09c <access@plt>
   23514:	cmn	r0, #1
   23518:	beq	235bc <verify_logfile_access+0x108>
   2351c:	mov	r0, r4
   23520:	mov	r1, #2
   23524:	bl	e09c <access@plt>
   23528:	cmn	r0, #1
   2352c:	bne	235b4 <verify_logfile_access+0x100>
   23530:	bl	de38 <__errno_location@plt>
   23534:	ldr	r0, [r0]
   23538:	bl	dac0 <strerror@plt>
   2353c:	sub	sp, sp, #8
   23540:	str	r0, [sp]
   23544:	sub	r0, fp, #528	; 0x210
   23548:	ldr	r2, [pc, #208]	; 23620 <verify_logfile_access+0x16c>
   2354c:	add	r2, pc, r2
   23550:	b	23568 <verify_logfile_access+0xb4>
   23554:	sub	sp, sp, #8
   23558:	str	r5, [sp]
   2355c:	sub	r0, fp, #528	; 0x210
   23560:	ldr	r2, [pc, #176]	; 23618 <verify_logfile_access+0x164>
   23564:	add	r2, pc, r2
   23568:	mov	r1, #512	; 0x200
   2356c:	mov	r3, r4
   23570:	bl	de74 <snprintf@plt>
   23574:	add	sp, sp, #8
   23578:	ldr	r0, [pc, #164]	; 23624 <verify_logfile_access+0x170>
   2357c:	ldr	r0, [pc, r0]
   23580:	ldr	r0, [r0]
   23584:	cmp	r0, #0
   23588:	ldreq	r0, [pc, #152]	; 23628 <verify_logfile_access+0x174>
   2358c:	ldreq	r0, [pc, r0]
   23590:	ldrbeq	r0, [r0]
   23594:	cmpeq	r0, #0
   23598:	bne	235f8 <verify_logfile_access+0x144>
   2359c:	ldr	r2, [pc, #144]	; 23634 <verify_logfile_access+0x180>
   235a0:	add	r2, pc, r2
   235a4:	sub	r3, fp, #528	; 0x210
   235a8:	mov	r0, #256	; 0x100
   235ac:	mov	r1, #0
   235b0:	bl	d634 <sendto_realops_snomask@plt>
   235b4:	sub	sp, fp, #16
   235b8:	pop	{r4, r5, r6, sl, fp, pc}
   235bc:	mov	r0, r5
   235c0:	mov	r1, #2
   235c4:	bl	e09c <access@plt>
   235c8:	cmn	r0, #1
   235cc:	bne	235b4 <verify_logfile_access+0x100>
   235d0:	bl	de38 <__errno_location@plt>
   235d4:	ldr	r0, [r0]
   235d8:	bl	dac0 <strerror@plt>
   235dc:	sub	sp, sp, #8
   235e0:	str	r5, [sp]
   235e4:	str	r0, [sp, #4]
   235e8:	sub	r0, fp, #528	; 0x210
   235ec:	ldr	r2, [pc, #40]	; 2361c <verify_logfile_access+0x168>
   235f0:	add	r2, pc, r2
   235f4:	b	23568 <verify_logfile_access+0xb4>
   235f8:	ldr	r0, [pc, #44]	; 2362c <verify_logfile_access+0x178>
   235fc:	ldr	r0, [pc, r0]
   23600:	ldr	r0, [r0]
   23604:	ldr	r1, [pc, #36]	; 23630 <verify_logfile_access+0x17c>
   23608:	add	r1, pc, r1
   2360c:	sub	r2, fp, #528	; 0x210
   23610:	bl	dd60 <fprintf@plt>
   23614:	b	2359c <verify_logfile_access+0xe8>
   23618:	.word	0x0001fb21
   2361c:	.word	0x0001fadf
   23620:	.word	0x0001fbd3
   23624:	.word	0x00037510
   23628:	.word	0x000373bc
   2362c:	.word	0x0003735c
   23630:	.word	0x00020413
   23634:	.word	0x00024415

00023638 <open_logfiles>:
   23638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2363c:	add	fp, sp, #24
   23640:	bl	e3c0 <close_logfiles@plt>
   23644:	ldr	r0, [pc, #124]	; 236c8 <open_logfiles+0x90>
   23648:	ldr	r0, [pc, r0]
   2364c:	ldr	r0, [r0]
   23650:	ldr	r8, [pc, #116]	; 236cc <open_logfiles+0x94>
   23654:	add	r8, pc, r8
   23658:	mov	r1, r8
   2365c:	bl	d1f0 <fopen@plt>
   23660:	ldr	r1, [pc, #104]	; 236d0 <open_logfiles+0x98>
   23664:	add	r1, pc, r1
   23668:	str	r0, [r1]
   2366c:	mov	r5, #0
   23670:	ldr	r6, [pc, #92]	; 236d4 <open_logfiles+0x9c>
   23674:	add	r6, pc, r6
   23678:	b	23688 <open_logfiles+0x50>
   2367c:	sub	r5, r5, #1
   23680:	cmn	r5, #9
   23684:	beq	236c4 <open_logfiles+0x8c>
   23688:	sub	r7, r6, r5, lsl #3
   2368c:	ldr	r4, [r7, #8]
   23690:	ldr	r0, [r4]
   23694:	cmp	r0, #0
   23698:	beq	2367c <open_logfiles+0x44>
   2369c:	ldrb	r1, [r0]
   236a0:	cmp	r1, #0
   236a4:	beq	2367c <open_logfiles+0x44>
   236a8:	bl	234b4 <verify_logfile_access>
   236ac:	ldr	r0, [r4]
   236b0:	mov	r1, r8
   236b4:	bl	d1f0 <fopen@plt>
   236b8:	ldr	r1, [r7, #12]
   236bc:	str	r0, [r1]
   236c0:	b	2367c <open_logfiles+0x44>
   236c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   236c8:	.word	0x000373dc
   236cc:	.word	0x000238a2
   236d0:	.word	0x000428b4
   236d4:	.word	0x0003678c

000236d8 <close_logfiles>:
   236d8:	push	{r4, r5, r6, r7, fp, lr}
   236dc:	add	fp, sp, #16
   236e0:	ldr	r0, [pc, #80]	; 23738 <close_logfiles+0x60>
   236e4:	ldr	r0, [pc, r0]
   236e8:	cmp	r0, #0
   236ec:	beq	236f4 <close_logfiles+0x1c>
   236f0:	bl	e0f0 <fclose@plt>
   236f4:	mov	r4, #0
   236f8:	ldr	r5, [pc, #60]	; 2373c <close_logfiles+0x64>
   236fc:	add	r5, pc, r5
   23700:	mov	r6, #0
   23704:	b	23714 <close_logfiles+0x3c>
   23708:	sub	r6, r6, #1
   2370c:	cmn	r6, #9
   23710:	beq	23734 <close_logfiles+0x5c>
   23714:	sub	r0, r5, r6, lsl #3
   23718:	ldr	r7, [r0, #12]
   2371c:	ldr	r0, [r7]
   23720:	cmp	r0, #0
   23724:	beq	23708 <close_logfiles+0x30>
   23728:	bl	e0f0 <fclose@plt>
   2372c:	str	r4, [r7]
   23730:	b	23708 <close_logfiles+0x30>
   23734:	pop	{r4, r5, r6, r7, fp, pc}
   23738:	.word	0x00042834
   2373c:	.word	0x00036704

00023740 <ilog>:
   23740:	sub	sp, sp, #8
   23744:	push	{r4, r5, r6, sl, fp, lr}
   23748:	add	fp, sp, #16
   2374c:	sub	sp, sp, #1072	; 0x430
   23750:	mov	ip, r1
   23754:	str	r2, [fp, #8]
   23758:	str	r3, [fp, #12]
   2375c:	ldr	r1, [pc, #156]	; 23800 <ilog+0xc0>
   23760:	add	r1, pc, r1
   23764:	add	r0, r1, r0, lsl #3
   23768:	ldr	r6, [r0, #4]
   2376c:	ldr	r4, [r6]
   23770:	cmp	r4, #0
   23774:	beq	237f0 <ilog+0xb0>
   23778:	add	r3, fp, #8
   2377c:	str	r3, [sp, #8]
   23780:	sub	r5, fp, #528	; 0x210
   23784:	mov	r0, r5
   23788:	mov	r1, #512	; 0x200
   2378c:	mov	r2, ip
   23790:	bl	e450 <vsnprintf@plt>
   23794:	bl	d07c <rb_current_time@plt>
   23798:	bl	e2c4 <smalldate@plt>
   2379c:	str	r5, [sp]
   237a0:	add	r5, sp, #14
   237a4:	ldr	r2, [pc, #88]	; 23804 <ilog+0xc4>
   237a8:	add	r2, pc, r2
   237ac:	ldr	r3, [pc, #84]	; 23808 <ilog+0xc8>
   237b0:	add	r3, pc, r3
   237b4:	mov	r0, r5
   237b8:	movw	r1, #546	; 0x222
   237bc:	bl	de74 <snprintf@plt>
   237c0:	mov	r0, r5
   237c4:	mov	r1, r4
   237c8:	bl	e6a8 <fputs@plt>
   237cc:	cmn	r0, #1
   237d0:	ble	237e0 <ilog+0xa0>
   237d4:	mov	r0, r4
   237d8:	bl	d25c <fflush@plt>
   237dc:	b	237f0 <ilog+0xb0>
   237e0:	mov	r0, r4
   237e4:	bl	e0f0 <fclose@plt>
   237e8:	mov	r0, #0
   237ec:	str	r0, [r6]
   237f0:	sub	sp, fp, #16
   237f4:	pop	{r4, r5, r6, sl, fp, lr}
   237f8:	add	sp, sp, #8
   237fc:	bx	lr
   23800:	.word	0x000366a0
   23804:	.word	0x0001f888
   23808:	.word	0x0004276c

0002380c <smalldate>:
   2380c:	push	{r4, sl, fp, lr}
   23810:	add	fp, sp, #8
   23814:	sub	sp, sp, #24
   23818:	str	r0, [fp, #-12]
   2381c:	sub	r0, fp, #12
   23820:	bl	db38 <localtime@plt>
   23824:	ldmib	r0, {r1, r2, r3, r4}
   23828:	ldr	r0, [r0, #20]
   2382c:	add	r4, r4, #1
   23830:	str	r4, [sp]
   23834:	str	r3, [sp, #4]
   23838:	str	r2, [sp, #8]
   2383c:	str	r1, [sp, #12]
   23840:	movw	r1, #1900	; 0x76c
   23844:	add	r3, r0, r1
   23848:	ldr	r4, [pc, #32]	; 23870 <smalldate+0x64>
   2384c:	add	r4, pc, r4
   23850:	ldr	r2, [pc, #28]	; 23874 <smalldate+0x68>
   23854:	add	r2, pc, r2
   23858:	mov	r0, r4
   2385c:	mov	r1, #32
   23860:	bl	de74 <snprintf@plt>
   23864:	mov	r0, r4
   23868:	sub	sp, fp, #8
   2386c:	pop	{r4, sl, fp, pc}
   23870:	.word	0x000426d0
   23874:	.word	0x0001f812

00023878 <idebug>:
   23878:	bx	lr

0002387c <inotice>:
   2387c:	sub	sp, sp, #12
   23880:	push	{r4, sl, fp, lr}
   23884:	add	fp, sp, #8
   23888:	sub	sp, sp, #516	; 0x204
   2388c:	mov	ip, r0
   23890:	add	r0, fp, #8
   23894:	stm	r0, {r1, r2, r3}
   23898:	add	r3, fp, #8
   2389c:	str	r3, [sp]
   238a0:	add	r4, sp, #4
   238a4:	mov	r0, r4
   238a8:	mov	r1, #512	; 0x200
   238ac:	mov	r2, ip
   238b0:	bl	e450 <vsnprintf@plt>
   238b4:	ldr	r0, [pc, #44]	; 238e8 <inotice+0x6c>
   238b8:	add	r0, pc, r0
   238bc:	mov	r1, r4
   238c0:	bl	238f0 <_iprint>
   238c4:	ldr	r1, [pc, #32]	; 238ec <inotice+0x70>
   238c8:	add	r1, pc, r1
   238cc:	mov	r0, #0
   238d0:	mov	r2, r4
   238d4:	bl	e0b4 <ilog@plt>
   238d8:	sub	sp, fp, #8
   238dc:	pop	{r4, sl, fp, lr}
   238e0:	add	sp, sp, #12
   238e4:	bx	lr
   238e8:	.word	0x00020c0c
   238ec:	.word	0x000240ed

000238f0 <_iprint>:
   238f0:	cmp	r0, #0
   238f4:	movne	r3, r1
   238f8:	cmpne	r1, #0
   238fc:	bxeq	lr
   23900:	mov	r2, r0
   23904:	ldr	r0, [pc, #16]	; 2391c <_iprint+0x2c>
   23908:	ldr	r0, [pc, r0]
   2390c:	ldr	r0, [r0]
   23910:	ldr	r1, [pc, #8]	; 23920 <_iprint+0x30>
   23914:	add	r1, pc, r1
   23918:	b	dd60 <fprintf@plt>
   2391c:	.word	0x00037050
   23920:	.word	0x0001f835

00023924 <iwarn>:
   23924:	sub	sp, sp, #12
   23928:	push	{r4, sl, fp, lr}
   2392c:	add	fp, sp, #8
   23930:	sub	sp, sp, #516	; 0x204
   23934:	mov	ip, r0
   23938:	add	r0, fp, #8
   2393c:	stm	r0, {r1, r2, r3}
   23940:	add	r3, fp, #8
   23944:	str	r3, [sp]
   23948:	add	r4, sp, #4
   2394c:	mov	r0, r4
   23950:	mov	r1, #512	; 0x200
   23954:	mov	r2, ip
   23958:	bl	e450 <vsnprintf@plt>
   2395c:	ldr	r0, [pc, #44]	; 23990 <iwarn+0x6c>
   23960:	add	r0, pc, r0
   23964:	mov	r1, r4
   23968:	bl	238f0 <_iprint>
   2396c:	ldr	r1, [pc, #32]	; 23994 <iwarn+0x70>
   23970:	add	r1, pc, r1
   23974:	mov	r0, #0
   23978:	mov	r2, r4
   2397c:	bl	e0b4 <ilog@plt>
   23980:	sub	sp, fp, #8
   23984:	pop	{r4, sl, fp, lr}
   23988:	add	sp, sp, #12
   2398c:	bx	lr
   23990:	.word	0x0001f6d7
   23994:	.word	0x00024045

00023998 <ierror>:
   23998:	sub	sp, sp, #12
   2399c:	push	{r4, sl, fp, lr}
   239a0:	add	fp, sp, #8
   239a4:	sub	sp, sp, #516	; 0x204
   239a8:	mov	ip, r0
   239ac:	add	r0, fp, #8
   239b0:	stm	r0, {r1, r2, r3}
   239b4:	add	r3, fp, #8
   239b8:	str	r3, [sp]
   239bc:	add	r4, sp, #4
   239c0:	mov	r0, r4
   239c4:	mov	r1, #512	; 0x200
   239c8:	mov	r2, ip
   239cc:	bl	e450 <vsnprintf@plt>
   239d0:	ldr	r0, [pc, #44]	; 23a04 <ierror+0x6c>
   239d4:	add	r0, pc, r0
   239d8:	mov	r1, r4
   239dc:	bl	238f0 <_iprint>
   239e0:	ldr	r1, [pc, #32]	; 23a08 <ierror+0x70>
   239e4:	add	r1, pc, r1
   239e8:	mov	r0, #0
   239ec:	mov	r2, r4
   239f0:	bl	e0b4 <ilog@plt>
   239f4:	sub	sp, fp, #8
   239f8:	pop	{r4, sl, fp, lr}
   239fc:	add	sp, sp, #12
   23a00:	bx	lr
   23a04:	.word	0x0002290f
   23a08:	.word	0x00023fd1

00023a0c <report_operspy>:
   23a0c:	push	{r4, r5, r6, r7, fp, lr}
   23a10:	add	fp, sp, #16
   23a14:	sub	sp, sp, #16
   23a18:	mov	r6, r2
   23a1c:	mov	r4, r1
   23a20:	mov	r5, r0
   23a24:	ldrb	r0, [r0, #65]	; 0x41
   23a28:	tst	r0, #32
   23a2c:	ldr	r7, [pc, #184]	; 23aec <report_operspy+0xe0>
   23a30:	add	r7, pc, r7
   23a34:	beq	23a80 <report_operspy+0x74>
   23a38:	ldrh	r0, [r5, #80]	; 0x50
   23a3c:	cmp	r0, #64	; 0x40
   23a40:	bne	23a80 <report_operspy+0x74>
   23a44:	cmp	r6, #0
   23a48:	mov	r0, r6
   23a4c:	moveq	r0, r7
   23a50:	ldr	r1, [pc, #152]	; 23af0 <report_operspy+0xe4>
   23a54:	ldr	r1, [pc, r1]
   23a58:	ldr	r2, [r1]
   23a5c:	ldr	r1, [pc, #144]	; 23af4 <report_operspy+0xe8>
   23a60:	add	r1, pc, r1
   23a64:	stm	sp, {r1, r4}
   23a68:	str	r0, [sp, #8]
   23a6c:	ldr	r1, [pc, #132]	; 23af8 <report_operspy+0xec>
   23a70:	add	r1, pc, r1
   23a74:	mov	r0, r5
   23a78:	mov	r3, #0
   23a7c:	bl	d0b8 <sendto_match_servs@plt>
   23a80:	cmp	r6, #0
   23a84:	movne	r7, r6
   23a88:	ldr	r0, [pc, #108]	; 23afc <report_operspy+0xf0>
   23a8c:	ldr	r0, [pc, r0]
   23a90:	ldr	r6, [r0, #180]	; 0xb4
   23a94:	mov	r0, r5
   23a98:	bl	d724 <get_oper_name@plt>
   23a9c:	mov	r3, r0
   23aa0:	stm	sp, {r4, r7}
   23aa4:	cmp	r6, #0
   23aa8:	movwne	r6, #1
   23aac:	lsl	r1, r6, #1
   23ab0:	ldr	r6, [pc, #72]	; 23b00 <report_operspy+0xf4>
   23ab4:	add	r6, pc, r6
   23ab8:	mov	r0, #4096	; 0x1000
   23abc:	mov	r2, r6
   23ac0:	bl	d634 <sendto_realops_snomask@plt>
   23ac4:	mov	r0, r5
   23ac8:	bl	d724 <get_oper_name@plt>
   23acc:	mov	r2, r0
   23ad0:	str	r7, [sp]
   23ad4:	mov	r0, #8
   23ad8:	mov	r1, r6
   23adc:	mov	r3, r4
   23ae0:	bl	e0b4 <ilog@plt>
   23ae4:	sub	sp, fp, #16
   23ae8:	pop	{r4, r5, r6, r7, fp, pc}
   23aec:	.word	0x00022125
   23af0:	.word	0x00037120
   23af4:	.word	0x0001f5df
   23af8:	.word	0x0001dc2d
   23afc:	.word	0x000370f0
   23b00:	.word	0x0001f5a1

00023b04 <ilog_error>:
   23b04:	push	{r4, r5, r6, r7, fp, lr}
   23b08:	add	fp, sp, #16
   23b0c:	sub	sp, sp, #8
   23b10:	mov	r4, r0
   23b14:	bl	de38 <__errno_location@plt>
   23b18:	ldr	r5, [r0]
   23b1c:	mov	r0, r5
   23b20:	bl	dac0 <strerror@plt>
   23b24:	mov	r6, r0
   23b28:	str	r0, [sp]
   23b2c:	ldr	r7, [pc, #52]	; 23b68 <ilog_error+0x64>
   23b30:	add	r7, pc, r7
   23b34:	mov	r0, #9
   23b38:	mov	r1, r7
   23b3c:	mov	r2, r4
   23b40:	mov	r3, r5
   23b44:	bl	e0b4 <ilog@plt>
   23b48:	stm	sp, {r5, r6}
   23b4c:	mov	r0, #8
   23b50:	mov	r1, #0
   23b54:	mov	r2, r7
   23b58:	mov	r3, r4
   23b5c:	bl	d634 <sendto_realops_snomask@plt>
   23b60:	sub	sp, fp, #16
   23b64:	pop	{r4, r5, r6, r7, fp, pc}
   23b68:	.word	0x0001f549

00023b6c <rb_free>:
   23b6c:	cmp	r0, #0
   23b70:	bxeq	lr
   23b74:	b	d328 <free@plt>

00023b78 <match>:
   23b78:	push	{r4, r5, r6, sl, fp, lr}
   23b7c:	add	fp, sp, #16
   23b80:	ldr	r6, [pc, #284]	; 23ca4 <match+0x12c>
   23b84:	ldr	r6, [pc, r6]
   23b88:	mov	r3, r0
   23b8c:	mov	ip, r0
   23b90:	mov	lr, r1
   23b94:	ldrb	r2, [r3]
   23b98:	cmp	r2, #0
   23b9c:	beq	23c64 <match+0xec>
   23ba0:	cmp	r2, #63	; 0x3f
   23ba4:	cmpne	r2, #42	; 0x2a
   23ba8:	bne	23c28 <match+0xb0>
   23bac:	mov	r4, #0
   23bb0:	b	23bbc <match+0x44>
   23bb4:	mov	r4, #1
   23bb8:	add	r3, r3, #1
   23bbc:	ldrb	r5, [r3]
   23bc0:	cmp	r5, #42	; 0x2a
   23bc4:	beq	23bb4 <match+0x3c>
   23bc8:	cmp	r5, #63	; 0x3f
   23bcc:	bne	23be4 <match+0x6c>
   23bd0:	ldrb	r2, [r1], #1
   23bd4:	cmp	r2, #0
   23bd8:	beq	23c70 <match+0xf8>
   23bdc:	add	r3, r3, #1
   23be0:	b	23bbc <match+0x44>
   23be4:	cmp	r4, #0
   23be8:	beq	23c28 <match+0xb0>
   23bec:	cmp	r5, #0
   23bf0:	beq	23c9c <match+0x124>
   23bf4:	ldrb	r2, [r1]
   23bf8:	cmp	r2, #0
   23bfc:	beq	23c84 <match+0x10c>
   23c00:	ldrb	r5, [r6, r5]
   23c04:	mov	r4, r1
   23c08:	uxtb	r2, r2
   23c0c:	ldrb	r2, [r6, r2]
   23c10:	cmp	r2, r5
   23c14:	beq	23c30 <match+0xb8>
   23c18:	ldrb	r2, [r4, #1]!
   23c1c:	cmp	r2, #0
   23c20:	bne	23c08 <match+0x90>
   23c24:	b	23c84 <match+0x10c>
   23c28:	mov	r4, r1
   23c2c:	b	23c38 <match+0xc0>
   23c30:	mov	ip, r3
   23c34:	mov	lr, r1
   23c38:	ldrb	r1, [r3]
   23c3c:	ldrb	r2, [r4]
   23c40:	cmp	r2, #0
   23c44:	beq	23c88 <match+0x110>
   23c48:	ldrb	r2, [r6, r2]
   23c4c:	ldrb	r1, [r6, r1]
   23c50:	cmp	r1, r2
   23c54:	bne	23c70 <match+0xf8>
   23c58:	add	r1, r4, #1
   23c5c:	add	r3, r3, #1
   23c60:	b	23b94 <match+0x1c>
   23c64:	ldrb	r1, [r1]
   23c68:	cmp	r1, #0
   23c6c:	beq	23c9c <match+0x124>
   23c70:	cmp	ip, r0
   23c74:	beq	23c94 <match+0x11c>
   23c78:	add	r1, lr, #1
   23c7c:	mov	r3, ip
   23c80:	b	23b90 <match+0x18>
   23c84:	ldrb	r1, [r3]
   23c88:	clz	r0, r1
   23c8c:	lsr	r0, r0, #5
   23c90:	pop	{r4, r5, r6, sl, fp, pc}
   23c94:	mov	r0, #0
   23c98:	pop	{r4, r5, r6, sl, fp, pc}
   23c9c:	mov	r0, #1
   23ca0:	pop	{r4, r5, r6, sl, fp, pc}
   23ca4:	.word	0x00036f58

00023ca8 <mask_match>:
   23ca8:	push	{r4, r5, r6, sl, fp, lr}
   23cac:	add	fp, sp, #16
   23cb0:	ldr	r6, [pc, #292]	; 23ddc <mask_match+0x134>
   23cb4:	ldr	r6, [pc, r6]
   23cb8:	mov	r3, r0
   23cbc:	mov	ip, r0
   23cc0:	mov	lr, r1
   23cc4:	ldrb	r2, [r3]
   23cc8:	cmp	r2, #0
   23ccc:	beq	23d9c <mask_match+0xf4>
   23cd0:	cmp	r2, #63	; 0x3f
   23cd4:	cmpne	r2, #42	; 0x2a
   23cd8:	bne	23d60 <mask_match+0xb8>
   23cdc:	mov	r4, #0
   23ce0:	b	23cec <mask_match+0x44>
   23ce4:	mov	r4, #1
   23ce8:	add	r3, r3, #1
   23cec:	ldrb	r5, [r3]
   23cf0:	cmp	r5, #42	; 0x2a
   23cf4:	beq	23ce4 <mask_match+0x3c>
   23cf8:	cmp	r5, #63	; 0x3f
   23cfc:	bne	23d1c <mask_match+0x74>
   23d00:	ldrb	r2, [r1]
   23d04:	cmp	r2, #0
   23d08:	cmpne	r2, #42	; 0x2a
   23d0c:	beq	23da8 <mask_match+0x100>
   23d10:	add	r1, r1, #1
   23d14:	add	r3, r3, #1
   23d18:	b	23cec <mask_match+0x44>
   23d1c:	cmp	r4, #0
   23d20:	beq	23d60 <mask_match+0xb8>
   23d24:	cmp	r5, #0
   23d28:	beq	23dd4 <mask_match+0x12c>
   23d2c:	ldrb	r2, [r1]
   23d30:	cmp	r2, #0
   23d34:	beq	23dc4 <mask_match+0x11c>
   23d38:	ldrb	r5, [r6, r5]
   23d3c:	mov	r4, r1
   23d40:	uxtb	r2, r2
   23d44:	ldrb	r2, [r6, r2]
   23d48:	cmp	r2, r5
   23d4c:	beq	23d90 <mask_match+0xe8>
   23d50:	ldrb	r2, [r4, #1]!
   23d54:	cmp	r2, #0
   23d58:	bne	23d40 <mask_match+0x98>
   23d5c:	b	23dc4 <mask_match+0x11c>
   23d60:	mov	r4, r1
   23d64:	ldrb	r1, [r3]
   23d68:	ldrb	r2, [r4]
   23d6c:	cmp	r2, #0
   23d70:	beq	23dc8 <mask_match+0x120>
   23d74:	ldrb	r2, [r6, r2]
   23d78:	ldrb	r1, [r6, r1]
   23d7c:	cmp	r1, r2
   23d80:	bne	23da8 <mask_match+0x100>
   23d84:	add	r1, r4, #1
   23d88:	add	r3, r3, #1
   23d8c:	b	23cc4 <mask_match+0x1c>
   23d90:	mov	ip, r3
   23d94:	mov	lr, r1
   23d98:	b	23d64 <mask_match+0xbc>
   23d9c:	ldrb	r1, [r1]
   23da0:	cmp	r1, #0
   23da4:	beq	23dd4 <mask_match+0x12c>
   23da8:	cmp	ip, r0
   23dac:	beq	23dbc <mask_match+0x114>
   23db0:	add	r1, lr, #1
   23db4:	mov	r3, ip
   23db8:	b	23cc0 <mask_match+0x18>
   23dbc:	mov	r0, #0
   23dc0:	pop	{r4, r5, r6, sl, fp, pc}
   23dc4:	ldrb	r1, [r3]
   23dc8:	clz	r0, r1
   23dcc:	lsr	r0, r0, #5
   23dd0:	pop	{r4, r5, r6, sl, fp, pc}
   23dd4:	mov	r0, #1
   23dd8:	pop	{r4, r5, r6, sl, fp, pc}
   23ddc:	.word	0x00036e28

00023de0 <match_esc>:
   23de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23de4:	add	fp, sp, #28
   23de8:	mov	r2, #0
   23dec:	cmp	r0, #0
   23df0:	cmpne	r1, #0
   23df4:	beq	2406c <match_esc+0x28c>
   23df8:	ldrb	r2, [r0]
   23dfc:	cmp	r2, #42	; 0x2a
   23e00:	bne	23e10 <match_esc+0x30>
   23e04:	ldrb	r2, [r0, #1]
   23e08:	cmp	r2, #0
   23e0c:	beq	24054 <match_esc+0x274>
   23e10:	mov	r8, #0
   23e14:	ldr	lr, [pc, #628]	; 24090 <match_esc+0x2b0>
   23e18:	ldr	lr, [pc, lr]
   23e1c:	ldr	ip, [pc, #624]	; 24094 <match_esc+0x2b4>
   23e20:	ldr	ip, [pc, ip]
   23e24:	mov	r5, r0
   23e28:	mov	r6, r0
   23e2c:	mov	r9, r1
   23e30:	mov	r7, #0
   23e34:	mov	r3, #0
   23e38:	cmp	r7, #512	; 0x200
   23e3c:	blt	23e64 <match_esc+0x84>
   23e40:	b	24048 <match_esc+0x268>
   23e44:	cmp	r1, #0
   23e48:	addne	r5, r5, #1
   23e4c:	mov	r1, sl
   23e50:	ldrb	r2, [r1], #1
   23e54:	cmp	r2, #0
   23e58:	moveq	r1, sl
   23e5c:	cmp	r7, #512	; 0x200
   23e60:	bge	24048 <match_esc+0x268>
   23e64:	add	r2, r5, #1
   23e68:	mov	r4, r7
   23e6c:	cmp	r3, #0
   23e70:	addne	r3, r3, #1
   23e74:	subs	r7, r3, #3
   23e78:	moveq	r3, r7
   23e7c:	ldrb	r7, [r5]
   23e80:	cmp	r3, #0
   23e84:	cmpeq	r7, #92	; 0x5c
   23e88:	bne	23ea8 <match_esc+0xc8>
   23e8c:	add	r4, r4, #1
   23e90:	add	r2, r2, #1
   23e94:	add	r5, r5, #1
   23e98:	mov	r3, #1
   23e9c:	cmp	r4, #512	; 0x200
   23ea0:	bne	23e6c <match_esc+0x8c>
   23ea4:	b	24048 <match_esc+0x268>
   23ea8:	cmp	r7, #42	; 0x2a
   23eac:	cmpeq	r3, #0
   23eb0:	beq	23ebc <match_esc+0xdc>
   23eb4:	ldrb	r2, [r5]
   23eb8:	b	23f14 <match_esc+0x134>
   23ebc:	add	r7, r4, #1
   23ec0:	mov	r5, r2
   23ec4:	ldrb	r2, [r5, #-1]
   23ec8:	cmp	r2, #42	; 0x2a
   23ecc:	bne	23ed8 <match_esc+0xf8>
   23ed0:	add	r5, r5, #1
   23ed4:	b	23ec4 <match_esc+0xe4>
   23ed8:	cmp	r2, #92	; 0x5c
   23edc:	bne	23f04 <match_esc+0x124>
   23ee0:	mov	r6, r5
   23ee4:	ldrb	r2, [r6], #-1
   23ee8:	mov	r8, #1
   23eec:	cmp	r2, #0
   23ef0:	mov	r9, r1
   23ef4:	mov	r3, #1
   23ef8:	mov	r2, #0
   23efc:	bne	23e5c <match_esc+0x7c>
   23f00:	b	2406c <match_esc+0x28c>
   23f04:	sub	r5, r5, #1
   23f08:	mov	r8, #1
   23f0c:	mov	r6, r5
   23f10:	mov	r9, r1
   23f14:	ldrb	r7, [r1]
   23f18:	cmp	r2, #0
   23f1c:	beq	23f30 <match_esc+0x150>
   23f20:	cmp	r7, #0
   23f24:	beq	24060 <match_esc+0x280>
   23f28:	mov	sl, r1
   23f2c:	b	23f88 <match_esc+0x1a8>
   23f30:	clz	r1, r7
   23f34:	lsr	r2, r1, #5
   23f38:	cmp	r3, #0
   23f3c:	cmpeq	r2, #0
   23f40:	bne	2406c <match_esc+0x28c>
   23f44:	sub	r2, r5, #1
   23f48:	cmp	r2, r0
   23f4c:	bls	23f74 <match_esc+0x194>
   23f50:	mov	r1, r2
   23f54:	ldrb	r5, [r2], #-1
   23f58:	cmp	r5, #63	; 0x3f
   23f5c:	beq	23f48 <match_esc+0x168>
   23f60:	ldrb	r2, [r1]
   23f64:	cmp	r2, #42	; 0x2a
   23f68:	bne	23f74 <match_esc+0x194>
   23f6c:	cmp	r1, r0
   23f70:	bhi	24054 <match_esc+0x274>
   23f74:	cmp	r8, #0
   23f78:	beq	24048 <match_esc+0x268>
   23f7c:	add	sl, r9, #1
   23f80:	mov	r5, r6
   23f84:	mov	r9, sl
   23f88:	add	r7, r4, #1
   23f8c:	ldrb	r1, [r5]
   23f90:	cmp	r3, #0
   23f94:	beq	23ff0 <match_esc+0x210>
   23f98:	mov	r4, #32
   23f9c:	cmp	r1, #115	; 0x73
   23fa0:	mov	r2, sl
   23fa4:	beq	23fb4 <match_esc+0x1d4>
   23fa8:	add	r2, lr, r1
   23fac:	ldrb	r4, [sl]
   23fb0:	ldrb	r4, [lr, r4]
   23fb4:	ldrb	r2, [r2]
   23fb8:	sub	r2, r2, r4
   23fbc:	clz	r2, r2
   23fc0:	lsr	r4, r2, #5
   23fc4:	cmp	r4, #0
   23fc8:	bne	23e44 <match_esc+0x64>
   23fcc:	cmp	r8, #0
   23fd0:	mov	r2, #0
   23fd4:	beq	2406c <match_esc+0x28c>
   23fd8:	add	r1, r9, #1
   23fdc:	mov	r5, r6
   23fe0:	mov	r9, r1
   23fe4:	cmp	r7, #512	; 0x200
   23fe8:	blt	23e64 <match_esc+0x84>
   23fec:	b	24048 <match_esc+0x268>
   23ff0:	cmp	r1, #35	; 0x23
   23ff4:	beq	24020 <match_esc+0x240>
   23ff8:	cmp	r1, #63	; 0x3f
   23ffc:	beq	23e44 <match_esc+0x64>
   24000:	cmp	r1, #64	; 0x40
   24004:	bne	24038 <match_esc+0x258>
   24008:	ldrb	r2, [sl]
   2400c:	ldr	r2, [ip, r2, lsl #2]
   24010:	and	r4, r2, #65536	; 0x10000
   24014:	cmp	r4, #0
   24018:	bne	23e44 <match_esc+0x64>
   2401c:	b	23fcc <match_esc+0x1ec>
   24020:	ldrb	r2, [sl]
   24024:	ldr	r2, [ip, r2, lsl #2]
   24028:	and	r4, r2, #16
   2402c:	cmp	r4, #0
   24030:	bne	23e44 <match_esc+0x64>
   24034:	b	23fcc <match_esc+0x1ec>
   24038:	ldrb	r2, [lr, r1]
   2403c:	ldrb	r4, [sl]
   24040:	ldrb	r4, [lr, r4]
   24044:	b	23fb8 <match_esc+0x1d8>
   24048:	mov	r2, #0
   2404c:	mov	r0, r2
   24050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24054:	mov	r2, #1
   24058:	mov	r0, r2
   2405c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24060:	cmp	r3, #0
   24064:	mov	r2, #0
   24068:	beq	24074 <match_esc+0x294>
   2406c:	mov	r0, r2
   24070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24074:	ldrb	r0, [r5], #1
   24078:	cmp	r0, #42	; 0x2a
   2407c:	beq	24074 <match_esc+0x294>
   24080:	clz	r0, r0
   24084:	lsr	r2, r0, #5
   24088:	mov	r0, r2
   2408c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24090:	.word	0x00036cc4
   24094:	.word	0x00036bd8

00024098 <comp_with_mask>:
   24098:	push	{r4, r5, r6, r7, fp, lr}
   2409c:	add	fp, sp, #16
   240a0:	mov	r7, r2
   240a4:	mov	r4, r1
   240a8:	mov	r5, r0
   240ac:	lsr	r6, r2, #3
   240b0:	mov	r2, r6
   240b4:	bl	dc88 <bcmp@plt>
   240b8:	mov	r1, r0
   240bc:	mov	r0, #0
   240c0:	cmp	r1, #0
   240c4:	popne	{r4, r5, r6, r7, fp, pc}
   240c8:	ands	r0, r7, #7
   240cc:	beq	240f4 <comp_with_mask+0x5c>
   240d0:	ldrb	r1, [r5, r6]
   240d4:	ldrb	r2, [r4, r6]
   240d8:	eor	r1, r2, r1
   240dc:	rsb	r0, r0, #8
   240e0:	mov	r2, #255	; 0xff
   240e4:	and	r0, r1, r2, lsl r0
   240e8:	clz	r0, r0
   240ec:	lsr	r0, r0, #5
   240f0:	pop	{r4, r5, r6, r7, fp, pc}
   240f4:	mov	r0, #1
   240f8:	pop	{r4, r5, r6, r7, fp, pc}

000240fc <comp_with_mask_sock>:
   240fc:	push	{fp, lr}
   24100:	mov	fp, sp
   24104:	mov	r3, r0
   24108:	ldrh	lr, [r3], #4
   2410c:	add	ip, r1, #8
   24110:	cmp	lr, #2
   24114:	addeq	ip, r1, #4
   24118:	addne	r3, r0, #8
   2411c:	mov	r0, r3
   24120:	mov	r1, ip
   24124:	pop	{fp, lr}
   24128:	b	24098 <comp_with_mask>

0002412c <match_ips>:
   2412c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24130:	add	fp, sp, #24
   24134:	sub	sp, sp, #832	; 0x340
   24138:	mov	r4, r1
   2413c:	mov	r1, r0
   24140:	add	r5, sp, #64	; 0x40
   24144:	mov	r0, r5
   24148:	mov	r2, #512	; 0x200
   2414c:	bl	e510 <rb_strlcpy@plt>
   24150:	mov	r0, sp
   24154:	mov	r1, r4
   24158:	mov	r2, #64	; 0x40
   2415c:	bl	e510 <rb_strlcpy@plt>
   24160:	mov	r0, r5
   24164:	mov	r1, #47	; 0x2f
   24168:	bl	e27c <strrchr@plt>
   2416c:	mov	r4, #0
   24170:	cmp	r0, #0
   24174:	beq	24248 <match_ips+0x11c>
   24178:	strb	r4, [r0], #1
   2417c:	bl	e468 <atoi@plt>
   24180:	cmp	r0, #1
   24184:	blt	24248 <match_ips+0x11c>
   24188:	mov	r5, r0
   2418c:	add	r0, sp, #64	; 0x40
   24190:	mov	r1, #58	; 0x3a
   24194:	bl	dce8 <strchr@plt>
   24198:	mov	r6, r0
   2419c:	mov	r0, sp
   241a0:	mov	r1, #58	; 0x3a
   241a4:	bl	dce8 <strchr@plt>
   241a8:	cmp	r6, #0
   241ac:	beq	241d8 <match_ips+0xac>
   241b0:	cmp	r5, #128	; 0x80
   241b4:	bgt	24248 <match_ips+0x11c>
   241b8:	cmp	r0, #0
   241bc:	beq	24248 <match_ips+0x11c>
   241c0:	sub	r0, fp, #280	; 0x118
   241c4:	add	r8, r0, #8
   241c8:	sub	r0, fp, #152	; 0x98
   241cc:	add	r7, r0, #8
   241d0:	mov	r6, #10
   241d4:	b	241fc <match_ips+0xd0>
   241d8:	cmp	r5, #32
   241dc:	bgt	24248 <match_ips+0x11c>
   241e0:	cmp	r0, #0
   241e4:	bne	24248 <match_ips+0x11c>
   241e8:	sub	r0, fp, #280	; 0x118
   241ec:	add	r8, r0, #4
   241f0:	sub	r0, fp, #152	; 0x98
   241f4:	add	r7, r0, #4
   241f8:	mov	r6, #2
   241fc:	mov	r1, sp
   24200:	mov	r0, r6
   24204:	mov	r2, r7
   24208:	bl	d814 <rb_inet_pton@plt>
   2420c:	cmp	r0, #1
   24210:	blt	24248 <match_ips+0x11c>
   24214:	add	r1, sp, #64	; 0x40
   24218:	mov	r0, r6
   2421c:	mov	r2, r8
   24220:	bl	d814 <rb_inet_pton@plt>
   24224:	cmp	r0, #1
   24228:	blt	24248 <match_ips+0x11c>
   2422c:	mov	r0, r7
   24230:	mov	r1, r8
   24234:	mov	r2, r5
   24238:	bl	d0a0 <comp_with_mask@plt>
   2423c:	mov	r4, r0
   24240:	cmp	r0, #0
   24244:	movwne	r4, #1
   24248:	mov	r0, r4
   2424c:	sub	sp, fp, #24
   24250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024254 <match_cidr>:
   24254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24258:	add	fp, sp, #28
   2425c:	sub	sp, sp, #884	; 0x374
   24260:	mov	r4, r1
   24264:	mov	r1, r0
   24268:	add	r5, sp, #112	; 0x70
   2426c:	mov	r0, r5
   24270:	mov	r2, #512	; 0x200
   24274:	bl	e510 <rb_strlcpy@plt>
   24278:	add	r0, sp, #1
   2427c:	mov	r1, r4
   24280:	mov	r2, #111	; 0x6f
   24284:	bl	e510 <rb_strlcpy@plt>
   24288:	mov	r0, r5
   2428c:	mov	r1, #64	; 0x40
   24290:	bl	e27c <strrchr@plt>
   24294:	cmp	r0, #0
   24298:	beq	243c8 <match_cidr+0x174>
   2429c:	mov	r5, r0
   242a0:	mov	r4, #0
   242a4:	strb	r4, [r5], #1
   242a8:	add	r0, sp, #1
   242ac:	mov	r1, #64	; 0x40
   242b0:	bl	e27c <strrchr@plt>
   242b4:	cmp	r0, #0
   242b8:	beq	243cc <match_cidr+0x178>
   242bc:	mov	r6, r0
   242c0:	mov	r4, #0
   242c4:	strb	r4, [r6], #1
   242c8:	mov	r0, r5
   242cc:	mov	r1, #47	; 0x2f
   242d0:	bl	e27c <strrchr@plt>
   242d4:	cmp	r0, #0
   242d8:	beq	243cc <match_cidr+0x178>
   242dc:	mov	r4, #0
   242e0:	strb	r4, [r0], #1
   242e4:	bl	e468 <atoi@plt>
   242e8:	cmp	r0, #1
   242ec:	blt	243cc <match_cidr+0x178>
   242f0:	mov	r8, r0
   242f4:	mov	r0, r6
   242f8:	mov	r1, #58	; 0x3a
   242fc:	bl	dce8 <strchr@plt>
   24300:	mov	r7, r0
   24304:	mov	r0, r5
   24308:	mov	r1, #58	; 0x3a
   2430c:	bl	dce8 <strchr@plt>
   24310:	cmp	r7, #0
   24314:	beq	24340 <match_cidr+0xec>
   24318:	cmp	r8, #128	; 0x80
   2431c:	bgt	243cc <match_cidr+0x178>
   24320:	cmp	r0, #0
   24324:	beq	243cc <match_cidr+0x178>
   24328:	sub	r0, fp, #288	; 0x120
   2432c:	add	r7, r0, #8
   24330:	sub	r0, fp, #160	; 0xa0
   24334:	add	r9, r0, #8
   24338:	mov	sl, #10
   2433c:	b	24364 <match_cidr+0x110>
   24340:	cmp	r8, #32
   24344:	bgt	243cc <match_cidr+0x178>
   24348:	cmp	r0, #0
   2434c:	bne	243cc <match_cidr+0x178>
   24350:	sub	r0, fp, #288	; 0x120
   24354:	add	r7, r0, #4
   24358:	sub	r0, fp, #160	; 0xa0
   2435c:	add	r9, r0, #4
   24360:	mov	sl, #2
   24364:	mov	r0, sl
   24368:	mov	r1, r6
   2436c:	mov	r2, r9
   24370:	bl	d814 <rb_inet_pton@plt>
   24374:	cmp	r0, #1
   24378:	blt	243cc <match_cidr+0x178>
   2437c:	mov	r0, sl
   24380:	mov	r1, r5
   24384:	mov	r2, r7
   24388:	bl	d814 <rb_inet_pton@plt>
   2438c:	cmp	r0, #1
   24390:	blt	243cc <match_cidr+0x178>
   24394:	mov	r0, r9
   24398:	mov	r1, r7
   2439c:	mov	r2, r8
   243a0:	bl	d0a0 <comp_with_mask@plt>
   243a4:	cmp	r0, #0
   243a8:	beq	243c8 <match_cidr+0x174>
   243ac:	add	r0, sp, #112	; 0x70
   243b0:	add	r1, sp, #1
   243b4:	bl	e114 <match@plt>
   243b8:	mov	r4, #1
   243bc:	cmp	r0, #0
   243c0:	moveq	r4, #0
   243c4:	b	243cc <match_cidr+0x178>
   243c8:	mov	r4, #0
   243cc:	mov	r0, r4
   243d0:	sub	sp, fp, #28
   243d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000243d8 <collapse>:
   243d8:	cmp	r0, #0
   243dc:	bxeq	lr
   243e0:	mov	r3, #0
   243e4:	mov	r2, r0
   243e8:	mov	ip, r0
   243ec:	add	r1, r2, #1
   243f0:	mov	r2, r1
   243f4:	ldrb	r1, [r1, #-1]
   243f8:	cmp	r1, #42	; 0x2a
   243fc:	bne	24420 <collapse+0x48>
   24400:	add	r1, r2, #1
   24404:	tst	r3, #1
   24408:	mov	r3, #1
   2440c:	bne	243f0 <collapse+0x18>
   24410:	mov	r1, #42	; 0x2a
   24414:	mov	r3, #1
   24418:	strb	r1, [ip], #1
   2441c:	b	243ec <collapse+0x14>
   24420:	cmp	r1, #0
   24424:	beq	24434 <collapse+0x5c>
   24428:	mov	r3, #0
   2442c:	strb	r1, [ip], #1
   24430:	b	243ec <collapse+0x14>
   24434:	mov	r1, #0
   24438:	strb	r1, [ip]
   2443c:	bx	lr

00024440 <collapse_esc>:
   24440:	cmp	r0, #0
   24444:	bxeq	lr
   24448:	push	{r4, r5, r6, sl, fp, lr}
   2444c:	add	fp, sp, #16
   24450:	ldrb	r4, [r0]
   24454:	cmp	r4, #0
   24458:	mov	r3, r0
   2445c:	beq	244d0 <collapse_esc+0x90>
   24460:	add	r1, r0, #1
   24464:	mov	r2, #0
   24468:	mov	ip, #42	; 0x2a
   2446c:	mov	lr, #92	; 0x5c
   24470:	mov	r3, r0
   24474:	b	24490 <collapse_esc+0x50>
   24478:	tst	r2, #1
   2447c:	strbeq	ip, [r3], #1
   24480:	orr	r2, r2, #1
   24484:	ldrb	r4, [r1], #1
   24488:	cmp	r4, #0
   2448c:	beq	244d0 <collapse_esc+0x90>
   24490:	ands	r6, r2, #2
   24494:	uxtbeq	r5, r4
   24498:	cmpeq	r5, #42	; 0x2a
   2449c:	beq	24478 <collapse_esc+0x38>
   244a0:	add	r5, r3, #1
   244a4:	cmp	r6, #0
   244a8:	uxtbeq	r6, r4
   244ac:	cmpeq	r6, #92	; 0x5c
   244b0:	beq	244c0 <collapse_esc+0x80>
   244b4:	strb	r4, [r3]
   244b8:	mov	r2, #0
   244bc:	b	244c8 <collapse_esc+0x88>
   244c0:	strb	lr, [r3]
   244c4:	orr	r2, r2, #2
   244c8:	mov	r3, r5
   244cc:	b	24484 <collapse_esc+0x44>
   244d0:	mov	r1, #0
   244d4:	strb	r1, [r3]
   244d8:	pop	{r4, r5, r6, sl, fp, lr}
   244dc:	bx	lr

000244e0 <irccmp>:
   244e0:	push	{r4, r5, fp, lr}
   244e4:	add	fp, sp, #8
   244e8:	mov	ip, r0
   244ec:	ldrb	r0, [r1]
   244f0:	ldr	r5, [pc, #80]	; 24548 <irccmp+0x68>
   244f4:	ldr	r5, [pc, r5]
   244f8:	ldrb	lr, [r5, r0]
   244fc:	ldrb	r2, [ip]
   24500:	ldrb	r0, [r5, r2]
   24504:	sub	r0, r0, lr
   24508:	cmp	r2, #0
   2450c:	beq	24544 <irccmp+0x64>
   24510:	cmp	r0, #0
   24514:	bne	24544 <irccmp+0x64>
   24518:	add	r2, ip, #1
   2451c:	add	r1, r1, #1
   24520:	ldrb	r0, [r1], #1
   24524:	ldrb	r0, [r5, r0]
   24528:	ldrb	r3, [r2], #1
   2452c:	ldrb	r4, [r5, r3]
   24530:	sub	r0, r4, r0
   24534:	cmp	r3, #0
   24538:	beq	24544 <irccmp+0x64>
   2453c:	cmp	r0, #0
   24540:	beq	24520 <irccmp+0x40>
   24544:	pop	{r4, r5, fp, pc}
   24548:	.word	0x00036474

0002454c <ircncmp>:
   2454c:	push	{fp, lr}
   24550:	mov	fp, sp
   24554:	mov	ip, r0
   24558:	ldrb	r0, [r1]
   2455c:	ldr	lr, [pc, #104]	; 245cc <ircncmp+0x80>
   24560:	ldr	lr, [pc, lr]
   24564:	ldrb	r0, [lr, r0]
   24568:	ldrb	r3, [ip]
   2456c:	ldrb	r3, [lr, r3]
   24570:	subs	r0, r3, r0
   24574:	popne	{fp, pc}
   24578:	sub	r2, r2, #1
   2457c:	add	r3, ip, #1
   24580:	add	ip, r1, #1
   24584:	b	245a4 <ircncmp+0x58>
   24588:	ldrb	r0, [ip], #1
   2458c:	ldrb	r0, [lr, r0]
   24590:	ldrb	r1, [r3], #1
   24594:	ldrb	r1, [lr, r1]
   24598:	subs	r0, r1, r0
   2459c:	sub	r2, r2, #1
   245a0:	bne	245c8 <ircncmp+0x7c>
   245a4:	mov	r0, #0
   245a8:	cmp	r2, #0
   245ac:	beq	245c8 <ircncmp+0x7c>
   245b0:	ldrb	r1, [r3]
   245b4:	cmp	r1, #0
   245b8:	bne	24588 <ircncmp+0x3c>
   245bc:	ldrb	r1, [ip]
   245c0:	cmp	r1, #0
   245c4:	bne	24588 <ircncmp+0x3c>
   245c8:	pop	{fp, pc}
   245cc:	.word	0x00036408

000245d0 <matchset_for_client>:
   245d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245d4:	add	fp, sp, #28
   245d8:	sub	sp, sp, #28
   245dc:	mov	r5, r1
   245e0:	mov	r7, r0
   245e4:	add	r4, r0, #163	; 0xa3
   245e8:	str	r4, [sp]
   245ec:	add	r9, r0, #88	; 0x58
   245f0:	add	r6, r0, #152	; 0x98
   245f4:	ldr	r1, [pc, #400]	; 2478c <matchset_for_client+0x1bc>
   245f8:	add	r1, pc, r1
   245fc:	mov	r0, r5
   24600:	mov	r2, r9
   24604:	mov	r3, r6
   24608:	bl	e3a8 <sprintf@plt>
   2460c:	ldrb	r0, [r7, #67]	; 0x43
   24610:	mov	r1, #0
   24614:	tst	r0, #1
   24618:	bne	24644 <matchset_for_client+0x74>
   2461c:	movw	r0, #291	; 0x123
   24620:	add	r0, r7, r0
   24624:	str	r0, [sp]
   24628:	add	r0, r5, #284	; 0x11c
   2462c:	ldr	r1, [pc, #348]	; 24790 <matchset_for_client+0x1c0>
   24630:	add	r1, pc, r1
   24634:	mov	r2, r9
   24638:	mov	r3, r6
   2463c:	bl	e3a8 <sprintf@plt>
   24640:	mov	r1, #1
   24644:	str	r6, [sp, #4]
   24648:	str	r1, [sp, #8]
   2464c:	mov	r6, r5
   24650:	add	r8, r7, #64	; 0x40
   24654:	ldr	r0, [r7, #432]	; 0x1b0
   24658:	ldr	r5, [r0, #432]	; 0x1b0
   2465c:	mov	sl, #1
   24660:	cmp	r5, #0
   24664:	beq	246b4 <matchset_for_client+0xe4>
   24668:	mov	r0, r4
   2466c:	mov	r1, r5
   24670:	bl	d0c4 <strcmp@plt>
   24674:	cmp	r0, #0
   24678:	beq	24690 <matchset_for_client+0xc0>
   2467c:	ldrb	r0, [r8, #2]
   24680:	tst	r0, #2
   24684:	bne	246b4 <matchset_for_client+0xe4>
   24688:	str	r5, [sp]
   2468c:	b	24698 <matchset_for_client+0xc8>
   24690:	add	r0, r7, #227	; 0xe3
   24694:	str	r0, [sp]
   24698:	add	r0, r6, #142	; 0x8e
   2469c:	ldr	r1, [pc, #240]	; 24794 <matchset_for_client+0x1c4>
   246a0:	add	r1, pc, r1
   246a4:	mov	r2, r9
   246a8:	ldr	r3, [sp, #4]
   246ac:	bl	e3a8 <sprintf@plt>
   246b0:	mov	sl, #2
   246b4:	ldrb	r0, [r8, #3]
   246b8:	tst	r0, #1
   246bc:	bne	2472c <matchset_for_client+0x15c>
   246c0:	ldr	r0, [r7, #432]	; 0x1b0
   246c4:	ldrh	r1, [r0, #140]!	; 0x8c
   246c8:	cmp	r1, #10
   246cc:	bne	2477c <matchset_for_client+0x1ac>
   246d0:	add	r1, sp, #12
   246d4:	bl	d880 <rb_ipv4_from_ipv6@plt>
   246d8:	cmp	r0, #0
   246dc:	ldr	r5, [sp, #8]
   246e0:	beq	24730 <matchset_for_client+0x160>
   246e4:	add	r0, r5, r5, lsl #5
   246e8:	add	r0, r6, r0, lsl #2
   246ec:	add	r4, r0, #284	; 0x11c
   246f0:	ldr	r1, [pc, #160]	; 24798 <matchset_for_client+0x1c8>
   246f4:	add	r1, pc, r1
   246f8:	mov	r0, r4
   246fc:	mov	r2, r9
   24700:	ldr	r3, [sp, #4]
   24704:	bl	e3a8 <sprintf@plt>
   24708:	add	r1, r4, r0
   2470c:	add	r1, r1, #132	; 0x84
   24710:	rsb	r2, r0, #132	; 0x84
   24714:	add	r0, sp, #12
   24718:	bl	cf50 <rb_inet_ntop_sock@plt>
   2471c:	add	r5, r5, #1
   24720:	cmp	sl, #2
   24724:	bcc	24738 <matchset_for_client+0x168>
   24728:	b	24748 <matchset_for_client+0x178>
   2472c:	ldr	r5, [sp, #8]
   24730:	cmp	sl, #2
   24734:	bcs	24748 <matchset_for_client+0x178>
   24738:	mov	r0, #142	; 0x8e
   2473c:	smulbb	r0, sl, r0
   24740:	mov	r1, #0
   24744:	strb	r1, [r6, r0]
   24748:	cmp	r5, #1
   2474c:	bhi	24774 <matchset_for_client+0x1a4>
   24750:	add	r0, r6, #284	; 0x11c
   24754:	add	r1, r5, r5, lsl #5
   24758:	rsb	r1, r1, #0
   2475c:	lsl	r1, r1, #2
   24760:	mov	r2, #0
   24764:	strb	r2, [r0, -r1]
   24768:	sub	r1, r1, #132	; 0x84
   2476c:	cmn	r1, #264	; 0x108
   24770:	bne	24764 <matchset_for_client+0x194>
   24774:	sub	sp, fp, #28
   24778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2477c:	ldr	r5, [sp, #8]
   24780:	cmp	sl, #2
   24784:	bcc	24738 <matchset_for_client+0x168>
   24788:	b	24748 <matchset_for_client+0x178>
   2478c:	.word	0x0001c9c4
   24790:	.word	0x0001c98c
   24794:	.word	0x0001c91c
   24798:	.word	0x0001ea5e

0002479c <client_matches_mask>:
   2479c:	push	{r4, r5, fp, lr}
   247a0:	add	fp, sp, #8
   247a4:	mov	r4, r1
   247a8:	ldr	r5, [pc, #24]	; 247c8 <client_matches_mask+0x2c>
   247ac:	add	r5, pc, r5
   247b0:	mov	r1, r5
   247b4:	bl	e018 <matchset_for_client@plt>
   247b8:	mov	r0, r5
   247bc:	mov	r1, r4
   247c0:	pop	{r4, r5, fp, lr}
   247c4:	b	247cc <matches_mask>
   247c8:	.word	0x000417b4

000247cc <matches_mask>:
   247cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   247d0:	add	fp, sp, #24
   247d4:	mov	r4, r1
   247d8:	mov	r5, r0
   247dc:	mov	r6, #0
   247e0:	mov	r1, r5
   247e4:	ldrb	r0, [r1, r6]!
   247e8:	cmp	r0, #0
   247ec:	beq	2480c <matches_mask+0x40>
   247f0:	mov	r0, r4
   247f4:	bl	e114 <match@plt>
   247f8:	cmp	r0, #0
   247fc:	bne	24868 <matches_mask+0x9c>
   24800:	add	r6, r6, #142	; 0x8e
   24804:	cmp	r6, #284	; 0x11c
   24808:	bne	247e0 <matches_mask+0x14>
   2480c:	add	r8, r5, #284	; 0x11c
   24810:	mov	r7, #0
   24814:	mov	r5, #1
   24818:	mov	r6, r8
   2481c:	ldrb	r0, [r6, r7]!
   24820:	cmp	r0, #0
   24824:	beq	2485c <matches_mask+0x90>
   24828:	mov	r0, r4
   2482c:	mov	r1, r6
   24830:	bl	e114 <match@plt>
   24834:	cmp	r0, #0
   24838:	bne	2486c <matches_mask+0xa0>
   2483c:	mov	r0, r4
   24840:	mov	r1, r6
   24844:	bl	d58c <match_cidr@plt>
   24848:	cmp	r0, #0
   2484c:	bne	2486c <matches_mask+0xa0>
   24850:	add	r7, r7, #132	; 0x84
   24854:	cmp	r7, #264	; 0x108
   24858:	bne	24818 <matches_mask+0x4c>
   2485c:	mov	r5, #0
   24860:	mov	r0, r5
   24864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24868:	mov	r5, #1
   2486c:	mov	r0, r5
   24870:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024874 <init_modules>:
   24874:	push	{r4, sl, fp, lr}
   24878:	add	fp, sp, #8
   2487c:	bl	dcd0 <lt_dlinit@plt>
   24880:	cmp	r0, #0
   24884:	bne	248a4 <init_modules+0x30>
   24888:	ldr	r4, [pc, #48]	; 248c0 <init_modules+0x4c>
   2488c:	ldr	r4, [pc, r4]
   24890:	ldr	r0, [r4, #4]
   24894:	bl	e564 <mod_add_path@plt>
   24898:	ldr	r0, [r4, #8]
   2489c:	pop	{r4, sl, fp, lr}
   248a0:	b	248c4 <mod_add_path>
   248a4:	ldr	r1, [pc, #16]	; 248bc <init_modules+0x48>
   248a8:	add	r1, pc, r1
   248ac:	mov	r0, #0
   248b0:	bl	e0b4 <ilog@plt>
   248b4:	mov	r0, #1
   248b8:	bl	dc28 <exit@plt>
   248bc:	.word	0x0001eab1
   248c0:	.word	0x000361bc

000248c4 <mod_add_path>:
   248c4:	push	{r4, sl, fp, lr}
   248c8:	add	fp, sp, #8
   248cc:	mov	r4, r0
   248d0:	bl	24a04 <mod_find_path>
   248d4:	cmp	r0, #0
   248d8:	popne	{r4, sl, fp, pc}
   248dc:	mov	r0, r4
   248e0:	bl	24a58 <rb_strdup>
   248e4:	mov	r4, r0
   248e8:	bl	dc58 <rb_make_rb_dlink_node@plt>
   248ec:	mov	r1, r0
   248f0:	ldr	r2, [pc, #12]	; 24904 <mod_add_path+0x40>
   248f4:	ldr	r2, [pc, r2]
   248f8:	mov	r0, r4
   248fc:	pop	{r4, sl, fp, lr}
   24900:	b	24a88 <rb_dlinkAdd>
   24904:	.word	0x00036218

00024908 <mod_remember_clicaps>:
   24908:	push	{fp, lr}
   2490c:	mov	fp, sp
   24910:	ldr	r0, [pc, #24]	; 24930 <mod_remember_clicaps+0x28>
   24914:	ldr	r0, [pc, r0]
   24918:	ldr	r0, [r0]
   2491c:	bl	d8f8 <capability_index_mask@plt>
   24920:	ldr	r1, [pc, #12]	; 24934 <mod_remember_clicaps+0x2c>
   24924:	add	r1, pc, r1
   24928:	str	r0, [r1]
   2492c:	pop	{fp, pc}
   24930:	.word	0x000360cc
   24934:	.word	0x00041860

00024938 <mod_notify_clicaps>:
   24938:	push	{r4, r5, r6, sl, fp, lr}
   2493c:	add	fp, sp, #16
   24940:	ldr	r6, [pc, #156]	; 249e4 <mod_notify_clicaps+0xac>
   24944:	ldr	r6, [pc, r6]
   24948:	ldr	r0, [r6]
   2494c:	bl	d8f8 <capability_index_mask@plt>
   24950:	ldr	r1, [pc, #144]	; 249e8 <mod_notify_clicaps+0xb0>
   24954:	ldr	r1, [pc, r1]
   24958:	bic	r4, r0, r1
   2495c:	bic	r1, r1, r0
   24960:	cmp	r1, #0
   24964:	beq	2499c <mod_notify_clicaps+0x64>
   24968:	ldr	r0, [pc, #124]	; 249ec <mod_notify_clicaps+0xb4>
   2496c:	ldr	r0, [pc, r0]
   24970:	ldr	r5, [r0]
   24974:	ldr	r0, [r6]
   24978:	bl	deec <capability_index_list@plt>
   2497c:	mov	r3, r0
   24980:	ldr	r0, [pc, #104]	; 249f0 <mod_notify_clicaps+0xb8>
   24984:	ldr	r0, [pc, r0]
   24988:	add	r2, r0, #88	; 0x58
   2498c:	ldr	r1, [pc, #96]	; 249f4 <mod_notify_clicaps+0xbc>
   24990:	add	r1, pc, r1
   24994:	mov	r0, r5
   24998:	bl	dd90 <sendto_local_clients_with_capability@plt>
   2499c:	cmp	r4, #0
   249a0:	beq	249e0 <mod_notify_clicaps+0xa8>
   249a4:	ldr	r0, [pc, #76]	; 249f8 <mod_notify_clicaps+0xc0>
   249a8:	ldr	r0, [pc, r0]
   249ac:	ldr	r5, [r0]
   249b0:	ldr	r0, [r6]
   249b4:	mov	r1, r4
   249b8:	bl	deec <capability_index_list@plt>
   249bc:	mov	r3, r0
   249c0:	ldr	r0, [pc, #52]	; 249fc <mod_notify_clicaps+0xc4>
   249c4:	ldr	r0, [pc, r0]
   249c8:	add	r2, r0, #88	; 0x58
   249cc:	ldr	r1, [pc, #44]	; 24a00 <mod_notify_clicaps+0xc8>
   249d0:	add	r1, pc, r1
   249d4:	mov	r0, r5
   249d8:	pop	{r4, r5, r6, sl, fp, lr}
   249dc:	b	dd90 <sendto_local_clients_with_capability@plt>
   249e0:	pop	{r4, r5, r6, sl, fp, pc}
   249e4:	.word	0x0003609c
   249e8:	.word	0x00041830
   249ec:	.word	0x0003612c
   249f0:	.word	0x000361d4
   249f4:	.word	0x0001e9da
   249f8:	.word	0x000360f0
   249fc:	.word	0x00036194
   24a00:	.word	0x0001e9ac

00024a04 <mod_find_path>:
   24a04:	push	{r4, r5, r6, sl, fp, lr}
   24a08:	add	fp, sp, #16
   24a0c:	mov	r4, r0
   24a10:	ldr	r0, [pc, #60]	; 24a54 <mod_find_path+0x50>
   24a14:	ldr	r0, [pc, r0]
   24a18:	ldr	r6, [r0]
   24a1c:	cmp	r6, #0
   24a20:	beq	24a48 <mod_find_path+0x44>
   24a24:	ldr	r5, [r6]
   24a28:	mov	r0, r4
   24a2c:	mov	r1, r5
   24a30:	bl	d0c4 <strcmp@plt>
   24a34:	cmp	r0, #0
   24a38:	beq	24a4c <mod_find_path+0x48>
   24a3c:	ldr	r6, [r6, #8]
   24a40:	cmp	r6, #0
   24a44:	bne	24a24 <mod_find_path+0x20>
   24a48:	mov	r5, #0
   24a4c:	mov	r0, r5
   24a50:	pop	{r4, r5, r6, sl, fp, pc}
   24a54:	.word	0x000360f8

00024a58 <rb_strdup>:
   24a58:	push	{r4, sl, fp, lr}
   24a5c:	add	fp, sp, #8
   24a60:	mov	r4, r0
   24a64:	bl	dc94 <strlen@plt>
   24a68:	add	r0, r0, #1
   24a6c:	bl	da84 <malloc@plt>
   24a70:	cmp	r0, #0
   24a74:	beq	24a84 <rb_strdup+0x2c>
   24a78:	mov	r1, r4
   24a7c:	pop	{r4, sl, fp, lr}
   24a80:	b	d91c <strcpy@plt>
   24a84:	bl	d448 <rb_outofmemory@plt>

00024a88 <rb_dlinkAdd>:
   24a88:	push	{fp, lr}
   24a8c:	mov	fp, sp
   24a90:	cmp	r0, #0
   24a94:	beq	24af4 <rb_dlinkAdd+0x6c>
   24a98:	cmp	r1, #0
   24a9c:	beq	24b14 <rb_dlinkAdd+0x8c>
   24aa0:	cmp	r2, #0
   24aa4:	beq	24b34 <rb_dlinkAdd+0xac>
   24aa8:	mov	r3, #0
   24aac:	stm	r1, {r0, r3}
   24ab0:	ldr	r0, [r2]
   24ab4:	str	r0, [r1, #8]
   24ab8:	ldr	r0, [r2]
   24abc:	cmp	r0, #0
   24ac0:	beq	24ad0 <rb_dlinkAdd+0x48>
   24ac4:	add	r0, r0, #4
   24ac8:	str	r1, [r0]
   24acc:	b	24ae0 <rb_dlinkAdd+0x58>
   24ad0:	mov	r0, r2
   24ad4:	ldr	r3, [r0, #4]!
   24ad8:	cmp	r3, #0
   24adc:	streq	r1, [r0]
   24ae0:	str	r1, [r2]
   24ae4:	ldr	r0, [r2, #8]
   24ae8:	add	r0, r0, #1
   24aec:	str	r0, [r2, #8]
   24af0:	pop	{fp, pc}
   24af4:	ldr	r0, [pc, #88]	; 24b54 <rb_dlinkAdd+0xcc>
   24af8:	add	r0, pc, r0
   24afc:	ldr	r1, [pc, #84]	; 24b58 <rb_dlinkAdd+0xd0>
   24b00:	add	r1, pc, r1
   24b04:	ldr	r3, [pc, #80]	; 24b5c <rb_dlinkAdd+0xd4>
   24b08:	add	r3, pc, r3
   24b0c:	mov	r2, #143	; 0x8f
   24b10:	bl	e7e0 <__assert_fail@plt>
   24b14:	ldr	r0, [pc, #68]	; 24b60 <rb_dlinkAdd+0xd8>
   24b18:	add	r0, pc, r0
   24b1c:	ldr	r1, [pc, #64]	; 24b64 <rb_dlinkAdd+0xdc>
   24b20:	add	r1, pc, r1
   24b24:	ldr	r3, [pc, #60]	; 24b68 <rb_dlinkAdd+0xe0>
   24b28:	add	r3, pc, r3
   24b2c:	mov	r2, #144	; 0x90
   24b30:	bl	e7e0 <__assert_fail@plt>
   24b34:	ldr	r0, [pc, #48]	; 24b6c <rb_dlinkAdd+0xe4>
   24b38:	add	r0, pc, r0
   24b3c:	ldr	r1, [pc, #44]	; 24b70 <rb_dlinkAdd+0xe8>
   24b40:	add	r1, pc, r1
   24b44:	ldr	r3, [pc, #40]	; 24b74 <rb_dlinkAdd+0xec>
   24b48:	add	r3, pc, r3
   24b4c:	mov	r2, #145	; 0x91
   24b50:	bl	e7e0 <__assert_fail@plt>
   24b54:	.word	0x0001be79
   24b58:	.word	0x0001be16
   24b5c:	.word	0x0001be76
   24b60:	.word	0x0001bdf4
   24b64:	.word	0x0001bdf6
   24b68:	.word	0x0001be56
   24b6c:	.word	0x0002165d
   24b70:	.word	0x0001bdd6
   24b74:	.word	0x0001be36

00024b78 <mod_clear_paths>:
   24b78:	push	{r4, r5, r6, sl, fp, lr}
   24b7c:	add	fp, sp, #16
   24b80:	ldr	r5, [pc, #64]	; 24bc8 <mod_clear_paths+0x50>
   24b84:	ldr	r5, [pc, r5]
   24b88:	ldr	r4, [r5]
   24b8c:	cmp	r4, #0
   24b90:	beq	24bb4 <mod_clear_paths+0x3c>
   24b94:	ldr	r0, [r4]
   24b98:	ldr	r6, [r4, #8]
   24b9c:	bl	24bcc <rb_free>
   24ba0:	mov	r0, r4
   24ba4:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   24ba8:	cmp	r6, #0
   24bac:	mov	r4, r6
   24bb0:	bne	24b94 <mod_clear_paths+0x1c>
   24bb4:	mov	r0, #0
   24bb8:	str	r0, [r5]
   24bbc:	str	r0, [r5, #4]
   24bc0:	str	r0, [r5, #8]
   24bc4:	pop	{r4, r5, r6, sl, fp, pc}
   24bc8:	.word	0x00035f88

00024bcc <rb_free>:
   24bcc:	cmp	r0, #0
   24bd0:	bxeq	lr
   24bd4:	b	d328 <free@plt>

00024bd8 <findmodule_byname>:
   24bd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24bdc:	add	fp, sp, #24
   24be0:	sub	sp, sp, #8
   24be4:	sub	sp, sp, #4096	; 0x1000
   24be8:	mov	r4, r0
   24bec:	add	r5, sp, #7
   24bf0:	mov	r0, r5
   24bf4:	mov	r1, r4
   24bf8:	movw	r2, #4097	; 0x1001
   24bfc:	bl	e510 <rb_strlcpy@plt>
   24c00:	ldr	r1, [pc, #108]	; 24c74 <findmodule_byname+0x9c>
   24c04:	add	r1, pc, r1
   24c08:	mov	r0, r5
   24c0c:	movw	r2, #4097	; 0x1001
   24c10:	bl	e7d4 <rb_strlcat@plt>
   24c14:	ldr	r0, [pc, #92]	; 24c78 <findmodule_byname+0xa0>
   24c18:	ldr	r0, [pc, r0]
   24c1c:	ldr	r7, [r0]
   24c20:	cmp	r7, #0
   24c24:	beq	24c64 <findmodule_byname+0x8c>
   24c28:	add	r5, sp, #7
   24c2c:	ldr	r6, [r7]
   24c30:	ldr	r0, [r6]
   24c34:	mov	r1, r4
   24c38:	bl	e750 <irccmp@plt>
   24c3c:	cmp	r0, #0
   24c40:	beq	24c68 <findmodule_byname+0x90>
   24c44:	ldr	r0, [r6]
   24c48:	mov	r1, r5
   24c4c:	bl	e750 <irccmp@plt>
   24c50:	cmp	r0, #0
   24c54:	beq	24c68 <findmodule_byname+0x90>
   24c58:	ldr	r7, [r7, #8]
   24c5c:	cmp	r7, #0
   24c60:	bne	24c2c <findmodule_byname+0x54>
   24c64:	mov	r6, #0
   24c68:	mov	r0, r6
   24c6c:	sub	sp, fp, #24
   24c70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   24c74:	.word	0x0001e78a
   24c78:	.word	0x00035ed8

00024c7c <load_all_modules>:
   24c7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c80:	add	fp, sp, #28
   24c84:	sub	sp, sp, #20
   24c88:	sub	sp, sp, #4096	; 0x1000
   24c8c:	mov	sl, r0
   24c90:	ldr	r8, [pc, #240]	; 24d88 <load_all_modules+0x10c>
   24c94:	ldr	r8, [pc, r8]
   24c98:	ldr	r0, [r8, #8]
   24c9c:	bl	d9e8 <opendir@plt>
   24ca0:	cmp	r0, #0
   24ca4:	beq	24d58 <load_all_modules+0xdc>
   24ca8:	mov	r5, r0
   24cac:	bl	e264 <readdir@plt>
   24cb0:	cmp	r0, #0
   24cb4:	beq	24d48 <load_all_modules+0xcc>
   24cb8:	mov	r7, r0
   24cbc:	ldr	r6, [pc, #200]	; 24d8c <load_all_modules+0x110>
   24cc0:	add	r6, pc, r6
   24cc4:	add	r9, sp, #15
   24cc8:	b	24ce0 <load_all_modules+0x64>
   24ccc:	mov	r0, r5
   24cd0:	bl	e264 <readdir@plt>
   24cd4:	mov	r7, r0
   24cd8:	cmp	r0, #0
   24cdc:	beq	24d48 <load_all_modules+0xcc>
   24ce0:	add	r4, r7, #11
   24ce4:	mov	r0, r4
   24ce8:	bl	dc94 <strlen@plt>
   24cec:	cmp	r0, #4
   24cf0:	bcc	24ccc <load_all_modules+0x50>
   24cf4:	add	r0, r0, r7
   24cf8:	add	r0, r0, #8
   24cfc:	mov	r1, r6
   24d00:	mov	r2, #3
   24d04:	bl	d538 <rb_strncasecmp@plt>
   24d08:	cmp	r0, #0
   24d0c:	bne	24ccc <load_all_modules+0x50>
   24d10:	ldr	r3, [r8, #8]
   24d14:	mov	r0, #47	; 0x2f
   24d18:	stm	sp, {r0, r4}
   24d1c:	mov	r0, r9
   24d20:	movw	r1, #4097	; 0x1001
   24d24:	ldr	r2, [pc, #100]	; 24d90 <load_all_modules+0x114>
   24d28:	add	r2, pc, r2
   24d2c:	bl	de74 <snprintf@plt>
   24d30:	mov	r0, r9
   24d34:	mov	r1, sl
   24d38:	mov	r2, #2
   24d3c:	mov	r3, #0
   24d40:	bl	dfa0 <load_a_module@plt>
   24d44:	b	24ccc <load_all_modules+0x50>
   24d48:	mov	r0, r5
   24d4c:	bl	e75c <closedir@plt>
   24d50:	sub	sp, fp, #28
   24d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d58:	ldr	r4, [r8, #8]
   24d5c:	bl	de38 <__errno_location@plt>
   24d60:	ldr	r0, [r0]
   24d64:	bl	dac0 <strerror@plt>
   24d68:	mov	r3, r0
   24d6c:	ldr	r1, [pc, #32]	; 24d94 <load_all_modules+0x118>
   24d70:	add	r1, pc, r1
   24d74:	mov	r0, #0
   24d78:	mov	r2, r4
   24d7c:	bl	e0b4 <ilog@plt>
   24d80:	sub	sp, fp, #28
   24d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d88:	.word	0x00035db4
   24d8c:	.word	0x0001e6ce
   24d90:	.word	0x0001be19
   24d94:	.word	0x0001e622

00024d98 <load_a_module>:
   24d98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d9c:	add	fp, sp, #28
   24da0:	sub	sp, sp, #44	; 0x2c
   24da4:	mov	sl, r3
   24da8:	mov	r9, r2
   24dac:	mov	r8, r1
   24db0:	mov	r6, r0
   24db4:	bl	da30 <rb_basename@plt>
   24db8:	mov	r4, r0
   24dbc:	ldr	r1, [pc, #1524]	; 253b8 <load_a_module+0x620>
   24dc0:	add	r1, pc, r1
   24dc4:	bl	e3b4 <rb_strcasestr@plt>
   24dc8:	cmp	r0, #0
   24dcc:	movne	r1, #0
   24dd0:	strbne	r1, [r0]
   24dd4:	mov	r0, r6
   24dd8:	bl	d22c <lt_dlopenext@plt>
   24ddc:	cmp	r0, #0
   24de0:	beq	24f10 <load_a_module+0x178>
   24de4:	mov	r5, r0
   24de8:	ldr	r1, [pc, #1488]	; 253c0 <load_a_module+0x628>
   24dec:	add	r1, pc, r1
   24df0:	bl	e5b8 <lt_dlsym@plt>
   24df4:	mov	r7, r0
   24df8:	cmp	r0, #0
   24dfc:	bne	24e1c <load_a_module+0x84>
   24e00:	ldr	r1, [pc, #1468]	; 253c4 <load_a_module+0x62c>
   24e04:	add	r1, pc, r1
   24e08:	mov	r0, r5
   24e0c:	bl	e5b8 <lt_dlsym@plt>
   24e10:	mov	r7, r0
   24e14:	cmp	r0, #0
   24e18:	beq	24f54 <load_a_module+0x1bc>
   24e1c:	ldr	r0, [r7]
   24e20:	movw	r1, #19777	; 0x4d41
   24e24:	cmp	r1, r0, lsr #16
   24e28:	bne	24f54 <load_a_module+0x1bc>
   24e2c:	uxth	r3, r0
   24e30:	cmp	r3, #2
   24e34:	beq	24f88 <load_a_module+0x1f0>
   24e38:	cmp	r3, #1
   24e3c:	bne	25048 <load_a_module+0x2b0>
   24e40:	ldr	r0, [r7, #4]
   24e44:	cmp	r0, #0
   24e48:	beq	24e58 <load_a_module+0xc0>
   24e4c:	blx	r0
   24e50:	cmn	r0, #1
   24e54:	beq	252ec <load_a_module+0x554>
   24e58:	str	r5, [fp, #-32]	; 0xffffffe0
   24e5c:	ldr	r1, [r7, #12]
   24e60:	cmp	r1, #0
   24e64:	beq	24e88 <load_a_module+0xf0>
   24e68:	ldr	r0, [r1]
   24e6c:	cmp	r0, #0
   24e70:	beq	24e88 <load_a_module+0xf0>
   24e74:	add	r5, r1, #4
   24e78:	bl	e6b4 <mod_add_cmd@plt>
   24e7c:	ldr	r0, [r5], #4
   24e80:	cmp	r0, #0
   24e84:	bne	24e78 <load_a_module+0xe0>
   24e88:	ldr	r1, [r7, #16]
   24e8c:	cmp	r1, #0
   24e90:	beq	24ec0 <load_a_module+0x128>
   24e94:	ldr	r0, [r1]
   24e98:	cmp	r0, #0
   24e9c:	beq	24ec0 <load_a_module+0x128>
   24ea0:	add	r5, r1, #4
   24ea4:	bl	dbb0 <register_hook@plt>
   24ea8:	ldr	r1, [r5]
   24eac:	str	r0, [r1]
   24eb0:	ldr	r0, [r5, #4]
   24eb4:	add	r5, r5, #8
   24eb8:	cmp	r0, #0
   24ebc:	bne	24ea4 <load_a_module+0x10c>
   24ec0:	str	sl, [sp, #28]
   24ec4:	str	r6, [sp, #32]
   24ec8:	str	r8, [sp, #36]	; 0x24
   24ecc:	str	r9, [sp, #24]
   24ed0:	ldr	r1, [r7, #20]
   24ed4:	cmp	r1, #0
   24ed8:	beq	24f04 <load_a_module+0x16c>
   24edc:	ldr	r0, [r1]
   24ee0:	cmp	r0, #0
   24ee4:	beq	24f04 <load_a_module+0x16c>
   24ee8:	add	r5, r1, #12
   24eec:	ldr	r1, [r5, #-8]
   24ef0:	bl	e348 <add_hook@plt>
   24ef4:	ldr	r0, [r5]
   24ef8:	add	r5, r5, #12
   24efc:	cmp	r0, #0
   24f00:	bne	24eec <load_a_module+0x154>
   24f04:	ldr	r5, [r7, #24]
   24f08:	mov	r6, #0
   24f0c:	b	251e8 <load_a_module+0x450>
   24f10:	bl	d2a4 <lt_dlerror@plt>
   24f14:	mov	r5, r0
   24f18:	str	r0, [sp]
   24f1c:	mov	r6, #0
   24f20:	ldr	r7, [pc, #1172]	; 253bc <load_a_module+0x624>
   24f24:	add	r7, pc, r7
   24f28:	mov	r0, #256	; 0x100
   24f2c:	mov	r1, #0
   24f30:	mov	r2, r7
   24f34:	mov	r3, r4
   24f38:	bl	d634 <sendto_realops_snomask@plt>
   24f3c:	mov	r0, #0
   24f40:	mov	r1, r7
   24f44:	mov	r2, r4
   24f48:	mov	r3, r5
   24f4c:	bl	e0b4 <ilog@plt>
   24f50:	b	25088 <load_a_module+0x2f0>
   24f54:	mov	r6, #0
   24f58:	ldr	r7, [pc, #1128]	; 253c8 <load_a_module+0x630>
   24f5c:	add	r7, pc, r7
   24f60:	mov	r0, #256	; 0x100
   24f64:	mov	r1, #0
   24f68:	mov	r2, r7
   24f6c:	mov	r3, r4
   24f70:	bl	d634 <sendto_realops_snomask@plt>
   24f74:	mov	r0, #0
   24f78:	mov	r1, r7
   24f7c:	mov	r2, r4
   24f80:	bl	e0b4 <ilog@plt>
   24f84:	b	25080 <load_a_module+0x2e8>
   24f88:	str	sl, [sp, #28]
   24f8c:	str	r6, [sp, #32]
   24f90:	str	r8, [sp, #36]	; 0x24
   24f94:	str	r5, [fp, #-32]	; 0xffffffe0
   24f98:	ldr	r0, [r7, #24]
   24f9c:	cmp	r0, #0
   24fa0:	beq	2509c <load_a_module+0x304>
   24fa4:	ldr	r1, [r0, #4]
   24fa8:	cmp	r1, #0
   24fac:	beq	2509c <load_a_module+0x304>
   24fb0:	add	r0, r0, #12
   24fb4:	ldr	sl, [pc, #1044]	; 253d0 <load_a_module+0x638>
   24fb8:	ldr	sl, [pc, sl]
   24fbc:	ldr	r6, [pc, #1040]	; 253d4 <load_a_module+0x63c>
   24fc0:	ldr	r6, [pc, r6]
   24fc4:	ldr	r8, [pc, #1036]	; 253d8 <load_a_module+0x640>
   24fc8:	add	r8, pc, r8
   24fcc:	b	24ffc <load_a_module+0x264>
   24fd0:	mov	r0, r6
   24fd4:	ldr	r2, [r5, #-4]
   24fd8:	ldr	r0, [r0]
   24fdc:	bl	de14 <capability_put@plt>
   24fe0:	ldr	r1, [r5]
   24fe4:	cmp	r1, #0
   24fe8:	strne	r0, [r1]
   24fec:	add	r0, r5, #16
   24ff0:	ldr	r1, [r5, #8]
   24ff4:	cmp	r1, #0
   24ff8:	beq	2509c <load_a_module+0x304>
   24ffc:	mov	r5, r0
   25000:	ldr	r3, [r0, #-12]
   25004:	cmp	r3, #1
   25008:	mov	r0, sl
   2500c:	beq	24fd4 <load_a_module+0x23c>
   25010:	cmp	r3, #2
   25014:	beq	24fd0 <load_a_module+0x238>
   25018:	stm	sp, {r1, r4}
   2501c:	mov	r0, #256	; 0x100
   25020:	mov	r1, #0
   25024:	mov	r2, r8
   25028:	bl	d634 <sendto_realops_snomask@plt>
   2502c:	ldr	r2, [r5, #-12]
   25030:	ldr	r3, [r5, #-8]
   25034:	str	r4, [sp]
   25038:	mov	r0, #0
   2503c:	mov	r1, r8
   25040:	bl	e0b4 <ilog@plt>
   25044:	b	24fec <load_a_module+0x254>
   25048:	mov	r6, #0
   2504c:	ldr	r8, [pc, #960]	; 25414 <load_a_module+0x67c>
   25050:	add	r8, pc, r8
   25054:	mov	r0, #0
   25058:	mov	r1, r8
   2505c:	mov	r2, r4
   25060:	bl	e0b4 <ilog@plt>
   25064:	ldr	r0, [r7]
   25068:	str	r0, [sp]
   2506c:	mov	r0, #256	; 0x100
   25070:	mov	r1, #0
   25074:	mov	r2, r8
   25078:	mov	r3, r4
   2507c:	bl	d634 <sendto_realops_snomask@plt>
   25080:	mov	r0, r5
   25084:	bl	cf98 <lt_dlclose@plt>
   25088:	mov	r0, r4
   2508c:	bl	24bcc <rb_free>
   25090:	mov	r0, r6
   25094:	sub	sp, fp, #28
   25098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2509c:	ldr	r0, [r7, #4]
   250a0:	cmp	r0, #0
   250a4:	beq	250b4 <load_a_module+0x31c>
   250a8:	blx	r0
   250ac:	cmn	r0, #1
   250b0:	beq	25318 <load_a_module+0x580>
   250b4:	ldr	r0, [r7, #36]	; 0x24
   250b8:	cmp	r0, #0
   250bc:	beq	25128 <load_a_module+0x390>
   250c0:	ldr	r1, [pc, #800]	; 253e8 <load_a_module+0x650>
   250c4:	ldr	r1, [pc, r1]
   250c8:	ldr	r1, [r1]
   250cc:	cmp	r1, r0
   250d0:	beq	25128 <load_a_module+0x390>
   250d4:	sub	r0, r1, r0
   250d8:	movw	r1, #42753	; 0xa701
   250dc:	movt	r1, #118	; 0x76
   250e0:	cmp	r0, r1
   250e4:	blt	25128 <load_a_module+0x390>
   250e8:	movw	r1, #17671	; 0x4507
   250ec:	movt	r1, #49710	; 0xc22e
   250f0:	umull	r0, r1, r0, r1
   250f4:	lsr	r8, r1, #16
   250f8:	ldr	r5, [pc, #748]	; 253ec <load_a_module+0x654>
   250fc:	add	r5, pc, r5
   25100:	mov	r0, r5
   25104:	mov	r1, r4
   25108:	mov	r2, r8
   2510c:	bl	d3ac <iwarn@plt>
   25110:	str	r8, [sp]
   25114:	mov	r0, #256	; 0x100
   25118:	mov	r1, #0
   2511c:	mov	r2, r5
   25120:	mov	r3, r4
   25124:	bl	d634 <sendto_realops_snomask@plt>
   25128:	ldr	r1, [r7, #12]
   2512c:	cmp	r1, #0
   25130:	beq	25154 <load_a_module+0x3bc>
   25134:	ldr	r0, [r1]
   25138:	cmp	r0, #0
   2513c:	beq	25154 <load_a_module+0x3bc>
   25140:	add	r5, r1, #4
   25144:	bl	e6b4 <mod_add_cmd@plt>
   25148:	ldr	r0, [r5], #4
   2514c:	cmp	r0, #0
   25150:	bne	25144 <load_a_module+0x3ac>
   25154:	ldr	r1, [r7, #16]
   25158:	cmp	r1, #0
   2515c:	beq	2518c <load_a_module+0x3f4>
   25160:	ldr	r0, [r1]
   25164:	cmp	r0, #0
   25168:	beq	2518c <load_a_module+0x3f4>
   2516c:	add	r5, r1, #4
   25170:	bl	dbb0 <register_hook@plt>
   25174:	ldr	r1, [r5]
   25178:	str	r0, [r1]
   2517c:	ldr	r0, [r5, #4]
   25180:	add	r5, r5, #8
   25184:	cmp	r0, #0
   25188:	bne	25170 <load_a_module+0x3d8>
   2518c:	str	r9, [sp, #24]
   25190:	ldr	r1, [r7, #20]
   25194:	cmp	r1, #0
   25198:	beq	251cc <load_a_module+0x434>
   2519c:	ldr	r0, [r1]
   251a0:	cmp	r0, #0
   251a4:	beq	251cc <load_a_module+0x434>
   251a8:	add	r5, r1, #8
   251ac:	ldmda	r5, {r1, r2}
   251b0:	cmp	r2, #0
   251b4:	movweq	r2, #30
   251b8:	bl	e24c <add_hook_prio@plt>
   251bc:	ldr	r0, [r5, #4]
   251c0:	add	r5, r5, #12
   251c4:	cmp	r0, #0
   251c8:	bne	251ac <load_a_module+0x414>
   251cc:	ldr	r0, [r7, #28]
   251d0:	ldr	r6, [r7, #32]
   251d4:	ldr	r1, [pc, #532]	; 253f0 <load_a_module+0x658>
   251d8:	ldr	r1, [pc, r1]
   251dc:	ldr	r5, [r1]
   251e0:	cmp	r0, #0
   251e4:	movne	r5, r0
   251e8:	bl	2596c <rb_malloc>
   251ec:	mov	sl, r0
   251f0:	ldr	r9, [pc, #508]	; 253f4 <load_a_module+0x65c>
   251f4:	add	r9, pc, r9
   251f8:	cmp	r6, #0
   251fc:	movne	r9, r6
   25200:	ldr	r0, [pc, #496]	; 253f8 <load_a_module+0x660>
   25204:	add	r0, pc, r0
   25208:	cmp	r5, #0
   2520c:	movne	r0, r5
   25210:	str	r0, [sp, #20]
   25214:	stmib	sl, {r0, r9}
   25218:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2521c:	str	r5, [sl, #12]
   25220:	ldr	r0, [sp, #28]
   25224:	str	r0, [sl, #16]
   25228:	mov	r0, r4
   2522c:	bl	24a58 <rb_strdup>
   25230:	str	r7, [sl, #32]
   25234:	str	r0, [sl]
   25238:	ldrh	r0, [r7]
   2523c:	ldr	r8, [sp, #24]
   25240:	str	r8, [sl, #20]
   25244:	str	r0, [sl, #28]
   25248:	ldr	r0, [sp, #32]
   2524c:	bl	24a58 <rb_strdup>
   25250:	str	r0, [sl, #24]
   25254:	add	r1, sl, #36	; 0x24
   25258:	ldr	r2, [pc, #412]	; 253fc <load_a_module+0x664>
   2525c:	ldr	r2, [pc, r2]
   25260:	mov	r0, sl
   25264:	bl	24a88 <rb_dlinkAdd>
   25268:	mov	r6, #1
   2526c:	ldr	r0, [sp, #36]	; 0x24
   25270:	cmp	r0, #0
   25274:	beq	25088 <load_a_module+0x2f0>
   25278:	ldrh	r0, [r7]
   2527c:	ldr	r1, [pc, #380]	; 25400 <load_a_module+0x668>
   25280:	add	r1, pc, r1
   25284:	ldr	r2, [pc, #376]	; 25404 <load_a_module+0x66c>
   25288:	add	r2, pc, r2
   2528c:	cmp	r8, #2
   25290:	moveq	r2, r1
   25294:	mov	sl, r5
   25298:	ldr	r5, [pc, #360]	; 25408 <load_a_module+0x670>
   2529c:	add	r5, pc, r5
   252a0:	cmp	r8, #1
   252a4:	movne	r5, r2
   252a8:	ldr	r8, [sp, #20]
   252ac:	str	r8, [sp]
   252b0:	stmib	sp, {r0, r5, r9, sl}
   252b4:	ldr	r2, [pc, #336]	; 2540c <load_a_module+0x674>
   252b8:	add	r2, pc, r2
   252bc:	mov	r0, #256	; 0x100
   252c0:	mov	r1, #0
   252c4:	mov	r3, r4
   252c8:	bl	d634 <sendto_realops_snomask@plt>
   252cc:	ldrh	r0, [r7]
   252d0:	stm	sp, {r0, r5, r9, sl}
   252d4:	mov	r0, #0
   252d8:	ldr	r1, [pc, #304]	; 25410 <load_a_module+0x678>
   252dc:	add	r1, pc, r1
   252e0:	mov	r2, r4
   252e4:	mov	r3, r8
   252e8:	b	24f4c <load_a_module+0x1b4>
   252ec:	mov	r6, #0
   252f0:	ldr	r7, [pc, #212]	; 253cc <load_a_module+0x634>
   252f4:	add	r7, pc, r7
   252f8:	mov	r0, #0
   252fc:	mov	r1, r7
   25300:	mov	r2, r4
   25304:	bl	e0b4 <ilog@plt>
   25308:	mov	r0, #256	; 0x100
   2530c:	mov	r1, #0
   25310:	mov	r2, r7
   25314:	b	25078 <load_a_module+0x2e0>
   25318:	mov	r6, #0
   2531c:	ldr	r8, [pc, #184]	; 253dc <load_a_module+0x644>
   25320:	add	r8, pc, r8
   25324:	mov	r0, #0
   25328:	mov	r1, r8
   2532c:	mov	r2, r4
   25330:	bl	e0b4 <ilog@plt>
   25334:	mov	r0, #256	; 0x100
   25338:	mov	r1, #0
   2533c:	mov	r2, r8
   25340:	mov	r3, r4
   25344:	bl	d634 <sendto_realops_snomask@plt>
   25348:	ldr	r5, [r7, #24]
   2534c:	cmp	r5, #0
   25350:	beq	253b0 <load_a_module+0x618>
   25354:	ldr	r1, [r5, #4]
   25358:	cmp	r1, #0
   2535c:	beq	253b0 <load_a_module+0x618>
   25360:	ldr	r7, [pc, #120]	; 253e0 <load_a_module+0x648>
   25364:	ldr	r7, [pc, r7]
   25368:	ldr	r8, [pc, #116]	; 253e4 <load_a_module+0x64c>
   2536c:	ldr	r8, [pc, r8]
   25370:	b	25390 <load_a_module+0x5f8>
   25374:	ldr	r0, [r2]
   25378:	bl	e30c <capability_orphan@plt>
   2537c:	add	r0, r5, #16
   25380:	ldr	r1, [r5, #20]
   25384:	cmp	r1, #0
   25388:	mov	r5, r0
   2538c:	beq	253b0 <load_a_module+0x618>
   25390:	ldr	r0, [r5]
   25394:	cmp	r0, #1
   25398:	mov	r2, r7
   2539c:	beq	25374 <load_a_module+0x5dc>
   253a0:	cmp	r0, #2
   253a4:	bne	2537c <load_a_module+0x5e4>
   253a8:	mov	r2, r8
   253ac:	b	25374 <load_a_module+0x5dc>
   253b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253b4:	b	25084 <load_a_module+0x2ec>
   253b8:	.word	0x0001e5ce
   253bc:	.word	0x0001e5b3
   253c0:	.word	0x0001e708
   253c4:	.word	0x0001e6ef
   253c8:	.word	0x0001e5a1
   253cc:	.word	0x0001e23a
   253d0:	.word	0x00035a28
   253d4:	.word	0x000358c0
   253d8:	.word	0x0001e58f
   253dc:	.word	0x0001e20e
   253e0:	.word	0x0003567c
   253e4:	.word	0x00035514
   253e8:	.word	0x000358d0
   253ec:	.word	0x0001e4ab
   253f0:	.word	0x000356b8
   253f4:	.word	0x000366be
   253f8:	.word	0x000366a4
   253fc:	.word	0x00035894
   25400:	.word	0x0001e3ba
   25404:	.word	0x0001c0e4
   25408:	.word	0x0001e394
   2540c:	.word	0x0001e387
   25410:	.word	0x0001e363
   25414:	.word	0x0001e5ad

00025418 <load_core_modules>:
   25418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2541c:	add	fp, sp, #28
   25420:	sub	sp, sp, #12
   25424:	sub	sp, sp, #4096	; 0x1000
   25428:	mov	r4, r0
   2542c:	mov	r6, #0
   25430:	ldr	sl, [pc, #132]	; 254bc <load_core_modules+0xa4>
   25434:	ldr	sl, [pc, sl]
   25438:	mov	r9, #47	; 0x2f
   2543c:	add	r5, sp, #8
   25440:	ldr	r8, [pc, #120]	; 254c0 <load_core_modules+0xa8>
   25444:	add	r8, pc, r8
   25448:	ldr	r0, [pc, #116]	; 254c4 <load_core_modules+0xac>
   2544c:	add	r0, pc, r0
   25450:	ldr	r7, [r0, r6, lsl #2]
   25454:	ldr	r3, [sl, #4]
   25458:	str	r9, [sp]
   2545c:	str	r7, [sp, #4]
   25460:	mov	r0, r5
   25464:	mov	r1, #4096	; 0x1000
   25468:	mov	r2, r8
   2546c:	bl	de74 <snprintf@plt>
   25470:	mov	r0, r5
   25474:	mov	r1, r4
   25478:	mov	r2, #2
   2547c:	mov	r3, #1
   25480:	bl	dfa0 <load_a_module@plt>
   25484:	cmp	r0, #0
   25488:	beq	254a0 <load_core_modules+0x88>
   2548c:	add	r6, r6, #1
   25490:	cmp	r6, #14
   25494:	bne	25448 <load_core_modules+0x30>
   25498:	sub	sp, fp, #28
   2549c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   254a0:	ldr	r1, [pc, #32]	; 254c8 <load_core_modules+0xb0>
   254a4:	add	r1, pc, r1
   254a8:	mov	r0, #0
   254ac:	mov	r2, r7
   254b0:	bl	e0b4 <ilog@plt>
   254b4:	mov	r0, #1
   254b8:	bl	dc28 <exit@plt>
   254bc:	.word	0x00035614
   254c0:	.word	0x0001b6fd
   254c4:	.word	0x00034a04
   254c8:	.word	0x0001df11

000254cc <load_one_module>:
   254cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   254d0:	add	fp, sp, #28
   254d4:	sub	sp, sp, #116	; 0x74
   254d8:	sub	sp, sp, #4096	; 0x1000
   254dc:	mov	r5, r2
   254e0:	mov	r6, r1
   254e4:	mov	r4, r0
   254e8:	ldr	r0, [pc, #324]	; 25634 <load_one_module+0x168>
   254ec:	ldr	r0, [pc, r0]
   254f0:	ldrb	r0, [r0]
   254f4:	cmp	r0, #0
   254f8:	beq	2550c <load_one_module+0x40>
   254fc:	ldr	r0, [pc, #308]	; 25638 <load_one_module+0x16c>
   25500:	add	r0, pc, r0
   25504:	mov	r1, r4
   25508:	bl	d10c <inotice@plt>
   2550c:	str	r5, [sp, #20]
   25510:	cmp	r5, #0
   25514:	movwne	r6, #2
   25518:	str	r6, [sp, #16]
   2551c:	ldr	r0, [pc, #280]	; 2563c <load_one_module+0x170>
   25520:	ldr	r0, [pc, r0]
   25524:	ldr	r8, [r0]
   25528:	cmp	r8, #0
   2552c:	beq	255e8 <load_one_module+0x11c>
   25530:	ldr	r9, [pc, #264]	; 25640 <load_one_module+0x174>
   25534:	add	r9, pc, r9
   25538:	mov	sl, #47	; 0x2f
   2553c:	add	r7, sp, #112	; 0x70
   25540:	ldr	r5, [pc, #252]	; 25644 <load_one_module+0x178>
   25544:	add	r5, pc, r5
   25548:	ldr	r6, [pc, #248]	; 25648 <load_one_module+0x17c>
   2554c:	add	r6, pc, r6
   25550:	b	25560 <load_one_module+0x94>
   25554:	ldr	r8, [r8, #8]
   25558:	cmp	r8, #0
   2555c:	beq	255e8 <load_one_module+0x11c>
   25560:	ldr	r3, [r8]
   25564:	str	sl, [sp]
   25568:	stmib	sp, {r4, r9}
   2556c:	mov	r0, r7
   25570:	mov	r1, #4096	; 0x1000
   25574:	mov	r2, r5
   25578:	bl	de74 <snprintf@plt>
   2557c:	mov	r0, r7
   25580:	mov	r1, r6
   25584:	bl	cfc8 <strstr@plt>
   25588:	cmp	r0, #0
   2558c:	bne	25554 <load_one_module+0x88>
   25590:	mov	r0, r7
   25594:	ldr	r1, [pc, #176]	; 2564c <load_one_module+0x180>
   25598:	add	r1, pc, r1
   2559c:	bl	cfc8 <strstr@plt>
   255a0:	cmp	r0, #0
   255a4:	bne	25554 <load_one_module+0x88>
   255a8:	mov	r0, r7
   255ac:	add	r1, sp, #24
   255b0:	bl	40578 <__stat>
   255b4:	cmp	r0, #0
   255b8:	bne	25554 <load_one_module+0x88>
   255bc:	ldr	r0, [sp, #40]	; 0x28
   255c0:	and	r0, r0, #61440	; 0xf000
   255c4:	cmp	r0, #32768	; 0x8000
   255c8:	bne	25554 <load_one_module+0x88>
   255cc:	add	r0, sp, #112	; 0x70
   255d0:	mov	r1, #1
   255d4:	ldr	r2, [sp, #16]
   255d8:	ldr	r3, [sp, #20]
   255dc:	bl	dfa0 <load_a_module@plt>
   255e0:	mov	r5, r0
   255e4:	b	25628 <load_one_module+0x15c>
   255e8:	mov	r5, #0
   255ec:	ldr	r2, [pc, #92]	; 25650 <load_one_module+0x184>
   255f0:	add	r2, pc, r2
   255f4:	mov	r0, #256	; 0x100
   255f8:	mov	r1, #0
   255fc:	mov	r3, r4
   25600:	bl	d634 <sendto_realops_snomask@plt>
   25604:	ldr	r0, [pc, #72]	; 25654 <load_one_module+0x188>
   25608:	ldr	r0, [pc, r0]
   2560c:	ldrb	r0, [r0]
   25610:	cmp	r0, #0
   25614:	beq	25628 <load_one_module+0x15c>
   25618:	ldr	r0, [pc, #56]	; 25658 <load_one_module+0x18c>
   2561c:	add	r0, pc, r0
   25620:	mov	r1, r4
   25624:	bl	d640 <ierror@plt>
   25628:	mov	r0, r5
   2562c:	sub	sp, fp, #28
   25630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25634:	.word	0x0003545c
   25638:	.word	0x0001dee4
   2563c:	.word	0x000355ec
   25640:	.word	0x0001de5a
   25644:	.word	0x0001deb6
   25648:	.word	0x0001deb7
   2564c:	.word	0x0001de6f
   25650:	.word	0x0001de1b
   25654:	.word	0x00035340
   25658:	.word	0x0001de07

0002565c <unload_one_module>:
   2565c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25660:	add	fp, sp, #28
   25664:	sub	sp, sp, #12
   25668:	mov	r8, r1
   2566c:	mov	r9, r0
   25670:	bl	d160 <findmodule_byname@plt>
   25674:	cmp	r0, #0
   25678:	beq	2570c <unload_one_module+0xb0>
   2567c:	mov	r6, r0
   25680:	ldr	r3, [r0, #28]
   25684:	cmp	r3, #2
   25688:	beq	25714 <unload_one_module+0xb8>
   2568c:	cmp	r3, #1
   25690:	bne	2582c <unload_one_module+0x1d0>
   25694:	ldr	r4, [r6, #32]
   25698:	ldr	r1, [r4, #12]
   2569c:	cmp	r1, #0
   256a0:	beq	256c4 <unload_one_module+0x68>
   256a4:	ldr	r0, [r1]
   256a8:	cmp	r0, #0
   256ac:	beq	256c4 <unload_one_module+0x68>
   256b0:	add	r5, r1, #4
   256b4:	bl	cfd4 <mod_del_cmd@plt>
   256b8:	ldr	r0, [r5], #4
   256bc:	cmp	r0, #0
   256c0:	bne	256b4 <unload_one_module+0x58>
   256c4:	ldr	r1, [r4, #20]
   256c8:	cmp	r1, #0
   256cc:	beq	256f8 <unload_one_module+0x9c>
   256d0:	ldr	r0, [r1]
   256d4:	cmp	r0, #0
   256d8:	beq	256f8 <unload_one_module+0x9c>
   256dc:	add	r5, r1, #12
   256e0:	ldr	r1, [r5, #-8]
   256e4:	bl	e378 <remove_hook@plt>
   256e8:	ldr	r0, [r5]
   256ec:	add	r5, r5, #12
   256f0:	cmp	r0, #0
   256f4:	bne	256e0 <unload_one_module+0x84>
   256f8:	ldr	r0, [r4, #8]
   256fc:	cmp	r0, #0
   25700:	beq	25860 <unload_one_module+0x204>
   25704:	blx	r0
   25708:	b	25860 <unload_one_module+0x204>
   2570c:	mov	r6, #0
   25710:	b	258c0 <unload_one_module+0x264>
   25714:	ldr	r7, [r6, #32]
   25718:	ldr	r1, [r7, #12]
   2571c:	cmp	r1, #0
   25720:	beq	25744 <unload_one_module+0xe8>
   25724:	ldr	r0, [r1]
   25728:	cmp	r0, #0
   2572c:	beq	25744 <unload_one_module+0xe8>
   25730:	add	r4, r1, #4
   25734:	bl	cfd4 <mod_del_cmd@plt>
   25738:	ldr	r0, [r4], #4
   2573c:	cmp	r0, #0
   25740:	bne	25734 <unload_one_module+0xd8>
   25744:	ldr	r1, [r7, #20]
   25748:	cmp	r1, #0
   2574c:	beq	25778 <unload_one_module+0x11c>
   25750:	ldr	r0, [r1]
   25754:	cmp	r0, #0
   25758:	beq	25778 <unload_one_module+0x11c>
   2575c:	add	r4, r1, #12
   25760:	ldr	r1, [r4, #-8]
   25764:	bl	e378 <remove_hook@plt>
   25768:	ldr	r0, [r4]
   2576c:	add	r4, r4, #12
   25770:	cmp	r0, #0
   25774:	bne	25760 <unload_one_module+0x104>
   25778:	ldr	r0, [r7, #8]
   2577c:	cmp	r0, #0
   25780:	beq	25788 <unload_one_module+0x12c>
   25784:	blx	r0
   25788:	ldr	r0, [r7, #24]
   2578c:	cmp	r0, #0
   25790:	beq	25860 <unload_one_module+0x204>
   25794:	ldr	r1, [r0, #4]
   25798:	cmp	r1, #0
   2579c:	beq	25860 <unload_one_module+0x204>
   257a0:	add	r5, r0, #20
   257a4:	ldr	r4, [pc, #288]	; 258cc <unload_one_module+0x270>
   257a8:	ldr	r4, [pc, r4]
   257ac:	ldr	sl, [pc, #284]	; 258d0 <unload_one_module+0x274>
   257b0:	ldr	sl, [pc, sl]
   257b4:	ldr	r7, [pc, #280]	; 258d4 <unload_one_module+0x278>
   257b8:	add	r7, pc, r7
   257bc:	b	257d8 <unload_one_module+0x17c>
   257c0:	mov	r0, sl
   257c4:	ldr	r0, [r0]
   257c8:	bl	e30c <capability_orphan@plt>
   257cc:	ldr	r1, [r5], #16
   257d0:	cmp	r1, #0
   257d4:	beq	25860 <unload_one_module+0x204>
   257d8:	ldr	r3, [r5, #-20]	; 0xffffffec
   257dc:	cmp	r3, #1
   257e0:	mov	r0, r4
   257e4:	beq	257c4 <unload_one_module+0x168>
   257e8:	cmp	r3, #2
   257ec:	beq	257c0 <unload_one_module+0x164>
   257f0:	ldr	r0, [r6]
   257f4:	str	r1, [sp]
   257f8:	str	r0, [sp, #4]
   257fc:	mov	r0, #256	; 0x100
   25800:	mov	r1, #0
   25804:	mov	r2, r7
   25808:	bl	d634 <sendto_realops_snomask@plt>
   2580c:	ldr	r2, [r5, #-20]	; 0xffffffec
   25810:	ldr	r3, [r5, #-16]
   25814:	ldr	r0, [r6]
   25818:	str	r0, [sp]
   2581c:	mov	r0, #0
   25820:	mov	r1, r7
   25824:	bl	e0b4 <ilog@plt>
   25828:	b	257cc <unload_one_module+0x170>
   2582c:	ldr	r0, [r6]
   25830:	str	r0, [sp]
   25834:	ldr	r7, [pc, #156]	; 258d8 <unload_one_module+0x27c>
   25838:	add	r7, pc, r7
   2583c:	mov	r0, #256	; 0x100
   25840:	mov	r1, #0
   25844:	mov	r2, r7
   25848:	bl	d634 <sendto_realops_snomask@plt>
   2584c:	ldr	r3, [r6]
   25850:	ldr	r2, [r6, #28]
   25854:	mov	r0, #0
   25858:	mov	r1, r7
   2585c:	bl	e0b4 <ilog@plt>
   25860:	ldr	r0, [r6, #12]
   25864:	bl	cf98 <lt_dlclose@plt>
   25868:	add	r0, r6, #36	; 0x24
   2586c:	bl	258e0 <rb_dlinkDelete>
   25870:	ldr	r0, [r6]
   25874:	bl	24bcc <rb_free>
   25878:	ldr	r0, [r6, #24]
   2587c:	bl	24bcc <rb_free>
   25880:	mov	r0, r6
   25884:	bl	24bcc <rb_free>
   25888:	mov	r6, #1
   2588c:	cmp	r8, #0
   25890:	beq	258c0 <unload_one_module+0x264>
   25894:	ldr	r5, [pc, #64]	; 258dc <unload_one_module+0x280>
   25898:	add	r5, pc, r5
   2589c:	mov	r0, #0
   258a0:	mov	r1, r5
   258a4:	mov	r2, r9
   258a8:	bl	e0b4 <ilog@plt>
   258ac:	mov	r0, #256	; 0x100
   258b0:	mov	r1, #0
   258b4:	mov	r2, r5
   258b8:	mov	r3, r9
   258bc:	bl	d634 <sendto_realops_snomask@plt>
   258c0:	mov	r0, r6
   258c4:	sub	sp, fp, #28
   258c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   258cc:	.word	0x00035238
   258d0:	.word	0x000350d0
   258d4:	.word	0x0001dc83
   258d8:	.word	0x0001dc55
   258dc:	.word	0x0001dc2c

000258e0 <rb_dlinkDelete>:
   258e0:	push	{fp, lr}
   258e4:	mov	fp, sp
   258e8:	cmp	r0, #0
   258ec:	beq	2593c <rb_dlinkDelete+0x5c>
   258f0:	ldr	ip, [pc, #100]	; 2595c <rb_dlinkDelete+0x7c>
   258f4:	ldr	ip, [pc, ip]
   258f8:	ldmib	r0, {r2, r3}
   258fc:	add	r1, r3, #4
   25900:	cmp	r3, #0
   25904:	addeq	r1, ip, #4
   25908:	str	r2, [r1]
   2590c:	ldmib	r0, {r1, r2}
   25910:	cmp	r1, #0
   25914:	mov	r3, ip
   25918:	addne	r3, r1, #8
   2591c:	str	r2, [r3]
   25920:	mov	r1, #0
   25924:	str	r1, [r0, #4]
   25928:	str	r1, [r0, #8]
   2592c:	ldr	r0, [ip, #8]
   25930:	sub	r0, r0, #1
   25934:	str	r0, [ip, #8]
   25938:	pop	{fp, pc}
   2593c:	ldr	r0, [pc, #28]	; 25960 <rb_dlinkDelete+0x80>
   25940:	add	r0, pc, r0
   25944:	ldr	r1, [pc, #24]	; 25964 <rb_dlinkDelete+0x84>
   25948:	add	r1, pc, r1
   2594c:	ldr	r3, [pc, #20]	; 25968 <rb_dlinkDelete+0x88>
   25950:	add	r3, pc, r3
   25954:	mov	r2, #235	; 0xeb
   25958:	bl	e7e0 <__assert_fail@plt>
   2595c:	.word	0x000351fc
   25960:	.word	0x0001afcc
   25964:	.word	0x0001afce
   25968:	.word	0x0001b069

0002596c <rb_malloc>:
   2596c:	push	{fp, lr}
   25970:	mov	fp, sp
   25974:	mov	r0, #1
   25978:	mov	r1, #48	; 0x30
   2597c:	bl	cfa4 <calloc@plt>
   25980:	cmp	r0, #0
   25984:	popne	{fp, pc}
   25988:	bl	d448 <rb_outofmemory@plt>

0002598c <modules_do_reload>:
   2598c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25990:	add	fp, sp, #24
   25994:	mov	r5, r0
   25998:	bl	da30 <rb_basename@plt>
   2599c:	mov	r4, r0
   259a0:	add	r0, r5, #512	; 0x200
   259a4:	bl	e4f8 <find_id@plt>
   259a8:	mov	r7, r0
   259ac:	mov	r0, r4
   259b0:	bl	d160 <findmodule_byname@plt>
   259b4:	cmp	r0, #0
   259b8:	beq	25a1c <modules_do_reload+0x90>
   259bc:	ldr	r6, [r0, #16]
   259c0:	ldr	r8, [r0, #20]
   259c4:	ldr	r0, [r0, #24]
   259c8:	bl	24a58 <rb_strdup>
   259cc:	mov	r9, r0
   259d0:	bl	da60 <mod_remember_clicaps@plt>
   259d4:	mov	r0, r4
   259d8:	mov	r1, #1
   259dc:	bl	d520 <unload_one_module@plt>
   259e0:	cmp	r0, #0
   259e4:	beq	25a40 <modules_do_reload+0xb4>
   259e8:	cmp	r6, #0
   259ec:	mov	r3, r6
   259f0:	movwne	r3, #1
   259f4:	mov	r0, r9
   259f8:	mov	r1, #1
   259fc:	mov	r2, r8
   25a00:	bl	dfa0 <load_a_module@plt>
   25a04:	cmp	r6, #0
   25a08:	beq	25a14 <modules_do_reload+0x88>
   25a0c:	cmp	r0, #0
   25a10:	beq	25a84 <modules_do_reload+0xf8>
   25a14:	bl	d13c <mod_notify_clicaps@plt>
   25a18:	b	25a5c <modules_do_reload+0xd0>
   25a1c:	cmp	r7, #0
   25a20:	beq	25a7c <modules_do_reload+0xf0>
   25a24:	ldr	r1, [pc, #140]	; 25ab8 <modules_do_reload+0x12c>
   25a28:	add	r1, pc, r1
   25a2c:	mov	r0, r7
   25a30:	mov	r2, r4
   25a34:	bl	e414 <sendto_one_notice@plt>
   25a38:	mov	r9, r4
   25a3c:	b	25a68 <modules_do_reload+0xdc>
   25a40:	cmp	r7, #0
   25a44:	beq	25a5c <modules_do_reload+0xd0>
   25a48:	ldr	r1, [pc, #108]	; 25abc <modules_do_reload+0x130>
   25a4c:	add	r1, pc, r1
   25a50:	mov	r0, r7
   25a54:	mov	r2, r4
   25a58:	bl	e414 <sendto_one_notice@plt>
   25a5c:	mov	r0, r5
   25a60:	bl	24bcc <rb_free>
   25a64:	mov	r5, r4
   25a68:	mov	r0, r5
   25a6c:	bl	24bcc <rb_free>
   25a70:	mov	r0, r9
   25a74:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   25a78:	b	24bcc <rb_free>
   25a7c:	mov	r9, r4
   25a80:	b	25a68 <modules_do_reload+0xdc>
   25a84:	ldr	r2, [pc, #52]	; 25ac0 <modules_do_reload+0x134>
   25a88:	add	r2, pc, r2
   25a8c:	mov	r0, #256	; 0x100
   25a90:	mov	r1, #256	; 0x100
   25a94:	mov	r3, r4
   25a98:	bl	d634 <sendto_realops_snomask@plt>
   25a9c:	ldr	r1, [pc, #32]	; 25ac4 <modules_do_reload+0x138>
   25aa0:	add	r1, pc, r1
   25aa4:	mov	r0, #0
   25aa8:	mov	r2, r4
   25aac:	bl	e0b4 <ilog@plt>
   25ab0:	mov	r0, #0
   25ab4:	bl	dc28 <exit@plt>
   25ab8:	.word	0x0001dc6d
   25abc:	.word	0x0001dc49
   25ac0:	.word	0x0001dc26
   25ac4:	.word	0x0001d915

00025ac8 <modules_do_restart>:
   25ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25acc:	add	fp, sp, #28
   25ad0:	sub	sp, sp, #4
   25ad4:	bl	da60 <mod_remember_clicaps@plt>
   25ad8:	ldr	r0, [pc, #268]	; 25bec <modules_do_restart+0x124>
   25adc:	ldr	r0, [pc, r0]
   25ae0:	ldr	r7, [r0]
   25ae4:	mov	r4, #0
   25ae8:	cmp	r7, #0
   25aec:	beq	25b84 <modules_do_restart+0xbc>
   25af0:	ldr	sl, [pc, #248]	; 25bf0 <modules_do_restart+0x128>
   25af4:	add	sl, pc, sl
   25af8:	ldr	r6, [pc, #244]	; 25bf4 <modules_do_restart+0x12c>
   25afc:	add	r6, pc, r6
   25b00:	ldr	r5, [pc, #240]	; 25bf8 <modules_do_restart+0x130>
   25b04:	add	r5, pc, r5
   25b08:	ldr	r9, [pc, #236]	; 25bfc <modules_do_restart+0x134>
   25b0c:	add	r9, pc, r9
   25b10:	b	25b20 <modules_do_restart+0x58>
   25b14:	add	r4, r4, #1
   25b18:	cmp	r7, #0
   25b1c:	beq	25b84 <modules_do_restart+0xbc>
   25b20:	ldr	r8, [r7]
   25b24:	ldr	r7, [r7, #8]
   25b28:	ldr	r0, [r8]
   25b2c:	mov	r1, #0
   25b30:	bl	d520 <unload_one_module@plt>
   25b34:	cmp	r0, #0
   25b38:	bne	25b14 <modules_do_restart+0x4c>
   25b3c:	ldr	r2, [r8]
   25b40:	ldr	r0, [r8, #16]
   25b44:	cmp	r0, #0
   25b48:	mov	r3, r6
   25b4c:	moveq	r3, sl
   25b50:	mov	r0, #0
   25b54:	mov	r1, r5
   25b58:	bl	e0b4 <ilog@plt>
   25b5c:	ldr	r0, [r8, #16]
   25b60:	cmp	r0, #0
   25b64:	bne	25b18 <modules_do_restart+0x50>
   25b68:	ldr	r3, [r8]
   25b6c:	mov	r0, #256	; 0x100
   25b70:	mov	r1, #256	; 0x100
   25b74:	mov	r2, r9
   25b78:	bl	d634 <sendto_realops_snomask@plt>
   25b7c:	cmp	r7, #0
   25b80:	bne	25b20 <modules_do_restart+0x58>
   25b84:	mov	r0, #0
   25b88:	bl	d940 <load_all_modules@plt>
   25b8c:	mov	r0, #0
   25b90:	bl	d820 <load_core_modules@plt>
   25b94:	mov	r0, #0
   25b98:	bl	d4d8 <rehash@plt>
   25b9c:	bl	d13c <mod_notify_clicaps@plt>
   25ba0:	ldr	r0, [pc, #88]	; 25c00 <modules_do_restart+0x138>
   25ba4:	ldr	r0, [pc, r0]
   25ba8:	mov	r6, r0
   25bac:	ldr	r0, [r0, #8]
   25bb0:	str	r0, [sp]
   25bb4:	ldr	r5, [pc, #72]	; 25c04 <modules_do_restart+0x13c>
   25bb8:	add	r5, pc, r5
   25bbc:	mov	r0, #256	; 0x100
   25bc0:	mov	r1, #256	; 0x100
   25bc4:	mov	r2, r5
   25bc8:	mov	r3, r4
   25bcc:	bl	d634 <sendto_realops_snomask@plt>
   25bd0:	ldr	r3, [r6, #8]
   25bd4:	mov	r0, #0
   25bd8:	mov	r1, r5
   25bdc:	mov	r2, r4
   25be0:	sub	sp, fp, #28
   25be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25be8:	b	e0b4 <ilog@plt>
   25bec:	.word	0x00035014
   25bf0:	.word	0x00020061
   25bf4:	.word	0x0001dc0b
   25bf8:	.word	0x0001dbdc
   25bfc:	.word	0x0001dc09
   25c00:	.word	0x00034f4c
   25c04:	.word	0x0001db81

00025c08 <init_monitor>:
   25c08:	push	{fp, lr}
   25c0c:	mov	fp, sp
   25c10:	ldr	r0, [pc, #28]	; 25c34 <init_monitor+0x2c>
   25c14:	add	r0, pc, r0
   25c18:	ldr	r1, [pc, #24]	; 25c38 <init_monitor+0x30>
   25c1c:	add	r1, pc, r1
   25c20:	bl	d850 <rb_radixtree_create@plt>
   25c24:	ldr	r1, [pc, #16]	; 25c3c <init_monitor+0x34>
   25c28:	add	r1, pc, r1
   25c2c:	str	r0, [r1]
   25c30:	pop	{fp, pc}
   25c34:	.word	0x0001dbc7
   25c38:	.word	0x0000001c
   25c3c:	.word	0x00040560

00025c40 <irccasecanon>:
   25c40:	ldrb	r1, [r0]
   25c44:	cmp	r1, #0
   25c48:	bxeq	lr
   25c4c:	add	r0, r0, #1
   25c50:	ldr	r2, [pc, #32]	; 25c78 <irccasecanon+0x38>
   25c54:	ldr	r2, [pc, r2]
   25c58:	uxtb	r1, r1
   25c5c:	ldrb	r1, [r2, r1]
   25c60:	strb	r1, [r0, #-1]
   25c64:	ldrb	r1, [r0]
   25c68:	add	r0, r0, #1
   25c6c:	cmp	r1, #0
   25c70:	bne	25c58 <irccasecanon+0x18>
   25c74:	bx	lr
   25c78:	.word	0x00034d14

00025c7c <find_monitor>:
   25c7c:	push	{r4, r5, r6, sl, fp, lr}
   25c80:	add	fp, sp, #16
   25c84:	mov	r6, r1
   25c88:	mov	r5, r0
   25c8c:	ldr	r0, [pc, #84]	; 25ce8 <find_monitor+0x6c>
   25c90:	ldr	r0, [pc, r0]
   25c94:	mov	r1, r5
   25c98:	bl	dee0 <rb_radixtree_retrieve@plt>
   25c9c:	cmp	r0, #0
   25ca0:	popne	{r4, r5, r6, sl, fp, pc}
   25ca4:	cmp	r6, #0
   25ca8:	beq	25cdc <find_monitor+0x60>
   25cac:	bl	25cf0 <rb_malloc>
   25cb0:	mov	r4, r0
   25cb4:	mov	r1, r5
   25cb8:	mov	r2, #32
   25cbc:	bl	e510 <rb_strlcpy@plt>
   25cc0:	ldr	r0, [pc, #36]	; 25cec <find_monitor+0x70>
   25cc4:	ldr	r0, [pc, r0]
   25cc8:	mov	r1, r4
   25ccc:	mov	r2, r4
   25cd0:	bl	dd9c <rb_radixtree_add@plt>
   25cd4:	mov	r0, r4
   25cd8:	pop	{r4, r5, r6, sl, fp, pc}
   25cdc:	mov	r4, #0
   25ce0:	mov	r0, r4
   25ce4:	pop	{r4, r5, r6, sl, fp, pc}
   25ce8:	.word	0x000404f8
   25cec:	.word	0x000404c4

00025cf0 <rb_malloc>:
   25cf0:	push	{fp, lr}
   25cf4:	mov	fp, sp
   25cf8:	mov	r0, #1
   25cfc:	mov	r1, #60	; 0x3c
   25d00:	bl	cfa4 <calloc@plt>
   25d04:	cmp	r0, #0
   25d08:	popne	{fp, pc}
   25d0c:	bl	d448 <rb_outofmemory@plt>

00025d10 <free_monitor>:
   25d10:	push	{r4, sl, fp, lr}
   25d14:	add	fp, sp, #8
   25d18:	mov	r4, r0
   25d1c:	ldr	r0, [r0, #40]	; 0x28
   25d20:	cmp	r0, #0
   25d24:	popne	{r4, sl, fp, pc}
   25d28:	ldr	r0, [pc, #20]	; 25d44 <free_monitor+0x34>
   25d2c:	ldr	r0, [pc, r0]
   25d30:	mov	r1, r4
   25d34:	bl	e0c0 <rb_radixtree_delete@plt>
   25d38:	mov	r0, r4
   25d3c:	pop	{r4, sl, fp, lr}
   25d40:	b	25d48 <rb_free>
   25d44:	.word	0x0004045c

00025d48 <rb_free>:
   25d48:	cmp	r0, #0
   25d4c:	bxeq	lr
   25d50:	b	d328 <free@plt>

00025d54 <monitor_signon>:
   25d54:	push	{r4, r5, r6, r7, fp, lr}
   25d58:	add	fp, sp, #16
   25d5c:	sub	sp, sp, #152	; 0x98
   25d60:	mov	r4, r0
   25d64:	add	r6, r0, #88	; 0x58
   25d68:	mov	r0, r6
   25d6c:	mov	r1, #0
   25d70:	bl	dba4 <find_monitor@plt>
   25d74:	cmp	r0, #0
   25d78:	beq	25dd8 <monitor_signon+0x84>
   25d7c:	mov	r5, r0
   25d80:	add	r0, r4, #163	; 0xa3
   25d84:	add	r1, r4, #152	; 0x98
   25d88:	str	r1, [sp]
   25d8c:	str	r0, [sp, #4]
   25d90:	add	r7, sp, #11
   25d94:	ldr	r2, [pc, #68]	; 25de0 <monitor_signon+0x8c>
   25d98:	add	r2, pc, r2
   25d9c:	mov	r0, r7
   25da0:	mov	r1, #141	; 0x8d
   25da4:	mov	r3, r6
   25da8:	bl	de74 <snprintf@plt>
   25dac:	ldr	r0, [pc, #48]	; 25de4 <monitor_signon+0x90>
   25db0:	add	r0, pc, r0
   25db4:	stm	sp, {r0, r7}
   25db8:	ldr	r0, [pc, #40]	; 25de8 <monitor_signon+0x94>
   25dbc:	ldr	r0, [pc, r0]
   25dc0:	add	r3, r0, #88	; 0x58
   25dc4:	ldr	r2, [pc, #32]	; 25dec <monitor_signon+0x98>
   25dc8:	add	r2, pc, r2
   25dcc:	mov	r0, r4
   25dd0:	mov	r1, r5
   25dd4:	bl	d9f4 <sendto_monitor@plt>
   25dd8:	sub	sp, fp, #16
   25ddc:	pop	{r4, r5, r6, r7, fp, pc}
   25de0:	.word	0x0001b224
   25de4:	.word	0x0001b8ed
   25de8:	.word	0x00034d9c
   25dec:	.word	0x0001da21

00025df0 <monitor_signoff>:
   25df0:	push	{r4, r5, fp, lr}
   25df4:	add	fp, sp, #8
   25df8:	sub	sp, sp, #8
   25dfc:	mov	r4, r0
   25e00:	add	r5, r0, #88	; 0x58
   25e04:	mov	r0, r5
   25e08:	mov	r1, #0
   25e0c:	bl	dba4 <find_monitor@plt>
   25e10:	cmp	r0, #0
   25e14:	beq	25e44 <monitor_signoff+0x54>
   25e18:	mov	r1, r0
   25e1c:	ldr	r0, [pc, #40]	; 25e4c <monitor_signoff+0x5c>
   25e20:	add	r0, pc, r0
   25e24:	stm	sp, {r0, r5}
   25e28:	ldr	r0, [pc, #32]	; 25e50 <monitor_signoff+0x60>
   25e2c:	ldr	r0, [pc, r0]
   25e30:	add	r3, r0, #88	; 0x58
   25e34:	ldr	r2, [pc, #24]	; 25e54 <monitor_signoff+0x64>
   25e38:	add	r2, pc, r2
   25e3c:	mov	r0, r4
   25e40:	bl	d9f4 <sendto_monitor@plt>
   25e44:	sub	sp, fp, #8
   25e48:	pop	{r4, r5, fp, pc}
   25e4c:	.word	0x0001b87d
   25e50:	.word	0x00034d2c
   25e54:	.word	0x0001d9c0

00025e58 <clear_monitor>:
   25e58:	push	{r4, r5, r6, r7, fp, lr}
   25e5c:	add	fp, sp, #16
   25e60:	mov	r4, r0
   25e64:	ldr	r0, [r0, #432]	; 0x1b0
   25e68:	ldr	r5, [r0, #328]	; 0x148
   25e6c:	cmp	r5, #0
   25e70:	beq	25ea4 <clear_monitor+0x4c>
   25e74:	ldr	r6, [r5]
   25e78:	ldr	r7, [r5, #8]
   25e7c:	add	r1, r6, #32
   25e80:	mov	r0, r4
   25e84:	bl	25ebc <rb_dlinkFindDestroy>
   25e88:	mov	r0, r5
   25e8c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   25e90:	mov	r0, r6
   25e94:	bl	d4fc <free_monitor@plt>
   25e98:	cmp	r7, #0
   25e9c:	mov	r5, r7
   25ea0:	bne	25e74 <clear_monitor+0x1c>
   25ea4:	ldr	r0, [r4, #432]	; 0x1b0
   25ea8:	mov	r1, #0
   25eac:	str	r1, [r0, #328]	; 0x148
   25eb0:	str	r1, [r0, #332]	; 0x14c
   25eb4:	str	r1, [r0, #336]	; 0x150
   25eb8:	pop	{r4, r5, r6, r7, fp, pc}

00025ebc <rb_dlinkFindDestroy>:
   25ebc:	push	{fp, lr}
   25ec0:	mov	fp, sp
   25ec4:	cmp	r1, #0
   25ec8:	beq	25ee8 <rb_dlinkFindDestroy+0x2c>
   25ecc:	cmp	r0, #0
   25ed0:	beq	25f08 <rb_dlinkFindDestroy+0x4c>
   25ed4:	bl	25f40 <rb_dlinkFindDelete>
   25ed8:	cmp	r0, #0
   25edc:	popeq	{fp, pc}
   25ee0:	pop	{fp, lr}
   25ee4:	b	d7b4 <rb_free_rb_dlink_node@plt>
   25ee8:	ldr	r0, [pc, #56]	; 25f28 <rb_dlinkFindDestroy+0x6c>
   25eec:	add	r0, pc, r0
   25ef0:	ldr	r1, [pc, #52]	; 25f2c <rb_dlinkFindDestroy+0x70>
   25ef4:	add	r1, pc, r1
   25ef8:	ldr	r3, [pc, #48]	; 25f30 <rb_dlinkFindDestroy+0x74>
   25efc:	add	r3, pc, r3
   25f00:	movw	r2, #287	; 0x11f
   25f04:	bl	e7e0 <__assert_fail@plt>
   25f08:	ldr	r0, [pc, #36]	; 25f34 <rb_dlinkFindDestroy+0x78>
   25f0c:	add	r0, pc, r0
   25f10:	ldr	r1, [pc, #32]	; 25f38 <rb_dlinkFindDestroy+0x7c>
   25f14:	add	r1, pc, r1
   25f18:	ldr	r3, [pc, #28]	; 25f3c <rb_dlinkFindDestroy+0x80>
   25f1c:	add	r3, pc, r3
   25f20:	mov	r2, #288	; 0x120
   25f24:	bl	e7e0 <__assert_fail@plt>
   25f28:	.word	0x000202a9
   25f2c:	.word	0x0001aa22
   25f30:	.word	0x0001b029
   25f34:	.word	0x0001aa65
   25f38:	.word	0x0001aa02
   25f3c:	.word	0x0001b009

00025f40 <rb_dlinkFindDelete>:
   25f40:	push	{fp, lr}
   25f44:	mov	fp, sp
   25f48:	cmp	r1, #0
   25f4c:	beq	25fc0 <rb_dlinkFindDelete+0x80>
   25f50:	mov	ip, r0
   25f54:	cmp	r0, #0
   25f58:	beq	25fe0 <rb_dlinkFindDelete+0xa0>
   25f5c:	ldr	r3, [r1]
   25f60:	mov	r0, r3
   25f64:	cmp	r3, #0
   25f68:	beq	25fbc <rb_dlinkFindDelete+0x7c>
   25f6c:	ldr	r2, [r0]
   25f70:	ldr	r3, [r0, #8]
   25f74:	cmp	r2, ip
   25f78:	bne	25f60 <rb_dlinkFindDelete+0x20>
   25f7c:	add	r2, r3, #4
   25f80:	cmp	r3, #0
   25f84:	addeq	r2, r1, #4
   25f88:	ldr	r3, [r0, #4]
   25f8c:	str	r3, [r2]
   25f90:	ldmib	r0, {r2, ip}
   25f94:	cmp	r2, #0
   25f98:	mov	r3, r1
   25f9c:	addne	r3, r2, #8
   25fa0:	str	ip, [r3]
   25fa4:	mov	r2, #0
   25fa8:	str	r2, [r0, #4]
   25fac:	str	r2, [r0, #8]
   25fb0:	ldr	r2, [r1, #8]
   25fb4:	sub	r2, r2, #1
   25fb8:	str	r2, [r1, #8]
   25fbc:	pop	{fp, pc}
   25fc0:	ldr	r0, [pc, #56]	; 26000 <rb_dlinkFindDelete+0xc0>
   25fc4:	add	r0, pc, r0
   25fc8:	ldr	r1, [pc, #52]	; 26004 <rb_dlinkFindDelete+0xc4>
   25fcc:	add	r1, pc, r1
   25fd0:	ldr	r3, [pc, #48]	; 26008 <rb_dlinkFindDelete+0xc8>
   25fd4:	add	r3, pc, r3
   25fd8:	movw	r2, #258	; 0x102
   25fdc:	bl	e7e0 <__assert_fail@plt>
   25fe0:	ldr	r0, [pc, #36]	; 2600c <rb_dlinkFindDelete+0xcc>
   25fe4:	add	r0, pc, r0
   25fe8:	ldr	r1, [pc, #32]	; 26010 <rb_dlinkFindDelete+0xd0>
   25fec:	add	r1, pc, r1
   25ff0:	ldr	r3, [pc, #28]	; 26014 <rb_dlinkFindDelete+0xd4>
   25ff4:	add	r3, pc, r3
   25ff8:	movw	r2, #259	; 0x103
   25ffc:	bl	e7e0 <__assert_fail@plt>
   26000:	.word	0x000201d1
   26004:	.word	0x0001a94a
   26008:	.word	0x0001af82
   2600c:	.word	0x0001a98d
   26010:	.word	0x0001a92a
   26014:	.word	0x0001af62

00026018 <msgbuf_parse>:
   26018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2601c:	add	fp, sp, #24
   26020:	mov	r5, r1
   26024:	mov	r4, r0
   26028:	bl	261c4 <msgbuf_init>
   2602c:	ldrb	r0, [r5]
   26030:	cmp	r0, #64	; 0x40
   26034:	bne	2611c <msgbuf_parse+0x104>
   26038:	mov	r0, r5
   2603c:	mov	r1, #32
   26040:	bl	dce8 <strchr@plt>
   26044:	cmp	r0, #0
   26048:	beq	26060 <msgbuf_parse+0x48>
   2604c:	mov	r8, r0
   26050:	sub	r0, r0, r5
   26054:	cmp	r0, #512	; 0x200
   26058:	bge	26078 <msgbuf_parse+0x60>
   2605c:	b	26080 <msgbuf_parse+0x68>
   26060:	mov	r0, r5
   26064:	bl	dc94 <strlen@plt>
   26068:	mov	r1, r0
   2606c:	mov	r0, #1
   26070:	cmp	r1, #512	; 0x200
   26074:	bcc	261a8 <msgbuf_parse+0x190>
   26078:	movw	r0, #511	; 0x1ff
   2607c:	add	r8, r5, r0
   26080:	mov	r9, #0
   26084:	strb	r9, [r8]
   26088:	b	26094 <msgbuf_parse+0x7c>
   2608c:	cmp	r5, #0
   26090:	beq	26118 <msgbuf_parse+0x100>
   26094:	add	r7, r5, #1
   26098:	mov	r0, r7
   2609c:	mov	r1, #59	; 0x3b
   260a0:	bl	dce8 <strchr@plt>
   260a4:	mov	r5, r0
   260a8:	mov	r0, r7
   260ac:	mov	r1, #61	; 0x3d
   260b0:	bl	dce8 <strchr@plt>
   260b4:	cmp	r5, #0
   260b8:	beq	260d8 <msgbuf_parse+0xc0>
   260bc:	mov	r6, #0
   260c0:	strb	r6, [r5]
   260c4:	cmp	r0, r5
   260c8:	bhi	260f0 <msgbuf_parse+0xd8>
   260cc:	cmp	r0, #0
   260d0:	bne	260e0 <msgbuf_parse+0xc8>
   260d4:	b	260f0 <msgbuf_parse+0xd8>
   260d8:	cmp	r0, #0
   260dc:	beq	260ec <msgbuf_parse+0xd4>
   260e0:	strb	r9, [r0], #1
   260e4:	mov	r6, r0
   260e8:	b	260f0 <msgbuf_parse+0xd8>
   260ec:	mov	r6, #0
   260f0:	ldrb	r0, [r7]
   260f4:	cmp	r0, #0
   260f8:	beq	2608c <msgbuf_parse+0x74>
   260fc:	mov	r0, r6
   26100:	bl	261d0 <msgbuf_unescape_value>
   26104:	mov	r0, r4
   26108:	mov	r1, r7
   2610c:	mov	r2, r6
   26110:	bl	26244 <msgbuf_append_tag>
   26114:	b	2608c <msgbuf_parse+0x74>
   26118:	add	r5, r8, #1
   2611c:	mov	r0, r5
   26120:	bl	dc94 <strlen@plt>
   26124:	movw	r1, #511	; 0x1ff
   26128:	cmp	r0, r1
   2612c:	movcs	r0, #0
   26130:	strbcs	r0, [r5, #510]	; 0x1fe
   26134:	ldrb	r0, [r5]
   26138:	cmp	r0, #58	; 0x3a
   2613c:	bne	26168 <msgbuf_parse+0x150>
   26140:	add	r0, r5, #1
   26144:	str	r0, [r4, #184]	; 0xb8
   26148:	mov	r1, #32
   2614c:	bl	dce8 <strchr@plt>
   26150:	cmp	r0, #0
   26154:	beq	261b4 <msgbuf_parse+0x19c>
   26158:	mov	r5, r0
   2615c:	mov	r0, #0
   26160:	strb	r0, [r5]
   26164:	ldrb	r0, [r5, #1]!
   26168:	cmp	r0, #0
   2616c:	beq	261ac <msgbuf_parse+0x194>
   26170:	mov	r0, r5
   26174:	bl	dc94 <strlen@plt>
   26178:	add	r0, r5, r0
   2617c:	str	r0, [r4, #196]	; 0xc4
   26180:	add	r1, r4, #204	; 0xcc
   26184:	mov	r0, r5
   26188:	mov	r2, #15
   2618c:	bl	da54 <rb_string_to_array@plt>
   26190:	str	r0, [r4, #200]	; 0xc8
   26194:	cmp	r0, #0
   26198:	beq	261bc <msgbuf_parse+0x1a4>
   2619c:	ldr	r0, [r4, #204]	; 0xcc
   261a0:	str	r0, [r4, #192]	; 0xc0
   261a4:	mov	r0, #0
   261a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   261ac:	mov	r0, #2
   261b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   261b4:	mov	r0, #4
   261b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   261bc:	mov	r0, #3
   261c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000261c4 <msgbuf_init>:
   261c4:	mov	r1, #0
   261c8:	mov	r2, #264	; 0x108
   261cc:	b	df28 <memset@plt>

000261d0 <msgbuf_unescape_value>:
   261d0:	cmp	r0, #0
   261d4:	bxeq	lr
   261d8:	ldr	ip, [pc, #96]	; 26240 <msgbuf_unescape_value+0x70>
   261dc:	add	ip, pc, ip
   261e0:	mov	r1, r0
   261e4:	ldrb	r3, [r1]
   261e8:	cmp	r3, #92	; 0x5c
   261ec:	beq	26208 <msgbuf_unescape_value+0x38>
   261f0:	cmp	r3, #0
   261f4:	beq	26234 <msgbuf_unescape_value+0x64>
   261f8:	strb	r3, [r0]
   261fc:	add	r1, r1, #1
   26200:	add	r0, r0, #1
   26204:	b	261e4 <msgbuf_unescape_value+0x14>
   26208:	ldrb	r3, [r1, #1]
   2620c:	cmp	r3, #0
   26210:	beq	26230 <msgbuf_unescape_value+0x60>
   26214:	ldrb	r2, [ip, r3]
   26218:	cmp	r2, #0
   2621c:	moveq	r2, r3
   26220:	strb	r2, [r0]
   26224:	add	r1, r1, #2
   26228:	add	r0, r0, #1
   2622c:	b	261e4 <msgbuf_unescape_value+0x14>
   26230:	add	r1, r1, #1
   26234:	ldrb	r1, [r1]
   26238:	strb	r1, [r0]
   2623c:	bx	lr
   26240:	.word	0x0001d630

00026244 <msgbuf_append_tag>:
   26244:	push	{fp, lr}
   26248:	mov	fp, sp
   2624c:	ldr	ip, [r0]
   26250:	cmp	ip, #14
   26254:	pophi	{fp, pc}
   26258:	add	r3, ip, ip, lsl #1
   2625c:	add	r3, r0, r3, lsl #2
   26260:	mov	lr, #0
   26264:	stmib	r3, {r1, r2, lr}
   26268:	add	r1, ip, #1
   2626c:	str	r1, [r0]
   26270:	pop	{fp, pc}

00026274 <msgbuf_reconstruct_tail>:
   26274:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26278:	add	fp, sp, #24
   2627c:	ldr	r7, [r0, #196]	; 0xc4
   26280:	cmp	r7, #0
   26284:	beq	26304 <msgbuf_reconstruct_tail+0x90>
   26288:	mov	r5, r1
   2628c:	mov	r4, r0
   26290:	ldr	r6, [r0, #200]	; 0xc8
   26294:	cmp	r6, r1
   26298:	bcc	26304 <msgbuf_reconstruct_tail+0x90>
   2629c:	cmp	r5, #0
   262a0:	beq	262c0 <msgbuf_reconstruct_tail+0x4c>
   262a4:	add	r0, r4, r5, lsl #2
   262a8:	ldr	r8, [r0, #200]	; 0xc8
   262ac:	mov	r0, r8
   262b0:	bl	dc94 <strlen@plt>
   262b4:	add	r0, r8, r0
   262b8:	add	r0, r0, #1
   262bc:	b	262c4 <msgbuf_reconstruct_tail+0x50>
   262c0:	ldr	r0, [r4, #204]	; 0xcc
   262c4:	cmp	r6, r5
   262c8:	cmpeq	r0, r7
   262cc:	beq	26304 <msgbuf_reconstruct_tail+0x90>
   262d0:	add	r1, r4, r5, lsl #2
   262d4:	str	r0, [r1, #204]	; 0xcc
   262d8:	ldr	r1, [r4, #196]	; 0xc4
   262dc:	cmp	r0, r1
   262e0:	bcs	26304 <msgbuf_reconstruct_tail+0x90>
   262e4:	mov	r1, #32
   262e8:	ldrb	r2, [r0]
   262ec:	cmp	r2, #0
   262f0:	strbeq	r1, [r0]
   262f4:	ldr	r2, [r4, #196]	; 0xc4
   262f8:	add	r0, r0, #1
   262fc:	cmp	r0, r2
   26300:	bcc	262e8 <msgbuf_reconstruct_tail+0x74>
   26304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026308 <msgbuf_unparse_linebuf_tags>:
   26308:	ldr	ip, [r2]
   2630c:	ldr	r3, [r2, #4]
   26310:	mov	r2, ip
   26314:	b	26318 <msgbuf_unparse_tags>

00026318 <msgbuf_unparse_tags>:
   26318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2631c:	add	fp, sp, #28
   26320:	sub	sp, sp, #20
   26324:	mov	r6, r2
   26328:	ldr	r2, [r2]
   2632c:	cmp	r2, #0
   26330:	mov	r2, r0
   26334:	beq	264e4 <msgbuf_unparse_tags+0x1cc>
   26338:	add	r1, r1, r0
   2633c:	sub	r5, r1, #2
   26340:	mov	r1, #0
   26344:	str	r0, [sp, #8]
   26348:	mov	r8, #0
   2634c:	str	r0, [sp, #4]
   26350:	mov	r9, r0
   26354:	str	r3, [sp, #12]
   26358:	b	26374 <msgbuf_unparse_tags+0x5c>
   2635c:	ldr	r3, [sp, #12]
   26360:	ldr	r1, [sp, #16]
   26364:	ldr	r0, [r6]
   26368:	add	r8, r8, #1
   2636c:	cmp	r8, r0
   26370:	bcs	264b8 <msgbuf_unparse_tags+0x1a0>
   26374:	add	r0, r8, r8, lsl #1
   26378:	add	sl, r6, r0, lsl #2
   2637c:	ldr	r0, [sl, #12]
   26380:	tst	r0, r3
   26384:	beq	26364 <msgbuf_unparse_tags+0x4c>
   26388:	cmp	r9, r5
   2638c:	bcs	264b8 <msgbuf_unparse_tags+0x1a0>
   26390:	tst	r1, #1
   26394:	mov	r0, #64	; 0x40
   26398:	movwne	r0, #59	; 0x3b
   2639c:	strb	r0, [r9], #1
   263a0:	ldr	r7, [sl, #4]
   263a4:	cmp	r7, #0
   263a8:	beq	26364 <msgbuf_unparse_tags+0x4c>
   263ac:	str	r1, [sp, #16]
   263b0:	mov	r0, r7
   263b4:	bl	dc94 <strlen@plt>
   263b8:	cmp	r0, #0
   263bc:	beq	2635c <msgbuf_unparse_tags+0x44>
   263c0:	add	r4, r9, r0
   263c4:	cmp	r4, r5
   263c8:	bhi	264b4 <msgbuf_unparse_tags+0x19c>
   263cc:	mov	r0, r9
   263d0:	mov	r1, r7
   263d4:	bl	d8b0 <strcat@plt>
   263d8:	ldr	r0, [sl, #8]!
   263dc:	cmp	r0, #0
   263e0:	beq	2647c <msgbuf_unparse_tags+0x164>
   263e4:	cmp	r4, r5
   263e8:	bcs	264d4 <msgbuf_unparse_tags+0x1bc>
   263ec:	mov	r0, #61	; 0x3d
   263f0:	strb	r0, [r4], #1
   263f4:	ldr	r0, [sl]
   263f8:	bl	dc94 <strlen@plt>
   263fc:	add	r1, r4, r0
   26400:	cmp	r1, r5
   26404:	ldr	r3, [sp, #12]
   26408:	ldr	r1, [sp, #16]
   2640c:	bhi	264b8 <msgbuf_unparse_tags+0x1a0>
   26410:	cmp	r0, #0
   26414:	beq	264a4 <msgbuf_unparse_tags+0x18c>
   26418:	mov	ip, r6
   2641c:	mov	r1, #0
   26420:	ldr	r6, [pc, #208]	; 264f8 <msgbuf_unparse_tags+0x1e0>
   26424:	add	r6, pc, r6
   26428:	mov	lr, #92	; 0x5c
   2642c:	b	26440 <msgbuf_unparse_tags+0x128>
   26430:	add	r1, r1, #1
   26434:	add	r4, r4, #1
   26438:	cmp	r0, r1
   2643c:	beq	26490 <msgbuf_unparse_tags+0x178>
   26440:	ldr	r2, [sl]
   26444:	ldrb	r7, [r2, r1]
   26448:	ldrb	r2, [r6, r7]
   2644c:	cmp	r2, #0
   26450:	beq	2646c <msgbuf_unparse_tags+0x154>
   26454:	add	r7, r4, #2
   26458:	cmp	r7, r5
   2645c:	bhi	26490 <msgbuf_unparse_tags+0x178>
   26460:	strb	lr, [r4]
   26464:	strb	r2, [r4, #1]!
   26468:	b	26430 <msgbuf_unparse_tags+0x118>
   2646c:	cmp	r4, r5
   26470:	bcs	26490 <msgbuf_unparse_tags+0x178>
   26474:	strb	r7, [r4]
   26478:	b	26430 <msgbuf_unparse_tags+0x118>
   2647c:	mov	r9, r4
   26480:	str	r4, [sp, #8]
   26484:	mov	r1, #1
   26488:	ldr	r3, [sp, #12]
   2648c:	b	26364 <msgbuf_unparse_tags+0x4c>
   26490:	mov	r9, r4
   26494:	str	r4, [sp, #8]
   26498:	mov	r1, #1
   2649c:	mov	r6, ip
   264a0:	b	26364 <msgbuf_unparse_tags+0x4c>
   264a4:	mov	r9, r4
   264a8:	str	r4, [sp, #8]
   264ac:	mov	r1, #1
   264b0:	b	26364 <msgbuf_unparse_tags+0x4c>
   264b4:	ldr	r1, [sp, #16]
   264b8:	tst	r1, #1
   264bc:	beq	264e0 <msgbuf_unparse_tags+0x1c8>
   264c0:	mov	r0, #32
   264c4:	ldr	r2, [sp, #8]
   264c8:	strb	r0, [r2], #1
   264cc:	ldr	r0, [sp, #4]
   264d0:	b	264e4 <msgbuf_unparse_tags+0x1cc>
   264d4:	ldr	r1, [sp, #16]
   264d8:	tst	r1, #1
   264dc:	bne	264c0 <msgbuf_unparse_tags+0x1a8>
   264e0:	ldmib	sp, {r0, r2}
   264e4:	mov	r1, #0
   264e8:	strb	r1, [r2], -r0
   264ec:	mov	r0, r2
   264f0:	sub	sp, fp, #28
   264f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   264f8:	.word	0x0001d4e8

000264fc <msgbuf_unparse_prefix>:
   264fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26500:	add	fp, sp, #24
   26504:	mov	r7, r3
   26508:	mov	r6, r2
   2650c:	mov	r5, r1
   26510:	mov	r8, r0
   26514:	ldr	r2, [r1]
   26518:	mov	r4, #0
   2651c:	mov	r1, #0
   26520:	bl	df28 <memset@plt>
   26524:	ldr	r0, [r6]
   26528:	cmp	r0, #0
   2652c:	beq	26550 <msgbuf_unparse_prefix+0x54>
   26530:	ldr	r1, [r5]
   26534:	cmp	r1, #512	; 0x200
   26538:	movwhi	r1, #513	; 0x201
   2653c:	mov	r0, r8
   26540:	mov	r2, r6
   26544:	mov	r3, r7
   26548:	bl	26318 <msgbuf_unparse_tags>
   2654c:	mov	r4, r0
   26550:	movw	r0, #511	; 0x1ff
   26554:	add	r0, r4, r0
   26558:	ldr	r1, [r5]
   2655c:	cmp	r1, r0
   26560:	strhi	r0, [r5]
   26564:	movw	r9, #510	; 0x1fe
   26568:	ldr	r3, [r6, #184]	; 0xb8
   2656c:	ldr	r0, [pc, #140]	; 26600 <msgbuf_unparse_prefix+0x104>
   26570:	ldr	r0, [pc, r0]
   26574:	cmp	r3, #0
   26578:	addeq	r3, r0, #88	; 0x58
   2657c:	ldr	r1, [r5]
   26580:	ldr	r2, [pc, #124]	; 26604 <msgbuf_unparse_prefix+0x108>
   26584:	add	r2, pc, r2
   26588:	mov	r0, r8
   2658c:	bl	d658 <rb_snprintf_append@plt>
   26590:	cmp	r0, #0
   26594:	mov	r7, r4
   26598:	addgt	r7, r7, r0
   2659c:	ldr	r3, [r6, #192]	; 0xc0
   265a0:	cmp	r3, #0
   265a4:	beq	265c4 <msgbuf_unparse_prefix+0xc8>
   265a8:	ldr	r1, [r5]
   265ac:	ldr	r2, [pc, #84]	; 26608 <msgbuf_unparse_prefix+0x10c>
   265b0:	add	r2, pc, r2
   265b4:	mov	r0, r8
   265b8:	bl	d658 <rb_snprintf_append@plt>
   265bc:	cmp	r0, #0
   265c0:	addgt	r7, r7, r0
   265c4:	add	r4, r4, r9
   265c8:	ldr	r3, [r6, #188]	; 0xbc
   265cc:	cmp	r3, #0
   265d0:	beq	265f0 <msgbuf_unparse_prefix+0xf4>
   265d4:	ldr	r1, [r5]
   265d8:	ldr	r2, [pc, #44]	; 2660c <msgbuf_unparse_prefix+0x110>
   265dc:	add	r2, pc, r2
   265e0:	mov	r0, r8
   265e4:	bl	d658 <rb_snprintf_append@plt>
   265e8:	cmp	r0, #0
   265ec:	addgt	r7, r7, r0
   265f0:	cmp	r7, r4
   265f4:	movhi	r7, r4
   265f8:	mov	r0, r7
   265fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26600:	.word	0x000345e8
   26604:	.word	0x0001d283
   26608:	.word	0x00021087
   2660c:	.word	0x0002105b

00026610 <msgbuf_unparse>:
   26610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26614:	add	fp, sp, #28
   26618:	sub	sp, sp, #4
   2661c:	mov	r4, r2
   26620:	mov	r8, r0
   26624:	str	r1, [sp]
   26628:	mov	r1, sp
   2662c:	bl	e2e8 <msgbuf_unparse_prefix@plt>
   26630:	ldr	r0, [r4, #200]	; 0xc8
   26634:	cmp	r0, #0
   26638:	beq	266c4 <msgbuf_unparse+0xb4>
   2663c:	add	r7, r4, #204	; 0xcc
   26640:	mov	r5, #0
   26644:	ldr	r6, [sp]
   26648:	ldr	r9, [pc, #128]	; 266d0 <msgbuf_unparse+0xc0>
   2664c:	add	r9, pc, r9
   26650:	ldr	sl, [pc, #124]	; 266d4 <msgbuf_unparse+0xc4>
   26654:	add	sl, pc, sl
   26658:	b	26688 <msgbuf_unparse+0x78>
   2665c:	cmp	r5, #0
   26660:	mov	r2, sl
   26664:	moveq	r2, r9
   26668:	ldr	r3, [r7, r5, lsl #2]
   2666c:	mov	r0, r8
   26670:	mov	r1, r6
   26674:	bl	d658 <rb_snprintf_append@plt>
   26678:	add	r5, r5, #1
   2667c:	ldr	r0, [r4, #200]	; 0xc8
   26680:	cmp	r5, r0
   26684:	bcs	266c4 <msgbuf_unparse+0xb4>
   26688:	sub	r0, r0, #1
   2668c:	cmp	r5, r0
   26690:	bne	2665c <msgbuf_unparse+0x4c>
   26694:	ldr	r0, [r7, r5, lsl #2]
   26698:	mov	r1, #32
   2669c:	bl	dce8 <strchr@plt>
   266a0:	cmp	r0, #0
   266a4:	beq	2665c <msgbuf_unparse+0x4c>
   266a8:	cmp	r5, #0
   266ac:	ldr	r2, [pc, #36]	; 266d8 <msgbuf_unparse+0xc8>
   266b0:	add	r2, pc, r2
   266b4:	ldr	r0, [pc, #32]	; 266dc <msgbuf_unparse+0xcc>
   266b8:	add	r0, pc, r0
   266bc:	moveq	r2, r0
   266c0:	b	26668 <msgbuf_unparse+0x58>
   266c4:	mov	r0, #0
   266c8:	sub	sp, fp, #28
   266cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   266d0:	.word	0x00021369
   266d4:	.word	0x00021360
   266d8:	.word	0x0001fd8f
   266dc:	.word	0x0001fd88

000266e0 <msgbuf_vunparse_fmt>:
   266e0:	push	{r4, sl, fp, lr}
   266e4:	add	fp, sp, #8
   266e8:	sub	sp, sp, #8
   266ec:	mov	r4, r0
   266f0:	str	r1, [sp, #4]
   266f4:	add	r1, sp, #4
   266f8:	bl	e2e8 <msgbuf_unparse_prefix@plt>
   266fc:	mov	r0, r4
   26700:	bl	dc94 <strlen@plt>
   26704:	add	r4, r4, r0
   26708:	ldr	r1, [sp, #4]
   2670c:	sub	r1, r1, r0
   26710:	ldr	r2, [fp, #8]
   26714:	ldr	r3, [fp, #12]
   26718:	mov	r0, r4
   2671c:	bl	e450 <vsnprintf@plt>
   26720:	mov	r0, #0
   26724:	sub	sp, fp, #8
   26728:	pop	{r4, sl, fp, pc}

0002672c <msgbuf_unparse_fmt>:
   2672c:	push	{fp, lr}
   26730:	mov	fp, sp
   26734:	sub	sp, sp, #16
   26738:	add	ip, fp, #12
   2673c:	str	ip, [fp, #-4]
   26740:	str	ip, [sp, #4]
   26744:	ldr	ip, [fp, #8]
   26748:	str	ip, [sp]
   2674c:	bl	d688 <msgbuf_vunparse_fmt@plt>
   26750:	mov	r0, #0
   26754:	mov	sp, fp
   26758:	pop	{fp, pc}

0002675c <msgbuf_cache_init>:
   2675c:	push	{r4, sl, fp, lr}
   26760:	add	fp, sp, #8
   26764:	mov	ip, #0
   26768:	str	ip, [r0, #1672]	; 0x688
   2676c:	str	r1, [r0]
   26770:	str	ip, [r0, #516]	; 0x204
   26774:	ldr	r3, [r1]
   26778:	cmp	r3, #0
   2677c:	beq	267a0 <msgbuf_cache_init+0x44>
   26780:	ldr	lr, [r1], #12
   26784:	ldr	r3, [r0, #516]	; 0x204
   26788:	ldr	r4, [r1], #12
   2678c:	orr	r3, r3, r4
   26790:	add	ip, ip, #1
   26794:	cmp	ip, lr
   26798:	bcc	26788 <msgbuf_cache_init+0x2c>
   2679c:	str	r3, [r0, #516]	; 0x204
   267a0:	mov	r1, #0
   267a4:	mov	r3, #0
   267a8:	add	r4, r0, r3
   267ac:	str	r1, [r4, #552]	; 0x228
   267b0:	str	r1, [r4, #520]	; 0x208
   267b4:	add	r3, r3, #36	; 0x24
   267b8:	cmp	r3, #1152	; 0x480
   267bc:	bne	267a8 <msgbuf_cache_init+0x4c>
   267c0:	add	r0, r0, #4
   267c4:	movw	r1, #511	; 0x1ff
   267c8:	pop	{r4, sl, fp, lr}
   267cc:	b	e1f8 <rb_fsnprint@plt>

000267d0 <msgbuf_cache_initf>:
   267d0:	push	{fp, lr}
   267d4:	mov	fp, sp
   267d8:	sub	sp, sp, #24
   267dc:	add	ip, fp, #8
   267e0:	str	ip, [fp, #-4]
   267e4:	str	r2, [sp, #16]
   267e8:	sub	r2, fp, #4
   267ec:	str	r2, [sp, #12]
   267f0:	mov	r2, #0
   267f4:	str	r2, [sp, #8]
   267f8:	stm	sp, {r2, r3}
   267fc:	mov	r2, sp
   26800:	bl	e798 <msgbuf_cache_init@plt>
   26804:	mov	sp, fp
   26808:	pop	{fp, pc}

0002680c <msgbuf_cache_get>:
   2680c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26810:	add	fp, sp, #24
   26814:	sub	sp, sp, #48	; 0x30
   26818:	mov	r5, r1
   2681c:	mov	r9, r0
   26820:	ldr	r7, [r0, #1672]	; 0x688
   26824:	cmp	r7, #0
   26828:	beq	26864 <msgbuf_cache_get+0x58>
   2682c:	ldr	r0, [r7]
   26830:	mov	r4, #0
   26834:	cmp	r0, r5
   26838:	beq	268e8 <msgbuf_cache_get+0xdc>
   2683c:	mov	r0, #1
   26840:	mov	r4, r7
   26844:	ldr	r7, [r7, #32]
   26848:	cmp	r7, #0
   2684c:	beq	26918 <msgbuf_cache_get+0x10c>
   26850:	add	r0, r0, #1
   26854:	ldr	r1, [r7]
   26858:	cmp	r1, r5
   2685c:	bne	26840 <msgbuf_cache_get+0x34>
   26860:	b	268e8 <msgbuf_cache_get+0xdc>
   26864:	mov	r0, #0
   26868:	add	r0, r0, r0, lsl #3
   2686c:	add	r0, r9, r0, lsl #2
   26870:	add	r7, r0, #520	; 0x208
   26874:	mov	r0, r9
   26878:	ldr	r1, [r0], #4
   2687c:	str	r5, [fp, #-28]	; 0xffffffe4
   26880:	str	r1, [fp, #-32]	; 0xffffffe0
   26884:	mov	r4, #0
   26888:	str	r4, [sp, #36]	; 0x24
   2688c:	str	r4, [sp, #32]
   26890:	str	r4, [sp, #28]
   26894:	str	r0, [sp, #24]
   26898:	movw	r0, #511	; 0x1ff
   2689c:	str	r0, [sp, #20]
   268a0:	mov	r8, sp
   268a4:	add	r0, r8, #20
   268a8:	str	r0, [sp, #16]
   268ac:	sub	r0, fp, #32
   268b0:	str	r0, [sp, #12]
   268b4:	ldr	r0, [pc, #116]	; 26930 <msgbuf_cache_get+0x124>
   268b8:	ldr	r0, [pc, r0]
   268bc:	str	r0, [sp, #8]
   268c0:	str	r4, [sp, #4]
   268c4:	movw	r0, #513	; 0x201
   268c8:	str	r0, [sp]
   268cc:	mov	r6, r7
   268d0:	str	r5, [r6], #4
   268d4:	mov	r0, r6
   268d8:	bl	d7a8 <rb_linebuf_newbuf@plt>
   268dc:	mov	r0, r6
   268e0:	mov	r1, r8
   268e4:	bl	e45c <rb_linebuf_put@plt>
   268e8:	ldr	r0, [r9, #1672]	; 0x688
   268ec:	cmp	r0, r7
   268f0:	beq	2690c <msgbuf_cache_get+0x100>
   268f4:	cmp	r4, #0
   268f8:	ldrne	r0, [r7, #32]
   268fc:	strne	r0, [r4, #32]
   26900:	ldr	r0, [r9, #1672]	; 0x688
   26904:	str	r0, [r7, #32]
   26908:	str	r7, [r9, #1672]	; 0x688
   2690c:	add	r0, r7, #4
   26910:	sub	sp, fp, #24
   26914:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26918:	cmp	r0, #31
   2691c:	bls	26868 <msgbuf_cache_get+0x5c>
   26920:	add	r0, r4, #4
   26924:	bl	e00c <rb_linebuf_donebuf@plt>
   26928:	mov	r7, r4
   2692c:	b	26874 <msgbuf_cache_get+0x68>
   26930:	.word	0x00034060

00026934 <msgbuf_cache_free>:
   26934:	push	{r4, r5, fp, lr}
   26938:	add	fp, sp, #8
   2693c:	mov	r4, r0
   26940:	ldr	r5, [r0, #1672]	; 0x688
   26944:	cmp	r5, #0
   26948:	beq	26960 <msgbuf_cache_free+0x2c>
   2694c:	add	r0, r5, #4
   26950:	bl	e00c <rb_linebuf_donebuf@plt>
   26954:	ldr	r5, [r5, #32]
   26958:	cmp	r5, #0
   2695c:	bne	2694c <msgbuf_cache_free+0x18>
   26960:	mov	r0, #0
   26964:	str	r0, [r4, #1672]	; 0x688
   26968:	pop	{r4, r5, fp, pc}

0002696c <add_top_conf>:
   2696c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26970:	add	fp, sp, #24
   26974:	mov	r4, r3
   26978:	mov	r8, r2
   2697c:	mov	r6, r1
   26980:	mov	r7, r0
   26984:	mov	r0, #28
   26988:	bl	269c0 <rb_malloc>
   2698c:	mov	r5, r0
   26990:	str	r4, [r0, #24]
   26994:	str	r7, [r0]
   26998:	stmib	r0, {r6, r8}
   2699c:	bl	dc58 <rb_make_rb_dlink_node@plt>
   269a0:	mov	r1, r0
   269a4:	ldr	r2, [pc, #16]	; 269bc <add_top_conf+0x50>
   269a8:	add	r2, pc, r2
   269ac:	mov	r0, r5
   269b0:	bl	269e0 <rb_dlinkAdd>
   269b4:	mov	r0, #0
   269b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   269bc:	.word	0x0003f7e4

000269c0 <rb_malloc>:
   269c0:	push	{fp, lr}
   269c4:	mov	fp, sp
   269c8:	mov	r1, r0
   269cc:	mov	r0, #1
   269d0:	bl	cfa4 <calloc@plt>
   269d4:	cmp	r0, #0
   269d8:	popne	{fp, pc}
   269dc:	bl	d448 <rb_outofmemory@plt>

000269e0 <rb_dlinkAdd>:
   269e0:	push	{fp, lr}
   269e4:	mov	fp, sp
   269e8:	cmp	r0, #0
   269ec:	beq	26a4c <rb_dlinkAdd+0x6c>
   269f0:	cmp	r1, #0
   269f4:	beq	26a6c <rb_dlinkAdd+0x8c>
   269f8:	cmp	r2, #0
   269fc:	beq	26a8c <rb_dlinkAdd+0xac>
   26a00:	mov	r3, #0
   26a04:	stm	r1, {r0, r3}
   26a08:	ldr	r0, [r2]
   26a0c:	str	r0, [r1, #8]
   26a10:	ldr	r0, [r2]
   26a14:	cmp	r0, #0
   26a18:	beq	26a28 <rb_dlinkAdd+0x48>
   26a1c:	add	r0, r0, #4
   26a20:	str	r1, [r0]
   26a24:	b	26a38 <rb_dlinkAdd+0x58>
   26a28:	mov	r0, r2
   26a2c:	ldr	r3, [r0, #4]!
   26a30:	cmp	r3, #0
   26a34:	streq	r1, [r0]
   26a38:	str	r1, [r2]
   26a3c:	ldr	r0, [r2, #8]
   26a40:	add	r0, r0, #1
   26a44:	str	r0, [r2, #8]
   26a48:	pop	{fp, pc}
   26a4c:	ldr	r0, [pc, #88]	; 26aac <rb_dlinkAdd+0xcc>
   26a50:	add	r0, pc, r0
   26a54:	ldr	r1, [pc, #84]	; 26ab0 <rb_dlinkAdd+0xd0>
   26a58:	add	r1, pc, r1
   26a5c:	ldr	r3, [pc, #80]	; 26ab4 <rb_dlinkAdd+0xd4>
   26a60:	add	r3, pc, r3
   26a64:	mov	r2, #143	; 0x8f
   26a68:	bl	e7e0 <__assert_fail@plt>
   26a6c:	ldr	r0, [pc, #68]	; 26ab8 <rb_dlinkAdd+0xd8>
   26a70:	add	r0, pc, r0
   26a74:	ldr	r1, [pc, #64]	; 26abc <rb_dlinkAdd+0xdc>
   26a78:	add	r1, pc, r1
   26a7c:	ldr	r3, [pc, #60]	; 26ac0 <rb_dlinkAdd+0xe0>
   26a80:	add	r3, pc, r3
   26a84:	mov	r2, #144	; 0x90
   26a88:	bl	e7e0 <__assert_fail@plt>
   26a8c:	ldr	r0, [pc, #48]	; 26ac4 <rb_dlinkAdd+0xe4>
   26a90:	add	r0, pc, r0
   26a94:	ldr	r1, [pc, #44]	; 26ac8 <rb_dlinkAdd+0xe8>
   26a98:	add	r1, pc, r1
   26a9c:	ldr	r3, [pc, #40]	; 26acc <rb_dlinkAdd+0xec>
   26aa0:	add	r3, pc, r3
   26aa4:	mov	r2, #145	; 0x91
   26aa8:	bl	e7e0 <__assert_fail@plt>
   26aac:	.word	0x00019f21
   26ab0:	.word	0x00019ebe
   26ab4:	.word	0x00019f1e
   26ab8:	.word	0x00019e9c
   26abc:	.word	0x00019e9e
   26ac0:	.word	0x00019efe
   26ac4:	.word	0x0001f705
   26ac8:	.word	0x00019e7e
   26acc:	.word	0x00019ede

00026ad0 <find_top_conf>:
   26ad0:	push	{r4, r5, r6, sl, fp, lr}
   26ad4:	add	fp, sp, #16
   26ad8:	ldr	r6, [pc, #60]	; 26b1c <find_top_conf+0x4c>
   26adc:	ldr	r6, [pc, r6]
   26ae0:	cmp	r6, #0
   26ae4:	beq	26b10 <find_top_conf+0x40>
   26ae8:	mov	r4, r0
   26aec:	ldr	r5, [r6]
   26af0:	ldr	r0, [r5]
   26af4:	mov	r1, r4
   26af8:	bl	d340 <rb_strcasecmp@plt>
   26afc:	cmp	r0, #0
   26b00:	beq	26b14 <find_top_conf+0x44>
   26b04:	ldr	r6, [r6, #8]
   26b08:	cmp	r6, #0
   26b0c:	bne	26aec <find_top_conf+0x1c>
   26b10:	mov	r5, #0
   26b14:	mov	r0, r5
   26b18:	pop	{r4, r5, r6, sl, fp, pc}
   26b1c:	.word	0x0003f6b0

00026b20 <find_conf_item>:
   26b20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26b24:	add	fp, sp, #24
   26b28:	mov	r4, r1
   26b2c:	mov	r8, r0
   26b30:	ldr	r0, [r0, #24]
   26b34:	cmp	r0, #0
   26b38:	beq	26b88 <find_conf_item+0x68>
   26b3c:	ldr	r5, [r8, #24]
   26b40:	ldr	r0, [r5, #4]
   26b44:	cmp	r0, #0
   26b48:	beq	26b88 <find_conf_item+0x68>
   26b4c:	mov	r7, #0
   26b50:	mov	r6, #24
   26b54:	ldr	r0, [r5]
   26b58:	mov	r1, r4
   26b5c:	bl	d340 <rb_strcasecmp@plt>
   26b60:	cmp	r0, #0
   26b64:	beq	26bbc <find_conf_item+0x9c>
   26b68:	add	r7, r7, #1
   26b6c:	ldr	r0, [r8, #24]
   26b70:	add	r1, r7, r7, lsl #2
   26b74:	add	r5, r0, r1, lsl #2
   26b78:	ldr	r0, [r0, r6]
   26b7c:	add	r6, r6, #20
   26b80:	cmp	r0, #0
   26b84:	bne	26b54 <find_conf_item+0x34>
   26b88:	ldr	r6, [r8, #12]
   26b8c:	cmp	r6, #0
   26b90:	beq	26bb8 <find_conf_item+0x98>
   26b94:	ldr	r5, [r6]
   26b98:	ldr	r0, [r5]
   26b9c:	mov	r1, r4
   26ba0:	bl	d340 <rb_strcasecmp@plt>
   26ba4:	cmp	r0, #0
   26ba8:	beq	26bbc <find_conf_item+0x9c>
   26bac:	ldr	r6, [r6, #8]
   26bb0:	cmp	r6, #0
   26bb4:	bne	26b94 <find_conf_item+0x74>
   26bb8:	mov	r5, #0
   26bbc:	mov	r0, r5
   26bc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026bc4 <remove_top_conf>:
   26bc4:	push	{r4, r5, r6, sl, fp, lr}
   26bc8:	add	fp, sp, #16
   26bcc:	bl	dad8 <find_top_conf@plt>
   26bd0:	mvn	r5, #0
   26bd4:	cmp	r0, #0
   26bd8:	beq	26c18 <remove_top_conf+0x54>
   26bdc:	mov	r4, r0
   26be0:	ldr	r1, [pc, #56]	; 26c20 <remove_top_conf+0x5c>
   26be4:	add	r1, pc, r1
   26be8:	bl	26c28 <rb_dlinkFind>
   26bec:	cmp	r0, #0
   26bf0:	beq	26c18 <remove_top_conf+0x54>
   26bf4:	mov	r6, r0
   26bf8:	ldr	r1, [pc, #36]	; 26c24 <remove_top_conf+0x60>
   26bfc:	add	r1, pc, r1
   26c00:	bl	26cd4 <rb_dlinkDelete>
   26c04:	mov	r0, r6
   26c08:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   26c0c:	mov	r0, r4
   26c10:	bl	26d8c <rb_free>
   26c14:	mov	r5, #0
   26c18:	mov	r0, r5
   26c1c:	pop	{r4, r5, r6, sl, fp, pc}
   26c20:	.word	0x0003f5a8
   26c24:	.word	0x0003f590

00026c28 <rb_dlinkFind>:
   26c28:	push	{fp, lr}
   26c2c:	mov	fp, sp
   26c30:	cmp	r1, #0
   26c34:	beq	26c7c <rb_dlinkFind+0x54>
   26c38:	cmp	r0, #0
   26c3c:	beq	26c9c <rb_dlinkFind+0x74>
   26c40:	ldr	r2, [r1]
   26c44:	mov	r1, #0
   26c48:	cmp	r2, #0
   26c4c:	beq	26c68 <rb_dlinkFind+0x40>
   26c50:	ldr	r3, [r2]
   26c54:	cmp	r3, r0
   26c58:	beq	26c70 <rb_dlinkFind+0x48>
   26c5c:	ldr	r2, [r2, #8]
   26c60:	cmp	r2, #0
   26c64:	bne	26c50 <rb_dlinkFind+0x28>
   26c68:	mov	r0, r1
   26c6c:	pop	{fp, pc}
   26c70:	mov	r1, r2
   26c74:	mov	r0, r1
   26c78:	pop	{fp, pc}
   26c7c:	ldr	r0, [pc, #56]	; 26cbc <rb_dlinkFind+0x94>
   26c80:	add	r0, pc, r0
   26c84:	ldr	r1, [pc, #52]	; 26cc0 <rb_dlinkFind+0x98>
   26c88:	add	r1, pc, r1
   26c8c:	ldr	r3, [pc, #48]	; 26cc4 <rb_dlinkFind+0x9c>
   26c90:	add	r3, pc, r3
   26c94:	movw	r2, #310	; 0x136
   26c98:	bl	e7e0 <__assert_fail@plt>
   26c9c:	ldr	r0, [pc, #36]	; 26cc8 <rb_dlinkFind+0xa0>
   26ca0:	add	r0, pc, r0
   26ca4:	ldr	r1, [pc, #32]	; 26ccc <rb_dlinkFind+0xa4>
   26ca8:	add	r1, pc, r1
   26cac:	ldr	r3, [pc, #28]	; 26cd0 <rb_dlinkFind+0xa8>
   26cb0:	add	r3, pc, r3
   26cb4:	movw	r2, #311	; 0x137
   26cb8:	bl	e7e0 <__assert_fail@plt>
   26cbc:	.word	0x0001f515
   26cc0:	.word	0x00019c8e
   26cc4:	.word	0x0001abab
   26cc8:	.word	0x00019cd1
   26ccc:	.word	0x00019c6e
   26cd0:	.word	0x0001ab8b

00026cd4 <rb_dlinkDelete>:
   26cd4:	push	{fp, lr}
   26cd8:	mov	fp, sp
   26cdc:	cmp	r0, #0
   26ce0:	beq	26d34 <rb_dlinkDelete+0x60>
   26ce4:	cmp	r1, #0
   26ce8:	beq	26d54 <rb_dlinkDelete+0x80>
   26cec:	ldr	ip, [r0, #4]
   26cf0:	ldr	r3, [r0, #8]
   26cf4:	add	r2, r3, #4
   26cf8:	cmp	r3, #0
   26cfc:	addeq	r2, r1, #4
   26d00:	str	ip, [r2]
   26d04:	ldmib	r0, {r2, ip}
   26d08:	cmp	r2, #0
   26d0c:	mov	r3, r1
   26d10:	addne	r3, r2, #8
   26d14:	str	ip, [r3]
   26d18:	mov	r2, #0
   26d1c:	str	r2, [r0, #4]
   26d20:	str	r2, [r0, #8]
   26d24:	ldr	r0, [r1, #8]
   26d28:	sub	r0, r0, #1
   26d2c:	str	r0, [r1, #8]
   26d30:	pop	{fp, pc}
   26d34:	ldr	r0, [pc, #56]	; 26d74 <rb_dlinkDelete+0xa0>
   26d38:	add	r0, pc, r0
   26d3c:	ldr	r1, [pc, #52]	; 26d78 <rb_dlinkDelete+0xa4>
   26d40:	add	r1, pc, r1
   26d44:	ldr	r3, [pc, #48]	; 26d7c <rb_dlinkDelete+0xa8>
   26d48:	add	r3, pc, r3
   26d4c:	mov	r2, #235	; 0xeb
   26d50:	bl	e7e0 <__assert_fail@plt>
   26d54:	ldr	r0, [pc, #36]	; 26d80 <rb_dlinkDelete+0xac>
   26d58:	add	r0, pc, r0
   26d5c:	ldr	r1, [pc, #32]	; 26d84 <rb_dlinkDelete+0xb0>
   26d60:	add	r1, pc, r1
   26d64:	ldr	r3, [pc, #28]	; 26d88 <rb_dlinkDelete+0xb4>
   26d68:	add	r3, pc, r3
   26d6c:	mov	r2, #236	; 0xec
   26d70:	bl	e7e0 <__assert_fail@plt>
   26d74:	.word	0x00019bd4
   26d78:	.word	0x00019bd6
   26d7c:	.word	0x00019c71
   26d80:	.word	0x0001f43d
   26d84:	.word	0x00019bb6
   26d88:	.word	0x00019c51

00026d8c <rb_free>:
   26d8c:	cmp	r0, #0
   26d90:	bxeq	lr
   26d94:	b	d328 <free@plt>

00026d98 <conf_report_error>:
   26d98:	sub	sp, sp, #12
   26d9c:	push	{r4, r5, r6, sl, fp, lr}
   26da0:	add	fp, sp, #16
   26da4:	sub	sp, sp, #532	; 0x214
   26da8:	mov	r5, r0
   26dac:	add	r0, fp, #8
   26db0:	stm	r0, {r1, r2, r3}
   26db4:	add	r4, sp, #8
   26db8:	mov	r0, r4
   26dbc:	mov	r1, #0
   26dc0:	movw	r2, #513	; 0x201
   26dc4:	bl	df28 <memset@plt>
   26dc8:	add	r3, fp, #8
   26dcc:	str	r3, [fp, #-20]	; 0xffffffec
   26dd0:	mov	r0, r4
   26dd4:	mov	r1, #512	; 0x200
   26dd8:	mov	r2, r5
   26ddc:	bl	e450 <vsnprintf@plt>
   26de0:	ldr	r0, [pc, #168]	; 26e90 <conf_report_error+0xf8>
   26de4:	ldr	r0, [pc, r0]
   26de8:	ldr	r0, [r0]
   26dec:	cmp	r0, #0
   26df0:	bne	26e54 <conf_report_error+0xbc>
   26df4:	ldr	r5, [pc, #168]	; 26ea4 <conf_report_error+0x10c>
   26df8:	ldr	r5, [pc, r5]
   26dfc:	ldr	r1, [r5]
   26e00:	ldr	r6, [pc, #160]	; 26ea8 <conf_report_error+0x110>
   26e04:	ldr	r6, [pc, r6]
   26e08:	ldr	r0, [r6]
   26e0c:	add	r2, r0, #1
   26e10:	ldr	r0, [pc, #148]	; 26eac <conf_report_error+0x114>
   26e14:	add	r0, pc, r0
   26e18:	mov	r3, r4
   26e1c:	bl	d640 <ierror@plt>
   26e20:	ldr	r3, [r5]
   26e24:	ldr	r0, [r6]
   26e28:	add	r0, r0, #1
   26e2c:	stm	sp, {r0, r4}
   26e30:	ldr	r2, [pc, #120]	; 26eb0 <conf_report_error+0x118>
   26e34:	add	r2, pc, r2
   26e38:	mov	r0, #256	; 0x100
   26e3c:	mov	r1, #0
   26e40:	bl	d634 <sendto_realops_snomask@plt>
   26e44:	sub	sp, fp, #16
   26e48:	pop	{r4, r5, r6, sl, fp, lr}
   26e4c:	add	sp, sp, #12
   26e50:	bx	lr
   26e54:	ldr	r0, [pc, #56]	; 26e94 <conf_report_error+0xfc>
   26e58:	ldr	r0, [pc, r0]
   26e5c:	ldr	r2, [r0]
   26e60:	ldr	r0, [pc, #48]	; 26e98 <conf_report_error+0x100>
   26e64:	ldr	r0, [pc, r0]
   26e68:	ldr	r0, [r0]
   26e6c:	ldr	r1, [pc, #40]	; 26e9c <conf_report_error+0x104>
   26e70:	ldr	r1, [pc, r1]
   26e74:	ldr	r1, [r1]
   26e78:	str	r4, [sp]
   26e7c:	add	r3, r1, #1
   26e80:	ldr	r1, [pc, #24]	; 26ea0 <conf_report_error+0x108>
   26e84:	add	r1, pc, r1
   26e88:	bl	dd60 <fprintf@plt>
   26e8c:	b	26e44 <conf_report_error+0xac>
   26e90:	.word	0x00033ca8
   26e94:	.word	0x00033aa0
   26e98:	.word	0x00033af4
   26e9c:	.word	0x00033bd0
   26ea0:	.word	0x0001cb88
   26ea4:	.word	0x00033b00
   26ea8:	.word	0x00033c3c
   26eac:	.word	0x0001cc2d
   26eb0:	.word	0x0001cbeb

00026eb4 <conf_report_warning>:
   26eb4:	sub	sp, sp, #12
   26eb8:	push	{r4, r5, r6, sl, fp, lr}
   26ebc:	add	fp, sp, #16
   26ec0:	sub	sp, sp, #532	; 0x214
   26ec4:	mov	r5, r0
   26ec8:	add	r0, fp, #8
   26ecc:	stm	r0, {r1, r2, r3}
   26ed0:	add	r4, sp, #8
   26ed4:	mov	r0, r4
   26ed8:	mov	r1, #0
   26edc:	movw	r2, #513	; 0x201
   26ee0:	bl	df28 <memset@plt>
   26ee4:	add	r3, fp, #8
   26ee8:	str	r3, [fp, #-20]	; 0xffffffec
   26eec:	mov	r0, r4
   26ef0:	mov	r1, #512	; 0x200
   26ef4:	mov	r2, r5
   26ef8:	bl	e450 <vsnprintf@plt>
   26efc:	ldr	r0, [pc, #168]	; 26fac <conf_report_warning+0xf8>
   26f00:	ldr	r0, [pc, r0]
   26f04:	ldr	r0, [r0]
   26f08:	cmp	r0, #0
   26f0c:	bne	26f70 <conf_report_warning+0xbc>
   26f10:	ldr	r5, [pc, #168]	; 26fc0 <conf_report_warning+0x10c>
   26f14:	ldr	r5, [pc, r5]
   26f18:	ldr	r1, [r5]
   26f1c:	ldr	r6, [pc, #160]	; 26fc4 <conf_report_warning+0x110>
   26f20:	ldr	r6, [pc, r6]
   26f24:	ldr	r0, [r6]
   26f28:	add	r2, r0, #1
   26f2c:	ldr	r0, [pc, #148]	; 26fc8 <conf_report_warning+0x114>
   26f30:	add	r0, pc, r0
   26f34:	mov	r3, r4
   26f38:	bl	d3ac <iwarn@plt>
   26f3c:	ldr	r3, [r5]
   26f40:	ldr	r0, [r6]
   26f44:	add	r0, r0, #1
   26f48:	stm	sp, {r0, r4}
   26f4c:	ldr	r2, [pc, #120]	; 26fcc <conf_report_warning+0x118>
   26f50:	add	r2, pc, r2
   26f54:	mov	r0, #256	; 0x100
   26f58:	mov	r1, #0
   26f5c:	bl	d634 <sendto_realops_snomask@plt>
   26f60:	sub	sp, fp, #16
   26f64:	pop	{r4, r5, r6, sl, fp, lr}
   26f68:	add	sp, sp, #12
   26f6c:	bx	lr
   26f70:	ldr	r0, [pc, #56]	; 26fb0 <conf_report_warning+0xfc>
   26f74:	ldr	r0, [pc, r0]
   26f78:	ldr	r2, [r0]
   26f7c:	ldr	r0, [pc, #48]	; 26fb4 <conf_report_warning+0x100>
   26f80:	ldr	r0, [pc, r0]
   26f84:	ldr	r0, [r0]
   26f88:	ldr	r1, [pc, #40]	; 26fb8 <conf_report_warning+0x104>
   26f8c:	ldr	r1, [pc, r1]
   26f90:	ldr	r1, [r1]
   26f94:	str	r4, [sp]
   26f98:	add	r3, r1, #1
   26f9c:	ldr	r1, [pc, #24]	; 26fbc <conf_report_warning+0x108>
   26fa0:	add	r1, pc, r1
   26fa4:	bl	dd60 <fprintf@plt>
   26fa8:	b	26f60 <conf_report_warning+0xac>
   26fac:	.word	0x00033b8c
   26fb0:	.word	0x00033984
   26fb4:	.word	0x000339d8
   26fb8:	.word	0x00033ab4
   26fbc:	.word	0x0001ca6c
   26fc0:	.word	0x000339e4
   26fc4:	.word	0x00033b20
   26fc8:	.word	0x0001cb11
   26fcc:	.word	0x0001cae8

00026fd0 <conf_start_block>:
   26fd0:	push	{r4, r5, r6, sl, fp, lr}
   26fd4:	add	fp, sp, #16
   26fd8:	mov	r4, r1
   26fdc:	mov	r5, r0
   26fe0:	bl	dad8 <find_top_conf@plt>
   26fe4:	ldr	r6, [pc, #112]	; 2705c <conf_start_block+0x8c>
   26fe8:	ldr	r6, [pc, r6]
   26fec:	str	r0, [r6]
   26ff0:	cmp	r0, #0
   26ff4:	beq	2700c <conf_start_block+0x3c>
   26ff8:	cmp	r4, #0
   26ffc:	beq	27020 <conf_start_block+0x50>
   27000:	mov	r0, r4
   27004:	bl	27068 <rb_strdup>
   27008:	b	27024 <conf_start_block+0x54>
   2700c:	ldr	r0, [pc, #76]	; 27060 <conf_start_block+0x90>
   27010:	add	r0, pc, r0
   27014:	mov	r1, r5
   27018:	bl	d400 <conf_report_error@plt>
   2701c:	b	27054 <conf_start_block+0x84>
   27020:	mov	r0, #0
   27024:	ldr	r1, [pc, #56]	; 27064 <conf_start_block+0x94>
   27028:	add	r1, pc, r1
   2702c:	str	r0, [r1]
   27030:	ldr	r0, [r6]
   27034:	ldr	r1, [r0, #4]
   27038:	cmp	r1, #0
   2703c:	beq	2704c <conf_start_block+0x7c>
   27040:	blx	r1
   27044:	cmp	r0, #0
   27048:	bmi	27054 <conf_start_block+0x84>
   2704c:	mov	r0, #0
   27050:	pop	{r4, r5, r6, sl, fp, pc}
   27054:	mvn	r0, #0
   27058:	pop	{r4, r5, r6, sl, fp, pc}
   2705c:	.word	0x00033a24
   27060:	.word	0x0001ca43
   27064:	.word	0x0003f170

00027068 <rb_strdup>:
   27068:	push	{r4, sl, fp, lr}
   2706c:	add	fp, sp, #8
   27070:	mov	r4, r0
   27074:	bl	dc94 <strlen@plt>
   27078:	add	r0, r0, #1
   2707c:	bl	da84 <malloc@plt>
   27080:	cmp	r0, #0
   27084:	beq	27094 <rb_strdup+0x2c>
   27088:	mov	r1, r4
   2708c:	pop	{r4, sl, fp, lr}
   27090:	b	d91c <strcpy@plt>
   27094:	bl	d448 <rb_outofmemory@plt>

00027098 <conf_end_block>:
   27098:	push	{r4, r5, fp, lr}
   2709c:	add	fp, sp, #8
   270a0:	ldr	r1, [r0, #8]
   270a4:	mov	r5, #0
   270a8:	cmp	r1, #0
   270ac:	mov	r4, #0
   270b0:	beq	270bc <conf_end_block+0x24>
   270b4:	blx	r1
   270b8:	mov	r4, r0
   270bc:	ldr	r0, [pc, #24]	; 270dc <conf_end_block+0x44>
   270c0:	ldr	r0, [pc, r0]
   270c4:	bl	26d8c <rb_free>
   270c8:	ldr	r0, [pc, #16]	; 270e0 <conf_end_block+0x48>
   270cc:	add	r0, pc, r0
   270d0:	str	r5, [r0]
   270d4:	mov	r0, r4
   270d8:	pop	{r4, r5, fp, pc}
   270dc:	.word	0x0003f0d8
   270e0:	.word	0x0003f0cc

000270e4 <conf_call_set>:
   270e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270e8:	add	fp, sp, #28
   270ec:	sub	sp, sp, #4
   270f0:	mvn	r8, #0
   270f4:	cmp	r0, #0
   270f8:	beq	27238 <conf_call_set+0x154>
   270fc:	mov	r4, r2
   27100:	mov	r9, r1
   27104:	mov	r7, r0
   27108:	bl	d988 <find_conf_item@plt>
   2710c:	cmp	r0, #0
   27110:	beq	271a4 <conf_call_set+0xc0>
   27114:	mov	r6, r0
   27118:	ldr	sl, [r4, #8]
   2711c:	ldr	r5, [sl, #4]
   27120:	tst	r5, #256	; 0x100
   27124:	beq	27144 <conf_call_set+0x60>
   27128:	ldrb	r0, [r6, #5]
   2712c:	tst	r0, #1
   27130:	bne	27144 <conf_call_set+0x60>
   27134:	ldr	r1, [r7]
   27138:	ldr	r0, [pc, #364]	; 272ac <conf_call_set+0x1c8>
   2713c:	add	r0, pc, r0
   27140:	b	271b0 <conf_call_set+0xcc>
   27144:	uxtb	r2, r5
   27148:	ldr	r0, [r6, #4]
   2714c:	uxtb	r1, r0
   27150:	cmp	r2, r1
   27154:	beq	271ec <conf_call_set+0x108>
   27158:	cmp	r2, #5
   2715c:	cmpeq	r1, #3
   27160:	beq	271bc <conf_call_set+0xd8>
   27164:	cmp	r2, #2
   27168:	cmpeq	r1, #4
   2716c:	beq	271e8 <conf_call_set+0x104>
   27170:	ldr	r4, [r7]
   27174:	bl	272c0 <conf_strtype>
   27178:	mov	r6, r0
   2717c:	mov	r0, r5
   27180:	bl	272c0 <conf_strtype>
   27184:	str	r0, [sp]
   27188:	ldr	r0, [pc, #296]	; 272b8 <conf_call_set+0x1d4>
   2718c:	add	r0, pc, r0
   27190:	mov	r1, r4
   27194:	mov	r2, r9
   27198:	mov	r3, r6
   2719c:	bl	d400 <conf_report_error@plt>
   271a0:	b	27238 <conf_call_set+0x154>
   271a4:	ldr	r1, [r7]
   271a8:	ldr	r0, [pc, #248]	; 272a8 <conf_call_set+0x1c4>
   271ac:	add	r0, pc, r0
   271b0:	mov	r2, r9
   271b4:	bl	d400 <conf_report_error@plt>
   271b8:	b	27238 <conf_call_set+0x154>
   271bc:	mov	r0, #3
   271c0:	str	r0, [sl, #4]
   271c4:	ldr	r1, [sl, #8]
   271c8:	ldr	r2, [pc, #224]	; 272b0 <conf_call_set+0x1cc>
   271cc:	add	r2, pc, r2
   271d0:	ldr	r0, [pc, #220]	; 272b4 <conf_call_set+0x1d0>
   271d4:	add	r0, pc, r0
   271d8:	cmp	r1, #1
   271dc:	moveq	r0, r2
   271e0:	bl	27068 <rb_strdup>
   271e4:	str	r0, [sl, #8]
   271e8:	ldr	r0, [r6, #4]
   271ec:	tst	r0, #256	; 0x100
   271f0:	bne	27228 <conf_call_set+0x144>
   271f4:	mov	r8, #0
   271f8:	cmp	r0, #5
   271fc:	bhi	27238 <conf_call_set+0x154>
   27200:	mov	r1, #1
   27204:	mov	r2, #52	; 0x34
   27208:	tst	r2, r1, lsl r0
   2720c:	beq	27244 <conf_call_set+0x160>
   27210:	ldr	r1, [r6, #16]
   27214:	cmp	r1, #0
   27218:	beq	27290 <conf_call_set+0x1ac>
   2721c:	add	r0, sl, #8
   27220:	bl	272f8 <conf_set_generic_int>
   27224:	b	27238 <conf_call_set+0x154>
   27228:	ldr	r0, [r4, #8]
   2722c:	ldr	r1, [r6, #8]
   27230:	blx	r1
   27234:	mov	r8, #0
   27238:	mov	r0, r8
   2723c:	sub	sp, fp, #28
   27240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27244:	mov	r2, #10
   27248:	tst	r2, r1, lsl r0
   2724c:	beq	27238 <conf_call_set+0x154>
   27250:	ldr	r0, [sl, #8]
   27254:	cmp	r0, #0
   27258:	beq	27280 <conf_call_set+0x19c>
   2725c:	ldrb	r1, [r0]
   27260:	cmp	r1, #0
   27264:	beq	27280 <conf_call_set+0x19c>
   27268:	ldr	r2, [r6, #16]
   2726c:	cmp	r2, #0
   27270:	beq	2729c <conf_call_set+0x1b8>
   27274:	ldr	r1, [r6, #12]
   27278:	bl	27304 <conf_set_generic_string>
   2727c:	b	27238 <conf_call_set+0x154>
   27280:	ldr	r1, [r7]
   27284:	ldr	r0, [pc, #48]	; 272bc <conf_call_set+0x1d8>
   27288:	add	r0, pc, r0
   2728c:	b	271b0 <conf_call_set+0xcc>
   27290:	ldr	r1, [r6, #8]
   27294:	add	r0, sl, #8
   27298:	b	272a0 <conf_call_set+0x1bc>
   2729c:	ldr	r1, [r6, #8]
   272a0:	blx	r1
   272a4:	b	27238 <conf_call_set+0x154>
   272a8:	.word	0x0001c8d0
   272ac:	.word	0x0001c96b
   272b0:	.word	0x0001b476
   272b4:	.word	0x0001b472
   272b8:	.word	0x0001c949
   272bc:	.word	0x0001c879

000272c0 <conf_strtype>:
   272c0:	sub	r0, r0, #1
   272c4:	uxtb	r1, r0
   272c8:	cmp	r1, #4
   272cc:	bhi	272e4 <conf_strtype+0x24>
   272d0:	sxtb	r0, r0
   272d4:	ldr	r1, [pc, #20]	; 272f0 <conf_strtype+0x30>
   272d8:	add	r1, pc, r1
   272dc:	ldr	r0, [r1, r0, lsl #2]
   272e0:	bx	lr
   272e4:	ldr	r0, [pc, #8]	; 272f4 <conf_strtype+0x34>
   272e8:	add	r0, pc, r0
   272ec:	bx	lr
   272f0:	.word	0x00032bb4
   272f4:	.word	0x0001c934

000272f8 <conf_set_generic_int>:
   272f8:	ldr	r0, [r0]
   272fc:	str	r0, [r1]
   27300:	bx	lr

00027304 <conf_set_generic_string>:
   27304:	push	{r4, r5, r6, sl, fp, lr}
   27308:	add	fp, sp, #16
   2730c:	mov	r4, r2
   27310:	mov	r5, r0
   27314:	cmp	r1, #0
   27318:	beq	27334 <conf_set_generic_string+0x30>
   2731c:	mov	r6, r1
   27320:	mov	r0, r5
   27324:	bl	dc94 <strlen@plt>
   27328:	cmp	r0, r6
   2732c:	movhi	r0, #0
   27330:	strbhi	r0, [r5, r6]
   27334:	ldr	r0, [r4]
   27338:	bl	26d8c <rb_free>
   2733c:	mov	r0, r5
   27340:	bl	27068 <rb_strdup>
   27344:	str	r0, [r4]
   27348:	pop	{r4, r5, r6, sl, fp, pc}

0002734c <add_conf_item>:
   2734c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27350:	add	fp, sp, #24
   27354:	mov	r8, r3
   27358:	mov	r9, r2
   2735c:	mov	r5, r1
   27360:	bl	dad8 <find_top_conf@plt>
   27364:	mvn	r4, #0
   27368:	cmp	r0, #0
   2736c:	beq	27384 <add_conf_item+0x38>
   27370:	mov	r7, r0
   27374:	mov	r1, r5
   27378:	bl	d988 <find_conf_item@plt>
   2737c:	cmp	r0, #0
   27380:	beq	2738c <add_conf_item+0x40>
   27384:	mov	r0, r4
   27388:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2738c:	mov	r0, #20
   27390:	bl	269c0 <rb_malloc>
   27394:	mov	r6, r0
   27398:	mov	r4, #0
   2739c:	str	r4, [r0, #16]
   273a0:	stm	r0, {r5, r9}
   273a4:	str	r8, [r0, #8]
   273a8:	bl	dc58 <rb_make_rb_dlink_node@plt>
   273ac:	mov	r1, r0
   273b0:	add	r2, r7, #12
   273b4:	mov	r0, r6
   273b8:	bl	269e0 <rb_dlinkAdd>
   273bc:	mov	r0, r4
   273c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000273c4 <remove_conf_item>:
   273c4:	push	{r4, r5, r6, r7, fp, lr}
   273c8:	add	fp, sp, #16
   273cc:	mov	r5, r1
   273d0:	bl	dad8 <find_top_conf@plt>
   273d4:	mvn	r4, #0
   273d8:	cmp	r0, #0
   273dc:	beq	2742c <remove_conf_item+0x68>
   273e0:	mov	r6, r0
   273e4:	mov	r1, r5
   273e8:	bl	d988 <find_conf_item@plt>
   273ec:	cmp	r0, #0
   273f0:	beq	2742c <remove_conf_item+0x68>
   273f4:	mov	r5, r0
   273f8:	add	r6, r6, #12
   273fc:	mov	r1, r6
   27400:	bl	26c28 <rb_dlinkFind>
   27404:	cmp	r0, #0
   27408:	beq	2742c <remove_conf_item+0x68>
   2740c:	mov	r7, r0
   27410:	mov	r1, r6
   27414:	bl	26cd4 <rb_dlinkDelete>
   27418:	mov	r0, r7
   2741c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   27420:	mov	r0, r5
   27424:	bl	26d8c <rb_free>
   27428:	mov	r4, #0
   2742c:	mov	r0, r4
   27430:	pop	{r4, r5, r6, r7, fp, pc}

00027434 <newconf_init>:
   27434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27438:	add	fp, sp, #28
   2743c:	sub	sp, sp, #4
   27440:	ldr	r4, [pc, #1656]	; 27ac0 <newconf_init+0x68c>
   27444:	add	r4, pc, r4
   27448:	mov	r0, r4
   2744c:	mov	r1, #0
   27450:	mov	r2, #0
   27454:	mov	r3, #0
   27458:	bl	e420 <add_top_conf@plt>
   2745c:	ldr	r1, [pc, #1632]	; 27ac4 <newconf_init+0x690>
   27460:	add	r1, pc, r1
   27464:	ldr	r3, [pc, #1628]	; 27ac8 <newconf_init+0x694>
   27468:	add	r3, pc, r3
   2746c:	mov	r0, r4
   27470:	mov	r2, #1
   27474:	bl	d3f4 <add_conf_item@plt>
   27478:	ldr	r1, [pc, #1612]	; 27acc <newconf_init+0x698>
   2747c:	add	r1, pc, r1
   27480:	ldr	r3, [pc, #1608]	; 27ad0 <newconf_init+0x69c>
   27484:	add	r3, pc, r3
   27488:	mov	r0, r4
   2748c:	mov	r2, #1
   27490:	bl	d3f4 <add_conf_item@plt>
   27494:	ldr	r0, [pc, #1592]	; 27ad4 <newconf_init+0x6a0>
   27498:	add	r0, pc, r0
   2749c:	ldr	r3, [pc, #1588]	; 27ad8 <newconf_init+0x6a4>
   274a0:	add	r3, pc, r3
   274a4:	mov	r1, #0
   274a8:	mov	r2, #0
   274ac:	bl	e420 <add_top_conf@plt>
   274b0:	ldr	r0, [pc, #1572]	; 27adc <newconf_init+0x6a8>
   274b4:	add	r0, pc, r0
   274b8:	ldr	r3, [pc, #1568]	; 27ae0 <newconf_init+0x6ac>
   274bc:	add	r3, pc, r3
   274c0:	mov	r1, #0
   274c4:	mov	r2, #0
   274c8:	bl	e420 <add_top_conf@plt>
   274cc:	ldr	r0, [pc, #1552]	; 27ae4 <newconf_init+0x6b0>
   274d0:	add	r0, pc, r0
   274d4:	ldr	r3, [pc, #1548]	; 27ae8 <newconf_init+0x6b4>
   274d8:	add	r3, pc, r3
   274dc:	mov	r1, #0
   274e0:	mov	r2, #0
   274e4:	bl	e420 <add_top_conf@plt>
   274e8:	ldr	r0, [pc, #1532]	; 27aec <newconf_init+0x6b8>
   274ec:	add	r0, pc, r0
   274f0:	ldr	r1, [pc, #1528]	; 27af0 <newconf_init+0x6bc>
   274f4:	add	r1, pc, r1
   274f8:	ldr	r2, [pc, #1524]	; 27af4 <newconf_init+0x6c0>
   274fc:	add	r2, pc, r2
   27500:	ldr	r3, [pc, #1520]	; 27af8 <newconf_init+0x6c4>
   27504:	add	r3, pc, r3
   27508:	bl	e420 <add_top_conf@plt>
   2750c:	ldr	r0, [pc, #1512]	; 27afc <newconf_init+0x6c8>
   27510:	add	r0, pc, r0
   27514:	ldr	r1, [pc, #1508]	; 27b00 <newconf_init+0x6cc>
   27518:	add	r1, pc, r1
   2751c:	ldr	r2, [pc, #1504]	; 27b04 <newconf_init+0x6d0>
   27520:	add	r2, pc, r2
   27524:	ldr	r3, [pc, #1500]	; 27b08 <newconf_init+0x6d4>
   27528:	add	r3, pc, r3
   2752c:	bl	e420 <add_top_conf@plt>
   27530:	ldr	r0, [pc, #1492]	; 27b0c <newconf_init+0x6d8>
   27534:	add	r0, pc, r0
   27538:	ldr	r3, [pc, #1488]	; 27b10 <newconf_init+0x6dc>
   2753c:	add	r3, pc, r3
   27540:	mov	r1, #0
   27544:	mov	r2, #0
   27548:	bl	e420 <add_top_conf@plt>
   2754c:	ldr	r6, [pc, #1472]	; 27b14 <newconf_init+0x6e0>
   27550:	add	r6, pc, r6
   27554:	ldr	r1, [pc, #1468]	; 27b18 <newconf_init+0x6e4>
   27558:	add	r1, pc, r1
   2755c:	ldr	r2, [pc, #1464]	; 27b1c <newconf_init+0x6e8>
   27560:	add	r2, pc, r2
   27564:	mov	r0, r6
   27568:	mov	r3, #0
   2756c:	bl	e420 <add_top_conf@plt>
   27570:	ldr	r1, [pc, #1448]	; 27b20 <newconf_init+0x6ec>
   27574:	add	r1, pc, r1
   27578:	ldr	r3, [pc, #1444]	; 27b24 <newconf_init+0x6f0>
   2757c:	add	r3, pc, r3
   27580:	mov	r0, r6
   27584:	mov	r2, #5
   27588:	bl	d3f4 <add_conf_item@plt>
   2758c:	ldr	r1, [pc, #1428]	; 27b28 <newconf_init+0x6f4>
   27590:	add	r1, pc, r1
   27594:	ldr	r3, [pc, #1424]	; 27b2c <newconf_init+0x6f8>
   27598:	add	r3, pc, r3
   2759c:	mov	r0, r6
   275a0:	mov	r2, #5
   275a4:	bl	d3f4 <add_conf_item@plt>
   275a8:	ldr	r1, [pc, #1408]	; 27b30 <newconf_init+0x6fc>
   275ac:	add	r1, pc, r1
   275b0:	ldr	r3, [pc, #1404]	; 27b34 <newconf_init+0x700>
   275b4:	add	r3, pc, r3
   275b8:	mov	r0, r6
   275bc:	movw	r2, #258	; 0x102
   275c0:	bl	d3f4 <add_conf_item@plt>
   275c4:	ldr	r1, [pc, #1388]	; 27b38 <newconf_init+0x704>
   275c8:	add	r1, pc, r1
   275cc:	ldr	r3, [pc, #1384]	; 27b3c <newconf_init+0x708>
   275d0:	add	r3, pc, r3
   275d4:	mov	r0, r6
   275d8:	movw	r2, #258	; 0x102
   275dc:	bl	d3f4 <add_conf_item@plt>
   275e0:	ldr	r1, [pc, #1368]	; 27b40 <newconf_init+0x70c>
   275e4:	add	r1, pc, r1
   275e8:	ldr	r3, [pc, #1364]	; 27b44 <newconf_init+0x710>
   275ec:	add	r3, pc, r3
   275f0:	mov	r0, r6
   275f4:	movw	r2, #258	; 0x102
   275f8:	bl	d3f4 <add_conf_item@plt>
   275fc:	ldr	r1, [pc, #1348]	; 27b48 <newconf_init+0x714>
   27600:	add	r1, pc, r1
   27604:	ldr	r3, [pc, #1344]	; 27b4c <newconf_init+0x718>
   27608:	add	r3, pc, r3
   2760c:	mov	r0, r6
   27610:	movw	r2, #258	; 0x102
   27614:	bl	d3f4 <add_conf_item@plt>
   27618:	ldr	r5, [pc, #1328]	; 27b50 <newconf_init+0x71c>
   2761c:	add	r5, pc, r5
   27620:	ldr	r4, [pc, #1324]	; 27b54 <newconf_init+0x720>
   27624:	add	r4, pc, r4
   27628:	mov	r0, r6
   2762c:	mov	r1, r5
   27630:	mov	r2, #1
   27634:	mov	r3, r4
   27638:	bl	d3f4 <add_conf_item@plt>
   2763c:	ldr	sl, [pc, #1300]	; 27b58 <newconf_init+0x724>
   27640:	add	sl, pc, sl
   27644:	mov	r0, r6
   27648:	mov	r1, sl
   2764c:	mov	r2, #1
   27650:	mov	r3, r4
   27654:	bl	d3f4 <add_conf_item@plt>
   27658:	ldr	r0, [pc, #1276]	; 27b5c <newconf_init+0x728>
   2765c:	add	r0, pc, r0
   27660:	ldr	r1, [pc, #1272]	; 27b60 <newconf_init+0x72c>
   27664:	add	r1, pc, r1
   27668:	ldr	r2, [pc, #1268]	; 27b64 <newconf_init+0x730>
   2766c:	add	r2, pc, r2
   27670:	ldr	r3, [pc, #1264]	; 27b68 <newconf_init+0x734>
   27674:	add	r3, pc, r3
   27678:	bl	e420 <add_top_conf@plt>
   2767c:	ldr	r4, [pc, #1256]	; 27b6c <newconf_init+0x738>
   27680:	add	r4, pc, r4
   27684:	ldr	r1, [pc, #1252]	; 27b70 <newconf_init+0x73c>
   27688:	add	r1, pc, r1
   2768c:	mov	r0, r4
   27690:	mov	r2, r1
   27694:	mov	r3, #0
   27698:	bl	e420 <add_top_conf@plt>
   2769c:	ldr	r1, [pc, #1232]	; 27b74 <newconf_init+0x740>
   276a0:	add	r1, pc, r1
   276a4:	ldr	r3, [pc, #1228]	; 27b78 <newconf_init+0x744>
   276a8:	add	r3, pc, r3
   276ac:	mov	r0, r4
   276b0:	movw	r2, #257	; 0x101
   276b4:	bl	d3f4 <add_conf_item@plt>
   276b8:	ldr	r6, [pc, #1212]	; 27b7c <newconf_init+0x748>
   276bc:	add	r6, pc, r6
   276c0:	ldr	r3, [pc, #1208]	; 27b80 <newconf_init+0x74c>
   276c4:	add	r3, pc, r3
   276c8:	mov	r0, r4
   276cc:	mov	r1, r6
   276d0:	movw	r2, #259	; 0x103
   276d4:	bl	d3f4 <add_conf_item@plt>
   276d8:	ldr	r0, [pc, #1188]	; 27b84 <newconf_init+0x750>
   276dc:	add	r0, pc, r0
   276e0:	ldr	r1, [pc, #1184]	; 27b88 <newconf_init+0x754>
   276e4:	add	r1, pc, r1
   276e8:	ldr	r2, [pc, #1180]	; 27b8c <newconf_init+0x758>
   276ec:	add	r2, pc, r2
   276f0:	ldr	r3, [pc, #1176]	; 27b90 <newconf_init+0x75c>
   276f4:	add	r3, pc, r3
   276f8:	bl	e420 <add_top_conf@plt>
   276fc:	ldr	r4, [pc, #1168]	; 27b94 <newconf_init+0x760>
   27700:	add	r4, pc, r4
   27704:	mov	r0, r4
   27708:	mov	r1, #0
   2770c:	mov	r2, #0
   27710:	mov	r3, #0
   27714:	bl	e420 <add_top_conf@plt>
   27718:	ldr	r3, [pc, #1144]	; 27b98 <newconf_init+0x764>
   2771c:	add	r3, pc, r3
   27720:	mov	r0, r4
   27724:	mov	r1, r5
   27728:	mov	r2, #1
   2772c:	bl	d3f4 <add_conf_item@plt>
   27730:	ldr	r4, [pc, #1124]	; 27b9c <newconf_init+0x768>
   27734:	add	r4, pc, r4
   27738:	ldr	r1, [pc, #1120]	; 27ba0 <newconf_init+0x76c>
   2773c:	add	r1, pc, r1
   27740:	mov	r0, r4
   27744:	mov	r2, r1
   27748:	mov	r3, #0
   2774c:	bl	e420 <add_top_conf@plt>
   27750:	ldr	r5, [pc, #1100]	; 27ba4 <newconf_init+0x770>
   27754:	add	r5, pc, r5
   27758:	ldr	r3, [pc, #1096]	; 27ba8 <newconf_init+0x774>
   2775c:	add	r3, pc, r3
   27760:	mov	r0, r4
   27764:	mov	r1, r5
   27768:	mov	r2, #1
   2776c:	bl	d3f4 <add_conf_item@plt>
   27770:	ldr	r3, [pc, #1076]	; 27bac <newconf_init+0x778>
   27774:	add	r3, pc, r3
   27778:	mov	r0, r4
   2777c:	mov	r1, r6
   27780:	movw	r2, #259	; 0x103
   27784:	bl	d3f4 <add_conf_item@plt>
   27788:	ldr	r0, [pc, #1056]	; 27bb0 <newconf_init+0x77c>
   2778c:	add	r0, pc, r0
   27790:	ldr	r3, [pc, #1052]	; 27bb4 <newconf_init+0x780>
   27794:	add	r3, pc, r3
   27798:	mov	r1, #0
   2779c:	mov	r2, #0
   277a0:	bl	e420 <add_top_conf@plt>
   277a4:	ldr	r0, [pc, #1036]	; 27bb8 <newconf_init+0x784>
   277a8:	add	r0, pc, r0
   277ac:	ldr	r3, [pc, #1032]	; 27bbc <newconf_init+0x788>
   277b0:	add	r3, pc, r3
   277b4:	mov	r1, #0
   277b8:	mov	r2, #0
   277bc:	bl	e420 <add_top_conf@plt>
   277c0:	ldr	r0, [pc, #1016]	; 27bc0 <newconf_init+0x78c>
   277c4:	add	r0, pc, r0
   277c8:	ldr	r3, [pc, #1012]	; 27bc4 <newconf_init+0x790>
   277cc:	add	r3, pc, r3
   277d0:	mov	r1, #0
   277d4:	mov	r2, #0
   277d8:	bl	e420 <add_top_conf@plt>
   277dc:	ldr	r4, [pc, #996]	; 27bc8 <newconf_init+0x794>
   277e0:	add	r4, pc, r4
   277e4:	mov	r0, r4
   277e8:	mov	r1, #0
   277ec:	mov	r2, #0
   277f0:	mov	r3, #0
   277f4:	bl	e420 <add_top_conf@plt>
   277f8:	ldr	r3, [pc, #972]	; 27bcc <newconf_init+0x798>
   277fc:	add	r3, pc, r3
   27800:	mov	r0, r4
   27804:	mov	r1, r5
   27808:	mov	r2, #1
   2780c:	bl	d3f4 <add_conf_item@plt>
   27810:	ldr	r4, [pc, #952]	; 27bd0 <newconf_init+0x79c>
   27814:	add	r4, pc, r4
   27818:	ldr	r1, [pc, #948]	; 27bd4 <newconf_init+0x7a0>
   2781c:	add	r1, pc, r1
   27820:	ldr	r2, [pc, #944]	; 27bd8 <newconf_init+0x7a4>
   27824:	add	r2, pc, r2
   27828:	mov	r0, r4
   2782c:	mov	r3, #0
   27830:	bl	e420 <add_top_conf@plt>
   27834:	ldr	r3, [pc, #928]	; 27bdc <newconf_init+0x7a8>
   27838:	add	r3, pc, r3
   2783c:	mov	r0, r4
   27840:	mov	r1, r5
   27844:	mov	r2, #1
   27848:	bl	d3f4 <add_conf_item@plt>
   2784c:	ldr	r1, [pc, #908]	; 27be0 <newconf_init+0x7ac>
   27850:	add	r1, pc, r1
   27854:	ldr	r3, [pc, #904]	; 27be4 <newconf_init+0x7b0>
   27858:	add	r3, pc, r3
   2785c:	mov	r0, r4
   27860:	mov	r2, #1
   27864:	bl	d3f4 <add_conf_item@plt>
   27868:	ldr	r9, [pc, #888]	; 27be8 <newconf_init+0x7b4>
   2786c:	add	r9, pc, r9
   27870:	mov	r0, r9
   27874:	mov	r1, #0
   27878:	mov	r2, #0
   2787c:	mov	r3, #0
   27880:	bl	e420 <add_top_conf@plt>
   27884:	ldr	r3, [pc, #864]	; 27bec <newconf_init+0x7b8>
   27888:	add	r3, pc, r3
   2788c:	mov	r0, r9
   27890:	mov	r1, sl
   27894:	mov	r2, #1
   27898:	bl	d3f4 <add_conf_item@plt>
   2789c:	ldr	r1, [pc, #844]	; 27bf0 <newconf_init+0x7bc>
   278a0:	add	r1, pc, r1
   278a4:	ldr	r3, [pc, #840]	; 27bf4 <newconf_init+0x7c0>
   278a8:	add	r3, pc, r3
   278ac:	mov	r0, r9
   278b0:	movw	r2, #259	; 0x103
   278b4:	bl	d3f4 <add_conf_item@plt>
   278b8:	ldr	r5, [pc, #824]	; 27bf8 <newconf_init+0x7c4>
   278bc:	add	r5, pc, r5
   278c0:	ldr	r4, [pc, #820]	; 27bfc <newconf_init+0x7c8>
   278c4:	add	r4, pc, r4
   278c8:	mov	r0, r9
   278cc:	mov	r1, r5
   278d0:	movw	r2, #257	; 0x101
   278d4:	mov	r3, r4
   278d8:	bl	d3f4 <add_conf_item@plt>
   278dc:	ldr	r8, [pc, #796]	; 27c00 <newconf_init+0x7cc>
   278e0:	add	r8, pc, r8
   278e4:	ldr	r6, [pc, #792]	; 27c04 <newconf_init+0x7d0>
   278e8:	add	r6, pc, r6
   278ec:	mov	r0, r9
   278f0:	mov	r1, r8
   278f4:	mov	r2, #1
   278f8:	mov	r3, r6
   278fc:	bl	d3f4 <add_conf_item@plt>
   27900:	ldr	r7, [pc, #768]	; 27c08 <newconf_init+0x7d4>
   27904:	add	r7, pc, r7
   27908:	ldr	r1, [pc, #764]	; 27c0c <newconf_init+0x7d8>
   2790c:	add	r1, pc, r1
   27910:	mov	r0, r7
   27914:	mov	r2, #0
   27918:	mov	r3, #0
   2791c:	bl	e420 <add_top_conf@plt>
   27920:	mov	r0, r7
   27924:	mov	r1, sl
   27928:	mov	r2, #1
   2792c:	ldr	r3, [pc, #732]	; 27c10 <newconf_init+0x7dc>
   27930:	add	r3, pc, r3
   27934:	bl	d3f4 <add_conf_item@plt>
   27938:	mov	r0, r7
   2793c:	ldr	r1, [pc, #720]	; 27c14 <newconf_init+0x7e0>
   27940:	add	r1, pc, r1
   27944:	movw	r2, #259	; 0x103
   27948:	ldr	r3, [pc, #712]	; 27c18 <newconf_init+0x7e4>
   2794c:	add	r3, pc, r3
   27950:	bl	d3f4 <add_conf_item@plt>
   27954:	mov	r0, r7
   27958:	mov	r1, r5
   2795c:	movw	r2, #257	; 0x101
   27960:	mov	r3, r4
   27964:	bl	d3f4 <add_conf_item@plt>
   27968:	mov	r0, r7
   2796c:	mov	r1, r8
   27970:	mov	r2, #1
   27974:	mov	r3, r6
   27978:	bl	d3f4 <add_conf_item@plt>
   2797c:	ldr	r4, [pc, #664]	; 27c1c <newconf_init+0x7e8>
   27980:	add	r4, pc, r4
   27984:	ldr	r1, [pc, #660]	; 27c20 <newconf_init+0x7ec>
   27988:	add	r1, pc, r1
   2798c:	ldr	r2, [pc, #656]	; 27c24 <newconf_init+0x7f0>
   27990:	add	r2, pc, r2
   27994:	mov	r0, r4
   27998:	mov	r3, #0
   2799c:	bl	e420 <add_top_conf@plt>
   279a0:	ldr	r1, [pc, #640]	; 27c28 <newconf_init+0x7f4>
   279a4:	add	r1, pc, r1
   279a8:	ldr	r3, [pc, #636]	; 27c2c <newconf_init+0x7f8>
   279ac:	add	r3, pc, r3
   279b0:	mov	r0, r4
   279b4:	mov	r2, #2
   279b8:	bl	d3f4 <add_conf_item@plt>
   279bc:	ldr	r1, [pc, #620]	; 27c30 <newconf_init+0x7fc>
   279c0:	add	r1, pc, r1
   279c4:	ldr	r3, [pc, #616]	; 27c34 <newconf_init+0x800>
   279c8:	add	r3, pc, r3
   279cc:	mov	r0, r4
   279d0:	mov	r2, #1
   279d4:	bl	d3f4 <add_conf_item@plt>
   279d8:	ldr	r1, [pc, #600]	; 27c38 <newconf_init+0x804>
   279dc:	add	r1, pc, r1
   279e0:	ldr	r3, [pc, #596]	; 27c3c <newconf_init+0x808>
   279e4:	add	r3, pc, r3
   279e8:	mov	r0, r4
   279ec:	mov	r2, #1
   279f0:	bl	d3f4 <add_conf_item@plt>
   279f4:	ldr	r1, [pc, #580]	; 27c40 <newconf_init+0x80c>
   279f8:	add	r1, pc, r1
   279fc:	ldr	r3, [pc, #576]	; 27c44 <newconf_init+0x810>
   27a00:	add	r3, pc, r3
   27a04:	mov	r0, r4
   27a08:	mov	r2, #2
   27a0c:	bl	d3f4 <add_conf_item@plt>
   27a10:	ldr	r1, [pc, #560]	; 27c48 <newconf_init+0x814>
   27a14:	add	r1, pc, r1
   27a18:	ldr	r3, [pc, #556]	; 27c4c <newconf_init+0x818>
   27a1c:	add	r3, pc, r3
   27a20:	mov	r0, r4
   27a24:	mov	r2, #2
   27a28:	bl	d3f4 <add_conf_item@plt>
   27a2c:	ldr	r1, [pc, #540]	; 27c50 <newconf_init+0x81c>
   27a30:	add	r1, pc, r1
   27a34:	ldr	r3, [pc, #536]	; 27c54 <newconf_init+0x820>
   27a38:	add	r3, pc, r3
   27a3c:	mov	r0, r4
   27a40:	mov	r2, #2
   27a44:	bl	d3f4 <add_conf_item@plt>
   27a48:	ldr	r1, [pc, #520]	; 27c58 <newconf_init+0x824>
   27a4c:	add	r1, pc, r1
   27a50:	ldr	r3, [pc, #516]	; 27c5c <newconf_init+0x828>
   27a54:	add	r3, pc, r3
   27a58:	mov	r0, r4
   27a5c:	movw	r2, #258	; 0x102
   27a60:	bl	d3f4 <add_conf_item@plt>
   27a64:	ldr	r1, [pc, #500]	; 27c60 <newconf_init+0x82c>
   27a68:	add	r1, pc, r1
   27a6c:	ldr	r3, [pc, #496]	; 27c64 <newconf_init+0x830>
   27a70:	add	r3, pc, r3
   27a74:	mov	r0, r4
   27a78:	movw	r2, #258	; 0x102
   27a7c:	bl	d3f4 <add_conf_item@plt>
   27a80:	ldr	r1, [pc, #480]	; 27c68 <newconf_init+0x834>
   27a84:	add	r1, pc, r1
   27a88:	ldr	r3, [pc, #476]	; 27c6c <newconf_init+0x838>
   27a8c:	add	r3, pc, r3
   27a90:	mov	r0, r4
   27a94:	movw	r2, #258	; 0x102
   27a98:	bl	d3f4 <add_conf_item@plt>
   27a9c:	ldr	r1, [pc, #460]	; 27c70 <newconf_init+0x83c>
   27aa0:	add	r1, pc, r1
   27aa4:	ldr	r3, [pc, #456]	; 27c74 <newconf_init+0x840>
   27aa8:	add	r3, pc, r3
   27aac:	mov	r0, r4
   27ab0:	movw	r2, #258	; 0x102
   27ab4:	sub	sp, fp, #28
   27ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27abc:	b	2734c <add_conf_item>
   27ac0:	.word	0x0001aa56
   27ac4:	.word	0x0001c6c0
   27ac8:	.word	0x00000808
   27acc:	.word	0x0001fcba
   27ad0:	.word	0x000007f0
   27ad4:	.word	0x0001c68d
   27ad8:	.word	0x0003441c
   27adc:	.word	0x00019b80
   27ae0:	.word	0x0003452c
   27ae4:	.word	0x0001aa8a
   27ae8:	.word	0x00034560
   27aec:	.word	0x0001ecdb
   27af0:	.word	0x000007bc
   27af4:	.word	0x00000850
   27af8:	.word	0x000345fc
   27afc:	.word	0x0001e9a2
   27b00:	.word	0x00000abc
   27b04:	.word	0x00000af0
   27b08:	.word	0x0003468c
   27b0c:	.word	0x0001c5fc
   27b10:	.word	0x00034754
   27b14:	.word	0x0001c5e8
   27b18:	.word	0x00000b44
   27b1c:	.word	0x00000b9c
   27b20:	.word	0x0001c5cb
   27b24:	.word	0x00000be0
   27b28:	.word	0x0001c5bc
   27b2c:	.word	0x00000bdc
   27b30:	.word	0x0001c630
   27b34:	.word	0x00000bd8
   27b38:	.word	0x0001c599
   27b3c:	.word	0x00000bc8
   27b40:	.word	0x0001c56e
   27b44:	.word	0x00000bb8
   27b48:	.word	0x0001c55c
   27b4c:	.word	0x00000ba8
   27b50:	.word	0x0001cf71
   27b54:	.word	0x00000b98
   27b58:	.word	0x0001fb40
   27b5c:	.word	0x0001d442
   27b60:	.word	0x00000b98
   27b64:	.word	0x00000c20
   27b68:	.word	0x00034658
   27b6c:	.word	0x0001c4e9
   27b70:	.word	0x00000f6c
   27b74:	.word	0x0001c4d0
   27b78:	.word	0x00000fd4
   27b7c:	.word	0x0001c4b9
   27b80:	.word	0x00001140
   27b84:	.word	0x0001e0b1
   27b88:	.word	0x00001208
   27b8c:	.word	0x00001278
   27b90:	.word	0x0003468c
   27b94:	.word	0x0001fbbd
   27b98:	.word	0x000013fc
   27b9c:	.word	0x0001c447
   27ba0:	.word	0x00001468
   27ba4:	.word	0x00019bf0
   27ba8:	.word	0x000014d0
   27bac:	.word	0x00001530
   27bb0:	.word	0x0001986b
   27bb4:	.word	0x000346dc
   27bb8:	.word	0x00019adb
   27bbc:	.word	0x00034d50
   27bc0:	.word	0x0001c3bf
   27bc4:	.word	0x00034f28
   27bc8:	.word	0x00019a88
   27bcc:	.word	0x00001584
   27bd0:	.word	0x0001c37a
   27bd4:	.word	0x00001610
   27bd8:	.word	0x0000166c
   27bdc:	.word	0x000016e8
   27be0:	.word	0x0001c344
   27be4:	.word	0x00001704
   27be8:	.word	0x0001c32f
   27bec:	.word	0x00001710
   27bf0:	.word	0x0001c384
   27bf4:	.word	0x00001760
   27bf8:	.word	0x0001c2e5
   27bfc:	.word	0x00001818
   27c00:	.word	0x0001c2c9
   27c04:	.word	0x0000195c
   27c08:	.word	0x0001c2b3
   27c0c:	.word	0x00001ac8
   27c10:	.word	0x00001668
   27c14:	.word	0x0001c2e4
   27c18:	.word	0x000016bc
   27c1c:	.word	0x0001c241
   27c20:	.word	0x00001a6c
   27c24:	.word	0x00001ad0
   27c28:	.word	0x00018c16
   27c2c:	.word	0x00001cf4
   27c30:	.word	0x0001dc39
   27c34:	.word	0x00001d0c
   27c38:	.word	0x0001dc0c
   27c3c:	.word	0x00001cf8
   27c40:	.word	0x0001c1cd
   27c44:	.word	0x00001ce4
   27c48:	.word	0x0001c1b9
   27c4c:	.word	0x00001cd0
   27c50:	.word	0x0001c1a5
   27c54:	.word	0x00001cbc
   27c58:	.word	0x0001dc76
   27c5c:	.word	0x00001cc4
   27c60:	.word	0x0001dcf6
   27c64:	.word	0x00001cc4
   27c68:	.word	0x0001dcf3
   27c6c:	.word	0x00001cc4
   27c70:	.word	0x0001dcfa
   27c74:	.word	0x00001cc4

00027c78 <conf_set_modules_path>:
   27c78:	b	e564 <mod_add_path@plt>

00027c7c <conf_set_modules_module>:
   27c7c:	push	{r4, r5, fp, lr}
   27c80:	add	fp, sp, #8
   27c84:	mov	r5, r0
   27c88:	bl	da30 <rb_basename@plt>
   27c8c:	mov	r4, r0
   27c90:	bl	d160 <findmodule_byname@plt>
   27c94:	cmp	r0, #0
   27c98:	bne	27cac <conf_set_modules_module+0x30>
   27c9c:	mov	r0, r5
   27ca0:	mov	r1, #1
   27ca4:	mov	r2, #0
   27ca8:	bl	debc <load_one_module@plt>
   27cac:	mov	r0, r4
   27cb0:	pop	{r4, r5, fp, lr}
   27cb4:	b	26d8c <rb_free>

00027cb8 <conf_begin_oper>:
   27cb8:	push	{r4, r5, r6, r7, fp, lr}
   27cbc:	add	fp, sp, #16
   27cc0:	ldr	r0, [pc, #124]	; 27d44 <conf_begin_oper+0x8c>
   27cc4:	ldr	r0, [pc, r0]
   27cc8:	cmp	r0, #0
   27ccc:	ldr	r6, [pc, #116]	; 27d48 <conf_begin_oper+0x90>
   27cd0:	add	r6, pc, r6
   27cd4:	beq	27ce4 <conf_begin_oper+0x2c>
   27cd8:	bl	d9c4 <free_oper_conf@plt>
   27cdc:	mov	r0, #0
   27ce0:	str	r0, [r6]
   27ce4:	ldr	r4, [pc, #96]	; 27d4c <conf_begin_oper+0x94>
   27ce8:	ldr	r4, [pc, r4]
   27cec:	cmp	r4, #0
   27cf0:	beq	27d28 <conf_begin_oper+0x70>
   27cf4:	ldr	r5, [pc, #84]	; 27d50 <conf_begin_oper+0x98>
   27cf8:	add	r5, pc, r5
   27cfc:	ldr	r0, [r4]
   27d00:	ldr	r7, [r4, #8]
   27d04:	bl	d9c4 <free_oper_conf@plt>
   27d08:	mov	r0, r4
   27d0c:	mov	r1, r5
   27d10:	bl	26cd4 <rb_dlinkDelete>
   27d14:	mov	r0, r4
   27d18:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   27d1c:	cmp	r7, #0
   27d20:	mov	r4, r7
   27d24:	bne	27cfc <conf_begin_oper+0x44>
   27d28:	bl	d190 <make_oper_conf@plt>
   27d2c:	str	r0, [r6]
   27d30:	ldr	r1, [r0, #20]
   27d34:	orr	r1, r1, #1
   27d38:	str	r1, [r0, #20]
   27d3c:	mov	r0, #0
   27d40:	pop	{r4, r5, r6, r7, fp, pc}
   27d44:	.word	0x0003e4d8
   27d48:	.word	0x0003e4cc
   27d4c:	.word	0x0003e4b8
   27d50:	.word	0x0003e4a8

00027d54 <conf_end_oper>:
   27d54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27d58:	add	fp, sp, #24
   27d5c:	ldr	r4, [pc, #564]	; 27f98 <conf_end_oper+0x244>
   27d60:	ldr	r4, [pc, r4]
   27d64:	cmp	r4, #0
   27d68:	beq	27d94 <conf_end_oper+0x40>
   27d6c:	mov	r0, r4
   27d70:	bl	dc94 <strlen@plt>
   27d74:	cmp	r0, #65	; 0x41
   27d78:	movcs	r0, #0
   27d7c:	strbcs	r0, [r4, #64]	; 0x40
   27d80:	mov	r0, r4
   27d84:	bl	27068 <rb_strdup>
   27d88:	ldr	r1, [pc, #524]	; 27f9c <conf_end_oper+0x248>
   27d8c:	ldr	r1, [pc, r1]
   27d90:	str	r0, [r1]
   27d94:	ldr	r0, [pc, #516]	; 27fa0 <conf_end_oper+0x24c>
   27d98:	ldr	r0, [pc, r0]
   27d9c:	ldr	r1, [r0]
   27da0:	cmp	r1, #0
   27da4:	beq	27f2c <conf_end_oper+0x1d8>
   27da8:	ldrb	r2, [r1]
   27dac:	cmp	r2, #0
   27db0:	beq	27f2c <conf_end_oper+0x1d8>
   27db4:	ldr	r2, [r0, #12]
   27db8:	cmp	r2, #0
   27dbc:	beq	27dcc <conf_end_oper+0x78>
   27dc0:	ldrb	r2, [r2]
   27dc4:	cmp	r2, #0
   27dc8:	bne	27de4 <conf_end_oper+0x90>
   27dcc:	ldr	r2, [r0, #36]	; 0x24
   27dd0:	cmp	r2, #0
   27dd4:	beq	27f64 <conf_end_oper+0x210>
   27dd8:	ldrb	r2, [r2]
   27ddc:	cmp	r2, #0
   27de0:	beq	27f64 <conf_end_oper+0x210>
   27de4:	ldr	r0, [r0, #32]
   27de8:	cmp	r0, #0
   27dec:	bne	27e08 <conf_end_oper+0xb4>
   27df0:	ldr	r0, [pc, #436]	; 27fac <conf_end_oper+0x258>
   27df4:	add	r0, pc, r0
   27df8:	bl	d394 <privilegeset_get@plt>
   27dfc:	ldr	r1, [pc, #428]	; 27fb0 <conf_end_oper+0x25c>
   27e00:	ldr	r1, [pc, r1]
   27e04:	str	r0, [r1, #32]
   27e08:	ldr	r7, [pc, #420]	; 27fb4 <conf_end_oper+0x260>
   27e0c:	ldr	r7, [pc, r7]
   27e10:	cmp	r7, #0
   27e14:	beq	27f40 <conf_end_oper+0x1ec>
   27e18:	ldr	r8, [pc, #408]	; 27fb8 <conf_end_oper+0x264>
   27e1c:	add	r8, pc, r8
   27e20:	b	27e34 <conf_end_oper+0xe0>
   27e24:	mov	r0, r5
   27e28:	bl	29a88 <rb_dlinkMoveNode>
   27e2c:	cmp	r7, #0
   27e30:	beq	27f40 <conf_end_oper+0x1ec>
   27e34:	mov	r5, r7
   27e38:	ldr	r4, [r7]
   27e3c:	ldr	r7, [r7, #8]
   27e40:	ldr	r0, [pc, #372]	; 27fbc <conf_end_oper+0x268>
   27e44:	ldr	r0, [pc, r0]
   27e48:	ldr	r0, [r0]
   27e4c:	bl	27068 <rb_strdup>
   27e50:	str	r0, [r4]
   27e54:	ldr	r0, [pc, #356]	; 27fc0 <conf_end_oper+0x26c>
   27e58:	ldr	r0, [pc, r0]
   27e5c:	ldr	r0, [r0, #12]
   27e60:	cmp	r0, #0
   27e64:	beq	27e7c <conf_end_oper+0x128>
   27e68:	ldrb	r1, [r0]
   27e6c:	cmp	r1, #0
   27e70:	beq	27e7c <conf_end_oper+0x128>
   27e74:	bl	27068 <rb_strdup>
   27e78:	str	r0, [r4, #12]
   27e7c:	ldr	r0, [pc, #320]	; 27fc4 <conf_end_oper+0x270>
   27e80:	ldr	r0, [pc, r0]
   27e84:	ldr	r1, [r0, #20]
   27e88:	str	r1, [r4, #20]
   27e8c:	ldr	r1, [r0, #24]
   27e90:	str	r1, [r4, #24]
   27e94:	ldr	r1, [r0, #28]
   27e98:	str	r1, [r4, #28]
   27e9c:	ldr	r1, [r0, #32]
   27ea0:	str	r1, [r4, #32]
   27ea4:	ldr	r0, [r0, #36]	; 0x24
   27ea8:	cmp	r0, #0
   27eac:	beq	27f00 <conf_end_oper+0x1ac>
   27eb0:	mov	r1, r8
   27eb4:	bl	e720 <BIO_new_file@plt>
   27eb8:	cmp	r0, #0
   27ebc:	beq	27f70 <conf_end_oper+0x21c>
   27ec0:	mov	r6, r0
   27ec4:	mov	r1, #0
   27ec8:	mov	r2, #0
   27ecc:	mov	r3, #0
   27ed0:	bl	dd18 <PEM_read_bio_RSA_PUBKEY@plt>
   27ed4:	str	r0, [r4, #40]	; 0x28
   27ed8:	mov	r0, r6
   27edc:	mov	r1, #9
   27ee0:	mov	r2, #1
   27ee4:	mov	r3, #0
   27ee8:	bl	def8 <BIO_ctrl@plt>
   27eec:	mov	r0, r6
   27ef0:	bl	df34 <BIO_free@plt>
   27ef4:	ldr	r0, [r4, #40]	; 0x28
   27ef8:	cmp	r0, #0
   27efc:	beq	27f80 <conf_end_oper+0x22c>
   27f00:	ldr	r0, [pc, #200]	; 27fd0 <conf_end_oper+0x27c>
   27f04:	ldr	r0, [pc, r0]
   27f08:	ldr	r0, [r0, #16]
   27f0c:	cmp	r0, #0
   27f10:	beq	27e24 <conf_end_oper+0xd0>
   27f14:	ldrb	r1, [r0]
   27f18:	cmp	r1, #0
   27f1c:	beq	27e24 <conf_end_oper+0xd0>
   27f20:	bl	27068 <rb_strdup>
   27f24:	str	r0, [r4, #16]
   27f28:	b	27e24 <conf_end_oper+0xd0>
   27f2c:	ldr	r0, [pc, #112]	; 27fa4 <conf_end_oper+0x250>
   27f30:	add	r0, pc, r0
   27f34:	bl	d400 <conf_report_error@plt>
   27f38:	mov	r0, #0
   27f3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27f40:	ldr	r0, [pc, #140]	; 27fd4 <conf_end_oper+0x280>
   27f44:	ldr	r0, [pc, r0]
   27f48:	bl	d9c4 <free_oper_conf@plt>
   27f4c:	ldr	r0, [pc, #132]	; 27fd8 <conf_end_oper+0x284>
   27f50:	add	r0, pc, r0
   27f54:	mov	r1, #0
   27f58:	str	r1, [r0]
   27f5c:	mov	r0, #0
   27f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27f64:	ldr	r0, [pc, #60]	; 27fa8 <conf_end_oper+0x254>
   27f68:	add	r0, pc, r0
   27f6c:	b	27f8c <conf_end_oper+0x238>
   27f70:	ldr	r1, [r4]
   27f74:	ldr	r0, [pc, #76]	; 27fc8 <conf_end_oper+0x274>
   27f78:	add	r0, pc, r0
   27f7c:	b	27f8c <conf_end_oper+0x238>
   27f80:	ldr	r1, [r4]
   27f84:	ldr	r0, [pc, #64]	; 27fcc <conf_end_oper+0x278>
   27f88:	add	r0, pc, r0
   27f8c:	bl	d400 <conf_report_error@plt>
   27f90:	mov	r0, #0
   27f94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27f98:	.word	0x0003e438
   27f9c:	.word	0x0003e410
   27fa0:	.word	0x0003e404
   27fa4:	.word	0x0001bfce
   27fa8:	.word	0x0001bfbf
   27fac:	.word	0x00019580
   27fb0:	.word	0x0003e39c
   27fb4:	.word	0x0003e394
   27fb8:	.word	0x0001a881
   27fbc:	.word	0x0003e358
   27fc0:	.word	0x0003e344
   27fc4:	.word	0x0003e31c
   27fc8:	.word	0x0001bfe2
   27fcc:	.word	0x0001c017
   27fd0:	.word	0x0003e298
   27fd4:	.word	0x0003e258
   27fd8:	.word	0x0003e24c

00027fdc <conf_begin_class>:
   27fdc:	push	{fp, lr}
   27fe0:	mov	fp, sp
   27fe4:	ldr	r0, [pc, #36]	; 28010 <conf_begin_class+0x34>
   27fe8:	ldr	r0, [pc, r0]
   27fec:	cmp	r0, #0
   27ff0:	beq	27ff8 <conf_begin_class+0x1c>
   27ff4:	bl	e7bc <free_class@plt>
   27ff8:	bl	de68 <make_class@plt>
   27ffc:	ldr	r1, [pc, #16]	; 28014 <conf_begin_class+0x38>
   28000:	add	r1, pc, r1
   28004:	str	r0, [r1]
   28008:	mov	r0, #0
   2800c:	pop	{fp, pc}
   28010:	.word	0x0003e1c4
   28014:	.word	0x0003e1ac

00028018 <conf_end_class>:
   28018:	push	{fp, lr}
   2801c:	mov	fp, sp
   28020:	ldr	r0, [pc, #104]	; 28090 <conf_end_class+0x78>
   28024:	ldr	r0, [pc, r0]
   28028:	cmp	r0, #0
   2802c:	beq	28040 <conf_end_class+0x28>
   28030:	bl	27068 <rb_strdup>
   28034:	ldr	r1, [pc, #88]	; 28094 <conf_end_class+0x7c>
   28038:	ldr	r1, [pc, r1]
   2803c:	str	r0, [r1, #4]
   28040:	ldr	r0, [pc, #80]	; 28098 <conf_end_class+0x80>
   28044:	ldr	r0, [pc, r0]
   28048:	ldr	r1, [r0, #4]
   2804c:	cmp	r1, #0
   28050:	beq	2807c <conf_end_class+0x64>
   28054:	ldrb	r1, [r1]
   28058:	cmp	r1, #0
   2805c:	beq	2807c <conf_end_class+0x64>
   28060:	bl	e030 <add_class@plt>
   28064:	ldr	r0, [pc, #52]	; 280a0 <conf_end_class+0x88>
   28068:	add	r0, pc, r0
   2806c:	mov	r1, #0
   28070:	str	r1, [r0]
   28074:	mov	r0, #0
   28078:	pop	{fp, pc}
   2807c:	ldr	r0, [pc, #24]	; 2809c <conf_end_class+0x84>
   28080:	add	r0, pc, r0
   28084:	bl	d400 <conf_report_error@plt>
   28088:	mov	r0, #0
   2808c:	pop	{fp, pc}
   28090:	.word	0x0003e174
   28094:	.word	0x0003e174
   28098:	.word	0x0003e168
   2809c:	.word	0x0001c082
   280a0:	.word	0x0003e144

000280a4 <conf_begin_listen>:
   280a4:	push	{r4, r5, r6, sl, fp, lr}
   280a8:	add	fp, sp, #16
   280ac:	mov	r4, #0
   280b0:	ldr	r5, [pc, #64]	; 280f8 <conf_begin_listen+0x54>
   280b4:	add	r5, pc, r5
   280b8:	mov	r6, #0
   280bc:	ldr	r0, [r5, r6, lsl #2]
   280c0:	bl	26d8c <rb_free>
   280c4:	str	r4, [r5, r6, lsl #2]
   280c8:	add	r6, r6, #1
   280cc:	cmp	r6, #2
   280d0:	bne	280bc <conf_begin_listen+0x18>
   280d4:	ldr	r0, [pc, #32]	; 280fc <conf_begin_listen+0x58>
   280d8:	add	r0, pc, r0
   280dc:	mov	r1, #0
   280e0:	str	r1, [r0]
   280e4:	ldr	r0, [pc, #20]	; 28100 <conf_begin_listen+0x5c>
   280e8:	add	r0, pc, r0
   280ec:	str	r1, [r0]
   280f0:	mov	r0, #0
   280f4:	pop	{r4, r5, r6, sl, fp, pc}
   280f8:	.word	0x0003e100
   280fc:	.word	0x000346d8
   28100:	.word	0x0003e0d4

00028104 <conf_end_listen>:
   28104:	push	{r4, r5, r6, sl, fp, lr}
   28108:	add	fp, sp, #16
   2810c:	mov	r4, #0
   28110:	ldr	r5, [pc, #64]	; 28158 <conf_end_listen+0x54>
   28114:	add	r5, pc, r5
   28118:	mov	r6, #0
   2811c:	ldr	r0, [r5, r6, lsl #2]
   28120:	bl	26d8c <rb_free>
   28124:	str	r4, [r5, r6, lsl #2]
   28128:	add	r6, r6, #1
   2812c:	cmp	r6, #2
   28130:	bne	2811c <conf_end_listen+0x18>
   28134:	ldr	r0, [pc, #32]	; 2815c <conf_end_listen+0x58>
   28138:	add	r0, pc, r0
   2813c:	mov	r1, #0
   28140:	str	r1, [r0]
   28144:	ldr	r0, [pc, #20]	; 28160 <conf_end_listen+0x5c>
   28148:	add	r0, pc, r0
   2814c:	str	r1, [r0]
   28150:	mov	r0, #0
   28154:	pop	{r4, r5, r6, sl, fp, pc}
   28158:	.word	0x0003e0a0
   2815c:	.word	0x00034678
   28160:	.word	0x0003e074

00028164 <conf_set_listen_defer_accept>:
   28164:	ldr	r0, [r0]
   28168:	ldr	r1, [pc, #8]	; 28178 <conf_set_listen_defer_accept+0x14>
   2816c:	add	r1, pc, r1
   28170:	str	r0, [r1]
   28174:	bx	lr
   28178:	.word	0x00034644

0002817c <conf_set_listen_wsock>:
   2817c:	ldr	r0, [r0]
   28180:	ldr	r1, [pc, #8]	; 28190 <conf_set_listen_wsock+0x14>
   28184:	add	r1, pc, r1
   28188:	str	r0, [r1]
   2818c:	bx	lr
   28190:	.word	0x0003e038

00028194 <conf_set_listen_port>:
   28194:	mov	r1, #0
   28198:	mov	r2, #0
   2819c:	b	2a1ac <conf_set_listen_port_both>

000281a0 <conf_set_listen_sslport>:
   281a0:	mov	r1, #1
   281a4:	mov	r2, #0
   281a8:	b	2a1ac <conf_set_listen_port_both>

000281ac <conf_set_listen_sctp_port>:
   281ac:	mov	r1, #0
   281b0:	mov	r2, #1
   281b4:	b	2a1ac <conf_set_listen_port_both>

000281b8 <conf_set_listen_sctp_sslport>:
   281b8:	mov	r1, #1
   281bc:	mov	r2, #1
   281c0:	b	2a1ac <conf_set_listen_port_both>

000281c4 <conf_set_listen_address>:
   281c4:	push	{r4, r5, fp, lr}
   281c8:	add	fp, sp, #8
   281cc:	mov	r4, r0
   281d0:	ldr	r5, [pc, #36]	; 281fc <conf_set_listen_address+0x38>
   281d4:	add	r5, pc, r5
   281d8:	ldr	r0, [r5, #4]
   281dc:	bl	26d8c <rb_free>
   281e0:	ldr	r0, [pc, #24]	; 28200 <conf_set_listen_address+0x3c>
   281e4:	ldr	r0, [pc, r0]
   281e8:	str	r0, [r5, #4]
   281ec:	mov	r0, r4
   281f0:	bl	27068 <rb_strdup>
   281f4:	str	r0, [r5]
   281f8:	pop	{r4, r5, fp, pc}
   281fc:	.word	0x0003dfe0
   28200:	.word	0x0003dfd0

00028204 <conf_begin_auth>:
   28204:	push	{r4, r5, r6, sl, fp, lr}
   28208:	add	fp, sp, #16
   2820c:	ldr	r0, [pc, #112]	; 28284 <conf_begin_auth+0x80>
   28210:	ldr	r0, [pc, r0]
   28214:	cmp	r0, #0
   28218:	beq	28220 <conf_begin_auth+0x1c>
   2821c:	bl	dc34 <free_conf@plt>
   28220:	ldr	r4, [pc, #96]	; 28288 <conf_begin_auth+0x84>
   28224:	ldr	r4, [pc, r4]
   28228:	cmp	r4, #0
   2822c:	beq	28264 <conf_begin_auth+0x60>
   28230:	ldr	r5, [pc, #84]	; 2828c <conf_begin_auth+0x88>
   28234:	add	r5, pc, r5
   28238:	ldr	r0, [r4]
   2823c:	ldr	r6, [r4, #8]
   28240:	bl	dc34 <free_conf@plt>
   28244:	mov	r0, r4
   28248:	mov	r1, r5
   2824c:	bl	26cd4 <rb_dlinkDelete>
   28250:	mov	r0, r4
   28254:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   28258:	cmp	r6, #0
   2825c:	mov	r4, r6
   28260:	bne	28238 <conf_begin_auth+0x34>
   28264:	bl	cfbc <make_conf@plt>
   28268:	ldr	r1, [pc, #32]	; 28290 <conf_begin_auth+0x8c>
   2826c:	add	r1, pc, r1
   28270:	str	r0, [r1]
   28274:	mov	r1, #2
   28278:	str	r1, [r0]
   2827c:	mov	r0, #0
   28280:	pop	{r4, r5, r6, sl, fp, pc}
   28284:	.word	0x0003dfb0
   28288:	.word	0x0003dfa0
   2828c:	.word	0x0003df90
   28290:	.word	0x0003df54

00028294 <conf_end_auth>:
   28294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28298:	add	fp, sp, #28
   2829c:	sub	sp, sp, #4
   282a0:	ldr	r0, [pc, #752]	; 28598 <conf_end_auth+0x304>
   282a4:	ldr	r0, [pc, r0]
   282a8:	ldr	r0, [r0, #12]
   282ac:	cmp	r0, #0
   282b0:	beq	282c0 <conf_end_auth+0x2c>
   282b4:	ldrb	r0, [r0]
   282b8:	cmp	r0, #0
   282bc:	bne	282d8 <conf_end_auth+0x44>
   282c0:	ldr	r0, [pc, #724]	; 2859c <conf_end_auth+0x308>
   282c4:	add	r0, pc, r0
   282c8:	bl	27068 <rb_strdup>
   282cc:	ldr	r1, [pc, #716]	; 285a0 <conf_end_auth+0x30c>
   282d0:	ldr	r1, [pc, r1]
   282d4:	str	r0, [r1, #12]
   282d8:	ldr	r0, [pc, #708]	; 285a4 <conf_end_auth+0x310>
   282dc:	ldr	r0, [pc, r0]
   282e0:	ldr	r1, [r0, #16]
   282e4:	cmp	r1, #0
   282e8:	beq	283b4 <conf_end_auth+0x120>
   282ec:	ldrb	r1, [r1]
   282f0:	cmp	r1, #0
   282f4:	beq	283b4 <conf_end_auth+0x120>
   282f8:	ldr	r0, [r0, #28]
   282fc:	bl	e108 <collapse@plt>
   28300:	ldr	r0, [pc, #676]	; 285ac <conf_end_auth+0x318>
   28304:	ldr	r0, [pc, r0]
   28308:	ldr	r0, [r0, #16]
   2830c:	bl	e108 <collapse@plt>
   28310:	ldr	r0, [pc, #664]	; 285b0 <conf_end_auth+0x31c>
   28314:	ldr	r0, [pc, r0]
   28318:	bl	dd54 <conf_add_class_to_conf@plt>
   2831c:	ldr	r0, [pc, #656]	; 285b4 <conf_end_auth+0x320>
   28320:	add	r0, pc, r0
   28324:	mov	r1, #2
   28328:	mov	r2, r0
   2832c:	bl	e498 <find_exact_conf_by_address@plt>
   28330:	cmp	r0, #0
   28334:	beq	28344 <conf_end_auth+0xb0>
   28338:	ldr	r0, [r0, #24]
   2833c:	cmp	r0, #0
   28340:	beq	283c4 <conf_end_auth+0x130>
   28344:	ldr	r1, [pc, #624]	; 285bc <conf_end_auth+0x328>
   28348:	ldr	r1, [pc, r1]
   2834c:	ldr	r0, [r1, #16]
   28350:	ldr	r2, [r1, #28]
   28354:	mov	r1, #2
   28358:	bl	e498 <find_exact_conf_by_address@plt>
   2835c:	cmp	r0, #0
   28360:	beq	28390 <conf_end_auth+0xfc>
   28364:	ldr	r0, [r0, #24]
   28368:	cmp	r0, #0
   2836c:	beq	283d4 <conf_end_auth+0x140>
   28370:	ldr	r1, [pc, #584]	; 285c0 <conf_end_auth+0x32c>
   28374:	ldr	r1, [pc, r1]
   28378:	ldr	r1, [r1, #24]
   2837c:	cmp	r1, #0
   28380:	beq	28390 <conf_end_auth+0xfc>
   28384:	bl	e750 <irccmp@plt>
   28388:	cmp	r0, #0
   2838c:	beq	283d4 <conf_end_auth+0x140>
   28390:	ldr	r1, [pc, #564]	; 285cc <conf_end_auth+0x338>
   28394:	ldr	r1, [pc, r1]
   28398:	ldr	r0, [r1, #16]
   2839c:	ldr	r3, [r1, #24]
   283a0:	ldr	r2, [r1, #28]
   283a4:	str	r1, [sp]
   283a8:	mov	r1, #2
   283ac:	bl	dacc <add_conf_by_address@plt>
   283b0:	b	283f0 <conf_end_auth+0x15c>
   283b4:	ldr	r0, [pc, #492]	; 285a8 <conf_end_auth+0x314>
   283b8:	add	r0, pc, r0
   283bc:	bl	d400 <conf_report_error@plt>
   283c0:	b	2858c <conf_end_auth+0x2f8>
   283c4:	ldr	r0, [pc, #492]	; 285b8 <conf_end_auth+0x324>
   283c8:	add	r0, pc, r0
   283cc:	bl	d400 <conf_report_error@plt>
   283d0:	b	283f0 <conf_end_auth+0x15c>
   283d4:	ldr	r0, [pc, #488]	; 285c4 <conf_end_auth+0x330>
   283d8:	ldr	r0, [pc, r0]
   283dc:	ldr	r2, [r0, #16]
   283e0:	ldr	r1, [r0, #28]
   283e4:	ldr	r0, [pc, #476]	; 285c8 <conf_end_auth+0x334>
   283e8:	add	r0, pc, r0
   283ec:	bl	d400 <conf_report_error@plt>
   283f0:	ldr	r6, [pc, #472]	; 285d0 <conf_end_auth+0x33c>
   283f4:	ldr	r6, [pc, r6]
   283f8:	cmp	r6, #0
   283fc:	beq	2857c <conf_end_auth+0x2e8>
   28400:	ldr	r4, [pc, #460]	; 285d4 <conf_end_auth+0x340>
   28404:	add	r4, pc, r4
   28408:	ldr	r9, [pc, #456]	; 285d8 <conf_end_auth+0x344>
   2840c:	add	r9, pc, r9
   28410:	ldr	sl, [pc, #452]	; 285dc <conf_end_auth+0x348>
   28414:	add	sl, pc, sl
   28418:	ldr	r8, [pc, #448]	; 285e0 <conf_end_auth+0x34c>
   2841c:	add	r8, pc, r8
   28420:	b	28458 <conf_end_auth+0x1c4>
   28424:	ldr	r0, [r5, #16]
   28428:	ldr	r3, [r5, #24]
   2842c:	ldr	r2, [r5, #28]
   28430:	str	r5, [sp]
   28434:	mov	r1, #2
   28438:	bl	dacc <add_conf_by_address@plt>
   2843c:	mov	r0, r7
   28440:	mov	r1, sl
   28444:	bl	26cd4 <rb_dlinkDelete>
   28448:	mov	r0, r7
   2844c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   28450:	cmp	r6, #0
   28454:	beq	2857c <conf_end_auth+0x2e8>
   28458:	mov	r7, r6
   2845c:	ldr	r5, [r6]
   28460:	ldr	r6, [r6, #8]
   28464:	ldr	r0, [pc, #376]	; 285e4 <conf_end_auth+0x350>
   28468:	ldr	r0, [pc, r0]
   2846c:	ldr	r0, [r0, #20]
   28470:	cmp	r0, #0
   28474:	beq	28480 <conf_end_auth+0x1ec>
   28478:	bl	27068 <rb_strdup>
   2847c:	str	r0, [r5, #20]
   28480:	ldr	r0, [pc, #352]	; 285e8 <conf_end_auth+0x354>
   28484:	ldr	r0, [pc, r0]
   28488:	ldr	r0, [r0, #24]
   2848c:	cmp	r0, #0
   28490:	beq	2849c <conf_end_auth+0x208>
   28494:	bl	27068 <rb_strdup>
   28498:	str	r0, [r5, #24]
   2849c:	ldr	r0, [pc, #328]	; 285ec <conf_end_auth+0x358>
   284a0:	ldr	r0, [pc, r0]
   284a4:	ldr	r0, [r0, #12]
   284a8:	bl	27068 <rb_strdup>
   284ac:	str	r0, [r5, #12]
   284b0:	ldr	r0, [pc, #312]	; 285f0 <conf_end_auth+0x35c>
   284b4:	ldr	r0, [pc, r0]
   284b8:	ldr	r0, [r0, #48]	; 0x30
   284bc:	cmp	r0, #0
   284c0:	beq	284cc <conf_end_auth+0x238>
   284c4:	bl	27068 <rb_strdup>
   284c8:	str	r0, [r5, #48]	; 0x30
   284cc:	ldr	r0, [pc, #288]	; 285f4 <conf_end_auth+0x360>
   284d0:	ldr	r0, [pc, r0]
   284d4:	ldr	r1, [r0, #4]
   284d8:	str	r1, [r5, #4]
   284dc:	ldr	r0, [r0, #32]
   284e0:	str	r0, [r5, #32]
   284e4:	ldr	r0, [r5, #28]
   284e8:	bl	e108 <collapse@plt>
   284ec:	ldr	r0, [r5, #16]
   284f0:	bl	e108 <collapse@plt>
   284f4:	mov	r0, r5
   284f8:	bl	dd54 <conf_add_class_to_conf@plt>
   284fc:	mov	r0, r4
   28500:	mov	r1, #2
   28504:	mov	r2, r4
   28508:	bl	e498 <find_exact_conf_by_address@plt>
   2850c:	cmp	r0, #0
   28510:	beq	28520 <conf_end_auth+0x28c>
   28514:	ldr	r0, [r0, #24]
   28518:	cmp	r0, #0
   2851c:	beq	28570 <conf_end_auth+0x2dc>
   28520:	ldr	r0, [r5, #16]
   28524:	ldr	r2, [r5, #28]
   28528:	mov	r1, #2
   2852c:	bl	e498 <find_exact_conf_by_address@plt>
   28530:	cmp	r0, #0
   28534:	beq	28424 <conf_end_auth+0x190>
   28538:	ldr	r0, [r0, #24]
   2853c:	cmp	r0, #0
   28540:	beq	2855c <conf_end_auth+0x2c8>
   28544:	ldr	r1, [r5, #24]
   28548:	cmp	r1, #0
   2854c:	beq	28424 <conf_end_auth+0x190>
   28550:	bl	e750 <irccmp@plt>
   28554:	cmp	r0, #0
   28558:	bne	28424 <conf_end_auth+0x190>
   2855c:	ldr	r2, [r5, #16]
   28560:	ldr	r1, [r5, #28]
   28564:	mov	r0, r9
   28568:	bl	d400 <conf_report_error@plt>
   2856c:	b	2843c <conf_end_auth+0x1a8>
   28570:	mov	r0, r8
   28574:	bl	d400 <conf_report_error@plt>
   28578:	b	2843c <conf_end_auth+0x1a8>
   2857c:	ldr	r0, [pc, #116]	; 285f8 <conf_end_auth+0x364>
   28580:	add	r0, pc, r0
   28584:	mov	r1, #0
   28588:	str	r1, [r0]
   2858c:	mov	r0, #0
   28590:	sub	sp, fp, #28
   28594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28598:	.word	0x0003df1c
   2859c:	.word	0x0001c088
   285a0:	.word	0x0003def0
   285a4:	.word	0x0003dee4
   285a8:	.word	0x0001bf9c
   285ac:	.word	0x0003debc
   285b0:	.word	0x0003deac
   285b4:	.word	0x0001937d
   285b8:	.word	0x0001bfb5
   285bc:	.word	0x0003de78
   285c0:	.word	0x0003de4c
   285c4:	.word	0x0003dde8
   285c8:	.word	0x0001bfbf
   285cc:	.word	0x0003de2c
   285d0:	.word	0x0003ddd0
   285d4:	.word	0x00019299
   285d8:	.word	0x0001bf9b
   285dc:	.word	0x0003ddb0
   285e0:	.word	0x0001bf61
   285e4:	.word	0x0003dd58
   285e8:	.word	0x0003dd3c
   285ec:	.word	0x0003dd20
   285f0:	.word	0x0003dd0c
   285f4:	.word	0x0003dcf0
   285f8:	.word	0x0003dc40

000285fc <conf_cleanup_shared>:
   285fc:	push	{r4, r5, r6, sl, fp, lr}
   28600:	add	fp, sp, #16
   28604:	ldr	r4, [pc, #104]	; 28674 <conf_cleanup_shared+0x78>
   28608:	ldr	r4, [pc, r4]
   2860c:	cmp	r4, #0
   28610:	beq	28648 <conf_cleanup_shared+0x4c>
   28614:	ldr	r5, [pc, #92]	; 28678 <conf_cleanup_shared+0x7c>
   28618:	add	r5, pc, r5
   2861c:	ldr	r0, [r4]
   28620:	ldr	r6, [r4, #8]
   28624:	bl	e3e4 <free_remote_conf@plt>
   28628:	mov	r0, r4
   2862c:	mov	r1, r5
   28630:	bl	26cd4 <rb_dlinkDelete>
   28634:	mov	r0, r4
   28638:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   2863c:	cmp	r6, #0
   28640:	mov	r4, r6
   28644:	bne	2861c <conf_cleanup_shared+0x20>
   28648:	ldr	r0, [pc, #44]	; 2867c <conf_cleanup_shared+0x80>
   2864c:	ldr	r0, [pc, r0]
   28650:	cmp	r0, #0
   28654:	beq	2866c <conf_cleanup_shared+0x70>
   28658:	bl	e3e4 <free_remote_conf@plt>
   2865c:	ldr	r0, [pc, #28]	; 28680 <conf_cleanup_shared+0x84>
   28660:	add	r0, pc, r0
   28664:	mov	r1, #0
   28668:	str	r1, [r0]
   2866c:	mov	r0, #0
   28670:	pop	{r4, r5, r6, sl, fp, pc}
   28674:	.word	0x0003dbc8
   28678:	.word	0x0003dbb8
   2867c:	.word	0x0003db90
   28680:	.word	0x0003db7c

00028684 <conf_set_shared_oper>:
   28684:	push	{r4, r5, fp, lr}
   28688:	add	fp, sp, #8
   2868c:	mov	r4, r0
   28690:	ldr	r0, [pc, #320]	; 287d8 <conf_set_shared_oper+0x154>
   28694:	ldr	r0, [pc, r0]
   28698:	cmp	r0, #0
   2869c:	beq	286a4 <conf_set_shared_oper+0x20>
   286a0:	bl	e3e4 <free_remote_conf@plt>
   286a4:	bl	d3dc <make_remote_conf@plt>
   286a8:	ldr	r5, [pc, #300]	; 287dc <conf_set_shared_oper+0x158>
   286ac:	add	r5, pc, r5
   286b0:	str	r0, [r5]
   286b4:	ldr	r0, [r4]
   286b8:	cmp	r0, #0
   286bc:	beq	286e8 <conf_set_shared_oper+0x64>
   286c0:	ldrb	r0, [r4, #4]
   286c4:	cmp	r0, #1
   286c8:	bne	2877c <conf_set_shared_oper+0xf8>
   286cc:	ldr	r0, [r4, #8]
   286d0:	bl	27068 <rb_strdup>
   286d4:	ldr	r1, [pc, #260]	; 287e0 <conf_set_shared_oper+0x15c>
   286d8:	ldr	r1, [pc, r1]
   286dc:	str	r0, [r1, #8]
   286e0:	ldr	r4, [r4]
   286e4:	b	28700 <conf_set_shared_oper+0x7c>
   286e8:	ldr	r0, [pc, #244]	; 287e4 <conf_set_shared_oper+0x160>
   286ec:	add	r0, pc, r0
   286f0:	bl	27068 <rb_strdup>
   286f4:	ldr	r1, [pc, #236]	; 287e8 <conf_set_shared_oper+0x164>
   286f8:	ldr	r1, [pc, r1]
   286fc:	str	r0, [r1, #8]
   28700:	ldrb	r0, [r4, #4]
   28704:	cmp	r0, #1
   28708:	bne	2876c <conf_set_shared_oper+0xe8>
   2870c:	ldr	r4, [r4, #8]
   28710:	mov	r0, r4
   28714:	mov	r1, #64	; 0x40
   28718:	bl	dce8 <strchr@plt>
   2871c:	cmp	r0, #0
   28720:	beq	2878c <conf_set_shared_oper+0x108>
   28724:	mov	r1, #0
   28728:	strb	r1, [r0]
   2872c:	ldrb	r1, [r0, #1]!
   28730:	cmp	r1, #0
   28734:	bne	28740 <conf_set_shared_oper+0xbc>
   28738:	ldr	r0, [pc, #172]	; 287ec <conf_set_shared_oper+0x168>
   2873c:	add	r0, pc, r0
   28740:	bl	27068 <rb_strdup>
   28744:	ldr	r1, [pc, #164]	; 287f0 <conf_set_shared_oper+0x16c>
   28748:	ldr	r1, [pc, r1]
   2874c:	str	r0, [r1, #4]
   28750:	cmp	r4, #0
   28754:	beq	2879c <conf_set_shared_oper+0x118>
   28758:	ldrb	r0, [r4]
   2875c:	cmp	r0, #0
   28760:	beq	2879c <conf_set_shared_oper+0x118>
   28764:	mov	r0, r4
   28768:	b	287a4 <conf_set_shared_oper+0x120>
   2876c:	ldr	r0, [pc, #144]	; 28804 <conf_set_shared_oper+0x180>
   28770:	add	r0, pc, r0
   28774:	pop	{r4, r5, fp, lr}
   28778:	b	26d98 <conf_report_error>
   2877c:	ldr	r0, [pc, #124]	; 28800 <conf_set_shared_oper+0x17c>
   28780:	add	r0, pc, r0
   28784:	pop	{r4, r5, fp, lr}
   28788:	b	26d98 <conf_report_error>
   2878c:	ldr	r0, [pc, #116]	; 28808 <conf_set_shared_oper+0x184>
   28790:	add	r0, pc, r0
   28794:	pop	{r4, r5, fp, lr}
   28798:	b	26d98 <conf_report_error>
   2879c:	ldr	r0, [pc, #80]	; 287f4 <conf_set_shared_oper+0x170>
   287a0:	add	r0, pc, r0
   287a4:	bl	27068 <rb_strdup>
   287a8:	ldr	r4, [pc, #72]	; 287f8 <conf_set_shared_oper+0x174>
   287ac:	ldr	r4, [pc, r4]
   287b0:	str	r0, [r4]
   287b4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   287b8:	mov	r1, r0
   287bc:	ldr	r2, [pc, #56]	; 287fc <conf_set_shared_oper+0x178>
   287c0:	add	r2, pc, r2
   287c4:	mov	r0, r4
   287c8:	bl	269e0 <rb_dlinkAdd>
   287cc:	mov	r0, #0
   287d0:	str	r0, [r5]
   287d4:	pop	{r4, r5, fp, pc}
   287d8:	.word	0x0003db48
   287dc:	.word	0x0003db30
   287e0:	.word	0x0003db04
   287e4:	.word	0x00018fb1
   287e8:	.word	0x0003dae4
   287ec:	.word	0x00018f61
   287f0:	.word	0x0003da94
   287f4:	.word	0x00018efd
   287f8:	.word	0x0003da30
   287fc:	.word	0x0003da10
   28800:	.word	0x0001be10
   28804:	.word	0x0001be51
   28808:	.word	0x0001be60

0002880c <conf_set_shared_flags>:
   2880c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28810:	add	fp, sp, #24
   28814:	sub	sp, sp, #8
   28818:	mov	r4, r0
   2881c:	mov	r0, #0
   28820:	str	r0, [sp, #4]
   28824:	ldr	r0, [pc, #168]	; 288d4 <conf_set_shared_flags+0xc8>
   28828:	ldr	r0, [pc, r0]
   2882c:	cmp	r0, #0
   28830:	beq	28838 <conf_set_shared_flags+0x2c>
   28834:	bl	e3e4 <free_remote_conf@plt>
   28838:	add	r0, sp, #4
   2883c:	ldr	r1, [pc, #148]	; 288d8 <conf_set_shared_flags+0xcc>
   28840:	add	r1, pc, r1
   28844:	ldr	r2, [pc, #144]	; 288dc <conf_set_shared_flags+0xd0>
   28848:	add	r2, pc, r2
   2884c:	mov	r3, r4
   28850:	bl	29dac <set_modes_from_table>
   28854:	ldr	r6, [pc, #132]	; 288e0 <conf_set_shared_flags+0xd4>
   28858:	ldr	r6, [pc, r6]
   2885c:	cmp	r6, #0
   28860:	ldr	r8, [pc, #124]	; 288e4 <conf_set_shared_flags+0xd8>
   28864:	add	r8, pc, r8
   28868:	beq	288c4 <conf_set_shared_flags+0xb8>
   2886c:	ldr	r7, [sp, #4]
   28870:	ldr	r9, [pc, #112]	; 288e8 <conf_set_shared_flags+0xdc>
   28874:	add	r9, pc, r9
   28878:	ldr	r5, [pc, #108]	; 288ec <conf_set_shared_flags+0xe0>
   2887c:	ldr	r5, [pc, r5]
   28880:	ldr	r0, [r6]
   28884:	ldr	r4, [r6, #8]
   28888:	str	r0, [r8]
   2888c:	str	r7, [r0, #12]
   28890:	mov	r0, r6
   28894:	mov	r1, r9
   28898:	bl	26cd4 <rb_dlinkDelete>
   2889c:	mov	r0, r6
   288a0:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   288a4:	ldr	r0, [pc, #68]	; 288f0 <conf_set_shared_flags+0xe4>
   288a8:	ldr	r0, [pc, r0]
   288ac:	add	r1, r0, #16
   288b0:	mov	r2, r5
   288b4:	bl	2a6cc <rb_dlinkAddTail>
   288b8:	cmp	r4, #0
   288bc:	mov	r6, r4
   288c0:	bne	28880 <conf_set_shared_flags+0x74>
   288c4:	mov	r0, #0
   288c8:	str	r0, [r8]
   288cc:	sub	sp, fp, #24
   288d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   288d4:	.word	0x0003d9b4
   288d8:	.word	0x0001e608
   288dc:	.word	0x0003400c
   288e0:	.word	0x0003d978
   288e4:	.word	0x0003d978
   288e8:	.word	0x0003d95c
   288ec:	.word	0x00032038
   288f0:	.word	0x0003d934

000288f4 <conf_begin_connect>:
   288f4:	push	{fp, lr}
   288f8:	mov	fp, sp
   288fc:	ldr	r0, [pc, #88]	; 2895c <conf_begin_connect+0x68>
   28900:	ldr	r0, [pc, r0]
   28904:	cmp	r0, #0
   28908:	beq	28910 <conf_begin_connect+0x1c>
   2890c:	bl	dcf4 <free_server_conf@plt>
   28910:	bl	d9dc <make_server_conf@plt>
   28914:	ldr	r1, [pc, #68]	; 28960 <conf_begin_connect+0x6c>
   28918:	add	r1, pc, r1
   2891c:	str	r0, [r1]
   28920:	movw	r1, #6667	; 0x1a0b
   28924:	str	r1, [r0, #284]	; 0x11c
   28928:	ldr	r1, [r0, #288]	; 0x120
   2892c:	orr	r1, r1, #16
   28930:	str	r1, [r0, #288]	; 0x120
   28934:	ldr	r0, [pc, #40]	; 28964 <conf_begin_connect+0x70>
   28938:	ldr	r0, [pc, r0]
   2893c:	cmp	r0, #0
   28940:	beq	28954 <conf_begin_connect+0x60>
   28944:	bl	27068 <rb_strdup>
   28948:	ldr	r1, [pc, #24]	; 28968 <conf_begin_connect+0x74>
   2894c:	ldr	r1, [pc, r1]
   28950:	str	r0, [r1]
   28954:	mov	r0, #0
   28958:	pop	{fp, pc}
   2895c:	.word	0x0003d8e0
   28960:	.word	0x0003d8c8
   28964:	.word	0x0003d860
   28968:	.word	0x0003d894

0002896c <conf_end_connect>:
   2896c:	push	{fp, lr}
   28970:	mov	fp, sp
   28974:	ldr	r0, [pc, #372]	; 28af0 <conf_end_connect+0x184>
   28978:	ldr	r0, [pc, r0]
   2897c:	ldr	r1, [r0]
   28980:	cmp	r1, #0
   28984:	beq	28a8c <conf_end_connect+0x120>
   28988:	ldrb	r0, [r1]
   2898c:	cmp	r0, #0
   28990:	beq	28a8c <conf_end_connect+0x120>
   28994:	ldr	r0, [pc, #348]	; 28af8 <conf_end_connect+0x18c>
   28998:	ldr	r0, [pc, r0]
   2899c:	ldr	r0, [r0]
   289a0:	cmp	r0, #0
   289a4:	beq	289b4 <conf_end_connect+0x48>
   289a8:	bl	e750 <irccmp@plt>
   289ac:	cmp	r0, #0
   289b0:	beq	28ab0 <conf_end_connect+0x144>
   289b4:	ldr	r0, [pc, #328]	; 28b04 <conf_end_connect+0x198>
   289b8:	ldr	r0, [pc, r0]
   289bc:	ldr	r1, [r0, #272]	; 0x110
   289c0:	cmp	r1, #0
   289c4:	beq	289ec <conf_end_connect+0x80>
   289c8:	ldrb	r1, [r1]
   289cc:	cmp	r1, #0
   289d0:	beq	289ec <conf_end_connect+0x80>
   289d4:	ldr	r1, [r0, #276]	; 0x114
   289d8:	cmp	r1, #0
   289dc:	beq	289ec <conf_end_connect+0x80>
   289e0:	ldrb	r1, [r1]
   289e4:	cmp	r1, #0
   289e8:	bne	28a04 <conf_end_connect+0x98>
   289ec:	ldr	r1, [r0, #280]	; 0x118
   289f0:	cmp	r1, #0
   289f4:	beq	28aa0 <conf_end_connect+0x134>
   289f8:	ldrb	r1, [r1]
   289fc:	cmp	r1, #0
   28a00:	beq	28aa0 <conf_end_connect+0x134>
   28a04:	ldrb	r1, [r0, #288]	; 0x120
   28a08:	tst	r1, #64	; 0x40
   28a0c:	beq	28a28 <conf_end_connect+0xbc>
   28a10:	ldr	r1, [r0, #280]	; 0x118
   28a14:	cmp	r1, #0
   28a18:	beq	28ac8 <conf_end_connect+0x15c>
   28a1c:	ldrb	r1, [r1]
   28a20:	cmp	r1, #0
   28a24:	beq	28ac8 <conf_end_connect+0x15c>
   28a28:	ldr	r1, [r0, #4]
   28a2c:	cmp	r1, #0
   28a30:	beq	28a40 <conf_end_connect+0xd4>
   28a34:	ldrb	r1, [r1]
   28a38:	cmp	r1, #0
   28a3c:	bne	28a58 <conf_end_connect+0xec>
   28a40:	ldrh	r1, [r0, #8]
   28a44:	cmp	r1, #2
   28a48:	beq	28a58 <conf_end_connect+0xec>
   28a4c:	ldrh	r1, [r0, #140]	; 0x8c
   28a50:	cmp	r1, #10
   28a54:	bne	28ad8 <conf_end_connect+0x16c>
   28a58:	bl	ddc0 <add_server_conf@plt>
   28a5c:	ldr	r0, [pc, #176]	; 28b14 <conf_end_connect+0x1a8>
   28a60:	ldr	r0, [pc, r0]
   28a64:	add	r1, r0, #580	; 0x244
   28a68:	ldr	r2, [pc, #168]	; 28b18 <conf_end_connect+0x1ac>
   28a6c:	ldr	r2, [pc, r2]
   28a70:	bl	269e0 <rb_dlinkAdd>
   28a74:	ldr	r0, [pc, #160]	; 28b1c <conf_end_connect+0x1b0>
   28a78:	add	r0, pc, r0
   28a7c:	mov	r1, #0
   28a80:	str	r1, [r0]
   28a84:	mov	r0, #0
   28a88:	pop	{fp, pc}
   28a8c:	ldr	r0, [pc, #96]	; 28af4 <conf_end_connect+0x188>
   28a90:	add	r0, pc, r0
   28a94:	bl	d400 <conf_report_error@plt>
   28a98:	mov	r0, #0
   28a9c:	pop	{fp, pc}
   28aa0:	ldr	r1, [r0]
   28aa4:	ldr	r0, [pc, #92]	; 28b08 <conf_end_connect+0x19c>
   28aa8:	add	r0, pc, r0
   28aac:	b	28ae4 <conf_end_connect+0x178>
   28ab0:	ldr	r0, [pc, #68]	; 28afc <conf_end_connect+0x190>
   28ab4:	ldr	r0, [pc, r0]
   28ab8:	ldr	r1, [r0]
   28abc:	ldr	r0, [pc, #60]	; 28b00 <conf_end_connect+0x194>
   28ac0:	add	r0, pc, r0
   28ac4:	b	28ae4 <conf_end_connect+0x178>
   28ac8:	ldr	r1, [r0]
   28acc:	ldr	r0, [pc, #56]	; 28b0c <conf_end_connect+0x1a0>
   28ad0:	add	r0, pc, r0
   28ad4:	b	28ae4 <conf_end_connect+0x178>
   28ad8:	ldr	r1, [r0]
   28adc:	ldr	r0, [pc, #44]	; 28b10 <conf_end_connect+0x1a4>
   28ae0:	add	r0, pc, r0
   28ae4:	bl	d400 <conf_report_error@plt>
   28ae8:	mov	r0, #0
   28aec:	pop	{fp, pc}
   28af0:	.word	0x0003d868
   28af4:	.word	0x0001b672
   28af8:	.word	0x00031fb8
   28afc:	.word	0x0003d72c
   28b00:	.word	0x0001bbac
   28b04:	.word	0x0003d828
   28b08:	.word	0x0001bc03
   28b0c:	.word	0x0001bc2d
   28b10:	.word	0x0001bc6a
   28b14:	.word	0x0003d780
   28b18:	.word	0x00032074
   28b1c:	.word	0x0003d768

00028b20 <conf_set_exempt_ip>:
   28b20:	push	{r4, r5, fp, lr}
   28b24:	add	fp, sp, #8
   28b28:	sub	sp, sp, #8
   28b2c:	mov	r4, r0
   28b30:	mov	r1, #0
   28b34:	mov	r2, #0
   28b38:	bl	cfec <parse_netmask_strict@plt>
   28b3c:	orr	r0, r0, #1
   28b40:	cmp	r0, #3
   28b44:	bne	28b90 <conf_set_exempt_ip+0x70>
   28b48:	bl	cfbc <make_conf@plt>
   28b4c:	mov	r5, r0
   28b50:	ldr	r0, [pc, #76]	; 28ba4 <conf_set_exempt_ip+0x84>
   28b54:	add	r0, pc, r0
   28b58:	bl	27068 <rb_strdup>
   28b5c:	str	r0, [r5, #20]
   28b60:	mov	r0, r4
   28b64:	bl	27068 <rb_strdup>
   28b68:	str	r0, [r5, #16]
   28b6c:	mov	r1, #1048576	; 0x100000
   28b70:	str	r1, [r5]
   28b74:	str	r5, [sp]
   28b78:	mov	r1, #1048576	; 0x100000
   28b7c:	mov	r2, #0
   28b80:	mov	r3, #0
   28b84:	bl	dacc <add_conf_by_address@plt>
   28b88:	sub	sp, fp, #8
   28b8c:	pop	{r4, r5, fp, pc}
   28b90:	ldr	r0, [pc, #16]	; 28ba8 <conf_set_exempt_ip+0x88>
   28b94:	add	r0, pc, r0
   28b98:	sub	sp, fp, #8
   28b9c:	pop	{r4, r5, fp, lr}
   28ba0:	b	26d98 <conf_report_error>
   28ba4:	.word	0x00018b49
   28ba8:	.word	0x0001bcd0

00028bac <conf_cleanup_cluster>:
   28bac:	push	{r4, r5, r6, sl, fp, lr}
   28bb0:	add	fp, sp, #16
   28bb4:	ldr	r4, [pc, #104]	; 28c24 <conf_cleanup_cluster+0x78>
   28bb8:	ldr	r4, [pc, r4]
   28bbc:	cmp	r4, #0
   28bc0:	beq	28bf8 <conf_cleanup_cluster+0x4c>
   28bc4:	ldr	r5, [pc, #92]	; 28c28 <conf_cleanup_cluster+0x7c>
   28bc8:	add	r5, pc, r5
   28bcc:	ldr	r0, [r4]
   28bd0:	ldr	r6, [r4, #8]
   28bd4:	bl	e3e4 <free_remote_conf@plt>
   28bd8:	mov	r0, r4
   28bdc:	mov	r1, r5
   28be0:	bl	26cd4 <rb_dlinkDelete>
   28be4:	mov	r0, r4
   28be8:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   28bec:	cmp	r6, #0
   28bf0:	mov	r4, r6
   28bf4:	bne	28bcc <conf_cleanup_cluster+0x20>
   28bf8:	ldr	r0, [pc, #44]	; 28c2c <conf_cleanup_cluster+0x80>
   28bfc:	ldr	r0, [pc, r0]
   28c00:	cmp	r0, #0
   28c04:	beq	28c1c <conf_cleanup_cluster+0x70>
   28c08:	bl	e3e4 <free_remote_conf@plt>
   28c0c:	ldr	r0, [pc, #28]	; 28c30 <conf_cleanup_cluster+0x84>
   28c10:	add	r0, pc, r0
   28c14:	mov	r1, #0
   28c18:	str	r1, [r0]
   28c1c:	mov	r0, #0
   28c20:	pop	{r4, r5, r6, sl, fp, pc}
   28c24:	.word	0x0003d62c
   28c28:	.word	0x0003d61c
   28c2c:	.word	0x0003d5e0
   28c30:	.word	0x0003d5cc

00028c34 <conf_set_cluster_name>:
   28c34:	push	{r4, r5, fp, lr}
   28c38:	add	fp, sp, #8
   28c3c:	mov	r4, r0
   28c40:	ldr	r0, [pc, #84]	; 28c9c <conf_set_cluster_name+0x68>
   28c44:	ldr	r0, [pc, r0]
   28c48:	cmp	r0, #0
   28c4c:	beq	28c54 <conf_set_cluster_name+0x20>
   28c50:	bl	e3e4 <free_remote_conf@plt>
   28c54:	bl	d3dc <make_remote_conf@plt>
   28c58:	ldr	r5, [pc, #64]	; 28ca0 <conf_set_cluster_name+0x6c>
   28c5c:	add	r5, pc, r5
   28c60:	str	r0, [r5]
   28c64:	mov	r0, r4
   28c68:	bl	27068 <rb_strdup>
   28c6c:	ldr	r4, [pc, #48]	; 28ca4 <conf_set_cluster_name+0x70>
   28c70:	ldr	r4, [pc, r4]
   28c74:	str	r0, [r4, #8]
   28c78:	bl	dc58 <rb_make_rb_dlink_node@plt>
   28c7c:	mov	r1, r0
   28c80:	ldr	r2, [pc, #32]	; 28ca8 <conf_set_cluster_name+0x74>
   28c84:	add	r2, pc, r2
   28c88:	mov	r0, r4
   28c8c:	bl	269e0 <rb_dlinkAdd>
   28c90:	mov	r0, #0
   28c94:	str	r0, [r5]
   28c98:	pop	{r4, r5, fp, pc}
   28c9c:	.word	0x0003d598
   28ca0:	.word	0x0003d580
   28ca4:	.word	0x0003d56c
   28ca8:	.word	0x0003d560

00028cac <conf_set_cluster_flags>:
   28cac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28cb0:	add	fp, sp, #24
   28cb4:	sub	sp, sp, #8
   28cb8:	mov	r4, r0
   28cbc:	mov	r0, #0
   28cc0:	str	r0, [sp, #4]
   28cc4:	ldr	r0, [pc, #160]	; 28d6c <conf_set_cluster_flags+0xc0>
   28cc8:	ldr	r0, [pc, r0]
   28ccc:	cmp	r0, #0
   28cd0:	beq	28cd8 <conf_set_cluster_flags+0x2c>
   28cd4:	bl	e3e4 <free_remote_conf@plt>
   28cd8:	add	r0, sp, #4
   28cdc:	ldr	r1, [pc, #140]	; 28d70 <conf_set_cluster_flags+0xc4>
   28ce0:	add	r1, pc, r1
   28ce4:	ldr	r2, [pc, #136]	; 28d74 <conf_set_cluster_flags+0xc8>
   28ce8:	add	r2, pc, r2
   28cec:	mov	r3, r4
   28cf0:	bl	29dac <set_modes_from_table>
   28cf4:	ldr	r4, [pc, #124]	; 28d78 <conf_set_cluster_flags+0xcc>
   28cf8:	ldr	r4, [pc, r4]
   28cfc:	cmp	r4, #0
   28d00:	ldr	r8, [pc, #116]	; 28d7c <conf_set_cluster_flags+0xd0>
   28d04:	add	r8, pc, r8
   28d08:	beq	28d5c <conf_set_cluster_flags+0xb0>
   28d0c:	ldr	r7, [sp, #4]
   28d10:	ldr	r9, [pc, #104]	; 28d80 <conf_set_cluster_flags+0xd4>
   28d14:	ldr	r9, [pc, r9]
   28d18:	ldr	r6, [pc, #100]	; 28d84 <conf_set_cluster_flags+0xd8>
   28d1c:	add	r6, pc, r6
   28d20:	ldr	r0, [r4]
   28d24:	ldr	r5, [r4, #8]
   28d28:	str	r0, [r8]
   28d2c:	str	r7, [r0, #12]
   28d30:	add	r1, r0, #16
   28d34:	mov	r2, r9
   28d38:	bl	2a6cc <rb_dlinkAddTail>
   28d3c:	mov	r0, r4
   28d40:	mov	r1, r6
   28d44:	bl	26cd4 <rb_dlinkDelete>
   28d48:	mov	r0, r4
   28d4c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   28d50:	cmp	r5, #0
   28d54:	mov	r4, r5
   28d58:	bne	28d20 <conf_set_cluster_flags+0x74>
   28d5c:	mov	r0, #0
   28d60:	str	r0, [r8]
   28d64:	sub	sp, fp, #24
   28d68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28d6c:	.word	0x0003d514
   28d70:	.word	0x0001e168
   28d74:	.word	0x00033c54
   28d78:	.word	0x0003d4ec
   28d7c:	.word	0x0003d4d8
   28d80:	.word	0x00031cc0
   28d84:	.word	0x0003d4c8

00028d88 <conf_set_service_name>:
   28d88:	push	{r4, sl, fp, lr}
   28d8c:	add	fp, sp, #8
   28d90:	ldrb	r4, [r0]
   28d94:	cmp	r4, #0
   28d98:	beq	28e04 <conf_set_service_name+0x7c>
   28d9c:	mov	r1, #0
   28da0:	mov	r2, #1
   28da4:	ldr	ip, [pc, #120]	; 28e24 <conf_set_service_name+0x9c>
   28da8:	ldr	ip, [pc, ip]
   28dac:	uxtb	r4, r4
   28db0:	add	r3, ip, r4, lsl #2
   28db4:	ldrh	r3, [r3]
   28db8:	tst	r3, #8256	; 0x2040
   28dbc:	beq	28e14 <conf_set_service_name+0x8c>
   28dc0:	cmp	r4, #46	; 0x2e
   28dc4:	addeq	r1, r1, #1
   28dc8:	ldrb	r4, [r0, r2]
   28dcc:	add	r2, r2, #1
   28dd0:	cmp	r4, #0
   28dd4:	bne	28dac <conf_set_service_name+0x24>
   28dd8:	cmp	r1, #0
   28ddc:	beq	28e04 <conf_set_service_name+0x7c>
   28de0:	bl	27068 <rb_strdup>
   28de4:	mov	r4, r0
   28de8:	bl	dc58 <rb_make_rb_dlink_node@plt>
   28dec:	mov	r1, r0
   28df0:	ldr	r2, [pc, #48]	; 28e28 <conf_set_service_name+0xa0>
   28df4:	ldr	r2, [pc, r2]
   28df8:	mov	r0, r4
   28dfc:	pop	{r4, sl, fp, lr}
   28e00:	b	269e0 <rb_dlinkAdd>
   28e04:	ldr	r0, [pc, #36]	; 28e30 <conf_set_service_name+0xa8>
   28e08:	add	r0, pc, r0
   28e0c:	pop	{r4, sl, fp, lr}
   28e10:	b	26d98 <conf_report_error>
   28e14:	ldr	r0, [pc, #16]	; 28e2c <conf_set_service_name+0xa4>
   28e18:	add	r0, pc, r0
   28e1c:	pop	{r4, sl, fp, lr}
   28e20:	b	26d98 <conf_report_error>
   28e24:	.word	0x00031c50
   28e28:	.word	0x00031af4
   28e2c:	.word	0x0001c3d5
   28e30:	.word	0x0001c411

00028e34 <conf_begin_alias>:
   28e34:	push	{fp, lr}
   28e38:	mov	fp, sp
   28e3c:	mov	r0, #12
   28e40:	bl	269c0 <rb_malloc>
   28e44:	ldr	r1, [pc, #60]	; 28e88 <conf_begin_alias+0x54>
   28e48:	add	r1, pc, r1
   28e4c:	str	r0, [r1]
   28e50:	ldr	r0, [pc, #52]	; 28e8c <conf_begin_alias+0x58>
   28e54:	ldr	r0, [pc, r0]
   28e58:	cmp	r0, #0
   28e5c:	beq	28e70 <conf_begin_alias+0x3c>
   28e60:	bl	27068 <rb_strdup>
   28e64:	ldr	r1, [pc, #36]	; 28e90 <conf_begin_alias+0x5c>
   28e68:	ldr	r1, [pc, r1]
   28e6c:	str	r0, [r1]
   28e70:	ldr	r0, [pc, #28]	; 28e94 <conf_begin_alias+0x60>
   28e74:	ldr	r0, [pc, r0]
   28e78:	mov	r1, #0
   28e7c:	str	r1, [r0, #8]
   28e80:	mov	r0, #0
   28e84:	pop	{fp, pc}
   28e88:	.word	0x0003d3a8
   28e8c:	.word	0x0003d344
   28e90:	.word	0x0003d388
   28e94:	.word	0x0003d37c

00028e98 <conf_end_alias>:
   28e98:	push	{r4, sl, fp, lr}
   28e9c:	add	fp, sp, #8
   28ea0:	mvn	r4, #0
   28ea4:	ldr	r2, [pc, #104]	; 28f14 <conf_end_alias+0x7c>
   28ea8:	ldr	r2, [pc, r2]
   28eac:	cmp	r2, #0
   28eb0:	beq	28ee0 <conf_end_alias+0x48>
   28eb4:	ldr	r1, [r2]
   28eb8:	cmp	r1, #0
   28ebc:	beq	28ee8 <conf_end_alias+0x50>
   28ec0:	ldr	r0, [r2, #4]
   28ec4:	cmp	r0, #0
   28ec8:	beq	28ef4 <conf_end_alias+0x5c>
   28ecc:	ldr	r0, [pc, #80]	; 28f24 <conf_end_alias+0x8c>
   28ed0:	ldr	r0, [pc, r0]
   28ed4:	ldr	r0, [r0]
   28ed8:	bl	d700 <rb_dictionary_add@plt>
   28edc:	mov	r4, #0
   28ee0:	mov	r0, r4
   28ee4:	pop	{r4, sl, fp, pc}
   28ee8:	ldr	r0, [pc, #40]	; 28f18 <conf_end_alias+0x80>
   28eec:	add	r0, pc, r0
   28ef0:	b	28efc <conf_end_alias+0x64>
   28ef4:	ldr	r0, [pc, #36]	; 28f20 <conf_end_alias+0x88>
   28ef8:	add	r0, pc, r0
   28efc:	bl	d400 <conf_report_error@plt>
   28f00:	ldr	r0, [pc, #20]	; 28f1c <conf_end_alias+0x84>
   28f04:	ldr	r0, [pc, r0]
   28f08:	bl	26d8c <rb_free>
   28f0c:	mov	r0, r4
   28f10:	pop	{r4, sl, fp, pc}
   28f14:	.word	0x0003d348
   28f18:	.word	0x0001c358
   28f1c:	.word	0x0003d2ec
   28f20:	.word	0x0001c370
   28f24:	.word	0x00031abc

00028f28 <conf_set_alias_name>:
   28f28:	push	{fp, lr}
   28f2c:	mov	fp, sp
   28f30:	cmp	r0, #0
   28f34:	beq	28f58 <conf_set_alias_name+0x30>
   28f38:	ldr	r1, [pc, #28]	; 28f5c <conf_set_alias_name+0x34>
   28f3c:	ldr	r1, [pc, r1]
   28f40:	cmp	r1, #0
   28f44:	popeq	{fp, pc}
   28f48:	bl	27068 <rb_strdup>
   28f4c:	ldr	r1, [pc, #12]	; 28f60 <conf_set_alias_name+0x38>
   28f50:	ldr	r1, [pc, r1]
   28f54:	str	r0, [r1]
   28f58:	pop	{fp, pc}
   28f5c:	.word	0x0003d2b4
   28f60:	.word	0x0003d2a0

00028f64 <conf_set_alias_target>:
   28f64:	push	{fp, lr}
   28f68:	mov	fp, sp
   28f6c:	cmp	r0, #0
   28f70:	beq	28f94 <conf_set_alias_target+0x30>
   28f74:	ldr	r1, [pc, #28]	; 28f98 <conf_set_alias_target+0x34>
   28f78:	ldr	r1, [pc, r1]
   28f7c:	cmp	r1, #0
   28f80:	popeq	{fp, pc}
   28f84:	bl	27068 <rb_strdup>
   28f88:	ldr	r1, [pc, #12]	; 28f9c <conf_set_alias_target+0x38>
   28f8c:	ldr	r1, [pc, r1]
   28f90:	str	r0, [r1, #4]
   28f94:	pop	{fp, pc}
   28f98:	.word	0x0003d278
   28f9c:	.word	0x0003d264

00028fa0 <conf_set_dnsbl_entry_host>:
   28fa0:	push	{fp, lr}
   28fa4:	mov	fp, sp
   28fa8:	mov	r1, r0
   28fac:	ldr	r2, [pc, #76]	; 29000 <conf_set_dnsbl_entry_host+0x60>
   28fb0:	ldr	r2, [pc, r2]
   28fb4:	cmp	r2, #0
   28fb8:	beq	28fd4 <conf_set_dnsbl_entry_host+0x34>
   28fbc:	ldr	r0, [pc, #72]	; 2900c <conf_set_dnsbl_entry_host+0x6c>
   28fc0:	add	r0, pc, r0
   28fc4:	bl	d400 <conf_report_error@plt>
   28fc8:	mov	r0, #0
   28fcc:	pop	{fp, lr}
   28fd0:	b	2924c <conf_set_dnsbl_entry_reason>
   28fd4:	ldr	r0, [pc, #40]	; 29004 <conf_set_dnsbl_entry_host+0x64>
   28fd8:	add	r0, pc, r0
   28fdc:	ldrb	r2, [r0]
   28fe0:	orr	r2, r2, #1
   28fe4:	strb	r2, [r0]
   28fe8:	mov	r0, r1
   28fec:	bl	27068 <rb_strdup>
   28ff0:	ldr	r1, [pc, #16]	; 29008 <conf_set_dnsbl_entry_host+0x68>
   28ff4:	add	r1, pc, r1
   28ff8:	str	r0, [r1]
   28ffc:	pop	{fp, pc}
   29000:	.word	0x0003d244
   29004:	.word	0x0003d220
   29008:	.word	0x0003d200
   2900c:	.word	0x0001c2ce

00029010 <conf_set_dnsbl_entry_type>:
   29010:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29014:	add	fp, sp, #24
   29018:	mov	r4, r0
   2901c:	ldr	r7, [pc, #172]	; 290d0 <conf_set_dnsbl_entry_type+0xc0>
   29020:	add	r7, pc, r7
   29024:	mov	r0, #0
   29028:	strb	r0, [r7]
   2902c:	cmp	r4, #0
   29030:	beq	290b8 <conf_set_dnsbl_entry_type+0xa8>
   29034:	ldr	r5, [pc, #152]	; 290d4 <conf_set_dnsbl_entry_type+0xc4>
   29038:	add	r5, pc, r5
   2903c:	ldr	r6, [pc, #148]	; 290d8 <conf_set_dnsbl_entry_type+0xc8>
   29040:	add	r6, pc, r6
   29044:	ldr	r8, [pc, #144]	; 290dc <conf_set_dnsbl_entry_type+0xcc>
   29048:	add	r8, pc, r8
   2904c:	b	29068 <conf_set_dnsbl_entry_type+0x58>
   29050:	ldrb	r0, [r7]
   29054:	orr	r0, r0, #1
   29058:	strb	r0, [r7]
   2905c:	ldr	r4, [r4]
   29060:	cmp	r4, #0
   29064:	beq	290ac <conf_set_dnsbl_entry_type+0x9c>
   29068:	ldr	r0, [r4, #8]
   2906c:	mov	r1, r5
   29070:	bl	d340 <rb_strcasecmp@plt>
   29074:	cmp	r0, #0
   29078:	beq	29050 <conf_set_dnsbl_entry_type+0x40>
   2907c:	ldr	r0, [r4, #8]
   29080:	mov	r1, r6
   29084:	bl	d340 <rb_strcasecmp@plt>
   29088:	cmp	r0, #0
   2908c:	beq	290a0 <conf_set_dnsbl_entry_type+0x90>
   29090:	ldr	r1, [r4, #8]
   29094:	mov	r0, r8
   29098:	bl	d400 <conf_report_error@plt>
   2909c:	b	2905c <conf_set_dnsbl_entry_type+0x4c>
   290a0:	ldrb	r0, [r7]
   290a4:	orr	r0, r0, #2
   290a8:	b	29058 <conf_set_dnsbl_entry_type+0x48>
   290ac:	ldrb	r0, [r7]
   290b0:	cmp	r0, #0
   290b4:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   290b8:	ldr	r0, [pc, #32]	; 290e0 <conf_set_dnsbl_entry_type+0xd0>
   290bc:	add	r0, pc, r0
   290c0:	bl	e6c0 <conf_report_warning@plt>
   290c4:	mov	r0, #1
   290c8:	strb	r0, [r7]
   290cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   290d0:	.word	0x0003d1d8
   290d4:	.word	0x0001c5c8
   290d8:	.word	0x0001c5af
   290dc:	.word	0x0001c26f
   290e0:	.word	0x0001c225

000290e4 <conf_set_dnsbl_entry_matches>:
   290e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   290e8:	add	fp, sp, #28
   290ec:	sub	sp, sp, #132	; 0x84
   290f0:	cmp	r0, #0
   290f4:	beq	2922c <conf_set_dnsbl_entry_matches+0x148>
   290f8:	mov	r4, r0
   290fc:	ldr	r5, [pc, #304]	; 29234 <conf_set_dnsbl_entry_matches+0x150>
   29100:	add	r5, pc, r5
   29104:	ldr	r8, [pc, #300]	; 29238 <conf_set_dnsbl_entry_matches+0x154>
   29108:	add	r8, pc, r8
   2910c:	b	29124 <conf_set_dnsbl_entry_matches+0x40>
   29110:	mov	r0, r8
   29114:	bl	d400 <conf_report_error@plt>
   29118:	ldr	r4, [r4]
   2911c:	cmp	r4, #0
   29120:	beq	2922c <conf_set_dnsbl_entry_matches+0x148>
   29124:	ldrb	r0, [r4, #4]
   29128:	cmp	r0, #1
   2912c:	bne	29110 <conf_set_dnsbl_entry_matches+0x2c>
   29130:	ldr	r9, [r4, #8]
   29134:	cmp	r9, #0
   29138:	beq	29158 <conf_set_dnsbl_entry_matches+0x74>
   2913c:	mov	r0, r9
   29140:	bl	dc94 <strlen@plt>
   29144:	cmp	r0, #53	; 0x35
   29148:	bls	29160 <conf_set_dnsbl_entry_matches+0x7c>
   2914c:	ldr	r0, [pc, #232]	; 2923c <conf_set_dnsbl_entry_matches+0x158>
   29150:	add	r0, pc, r0
   29154:	b	291f8 <conf_set_dnsbl_entry_matches+0x114>
   29158:	mov	r0, r5
   2915c:	b	29114 <conf_set_dnsbl_entry_matches+0x30>
   29160:	mov	sl, #2
   29164:	mov	r7, r9
   29168:	b	29174 <conf_set_dnsbl_entry_matches+0x90>
   2916c:	add	r7, r7, #1
   29170:	mov	sl, r0
   29174:	ldrb	r6, [r7]
   29178:	mov	r0, #1
   2917c:	cmp	r6, #46	; 0x2e
   29180:	beq	2916c <conf_set_dnsbl_entry_matches+0x88>
   29184:	cmp	r6, #0
   29188:	beq	291ac <conf_set_dnsbl_entry_matches+0xc8>
   2918c:	bl	dc10 <__ctype_b_loc@plt>
   29190:	ldr	r0, [r0]
   29194:	add	r0, r0, r6, lsl #1
   29198:	ldrb	r0, [r0, #1]
   2919c:	tst	r0, #8
   291a0:	mov	r0, sl
   291a4:	bne	2916c <conf_set_dnsbl_entry_matches+0x88>
   291a8:	b	291d4 <conf_set_dnsbl_entry_matches+0xf0>
   291ac:	cmp	sl, #2
   291b0:	beq	291e0 <conf_set_dnsbl_entry_matches+0xfc>
   291b4:	cmp	sl, #1
   291b8:	bne	29118 <conf_set_dnsbl_entry_matches+0x34>
   291bc:	mov	r0, #2
   291c0:	mov	r1, r9
   291c4:	add	r2, sp, #4
   291c8:	bl	d814 <rb_inet_pton@plt>
   291cc:	cmp	r0, #0
   291d0:	bgt	29204 <conf_set_dnsbl_entry_matches+0x120>
   291d4:	ldr	r0, [pc, #100]	; 29240 <conf_set_dnsbl_entry_matches+0x15c>
   291d8:	add	r0, pc, r0
   291dc:	b	291f8 <conf_set_dnsbl_entry_matches+0x114>
   291e0:	mov	r0, r9
   291e4:	bl	dc94 <strlen@plt>
   291e8:	cmp	r0, #4
   291ec:	bcc	29204 <conf_set_dnsbl_entry_matches+0x120>
   291f0:	ldr	r0, [pc, #80]	; 29248 <conf_set_dnsbl_entry_matches+0x164>
   291f4:	add	r0, pc, r0
   291f8:	mov	r1, r9
   291fc:	bl	d400 <conf_report_error@plt>
   29200:	b	29118 <conf_set_dnsbl_entry_matches+0x34>
   29204:	mov	r0, r9
   29208:	bl	27068 <rb_strdup>
   2920c:	mov	r7, r0
   29210:	bl	dc58 <rb_make_rb_dlink_node@plt>
   29214:	mov	r1, r0
   29218:	mov	r0, r7
   2921c:	ldr	r2, [pc, #32]	; 29244 <conf_set_dnsbl_entry_matches+0x160>
   29220:	add	r2, pc, r2
   29224:	bl	269e0 <rb_dlinkAdd>
   29228:	b	29118 <conf_set_dnsbl_entry_matches+0x34>
   2922c:	sub	sp, fp, #28
   29230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29234:	.word	0x0001c244
   29238:	.word	0x0001c214
   2923c:	.word	0x0001c214
   29240:	.word	0x0001c1b5
   29244:	.word	0x0003cfdc
   29248:	.word	0x0001c1c6

0002924c <conf_set_dnsbl_entry_reason>:
   2924c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29250:	add	fp, sp, #24
   29254:	cmp	r0, #0
   29258:	ldr	r9, [pc, #320]	; 293a0 <conf_set_dnsbl_entry_reason+0x154>
   2925c:	add	r9, pc, r9
   29260:	ldr	r8, [pc, #316]	; 293a4 <conf_set_dnsbl_entry_reason+0x158>
   29264:	add	r8, pc, r8
   29268:	beq	29314 <conf_set_dnsbl_entry_reason+0xc8>
   2926c:	ldr	r1, [pc, #308]	; 293a8 <conf_set_dnsbl_entry_reason+0x15c>
   29270:	ldr	r1, [pc, r1]
   29274:	cmp	r1, #0
   29278:	beq	29314 <conf_set_dnsbl_entry_reason+0xc8>
   2927c:	bl	27068 <rb_strdup>
   29280:	mov	r4, r0
   29284:	str	r0, [r9]
   29288:	ldrb	r5, [r8]
   2928c:	tst	r5, #2
   29290:	beq	292bc <conf_set_dnsbl_entry_reason+0x70>
   29294:	ldr	r6, [pc, #272]	; 293ac <conf_set_dnsbl_entry_reason+0x160>
   29298:	ldr	r6, [pc, r6]
   2929c:	mov	r0, r6
   292a0:	bl	dc94 <strlen@plt>
   292a4:	add	r0, r0, #64	; 0x40
   292a8:	cmp	r0, #256	; 0x100
   292ac:	bcc	292bc <conf_set_dnsbl_entry_reason+0x70>
   292b0:	ldr	r0, [pc, #248]	; 293b0 <conf_set_dnsbl_entry_reason+0x164>
   292b4:	add	r0, pc, r0
   292b8:	b	292ec <conf_set_dnsbl_entry_reason+0xa0>
   292bc:	and	r0, r5, #3
   292c0:	cmp	r0, #1
   292c4:	bne	292f8 <conf_set_dnsbl_entry_reason+0xac>
   292c8:	ldr	r6, [pc, #228]	; 293b4 <conf_set_dnsbl_entry_reason+0x168>
   292cc:	ldr	r6, [pc, r6]
   292d0:	mov	r0, r6
   292d4:	bl	dc94 <strlen@plt>
   292d8:	add	r0, r0, #16
   292dc:	cmp	r0, #256	; 0x100
   292e0:	bcc	292f8 <conf_set_dnsbl_entry_reason+0xac>
   292e4:	ldr	r0, [pc, #204]	; 293b8 <conf_set_dnsbl_entry_reason+0x16c>
   292e8:	add	r0, pc, r0
   292ec:	mov	r1, r6
   292f0:	bl	d400 <conf_report_error@plt>
   292f4:	b	29314 <conf_set_dnsbl_entry_reason+0xc8>
   292f8:	ldr	r0, [pc, #188]	; 293bc <conf_set_dnsbl_entry_reason+0x170>
   292fc:	ldr	r0, [pc, r0]
   29300:	ldr	r3, [pc, #184]	; 293c0 <conf_set_dnsbl_entry_reason+0x174>
   29304:	add	r3, pc, r3
   29308:	mov	r1, r4
   2930c:	mov	r2, r5
   29310:	bl	d904 <add_dnsbl_entry@plt>
   29314:	ldr	r4, [pc, #168]	; 293c4 <conf_set_dnsbl_entry_reason+0x178>
   29318:	ldr	r4, [pc, r4]
   2931c:	cmp	r4, #0
   29320:	ldr	r6, [pc, #160]	; 293c8 <conf_set_dnsbl_entry_reason+0x17c>
   29324:	add	r6, pc, r6
   29328:	beq	29360 <conf_set_dnsbl_entry_reason+0x114>
   2932c:	ldr	r5, [pc, #152]	; 293cc <conf_set_dnsbl_entry_reason+0x180>
   29330:	add	r5, pc, r5
   29334:	ldr	r0, [r4]
   29338:	ldr	r7, [r4, #8]
   2933c:	bl	26d8c <rb_free>
   29340:	mov	r0, r4
   29344:	mov	r1, r5
   29348:	bl	26cd4 <rb_dlinkDelete>
   2934c:	mov	r0, r4
   29350:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   29354:	cmp	r7, #0
   29358:	mov	r4, r7
   2935c:	bne	29334 <conf_set_dnsbl_entry_reason+0xe8>
   29360:	mov	r4, #0
   29364:	str	r4, [r6]
   29368:	str	r4, [r6, #4]
   2936c:	str	r4, [r6, #8]
   29370:	ldr	r0, [pc, #88]	; 293d0 <conf_set_dnsbl_entry_reason+0x184>
   29374:	ldr	r0, [pc, r0]
   29378:	bl	26d8c <rb_free>
   2937c:	ldr	r0, [pc, #80]	; 293d4 <conf_set_dnsbl_entry_reason+0x188>
   29380:	ldr	r0, [pc, r0]
   29384:	bl	26d8c <rb_free>
   29388:	str	r4, [r9]
   2938c:	ldr	r0, [pc, #68]	; 293d8 <conf_set_dnsbl_entry_reason+0x18c>
   29390:	add	r0, pc, r0
   29394:	str	r4, [r0]
   29398:	strb	r4, [r8]
   2939c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   293a0:	.word	0x0003cfac
   293a4:	.word	0x0003cf94
   293a8:	.word	0x0003cf84
   293ac:	.word	0x0003cf5c
   293b0:	.word	0x0001c136
   293b4:	.word	0x0003cf28
   293b8:	.word	0x0001c13b
   293bc:	.word	0x0003cef8
   293c0:	.word	0x0003cef8
   293c4:	.word	0x0003cee4
   293c8:	.word	0x0003ced8
   293cc:	.word	0x0003cecc
   293d0:	.word	0x0003ce80
   293d4:	.word	0x0003ce88
   293d8:	.word	0x0003ce64

000293dc <conf_warn_blacklist_deprecation>:
   293dc:	push	{fp, lr}
   293e0:	mov	fp, sp
   293e4:	ldr	r0, [pc, #12]	; 293f8 <conf_warn_blacklist_deprecation+0x1c>
   293e8:	add	r0, pc, r0
   293ec:	bl	d400 <conf_report_error@plt>
   293f0:	mov	r0, #0
   293f4:	pop	{fp, pc}
   293f8:	.word	0x0001c074

000293fc <conf_begin_opm>:
   293fc:	push	{fp, lr}
   29400:	mov	fp, sp
   29404:	ldr	r0, [pc, #72]	; 29454 <conf_begin_opm+0x58>
   29408:	add	r0, pc, r0
   2940c:	mov	r1, #0
   29410:	str	r1, [r0]
   29414:	ldr	r0, [pc, #60]	; 29458 <conf_begin_opm+0x5c>
   29418:	add	r0, pc, r0
   2941c:	str	r1, [r0]
   29420:	ldr	r0, [pc, #52]	; 2945c <conf_begin_opm+0x60>
   29424:	add	r0, pc, r0
   29428:	str	r1, [r0]
   2942c:	ldr	r0, [pc, #44]	; 29460 <conf_begin_opm+0x64>
   29430:	add	r0, pc, r0
   29434:	strh	r1, [r0]
   29438:	ldr	r0, [pc, #36]	; 29464 <conf_begin_opm+0x68>
   2943c:	add	r0, pc, r0
   29440:	strh	r1, [r0]
   29444:	bl	d52c <delete_opm_proxy_scanner_all@plt>
   29448:	bl	d6f4 <delete_opm_listener_all@plt>
   2944c:	mov	r0, #0
   29450:	pop	{fp, pc}
   29454:	.word	0x0003ce08
   29458:	.word	0x0003cdf4
   2945c:	.word	0x0003cdf0
   29460:	.word	0x0003cde8
   29464:	.word	0x0003cdde

00029468 <conf_end_opm>:
   29468:	push	{r4, r5, r6, r7, fp, lr}
   2946c:	add	fp, sp, #16
   29470:	sub	sp, sp, #56	; 0x38
   29474:	ldr	r0, [pc, #484]	; 29660 <conf_end_opm+0x1f8>
   29478:	add	r0, pc, r0
   2947c:	ldr	r0, [r0, #8]
   29480:	cmp	r0, #0
   29484:	beq	29578 <conf_end_opm+0x110>
   29488:	ldr	r4, [pc, #472]	; 29668 <conf_end_opm+0x200>
   2948c:	add	r4, pc, r4
   29490:	ldrh	r1, [r4]
   29494:	cmp	r1, #0
   29498:	beq	294d8 <conf_end_opm+0x70>
   2949c:	ldr	r0, [pc, #456]	; 2966c <conf_end_opm+0x204>
   294a0:	ldr	r0, [pc, r0]
   294a4:	cmp	r0, #0
   294a8:	bne	294d4 <conf_end_opm+0x6c>
   294ac:	ldr	r0, [pc, #444]	; 29670 <conf_end_opm+0x208>
   294b0:	ldr	r0, [pc, r0]
   294b4:	add	r0, r0, #20
   294b8:	add	r1, sp, #3
   294bc:	mov	r2, #53	; 0x35
   294c0:	bl	cf50 <rb_inet_ntop_sock@plt>
   294c4:	cmp	r0, #0
   294c8:	beq	29640 <conf_end_opm+0x1d8>
   294cc:	ldrh	r1, [r4]
   294d0:	add	r0, sp, #3
   294d4:	bl	dd6c <conf_create_opm_listener@plt>
   294d8:	ldr	r5, [pc, #408]	; 29678 <conf_end_opm+0x210>
   294dc:	add	r5, pc, r5
   294e0:	ldrh	r1, [r5]
   294e4:	cmp	r1, #0
   294e8:	beq	29528 <conf_end_opm+0xc0>
   294ec:	ldr	r0, [pc, #392]	; 2967c <conf_end_opm+0x214>
   294f0:	ldr	r0, [pc, r0]
   294f4:	cmp	r0, #0
   294f8:	bne	29524 <conf_end_opm+0xbc>
   294fc:	ldr	r0, [pc, #380]	; 29680 <conf_end_opm+0x218>
   29500:	ldr	r0, [pc, r0]
   29504:	add	r0, r0, #148	; 0x94
   29508:	add	r1, sp, #3
   2950c:	mov	r2, #53	; 0x35
   29510:	bl	cf50 <rb_inet_ntop_sock@plt>
   29514:	cmp	r0, #0
   29518:	beq	29650 <conf_end_opm+0x1e8>
   2951c:	ldrh	r1, [r5]
   29520:	add	r0, sp, #3
   29524:	bl	dd6c <conf_create_opm_listener@plt>
   29528:	ldrh	r2, [r5]
   2952c:	clz	r0, r2
   29530:	lsr	r0, r0, #5
   29534:	ldrh	r3, [r4]
   29538:	clz	r1, r3
   2953c:	lsr	r1, r1, #5
   29540:	orr	r6, r1, r0
   29544:	ldr	r1, [pc, #316]	; 29688 <conf_end_opm+0x220>
   29548:	ldr	r1, [pc, r1]
   2954c:	sub	r0, r1, #1
   29550:	cmp	r0, #58	; 0x3a
   29554:	bhi	29564 <conf_end_opm+0xfc>
   29558:	cmp	r3, #0
   2955c:	cmpne	r2, #0
   29560:	bne	295a8 <conf_end_opm+0x140>
   29564:	cmp	r6, #0
   29568:	beq	2958c <conf_end_opm+0x124>
   2956c:	ldr	r0, [pc, #284]	; 29690 <conf_end_opm+0x228>
   29570:	add	r0, pc, r0
   29574:	b	29580 <conf_end_opm+0x118>
   29578:	ldr	r0, [pc, #228]	; 29664 <conf_end_opm+0x1fc>
   2957c:	add	r0, pc, r0
   29580:	bl	d400 <conf_report_error@plt>
   29584:	mov	r6, #1
   29588:	b	295b4 <conf_end_opm+0x14c>
   2958c:	mov	r6, #0
   29590:	cmp	r0, #59	; 0x3b
   29594:	bcc	295b4 <conf_end_opm+0x14c>
   29598:	ldr	r0, [pc, #244]	; 29694 <conf_end_opm+0x22c>
   2959c:	add	r0, pc, r0
   295a0:	bl	d400 <conf_report_error@plt>
   295a4:	b	295b4 <conf_end_opm+0x14c>
   295a8:	ldr	r0, [pc, #220]	; 2968c <conf_end_opm+0x224>
   295ac:	add	r0, pc, r0
   295b0:	bl	e3f0 <set_authd_timeout@plt>
   295b4:	ldr	r7, [pc, #220]	; 29698 <conf_end_opm+0x230>
   295b8:	ldr	r7, [pc, r7]
   295bc:	cmp	r7, #0
   295c0:	beq	2960c <conf_end_opm+0x1a4>
   295c4:	ldr	r4, [pc, #208]	; 2969c <conf_end_opm+0x234>
   295c8:	add	r4, pc, r4
   295cc:	b	295ec <conf_end_opm+0x184>
   295d0:	add	r0, r5, #8
   295d4:	mov	r1, r4
   295d8:	bl	26cd4 <rb_dlinkDelete>
   295dc:	mov	r0, r5
   295e0:	bl	26d8c <rb_free>
   295e4:	cmp	r7, #0
   295e8:	beq	2960c <conf_end_opm+0x1a4>
   295ec:	ldr	r5, [r7]
   295f0:	ldr	r7, [r7, #8]
   295f4:	cmp	r6, #0
   295f8:	bne	295d0 <conf_end_opm+0x168>
   295fc:	ldrh	r1, [r5, #4]
   29600:	ldr	r0, [r5]
   29604:	bl	d568 <create_opm_proxy_scanner@plt>
   29608:	b	295d0 <conf_end_opm+0x168>
   2960c:	cmp	r6, #0
   29610:	bne	2961c <conf_end_opm+0x1b4>
   29614:	mov	r0, #1
   29618:	bl	df40 <opm_check_enable@plt>
   2961c:	ldr	r0, [pc, #124]	; 296a0 <conf_end_opm+0x238>
   29620:	ldr	r0, [pc, r0]
   29624:	bl	26d8c <rb_free>
   29628:	ldr	r0, [pc, #116]	; 296a4 <conf_end_opm+0x23c>
   2962c:	ldr	r0, [pc, r0]
   29630:	bl	26d8c <rb_free>
   29634:	mov	r0, #0
   29638:	sub	sp, fp, #16
   2963c:	pop	{r4, r5, r6, r7, fp, pc}
   29640:	ldr	r0, [pc, #44]	; 29674 <conf_end_opm+0x20c>
   29644:	add	r0, pc, r0
   29648:	bl	d400 <conf_report_error@plt>
   2964c:	b	294d8 <conf_end_opm+0x70>
   29650:	ldr	r0, [pc, #44]	; 29684 <conf_end_opm+0x21c>
   29654:	add	r0, pc, r0
   29658:	bl	d400 <conf_report_error@plt>
   2965c:	b	29528 <conf_end_opm+0xc0>
   29660:	.word	0x0003cda4
   29664:	.word	0x0001bf27
   29668:	.word	0x0003cd8e
   2966c:	.word	0x0003cd70
   29670:	.word	0x000314a0
   29674:	.word	0x0001be8c
   29678:	.word	0x0003cd3c
   2967c:	.word	0x0003cd1c
   29680:	.word	0x00031450
   29684:	.word	0x0001bec7
   29688:	.word	0x0003cccc
   2968c:	.word	0x0001bfba
   29690:	.word	0x0001c002
   29694:	.word	0x0001bff4
   29698:	.word	0x0003cc64
   2969c:	.word	0x0003cc54
   296a0:	.word	0x0003cbf0
   296a4:	.word	0x0003cbe0

000296a8 <conf_set_opm_timeout>:
   296a8:	ldr	r1, [r0]
   296ac:	sub	r0, r1, #1
   296b0:	cmp	r0, #60	; 0x3c
   296b4:	bcc	296c4 <conf_set_opm_timeout+0x1c>
   296b8:	ldr	r0, [pc, #24]	; 296d8 <conf_set_opm_timeout+0x30>
   296bc:	add	r0, pc, r0
   296c0:	b	26d98 <conf_report_error>
   296c4:	ldr	r0, [pc, #8]	; 296d4 <conf_set_opm_timeout+0x2c>
   296c8:	add	r0, pc, r0
   296cc:	str	r1, [r0]
   296d0:	bx	lr
   296d4:	.word	0x0003cb4c
   296d8:	.word	0x0001befe

000296dc <conf_set_opm_listen_address_ipv4>:
   296dc:	mov	r1, #0
   296e0:	b	2b348 <conf_set_opm_listen_address_both>

000296e4 <conf_set_opm_listen_address_ipv6>:
   296e4:	mov	r1, #1
   296e8:	b	2b348 <conf_set_opm_listen_address_both>

000296ec <conf_set_opm_listen_port_ipv4>:
   296ec:	mov	r1, #0
   296f0:	b	2b44c <conf_set_opm_listen_port_both>

000296f4 <conf_set_opm_listen_port_ipv6>:
   296f4:	mov	r1, #1
   296f8:	b	2b44c <conf_set_opm_listen_port_both>

000296fc <conf_set_opm_listen_port>:
   296fc:	push	{r4, sl, fp, lr}
   29700:	add	fp, sp, #8
   29704:	mov	r4, r0
   29708:	mov	r1, #1
   2970c:	bl	2b44c <conf_set_opm_listen_port_both>
   29710:	mov	r0, r4
   29714:	mov	r1, #0
   29718:	pop	{r4, sl, fp, lr}
   2971c:	b	2b44c <conf_set_opm_listen_port_both>

00029720 <conf_set_opm_scan_ports_socks4>:
   29720:	ldr	r1, [pc, #12]	; 29734 <conf_set_opm_scan_ports_socks4+0x14>
   29724:	add	r1, pc, r1
   29728:	ldr	r2, [pc, #8]	; 29738 <conf_set_opm_scan_ports_socks4+0x18>
   2972c:	add	r2, pc, r2
   29730:	b	2b4dc <conf_set_opm_scan_ports_all>
   29734:	.word	0x0001bf99
   29738:	.word	0x0001bfa3

0002973c <conf_set_opm_scan_ports_socks5>:
   2973c:	ldr	r1, [pc, #12]	; 29750 <conf_set_opm_scan_ports_socks5+0x14>
   29740:	add	r1, pc, r1
   29744:	ldr	r2, [pc, #8]	; 29754 <conf_set_opm_scan_ports_socks5+0x18>
   29748:	add	r2, pc, r2
   2974c:	b	2b4dc <conf_set_opm_scan_ports_all>
   29750:	.word	0x0001c019
   29754:	.word	0x0001c023

00029758 <conf_set_opm_scan_ports_httpconnect>:
   29758:	ldr	r1, [pc, #12]	; 2976c <conf_set_opm_scan_ports_httpconnect+0x14>
   2975c:	add	r1, pc, r1
   29760:	ldr	r2, [pc, #8]	; 29770 <conf_set_opm_scan_ports_httpconnect+0x18>
   29764:	add	r2, pc, r2
   29768:	b	2b4dc <conf_set_opm_scan_ports_all>
   2976c:	.word	0x0001c016
   29770:	.word	0x0001c025

00029774 <conf_set_opm_scan_ports_httpsconnect>:
   29774:	ldr	r1, [pc, #12]	; 29788 <conf_set_opm_scan_ports_httpsconnect+0x14>
   29778:	add	r1, pc, r1
   2977c:	ldr	r2, [pc, #8]	; 2978c <conf_set_opm_scan_ports_httpsconnect+0x18>
   29780:	add	r2, pc, r2
   29784:	b	2b4dc <conf_set_opm_scan_ports_all>
   29788:	.word	0x0001c01d
   2978c:	.word	0x0001c02d

00029790 <conf_set_serverinfo_network_name>:
   29790:	push	{r4, r5, fp, lr}
   29794:	add	fp, sp, #8
   29798:	mov	r4, r0
   2979c:	mov	r1, #32
   297a0:	bl	dce8 <strchr@plt>
   297a4:	cmp	r0, #0
   297a8:	movne	r1, #0
   297ac:	strbne	r1, [r0]
   297b0:	ldr	r5, [pc, #24]	; 297d0 <conf_set_serverinfo_network_name+0x40>
   297b4:	ldr	r5, [pc, r5]
   297b8:	ldr	r0, [r5, #12]
   297bc:	bl	26d8c <rb_free>
   297c0:	mov	r0, r4
   297c4:	bl	27068 <rb_strdup>
   297c8:	str	r0, [r5, #12]
   297cc:	pop	{r4, r5, fp, pc}
   297d0:	.word	0x0003119c

000297d4 <conf_set_serverinfo_name>:
   297d4:	push	{r4, r5, r6, sl, fp, lr}
   297d8:	add	fp, sp, #16
   297dc:	mov	r4, r0
   297e0:	ldr	r6, [pc, #192]	; 298a8 <conf_set_serverinfo_name+0xd4>
   297e4:	ldr	r6, [pc, r6]
   297e8:	ldr	r0, [r6]
   297ec:	cmp	r0, #0
   297f0:	beq	297f8 <conf_set_serverinfo_name+0x24>
   297f4:	pop	{r4, r5, r6, sl, fp, pc}
   297f8:	ldrb	r3, [r4]
   297fc:	cmp	r3, #0
   29800:	beq	29878 <conf_set_serverinfo_name+0xa4>
   29804:	mov	r1, #0
   29808:	mov	r2, #1
   2980c:	ldr	r0, [pc, #152]	; 298ac <conf_set_serverinfo_name+0xd8>
   29810:	ldr	r0, [pc, r0]
   29814:	uxtb	r3, r3
   29818:	add	r5, r0, r3, lsl #2
   2981c:	ldrh	r5, [r5]
   29820:	tst	r5, #8256	; 0x2040
   29824:	beq	29888 <conf_set_serverinfo_name+0xb4>
   29828:	cmp	r3, #46	; 0x2e
   2982c:	addeq	r1, r1, #1
   29830:	ldrb	r3, [r4, r2]
   29834:	add	r2, r2, #1
   29838:	cmp	r3, #0
   2983c:	bne	29814 <conf_set_serverinfo_name+0x40>
   29840:	cmp	r1, #0
   29844:	beq	29878 <conf_set_serverinfo_name+0xa4>
   29848:	ldrb	r1, [r4]
   2984c:	ldrb	r0, [r0, r1, lsl #2]
   29850:	tst	r0, #16
   29854:	bne	29898 <conf_set_serverinfo_name+0xc4>
   29858:	mov	r0, r4
   2985c:	bl	dc94 <strlen@plt>
   29860:	cmp	r0, #63	; 0x3f
   29864:	pophi	{r4, r5, r6, sl, fp, pc}
   29868:	mov	r0, r4
   2986c:	bl	27068 <rb_strdup>
   29870:	str	r0, [r6]
   29874:	pop	{r4, r5, r6, sl, fp, pc}
   29878:	ldr	r0, [pc, #52]	; 298b4 <conf_set_serverinfo_name+0xe0>
   2987c:	add	r0, pc, r0
   29880:	pop	{r4, r5, r6, sl, fp, lr}
   29884:	b	26d98 <conf_report_error>
   29888:	ldr	r0, [pc, #32]	; 298b0 <conf_set_serverinfo_name+0xdc>
   2988c:	add	r0, pc, r0
   29890:	pop	{r4, r5, r6, sl, fp, lr}
   29894:	b	26d98 <conf_report_error>
   29898:	ldr	r0, [pc, #24]	; 298b8 <conf_set_serverinfo_name+0xe4>
   2989c:	add	r0, pc, r0
   298a0:	pop	{r4, r5, r6, sl, fp, lr}
   298a4:	b	26d98 <conf_report_error>
   298a8:	.word	0x0003116c
   298ac:	.word	0x000311e8
   298b0:	.word	0x0001a431
   298b4:	.word	0x0001a470
   298b8:	.word	0x0001a47e

000298bc <conf_set_serverinfo_sid>:
   298bc:	mov	r1, r0
   298c0:	ldr	r0, [pc, #112]	; 29938 <conf_set_serverinfo_sid+0x7c>
   298c4:	ldr	r0, [pc, r0]
   298c8:	ldrb	r2, [r0, #4]
   298cc:	cmp	r2, #0
   298d0:	bxne	lr
   298d4:	ldrb	r3, [r1]
   298d8:	ldr	r2, [pc, #92]	; 2993c <conf_set_serverinfo_sid+0x80>
   298dc:	ldr	r2, [pc, r2]
   298e0:	ldrb	r3, [r2, r3, lsl #2]
   298e4:	tst	r3, #16
   298e8:	beq	29920 <conf_set_serverinfo_sid+0x64>
   298ec:	ldrb	r3, [r1, #1]
   298f0:	ldr	r3, [r2, r3, lsl #2]
   298f4:	movw	ip, #16
   298f8:	movt	ip, #1
   298fc:	tst	r3, ip
   29900:	beq	29920 <conf_set_serverinfo_sid+0x64>
   29904:	ldrb	r3, [r1, #2]
   29908:	ldr	r2, [r2, r3, lsl #2]
   2990c:	tst	r2, ip
   29910:	beq	29920 <conf_set_serverinfo_sid+0x64>
   29914:	ldrb	r2, [r1, #3]
   29918:	cmp	r2, #0
   2991c:	beq	2992c <conf_set_serverinfo_sid+0x70>
   29920:	ldr	r0, [pc, #24]	; 29940 <conf_set_serverinfo_sid+0x84>
   29924:	add	r0, pc, r0
   29928:	b	26d98 <conf_report_error>
   2992c:	add	r0, r0, #4
   29930:	mov	r2, #4
   29934:	b	e510 <rb_strlcpy@plt>
   29938:	.word	0x0003108c
   2993c:	.word	0x0003111c
   29940:	.word	0x0001a42c

00029944 <conf_set_serverinfo_vhost>:
   29944:	push	{r4, sl, fp, lr}
   29948:	add	fp, sp, #8
   2994c:	sub	sp, sp, #128	; 0x80
   29950:	mov	r4, r0
   29954:	mov	r1, sp
   29958:	bl	e000 <rb_inet_pton_sock@plt>
   2995c:	cmp	r0, #1
   29960:	blt	29990 <conf_set_serverinfo_vhost+0x4c>
   29964:	ldrh	r0, [sp]
   29968:	cmp	r0, #2
   2996c:	bne	29990 <conf_set_serverinfo_vhost+0x4c>
   29970:	ldr	r0, [pc, #52]	; 299ac <conf_set_serverinfo_vhost+0x68>
   29974:	ldr	r0, [pc, r0]
   29978:	add	r0, r0, #20
   2997c:	mov	r1, sp
   29980:	mov	r2, #128	; 0x80
   29984:	bl	d40c <memcpy@plt>
   29988:	sub	sp, fp, #8
   2998c:	pop	{r4, sl, fp, pc}
   29990:	ldr	r0, [pc, #16]	; 299a8 <conf_set_serverinfo_vhost+0x64>
   29994:	add	r0, pc, r0
   29998:	mov	r1, r4
   2999c:	bl	d400 <conf_report_error@plt>
   299a0:	sub	sp, fp, #8
   299a4:	pop	{r4, sl, fp, pc}
   299a8:	.word	0x0001a3e3
   299ac:	.word	0x00030fdc

000299b0 <conf_set_serverinfo_vhost6>:
   299b0:	push	{r4, sl, fp, lr}
   299b4:	add	fp, sp, #8
   299b8:	sub	sp, sp, #128	; 0x80
   299bc:	mov	r4, r0
   299c0:	mov	r1, sp
   299c4:	bl	e000 <rb_inet_pton_sock@plt>
   299c8:	cmp	r0, #1
   299cc:	blt	299fc <conf_set_serverinfo_vhost6+0x4c>
   299d0:	ldrh	r0, [sp]
   299d4:	cmp	r0, #10
   299d8:	bne	299fc <conf_set_serverinfo_vhost6+0x4c>
   299dc:	ldr	r0, [pc, #52]	; 29a18 <conf_set_serverinfo_vhost6+0x68>
   299e0:	ldr	r0, [pc, r0]
   299e4:	add	r0, r0, #148	; 0x94
   299e8:	mov	r1, sp
   299ec:	mov	r2, #128	; 0x80
   299f0:	bl	d40c <memcpy@plt>
   299f4:	sub	sp, fp, #8
   299f8:	pop	{r4, sl, fp, pc}
   299fc:	ldr	r0, [pc, #16]	; 29a14 <conf_set_serverinfo_vhost6+0x64>
   29a00:	add	r0, pc, r0
   29a04:	mov	r1, r4
   29a08:	bl	d400 <conf_report_error@plt>
   29a0c:	sub	sp, fp, #8
   29a10:	pop	{r4, sl, fp, pc}
   29a14:	.word	0x0001a3a2
   29a18:	.word	0x00030f70

00029a1c <conf_set_serverinfo_nicklen>:
   29a1c:	push	{r4, sl, fp, lr}
   29a20:	add	fp, sp, #8
   29a24:	ldr	r1, [r0]
   29a28:	add	r0, r1, #1
   29a2c:	ldr	r4, [pc, #72]	; 29a7c <conf_set_serverinfo_nicklen+0x60>
   29a30:	ldr	r4, [pc, r4]
   29a34:	str	r0, [r4, #360]	; 0x168
   29a38:	cmp	r0, #33	; 0x21
   29a3c:	bcc	29a5c <conf_set_serverinfo_nicklen+0x40>
   29a40:	ldr	r0, [pc, #56]	; 29a80 <conf_set_serverinfo_nicklen+0x64>
   29a44:	add	r0, pc, r0
   29a48:	mov	r2, #31
   29a4c:	bl	d400 <conf_report_error@plt>
   29a50:	mov	r0, #32
   29a54:	str	r0, [r4, #360]	; 0x168
   29a58:	pop	{r4, sl, fp, pc}
   29a5c:	cmp	r0, #9
   29a60:	pophi	{r4, sl, fp, pc}
   29a64:	ldr	r0, [pc, #24]	; 29a84 <conf_set_serverinfo_nicklen+0x68>
   29a68:	add	r0, pc, r0
   29a6c:	bl	d400 <conf_report_error@plt>
   29a70:	mov	r0, #10
   29a74:	str	r0, [r4, #360]	; 0x168
   29a78:	pop	{r4, sl, fp, pc}
   29a7c:	.word	0x0003114c
   29a80:	.word	0x0001a389
   29a84:	.word	0x0001a3cb

00029a88 <rb_dlinkMoveNode>:
   29a88:	push	{fp, lr}
   29a8c:	mov	fp, sp
   29a90:	cmp	r0, #0
   29a94:	beq	29b20 <rb_dlinkMoveNode+0x98>
   29a98:	ldr	ip, [pc, #160]	; 29b40 <rb_dlinkMoveNode+0xb8>
   29a9c:	add	ip, pc, ip
   29aa0:	ldmib	r0, {r2, r3}
   29aa4:	add	r1, r3, #4
   29aa8:	cmp	r3, #0
   29aac:	addeq	r1, ip, #4
   29ab0:	str	r2, [r1]
   29ab4:	ldmib	r0, {r1, r2}
   29ab8:	cmp	r1, #0
   29abc:	mov	r3, ip
   29ac0:	addne	r3, r1, #8
   29ac4:	str	r2, [r3]
   29ac8:	mov	r1, #0
   29acc:	ldr	r2, [pc, #112]	; 29b44 <rb_dlinkMoveNode+0xbc>
   29ad0:	ldr	r2, [pc, r2]
   29ad4:	ldr	r3, [r2]
   29ad8:	stmib	r0, {r1, r3}
   29adc:	cmp	r3, #0
   29ae0:	beq	29af0 <rb_dlinkMoveNode+0x68>
   29ae4:	add	r3, r3, #4
   29ae8:	str	r0, [r3]
   29aec:	b	29b00 <rb_dlinkMoveNode+0x78>
   29af0:	mov	r3, r2
   29af4:	ldr	r1, [r3, #4]!
   29af8:	cmp	r1, #0
   29afc:	streq	r0, [r3]
   29b00:	str	r0, [r2]
   29b04:	ldr	r0, [ip, #8]
   29b08:	sub	r0, r0, #1
   29b0c:	str	r0, [ip, #8]
   29b10:	ldr	r0, [r2, #8]
   29b14:	add	r0, r0, #1
   29b18:	str	r0, [r2, #8]
   29b1c:	pop	{fp, pc}
   29b20:	ldr	r0, [pc, #32]	; 29b48 <rb_dlinkMoveNode+0xc0>
   29b24:	add	r0, pc, r0
   29b28:	ldr	r1, [pc, #28]	; 29b4c <rb_dlinkMoveNode+0xc4>
   29b2c:	add	r1, pc, r1
   29b30:	ldr	r3, [pc, #24]	; 29b50 <rb_dlinkMoveNode+0xc8>
   29b34:	add	r3, pc, r3
   29b38:	mov	r2, #114	; 0x72
   29b3c:	bl	e7e0 <__assert_fail@plt>
   29b40:	.word	0x0003c704
   29b44:	.word	0x00030ee0
   29b48:	.word	0x00016de8
   29b4c:	.word	0x00016dea
   29b50:	.word	0x0001a4bb

00029b54 <conf_set_oper_rsa_public_key_file>:
   29b54:	push	{r4, sl, fp, lr}
   29b58:	add	fp, sp, #8
   29b5c:	mov	r4, r0
   29b60:	ldr	r0, [pc, #32]	; 29b88 <conf_set_oper_rsa_public_key_file+0x34>
   29b64:	ldr	r0, [pc, r0]
   29b68:	ldr	r0, [r0, #36]	; 0x24
   29b6c:	bl	26d8c <rb_free>
   29b70:	mov	r0, r4
   29b74:	bl	27068 <rb_strdup>
   29b78:	ldr	r1, [pc, #12]	; 29b8c <conf_set_oper_rsa_public_key_file+0x38>
   29b7c:	ldr	r1, [pc, r1]
   29b80:	str	r0, [r1, #36]	; 0x24
   29b84:	pop	{r4, sl, fp, pc}
   29b88:	.word	0x0003c638
   29b8c:	.word	0x0003c620

00029b90 <conf_set_oper_flags>:
   29b90:	mov	r3, r0
   29b94:	ldr	r0, [pc, #24]	; 29bb4 <conf_set_oper_flags+0x24>
   29b98:	ldr	r0, [pc, r0]
   29b9c:	add	r0, r0, #20
   29ba0:	ldr	r1, [pc, #16]	; 29bb8 <conf_set_oper_flags+0x28>
   29ba4:	add	r1, pc, r1
   29ba8:	ldr	r2, [pc, #12]	; 29bbc <conf_set_oper_flags+0x2c>
   29bac:	add	r2, pc, r2
   29bb0:	b	29dac <set_modes_from_table>
   29bb4:	.word	0x0003c604
   29bb8:	.word	0x0001d2a4
   29bbc:	.word	0x00032bac

00029bc0 <conf_set_oper_umodes>:
   29bc0:	mov	r3, r0
   29bc4:	ldr	r0, [pc, #24]	; 29be4 <conf_set_oper_umodes+0x24>
   29bc8:	ldr	r0, [pc, r0]
   29bcc:	add	r0, r0, #24
   29bd0:	ldr	r1, [pc, #16]	; 29be8 <conf_set_oper_umodes+0x28>
   29bd4:	add	r1, pc, r1
   29bd8:	ldr	r2, [pc, #12]	; 29bec <conf_set_oper_umodes+0x2c>
   29bdc:	add	r2, pc, r2
   29be0:	b	29dac <set_modes_from_table>
   29be4:	.word	0x0003c5d4
   29be8:	.word	0x0001a4da
   29bec:	.word	0x00032b94

00029bf0 <conf_set_oper_privset>:
   29bf0:	push	{fp, lr}
   29bf4:	mov	fp, sp
   29bf8:	bl	d394 <privilegeset_get@plt>
   29bfc:	ldr	r1, [pc, #8]	; 29c0c <conf_set_oper_privset+0x1c>
   29c00:	ldr	r1, [pc, r1]
   29c04:	str	r0, [r1, #32]
   29c08:	pop	{fp, pc}
   29c0c:	.word	0x0003c59c

00029c10 <conf_set_oper_snomask>:
   29c10:	push	{fp, lr}
   29c14:	mov	fp, sp
   29c18:	mov	r1, r0
   29c1c:	mov	r0, #0
   29c20:	bl	de98 <parse_snobuf_to_mask@plt>
   29c24:	ldr	r1, [pc, #8]	; 29c34 <conf_set_oper_snomask+0x24>
   29c28:	ldr	r1, [pc, r1]
   29c2c:	str	r0, [r1, #28]
   29c30:	pop	{fp, pc}
   29c34:	.word	0x0003c574

00029c38 <conf_set_oper_user>:
   29c38:	push	{r4, r5, r6, sl, fp, lr}
   29c3c:	add	fp, sp, #16
   29c40:	mov	r5, r0
   29c44:	bl	d190 <make_oper_conf@plt>
   29c48:	mov	r4, r0
   29c4c:	mov	r0, r5
   29c50:	mov	r1, #64	; 0x40
   29c54:	bl	dce8 <strchr@plt>
   29c58:	cmp	r0, #0
   29c5c:	beq	29c80 <conf_set_oper_user+0x48>
   29c60:	mov	r6, r0
   29c64:	mov	r0, #0
   29c68:	strb	r0, [r6], #1
   29c6c:	mov	r0, r5
   29c70:	bl	27068 <rb_strdup>
   29c74:	str	r0, [r4, #4]
   29c78:	mov	r0, r6
   29c7c:	b	29c94 <conf_set_oper_user+0x5c>
   29c80:	ldr	r0, [pc, #120]	; 29d00 <conf_set_oper_user+0xc8>
   29c84:	add	r0, pc, r0
   29c88:	bl	27068 <rb_strdup>
   29c8c:	str	r0, [r4, #4]
   29c90:	mov	r0, r5
   29c94:	bl	27068 <rb_strdup>
   29c98:	str	r0, [r4, #8]
   29c9c:	ldr	r0, [r4, #4]
   29ca0:	cmp	r0, #0
   29ca4:	beq	29ce8 <conf_set_oper_user+0xb0>
   29ca8:	ldrb	r0, [r0]
   29cac:	cmp	r0, #0
   29cb0:	beq	29ce8 <conf_set_oper_user+0xb0>
   29cb4:	ldr	r0, [r4, #8]
   29cb8:	cmp	r0, #0
   29cbc:	beq	29ce8 <conf_set_oper_user+0xb0>
   29cc0:	ldrb	r0, [r0]
   29cc4:	cmp	r0, #0
   29cc8:	beq	29ce8 <conf_set_oper_user+0xb0>
   29ccc:	bl	dc58 <rb_make_rb_dlink_node@plt>
   29cd0:	mov	r1, r0
   29cd4:	ldr	r2, [pc, #44]	; 29d08 <conf_set_oper_user+0xd0>
   29cd8:	add	r2, pc, r2
   29cdc:	mov	r0, r4
   29ce0:	pop	{r4, r5, r6, sl, fp, lr}
   29ce4:	b	269e0 <rb_dlinkAdd>
   29ce8:	ldr	r0, [pc, #20]	; 29d04 <conf_set_oper_user+0xcc>
   29cec:	add	r0, pc, r0
   29cf0:	bl	d400 <conf_report_error@plt>
   29cf4:	mov	r0, r4
   29cf8:	pop	{r4, r5, r6, sl, fp, lr}
   29cfc:	b	d9c4 <free_oper_conf@plt>
   29d00:	.word	0x00017a19
   29d04:	.word	0x0001a3ef
   29d08:	.word	0x0003c4c8

00029d0c <conf_set_oper_password>:
   29d0c:	push	{r4, r5, r6, sl, fp, lr}
   29d10:	add	fp, sp, #16
   29d14:	mov	r4, r0
   29d18:	ldr	r6, [pc, #68]	; 29d64 <conf_set_oper_password+0x58>
   29d1c:	ldr	r6, [pc, r6]
   29d20:	ldr	r5, [r6, #12]
   29d24:	cmp	r5, #0
   29d28:	beq	29d4c <conf_set_oper_password+0x40>
   29d2c:	mov	r0, r5
   29d30:	bl	dc94 <strlen@plt>
   29d34:	mov	r2, r0
   29d38:	mov	r0, r5
   29d3c:	mov	r1, #0
   29d40:	bl	df28 <memset@plt>
   29d44:	ldr	r0, [r6, #12]
   29d48:	bl	26d8c <rb_free>
   29d4c:	mov	r0, r4
   29d50:	bl	27068 <rb_strdup>
   29d54:	ldr	r1, [pc, #12]	; 29d68 <conf_set_oper_password+0x5c>
   29d58:	ldr	r1, [pc, r1]
   29d5c:	str	r0, [r1, #12]
   29d60:	pop	{r4, r5, r6, sl, fp, pc}
   29d64:	.word	0x0003c480
   29d68:	.word	0x0003c444

00029d6c <conf_set_oper_fingerprint>:
   29d6c:	push	{r4, sl, fp, lr}
   29d70:	add	fp, sp, #8
   29d74:	mov	r4, r0
   29d78:	ldr	r0, [pc, #36]	; 29da4 <conf_set_oper_fingerprint+0x38>
   29d7c:	ldr	r0, [pc, r0]
   29d80:	ldr	r0, [r0, #16]
   29d84:	cmp	r0, #0
   29d88:	blne	26d8c <rb_free>
   29d8c:	mov	r0, r4
   29d90:	bl	27068 <rb_strdup>
   29d94:	ldr	r1, [pc, #12]	; 29da8 <conf_set_oper_fingerprint+0x3c>
   29d98:	ldr	r1, [pc, r1]
   29d9c:	str	r0, [r1, #16]
   29da0:	pop	{r4, sl, fp, pc}
   29da4:	.word	0x0003c420
   29da8:	.word	0x0003c404

00029dac <set_modes_from_table>:
   29dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29db0:	add	fp, sp, #28
   29db4:	sub	sp, sp, #4
   29db8:	cmp	r3, #0
   29dbc:	beq	29e64 <set_modes_from_table+0xb8>
   29dc0:	mov	r4, r3
   29dc4:	mov	sl, r2
   29dc8:	mov	r6, r1
   29dcc:	mov	r7, r0
   29dd0:	ldr	r9, [pc, #148]	; 29e6c <set_modes_from_table+0xc0>
   29dd4:	add	r9, pc, r9
   29dd8:	b	29df4 <set_modes_from_table+0x48>
   29ddc:	mov	r0, r9
   29de0:	mov	r1, r6
   29de4:	bl	d400 <conf_report_error@plt>
   29de8:	ldr	r4, [r4]
   29dec:	cmp	r4, #0
   29df0:	beq	29e64 <set_modes_from_table+0xb8>
   29df4:	ldrb	r0, [r4, #4]
   29df8:	cmp	r0, #3
   29dfc:	bne	29ddc <set_modes_from_table+0x30>
   29e00:	ldr	r5, [r4, #8]
   29e04:	mov	r1, r5
   29e08:	ldrb	r8, [r1], #1
   29e0c:	cmp	r8, #126	; 0x7e
   29e10:	movne	r1, r5
   29e14:	mov	r0, sl
   29e18:	bl	29e74 <find_umode>
   29e1c:	cmp	r0, #0
   29e20:	beq	29e44 <set_modes_from_table+0x98>
   29e24:	cmn	r0, #1
   29e28:	bne	29e4c <set_modes_from_table+0xa0>
   29e2c:	ldr	r0, [pc, #60]	; 29e70 <set_modes_from_table+0xc4>
   29e30:	add	r0, pc, r0
   29e34:	mov	r1, r6
   29e38:	mov	r2, r5
   29e3c:	bl	d400 <conf_report_error@plt>
   29e40:	b	29de8 <set_modes_from_table+0x3c>
   29e44:	mov	r0, #0
   29e48:	b	29e5c <set_modes_from_table+0xb0>
   29e4c:	cmp	r8, #126	; 0x7e
   29e50:	ldr	r1, [r7]
   29e54:	biceq	r0, r1, r0
   29e58:	orrne	r0, r1, r0
   29e5c:	str	r0, [r7]
   29e60:	b	29de8 <set_modes_from_table+0x3c>
   29e64:	sub	sp, fp, #28
   29e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e6c:	.word	0x0001a284
   29e70:	.word	0x0001a251

00029e74 <find_umode>:
   29e74:	push	{r4, r5, r6, sl, fp, lr}
   29e78:	add	fp, sp, #16
   29e7c:	mov	r5, r1
   29e80:	mov	r1, r0
   29e84:	ldr	r0, [r0]
   29e88:	mvn	r4, #0
   29e8c:	cmp	r0, #0
   29e90:	beq	29ebc <find_umode+0x48>
   29e94:	add	r6, r1, #4
   29e98:	mov	r1, r5
   29e9c:	bl	d0c4 <strcmp@plt>
   29ea0:	cmp	r0, #0
   29ea4:	beq	29ec4 <find_umode+0x50>
   29ea8:	add	r1, r6, #8
   29eac:	ldr	r0, [r6, #4]
   29eb0:	cmp	r0, #0
   29eb4:	mov	r6, r1
   29eb8:	bne	29e98 <find_umode+0x24>
   29ebc:	mov	r0, r4
   29ec0:	pop	{r4, r5, r6, sl, fp, pc}
   29ec4:	ldr	r4, [r6]
   29ec8:	mov	r0, r4
   29ecc:	pop	{r4, r5, r6, sl, fp, pc}

00029ed0 <conf_set_class_ping_time>:
   29ed0:	ldr	r0, [r0]
   29ed4:	ldr	r1, [pc, #8]	; 29ee4 <conf_set_class_ping_time+0x14>
   29ed8:	ldr	r1, [pc, r1]
   29edc:	str	r0, [r1, #32]
   29ee0:	bx	lr
   29ee4:	.word	0x0003c2d4

00029ee8 <conf_set_class_cidr_ipv4_bitlen>:
   29ee8:	ldr	r1, [r0]
   29eec:	cmp	r1, #33	; 0x21
   29ef0:	bcc	29f04 <conf_set_class_cidr_ipv4_bitlen+0x1c>
   29ef4:	ldr	r0, [pc, #28]	; 29f18 <conf_set_class_cidr_ipv4_bitlen+0x30>
   29ef8:	add	r0, pc, r0
   29efc:	mov	r2, #32
   29f00:	b	26d98 <conf_report_error>
   29f04:	ldr	r0, [pc, #8]	; 29f14 <conf_set_class_cidr_ipv4_bitlen+0x2c>
   29f08:	ldr	r0, [pc, r0]
   29f0c:	str	r1, [r0, #44]	; 0x2c
   29f10:	bx	lr
   29f14:	.word	0x0003c2a4
   29f18:	.word	0x0001a2bf

00029f1c <conf_set_class_cidr_ipv6_bitlen>:
   29f1c:	ldr	r1, [r0]
   29f20:	cmp	r1, #129	; 0x81
   29f24:	bcc	29f38 <conf_set_class_cidr_ipv6_bitlen+0x1c>
   29f28:	ldr	r0, [pc, #28]	; 29f4c <conf_set_class_cidr_ipv6_bitlen+0x30>
   29f2c:	add	r0, pc, r0
   29f30:	mov	r2, #128	; 0x80
   29f34:	b	26d98 <conf_report_error>
   29f38:	ldr	r0, [pc, #8]	; 29f48 <conf_set_class_cidr_ipv6_bitlen+0x2c>
   29f3c:	ldr	r0, [pc, r0]
   29f40:	str	r1, [r0, #48]	; 0x30
   29f44:	bx	lr
   29f48:	.word	0x0003c270
   29f4c:	.word	0x0001a2d2

00029f50 <conf_set_class_number_per_cidr>:
   29f50:	ldr	r0, [r0]
   29f54:	ldr	r1, [pc, #8]	; 29f64 <conf_set_class_number_per_cidr+0x14>
   29f58:	ldr	r1, [pc, r1]
   29f5c:	str	r0, [r1, #52]	; 0x34
   29f60:	bx	lr
   29f64:	.word	0x0003c254

00029f68 <conf_set_class_number_per_ip>:
   29f68:	ldr	r0, [r0]
   29f6c:	ldr	r1, [pc, #8]	; 29f7c <conf_set_class_number_per_ip+0x14>
   29f70:	ldr	r1, [pc, r1]
   29f74:	str	r0, [r1, #12]
   29f78:	bx	lr
   29f7c:	.word	0x0003c23c

00029f80 <conf_set_class_number_per_ip_global>:
   29f80:	ldr	r0, [r0]
   29f84:	ldr	r1, [pc, #8]	; 29f94 <conf_set_class_number_per_ip_global+0x14>
   29f88:	ldr	r1, [pc, r1]
   29f8c:	str	r0, [r1, #16]
   29f90:	bx	lr
   29f94:	.word	0x0003c224

00029f98 <conf_set_class_number_per_ident>:
   29f98:	ldr	r0, [r0]
   29f9c:	ldr	r1, [pc, #8]	; 29fac <conf_set_class_number_per_ident+0x14>
   29fa0:	ldr	r1, [pc, r1]
   29fa4:	str	r0, [r1, #20]
   29fa8:	bx	lr
   29fac:	.word	0x0003c20c

00029fb0 <conf_set_class_connectfreq>:
   29fb0:	ldr	r0, [r0]
   29fb4:	ldr	r1, [pc, #8]	; 29fc4 <conf_set_class_connectfreq+0x14>
   29fb8:	ldr	r1, [pc, r1]
   29fbc:	str	r0, [r1, #28]
   29fc0:	bx	lr
   29fc4:	.word	0x0003c1f4

00029fc8 <conf_set_class_max_number>:
   29fc8:	ldr	r0, [r0]
   29fcc:	ldr	r1, [pc, #8]	; 29fdc <conf_set_class_max_number+0x14>
   29fd0:	ldr	r1, [pc, r1]
   29fd4:	str	r0, [r1, #8]
   29fd8:	bx	lr
   29fdc:	.word	0x0003c1dc

00029fe0 <conf_set_class_sendq>:
   29fe0:	ldr	r0, [r0]
   29fe4:	ldr	r1, [pc, #8]	; 29ff4 <conf_set_class_sendq+0x14>
   29fe8:	ldr	r1, [pc, r1]
   29fec:	str	r0, [r1, #24]
   29ff0:	bx	lr
   29ff4:	.word	0x0003c1c4

00029ff8 <conf_set_privset_extends>:
   29ff8:	push	{fp, lr}
   29ffc:	mov	fp, sp
   2a000:	bl	27068 <rb_strdup>
   2a004:	ldr	r1, [pc, #8]	; 2a014 <conf_set_privset_extends+0x1c>
   2a008:	add	r1, pc, r1
   2a00c:	str	r0, [r1]
   2a010:	pop	{fp, pc}
   2a014:	.word	0x0003c1a8

0002a018 <conf_set_privset_privs>:
   2a018:	push	{r4, r5, r6, r7, fp, lr}
   2a01c:	add	fp, sp, #16
   2a020:	cmp	r0, #0
   2a024:	beq	2a14c <conf_set_privset_privs+0x134>
   2a028:	mov	r5, r0
   2a02c:	mov	r4, #0
   2a030:	mov	r0, #1
   2a034:	mov	r7, #32
   2a038:	tst	r0, #1
   2a03c:	bne	2a0ac <conf_set_privset_privs+0x94>
   2a040:	mov	r0, r4
   2a044:	bl	dc94 <strlen@plt>
   2a048:	mov	r6, r0
   2a04c:	ldr	r0, [r5, #8]
   2a050:	bl	dc94 <strlen@plt>
   2a054:	add	r0, r6, r0
   2a058:	add	r0, r0, #2
   2a05c:	bl	269c0 <rb_malloc>
   2a060:	mov	r6, r0
   2a064:	mov	r1, r4
   2a068:	bl	d91c <strcpy@plt>
   2a06c:	bl	dc94 <strlen@plt>
   2a070:	add	r0, r6, r0
   2a074:	strh	r7, [r0]
   2a078:	ldr	r1, [r5, #8]
   2a07c:	mov	r0, r6
   2a080:	bl	d8b0 <strcat@plt>
   2a084:	mov	r0, r4
   2a088:	bl	26d8c <rb_free>
   2a08c:	mov	r4, r6
   2a090:	ldr	r5, [r5]
   2a094:	clz	r0, r4
   2a098:	lsr	r0, r0, #5
   2a09c:	cmp	r5, #0
   2a0a0:	beq	2a0bc <conf_set_privset_privs+0xa4>
   2a0a4:	tst	r0, #1
   2a0a8:	beq	2a040 <conf_set_privset_privs+0x28>
   2a0ac:	ldr	r0, [r5, #8]
   2a0b0:	bl	27068 <rb_strdup>
   2a0b4:	mov	r4, r0
   2a0b8:	b	2a090 <conf_set_privset_privs+0x78>
   2a0bc:	cmp	r4, #0
   2a0c0:	beq	2a14c <conf_set_privset_privs+0x134>
   2a0c4:	ldr	r0, [pc, #180]	; 2a180 <conf_set_privset_privs+0x168>
   2a0c8:	ldr	r0, [pc, r0]
   2a0cc:	cmp	r0, #0
   2a0d0:	beq	2a150 <conf_set_privset_privs+0x138>
   2a0d4:	bl	d394 <privilegeset_get@plt>
   2a0d8:	cmp	r0, #0
   2a0dc:	bne	2a108 <conf_set_privset_privs+0xf0>
   2a0e0:	ldr	r2, [pc, #156]	; 2a184 <conf_set_privset_privs+0x16c>
   2a0e4:	ldr	r2, [pc, r2]
   2a0e8:	ldr	r1, [pc, #152]	; 2a188 <conf_set_privset_privs+0x170>
   2a0ec:	ldr	r1, [pc, r1]
   2a0f0:	ldr	r0, [pc, #148]	; 2a18c <conf_set_privset_privs+0x174>
   2a0f4:	add	r0, pc, r0
   2a0f8:	bl	d400 <conf_report_error@plt>
   2a0fc:	ldr	r0, [pc, #140]	; 2a190 <conf_set_privset_privs+0x178>
   2a100:	add	r0, pc, r0
   2a104:	bl	d394 <privilegeset_get@plt>
   2a108:	ldr	r2, [pc, #132]	; 2a194 <conf_set_privset_privs+0x17c>
   2a10c:	ldr	r2, [pc, r2]
   2a110:	ldr	r1, [pc, #128]	; 2a198 <conf_set_privset_privs+0x180>
   2a114:	add	r1, pc, r1
   2a118:	cmp	r2, #0
   2a11c:	movne	r1, r2
   2a120:	mov	r5, #0
   2a124:	mov	r2, r4
   2a128:	mov	r3, #0
   2a12c:	bl	dbd4 <privilegeset_extend@plt>
   2a130:	ldr	r0, [pc, #100]	; 2a19c <conf_set_privset_privs+0x184>
   2a134:	ldr	r0, [pc, r0]
   2a138:	bl	26d8c <rb_free>
   2a13c:	ldr	r0, [pc, #92]	; 2a1a0 <conf_set_privset_privs+0x188>
   2a140:	add	r0, pc, r0
   2a144:	str	r5, [r0]
   2a148:	b	2a174 <conf_set_privset_privs+0x15c>
   2a14c:	pop	{r4, r5, r6, r7, fp, pc}
   2a150:	ldr	r1, [pc, #76]	; 2a1a4 <conf_set_privset_privs+0x18c>
   2a154:	ldr	r1, [pc, r1]
   2a158:	ldr	r0, [pc, #72]	; 2a1a8 <conf_set_privset_privs+0x190>
   2a15c:	add	r0, pc, r0
   2a160:	cmp	r1, #0
   2a164:	movne	r0, r1
   2a168:	mov	r1, r4
   2a16c:	mov	r2, #0
   2a170:	bl	d76c <privilegeset_set_new@plt>
   2a174:	mov	r0, r4
   2a178:	pop	{r4, r5, r6, r7, fp, lr}
   2a17c:	b	26d8c <rb_free>
   2a180:	.word	0x0003c0e8
   2a184:	.word	0x0003c0b4
   2a188:	.word	0x0003c0c4
   2a18c:	.word	0x0001a159
   2a190:	.word	0x00017274
   2a194:	.word	0x0003c08c
   2a198:	.word	0x0001a17e
   2a19c:	.word	0x0003c07c
   2a1a0:	.word	0x0003c070
   2a1a4:	.word	0x0003c044
   2a1a8:	.word	0x0001a136

0002a1ac <conf_set_listen_port_both>:
   2a1ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a1b0:	add	fp, sp, #28
   2a1b4:	sub	sp, sp, #12
   2a1b8:	cmp	r0, #0
   2a1bc:	beq	2a2e0 <conf_set_listen_port_both+0x134>
   2a1c0:	mov	r4, r2
   2a1c4:	mov	r5, r1
   2a1c8:	mov	r6, r0
   2a1cc:	ldr	r8, [pc, #276]	; 2a2e8 <conf_set_listen_port_both+0x13c>
   2a1d0:	add	r8, pc, r8
   2a1d4:	ldr	r9, [pc, #272]	; 2a2ec <conf_set_listen_port_both+0x140>
   2a1d8:	add	r9, pc, r9
   2a1dc:	ldr	sl, [pc, #268]	; 2a2f0 <conf_set_listen_port_both+0x144>
   2a1e0:	add	sl, pc, sl
   2a1e4:	b	2a1fc <conf_set_listen_port_both+0x50>
   2a1e8:	mov	r0, sl
   2a1ec:	bl	d400 <conf_report_error@plt>
   2a1f0:	ldr	r6, [r6]
   2a1f4:	cmp	r6, #0
   2a1f8:	beq	2a2e0 <conf_set_listen_port_both+0x134>
   2a1fc:	ldrb	r0, [r6, #4]
   2a200:	cmp	r0, #2
   2a204:	bne	2a1e8 <conf_set_listen_port_both+0x3c>
   2a208:	ldr	r7, [pc, #228]	; 2a2f4 <conf_set_listen_port_both+0x148>
   2a20c:	ldr	r7, [pc, r7]
   2a210:	cmp	r7, #0
   2a214:	beq	2a228 <conf_set_listen_port_both+0x7c>
   2a218:	cmp	r4, #0
   2a21c:	beq	2a238 <conf_set_listen_port_both+0x8c>
   2a220:	mov	r0, r9
   2a224:	b	2a1ec <conf_set_listen_port_both+0x40>
   2a228:	cmp	r4, #0
   2a22c:	beq	2a27c <conf_set_listen_port_both+0xd0>
   2a230:	mov	r0, r8
   2a234:	b	2a1ec <conf_set_listen_port_both+0x40>
   2a238:	mov	r0, r7
   2a23c:	mov	r1, #58	; 0x3a
   2a240:	bl	dce8 <strchr@plt>
   2a244:	ldr	r1, [r6, #8]
   2a248:	ldr	r2, [pc, #184]	; 2a308 <conf_set_listen_port_both+0x15c>
   2a24c:	ldr	r2, [pc, r2]
   2a250:	ldr	r3, [pc, #180]	; 2a30c <conf_set_listen_port_both+0x160>
   2a254:	ldr	r3, [pc, r3]
   2a258:	orrs	r2, r2, r5
   2a25c:	movwne	r2, #1
   2a260:	stm	sp, {r2, r3}
   2a264:	cmp	r0, #0
   2a268:	mov	r2, #10
   2a26c:	movweq	r2, #2
   2a270:	mov	r0, r1
   2a274:	mov	r1, r7
   2a278:	b	2a2d4 <conf_set_listen_port_both+0x128>
   2a27c:	ldr	r0, [r6, #8]
   2a280:	ldr	r1, [pc, #112]	; 2a2f8 <conf_set_listen_port_both+0x14c>
   2a284:	ldr	r1, [pc, r1]
   2a288:	ldr	r2, [pc, #108]	; 2a2fc <conf_set_listen_port_both+0x150>
   2a28c:	ldr	r2, [pc, r2]
   2a290:	orrs	r1, r1, r5
   2a294:	movwne	r1, #1
   2a298:	stm	sp, {r1, r2}
   2a29c:	mov	r1, #0
   2a2a0:	mov	r2, #2
   2a2a4:	mov	r3, r5
   2a2a8:	bl	e330 <add_tcp_listener@plt>
   2a2ac:	ldr	r0, [r6, #8]
   2a2b0:	ldr	r1, [pc, #72]	; 2a300 <conf_set_listen_port_both+0x154>
   2a2b4:	ldr	r1, [pc, r1]
   2a2b8:	ldr	r2, [pc, #68]	; 2a304 <conf_set_listen_port_both+0x158>
   2a2bc:	ldr	r2, [pc, r2]
   2a2c0:	orrs	r1, r1, r5
   2a2c4:	movwne	r1, #1
   2a2c8:	stm	sp, {r1, r2}
   2a2cc:	mov	r1, #0
   2a2d0:	mov	r2, #10
   2a2d4:	mov	r3, r5
   2a2d8:	bl	e330 <add_tcp_listener@plt>
   2a2dc:	b	2a1f0 <conf_set_listen_port_both+0x44>
   2a2e0:	sub	sp, fp, #28
   2a2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a2e8:	.word	0x0001a103
   2a2ec:	.word	0x0001a12d
   2a2f0:	.word	0x0001a0bc
   2a2f4:	.word	0x0003bfa8
   2a2f8:	.word	0x0003252c
   2a2fc:	.word	0x0003bf30
   2a300:	.word	0x000324fc
   2a304:	.word	0x0003bf00
   2a308:	.word	0x00032564
   2a30c:	.word	0x0003bf68

0002a310 <conf_set_auth_user>:
   2a310:	push	{r4, r5, r6, sl, fp, lr}
   2a314:	add	fp, sp, #16
   2a318:	mov	r5, r0
   2a31c:	ldr	r4, [pc, #168]	; 2a3cc <conf_set_auth_user+0xbc>
   2a320:	ldr	r4, [pc, r4]
   2a324:	ldr	r0, [r4, #16]
   2a328:	cmp	r0, #0
   2a32c:	beq	2a34c <conf_set_auth_user+0x3c>
   2a330:	ldrb	r0, [r0]
   2a334:	cmp	r0, #0
   2a338:	beq	2a34c <conf_set_auth_user+0x3c>
   2a33c:	bl	cfbc <make_conf@plt>
   2a340:	mov	r4, r0
   2a344:	mov	r0, #2
   2a348:	str	r0, [r4]
   2a34c:	mov	r0, r5
   2a350:	mov	r1, #64	; 0x40
   2a354:	bl	dce8 <strchr@plt>
   2a358:	cmp	r0, #0
   2a35c:	beq	2a380 <conf_set_auth_user+0x70>
   2a360:	mov	r6, r0
   2a364:	mov	r0, #0
   2a368:	strb	r0, [r6], #1
   2a36c:	mov	r0, r5
   2a370:	bl	27068 <rb_strdup>
   2a374:	str	r0, [r4, #28]
   2a378:	mov	r0, r6
   2a37c:	b	2a394 <conf_set_auth_user+0x84>
   2a380:	ldr	r0, [pc, #72]	; 2a3d0 <conf_set_auth_user+0xc0>
   2a384:	add	r0, pc, r0
   2a388:	bl	27068 <rb_strdup>
   2a38c:	str	r0, [r4, #28]
   2a390:	mov	r0, r5
   2a394:	bl	27068 <rb_strdup>
   2a398:	str	r0, [r4, #16]
   2a39c:	ldr	r0, [pc, #48]	; 2a3d4 <conf_set_auth_user+0xc4>
   2a3a0:	ldr	r0, [pc, r0]
   2a3a4:	cmp	r0, r4
   2a3a8:	beq	2a3c8 <conf_set_auth_user+0xb8>
   2a3ac:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2a3b0:	mov	r1, r0
   2a3b4:	ldr	r2, [pc, #28]	; 2a3d8 <conf_set_auth_user+0xc8>
   2a3b8:	add	r2, pc, r2
   2a3bc:	mov	r0, r4
   2a3c0:	pop	{r4, r5, r6, sl, fp, lr}
   2a3c4:	b	269e0 <rb_dlinkAdd>
   2a3c8:	pop	{r4, r5, r6, sl, fp, pc}
   2a3cc:	.word	0x0003bea0
   2a3d0:	.word	0x00017319
   2a3d4:	.word	0x0003be20
   2a3d8:	.word	0x0003be0c

0002a3dc <conf_set_auth_auth_user>:
   2a3dc:	push	{r4, r5, r6, sl, fp, lr}
   2a3e0:	add	fp, sp, #16
   2a3e4:	mov	r4, r0
   2a3e8:	ldr	r6, [pc, #68]	; 2a434 <conf_set_auth_auth_user+0x58>
   2a3ec:	ldr	r6, [pc, r6]
   2a3f0:	ldr	r5, [r6, #24]
   2a3f4:	cmp	r5, #0
   2a3f8:	beq	2a414 <conf_set_auth_auth_user+0x38>
   2a3fc:	mov	r0, r5
   2a400:	bl	dc94 <strlen@plt>
   2a404:	mov	r2, r0
   2a408:	mov	r0, r5
   2a40c:	mov	r1, #0
   2a410:	bl	df28 <memset@plt>
   2a414:	ldr	r0, [r6, #24]
   2a418:	bl	26d8c <rb_free>
   2a41c:	mov	r0, r4
   2a420:	bl	27068 <rb_strdup>
   2a424:	ldr	r1, [pc, #12]	; 2a438 <conf_set_auth_auth_user+0x5c>
   2a428:	ldr	r1, [pc, r1]
   2a42c:	str	r0, [r1, #24]
   2a430:	pop	{r4, r5, r6, sl, fp, pc}
   2a434:	.word	0x0003bdd4
   2a438:	.word	0x0003bd98

0002a43c <conf_set_auth_passwd>:
   2a43c:	push	{r4, r5, r6, sl, fp, lr}
   2a440:	add	fp, sp, #16
   2a444:	mov	r4, r0
   2a448:	ldr	r6, [pc, #68]	; 2a494 <conf_set_auth_passwd+0x58>
   2a44c:	ldr	r6, [pc, r6]
   2a450:	ldr	r5, [r6, #20]
   2a454:	cmp	r5, #0
   2a458:	beq	2a474 <conf_set_auth_passwd+0x38>
   2a45c:	mov	r0, r5
   2a460:	bl	dc94 <strlen@plt>
   2a464:	mov	r2, r0
   2a468:	mov	r0, r5
   2a46c:	mov	r1, #0
   2a470:	bl	df28 <memset@plt>
   2a474:	ldr	r0, [r6, #20]
   2a478:	bl	26d8c <rb_free>
   2a47c:	mov	r0, r4
   2a480:	bl	27068 <rb_strdup>
   2a484:	ldr	r1, [pc, #12]	; 2a498 <conf_set_auth_passwd+0x5c>
   2a488:	ldr	r1, [pc, r1]
   2a48c:	str	r0, [r1, #20]
   2a490:	pop	{r4, r5, r6, sl, fp, pc}
   2a494:	.word	0x0003bd74
   2a498:	.word	0x0003bd38

0002a49c <conf_set_auth_class>:
   2a49c:	push	{r4, sl, fp, lr}
   2a4a0:	add	fp, sp, #8
   2a4a4:	mov	r4, r0
   2a4a8:	ldr	r0, [pc, #32]	; 2a4d0 <conf_set_auth_class+0x34>
   2a4ac:	ldr	r0, [pc, r0]
   2a4b0:	ldr	r0, [r0, #48]	; 0x30
   2a4b4:	bl	26d8c <rb_free>
   2a4b8:	mov	r0, r4
   2a4bc:	bl	27068 <rb_strdup>
   2a4c0:	ldr	r1, [pc, #12]	; 2a4d4 <conf_set_auth_class+0x38>
   2a4c4:	ldr	r1, [pc, r1]
   2a4c8:	str	r0, [r1, #48]	; 0x30
   2a4cc:	pop	{r4, sl, fp, pc}
   2a4d0:	.word	0x0003bd14
   2a4d4:	.word	0x0003bcfc

0002a4d8 <conf_set_auth_spoof>:
   2a4d8:	push	{r4, r5, r6, sl, fp, lr}
   2a4dc:	add	fp, sp, #16
   2a4e0:	mov	r4, r0
   2a4e4:	mov	r1, #64	; 0x40
   2a4e8:	bl	dce8 <strchr@plt>
   2a4ec:	cmp	r0, #0
   2a4f0:	beq	2a548 <conf_set_auth_spoof+0x70>
   2a4f4:	mov	r6, r0
   2a4f8:	mov	r0, #0
   2a4fc:	mov	r5, r6
   2a500:	strb	r0, [r5], #1
   2a504:	cmp	r4, #0
   2a508:	beq	2a538 <conf_set_auth_spoof+0x60>
   2a50c:	ldrb	r0, [r4]
   2a510:	cmp	r0, #0
   2a514:	beq	2a538 <conf_set_auth_spoof+0x60>
   2a518:	mov	r0, r4
   2a51c:	bl	dc94 <strlen@plt>
   2a520:	cmp	r0, #11
   2a524:	bcc	2a590 <conf_set_auth_spoof+0xb8>
   2a528:	ldr	r0, [pc, #236]	; 2a61c <conf_set_auth_spoof+0x144>
   2a52c:	add	r0, pc, r0
   2a530:	pop	{r4, r5, r6, sl, fp, lr}
   2a534:	b	26d98 <conf_report_error>
   2a538:	ldr	r0, [pc, #216]	; 2a618 <conf_set_auth_spoof+0x140>
   2a53c:	add	r0, pc, r0
   2a540:	pop	{r4, r5, r6, sl, fp, lr}
   2a544:	b	26d98 <conf_report_error>
   2a548:	cmp	r4, #0
   2a54c:	mov	r5, r4
   2a550:	beq	2a580 <conf_set_auth_spoof+0xa8>
   2a554:	ldrb	r0, [r5]
   2a558:	cmp	r0, #0
   2a55c:	beq	2a580 <conf_set_auth_spoof+0xa8>
   2a560:	mov	r0, r5
   2a564:	bl	dc94 <strlen@plt>
   2a568:	cmp	r0, #64	; 0x40
   2a56c:	bcc	2a5ac <conf_set_auth_spoof+0xd4>
   2a570:	ldr	r0, [pc, #176]	; 2a628 <conf_set_auth_spoof+0x150>
   2a574:	add	r0, pc, r0
   2a578:	pop	{r4, r5, r6, sl, fp, lr}
   2a57c:	b	26d98 <conf_report_error>
   2a580:	ldr	r0, [pc, #156]	; 2a624 <conf_set_auth_spoof+0x14c>
   2a584:	add	r0, pc, r0
   2a588:	pop	{r4, r5, r6, sl, fp, lr}
   2a58c:	b	26d98 <conf_report_error>
   2a590:	mov	r0, r4
   2a594:	bl	e078 <valid_username@plt>
   2a598:	cmp	r0, #0
   2a59c:	beq	2a5f0 <conf_set_auth_spoof+0x118>
   2a5a0:	mov	r0, #64	; 0x40
   2a5a4:	strb	r0, [r6]
   2a5a8:	b	2a554 <conf_set_auth_spoof+0x7c>
   2a5ac:	mov	r0, r5
   2a5b0:	bl	e084 <valid_hostname@plt>
   2a5b4:	cmp	r0, #0
   2a5b8:	beq	2a600 <conf_set_auth_spoof+0x128>
   2a5bc:	ldr	r0, [pc, #76]	; 2a610 <conf_set_auth_spoof+0x138>
   2a5c0:	ldr	r0, [pc, r0]
   2a5c4:	ldr	r0, [r0, #12]
   2a5c8:	bl	26d8c <rb_free>
   2a5cc:	mov	r0, r4
   2a5d0:	bl	27068 <rb_strdup>
   2a5d4:	ldr	r1, [pc, #56]	; 2a614 <conf_set_auth_spoof+0x13c>
   2a5d8:	ldr	r1, [pc, r1]
   2a5dc:	str	r0, [r1, #12]
   2a5e0:	ldr	r0, [r1, #4]
   2a5e4:	orr	r0, r0, #512	; 0x200
   2a5e8:	str	r0, [r1, #4]
   2a5ec:	pop	{r4, r5, r6, sl, fp, pc}
   2a5f0:	ldr	r0, [pc, #40]	; 2a620 <conf_set_auth_spoof+0x148>
   2a5f4:	add	r0, pc, r0
   2a5f8:	pop	{r4, r5, r6, sl, fp, lr}
   2a5fc:	b	26d98 <conf_report_error>
   2a600:	ldr	r0, [pc, #36]	; 2a62c <conf_set_auth_spoof+0x154>
   2a604:	add	r0, pc, r0
   2a608:	pop	{r4, r5, r6, sl, fp, lr}
   2a60c:	b	26d98 <conf_report_error>
   2a610:	.word	0x0003bc00
   2a614:	.word	0x0003bbe8
   2a618:	.word	0x00019eb7
   2a61c:	.word	0x00019ee5
   2a620:	.word	0x00019e44
   2a624:	.word	0x00019ed6
   2a628:	.word	0x00019f03
   2a62c:	.word	0x00019e99

0002a630 <conf_set_auth_redir_serv>:
   2a630:	push	{r4, sl, fp, lr}
   2a634:	add	fp, sp, #8
   2a638:	mov	r4, r0
   2a63c:	ldr	r1, [pc, #44]	; 2a670 <conf_set_auth_redir_serv+0x40>
   2a640:	ldr	r1, [pc, r1]
   2a644:	ldr	r2, [r1, #4]
   2a648:	ldr	r0, [r1, #12]
   2a64c:	orr	r2, r2, #2048	; 0x800
   2a650:	str	r2, [r1, #4]
   2a654:	bl	26d8c <rb_free>
   2a658:	mov	r0, r4
   2a65c:	bl	27068 <rb_strdup>
   2a660:	ldr	r1, [pc, #12]	; 2a674 <conf_set_auth_redir_serv+0x44>
   2a664:	ldr	r1, [pc, r1]
   2a668:	str	r0, [r1, #12]
   2a66c:	pop	{r4, sl, fp, pc}
   2a670:	.word	0x0003bb80
   2a674:	.word	0x0003bb5c

0002a678 <conf_set_auth_redir_port>:
   2a678:	ldr	r0, [r0]
   2a67c:	ldr	r1, [pc, #20]	; 2a698 <conf_set_auth_redir_port+0x20>
   2a680:	ldr	r1, [pc, r1]
   2a684:	str	r0, [r1, #32]
   2a688:	ldr	r0, [r1, #4]
   2a68c:	orr	r0, r0, #2048	; 0x800
   2a690:	str	r0, [r1, #4]
   2a694:	bx	lr
   2a698:	.word	0x0003bb40

0002a69c <conf_set_auth_flags>:
   2a69c:	mov	r3, r0
   2a6a0:	ldr	r0, [pc, #24]	; 2a6c0 <conf_set_auth_flags+0x24>
   2a6a4:	ldr	r0, [pc, r0]
   2a6a8:	add	r0, r0, #4
   2a6ac:	ldr	r1, [pc, #16]	; 2a6c4 <conf_set_auth_flags+0x28>
   2a6b0:	add	r1, pc, r1
   2a6b4:	ldr	r2, [pc, #12]	; 2a6c8 <conf_set_auth_flags+0x2c>
   2a6b8:	add	r2, pc, r2
   2a6bc:	b	29dac <set_modes_from_table>
   2a6c0:	.word	0x0003bb1c
   2a6c4:	.word	0x0001c798
   2a6c8:	.word	0x000320fc

0002a6cc <rb_dlinkAddTail>:
   2a6cc:	push	{fp, lr}
   2a6d0:	mov	fp, sp
   2a6d4:	cmp	r1, #0
   2a6d8:	beq	2a740 <rb_dlinkAddTail+0x74>
   2a6dc:	cmp	r2, #0
   2a6e0:	beq	2a760 <rb_dlinkAddTail+0x94>
   2a6e4:	cmp	r0, #0
   2a6e8:	beq	2a780 <rb_dlinkAddTail+0xb4>
   2a6ec:	mov	r3, #0
   2a6f0:	str	r3, [r1, #8]
   2a6f4:	str	r0, [r1]
   2a6f8:	ldr	r0, [r2, #4]
   2a6fc:	str	r0, [r1, #4]
   2a700:	ldr	r0, [r2, #4]
   2a704:	cmp	r0, #0
   2a708:	beq	2a718 <rb_dlinkAddTail+0x4c>
   2a70c:	add	r0, r0, #8
   2a710:	str	r1, [r0]
   2a714:	b	2a724 <rb_dlinkAddTail+0x58>
   2a718:	ldr	r0, [r2]
   2a71c:	cmp	r0, #0
   2a720:	beq	2a738 <rb_dlinkAddTail+0x6c>
   2a724:	str	r1, [r2, #4]
   2a728:	ldr	r0, [r2, #8]
   2a72c:	add	r0, r0, #1
   2a730:	str	r0, [r2, #8]
   2a734:	pop	{fp, pc}
   2a738:	mov	r0, r2
   2a73c:	b	2a710 <rb_dlinkAddTail+0x44>
   2a740:	ldr	r0, [pc, #88]	; 2a7a0 <rb_dlinkAddTail+0xd4>
   2a744:	add	r0, pc, r0
   2a748:	ldr	r1, [pc, #84]	; 2a7a4 <rb_dlinkAddTail+0xd8>
   2a74c:	add	r1, pc, r1
   2a750:	ldr	r3, [pc, #80]	; 2a7a8 <rb_dlinkAddTail+0xdc>
   2a754:	add	r3, pc, r3
   2a758:	mov	r2, #211	; 0xd3
   2a75c:	bl	e7e0 <__assert_fail@plt>
   2a760:	ldr	r0, [pc, #68]	; 2a7ac <rb_dlinkAddTail+0xe0>
   2a764:	add	r0, pc, r0
   2a768:	ldr	r1, [pc, #64]	; 2a7b0 <rb_dlinkAddTail+0xe4>
   2a76c:	add	r1, pc, r1
   2a770:	ldr	r3, [pc, #60]	; 2a7b4 <rb_dlinkAddTail+0xe8>
   2a774:	add	r3, pc, r3
   2a778:	mov	r2, #212	; 0xd4
   2a77c:	bl	e7e0 <__assert_fail@plt>
   2a780:	ldr	r0, [pc, #48]	; 2a7b8 <rb_dlinkAddTail+0xec>
   2a784:	add	r0, pc, r0
   2a788:	ldr	r1, [pc, #44]	; 2a7bc <rb_dlinkAddTail+0xf0>
   2a78c:	add	r1, pc, r1
   2a790:	ldr	r3, [pc, #40]	; 2a7c0 <rb_dlinkAddTail+0xf4>
   2a794:	add	r3, pc, r3
   2a798:	mov	r2, #213	; 0xd5
   2a79c:	bl	e7e0 <__assert_fail@plt>
   2a7a0:	.word	0x000161c8
   2a7a4:	.word	0x000161ca
   2a7a8:	.word	0x000161de
   2a7ac:	.word	0x0001ba31
   2a7b0:	.word	0x000161aa
   2a7b4:	.word	0x000161be
   2a7b8:	.word	0x000161ed
   2a7bc:	.word	0x0001618a
   2a7c0:	.word	0x0001619e

0002a7c4 <conf_set_connect_send_password>:
   2a7c4:	push	{r4, r5, r6, sl, fp, lr}
   2a7c8:	add	fp, sp, #16
   2a7cc:	mov	r4, r0
   2a7d0:	ldr	r6, [pc, #68]	; 2a81c <conf_set_connect_send_password+0x58>
   2a7d4:	ldr	r6, [pc, r6]
   2a7d8:	ldr	r5, [r6, #276]	; 0x114
   2a7dc:	cmp	r5, #0
   2a7e0:	beq	2a804 <conf_set_connect_send_password+0x40>
   2a7e4:	mov	r0, r5
   2a7e8:	bl	dc94 <strlen@plt>
   2a7ec:	mov	r2, r0
   2a7f0:	mov	r0, r5
   2a7f4:	mov	r1, #0
   2a7f8:	bl	df28 <memset@plt>
   2a7fc:	ldr	r0, [r6, #276]	; 0x114
   2a800:	bl	26d8c <rb_free>
   2a804:	mov	r0, r4
   2a808:	bl	27068 <rb_strdup>
   2a80c:	ldr	r1, [pc, #12]	; 2a820 <conf_set_connect_send_password+0x5c>
   2a810:	ldr	r1, [pc, r1]
   2a814:	str	r0, [r1, #276]	; 0x114
   2a818:	pop	{r4, r5, r6, sl, fp, pc}
   2a81c:	.word	0x0003ba0c
   2a820:	.word	0x0003b9d0

0002a824 <conf_set_connect_accept_password>:
   2a824:	push	{r4, r5, r6, sl, fp, lr}
   2a828:	add	fp, sp, #16
   2a82c:	mov	r4, r0
   2a830:	ldr	r6, [pc, #68]	; 2a87c <conf_set_connect_accept_password+0x58>
   2a834:	ldr	r6, [pc, r6]
   2a838:	ldr	r5, [r6, #272]	; 0x110
   2a83c:	cmp	r5, #0
   2a840:	beq	2a864 <conf_set_connect_accept_password+0x40>
   2a844:	mov	r0, r5
   2a848:	bl	dc94 <strlen@plt>
   2a84c:	mov	r2, r0
   2a850:	mov	r0, r5
   2a854:	mov	r1, #0
   2a858:	bl	df28 <memset@plt>
   2a85c:	ldr	r0, [r6, #272]	; 0x110
   2a860:	bl	26d8c <rb_free>
   2a864:	mov	r0, r4
   2a868:	bl	27068 <rb_strdup>
   2a86c:	ldr	r1, [pc, #12]	; 2a880 <conf_set_connect_accept_password+0x5c>
   2a870:	ldr	r1, [pc, r1]
   2a874:	str	r0, [r1, #272]	; 0x110
   2a878:	pop	{r4, r5, r6, sl, fp, pc}
   2a87c:	.word	0x0003b9ac
   2a880:	.word	0x0003b970

0002a884 <conf_set_connect_fingerprint>:
   2a884:	push	{r4, sl, fp, lr}
   2a888:	add	fp, sp, #8
   2a88c:	mov	r4, r0
   2a890:	ldr	r0, [pc, #48]	; 2a8c8 <conf_set_connect_fingerprint+0x44>
   2a894:	ldr	r0, [pc, r0]
   2a898:	ldr	r0, [r0, #280]	; 0x118
   2a89c:	cmp	r0, #0
   2a8a0:	blne	26d8c <rb_free>
   2a8a4:	mov	r0, r4
   2a8a8:	bl	27068 <rb_strdup>
   2a8ac:	ldr	r1, [pc, #24]	; 2a8cc <conf_set_connect_fingerprint+0x48>
   2a8b0:	ldr	r1, [pc, r1]
   2a8b4:	str	r0, [r1, #280]	; 0x118
   2a8b8:	ldr	r0, [r1, #288]	; 0x120
   2a8bc:	orr	r0, r0, #64	; 0x40
   2a8c0:	str	r0, [r1, #288]	; 0x120
   2a8c4:	pop	{r4, sl, fp, pc}
   2a8c8:	.word	0x0003b94c
   2a8cc:	.word	0x0003b930

0002a8d0 <conf_set_connect_flags>:
   2a8d0:	mov	r3, r0
   2a8d4:	ldr	r0, [pc, #24]	; 2a8f4 <conf_set_connect_flags+0x24>
   2a8d8:	ldr	r0, [pc, r0]
   2a8dc:	add	r0, r0, #288	; 0x120
   2a8e0:	ldr	r1, [pc, #16]	; 2a8f8 <conf_set_connect_flags+0x28>
   2a8e4:	add	r1, pc, r1
   2a8e8:	ldr	r2, [pc, #12]	; 2a8fc <conf_set_connect_flags+0x2c>
   2a8ec:	add	r2, pc, r2
   2a8f0:	b	29dac <set_modes_from_table>
   2a8f4:	.word	0x0003b908
   2a8f8:	.word	0x0001c564
   2a8fc:	.word	0x00032010

0002a900 <conf_set_connect_host>:
   2a900:	push	{r4, sl, fp, lr}
   2a904:	add	fp, sp, #8
   2a908:	sub	sp, sp, #128	; 0x80
   2a90c:	mov	r4, r0
   2a910:	mov	r1, sp
   2a914:	bl	e000 <rb_inet_pton_sock@plt>
   2a918:	cmp	r0, #0
   2a91c:	ble	2a944 <conf_set_connect_host+0x44>
   2a920:	ldrh	r0, [sp]
   2a924:	cmp	r0, #10
   2a928:	beq	2a970 <conf_set_connect_host+0x70>
   2a92c:	cmp	r0, #2
   2a930:	bne	2a990 <conf_set_connect_host+0x90>
   2a934:	ldr	r0, [pc, #116]	; 2a9b0 <conf_set_connect_host+0xb0>
   2a938:	ldr	r0, [pc, r0]
   2a93c:	add	r0, r0, #8
   2a940:	b	2a97c <conf_set_connect_host+0x7c>
   2a944:	ldr	r0, [pc, #92]	; 2a9a8 <conf_set_connect_host+0xa8>
   2a948:	ldr	r0, [pc, r0]
   2a94c:	ldr	r0, [r0, #4]
   2a950:	bl	26d8c <rb_free>
   2a954:	mov	r0, r4
   2a958:	bl	27068 <rb_strdup>
   2a95c:	ldr	r1, [pc, #72]	; 2a9ac <conf_set_connect_host+0xac>
   2a960:	ldr	r1, [pc, r1]
   2a964:	str	r0, [r1, #4]
   2a968:	sub	sp, fp, #8
   2a96c:	pop	{r4, sl, fp, pc}
   2a970:	ldr	r0, [pc, #60]	; 2a9b4 <conf_set_connect_host+0xb4>
   2a974:	ldr	r0, [pc, r0]
   2a978:	add	r0, r0, #140	; 0x8c
   2a97c:	mov	r1, sp
   2a980:	mov	r2, #128	; 0x80
   2a984:	bl	d40c <memcpy@plt>
   2a988:	sub	sp, fp, #8
   2a98c:	pop	{r4, sl, fp, pc}
   2a990:	ldr	r0, [pc, #32]	; 2a9b8 <conf_set_connect_host+0xb8>
   2a994:	add	r0, pc, r0
   2a998:	mov	r1, r4
   2a99c:	bl	d400 <conf_report_error@plt>
   2a9a0:	sub	sp, fp, #8
   2a9a4:	pop	{r4, sl, fp, pc}
   2a9a8:	.word	0x0003b898
   2a9ac:	.word	0x0003b880
   2a9b0:	.word	0x0003b8a8
   2a9b4:	.word	0x0003b86c
   2a9b8:	.word	0x00019e46

0002a9bc <conf_set_connect_vhost>:
   2a9bc:	push	{r4, sl, fp, lr}
   2a9c0:	add	fp, sp, #8
   2a9c4:	sub	sp, sp, #128	; 0x80
   2a9c8:	mov	r4, r0
   2a9cc:	mov	r1, sp
   2a9d0:	bl	e000 <rb_inet_pton_sock@plt>
   2a9d4:	cmp	r0, #0
   2a9d8:	ble	2aa00 <conf_set_connect_vhost+0x44>
   2a9dc:	ldrh	r0, [sp]
   2a9e0:	cmp	r0, #10
   2a9e4:	beq	2aa2c <conf_set_connect_vhost+0x70>
   2a9e8:	cmp	r0, #2
   2a9ec:	bne	2aa4c <conf_set_connect_vhost+0x90>
   2a9f0:	ldr	r0, [pc, #116]	; 2aa6c <conf_set_connect_vhost+0xb0>
   2a9f4:	ldr	r0, [pc, r0]
   2a9f8:	add	r0, r0, #308	; 0x134
   2a9fc:	b	2aa38 <conf_set_connect_vhost+0x7c>
   2aa00:	ldr	r0, [pc, #92]	; 2aa64 <conf_set_connect_vhost+0xa8>
   2aa04:	ldr	r0, [pc, r0]
   2aa08:	ldr	r0, [r0, #304]	; 0x130
   2aa0c:	bl	26d8c <rb_free>
   2aa10:	mov	r0, r4
   2aa14:	bl	27068 <rb_strdup>
   2aa18:	ldr	r1, [pc, #72]	; 2aa68 <conf_set_connect_vhost+0xac>
   2aa1c:	ldr	r1, [pc, r1]
   2aa20:	str	r0, [r1, #304]	; 0x130
   2aa24:	sub	sp, fp, #8
   2aa28:	pop	{r4, sl, fp, pc}
   2aa2c:	ldr	r0, [pc, #60]	; 2aa70 <conf_set_connect_vhost+0xb4>
   2aa30:	ldr	r0, [pc, r0]
   2aa34:	add	r0, r0, #440	; 0x1b8
   2aa38:	mov	r1, sp
   2aa3c:	mov	r2, #128	; 0x80
   2aa40:	bl	d40c <memcpy@plt>
   2aa44:	sub	sp, fp, #8
   2aa48:	pop	{r4, sl, fp, pc}
   2aa4c:	ldr	r0, [pc, #32]	; 2aa74 <conf_set_connect_vhost+0xb8>
   2aa50:	add	r0, pc, r0
   2aa54:	mov	r1, r4
   2aa58:	bl	d400 <conf_report_error@plt>
   2aa5c:	sub	sp, fp, #8
   2aa60:	pop	{r4, sl, fp, pc}
   2aa64:	.word	0x0003b7dc
   2aa68:	.word	0x0003b7c4
   2aa6c:	.word	0x0003b7ec
   2aa70:	.word	0x0003b7b0
   2aa74:	.word	0x00019dbe

0002aa78 <conf_set_connect_port>:
   2aa78:	ldr	r0, [r0]
   2aa7c:	cmp	r0, #1
   2aa80:	movwlt	r0, #6667	; 0x1a0b
   2aa84:	ldr	r1, [pc, #8]	; 2aa94 <conf_set_connect_port+0x1c>
   2aa88:	ldr	r1, [pc, r1]
   2aa8c:	str	r0, [r1, #284]	; 0x11c
   2aa90:	bx	lr
   2aa94:	.word	0x0003b758

0002aa98 <conf_set_connect_aftype>:
   2aa98:	push	{r4, sl, fp, lr}
   2aa9c:	add	fp, sp, #8
   2aaa0:	mov	r4, r0
   2aaa4:	ldr	r1, [pc, #96]	; 2ab0c <conf_set_connect_aftype+0x74>
   2aaa8:	add	r1, pc, r1
   2aaac:	bl	d340 <rb_strcasecmp@plt>
   2aab0:	cmp	r0, #0
   2aab4:	beq	2aae4 <conf_set_connect_aftype+0x4c>
   2aab8:	ldr	r1, [pc, #84]	; 2ab14 <conf_set_connect_aftype+0x7c>
   2aabc:	add	r1, pc, r1
   2aac0:	mov	r0, r4
   2aac4:	bl	d340 <rb_strcasecmp@plt>
   2aac8:	cmp	r0, #0
   2aacc:	beq	2aaf8 <conf_set_connect_aftype+0x60>
   2aad0:	ldr	r0, [pc, #68]	; 2ab1c <conf_set_connect_aftype+0x84>
   2aad4:	add	r0, pc, r0
   2aad8:	mov	r1, r4
   2aadc:	pop	{r4, sl, fp, lr}
   2aae0:	b	26d98 <conf_report_error>
   2aae4:	ldr	r0, [pc, #36]	; 2ab10 <conf_set_connect_aftype+0x78>
   2aae8:	ldr	r0, [pc, r0]
   2aaec:	mov	r1, #2
   2aaf0:	str	r1, [r0, #300]	; 0x12c
   2aaf4:	pop	{r4, sl, fp, pc}
   2aaf8:	ldr	r0, [pc, #24]	; 2ab18 <conf_set_connect_aftype+0x80>
   2aafc:	ldr	r0, [pc, r0]
   2ab00:	mov	r1, #10
   2ab04:	str	r1, [r0, #300]	; 0x12c
   2ab08:	pop	{r4, sl, fp, pc}
   2ab0c:	.word	0x0001ab58
   2ab10:	.word	0x0003b6f8
   2ab14:	.word	0x0001ab33
   2ab18:	.word	0x0003b6e4
   2ab1c:	.word	0x00019d6f

0002ab20 <conf_set_connect_hub_mask>:
   2ab20:	push	{r4, r5, fp, lr}
   2ab24:	add	fp, sp, #8
   2ab28:	mov	r4, r0
   2ab2c:	ldr	r0, [pc, #100]	; 2ab98 <conf_set_connect_hub_mask+0x78>
   2ab30:	ldr	r0, [pc, r0]
   2ab34:	ldr	r0, [r0]
   2ab38:	cmp	r0, #0
   2ab3c:	popeq	{r4, r5, fp, pc}
   2ab40:	ldrb	r0, [r0]
   2ab44:	cmp	r0, #0
   2ab48:	beq	2ab94 <conf_set_connect_hub_mask+0x74>
   2ab4c:	bl	d3dc <make_remote_conf@plt>
   2ab50:	mov	r5, r0
   2ab54:	mov	r0, #1
   2ab58:	str	r0, [r5, #12]
   2ab5c:	mov	r0, r4
   2ab60:	bl	27068 <rb_strdup>
   2ab64:	str	r0, [r5, #4]
   2ab68:	ldr	r0, [pc, #44]	; 2ab9c <conf_set_connect_hub_mask+0x7c>
   2ab6c:	ldr	r0, [pc, r0]
   2ab70:	ldr	r0, [r0]
   2ab74:	bl	27068 <rb_strdup>
   2ab78:	str	r0, [r5, #8]
   2ab7c:	add	r1, r5, #16
   2ab80:	ldr	r2, [pc, #24]	; 2aba0 <conf_set_connect_hub_mask+0x80>
   2ab84:	ldr	r2, [pc, r2]
   2ab88:	mov	r0, r5
   2ab8c:	pop	{r4, r5, fp, lr}
   2ab90:	b	269e0 <rb_dlinkAdd>
   2ab94:	pop	{r4, r5, fp, pc}
   2ab98:	.word	0x0003b6b0
   2ab9c:	.word	0x0003b674
   2aba0:	.word	0x0002fe40

0002aba4 <conf_set_connect_leaf_mask>:
   2aba4:	push	{r4, r5, fp, lr}
   2aba8:	add	fp, sp, #8
   2abac:	mov	r4, r0
   2abb0:	ldr	r0, [pc, #100]	; 2ac1c <conf_set_connect_leaf_mask+0x78>
   2abb4:	ldr	r0, [pc, r0]
   2abb8:	ldr	r0, [r0]
   2abbc:	cmp	r0, #0
   2abc0:	popeq	{r4, r5, fp, pc}
   2abc4:	ldrb	r0, [r0]
   2abc8:	cmp	r0, #0
   2abcc:	beq	2ac18 <conf_set_connect_leaf_mask+0x74>
   2abd0:	bl	d3dc <make_remote_conf@plt>
   2abd4:	mov	r5, r0
   2abd8:	mov	r0, #2
   2abdc:	str	r0, [r5, #12]
   2abe0:	mov	r0, r4
   2abe4:	bl	27068 <rb_strdup>
   2abe8:	str	r0, [r5, #4]
   2abec:	ldr	r0, [pc, #44]	; 2ac20 <conf_set_connect_leaf_mask+0x7c>
   2abf0:	ldr	r0, [pc, r0]
   2abf4:	ldr	r0, [r0]
   2abf8:	bl	27068 <rb_strdup>
   2abfc:	str	r0, [r5, #8]
   2ac00:	add	r1, r5, #16
   2ac04:	ldr	r2, [pc, #24]	; 2ac24 <conf_set_connect_leaf_mask+0x80>
   2ac08:	ldr	r2, [pc, r2]
   2ac0c:	mov	r0, r5
   2ac10:	pop	{r4, r5, fp, lr}
   2ac14:	b	269e0 <rb_dlinkAdd>
   2ac18:	pop	{r4, r5, fp, pc}
   2ac1c:	.word	0x0003b62c
   2ac20:	.word	0x0003b5f0
   2ac24:	.word	0x0002fdbc

0002ac28 <conf_set_connect_class>:
   2ac28:	push	{r4, sl, fp, lr}
   2ac2c:	add	fp, sp, #8
   2ac30:	mov	r4, r0
   2ac34:	ldr	r0, [pc, #32]	; 2ac5c <conf_set_connect_class+0x34>
   2ac38:	ldr	r0, [pc, r0]
   2ac3c:	ldr	r0, [r0, #572]	; 0x23c
   2ac40:	bl	26d8c <rb_free>
   2ac44:	mov	r0, r4
   2ac48:	bl	27068 <rb_strdup>
   2ac4c:	ldr	r1, [pc, #12]	; 2ac60 <conf_set_connect_class+0x38>
   2ac50:	ldr	r1, [pc, r1]
   2ac54:	str	r0, [r1, #572]	; 0x23c
   2ac58:	pop	{r4, sl, fp, pc}
   2ac5c:	.word	0x0003b5a8
   2ac60:	.word	0x0003b590

0002ac64 <conf_set_general_oper_only_umodes>:
   2ac64:	mov	r3, r0
   2ac68:	ldr	r0, [pc, #24]	; 2ac88 <conf_set_general_oper_only_umodes+0x24>
   2ac6c:	ldr	r0, [pc, r0]
   2ac70:	add	r0, r0, #216	; 0xd8
   2ac74:	ldr	r1, [pc, #16]	; 2ac8c <conf_set_general_oper_only_umodes+0x28>
   2ac78:	add	r1, pc, r1
   2ac7c:	ldr	r2, [pc, #12]	; 2ac90 <conf_set_general_oper_only_umodes+0x2c>
   2ac80:	add	r2, pc, r2
   2ac84:	b	29dac <set_modes_from_table>
   2ac88:	.word	0x0002ff10
   2ac8c:	.word	0x00019436
   2ac90:	.word	0x00031af0

0002ac94 <conf_set_general_oper_umodes>:
   2ac94:	mov	r3, r0
   2ac98:	ldr	r0, [pc, #24]	; 2acb8 <conf_set_general_oper_umodes+0x24>
   2ac9c:	ldr	r0, [pc, r0]
   2aca0:	add	r0, r0, #220	; 0xdc
   2aca4:	ldr	r1, [pc, #16]	; 2acbc <conf_set_general_oper_umodes+0x28>
   2aca8:	add	r1, pc, r1
   2acac:	ldr	r2, [pc, #12]	; 2acc0 <conf_set_general_oper_umodes+0x2c>
   2acb0:	add	r2, pc, r2
   2acb4:	b	29dac <set_modes_from_table>
   2acb8:	.word	0x0002fee0
   2acbc:	.word	0x00019406
   2acc0:	.word	0x00031ac0

0002acc4 <conf_set_general_oper_snomask>:
   2acc4:	push	{fp, lr}
   2acc8:	mov	fp, sp
   2accc:	ldr	lr, [pc, #140]	; 2ad60 <conf_set_general_oper_snomask+0x9c>
   2acd0:	ldr	lr, [pc, lr]
   2acd4:	mov	r1, #0
   2acd8:	str	r1, [lr, #224]	; 0xe0
   2acdc:	mov	r3, #1
   2ace0:	ldr	ip, [pc, #124]	; 2ad64 <conf_set_general_oper_snomask+0xa0>
   2ace4:	ldr	ip, [pc, ip]
   2ace8:	b	2acf4 <conf_set_general_oper_snomask+0x30>
   2acec:	mvn	r3, #0
   2acf0:	add	r0, r0, #1
   2acf4:	mov	r2, r3
   2acf8:	ldrb	r1, [r0]
   2acfc:	cmp	r1, #43	; 0x2b
   2ad00:	mov	r3, #1
   2ad04:	beq	2ad54 <conf_set_general_oper_snomask+0x90>
   2ad08:	cmp	r1, #45	; 0x2d
   2ad0c:	beq	2acec <conf_set_general_oper_snomask+0x28>
   2ad10:	cmp	r1, #0
   2ad14:	beq	2ad5c <conf_set_general_oper_snomask+0x98>
   2ad18:	ldr	r1, [ip, r1, lsl #2]
   2ad1c:	cmp	r1, #0
   2ad20:	beq	2ad50 <conf_set_general_oper_snomask+0x8c>
   2ad24:	cmp	r2, #1
   2ad28:	bne	2ad44 <conf_set_general_oper_snomask+0x80>
   2ad2c:	ldr	r2, [lr, #224]	; 0xe0
   2ad30:	orr	r1, r2, r1
   2ad34:	str	r1, [lr, #224]	; 0xe0
   2ad38:	mov	r3, #1
   2ad3c:	add	r0, r0, #1
   2ad40:	b	2acf4 <conf_set_general_oper_snomask+0x30>
   2ad44:	ldr	r3, [lr, #224]	; 0xe0
   2ad48:	bic	r1, r3, r1
   2ad4c:	str	r1, [lr, #224]	; 0xe0
   2ad50:	mov	r3, r2
   2ad54:	add	r0, r0, #1
   2ad58:	b	2acf4 <conf_set_general_oper_snomask+0x30>
   2ad5c:	pop	{fp, pc}
   2ad60:	.word	0x0002feac
   2ad64:	.word	0x0002fd44

0002ad68 <conf_set_general_compression_level>:
   2ad68:	push	{r4, sl, fp, lr}
   2ad6c:	add	fp, sp, #8
   2ad70:	ldr	r0, [r0]
   2ad74:	ldr	r4, [pc, #48]	; 2adac <conf_set_general_compression_level+0x44>
   2ad78:	ldr	r4, [pc, r4]
   2ad7c:	strb	r0, [r4, #72]	; 0x48
   2ad80:	mvn	r1, #0
   2ad84:	uxtab	r1, r1, r0
   2ad88:	cmp	r1, #9
   2ad8c:	popcc	{r4, sl, fp, pc}
   2ad90:	uxtb	r1, r0
   2ad94:	ldr	r0, [pc, #20]	; 2adb0 <conf_set_general_compression_level+0x48>
   2ad98:	add	r0, pc, r0
   2ad9c:	bl	d400 <conf_report_error@plt>
   2ada0:	mov	r0, #0
   2ada4:	strb	r0, [r4, #72]	; 0x48
   2ada8:	pop	{r4, sl, fp, pc}
   2adac:	.word	0x0002fe04
   2adb0:	.word	0x0001a05a

0002adb4 <conf_set_general_havent_read_conf>:
   2adb4:	push	{fp, lr}
   2adb8:	mov	fp, sp
   2adbc:	ldr	r0, [r0]
   2adc0:	cmp	r0, #0
   2adc4:	popeq	{fp, pc}
   2adc8:	ldr	r0, [pc, #60]	; 2ae0c <conf_set_general_havent_read_conf+0x58>
   2adcc:	add	r0, pc, r0
   2add0:	bl	d400 <conf_report_error@plt>
   2add4:	ldr	r0, [pc, #52]	; 2ae10 <conf_set_general_havent_read_conf+0x5c>
   2add8:	add	r0, pc, r0
   2addc:	bl	d400 <conf_report_error@plt>
   2ade0:	ldr	r0, [pc, #44]	; 2ae14 <conf_set_general_havent_read_conf+0x60>
   2ade4:	add	r0, pc, r0
   2ade8:	bl	d400 <conf_report_error@plt>
   2adec:	ldr	r0, [pc, #36]	; 2ae18 <conf_set_general_havent_read_conf+0x64>
   2adf0:	ldr	r0, [pc, r0]
   2adf4:	ldr	r0, [r0]
   2adf8:	cmp	r0, #0
   2adfc:	beq	2ae04 <conf_set_general_havent_read_conf+0x50>
   2ae00:	pop	{fp, pc}
   2ae04:	mov	r0, #0
   2ae08:	bl	dc28 <exit@plt>
   2ae0c:	.word	0x0001a05e
   2ae10:	.word	0x0001a07e
   2ae14:	.word	0x0001a0c1
   2ae18:	.word	0x0002fc9c

0002ae1c <conf_set_general_hide_error_messages>:
   2ae1c:	push	{r4, sl, fp, lr}
   2ae20:	add	fp, sp, #8
   2ae24:	mov	r4, r0
   2ae28:	ldr	r1, [pc, #140]	; 2aebc <conf_set_general_hide_error_messages+0xa0>
   2ae2c:	add	r1, pc, r1
   2ae30:	bl	d340 <rb_strcasecmp@plt>
   2ae34:	cmp	r0, #0
   2ae38:	beq	2ae80 <conf_set_general_hide_error_messages+0x64>
   2ae3c:	ldr	r1, [pc, #128]	; 2aec4 <conf_set_general_hide_error_messages+0xa8>
   2ae40:	add	r1, pc, r1
   2ae44:	mov	r0, r4
   2ae48:	bl	d340 <rb_strcasecmp@plt>
   2ae4c:	cmp	r0, #0
   2ae50:	beq	2ae94 <conf_set_general_hide_error_messages+0x78>
   2ae54:	ldr	r1, [pc, #112]	; 2aecc <conf_set_general_hide_error_messages+0xb0>
   2ae58:	add	r1, pc, r1
   2ae5c:	mov	r0, r4
   2ae60:	bl	d340 <rb_strcasecmp@plt>
   2ae64:	cmp	r0, #0
   2ae68:	beq	2aea8 <conf_set_general_hide_error_messages+0x8c>
   2ae6c:	ldr	r0, [pc, #96]	; 2aed4 <conf_set_general_hide_error_messages+0xb8>
   2ae70:	add	r0, pc, r0
   2ae74:	mov	r1, r4
   2ae78:	pop	{r4, sl, fp, lr}
   2ae7c:	b	26d98 <conf_report_error>
   2ae80:	ldr	r0, [pc, #56]	; 2aec0 <conf_set_general_hide_error_messages+0xa4>
   2ae84:	ldr	r0, [pc, r0]
   2ae88:	mov	r1, #2
   2ae8c:	str	r1, [r0, #208]	; 0xd0
   2ae90:	pop	{r4, sl, fp, pc}
   2ae94:	ldr	r0, [pc, #44]	; 2aec8 <conf_set_general_hide_error_messages+0xac>
   2ae98:	ldr	r0, [pc, r0]
   2ae9c:	mov	r1, #1
   2aea0:	str	r1, [r0, #208]	; 0xd0
   2aea4:	pop	{r4, sl, fp, pc}
   2aea8:	ldr	r0, [pc, #32]	; 2aed0 <conf_set_general_hide_error_messages+0xb4>
   2aeac:	ldr	r0, [pc, r0]
   2aeb0:	mov	r1, #0
   2aeb4:	str	r1, [r0, #208]	; 0xd0
   2aeb8:	pop	{r4, sl, fp, pc}
   2aebc:	.word	0x00017816
   2aec0:	.word	0x0002fcf8
   2aec4:	.word	0x00016f63
   2aec8:	.word	0x0002fce4
   2aecc:	.word	0x000177ee
   2aed0:	.word	0x0002fcd0
   2aed4:	.word	0x0001a07e

0002aed8 <conf_set_general_stats_k_oper_only>:
   2aed8:	push	{r4, sl, fp, lr}
   2aedc:	add	fp, sp, #8
   2aee0:	mov	r4, r0
   2aee4:	ldr	r1, [pc, #140]	; 2af78 <conf_set_general_stats_k_oper_only+0xa0>
   2aee8:	add	r1, pc, r1
   2aeec:	bl	d340 <rb_strcasecmp@plt>
   2aef0:	cmp	r0, #0
   2aef4:	beq	2af3c <conf_set_general_stats_k_oper_only+0x64>
   2aef8:	ldr	r1, [pc, #128]	; 2af80 <conf_set_general_stats_k_oper_only+0xa8>
   2aefc:	add	r1, pc, r1
   2af00:	mov	r0, r4
   2af04:	bl	d340 <rb_strcasecmp@plt>
   2af08:	cmp	r0, #0
   2af0c:	beq	2af50 <conf_set_general_stats_k_oper_only+0x78>
   2af10:	ldr	r1, [pc, #112]	; 2af88 <conf_set_general_stats_k_oper_only+0xb0>
   2af14:	add	r1, pc, r1
   2af18:	mov	r0, r4
   2af1c:	bl	d340 <rb_strcasecmp@plt>
   2af20:	cmp	r0, #0
   2af24:	beq	2af64 <conf_set_general_stats_k_oper_only+0x8c>
   2af28:	ldr	r0, [pc, #96]	; 2af90 <conf_set_general_stats_k_oper_only+0xb8>
   2af2c:	add	r0, pc, r0
   2af30:	mov	r1, r4
   2af34:	pop	{r4, sl, fp, lr}
   2af38:	b	26d98 <conf_report_error>
   2af3c:	ldr	r0, [pc, #56]	; 2af7c <conf_set_general_stats_k_oper_only+0xa4>
   2af40:	ldr	r0, [pc, r0]
   2af44:	mov	r1, #2
   2af48:	str	r1, [r0, #164]	; 0xa4
   2af4c:	pop	{r4, sl, fp, pc}
   2af50:	ldr	r0, [pc, #44]	; 2af84 <conf_set_general_stats_k_oper_only+0xac>
   2af54:	ldr	r0, [pc, r0]
   2af58:	mov	r1, #1
   2af5c:	str	r1, [r0, #164]	; 0xa4
   2af60:	pop	{r4, sl, fp, pc}
   2af64:	ldr	r0, [pc, #32]	; 2af8c <conf_set_general_stats_k_oper_only+0xb4>
   2af68:	ldr	r0, [pc, r0]
   2af6c:	mov	r1, #0
   2af70:	str	r1, [r0, #164]	; 0xa4
   2af74:	pop	{r4, sl, fp, pc}
   2af78:	.word	0x0001775a
   2af7c:	.word	0x0002fc3c
   2af80:	.word	0x0001a029
   2af84:	.word	0x0002fc28
   2af88:	.word	0x00017732
   2af8c:	.word	0x0002fc14
   2af90:	.word	0x0001a000

0002af94 <conf_set_general_stats_i_oper_only>:
   2af94:	push	{r4, sl, fp, lr}
   2af98:	add	fp, sp, #8
   2af9c:	mov	r4, r0
   2afa0:	ldr	r1, [pc, #140]	; 2b034 <conf_set_general_stats_i_oper_only+0xa0>
   2afa4:	add	r1, pc, r1
   2afa8:	bl	d340 <rb_strcasecmp@plt>
   2afac:	cmp	r0, #0
   2afb0:	beq	2aff8 <conf_set_general_stats_i_oper_only+0x64>
   2afb4:	ldr	r1, [pc, #128]	; 2b03c <conf_set_general_stats_i_oper_only+0xa8>
   2afb8:	add	r1, pc, r1
   2afbc:	mov	r0, r4
   2afc0:	bl	d340 <rb_strcasecmp@plt>
   2afc4:	cmp	r0, #0
   2afc8:	beq	2b00c <conf_set_general_stats_i_oper_only+0x78>
   2afcc:	ldr	r1, [pc, #112]	; 2b044 <conf_set_general_stats_i_oper_only+0xb0>
   2afd0:	add	r1, pc, r1
   2afd4:	mov	r0, r4
   2afd8:	bl	d340 <rb_strcasecmp@plt>
   2afdc:	cmp	r0, #0
   2afe0:	beq	2b020 <conf_set_general_stats_i_oper_only+0x8c>
   2afe4:	ldr	r0, [pc, #96]	; 2b04c <conf_set_general_stats_i_oper_only+0xb8>
   2afe8:	add	r0, pc, r0
   2afec:	mov	r1, r4
   2aff0:	pop	{r4, sl, fp, lr}
   2aff4:	b	26d98 <conf_report_error>
   2aff8:	ldr	r0, [pc, #56]	; 2b038 <conf_set_general_stats_i_oper_only+0xa4>
   2affc:	ldr	r0, [pc, r0]
   2b000:	mov	r1, #2
   2b004:	str	r1, [r0, #168]	; 0xa8
   2b008:	pop	{r4, sl, fp, pc}
   2b00c:	ldr	r0, [pc, #44]	; 2b040 <conf_set_general_stats_i_oper_only+0xac>
   2b010:	ldr	r0, [pc, r0]
   2b014:	mov	r1, #1
   2b018:	str	r1, [r0, #168]	; 0xa8
   2b01c:	pop	{r4, sl, fp, pc}
   2b020:	ldr	r0, [pc, #32]	; 2b048 <conf_set_general_stats_i_oper_only+0xb4>
   2b024:	ldr	r0, [pc, r0]
   2b028:	mov	r1, #0
   2b02c:	str	r1, [r0, #168]	; 0xa8
   2b030:	pop	{r4, sl, fp, pc}
   2b034:	.word	0x0001769e
   2b038:	.word	0x0002fb80
   2b03c:	.word	0x00019f6d
   2b040:	.word	0x0002fb6c
   2b044:	.word	0x00017676
   2b048:	.word	0x0002fb58
   2b04c:	.word	0x00019f79

0002b050 <conf_set_general_default_umodes>:
   2b050:	push	{r4, r5, fp, lr}
   2b054:	add	fp, sp, #8
   2b058:	ldr	lr, [pc, #184]	; 2b118 <conf_set_general_default_umodes+0xc8>
   2b05c:	ldr	lr, [pc, lr]
   2b060:	mov	r1, #0
   2b064:	str	r1, [lr, #312]	; 0x138
   2b068:	mov	r2, #1
   2b06c:	ldr	ip, [pc, #168]	; 2b11c <conf_set_general_default_umodes+0xcc>
   2b070:	ldr	ip, [pc, ip]
   2b074:	movw	r3, #129	; 0x81
   2b078:	movt	r3, #4096	; 0x1000
   2b07c:	mov	r1, #1
   2b080:	b	2b090 <conf_set_general_default_umodes+0x40>
   2b084:	tst	r3, r2, lsl r5
   2b088:	beq	2b0c4 <conf_set_general_default_umodes+0x74>
   2b08c:	add	r0, r0, #1
   2b090:	ldrb	r4, [r0]
   2b094:	cmp	r4, #44	; 0x2c
   2b098:	bgt	2b0b8 <conf_set_general_default_umodes+0x68>
   2b09c:	cmp	r4, #32
   2b0a0:	beq	2b08c <conf_set_general_default_umodes+0x3c>
   2b0a4:	cmp	r4, #43	; 0x2b
   2b0a8:	bne	2b0d8 <conf_set_general_default_umodes+0x88>
   2b0ac:	mov	r1, #1
   2b0b0:	add	r0, r0, #1
   2b0b4:	b	2b090 <conf_set_general_default_umodes+0x40>
   2b0b8:	sub	r5, r4, #83	; 0x53
   2b0bc:	cmp	r5, #28
   2b0c0:	bls	2b084 <conf_set_general_default_umodes+0x34>
   2b0c4:	cmp	r4, #45	; 0x2d
   2b0c8:	bne	2b0e0 <conf_set_general_default_umodes+0x90>
   2b0cc:	mvn	r1, #0
   2b0d0:	add	r0, r0, #1
   2b0d4:	b	2b090 <conf_set_general_default_umodes+0x40>
   2b0d8:	cmp	r4, #0
   2b0dc:	beq	2b114 <conf_set_general_default_umodes+0xc4>
   2b0e0:	ldr	r4, [ip, r4, lsl #2]
   2b0e4:	cmp	r4, #0
   2b0e8:	beq	2b08c <conf_set_general_default_umodes+0x3c>
   2b0ec:	cmp	r1, #1
   2b0f0:	bne	2b104 <conf_set_general_default_umodes+0xb4>
   2b0f4:	ldr	r1, [lr, #312]	; 0x138
   2b0f8:	orr	r1, r1, r4
   2b0fc:	str	r1, [lr, #312]	; 0x138
   2b100:	b	2b0ac <conf_set_general_default_umodes+0x5c>
   2b104:	ldr	r5, [lr, #312]	; 0x138
   2b108:	bic	r4, r5, r4
   2b10c:	str	r4, [lr, #312]	; 0x138
   2b110:	b	2b08c <conf_set_general_default_umodes+0x3c>
   2b114:	pop	{r4, r5, fp, pc}
   2b118:	.word	0x0002fb20
   2b11c:	.word	0x0002f900

0002b120 <conf_set_general_certfp_method>:
   2b120:	push	{r4, sl, fp, lr}
   2b124:	add	fp, sp, #8
   2b128:	mov	r4, r0
   2b12c:	ldr	r1, [pc, #244]	; 2b228 <conf_set_general_certfp_method+0x108>
   2b130:	add	r1, pc, r1
   2b134:	bl	d340 <rb_strcasecmp@plt>
   2b138:	cmp	r0, #0
   2b13c:	beq	2b1c4 <conf_set_general_certfp_method+0xa4>
   2b140:	ldr	r1, [pc, #232]	; 2b230 <conf_set_general_certfp_method+0x110>
   2b144:	add	r1, pc, r1
   2b148:	mov	r0, r4
   2b14c:	bl	d340 <rb_strcasecmp@plt>
   2b150:	cmp	r0, #0
   2b154:	beq	2b1d8 <conf_set_general_certfp_method+0xb8>
   2b158:	ldr	r1, [pc, #216]	; 2b238 <conf_set_general_certfp_method+0x118>
   2b15c:	add	r1, pc, r1
   2b160:	mov	r0, r4
   2b164:	bl	d340 <rb_strcasecmp@plt>
   2b168:	cmp	r0, #0
   2b16c:	beq	2b1ec <conf_set_general_certfp_method+0xcc>
   2b170:	ldr	r1, [pc, #200]	; 2b240 <conf_set_general_certfp_method+0x120>
   2b174:	add	r1, pc, r1
   2b178:	mov	r0, r4
   2b17c:	bl	d340 <rb_strcasecmp@plt>
   2b180:	cmp	r0, #0
   2b184:	beq	2b200 <conf_set_general_certfp_method+0xe0>
   2b188:	ldr	r1, [pc, #184]	; 2b248 <conf_set_general_certfp_method+0x128>
   2b18c:	add	r1, pc, r1
   2b190:	mov	r0, r4
   2b194:	bl	d340 <rb_strcasecmp@plt>
   2b198:	cmp	r0, #0
   2b19c:	beq	2b214 <conf_set_general_certfp_method+0xf4>
   2b1a0:	ldr	r0, [pc, #168]	; 2b250 <conf_set_general_certfp_method+0x130>
   2b1a4:	ldr	r0, [pc, r0]
   2b1a8:	mov	r1, #0
   2b1ac:	str	r1, [r0, #364]	; 0x16c
   2b1b0:	ldr	r0, [pc, #156]	; 2b254 <conf_set_general_certfp_method+0x134>
   2b1b4:	add	r0, pc, r0
   2b1b8:	mov	r1, r4
   2b1bc:	pop	{r4, sl, fp, lr}
   2b1c0:	b	26d98 <conf_report_error>
   2b1c4:	ldr	r0, [pc, #96]	; 2b22c <conf_set_general_certfp_method+0x10c>
   2b1c8:	ldr	r0, [pc, r0]
   2b1cc:	mov	r1, #0
   2b1d0:	str	r1, [r0, #364]	; 0x16c
   2b1d4:	pop	{r4, sl, fp, pc}
   2b1d8:	ldr	r0, [pc, #84]	; 2b234 <conf_set_general_certfp_method+0x114>
   2b1dc:	ldr	r0, [pc, r0]
   2b1e0:	mov	r1, #1
   2b1e4:	str	r1, [r0, #364]	; 0x16c
   2b1e8:	pop	{r4, sl, fp, pc}
   2b1ec:	ldr	r0, [pc, #72]	; 2b23c <conf_set_general_certfp_method+0x11c>
   2b1f0:	ldr	r0, [pc, r0]
   2b1f4:	mov	r1, #2
   2b1f8:	str	r1, [r0, #364]	; 0x16c
   2b1fc:	pop	{r4, sl, fp, pc}
   2b200:	ldr	r0, [pc, #60]	; 2b244 <conf_set_general_certfp_method+0x124>
   2b204:	ldr	r0, [pc, r0]
   2b208:	movw	r1, #4097	; 0x1001
   2b20c:	str	r1, [r0, #364]	; 0x16c
   2b210:	pop	{r4, sl, fp, pc}
   2b214:	ldr	r0, [pc, #48]	; 2b24c <conf_set_general_certfp_method+0x12c>
   2b218:	ldr	r0, [pc, r0]
   2b21c:	movw	r1, #4098	; 0x1002
   2b220:	str	r1, [r0, #364]	; 0x16c
   2b224:	pop	{r4, sl, fp, pc}
   2b228:	.word	0x00019e66
   2b22c:	.word	0x0002f9b4
   2b230:	.word	0x00019e5c
   2b234:	.word	0x0002f9a0
   2b238:	.word	0x00019e50
   2b23c:	.word	0x0002f98c
   2b240:	.word	0x00019e27
   2b244:	.word	0x0002f978
   2b248:	.word	0x00019e1b
   2b24c:	.word	0x0002f964
   2b250:	.word	0x0002f9d8
   2b254:	.word	0x00019dff

0002b258 <conf_set_channel_autochanmodes>:
   2b258:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b25c:	add	fp, sp, #24
   2b260:	ldr	r9, [pc, #184]	; 2b320 <conf_set_channel_autochanmodes+0xc8>
   2b264:	ldr	r9, [pc, r9]
   2b268:	mov	r1, #0
   2b26c:	str	r1, [r9, #80]	; 0x50
   2b270:	ldrb	r1, [r0]
   2b274:	cmp	r1, #0
   2b278:	beq	2b31c <conf_set_channel_autochanmodes+0xc4>
   2b27c:	add	r6, r0, #1
   2b280:	mov	r0, #1
   2b284:	ldr	r7, [pc, #152]	; 2b324 <conf_set_channel_autochanmodes+0xcc>
   2b288:	ldr	r7, [pc, r7]
   2b28c:	ldr	r4, [pc, #148]	; 2b328 <conf_set_channel_autochanmodes+0xd0>
   2b290:	ldr	r4, [pc, r4]
   2b294:	ldr	r8, [pc, #144]	; 2b32c <conf_set_channel_autochanmodes+0xd4>
   2b298:	add	r8, pc, r8
   2b29c:	b	2b2b0 <conf_set_channel_autochanmodes+0x58>
   2b2a0:	mvn	r0, #0
   2b2a4:	ldrb	r1, [r6], #1
   2b2a8:	cmp	r1, #0
   2b2ac:	beq	2b31c <conf_set_channel_autochanmodes+0xc4>
   2b2b0:	mov	r5, r0
   2b2b4:	uxtb	r1, r1
   2b2b8:	cmp	r1, #43	; 0x2b
   2b2bc:	mov	r0, #1
   2b2c0:	beq	2b2a4 <conf_set_channel_autochanmodes+0x4c>
   2b2c4:	cmp	r1, #45	; 0x2d
   2b2c8:	beq	2b2a0 <conf_set_channel_autochanmodes+0x48>
   2b2cc:	ldr	r0, [r7, r1, lsl #3]
   2b2d0:	cmp	r0, r4
   2b2d4:	beq	2b2e4 <conf_set_channel_autochanmodes+0x8c>
   2b2d8:	mov	r0, r8
   2b2dc:	bl	d400 <conf_report_error@plt>
   2b2e0:	b	2b314 <conf_set_channel_autochanmodes+0xbc>
   2b2e4:	add	r0, r7, r1, lsl #3
   2b2e8:	ldr	r0, [r0, #4]
   2b2ec:	cmp	r5, #1
   2b2f0:	bne	2b308 <conf_set_channel_autochanmodes+0xb0>
   2b2f4:	ldr	r1, [r9, #80]	; 0x50
   2b2f8:	orr	r0, r1, r0
   2b2fc:	str	r0, [r9, #80]	; 0x50
   2b300:	mov	r0, #1
   2b304:	b	2b2a4 <conf_set_channel_autochanmodes+0x4c>
   2b308:	ldr	r1, [r9, #80]	; 0x50
   2b30c:	bic	r0, r1, r0
   2b310:	str	r0, [r9, #80]	; 0x50
   2b314:	mov	r0, r5
   2b318:	b	2b2a4 <conf_set_channel_autochanmodes+0x4c>
   2b31c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b320:	.word	0x0002f8b4
   2b324:	.word	0x0002f80c
   2b328:	.word	0x0002f714
   2b32c:	.word	0x00019efa

0002b330 <conf_set_serverhide_links_delay>:
   2b330:	ldr	r0, [r0]
   2b334:	ldr	r1, [pc, #8]	; 2b344 <conf_set_serverhide_links_delay+0x14>
   2b338:	ldr	r1, [pc, r1]
   2b33c:	str	r0, [r1, #4]
   2b340:	bx	lr
   2b344:	.word	0x0002f67c

0002b348 <conf_set_opm_listen_address_both>:
   2b348:	push	{r4, r5, r6, sl, fp, lr}
   2b34c:	add	fp, sp, #16
   2b350:	sub	sp, sp, #128	; 0x80
   2b354:	mov	r6, r1
   2b358:	mov	r4, r0
   2b35c:	ldr	r0, [pc, #196]	; 2b428 <conf_set_opm_listen_address_both+0xe0>
   2b360:	add	r0, pc, r0
   2b364:	ldr	r5, [pc, #192]	; 2b42c <conf_set_opm_listen_address_both+0xe4>
   2b368:	add	r5, pc, r5
   2b36c:	cmp	r1, #0
   2b370:	movne	r5, r0
   2b374:	mov	r1, sp
   2b378:	mov	r0, r4
   2b37c:	bl	e000 <rb_inet_pton_sock@plt>
   2b380:	cmp	r0, #0
   2b384:	beq	2b3c0 <conf_set_opm_listen_address_both+0x78>
   2b388:	ldrh	r0, [sp]
   2b38c:	cmp	r6, #0
   2b390:	beq	2b3cc <conf_set_opm_listen_address_both+0x84>
   2b394:	cmp	r0, #10
   2b398:	bne	2b3f0 <conf_set_opm_listen_address_both+0xa8>
   2b39c:	ldr	r0, [pc, #148]	; 2b438 <conf_set_opm_listen_address_both+0xf0>
   2b3a0:	ldr	r0, [pc, r0]
   2b3a4:	cmp	r0, #0
   2b3a8:	bne	2b3e4 <conf_set_opm_listen_address_both+0x9c>
   2b3ac:	mov	r0, r4
   2b3b0:	bl	27068 <rb_strdup>
   2b3b4:	ldr	r1, [pc, #132]	; 2b440 <conf_set_opm_listen_address_both+0xf8>
   2b3b8:	add	r1, pc, r1
   2b3bc:	b	2b41c <conf_set_opm_listen_address_both+0xd4>
   2b3c0:	ldr	r0, [pc, #104]	; 2b430 <conf_set_opm_listen_address_both+0xe8>
   2b3c4:	add	r0, pc, r0
   2b3c8:	b	2b3f8 <conf_set_opm_listen_address_both+0xb0>
   2b3cc:	cmp	r0, #2
   2b3d0:	bne	2b3f0 <conf_set_opm_listen_address_both+0xa8>
   2b3d4:	ldr	r0, [pc, #104]	; 2b444 <conf_set_opm_listen_address_both+0xfc>
   2b3d8:	ldr	r0, [pc, r0]
   2b3dc:	cmp	r0, #0
   2b3e0:	beq	2b40c <conf_set_opm_listen_address_both+0xc4>
   2b3e4:	ldr	r0, [pc, #80]	; 2b43c <conf_set_opm_listen_address_both+0xf4>
   2b3e8:	add	r0, pc, r0
   2b3ec:	b	2b3f8 <conf_set_opm_listen_address_both+0xb0>
   2b3f0:	ldr	r0, [pc, #60]	; 2b434 <conf_set_opm_listen_address_both+0xec>
   2b3f4:	add	r0, pc, r0
   2b3f8:	mov	r1, r5
   2b3fc:	mov	r2, r4
   2b400:	bl	d400 <conf_report_error@plt>
   2b404:	sub	sp, fp, #16
   2b408:	pop	{r4, r5, r6, sl, fp, pc}
   2b40c:	mov	r0, r4
   2b410:	bl	27068 <rb_strdup>
   2b414:	ldr	r1, [pc, #44]	; 2b448 <conf_set_opm_listen_address_both+0x100>
   2b418:	add	r1, pc, r1
   2b41c:	str	r0, [r1]
   2b420:	sub	sp, fp, #16
   2b424:	pop	{r4, r5, r6, sl, fp, pc}
   2b428:	.word	0x0001a283
   2b42c:	.word	0x0001a28c
   2b430:	.word	0x0001a241
   2b434:	.word	0x0001a22e
   2b438:	.word	0x0003ae6c
   2b43c:	.word	0x0001a25e
   2b440:	.word	0x0003ae54
   2b444:	.word	0x0003ae38
   2b448:	.word	0x0003adf8

0002b44c <conf_set_opm_listen_port_both>:
   2b44c:	mov	ip, r1
   2b450:	ldr	r2, [pc, #108]	; 2b4c4 <conf_set_opm_listen_port_both+0x78>
   2b454:	add	r2, pc, r2
   2b458:	ldr	r1, [pc, #104]	; 2b4c8 <conf_set_opm_listen_port_both+0x7c>
   2b45c:	add	r1, pc, r1
   2b460:	cmp	ip, #0
   2b464:	movne	r1, r2
   2b468:	ldr	r2, [r0]
   2b46c:	sub	r0, r2, #1
   2b470:	movw	r3, #65535	; 0xffff
   2b474:	cmp	r0, r3
   2b478:	bcc	2b488 <conf_set_opm_listen_port_both+0x3c>
   2b47c:	ldr	r0, [pc, #84]	; 2b4d8 <conf_set_opm_listen_port_both+0x8c>
   2b480:	add	r0, pc, r0
   2b484:	b	26d98 <conf_report_error>
   2b488:	cmp	ip, #0
   2b48c:	beq	2b49c <conf_set_opm_listen_port_both+0x50>
   2b490:	ldr	r0, [pc, #52]	; 2b4cc <conf_set_opm_listen_port_both+0x80>
   2b494:	add	r0, pc, r0
   2b498:	b	2b4a4 <conf_set_opm_listen_port_both+0x58>
   2b49c:	ldr	r0, [pc, #48]	; 2b4d4 <conf_set_opm_listen_port_both+0x88>
   2b4a0:	add	r0, pc, r0
   2b4a4:	ldrh	r3, [r0]
   2b4a8:	cmp	r3, #0
   2b4ac:	strheq	r2, [r0]
   2b4b0:	bxeq	lr
   2b4b4:	ldr	r0, [pc, #20]	; 2b4d0 <conf_set_opm_listen_port_both+0x84>
   2b4b8:	add	r0, pc, r0
   2b4bc:	mov	r2, r3
   2b4c0:	b	26d98 <conf_report_error>
   2b4c4:	.word	0x0001a214
   2b4c8:	.word	0x0001a21b
   2b4cc:	.word	0x0003ad86
   2b4d0:	.word	0x0001a1e5
   2b4d4:	.word	0x0003ad78
   2b4d8:	.word	0x0001a206

0002b4dc <conf_set_opm_scan_ports_all>:
   2b4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b4e0:	add	fp, sp, #28
   2b4e4:	sub	sp, sp, #4
   2b4e8:	cmp	r0, #0
   2b4ec:	beq	2b5c8 <conf_set_opm_scan_ports_all+0xec>
   2b4f0:	mov	r4, r2
   2b4f4:	mov	r5, r1
   2b4f8:	mov	r6, r0
   2b4fc:	movw	r9, #65534	; 0xfffe
   2b500:	ldr	r7, [pc, #200]	; 2b5d0 <conf_set_opm_scan_ports_all+0xf4>
   2b504:	add	r7, pc, r7
   2b508:	b	2b524 <conf_set_opm_scan_ports_all+0x48>
   2b50c:	mov	r0, r7
   2b510:	mov	r1, r5
   2b514:	bl	d400 <conf_report_error@plt>
   2b518:	ldr	r6, [r6]
   2b51c:	cmp	r6, #0
   2b520:	beq	2b5c8 <conf_set_opm_scan_ports_all+0xec>
   2b524:	ldrb	r0, [r6, #4]
   2b528:	cmp	r0, #2
   2b52c:	bne	2b50c <conf_set_opm_scan_ports_all+0x30>
   2b530:	ldr	r0, [r6, #8]
   2b534:	sub	r0, r0, #1
   2b538:	cmp	r0, r9
   2b53c:	bls	2b54c <conf_set_opm_scan_ports_all+0x70>
   2b540:	ldr	r0, [pc, #152]	; 2b5e0 <conf_set_opm_scan_ports_all+0x104>
   2b544:	add	r0, pc, r0
   2b548:	b	2b510 <conf_set_opm_scan_ports_all+0x34>
   2b54c:	ldr	r8, [pc, #128]	; 2b5d4 <conf_set_opm_scan_ports_all+0xf8>
   2b550:	ldr	r8, [pc, r8]
   2b554:	cmp	r8, #0
   2b558:	beq	2b5a0 <conf_set_opm_scan_ports_all+0xc4>
   2b55c:	ldr	sl, [r6, #8]
   2b560:	b	2b570 <conf_set_opm_scan_ports_all+0x94>
   2b564:	ldr	r8, [r8, #8]
   2b568:	cmp	r8, #0
   2b56c:	beq	2b5a0 <conf_set_opm_scan_ports_all+0xc4>
   2b570:	ldr	r0, [r8]
   2b574:	ldrh	r1, [r0, #4]
   2b578:	cmp	sl, r1
   2b57c:	bne	2b564 <conf_set_opm_scan_ports_all+0x88>
   2b580:	ldr	r1, [r0]
   2b584:	mov	r0, r4
   2b588:	bl	d0c4 <strcmp@plt>
   2b58c:	cmp	r0, #0
   2b590:	bne	2b564 <conf_set_opm_scan_ports_all+0x88>
   2b594:	ldr	r0, [pc, #60]	; 2b5d8 <conf_set_opm_scan_ports_all+0xfc>
   2b598:	add	r0, pc, r0
   2b59c:	b	2b510 <conf_set_opm_scan_ports_all+0x34>
   2b5a0:	mov	r0, #20
   2b5a4:	bl	269c0 <rb_malloc>
   2b5a8:	ldr	r1, [r6, #8]
   2b5ac:	str	r4, [r0]
   2b5b0:	strh	r1, [r0, #4]
   2b5b4:	add	r1, r0, #8
   2b5b8:	ldr	r2, [pc, #28]	; 2b5dc <conf_set_opm_scan_ports_all+0x100>
   2b5bc:	add	r2, pc, r2
   2b5c0:	bl	269e0 <rb_dlinkAdd>
   2b5c4:	b	2b518 <conf_set_opm_scan_ports_all+0x3c>
   2b5c8:	sub	sp, fp, #28
   2b5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b5d0:	.word	0x0001a1d2
   2b5d4:	.word	0x0003accc
   2b5d8:	.word	0x0001a1a8
   2b5dc:	.word	0x0003ac60
   2b5e0:	.word	0x0001a1bd

0002b5e4 <init_operhash>:
   2b5e4:	push	{fp, lr}
   2b5e8:	mov	fp, sp
   2b5ec:	ldr	r0, [pc, #24]	; 2b60c <init_operhash+0x28>
   2b5f0:	add	r0, pc, r0
   2b5f4:	mov	r1, #0
   2b5f8:	bl	d850 <rb_radixtree_create@plt>
   2b5fc:	ldr	r1, [pc, #12]	; 2b610 <init_operhash+0x2c>
   2b600:	add	r1, pc, r1
   2b604:	str	r0, [r1]
   2b608:	pop	{fp, pc}
   2b60c:	.word	0x0001a1cc
   2b610:	.word	0x0003ac28

0002b614 <operhash_add>:
   2b614:	push	{r4, r5, r6, r7, fp, lr}
   2b618:	add	fp, sp, #16
   2b61c:	mov	r4, #0
   2b620:	cmp	r0, #0
   2b624:	beq	2b6b0 <operhash_add+0x9c>
   2b628:	mov	r5, r0
   2b62c:	ldrb	r0, [r0]
   2b630:	cmp	r0, #0
   2b634:	beq	2b6b0 <operhash_add+0x9c>
   2b638:	ldr	r0, [pc, #120]	; 2b6b8 <operhash_add+0xa4>
   2b63c:	ldr	r0, [pc, r0]
   2b640:	mov	r1, r5
   2b644:	bl	dee0 <rb_radixtree_retrieve@plt>
   2b648:	cmp	r0, #0
   2b64c:	beq	2b668 <operhash_add+0x54>
   2b650:	mov	r4, r0
   2b654:	ldr	r0, [r0]
   2b658:	add	r0, r0, #1
   2b65c:	str	r0, [r4], #4
   2b660:	mov	r0, r4
   2b664:	pop	{r4, r5, r6, r7, fp, pc}
   2b668:	mov	r0, r5
   2b66c:	bl	dc94 <strlen@plt>
   2b670:	mov	r6, r0
   2b674:	add	r0, r0, #5
   2b678:	bl	2b6c0 <rb_malloc>
   2b67c:	mov	r7, r0
   2b680:	mov	r0, #1
   2b684:	mov	r4, r7
   2b688:	str	r0, [r4], #4
   2b68c:	add	r2, r6, #1
   2b690:	mov	r0, r4
   2b694:	mov	r1, r5
   2b698:	bl	d40c <memcpy@plt>
   2b69c:	ldr	r0, [pc, #24]	; 2b6bc <operhash_add+0xa8>
   2b6a0:	ldr	r0, [pc, r0]
   2b6a4:	mov	r1, r4
   2b6a8:	mov	r2, r7
   2b6ac:	bl	dd9c <rb_radixtree_add@plt>
   2b6b0:	mov	r0, r4
   2b6b4:	pop	{r4, r5, r6, r7, fp, pc}
   2b6b8:	.word	0x0003abec
   2b6bc:	.word	0x0003ab88

0002b6c0 <rb_malloc>:
   2b6c0:	push	{fp, lr}
   2b6c4:	mov	fp, sp
   2b6c8:	mov	r1, r0
   2b6cc:	mov	r0, #1
   2b6d0:	bl	cfa4 <calloc@plt>
   2b6d4:	cmp	r0, #0
   2b6d8:	popne	{fp, pc}
   2b6dc:	bl	d448 <rb_outofmemory@plt>

0002b6e0 <operhash_find>:
   2b6e0:	mov	r1, r0
   2b6e4:	ldr	r0, [pc, #4]	; 2b6f0 <operhash_find+0x10>
   2b6e8:	ldr	r0, [pc, r0]
   2b6ec:	b	dee0 <rb_radixtree_retrieve@plt>
   2b6f0:	.word	0x0003ab40

0002b6f4 <operhash_delete>:
   2b6f4:	push	{r4, sl, fp, lr}
   2b6f8:	add	fp, sp, #8
   2b6fc:	mov	r1, r0
   2b700:	ldr	r0, [pc, #64]	; 2b748 <operhash_delete+0x54>
   2b704:	ldr	r0, [pc, r0]
   2b708:	bl	dee0 <rb_radixtree_retrieve@plt>
   2b70c:	cmp	r0, #0
   2b710:	popeq	{r4, sl, fp, pc}
   2b714:	mov	r4, r0
   2b718:	ldr	r0, [r0]
   2b71c:	subs	r0, r0, #1
   2b720:	str	r0, [r4]
   2b724:	beq	2b72c <operhash_delete+0x38>
   2b728:	pop	{r4, sl, fp, pc}
   2b72c:	ldr	r0, [pc, #24]	; 2b74c <operhash_delete+0x58>
   2b730:	ldr	r0, [pc, r0]
   2b734:	add	r1, r4, #4
   2b738:	bl	e0c0 <rb_radixtree_delete@plt>
   2b73c:	mov	r0, r4
   2b740:	pop	{r4, sl, fp, lr}
   2b744:	b	2b750 <rb_free>
   2b748:	.word	0x0003ab24
   2b74c:	.word	0x0003aaf8

0002b750 <rb_free>:
   2b750:	cmp	r0, #0
   2b754:	bxeq	lr
   2b758:	b	d328 <free@plt>

0002b75c <flood_endgrace>:
   2b75c:	ldr	r1, [r0, #64]	; 0x40
   2b760:	ldr	r2, [r0, #432]	; 0x1b0
   2b764:	orr	r1, r1, #256	; 0x100
   2b768:	str	r1, [r0, #64]	; 0x40
   2b76c:	mov	r0, #0
   2b770:	str	r0, [r2, #340]	; 0x154
   2b774:	bx	lr

0002b778 <flood_recalc>:
   2b778:	push	{r4, r5, r6, sl, fp, lr}
   2b77c:	add	fp, sp, #16
   2b780:	ldr	r0, [pc, #192]	; 2b848 <flood_recalc+0xd0>
   2b784:	ldr	r0, [pc, r0]
   2b788:	ldr	r4, [r0]
   2b78c:	cmp	r4, #0
   2b790:	beq	2b7fc <flood_recalc+0x84>
   2b794:	mov	r5, #0
   2b798:	ldr	r6, [pc, #172]	; 2b84c <flood_recalc+0xd4>
   2b79c:	ldr	r6, [pc, r6]
   2b7a0:	b	2b7c0 <flood_recalc+0x48>
   2b7a4:	str	r5, [r1, #340]	; 0x154
   2b7a8:	ldr	r2, [r1, #340]	; 0x154
   2b7ac:	cmn	r2, #1
   2b7b0:	strle	r5, [r1, #340]	; 0x154
   2b7b4:	bl	2b854 <parse_client_queued>
   2b7b8:	cmp	r4, #0
   2b7bc:	beq	2b7fc <flood_recalc+0x84>
   2b7c0:	ldr	r0, [r4]
   2b7c4:	ldr	r4, [r4, #8]
   2b7c8:	ldrh	r1, [r0, #80]	; 0x50
   2b7cc:	cmp	r1, #4
   2b7d0:	ldrne	r1, [r0, #432]	; 0x1b0
   2b7d4:	cmpne	r1, #0
   2b7d8:	beq	2b7b8 <flood_recalc+0x40>
   2b7dc:	ldrb	r2, [r0, #65]	; 0x41
   2b7e0:	tst	r2, #1
   2b7e4:	beq	2b7a4 <flood_recalc+0x2c>
   2b7e8:	ldr	r2, [r1, #340]	; 0x154
   2b7ec:	ldr	r3, [r6, #356]	; 0x164
   2b7f0:	sub	r2, r2, r3
   2b7f4:	str	r2, [r1, #340]	; 0x154
   2b7f8:	b	2b7a8 <flood_recalc+0x30>
   2b7fc:	ldr	r0, [pc, #76]	; 2b850 <flood_recalc+0xd8>
   2b800:	ldr	r0, [pc, r0]
   2b804:	ldr	r4, [r0]
   2b808:	cmp	r4, #0
   2b80c:	beq	2b844 <flood_recalc+0xcc>
   2b810:	ldr	r0, [r4]
   2b814:	ldr	r4, [r4, #8]
   2b818:	ldr	r1, [r0, #432]	; 0x1b0
   2b81c:	cmp	r1, #0
   2b820:	beq	2b808 <flood_recalc+0x90>
   2b824:	ldr	r2, [r1, #340]	; 0x154
   2b828:	cmp	r2, #1
   2b82c:	movle	r2, #1
   2b830:	sub	r2, r2, #1
   2b834:	str	r2, [r1, #340]	; 0x154
   2b838:	bl	2b854 <parse_client_queued>
   2b83c:	cmp	r4, #0
   2b840:	bne	2b810 <flood_recalc+0x98>
   2b844:	pop	{r4, r5, r6, sl, fp, pc}
   2b848:	.word	0x0002f3a4
   2b84c:	.word	0x0002f3e0
   2b850:	.word	0x0002f074

0002b854 <parse_client_queued>:
   2b854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b858:	add	fp, sp, #28
   2b85c:	sub	sp, sp, #4
   2b860:	mov	r4, r0
   2b864:	mov	r6, r0
   2b868:	ldrh	r0, [r6, #64]!	; 0x40
   2b86c:	movw	r1, #16418	; 0x4022
   2b870:	tst	r0, r1
   2b874:	bne	2bae8 <parse_client_queued+0x294>
   2b878:	ldrh	r0, [r4, #80]	; 0x50
   2b87c:	cmp	r0, #8
   2b880:	bne	2b92c <parse_client_queued+0xd8>
   2b884:	ldr	r0, [pc, #612]	; 2baf0 <parse_client_queued+0x29c>
   2b888:	ldr	r0, [pc, r0]
   2b88c:	ldr	r7, [r0, #348]	; 0x15c
   2b890:	mov	r8, #0
   2b894:	ldr	r5, [pc, #600]	; 2baf4 <parse_client_queued+0x2a0>
   2b898:	add	r5, pc, r5
   2b89c:	movw	r9, #16418	; 0x4022
   2b8a0:	ldr	r0, [r4, #432]	; 0x1b0
   2b8a4:	ldr	r1, [r0, #340]	; 0x154
   2b8a8:	cmp	r1, r7
   2b8ac:	bge	2b918 <parse_client_queued+0xc4>
   2b8b0:	str	r8, [sp]
   2b8b4:	add	r0, r0, #80	; 0x50
   2b8b8:	mov	r1, r5
   2b8bc:	mov	r2, #16384	; 0x4000
   2b8c0:	mov	r3, #0
   2b8c4:	bl	e54c <rb_linebuf_get@plt>
   2b8c8:	cmp	r0, #1
   2b8cc:	blt	2b918 <parse_client_queued+0xc4>
   2b8d0:	mov	r1, r0
   2b8d4:	ldrb	r0, [r6]
   2b8d8:	tst	r0, #2
   2b8dc:	bne	2b918 <parse_client_queued+0xc4>
   2b8e0:	mov	r0, r4
   2b8e4:	bl	2bd3c <client_dopacket>
   2b8e8:	ldr	r0, [r4, #432]	; 0x1b0
   2b8ec:	ldr	r1, [r0, #340]	; 0x154
   2b8f0:	add	r1, r1, #1
   2b8f4:	str	r1, [r0, #340]	; 0x154
   2b8f8:	ldrh	r1, [r6]
   2b8fc:	tst	r1, r9
   2b900:	bne	2bae8 <parse_client_queued+0x294>
   2b904:	ldrh	r1, [r4, #80]	; 0x50
   2b908:	cmp	r1, #8
   2b90c:	beq	2b8a0 <parse_client_queued+0x4c>
   2b910:	mov	r1, #0
   2b914:	str	r1, [r0, #340]	; 0x154
   2b918:	ldr	r0, [r4, #432]	; 0x1b0
   2b91c:	ldr	r1, [r0, #340]	; 0x154
   2b920:	cmp	r1, r7
   2b924:	strgt	r7, [r0, #340]	; 0x154
   2b928:	ldrh	r0, [r4, #80]	; 0x50
   2b92c:	sub	r1, r0, #1
   2b930:	cmp	r1, #31
   2b934:	bhi	2b9a4 <parse_client_queued+0x150>
   2b938:	mov	r2, #1
   2b93c:	mov	r3, #-2147483645	; 0x80000003
   2b940:	tst	r3, r2, lsl r1
   2b944:	beq	2b9a4 <parse_client_queued+0x150>
   2b948:	ldrh	r0, [r6]
   2b94c:	movw	r7, #16418	; 0x4022
   2b950:	tst	r0, r7
   2b954:	bne	2bae8 <parse_client_queued+0x294>
   2b958:	mov	r8, #0
   2b95c:	ldr	r5, [pc, #404]	; 2baf8 <parse_client_queued+0x2a4>
   2b960:	add	r5, pc, r5
   2b964:	ldr	r0, [r4, #432]	; 0x1b0
   2b968:	str	r8, [sp]
   2b96c:	add	r0, r0, #80	; 0x50
   2b970:	mov	r1, r5
   2b974:	mov	r2, #16384	; 0x4000
   2b978:	mov	r3, #0
   2b97c:	bl	e54c <rb_linebuf_get@plt>
   2b980:	cmp	r0, #1
   2b984:	blt	2bae8 <parse_client_queued+0x294>
   2b988:	mov	r1, r0
   2b98c:	mov	r0, r4
   2b990:	bl	2bd3c <client_dopacket>
   2b994:	ldrh	r0, [r6]
   2b998:	tst	r0, r7
   2b99c:	beq	2b964 <parse_client_queued+0x110>
   2b9a0:	b	2bae8 <parse_client_queued+0x294>
   2b9a4:	ldr	r1, [r6]
   2b9a8:	tst	r1, #8388608	; 0x800000
   2b9ac:	bne	2b948 <parse_client_queued+0xf4>
   2b9b0:	cmp	r0, #64	; 0x40
   2b9b4:	bne	2bae8 <parse_client_queued+0x294>
   2b9b8:	ldr	r7, [pc, #316]	; 2bafc <parse_client_queued+0x2a8>
   2b9bc:	ldr	r7, [pc, r7]
   2b9c0:	add	r0, r7, #348	; 0x15c
   2b9c4:	tst	r1, #256	; 0x100
   2b9c8:	addeq	r0, r7, #344	; 0x158
   2b9cc:	ldr	r0, [r0]
   2b9d0:	ldr	r1, [r7, #352]	; 0x160
   2b9d4:	mul	r5, r0, r1
   2b9d8:	ldr	r0, [r4, #24]
   2b9dc:	cmp	r0, #0
   2b9e0:	beq	2ba04 <parse_client_queued+0x1b0>
   2b9e4:	ldr	r0, [r0, #36]	; 0x24
   2b9e8:	cmp	r0, #0
   2b9ec:	beq	2ba04 <parse_client_queued+0x1b0>
   2b9f0:	ldr	r1, [pc, #264]	; 2bb00 <parse_client_queued+0x2ac>
   2b9f4:	add	r1, pc, r1
   2b9f8:	bl	e594 <privilegeset_in_set@plt>
   2b9fc:	cmp	r0, #0
   2ba00:	bne	2ba28 <parse_client_queued+0x1d4>
   2ba04:	ldrb	r0, [r4, #57]	; 0x39
   2ba08:	tst	r0, #16
   2ba0c:	beq	2ba34 <parse_client_queued+0x1e0>
   2ba10:	ldr	r0, [r4, #24]
   2ba14:	cmp	r0, #0
   2ba18:	beq	2ba34 <parse_client_queued+0x1e0>
   2ba1c:	ldr	r0, [r0, #36]	; 0x24
   2ba20:	cmp	r0, #0
   2ba24:	bne	2ba34 <parse_client_queued+0x1e0>
   2ba28:	ldr	r0, [r7, #196]	; 0xc4
   2ba2c:	cmp	r0, #0
   2ba30:	lslne	r5, r5, #2
   2ba34:	ldr	r0, [r4, #432]	; 0x1b0
   2ba38:	ldr	r0, [r0, #340]	; 0x154
   2ba3c:	cmp	r0, r5
   2ba40:	bge	2bacc <parse_client_queued+0x278>
   2ba44:	mov	r9, #0
   2ba48:	ldr	r8, [pc, #180]	; 2bb04 <parse_client_queued+0x2b0>
   2ba4c:	add	r8, pc, r8
   2ba50:	movw	sl, #16418	; 0x4022
   2ba54:	bl	d07c <rb_current_time@plt>
   2ba58:	ldr	r2, [r7, #268]	; 0x10c
   2ba5c:	ldr	r1, [r4, #432]	; 0x1b0
   2ba60:	ldr	r3, [r1, #48]	; 0x30
   2ba64:	add	r2, r2, r3
   2ba68:	cmp	r0, r2
   2ba6c:	blt	2bacc <parse_client_queued+0x278>
   2ba70:	str	r9, [sp]
   2ba74:	add	r0, r1, #80	; 0x50
   2ba78:	mov	r1, r8
   2ba7c:	mov	r2, #16384	; 0x4000
   2ba80:	mov	r3, #0
   2ba84:	bl	e54c <rb_linebuf_get@plt>
   2ba88:	cmp	r0, #0
   2ba8c:	beq	2bacc <parse_client_queued+0x278>
   2ba90:	mov	r1, r0
   2ba94:	mov	r0, r4
   2ba98:	bl	2bd3c <client_dopacket>
   2ba9c:	ldrh	r0, [r6]
   2baa0:	tst	r0, sl
   2baa4:	bne	2bae8 <parse_client_queued+0x294>
   2baa8:	ldr	r0, [r7, #352]	; 0x160
   2baac:	ldr	r1, [r4, #432]	; 0x1b0
   2bab0:	ldr	r2, [r1, #340]	; 0x154
   2bab4:	add	r0, r2, r0
   2bab8:	str	r0, [r1, #340]	; 0x154
   2babc:	ldr	r0, [r4, #432]	; 0x1b0
   2bac0:	ldr	r0, [r0, #340]	; 0x154
   2bac4:	cmp	r0, r5
   2bac8:	blt	2ba54 <parse_client_queued+0x200>
   2bacc:	ldr	r0, [r7, #352]	; 0x160
   2bad0:	add	r1, r0, r5
   2bad4:	ldr	r0, [r4, #432]	; 0x1b0
   2bad8:	ldr	r2, [r0, #340]	; 0x154
   2badc:	cmp	r2, r1
   2bae0:	subge	r1, r1, #1
   2bae4:	strge	r1, [r0, #340]	; 0x154
   2bae8:	sub	sp, fp, #28
   2baec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2baf0:	.word	0x0002f2f4
   2baf4:	.word	0x0003a994
   2baf8:	.word	0x0003a8cc
   2bafc:	.word	0x0002f1c0
   2bb00:	.word	0x000155fe
   2bb04:	.word	0x0003a7e0

0002bb08 <read_packet>:
   2bb08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bb0c:	add	fp, sp, #28
   2bb10:	sub	sp, sp, #4
   2bb14:	mov	r5, r1
   2bb18:	ldrh	r0, [r5, #64]!	; 0x40
   2bb1c:	movw	sl, #16418	; 0x4022
   2bb20:	tst	r0, sl
   2bb24:	beq	2bb30 <read_packet+0x28>
   2bb28:	sub	sp, fp, #28
   2bb2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bb30:	mov	r4, r1
   2bb34:	mov	r6, #0
   2bb38:	ldr	r9, [pc, #484]	; 2bd24 <read_packet+0x21c>
   2bb3c:	add	r9, pc, r9
   2bb40:	b	2bb50 <read_packet+0x48>
   2bb44:	ldrh	r0, [r5]
   2bb48:	tst	r0, sl
   2bb4c:	bne	2bb28 <read_packet+0x20>
   2bb50:	ldr	r0, [r4, #432]	; 0x1b0
   2bb54:	ldr	r0, [r0, #300]	; 0x12c
   2bb58:	mov	r1, r9
   2bb5c:	mov	r2, #16384	; 0x4000
   2bb60:	bl	db2c <rb_read@plt>
   2bb64:	mov	r7, r0
   2bb68:	cmn	r0, #1
   2bb6c:	ble	2bccc <read_packet+0x1c4>
   2bb70:	cmp	r7, #0
   2bb74:	beq	2bd04 <read_packet+0x1fc>
   2bb78:	ldr	r0, [r4, #432]	; 0x1b0
   2bb7c:	ldr	r8, [r0, #44]	; 0x2c
   2bb80:	bl	d07c <rb_current_time@plt>
   2bb84:	cmp	r8, r0
   2bb88:	bge	2bb98 <read_packet+0x90>
   2bb8c:	bl	d07c <rb_current_time@plt>
   2bb90:	ldr	r1, [r4, #432]	; 0x1b0
   2bb94:	str	r0, [r1, #44]	; 0x2c
   2bb98:	ldr	r0, [r5]
   2bb9c:	bic	r0, r0, #1
   2bba0:	str	r0, [r5]
   2bba4:	ldrh	r0, [r4, #80]	; 0x50
   2bba8:	cmp	r0, #8
   2bbac:	cmpne	r0, #2
   2bbb0:	moveq	r6, #1
   2bbb4:	ldr	r0, [r4, #432]	; 0x1b0
   2bbb8:	add	r0, r0, #80	; 0x50
   2bbbc:	mov	r1, r9
   2bbc0:	mov	r2, r7
   2bbc4:	mov	r3, r6
   2bbc8:	bl	d094 <rb_linebuf_parse@plt>
   2bbcc:	ldrh	r0, [r5]
   2bbd0:	tst	r0, sl
   2bbd4:	bne	2bb28 <read_packet+0x20>
   2bbd8:	mov	r0, r4
   2bbdc:	bl	2b854 <parse_client_queued>
   2bbe0:	ldrh	r0, [r5]
   2bbe4:	tst	r0, sl
   2bbe8:	bne	2bb28 <read_packet+0x20>
   2bbec:	ldrh	r0, [r4, #80]	; 0x50
   2bbf0:	sub	r0, r0, #1
   2bbf4:	cmp	r0, #31
   2bbf8:	bhi	2bc30 <read_packet+0x128>
   2bbfc:	mov	r1, #1
   2bc00:	mov	r2, #-2147483645	; 0x80000003
   2bc04:	tst	r2, r1, lsl r0
   2bc08:	beq	2bc30 <read_packet+0x128>
   2bc0c:	cmp	r7, #16384	; 0x4000
   2bc10:	bge	2bb44 <read_packet+0x3c>
   2bc14:	ldr	r0, [r4, #432]	; 0x1b0
   2bc18:	ldr	r0, [r0, #300]	; 0x12c
   2bc1c:	bl	e570 <rb_get_type@plt>
   2bc20:	sxtb	r0, r0
   2bc24:	cmp	r0, #0
   2bc28:	bmi	2bb44 <read_packet+0x3c>
   2bc2c:	b	2bce0 <read_packet+0x1d8>
   2bc30:	ldr	r0, [pc, #240]	; 2bd28 <read_packet+0x220>
   2bc34:	ldr	r0, [pc, r0]
   2bc38:	ldr	r0, [r0, #340]	; 0x154
   2bc3c:	ldr	r1, [r4, #432]	; 0x1b0
   2bc40:	ldr	r1, [r1, #96]	; 0x60
   2bc44:	cmp	r1, r0
   2bc48:	ble	2bc0c <read_packet+0x104>
   2bc4c:	ldr	r0, [pc, #216]	; 2bd2c <read_packet+0x224>
   2bc50:	ldr	r0, [pc, r0]
   2bc54:	ldr	r0, [r0, #196]	; 0xc4
   2bc58:	cmp	r0, #0
   2bc5c:	beq	2bcac <read_packet+0x1a4>
   2bc60:	ldr	r0, [r4, #24]
   2bc64:	cmp	r0, #0
   2bc68:	beq	2bc8c <read_packet+0x184>
   2bc6c:	ldr	r0, [r0, #36]	; 0x24
   2bc70:	cmp	r0, #0
   2bc74:	beq	2bc8c <read_packet+0x184>
   2bc78:	ldr	r1, [pc, #176]	; 2bd30 <read_packet+0x228>
   2bc7c:	add	r1, pc, r1
   2bc80:	bl	e594 <privilegeset_in_set@plt>
   2bc84:	cmp	r0, #0
   2bc88:	bne	2bc0c <read_packet+0x104>
   2bc8c:	ldrb	r0, [r4, #57]	; 0x39
   2bc90:	tst	r0, #16
   2bc94:	ldrne	r0, [r4, #24]
   2bc98:	cmpne	r0, #0
   2bc9c:	beq	2bcac <read_packet+0x1a4>
   2bca0:	ldr	r0, [r0, #36]	; 0x24
   2bca4:	cmp	r0, #0
   2bca8:	beq	2bc0c <read_packet+0x104>
   2bcac:	ldr	r3, [pc, #132]	; 2bd38 <read_packet+0x230>
   2bcb0:	add	r3, pc, r3
   2bcb4:	mov	r0, r4
   2bcb8:	mov	r1, r4
   2bcbc:	mov	r2, r4
   2bcc0:	sub	sp, fp, #28
   2bcc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bcc8:	b	e534 <exit_client@plt>
   2bccc:	bl	de38 <__errno_location@plt>
   2bcd0:	ldr	r0, [r0]
   2bcd4:	bl	dab4 <rb_ignore_errno@plt>
   2bcd8:	cmp	r0, #0
   2bcdc:	beq	2bd10 <read_packet+0x208>
   2bce0:	ldr	r0, [r4, #432]	; 0x1b0
   2bce4:	ldr	r0, [r0, #300]	; 0x12c
   2bce8:	ldr	r2, [pc, #68]	; 2bd34 <read_packet+0x22c>
   2bcec:	ldr	r2, [pc, r2]
   2bcf0:	mov	r1, #1
   2bcf4:	mov	r3, r4
   2bcf8:	sub	sp, fp, #28
   2bcfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bd00:	b	d304 <rb_setselect@plt>
   2bd04:	mov	r0, r4
   2bd08:	mov	r1, #0
   2bd0c:	b	2bd18 <read_packet+0x210>
   2bd10:	mov	r0, r4
   2bd14:	mov	r1, r7
   2bd18:	sub	sp, fp, #28
   2bd1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bd20:	b	e408 <error_exit_client@plt>
   2bd24:	.word	0x0003a6f0
   2bd28:	.word	0x0002ef48
   2bd2c:	.word	0x0002ef2c
   2bd30:	.word	0x00015376
   2bd34:	.word	0x0002ec38
   2bd38:	.word	0x00019b15

0002bd3c <client_dopacket>:
   2bd3c:	push	{fp, lr}
   2bd40:	mov	fp, sp
   2bd44:	cmp	r0, #0
   2bd48:	beq	2bdf4 <client_dopacket+0xb8>
   2bd4c:	ldrh	r2, [r0, #64]	; 0x40
   2bd50:	movw	r3, #16418	; 0x4022
   2bd54:	tst	r2, r3
   2bd58:	popne	{fp, pc}
   2bd5c:	ldr	r2, [pc, #148]	; 2bdf8 <client_dopacket+0xbc>
   2bd60:	ldr	r2, [pc, r2]
   2bd64:	ldr	lr, [r2, #432]	; 0x1b0
   2bd68:	ldr	r2, [lr, #116]	; 0x74
   2bd6c:	add	r2, r2, #1
   2bd70:	str	r2, [lr, #116]	; 0x74
   2bd74:	ldr	r3, [r0, #432]	; 0x1b0
   2bd78:	ldr	r2, [r3, #116]	; 0x74
   2bd7c:	add	r2, r2, #1
   2bd80:	str	r2, [r3, #116]	; 0x74
   2bd84:	ldrh	r2, [r3, #126]	; 0x7e
   2bd88:	add	r2, r2, r1
   2bd8c:	strh	r2, [r3, #126]	; 0x7e
   2bd90:	uxth	ip, r2
   2bd94:	cmp	ip, #1024	; 0x400
   2bd98:	bcc	2bdb0 <client_dopacket+0x74>
   2bd9c:	bfc	r2, #10, #22
   2bda0:	strh	r2, [r3, #126]	; 0x7e
   2bda4:	ldr	r2, [r3, #120]	; 0x78
   2bda8:	add	r2, r2, ip, lsr #10
   2bdac:	str	r2, [r3, #120]	; 0x78
   2bdb0:	ldrh	r2, [lr, #126]	; 0x7e
   2bdb4:	add	r3, r2, r1
   2bdb8:	strh	r3, [lr, #126]	; 0x7e
   2bdbc:	uxth	r2, r3
   2bdc0:	cmp	r2, #1024	; 0x400
   2bdc4:	bcc	2bddc <client_dopacket+0xa0>
   2bdc8:	bfc	r3, #10, #22
   2bdcc:	strh	r3, [lr, #126]	; 0x7e
   2bdd0:	ldr	r3, [lr, #120]	; 0x78
   2bdd4:	add	r2, r3, r2, lsr #10
   2bdd8:	str	r2, [lr, #120]	; 0x78
   2bddc:	ldr	r3, [pc, #24]	; 2bdfc <client_dopacket+0xc0>
   2bde0:	add	r3, pc, r3
   2bde4:	add	r2, r3, r1
   2bde8:	mov	r1, r3
   2bdec:	pop	{fp, lr}
   2bdf0:	b	e4d4 <parse@plt>
   2bdf4:	pop	{fp, pc}
   2bdf8:	.word	0x0002edf8
   2bdfc:	.word	0x0003a44c

0002be00 <reconstruct_parv>:
   2be00:	push	{r4, r5, r6, r7, fp, lr}
   2be04:	add	fp, sp, #16
   2be08:	mov	r5, r1
   2be0c:	mov	r4, r0
   2be10:	ldr	r1, [r1]
   2be14:	ldr	r0, [pc, #92]	; 2be78 <reconstruct_parv+0x78>
   2be18:	add	r0, pc, r0
   2be1c:	mov	r2, #512	; 0x200
   2be20:	bl	e510 <rb_strlcpy@plt>
   2be24:	cmp	r4, #2
   2be28:	blt	2be6c <reconstruct_parv+0x6c>
   2be2c:	add	r6, r5, #4
   2be30:	sub	r7, r4, #1
   2be34:	ldr	r4, [pc, #64]	; 2be7c <reconstruct_parv+0x7c>
   2be38:	add	r4, pc, r4
   2be3c:	ldr	r5, [pc, #60]	; 2be80 <reconstruct_parv+0x80>
   2be40:	add	r5, pc, r5
   2be44:	mov	r0, r4
   2be48:	mov	r1, r5
   2be4c:	mov	r2, #512	; 0x200
   2be50:	bl	e7d4 <rb_strlcat@plt>
   2be54:	ldr	r1, [r6], #4
   2be58:	mov	r0, r4
   2be5c:	mov	r2, #512	; 0x200
   2be60:	bl	e7d4 <rb_strlcat@plt>
   2be64:	subs	r7, r7, #1
   2be68:	bne	2be44 <reconstruct_parv+0x44>
   2be6c:	ldr	r0, [pc, #16]	; 2be84 <reconstruct_parv+0x84>
   2be70:	add	r0, pc, r0
   2be74:	pop	{r4, r5, r6, r7, fp, pc}
   2be78:	.word	0x0003e41c
   2be7c:	.word	0x0003e3fc
   2be80:	.word	0x0001a678
   2be84:	.word	0x0003e3c4

0002be88 <parse>:
   2be88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2be8c:	add	fp, sp, #24
   2be90:	sub	sp, sp, #328	; 0x148
   2be94:	mov	r4, r1
   2be98:	mov	r5, r0
   2be9c:	ldrh	r0, [r0, #64]	; 0x40
   2bea0:	movw	r1, #16418	; 0x4022
   2bea4:	tst	r0, r1
   2bea8:	beq	2beb4 <parse+0x2c>
   2beac:	sub	sp, fp, #24
   2beb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2beb4:	mov	r7, r2
   2beb8:	ldrb	r0, [r7, #-1]!
   2bebc:	cmp	r0, #10
   2bec0:	bne	2bed4 <parse+0x4c>
   2bec4:	ldrb	r0, [r2, #-2]!
   2bec8:	mov	r1, #0
   2becc:	strb	r1, [r2, #1]
   2bed0:	mov	r7, r2
   2bed4:	cmp	r0, #13
   2bed8:	moveq	r0, #0
   2bedc:	strbeq	r0, [r7]
   2bee0:	add	r8, sp, #60	; 0x3c
   2bee4:	mov	r0, r8
   2bee8:	mov	r1, r4
   2beec:	bl	e618 <msgbuf_parse@plt>
   2bef0:	cmp	r0, #0
   2bef4:	beq	2bf14 <parse+0x8c>
   2bef8:	ldr	r0, [pc, #612]	; 2c164 <parse+0x2dc>
   2befc:	ldr	r0, [pc, r0]
   2bf00:	ldr	r1, [r0, #84]	; 0x54
   2bf04:	add	r1, r1, #1
   2bf08:	str	r1, [r0, #84]	; 0x54
   2bf0c:	sub	sp, fp, #24
   2bf10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf14:	ldr	r0, [sp, #244]	; 0xf4
   2bf18:	cmp	r0, #0
   2bf1c:	mov	r6, r5
   2bf20:	beq	2bf78 <parse+0xf0>
   2bf24:	ldrh	r1, [r5, #80]	; 0x50
   2bf28:	cmp	r1, #32
   2bf2c:	mov	r6, r5
   2bf30:	bne	2bf78 <parse+0xf0>
   2bf34:	bl	d424 <find_client@plt>
   2bf38:	cmp	r0, #0
   2bf3c:	beq	2c0fc <parse+0x274>
   2bf40:	mov	r6, r0
   2bf44:	ldr	r0, [r0, #36]	; 0x24
   2bf48:	cmp	r0, r5
   2bf4c:	beq	2bf78 <parse+0xf0>
   2bf50:	ldr	r0, [pc, #532]	; 2c16c <parse+0x2e4>
   2bf54:	ldr	r0, [pc, r0]
   2bf58:	ldr	r1, [r0, #76]	; 0x4c
   2bf5c:	add	r1, r1, #1
   2bf60:	str	r1, [r0, #76]	; 0x4c
   2bf64:	mov	r0, r5
   2bf68:	mov	r1, r6
   2bf6c:	bl	2c344 <cancel_clients>
   2bf70:	sub	sp, fp, #24
   2bf74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf78:	ldr	r1, [sp, #252]	; 0xfc
   2bf7c:	ldrb	r2, [r1]
   2bf80:	ldr	r0, [pc, #488]	; 2c170 <parse+0x2e8>
   2bf84:	ldr	r0, [pc, r0]
   2bf88:	ldrb	r2, [r0, r2, lsl #2]
   2bf8c:	tst	r2, #16
   2bf90:	beq	2bfb4 <parse+0x12c>
   2bf94:	ldrb	r2, [r1, #1]
   2bf98:	ldrb	r2, [r0, r2, lsl #2]
   2bf9c:	tst	r2, #16
   2bfa0:	beq	2bfb4 <parse+0x12c>
   2bfa4:	ldrb	r2, [r1, #2]
   2bfa8:	ldrb	r0, [r0, r2, lsl #2]
   2bfac:	tst	r0, #16
   2bfb0:	bne	2c128 <parse+0x2a0>
   2bfb4:	ldr	r0, [pc, #444]	; 2c178 <parse+0x2f0>
   2bfb8:	ldr	r0, [pc, r0]
   2bfbc:	ldr	r0, [r0]
   2bfc0:	bl	e6e4 <rb_dictionary_retrieve@plt>
   2bfc4:	cmp	r0, #0
   2bfc8:	beq	2c0a0 <parse+0x218>
   2bfcc:	ldr	r1, [r0]
   2bfd0:	cmp	r1, #0
   2bfd4:	beq	2c0a0 <parse+0x218>
   2bfd8:	add	r1, sp, #60	; 0x3c
   2bfdc:	mov	r2, r5
   2bfe0:	mov	r3, r6
   2bfe4:	bl	2c5f4 <handle_command>
   2bfe8:	cmn	r0, #2
   2bfec:	bgt	2beac <parse+0x24>
   2bff0:	cmp	r7, r4
   2bff4:	bcc	2beac <parse+0x24>
   2bff8:	ldr	r5, [pc, #392]	; 2c188 <parse+0x300>
   2bffc:	add	r5, pc, r5
   2c000:	ldr	r8, [pc, #388]	; 2c18c <parse+0x304>
   2c004:	add	r8, pc, r8
   2c008:	b	2c06c <parse+0x1e4>
   2c00c:	ldrb	r2, [r4]
   2c010:	ldrb	r3, [r4, #1]
   2c014:	ldrb	r0, [r4, #2]
   2c018:	ldrb	r1, [r4, #3]
   2c01c:	ldrb	r6, [r4, #4]
   2c020:	ldrb	ip, [r4, #5]
   2c024:	ldrb	lr, [r4, #6]
   2c028:	ldrb	r9, [r4, #7]
   2c02c:	str	r0, [sp, #32]
   2c030:	str	r1, [sp, #36]	; 0x24
   2c034:	str	r6, [sp, #40]	; 0x28
   2c038:	str	ip, [sp, #44]	; 0x2c
   2c03c:	str	lr, [sp, #48]	; 0x30
   2c040:	str	r9, [sp, #52]	; 0x34
   2c044:	stm	sp, {r0, r1, r6, ip, lr}
   2c048:	str	r9, [sp, #20]
   2c04c:	str	r2, [sp, #24]
   2c050:	str	r3, [sp, #28]
   2c054:	mov	r0, #0
   2c058:	mov	r1, r8
   2c05c:	bl	e0b4 <ilog@plt>
   2c060:	add	r4, r4, #8
   2c064:	cmp	r4, r7
   2c068:	bhi	2beac <parse+0x24>
   2c06c:	add	r0, r4, #8
   2c070:	cmp	r0, r7
   2c074:	bls	2c00c <parse+0x184>
   2c078:	cmp	r4, r7
   2c07c:	bhi	2c060 <parse+0x1d8>
   2c080:	ldrb	r2, [r4], #1
   2c084:	mov	r0, #0
   2c088:	mov	r1, r5
   2c08c:	mov	r3, r2
   2c090:	bl	e0b4 <ilog@plt>
   2c094:	cmp	r4, r7
   2c098:	bls	2c080 <parse+0x1f8>
   2c09c:	b	2c060 <parse+0x1d8>
   2c0a0:	ldrh	r0, [r6, #80]	; 0x50
   2c0a4:	cmp	r0, #64	; 0x40
   2c0a8:	bne	2c0e0 <parse+0x258>
   2c0ac:	ldr	r0, [r6, #24]
   2c0b0:	cmp	r0, #0
   2c0b4:	beq	2c0e0 <parse+0x258>
   2c0b8:	ldr	r0, [sp, #252]	; 0xfc
   2c0bc:	str	r0, [sp]
   2c0c0:	add	r3, r6, #88	; 0x58
   2c0c4:	ldr	r0, [pc, #176]	; 2c17c <parse+0x2f4>
   2c0c8:	ldr	r0, [pc, r0]
   2c0cc:	add	r2, r0, #88	; 0x58
   2c0d0:	ldr	r1, [pc, #168]	; 2c180 <parse+0x2f8>
   2c0d4:	add	r1, pc, r1
   2c0d8:	mov	r0, r6
   2c0dc:	bl	d1e4 <sendto_one@plt>
   2c0e0:	ldr	r0, [pc, #156]	; 2c184 <parse+0x2fc>
   2c0e4:	ldr	r0, [pc, r0]
   2c0e8:	ldr	r1, [r0, #72]	; 0x48
   2c0ec:	add	r1, r1, #1
   2c0f0:	str	r1, [r0, #72]	; 0x48
   2c0f4:	sub	sp, fp, #24
   2c0f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c0fc:	ldr	r0, [pc, #100]	; 2c168 <parse+0x2e0>
   2c100:	ldr	r0, [pc, r0]
   2c104:	ldr	r1, [r0, #80]	; 0x50
   2c108:	add	r1, r1, #1
   2c10c:	str	r1, [r0, #80]	; 0x50
   2c110:	ldr	r1, [sp, #244]	; 0xf4
   2c114:	mov	r0, r5
   2c118:	mov	r2, r4
   2c11c:	bl	2c190 <remove_unknown>
   2c120:	sub	sp, fp, #24
   2c124:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c128:	mov	r0, r1
   2c12c:	bl	e468 <atoi@plt>
   2c130:	ldr	r1, [pc, #60]	; 2c174 <parse+0x2ec>
   2c134:	ldr	r1, [pc, r1]
   2c138:	ldr	r2, [r1, #88]	; 0x58
   2c13c:	add	r2, r2, #1
   2c140:	str	r2, [r1, #88]	; 0x58
   2c144:	ldr	r3, [sp, #260]	; 0x104
   2c148:	add	r1, r8, #204	; 0xcc
   2c14c:	str	r1, [sp]
   2c150:	mov	r1, r5
   2c154:	mov	r2, r6
   2c158:	bl	2c3cc <do_numeric>
   2c15c:	sub	sp, fp, #24
   2c160:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c164:	.word	0x0002eac0
   2c168:	.word	0x0002e8bc
   2c16c:	.word	0x0002ea68
   2c170:	.word	0x0002ea74
   2c174:	.word	0x0002e888
   2c178:	.word	0x0002e974
   2c17c:	.word	0x0002ea90
   2c180:	.word	0x000196fe
   2c184:	.word	0x0002e8d8
   2c188:	.word	0x000197f5
   2c18c:	.word	0x000197f6

0002c190 <remove_unknown>:
   2c190:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c194:	add	fp, sp, #24
   2c198:	sub	sp, sp, #16
   2c19c:	mov	r6, r2
   2c1a0:	mov	r4, r1
   2c1a4:	mov	r8, r0
   2c1a8:	mov	r0, r1
   2c1ac:	bl	dc94 <strlen@plt>
   2c1b0:	mov	r7, r0
   2c1b4:	ldrb	r0, [r4]
   2c1b8:	ldr	r1, [pc, #360]	; 2c328 <remove_unknown+0x198>
   2c1bc:	ldr	r1, [pc, r1]
   2c1c0:	ldr	r0, [r1, r0, lsl #2]
   2c1c4:	and	r5, r0, #16
   2c1c8:	cmp	r7, #3
   2c1cc:	bne	2c1d8 <remove_unknown+0x48>
   2c1d0:	cmp	r5, #0
   2c1d4:	bne	2c1ec <remove_unknown+0x5c>
   2c1d8:	mov	r0, r4
   2c1dc:	mov	r1, #46	; 0x2e
   2c1e0:	bl	dce8 <strchr@plt>
   2c1e4:	cmp	r0, #0
   2c1e8:	beq	2c268 <remove_unknown+0xd8>
   2c1ec:	add	r7, r8, #88	; 0x58
   2c1f0:	str	r7, [sp]
   2c1f4:	str	r4, [sp, #4]
   2c1f8:	ldr	r2, [pc, #300]	; 2c32c <remove_unknown+0x19c>
   2c1fc:	add	r2, pc, r2
   2c200:	mov	r0, #8
   2c204:	mov	r1, #0
   2c208:	mov	r3, r6
   2c20c:	bl	d634 <sendto_realops_snomask@plt>
   2c210:	ldr	r0, [pc, #280]	; 2c330 <remove_unknown+0x1a0>
   2c214:	ldr	r0, [pc, r0]
   2c218:	add	r2, r0, #88	; 0x58
   2c21c:	ldr	r1, [r8, #36]	; 0x24
   2c220:	ldrh	r3, [r1, #80]	; 0x50
   2c224:	cmp	r3, #32
   2c228:	bne	2c248 <remove_unknown+0xb8>
   2c22c:	ldrb	r1, [r1, #396]	; 0x18c
   2c230:	cmp	r1, #0
   2c234:	beq	2c248 <remove_unknown+0xb8>
   2c238:	ldrb	r1, [r0, #396]!	; 0x18c
   2c23c:	cmp	r1, #0
   2c240:	subeq	r0, r0, #308	; 0x134
   2c244:	mov	r2, r0
   2c248:	stm	sp, {r6, r7}
   2c24c:	ldr	r1, [pc, #224]	; 2c334 <remove_unknown+0x1a4>
   2c250:	add	r1, pc, r1
   2c254:	mov	r0, r8
   2c258:	mov	r3, r4
   2c25c:	bl	d1e4 <sendto_one@plt>
   2c260:	sub	sp, fp, #24
   2c264:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c268:	cmp	r5, #0
   2c26c:	beq	2c260 <remove_unknown+0xd0>
   2c270:	cmp	r7, #9
   2c274:	bne	2c300 <remove_unknown+0x170>
   2c278:	ldrh	r0, [r4]
   2c27c:	ldrb	r1, [r4, #2]
   2c280:	mov	r2, #0
   2c284:	strb	r2, [sp, #15]
   2c288:	strb	r1, [sp, #14]
   2c28c:	strh	r0, [sp, #12]
   2c290:	add	r1, sp, #12
   2c294:	mov	r0, #0
   2c298:	bl	df04 <find_server@plt>
   2c29c:	cmp	r0, #0
   2c2a0:	beq	2c260 <remove_unknown+0xd0>
   2c2a4:	ldr	r0, [r0, #36]	; 0x24
   2c2a8:	cmp	r0, r8
   2c2ac:	bne	2c260 <remove_unknown+0xd0>
   2c2b0:	ldr	r1, [pc, #132]	; 2c33c <remove_unknown+0x1ac>
   2c2b4:	ldr	r1, [pc, r1]
   2c2b8:	add	r0, r1, #88	; 0x58
   2c2bc:	ldr	r3, [r8, #36]	; 0x24
   2c2c0:	ldrh	r2, [r3, #80]	; 0x50
   2c2c4:	cmp	r2, #32
   2c2c8:	mov	r2, r0
   2c2cc:	bne	2c2f0 <remove_unknown+0x160>
   2c2d0:	ldrb	r2, [r3, #396]	; 0x18c
   2c2d4:	cmp	r2, #0
   2c2d8:	mov	r2, r0
   2c2dc:	beq	2c2f0 <remove_unknown+0x160>
   2c2e0:	ldrb	r2, [r1, #396]!	; 0x18c
   2c2e4:	cmp	r2, #0
   2c2e8:	subeq	r1, r1, #308	; 0x134
   2c2ec:	mov	r2, r1
   2c2f0:	str	r0, [sp]
   2c2f4:	ldr	r1, [pc, #68]	; 2c340 <remove_unknown+0x1b0>
   2c2f8:	add	r1, pc, r1
   2c2fc:	b	2c254 <remove_unknown+0xc4>
   2c300:	add	r0, r8, #88	; 0x58
   2c304:	str	r0, [sp]
   2c308:	ldr	r2, [pc, #40]	; 2c338 <remove_unknown+0x1a8>
   2c30c:	add	r2, pc, r2
   2c310:	mov	r0, #8
   2c314:	mov	r1, #0
   2c318:	mov	r3, r6
   2c31c:	bl	d634 <sendto_realops_snomask@plt>
   2c320:	sub	sp, fp, #24
   2c324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c328:	.word	0x0002e83c
   2c32c:	.word	0x000197f6
   2c330:	.word	0x0002e944
   2c334:	.word	0x000197cc
   2c338:	.word	0x0001973c
   2c33c:	.word	0x0002e8a4
   2c340:	.word	0x0001976c

0002c344 <cancel_clients>:
   2c344:	push	{fp, lr}
   2c348:	mov	fp, sp
   2c34c:	sub	sp, sp, #16
   2c350:	ldrh	r2, [r1, #80]	; 0x50
   2c354:	cmp	r2, #32
   2c358:	cmpne	r2, #4
   2c35c:	bne	2c384 <cancel_clients+0x40>
   2c360:	ldr	r2, [r1, #36]	; 0x24
   2c364:	add	r0, r0, #88	; 0x58
   2c368:	add	r2, r2, #88	; 0x58
   2c36c:	str	r2, [sp]
   2c370:	str	r0, [sp, #4]
   2c374:	add	r3, r1, #88	; 0x58
   2c378:	ldr	r2, [pc, #68]	; 2c3c4 <cancel_clients+0x80>
   2c37c:	add	r2, pc, r2
   2c380:	b	2c3b0 <cancel_clients+0x6c>
   2c384:	ldr	r2, [r1, #36]	; 0x24
   2c388:	add	ip, r0, #88	; 0x58
   2c38c:	add	r3, r1, #163	; 0xa3
   2c390:	add	r0, r1, #152	; 0x98
   2c394:	add	r2, r2, #88	; 0x58
   2c398:	stm	sp, {r0, r3}
   2c39c:	str	r2, [sp, #8]
   2c3a0:	str	ip, [sp, #12]
   2c3a4:	add	r3, r1, #88	; 0x58
   2c3a8:	ldr	r2, [pc, #24]	; 2c3c8 <cancel_clients+0x84>
   2c3ac:	add	r2, pc, r2
   2c3b0:	mov	r0, #8
   2c3b4:	mov	r1, #0
   2c3b8:	bl	d634 <sendto_realops_snomask@plt>
   2c3bc:	mov	sp, fp
   2c3c0:	pop	{fp, pc}
   2c3c4:	.word	0x0001962c
   2c3c8:	.word	0x00019617

0002c3cc <do_numeric>:
   2c3cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3d0:	add	fp, sp, #28
   2c3d4:	sub	sp, sp, #20
   2c3d8:	cmp	r3, #2
   2c3dc:	blt	2c578 <do_numeric+0x1ac>
   2c3e0:	mov	r5, r0
   2c3e4:	ldrh	r0, [r2, #80]	; 0x50
   2c3e8:	cmp	r0, #32
   2c3ec:	bne	2c578 <do_numeric+0x1ac>
   2c3f0:	mov	sl, r1
   2c3f4:	ldr	r0, [fp, #8]
   2c3f8:	cmp	r5, #100	; 0x64
   2c3fc:	addlt	r5, r5, #100	; 0x64
   2c400:	sub	r6, r3, #1
   2c404:	cmp	r6, #3
   2c408:	str	r2, [sp, #16]
   2c40c:	blt	2c448 <do_numeric+0x7c>
   2c410:	add	r9, r0, #8
   2c414:	sub	r8, r3, #3
   2c418:	ldr	r7, [pc, #432]	; 2c5d0 <do_numeric+0x204>
   2c41c:	add	r7, pc, r7
   2c420:	ldr	r4, [pc, #428]	; 2c5d4 <do_numeric+0x208>
   2c424:	add	r4, pc, r4
   2c428:	ldr	r2, [r9], #4
   2c42c:	mov	r0, r7
   2c430:	mov	r1, r4
   2c434:	bl	e3a8 <sprintf@plt>
   2c438:	add	r7, r7, r0
   2c43c:	subs	r8, r8, #1
   2c440:	bne	2c428 <do_numeric+0x5c>
   2c444:	b	2c450 <do_numeric+0x84>
   2c448:	ldr	r7, [pc, #380]	; 2c5cc <do_numeric+0x200>
   2c44c:	add	r7, pc, r7
   2c450:	ldr	r4, [fp, #8]
   2c454:	ldr	r2, [r4, r6, lsl #2]
   2c458:	ldr	r1, [pc, #376]	; 2c5d8 <do_numeric+0x20c>
   2c45c:	add	r1, pc, r1
   2c460:	mov	r0, r7
   2c464:	bl	e3a8 <sprintf@plt>
   2c468:	ldr	r0, [r4, #4]
   2c46c:	bl	d424 <find_client@plt>
   2c470:	cmp	r0, #0
   2c474:	beq	2c4cc <do_numeric+0x100>
   2c478:	ldrh	r7, [r0, #80]	; 0x50
   2c47c:	cmp	r7, #4
   2c480:	bne	2c51c <do_numeric+0x150>
   2c484:	movw	r0, #401	; 0x191
   2c488:	sub	r0, r5, r0
   2c48c:	cmp	r0, #2
   2c490:	ldr	r2, [sp, #16]
   2c494:	bcc	2c578 <do_numeric+0x1ac>
   2c498:	ldr	r0, [pc, #316]	; 2c5dc <do_numeric+0x210>
   2c49c:	add	r0, pc, r0
   2c4a0:	add	r1, sl, #88	; 0x58
   2c4a4:	stm	sp, {r1, r5}
   2c4a8:	str	r0, [sp, #8]
   2c4ac:	add	r3, r2, #88	; 0x58
   2c4b0:	ldr	r2, [pc, #296]	; 2c5e0 <do_numeric+0x214>
   2c4b4:	add	r2, pc, r2
   2c4b8:	mov	r0, #256	; 0x100
   2c4bc:	mov	r1, #2
   2c4c0:	bl	d634 <sendto_realops_snomask@plt>
   2c4c4:	sub	sp, fp, #28
   2c4c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c4cc:	ldr	r0, [r4, #4]
   2c4d0:	bl	d73c <find_channel@plt>
   2c4d4:	cmp	r0, #0
   2c4d8:	ldr	r2, [sp, #16]
   2c4dc:	beq	2c578 <do_numeric+0x1ac>
   2c4e0:	mov	r3, r0
   2c4e4:	ldr	r0, [r0, #236]	; 0xec
   2c4e8:	ldr	r1, [pc, #252]	; 2c5ec <do_numeric+0x220>
   2c4ec:	add	r1, pc, r1
   2c4f0:	ldr	r7, [pc, #248]	; 2c5f0 <do_numeric+0x224>
   2c4f4:	add	r7, pc, r7
   2c4f8:	str	r7, [sp]
   2c4fc:	str	r5, [sp, #4]
   2c500:	str	r0, [sp, #8]
   2c504:	str	r1, [sp, #12]
   2c508:	mov	r0, sl
   2c50c:	mov	r1, #0
   2c510:	bl	d430 <sendto_channel_flags@plt>
   2c514:	sub	sp, fp, #28
   2c518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c51c:	ldr	r1, [r0, #36]	; 0x24
   2c520:	cmp	r1, sl
   2c524:	ldr	r2, [sp, #16]
   2c528:	beq	2c578 <do_numeric+0x1ac>
   2c52c:	movw	r3, #501	; 0x1f5
   2c530:	cmp	r5, r3
   2c534:	cmpeq	r7, #64	; 0x40
   2c538:	beq	2c56c <do_numeric+0x1a0>
   2c53c:	ldrh	r3, [r1, #80]	; 0x50
   2c540:	cmp	r3, #32
   2c544:	bne	2c564 <do_numeric+0x198>
   2c548:	ldrb	r3, [r1, #396]	; 0x18c
   2c54c:	cmp	r3, #0
   2c550:	beq	2c580 <do_numeric+0x1b4>
   2c554:	ldrb	r3, [r2, #396]!	; 0x18c
   2c558:	cmp	r3, #0
   2c55c:	subeq	r2, r2, #308	; 0x134
   2c560:	b	2c584 <do_numeric+0x1b8>
   2c564:	add	r2, r2, #88	; 0x58
   2c568:	b	2c5a4 <do_numeric+0x1d8>
   2c56c:	ldr	r3, [r0, #64]	; 0x40
   2c570:	ands	r3, r3, #8192	; 0x2000
   2c574:	beq	2c53c <do_numeric+0x170>
   2c578:	sub	sp, fp, #28
   2c57c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c580:	add	r2, r2, #88	; 0x58
   2c584:	ldrb	r1, [r1, #396]	; 0x18c
   2c588:	cmp	r1, #0
   2c58c:	beq	2c5a4 <do_numeric+0x1d8>
   2c590:	mov	r1, r0
   2c594:	ldrb	r3, [r1, #396]!	; 0x18c
   2c598:	cmp	r3, #0
   2c59c:	subeq	r1, r1, #308	; 0x134
   2c5a0:	b	2c5a8 <do_numeric+0x1dc>
   2c5a4:	add	r1, r0, #88	; 0x58
   2c5a8:	ldr	r3, [pc, #52]	; 2c5e4 <do_numeric+0x218>
   2c5ac:	add	r3, pc, r3
   2c5b0:	stm	sp, {r1, r3}
   2c5b4:	ldr	r1, [pc, #44]	; 2c5e8 <do_numeric+0x21c>
   2c5b8:	add	r1, pc, r1
   2c5bc:	mov	r3, r5
   2c5c0:	bl	d1e4 <sendto_one@plt>
   2c5c4:	sub	sp, fp, #28
   2c5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c5cc:	.word	0x0003dfe8
   2c5d0:	.word	0x0003e018
   2c5d4:	.word	0x0001b590
   2c5d8:	.word	0x00019fe3
   2c5dc:	.word	0x0003df98
   2c5e0:	.word	0x000195d1
   2c5e4:	.word	0x0003de88
   2c5e8:	.word	0x000194fa
   2c5ec:	.word	0x0003df48
   2c5f0:	.word	0x000195c2

0002c5f4 <handle_command>:
   2c5f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c5f8:	add	fp, sp, #28
   2c5fc:	sub	sp, sp, #92	; 0x5c
   2c600:	mov	r6, r1
   2c604:	mov	r7, r0
   2c608:	mov	r4, r2
   2c60c:	ldrh	r0, [r4, #64]!	; 0x40
   2c610:	mvn	r8, #0
   2c614:	movw	r1, #16418	; 0x4022
   2c618:	tst	r0, r1
   2c61c:	beq	2c62c <handle_command+0x38>
   2c620:	mov	r0, r8
   2c624:	sub	sp, fp, #28
   2c628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c62c:	mov	r5, r2
   2c630:	ldrh	r0, [r2, #80]	; 0x50
   2c634:	cmp	r0, #32
   2c638:	bne	2c648 <handle_command+0x54>
   2c63c:	ldr	r1, [r7, #8]
   2c640:	add	r1, r1, #1
   2c644:	str	r1, [r7, #8]
   2c648:	ldr	r1, [r7, #4]
   2c64c:	add	r1, r1, #1
   2c650:	str	r1, [r7, #4]
   2c654:	ldrb	r1, [r3, #82]	; 0x52
   2c658:	add	r1, r7, r1, lsl #3
   2c65c:	ldr	sl, [r1, #24]
   2c660:	ldr	ip, [r6, #200]	; 0xc8
   2c664:	cmp	ip, sl
   2c668:	bcs	2c6fc <handle_command+0x108>
   2c66c:	add	r9, r5, #88	; 0x58
   2c670:	cmp	r0, #32
   2c674:	bne	2c748 <handle_command+0x154>
   2c678:	ldr	r0, [r7]
   2c67c:	stm	sp, {r0, ip}
   2c680:	str	sl, [sp, #8]
   2c684:	ldr	r2, [pc, #300]	; 2c7b8 <handle_command+0x1c4>
   2c688:	add	r2, pc, r2
   2c68c:	mov	r0, #256	; 0x100
   2c690:	mov	r1, #0
   2c694:	mov	r3, r9
   2c698:	bl	d634 <sendto_realops_snomask@plt>
   2c69c:	ldr	r2, [r6, #200]	; 0xc8
   2c6a0:	ldr	r0, [r7]
   2c6a4:	stm	sp, {r0, r9}
   2c6a8:	ldr	r1, [pc, #268]	; 2c7bc <handle_command+0x1c8>
   2c6ac:	add	r1, pc, r1
   2c6b0:	mov	r0, #5
   2c6b4:	mov	r3, sl
   2c6b8:	bl	e0b4 <ilog@plt>
   2c6bc:	ldr	r3, [r6, #200]	; 0xc8
   2c6c0:	ldr	r0, [r7]
   2c6c4:	str	sl, [sp]
   2c6c8:	str	r0, [sp, #4]
   2c6cc:	add	r4, sp, #12
   2c6d0:	ldr	r2, [pc, #232]	; 2c7c0 <handle_command+0x1cc>
   2c6d4:	add	r2, pc, r2
   2c6d8:	mov	r0, r4
   2c6dc:	mov	r1, #80	; 0x50
   2c6e0:	bl	de74 <snprintf@plt>
   2c6e4:	mov	r0, r5
   2c6e8:	mov	r1, r5
   2c6ec:	mov	r2, r5
   2c6f0:	mov	r3, r4
   2c6f4:	bl	e534 <exit_client@plt>
   2c6f8:	b	2c620 <handle_command+0x2c>
   2c6fc:	ldr	lr, [r1, #20]
   2c700:	cmp	sl, #0
   2c704:	beq	2c724 <handle_command+0x130>
   2c708:	add	r1, r6, sl, lsl #2
   2c70c:	ldr	r1, [r1, #200]	; 0xc8
   2c710:	cmp	r1, #0
   2c714:	beq	2c66c <handle_command+0x78>
   2c718:	ldrb	r1, [r1]
   2c71c:	cmp	r1, #0
   2c720:	beq	2c66c <handle_command+0x78>
   2c724:	add	r0, r6, #204	; 0xcc
   2c728:	str	r0, [sp]
   2c72c:	mov	r0, r6
   2c730:	mov	r1, r5
   2c734:	mov	r2, r3
   2c738:	mov	r3, ip
   2c73c:	blx	lr
   2c740:	mov	r8, #1
   2c744:	b	2c620 <handle_command+0x2c>
   2c748:	ldrb	r0, [r5, #88]	; 0x58
   2c74c:	ldr	r1, [r7]
   2c750:	str	r1, [sp]
   2c754:	ldr	r1, [pc, #80]	; 2c7ac <handle_command+0x1b8>
   2c758:	add	r1, pc, r1
   2c75c:	cmp	r0, #0
   2c760:	moveq	r9, r1
   2c764:	ldr	r0, [pc, #68]	; 2c7b0 <handle_command+0x1bc>
   2c768:	ldr	r0, [pc, r0]
   2c76c:	add	r2, r0, #88	; 0x58
   2c770:	ldr	r1, [pc, #60]	; 2c7b4 <handle_command+0x1c0>
   2c774:	add	r1, pc, r1
   2c778:	mov	r0, r5
   2c77c:	mov	r3, r9
   2c780:	bl	d1e4 <sendto_one@plt>
   2c784:	ldrb	r0, [r4, #1]
   2c788:	tst	r0, #32
   2c78c:	bne	2c798 <handle_command+0x1a4>
   2c790:	mvn	r8, #0
   2c794:	b	2c620 <handle_command+0x2c>
   2c798:	ldrh	r0, [r5, #80]	; 0x50
   2c79c:	mov	r8, #1
   2c7a0:	cmp	r0, #64	; 0x40
   2c7a4:	mvnne	r8, #0
   2c7a8:	b	2c620 <handle_command+0x2c>
   2c7ac:	.word	0x00014f45
   2c7b0:	.word	0x0002e3f0
   2c7b4:	.word	0x00019142
   2c7b8:	.word	0x00019253
   2c7bc:	.word	0x00019289
   2c7c0:	.word	0x0001929f

0002c7c4 <handle_encap>:
   2c7c4:	push	{r4, r5, r6, sl, fp, lr}
   2c7c8:	add	fp, sp, #16
   2c7cc:	sub	sp, sp, #8
   2c7d0:	mov	r4, r2
   2c7d4:	mov	r5, r1
   2c7d8:	mov	r6, r0
   2c7dc:	ldr	r0, [pc, #120]	; 2c85c <handle_encap+0x98>
   2c7e0:	ldr	r0, [pc, r0]
   2c7e4:	ldr	r0, [r0]
   2c7e8:	mov	r1, r3
   2c7ec:	bl	e6e4 <rb_dictionary_retrieve@plt>
   2c7f0:	cmp	r0, #0
   2c7f4:	beq	2c854 <handle_encap+0x90>
   2c7f8:	ldr	r1, [r0]
   2c7fc:	cmp	r1, #0
   2c800:	beq	2c854 <handle_encap+0x90>
   2c804:	ldr	r3, [fp, #8]
   2c808:	ldr	r2, [r0, #56]	; 0x38
   2c80c:	cmp	r2, r3
   2c810:	bhi	2c854 <handle_encap+0x90>
   2c814:	ldr	r1, [fp, #12]
   2c818:	ldr	ip, [r0, #52]	; 0x34
   2c81c:	cmp	r2, #0
   2c820:	beq	2c840 <handle_encap+0x7c>
   2c824:	add	r0, r1, r2, lsl #2
   2c828:	ldr	r0, [r0, #-4]
   2c82c:	cmp	r0, #0
   2c830:	beq	2c854 <handle_encap+0x90>
   2c834:	ldrb	r0, [r0]
   2c838:	cmp	r0, #0
   2c83c:	beq	2c854 <handle_encap+0x90>
   2c840:	str	r1, [sp]
   2c844:	mov	r0, r6
   2c848:	mov	r1, r5
   2c84c:	mov	r2, r4
   2c850:	blx	ip
   2c854:	sub	sp, fp, #16
   2c858:	pop	{r4, r5, r6, sl, fp, pc}
   2c85c:	.word	0x0002e14c

0002c860 <clear_hash_parse>:
   2c860:	push	{fp, lr}
   2c864:	mov	fp, sp
   2c868:	ldr	r1, [pc, #28]	; 2c88c <clear_hash_parse+0x2c>
   2c86c:	ldr	r1, [pc, r1]
   2c870:	ldr	r0, [pc, #24]	; 2c890 <clear_hash_parse+0x30>
   2c874:	add	r0, pc, r0
   2c878:	bl	dfb8 <rb_dictionary_create@plt>
   2c87c:	ldr	r1, [pc, #16]	; 2c894 <clear_hash_parse+0x34>
   2c880:	ldr	r1, [pc, r1]
   2c884:	str	r0, [r1]
   2c888:	pop	{fp, pc}
   2c88c:	.word	0x0002e044
   2c890:	.word	0x00018f75
   2c894:	.word	0x0002e0ac

0002c898 <mod_add_cmd>:
   2c898:	push	{r4, r5, fp, lr}
   2c89c:	add	fp, sp, #8
   2c8a0:	cmp	r0, #0
   2c8a4:	popeq	{r4, r5, fp, pc}
   2c8a8:	mov	r4, r0
   2c8ac:	ldr	r1, [r0]
   2c8b0:	ldr	r5, [pc, #76]	; 2c904 <mod_add_cmd+0x6c>
   2c8b4:	ldr	r5, [pc, r5]
   2c8b8:	ldr	r0, [r5]
   2c8bc:	bl	d5c8 <rb_dictionary_find@plt>
   2c8c0:	cmp	r0, #0
   2c8c4:	beq	2c8e0 <mod_add_cmd+0x48>
   2c8c8:	ldr	r2, [r4]
   2c8cc:	ldr	r1, [pc, #52]	; 2c908 <mod_add_cmd+0x70>
   2c8d0:	add	r1, pc, r1
   2c8d4:	mov	r0, #0
   2c8d8:	pop	{r4, r5, fp, lr}
   2c8dc:	b	e0b4 <ilog@plt>
   2c8e0:	mov	r0, #0
   2c8e4:	str	r0, [r4, #4]
   2c8e8:	str	r0, [r4, #8]
   2c8ec:	str	r0, [r4, #12]
   2c8f0:	ldr	r1, [r4]
   2c8f4:	ldr	r0, [r5]
   2c8f8:	mov	r2, r4
   2c8fc:	pop	{r4, r5, fp, lr}
   2c900:	b	d700 <rb_dictionary_add@plt>
   2c904:	.word	0x0002e078
   2c908:	.word	0x00018f64

0002c90c <mod_del_cmd>:
   2c90c:	push	{r4, sl, fp, lr}
   2c910:	add	fp, sp, #8
   2c914:	cmp	r0, #0
   2c918:	popeq	{r4, sl, fp, pc}
   2c91c:	mov	r4, r0
   2c920:	ldr	r1, [r0]
   2c924:	ldr	r0, [pc, #44]	; 2c958 <mod_del_cmd+0x4c>
   2c928:	ldr	r0, [pc, r0]
   2c92c:	ldr	r0, [r0]
   2c930:	bl	d82c <rb_dictionary_delete@plt>
   2c934:	cmp	r0, #0
   2c938:	beq	2c940 <mod_del_cmd+0x34>
   2c93c:	pop	{r4, sl, fp, pc}
   2c940:	ldr	r2, [r4]
   2c944:	ldr	r1, [pc, #16]	; 2c95c <mod_del_cmd+0x50>
   2c948:	add	r1, pc, r1
   2c94c:	mov	r0, #0
   2c950:	pop	{r4, sl, fp, lr}
   2c954:	b	e0b4 <ilog@plt>
   2c958:	.word	0x0002e004
   2c95c:	.word	0x00018f0b

0002c960 <m_not_oper>:
   2c960:	mov	r0, r2
   2c964:	ldr	r2, [pc, #8]	; 2c974 <m_not_oper+0x14>
   2c968:	add	r2, pc, r2
   2c96c:	movw	r1, #481	; 0x1e1
   2c970:	b	dc7c <sendto_one_numeric@plt>
   2c974:	.word	0x00014697

0002c978 <m_unregistered>:
   2c978:	push	{r4, sl, fp, lr}
   2c97c:	add	fp, sp, #8
   2c980:	mov	r4, r1
   2c984:	ldrh	r0, [r1, #80]	; 0x50
   2c988:	sub	r0, r0, #1
   2c98c:	cmp	r0, #31
   2c990:	bhi	2c9a8 <m_unregistered+0x30>
   2c994:	mov	r1, #1
   2c998:	mov	r2, #-2147483645	; 0x80000003
   2c99c:	tst	r2, r1, lsl r0
   2c9a0:	beq	2c9a8 <m_unregistered+0x30>
   2c9a4:	pop	{r4, sl, fp, pc}
   2c9a8:	ldr	r0, [r4, #432]	; 0x1b0
   2c9ac:	ldr	r0, [r0, #272]	; 0x110
   2c9b0:	cmp	r0, #0
   2c9b4:	popne	{r4, sl, fp, pc}
   2c9b8:	ldr	r0, [pc, #40]	; 2c9e8 <m_unregistered+0x70>
   2c9bc:	ldr	r0, [pc, r0]
   2c9c0:	add	r2, r0, #88	; 0x58
   2c9c4:	ldr	r1, [pc, #32]	; 2c9ec <m_unregistered+0x74>
   2c9c8:	add	r1, pc, r1
   2c9cc:	mov	r0, r4
   2c9d0:	bl	d1e4 <sendto_one@plt>
   2c9d4:	ldr	r0, [r4, #432]	; 0x1b0
   2c9d8:	ldr	r1, [r0, #272]	; 0x110
   2c9dc:	add	r1, r1, #1
   2c9e0:	str	r1, [r0, #272]	; 0x110
   2c9e4:	pop	{r4, sl, fp, pc}
   2c9e8:	.word	0x0002e19c
   2c9ec:	.word	0x00018ea8

0002c9f0 <m_registered>:
   2c9f0:	mov	r0, r1
   2c9f4:	add	r3, r2, #88	; 0x58
   2c9f8:	ldr	r1, [pc, #16]	; 2ca10 <m_registered+0x20>
   2c9fc:	ldr	r1, [pc, r1]
   2ca00:	add	r2, r1, #88	; 0x58
   2ca04:	ldr	r1, [pc, #8]	; 2ca14 <m_registered+0x24>
   2ca08:	add	r1, pc, r1
   2ca0c:	b	d1e4 <sendto_one@plt>
   2ca10:	.word	0x0002e15c
   2ca14:	.word	0x00018e8b

0002ca18 <m_ignore>:
   2ca18:	bx	lr

0002ca1c <privilegeset_in_set>:
   2ca1c:	push	{fp, lr}
   2ca20:	mov	fp, sp
   2ca24:	ldr	r0, [r0, #12]
   2ca28:	bl	cfc8 <strstr@plt>
   2ca2c:	cmp	r0, #0
   2ca30:	movwne	r0, #1
   2ca34:	pop	{fp, pc}

0002ca38 <privilegeset_set_new>:
   2ca38:	push	{r4, r5, r6, r7, fp, lr}
   2ca3c:	add	fp, sp, #16
   2ca40:	mov	r4, r2
   2ca44:	mov	r5, r1
   2ca48:	mov	r7, r0
   2ca4c:	bl	2cae0 <privilegeset_get_any>
   2ca50:	cmp	r0, #0
   2ca54:	beq	2ca94 <privilegeset_set_new+0x5c>
   2ca58:	mov	r6, r0
   2ca5c:	ldr	r0, [r0]
   2ca60:	cmp	r0, #0
   2ca64:	bmi	2ca7c <privilegeset_set_new+0x44>
   2ca68:	ldr	r1, [pc, #108]	; 2cadc <privilegeset_set_new+0xa4>
   2ca6c:	add	r1, pc, r1
   2ca70:	mov	r0, #0
   2ca74:	mov	r2, r7
   2ca78:	bl	e0b4 <ilog@plt>
   2ca7c:	ldr	r1, [r6]
   2ca80:	ldr	r0, [r6, #12]
   2ca84:	bic	r1, r1, #-2147483648	; 0x80000000
   2ca88:	str	r1, [r6]
   2ca8c:	bl	2cb30 <rb_free>
   2ca90:	b	2cac4 <privilegeset_set_new+0x8c>
   2ca94:	mov	r0, #32
   2ca98:	bl	2cb3c <rb_malloc>
   2ca9c:	mov	r6, r0
   2caa0:	mov	r0, #0
   2caa4:	str	r0, [r6]
   2caa8:	str	r0, [r6, #4]
   2caac:	mov	r0, r7
   2cab0:	bl	2cb5c <rb_strdup>
   2cab4:	str	r0, [r6, #8]
   2cab8:	add	r1, r6, #20
   2cabc:	mov	r0, r6
   2cac0:	bl	2cb8c <rb_dlinkAdd>
   2cac4:	mov	r0, r5
   2cac8:	bl	2cb5c <rb_strdup>
   2cacc:	str	r0, [r6, #12]
   2cad0:	str	r4, [r6, #16]
   2cad4:	mov	r0, r6
   2cad8:	pop	{r4, r5, r6, r7, fp, pc}
   2cadc:	.word	0x00019054

0002cae0 <privilegeset_get_any>:
   2cae0:	push	{r4, r5, r6, sl, fp, lr}
   2cae4:	add	fp, sp, #16
   2cae8:	ldr	r6, [pc, #60]	; 2cb2c <privilegeset_get_any+0x4c>
   2caec:	ldr	r6, [pc, r6]
   2caf0:	cmp	r6, #0
   2caf4:	beq	2cb20 <privilegeset_get_any+0x40>
   2caf8:	mov	r4, r0
   2cafc:	ldr	r5, [r6]
   2cb00:	ldr	r0, [r5, #8]
   2cb04:	mov	r1, r4
   2cb08:	bl	d340 <rb_strcasecmp@plt>
   2cb0c:	cmp	r0, #0
   2cb10:	beq	2cb24 <privilegeset_get_any+0x44>
   2cb14:	ldr	r6, [r6, #8]
   2cb18:	cmp	r6, #0
   2cb1c:	bne	2cafc <privilegeset_get_any+0x1c>
   2cb20:	mov	r5, #0
   2cb24:	mov	r0, r5
   2cb28:	pop	{r4, r5, r6, sl, fp, pc}
   2cb2c:	.word	0x0003dd48

0002cb30 <rb_free>:
   2cb30:	cmp	r0, #0
   2cb34:	bxeq	lr
   2cb38:	b	d328 <free@plt>

0002cb3c <rb_malloc>:
   2cb3c:	push	{fp, lr}
   2cb40:	mov	fp, sp
   2cb44:	mov	r1, r0
   2cb48:	mov	r0, #1
   2cb4c:	bl	cfa4 <calloc@plt>
   2cb50:	cmp	r0, #0
   2cb54:	popne	{fp, pc}
   2cb58:	bl	d448 <rb_outofmemory@plt>

0002cb5c <rb_strdup>:
   2cb5c:	push	{r4, sl, fp, lr}
   2cb60:	add	fp, sp, #8
   2cb64:	mov	r4, r0
   2cb68:	bl	dc94 <strlen@plt>
   2cb6c:	add	r0, r0, #1
   2cb70:	bl	da84 <malloc@plt>
   2cb74:	cmp	r0, #0
   2cb78:	beq	2cb88 <rb_strdup+0x2c>
   2cb7c:	mov	r1, r4
   2cb80:	pop	{r4, sl, fp, lr}
   2cb84:	b	d91c <strcpy@plt>
   2cb88:	bl	d448 <rb_outofmemory@plt>

0002cb8c <rb_dlinkAdd>:
   2cb8c:	push	{fp, lr}
   2cb90:	mov	fp, sp
   2cb94:	cmp	r0, #0
   2cb98:	beq	2cbf8 <rb_dlinkAdd+0x6c>
   2cb9c:	cmp	r1, #0
   2cba0:	beq	2cc18 <rb_dlinkAdd+0x8c>
   2cba4:	mov	r2, #0
   2cba8:	stm	r1, {r0, r2}
   2cbac:	ldr	r2, [pc, #132]	; 2cc38 <rb_dlinkAdd+0xac>
   2cbb0:	ldr	r2, [pc, r2]
   2cbb4:	str	r2, [r1, #8]
   2cbb8:	cmp	r2, #0
   2cbbc:	ldr	r0, [pc, #120]	; 2cc3c <rb_dlinkAdd+0xb0>
   2cbc0:	add	r0, pc, r0
   2cbc4:	beq	2cbd4 <rb_dlinkAdd+0x48>
   2cbc8:	add	r2, r2, #4
   2cbcc:	str	r1, [r2]
   2cbd0:	b	2cbe4 <rb_dlinkAdd+0x58>
   2cbd4:	mov	r2, r0
   2cbd8:	ldr	r3, [r2, #4]!
   2cbdc:	cmp	r3, #0
   2cbe0:	streq	r1, [r2]
   2cbe4:	str	r1, [r0]
   2cbe8:	ldr	r1, [r0, #8]
   2cbec:	add	r1, r1, #1
   2cbf0:	str	r1, [r0, #8]
   2cbf4:	pop	{fp, pc}
   2cbf8:	ldr	r0, [pc, #64]	; 2cc40 <rb_dlinkAdd+0xb4>
   2cbfc:	add	r0, pc, r0
   2cc00:	ldr	r1, [pc, #60]	; 2cc44 <rb_dlinkAdd+0xb8>
   2cc04:	add	r1, pc, r1
   2cc08:	ldr	r3, [pc, #56]	; 2cc48 <rb_dlinkAdd+0xbc>
   2cc0c:	add	r3, pc, r3
   2cc10:	mov	r2, #143	; 0x8f
   2cc14:	bl	e7e0 <__assert_fail@plt>
   2cc18:	ldr	r0, [pc, #44]	; 2cc4c <rb_dlinkAdd+0xc0>
   2cc1c:	add	r0, pc, r0
   2cc20:	ldr	r1, [pc, #40]	; 2cc50 <rb_dlinkAdd+0xc4>
   2cc24:	add	r1, pc, r1
   2cc28:	ldr	r3, [pc, #36]	; 2cc54 <rb_dlinkAdd+0xc8>
   2cc2c:	add	r3, pc, r3
   2cc30:	mov	r2, #144	; 0x90
   2cc34:	bl	e7e0 <__assert_fail@plt>
   2cc38:	.word	0x0003dc84
   2cc3c:	.word	0x0003dc74
   2cc40:	.word	0x00013d75
   2cc44:	.word	0x00013d12
   2cc48:	.word	0x00013d72
   2cc4c:	.word	0x00013cf0
   2cc50:	.word	0x00013cf2
   2cc54:	.word	0x00013d52

0002cc58 <privilegeset_extend>:
   2cc58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cc5c:	add	fp, sp, #24
   2cc60:	mov	r8, r3
   2cc64:	mov	r4, r2
   2cc68:	mov	r7, r1
   2cc6c:	mov	r6, r0
   2cc70:	mov	r0, r1
   2cc74:	bl	2cae0 <privilegeset_get_any>
   2cc78:	cmp	r0, #0
   2cc7c:	beq	2ccbc <privilegeset_extend+0x64>
   2cc80:	mov	r5, r0
   2cc84:	ldr	r0, [r0]
   2cc88:	cmp	r0, #0
   2cc8c:	bmi	2cca4 <privilegeset_extend+0x4c>
   2cc90:	ldr	r1, [pc, #176]	; 2cd48 <privilegeset_extend+0xf0>
   2cc94:	add	r1, pc, r1
   2cc98:	mov	r0, #0
   2cc9c:	mov	r2, r7
   2cca0:	bl	e0b4 <ilog@plt>
   2cca4:	ldr	r1, [r5]
   2cca8:	ldr	r0, [r5, #12]
   2ccac:	bic	r1, r1, #-2147483648	; 0x80000000
   2ccb0:	str	r1, [r5]
   2ccb4:	bl	2cb30 <rb_free>
   2ccb8:	b	2ccec <privilegeset_extend+0x94>
   2ccbc:	mov	r0, #32
   2ccc0:	bl	2cb3c <rb_malloc>
   2ccc4:	mov	r5, r0
   2ccc8:	mov	r0, #0
   2cccc:	str	r0, [r5]
   2ccd0:	str	r0, [r5, #4]
   2ccd4:	mov	r0, r7
   2ccd8:	bl	2cb5c <rb_strdup>
   2ccdc:	str	r0, [r5, #8]
   2cce0:	add	r1, r5, #20
   2cce4:	mov	r0, r5
   2cce8:	bl	2cb8c <rb_dlinkAdd>
   2ccec:	str	r8, [r5, #16]
   2ccf0:	ldr	r0, [r6, #12]
   2ccf4:	bl	dc94 <strlen@plt>
   2ccf8:	mov	r7, r0
   2ccfc:	mov	r0, r4
   2cd00:	bl	dc94 <strlen@plt>
   2cd04:	add	r0, r7, r0
   2cd08:	add	r0, r0, #2
   2cd0c:	bl	2cb3c <rb_malloc>
   2cd10:	str	r0, [r5, #12]
   2cd14:	ldr	r1, [r6, #12]
   2cd18:	bl	d91c <strcpy@plt>
   2cd1c:	ldr	r6, [r5, #12]
   2cd20:	mov	r0, r6
   2cd24:	bl	dc94 <strlen@plt>
   2cd28:	add	r0, r6, r0
   2cd2c:	mov	r1, #32
   2cd30:	strh	r1, [r0]
   2cd34:	ldr	r0, [r5, #12]
   2cd38:	mov	r1, r4
   2cd3c:	bl	d8b0 <strcat@plt>
   2cd40:	mov	r0, r5
   2cd44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cd48:	.word	0x00018e2c

0002cd4c <privilegeset_get>:
   2cd4c:	push	{fp, lr}
   2cd50:	mov	fp, sp
   2cd54:	bl	2cae0 <privilegeset_get_any>
   2cd58:	cmp	r0, #0
   2cd5c:	beq	2cd70 <privilegeset_get+0x24>
   2cd60:	ldr	r1, [r0]
   2cd64:	cmp	r1, #0
   2cd68:	movwmi	r0, #0
   2cd6c:	pop	{fp, pc}
   2cd70:	mov	r0, #0
   2cd74:	pop	{fp, pc}

0002cd78 <privilegeset_ref>:
   2cd78:	ldr	r1, [r0, #4]
   2cd7c:	add	r1, r1, #1
   2cd80:	str	r1, [r0, #4]
   2cd84:	bx	lr

0002cd88 <privilegeset_unref>:
   2cd88:	push	{r4, sl, fp, lr}
   2cd8c:	add	fp, sp, #8
   2cd90:	mov	r4, r0
   2cd94:	ldr	r0, [r0, #4]
   2cd98:	cmp	r0, #1
   2cd9c:	blt	2cdac <privilegeset_unref+0x24>
   2cda0:	sub	r0, r0, #1
   2cda4:	str	r0, [r4, #4]
   2cda8:	b	2cdc4 <privilegeset_unref+0x3c>
   2cdac:	ldr	r2, [r4, #8]
   2cdb0:	ldr	r1, [pc, #72]	; 2ce00 <privilegeset_unref+0x78>
   2cdb4:	add	r1, pc, r1
   2cdb8:	mov	r0, #0
   2cdbc:	bl	e0b4 <ilog@plt>
   2cdc0:	ldr	r0, [r4, #4]
   2cdc4:	cmp	r0, #0
   2cdc8:	popne	{r4, sl, fp, pc}
   2cdcc:	ldr	r0, [r4]
   2cdd0:	cmn	r0, #1
   2cdd4:	ble	2cddc <privilegeset_unref+0x54>
   2cdd8:	pop	{r4, sl, fp, pc}
   2cddc:	add	r0, r4, #20
   2cde0:	bl	2ce04 <rb_dlinkDelete>
   2cde4:	ldr	r0, [r4, #8]
   2cde8:	bl	2cb30 <rb_free>
   2cdec:	ldr	r0, [r4, #12]
   2cdf0:	bl	2cb30 <rb_free>
   2cdf4:	mov	r0, r4
   2cdf8:	pop	{r4, sl, fp, lr}
   2cdfc:	b	2cb30 <rb_free>
   2ce00:	.word	0x00018d21

0002ce04 <rb_dlinkDelete>:
   2ce04:	push	{fp, lr}
   2ce08:	mov	fp, sp
   2ce0c:	cmp	r0, #0
   2ce10:	beq	2ce60 <rb_dlinkDelete+0x5c>
   2ce14:	ldr	ip, [pc, #100]	; 2ce80 <rb_dlinkDelete+0x7c>
   2ce18:	add	ip, pc, ip
   2ce1c:	ldmib	r0, {r2, r3}
   2ce20:	add	r1, r3, #4
   2ce24:	cmp	r3, #0
   2ce28:	addeq	r1, ip, #4
   2ce2c:	str	r2, [r1]
   2ce30:	ldmib	r0, {r1, r2}
   2ce34:	cmp	r1, #0
   2ce38:	mov	r3, ip
   2ce3c:	addne	r3, r1, #8
   2ce40:	str	r2, [r3]
   2ce44:	mov	r1, #0
   2ce48:	str	r1, [r0, #4]
   2ce4c:	str	r1, [r0, #8]
   2ce50:	ldr	r0, [ip, #8]
   2ce54:	sub	r0, r0, #1
   2ce58:	str	r0, [ip, #8]
   2ce5c:	pop	{fp, pc}
   2ce60:	ldr	r0, [pc, #28]	; 2ce84 <rb_dlinkDelete+0x80>
   2ce64:	add	r0, pc, r0
   2ce68:	ldr	r1, [pc, #24]	; 2ce88 <rb_dlinkDelete+0x84>
   2ce6c:	add	r1, pc, r1
   2ce70:	ldr	r3, [pc, #20]	; 2ce8c <rb_dlinkDelete+0x88>
   2ce74:	add	r3, pc, r3
   2ce78:	mov	r2, #235	; 0xeb
   2ce7c:	bl	e7e0 <__assert_fail@plt>
   2ce80:	.word	0x0003da1c
   2ce84:	.word	0x00013aa8
   2ce88:	.word	0x00013aaa
   2ce8c:	.word	0x00013b45

0002ce90 <privilegeset_mark_all_illegal>:
   2ce90:	push	{r4, r5, r6, r7, fp, lr}
   2ce94:	add	fp, sp, #16
   2ce98:	ldr	r6, [pc, #104]	; 2cf08 <privilegeset_mark_all_illegal+0x78>
   2ce9c:	ldr	r6, [pc, r6]
   2cea0:	cmp	r6, #0
   2cea4:	beq	2cf04 <privilegeset_mark_all_illegal+0x74>
   2cea8:	ldr	r4, [pc, #92]	; 2cf0c <privilegeset_mark_all_illegal+0x7c>
   2ceac:	add	r4, pc, r4
   2ceb0:	ldr	r5, [pc, #88]	; 2cf10 <privilegeset_mark_all_illegal+0x80>
   2ceb4:	add	r5, pc, r5
   2ceb8:	b	2cec8 <privilegeset_mark_all_illegal+0x38>
   2cebc:	ldr	r6, [r6, #8]
   2cec0:	cmp	r6, #0
   2cec4:	beq	2cf04 <privilegeset_mark_all_illegal+0x74>
   2cec8:	ldr	r7, [r6]
   2cecc:	ldr	r0, [r7, #8]
   2ced0:	mov	r1, r4
   2ced4:	bl	d0c4 <strcmp@plt>
   2ced8:	cmp	r0, #0
   2cedc:	beq	2cebc <privilegeset_mark_all_illegal+0x2c>
   2cee0:	ldr	r1, [r7]
   2cee4:	ldr	r0, [r7, #12]
   2cee8:	orr	r1, r1, #-2147483648	; 0x80000000
   2ceec:	str	r1, [r7]
   2cef0:	bl	2cb30 <rb_free>
   2cef4:	mov	r0, r5
   2cef8:	bl	2cb5c <rb_strdup>
   2cefc:	str	r0, [r7, #12]
   2cf00:	b	2cebc <privilegeset_mark_all_illegal+0x2c>
   2cf04:	pop	{r4, r5, r6, r7, fp, pc}
   2cf08:	.word	0x0003d998
   2cf0c:	.word	0x000144c8
   2cf10:	.word	0x00018ca1

0002cf14 <privilegeset_delete_all_illegal>:
   2cf14:	push	{r4, sl, fp, lr}
   2cf18:	add	fp, sp, #8
   2cf1c:	ldr	r4, [pc, #36]	; 2cf48 <privilegeset_delete_all_illegal+0x34>
   2cf20:	ldr	r4, [pc, r4]
   2cf24:	cmp	r4, #0
   2cf28:	beq	2cf44 <privilegeset_delete_all_illegal+0x30>
   2cf2c:	ldr	r0, [r4]
   2cf30:	ldr	r4, [r4, #8]
   2cf34:	bl	daf0 <privilegeset_ref@plt>
   2cf38:	bl	e630 <privilegeset_unref@plt>
   2cf3c:	cmp	r4, #0
   2cf40:	bne	2cf2c <privilegeset_delete_all_illegal+0x18>
   2cf44:	pop	{r4, sl, fp, pc}
   2cf48:	.word	0x0003d914

0002cf4c <privilegeset_report>:
   2cf4c:	push	{r4, r5, r6, sl, fp, lr}
   2cf50:	add	fp, sp, #16
   2cf54:	sub	sp, sp, #8
   2cf58:	ldr	r6, [pc, #72]	; 2cfa8 <privilegeset_report+0x5c>
   2cf5c:	ldr	r6, [pc, r6]
   2cf60:	cmp	r6, #0
   2cf64:	beq	2cfa0 <privilegeset_report+0x54>
   2cf68:	mov	r4, r0
   2cf6c:	ldr	r5, [pc, #56]	; 2cfac <privilegeset_report+0x60>
   2cf70:	add	r5, pc, r5
   2cf74:	ldr	r0, [r6]
   2cf78:	ldr	r3, [r0, #8]
   2cf7c:	ldr	r0, [r0, #12]
   2cf80:	str	r0, [sp]
   2cf84:	mov	r0, r4
   2cf88:	mov	r1, #249	; 0xf9
   2cf8c:	mov	r2, r5
   2cf90:	bl	dc7c <sendto_one_numeric@plt>
   2cf94:	ldr	r6, [r6, #8]
   2cf98:	cmp	r6, #0
   2cf9c:	bne	2cf74 <privilegeset_report+0x28>
   2cfa0:	sub	sp, fp, #16
   2cfa4:	pop	{r4, r5, r6, sl, fp, pc}
   2cfa8:	.word	0x0003d8d8
   2cfac:	.word	0x00018b85

0002cfb0 <ratelimit_client>:
   2cfb0:	push	{r4, r5, r6, r7, fp, lr}
   2cfb4:	add	fp, sp, #16
   2cfb8:	mov	r4, r1
   2cfbc:	mov	r5, r0
   2cfc0:	ldr	r0, [r0, #432]	; 0x1b0
   2cfc4:	ldr	r0, [r0, #420]	; 0x1a4
   2cfc8:	cmp	r0, #0
   2cfcc:	bne	2cfec <ratelimit_client+0x3c>
   2cfd0:	bl	d07c <rb_current_time@plt>
   2cfd4:	ldr	r1, [pc, #172]	; 2d088 <ratelimit_client+0xd8>
   2cfd8:	ldr	r1, [pc, r1]
   2cfdc:	ldr	r1, [r1, #328]	; 0x148
   2cfe0:	sub	r0, r0, r1
   2cfe4:	ldr	r1, [r5, #432]	; 0x1b0
   2cfe8:	str	r0, [r1, #420]	; 0x1a4
   2cfec:	ldr	r6, [pc, #152]	; 2d08c <ratelimit_client+0xdc>
   2cff0:	ldr	r6, [pc, r6]
   2cff4:	ldr	r0, [r6, #328]	; 0x148
   2cff8:	cmp	r0, r4
   2cffc:	movcc	r4, r0
   2d000:	ldr	r0, [r5, #432]	; 0x1b0
   2d004:	ldr	r7, [r0, #420]	; 0x1a4
   2d008:	bl	d07c <rb_current_time@plt>
   2d00c:	ldr	r1, [r6, #328]	; 0x148
   2d010:	sub	r0, r0, r1
   2d014:	cmp	r7, r0
   2d018:	ble	2d050 <ratelimit_client+0xa0>
   2d01c:	ldr	r0, [r5, #432]	; 0x1b0
   2d020:	ldr	r0, [r0, #420]	; 0x1a4
   2d024:	add	r6, r0, r4
   2d028:	bl	d07c <rb_current_time@plt>
   2d02c:	cmp	r6, r0
   2d030:	bls	2d070 <ratelimit_client+0xc0>
   2d034:	ldr	r0, [pc, #84]	; 2d090 <ratelimit_client+0xe0>
   2d038:	ldr	r0, [pc, r0]
   2d03c:	ldr	r1, [r0, #128]	; 0x80
   2d040:	add	r1, r1, #1
   2d044:	str	r1, [r0, #128]	; 0x80
   2d048:	mov	r0, #0
   2d04c:	pop	{r4, r5, r6, r7, fp, pc}
   2d050:	bl	d07c <rb_current_time@plt>
   2d054:	add	r0, r0, r4
   2d058:	ldr	r1, [r6, #328]	; 0x148
   2d05c:	sub	r0, r0, r1
   2d060:	ldr	r1, [r5, #432]	; 0x1b0
   2d064:	str	r0, [r1, #420]	; 0x1a4
   2d068:	mov	r0, #1
   2d06c:	pop	{r4, r5, r6, r7, fp, pc}
   2d070:	ldr	r0, [r5, #432]	; 0x1b0
   2d074:	ldr	r1, [r0, #420]	; 0x1a4
   2d078:	add	r1, r1, r4
   2d07c:	str	r1, [r0, #420]	; 0x1a4
   2d080:	mov	r0, #1
   2d084:	pop	{r4, r5, r6, r7, fp, pc}
   2d088:	.word	0x0002dba4
   2d08c:	.word	0x0002db8c
   2d090:	.word	0x0002d984

0002d094 <ratelimit_client_who>:
   2d094:	ldr	r2, [r0, #432]	; 0x1b0
   2d098:	ldr	r3, [r2, #424]	; 0x1a8
   2d09c:	cmp	r3, #0
   2d0a0:	subne	r0, r3, #1
   2d0a4:	strne	r0, [r2, #424]	; 0x1a8
   2d0a8:	movne	r0, #1
   2d0ac:	bxne	lr
   2d0b0:	b	2cfb0 <ratelimit_client>

0002d0b4 <credit_client_join>:
   2d0b4:	ldr	r0, [r0, #432]	; 0x1b0
   2d0b8:	ldr	r1, [r0, #424]	; 0x1a8
   2d0bc:	add	r1, r1, #1
   2d0c0:	str	r1, [r0, #424]	; 0x1a8
   2d0c4:	bx	lr

0002d0c8 <delay_exit_length>:
   2d0c8:	ldr	r0, [pc, #8]	; 2d0d8 <delay_exit_length+0x10>
   2d0cc:	add	r0, pc, r0
   2d0d0:	ldr	r0, [r0, #8]
   2d0d4:	bx	lr
   2d0d8:	.word	0x0003d774

0002d0dc <init_reject>:
   2d0dc:	push	{fp, lr}
   2d0e0:	mov	fp, sp
   2d0e4:	mov	r0, #128	; 0x80
   2d0e8:	bl	d418 <rb_new_patricia@plt>
   2d0ec:	ldr	r1, [pc, #112]	; 2d164 <init_reject+0x88>
   2d0f0:	add	r1, pc, r1
   2d0f4:	str	r0, [r1]
   2d0f8:	mov	r0, #128	; 0x80
   2d0fc:	bl	d418 <rb_new_patricia@plt>
   2d100:	ldr	r1, [pc, #96]	; 2d168 <init_reject+0x8c>
   2d104:	add	r1, pc, r1
   2d108:	str	r0, [r1]
   2d10c:	ldr	r0, [pc, #88]	; 2d16c <init_reject+0x90>
   2d110:	add	r0, pc, r0
   2d114:	ldr	r1, [pc, #84]	; 2d170 <init_reject+0x94>
   2d118:	add	r1, pc, r1
   2d11c:	mov	r2, #0
   2d120:	mov	r3, #10
   2d124:	bl	d0e8 <rb_event_add@plt>
   2d128:	ldr	r0, [pc, #68]	; 2d174 <init_reject+0x98>
   2d12c:	add	r0, pc, r0
   2d130:	ldr	r1, [pc, #64]	; 2d178 <init_reject+0x9c>
   2d134:	add	r1, pc, r1
   2d138:	mov	r2, #0
   2d13c:	mov	r3, #60	; 0x3c
   2d140:	bl	d0e8 <rb_event_add@plt>
   2d144:	ldr	r0, [pc, #48]	; 2d17c <init_reject+0xa0>
   2d148:	add	r0, pc, r0
   2d14c:	ldr	r1, [pc, #44]	; 2d180 <init_reject+0xa4>
   2d150:	add	r1, pc, r1
   2d154:	mov	r2, #0
   2d158:	mov	r3, #10
   2d15c:	pop	{fp, lr}
   2d160:	b	d0e8 <rb_event_add@plt>
   2d164:	.word	0x0003d75c
   2d168:	.word	0x0003d74c
   2d16c:	.word	0x000189ee
   2d170:	.word	0x00000064
   2d174:	.word	0x000189de
   2d178:	.word	0x000001b0
   2d17c:	.word	0x000189d1
   2d180:	.word	0x00000234

0002d184 <reject_exit>:
   2d184:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d188:	add	fp, sp, #28
   2d18c:	sub	sp, sp, #12
   2d190:	ldr	r8, [pc, #304]	; 2d2c8 <reject_exit+0x144>
   2d194:	ldr	r8, [pc, r8]
   2d198:	cmp	r8, #0
   2d19c:	beq	2d2a8 <reject_exit+0x124>
   2d1a0:	ldr	r4, [pc, #292]	; 2d2cc <reject_exit+0x148>
   2d1a4:	add	r4, pc, r4
   2d1a8:	mov	r9, #0
   2d1ac:	ldr	r0, [pc, #284]	; 2d2d0 <reject_exit+0x14c>
   2d1b0:	ldr	r0, [pc, r0]
   2d1b4:	add	r5, r0, #88	; 0x58
   2d1b8:	ldr	sl, [pc, #276]	; 2d2d4 <reject_exit+0x150>
   2d1bc:	add	sl, pc, sl
   2d1c0:	b	2d23c <reject_exit+0xb8>
   2d1c4:	bl	d010 <get_user_ban_reason@plt>
   2d1c8:	ldr	r1, [pc, #264]	; 2d2d8 <reject_exit+0x154>
   2d1cc:	add	r1, pc, r1
   2d1d0:	str	r1, [sp]
   2d1d4:	str	r0, [sp, #4]
   2d1d8:	mov	r0, r4
   2d1dc:	mov	r1, #512	; 0x200
   2d1e0:	ldr	r2, [pc, #244]	; 2d2dc <reject_exit+0x158>
   2d1e4:	add	r2, pc, r2
   2d1e8:	mov	r3, r5
   2d1ec:	bl	de74 <snprintf@plt>
   2d1f0:	ldr	r7, [r6, #12]
   2d1f4:	mov	r0, r4
   2d1f8:	bl	dc94 <strlen@plt>
   2d1fc:	mov	r2, r0
   2d200:	mov	r0, r7
   2d204:	mov	r1, r4
   2d208:	bl	e738 <rb_write@plt>
   2d20c:	ldr	r0, [r6, #16]
   2d210:	bl	d184 <deref_conf@plt>
   2d214:	ldr	r0, [r6, #12]
   2d218:	mov	r1, sl
   2d21c:	mov	r2, #43	; 0x2b
   2d220:	bl	e738 <rb_write@plt>
   2d224:	ldr	r0, [r6, #12]
   2d228:	bl	db50 <rb_close@plt>
   2d22c:	mov	r0, r6
   2d230:	bl	2de38 <rb_free>
   2d234:	cmp	r8, #0
   2d238:	beq	2d2a8 <reject_exit+0x124>
   2d23c:	ldr	r6, [r8]
   2d240:	ldr	r8, [r8, #8]
   2d244:	strb	r9, [r4]
   2d248:	ldr	r0, [r6, #16]
   2d24c:	cmp	r0, #0
   2d250:	bne	2d1c4 <reject_exit+0x40>
   2d254:	ldr	r0, [r6, #20]
   2d258:	cmp	r0, #0
   2d25c:	beq	2d214 <reject_exit+0x90>
   2d260:	ldr	r1, [pc, #120]	; 2d2e0 <reject_exit+0x15c>
   2d264:	add	r1, pc, r1
   2d268:	str	r1, [sp]
   2d26c:	str	r0, [sp, #4]
   2d270:	mov	r0, r4
   2d274:	mov	r1, #512	; 0x200
   2d278:	ldr	r2, [pc, #100]	; 2d2e4 <reject_exit+0x160>
   2d27c:	add	r2, pc, r2
   2d280:	mov	r3, r5
   2d284:	bl	de74 <snprintf@plt>
   2d288:	ldr	r7, [r6, #12]
   2d28c:	mov	r0, r4
   2d290:	bl	dc94 <strlen@plt>
   2d294:	mov	r2, r0
   2d298:	mov	r0, r7
   2d29c:	mov	r1, r4
   2d2a0:	bl	e738 <rb_write@plt>
   2d2a4:	b	2d214 <reject_exit+0x90>
   2d2a8:	ldr	r0, [pc, #56]	; 2d2e8 <reject_exit+0x164>
   2d2ac:	add	r0, pc, r0
   2d2b0:	mov	r1, #0
   2d2b4:	str	r1, [r0]
   2d2b8:	str	r1, [r0, #4]
   2d2bc:	str	r1, [r0, #8]
   2d2c0:	sub	sp, fp, #28
   2d2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2c8:	.word	0x0003d6ac
   2d2cc:	.word	0x0003d6c8
   2d2d0:	.word	0x0002d9a8
   2d2d4:	.word	0x0001896e
   2d2d8:	.word	0x000144d1
   2d2dc:	.word	0x00018972
   2d2e0:	.word	0x00014439
   2d2e4:	.word	0x0001890c
   2d2e8:	.word	0x0003d594

0002d2ec <reject_expires>:
   2d2ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d2f0:	add	fp, sp, #28
   2d2f4:	sub	sp, sp, #4
   2d2f8:	ldr	r5, [pc, #124]	; 2d37c <reject_expires+0x90>
   2d2fc:	ldr	r5, [pc, r5]
   2d300:	cmp	r5, #0
   2d304:	beq	2d374 <reject_expires+0x88>
   2d308:	ldr	r9, [pc, #112]	; 2d380 <reject_expires+0x94>
   2d30c:	ldr	r9, [pc, r9]
   2d310:	ldr	r8, [pc, #108]	; 2d384 <reject_expires+0x98>
   2d314:	add	r8, pc, r8
   2d318:	b	2d328 <reject_expires+0x3c>
   2d31c:	cmp	r4, #0
   2d320:	mov	r5, r4
   2d324:	beq	2d374 <reject_expires+0x88>
   2d328:	ldr	r0, [r9, #288]	; 0x120
   2d32c:	ldr	sl, [r5]
   2d330:	ldr	r4, [r5, #8]
   2d334:	ldr	r7, [sl, #20]
   2d338:	ldr	r1, [r7, #20]
   2d33c:	add	r6, r0, r1
   2d340:	bl	d07c <rb_current_time@plt>
   2d344:	cmp	r6, r0
   2d348:	bgt	2d31c <reject_expires+0x30>
   2d34c:	mov	r0, r5
   2d350:	mov	r1, r8
   2d354:	bl	2d864 <rb_dlinkDelete>
   2d358:	mov	r0, r7
   2d35c:	bl	2d91c <reject_free>
   2d360:	ldr	r0, [pc, #32]	; 2d388 <reject_expires+0x9c>
   2d364:	ldr	r0, [pc, r0]
   2d368:	mov	r1, sl
   2d36c:	bl	cf74 <rb_patricia_remove@plt>
   2d370:	b	2d31c <reject_expires+0x30>
   2d374:	sub	sp, fp, #28
   2d378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d37c:	.word	0x0003d564
   2d380:	.word	0x0002d870
   2d384:	.word	0x0003d54c
   2d388:	.word	0x0003d4e8

0002d38c <throttle_expires>:
   2d38c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d390:	add	fp, sp, #28
   2d394:	sub	sp, sp, #4
   2d398:	ldr	r5, [pc, #124]	; 2d41c <throttle_expires+0x90>
   2d39c:	ldr	r5, [pc, r5]
   2d3a0:	cmp	r5, #0
   2d3a4:	beq	2d414 <throttle_expires+0x88>
   2d3a8:	ldr	r9, [pc, #112]	; 2d420 <throttle_expires+0x94>
   2d3ac:	ldr	r9, [pc, r9]
   2d3b0:	ldr	r8, [pc, #108]	; 2d424 <throttle_expires+0x98>
   2d3b4:	add	r8, pc, r8
   2d3b8:	b	2d3c8 <throttle_expires+0x3c>
   2d3bc:	cmp	r4, #0
   2d3c0:	mov	r5, r4
   2d3c4:	beq	2d414 <throttle_expires+0x88>
   2d3c8:	ldr	r0, [r9, #296]	; 0x128
   2d3cc:	ldr	sl, [r5]
   2d3d0:	ldr	r4, [r5, #8]
   2d3d4:	ldr	r7, [sl, #20]
   2d3d8:	ldr	r1, [r7, #12]
   2d3dc:	add	r6, r0, r1
   2d3e0:	bl	d07c <rb_current_time@plt>
   2d3e4:	cmp	r6, r0
   2d3e8:	bgt	2d3bc <throttle_expires+0x30>
   2d3ec:	mov	r0, r5
   2d3f0:	mov	r1, r8
   2d3f4:	bl	2d864 <rb_dlinkDelete>
   2d3f8:	mov	r0, r7
   2d3fc:	bl	2de38 <rb_free>
   2d400:	ldr	r0, [pc, #32]	; 2d428 <throttle_expires+0x9c>
   2d404:	ldr	r0, [pc, r0]
   2d408:	mov	r1, sl
   2d40c:	bl	cf74 <rb_patricia_remove@plt>
   2d410:	b	2d3bc <throttle_expires+0x30>
   2d414:	sub	sp, fp, #28
   2d418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d41c:	.word	0x0003d4b8
   2d420:	.word	0x0002d7d0
   2d424:	.word	0x0003d4a0
   2d428:	.word	0x0003d44c

0002d42c <throttle_size>:
   2d42c:	ldr	r1, [pc, #64]	; 2d474 <throttle_size+0x48>
   2d430:	ldr	r1, [pc, r1]
   2d434:	cmp	r1, #0
   2d438:	moveq	r0, #0
   2d43c:	bxeq	lr
   2d440:	ldr	r0, [pc, #48]	; 2d478 <throttle_size+0x4c>
   2d444:	ldr	r0, [pc, r0]
   2d448:	ldr	r2, [r0, #292]	; 0x124
   2d44c:	mov	r0, #0
   2d450:	ldr	r3, [r1]
   2d454:	ldr	r1, [r1, #8]
   2d458:	ldr	r3, [r3, #20]
   2d45c:	ldr	r3, [r3, #16]
   2d460:	cmp	r3, r2
   2d464:	addgt	r0, r0, #1
   2d468:	cmp	r1, #0
   2d46c:	bne	2d450 <throttle_size+0x24>
   2d470:	bx	lr
   2d474:	.word	0x0003d424
   2d478:	.word	0x0002d738

0002d47c <add_reject>:
   2d47c:	push	{r4, r5, r6, r7, fp, lr}
   2d480:	add	fp, sp, #16
   2d484:	mov	r7, r2
   2d488:	mov	r6, r0
   2d48c:	ldr	r0, [pc, #364]	; 2d600 <add_reject+0x184>
   2d490:	ldr	r0, [pc, r0]
   2d494:	ldr	r2, [r0, #284]	; 0x11c
   2d498:	cmp	r2, #0
   2d49c:	ldrne	r0, [r0, #288]	; 0x120
   2d4a0:	cmpne	r0, #0
   2d4a4:	bne	2d4ac <add_reject+0x30>
   2d4a8:	pop	{r4, r5, r6, r7, fp, pc}
   2d4ac:	mov	r4, r3
   2d4b0:	cmp	r1, #0
   2d4b4:	beq	2d518 <add_reject+0x9c>
   2d4b8:	mov	r0, r1
   2d4bc:	mov	r1, #32
   2d4c0:	bl	da78 <fnv_hash_upper@plt>
   2d4c4:	mov	r5, r0
   2d4c8:	cmp	r7, #0
   2d4cc:	beq	2d4e0 <add_reject+0x64>
   2d4d0:	mov	r0, r7
   2d4d4:	mov	r1, #32
   2d4d8:	bl	da78 <fnv_hash_upper@plt>
   2d4dc:	eor	r5, r0, r5
   2d4e0:	ldr	r1, [r6, #432]	; 0x1b0
   2d4e4:	ldr	r0, [pc, #280]	; 2d604 <add_reject+0x188>
   2d4e8:	ldr	r0, [pc, r0]
   2d4ec:	add	r1, r1, #140	; 0x8c
   2d4f0:	bl	d3c4 <rb_match_ip@plt>
   2d4f4:	cmp	r0, #0
   2d4f8:	beq	2d528 <add_reject+0xac>
   2d4fc:	ldr	r6, [r0, #20]
   2d500:	bl	d07c <rb_current_time@plt>
   2d504:	str	r0, [r6, #20]
   2d508:	ldr	r0, [r6, #24]
   2d50c:	add	r0, r0, #1
   2d510:	str	r0, [r6, #24]
   2d514:	b	2d584 <add_reject+0x108>
   2d518:	mov	r5, #0
   2d51c:	cmp	r7, #0
   2d520:	bne	2d4d0 <add_reject+0x54>
   2d524:	b	2d4e0 <add_reject+0x64>
   2d528:	ldr	r1, [r6, #432]	; 0x1b0
   2d52c:	ldrh	r0, [r1, #140]!	; 0x8c
   2d530:	cmp	r0, #10
   2d534:	mov	r2, #32
   2d538:	movweq	r2, #128	; 0x80
   2d53c:	ldr	r0, [pc, #196]	; 2d608 <add_reject+0x18c>
   2d540:	ldr	r0, [pc, r0]
   2d544:	bl	d250 <make_and_lookup_ip@plt>
   2d548:	mov	r7, r0
   2d54c:	mov	r0, #32
   2d550:	bl	2d60c <rb_malloc>
   2d554:	mov	r6, r0
   2d558:	str	r0, [r7, #20]
   2d55c:	mov	r0, r7
   2d560:	mov	r1, r6
   2d564:	bl	2d62c <rb_dlinkAddTail>
   2d568:	bl	d07c <rb_current_time@plt>
   2d56c:	mov	r1, #1
   2d570:	mov	r2, #0
   2d574:	str	r2, [r6, #12]
   2d578:	str	r2, [r6, #16]
   2d57c:	str	r0, [r6, #20]
   2d580:	str	r1, [r6, #24]
   2d584:	str	r5, [r6, #28]
   2d588:	cmp	r4, #0
   2d58c:	beq	2d5d4 <add_reject+0x158>
   2d590:	ldr	r0, [r6, #12]
   2d594:	cmp	r0, r4
   2d598:	beq	2d5d4 <add_reject+0x158>
   2d59c:	ldrb	r1, [r4]
   2d5a0:	tst	r1, #64	; 0x40
   2d5a4:	beq	2d5d4 <add_reject+0x158>
   2d5a8:	ldr	r1, [r4, #20]
   2d5ac:	cmp	r1, #0
   2d5b0:	beq	2d5d4 <add_reject+0x158>
   2d5b4:	cmp	r0, #0
   2d5b8:	beq	2d5c0 <add_reject+0x144>
   2d5bc:	bl	d184 <deref_conf@plt>
   2d5c0:	ldr	r0, [r4, #8]
   2d5c4:	add	r0, r0, #1
   2d5c8:	str	r0, [r4, #8]
   2d5cc:	str	r4, [r6, #12]
   2d5d0:	pop	{r4, r5, r6, r7, fp, pc}
   2d5d4:	ldr	r4, [fp, #8]
   2d5d8:	cmp	r4, #0
   2d5dc:	beq	2d4a8 <add_reject+0x2c>
   2d5e0:	ldr	r0, [r6, #12]
   2d5e4:	cmp	r0, #0
   2d5e8:	beq	2d5f0 <add_reject+0x174>
   2d5ec:	bl	d184 <deref_conf@plt>
   2d5f0:	mov	r0, #0
   2d5f4:	str	r0, [r6, #12]
   2d5f8:	str	r4, [r6, #16]
   2d5fc:	pop	{r4, r5, r6, r7, fp, pc}
   2d600:	.word	0x0002d6ec
   2d604:	.word	0x0003d364
   2d608:	.word	0x0003d30c

0002d60c <rb_malloc>:
   2d60c:	push	{fp, lr}
   2d610:	mov	fp, sp
   2d614:	mov	r1, r0
   2d618:	mov	r0, #1
   2d61c:	bl	cfa4 <calloc@plt>
   2d620:	cmp	r0, #0
   2d624:	popne	{fp, pc}
   2d628:	bl	d448 <rb_outofmemory@plt>

0002d62c <rb_dlinkAddTail>:
   2d62c:	push	{fp, lr}
   2d630:	mov	fp, sp
   2d634:	cmp	r1, #0
   2d638:	beq	2d6a0 <rb_dlinkAddTail+0x74>
   2d63c:	cmp	r0, #0
   2d640:	beq	2d6c0 <rb_dlinkAddTail+0x94>
   2d644:	mov	r2, #0
   2d648:	str	r2, [r1, #8]
   2d64c:	str	r0, [r1]
   2d650:	ldr	r0, [pc, #136]	; 2d6e0 <rb_dlinkAddTail+0xb4>
   2d654:	add	r0, pc, r0
   2d658:	ldr	r2, [r0, #4]
   2d65c:	str	r2, [r1, #4]
   2d660:	ldr	r2, [r0, #4]
   2d664:	cmp	r2, #0
   2d668:	beq	2d678 <rb_dlinkAddTail+0x4c>
   2d66c:	add	r2, r2, #8
   2d670:	str	r1, [r2]
   2d674:	b	2d68c <rb_dlinkAddTail+0x60>
   2d678:	ldr	r2, [pc, #100]	; 2d6e4 <rb_dlinkAddTail+0xb8>
   2d67c:	ldr	r2, [pc, r2]
   2d680:	cmp	r2, #0
   2d684:	mov	r2, r0
   2d688:	streq	r1, [r2]
   2d68c:	str	r1, [r0, #4]
   2d690:	ldr	r1, [r0, #8]
   2d694:	add	r1, r1, #1
   2d698:	str	r1, [r0, #8]
   2d69c:	pop	{fp, pc}
   2d6a0:	ldr	r0, [pc, #64]	; 2d6e8 <rb_dlinkAddTail+0xbc>
   2d6a4:	add	r0, pc, r0
   2d6a8:	ldr	r1, [pc, #60]	; 2d6ec <rb_dlinkAddTail+0xc0>
   2d6ac:	add	r1, pc, r1
   2d6b0:	ldr	r3, [pc, #56]	; 2d6f0 <rb_dlinkAddTail+0xc4>
   2d6b4:	add	r3, pc, r3
   2d6b8:	mov	r2, #211	; 0xd3
   2d6bc:	bl	e7e0 <__assert_fail@plt>
   2d6c0:	ldr	r0, [pc, #44]	; 2d6f4 <rb_dlinkAddTail+0xc8>
   2d6c4:	add	r0, pc, r0
   2d6c8:	ldr	r1, [pc, #40]	; 2d6f8 <rb_dlinkAddTail+0xcc>
   2d6cc:	add	r1, pc, r1
   2d6d0:	ldr	r3, [pc, #36]	; 2d6fc <rb_dlinkAddTail+0xd0>
   2d6d4:	add	r3, pc, r3
   2d6d8:	mov	r2, #213	; 0xd5
   2d6dc:	bl	e7e0 <__assert_fail@plt>
   2d6e0:	.word	0x0003d20c
   2d6e4:	.word	0x0003d1e4
   2d6e8:	.word	0x00013268
   2d6ec:	.word	0x0001326a
   2d6f0:	.word	0x0001327e
   2d6f4:	.word	0x000132ad
   2d6f8:	.word	0x0001324a
   2d6fc:	.word	0x0001325e

0002d700 <check_reject>:
   2d700:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d704:	add	fp, sp, #24
   2d708:	mov	r8, r0
   2d70c:	ldr	r4, [pc, #312]	; 2d84c <check_reject+0x14c>
   2d710:	ldr	r4, [pc, r4]
   2d714:	ldr	r0, [r4, #284]	; 0x11c
   2d718:	mov	r5, #0
   2d71c:	cmp	r0, #0
   2d720:	ldrne	r0, [r4, #288]	; 0x120
   2d724:	cmpne	r0, #0
   2d728:	bne	2d734 <check_reject+0x34>
   2d72c:	mov	r0, r5
   2d730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d734:	ldr	r0, [pc, #276]	; 2d850 <check_reject+0x150>
   2d738:	ldr	r0, [pc, r0]
   2d73c:	bl	d3c4 <rb_match_ip@plt>
   2d740:	cmp	r0, #0
   2d744:	beq	2d72c <check_reject+0x2c>
   2d748:	mov	r7, r0
   2d74c:	ldr	r6, [r0, #20]
   2d750:	bl	d07c <rb_current_time@plt>
   2d754:	str	r0, [r6, #20]
   2d758:	ldr	r0, [r6, #24]
   2d75c:	ldr	r1, [r4, #284]	; 0x11c
   2d760:	cmp	r0, r1
   2d764:	bls	2d72c <check_reject+0x2c>
   2d768:	ldr	r0, [r6, #12]
   2d76c:	cmp	r0, #0
   2d770:	beq	2d780 <check_reject+0x80>
   2d774:	ldr	r0, [r0]
   2d778:	cmn	r0, #1
   2d77c:	ble	2d81c <check_reject+0x11c>
   2d780:	mov	r0, #24
   2d784:	bl	2d60c <rb_malloc>
   2d788:	mov	r5, r0
   2d78c:	ldr	r0, [pc, #200]	; 2d85c <check_reject+0x15c>
   2d790:	ldr	r0, [pc, r0]
   2d794:	ldr	r1, [r0, #108]	; 0x6c
   2d798:	add	r1, r1, #1
   2d79c:	str	r1, [r0, #108]	; 0x6c
   2d7a0:	mov	r4, #0
   2d7a4:	mov	r0, r8
   2d7a8:	mov	r1, #3
   2d7ac:	mov	r2, #0
   2d7b0:	mov	r3, #0
   2d7b4:	bl	d304 <rb_setselect@plt>
   2d7b8:	ldr	r0, [r6, #12]
   2d7bc:	cmp	r0, #0
   2d7c0:	beq	2d7dc <check_reject+0xdc>
   2d7c4:	str	r0, [r5, #16]
   2d7c8:	ldr	r1, [r0, #8]
   2d7cc:	add	r1, r1, #1
   2d7d0:	str	r1, [r0, #8]
   2d7d4:	str	r4, [r5, #20]
   2d7d8:	b	2d7f8 <check_reject+0xf8>
   2d7dc:	ldr	r0, [r6, #16]
   2d7e0:	cmp	r0, #0
   2d7e4:	moveq	r0, #0
   2d7e8:	streq	r0, [r5, #16]
   2d7ec:	movne	r1, #0
   2d7f0:	strne	r1, [r5, #16]
   2d7f4:	str	r0, [r5, #20]
   2d7f8:	str	r8, [r5, #12]
   2d7fc:	ldr	r2, [pc, #92]	; 2d860 <check_reject+0x160>
   2d800:	add	r2, pc, r2
   2d804:	mov	r0, r5
   2d808:	mov	r1, r5
   2d80c:	bl	2d944 <rb_dlinkAdd>
   2d810:	mov	r5, #1
   2d814:	mov	r0, r5
   2d818:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d81c:	ldr	r1, [pc, #48]	; 2d854 <check_reject+0x154>
   2d820:	add	r1, pc, r1
   2d824:	mov	r0, r6
   2d828:	bl	2d864 <rb_dlinkDelete>
   2d82c:	mov	r0, r6
   2d830:	bl	2d91c <reject_free>
   2d834:	ldr	r0, [pc, #28]	; 2d858 <check_reject+0x158>
   2d838:	ldr	r0, [pc, r0]
   2d83c:	mov	r1, r7
   2d840:	bl	cf74 <rb_patricia_remove@plt>
   2d844:	mov	r0, r5
   2d848:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d84c:	.word	0x0002d46c
   2d850:	.word	0x0003d114
   2d854:	.word	0x0003d040
   2d858:	.word	0x0003d014
   2d85c:	.word	0x0002d22c
   2d860:	.word	0x0003d040

0002d864 <rb_dlinkDelete>:
   2d864:	push	{fp, lr}
   2d868:	mov	fp, sp
   2d86c:	cmp	r0, #0
   2d870:	beq	2d8c4 <rb_dlinkDelete+0x60>
   2d874:	cmp	r1, #0
   2d878:	beq	2d8e4 <rb_dlinkDelete+0x80>
   2d87c:	ldr	ip, [r0, #4]
   2d880:	ldr	r3, [r0, #8]
   2d884:	add	r2, r3, #4
   2d888:	cmp	r3, #0
   2d88c:	addeq	r2, r1, #4
   2d890:	str	ip, [r2]
   2d894:	ldmib	r0, {r2, ip}
   2d898:	cmp	r2, #0
   2d89c:	mov	r3, r1
   2d8a0:	addne	r3, r2, #8
   2d8a4:	str	ip, [r3]
   2d8a8:	mov	r2, #0
   2d8ac:	str	r2, [r0, #4]
   2d8b0:	str	r2, [r0, #8]
   2d8b4:	ldr	r0, [r1, #8]
   2d8b8:	sub	r0, r0, #1
   2d8bc:	str	r0, [r1, #8]
   2d8c0:	pop	{fp, pc}
   2d8c4:	ldr	r0, [pc, #56]	; 2d904 <rb_dlinkDelete+0xa0>
   2d8c8:	add	r0, pc, r0
   2d8cc:	ldr	r1, [pc, #52]	; 2d908 <rb_dlinkDelete+0xa4>
   2d8d0:	add	r1, pc, r1
   2d8d4:	ldr	r3, [pc, #48]	; 2d90c <rb_dlinkDelete+0xa8>
   2d8d8:	add	r3, pc, r3
   2d8dc:	mov	r2, #235	; 0xeb
   2d8e0:	bl	e7e0 <__assert_fail@plt>
   2d8e4:	ldr	r0, [pc, #36]	; 2d910 <rb_dlinkDelete+0xac>
   2d8e8:	add	r0, pc, r0
   2d8ec:	ldr	r1, [pc, #32]	; 2d914 <rb_dlinkDelete+0xb0>
   2d8f0:	add	r1, pc, r1
   2d8f4:	ldr	r3, [pc, #28]	; 2d918 <rb_dlinkDelete+0xb4>
   2d8f8:	add	r3, pc, r3
   2d8fc:	mov	r2, #236	; 0xec
   2d900:	bl	e7e0 <__assert_fail@plt>
   2d904:	.word	0x00013044
   2d908:	.word	0x00013046
   2d90c:	.word	0x000130e1
   2d910:	.word	0x000188ad
   2d914:	.word	0x00013026
   2d918:	.word	0x000130c1

0002d91c <reject_free>:
   2d91c:	push	{r4, sl, fp, lr}
   2d920:	add	fp, sp, #8
   2d924:	mov	r4, r0
   2d928:	ldr	r0, [r0, #12]
   2d92c:	cmp	r0, #0
   2d930:	beq	2d938 <reject_free+0x1c>
   2d934:	bl	d184 <deref_conf@plt>
   2d938:	mov	r0, r4
   2d93c:	pop	{r4, sl, fp, lr}
   2d940:	b	2de38 <rb_free>

0002d944 <rb_dlinkAdd>:
   2d944:	push	{fp, lr}
   2d948:	mov	fp, sp
   2d94c:	cmp	r0, #0
   2d950:	beq	2d9b0 <rb_dlinkAdd+0x6c>
   2d954:	cmp	r1, #0
   2d958:	beq	2d9d0 <rb_dlinkAdd+0x8c>
   2d95c:	cmp	r2, #0
   2d960:	beq	2d9f0 <rb_dlinkAdd+0xac>
   2d964:	mov	r3, #0
   2d968:	stm	r1, {r0, r3}
   2d96c:	ldr	r0, [r2]
   2d970:	str	r0, [r1, #8]
   2d974:	ldr	r0, [r2]
   2d978:	cmp	r0, #0
   2d97c:	beq	2d98c <rb_dlinkAdd+0x48>
   2d980:	add	r0, r0, #4
   2d984:	str	r1, [r0]
   2d988:	b	2d99c <rb_dlinkAdd+0x58>
   2d98c:	mov	r0, r2
   2d990:	ldr	r3, [r0, #4]!
   2d994:	cmp	r3, #0
   2d998:	streq	r1, [r0]
   2d99c:	str	r1, [r2]
   2d9a0:	ldr	r0, [r2, #8]
   2d9a4:	add	r0, r0, #1
   2d9a8:	str	r0, [r2, #8]
   2d9ac:	pop	{fp, pc}
   2d9b0:	ldr	r0, [pc, #88]	; 2da10 <rb_dlinkAdd+0xcc>
   2d9b4:	add	r0, pc, r0
   2d9b8:	ldr	r1, [pc, #84]	; 2da14 <rb_dlinkAdd+0xd0>
   2d9bc:	add	r1, pc, r1
   2d9c0:	ldr	r3, [pc, #80]	; 2da18 <rb_dlinkAdd+0xd4>
   2d9c4:	add	r3, pc, r3
   2d9c8:	mov	r2, #143	; 0x8f
   2d9cc:	bl	e7e0 <__assert_fail@plt>
   2d9d0:	ldr	r0, [pc, #68]	; 2da1c <rb_dlinkAdd+0xd8>
   2d9d4:	add	r0, pc, r0
   2d9d8:	ldr	r1, [pc, #64]	; 2da20 <rb_dlinkAdd+0xdc>
   2d9dc:	add	r1, pc, r1
   2d9e0:	ldr	r3, [pc, #60]	; 2da24 <rb_dlinkAdd+0xe0>
   2d9e4:	add	r3, pc, r3
   2d9e8:	mov	r2, #144	; 0x90
   2d9ec:	bl	e7e0 <__assert_fail@plt>
   2d9f0:	ldr	r0, [pc, #48]	; 2da28 <rb_dlinkAdd+0xe4>
   2d9f4:	add	r0, pc, r0
   2d9f8:	ldr	r1, [pc, #44]	; 2da2c <rb_dlinkAdd+0xe8>
   2d9fc:	add	r1, pc, r1
   2da00:	ldr	r3, [pc, #40]	; 2da30 <rb_dlinkAdd+0xec>
   2da04:	add	r3, pc, r3
   2da08:	mov	r2, #145	; 0x91
   2da0c:	bl	e7e0 <__assert_fail@plt>
   2da10:	.word	0x00012fbd
   2da14:	.word	0x00012f5a
   2da18:	.word	0x00012fba
   2da1c:	.word	0x00012f38
   2da20:	.word	0x00012f3a
   2da24:	.word	0x00012f9a
   2da28:	.word	0x000187a1
   2da2c:	.word	0x00012f1a
   2da30:	.word	0x00012f7a

0002da34 <is_reject_ip>:
   2da34:	push	{r4, r5, fp, lr}
   2da38:	add	fp, sp, #8
   2da3c:	mov	r1, r0
   2da40:	ldr	r5, [pc, #108]	; 2dab4 <is_reject_ip+0x80>
   2da44:	ldr	r5, [pc, r5]
   2da48:	ldr	r0, [r5, #284]	; 0x11c
   2da4c:	mov	r4, #0
   2da50:	cmp	r0, #0
   2da54:	ldrne	r0, [r5, #288]	; 0x120
   2da58:	cmpne	r0, #0
   2da5c:	bne	2da68 <is_reject_ip+0x34>
   2da60:	mov	r0, r4
   2da64:	pop	{r4, r5, fp, pc}
   2da68:	ldr	r0, [pc, #72]	; 2dab8 <is_reject_ip+0x84>
   2da6c:	ldr	r0, [pc, r0]
   2da70:	bl	d3c4 <rb_match_ip@plt>
   2da74:	cmp	r0, #0
   2da78:	beq	2da60 <is_reject_ip+0x2c>
   2da7c:	ldr	r1, [r5, #284]	; 0x11c
   2da80:	ldr	r0, [r0, #20]
   2da84:	ldr	r2, [r0, #24]
   2da88:	cmp	r2, r1
   2da8c:	bls	2da60 <is_reject_ip+0x2c>
   2da90:	ldr	r0, [r0, #20]
   2da94:	ldr	r1, [r5, #288]	; 0x120
   2da98:	add	r4, r1, r0
   2da9c:	bl	d07c <rb_current_time@plt>
   2daa0:	sub	r4, r4, r0
   2daa4:	cmp	r4, #1
   2daa8:	movle	r4, #1
   2daac:	mov	r0, r4
   2dab0:	pop	{r4, r5, fp, pc}
   2dab4:	.word	0x0002d138
   2dab8:	.word	0x0003cde0

0002dabc <flush_reject>:
   2dabc:	push	{r4, r5, r6, r7, fp, lr}
   2dac0:	add	fp, sp, #16
   2dac4:	ldr	r0, [pc, #76]	; 2db18 <flush_reject+0x5c>
   2dac8:	ldr	r0, [pc, r0]
   2dacc:	cmp	r0, #0
   2dad0:	beq	2db14 <flush_reject+0x58>
   2dad4:	ldr	r4, [pc, #64]	; 2db1c <flush_reject+0x60>
   2dad8:	add	r4, pc, r4
   2dadc:	ldr	r5, [r0]
   2dae0:	ldr	r7, [r0, #8]
   2dae4:	ldr	r6, [r5, #20]
   2dae8:	mov	r1, r4
   2daec:	bl	2d864 <rb_dlinkDelete>
   2daf0:	mov	r0, r6
   2daf4:	bl	2d91c <reject_free>
   2daf8:	ldr	r0, [pc, #32]	; 2db20 <flush_reject+0x64>
   2dafc:	ldr	r0, [pc, r0]
   2db00:	mov	r1, r5
   2db04:	bl	cf74 <rb_patricia_remove@plt>
   2db08:	cmp	r7, #0
   2db0c:	mov	r0, r7
   2db10:	bne	2dadc <flush_reject+0x20>
   2db14:	pop	{r4, r5, r6, r7, fp, pc}
   2db18:	.word	0x0003cd98
   2db1c:	.word	0x0003cd88
   2db20:	.word	0x0003cd50

0002db24 <remove_reject_ip>:
   2db24:	push	{r4, r5, fp, lr}
   2db28:	add	fp, sp, #8
   2db2c:	mov	r1, r0
   2db30:	ldr	r2, [pc, #112]	; 2dba8 <remove_reject_ip+0x84>
   2db34:	ldr	r2, [pc, r2]
   2db38:	ldr	r3, [r2, #284]	; 0x11c
   2db3c:	mvn	r0, #0
   2db40:	cmp	r3, #0
   2db44:	ldrne	r2, [r2, #288]	; 0x120
   2db48:	cmpne	r2, #0
   2db4c:	bne	2db54 <remove_reject_ip+0x30>
   2db50:	pop	{r4, r5, fp, pc}
   2db54:	ldr	r0, [pc, #80]	; 2dbac <remove_reject_ip+0x88>
   2db58:	ldr	r0, [pc, r0]
   2db5c:	bl	e5dc <rb_match_string@plt>
   2db60:	cmp	r0, #0
   2db64:	beq	2dba0 <remove_reject_ip+0x7c>
   2db68:	mov	r4, r0
   2db6c:	ldr	r5, [r0, #20]
   2db70:	ldr	r1, [pc, #56]	; 2dbb0 <remove_reject_ip+0x8c>
   2db74:	add	r1, pc, r1
   2db78:	mov	r0, r5
   2db7c:	bl	2d864 <rb_dlinkDelete>
   2db80:	mov	r0, r5
   2db84:	bl	2d91c <reject_free>
   2db88:	ldr	r0, [pc, #36]	; 2dbb4 <remove_reject_ip+0x90>
   2db8c:	ldr	r0, [pc, r0]
   2db90:	mov	r1, r4
   2db94:	bl	cf74 <rb_patricia_remove@plt>
   2db98:	mov	r0, #1
   2db9c:	pop	{r4, r5, fp, pc}
   2dba0:	mov	r0, #0
   2dba4:	pop	{r4, r5, fp, pc}
   2dba8:	.word	0x0002d048
   2dbac:	.word	0x0003ccf4
   2dbb0:	.word	0x0003ccec
   2dbb4:	.word	0x0003ccc0

0002dbb8 <remove_reject_mask>:
   2dbb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dbbc:	add	fp, sp, #24
   2dbc0:	mov	r5, r1
   2dbc4:	cmp	r0, #0
   2dbc8:	beq	2dc64 <remove_reject_mask+0xac>
   2dbcc:	mov	r1, #32
   2dbd0:	bl	da78 <fnv_hash_upper@plt>
   2dbd4:	mov	r9, r0
   2dbd8:	cmp	r5, #0
   2dbdc:	beq	2dbf0 <remove_reject_mask+0x38>
   2dbe0:	mov	r0, r5
   2dbe4:	mov	r1, #32
   2dbe8:	bl	da78 <fnv_hash_upper@plt>
   2dbec:	eor	r9, r0, r9
   2dbf0:	ldr	r0, [pc, #124]	; 2dc74 <remove_reject_mask+0xbc>
   2dbf4:	ldr	r0, [pc, r0]
   2dbf8:	mov	r5, #0
   2dbfc:	cmp	r0, #0
   2dc00:	beq	2dc5c <remove_reject_mask+0xa4>
   2dc04:	ldr	r8, [pc, #108]	; 2dc78 <remove_reject_mask+0xc0>
   2dc08:	add	r8, pc, r8
   2dc0c:	b	2dc1c <remove_reject_mask+0x64>
   2dc10:	cmp	r4, #0
   2dc14:	mov	r0, r4
   2dc18:	beq	2dc5c <remove_reject_mask+0xa4>
   2dc1c:	ldr	r7, [r0]
   2dc20:	ldr	r4, [r0, #8]
   2dc24:	ldr	r6, [r7, #20]
   2dc28:	ldr	r1, [r6, #28]
   2dc2c:	cmp	r1, r9
   2dc30:	bne	2dc10 <remove_reject_mask+0x58>
   2dc34:	mov	r1, r8
   2dc38:	bl	2d864 <rb_dlinkDelete>
   2dc3c:	mov	r0, r6
   2dc40:	bl	2d91c <reject_free>
   2dc44:	ldr	r0, [pc, #48]	; 2dc7c <remove_reject_mask+0xc4>
   2dc48:	ldr	r0, [pc, r0]
   2dc4c:	mov	r1, r7
   2dc50:	bl	cf74 <rb_patricia_remove@plt>
   2dc54:	add	r5, r5, #1
   2dc58:	b	2dc10 <remove_reject_mask+0x58>
   2dc5c:	mov	r0, r5
   2dc60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dc64:	mov	r9, #0
   2dc68:	cmp	r5, #0
   2dc6c:	bne	2dbe0 <remove_reject_mask+0x28>
   2dc70:	b	2dbf0 <remove_reject_mask+0x38>
   2dc74:	.word	0x0003cc6c
   2dc78:	.word	0x0003cc58
   2dc7c:	.word	0x0003cc04

0002dc80 <throttle_add>:
   2dc80:	push	{r4, r5, r6, sl, fp, lr}
   2dc84:	add	fp, sp, #16
   2dc88:	mov	r4, r0
   2dc8c:	ldr	r0, [pc, #188]	; 2dd50 <throttle_add+0xd0>
   2dc90:	ldr	r0, [pc, r0]
   2dc94:	mov	r1, r4
   2dc98:	bl	d3c4 <rb_match_ip@plt>
   2dc9c:	cmp	r0, #0
   2dca0:	beq	2dcdc <throttle_add+0x5c>
   2dca4:	ldr	r1, [pc, #168]	; 2dd54 <throttle_add+0xd4>
   2dca8:	ldr	r1, [pc, r1]
   2dcac:	ldr	r1, [r1, #292]	; 0x124
   2dcb0:	ldr	r4, [r0, #20]
   2dcb4:	ldr	r0, [r4, #16]
   2dcb8:	cmp	r0, r1
   2dcbc:	ble	2dd34 <throttle_add+0xb4>
   2dcc0:	ldr	r0, [pc, #144]	; 2dd58 <throttle_add+0xd8>
   2dcc4:	ldr	r0, [pc, r0]
   2dcc8:	ldr	r1, [r0, #112]	; 0x70
   2dccc:	add	r1, r1, #1
   2dcd0:	str	r1, [r0, #112]	; 0x70
   2dcd4:	mov	r0, #1
   2dcd8:	pop	{r4, r5, r6, sl, fp, pc}
   2dcdc:	ldrh	r6, [r4]
   2dce0:	mov	r0, #20
   2dce4:	bl	2d60c <rb_malloc>
   2dce8:	mov	r5, r0
   2dcec:	bl	d07c <rb_current_time@plt>
   2dcf0:	mov	r1, #1
   2dcf4:	str	r0, [r5, #12]
   2dcf8:	str	r1, [r5, #16]
   2dcfc:	mov	r2, #32
   2dd00:	cmp	r6, #10
   2dd04:	movweq	r2, #128	; 0x80
   2dd08:	ldr	r0, [pc, #76]	; 2dd5c <throttle_add+0xdc>
   2dd0c:	ldr	r0, [pc, r0]
   2dd10:	mov	r1, r4
   2dd14:	bl	d250 <make_and_lookup_ip@plt>
   2dd18:	str	r5, [r0, #20]
   2dd1c:	ldr	r2, [pc, #60]	; 2dd60 <throttle_add+0xe0>
   2dd20:	add	r2, pc, r2
   2dd24:	mov	r1, r5
   2dd28:	bl	2d944 <rb_dlinkAdd>
   2dd2c:	mov	r0, #0
   2dd30:	pop	{r4, r5, r6, sl, fp, pc}
   2dd34:	bl	d07c <rb_current_time@plt>
   2dd38:	str	r0, [r4, #12]
   2dd3c:	ldr	r0, [r4, #16]
   2dd40:	add	r0, r0, #1
   2dd44:	str	r0, [r4, #16]
   2dd48:	mov	r0, #0
   2dd4c:	pop	{r4, r5, r6, sl, fp, pc}
   2dd50:	.word	0x0003cbc0
   2dd54:	.word	0x0002ced4
   2dd58:	.word	0x0002ccf8
   2dd5c:	.word	0x0003cb44
   2dd60:	.word	0x0003cb34

0002dd64 <is_throttle_ip>:
   2dd64:	push	{r4, sl, fp, lr}
   2dd68:	add	fp, sp, #8
   2dd6c:	mov	r1, r0
   2dd70:	ldr	r0, [pc, #80]	; 2ddc8 <is_throttle_ip+0x64>
   2dd74:	ldr	r0, [pc, r0]
   2dd78:	bl	d3c4 <rb_match_ip@plt>
   2dd7c:	mov	r1, r0
   2dd80:	mov	r0, #0
   2dd84:	cmp	r1, #0
   2dd88:	beq	2ddc4 <is_throttle_ip+0x60>
   2dd8c:	ldr	ip, [pc, #56]	; 2ddcc <is_throttle_ip+0x68>
   2dd90:	ldr	ip, [pc, ip]
   2dd94:	ldr	r3, [ip, #292]	; 0x124
   2dd98:	ldr	r1, [r1, #20]
   2dd9c:	ldr	r2, [r1, #16]
   2dda0:	cmp	r2, r3
   2dda4:	pople	{r4, sl, fp, pc}
   2dda8:	ldr	r0, [r1, #12]
   2ddac:	ldr	r1, [ip, #296]	; 0x128
   2ddb0:	add	r4, r1, r0
   2ddb4:	bl	d07c <rb_current_time@plt>
   2ddb8:	sub	r0, r4, r0
   2ddbc:	cmp	r0, #1
   2ddc0:	movle	r0, #1
   2ddc4:	pop	{r4, sl, fp, pc}
   2ddc8:	.word	0x0003cadc
   2ddcc:	.word	0x0002cdec

0002ddd0 <flush_throttle>:
   2ddd0:	push	{r4, r5, r6, r7, fp, lr}
   2ddd4:	add	fp, sp, #16
   2ddd8:	ldr	r0, [pc, #76]	; 2de2c <flush_throttle+0x5c>
   2dddc:	ldr	r0, [pc, r0]
   2dde0:	cmp	r0, #0
   2dde4:	beq	2de28 <flush_throttle+0x58>
   2dde8:	ldr	r4, [pc, #64]	; 2de30 <flush_throttle+0x60>
   2ddec:	add	r4, pc, r4
   2ddf0:	ldr	r5, [r0]
   2ddf4:	ldr	r7, [r0, #8]
   2ddf8:	ldr	r6, [r5, #20]
   2ddfc:	mov	r1, r4
   2de00:	bl	2d864 <rb_dlinkDelete>
   2de04:	mov	r0, r6
   2de08:	bl	2de38 <rb_free>
   2de0c:	ldr	r0, [pc, #32]	; 2de34 <flush_throttle+0x64>
   2de10:	ldr	r0, [pc, r0]
   2de14:	mov	r1, r5
   2de18:	bl	cf74 <rb_patricia_remove@plt>
   2de1c:	cmp	r7, #0
   2de20:	mov	r0, r7
   2de24:	bne	2ddf0 <flush_throttle+0x20>
   2de28:	pop	{r4, r5, r6, r7, fp, pc}
   2de2c:	.word	0x0003ca78
   2de30:	.word	0x0003ca68
   2de34:	.word	0x0003ca40

0002de38 <rb_free>:
   2de38:	cmp	r0, #0
   2de3c:	bxeq	lr
   2de40:	b	d328 <free@plt>

0002de44 <restart>:
   2de44:	push	{fp, lr}
   2de48:	mov	fp, sp
   2de4c:	mov	r2, r0
   2de50:	ldr	r0, [pc, #44]	; 2de84 <restart+0x40>
   2de54:	add	r0, pc, r0
   2de58:	ldrb	r1, [r0]
   2de5c:	cmp	r1, #1
   2de60:	bne	2de68 <restart+0x24>
   2de64:	bl	e6cc <abort@plt>
   2de68:	mov	r1, #1
   2de6c:	strb	r1, [r0]
   2de70:	ldr	r1, [pc, #16]	; 2de88 <restart+0x44>
   2de74:	add	r1, pc, r1
   2de78:	mov	r0, #0
   2de7c:	bl	e0b4 <ilog@plt>
   2de80:	bl	df58 <server_reboot@plt>
   2de84:	.word	0x0003cc18
   2de88:	.word	0x00017d25

0002de8c <server_reboot>:
   2de8c:	push	{r4, r5, fp, lr}
   2de90:	add	fp, sp, #8
   2de94:	sub	sp, sp, #16
   2de98:	sub	sp, sp, #4096	; 0x1000
   2de9c:	mov	r4, #0
   2dea0:	ldr	r5, [pc, #184]	; 2df60 <server_reboot+0xd4>
   2dea4:	add	r5, pc, r5
   2dea8:	mov	r0, #256	; 0x100
   2deac:	mov	r1, #0
   2deb0:	mov	r2, r5
   2deb4:	bl	d634 <sendto_realops_snomask@plt>
   2deb8:	mov	r0, #0
   2debc:	mov	r1, r5
   2dec0:	bl	e0b4 <ilog@plt>
   2dec4:	ldr	r5, [pc, #152]	; 2df64 <server_reboot+0xd8>
   2dec8:	ldr	r5, [pc, r5]
   2decc:	ldr	r0, [r5]
   2ded0:	cmp	r0, #1
   2ded4:	blt	2def0 <server_reboot+0x64>
   2ded8:	mov	r0, r4
   2dedc:	bl	e72c <close@plt>
   2dee0:	add	r4, r4, #1
   2dee4:	ldr	r0, [r5]
   2dee8:	cmp	r4, r0
   2deec:	blt	2ded8 <server_reboot+0x4c>
   2def0:	ldr	r0, [pc, #112]	; 2df68 <server_reboot+0xdc>
   2def4:	ldr	r0, [pc, r0]
   2def8:	ldr	r0, [r0]
   2defc:	bl	d694 <unlink@plt>
   2df00:	ldr	r0, [pc, #100]	; 2df6c <server_reboot+0xe0>
   2df04:	ldr	r0, [pc, r0]
   2df08:	ldr	r0, [r0, #28]
   2df0c:	ldr	r5, [pc, #92]	; 2df70 <server_reboot+0xe4>
   2df10:	ldr	r5, [pc, r5]
   2df14:	ldr	r1, [r5]
   2df18:	bl	ddb4 <execv@plt>
   2df1c:	ldr	r0, [pc, #80]	; 2df74 <server_reboot+0xe8>
   2df20:	ldr	r0, [pc, r0]
   2df24:	ldr	r3, [r0]
   2df28:	mov	r0, #47	; 0x2f
   2df2c:	str	r0, [sp]
   2df30:	str	r0, [sp, #4]
   2df34:	add	r4, sp, #11
   2df38:	ldr	r2, [pc, #56]	; 2df78 <server_reboot+0xec>
   2df3c:	add	r2, pc, r2
   2df40:	mov	r0, r4
   2df44:	movw	r1, #4097	; 0x1001
   2df48:	bl	de74 <snprintf@plt>
   2df4c:	ldr	r1, [r5]
   2df50:	mov	r0, r4
   2df54:	bl	ddb4 <execv@plt>
   2df58:	mvn	r0, #0
   2df5c:	bl	dc28 <exit@plt>
   2df60:	.word	0x00017d13
   2df64:	.word	0x0002cc00
   2df68:	.word	0x0002cbc8
   2df6c:	.word	0x0002cb44
   2df70:	.word	0x0002ca64
   2df74:	.word	0x0002cc5c
   2df78:	.word	0x00017c90

0002df7c <init_s_conf>:
   2df7c:	push	{r4, r5, r6, r7, fp, lr}
   2df80:	add	fp, sp, #16
   2df84:	ldr	r2, [pc, #300]	; 2e0b8 <init_s_conf+0x13c>
   2df88:	add	r2, pc, r2
   2df8c:	mov	r0, #60	; 0x3c
   2df90:	mov	r1, #256	; 0x100
   2df94:	bl	ded4 <rb_bh_create@plt>
   2df98:	ldr	r1, [pc, #284]	; 2e0bc <init_s_conf+0x140>
   2df9c:	add	r1, pc, r1
   2dfa0:	str	r0, [r1]
   2dfa4:	ldr	r2, [pc, #276]	; 2e0c0 <init_s_conf+0x144>
   2dfa8:	ldr	r2, [pc, r2]
   2dfac:	ldr	r0, [pc, #272]	; 2e0c4 <init_s_conf+0x148>
   2dfb0:	add	r0, pc, r0
   2dfb4:	ldr	r1, [pc, #268]	; 2e0c8 <init_s_conf+0x14c>
   2dfb8:	add	r1, pc, r1
   2dfbc:	mov	r3, #60	; 0x3c
   2dfc0:	bl	d220 <rb_event_addish@plt>
   2dfc4:	ldr	r4, [pc, #256]	; 2e0cc <init_s_conf+0x150>
   2dfc8:	ldr	r4, [pc, r4]
   2dfcc:	ldr	r0, [pc, #252]	; 2e0d0 <init_s_conf+0x154>
   2dfd0:	add	r0, pc, r0
   2dfd4:	ldr	r6, [pc, #248]	; 2e0d4 <init_s_conf+0x158>
   2dfd8:	add	r6, pc, r6
   2dfdc:	mov	r1, r6
   2dfe0:	mov	r2, r4
   2dfe4:	mov	r3, #60	; 0x3c
   2dfe8:	bl	d220 <rb_event_addish@plt>
   2dfec:	ldr	r5, [pc, #228]	; 2e0d8 <init_s_conf+0x15c>
   2dff0:	ldr	r5, [pc, r5]
   2dff4:	ldr	r0, [pc, #224]	; 2e0dc <init_s_conf+0x160>
   2dff8:	add	r0, pc, r0
   2dffc:	mov	r1, r6
   2e000:	mov	r2, r5
   2e004:	mov	r3, #60	; 0x3c
   2e008:	bl	d220 <rb_event_addish@plt>
   2e00c:	add	r2, r4, #12
   2e010:	ldr	r0, [pc, #200]	; 2e0e0 <init_s_conf+0x164>
   2e014:	add	r0, pc, r0
   2e018:	ldr	r6, [pc, #196]	; 2e0e4 <init_s_conf+0x168>
   2e01c:	add	r6, pc, r6
   2e020:	mov	r1, r6
   2e024:	mov	r3, #3600	; 0xe10
   2e028:	bl	d220 <rb_event_addish@plt>
   2e02c:	add	r2, r5, #12
   2e030:	ldr	r0, [pc, #176]	; 2e0e8 <init_s_conf+0x16c>
   2e034:	add	r0, pc, r0
   2e038:	mov	r1, r6
   2e03c:	mov	r3, #3600	; 0xe10
   2e040:	bl	d220 <rb_event_addish@plt>
   2e044:	add	r2, r4, #24
   2e048:	ldr	r0, [pc, #156]	; 2e0ec <init_s_conf+0x170>
   2e04c:	add	r0, pc, r0
   2e050:	movw	r7, #20864	; 0x5180
   2e054:	movt	r7, #1
   2e058:	mov	r1, r6
   2e05c:	mov	r3, r7
   2e060:	bl	d220 <rb_event_addish@plt>
   2e064:	add	r2, r5, #24
   2e068:	ldr	r0, [pc, #128]	; 2e0f0 <init_s_conf+0x174>
   2e06c:	add	r0, pc, r0
   2e070:	mov	r1, r6
   2e074:	mov	r3, r7
   2e078:	bl	d220 <rb_event_addish@plt>
   2e07c:	add	r2, r4, #36	; 0x24
   2e080:	ldr	r0, [pc, #108]	; 2e0f4 <init_s_conf+0x178>
   2e084:	add	r0, pc, r0
   2e088:	movw	r4, #14976	; 0x3a80
   2e08c:	movt	r4, #9
   2e090:	mov	r1, r6
   2e094:	mov	r3, r4
   2e098:	bl	d220 <rb_event_addish@plt>
   2e09c:	add	r2, r5, #36	; 0x24
   2e0a0:	ldr	r0, [pc, #80]	; 2e0f8 <init_s_conf+0x17c>
   2e0a4:	add	r0, pc, r0
   2e0a8:	mov	r1, r6
   2e0ac:	mov	r3, r4
   2e0b0:	pop	{r4, r5, r6, r7, fp, lr}
   2e0b4:	b	d220 <rb_event_addish@plt>
   2e0b8:	.word	0x00017c52
   2e0bc:	.word	0x0003cad4
   2e0c0:	.word	0x0002c918
   2e0c4:	.word	0x00017c38
   2e0c8:	.word	0x0000013c
   2e0cc:	.word	0x0002cb30
   2e0d0:	.word	0x00017c29
   2e0d4:	.word	0x00000220
   2e0d8:	.word	0x0002ca88
   2e0dc:	.word	0x00017c14
   2e0e0:	.word	0x00017c0b
   2e0e4:	.word	0x000002a4
   2e0e8:	.word	0x00017c03
   2e0ec:	.word	0x00017c03
   2e0f0:	.word	0x00017bfa
   2e0f4:	.word	0x00017bf9
   2e0f8:	.word	0x00017bf1

0002e0fc <expire_prop_bans>:
   2e0fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e100:	add	fp, sp, #28
   2e104:	sub	sp, sp, #12
   2e108:	mov	r5, r0
   2e10c:	bl	d07c <rb_current_time@plt>
   2e110:	ldr	r5, [r5]
   2e114:	cmp	r5, #0
   2e118:	beq	2e1e4 <expire_prop_bans+0xe8>
   2e11c:	mov	r4, r0
   2e120:	ldr	r9, [pc, #196]	; 2e1ec <expire_prop_bans+0xf0>
   2e124:	ldr	r9, [pc, r9]
   2e128:	ldr	sl, [pc, #192]	; 2e1f0 <expire_prop_bans+0xf4>
   2e12c:	add	sl, pc, sl
   2e130:	ldr	r8, [pc, #188]	; 2e1f4 <expire_prop_bans+0xf8>
   2e134:	add	r8, pc, r8
   2e138:	b	2e154 <expire_prop_bans+0x58>
   2e13c:	mov	r0, r7
   2e140:	mov	r1, r6
   2e144:	mov	r2, r4
   2e148:	bl	d6dc <deactivate_conf@plt>
   2e14c:	cmp	r5, #0
   2e150:	beq	2e1e4 <expire_prop_bans+0xe8>
   2e154:	mov	r6, r5
   2e158:	ldr	r7, [r5]
   2e15c:	ldr	r5, [r5, #8]
   2e160:	ldr	r0, [r7, #44]	; 0x2c
   2e164:	cmp	r0, r4
   2e168:	ble	2e184 <expire_prop_bans+0x88>
   2e16c:	ldr	r0, [r7, #36]	; 0x24
   2e170:	cmp	r0, r4
   2e174:	bgt	2e14c <expire_prop_bans+0x50>
   2e178:	ldr	r0, [r7]
   2e17c:	cmp	r0, #0
   2e180:	bmi	2e14c <expire_prop_bans+0x50>
   2e184:	ldr	r0, [r9, #256]	; 0x100
   2e188:	cmp	r0, #0
   2e18c:	beq	2e13c <expire_prop_bans+0x40>
   2e190:	ldr	r0, [r7]
   2e194:	cmp	r0, #0
   2e198:	bmi	2e13c <expire_prop_bans+0x40>
   2e19c:	ldr	r0, [r7, #16]
   2e1a0:	ldr	r3, [r7, #28]
   2e1a4:	cmp	r0, #0
   2e1a8:	ldr	r1, [pc, #72]	; 2e1f8 <expire_prop_bans+0xfc>
   2e1ac:	add	r1, pc, r1
   2e1b0:	moveq	r0, r1
   2e1b4:	cmp	r3, #0
   2e1b8:	ldr	r1, [pc, #60]	; 2e1fc <expire_prop_bans+0x100>
   2e1bc:	add	r1, pc, r1
   2e1c0:	moveq	r1, sl
   2e1c4:	str	r1, [sp]
   2e1c8:	str	r0, [sp, #4]
   2e1cc:	moveq	r3, sl
   2e1d0:	mov	r0, #256	; 0x100
   2e1d4:	mov	r1, #0
   2e1d8:	mov	r2, r8
   2e1dc:	bl	d634 <sendto_realops_snomask@plt>
   2e1e0:	b	2e13c <expire_prop_bans+0x40>
   2e1e4:	sub	sp, fp, #28
   2e1e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1ec:	.word	0x0002ca58
   2e1f0:	.word	0x00017a29
   2e1f4:	.word	0x00018015
   2e1f8:	.word	0x000134f1
   2e1fc:	.word	0x00014f9b

0002e200 <expire_temp_kd>:
   2e200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e204:	add	fp, sp, #28
   2e208:	sub	sp, sp, #4
   2e20c:	ldr	r5, [r0]
   2e210:	cmp	r5, #0
   2e214:	beq	2e2b4 <expire_temp_kd+0xb4>
   2e218:	mov	r4, r0
   2e21c:	ldr	r9, [pc, #152]	; 2e2bc <expire_temp_kd+0xbc>
   2e220:	ldr	r9, [pc, r9]
   2e224:	ldr	sl, [pc, #148]	; 2e2c0 <expire_temp_kd+0xc0>
   2e228:	add	sl, pc, sl
   2e22c:	b	2e25c <expire_temp_kd+0x5c>
   2e230:	ldr	r0, [r7, #16]
   2e234:	mov	r1, r7
   2e238:	bl	e054 <delete_one_address_conf@plt>
   2e23c:	mov	r0, r5
   2e240:	mov	r1, r4
   2e244:	bl	2f9a8 <rb_dlinkDelete>
   2e248:	mov	r0, r5
   2e24c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   2e250:	cmp	r6, #0
   2e254:	mov	r5, r6
   2e258:	beq	2e2b4 <expire_temp_kd+0xb4>
   2e25c:	ldr	r7, [r5]
   2e260:	ldr	r6, [r5, #8]
   2e264:	ldr	r8, [r7, #36]	; 0x24
   2e268:	bl	d07c <rb_current_time@plt>
   2e26c:	cmp	r8, r0
   2e270:	bgt	2e250 <expire_temp_kd+0x50>
   2e274:	ldr	r0, [r9, #256]	; 0x100
   2e278:	cmp	r0, #0
   2e27c:	beq	2e230 <expire_temp_kd+0x30>
   2e280:	ldr	r0, [r7, #16]
   2e284:	ldr	r3, [r7, #28]
   2e288:	cmp	r0, #0
   2e28c:	moveq	r0, sl
   2e290:	str	r0, [sp]
   2e294:	cmp	r3, #0
   2e298:	moveq	r3, sl
   2e29c:	mov	r0, #256	; 0x100
   2e2a0:	mov	r1, #0
   2e2a4:	ldr	r2, [pc, #24]	; 2e2c4 <expire_temp_kd+0xc4>
   2e2a8:	add	r2, pc, r2
   2e2ac:	bl	d634 <sendto_realops_snomask@plt>
   2e2b0:	b	2e230 <expire_temp_kd+0x30>
   2e2b4:	sub	sp, fp, #28
   2e2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e2bc:	.word	0x0002c95c
   2e2c0:	.word	0x00013475
   2e2c4:	.word	0x00017ec5

0002e2c8 <reorganise_temp_kd>:
   2e2c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e2cc:	add	fp, sp, #28
   2e2d0:	sub	sp, sp, #12
   2e2d4:	ldr	r6, [r0]
   2e2d8:	cmp	r6, #0
   2e2dc:	beq	2e3f0 <reorganise_temp_kd+0x128>
   2e2e0:	mov	r4, r0
   2e2e4:	ldr	r8, [pc, #268]	; 2e3f8 <reorganise_temp_kd+0x130>
   2e2e8:	ldr	r8, [pc, r8]
   2e2ec:	ldr	r0, [pc, #264]	; 2e3fc <reorganise_temp_kd+0x134>
   2e2f0:	ldr	r0, [pc, r0]
   2e2f4:	add	r1, r0, #12
   2e2f8:	str	r1, [sp, #8]
   2e2fc:	add	r0, r0, #24
   2e300:	str	r0, [sp, #4]
   2e304:	b	2e338 <reorganise_temp_kd+0x70>
   2e308:	ldr	r0, [sl]
   2e30c:	cmp	r0, #64	; 0x40
   2e310:	ldr	r2, [pc, #232]	; 2e400 <reorganise_temp_kd+0x138>
   2e314:	ldr	r2, [pc, r2]
   2e318:	moveq	r2, r8
   2e31c:	mov	r0, r5
   2e320:	mov	r1, r4
   2e324:	bl	30718 <rb_dlinkMoveNode>
   2e328:	mov	r0, #0
   2e32c:	str	r0, [sl, #32]
   2e330:	cmp	r6, #0
   2e334:	beq	2e3f0 <reorganise_temp_kd+0x128>
   2e338:	mov	r5, r6
   2e33c:	ldr	sl, [r6]
   2e340:	ldr	r6, [r6, #8]
   2e344:	ldr	r9, [sl, #36]	; 0x24
   2e348:	bl	d07c <rb_current_time@plt>
   2e34c:	add	r0, r0, #3600	; 0xe10
   2e350:	cmp	r9, r0
   2e354:	blt	2e308 <reorganise_temp_kd+0x40>
   2e358:	ldr	r0, [sl, #32]
   2e35c:	cmp	r0, #2
   2e360:	blt	2e330 <reorganise_temp_kd+0x68>
   2e364:	ldr	r7, [sl, #36]	; 0x24
   2e368:	bl	d07c <rb_current_time@plt>
   2e36c:	movw	r1, #20864	; 0x5180
   2e370:	movt	r1, #1
   2e374:	add	r0, r0, r1
   2e378:	cmp	r7, r0
   2e37c:	bge	2e3a4 <reorganise_temp_kd+0xdc>
   2e380:	ldr	r0, [sl]
   2e384:	cmp	r0, #64	; 0x40
   2e388:	ldr	r2, [sp, #8]
   2e38c:	addeq	r2, r8, #12
   2e390:	mov	r0, r5
   2e394:	mov	r1, r4
   2e398:	bl	30718 <rb_dlinkMoveNode>
   2e39c:	mov	r0, #1
   2e3a0:	b	2e32c <reorganise_temp_kd+0x64>
   2e3a4:	ldr	r0, [sl, #32]
   2e3a8:	cmp	r0, #3
   2e3ac:	blt	2e330 <reorganise_temp_kd+0x68>
   2e3b0:	ldr	r7, [sl, #36]	; 0x24
   2e3b4:	bl	d07c <rb_current_time@plt>
   2e3b8:	movw	r1, #14976	; 0x3a80
   2e3bc:	movt	r1, #9
   2e3c0:	add	r0, r0, r1
   2e3c4:	cmp	r7, r0
   2e3c8:	bge	2e330 <reorganise_temp_kd+0x68>
   2e3cc:	ldr	r0, [sl]
   2e3d0:	cmp	r0, #64	; 0x40
   2e3d4:	ldr	r2, [sp, #4]
   2e3d8:	addeq	r2, r8, #24
   2e3dc:	mov	r0, r5
   2e3e0:	mov	r1, r4
   2e3e4:	bl	30718 <rb_dlinkMoveNode>
   2e3e8:	mov	r0, #2
   2e3ec:	b	2e32c <reorganise_temp_kd+0x64>
   2e3f0:	sub	sp, fp, #28
   2e3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3f8:	.word	0x0002c810
   2e3fc:	.word	0x0002c788
   2e400:	.word	0x0002c764

0002e404 <make_conf>:
   2e404:	push	{fp, lr}
   2e408:	mov	fp, sp
   2e40c:	ldr	r0, [pc, #16]	; 2e424 <make_conf+0x20>
   2e410:	ldr	r0, [pc, r0]
   2e414:	bl	de20 <rb_bh_alloc@plt>
   2e418:	mov	r1, #-2147483648	; 0x80000000
   2e41c:	str	r1, [r0]
   2e420:	pop	{fp, pc}
   2e424:	.word	0x0003c660

0002e428 <free_conf>:
   2e428:	cmp	r0, #0
   2e42c:	bxeq	lr
   2e430:	push	{r4, r5, fp, lr}
   2e434:	add	fp, sp, #8
   2e438:	mov	r4, r0
   2e43c:	ldr	r5, [r0, #20]
   2e440:	cmp	r5, #0
   2e444:	beq	2e460 <free_conf+0x38>
   2e448:	mov	r0, r5
   2e44c:	bl	dc94 <strlen@plt>
   2e450:	mov	r2, r0
   2e454:	mov	r0, r5
   2e458:	mov	r1, #0
   2e45c:	bl	df28 <memset@plt>
   2e460:	ldr	r5, [r4, #24]
   2e464:	cmp	r5, #0
   2e468:	beq	2e484 <free_conf+0x5c>
   2e46c:	mov	r0, r5
   2e470:	bl	dc94 <strlen@plt>
   2e474:	mov	r2, r0
   2e478:	mov	r0, r5
   2e47c:	mov	r1, #0
   2e480:	bl	df28 <memset@plt>
   2e484:	ldr	r0, [r4, #20]
   2e488:	bl	2e4e8 <rb_free>
   2e48c:	ldr	r0, [r4, #24]
   2e490:	bl	2e4e8 <rb_free>
   2e494:	ldr	r0, [r4, #48]	; 0x30
   2e498:	bl	2e4e8 <rb_free>
   2e49c:	ldr	r0, [r4, #28]
   2e4a0:	bl	2e4e8 <rb_free>
   2e4a4:	ldr	r0, [r4, #16]
   2e4a8:	bl	2e4e8 <rb_free>
   2e4ac:	ldr	r1, [r4]
   2e4b0:	ldr	r0, [r4, #12]
   2e4b4:	movw	r2, #960	; 0x3c0
   2e4b8:	movt	r2, #2
   2e4bc:	tst	r1, r2
   2e4c0:	beq	2e4cc <free_conf+0xa4>
   2e4c4:	bl	d5bc <operhash_delete@plt>
   2e4c8:	b	2e4d0 <free_conf+0xa8>
   2e4cc:	bl	2e4e8 <rb_free>
   2e4d0:	ldr	r0, [pc, #12]	; 2e4e4 <free_conf+0xbc>
   2e4d4:	ldr	r0, [pc, r0]
   2e4d8:	mov	r1, r4
   2e4dc:	pop	{r4, r5, fp, lr}
   2e4e0:	b	e708 <rb_bh_free@plt>
   2e4e4:	.word	0x0003c59c

0002e4e8 <rb_free>:
   2e4e8:	cmp	r0, #0
   2e4ec:	bxeq	lr
   2e4f0:	b	d328 <free@plt>

0002e4f4 <check_client>:
   2e4f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e4f8:	add	fp, sp, #28
   2e4fc:	sub	sp, sp, #28
   2e500:	mov	r5, r1
   2e504:	mov	r7, r0
   2e508:	mov	r0, r1
   2e50c:	mov	r1, r2
   2e510:	bl	2eb24 <verify_access>
   2e514:	mov	r4, r0
   2e518:	cmp	r0, #0
   2e51c:	beq	2ea58 <check_client+0x564>
   2e520:	movw	r0, #291	; 0x123
   2e524:	add	r6, r5, r0
   2e528:	add	r9, r5, #88	; 0x58
   2e52c:	ldr	r1, [pc, #1328]	; 2ea64 <check_client+0x570>
   2e530:	add	r1, pc, r1
   2e534:	mov	r0, #2
   2e538:	mov	r2, r9
   2e53c:	mov	r3, r6
   2e540:	bl	e0b4 <ilog@plt>
   2e544:	add	r0, r4, #8
   2e548:	cmp	r0, #7
   2e54c:	bhi	2ea58 <check_client+0x564>
   2e550:	add	r1, pc, #4
   2e554:	ldr	r0, [r1, r0, lsl #2]
   2e558:	add	pc, r1, r0
   2e55c:	.word	0x00000020
   2e560:	.word	0x00000074
   2e564:	.word	0x000000c8
   2e568:	.word	0x000004fc
   2e56c:	.word	0x0000011c
   2e570:	.word	0x00000150
   2e574:	.word	0x000001ac
   2e578:	.word	0x000001c4
   2e57c:	str	r7, [sp, #24]
   2e580:	mov	sl, r5
   2e584:	ldr	r0, [sl, #64]!	; 0x40
   2e588:	ldr	r1, [pc, #1312]	; 2eab0 <check_client+0x5bc>
   2e58c:	add	r1, pc, r1
   2e590:	ldr	r7, [pc, #1308]	; 2eab4 <check_client+0x5c0>
   2e594:	add	r7, pc, r7
   2e598:	tst	r0, #128	; 0x80
   2e59c:	mov	r8, r7
   2e5a0:	moveq	r8, r1
   2e5a4:	mov	r0, #0
   2e5a8:	mov	r1, r5
   2e5ac:	bl	e60c <show_ip@plt>
   2e5b0:	add	r1, r5, #152	; 0x98
   2e5b4:	cmp	r0, #0
   2e5b8:	beq	2e828 <check_client+0x334>
   2e5bc:	ldrb	r0, [sl, #3]
   2e5c0:	tst	r0, #1
   2e5c4:	mov	r0, r6
   2e5c8:	addne	r0, r5, #163	; 0xa3
   2e5cc:	b	2e82c <check_client+0x338>
   2e5d0:	str	r7, [sp, #24]
   2e5d4:	mov	sl, r5
   2e5d8:	ldr	r0, [sl, #64]!	; 0x40
   2e5dc:	ldr	r1, [pc, #1196]	; 2ea90 <check_client+0x59c>
   2e5e0:	add	r1, pc, r1
   2e5e4:	ldr	r7, [pc, #1192]	; 2ea94 <check_client+0x5a0>
   2e5e8:	add	r7, pc, r7
   2e5ec:	tst	r0, #128	; 0x80
   2e5f0:	mov	r8, r7
   2e5f4:	moveq	r8, r1
   2e5f8:	mov	r0, #0
   2e5fc:	mov	r1, r5
   2e600:	bl	e60c <show_ip@plt>
   2e604:	add	r1, r5, #152	; 0x98
   2e608:	cmp	r0, #0
   2e60c:	beq	2e8b0 <check_client+0x3bc>
   2e610:	ldrb	r0, [sl, #3]
   2e614:	tst	r0, #1
   2e618:	mov	r0, r6
   2e61c:	addne	r0, r5, #163	; 0xa3
   2e620:	b	2e8b4 <check_client+0x3c0>
   2e624:	str	r7, [sp, #24]
   2e628:	mov	sl, r5
   2e62c:	ldr	r0, [sl, #64]!	; 0x40
   2e630:	ldr	r1, [pc, #1080]	; 2ea70 <check_client+0x57c>
   2e634:	add	r1, pc, r1
   2e638:	ldr	r7, [pc, #1076]	; 2ea74 <check_client+0x580>
   2e63c:	add	r7, pc, r7
   2e640:	tst	r0, #128	; 0x80
   2e644:	mov	r8, r7
   2e648:	moveq	r8, r1
   2e64c:	mov	r0, #0
   2e650:	mov	r1, r5
   2e654:	bl	e60c <show_ip@plt>
   2e658:	add	r1, r5, #152	; 0x98
   2e65c:	cmp	r0, #0
   2e660:	beq	2e938 <check_client+0x444>
   2e664:	ldrb	r0, [sl, #3]
   2e668:	tst	r0, #1
   2e66c:	mov	r0, r6
   2e670:	addne	r0, r5, #163	; 0xa3
   2e674:	b	2e93c <check_client+0x448>
   2e678:	ldr	r2, [pc, #1176]	; 2eb18 <check_client+0x624>
   2e67c:	ldr	r2, [pc, r2]
   2e680:	ldr	r3, [pc, #1172]	; 2eb1c <check_client+0x628>
   2e684:	add	r3, pc, r3
   2e688:	mov	r0, r7
   2e68c:	mov	r1, r7
   2e690:	bl	e534 <exit_client@plt>
   2e694:	ldr	r0, [pc, #1156]	; 2eb20 <check_client+0x62c>
   2e698:	ldr	r0, [pc, r0]
   2e69c:	ldr	r1, [r0, #68]	; 0x44
   2e6a0:	add	r1, r1, #1
   2e6a4:	str	r1, [r0, #68]	; 0x44
   2e6a8:	b	2ea58 <check_client+0x564>
   2e6ac:	str	r7, [sp, #24]
   2e6b0:	mov	sl, r5
   2e6b4:	ldr	r0, [sl, #64]!	; 0x40
   2e6b8:	ldr	r1, [pc, #1040]	; 2ead0 <check_client+0x5dc>
   2e6bc:	add	r1, pc, r1
   2e6c0:	ldr	r8, [pc, #1036]	; 2ead4 <check_client+0x5e0>
   2e6c4:	add	r8, pc, r8
   2e6c8:	tst	r0, #128	; 0x80
   2e6cc:	mov	r7, r8
   2e6d0:	moveq	r7, r1
   2e6d4:	mov	r0, #0
   2e6d8:	mov	r1, r5
   2e6dc:	bl	e60c <show_ip@plt>
   2e6e0:	add	r1, r5, #163	; 0xa3
   2e6e4:	add	r3, r5, #152	; 0x98
   2e6e8:	cmp	r0, #0
   2e6ec:	beq	2e9c0 <check_client+0x4cc>
   2e6f0:	ldrb	r2, [sl, #3]
   2e6f4:	ldr	r0, [pc, #992]	; 2eadc <check_client+0x5e8>
   2e6f8:	add	r0, pc, r0
   2e6fc:	tst	r2, #1
   2e700:	moveq	r0, r6
   2e704:	b	2e9c8 <check_client+0x4d4>
   2e708:	ldr	r2, [pc, #856]	; 2ea68 <check_client+0x574>
   2e70c:	ldr	r2, [pc, r2]
   2e710:	ldr	r3, [pc, #852]	; 2ea6c <check_client+0x578>
   2e714:	add	r3, pc, r3
   2e718:	mov	r0, r7
   2e71c:	b	2ea50 <check_client+0x55c>
   2e720:	ldr	r0, [r5, #432]	; 0x1b0
   2e724:	str	r7, [sp, #24]
   2e728:	ldr	r8, [r0, #128]	; 0x80
   2e72c:	ldrh	r0, [r8, #38]	; 0x26
   2e730:	bl	2ed00 <__bswap_16>
   2e734:	mov	r7, r0
   2e738:	ldr	r0, [pc, #952]	; 2eaf8 <check_client+0x604>
   2e73c:	ldr	r0, [pc, r0]
   2e740:	ldr	r1, [r0, #68]	; 0x44
   2e744:	add	r1, r1, #1
   2e748:	str	r1, [r0, #68]	; 0x44
   2e74c:	ldr	r0, [r5, #64]	; 0x40
   2e750:	ldr	r1, [r8, #4]
   2e754:	add	r2, r5, #163	; 0xa3
   2e758:	ldr	r3, [pc, #924]	; 2eafc <check_client+0x608>
   2e75c:	add	r3, pc, r3
   2e760:	ldr	sl, [pc, #920]	; 2eb00 <check_client+0x60c>
   2e764:	add	sl, pc, sl
   2e768:	tst	r0, #128	; 0x80
   2e76c:	mov	r0, sl
   2e770:	moveq	r0, r3
   2e774:	add	r8, r5, #152	; 0x98
   2e778:	stm	sp, {r0, r8}
   2e77c:	str	r2, [sp, #8]
   2e780:	str	r6, [sp, #12]
   2e784:	str	r1, [sp, #16]
   2e788:	str	r7, [sp, #20]
   2e78c:	ldr	r2, [pc, #880]	; 2eb04 <check_client+0x610>
   2e790:	add	r2, pc, r2
   2e794:	mov	r0, #512	; 0x200
   2e798:	mov	r1, #0
   2e79c:	mov	r3, r9
   2e7a0:	bl	d634 <sendto_realops_snomask@plt>
   2e7a4:	ldr	r0, [r5, #64]	; 0x40
   2e7a8:	ldr	r1, [r5, #432]	; 0x1b0
   2e7ac:	ldr	r1, [r1, #128]	; 0x80
   2e7b0:	ldr	r1, [r1, #4]
   2e7b4:	str	r8, [sp]
   2e7b8:	str	r6, [sp, #4]
   2e7bc:	str	r1, [sp, #8]
   2e7c0:	str	r7, [sp, #12]
   2e7c4:	tst	r0, #128	; 0x80
   2e7c8:	ldr	r0, [pc, #824]	; 2eb08 <check_client+0x614>
   2e7cc:	add	r0, pc, r0
   2e7d0:	moveq	sl, r0
   2e7d4:	ldr	r1, [pc, #816]	; 2eb0c <check_client+0x618>
   2e7d8:	add	r1, pc, r1
   2e7dc:	mov	r0, #2
   2e7e0:	mov	r2, r9
   2e7e4:	mov	r3, sl
   2e7e8:	bl	e0b4 <ilog@plt>
   2e7ec:	ldr	r6, [pc, #796]	; 2eb10 <check_client+0x61c>
   2e7f0:	add	r6, pc, r6
   2e7f4:	str	r6, [sp]
   2e7f8:	ldr	r7, [sp, #24]
   2e7fc:	mov	r0, r7
   2e800:	mov	r1, #0
   2e804:	mov	r2, #0
   2e808:	mov	r3, #0
   2e80c:	bl	e138 <add_reject@plt>
   2e810:	ldr	r2, [pc, #764]	; 2eb14 <check_client+0x620>
   2e814:	ldr	r2, [pc, r2]
   2e818:	mov	r0, r7
   2e81c:	mov	r1, r5
   2e820:	mov	r3, r6
   2e824:	b	2ea54 <check_client+0x560>
   2e828:	add	r0, r5, #163	; 0xa3
   2e82c:	str	r8, [sp]
   2e830:	str	r1, [sp, #4]
   2e834:	str	r0, [sp, #8]
   2e838:	ldr	r2, [pc, #632]	; 2eab8 <check_client+0x5c4>
   2e83c:	add	r2, pc, r2
   2e840:	mov	r0, #16
   2e844:	mov	r8, r1
   2e848:	mov	r1, #256	; 0x100
   2e84c:	mov	r3, r9
   2e850:	bl	d634 <sendto_realops_snomask@plt>
   2e854:	ldr	r0, [sl]
   2e858:	str	r8, [sp]
   2e85c:	str	r6, [sp, #4]
   2e860:	tst	r0, #128	; 0x80
   2e864:	ldr	r0, [pc, #592]	; 2eabc <check_client+0x5c8>
   2e868:	add	r0, pc, r0
   2e86c:	moveq	r7, r0
   2e870:	ldr	r1, [pc, #584]	; 2eac0 <check_client+0x5cc>
   2e874:	add	r1, pc, r1
   2e878:	mov	r0, #2
   2e87c:	mov	r2, r9
   2e880:	mov	r3, r7
   2e884:	bl	e0b4 <ilog@plt>
   2e888:	ldr	r0, [pc, #564]	; 2eac4 <check_client+0x5d0>
   2e88c:	ldr	r0, [pc, r0]
   2e890:	ldr	r1, [r0, #68]	; 0x44
   2e894:	add	r1, r1, #1
   2e898:	str	r1, [r0, #68]	; 0x44
   2e89c:	ldr	r2, [pc, #548]	; 2eac8 <check_client+0x5d4>
   2e8a0:	ldr	r2, [pc, r2]
   2e8a4:	ldr	r3, [pc, #544]	; 2eacc <check_client+0x5d8>
   2e8a8:	add	r3, pc, r3
   2e8ac:	b	2ea4c <check_client+0x558>
   2e8b0:	add	r0, r5, #163	; 0xa3
   2e8b4:	str	r8, [sp]
   2e8b8:	str	r1, [sp, #4]
   2e8bc:	str	r0, [sp, #8]
   2e8c0:	ldr	r2, [pc, #464]	; 2ea98 <check_client+0x5a4>
   2e8c4:	add	r2, pc, r2
   2e8c8:	mov	r0, #16
   2e8cc:	mov	r8, r1
   2e8d0:	mov	r1, #256	; 0x100
   2e8d4:	mov	r3, r9
   2e8d8:	bl	d634 <sendto_realops_snomask@plt>
   2e8dc:	ldr	r0, [sl]
   2e8e0:	str	r8, [sp]
   2e8e4:	str	r6, [sp, #4]
   2e8e8:	tst	r0, #128	; 0x80
   2e8ec:	ldr	r0, [pc, #424]	; 2ea9c <check_client+0x5a8>
   2e8f0:	add	r0, pc, r0
   2e8f4:	moveq	r7, r0
   2e8f8:	ldr	r1, [pc, #416]	; 2eaa0 <check_client+0x5ac>
   2e8fc:	add	r1, pc, r1
   2e900:	mov	r0, #2
   2e904:	mov	r2, r9
   2e908:	mov	r3, r7
   2e90c:	bl	e0b4 <ilog@plt>
   2e910:	ldr	r0, [pc, #396]	; 2eaa4 <check_client+0x5b0>
   2e914:	ldr	r0, [pc, r0]
   2e918:	ldr	r1, [r0, #68]	; 0x44
   2e91c:	add	r1, r1, #1
   2e920:	str	r1, [r0, #68]	; 0x44
   2e924:	ldr	r2, [pc, #380]	; 2eaa8 <check_client+0x5b4>
   2e928:	ldr	r2, [pc, r2]
   2e92c:	ldr	r3, [pc, #376]	; 2eaac <check_client+0x5b8>
   2e930:	add	r3, pc, r3
   2e934:	b	2ea4c <check_client+0x558>
   2e938:	add	r0, r5, #163	; 0xa3
   2e93c:	str	r8, [sp]
   2e940:	str	r1, [sp, #4]
   2e944:	str	r0, [sp, #8]
   2e948:	ldr	r2, [pc, #296]	; 2ea78 <check_client+0x584>
   2e94c:	add	r2, pc, r2
   2e950:	mov	r0, #16
   2e954:	mov	r8, r1
   2e958:	mov	r1, #256	; 0x100
   2e95c:	mov	r3, r9
   2e960:	bl	d634 <sendto_realops_snomask@plt>
   2e964:	ldr	r0, [sl]
   2e968:	str	r8, [sp]
   2e96c:	str	r6, [sp, #4]
   2e970:	tst	r0, #128	; 0x80
   2e974:	ldr	r0, [pc, #256]	; 2ea7c <check_client+0x588>
   2e978:	add	r0, pc, r0
   2e97c:	moveq	r7, r0
   2e980:	ldr	r1, [pc, #248]	; 2ea80 <check_client+0x58c>
   2e984:	add	r1, pc, r1
   2e988:	mov	r0, #2
   2e98c:	mov	r2, r9
   2e990:	mov	r3, r7
   2e994:	bl	e0b4 <ilog@plt>
   2e998:	ldr	r0, [pc, #228]	; 2ea84 <check_client+0x590>
   2e99c:	ldr	r0, [pc, r0]
   2e9a0:	ldr	r1, [r0, #68]	; 0x44
   2e9a4:	add	r1, r1, #1
   2e9a8:	str	r1, [r0, #68]	; 0x44
   2e9ac:	ldr	r2, [pc, #212]	; 2ea88 <check_client+0x594>
   2e9b0:	ldr	r2, [pc, r2]
   2e9b4:	ldr	r3, [pc, #208]	; 2ea8c <check_client+0x598>
   2e9b8:	add	r3, pc, r3
   2e9bc:	b	2ea4c <check_client+0x558>
   2e9c0:	ldr	r0, [pc, #272]	; 2ead8 <check_client+0x5e4>
   2e9c4:	add	r0, pc, r0
   2e9c8:	str	r7, [sp]
   2e9cc:	str	r3, [sp, #4]
   2e9d0:	str	r1, [sp, #8]
   2e9d4:	str	r0, [sp, #12]
   2e9d8:	ldr	r2, [pc, #256]	; 2eae0 <check_client+0x5ec>
   2e9dc:	add	r2, pc, r2
   2e9e0:	mov	r0, #16
   2e9e4:	mov	r1, #256	; 0x100
   2e9e8:	mov	r7, r3
   2e9ec:	mov	r3, r9
   2e9f0:	bl	d634 <sendto_realops_snomask@plt>
   2e9f4:	ldr	r0, [sl]
   2e9f8:	str	r7, [sp]
   2e9fc:	str	r6, [sp, #4]
   2ea00:	tst	r0, #128	; 0x80
   2ea04:	ldr	r0, [pc, #216]	; 2eae4 <check_client+0x5f0>
   2ea08:	add	r0, pc, r0
   2ea0c:	moveq	r8, r0
   2ea10:	ldr	r1, [pc, #208]	; 2eae8 <check_client+0x5f4>
   2ea14:	add	r1, pc, r1
   2ea18:	mov	r0, #2
   2ea1c:	mov	r2, r9
   2ea20:	mov	r3, r8
   2ea24:	bl	e0b4 <ilog@plt>
   2ea28:	ldr	r0, [pc, #188]	; 2eaec <check_client+0x5f8>
   2ea2c:	ldr	r0, [pc, r0]
   2ea30:	ldr	r1, [r0, #68]	; 0x44
   2ea34:	add	r1, r1, #1
   2ea38:	str	r1, [r0, #68]	; 0x44
   2ea3c:	ldr	r2, [pc, #172]	; 2eaf0 <check_client+0x5fc>
   2ea40:	ldr	r2, [pc, r2]
   2ea44:	ldr	r3, [pc, #168]	; 2eaf4 <check_client+0x600>
   2ea48:	add	r3, pc, r3
   2ea4c:	ldr	r0, [sp, #24]
   2ea50:	mov	r1, r5
   2ea54:	bl	e534 <exit_client@plt>
   2ea58:	mov	r0, r4
   2ea5c:	sub	sp, fp, #28
   2ea60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea64:	.word	0x0001777d
   2ea68:	.word	0x0002c44c
   2ea6c:	.word	0x000175af
   2ea70:	.word	0x000176c6
   2ea74:	.word	0x00017519
   2ea78:	.word	0x00017384
   2ea7c:	.word	0x00017382
   2ea80:	.word	0x00017378
   2ea84:	.word	0x0002c020
   2ea88:	.word	0x0002c1a8
   2ea8c:	.word	0x0001736f
   2ea90:	.word	0x0001771a
   2ea94:	.word	0x0001756d
   2ea98:	.word	0x00017485
   2ea9c:	.word	0x0001740a
   2eaa0:	.word	0x00017478
   2eaa4:	.word	0x0002c0a8
   2eaa8:	.word	0x0002c230
   2eaac:	.word	0x00017470
   2eab0:	.word	0x0001776e
   2eab4:	.word	0x000175c1
   2eab8:	.word	0x00017587
   2eabc:	.word	0x00017492
   2eac0:	.word	0x00017578
   2eac4:	.word	0x0002c130
   2eac8:	.word	0x0002c2b8
   2eacc:	.word	0x0001756e
   2ead0:	.word	0x0001763e
   2ead4:	.word	0x00017491
   2ead8:	.word	0x00012ed1
   2eadc:	.word	0x0001319d
   2eae0:	.word	0x0001745d
   2eae4:	.word	0x000172f2
   2eae8:	.word	0x00017449
   2eaec:	.word	0x0002bf90
   2eaf0:	.word	0x0002c118
   2eaf4:	.word	0x0001743b
   2eaf8:	.word	0x0002c280
   2eafc:	.word	0x0001759e
   2eb00:	.word	0x000173f1
   2eb04:	.word	0x00017728
   2eb08:	.word	0x0001752e
   2eb0c:	.word	0x00017720
   2eb10:	.word	0x00017743
   2eb14:	.word	0x0002c344
   2eb18:	.word	0x0002c4dc
   2eb1c:	.word	0x000178da
   2eb20:	.word	0x0002c324

0002eb24 <verify_access>:
   2eb24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eb28:	add	fp, sp, #24
   2eb2c:	sub	sp, sp, #8
   2eb30:	mov	r4, r0
   2eb34:	bl	30408 <find_address_conf_by_client>
   2eb38:	mvn	r6, #0
   2eb3c:	cmp	r0, #0
   2eb40:	beq	2ec40 <verify_access+0x11c>
   2eb44:	mov	r5, r0
   2eb48:	ldr	r0, [r0]
   2eb4c:	tst	r0, #2
   2eb50:	bne	2ebc8 <verify_access+0xa4>
   2eb54:	tst	r0, #64	; 0x40
   2eb58:	beq	2ec40 <verify_access+0x11c>
   2eb5c:	ldr	r0, [pc, #396]	; 2ecf0 <verify_access+0x1cc>
   2eb60:	ldr	r0, [pc, r0]
   2eb64:	ldr	r0, [r0, #124]	; 0x7c
   2eb68:	cmp	r0, #0
   2eb6c:	beq	2eba4 <verify_access+0x80>
   2eb70:	mov	r0, r5
   2eb74:	bl	d010 <get_user_ban_reason@plt>
   2eb78:	ldr	r0, [pc, #372]	; 2ecf4 <verify_access+0x1d0>
   2eb7c:	add	r0, pc, r0
   2eb80:	str	r0, [sp]
   2eb84:	add	r3, r4, #88	; 0x58
   2eb88:	ldr	r0, [pc, #360]	; 2ecf8 <verify_access+0x1d4>
   2eb8c:	ldr	r0, [pc, r0]
   2eb90:	add	r2, r0, #88	; 0x58
   2eb94:	ldr	r1, [pc, #352]	; 2ecfc <verify_access+0x1d8>
   2eb98:	add	r1, pc, r1
   2eb9c:	mov	r0, r4
   2eba0:	bl	d1e4 <sendto_one@plt>
   2eba4:	ldr	r2, [r5, #16]
   2eba8:	ldr	r1, [r5, #28]
   2ebac:	mov	r0, #0
   2ebb0:	str	r0, [sp]
   2ebb4:	mov	r0, r4
   2ebb8:	mov	r3, r5
   2ebbc:	bl	e138 <add_reject@plt>
   2ebc0:	mvn	r6, #3
   2ebc4:	b	2ec40 <verify_access+0x11c>
   2ebc8:	ldr	r0, [r5, #4]
   2ebcc:	tst	r0, #2048	; 0x800
   2ebd0:	bne	2ec10 <verify_access+0xec>
   2ebd4:	tst	r0, #512	; 0x200
   2ebd8:	beq	2ecd0 <verify_access+0x1ac>
   2ebdc:	ldr	r1, [r4, #64]	; 0x40
   2ebe0:	orr	r1, r1, #16777216	; 0x1000000
   2ebe4:	str	r1, [r4, #64]	; 0x40
   2ebe8:	tst	r0, #1024	; 0x400
   2ebec:	beq	2ec6c <verify_access+0x148>
   2ebf0:	mov	r0, #0
   2ebf4:	mov	r1, r4
   2ebf8:	bl	e60c <show_ip@plt>
   2ebfc:	add	r3, r4, #88	; 0x58
   2ec00:	cmp	r0, #0
   2ec04:	beq	2ec4c <verify_access+0x128>
   2ec08:	add	r0, r4, #163	; 0xa3
   2ec0c:	b	2ec50 <verify_access+0x12c>
   2ec10:	ldr	r0, [r5, #12]
   2ec14:	ldr	r1, [r5, #32]
   2ec18:	str	r1, [sp]
   2ec1c:	ldr	r3, [pc, #192]	; 2ece4 <verify_access+0x1c0>
   2ec20:	add	r3, pc, r3
   2ec24:	cmp	r0, #0
   2ec28:	movne	r3, r0
   2ec2c:	ldr	r2, [pc, #180]	; 2ece8 <verify_access+0x1c4>
   2ec30:	add	r2, pc, r2
   2ec34:	mov	r0, r4
   2ec38:	mov	r1, #10
   2ec3c:	bl	dc7c <sendto_one_numeric@plt>
   2ec40:	mov	r0, r6
   2ec44:	sub	sp, fp, #24
   2ec48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ec4c:	ldr	r0, [r5, #12]
   2ec50:	ldr	r1, [r5, #12]
   2ec54:	stm	sp, {r0, r1}
   2ec58:	ldr	r2, [pc, #140]	; 2ecec <verify_access+0x1c8>
   2ec5c:	add	r2, pc, r2
   2ec60:	mov	r0, #256	; 0x100
   2ec64:	mov	r1, #0
   2ec68:	bl	d634 <sendto_realops_snomask@plt>
   2ec6c:	ldr	r7, [r5, #12]
   2ec70:	mov	r8, #64	; 0x40
   2ec74:	mov	r0, r7
   2ec78:	mov	r1, #64	; 0x40
   2ec7c:	bl	dce8 <strchr@plt>
   2ec80:	cmp	r0, #0
   2ec84:	beq	2ecc0 <verify_access+0x19c>
   2ec88:	mov	r6, r0
   2ec8c:	mov	r0, #0
   2ec90:	mov	r7, r6
   2ec94:	strb	r0, [r7], #1
   2ec98:	ldr	r1, [r5, #12]
   2ec9c:	add	r0, r4, #152	; 0x98
   2eca0:	mov	r2, #11
   2eca4:	bl	e510 <rb_strlcpy@plt>
   2eca8:	add	r0, r4, #163	; 0xa3
   2ecac:	mov	r1, r7
   2ecb0:	mov	r2, #64	; 0x40
   2ecb4:	bl	e510 <rb_strlcpy@plt>
   2ecb8:	strb	r8, [r6]
   2ecbc:	b	2ecd0 <verify_access+0x1ac>
   2ecc0:	add	r0, r4, #163	; 0xa3
   2ecc4:	mov	r1, r7
   2ecc8:	mov	r2, #64	; 0x40
   2eccc:	bl	e510 <rb_strlcpy@plt>
   2ecd0:	mov	r0, r4
   2ecd4:	mov	r1, r5
   2ecd8:	sub	sp, fp, #24
   2ecdc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ece0:	b	304ac <attach_iline>
   2ece4:	.word	0x00016f35
   2ece8:	.word	0x000174d8
   2ecec:	.word	0x000174d7
   2ecf0:	.word	0x0002c01c
   2ecf4:	.word	0x0003bfc4
   2ecf8:	.word	0x0002bfcc
   2ecfc:	.word	0x000128a6

0002ed00 <__bswap_16>:
   2ed00:	rev16	r0, r0
   2ed04:	bx	lr

0002ed08 <deref_conf>:
   2ed08:	ldr	r1, [r0, #8]
   2ed0c:	subs	r1, r1, #1
   2ed10:	str	r1, [r0, #8]
   2ed14:	bxne	lr
   2ed18:	ldr	r1, [r0]
   2ed1c:	cmn	r1, #1
   2ed20:	ble	2ed28 <deref_conf+0x20>
   2ed24:	bx	lr
   2ed28:	b	2e428 <free_conf>

0002ed2c <detach_conf>:
   2ed2c:	push	{r4, r5, fp, lr}
   2ed30:	add	fp, sp, #8
   2ed34:	mov	r4, r0
   2ed38:	ldr	r0, [r0, #432]	; 0x1b0
   2ed3c:	ldr	r5, [r0, #132]	; 0x84
   2ed40:	cmp	r5, #0
   2ed44:	beq	2edc8 <detach_conf+0x9c>
   2ed48:	ldr	r0, [r5, #52]	; 0x34
   2ed4c:	cmp	r0, #0
   2ed50:	beq	2ed98 <detach_conf+0x6c>
   2ed54:	mov	r0, r4
   2ed58:	mov	r1, r5
   2ed5c:	bl	2edd0 <remove_ip_limit>
   2ed60:	ldr	r0, [r5, #52]	; 0x34
   2ed64:	ldr	r1, [r0, #36]	; 0x24
   2ed68:	cmp	r1, #1
   2ed6c:	subge	r1, r1, #1
   2ed70:	strge	r1, [r0, #36]	; 0x24
   2ed74:	ldr	r1, [r0, #8]
   2ed78:	cmn	r1, #1
   2ed7c:	bne	2ed98 <detach_conf+0x6c>
   2ed80:	ldr	r1, [r0, #36]	; 0x24
   2ed84:	cmp	r1, #0
   2ed88:	bne	2ed98 <detach_conf+0x6c>
   2ed8c:	bl	e7bc <free_class@plt>
   2ed90:	mov	r0, #0
   2ed94:	str	r0, [r5, #52]	; 0x34
   2ed98:	ldr	r0, [r5, #8]
   2ed9c:	subs	r0, r0, #1
   2eda0:	str	r0, [r5, #8]
   2eda4:	bne	2edb8 <detach_conf+0x8c>
   2eda8:	ldr	r0, [r5]
   2edac:	cmn	r0, #1
   2edb0:	movle	r0, r5
   2edb4:	blle	dc34 <free_conf@plt>
   2edb8:	ldr	r1, [r4, #432]	; 0x1b0
   2edbc:	mov	r0, #0
   2edc0:	str	r0, [r1, #132]	; 0x84
   2edc4:	pop	{r4, r5, fp, pc}
   2edc8:	mvn	r0, #0
   2edcc:	pop	{r4, r5, fp, pc}

0002edd0 <remove_ip_limit>:
   2edd0:	push	{r4, sl, fp, lr}
   2edd4:	add	fp, sp, #8
   2edd8:	mov	r4, r1
   2eddc:	ldr	r1, [r1, #52]	; 0x34
   2ede0:	ldr	r2, [r1, #52]	; 0x34
   2ede4:	cmp	r2, #0
   2ede8:	beq	2ee34 <remove_ip_limit+0x64>
   2edec:	ldr	r2, [r1, #44]	; 0x2c
   2edf0:	cmp	r2, #0
   2edf4:	bne	2ee04 <remove_ip_limit+0x34>
   2edf8:	ldr	r2, [r1, #48]	; 0x30
   2edfc:	cmp	r2, #0
   2ee00:	beq	2ee34 <remove_ip_limit+0x64>
   2ee04:	ldr	r2, [r1, #40]	; 0x28
   2ee08:	ldr	r0, [r0, #432]	; 0x1b0
   2ee0c:	add	r1, r0, #140	; 0x8c
   2ee10:	mov	r0, r2
   2ee14:	bl	d3c4 <rb_match_ip@plt>
   2ee18:	cmp	r0, #0
   2ee1c:	popeq	{r4, sl, fp, pc}
   2ee20:	mov	r1, r0
   2ee24:	ldr	r0, [r0, #20]
   2ee28:	subs	r0, r0, #1
   2ee2c:	str	r0, [r1, #20]
   2ee30:	beq	2ee38 <remove_ip_limit+0x68>
   2ee34:	pop	{r4, sl, fp, pc}
   2ee38:	ldr	r0, [r4, #52]	; 0x34
   2ee3c:	ldr	r0, [r0, #40]	; 0x28
   2ee40:	pop	{r4, sl, fp, lr}
   2ee44:	b	cf74 <rb_patricia_remove@plt>

0002ee48 <attach_conf>:
   2ee48:	push	{r4, r5, fp, lr}
   2ee4c:	add	fp, sp, #8
   2ee50:	mov	r5, r0
   2ee54:	ldr	r0, [r1]
   2ee58:	cmp	r0, #0
   2ee5c:	bmi	2eef8 <attach_conf+0xb0>
   2ee60:	mov	r4, r1
   2ee64:	mov	r0, r5
   2ee68:	bl	2ef0c <add_ip_limit>
   2ee6c:	cmp	r0, #0
   2ee70:	beq	2ef00 <attach_conf+0xb8>
   2ee74:	ldrb	r0, [r4]
   2ee78:	tst	r0, #2
   2ee7c:	beq	2eeb8 <attach_conf+0x70>
   2ee80:	ldr	r1, [r4, #52]	; 0x34
   2ee84:	ldr	r0, [r1, #8]
   2ee88:	ldr	r1, [r1, #36]	; 0x24
   2ee8c:	cmp	r1, r0
   2ee90:	cmpge	r0, #1
   2ee94:	blt	2eeb8 <attach_conf+0x70>
   2ee98:	ldrb	r1, [r4, #4]
   2ee9c:	mvn	r0, #2
   2eea0:	tst	r1, #128	; 0x80
   2eea4:	popeq	{r4, r5, fp, pc}
   2eea8:	ldr	r1, [pc, #88]	; 2ef08 <attach_conf+0xc0>
   2eeac:	add	r1, pc, r1
   2eeb0:	mov	r0, r5
   2eeb4:	bl	e414 <sendto_one_notice@plt>
   2eeb8:	ldr	r0, [r5, #432]	; 0x1b0
   2eebc:	ldr	r0, [r0, #132]	; 0x84
   2eec0:	cmp	r0, #0
   2eec4:	movne	r0, r5
   2eec8:	blne	d280 <detach_conf@plt>
   2eecc:	ldr	r0, [r5, #432]	; 0x1b0
   2eed0:	str	r4, [r0, #132]	; 0x84
   2eed4:	ldr	r0, [r4, #8]
   2eed8:	ldr	r1, [r4, #52]	; 0x34
   2eedc:	add	r0, r0, #1
   2eee0:	str	r0, [r4, #8]
   2eee4:	ldr	r0, [r1, #36]	; 0x24
   2eee8:	add	r0, r0, #1
   2eeec:	str	r0, [r1, #36]	; 0x24
   2eef0:	mov	r0, #0
   2eef4:	pop	{r4, r5, fp, pc}
   2eef8:	mvn	r0, #0
   2eefc:	pop	{r4, r5, fp, pc}
   2ef00:	mvn	r0, #5
   2ef04:	pop	{r4, r5, fp, pc}
   2ef08:	.word	0x000170be

0002ef0c <add_ip_limit>:
   2ef0c:	push	{r4, r5, r6, sl, fp, lr}
   2ef10:	add	fp, sp, #16
   2ef14:	mov	r4, r1
   2ef18:	mov	r6, r0
   2ef1c:	ldr	r0, [r1, #52]	; 0x34
   2ef20:	ldr	r1, [r0, #52]	; 0x34
   2ef24:	mvn	r5, #0
   2ef28:	cmp	r1, #0
   2ef2c:	beq	2efc0 <add_ip_limit+0xb4>
   2ef30:	ldr	r1, [r0, #44]	; 0x2c
   2ef34:	cmp	r1, #0
   2ef38:	bne	2ef48 <add_ip_limit+0x3c>
   2ef3c:	ldr	r1, [r0, #48]	; 0x30
   2ef40:	cmp	r1, #0
   2ef44:	beq	2efc0 <add_ip_limit+0xb4>
   2ef48:	ldr	r0, [r0, #40]	; 0x28
   2ef4c:	ldr	r1, [r6, #432]	; 0x1b0
   2ef50:	add	r1, r1, #140	; 0x8c
   2ef54:	bl	d3c4 <rb_match_ip@plt>
   2ef58:	mov	r1, r0
   2ef5c:	cmp	r0, #0
   2ef60:	bne	2ef94 <add_ip_limit+0x88>
   2ef64:	ldr	r0, [r4, #52]	; 0x34
   2ef68:	ldr	r1, [r6, #432]	; 0x1b0
   2ef6c:	ldrh	r2, [r1, #140]!	; 0x8c
   2ef70:	mov	r3, #48	; 0x30
   2ef74:	cmp	r2, #2
   2ef78:	movweq	r3, #44	; 0x2c
   2ef7c:	ldr	r2, [r0, r3]
   2ef80:	ldr	r0, [r0, #40]	; 0x28
   2ef84:	bl	d250 <make_and_lookup_ip@plt>
   2ef88:	mov	r1, r0
   2ef8c:	cmp	r0, #0
   2ef90:	beq	2efd0 <add_ip_limit+0xc4>
   2ef94:	ldr	r2, [r1, #20]
   2ef98:	ldr	r0, [r4, #52]	; 0x34
   2ef9c:	ldr	r3, [r0, #52]	; 0x34
   2efa0:	cmp	r2, r3
   2efa4:	blt	2efc8 <add_ip_limit+0xbc>
   2efa8:	ldrb	r3, [r4, #4]
   2efac:	tst	r3, #128	; 0x80
   2efb0:	bne	2efc8 <add_ip_limit+0xbc>
   2efb4:	mov	r5, #0
   2efb8:	cmp	r2, #0
   2efbc:	beq	2efdc <add_ip_limit+0xd0>
   2efc0:	mov	r0, r5
   2efc4:	pop	{r4, r5, r6, sl, fp, pc}
   2efc8:	add	r0, r2, #1
   2efcc:	str	r0, [r1, #20]
   2efd0:	mov	r5, #1
   2efd4:	mov	r0, r5
   2efd8:	pop	{r4, r5, r6, sl, fp, pc}
   2efdc:	ldr	r0, [r0, #40]	; 0x28
   2efe0:	bl	cf74 <rb_patricia_remove@plt>
   2efe4:	mov	r0, r5
   2efe8:	pop	{r4, r5, r6, sl, fp, pc}

0002efec <rehash>:
   2efec:	push	{r4, r5, r6, r7, fp, lr}
   2eff0:	add	fp, sp, #16
   2eff4:	sub	sp, sp, #24
   2eff8:	strb	r0, [sp, #20]
   2effc:	cmp	r0, #0
   2f000:	beq	2f018 <rehash+0x2c>
   2f004:	ldr	r2, [pc, #212]	; 2f0e0 <rehash+0xf4>
   2f008:	add	r2, pc, r2
   2f00c:	mov	r0, #256	; 0x100
   2f010:	mov	r1, #0
   2f014:	bl	d634 <sendto_realops_snomask@plt>
   2f018:	bl	ddd8 <rehash_authd@plt>
   2f01c:	mov	r0, #0
   2f020:	bl	d8d4 <read_conf_files@plt>
   2f024:	ldr	r0, [pc, #184]	; 2f0e4 <rehash+0xf8>
   2f028:	ldr	r0, [pc, r0]
   2f02c:	ldr	r1, [r0, #8]
   2f030:	ldr	r0, [pc, #176]	; 2f0e8 <rehash+0xfc>
   2f034:	ldr	r0, [pc, r0]
   2f038:	cmp	r1, #0
   2f03c:	beq	2f04c <rehash+0x60>
   2f040:	movw	r2, #345	; 0x159
   2f044:	add	r0, r0, r2
   2f048:	b	2f05c <rehash+0x70>
   2f04c:	movw	r1, #345	; 0x159
   2f050:	add	r0, r0, r1
   2f054:	ldr	r1, [pc, #144]	; 2f0ec <rehash+0x100>
   2f058:	add	r1, pc, r1
   2f05c:	mov	r2, #51	; 0x33
   2f060:	bl	e510 <rb_strlcpy@plt>
   2f064:	bl	e0fc <open_logfiles@plt>
   2f068:	ldr	r0, [pc, #128]	; 2f0f0 <rehash+0x104>
   2f06c:	ldr	r0, [pc, r0]
   2f070:	ldr	r5, [r0]
   2f074:	cmp	r5, #0
   2f078:	beq	2f0c0 <rehash+0xd4>
   2f07c:	mov	r6, #0
   2f080:	ldr	r7, [pc, #108]	; 2f0f4 <rehash+0x108>
   2f084:	add	r7, pc, r7
   2f088:	add	r4, sp, #4
   2f08c:	ldr	r0, [r5]
   2f090:	str	r6, [sp, #16]
   2f094:	str	r7, [sp, #12]
   2f098:	add	r1, r0, #88	; 0x58
   2f09c:	str	r1, [sp, #4]
   2f0a0:	str	r1, [sp, #8]
   2f0a4:	mov	r1, r0
   2f0a8:	mov	r2, #3
   2f0ac:	mov	r3, r4
   2f0b0:	bl	d61c <user_mode@plt>
   2f0b4:	ldr	r5, [r5, #8]
   2f0b8:	cmp	r5, #0
   2f0bc:	bne	2f08c <rehash+0xa0>
   2f0c0:	ldr	r0, [pc, #48]	; 2f0f8 <rehash+0x10c>
   2f0c4:	ldr	r0, [pc, r0]
   2f0c8:	ldr	r0, [r0]
   2f0cc:	add	r1, sp, #20
   2f0d0:	bl	e654 <call_hook@plt>
   2f0d4:	mov	r0, #0
   2f0d8:	sub	sp, fp, #16
   2f0dc:	pop	{r4, r5, r6, r7, fp, pc}
   2f0e0:	.word	0x00016f92
   2f0e4:	.word	0x0002b928
   2f0e8:	.word	0x0002bb24
   2f0ec:	.word	0x00012314
   2f0f0:	.word	0x0002b8cc
   2f0f4:	.word	0x00018bed
   2f0f8:	.word	0x0002ba38

0002f0fc <read_conf_files>:
   2f0fc:	push	{r4, r5, r6, sl, fp, lr}
   2f100:	add	fp, sp, #16
   2f104:	mov	r5, r0
   2f108:	ldr	r6, [pc, #280]	; 2f228 <read_conf_files+0x12c>
   2f10c:	ldr	r6, [pc, r6]
   2f110:	mov	r0, #0
   2f114:	str	r0, [r6]
   2f118:	ldr	r0, [pc, #268]	; 2f22c <read_conf_files+0x130>
   2f11c:	ldr	r0, [pc, r0]
   2f120:	ldr	r4, [r0, #4]
   2f124:	ldr	r0, [pc, #260]	; 2f230 <read_conf_files+0x134>
   2f128:	ldr	r0, [pc, r0]
   2f12c:	mov	r1, r4
   2f130:	movw	r2, #513	; 0x201
   2f134:	bl	e510 <rb_strlcpy@plt>
   2f138:	ldr	r1, [pc, #244]	; 2f234 <read_conf_files+0x138>
   2f13c:	add	r1, pc, r1
   2f140:	mov	r0, r4
   2f144:	bl	d1f0 <fopen@plt>
   2f148:	str	r0, [r6]
   2f14c:	cmp	r0, #0
   2f150:	beq	2f194 <read_conf_files+0x98>
   2f154:	cmp	r5, #0
   2f158:	bleq	2ff4c <clear_out_old_conf>
   2f15c:	ldr	r0, [pc, #216]	; 2f23c <read_conf_files+0x140>
   2f160:	ldr	r0, [pc, r0]
   2f164:	ldr	r0, [r0]
   2f168:	mov	r1, #0
   2f16c:	bl	e654 <call_hook@plt>
   2f170:	bl	30158 <read_conf>
   2f174:	ldr	r0, [pc, #196]	; 2f240 <read_conf_files+0x144>
   2f178:	ldr	r0, [pc, r0]
   2f17c:	ldr	r0, [r0]
   2f180:	mov	r1, #0
   2f184:	bl	e654 <call_hook@plt>
   2f188:	ldr	r0, [r6]
   2f18c:	pop	{r4, r5, r6, sl, fp, lr}
   2f190:	b	e0f0 <fclose@plt>
   2f194:	cmp	r5, #0
   2f198:	bne	2f1b8 <read_conf_files+0xbc>
   2f19c:	ldr	r2, [pc, #148]	; 2f238 <read_conf_files+0x13c>
   2f1a0:	add	r2, pc, r2
   2f1a4:	mov	r0, #256	; 0x100
   2f1a8:	mov	r1, #0
   2f1ac:	mov	r3, r4
   2f1b0:	pop	{r4, r5, r6, sl, fp, lr}
   2f1b4:	b	d634 <sendto_realops_snomask@plt>
   2f1b8:	ldr	r0, [pc, #132]	; 2f244 <read_conf_files+0x148>
   2f1bc:	add	r0, pc, r0
   2f1c0:	mov	r1, r4
   2f1c4:	bl	d10c <inotice@plt>
   2f1c8:	ldr	r1, [pc, #120]	; 2f248 <read_conf_files+0x14c>
   2f1cc:	add	r1, pc, r1
   2f1d0:	mov	r0, #0
   2f1d4:	mov	r2, r4
   2f1d8:	bl	e0b4 <ilog@plt>
   2f1dc:	bl	de38 <__errno_location@plt>
   2f1e0:	ldr	r5, [r0]
   2f1e4:	mov	r0, r5
   2f1e8:	bl	dac0 <strerror@plt>
   2f1ec:	mov	r1, r0
   2f1f0:	ldr	r6, [pc, #84]	; 2f24c <read_conf_files+0x150>
   2f1f4:	add	r6, pc, r6
   2f1f8:	mov	r0, r6
   2f1fc:	mov	r2, r4
   2f200:	bl	d10c <inotice@plt>
   2f204:	mov	r0, r5
   2f208:	bl	dac0 <strerror@plt>
   2f20c:	mov	r2, r0
   2f210:	mov	r0, #0
   2f214:	mov	r1, r6
   2f218:	mov	r3, r4
   2f21c:	bl	e0b4 <ilog@plt>
   2f220:	mvn	r0, #0
   2f224:	bl	dc28 <exit@plt>
   2f228:	.word	0x0002b8f0
   2f22c:	.word	0x0002ba60
   2f230:	.word	0x0002ba48
   2f234:	.word	0x00013561
   2f238:	.word	0x00016ece
   2f23c:	.word	0x0002b770
   2f240:	.word	0x0002b9a8
   2f244:	.word	0x00016e4b
   2f248:	.word	0x00016e6d
   2f24c:	.word	0x00016e6d

0002f250 <rehash_bans>:
   2f250:	b	d898 <bandb_rehash_bans@plt>

0002f254 <add_temp_kline>:
   2f254:	push	{r4, r5, r6, sl, fp, lr}
   2f258:	add	fp, sp, #16
   2f25c:	sub	sp, sp, #8
   2f260:	mov	r4, r0
   2f264:	ldr	r5, [r0, #36]	; 0x24
   2f268:	bl	d07c <rb_current_time@plt>
   2f26c:	add	r0, r0, #14976	; 0x3a80
   2f270:	add	r0, r0, #589824	; 0x90000
   2f274:	cmp	r5, r0
   2f278:	bge	2f2c8 <add_temp_kline+0x74>
   2f27c:	ldr	r5, [r4, #36]	; 0x24
   2f280:	bl	d07c <rb_current_time@plt>
   2f284:	add	r0, r0, #4480	; 0x1180
   2f288:	add	r0, r0, #81920	; 0x14000
   2f28c:	cmp	r5, r0
   2f290:	bge	2f2ec <add_temp_kline+0x98>
   2f294:	ldr	r5, [r4, #36]	; 0x24
   2f298:	bl	d07c <rb_current_time@plt>
   2f29c:	add	r6, r0, #3600	; 0xe10
   2f2a0:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f2a4:	mov	r1, r0
   2f2a8:	cmp	r5, r6
   2f2ac:	bge	2f310 <add_temp_kline+0xbc>
   2f2b0:	ldr	r2, [pc, #172]	; 2f364 <add_temp_kline+0x110>
   2f2b4:	ldr	r2, [pc, r2]
   2f2b8:	mov	r0, r4
   2f2bc:	bl	2f368 <rb_dlinkAdd>
   2f2c0:	mov	r0, #0
   2f2c4:	b	2f328 <add_temp_kline+0xd4>
   2f2c8:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f2cc:	mov	r1, r0
   2f2d0:	ldr	r0, [pc, #128]	; 2f358 <add_temp_kline+0x104>
   2f2d4:	ldr	r0, [pc, r0]
   2f2d8:	add	r2, r0, #36	; 0x24
   2f2dc:	mov	r0, r4
   2f2e0:	bl	2f368 <rb_dlinkAdd>
   2f2e4:	mov	r0, #3
   2f2e8:	b	2f328 <add_temp_kline+0xd4>
   2f2ec:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f2f0:	mov	r1, r0
   2f2f4:	ldr	r0, [pc, #96]	; 2f35c <add_temp_kline+0x108>
   2f2f8:	ldr	r0, [pc, r0]
   2f2fc:	add	r2, r0, #24
   2f300:	mov	r0, r4
   2f304:	bl	2f368 <rb_dlinkAdd>
   2f308:	mov	r0, #2
   2f30c:	b	2f328 <add_temp_kline+0xd4>
   2f310:	ldr	r0, [pc, #72]	; 2f360 <add_temp_kline+0x10c>
   2f314:	ldr	r0, [pc, r0]
   2f318:	add	r2, r0, #12
   2f31c:	mov	r0, r4
   2f320:	bl	2f368 <rb_dlinkAdd>
   2f324:	mov	r0, #1
   2f328:	str	r0, [r4, #32]
   2f32c:	ldr	r1, [r4, #4]
   2f330:	ldr	r0, [r4, #16]
   2f334:	ldr	r2, [r4, #28]
   2f338:	orr	r1, r1, #8388608	; 0x800000
   2f33c:	str	r1, [r4, #4]
   2f340:	str	r4, [sp]
   2f344:	mov	r1, #64	; 0x40
   2f348:	mov	r3, #0
   2f34c:	bl	dacc <add_conf_by_address@plt>
   2f350:	sub	sp, fp, #16
   2f354:	pop	{r4, r5, r6, sl, fp, pc}
   2f358:	.word	0x0002b824
   2f35c:	.word	0x0002b800
   2f360:	.word	0x0002b7e4
   2f364:	.word	0x0002b844

0002f368 <rb_dlinkAdd>:
   2f368:	push	{fp, lr}
   2f36c:	mov	fp, sp
   2f370:	cmp	r0, #0
   2f374:	beq	2f3d4 <rb_dlinkAdd+0x6c>
   2f378:	cmp	r1, #0
   2f37c:	beq	2f3f4 <rb_dlinkAdd+0x8c>
   2f380:	cmp	r2, #0
   2f384:	beq	2f414 <rb_dlinkAdd+0xac>
   2f388:	mov	r3, #0
   2f38c:	stm	r1, {r0, r3}
   2f390:	ldr	r0, [r2]
   2f394:	str	r0, [r1, #8]
   2f398:	ldr	r0, [r2]
   2f39c:	cmp	r0, #0
   2f3a0:	beq	2f3b0 <rb_dlinkAdd+0x48>
   2f3a4:	add	r0, r0, #4
   2f3a8:	str	r1, [r0]
   2f3ac:	b	2f3c0 <rb_dlinkAdd+0x58>
   2f3b0:	mov	r0, r2
   2f3b4:	ldr	r3, [r0, #4]!
   2f3b8:	cmp	r3, #0
   2f3bc:	streq	r1, [r0]
   2f3c0:	str	r1, [r2]
   2f3c4:	ldr	r0, [r2, #8]
   2f3c8:	add	r0, r0, #1
   2f3cc:	str	r0, [r2, #8]
   2f3d0:	pop	{fp, pc}
   2f3d4:	ldr	r0, [pc, #88]	; 2f434 <rb_dlinkAdd+0xcc>
   2f3d8:	add	r0, pc, r0
   2f3dc:	ldr	r1, [pc, #84]	; 2f438 <rb_dlinkAdd+0xd0>
   2f3e0:	add	r1, pc, r1
   2f3e4:	ldr	r3, [pc, #80]	; 2f43c <rb_dlinkAdd+0xd4>
   2f3e8:	add	r3, pc, r3
   2f3ec:	mov	r2, #143	; 0x8f
   2f3f0:	bl	e7e0 <__assert_fail@plt>
   2f3f4:	ldr	r0, [pc, #68]	; 2f440 <rb_dlinkAdd+0xd8>
   2f3f8:	add	r0, pc, r0
   2f3fc:	ldr	r1, [pc, #64]	; 2f444 <rb_dlinkAdd+0xdc>
   2f400:	add	r1, pc, r1
   2f404:	ldr	r3, [pc, #60]	; 2f448 <rb_dlinkAdd+0xe0>
   2f408:	add	r3, pc, r3
   2f40c:	mov	r2, #144	; 0x90
   2f410:	bl	e7e0 <__assert_fail@plt>
   2f414:	ldr	r0, [pc, #48]	; 2f44c <rb_dlinkAdd+0xe4>
   2f418:	add	r0, pc, r0
   2f41c:	ldr	r1, [pc, #44]	; 2f450 <rb_dlinkAdd+0xe8>
   2f420:	add	r1, pc, r1
   2f424:	ldr	r3, [pc, #40]	; 2f454 <rb_dlinkAdd+0xec>
   2f428:	add	r3, pc, r3
   2f42c:	mov	r2, #145	; 0x91
   2f430:	bl	e7e0 <__assert_fail@plt>
   2f434:	.word	0x00011599
   2f438:	.word	0x00011536
   2f43c:	.word	0x00011596
   2f440:	.word	0x00011514
   2f444:	.word	0x00011516
   2f448:	.word	0x00011576
   2f44c:	.word	0x00016d7d
   2f450:	.word	0x000114f6
   2f454:	.word	0x00011556

0002f458 <add_temp_dline>:
   2f458:	push	{r4, r5, r6, sl, fp, lr}
   2f45c:	add	fp, sp, #16
   2f460:	sub	sp, sp, #8
   2f464:	mov	r4, r0
   2f468:	ldr	r5, [r0, #36]	; 0x24
   2f46c:	bl	d07c <rb_current_time@plt>
   2f470:	add	r0, r0, #14976	; 0x3a80
   2f474:	add	r0, r0, #589824	; 0x90000
   2f478:	cmp	r5, r0
   2f47c:	bge	2f4cc <add_temp_dline+0x74>
   2f480:	ldr	r5, [r4, #36]	; 0x24
   2f484:	bl	d07c <rb_current_time@plt>
   2f488:	add	r0, r0, #4480	; 0x1180
   2f48c:	add	r0, r0, #81920	; 0x14000
   2f490:	cmp	r5, r0
   2f494:	bge	2f4f0 <add_temp_dline+0x98>
   2f498:	ldr	r5, [r4, #36]	; 0x24
   2f49c:	bl	d07c <rb_current_time@plt>
   2f4a0:	add	r6, r0, #3600	; 0xe10
   2f4a4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f4a8:	mov	r1, r0
   2f4ac:	cmp	r5, r6
   2f4b0:	bge	2f514 <add_temp_dline+0xbc>
   2f4b4:	ldr	r2, [pc, #172]	; 2f568 <add_temp_dline+0x110>
   2f4b8:	ldr	r2, [pc, r2]
   2f4bc:	mov	r0, r4
   2f4c0:	bl	2f368 <rb_dlinkAdd>
   2f4c4:	mov	r0, #0
   2f4c8:	b	2f52c <add_temp_dline+0xd4>
   2f4cc:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f4d0:	mov	r1, r0
   2f4d4:	ldr	r0, [pc, #128]	; 2f55c <add_temp_dline+0x104>
   2f4d8:	ldr	r0, [pc, r0]
   2f4dc:	add	r2, r0, #36	; 0x24
   2f4e0:	mov	r0, r4
   2f4e4:	bl	2f368 <rb_dlinkAdd>
   2f4e8:	mov	r0, #3
   2f4ec:	b	2f52c <add_temp_dline+0xd4>
   2f4f0:	bl	dc58 <rb_make_rb_dlink_node@plt>
   2f4f4:	mov	r1, r0
   2f4f8:	ldr	r0, [pc, #96]	; 2f560 <add_temp_dline+0x108>
   2f4fc:	ldr	r0, [pc, r0]
   2f500:	add	r2, r0, #24
   2f504:	mov	r0, r4
   2f508:	bl	2f368 <rb_dlinkAdd>
   2f50c:	mov	r0, #2
   2f510:	b	2f52c <add_temp_dline+0xd4>
   2f514:	ldr	r0, [pc, #72]	; 2f564 <add_temp_dline+0x10c>
   2f518:	ldr	r0, [pc, r0]
   2f51c:	add	r2, r0, #12
   2f520:	mov	r0, r4
   2f524:	bl	2f368 <rb_dlinkAdd>
   2f528:	mov	r0, #1
   2f52c:	str	r0, [r4, #32]
   2f530:	ldr	r1, [r4, #4]
   2f534:	ldr	r0, [r4, #16]
   2f538:	ldr	r2, [r4, #28]
   2f53c:	orr	r1, r1, #8388608	; 0x800000
   2f540:	str	r1, [r4, #4]
   2f544:	str	r4, [sp]
   2f548:	mov	r1, #131072	; 0x20000
   2f54c:	mov	r3, #0
   2f550:	bl	dacc <add_conf_by_address@plt>
   2f554:	sub	sp, fp, #16
   2f558:	pop	{r4, r5, r6, sl, fp, pc}
   2f55c:	.word	0x0002b5a0
   2f560:	.word	0x0002b57c
   2f564:	.word	0x0002b560
   2f568:	.word	0x0002b5c0

0002f56c <valid_wild_card>:
   2f56c:	push	{r4, r5, r6, sl, fp, lr}
   2f570:	add	fp, sp, #16
   2f574:	mov	r4, r1
   2f578:	mov	r5, r0
   2f57c:	mov	r1, #63	; 0x3f
   2f580:	bl	dce8 <strchr@plt>
   2f584:	cmp	r0, #0
   2f588:	bne	2f5a0 <valid_wild_card+0x34>
   2f58c:	mov	r0, r5
   2f590:	mov	r1, #42	; 0x2a
   2f594:	bl	dce8 <strchr@plt>
   2f598:	cmp	r0, #0
   2f59c:	beq	2f680 <valid_wild_card+0x114>
   2f5a0:	ldrb	r3, [r5]
   2f5a4:	cmp	r3, #0
   2f5a8:	beq	2f5fc <valid_wild_card+0x90>
   2f5ac:	add	r0, r5, #1
   2f5b0:	ldr	r1, [pc, #300]	; 2f6e4 <valid_wild_card+0x178>
   2f5b4:	ldr	r1, [pc, r1]
   2f5b8:	ldr	r1, [r1, #236]	; 0xec
   2f5bc:	mov	r6, #0
   2f5c0:	ldr	r2, [pc, #288]	; 2f6e8 <valid_wild_card+0x17c>
   2f5c4:	ldr	r2, [pc, r2]
   2f5c8:	b	2f5d8 <valid_wild_card+0x6c>
   2f5cc:	ldrb	r3, [r0], #1
   2f5d0:	cmp	r3, #0
   2f5d4:	beq	2f600 <valid_wild_card+0x94>
   2f5d8:	uxtb	r3, r3
   2f5dc:	add	r3, r2, r3, lsl #2
   2f5e0:	ldrb	r3, [r3, #1]
   2f5e4:	tst	r3, #1
   2f5e8:	bne	2f5cc <valid_wild_card+0x60>
   2f5ec:	add	r6, r6, #1
   2f5f0:	cmp	r6, r1
   2f5f4:	blt	2f5cc <valid_wild_card+0x60>
   2f5f8:	b	2f680 <valid_wild_card+0x114>
   2f5fc:	mov	r6, #0
   2f600:	mov	r0, r4
   2f604:	mov	r1, #47	; 0x2f
   2f608:	bl	e27c <strrchr@plt>
   2f60c:	cmp	r0, #0
   2f610:	beq	2f62c <valid_wild_card+0xc0>
   2f614:	ldrb	r1, [r0, #1]!
   2f618:	ldr	r2, [pc, #204]	; 2f6ec <valid_wild_card+0x180>
   2f61c:	ldr	r2, [pc, r2]
   2f620:	ldrb	r1, [r2, r1, lsl #2]
   2f624:	tst	r1, #16
   2f628:	bne	2f688 <valid_wild_card+0x11c>
   2f62c:	ldrb	r3, [r4]
   2f630:	cmp	r3, #0
   2f634:	beq	2f6c4 <valid_wild_card+0x158>
   2f638:	add	r0, r4, #1
   2f63c:	ldr	r1, [pc, #176]	; 2f6f4 <valid_wild_card+0x188>
   2f640:	ldr	r1, [pc, r1]
   2f644:	ldr	r1, [r1, #236]	; 0xec
   2f648:	ldr	r2, [pc, #168]	; 2f6f8 <valid_wild_card+0x18c>
   2f64c:	ldr	r2, [pc, r2]
   2f650:	b	2f660 <valid_wild_card+0xf4>
   2f654:	ldrb	r3, [r0], #1
   2f658:	cmp	r3, #0
   2f65c:	beq	2f6c4 <valid_wild_card+0x158>
   2f660:	uxtb	r3, r3
   2f664:	add	r3, r2, r3, lsl #2
   2f668:	ldrb	r3, [r3, #1]
   2f66c:	tst	r3, #1
   2f670:	bne	2f654 <valid_wild_card+0xe8>
   2f674:	add	r6, r6, #1
   2f678:	cmp	r6, r1
   2f67c:	blt	2f654 <valid_wild_card+0xe8>
   2f680:	mov	r0, #1
   2f684:	pop	{r4, r5, r6, sl, fp, pc}
   2f688:	bl	e468 <atoi@plt>
   2f68c:	cmp	r0, #1
   2f690:	blt	2f6c4 <valid_wild_card+0x158>
   2f694:	mov	r5, r0
   2f698:	mov	r0, r4
   2f69c:	mov	r1, #58	; 0x3a
   2f6a0:	bl	dce8 <strchr@plt>
   2f6a4:	cmp	r0, #0
   2f6a8:	beq	2f6cc <valid_wild_card+0x160>
   2f6ac:	ldr	r0, [pc, #60]	; 2f6f0 <valid_wild_card+0x184>
   2f6b0:	ldr	r0, [pc, r0]
   2f6b4:	ldr	r0, [r0, #236]	; 0xec
   2f6b8:	sub	r0, r0, r6
   2f6bc:	lsl	r1, r0, #2
   2f6c0:	b	2f6d4 <valid_wild_card+0x168>
   2f6c4:	mov	r0, #0
   2f6c8:	pop	{r4, r5, r6, sl, fp, pc}
   2f6cc:	mov	r0, #6
   2f6d0:	sub	r1, r0, r6, lsl #1
   2f6d4:	mov	r0, #1
   2f6d8:	cmp	r5, r1
   2f6dc:	movlt	r0, #0
   2f6e0:	pop	{r4, r5, r6, sl, fp, pc}
   2f6e4:	.word	0x0002b5c8
   2f6e8:	.word	0x0002b434
   2f6ec:	.word	0x0002b3dc
   2f6f0:	.word	0x0002b4cc
   2f6f4:	.word	0x0002b53c
   2f6f8:	.word	0x0002b3ac

0002f6fc <find_prop_ban>:
   2f6fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f700:	add	fp, sp, #24
   2f704:	mov	r7, r0
   2f708:	ldr	r0, [pc, #136]	; 2f798 <find_prop_ban+0x9c>
   2f70c:	ldr	r0, [pc, r0]
   2f710:	ldr	r4, [r0]
   2f714:	mov	r8, #0
   2f718:	cmp	r4, #0
   2f71c:	beq	2f788 <find_prop_ban+0x8c>
   2f720:	mov	r9, r2
   2f724:	mov	r6, r1
   2f728:	b	2f74c <find_prop_ban+0x50>
   2f72c:	ldr	r0, [r5, #16]
   2f730:	mov	r1, r9
   2f734:	bl	e750 <irccmp@plt>
   2f738:	cmp	r0, #0
   2f73c:	beq	2f790 <find_prop_ban+0x94>
   2f740:	ldr	r4, [r4, #8]
   2f744:	cmp	r4, #0
   2f748:	beq	2f788 <find_prop_ban+0x8c>
   2f74c:	ldr	r5, [r4]
   2f750:	ldr	r0, [r5]
   2f754:	bic	r0, r0, #-2147483648	; 0x80000000
   2f758:	cmp	r0, r7
   2f75c:	bne	2f740 <find_prop_ban+0x44>
   2f760:	cmp	r6, #0
   2f764:	beq	2f72c <find_prop_ban+0x30>
   2f768:	ldr	r0, [r5, #28]
   2f76c:	cmp	r0, #0
   2f770:	beq	2f72c <find_prop_ban+0x30>
   2f774:	mov	r1, r6
   2f778:	bl	e750 <irccmp@plt>
   2f77c:	cmp	r0, #0
   2f780:	bne	2f740 <find_prop_ban+0x44>
   2f784:	b	2f72c <find_prop_ban+0x30>
   2f788:	mov	r0, r8
   2f78c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f790:	mov	r0, r4
   2f794:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f798:	.word	0x0002b1b4

0002f79c <deactivate_conf>:
   2f79c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f7a0:	add	fp, sp, #24
   2f7a4:	mov	r6, r2
   2f7a8:	mov	r8, r1
   2f7ac:	mov	r4, r0
   2f7b0:	ldr	r0, [r0]
   2f7b4:	cmp	r0, #255	; 0xff
   2f7b8:	ble	2f814 <deactivate_conf+0x78>
   2f7bc:	cmp	r0, #256	; 0x100
   2f7c0:	beq	2f830 <deactivate_conf+0x94>
   2f7c4:	cmp	r0, #512	; 0x200
   2f7c8:	beq	2f840 <deactivate_conf+0xa4>
   2f7cc:	cmp	r0, #131072	; 0x20000
   2f7d0:	bne	2f8b4 <deactivate_conf+0x118>
   2f7d4:	ldr	r0, [r4, #44]	; 0x2c
   2f7d8:	cmp	r0, #0
   2f7dc:	bne	2f890 <deactivate_conf+0xf4>
   2f7e0:	ldrb	r0, [r4, #6]
   2f7e4:	tst	r0, #128	; 0x80
   2f7e8:	beq	2f890 <deactivate_conf+0xf4>
   2f7ec:	mov	r7, #0
   2f7f0:	ldr	r5, [pc, #284]	; 2f914 <deactivate_conf+0x178>
   2f7f4:	ldr	r5, [pc, r5]
   2f7f8:	add	r1, r5, r7
   2f7fc:	mov	r0, r4
   2f800:	bl	2f924 <rb_dlinkFindDestroy>
   2f804:	add	r7, r7, #12
   2f808:	cmp	r7, #48	; 0x30
   2f80c:	bne	2f7f8 <deactivate_conf+0x5c>
   2f810:	b	2f890 <deactivate_conf+0xf4>
   2f814:	cmp	r0, #64	; 0x40
   2f818:	beq	2f854 <deactivate_conf+0xb8>
   2f81c:	cmp	r0, #128	; 0x80
   2f820:	bne	2f8b4 <deactivate_conf+0x118>
   2f824:	ldr	r1, [pc, #228]	; 2f910 <deactivate_conf+0x174>
   2f828:	ldr	r1, [pc, r1]
   2f82c:	b	2f848 <deactivate_conf+0xac>
   2f830:	ldr	r0, [r4, #16]
   2f834:	mov	r1, r4
   2f838:	bl	e1c8 <del_from_resv_hash@plt>
   2f83c:	b	2f8b4 <deactivate_conf+0x118>
   2f840:	ldr	r1, [pc, #212]	; 2f91c <deactivate_conf+0x180>
   2f844:	ldr	r1, [pc, r1]
   2f848:	mov	r0, r4
   2f84c:	bl	2f924 <rb_dlinkFindDestroy>
   2f850:	b	2f8b4 <deactivate_conf+0x118>
   2f854:	ldr	r0, [r4, #44]	; 0x2c
   2f858:	cmp	r0, #0
   2f85c:	bne	2f890 <deactivate_conf+0xf4>
   2f860:	ldrb	r0, [r4, #6]
   2f864:	tst	r0, #128	; 0x80
   2f868:	beq	2f890 <deactivate_conf+0xf4>
   2f86c:	mov	r7, #0
   2f870:	ldr	r5, [pc, #160]	; 2f918 <deactivate_conf+0x17c>
   2f874:	ldr	r5, [pc, r5]
   2f878:	add	r1, r5, r7
   2f87c:	mov	r0, r4
   2f880:	bl	2f924 <rb_dlinkFindDestroy>
   2f884:	add	r7, r7, #12
   2f888:	cmp	r7, #48	; 0x30
   2f88c:	bne	2f878 <deactivate_conf+0xdc>
   2f890:	ldr	r1, [r4, #8]
   2f894:	ldr	r0, [r4, #16]
   2f898:	add	r1, r1, #1
   2f89c:	str	r1, [r4, #8]
   2f8a0:	mov	r1, r4
   2f8a4:	bl	e054 <delete_one_address_conf@plt>
   2f8a8:	ldr	r0, [r4, #8]
   2f8ac:	sub	r0, r0, #1
   2f8b0:	str	r0, [r4, #8]
   2f8b4:	ldr	r0, [r4, #44]	; 0x2c
   2f8b8:	cmp	r0, #0
   2f8bc:	beq	2f8c8 <deactivate_conf+0x12c>
   2f8c0:	cmp	r0, r6
   2f8c4:	bgt	2f8f4 <deactivate_conf+0x158>
   2f8c8:	cmp	r0, #0
   2f8cc:	beq	2f8e8 <deactivate_conf+0x14c>
   2f8d0:	ldr	r1, [pc, #72]	; 2f920 <deactivate_conf+0x184>
   2f8d4:	ldr	r1, [pc, r1]
   2f8d8:	mov	r0, r8
   2f8dc:	bl	2f9a8 <rb_dlinkDelete>
   2f8e0:	mov	r0, r8
   2f8e4:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   2f8e8:	ldr	r0, [r4, #8]
   2f8ec:	cmp	r0, #0
   2f8f0:	beq	2f904 <deactivate_conf+0x168>
   2f8f4:	ldr	r0, [r4]
   2f8f8:	orr	r0, r0, #-2147483648	; 0x80000000
   2f8fc:	str	r0, [r4]
   2f900:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f904:	mov	r0, r4
   2f908:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f90c:	b	2e428 <free_conf>
   2f910:	.word	0x0002b09c
   2f914:	.word	0x0002b284
   2f918:	.word	0x0002b284
   2f91c:	.word	0x0002b068
   2f920:	.word	0x0002afec

0002f924 <rb_dlinkFindDestroy>:
   2f924:	push	{fp, lr}
   2f928:	mov	fp, sp
   2f92c:	cmp	r1, #0
   2f930:	beq	2f950 <rb_dlinkFindDestroy+0x2c>
   2f934:	cmp	r0, #0
   2f938:	beq	2f970 <rb_dlinkFindDestroy+0x4c>
   2f93c:	bl	30640 <rb_dlinkFindDelete>
   2f940:	cmp	r0, #0
   2f944:	popeq	{fp, pc}
   2f948:	pop	{fp, lr}
   2f94c:	b	d7b4 <rb_free_rb_dlink_node@plt>
   2f950:	ldr	r0, [pc, #56]	; 2f990 <rb_dlinkFindDestroy+0x6c>
   2f954:	add	r0, pc, r0
   2f958:	ldr	r1, [pc, #52]	; 2f994 <rb_dlinkFindDestroy+0x70>
   2f95c:	add	r1, pc, r1
   2f960:	ldr	r3, [pc, #48]	; 2f998 <rb_dlinkFindDestroy+0x74>
   2f964:	add	r3, pc, r3
   2f968:	movw	r2, #287	; 0x11f
   2f96c:	bl	e7e0 <__assert_fail@plt>
   2f970:	ldr	r0, [pc, #36]	; 2f99c <rb_dlinkFindDestroy+0x78>
   2f974:	add	r0, pc, r0
   2f978:	ldr	r1, [pc, #32]	; 2f9a0 <rb_dlinkFindDestroy+0x7c>
   2f97c:	add	r1, pc, r1
   2f980:	ldr	r3, [pc, #28]	; 2f9a4 <rb_dlinkFindDestroy+0x80>
   2f984:	add	r3, pc, r3
   2f988:	mov	r2, #288	; 0x120
   2f98c:	bl	e7e0 <__assert_fail@plt>
   2f990:	.word	0x00016841
   2f994:	.word	0x00010fba
   2f998:	.word	0x000115c1
   2f99c:	.word	0x00010ffd
   2f9a0:	.word	0x00010f9a
   2f9a4:	.word	0x000115a1

0002f9a8 <rb_dlinkDelete>:
   2f9a8:	push	{fp, lr}
   2f9ac:	mov	fp, sp
   2f9b0:	cmp	r0, #0
   2f9b4:	beq	2fa08 <rb_dlinkDelete+0x60>
   2f9b8:	cmp	r1, #0
   2f9bc:	beq	2fa28 <rb_dlinkDelete+0x80>
   2f9c0:	ldr	ip, [r0, #4]
   2f9c4:	ldr	r3, [r0, #8]
   2f9c8:	add	r2, r3, #4
   2f9cc:	cmp	r3, #0
   2f9d0:	addeq	r2, r1, #4
   2f9d4:	str	ip, [r2]
   2f9d8:	ldmib	r0, {r2, ip}
   2f9dc:	cmp	r2, #0
   2f9e0:	mov	r3, r1
   2f9e4:	addne	r3, r2, #8
   2f9e8:	str	ip, [r3]
   2f9ec:	mov	r2, #0
   2f9f0:	str	r2, [r0, #4]
   2f9f4:	str	r2, [r0, #8]
   2f9f8:	ldr	r0, [r1, #8]
   2f9fc:	sub	r0, r0, #1
   2fa00:	str	r0, [r1, #8]
   2fa04:	pop	{fp, pc}
   2fa08:	ldr	r0, [pc, #56]	; 2fa48 <rb_dlinkDelete+0xa0>
   2fa0c:	add	r0, pc, r0
   2fa10:	ldr	r1, [pc, #52]	; 2fa4c <rb_dlinkDelete+0xa4>
   2fa14:	add	r1, pc, r1
   2fa18:	ldr	r3, [pc, #48]	; 2fa50 <rb_dlinkDelete+0xa8>
   2fa1c:	add	r3, pc, r3
   2fa20:	mov	r2, #235	; 0xeb
   2fa24:	bl	e7e0 <__assert_fail@plt>
   2fa28:	ldr	r0, [pc, #36]	; 2fa54 <rb_dlinkDelete+0xac>
   2fa2c:	add	r0, pc, r0
   2fa30:	ldr	r1, [pc, #32]	; 2fa58 <rb_dlinkDelete+0xb0>
   2fa34:	add	r1, pc, r1
   2fa38:	ldr	r3, [pc, #28]	; 2fa5c <rb_dlinkDelete+0xb4>
   2fa3c:	add	r3, pc, r3
   2fa40:	mov	r2, #236	; 0xec
   2fa44:	bl	e7e0 <__assert_fail@plt>
   2fa48:	.word	0x00010f00
   2fa4c:	.word	0x00010f02
   2fa50:	.word	0x00010f9d
   2fa54:	.word	0x00016769
   2fa58:	.word	0x00010ee2
   2fa5c:	.word	0x00010f7d

0002fa60 <replace_old_ban>:
   2fa60:	push	{r4, r5, r6, sl, fp, lr}
   2fa64:	add	fp, sp, #16
   2fa68:	mov	r4, r0
   2fa6c:	ldr	r0, [r0]
   2fa70:	ldr	r2, [r4, #16]
   2fa74:	ldr	r1, [r4, #28]
   2fa78:	bl	e258 <find_prop_ban@plt>
   2fa7c:	cmp	r0, #0
   2fa80:	beq	2faf0 <replace_old_ban+0x90>
   2fa84:	mov	r5, r0
   2fa88:	ldr	r6, [r0]
   2fa8c:	ldr	r0, [r6, #44]	; 0x2c
   2fa90:	ldr	r1, [r4, #44]	; 0x2c
   2fa94:	cmp	r0, r1
   2fa98:	strgt	r0, [r4, #44]	; 0x2c
   2fa9c:	ldr	r0, [r6, #40]	; 0x28
   2faa0:	ldr	r1, [r4, #40]	; 0x28
   2faa4:	cmp	r0, r1
   2faa8:	addge	r0, r0, #1
   2faac:	strge	r0, [r4, #40]	; 0x28
   2fab0:	ldr	r1, [r4, #36]	; 0x24
   2fab4:	ldr	r0, [r4, #40]	; 0x28
   2fab8:	cmp	r1, r0
   2fabc:	addle	r0, r0, #1
   2fac0:	strle	r0, [r4, #36]	; 0x24
   2fac4:	ldr	r0, [r4, #36]	; 0x24
   2fac8:	ldr	r1, [r4, #44]	; 0x2c
   2facc:	cmp	r1, r0
   2fad0:	strlt	r0, [r4, #44]	; 0x2c
   2fad4:	bl	d07c <rb_current_time@plt>
   2fad8:	mov	r2, r0
   2fadc:	str	r0, [r6, #44]	; 0x2c
   2fae0:	mov	r0, r6
   2fae4:	mov	r1, r5
   2fae8:	pop	{r4, r5, r6, sl, fp, lr}
   2faec:	b	2f79c <deactivate_conf>
   2faf0:	pop	{r4, r5, r6, sl, fp, pc}

0002faf4 <get_oper_name>:
   2faf4:	push	{fp, lr}
   2faf8:	mov	fp, sp
   2fafc:	sub	sp, sp, #16
   2fb00:	ldrb	r1, [r0, #65]	; 0x41
   2fb04:	tst	r1, #32
   2fb08:	beq	2fb18 <get_oper_name+0x24>
   2fb0c:	ldrb	r1, [r0, #57]	; 0x39
   2fb10:	tst	r1, #16
   2fb14:	bne	2fb2c <get_oper_name+0x38>
   2fb18:	ldr	r1, [r0, #32]
   2fb1c:	add	r2, r0, #163	; 0xa3
   2fb20:	add	r3, r0, #152	; 0x98
   2fb24:	add	r1, r1, #88	; 0x58
   2fb28:	b	2fb3c <get_oper_name+0x48>
   2fb2c:	ldr	r1, [r0, #24]
   2fb30:	ldr	r1, [r1, #32]
   2fb34:	add	r2, r0, #163	; 0xa3
   2fb38:	add	r3, r0, #152	; 0x98
   2fb3c:	str	r3, [sp]
   2fb40:	str	r2, [sp, #4]
   2fb44:	str	r1, [sp, #8]
   2fb48:	add	r3, r0, #88	; 0x58
   2fb4c:	ldr	r0, [pc, #32]	; 2fb74 <get_oper_name+0x80>
   2fb50:	add	r0, pc, r0
   2fb54:	ldr	r2, [pc, #28]	; 2fb78 <get_oper_name+0x84>
   2fb58:	add	r2, pc, r2
   2fb5c:	mov	r1, #204	; 0xcc
   2fb60:	bl	de74 <snprintf@plt>
   2fb64:	ldr	r0, [pc, #16]	; 2fb7c <get_oper_name+0x88>
   2fb68:	add	r0, pc, r0
   2fb6c:	mov	sp, fp
   2fb70:	pop	{fp, pc}
   2fb74:	.word	0x0003af24
   2fb78:	.word	0x0001646f
   2fb7c:	.word	0x0003af0c

0002fb80 <get_printable_conf>:
   2fb80:	push	{r4, r5, fp, lr}
   2fb84:	add	fp, sp, #8
   2fb88:	ldr	lr, [r0, #12]
   2fb8c:	ldr	ip, [pc, #224]	; 2fc74 <get_printable_conf+0xf4>
   2fb90:	add	ip, pc, ip
   2fb94:	cmp	lr, #0
   2fb98:	mov	r4, ip
   2fb9c:	beq	2fbb4 <get_printable_conf+0x34>
   2fba0:	ldrb	r5, [lr]
   2fba4:	ldr	r4, [pc, #204]	; 2fc78 <get_printable_conf+0xf8>
   2fba8:	add	r4, pc, r4
   2fbac:	cmp	r5, #0
   2fbb0:	movne	r4, lr
   2fbb4:	str	r4, [r1]
   2fbb8:	ldr	r1, [r0, #16]
   2fbbc:	cmp	r1, #0
   2fbc0:	mov	r4, ip
   2fbc4:	beq	2fbdc <get_printable_conf+0x5c>
   2fbc8:	ldrb	r5, [r1]
   2fbcc:	ldr	r4, [pc, #168]	; 2fc7c <get_printable_conf+0xfc>
   2fbd0:	add	r4, pc, r4
   2fbd4:	cmp	r5, #0
   2fbd8:	movne	r4, r1
   2fbdc:	str	r4, [r2]
   2fbe0:	ldr	r1, [r0, #20]
   2fbe4:	cmp	r1, #0
   2fbe8:	mov	r2, ip
   2fbec:	beq	2fc04 <get_printable_conf+0x84>
   2fbf0:	ldrb	r5, [r1]
   2fbf4:	ldr	r2, [pc, #132]	; 2fc80 <get_printable_conf+0x100>
   2fbf8:	add	r2, pc, r2
   2fbfc:	cmp	r5, #0
   2fc00:	movne	r2, r1
   2fc04:	ldr	r1, [fp, #8]
   2fc08:	str	r2, [r3]
   2fc0c:	ldr	r2, [r0, #28]
   2fc10:	cmp	r2, #0
   2fc14:	beq	2fc2c <get_printable_conf+0xac>
   2fc18:	ldrb	r3, [r2]
   2fc1c:	ldr	ip, [pc, #96]	; 2fc84 <get_printable_conf+0x104>
   2fc20:	add	ip, pc, ip
   2fc24:	cmp	r3, #0
   2fc28:	movne	ip, r2
   2fc2c:	ldr	r2, [fp, #16]
   2fc30:	ldr	r3, [fp, #12]
   2fc34:	str	ip, [r1]
   2fc38:	ldr	r4, [r0, #48]	; 0x30
   2fc3c:	cmp	r4, #0
   2fc40:	beq	2fc5c <get_printable_conf+0xdc>
   2fc44:	ldrb	r5, [r4]
   2fc48:	ldr	r1, [pc, #60]	; 2fc8c <get_printable_conf+0x10c>
   2fc4c:	add	r1, pc, r1
   2fc50:	cmp	r5, #0
   2fc54:	movne	r1, r4
   2fc58:	b	2fc64 <get_printable_conf+0xe4>
   2fc5c:	ldr	r1, [pc, #36]	; 2fc88 <get_printable_conf+0x108>
   2fc60:	add	r1, pc, r1
   2fc64:	str	r1, [r2]
   2fc68:	ldr	r0, [r0, #32]
   2fc6c:	str	r0, [r3]
   2fc70:	pop	{r4, r5, fp, pc}
   2fc74:	.word	0x0002ce0c
   2fc78:	.word	0x0002cdf4
   2fc7c:	.word	0x0002cdcc
   2fc80:	.word	0x0002cda4
   2fc84:	.word	0x0002cd7c
   2fc88:	.word	0x0002cd43
   2fc8c:	.word	0x0002cd57

0002fc90 <get_user_ban_reason>:
   2fc90:	push	{r4, r5, fp, lr}
   2fc94:	add	fp, sp, #8
   2fc98:	sub	sp, sp, #8
   2fc9c:	mov	r4, r0
   2fca0:	ldr	r0, [pc, #268]	; 2fdb4 <get_user_ban_reason+0x124>
   2fca4:	ldr	r0, [pc, r0]
   2fca8:	ldr	r0, [r0, #128]	; 0x80
   2fcac:	cmp	r0, #0
   2fcb0:	bne	2fd1c <get_user_ban_reason+0x8c>
   2fcb4:	ldrb	r0, [r4, #6]
   2fcb8:	tst	r0, #128	; 0x80
   2fcbc:	beq	2fd1c <get_user_ban_reason+0x8c>
   2fcc0:	ldr	r0, [r4]
   2fcc4:	cmp	r0, #131072	; 0x20000
   2fcc8:	cmpne	r0, #64	; 0x40
   2fccc:	bne	2fd1c <get_user_ban_reason+0x8c>
   2fcd0:	ldr	r1, [r4, #36]	; 0x24
   2fcd4:	ldr	r2, [r4, #40]	; 0x28
   2fcd8:	sub	r1, r1, r2
   2fcdc:	movw	r2, #34953	; 0x8889
   2fce0:	movt	r2, #34952	; 0x8888
   2fce4:	smmla	r1, r1, r2, r1
   2fce8:	asr	r2, r1, #5
   2fcec:	add	r1, r2, r1, lsr #31
   2fcf0:	str	r1, [sp]
   2fcf4:	mov	r3, #75	; 0x4b
   2fcf8:	cmp	r0, #131072	; 0x20000
   2fcfc:	movweq	r3, #68	; 0x44
   2fd00:	ldr	r0, [pc, #176]	; 2fdb8 <get_user_ban_reason+0x128>
   2fd04:	add	r0, pc, r0
   2fd08:	ldr	r2, [pc, #172]	; 2fdbc <get_user_ban_reason+0x12c>
   2fd0c:	add	r2, pc, r2
   2fd10:	mov	r1, #512	; 0x200
   2fd14:	bl	de74 <snprintf@plt>
   2fd18:	b	2fd2c <get_user_ban_reason+0x9c>
   2fd1c:	ldr	r0, [pc, #156]	; 2fdc0 <get_user_ban_reason+0x130>
   2fd20:	add	r0, pc, r0
   2fd24:	mov	r1, #0
   2fd28:	strb	r1, [r0]
   2fd2c:	ldr	r1, [r4, #20]
   2fd30:	ldr	r0, [pc, #140]	; 2fdc4 <get_user_ban_reason+0x134>
   2fd34:	add	r0, pc, r0
   2fd38:	cmp	r1, #0
   2fd3c:	bne	2fd48 <get_user_ban_reason+0xb8>
   2fd40:	ldr	r1, [pc, #128]	; 2fdc8 <get_user_ban_reason+0x138>
   2fd44:	add	r1, pc, r1
   2fd48:	mov	r2, #512	; 0x200
   2fd4c:	bl	e7d4 <rb_strlcat@plt>
   2fd50:	ldr	r0, [r4, #40]	; 0x28
   2fd54:	cmp	r0, #0
   2fd58:	beq	2fda4 <get_user_ban_reason+0x114>
   2fd5c:	ldr	r5, [pc, #104]	; 2fdcc <get_user_ban_reason+0x13c>
   2fd60:	add	r5, pc, r5
   2fd64:	ldr	r1, [pc, #100]	; 2fdd0 <get_user_ban_reason+0x140>
   2fd68:	add	r1, pc, r1
   2fd6c:	mov	r0, r5
   2fd70:	mov	r2, #512	; 0x200
   2fd74:	bl	e7d4 <rb_strlcat@plt>
   2fd78:	ldr	r0, [r4, #40]	; 0x28
   2fd7c:	bl	e2c4 <smalldate@plt>
   2fd80:	mov	r1, r0
   2fd84:	mov	r0, r5
   2fd88:	mov	r2, #512	; 0x200
   2fd8c:	bl	e7d4 <rb_strlcat@plt>
   2fd90:	ldr	r1, [pc, #60]	; 2fdd4 <get_user_ban_reason+0x144>
   2fd94:	add	r1, pc, r1
   2fd98:	mov	r0, r5
   2fd9c:	mov	r2, #512	; 0x200
   2fda0:	bl	e7d4 <rb_strlcat@plt>
   2fda4:	ldr	r0, [pc, #44]	; 2fdd8 <get_user_ban_reason+0x148>
   2fda8:	add	r0, pc, r0
   2fdac:	sub	sp, fp, #8
   2fdb0:	pop	{r4, r5, fp, pc}
   2fdb4:	.word	0x0002aed8
   2fdb8:	.word	0x0003ae3c
   2fdbc:	.word	0x000162c8
   2fdc0:	.word	0x0003ae20
   2fdc4:	.word	0x0003ae0c
   2fdc8:	.word	0x000162ad
   2fdcc:	.word	0x0003ade0
   2fdd0:	.word	0x00016293
   2fdd4:	.word	0x00013019
   2fdd8:	.word	0x0003ad98

0002fddc <get_printable_kline>:
   2fddc:	push	{r4, r5, r6, r7, fp, lr}
   2fde0:	add	fp, sp, #16
   2fde4:	sub	sp, sp, #8
   2fde8:	mov	r6, r3
   2fdec:	mov	r4, r1
   2fdf0:	mov	r5, r0
   2fdf4:	ldr	r1, [r1, #16]
   2fdf8:	ldr	r0, [pc, #292]	; 2ff24 <get_printable_kline+0x148>
   2fdfc:	add	r0, pc, r0
   2fe00:	cmp	r1, #0
   2fe04:	mov	r3, r0
   2fe08:	beq	2fe20 <get_printable_kline+0x44>
   2fe0c:	ldrb	r7, [r1]
   2fe10:	ldr	r3, [pc, #272]	; 2ff28 <get_printable_kline+0x14c>
   2fe14:	add	r3, pc, r3
   2fe18:	cmp	r7, #0
   2fe1c:	movne	r3, r1
   2fe20:	ldr	r1, [fp, #8]
   2fe24:	str	r3, [r2]
   2fe28:	ldr	r2, [r4, #28]
   2fe2c:	cmp	r2, #0
   2fe30:	beq	2fe48 <get_printable_kline+0x6c>
   2fe34:	ldrb	r3, [r2]
   2fe38:	ldr	r0, [pc, #236]	; 2ff2c <get_printable_kline+0x150>
   2fe3c:	add	r0, pc, r0
   2fe40:	cmp	r3, #0
   2fe44:	movne	r0, r2
   2fe48:	ldr	r7, [fp, #12]
   2fe4c:	str	r0, [r1]
   2fe50:	mov	r0, r4
   2fe54:	bl	d010 <get_user_ban_reason@plt>
   2fe58:	ldr	r0, [pc, #208]	; 2ff30 <get_printable_kline+0x154>
   2fe5c:	add	r0, pc, r0
   2fe60:	str	r0, [r6]
   2fe64:	ldr	r0, [r5, #24]
   2fe68:	cmp	r0, #0
   2fe6c:	beq	2fe90 <get_printable_kline+0xb4>
   2fe70:	ldr	r0, [r0, #36]	; 0x24
   2fe74:	cmp	r0, #0
   2fe78:	beq	2fe90 <get_printable_kline+0xb4>
   2fe7c:	ldr	r1, [pc, #176]	; 2ff34 <get_printable_kline+0x158>
   2fe80:	add	r1, pc, r1
   2fe84:	bl	e594 <privilegeset_in_set@plt>
   2fe88:	cmp	r0, #0
   2fe8c:	bne	2feb8 <get_printable_kline+0xdc>
   2fe90:	ldrb	r0, [r5, #57]	; 0x39
   2fe94:	mov	r6, #0
   2fe98:	tst	r0, #16
   2fe9c:	beq	2ff18 <get_printable_kline+0x13c>
   2fea0:	ldr	r0, [r5, #24]
   2fea4:	cmp	r0, #0
   2fea8:	beq	2ff18 <get_printable_kline+0x13c>
   2feac:	ldr	r0, [r0, #36]	; 0x24
   2feb0:	cmp	r0, #0
   2feb4:	bne	2ff18 <get_printable_kline+0x13c>
   2feb8:	ldr	r3, [r4, #24]
   2febc:	cmp	r3, #0
   2fec0:	beq	2fee8 <get_printable_kline+0x10c>
   2fec4:	ldrb	r1, [r3]
   2fec8:	ldr	r2, [pc, #108]	; 2ff3c <get_printable_kline+0x160>
   2fecc:	add	r2, pc, r2
   2fed0:	ldr	r0, [pc, #104]	; 2ff40 <get_printable_kline+0x164>
   2fed4:	add	r0, pc, r0
   2fed8:	cmp	r1, #0
   2fedc:	moveq	r0, r2
   2fee0:	moveq	r3, r2
   2fee4:	b	2fef4 <get_printable_kline+0x118>
   2fee8:	ldr	r3, [pc, #72]	; 2ff38 <get_printable_kline+0x15c>
   2feec:	add	r3, pc, r3
   2fef0:	mov	r0, r3
   2fef4:	ldr	r1, [r4, #12]
   2fef8:	stm	sp, {r0, r1}
   2fefc:	ldr	r6, [pc, #64]	; 2ff44 <get_printable_kline+0x168>
   2ff00:	add	r6, pc, r6
   2ff04:	ldr	r2, [pc, #60]	; 2ff48 <get_printable_kline+0x16c>
   2ff08:	add	r2, pc, r2
   2ff0c:	mov	r0, r6
   2ff10:	mov	r1, #512	; 0x200
   2ff14:	bl	de74 <snprintf@plt>
   2ff18:	str	r6, [r7]
   2ff1c:	sub	sp, fp, #16
   2ff20:	pop	{r4, r5, r6, r7, fp, pc}
   2ff24:	.word	0x0002cbaf
   2ff28:	.word	0x0002cb97
   2ff2c:	.word	0x0002cb6f
   2ff30:	.word	0x0003ace4
   2ff34:	.word	0x00011172
   2ff38:	.word	0x00015c69
   2ff3c:	.word	0x00015c89
   2ff40:	.word	0x000165e4
   2ff44:	.word	0x0003ae40
   2ff48:	.word	0x000160f6

0002ff4c <clear_out_old_conf>:
   2ff4c:	push	{r4, r5, r6, sl, fp, lr}
   2ff50:	add	fp, sp, #16
   2ff54:	ldr	r0, [pc, #468]	; 30130 <clear_out_old_conf+0x1e4>
   2ff58:	ldr	r0, [pc, r0]
   2ff5c:	ldr	r0, [r0]
   2ff60:	cmp	r0, #0
   2ff64:	beq	2ff80 <clear_out_old_conf+0x34>
   2ff68:	mvn	r1, #0
   2ff6c:	ldr	r2, [r0]
   2ff70:	str	r1, [r2, #8]
   2ff74:	ldr	r0, [r0, #8]
   2ff78:	cmp	r0, #0
   2ff7c:	bne	2ff6c <clear_out_old_conf+0x20>
   2ff80:	bl	e1d4 <clear_out_address_conf@plt>
   2ff84:	bl	e1a4 <clear_s_newconf@plt>
   2ff88:	bl	dbf8 <mod_clear_paths@plt>
   2ff8c:	ldr	r0, [pc, #416]	; 30134 <clear_out_old_conf+0x1e8>
   2ff90:	add	r0, pc, r0
   2ff94:	bl	e564 <mod_add_path@plt>
   2ff98:	ldr	r0, [pc, #408]	; 30138 <clear_out_old_conf+0x1ec>
   2ff9c:	add	r0, pc, r0
   2ffa0:	bl	e564 <mod_add_path@plt>
   2ffa4:	ldr	r5, [pc, #400]	; 3013c <clear_out_old_conf+0x1f0>
   2ffa8:	ldr	r5, [pc, r5]
   2ffac:	ldr	r0, [r5, #8]
   2ffb0:	bl	2e4e8 <rb_free>
   2ffb4:	mov	r4, #0
   2ffb8:	str	r4, [r5, #8]
   2ffbc:	ldr	r0, [r5, #12]
   2ffc0:	bl	2e4e8 <rb_free>
   2ffc4:	mov	r0, #1
   2ffc8:	str	r0, [r5, #300]	; 0x12c
   2ffcc:	str	r4, [r5, #12]
   2ffd0:	ldr	r5, [pc, #360]	; 30140 <clear_out_old_conf+0x1f4>
   2ffd4:	ldr	r5, [pc, r5]
   2ffd8:	ldr	r0, [r5]
   2ffdc:	bl	2e4e8 <rb_free>
   2ffe0:	str	r4, [r5]
   2ffe4:	ldr	r0, [r5, #8]
   2ffe8:	bl	2e4e8 <rb_free>
   2ffec:	str	r4, [r5, #8]
   2fff0:	ldr	r0, [r5, #4]
   2fff4:	bl	2e4e8 <rb_free>
   2fff8:	str	r4, [r5, #4]
   2fffc:	bl	d268 <close_listeners@plt>
   30000:	ldr	r5, [pc, #316]	; 30144 <clear_out_old_conf+0x1f8>
   30004:	ldr	r5, [pc, r5]
   30008:	ldr	r0, [r5, #8]
   3000c:	bl	2e4e8 <rb_free>
   30010:	str	r4, [r5, #8]
   30014:	ldr	r0, [r5, #12]
   30018:	bl	2e4e8 <rb_free>
   3001c:	str	r4, [r5, #12]
   30020:	ldr	r0, [r5, #16]
   30024:	bl	2e4e8 <rb_free>
   30028:	str	r4, [r5, #16]
   3002c:	ldr	r0, [r5, #20]
   30030:	bl	2e4e8 <rb_free>
   30034:	str	r4, [r5, #20]
   30038:	ldr	r0, [r5, #32]
   3003c:	bl	2e4e8 <rb_free>
   30040:	str	r4, [r5, #32]
   30044:	ldr	r0, [r5, #36]	; 0x24
   30048:	bl	2e4e8 <rb_free>
   3004c:	str	r4, [r5, #36]	; 0x24
   30050:	ldr	r0, [r5, #40]	; 0x28
   30054:	bl	2e4e8 <rb_free>
   30058:	str	r4, [r5, #40]	; 0x28
   3005c:	ldr	r0, [r5, #44]	; 0x2c
   30060:	bl	2e4e8 <rb_free>
   30064:	str	r4, [r5, #44]	; 0x2c
   30068:	ldr	r0, [r5, #48]	; 0x30
   3006c:	bl	2e4e8 <rb_free>
   30070:	str	r4, [r5, #48]	; 0x30
   30074:	ldr	r0, [r5, #52]	; 0x34
   30078:	bl	2e4e8 <rb_free>
   3007c:	str	r4, [r5, #52]	; 0x34
   30080:	ldr	r0, [r5, #56]	; 0x38
   30084:	bl	2e4e8 <rb_free>
   30088:	str	r4, [r5, #56]	; 0x38
   3008c:	ldr	r0, [r5, #60]	; 0x3c
   30090:	bl	2e4e8 <rb_free>
   30094:	str	r4, [r5, #60]	; 0x3c
   30098:	ldr	r0, [r5, #64]	; 0x40
   3009c:	bl	2e4e8 <rb_free>
   300a0:	str	r4, [r5, #64]	; 0x40
   300a4:	ldr	r0, [r5, #68]	; 0x44
   300a8:	bl	2e4e8 <rb_free>
   300ac:	str	r4, [r5, #68]	; 0x44
   300b0:	ldr	r0, [pc, #144]	; 30148 <clear_out_old_conf+0x1fc>
   300b4:	ldr	r0, [pc, r0]
   300b8:	ldr	r4, [r0]
   300bc:	cmp	r4, #0
   300c0:	beq	300f8 <clear_out_old_conf+0x1ac>
   300c4:	ldr	r5, [pc, #128]	; 3014c <clear_out_old_conf+0x200>
   300c8:	ldr	r5, [pc, r5]
   300cc:	ldr	r0, [r4]
   300d0:	ldr	r6, [r4, #8]
   300d4:	bl	2e4e8 <rb_free>
   300d8:	mov	r0, r4
   300dc:	mov	r1, r5
   300e0:	bl	2f9a8 <rb_dlinkDelete>
   300e4:	mov	r0, r4
   300e8:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   300ec:	cmp	r6, #0
   300f0:	mov	r4, r6
   300f4:	bne	300cc <clear_out_old_conf+0x180>
   300f8:	ldr	r4, [pc, #80]	; 30150 <clear_out_old_conf+0x204>
   300fc:	ldr	r4, [pc, r4]
   30100:	ldr	r0, [r4]
   30104:	cmp	r0, #0
   30108:	beq	30124 <clear_out_old_conf+0x1d8>
   3010c:	ldr	r1, [pc, #64]	; 30154 <clear_out_old_conf+0x208>
   30110:	add	r1, pc, r1
   30114:	mov	r5, #0
   30118:	mov	r2, #0
   3011c:	bl	e0cc <rb_dictionary_destroy@plt>
   30120:	str	r5, [r4]
   30124:	bl	d5a4 <del_dnsbl_entry_all@plt>
   30128:	pop	{r4, r5, r6, sl, fp, lr}
   3012c:	b	dfc4 <privilegeset_mark_all_illegal@plt>
   30130:	.word	0x0002ab6c
   30134:	.word	0x00011d8c
   30138:	.word	0x0001626c
   3013c:	.word	0x0002a9a8
   30140:	.word	0x0002ab70
   30144:	.word	0x0002ab78
   30148:	.word	0x0002a834
   3014c:	.word	0x0002a820
   30150:	.word	0x0002a890
   30154:	.word	0x00000c90

00030158 <read_conf>:
   30158:	push	{fp, lr}
   3015c:	mov	fp, sp
   30160:	ldr	r0, [pc, #36]	; 3018c <read_conf+0x34>
   30164:	ldr	r0, [pc, r0]
   30168:	mov	r1, #0
   3016c:	str	r1, [r0]
   30170:	bl	30840 <set_default_conf>
   30174:	bl	d4b4 <yyparse@plt>
   30178:	bl	30af8 <validate_conf>
   3017c:	bl	dde4 <check_class@plt>
   30180:	bl	d388 <privilegeset_delete_all_illegal@plt>
   30184:	pop	{fp, lr}
   30188:	b	df70 <construct_cflags_strings@plt>
   3018c:	.word	0x0002a8dc

00030190 <conf_add_class_to_conf>:
   30190:	push	{r4, sl, fp, lr}
   30194:	add	fp, sp, #8
   30198:	mov	r4, r0
   3019c:	ldr	r0, [r0, #48]	; 0x30
   301a0:	cmp	r0, #0
   301a4:	beq	301d8 <conf_add_class_to_conf+0x48>
   301a8:	bl	d6a0 <find_class@plt>
   301ac:	str	r0, [r4, #52]	; 0x34
   301b0:	ldr	r1, [pc, #140]	; 30244 <conf_add_class_to_conf+0xb4>
   301b4:	ldr	r1, [pc, r1]
   301b8:	ldr	r1, [r1]
   301bc:	cmp	r0, r1
   301c0:	beq	301fc <conf_add_class_to_conf+0x6c>
   301c4:	ldr	r0, [r0, #8]
   301c8:	cmn	r0, #1
   301cc:	popgt	{r4, sl, fp, pc}
   301d0:	str	r1, [r4, #52]	; 0x34
   301d4:	b	30220 <conf_add_class_to_conf+0x90>
   301d8:	ldr	r0, [pc, #92]	; 3023c <conf_add_class_to_conf+0xac>
   301dc:	add	r0, pc, r0
   301e0:	bl	30250 <rb_strdup>
   301e4:	ldr	r1, [pc, #84]	; 30240 <conf_add_class_to_conf+0xb0>
   301e8:	ldr	r1, [pc, r1]
   301ec:	ldr	r1, [r1]
   301f0:	str	r0, [r4, #48]	; 0x30
   301f4:	str	r1, [r4, #52]	; 0x34
   301f8:	pop	{r4, sl, fp, pc}
   301fc:	ldr	r0, [r4]
   30200:	cmp	r0, #2
   30204:	bne	30220 <conf_add_class_to_conf+0x90>
   30208:	ldr	r3, [r4, #16]
   3020c:	ldr	r2, [r4, #28]
   30210:	ldr	r1, [r4, #48]	; 0x30
   30214:	ldr	r0, [pc, #44]	; 30248 <conf_add_class_to_conf+0xb8>
   30218:	add	r0, pc, r0
   3021c:	bl	d400 <conf_report_error@plt>
   30220:	ldr	r0, [r4, #48]	; 0x30
   30224:	bl	2e4e8 <rb_free>
   30228:	ldr	r0, [pc, #28]	; 3024c <conf_add_class_to_conf+0xbc>
   3022c:	add	r0, pc, r0
   30230:	bl	30250 <rb_strdup>
   30234:	str	r0, [r4, #48]	; 0x30
   30238:	pop	{r4, sl, fp, pc}
   3023c:	.word	0x00011198
   30240:	.word	0x0002a664
   30244:	.word	0x0002a698
   30248:	.word	0x00015e7e
   3024c:	.word	0x00011148

00030250 <rb_strdup>:
   30250:	push	{r4, sl, fp, lr}
   30254:	add	fp, sp, #8
   30258:	mov	r4, r0
   3025c:	bl	dc94 <strlen@plt>
   30260:	add	r0, r0, #1
   30264:	bl	da84 <malloc@plt>
   30268:	cmp	r0, #0
   3026c:	beq	3027c <rb_strdup+0x2c>
   30270:	mov	r1, r4
   30274:	pop	{r4, sl, fp, lr}
   30278:	b	d91c <strcpy@plt>
   3027c:	bl	d448 <rb_outofmemory@plt>

00030280 <conf_add_d_conf>:
   30280:	push	{r4, sl, fp, lr}
   30284:	add	fp, sp, #8
   30288:	sub	sp, sp, #8
   3028c:	mov	r4, r0
   30290:	ldr	r0, [r0, #16]
   30294:	cmp	r0, #0
   30298:	beq	302f4 <conf_add_d_conf+0x74>
   3029c:	mov	r1, #0
   302a0:	str	r1, [r4, #28]
   302a4:	mov	r1, #0
   302a8:	mov	r2, #0
   302ac:	bl	d55c <parse_netmask@plt>
   302b0:	ldr	r2, [r4, #16]
   302b4:	cmp	r0, #1
   302b8:	bne	302dc <conf_add_d_conf+0x5c>
   302bc:	ldr	r1, [pc, #56]	; 302fc <conf_add_d_conf+0x7c>
   302c0:	add	r1, pc, r1
   302c4:	mov	r0, #0
   302c8:	bl	e0b4 <ilog@plt>
   302cc:	mov	r0, r4
   302d0:	sub	sp, fp, #8
   302d4:	pop	{r4, sl, fp, lr}
   302d8:	b	2e428 <free_conf>
   302dc:	str	r4, [sp]
   302e0:	mov	r0, r2
   302e4:	mov	r1, #131072	; 0x20000
   302e8:	mov	r2, #0
   302ec:	mov	r3, #0
   302f0:	bl	dacc <add_conf_by_address@plt>
   302f4:	sub	sp, fp, #8
   302f8:	pop	{r4, sl, fp, pc}
   302fc:	.word	0x00015e15

00030300 <yyerror>:
   30300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30304:	add	fp, sp, #24
   30308:	sub	sp, sp, #528	; 0x210
   3030c:	mov	r4, r0
   30310:	add	r5, sp, #16
   30314:	mov	r0, r5
   30318:	bl	30384 <strip_tabs>
   3031c:	ldr	r6, [pc, #84]	; 30378 <yyerror+0x78>
   30320:	ldr	r6, [pc, r6]
   30324:	ldr	r0, [r6]
   30328:	str	r5, [sp]
   3032c:	add	r2, r0, #1
   30330:	ldr	r8, [pc, #68]	; 3037c <yyerror+0x7c>
   30334:	ldr	r8, [pc, r8]
   30338:	ldr	r7, [pc, #64]	; 30380 <yyerror+0x80>
   3033c:	add	r7, pc, r7
   30340:	mov	r0, r7
   30344:	mov	r1, r8
   30348:	mov	r3, r4
   3034c:	bl	d640 <ierror@plt>
   30350:	ldr	r0, [r6]
   30354:	add	r0, r0, #1
   30358:	stm	sp, {r0, r4, r5}
   3035c:	mov	r0, #256	; 0x100
   30360:	mov	r1, #0
   30364:	mov	r2, r7
   30368:	mov	r3, r8
   3036c:	bl	d634 <sendto_realops_snomask@plt>
   30370:	sub	sp, fp, #24
   30374:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30378:	.word	0x0002a720
   3037c:	.word	0x0002a83c
   30380:	.word	0x00015db2

00030384 <strip_tabs>:
   30384:	push	{r4, sl, fp, lr}
   30388:	add	fp, sp, #8
   3038c:	cmp	r0, #0
   30390:	popeq	{r4, sl, fp, pc}
   30394:	mov	r4, r0
   30398:	ldr	r1, [pc, #48]	; 303d0 <strip_tabs+0x4c>
   3039c:	ldr	r1, [pc, r1]
   303a0:	mov	r2, #512	; 0x200
   303a4:	bl	e510 <rb_strlcpy@plt>
   303a8:	mov	r0, #32
   303ac:	b	303b8 <strip_tabs+0x34>
   303b0:	strb	r0, [r4]
   303b4:	add	r4, r4, #1
   303b8:	ldrb	r1, [r4]
   303bc:	cmp	r1, #9
   303c0:	beq	303b0 <strip_tabs+0x2c>
   303c4:	cmp	r1, #0
   303c8:	bne	303b4 <strip_tabs+0x30>
   303cc:	pop	{r4, sl, fp, pc}
   303d0:	.word	0x0002a560

000303d4 <conf_fgets>:
   303d4:	push	{r4, sl, fp, lr}
   303d8:	add	fp, sp, #8
   303dc:	mov	r4, r0
   303e0:	bl	d370 <fgets@plt>
   303e4:	cmp	r0, #0
   303e8:	beq	303f8 <conf_fgets+0x24>
   303ec:	mov	r0, r4
   303f0:	pop	{r4, sl, fp, lr}
   303f4:	b	dc94 <strlen@plt>
   303f8:	mov	r0, #0
   303fc:	pop	{r4, sl, fp, pc}

00030400 <conf_yy_fatal_error>:
   30400:	mov	r0, #0
   30404:	bx	lr

00030408 <find_address_conf_by_client>:
   30408:	push	{r4, r5, r6, sl, fp, lr}
   3040c:	add	fp, sp, #16
   30410:	sub	sp, sp, #24
   30414:	mov	r4, r0
   30418:	ldrb	r0, [r0, #64]	; 0x40
   3041c:	tst	r0, #128	; 0x80
   30420:	bne	30478 <find_address_conf_by_client+0x70>
   30424:	mov	r5, r1
   30428:	add	r6, sp, #13
   3042c:	ldr	r1, [pc, #116]	; 304a8 <find_address_conf_by_client+0xa0>
   30430:	add	r1, pc, r1
   30434:	mov	r0, r6
   30438:	mov	r2, #11
   3043c:	bl	e510 <rb_strlcpy@plt>
   30440:	mov	r0, r6
   30444:	mov	r1, r5
   30448:	mov	r2, #11
   3044c:	bl	e7d4 <rb_strlcat@plt>
   30450:	ldr	r0, [r4, #432]	; 0x1b0
   30454:	ldrh	r1, [r0, #140]!	; 0x8c
   30458:	ldr	r2, [r0, #140]	; 0x8c
   3045c:	stm	sp, {r0, r1, r2}
   30460:	movw	r0, #291	; 0x123
   30464:	add	r1, r4, r0
   30468:	add	r0, r4, #163	; 0xa3
   3046c:	add	r3, r4, #152	; 0x98
   30470:	mov	r2, r6
   30474:	b	3049c <find_address_conf_by_client+0x94>
   30478:	ldr	r0, [r4, #432]	; 0x1b0
   3047c:	ldrh	r1, [r0, #140]!	; 0x8c
   30480:	ldr	r2, [r0, #140]	; 0x8c
   30484:	stm	sp, {r0, r1, r2}
   30488:	movw	r0, #291	; 0x123
   3048c:	add	r1, r4, r0
   30490:	add	r0, r4, #163	; 0xa3
   30494:	add	r2, r4, #152	; 0x98
   30498:	mov	r3, r2
   3049c:	bl	d3a0 <find_address_conf@plt>
   304a0:	sub	sp, fp, #16
   304a4:	pop	{r4, r5, r6, sl, fp, pc}
   304a8:	.word	0x000158ca

000304ac <attach_iline>:
   304ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   304b0:	add	fp, sp, #28
   304b4:	sub	sp, sp, #20
   304b8:	mov	sl, r1
   304bc:	mov	r4, r0
   304c0:	ldr	r0, [r1, #4]
   304c4:	tst	r0, #128	; 0x80
   304c8:	bne	305e0 <attach_iline+0x134>
   304cc:	mov	r1, #0
   304d0:	str	r1, [sp, #16]
   304d4:	tst	r0, #4
   304d8:	ldreq	r1, [r4, #64]	; 0x40
   304dc:	andseq	r1, r1, #128	; 0x80
   304e0:	beq	305fc <attach_iline+0x150>
   304e4:	str	r4, [sp, #4]
   304e8:	add	r5, r4, #163	; 0xa3
   304ec:	mov	r0, r5
   304f0:	bl	e174 <find_hostname@plt>
   304f4:	cmp	r0, #0
   304f8:	beq	305e8 <attach_iline+0x13c>
   304fc:	mov	r7, r0
   30500:	ldr	r0, [sp, #4]
   30504:	add	r0, r0, #152	; 0x98
   30508:	str	r0, [sp, #8]
   3050c:	mov	r6, #0
   30510:	mov	r8, #0
   30514:	mov	r9, #0
   30518:	str	r5, [sp, #12]
   3051c:	b	30530 <attach_iline+0x84>
   30520:	ldr	r5, [sp, #12]
   30524:	ldr	r7, [r7, #8]
   30528:	cmp	r7, #0
   3052c:	beq	305e8 <attach_iline+0x13c>
   30530:	ldr	r4, [r7]
   30534:	add	r1, r4, #227	; 0xe3
   30538:	mov	r0, r5
   3053c:	bl	e750 <irccmp@plt>
   30540:	cmp	r0, #0
   30544:	bne	30524 <attach_iline+0x78>
   30548:	mov	r5, sl
   3054c:	ldr	r0, [r4, #64]	; 0x40
   30550:	ubfx	sl, r0, #13, #1
   30554:	add	r0, r4, #152	; 0x98
   30558:	ldr	r1, [sp, #16]
   3055c:	cmp	r1, #0
   30560:	beq	30570 <attach_iline+0xc4>
   30564:	ldrb	r0, [r0]
   30568:	sub	r0, r0, #126	; 0x7e
   3056c:	b	30578 <attach_iline+0xcc>
   30570:	ldr	r1, [sp, #8]
   30574:	bl	e750 <irccmp@plt>
   30578:	clz	r0, r0
   3057c:	lsr	r0, r0, #5
   30580:	add	r9, sl, r9
   30584:	mov	sl, r5
   30588:	ldr	r1, [r5, #52]	; 0x34
   3058c:	ldr	r2, [r1, #12]
   30590:	cmp	r2, #0
   30594:	beq	305a0 <attach_iline+0xf4>
   30598:	cmp	r9, r2
   3059c:	bge	30628 <attach_iline+0x17c>
   305a0:	add	r8, r8, #1
   305a4:	ldr	r2, [r1, #16]
   305a8:	cmp	r2, #0
   305ac:	beq	305b8 <attach_iline+0x10c>
   305b0:	cmp	r8, r2
   305b4:	bge	30634 <attach_iline+0x188>
   305b8:	add	r6, r6, r0
   305bc:	ldr	r0, [r1, #20]
   305c0:	cmp	r0, #0
   305c4:	beq	30520 <attach_iline+0x74>
   305c8:	cmp	r6, r0
   305cc:	ldr	r5, [sp, #12]
   305d0:	blt	30524 <attach_iline+0x78>
   305d4:	mvn	r0, #7
   305d8:	sub	sp, fp, #28
   305dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   305e0:	mov	r0, r4
   305e4:	b	305ec <attach_iline+0x140>
   305e8:	ldr	r0, [sp, #4]
   305ec:	mov	r1, sl
   305f0:	sub	sp, fp, #28
   305f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   305f8:	b	2ee48 <attach_conf>
   305fc:	mov	r1, #1
   30600:	str	r1, [sp, #16]
   30604:	tst	r0, #512	; 0x200
   30608:	beq	304e4 <attach_iline+0x38>
   3060c:	ldr	r0, [sl, #12]
   30610:	mov	r1, #64	; 0x40
   30614:	bl	dce8 <strchr@plt>
   30618:	clz	r0, r0
   3061c:	lsr	r0, r0, #5
   30620:	str	r0, [sp, #16]
   30624:	b	304e4 <attach_iline+0x38>
   30628:	mvn	r0, #5
   3062c:	sub	sp, fp, #28
   30630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30634:	mvn	r0, #6
   30638:	sub	sp, fp, #28
   3063c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00030640 <rb_dlinkFindDelete>:
   30640:	push	{fp, lr}
   30644:	mov	fp, sp
   30648:	cmp	r1, #0
   3064c:	beq	306c0 <rb_dlinkFindDelete+0x80>
   30650:	mov	ip, r0
   30654:	cmp	r0, #0
   30658:	beq	306e0 <rb_dlinkFindDelete+0xa0>
   3065c:	ldr	r3, [r1]
   30660:	mov	r0, r3
   30664:	cmp	r3, #0
   30668:	beq	306bc <rb_dlinkFindDelete+0x7c>
   3066c:	ldr	r2, [r0]
   30670:	ldr	r3, [r0, #8]
   30674:	cmp	r2, ip
   30678:	bne	30660 <rb_dlinkFindDelete+0x20>
   3067c:	add	r2, r3, #4
   30680:	cmp	r3, #0
   30684:	addeq	r2, r1, #4
   30688:	ldr	r3, [r0, #4]
   3068c:	str	r3, [r2]
   30690:	ldmib	r0, {r2, ip}
   30694:	cmp	r2, #0
   30698:	mov	r3, r1
   3069c:	addne	r3, r2, #8
   306a0:	str	ip, [r3]
   306a4:	mov	r2, #0
   306a8:	str	r2, [r0, #4]
   306ac:	str	r2, [r0, #8]
   306b0:	ldr	r2, [r1, #8]
   306b4:	sub	r2, r2, #1
   306b8:	str	r2, [r1, #8]
   306bc:	pop	{fp, pc}
   306c0:	ldr	r0, [pc, #56]	; 30700 <rb_dlinkFindDelete+0xc0>
   306c4:	add	r0, pc, r0
   306c8:	ldr	r1, [pc, #52]	; 30704 <rb_dlinkFindDelete+0xc4>
   306cc:	add	r1, pc, r1
   306d0:	ldr	r3, [pc, #48]	; 30708 <rb_dlinkFindDelete+0xc8>
   306d4:	add	r3, pc, r3
   306d8:	movw	r2, #258	; 0x102
   306dc:	bl	e7e0 <__assert_fail@plt>
   306e0:	ldr	r0, [pc, #36]	; 3070c <rb_dlinkFindDelete+0xcc>
   306e4:	add	r0, pc, r0
   306e8:	ldr	r1, [pc, #32]	; 30710 <rb_dlinkFindDelete+0xd0>
   306ec:	add	r1, pc, r1
   306f0:	ldr	r3, [pc, #28]	; 30714 <rb_dlinkFindDelete+0xd4>
   306f4:	add	r3, pc, r3
   306f8:	movw	r2, #259	; 0x103
   306fc:	bl	e7e0 <__assert_fail@plt>
   30700:	.word	0x00015ad1
   30704:	.word	0x0001024a
   30708:	.word	0x00010882
   3070c:	.word	0x0001028d
   30710:	.word	0x0001022a
   30714:	.word	0x00010862

00030718 <rb_dlinkMoveNode>:
   30718:	push	{fp, lr}
   3071c:	mov	fp, sp
   30720:	cmp	r0, #0
   30724:	beq	307bc <rb_dlinkMoveNode+0xa4>
   30728:	cmp	r1, #0
   3072c:	beq	307dc <rb_dlinkMoveNode+0xc4>
   30730:	cmp	r2, #0
   30734:	beq	307fc <rb_dlinkMoveNode+0xe4>
   30738:	ldmib	r0, {ip, lr}
   3073c:	add	r3, lr, #4
   30740:	cmp	lr, #0
   30744:	addeq	r3, r1, #4
   30748:	str	ip, [r3]
   3074c:	ldr	lr, [r0, #4]
   30750:	ldr	ip, [r0, #8]
   30754:	cmp	lr, #0
   30758:	mov	r3, r1
   3075c:	addne	r3, lr, #8
   30760:	str	ip, [r3]
   30764:	mov	r3, #0
   30768:	str	r3, [r0, #4]
   3076c:	ldr	r3, [r2]
   30770:	str	r3, [r0, #8]
   30774:	ldr	r3, [r2]
   30778:	cmp	r3, #0
   3077c:	beq	3078c <rb_dlinkMoveNode+0x74>
   30780:	add	ip, r3, #4
   30784:	str	r0, [ip]
   30788:	b	3079c <rb_dlinkMoveNode+0x84>
   3078c:	mov	ip, r2
   30790:	ldr	r3, [ip, #4]!
   30794:	cmp	r3, #0
   30798:	streq	r0, [ip]
   3079c:	str	r0, [r2]
   307a0:	ldr	r0, [r1, #8]
   307a4:	sub	r0, r0, #1
   307a8:	str	r0, [r1, #8]
   307ac:	ldr	r0, [r2, #8]
   307b0:	add	r0, r0, #1
   307b4:	str	r0, [r2, #8]
   307b8:	pop	{fp, pc}
   307bc:	ldr	r0, [pc, #88]	; 3081c <rb_dlinkMoveNode+0x104>
   307c0:	add	r0, pc, r0
   307c4:	ldr	r1, [pc, #84]	; 30820 <rb_dlinkMoveNode+0x108>
   307c8:	add	r1, pc, r1
   307cc:	ldr	r3, [pc, #80]	; 30824 <rb_dlinkMoveNode+0x10c>
   307d0:	add	r3, pc, r3
   307d4:	mov	r2, #114	; 0x72
   307d8:	bl	e7e0 <__assert_fail@plt>
   307dc:	ldr	r0, [pc, #68]	; 30828 <rb_dlinkMoveNode+0x110>
   307e0:	add	r0, pc, r0
   307e4:	ldr	r1, [pc, #64]	; 3082c <rb_dlinkMoveNode+0x114>
   307e8:	add	r1, pc, r1
   307ec:	ldr	r3, [pc, #60]	; 30830 <rb_dlinkMoveNode+0x118>
   307f0:	add	r3, pc, r3
   307f4:	mov	r2, #115	; 0x73
   307f8:	bl	e7e0 <__assert_fail@plt>
   307fc:	ldr	r0, [pc, #48]	; 30834 <rb_dlinkMoveNode+0x11c>
   30800:	add	r0, pc, r0
   30804:	ldr	r1, [pc, #44]	; 30838 <rb_dlinkMoveNode+0x120>
   30808:	add	r1, pc, r1
   3080c:	ldr	r3, [pc, #40]	; 3083c <rb_dlinkMoveNode+0x124>
   30810:	add	r3, pc, r3
   30814:	mov	r2, #116	; 0x74
   30818:	bl	e7e0 <__assert_fail@plt>
   3081c:	.word	0x0001014c
   30820:	.word	0x0001014e
   30824:	.word	0x0001381f
   30828:	.word	0x000159b2
   3082c:	.word	0x0001012e
   30830:	.word	0x000137ff
   30834:	.word	0x000159a2
   30838:	.word	0x0001010e
   3083c:	.word	0x000137df

00030840 <set_default_conf>:
   30840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30844:	add	fp, sp, #28
   30848:	sub	sp, sp, #4
   3084c:	ldr	r0, [pc, #640]	; 30ad4 <set_default_conf+0x294>
   30850:	ldr	r0, [pc, r0]
   30854:	mov	r4, #0
   30858:	str	r4, [r0, #8]
   3085c:	str	r4, [r0, #12]
   30860:	add	r0, r0, #20
   30864:	mov	r8, #256	; 0x100
   30868:	mov	r1, #0
   3086c:	mov	r2, #256	; 0x100
   30870:	bl	df28 <memset@plt>
   30874:	ldr	r0, [pc, #604]	; 30ad8 <set_default_conf+0x298>
   30878:	ldr	r0, [pc, r0]
   3087c:	str	r4, [r0]
   30880:	str	r4, [r0, #4]
   30884:	str	r4, [r0, #8]
   30888:	ldr	r0, [pc, #588]	; 30adc <set_default_conf+0x29c>
   3088c:	ldr	r0, [pc, r0]
   30890:	mov	r1, #8
   30894:	str	r1, [r0, #312]	; 0x138
   30898:	str	r4, [r0, #32]
   3089c:	str	r4, [r0, #8]
   308a0:	str	r4, [r0, #12]
   308a4:	str	r4, [r0, #16]
   308a8:	str	r4, [r0, #88]	; 0x58
   308ac:	mov	r1, #1
   308b0:	str	r1, [r0, #84]	; 0x54
   308b4:	mov	r9, #5
   308b8:	mov	r6, #900	; 0x384
   308bc:	mov	r2, #20
   308c0:	str	r2, [r0, #104]	; 0x68
   308c4:	str	r4, [r0, #76]	; 0x4c
   308c8:	str	r1, [r0, #300]	; 0x12c
   308cc:	mov	lr, #60	; 0x3c
   308d0:	str	lr, [r0, #100]	; 0x64
   308d4:	str	r2, [r0, #96]	; 0x60
   308d8:	mov	r7, #30
   308dc:	str	r4, [r0, #92]	; 0x5c
   308e0:	mov	r5, #600	; 0x258
   308e4:	str	r1, [r0, #212]	; 0xd4
   308e8:	str	r9, [r0, #108]	; 0x6c
   308ec:	str	r5, [r0, #112]	; 0x70
   308f0:	str	r7, [r0, #116]	; 0x74
   308f4:	str	r1, [r0, #120]	; 0x78
   308f8:	str	r1, [r0, #124]	; 0x7c
   308fc:	str	r1, [r0, #132]	; 0x84
   30900:	str	r6, [r0, #136]	; 0x88
   30904:	str	r1, [r0, #140]	; 0x8c
   30908:	str	r4, [r0, #144]	; 0x90
   3090c:	str	r4, [r0, #148]	; 0x94
   30910:	str	r4, [r0, #152]	; 0x98
   30914:	str	r4, [r0, #156]	; 0x9c
   30918:	str	r4, [r0, #160]	; 0xa0
   3091c:	mov	sl, #10
   30920:	str	lr, [r0, #232]	; 0xe8
   30924:	vmov.i32	q8, #0	; 0x00000000
   30928:	add	r5, r0, #36	; 0x24
   3092c:	vst1.32	{d16-d17}, [r5]
   30930:	add	r5, r0, #52	; 0x34
   30934:	vst1.32	{d16-d17}, [r5]
   30938:	str	r7, [r0, #328]	; 0x148
   3093c:	str	r7, [r0, #332]	; 0x14c
   30940:	str	r4, [r0, #196]	; 0xc4
   30944:	str	r1, [r0, #164]	; 0xa4
   30948:	str	r1, [r0, #168]	; 0xa8
   3094c:	str	r4, [r0, #172]	; 0xac
   30950:	add	r2, r0, #176	; 0xb0
   30954:	stm	r2, {r1, r4, sl}
   30958:	str	r1, [r0, #188]	; 0xbc
   3095c:	str	r4, [r0, #192]	; 0xc0
   30960:	str	r4, [r0, #68]	; 0x44
   30964:	str	r1, [r0, #208]	; 0xd0
   30968:	str	r1, [r0, #204]	; 0xcc
   3096c:	str	r4, [r0, #80]	; 0x50
   30970:	mov	r7, #4
   30974:	str	r7, [r0, #228]	; 0xe4
   30978:	str	r1, [r0, #260]	; 0x104
   3097c:	str	r4, [r0, #276]	; 0x114
   30980:	str	r1, [r0, #304]	; 0x130
   30984:	str	r1, [r0, #308]	; 0x134
   30988:	str	r1, [r0, #316]	; 0x13c
   3098c:	str	r4, [r0, #320]	; 0x140
   30990:	str	r1, [r0, #324]	; 0x144
   30994:	str	r4, [r0, #336]	; 0x150
   30998:	mov	r5, #39	; 0x27
   3099c:	str	r5, [r0, #220]	; 0xdc
   309a0:	strb	r7, [r0, #72]	; 0x48
   309a4:	str	r8, [r0, #224]	; 0xe0
   309a8:	str	r1, [r0, #216]	; 0xd8
   309ac:	ldr	r5, [pc, #300]	; 30ae0 <set_default_conf+0x2a0>
   309b0:	ldr	r5, [pc, r5]
   309b4:	mov	r8, #15
   309b8:	mov	r6, #25
   309bc:	mov	r3, #500	; 0x1f4
   309c0:	movw	ip, #15000	; 0x3a98
   309c4:	mov	r2, #300	; 0x12c
   309c8:	str	r1, [r5]
   309cc:	str	r1, [r5, #4]
   309d0:	str	r1, [r5, #8]
   309d4:	str	r1, [r5, #12]
   309d8:	str	r2, [r5, #16]
   309dc:	str	lr, [r5, #20]
   309e0:	str	r6, [r5, #24]
   309e4:	add	r6, r5, #28
   309e8:	stm	r6, {r3, r8, lr}
   309ec:	add	r3, r5, #40	; 0x28
   309f0:	stm	r3, {r1, r4, sl, ip}
   309f4:	str	r4, [r5, #56]	; 0x38
   309f8:	str	r4, [r5, #60]	; 0x3c
   309fc:	mov	r3, #3
   30a00:	str	r4, [r5, #92]	; 0x5c
   30a04:	mov	r6, #40	; 0x28
   30a08:	str	r4, [r5, #64]	; 0x40
   30a0c:	str	r1, [r5, #68]	; 0x44
   30a10:	add	ip, r5, #72	; 0x48
   30a14:	stm	ip, {r1, r4, r6}
   30a18:	str	r3, [r5, #84]	; 0x54
   30a1c:	ldr	r6, [pc, #192]	; 30ae4 <set_default_conf+0x2a4>
   30a20:	ldr	r6, [pc, r6]
   30a24:	str	r4, [r6]
   30a28:	stmib	r6, {r2, r4}
   30a2c:	str	r4, [r6, #12]
   30a30:	str	r2, [r0, #280]	; 0x118
   30a34:	mov	r2, #120	; 0x78
   30a38:	str	r2, [r0, #288]	; 0x120
   30a3c:	str	r9, [r0, #284]	; 0x11c
   30a40:	str	r4, [r0, #256]	; 0x100
   30a44:	str	r7, [r0, #236]	; 0xec
   30a48:	str	r3, [r0, #240]	; 0xf0
   30a4c:	mov	r2, #8
   30a50:	str	r2, [r0, #244]	; 0xf4
   30a54:	str	r9, [r0, #248]	; 0xf8
   30a58:	str	r7, [r0, #292]	; 0x124
   30a5c:	str	lr, [r0, #296]	; 0x128
   30a60:	mov	r2, #2
   30a64:	movw	r3, #65535	; 0xffff
   30a68:	ldr	r7, [pc, #120]	; 30ae8 <set_default_conf+0x2a8>
   30a6c:	ldr	r7, [pc, r7]
   30a70:	str	r3, [r7, #276]	; 0x114
   30a74:	str	r4, [r0, #372]	; 0x174
   30a78:	mov	r3, #32
   30a7c:	mov	r7, #20
   30a80:	str	r7, [r0, #340]	; 0x154
   30a84:	str	r9, [r0, #344]	; 0x158
   30a88:	str	r9, [r0, #348]	; 0x15c
   30a8c:	add	ip, r0, #352	; 0x160
   30a90:	stm	ip, {r1, r2, r3, r4}
   30a94:	str	r4, [r0, #368]	; 0x170
   30a98:	ldr	r4, [pc, #76]	; 30aec <set_default_conf+0x2ac>
   30a9c:	ldr	r4, [pc, r4]
   30aa0:	ldr	r0, [r4]
   30aa4:	cmp	r0, #0
   30aa8:	beq	30ab4 <set_default_conf+0x274>
   30aac:	sub	sp, fp, #28
   30ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ab4:	ldr	r1, [pc, #52]	; 30af0 <set_default_conf+0x2b0>
   30ab8:	ldr	r1, [pc, r1]
   30abc:	ldr	r0, [pc, #48]	; 30af4 <set_default_conf+0x2b4>
   30ac0:	add	r0, pc, r0
   30ac4:	bl	dfb8 <rb_dictionary_create@plt>
   30ac8:	str	r0, [r4]
   30acc:	sub	sp, fp, #28
   30ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ad4:	.word	0x0002a100
   30ad8:	.word	0x0002a2cc
   30adc:	.word	0x0002a2f0
   30ae0:	.word	0x0002a168
   30ae4:	.word	0x00029f94
   30ae8:	.word	0x00029ee4
   30aec:	.word	0x00029ef0
   30af0:	.word	0x00029df8
   30af4:	.word	0x000130ce

00030af8 <validate_conf>:
   30af8:	push	{r4, r5, r6, sl, fp, lr}
   30afc:	add	fp, sp, #16
   30b00:	ldr	r4, [pc, #600]	; 30d60 <validate_conf+0x268>
   30b04:	ldr	r4, [pc, r4]
   30b08:	ldr	r0, [r4, #248]	; 0xf8
   30b0c:	cmp	r0, #0
   30b10:	movle	r0, #5
   30b14:	strle	r0, [r4, #248]	; 0xf8
   30b18:	ldr	r0, [r4, #116]	; 0x74
   30b1c:	cmp	r0, #9
   30b20:	movle	r0, #30
   30b24:	strle	r0, [r4, #116]	; 0x74
   30b28:	ldr	r0, [r4, #112]	; 0x70
   30b2c:	cmp	r0, #9
   30b30:	movle	r0, #600	; 0x258
   30b34:	strle	r0, [r4, #112]	; 0x70
   30b38:	ldr	r5, [pc, #548]	; 30d64 <validate_conf+0x26c>
   30b3c:	ldr	r5, [pc, r5]
   30b40:	ldr	r0, [r5, #12]
   30b44:	cmp	r0, #0
   30b48:	bne	30b5c <validate_conf+0x64>
   30b4c:	ldr	r0, [pc, #532]	; 30d68 <validate_conf+0x270>
   30b50:	add	r0, pc, r0
   30b54:	bl	30250 <rb_strdup>
   30b58:	str	r0, [r5, #12]
   30b5c:	ldr	r0, [r5, #300]	; 0x12c
   30b60:	cmp	r0, #0
   30b64:	movle	r0, #1
   30b68:	strle	r0, [r5, #300]	; 0x12c
   30b6c:	mov	r6, #1
   30b70:	str	r6, [r5, #304]	; 0x130
   30b74:	ldr	r1, [r5, #280]	; 0x118
   30b78:	add	r3, r5, #288	; 0x120
   30b7c:	ldm	r3, {r0, r2, r3}
   30b80:	bl	d238 <rb_setup_ssl_server@plt>
   30b84:	cmp	r0, #0
   30b88:	beq	30ba0 <validate_conf+0xa8>
   30b8c:	ldr	r0, [pc, #480]	; 30d74 <validate_conf+0x27c>
   30b90:	ldr	r0, [pc, r0]
   30b94:	strb	r6, [r0]
   30b98:	bl	d598 <ssld_update_config@plt>
   30b9c:	b	30bc0 <validate_conf+0xc8>
   30ba0:	mov	r6, #0
   30ba4:	ldr	r1, [pc, #448]	; 30d6c <validate_conf+0x274>
   30ba8:	add	r1, pc, r1
   30bac:	mov	r0, #0
   30bb0:	bl	e0b4 <ilog@plt>
   30bb4:	ldr	r0, [pc, #436]	; 30d70 <validate_conf+0x278>
   30bb8:	ldr	r0, [pc, r0]
   30bbc:	strb	r6, [r0]
   30bc0:	ldr	r6, [r5, #300]	; 0x12c
   30bc4:	bl	deb0 <get_ssld_count@plt>
   30bc8:	cmp	r6, r0
   30bcc:	ble	30be0 <validate_conf+0xe8>
   30bd0:	ldr	r6, [r5, #300]	; 0x12c
   30bd4:	bl	deb0 <get_ssld_count@plt>
   30bd8:	sub	r0, r6, r0
   30bdc:	bl	e690 <start_ssldaemon@plt>
   30be0:	ldr	r6, [r5, #304]	; 0x130
   30be4:	bl	e4b0 <get_wsockd_count@plt>
   30be8:	cmp	r6, r0
   30bec:	ble	30c00 <validate_conf+0x108>
   30bf0:	ldr	r5, [r5, #304]	; 0x130
   30bf4:	bl	e4b0 <get_wsockd_count@plt>
   30bf8:	sub	r0, r5, r0
   30bfc:	bl	e324 <start_wsockd@plt>
   30c00:	ldr	r0, [r4, #8]
   30c04:	cmp	r0, #0
   30c08:	bne	30c1c <validate_conf+0x124>
   30c0c:	ldr	r0, [pc, #356]	; 30d78 <validate_conf+0x280>
   30c10:	add	r0, pc, r0
   30c14:	bl	30250 <rb_strdup>
   30c18:	str	r0, [r4, #8]
   30c1c:	ldr	r0, [r4, #12]
   30c20:	cmp	r0, #0
   30c24:	bne	30c38 <validate_conf+0x140>
   30c28:	ldr	r0, [pc, #332]	; 30d7c <validate_conf+0x284>
   30c2c:	add	r0, pc, r0
   30c30:	bl	30250 <rb_strdup>
   30c34:	str	r0, [r4, #12]
   30c38:	ldr	r0, [r4, #16]
   30c3c:	cmp	r0, #0
   30c40:	bne	30c54 <validate_conf+0x15c>
   30c44:	ldr	r0, [pc, #308]	; 30d80 <validate_conf+0x288>
   30c48:	add	r0, pc, r0
   30c4c:	bl	30250 <rb_strdup>
   30c50:	str	r0, [r4, #16]
   30c54:	ldr	r0, [r4, #32]
   30c58:	cmp	r0, #0
   30c5c:	bne	30c70 <validate_conf+0x178>
   30c60:	ldr	r0, [pc, #284]	; 30d84 <validate_conf+0x28c>
   30c64:	add	r0, pc, r0
   30c68:	bl	30250 <rb_strdup>
   30c6c:	str	r0, [r4, #32]
   30c70:	ldr	r0, [r4, #344]	; 0x158
   30c74:	cmp	r0, #4
   30c78:	movle	r0, #5
   30c7c:	strle	r0, [r4, #344]	; 0x158
   30c80:	ldr	r0, [r4, #348]	; 0x15c
   30c84:	cmp	r0, #4
   30c88:	movle	r0, #5
   30c8c:	strle	r0, [r4, #348]	; 0x15c
   30c90:	ldr	r1, [r4, #352]	; 0x160
   30c94:	ldr	r0, [r4, #356]	; 0x164
   30c98:	cmp	r1, r0, lsl #1
   30c9c:	lslgt	r0, r0, #1
   30ca0:	strgt	r0, [r4, #352]	; 0x160
   30ca4:	ldr	r0, [r4, #340]	; 0x154
   30ca8:	sub	r0, r0, #10
   30cac:	movw	r1, #1991	; 0x7c7
   30cb0:	cmp	r0, r1
   30cb4:	movcs	r0, #2000	; 0x7d0
   30cb8:	strcs	r0, [r4, #340]	; 0x154
   30cbc:	ldr	r0, [pc, #196]	; 30d88 <validate_conf+0x290>
   30cc0:	ldr	r0, [pc, r0]
   30cc4:	ldr	r0, [r0]
   30cc8:	cmp	r0, #0
   30ccc:	beq	30cfc <validate_conf+0x204>
   30cd0:	ldr	r0, [pc, #180]	; 30d8c <validate_conf+0x294>
   30cd4:	ldr	r0, [pc, r0]
   30cd8:	ldr	r0, [r0]
   30cdc:	cmp	r0, #0
   30ce0:	beq	30cfc <validate_conf+0x204>
   30ce4:	ldr	r0, [pc, #164]	; 30d90 <validate_conf+0x298>
   30ce8:	ldr	r0, [pc, r0]
   30cec:	ldr	r1, [r0, #40]	; 0x28
   30cf0:	ldr	r0, [r0, #44]	; 0x2c
   30cf4:	orrs	r0, r0, r1
   30cf8:	bne	30d2c <validate_conf+0x234>
   30cfc:	ldr	r4, [pc, #144]	; 30d94 <validate_conf+0x29c>
   30d00:	ldr	r4, [pc, r4]
   30d04:	ldr	r0, [r4]
   30d08:	bl	d28c <rb_event_delete@plt>
   30d0c:	ldr	r0, [pc, #132]	; 30d98 <validate_conf+0x2a0>
   30d10:	ldr	r0, [pc, r0]
   30d14:	mov	r1, #0
   30d18:	str	r1, [r0]
   30d1c:	str	r1, [r4]
   30d20:	ldr	r0, [pc, #116]	; 30d9c <validate_conf+0x2a4>
   30d24:	ldr	r0, [pc, r0]
   30d28:	str	r1, [r0]
   30d2c:	ldr	r0, [pc, #108]	; 30da0 <validate_conf+0x2a8>
   30d30:	ldr	r0, [pc, r0]
   30d34:	ldr	r1, [r0, #152]	; 0x98
   30d38:	orr	r2, r1, #512	; 0x200
   30d3c:	str	r2, [r0, #152]	; 0x98
   30d40:	ldr	r2, [pc, #92]	; 30da4 <validate_conf+0x2ac>
   30d44:	ldr	r2, [pc, r2]
   30d48:	ldr	r2, [r2, #76]	; 0x4c
   30d4c:	cmp	r2, #0
   30d50:	bicne	r1, r1, #512	; 0x200
   30d54:	strne	r1, [r0, #152]	; 0x98
   30d58:	pop	{r4, r5, r6, sl, fp, lr}
   30d5c:	b	df64 <chantypes_update@plt>
   30d60:	.word	0x0002a078
   30d64:	.word	0x00029e14
   30d68:	.word	0x00015662
   30d6c:	.word	0x00011571
   30d70:	.word	0x00029da8
   30d74:	.word	0x00029dd0
   30d78:	.word	0x000155ad
   30d7c:	.word	0x000155a4
   30d80:	.word	0x000155a2
   30d84:	.word	0x0001559b
   30d88:	.word	0x00029d50
   30d8c:	.word	0x00029d2c
   30d90:	.word	0x00029e30
   30d94:	.word	0x00029b98
   30d98:	.word	0x00029e4c
   30d9c:	.word	0x00029cd0
   30da0:	.word	0x00029cc8
   30da4:	.word	0x00029dd4

00030da8 <free_alias_cb>:
   30da8:	push	{r4, sl, fp, lr}
   30dac:	add	fp, sp, #8
   30db0:	ldr	r4, [r0, #16]
   30db4:	ldr	r0, [r4]
   30db8:	bl	2e4e8 <rb_free>
   30dbc:	ldr	r0, [r4, #4]
   30dc0:	bl	2e4e8 <rb_free>
   30dc4:	mov	r0, r4
   30dc8:	pop	{r4, sl, fp, lr}
   30dcc:	b	2e4e8 <rb_free>

00030dd0 <init_s_newconf>:
   30dd0:	push	{fp, lr}
   30dd4:	mov	fp, sp
   30dd8:	mov	r0, #128	; 0x80
   30ddc:	bl	d418 <rb_new_patricia@plt>
   30de0:	ldr	r1, [pc, #120]	; 30e60 <init_s_newconf+0x90>
   30de4:	ldr	r1, [pc, r1]
   30de8:	str	r0, [r1]
   30dec:	ldr	r2, [pc, #112]	; 30e64 <init_s_newconf+0x94>
   30df0:	add	r2, pc, r2
   30df4:	mov	r0, #52	; 0x34
   30df8:	mov	r1, #512	; 0x200
   30dfc:	bl	ded4 <rb_bh_create@plt>
   30e00:	ldr	r1, [pc, #96]	; 30e68 <init_s_newconf+0x98>
   30e04:	add	r1, pc, r1
   30e08:	str	r0, [r1]
   30e0c:	ldr	r0, [pc, #88]	; 30e6c <init_s_newconf+0x9c>
   30e10:	add	r0, pc, r0
   30e14:	ldr	r1, [pc, #84]	; 30e70 <init_s_newconf+0xa0>
   30e18:	add	r1, pc, r1
   30e1c:	mov	r2, #0
   30e20:	mov	r3, #30
   30e24:	bl	d220 <rb_event_addish@plt>
   30e28:	ldr	r1, [pc, #68]	; 30e74 <init_s_newconf+0xa4>
   30e2c:	ldr	r1, [pc, r1]
   30e30:	str	r0, [r1]
   30e34:	ldr	r0, [pc, #60]	; 30e78 <init_s_newconf+0xa8>
   30e38:	add	r0, pc, r0
   30e3c:	ldr	r1, [pc, #56]	; 30e7c <init_s_newconf+0xac>
   30e40:	add	r1, pc, r1
   30e44:	mov	r2, #0
   30e48:	mov	r3, #60	; 0x3c
   30e4c:	bl	d220 <rb_event_addish@plt>
   30e50:	ldr	r1, [pc, #40]	; 30e80 <init_s_newconf+0xb0>
   30e54:	ldr	r1, [pc, r1]
   30e58:	str	r0, [r1]
   30e5c:	pop	{fp, pc}
   30e60:	.word	0x00029bc8
   30e64:	.word	0x00015437
   30e68:	.word	0x0003a144
   30e6c:	.word	0x0001541f
   30e70:	.word	0x00000064
   30e74:	.word	0x00029af0
   30e78:	.word	0x00015409
   30e7c:	.word	0x00000094
   30e80:	.word	0x00029a9c

00030e84 <expire_nd_entries>:
   30e84:	push	{r4, r5, r6, sl, fp, lr}
   30e88:	add	fp, sp, #16
   30e8c:	ldr	r0, [pc, #68]	; 30ed8 <expire_nd_entries+0x54>
   30e90:	ldr	r0, [pc, r0]
   30e94:	ldr	r0, [r0]
   30e98:	cmp	r0, #0
   30e9c:	beq	30ed4 <expire_nd_entries+0x50>
   30ea0:	ldr	r4, [r0]
   30ea4:	ldr	r5, [r0, #8]
   30ea8:	ldr	r6, [r4, #36]	; 0x24
   30eac:	bl	d07c <rb_current_time@plt>
   30eb0:	cmp	r6, r0
   30eb4:	bgt	30ed4 <expire_nd_entries+0x50>
   30eb8:	mov	r0, r4
   30ebc:	bl	e12c <free_nd_entry@plt>
   30ec0:	cmp	r5, #0
   30ec4:	beq	30ed4 <expire_nd_entries+0x50>
   30ec8:	ldr	r4, [r5]
   30ecc:	ldr	r5, [r5, #8]
   30ed0:	b	30ea8 <expire_nd_entries+0x24>
   30ed4:	pop	{r4, r5, r6, sl, fp, pc}
   30ed8:	.word	0x00029b54

00030edc <expire_temp_rxlines>:
   30edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ee0:	add	fp, sp, #28
   30ee4:	sub	sp, sp, #44	; 0x2c
   30ee8:	ldr	r7, [pc, #536]	; 31108 <expire_temp_rxlines+0x22c>
   30eec:	ldr	r7, [pc, r7]
   30ef0:	ldr	r0, [r7]
   30ef4:	add	r4, sp, #4
   30ef8:	mov	r1, r4
   30efc:	bl	e318 <rb_radixtree_foreach_start@plt>
   30f00:	ldr	r0, [r7]
   30f04:	mov	r1, r4
   30f08:	bl	e06c <rb_radixtree_foreach_cur@plt>
   30f0c:	cmp	r0, #0
   30f10:	beq	30fb0 <expire_temp_rxlines+0xd4>
   30f14:	mov	r6, r0
   30f18:	ldr	r9, [pc, #492]	; 3110c <expire_temp_rxlines+0x230>
   30f1c:	ldr	r9, [pc, r9]
   30f20:	ldr	r8, [pc, #488]	; 31110 <expire_temp_rxlines+0x234>
   30f24:	add	r8, pc, r8
   30f28:	add	r5, sp, #4
   30f2c:	b	30f68 <expire_temp_rxlines+0x8c>
   30f30:	ldr	r1, [r6, #16]
   30f34:	ldr	r0, [r7]
   30f38:	bl	e0c0 <rb_radixtree_delete@plt>
   30f3c:	mov	r0, r6
   30f40:	bl	dc34 <free_conf@plt>
   30f44:	ldr	r0, [r7]
   30f48:	mov	r1, r5
   30f4c:	bl	d574 <rb_radixtree_foreach_next@plt>
   30f50:	ldr	r0, [r7]
   30f54:	mov	r1, r5
   30f58:	bl	e06c <rb_radixtree_foreach_cur@plt>
   30f5c:	mov	r6, r0
   30f60:	cmp	r0, #0
   30f64:	beq	30fb0 <expire_temp_rxlines+0xd4>
   30f68:	ldr	r0, [r6, #44]	; 0x2c
   30f6c:	cmp	r0, #0
   30f70:	bne	30f44 <expire_temp_rxlines+0x68>
   30f74:	ldr	r4, [r6, #36]	; 0x24
   30f78:	cmp	r4, #0
   30f7c:	beq	30f44 <expire_temp_rxlines+0x68>
   30f80:	bl	d07c <rb_current_time@plt>
   30f84:	cmp	r4, r0
   30f88:	bgt	30f44 <expire_temp_rxlines+0x68>
   30f8c:	ldr	r0, [r9, #256]	; 0x100
   30f90:	cmp	r0, #0
   30f94:	beq	30f30 <expire_temp_rxlines+0x54>
   30f98:	ldr	r3, [r6, #16]
   30f9c:	mov	r0, #256	; 0x100
   30fa0:	mov	r1, #0
   30fa4:	mov	r2, r8
   30fa8:	bl	d634 <sendto_realops_snomask@plt>
   30fac:	b	30f30 <expire_temp_rxlines+0x54>
   30fb0:	ldr	r0, [pc, #348]	; 31114 <expire_temp_rxlines+0x238>
   30fb4:	ldr	r0, [pc, r0]
   30fb8:	ldr	r5, [r0]
   30fbc:	cmp	r5, #0
   30fc0:	beq	31058 <expire_temp_rxlines+0x17c>
   30fc4:	ldr	r9, [pc, #332]	; 31118 <expire_temp_rxlines+0x23c>
   30fc8:	ldr	r9, [pc, r9]
   30fcc:	ldr	sl, [pc, #328]	; 3111c <expire_temp_rxlines+0x240>
   30fd0:	ldr	sl, [pc, sl]
   30fd4:	ldr	r8, [pc, #324]	; 31120 <expire_temp_rxlines+0x244>
   30fd8:	add	r8, pc, r8
   30fdc:	b	31004 <expire_temp_rxlines+0x128>
   30fe0:	mov	r0, r7
   30fe4:	bl	dc34 <free_conf@plt>
   30fe8:	mov	r0, r6
   30fec:	mov	r1, sl
   30ff0:	bl	312d4 <rb_dlinkDelete>
   30ff4:	mov	r0, r6
   30ff8:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   30ffc:	cmp	r5, #0
   31000:	beq	31058 <expire_temp_rxlines+0x17c>
   31004:	mov	r6, r5
   31008:	ldr	r7, [r5]
   3100c:	ldr	r5, [r5, #8]
   31010:	ldr	r0, [r7, #44]	; 0x2c
   31014:	cmp	r0, #0
   31018:	bne	30ffc <expire_temp_rxlines+0x120>
   3101c:	ldr	r4, [r7, #36]	; 0x24
   31020:	cmp	r4, #0
   31024:	beq	30ffc <expire_temp_rxlines+0x120>
   31028:	bl	d07c <rb_current_time@plt>
   3102c:	cmp	r4, r0
   31030:	bgt	30ffc <expire_temp_rxlines+0x120>
   31034:	ldr	r0, [r9, #256]	; 0x100
   31038:	cmp	r0, #0
   3103c:	beq	30fe0 <expire_temp_rxlines+0x104>
   31040:	ldr	r3, [r7, #16]
   31044:	mov	r0, #256	; 0x100
   31048:	mov	r1, #0
   3104c:	mov	r2, r8
   31050:	bl	d634 <sendto_realops_snomask@plt>
   31054:	b	30fe0 <expire_temp_rxlines+0x104>
   31058:	ldr	r0, [pc, #196]	; 31124 <expire_temp_rxlines+0x248>
   3105c:	ldr	r0, [pc, r0]
   31060:	ldr	r5, [r0]
   31064:	cmp	r5, #0
   31068:	beq	31100 <expire_temp_rxlines+0x224>
   3106c:	ldr	r9, [pc, #180]	; 31128 <expire_temp_rxlines+0x24c>
   31070:	ldr	r9, [pc, r9]
   31074:	ldr	sl, [pc, #176]	; 3112c <expire_temp_rxlines+0x250>
   31078:	ldr	sl, [pc, sl]
   3107c:	ldr	r8, [pc, #172]	; 31130 <expire_temp_rxlines+0x254>
   31080:	add	r8, pc, r8
   31084:	b	310ac <expire_temp_rxlines+0x1d0>
   31088:	mov	r0, r7
   3108c:	bl	dc34 <free_conf@plt>
   31090:	mov	r0, r6
   31094:	mov	r1, sl
   31098:	bl	312d4 <rb_dlinkDelete>
   3109c:	mov	r0, r6
   310a0:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   310a4:	cmp	r5, #0
   310a8:	beq	31100 <expire_temp_rxlines+0x224>
   310ac:	mov	r6, r5
   310b0:	ldr	r7, [r5]
   310b4:	ldr	r5, [r5, #8]
   310b8:	ldr	r0, [r7, #44]	; 0x2c
   310bc:	cmp	r0, #0
   310c0:	bne	310a4 <expire_temp_rxlines+0x1c8>
   310c4:	ldr	r4, [r7, #36]	; 0x24
   310c8:	cmp	r4, #0
   310cc:	beq	310a4 <expire_temp_rxlines+0x1c8>
   310d0:	bl	d07c <rb_current_time@plt>
   310d4:	cmp	r4, r0
   310d8:	bgt	310a4 <expire_temp_rxlines+0x1c8>
   310dc:	ldr	r0, [r9, #256]	; 0x100
   310e0:	cmp	r0, #0
   310e4:	beq	31088 <expire_temp_rxlines+0x1ac>
   310e8:	ldr	r3, [r7, #16]
   310ec:	mov	r0, #256	; 0x100
   310f0:	mov	r1, #0
   310f4:	mov	r2, r8
   310f8:	bl	d634 <sendto_realops_snomask@plt>
   310fc:	b	31088 <expire_temp_rxlines+0x1ac>
   31100:	sub	sp, fp, #28
   31104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31108:	.word	0x00029abc
   3110c:	.word	0x00029c60
   31110:	.word	0x000153c5
   31114:	.word	0x000298f8
   31118:	.word	0x00029bb4
   3111c:	.word	0x000298dc
   31120:	.word	0x00015311
   31124:	.word	0x00029868
   31128:	.word	0x00029b0c
   3112c:	.word	0x0002984c
   31130:	.word	0x00015289

00031134 <clear_s_newconf>:
   31134:	push	{r4, r5, r6, sl, fp, lr}
   31138:	add	fp, sp, #16
   3113c:	ldr	r0, [pc, #360]	; 312ac <clear_s_newconf+0x178>
   31140:	ldr	r0, [pc, r0]
   31144:	ldr	r5, [r0]
   31148:	cmp	r5, #0
   3114c:	beq	3117c <clear_s_newconf+0x48>
   31150:	ldr	r4, [pc, #344]	; 312b0 <clear_s_newconf+0x17c>
   31154:	ldr	r4, [pc, r4]
   31158:	ldr	r6, [r5, #8]
   3115c:	mov	r0, r5
   31160:	mov	r1, r4
   31164:	bl	312d4 <rb_dlinkDelete>
   31168:	ldr	r0, [r5]
   3116c:	bl	e3e4 <free_remote_conf@plt>
   31170:	cmp	r6, #0
   31174:	mov	r5, r6
   31178:	bne	31158 <clear_s_newconf+0x24>
   3117c:	ldr	r0, [pc, #304]	; 312b4 <clear_s_newconf+0x180>
   31180:	ldr	r0, [pc, r0]
   31184:	ldr	r5, [r0]
   31188:	cmp	r5, #0
   3118c:	beq	311bc <clear_s_newconf+0x88>
   31190:	ldr	r4, [pc, #288]	; 312b8 <clear_s_newconf+0x184>
   31194:	ldr	r4, [pc, r4]
   31198:	ldr	r6, [r5, #8]
   3119c:	mov	r0, r5
   311a0:	mov	r1, r4
   311a4:	bl	312d4 <rb_dlinkDelete>
   311a8:	ldr	r0, [r5]
   311ac:	bl	e3e4 <free_remote_conf@plt>
   311b0:	cmp	r6, #0
   311b4:	mov	r5, r6
   311b8:	bne	31198 <clear_s_newconf+0x64>
   311bc:	ldr	r0, [pc, #248]	; 312bc <clear_s_newconf+0x188>
   311c0:	ldr	r0, [pc, r0]
   311c4:	ldr	r5, [r0]
   311c8:	cmp	r5, #0
   311cc:	beq	311fc <clear_s_newconf+0xc8>
   311d0:	ldr	r4, [pc, #232]	; 312c0 <clear_s_newconf+0x18c>
   311d4:	ldr	r4, [pc, r4]
   311d8:	ldr	r6, [r5, #8]
   311dc:	mov	r0, r5
   311e0:	mov	r1, r4
   311e4:	bl	312d4 <rb_dlinkDelete>
   311e8:	ldr	r0, [r5]
   311ec:	bl	e3e4 <free_remote_conf@plt>
   311f0:	cmp	r6, #0
   311f4:	mov	r5, r6
   311f8:	bne	311d8 <clear_s_newconf+0xa4>
   311fc:	ldr	r0, [pc, #192]	; 312c4 <clear_s_newconf+0x190>
   31200:	ldr	r0, [pc, r0]
   31204:	ldr	r4, [r0]
   31208:	cmp	r4, #0
   3120c:	beq	31244 <clear_s_newconf+0x110>
   31210:	ldr	r5, [pc, #176]	; 312c8 <clear_s_newconf+0x194>
   31214:	ldr	r5, [pc, r5]
   31218:	ldr	r0, [r4]
   3121c:	ldr	r6, [r4, #8]
   31220:	bl	d9c4 <free_oper_conf@plt>
   31224:	mov	r0, r4
   31228:	mov	r1, r5
   3122c:	bl	312d4 <rb_dlinkDelete>
   31230:	mov	r0, r4
   31234:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   31238:	cmp	r6, #0
   3123c:	mov	r4, r6
   31240:	bne	31218 <clear_s_newconf+0xe4>
   31244:	ldr	r0, [pc, #128]	; 312cc <clear_s_newconf+0x198>
   31248:	ldr	r0, [pc, r0]
   3124c:	ldr	r5, [r0]
   31250:	cmp	r5, #0
   31254:	beq	312a8 <clear_s_newconf+0x174>
   31258:	ldr	r4, [pc, #112]	; 312d0 <clear_s_newconf+0x19c>
   3125c:	ldr	r4, [pc, r4]
   31260:	b	3127c <clear_s_newconf+0x148>
   31264:	ldr	r1, [r0, #288]	; 0x120
   31268:	orr	r1, r1, #1
   3126c:	str	r1, [r0, #288]	; 0x120
   31270:	cmp	r6, #0
   31274:	mov	r5, r6
   31278:	beq	312a8 <clear_s_newconf+0x174>
   3127c:	ldr	r0, [r5]
   31280:	ldr	r6, [r5, #8]
   31284:	ldr	r1, [r0, #292]	; 0x124
   31288:	cmp	r1, #0
   3128c:	bne	31264 <clear_s_newconf+0x130>
   31290:	mov	r0, r5
   31294:	mov	r1, r4
   31298:	bl	312d4 <rb_dlinkDelete>
   3129c:	ldr	r0, [r5]
   312a0:	bl	dcf4 <free_server_conf@plt>
   312a4:	b	31270 <clear_s_newconf+0x13c>
   312a8:	pop	{r4, r5, r6, sl, fp, pc}
   312ac:	.word	0x00029774
   312b0:	.word	0x00029760
   312b4:	.word	0x00029854
   312b8:	.word	0x00029840
   312bc:	.word	0x00029804
   312c0:	.word	0x000297f0
   312c4:	.word	0x000297b0
   312c8:	.word	0x0002979c
   312cc:	.word	0x00029898
   312d0:	.word	0x00029884

000312d4 <rb_dlinkDelete>:
   312d4:	push	{fp, lr}
   312d8:	mov	fp, sp
   312dc:	cmp	r0, #0
   312e0:	beq	31334 <rb_dlinkDelete+0x60>
   312e4:	cmp	r1, #0
   312e8:	beq	31354 <rb_dlinkDelete+0x80>
   312ec:	ldr	ip, [r0, #4]
   312f0:	ldr	r3, [r0, #8]
   312f4:	add	r2, r3, #4
   312f8:	cmp	r3, #0
   312fc:	addeq	r2, r1, #4
   31300:	str	ip, [r2]
   31304:	ldmib	r0, {r2, ip}
   31308:	cmp	r2, #0
   3130c:	mov	r3, r1
   31310:	addne	r3, r2, #8
   31314:	str	ip, [r3]
   31318:	mov	r2, #0
   3131c:	str	r2, [r0, #4]
   31320:	str	r2, [r0, #8]
   31324:	ldr	r0, [r1, #8]
   31328:	sub	r0, r0, #1
   3132c:	str	r0, [r1, #8]
   31330:	pop	{fp, pc}
   31334:	ldr	r0, [pc, #56]	; 31374 <rb_dlinkDelete+0xa0>
   31338:	add	r0, pc, r0
   3133c:	ldr	r1, [pc, #52]	; 31378 <rb_dlinkDelete+0xa4>
   31340:	add	r1, pc, r1
   31344:	ldr	r3, [pc, #48]	; 3137c <rb_dlinkDelete+0xa8>
   31348:	add	r3, pc, r3
   3134c:	mov	r2, #235	; 0xeb
   31350:	bl	e7e0 <__assert_fail@plt>
   31354:	ldr	r0, [pc, #36]	; 31380 <rb_dlinkDelete+0xac>
   31358:	add	r0, pc, r0
   3135c:	ldr	r1, [pc, #32]	; 31384 <rb_dlinkDelete+0xb0>
   31360:	add	r1, pc, r1
   31364:	ldr	r3, [pc, #28]	; 31388 <rb_dlinkDelete+0xb4>
   31368:	add	r3, pc, r3
   3136c:	mov	r2, #236	; 0xec
   31370:	bl	e7e0 <__assert_fail@plt>
   31374:	.word	0x0000f5d4
   31378:	.word	0x0000f5d6
   3137c:	.word	0x0000f671
   31380:	.word	0x00014e3d
   31384:	.word	0x0000f5b6
   31388:	.word	0x0000f651

0003138c <free_remote_conf>:
   3138c:	cmp	r0, #0
   31390:	bxeq	lr
   31394:	push	{r4, sl, fp, lr}
   31398:	add	fp, sp, #8
   3139c:	mov	r4, r0
   313a0:	ldr	r0, [r0]
   313a4:	bl	31600 <rb_free>
   313a8:	ldr	r0, [r4, #4]
   313ac:	bl	31600 <rb_free>
   313b0:	ldr	r0, [r4, #8]
   313b4:	bl	31600 <rb_free>
   313b8:	mov	r0, r4
   313bc:	pop	{r4, sl, fp, lr}
   313c0:	b	31600 <rb_free>

000313c4 <free_oper_conf>:
   313c4:	cmp	r0, #0
   313c8:	bxeq	lr
   313cc:	push	{r4, r5, fp, lr}
   313d0:	add	fp, sp, #8
   313d4:	mov	r4, r0
   313d8:	ldr	r0, [r0, #4]
   313dc:	bl	31600 <rb_free>
   313e0:	ldr	r0, [r4, #8]
   313e4:	bl	31600 <rb_free>
   313e8:	ldr	r0, [r4]
   313ec:	bl	31600 <rb_free>
   313f0:	ldr	r0, [r4, #16]
   313f4:	bl	31600 <rb_free>
   313f8:	ldr	r5, [r4, #12]
   313fc:	cmp	r5, #0
   31400:	beq	31424 <free_oper_conf+0x60>
   31404:	mov	r0, r5
   31408:	bl	dc94 <strlen@plt>
   3140c:	mov	r2, r0
   31410:	mov	r0, r5
   31414:	mov	r1, #0
   31418:	bl	df28 <memset@plt>
   3141c:	ldr	r0, [r4, #12]
   31420:	bl	31600 <rb_free>
   31424:	ldr	r0, [r4, #36]	; 0x24
   31428:	bl	31600 <rb_free>
   3142c:	ldr	r0, [r4, #40]	; 0x28
   31430:	cmp	r0, #0
   31434:	beq	3143c <free_oper_conf+0x78>
   31438:	bl	d67c <RSA_free@plt>
   3143c:	mov	r0, r4
   31440:	pop	{r4, r5, fp, lr}
   31444:	b	31600 <rb_free>

00031448 <free_server_conf>:
   31448:	cmp	r0, #0
   3144c:	bxeq	lr
   31450:	push	{r4, r5, fp, lr}
   31454:	add	fp, sp, #8
   31458:	mov	r4, r0
   3145c:	ldr	r5, [r0, #272]	; 0x110
   31460:	cmp	r5, #0
   31464:	beq	31494 <free_server_conf+0x4c>
   31468:	ldrb	r0, [r5]
   3146c:	cmp	r0, #0
   31470:	beq	31494 <free_server_conf+0x4c>
   31474:	mov	r0, r5
   31478:	bl	dc94 <strlen@plt>
   3147c:	mov	r2, r0
   31480:	mov	r0, r5
   31484:	mov	r1, #0
   31488:	bl	df28 <memset@plt>
   3148c:	ldr	r0, [r4, #272]	; 0x110
   31490:	bl	31600 <rb_free>
   31494:	ldr	r5, [r4, #276]	; 0x114
   31498:	cmp	r5, #0
   3149c:	beq	314cc <free_server_conf+0x84>
   314a0:	ldrb	r0, [r5]
   314a4:	cmp	r0, #0
   314a8:	beq	314cc <free_server_conf+0x84>
   314ac:	mov	r0, r5
   314b0:	bl	dc94 <strlen@plt>
   314b4:	mov	r2, r0
   314b8:	mov	r0, r5
   314bc:	mov	r1, #0
   314c0:	bl	df28 <memset@plt>
   314c4:	ldr	r0, [r4, #276]	; 0x114
   314c8:	bl	31600 <rb_free>
   314cc:	ldr	r0, [r4]
   314d0:	bl	31600 <rb_free>
   314d4:	ldr	r0, [r4, #4]
   314d8:	bl	31600 <rb_free>
   314dc:	ldr	r0, [r4, #304]	; 0x130
   314e0:	bl	31600 <rb_free>
   314e4:	ldr	r0, [r4, #572]	; 0x23c
   314e8:	bl	31600 <rb_free>
   314ec:	ldr	r0, [r4, #280]	; 0x118
   314f0:	bl	31600 <rb_free>
   314f4:	mov	r0, r4
   314f8:	pop	{r4, r5, fp, lr}
   314fc:	b	31600 <rb_free>

00031500 <clear_s_newconf_bans>:
   31500:	push	{r4, r5, r6, sl, fp, lr}
   31504:	add	fp, sp, #16
   31508:	ldr	r0, [pc, #184]	; 315c8 <clear_s_newconf_bans+0xc8>
   3150c:	ldr	r0, [pc, r0]
   31510:	ldr	r5, [r0]
   31514:	cmp	r5, #0
   31518:	beq	31564 <clear_s_newconf_bans+0x64>
   3151c:	ldr	r4, [pc, #168]	; 315cc <clear_s_newconf_bans+0xcc>
   31520:	ldr	r4, [pc, r4]
   31524:	b	31534 <clear_s_newconf_bans+0x34>
   31528:	cmp	r6, #0
   3152c:	mov	r5, r6
   31530:	beq	31564 <clear_s_newconf_bans+0x64>
   31534:	ldr	r0, [r5]
   31538:	ldr	r6, [r5, #8]
   3153c:	ldr	r1, [r0, #36]	; 0x24
   31540:	cmp	r1, #0
   31544:	bne	31528 <clear_s_newconf_bans+0x28>
   31548:	bl	dc34 <free_conf@plt>
   3154c:	mov	r0, r5
   31550:	mov	r1, r4
   31554:	bl	312d4 <rb_dlinkDelete>
   31558:	mov	r0, r5
   3155c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   31560:	b	31528 <clear_s_newconf_bans+0x28>
   31564:	ldr	r0, [pc, #100]	; 315d0 <clear_s_newconf_bans+0xd0>
   31568:	ldr	r0, [pc, r0]
   3156c:	ldr	r5, [r0]
   31570:	cmp	r5, #0
   31574:	beq	315c0 <clear_s_newconf_bans+0xc0>
   31578:	ldr	r4, [pc, #84]	; 315d4 <clear_s_newconf_bans+0xd4>
   3157c:	ldr	r4, [pc, r4]
   31580:	b	31590 <clear_s_newconf_bans+0x90>
   31584:	cmp	r6, #0
   31588:	mov	r5, r6
   3158c:	beq	315c0 <clear_s_newconf_bans+0xc0>
   31590:	ldr	r0, [r5]
   31594:	ldr	r6, [r5, #8]
   31598:	ldr	r1, [r0, #36]	; 0x24
   3159c:	cmp	r1, #0
   315a0:	bne	31584 <clear_s_newconf_bans+0x84>
   315a4:	bl	dc34 <free_conf@plt>
   315a8:	mov	r0, r5
   315ac:	mov	r1, r4
   315b0:	bl	312d4 <rb_dlinkDelete>
   315b4:	mov	r0, r5
   315b8:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   315bc:	b	31584 <clear_s_newconf_bans+0x84>
   315c0:	pop	{r4, r5, r6, sl, fp, lr}
   315c4:	b	d79c <clear_resv_hash@plt>
   315c8:	.word	0x000293b8
   315cc:	.word	0x000293a4
   315d0:	.word	0x00029344
   315d4:	.word	0x00029330

000315d8 <make_remote_conf>:
   315d8:	mov	r0, #28
   315dc:	b	315e0 <rb_malloc>

000315e0 <rb_malloc>:
   315e0:	push	{fp, lr}
   315e4:	mov	fp, sp
   315e8:	mov	r1, r0
   315ec:	mov	r0, #1
   315f0:	bl	cfa4 <calloc@plt>
   315f4:	cmp	r0, #0
   315f8:	popne	{fp, pc}
   315fc:	bl	d448 <rb_outofmemory@plt>

00031600 <rb_free>:
   31600:	cmp	r0, #0
   31604:	bxeq	lr
   31608:	b	d328 <free@plt>

0003160c <find_shared_conf>:
   3160c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31610:	add	fp, sp, #28
   31614:	sub	sp, sp, #4
   31618:	mov	r5, r0
   3161c:	ldr	r0, [pc, #132]	; 316a8 <find_shared_conf+0x9c>
   31620:	ldr	r0, [pc, r0]
   31624:	ldr	r4, [r0]
   31628:	mov	r9, #0
   3162c:	cmp	r4, #0
   31630:	beq	3169c <find_shared_conf+0x90>
   31634:	mov	r8, r3
   31638:	mov	sl, r2
   3163c:	mov	r7, r1
   31640:	b	31650 <find_shared_conf+0x44>
   31644:	ldr	r4, [r4, #8]
   31648:	cmp	r4, #0
   3164c:	beq	3169c <find_shared_conf+0x90>
   31650:	ldr	r6, [r4]
   31654:	ldr	r0, [r6]
   31658:	mov	r1, r5
   3165c:	bl	e114 <match@plt>
   31660:	cmp	r0, #0
   31664:	beq	31644 <find_shared_conf+0x38>
   31668:	ldr	r0, [r6, #4]
   3166c:	mov	r1, r7
   31670:	bl	e114 <match@plt>
   31674:	cmp	r0, #0
   31678:	beq	31644 <find_shared_conf+0x38>
   3167c:	ldr	r0, [r6, #8]
   31680:	mov	r1, sl
   31684:	bl	e114 <match@plt>
   31688:	cmp	r0, #0
   3168c:	beq	31644 <find_shared_conf+0x38>
   31690:	ldr	r0, [r6, #12]
   31694:	ands	r9, r0, r8
   31698:	movwne	r9, #1
   3169c:	mov	r0, r9
   316a0:	sub	sp, fp, #28
   316a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   316a8:	.word	0x00029294

000316ac <propagate_generic>:
   316ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   316b0:	add	fp, sp, #24
   316b4:	sub	sp, sp, #536	; 0x218
   316b8:	mov	r4, r3
   316bc:	mov	r5, r2
   316c0:	mov	r7, r1
   316c4:	mov	r6, r0
   316c8:	add	r3, fp, #12
   316cc:	str	r3, [sp, #20]
   316d0:	ldr	r2, [fp, #8]
   316d4:	add	r8, sp, #24
   316d8:	mov	r0, r8
   316dc:	mov	r1, #512	; 0x200
   316e0:	bl	e450 <vsnprintf@plt>
   316e4:	ldr	r0, [pc, #80]	; 3173c <propagate_generic+0x90>
   316e8:	add	r0, pc, r0
   316ec:	stm	sp, {r0, r7}
   316f0:	str	r5, [sp, #8]
   316f4:	str	r8, [sp, #12]
   316f8:	mov	r0, r6
   316fc:	mov	r1, r5
   31700:	mov	r2, r4
   31704:	mov	r3, #0
   31708:	bl	d0b8 <sendto_match_servs@plt>
   3170c:	ldr	r0, [pc, #44]	; 31740 <propagate_generic+0x94>
   31710:	ldr	r0, [pc, r0]
   31714:	ldr	r2, [r0]
   31718:	ldr	r0, [pc, #36]	; 31744 <propagate_generic+0x98>
   3171c:	add	r0, pc, r0
   31720:	stm	sp, {r0, r5, r7, r8}
   31724:	mov	r0, r6
   31728:	mov	r1, r5
   3172c:	mov	r3, r4
   31730:	bl	d0b8 <sendto_match_servs@plt>
   31734:	sub	sp, fp, #24
   31738:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3173c:	.word	0x00014b73
   31740:	.word	0x00029464
   31744:	.word	0x00014b39

00031748 <cluster_generic>:
   31748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3174c:	add	fp, sp, #28
   31750:	sub	sp, sp, #540	; 0x21c
   31754:	mov	r4, r3
   31758:	mov	r9, r2
   3175c:	mov	r6, r1
   31760:	mov	r7, r0
   31764:	add	r3, fp, #12
   31768:	str	r3, [sp, #20]
   3176c:	ldr	r2, [fp, #8]
   31770:	add	r8, sp, #24
   31774:	mov	r0, r8
   31778:	mov	r1, #512	; 0x200
   3177c:	bl	e450 <vsnprintf@plt>
   31780:	ldr	r0, [pc, #136]	; 31810 <cluster_generic+0xc8>
   31784:	ldr	r0, [pc, r0]
   31788:	ldr	r5, [r0]
   3178c:	cmp	r5, #0
   31790:	bne	317a4 <cluster_generic+0x5c>
   31794:	b	31808 <cluster_generic+0xc0>
   31798:	ldr	r5, [r5, #8]
   3179c:	cmp	r5, #0
   317a0:	beq	31808 <cluster_generic+0xc0>
   317a4:	ldr	sl, [r5]
   317a8:	ldr	r0, [sl, #12]
   317ac:	tst	r0, r9
   317b0:	beq	31798 <cluster_generic+0x50>
   317b4:	ldr	r1, [sl, #8]
   317b8:	ldr	r0, [pc, #84]	; 31814 <cluster_generic+0xcc>
   317bc:	add	r0, pc, r0
   317c0:	stm	sp, {r0, r6}
   317c4:	str	r1, [sp, #8]
   317c8:	str	r8, [sp, #12]
   317cc:	mov	r0, r7
   317d0:	mov	r2, r4
   317d4:	mov	r3, #0
   317d8:	bl	d0b8 <sendto_match_servs@plt>
   317dc:	ldr	r0, [pc, #52]	; 31818 <cluster_generic+0xd0>
   317e0:	ldr	r0, [pc, r0]
   317e4:	ldr	r2, [r0]
   317e8:	ldr	r1, [sl, #8]
   317ec:	ldr	r0, [pc, #40]	; 3181c <cluster_generic+0xd4>
   317f0:	add	r0, pc, r0
   317f4:	stm	sp, {r0, r1, r6, r8}
   317f8:	mov	r0, r7
   317fc:	mov	r3, r4
   31800:	bl	d0b8 <sendto_match_servs@plt>
   31804:	b	31798 <cluster_generic+0x50>
   31808:	sub	sp, fp, #28
   3180c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31810:	.word	0x00029250
   31814:	.word	0x00014a9f
   31818:	.word	0x00029394
   3181c:	.word	0x00014a65

00031820 <make_oper_conf>:
   31820:	mov	r0, #44	; 0x2c
   31824:	b	315e0 <rb_malloc>

00031828 <find_oper_conf>:
   31828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3182c:	add	fp, sp, #28
   31830:	sub	sp, sp, #332	; 0x14c
   31834:	mov	r4, r3
   31838:	mov	r3, r2
   3183c:	mov	r5, r1
   31840:	mov	r6, r0
   31844:	add	r1, sp, #72	; 0x48
   31848:	mov	r2, sp
   3184c:	mov	r0, r3
   31850:	bl	d55c <parse_netmask@plt>
   31854:	ldr	r0, [pc, #200]	; 31924 <find_oper_conf+0xfc>
   31858:	ldr	r0, [pc, r0]
   3185c:	ldr	r9, [r0]
   31860:	cmp	r9, #0
   31864:	beq	31914 <find_oper_conf+0xec>
   31868:	add	r7, sp, #8
   3186c:	sub	r8, fp, #160	; 0xa0
   31870:	b	31894 <find_oper_conf+0x6c>
   31874:	ldr	r0, [sl, #8]
   31878:	mov	r1, r5
   3187c:	bl	e114 <match@plt>
   31880:	cmp	r0, #0
   31884:	bne	31918 <find_oper_conf+0xf0>
   31888:	ldr	r9, [r9, #8]
   3188c:	cmp	r9, #0
   31890:	beq	31914 <find_oper_conf+0xec>
   31894:	ldr	sl, [r9]
   31898:	ldr	r0, [sl]
   3189c:	mov	r1, r4
   318a0:	bl	e750 <irccmp@plt>
   318a4:	cmp	r0, #0
   318a8:	bne	31888 <find_oper_conf+0x60>
   318ac:	ldr	r0, [sl, #4]
   318b0:	mov	r1, r6
   318b4:	bl	e114 <match@plt>
   318b8:	cmp	r0, #0
   318bc:	beq	31888 <find_oper_conf+0x60>
   318c0:	ldr	r1, [sl, #8]
   318c4:	mov	r0, r7
   318c8:	mov	r2, #64	; 0x40
   318cc:	bl	e510 <rb_strlcpy@plt>
   318d0:	mov	r0, r7
   318d4:	mov	r1, r8
   318d8:	add	r2, sp, #4
   318dc:	bl	d55c <parse_netmask@plt>
   318e0:	cmp	r0, #1
   318e4:	beq	31874 <find_oper_conf+0x4c>
   318e8:	ldrh	r0, [sp, #72]	; 0x48
   318ec:	ldrh	r1, [fp, #-160]	; 0xffffff60
   318f0:	cmp	r1, r0
   318f4:	bne	31874 <find_oper_conf+0x4c>
   318f8:	ldr	r2, [sp, #4]
   318fc:	mov	r0, r8
   31900:	add	r1, sp, #72	; 0x48
   31904:	bl	d034 <comp_with_mask_sock@plt>
   31908:	cmp	r0, #0
   3190c:	beq	31874 <find_oper_conf+0x4c>
   31910:	b	31918 <find_oper_conf+0xf0>
   31914:	mov	sl, #0
   31918:	mov	r0, sl
   3191c:	sub	sp, fp, #28
   31920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31924:	.word	0x00029158

00031928 <make_server_conf>:
   31928:	push	{fp, lr}
   3192c:	mov	fp, sp
   31930:	mov	r0, #592	; 0x250
   31934:	bl	315e0 <rb_malloc>
   31938:	mov	r1, #0
   3193c:	strh	r1, [r0, #8]
   31940:	strh	r1, [r0, #140]	; 0x8c
   31944:	str	r1, [r0, #300]	; 0x12c
   31948:	mov	r2, #308	; 0x134
   3194c:	mov	r3, r0
   31950:	strh	r1, [r3, r2]!
   31954:	strh	r1, [r3, #132]	; 0x84
   31958:	pop	{fp, pc}

0003195c <add_server_conf>:
   3195c:	push	{r4, r5, r6, r7, fp, lr}
   31960:	add	fp, sp, #16
   31964:	mov	r4, r0
   31968:	ldr	r0, [r0, #572]	; 0x23c
   3196c:	cmp	r0, #0
   31970:	beq	31a6c <add_server_conf+0x110>
   31974:	ldrb	r1, [r0]
   31978:	cmp	r1, #0
   3197c:	beq	31a6c <add_server_conf+0x110>
   31980:	bl	d6a0 <find_class@plt>
   31984:	str	r0, [r4, #576]	; 0x240
   31988:	ldr	r1, [pc, #264]	; 31a98 <add_server_conf+0x13c>
   3198c:	ldr	r1, [pc, r1]
   31990:	ldr	r1, [r1]
   31994:	cmp	r0, r1
   31998:	bne	319c4 <add_server_conf+0x68>
   3199c:	ldr	r1, [r4]
   319a0:	ldr	r0, [pc, #244]	; 31a9c <add_server_conf+0x140>
   319a4:	add	r0, pc, r0
   319a8:	bl	d400 <conf_report_error@plt>
   319ac:	ldr	r0, [r4, #572]	; 0x23c
   319b0:	bl	31600 <rb_free>
   319b4:	ldr	r0, [pc, #228]	; 31aa0 <add_server_conf+0x144>
   319b8:	add	r0, pc, r0
   319bc:	bl	31ab0 <rb_strdup>
   319c0:	str	r0, [r4, #572]	; 0x23c
   319c4:	add	r7, r4, #268	; 0x10c
   319c8:	ldr	r5, [r4, #4]
   319cc:	cmp	r5, #0
   319d0:	beq	31a24 <add_server_conf+0xc8>
   319d4:	ldr	r1, [pc, #200]	; 31aa4 <add_server_conf+0x148>
   319d8:	add	r1, pc, r1
   319dc:	mov	r0, r5
   319e0:	bl	e4c8 <strpbrk@plt>
   319e4:	cmp	r0, #0
   319e8:	bne	31a24 <add_server_conf+0xc8>
   319ec:	ldr	r6, [pc, #180]	; 31aa8 <add_server_conf+0x14c>
   319f0:	add	r6, pc, r6
   319f4:	mov	r0, r5
   319f8:	mov	r1, #2
   319fc:	mov	r2, r6
   31a00:	mov	r3, r4
   31a04:	bl	e024 <lookup_hostname@plt>
   31a08:	strh	r0, [r4, #136]	; 0x88
   31a0c:	ldr	r0, [r4, #4]
   31a10:	mov	r1, #10
   31a14:	mov	r2, r6
   31a18:	mov	r3, r4
   31a1c:	bl	e024 <lookup_hostname@plt>
   31a20:	strh	r0, [r7]
   31a24:	ldr	r0, [r4, #304]	; 0x130
   31a28:	cmp	r0, #0
   31a2c:	beq	31a68 <add_server_conf+0x10c>
   31a30:	add	r6, r4, #568	; 0x238
   31a34:	ldr	r5, [pc, #112]	; 31aac <add_server_conf+0x150>
   31a38:	add	r5, pc, r5
   31a3c:	mov	r1, #2
   31a40:	mov	r2, r5
   31a44:	mov	r3, r4
   31a48:	bl	e024 <lookup_hostname@plt>
   31a4c:	strh	r0, [r7, #168]	; 0xa8
   31a50:	ldr	r0, [r4, #304]	; 0x130
   31a54:	mov	r1, #10
   31a58:	mov	r2, r5
   31a5c:	mov	r3, r4
   31a60:	bl	e024 <lookup_hostname@plt>
   31a64:	strh	r0, [r6]
   31a68:	pop	{r4, r5, r6, r7, fp, pc}
   31a6c:	ldr	r0, [pc, #28]	; 31a90 <add_server_conf+0x134>
   31a70:	add	r0, pc, r0
   31a74:	bl	31ab0 <rb_strdup>
   31a78:	ldr	r1, [pc, #20]	; 31a94 <add_server_conf+0x138>
   31a7c:	ldr	r1, [pc, r1]
   31a80:	ldr	r1, [r1]
   31a84:	str	r0, [r4, #572]	; 0x23c
   31a88:	str	r1, [r4, #576]	; 0x240
   31a8c:	pop	{r4, r5, r6, r7, fp, pc}
   31a90:	.word	0x0000f904
   31a94:	.word	0x00028dd0
   31a98:	.word	0x00028ec0
   31a9c:	.word	0x000148c0
   31aa0:	.word	0x0000f9bc
   31aa4:	.word	0x00010333
   31aa8:	.word	0x000000e8
   31aac:	.word	0x000000f4

00031ab0 <rb_strdup>:
   31ab0:	push	{r4, sl, fp, lr}
   31ab4:	add	fp, sp, #8
   31ab8:	mov	r4, r0
   31abc:	bl	dc94 <strlen@plt>
   31ac0:	add	r0, r0, #1
   31ac4:	bl	da84 <malloc@plt>
   31ac8:	cmp	r0, #0
   31acc:	beq	31adc <rb_strdup+0x2c>
   31ad0:	mov	r1, r4
   31ad4:	pop	{r4, sl, fp, lr}
   31ad8:	b	d91c <strcpy@plt>
   31adc:	bl	d448 <rb_outofmemory@plt>

00031ae0 <conf_connect_dns_callback>:
   31ae0:	push	{r4, r5, fp, lr}
   31ae4:	add	fp, sp, #8
   31ae8:	mov	r4, r3
   31aec:	cmp	r2, #10
   31af0:	beq	31b10 <conf_connect_dns_callback+0x30>
   31af4:	cmp	r2, #2
   31af8:	popne	{r4, r5, fp, pc}
   31afc:	mov	r5, #136	; 0x88
   31b00:	cmp	r1, #1
   31b04:	bne	31b24 <conf_connect_dns_callback+0x44>
   31b08:	add	r1, r4, #8
   31b0c:	b	31b20 <conf_connect_dns_callback+0x40>
   31b10:	mov	r5, #268	; 0x10c
   31b14:	cmp	r1, #1
   31b18:	bne	31b24 <conf_connect_dns_callback+0x44>
   31b1c:	add	r1, r4, #140	; 0x8c
   31b20:	bl	e000 <rb_inet_pton_sock@plt>
   31b24:	add	r0, r4, r5
   31b28:	mov	r1, #0
   31b2c:	strh	r1, [r0]
   31b30:	pop	{r4, r5, fp, pc}

00031b34 <conf_bind_dns_callback>:
   31b34:	push	{r4, r5, fp, lr}
   31b38:	add	fp, sp, #8
   31b3c:	mov	r4, r3
   31b40:	cmp	r2, #10
   31b44:	beq	31b64 <conf_bind_dns_callback+0x30>
   31b48:	cmp	r2, #2
   31b4c:	popne	{r4, r5, fp, pc}
   31b50:	mov	r5, #436	; 0x1b4
   31b54:	cmp	r1, #1
   31b58:	bne	31b78 <conf_bind_dns_callback+0x44>
   31b5c:	add	r1, r4, #308	; 0x134
   31b60:	b	31b74 <conf_bind_dns_callback+0x40>
   31b64:	mov	r5, #568	; 0x238
   31b68:	cmp	r1, #1
   31b6c:	bne	31b78 <conf_bind_dns_callback+0x44>
   31b70:	add	r1, r4, #440	; 0x1b8
   31b74:	bl	e000 <rb_inet_pton_sock@plt>
   31b78:	add	r0, r4, r5
   31b7c:	mov	r1, #0
   31b80:	strh	r1, [r0]
   31b84:	pop	{r4, r5, fp, pc}

00031b88 <find_server_conf>:
   31b88:	push	{r4, r5, r6, sl, fp, lr}
   31b8c:	add	fp, sp, #16
   31b90:	mov	r4, r0
   31b94:	ldr	r0, [pc, #84]	; 31bf0 <find_server_conf+0x68>
   31b98:	ldr	r0, [pc, r0]
   31b9c:	ldr	r6, [r0]
   31ba0:	cmp	r6, #0
   31ba4:	bne	31bb8 <find_server_conf+0x30>
   31ba8:	b	31be4 <find_server_conf+0x5c>
   31bac:	ldr	r6, [r6, #8]
   31bb0:	cmp	r6, #0
   31bb4:	beq	31be4 <find_server_conf+0x5c>
   31bb8:	ldr	r5, [r6]
   31bbc:	ldrb	r0, [r5, #288]	; 0x120
   31bc0:	tst	r0, #1
   31bc4:	bne	31bac <find_server_conf+0x24>
   31bc8:	ldr	r1, [r5]
   31bcc:	mov	r0, r4
   31bd0:	bl	e114 <match@plt>
   31bd4:	cmp	r0, #0
   31bd8:	beq	31bac <find_server_conf+0x24>
   31bdc:	mov	r0, r5
   31be0:	pop	{r4, r5, r6, sl, fp, pc}
   31be4:	mov	r5, #0
   31be8:	mov	r0, r5
   31bec:	pop	{r4, r5, r6, sl, fp, pc}
   31bf0:	.word	0x00028f48

00031bf4 <attach_server_conf>:
   31bf4:	push	{r4, r5, fp, lr}
   31bf8:	add	fp, sp, #8
   31bfc:	mov	r4, r1
   31c00:	mov	r5, r0
   31c04:	ldr	r0, [r0, #432]	; 0x1b0
   31c08:	ldr	r0, [r0, #136]	; 0x88
   31c0c:	cmp	r0, #0
   31c10:	beq	31c24 <attach_server_conf+0x30>
   31c14:	cmp	r0, r4
   31c18:	popeq	{r4, r5, fp, pc}
   31c1c:	mov	r0, r5
   31c20:	bl	ddcc <detach_server_conf@plt>
   31c24:	ldr	r0, [r4, #576]	; 0x240
   31c28:	ldr	r1, [r0, #36]	; 0x24
   31c2c:	add	r1, r1, #1
   31c30:	str	r1, [r0, #36]	; 0x24
   31c34:	ldr	r0, [r5, #432]	; 0x1b0
   31c38:	str	r4, [r0, #136]	; 0x88
   31c3c:	ldr	r0, [r4, #292]	; 0x124
   31c40:	add	r0, r0, #1
   31c44:	str	r0, [r4, #292]	; 0x124
   31c48:	pop	{r4, r5, fp, pc}

00031c4c <detach_server_conf>:
   31c4c:	push	{r4, sl, fp, lr}
   31c50:	add	fp, sp, #8
   31c54:	ldr	r0, [r0, #432]	; 0x1b0
   31c58:	ldr	r4, [r0, #136]	; 0x88
   31c5c:	cmp	r4, #0
   31c60:	popeq	{r4, sl, fp, pc}
   31c64:	mov	r1, #0
   31c68:	str	r1, [r0, #136]	; 0x88
   31c6c:	ldr	r1, [r4, #292]	; 0x124
   31c70:	ldr	r0, [r4, #576]	; 0x240
   31c74:	subs	r1, r1, #1
   31c78:	str	r1, [r4, #292]	; 0x124
   31c7c:	ldr	r1, [r0, #36]	; 0x24
   31c80:	sub	r2, r1, #1
   31c84:	str	r2, [r0, #36]	; 0x24
   31c88:	bne	31cc8 <detach_server_conf+0x7c>
   31c8c:	ldr	r2, [r4, #288]	; 0x120
   31c90:	ands	r2, r2, #1
   31c94:	beq	31cc8 <detach_server_conf+0x7c>
   31c98:	cmp	r1, #1
   31c9c:	ldrle	r1, [r0, #8]
   31ca0:	cmnle	r1, #1
   31ca4:	bgt	31cac <detach_server_conf+0x60>
   31ca8:	bl	e7bc <free_class@plt>
   31cac:	add	r0, r4, #580	; 0x244
   31cb0:	ldr	r1, [pc, #20]	; 31ccc <detach_server_conf+0x80>
   31cb4:	ldr	r1, [pc, r1]
   31cb8:	bl	312d4 <rb_dlinkDelete>
   31cbc:	mov	r0, r4
   31cc0:	pop	{r4, sl, fp, lr}
   31cc4:	b	31448 <free_server_conf>
   31cc8:	pop	{r4, sl, fp, pc}
   31ccc:	.word	0x00028e2c

00031cd0 <set_server_conf_autoconn>:
   31cd0:	push	{r4, r5, r6, sl, fp, lr}
   31cd4:	add	fp, sp, #16
   31cd8:	sub	sp, sp, #8
   31cdc:	mov	r5, r2
   31ce0:	mov	r4, r1
   31ce4:	mov	r6, r0
   31ce8:	mov	r0, r1
   31cec:	bl	e0d8 <find_server_conf@plt>
   31cf0:	cmp	r0, #0
   31cf4:	beq	31d38 <set_server_conf_autoconn+0x68>
   31cf8:	ldr	r1, [r0, #288]	; 0x120
   31cfc:	orr	r2, r1, #32
   31d00:	cmp	r5, #0
   31d04:	biceq	r2, r1, #32
   31d08:	str	r2, [r0, #288]	; 0x120
   31d0c:	mov	r0, r6
   31d10:	bl	d724 <get_oper_name@plt>
   31d14:	mov	r3, r0
   31d18:	stm	sp, {r4, r5}
   31d1c:	ldr	r2, [pc, #48]	; 31d54 <set_server_conf_autoconn+0x84>
   31d20:	add	r2, pc, r2
   31d24:	mov	r0, #256	; 0x100
   31d28:	mov	r1, #0
   31d2c:	bl	d634 <sendto_realops_snomask@plt>
   31d30:	sub	sp, fp, #16
   31d34:	pop	{r4, r5, r6, sl, fp, pc}
   31d38:	ldr	r1, [pc, #24]	; 31d58 <set_server_conf_autoconn+0x88>
   31d3c:	add	r1, pc, r1
   31d40:	mov	r0, r6
   31d44:	mov	r2, r4
   31d48:	sub	sp, fp, #16
   31d4c:	pop	{r4, r5, r6, sl, fp, lr}
   31d50:	b	e414 <sendto_one_notice@plt>
   31d54:	.word	0x0001456a
   31d58:	.word	0x00014573

00031d5c <disable_server_conf_autoconn>:
   31d5c:	push	{r4, r5, fp, lr}
   31d60:	add	fp, sp, #8
   31d64:	mov	r4, r0
   31d68:	bl	e0d8 <find_server_conf@plt>
   31d6c:	cmp	r0, #0
   31d70:	popeq	{r4, r5, fp, pc}
   31d74:	ldr	r1, [r0, #288]	; 0x120
   31d78:	tst	r1, #32
   31d7c:	bne	31d84 <disable_server_conf_autoconn+0x28>
   31d80:	pop	{r4, r5, fp, pc}
   31d84:	bic	r1, r1, #32
   31d88:	str	r1, [r0, #288]	; 0x120
   31d8c:	ldr	r5, [pc, #40]	; 31dbc <disable_server_conf_autoconn+0x60>
   31d90:	add	r5, pc, r5
   31d94:	mov	r0, #256	; 0x100
   31d98:	mov	r1, #0
   31d9c:	mov	r2, r5
   31da0:	mov	r3, r4
   31da4:	bl	d634 <sendto_realops_snomask@plt>
   31da8:	mov	r0, #5
   31dac:	mov	r1, r5
   31db0:	mov	r2, r4
   31db4:	pop	{r4, r5, fp, lr}
   31db8:	b	e0b4 <ilog@plt>
   31dbc:	.word	0x0001452e

00031dc0 <find_xline>:
   31dc0:	push	{r4, r5, r6, r7, fp, lr}
   31dc4:	add	fp, sp, #16
   31dc8:	mov	r6, r0
   31dcc:	ldr	r0, [pc, #88]	; 31e2c <find_xline+0x6c>
   31dd0:	ldr	r0, [pc, r0]
   31dd4:	ldr	r7, [r0]
   31dd8:	cmp	r7, #0
   31ddc:	beq	31e08 <find_xline+0x48>
   31de0:	mov	r4, r1
   31de4:	ldr	r5, [r7]
   31de8:	ldr	r0, [r5, #16]
   31dec:	mov	r1, r6
   31df0:	bl	d16c <match_esc@plt>
   31df4:	cmp	r0, #0
   31df8:	bne	31e14 <find_xline+0x54>
   31dfc:	ldr	r7, [r7, #8]
   31e00:	cmp	r7, #0
   31e04:	bne	31de4 <find_xline+0x24>
   31e08:	mov	r5, #0
   31e0c:	mov	r0, r5
   31e10:	pop	{r4, r5, r6, r7, fp, pc}
   31e14:	cmp	r4, #0
   31e18:	ldrne	r0, [r5, #32]
   31e1c:	addne	r0, r0, #1
   31e20:	strne	r0, [r5, #32]
   31e24:	mov	r0, r5
   31e28:	pop	{r4, r5, r6, r7, fp, pc}
   31e2c:	.word	0x00028af4

00031e30 <find_xline_mask>:
   31e30:	push	{r4, r5, r6, sl, fp, lr}
   31e34:	add	fp, sp, #16
   31e38:	mov	r4, r0
   31e3c:	ldr	r0, [pc, #60]	; 31e80 <find_xline_mask+0x50>
   31e40:	ldr	r0, [pc, r0]
   31e44:	ldr	r6, [r0]
   31e48:	cmp	r6, #0
   31e4c:	beq	31e74 <find_xline_mask+0x44>
   31e50:	ldr	r5, [r6]
   31e54:	ldr	r0, [r5, #16]
   31e58:	mov	r1, r4
   31e5c:	bl	e750 <irccmp@plt>
   31e60:	cmp	r0, #0
   31e64:	beq	31e78 <find_xline_mask+0x48>
   31e68:	ldr	r6, [r6, #8]
   31e6c:	cmp	r6, #0
   31e70:	bne	31e50 <find_xline_mask+0x20>
   31e74:	mov	r5, #0
   31e78:	mov	r0, r5
   31e7c:	pop	{r4, r5, r6, sl, fp, pc}
   31e80:	.word	0x00028a84

00031e84 <find_nick_resv>:
   31e84:	push	{r4, r5, r6, sl, fp, lr}
   31e88:	add	fp, sp, #16
   31e8c:	mov	r4, r0
   31e90:	ldr	r0, [pc, #80]	; 31ee8 <find_nick_resv+0x64>
   31e94:	ldr	r0, [pc, r0]
   31e98:	ldr	r6, [r0]
   31e9c:	cmp	r6, #0
   31ea0:	beq	31ec8 <find_nick_resv+0x44>
   31ea4:	ldr	r5, [r6]
   31ea8:	ldr	r0, [r5, #16]
   31eac:	mov	r1, r4
   31eb0:	bl	d16c <match_esc@plt>
   31eb4:	cmp	r0, #0
   31eb8:	bne	31ed4 <find_nick_resv+0x50>
   31ebc:	ldr	r6, [r6, #8]
   31ec0:	cmp	r6, #0
   31ec4:	bne	31ea4 <find_nick_resv+0x20>
   31ec8:	mov	r5, #0
   31ecc:	mov	r0, r5
   31ed0:	pop	{r4, r5, r6, sl, fp, pc}
   31ed4:	ldr	r0, [r5, #32]
   31ed8:	add	r0, r0, #1
   31edc:	str	r0, [r5, #32]
   31ee0:	mov	r0, r5
   31ee4:	pop	{r4, r5, r6, sl, fp, pc}
   31ee8:	.word	0x00028a18

00031eec <find_nick_resv_mask>:
   31eec:	push	{r4, r5, r6, sl, fp, lr}
   31ef0:	add	fp, sp, #16
   31ef4:	mov	r4, r0
   31ef8:	ldr	r0, [pc, #60]	; 31f3c <find_nick_resv_mask+0x50>
   31efc:	ldr	r0, [pc, r0]
   31f00:	ldr	r6, [r0]
   31f04:	cmp	r6, #0
   31f08:	beq	31f30 <find_nick_resv_mask+0x44>
   31f0c:	ldr	r5, [r6]
   31f10:	ldr	r0, [r5, #16]
   31f14:	mov	r1, r4
   31f18:	bl	e750 <irccmp@plt>
   31f1c:	cmp	r0, #0
   31f20:	beq	31f34 <find_nick_resv_mask+0x48>
   31f24:	ldr	r6, [r6, #8]
   31f28:	cmp	r6, #0
   31f2c:	bne	31f0c <find_nick_resv_mask+0x20>
   31f30:	mov	r5, #0
   31f34:	mov	r0, r5
   31f38:	pop	{r4, r5, r6, sl, fp, pc}
   31f3c:	.word	0x000289b0

00031f40 <clean_resv_nick>:
   31f40:	push	{fp, lr}
   31f44:	mov	fp, sp
   31f48:	ldrb	r2, [r0]
   31f4c:	mov	r1, #0
   31f50:	cmp	r2, #45	; 0x2d
   31f54:	beq	31fdc <clean_resv_nick+0x9c>
   31f58:	ldr	ip, [pc, #144]	; 31ff0 <clean_resv_nick+0xb0>
   31f5c:	ldr	ip, [pc, ip]
   31f60:	ldrb	r2, [ip, r2, lsl #2]
   31f64:	tst	r2, #16
   31f68:	bne	31fdc <clean_resv_nick+0x9c>
   31f6c:	mov	lr, #0
   31f70:	mov	r3, #0
   31f74:	b	31f84 <clean_resv_nick+0x44>
   31f78:	sub	r1, r2, #63	; 0x3f
   31f7c:	cmp	r1, #1
   31f80:	bhi	31fb4 <clean_resv_nick+0x74>
   31f84:	add	r0, r0, #1
   31f88:	ldrb	r2, [r0, #-1]
   31f8c:	cmp	r2, #62	; 0x3e
   31f90:	bgt	31f78 <clean_resv_nick+0x38>
   31f94:	cmp	r2, #35	; 0x23
   31f98:	beq	31f84 <clean_resv_nick+0x44>
   31f9c:	cmp	r2, #0
   31fa0:	beq	31fc8 <clean_resv_nick+0x88>
   31fa4:	cmp	r2, #42	; 0x2a
   31fa8:	bne	31fb4 <clean_resv_nick+0x74>
   31fac:	add	lr, lr, #1
   31fb0:	b	31f84 <clean_resv_nick+0x44>
   31fb4:	ldrb	r1, [ip, r2, lsl #2]
   31fb8:	tst	r1, #64	; 0x40
   31fbc:	beq	31fe4 <clean_resv_nick+0xa4>
   31fc0:	add	r3, r3, #1
   31fc4:	b	31f84 <clean_resv_nick+0x44>
   31fc8:	cmp	r3, #0
   31fcc:	movwne	r3, #1
   31fd0:	clz	r0, lr
   31fd4:	lsr	r0, r0, #5
   31fd8:	orr	r1, r0, r3
   31fdc:	mov	r0, r1
   31fe0:	pop	{fp, pc}
   31fe4:	mov	r1, #0
   31fe8:	mov	r0, r1
   31fec:	pop	{fp, pc}
   31ff0:	.word	0x00028a9c

00031ff4 <valid_wild_card_simple>:
   31ff4:	push	{r4, r5, fp, lr}
   31ff8:	add	fp, sp, #8
   31ffc:	ldrb	r2, [r0]
   32000:	cmp	r2, #0
   32004:	beq	32094 <valid_wild_card_simple+0xa0>
   32008:	ldr	r1, [pc, #148]	; 320a4 <valid_wild_card_simple+0xb0>
   3200c:	ldr	r1, [pc, r1]
   32010:	ldr	lr, [r1, #240]	; 0xf0
   32014:	mov	r1, #0
   32018:	ldr	ip, [pc, #136]	; 320a8 <valid_wild_card_simple+0xb4>
   3201c:	ldr	ip, [pc, ip]
   32020:	mov	r3, #0
   32024:	b	3203c <valid_wild_card_simple+0x48>
   32028:	add	r1, r1, #1
   3202c:	mov	r0, r2
   32030:	ldrb	r2, [r0]
   32034:	cmp	r2, #0
   32038:	beq	32098 <valid_wild_card_simple+0xa4>
   3203c:	uxtb	r4, r2
   32040:	add	r2, r0, #1
   32044:	cmp	r4, #92	; 0x5c
   32048:	bne	3206c <valid_wild_card_simple+0x78>
   3204c:	ldrb	r5, [r2]
   32050:	cmp	r5, #0
   32054:	beq	3206c <valid_wild_card_simple+0x78>
   32058:	add	r3, r3, #1
   3205c:	cmp	r3, lr
   32060:	bge	3208c <valid_wild_card_simple+0x98>
   32064:	add	r0, r0, #2
   32068:	b	32030 <valid_wild_card_simple+0x3c>
   3206c:	add	r0, ip, r4, lsl #2
   32070:	ldrb	r0, [r0, #1]
   32074:	tst	r0, #128	; 0x80
   32078:	bne	32028 <valid_wild_card_simple+0x34>
   3207c:	add	r3, r3, #1
   32080:	cmp	r3, lr
   32084:	mov	r0, r2
   32088:	blt	32030 <valid_wild_card_simple+0x3c>
   3208c:	mov	r0, #1
   32090:	pop	{r4, r5, fp, pc}
   32094:	mov	r1, #0
   32098:	clz	r0, r1
   3209c:	lsr	r0, r0, #5
   320a0:	pop	{r4, r5, fp, pc}
   320a4:	.word	0x00028b70
   320a8:	.word	0x000289dc

000320ac <valid_temp_time>:
   320ac:	ldrb	r3, [r0]
   320b0:	cmp	r3, #0
   320b4:	beq	32108 <valid_temp_time+0x5c>
   320b8:	add	r1, r0, #1
   320bc:	mov	r0, #0
   320c0:	ldr	ip, [pc, #84]	; 3211c <valid_temp_time+0x70>
   320c4:	ldr	ip, [pc, ip]
   320c8:	uxtb	r3, r3
   320cc:	ldrb	r2, [ip, r3, lsl #2]
   320d0:	tst	r2, #16
   320d4:	mvneq	r0, #0
   320d8:	bxeq	lr
   320dc:	add	r0, r0, r0, lsl #2
   320e0:	and	r2, r3, #15
   320e4:	add	r0, r2, r0, lsl #1
   320e8:	ldrb	r3, [r1], #1
   320ec:	cmp	r3, #0
   320f0:	bne	320c8 <valid_temp_time+0x1c>
   320f4:	movw	r1, #65408	; 0xff80
   320f8:	movt	r1, #7
   320fc:	cmp	r0, r1
   32100:	movlt	r1, r0
   32104:	b	32110 <valid_temp_time+0x64>
   32108:	mov	r0, #0
   3210c:	mov	r1, r0
   32110:	rsb	r0, r1, r1, lsl #4
   32114:	lsl	r0, r0, #2
   32118:	bx	lr
   3211c:	.word	0x00028934

00032120 <get_nd_count>:
   32120:	ldr	r0, [pc, #8]	; 32130 <get_nd_count+0x10>
   32124:	ldr	r0, [pc, r0]
   32128:	ldr	r0, [r0, #8]
   3212c:	bx	lr
   32130:	.word	0x000288c0

00032134 <add_nd_entry>:
   32134:	push	{r4, r5, r6, sl, fp, lr}
   32138:	add	fp, sp, #16
   3213c:	mov	r4, r0
   32140:	ldr	r6, [pc, #104]	; 321b0 <add_nd_entry+0x7c>
   32144:	ldr	r6, [pc, r6]
   32148:	ldr	r0, [r6]
   3214c:	mov	r1, r4
   32150:	bl	d5c8 <rb_dictionary_find@plt>
   32154:	cmp	r0, #0
   32158:	popne	{r4, r5, r6, sl, fp, pc}
   3215c:	ldr	r0, [pc, #80]	; 321b4 <add_nd_entry+0x80>
   32160:	ldr	r0, [pc, r0]
   32164:	bl	de20 <rb_bh_alloc@plt>
   32168:	mov	r5, r0
   3216c:	mov	r1, r4
   32170:	mov	r2, #33	; 0x21
   32174:	bl	e510 <rb_strlcpy@plt>
   32178:	bl	d07c <rb_current_time@plt>
   3217c:	ldr	r1, [pc, #52]	; 321b8 <add_nd_entry+0x84>
   32180:	ldr	r1, [pc, r1]
   32184:	ldr	r1, [r1, #136]	; 0x88
   32188:	add	r0, r1, r0
   3218c:	str	r0, [r5, #36]	; 0x24
   32190:	add	r1, r5, #40	; 0x28
   32194:	mov	r0, r5
   32198:	bl	321bc <rb_dlinkAddTail>
   3219c:	ldr	r0, [r6]
   321a0:	mov	r1, r5
   321a4:	mov	r2, r5
   321a8:	pop	{r4, r5, r6, sl, fp, lr}
   321ac:	b	d700 <rb_dictionary_add@plt>
   321b0:	.word	0x000287f8
   321b4:	.word	0x00038de8
   321b8:	.word	0x000289fc

000321bc <rb_dlinkAddTail>:
   321bc:	push	{fp, lr}
   321c0:	mov	fp, sp
   321c4:	cmp	r1, #0
   321c8:	beq	3222c <rb_dlinkAddTail+0x70>
   321cc:	cmp	r0, #0
   321d0:	beq	3224c <rb_dlinkAddTail+0x90>
   321d4:	mov	r2, #0
   321d8:	str	r2, [r1, #8]
   321dc:	str	r0, [r1]
   321e0:	ldr	r0, [pc, #132]	; 3226c <rb_dlinkAddTail+0xb0>
   321e4:	ldr	r0, [pc, r0]
   321e8:	ldr	r2, [r0, #4]
   321ec:	str	r2, [r1, #4]
   321f0:	ldr	r2, [r0, #4]
   321f4:	cmp	r2, #0
   321f8:	beq	32208 <rb_dlinkAddTail+0x4c>
   321fc:	add	r2, r2, #8
   32200:	str	r1, [r2]
   32204:	b	32218 <rb_dlinkAddTail+0x5c>
   32208:	ldr	r2, [r0]
   3220c:	cmp	r2, #0
   32210:	mov	r2, r0
   32214:	streq	r1, [r2]
   32218:	str	r1, [r0, #4]
   3221c:	ldr	r1, [r0, #8]
   32220:	add	r1, r1, #1
   32224:	str	r1, [r0, #8]
   32228:	pop	{fp, pc}
   3222c:	ldr	r0, [pc, #60]	; 32270 <rb_dlinkAddTail+0xb4>
   32230:	add	r0, pc, r0
   32234:	ldr	r1, [pc, #56]	; 32274 <rb_dlinkAddTail+0xb8>
   32238:	add	r1, pc, r1
   3223c:	ldr	r3, [pc, #52]	; 32278 <rb_dlinkAddTail+0xbc>
   32240:	add	r3, pc, r3
   32244:	mov	r2, #211	; 0xd3
   32248:	bl	e7e0 <__assert_fail@plt>
   3224c:	ldr	r0, [pc, #40]	; 3227c <rb_dlinkAddTail+0xc0>
   32250:	add	r0, pc, r0
   32254:	ldr	r1, [pc, #36]	; 32280 <rb_dlinkAddTail+0xc4>
   32258:	add	r1, pc, r1
   3225c:	ldr	r3, [pc, #32]	; 32284 <rb_dlinkAddTail+0xc8>
   32260:	add	r3, pc, r3
   32264:	mov	r2, #213	; 0xd5
   32268:	bl	e7e0 <__assert_fail@plt>
   3226c:	.word	0x00028800
   32270:	.word	0x0000e6dc
   32274:	.word	0x0000e6de
   32278:	.word	0x0000e6f2
   3227c:	.word	0x0000e721
   32280:	.word	0x0000e6be
   32284:	.word	0x0000e6d2

00032288 <free_nd_entry>:
   32288:	push	{r4, sl, fp, lr}
   3228c:	add	fp, sp, #8
   32290:	mov	r4, r0
   32294:	ldr	r0, [pc, #48]	; 322cc <free_nd_entry+0x44>
   32298:	ldr	r0, [pc, r0]
   3229c:	ldr	r0, [r0]
   322a0:	mov	r1, r4
   322a4:	bl	d82c <rb_dictionary_delete@plt>
   322a8:	add	r0, r4, #40	; 0x28
   322ac:	ldr	r1, [pc, #28]	; 322d0 <free_nd_entry+0x48>
   322b0:	ldr	r1, [pc, r1]
   322b4:	bl	312d4 <rb_dlinkDelete>
   322b8:	ldr	r0, [pc, #20]	; 322d4 <free_nd_entry+0x4c>
   322bc:	ldr	r0, [pc, r0]
   322c0:	mov	r1, r4
   322c4:	pop	{r4, sl, fp, lr}
   322c8:	b	e708 <rb_bh_free@plt>
   322cc:	.word	0x000286a4
   322d0:	.word	0x00028734
   322d4:	.word	0x00038c8c

000322d8 <add_tgchange>:
   322d8:	push	{r4, r5, fp, lr}
   322dc:	add	fp, sp, #8
   322e0:	mov	r4, r0
   322e4:	bl	e768 <find_tgchange@plt>
   322e8:	cmp	r0, #0
   322ec:	popne	{r4, r5, fp, pc}
   322f0:	mov	r0, #24
   322f4:	bl	315e0 <rb_malloc>
   322f8:	mov	r5, r0
   322fc:	ldr	r0, [pc, #64]	; 32344 <add_tgchange+0x6c>
   32300:	ldr	r0, [pc, r0]
   32304:	ldr	r0, [r0]
   32308:	mov	r1, r4
   3230c:	bl	e198 <make_and_lookup@plt>
   32310:	str	r5, [r0, #20]
   32314:	str	r0, [r5, #8]
   32318:	mov	r0, r4
   3231c:	bl	31ab0 <rb_strdup>
   32320:	str	r0, [r5]
   32324:	bl	d07c <rb_current_time@plt>
   32328:	movw	r1, #43200	; 0xa8c0
   3232c:	add	r0, r0, r1
   32330:	str	r0, [r5, #4]
   32334:	add	r1, r5, #12
   32338:	mov	r0, r5
   3233c:	pop	{r4, r5, fp, lr}
   32340:	b	32378 <rb_dlinkAdd>
   32344:	.word	0x000286ac

00032348 <find_tgchange>:
   32348:	push	{fp, lr}
   3234c:	mov	fp, sp
   32350:	mov	r1, r0
   32354:	ldr	r0, [pc, #24]	; 32374 <find_tgchange+0x2c>
   32358:	ldr	r0, [pc, r0]
   3235c:	ldr	r0, [r0]
   32360:	bl	db20 <rb_match_exact_string@plt>
   32364:	cmp	r0, #0
   32368:	ldrne	r0, [r0, #20]
   3236c:	moveq	r0, #0
   32370:	pop	{fp, pc}
   32374:	.word	0x00028654

00032378 <rb_dlinkAdd>:
   32378:	push	{fp, lr}
   3237c:	mov	fp, sp
   32380:	cmp	r0, #0
   32384:	beq	323e0 <rb_dlinkAdd+0x68>
   32388:	cmp	r1, #0
   3238c:	beq	32400 <rb_dlinkAdd+0x88>
   32390:	mov	r2, #0
   32394:	stm	r1, {r0, r2}
   32398:	ldr	r0, [pc, #128]	; 32420 <rb_dlinkAdd+0xa8>
   3239c:	ldr	r0, [pc, r0]
   323a0:	ldr	r2, [r0]
   323a4:	str	r2, [r1, #8]
   323a8:	cmp	r2, #0
   323ac:	beq	323bc <rb_dlinkAdd+0x44>
   323b0:	add	r2, r2, #4
   323b4:	str	r1, [r2]
   323b8:	b	323cc <rb_dlinkAdd+0x54>
   323bc:	mov	r2, r0
   323c0:	ldr	r3, [r2, #4]!
   323c4:	cmp	r3, #0
   323c8:	streq	r1, [r2]
   323cc:	str	r1, [r0]
   323d0:	ldr	r1, [r0, #8]
   323d4:	add	r1, r1, #1
   323d8:	str	r1, [r0, #8]
   323dc:	pop	{fp, pc}
   323e0:	ldr	r0, [pc, #60]	; 32424 <rb_dlinkAdd+0xac>
   323e4:	add	r0, pc, r0
   323e8:	ldr	r1, [pc, #56]	; 32428 <rb_dlinkAdd+0xb0>
   323ec:	add	r1, pc, r1
   323f0:	ldr	r3, [pc, #52]	; 3242c <rb_dlinkAdd+0xb4>
   323f4:	add	r3, pc, r3
   323f8:	mov	r2, #143	; 0x8f
   323fc:	bl	e7e0 <__assert_fail@plt>
   32400:	ldr	r0, [pc, #40]	; 32430 <rb_dlinkAdd+0xb8>
   32404:	add	r0, pc, r0
   32408:	ldr	r1, [pc, #36]	; 32434 <rb_dlinkAdd+0xbc>
   3240c:	add	r1, pc, r1
   32410:	ldr	r3, [pc, #32]	; 32438 <rb_dlinkAdd+0xc0>
   32414:	add	r3, pc, r3
   32418:	mov	r2, #144	; 0x90
   3241c:	bl	e7e0 <__assert_fail@plt>
   32420:	.word	0x0002850c
   32424:	.word	0x0000e58d
   32428:	.word	0x0000e52a
   3242c:	.word	0x0000e58a
   32430:	.word	0x0000e508
   32434:	.word	0x0000e50a
   32438:	.word	0x0000e56a

0003243c <init_builtin_capabs>:
   3243c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32440:	add	fp, sp, #24
   32444:	ldr	r0, [pc, #972]	; 32818 <init_builtin_capabs+0x3dc>
   32448:	add	r0, pc, r0
   3244c:	bl	d4cc <capability_index_create@plt>
   32450:	ldr	r4, [pc, #964]	; 3281c <init_builtin_capabs+0x3e0>
   32454:	ldr	r4, [pc, r4]
   32458:	str	r0, [r4]
   3245c:	bl	d31c <capability_put_anonymous@plt>
   32460:	ldr	r1, [pc, #952]	; 32820 <init_builtin_capabs+0x3e4>
   32464:	ldr	r1, [pc, r1]
   32468:	str	r0, [r1]
   3246c:	ldr	r0, [r4]
   32470:	bl	d31c <capability_put_anonymous@plt>
   32474:	ldr	r1, [pc, #936]	; 32824 <init_builtin_capabs+0x3e8>
   32478:	ldr	r1, [pc, r1]
   3247c:	str	r0, [r1]
   32480:	ldr	r0, [r4]
   32484:	ldr	r8, [pc, #924]	; 32828 <init_builtin_capabs+0x3ec>
   32488:	add	r8, pc, r8
   3248c:	mov	r1, r8
   32490:	mov	r2, #0
   32494:	bl	de14 <capability_put@plt>
   32498:	ldr	r1, [pc, #908]	; 3282c <init_builtin_capabs+0x3f0>
   3249c:	ldr	r1, [pc, r1]
   324a0:	str	r0, [r1]
   324a4:	ldr	r0, [r4]
   324a8:	ldr	r5, [pc, #896]	; 32830 <init_builtin_capabs+0x3f4>
   324ac:	add	r5, pc, r5
   324b0:	mov	r1, r5
   324b4:	mov	r2, #0
   324b8:	bl	de14 <capability_put@plt>
   324bc:	ldr	r1, [pc, #880]	; 32834 <init_builtin_capabs+0x3f8>
   324c0:	ldr	r1, [pc, r1]
   324c4:	str	r0, [r1]
   324c8:	ldr	r0, [r4]
   324cc:	ldr	r1, [pc, #868]	; 32838 <init_builtin_capabs+0x3fc>
   324d0:	add	r1, pc, r1
   324d4:	mov	r2, #0
   324d8:	bl	de14 <capability_put@plt>
   324dc:	ldr	r1, [pc, #856]	; 3283c <init_builtin_capabs+0x400>
   324e0:	ldr	r1, [pc, r1]
   324e4:	str	r0, [r1]
   324e8:	ldr	r0, [r4]
   324ec:	ldr	r6, [pc, #844]	; 32840 <init_builtin_capabs+0x404>
   324f0:	add	r6, pc, r6
   324f4:	mov	r1, r6
   324f8:	mov	r2, #0
   324fc:	bl	de14 <capability_put@plt>
   32500:	ldr	r1, [pc, #828]	; 32844 <init_builtin_capabs+0x408>
   32504:	ldr	r1, [pc, r1]
   32508:	str	r0, [r1]
   3250c:	ldr	r0, [r4]
   32510:	ldr	r1, [pc, #816]	; 32848 <init_builtin_capabs+0x40c>
   32514:	add	r1, pc, r1
   32518:	mov	r2, #0
   3251c:	bl	de14 <capability_put@plt>
   32520:	ldr	r1, [pc, #804]	; 3284c <init_builtin_capabs+0x410>
   32524:	ldr	r1, [pc, r1]
   32528:	str	r0, [r1]
   3252c:	ldr	r0, [r4]
   32530:	ldr	r1, [pc, #792]	; 32850 <init_builtin_capabs+0x414>
   32534:	add	r1, pc, r1
   32538:	mov	r2, #0
   3253c:	bl	de14 <capability_put@plt>
   32540:	ldr	r1, [pc, #780]	; 32854 <init_builtin_capabs+0x418>
   32544:	ldr	r1, [pc, r1]
   32548:	str	r0, [r1]
   3254c:	ldr	r0, [r4]
   32550:	ldr	r1, [pc, #768]	; 32858 <init_builtin_capabs+0x41c>
   32554:	add	r1, pc, r1
   32558:	mov	r2, #0
   3255c:	bl	de14 <capability_put@plt>
   32560:	ldr	r1, [pc, #756]	; 3285c <init_builtin_capabs+0x420>
   32564:	ldr	r1, [pc, r1]
   32568:	str	r0, [r1]
   3256c:	ldr	r0, [r4]
   32570:	ldr	r1, [pc, #744]	; 32860 <init_builtin_capabs+0x424>
   32574:	add	r1, pc, r1
   32578:	mov	r2, #0
   3257c:	bl	de14 <capability_put@plt>
   32580:	ldr	r1, [pc, #732]	; 32864 <init_builtin_capabs+0x428>
   32584:	ldr	r1, [pc, r1]
   32588:	str	r0, [r1]
   3258c:	ldr	r0, [r4]
   32590:	ldr	r1, [pc, #720]	; 32868 <init_builtin_capabs+0x42c>
   32594:	add	r1, pc, r1
   32598:	mov	r2, #0
   3259c:	bl	de14 <capability_put@plt>
   325a0:	ldr	r1, [pc, #708]	; 3286c <init_builtin_capabs+0x430>
   325a4:	ldr	r1, [pc, r1]
   325a8:	str	r0, [r1]
   325ac:	ldr	r0, [r4]
   325b0:	ldr	r1, [pc, #696]	; 32870 <init_builtin_capabs+0x434>
   325b4:	add	r1, pc, r1
   325b8:	mov	r2, #0
   325bc:	bl	de14 <capability_put@plt>
   325c0:	ldr	r1, [pc, #684]	; 32874 <init_builtin_capabs+0x438>
   325c4:	ldr	r1, [pc, r1]
   325c8:	str	r0, [r1]
   325cc:	ldr	r0, [r4]
   325d0:	ldr	r7, [pc, #672]	; 32878 <init_builtin_capabs+0x43c>
   325d4:	add	r7, pc, r7
   325d8:	mov	r1, r7
   325dc:	mov	r2, #0
   325e0:	bl	de14 <capability_put@plt>
   325e4:	ldr	r1, [pc, #656]	; 3287c <init_builtin_capabs+0x440>
   325e8:	ldr	r1, [pc, r1]
   325ec:	str	r0, [r1]
   325f0:	ldr	r0, [r4]
   325f4:	ldr	r1, [pc, #644]	; 32880 <init_builtin_capabs+0x444>
   325f8:	add	r1, pc, r1
   325fc:	mov	r2, #0
   32600:	bl	de14 <capability_put@plt>
   32604:	ldr	r1, [pc, #632]	; 32884 <init_builtin_capabs+0x448>
   32608:	ldr	r1, [pc, r1]
   3260c:	str	r0, [r1]
   32610:	ldr	r0, [r4]
   32614:	ldr	r1, [pc, #620]	; 32888 <init_builtin_capabs+0x44c>
   32618:	add	r1, pc, r1
   3261c:	mov	r2, #0
   32620:	bl	de14 <capability_put@plt>
   32624:	ldr	r1, [pc, #608]	; 3288c <init_builtin_capabs+0x450>
   32628:	ldr	r1, [pc, r1]
   3262c:	str	r0, [r1]
   32630:	ldr	r0, [r4]
   32634:	ldr	r1, [pc, #596]	; 32890 <init_builtin_capabs+0x454>
   32638:	add	r1, pc, r1
   3263c:	mov	r2, #0
   32640:	bl	de14 <capability_put@plt>
   32644:	ldr	r1, [pc, #584]	; 32894 <init_builtin_capabs+0x458>
   32648:	ldr	r1, [pc, r1]
   3264c:	str	r0, [r1]
   32650:	ldr	r0, [r4]
   32654:	ldr	r1, [pc, #572]	; 32898 <init_builtin_capabs+0x45c>
   32658:	add	r1, pc, r1
   3265c:	mov	r2, #0
   32660:	bl	de14 <capability_put@plt>
   32664:	ldr	r1, [pc, #560]	; 3289c <init_builtin_capabs+0x460>
   32668:	ldr	r1, [pc, r1]
   3266c:	str	r0, [r1]
   32670:	ldr	r0, [r4]
   32674:	ldr	r1, [pc, #548]	; 328a0 <init_builtin_capabs+0x464>
   32678:	add	r1, pc, r1
   3267c:	mov	r2, #0
   32680:	bl	de14 <capability_put@plt>
   32684:	ldr	r1, [pc, #536]	; 328a4 <init_builtin_capabs+0x468>
   32688:	ldr	r1, [pc, r1]
   3268c:	str	r0, [r1]
   32690:	ldr	r0, [r4]
   32694:	ldr	r1, [pc, #524]	; 328a8 <init_builtin_capabs+0x46c>
   32698:	add	r1, pc, r1
   3269c:	mov	r2, #0
   326a0:	bl	de14 <capability_put@plt>
   326a4:	ldr	r1, [pc, #512]	; 328ac <init_builtin_capabs+0x470>
   326a8:	ldr	r1, [pc, r1]
   326ac:	str	r0, [r1]
   326b0:	ldr	r0, [r4]
   326b4:	ldr	r1, [pc, #500]	; 328b0 <init_builtin_capabs+0x474>
   326b8:	add	r1, pc, r1
   326bc:	mov	r2, #0
   326c0:	bl	de14 <capability_put@plt>
   326c4:	ldr	r1, [pc, #488]	; 328b4 <init_builtin_capabs+0x478>
   326c8:	ldr	r1, [pc, r1]
   326cc:	str	r0, [r1]
   326d0:	ldr	r0, [r4]
   326d4:	mov	r1, r8
   326d8:	bl	e21c <capability_require@plt>
   326dc:	ldr	r0, [r4]
   326e0:	mov	r1, r5
   326e4:	bl	e21c <capability_require@plt>
   326e8:	ldr	r0, [r4]
   326ec:	mov	r1, r6
   326f0:	bl	e21c <capability_require@plt>
   326f4:	ldr	r0, [r4]
   326f8:	mov	r1, r7
   326fc:	bl	e21c <capability_require@plt>
   32700:	ldr	r0, [pc, #432]	; 328b8 <init_builtin_capabs+0x47c>
   32704:	add	r0, pc, r0
   32708:	bl	d4cc <capability_index_create@plt>
   3270c:	ldr	r4, [pc, #424]	; 328bc <init_builtin_capabs+0x480>
   32710:	ldr	r4, [pc, r4]
   32714:	str	r0, [r4]
   32718:	ldr	r1, [pc, #416]	; 328c0 <init_builtin_capabs+0x484>
   3271c:	add	r1, pc, r1
   32720:	mov	r2, #0
   32724:	bl	de14 <capability_put@plt>
   32728:	ldr	r1, [pc, #404]	; 328c4 <init_builtin_capabs+0x488>
   3272c:	ldr	r1, [pc, r1]
   32730:	str	r0, [r1]
   32734:	ldr	r0, [r4]
   32738:	ldr	r1, [pc, #392]	; 328c8 <init_builtin_capabs+0x48c>
   3273c:	add	r1, pc, r1
   32740:	mov	r2, #0
   32744:	bl	de14 <capability_put@plt>
   32748:	ldr	r1, [pc, #380]	; 328cc <init_builtin_capabs+0x490>
   3274c:	ldr	r1, [pc, r1]
   32750:	str	r0, [r1]
   32754:	ldr	r0, [r4]
   32758:	ldr	r1, [pc, #368]	; 328d0 <init_builtin_capabs+0x494>
   3275c:	add	r1, pc, r1
   32760:	mov	r2, #0
   32764:	bl	de14 <capability_put@plt>
   32768:	ldr	r1, [pc, #356]	; 328d4 <init_builtin_capabs+0x498>
   3276c:	ldr	r1, [pc, r1]
   32770:	str	r0, [r1]
   32774:	ldr	r0, [r4]
   32778:	ldr	r1, [pc, #344]	; 328d8 <init_builtin_capabs+0x49c>
   3277c:	add	r1, pc, r1
   32780:	mov	r2, #0
   32784:	bl	de14 <capability_put@plt>
   32788:	ldr	r1, [pc, #332]	; 328dc <init_builtin_capabs+0x4a0>
   3278c:	ldr	r1, [pc, r1]
   32790:	str	r0, [r1]
   32794:	ldr	r0, [r4]
   32798:	ldr	r1, [pc, #320]	; 328e0 <init_builtin_capabs+0x4a4>
   3279c:	add	r1, pc, r1
   327a0:	mov	r2, #0
   327a4:	bl	de14 <capability_put@plt>
   327a8:	ldr	r1, [pc, #308]	; 328e4 <init_builtin_capabs+0x4a8>
   327ac:	ldr	r1, [pc, r1]
   327b0:	str	r0, [r1]
   327b4:	ldr	r0, [r4]
   327b8:	ldr	r1, [pc, #296]	; 328e8 <init_builtin_capabs+0x4ac>
   327bc:	add	r1, pc, r1
   327c0:	mov	r2, #0
   327c4:	bl	de14 <capability_put@plt>
   327c8:	ldr	r1, [pc, #284]	; 328ec <init_builtin_capabs+0x4b0>
   327cc:	ldr	r1, [pc, r1]
   327d0:	str	r0, [r1]
   327d4:	ldr	r0, [r4]
   327d8:	ldr	r1, [pc, #272]	; 328f0 <init_builtin_capabs+0x4b4>
   327dc:	add	r1, pc, r1
   327e0:	mov	r2, #0
   327e4:	bl	de14 <capability_put@plt>
   327e8:	ldr	r1, [pc, #260]	; 328f4 <init_builtin_capabs+0x4b8>
   327ec:	ldr	r1, [pc, r1]
   327f0:	str	r0, [r1]
   327f4:	ldr	r0, [r4]
   327f8:	ldr	r1, [pc, #248]	; 328f8 <init_builtin_capabs+0x4bc>
   327fc:	add	r1, pc, r1
   32800:	mov	r2, #0
   32804:	bl	de14 <capability_put@plt>
   32808:	ldr	r1, [pc, #236]	; 328fc <init_builtin_capabs+0x4c0>
   3280c:	ldr	r1, [pc, r1]
   32810:	str	r0, [r1]
   32814:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32818:	.word	0x00013ee3
   3281c:	.word	0x0002842c
   32820:	.word	0x00028400
   32824:	.word	0x000284b0
   32828:	.word	0x00013eb7
   3282c:	.word	0x000285b8
   32830:	.word	0x000157a2
   32834:	.word	0x000285bc
   32838:	.word	0x00013e72
   3283c:	.word	0x00028484
   32840:	.word	0x00013e56
   32844:	.word	0x00028570
   32848:	.word	0x00013e44
   3284c:	.word	0x00028510
   32850:	.word	0x00013e15
   32854:	.word	0x00028590
   32858:	.word	0x00013dfb
   3285c:	.word	0x00028380
   32860:	.word	0x00013ddf
   32864:	.word	0x00028390
   32868:	.word	0x00013dc2
   3286c:	.word	0x000282e4
   32870:	.word	0x00013da8
   32874:	.word	0x00028318
   32878:	.word	0x00013d90
   3287c:	.word	0x0002858c
   32880:	.word	0x00013d72
   32884:	.word	0x00028240
   32888:	.word	0x00013d5b
   3288c:	.word	0x00028294
   32890:	.word	0x00013d41
   32894:	.word	0x000282bc
   32898:	.word	0x00013d26
   3289c:	.word	0x000283b8
   328a0:	.word	0x00013d0b
   328a4:	.word	0x00028230
   328a8:	.word	0x00015638
   328ac:	.word	0x00028268
   328b0:	.word	0x00013cd2
   328b4:	.word	0x000281cc
   328b8:	.word	0x00013c8c
   328bc:	.word	0x000282d0
   328c0:	.word	0x00013c88
   328c4:	.word	0x00028438
   328c8:	.word	0x00013c75
   328cc:	.word	0x0002836c
   328d0:	.word	0x00013c64
   328d4:	.word	0x00028360
   328d8:	.word	0x00013c52
   328dc:	.word	0x0002825c
   328e0:	.word	0x00013c3e
   328e4:	.word	0x00028194
   328e8:	.word	0x00013c30
   328ec:	.word	0x000282cc
   328f0:	.word	0x00013c1b
   328f4:	.word	0x00028064
   328f8:	.word	0x00013c03
   328fc:	.word	0x000282e8

00032900 <hunt_server>:
   32900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32904:	add	fp, sp, #28
   32908:	sub	sp, sp, #12
   3290c:	mov	r7, #0
   32910:	ldr	r0, [fp, #8]
   32914:	cmp	r0, r3
   32918:	ble	3295c <hunt_server+0x5c>
   3291c:	mov	r4, r3
   32920:	ldr	sl, [fp, #12]
   32924:	ldr	r0, [sl, r3, lsl #2]
   32928:	cmp	r0, #0
   3292c:	beq	3295c <hunt_server+0x5c>
   32930:	mov	r8, r1
   32934:	ldrb	r1, [r0]
   32938:	cmp	r1, #0
   3293c:	beq	3295c <hunt_server+0x5c>
   32940:	mov	r9, r2
   32944:	ldr	r5, [pc, #660]	; 32be0 <hunt_server+0x2e0>
   32948:	ldr	r5, [pc, r5]
   3294c:	add	r1, r5, #88	; 0x58
   32950:	bl	e114 <match@plt>
   32954:	cmp	r0, #0
   32958:	beq	32968 <hunt_server+0x68>
   3295c:	mov	r0, r7
   32960:	sub	sp, fp, #28
   32964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32968:	ldr	r6, [sl, r4, lsl #2]
   3296c:	add	r1, r5, #396	; 0x18c
   32970:	mov	r0, r6
   32974:	bl	d0c4 <strcmp@plt>
   32978:	cmp	r0, #0
   3297c:	beq	3295c <hunt_server+0x5c>
   32980:	mov	r0, r6
   32984:	bl	dc94 <strlen@plt>
   32988:	add	r0, r0, #8
   3298c:	bic	r0, r0, #7
   32990:	sub	r7, sp, r0
   32994:	mov	sp, r7
   32998:	mov	r0, r7
   3299c:	mov	r1, r6
   329a0:	bl	d91c <strcpy@plt>
   329a4:	ldrb	r0, [r8, #65]	; 0x41
   329a8:	tst	r0, #32
   329ac:	beq	329c8 <hunt_server+0xc8>
   329b0:	ldrh	r0, [r8, #80]	; 0x50
   329b4:	cmp	r0, #64	; 0x40
   329b8:	bne	329c8 <hunt_server+0xc8>
   329bc:	mov	r0, r7
   329c0:	bl	d37c <find_named_client@plt>
   329c4:	b	329d0 <hunt_server+0xd0>
   329c8:	mov	r0, r7
   329cc:	bl	d424 <find_client@plt>
   329d0:	mov	r5, r0
   329d4:	cmp	r0, #0
   329d8:	beq	329fc <hunt_server+0xfc>
   329dc:	ldr	r0, [r8, #36]	; 0x24
   329e0:	ldr	r1, [r5, #36]	; 0x24
   329e4:	cmp	r1, r0
   329e8:	bne	32a00 <hunt_server+0x100>
   329ec:	ldrb	r0, [r5, #65]	; 0x41
   329f0:	lsl	r0, r0, #26
   329f4:	and	r5, r5, r0, asr #31
   329f8:	b	32a00 <hunt_server+0x100>
   329fc:	mov	r5, #0
   32a00:	mov	r0, r7
   32a04:	bl	e108 <collapse@plt>
   32a08:	mov	r0, r7
   32a0c:	mov	r1, #63	; 0x3f
   32a10:	bl	dce8 <strchr@plt>
   32a14:	mov	r1, r0
   32a18:	mov	r0, #1
   32a1c:	cmp	r1, #0
   32a20:	bne	32a38 <hunt_server+0x138>
   32a24:	mov	r0, r7
   32a28:	mov	r1, #42	; 0x2a
   32a2c:	bl	dce8 <strchr@plt>
   32a30:	cmp	r0, #0
   32a34:	movwne	r0, #1
   32a38:	cmp	r5, #0
   32a3c:	bne	32a88 <hunt_server+0x188>
   32a40:	cmp	r0, #0
   32a44:	beq	32a88 <hunt_server+0x188>
   32a48:	ldr	r0, [pc, #404]	; 32be4 <hunt_server+0x2e4>
   32a4c:	ldr	r0, [pc, r0]
   32a50:	ldr	r6, [r0]
   32a54:	cmp	r6, #0
   32a58:	beq	32b04 <hunt_server+0x204>
   32a5c:	ldr	r0, [r6]
   32a60:	add	r1, r0, #88	; 0x58
   32a64:	mov	r0, r7
   32a68:	bl	e114 <match@plt>
   32a6c:	cmp	r0, #0
   32a70:	bne	32a84 <hunt_server+0x184>
   32a74:	ldr	r6, [r6, #8]
   32a78:	cmp	r6, #0
   32a7c:	bne	32a5c <hunt_server+0x15c>
   32a80:	b	32a88 <hunt_server+0x188>
   32a84:	ldr	r5, [r6]
   32a88:	cmp	r5, #0
   32a8c:	beq	32b04 <hunt_server+0x204>
   32a90:	ldrh	r0, [r5, #80]	; 0x50
   32a94:	cmp	r0, #9
   32a98:	bcc	32b04 <hunt_server+0x204>
   32a9c:	cmp	r0, #16
   32aa0:	beq	32b04 <hunt_server+0x204>
   32aa4:	ldrh	r0, [r5, #80]	; 0x50
   32aa8:	mov	r7, #0
   32aac:	cmp	r0, #4
   32ab0:	beq	3295c <hunt_server+0x5c>
   32ab4:	cmp	r0, #64	; 0x40
   32ab8:	bne	32acc <hunt_server+0x1cc>
   32abc:	ldr	r0, [r5, #64]	; 0x40
   32ac0:	ands	r0, r0, #8192	; 0x2000
   32ac4:	mov	r7, #0
   32ac8:	bne	3295c <hunt_server+0x5c>
   32acc:	ldr	r0, [sl, r4, lsl #2]
   32ad0:	str	r0, [fp, #-36]	; 0xffffffdc
   32ad4:	ldr	r0, [r5, #36]	; 0x24
   32ad8:	ldrh	r1, [r0, #80]	; 0x50
   32adc:	cmp	r1, #32
   32ae0:	bne	32b60 <hunt_server+0x260>
   32ae4:	ldrb	r0, [r0, #396]	; 0x18c
   32ae8:	cmp	r0, #0
   32aec:	beq	32b60 <hunt_server+0x260>
   32af0:	mov	r0, r5
   32af4:	ldrb	r1, [r0, #396]!	; 0x18c
   32af8:	cmp	r1, #0
   32afc:	subeq	r0, r0, #308	; 0x134
   32b00:	b	32b64 <hunt_server+0x264>
   32b04:	add	r0, r8, #64	; 0x40
   32b08:	ldrb	r0, [r0, #1]
   32b0c:	tst	r0, #32
   32b10:	beq	32b20 <hunt_server+0x220>
   32b14:	ldrh	r0, [r8, #80]	; 0x50
   32b18:	cmp	r0, #64	; 0x40
   32b1c:	beq	32b40 <hunt_server+0x240>
   32b20:	ldr	r0, [sl, r4, lsl #2]
   32b24:	ldrb	r0, [r0]
   32b28:	ldr	r1, [pc, #184]	; 32be8 <hunt_server+0x2e8>
   32b2c:	ldr	r1, [pc, r1]
   32b30:	ldrb	r0, [r1, r0, lsl #2]
   32b34:	mvn	r7, #0
   32b38:	tst	r0, #16
   32b3c:	bne	3295c <hunt_server+0x5c>
   32b40:	ldr	r3, [sl, r4, lsl #2]
   32b44:	ldr	r2, [pc, #160]	; 32bec <hunt_server+0x2ec>
   32b48:	add	r2, pc, r2
   32b4c:	mov	r0, r8
   32b50:	movw	r1, #402	; 0x192
   32b54:	bl	dc7c <sendto_one_numeric@plt>
   32b58:	mvn	r7, #0
   32b5c:	b	3295c <hunt_server+0x5c>
   32b60:	add	r0, r5, #88	; 0x58
   32b64:	str	r0, [sl, r4, lsl #2]
   32b68:	ldr	r0, [r5, #36]	; 0x24
   32b6c:	ldrh	r1, [r0, #80]	; 0x50
   32b70:	cmp	r1, #32
   32b74:	bne	32b94 <hunt_server+0x294>
   32b78:	ldrb	r0, [r0, #396]	; 0x18c
   32b7c:	cmp	r0, #0
   32b80:	beq	32b94 <hunt_server+0x294>
   32b84:	ldrb	r0, [r8, #396]!	; 0x18c
   32b88:	cmp	r0, #0
   32b8c:	subeq	r8, r8, #308	; 0x134
   32b90:	b	32b98 <hunt_server+0x298>
   32b94:	add	r8, r8, #88	; 0x58
   32b98:	ldr	r3, [sl, #4]
   32b9c:	add	r7, sl, #8
   32ba0:	ldm	r7, {r0, r1, r2, r7}
   32ba4:	add	lr, sl, #24
   32ba8:	ldm	lr, {r6, ip, lr}
   32bac:	sub	sp, sp, #32
   32bb0:	stm	sp, {r0, r1, r2, r7}
   32bb4:	add	r0, sp, #16
   32bb8:	stm	r0, {r6, ip, lr}
   32bbc:	mov	r0, r5
   32bc0:	mov	r1, r9
   32bc4:	mov	r2, r8
   32bc8:	bl	d1e4 <sendto_one@plt>
   32bcc:	add	sp, sp, #32
   32bd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   32bd4:	str	r0, [sl, r4, lsl #2]
   32bd8:	mov	r7, #1
   32bdc:	b	3295c <hunt_server+0x5c>
   32be0:	.word	0x00028210
   32be4:	.word	0x00027e2c
   32be8:	.word	0x00027ecc
   32bec:	.word	0x000138c4

00032bf0 <try_connections>:
   32bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32bf4:	add	fp, sp, #28
   32bf8:	sub	sp, sp, #4
   32bfc:	ldr	r0, [pc, #328]	; 32d4c <try_connections+0x15c>
   32c00:	ldr	r0, [pc, r0]
   32c04:	ldr	r5, [r0]
   32c08:	cmp	r5, #0
   32c0c:	beq	32d44 <try_connections+0x154>
   32c10:	mov	sl, #0
   32c14:	ldr	r4, [pc, #308]	; 32d50 <try_connections+0x160>
   32c18:	ldr	r4, [pc, r4]
   32c1c:	mov	r9, #0
   32c20:	mov	r0, #0
   32c24:	str	r0, [sp]
   32c28:	b	32c38 <try_connections+0x48>
   32c2c:	ldr	r5, [r5, #8]
   32c30:	cmp	r5, #0
   32c34:	beq	32cd8 <try_connections+0xe8>
   32c38:	ldr	r8, [r5]
   32c3c:	ldr	r0, [r8, #288]	; 0x120
   32c40:	and	r1, r0, #33	; 0x21
   32c44:	cmp	r1, #32
   32c48:	bne	32c2c <try_connections+0x3c>
   32c4c:	tst	r0, #64	; 0x40
   32c50:	beq	32c6c <try_connections+0x7c>
   32c54:	ldrb	r0, [r4]
   32c58:	cmp	r0, #0
   32c5c:	beq	32c2c <try_connections+0x3c>
   32c60:	bl	deb0 <get_ssld_count@plt>
   32c64:	cmp	r0, #0
   32c68:	beq	32c2c <try_connections+0x3c>
   32c6c:	ldr	r7, [r8, #296]	; 0x128
   32c70:	ldr	r6, [r8, #576]	; 0x240
   32c74:	bl	d07c <rb_current_time@plt>
   32c78:	cmp	r7, r0
   32c7c:	bgt	32c2c <try_connections+0x3c>
   32c80:	mov	r0, r6
   32c84:	bl	d3e8 <get_con_freq@plt>
   32c88:	mov	r7, r0
   32c8c:	bl	d07c <rb_current_time@plt>
   32c90:	add	r0, r0, r7
   32c94:	str	r0, [r8, #296]	; 0x128
   32c98:	ldr	r1, [r8]
   32c9c:	mov	r0, #0
   32ca0:	bl	df04 <find_server@plt>
   32ca4:	cmp	r0, #0
   32ca8:	bne	32c2c <try_connections+0x3c>
   32cac:	ldr	r0, [r6, #8]
   32cb0:	ldr	r1, [r6, #36]	; 0x24
   32cb4:	cmp	r1, r0
   32cb8:	bge	32c2c <try_connections+0x3c>
   32cbc:	ands	r0, sl, #1
   32cc0:	moveq	r9, r8
   32cc4:	ldr	r0, [sp]
   32cc8:	moveq	r0, r8
   32ccc:	str	r0, [sp]
   32cd0:	mov	sl, #1
   32cd4:	b	32c2c <try_connections+0x3c>
   32cd8:	ldr	r0, [pc, #116]	; 32d54 <try_connections+0x164>
   32cdc:	ldr	r0, [pc, r0]
   32ce0:	ldr	r0, [r0, #4]
   32ce4:	cmp	r0, #0
   32ce8:	beq	32d44 <try_connections+0x154>
   32cec:	eor	r0, sl, #1
   32cf0:	tst	r0, #1
   32cf4:	bne	32d44 <try_connections+0x154>
   32cf8:	add	r6, r9, #580	; 0x244
   32cfc:	mov	r0, r6
   32d00:	bl	32d60 <rb_dlinkDelete>
   32d04:	ldr	r2, [pc, #76]	; 32d58 <try_connections+0x168>
   32d08:	ldr	r2, [pc, r2]
   32d0c:	ldr	r0, [sp]
   32d10:	mov	r1, r6
   32d14:	bl	32dec <rb_dlinkAddTail>
   32d18:	ldr	r3, [r9]
   32d1c:	ldr	r2, [pc, #56]	; 32d5c <try_connections+0x16c>
   32d20:	add	r2, pc, r2
   32d24:	mov	r0, #256	; 0x100
   32d28:	mov	r1, #0
   32d2c:	bl	d634 <sendto_realops_snomask@plt>
   32d30:	mov	r0, r9
   32d34:	mov	r1, #0
   32d38:	sub	sp, fp, #28
   32d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32d40:	b	32ee4 <serv_connect>
   32d44:	sub	sp, fp, #28
   32d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32d4c:	.word	0x00027ee0
   32d50:	.word	0x00027d48
   32d54:	.word	0x00027b7c
   32d58:	.word	0x00027dd8
   32d5c:	.word	0x000136ff

00032d60 <rb_dlinkDelete>:
   32d60:	push	{fp, lr}
   32d64:	mov	fp, sp
   32d68:	cmp	r0, #0
   32d6c:	beq	32dbc <rb_dlinkDelete+0x5c>
   32d70:	ldr	ip, [pc, #100]	; 32ddc <rb_dlinkDelete+0x7c>
   32d74:	ldr	ip, [pc, ip]
   32d78:	ldmib	r0, {r2, r3}
   32d7c:	add	r1, r3, #4
   32d80:	cmp	r3, #0
   32d84:	addeq	r1, ip, #4
   32d88:	str	r2, [r1]
   32d8c:	ldmib	r0, {r1, r2}
   32d90:	cmp	r1, #0
   32d94:	mov	r3, ip
   32d98:	addne	r3, r1, #8
   32d9c:	str	r2, [r3]
   32da0:	mov	r1, #0
   32da4:	str	r1, [r0, #4]
   32da8:	str	r1, [r0, #8]
   32dac:	ldr	r0, [ip, #8]
   32db0:	sub	r0, r0, #1
   32db4:	str	r0, [ip, #8]
   32db8:	pop	{fp, pc}
   32dbc:	ldr	r0, [pc, #28]	; 32de0 <rb_dlinkDelete+0x80>
   32dc0:	add	r0, pc, r0
   32dc4:	ldr	r1, [pc, #24]	; 32de4 <rb_dlinkDelete+0x84>
   32dc8:	add	r1, pc, r1
   32dcc:	ldr	r3, [pc, #20]	; 32de8 <rb_dlinkDelete+0x88>
   32dd0:	add	r3, pc, r3
   32dd4:	mov	r2, #235	; 0xeb
   32dd8:	bl	e7e0 <__assert_fail@plt>
   32ddc:	.word	0x00027d6c
   32de0:	.word	0x0000db4c
   32de4:	.word	0x0000db4e
   32de8:	.word	0x0000dbe9

00032dec <rb_dlinkAddTail>:
   32dec:	push	{fp, lr}
   32df0:	mov	fp, sp
   32df4:	cmp	r1, #0
   32df8:	beq	32e60 <rb_dlinkAddTail+0x74>
   32dfc:	cmp	r2, #0
   32e00:	beq	32e80 <rb_dlinkAddTail+0x94>
   32e04:	cmp	r0, #0
   32e08:	beq	32ea0 <rb_dlinkAddTail+0xb4>
   32e0c:	mov	r3, #0
   32e10:	str	r3, [r1, #8]
   32e14:	str	r0, [r1]
   32e18:	ldr	r0, [r2, #4]
   32e1c:	str	r0, [r1, #4]
   32e20:	ldr	r0, [r2, #4]
   32e24:	cmp	r0, #0
   32e28:	beq	32e38 <rb_dlinkAddTail+0x4c>
   32e2c:	add	r0, r0, #8
   32e30:	str	r1, [r0]
   32e34:	b	32e44 <rb_dlinkAddTail+0x58>
   32e38:	ldr	r0, [r2]
   32e3c:	cmp	r0, #0
   32e40:	beq	32e58 <rb_dlinkAddTail+0x6c>
   32e44:	str	r1, [r2, #4]
   32e48:	ldr	r0, [r2, #8]
   32e4c:	add	r0, r0, #1
   32e50:	str	r0, [r2, #8]
   32e54:	pop	{fp, pc}
   32e58:	mov	r0, r2
   32e5c:	b	32e30 <rb_dlinkAddTail+0x44>
   32e60:	ldr	r0, [pc, #88]	; 32ec0 <rb_dlinkAddTail+0xd4>
   32e64:	add	r0, pc, r0
   32e68:	ldr	r1, [pc, #84]	; 32ec4 <rb_dlinkAddTail+0xd8>
   32e6c:	add	r1, pc, r1
   32e70:	ldr	r3, [pc, #80]	; 32ec8 <rb_dlinkAddTail+0xdc>
   32e74:	add	r3, pc, r3
   32e78:	mov	r2, #211	; 0xd3
   32e7c:	bl	e7e0 <__assert_fail@plt>
   32e80:	ldr	r0, [pc, #68]	; 32ecc <rb_dlinkAddTail+0xe0>
   32e84:	add	r0, pc, r0
   32e88:	ldr	r1, [pc, #64]	; 32ed0 <rb_dlinkAddTail+0xe4>
   32e8c:	add	r1, pc, r1
   32e90:	ldr	r3, [pc, #60]	; 32ed4 <rb_dlinkAddTail+0xe8>
   32e94:	add	r3, pc, r3
   32e98:	mov	r2, #212	; 0xd4
   32e9c:	bl	e7e0 <__assert_fail@plt>
   32ea0:	ldr	r0, [pc, #48]	; 32ed8 <rb_dlinkAddTail+0xec>
   32ea4:	add	r0, pc, r0
   32ea8:	ldr	r1, [pc, #44]	; 32edc <rb_dlinkAddTail+0xf0>
   32eac:	add	r1, pc, r1
   32eb0:	ldr	r3, [pc, #40]	; 32ee0 <rb_dlinkAddTail+0xf4>
   32eb4:	add	r3, pc, r3
   32eb8:	mov	r2, #213	; 0xd5
   32ebc:	bl	e7e0 <__assert_fail@plt>
   32ec0:	.word	0x0000daa8
   32ec4:	.word	0x0000daaa
   32ec8:	.word	0x0000dabe
   32ecc:	.word	0x00013311
   32ed0:	.word	0x0000da8a
   32ed4:	.word	0x0000da9e
   32ed8:	.word	0x0000dacd
   32edc:	.word	0x0000da6a
   32ee0:	.word	0x0000da7e

00032ee4 <serv_connect>:
   32ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ee8:	add	fp, sp, #28
   32eec:	sub	sp, sp, #612	; 0x264
   32ef0:	cmp	r0, #0
   32ef4:	beq	32f44 <serv_connect+0x60>
   32ef8:	mov	sl, r1
   32efc:	mov	r4, r0
   32f00:	sub	r6, fp, #288	; 0x120
   32f04:	mov	r0, #0
   32f08:	add	r7, sp, #96	; 0x60
   32f0c:	mov	r1, #0
   32f10:	add	r2, r7, r1
   32f14:	strh	r0, [r2]
   32f18:	add	r2, r6, r1
   32f1c:	strh	r0, [r2]
   32f20:	add	r1, r1, #128	; 0x80
   32f24:	cmp	r1, #256	; 0x100
   32f28:	bne	32f10 <serv_connect+0x2c>
   32f2c:	ldr	r0, [r4, #300]	; 0x12c
   32f30:	cmp	r0, #0
   32f34:	beq	32f4c <serv_connect+0x68>
   32f38:	cmp	r0, #2
   32f3c:	beq	32fc0 <serv_connect+0xdc>
   32f40:	b	32fb4 <serv_connect+0xd0>
   32f44:	mov	r7, #0
   32f48:	b	333a8 <serv_connect+0x4c4>
   32f4c:	mov	r5, r4
   32f50:	ldrh	r1, [r5, #8]!
   32f54:	cmp	r1, #2
   32f58:	bne	32fb4 <serv_connect+0xd0>
   32f5c:	mov	r8, r4
   32f60:	ldrh	r1, [r8, #140]!	; 0x8c
   32f64:	cmp	r1, #10
   32f68:	bne	32fb4 <serv_connect+0xd0>
   32f6c:	bl	e0a8 <rand@plt>
   32f70:	tst	r0, #1
   32f74:	bne	333b4 <serv_connect+0x4d0>
   32f78:	mov	r0, r6
   32f7c:	mov	r1, r5
   32f80:	mov	r2, #128	; 0x80
   32f84:	bl	d40c <memcpy@plt>
   32f88:	add	r0, r6, #128	; 0x80
   32f8c:	mov	r1, r8
   32f90:	mov	r2, #128	; 0x80
   32f94:	bl	d40c <memcpy@plt>
   32f98:	add	r1, r4, #308	; 0x134
   32f9c:	add	r5, sp, #96	; 0x60
   32fa0:	mov	r0, r5
   32fa4:	mov	r2, #128	; 0x80
   32fa8:	bl	d40c <memcpy@plt>
   32fac:	add	r7, r5, #128	; 0x80
   32fb0:	b	32ffc <serv_connect+0x118>
   32fb4:	ldrh	r1, [r4, #8]
   32fb8:	cmp	r1, #2
   32fbc:	bne	32fd8 <serv_connect+0xf4>
   32fc0:	add	r1, r4, #8
   32fc4:	sub	r0, fp, #288	; 0x120
   32fc8:	mov	r2, #128	; 0x80
   32fcc:	bl	d40c <memcpy@plt>
   32fd0:	add	r1, r4, #308	; 0x134
   32fd4:	b	33000 <serv_connect+0x11c>
   32fd8:	cmp	r0, #10
   32fdc:	beq	32fec <serv_connect+0x108>
   32fe0:	ldrh	r0, [r4, #140]	; 0x8c
   32fe4:	cmp	r0, #10
   32fe8:	bne	3300c <serv_connect+0x128>
   32fec:	add	r1, r4, #140	; 0x8c
   32ff0:	sub	r0, fp, #288	; 0x120
   32ff4:	mov	r2, #128	; 0x80
   32ff8:	bl	d40c <memcpy@plt>
   32ffc:	add	r1, r4, #440	; 0x1b8
   33000:	mov	r0, r7
   33004:	mov	r2, #128	; 0x80
   33008:	bl	d40c <memcpy@plt>
   3300c:	ldr	r5, [pc, #992]	; 333f4 <serv_connect+0x510>
   33010:	add	r5, pc, r5
   33014:	mov	r7, #0
   33018:	strb	r7, [r5]
   3301c:	sub	r0, fp, #288	; 0x120
   33020:	mov	r1, r5
   33024:	mov	r2, #512	; 0x200
   33028:	bl	cf50 <rb_inet_ntop_sock@plt>
   3302c:	ldr	r2, [r4]
   33030:	ldr	r1, [pc, #960]	; 333f8 <serv_connect+0x514>
   33034:	add	r1, pc, r1
   33038:	mov	r0, #5
   3303c:	mov	r3, r5
   33040:	bl	e0b4 <ilog@plt>
   33044:	ldr	r1, [r4]
   33048:	mov	r0, #0
   3304c:	bl	df04 <find_server@plt>
   33050:	cmp	r0, #0
   33054:	beq	330c0 <serv_connect+0x1dc>
   33058:	ldr	r3, [r4]
   3305c:	add	r5, r0, #88	; 0x58
   33060:	str	r5, [sp]
   33064:	ldr	r2, [pc, #912]	; 333fc <serv_connect+0x518>
   33068:	add	r2, pc, r2
   3306c:	mov	r0, #256	; 0x100
   33070:	mov	r1, #0
   33074:	bl	d634 <sendto_realops_snomask@plt>
   33078:	cmp	sl, #0
   3307c:	beq	333a8 <serv_connect+0x4c4>
   33080:	ldrh	r0, [sl, #80]	; 0x50
   33084:	cmp	r0, #64	; 0x40
   33088:	bne	333a8 <serv_connect+0x4c4>
   3308c:	ldr	r0, [sl, #24]
   33090:	cmp	r0, #0
   33094:	beq	333a8 <serv_connect+0x4c4>
   33098:	ldrb	r0, [sl, #65]	; 0x41
   3309c:	tst	r0, #32
   330a0:	bne	333a8 <serv_connect+0x4c4>
   330a4:	ldr	r2, [r4]
   330a8:	ldr	r1, [pc, #848]	; 33400 <serv_connect+0x51c>
   330ac:	add	r1, pc, r1
   330b0:	mov	r0, sl
   330b4:	mov	r3, r5
   330b8:	bl	e414 <sendto_one_notice@plt>
   330bc:	b	333a8 <serv_connect+0x4c4>
   330c0:	ldr	r0, [r4, #576]	; 0x240
   330c4:	ldr	r1, [r0, #8]
   330c8:	ldr	r2, [r0, #36]	; 0x24
   330cc:	cmp	r2, r1
   330d0:	bge	331f8 <serv_connect+0x314>
   330d4:	ldrh	r0, [r6]
   330d8:	cmp	r0, #0
   330dc:	beq	33268 <serv_connect+0x384>
   330e0:	mov	r7, #0
   330e4:	mov	r1, #1
   330e8:	mov	r2, #6
   330ec:	mov	r3, #0
   330f0:	bl	d5d4 <rb_socket@plt>
   330f4:	cmp	r0, #0
   330f8:	beq	3339c <serv_connect+0x4b8>
   330fc:	mov	r5, r0
   33100:	ldr	r3, [r4]
   33104:	add	r7, sp, #23
   33108:	ldr	r2, [pc, #772]	; 33414 <serv_connect+0x530>
   3310c:	add	r2, pc, r2
   33110:	mov	r0, r7
   33114:	mov	r1, #73	; 0x49
   33118:	bl	de74 <snprintf@plt>
   3311c:	mov	r0, r5
   33120:	mov	r1, r7
   33124:	bl	e270 <rb_note@plt>
   33128:	mov	r0, #0
   3312c:	bl	d4a8 <make_client@plt>
   33130:	mov	r7, r0
   33134:	ldr	r1, [r4]
   33138:	add	r0, r0, #88	; 0x58
   3313c:	mov	r2, #64	; 0x40
   33140:	bl	e510 <rb_strlcpy@plt>
   33144:	add	r0, r7, #163	; 0xa3
   33148:	ldr	r1, [r4, #4]
   3314c:	cmp	r1, #0
   33150:	bne	3315c <serv_connect+0x278>
   33154:	ldr	r1, [pc, #700]	; 33418 <serv_connect+0x534>
   33158:	add	r1, pc, r1
   3315c:	mov	r2, #64	; 0x40
   33160:	bl	e510 <rb_strlcpy@plt>
   33164:	movw	r0, #291	; 0x123
   33168:	add	r0, r7, r0
   3316c:	ldr	r1, [pc, #680]	; 3341c <serv_connect+0x538>
   33170:	add	r1, pc, r1
   33174:	mov	r2, #54	; 0x36
   33178:	bl	e510 <rb_strlcpy@plt>
   3317c:	ldr	r0, [r7, #432]	; 0x1b0
   33180:	str	r5, [r0, #300]	; 0x12c
   33184:	mov	r0, #284	; 0x11c
   33188:	ldrh	r0, [r4, r0]
   3318c:	bl	34c70 <__bswap_16>
   33190:	strh	r0, [fp, #-158]	; 0xffffff62
   33194:	strh	r0, [r6, #2]
   33198:	mov	r0, r5
   3319c:	mov	r1, #16384	; 0x4000
   331a0:	bl	e210 <rb_set_buffers@plt>
   331a4:	cmp	r0, #0
   331a8:	bne	331b8 <serv_connect+0x2d4>
   331ac:	ldr	r0, [pc, #620]	; 33420 <serv_connect+0x53c>
   331b0:	add	r0, pc, r0
   331b4:	bl	d5f8 <ilog_error@plt>
   331b8:	mov	r0, r7
   331bc:	mov	r1, r4
   331c0:	bl	e4ec <attach_server_conf@plt>
   331c4:	mov	r0, r7
   331c8:	bl	d5e0 <make_server@plt>
   331cc:	cmp	sl, #0
   331d0:	beq	33274 <serv_connect+0x390>
   331d4:	ldrh	r0, [sl, #80]	; 0x50
   331d8:	cmp	r0, #64	; 0x40
   331dc:	bne	33274 <serv_connect+0x390>
   331e0:	ldr	r0, [r7, #28]
   331e4:	add	r1, sl, #88	; 0x58
   331e8:	add	r0, r0, #4
   331ec:	mov	r2, #32
   331f0:	bl	e510 <rb_strlcpy@plt>
   331f4:	b	33294 <serv_connect+0x3b0>
   331f8:	ldr	r3, [r0, #4]
   331fc:	ldr	r0, [r4]
   33200:	str	r0, [sp]
   33204:	mov	r7, #0
   33208:	ldr	r2, [pc, #500]	; 33404 <serv_connect+0x520>
   3320c:	add	r2, pc, r2
   33210:	mov	r0, #256	; 0x100
   33214:	mov	r1, #0
   33218:	bl	d634 <sendto_realops_snomask@plt>
   3321c:	cmp	sl, #0
   33220:	beq	333a8 <serv_connect+0x4c4>
   33224:	ldrh	r0, [sl, #80]	; 0x50
   33228:	cmp	r0, #64	; 0x40
   3322c:	bne	333a8 <serv_connect+0x4c4>
   33230:	ldr	r0, [sl, #24]
   33234:	cmp	r0, #0
   33238:	beq	333a8 <serv_connect+0x4c4>
   3323c:	ldrb	r0, [sl, #65]	; 0x41
   33240:	tst	r0, #32
   33244:	bne	333a8 <serv_connect+0x4c4>
   33248:	ldr	r3, [r4]
   3324c:	ldr	r0, [r4, #576]	; 0x240
   33250:	ldr	r2, [r0, #4]
   33254:	ldr	r1, [pc, #428]	; 33408 <serv_connect+0x524>
   33258:	add	r1, pc, r1
   3325c:	mov	r0, sl
   33260:	bl	e414 <sendto_one_notice@plt>
   33264:	b	333a8 <serv_connect+0x4c4>
   33268:	ldr	r0, [pc, #412]	; 3340c <serv_connect+0x528>
   3326c:	add	r0, pc, r0
   33270:	b	333a4 <serv_connect+0x4c0>
   33274:	ldr	r0, [r7, #28]
   33278:	mov	r1, #46	; 0x2e
   3327c:	ldr	r2, [pc, #416]	; 33424 <serv_connect+0x540>
   33280:	add	r2, pc, r2
   33284:	vldr	d16, [r2]
   33288:	strh	r1, [r0, #12]
   3328c:	add	r0, r0, #4
   33290:	vst1.8	{d16}, [r0]
   33294:	mov	r8, #0
   33298:	strb	r8, [r7, #82]	; 0x52
   3329c:	mov	r0, #1
   332a0:	strh	r0, [r7, #80]	; 0x50
   332a4:	ldr	r2, [pc, #380]	; 33428 <serv_connect+0x544>
   332a8:	ldr	r2, [pc, r2]
   332ac:	mov	r0, r7
   332b0:	str	r7, [sp, #8]
   332b4:	mov	r1, r7
   332b8:	bl	32dec <rb_dlinkAddTail>
   332bc:	ldr	r0, [pc, #360]	; 3342c <serv_connect+0x548>
   332c0:	ldr	r0, [pc, r0]
   332c4:	ldrh	r9, [r0, #148]	; 0x94
   332c8:	ldrh	sl, [r0, #20]
   332cc:	add	r5, sp, #96	; 0x60
   332d0:	add	r1, r0, #20
   332d4:	str	r1, [sp, #16]
   332d8:	add	r0, r0, #148	; 0x94
   332dc:	str	r0, [sp, #12]
   332e0:	b	332f0 <serv_connect+0x40c>
   332e4:	add	r8, r8, #128	; 0x80
   332e8:	cmp	r8, #256	; 0x100
   332ec:	beq	33340 <serv_connect+0x45c>
   332f0:	add	r6, r5, r8
   332f4:	ldrh	r0, [r6]
   332f8:	cmp	r0, #0
   332fc:	bne	332e4 <serv_connect+0x400>
   33300:	sub	r0, fp, #288	; 0x120
   33304:	add	r0, r0, r8
   33308:	ldrh	r7, [r0]
   3330c:	cmp	r7, sl
   33310:	bne	33324 <serv_connect+0x440>
   33314:	mov	r0, r6
   33318:	ldr	r1, [sp, #16]
   3331c:	mov	r2, #128	; 0x80
   33320:	bl	d40c <memcpy@plt>
   33324:	cmp	r7, r9
   33328:	bne	332e4 <serv_connect+0x400>
   3332c:	mov	r0, r6
   33330:	ldr	r1, [sp, #12]
   33334:	mov	r2, #128	; 0x80
   33338:	bl	d40c <memcpy@plt>
   3333c:	b	332e4 <serv_connect+0x400>
   33340:	ldr	r3, [sp, #8]
   33344:	ldr	r0, [r3, #432]	; 0x1b0
   33348:	ldr	r0, [r0, #300]	; 0x12c
   3334c:	ldr	r1, [r4, #288]	; 0x120
   33350:	ldr	r2, [pc, #216]	; 33430 <serv_connect+0x54c>
   33354:	ldr	r2, [pc, r2]
   33358:	ldr	r2, [r2, #272]	; 0x110
   3335c:	ldrh	r7, [sp, #96]	; 0x60
   33360:	str	r3, [sp]
   33364:	str	r2, [sp, #4]
   33368:	ldr	r2, [pc, #196]	; 33434 <serv_connect+0x550>
   3336c:	add	r2, pc, r2
   33370:	ldr	r3, [pc, #192]	; 33438 <serv_connect+0x554>
   33374:	add	r3, pc, r3
   33378:	tst	r1, #64	; 0x40
   3337c:	moveq	r3, r2
   33380:	cmp	r7, #0
   33384:	moveq	r5, r7
   33388:	sub	r1, fp, #288	; 0x120
   3338c:	mov	r2, r5
   33390:	bl	d2bc <rb_connect_tcp@plt>
   33394:	mov	r7, #1
   33398:	b	333a8 <serv_connect+0x4c4>
   3339c:	ldr	r0, [pc, #108]	; 33410 <serv_connect+0x52c>
   333a0:	add	r0, pc, r0
   333a4:	bl	d5f8 <ilog_error@plt>
   333a8:	mov	r0, r7
   333ac:	sub	sp, fp, #28
   333b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   333b4:	mov	r0, r6
   333b8:	mov	r1, r8
   333bc:	mov	r2, #128	; 0x80
   333c0:	bl	d40c <memcpy@plt>
   333c4:	add	r0, r6, #128	; 0x80
   333c8:	mov	r1, r5
   333cc:	mov	r2, #128	; 0x80
   333d0:	bl	d40c <memcpy@plt>
   333d4:	add	r1, r4, #440	; 0x1b8
   333d8:	add	r5, sp, #96	; 0x60
   333dc:	mov	r0, r5
   333e0:	mov	r2, #128	; 0x80
   333e4:	bl	d40c <memcpy@plt>
   333e8:	add	r7, r5, #128	; 0x80
   333ec:	add	r1, r4, #308	; 0x134
   333f0:	b	33000 <serv_connect+0x11c>
   333f4:	.word	0x00038148
   333f8:	.word	0x00013567
   333fc:	.word	0x00013549
   33400:	.word	0x00013504
   33404:	.word	0x000133c8
   33408:	.word	0x0001337b
   3340c:	.word	0x000133a0
   33410:	.word	0x0001328e
   33414:	.word	0x00013415
   33418:	.word	0x00038000
   3341c:	.word	0x00037fe8
   33420:	.word	0x00013496
   33424:	.word	0x00013698
   33428:	.word	0x000277e8
   3342c:	.word	0x00027690
   33430:	.word	0x00027828
   33434:	.word	0x00001a04
   33438:	.word	0x000018fc

0003343c <check_server>:
   3343c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33440:	add	fp, sp, #28
   33444:	sub	sp, sp, #140	; 0x8c
   33448:	mov	r5, r0
   3344c:	mvn	r0, #0
   33450:	cmp	r1, #0
   33454:	beq	33658 <check_server+0x21c>
   33458:	mov	r4, r1
   3345c:	ldr	r0, [r1, #432]	; 0x1b0
   33460:	ldr	r0, [r0, #276]	; 0x114
   33464:	cmp	r0, #0
   33468:	beq	334c0 <check_server+0x84>
   3346c:	mov	r0, r5
   33470:	bl	dc94 <strlen@plt>
   33474:	mov	r1, r0
   33478:	mvn	r0, #3
   3347c:	cmp	r1, #63	; 0x3f
   33480:	bhi	33658 <check_server+0x21c>
   33484:	ldr	r0, [pc, #664]	; 33724 <check_server+0x2e8>
   33488:	ldr	r0, [pc, r0]
   3348c:	ldr	r6, [r0]
   33490:	cmp	r6, #0
   33494:	mvn	r0, #0
   33498:	beq	33658 <check_server+0x21c>
   3349c:	movw	r0, #291	; 0x123
   334a0:	add	r0, r4, r0
   334a4:	str	r0, [sp, #8]
   334a8:	add	r0, r4, #163	; 0xa3
   334ac:	str	r0, [sp, #4]
   334b0:	mov	r8, #0
   334b4:	mov	r9, #0
   334b8:	mov	sl, #0
   334bc:	b	334e0 <check_server+0xa4>
   334c0:	mvn	r0, #1
   334c4:	sub	sp, fp, #28
   334c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   334cc:	mov	r9, #1
   334d0:	mov	r8, #1
   334d4:	ldr	r6, [r6, #8]
   334d8:	cmp	r6, #0
   334dc:	beq	33634 <check_server+0x1f8>
   334e0:	ldr	r7, [r6]
   334e4:	ldrb	r0, [r7, #288]	; 0x120
   334e8:	tst	r0, #1
   334ec:	bne	334d4 <check_server+0x98>
   334f0:	ldr	r0, [r7]
   334f4:	mov	r1, r5
   334f8:	bl	e114 <match@plt>
   334fc:	cmp	r0, #0
   33500:	beq	334d4 <check_server+0x98>
   33504:	ldr	r0, [sp, #8]
   33508:	add	r1, sp, #12
   3350c:	bl	e000 <rb_inet_pton_sock@plt>
   33510:	cmp	r0, #0
   33514:	movle	r0, #0
   33518:	strhle	r0, [sp, #12]
   3351c:	ldr	r0, [r7, #4]
   33520:	cmp	r0, #0
   33524:	beq	33538 <check_server+0xfc>
   33528:	ldr	r1, [sp, #4]
   3352c:	bl	e114 <match@plt>
   33530:	cmp	r0, #0
   33534:	bne	3358c <check_server+0x150>
   33538:	mov	r1, r7
   3353c:	ldrh	r0, [r1, #8]!
   33540:	ldrh	r2, [sp, #12]
   33544:	cmp	r2, r0
   33548:	bne	33560 <check_server+0x124>
   3354c:	add	r0, sp, #12
   33550:	mov	r2, #32
   33554:	bl	d034 <comp_with_mask_sock@plt>
   33558:	cmp	r0, #0
   3355c:	bne	3358c <check_server+0x150>
   33560:	mov	r1, r7
   33564:	ldrh	r0, [r1, #140]!	; 0x8c
   33568:	mov	sl, #1
   3356c:	ldrh	r2, [sp, #12]
   33570:	cmp	r2, r0
   33574:	bne	334d4 <check_server+0x98>
   33578:	add	r0, sp, #12
   3357c:	mov	r2, #128	; 0x80
   33580:	bl	d034 <comp_with_mask_sock@plt>
   33584:	cmp	r0, #0
   33588:	beq	334d4 <check_server+0x98>
   3358c:	ldr	r1, [r7, #272]	; 0x110
   33590:	cmp	r1, #0
   33594:	beq	335c8 <check_server+0x18c>
   33598:	ldrb	r0, [r7, #288]	; 0x120
   3359c:	ldr	r2, [r4, #432]	; 0x1b0
   335a0:	ldr	r2, [r2, #276]	; 0x114
   335a4:	tst	r0, #4
   335a8:	bne	335fc <check_server+0x1c0>
   335ac:	mov	r0, r1
   335b0:	mov	r1, r2
   335b4:	bl	d0c4 <strcmp@plt>
   335b8:	mov	sl, #1
   335bc:	cmp	r0, #0
   335c0:	mov	r9, #1
   335c4:	bne	334d4 <check_server+0x98>
   335c8:	ldr	r0, [r7, #280]	; 0x118
   335cc:	cmp	r0, #0
   335d0:	beq	33660 <check_server+0x224>
   335d4:	ldr	r1, [r4, #444]	; 0x1bc
   335d8:	mov	sl, #1
   335dc:	cmp	r1, #0
   335e0:	beq	334cc <check_server+0x90>
   335e4:	bl	d340 <rb_strcasecmp@plt>
   335e8:	cmp	r0, #0
   335ec:	mov	r9, #1
   335f0:	mov	r8, #1
   335f4:	bne	334d4 <check_server+0x98>
   335f8:	b	33660 <check_server+0x224>
   335fc:	mov	r0, r2
   33600:	bl	d97c <rb_crypt@plt>
   33604:	mov	sl, #1
   33608:	cmp	r0, #0
   3360c:	beq	3362c <check_server+0x1f0>
   33610:	mov	r1, r0
   33614:	ldr	r0, [r7, #272]	; 0x110
   33618:	bl	d0c4 <strcmp@plt>
   3361c:	cmp	r0, #0
   33620:	mov	r9, #1
   33624:	bne	334d4 <check_server+0x98>
   33628:	b	33660 <check_server+0x224>
   3362c:	mov	r9, #1
   33630:	b	334d4 <check_server+0x98>
   33634:	mvn	r0, #1
   33638:	tst	r8, #1
   3363c:	mvnne	r0, #5
   33640:	orr	r1, r9, r8
   33644:	tst	r1, #1
   33648:	bne	33658 <check_server+0x21c>
   3364c:	mvn	r0, #0
   33650:	tst	sl, #1
   33654:	mvnne	r0, #2
   33658:	sub	sp, fp, #28
   3365c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33660:	ldrb	r0, [r7, #288]	; 0x120
   33664:	tst	r0, #64	; 0x40
   33668:	beq	3367c <check_server+0x240>
   3366c:	ldr	r0, [r4, #432]	; 0x1b0
   33670:	ldr	r0, [r0, #436]	; 0x1b4
   33674:	cmp	r0, #0
   33678:	beq	33718 <check_server+0x2dc>
   3367c:	ldr	r0, [r4, #432]	; 0x1b0
   33680:	ldr	r0, [r0, #136]	; 0x88
   33684:	cmp	r0, #0
   33688:	beq	3369c <check_server+0x260>
   3368c:	ldr	r1, [r7, #576]	; 0x240
   33690:	ldr	r0, [r0, #576]	; 0x240
   33694:	cmp	r0, r1
   33698:	beq	336b4 <check_server+0x278>
   3369c:	ldr	r0, [r7, #576]	; 0x240
   336a0:	ldr	r1, [r0, #8]
   336a4:	ldr	r2, [r0, #36]	; 0x24
   336a8:	mvn	r0, #6
   336ac:	cmp	r2, r1
   336b0:	bge	33658 <check_server+0x21c>
   336b4:	mov	r0, r4
   336b8:	mov	r1, r7
   336bc:	bl	e4ec <attach_server_conf@plt>
   336c0:	ldr	r1, [r7, #288]	; 0x120
   336c4:	tst	r1, #8
   336c8:	bne	336e8 <check_server+0x2ac>
   336cc:	ldr	r0, [pc, #84]	; 33728 <check_server+0x2ec>
   336d0:	ldr	r0, [pc, r0]
   336d4:	ldr	r0, [r0]
   336d8:	ldr	r2, [r4, #432]	; 0x1b0
   336dc:	ldr	r3, [r2, #296]	; 0x128
   336e0:	bic	r0, r3, r0
   336e4:	str	r0, [r2, #296]	; 0x128
   336e8:	mov	r0, #0
   336ec:	tst	r1, #16
   336f0:	bne	33658 <check_server+0x21c>
   336f4:	ldr	r1, [pc, #48]	; 3372c <check_server+0x2f0>
   336f8:	ldr	r1, [pc, r1]
   336fc:	ldr	r1, [r1]
   33700:	ldr	r2, [r4, #432]	; 0x1b0
   33704:	ldr	r3, [r2, #296]	; 0x128
   33708:	bic	r1, r3, r1
   3370c:	str	r1, [r2, #296]	; 0x128
   33710:	sub	sp, fp, #28
   33714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33718:	mvn	r0, #4
   3371c:	sub	sp, fp, #28
   33720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33724:	.word	0x00027658
   33728:	.word	0x00027214
   3372c:	.word	0x0002721c

00033730 <send_capabilities>:
   33730:	push	{r4, sl, fp, lr}
   33734:	add	fp, sp, #8
   33738:	mov	r4, r0
   3373c:	ldr	r0, [pc, #32]	; 33764 <send_capabilities+0x34>
   33740:	ldr	r0, [pc, r0]
   33744:	ldr	r0, [r0]
   33748:	bl	deec <capability_index_list@plt>
   3374c:	mov	r2, r0
   33750:	ldr	r1, [pc, #16]	; 33768 <send_capabilities+0x38>
   33754:	add	r1, pc, r1
   33758:	mov	r0, r4
   3375c:	pop	{r4, sl, fp, lr}
   33760:	b	d1e4 <sendto_one@plt>
   33764:	.word	0x00027140
   33768:	.word	0x00012ce6

0003376c <show_capabilities>:
   3376c:	push	{r4, r5, r6, sl, fp, lr}
   33770:	add	fp, sp, #16
   33774:	mov	r4, r0
   33778:	ldr	r6, [pc, #188]	; 3383c <show_capabilities+0xd0>
   3377c:	add	r6, pc, r6
   33780:	mov	r0, #0
   33784:	strb	r0, [r6]
   33788:	ldrb	r0, [r4, #396]	; 0x18c
   3378c:	cmp	r0, #0
   33790:	beq	337ac <show_capabilities+0x40>
   33794:	ldr	r0, [pc, #164]	; 33840 <show_capabilities+0xd4>
   33798:	add	r0, pc, r0
   3379c:	ldr	r1, [pc, #160]	; 33844 <show_capabilities+0xd8>
   337a0:	add	r1, pc, r1
   337a4:	mov	r2, #512	; 0x200
   337a8:	bl	e510 <rb_strlcpy@plt>
   337ac:	ldr	r0, [r4, #432]	; 0x1b0
   337b0:	ldrb	r0, [r0, #452]	; 0x1c4
   337b4:	tst	r0, #1
   337b8:	beq	337d4 <show_capabilities+0x68>
   337bc:	ldr	r0, [pc, #132]	; 33848 <show_capabilities+0xdc>
   337c0:	add	r0, pc, r0
   337c4:	ldr	r1, [pc, #128]	; 3384c <show_capabilities+0xe0>
   337c8:	add	r1, pc, r1
   337cc:	mov	r2, #512	; 0x200
   337d0:	bl	e7d4 <rb_strlcat@plt>
   337d4:	ldrh	r0, [r4, #80]	; 0x50
   337d8:	cmp	r0, #32
   337dc:	bne	33834 <show_capabilities+0xc8>
   337e0:	ldr	r0, [r4, #28]
   337e4:	ldr	r0, [r0, #60]	; 0x3c
   337e8:	cmp	r0, #0
   337ec:	beq	33834 <show_capabilities+0xc8>
   337f0:	ldr	r5, [pc, #88]	; 33850 <show_capabilities+0xe4>
   337f4:	add	r5, pc, r5
   337f8:	ldr	r1, [pc, #84]	; 33854 <show_capabilities+0xe8>
   337fc:	add	r1, pc, r1
   33800:	mov	r0, r5
   33804:	mov	r2, #512	; 0x200
   33808:	bl	e7d4 <rb_strlcat@plt>
   3380c:	ldr	r0, [pc, #68]	; 33858 <show_capabilities+0xec>
   33810:	ldr	r0, [pc, r0]
   33814:	ldr	r0, [r0]
   33818:	ldr	r1, [r4, #28]
   3381c:	ldr	r1, [r1, #60]	; 0x3c
   33820:	bl	deec <capability_index_list@plt>
   33824:	mov	r1, r0
   33828:	mov	r0, r5
   3382c:	mov	r2, #512	; 0x200
   33830:	bl	e7d4 <rb_strlcat@plt>
   33834:	add	r0, r6, #1
   33838:	pop	{r4, r5, r6, sl, fp, pc}
   3383c:	.word	0x000377dc
   33840:	.word	0x000377c0
   33844:	.word	0x00012ca4
   33848:	.word	0x00037798
   3384c:	.word	0x00012c81
   33850:	.word	0x00037764
   33854:	.word	0x00012cbc
   33858:	.word	0x00027070

0003385c <server_estab>:
   3385c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33860:	add	fp, sp, #28
   33864:	sub	sp, sp, #124	; 0x7c
   33868:	cmp	r0, #0
   3386c:	beq	33904 <server_estab+0xa8>
   33870:	mov	r4, r0
   33874:	add	sl, r0, #88	; 0x58
   33878:	ldr	r0, [r0, #432]	; 0x1b0
   3387c:	ldr	r6, [r0, #136]	; 0x88
   33880:	cmp	r6, #0
   33884:	beq	33910 <server_estab+0xb4>
   33888:	ldr	r5, [r0, #276]	; 0x114
   3388c:	cmp	r5, #0
   33890:	beq	338c4 <server_estab+0x68>
   33894:	mov	r0, r5
   33898:	bl	dc94 <strlen@plt>
   3389c:	mov	r2, r0
   338a0:	mov	r7, #0
   338a4:	mov	r0, r5
   338a8:	mov	r1, #0
   338ac:	bl	df28 <memset@plt>
   338b0:	ldr	r0, [r4, #432]	; 0x1b0
   338b4:	ldr	r0, [r0, #276]	; 0x114
   338b8:	bl	340e4 <rb_free>
   338bc:	ldr	r0, [r4, #432]	; 0x1b0
   338c0:	str	r7, [r0, #276]	; 0x114
   338c4:	mov	r9, r4
   338c8:	ldr	r0, [r9, #64]!	; 0x40
   338cc:	orr	r0, r0, #128	; 0x80
   338d0:	str	r0, [r9]
   338d4:	ldrh	r0, [r9, #16]
   338d8:	cmp	r0, #8
   338dc:	bne	33a4c <server_estab+0x1f0>
   338e0:	ldr	r0, [r6, #276]	; 0x114
   338e4:	cmp	r0, #0
   338e8:	beq	33958 <server_estab+0xfc>
   338ec:	ldrb	r1, [r0]
   338f0:	ldr	r2, [pc, #1840]	; 34028 <server_estab+0x7cc>
   338f4:	add	r2, pc, r2
   338f8:	cmp	r1, #0
   338fc:	movne	r2, r0
   33900:	b	33960 <server_estab+0x104>
   33904:	mvn	r0, #0
   33908:	sub	sp, fp, #28
   3390c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33910:	mov	r0, r4
   33914:	bl	dea4 <is_remote_connect@plt>
   33918:	cmp	r0, #0
   3391c:	movwne	r0, #1
   33920:	lsl	r1, r0, #8
   33924:	ldr	r2, [pc, #1776]	; 3401c <server_estab+0x7c0>
   33928:	add	r2, pc, r2
   3392c:	mov	r0, #256	; 0x100
   33930:	mov	r3, sl
   33934:	bl	d634 <sendto_realops_snomask@plt>
   33938:	ldr	r3, [pc, #1760]	; 34020 <server_estab+0x7c4>
   3393c:	add	r3, pc, r3
   33940:	mov	r0, r4
   33944:	mov	r1, r4
   33948:	mov	r2, r4
   3394c:	bl	e534 <exit_client@plt>
   33950:	sub	sp, fp, #28
   33954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33958:	ldr	r2, [pc, #1732]	; 34024 <server_estab+0x7c8>
   3395c:	add	r2, pc, r2
   33960:	ldr	r5, [pc, #1732]	; 3402c <server_estab+0x7d0>
   33964:	ldr	r5, [pc, r5]
   33968:	add	r0, r5, #396	; 0x18c
   3396c:	str	r0, [sp]
   33970:	ldr	r1, [pc, #1720]	; 34030 <server_estab+0x7d4>
   33974:	add	r1, pc, r1
   33978:	mov	r0, r4
   3397c:	mov	r3, #6
   33980:	bl	d1e4 <sendto_one@plt>
   33984:	ldr	r0, [pc, #1704]	; 34034 <server_estab+0x7d8>
   33988:	ldr	r0, [pc, r0]
   3398c:	ldr	r7, [r0]
   33990:	ldr	r0, [pc, #1696]	; 34038 <server_estab+0x7dc>
   33994:	ldr	r0, [pc, r0]
   33998:	ldr	r0, [r0]
   3399c:	bl	d8f8 <capability_index_mask@plt>
   339a0:	ldr	r1, [pc, #1684]	; 3403c <server_estab+0x7e0>
   339a4:	ldr	r1, [pc, r1]
   339a8:	ldr	r1, [r1]
   339ac:	ldr	r2, [pc, #1676]	; 34040 <server_estab+0x7e4>
   339b0:	ldr	r2, [pc, r2]
   339b4:	ldr	r2, [r2]
   339b8:	orr	r1, r2, r1
   339bc:	bic	r0, r0, r1
   339c0:	orr	r1, r0, r7
   339c4:	ldr	r0, [pc, #1656]	; 34044 <server_estab+0x7e8>
   339c8:	ldr	r0, [pc, r0]
   339cc:	ldr	r0, [r0]
   339d0:	ldr	r2, [r6, #288]	; 0x120
   339d4:	tst	r2, #8
   339d8:	orrne	r1, r1, r0
   339dc:	ldr	r0, [pc, #1636]	; 34048 <server_estab+0x7ec>
   339e0:	ldr	r0, [pc, r0]
   339e4:	ldr	r0, [r0]
   339e8:	tst	r2, #16
   339ec:	orrne	r1, r1, r0
   339f0:	mov	r0, r4
   339f4:	bl	d0dc <send_capabilities@plt>
   339f8:	ldrb	r0, [r5, #345]!	; 0x159
   339fc:	ldr	r1, [pc, #1608]	; 3404c <server_estab+0x7f0>
   33a00:	add	r1, pc, r1
   33a04:	cmp	r0, #0
   33a08:	movne	r1, r5
   33a0c:	ldr	r0, [pc, #1596]	; 34050 <server_estab+0x7f4>
   33a10:	ldr	r0, [pc, r0]
   33a14:	ldr	r0, [r0, #8]
   33a18:	str	r1, [sp]
   33a1c:	ldr	r1, [pc, #1584]	; 34054 <server_estab+0x7f8>
   33a20:	add	r1, pc, r1
   33a24:	ldr	r3, [pc, #1580]	; 34058 <server_estab+0x7fc>
   33a28:	add	r3, pc, r3
   33a2c:	cmp	r0, #0
   33a30:	moveq	r3, r1
   33a34:	movw	r0, #257	; 0x101
   33a38:	sub	r2, r5, r0
   33a3c:	ldr	r1, [pc, #1560]	; 3405c <server_estab+0x800>
   33a40:	add	r1, pc, r1
   33a44:	mov	r0, r4
   33a48:	bl	d1e4 <sendto_one@plt>
   33a4c:	ldr	r0, [r4, #432]	; 0x1b0
   33a50:	ldr	r0, [r0, #300]	; 0x12c
   33a54:	mov	r1, #16384	; 0x4000
   33a58:	bl	e210 <rb_set_buffers@plt>
   33a5c:	cmp	r0, #0
   33a60:	bne	33a70 <server_estab+0x214>
   33a64:	ldr	r0, [pc, #1524]	; 34060 <server_estab+0x804>
   33a68:	add	r0, pc, r0
   33a6c:	bl	d5f8 <ilog_error@plt>
   33a70:	ldr	r0, [pc, #1516]	; 34064 <server_estab+0x808>
   33a74:	ldr	r0, [pc, r0]
   33a78:	ldr	r0, [r0]
   33a7c:	ldr	r1, [r4, #432]	; 0x1b0
   33a80:	ldr	r1, [r1, #296]	; 0x128
   33a84:	and	r1, r0, r1
   33a88:	cmp	r1, r0
   33a8c:	bne	33a98 <server_estab+0x23c>
   33a90:	mov	r0, r4
   33a94:	bl	db74 <start_zlib_session@plt>
   33a98:	ldr	r5, [pc, #1480]	; 34068 <server_estab+0x80c>
   33a9c:	ldr	r5, [pc, r5]
   33aa0:	str	r5, [r4, #32]
   33aa4:	ldrh	r1, [r9]
   33aa8:	mvn	r0, #1
   33aac:	movw	r2, #16418	; 0x4022
   33ab0:	tst	r1, r2
   33ab4:	beq	33ac0 <server_estab+0x264>
   33ab8:	sub	sp, fp, #28
   33abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ac0:	bl	d07c <rb_current_time@plt>
   33ac4:	str	r0, [sp]
   33ac8:	ldr	r1, [pc, #1436]	; 3406c <server_estab+0x810>
   33acc:	add	r1, pc, r1
   33ad0:	mov	r0, r4
   33ad4:	mov	r2, #6
   33ad8:	mov	r3, #6
   33adc:	bl	d1e4 <sendto_one@plt>
   33ae0:	ldr	r0, [r5, #28]
   33ae4:	add	r1, r4, #12
   33ae8:	add	r2, r0, #36	; 0x24
   33aec:	mov	r0, r4
   33af0:	bl	340f0 <rb_dlinkAdd>
   33af4:	ldr	r0, [r4, #432]	; 0x1b0
   33af8:	bl	341e0 <rb_dlinkMoveNode>
   33afc:	bl	dc58 <rb_make_rb_dlink_node@plt>
   33b00:	mov	r1, r0
   33b04:	ldr	r2, [pc, #1380]	; 34070 <server_estab+0x814>
   33b08:	ldr	r2, [pc, r2]
   33b0c:	mov	r0, r4
   33b10:	bl	32dec <rb_dlinkAddTail>
   33b14:	mov	r8, r4
   33b18:	ldrb	r0, [r8, #396]!	; 0x18c
   33b1c:	cmp	r0, #0
   33b20:	beq	33b30 <server_estab+0x2d4>
   33b24:	mov	r0, r8
   33b28:	mov	r1, r4
   33b2c:	bl	d0d0 <add_to_id_hash@plt>
   33b30:	mov	r0, sl
   33b34:	mov	r1, r4
   33b38:	bl	da3c <add_to_client_hash@plt>
   33b3c:	mov	r0, r4
   33b40:	bl	d5e0 <make_server@plt>
   33b44:	mov	r0, #3
   33b48:	strb	r0, [r4, #82]	; 0x52
   33b4c:	mov	r0, #32
   33b50:	strh	r0, [r4, #80]	; 0x50
   33b54:	ldr	r0, [r4, #28]
   33b58:	ldr	r1, [r4, #432]	; 0x1b0
   33b5c:	ldr	r2, [r1, #296]	; 0x128
   33b60:	str	r2, [r0, #60]	; 0x3c
   33b64:	ldr	r0, [r1, #288]	; 0x120
   33b68:	cmp	r0, #0
   33b6c:	beq	33b94 <server_estab+0x338>
   33b70:	bl	342ac <rb_strdup>
   33b74:	ldr	r1, [r4, #28]
   33b78:	str	r0, [r1, #64]	; 0x40
   33b7c:	ldr	r0, [r4, #432]	; 0x1b0
   33b80:	ldr	r0, [r0, #288]	; 0x120
   33b84:	bl	340e4 <rb_free>
   33b88:	ldr	r0, [r4, #432]	; 0x1b0
   33b8c:	mov	r1, #0
   33b90:	str	r1, [r0, #288]	; 0x120
   33b94:	movw	r0, #345	; 0x159
   33b98:	add	r7, r4, r0
   33b9c:	ldr	r0, [r9]
   33ba0:	and	r2, r0, #2048	; 0x800
   33ba4:	mov	r0, sl
   33ba8:	mov	r1, r7
   33bac:	bl	e2b8 <scache_connect@plt>
   33bb0:	ldr	r1, [r4, #28]
   33bb4:	str	r0, [r1, #68]	; 0x44
   33bb8:	bl	d07c <rb_current_time@plt>
   33bbc:	ldr	r1, [r4, #432]	; 0x1b0
   33bc0:	str	r0, [r1, #48]	; 0x30
   33bc4:	ldr	r0, [pc, #1192]	; 34074 <server_estab+0x818>
   33bc8:	ldr	r0, [pc, r0]
   33bcc:	ldr	r0, [r0, #8]
   33bd0:	ldr	r1, [pc, #1184]	; 34078 <server_estab+0x81c>
   33bd4:	ldr	r1, [pc, r1]
   33bd8:	ldr	r1, [r1, #8]
   33bdc:	add	r0, r1, r0
   33be0:	ldr	r1, [pc, #1172]	; 3407c <server_estab+0x820>
   33be4:	ldr	r1, [pc, r1]
   33be8:	ldr	r2, [r1]
   33bec:	cmp	r0, r2
   33bf0:	strhi	r0, [r1]
   33bf4:	mov	r0, r4
   33bf8:	bl	dda8 <show_capabilities@plt>
   33bfc:	ldr	r0, [pc, #1148]	; 34080 <server_estab+0x824>
   33c00:	add	r0, pc, r0
   33c04:	add	r5, r0, #1
   33c08:	str	r5, [sp]
   33c0c:	ldr	r2, [pc, #1136]	; 34084 <server_estab+0x828>
   33c10:	add	r2, pc, r2
   33c14:	mov	r0, #256	; 0x100
   33c18:	mov	r1, #0
   33c1c:	mov	r3, sl
   33c20:	bl	d634 <sendto_realops_snomask@plt>
   33c24:	mov	r0, r4
   33c28:	mov	r1, #1
   33c2c:	bl	e168 <log_client_name@plt>
   33c30:	mov	r6, r0
   33c34:	mov	r0, r4
   33c38:	bl	dda8 <show_capabilities@plt>
   33c3c:	mov	r0, #5
   33c40:	ldr	r1, [pc, #1088]	; 34088 <server_estab+0x82c>
   33c44:	add	r1, pc, r1
   33c48:	mov	r2, r6
   33c4c:	mov	r3, r5
   33c50:	bl	e0b4 <ilog@plt>
   33c54:	str	r4, [fp, #-40]	; 0xffffffd8
   33c58:	ldr	r0, [pc, #1068]	; 3408c <server_estab+0x830>
   33c5c:	ldr	r0, [pc, r0]
   33c60:	str	r0, [fp, #-44]	; 0xffffffd4
   33c64:	ldr	r0, [pc, #1060]	; 34090 <server_estab+0x834>
   33c68:	ldr	r0, [pc, r0]
   33c6c:	ldr	r0, [r0]
   33c70:	sub	r1, fp, #44	; 0x2c
   33c74:	bl	e654 <call_hook@plt>
   33c78:	add	r6, sp, #30
   33c7c:	ldr	r2, [pc, #1040]	; 34094 <server_estab+0x838>
   33c80:	add	r2, pc, r2
   33c84:	mov	r0, r6
   33c88:	mov	r1, #78	; 0x4e
   33c8c:	mov	r5, sl
   33c90:	mov	r3, sl
   33c94:	bl	de74 <snprintf@plt>
   33c98:	ldr	r0, [r4, #432]	; 0x1b0
   33c9c:	ldr	r0, [r0, #300]	; 0x12c
   33ca0:	mov	r1, r6
   33ca4:	bl	e270 <rb_note@plt>
   33ca8:	ldr	r0, [pc, #1000]	; 34098 <server_estab+0x83c>
   33cac:	ldr	r0, [pc, r0]
   33cb0:	ldr	r6, [r0]
   33cb4:	cmp	r6, #0
   33cb8:	beq	33dfc <server_estab+0x5a0>
   33cbc:	ldr	r0, [pc, #984]	; 3409c <server_estab+0x840>
   33cc0:	ldr	r0, [pc, r0]
   33cc4:	add	r1, r0, #88	; 0x58
   33cc8:	str	r1, [sp, #24]
   33ccc:	add	r0, r0, #396	; 0x18c
   33cd0:	str	r0, [sp, #20]
   33cd4:	b	33cf8 <server_estab+0x49c>
   33cd8:	mov	r0, sl
   33cdc:	ldr	r1, [pc, #1000]	; 340cc <server_estab+0x870>
   33ce0:	add	r1, pc, r1
   33ce4:	mov	r2, r5
   33ce8:	bl	d1e4 <sendto_one@plt>
   33cec:	ldr	r6, [r6, #8]
   33cf0:	cmp	r6, #0
   33cf4:	beq	33dfc <server_estab+0x5a0>
   33cf8:	ldr	sl, [r6]
   33cfc:	cmp	sl, r4
   33d00:	beq	33cec <server_estab+0x490>
   33d04:	ldr	r0, [sl, #432]	; 0x1b0
   33d08:	ldr	r0, [r0, #136]	; 0x88
   33d0c:	cmp	r0, #0
   33d10:	beq	33d20 <server_estab+0x4c4>
   33d14:	ldrb	r0, [r0, #288]	; 0x120
   33d18:	tst	r0, #128	; 0x80
   33d1c:	bne	33cec <server_estab+0x490>
   33d20:	ldrb	r0, [sl, #396]	; 0x18c
   33d24:	cmp	r0, #0
   33d28:	beq	33da4 <server_estab+0x548>
   33d2c:	ldrb	r0, [r8]
   33d30:	cmp	r0, #0
   33d34:	beq	33da4 <server_estab+0x548>
   33d38:	ldr	r0, [r9]
   33d3c:	tst	r0, #2048	; 0x800
   33d40:	ldr	r0, [pc, #856]	; 340a0 <server_estab+0x844>
   33d44:	add	r0, pc, r0
   33d48:	ldr	r1, [pc, #852]	; 340a4 <server_estab+0x848>
   33d4c:	add	r1, pc, r1
   33d50:	moveq	r0, r1
   33d54:	str	r8, [sp]
   33d58:	stmib	sp, {r0, r7}
   33d5c:	mov	r0, sl
   33d60:	ldr	r1, [pc, #832]	; 340a8 <server_estab+0x84c>
   33d64:	add	r1, pc, r1
   33d68:	ldr	r2, [sp, #20]
   33d6c:	mov	r3, r5
   33d70:	bl	d1e4 <sendto_one@plt>
   33d74:	ldr	r0, [r4, #28]
   33d78:	ldr	r3, [r0, #64]	; 0x40
   33d7c:	cmp	r3, #0
   33d80:	beq	33cec <server_estab+0x490>
   33d84:	ldrb	r0, [r3]
   33d88:	cmp	r0, #0
   33d8c:	beq	33cec <server_estab+0x490>
   33d90:	mov	r0, sl
   33d94:	ldr	r1, [pc, #784]	; 340ac <server_estab+0x850>
   33d98:	add	r1, pc, r1
   33d9c:	mov	r2, r8
   33da0:	b	33ce8 <server_estab+0x48c>
   33da4:	ldr	r0, [r9]
   33da8:	tst	r0, #2048	; 0x800
   33dac:	ldr	r0, [pc, #780]	; 340c0 <server_estab+0x864>
   33db0:	add	r0, pc, r0
   33db4:	ldr	r1, [pc, #776]	; 340c4 <server_estab+0x868>
   33db8:	add	r1, pc, r1
   33dbc:	moveq	r0, r1
   33dc0:	stm	sp, {r0, r7}
   33dc4:	mov	r0, sl
   33dc8:	ldr	r1, [pc, #760]	; 340c8 <server_estab+0x86c>
   33dcc:	add	r1, pc, r1
   33dd0:	ldr	r2, [sp, #24]
   33dd4:	mov	r3, r5
   33dd8:	bl	d1e4 <sendto_one@plt>
   33ddc:	ldr	r0, [r4, #28]
   33de0:	ldr	r3, [r0, #64]	; 0x40
   33de4:	cmp	r3, #0
   33de8:	beq	33cec <server_estab+0x490>
   33dec:	ldrb	r0, [r3]
   33df0:	cmp	r0, #0
   33df4:	bne	33cd8 <server_estab+0x47c>
   33df8:	b	33cec <server_estab+0x490>
   33dfc:	ldr	r0, [pc, #684]	; 340b0 <server_estab+0x854>
   33e00:	ldr	r0, [pc, r0]
   33e04:	ldr	r6, [r0]
   33e08:	cmp	r6, #0
   33e0c:	beq	33f8c <server_estab+0x730>
   33e10:	movw	r5, #345	; 0x159
   33e14:	ldr	r9, [pc, #664]	; 340b4 <server_estab+0x858>
   33e18:	add	r9, pc, r9
   33e1c:	ldr	sl, [pc, #660]	; 340b8 <server_estab+0x85c>
   33e20:	add	sl, pc, sl
   33e24:	b	33e4c <server_estab+0x5f0>
   33e28:	add	r7, r7, #88	; 0x58
   33e2c:	mov	r0, r4
   33e30:	ldr	r1, [pc, #668]	; 340d4 <server_estab+0x878>
   33e34:	add	r1, pc, r1
   33e38:	mov	r2, r7
   33e3c:	bl	d1e4 <sendto_one@plt>
   33e40:	ldr	r6, [r6, #8]
   33e44:	cmp	r6, #0
   33e48:	beq	33f8c <server_estab+0x730>
   33e4c:	ldr	r7, [r6]
   33e50:	ldrh	r0, [r7, #80]	; 0x50
   33e54:	cmp	r0, #4
   33e58:	beq	33e40 <server_estab+0x5e4>
   33e5c:	ldr	r0, [r7, #36]	; 0x24
   33e60:	cmp	r0, r4
   33e64:	beq	33e40 <server_estab+0x5e4>
   33e68:	ldrb	r1, [r0, #65]	; 0x41
   33e6c:	tst	r1, #32
   33e70:	beq	33e9c <server_estab+0x640>
   33e74:	ldrh	r1, [r0, #80]	; 0x50
   33e78:	cmp	r1, #64	; 0x40
   33e7c:	bne	33e9c <server_estab+0x640>
   33e80:	ldr	r0, [r0, #432]	; 0x1b0
   33e84:	ldr	r0, [r0, #136]	; 0x88
   33e88:	cmp	r0, #0
   33e8c:	beq	33e9c <server_estab+0x640>
   33e90:	ldrb	r0, [r0, #288]	; 0x120
   33e94:	tst	r0, #128	; 0x80
   33e98:	bne	33e40 <server_estab+0x5e4>
   33e9c:	ldrb	r0, [r8]
   33ea0:	cmp	r0, #0
   33ea4:	beq	33f00 <server_estab+0x6a4>
   33ea8:	mov	r0, r7
   33eac:	ldrb	r1, [r0, #396]!	; 0x18c
   33eb0:	cmp	r1, #0
   33eb4:	beq	33f00 <server_estab+0x6a4>
   33eb8:	add	r1, r7, r5
   33ebc:	ldr	r2, [r7, #32]
   33ec0:	ldr	r3, [r7, #64]	; 0x40
   33ec4:	ldr	r5, [r7, #76]	; 0x4c
   33ec8:	tst	r3, #2048	; 0x800
   33ecc:	mov	r3, sl
   33ed0:	moveq	r3, r9
   33ed4:	add	r5, r5, #1
   33ed8:	str	r5, [sp]
   33edc:	movw	r5, #345	; 0x159
   33ee0:	stmib	sp, {r0, r3}
   33ee4:	str	r1, [sp, #12]
   33ee8:	add	r3, r7, #88	; 0x58
   33eec:	add	r2, r2, #396	; 0x18c
   33ef0:	mov	r0, r4
   33ef4:	ldr	r1, [pc, #448]	; 340bc <server_estab+0x860>
   33ef8:	add	r1, pc, r1
   33efc:	b	33f40 <server_estab+0x6e4>
   33f00:	add	r0, r7, r5
   33f04:	ldr	r1, [r7, #32]
   33f08:	ldr	r2, [r7, #64]	; 0x40
   33f0c:	ldr	r3, [r7, #76]	; 0x4c
   33f10:	tst	r2, #2048	; 0x800
   33f14:	mov	r2, sl
   33f18:	moveq	r2, r9
   33f1c:	add	r3, r3, #1
   33f20:	str	r3, [sp]
   33f24:	str	r2, [sp, #4]
   33f28:	str	r0, [sp, #8]
   33f2c:	add	r3, r7, #88	; 0x58
   33f30:	add	r2, r1, #88	; 0x58
   33f34:	mov	r0, r4
   33f38:	ldr	r1, [pc, #400]	; 340d0 <server_estab+0x874>
   33f3c:	add	r1, pc, r1
   33f40:	bl	d1e4 <sendto_one@plt>
   33f44:	ldr	r0, [r7, #28]
   33f48:	ldr	r3, [r0, #64]	; 0x40
   33f4c:	cmp	r3, #0
   33f50:	beq	33e40 <server_estab+0x5e4>
   33f54:	ldrb	r0, [r3]
   33f58:	cmp	r0, #0
   33f5c:	beq	33e40 <server_estab+0x5e4>
   33f60:	ldr	r0, [r4, #36]	; 0x24
   33f64:	ldrh	r1, [r0, #80]	; 0x50
   33f68:	cmp	r1, #32
   33f6c:	bne	33e28 <server_estab+0x5cc>
   33f70:	ldrb	r0, [r0, #396]	; 0x18c
   33f74:	cmp	r0, #0
   33f78:	beq	33e28 <server_estab+0x5cc>
   33f7c:	ldrb	r0, [r7, #396]!	; 0x18c
   33f80:	cmp	r0, #0
   33f84:	subeq	r7, r7, #308	; 0x134
   33f88:	b	33e2c <server_estab+0x5d0>
   33f8c:	ldr	r0, [pc, #324]	; 340d8 <server_estab+0x87c>
   33f90:	ldr	r0, [pc, r0]
   33f94:	ldr	r0, [r0]
   33f98:	ldr	r1, [r4, #432]	; 0x1b0
   33f9c:	ldr	r1, [r1, #296]	; 0x128
   33fa0:	and	r1, r0, r1
   33fa4:	cmp	r1, r0
   33fa8:	moveq	r0, r4
   33fac:	bleq	342dc <burst_ban>
   33fb0:	mov	r0, r4
   33fb4:	bl	34508 <burst_TS6>
   33fb8:	ldr	r3, [pc, #284]	; 340dc <server_estab+0x880>
   33fbc:	ldr	r3, [pc, r3]
   33fc0:	add	r2, r3, #88	; 0x58
   33fc4:	ldr	r0, [r4, #36]	; 0x24
   33fc8:	ldrh	r1, [r0, #80]	; 0x50
   33fcc:	cmp	r1, #32
   33fd0:	bne	33ff0 <server_estab+0x794>
   33fd4:	ldrb	r0, [r0, #396]	; 0x18c
   33fd8:	cmp	r0, #0
   33fdc:	beq	33ff0 <server_estab+0x794>
   33fe0:	ldrb	r0, [r3, #396]!	; 0x18c
   33fe4:	cmp	r0, #0
   33fe8:	subeq	r3, r3, #308	; 0x134
   33fec:	mov	r2, r3
   33ff0:	ldr	r1, [pc, #232]	; 340e0 <server_estab+0x884>
   33ff4:	add	r1, pc, r1
   33ff8:	mov	r0, r4
   33ffc:	bl	d1e4 <sendto_one@plt>
   34000:	mov	r0, r4
   34004:	bl	de50 <free_pre_client@plt>
   34008:	mov	r0, r4
   3400c:	bl	d544 <send_pop_queue@plt>
   34010:	mov	r0, #0
   34014:	sub	sp, fp, #28
   34018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3401c:	.word	0x00012b26
   34020:	.word	0x00012b3f
   34024:	.word	0x0000dd41
   34028:	.word	0x0000dda9
   3402c:	.word	0x000271f4
   34030:	.word	0x00012b1d
   34034:	.word	0x00027114
   34038:	.word	0x00026eec
   3403c:	.word	0x00026f84
   34040:	.word	0x00026eb4
   34044:	.word	0x00026f1c
   34048:	.word	0x00026f34
   3404c:	.word	0x00012aba
   34050:	.word	0x00026fa4
   34054:	.word	0x00012135
   34058:	.word	0x00012a8d
   3405c:	.word	0x00012a63
   34060:	.word	0x00012a60
   34064:	.word	0x00026e70
   34068:	.word	0x000270bc
   3406c:	.word	0x00012a1d
   34070:	.word	0x00026d70
   34074:	.word	0x00026f60
   34078:	.word	0x00026dfc
   3407c:	.word	0x00026cf4
   34080:	.word	0x00037358
   34084:	.word	0x000128ed
   34088:	.word	0x000128b9
   3408c:	.word	0x00026efc
   34090:	.word	0x00026c8c
   34094:	.word	0x000128a1
   34098:	.word	0x00026d24
   3409c:	.word	0x00026e98
   340a0:	.word	0x00012771
   340a4:	.word	0x00011e09
   340a8:	.word	0x000127c8
   340ac:	.word	0x000127aa
   340b0:	.word	0x00026a78
   340b4:	.word	0x00011d3d
   340b8:	.word	0x00012695
   340bc:	.word	0x00012675
   340c0:	.word	0x00012705
   340c4:	.word	0x00011d9d
   340c8:	.word	0x0001278b
   340cc:	.word	0x00012862
   340d0:	.word	0x00012648
   340d4:	.word	0x0001270e
   340d8:	.word	0x00026980
   340dc:	.word	0x00026b9c
   340e0:	.word	0x0000d75a

000340e4 <rb_free>:
   340e4:	cmp	r0, #0
   340e8:	bxeq	lr
   340ec:	b	d328 <free@plt>

000340f0 <rb_dlinkAdd>:
   340f0:	push	{fp, lr}
   340f4:	mov	fp, sp
   340f8:	cmp	r0, #0
   340fc:	beq	3415c <rb_dlinkAdd+0x6c>
   34100:	cmp	r1, #0
   34104:	beq	3417c <rb_dlinkAdd+0x8c>
   34108:	cmp	r2, #0
   3410c:	beq	3419c <rb_dlinkAdd+0xac>
   34110:	mov	r3, #0
   34114:	stm	r1, {r0, r3}
   34118:	ldr	r0, [r2]
   3411c:	str	r0, [r1, #8]
   34120:	ldr	r0, [r2]
   34124:	cmp	r0, #0
   34128:	beq	34138 <rb_dlinkAdd+0x48>
   3412c:	add	r0, r0, #4
   34130:	str	r1, [r0]
   34134:	b	34148 <rb_dlinkAdd+0x58>
   34138:	mov	r0, r2
   3413c:	ldr	r3, [r0, #4]!
   34140:	cmp	r3, #0
   34144:	streq	r1, [r0]
   34148:	str	r1, [r2]
   3414c:	ldr	r0, [r2, #8]
   34150:	add	r0, r0, #1
   34154:	str	r0, [r2, #8]
   34158:	pop	{fp, pc}
   3415c:	ldr	r0, [pc, #88]	; 341bc <rb_dlinkAdd+0xcc>
   34160:	add	r0, pc, r0
   34164:	ldr	r1, [pc, #84]	; 341c0 <rb_dlinkAdd+0xd0>
   34168:	add	r1, pc, r1
   3416c:	ldr	r3, [pc, #80]	; 341c4 <rb_dlinkAdd+0xd4>
   34170:	add	r3, pc, r3
   34174:	mov	r2, #143	; 0x8f
   34178:	bl	e7e0 <__assert_fail@plt>
   3417c:	ldr	r0, [pc, #68]	; 341c8 <rb_dlinkAdd+0xd8>
   34180:	add	r0, pc, r0
   34184:	ldr	r1, [pc, #64]	; 341cc <rb_dlinkAdd+0xdc>
   34188:	add	r1, pc, r1
   3418c:	ldr	r3, [pc, #60]	; 341d0 <rb_dlinkAdd+0xe0>
   34190:	add	r3, pc, r3
   34194:	mov	r2, #144	; 0x90
   34198:	bl	e7e0 <__assert_fail@plt>
   3419c:	ldr	r0, [pc, #48]	; 341d4 <rb_dlinkAdd+0xe4>
   341a0:	add	r0, pc, r0
   341a4:	ldr	r1, [pc, #44]	; 341d8 <rb_dlinkAdd+0xe8>
   341a8:	add	r1, pc, r1
   341ac:	ldr	r3, [pc, #40]	; 341dc <rb_dlinkAdd+0xec>
   341b0:	add	r3, pc, r3
   341b4:	mov	r2, #145	; 0x91
   341b8:	bl	e7e0 <__assert_fail@plt>
   341bc:	.word	0x0000c811
   341c0:	.word	0x0000c7ae
   341c4:	.word	0x0000c80e
   341c8:	.word	0x0000c78c
   341cc:	.word	0x0000c78e
   341d0:	.word	0x0000c7ee
   341d4:	.word	0x00011ff5
   341d8:	.word	0x0000c76e
   341dc:	.word	0x0000c7ce

000341e0 <rb_dlinkMoveNode>:
   341e0:	push	{fp, lr}
   341e4:	mov	fp, sp
   341e8:	cmp	r0, #0
   341ec:	beq	34278 <rb_dlinkMoveNode+0x98>
   341f0:	ldr	ip, [pc, #160]	; 34298 <rb_dlinkMoveNode+0xb8>
   341f4:	ldr	ip, [pc, ip]
   341f8:	ldmib	r0, {r2, r3}
   341fc:	add	r1, r3, #4
   34200:	cmp	r3, #0
   34204:	addeq	r1, ip, #4
   34208:	str	r2, [r1]
   3420c:	ldmib	r0, {r1, r2}
   34210:	cmp	r1, #0
   34214:	mov	r3, ip
   34218:	addne	r3, r1, #8
   3421c:	str	r2, [r3]
   34220:	mov	r1, #0
   34224:	ldr	r2, [pc, #112]	; 3429c <rb_dlinkMoveNode+0xbc>
   34228:	ldr	r2, [pc, r2]
   3422c:	ldr	r3, [r2]
   34230:	stmib	r0, {r1, r3}
   34234:	cmp	r3, #0
   34238:	beq	34248 <rb_dlinkMoveNode+0x68>
   3423c:	add	r3, r3, #4
   34240:	str	r0, [r3]
   34244:	b	34258 <rb_dlinkMoveNode+0x78>
   34248:	mov	r3, r2
   3424c:	ldr	r1, [r3, #4]!
   34250:	cmp	r1, #0
   34254:	streq	r0, [r3]
   34258:	str	r0, [r2]
   3425c:	ldr	r0, [ip, #8]
   34260:	sub	r0, r0, #1
   34264:	str	r0, [ip, #8]
   34268:	ldr	r0, [r2, #8]
   3426c:	add	r0, r0, #1
   34270:	str	r0, [r2, #8]
   34274:	pop	{fp, pc}
   34278:	ldr	r0, [pc, #32]	; 342a0 <rb_dlinkMoveNode+0xc0>
   3427c:	add	r0, pc, r0
   34280:	ldr	r1, [pc, #28]	; 342a4 <rb_dlinkMoveNode+0xc4>
   34284:	add	r1, pc, r1
   34288:	ldr	r3, [pc, #24]	; 342a8 <rb_dlinkMoveNode+0xc8>
   3428c:	add	r3, pc, r3
   34290:	mov	r2, #114	; 0x72
   34294:	bl	e7e0 <__assert_fail@plt>
   34298:	.word	0x00026680
   3429c:	.word	0x000267a8
   342a0:	.word	0x0000c690
   342a4:	.word	0x0000c692
   342a8:	.word	0x0000fd63

000342ac <rb_strdup>:
   342ac:	push	{r4, sl, fp, lr}
   342b0:	add	fp, sp, #8
   342b4:	mov	r4, r0
   342b8:	bl	dc94 <strlen@plt>
   342bc:	add	r0, r0, #1
   342c0:	bl	da84 <malloc@plt>
   342c4:	cmp	r0, #0
   342c8:	beq	342d8 <rb_strdup+0x2c>
   342cc:	mov	r1, r4
   342d0:	pop	{r4, sl, fp, lr}
   342d4:	b	d91c <strcpy@plt>
   342d8:	bl	d448 <rb_outofmemory@plt>

000342dc <burst_ban>:
   342dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   342e0:	add	fp, sp, #28
   342e4:	sub	sp, sp, #244	; 0xf4
   342e8:	str	r0, [sp, #60]	; 0x3c
   342ec:	ldr	r4, [pc, #492]	; 344e0 <burst_ban+0x204>
   342f0:	ldr	r4, [pc, r4]
   342f4:	add	r0, r4, #88	; 0x58
   342f8:	str	r0, [sp, #40]	; 0x28
   342fc:	bl	dc94 <strlen@plt>
   34300:	str	r0, [sp, #44]	; 0x2c
   34304:	ldr	r0, [pc, #472]	; 344e4 <burst_ban+0x208>
   34308:	ldr	r0, [pc, r0]
   3430c:	ldr	sl, [r0]
   34310:	cmp	sl, #0
   34314:	beq	344d8 <burst_ban+0x1fc>
   34318:	ldr	r0, [sp, #44]	; 0x2c
   3431c:	add	r1, r0, #1
   34320:	str	r1, [sp, #36]	; 0x24
   34324:	add	r0, r0, #2
   34328:	str	r0, [sp, #52]	; 0x34
   3432c:	add	r0, sp, #67	; 0x43
   34330:	add	r0, r0, #173	; 0xad
   34334:	str	r0, [sp, #48]	; 0x30
   34338:	add	r0, r4, #396	; 0x18c
   3433c:	str	r0, [sp, #56]	; 0x38
   34340:	b	343d0 <burst_ban+0xf4>
   34344:	mov	r3, r6
   34348:	add	r2, r4, #36	; 0x24
   3434c:	ldm	r2, {r0, r1, r2}
   34350:	ldr	r5, [r4, #16]
   34354:	ldr	ip, [r4, #20]
   34358:	ldr	r6, [r4, #24]
   3435c:	ldr	r4, [r4, #28]
   34360:	cmp	r6, #0
   34364:	ldr	r7, [pc, #396]	; 344f8 <burst_ban+0x21c>
   34368:	add	r7, pc, r7
   3436c:	moveq	r6, r7
   34370:	str	r6, [sp, #32]
   34374:	mov	r6, r7
   34378:	ldr	r7, [pc, #380]	; 344fc <burst_ban+0x220>
   3437c:	add	r7, pc, r7
   34380:	movne	r6, r7
   34384:	sub	r2, r2, r1
   34388:	sub	r0, r0, r1
   3438c:	cmp	r4, #0
   34390:	ldr	r7, [pc, #360]	; 34500 <burst_ban+0x224>
   34394:	add	r7, pc, r7
   34398:	moveq	r4, r7
   3439c:	stm	sp, {r4, r5}
   343a0:	str	r1, [sp, #8]
   343a4:	add	r1, sp, #12
   343a8:	stm	r1, {r0, r2, r8, ip}
   343ac:	str	r6, [sp, #28]
   343b0:	ldr	r0, [sp, #60]	; 0x3c
   343b4:	ldr	r1, [pc, #328]	; 34504 <burst_ban+0x228>
   343b8:	add	r1, pc, r1
   343bc:	ldr	r2, [sp, #56]	; 0x38
   343c0:	bl	d1e4 <sendto_one@plt>
   343c4:	ldr	sl, [sl, #8]
   343c8:	cmp	sl, #0
   343cc:	beq	344d8 <burst_ban+0x1fc>
   343d0:	ldr	r4, [sl]
   343d4:	ldr	r6, [r4, #44]	; 0x2c
   343d8:	bl	d07c <rb_current_time@plt>
   343dc:	cmp	r6, r0
   343e0:	blt	343c4 <burst_ban+0xe8>
   343e4:	ldr	r0, [r4]
   343e8:	bic	r0, r0, #-2147483648	; 0x80000000
   343ec:	cmp	r0, #255	; 0xff
   343f0:	ble	3440c <burst_ban+0x130>
   343f4:	cmp	r0, #256	; 0x100
   343f8:	cmpne	r0, #512	; 0x200
   343fc:	bne	34438 <burst_ban+0x15c>
   34400:	ldr	r0, [pc, #236]	; 344f4 <burst_ban+0x218>
   34404:	add	r0, pc, r0
   34408:	b	34448 <burst_ban+0x16c>
   3440c:	cmp	r0, #64	; 0x40
   34410:	ldr	r8, [pc, #208]	; 344e8 <burst_ban+0x20c>
   34414:	add	r8, pc, r8
   34418:	mov	r3, r8
   3441c:	beq	3444c <burst_ban+0x170>
   34420:	cmp	r0, #128	; 0x80
   34424:	bne	343c4 <burst_ban+0xe8>
   34428:	ldr	r8, [pc, #188]	; 344ec <burst_ban+0x210>
   3442c:	add	r8, pc, r8
   34430:	mov	r3, r8
   34434:	b	3444c <burst_ban+0x170>
   34438:	cmp	r0, #131072	; 0x20000
   3443c:	bne	343c4 <burst_ban+0xe8>
   34440:	ldr	r0, [pc, #168]	; 344f0 <burst_ban+0x214>
   34444:	add	r0, pc, r0
   34448:	mov	r3, r0
   3444c:	ldr	r8, [r4, #12]
   34450:	ldrb	r0, [r4, #6]
   34454:	tst	r0, #8
   34458:	beq	34348 <burst_ban+0x6c>
   3445c:	mov	r6, r3
   34460:	add	r5, sp, #67	; 0x43
   34464:	mov	r0, r5
   34468:	mov	r1, r8
   3446c:	mov	r2, #173	; 0xad
   34470:	bl	e510 <rb_strlcpy@plt>
   34474:	mov	r0, r5
   34478:	mov	r1, #123	; 0x7b
   3447c:	bl	e27c <strrchr@plt>
   34480:	cmp	r0, #0
   34484:	beq	34344 <burst_ban+0x68>
   34488:	mov	r9, r0
   3448c:	ldr	r0, [sp, #48]	; 0x30
   34490:	sub	r0, r0, r9
   34494:	ldr	r1, [sp, #52]	; 0x34
   34498:	cmp	r0, r1
   3449c:	mov	r3, r6
   344a0:	ble	34348 <burst_ban+0x6c>
   344a4:	add	r0, r9, #1
   344a8:	ldr	r1, [sp, #40]	; 0x28
   344ac:	ldr	r2, [sp, #44]	; 0x2c
   344b0:	bl	d40c <memcpy@plt>
   344b4:	mov	r3, r6
   344b8:	ldr	r0, [sp, #36]	; 0x24
   344bc:	mov	r1, #125	; 0x7d
   344c0:	strb	r1, [r9, r0]
   344c4:	ldr	r0, [sp, #52]	; 0x34
   344c8:	mov	r1, #0
   344cc:	strb	r1, [r9, r0]
   344d0:	add	r8, sp, #67	; 0x43
   344d4:	b	34348 <burst_ban+0x6c>
   344d8:	sub	sp, fp, #28
   344dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   344e0:	.word	0x00026868
   344e4:	.word	0x000265b8
   344e8:	.word	0x00011f7a
   344ec:	.word	0x00012635
   344f0:	.word	0x0000d5c9
   344f4:	.word	0x00011f5e
   344f8:	.word	0x000117ed
   344fc:	.word	0x00012320
   34500:	.word	0x0000d309
   34504:	.word	0x000122be

00034508 <burst_TS6>:
   34508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3450c:	add	fp, sp, #28
   34510:	sub	sp, sp, #604	; 0x25c
   34514:	mov	r8, r0
   34518:	str	r0, [sp, #72]	; 0x48
   3451c:	str	r0, [sp, #60]	; 0x3c
   34520:	ldr	r0, [pc, #1724]	; 34be4 <burst_TS6+0x6dc>
   34524:	ldr	r0, [pc, r0]
   34528:	ldr	r6, [r0]
   3452c:	cmp	r6, #0
   34530:	str	r8, [sp, #56]	; 0x38
   34534:	beq	34870 <burst_TS6+0x368>
   34538:	add	r3, sp, #88	; 0x58
   3453c:	b	34568 <burst_TS6+0x60>
   34540:	str	r5, [sp, #76]	; 0x4c
   34544:	ldr	r0, [pc, #1760]	; 34c2c <burst_TS6+0x724>
   34548:	ldr	r0, [pc, r0]
   3454c:	ldr	r0, [r0]
   34550:	add	r1, sp, #72	; 0x48
   34554:	bl	e654 <call_hook@plt>
   34558:	add	r3, sp, #88	; 0x58
   3455c:	ldr	r6, [r6, #8]
   34560:	cmp	r6, #0
   34564:	beq	34870 <burst_TS6+0x368>
   34568:	ldr	r5, [r6]
   3456c:	ldrh	r0, [r5, #80]	; 0x50
   34570:	cmp	r0, #64	; 0x40
   34574:	bne	3455c <burst_TS6+0x54>
   34578:	ldr	r0, [r5, #24]
   3457c:	cmp	r0, #0
   34580:	beq	3455c <burst_TS6+0x54>
   34584:	ldr	r0, [r5, #36]	; 0x24
   34588:	ldrb	r1, [r0, #65]	; 0x41
   3458c:	tst	r1, #32
   34590:	beq	345bc <burst_TS6+0xb4>
   34594:	ldrh	r0, [r0, #80]	; 0x50
   34598:	cmp	r0, #64	; 0x40
   3459c:	bne	345bc <burst_TS6+0xb4>
   345a0:	ldr	r0, [r5, #432]	; 0x1b0
   345a4:	ldr	r0, [r0, #136]	; 0x88
   345a8:	cmp	r0, #0
   345ac:	beq	345bc <burst_TS6+0xb4>
   345b0:	ldrb	r0, [r0, #288]	; 0x120
   345b4:	tst	r0, #128	; 0x80
   345b8:	bne	3455c <burst_TS6+0x54>
   345bc:	mov	r0, #0
   345c0:	mov	r1, r5
   345c4:	mov	r2, #0
   345c8:	bl	d844 <send_umode@plt>
   345cc:	ldrb	r0, [sp, #88]	; 0x58
   345d0:	cmp	r0, #0
   345d4:	moveq	r0, #43	; 0x2b
   345d8:	strheq	r0, [sp, #88]	; 0x58
   345dc:	mov	sl, r5
   345e0:	ldr	r4, [sl, #64]!	; 0x40
   345e4:	tst	r4, #16777216	; 0x1000000
   345e8:	ldr	r0, [pc, #1528]	; 34be8 <burst_TS6+0x6e0>
   345ec:	add	r0, pc, r0
   345f0:	addeq	r0, sl, #227	; 0xe3
   345f4:	ldr	r1, [pc, #1520]	; 34bec <burst_TS6+0x6e4>
   345f8:	ldr	r1, [pc, r1]
   345fc:	ldr	r3, [r1]
   34600:	ldr	r1, [r8, #432]	; 0x1b0
   34604:	ldr	r1, [r1, #296]	; 0x128
   34608:	and	r9, r3, r1
   3460c:	ldr	r2, [sl, #-32]	; 0xffffffe0
   34610:	ldr	lr, [sl, #-12]
   34614:	ldr	r1, [sl, #12]
   34618:	add	r1, r1, #1
   3461c:	add	r2, r2, #396	; 0x18c
   34620:	str	r2, [sp, #48]	; 0x30
   34624:	add	r2, sl, #332	; 0x14c
   34628:	str	r2, [sp, #52]	; 0x34
   3462c:	add	r2, sl, #99	; 0x63
   34630:	add	r7, sl, #88	; 0x58
   34634:	add	ip, sl, #24
   34638:	cmp	r9, r3
   3463c:	bne	346c4 <burst_TS6+0x1bc>
   34640:	movw	r3, #345	; 0x159
   34644:	add	r9, r5, r3
   34648:	ldr	r3, [r5, #24]
   3464c:	ldrb	r8, [r3, #40]!	; 0x28
   34650:	str	r9, [sp, #36]	; 0x24
   34654:	tst	r4, #131072	; 0x20000
   34658:	ldr	r4, [pc, #1424]	; 34bf0 <burst_TS6+0x6e8>
   3465c:	add	r4, pc, r4
   34660:	addne	r4, r5, #227	; 0xe3
   34664:	stm	sp, {r1, lr}
   34668:	add	r9, sp, #88	; 0x58
   3466c:	str	r9, [sp, #8]
   34670:	str	r7, [sp, #12]
   34674:	str	r2, [sp, #16]
   34678:	str	r0, [sp, #20]
   3467c:	ldr	r7, [sp, #52]	; 0x34
   34680:	str	r7, [sp, #24]
   34684:	str	r4, [sp, #28]
   34688:	cmp	r8, #0
   3468c:	ldr	r8, [sp, #56]	; 0x38
   34690:	ldr	r0, [pc, #1372]	; 34bf4 <burst_TS6+0x6ec>
   34694:	add	r0, pc, r0
   34698:	moveq	r3, r0
   3469c:	str	r3, [sp, #32]
   346a0:	mov	r0, r8
   346a4:	ldr	r1, [pc, #1356]	; 34bf8 <burst_TS6+0x6f0>
   346a8:	add	r1, pc, r1
   346ac:	ldr	r2, [sp, #48]	; 0x30
   346b0:	mov	r9, ip
   346b4:	mov	r3, ip
   346b8:	bl	d1e4 <sendto_one@plt>
   346bc:	mov	r4, r7
   346c0:	b	3470c <burst_TS6+0x204>
   346c4:	movw	r3, #345	; 0x159
   346c8:	add	r3, r5, r3
   346cc:	stm	sp, {r1, lr}
   346d0:	add	r9, sp, #88	; 0x58
   346d4:	str	r9, [sp, #8]
   346d8:	str	r7, [sp, #12]
   346dc:	str	r2, [sp, #16]
   346e0:	str	r0, [sp, #20]
   346e4:	ldr	r4, [sp, #52]	; 0x34
   346e8:	str	r4, [sp, #24]
   346ec:	str	r3, [sp, #28]
   346f0:	mov	r0, r8
   346f4:	ldr	r1, [pc, #1296]	; 34c0c <burst_TS6+0x704>
   346f8:	add	r1, pc, r1
   346fc:	ldr	r2, [sp, #48]	; 0x30
   34700:	mov	r9, ip
   34704:	mov	r3, ip
   34708:	bl	d1e4 <sendto_one@plt>
   3470c:	ldr	r3, [r5, #444]	; 0x1bc
   34710:	cmp	r3, #0
   34714:	beq	34744 <burst_TS6+0x23c>
   34718:	ldrb	r0, [r3]
   3471c:	cmp	r0, #0
   34720:	beq	34744 <burst_TS6+0x23c>
   34724:	ldrb	r0, [r4]
   34728:	cmp	r0, #0
   3472c:	mov	r2, r4
   34730:	moveq	r2, r9
   34734:	mov	r0, r8
   34738:	ldr	r1, [pc, #1232]	; 34c10 <burst_TS6+0x708>
   3473c:	add	r1, pc, r1
   34740:	bl	d1e4 <sendto_one@plt>
   34744:	ldr	r0, [pc, #1224]	; 34c14 <burst_TS6+0x70c>
   34748:	ldr	r0, [pc, r0]
   3474c:	ldr	r0, [r0]
   34750:	ldr	r1, [r8, #432]	; 0x1b0
   34754:	ldr	r1, [r1, #296]	; 0x128
   34758:	and	r1, r0, r1
   3475c:	cmp	r1, r0
   34760:	beq	347c4 <burst_TS6+0x2bc>
   34764:	ldrb	r0, [sl, #2]
   34768:	tst	r0, #2
   3476c:	beq	34794 <burst_TS6+0x28c>
   34770:	ldrb	r0, [r5, #396]	; 0x18c
   34774:	cmp	r0, #0
   34778:	mov	r2, r4
   3477c:	moveq	r2, r9
   34780:	add	r3, r5, #227	; 0xe3
   34784:	mov	r0, r8
   34788:	ldr	r1, [pc, #1160]	; 34c18 <burst_TS6+0x710>
   3478c:	add	r1, pc, r1
   34790:	bl	d1e4 <sendto_one@plt>
   34794:	ldr	r3, [r5, #24]
   34798:	ldrb	r0, [r3, #40]!	; 0x28
   3479c:	cmp	r0, #0
   347a0:	beq	347c4 <burst_TS6+0x2bc>
   347a4:	ldrb	r0, [r4]
   347a8:	cmp	r0, #0
   347ac:	mov	r2, r4
   347b0:	moveq	r2, r9
   347b4:	mov	r0, r8
   347b8:	ldr	r1, [pc, #1116]	; 34c1c <burst_TS6+0x714>
   347bc:	add	r1, pc, r1
   347c0:	bl	d1e4 <sendto_one@plt>
   347c4:	ldr	r0, [pc, #1108]	; 34c20 <burst_TS6+0x718>
   347c8:	ldr	r0, [pc, r0]
   347cc:	ldr	r0, [r0, #276]	; 0x114
   347d0:	cmp	r0, #0
   347d4:	beq	34814 <burst_TS6+0x30c>
   347d8:	ldr	r0, [r5, #24]
   347dc:	ldr	r3, [r0, #24]
   347e0:	cmp	r3, #0
   347e4:	beq	34814 <burst_TS6+0x30c>
   347e8:	ldrb	r0, [r3]
   347ec:	cmp	r0, #0
   347f0:	beq	34814 <burst_TS6+0x30c>
   347f4:	ldrb	r0, [r4]
   347f8:	cmp	r0, #0
   347fc:	mov	r2, r4
   34800:	moveq	r2, r9
   34804:	mov	r0, r8
   34808:	ldr	r1, [pc, #1044]	; 34c24 <burst_TS6+0x71c>
   3480c:	add	r1, pc, r1
   34810:	bl	d1e4 <sendto_one@plt>
   34814:	ldrb	r0, [r5, #57]	; 0x39
   34818:	tst	r0, #16
   3481c:	beq	34540 <burst_TS6+0x38>
   34820:	ldr	r0, [r5, #24]
   34824:	cmp	r0, #0
   34828:	beq	34540 <burst_TS6+0x38>
   3482c:	ldr	r3, [r0, #32]
   34830:	cmp	r3, #0
   34834:	beq	34540 <burst_TS6+0x38>
   34838:	ldr	r0, [r0, #36]	; 0x24
   3483c:	cmp	r0, #0
   34840:	beq	34540 <burst_TS6+0x38>
   34844:	ldrb	r1, [r4]
   34848:	ldr	r0, [r0, #8]
   3484c:	str	r0, [sp]
   34850:	cmp	r1, #0
   34854:	movne	r9, r4
   34858:	mov	r0, r8
   3485c:	ldr	r1, [pc, #964]	; 34c28 <burst_TS6+0x720>
   34860:	add	r1, pc, r1
   34864:	mov	r2, r9
   34868:	bl	d1e4 <sendto_one@plt>
   3486c:	b	34540 <burst_TS6+0x38>
   34870:	ldr	r0, [pc, #900]	; 34bfc <burst_TS6+0x6f4>
   34874:	ldr	r0, [pc, r0]
   34878:	ldr	r7, [r0]
   3487c:	cmp	r7, #0
   34880:	beq	34bc0 <burst_TS6+0x6b8>
   34884:	ldr	r0, [pc, #884]	; 34c00 <burst_TS6+0x6f8>
   34888:	ldr	r0, [pc, r0]
   3488c:	add	r0, r0, #396	; 0x18c
   34890:	str	r0, [sp, #44]	; 0x2c
   34894:	b	348d4 <burst_TS6+0x3cc>
   34898:	stm	sp, {r0, r2}
   3489c:	mov	r0, r8
   348a0:	ldr	r1, [pc, #956]	; 34c64 <burst_TS6+0x75c>
   348a4:	add	r1, pc, r1
   348a8:	ldr	r2, [sp, #44]	; 0x2c
   348ac:	bl	d1e4 <sendto_one@plt>
   348b0:	str	r9, [sp, #64]	; 0x40
   348b4:	ldr	r0, [pc, #940]	; 34c68 <burst_TS6+0x760>
   348b8:	ldr	r0, [pc, r0]
   348bc:	ldr	r0, [r0]
   348c0:	add	r1, sp, #60	; 0x3c
   348c4:	bl	e654 <call_hook@plt>
   348c8:	ldr	r7, [r7, #8]
   348cc:	cmp	r7, #0
   348d0:	beq	34bc0 <burst_TS6+0x6b8>
   348d4:	ldr	r5, [r7]
   348d8:	ldr	r4, [r5, #236]	; 0xec
   348dc:	ldrb	r0, [r4]
   348e0:	cmp	r0, #35	; 0x23
   348e4:	bne	348c8 <burst_TS6+0x3c0>
   348e8:	ldr	r6, [r5, #232]	; 0xe8
   348ec:	mov	r0, r5
   348f0:	mov	r1, r8
   348f4:	bl	da24 <channel_modes@plt>
   348f8:	str	r4, [sp]
   348fc:	str	r0, [sp, #4]
   34900:	ldr	r4, [pc, #764]	; 34c04 <burst_TS6+0x6fc>
   34904:	add	r4, pc, r4
   34908:	mov	r0, r4
   3490c:	ldr	r1, [pc, #756]	; 34c08 <burst_TS6+0x700>
   34910:	add	r1, pc, r1
   34914:	ldr	r2, [sp, #44]	; 0x2c
   34918:	mov	r3, r6
   3491c:	bl	e3a8 <sprintf@plt>
   34920:	add	sl, r4, r0
   34924:	ldr	r4, [r5, #124]	; 0x7c
   34928:	cmp	r4, #0
   3492c:	str	r7, [sp, #52]	; 0x34
   34930:	str	r5, [sp, #48]	; 0x30
   34934:	beq	349fc <burst_TS6+0x4f4>
   34938:	mov	r6, r0
   3493c:	mov	r9, r0
   34940:	mov	r5, sl
   34944:	b	3498c <burst_TS6+0x484>
   34948:	mov	r0, r7
   3494c:	mov	r1, #1
   34950:	bl	d01c <find_channel_status@plt>
   34954:	mov	r2, r0
   34958:	ldr	r3, [r7, #40]	; 0x28
   3495c:	ldrb	r0, [r3, #396]!	; 0x18c
   34960:	cmp	r0, #0
   34964:	subeq	r3, r3, #308	; 0x134
   34968:	mov	r0, r5
   3496c:	ldr	r1, [pc, #708]	; 34c38 <burst_TS6+0x730>
   34970:	add	r1, pc, r1
   34974:	bl	e3a8 <sprintf@plt>
   34978:	add	r5, r5, r8
   3497c:	add	r9, r9, r8
   34980:	ldr	r4, [r4, #8]
   34984:	cmp	r4, #0
   34988:	beq	34a00 <burst_TS6+0x4f8>
   3498c:	ldr	r7, [r4]
   34990:	ldr	r0, [r7, #40]	; 0x28
   34994:	ldrb	r1, [r0, #396]!	; 0x18c
   34998:	cmp	r1, #0
   3499c:	subeq	r0, r0, #308	; 0x134
   349a0:	bl	dc94 <strlen@plt>
   349a4:	add	r8, r0, #1
   349a8:	cmp	r7, #0
   349ac:	beq	349c4 <burst_TS6+0x4bc>
   349b0:	ldr	r1, [r7, #44]	; 0x2c
   349b4:	tst	r1, #2
   349b8:	addne	r8, r0, #2
   349bc:	and	r0, r1, #1
   349c0:	add	r8, r8, r0
   349c4:	add	r0, r8, r9
   349c8:	cmp	r0, #508	; 0x1fc
   349cc:	ble	34948 <burst_TS6+0x440>
   349d0:	mov	r0, #0
   349d4:	strb	r0, [r5, #-1]
   349d8:	ldr	r0, [sp, #56]	; 0x38
   349dc:	ldr	r1, [pc, #588]	; 34c30 <burst_TS6+0x728>
   349e0:	add	r1, pc, r1
   349e4:	ldr	r2, [pc, #584]	; 34c34 <burst_TS6+0x72c>
   349e8:	add	r2, pc, r2
   349ec:	bl	d1e4 <sendto_one@plt>
   349f0:	mov	r5, sl
   349f4:	mov	r9, r6
   349f8:	b	34948 <burst_TS6+0x440>
   349fc:	mov	r5, sl
   34a00:	ldr	r9, [sp, #48]	; 0x30
   34a04:	ldr	r0, [r9, #132]	; 0x84
   34a08:	cmp	r0, #0
   34a0c:	movne	r0, #0
   34a10:	strbne	r0, [r5, #-1]
   34a14:	ldr	r8, [sp, #56]	; 0x38
   34a18:	mov	r0, r8
   34a1c:	ldr	r1, [pc, #536]	; 34c3c <burst_TS6+0x734>
   34a20:	add	r1, pc, r1
   34a24:	ldr	r2, [pc, #532]	; 34c40 <burst_TS6+0x738>
   34a28:	add	r2, pc, r2
   34a2c:	bl	d1e4 <sendto_one@plt>
   34a30:	ldr	r0, [r9, #168]	; 0xa8
   34a34:	cmp	r0, #0
   34a38:	ldr	r7, [sp, #52]	; 0x34
   34a3c:	ldr	r4, [pc, #512]	; 34c44 <burst_TS6+0x73c>
   34a40:	add	r4, pc, r4
   34a44:	beq	34a5c <burst_TS6+0x554>
   34a48:	add	r2, r9, #160	; 0xa0
   34a4c:	mov	r0, r8
   34a50:	mov	r1, r9
   34a54:	mov	r3, #98	; 0x62
   34a58:	bl	351cc <burst_modes_TS6>
   34a5c:	ldr	r0, [pc, #484]	; 34c48 <burst_TS6+0x740>
   34a60:	ldr	r0, [pc, r0]
   34a64:	ldr	r0, [r0]
   34a68:	ldr	r1, [r8, #432]	; 0x1b0
   34a6c:	ldr	r1, [r1, #296]	; 0x128
   34a70:	and	r1, r0, r1
   34a74:	cmp	r1, r0
   34a78:	bne	34a9c <burst_TS6+0x594>
   34a7c:	ldr	r0, [r9, #180]	; 0xb4
   34a80:	cmp	r0, #0
   34a84:	beq	34a9c <burst_TS6+0x594>
   34a88:	add	r2, r9, #172	; 0xac
   34a8c:	mov	r0, r8
   34a90:	mov	r1, r9
   34a94:	mov	r3, #101	; 0x65
   34a98:	bl	351cc <burst_modes_TS6>
   34a9c:	ldr	r0, [pc, #424]	; 34c4c <burst_TS6+0x744>
   34aa0:	ldr	r0, [pc, r0]
   34aa4:	ldr	r0, [r0]
   34aa8:	ldr	r1, [r8, #432]	; 0x1b0
   34aac:	ldr	r1, [r1, #296]	; 0x128
   34ab0:	and	r1, r0, r1
   34ab4:	cmp	r1, r0
   34ab8:	bne	34adc <burst_TS6+0x5d4>
   34abc:	ldr	r0, [r9, #192]	; 0xc0
   34ac0:	cmp	r0, #0
   34ac4:	beq	34adc <burst_TS6+0x5d4>
   34ac8:	add	r2, r9, #184	; 0xb8
   34acc:	mov	r0, r8
   34ad0:	mov	r1, r9
   34ad4:	mov	r3, #73	; 0x49
   34ad8:	bl	351cc <burst_modes_TS6>
   34adc:	ldr	r0, [r9, #204]	; 0xcc
   34ae0:	cmp	r0, #0
   34ae4:	beq	34afc <burst_TS6+0x5f4>
   34ae8:	add	r2, r9, #196	; 0xc4
   34aec:	mov	r0, r8
   34af0:	mov	r1, r9
   34af4:	mov	r3, #113	; 0x71
   34af8:	bl	351cc <burst_modes_TS6>
   34afc:	ldr	r0, [pc, #332]	; 34c50 <burst_TS6+0x748>
   34b00:	ldr	r0, [pc, r0]
   34b04:	ldr	r0, [r0]
   34b08:	ldr	r1, [r8, #432]	; 0x1b0
   34b0c:	ldr	r1, [r1, #296]	; 0x128
   34b10:	and	r1, r0, r1
   34b14:	cmp	r1, r0
   34b18:	bne	34b74 <burst_TS6+0x66c>
   34b1c:	ldr	r0, [r9, #108]	; 0x6c
   34b20:	cmp	r0, #0
   34b24:	beq	34b74 <burst_TS6+0x66c>
   34b28:	ldr	r1, [r9, #116]	; 0x74
   34b2c:	ldr	r3, [r9, #236]	; 0xec
   34b30:	ldr	r2, [pc, #284]	; 34c54 <burst_TS6+0x74c>
   34b34:	ldr	r2, [pc, r2]
   34b38:	ldr	r6, [r2, #56]	; 0x38
   34b3c:	cmp	r6, #0
   34b40:	mov	r2, r4
   34b44:	ldrne	r2, [r9, #112]	; 0x70
   34b48:	cmp	r6, #0
   34b4c:	ldr	r6, [pc, #260]	; 34c58 <burst_TS6+0x750>
   34b50:	add	r6, pc, r6
   34b54:	moveq	r6, r4
   34b58:	stm	sp, {r1, r2, r6}
   34b5c:	str	r0, [sp, #12]
   34b60:	mov	r0, r8
   34b64:	ldr	r1, [pc, #240]	; 34c5c <burst_TS6+0x754>
   34b68:	add	r1, pc, r1
   34b6c:	ldr	r2, [sp, #44]	; 0x2c
   34b70:	bl	d1e4 <sendto_one@plt>
   34b74:	ldr	r0, [pc, #228]	; 34c60 <burst_TS6+0x758>
   34b78:	ldr	r0, [pc, r0]
   34b7c:	ldr	r0, [r0]
   34b80:	ldr	r1, [r8, #432]	; 0x1b0
   34b84:	ldr	r1, [r1, #296]	; 0x128
   34b88:	and	r1, r0, r1
   34b8c:	cmp	r1, r0
   34b90:	bne	348b0 <burst_TS6+0x3a8>
   34b94:	ldr	r1, [r9, #104]	; 0x68
   34b98:	ldr	r3, [r9, #232]	; 0xe8
   34b9c:	ldr	r0, [r9, #236]	; 0xec
   34ba0:	cmp	r1, #0
   34ba4:	mov	r2, r4
   34ba8:	beq	34898 <burst_TS6+0x390>
   34bac:	ldrb	r2, [r1]
   34bb0:	cmp	r2, #0
   34bb4:	moveq	r1, r4
   34bb8:	mov	r2, r1
   34bbc:	b	34898 <burst_TS6+0x390>
   34bc0:	mov	r0, #0
   34bc4:	str	r0, [sp, #76]	; 0x4c
   34bc8:	ldr	r0, [pc, #156]	; 34c6c <burst_TS6+0x764>
   34bcc:	ldr	r0, [pc, r0]
   34bd0:	ldr	r0, [r0]
   34bd4:	add	r1, sp, #72	; 0x48
   34bd8:	bl	e654 <call_hook@plt>
   34bdc:	sub	sp, fp, #28
   34be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34be4:	.word	0x0002656c
   34be8:	.word	0x00013791
   34bec:	.word	0x00026428
   34bf0:	.word	0x0000d041
   34bf4:	.word	0x0000d009
   34bf8:	.word	0x00011ff6
   34bfc:	.word	0x000260f8
   34c00:	.word	0x000262d0
   34c04:	.word	0x00036854
   34c08:	.word	0x00011e3f
   34c0c:	.word	0x00011fd2
   34c10:	.word	0x00011fb3
   34c14:	.word	0x000262d8
   34c18:	.word	0x00011f7a
   34c1c:	.word	0x00011f62
   34c20:	.word	0x000263b4
   34c24:	.word	0x00011f27
   34c28:	.word	0x00011ee0
   34c2c:	.word	0x0002656c
   34c30:	.word	0x00012fd5
   34c34:	.word	0x00036770
   34c38:	.word	0x0000c3b4
   34c3c:	.word	0x00012f95
   34c40:	.word	0x00036730
   34c44:	.word	0x00011115
   34c48:	.word	0x0002601c
   34c4c:	.word	0x00025fd4
   34c50:	.word	0x00025e14
   34c54:	.word	0x00025fe4
   34c58:	.word	0x00011968
   34c5c:	.word	0x00011bfd
   34c60:	.word	0x00025d1c
   34c64:	.word	0x0000ca21
   34c68:	.word	0x00025fe4
   34c6c:	.word	0x00025e60

00034c70 <__bswap_16>:
   34c70:	rev16	r0, r0
   34c74:	bx	lr

00034c78 <serv_connect_ssl_callback>:
   34c78:	push	{r4, r5, r6, sl, fp, lr}
   34c7c:	add	fp, sp, #16
   34c80:	sub	sp, sp, #16
   34c84:	mov	r4, r2
   34c88:	mov	r6, r1
   34c8c:	mov	r5, r0
   34c90:	ldr	r0, [r2, #432]	; 0x1b0
   34c94:	add	r1, r0, #140	; 0x8c
   34c98:	mov	r0, r5
   34c9c:	mov	r2, #128	; 0x80
   34ca0:	bl	d334 <rb_connect_sockaddr@plt>
   34ca4:	cmp	r6, #0
   34ca8:	beq	34cb8 <serv_connect_ssl_callback+0x40>
   34cac:	mov	r0, r5
   34cb0:	mov	r1, r6
   34cb4:	b	34d5c <serv_connect_ssl_callback+0xe4>
   34cb8:	ldr	r0, [pc, #172]	; 34d6c <serv_connect_ssl_callback+0xf4>
   34cbc:	add	r0, pc, r0
   34cc0:	add	r3, sp, #8
   34cc4:	add	r1, r3, #4
   34cc8:	str	r1, [sp]
   34ccc:	str	r0, [sp, #4]
   34cd0:	mov	r0, #1
   34cd4:	mov	r1, #1
   34cd8:	mov	r2, #0
   34cdc:	bl	d514 <rb_socketpair@plt>
   34ce0:	cmn	r0, #1
   34ce4:	beq	34d40 <serv_connect_ssl_callback+0xc8>
   34ce8:	ldr	r0, [r4, #432]	; 0x1b0
   34cec:	ldr	r1, [sp, #8]
   34cf0:	ldr	r2, [pc, #124]	; 34d74 <serv_connect_ssl_callback+0xfc>
   34cf4:	add	r2, pc, r2
   34cf8:	str	r2, [r0, #448]	; 0x1c0
   34cfc:	str	r1, [r0, #300]	; 0x12c
   34d00:	ldr	r6, [sp, #12]
   34d04:	mov	r0, r4
   34d08:	bl	dbe0 <connid_get@plt>
   34d0c:	mov	r2, r0
   34d10:	mov	r0, r5
   34d14:	mov	r1, r6
   34d18:	bl	d1d8 <start_ssld_connect@plt>
   34d1c:	ldr	r1, [r4, #432]	; 0x1b0
   34d20:	str	r0, [r1, #436]	; 0x1b4
   34d24:	cmp	r0, #0
   34d28:	beq	34d54 <serv_connect_ssl_callback+0xdc>
   34d2c:	ldr	r0, [r1, #452]	; 0x1c4
   34d30:	orr	r0, r0, #1
   34d34:	str	r0, [r1, #452]	; 0x1c4
   34d38:	sub	sp, fp, #16
   34d3c:	pop	{r4, r5, r6, sl, fp, pc}
   34d40:	ldr	r0, [pc, #40]	; 34d70 <serv_connect_ssl_callback+0xf8>
   34d44:	add	r0, pc, r0
   34d48:	bl	d5f8 <ilog_error@plt>
   34d4c:	mov	r0, r5
   34d50:	b	34d58 <serv_connect_ssl_callback+0xe0>
   34d54:	ldr	r0, [r1, #300]	; 0x12c
   34d58:	mov	r1, #5
   34d5c:	mov	r2, r4
   34d60:	bl	34d78 <serv_connect_callback>
   34d64:	sub	sp, fp, #16
   34d68:	pop	{r4, r5, r6, sl, fp, pc}
   34d6c:	.word	0x00011adc
   34d70:	.word	0x00011a6d
   34d74:	.word	0x00000638

00034d78 <serv_connect_callback>:
   34d78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   34d7c:	add	fp, sp, #24
   34d80:	sub	sp, sp, #16
   34d84:	cmp	r2, #0
   34d88:	beq	34dc4 <serv_connect_callback+0x4c>
   34d8c:	mov	r4, r2
   34d90:	mov	r7, r1
   34d94:	mov	r6, r0
   34d98:	add	r5, r2, #88	; 0x58
   34d9c:	mov	r0, #0
   34da0:	mov	r1, r5
   34da4:	bl	df04 <find_server@plt>
   34da8:	cmp	r0, #0
   34dac:	beq	34dcc <serv_connect_callback+0x54>
   34db0:	ldr	r2, [pc, #920]	; 35150 <serv_connect_callback+0x3d8>
   34db4:	ldr	r2, [pc, r2]
   34db8:	ldr	r3, [pc, #916]	; 35154 <serv_connect_callback+0x3dc>
   34dbc:	add	r3, pc, r3
   34dc0:	b	34f88 <serv_connect_callback+0x210>
   34dc4:	sub	sp, fp, #24
   34dc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34dcc:	ldr	r0, [r4, #432]	; 0x1b0
   34dd0:	ldr	r1, [r0, #436]	; 0x1b4
   34dd4:	cmp	r1, #0
   34dd8:	bne	34dec <serv_connect_callback+0x74>
   34ddc:	add	r1, r0, #140	; 0x8c
   34de0:	mov	r0, r6
   34de4:	mov	r2, #128	; 0x80
   34de8:	bl	d334 <rb_connect_sockaddr@plt>
   34dec:	cmp	r7, #0
   34df0:	beq	34e58 <serv_connect_callback+0xe0>
   34df4:	cmp	r7, #6
   34df8:	cmpne	r7, #3
   34dfc:	bne	34ef8 <serv_connect_callback+0x180>
   34e00:	mov	r0, r4
   34e04:	bl	dea4 <is_remote_connect@plt>
   34e08:	mov	r6, r0
   34e0c:	mov	r0, r7
   34e10:	bl	e2ac <rb_errstr@plt>
   34e14:	ldr	r1, [pc, #828]	; 35158 <serv_connect_callback+0x3e0>
   34e18:	add	r1, pc, r1
   34e1c:	str	r1, [sp]
   34e20:	str	r0, [sp, #4]
   34e24:	cmp	r6, #0
   34e28:	movwne	r6, #1
   34e2c:	lsl	r1, r6, #8
   34e30:	ldr	r6, [pc, #804]	; 3515c <serv_connect_callback+0x3e4>
   34e34:	add	r6, pc, r6
   34e38:	mov	r0, #256	; 0x100
   34e3c:	mov	r2, r6
   34e40:	mov	r3, r5
   34e44:	bl	d634 <sendto_realops_snomask@plt>
   34e48:	mov	r0, r7
   34e4c:	bl	e2ac <rb_errstr@plt>
   34e50:	str	r0, [sp]
   34e54:	b	34f5c <serv_connect_callback+0x1e4>
   34e58:	ldr	r0, [r4, #432]	; 0x1b0
   34e5c:	ldr	r7, [r0, #136]	; 0x88
   34e60:	cmp	r7, #0
   34e64:	beq	34f9c <serv_connect_callback+0x224>
   34e68:	ldr	r0, [r7, #280]	; 0x118
   34e6c:	cmp	r0, #0
   34e70:	beq	34fd8 <serv_connect_callback+0x260>
   34e74:	ldr	r1, [r4, #444]	; 0x1bc
   34e78:	cmp	r1, #0
   34e7c:	beq	34e8c <serv_connect_callback+0x114>
   34e80:	bl	d340 <rb_strcasecmp@plt>
   34e84:	cmp	r0, #0
   34e88:	beq	34fd8 <serv_connect_callback+0x260>
   34e8c:	mov	r0, r4
   34e90:	bl	dea4 <is_remote_connect@plt>
   34e94:	ldr	r1, [r4, #444]	; 0x1bc
   34e98:	str	r1, [sp]
   34e9c:	cmp	r0, #0
   34ea0:	movwne	r0, #1
   34ea4:	lsl	r1, r0, #8
   34ea8:	ldr	r2, [pc, #712]	; 35178 <serv_connect_callback+0x400>
   34eac:	add	r2, pc, r2
   34eb0:	mov	r0, #256	; 0x100
   34eb4:	mov	r3, r5
   34eb8:	bl	d634 <sendto_realops_snomask@plt>
   34ebc:	ldr	r5, [r4, #444]	; 0x1bc
   34ec0:	mov	r0, r4
   34ec4:	mov	r1, #1
   34ec8:	bl	e168 <log_client_name@plt>
   34ecc:	mov	r3, r0
   34ed0:	ldr	r1, [pc, #676]	; 3517c <serv_connect_callback+0x404>
   34ed4:	add	r1, pc, r1
   34ed8:	mov	r0, #5
   34edc:	mov	r2, r5
   34ee0:	bl	e0b4 <ilog@plt>
   34ee4:	ldr	r2, [pc, #660]	; 35180 <serv_connect_callback+0x408>
   34ee8:	ldr	r2, [pc, r2]
   34eec:	ldr	r3, [pc, #656]	; 35184 <serv_connect_callback+0x40c>
   34ef0:	add	r3, pc, r3
   34ef4:	b	34f88 <serv_connect_callback+0x210>
   34ef8:	mov	r0, r6
   34efc:	bl	e4bc <rb_get_sockerr@plt>
   34f00:	bl	dac0 <strerror@plt>
   34f04:	mov	r8, r0
   34f08:	mov	r0, r4
   34f0c:	bl	dea4 <is_remote_connect@plt>
   34f10:	mov	r6, r0
   34f14:	mov	r0, r7
   34f18:	bl	e2ac <rb_errstr@plt>
   34f1c:	ldr	r1, [pc, #572]	; 35160 <serv_connect_callback+0x3e8>
   34f20:	add	r1, pc, r1
   34f24:	str	r1, [sp]
   34f28:	stmib	sp, {r0, r8}
   34f2c:	cmp	r6, #0
   34f30:	movwne	r6, #1
   34f34:	lsl	r1, r6, #8
   34f38:	ldr	r6, [pc, #548]	; 35164 <serv_connect_callback+0x3ec>
   34f3c:	add	r6, pc, r6
   34f40:	mov	r0, #256	; 0x100
   34f44:	mov	r2, r6
   34f48:	mov	r3, r5
   34f4c:	bl	d634 <sendto_realops_snomask@plt>
   34f50:	mov	r0, r7
   34f54:	bl	e2ac <rb_errstr@plt>
   34f58:	stm	sp, {r0, r8}
   34f5c:	movw	r0, #291	; 0x123
   34f60:	add	r3, r4, r0
   34f64:	mov	r0, #5
   34f68:	mov	r1, r6
   34f6c:	mov	r2, r5
   34f70:	bl	e0b4 <ilog@plt>
   34f74:	mov	r0, r7
   34f78:	bl	e2ac <rb_errstr@plt>
   34f7c:	mov	r3, r0
   34f80:	ldr	r2, [pc, #480]	; 35168 <serv_connect_callback+0x3f0>
   34f84:	ldr	r2, [pc, r2]
   34f88:	mov	r0, r4
   34f8c:	mov	r1, r4
   34f90:	sub	sp, fp, #24
   34f94:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   34f98:	b	e534 <exit_client@plt>
   34f9c:	mov	r0, r4
   34fa0:	bl	dea4 <is_remote_connect@plt>
   34fa4:	cmp	r0, #0
   34fa8:	movwne	r0, #1
   34fac:	lsl	r1, r0, #8
   34fb0:	ldr	r2, [pc, #436]	; 3516c <serv_connect_callback+0x3f4>
   34fb4:	add	r2, pc, r2
   34fb8:	mov	r0, #256	; 0x100
   34fbc:	mov	r3, r5
   34fc0:	bl	d634 <sendto_realops_snomask@plt>
   34fc4:	ldr	r2, [pc, #420]	; 35170 <serv_connect_callback+0x3f8>
   34fc8:	ldr	r2, [pc, r2]
   34fcc:	ldr	r3, [pc, #416]	; 35174 <serv_connect_callback+0x3fc>
   34fd0:	add	r3, pc, r3
   34fd4:	b	34f88 <serv_connect_callback+0x210>
   34fd8:	mov	r0, #0
   34fdc:	strb	r0, [r4, #82]	; 0x52
   34fe0:	mov	r0, #2
   34fe4:	strh	r0, [r4, #80]	; 0x50
   34fe8:	ldr	r0, [r7, #276]	; 0x114
   34fec:	cmp	r0, #0
   34ff0:	beq	3500c <serv_connect_callback+0x294>
   34ff4:	ldrb	r1, [r0]
   34ff8:	ldr	r2, [pc, #396]	; 3518c <serv_connect_callback+0x414>
   34ffc:	add	r2, pc, r2
   35000:	cmp	r1, #0
   35004:	movne	r2, r0
   35008:	b	35014 <serv_connect_callback+0x29c>
   3500c:	ldr	r2, [pc, #372]	; 35188 <serv_connect_callback+0x410>
   35010:	add	r2, pc, r2
   35014:	ldr	r8, [pc, #372]	; 35190 <serv_connect_callback+0x418>
   35018:	ldr	r8, [pc, r8]
   3501c:	add	r0, r8, #396	; 0x18c
   35020:	str	r0, [sp]
   35024:	ldr	r1, [pc, #360]	; 35194 <serv_connect_callback+0x41c>
   35028:	add	r1, pc, r1
   3502c:	mov	r0, r4
   35030:	mov	r3, #6
   35034:	bl	d1e4 <sendto_one@plt>
   35038:	ldr	r0, [pc, #344]	; 35198 <serv_connect_callback+0x420>
   3503c:	ldr	r0, [pc, r0]
   35040:	ldr	r9, [r0]
   35044:	ldr	r0, [pc, #336]	; 3519c <serv_connect_callback+0x424>
   35048:	ldr	r0, [pc, r0]
   3504c:	ldr	r0, [r0]
   35050:	bl	d8f8 <capability_index_mask@plt>
   35054:	ldr	r1, [pc, #324]	; 351a0 <serv_connect_callback+0x428>
   35058:	ldr	r1, [pc, r1]
   3505c:	ldr	r1, [r1]
   35060:	ldr	r2, [pc, #316]	; 351a4 <serv_connect_callback+0x42c>
   35064:	ldr	r2, [pc, r2]
   35068:	ldr	r2, [r2]
   3506c:	orr	r1, r2, r1
   35070:	bic	r0, r0, r1
   35074:	orr	r1, r0, r9
   35078:	ldr	r0, [pc, #296]	; 351a8 <serv_connect_callback+0x430>
   3507c:	ldr	r0, [pc, r0]
   35080:	ldr	r0, [r0]
   35084:	ldr	r2, [r7, #288]	; 0x120
   35088:	tst	r2, #8
   3508c:	orrne	r1, r1, r0
   35090:	ldr	r0, [pc, #276]	; 351ac <serv_connect_callback+0x434>
   35094:	ldr	r0, [pc, r0]
   35098:	ldr	r0, [r0]
   3509c:	tst	r2, #16
   350a0:	orrne	r1, r1, r0
   350a4:	mov	r0, r4
   350a8:	bl	d0dc <send_capabilities@plt>
   350ac:	movw	r0, #345	; 0x159
   350b0:	add	r0, r8, r0
   350b4:	ldr	r1, [pc, #244]	; 351b0 <serv_connect_callback+0x438>
   350b8:	ldr	r1, [pc, r1]
   350bc:	ldr	r1, [r1, #8]
   350c0:	str	r0, [sp]
   350c4:	ldr	r0, [pc, #232]	; 351b4 <serv_connect_callback+0x43c>
   350c8:	add	r0, pc, r0
   350cc:	ldr	r3, [pc, #228]	; 351b8 <serv_connect_callback+0x440>
   350d0:	add	r3, pc, r3
   350d4:	cmp	r1, #0
   350d8:	moveq	r3, r0
   350dc:	add	r2, r8, #88	; 0x58
   350e0:	ldr	r1, [pc, #212]	; 351bc <serv_connect_callback+0x444>
   350e4:	add	r1, pc, r1
   350e8:	mov	r0, r4
   350ec:	bl	d1e4 <sendto_one@plt>
   350f0:	ldrh	r0, [r4, #64]	; 0x40
   350f4:	movw	r1, #16418	; 0x4022
   350f8:	tst	r0, r1
   350fc:	beq	3513c <serv_connect_callback+0x3c4>
   35100:	mov	r0, r4
   35104:	bl	dea4 <is_remote_connect@plt>
   35108:	cmp	r0, #0
   3510c:	movwne	r0, #1
   35110:	lsl	r1, r0, #8
   35114:	ldr	r2, [pc, #164]	; 351c0 <serv_connect_callback+0x448>
   35118:	add	r2, pc, r2
   3511c:	mov	r0, #256	; 0x100
   35120:	mov	r3, r5
   35124:	bl	d634 <sendto_realops_snomask@plt>
   35128:	ldr	r2, [pc, #148]	; 351c4 <serv_connect_callback+0x44c>
   3512c:	ldr	r2, [pc, r2]
   35130:	ldr	r3, [pc, #144]	; 351c8 <serv_connect_callback+0x450>
   35134:	add	r3, pc, r3
   35138:	b	34f88 <serv_connect_callback+0x210>
   3513c:	mov	r0, r6
   35140:	mov	r1, r4
   35144:	sub	sp, fp, #24
   35148:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3514c:	b	d760 <read_packet@plt>
   35150:	.word	0x00025da4
   35154:	.word	0x00011a15
   35158:	.word	0x0000ca7d
   3515c:	.word	0x000119ab
   35160:	.word	0x0000c975
   35164:	.word	0x000118c2
   35168:	.word	0x00025bd4
   3516c:	.word	0x0001186e
   35170:	.word	0x00025b90
   35174:	.word	0x0001186e
   35178:	.word	0x000119a7
   3517c:	.word	0x000119b7
   35180:	.word	0x00025c70
   35184:	.word	0x000119d5
   35188:	.word	0x0000c68d
   3518c:	.word	0x0000c6a1
   35190:	.word	0x00025b40
   35194:	.word	0x00011469
   35198:	.word	0x00025a60
   3519c:	.word	0x00025838
   351a0:	.word	0x000258d0
   351a4:	.word	0x00025800
   351a8:	.word	0x00025868
   351ac:	.word	0x00025880
   351b0:	.word	0x000258fc
   351b4:	.word	0x00010a8d
   351b8:	.word	0x000113e5
   351bc:	.word	0x000113bf
   351c0:	.word	0x000117c2
   351c4:	.word	0x00025a2c
   351c8:	.word	0x000117c4

000351cc <burst_modes_TS6>:
   351cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   351d0:	add	fp, sp, #28
   351d4:	sub	sp, sp, #20
   351d8:	mov	r8, r2
   351dc:	str	r0, [sp, #16]
   351e0:	ldr	r7, [r1, #232]	; 0xe8
   351e4:	ldr	r0, [r1, #236]	; 0xec
   351e8:	stm	sp, {r0, r3}
   351ec:	ldr	r0, [pc, #284]	; 35310 <burst_modes_TS6+0x144>
   351f0:	ldr	r0, [pc, r0]
   351f4:	add	r2, r0, #396	; 0x18c
   351f8:	ldr	r6, [pc, #276]	; 35314 <burst_modes_TS6+0x148>
   351fc:	add	r6, pc, r6
   35200:	ldr	r1, [pc, #272]	; 35318 <burst_modes_TS6+0x14c>
   35204:	add	r1, pc, r1
   35208:	mov	r0, r6
   3520c:	mov	r3, r7
   35210:	bl	e3a8 <sprintf@plt>
   35214:	add	r6, r6, r0
   35218:	ldr	sl, [r8]
   3521c:	cmp	sl, #0
   35220:	beq	352e8 <burst_modes_TS6+0x11c>
   35224:	mov	r4, r0
   35228:	mov	r5, r0
   3522c:	str	r6, [sp, #12]
   35230:	b	35254 <burst_modes_TS6+0x88>
   35234:	ldr	r1, [pc, #236]	; 35328 <burst_modes_TS6+0x15c>
   35238:	add	r1, pc, r1
   3523c:	bl	e3a8 <sprintf@plt>
   35240:	add	r5, r5, r7
   35244:	add	r6, r6, r7
   35248:	ldr	sl, [sl, #8]
   3524c:	cmp	sl, #0
   35250:	beq	352e8 <burst_modes_TS6+0x11c>
   35254:	ldr	r9, [sl]
   35258:	ldr	r0, [r9]
   3525c:	bl	dc94 <strlen@plt>
   35260:	mov	r8, r0
   35264:	ldr	r0, [r9, #12]
   35268:	cmp	r0, #0
   3526c:	mov	r1, #0
   35270:	beq	3527c <burst_modes_TS6+0xb0>
   35274:	bl	dc94 <strlen@plt>
   35278:	add	r1, r0, #1
   3527c:	add	r0, r8, r1
   35280:	add	r7, r0, #1
   35284:	add	r0, r7, r5
   35288:	movw	r1, #510	; 0x1fe
   3528c:	cmp	r0, r1
   35290:	blt	352c4 <burst_modes_TS6+0xf8>
   35294:	cmp	r5, r4
   35298:	beq	35248 <burst_modes_TS6+0x7c>
   3529c:	mov	r0, #0
   352a0:	strb	r0, [r6, #-1]
   352a4:	ldr	r0, [sp, #16]
   352a8:	ldr	r1, [pc, #108]	; 3531c <burst_modes_TS6+0x150>
   352ac:	add	r1, pc, r1
   352b0:	ldr	r2, [pc, #104]	; 35320 <burst_modes_TS6+0x154>
   352b4:	add	r2, pc, r2
   352b8:	bl	d1e4 <sendto_one@plt>
   352bc:	ldr	r6, [sp, #12]
   352c0:	mov	r5, r4
   352c4:	ldr	r2, [r9]
   352c8:	ldr	r3, [r9, #12]
   352cc:	mov	r0, r6
   352d0:	cmp	r3, #0
   352d4:	beq	35234 <burst_modes_TS6+0x68>
   352d8:	ldr	r1, [pc, #68]	; 35324 <burst_modes_TS6+0x158>
   352dc:	add	r1, pc, r1
   352e0:	bl	e3a8 <sprintf@plt>
   352e4:	b	35240 <burst_modes_TS6+0x74>
   352e8:	mov	r0, #0
   352ec:	strb	r0, [r6, #-1]
   352f0:	ldr	r1, [pc, #52]	; 3532c <burst_modes_TS6+0x160>
   352f4:	add	r1, pc, r1
   352f8:	ldr	r2, [pc, #48]	; 35330 <burst_modes_TS6+0x164>
   352fc:	add	r2, pc, r2
   35300:	ldr	r0, [sp, #16]
   35304:	sub	sp, fp, #28
   35308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3530c:	b	d1e4 <sendto_one@plt>
   35310:	.word	0x00025968
   35314:	.word	0x00035f5c
   35318:	.word	0x00011577
   3531c:	.word	0x00012709
   35320:	.word	0x00035ea4
   35324:	.word	0x000114b5
   35328:	.word	0x000123ff
   3532c:	.word	0x000126c1
   35330:	.word	0x00035e5c

00035334 <serv_connect_ssl_open_callback>:
   35334:	push	{fp, lr}
   35338:	mov	fp, sp
   3533c:	mov	r2, r0
   35340:	ldr	r0, [r0, #432]	; 0x1b0
   35344:	ldr	r0, [r0, #300]	; 0x12c
   35348:	bl	34d78 <serv_connect_callback>
   3534c:	mov	r0, #1
   35350:	pop	{fp, pc}

00035354 <show_lusers>:
   35354:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   35358:	add	fp, sp, #24
   3535c:	sub	sp, sp, #16
   35360:	mov	r4, r0
   35364:	ldr	r5, [pc, #380]	; 354e8 <show_lusers+0x194>
   35368:	ldr	r5, [pc, r5]
   3536c:	ldr	r0, [r5, #8]
   35370:	ldr	r8, [pc, #372]	; 354ec <show_lusers+0x198>
   35374:	ldr	r8, [pc, r8]
   35378:	ldr	r1, [r8]
   3537c:	cmp	r0, r1
   35380:	strhi	r0, [r8]
   35384:	ldr	r6, [pc, #356]	; 354f0 <show_lusers+0x19c>
   35388:	ldr	r6, [pc, r6]
   3538c:	ldr	r1, [r6, #8]
   35390:	add	r0, r1, r0
   35394:	ldr	r9, [pc, #344]	; 354f4 <show_lusers+0x1a0>
   35398:	ldr	r9, [pc, r9]
   3539c:	ldr	r1, [r9]
   353a0:	cmp	r0, r1
   353a4:	strhi	r0, [r9]
   353a8:	ldr	r7, [pc, #328]	; 354f8 <show_lusers+0x1a4>
   353ac:	ldr	r7, [pc, r7]
   353b0:	ldmib	r7, {r0, r1}
   353b4:	ldr	r2, [pc, #320]	; 354fc <show_lusers+0x1a8>
   353b8:	ldr	r2, [pc, r2]
   353bc:	ldr	r2, [r2, #8]
   353c0:	stm	sp, {r1, r2}
   353c4:	sub	r3, r0, r1
   353c8:	ldr	r2, [pc, #304]	; 35500 <show_lusers+0x1ac>
   353cc:	add	r2, pc, r2
   353d0:	mov	r0, r4
   353d4:	mov	r1, #251	; 0xfb
   353d8:	bl	dc7c <sendto_one_numeric@plt>
   353dc:	ldr	r0, [pc, #288]	; 35504 <show_lusers+0x1b0>
   353e0:	ldr	r0, [pc, r0]
   353e4:	ldr	r3, [r0, #8]
   353e8:	cmp	r3, #0
   353ec:	beq	35404 <show_lusers+0xb0>
   353f0:	ldr	r2, [pc, #272]	; 35508 <show_lusers+0x1b4>
   353f4:	add	r2, pc, r2
   353f8:	mov	r0, r4
   353fc:	mov	r1, #252	; 0xfc
   35400:	bl	dc7c <sendto_one_numeric@plt>
   35404:	ldr	r0, [pc, #256]	; 3550c <show_lusers+0x1b8>
   35408:	ldr	r0, [pc, r0]
   3540c:	ldr	r3, [r0, #8]
   35410:	cmp	r3, #0
   35414:	beq	3542c <show_lusers+0xd8>
   35418:	ldr	r2, [pc, #240]	; 35510 <show_lusers+0x1bc>
   3541c:	add	r2, pc, r2
   35420:	mov	r0, r4
   35424:	mov	r1, #253	; 0xfd
   35428:	bl	dc7c <sendto_one_numeric@plt>
   3542c:	ldr	r0, [pc, #224]	; 35514 <show_lusers+0x1c0>
   35430:	ldr	r0, [pc, r0]
   35434:	ldr	r3, [r0, #8]
   35438:	cmp	r3, #0
   3543c:	beq	35454 <show_lusers+0x100>
   35440:	ldr	r2, [pc, #208]	; 35518 <show_lusers+0x1c4>
   35444:	add	r2, pc, r2
   35448:	mov	r0, r4
   3544c:	mov	r1, #254	; 0xfe
   35450:	bl	dc7c <sendto_one_numeric@plt>
   35454:	ldr	r3, [r5, #8]
   35458:	ldr	r0, [r6, #8]
   3545c:	str	r0, [sp]
   35460:	ldr	r2, [pc, #180]	; 3551c <show_lusers+0x1c8>
   35464:	add	r2, pc, r2
   35468:	mov	r0, r4
   3546c:	mov	r1, #255	; 0xff
   35470:	bl	dc7c <sendto_one_numeric@plt>
   35474:	ldr	r3, [r5, #8]
   35478:	ldr	r0, [r7, #12]
   3547c:	stm	sp, {r0, r3}
   35480:	str	r0, [sp, #8]
   35484:	ldr	r2, [pc, #148]	; 35520 <show_lusers+0x1cc>
   35488:	add	r2, pc, r2
   3548c:	mov	r0, r4
   35490:	movw	r1, #265	; 0x109
   35494:	bl	dc7c <sendto_one_numeric@plt>
   35498:	ldr	r3, [r7, #4]
   3549c:	ldr	r0, [r7, #16]
   354a0:	stm	sp, {r0, r3}
   354a4:	str	r0, [sp, #8]
   354a8:	ldr	r2, [pc, #116]	; 35524 <show_lusers+0x1d0>
   354ac:	add	r2, pc, r2
   354b0:	mov	r0, r4
   354b4:	movw	r1, #266	; 0x10a
   354b8:	bl	dc7c <sendto_one_numeric@plt>
   354bc:	ldr	r3, [r9]
   354c0:	ldr	r0, [r8]
   354c4:	ldr	r1, [r7, #20]
   354c8:	stm	sp, {r0, r1}
   354cc:	ldr	r2, [pc, #84]	; 35528 <show_lusers+0x1d4>
   354d0:	add	r2, pc, r2
   354d4:	mov	r0, r4
   354d8:	mov	r1, #250	; 0xfa
   354dc:	bl	dc7c <sendto_one_numeric@plt>
   354e0:	sub	sp, fp, #24
   354e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   354e8:	.word	0x000257c0
   354ec:	.word	0x00025790
   354f0:	.word	0x00025648
   354f4:	.word	0x00025540
   354f8:	.word	0x00025574
   354fc:	.word	0x000254c0
   35500:	.word	0x0001155c
   35504:	.word	0x000256c0
   35508:	.word	0x00011567
   3550c:	.word	0x0002546c
   35510:	.word	0x00011558
   35514:	.word	0x0002553c
   35518:	.word	0x0001154a
   3551c:	.word	0x0001153f
   35520:	.word	0x0001153d
   35524:	.word	0x0001153f
   35528:	.word	0x00011542

0003552c <register_local_user>:
   3552c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35530:	add	fp, sp, #28
   35534:	sub	sp, sp, #564	; 0x234
   35538:	mvn	sl, #0
   3553c:	cmp	r1, #0
   35540:	beq	35560 <register_local_user+0x34>
   35544:	mov	r6, r1
   35548:	mov	r5, r0
   3554c:	mov	r4, r1
   35550:	ldr	r0, [r4, #64]!	; 0x40
   35554:	movw	r1, #16418	; 0x4022
   35558:	tst	r0, r1
   3555c:	beq	3556c <register_local_user+0x40>
   35560:	mov	r0, sl
   35564:	sub	sp, fp, #28
   35568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3556c:	ldr	r9, [pc, #2556]	; 35f70 <register_local_user+0xa44>
   35570:	ldr	r9, [pc, r9]
   35574:	ldr	r1, [r9, #252]	; 0xfc
   35578:	cmp	r1, #0
   3557c:	beq	355a0 <register_local_user+0x74>
   35580:	tst	r0, #1
   35584:	bne	35598 <register_local_user+0x6c>
   35588:	ldr	r1, [r6, #432]	; 0x1b0
   3558c:	ldr	r1, [r1, #348]	; 0x15c
   35590:	cmp	r1, #0
   35594:	beq	35640 <register_local_user+0x114>
   35598:	tst	r0, #64	; 0x40
   3559c:	beq	35560 <register_local_user+0x34>
   355a0:	tst	r0, #16
   355a4:	bne	35560 <register_local_user+0x34>
   355a8:	ldr	r0, [r6, #436]	; 0x1b4
   355ac:	ldr	r0, [r0, #108]	; 0x6c
   355b0:	cmp	r0, #0
   355b4:	bne	35560 <register_local_user+0x34>
   355b8:	bl	d07c <rb_current_time@plt>
   355bc:	ldr	r1, [r5, #432]	; 0x1b0
   355c0:	str	r0, [r1, #312]	; 0x138
   355c4:	ldr	r1, [r6, #432]	; 0x1b0
   355c8:	str	r0, [r1, #48]	; 0x30
   355cc:	ldrb	r0, [r4]
   355d0:	tst	r0, #128	; 0x80
   355d4:	bne	35680 <register_local_user+0x154>
   355d8:	add	r7, r6, #152	; 0x98
   355dc:	mov	r0, r7
   355e0:	mov	r1, #91	; 0x5b
   355e4:	bl	dce8 <strchr@plt>
   355e8:	cmp	r0, #0
   355ec:	beq	35680 <register_local_user+0x154>
   355f0:	ldrb	r7, [r7]
   355f4:	mov	ip, #0
   355f8:	cmp	r7, #0
   355fc:	mov	r1, #0
   35600:	beq	35634 <register_local_user+0x108>
   35604:	add	r2, r6, #153	; 0x99
   35608:	mov	r1, #0
   3560c:	add	r3, sp, #37	; 0x25
   35610:	uxtb	r0, r7
   35614:	cmp	r0, #91	; 0x5b
   35618:	strbne	r7, [r3, r1]
   3561c:	addne	r1, r1, #1
   35620:	cmp	r1, #9
   35624:	bgt	35634 <register_local_user+0x108>
   35628:	ldrb	r7, [r2], #1
   3562c:	cmp	r7, #0
   35630:	bne	35610 <register_local_user+0xe4>
   35634:	add	r0, sp, #37	; 0x25
   35638:	strb	ip, [r0, r1]
   3563c:	b	35690 <register_local_user+0x164>
   35640:	bl	e0a8 <rand@plt>
   35644:	mov	r5, r0
   35648:	bl	e0a8 <rand@plt>
   3564c:	mul	r0, r5, r0
   35650:	mov	r1, #1
   35654:	orr	r2, r1, r0, lsl #1
   35658:	ldr	r0, [r6, #432]	; 0x1b0
   3565c:	str	r2, [r0, #348]	; 0x15c
   35660:	ldr	r1, [pc, #2316]	; 35f74 <register_local_user+0xa48>
   35664:	add	r1, pc, r1
   35668:	mov	r0, r6
   3566c:	bl	d1e4 <sendto_one@plt>
   35670:	ldr	r0, [r4]
   35674:	orr	r0, r0, #1
   35678:	str	r0, [r4]
   3567c:	b	35560 <register_local_user+0x34>
   35680:	add	r1, r6, #152	; 0x98
   35684:	add	r0, sp, #37	; 0x25
   35688:	mov	r2, #11
   3568c:	bl	e510 <rb_strlcpy@plt>
   35690:	add	r2, sp, #37	; 0x25
   35694:	mov	r0, r5
   35698:	mov	r1, r6
   3569c:	bl	d4f0 <check_client@plt>
   356a0:	mvn	sl, #1
   356a4:	cmp	r0, #0
   356a8:	bmi	35560 <register_local_user+0x34>
   356ac:	ldr	r0, [r6, #436]	; 0x1b4
   356b0:	ldrb	r0, [r0]
   356b4:	cmp	r0, #0
   356b8:	beq	35714 <register_local_user+0x1e8>
   356bc:	add	r7, r6, #88	; 0x58
   356c0:	mov	r0, r7
   356c4:	mov	r1, r6
   356c8:	bl	db14 <del_from_client_hash@plt>
   356cc:	ldr	r1, [r6, #436]	; 0x1b4
   356d0:	mov	r0, r7
   356d4:	mov	r2, #33	; 0x21
   356d8:	bl	e510 <rb_strlcpy@plt>
   356dc:	mov	r0, r7
   356e0:	mov	r1, r6
   356e4:	bl	da3c <add_to_client_hash@plt>
   356e8:	add	r8, sp, #48	; 0x30
   356ec:	ldr	r2, [pc, #2180]	; 35f78 <register_local_user+0xa4c>
   356f0:	add	r2, pc, r2
   356f4:	mov	r0, r8
   356f8:	mov	r1, #73	; 0x49
   356fc:	mov	r3, r7
   35700:	bl	de74 <snprintf@plt>
   35704:	ldr	r0, [r6, #432]	; 0x1b0
   35708:	ldr	r0, [r0, #300]	; 0x12c
   3570c:	mov	r1, r8
   35710:	bl	e270 <rb_note@plt>
   35714:	add	r7, r6, #163	; 0xa3
   35718:	mov	r0, r7
   3571c:	bl	e084 <valid_hostname@plt>
   35720:	cmp	r0, #0
   35724:	bne	3574c <register_local_user+0x220>
   35728:	ldr	r1, [pc, #2124]	; 35f7c <register_local_user+0xa50>
   3572c:	add	r1, pc, r1
   35730:	mov	r0, r6
   35734:	bl	e414 <sendto_one_notice@plt>
   35738:	movw	r0, #291	; 0x123
   3573c:	add	r1, r6, r0
   35740:	mov	r0, r7
   35744:	mov	r2, #64	; 0x40
   35748:	bl	e510 <rb_strlcpy@plt>
   3574c:	ldr	r0, [r6, #432]	; 0x1b0
   35750:	ldr	lr, [r0, #132]	; 0x84
   35754:	cmp	lr, #0
   35758:	beq	357f8 <register_local_user+0x2cc>
   3575c:	ldr	r8, [lr, #4]
   35760:	tst	r8, #2
   35764:	beq	357ac <register_local_user+0x280>
   35768:	ldrb	r1, [r0, #452]	; 0x1c4
   3576c:	tst	r1, #1
   35770:	bne	357ac <register_local_user+0x280>
   35774:	ldr	r0, [pc, #2060]	; 35f88 <register_local_user+0xa5c>
   35778:	ldr	r0, [pc, r0]
   3577c:	ldr	r1, [r0, #68]	; 0x44
   35780:	add	r1, r1, #1
   35784:	str	r1, [r0, #68]	; 0x44
   35788:	ldr	r1, [pc, #2044]	; 35f8c <register_local_user+0xa60>
   3578c:	add	r1, pc, r1
   35790:	mov	r0, r6
   35794:	bl	e414 <sendto_one_notice@plt>
   35798:	ldr	r2, [pc, #2032]	; 35f90 <register_local_user+0xa64>
   3579c:	ldr	r2, [pc, r2]
   357a0:	ldr	r3, [pc, #2028]	; 35f94 <register_local_user+0xa68>
   357a4:	add	r3, pc, r3
   357a8:	b	35808 <register_local_user+0x2dc>
   357ac:	tst	r8, #268435456	; 0x10000000
   357b0:	bne	35818 <register_local_user+0x2ec>
   357b4:	ldr	r0, [r0, #452]	; 0x1c4
   357b8:	ands	r0, r0, #8
   357bc:	beq	35818 <register_local_user+0x2ec>
   357c0:	ldr	r0, [pc, #2000]	; 35f98 <register_local_user+0xa6c>
   357c4:	ldr	r0, [pc, r0]
   357c8:	ldr	r1, [r0, #68]	; 0x44
   357cc:	add	r1, r1, #1
   357d0:	str	r1, [r0, #68]	; 0x44
   357d4:	ldr	r1, [pc, #1984]	; 35f9c <register_local_user+0xa70>
   357d8:	add	r1, pc, r1
   357dc:	mov	r0, r6
   357e0:	bl	e414 <sendto_one_notice@plt>
   357e4:	ldr	r2, [pc, #1972]	; 35fa0 <register_local_user+0xa74>
   357e8:	ldr	r2, [pc, r2]
   357ec:	ldr	r3, [pc, #1968]	; 35fa4 <register_local_user+0xa78>
   357f0:	add	r3, pc, r3
   357f4:	b	35808 <register_local_user+0x2dc>
   357f8:	ldr	r2, [pc, #1920]	; 35f80 <register_local_user+0xa54>
   357fc:	ldr	r2, [pc, r2]
   35800:	ldr	r3, [pc, #1916]	; 35f84 <register_local_user+0xa58>
   35804:	add	r3, pc, r3
   35808:	mov	r0, r5
   3580c:	mov	r1, r6
   35810:	bl	e534 <exit_client@plt>
   35814:	b	35560 <register_local_user+0x34>
   35818:	ldrb	r0, [r4]
   3581c:	tst	r0, #128	; 0x80
   35820:	bne	358ac <register_local_user+0x380>
   35824:	tst	r8, #8
   35828:	bne	35974 <register_local_user+0x448>
   3582c:	tst	r8, #512	; 0x200
   35830:	beq	35850 <register_local_user+0x324>
   35834:	ldr	r0, [lr, #12]
   35838:	mov	r1, #64	; 0x40
   3583c:	str	lr, [sp, #28]
   35840:	bl	dce8 <strchr@plt>
   35844:	ldr	lr, [sp, #28]
   35848:	cmp	r0, #0
   3584c:	bne	358ac <register_local_user+0x380>
   35850:	mov	r0, #0
   35854:	tst	r8, #4
   35858:	moveq	r0, #126	; 0x7e
   3585c:	strbeq	r0, [r6, #152]	; 0x98
   35860:	moveq	r0, #1
   35864:	ldrb	r2, [sp, #37]	; 0x25
   35868:	cmp	r2, #0
   3586c:	beq	358a0 <register_local_user+0x374>
   35870:	add	r1, sp, #37	; 0x25
   35874:	add	r1, r1, #1
   35878:	uxtb	r3, r2
   3587c:	cmp	r3, #91	; 0x5b
   35880:	addne	r3, r6, r0
   35884:	strbne	r2, [r3, #152]	; 0x98
   35888:	addne	r0, r0, #1
   3588c:	cmp	r0, #9
   35890:	bgt	358a0 <register_local_user+0x374>
   35894:	ldrb	r2, [r1], #1
   35898:	cmp	r2, #0
   3589c:	bne	35878 <register_local_user+0x34c>
   358a0:	add	r0, r6, r0
   358a4:	mov	r1, #0
   358a8:	strb	r1, [r0, #152]	; 0x98
   358ac:	ldr	r3, [lr, #4]
   358b0:	tst	r3, #262144	; 0x40000
   358b4:	beq	358c8 <register_local_user+0x39c>
   358b8:	ldr	r0, [r6, #24]
   358bc:	ldrb	r0, [r0, #40]	; 0x28
   358c0:	cmp	r0, #0
   358c4:	beq	359ac <register_local_user+0x480>
   358c8:	ldr	r1, [lr, #20]
   358cc:	cmp	r1, #0
   358d0:	str	r7, [sp, #32]
   358d4:	beq	35a2c <register_local_user+0x500>
   358d8:	ldrb	r0, [r1]
   358dc:	cmp	r0, #0
   358e0:	beq	35a2c <register_local_user+0x500>
   358e4:	ldr	r0, [r6, #432]	; 0x1b0
   358e8:	ldr	ip, [r0, #276]	; 0x114
   358ec:	ldr	r0, [pc, #1748]	; 35fc8 <register_local_user+0xa9c>
   358f0:	add	r0, pc, r0
   358f4:	cmp	ip, #0
   358f8:	beq	35910 <register_local_user+0x3e4>
   358fc:	ldrb	r2, [ip]
   35900:	cmp	r2, #0
   35904:	movne	r0, ip
   35908:	tstne	r3, #2097152	; 0x200000
   3590c:	bne	35d40 <register_local_user+0x814>
   35910:	ldr	r1, [lr, #20]
   35914:	mov	r8, lr
   35918:	bl	d0c4 <strcmp@plt>
   3591c:	cmp	r0, #0
   35920:	beq	359e4 <register_local_user+0x4b8>
   35924:	ldr	r0, [pc, #1696]	; 35fcc <register_local_user+0xaa0>
   35928:	ldr	r0, [pc, r0]
   3592c:	ldr	r1, [r0, #68]	; 0x44
   35930:	add	r1, r1, #1
   35934:	str	r1, [r0, #68]	; 0x44
   35938:	add	r3, r6, #88	; 0x58
   3593c:	ldr	r7, [pc, #1676]	; 35fd0 <register_local_user+0xaa4>
   35940:	ldr	r7, [pc, r7]
   35944:	add	r2, r7, #88	; 0x58
   35948:	ldr	r1, [pc, #1668]	; 35fd4 <register_local_user+0xaa8>
   3594c:	add	r1, pc, r1
   35950:	mov	r0, r6
   35954:	bl	d1e4 <sendto_one@plt>
   35958:	ldr	r3, [pc, #1656]	; 35fd8 <register_local_user+0xaac>
   3595c:	add	r3, pc, r3
   35960:	mov	r0, r5
   35964:	mov	r1, r6
   35968:	mov	r2, r7
   3596c:	bl	e534 <exit_client@plt>
   35970:	b	35560 <register_local_user+0x34>
   35974:	ldr	r0, [pc, #1580]	; 35fa8 <register_local_user+0xa7c>
   35978:	ldr	r0, [pc, r0]
   3597c:	ldr	r1, [r0, #68]	; 0x44
   35980:	add	r1, r1, #1
   35984:	str	r1, [r0, #68]	; 0x44
   35988:	ldr	r1, [pc, #1564]	; 35fac <register_local_user+0xa80>
   3598c:	add	r1, pc, r1
   35990:	mov	r0, r6
   35994:	bl	e414 <sendto_one_notice@plt>
   35998:	ldr	r2, [pc, #1552]	; 35fb0 <register_local_user+0xa84>
   3599c:	ldr	r2, [pc, r2]
   359a0:	ldr	r3, [pc, #1548]	; 35fb4 <register_local_user+0xa88>
   359a4:	add	r3, pc, r3
   359a8:	b	35808 <register_local_user+0x2dc>
   359ac:	ldr	r0, [pc, #1540]	; 35fb8 <register_local_user+0xa8c>
   359b0:	ldr	r0, [pc, r0]
   359b4:	ldr	r1, [r0, #68]	; 0x44
   359b8:	add	r1, r1, #1
   359bc:	str	r1, [r0, #68]	; 0x44
   359c0:	ldr	r1, [pc, #1524]	; 35fbc <register_local_user+0xa90>
   359c4:	add	r1, pc, r1
   359c8:	mov	r0, r6
   359cc:	bl	e414 <sendto_one_notice@plt>
   359d0:	ldr	r2, [pc, #1512]	; 35fc0 <register_local_user+0xa94>
   359d4:	ldr	r2, [pc, r2]
   359d8:	ldr	r3, [pc, #1508]	; 35fc4 <register_local_user+0xa98>
   359dc:	add	r3, pc, r3
   359e0:	b	35808 <register_local_user+0x2dc>
   359e4:	mov	lr, r8
   359e8:	ldr	r0, [r6, #432]	; 0x1b0
   359ec:	ldr	r0, [r0, #276]	; 0x114
   359f0:	cmp	r0, #0
   359f4:	beq	35a2c <register_local_user+0x500>
   359f8:	str	r0, [sp, #28]
   359fc:	bl	dc94 <strlen@plt>
   35a00:	mov	r2, r0
   35a04:	ldr	r0, [sp, #28]
   35a08:	mov	r1, #0
   35a0c:	bl	df28 <memset@plt>
   35a10:	ldr	r0, [r6, #432]	; 0x1b0
   35a14:	ldr	r0, [r0, #276]	; 0x114
   35a18:	bl	36138 <rb_free>
   35a1c:	mov	lr, r8
   35a20:	ldr	r0, [r6, #432]	; 0x1b0
   35a24:	mov	r1, #0
   35a28:	str	r1, [r0, #276]	; 0x114
   35a2c:	mov	r0, r6
   35a30:	mov	r1, lr
   35a34:	mov	r7, lr
   35a38:	bl	36144 <report_and_set_user_flags>
   35a3c:	ldr	r0, [pc, #1432]	; 35fdc <register_local_user+0xab0>
   35a40:	ldr	r0, [pc, r0]
   35a44:	ldr	r0, [r0]
   35a48:	ldr	r1, [pc, #1424]	; 35fe0 <register_local_user+0xab4>
   35a4c:	ldr	r1, [pc, r1]
   35a50:	ldr	r1, [r1, #8]
   35a54:	cmp	r1, r0
   35a58:	bcc	35ab0 <register_local_user+0x584>
   35a5c:	ldrb	r0, [r7, #4]
   35a60:	tst	r0, #128	; 0x80
   35a64:	bne	35ab0 <register_local_user+0x584>
   35a68:	ldr	r0, [sp, #32]
   35a6c:	str	r0, [sp]
   35a70:	add	r3, r6, #88	; 0x58
   35a74:	ldr	r2, [pc, #1384]	; 35fe4 <register_local_user+0xab8>
   35a78:	add	r2, pc, r2
   35a7c:	mov	r0, #16
   35a80:	mov	r1, #0
   35a84:	bl	d634 <sendto_realops_snomask@plt>
   35a88:	ldr	r0, [pc, #1368]	; 35fe8 <register_local_user+0xabc>
   35a8c:	ldr	r0, [pc, r0]
   35a90:	ldr	r1, [r0, #68]	; 0x44
   35a94:	add	r1, r1, #1
   35a98:	str	r1, [r0, #68]	; 0x44
   35a9c:	ldr	r2, [pc, #1352]	; 35fec <register_local_user+0xac0>
   35aa0:	ldr	r2, [pc, r2]
   35aa4:	ldr	r3, [pc, #1348]	; 35ff0 <register_local_user+0xac4>
   35aa8:	add	r3, pc, r3
   35aac:	b	35808 <register_local_user+0x2dc>
   35ab0:	ldrb	r0, [r4, #2]
   35ab4:	tst	r0, #64	; 0x40
   35ab8:	bne	35b18 <register_local_user+0x5ec>
   35abc:	movw	r0, #345	; 0x159
   35ac0:	add	r0, r6, r0
   35ac4:	mov	r1, #1
   35ac8:	bl	e1b0 <find_xline@plt>
   35acc:	cmp	r0, #0
   35ad0:	beq	35b18 <register_local_user+0x5ec>
   35ad4:	ldr	r1, [pc, #1304]	; 35ff4 <register_local_user+0xac8>
   35ad8:	ldr	r1, [pc, r1]
   35adc:	ldr	r2, [r1, #68]	; 0x44
   35ae0:	add	r2, r2, #1
   35ae4:	str	r2, [r1, #68]	; 0x44
   35ae8:	ldr	r1, [r0, #16]
   35aec:	mov	r0, #0
   35af0:	str	r0, [sp]
   35af4:	mov	r0, r6
   35af8:	mov	r2, #0
   35afc:	mov	r3, #0
   35b00:	bl	e138 <add_reject@plt>
   35b04:	ldr	r2, [pc, #1260]	; 35ff8 <register_local_user+0xacc>
   35b08:	ldr	r2, [pc, r2]
   35b0c:	ldr	r3, [pc, #1256]	; 35ffc <register_local_user+0xad0>
   35b10:	add	r3, pc, r3
   35b14:	b	35808 <register_local_user+0x2dc>
   35b18:	mov	r0, r5
   35b1c:	mov	r1, r6
   35b20:	bl	362f8 <authd_check>
   35b24:	cmp	r0, #0
   35b28:	bne	35560 <register_local_user+0x34>
   35b2c:	add	r7, r6, #152	; 0x98
   35b30:	mov	r0, r7
   35b34:	bl	e078 <valid_username@plt>
   35b38:	cmp	r0, #0
   35b3c:	beq	35cc4 <register_local_user+0x798>
   35b40:	add	r8, r6, #227	; 0xe3
   35b44:	mov	r0, r8
   35b48:	ldr	r1, [sp, #32]
   35b4c:	mov	r2, #64	; 0x40
   35b50:	bl	e510 <rb_strlcpy@plt>
   35b54:	ldr	r1, [r6, #436]	; 0x1b4
   35b58:	ldrb	r0, [r1, #33]!	; 0x21
   35b5c:	cmp	r0, #0
   35b60:	beq	35b70 <register_local_user+0x644>
   35b64:	mov	r0, r7
   35b68:	mov	r2, #11
   35b6c:	bl	e510 <rb_strlcpy@plt>
   35b70:	ldr	r1, [r6, #436]	; 0x1b4
   35b74:	ldrb	r0, [r1, #44]!	; 0x2c
   35b78:	cmp	r0, #0
   35b7c:	beq	35bb4 <register_local_user+0x688>
   35b80:	str	r8, [sp, #28]
   35b84:	ldr	r8, [sp, #32]
   35b88:	mov	r0, r8
   35b8c:	mov	r2, #64	; 0x40
   35b90:	bl	e510 <rb_strlcpy@plt>
   35b94:	mov	r0, r8
   35b98:	ldr	r8, [sp, #28]
   35b9c:	mov	r1, r8
   35ba0:	bl	e750 <irccmp@plt>
   35ba4:	cmp	r0, #0
   35ba8:	ldrne	r0, [r4]
   35bac:	orrne	r0, r0, #131072	; 0x20000
   35bb0:	strne	r0, [r4]
   35bb4:	ldr	r0, [r9, #216]	; 0xd8
   35bb8:	ldr	r1, [r9, #312]	; 0x138
   35bbc:	bic	r0, r1, r0
   35bc0:	ldr	r1, [pc, #1100]	; 36014 <register_local_user+0xae8>
   35bc4:	ldr	r1, [pc, r1]
   35bc8:	bic	r0, r0, r1
   35bcc:	ldr	r1, [r6, #56]	; 0x38
   35bd0:	orr	r0, r1, r0
   35bd4:	str	r0, [r6, #56]	; 0x38
   35bd8:	ldr	r0, [pc, #1080]	; 36018 <register_local_user+0xaec>
   35bdc:	ldr	r0, [pc, r0]
   35be0:	ldr	r0, [r0]
   35be4:	mov	r1, r6
   35be8:	bl	e654 <call_hook@plt>
   35bec:	ldrh	r0, [r4]
   35bf0:	movw	r1, #16418	; 0x4022
   35bf4:	tst	r0, r1
   35bf8:	bne	35560 <register_local_user+0x34>
   35bfc:	ldr	r0, [r6, #432]	; 0x1b0
   35c00:	add	r0, r0, #140	; 0x8c
   35c04:	add	r4, sp, #48	; 0x30
   35c08:	mov	r1, r4
   35c0c:	mov	r2, #53	; 0x35
   35c10:	bl	cf50 <rb_inet_ntop_sock@plt>
   35c14:	mov	r0, #0
   35c18:	mov	r1, r6
   35c1c:	bl	e60c <show_ip@plt>
   35c20:	mov	sl, r0
   35c24:	movw	r0, #345	; 0x159
   35c28:	add	r9, r6, r0
   35c2c:	mov	r0, r6
   35c30:	bl	d5ec <get_client_class@plt>
   35c34:	ldr	r2, [pc, #992]	; 3601c <register_local_user+0xaf0>
   35c38:	add	r2, pc, r2
   35c3c:	cmp	sl, #0
   35c40:	mov	r1, r4
   35c44:	moveq	r1, r2
   35c48:	mov	sl, r2
   35c4c:	str	r7, [sp, #28]
   35c50:	str	r7, [sp]
   35c54:	mov	r7, r8
   35c58:	str	r8, [sp, #4]
   35c5c:	str	r1, [sp, #8]
   35c60:	str	r0, [sp, #12]
   35c64:	str	r9, [sp, #16]
   35c68:	add	r3, r6, #88	; 0x58
   35c6c:	ldr	r2, [pc, #940]	; 36020 <register_local_user+0xaf4>
   35c70:	add	r2, pc, r2
   35c74:	mov	r0, #4
   35c78:	mov	r1, #0
   35c7c:	str	r3, [sp, #32]
   35c80:	bl	d634 <sendto_realops_snomask@plt>
   35c84:	mov	r0, #0
   35c88:	mov	r1, r6
   35c8c:	bl	e60c <show_ip@plt>
   35c90:	cmp	r0, #0
   35c94:	moveq	r4, sl
   35c98:	mov	r0, r6
   35c9c:	bl	d5ec <get_client_class@plt>
   35ca0:	mov	sl, r0
   35ca4:	mov	r0, #0
   35ca8:	mov	r1, r6
   35cac:	bl	e60c <show_ip@plt>
   35cb0:	cmp	r0, #0
   35cb4:	beq	35d58 <register_local_user+0x82c>
   35cb8:	ldr	r0, [r6, #432]	; 0x1b0
   35cbc:	ldr	r0, [r0, #288]	; 0x120
   35cc0:	b	35d60 <register_local_user+0x834>
   35cc4:	str	r7, [sp]
   35cc8:	ldr	r0, [sp, #32]
   35ccc:	str	r0, [sp, #4]
   35cd0:	add	r3, r6, #88	; 0x58
   35cd4:	ldr	r2, [pc, #804]	; 36000 <register_local_user+0xad4>
   35cd8:	add	r2, pc, r2
   35cdc:	mov	r0, #128	; 0x80
   35ce0:	mov	r1, #0
   35ce4:	bl	d634 <sendto_realops_snomask@plt>
   35ce8:	ldr	r0, [pc, #788]	; 36004 <register_local_user+0xad8>
   35cec:	ldr	r0, [pc, r0]
   35cf0:	ldr	r1, [r0, #68]	; 0x44
   35cf4:	add	r1, r1, #1
   35cf8:	str	r1, [r0, #68]	; 0x44
   35cfc:	ldr	r1, [pc, #772]	; 36008 <register_local_user+0xadc>
   35d00:	add	r1, pc, r1
   35d04:	mov	r0, r6
   35d08:	bl	e414 <sendto_one_notice@plt>
   35d0c:	add	r4, sp, #48	; 0x30
   35d10:	ldr	r1, [pc, #756]	; 3600c <register_local_user+0xae0>
   35d14:	add	r1, pc, r1
   35d18:	mov	r0, r4
   35d1c:	mov	r2, r7
   35d20:	bl	e3a8 <sprintf@plt>
   35d24:	ldr	r2, [pc, #740]	; 36010 <register_local_user+0xae4>
   35d28:	ldr	r2, [pc, r2]
   35d2c:	mov	r0, r5
   35d30:	mov	r1, r6
   35d34:	mov	r3, r4
   35d38:	bl	e534 <exit_client@plt>
   35d3c:	b	35560 <register_local_user+0x34>
   35d40:	mov	r8, lr
   35d44:	bl	d97c <rb_crypt@plt>
   35d48:	mov	lr, r8
   35d4c:	cmp	r0, #0
   35d50:	bne	35910 <register_local_user+0x3e4>
   35d54:	b	35924 <register_local_user+0x3f8>
   35d58:	ldr	r0, [pc, #708]	; 36024 <register_local_user+0xaf8>
   35d5c:	add	r0, pc, r0
   35d60:	ldr	r1, [sp, #28]
   35d64:	stm	sp, {r1, r7}
   35d68:	str	r4, [sp, #8]
   35d6c:	str	sl, [sp, #12]
   35d70:	str	r0, [sp, #16]
   35d74:	str	r9, [sp, #20]
   35d78:	ldr	r2, [pc, #680]	; 36028 <register_local_user+0xafc>
   35d7c:	add	r2, pc, r2
   35d80:	mov	r0, #1
   35d84:	mov	r1, #0
   35d88:	ldr	r3, [sp, #32]
   35d8c:	bl	d634 <sendto_realops_snomask@plt>
   35d90:	mov	r0, r7
   35d94:	mov	r1, r6
   35d98:	bl	df10 <add_to_hostname_hash@plt>
   35d9c:	mov	r4, r6
   35da0:	ldrb	r0, [r4, #396]!	; 0x18c
   35da4:	cmp	r0, #0
   35da8:	bne	35dcc <register_local_user+0x8a0>
   35dac:	bl	df88 <generate_uid@plt>
   35db0:	mov	r1, r0
   35db4:	mov	r0, r4
   35db8:	mov	r2, #10
   35dbc:	bl	e510 <rb_strlcpy@plt>
   35dc0:	mov	r0, r4
   35dc4:	mov	r1, r6
   35dc8:	bl	d0d0 <add_to_id_hash@plt>
   35dcc:	ldr	r0, [r6, #432]	; 0x1b0
   35dd0:	ldr	r1, [r0, #452]	; 0x1c4
   35dd4:	and	r1, r1, #17
   35dd8:	cmp	r1, #1
   35ddc:	bne	35dec <register_local_user+0x8c0>
   35de0:	ldr	r1, [r6, #56]	; 0x38
   35de4:	orr	r1, r1, #16384	; 0x4000
   35de8:	str	r1, [r6, #56]	; 0x38
   35dec:	ldrb	r1, [r6, #56]	; 0x38
   35df0:	tst	r1, #8
   35df4:	beq	35e0c <register_local_user+0x8e0>
   35df8:	ldr	r1, [pc, #556]	; 3602c <register_local_user+0xb00>
   35dfc:	ldr	r1, [pc, r1]
   35e00:	ldr	r2, [r1, #8]
   35e04:	add	r2, r2, #1
   35e08:	str	r2, [r1, #8]
   35e0c:	bl	36878 <rb_dlinkMoveNode>
   35e10:	mov	r0, #64	; 0x40
   35e14:	strh	r0, [r6, #80]	; 0x50
   35e18:	ldr	r0, [r6, #24]
   35e1c:	cmp	r0, #0
   35e20:	beq	35e48 <register_local_user+0x91c>
   35e24:	ldr	r0, [r0, #36]	; 0x24
   35e28:	cmp	r0, #0
   35e2c:	beq	35e48 <register_local_user+0x91c>
   35e30:	ldr	r1, [pc, #504]	; 36030 <register_local_user+0xb04>
   35e34:	add	r1, pc, r1
   35e38:	bl	e594 <privilegeset_in_set@plt>
   35e3c:	mov	r1, #5
   35e40:	cmp	r0, #0
   35e44:	bne	35e74 <register_local_user+0x948>
   35e48:	ldrb	r0, [r6, #57]	; 0x39
   35e4c:	mov	r1, #1
   35e50:	tst	r0, #16
   35e54:	beq	35e74 <register_local_user+0x948>
   35e58:	ldr	r0, [r6, #24]
   35e5c:	cmp	r0, #0
   35e60:	beq	35e74 <register_local_user+0x948>
   35e64:	ldr	r0, [r0, #36]	; 0x24
   35e68:	mov	r1, #1
   35e6c:	cmp	r0, #0
   35e70:	movweq	r1, #5
   35e74:	strb	r1, [r6, #82]	; 0x52
   35e78:	ldr	r0, [pc, #436]	; 36034 <register_local_user+0xb08>
   35e7c:	ldr	r0, [pc, r0]
   35e80:	str	r0, [r6, #32]
   35e84:	ldr	r0, [r0, #28]
   35e88:	add	r1, r6, #12
   35e8c:	add	r2, r0, #48	; 0x30
   35e90:	mov	r0, r6
   35e94:	bl	36944 <rb_dlinkAdd>
   35e98:	ldr	r0, [pc, #408]	; 36038 <register_local_user+0xb0c>
   35e9c:	ldr	r0, [pc, r0]
   35ea0:	ldr	r2, [r0, #4]
   35ea4:	ldr	r3, [r0, #16]
   35ea8:	add	r1, r2, #1
   35eac:	str	r1, [r0, #4]
   35eb0:	cmp	r2, r3
   35eb4:	strge	r1, [r0, #16]
   35eb8:	ldr	r1, [r0, #12]
   35ebc:	ldr	r2, [r0, #20]
   35ec0:	add	r2, r2, #1
   35ec4:	str	r2, [r0, #20]
   35ec8:	ldr	r2, [pc, #364]	; 3603c <register_local_user+0xb10>
   35ecc:	ldr	r2, [pc, r2]
   35ed0:	ldr	r3, [r2, #8]
   35ed4:	cmp	r3, r1
   35ed8:	bls	35f18 <register_local_user+0x9ec>
   35edc:	str	r3, [r0, #12]
   35ee0:	movw	r0, #26215	; 0x6667
   35ee4:	movt	r0, #26214	; 0x6666
   35ee8:	smmul	r0, r3, r0
   35eec:	asr	r1, r0, #2
   35ef0:	add	r0, r1, r0, lsr #31
   35ef4:	add	r0, r0, r0, lsl #2
   35ef8:	sub	r0, r3, r0, lsl #1
   35efc:	cmp	r0, #0
   35f00:	bne	35f18 <register_local_user+0x9ec>
   35f04:	ldr	r2, [pc, #308]	; 36040 <register_local_user+0xb14>
   35f08:	add	r2, pc, r2
   35f0c:	mov	r0, #256	; 0x100
   35f10:	mov	r1, #0
   35f14:	bl	d634 <sendto_realops_snomask@plt>
   35f18:	movw	r0, #291	; 0x123
   35f1c:	add	r0, r6, r0
   35f20:	bl	e768 <find_tgchange@plt>
   35f24:	mov	r1, #4
   35f28:	cmp	r0, #0
   35f2c:	movweq	r1, #10
   35f30:	ldr	r0, [r6, #432]	; 0x1b0
   35f34:	str	r1, [r0, #412]	; 0x19c
   35f38:	mov	r0, r6
   35f3c:	bl	ddfc <monitor_signon@plt>
   35f40:	mov	r0, r6
   35f44:	bl	d2c8 <user_welcome@plt>
   35f48:	mov	r0, r6
   35f4c:	bl	de50 <free_pre_client@plt>
   35f50:	mov	r0, #1
   35f54:	str	r0, [sp]
   35f58:	mov	r0, r5
   35f5c:	mov	r1, r6
   35f60:	ldr	r3, [sp, #32]
   35f64:	bl	d0ac <introduce_client@plt>
   35f68:	mov	sl, #0
   35f6c:	b	35560 <register_local_user+0x34>
   35f70:	.word	0x0002560c
   35f74:	.word	0x000113f4
   35f78:	.word	0x0000bf2b
   35f7c:	.word	0x00011337
   35f80:	.word	0x0002535c
   35f84:	.word	0x0001129d
   35f88:	.word	0x00025244
   35f8c:	.word	0x00011328
   35f90:	.word	0x000253bc
   35f94:	.word	0x0001134a
   35f98:	.word	0x000251f8
   35f9c:	.word	0x00011322
   35fa0:	.word	0x00025370
   35fa4:	.word	0x00011348
   35fa8:	.word	0x00025044
   35fac:	.word	0x000111bd
   35fb0:	.word	0x000251bc
   35fb4:	.word	0x000111e2
   35fb8:	.word	0x0002500c
   35fbc:	.word	0x000111d1
   35fc0:	.word	0x00025184
   35fc4:	.word	0x000111f9
   35fc8:	.word	0x00010265
   35fcc:	.word	0x00025094
   35fd0:	.word	0x00025218
   35fd4:	.word	0x0001129a
   35fd8:	.word	0x000112a9
   35fdc:	.word	0x00024e18
   35fe0:	.word	0x000250dc
   35fe4:	.word	0x0001119a
   35fe8:	.word	0x00024f30
   35fec:	.word	0x000250b8
   35ff0:	.word	0x0001118e
   35ff4:	.word	0x00024ee4
   35ff8:	.word	0x00025050
   35ffc:	.word	0x0000ba07
   36000:	.word	0x00010f80
   36004:	.word	0x00024cd0
   36008:	.word	0x00010f75
   3600c:	.word	0x00010fcb
   36010:	.word	0x00024e30
   36014:	.word	0x00035794
   36018:	.word	0x00024f90
   3601c:	.word	0x0000bc5d
   36020:	.word	0x00011085
   36024:	.word	0x00010fe5
   36028:	.word	0x00010fa6
   3602c:	.word	0x00024b24
   36030:	.word	0x0000b1be
   36034:	.word	0x00024cdc
   36038:	.word	0x00024a84
   3603c:	.word	0x00024c5c
   36040:	.word	0x00010e4b

00036044 <valid_hostname>:
   36044:	push	{r4, r5, fp, lr}
   36048:	add	fp, sp, #8
   3604c:	mov	r4, #0
   36050:	cmp	r0, #0
   36054:	beq	36128 <valid_hostname+0xe4>
   36058:	mov	r5, r0
   3605c:	ldr	r1, [pc, #204]	; 36130 <valid_hostname+0xec>
   36060:	add	r1, pc, r1
   36064:	bl	d0c4 <strcmp@plt>
   36068:	cmp	r0, #0
   3606c:	beq	36124 <valid_hostname+0xe0>
   36070:	ldrb	r3, [r5]
   36074:	sub	r0, r3, #46	; 0x2e
   36078:	cmp	r0, #12
   3607c:	bhi	36090 <valid_hostname+0x4c>
   36080:	mov	r1, #1
   36084:	movw	r2, #4099	; 0x1003
   36088:	tst	r2, r1, lsl r0
   3608c:	bne	36128 <valid_hostname+0xe4>
   36090:	cmp	r3, #0
   36094:	beq	36128 <valid_hostname+0xe4>
   36098:	mov	r4, #0
   3609c:	ldr	r0, [pc, #144]	; 36134 <valid_hostname+0xf0>
   360a0:	ldr	r0, [pc, r0]
   360a4:	mov	r2, #0
   360a8:	mov	ip, #0
   360ac:	b	360c4 <valid_hostname+0x80>
   360b0:	add	r2, r2, #1
   360b4:	mov	ip, r5
   360b8:	ldrb	r3, [r5, #1]!
   360bc:	cmp	r3, #0
   360c0:	beq	360fc <valid_hostname+0xb8>
   360c4:	uxtb	r3, r3
   360c8:	add	r1, r0, r3, lsl #2
   360cc:	ldrb	r1, [r1, #1]
   360d0:	tst	r1, #8
   360d4:	beq	36128 <valid_hostname+0xe4>
   360d8:	cmp	r3, #58	; 0x3a
   360dc:	beq	360f4 <valid_hostname+0xb0>
   360e0:	cmp	r3, #47	; 0x2f
   360e4:	beq	360b0 <valid_hostname+0x6c>
   360e8:	cmp	r3, #46	; 0x2e
   360ec:	addeq	r2, r2, #1
   360f0:	b	360b8 <valid_hostname+0x74>
   360f4:	add	r2, r2, #1
   360f8:	b	360b8 <valid_hostname+0x74>
   360fc:	cmp	r2, #0
   36100:	beq	36128 <valid_hostname+0xe4>
   36104:	cmp	ip, #0
   36108:	beq	36124 <valid_hostname+0xe0>
   3610c:	ldrb	r1, [ip, #1]
   36110:	ldrb	r0, [r0, r1, lsl #2]
   36114:	tst	r0, #16
   36118:	moveq	r4, #1
   3611c:	mov	r0, r4
   36120:	pop	{r4, r5, fp, pc}
   36124:	mov	r4, #1
   36128:	mov	r0, r4
   3612c:	pop	{r4, r5, fp, pc}
   36130:	.word	0x00010d3c
   36134:	.word	0x00024958

00036138 <rb_free>:
   36138:	cmp	r0, #0
   3613c:	bxeq	lr
   36140:	b	d328 <free@plt>

00036144 <report_and_set_user_flags>:
   36144:	push	{r4, r5, fp, lr}
   36148:	add	fp, sp, #8
   3614c:	mov	r5, r1
   36150:	mov	r4, r0
   36154:	ldrb	r0, [r1, #5]
   36158:	tst	r0, #2
   3615c:	beq	36170 <report_and_set_user_flags+0x2c>
   36160:	ldr	r1, [pc, #360]	; 362d0 <report_and_set_user_flags+0x18c>
   36164:	add	r1, pc, r1
   36168:	mov	r0, r4
   3616c:	bl	e414 <sendto_one_notice@plt>
   36170:	ldrb	r0, [r5, #4]
   36174:	tst	r0, #64	; 0x40
   36178:	beq	36198 <report_and_set_user_flags+0x54>
   3617c:	ldr	r0, [r4, #64]	; 0x40
   36180:	orr	r0, r0, #4194304	; 0x400000
   36184:	str	r0, [r4, #64]	; 0x40
   36188:	ldr	r1, [pc, #324]	; 362d4 <report_and_set_user_flags+0x190>
   3618c:	add	r1, pc, r1
   36190:	mov	r0, r4
   36194:	bl	e414 <sendto_one_notice@plt>
   36198:	ldr	r0, [r5, #4]
   3619c:	movw	r1, #64	; 0x40
   361a0:	movt	r1, #1024	; 0x400
   361a4:	and	r0, r0, r1
   361a8:	cmp	r0, #67108864	; 0x4000000
   361ac:	bne	361c0 <report_and_set_user_flags+0x7c>
   361b0:	ldr	r1, [pc, #288]	; 362d8 <report_and_set_user_flags+0x194>
   361b4:	add	r1, pc, r1
   361b8:	mov	r0, r4
   361bc:	bl	e414 <sendto_one_notice@plt>
   361c0:	ldrb	r0, [r5, #4]
   361c4:	tst	r0, #128	; 0x80
   361c8:	beq	361dc <report_and_set_user_flags+0x98>
   361cc:	ldr	r1, [pc, #264]	; 362dc <report_and_set_user_flags+0x198>
   361d0:	add	r1, pc, r1
   361d4:	mov	r0, r4
   361d8:	bl	e414 <sendto_one_notice@plt>
   361dc:	ldrb	r0, [r5, #5]
   361e0:	tst	r0, #64	; 0x40
   361e4:	beq	36204 <report_and_set_user_flags+0xc0>
   361e8:	ldr	r0, [r4, #64]	; 0x40
   361ec:	orr	r0, r0, #8388608	; 0x800000
   361f0:	str	r0, [r4, #64]	; 0x40
   361f4:	ldr	r1, [pc, #228]	; 362e0 <report_and_set_user_flags+0x19c>
   361f8:	add	r1, pc, r1
   361fc:	mov	r0, r4
   36200:	bl	e414 <sendto_one_notice@plt>
   36204:	ldrb	r0, [r5, #5]
   36208:	tst	r0, #128	; 0x80
   3620c:	beq	3622c <report_and_set_user_flags+0xe8>
   36210:	ldr	r0, [r4, #64]	; 0x40
   36214:	orr	r0, r0, #33554432	; 0x2000000
   36218:	str	r0, [r4, #64]	; 0x40
   3621c:	ldr	r1, [pc, #192]	; 362e4 <report_and_set_user_flags+0x1a0>
   36220:	add	r1, pc, r1
   36224:	mov	r0, r4
   36228:	bl	e414 <sendto_one_notice@plt>
   3622c:	ldrb	r0, [r5, #6]
   36230:	tst	r0, #2
   36234:	beq	36254 <report_and_set_user_flags+0x110>
   36238:	ldr	r0, [r4, #64]	; 0x40
   3623c:	orr	r0, r0, #134217728	; 0x8000000
   36240:	str	r0, [r4, #64]	; 0x40
   36244:	ldr	r1, [pc, #156]	; 362e8 <report_and_set_user_flags+0x1a4>
   36248:	add	r1, pc, r1
   3624c:	mov	r0, r4
   36250:	bl	e414 <sendto_one_notice@plt>
   36254:	ldrb	r0, [r5, #5]
   36258:	tst	r0, #32
   3625c:	beq	3627c <report_and_set_user_flags+0x138>
   36260:	ldr	r0, [r4, #64]	; 0x40
   36264:	orr	r0, r0, #2097152	; 0x200000
   36268:	str	r0, [r4, #64]	; 0x40
   3626c:	ldr	r1, [pc, #120]	; 362ec <report_and_set_user_flags+0x1a8>
   36270:	add	r1, pc, r1
   36274:	mov	r0, r4
   36278:	bl	e414 <sendto_one_notice@plt>
   3627c:	ldrb	r0, [r5, #6]
   36280:	tst	r0, #1
   36284:	beq	362a4 <report_and_set_user_flags+0x160>
   36288:	ldr	r0, [r4, #64]	; 0x40
   3628c:	orr	r0, r0, #67108864	; 0x4000000
   36290:	str	r0, [r4, #64]	; 0x40
   36294:	ldr	r1, [pc, #84]	; 362f0 <report_and_set_user_flags+0x1ac>
   36298:	add	r1, pc, r1
   3629c:	mov	r0, r4
   362a0:	bl	e414 <sendto_one_notice@plt>
   362a4:	ldrb	r0, [r5, #6]
   362a8:	tst	r0, #8
   362ac:	popeq	{r4, r5, fp, pc}
   362b0:	ldr	r0, [r4, #64]	; 0x40
   362b4:	orr	r0, r0, #1048576	; 0x100000
   362b8:	str	r0, [r4, #64]	; 0x40
   362bc:	ldr	r1, [pc, #48]	; 362f4 <report_and_set_user_flags+0x1b0>
   362c0:	add	r1, pc, r1
   362c4:	mov	r0, r4
   362c8:	pop	{r4, r5, fp, lr}
   362cc:	b	e414 <sendto_one_notice@plt>
   362d0:	.word	0x000112af
   362d4:	.word	0x0001129d
   362d8:	.word	0x00011298
   362dc:	.word	0x000112a4
   362e0:	.word	0x000112a1
   362e4:	.word	0x0001129f
   362e8:	.word	0x0001129f
   362ec:	.word	0x000112a7
   362f0:	.word	0x0001129e
   362f4:	.word	0x0001129c

000362f8 <authd_check>:
   362f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   362fc:	add	fp, sp, #28
   36300:	sub	sp, sp, #44	; 0x2c
   36304:	mov	r4, r1
   36308:	mov	r9, r0
   3630c:	ldr	r0, [r1, #432]	; 0x1b0
   36310:	ldr	r1, [r1, #436]	; 0x1b4
   36314:	ldr	sl, [r0, #132]	; 0x84
   36318:	mov	r8, #0
   3631c:	str	r8, [sp, #36]	; 0x24
   36320:	str	r8, [sp, #32]
   36324:	str	r8, [sp, #40]	; 0x28
   36328:	ldrb	r0, [r1, #116]	; 0x74
   3632c:	cmp	r0, #0
   36330:	bne	3671c <authd_check+0x424>
   36334:	add	r8, r4, #88	; 0x58
   36338:	add	r6, sp, #32
   3633c:	ldr	r1, [pc, #996]	; 36728 <authd_check+0x430>
   36340:	add	r1, pc, r1
   36344:	mov	r0, r6
   36348:	mov	r2, r8
   3634c:	bl	d754 <substitution_append_var@plt>
   36350:	movw	r0, #291	; 0x123
   36354:	add	r5, r4, r0
   36358:	ldr	r1, [pc, #972]	; 3672c <authd_check+0x434>
   3635c:	add	r1, pc, r1
   36360:	mov	r0, r6
   36364:	mov	r2, r5
   36368:	bl	d754 <substitution_append_var@plt>
   3636c:	add	r7, r4, #163	; 0xa3
   36370:	ldr	r1, [pc, #952]	; 36730 <authd_check+0x438>
   36374:	add	r1, pc, r1
   36378:	mov	r0, r6
   3637c:	mov	r2, r7
   36380:	bl	d754 <substitution_append_var@plt>
   36384:	ldr	r0, [r4, #436]	; 0x1b4
   36388:	ldr	r2, [r0, #120]	; 0x78
   3638c:	ldr	r1, [pc, #928]	; 36734 <authd_check+0x43c>
   36390:	add	r1, pc, r1
   36394:	mov	r0, r6
   36398:	bl	d754 <substitution_append_var@plt>
   3639c:	ldr	r0, [pc, #916]	; 36738 <authd_check+0x440>
   363a0:	ldr	r0, [pc, r0]
   363a4:	ldr	r2, [r0, #12]
   363a8:	ldr	r1, [pc, #908]	; 3673c <authd_check+0x444>
   363ac:	add	r1, pc, r1
   363b0:	mov	r0, r6
   363b4:	bl	d754 <substitution_append_var@plt>
   363b8:	ldr	r0, [r4, #436]	; 0x1b4
   363bc:	ldr	r0, [r0, #124]	; 0x7c
   363c0:	mov	r1, r6
   363c4:	bl	e39c <substitution_parse@plt>
   363c8:	mov	r6, r0
   363cc:	ldr	r0, [r4, #436]	; 0x1b4
   363d0:	ldrb	r1, [r0, #117]	; 0x75
   363d4:	cmp	r1, #79	; 0x4f
   363d8:	beq	364c4 <authd_check+0x1cc>
   363dc:	cmp	r1, #66	; 0x42
   363e0:	bne	365b0 <authd_check+0x2b8>
   363e4:	str	r7, [sp, #28]
   363e8:	ldr	r7, [r0, #120]	; 0x78
   363ec:	ldr	r0, [pc, #844]	; 36740 <authd_check+0x448>
   363f0:	ldr	r0, [pc, r0]
   363f4:	ldr	r0, [r0]
   363f8:	cmp	r0, #0
   363fc:	beq	36418 <authd_check+0x120>
   36400:	mov	r1, r7
   36404:	bl	e6e4 <rb_dictionary_retrieve@plt>
   36408:	cmp	r0, #0
   3640c:	ldrne	r1, [r0, #8]
   36410:	addne	r1, r1, #1
   36414:	strne	r1, [r0, #8]
   36418:	ldr	r0, [r4, #64]	; 0x40
   3641c:	tst	r0, #4194304	; 0x400000
   36420:	bne	3668c <authd_check+0x394>
   36424:	ldrb	r1, [sl, #7]
   36428:	tst	r1, #4
   3642c:	bne	3668c <authd_check+0x394>
   36430:	movw	r1, #345	; 0x159
   36434:	add	r1, r4, r1
   36438:	ldr	r2, [pc, #776]	; 36748 <authd_check+0x450>
   3643c:	add	r2, pc, r2
   36440:	tst	r0, #16777216	; 0x1000000
   36444:	moveq	r2, r5
   36448:	add	r0, r4, #152	; 0x98
   3644c:	str	r8, [sp]
   36450:	str	r0, [sp, #4]
   36454:	ldr	r0, [sp, #28]
   36458:	str	r0, [sp, #8]
   3645c:	str	r2, [sp, #12]
   36460:	str	r1, [sp, #16]
   36464:	ldr	r2, [pc, #736]	; 3674c <authd_check+0x454>
   36468:	add	r2, pc, r2
   3646c:	mov	r0, #128	; 0x80
   36470:	mov	r1, #256	; 0x100
   36474:	mov	r3, r7
   36478:	bl	d634 <sendto_realops_snomask@plt>
   3647c:	str	r6, [sp]
   36480:	ldr	r0, [pc, #712]	; 36750 <authd_check+0x458>
   36484:	ldr	r0, [pc, r0]
   36488:	add	r2, r0, #88	; 0x58
   3648c:	ldr	r1, [pc, #704]	; 36754 <authd_check+0x45c>
   36490:	add	r1, pc, r1
   36494:	mov	r0, r4
   36498:	mov	r3, r8
   3649c:	bl	d1e4 <sendto_one@plt>
   364a0:	ldr	r1, [pc, #688]	; 36758 <authd_check+0x460>
   364a4:	add	r1, pc, r1
   364a8:	mov	r0, r4
   364ac:	mov	r2, r5
   364b0:	mov	r3, r7
   364b4:	bl	e414 <sendto_one_notice@plt>
   364b8:	ldr	r5, [pc, #668]	; 3675c <authd_check+0x464>
   364bc:	add	r5, pc, r5
   364c0:	b	36640 <authd_check+0x348>
   364c4:	str	r6, [sp, #28]
   364c8:	str	r9, [sp, #24]
   364cc:	ldr	r6, [r0, #120]	; 0x78
   364d0:	mov	r0, r6
   364d4:	mov	r1, #58	; 0x3a
   364d8:	bl	e27c <strrchr@plt>
   364dc:	cmp	r0, #0
   364e0:	beq	366e8 <authd_check+0x3f0>
   364e4:	mov	r9, r0
   364e8:	mov	r3, r8
   364ec:	mov	r8, #0
   364f0:	strb	r8, [r9], #1
   364f4:	ldr	r0, [r4, #64]	; 0x40
   364f8:	tst	r0, #4194304	; 0x400000
   364fc:	bne	366c8 <authd_check+0x3d0>
   36500:	ldrb	r1, [sl, #7]
   36504:	tst	r1, #8
   36508:	bne	366c8 <authd_check+0x3d0>
   3650c:	movw	r1, #345	; 0x159
   36510:	add	r1, r4, r1
   36514:	ldr	r2, [pc, #588]	; 36768 <authd_check+0x470>
   36518:	add	r2, pc, r2
   3651c:	tst	r0, #16777216	; 0x1000000
   36520:	moveq	r2, r5
   36524:	add	r0, r4, #152	; 0x98
   36528:	str	r9, [sp]
   3652c:	mov	r8, r3
   36530:	str	r3, [sp, #4]
   36534:	str	r0, [sp, #8]
   36538:	str	r7, [sp, #12]
   3653c:	str	r2, [sp, #16]
   36540:	str	r1, [sp, #20]
   36544:	ldr	r2, [pc, #544]	; 3676c <authd_check+0x474>
   36548:	add	r2, pc, r2
   3654c:	mov	r0, #128	; 0x80
   36550:	mov	r1, #256	; 0x100
   36554:	mov	r3, r6
   36558:	bl	d634 <sendto_realops_snomask@plt>
   3655c:	ldr	r0, [sp, #28]
   36560:	str	r0, [sp]
   36564:	ldr	r0, [pc, #516]	; 36770 <authd_check+0x478>
   36568:	ldr	r0, [pc, r0]
   3656c:	add	r2, r0, #88	; 0x58
   36570:	ldr	r1, [pc, #508]	; 36774 <authd_check+0x47c>
   36574:	add	r1, pc, r1
   36578:	mov	r0, r4
   3657c:	mov	r3, r8
   36580:	bl	d1e4 <sendto_one@plt>
   36584:	str	r9, [sp]
   36588:	ldr	r1, [pc, #488]	; 36778 <authd_check+0x480>
   3658c:	add	r1, pc, r1
   36590:	mov	r0, r4
   36594:	mov	r2, r5
   36598:	mov	r3, r6
   3659c:	bl	e414 <sendto_one_notice@plt>
   365a0:	ldr	r5, [pc, #468]	; 3677c <authd_check+0x484>
   365a4:	add	r5, pc, r5
   365a8:	ldr	r9, [sp, #24]
   365ac:	b	36640 <authd_check+0x348>
   365b0:	ldr	r0, [r4, #64]	; 0x40
   365b4:	tst	r0, #4194304	; 0x400000
   365b8:	bne	366ac <authd_check+0x3b4>
   365bc:	movw	r1, #345	; 0x159
   365c0:	add	r1, r4, r1
   365c4:	ldr	r2, [pc, #440]	; 36784 <authd_check+0x48c>
   365c8:	add	r2, pc, r2
   365cc:	tst	r0, #16777216	; 0x1000000
   365d0:	moveq	r2, r5
   365d4:	add	r0, r4, #152	; 0x98
   365d8:	str	r8, [sp]
   365dc:	stmib	sp, {r0, r7}
   365e0:	str	r2, [sp, #12]
   365e4:	str	r1, [sp, #16]
   365e8:	ldr	r2, [pc, #408]	; 36788 <authd_check+0x490>
   365ec:	add	r2, pc, r2
   365f0:	mov	r0, #128	; 0x80
   365f4:	mov	r1, #256	; 0x100
   365f8:	mov	r3, r6
   365fc:	bl	d634 <sendto_realops_snomask@plt>
   36600:	str	r6, [sp]
   36604:	ldr	r0, [pc, #384]	; 3678c <authd_check+0x494>
   36608:	ldr	r0, [pc, r0]
   3660c:	add	r2, r0, #88	; 0x58
   36610:	ldr	r1, [pc, #376]	; 36790 <authd_check+0x498>
   36614:	add	r1, pc, r1
   36618:	mov	r0, r4
   3661c:	mov	r3, r8
   36620:	bl	d1e4 <sendto_one@plt>
   36624:	ldr	r1, [pc, #360]	; 36794 <authd_check+0x49c>
   36628:	add	r1, pc, r1
   3662c:	mov	r0, r4
   36630:	mov	r2, r6
   36634:	bl	e414 <sendto_one_notice@plt>
   36638:	ldr	r5, [pc, #344]	; 36798 <authd_check+0x4a0>
   3663c:	add	r5, pc, r5
   36640:	str	r5, [sp]
   36644:	mov	r0, r4
   36648:	mov	r1, #0
   3664c:	mov	r2, #0
   36650:	mov	r3, #0
   36654:	bl	e138 <add_reject@plt>
   36658:	ldr	r2, [pc, #316]	; 3679c <authd_check+0x4a4>
   3665c:	ldr	r2, [pc, r2]
   36660:	mov	r0, r9
   36664:	mov	r1, r4
   36668:	mov	r3, r5
   3666c:	bl	e534 <exit_client@plt>
   36670:	ldr	r0, [pc, #296]	; 367a0 <authd_check+0x4a8>
   36674:	ldr	r0, [pc, r0]
   36678:	ldr	r1, [r0, #68]	; 0x44
   3667c:	add	r1, r1, #1
   36680:	str	r1, [r0, #68]	; 0x44
   36684:	mov	r8, #1
   36688:	b	36714 <authd_check+0x41c>
   3668c:	ldr	r1, [pc, #176]	; 36744 <authd_check+0x44c>
   36690:	add	r1, pc, r1
   36694:	mov	r0, r4
   36698:	mov	r2, r5
   3669c:	mov	r3, r7
   366a0:	bl	e414 <sendto_one_notice@plt>
   366a4:	mov	r8, #0
   366a8:	b	36714 <authd_check+0x41c>
   366ac:	ldr	r1, [pc, #204]	; 36780 <authd_check+0x488>
   366b0:	add	r1, pc, r1
   366b4:	mov	r0, r4
   366b8:	mov	r2, r6
   366bc:	bl	e414 <sendto_one_notice@plt>
   366c0:	mov	r8, #0
   366c4:	b	36714 <authd_check+0x41c>
   366c8:	str	r9, [sp]
   366cc:	ldr	r1, [pc, #144]	; 36764 <authd_check+0x46c>
   366d0:	add	r1, pc, r1
   366d4:	mov	r0, r4
   366d8:	mov	r2, r5
   366dc:	mov	r3, r6
   366e0:	bl	e414 <sendto_one_notice@plt>
   366e4:	b	36714 <authd_check+0x41c>
   366e8:	ldr	r4, [pc, #112]	; 36760 <authd_check+0x468>
   366ec:	add	r4, pc, r4
   366f0:	mov	r0, r4
   366f4:	mov	r1, r6
   366f8:	bl	d640 <ierror@plt>
   366fc:	mov	r8, #0
   36700:	mov	r0, #256	; 0x100
   36704:	mov	r1, #0
   36708:	mov	r2, r4
   3670c:	mov	r3, r6
   36710:	bl	d634 <sendto_realops_snomask@plt>
   36714:	add	r0, sp, #32
   36718:	bl	e180 <substitution_free@plt>
   3671c:	mov	r0, r8
   36720:	sub	sp, fp, #28
   36724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36728:	.word	0x0000d477
   3672c:	.word	0x0000e231
   36730:	.word	0x00010e0c
   36734:	.word	0x00010dea
   36738:	.word	0x000245b0
   3673c:	.word	0x00010dd9
   36740:	.word	0x00024690
   36744:	.word	0x00010b02
   36748:	.word	0x0000b459
   3674c:	.word	0x00010d66
   36750:	.word	0x000246d4
   36754:	.word	0x0000afae
   36758:	.word	0x00010d53
   3675c:	.word	0x00010d63
   36760:	.word	0x00010b4e
   36764:	.word	0x00010b92
   36768:	.word	0x0000b37d
   3676c:	.word	0x00010d7c
   36770:	.word	0x000245f0
   36774:	.word	0x0000aeca
   36778:	.word	0x00010d5f
   3677c:	.word	0x00010d95
   36780:	.word	0x00010c9d
   36784:	.word	0x0000b2cd
   36788:	.word	0x00010d99
   3678c:	.word	0x00024550
   36790:	.word	0x0000ae2a
   36794:	.word	0x00010da1
   36798:	.word	0x00010db8
   3679c:	.word	0x000244fc
   367a0:	.word	0x00024348

000367a4 <valid_username>:
   367a4:	push	{fp, lr}
   367a8:	mov	fp, sp
   367ac:	mov	r1, r0
   367b0:	mov	r0, #0
   367b4:	cmp	r1, #0
   367b8:	beq	3686c <valid_username+0xc8>
   367bc:	mov	r2, r1
   367c0:	ldrb	r3, [r2], #1
   367c4:	cmp	r3, #126	; 0x7e
   367c8:	movne	r2, r1
   367cc:	ldrb	r1, [r2]
   367d0:	ldr	ip, [pc, #152]	; 36870 <valid_username+0xcc>
   367d4:	ldr	ip, [pc, ip]
   367d8:	ldrb	r1, [ip, r1, lsl #2]
   367dc:	tst	r1, #20
   367e0:	popeq	{fp, pc}
   367e4:	ldrb	r0, [r2, #1]
   367e8:	cmp	r0, #0
   367ec:	beq	36860 <valid_username+0xbc>
   367f0:	add	r2, r2, #2
   367f4:	ldr	r1, [pc, #120]	; 36874 <valid_username+0xd0>
   367f8:	ldr	r1, [pc, r1]
   367fc:	ldr	lr, [r1, #80]	; 0x50
   36800:	mov	r1, #0
   36804:	b	36824 <valid_username+0x80>
   36808:	add	r0, ip, r0, lsl #2
   3680c:	ldrb	r0, [r0, #1]
   36810:	tst	r0, #4
   36814:	beq	36868 <valid_username+0xc4>
   36818:	ldrb	r0, [r2], #1
   3681c:	cmp	r0, #0
   36820:	beq	36860 <valid_username+0xbc>
   36824:	uxtb	r0, r0
   36828:	cmp	r0, #46	; 0x2e
   3682c:	bne	36808 <valid_username+0x64>
   36830:	cmp	lr, #0
   36834:	beq	36808 <valid_username+0x64>
   36838:	mov	r0, #0
   3683c:	cmp	r1, lr
   36840:	bge	3686c <valid_username+0xc8>
   36844:	ldrb	r3, [r2]
   36848:	add	r3, ip, r3, lsl #2
   3684c:	ldrb	r3, [r3, #1]
   36850:	tst	r3, #4
   36854:	beq	3686c <valid_username+0xc8>
   36858:	add	r1, r1, #1
   3685c:	b	36818 <valid_username+0x74>
   36860:	mov	r0, #1
   36864:	pop	{fp, pc}
   36868:	mov	r0, #0
   3686c:	pop	{fp, pc}
   36870:	.word	0x00024224
   36874:	.word	0x00024384

00036878 <rb_dlinkMoveNode>:
   36878:	push	{fp, lr}
   3687c:	mov	fp, sp
   36880:	cmp	r0, #0
   36884:	beq	36910 <rb_dlinkMoveNode+0x98>
   36888:	ldr	ip, [pc, #160]	; 36930 <rb_dlinkMoveNode+0xb8>
   3688c:	ldr	ip, [pc, ip]
   36890:	ldmib	r0, {r2, r3}
   36894:	add	r1, r3, #4
   36898:	cmp	r3, #0
   3689c:	addeq	r1, ip, #4
   368a0:	str	r2, [r1]
   368a4:	ldmib	r0, {r1, r2}
   368a8:	cmp	r1, #0
   368ac:	mov	r3, ip
   368b0:	addne	r3, r1, #8
   368b4:	str	r2, [r3]
   368b8:	mov	r1, #0
   368bc:	ldr	r2, [pc, #112]	; 36934 <rb_dlinkMoveNode+0xbc>
   368c0:	ldr	r2, [pc, r2]
   368c4:	ldr	r3, [r2]
   368c8:	stmib	r0, {r1, r3}
   368cc:	cmp	r3, #0
   368d0:	beq	368e0 <rb_dlinkMoveNode+0x68>
   368d4:	add	r3, r3, #4
   368d8:	str	r0, [r3]
   368dc:	b	368f0 <rb_dlinkMoveNode+0x78>
   368e0:	mov	r3, r2
   368e4:	ldr	r1, [r3, #4]!
   368e8:	cmp	r1, #0
   368ec:	streq	r0, [r3]
   368f0:	str	r0, [r2]
   368f4:	ldr	r0, [ip, #8]
   368f8:	sub	r0, r0, #1
   368fc:	str	r0, [ip, #8]
   36900:	ldr	r0, [r2, #8]
   36904:	add	r0, r0, #1
   36908:	str	r0, [r2, #8]
   3690c:	pop	{fp, pc}
   36910:	ldr	r0, [pc, #32]	; 36938 <rb_dlinkMoveNode+0xc0>
   36914:	add	r0, pc, r0
   36918:	ldr	r1, [pc, #28]	; 3693c <rb_dlinkMoveNode+0xc4>
   3691c:	add	r1, pc, r1
   36920:	ldr	r3, [pc, #24]	; 36940 <rb_dlinkMoveNode+0xc8>
   36924:	add	r3, pc, r3
   36928:	mov	r2, #114	; 0x72
   3692c:	bl	e7e0 <__assert_fail@plt>
   36930:	.word	0x00023fe8
   36934:	.word	0x00024268
   36938:	.word	0x00009ff8
   3693c:	.word	0x00009ffa
   36940:	.word	0x0000d6cb

00036944 <rb_dlinkAdd>:
   36944:	push	{fp, lr}
   36948:	mov	fp, sp
   3694c:	cmp	r0, #0
   36950:	beq	369b0 <rb_dlinkAdd+0x6c>
   36954:	cmp	r1, #0
   36958:	beq	369d0 <rb_dlinkAdd+0x8c>
   3695c:	cmp	r2, #0
   36960:	beq	369f0 <rb_dlinkAdd+0xac>
   36964:	mov	r3, #0
   36968:	stm	r1, {r0, r3}
   3696c:	ldr	r0, [r2]
   36970:	str	r0, [r1, #8]
   36974:	ldr	r0, [r2]
   36978:	cmp	r0, #0
   3697c:	beq	3698c <rb_dlinkAdd+0x48>
   36980:	add	r0, r0, #4
   36984:	str	r1, [r0]
   36988:	b	3699c <rb_dlinkAdd+0x58>
   3698c:	mov	r0, r2
   36990:	ldr	r3, [r0, #4]!
   36994:	cmp	r3, #0
   36998:	streq	r1, [r0]
   3699c:	str	r1, [r2]
   369a0:	ldr	r0, [r2, #8]
   369a4:	add	r0, r0, #1
   369a8:	str	r0, [r2, #8]
   369ac:	pop	{fp, pc}
   369b0:	ldr	r0, [pc, #88]	; 36a10 <rb_dlinkAdd+0xcc>
   369b4:	add	r0, pc, r0
   369b8:	ldr	r1, [pc, #84]	; 36a14 <rb_dlinkAdd+0xd0>
   369bc:	add	r1, pc, r1
   369c0:	ldr	r3, [pc, #80]	; 36a18 <rb_dlinkAdd+0xd4>
   369c4:	add	r3, pc, r3
   369c8:	mov	r2, #143	; 0x8f
   369cc:	bl	e7e0 <__assert_fail@plt>
   369d0:	ldr	r0, [pc, #68]	; 36a1c <rb_dlinkAdd+0xd8>
   369d4:	add	r0, pc, r0
   369d8:	ldr	r1, [pc, #64]	; 36a20 <rb_dlinkAdd+0xdc>
   369dc:	add	r1, pc, r1
   369e0:	ldr	r3, [pc, #60]	; 36a24 <rb_dlinkAdd+0xe0>
   369e4:	add	r3, pc, r3
   369e8:	mov	r2, #144	; 0x90
   369ec:	bl	e7e0 <__assert_fail@plt>
   369f0:	ldr	r0, [pc, #48]	; 36a28 <rb_dlinkAdd+0xe4>
   369f4:	add	r0, pc, r0
   369f8:	ldr	r1, [pc, #44]	; 36a2c <rb_dlinkAdd+0xe8>
   369fc:	add	r1, pc, r1
   36a00:	ldr	r3, [pc, #40]	; 36a30 <rb_dlinkAdd+0xec>
   36a04:	add	r3, pc, r3
   36a08:	mov	r2, #145	; 0x91
   36a0c:	bl	e7e0 <__assert_fail@plt>
   36a10:	.word	0x00009fbd
   36a14:	.word	0x00009f5a
   36a18:	.word	0x00009fba
   36a1c:	.word	0x00009f38
   36a20:	.word	0x00009f3a
   36a24:	.word	0x00009f9a
   36a28:	.word	0x0000f7a1
   36a2c:	.word	0x00009f1a
   36a30:	.word	0x00009f7a

00036a34 <user_welcome>:
   36a34:	push	{r4, r5, r6, sl, fp, lr}
   36a38:	add	fp, sp, #16
   36a3c:	sub	sp, sp, #16
   36a40:	mov	r4, r0
   36a44:	ldr	r0, [pc, #368]	; 36bbc <user_welcome+0x188>
   36a48:	ldr	r0, [pc, r0]
   36a4c:	ldr	r3, [r0, #12]
   36a50:	add	r5, r4, #88	; 0x58
   36a54:	str	r5, [sp]
   36a58:	ldr	r2, [pc, #352]	; 36bc0 <user_welcome+0x18c>
   36a5c:	add	r2, pc, r2
   36a60:	mov	r0, r4
   36a64:	mov	r1, #1
   36a68:	bl	dc7c <sendto_one_numeric@plt>
   36a6c:	ldr	r0, [r4, #432]	; 0x1b0
   36a70:	ldr	r0, [r0, #128]	; 0x80
   36a74:	bl	d550 <get_listener_name@plt>
   36a78:	mov	r3, r0
   36a7c:	ldr	r6, [pc, #320]	; 36bc4 <user_welcome+0x190>
   36a80:	ldr	r6, [pc, r6]
   36a84:	ldr	r0, [r6]
   36a88:	str	r0, [sp]
   36a8c:	ldr	r2, [pc, #308]	; 36bc8 <user_welcome+0x194>
   36a90:	add	r2, pc, r2
   36a94:	mov	r0, r4
   36a98:	mov	r1, #2
   36a9c:	bl	dc7c <sendto_one_numeric@plt>
   36aa0:	ldr	r0, [pc, #292]	; 36bcc <user_welcome+0x198>
   36aa4:	ldr	r0, [pc, r0]
   36aa8:	ldr	r3, [r0]
   36aac:	ldr	r2, [pc, #284]	; 36bd0 <user_welcome+0x19c>
   36ab0:	add	r2, pc, r2
   36ab4:	mov	r0, r4
   36ab8:	mov	r1, #3
   36abc:	bl	dc7c <sendto_one_numeric@plt>
   36ac0:	ldr	r0, [r6]
   36ac4:	ldr	r1, [pc, #264]	; 36bd4 <user_welcome+0x1a0>
   36ac8:	ldr	r1, [pc, r1]
   36acc:	str	r1, [sp, #8]
   36ad0:	ldr	r1, [pc, #256]	; 36bd8 <user_welcome+0x1a4>
   36ad4:	ldr	r1, [pc, r1]
   36ad8:	stm	sp, {r0, r1}
   36adc:	ldr	r0, [pc, #248]	; 36bdc <user_welcome+0x1a8>
   36ae0:	ldr	r0, [pc, r0]
   36ae4:	add	r6, r0, #88	; 0x58
   36ae8:	ldr	r2, [pc, #240]	; 36be0 <user_welcome+0x1ac>
   36aec:	add	r2, pc, r2
   36af0:	mov	r0, r4
   36af4:	mov	r1, #4
   36af8:	mov	r3, r6
   36afc:	bl	dc7c <sendto_one_numeric@plt>
   36b00:	mov	r0, r4
   36b04:	bl	da48 <show_isupport@plt>
   36b08:	mov	r0, r4
   36b0c:	bl	d8c8 <show_lusers@plt>
   36b10:	ldr	r0, [pc, #204]	; 36be4 <user_welcome+0x1b0>
   36b14:	ldr	r0, [pc, r0]
   36b18:	ldr	r0, [r0, #192]	; 0xc0
   36b1c:	cmp	r0, #0
   36b20:	beq	36bac <user_welcome+0x178>
   36b24:	ldr	r2, [pc, #188]	; 36be8 <user_welcome+0x1b4>
   36b28:	ldr	r2, [pc, r2]
   36b2c:	ldr	r1, [pc, #184]	; 36bec <user_welcome+0x1b8>
   36b30:	add	r1, pc, r1
   36b34:	mov	r0, r4
   36b38:	bl	e414 <sendto_one_notice@plt>
   36b3c:	ldr	r1, [pc, #172]	; 36bf0 <user_welcome+0x1bc>
   36b40:	add	r1, pc, r1
   36b44:	mov	r0, r4
   36b48:	bl	e414 <sendto_one_notice@plt>
   36b4c:	str	r6, [sp]
   36b50:	ldr	r1, [pc, #156]	; 36bf4 <user_welcome+0x1c0>
   36b54:	add	r1, pc, r1
   36b58:	mov	r0, r4
   36b5c:	mov	r2, r6
   36b60:	mov	r3, r5
   36b64:	bl	d1e4 <sendto_one@plt>
   36b68:	ldr	r0, [pc, #136]	; 36bf8 <user_welcome+0x1c4>
   36b6c:	add	r0, pc, r0
   36b70:	str	r0, [sp]
   36b74:	ldr	r1, [pc, #128]	; 36bfc <user_welcome+0x1c8>
   36b78:	add	r1, pc, r1
   36b7c:	mov	r0, r4
   36b80:	mov	r2, r6
   36b84:	mov	r3, r5
   36b88:	bl	d1e4 <sendto_one@plt>
   36b8c:	ldr	r1, [pc, #108]	; 36c00 <user_welcome+0x1cc>
   36b90:	add	r1, pc, r1
   36b94:	mov	r0, r4
   36b98:	mov	r2, r6
   36b9c:	mov	r3, r5
   36ba0:	sub	sp, fp, #16
   36ba4:	pop	{r4, r5, r6, sl, fp, lr}
   36ba8:	b	d1e4 <sendto_one@plt>
   36bac:	mov	r0, r4
   36bb0:	sub	sp, fp, #16
   36bb4:	pop	{r4, r5, r6, sl, fp, lr}
   36bb8:	b	d628 <send_user_motd@plt>
   36bbc:	.word	0x00023f08
   36bc0:	.word	0x000104ac
   36bc4:	.word	0x00023e10
   36bc8:	.word	0x000104aa
   36bcc:	.word	0x00023f60
   36bd0:	.word	0x000104af
   36bd4:	.word	0x00023d94
   36bd8:	.word	0x00023f78
   36bdc:	.word	0x00024078
   36be0:	.word	0x0001048f
   36be4:	.word	0x00024068
   36be8:	.word	0x00023f7c
   36bec:	.word	0x00010462
   36bf0:	.word	0x0001047d
   36bf4:	.word	0x0000a015
   36bf8:	.word	0x0001048c
   36bfc:	.word	0x0000a018
   36c00:	.word	0x0000a011

00036c04 <introduce_client>:
   36c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36c08:	add	fp, sp, #28
   36c0c:	sub	sp, sp, #612	; 0x264
   36c10:	mov	r6, r3
   36c14:	mov	r5, r1
   36c18:	mov	r7, r0
   36c1c:	ldrb	r0, [r1, #65]	; 0x41
   36c20:	tst	r0, #32
   36c24:	beq	36c40 <introduce_client+0x3c>
   36c28:	ldrh	r0, [r5, #80]	; 0x50
   36c2c:	cmp	r0, #64	; 0x40
   36c30:	bne	36c40 <introduce_client+0x3c>
   36c34:	add	r3, sp, #96	; 0x60
   36c38:	mov	r0, r5
   36c3c:	b	36c48 <introduce_client+0x44>
   36c40:	add	r3, sp, #96	; 0x60
   36c44:	mov	r0, #0
   36c48:	mov	r1, r5
   36c4c:	mov	r2, #0
   36c50:	bl	d844 <send_umode@plt>
   36c54:	mov	r2, r6
   36c58:	ldr	r1, [fp, #8]
   36c5c:	ldrb	r0, [sp, #96]	; 0x60
   36c60:	cmp	r0, #0
   36c64:	moveq	r0, #43	; 0x2b
   36c68:	strheq	r0, [sp, #96]	; 0x60
   36c6c:	add	r6, r5, #64	; 0x40
   36c70:	cmp	r1, #0
   36c74:	ldr	r8, [pc, #1124]	; 370e0 <introduce_client+0x4dc>
   36c78:	add	r8, pc, r8
   36c7c:	str	r6, [sp, #64]	; 0x40
   36c80:	str	r2, [sp, #60]	; 0x3c
   36c84:	beq	36d74 <introduce_client+0x170>
   36c88:	movw	r0, #345	; 0x159
   36c8c:	add	r3, r5, r0
   36c90:	ldr	r0, [pc, #1100]	; 370e4 <introduce_client+0x4e0>
   36c94:	ldr	r0, [pc, r0]
   36c98:	ldr	r0, [r0]
   36c9c:	str	r0, [sp, #56]	; 0x38
   36ca0:	ldr	r1, [pc, #1088]	; 370e8 <introduce_client+0x4e4>
   36ca4:	ldr	r1, [pc, r1]
   36ca8:	ldr	r0, [r1]
   36cac:	str	r0, [sp, #52]	; 0x34
   36cb0:	ldr	r2, [r5, #24]
   36cb4:	ldr	r6, [r5, #32]
   36cb8:	ldr	lr, [r5, #52]	; 0x34
   36cbc:	ldr	r0, [r5, #76]	; 0x4c
   36cc0:	ldrb	r9, [r2, #40]!	; 0x28
   36cc4:	ldr	r4, [sp, #64]	; 0x40
   36cc8:	ldr	sl, [r4]
   36ccc:	str	r3, [sp, #48]	; 0x30
   36cd0:	ldr	r3, [pc, #1044]	; 370ec <introduce_client+0x4e8>
   36cd4:	add	r3, pc, r3
   36cd8:	tst	sl, #131072	; 0x20000
   36cdc:	addne	r3, r5, #227	; 0xe3
   36ce0:	str	r3, [sp, #40]	; 0x28
   36ce4:	add	r3, r5, #396	; 0x18c
   36ce8:	str	r3, [sp, #36]	; 0x24
   36cec:	movw	r3, #291	; 0x123
   36cf0:	tst	sl, #16777216	; 0x1000000
   36cf4:	mov	r4, r8
   36cf8:	addeq	r4, r5, r3
   36cfc:	str	r4, [sp, #32]
   36d00:	add	r3, r5, #163	; 0xa3
   36d04:	add	r4, r5, #152	; 0x98
   36d08:	add	sl, sp, #96	; 0x60
   36d0c:	add	r0, r0, #1
   36d10:	add	r6, r6, #396	; 0x18c
   36d14:	ldr	ip, [pc, #980]	; 370f0 <introduce_client+0x4ec>
   36d18:	add	ip, pc, ip
   36d1c:	str	ip, [sp]
   36d20:	str	r6, [sp, #4]
   36d24:	ldr	r6, [sp, #64]	; 0x40
   36d28:	ldr	r1, [sp, #60]	; 0x3c
   36d2c:	str	r1, [sp, #8]
   36d30:	str	r0, [sp, #12]
   36d34:	str	lr, [sp, #16]
   36d38:	str	sl, [sp, #20]
   36d3c:	str	r4, [sp, #24]
   36d40:	str	r3, [sp, #28]
   36d44:	cmp	r9, #0
   36d48:	ldr	r0, [pc, #932]	; 370f4 <introduce_client+0x4f0>
   36d4c:	add	r0, pc, r0
   36d50:	moveq	r2, r0
   36d54:	str	r2, [sp, #44]	; 0x2c
   36d58:	ldr	r0, [sp, #56]	; 0x38
   36d5c:	ldr	r1, [sp, #52]	; 0x34
   36d60:	orr	r2, r0, r1
   36d64:	mov	r0, r7
   36d68:	mov	r1, #0
   36d6c:	mov	r3, #0
   36d70:	bl	d994 <sendto_server@plt>
   36d74:	movw	r0, #345	; 0x159
   36d78:	add	r0, r5, r0
   36d7c:	mov	r9, r7
   36d80:	ldr	r2, [pc, #880]	; 370f8 <introduce_client+0x4f4>
   36d84:	ldr	r2, [pc, r2]
   36d88:	ldr	r1, [r2]
   36d8c:	str	r1, [sp, #56]	; 0x38
   36d90:	ldr	r1, [pc, #868]	; 370fc <introduce_client+0x4f8>
   36d94:	ldr	r1, [pc, r1]
   36d98:	ldr	r3, [r1]
   36d9c:	ldr	r1, [r6]
   36da0:	ldr	r4, [r5, #32]
   36da4:	ldr	lr, [r5, #52]	; 0x34
   36da8:	ldr	r7, [r5, #76]	; 0x4c
   36dac:	movw	ip, #291	; 0x123
   36db0:	tst	r1, #16777216	; 0x1000000
   36db4:	addeq	r8, r5, ip
   36db8:	add	r1, r5, #163	; 0xa3
   36dbc:	add	r6, r5, #152	; 0x98
   36dc0:	add	ip, sp, #96	; 0x60
   36dc4:	add	sl, r5, #396	; 0x18c
   36dc8:	str	r8, [sp, #32]
   36dcc:	mov	r8, r2
   36dd0:	str	sl, [sp, #36]	; 0x24
   36dd4:	str	r0, [sp, #40]	; 0x28
   36dd8:	add	r0, r7, #1
   36ddc:	add	r4, r4, #396	; 0x18c
   36de0:	ldr	r7, [pc, #792]	; 37100 <introduce_client+0x4fc>
   36de4:	add	r7, pc, r7
   36de8:	str	r7, [sp]
   36dec:	str	r4, [sp, #4]
   36df0:	ldr	r2, [sp, #60]	; 0x3c
   36df4:	str	r2, [sp, #8]
   36df8:	str	r0, [sp, #12]
   36dfc:	str	lr, [sp, #16]
   36e00:	str	ip, [sp, #20]
   36e04:	str	r6, [sp, #24]
   36e08:	str	r1, [sp, #28]
   36e0c:	ldr	r4, [fp, #8]
   36e10:	cmp	r4, #0
   36e14:	moveq	r3, r4
   36e18:	mov	r0, r9
   36e1c:	mov	r1, #0
   36e20:	ldr	r2, [sp, #56]	; 0x38
   36e24:	bl	d994 <sendto_server@plt>
   36e28:	ldr	r0, [r5, #444]	; 0x1bc
   36e2c:	cmp	r0, #0
   36e30:	beq	36e78 <introduce_client+0x274>
   36e34:	ldrb	r1, [r0]
   36e38:	cmp	r1, #0
   36e3c:	beq	36e78 <introduce_client+0x274>
   36e40:	ldr	r2, [r8]
   36e44:	ldrb	r1, [r5, #396]	; 0x18c
   36e48:	cmp	r1, #0
   36e4c:	mov	r1, sl
   36e50:	addeq	r1, r5, #88	; 0x58
   36e54:	ldr	r3, [pc, #680]	; 37104 <introduce_client+0x500>
   36e58:	add	r3, pc, r3
   36e5c:	str	r3, [sp]
   36e60:	str	r1, [sp, #4]
   36e64:	str	r0, [sp, #8]
   36e68:	mov	r0, r9
   36e6c:	mov	r1, #0
   36e70:	mov	r3, #0
   36e74:	bl	d994 <sendto_server@plt>
   36e78:	ldr	r6, [sp, #64]	; 0x40
   36e7c:	ldrb	r0, [r6, #2]
   36e80:	tst	r0, #2
   36e84:	beq	36ed0 <introduce_client+0x2cc>
   36e88:	ldr	r2, [r8]
   36e8c:	ldr	r0, [pc, #628]	; 37108 <introduce_client+0x504>
   36e90:	ldr	r0, [pc, r0]
   36e94:	ldr	r3, [r0]
   36e98:	ldrb	r0, [r5, #396]	; 0x18c
   36e9c:	add	r1, r5, #227	; 0xe3
   36ea0:	cmp	r0, #0
   36ea4:	mov	r0, sl
   36ea8:	addeq	r0, r5, #88	; 0x58
   36eac:	ldr	r7, [pc, #600]	; 3710c <introduce_client+0x508>
   36eb0:	add	r7, pc, r7
   36eb4:	str	r7, [sp]
   36eb8:	stmib	sp, {r0, r1}
   36ebc:	cmp	r4, #0
   36ec0:	moveq	r3, r4
   36ec4:	mov	r0, r9
   36ec8:	mov	r1, #0
   36ecc:	bl	d994 <sendto_server@plt>
   36ed0:	ldr	r0, [r5, #24]
   36ed4:	ldrb	r1, [r0, #40]!	; 0x28
   36ed8:	cmp	r1, #0
   36edc:	beq	36f28 <introduce_client+0x324>
   36ee0:	ldr	r2, [r8]
   36ee4:	ldr	r1, [pc, #548]	; 37110 <introduce_client+0x50c>
   36ee8:	ldr	r1, [pc, r1]
   36eec:	ldr	r3, [r1]
   36ef0:	ldrb	r1, [r5, #396]	; 0x18c
   36ef4:	cmp	r1, #0
   36ef8:	mov	r1, sl
   36efc:	addeq	r1, r5, #88	; 0x58
   36f00:	ldr	r7, [pc, #524]	; 37114 <introduce_client+0x510>
   36f04:	add	r7, pc, r7
   36f08:	str	r7, [sp]
   36f0c:	str	r1, [sp, #4]
   36f10:	str	r0, [sp, #8]
   36f14:	cmp	r4, #0
   36f18:	moveq	r3, r4
   36f1c:	mov	r0, r9
   36f20:	mov	r1, #0
   36f24:	bl	d994 <sendto_server@plt>
   36f28:	ldrb	r0, [r6, #1]
   36f2c:	tst	r0, #32
   36f30:	beq	36fa4 <introduce_client+0x3a0>
   36f34:	ldr	r0, [r5, #432]	; 0x1b0
   36f38:	ldr	r0, [r0, #276]	; 0x114
   36f3c:	cmp	r0, #0
   36f40:	beq	36fa4 <introduce_client+0x3a0>
   36f44:	ldr	r6, [pc, #460]	; 37118 <introduce_client+0x514>
   36f48:	ldr	r6, [pc, r6]
   36f4c:	ldr	r0, [r6, #24]
   36f50:	cmp	r0, #0
   36f54:	beq	36f6c <introduce_client+0x368>
   36f58:	ldrb	r1, [r0]
   36f5c:	cmp	r1, #0
   36f60:	ldrne	r1, [r6, #28]
   36f64:	cmpne	r1, #0
   36f68:	bne	36fec <introduce_client+0x3e8>
   36f6c:	ldr	r0, [r5, #432]	; 0x1b0
   36f70:	ldr	r6, [r0, #276]	; 0x114
   36f74:	mov	r0, r6
   36f78:	bl	dc94 <strlen@plt>
   36f7c:	mov	r2, r0
   36f80:	mov	r7, #0
   36f84:	mov	r0, r6
   36f88:	mov	r1, #0
   36f8c:	bl	df28 <memset@plt>
   36f90:	ldr	r0, [r5, #432]	; 0x1b0
   36f94:	ldr	r0, [r0, #276]	; 0x114
   36f98:	bl	36138 <rb_free>
   36f9c:	ldr	r0, [r5, #432]	; 0x1b0
   36fa0:	str	r7, [r0, #276]	; 0x114
   36fa4:	mov	r0, #0
   36fa8:	str	r0, [sp, #92]	; 0x5c
   36fac:	str	r0, [sp, #88]	; 0x58
   36fb0:	str	r5, [sp, #84]	; 0x54
   36fb4:	ldr	r0, [pc, #360]	; 37124 <introduce_client+0x520>
   36fb8:	ldr	r0, [pc, r0]
   36fbc:	ldr	r0, [r0]
   36fc0:	add	r1, sp, #84	; 0x54
   36fc4:	bl	e654 <call_hook@plt>
   36fc8:	str	r5, [sp, #72]	; 0x48
   36fcc:	str	r9, [sp, #68]	; 0x44
   36fd0:	ldr	r0, [pc, #336]	; 37128 <introduce_client+0x524>
   36fd4:	ldr	r0, [pc, r0]
   36fd8:	ldr	r0, [r0]
   36fdc:	add	r1, sp, #68	; 0x44
   36fe0:	bl	e654 <call_hook@plt>
   36fe4:	sub	sp, fp, #28
   36fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36fec:	ldrb	r1, [r1]
   36ff0:	cmp	r1, #0
   36ff4:	beq	36f6c <introduce_client+0x368>
   36ff8:	mov	r1, #64	; 0x40
   36ffc:	bl	dce8 <strchr@plt>
   37000:	cmp	r0, #0
   37004:	beq	36f6c <introduce_client+0x368>
   37008:	add	r0, r0, #1
   3700c:	bl	d37c <find_named_client@plt>
   37010:	cmp	r0, #0
   37014:	beq	36f6c <introduce_client+0x368>
   37018:	ldr	r1, [r5, #432]	; 0x1b0
   3701c:	ldr	r2, [r1, #280]	; 0x118
   37020:	cmp	r2, #0
   37024:	beq	37060 <introduce_client+0x45c>
   37028:	ldrb	r3, [r2]
   3702c:	cmp	r3, #0
   37030:	beq	37060 <introduce_client+0x45c>
   37034:	ldr	r3, [r0, #36]	; 0x24
   37038:	ldrh	r7, [r3, #80]	; 0x50
   3703c:	cmp	r7, #32
   37040:	bne	370b0 <introduce_client+0x4ac>
   37044:	ldrb	r3, [r3, #396]	; 0x18c
   37048:	cmp	r3, #0
   3704c:	beq	370b0 <introduce_client+0x4ac>
   37050:	ldrb	r3, [r5, #396]	; 0x18c
   37054:	cmp	r3, #0
   37058:	addeq	sl, r5, #88	; 0x58
   3705c:	b	370b4 <introduce_client+0x4b0>
   37060:	ldr	r2, [r0, #36]	; 0x24
   37064:	ldrh	r3, [r2, #80]	; 0x50
   37068:	cmp	r3, #32
   3706c:	bne	3708c <introduce_client+0x488>
   37070:	ldrb	r2, [r2, #396]	; 0x18c
   37074:	cmp	r2, #0
   37078:	beq	3708c <introduce_client+0x488>
   3707c:	ldrb	r2, [r5, #396]	; 0x18c
   37080:	cmp	r2, #0
   37084:	addeq	sl, r5, #88	; 0x58
   37088:	b	37090 <introduce_client+0x48c>
   3708c:	add	sl, r5, #88	; 0x58
   37090:	ldr	r3, [r6, #24]
   37094:	ldr	r2, [r6, #28]
   37098:	ldr	r1, [r1, #276]	; 0x114
   3709c:	str	r2, [sp]
   370a0:	str	r1, [sp, #4]
   370a4:	ldr	r1, [pc, #116]	; 37120 <introduce_client+0x51c>
   370a8:	add	r1, pc, r1
   370ac:	b	370d4 <introduce_client+0x4d0>
   370b0:	add	sl, r5, #88	; 0x58
   370b4:	ldr	r3, [r6, #24]
   370b8:	ldr	r7, [r6, #28]
   370bc:	ldr	r1, [r1, #276]	; 0x114
   370c0:	str	r7, [sp]
   370c4:	str	r2, [sp, #4]
   370c8:	str	r1, [sp, #8]
   370cc:	ldr	r1, [pc, #72]	; 3711c <introduce_client+0x518>
   370d0:	add	r1, pc, r1
   370d4:	mov	r2, sl
   370d8:	bl	d1e4 <sendto_one@plt>
   370dc:	b	36f6c <introduce_client+0x368>
   370e0:	.word	0x00011105
   370e4:	.word	0x00023c94
   370e8:	.word	0x00023d7c
   370ec:	.word	0x0000a9c9
   370f0:	.word	0x0000f986
   370f4:	.word	0x0000a951
   370f8:	.word	0x00023ba4
   370fc:	.word	0x00023c8c
   37100:	.word	0x0000f8e6
   37104:	.word	0x0000f897
   37108:	.word	0x00023b90
   3710c:	.word	0x0000f856
   37110:	.word	0x00023b38
   37114:	.word	0x0000f81a
   37118:	.word	0x00023c34
   3711c:	.word	0x0000fc9d
   37120:	.word	0x0000fcde
   37124:	.word	0x00023a8c
   37128:	.word	0x000238cc

0003712c <send_umode>:
   3712c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   37130:	add	fp, sp, #24
   37134:	sub	sp, sp, #8
   37138:	mov	r9, #0
   3713c:	strb	r9, [r3]
   37140:	ldr	ip, [pc, #204]	; 37214 <send_umode+0xe8>
   37144:	ldr	ip, [pc, ip]
   37148:	mov	lr, #43	; 0x2b
   3714c:	mov	r8, #45	; 0x2d
   37150:	mov	r4, r3
   37154:	mov	r6, #0
   37158:	b	37178 <send_umode+0x4c>
   3715c:	strb	r6, [r4, #1]
   37160:	strb	lr, [r4]
   37164:	add	r4, r4, #2
   37168:	mov	r9, #1
   3716c:	add	r6, r6, #1
   37170:	cmp	r6, #128	; 0x80
   37174:	beq	371d4 <send_umode+0xa8>
   37178:	ldr	r7, [ip, r6, lsl #2]
   3717c:	ldr	r5, [r1, #56]	; 0x38
   37180:	and	r5, r5, r7
   37184:	tst	r7, r2
   37188:	beq	371a8 <send_umode+0x7c>
   3718c:	cmp	r5, #0
   37190:	bne	3716c <send_umode+0x40>
   37194:	cmn	r9, #1
   37198:	bne	371c0 <send_umode+0x94>
   3719c:	strb	r6, [r4], #1
   371a0:	mvn	r9, #0
   371a4:	b	3716c <send_umode+0x40>
   371a8:	cmp	r5, #0
   371ac:	beq	3716c <send_umode+0x40>
   371b0:	cmp	r9, #1
   371b4:	bne	3715c <send_umode+0x30>
   371b8:	strb	r6, [r4], #1
   371bc:	b	37168 <send_umode+0x3c>
   371c0:	strb	r6, [r4, #1]
   371c4:	strb	r8, [r4]
   371c8:	add	r4, r4, #2
   371cc:	mvn	r9, #0
   371d0:	b	3716c <send_umode+0x40>
   371d4:	mov	r2, #0
   371d8:	strb	r2, [r4]
   371dc:	cmp	r0, #0
   371e0:	ldrbne	r2, [r3]
   371e4:	cmpne	r2, #0
   371e8:	bne	371f4 <send_umode+0xc8>
   371ec:	sub	sp, fp, #24
   371f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   371f4:	str	r3, [sp]
   371f8:	add	r2, r1, #88	; 0x58
   371fc:	ldr	r1, [pc, #20]	; 37218 <send_umode+0xec>
   37200:	add	r1, pc, r1
   37204:	mov	r3, r2
   37208:	bl	d1e4 <sendto_one@plt>
   3720c:	sub	sp, fp, #24
   37210:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37214:	.word	0x0002382c
   37218:	.word	0x0000fcf8

0003721c <user_mode>:
   3721c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37220:	add	fp, sp, #28
   37224:	sub	sp, sp, #540	; 0x21c
   37228:	mov	r4, r1
   3722c:	cmp	r2, #1
   37230:	bgt	37264 <user_mode+0x48>
   37234:	ldr	r0, [pc, #2528]	; 37c1c <user_mode+0xa00>
   37238:	add	r0, pc, r0
   3723c:	str	r0, [sp]
   37240:	add	r3, r4, #88	; 0x58
   37244:	ldr	r0, [pc, #2516]	; 37c20 <user_mode+0xa04>
   37248:	ldr	r0, [pc, r0]
   3724c:	add	r2, r0, #88	; 0x58
   37250:	ldr	r1, [pc, #2508]	; 37c24 <user_mode+0xa08>
   37254:	add	r1, pc, r1
   37258:	mov	r0, r4
   3725c:	bl	d1e4 <sendto_one@plt>
   37260:	b	37c10 <user_mode+0x9f4>
   37264:	mov	r6, r3
   37268:	mov	r7, r2
   3726c:	mov	sl, r0
   37270:	ldrb	r0, [r4, #65]	; 0x41
   37274:	tst	r0, #32
   37278:	beq	37294 <user_mode+0x78>
   3727c:	ldrh	r0, [r4, #80]	; 0x50
   37280:	cmp	r0, #64	; 0x40
   37284:	bne	37294 <user_mode+0x78>
   37288:	ldr	r0, [r6, #4]
   3728c:	bl	e474 <find_named_person@plt>
   37290:	b	3729c <user_mode+0x80>
   37294:	ldr	r0, [r6, #4]
   37298:	bl	e1e0 <find_person@plt>
   3729c:	mov	r5, r0
   372a0:	add	r9, r4, #64	; 0x40
   372a4:	cmp	r0, #0
   372a8:	beq	372dc <user_mode+0xc0>
   372ac:	ldrh	r0, [r4, #80]	; 0x50
   372b0:	cmp	r0, #32
   372b4:	bne	37300 <user_mode+0xe4>
   372b8:	ldr	r3, [r6, #4]
   372bc:	add	r0, r4, #88	; 0x58
   372c0:	str	r0, [sp]
   372c4:	ldr	r2, [pc, #2400]	; 37c2c <user_mode+0xa10>
   372c8:	add	r2, pc, r2
   372cc:	mov	r0, #256	; 0x100
   372d0:	mov	r1, #2
   372d4:	bl	d634 <sendto_realops_snomask@plt>
   372d8:	b	37c10 <user_mode+0x9f4>
   372dc:	ldrb	r0, [r9, #1]
   372e0:	tst	r0, #32
   372e4:	beq	37c10 <user_mode+0x9f4>
   372e8:	ldr	r3, [r6, #4]
   372ec:	ldr	r2, [pc, #2356]	; 37c28 <user_mode+0xa0c>
   372f0:	add	r2, pc, r2
   372f4:	mov	r0, r4
   372f8:	movw	r1, #403	; 0x193
   372fc:	b	37c0c <user_mode+0x9f0>
   37300:	cmp	r5, r4
   37304:	beq	37368 <user_mode+0x14c>
   37308:	ldr	r0, [r4, #24]
   3730c:	cmp	r0, #0
   37310:	beq	3734c <user_mode+0x130>
   37314:	ldr	r0, [r0, #36]	; 0x24
   37318:	cmp	r0, #0
   3731c:	beq	3734c <user_mode+0x130>
   37320:	ldr	r1, [pc, #2312]	; 37c30 <user_mode+0xa14>
   37324:	add	r1, pc, r1
   37328:	bl	e594 <privilegeset_in_set@plt>
   3732c:	cmp	r7, #2
   37330:	bgt	3734c <user_mode+0x130>
   37334:	cmp	r0, #0
   37338:	beq	3734c <user_mode+0x130>
   3733c:	mov	r0, r4
   37340:	mov	r1, r5
   37344:	bl	37cc8 <show_other_user_mode>
   37348:	b	37c10 <user_mode+0x9f4>
   3734c:	add	r3, r4, #88	; 0x58
   37350:	ldr	r0, [pc, #2268]	; 37c34 <user_mode+0xa18>
   37354:	ldr	r0, [pc, r0]
   37358:	add	r2, r0, #88	; 0x58
   3735c:	ldr	r1, [pc, #2260]	; 37c38 <user_mode+0xa1c>
   37360:	add	r1, pc, r1
   37364:	b	37258 <user_mode+0x3c>
   37368:	cmp	r7, #2
   3736c:	bgt	373d8 <user_mode+0x1bc>
   37370:	mov	r0, #43	; 0x2b
   37374:	strb	r0, [sp, #24]
   37378:	add	r0, sp, #24
   3737c:	add	r0, r0, #1
   37380:	mov	r1, #0
   37384:	ldr	r2, [pc, #2224]	; 37c3c <user_mode+0xa20>
   37388:	ldr	r2, [pc, r2]
   3738c:	ldr	r3, [r2, r1, lsl #2]
   37390:	ldr	r7, [r4, #56]	; 0x38
   37394:	tst	r3, r7
   37398:	strbne	r1, [r0], #1
   3739c:	add	r1, r1, #1
   373a0:	cmp	r1, #128	; 0x80
   373a4:	bne	3738c <user_mode+0x170>
   373a8:	mov	r1, #0
   373ac:	strb	r1, [r0]
   373b0:	ldr	r2, [pc, #2184]	; 37c40 <user_mode+0xa24>
   373b4:	add	r2, pc, r2
   373b8:	add	r3, sp, #24
   373bc:	mov	r0, r4
   373c0:	mov	r1, #221	; 0xdd
   373c4:	bl	dc7c <sendto_one_numeric@plt>
   373c8:	ldr	r0, [r4, #72]	; 0x48
   373cc:	cmp	r0, #0
   373d0:	bne	37bf4 <user_mode+0x9d8>
   373d4:	b	37c10 <user_mode+0x9f4>
   373d8:	ldr	r5, [r6, #8]
   373dc:	ldr	r0, [r4, #56]	; 0x38
   373e0:	str	r0, [sp, #12]
   373e4:	ldr	r0, [r4, #72]	; 0x48
   373e8:	str	r0, [sp, #8]
   373ec:	mov	r8, #1
   373f0:	ldr	r3, [pc, #2124]	; 37c44 <user_mode+0xa28>
   373f4:	ldr	r3, [pc, r3]
   373f8:	mov	ip, #0
   373fc:	mov	r0, #0
   37400:	str	r0, [sp, #20]
   37404:	b	37418 <user_mode+0x1fc>
   37408:	cmp	r1, #0
   3740c:	movwne	r1, #1
   37410:	orr	ip, ip, r1
   37414:	add	r5, r5, #1
   37418:	ldrb	r0, [r5]
   3741c:	cmp	r0, #45	; 0x2d
   37420:	bhi	374f4 <user_mode+0x2d8>
   37424:	add	r1, pc, #4
   37428:	ldr	r2, [r1, r0, lsl #2]
   3742c:	add	pc, r1, r2
   37430:	.word	0x0000046c
   37434:	.word	0x000001ec
   37438:	.word	0x000001ec
   3743c:	.word	0x000001ec
   37440:	.word	0x000001ec
   37444:	.word	0x000001ec
   37448:	.word	0x000001ec
   3744c:	.word	0x000001ec
   37450:	.word	0x000001ec
   37454:	.word	0xffffffe4
   37458:	.word	0xffffffe4
   3745c:	.word	0x000001ec
   37460:	.word	0x000001ec
   37464:	.word	0xffffffe4
   37468:	.word	0x000001ec
   3746c:	.word	0x000001ec
   37470:	.word	0x000001ec
   37474:	.word	0x000001ec
   37478:	.word	0x000001ec
   3747c:	.word	0x000001ec
   37480:	.word	0x000001ec
   37484:	.word	0x000001ec
   37488:	.word	0x000001ec
   3748c:	.word	0x000001ec
   37490:	.word	0x000001ec
   37494:	.word	0x000001ec
   37498:	.word	0x000001ec
   3749c:	.word	0x000001ec
   374a0:	.word	0x000001ec
   374a4:	.word	0x000001ec
   374a8:	.word	0x000001ec
   374ac:	.word	0x000001ec
   374b0:	.word	0xffffffe4
   374b4:	.word	0x000001ec
   374b8:	.word	0x000001ec
   374bc:	.word	0x000001ec
   374c0:	.word	0x000001ec
   374c4:	.word	0x000001ec
   374c8:	.word	0x000001ec
   374cc:	.word	0x000001ec
   374d0:	.word	0x000001ec
   374d4:	.word	0x000001ec
   374d8:	.word	0x000001ec
   374dc:	.word	0x000000b8
   374e0:	.word	0x000001ec
   374e4:	.word	0x000001d4
   374e8:	mov	r8, #1
   374ec:	add	r5, r5, #1
   374f0:	b	37418 <user_mode+0x1fc>
   374f4:	sub	r1, r0, #83	; 0x53
   374f8:	cmp	r1, #32
   374fc:	bhi	3761c <user_mode+0x400>
   37500:	add	r2, pc, #4
   37504:	ldr	r1, [r2, r1, lsl #2]
   37508:	add	pc, r2, r1
   3750c:	.word	0xffffff08
   37510:	.word	0x00000110
   37514:	.word	0x00000110
   37518:	.word	0x00000110
   3751c:	.word	0x00000110
   37520:	.word	0x00000110
   37524:	.word	0x00000110
   37528:	.word	0xffffff08
   3752c:	.word	0x00000110
   37530:	.word	0x00000110
   37534:	.word	0x00000110
   37538:	.word	0x00000110
   3753c:	.word	0x00000110
   37540:	.word	0x00000110
   37544:	.word	0x00000110
   37548:	.word	0x00000110
   3754c:	.word	0x00000110
   37550:	.word	0x00000110
   37554:	.word	0x00000110
   37558:	.word	0x00000110
   3755c:	.word	0x00000110
   37560:	.word	0x00000110
   37564:	.word	0x00000110
   37568:	.word	0x00000110
   3756c:	.word	0x00000110
   37570:	.word	0x00000110
   37574:	.word	0x00000110
   37578:	.word	0x00000110
   3757c:	.word	0x00000084
   37580:	.word	0x00000110
   37584:	.word	0x00000110
   37588:	.word	0x00000110
   3758c:	.word	0x00000104
   37590:	cmp	r8, #1
   37594:	bne	376b0 <user_mode+0x494>
   37598:	ldrh	r0, [sl, #80]	; 0x50
   3759c:	mov	r8, #1
   375a0:	cmp	r0, #32
   375a4:	bne	37414 <user_mode+0x1f8>
   375a8:	ldr	r0, [r4, #56]	; 0x38
   375ac:	tst	r0, #4096	; 0x1000
   375b0:	bne	37414 <user_mode+0x1f8>
   375b4:	ldr	r1, [pc, #1676]	; 37c48 <user_mode+0xa2c>
   375b8:	ldr	r1, [pc, r1]
   375bc:	mov	r2, r1
   375c0:	ldr	r1, [r1]
   375c4:	add	r1, r1, #1
   375c8:	str	r1, [r2]
   375cc:	orr	r0, r0, #4096	; 0x1000
   375d0:	str	r0, [r4, #56]	; 0x38
   375d4:	str	ip, [sp, #16]
   375d8:	bl	dc58 <rb_make_rb_dlink_node@plt>
   375dc:	mov	r1, r0
   375e0:	mov	r0, r4
   375e4:	ldr	r2, [pc, #1632]	; 37c4c <user_mode+0xa30>
   375e8:	ldr	r2, [pc, r2]
   375ec:	bl	36944 <rb_dlinkAdd>
   375f0:	ldr	ip, [sp, #16]
   375f4:	ldr	r3, [pc, #1620]	; 37c50 <user_mode+0xa34>
   375f8:	ldr	r3, [pc, r3]
   375fc:	add	r5, r5, #1
   37600:	b	37418 <user_mode+0x1fc>
   37604:	mvn	r8, #0
   37608:	add	r5, r5, #1
   3760c:	b	37418 <user_mode+0x1fc>
   37610:	ldrb	r1, [r9, #1]
   37614:	tst	r1, #32
   37618:	bne	37774 <user_mode+0x558>
   3761c:	ldr	r1, [r9]
   37620:	ands	r1, r1, #8192	; 0x2000
   37624:	bne	37690 <user_mode+0x474>
   37628:	ldr	r0, [r3, r0, lsl #2]
   3762c:	cmp	r0, #0
   37630:	beq	37408 <user_mode+0x1ec>
   37634:	cmp	r1, #0
   37638:	beq	377ac <user_mode+0x590>
   3763c:	ldr	r1, [r4, #56]	; 0x38
   37640:	tst	r1, #4096	; 0x1000
   37644:	bne	3765c <user_mode+0x440>
   37648:	ldr	r2, [pc, #1580]	; 37c7c <user_mode+0xa60>
   3764c:	ldr	r2, [pc, r2]
   37650:	ldr	r2, [r2, #216]	; 0xd8
   37654:	tst	r2, r0
   37658:	bne	3766c <user_mode+0x450>
   3765c:	ldr	r2, [pc, #1564]	; 37c80 <user_mode+0xa64>
   37660:	ldr	r2, [pc, r2]
   37664:	tst	r2, r0
   37668:	beq	377ac <user_mode+0x590>
   3766c:	ands	r0, r1, r0
   37670:	movwne	r0, #1
   37674:	sub	r1, r8, #1
   37678:	clz	r1, r1
   3767c:	lsr	r1, r1, #5
   37680:	orr	r0, r1, r0
   37684:	orr	ip, ip, r0
   37688:	add	r5, r5, #1
   3768c:	b	37418 <user_mode+0x1fc>
   37690:	cmp	r0, #81	; 0x51
   37694:	bne	37628 <user_mode+0x40c>
   37698:	ldr	r2, [pc, #1496]	; 37c78 <user_mode+0xa5c>
   3769c:	ldr	r2, [pc, r2]
   376a0:	ldr	r2, [r2, #8]
   376a4:	cmp	r2, #0
   376a8:	beq	37820 <user_mode+0x604>
   376ac:	b	37628 <user_mode+0x40c>
   376b0:	ldr	r0, [r4, #56]	; 0x38
   376b4:	tst	r0, #4096	; 0x1000
   376b8:	beq	37414 <user_mode+0x1f8>
   376bc:	str	ip, [sp, #16]
   376c0:	bic	r0, r0, #12288	; 0x3000
   376c4:	str	r0, [r4, #56]	; 0x38
   376c8:	ldr	r1, [pc, #1412]	; 37c54 <user_mode+0xa38>
   376cc:	ldr	r1, [pc, r1]
   376d0:	mov	r2, r1
   376d4:	ldr	r1, [r1]
   376d8:	sub	r1, r1, #1
   376dc:	str	r1, [r2]
   376e0:	ldrb	r1, [r9, #1]
   376e4:	tst	r1, #32
   376e8:	beq	37710 <user_mode+0x4f4>
   376ec:	ldr	r1, [pc, #1380]	; 37c58 <user_mode+0xa3c>
   376f0:	ldr	r1, [pc, r1]
   376f4:	ldr	r1, [r1, #216]	; 0xd8
   376f8:	bic	r0, r0, r1
   376fc:	str	r0, [r4, #56]	; 0x38
   37700:	mov	r0, r4
   37704:	ldr	r1, [pc, #1360]	; 37c5c <user_mode+0xa40>
   37708:	ldr	r1, [pc, r1]
   3770c:	bl	37d78 <rb_dlinkFindDestroy>
   37710:	ldr	r0, [r4, #24]
   37714:	ldr	r0, [r0, #32]
   37718:	cmp	r0, #0
   3771c:	beq	37730 <user_mode+0x514>
   37720:	bl	36138 <rb_free>
   37724:	ldr	r0, [r4, #24]
   37728:	mov	r1, #0
   3772c:	str	r1, [r0, #32]
   37730:	ldr	r0, [r4, #24]
   37734:	ldr	r0, [r0, #36]	; 0x24
   37738:	cmp	r0, #0
   3773c:	beq	37750 <user_mode+0x534>
   37740:	bl	e630 <privilegeset_unref@plt>
   37744:	ldr	r0, [r4, #24]
   37748:	mov	r1, #0
   3774c:	str	r1, [r0, #36]	; 0x24
   37750:	mov	r0, r4
   37754:	ldr	r1, [pc, #1284]	; 37c60 <user_mode+0xa44>
   37758:	ldr	r1, [pc, r1]
   3775c:	bl	37d78 <rb_dlinkFindDestroy>
   37760:	ldr	r3, [pc, #1276]	; 37c64 <user_mode+0xa48>
   37764:	ldr	r3, [pc, r3]
   37768:	ldr	ip, [sp, #16]
   3776c:	add	r5, r5, #1
   37770:	b	37418 <user_mode+0x1fc>
   37774:	ldr	r0, [pc, #1260]	; 37c68 <user_mode+0xa4c>
   37778:	ldr	r0, [pc, r0]
   3777c:	ldrb	r0, [r0, #216]	; 0xd8
   37780:	tst	r0, #1
   37784:	bne	377c4 <user_mode+0x5a8>
   37788:	cmp	r8, #1
   3778c:	bne	37840 <user_mode+0x624>
   37790:	ldr	r0, [r4, #72]	; 0x48
   37794:	cmp	r7, #3
   37798:	bne	37858 <user_mode+0x63c>
   3779c:	orr	r0, r0, #256	; 0x100
   377a0:	str	r0, [r4, #72]	; 0x48
   377a4:	ldr	r1, [r4, #56]	; 0x38
   377a8:	b	37880 <user_mode+0x664>
   377ac:	cmp	r8, #1
   377b0:	bne	3782c <user_mode+0x610>
   377b4:	ldr	r1, [r4, #56]	; 0x38
   377b8:	orr	r0, r1, r0
   377bc:	str	r0, [r4, #56]	; 0x38
   377c0:	b	374e8 <user_mode+0x2cc>
   377c4:	ldrb	r0, [r4, #57]	; 0x39
   377c8:	tst	r0, #16
   377cc:	beq	3780c <user_mode+0x5f0>
   377d0:	ldr	r0, [r4, #24]
   377d4:	cmp	r0, #0
   377d8:	beq	3780c <user_mode+0x5f0>
   377dc:	ldr	r0, [r0, #36]	; 0x24
   377e0:	cmp	r0, #0
   377e4:	beq	3780c <user_mode+0x5f0>
   377e8:	ldr	r1, [pc, #1148]	; 37c6c <user_mode+0xa50>
   377ec:	add	r1, pc, r1
   377f0:	str	ip, [sp, #16]
   377f4:	bl	e594 <privilegeset_in_set@plt>
   377f8:	ldr	ip, [sp, #16]
   377fc:	ldr	r3, [pc, #1132]	; 37c70 <user_mode+0xa54>
   37800:	ldr	r3, [pc, r3]
   37804:	cmp	r0, #0
   37808:	bne	37788 <user_mode+0x56c>
   3780c:	cmp	r8, #1
   37810:	beq	37820 <user_mode+0x604>
   37814:	ldrb	r0, [r4, #56]	; 0x38
   37818:	tst	r0, #1
   3781c:	beq	37414 <user_mode+0x1f8>
   37820:	mov	ip, #1
   37824:	add	r5, r5, #1
   37828:	b	37418 <user_mode+0x1fc>
   3782c:	ldr	r1, [r4, #56]	; 0x38
   37830:	bic	r0, r1, r0
   37834:	str	r0, [r4, #56]	; 0x38
   37838:	add	r5, r5, #1
   3783c:	b	37418 <user_mode+0x1fc>
   37840:	mov	r0, #0
   37844:	str	r0, [r4, #72]	; 0x48
   37848:	ldr	r1, [r4, #56]	; 0x38
   3784c:	bic	r0, r1, #1
   37850:	str	r0, [r4, #56]	; 0x38
   37854:	b	3788c <user_mode+0x670>
   37858:	ldr	r1, [r6, #12]
   3785c:	str	ip, [sp, #16]
   37860:	bl	de98 <parse_snobuf_to_mask@plt>
   37864:	ldr	ip, [sp, #16]
   37868:	ldr	r3, [pc, #1028]	; 37c74 <user_mode+0xa58>
   3786c:	ldr	r3, [pc, r3]
   37870:	str	r0, [r4, #72]	; 0x48
   37874:	ldr	r1, [r4, #56]	; 0x38
   37878:	cmp	r0, #0
   3787c:	beq	3784c <user_mode+0x630>
   37880:	orr	r0, r1, #1
   37884:	str	r0, [r4, #56]	; 0x38
   37888:	mov	r8, #1
   3788c:	mov	r0, #1
   37890:	str	r0, [sp, #20]
   37894:	add	r5, r5, #1
   37898:	b	37418 <user_mode+0x1fc>
   3789c:	tst	ip, #1
   378a0:	beq	378c4 <user_mode+0x6a8>
   378a4:	add	r3, r4, #88	; 0x58
   378a8:	ldr	r0, [pc, #980]	; 37c84 <user_mode+0xa68>
   378ac:	ldr	r0, [pc, r0]
   378b0:	add	r2, r0, #88	; 0x58
   378b4:	ldr	r1, [pc, #972]	; 37c88 <user_mode+0xa6c>
   378b8:	add	r1, pc, r1
   378bc:	mov	r0, r4
   378c0:	bl	d1e4 <sendto_one@plt>
   378c4:	ldrb	r0, [r9, #1]
   378c8:	tst	r0, #32
   378cc:	ldr	r5, [sp, #12]
   378d0:	ldr	r6, [sp, #20]
   378d4:	beq	37950 <user_mode+0x734>
   378d8:	ldrh	r0, [r4, #80]	; 0x50
   378dc:	cmp	r0, #64	; 0x40
   378e0:	bne	37950 <user_mode+0x734>
   378e4:	ldr	r0, [pc, #928]	; 37c8c <user_mode+0xa70>
   378e8:	ldr	r0, [pc, r0]
   378ec:	ldrb	r0, [r0, #216]	; 0xd8
   378f0:	tst	r0, #1
   378f4:	beq	37930 <user_mode+0x714>
   378f8:	ldr	r0, [r4, #24]
   378fc:	cmp	r0, #0
   37900:	beq	37924 <user_mode+0x708>
   37904:	ldr	r0, [r0, #36]	; 0x24
   37908:	cmp	r0, #0
   3790c:	beq	37924 <user_mode+0x708>
   37910:	ldr	r1, [pc, #888]	; 37c90 <user_mode+0xa74>
   37914:	add	r1, pc, r1
   37918:	bl	e594 <privilegeset_in_set@plt>
   3791c:	cmp	r0, #0
   37920:	bne	37930 <user_mode+0x714>
   37924:	ldr	r0, [r4, #56]	; 0x38
   37928:	bic	r0, r0, #1
   3792c:	str	r0, [r4, #56]	; 0x38
   37930:	ldrb	r0, [r4, #56]	; 0x38
   37934:	tst	r0, #1
   37938:	bne	37950 <user_mode+0x734>
   3793c:	ldr	r0, [r4, #72]	; 0x48
   37940:	cmp	r0, #0
   37944:	movne	r0, #0
   37948:	strne	r0, [r4, #72]	; 0x48
   3794c:	movne	r6, #1
   37950:	ldrb	r0, [r9, #1]
   37954:	tst	r0, #32
   37958:	beq	379bc <user_mode+0x7a0>
   3795c:	ldrh	r0, [r4, #80]	; 0x50
   37960:	cmp	r0, #64	; 0x40
   37964:	bne	379bc <user_mode+0x7a0>
   37968:	ldrb	r0, [r4, #72]	; 0x48
   3796c:	tst	r0, #64	; 0x40
   37970:	beq	379bc <user_mode+0x7a0>
   37974:	ldr	r0, [r4, #24]
   37978:	cmp	r0, #0
   3797c:	beq	379a0 <user_mode+0x784>
   37980:	ldr	r0, [r0, #36]	; 0x24
   37984:	cmp	r0, #0
   37988:	beq	379a0 <user_mode+0x784>
   3798c:	ldr	r1, [pc, #768]	; 37c94 <user_mode+0xa78>
   37990:	add	r1, pc, r1
   37994:	bl	e594 <privilegeset_in_set@plt>
   37998:	cmp	r0, #0
   3799c:	bne	379bc <user_mode+0x7a0>
   379a0:	ldr	r1, [pc, #752]	; 37c98 <user_mode+0xa7c>
   379a4:	add	r1, pc, r1
   379a8:	mov	r0, r4
   379ac:	bl	e414 <sendto_one_notice@plt>
   379b0:	ldr	r0, [r4, #72]	; 0x48
   379b4:	bic	r0, r0, #64	; 0x40
   379b8:	str	r0, [r4, #72]	; 0x48
   379bc:	ldrb	r0, [r9, #1]
   379c0:	tst	r0, #32
   379c4:	beq	37a28 <user_mode+0x80c>
   379c8:	ldrh	r0, [r4, #80]	; 0x50
   379cc:	cmp	r0, #64	; 0x40
   379d0:	bne	37a28 <user_mode+0x80c>
   379d4:	ldrb	r0, [r4, #56]	; 0x38
   379d8:	tst	r0, #4
   379dc:	beq	37a28 <user_mode+0x80c>
   379e0:	ldr	r0, [r4, #24]
   379e4:	cmp	r0, #0
   379e8:	beq	37a0c <user_mode+0x7f0>
   379ec:	ldr	r0, [r0, #36]	; 0x24
   379f0:	cmp	r0, #0
   379f4:	beq	37a0c <user_mode+0x7f0>
   379f8:	ldr	r1, [pc, #668]	; 37c9c <user_mode+0xa80>
   379fc:	add	r1, pc, r1
   37a00:	bl	e594 <privilegeset_in_set@plt>
   37a04:	cmp	r0, #0
   37a08:	bne	37a28 <user_mode+0x80c>
   37a0c:	ldr	r1, [pc, #652]	; 37ca0 <user_mode+0xa84>
   37a10:	add	r1, pc, r1
   37a14:	mov	r0, r4
   37a18:	bl	e414 <sendto_one_notice@plt>
   37a1c:	ldr	r0, [r4, #56]	; 0x38
   37a20:	bic	r0, r0, #4
   37a24:	str	r0, [r4, #56]	; 0x38
   37a28:	ldrb	r0, [r9, #1]
   37a2c:	tst	r0, #32
   37a30:	beq	37ae0 <user_mode+0x8c4>
   37a34:	ldrb	r0, [r4, #57]	; 0x39
   37a38:	tst	r0, #32
   37a3c:	beq	37ae0 <user_mode+0x8c4>
   37a40:	ldr	r0, [r4, #24]
   37a44:	cmp	r0, #0
   37a48:	beq	37ac4 <user_mode+0x8a8>
   37a4c:	ldr	r0, [r0, #36]	; 0x24
   37a50:	cmp	r0, #0
   37a54:	beq	37a6c <user_mode+0x850>
   37a58:	ldr	r1, [pc, #580]	; 37ca4 <user_mode+0xa88>
   37a5c:	add	r1, pc, r1
   37a60:	bl	e594 <privilegeset_in_set@plt>
   37a64:	cmp	r0, #0
   37a68:	bne	37a98 <user_mode+0x87c>
   37a6c:	ldr	r0, [r4, #24]
   37a70:	cmp	r0, #0
   37a74:	beq	37ac4 <user_mode+0x8a8>
   37a78:	ldr	r0, [r0, #36]	; 0x24
   37a7c:	cmp	r0, #0
   37a80:	beq	37ac4 <user_mode+0x8a8>
   37a84:	ldr	r1, [pc, #540]	; 37ca8 <user_mode+0xa8c>
   37a88:	add	r1, pc, r1
   37a8c:	bl	e594 <privilegeset_in_set@plt>
   37a90:	cmp	r0, #0
   37a94:	beq	37ac4 <user_mode+0x8a8>
   37a98:	ldr	r0, [r4, #24]
   37a9c:	cmp	r0, #0
   37aa0:	beq	37ae0 <user_mode+0x8c4>
   37aa4:	ldr	r0, [r0, #36]	; 0x24
   37aa8:	cmp	r0, #0
   37aac:	beq	37ae0 <user_mode+0x8c4>
   37ab0:	ldr	r1, [pc, #500]	; 37cac <user_mode+0xa90>
   37ab4:	add	r1, pc, r1
   37ab8:	bl	e594 <privilegeset_in_set@plt>
   37abc:	cmp	r0, #0
   37ac0:	beq	37ae0 <user_mode+0x8c4>
   37ac4:	ldr	r1, [pc, #484]	; 37cb0 <user_mode+0xa94>
   37ac8:	add	r1, pc, r1
   37acc:	mov	r0, r4
   37ad0:	bl	e414 <sendto_one_notice@plt>
   37ad4:	ldr	r0, [r4, #56]	; 0x38
   37ad8:	bic	r0, r0, #8192	; 0x2000
   37adc:	str	r0, [r4, #56]	; 0x38
   37ae0:	ldrb	r0, [r9, #1]
   37ae4:	tst	r0, #32
   37ae8:	beq	37b58 <user_mode+0x93c>
   37aec:	ldrh	r0, [r4, #80]	; 0x50
   37af0:	cmp	r0, #64	; 0x40
   37af4:	bne	37b58 <user_mode+0x93c>
   37af8:	ldr	r0, [r4, #24]
   37afc:	cmp	r0, #0
   37b00:	beq	37b28 <user_mode+0x90c>
   37b04:	ldr	r0, [r0, #36]	; 0x24
   37b08:	cmp	r0, #0
   37b0c:	beq	37b28 <user_mode+0x90c>
   37b10:	ldr	r1, [pc, #412]	; 37cb4 <user_mode+0xa98>
   37b14:	add	r1, pc, r1
   37b18:	bl	e594 <privilegeset_in_set@plt>
   37b1c:	mov	r1, #5
   37b20:	cmp	r0, #0
   37b24:	bne	37b54 <user_mode+0x938>
   37b28:	ldrb	r0, [r4, #57]	; 0x39
   37b2c:	mov	r1, #1
   37b30:	tst	r0, #16
   37b34:	beq	37b54 <user_mode+0x938>
   37b38:	ldr	r0, [r4, #24]
   37b3c:	cmp	r0, #0
   37b40:	beq	37b54 <user_mode+0x938>
   37b44:	ldr	r0, [r0, #36]	; 0x24
   37b48:	mov	r1, #1
   37b4c:	cmp	r0, #0
   37b50:	movweq	r1, #5
   37b54:	strb	r1, [r4, #82]	; 0x52
   37b58:	ldr	r0, [sp, #8]
   37b5c:	str	r0, [sp, #32]
   37b60:	str	r5, [sp, #28]
   37b64:	str	r4, [sp, #24]
   37b68:	ldr	r0, [pc, #328]	; 37cb8 <user_mode+0xa9c>
   37b6c:	ldr	r0, [pc, r0]
   37b70:	ldr	r0, [r0]
   37b74:	add	r1, sp, #24
   37b78:	bl	e654 <call_hook@plt>
   37b7c:	ldr	r0, [r4, #56]	; 0x38
   37b80:	and	r0, r0, #8
   37b84:	tst	r5, #8
   37b88:	bne	37bac <user_mode+0x990>
   37b8c:	cmp	r0, #0
   37b90:	beq	37bcc <user_mode+0x9b0>
   37b94:	ldr	r0, [pc, #288]	; 37cbc <user_mode+0xaa0>
   37b98:	ldr	r0, [pc, r0]
   37b9c:	mov	r1, r0
   37ba0:	ldr	r0, [r0, #8]
   37ba4:	add	r0, r0, #1
   37ba8:	b	37bc8 <user_mode+0x9ac>
   37bac:	cmp	r0, #0
   37bb0:	bne	37bcc <user_mode+0x9b0>
   37bb4:	ldr	r0, [pc, #260]	; 37cc0 <user_mode+0xaa4>
   37bb8:	ldr	r0, [pc, r0]
   37bbc:	mov	r1, r0
   37bc0:	ldr	r0, [r0, #8]
   37bc4:	sub	r0, r0, #1
   37bc8:	str	r0, [r1, #8]
   37bcc:	mov	r0, sl
   37bd0:	mov	r1, r4
   37bd4:	mov	r2, r5
   37bd8:	bl	e444 <send_umode_out@plt>
   37bdc:	tst	r6, #1
   37be0:	beq	37c10 <user_mode+0x9f4>
   37be4:	ldrb	r0, [r9, #1]
   37be8:	tst	r0, #32
   37bec:	beq	37c10 <user_mode+0x9f4>
   37bf0:	ldr	r0, [r4, #72]	; 0x48
   37bf4:	bl	d178 <construct_snobuf@plt>
   37bf8:	mov	r3, r0
   37bfc:	ldr	r2, [pc, #192]	; 37cc4 <user_mode+0xaa8>
   37c00:	add	r2, pc, r2
   37c04:	mov	r0, r4
   37c08:	mov	r1, #8
   37c0c:	bl	dc7c <sendto_one_numeric@plt>
   37c10:	mov	r0, #0
   37c14:	sub	sp, fp, #28
   37c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37c1c:	.word	0x0000fb6e
   37c20:	.word	0x00023910
   37c24:	.word	0x0000e662
   37c28:	.word	0x0000a059
   37c2c:	.word	0x0000fae3
   37c30:	.word	0x0000faa4
   37c34:	.word	0x00023804
   37c38:	.word	0x0000fa76
   37c3c:	.word	0x000235e8
   37c40:	.word	0x00010601
   37c44:	.word	0x0002357c
   37c48:	.word	0x00023368
   37c4c:	.word	0x000234b8
   37c50:	.word	0x00023378
   37c54:	.word	0x00023254
   37c58:	.word	0x0002348c
   37c5c:	.word	0x00023230
   37c60:	.word	0x00023348
   37c64:	.word	0x0002320c
   37c68:	.word	0x00023404
   37c6c:	.word	0x0000f62f
   37c70:	.word	0x00023170
   37c74:	.word	0x00023104
   37c78:	.word	0x0002347c
   37c7c:	.word	0x00023530
   37c80:	.word	0x00033cf8
   37c84:	.word	0x000232ac
   37c88:	.word	0x0000f577
   37c8c:	.word	0x00023294
   37c90:	.word	0x0000f507
   37c94:	.word	0x0000f4bd
   37c98:	.word	0x0000f4be
   37c9c:	.word	0x0000f499
   37ca0:	.word	0x0000f493
   37ca4:	.word	0x000095d3
   37ca8:	.word	0x000095b2
   37cac:	.word	0x00009586
   37cb0:	.word	0x0000f407
   37cb4:	.word	0x000094de
   37cb8:	.word	0x00022ed8
   37cbc:	.word	0x00022d88
   37cc0:	.word	0x00022d68
   37cc4:	.word	0x0000f204

00037cc8 <show_other_user_mode>:
   37cc8:	push	{r4, r5, r6, sl, fp, lr}
   37ccc:	add	fp, sp, #16
   37cd0:	sub	sp, sp, #520	; 0x208
   37cd4:	mov	r5, r1
   37cd8:	mov	r6, r0
   37cdc:	mov	r0, #43	; 0x2b
   37ce0:	strb	r0, [sp, #8]
   37ce4:	add	r0, sp, #8
   37ce8:	add	r0, r0, #1
   37cec:	mov	r1, #0
   37cf0:	ldr	r2, [pc, #116]	; 37d6c <show_other_user_mode+0xa4>
   37cf4:	ldr	r2, [pc, r2]
   37cf8:	ldr	r3, [r2, r1, lsl #2]
   37cfc:	ldr	r4, [r5, #56]	; 0x38
   37d00:	tst	r3, r4
   37d04:	strbne	r1, [r0], #1
   37d08:	add	r1, r1, #1
   37d0c:	cmp	r1, #128	; 0x80
   37d10:	bne	37cf8 <show_other_user_mode+0x30>
   37d14:	mov	r1, #0
   37d18:	strb	r1, [r0]
   37d1c:	ldrb	r0, [r5, #65]	; 0x41
   37d20:	tst	r0, #32
   37d24:	beq	37d4c <show_other_user_mode+0x84>
   37d28:	ldr	r0, [r5, #72]	; 0x48
   37d2c:	cmp	r0, #0
   37d30:	beq	37d4c <show_other_user_mode+0x84>
   37d34:	bl	d178 <construct_snobuf@plt>
   37d38:	str	r0, [sp]
   37d3c:	add	r2, r5, #88	; 0x58
   37d40:	ldr	r1, [pc, #40]	; 37d70 <show_other_user_mode+0xa8>
   37d44:	add	r1, pc, r1
   37d48:	b	37d58 <show_other_user_mode+0x90>
   37d4c:	add	r2, r5, #88	; 0x58
   37d50:	ldr	r1, [pc, #28]	; 37d74 <show_other_user_mode+0xac>
   37d54:	add	r1, pc, r1
   37d58:	add	r3, sp, #8
   37d5c:	mov	r0, r6
   37d60:	bl	e414 <sendto_one_notice@plt>
   37d64:	sub	sp, fp, #16
   37d68:	pop	{r4, r5, r6, sl, fp, pc}
   37d6c:	.word	0x00022c7c
   37d70:	.word	0x0000f847
   37d74:	.word	0x0000f84f

00037d78 <rb_dlinkFindDestroy>:
   37d78:	push	{fp, lr}
   37d7c:	mov	fp, sp
   37d80:	cmp	r1, #0
   37d84:	beq	37da4 <rb_dlinkFindDestroy+0x2c>
   37d88:	cmp	r0, #0
   37d8c:	beq	37dc4 <rb_dlinkFindDestroy+0x4c>
   37d90:	bl	38a80 <rb_dlinkFindDelete>
   37d94:	cmp	r0, #0
   37d98:	popeq	{fp, pc}
   37d9c:	pop	{fp, lr}
   37da0:	b	d7b4 <rb_free_rb_dlink_node@plt>
   37da4:	ldr	r0, [pc, #56]	; 37de4 <rb_dlinkFindDestroy+0x6c>
   37da8:	add	r0, pc, r0
   37dac:	ldr	r1, [pc, #52]	; 37de8 <rb_dlinkFindDestroy+0x70>
   37db0:	add	r1, pc, r1
   37db4:	ldr	r3, [pc, #48]	; 37dec <rb_dlinkFindDestroy+0x74>
   37db8:	add	r3, pc, r3
   37dbc:	movw	r2, #287	; 0x11f
   37dc0:	bl	e7e0 <__assert_fail@plt>
   37dc4:	ldr	r0, [pc, #36]	; 37df0 <rb_dlinkFindDestroy+0x78>
   37dc8:	add	r0, pc, r0
   37dcc:	ldr	r1, [pc, #32]	; 37df4 <rb_dlinkFindDestroy+0x7c>
   37dd0:	add	r1, pc, r1
   37dd4:	ldr	r3, [pc, #28]	; 37df8 <rb_dlinkFindDestroy+0x80>
   37dd8:	add	r3, pc, r3
   37ddc:	mov	r2, #288	; 0x120
   37de0:	bl	e7e0 <__assert_fail@plt>
   37de4:	.word	0x0000e3ed
   37de8:	.word	0x00008b66
   37dec:	.word	0x0000916d
   37df0:	.word	0x00008ba9
   37df4:	.word	0x00008b46
   37df8:	.word	0x0000914d

00037dfc <send_umode_out>:
   37dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37e00:	add	fp, sp, #28
   37e04:	sub	sp, sp, #524	; 0x20c
   37e08:	mov	r5, r1
   37e0c:	mov	r6, r0
   37e10:	add	r9, sp, #8
   37e14:	mov	r0, #0
   37e18:	str	r2, [sp, #4]
   37e1c:	mov	r3, r9
   37e20:	bl	d844 <send_umode@plt>
   37e24:	ldr	r0, [pc, #236]	; 37f18 <send_umode_out+0x11c>
   37e28:	ldr	r0, [pc, r0]
   37e2c:	ldr	r7, [r0]
   37e30:	cmp	r7, #0
   37e34:	beq	37edc <send_umode_out+0xe0>
   37e38:	add	r4, r5, #88	; 0x58
   37e3c:	add	r8, r5, #396	; 0x18c
   37e40:	ldr	sl, [pc, #212]	; 37f1c <send_umode_out+0x120>
   37e44:	add	sl, pc, sl
   37e48:	b	37e68 <send_umode_out+0x6c>
   37e4c:	mov	r3, r4
   37e50:	str	r9, [sp]
   37e54:	mov	r1, sl
   37e58:	bl	d1e4 <sendto_one@plt>
   37e5c:	ldr	r7, [r7, #8]
   37e60:	cmp	r7, #0
   37e64:	beq	37edc <send_umode_out+0xe0>
   37e68:	ldr	r0, [r7]
   37e6c:	cmp	r0, r6
   37e70:	beq	37e5c <send_umode_out+0x60>
   37e74:	cmp	r0, r5
   37e78:	ldrbne	r1, [sp, #8]
   37e7c:	cmpne	r1, #0
   37e80:	beq	37e5c <send_umode_out+0x60>
   37e84:	ldr	r1, [r0, #36]	; 0x24
   37e88:	ldrh	r2, [r1, #80]	; 0x50
   37e8c:	cmp	r2, #32
   37e90:	mov	r2, r4
   37e94:	mov	r3, r4
   37e98:	bne	37e50 <send_umode_out+0x54>
   37e9c:	ldrb	r2, [r1, #396]	; 0x18c
   37ea0:	cmp	r2, #0
   37ea4:	mov	r2, r4
   37ea8:	beq	37ebc <send_umode_out+0xc0>
   37eac:	ldrb	r2, [r8]
   37eb0:	cmp	r2, #0
   37eb4:	mov	r2, r8
   37eb8:	moveq	r2, r4
   37ebc:	ldrb	r1, [r1, #396]	; 0x18c
   37ec0:	cmp	r1, #0
   37ec4:	beq	37e4c <send_umode_out+0x50>
   37ec8:	ldrb	r1, [r8]
   37ecc:	cmp	r1, #0
   37ed0:	mov	r3, r8
   37ed4:	moveq	r3, r4
   37ed8:	b	37e50 <send_umode_out+0x54>
   37edc:	cmp	r6, #0
   37ee0:	beq	37f10 <send_umode_out+0x114>
   37ee4:	ldrb	r0, [r6, #65]	; 0x41
   37ee8:	tst	r0, #32
   37eec:	beq	37f10 <send_umode_out+0x114>
   37ef0:	ldrh	r0, [r6, #80]	; 0x50
   37ef4:	cmp	r0, #64	; 0x40
   37ef8:	bne	37f10 <send_umode_out+0x114>
   37efc:	add	r3, sp, #8
   37f00:	mov	r0, r6
   37f04:	mov	r1, r5
   37f08:	ldr	r2, [sp, #4]
   37f0c:	bl	d844 <send_umode@plt>
   37f10:	sub	sp, fp, #28
   37f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f18:	.word	0x00022ba8
   37f1c:	.word	0x0000f0b4

00037f20 <oper_up>:
   37f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37f24:	add	fp, sp, #28
   37f28:	sub	sp, sp, #28
   37f2c:	mov	r8, r1
   37f30:	mov	r4, r0
   37f34:	mov	r7, r0
   37f38:	ldr	sl, [r7, #56]!	; 0x38
   37f3c:	mov	r6, r7
   37f40:	ldr	r9, [r6, #16]!
   37f44:	orr	r0, sl, #4096	; 0x1000
   37f48:	str	r0, [r7]
   37f4c:	ldr	r1, [r1, #24]
   37f50:	cmp	r1, #0
   37f54:	beq	37f60 <oper_up+0x40>
   37f58:	orr	r0, r1, r0
   37f5c:	b	37f7c <oper_up+0x5c>
   37f60:	ldr	r1, [pc, #1044]	; 3837c <oper_up+0x45c>
   37f64:	ldr	r1, [pc, r1]
   37f68:	ldr	r1, [r1, #220]	; 0xdc
   37f6c:	cmp	r1, #0
   37f70:	movweq	r0, #4135	; 0x1027
   37f74:	orreq	r0, sl, r0
   37f78:	orrne	r0, r1, r0
   37f7c:	str	r0, [r7]
   37f80:	ldr	r0, [r8, #28]
   37f84:	cmp	r0, #0
   37f88:	beq	37fa4 <oper_up+0x84>
   37f8c:	orr	r0, r0, r9
   37f90:	str	r0, [r6]
   37f94:	ldr	r0, [r7]
   37f98:	orr	r0, r0, #1
   37f9c:	mov	r1, r7
   37fa0:	b	37fcc <oper_up+0xac>
   37fa4:	ldrb	r0, [r7]
   37fa8:	tst	r0, #1
   37fac:	beq	37fd0 <oper_up+0xb0>
   37fb0:	ldr	r0, [pc, #968]	; 38380 <oper_up+0x460>
   37fb4:	ldr	r0, [pc, r0]
   37fb8:	ldr	r0, [r0, #224]	; 0xe0
   37fbc:	cmp	r0, #0
   37fc0:	orreq	r0, r9, #256	; 0x100
   37fc4:	orrne	r0, r0, r9
   37fc8:	mov	r1, r6
   37fcc:	str	r0, [r1]
   37fd0:	ldr	r1, [pc, #940]	; 38384 <oper_up+0x464>
   37fd4:	ldr	r1, [pc, r1]
   37fd8:	ldr	r0, [r1]
   37fdc:	add	r0, r0, #1
   37fe0:	str	r0, [r1]
   37fe4:	ldr	r0, [r8, #20]
   37fe8:	ldrd	r2, [r4, #64]	; 0x40
   37fec:	orr	r1, r3, r0, asr #31
   37ff0:	orr	r0, r2, r0
   37ff4:	orr	r0, r0, #5242880	; 0x500000
   37ff8:	strd	r0, [r4, #64]	; 0x40
   37ffc:	ldr	r0, [r8]
   38000:	bl	383dc <rb_strdup>
   38004:	ldr	r1, [r4, #24]
   38008:	str	r0, [r1, #32]
   3800c:	ldr	r0, [r8, #32]
   38010:	bl	daf0 <privilegeset_ref@plt>
   38014:	ldr	r1, [r4, #24]
   38018:	str	r0, [r1, #36]	; 0x24
   3801c:	bl	dc58 <rb_make_rb_dlink_node@plt>
   38020:	mov	r1, r0
   38024:	ldr	r2, [pc, #860]	; 38388 <oper_up+0x468>
   38028:	ldr	r2, [pc, r2]
   3802c:	mov	r0, r4
   38030:	bl	36944 <rb_dlinkAdd>
   38034:	bl	dc58 <rb_make_rb_dlink_node@plt>
   38038:	mov	r1, r0
   3803c:	ldr	r2, [pc, #840]	; 3838c <oper_up+0x46c>
   38040:	ldr	r2, [pc, r2]
   38044:	mov	r0, r4
   38048:	bl	36944 <rb_dlinkAdd>
   3804c:	ldr	r0, [r4, #24]
   38050:	cmp	r0, #0
   38054:	beq	38108 <oper_up+0x1e8>
   38058:	ldr	r0, [r0, #36]	; 0x24
   3805c:	cmp	r0, #0
   38060:	beq	38078 <oper_up+0x158>
   38064:	ldr	r1, [pc, #804]	; 38390 <oper_up+0x470>
   38068:	add	r1, pc, r1
   3806c:	bl	e594 <privilegeset_in_set@plt>
   38070:	cmp	r0, #0
   38074:	bne	380a4 <oper_up+0x184>
   38078:	ldr	r0, [r4, #24]
   3807c:	cmp	r0, #0
   38080:	beq	38108 <oper_up+0x1e8>
   38084:	ldr	r0, [r0, #36]	; 0x24
   38088:	cmp	r0, #0
   3808c:	beq	380dc <oper_up+0x1bc>
   38090:	ldr	r1, [pc, #764]	; 38394 <oper_up+0x474>
   38094:	add	r1, pc, r1
   38098:	bl	e594 <privilegeset_in_set@plt>
   3809c:	cmp	r0, #0
   380a0:	beq	380dc <oper_up+0x1bc>
   380a4:	ldr	r0, [r4, #24]
   380a8:	cmp	r0, #0
   380ac:	beq	380d0 <oper_up+0x1b0>
   380b0:	ldr	r0, [r0, #36]	; 0x24
   380b4:	cmp	r0, #0
   380b8:	beq	380d0 <oper_up+0x1b0>
   380bc:	ldr	r1, [pc, #724]	; 38398 <oper_up+0x478>
   380c0:	add	r1, pc, r1
   380c4:	bl	e594 <privilegeset_in_set@plt>
   380c8:	cmp	r0, #0
   380cc:	bne	380dc <oper_up+0x1bc>
   380d0:	ldr	r0, [r7]
   380d4:	orr	r0, r0, #8192	; 0x2000
   380d8:	str	r0, [r7]
   380dc:	ldr	r0, [r4, #24]
   380e0:	cmp	r0, #0
   380e4:	beq	38108 <oper_up+0x1e8>
   380e8:	ldr	r0, [r0, #36]	; 0x24
   380ec:	cmp	r0, #0
   380f0:	beq	38108 <oper_up+0x1e8>
   380f4:	ldr	r1, [pc, #672]	; 3839c <oper_up+0x47c>
   380f8:	add	r1, pc, r1
   380fc:	bl	e594 <privilegeset_in_set@plt>
   38100:	cmp	r0, #0
   38104:	bne	38114 <oper_up+0x1f4>
   38108:	ldr	r0, [r6]
   3810c:	bic	r0, r0, #64	; 0x40
   38110:	str	r0, [r6]
   38114:	ldr	r0, [r4, #24]
   38118:	cmp	r0, #0
   3811c:	beq	38140 <oper_up+0x220>
   38120:	ldr	r0, [r0, #36]	; 0x24
   38124:	cmp	r0, #0
   38128:	beq	38140 <oper_up+0x220>
   3812c:	ldr	r1, [pc, #620]	; 383a0 <oper_up+0x480>
   38130:	add	r1, pc, r1
   38134:	bl	e594 <privilegeset_in_set@plt>
   38138:	cmp	r0, #0
   3813c:	bne	3814c <oper_up+0x22c>
   38140:	ldr	r0, [r7]
   38144:	bic	r0, r0, #4
   38148:	str	r0, [r7]
   3814c:	ldr	r0, [pc, #592]	; 383a4 <oper_up+0x484>
   38150:	ldr	r0, [pc, r0]
   38154:	ldrb	r0, [r0, #216]	; 0xd8
   38158:	tst	r0, #1
   3815c:	beq	381a0 <oper_up+0x280>
   38160:	ldr	r0, [r4, #24]
   38164:	cmp	r0, #0
   38168:	beq	3818c <oper_up+0x26c>
   3816c:	ldr	r0, [r0, #36]	; 0x24
   38170:	cmp	r0, #0
   38174:	beq	3818c <oper_up+0x26c>
   38178:	ldr	r1, [pc, #552]	; 383a8 <oper_up+0x488>
   3817c:	add	r1, pc, r1
   38180:	bl	e594 <privilegeset_in_set@plt>
   38184:	cmp	r0, #0
   38188:	bne	381a0 <oper_up+0x280>
   3818c:	ldr	r0, [r7]
   38190:	bic	r0, r0, #1
   38194:	str	r0, [r7]
   38198:	mov	r0, #0
   3819c:	str	r0, [r6]
   381a0:	str	r9, [sp, #24]
   381a4:	str	sl, [sp, #20]
   381a8:	str	r4, [sp, #16]
   381ac:	ldr	r0, [pc, #504]	; 383ac <oper_up+0x48c>
   381b0:	ldr	r0, [pc, r0]
   381b4:	ldr	r0, [r0]
   381b8:	add	r1, sp, #16
   381bc:	bl	e654 <call_hook@plt>
   381c0:	ldr	r0, [r4, #24]
   381c4:	cmp	r0, #0
   381c8:	beq	381f0 <oper_up+0x2d0>
   381cc:	ldr	r0, [r0, #36]	; 0x24
   381d0:	cmp	r0, #0
   381d4:	beq	381f0 <oper_up+0x2d0>
   381d8:	ldr	r1, [pc, #464]	; 383b0 <oper_up+0x490>
   381dc:	add	r1, pc, r1
   381e0:	bl	e594 <privilegeset_in_set@plt>
   381e4:	mov	r1, #5
   381e8:	cmp	r0, #0
   381ec:	bne	3821c <oper_up+0x2fc>
   381f0:	ldrb	r0, [r7, #1]
   381f4:	mov	r1, #1
   381f8:	tst	r0, #16
   381fc:	beq	3821c <oper_up+0x2fc>
   38200:	ldr	r0, [r4, #24]
   38204:	cmp	r0, #0
   38208:	beq	3821c <oper_up+0x2fc>
   3820c:	ldr	r0, [r0, #36]	; 0x24
   38210:	mov	r1, #1
   38214:	cmp	r0, #0
   38218:	movweq	r1, #5
   3821c:	strb	r1, [r4, #82]	; 0x52
   38220:	ldr	r3, [r8]
   38224:	add	r0, r4, #163	; 0xa3
   38228:	add	r1, r4, #152	; 0x98
   3822c:	add	r7, r4, #88	; 0x58
   38230:	str	r7, [sp]
   38234:	str	r1, [sp, #4]
   38238:	str	r0, [sp, #8]
   3823c:	ldr	r2, [pc, #368]	; 383b4 <oper_up+0x494>
   38240:	add	r2, pc, r2
   38244:	mov	r0, #256	; 0x100
   38248:	mov	r1, #0
   3824c:	bl	d634 <sendto_realops_snomask@plt>
   38250:	ldr	r0, [pc, #352]	; 383b8 <oper_up+0x498>
   38254:	ldr	r0, [pc, r0]
   38258:	ldr	r2, [r0]
   3825c:	mov	r6, r4
   38260:	ldrb	r0, [r6, #396]!	; 0x18c
   38264:	ldr	r1, [r8]
   38268:	ldr	r3, [r8, #32]
   3826c:	ldr	r3, [r3, #8]
   38270:	cmp	r0, #0
   38274:	mov	r0, r6
   38278:	moveq	r0, r7
   3827c:	ldr	r5, [pc, #312]	; 383bc <oper_up+0x49c>
   38280:	add	r5, pc, r5
   38284:	str	r5, [sp]
   38288:	stmib	sp, {r0, r1, r3}
   3828c:	mov	r0, #0
   38290:	mov	r1, #0
   38294:	mov	r3, #0
   38298:	bl	d994 <sendto_server@plt>
   3829c:	ldr	r0, [r6, #-340]	; 0xfffffeac
   382a0:	and	r0, r0, #8
   382a4:	tst	sl, #8
   382a8:	bne	382cc <oper_up+0x3ac>
   382ac:	cmp	r0, #0
   382b0:	beq	382ec <oper_up+0x3cc>
   382b4:	ldr	r0, [pc, #260]	; 383c0 <oper_up+0x4a0>
   382b8:	ldr	r0, [pc, r0]
   382bc:	mov	r1, r0
   382c0:	ldr	r0, [r0, #8]
   382c4:	add	r0, r0, #1
   382c8:	b	382e8 <oper_up+0x3c8>
   382cc:	cmp	r0, #0
   382d0:	bne	382ec <oper_up+0x3cc>
   382d4:	ldr	r0, [pc, #232]	; 383c4 <oper_up+0x4a4>
   382d8:	ldr	r0, [pc, r0]
   382dc:	mov	r1, r0
   382e0:	ldr	r0, [r0, #8]
   382e4:	sub	r0, r0, #1
   382e8:	str	r0, [r1, #8]
   382ec:	mov	r0, r4
   382f0:	mov	r1, r4
   382f4:	mov	r2, sl
   382f8:	bl	e444 <send_umode_out@plt>
   382fc:	ldr	r0, [r4, #72]	; 0x48
   38300:	bl	d178 <construct_snobuf@plt>
   38304:	mov	r3, r0
   38308:	ldr	r2, [pc, #184]	; 383c8 <oper_up+0x4a8>
   3830c:	add	r2, pc, r2
   38310:	mov	r0, r4
   38314:	mov	r1, #8
   38318:	bl	dc7c <sendto_one_numeric@plt>
   3831c:	ldr	r0, [pc, #168]	; 383cc <oper_up+0x4ac>
   38320:	ldr	r0, [pc, r0]
   38324:	add	r2, r0, #88	; 0x58
   38328:	ldr	r1, [pc, #160]	; 383d0 <oper_up+0x4b0>
   3832c:	add	r1, pc, r1
   38330:	mov	r0, r4
   38334:	mov	r3, r7
   38338:	bl	d1e4 <sendto_one@plt>
   3833c:	ldr	r0, [r8, #32]
   38340:	ldr	r2, [r0, #8]
   38344:	ldr	r1, [pc, #136]	; 383d4 <oper_up+0x4b4>
   38348:	add	r1, pc, r1
   3834c:	mov	r0, r4
   38350:	bl	e414 <sendto_one_notice@plt>
   38354:	ldr	r0, [r8, #32]
   38358:	ldr	r2, [r0, #12]
   3835c:	ldr	r1, [pc, #116]	; 383d8 <oper_up+0x4b8>
   38360:	add	r1, pc, r1
   38364:	mov	r0, r4
   38368:	bl	e414 <sendto_one_notice@plt>
   3836c:	mov	r0, r4
   38370:	bl	dc4c <send_oper_motd@plt>
   38374:	sub	sp, fp, #28
   38378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3837c:	.word	0x00022c18
   38380:	.word	0x00022bc8
   38384:	.word	0x0002294c
   38388:	.word	0x00022910
   3838c:	.word	0x00022a60
   38390:	.word	0x00008fc7
   38394:	.word	0x00008fa6
   38398:	.word	0x00008f7a
   3839c:	.word	0x0000ed55
   383a0:	.word	0x0000ed65
   383a4:	.word	0x00022a2c
   383a8:	.word	0x0000ec9f
   383ac:	.word	0x00022894
   383b0:	.word	0x00008e16
   383b4:	.word	0x0000edd7
   383b8:	.word	0x000226d4
   383bc:	.word	0x0000e4c0
   383c0:	.word	0x00022668
   383c4:	.word	0x00022648
   383c8:	.word	0x0000eaf8
   383cc:	.word	0x00022838
   383d0:	.word	0x0000ed0c
   383d4:	.word	0x0000ed7c
   383d8:	.word	0x0000ed82

000383dc <rb_strdup>:
   383dc:	push	{r4, sl, fp, lr}
   383e0:	add	fp, sp, #8
   383e4:	mov	r4, r0
   383e8:	bl	dc94 <strlen@plt>
   383ec:	add	r0, r0, #1
   383f0:	bl	da84 <malloc@plt>
   383f4:	cmp	r0, #0
   383f8:	beq	38408 <rb_strdup+0x2c>
   383fc:	mov	r1, r4
   38400:	pop	{r4, sl, fp, lr}
   38404:	b	d91c <strcpy@plt>
   38408:	bl	d448 <rb_outofmemory@plt>

0003840c <find_umode_slot>:
   3840c:	mov	r0, #0
   38410:	ldr	r2, [pc, #48]	; 38448 <find_umode_slot+0x3c>
   38414:	ldr	r2, [pc, r2]
   38418:	mov	r1, #0
   3841c:	ldr	r3, [r2, r0, lsl #2]
   38420:	orr	r1, r3, r1
   38424:	add	r0, r0, #1
   38428:	cmp	r0, #128	; 0x80
   3842c:	bne	3841c <find_umode_slot+0x10>
   38430:	mov	r2, #1
   38434:	mov	r0, r2
   38438:	lsl	r2, r2, #1
   3843c:	tst	r0, r1
   38440:	bne	38434 <find_umode_slot+0x28>
   38444:	bx	lr
   38448:	.word	0x0002255c

0003844c <construct_umodebuf>:
   3844c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38450:	add	fp, sp, #28
   38454:	sub	sp, sp, #4
   38458:	ldr	r9, [pc, #228]	; 38544 <construct_umodebuf+0xf8>
   3845c:	ldr	r9, [pc, r9]
   38460:	mov	r6, #0
   38464:	strb	r6, [r9]
   38468:	mvn	r7, #127	; 0x7f
   3846c:	ldr	r2, [pc, #212]	; 38548 <construct_umodebuf+0xfc>
   38470:	add	r2, pc, r2
   38474:	ldr	r5, [pc, #208]	; 3854c <construct_umodebuf+0x100>
   38478:	ldr	r5, [pc, r5]
   3847c:	mov	r8, r2
   38480:	b	384b0 <construct_umodebuf+0x64>
   38484:	mov	r0, r5
   38488:	ldr	r0, [r0]
   3848c:	str	r0, [sl]
   38490:	ldr	r0, [r5]
   38494:	cmp	r0, #0
   38498:	strbne	r4, [r9], #1
   3849c:	add	r8, r8, #4
   384a0:	add	r5, r5, #4
   384a4:	adds	r7, r7, #1
   384a8:	add	r6, r6, #1
   384ac:	bcs	38534 <construct_umodebuf+0xe8>
   384b0:	add	sl, r2, r6, lsl #2
   384b4:	add	r4, r7, #128	; 0x80
   384b8:	ldr	r0, [r8]
   384bc:	cmp	r0, #0
   384c0:	beq	38484 <construct_umodebuf+0x38>
   384c4:	ldr	r1, [r5]
   384c8:	cmp	r0, r1
   384cc:	beq	38484 <construct_umodebuf+0x38>
   384d0:	cmp	r1, #0
   384d4:	beq	384f0 <construct_umodebuf+0xa4>
   384d8:	ldr	r1, [pc, #120]	; 38558 <construct_umodebuf+0x10c>
   384dc:	ldr	r1, [pc, r1]
   384e0:	bic	r0, r1, r0
   384e4:	ldr	r2, [pc, #112]	; 3855c <construct_umodebuf+0x110>
   384e8:	add	r2, pc, r2
   384ec:	b	38504 <construct_umodebuf+0xb8>
   384f0:	ldr	r1, [pc, #88]	; 38550 <construct_umodebuf+0x104>
   384f4:	ldr	r1, [pc, r1]
   384f8:	orr	r0, r1, r0
   384fc:	ldr	r2, [pc, #80]	; 38554 <construct_umodebuf+0x108>
   38500:	add	r2, pc, r2
   38504:	ldr	r1, [pc, #84]	; 38560 <construct_umodebuf+0x114>
   38508:	add	r1, pc, r1
   3850c:	str	r0, [r1]
   38510:	mov	r0, #8
   38514:	mov	r1, #0
   38518:	mov	r3, r4
   3851c:	bl	d634 <sendto_realops_snomask@plt>
   38520:	mov	r0, sl
   38524:	mov	sl, r5
   38528:	ldr	r2, [pc, #52]	; 38564 <construct_umodebuf+0x118>
   3852c:	add	r2, pc, r2
   38530:	b	38488 <construct_umodebuf+0x3c>
   38534:	mov	r0, #0
   38538:	strb	r0, [r9]
   3853c:	sub	sp, fp, #28
   38540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38544:	.word	0x000225f0
   38548:	.word	0x00032eec
   3854c:	.word	0x000224f8
   38550:	.word	0x00032e64
   38554:	.word	0x0000ebf9
   38558:	.word	0x00032e7c
   3855c:	.word	0x0000ec2b
   38560:	.word	0x00032e50
   38564:	.word	0x00032e30

00038568 <change_nick_user_host>:
   38568:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3856c:	add	fp, sp, #28
   38570:	sub	sp, sp, #412	; 0x19c
   38574:	mov	r8, r3
   38578:	mov	r6, r2
   3857c:	mov	r7, r1
   38580:	mov	r9, r0
   38584:	add	r5, r0, #88	; 0x58
   38588:	mov	r0, r5
   3858c:	bl	e750 <irccmp@plt>
   38590:	mov	sl, r0
   38594:	mov	r0, r5
   38598:	str	r7, [sp, #64]	; 0x40
   3859c:	mov	r1, r7
   385a0:	bl	d0c4 <strcmp@plt>
   385a4:	str	r0, [sp, #48]	; 0x30
   385a8:	add	r4, r9, #152	; 0x98
   385ac:	mov	r0, r4
   385b0:	mov	r1, r6
   385b4:	bl	e750 <irccmp@plt>
   385b8:	mov	r7, #1
   385bc:	cmp	r0, #0
   385c0:	bne	385dc <change_nick_user_host+0x74>
   385c4:	add	r0, r9, #163	; 0xa3
   385c8:	mov	r1, r8
   385cc:	bl	e750 <irccmp@plt>
   385d0:	mov	r7, r0
   385d4:	cmp	r0, #0
   385d8:	movwne	r7, #1
   385dc:	mov	r0, #0
   385e0:	strb	r0, [fp, #-108]	; 0xffffff94
   385e4:	cmp	sl, #0
   385e8:	beq	385fc <change_nick_user_host+0x94>
   385ec:	ldr	r0, [fp, #8]
   385f0:	str	r0, [r9, #52]	; 0x34
   385f4:	mov	r0, r9
   385f8:	bl	e150 <monitor_signoff@plt>
   385fc:	mov	r0, r9
   38600:	bl	d7e4 <invalidate_bancache_user@plt>
   38604:	cmp	r7, #0
   38608:	beq	3884c <change_nick_user_host+0x2e4>
   3860c:	str	sl, [sp, #40]	; 0x28
   38610:	ldr	r2, [fp, #12]
   38614:	add	r3, fp, #16
   38618:	str	r3, [sp, #72]	; 0x48
   3861c:	add	r7, sp, #76	; 0x4c
   38620:	mov	r0, r7
   38624:	mov	r1, #255	; 0xff
   38628:	bl	e450 <vsnprintf@plt>
   3862c:	ldr	r0, [pc, #1040]	; 38a44 <change_nick_user_host+0x4dc>
   38630:	ldr	r0, [pc, r0]
   38634:	ldr	r2, [r0]
   38638:	add	r0, r9, #163	; 0xa3
   3863c:	str	r5, [sp, #44]	; 0x2c
   38640:	str	r5, [sp]
   38644:	str	r4, [sp, #36]	; 0x24
   38648:	str	r4, [sp, #4]
   3864c:	str	r0, [sp, #32]
   38650:	str	r0, [sp, #8]
   38654:	str	r7, [sp, #12]
   38658:	mov	r7, #0
   3865c:	ldr	r3, [pc, #996]	; 38a48 <change_nick_user_host+0x4e0>
   38660:	add	r3, pc, r3
   38664:	mov	r0, r9
   38668:	mov	r1, #0
   3866c:	bl	e480 <sendto_common_channels_local_butone@plt>
   38670:	ldr	r0, [r9, #24]
   38674:	ldr	r1, [r0]
   38678:	cmp	r1, #0
   3867c:	mov	r4, r8
   38680:	beq	388bc <change_nick_user_host+0x354>
   38684:	movw	r0, #345	; 0x159
   38688:	add	r0, r9, r0
   3868c:	str	r0, [sp, #56]	; 0x38
   38690:	sub	r0, fp, #42	; 0x2a
   38694:	add	r0, r0, #1
   38698:	str	r0, [sp, #52]	; 0x34
   3869c:	str	r9, [sp, #60]	; 0x3c
   386a0:	b	386bc <change_nick_user_host+0x154>
   386a4:	mov	r7, #0
   386a8:	strb	r7, [fp, #-108]	; 0xffffff94
   386ac:	ldr	r1, [sp, #68]	; 0x44
   386b0:	ldr	r1, [r1, #8]
   386b4:	cmp	r1, #0
   386b8:	beq	388bc <change_nick_user_host+0x354>
   386bc:	mov	r5, r6
   386c0:	mov	r6, r4
   386c4:	str	r1, [sp, #68]	; 0x44
   386c8:	ldr	r9, [r1]
   386cc:	ldr	sl, [r9, #36]	; 0x24
   386d0:	cmp	r9, #0
   386d4:	sub	r8, fp, #42	; 0x2a
   386d8:	beq	38738 <change_nick_user_host+0x1d0>
   386dc:	ldrb	r0, [r9, #44]	; 0x2c
   386e0:	tst	r0, #2
   386e4:	sub	r8, fp, #42	; 0x2a
   386e8:	beq	38718 <change_nick_user_host+0x1b0>
   386ec:	mov	r0, #111	; 0x6f
   386f0:	strb	r0, [fp, #-42]	; 0xffffffd6
   386f4:	sub	r4, fp, #108	; 0x6c
   386f8:	mov	r0, r4
   386fc:	ldr	r1, [sp, #64]	; 0x40
   38700:	bl	d8b0 <strcat@plt>
   38704:	bl	dc94 <strlen@plt>
   38708:	add	r0, r4, r0
   3870c:	mov	r1, #32
   38710:	strh	r1, [r0]
   38714:	ldr	r8, [sp, #52]	; 0x34
   38718:	ldrb	r0, [r9, #44]	; 0x2c
   3871c:	tst	r0, #1
   38720:	beq	38738 <change_nick_user_host+0x1d0>
   38724:	mov	r0, #118	; 0x76
   38728:	strb	r0, [r8], #1
   3872c:	sub	r0, fp, #108	; 0x6c
   38730:	ldr	r1, [sp, #64]	; 0x40
   38734:	bl	d8b0 <strcat@plt>
   38738:	strb	r7, [r8]
   3873c:	ldr	r8, [pc, #776]	; 38a4c <change_nick_user_host+0x4e4>
   38740:	ldr	r8, [pc, r8]
   38744:	ldr	r0, [r8]
   38748:	ldr	r1, [pc, #768]	; 38a50 <change_nick_user_host+0x4e8>
   3874c:	ldr	r1, [pc, r1]
   38750:	mov	r7, r1
   38754:	ldr	r1, [r1]
   38758:	ldr	r2, [sl, #236]	; 0xec
   3875c:	str	sl, [sp]
   38760:	ldr	r3, [pc, #748]	; 38a54 <change_nick_user_host+0x4ec>
   38764:	add	r3, pc, r3
   38768:	str	r3, [sp, #4]
   3876c:	ldr	r4, [sp, #64]	; 0x40
   38770:	add	r3, sp, #8
   38774:	stm	r3, {r4, r5, r6}
   38778:	str	r2, [sp, #20]
   3877c:	orr	r3, r0, r1
   38780:	ldr	r9, [sp, #60]	; 0x3c
   38784:	mov	r0, r9
   38788:	mov	r1, #0
   3878c:	mov	r2, #0
   38790:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   38794:	ldr	r3, [r8]
   38798:	ldr	r2, [r7]
   3879c:	ldr	r0, [r9, #24]
   387a0:	ldrb	r1, [r0, #40]!	; 0x28
   387a4:	ldr	r7, [sl, #236]	; 0xec
   387a8:	cmp	r1, #0
   387ac:	ldr	r1, [pc, #676]	; 38a58 <change_nick_user_host+0x4f0>
   387b0:	add	r1, pc, r1
   387b4:	moveq	r0, r1
   387b8:	str	sl, [sp]
   387bc:	ldr	r1, [pc, #664]	; 38a5c <change_nick_user_host+0x4f4>
   387c0:	add	r1, pc, r1
   387c4:	stmib	sp, {r1, r4}
   387c8:	mov	r4, r6
   387cc:	mov	r6, r5
   387d0:	str	r5, [sp, #12]
   387d4:	str	r4, [sp, #16]
   387d8:	str	r7, [sp, #20]
   387dc:	str	r0, [sp, #24]
   387e0:	ldr	r0, [sp, #56]	; 0x38
   387e4:	str	r0, [sp, #28]
   387e8:	mov	r0, r9
   387ec:	mov	r1, #0
   387f0:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   387f4:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   387f8:	cmp	r0, #0
   387fc:	beq	386a4 <change_nick_user_host+0x13c>
   38800:	ldr	r3, [r8]
   38804:	ldr	r0, [r9, #32]
   38808:	ldr	r1, [sl, #236]	; 0xec
   3880c:	add	r0, r0, #88	; 0x58
   38810:	str	sl, [sp]
   38814:	ldr	r2, [pc, #580]	; 38a60 <change_nick_user_host+0x4f8>
   38818:	add	r2, pc, r2
   3881c:	str	r2, [sp, #4]
   38820:	str	r0, [sp, #8]
   38824:	str	r1, [sp, #12]
   38828:	sub	r0, fp, #42	; 0x2a
   3882c:	str	r0, [sp, #16]
   38830:	sub	r0, fp, #108	; 0x6c
   38834:	str	r0, [sp, #20]
   38838:	mov	r0, r9
   3883c:	mov	r1, #0
   38840:	mov	r2, #0
   38844:	bl	e1bc <sendto_channel_local_with_capability_butone@plt>
   38848:	b	386a4 <change_nick_user_host+0x13c>
   3884c:	ldr	r0, [sp, #48]	; 0x30
   38850:	cmp	r0, #0
   38854:	beq	38998 <change_nick_user_host+0x430>
   38858:	stm	sp, {r5, r6, r8}
   3885c:	ldr	r0, [sp, #64]	; 0x40
   38860:	str	r0, [sp, #12]
   38864:	ldr	r3, [pc, #524]	; 38a78 <change_nick_user_host+0x510>
   38868:	add	r3, pc, r3
   3886c:	mov	r0, r9
   38870:	mov	r1, #0
   38874:	mov	r2, #0
   38878:	bl	de2c <sendto_common_channels_local@plt>
   3887c:	ldrb	r0, [r9, #65]	; 0x41
   38880:	tst	r0, #32
   38884:	beq	38998 <change_nick_user_host+0x430>
   38888:	add	r0, r9, #163	; 0xa3
   3888c:	ldr	r1, [sp, #64]	; 0x40
   38890:	stm	sp, {r1, r4}
   38894:	str	r0, [sp, #8]
   38898:	ldr	r2, [pc, #476]	; 38a7c <change_nick_user_host+0x514>
   3889c:	add	r2, pc, r2
   388a0:	mov	r0, #64	; 0x40
   388a4:	mov	r1, #0
   388a8:	mov	r3, r5
   388ac:	bl	d634 <sendto_realops_snomask@plt>
   388b0:	cmp	r4, r6
   388b4:	bne	389a0 <change_nick_user_host+0x438>
   388b8:	b	389b0 <change_nick_user_host+0x448>
   388bc:	ldr	r0, [r9, #24]
   388c0:	ldr	r0, [r0, #24]
   388c4:	cmp	r0, #0
   388c8:	mov	r7, r6
   388cc:	mov	r6, r4
   388d0:	ldr	r4, [pc, #396]	; 38a64 <change_nick_user_host+0x4fc>
   388d4:	ldr	r4, [pc, r4]
   388d8:	beq	3890c <change_nick_user_host+0x3a4>
   388dc:	ldr	r2, [r4]
   388e0:	ldr	r1, [pc, #384]	; 38a68 <change_nick_user_host+0x500>
   388e4:	ldr	r1, [pc, r1]
   388e8:	ldr	r1, [r1]
   388ec:	ldr	r3, [sp, #64]	; 0x40
   388f0:	stm	sp, {r3, r7}
   388f4:	str	r6, [sp, #8]
   388f8:	str	r0, [sp, #12]
   388fc:	ldr	r3, [pc, #360]	; 38a6c <change_nick_user_host+0x504>
   38900:	add	r3, pc, r3
   38904:	mov	r0, r9
   38908:	bl	e480 <sendto_common_channels_local_butone@plt>
   3890c:	ldr	r1, [r4]
   38910:	ldr	r5, [sp, #44]	; 0x2c
   38914:	str	r5, [sp]
   38918:	ldr	r4, [sp, #36]	; 0x24
   3891c:	str	r4, [sp, #4]
   38920:	ldr	r0, [sp, #32]
   38924:	str	r0, [sp, #8]
   38928:	str	r7, [sp, #12]
   3892c:	mov	r8, r6
   38930:	str	r6, [sp, #16]
   38934:	ldr	r3, [pc, #308]	; 38a70 <change_nick_user_host+0x508>
   38938:	add	r3, pc, r3
   3893c:	mov	r0, r9
   38940:	mov	r2, #0
   38944:	bl	e480 <sendto_common_channels_local_butone@plt>
   38948:	ldrb	r0, [r9, #65]	; 0x41
   3894c:	tst	r0, #32
   38950:	ldr	sl, [sp, #40]	; 0x28
   38954:	mov	r6, r7
   38958:	beq	38998 <change_nick_user_host+0x430>
   3895c:	ldr	r0, [sp, #48]	; 0x30
   38960:	cmp	r0, #0
   38964:	beq	38998 <change_nick_user_host+0x430>
   38968:	ldrh	r0, [r9, #80]	; 0x50
   3896c:	cmp	r0, #64	; 0x40
   38970:	bne	38998 <change_nick_user_host+0x430>
   38974:	str	r8, [sp]
   38978:	ldr	r0, [sp, #64]	; 0x40
   3897c:	str	r0, [sp, #4]
   38980:	ldr	r1, [pc, #236]	; 38a74 <change_nick_user_host+0x50c>
   38984:	add	r1, pc, r1
   38988:	mov	r0, r9
   3898c:	mov	r2, r5
   38990:	mov	r3, r6
   38994:	bl	d1e4 <sendto_one@plt>
   38998:	cmp	r4, r6
   3899c:	beq	389b0 <change_nick_user_host+0x448>
   389a0:	mov	r0, r4
   389a4:	mov	r1, r6
   389a8:	mov	r2, #11
   389ac:	bl	e510 <rb_strlcpy@plt>
   389b0:	add	r0, r9, #163	; 0xa3
   389b4:	mov	r1, r8
   389b8:	mov	r2, #64	; 0x40
   389bc:	bl	e510 <rb_strlcpy@plt>
   389c0:	cmp	sl, #0
   389c4:	beq	38a14 <change_nick_user_host+0x4ac>
   389c8:	mov	r0, r9
   389cc:	mov	r1, #1
   389d0:	bl	e3cc <whowas_add_history@plt>
   389d4:	mov	r0, r5
   389d8:	mov	r1, r9
   389dc:	bl	db14 <del_from_client_hash@plt>
   389e0:	mov	r0, r5
   389e4:	ldr	r1, [sp, #64]	; 0x40
   389e8:	mov	r2, #32
   389ec:	bl	e510 <rb_strlcpy@plt>
   389f0:	mov	r0, r5
   389f4:	mov	r1, r9
   389f8:	bl	da3c <add_to_client_hash@plt>
   389fc:	mov	r0, r9
   38a00:	bl	ddfc <monitor_signon@plt>
   38a04:	mov	r0, r9
   38a08:	bl	dcc4 <del_all_accepts@plt>
   38a0c:	sub	sp, fp, #28
   38a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38a14:	mov	r0, r5
   38a18:	mov	r1, r9
   38a1c:	bl	db14 <del_from_client_hash@plt>
   38a20:	mov	r0, r5
   38a24:	ldr	r1, [sp, #64]	; 0x40
   38a28:	mov	r2, #32
   38a2c:	bl	e510 <rb_strlcpy@plt>
   38a30:	mov	r0, r5
   38a34:	mov	r1, r9
   38a38:	bl	da3c <add_to_client_hash@plt>
   38a3c:	sub	sp, fp, #28
   38a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38a44:	.word	0x00022220
   38a48:	.word	0x000092b1
   38a4c:	.word	0x00022110
   38a50:	.word	0x00022380
   38a54:	.word	0x00008563
   38a58:	.word	0x00008eed
   38a5c:	.word	0x00008519
   38a60:	.word	0x0000e925
   38a64:	.word	0x00021f7c
   38a68:	.word	0x00022104
   38a6c:	.word	0x000083f2
   38a70:	.word	0x0000e818
   38a74:	.word	0x0000e7e4
   38a78:	.word	0x00008d8f
   38a7c:	.word	0x00008ccc

00038a80 <rb_dlinkFindDelete>:
   38a80:	push	{fp, lr}
   38a84:	mov	fp, sp
   38a88:	cmp	r1, #0
   38a8c:	beq	38b00 <rb_dlinkFindDelete+0x80>
   38a90:	mov	ip, r0
   38a94:	cmp	r0, #0
   38a98:	beq	38b20 <rb_dlinkFindDelete+0xa0>
   38a9c:	ldr	r3, [r1]
   38aa0:	mov	r0, r3
   38aa4:	cmp	r3, #0
   38aa8:	beq	38afc <rb_dlinkFindDelete+0x7c>
   38aac:	ldr	r2, [r0]
   38ab0:	ldr	r3, [r0, #8]
   38ab4:	cmp	r2, ip
   38ab8:	bne	38aa0 <rb_dlinkFindDelete+0x20>
   38abc:	add	r2, r3, #4
   38ac0:	cmp	r3, #0
   38ac4:	addeq	r2, r1, #4
   38ac8:	ldr	r3, [r0, #4]
   38acc:	str	r3, [r2]
   38ad0:	ldmib	r0, {r2, ip}
   38ad4:	cmp	r2, #0
   38ad8:	mov	r3, r1
   38adc:	addne	r3, r2, #8
   38ae0:	str	ip, [r3]
   38ae4:	mov	r2, #0
   38ae8:	str	r2, [r0, #4]
   38aec:	str	r2, [r0, #8]
   38af0:	ldr	r2, [r1, #8]
   38af4:	sub	r2, r2, #1
   38af8:	str	r2, [r1, #8]
   38afc:	pop	{fp, pc}
   38b00:	ldr	r0, [pc, #56]	; 38b40 <rb_dlinkFindDelete+0xc0>
   38b04:	add	r0, pc, r0
   38b08:	ldr	r1, [pc, #52]	; 38b44 <rb_dlinkFindDelete+0xc4>
   38b0c:	add	r1, pc, r1
   38b10:	ldr	r3, [pc, #48]	; 38b48 <rb_dlinkFindDelete+0xc8>
   38b14:	add	r3, pc, r3
   38b18:	movw	r2, #258	; 0x102
   38b1c:	bl	e7e0 <__assert_fail@plt>
   38b20:	ldr	r0, [pc, #36]	; 38b4c <rb_dlinkFindDelete+0xcc>
   38b24:	add	r0, pc, r0
   38b28:	ldr	r1, [pc, #32]	; 38b50 <rb_dlinkFindDelete+0xd0>
   38b2c:	add	r1, pc, r1
   38b30:	ldr	r3, [pc, #28]	; 38b54 <rb_dlinkFindDelete+0xd4>
   38b34:	add	r3, pc, r3
   38b38:	movw	r2, #259	; 0x103
   38b3c:	bl	e7e0 <__assert_fail@plt>
   38b40:	.word	0x0000d691
   38b44:	.word	0x00007e0a
   38b48:	.word	0x00008442
   38b4c:	.word	0x00007e4d
   38b50:	.word	0x00007dea
   38b54:	.word	0x00008422

00038b58 <clear_scache_hash_table>:
   38b58:	push	{fp, lr}
   38b5c:	mov	fp, sp
   38b60:	ldr	r0, [pc, #28]	; 38b84 <clear_scache_hash_table+0x2c>
   38b64:	add	r0, pc, r0
   38b68:	ldr	r1, [pc, #24]	; 38b88 <clear_scache_hash_table+0x30>
   38b6c:	add	r1, pc, r1
   38b70:	bl	d850 <rb_radixtree_create@plt>
   38b74:	ldr	r1, [pc, #16]	; 38b8c <clear_scache_hash_table+0x34>
   38b78:	add	r1, pc, r1
   38b7c:	str	r0, [r1]
   38b80:	pop	{fp, pc}
   38b84:	.word	0x0000ea54
   38b88:	.word	0x0000001c
   38b8c:	.word	0x000329e4

00038b90 <irccasecanon>:
   38b90:	ldrb	r1, [r0]
   38b94:	cmp	r1, #0
   38b98:	bxeq	lr
   38b9c:	add	r0, r0, #1
   38ba0:	ldr	r2, [pc, #32]	; 38bc8 <irccasecanon+0x38>
   38ba4:	ldr	r2, [pc, r2]
   38ba8:	uxtb	r1, r1
   38bac:	ldrb	r1, [r2, r1]
   38bb0:	strb	r1, [r0, #-1]
   38bb4:	ldrb	r1, [r0]
   38bb8:	add	r0, r0, #1
   38bbc:	cmp	r1, #0
   38bc0:	bne	38ba8 <irccasecanon+0x18>
   38bc4:	bx	lr
   38bc8:	.word	0x00021dc4

00038bcc <scache_connect>:
   38bcc:	push	{r4, r5, r6, sl, fp, lr}
   38bd0:	add	fp, sp, #16
   38bd4:	mov	r4, r2
   38bd8:	mov	r5, r1
   38bdc:	bl	38c20 <find_or_add>
   38be0:	mov	r6, r0
   38be4:	add	r0, r0, #64	; 0x40
   38be8:	mov	r1, r5
   38bec:	mov	r2, #51	; 0x33
   38bf0:	bl	e510 <rb_strlcpy@plt>
   38bf4:	ldr	r0, [r6, #116]	; 0x74
   38bf8:	mov	r1, #1
   38bfc:	mov	r2, r0
   38c00:	bfi	r2, r1, #0, #2
   38c04:	cmp	r4, #0
   38c08:	orrne	r2, r0, #3
   38c0c:	str	r2, [r6, #116]	; 0x74
   38c10:	bl	d07c <rb_current_time@plt>
   38c14:	str	r0, [r6, #124]	; 0x7c
   38c18:	mov	r0, r6
   38c1c:	pop	{r4, r5, r6, sl, fp, pc}

00038c20 <find_or_add>:
   38c20:	push	{r4, r5, fp, lr}
   38c24:	add	fp, sp, #8
   38c28:	mov	r5, r0
   38c2c:	ldr	r0, [pc, #104]	; 38c9c <find_or_add+0x7c>
   38c30:	ldr	r0, [pc, r0]
   38c34:	mov	r1, r5
   38c38:	bl	dee0 <rb_radixtree_retrieve@plt>
   38c3c:	mov	r4, r0
   38c40:	cmp	r0, #0
   38c44:	beq	38c50 <find_or_add+0x30>
   38c48:	mov	r0, r4
   38c4c:	pop	{r4, r5, fp, pc}
   38c50:	bl	39014 <rb_malloc>
   38c54:	mov	r4, r0
   38c58:	mov	r1, r5
   38c5c:	mov	r2, #64	; 0x40
   38c60:	bl	e510 <rb_strlcpy@plt>
   38c64:	mov	r5, #0
   38c68:	str	r5, [r4, #116]	; 0x74
   38c6c:	strb	r5, [r4, #64]	; 0x40
   38c70:	bl	d07c <rb_current_time@plt>
   38c74:	str	r0, [r4, #120]	; 0x78
   38c78:	str	r5, [r4, #124]	; 0x7c
   38c7c:	str	r5, [r4, #128]	; 0x80
   38c80:	ldr	r0, [pc, #24]	; 38ca0 <find_or_add+0x80>
   38c84:	ldr	r0, [pc, r0]
   38c88:	mov	r1, r4
   38c8c:	mov	r2, r4
   38c90:	bl	dd9c <rb_radixtree_add@plt>
   38c94:	mov	r0, r4
   38c98:	pop	{r4, r5, fp, pc}
   38c9c:	.word	0x0003292c
   38ca0:	.word	0x000328d8

00038ca4 <scache_split>:
   38ca4:	cmp	r0, #0
   38ca8:	bxeq	lr
   38cac:	push	{r4, sl, fp, lr}
   38cb0:	add	fp, sp, #8
   38cb4:	mov	r4, r0
   38cb8:	ldr	r0, [r0, #116]	; 0x74
   38cbc:	bic	r0, r0, #1
   38cc0:	str	r0, [r4, #116]	; 0x74
   38cc4:	bl	d07c <rb_current_time@plt>
   38cc8:	str	r0, [r4, #128]	; 0x80
   38ccc:	pop	{r4, sl, fp, lr}
   38cd0:	bx	lr

00038cd4 <scache_get_name>:
   38cd4:	bx	lr

00038cd8 <scache_send_flattened_links>:
   38cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38cdc:	add	fp, sp, #28
   38ce0:	sub	sp, sp, #52	; 0x34
   38ce4:	mov	r9, r0
   38ce8:	ldr	r0, [pc, #376]	; 38e68 <scache_send_flattened_links+0x190>
   38cec:	ldr	r0, [pc, r0]
   38cf0:	add	r5, sp, #12
   38cf4:	mov	r1, r5
   38cf8:	bl	e318 <rb_radixtree_foreach_start@plt>
   38cfc:	ldr	r0, [pc, #360]	; 38e6c <scache_send_flattened_links+0x194>
   38d00:	ldr	r0, [pc, r0]
   38d04:	mov	r1, r5
   38d08:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38d0c:	cmp	r0, #0
   38d10:	beq	38e0c <scache_send_flattened_links+0x134>
   38d14:	mov	r7, r0
   38d18:	ldr	r0, [pc, #336]	; 38e70 <scache_send_flattened_links+0x198>
   38d1c:	ldr	r0, [pc, r0]
   38d20:	add	r5, r0, #88	; 0x58
   38d24:	add	r6, sp, #12
   38d28:	ldr	r8, [pc, #324]	; 38e74 <scache_send_flattened_links+0x19c>
   38d2c:	ldr	r8, [pc, r8]
   38d30:	b	38d8c <scache_send_flattened_links+0xb4>
   38d34:	add	r0, r7, #64	; 0x40
   38d38:	str	r5, [sp]
   38d3c:	mov	r1, #1
   38d40:	str	r1, [sp, #4]
   38d44:	str	r0, [sp, #8]
   38d48:	mov	r0, r9
   38d4c:	mov	r1, #364	; 0x16c
   38d50:	ldr	r2, [pc, #288]	; 38e78 <scache_send_flattened_links+0x1a0>
   38d54:	add	r2, pc, r2
   38d58:	mov	r3, r7
   38d5c:	bl	dc7c <sendto_one_numeric@plt>
   38d60:	ldr	r0, [pc, #276]	; 38e7c <scache_send_flattened_links+0x1a4>
   38d64:	ldr	r0, [pc, r0]
   38d68:	mov	r1, r6
   38d6c:	bl	d574 <rb_radixtree_foreach_next@plt>
   38d70:	ldr	r0, [pc, #264]	; 38e80 <scache_send_flattened_links+0x1a8>
   38d74:	ldr	r0, [pc, r0]
   38d78:	mov	r1, r6
   38d7c:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38d80:	mov	r7, r0
   38d84:	cmp	r0, #0
   38d88:	beq	38e0c <scache_send_flattened_links+0x134>
   38d8c:	mov	r0, r7
   38d90:	mov	r1, r5
   38d94:	bl	e750 <irccmp@plt>
   38d98:	cmp	r0, #0
   38d9c:	beq	38d60 <scache_send_flattened_links+0x88>
   38da0:	ldr	r0, [r7, #116]	; 0x74
   38da4:	tst	r0, #2
   38da8:	beq	38db8 <scache_send_flattened_links+0xe0>
   38dac:	ldr	r1, [r8, #12]
   38db0:	cmp	r1, #0
   38db4:	beq	38d60 <scache_send_flattened_links+0x88>
   38db8:	tst	r0, #1
   38dbc:	bne	38df0 <scache_send_flattened_links+0x118>
   38dc0:	ldr	r4, [r7, #128]	; 0x80
   38dc4:	bl	d07c <rb_current_time@plt>
   38dc8:	ldr	r1, [r8, #4]
   38dcc:	sub	r0, r0, r1
   38dd0:	cmp	r4, r0
   38dd4:	ble	38d60 <scache_send_flattened_links+0x88>
   38dd8:	ldr	r0, [r7, #120]	; 0x78
   38ddc:	ldr	r2, [r7, #128]	; 0x80
   38de0:	sub	r0, r2, r0
   38de4:	cmp	r0, r1
   38de8:	bgt	38d34 <scache_send_flattened_links+0x5c>
   38dec:	b	38d60 <scache_send_flattened_links+0x88>
   38df0:	ldr	sl, [r7, #120]	; 0x78
   38df4:	bl	d07c <rb_current_time@plt>
   38df8:	ldr	r1, [r8, #4]
   38dfc:	sub	r0, r0, r1
   38e00:	cmp	sl, r0
   38e04:	blt	38d34 <scache_send_flattened_links+0x5c>
   38e08:	b	38d60 <scache_send_flattened_links+0x88>
   38e0c:	mov	r0, #0
   38e10:	str	r0, [sp, #4]
   38e14:	ldr	r0, [pc, #104]	; 38e84 <scache_send_flattened_links+0x1ac>
   38e18:	ldr	r0, [pc, r0]
   38e1c:	movw	r1, #345	; 0x159
   38e20:	add	r1, r0, r1
   38e24:	str	r1, [sp, #8]
   38e28:	add	r3, r0, #88	; 0x58
   38e2c:	str	r3, [sp]
   38e30:	ldr	r2, [pc, #80]	; 38e88 <scache_send_flattened_links+0x1b0>
   38e34:	add	r2, pc, r2
   38e38:	mov	r0, r9
   38e3c:	mov	r1, #364	; 0x16c
   38e40:	bl	dc7c <sendto_one_numeric@plt>
   38e44:	ldr	r2, [pc, #64]	; 38e8c <scache_send_flattened_links+0x1b4>
   38e48:	add	r2, pc, r2
   38e4c:	ldr	r3, [pc, #60]	; 38e90 <scache_send_flattened_links+0x1b8>
   38e50:	add	r3, pc, r3
   38e54:	mov	r0, r9
   38e58:	movw	r1, #365	; 0x16d
   38e5c:	bl	dc7c <sendto_one_numeric@plt>
   38e60:	sub	sp, fp, #28
   38e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38e68:	.word	0x00032870
   38e6c:	.word	0x0003285c
   38e70:	.word	0x00021e3c
   38e74:	.word	0x00021c88
   38e78:	.word	0x0000e877
   38e7c:	.word	0x000327f8
   38e80:	.word	0x000327e8
   38e84:	.word	0x00021d40
   38e88:	.word	0x0000e797
   38e8c:	.word	0x0000e790
   38e90:	.word	0x0000884d

00038e94 <scache_send_missing>:
   38e94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38e98:	add	fp, sp, #24
   38e9c:	sub	sp, sp, #40	; 0x28
   38ea0:	mov	r9, r0
   38ea4:	ldr	r0, [pc, #172]	; 38f58 <scache_send_missing+0xc4>
   38ea8:	ldr	r0, [pc, r0]
   38eac:	mov	r5, sp
   38eb0:	mov	r1, r5
   38eb4:	bl	e318 <rb_radixtree_foreach_start@plt>
   38eb8:	ldr	r0, [pc, #156]	; 38f5c <scache_send_missing+0xc8>
   38ebc:	ldr	r0, [pc, r0]
   38ec0:	mov	r1, r5
   38ec4:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38ec8:	cmp	r0, #0
   38ecc:	beq	38f50 <scache_send_missing+0xbc>
   38ed0:	mov	r7, r0
   38ed4:	movw	r5, #44672	; 0xae80
   38ed8:	movt	r5, #65534	; 0xfffe
   38edc:	ldr	r8, [pc, #124]	; 38f60 <scache_send_missing+0xcc>
   38ee0:	add	r8, pc, r8
   38ee4:	mov	r6, sp
   38ee8:	b	38f18 <scache_send_missing+0x84>
   38eec:	ldr	r0, [pc, #112]	; 38f64 <scache_send_missing+0xd0>
   38ef0:	ldr	r0, [pc, r0]
   38ef4:	mov	r1, r6
   38ef8:	bl	d574 <rb_radixtree_foreach_next@plt>
   38efc:	ldr	r0, [pc, #100]	; 38f68 <scache_send_missing+0xd4>
   38f00:	ldr	r0, [pc, r0]
   38f04:	mov	r1, r6
   38f08:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38f0c:	mov	r7, r0
   38f10:	cmp	r0, #0
   38f14:	beq	38f50 <scache_send_missing+0xbc>
   38f18:	ldrb	r0, [r7, #116]	; 0x74
   38f1c:	tst	r0, #1
   38f20:	bne	38eec <scache_send_missing+0x58>
   38f24:	ldr	r4, [r7, #128]	; 0x80
   38f28:	bl	d07c <rb_current_time@plt>
   38f2c:	add	r0, r0, r5
   38f30:	cmp	r4, r0
   38f34:	ble	38eec <scache_send_missing+0x58>
   38f38:	mov	r0, r9
   38f3c:	mov	r1, #15
   38f40:	mov	r2, r8
   38f44:	mov	r3, r7
   38f48:	bl	dc7c <sendto_one_numeric@plt>
   38f4c:	b	38eec <scache_send_missing+0x58>
   38f50:	sub	sp, fp, #24
   38f54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   38f58:	.word	0x000326b4
   38f5c:	.word	0x000326a0
   38f60:	.word	0x0000e710
   38f64:	.word	0x0003266c
   38f68:	.word	0x0003265c

00038f6c <count_scache>:
   38f6c:	push	{r4, r5, r6, sl, fp, lr}
   38f70:	add	fp, sp, #16
   38f74:	sub	sp, sp, #40	; 0x28
   38f78:	mov	r4, r1
   38f7c:	mov	r5, r0
   38f80:	mov	r0, #0
   38f84:	str	r0, [r5]
   38f88:	str	r0, [r1]
   38f8c:	ldr	r0, [pc, #112]	; 39004 <count_scache+0x98>
   38f90:	ldr	r0, [pc, r0]
   38f94:	mov	r6, sp
   38f98:	mov	r1, r6
   38f9c:	bl	e318 <rb_radixtree_foreach_start@plt>
   38fa0:	ldr	r0, [pc, #96]	; 39008 <count_scache+0x9c>
   38fa4:	ldr	r0, [pc, r0]
   38fa8:	mov	r1, r6
   38fac:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38fb0:	cmp	r0, #0
   38fb4:	beq	38ffc <count_scache+0x90>
   38fb8:	mov	r6, sp
   38fbc:	ldr	r0, [r5]
   38fc0:	add	r0, r0, #1
   38fc4:	str	r0, [r5]
   38fc8:	ldr	r0, [r4]
   38fcc:	add	r0, r0, #132	; 0x84
   38fd0:	str	r0, [r4]
   38fd4:	ldr	r0, [pc, #48]	; 3900c <count_scache+0xa0>
   38fd8:	ldr	r0, [pc, r0]
   38fdc:	mov	r1, r6
   38fe0:	bl	d574 <rb_radixtree_foreach_next@plt>
   38fe4:	ldr	r0, [pc, #36]	; 39010 <count_scache+0xa4>
   38fe8:	ldr	r0, [pc, r0]
   38fec:	mov	r1, r6
   38ff0:	bl	e06c <rb_radixtree_foreach_cur@plt>
   38ff4:	cmp	r0, #0
   38ff8:	bne	38fbc <count_scache+0x50>
   38ffc:	sub	sp, fp, #16
   39000:	pop	{r4, r5, r6, sl, fp, pc}
   39004:	.word	0x000325cc
   39008:	.word	0x000325b8
   3900c:	.word	0x00032584
   39010:	.word	0x00032574

00039014 <rb_malloc>:
   39014:	push	{fp, lr}
   39018:	mov	fp, sp
   3901c:	mov	r0, #1
   39020:	mov	r1, #132	; 0x84
   39024:	bl	cfa4 <calloc@plt>
   39028:	cmp	r0, #0
   3902c:	popne	{fp, pc}
   39030:	bl	d448 <rb_outofmemory@plt>

00039034 <send_queued>:
   39034:	push	{r4, r5, r6, r7, fp, lr}
   39038:	add	fp, sp, #16
   3903c:	mov	r4, r0
   39040:	ldr	r0, [r0, #432]	; 0x1b0
   39044:	ldr	r5, [r0, #300]	; 0x12c
   39048:	cmp	r5, #0
   3904c:	beq	39188 <send_queued+0x154>
   39050:	ldrb	r1, [r4, #65]	; 0x41
   39054:	tst	r1, #64	; 0x40
   39058:	bne	39188 <send_queued+0x154>
   3905c:	ldrb	r1, [r0, #452]	; 0x1c4
   39060:	tst	r1, #2
   39064:	popne	{r4, r5, r6, r7, fp, pc}
   39068:	ldr	r0, [r0, #64]	; 0x40
   3906c:	cmp	r0, #0
   39070:	beq	39138 <send_queued+0x104>
   39074:	ldr	r0, [r4, #432]	; 0x1b0
   39078:	add	r1, r0, #52	; 0x34
   3907c:	mov	r0, r5
   39080:	bl	dff4 <rb_linebuf_flush@plt>
   39084:	cmp	r0, #1
   39088:	blt	3911c <send_queued+0xe8>
   3908c:	ldr	r6, [pc, #248]	; 3918c <send_queued+0x158>
   39090:	ldr	r6, [pc, r6]
   39094:	mov	r7, #0
   39098:	b	390cc <send_queued+0x98>
   3909c:	uxth	r2, r0
   390a0:	bfc	r0, #10, #22
   390a4:	strh	r0, [r1, #124]	; 0x7c
   390a8:	ldr	r0, [r1, #112]	; 0x70
   390ac:	add	r0, r0, r2, lsr #10
   390b0:	str	r0, [r1, #112]	; 0x70
   390b4:	ldr	r0, [r4, #432]	; 0x1b0
   390b8:	add	r1, r0, #52	; 0x34
   390bc:	mov	r0, r5
   390c0:	bl	dff4 <rb_linebuf_flush@plt>
   390c4:	cmp	r0, #0
   390c8:	ble	3911c <send_queued+0xe8>
   390cc:	ldr	r1, [r4, #432]	; 0x1b0
   390d0:	ldr	r2, [r1, #452]	; 0x1c4
   390d4:	bic	r2, r2, #2
   390d8:	str	r2, [r1, #452]	; 0x1c4
   390dc:	ldrh	r2, [r1, #124]	; 0x7c
   390e0:	add	r2, r2, r0
   390e4:	strh	r2, [r1, #124]	; 0x7c
   390e8:	ldr	r2, [r6, #432]	; 0x1b0
   390ec:	ldrh	r3, [r2, #124]	; 0x7c
   390f0:	add	r3, r3, r0
   390f4:	strh	r3, [r2, #124]	; 0x7c
   390f8:	ldrh	r0, [r1, #124]	; 0x7c
   390fc:	cmp	r7, r0, lsr #10
   39100:	bne	3909c <send_queued+0x68>
   39104:	uxth	r0, r3
   39108:	cmp	r0, #1024	; 0x400
   3910c:	mov	r0, r3
   39110:	mov	r1, r2
   39114:	bcs	3909c <send_queued+0x68>
   39118:	b	390b4 <send_queued+0x80>
   3911c:	cmp	r0, #0
   39120:	beq	39170 <send_queued+0x13c>
   39124:	bl	de38 <__errno_location@plt>
   39128:	ldr	r0, [r0]
   3912c:	bl	dab4 <rb_ignore_errno@plt>
   39130:	cmp	r0, #0
   39134:	beq	39170 <send_queued+0x13c>
   39138:	ldr	r0, [r4, #432]	; 0x1b0
   3913c:	ldr	r2, [r0, #64]	; 0x40
   39140:	ldr	r1, [r0, #452]	; 0x1c4
   39144:	cmp	r2, #0
   39148:	beq	39180 <send_queued+0x14c>
   3914c:	orr	r1, r1, #2
   39150:	str	r1, [r0, #452]	; 0x1c4
   39154:	ldr	r0, [r0, #300]	; 0x12c
   39158:	ldr	r2, [pc, #48]	; 39190 <send_queued+0x15c>
   3915c:	add	r2, pc, r2
   39160:	mov	r1, #2
   39164:	mov	r3, r4
   39168:	pop	{r4, r5, r6, r7, fp, lr}
   3916c:	b	d304 <rb_setselect@plt>
   39170:	mov	r0, r4
   39174:	mov	r1, #0
   39178:	pop	{r4, r5, r6, r7, fp, lr}
   3917c:	b	d364 <dead_link@plt>
   39180:	bic	r1, r1, #2
   39184:	str	r1, [r0, #452]	; 0x1c4
   39188:	pop	{r4, r5, r6, r7, fp, pc}
   3918c:	.word	0x00021ac8
   39190:	.word	0x00000030

00039194 <send_queued_write>:
   39194:	mov	r0, r1
   39198:	ldr	r1, [r1, #432]	; 0x1b0
   3919c:	ldr	r2, [r1, #452]	; 0x1c4
   391a0:	bic	r2, r2, #2
   391a4:	str	r2, [r1, #452]	; 0x1c4
   391a8:	b	39034 <send_queued>

000391ac <send_pop_queue>:
   391ac:	mov	r1, r0
   391b0:	ldr	r0, [r0, #36]	; 0x24
   391b4:	cmp	r0, #0
   391b8:	moveq	r0, r1
   391bc:	ldr	r1, [r0, #64]	; 0x40
   391c0:	and	r1, r1, #24576	; 0x6000
   391c4:	teq	r1, #8192	; 0x2000
   391c8:	bxne	lr
   391cc:	ldr	r1, [r0, #432]	; 0x1b0
   391d0:	ldr	r1, [r1, #64]	; 0x40
   391d4:	cmp	r1, #1
   391d8:	blt	391e0 <send_pop_queue+0x34>
   391dc:	b	39034 <send_queued>
   391e0:	bx	lr

000391e4 <sendto_one>:
   391e4:	sub	sp, sp, #8
   391e8:	push	{r4, r5, r6, sl, fp, lr}
   391ec:	add	fp, sp, #16
   391f0:	sub	sp, sp, #320	; 0x140
   391f4:	str	r2, [fp, #8]
   391f8:	str	r3, [fp, #12]
   391fc:	mov	r2, #0
   39200:	str	r2, [sp, #20]
   39204:	sub	r3, fp, #20
   39208:	add	ip, sp, #8
   3920c:	stm	ip, {r1, r2, r3}
   39210:	str	r2, [sp, #4]
   39214:	ldr	r4, [r0, #36]	; 0x24
   39218:	cmp	r4, #0
   3921c:	moveq	r4, r0
   39220:	ldrb	r0, [r4, #65]	; 0x41
   39224:	tst	r0, #64	; 0x40
   39228:	bne	3927c <sendto_one+0x98>
   3922c:	add	r5, sp, #24
   39230:	mov	r0, r5
   39234:	bl	d7a8 <rb_linebuf_newbuf@plt>
   39238:	ldr	r1, [pc, #76]	; 3928c <sendto_one+0xa8>
   3923c:	ldr	r1, [pc, r1]
   39240:	add	r6, sp, #52	; 0x34
   39244:	mov	r0, r6
   39248:	bl	39290 <build_msgbuf_tags>
   3924c:	add	r0, fp, #8
   39250:	str	r0, [fp, #-20]	; 0xffffffec
   39254:	add	r3, sp, #4
   39258:	mov	r0, r5
   3925c:	mov	r1, r6
   39260:	mov	r2, r4
   39264:	bl	392cc <linebuf_put_tags>
   39268:	mov	r0, r4
   3926c:	mov	r1, r5
   39270:	bl	39344 <_send_linebuf>
   39274:	mov	r0, r5
   39278:	bl	e00c <rb_linebuf_donebuf@plt>
   3927c:	sub	sp, fp, #16
   39280:	pop	{r4, r5, r6, sl, fp, lr}
   39284:	add	sp, sp, #8
   39288:	bx	lr
   3928c:	.word	0x0002191c

00039290 <build_msgbuf_tags>:
   39290:	push	{r4, r5, fp, lr}
   39294:	add	fp, sp, #8
   39298:	sub	sp, sp, #16
   3929c:	mov	r4, r1
   392a0:	mov	r5, r0
   392a4:	bl	3b774 <msgbuf_init>
   392a8:	stmib	sp, {r4, r5}
   392ac:	ldr	r0, [pc, #20]	; 392c8 <build_msgbuf_tags+0x38>
   392b0:	ldr	r0, [pc, r0]
   392b4:	ldr	r0, [r0]
   392b8:	add	r1, sp, #4
   392bc:	bl	e654 <call_hook@plt>
   392c0:	sub	sp, fp, #8
   392c4:	pop	{r4, r5, fp, pc}
   392c8:	.word	0x00021768

000392cc <linebuf_put_tags>:
   392cc:	push	{fp, lr}
   392d0:	mov	fp, sp
   392d4:	sub	sp, sp, #32
   392d8:	str	r1, [fp, #-8]
   392dc:	ldrh	r1, [r2, #80]	; 0x50
   392e0:	mov	ip, #0
   392e4:	cmp	r1, #64	; 0x40
   392e8:	mov	r1, #0
   392ec:	bne	39300 <linebuf_put_tags+0x34>
   392f0:	ldr	r2, [r2, #432]	; 0x1b0
   392f4:	cmp	r2, #0
   392f8:	mov	r1, #0
   392fc:	ldrne	r1, [r2, #296]	; 0x128
   39300:	str	r1, [fp, #-4]
   39304:	str	r3, [sp, #20]
   39308:	sub	r1, fp, #8
   3930c:	str	r1, [sp, #16]
   39310:	ldr	r1, [pc, #40]	; 39340 <linebuf_put_tags+0x74>
   39314:	ldr	r1, [pc, r1]
   39318:	str	r1, [sp, #12]
   3931c:	str	ip, [sp, #8]
   39320:	movw	r1, #513	; 0x201
   39324:	str	r1, [sp, #4]
   39328:	movw	r1, #511	; 0x1ff
   3932c:	str	r1, [r3]
   39330:	add	r1, sp, #4
   39334:	bl	e45c <rb_linebuf_put@plt>
   39338:	mov	sp, fp
   3933c:	pop	{fp, pc}
   39340:	.word	0x00021604

00039344 <_send_linebuf>:
   39344:	push	{r4, r5, r6, r7, fp, lr}
   39348:	add	fp, sp, #16
   3934c:	sub	sp, sp, #8
   39350:	mov	r4, r0
   39354:	ldrh	r0, [r0, #80]	; 0x50
   39358:	cmp	r0, #4
   3935c:	bne	3937c <_send_linebuf+0x38>
   39360:	ldr	r2, [pc, #304]	; 39498 <_send_linebuf+0x154>
   39364:	add	r2, pc, r2
   39368:	mov	r0, #256	; 0x100
   3936c:	mov	r1, #0
   39370:	sub	sp, fp, #16
   39374:	pop	{r4, r5, r6, r7, fp, lr}
   39378:	b	395d0 <sendto_realops_snomask>
   3937c:	ldr	r0, [r4, #64]	; 0x40
   39380:	and	r0, r0, #24576	; 0x6000
   39384:	teq	r0, #8192	; 0x2000
   39388:	bne	39488 <_send_linebuf+0x144>
   3938c:	mov	r5, r1
   39390:	ldr	r0, [r4, #432]	; 0x1b0
   39394:	ldr	r6, [r0, #64]	; 0x40
   39398:	mov	r0, r4
   3939c:	bl	dc70 <get_sendq@plt>
   393a0:	cmp	r6, r0
   393a4:	ble	39434 <_send_linebuf+0xf0>
   393a8:	ldrh	r0, [r4, #80]	; 0x50
   393ac:	cmp	r0, #32
   393b0:	bne	39420 <_send_linebuf+0xdc>
   393b4:	ldr	r0, [r4, #432]	; 0x1b0
   393b8:	ldr	r5, [r0, #64]	; 0x40
   393bc:	mov	r0, r4
   393c0:	bl	dc70 <get_sendq@plt>
   393c4:	str	r5, [sp]
   393c8:	str	r0, [sp, #4]
   393cc:	add	r3, r4, #88	; 0x58
   393d0:	ldr	r5, [pc, #184]	; 39490 <_send_linebuf+0x14c>
   393d4:	add	r5, pc, r5
   393d8:	mov	r0, #256	; 0x100
   393dc:	mov	r1, #0
   393e0:	mov	r2, r5
   393e4:	bl	d634 <sendto_realops_snomask@plt>
   393e8:	mov	r0, r4
   393ec:	mov	r1, #1
   393f0:	bl	e168 <log_client_name@plt>
   393f4:	mov	r6, r0
   393f8:	ldr	r0, [r4, #432]	; 0x1b0
   393fc:	ldr	r7, [r0, #64]	; 0x40
   39400:	mov	r0, r4
   39404:	bl	dc70 <get_sendq@plt>
   39408:	str	r0, [sp]
   3940c:	mov	r0, #5
   39410:	mov	r1, r5
   39414:	mov	r2, r6
   39418:	mov	r3, r7
   3941c:	bl	e0b4 <ilog@plt>
   39420:	mov	r0, r4
   39424:	mov	r1, #1
   39428:	sub	sp, fp, #16
   3942c:	pop	{r4, r5, r6, r7, fp, lr}
   39430:	b	d364 <dead_link@plt>
   39434:	ldr	r0, [r4, #432]	; 0x1b0
   39438:	add	r0, r0, #52	; 0x34
   3943c:	mov	r1, r5
   39440:	bl	d2d4 <rb_linebuf_attach@plt>
   39444:	ldr	r0, [r4, #432]	; 0x1b0
   39448:	ldr	r1, [r0, #108]	; 0x6c
   3944c:	add	r1, r1, #1
   39450:	str	r1, [r0, #108]	; 0x6c
   39454:	ldr	r1, [pc, #56]	; 39494 <_send_linebuf+0x150>
   39458:	ldr	r1, [pc, r1]
   3945c:	ldr	r1, [r1, #432]	; 0x1b0
   39460:	ldr	r2, [r1, #108]	; 0x6c
   39464:	add	r2, r2, #1
   39468:	str	r2, [r1, #108]	; 0x6c
   3946c:	ldr	r0, [r0, #64]	; 0x40
   39470:	cmp	r0, #1
   39474:	blt	39488 <_send_linebuf+0x144>
   39478:	mov	r0, r4
   3947c:	sub	sp, fp, #16
   39480:	pop	{r4, r5, r6, r7, fp, lr}
   39484:	b	39034 <send_queued>
   39488:	sub	sp, fp, #16
   3948c:	pop	{r4, r5, r6, r7, fp, pc}
   39490:	.word	0x0000e396
   39494:	.word	0x00021700
   39498:	.word	0x0000e3e4

0003949c <sendto_one_prefix>:
   3949c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   394a0:	add	fp, sp, #24
   394a4:	sub	sp, sp, #336	; 0x150
   394a8:	mov	r7, r1
   394ac:	mov	r5, r0
   394b0:	ldr	r4, [r0, #36]	; 0x24
   394b4:	mov	r0, #0
   394b8:	str	r0, [sp, #36]	; 0x24
   394bc:	sub	r1, fp, #28
   394c0:	str	r1, [sp, #32]
   394c4:	str	r0, [sp, #28]
   394c8:	str	r3, [sp, #24]
   394cc:	str	r0, [sp, #20]
   394d0:	ldrb	r0, [r4, #65]	; 0x41
   394d4:	tst	r0, #64	; 0x40
   394d8:	bne	395c0 <sendto_one_prefix+0x124>
   394dc:	ldrh	r0, [r4, #80]	; 0x50
   394e0:	cmp	r0, #4
   394e4:	bne	39504 <sendto_one_prefix+0x68>
   394e8:	ldr	r2, [pc, #216]	; 395c8 <sendto_one_prefix+0x12c>
   394ec:	add	r2, pc, r2
   394f0:	mov	r0, #256	; 0x100
   394f4:	mov	r1, #0
   394f8:	bl	d634 <sendto_realops_snomask@plt>
   394fc:	sub	sp, fp, #24
   39500:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   39504:	mov	r6, r2
   39508:	add	r0, sp, #68	; 0x44
   3950c:	mov	r1, r7
   39510:	bl	39290 <build_msgbuf_tags>
   39514:	add	r0, sp, #40	; 0x28
   39518:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3951c:	add	r0, fp, #8
   39520:	str	r0, [fp, #-28]	; 0xffffffe4
   39524:	ldr	r0, [r5, #36]	; 0x24
   39528:	ldrh	r1, [r0, #80]	; 0x50
   3952c:	cmp	r1, #32
   39530:	bne	39550 <sendto_one_prefix+0xb4>
   39534:	ldrb	r1, [r0, #396]	; 0x18c
   39538:	cmp	r1, #0
   3953c:	beq	39558 <sendto_one_prefix+0xbc>
   39540:	ldrb	r1, [r7, #396]!	; 0x18c
   39544:	cmp	r1, #0
   39548:	subeq	r7, r7, #308	; 0x134
   3954c:	b	3955c <sendto_one_prefix+0xc0>
   39550:	add	r7, r7, #88	; 0x58
   39554:	b	3957c <sendto_one_prefix+0xe0>
   39558:	add	r7, r7, #88	; 0x58
   3955c:	ldrb	r0, [r0, #396]	; 0x18c
   39560:	cmp	r0, #0
   39564:	beq	3957c <sendto_one_prefix+0xe0>
   39568:	mov	r0, r5
   3956c:	ldrb	r1, [r0, #396]!	; 0x18c
   39570:	cmp	r1, #0
   39574:	subeq	r0, r0, #308	; 0x134
   39578:	b	39580 <sendto_one_prefix+0xe4>
   3957c:	add	r0, r5, #88	; 0x58
   39580:	ldr	r1, [pc, #68]	; 395cc <sendto_one_prefix+0x130>
   39584:	add	r1, pc, r1
   39588:	stm	sp, {r1, r7}
   3958c:	str	r6, [sp, #8]
   39590:	str	r0, [sp, #12]
   39594:	add	r6, sp, #40	; 0x28
   39598:	add	r1, sp, #68	; 0x44
   3959c:	add	r3, sp, #20
   395a0:	mov	r0, r6
   395a4:	mov	r2, r5
   395a8:	bl	3986c <linebuf_put_tagsf>
   395ac:	mov	r0, r4
   395b0:	mov	r1, r6
   395b4:	bl	39344 <_send_linebuf>
   395b8:	mov	r0, r6
   395bc:	bl	e00c <rb_linebuf_donebuf@plt>
   395c0:	sub	sp, fp, #24
   395c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   395c8:	.word	0x0000e11b
   395cc:	.word	0x0000e09d

000395d0 <sendto_realops_snomask>:
   395d0:	sub	sp, sp, #4
   395d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   395d8:	add	fp, sp, #28
   395dc:	sub	sp, sp, #1968	; 0x7b0
   395e0:	mov	r6, r2
   395e4:	mov	r5, r1
   395e8:	mov	r4, r0
   395ec:	str	r3, [fp, #8]
   395f0:	ldr	r8, [pc, #576]	; 39838 <sendto_realops_snomask+0x268>
   395f4:	ldr	r8, [pc, r8]
   395f8:	sub	r7, fp, #300	; 0x12c
   395fc:	mov	r0, r7
   39600:	mov	r1, r8
   39604:	bl	39290 <build_msgbuf_tags>
   39608:	add	r3, fp, #8
   3960c:	str	r3, [fp, #-36]	; 0xffffffdc
   39610:	ldr	r9, [pc, #548]	; 3983c <sendto_realops_snomask+0x26c>
   39614:	add	r9, pc, r9
   39618:	mov	r0, r9
   3961c:	mov	r1, #512	; 0x200
   39620:	mov	r2, r6
   39624:	bl	e450 <vsnprintf@plt>
   39628:	add	r0, r8, #88	; 0x58
   3962c:	stm	sp, {r0, r9}
   39630:	add	r0, sp, #20
   39634:	ldr	r3, [pc, #516]	; 39840 <sendto_realops_snomask+0x270>
   39638:	add	r3, pc, r3
   3963c:	mov	r1, r7
   39640:	mov	r2, #0
   39644:	bl	d6b8 <msgbuf_cache_initf@plt>
   39648:	tst	r5, #256	; 0x100
   3964c:	beq	396c4 <sendto_realops_snomask+0xf4>
   39650:	ldr	r0, [pc, #492]	; 39844 <sendto_realops_snomask+0x274>
   39654:	ldr	r0, [pc, r0]
   39658:	ldr	r0, [r0, #316]	; 0x13c
   3965c:	cmp	r0, #0
   39660:	beq	396c4 <sendto_realops_snomask+0xf4>
   39664:	mov	r0, r4
   39668:	bl	d178 <construct_snobuf@plt>
   3966c:	ldrb	r0, [r0, #1]
   39670:	cmp	r0, #0
   39674:	beq	396ec <sendto_realops_snomask+0x11c>
   39678:	ldr	r1, [pc, #456]	; 39848 <sendto_realops_snomask+0x278>
   3967c:	ldr	r1, [pc, r1]
   39680:	ldr	r1, [r1]
   39684:	ldr	r2, [pc, #448]	; 3984c <sendto_realops_snomask+0x27c>
   39688:	ldr	r2, [pc, r2]
   3968c:	ldr	r2, [r2]
   39690:	add	r3, r8, #396	; 0x18c
   39694:	ldr	r7, [pc, #436]	; 39850 <sendto_realops_snomask+0x280>
   39698:	add	r7, pc, r7
   3969c:	str	r7, [sp]
   396a0:	str	r3, [sp, #4]
   396a4:	str	r0, [sp, #8]
   396a8:	str	r9, [sp, #12]
   396ac:	orr	r2, r1, r2
   396b0:	mov	r0, #0
   396b4:	mov	r1, #0
   396b8:	mov	r3, #0
   396bc:	bl	d994 <sendto_server@plt>
   396c0:	b	396ec <sendto_realops_snomask+0x11c>
   396c4:	ldr	r0, [pc, #392]	; 39854 <sendto_realops_snomask+0x284>
   396c8:	ldr	r0, [pc, r0]
   396cc:	ldr	r0, [r0]
   396d0:	cmp	r0, #0
   396d4:	beq	396ec <sendto_realops_snomask+0x11c>
   396d8:	ldr	r1, [pc, #376]	; 39858 <sendto_realops_snomask+0x288>
   396dc:	add	r1, pc, r1
   396e0:	ldr	r2, [pc, #372]	; 3985c <sendto_realops_snomask+0x28c>
   396e4:	add	r2, pc, r2
   396e8:	bl	e414 <sendto_one_notice@plt>
   396ec:	ldr	r0, [pc, #364]	; 39860 <sendto_realops_snomask+0x290>
   396f0:	ldr	r0, [pc, r0]
   396f4:	ldr	r6, [r0]
   396f8:	cmp	r6, #0
   396fc:	beq	39820 <sendto_realops_snomask+0x250>
   39700:	bic	r7, r5, #256	; 0x100
   39704:	ldr	r8, [pc, #344]	; 39864 <sendto_realops_snomask+0x294>
   39708:	add	r8, pc, r8
   3970c:	ldr	r9, [pc, #340]	; 39868 <sendto_realops_snomask+0x298>
   39710:	add	r9, pc, r9
   39714:	add	sl, sp, #20
   39718:	b	39738 <sendto_realops_snomask+0x168>
   3971c:	mov	r0, sl
   39720:	bl	e540 <msgbuf_cache_get@plt>
   39724:	mov	r1, r0
   39728:	mov	r0, r5
   3972c:	bl	39344 <_send_linebuf>
   39730:	cmp	r6, #0
   39734:	beq	39820 <sendto_realops_snomask+0x250>
   39738:	ldr	r5, [r6]
   3973c:	ldr	r6, [r6, #8]
   39740:	cmp	r7, #1
   39744:	beq	397a4 <sendto_realops_snomask+0x1d4>
   39748:	cmp	r7, #2
   3974c:	bne	397f4 <sendto_realops_snomask+0x224>
   39750:	ldr	r0, [r5, #24]
   39754:	cmp	r0, #0
   39758:	beq	39730 <sendto_realops_snomask+0x160>
   3975c:	ldr	r0, [r0, #36]	; 0x24
   39760:	cmp	r0, #0
   39764:	beq	39778 <sendto_realops_snomask+0x1a8>
   39768:	mov	r1, r9
   3976c:	bl	e594 <privilegeset_in_set@plt>
   39770:	cmp	r0, #0
   39774:	bne	397f4 <sendto_realops_snomask+0x224>
   39778:	ldr	r0, [r5, #24]
   3977c:	cmp	r0, #0
   39780:	beq	39730 <sendto_realops_snomask+0x160>
   39784:	ldr	r0, [r0, #36]	; 0x24
   39788:	cmp	r0, #0
   3978c:	beq	39730 <sendto_realops_snomask+0x160>
   39790:	mov	r1, r8
   39794:	bl	e594 <privilegeset_in_set@plt>
   39798:	cmp	r0, #0
   3979c:	bne	397f4 <sendto_realops_snomask+0x224>
   397a0:	b	39730 <sendto_realops_snomask+0x160>
   397a4:	ldr	r0, [r5, #24]
   397a8:	cmp	r0, #0
   397ac:	beq	397f4 <sendto_realops_snomask+0x224>
   397b0:	ldr	r0, [r0, #36]	; 0x24
   397b4:	cmp	r0, #0
   397b8:	beq	397cc <sendto_realops_snomask+0x1fc>
   397bc:	mov	r1, r9
   397c0:	bl	e594 <privilegeset_in_set@plt>
   397c4:	cmp	r0, #0
   397c8:	bne	39730 <sendto_realops_snomask+0x160>
   397cc:	ldr	r0, [r5, #24]
   397d0:	cmp	r0, #0
   397d4:	beq	397f4 <sendto_realops_snomask+0x224>
   397d8:	ldr	r0, [r0, #36]	; 0x24
   397dc:	cmp	r0, #0
   397e0:	beq	397f4 <sendto_realops_snomask+0x224>
   397e4:	mov	r1, r8
   397e8:	bl	e594 <privilegeset_in_set@plt>
   397ec:	cmp	r0, #0
   397f0:	bne	39730 <sendto_realops_snomask+0x160>
   397f4:	ldr	r0, [r5, #72]	; 0x48
   397f8:	tst	r0, r4
   397fc:	beq	39730 <sendto_realops_snomask+0x160>
   39800:	ldrh	r0, [r5, #80]	; 0x50
   39804:	mov	r1, #0
   39808:	cmp	r0, #64	; 0x40
   3980c:	bne	3971c <sendto_realops_snomask+0x14c>
   39810:	ldr	r0, [r5, #432]	; 0x1b0
   39814:	cmp	r0, #0
   39818:	ldrne	r1, [r0, #296]	; 0x128
   3981c:	b	3971c <sendto_realops_snomask+0x14c>
   39820:	add	r0, sp, #20
   39824:	bl	de80 <msgbuf_cache_free@plt>
   39828:	sub	sp, fp, #28
   3982c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39830:	add	sp, sp, #4
   39834:	bx	lr
   39838:	.word	0x00021564
   3983c:	.word	0x00032550
   39840:	.word	0x0000e07b
   39844:	.word	0x00021528
   39848:	.word	0x000212ac
   3984c:	.word	0x000214ec
   39850:	.word	0x0000e03a
   39854:	.word	0x000212b8
   39858:	.word	0x0000dfe4
   3985c:	.word	0x00032480
   39860:	.word	0x00021248
   39864:	.word	0x00007932
   39868:	.word	0x0000791f

0003986c <linebuf_put_tagsf>:
   3986c:	push	{fp, lr}
   39870:	mov	fp, sp
   39874:	sub	sp, sp, #24
   39878:	add	ip, fp, #12
   3987c:	str	ip, [fp, #-4]
   39880:	str	r3, [sp, #16]
   39884:	sub	r3, fp, #4
   39888:	str	r3, [sp, #12]
   3988c:	mov	r3, #0
   39890:	str	r3, [sp, #8]
   39894:	str	r3, [sp]
   39898:	ldr	r3, [fp, #8]
   3989c:	str	r3, [sp, #4]
   398a0:	mov	r3, sp
   398a4:	bl	392cc <linebuf_put_tags>
   398a8:	mov	sp, fp
   398ac:	pop	{fp, pc}

000398b0 <sendto_one_notice>:
   398b0:	sub	sp, sp, #8
   398b4:	push	{r4, r5, r6, sl, fp, lr}
   398b8:	add	fp, sp, #16
   398bc:	sub	sp, sp, #328	; 0x148
   398c0:	mov	r5, r0
   398c4:	str	r2, [fp, #8]
   398c8:	str	r3, [fp, #12]
   398cc:	ldr	r4, [r0, #36]	; 0x24
   398d0:	mov	r0, #0
   398d4:	str	r0, [sp, #28]
   398d8:	sub	r2, fp, #20
   398dc:	str	r2, [sp, #24]
   398e0:	str	r0, [sp, #20]
   398e4:	str	r1, [sp, #16]
   398e8:	str	r0, [sp, #12]
   398ec:	ldrb	r0, [r4, #65]	; 0x41
   398f0:	tst	r0, #64	; 0x40
   398f4:	bne	399ec <sendto_one_notice+0x13c>
   398f8:	ldrh	r0, [r4, #80]	; 0x50
   398fc:	cmp	r0, #4
   39900:	bne	3991c <sendto_one_notice+0x6c>
   39904:	ldr	r2, [pc, #240]	; 399fc <sendto_one_notice+0x14c>
   39908:	add	r2, pc, r2
   3990c:	mov	r0, #256	; 0x100
   39910:	mov	r1, #0
   39914:	bl	d634 <sendto_realops_snomask@plt>
   39918:	b	399ec <sendto_one_notice+0x13c>
   3991c:	ldr	r6, [pc, #220]	; 39a00 <sendto_one_notice+0x150>
   39920:	ldr	r6, [pc, r6]
   39924:	add	r0, sp, #60	; 0x3c
   39928:	mov	r1, r6
   3992c:	bl	39290 <build_msgbuf_tags>
   39930:	add	r0, sp, #32
   39934:	bl	d7a8 <rb_linebuf_newbuf@plt>
   39938:	add	r0, fp, #8
   3993c:	str	r0, [fp, #-20]	; 0xffffffec
   39940:	ldr	r0, [r5, #36]	; 0x24
   39944:	ldrh	r1, [r0, #80]	; 0x50
   39948:	cmp	r1, #32
   3994c:	bne	3996c <sendto_one_notice+0xbc>
   39950:	ldrb	r1, [r0, #396]	; 0x18c
   39954:	cmp	r1, #0
   39958:	beq	39974 <sendto_one_notice+0xc4>
   3995c:	ldrb	r1, [r6, #396]!	; 0x18c
   39960:	cmp	r1, #0
   39964:	subeq	r6, r6, #308	; 0x134
   39968:	b	39978 <sendto_one_notice+0xc8>
   3996c:	add	r6, r6, #88	; 0x58
   39970:	b	39998 <sendto_one_notice+0xe8>
   39974:	add	r6, r6, #88	; 0x58
   39978:	ldrb	r0, [r0, #396]	; 0x18c
   3997c:	cmp	r0, #0
   39980:	beq	39998 <sendto_one_notice+0xe8>
   39984:	mov	r0, r5
   39988:	ldrb	r1, [r0, #396]!	; 0x18c
   3998c:	cmp	r1, #0
   39990:	subeq	r0, r0, #308	; 0x134
   39994:	b	3999c <sendto_one_notice+0xec>
   39998:	add	r0, r5, #88	; 0x58
   3999c:	ldrb	r1, [r0]
   399a0:	ldr	r2, [pc, #92]	; 39a04 <sendto_one_notice+0x154>
   399a4:	add	r2, pc, r2
   399a8:	ldr	r3, [pc, #88]	; 39a08 <sendto_one_notice+0x158>
   399ac:	add	r3, pc, r3
   399b0:	cmp	r1, #0
   399b4:	movne	r3, r0
   399b8:	stm	sp, {r2, r6}
   399bc:	str	r3, [sp, #8]
   399c0:	add	r6, sp, #32
   399c4:	add	r1, sp, #60	; 0x3c
   399c8:	add	r3, sp, #12
   399cc:	mov	r0, r6
   399d0:	mov	r2, r5
   399d4:	bl	3986c <linebuf_put_tagsf>
   399d8:	mov	r0, r4
   399dc:	mov	r1, r6
   399e0:	bl	39344 <_send_linebuf>
   399e4:	mov	r0, r6
   399e8:	bl	e00c <rb_linebuf_donebuf@plt>
   399ec:	sub	sp, fp, #16
   399f0:	pop	{r4, r5, r6, sl, fp, lr}
   399f4:	add	sp, sp, #8
   399f8:	bx	lr
   399fc:	.word	0x0000dcff
   39a00:	.word	0x00021238
   39a04:	.word	0x0000dc88
   39a08:	.word	0x00007cf1

00039a0c <sendto_one_numeric>:
   39a0c:	sub	sp, sp, #4
   39a10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   39a14:	add	fp, sp, #24
   39a18:	sub	sp, sp, #332	; 0x14c
   39a1c:	mov	r6, r1
   39a20:	mov	r5, r0
   39a24:	str	r3, [fp, #8]
   39a28:	ldr	r4, [r0, #36]	; 0x24
   39a2c:	mov	r0, #0
   39a30:	str	r0, [sp, #32]
   39a34:	sub	r1, fp, #28
   39a38:	str	r1, [sp, #28]
   39a3c:	str	r0, [sp, #24]
   39a40:	str	r2, [sp, #20]
   39a44:	str	r0, [sp, #16]
   39a48:	ldrb	r0, [r4, #65]	; 0x41
   39a4c:	tst	r0, #64	; 0x40
   39a50:	bne	39b4c <sendto_one_numeric+0x140>
   39a54:	ldrh	r0, [r4, #80]	; 0x50
   39a58:	cmp	r0, #4
   39a5c:	bne	39a78 <sendto_one_numeric+0x6c>
   39a60:	ldr	r2, [pc, #244]	; 39b5c <sendto_one_numeric+0x150>
   39a64:	add	r2, pc, r2
   39a68:	mov	r0, #256	; 0x100
   39a6c:	mov	r1, #0
   39a70:	bl	d634 <sendto_realops_snomask@plt>
   39a74:	b	39b4c <sendto_one_numeric+0x140>
   39a78:	ldr	r7, [pc, #224]	; 39b60 <sendto_one_numeric+0x154>
   39a7c:	ldr	r7, [pc, r7]
   39a80:	add	r0, sp, #64	; 0x40
   39a84:	mov	r1, r7
   39a88:	bl	39290 <build_msgbuf_tags>
   39a8c:	add	r0, sp, #36	; 0x24
   39a90:	bl	d7a8 <rb_linebuf_newbuf@plt>
   39a94:	add	r0, fp, #8
   39a98:	str	r0, [fp, #-28]	; 0xffffffe4
   39a9c:	ldr	r0, [r5, #36]	; 0x24
   39aa0:	ldrh	r1, [r0, #80]	; 0x50
   39aa4:	cmp	r1, #32
   39aa8:	bne	39ac8 <sendto_one_numeric+0xbc>
   39aac:	ldrb	r1, [r0, #396]	; 0x18c
   39ab0:	cmp	r1, #0
   39ab4:	beq	39ad0 <sendto_one_numeric+0xc4>
   39ab8:	ldrb	r1, [r7, #396]!	; 0x18c
   39abc:	cmp	r1, #0
   39ac0:	subeq	r7, r7, #308	; 0x134
   39ac4:	b	39ad4 <sendto_one_numeric+0xc8>
   39ac8:	add	r7, r7, #88	; 0x58
   39acc:	b	39af4 <sendto_one_numeric+0xe8>
   39ad0:	add	r7, r7, #88	; 0x58
   39ad4:	ldrb	r0, [r0, #396]	; 0x18c
   39ad8:	cmp	r0, #0
   39adc:	beq	39af4 <sendto_one_numeric+0xe8>
   39ae0:	mov	r0, r5
   39ae4:	ldrb	r1, [r0, #396]!	; 0x18c
   39ae8:	cmp	r1, #0
   39aec:	subeq	r0, r0, #308	; 0x134
   39af0:	b	39af8 <sendto_one_numeric+0xec>
   39af4:	add	r0, r5, #88	; 0x58
   39af8:	ldrb	r1, [r0]
   39afc:	ldr	r2, [pc, #96]	; 39b64 <sendto_one_numeric+0x158>
   39b00:	add	r2, pc, r2
   39b04:	ldr	r3, [pc, #92]	; 39b68 <sendto_one_numeric+0x15c>
   39b08:	add	r3, pc, r3
   39b0c:	cmp	r1, #0
   39b10:	movne	r3, r0
   39b14:	stm	sp, {r2, r7}
   39b18:	str	r6, [sp, #8]
   39b1c:	str	r3, [sp, #12]
   39b20:	add	r6, sp, #36	; 0x24
   39b24:	add	r1, sp, #64	; 0x40
   39b28:	add	r3, sp, #16
   39b2c:	mov	r0, r6
   39b30:	mov	r2, r5
   39b34:	bl	3986c <linebuf_put_tagsf>
   39b38:	mov	r0, r4
   39b3c:	mov	r1, r6
   39b40:	bl	39344 <_send_linebuf>
   39b44:	mov	r0, r6
   39b48:	bl	e00c <rb_linebuf_donebuf@plt>
   39b4c:	sub	sp, fp, #24
   39b50:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   39b54:	add	sp, sp, #4
   39b58:	bx	lr
   39b5c:	.word	0x0000dba3
   39b60:	.word	0x000210dc
   39b64:	.word	0x0000db3b
   39b68:	.word	0x00007b95

00039b6c <sendto_server>:
   39b6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39b70:	add	fp, sp, #24
   39b74:	sub	sp, sp, #56	; 0x38
   39b78:	mov	r5, r2
   39b7c:	mov	r6, r0
   39b80:	mov	r0, #0
   39b84:	str	r0, [sp, #20]
   39b88:	sub	r2, fp, #28
   39b8c:	str	r2, [sp, #16]
   39b90:	str	r0, [sp, #12]
   39b94:	ldr	r2, [fp, #8]
   39b98:	stmib	sp, {r0, r2}
   39b9c:	ldr	r7, [pc, #176]	; 39c54 <sendto_server+0xe8>
   39ba0:	ldr	r7, [pc, r7]
   39ba4:	ldr	r0, [r7, #8]
   39ba8:	cmp	r0, #0
   39bac:	beq	39c4c <sendto_server+0xe0>
   39bb0:	mov	r4, r3
   39bb4:	cmp	r1, #0
   39bb8:	beq	39bcc <sendto_server+0x60>
   39bbc:	ldr	r0, [r1, #236]	; 0xec
   39bc0:	ldrb	r0, [r0]
   39bc4:	cmp	r0, #35	; 0x23
   39bc8:	bne	39c4c <sendto_server+0xe0>
   39bcc:	add	r8, sp, #24
   39bd0:	mov	r0, r8
   39bd4:	bl	d7a8 <rb_linebuf_newbuf@plt>
   39bd8:	add	r0, fp, #12
   39bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   39be0:	add	r1, sp, #4
   39be4:	mov	r0, r8
   39be8:	bl	39c58 <linebuf_put_msg>
   39bec:	ldr	r7, [r7]
   39bf0:	cmp	r7, #0
   39bf4:	beq	39c44 <sendto_server+0xd8>
   39bf8:	add	r8, sp, #24
   39bfc:	b	39c24 <sendto_server+0xb8>
   39c00:	ldr	r1, [r0, #432]	; 0x1b0
   39c04:	ldr	r1, [r1, #296]	; 0x128
   39c08:	and	r2, r1, r5
   39c0c:	cmp	r2, r5
   39c10:	andseq	r1, r1, r4
   39c14:	moveq	r1, r8
   39c18:	bleq	39344 <_send_linebuf>
   39c1c:	cmp	r7, #0
   39c20:	beq	39c44 <sendto_server+0xd8>
   39c24:	ldr	r0, [r7]
   39c28:	ldr	r7, [r7, #8]
   39c2c:	cmp	r6, #0
   39c30:	beq	39c00 <sendto_server+0x94>
   39c34:	ldr	r1, [r6, #36]	; 0x24
   39c38:	cmp	r0, r1
   39c3c:	bne	39c00 <sendto_server+0x94>
   39c40:	b	39c1c <sendto_server+0xb0>
   39c44:	add	r0, sp, #24
   39c48:	bl	e00c <rb_linebuf_donebuf@plt>
   39c4c:	sub	sp, fp, #24
   39c50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39c54:	.word	0x00020e30

00039c58 <linebuf_put_msg>:
   39c58:	movw	r2, #511	; 0x1ff
   39c5c:	str	r2, [r1]
   39c60:	b	e45c <rb_linebuf_put@plt>

00039c64 <sendto_channel_flags>:
   39c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39c68:	add	fp, sp, #28
   39c6c:	sub	sp, sp, #988	; 0x3dc
   39c70:	sub	sp, sp, #1024	; 0x400
   39c74:	mov	r8, r3
   39c78:	mov	sl, r2
   39c7c:	mov	r6, r1
   39c80:	mov	r4, r0
   39c84:	ldr	r0, [pc, #684]	; 39f38 <sendto_channel_flags+0x2d4>
   39c88:	add	r0, pc, r0
   39c8c:	vld1.64	{d16-d17}, [r0]!
   39c90:	add	r1, sp, #16
   39c94:	vst1.64	{d16-d17}, [r1]!
   39c98:	ldr	r0, [r0]
   39c9c:	str	r0, [r1]
   39ca0:	sub	r9, fp, #64	; 0x40
   39ca4:	mov	r0, r9
   39ca8:	bl	d7a8 <rb_linebuf_newbuf@plt>
   39cac:	ldr	r1, [pc, #648]	; 39f3c <sendto_channel_flags+0x2d8>
   39cb0:	ldr	r1, [pc, r1]
   39cb4:	ldr	r0, [r1]
   39cb8:	add	r0, r0, #1
   39cbc:	str	r0, [r1]
   39cc0:	sub	r0, fp, #328	; 0x148
   39cc4:	mov	r1, sl
   39cc8:	bl	39290 <build_msgbuf_tags>
   39ccc:	add	r3, fp, #12
   39cd0:	str	r3, [fp, #-36]	; 0xffffffdc
   39cd4:	ldr	r2, [fp, #8]
   39cd8:	ldr	r7, [pc, #608]	; 39f40 <sendto_channel_flags+0x2dc>
   39cdc:	add	r7, pc, r7
   39ce0:	mov	r0, r7
   39ce4:	mov	r1, #512	; 0x200
   39ce8:	bl	e450 <vsnprintf@plt>
   39cec:	mov	r5, sl
   39cf0:	ldrb	r0, [r5, #396]!	; 0x18c
   39cf4:	str	r7, [sp]
   39cf8:	sub	r7, r5, #308	; 0x134
   39cfc:	cmp	r0, #0
   39d00:	mov	r3, r5
   39d04:	moveq	r3, r7
   39d08:	ldr	r2, [pc, #564]	; 39f44 <sendto_channel_flags+0x2e0>
   39d0c:	add	r2, pc, r2
   39d10:	mov	r0, r9
   39d14:	mov	r1, #0
   39d18:	bl	39f60 <linebuf_put_msgf>
   39d1c:	movw	r0, #65220	; 0xfec4
   39d20:	movt	r0, #65535	; 0xffff
   39d24:	ldrh	r0, [r5, r0]
   39d28:	cmp	r0, #64	; 0x40
   39d2c:	bne	39d50 <sendto_channel_flags+0xec>
   39d30:	ldr	r0, [sl, #24]
   39d34:	ldr	r1, [pc, #528]	; 39f4c <sendto_channel_flags+0x2e8>
   39d38:	add	r1, pc, r1
   39d3c:	ldr	r3, [pc, #524]	; 39f50 <sendto_channel_flags+0x2ec>
   39d40:	add	r3, pc, r3
   39d44:	cmp	r0, #0
   39d48:	moveq	r3, r1
   39d4c:	b	39d58 <sendto_channel_flags+0xf4>
   39d50:	ldr	r3, [pc, #496]	; 39f48 <sendto_channel_flags+0x2e4>
   39d54:	add	r3, pc, r3
   39d58:	add	r0, sl, #163	; 0xa3
   39d5c:	add	r1, sl, #152	; 0x98
   39d60:	str	r7, [sp]
   39d64:	str	r1, [sp, #4]
   39d68:	str	r0, [sp, #8]
   39d6c:	add	r0, sp, #36	; 0x24
   39d70:	sub	r1, fp, #328	; 0x148
   39d74:	add	r2, sp, #16
   39d78:	bl	d6b8 <msgbuf_cache_initf@plt>
   39d7c:	ldr	r8, [r8, #124]	; 0x7c
   39d80:	cmp	r8, #0
   39d84:	ldr	r5, [pc, #456]	; 39f54 <sendto_channel_flags+0x2f0>
   39d88:	ldr	r5, [pc, r5]
   39d8c:	beq	39eb8 <sendto_channel_flags+0x254>
   39d90:	add	r9, sl, #64	; 0x40
   39d94:	b	39dc4 <sendto_channel_flags+0x160>
   39d98:	ldr	r0, [r7, #432]	; 0x1b0
   39d9c:	cmp	r0, #0
   39da0:	beq	39eb0 <sendto_channel_flags+0x24c>
   39da4:	ldr	r1, [r0, #296]	; 0x128
   39da8:	add	r0, sp, #36	; 0x24
   39dac:	bl	e540 <msgbuf_cache_get@plt>
   39db0:	mov	r1, r0
   39db4:	mov	r0, r7
   39db8:	bl	39344 <_send_linebuf>
   39dbc:	cmp	r8, #0
   39dc0:	beq	39eb8 <sendto_channel_flags+0x254>
   39dc4:	ldr	r0, [r9]
   39dc8:	ands	r1, r0, #8192	; 0x2000
   39dcc:	ldr	r0, [r8]
   39dd0:	ldr	r8, [r8, #8]
   39dd4:	ldr	r7, [r0, #40]	; 0x28
   39dd8:	beq	39de8 <sendto_channel_flags+0x184>
   39ddc:	ldrh	r2, [sl, #80]	; 0x50
   39de0:	cmp	r2, #64	; 0x40
   39de4:	beq	39e08 <sendto_channel_flags+0x1a4>
   39de8:	ldr	r2, [r7, #36]	; 0x24
   39dec:	cmp	r2, r4
   39df0:	beq	39dbc <sendto_channel_flags+0x158>
   39df4:	ldr	r2, [r2, #64]	; 0x40
   39df8:	ands	r2, r2, #16384	; 0x4000
   39dfc:	bne	39dbc <sendto_channel_flags+0x158>
   39e00:	cmp	r1, #0
   39e04:	beq	39e18 <sendto_channel_flags+0x1b4>
   39e08:	cmp	r7, r4
   39e0c:	ldrheq	r1, [sl, #80]	; 0x50
   39e10:	cmpeq	r1, #64	; 0x40
   39e14:	beq	39dbc <sendto_channel_flags+0x158>
   39e18:	cmp	r6, #0
   39e1c:	beq	39e2c <sendto_channel_flags+0x1c8>
   39e20:	ldr	r0, [r0, #44]	; 0x2c
   39e24:	tst	r0, r6
   39e28:	beq	39dbc <sendto_channel_flags+0x158>
   39e2c:	ldrb	r0, [r7, #56]	; 0x38
   39e30:	tst	r0, #128	; 0x80
   39e34:	bne	39dbc <sendto_channel_flags+0x158>
   39e38:	ldrb	r0, [r7, #65]	; 0x41
   39e3c:	tst	r0, #32
   39e40:	beq	39e50 <sendto_channel_flags+0x1ec>
   39e44:	ldrh	r0, [r7, #80]	; 0x50
   39e48:	cmp	r0, #64	; 0x40
   39e4c:	beq	39d98 <sendto_channel_flags+0x134>
   39e50:	cmp	r6, #0
   39e54:	beq	39e78 <sendto_channel_flags+0x214>
   39e58:	ldr	r0, [pc, #248]	; 39f58 <sendto_channel_flags+0x2f4>
   39e5c:	ldr	r0, [pc, r0]
   39e60:	ldr	r0, [r0]
   39e64:	ldr	r1, [r7, #36]	; 0x24
   39e68:	ldr	r1, [r1, #432]	; 0x1b0
   39e6c:	ldr	r1, [r1, #296]	; 0x128
   39e70:	tst	r0, r1
   39e74:	beq	39dbc <sendto_channel_flags+0x158>
   39e78:	ldr	r0, [r5]
   39e7c:	ldr	r1, [r7, #36]	; 0x24
   39e80:	ldr	r1, [r1, #84]	; 0x54
   39e84:	cmp	r1, r0
   39e88:	beq	39dbc <sendto_channel_flags+0x158>
   39e8c:	mov	r0, r7
   39e90:	sub	r1, fp, #64	; 0x40
   39e94:	bl	39fac <send_linebuf_remote>
   39e98:	ldr	r0, [r7, #36]	; 0x24
   39e9c:	ldr	r1, [r5]
   39ea0:	str	r1, [r0, #84]	; 0x54
   39ea4:	cmp	r8, #0
   39ea8:	bne	39dc4 <sendto_channel_flags+0x160>
   39eac:	b	39eb8 <sendto_channel_flags+0x254>
   39eb0:	mov	r1, #0
   39eb4:	b	39da8 <sendto_channel_flags+0x144>
   39eb8:	ldrb	r0, [sl, #65]	; 0x41
   39ebc:	tst	r0, #32
   39ec0:	beq	39f20 <sendto_channel_flags+0x2bc>
   39ec4:	ldrh	r0, [sl, #80]	; 0x50
   39ec8:	cmp	r0, #64	; 0x40
   39ecc:	bne	39f20 <sendto_channel_flags+0x2bc>
   39ed0:	ldr	r0, [pc, #132]	; 39f5c <sendto_channel_flags+0x2f8>
   39ed4:	ldr	r0, [pc, r0]
   39ed8:	ldr	r0, [r0]
   39edc:	ldr	r1, [sl, #432]	; 0x1b0
   39ee0:	ldr	r1, [r1, #296]	; 0x128
   39ee4:	and	r1, r0, r1
   39ee8:	cmp	r1, r0
   39eec:	bne	39f20 <sendto_channel_flags+0x2bc>
   39ef0:	ldrh	r0, [r4, #80]	; 0x50
   39ef4:	mov	r1, #0
   39ef8:	cmp	r0, #64	; 0x40
   39efc:	bne	39f0c <sendto_channel_flags+0x2a8>
   39f00:	ldr	r0, [r4, #432]	; 0x1b0
   39f04:	cmp	r0, #0
   39f08:	ldrne	r1, [r0, #296]	; 0x128
   39f0c:	add	r0, sp, #36	; 0x24
   39f10:	bl	e540 <msgbuf_cache_get@plt>
   39f14:	mov	r1, r0
   39f18:	mov	r0, r4
   39f1c:	bl	39344 <_send_linebuf>
   39f20:	sub	r0, fp, #64	; 0x40
   39f24:	bl	e00c <rb_linebuf_donebuf@plt>
   39f28:	add	r0, sp, #36	; 0x24
   39f2c:	bl	de80 <msgbuf_cache_free@plt>
   39f30:	sub	sp, fp, #28
   39f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39f38:	.word	0x00020218
   39f3c:	.word	0x00020bbc
   39f40:	.word	0x00031888
   39f44:	.word	0x0000bdeb
   39f48:	.word	0x0000d905
   39f4c:	.word	0x0000d921
   39f50:	.word	0x0000d908
   39f54:	.word	0x00020ae4
   39f58:	.word	0x00020b08
   39f5c:	.word	0x00020c20

00039f60 <linebuf_put_msgf>:
   39f60:	sub	sp, sp, #4
   39f64:	push	{fp, lr}
   39f68:	mov	fp, sp
   39f6c:	sub	sp, sp, #28
   39f70:	str	r3, [fp, #8]
   39f74:	add	r3, fp, #8
   39f78:	str	r3, [fp, #-4]
   39f7c:	str	r1, [sp, #20]
   39f80:	sub	r1, fp, #4
   39f84:	str	r1, [sp, #16]
   39f88:	mov	r1, #0
   39f8c:	str	r1, [sp, #12]
   39f90:	stmib	sp, {r1, r2}
   39f94:	add	r1, sp, #4
   39f98:	bl	39c58 <linebuf_put_msg>
   39f9c:	mov	sp, fp
   39fa0:	pop	{fp, lr}
   39fa4:	add	sp, sp, #4
   39fa8:	bx	lr

00039fac <send_linebuf_remote>:
   39fac:	ldr	r2, [r0, #36]	; 0x24
   39fb0:	cmp	r2, #0
   39fb4:	movne	r0, r2
   39fb8:	b	39344 <_send_linebuf>

00039fbc <sendto_channel_opmod>:
   39fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39fc0:	add	fp, sp, #28
   39fc4:	sub	sp, sp, #1020	; 0x3fc
   39fc8:	sub	sp, sp, #1024	; 0x400
   39fcc:	mov	r8, r3
   39fd0:	mov	r7, r2
   39fd4:	mov	r5, r1
   39fd8:	mov	r4, r0
   39fdc:	vmov.i32	q8, #0	; 0x00000000
   39fe0:	add	r0, sp, #24
   39fe4:	vst1.64	{d16-d17}, [r0]!
   39fe8:	mov	r1, #0
   39fec:	str	r1, [r0]
   39ff0:	ldr	r9, [fp, #8]
   39ff4:	str	r9, [sp, #28]
   39ff8:	sub	r0, fp, #60	; 0x3c
   39ffc:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3a000:	sub	r0, fp, #88	; 0x58
   3a004:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3a008:	sub	r0, fp, #352	; 0x160
   3a00c:	mov	r1, r5
   3a010:	bl	39290 <build_msgbuf_tags>
   3a014:	ldr	r1, [pc, #776]	; 3a324 <sendto_channel_opmod+0x368>
   3a018:	ldr	r1, [pc, r1]
   3a01c:	ldr	r0, [r1]
   3a020:	add	r0, r0, #1
   3a024:	str	r0, [r1]
   3a028:	ldr	r0, [pc, #760]	; 3a328 <sendto_channel_opmod+0x36c>
   3a02c:	ldr	r0, [pc, r0]
   3a030:	ldr	r0, [r0, #92]	; 0x5c
   3a034:	ldr	r1, [pc, #752]	; 3a32c <sendto_channel_opmod+0x370>
   3a038:	add	r1, pc, r1
   3a03c:	ldr	sl, [pc, #748]	; 3a330 <sendto_channel_opmod+0x374>
   3a040:	add	sl, pc, sl
   3a044:	cmp	r0, #0
   3a048:	moveq	sl, r1
   3a04c:	add	r6, r5, #88	; 0x58
   3a050:	ldrh	r0, [r5, #80]	; 0x50
   3a054:	cmp	r0, #32
   3a058:	bne	3a080 <sendto_channel_opmod+0xc4>
   3a05c:	ldr	r0, [r7, #236]	; 0xec
   3a060:	stm	sp, {r6, r8, sl}
   3a064:	str	r0, [sp, #12]
   3a068:	add	r0, sp, #44	; 0x2c
   3a06c:	sub	r1, fp, #352	; 0x160
   3a070:	add	r2, sp, #24
   3a074:	ldr	r3, [pc, #696]	; 3a334 <sendto_channel_opmod+0x378>
   3a078:	add	r3, pc, r3
   3a07c:	b	3a0b4 <sendto_channel_opmod+0xf8>
   3a080:	ldr	r0, [r7, #236]	; 0xec
   3a084:	add	r1, r5, #163	; 0xa3
   3a088:	add	r2, r5, #152	; 0x98
   3a08c:	str	r6, [sp]
   3a090:	str	r2, [sp, #4]
   3a094:	add	r2, sp, #8
   3a098:	stm	r2, {r1, r8, sl}
   3a09c:	str	r0, [sp, #20]
   3a0a0:	add	r0, sp, #44	; 0x2c
   3a0a4:	sub	r1, fp, #352	; 0x160
   3a0a8:	add	r2, sp, #24
   3a0ac:	ldr	r3, [pc, #644]	; 3a338 <sendto_channel_opmod+0x37c>
   3a0b0:	add	r3, pc, r3
   3a0b4:	bl	d6b8 <msgbuf_cache_initf@plt>
   3a0b8:	ldrb	r0, [r7, #12]
   3a0bc:	tst	r0, #4
   3a0c0:	bne	3a0f4 <sendto_channel_opmod+0x138>
   3a0c4:	ldr	r3, [r5, #32]
   3a0c8:	ldrb	r0, [r3, #396]!	; 0x18c
   3a0cc:	ldr	r1, [r7, #236]	; 0xec
   3a0d0:	stm	sp, {r1, r6}
   3a0d4:	str	r1, [sp, #8]
   3a0d8:	cmp	r0, #0
   3a0dc:	subeq	r3, r3, #308	; 0x134
   3a0e0:	sub	r0, fp, #60	; 0x3c
   3a0e4:	add	r1, sp, #24
   3a0e8:	ldr	r2, [pc, #592]	; 3a340 <sendto_channel_opmod+0x384>
   3a0ec:	add	r2, pc, r2
   3a0f0:	b	3a124 <sendto_channel_opmod+0x168>
   3a0f4:	mov	r3, r5
   3a0f8:	ldrb	r0, [r3, #396]!	; 0x18c
   3a0fc:	ldr	r1, [r7, #236]	; 0xec
   3a100:	stm	sp, {r8, sl}
   3a104:	str	r1, [sp, #8]
   3a108:	str	r9, [sp, #12]
   3a10c:	cmp	r0, #0
   3a110:	moveq	r3, r6
   3a114:	sub	r0, fp, #60	; 0x3c
   3a118:	add	r1, sp, #24
   3a11c:	ldr	r2, [pc, #536]	; 3a33c <sendto_channel_opmod+0x380>
   3a120:	add	r2, pc, r2
   3a124:	bl	39f60 <linebuf_put_msgf>
   3a128:	ldr	sl, [pc, #532]	; 3a344 <sendto_channel_opmod+0x388>
   3a12c:	ldr	sl, [pc, sl]
   3a130:	mov	r3, r5
   3a134:	ldrb	r0, [r3, #396]!	; 0x18c
   3a138:	ldr	r1, [r7, #236]	; 0xec
   3a13c:	str	r8, [sp]
   3a140:	str	r1, [sp, #4]
   3a144:	cmp	r0, #0
   3a148:	moveq	r3, r6
   3a14c:	sub	r0, fp, #88	; 0x58
   3a150:	add	r1, sp, #24
   3a154:	ldr	r2, [pc, #492]	; 3a348 <sendto_channel_opmod+0x38c>
   3a158:	add	r2, pc, r2
   3a15c:	bl	39f60 <linebuf_put_msgf>
   3a160:	ldr	r9, [r7, #124]	; 0x7c
   3a164:	cmp	r9, #0
   3a168:	beq	3a29c <sendto_channel_opmod+0x2e0>
   3a16c:	add	r8, r5, #64	; 0x40
   3a170:	ldr	r6, [pc, #468]	; 3a34c <sendto_channel_opmod+0x390>
   3a174:	ldr	r6, [pc, r6]
   3a178:	b	3a1a8 <sendto_channel_opmod+0x1ec>
   3a17c:	ldr	r0, [r7, #432]	; 0x1b0
   3a180:	cmp	r0, #0
   3a184:	beq	3a294 <sendto_channel_opmod+0x2d8>
   3a188:	ldr	r1, [r0, #296]	; 0x128
   3a18c:	add	r0, sp, #44	; 0x2c
   3a190:	bl	e540 <msgbuf_cache_get@plt>
   3a194:	mov	r1, r0
   3a198:	mov	r0, r7
   3a19c:	bl	39344 <_send_linebuf>
   3a1a0:	cmp	r9, #0
   3a1a4:	beq	3a29c <sendto_channel_opmod+0x2e0>
   3a1a8:	ldr	r0, [r8]
   3a1ac:	ands	r1, r0, #8192	; 0x2000
   3a1b0:	ldr	r0, [r9]
   3a1b4:	ldr	r9, [r9, #8]
   3a1b8:	ldr	r7, [r0, #40]	; 0x28
   3a1bc:	beq	3a1cc <sendto_channel_opmod+0x210>
   3a1c0:	ldrh	r2, [r5, #80]	; 0x50
   3a1c4:	cmp	r2, #64	; 0x40
   3a1c8:	beq	3a1ec <sendto_channel_opmod+0x230>
   3a1cc:	ldr	r2, [r7, #36]	; 0x24
   3a1d0:	cmp	r2, r4
   3a1d4:	beq	3a1a0 <sendto_channel_opmod+0x1e4>
   3a1d8:	ldr	r2, [r2, #64]	; 0x40
   3a1dc:	ands	r2, r2, #16384	; 0x4000
   3a1e0:	bne	3a1a0 <sendto_channel_opmod+0x1e4>
   3a1e4:	cmp	r1, #0
   3a1e8:	beq	3a1fc <sendto_channel_opmod+0x240>
   3a1ec:	cmp	r7, r4
   3a1f0:	ldrheq	r1, [r5, #80]	; 0x50
   3a1f4:	cmpeq	r1, #64	; 0x40
   3a1f8:	beq	3a1a0 <sendto_channel_opmod+0x1e4>
   3a1fc:	ldrb	r0, [r0, #44]	; 0x2c
   3a200:	tst	r0, #2
   3a204:	beq	3a1a0 <sendto_channel_opmod+0x1e4>
   3a208:	ldrb	r0, [r7, #56]	; 0x38
   3a20c:	tst	r0, #128	; 0x80
   3a210:	bne	3a1a0 <sendto_channel_opmod+0x1e4>
   3a214:	ldrb	r0, [r7, #65]	; 0x41
   3a218:	tst	r0, #32
   3a21c:	beq	3a22c <sendto_channel_opmod+0x270>
   3a220:	ldrh	r0, [r7, #80]	; 0x50
   3a224:	cmp	r0, #64	; 0x40
   3a228:	beq	3a17c <sendto_channel_opmod+0x1c0>
   3a22c:	ldr	r1, [r7, #36]	; 0x24
   3a230:	ldr	r0, [r1, #432]	; 0x1b0
   3a234:	ldr	r0, [r0, #296]	; 0x128
   3a238:	ldr	r2, [r6]
   3a23c:	tst	r2, r0
   3a240:	beq	3a1a0 <sendto_channel_opmod+0x1e4>
   3a244:	ldr	r1, [r1, #84]	; 0x54
   3a248:	ldr	r2, [sl]
   3a24c:	cmp	r1, r2
   3a250:	beq	3a1a0 <sendto_channel_opmod+0x1e4>
   3a254:	ldr	r1, [pc, #244]	; 3a350 <sendto_channel_opmod+0x394>
   3a258:	ldr	r1, [pc, r1]
   3a25c:	ldr	r1, [r1]
   3a260:	and	r0, r1, r0
   3a264:	cmp	r0, r1
   3a268:	sub	r1, fp, #60	; 0x3c
   3a26c:	sub	r0, fp, #88	; 0x58
   3a270:	moveq	r1, r0
   3a274:	mov	r0, r7
   3a278:	bl	39fac <send_linebuf_remote>
   3a27c:	ldr	r0, [r7, #36]	; 0x24
   3a280:	ldr	r1, [sl]
   3a284:	str	r1, [r0, #84]	; 0x54
   3a288:	cmp	r9, #0
   3a28c:	bne	3a1a8 <sendto_channel_opmod+0x1ec>
   3a290:	b	3a29c <sendto_channel_opmod+0x2e0>
   3a294:	mov	r1, #0
   3a298:	b	3a18c <sendto_channel_opmod+0x1d0>
   3a29c:	ldrb	r0, [r5, #65]	; 0x41
   3a2a0:	tst	r0, #32
   3a2a4:	beq	3a304 <sendto_channel_opmod+0x348>
   3a2a8:	ldrh	r0, [r5, #80]	; 0x50
   3a2ac:	cmp	r0, #64	; 0x40
   3a2b0:	bne	3a304 <sendto_channel_opmod+0x348>
   3a2b4:	ldr	r0, [pc, #152]	; 3a354 <sendto_channel_opmod+0x398>
   3a2b8:	ldr	r0, [pc, r0]
   3a2bc:	ldr	r0, [r0]
   3a2c0:	ldr	r1, [r5, #432]	; 0x1b0
   3a2c4:	ldr	r1, [r1, #296]	; 0x128
   3a2c8:	and	r1, r0, r1
   3a2cc:	cmp	r1, r0
   3a2d0:	bne	3a304 <sendto_channel_opmod+0x348>
   3a2d4:	ldrh	r0, [r4, #80]	; 0x50
   3a2d8:	mov	r1, #0
   3a2dc:	cmp	r0, #64	; 0x40
   3a2e0:	bne	3a2f0 <sendto_channel_opmod+0x334>
   3a2e4:	ldr	r0, [r4, #432]	; 0x1b0
   3a2e8:	cmp	r0, #0
   3a2ec:	ldrne	r1, [r0, #296]	; 0x128
   3a2f0:	add	r0, sp, #44	; 0x2c
   3a2f4:	bl	e540 <msgbuf_cache_get@plt>
   3a2f8:	mov	r1, r0
   3a2fc:	mov	r0, r4
   3a300:	bl	39344 <_send_linebuf>
   3a304:	sub	r0, fp, #60	; 0x3c
   3a308:	bl	e00c <rb_linebuf_donebuf@plt>
   3a30c:	sub	r0, fp, #88	; 0x58
   3a310:	bl	e00c <rb_linebuf_donebuf@plt>
   3a314:	add	r0, sp, #44	; 0x2c
   3a318:	bl	de80 <msgbuf_cache_free@plt>
   3a31c:	sub	sp, fp, #28
   3a320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a324:	.word	0x00020854
   3a328:	.word	0x00020aec
   3a32c:	.word	0x0000bb1d
   3a330:	.word	0x00009117
   3a334:	.word	0x0000d5e8
   3a338:	.word	0x0000d5be
   3a33c:	.word	0x0000d540
   3a340:	.word	0x0000d596
   3a344:	.word	0x00020740
   3a348:	.word	0x0000d543
   3a34c:	.word	0x000207f0
   3a350:	.word	0x00020660
   3a354:	.word	0x0002083c

0003a358 <_sendto_channel_local>:
   3a358:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a35c:	add	fp, sp, #24
   3a360:	sub	sp, sp, #936	; 0x3a8
   3a364:	sub	sp, sp, #1024	; 0x400
   3a368:	mov	r6, r3
   3a36c:	mov	r4, r2
   3a370:	mov	r5, r1
   3a374:	mov	r1, r0
   3a378:	mov	r0, #0
   3a37c:	str	r0, [sp, #16]
   3a380:	ldr	r2, [fp, #12]
   3a384:	str	r2, [sp, #12]
   3a388:	str	r0, [sp, #8]
   3a38c:	ldr	r2, [fp, #8]
   3a390:	stm	sp, {r0, r2}
   3a394:	sub	r7, fp, #288	; 0x120
   3a398:	mov	r0, r7
   3a39c:	bl	39290 <build_msgbuf_tags>
   3a3a0:	add	r0, sp, #20
   3a3a4:	mov	r2, sp
   3a3a8:	mov	r1, r7
   3a3ac:	bl	e798 <msgbuf_cache_init@plt>
   3a3b0:	ldr	r6, [r6, #136]	; 0x88
   3a3b4:	cmp	r6, #0
   3a3b8:	beq	3a45c <_sendto_channel_local+0x104>
   3a3bc:	add	r8, sp, #20
   3a3c0:	b	3a3e0 <_sendto_channel_local+0x88>
   3a3c4:	mov	r0, r8
   3a3c8:	bl	e540 <msgbuf_cache_get@plt>
   3a3cc:	mov	r1, r0
   3a3d0:	mov	r0, r7
   3a3d4:	bl	39344 <_send_linebuf>
   3a3d8:	cmp	r6, #0
   3a3dc:	beq	3a45c <_sendto_channel_local+0x104>
   3a3e0:	ldr	r0, [r6]
   3a3e4:	ldr	r6, [r6, #8]
   3a3e8:	ldr	r7, [r0, #40]	; 0x28
   3a3ec:	ldrb	r1, [r7, #65]	; 0x41
   3a3f0:	tst	r1, #64	; 0x40
   3a3f4:	bne	3a3d8 <_sendto_channel_local+0x80>
   3a3f8:	cmp	r5, #0
   3a3fc:	beq	3a40c <_sendto_channel_local+0xb4>
   3a400:	ldr	r0, [r0, #44]	; 0x2c
   3a404:	tst	r0, r5
   3a408:	beq	3a3d8 <_sendto_channel_local+0x80>
   3a40c:	cmp	r4, #0
   3a410:	beq	3a43c <_sendto_channel_local+0xe4>
   3a414:	ldr	r0, [r7, #24]
   3a418:	cmp	r0, #0
   3a41c:	beq	3a3d8 <_sendto_channel_local+0x80>
   3a420:	ldr	r0, [r0, #36]	; 0x24
   3a424:	cmp	r0, #0
   3a428:	beq	3a3d8 <_sendto_channel_local+0x80>
   3a42c:	mov	r1, r4
   3a430:	bl	e594 <privilegeset_in_set@plt>
   3a434:	cmp	r0, #0
   3a438:	beq	3a3d8 <_sendto_channel_local+0x80>
   3a43c:	ldrh	r0, [r7, #80]	; 0x50
   3a440:	mov	r1, #0
   3a444:	cmp	r0, #64	; 0x40
   3a448:	bne	3a3c4 <_sendto_channel_local+0x6c>
   3a44c:	ldr	r0, [r7, #432]	; 0x1b0
   3a450:	cmp	r0, #0
   3a454:	ldrne	r1, [r0, #296]	; 0x128
   3a458:	b	3a3c4 <_sendto_channel_local+0x6c>
   3a45c:	add	r0, sp, #20
   3a460:	bl	de80 <msgbuf_cache_free@plt>
   3a464:	sub	sp, fp, #24
   3a468:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003a46c <sendto_channel_local_priv>:
   3a46c:	push	{fp, lr}
   3a470:	mov	fp, sp
   3a474:	sub	sp, sp, #16
   3a478:	add	ip, fp, #12
   3a47c:	str	ip, [fp, #-4]
   3a480:	sub	ip, fp, #4
   3a484:	str	ip, [sp, #4]
   3a488:	ldr	ip, [fp, #8]
   3a48c:	str	ip, [sp]
   3a490:	bl	cff8 <_sendto_channel_local@plt>
   3a494:	mov	sp, fp
   3a498:	pop	{fp, pc}

0003a49c <sendto_channel_local>:
   3a49c:	push	{fp, lr}
   3a4a0:	mov	fp, sp
   3a4a4:	sub	sp, sp, #16
   3a4a8:	mov	ip, r2
   3a4ac:	add	r2, fp, #8
   3a4b0:	str	r2, [fp, #-4]
   3a4b4:	sub	r2, fp, #4
   3a4b8:	str	r3, [sp]
   3a4bc:	str	r2, [sp, #4]
   3a4c0:	mov	r2, #0
   3a4c4:	mov	r3, ip
   3a4c8:	bl	cff8 <_sendto_channel_local@plt>
   3a4cc:	mov	sp, fp
   3a4d0:	pop	{fp, pc}

0003a4d4 <sendto_channel_local_with_capability>:
   3a4d4:	push	{fp, lr}
   3a4d8:	mov	fp, sp
   3a4dc:	sub	sp, sp, #24
   3a4e0:	mov	ip, r2
   3a4e4:	mov	r2, r1
   3a4e8:	add	r1, fp, #16
   3a4ec:	str	r1, [fp, #-4]
   3a4f0:	sub	r1, fp, #4
   3a4f4:	str	r1, [sp, #12]
   3a4f8:	ldr	r1, [fp, #12]
   3a4fc:	str	r1, [sp, #8]
   3a500:	ldr	r1, [fp, #8]
   3a504:	str	r1, [sp, #4]
   3a508:	str	r3, [sp]
   3a50c:	mov	r1, #0
   3a510:	mov	r3, ip
   3a514:	bl	3a520 <_sendto_channel_local_with_capability_butone>
   3a518:	mov	sp, fp
   3a51c:	pop	{fp, pc}

0003a520 <_sendto_channel_local_with_capability_butone>:
   3a520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a524:	add	fp, sp, #28
   3a528:	sub	sp, sp, #940	; 0x3ac
   3a52c:	sub	sp, sp, #1024	; 0x400
   3a530:	mov	r4, r3
   3a534:	mov	r9, r2
   3a538:	mov	r6, r1
   3a53c:	mov	r1, r0
   3a540:	mov	r0, #0
   3a544:	str	r0, [sp, #16]
   3a548:	ldr	r2, [fp, #20]
   3a54c:	str	r2, [sp, #12]
   3a550:	str	r0, [sp, #8]
   3a554:	ldr	r2, [fp, #16]
   3a558:	stm	sp, {r0, r2}
   3a55c:	sub	r7, fp, #296	; 0x128
   3a560:	mov	r0, r7
   3a564:	bl	39290 <build_msgbuf_tags>
   3a568:	add	r0, sp, #20
   3a56c:	mov	r2, sp
   3a570:	mov	r1, r7
   3a574:	bl	e798 <msgbuf_cache_init@plt>
   3a578:	ldr	r0, [fp, #12]
   3a57c:	ldr	r5, [r0, #136]	; 0x88
   3a580:	cmp	r5, #0
   3a584:	beq	3a614 <_sendto_channel_local_with_capability_butone+0xf4>
   3a588:	ldr	sl, [fp, #8]
   3a58c:	add	r8, sp, #20
   3a590:	b	3a5c4 <_sendto_channel_local_with_capability_butone+0xa4>
   3a594:	ldrh	r0, [r7, #80]	; 0x50
   3a598:	cmp	r0, #64	; 0x40
   3a59c:	movwne	r1, #0
   3a5a0:	cmp	r2, #0
   3a5a4:	moveq	r1, r2
   3a5a8:	mov	r0, r8
   3a5ac:	bl	e540 <msgbuf_cache_get@plt>
   3a5b0:	mov	r1, r0
   3a5b4:	mov	r0, r7
   3a5b8:	bl	39344 <_send_linebuf>
   3a5bc:	cmp	r5, #0
   3a5c0:	beq	3a614 <_sendto_channel_local_with_capability_butone+0xf4>
   3a5c4:	ldr	r0, [r5]
   3a5c8:	ldr	r5, [r5, #8]
   3a5cc:	ldr	r7, [r0, #40]	; 0x28
   3a5d0:	cmp	r7, r6
   3a5d4:	beq	3a5bc <_sendto_channel_local_with_capability_butone+0x9c>
   3a5d8:	ldrb	r1, [r7, #65]	; 0x41
   3a5dc:	tst	r1, #64	; 0x40
   3a5e0:	bne	3a5bc <_sendto_channel_local_with_capability_butone+0x9c>
   3a5e4:	ldr	r2, [r7, #432]	; 0x1b0
   3a5e8:	ldr	r1, [r2, #296]	; 0x128
   3a5ec:	and	r3, r1, r4
   3a5f0:	cmp	r3, r4
   3a5f4:	andseq	r3, r1, sl
   3a5f8:	bne	3a5bc <_sendto_channel_local_with_capability_butone+0x9c>
   3a5fc:	cmp	r9, #0
   3a600:	beq	3a594 <_sendto_channel_local_with_capability_butone+0x74>
   3a604:	ldr	r0, [r0, #44]	; 0x2c
   3a608:	tst	r0, r9
   3a60c:	bne	3a594 <_sendto_channel_local_with_capability_butone+0x74>
   3a610:	b	3a5bc <_sendto_channel_local_with_capability_butone+0x9c>
   3a614:	add	r0, sp, #20
   3a618:	bl	de80 <msgbuf_cache_free@plt>
   3a61c:	sub	sp, fp, #28
   3a620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a624 <sendto_channel_local_with_capability_butone>:
   3a624:	push	{fp, lr}
   3a628:	mov	fp, sp
   3a62c:	sub	sp, sp, #24
   3a630:	mov	ip, r2
   3a634:	mov	r2, r1
   3a638:	add	r1, fp, #16
   3a63c:	str	r1, [fp, #-4]
   3a640:	sub	r1, fp, #4
   3a644:	str	r1, [sp, #12]
   3a648:	ldr	r1, [fp, #12]
   3a64c:	str	r1, [sp, #8]
   3a650:	ldr	r1, [fp, #8]
   3a654:	str	r1, [sp, #4]
   3a658:	str	r3, [sp]
   3a65c:	mov	r1, r0
   3a660:	mov	r3, ip
   3a664:	bl	3a520 <_sendto_channel_local_with_capability_butone>
   3a668:	mov	sp, fp
   3a66c:	pop	{fp, pc}

0003a670 <sendto_channel_local_butone>:
   3a670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a674:	add	fp, sp, #24
   3a678:	sub	sp, sp, #1968	; 0x7b0
   3a67c:	mov	r6, r2
   3a680:	mov	r4, r1
   3a684:	mov	r5, r0
   3a688:	mov	r0, #0
   3a68c:	str	r0, [sp, #20]
   3a690:	sub	r1, fp, #28
   3a694:	str	r1, [sp, #16]
   3a698:	str	r0, [sp, #12]
   3a69c:	stmib	sp, {r0, r3}
   3a6a0:	sub	r7, fp, #292	; 0x124
   3a6a4:	mov	r0, r7
   3a6a8:	mov	r1, r5
   3a6ac:	bl	39290 <build_msgbuf_tags>
   3a6b0:	add	r0, fp, #8
   3a6b4:	str	r0, [fp, #-28]	; 0xffffffe4
   3a6b8:	add	r0, sp, #24
   3a6bc:	add	r2, sp, #4
   3a6c0:	mov	r1, r7
   3a6c4:	bl	e798 <msgbuf_cache_init@plt>
   3a6c8:	ldr	r6, [r6, #136]	; 0x88
   3a6cc:	cmp	r6, #0
   3a6d0:	beq	3a74c <sendto_channel_local_butone+0xdc>
   3a6d4:	add	r8, sp, #24
   3a6d8:	b	3a6f8 <sendto_channel_local_butone+0x88>
   3a6dc:	mov	r0, r8
   3a6e0:	bl	e540 <msgbuf_cache_get@plt>
   3a6e4:	mov	r1, r0
   3a6e8:	mov	r0, r7
   3a6ec:	bl	39344 <_send_linebuf>
   3a6f0:	cmp	r6, #0
   3a6f4:	beq	3a74c <sendto_channel_local_butone+0xdc>
   3a6f8:	ldr	r0, [r6]
   3a6fc:	ldr	r6, [r6, #8]
   3a700:	ldr	r7, [r0, #40]	; 0x28
   3a704:	cmp	r7, r5
   3a708:	beq	3a6f0 <sendto_channel_local_butone+0x80>
   3a70c:	ldrb	r1, [r7, #65]	; 0x41
   3a710:	tst	r1, #64	; 0x40
   3a714:	bne	3a6f0 <sendto_channel_local_butone+0x80>
   3a718:	cmp	r4, #0
   3a71c:	beq	3a72c <sendto_channel_local_butone+0xbc>
   3a720:	ldr	r0, [r0, #44]	; 0x2c
   3a724:	tst	r0, r4
   3a728:	beq	3a6f0 <sendto_channel_local_butone+0x80>
   3a72c:	ldrh	r0, [r7, #80]	; 0x50
   3a730:	mov	r1, #0
   3a734:	cmp	r0, #64	; 0x40
   3a738:	bne	3a6dc <sendto_channel_local_butone+0x6c>
   3a73c:	ldr	r0, [r7, #432]	; 0x1b0
   3a740:	cmp	r0, #0
   3a744:	ldrne	r1, [r0, #296]	; 0x128
   3a748:	b	3a6dc <sendto_channel_local_butone+0x6c>
   3a74c:	add	r0, sp, #24
   3a750:	bl	de80 <msgbuf_cache_free@plt>
   3a754:	sub	sp, fp, #24
   3a758:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003a75c <sendto_common_channels_local>:
   3a75c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a760:	add	fp, sp, #28
   3a764:	sub	sp, sp, #948	; 0x3b4
   3a768:	sub	sp, sp, #1024	; 0x400
   3a76c:	mov	sl, r2
   3a770:	mov	r6, r1
   3a774:	mov	r4, r0
   3a778:	mov	r0, #0
   3a77c:	str	r0, [sp, #20]
   3a780:	sub	r1, fp, #36	; 0x24
   3a784:	str	r1, [sp, #16]
   3a788:	str	r0, [sp, #12]
   3a78c:	stmib	sp, {r0, r3}
   3a790:	sub	r7, fp, #300	; 0x12c
   3a794:	mov	r0, r7
   3a798:	mov	r1, r4
   3a79c:	bl	39290 <build_msgbuf_tags>
   3a7a0:	add	r0, fp, #8
   3a7a4:	str	r0, [fp, #-36]	; 0xffffffdc
   3a7a8:	add	r0, sp, #24
   3a7ac:	add	r2, sp, #4
   3a7b0:	mov	r1, r7
   3a7b4:	bl	e798 <msgbuf_cache_init@plt>
   3a7b8:	ldr	r7, [pc, #312]	; 3a8f8 <sendto_common_channels_local+0x19c>
   3a7bc:	ldr	r7, [pc, r7]
   3a7c0:	ldr	r0, [r7]
   3a7c4:	add	r0, r0, #1
   3a7c8:	str	r0, [r7]
   3a7cc:	str	r4, [sp]
   3a7d0:	ldr	r0, [r4, #24]
   3a7d4:	ldr	r5, [r0]
   3a7d8:	cmp	r5, #0
   3a7dc:	beq	3a87c <sendto_common_channels_local+0x120>
   3a7e0:	ldr	r0, [r5]
   3a7e4:	ldr	r5, [r5, #8]
   3a7e8:	ldr	r0, [r0, #36]	; 0x24
   3a7ec:	ldr	r8, [r0, #136]	; 0x88
   3a7f0:	cmp	r8, #0
   3a7f4:	beq	3a7d8 <sendto_common_channels_local+0x7c>
   3a7f8:	ldr	r0, [r8]
   3a7fc:	ldr	r8, [r8, #8]
   3a800:	ldr	r9, [r0, #40]	; 0x28
   3a804:	ldrb	r0, [r9, #65]	; 0x41
   3a808:	tst	r0, #64	; 0x40
   3a80c:	bne	3a7f0 <sendto_common_channels_local+0x94>
   3a810:	ldr	r0, [r9, #84]	; 0x54
   3a814:	ldr	r2, [r7]
   3a818:	cmp	r0, r2
   3a81c:	beq	3a7f0 <sendto_common_channels_local+0x94>
   3a820:	ldr	r0, [r9, #432]	; 0x1b0
   3a824:	ldr	r1, [r0, #296]	; 0x128
   3a828:	and	r3, r1, r6
   3a82c:	cmp	r3, r6
   3a830:	andseq	r3, r1, sl
   3a834:	bne	3a7f0 <sendto_common_channels_local+0x94>
   3a838:	str	r2, [r9, #84]	; 0x54
   3a83c:	ldrh	r2, [r9, #80]	; 0x50
   3a840:	cmp	r2, #64	; 0x40
   3a844:	movwne	r1, #0
   3a848:	cmp	r0, #0
   3a84c:	moveq	r1, r0
   3a850:	ldr	r4, [r9, #36]	; 0x24
   3a854:	add	r0, sp, #24
   3a858:	bl	e540 <msgbuf_cache_get@plt>
   3a85c:	mov	r1, r0
   3a860:	cmp	r4, #0
   3a864:	moveq	r4, r9
   3a868:	mov	r0, r4
   3a86c:	bl	39344 <_send_linebuf>
   3a870:	cmp	r8, #0
   3a874:	bne	3a7f8 <sendto_common_channels_local+0x9c>
   3a878:	b	3a7d8 <sendto_common_channels_local+0x7c>
   3a87c:	ldr	r5, [sp]
   3a880:	ldrb	r0, [r5, #65]	; 0x41
   3a884:	tst	r0, #32
   3a888:	beq	3a8e8 <sendto_common_channels_local+0x18c>
   3a88c:	ldr	r0, [r5, #84]	; 0x54
   3a890:	ldr	r1, [r7]
   3a894:	cmp	r0, r1
   3a898:	beq	3a8e8 <sendto_common_channels_local+0x18c>
   3a89c:	ldr	r0, [r5, #432]	; 0x1b0
   3a8a0:	ldr	r1, [r0, #296]	; 0x128
   3a8a4:	and	r2, r1, r6
   3a8a8:	cmp	r2, r6
   3a8ac:	andseq	r2, r1, sl
   3a8b0:	bne	3a8e8 <sendto_common_channels_local+0x18c>
   3a8b4:	ldrh	r2, [r5, #80]	; 0x50
   3a8b8:	cmp	r2, #64	; 0x40
   3a8bc:	movwne	r1, #0
   3a8c0:	cmp	r0, #0
   3a8c4:	moveq	r1, r0
   3a8c8:	ldr	r4, [r5, #36]	; 0x24
   3a8cc:	add	r0, sp, #24
   3a8d0:	bl	e540 <msgbuf_cache_get@plt>
   3a8d4:	mov	r1, r0
   3a8d8:	cmp	r4, #0
   3a8dc:	moveq	r4, r5
   3a8e0:	mov	r0, r4
   3a8e4:	bl	39344 <_send_linebuf>
   3a8e8:	add	r0, sp, #24
   3a8ec:	bl	de80 <msgbuf_cache_free@plt>
   3a8f0:	sub	sp, fp, #28
   3a8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a8f8:	.word	0x000200b0

0003a8fc <sendto_common_channels_local_butone>:
   3a8fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a900:	add	fp, sp, #28
   3a904:	sub	sp, sp, #948	; 0x3b4
   3a908:	sub	sp, sp, #1024	; 0x400
   3a90c:	mov	r9, r2
   3a910:	mov	r5, r1
   3a914:	mov	r7, r0
   3a918:	mov	r0, #0
   3a91c:	str	r0, [sp, #20]
   3a920:	sub	r1, fp, #36	; 0x24
   3a924:	str	r1, [sp, #16]
   3a928:	str	r0, [sp, #12]
   3a92c:	stmib	sp, {r0, r3}
   3a930:	sub	r6, fp, #300	; 0x12c
   3a934:	mov	r0, r6
   3a938:	mov	r1, r7
   3a93c:	bl	39290 <build_msgbuf_tags>
   3a940:	add	r0, fp, #8
   3a944:	str	r0, [fp, #-36]	; 0xffffffdc
   3a948:	add	r0, sp, #24
   3a94c:	add	r2, sp, #4
   3a950:	mov	r1, r6
   3a954:	bl	e798 <msgbuf_cache_init@plt>
   3a958:	ldr	r6, [pc, #204]	; 3aa2c <sendto_common_channels_local_butone+0x130>
   3a95c:	ldr	r6, [pc, r6]
   3a960:	ldr	r0, [r6]
   3a964:	add	r0, r0, #1
   3a968:	str	r0, [r6]
   3a96c:	str	r0, [r7, #84]	; 0x54
   3a970:	ldr	r0, [r7, #24]
   3a974:	ldr	sl, [r0]
   3a978:	cmp	sl, #0
   3a97c:	beq	3aa1c <sendto_common_channels_local_butone+0x120>
   3a980:	ldr	r0, [sl]
   3a984:	ldr	sl, [sl, #8]
   3a988:	ldr	r0, [r0, #36]	; 0x24
   3a98c:	ldr	r4, [r0, #136]	; 0x88
   3a990:	cmp	r4, #0
   3a994:	beq	3a978 <sendto_common_channels_local_butone+0x7c>
   3a998:	ldr	r0, [r4]
   3a99c:	ldr	r4, [r4, #8]
   3a9a0:	ldr	r8, [r0, #40]	; 0x28
   3a9a4:	ldrb	r0, [r8, #65]	; 0x41
   3a9a8:	tst	r0, #64	; 0x40
   3a9ac:	bne	3a990 <sendto_common_channels_local_butone+0x94>
   3a9b0:	ldr	r0, [r8, #84]	; 0x54
   3a9b4:	ldr	r2, [r6]
   3a9b8:	cmp	r0, r2
   3a9bc:	beq	3a990 <sendto_common_channels_local_butone+0x94>
   3a9c0:	ldr	r0, [r8, #432]	; 0x1b0
   3a9c4:	ldr	r1, [r0, #296]	; 0x128
   3a9c8:	and	r3, r1, r5
   3a9cc:	cmp	r3, r5
   3a9d0:	andseq	r3, r1, r9
   3a9d4:	bne	3a990 <sendto_common_channels_local_butone+0x94>
   3a9d8:	str	r2, [r8, #84]	; 0x54
   3a9dc:	ldrh	r2, [r8, #80]	; 0x50
   3a9e0:	cmp	r2, #64	; 0x40
   3a9e4:	movwne	r1, #0
   3a9e8:	cmp	r0, #0
   3a9ec:	moveq	r1, r0
   3a9f0:	ldr	r7, [r8, #36]	; 0x24
   3a9f4:	add	r0, sp, #24
   3a9f8:	bl	e540 <msgbuf_cache_get@plt>
   3a9fc:	mov	r1, r0
   3aa00:	cmp	r7, #0
   3aa04:	moveq	r7, r8
   3aa08:	mov	r0, r7
   3aa0c:	bl	39344 <_send_linebuf>
   3aa10:	cmp	r4, #0
   3aa14:	bne	3a998 <sendto_common_channels_local_butone+0x9c>
   3aa18:	b	3a978 <sendto_common_channels_local_butone+0x7c>
   3aa1c:	add	r0, sp, #24
   3aa20:	bl	de80 <msgbuf_cache_free@plt>
   3aa24:	sub	sp, fp, #28
   3aa28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3aa2c:	.word	0x0001ff10

0003aa30 <sendto_match_butone>:
   3aa30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3aa34:	add	fp, sp, #28
   3aa38:	sub	sp, sp, #988	; 0x3dc
   3aa3c:	sub	sp, sp, #1024	; 0x400
   3aa40:	str	r3, [sp, #12]
   3aa44:	mov	r5, r2
   3aa48:	mov	r7, r1
   3aa4c:	mov	r4, r0
   3aa50:	ldr	r0, [pc, #504]	; 3ac50 <sendto_match_butone+0x220>
   3aa54:	add	r0, pc, r0
   3aa58:	vld1.64	{d16-d17}, [r0]!
   3aa5c:	add	sl, sp, #16
   3aa60:	mov	r1, sl
   3aa64:	vst1.64	{d16-d17}, [r1]!
   3aa68:	ldr	r0, [r0]
   3aa6c:	str	r0, [r1]
   3aa70:	sub	r0, fp, #64	; 0x40
   3aa74:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3aa78:	sub	r6, fp, #328	; 0x148
   3aa7c:	mov	r0, r6
   3aa80:	mov	r1, r7
   3aa84:	bl	39290 <build_msgbuf_tags>
   3aa88:	add	r3, fp, #12
   3aa8c:	str	r3, [fp, #-36]	; 0xffffffdc
   3aa90:	ldr	r2, [fp, #8]
   3aa94:	ldr	r0, [pc, #440]	; 3ac54 <sendto_match_butone+0x224>
   3aa98:	add	r0, pc, r0
   3aa9c:	mov	r1, #512	; 0x200
   3aaa0:	bl	e450 <vsnprintf@plt>
   3aaa4:	ldrh	r0, [r7, #80]	; 0x50
   3aaa8:	add	r1, r7, #163	; 0xa3
   3aaac:	add	r2, r7, #152	; 0x98
   3aab0:	add	r9, r7, #88	; 0x58
   3aab4:	str	r9, [sp]
   3aab8:	str	r2, [sp, #4]
   3aabc:	str	r1, [sp, #8]
   3aac0:	ldr	r8, [pc, #400]	; 3ac58 <sendto_match_butone+0x228>
   3aac4:	add	r8, pc, r8
   3aac8:	ldr	r3, [pc, #396]	; 3ac5c <sendto_match_butone+0x22c>
   3aacc:	add	r3, pc, r3
   3aad0:	cmp	r0, #32
   3aad4:	moveq	r3, r8
   3aad8:	add	r0, sp, #36	; 0x24
   3aadc:	mov	r1, r6
   3aae0:	mov	r2, sl
   3aae4:	bl	d6b8 <msgbuf_cache_initf@plt>
   3aae8:	ldrb	r0, [r7, #396]!	; 0x18c
   3aaec:	cmp	r0, #0
   3aaf0:	movne	r9, r7
   3aaf4:	sub	r0, fp, #64	; 0x40
   3aaf8:	mov	r1, sl
   3aafc:	mov	r2, r8
   3ab00:	mov	r3, r9
   3ab04:	bl	39f60 <linebuf_put_msgf>
   3ab08:	ldr	r0, [sp, #12]
   3ab0c:	cmp	r0, #2
   3ab10:	bne	3ab88 <sendto_match_butone+0x158>
   3ab14:	ldr	r0, [pc, #324]	; 3ac60 <sendto_match_butone+0x230>
   3ab18:	ldr	r0, [pc, r0]
   3ab1c:	ldr	r6, [r0]
   3ab20:	cmp	r6, #0
   3ab24:	beq	3ac04 <sendto_match_butone+0x1d4>
   3ab28:	add	r8, sp, #36	; 0x24
   3ab2c:	b	3ab4c <sendto_match_butone+0x11c>
   3ab30:	mov	r0, r8
   3ab34:	bl	e540 <msgbuf_cache_get@plt>
   3ab38:	mov	r1, r0
   3ab3c:	mov	r0, r7
   3ab40:	bl	39344 <_send_linebuf>
   3ab44:	cmp	r6, #0
   3ab48:	beq	3ac04 <sendto_match_butone+0x1d4>
   3ab4c:	ldr	r7, [r6]
   3ab50:	ldr	r6, [r6, #8]
   3ab54:	add	r1, r7, #163	; 0xa3
   3ab58:	mov	r0, r5
   3ab5c:	bl	e114 <match@plt>
   3ab60:	cmp	r0, #0
   3ab64:	beq	3ab44 <sendto_match_butone+0x114>
   3ab68:	ldrh	r0, [r7, #80]	; 0x50
   3ab6c:	mov	r1, #0
   3ab70:	cmp	r0, #64	; 0x40
   3ab74:	bne	3ab30 <sendto_match_butone+0x100>
   3ab78:	ldr	r0, [r7, #432]	; 0x1b0
   3ab7c:	cmp	r0, #0
   3ab80:	ldrne	r1, [r0, #296]	; 0x128
   3ab84:	b	3ab30 <sendto_match_butone+0x100>
   3ab88:	ldr	r0, [pc, #212]	; 3ac64 <sendto_match_butone+0x234>
   3ab8c:	ldr	r0, [pc, r0]
   3ab90:	add	r1, r0, #88	; 0x58
   3ab94:	mov	r0, r5
   3ab98:	bl	e114 <match@plt>
   3ab9c:	cmp	r0, #0
   3aba0:	beq	3ac04 <sendto_match_butone+0x1d4>
   3aba4:	ldr	r0, [pc, #188]	; 3ac68 <sendto_match_butone+0x238>
   3aba8:	ldr	r0, [pc, r0]
   3abac:	ldr	r7, [r0]
   3abb0:	cmp	r7, #0
   3abb4:	beq	3ac04 <sendto_match_butone+0x1d4>
   3abb8:	add	r5, sp, #36	; 0x24
   3abbc:	b	3abdc <sendto_match_butone+0x1ac>
   3abc0:	mov	r0, r5
   3abc4:	bl	e540 <msgbuf_cache_get@plt>
   3abc8:	mov	r1, r0
   3abcc:	mov	r0, r6
   3abd0:	bl	39344 <_send_linebuf>
   3abd4:	cmp	r7, #0
   3abd8:	beq	3ac04 <sendto_match_butone+0x1d4>
   3abdc:	ldr	r6, [r7]
   3abe0:	ldr	r7, [r7, #8]
   3abe4:	ldrh	r0, [r6, #80]	; 0x50
   3abe8:	mov	r1, #0
   3abec:	cmp	r0, #64	; 0x40
   3abf0:	bne	3abc0 <sendto_match_butone+0x190>
   3abf4:	ldr	r0, [r6, #432]	; 0x1b0
   3abf8:	cmp	r0, #0
   3abfc:	ldrne	r1, [r0, #296]	; 0x128
   3ac00:	b	3abc0 <sendto_match_butone+0x190>
   3ac04:	ldr	r0, [pc, #96]	; 3ac6c <sendto_match_butone+0x23c>
   3ac08:	ldr	r0, [pc, r0]
   3ac0c:	ldr	r6, [r0]
   3ac10:	cmp	r6, #0
   3ac14:	beq	3ac38 <sendto_match_butone+0x208>
   3ac18:	sub	r5, fp, #64	; 0x40
   3ac1c:	ldr	r0, [r6]
   3ac20:	cmp	r0, r4
   3ac24:	movne	r1, r5
   3ac28:	blne	39fac <send_linebuf_remote>
   3ac2c:	ldr	r6, [r6, #8]
   3ac30:	cmp	r6, #0
   3ac34:	bne	3ac1c <sendto_match_butone+0x1ec>
   3ac38:	add	r0, sp, #36	; 0x24
   3ac3c:	bl	de80 <msgbuf_cache_free@plt>
   3ac40:	sub	r0, fp, #64	; 0x40
   3ac44:	bl	e00c <rb_linebuf_donebuf@plt>
   3ac48:	sub	sp, fp, #28
   3ac4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ac50:	.word	0x0001f464
   3ac54:	.word	0x00030ccc
   3ac58:	.word	0x00008d43
   3ac5c:	.word	0x0000cbdc
   3ac60:	.word	0x00020010
   3ac64:	.word	0x0001ffcc
   3ac68:	.word	0x0001ff80
   3ac6c:	.word	0x0001fdc8

0003ac70 <sendto_match_servs>:
   3ac70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ac74:	add	fp, sp, #28
   3ac78:	sub	sp, sp, #52	; 0x34
   3ac7c:	mov	r6, r1
   3ac80:	mov	r7, r0
   3ac84:	ldr	r0, [pc, #344]	; 3ade4 <sendto_match_servs+0x174>
   3ac88:	add	r0, pc, r0
   3ac8c:	vld1.64	{d16-d17}, [r0]!
   3ac90:	mov	r1, sp
   3ac94:	vst1.64	{d16-d17}, [r1]!
   3ac98:	ldr	r0, [r0]
   3ac9c:	str	r0, [r1]
   3aca0:	cmp	r6, #0
   3aca4:	beq	3addc <sendto_match_servs+0x16c>
   3aca8:	ldrb	r0, [r6]
   3acac:	cmp	r0, #0
   3acb0:	beq	3addc <sendto_match_servs+0x16c>
   3acb4:	mov	sl, r3
   3acb8:	mov	r8, r2
   3acbc:	ldr	r4, [fp, #8]
   3acc0:	add	r9, sp, #20
   3acc4:	mov	r0, r9
   3acc8:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3accc:	add	r3, fp, #12
   3acd0:	str	r3, [fp, #-32]	; 0xffffffe0
   3acd4:	ldr	r0, [pc, #268]	; 3ade8 <sendto_match_servs+0x178>
   3acd8:	add	r0, pc, r0
   3acdc:	mov	r1, #512	; 0x200
   3ace0:	mov	r2, r4
   3ace4:	bl	e450 <vsnprintf@plt>
   3ace8:	mov	r3, r7
   3acec:	ldrb	r0, [r3, #396]!	; 0x18c
   3acf0:	cmp	r0, #0
   3acf4:	subeq	r3, r3, #308	; 0x134
   3acf8:	mov	r1, sp
   3acfc:	ldr	r2, [pc, #232]	; 3adec <sendto_match_servs+0x17c>
   3ad00:	add	r2, pc, r2
   3ad04:	mov	r0, r9
   3ad08:	bl	39f60 <linebuf_put_msgf>
   3ad0c:	ldr	r4, [pc, #220]	; 3adf0 <sendto_match_servs+0x180>
   3ad10:	ldr	r4, [pc, r4]
   3ad14:	ldr	r0, [r4]
   3ad18:	add	r0, r0, #1
   3ad1c:	str	r0, [r4]
   3ad20:	ldr	r0, [pc, #204]	; 3adf4 <sendto_match_servs+0x184>
   3ad24:	ldr	r0, [pc, r0]
   3ad28:	ldr	r5, [r0]
   3ad2c:	cmp	r5, #0
   3ad30:	bne	3ad4c <sendto_match_servs+0xdc>
   3ad34:	b	3add4 <sendto_match_servs+0x164>
   3ad38:	add	r1, sp, #20
   3ad3c:	bl	39344 <_send_linebuf>
   3ad40:	ldr	r5, [r5, #8]
   3ad44:	cmp	r5, #0
   3ad48:	beq	3add4 <sendto_match_servs+0x164>
   3ad4c:	ldr	r9, [r5]
   3ad50:	ldrh	r0, [r9, #80]	; 0x50
   3ad54:	cmp	r0, #4
   3ad58:	beq	3ad40 <sendto_match_servs+0xd0>
   3ad5c:	ldr	r0, [r9, #36]	; 0x24
   3ad60:	ldr	r1, [r7, #36]	; 0x24
   3ad64:	cmp	r0, r1
   3ad68:	beq	3ad40 <sendto_match_servs+0xd0>
   3ad6c:	ldr	r0, [r0, #84]	; 0x54
   3ad70:	ldr	r1, [r4]
   3ad74:	cmp	r0, r1
   3ad78:	beq	3ad40 <sendto_match_servs+0xd0>
   3ad7c:	add	r1, r9, #88	; 0x58
   3ad80:	mov	r0, r6
   3ad84:	bl	e114 <match@plt>
   3ad88:	cmp	r0, #0
   3ad8c:	beq	3ad40 <sendto_match_servs+0xd0>
   3ad90:	ldr	r0, [r9, #36]	; 0x24
   3ad94:	ldr	r1, [r4]
   3ad98:	str	r1, [r0, #84]	; 0x54
   3ad9c:	cmp	r8, #0
   3ada0:	beq	3adb8 <sendto_match_servs+0x148>
   3ada4:	ldr	r1, [r0, #432]	; 0x1b0
   3ada8:	ldr	r1, [r1, #296]	; 0x128
   3adac:	and	r1, r1, r8
   3adb0:	cmp	r1, r8
   3adb4:	bne	3ad40 <sendto_match_servs+0xd0>
   3adb8:	cmp	sl, #0
   3adbc:	beq	3ad38 <sendto_match_servs+0xc8>
   3adc0:	ldr	r1, [r0, #432]	; 0x1b0
   3adc4:	ldr	r1, [r1, #296]	; 0x128
   3adc8:	tst	r1, sl
   3adcc:	bne	3ad40 <sendto_match_servs+0xd0>
   3add0:	b	3ad38 <sendto_match_servs+0xc8>
   3add4:	add	r0, sp, #20
   3add8:	bl	e00c <rb_linebuf_donebuf@plt>
   3addc:	sub	sp, fp, #28
   3ade0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ade4:	.word	0x0001f248
   3ade8:	.word	0x00030c8c
   3adec:	.word	0x00008b07
   3adf0:	.word	0x0001fb5c
   3adf4:	.word	0x0001fb54

0003adf8 <sendto_local_clients_with_capability>:
   3adf8:	sub	sp, sp, #8
   3adfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ae00:	add	fp, sp, #24
   3ae04:	sub	sp, sp, #1968	; 0x7b0
   3ae08:	mov	r4, r0
   3ae0c:	str	r2, [fp, #8]
   3ae10:	str	r3, [fp, #12]
   3ae14:	mov	r0, #0
   3ae18:	str	r0, [sp, #20]
   3ae1c:	sub	r2, fp, #28
   3ae20:	str	r2, [sp, #16]
   3ae24:	str	r0, [sp, #12]
   3ae28:	stmib	sp, {r0, r1}
   3ae2c:	ldr	r1, [pc, #192]	; 3aef4 <sendto_local_clients_with_capability+0xfc>
   3ae30:	ldr	r1, [pc, r1]
   3ae34:	sub	r5, fp, #292	; 0x124
   3ae38:	mov	r0, r5
   3ae3c:	bl	39290 <build_msgbuf_tags>
   3ae40:	add	r0, fp, #8
   3ae44:	str	r0, [fp, #-28]	; 0xffffffe4
   3ae48:	add	r0, sp, #24
   3ae4c:	add	r2, sp, #4
   3ae50:	mov	r1, r5
   3ae54:	bl	e798 <msgbuf_cache_init@plt>
   3ae58:	ldr	r0, [pc, #152]	; 3aef8 <sendto_local_clients_with_capability+0x100>
   3ae5c:	ldr	r0, [pc, r0]
   3ae60:	ldr	r7, [r0]
   3ae64:	cmp	r7, #0
   3ae68:	beq	3aedc <sendto_local_clients_with_capability+0xe4>
   3ae6c:	add	r8, sp, #24
   3ae70:	b	3ae80 <sendto_local_clients_with_capability+0x88>
   3ae74:	ldr	r7, [r7, #8]
   3ae78:	cmp	r7, #0
   3ae7c:	beq	3aedc <sendto_local_clients_with_capability+0xe4>
   3ae80:	ldr	r5, [r7]
   3ae84:	ldrb	r0, [r5, #65]	; 0x41
   3ae88:	tst	r0, #64	; 0x40
   3ae8c:	bne	3ae74 <sendto_local_clients_with_capability+0x7c>
   3ae90:	ldr	r0, [r5, #432]	; 0x1b0
   3ae94:	ldr	r1, [r0, #296]	; 0x128
   3ae98:	and	r2, r1, r4
   3ae9c:	cmp	r2, r4
   3aea0:	bne	3ae74 <sendto_local_clients_with_capability+0x7c>
   3aea4:	ldrh	r2, [r5, #80]	; 0x50
   3aea8:	cmp	r2, #64	; 0x40
   3aeac:	movwne	r1, #0
   3aeb0:	cmp	r0, #0
   3aeb4:	moveq	r1, r0
   3aeb8:	ldr	r6, [r5, #36]	; 0x24
   3aebc:	mov	r0, r8
   3aec0:	bl	e540 <msgbuf_cache_get@plt>
   3aec4:	mov	r1, r0
   3aec8:	cmp	r6, #0
   3aecc:	moveq	r6, r5
   3aed0:	mov	r0, r6
   3aed4:	bl	39344 <_send_linebuf>
   3aed8:	b	3ae74 <sendto_local_clients_with_capability+0x7c>
   3aedc:	add	r0, sp, #24
   3aee0:	bl	de80 <msgbuf_cache_free@plt>
   3aee4:	sub	sp, fp, #24
   3aee8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3aeec:	add	sp, sp, #8
   3aef0:	bx	lr
   3aef4:	.word	0x0001fd28
   3aef8:	.word	0x0001fccc

0003aefc <sendto_monitor>:
   3aefc:	sub	sp, sp, #4
   3af00:	push	{r4, r5, r6, sl, fp, lr}
   3af04:	add	fp, sp, #16
   3af08:	sub	sp, sp, #940	; 0x3ac
   3af0c:	sub	sp, sp, #1024	; 0x400
   3af10:	mov	r4, r1
   3af14:	mov	r1, r0
   3af18:	str	r3, [fp, #8]
   3af1c:	mov	r0, #0
   3af20:	str	r0, [sp, #16]
   3af24:	sub	r3, fp, #20
   3af28:	str	r3, [sp, #12]
   3af2c:	str	r0, [sp, #8]
   3af30:	stm	sp, {r0, r2}
   3af34:	sub	r5, fp, #284	; 0x11c
   3af38:	mov	r0, r5
   3af3c:	bl	39290 <build_msgbuf_tags>
   3af40:	add	r0, fp, #8
   3af44:	str	r0, [fp, #-20]	; 0xffffffec
   3af48:	add	r0, sp, #20
   3af4c:	mov	r2, sp
   3af50:	mov	r1, r5
   3af54:	bl	e798 <msgbuf_cache_init@plt>
   3af58:	ldr	r6, [r4, #32]
   3af5c:	cmp	r6, #0
   3af60:	beq	3afbc <sendto_monitor+0xc0>
   3af64:	add	r4, sp, #20
   3af68:	b	3af88 <sendto_monitor+0x8c>
   3af6c:	mov	r0, r4
   3af70:	bl	e540 <msgbuf_cache_get@plt>
   3af74:	mov	r1, r0
   3af78:	mov	r0, r5
   3af7c:	bl	39344 <_send_linebuf>
   3af80:	cmp	r6, #0
   3af84:	beq	3afbc <sendto_monitor+0xc0>
   3af88:	ldr	r5, [r6]
   3af8c:	ldr	r6, [r6, #8]
   3af90:	ldrb	r0, [r5, #65]	; 0x41
   3af94:	tst	r0, #64	; 0x40
   3af98:	bne	3af80 <sendto_monitor+0x84>
   3af9c:	ldrh	r0, [r5, #80]	; 0x50
   3afa0:	mov	r1, #0
   3afa4:	cmp	r0, #64	; 0x40
   3afa8:	bne	3af6c <sendto_monitor+0x70>
   3afac:	ldr	r0, [r5, #432]	; 0x1b0
   3afb0:	cmp	r0, #0
   3afb4:	ldrne	r1, [r0, #296]	; 0x128
   3afb8:	b	3af6c <sendto_monitor+0x70>
   3afbc:	add	r0, sp, #20
   3afc0:	bl	de80 <msgbuf_cache_free@plt>
   3afc4:	sub	sp, fp, #16
   3afc8:	pop	{r4, r5, r6, sl, fp, lr}
   3afcc:	add	sp, sp, #4
   3afd0:	bx	lr

0003afd4 <sendto_anywhere>:
   3afd4:	push	{fp, lr}
   3afd8:	mov	fp, sp
   3afdc:	sub	sp, sp, #16
   3afe0:	mov	ip, r2
   3afe4:	mov	r2, r1
   3afe8:	add	r1, fp, #8
   3afec:	str	r1, [fp, #-4]
   3aff0:	sub	r1, fp, #4
   3aff4:	str	r3, [sp]
   3aff8:	str	r1, [sp, #4]
   3affc:	mov	r1, r0
   3b000:	mov	r3, ip
   3b004:	bl	3b010 <_sendto_anywhere>
   3b008:	mov	sp, fp
   3b00c:	pop	{fp, pc}

0003b010 <_sendto_anywhere>:
   3b010:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b014:	add	fp, sp, #24
   3b018:	sub	sp, sp, #336	; 0x150
   3b01c:	mov	r6, r3
   3b020:	mov	r5, r2
   3b024:	mov	r7, r1
   3b028:	mov	r4, r0
   3b02c:	mov	r0, #0
   3b030:	str	r0, [fp, #-56]	; 0xffffffc8
   3b034:	str	r0, [fp, #-64]	; 0xffffffc0
   3b038:	str	r0, [fp, #-72]	; 0xffffffb8
   3b03c:	ldr	r0, [fp, #12]
   3b040:	str	r0, [fp, #-60]	; 0xffffffc4
   3b044:	ldr	r0, [fp, #8]
   3b048:	str	r0, [fp, #-68]	; 0xffffffbc
   3b04c:	sub	r0, fp, #52	; 0x34
   3b050:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3b054:	ldrb	r0, [r4, #65]	; 0x41
   3b058:	tst	r0, #32
   3b05c:	beq	3b0a0 <_sendto_anywhere+0x90>
   3b060:	ldrh	r0, [r4, #80]	; 0x50
   3b064:	cmp	r0, #64	; 0x40
   3b068:	bne	3b0a0 <_sendto_anywhere+0x90>
   3b06c:	ldrh	r0, [r5, #80]	; 0x50
   3b070:	cmp	r0, #32
   3b074:	bne	3b128 <_sendto_anywhere+0x118>
   3b078:	add	r0, r7, #88	; 0x58
   3b07c:	str	r6, [sp]
   3b080:	str	r0, [sp, #4]
   3b084:	add	r3, r5, #88	; 0x58
   3b088:	sub	r0, fp, #52	; 0x34
   3b08c:	sub	r1, fp, #72	; 0x48
   3b090:	ldr	r2, [pc, #292]	; 3b1bc <_sendto_anywhere+0x1ac>
   3b094:	add	r2, pc, r2
   3b098:	bl	39f60 <linebuf_put_msgf>
   3b09c:	b	3b1a0 <_sendto_anywhere+0x190>
   3b0a0:	ldr	r0, [r7, #36]	; 0x24
   3b0a4:	ldrh	r1, [r0, #80]	; 0x50
   3b0a8:	cmp	r1, #32
   3b0ac:	bne	3b0cc <_sendto_anywhere+0xbc>
   3b0b0:	ldrb	r1, [r0, #396]	; 0x18c
   3b0b4:	cmp	r1, #0
   3b0b8:	beq	3b0d4 <_sendto_anywhere+0xc4>
   3b0bc:	ldrb	r1, [r5, #396]!	; 0x18c
   3b0c0:	cmp	r1, #0
   3b0c4:	subeq	r5, r5, #308	; 0x134
   3b0c8:	b	3b0d8 <_sendto_anywhere+0xc8>
   3b0cc:	add	r5, r5, #88	; 0x58
   3b0d0:	b	3b0f4 <_sendto_anywhere+0xe4>
   3b0d4:	add	r5, r5, #88	; 0x58
   3b0d8:	ldrb	r0, [r0, #396]	; 0x18c
   3b0dc:	cmp	r0, #0
   3b0e0:	beq	3b0f4 <_sendto_anywhere+0xe4>
   3b0e4:	ldrb	r0, [r7, #396]!	; 0x18c
   3b0e8:	cmp	r0, #0
   3b0ec:	subeq	r7, r7, #308	; 0x134
   3b0f0:	b	3b0f8 <_sendto_anywhere+0xe8>
   3b0f4:	add	r7, r7, #88	; 0x58
   3b0f8:	stm	sp, {r6, r7}
   3b0fc:	sub	r6, fp, #52	; 0x34
   3b100:	sub	r1, fp, #72	; 0x48
   3b104:	ldr	r2, [pc, #192]	; 3b1cc <_sendto_anywhere+0x1bc>
   3b108:	add	r2, pc, r2
   3b10c:	mov	r0, r6
   3b110:	mov	r3, r5
   3b114:	bl	39f60 <linebuf_put_msgf>
   3b118:	mov	r0, r4
   3b11c:	mov	r1, r6
   3b120:	bl	39fac <send_linebuf_remote>
   3b124:	b	3b1ac <_sendto_anywhere+0x19c>
   3b128:	add	r0, sp, #24
   3b12c:	mov	r1, r5
   3b130:	bl	39290 <build_msgbuf_tags>
   3b134:	ldrh	r0, [r5, #80]	; 0x50
   3b138:	cmp	r0, #64	; 0x40
   3b13c:	bne	3b160 <_sendto_anywhere+0x150>
   3b140:	ldr	r1, [r5, #24]
   3b144:	ldr	r2, [pc, #120]	; 3b1c4 <_sendto_anywhere+0x1b4>
   3b148:	add	r2, pc, r2
   3b14c:	ldr	r0, [pc, #116]	; 3b1c8 <_sendto_anywhere+0x1b8>
   3b150:	add	r0, pc, r0
   3b154:	cmp	r1, #0
   3b158:	moveq	r0, r2
   3b15c:	b	3b168 <_sendto_anywhere+0x158>
   3b160:	ldr	r0, [pc, #88]	; 3b1c0 <_sendto_anywhere+0x1b0>
   3b164:	add	r0, pc, r0
   3b168:	add	r1, r5, #163	; 0xa3
   3b16c:	add	r2, r5, #152	; 0x98
   3b170:	add	r3, r7, #88	; 0x58
   3b174:	add	r7, r5, #88	; 0x58
   3b178:	stm	sp, {r0, r7}
   3b17c:	str	r6, [sp, #8]
   3b180:	str	r3, [sp, #12]
   3b184:	str	r2, [sp, #16]
   3b188:	str	r1, [sp, #20]
   3b18c:	sub	r0, fp, #52	; 0x34
   3b190:	add	r1, sp, #24
   3b194:	sub	r3, fp, #72	; 0x48
   3b198:	mov	r2, r4
   3b19c:	bl	3986c <linebuf_put_tagsf>
   3b1a0:	sub	r1, fp, #52	; 0x34
   3b1a4:	mov	r0, r4
   3b1a8:	bl	39344 <_send_linebuf>
   3b1ac:	sub	r0, fp, #52	; 0x34
   3b1b0:	bl	e00c <rb_linebuf_donebuf@plt>
   3b1b4:	sub	sp, fp, #24
   3b1b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3b1bc:	.word	0x0000c58d
   3b1c0:	.word	0x0000c64b
   3b1c4:	.word	0x0000c667
   3b1c8:	.word	0x0000c644
   3b1cc:	.word	0x0000c519

0003b1d0 <sendto_anywhere_echo>:
   3b1d0:	push	{fp, lr}
   3b1d4:	mov	fp, sp
   3b1d8:	sub	sp, sp, #16
   3b1dc:	mov	ip, r2
   3b1e0:	mov	r2, r1
   3b1e4:	mov	r1, r0
   3b1e8:	add	r0, fp, #8
   3b1ec:	str	r0, [fp, #-4]
   3b1f0:	sub	r0, fp, #4
   3b1f4:	str	r3, [sp]
   3b1f8:	str	r0, [sp, #4]
   3b1fc:	mov	r0, r2
   3b200:	mov	r3, ip
   3b204:	bl	3b010 <_sendto_anywhere>
   3b208:	mov	sp, fp
   3b20c:	pop	{fp, pc}

0003b210 <sendto_realops_snomask_from>:
   3b210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b214:	add	fp, sp, #28
   3b218:	sub	sp, sp, #948	; 0x3b4
   3b21c:	sub	sp, sp, #1024	; 0x400
   3b220:	mov	r6, r2
   3b224:	mov	r4, r1
   3b228:	mov	r5, r0
   3b22c:	mov	r0, #0
   3b230:	str	r0, [sp, #20]
   3b234:	sub	r1, fp, #36	; 0x24
   3b238:	str	r1, [sp, #16]
   3b23c:	str	r0, [sp, #12]
   3b240:	stmib	sp, {r0, r3}
   3b244:	ldr	r1, [pc, #372]	; 3b3c0 <sendto_realops_snomask_from+0x1b0>
   3b248:	ldr	r1, [pc, r1]
   3b24c:	sub	r7, fp, #300	; 0x12c
   3b250:	mov	r0, r7
   3b254:	bl	39290 <build_msgbuf_tags>
   3b258:	add	r0, fp, #8
   3b25c:	str	r0, [fp, #-36]	; 0xffffffdc
   3b260:	add	r0, r6, #88	; 0x58
   3b264:	str	r0, [sp]
   3b268:	add	r0, sp, #24
   3b26c:	add	r2, sp, #4
   3b270:	ldr	r3, [pc, #332]	; 3b3c4 <sendto_realops_snomask_from+0x1b4>
   3b274:	add	r3, pc, r3
   3b278:	mov	r1, r7
   3b27c:	bl	d6b8 <msgbuf_cache_initf@plt>
   3b280:	ldr	r0, [pc, #320]	; 3b3c8 <sendto_realops_snomask_from+0x1b8>
   3b284:	ldr	r0, [pc, r0]
   3b288:	ldr	r6, [r0]
   3b28c:	cmp	r6, #0
   3b290:	beq	3b3b0 <sendto_realops_snomask_from+0x1a0>
   3b294:	ldr	r8, [pc, #304]	; 3b3cc <sendto_realops_snomask_from+0x1bc>
   3b298:	add	r8, pc, r8
   3b29c:	ldr	r9, [pc, #300]	; 3b3d0 <sendto_realops_snomask_from+0x1c0>
   3b2a0:	add	r9, pc, r9
   3b2a4:	add	sl, sp, #24
   3b2a8:	b	3b2c8 <sendto_realops_snomask_from+0xb8>
   3b2ac:	mov	r0, sl
   3b2b0:	bl	e540 <msgbuf_cache_get@plt>
   3b2b4:	mov	r1, r0
   3b2b8:	mov	r0, r7
   3b2bc:	bl	39344 <_send_linebuf>
   3b2c0:	cmp	r6, #0
   3b2c4:	beq	3b3b0 <sendto_realops_snomask_from+0x1a0>
   3b2c8:	ldr	r7, [r6]
   3b2cc:	ldr	r6, [r6, #8]
   3b2d0:	cmp	r4, #1
   3b2d4:	beq	3b334 <sendto_realops_snomask_from+0x124>
   3b2d8:	cmp	r4, #2
   3b2dc:	bne	3b384 <sendto_realops_snomask_from+0x174>
   3b2e0:	ldr	r0, [r7, #24]
   3b2e4:	cmp	r0, #0
   3b2e8:	beq	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b2ec:	ldr	r0, [r0, #36]	; 0x24
   3b2f0:	cmp	r0, #0
   3b2f4:	beq	3b308 <sendto_realops_snomask_from+0xf8>
   3b2f8:	mov	r1, r9
   3b2fc:	bl	e594 <privilegeset_in_set@plt>
   3b300:	cmp	r0, #0
   3b304:	bne	3b384 <sendto_realops_snomask_from+0x174>
   3b308:	ldr	r0, [r7, #24]
   3b30c:	cmp	r0, #0
   3b310:	beq	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b314:	ldr	r0, [r0, #36]	; 0x24
   3b318:	cmp	r0, #0
   3b31c:	beq	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b320:	mov	r1, r8
   3b324:	bl	e594 <privilegeset_in_set@plt>
   3b328:	cmp	r0, #0
   3b32c:	bne	3b384 <sendto_realops_snomask_from+0x174>
   3b330:	b	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b334:	ldr	r0, [r7, #24]
   3b338:	cmp	r0, #0
   3b33c:	beq	3b384 <sendto_realops_snomask_from+0x174>
   3b340:	ldr	r0, [r0, #36]	; 0x24
   3b344:	cmp	r0, #0
   3b348:	beq	3b35c <sendto_realops_snomask_from+0x14c>
   3b34c:	mov	r1, r9
   3b350:	bl	e594 <privilegeset_in_set@plt>
   3b354:	cmp	r0, #0
   3b358:	bne	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b35c:	ldr	r0, [r7, #24]
   3b360:	cmp	r0, #0
   3b364:	beq	3b384 <sendto_realops_snomask_from+0x174>
   3b368:	ldr	r0, [r0, #36]	; 0x24
   3b36c:	cmp	r0, #0
   3b370:	beq	3b384 <sendto_realops_snomask_from+0x174>
   3b374:	mov	r1, r8
   3b378:	bl	e594 <privilegeset_in_set@plt>
   3b37c:	cmp	r0, #0
   3b380:	bne	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b384:	ldr	r0, [r7, #72]	; 0x48
   3b388:	tst	r0, r5
   3b38c:	beq	3b2c0 <sendto_realops_snomask_from+0xb0>
   3b390:	ldrh	r0, [r7, #80]	; 0x50
   3b394:	mov	r1, #0
   3b398:	cmp	r0, #64	; 0x40
   3b39c:	bne	3b2ac <sendto_realops_snomask_from+0x9c>
   3b3a0:	ldr	r0, [r7, #432]	; 0x1b0
   3b3a4:	cmp	r0, #0
   3b3a8:	ldrne	r1, [r0, #296]	; 0x128
   3b3ac:	b	3b2ac <sendto_realops_snomask_from+0x9c>
   3b3b0:	add	r0, sp, #24
   3b3b4:	bl	de80 <msgbuf_cache_free@plt>
   3b3b8:	sub	sp, fp, #28
   3b3bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b3c0:	.word	0x0001f910
   3b3c4:	.word	0x0000c477
   3b3c8:	.word	0x0001f6b4
   3b3cc:	.word	0x00005da2
   3b3d0:	.word	0x00005d8f

0003b3d4 <sendto_wallops_flags>:
   3b3d4:	sub	sp, sp, #4
   3b3d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b3dc:	add	fp, sp, #24
   3b3e0:	sub	sp, sp, #956	; 0x3bc
   3b3e4:	sub	sp, sp, #1024	; 0x400
   3b3e8:	mov	r5, r1
   3b3ec:	mov	r4, r0
   3b3f0:	str	r3, [fp, #8]
   3b3f4:	mov	r0, #0
   3b3f8:	str	r0, [sp, #32]
   3b3fc:	sub	r1, fp, #28
   3b400:	str	r1, [sp, #28]
   3b404:	str	r0, [sp, #24]
   3b408:	str	r2, [sp, #20]
   3b40c:	str	r0, [sp, #16]
   3b410:	sub	r0, fp, #292	; 0x124
   3b414:	mov	r1, r5
   3b418:	bl	39290 <build_msgbuf_tags>
   3b41c:	add	r0, fp, #8
   3b420:	str	r0, [fp, #-28]	; 0xffffffe4
   3b424:	ldrh	r0, [r5, #80]	; 0x50
   3b428:	cmp	r0, #64	; 0x40
   3b42c:	bne	3b46c <sendto_wallops_flags+0x98>
   3b430:	ldr	r0, [r5, #24]
   3b434:	cmp	r0, #0
   3b438:	beq	3b46c <sendto_wallops_flags+0x98>
   3b43c:	add	r0, r5, #163	; 0xa3
   3b440:	add	r1, r5, #152	; 0x98
   3b444:	add	r2, r5, #88	; 0x58
   3b448:	str	r2, [sp]
   3b44c:	str	r1, [sp, #4]
   3b450:	str	r0, [sp, #8]
   3b454:	add	r0, sp, #36	; 0x24
   3b458:	sub	r1, fp, #292	; 0x124
   3b45c:	add	r2, sp, #16
   3b460:	ldr	r3, [pc, #208]	; 3b538 <sendto_wallops_flags+0x164>
   3b464:	add	r3, pc, r3
   3b468:	b	3b488 <sendto_wallops_flags+0xb4>
   3b46c:	add	r0, r5, #88	; 0x58
   3b470:	str	r0, [sp]
   3b474:	add	r0, sp, #36	; 0x24
   3b478:	sub	r1, fp, #292	; 0x124
   3b47c:	add	r2, sp, #16
   3b480:	ldr	r3, [pc, #180]	; 3b53c <sendto_wallops_flags+0x168>
   3b484:	add	r3, pc, r3
   3b488:	bl	d6b8 <msgbuf_cache_initf@plt>
   3b48c:	ldrh	r0, [r5, #80]	; 0x50
   3b490:	cmp	r0, #64	; 0x40
   3b494:	cmpeq	r4, #2
   3b498:	beq	3b520 <sendto_wallops_flags+0x14c>
   3b49c:	ldr	r0, [pc, #160]	; 3b544 <sendto_wallops_flags+0x170>
   3b4a0:	ldr	r0, [pc, r0]
   3b4a4:	ldr	r7, [r0]
   3b4a8:	cmp	r7, #0
   3b4ac:	beq	3b508 <sendto_wallops_flags+0x134>
   3b4b0:	add	r5, sp, #36	; 0x24
   3b4b4:	b	3b4d4 <sendto_wallops_flags+0x100>
   3b4b8:	mov	r0, r5
   3b4bc:	bl	e540 <msgbuf_cache_get@plt>
   3b4c0:	mov	r1, r0
   3b4c4:	mov	r0, r6
   3b4c8:	bl	39344 <_send_linebuf>
   3b4cc:	cmp	r7, #0
   3b4d0:	beq	3b508 <sendto_wallops_flags+0x134>
   3b4d4:	ldr	r6, [r7]
   3b4d8:	ldr	r7, [r7, #8]
   3b4dc:	ldr	r0, [r6, #56]	; 0x38
   3b4e0:	tst	r0, r4
   3b4e4:	beq	3b4cc <sendto_wallops_flags+0xf8>
   3b4e8:	ldrh	r0, [r6, #80]	; 0x50
   3b4ec:	mov	r1, #0
   3b4f0:	cmp	r0, #64	; 0x40
   3b4f4:	bne	3b4b8 <sendto_wallops_flags+0xe4>
   3b4f8:	ldr	r0, [r6, #432]	; 0x1b0
   3b4fc:	cmp	r0, #0
   3b500:	ldrne	r1, [r0, #296]	; 0x128
   3b504:	b	3b4b8 <sendto_wallops_flags+0xe4>
   3b508:	add	r0, sp, #36	; 0x24
   3b50c:	bl	de80 <msgbuf_cache_free@plt>
   3b510:	sub	sp, fp, #24
   3b514:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b518:	add	sp, sp, #4
   3b51c:	bx	lr
   3b520:	ldr	r0, [r5, #24]
   3b524:	cmp	r0, #0
   3b528:	beq	3b49c <sendto_wallops_flags+0xc8>
   3b52c:	ldr	r0, [pc, #12]	; 3b540 <sendto_wallops_flags+0x16c>
   3b530:	ldr	r0, [pc, r0]
   3b534:	b	3b4a4 <sendto_wallops_flags+0xd0>
   3b538:	.word	0x0000c2a4
   3b53c:	.word	0x0000c298
   3b540:	.word	0x0001f5f8
   3b544:	.word	0x0001f498

0003b548 <kill_client>:
   3b548:	sub	sp, sp, #4
   3b54c:	push	{r4, r5, r6, sl, fp, lr}
   3b550:	add	fp, sp, #16
   3b554:	sub	sp, sp, #332	; 0x14c
   3b558:	mov	r5, r1
   3b55c:	mov	r4, r0
   3b560:	str	r3, [fp, #8]
   3b564:	mov	r0, #0
   3b568:	str	r0, [sp, #32]
   3b56c:	sub	r1, fp, #20
   3b570:	str	r1, [sp, #28]
   3b574:	str	r0, [sp, #24]
   3b578:	str	r2, [sp, #20]
   3b57c:	str	r0, [sp, #16]
   3b580:	ldr	r6, [pc, #200]	; 3b650 <kill_client+0x108>
   3b584:	ldr	r6, [pc, r6]
   3b588:	add	r0, sp, #36	; 0x24
   3b58c:	mov	r1, r6
   3b590:	bl	39290 <build_msgbuf_tags>
   3b594:	sub	r0, fp, #48	; 0x30
   3b598:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3b59c:	add	r0, fp, #8
   3b5a0:	str	r0, [fp, #-20]	; 0xffffffec
   3b5a4:	ldr	r0, [r4, #36]	; 0x24
   3b5a8:	ldrh	r1, [r0, #80]	; 0x50
   3b5ac:	cmp	r1, #32
   3b5b0:	bne	3b5d0 <kill_client+0x88>
   3b5b4:	ldrb	r1, [r0, #396]	; 0x18c
   3b5b8:	cmp	r1, #0
   3b5bc:	beq	3b5d8 <kill_client+0x90>
   3b5c0:	ldrb	r1, [r6, #396]!	; 0x18c
   3b5c4:	cmp	r1, #0
   3b5c8:	subeq	r6, r6, #308	; 0x134
   3b5cc:	b	3b5dc <kill_client+0x94>
   3b5d0:	add	r6, r6, #88	; 0x58
   3b5d4:	b	3b5f8 <kill_client+0xb0>
   3b5d8:	add	r6, r6, #88	; 0x58
   3b5dc:	ldrb	r0, [r0, #396]	; 0x18c
   3b5e0:	cmp	r0, #0
   3b5e4:	beq	3b5f8 <kill_client+0xb0>
   3b5e8:	ldrb	r0, [r5, #396]!	; 0x18c
   3b5ec:	cmp	r0, #0
   3b5f0:	subeq	r5, r5, #308	; 0x134
   3b5f4:	b	3b5fc <kill_client+0xb4>
   3b5f8:	add	r5, r5, #88	; 0x58
   3b5fc:	ldr	r0, [pc, #80]	; 3b654 <kill_client+0x10c>
   3b600:	add	r0, pc, r0
   3b604:	stm	sp, {r0, r6}
   3b608:	str	r5, [sp, #8]
   3b60c:	sub	r5, fp, #48	; 0x30
   3b610:	add	r1, sp, #36	; 0x24
   3b614:	add	r3, sp, #16
   3b618:	mov	r0, r5
   3b61c:	mov	r2, r4
   3b620:	bl	3986c <linebuf_put_tagsf>
   3b624:	ldr	r0, [r4, #36]	; 0x24
   3b628:	cmp	r0, #0
   3b62c:	moveq	r0, r4
   3b630:	mov	r1, r5
   3b634:	bl	39344 <_send_linebuf>
   3b638:	mov	r0, r5
   3b63c:	bl	e00c <rb_linebuf_donebuf@plt>
   3b640:	sub	sp, fp, #16
   3b644:	pop	{r4, r5, r6, sl, fp, lr}
   3b648:	add	sp, sp, #4
   3b64c:	bx	lr
   3b650:	.word	0x0001f5d4
   3b654:	.word	0x0000c12a

0003b658 <kill_client_serv_butone>:
   3b658:	sub	sp, sp, #4
   3b65c:	push	{r4, r5, r6, r7, fp, lr}
   3b660:	add	fp, sp, #16
   3b664:	sub	sp, sp, #60	; 0x3c
   3b668:	mov	r4, r1
   3b66c:	mov	r5, r0
   3b670:	str	r3, [fp, #8]
   3b674:	mov	r0, #0
   3b678:	str	r0, [sp, #24]
   3b67c:	sub	r1, fp, #20
   3b680:	str	r1, [sp, #20]
   3b684:	str	r0, [sp, #16]
   3b688:	str	r2, [sp, #12]
   3b68c:	str	r0, [sp, #8]
   3b690:	add	r6, sp, #28
   3b694:	mov	r0, r6
   3b698:	bl	d7a8 <rb_linebuf_newbuf@plt>
   3b69c:	add	r0, fp, #8
   3b6a0:	str	r0, [fp, #-20]	; 0xffffffec
   3b6a4:	ldr	r3, [pc, #184]	; 3b764 <kill_client_serv_butone+0x10c>
   3b6a8:	ldr	r3, [pc, r3]
   3b6ac:	ldrb	r0, [r3, #396]!	; 0x18c
   3b6b0:	ldrb	r1, [r4, #396]!	; 0x18c
   3b6b4:	ldr	r2, [pc, #172]	; 3b768 <kill_client_serv_butone+0x110>
   3b6b8:	add	r2, pc, r2
   3b6bc:	cmp	r1, #0
   3b6c0:	mov	r1, r4
   3b6c4:	subeq	r1, r1, #308	; 0x134
   3b6c8:	stm	sp, {r1, r2}
   3b6cc:	cmp	r0, #0
   3b6d0:	subeq	r3, r3, #308	; 0x134
   3b6d4:	add	r1, sp, #8
   3b6d8:	ldr	r2, [pc, #140]	; 3b76c <kill_client_serv_butone+0x114>
   3b6dc:	add	r2, pc, r2
   3b6e0:	mov	r0, r6
   3b6e4:	bl	39f60 <linebuf_put_msgf>
   3b6e8:	ldr	r0, [pc, #128]	; 3b770 <kill_client_serv_butone+0x118>
   3b6ec:	ldr	r0, [pc, r0]
   3b6f0:	ldr	r7, [r0]
   3b6f4:	cmp	r7, #0
   3b6f8:	beq	3b74c <kill_client_serv_butone+0xf4>
   3b6fc:	add	r6, sp, #28
   3b700:	b	3b714 <kill_client_serv_butone+0xbc>
   3b704:	mov	r1, r6
   3b708:	bl	39344 <_send_linebuf>
   3b70c:	cmp	r7, #0
   3b710:	beq	3b74c <kill_client_serv_butone+0xf4>
   3b714:	ldr	r0, [r7]
   3b718:	ldr	r7, [r7, #8]
   3b71c:	cmp	r5, #0
   3b720:	beq	3b704 <kill_client_serv_butone+0xac>
   3b724:	ldr	r1, [r5, #36]	; 0x24
   3b728:	cmp	r0, r1
   3b72c:	bne	3b704 <kill_client_serv_butone+0xac>
   3b730:	ldrb	r1, [r0, #396]	; 0x18c
   3b734:	cmp	r1, #0
   3b738:	beq	3b70c <kill_client_serv_butone+0xb4>
   3b73c:	ldrb	r1, [r4]
   3b740:	cmp	r1, #0
   3b744:	bne	3b704 <kill_client_serv_butone+0xac>
   3b748:	b	3b70c <kill_client_serv_butone+0xb4>
   3b74c:	add	r0, sp, #28
   3b750:	bl	e00c <rb_linebuf_donebuf@plt>
   3b754:	sub	sp, fp, #16
   3b758:	pop	{r4, r5, r6, r7, fp, lr}
   3b75c:	add	sp, sp, #4
   3b760:	bx	lr
   3b764:	.word	0x0001f4b0
   3b768:	.word	0x000306ac
   3b76c:	.word	0x0000c05c
   3b770:	.word	0x0001f2e4

0003b774 <msgbuf_init>:
   3b774:	mov	r1, #0
   3b778:	mov	r2, #264	; 0x108
   3b77c:	b	df28 <memset@plt>

0003b780 <construct_snobuf>:
   3b780:	ldr	r1, [pc, #64]	; 3b7c8 <construct_snobuf+0x48>
   3b784:	add	r1, pc, r1
   3b788:	mov	r2, #43	; 0x2b
   3b78c:	strb	r2, [r1], #1
   3b790:	mov	r2, #0
   3b794:	ldr	ip, [pc, #48]	; 3b7cc <construct_snobuf+0x4c>
   3b798:	ldr	ip, [pc, ip]
   3b79c:	ldr	r3, [ip, r2, lsl #2]
   3b7a0:	tst	r3, r0
   3b7a4:	strbne	r2, [r1], #1
   3b7a8:	add	r2, r2, #1
   3b7ac:	cmp	r2, #128	; 0x80
   3b7b0:	bne	3b79c <construct_snobuf+0x1c>
   3b7b4:	mov	r0, #0
   3b7b8:	strb	r0, [r1]
   3b7bc:	ldr	r0, [pc, #12]	; 3b7d0 <construct_snobuf+0x50>
   3b7c0:	add	r0, pc, r0
   3b7c4:	bx	lr
   3b7c8:	.word	0x000307e0
   3b7cc:	.word	0x0001f290
   3b7d0:	.word	0x000307a4

0003b7d4 <parse_snobuf_to_mask>:
   3b7d4:	cmp	r1, #0
   3b7d8:	beq	3b840 <parse_snobuf_to_mask+0x6c>
   3b7dc:	mov	r3, #1
   3b7e0:	ldr	ip, [pc, #92]	; 3b844 <parse_snobuf_to_mask+0x70>
   3b7e4:	ldr	ip, [pc, ip]
   3b7e8:	b	3b7fc <parse_snobuf_to_mask+0x28>
   3b7ec:	ldr	r2, [ip, r2, lsl #2]
   3b7f0:	orr	r0, r2, r0
   3b7f4:	mov	r3, #1
   3b7f8:	add	r1, r1, #1
   3b7fc:	ldrb	r2, [r1]
   3b800:	cmp	r2, #43	; 0x2b
   3b804:	beq	3b7f4 <parse_snobuf_to_mask+0x20>
   3b808:	cmp	r2, #45	; 0x2d
   3b80c:	beq	3b834 <parse_snobuf_to_mask+0x60>
   3b810:	cmp	r2, #0
   3b814:	bxeq	lr
   3b818:	cmp	r3, #2
   3b81c:	beq	3b82c <parse_snobuf_to_mask+0x58>
   3b820:	cmp	r3, #1
   3b824:	beq	3b7ec <parse_snobuf_to_mask+0x18>
   3b828:	b	3b838 <parse_snobuf_to_mask+0x64>
   3b82c:	ldr	r2, [ip, r2, lsl #2]
   3b830:	bic	r0, r0, r2
   3b834:	mov	r3, #2
   3b838:	add	r1, r1, #1
   3b83c:	b	3b7fc <parse_snobuf_to_mask+0x28>
   3b840:	bx	lr
   3b844:	.word	0x0001f244

0003b848 <find_snomask_slot>:
   3b848:	mov	r0, #0
   3b84c:	ldr	r2, [pc, #48]	; 3b884 <find_snomask_slot+0x3c>
   3b850:	ldr	r2, [pc, r2]
   3b854:	mov	r1, #0
   3b858:	ldr	r3, [r2, r0, lsl #2]
   3b85c:	orr	r1, r3, r1
   3b860:	add	r0, r0, #1
   3b864:	cmp	r0, #128	; 0x80
   3b868:	bne	3b858 <find_snomask_slot+0x10>
   3b86c:	mov	r2, #1
   3b870:	mov	r0, r2
   3b874:	lsl	r2, r2, #1
   3b878:	tst	r0, r1
   3b87c:	bne	3b870 <find_snomask_slot+0x28>
   3b880:	bx	lr
   3b884:	.word	0x0001f1d8

0003b888 <restart_ssld>:
   3b888:	push	{r4, r5, r6, r7, fp, lr}
   3b88c:	add	fp, sp, #16
   3b890:	ldr	r5, [pc, #180]	; 3b94c <restart_ssld+0xc4>
   3b894:	ldr	r5, [pc, r5]
   3b898:	cmp	r5, #0
   3b89c:	beq	3b910 <restart_ssld+0x88>
   3b8a0:	mov	r6, #1
   3b8a4:	ldr	r7, [pc, #164]	; 3b950 <restart_ssld+0xc8>
   3b8a8:	add	r7, pc, r7
   3b8ac:	b	3b8b8 <restart_ssld+0x30>
   3b8b0:	cmp	r5, #0
   3b8b4:	beq	3b910 <restart_ssld+0x88>
   3b8b8:	ldr	r4, [r5]
   3b8bc:	ldr	r5, [r5, #8]
   3b8c0:	ldrb	r0, [r4, #53]	; 0x35
   3b8c4:	cmp	r0, #0
   3b8c8:	bne	3b8b0 <restart_ssld+0x28>
   3b8cc:	ldrb	r0, [r4, #52]	; 0x34
   3b8d0:	cmp	r0, #0
   3b8d4:	bne	3b8b0 <restart_ssld+0x28>
   3b8d8:	strb	r6, [r4, #52]	; 0x34
   3b8dc:	ldr	r0, [pc, #112]	; 3b954 <restart_ssld+0xcc>
   3b8e0:	ldr	r0, [pc, r0]
   3b8e4:	sub	r0, r0, #1
   3b8e8:	str	r0, [r7]
   3b8ec:	ldr	r0, [r4, #12]
   3b8f0:	cmp	r0, #0
   3b8f4:	bne	3b8b0 <restart_ssld+0x28>
   3b8f8:	ldr	r0, [r4, #24]
   3b8fc:	mov	r1, #9
   3b900:	bl	d478 <rb_kill@plt>
   3b904:	mov	r0, r4
   3b908:	bl	3b968 <free_ssl_daemon>
   3b90c:	b	3b8b0 <restart_ssld+0x28>
   3b910:	ldr	r0, [pc, #64]	; 3b958 <restart_ssld+0xd0>
   3b914:	add	r0, pc, r0
   3b918:	mov	r1, #0
   3b91c:	str	r1, [r0]
   3b920:	ldr	r0, [pc, #52]	; 3b95c <restart_ssld+0xd4>
   3b924:	add	r0, pc, r0
   3b928:	str	r1, [r0]
   3b92c:	ldr	r0, [pc, #44]	; 3b960 <restart_ssld+0xd8>
   3b930:	add	r0, pc, r0
   3b934:	strb	r1, [r0]
   3b938:	ldr	r0, [pc, #36]	; 3b964 <restart_ssld+0xdc>
   3b93c:	ldr	r0, [pc, r0]
   3b940:	ldr	r0, [r0, #300]	; 0x12c
   3b944:	pop	{r4, r5, r6, r7, fp, lr}
   3b948:	b	3ba70 <start_ssldaemon>
   3b94c:	.word	0x000308d0
   3b950:	.word	0x000308c8
   3b954:	.word	0x00030890
   3b958:	.word	0x00030864
   3b95c:	.word	0x00030850
   3b960:	.word	0x0003084c
   3b964:	.word	0x0001f014

0003b968 <free_ssl_daemon>:
   3b968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b96c:	add	fp, sp, #24
   3b970:	mov	r8, r0
   3b974:	ldr	r0, [r0, #12]
   3b978:	cmp	r0, #0
   3b97c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b980:	ldr	r6, [r8, #28]
   3b984:	cmp	r6, #0
   3b988:	bne	3b9ac <free_ssl_daemon+0x44>
   3b98c:	b	3b9e0 <free_ssl_daemon+0x78>
   3b990:	ldr	r0, [r5, #12]
   3b994:	bl	3c6b0 <rb_free>
   3b998:	mov	r0, r5
   3b99c:	bl	3c6b0 <rb_free>
   3b9a0:	ldr	r6, [r6, #8]
   3b9a4:	cmp	r6, #0
   3b9a8:	beq	3b9e0 <free_ssl_daemon+0x78>
   3b9ac:	ldr	r5, [r6]
   3b9b0:	ldr	r0, [r5, #36]	; 0x24
   3b9b4:	cmp	r0, #1
   3b9b8:	blt	3b990 <free_ssl_daemon+0x28>
   3b9bc:	add	r7, r5, #20
   3b9c0:	mov	r4, #0
   3b9c4:	ldr	r0, [r7, r4, lsl #2]
   3b9c8:	bl	db50 <rb_close@plt>
   3b9cc:	add	r4, r4, #1
   3b9d0:	ldr	r0, [r5, #36]	; 0x24
   3b9d4:	cmp	r4, r0
   3b9d8:	blt	3b9c4 <free_ssl_daemon+0x5c>
   3b9dc:	b	3b990 <free_ssl_daemon+0x28>
   3b9e0:	ldr	r6, [r8, #40]	; 0x28
   3b9e4:	cmp	r6, #0
   3b9e8:	bne	3ba0c <free_ssl_daemon+0xa4>
   3b9ec:	b	3ba40 <free_ssl_daemon+0xd8>
   3b9f0:	ldr	r0, [r5, #12]
   3b9f4:	bl	3c6b0 <rb_free>
   3b9f8:	mov	r0, r5
   3b9fc:	bl	3c6b0 <rb_free>
   3ba00:	ldr	r6, [r6, #8]
   3ba04:	cmp	r6, #0
   3ba08:	beq	3ba40 <free_ssl_daemon+0xd8>
   3ba0c:	ldr	r5, [r6]
   3ba10:	ldr	r0, [r5, #36]	; 0x24
   3ba14:	cmp	r0, #1
   3ba18:	blt	3b9f0 <free_ssl_daemon+0x88>
   3ba1c:	add	r7, r5, #20
   3ba20:	mov	r4, #0
   3ba24:	ldr	r0, [r7, r4, lsl #2]
   3ba28:	bl	db50 <rb_close@plt>
   3ba2c:	add	r4, r4, #1
   3ba30:	ldr	r0, [r5, #36]	; 0x24
   3ba34:	cmp	r4, r0
   3ba38:	blt	3ba24 <free_ssl_daemon+0xbc>
   3ba3c:	b	3b9f0 <free_ssl_daemon+0x88>
   3ba40:	ldr	r0, [r8, #16]
   3ba44:	bl	db50 <rb_close@plt>
   3ba48:	ldr	r0, [r8, #20]
   3ba4c:	bl	db50 <rb_close@plt>
   3ba50:	ldr	r1, [pc, #20]	; 3ba6c <free_ssl_daemon+0x104>
   3ba54:	add	r1, pc, r1
   3ba58:	mov	r0, r8
   3ba5c:	bl	3c8b4 <rb_dlinkDelete>
   3ba60:	mov	r0, r8
   3ba64:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ba68:	b	3c6b0 <rb_free>
   3ba6c:	.word	0x00030710

0003ba70 <start_ssldaemon>:
   3ba70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ba74:	add	fp, sp, #28
   3ba78:	sub	sp, sp, #188	; 0xbc
   3ba7c:	sub	sp, sp, #4096	; 0x1000
   3ba80:	mov	r8, r0
   3ba84:	ldr	r6, [pc, #972]	; 3be58 <start_ssldaemon+0x3e8>
   3ba88:	add	r6, pc, r6
   3ba8c:	ldrb	r0, [r6]
   3ba90:	mov	r4, #0
   3ba94:	cmp	r0, #0
   3ba98:	bne	3be4c <start_ssldaemon+0x3dc>
   3ba9c:	ldr	r0, [pc, #952]	; 3be5c <start_ssldaemon+0x3ec>
   3baa0:	ldr	r0, [pc, r0]
   3baa4:	cmp	r0, #21
   3baa8:	blt	3bb14 <start_ssldaemon+0xa4>
   3baac:	bl	d07c <rb_current_time@plt>
   3bab0:	ldr	r1, [pc, #936]	; 3be60 <start_ssldaemon+0x3f0>
   3bab4:	ldr	r1, [pc, r1]
   3bab8:	sub	r0, r0, r1
   3babc:	cmp	r0, #4
   3bac0:	bgt	3bb14 <start_ssldaemon+0xa4>
   3bac4:	mov	r4, #0
   3bac8:	ldr	r5, [pc, #916]	; 3be64 <start_ssldaemon+0x3f4>
   3bacc:	add	r5, pc, r5
   3bad0:	mov	r0, #0
   3bad4:	mov	r1, r5
   3bad8:	bl	e0b4 <ilog@plt>
   3badc:	mov	r0, #256	; 0x100
   3bae0:	mov	r1, #0
   3bae4:	mov	r2, r5
   3bae8:	bl	d634 <sendto_realops_snomask@plt>
   3baec:	ldr	r0, [pc, #884]	; 3be68 <start_ssldaemon+0x3f8>
   3baf0:	add	r0, pc, r0
   3baf4:	ldr	r1, [pc, #880]	; 3be6c <start_ssldaemon+0x3fc>
   3baf8:	add	r1, pc, r1
   3bafc:	mov	r2, #0
   3bb00:	mov	r3, #60	; 0x3c
   3bb04:	bl	d0e8 <rb_event_add@plt>
   3bb08:	mov	r0, #1
   3bb0c:	strb	r0, [r6]
   3bb10:	b	3be4c <start_ssldaemon+0x3dc>
   3bb14:	ldr	r0, [pc, #852]	; 3be70 <start_ssldaemon+0x400>
   3bb18:	ldr	r0, [pc, r0]
   3bb1c:	add	r0, r0, #1
   3bb20:	ldr	r1, [pc, #844]	; 3be74 <start_ssldaemon+0x404>
   3bb24:	add	r1, pc, r1
   3bb28:	str	r0, [r1]
   3bb2c:	bl	d07c <rb_current_time@plt>
   3bb30:	ldr	r1, [pc, #832]	; 3be78 <start_ssldaemon+0x408>
   3bb34:	add	r1, pc, r1
   3bb38:	str	r0, [r1]
   3bb3c:	ldr	r0, [pc, #824]	; 3be7c <start_ssldaemon+0x40c>
   3bb40:	ldr	r0, [pc, r0]
   3bb44:	cmp	r0, #0
   3bb48:	bne	3bbf0 <start_ssldaemon+0x180>
   3bb4c:	ldr	r5, [pc, #812]	; 3be80 <start_ssldaemon+0x410>
   3bb50:	ldr	r5, [pc, r5]
   3bb54:	ldr	r3, [r5, #60]	; 0x3c
   3bb58:	ldr	r6, [pc, #804]	; 3be84 <start_ssldaemon+0x414>
   3bb5c:	add	r6, pc, r6
   3bb60:	mov	r7, #47	; 0x2f
   3bb64:	str	r7, [sp]
   3bb68:	str	r6, [sp, #4]
   3bb6c:	add	r4, sp, #167	; 0xa7
   3bb70:	ldr	r2, [pc, #784]	; 3be88 <start_ssldaemon+0x418>
   3bb74:	add	r2, pc, r2
   3bb78:	mov	r0, r4
   3bb7c:	movw	r1, #4097	; 0x1001
   3bb80:	bl	de74 <snprintf@plt>
   3bb84:	mov	r0, r4
   3bb88:	mov	r1, #1
   3bb8c:	bl	e09c <access@plt>
   3bb90:	cmn	r0, #1
   3bb94:	bne	3bbdc <start_ssldaemon+0x16c>
   3bb98:	ldr	r9, [pc, #748]	; 3be8c <start_ssldaemon+0x41c>
   3bb9c:	ldr	r9, [pc, r9]
   3bba0:	ldr	r3, [r9]
   3bba4:	str	r7, [sp]
   3bba8:	str	r7, [sp, #4]
   3bbac:	str	r6, [sp, #8]
   3bbb0:	add	r4, sp, #167	; 0xa7
   3bbb4:	ldr	r2, [pc, #724]	; 3be90 <start_ssldaemon+0x420>
   3bbb8:	add	r2, pc, r2
   3bbbc:	mov	r0, r4
   3bbc0:	movw	r1, #4097	; 0x1001
   3bbc4:	bl	de74 <snprintf@plt>
   3bbc8:	mov	r0, r4
   3bbcc:	mov	r1, #1
   3bbd0:	bl	e09c <access@plt>
   3bbd4:	cmn	r0, #1
   3bbd8:	beq	3be24 <start_ssldaemon+0x3b4>
   3bbdc:	add	r0, sp, #167	; 0xa7
   3bbe0:	bl	3bf64 <rb_strdup>
   3bbe4:	ldr	r1, [pc, #688]	; 3be9c <start_ssldaemon+0x42c>
   3bbe8:	add	r1, pc, r1
   3bbec:	str	r0, [r1]
   3bbf0:	add	r5, sp, #24
   3bbf4:	ldr	r1, [pc, #676]	; 3bea0 <start_ssldaemon+0x430>
   3bbf8:	add	r1, pc, r1
   3bbfc:	mov	r0, r5
   3bc00:	mov	r2, #128	; 0x80
   3bc04:	bl	e510 <rb_strlcpy@plt>
   3bc08:	mov	r4, #0
   3bc0c:	str	r4, [sp, #156]	; 0x9c
   3bc10:	str	r5, [sp, #152]	; 0x98
   3bc14:	cmp	r8, #1
   3bc18:	blt	3be4c <start_ssldaemon+0x3dc>
   3bc1c:	mov	r4, #0
   3bc20:	add	r7, sp, #161	; 0xa1
   3bc24:	ldr	r6, [pc, #632]	; 3bea4 <start_ssldaemon+0x434>
   3bc28:	add	r6, pc, r6
   3bc2c:	add	sl, sp, #14
   3bc30:	sub	r0, fp, #40	; 0x28
   3bc34:	str	r0, [sp]
   3bc38:	ldr	r0, [pc, #616]	; 3bea8 <start_ssldaemon+0x438>
   3bc3c:	add	r0, pc, r0
   3bc40:	str	r0, [sp, #4]
   3bc44:	mov	r0, #1
   3bc48:	mov	r1, #2
   3bc4c:	mov	r2, #0
   3bc50:	sub	r3, fp, #36	; 0x24
   3bc54:	bl	d514 <rb_socketpair@plt>
   3bc58:	cmn	r0, #1
   3bc5c:	beq	3bda0 <start_ssldaemon+0x330>
   3bc60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3bc64:	mov	r1, #16384	; 0x4000
   3bc68:	bl	e210 <rb_set_buffers@plt>
   3bc6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bc70:	mov	r1, #16384	; 0x4000
   3bc74:	bl	e210 <rb_set_buffers@plt>
   3bc78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bc7c:	bl	db8c <rb_get_fd@plt>
   3bc80:	mov	r3, r0
   3bc84:	mov	r0, r7
   3bc88:	mov	r1, #6
   3bc8c:	mov	r2, r6
   3bc90:	bl	de74 <snprintf@plt>
   3bc94:	ldr	r0, [pc, #532]	; 3beb0 <start_ssldaemon+0x440>
   3bc98:	add	r0, pc, r0
   3bc9c:	mov	r1, r7
   3bca0:	mov	r2, #1
   3bca4:	bl	cf68 <rb_setenv@plt>
   3bca8:	sub	r0, fp, #44	; 0x2c
   3bcac:	sub	r1, fp, #48	; 0x30
   3bcb0:	ldr	r2, [pc, #508]	; 3beb4 <start_ssldaemon+0x444>
   3bcb4:	add	r2, pc, r2
   3bcb8:	bl	e2a0 <rb_pipe@plt>
   3bcbc:	cmn	r0, #1
   3bcc0:	beq	3bdbc <start_ssldaemon+0x34c>
   3bcc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3bcc8:	bl	db8c <rb_get_fd@plt>
   3bccc:	mov	r3, r0
   3bcd0:	mov	r0, r7
   3bcd4:	mov	r1, #6
   3bcd8:	mov	r2, r6
   3bcdc:	bl	de74 <snprintf@plt>
   3bce0:	ldr	r0, [pc, #468]	; 3bebc <start_ssldaemon+0x44c>
   3bce4:	add	r0, pc, r0
   3bce8:	mov	r1, r7
   3bcec:	mov	r2, #1
   3bcf0:	bl	cf68 <rb_setenv@plt>
   3bcf4:	bl	dc1c <getpid@plt>
   3bcf8:	mov	r3, r0
   3bcfc:	mov	r0, sl
   3bd00:	mov	r1, #10
   3bd04:	mov	r2, r6
   3bd08:	bl	de74 <snprintf@plt>
   3bd0c:	ldr	r0, [pc, #428]	; 3bec0 <start_ssldaemon+0x450>
   3bd10:	add	r0, pc, r0
   3bd14:	mov	r1, sl
   3bd18:	mov	r2, #1
   3bd1c:	bl	cf68 <rb_setenv@plt>
   3bd20:	ldr	r0, [pc, #412]	; 3bec4 <start_ssldaemon+0x454>
   3bd24:	ldr	r0, [pc, r0]
   3bd28:	add	r1, sp, #152	; 0x98
   3bd2c:	bl	e294 <rb_spawn_process@plt>
   3bd30:	cmn	r0, #1
   3bd34:	beq	3bde0 <start_ssldaemon+0x370>
   3bd38:	mov	r5, r0
   3bd3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bd40:	bl	db50 <rb_close@plt>
   3bd44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3bd48:	bl	db50 <rb_close@plt>
   3bd4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3bd50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3bd54:	mov	r2, r5
   3bd58:	bl	3bf94 <allocate_ssl_daemon>
   3bd5c:	mov	r9, r0
   3bd60:	add	r4, r4, #1
   3bd64:	ldr	r0, [pc, #352]	; 3becc <start_ssldaemon+0x45c>
   3bd68:	ldr	r0, [pc, r0]
   3bd6c:	ldrb	r0, [r0]
   3bd70:	cmp	r0, #0
   3bd74:	movne	r0, r9
   3bd78:	blne	3c008 <ssld_update_config_one>
   3bd7c:	ldr	r0, [r9, #16]
   3bd80:	mov	r1, r9
   3bd84:	bl	3c024 <ssl_read_ctl>
   3bd88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3bd8c:	mov	r1, r9
   3bd90:	bl	3c144 <ssl_do_pipe>
   3bd94:	cmp	r8, r4
   3bd98:	bne	3bc30 <start_ssldaemon+0x1c0>
   3bd9c:	b	3be4c <start_ssldaemon+0x3dc>
   3bda0:	bl	de38 <__errno_location@plt>
   3bda4:	ldr	r0, [r0]
   3bda8:	bl	dac0 <strerror@plt>
   3bdac:	mov	r2, r0
   3bdb0:	ldr	r1, [pc, #244]	; 3beac <start_ssldaemon+0x43c>
   3bdb4:	add	r1, pc, r1
   3bdb8:	b	3bdd4 <start_ssldaemon+0x364>
   3bdbc:	bl	de38 <__errno_location@plt>
   3bdc0:	ldr	r0, [r0]
   3bdc4:	bl	dac0 <strerror@plt>
   3bdc8:	mov	r2, r0
   3bdcc:	ldr	r1, [pc, #228]	; 3beb8 <start_ssldaemon+0x448>
   3bdd0:	add	r1, pc, r1
   3bdd4:	mov	r0, #0
   3bdd8:	bl	e0b4 <ilog@plt>
   3bddc:	b	3be4c <start_ssldaemon+0x3dc>
   3bde0:	bl	de38 <__errno_location@plt>
   3bde4:	ldr	r0, [r0]
   3bde8:	bl	dac0 <strerror@plt>
   3bdec:	mov	r2, r0
   3bdf0:	ldr	r1, [pc, #208]	; 3bec8 <start_ssldaemon+0x458>
   3bdf4:	add	r1, pc, r1
   3bdf8:	mov	r0, #0
   3bdfc:	bl	e0b4 <ilog@plt>
   3be00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3be04:	bl	db50 <rb_close@plt>
   3be08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3be0c:	bl	db50 <rb_close@plt>
   3be10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3be14:	bl	db50 <rb_close@plt>
   3be18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3be1c:	bl	db50 <rb_close@plt>
   3be20:	b	3be4c <start_ssldaemon+0x3dc>
   3be24:	ldr	r3, [r5, #60]	; 0x3c
   3be28:	ldr	r0, [r9]
   3be2c:	str	r0, [sp]
   3be30:	mov	r4, #0
   3be34:	ldr	r1, [pc, #88]	; 3be94 <start_ssldaemon+0x424>
   3be38:	add	r1, pc, r1
   3be3c:	ldr	r2, [pc, #84]	; 3be98 <start_ssldaemon+0x428>
   3be40:	add	r2, pc, r2
   3be44:	mov	r0, #0
   3be48:	bl	e0b4 <ilog@plt>
   3be4c:	mov	r0, r4
   3be50:	sub	sp, fp, #28
   3be54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3be58:	.word	0x000306f4
   3be5c:	.word	0x000306d4
   3be60:	.word	0x000306c4
   3be64:	.word	0x0000bcf4
   3be68:	.word	0x0000bd0e
   3be6c:	.word	0x000003d0
   3be70:	.word	0x0003065c
   3be74:	.word	0x00030650
   3be78:	.word	0x00030644
   3be7c:	.word	0x00030640
   3be80:	.word	0x0001eef8
   3be84:	.word	0x00009ff9
   3be88:	.word	0x0000bc9d
   3be8c:	.word	0x0001efe0
   3be90:	.word	0x0000bc64
   3be94:	.word	0x0000b9f4
   3be98:	.word	0x00009d15
   3be9c:	.word	0x00030598
   3bea0:	.word	0x0000bc5d
   3bea4:	.word	0x0000500c
   3bea8:	.word	0x0000bc2b
   3beac:	.word	0x0000bad1
   3beb0:	.word	0x0000bc1e
   3beb4:	.word	0x0000bc09
   3beb8:	.word	0x0000bafa
   3bebc:	.word	0x0000bc11
   3bec0:	.word	0x0000bbee
   3bec4:	.word	0x0003045c
   3bec8:	.word	0x0000bb13
   3becc:	.word	0x0001ebf8

0003bed0 <restart_ssld_event>:
   3bed0:	push	{r4, r5, fp, lr}
   3bed4:	add	fp, sp, #8
   3bed8:	ldr	r0, [pc, #108]	; 3bf4c <restart_ssld_event+0x7c>
   3bedc:	add	r0, pc, r0
   3bee0:	mov	r1, #0
   3bee4:	str	r1, [r0]
   3bee8:	ldr	r0, [pc, #96]	; 3bf50 <restart_ssld_event+0x80>
   3beec:	add	r0, pc, r0
   3bef0:	str	r1, [r0]
   3bef4:	ldr	r0, [pc, #88]	; 3bf54 <restart_ssld_event+0x84>
   3bef8:	add	r0, pc, r0
   3befc:	strb	r1, [r0]
   3bf00:	ldr	r0, [pc, #80]	; 3bf58 <restart_ssld_event+0x88>
   3bf04:	ldr	r0, [pc, r0]
   3bf08:	ldr	r5, [r0, #300]	; 0x12c
   3bf0c:	bl	deb0 <get_ssld_count@plt>
   3bf10:	cmp	r5, r0
   3bf14:	pople	{r4, r5, fp, pc}
   3bf18:	mov	r4, r0
   3bf1c:	ldr	r1, [pc, #56]	; 3bf5c <restart_ssld_event+0x8c>
   3bf20:	add	r1, pc, r1
   3bf24:	mov	r0, #0
   3bf28:	bl	e0b4 <ilog@plt>
   3bf2c:	ldr	r2, [pc, #44]	; 3bf60 <restart_ssld_event+0x90>
   3bf30:	add	r2, pc, r2
   3bf34:	mov	r0, #256	; 0x100
   3bf38:	mov	r1, #0
   3bf3c:	bl	d634 <sendto_realops_snomask@plt>
   3bf40:	sub	r0, r5, r4
   3bf44:	pop	{r4, r5, fp, lr}
   3bf48:	b	3ba70 <start_ssldaemon>
   3bf4c:	.word	0x0003029c
   3bf50:	.word	0x00030288
   3bf54:	.word	0x00030284
   3bf58:	.word	0x0001ea4c
   3bf5c:	.word	0x0000bb1c
   3bf60:	.word	0x0000bb31

0003bf64 <rb_strdup>:
   3bf64:	push	{r4, sl, fp, lr}
   3bf68:	add	fp, sp, #8
   3bf6c:	mov	r4, r0
   3bf70:	bl	dc94 <strlen@plt>
   3bf74:	add	r0, r0, #1
   3bf78:	bl	da84 <malloc@plt>
   3bf7c:	cmp	r0, #0
   3bf80:	beq	3bf90 <rb_strdup+0x2c>
   3bf84:	mov	r1, r4
   3bf88:	pop	{r4, sl, fp, lr}
   3bf8c:	b	d91c <strcpy@plt>
   3bf90:	bl	d448 <rb_outofmemory@plt>

0003bf94 <allocate_ssl_daemon>:
   3bf94:	push	{r4, r5, r6, r7, fp, lr}
   3bf98:	add	fp, sp, #16
   3bf9c:	mov	r4, #0
   3bfa0:	cmp	r0, #0
   3bfa4:	beq	3bff8 <allocate_ssl_daemon+0x64>
   3bfa8:	mov	r5, r2
   3bfac:	cmp	r2, #0
   3bfb0:	bmi	3bff8 <allocate_ssl_daemon+0x64>
   3bfb4:	mov	r6, r1
   3bfb8:	mov	r7, r0
   3bfbc:	mov	r0, #312	; 0x138
   3bfc0:	bl	3c690 <rb_malloc>
   3bfc4:	mov	r4, r0
   3bfc8:	str	r7, [r0, #16]
   3bfcc:	str	r6, [r0, #20]
   3bfd0:	str	r5, [r0, #24]
   3bfd4:	ldr	r0, [pc, #36]	; 3c000 <allocate_ssl_daemon+0x6c>
   3bfd8:	ldr	r0, [pc, r0]
   3bfdc:	add	r0, r0, #1
   3bfe0:	ldr	r1, [pc, #28]	; 3c004 <allocate_ssl_daemon+0x70>
   3bfe4:	add	r1, pc, r1
   3bfe8:	str	r0, [r1]
   3bfec:	mov	r0, r4
   3bff0:	mov	r1, r4
   3bff4:	bl	3c96c <rb_dlinkAdd>
   3bff8:	mov	r0, r4
   3bffc:	pop	{r4, r5, r6, r7, fp, pc}
   3c000:	.word	0x00030198
   3c004:	.word	0x0003018c

0003c008 <ssld_update_config_one>:
   3c008:	push	{r4, sl, fp, lr}
   3c00c:	add	fp, sp, #8
   3c010:	mov	r4, r0
   3c014:	bl	3d4b8 <send_certfp_method>
   3c018:	mov	r0, r4
   3c01c:	pop	{r4, sl, fp, lr}
   3c020:	b	3d510 <send_new_ssl_certs_one>

0003c024 <ssl_read_ctl>:
   3c024:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c028:	add	fp, sp, #24
   3c02c:	sub	sp, sp, #8
   3c030:	ldrb	r0, [r1, #53]	; 0x35
   3c034:	cmp	r0, #0
   3c038:	beq	3c044 <ssl_read_ctl+0x20>
   3c03c:	sub	sp, fp, #24
   3c040:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c044:	mov	r4, r1
   3c048:	mov	r0, #40	; 0x28
   3c04c:	bl	3c690 <rb_malloc>
   3c050:	mov	r5, r0
   3c054:	mov	r0, #1024	; 0x400
   3c058:	bl	3c690 <rb_malloc>
   3c05c:	mov	r1, r0
   3c060:	str	r0, [r5, #12]
   3c064:	ldr	r0, [r4, #16]
   3c068:	mov	r8, #4
   3c06c:	str	r8, [sp]
   3c070:	add	r3, r5, #20
   3c074:	mov	r2, #1024	; 0x400
   3c078:	bl	d808 <rb_recv_fd_buf@plt>
   3c07c:	str	r0, [r5, #16]
   3c080:	cmp	r0, #1
   3c084:	blt	3c0d8 <ssl_read_ctl+0xb4>
   3c088:	add	r6, r4, #28
   3c08c:	mov	r0, r5
   3c090:	mov	r1, r5
   3c094:	mov	r2, r6
   3c098:	bl	3cac8 <rb_dlinkAddTail>
   3c09c:	mov	r0, #40	; 0x28
   3c0a0:	bl	3c690 <rb_malloc>
   3c0a4:	mov	r5, r0
   3c0a8:	mov	r0, #1024	; 0x400
   3c0ac:	bl	3c690 <rb_malloc>
   3c0b0:	mov	r1, r0
   3c0b4:	str	r0, [r5, #12]
   3c0b8:	ldr	r0, [r4, #16]
   3c0bc:	str	r8, [sp]
   3c0c0:	add	r3, r5, #20
   3c0c4:	mov	r2, #1024	; 0x400
   3c0c8:	bl	d808 <rb_recv_fd_buf@plt>
   3c0cc:	str	r0, [r5, #16]
   3c0d0:	cmp	r0, #0
   3c0d4:	bgt	3c08c <ssl_read_ctl+0x68>
   3c0d8:	mov	r7, r0
   3c0dc:	ldr	r0, [r5, #12]
   3c0e0:	bl	3c6b0 <rb_free>
   3c0e4:	mov	r0, r5
   3c0e8:	bl	3c6b0 <rb_free>
   3c0ec:	cmp	r7, #0
   3c0f0:	beq	3c130 <ssl_read_ctl+0x10c>
   3c0f4:	bl	de38 <__errno_location@plt>
   3c0f8:	ldr	r0, [r0]
   3c0fc:	bl	dab4 <rb_ignore_errno@plt>
   3c100:	cmp	r0, #0
   3c104:	beq	3c130 <ssl_read_ctl+0x10c>
   3c108:	mov	r0, r4
   3c10c:	bl	3cbc0 <ssl_process_cmd_recv>
   3c110:	ldr	r0, [r4, #16]
   3c114:	ldr	r2, [pc, #36]	; 3c140 <ssl_read_ctl+0x11c>
   3c118:	add	r2, pc, r2
   3c11c:	mov	r1, #1
   3c120:	mov	r3, r4
   3c124:	sub	sp, fp, #24
   3c128:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c12c:	b	d304 <rb_setselect@plt>
   3c130:	mov	r0, r4
   3c134:	sub	sp, fp, #24
   3c138:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c13c:	b	3ca38 <ssl_dead>
   3c140:	.word	0xffffff04

0003c144 <ssl_do_pipe>:
   3c144:	push	{r4, r5, fp, lr}
   3c148:	add	fp, sp, #8
   3c14c:	mov	r4, r1
   3c150:	mov	r5, r0
   3c154:	ldr	r1, [pc, #84]	; 3c1b0 <ssl_do_pipe+0x6c>
   3c158:	add	r1, pc, r1
   3c15c:	mov	r2, #1
   3c160:	bl	e738 <rb_write@plt>
   3c164:	cmp	r0, #0
   3c168:	beq	3c1a4 <ssl_do_pipe+0x60>
   3c16c:	cmn	r0, #1
   3c170:	bgt	3c188 <ssl_do_pipe+0x44>
   3c174:	bl	de38 <__errno_location@plt>
   3c178:	ldr	r0, [r0]
   3c17c:	bl	dab4 <rb_ignore_errno@plt>
   3c180:	cmp	r0, #0
   3c184:	beq	3c1a4 <ssl_do_pipe+0x60>
   3c188:	ldr	r2, [pc, #36]	; 3c1b4 <ssl_do_pipe+0x70>
   3c18c:	add	r2, pc, r2
   3c190:	mov	r0, r5
   3c194:	mov	r1, #1
   3c198:	mov	r3, r4
   3c19c:	pop	{r4, r5, fp, lr}
   3c1a0:	b	d304 <rb_setselect@plt>
   3c1a4:	mov	r0, r4
   3c1a8:	pop	{r4, r5, fp, lr}
   3c1ac:	b	3ca38 <ssl_dead>
   3c1b0:	.word	0x0000bc25
   3c1b4:	.word	0xffffffb0

0003c1b8 <ssld_update_config>:
   3c1b8:	push	{r4, sl, fp, lr}
   3c1bc:	add	fp, sp, #8
   3c1c0:	ldr	r4, [pc, #60]	; 3c204 <ssld_update_config+0x4c>
   3c1c4:	ldr	r4, [pc, r4]
   3c1c8:	cmp	r4, #0
   3c1cc:	bne	3c1e0 <ssld_update_config+0x28>
   3c1d0:	b	3c200 <ssld_update_config+0x48>
   3c1d4:	ldr	r4, [r4, #8]
   3c1d8:	cmp	r4, #0
   3c1dc:	beq	3c200 <ssld_update_config+0x48>
   3c1e0:	ldr	r0, [r4]
   3c1e4:	ldrb	r1, [r0, #53]	; 0x35
   3c1e8:	cmp	r1, #0
   3c1ec:	bne	3c1d4 <ssld_update_config+0x1c>
   3c1f0:	ldrb	r1, [r0, #52]	; 0x34
   3c1f4:	cmp	r1, #0
   3c1f8:	bleq	3c008 <ssld_update_config_one>
   3c1fc:	b	3c1d4 <ssld_update_config+0x1c>
   3c200:	pop	{r4, sl, fp, pc}
   3c204:	.word	0x0002ffa0

0003c208 <start_ssld_accept>:
   3c208:	push	{r4, sl, fp, lr}
   3c20c:	add	fp, sp, #8
   3c210:	sub	sp, sp, #24
   3c214:	str	r1, [sp, #20]
   3c218:	str	r0, [sp, #16]
   3c21c:	mov	r0, #65	; 0x41
   3c220:	strb	r0, [sp, #11]
   3c224:	add	r0, sp, #11
   3c228:	add	r0, r0, #1
   3c22c:	mov	r1, r2
   3c230:	bl	3c278 <uint32_to_buf>
   3c234:	bl	3c280 <which_ssld>
   3c238:	mov	r4, r0
   3c23c:	cmp	r0, #0
   3c240:	beq	3c26c <start_ssld_accept+0x64>
   3c244:	ldr	r0, [r4, #12]
   3c248:	add	r0, r0, #1
   3c24c:	str	r0, [r4, #12]
   3c250:	mov	r0, #5
   3c254:	str	r0, [sp]
   3c258:	add	r1, sp, #16
   3c25c:	add	r3, sp, #11
   3c260:	mov	r0, r4
   3c264:	mov	r2, #2
   3c268:	bl	3c2e0 <ssl_cmd_write_queue>
   3c26c:	mov	r0, r4
   3c270:	sub	sp, fp, #8
   3c274:	pop	{r4, sl, fp, pc}

0003c278 <uint32_to_buf>:
   3c278:	str	r1, [r0]
   3c27c:	bx	lr

0003c280 <which_ssld>:
   3c280:	ldr	r1, [pc, #84]	; 3c2dc <which_ssld+0x5c>
   3c284:	ldr	r1, [pc, r1]
   3c288:	mov	r0, #0
   3c28c:	b	3c2a4 <which_ssld+0x24>
   3c290:	ldr	ip, [r0, #12]
   3c294:	ldr	r3, [r2, #12]
   3c298:	cmp	r3, ip
   3c29c:	movlt	r0, r2
   3c2a0:	ldr	r1, [r1, #8]
   3c2a4:	cmp	r1, #0
   3c2a8:	bxeq	lr
   3c2ac:	ldr	r2, [r1]
   3c2b0:	ldrb	r3, [r2, #53]	; 0x35
   3c2b4:	cmp	r3, #0
   3c2b8:	bne	3c2a0 <which_ssld+0x20>
   3c2bc:	ldrb	r3, [r2, #52]	; 0x34
   3c2c0:	cmp	r3, #0
   3c2c4:	bne	3c2a0 <which_ssld+0x20>
   3c2c8:	cmp	r0, #0
   3c2cc:	bne	3c290 <which_ssld+0x10>
   3c2d0:	mov	r0, r2
   3c2d4:	ldr	r1, [r1, #8]
   3c2d8:	b	3c2a4 <which_ssld+0x24>
   3c2dc:	.word	0x0002fee0

0003c2e0 <ssl_cmd_write_queue>:
   3c2e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c2e4:	add	fp, sp, #24
   3c2e8:	mov	r4, r0
   3c2ec:	ldrb	r0, [r0, #53]	; 0x35
   3c2f0:	cmp	r0, #0
   3c2f4:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c2f8:	mov	r6, r3
   3c2fc:	mov	r9, r2
   3c300:	mov	r8, r1
   3c304:	ldr	r5, [fp, #8]
   3c308:	mov	r0, #40	; 0x28
   3c30c:	bl	3c690 <rb_malloc>
   3c310:	mov	r7, r0
   3c314:	mov	r0, r5
   3c318:	bl	3c690 <rb_malloc>
   3c31c:	str	r0, [r7, #12]
   3c320:	mov	r1, r6
   3c324:	mov	r2, r5
   3c328:	bl	d40c <memcpy@plt>
   3c32c:	str	r5, [r7, #16]
   3c330:	cmp	r9, #1
   3c334:	blt	3c358 <ssl_cmd_write_queue+0x78>
   3c338:	sub	r0, r9, #1
   3c33c:	cmp	r0, #3
   3c340:	movcs	r0, #3
   3c344:	mov	r1, #4
   3c348:	add	r2, r1, r0, lsl #2
   3c34c:	add	r0, r7, #20
   3c350:	mov	r1, r8
   3c354:	bl	d40c <memcpy@plt>
   3c358:	str	r9, [r7, #36]	; 0x24
   3c35c:	add	r2, r4, #40	; 0x28
   3c360:	mov	r0, r7
   3c364:	mov	r1, r7
   3c368:	bl	3cac8 <rb_dlinkAddTail>
   3c36c:	ldr	r0, [r4, #16]
   3c370:	mov	r1, r4
   3c374:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c378:	b	3d670 <ssl_write_ctl>

0003c37c <start_ssld_connect>:
   3c37c:	push	{r4, sl, fp, lr}
   3c380:	add	fp, sp, #8
   3c384:	sub	sp, sp, #24
   3c388:	str	r1, [sp, #20]
   3c38c:	str	r0, [sp, #16]
   3c390:	mov	r0, #67	; 0x43
   3c394:	strb	r0, [sp, #11]
   3c398:	add	r0, sp, #11
   3c39c:	add	r0, r0, #1
   3c3a0:	mov	r1, r2
   3c3a4:	bl	3c278 <uint32_to_buf>
   3c3a8:	bl	3c280 <which_ssld>
   3c3ac:	mov	r4, r0
   3c3b0:	cmp	r0, #0
   3c3b4:	beq	3c3e0 <start_ssld_connect+0x64>
   3c3b8:	ldr	r0, [r4, #12]
   3c3bc:	add	r0, r0, #1
   3c3c0:	str	r0, [r4, #12]
   3c3c4:	mov	r0, #5
   3c3c8:	str	r0, [sp]
   3c3cc:	add	r1, sp, #16
   3c3d0:	add	r3, sp, #11
   3c3d4:	mov	r0, r4
   3c3d8:	mov	r2, #2
   3c3dc:	bl	3c2e0 <ssl_cmd_write_queue>
   3c3e0:	mov	r0, r4
   3c3e4:	sub	sp, fp, #8
   3c3e8:	pop	{r4, sl, fp, pc}

0003c3ec <ssld_decrement_clicount>:
   3c3ec:	push	{r4, sl, fp, lr}
   3c3f0:	add	fp, sp, #8
   3c3f4:	cmp	r0, #0
   3c3f8:	beq	3c448 <ssld_decrement_clicount+0x5c>
   3c3fc:	mov	r4, r0
   3c400:	ldr	r0, [r0, #12]
   3c404:	subs	r0, r0, #1
   3c408:	str	r0, [r4, #12]
   3c40c:	bne	3c430 <ssld_decrement_clicount+0x44>
   3c410:	ldrb	r0, [r4, #52]	; 0x34
   3c414:	cmp	r0, #0
   3c418:	beq	3c430 <ssld_decrement_clicount+0x44>
   3c41c:	mov	r0, #1
   3c420:	strb	r0, [r4, #53]	; 0x35
   3c424:	ldr	r0, [r4, #24]
   3c428:	mov	r1, #9
   3c42c:	bl	d478 <rb_kill@plt>
   3c430:	ldrb	r0, [r4, #53]	; 0x35
   3c434:	cmp	r0, #0
   3c438:	popeq	{r4, sl, fp, pc}
   3c43c:	ldr	r0, [r4, #12]
   3c440:	cmp	r0, #0
   3c444:	beq	3c44c <ssld_decrement_clicount+0x60>
   3c448:	pop	{r4, sl, fp, pc}
   3c44c:	mov	r0, r4
   3c450:	pop	{r4, sl, fp, lr}
   3c454:	b	3b968 <free_ssl_daemon>

0003c458 <start_zlib_session>:
   3c458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c45c:	add	fp, sp, #28
   3c460:	sub	sp, sp, #28
   3c464:	mov	r4, r0
   3c468:	ldr	r0, [r0, #432]	; 0x1b0
   3c46c:	mov	r1, #0
   3c470:	str	r1, [r0, #464]	; 0x1d0
   3c474:	ldrh	r7, [r0, #92]	; 0x5c
   3c478:	add	sl, r7, #6
   3c47c:	cmp	sl, #16384	; 0x4000
   3c480:	bls	3c4dc <start_zlib_session+0x84>
   3c484:	mov	r0, #16384	; 0x4000
   3c488:	str	r0, [sp]
   3c48c:	ldr	r5, [pc, #476]	; 3c670 <start_zlib_session+0x218>
   3c490:	add	r5, pc, r5
   3c494:	mov	r0, #256	; 0x100
   3c498:	mov	r1, #0
   3c49c:	mov	r2, r5
   3c4a0:	mov	r3, sl
   3c4a4:	bl	d634 <sendto_realops_snomask@plt>
   3c4a8:	mov	r0, #0
   3c4ac:	mov	r1, r5
   3c4b0:	mov	r2, sl
   3c4b4:	mov	r3, #16384	; 0x4000
   3c4b8:	bl	e0b4 <ilog@plt>
   3c4bc:	ldr	r3, [pc, #432]	; 3c674 <start_zlib_session+0x21c>
   3c4c0:	add	r3, pc, r3
   3c4c4:	mov	r0, r4
   3c4c8:	mov	r1, r4
   3c4cc:	mov	r2, r4
   3c4d0:	bl	e534 <exit_client@plt>
   3c4d4:	sub	sp, fp, #28
   3c4d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c4dc:	mov	r0, sl
   3c4e0:	bl	3c690 <rb_malloc>
   3c4e4:	mov	r9, r0
   3c4e8:	ldr	r0, [pc, #392]	; 3c678 <start_zlib_session+0x220>
   3c4ec:	ldr	r0, [pc, r0]
   3c4f0:	ldrb	r5, [r0, #72]	; 0x48
   3c4f4:	ldr	r0, [r4, #432]	; 0x1b0
   3c4f8:	ldr	r0, [r0, #300]	; 0x12c
   3c4fc:	bl	db8c <rb_get_fd@plt>
   3c500:	mov	r1, r0
   3c504:	add	r8, r9, #1
   3c508:	mov	r0, r8
   3c50c:	bl	3c278 <uint32_to_buf>
   3c510:	strb	r5, [r9, #5]
   3c514:	mov	r0, #48	; 0x30
   3c518:	bl	3c690 <rb_malloc>
   3c51c:	ldr	r1, [r4, #432]	; 0x1b0
   3c520:	str	r0, [r1, #456]	; 0x1c8
   3c524:	add	r5, r9, #6
   3c528:	mov	r6, #1
   3c52c:	ldr	r0, [r4, #432]	; 0x1b0
   3c530:	str	r6, [sp]
   3c534:	add	r0, r0, #80	; 0x50
   3c538:	mov	r1, r5
   3c53c:	mov	r2, r7
   3c540:	mov	r3, #1
   3c544:	bl	e54c <rb_linebuf_get@plt>
   3c548:	add	r5, r0, r5
   3c54c:	sub	r7, r7, r0
   3c550:	cmp	r0, #0
   3c554:	bgt	3c52c <start_zlib_session+0xd4>
   3c558:	mov	r0, #90	; 0x5a
   3c55c:	strb	r0, [r9]
   3c560:	ldr	r0, [pc, #276]	; 3c67c <start_zlib_session+0x224>
   3c564:	add	r0, pc, r0
   3c568:	add	r1, sp, #12
   3c56c:	str	r1, [sp]
   3c570:	str	r0, [sp, #4]
   3c574:	add	r3, sp, #16
   3c578:	mov	r0, #1
   3c57c:	mov	r1, #1
   3c580:	mov	r2, #0
   3c584:	bl	d514 <rb_socketpair@plt>
   3c588:	cmn	r0, #1
   3c58c:	beq	3c5f8 <start_zlib_session+0x1a0>
   3c590:	ldr	r0, [r4, #432]	; 0x1b0
   3c594:	ldr	r1, [r0, #300]	; 0x12c
   3c598:	ldr	r2, [sp, #16]
   3c59c:	str	r2, [sp, #24]
   3c5a0:	str	r1, [sp, #20]
   3c5a4:	ldr	r1, [sp, #12]
   3c5a8:	str	r1, [r0, #300]	; 0x12c
   3c5ac:	mov	r0, r4
   3c5b0:	bl	dbe0 <connid_get@plt>
   3c5b4:	mov	r1, r0
   3c5b8:	mov	r0, r8
   3c5bc:	bl	3c278 <uint32_to_buf>
   3c5c0:	bl	3c280 <which_ssld>
   3c5c4:	ldr	r1, [r4, #432]	; 0x1b0
   3c5c8:	str	r0, [r1, #440]	; 0x1b8
   3c5cc:	cmp	r0, #0
   3c5d0:	beq	3c648 <start_zlib_session+0x1f0>
   3c5d4:	ldr	r1, [r0, #12]
   3c5d8:	add	r1, r1, #1
   3c5dc:	str	r1, [r0, #12]
   3c5e0:	str	sl, [sp]
   3c5e4:	add	r1, sp, #20
   3c5e8:	mov	r2, #2
   3c5ec:	mov	r3, r9
   3c5f0:	bl	3c2e0 <ssl_cmd_write_queue>
   3c5f4:	b	3c660 <start_zlib_session+0x208>
   3c5f8:	bl	de38 <__errno_location@plt>
   3c5fc:	mov	r5, r0
   3c600:	ldr	r0, [r0]
   3c604:	bl	dac0 <strerror@plt>
   3c608:	mov	r3, r0
   3c60c:	ldr	r2, [pc, #108]	; 3c680 <start_zlib_session+0x228>
   3c610:	add	r2, pc, r2
   3c614:	mov	r0, #256	; 0x100
   3c618:	mov	r1, #0
   3c61c:	bl	d634 <sendto_realops_snomask@plt>
   3c620:	ldr	r0, [r5]
   3c624:	bl	dac0 <strerror@plt>
   3c628:	mov	r2, r0
   3c62c:	ldr	r1, [pc, #80]	; 3c684 <start_zlib_session+0x22c>
   3c630:	add	r1, pc, r1
   3c634:	mov	r0, #0
   3c638:	bl	e0b4 <ilog@plt>
   3c63c:	ldr	r3, [pc, #68]	; 3c688 <start_zlib_session+0x230>
   3c640:	add	r3, pc, r3
   3c644:	b	3c650 <start_zlib_session+0x1f8>
   3c648:	ldr	r3, [pc, #60]	; 3c68c <start_zlib_session+0x234>
   3c64c:	add	r3, pc, r3
   3c650:	mov	r0, r4
   3c654:	mov	r1, r4
   3c658:	mov	r2, r4
   3c65c:	bl	e534 <exit_client@plt>
   3c660:	mov	r0, r9
   3c664:	bl	3c6b0 <rb_free>
   3c668:	sub	sp, fp, #28
   3c66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c670:	.word	0x0000b492
   3c674:	.word	0x0000b4a5
   3c678:	.word	0x0001e690
   3c67c:	.word	0x0000b417
   3c680:	.word	0x0000b384
   3c684:	.word	0x0000b388
   3c688:	.word	0x0000b39d
   3c68c:	.word	0x0000b3b0

0003c690 <rb_malloc>:
   3c690:	push	{fp, lr}
   3c694:	mov	fp, sp
   3c698:	mov	r1, r0
   3c69c:	mov	r0, #1
   3c6a0:	bl	cfa4 <calloc@plt>
   3c6a4:	cmp	r0, #0
   3c6a8:	popne	{fp, pc}
   3c6ac:	bl	d448 <rb_outofmemory@plt>

0003c6b0 <rb_free>:
   3c6b0:	cmp	r0, #0
   3c6b4:	bxeq	lr
   3c6b8:	b	d328 <free@plt>

0003c6bc <get_ssld_count>:
   3c6bc:	ldr	r0, [pc, #4]	; 3c6c8 <get_ssld_count+0xc>
   3c6c0:	ldr	r0, [pc, r0]
   3c6c4:	bx	lr
   3c6c8:	.word	0x0002fab0

0003c6cc <ssld_foreach_info>:
   3c6cc:	push	{r4, r5, r6, r7, fp, lr}
   3c6d0:	add	fp, sp, #16
   3c6d4:	sub	sp, sp, #8
   3c6d8:	ldr	r6, [pc, #100]	; 3c744 <ssld_foreach_info+0x78>
   3c6dc:	ldr	r6, [pc, r6]
   3c6e0:	cmp	r6, #0
   3c6e4:	beq	3c73c <ssld_foreach_info+0x70>
   3c6e8:	mov	r7, r1
   3c6ec:	mov	r5, r0
   3c6f0:	b	3c70c <ssld_foreach_info+0x40>
   3c6f4:	add	r0, r0, #54	; 0x36
   3c6f8:	str	r0, [sp]
   3c6fc:	mov	r0, r7
   3c700:	blx	r5
   3c704:	cmp	r6, #0
   3c708:	beq	3c73c <ssld_foreach_info+0x70>
   3c70c:	ldr	r0, [r6]
   3c710:	ldr	r6, [r6, #8]
   3c714:	ldr	r2, [r0, #12]
   3c718:	ldr	r1, [r0, #24]
   3c71c:	ldrb	r4, [r0, #53]	; 0x35
   3c720:	mov	r3, #2
   3c724:	cmp	r4, #0
   3c728:	bne	3c6f4 <ssld_foreach_info+0x28>
   3c72c:	ldrb	r3, [r0, #52]	; 0x34
   3c730:	cmp	r3, #0
   3c734:	movwne	r3, #1
   3c738:	b	3c6f4 <ssld_foreach_info+0x28>
   3c73c:	sub	sp, fp, #16
   3c740:	pop	{r4, r5, r6, r7, fp, pc}
   3c744:	.word	0x0002fa88

0003c748 <init_ssld>:
   3c748:	push	{fp, lr}
   3c74c:	mov	fp, sp
   3c750:	ldr	r0, [pc, #52]	; 3c78c <init_ssld+0x44>
   3c754:	add	r0, pc, r0
   3c758:	ldr	r1, [pc, #48]	; 3c790 <init_ssld+0x48>
   3c75c:	add	r1, pc, r1
   3c760:	mov	r2, #0
   3c764:	mov	r3, #60	; 0x3c
   3c768:	bl	d220 <rb_event_addish@plt>
   3c76c:	ldr	r0, [pc, #32]	; 3c794 <init_ssld+0x4c>
   3c770:	add	r0, pc, r0
   3c774:	ldr	r1, [pc, #28]	; 3c798 <init_ssld+0x50>
   3c778:	add	r1, pc, r1
   3c77c:	mov	r2, #0
   3c780:	mov	r3, #60	; 0x3c
   3c784:	pop	{fp, lr}
   3c788:	b	d220 <rb_event_addish@plt>
   3c78c:	.word	0x0000b2c5
   3c790:	.word	0x00000038
   3c794:	.word	0x0000b2ba
   3c798:	.word	0x000000e8

0003c79c <collect_zipstats>:
   3c79c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3c7a0:	add	fp, sp, #24
   3c7a4:	sub	sp, sp, #72	; 0x48
   3c7a8:	mov	r0, #83	; 0x53
   3c7ac:	strb	r0, [sp, #4]
   3c7b0:	ldr	r0, [pc, #168]	; 3c860 <collect_zipstats+0xc4>
   3c7b4:	ldr	r0, [pc, r0]
   3c7b8:	ldr	r7, [r0]
   3c7bc:	cmp	r7, #0
   3c7c0:	beq	3c858 <collect_zipstats+0xbc>
   3c7c4:	add	r8, sp, #4
   3c7c8:	add	r5, r8, #5
   3c7cc:	add	r6, r8, #1
   3c7d0:	ldr	r9, [pc, #140]	; 3c864 <collect_zipstats+0xc8>
   3c7d4:	ldr	r9, [pc, r9]
   3c7d8:	b	3c7e8 <collect_zipstats+0x4c>
   3c7dc:	ldr	r7, [r7, #8]
   3c7e0:	cmp	r7, #0
   3c7e4:	beq	3c858 <collect_zipstats+0xbc>
   3c7e8:	ldr	r1, [r9]
   3c7ec:	ldr	r4, [r7]
   3c7f0:	ldr	r0, [r4, #432]	; 0x1b0
   3c7f4:	ldr	r2, [r0, #296]	; 0x128
   3c7f8:	and	r2, r1, r2
   3c7fc:	cmp	r2, r1
   3c800:	bne	3c7dc <collect_zipstats+0x40>
   3c804:	ldr	r0, [r0, #300]	; 0x12c
   3c808:	bl	db8c <rb_get_fd@plt>
   3c80c:	mov	r1, r0
   3c810:	mov	r0, r6
   3c814:	bl	3c278 <uint32_to_buf>
   3c818:	add	r1, r4, #88	; 0x58
   3c81c:	mov	r0, r5
   3c820:	mov	r2, #63	; 0x3f
   3c824:	bl	e510 <rb_strlcpy@plt>
   3c828:	mov	r0, r5
   3c82c:	bl	dc94 <strlen@plt>
   3c830:	ldr	r1, [r4, #432]	; 0x1b0
   3c834:	ldr	r1, [r1, #440]	; 0x1b8
   3c838:	add	r0, r0, #6
   3c83c:	str	r0, [sp]
   3c840:	mov	r0, r1
   3c844:	mov	r1, #0
   3c848:	mov	r2, #0
   3c84c:	mov	r3, r8
   3c850:	bl	3c2e0 <ssl_cmd_write_queue>
   3c854:	b	3c7dc <collect_zipstats+0x40>
   3c858:	sub	sp, fp, #24
   3c85c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3c860:	.word	0x0001e21c
   3c864:	.word	0x0001e110

0003c868 <cleanup_dead_ssl>:
   3c868:	push	{r4, sl, fp, lr}
   3c86c:	add	fp, sp, #8
   3c870:	ldr	r4, [pc, #56]	; 3c8b0 <cleanup_dead_ssl+0x48>
   3c874:	ldr	r4, [pc, r4]
   3c878:	cmp	r4, #0
   3c87c:	beq	3c8ac <cleanup_dead_ssl+0x44>
   3c880:	ldr	r0, [r4]
   3c884:	ldr	r4, [r4, #8]
   3c888:	ldrb	r1, [r0, #53]	; 0x35
   3c88c:	cmp	r1, #0
   3c890:	beq	3c878 <cleanup_dead_ssl+0x10>
   3c894:	ldr	r1, [r0, #12]
   3c898:	cmp	r1, #0
   3c89c:	bne	3c878 <cleanup_dead_ssl+0x10>
   3c8a0:	bl	3b968 <free_ssl_daemon>
   3c8a4:	cmp	r4, #0
   3c8a8:	bne	3c880 <cleanup_dead_ssl+0x18>
   3c8ac:	pop	{r4, sl, fp, pc}
   3c8b0:	.word	0x0002f8f0

0003c8b4 <rb_dlinkDelete>:
   3c8b4:	push	{fp, lr}
   3c8b8:	mov	fp, sp
   3c8bc:	cmp	r0, #0
   3c8c0:	beq	3c914 <rb_dlinkDelete+0x60>
   3c8c4:	cmp	r1, #0
   3c8c8:	beq	3c934 <rb_dlinkDelete+0x80>
   3c8cc:	ldr	ip, [r0, #4]
   3c8d0:	ldr	r3, [r0, #8]
   3c8d4:	add	r2, r3, #4
   3c8d8:	cmp	r3, #0
   3c8dc:	addeq	r2, r1, #4
   3c8e0:	str	ip, [r2]
   3c8e4:	ldmib	r0, {r2, ip}
   3c8e8:	cmp	r2, #0
   3c8ec:	mov	r3, r1
   3c8f0:	addne	r3, r2, #8
   3c8f4:	str	ip, [r3]
   3c8f8:	mov	r2, #0
   3c8fc:	str	r2, [r0, #4]
   3c900:	str	r2, [r0, #8]
   3c904:	ldr	r0, [r1, #8]
   3c908:	sub	r0, r0, #1
   3c90c:	str	r0, [r1, #8]
   3c910:	pop	{fp, pc}
   3c914:	ldr	r0, [pc, #56]	; 3c954 <rb_dlinkDelete+0xa0>
   3c918:	add	r0, pc, r0
   3c91c:	ldr	r1, [pc, #52]	; 3c958 <rb_dlinkDelete+0xa4>
   3c920:	add	r1, pc, r1
   3c924:	ldr	r3, [pc, #48]	; 3c95c <rb_dlinkDelete+0xa8>
   3c928:	add	r3, pc, r3
   3c92c:	mov	r2, #235	; 0xeb
   3c930:	bl	e7e0 <__assert_fail@plt>
   3c934:	ldr	r0, [pc, #36]	; 3c960 <rb_dlinkDelete+0xac>
   3c938:	add	r0, pc, r0
   3c93c:	ldr	r1, [pc, #32]	; 3c964 <rb_dlinkDelete+0xb0>
   3c940:	add	r1, pc, r1
   3c944:	ldr	r3, [pc, #28]	; 3c968 <rb_dlinkDelete+0xb4>
   3c948:	add	r3, pc, r3
   3c94c:	mov	r2, #236	; 0xec
   3c950:	bl	e7e0 <__assert_fail@plt>
   3c954:	.word	0x00003ff4
   3c958:	.word	0x00003ff6
   3c95c:	.word	0x00004091
   3c960:	.word	0x0000985d
   3c964:	.word	0x00003fd6
   3c968:	.word	0x00004071

0003c96c <rb_dlinkAdd>:
   3c96c:	push	{fp, lr}
   3c970:	mov	fp, sp
   3c974:	cmp	r0, #0
   3c978:	beq	3c9d8 <rb_dlinkAdd+0x6c>
   3c97c:	cmp	r1, #0
   3c980:	beq	3c9f8 <rb_dlinkAdd+0x8c>
   3c984:	mov	r2, #0
   3c988:	stm	r1, {r0, r2}
   3c98c:	ldr	r2, [pc, #132]	; 3ca18 <rb_dlinkAdd+0xac>
   3c990:	ldr	r2, [pc, r2]
   3c994:	str	r2, [r1, #8]
   3c998:	cmp	r2, #0
   3c99c:	ldr	r0, [pc, #120]	; 3ca1c <rb_dlinkAdd+0xb0>
   3c9a0:	add	r0, pc, r0
   3c9a4:	beq	3c9b4 <rb_dlinkAdd+0x48>
   3c9a8:	add	r2, r2, #4
   3c9ac:	str	r1, [r2]
   3c9b0:	b	3c9c4 <rb_dlinkAdd+0x58>
   3c9b4:	mov	r2, r0
   3c9b8:	ldr	r3, [r2, #4]!
   3c9bc:	cmp	r3, #0
   3c9c0:	streq	r1, [r2]
   3c9c4:	str	r1, [r0]
   3c9c8:	ldr	r1, [r0, #8]
   3c9cc:	add	r1, r1, #1
   3c9d0:	str	r1, [r0, #8]
   3c9d4:	pop	{fp, pc}
   3c9d8:	ldr	r0, [pc, #64]	; 3ca20 <rb_dlinkAdd+0xb4>
   3c9dc:	add	r0, pc, r0
   3c9e0:	ldr	r1, [pc, #60]	; 3ca24 <rb_dlinkAdd+0xb8>
   3c9e4:	add	r1, pc, r1
   3c9e8:	ldr	r3, [pc, #56]	; 3ca28 <rb_dlinkAdd+0xbc>
   3c9ec:	add	r3, pc, r3
   3c9f0:	mov	r2, #143	; 0x8f
   3c9f4:	bl	e7e0 <__assert_fail@plt>
   3c9f8:	ldr	r0, [pc, #44]	; 3ca2c <rb_dlinkAdd+0xc0>
   3c9fc:	add	r0, pc, r0
   3ca00:	ldr	r1, [pc, #40]	; 3ca30 <rb_dlinkAdd+0xc4>
   3ca04:	add	r1, pc, r1
   3ca08:	ldr	r3, [pc, #36]	; 3ca34 <rb_dlinkAdd+0xc8>
   3ca0c:	add	r3, pc, r3
   3ca10:	mov	r2, #144	; 0x90
   3ca14:	bl	e7e0 <__assert_fail@plt>
   3ca18:	.word	0x0002f7d4
   3ca1c:	.word	0x0002f7c4
   3ca20:	.word	0x00003f95
   3ca24:	.word	0x00003f32
   3ca28:	.word	0x00003f92
   3ca2c:	.word	0x00003f10
   3ca30:	.word	0x00003f12
   3ca34:	.word	0x00003f72

0003ca38 <ssl_dead>:
   3ca38:	push	{r4, sl, fp, lr}
   3ca3c:	add	fp, sp, #8
   3ca40:	mov	r4, r0
   3ca44:	ldrb	r0, [r0, #53]	; 0x35
   3ca48:	cmp	r0, #0
   3ca4c:	popne	{r4, sl, fp, pc}
   3ca50:	mov	r0, #1
   3ca54:	strb	r0, [r4, #53]	; 0x35
   3ca58:	ldr	r0, [r4, #24]
   3ca5c:	mov	r1, #9
   3ca60:	bl	d478 <rb_kill@plt>
   3ca64:	ldrb	r0, [r4, #52]	; 0x34
   3ca68:	cmp	r0, #0
   3ca6c:	beq	3ca74 <ssl_dead+0x3c>
   3ca70:	pop	{r4, sl, fp, pc}
   3ca74:	ldr	r0, [pc, #64]	; 3cabc <ssl_dead+0x84>
   3ca78:	ldr	r0, [pc, r0]
   3ca7c:	sub	r0, r0, #1
   3ca80:	ldr	r1, [pc, #56]	; 3cac0 <ssl_dead+0x88>
   3ca84:	add	r1, pc, r1
   3ca88:	str	r0, [r1]
   3ca8c:	ldr	r4, [pc, #48]	; 3cac4 <ssl_dead+0x8c>
   3ca90:	add	r4, pc, r4
   3ca94:	mov	r0, #0
   3ca98:	mov	r1, r4
   3ca9c:	bl	e0b4 <ilog@plt>
   3caa0:	mov	r0, #256	; 0x100
   3caa4:	mov	r1, #0
   3caa8:	mov	r2, r4
   3caac:	bl	d634 <sendto_realops_snomask@plt>
   3cab0:	mov	r0, #1
   3cab4:	pop	{r4, sl, fp, lr}
   3cab8:	b	3ba70 <start_ssldaemon>
   3cabc:	.word	0x0002f6f8
   3cac0:	.word	0x0002f6ec
   3cac4:	.word	0x0000aff3

0003cac8 <rb_dlinkAddTail>:
   3cac8:	push	{fp, lr}
   3cacc:	mov	fp, sp
   3cad0:	cmp	r1, #0
   3cad4:	beq	3cb3c <rb_dlinkAddTail+0x74>
   3cad8:	cmp	r2, #0
   3cadc:	beq	3cb5c <rb_dlinkAddTail+0x94>
   3cae0:	cmp	r0, #0
   3cae4:	beq	3cb7c <rb_dlinkAddTail+0xb4>
   3cae8:	mov	r3, #0
   3caec:	str	r3, [r1, #8]
   3caf0:	str	r0, [r1]
   3caf4:	ldr	r0, [r2, #4]
   3caf8:	str	r0, [r1, #4]
   3cafc:	ldr	r0, [r2, #4]
   3cb00:	cmp	r0, #0
   3cb04:	beq	3cb14 <rb_dlinkAddTail+0x4c>
   3cb08:	add	r0, r0, #8
   3cb0c:	str	r1, [r0]
   3cb10:	b	3cb20 <rb_dlinkAddTail+0x58>
   3cb14:	ldr	r0, [r2]
   3cb18:	cmp	r0, #0
   3cb1c:	beq	3cb34 <rb_dlinkAddTail+0x6c>
   3cb20:	str	r1, [r2, #4]
   3cb24:	ldr	r0, [r2, #8]
   3cb28:	add	r0, r0, #1
   3cb2c:	str	r0, [r2, #8]
   3cb30:	pop	{fp, pc}
   3cb34:	mov	r0, r2
   3cb38:	b	3cb0c <rb_dlinkAddTail+0x44>
   3cb3c:	ldr	r0, [pc, #88]	; 3cb9c <rb_dlinkAddTail+0xd4>
   3cb40:	add	r0, pc, r0
   3cb44:	ldr	r1, [pc, #84]	; 3cba0 <rb_dlinkAddTail+0xd8>
   3cb48:	add	r1, pc, r1
   3cb4c:	ldr	r3, [pc, #80]	; 3cba4 <rb_dlinkAddTail+0xdc>
   3cb50:	add	r3, pc, r3
   3cb54:	mov	r2, #211	; 0xd3
   3cb58:	bl	e7e0 <__assert_fail@plt>
   3cb5c:	ldr	r0, [pc, #68]	; 3cba8 <rb_dlinkAddTail+0xe0>
   3cb60:	add	r0, pc, r0
   3cb64:	ldr	r1, [pc, #64]	; 3cbac <rb_dlinkAddTail+0xe4>
   3cb68:	add	r1, pc, r1
   3cb6c:	ldr	r3, [pc, #60]	; 3cbb0 <rb_dlinkAddTail+0xe8>
   3cb70:	add	r3, pc, r3
   3cb74:	mov	r2, #212	; 0xd4
   3cb78:	bl	e7e0 <__assert_fail@plt>
   3cb7c:	ldr	r0, [pc, #48]	; 3cbb4 <rb_dlinkAddTail+0xec>
   3cb80:	add	r0, pc, r0
   3cb84:	ldr	r1, [pc, #44]	; 3cbb8 <rb_dlinkAddTail+0xf0>
   3cb88:	add	r1, pc, r1
   3cb8c:	ldr	r3, [pc, #40]	; 3cbbc <rb_dlinkAddTail+0xf4>
   3cb90:	add	r3, pc, r3
   3cb94:	mov	r2, #213	; 0xd5
   3cb98:	bl	e7e0 <__assert_fail@plt>
   3cb9c:	.word	0x00003dcc
   3cba0:	.word	0x00003dce
   3cba4:	.word	0x00003de2
   3cba8:	.word	0x00009635
   3cbac:	.word	0x00003dae
   3cbb0:	.word	0x00003dc2
   3cbb4:	.word	0x00003df1
   3cbb8:	.word	0x00003d8e
   3cbbc:	.word	0x00003da2

0003cbc0 <ssl_process_cmd_recv>:
   3cbc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cbc4:	add	fp, sp, #28
   3cbc8:	sub	sp, sp, #4
   3cbcc:	ldrb	r1, [r0, #53]	; 0x35
   3cbd0:	cmp	r1, #0
   3cbd4:	beq	3cbe0 <ssl_process_cmd_recv+0x20>
   3cbd8:	sub	sp, fp, #28
   3cbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cbe0:	mov	r4, r0
   3cbe4:	ldr	r9, [r4, #28]!
   3cbe8:	cmp	r9, #0
   3cbec:	beq	3cbd8 <ssl_process_cmd_recv+0x18>
   3cbf0:	add	r0, r0, #54	; 0x36
   3cbf4:	str	r0, [sp]
   3cbf8:	mov	r5, #0
   3cbfc:	ldr	r7, [pc, #624]	; 3ce74 <ssl_process_cmd_recv+0x2b4>
   3cc00:	ldr	r7, [pc, r7]
   3cc04:	ldr	sl, [pc, #620]	; 3ce78 <ssl_process_cmd_recv+0x2b8>
   3cc08:	add	sl, pc, sl
   3cc0c:	b	3cc58 <ssl_process_cmd_recv+0x98>
   3cc10:	ldr	r0, [r6, #16]
   3cc14:	sub	r3, r0, #1
   3cc18:	cmp	r3, #255	; 0xff
   3cc1c:	movcs	r3, #255	; 0xff
   3cc20:	add	r1, r2, #1
   3cc24:	ldr	r0, [sp]
   3cc28:	mov	r2, r3
   3cc2c:	bl	df7c <strncpy@plt>
   3cc30:	strb	r5, [r7]
   3cc34:	mov	r0, r8
   3cc38:	mov	r1, r4
   3cc3c:	bl	3c8b4 <rb_dlinkDelete>
   3cc40:	ldr	r0, [r6, #12]
   3cc44:	bl	3c6b0 <rb_free>
   3cc48:	mov	r0, r6
   3cc4c:	bl	3c6b0 <rb_free>
   3cc50:	cmp	r9, #0
   3cc54:	beq	3cbd8 <ssl_process_cmd_recv+0x18>
   3cc58:	mov	r8, r9
   3cc5c:	ldr	r6, [r9]
   3cc60:	ldr	r9, [r9, #8]
   3cc64:	ldr	r2, [r6, #12]
   3cc68:	ldrb	r0, [r2]
   3cc6c:	sub	r0, r0, #67	; 0x43
   3cc70:	cmp	r0, #55	; 0x37
   3cc74:	bhi	3cd7c <ssl_process_cmd_recv+0x1bc>
   3cc78:	add	r1, pc, #4
   3cc7c:	ldr	r0, [r1, r0, lsl #2]
   3cc80:	add	pc, r1, r0
   3cc84:	.word	0x000000e0
   3cc88:	.word	0x000000ec
   3cc8c:	.word	0x000000f8
   3cc90:	.word	0x00000120
   3cc94:	.word	0x000000f8
   3cc98:	.word	0x000000f8
   3cc9c:	.word	0x0000012c
   3cca0:	.word	0x000000f8
   3cca4:	.word	0x000000f8
   3cca8:	.word	0x000000f8
   3ccac:	.word	0x000000f8
   3ccb0:	.word	0x00000174
   3ccb4:	.word	0x00000184
   3ccb8:	.word	0x000000f8
   3ccbc:	.word	0x000000f8
   3ccc0:	.word	0x000000f8
   3ccc4:	.word	0x00000190
   3ccc8:	.word	0x000000f8
   3cccc:	.word	0x0000019c
   3ccd0:	.word	0xffffff8c
   3ccd4:	.word	0x000000f8
   3ccd8:	.word	0x000000f8
   3ccdc:	.word	0x000000f8
   3cce0:	.word	0x000000f8
   3cce4:	.word	0x000000f8
   3cce8:	.word	0x000000f8
   3ccec:	.word	0x000000f8
   3ccf0:	.word	0x000000f8
   3ccf4:	.word	0x000000f8
   3ccf8:	.word	0x000000f8
   3ccfc:	.word	0x000000f8
   3cd00:	.word	0x000000f8
   3cd04:	.word	0x000000f8
   3cd08:	.word	0x000000f8
   3cd0c:	.word	0x000000f8
   3cd10:	.word	0x000000f8
   3cd14:	.word	0x000000f8
   3cd18:	.word	0x000000f8
   3cd1c:	.word	0x000000f8
   3cd20:	.word	0x000000f8
   3cd24:	.word	0x000000f8
   3cd28:	.word	0x000000f8
   3cd2c:	.word	0x000000f8
   3cd30:	.word	0x000000f8
   3cd34:	.word	0x000000f8
   3cd38:	.word	0x000000f8
   3cd3c:	.word	0x000000f8
   3cd40:	.word	0x000000f8
   3cd44:	.word	0x000000f8
   3cd48:	.word	0x000000f8
   3cd4c:	.word	0x000000f8
   3cd50:	.word	0x000000f8
   3cd54:	.word	0x000000f8
   3cd58:	.word	0x000000f8
   3cd5c:	.word	0x000000f8
   3cd60:	.word	0xffffffac
   3cd64:	mov	r0, r6
   3cd68:	bl	3d0a4 <ssl_process_cipher_string>
   3cd6c:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3cd70:	mov	r0, r6
   3cd74:	bl	3cef8 <ssl_process_dead_fd>
   3cd78:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3cd7c:	mov	r0, #0
   3cd80:	ldr	r1, [pc, #268]	; 3ce94 <ssl_process_cmd_recv+0x2d4>
   3cd84:	add	r1, pc, r1
   3cd88:	bl	e0b4 <ilog@plt>
   3cd8c:	mov	r0, #256	; 0x100
   3cd90:	mov	r1, #0
   3cd94:	ldr	r2, [pc, #252]	; 3ce98 <ssl_process_cmd_recv+0x2d8>
   3cd98:	add	r2, pc, r2
   3cd9c:	bl	d634 <sendto_realops_snomask@plt>
   3cda0:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3cda4:	mov	r0, r6
   3cda8:	bl	3d10c <ssl_process_certfp>
   3cdac:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3cdb0:	ldr	r0, [pc, #200]	; 3ce80 <ssl_process_cmd_recv+0x2c0>
   3cdb4:	ldr	r0, [pc, r0]
   3cdb8:	strb	r5, [r0]
   3cdbc:	mov	r0, #0
   3cdc0:	mov	r5, r7
   3cdc4:	ldr	r7, [pc, #184]	; 3ce84 <ssl_process_cmd_recv+0x2c4>
   3cdc8:	add	r7, pc, r7
   3cdcc:	mov	r1, r7
   3cdd0:	mov	r2, sl
   3cdd4:	bl	e0b4 <ilog@plt>
   3cdd8:	mov	r0, #256	; 0x100
   3cddc:	mov	r1, #0
   3cde0:	mov	r2, r7
   3cde4:	mov	r7, r5
   3cde8:	mov	r5, #0
   3cdec:	mov	r3, sl
   3cdf0:	bl	d634 <sendto_realops_snomask@plt>
   3cdf4:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3cdf8:	ldr	r0, [pc, #124]	; 3ce7c <ssl_process_cmd_recv+0x2bc>
   3cdfc:	ldr	r0, [pc, r0]
   3ce00:	strb	r5, [r0]
   3ce04:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3ce08:	mov	r0, r6
   3ce0c:	bl	3ce9c <ssl_process_open_fd>
   3ce10:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3ce14:	mov	r0, r6
   3ce18:	bl	3d238 <ssl_process_zipstats>
   3ce1c:	b	3cc34 <ssl_process_cmd_recv+0x74>
   3ce20:	mov	r0, #0
   3ce24:	ldr	r1, [pc, #92]	; 3ce88 <ssl_process_cmd_recv+0x2c8>
   3ce28:	ldr	r1, [pc, r1]
   3ce2c:	strb	r0, [r1]
   3ce30:	strb	r0, [r7]
   3ce34:	ldr	r4, [pc, #80]	; 3ce8c <ssl_process_cmd_recv+0x2cc>
   3ce38:	add	r4, pc, r4
   3ce3c:	ldr	r5, [pc, #76]	; 3ce90 <ssl_process_cmd_recv+0x2d0>
   3ce40:	add	r5, pc, r5
   3ce44:	mov	r0, #0
   3ce48:	mov	r1, r4
   3ce4c:	mov	r2, r5
   3ce50:	bl	e0b4 <ilog@plt>
   3ce54:	mov	r0, #256	; 0x100
   3ce58:	mov	r1, #0
   3ce5c:	mov	r2, r4
   3ce60:	mov	r3, r5
   3ce64:	bl	d634 <sendto_realops_snomask@plt>
   3ce68:	sub	sp, fp, #28
   3ce6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ce70:	b	3d41c <ssl_killall>
   3ce74:	.word	0x0001dca4
   3ce78:	.word	0x0000aea4
   3ce7c:	.word	0x0001db64
   3ce80:	.word	0x0001dbac
   3ce84:	.word	0x0000abed
   3ce88:	.word	0x0001db38
   3ce8c:	.word	0x0000ab7d
   3ce90:	.word	0x0000acab
   3ce94:	.word	0x0000ada2
   3ce98:	.word	0x0000adb5

0003ce9c <ssl_process_open_fd>:
   3ce9c:	push	{fp, lr}
   3cea0:	mov	fp, sp
   3cea4:	ldr	r1, [r0, #16]
   3cea8:	cmp	r1, #5
   3ceac:	bcc	3cef4 <ssl_process_open_fd+0x58>
   3ceb0:	ldr	r0, [r0, #12]
   3ceb4:	add	r0, r0, #1
   3ceb8:	bl	3d4b0 <buf_to_uint32>
   3cebc:	bl	dfdc <find_cli_connid_hash@plt>
   3cec0:	cmp	r0, #0
   3cec4:	beq	3cef4 <ssl_process_open_fd+0x58>
   3cec8:	ldr	r1, [r0, #432]	; 0x1b0
   3cecc:	cmp	r1, #0
   3ced0:	popeq	{fp, pc}
   3ced4:	ldr	r2, [r1, #448]	; 0x1c0
   3ced8:	cmp	r2, #0
   3cedc:	beq	3cef4 <ssl_process_open_fd+0x58>
   3cee0:	mov	r3, #0
   3cee4:	str	r3, [r1, #448]	; 0x1c0
   3cee8:	mov	r1, #0
   3ceec:	pop	{fp, lr}
   3cef0:	bx	r2
   3cef4:	pop	{fp, pc}

0003cef8 <ssl_process_dead_fd>:
   3cef8:	push	{r4, r5, r6, sl, fp, lr}
   3cefc:	add	fp, sp, #16
   3cf00:	sub	sp, sp, #264	; 0x108
   3cf04:	ldr	r1, [r0, #16]
   3cf08:	cmp	r1, #6
   3cf0c:	bcc	3d060 <ssl_process_dead_fd+0x168>
   3cf10:	ldr	r5, [r0, #12]
   3cf14:	add	r0, r5, #1
   3cf18:	bl	3d4b0 <buf_to_uint32>
   3cf1c:	mov	r4, r0
   3cf20:	add	r1, r5, #5
   3cf24:	add	r5, sp, #8
   3cf28:	mov	r0, r5
   3cf2c:	mov	r2, #256	; 0x100
   3cf30:	bl	e510 <rb_strlcpy@plt>
   3cf34:	mov	r0, r4
   3cf38:	bl	dfdc <find_cli_connid_hash@plt>
   3cf3c:	cmp	r0, #0
   3cf40:	beq	3d060 <ssl_process_dead_fd+0x168>
   3cf44:	mov	r4, r0
   3cf48:	ldr	r0, [r0, #432]	; 0x1b0
   3cf4c:	cmp	r0, #0
   3cf50:	beq	3d060 <ssl_process_dead_fd+0x168>
   3cf54:	ldrh	r0, [r4, #80]	; 0x50
   3cf58:	sub	r0, r0, #1
   3cf5c:	cmp	r0, #31
   3cf60:	bhi	3cfd8 <ssl_process_dead_fd+0xe0>
   3cf64:	mov	r1, #1
   3cf68:	mov	r2, #-2147483645	; 0x80000003
   3cf6c:	tst	r2, r1, lsl r0
   3cf70:	beq	3cfd8 <ssl_process_dead_fd+0xe0>
   3cf74:	mov	r0, r4
   3cf78:	bl	dea4 <is_remote_connect@plt>
   3cf7c:	cmp	r0, #0
   3cf80:	beq	3cf98 <ssl_process_dead_fd+0xa0>
   3cf84:	ldrh	r0, [r4, #80]	; 0x50
   3cf88:	subs	r0, r0, #32
   3cf8c:	movwne	r0, #1
   3cf90:	lsl	r1, r0, #8
   3cf94:	b	3cf9c <ssl_process_dead_fd+0xa4>
   3cf98:	mov	r1, #0
   3cf9c:	str	r5, [sp]
   3cfa0:	add	r3, r4, #88	; 0x58
   3cfa4:	ldr	r6, [pc, #236]	; 3d098 <ssl_process_dead_fd+0x1a0>
   3cfa8:	add	r6, pc, r6
   3cfac:	mov	r0, #256	; 0x100
   3cfb0:	mov	r2, r6
   3cfb4:	bl	d634 <sendto_realops_snomask@plt>
   3cfb8:	mov	r0, r4
   3cfbc:	mov	r1, #1
   3cfc0:	bl	e168 <log_client_name@plt>
   3cfc4:	mov	r2, r0
   3cfc8:	mov	r0, #5
   3cfcc:	mov	r1, r6
   3cfd0:	mov	r3, r5
   3cfd4:	bl	e0b4 <ilog@plt>
   3cfd8:	ldr	r0, [r4, #432]	; 0x1b0
   3cfdc:	ldr	r2, [r0, #448]	; 0x1c0
   3cfe0:	cmp	r2, #0
   3cfe4:	beq	3d004 <ssl_process_dead_fd+0x10c>
   3cfe8:	mov	r1, #0
   3cfec:	str	r1, [r0, #448]	; 0x1c0
   3cff0:	mov	r0, r4
   3cff4:	mov	r1, #6
   3cff8:	blx	r2
   3cffc:	cmp	r0, #0
   3d000:	bne	3d060 <ssl_process_dead_fd+0x168>
   3d004:	ldrh	r0, [r4, #80]	; 0x50
   3d008:	sub	r1, r0, #1
   3d00c:	cmp	r1, #31
   3d010:	bhi	3d068 <ssl_process_dead_fd+0x170>
   3d014:	mov	r2, #1
   3d018:	mov	r3, #-2147483645	; 0x80000003
   3d01c:	tst	r3, r2, lsl r1
   3d020:	beq	3d068 <ssl_process_dead_fd+0x170>
   3d024:	add	r0, sp, #8
   3d028:	ldr	r1, [pc, #108]	; 3d09c <ssl_process_dead_fd+0x1a4>
   3d02c:	add	r1, pc, r1
   3d030:	mov	r2, #34	; 0x22
   3d034:	bl	dc88 <bcmp@plt>
   3d038:	cmp	r0, #0
   3d03c:	bne	3d050 <ssl_process_dead_fd+0x158>
   3d040:	ldr	r0, [r4, #432]	; 0x1b0
   3d044:	ldr	r0, [r0, #300]	; 0x12c
   3d048:	mov	r1, r4
   3d04c:	bl	d760 <read_packet@plt>
   3d050:	ldrh	r0, [r4, #64]	; 0x40
   3d054:	movw	r1, #16418	; 0x4022
   3d058:	tst	r0, r1
   3d05c:	beq	3d078 <ssl_process_dead_fd+0x180>
   3d060:	sub	sp, fp, #16
   3d064:	pop	{r4, r5, r6, sl, fp, pc}
   3d068:	cmp	r0, #9
   3d06c:	bcc	3d078 <ssl_process_dead_fd+0x180>
   3d070:	cmp	r0, #16
   3d074:	bne	3d024 <ssl_process_dead_fd+0x12c>
   3d078:	ldr	r2, [pc, #32]	; 3d0a0 <ssl_process_dead_fd+0x1a8>
   3d07c:	ldr	r2, [pc, r2]
   3d080:	add	r3, sp, #8
   3d084:	mov	r0, r4
   3d088:	mov	r1, r4
   3d08c:	bl	e534 <exit_client@plt>
   3d090:	sub	sp, fp, #16
   3d094:	pop	{r4, r5, r6, sl, fp, pc}
   3d098:	.word	0x0000abc8
   3d09c:	.word	0x000046b6
   3d0a0:	.word	0x0001dadc

0003d0a4 <ssl_process_cipher_string>:
   3d0a4:	push	{r4, r5, fp, lr}
   3d0a8:	add	fp, sp, #8
   3d0ac:	ldr	r1, [r0, #16]
   3d0b0:	cmp	r1, #6
   3d0b4:	bcc	3d108 <ssl_process_cipher_string+0x64>
   3d0b8:	ldr	r0, [r0, #12]
   3d0bc:	mov	r4, r0
   3d0c0:	ldrb	r1, [r4, #5]!
   3d0c4:	cmp	r1, #0
   3d0c8:	beq	3d108 <ssl_process_cipher_string+0x64>
   3d0cc:	add	r0, r0, #1
   3d0d0:	bl	3d4b0 <buf_to_uint32>
   3d0d4:	bl	dfdc <find_cli_connid_hash@plt>
   3d0d8:	cmp	r0, #0
   3d0dc:	beq	3d108 <ssl_process_cipher_string+0x64>
   3d0e0:	mov	r5, r0
   3d0e4:	ldr	r0, [r0, #432]	; 0x1b0
   3d0e8:	cmp	r0, #0
   3d0ec:	popeq	{r4, r5, fp, pc}
   3d0f0:	ldr	r0, [r0, #292]	; 0x124
   3d0f4:	bl	3c6b0 <rb_free>
   3d0f8:	mov	r0, r4
   3d0fc:	bl	3bf64 <rb_strdup>
   3d100:	ldr	r1, [r5, #432]	; 0x1b0
   3d104:	str	r0, [r1, #292]	; 0x124
   3d108:	pop	{r4, r5, fp, pc}

0003d10c <ssl_process_certfp>:
   3d10c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d110:	add	fp, sp, #28
   3d114:	sub	sp, sp, #4
   3d118:	ldr	r1, [r0, #16]
   3d11c:	cmp	r1, #77	; 0x4d
   3d120:	bhi	3d21c <ssl_process_certfp+0x110>
   3d124:	ldr	r7, [r0, #12]
   3d128:	add	r0, r7, #1
   3d12c:	bl	3d4b0 <buf_to_uint32>
   3d130:	mov	r6, r0
   3d134:	add	r0, r7, #5
   3d138:	bl	3d4b0 <buf_to_uint32>
   3d13c:	mov	r5, r0
   3d140:	add	r0, r7, #9
   3d144:	bl	3d4b0 <buf_to_uint32>
   3d148:	mov	r4, r0
   3d14c:	mov	r0, r6
   3d150:	bl	dfdc <find_cli_connid_hash@plt>
   3d154:	cmp	r0, #0
   3d158:	beq	3d21c <ssl_process_certfp+0x110>
   3d15c:	mov	r6, r0
   3d160:	cmp	r5, #3
   3d164:	bcs	3d174 <ssl_process_certfp+0x68>
   3d168:	ldr	sl, [pc, #180]	; 3d224 <ssl_process_certfp+0x118>
   3d16c:	add	sl, pc, sl
   3d170:	b	3d1a0 <ssl_process_certfp+0x94>
   3d174:	movw	r0, #4098	; 0x1002
   3d178:	cmp	r5, r0
   3d17c:	beq	3d198 <ssl_process_certfp+0x8c>
   3d180:	movw	r0, #4097	; 0x1001
   3d184:	cmp	r5, r0
   3d188:	bne	3d21c <ssl_process_certfp+0x110>
   3d18c:	ldr	sl, [pc, #148]	; 3d228 <ssl_process_certfp+0x11c>
   3d190:	add	sl, pc, sl
   3d194:	b	3d1a0 <ssl_process_certfp+0x94>
   3d198:	ldr	sl, [pc, #140]	; 3d22c <ssl_process_certfp+0x120>
   3d19c:	add	sl, pc, sl
   3d1a0:	mov	r0, sl
   3d1a4:	bl	dc94 <strlen@plt>
   3d1a8:	mov	r9, r0
   3d1ac:	str	r6, [sp]
   3d1b0:	ldr	r0, [r6, #444]	; 0x1bc
   3d1b4:	bl	3c6b0 <rb_free>
   3d1b8:	mov	r0, #1
   3d1bc:	orr	r0, r0, r4, lsl #1
   3d1c0:	add	r5, r0, r9
   3d1c4:	mov	r0, r5
   3d1c8:	bl	3c690 <rb_malloc>
   3d1cc:	mov	r8, r0
   3d1d0:	mov	r1, sl
   3d1d4:	mov	r2, r5
   3d1d8:	bl	e510 <rb_strlcpy@plt>
   3d1dc:	cmp	r4, #0
   3d1e0:	beq	3d214 <ssl_process_certfp+0x108>
   3d1e4:	add	r6, r7, #13
   3d1e8:	add	r5, r8, r9
   3d1ec:	ldr	r7, [pc, #60]	; 3d230 <ssl_process_certfp+0x124>
   3d1f0:	add	r7, pc, r7
   3d1f4:	ldrb	r3, [r6], #1
   3d1f8:	mov	r0, r5
   3d1fc:	mov	r1, #3
   3d200:	mov	r2, r7
   3d204:	bl	de74 <snprintf@plt>
   3d208:	add	r5, r5, #2
   3d20c:	subs	r4, r4, #1
   3d210:	bne	3d1f4 <ssl_process_certfp+0xe8>
   3d214:	ldr	r0, [sp]
   3d218:	str	r8, [r0, #444]	; 0x1bc
   3d21c:	sub	sp, fp, #28
   3d220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d224:	.word	0x000089e9
   3d228:	.word	0x0000a9f6
   3d22c:	.word	0x0000a9f9
   3d230:	.word	0x0000a9b4
   3d234:	.word	0xe320f000

0003d238 <ssl_process_zipstats>:
   3d238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d23c:	add	fp, sp, #28
   3d240:	sub	sp, sp, #28
   3d244:	ldr	r0, [r0, #12]
   3d248:	add	r1, sp, #4
   3d24c:	mov	r2, #24
   3d250:	bl	da54 <rb_string_to_array@plt>
   3d254:	cmp	r0, #24
   3d258:	bcc	3d404 <ssl_process_zipstats+0x1cc>
   3d25c:	ldr	r1, [sp, #8]
   3d260:	mov	r0, #0
   3d264:	bl	df04 <find_server@plt>
   3d268:	cmp	r0, #0
   3d26c:	beq	3d404 <ssl_process_zipstats+0x1cc>
   3d270:	mov	r4, r0
   3d274:	ldr	r0, [r0, #432]	; 0x1b0
   3d278:	cmp	r0, #0
   3d27c:	beq	3d404 <ssl_process_zipstats+0x1cc>
   3d280:	ldr	r1, [r0, #296]	; 0x128
   3d284:	ldr	r2, [pc, #396]	; 3d418 <ssl_process_zipstats+0x1e0>
   3d288:	ldr	r2, [pc, r2]
   3d28c:	ldr	r2, [r2]
   3d290:	and	r1, r2, r1
   3d294:	cmp	r1, r2
   3d298:	bne	3d404 <ssl_process_zipstats+0x1cc>
   3d29c:	ldr	r0, [r0, #456]	; 0x1c8
   3d2a0:	cmp	r0, #0
   3d2a4:	bne	3d2b8 <ssl_process_zipstats+0x80>
   3d2a8:	mov	r0, #48	; 0x30
   3d2ac:	bl	3c690 <rb_malloc>
   3d2b0:	ldr	r1, [r4, #432]	; 0x1b0
   3d2b4:	str	r0, [r1, #456]	; 0x1c8
   3d2b8:	ldr	r0, [r4, #432]	; 0x1b0
   3d2bc:	ldr	r6, [r0, #456]	; 0x1c8
   3d2c0:	ldr	r0, [sp, #12]
   3d2c4:	mov	r1, #0
   3d2c8:	mov	r2, #10
   3d2cc:	bl	dfe8 <strtoull@plt>
   3d2d0:	ldrd	r2, [r6]
   3d2d4:	adds	r0, r2, r0
   3d2d8:	adc	r1, r3, r1
   3d2dc:	strd	r0, [r6]
   3d2e0:	ldr	r0, [sp, #16]
   3d2e4:	mov	r1, #0
   3d2e8:	mov	r2, #10
   3d2ec:	bl	dfe8 <strtoull@plt>
   3d2f0:	mov	r7, r6
   3d2f4:	ldr	r2, [r7, #8]!
   3d2f8:	adds	r0, r2, r0
   3d2fc:	str	r0, [r7]
   3d300:	ldr	r0, [r6, #12]
   3d304:	adc	r0, r0, r1
   3d308:	str	r0, [r6, #12]
   3d30c:	ldr	r0, [sp, #20]
   3d310:	mov	r1, #0
   3d314:	mov	r2, #10
   3d318:	bl	dfe8 <strtoull@plt>
   3d31c:	mov	sl, r6
   3d320:	ldr	r2, [sl, #16]!
   3d324:	adds	r0, r2, r0
   3d328:	str	r0, [sl]
   3d32c:	ldr	r0, [r6, #20]
   3d330:	adc	r0, r0, r1
   3d334:	str	r0, [r6, #20]
   3d338:	ldr	r0, [sp, #24]
   3d33c:	mov	r1, #0
   3d340:	mov	r2, #10
   3d344:	bl	dfe8 <strtoull@plt>
   3d348:	ldrd	r4, [r6]
   3d34c:	ldrd	r2, [r6, #24]
   3d350:	adds	r8, r2, r0
   3d354:	adc	r9, r3, r1
   3d358:	orrs	r0, r4, r5
   3d35c:	strd	r8, [r6, #24]
   3d360:	beq	3d3a4 <ssl_process_zipstats+0x16c>
   3d364:	ldrd	r0, [r7]
   3d368:	subs	r0, r4, r0
   3d36c:	sbc	r1, r5, r1
   3d370:	bl	40504 <__aeabi_ul2d>
   3d374:	mov	r7, r0
   3d378:	str	r1, [sp]
   3d37c:	mov	r0, r4
   3d380:	mov	r1, r5
   3d384:	bl	40504 <__aeabi_ul2d>
   3d388:	vldr	d16, [pc, #128]	; 3d410 <ssl_process_zipstats+0x1d8>
   3d38c:	vmov	d17, r0, r1
   3d390:	ldr	r0, [sp]
   3d394:	vmov	d18, r7, r0
   3d398:	vdiv.f64	d17, d18, d17
   3d39c:	vmul.f64	d16, d17, d16
   3d3a0:	b	3d3a8 <ssl_process_zipstats+0x170>
   3d3a4:	vmov.i32	d16, #0	; 0x00000000
   3d3a8:	vstr	d16, [r6, #32]
   3d3ac:	ldm	sl, {r4, r7}
   3d3b0:	orrs	r0, r4, r7
   3d3b4:	beq	3d3f8 <ssl_process_zipstats+0x1c0>
   3d3b8:	subs	r0, r4, r8
   3d3bc:	sbc	r1, r7, r9
   3d3c0:	bl	40504 <__aeabi_ul2d>
   3d3c4:	mov	r8, r0
   3d3c8:	mov	r5, r1
   3d3cc:	mov	r0, r4
   3d3d0:	mov	r1, r7
   3d3d4:	bl	40504 <__aeabi_ul2d>
   3d3d8:	vldr	d16, [pc, #48]	; 3d410 <ssl_process_zipstats+0x1d8>
   3d3dc:	vmov	d17, r0, r1
   3d3e0:	vmov	d18, r8, r5
   3d3e4:	vdiv.f64	d17, d18, d17
   3d3e8:	vmul.f64	d16, d17, d16
   3d3ec:	vstr	d16, [r6, #40]	; 0x28
   3d3f0:	sub	sp, fp, #28
   3d3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d3f8:	mov	r0, #0
   3d3fc:	str	r0, [r6, #40]	; 0x28
   3d400:	str	r0, [r6, #44]	; 0x2c
   3d404:	sub	sp, fp, #28
   3d408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d40c:	nop	{0}
   3d410:	.word	0x00000000
   3d414:	.word	0x40590000
   3d418:	.word	0x0001d65c

0003d41c <ssl_killall>:
   3d41c:	push	{r4, r5, r6, r7, fp, lr}
   3d420:	add	fp, sp, #16
   3d424:	ldr	r5, [pc, #120]	; 3d4a4 <ssl_killall+0x88>
   3d428:	ldr	r5, [pc, r5]
   3d42c:	cmp	r5, #0
   3d430:	beq	3d4a0 <ssl_killall+0x84>
   3d434:	mov	r6, #1
   3d438:	ldr	r7, [pc, #104]	; 3d4a8 <ssl_killall+0x8c>
   3d43c:	add	r7, pc, r7
   3d440:	b	3d468 <ssl_killall+0x4c>
   3d444:	ldr	r0, [r4, #24]
   3d448:	mov	r1, #9
   3d44c:	bl	d478 <rb_kill@plt>
   3d450:	ldr	r0, [r4, #12]
   3d454:	cmp	r0, #0
   3d458:	moveq	r0, r4
   3d45c:	bleq	3b968 <free_ssl_daemon>
   3d460:	cmp	r5, #0
   3d464:	beq	3d4a0 <ssl_killall+0x84>
   3d468:	ldr	r4, [r5]
   3d46c:	ldr	r5, [r5, #8]
   3d470:	ldrb	r0, [r4, #53]	; 0x35
   3d474:	cmp	r0, #0
   3d478:	bne	3d460 <ssl_killall+0x44>
   3d47c:	strb	r6, [r4, #53]	; 0x35
   3d480:	ldrb	r0, [r4, #52]	; 0x34
   3d484:	cmp	r0, #0
   3d488:	bne	3d444 <ssl_killall+0x28>
   3d48c:	ldr	r0, [pc, #24]	; 3d4ac <ssl_killall+0x90>
   3d490:	ldr	r0, [pc, r0]
   3d494:	sub	r0, r0, #1
   3d498:	str	r0, [r7]
   3d49c:	b	3d444 <ssl_killall+0x28>
   3d4a0:	pop	{r4, r5, r6, r7, fp, pc}
   3d4a4:	.word	0x0002ed3c
   3d4a8:	.word	0x0002ed34
   3d4ac:	.word	0x0002ece0

0003d4b0 <buf_to_uint32>:
   3d4b0:	ldr	r0, [r0]
   3d4b4:	bx	lr

0003d4b8 <send_certfp_method>:
   3d4b8:	push	{r4, r5, fp, lr}
   3d4bc:	add	fp, sp, #8
   3d4c0:	sub	sp, sp, #16
   3d4c4:	mov	r4, r0
   3d4c8:	mov	r0, #70	; 0x46
   3d4cc:	strb	r0, [sp, #11]
   3d4d0:	ldr	r0, [pc, #52]	; 3d50c <send_certfp_method+0x54>
   3d4d4:	ldr	r0, [pc, r0]
   3d4d8:	ldr	r1, [r0, #364]	; 0x16c
   3d4dc:	add	r5, sp, #11
   3d4e0:	add	r0, r5, #1
   3d4e4:	bl	3c278 <uint32_to_buf>
   3d4e8:	mov	r0, #5
   3d4ec:	str	r0, [sp]
   3d4f0:	mov	r0, r4
   3d4f4:	mov	r1, #0
   3d4f8:	mov	r2, #0
   3d4fc:	mov	r3, r5
   3d500:	bl	3c2e0 <ssl_cmd_write_queue>
   3d504:	sub	sp, fp, #8
   3d508:	pop	{r4, r5, fp, pc}
   3d50c:	.word	0x0001d6a8

0003d510 <send_new_ssl_certs_one>:
   3d510:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d514:	add	fp, sp, #24
   3d518:	sub	sp, sp, #32
   3d51c:	ldr	r5, [pc, #308]	; 3d658 <send_new_ssl_certs_one+0x148>
   3d520:	ldr	r5, [pc, r5]
   3d524:	ldr	r9, [r5, #288]	; 0x120
   3d528:	cmp	r9, #0
   3d52c:	beq	3d650 <send_new_ssl_certs_one+0x140>
   3d530:	mov	r8, r0
   3d534:	mov	r0, r9
   3d538:	bl	dc94 <strlen@plt>
   3d53c:	add	r6, r0, #5
   3d540:	ldr	r7, [r5, #280]	; 0x118
   3d544:	cmp	r7, #0
   3d548:	beq	3d558 <send_new_ssl_certs_one+0x48>
   3d54c:	mov	r0, r7
   3d550:	bl	dc94 <strlen@plt>
   3d554:	add	r6, r0, r6
   3d558:	ldr	r4, [r5, #292]	; 0x124
   3d55c:	cmp	r4, #0
   3d560:	beq	3d570 <send_new_ssl_certs_one+0x60>
   3d564:	mov	r0, r4
   3d568:	bl	dc94 <strlen@plt>
   3d56c:	add	r6, r0, r6
   3d570:	ldr	r5, [r5, #296]	; 0x128
   3d574:	cmp	r5, #0
   3d578:	beq	3d588 <send_new_ssl_certs_one+0x78>
   3d57c:	mov	r0, r5
   3d580:	bl	dc94 <strlen@plt>
   3d584:	add	r6, r0, r6
   3d588:	cmp	r6, #16384	; 0x4000
   3d58c:	bls	3d5d0 <send_new_ssl_certs_one+0xc0>
   3d590:	mov	r0, #16384	; 0x4000
   3d594:	str	r0, [sp]
   3d598:	ldr	r4, [pc, #204]	; 3d66c <send_new_ssl_certs_one+0x15c>
   3d59c:	add	r4, pc, r4
   3d5a0:	mov	r0, #256	; 0x100
   3d5a4:	mov	r1, #0
   3d5a8:	mov	r2, r4
   3d5ac:	mov	r3, r6
   3d5b0:	bl	d634 <sendto_realops_snomask@plt>
   3d5b4:	mov	r0, #0
   3d5b8:	mov	r1, r4
   3d5bc:	mov	r2, r6
   3d5c0:	mov	r3, #16384	; 0x4000
   3d5c4:	sub	sp, fp, #24
   3d5c8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d5cc:	b	e0b4 <ilog@plt>
   3d5d0:	mov	r0, #0
   3d5d4:	ldr	r1, [pc, #128]	; 3d65c <send_new_ssl_certs_one+0x14c>
   3d5d8:	add	r1, pc, r1
   3d5dc:	cmp	r5, #0
   3d5e0:	moveq	r5, r1
   3d5e4:	cmp	r4, #0
   3d5e8:	moveq	r4, r1
   3d5ec:	cmp	r7, #0
   3d5f0:	moveq	r7, r1
   3d5f4:	str	r9, [sp]
   3d5f8:	stmib	sp, {r0, r7}
   3d5fc:	str	r0, [sp, #12]
   3d600:	str	r4, [sp, #16]
   3d604:	str	r0, [sp, #20]
   3d608:	str	r5, [sp, #24]
   3d60c:	str	r0, [sp, #28]
   3d610:	ldr	r0, [pc, #72]	; 3d660 <send_new_ssl_certs_one+0x150>
   3d614:	add	r0, pc, r0
   3d618:	ldr	r2, [pc, #68]	; 3d664 <send_new_ssl_certs_one+0x154>
   3d61c:	add	r2, pc, r2
   3d620:	mov	r1, #16384	; 0x4000
   3d624:	mov	r3, #0
   3d628:	bl	de74 <snprintf@plt>
   3d62c:	cmp	r0, #6
   3d630:	blt	3d650 <send_new_ssl_certs_one+0x140>
   3d634:	str	r0, [sp]
   3d638:	ldr	r3, [pc, #40]	; 3d668 <send_new_ssl_certs_one+0x158>
   3d63c:	add	r3, pc, r3
   3d640:	mov	r0, r8
   3d644:	mov	r1, #0
   3d648:	mov	r2, #0
   3d64c:	bl	3c2e0 <ssl_cmd_write_queue>
   3d650:	sub	sp, fp, #24
   3d654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d658:	.word	0x0001d430
   3d65c:	.word	0x0000857d
   3d660:	.word	0x0002eb70
   3d664:	.word	0x0000a5e8
   3d668:	.word	0x0002eb48
   3d66c:	.word	0x0000a60d

0003d670 <ssl_write_ctl>:
   3d670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d674:	add	fp, sp, #28
   3d678:	sub	sp, sp, #12
   3d67c:	ldrb	r0, [r1, #53]	; 0x35
   3d680:	cmp	r0, #0
   3d684:	beq	3d690 <ssl_write_ctl+0x20>
   3d688:	sub	sp, fp, #28
   3d68c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d690:	mov	sl, r1
   3d694:	mov	r9, r1
   3d698:	ldr	r4, [r9, #40]!	; 0x28
   3d69c:	cmp	r4, #0
   3d6a0:	bne	3d6cc <ssl_write_ctl+0x5c>
   3d6a4:	b	3d688 <ssl_write_ctl+0x18>
   3d6a8:	ldr	r0, [sl, #16]
   3d6ac:	mov	r1, #2
   3d6b0:	ldr	r2, [pc, #196]	; 3d77c <ssl_write_ctl+0x10c>
   3d6b4:	add	r2, pc, r2
   3d6b8:	mov	r3, sl
   3d6bc:	bl	d304 <rb_setselect@plt>
   3d6c0:	cmp	r8, #0
   3d6c4:	mov	r4, r8
   3d6c8:	beq	3d688 <ssl_write_ctl+0x18>
   3d6cc:	ldr	r7, [r4]
   3d6d0:	ldr	r8, [r4, #8]
   3d6d4:	ldr	r3, [r7, #12]
   3d6d8:	ldr	r1, [r7, #16]
   3d6dc:	ldr	r2, [r7, #36]	; 0x24
   3d6e0:	ldr	r0, [sl, #16]
   3d6e4:	ldr	r6, [sl, #24]
   3d6e8:	stm	sp, {r1, r6}
   3d6ec:	add	r5, r7, #20
   3d6f0:	mov	r1, r5
   3d6f4:	bl	df94 <rb_send_fd_buf@plt>
   3d6f8:	mov	r6, r0
   3d6fc:	cmp	r0, #1
   3d700:	blt	3d748 <ssl_write_ctl+0xd8>
   3d704:	mov	r0, r4
   3d708:	mov	r1, r9
   3d70c:	bl	3c8b4 <rb_dlinkDelete>
   3d710:	ldr	r0, [r7, #36]	; 0x24
   3d714:	cmp	r0, #1
   3d718:	blt	3d738 <ssl_write_ctl+0xc8>
   3d71c:	mov	r4, #0
   3d720:	ldr	r0, [r5, r4, lsl #2]
   3d724:	bl	db50 <rb_close@plt>
   3d728:	add	r4, r4, #1
   3d72c:	ldr	r0, [r7, #36]	; 0x24
   3d730:	cmp	r4, r0
   3d734:	blt	3d720 <ssl_write_ctl+0xb0>
   3d738:	ldr	r0, [r7, #12]
   3d73c:	bl	3c6b0 <rb_free>
   3d740:	mov	r0, r7
   3d744:	bl	3c6b0 <rb_free>
   3d748:	cmp	r6, #0
   3d74c:	beq	3d76c <ssl_write_ctl+0xfc>
   3d750:	cmn	r6, #1
   3d754:	bgt	3d6a8 <ssl_write_ctl+0x38>
   3d758:	bl	de38 <__errno_location@plt>
   3d75c:	ldr	r0, [r0]
   3d760:	bl	dab4 <rb_ignore_errno@plt>
   3d764:	cmp	r0, #0
   3d768:	bne	3d6a8 <ssl_write_ctl+0x38>
   3d76c:	mov	r0, sl
   3d770:	sub	sp, fp, #28
   3d774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d778:	b	3ca38 <ssl_dead>
   3d77c:	.word	0xffffffb4

0003d780 <substitution_append_var>:
   3d780:	push	{r4, r5, r6, r7, fp, lr}
   3d784:	add	fp, sp, #16
   3d788:	mov	r4, r2
   3d78c:	mov	r5, r1
   3d790:	mov	r6, r0
   3d794:	bl	3d7cc <rb_malloc>
   3d798:	mov	r7, r0
   3d79c:	mov	r0, r5
   3d7a0:	bl	3d7ec <rb_strdup>
   3d7a4:	str	r0, [r7]
   3d7a8:	mov	r0, r4
   3d7ac:	bl	3d7ec <rb_strdup>
   3d7b0:	str	r0, [r7, #4]
   3d7b4:	bl	dc58 <rb_make_rb_dlink_node@plt>
   3d7b8:	mov	r1, r0
   3d7bc:	mov	r0, r7
   3d7c0:	mov	r2, r6
   3d7c4:	pop	{r4, r5, r6, r7, fp, lr}
   3d7c8:	b	3d81c <rb_dlinkAdd>

0003d7cc <rb_malloc>:
   3d7cc:	push	{fp, lr}
   3d7d0:	mov	fp, sp
   3d7d4:	mov	r0, #1
   3d7d8:	mov	r1, #8
   3d7dc:	bl	cfa4 <calloc@plt>
   3d7e0:	cmp	r0, #0
   3d7e4:	popne	{fp, pc}
   3d7e8:	bl	d448 <rb_outofmemory@plt>

0003d7ec <rb_strdup>:
   3d7ec:	push	{r4, sl, fp, lr}
   3d7f0:	add	fp, sp, #8
   3d7f4:	mov	r4, r0
   3d7f8:	bl	dc94 <strlen@plt>
   3d7fc:	add	r0, r0, #1
   3d800:	bl	da84 <malloc@plt>
   3d804:	cmp	r0, #0
   3d808:	beq	3d818 <rb_strdup+0x2c>
   3d80c:	mov	r1, r4
   3d810:	pop	{r4, sl, fp, lr}
   3d814:	b	d91c <strcpy@plt>
   3d818:	bl	d448 <rb_outofmemory@plt>

0003d81c <rb_dlinkAdd>:
   3d81c:	push	{fp, lr}
   3d820:	mov	fp, sp
   3d824:	cmp	r0, #0
   3d828:	beq	3d888 <rb_dlinkAdd+0x6c>
   3d82c:	cmp	r1, #0
   3d830:	beq	3d8a8 <rb_dlinkAdd+0x8c>
   3d834:	cmp	r2, #0
   3d838:	beq	3d8c8 <rb_dlinkAdd+0xac>
   3d83c:	mov	r3, #0
   3d840:	stm	r1, {r0, r3}
   3d844:	ldr	r0, [r2]
   3d848:	str	r0, [r1, #8]
   3d84c:	ldr	r0, [r2]
   3d850:	cmp	r0, #0
   3d854:	beq	3d864 <rb_dlinkAdd+0x48>
   3d858:	add	r0, r0, #4
   3d85c:	str	r1, [r0]
   3d860:	b	3d874 <rb_dlinkAdd+0x58>
   3d864:	mov	r0, r2
   3d868:	ldr	r3, [r0, #4]!
   3d86c:	cmp	r3, #0
   3d870:	streq	r1, [r0]
   3d874:	str	r1, [r2]
   3d878:	ldr	r0, [r2, #8]
   3d87c:	add	r0, r0, #1
   3d880:	str	r0, [r2, #8]
   3d884:	pop	{fp, pc}
   3d888:	ldr	r0, [pc, #88]	; 3d8e8 <rb_dlinkAdd+0xcc>
   3d88c:	add	r0, pc, r0
   3d890:	ldr	r1, [pc, #84]	; 3d8ec <rb_dlinkAdd+0xd0>
   3d894:	add	r1, pc, r1
   3d898:	ldr	r3, [pc, #80]	; 3d8f0 <rb_dlinkAdd+0xd4>
   3d89c:	add	r3, pc, r3
   3d8a0:	mov	r2, #143	; 0x8f
   3d8a4:	bl	e7e0 <__assert_fail@plt>
   3d8a8:	ldr	r0, [pc, #68]	; 3d8f4 <rb_dlinkAdd+0xd8>
   3d8ac:	add	r0, pc, r0
   3d8b0:	ldr	r1, [pc, #64]	; 3d8f8 <rb_dlinkAdd+0xdc>
   3d8b4:	add	r1, pc, r1
   3d8b8:	ldr	r3, [pc, #60]	; 3d8fc <rb_dlinkAdd+0xe0>
   3d8bc:	add	r3, pc, r3
   3d8c0:	mov	r2, #144	; 0x90
   3d8c4:	bl	e7e0 <__assert_fail@plt>
   3d8c8:	ldr	r0, [pc, #48]	; 3d900 <rb_dlinkAdd+0xe4>
   3d8cc:	add	r0, pc, r0
   3d8d0:	ldr	r1, [pc, #44]	; 3d904 <rb_dlinkAdd+0xe8>
   3d8d4:	add	r1, pc, r1
   3d8d8:	ldr	r3, [pc, #40]	; 3d908 <rb_dlinkAdd+0xec>
   3d8dc:	add	r3, pc, r3
   3d8e0:	mov	r2, #145	; 0x91
   3d8e4:	bl	e7e0 <__assert_fail@plt>
   3d8e8:	.word	0x000030e5
   3d8ec:	.word	0x00003082
   3d8f0:	.word	0x000030e2
   3d8f4:	.word	0x00003060
   3d8f8:	.word	0x00003062
   3d8fc:	.word	0x000030c2
   3d900:	.word	0x000088c9
   3d904:	.word	0x00003042
   3d908:	.word	0x000030a2

0003d90c <substitution_free>:
   3d90c:	push	{r4, r5, r6, r7, fp, lr}
   3d910:	add	fp, sp, #16
   3d914:	ldr	r5, [r0]
   3d918:	cmp	r5, #0
   3d91c:	beq	3d964 <substitution_free+0x58>
   3d920:	mov	r4, r0
   3d924:	ldr	r6, [r5]
   3d928:	ldr	r7, [r5, #8]
   3d92c:	mov	r0, r5
   3d930:	mov	r1, r4
   3d934:	bl	3d968 <rb_dlinkDelete>
   3d938:	mov	r0, r5
   3d93c:	bl	d7b4 <rb_free_rb_dlink_node@plt>
   3d940:	ldr	r0, [r6]
   3d944:	bl	3da20 <rb_free>
   3d948:	ldr	r0, [r6, #4]
   3d94c:	bl	3da20 <rb_free>
   3d950:	mov	r0, r6
   3d954:	bl	3da20 <rb_free>
   3d958:	cmp	r7, #0
   3d95c:	mov	r5, r7
   3d960:	bne	3d924 <substitution_free+0x18>
   3d964:	pop	{r4, r5, r6, r7, fp, pc}

0003d968 <rb_dlinkDelete>:
   3d968:	push	{fp, lr}
   3d96c:	mov	fp, sp
   3d970:	cmp	r0, #0
   3d974:	beq	3d9c8 <rb_dlinkDelete+0x60>
   3d978:	cmp	r1, #0
   3d97c:	beq	3d9e8 <rb_dlinkDelete+0x80>
   3d980:	ldr	ip, [r0, #4]
   3d984:	ldr	r3, [r0, #8]
   3d988:	add	r2, r3, #4
   3d98c:	cmp	r3, #0
   3d990:	addeq	r2, r1, #4
   3d994:	str	ip, [r2]
   3d998:	ldmib	r0, {r2, ip}
   3d99c:	cmp	r2, #0
   3d9a0:	mov	r3, r1
   3d9a4:	addne	r3, r2, #8
   3d9a8:	str	ip, [r3]
   3d9ac:	mov	r2, #0
   3d9b0:	str	r2, [r0, #4]
   3d9b4:	str	r2, [r0, #8]
   3d9b8:	ldr	r0, [r1, #8]
   3d9bc:	sub	r0, r0, #1
   3d9c0:	str	r0, [r1, #8]
   3d9c4:	pop	{fp, pc}
   3d9c8:	ldr	r0, [pc, #56]	; 3da08 <rb_dlinkDelete+0xa0>
   3d9cc:	add	r0, pc, r0
   3d9d0:	ldr	r1, [pc, #52]	; 3da0c <rb_dlinkDelete+0xa4>
   3d9d4:	add	r1, pc, r1
   3d9d8:	ldr	r3, [pc, #48]	; 3da10 <rb_dlinkDelete+0xa8>
   3d9dc:	add	r3, pc, r3
   3d9e0:	mov	r2, #235	; 0xeb
   3d9e4:	bl	e7e0 <__assert_fail@plt>
   3d9e8:	ldr	r0, [pc, #36]	; 3da14 <rb_dlinkDelete+0xac>
   3d9ec:	add	r0, pc, r0
   3d9f0:	ldr	r1, [pc, #32]	; 3da18 <rb_dlinkDelete+0xb0>
   3d9f4:	add	r1, pc, r1
   3d9f8:	ldr	r3, [pc, #28]	; 3da1c <rb_dlinkDelete+0xb4>
   3d9fc:	add	r3, pc, r3
   3da00:	mov	r2, #236	; 0xec
   3da04:	bl	e7e0 <__assert_fail@plt>
   3da08:	.word	0x00002f40
   3da0c:	.word	0x00002f42
   3da10:	.word	0x00002fdd
   3da14:	.word	0x000087a9
   3da18:	.word	0x00002f22
   3da1c:	.word	0x00002fbd

0003da20 <rb_free>:
   3da20:	cmp	r0, #0
   3da24:	bxeq	lr
   3da28:	b	d328 <free@plt>

0003da2c <substitution_parse>:
   3da2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3da30:	add	fp, sp, #28
   3da34:	sub	sp, sp, #524	; 0x20c
   3da38:	str	r1, [sp, #4]
   3da3c:	mov	r5, r0
   3da40:	ldrb	r0, [r0]
   3da44:	cmp	r0, #0
   3da48:	beq	3db54 <substitution_parse+0x128>
   3da4c:	movw	r1, #511	; 0x1ff
   3da50:	add	r7, sp, #8
   3da54:	add	r4, r7, r1
   3da58:	ldr	sl, [pc, #280]	; 3db78 <substitution_parse+0x14c>
   3da5c:	add	sl, pc, sl
   3da60:	mov	r6, sl
   3da64:	b	3da78 <substitution_parse+0x4c>
   3da68:	strb	r0, [r6], #1
   3da6c:	ldrb	r0, [r5, #1]!
   3da70:	cmp	r0, #0
   3da74:	beq	3db5c <substitution_parse+0x130>
   3da78:	sub	r1, r6, sl
   3da7c:	cmp	r1, #512	; 0x200
   3da80:	bge	3db5c <substitution_parse+0x130>
   3da84:	uxtb	r1, r0
   3da88:	cmp	r1, #36	; 0x24
   3da8c:	bne	3da68 <substitution_parse+0x3c>
   3da90:	ldrb	r0, [r5, #1]
   3da94:	cmp	r0, #123	; 0x7b
   3da98:	bne	3da6c <substitution_parse+0x40>
   3da9c:	mov	r0, r7
   3daa0:	mov	r1, #0
   3daa4:	mov	r2, #512	; 0x200
   3daa8:	bl	df28 <memset@plt>
   3daac:	add	r5, r5, #2
   3dab0:	mov	r0, r7
   3dab4:	ldrb	r1, [r5]
   3dab8:	cmp	r1, #0
   3dabc:	cmpne	r1, #125	; 0x7d
   3dac0:	beq	3dae0 <substitution_parse+0xb4>
   3dac4:	cmp	r1, #36	; 0x24
   3dac8:	beq	3dadc <substitution_parse+0xb0>
   3dacc:	cmp	r0, r4
   3dad0:	strbcc	r1, [r0], #1
   3dad4:	add	r5, r5, #1
   3dad8:	b	3dab4 <substitution_parse+0x88>
   3dadc:	sub	r5, r5, #1
   3dae0:	ldr	r0, [sp, #4]
   3dae4:	ldr	r8, [r0]
   3dae8:	cmp	r8, #0
   3daec:	beq	3db44 <substitution_parse+0x118>
   3daf0:	ldr	r9, [r8]
   3daf4:	ldr	r1, [r9]
   3daf8:	mov	r0, r7
   3dafc:	bl	d340 <rb_strcasecmp@plt>
   3db00:	cmp	r0, #0
   3db04:	beq	3db18 <substitution_parse+0xec>
   3db08:	ldr	r8, [r8, #8]
   3db0c:	cmp	r8, #0
   3db10:	bne	3daf0 <substitution_parse+0xc4>
   3db14:	b	3db44 <substitution_parse+0x118>
   3db18:	add	r8, sl, #512	; 0x200
   3db1c:	sub	r2, r8, r6
   3db20:	ldr	r1, [r9, #4]
   3db24:	mov	r0, r6
   3db28:	bl	e510 <rb_strlcpy@plt>
   3db2c:	ldr	r0, [r9, #4]
   3db30:	bl	dc94 <strlen@plt>
   3db34:	add	r6, r6, r0
   3db38:	cmp	r6, r8
   3db3c:	movw	r0, #511	; 0x1ff
   3db40:	addcs	r6, sl, r0
   3db44:	ldrb	r0, [r5]
   3db48:	cmp	r0, #0
   3db4c:	bne	3da6c <substitution_parse+0x40>
   3db50:	b	3db5c <substitution_parse+0x130>
   3db54:	ldr	r6, [pc, #24]	; 3db74 <substitution_parse+0x148>
   3db58:	add	r6, pc, r6
   3db5c:	mov	r0, #0
   3db60:	strb	r0, [r6]
   3db64:	ldr	r0, [pc, #16]	; 3db7c <substitution_parse+0x150>
   3db68:	add	r0, pc, r0
   3db6c:	sub	sp, fp, #28
   3db70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3db74:	.word	0x0003262c
   3db78:	.word	0x00032728
   3db7c:	.word	0x0003261c

0003db80 <add_isupport>:
   3db80:	push	{r4, r5, r6, sl, fp, lr}
   3db84:	add	fp, sp, #16
   3db88:	mov	r4, r2
   3db8c:	mov	r5, r1
   3db90:	mov	r6, r0
   3db94:	bl	3dbb0 <rb_malloc>
   3db98:	str	r6, [r0]
   3db9c:	str	r5, [r0, #4]
   3dba0:	str	r4, [r0, #8]
   3dba4:	add	r1, r0, #12
   3dba8:	pop	{r4, r5, r6, sl, fp, lr}
   3dbac:	b	3dbd0 <rb_dlinkAddTail>

0003dbb0 <rb_malloc>:
   3dbb0:	push	{fp, lr}
   3dbb4:	mov	fp, sp
   3dbb8:	mov	r0, #1
   3dbbc:	mov	r1, #24
   3dbc0:	bl	cfa4 <calloc@plt>
   3dbc4:	cmp	r0, #0
   3dbc8:	popne	{fp, pc}
   3dbcc:	bl	d448 <rb_outofmemory@plt>

0003dbd0 <rb_dlinkAddTail>:
   3dbd0:	push	{fp, lr}
   3dbd4:	mov	fp, sp
   3dbd8:	cmp	r1, #0
   3dbdc:	beq	3dc40 <rb_dlinkAddTail+0x70>
   3dbe0:	cmp	r0, #0
   3dbe4:	beq	3dc60 <rb_dlinkAddTail+0x90>
   3dbe8:	mov	r2, #0
   3dbec:	str	r2, [r1, #8]
   3dbf0:	str	r0, [r1]
   3dbf4:	ldr	r0, [pc, #132]	; 3dc80 <rb_dlinkAddTail+0xb0>
   3dbf8:	ldr	r0, [pc, r0]
   3dbfc:	ldr	r2, [r0, #4]
   3dc00:	str	r2, [r1, #4]
   3dc04:	ldr	r2, [r0, #4]
   3dc08:	cmp	r2, #0
   3dc0c:	beq	3dc1c <rb_dlinkAddTail+0x4c>
   3dc10:	add	r2, r2, #8
   3dc14:	str	r1, [r2]
   3dc18:	b	3dc2c <rb_dlinkAddTail+0x5c>
   3dc1c:	ldr	r2, [r0]
   3dc20:	cmp	r2, #0
   3dc24:	mov	r2, r0
   3dc28:	streq	r1, [r2]
   3dc2c:	str	r1, [r0, #4]
   3dc30:	ldr	r1, [r0, #8]
   3dc34:	add	r1, r1, #1
   3dc38:	str	r1, [r0, #8]
   3dc3c:	pop	{fp, pc}
   3dc40:	ldr	r0, [pc, #60]	; 3dc84 <rb_dlinkAddTail+0xb4>
   3dc44:	add	r0, pc, r0
   3dc48:	ldr	r1, [pc, #56]	; 3dc88 <rb_dlinkAddTail+0xb8>
   3dc4c:	add	r1, pc, r1
   3dc50:	ldr	r3, [pc, #52]	; 3dc8c <rb_dlinkAddTail+0xbc>
   3dc54:	add	r3, pc, r3
   3dc58:	mov	r2, #211	; 0xd3
   3dc5c:	bl	e7e0 <__assert_fail@plt>
   3dc60:	ldr	r0, [pc, #40]	; 3dc90 <rb_dlinkAddTail+0xc0>
   3dc64:	add	r0, pc, r0
   3dc68:	ldr	r1, [pc, #36]	; 3dc94 <rb_dlinkAddTail+0xc4>
   3dc6c:	add	r1, pc, r1
   3dc70:	ldr	r3, [pc, #32]	; 3dc98 <rb_dlinkAddTail+0xc8>
   3dc74:	add	r3, pc, r3
   3dc78:	mov	r2, #213	; 0xd5
   3dc7c:	bl	e7e0 <__assert_fail@plt>
   3dc80:	.word	0x0001cdc0
   3dc84:	.word	0x00002cc8
   3dc88:	.word	0x00002cca
   3dc8c:	.word	0x00002cde
   3dc90:	.word	0x00002d0d
   3dc94:	.word	0x00002caa
   3dc98:	.word	0x00002cbe

0003dc9c <change_isupport>:
   3dc9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3dca0:	add	fp, sp, #24
   3dca4:	mov	r7, r0
   3dca8:	ldr	r0, [pc, #88]	; 3dd08 <change_isupport+0x6c>
   3dcac:	ldr	r0, [pc, r0]
   3dcb0:	ldr	r5, [r0]
   3dcb4:	mov	r4, #0
   3dcb8:	cmp	r5, #0
   3dcbc:	beq	3dcec <change_isupport+0x50>
   3dcc0:	mov	r8, r2
   3dcc4:	mov	r9, r1
   3dcc8:	ldr	r6, [r5]
   3dccc:	ldr	r0, [r6]
   3dcd0:	mov	r1, r7
   3dcd4:	bl	d0c4 <strcmp@plt>
   3dcd8:	cmp	r0, #0
   3dcdc:	beq	3dcf4 <change_isupport+0x58>
   3dce0:	ldr	r5, [r5, #8]
   3dce4:	cmp	r5, #0
   3dce8:	bne	3dcc8 <change_isupport+0x2c>
   3dcec:	mov	r0, r4
   3dcf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dcf4:	str	r9, [r6, #4]
   3dcf8:	ldr	r4, [r6, #8]
   3dcfc:	str	r8, [r6, #8]
   3dd00:	mov	r0, r4
   3dd04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3dd08:	.word	0x0001cd0c

0003dd0c <delete_isupport>:
   3dd0c:	push	{r4, r5, r6, r7, fp, lr}
   3dd10:	add	fp, sp, #16
   3dd14:	mov	r4, r0
   3dd18:	ldr	r0, [pc, #76]	; 3dd6c <delete_isupport+0x60>
   3dd1c:	ldr	r0, [pc, r0]
   3dd20:	ldr	r5, [r0]
   3dd24:	cmp	r5, #0
   3dd28:	bne	3dd3c <delete_isupport+0x30>
   3dd2c:	pop	{r4, r5, r6, r7, fp, pc}
   3dd30:	cmp	r7, #0
   3dd34:	mov	r5, r7
   3dd38:	beq	3dd2c <delete_isupport+0x20>
   3dd3c:	ldr	r6, [r5]
   3dd40:	ldr	r7, [r5, #8]
   3dd44:	ldr	r0, [r6]
   3dd48:	mov	r1, r4
   3dd4c:	bl	d0c4 <strcmp@plt>
   3dd50:	cmp	r0, #0
   3dd54:	bne	3dd30 <delete_isupport+0x24>
   3dd58:	mov	r0, r5
   3dd5c:	bl	3dd70 <rb_dlinkDelete>
   3dd60:	mov	r0, r6
   3dd64:	bl	3ddfc <rb_free>
   3dd68:	b	3dd30 <delete_isupport+0x24>
   3dd6c:	.word	0x0001cc9c

0003dd70 <rb_dlinkDelete>:
   3dd70:	push	{fp, lr}
   3dd74:	mov	fp, sp
   3dd78:	cmp	r0, #0
   3dd7c:	beq	3ddcc <rb_dlinkDelete+0x5c>
   3dd80:	ldr	ip, [pc, #100]	; 3ddec <rb_dlinkDelete+0x7c>
   3dd84:	ldr	ip, [pc, ip]
   3dd88:	ldmib	r0, {r2, r3}
   3dd8c:	add	r1, r3, #4
   3dd90:	cmp	r3, #0
   3dd94:	addeq	r1, ip, #4
   3dd98:	str	r2, [r1]
   3dd9c:	ldmib	r0, {r1, r2}
   3dda0:	cmp	r1, #0
   3dda4:	mov	r3, ip
   3dda8:	addne	r3, r1, #8
   3ddac:	str	r2, [r3]
   3ddb0:	mov	r1, #0
   3ddb4:	str	r1, [r0, #4]
   3ddb8:	str	r1, [r0, #8]
   3ddbc:	ldr	r0, [ip, #8]
   3ddc0:	sub	r0, r0, #1
   3ddc4:	str	r0, [ip, #8]
   3ddc8:	pop	{fp, pc}
   3ddcc:	ldr	r0, [pc, #28]	; 3ddf0 <rb_dlinkDelete+0x80>
   3ddd0:	add	r0, pc, r0
   3ddd4:	ldr	r1, [pc, #24]	; 3ddf4 <rb_dlinkDelete+0x84>
   3ddd8:	add	r1, pc, r1
   3dddc:	ldr	r3, [pc, #20]	; 3ddf8 <rb_dlinkDelete+0x88>
   3dde0:	add	r3, pc, r3
   3dde4:	mov	r2, #235	; 0xeb
   3dde8:	bl	e7e0 <__assert_fail@plt>
   3ddec:	.word	0x0001cc34
   3ddf0:	.word	0x00002b3c
   3ddf4:	.word	0x00002b3e
   3ddf8:	.word	0x00002bd9

0003ddfc <rb_free>:
   3ddfc:	cmp	r0, #0
   3de00:	bxeq	lr
   3de04:	b	d328 <free@plt>

0003de08 <show_isupport>:
   3de08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3de0c:	add	fp, sp, #28
   3de10:	sub	sp, sp, #532	; 0x214
   3de14:	mov	r4, r0
   3de18:	add	r0, r0, #88	; 0x58
   3de1c:	bl	dc94 <strlen@plt>
   3de20:	mov	r5, r0
   3de24:	str	r4, [sp, #8]
   3de28:	ldrb	r0, [r4, #65]	; 0x41
   3de2c:	tst	r0, #32
   3de30:	bne	3de44 <show_isupport+0x3c>
   3de34:	cmp	r5, #8
   3de38:	bgt	3de5c <show_isupport+0x54>
   3de3c:	mov	r5, #9
   3de40:	b	3de5c <show_isupport+0x54>
   3de44:	cmp	r5, #8
   3de48:	bgt	3de5c <show_isupport+0x54>
   3de4c:	ldr	r0, [sp, #8]
   3de50:	ldrh	r0, [r0, #80]	; 0x50
   3de54:	cmp	r0, #64	; 0x40
   3de58:	movne	r5, #9
   3de5c:	ldr	r0, [pc, #392]	; 3dfec <show_isupport+0x1e4>
   3de60:	ldr	r0, [pc, r0]
   3de64:	add	r0, r0, #88	; 0x58
   3de68:	bl	dc94 <strlen@plt>
   3de6c:	mov	r9, #0
   3de70:	strb	r9, [sp, #16]
   3de74:	ldr	r1, [pc, #372]	; 3dff0 <show_isupport+0x1e8>
   3de78:	ldr	r1, [pc, r1]
   3de7c:	ldr	r8, [r1]
   3de80:	cmp	r8, #0
   3de84:	beq	3dfe4 <show_isupport+0x1dc>
   3de88:	add	r0, r5, r0
   3de8c:	add	r6, r0, #33	; 0x21
   3de90:	str	r6, [sp, #4]
   3de94:	b	3deb0 <show_isupport+0xa8>
   3de98:	ldr	r0, [sp, #12]
   3de9c:	add	r6, r6, r0
   3dea0:	add	r9, r9, #1
   3dea4:	ldr	r8, [r8, #8]
   3dea8:	cmp	r8, #0
   3deac:	beq	3dfc4 <show_isupport+0x1bc>
   3deb0:	ldr	r4, [r8]
   3deb4:	ldr	r1, [r4, #4]
   3deb8:	ldr	r0, [r4, #8]
   3debc:	blx	r1
   3dec0:	cmp	r0, #0
   3dec4:	beq	3dea4 <show_isupport+0x9c>
   3dec8:	mov	r5, r0
   3decc:	ldr	r0, [r4]
   3ded0:	bl	dc94 <strlen@plt>
   3ded4:	mov	r7, r0
   3ded8:	ldrb	r0, [r5]
   3dedc:	cmp	r0, #0
   3dee0:	beq	3def4 <show_isupport+0xec>
   3dee4:	mov	r0, r5
   3dee8:	bl	dc94 <strlen@plt>
   3deec:	add	r0, r0, #1
   3def0:	b	3def8 <show_isupport+0xf0>
   3def4:	mov	r0, #0
   3def8:	add	sl, r6, #1
   3defc:	cmp	r9, #0
   3df00:	mov	r1, r6
   3df04:	movne	r1, sl
   3df08:	add	r2, r0, r7
   3df0c:	add	r0, r9, #1
   3df10:	cmp	r0, #12
   3df14:	str	r2, [sp, #12]
   3df18:	addls	r0, r1, r2
   3df1c:	cmpls	r0, #512	; 0x200
   3df20:	bcc	3df50 <show_isupport+0x148>
   3df24:	ldr	r0, [sp, #8]
   3df28:	mov	r1, #5
   3df2c:	ldr	r2, [pc, #192]	; 3dff4 <show_isupport+0x1ec>
   3df30:	add	r2, pc, r2
   3df34:	add	r7, sp, #16
   3df38:	mov	r3, r7
   3df3c:	bl	dc7c <sendto_one_numeric@plt>
   3df40:	mov	r9, #0
   3df44:	strb	r9, [sp, #16]
   3df48:	ldr	r6, [sp, #4]
   3df4c:	b	3df80 <show_isupport+0x178>
   3df50:	cmp	r9, #0
   3df54:	beq	3df78 <show_isupport+0x170>
   3df58:	add	r7, sp, #16
   3df5c:	mov	r0, r7
   3df60:	ldr	r1, [pc, #144]	; 3dff8 <show_isupport+0x1f0>
   3df64:	add	r1, pc, r1
   3df68:	mov	r2, #512	; 0x200
   3df6c:	bl	e7d4 <rb_strlcat@plt>
   3df70:	mov	r6, sl
   3df74:	b	3df80 <show_isupport+0x178>
   3df78:	mov	r9, #0
   3df7c:	add	r7, sp, #16
   3df80:	ldr	r1, [r4]
   3df84:	mov	r0, r7
   3df88:	mov	r2, #512	; 0x200
   3df8c:	bl	e7d4 <rb_strlcat@plt>
   3df90:	ldrb	r0, [r5]
   3df94:	cmp	r0, #0
   3df98:	beq	3de98 <show_isupport+0x90>
   3df9c:	mov	r0, r7
   3dfa0:	ldr	r1, [pc, #84]	; 3dffc <show_isupport+0x1f4>
   3dfa4:	add	r1, pc, r1
   3dfa8:	mov	r2, #512	; 0x200
   3dfac:	bl	e7d4 <rb_strlcat@plt>
   3dfb0:	mov	r0, r7
   3dfb4:	mov	r1, r5
   3dfb8:	mov	r2, #512	; 0x200
   3dfbc:	bl	e7d4 <rb_strlcat@plt>
   3dfc0:	b	3de98 <show_isupport+0x90>
   3dfc4:	cmp	r9, #0
   3dfc8:	beq	3dfe4 <show_isupport+0x1dc>
   3dfcc:	ldr	r2, [pc, #44]	; 3e000 <show_isupport+0x1f8>
   3dfd0:	add	r2, pc, r2
   3dfd4:	add	r3, sp, #16
   3dfd8:	ldr	r0, [sp, #8]
   3dfdc:	mov	r1, #5
   3dfe0:	bl	dc7c <sendto_one_numeric@plt>
   3dfe4:	sub	sp, fp, #28
   3dfe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dfec:	.word	0x0001ccf8
   3dff0:	.word	0x0001cb40
   3dff4:	.word	0x00009ce8
   3dff8:	.word	0x00008554
   3dffc:	.word	0x00002f7f
   3e000:	.word	0x00009c48

0003e004 <isupport_intptr>:
   3e004:	push	{r4, sl, fp, lr}
   3e008:	add	fp, sp, #8
   3e00c:	ldr	r3, [r0]
   3e010:	ldr	r4, [pc, #28]	; 3e034 <isupport_intptr+0x30>
   3e014:	add	r4, pc, r4
   3e018:	ldr	r2, [pc, #24]	; 3e038 <isupport_intptr+0x34>
   3e01c:	add	r2, pc, r2
   3e020:	mov	r0, r4
   3e024:	mov	r1, #15
   3e028:	bl	de74 <snprintf@plt>
   3e02c:	mov	r0, r4
   3e030:	pop	{r4, sl, fp, pc}
   3e034:	.word	0x00032374
   3e038:	.word	0x00002c18

0003e03c <isupport_boolean>:
   3e03c:	ldr	r1, [r0]
   3e040:	ldr	r0, [pc, #12]	; 3e054 <isupport_boolean+0x18>
   3e044:	add	r0, pc, r0
   3e048:	cmp	r1, #0
   3e04c:	moveq	r0, r1
   3e050:	bx	lr
   3e054:	.word	0x00007b11

0003e058 <isupport_string>:
   3e058:	bx	lr

0003e05c <isupport_stringptr>:
   3e05c:	ldr	r0, [r0]
   3e060:	bx	lr

0003e064 <isupport_umode>:
   3e064:	ldrb	r1, [r0]
   3e068:	ldr	r2, [pc, #28]	; 3e08c <isupport_umode+0x28>
   3e06c:	ldr	r2, [pc, r2]
   3e070:	ldr	r1, [r2, r1, lsl #2]
   3e074:	ldr	r2, [pc, #20]	; 3e090 <isupport_umode+0x2c>
   3e078:	ldr	r2, [pc, r2]
   3e07c:	ldr	r2, [r2, #216]	; 0xd8
   3e080:	tst	r1, r2
   3e084:	movne	r0, #0
   3e088:	bx	lr
   3e08c:	.word	0x0001c904
   3e090:	.word	0x0001cb04

0003e094 <init_isupport>:
   3e094:	push	{r4, r5, r6, sl, fp, lr}
   3e098:	add	fp, sp, #16
   3e09c:	ldr	r4, [pc, #488]	; 3e28c <init_isupport+0x1f8>
   3e0a0:	ldr	r4, [pc, r4]
   3e0a4:	ldr	r0, [pc, #484]	; 3e290 <init_isupport+0x1fc>
   3e0a8:	add	r0, pc, r0
   3e0ac:	ldr	r2, [pc, #480]	; 3e294 <init_isupport+0x200>
   3e0b0:	add	r2, pc, r2
   3e0b4:	mov	r1, r4
   3e0b8:	bl	e4a4 <add_isupport@plt>
   3e0bc:	ldr	r5, [pc, #468]	; 3e298 <init_isupport+0x204>
   3e0c0:	ldr	r5, [pc, r5]
   3e0c4:	ldr	r6, [pc, #464]	; 3e29c <init_isupport+0x208>
   3e0c8:	ldr	r6, [pc, r6]
   3e0cc:	ldr	r0, [pc, #460]	; 3e2a0 <init_isupport+0x20c>
   3e0d0:	add	r0, pc, r0
   3e0d4:	mov	r1, r5
   3e0d8:	mov	r2, r6
   3e0dc:	bl	e4a4 <add_isupport@plt>
   3e0e0:	add	r2, r6, #4
   3e0e4:	ldr	r0, [pc, #440]	; 3e2a4 <init_isupport+0x210>
   3e0e8:	add	r0, pc, r0
   3e0ec:	mov	r1, r5
   3e0f0:	bl	e4a4 <add_isupport@plt>
   3e0f4:	ldr	r0, [pc, #428]	; 3e2a8 <init_isupport+0x214>
   3e0f8:	add	r0, pc, r0
   3e0fc:	ldr	r1, [pc, #424]	; 3e2ac <init_isupport+0x218>
   3e100:	add	r1, pc, r1
   3e104:	mov	r2, #0
   3e108:	bl	e4a4 <add_isupport@plt>
   3e10c:	ldr	r0, [pc, #412]	; 3e2b0 <init_isupport+0x21c>
   3e110:	add	r0, pc, r0
   3e114:	ldr	r1, [pc, #408]	; 3e2b4 <init_isupport+0x220>
   3e118:	add	r1, pc, r1
   3e11c:	mov	r2, #0
   3e120:	bl	e4a4 <add_isupport@plt>
   3e124:	ldr	r0, [pc, #396]	; 3e2b8 <init_isupport+0x224>
   3e128:	add	r0, pc, r0
   3e12c:	ldr	r2, [pc, #392]	; 3e2bc <init_isupport+0x228>
   3e130:	add	r2, pc, r2
   3e134:	mov	r1, r4
   3e138:	bl	e4a4 <add_isupport@plt>
   3e13c:	ldr	r0, [pc, #380]	; 3e2c0 <init_isupport+0x22c>
   3e140:	add	r0, pc, r0
   3e144:	ldr	r1, [pc, #376]	; 3e2c4 <init_isupport+0x230>
   3e148:	add	r1, pc, r1
   3e14c:	mov	r2, #0
   3e150:	bl	e4a4 <add_isupport@plt>
   3e154:	ldr	r5, [pc, #364]	; 3e2c8 <init_isupport+0x234>
   3e158:	ldr	r5, [pc, r5]
   3e15c:	ldr	r0, [pc, #360]	; 3e2cc <init_isupport+0x238>
   3e160:	add	r0, pc, r0
   3e164:	ldr	r2, [pc, #356]	; 3e2d0 <init_isupport+0x23c>
   3e168:	add	r2, pc, r2
   3e16c:	mov	r1, r5
   3e170:	bl	e4a4 <add_isupport@plt>
   3e174:	ldr	r0, [pc, #344]	; 3e2d4 <init_isupport+0x240>
   3e178:	ldr	r0, [pc, r0]
   3e17c:	add	r2, r0, #12
   3e180:	ldr	r1, [pc, #336]	; 3e2d8 <init_isupport+0x244>
   3e184:	ldr	r1, [pc, r1]
   3e188:	ldr	r0, [pc, #332]	; 3e2dc <init_isupport+0x248>
   3e18c:	add	r0, pc, r0
   3e190:	bl	e4a4 <add_isupport@plt>
   3e194:	ldr	r0, [pc, #324]	; 3e2e0 <init_isupport+0x24c>
   3e198:	add	r0, pc, r0
   3e19c:	ldr	r2, [pc, #320]	; 3e2e4 <init_isupport+0x250>
   3e1a0:	add	r2, pc, r2
   3e1a4:	mov	r1, r4
   3e1a8:	bl	e4a4 <add_isupport@plt>
   3e1ac:	ldr	r0, [pc, #308]	; 3e2e8 <init_isupport+0x254>
   3e1b0:	add	r0, pc, r0
   3e1b4:	ldr	r2, [pc, #304]	; 3e2ec <init_isupport+0x258>
   3e1b8:	add	r2, pc, r2
   3e1bc:	mov	r1, r4
   3e1c0:	bl	e4a4 <add_isupport@plt>
   3e1c4:	ldr	r0, [pc, #292]	; 3e2f0 <init_isupport+0x25c>
   3e1c8:	add	r0, pc, r0
   3e1cc:	ldr	r1, [pc, #288]	; 3e2f4 <init_isupport+0x260>
   3e1d0:	add	r1, pc, r1
   3e1d4:	mov	r2, #0
   3e1d8:	bl	e4a4 <add_isupport@plt>
   3e1dc:	ldr	r0, [pc, #276]	; 3e2f8 <init_isupport+0x264>
   3e1e0:	add	r0, pc, r0
   3e1e4:	ldr	r2, [pc, #272]	; 3e2fc <init_isupport+0x268>
   3e1e8:	add	r2, pc, r2
   3e1ec:	mov	r1, r5
   3e1f0:	bl	e4a4 <add_isupport@plt>
   3e1f4:	ldr	r0, [pc, #260]	; 3e300 <init_isupport+0x26c>
   3e1f8:	add	r0, pc, r0
   3e1fc:	ldr	r2, [pc, #256]	; 3e304 <init_isupport+0x270>
   3e200:	add	r2, pc, r2
   3e204:	mov	r1, r5
   3e208:	bl	e4a4 <add_isupport@plt>
   3e20c:	ldr	r0, [pc, #244]	; 3e308 <init_isupport+0x274>
   3e210:	add	r0, pc, r0
   3e214:	ldr	r2, [pc, #240]	; 3e30c <init_isupport+0x278>
   3e218:	add	r2, pc, r2
   3e21c:	mov	r1, r5
   3e220:	bl	e4a4 <add_isupport@plt>
   3e224:	ldr	r1, [pc, #228]	; 3e310 <init_isupport+0x27c>
   3e228:	ldr	r1, [pc, r1]
   3e22c:	ldr	r0, [pc, #224]	; 3e314 <init_isupport+0x280>
   3e230:	add	r0, pc, r0
   3e234:	ldr	r2, [pc, #220]	; 3e318 <init_isupport+0x284>
   3e238:	add	r2, pc, r2
   3e23c:	bl	e4a4 <add_isupport@plt>
   3e240:	ldr	r0, [pc, #212]	; 3e31c <init_isupport+0x288>
   3e244:	add	r0, pc, r0
   3e248:	ldr	r1, [pc, #208]	; 3e320 <init_isupport+0x28c>
   3e24c:	add	r1, pc, r1
   3e250:	mov	r2, #0
   3e254:	bl	e4a4 <add_isupport@plt>
   3e258:	ldr	r0, [pc, #196]	; 3e324 <init_isupport+0x290>
   3e25c:	add	r0, pc, r0
   3e260:	ldr	r1, [pc, #192]	; 3e328 <init_isupport+0x294>
   3e264:	add	r1, pc, r1
   3e268:	mov	r2, #0
   3e26c:	bl	e4a4 <add_isupport@plt>
   3e270:	ldr	r0, [pc, #180]	; 3e32c <init_isupport+0x298>
   3e274:	add	r0, pc, r0
   3e278:	ldr	r2, [pc, #176]	; 3e330 <init_isupport+0x29c>
   3e27c:	add	r2, pc, r2
   3e280:	mov	r1, r4
   3e284:	pop	{r4, r5, r6, sl, fp, lr}
   3e288:	b	3db80 <add_isupport>
   3e28c:	.word	0x0001ca60
   3e290:	.word	0x00009b91
   3e294:	.word	0x000322e8
   3e298:	.word	0x0001c794
   3e29c:	.word	0x0001ca50
   3e2a0:	.word	0x00009b73
   3e2a4:	.word	0x00009b63
   3e2a8:	.word	0x00009b59
   3e2ac:	.word	0x0000022c
   3e2b0:	.word	0x00009b4b
   3e2b4:	.word	0x000002bc
   3e2b8:	.word	0x00009b3d
   3e2bc:	.word	0x00009b3c
   3e2c0:	.word	0x00009b33
   3e2c4:	.word	0x000002e8
   3e2c8:	.word	0x0001c72c
   3e2cc:	.word	0x00009af5
   3e2d0:	.word	0x0001f054
   3e2d4:	.word	0x0001c7d8
   3e2d8:	.word	0x0001c858
   3e2dc:	.word	0x00009aef
   3e2e0:	.word	0x00009aeb
   3e2e4:	.word	0x00009ad0
   3e2e8:	.word	0x00009add
   3e2ec:	.word	0x00009ae1
   3e2f0:	.word	0x00009adc
   3e2f4:	.word	0x000002ec
   3e2f8:	.word	0x00009ac1
   3e2fc:	.word	0x0001efe0
   3e300:	.word	0x00009ab4
   3e304:	.word	0x0001efc0
   3e308:	.word	0x00009aa7
   3e30c:	.word	0x0001efac
   3e310:	.word	0x0001c70c
   3e314:	.word	0x00009a90
   3e318:	.word	0x000037d5
   3e31c:	.word	0x00009a81
   3e320:	.word	0x000002b8
   3e324:	.word	0x00009a71
   3e328:	.word	0x000002f0
   3e32c:	.word	0x00009a60
   3e330:	.word	0x00009a62

0003e334 <isupport_chanmodes>:
   3e334:	push	{r4, sl, fp, lr}
   3e338:	add	fp, sp, #8
   3e33c:	sub	sp, sp, #16
   3e340:	ldr	r0, [pc, #116]	; 3e3bc <isupport_chanmodes+0x88>
   3e344:	ldr	r0, [pc, r0]
   3e348:	ldm	r0, {r1, r2}
   3e34c:	ldr	r0, [r0, #8]
   3e350:	ldr	ip, [pc, #104]	; 3e3c0 <isupport_chanmodes+0x8c>
   3e354:	ldr	ip, [pc, ip]
   3e358:	ldr	r4, [pc, #100]	; 3e3c4 <isupport_chanmodes+0x90>
   3e35c:	add	r4, pc, r4
   3e360:	ldr	r3, [pc, #96]	; 3e3c8 <isupport_chanmodes+0x94>
   3e364:	add	r3, pc, r3
   3e368:	cmp	r0, #0
   3e36c:	moveq	r3, r4
   3e370:	ldr	r0, [pc, #84]	; 3e3cc <isupport_chanmodes+0x98>
   3e374:	add	r0, pc, r0
   3e378:	cmp	r2, #0
   3e37c:	moveq	r0, r4
   3e380:	stm	sp, {r0, r3, ip}
   3e384:	ldr	r3, [pc, #68]	; 3e3d0 <isupport_chanmodes+0x9c>
   3e388:	add	r3, pc, r3
   3e38c:	cmp	r1, #0
   3e390:	moveq	r3, r4
   3e394:	ldr	r4, [pc, #56]	; 3e3d4 <isupport_chanmodes+0xa0>
   3e398:	add	r4, pc, r4
   3e39c:	ldr	r2, [pc, #52]	; 3e3d8 <isupport_chanmodes+0xa4>
   3e3a0:	add	r2, pc, r2
   3e3a4:	mov	r0, r4
   3e3a8:	mov	r1, #300	; 0x12c
   3e3ac:	bl	de74 <snprintf@plt>
   3e3b0:	mov	r0, r4
   3e3b4:	sub	sp, fp, #8
   3e3b8:	pop	{r4, sl, fp, pc}
   3e3bc:	.word	0x0001c7d4
   3e3c0:	.word	0x0001c58c
   3e3c4:	.word	0x000077f9
   3e3c8:	.word	0x00005d53
   3e3cc:	.word	0x00008c1c
   3e3d0:	.word	0x00006141
   3e3d4:	.word	0x00032200
   3e3d8:	.word	0x00009942

0003e3dc <isupport_chanlimit>:
   3e3dc:	push	{r4, sl, fp, lr}
   3e3e0:	add	fp, sp, #8
   3e3e4:	sub	sp, sp, #8
   3e3e8:	ldr	r0, [pc, #56]	; 3e428 <isupport_chanlimit+0x4c>
   3e3ec:	ldr	r0, [pc, r0]
   3e3f0:	ldr	r0, [r0, #32]
   3e3f4:	str	r0, [sp]
   3e3f8:	ldr	r4, [pc, #44]	; 3e42c <isupport_chanlimit+0x50>
   3e3fc:	add	r4, pc, r4
   3e400:	ldr	r2, [pc, #40]	; 3e430 <isupport_chanlimit+0x54>
   3e404:	add	r2, pc, r2
   3e408:	ldr	r3, [pc, #36]	; 3e434 <isupport_chanlimit+0x58>
   3e40c:	add	r3, pc, r3
   3e410:	mov	r0, r4
   3e414:	movw	r1, #542	; 0x21e
   3e418:	bl	de74 <snprintf@plt>
   3e41c:	mov	r0, r4
   3e420:	sub	sp, fp, #8
   3e424:	pop	{r4, sl, fp, pc}
   3e428:	.word	0x0001c72c
   3e42c:	.word	0x000322c8
   3e430:	.word	0x000098f3
   3e434:	.word	0x00031f8c

0003e438 <isupport_maxlist>:
   3e438:	push	{r4, sl, fp, lr}
   3e43c:	add	fp, sp, #8
   3e440:	sub	sp, sp, #8
   3e444:	ldr	r0, [pc, #96]	; 3e4ac <isupport_maxlist+0x74>
   3e448:	ldr	r0, [pc, r0]
   3e44c:	ldm	r0, {r1, r2}
   3e450:	ldr	r0, [r0, #24]
   3e454:	ldr	r4, [pc, #84]	; 3e4b0 <isupport_maxlist+0x78>
   3e458:	add	r4, pc, r4
   3e45c:	ldr	r3, [pc, #80]	; 3e4b4 <isupport_maxlist+0x7c>
   3e460:	add	r3, pc, r3
   3e464:	cmp	r2, #0
   3e468:	moveq	r3, r4
   3e46c:	str	r3, [sp]
   3e470:	str	r0, [sp, #4]
   3e474:	ldr	r3, [pc, #60]	; 3e4b8 <isupport_maxlist+0x80>
   3e478:	add	r3, pc, r3
   3e47c:	cmp	r1, #0
   3e480:	moveq	r3, r4
   3e484:	ldr	r4, [pc, #48]	; 3e4bc <isupport_maxlist+0x84>
   3e488:	add	r4, pc, r4
   3e48c:	ldr	r2, [pc, #44]	; 3e4c0 <isupport_maxlist+0x88>
   3e490:	add	r2, pc, r2
   3e494:	mov	r0, r4
   3e498:	mov	r1, #30
   3e49c:	bl	de74 <snprintf@plt>
   3e4a0:	mov	r0, r4
   3e4a4:	sub	sp, fp, #8
   3e4a8:	pop	{r4, sl, fp, pc}
   3e4ac:	.word	0x0001c6d0
   3e4b0:	.word	0x000076fd
   3e4b4:	.word	0x00008b30
   3e4b8:	.word	0x00006051
   3e4bc:	.word	0x0003245a
   3e4c0:	.word	0x00009863

0003e4c4 <isupport_nicklen>:
   3e4c4:	push	{r4, sl, fp, lr}
   3e4c8:	add	fp, sp, #8
   3e4cc:	ldr	r0, [pc, #44]	; 3e500 <isupport_nicklen+0x3c>
   3e4d0:	ldr	r0, [pc, r0]
   3e4d4:	ldr	r0, [r0, #360]	; 0x168
   3e4d8:	sub	r3, r0, #1
   3e4dc:	ldr	r4, [pc, #32]	; 3e504 <isupport_nicklen+0x40>
   3e4e0:	add	r4, pc, r4
   3e4e4:	ldr	r2, [pc, #28]	; 3e508 <isupport_nicklen+0x44>
   3e4e8:	add	r2, pc, r2
   3e4ec:	mov	r0, r4
   3e4f0:	mov	r1, #200	; 0xc8
   3e4f4:	bl	de74 <snprintf@plt>
   3e4f8:	mov	r0, r4
   3e4fc:	pop	{r4, sl, fp, pc}
   3e500:	.word	0x0001c6ac
   3e504:	.word	0x00032420
   3e508:	.word	0x00002773

0003e50c <isupport_targmax>:
   3e50c:	push	{r4, sl, fp, lr}
   3e510:	add	fp, sp, #8
   3e514:	sub	sp, sp, #8
   3e518:	ldr	r0, [pc, #48]	; 3e550 <isupport_targmax+0x44>
   3e51c:	ldr	r0, [pc, r0]
   3e520:	ldr	r3, [r0, #228]	; 0xe4
   3e524:	str	r3, [sp]
   3e528:	ldr	r4, [pc, #36]	; 3e554 <isupport_targmax+0x48>
   3e52c:	add	r4, pc, r4
   3e530:	ldr	r2, [pc, #32]	; 3e558 <isupport_targmax+0x4c>
   3e534:	add	r2, pc, r2
   3e538:	mov	r0, r4
   3e53c:	mov	r1, #200	; 0xc8
   3e540:	bl	de74 <snprintf@plt>
   3e544:	mov	r0, r4
   3e548:	sub	sp, fp, #8
   3e54c:	pop	{r4, sl, fp, pc}
   3e550:	.word	0x0001c660
   3e554:	.word	0x0003249c
   3e558:	.word	0x000097c9

0003e55c <isupport_extban>:
   3e55c:	push	{r4, sl, fp, lr}
   3e560:	add	fp, sp, #8
   3e564:	bl	e360 <get_extban_string@plt>
   3e568:	mov	r4, #0
   3e56c:	cmp	r0, #0
   3e570:	beq	3e5a0 <isupport_extban+0x44>
   3e574:	mov	r3, r0
   3e578:	ldrb	r0, [r0]
   3e57c:	cmp	r0, #0
   3e580:	beq	3e5a0 <isupport_extban+0x44>
   3e584:	ldr	r4, [pc, #28]	; 3e5a8 <isupport_extban+0x4c>
   3e588:	add	r4, pc, r4
   3e58c:	ldr	r2, [pc, #24]	; 3e5ac <isupport_extban+0x50>
   3e590:	add	r2, pc, r2
   3e594:	mov	r0, r4
   3e598:	mov	r1, #200	; 0xc8
   3e59c:	bl	de74 <snprintf@plt>
   3e5a0:	mov	r0, r4
   3e5a4:	pop	{r4, sl, fp, pc}
   3e5a8:	.word	0x00032508
   3e5ac:	.word	0x000097b1

0003e5b0 <chantypes_update>:
   3e5b0:	push	{r4, r5, fp, lr}
   3e5b4:	add	fp, sp, #8
   3e5b8:	ldr	r4, [pc, #60]	; 3e5fc <chantypes_update+0x4c>
   3e5bc:	add	r4, pc, r4
   3e5c0:	mov	r5, #0
   3e5c4:	mov	r0, r4
   3e5c8:	mov	r1, #0
   3e5cc:	mov	r2, #512	; 0x200
   3e5d0:	bl	df28 <memset@plt>
   3e5d4:	ldr	r0, [pc, #36]	; 3e600 <chantypes_update+0x50>
   3e5d8:	ldr	r0, [pc, r0]
   3e5dc:	add	r1, r0, r5, lsl #2
   3e5e0:	ldrb	r1, [r1, #1]
   3e5e4:	tst	r1, #2
   3e5e8:	strbne	r5, [r4], #1
   3e5ec:	add	r5, r5, #1
   3e5f0:	cmp	r5, #256	; 0x100
   3e5f4:	bne	3e5dc <chantypes_update+0x2c>
   3e5f8:	pop	{r4, r5, fp, pc}
   3e5fc:	.word	0x00031ddc
   3e600:	.word	0x0001c420

0003e604 <find_allowing_channel>:
   3e604:	push	{r4, r5, r6, r7, fp, lr}
   3e608:	add	fp, sp, #16
   3e60c:	ldr	r0, [r0, #24]
   3e610:	ldr	r6, [r0]
   3e614:	mov	r4, #0
   3e618:	cmp	r6, #0
   3e61c:	beq	3e674 <find_allowing_channel+0x70>
   3e620:	mov	r5, r1
   3e624:	b	3e634 <find_allowing_channel+0x30>
   3e628:	ldr	r6, [r6, #8]
   3e62c:	cmp	r6, #0
   3e630:	beq	3e674 <find_allowing_channel+0x70>
   3e634:	ldr	r7, [r6]
   3e638:	cmp	r7, #0
   3e63c:	beq	3e628 <find_allowing_channel+0x24>
   3e640:	cmp	r5, #0
   3e644:	ldrne	r0, [r7, #44]	; 0x2c
   3e648:	andsne	r0, r0, #3
   3e64c:	beq	3e628 <find_allowing_channel+0x24>
   3e650:	ldr	r0, [r5, #24]
   3e654:	cmp	r0, #0
   3e658:	beq	3e628 <find_allowing_channel+0x24>
   3e65c:	ldr	r0, [r7, #36]	; 0x24
   3e660:	mov	r1, r5
   3e664:	bl	d94c <find_channel_membership@plt>
   3e668:	cmp	r0, #0
   3e66c:	beq	3e628 <find_allowing_channel+0x24>
   3e670:	ldr	r4, [r7, #36]	; 0x24
   3e674:	mov	r0, r4
   3e678:	pop	{r4, r5, r6, r7, fp, pc}

0003e67c <add_target>:
   3e67c:	push	{r4, r5, r6, sl, fp, lr}
   3e680:	add	fp, sp, #16
   3e684:	cmp	r0, r1
   3e688:	beq	3e6e8 <add_target+0x6c>
   3e68c:	mov	r5, r1
   3e690:	mov	r4, r0
   3e694:	ldrb	r0, [r1, #56]	; 0x38
   3e698:	tst	r0, #64	; 0x40
   3e69c:	bne	3e6e8 <add_target+0x6c>
   3e6a0:	ldr	r0, [r4, #432]	; 0x1b0
   3e6a4:	ldr	r6, [r0, #416]	; 0x1a0
   3e6a8:	bl	d07c <rb_current_time@plt>
   3e6ac:	cmp	r6, r0
   3e6b0:	ble	3e6c0 <add_target+0x44>
   3e6b4:	ldrb	r0, [r5, #57]	; 0x39
   3e6b8:	tst	r0, #16
   3e6bc:	bne	3e6e8 <add_target+0x6c>
   3e6c0:	ldrb	r0, [r5, #396]!	; 0x18c
   3e6c4:	cmp	r0, #0
   3e6c8:	subeq	r5, r5, #308	; 0x134
   3e6cc:	mov	r0, r5
   3e6d0:	mov	r1, #32
   3e6d4:	bl	da78 <fnv_hash_upper@plt>
   3e6d8:	mov	r1, r0
   3e6dc:	mov	r0, r4
   3e6e0:	pop	{r4, r5, r6, sl, fp, lr}
   3e6e4:	b	3e6f0 <add_hashed_target>
   3e6e8:	mov	r0, #1
   3e6ec:	pop	{r4, r5, r6, sl, fp, pc}

0003e6f0 <add_hashed_target>:
   3e6f0:	push	{r4, r5, r6, r7, fp, lr}
   3e6f4:	add	fp, sp, #16
   3e6f8:	sub	sp, sp, #8
   3e6fc:	mov	r5, r1
   3e700:	mov	r4, r0
   3e704:	ldr	r6, [r0, #432]	; 0x1b0
   3e708:	add	r1, r6, #352	; 0x160
   3e70c:	mov	r0, #0
   3e710:	ldr	r2, [r1, r0, lsl #2]
   3e714:	cmp	r2, r5
   3e718:	beq	3e754 <add_hashed_target+0x64>
   3e71c:	add	r0, r0, #1
   3e720:	cmp	r0, #15
   3e724:	bne	3e710 <add_hashed_target+0x20>
   3e728:	ldr	r0, [r6, #412]	; 0x19c
   3e72c:	cmp	r0, #9
   3e730:	bhi	3e77c <add_hashed_target+0x8c>
   3e734:	mov	r7, r4
   3e738:	ldr	r0, [r7, #64]!	; 0x40
   3e73c:	tst	r0, #65536	; 0x10000
   3e740:	bne	3e798 <add_hashed_target+0xa8>
   3e744:	ldr	r1, [r7, #4]
   3e748:	orr	r0, r0, #65536	; 0x10000
   3e74c:	strd	r0, [r7]
   3e750:	b	3e7dc <add_hashed_target+0xec>
   3e754:	cmp	r0, #0
   3e758:	beq	3e774 <add_hashed_target+0x84>
   3e75c:	add	r1, r6, r0, lsl #2
   3e760:	ldr	r2, [r1, #348]	; 0x15c
   3e764:	str	r2, [r1, #352]	; 0x160
   3e768:	sub	r0, r0, #1
   3e76c:	cmp	r0, #0
   3e770:	bgt	3e75c <add_hashed_target+0x6c>
   3e774:	str	r5, [r6, #352]	; 0x160
   3e778:	b	3e818 <add_hashed_target+0x128>
   3e77c:	bl	d07c <rb_current_time@plt>
   3e780:	ldr	r1, [r4, #432]	; 0x1b0
   3e784:	str	r0, [r1, #416]	; 0x1a0
   3e788:	ldr	r0, [r4, #64]	; 0x40
   3e78c:	orr	r0, r0, #65536	; 0x10000
   3e790:	str	r0, [r4, #64]	; 0x40
   3e794:	b	3e7e8 <add_hashed_target+0xf8>
   3e798:	bl	d07c <rb_current_time@plt>
   3e79c:	ldr	r1, [r4, #432]	; 0x1b0
   3e7a0:	ldr	r2, [r1, #416]	; 0x1a0
   3e7a4:	sub	r0, r0, r2
   3e7a8:	add	r2, r0, #59	; 0x3b
   3e7ac:	cmp	r2, #119	; 0x77
   3e7b0:	bcc	3e828 <add_hashed_target+0x138>
   3e7b4:	movw	r2, #34953	; 0x8889
   3e7b8:	movt	r2, #34952	; 0x8888
   3e7bc:	smmla	r0, r0, r2, r0
   3e7c0:	asr	r2, r0, #5
   3e7c4:	add	r0, r2, r0, lsr #31
   3e7c8:	ldr	r2, [r1, #412]	; 0x19c
   3e7cc:	add	r0, r2, r0
   3e7d0:	cmp	r0, #10
   3e7d4:	movcs	r0, #10
   3e7d8:	str	r0, [r1, #412]	; 0x19c
   3e7dc:	bl	d07c <rb_current_time@plt>
   3e7e0:	ldr	r1, [r4, #432]	; 0x1b0
   3e7e4:	str	r0, [r1, #416]	; 0x1a0
   3e7e8:	mov	r0, #0
   3e7ec:	sub	r1, r6, r0, lsl #2
   3e7f0:	ldr	r2, [r1, #404]	; 0x194
   3e7f4:	str	r2, [r1, #408]	; 0x198
   3e7f8:	add	r0, r0, #1
   3e7fc:	cmp	r0, #14
   3e800:	bne	3e7ec <add_hashed_target+0xfc>
   3e804:	str	r5, [r6, #352]	; 0x160
   3e808:	ldr	r0, [r4, #432]	; 0x1b0
   3e80c:	ldr	r1, [r0, #412]	; 0x19c
   3e810:	sub	r1, r1, #1
   3e814:	str	r1, [r0, #412]	; 0x19c
   3e818:	mov	r5, #1
   3e81c:	mov	r0, r5
   3e820:	sub	sp, fp, #16
   3e824:	pop	{r4, r5, r6, r7, fp, pc}
   3e828:	ldr	r0, [r1, #412]	; 0x19c
   3e82c:	cmp	r0, #0
   3e830:	bne	3e7e8 <add_hashed_target+0xf8>
   3e834:	ldr	r0, [pc, #140]	; 3e8c8 <add_hashed_target+0x1d8>
   3e838:	ldr	r0, [pc, r0]
   3e83c:	ldr	r1, [r0, #124]	; 0x7c
   3e840:	add	r1, r1, #1
   3e844:	str	r1, [r0, #124]	; 0x7c
   3e848:	movw	r0, #291	; 0x123
   3e84c:	add	r0, r4, r0
   3e850:	bl	d610 <add_tgchange@plt>
   3e854:	ldr	r0, [r7]
   3e858:	tst	r0, #262144	; 0x40000
   3e85c:	bne	3e894 <add_hashed_target+0x1a4>
   3e860:	ldr	r1, [r7, #4]
   3e864:	orr	r0, r0, #262144	; 0x40000
   3e868:	strd	r0, [r7]
   3e86c:	add	r0, r4, #227	; 0xe3
   3e870:	add	r1, r4, #152	; 0x98
   3e874:	str	r1, [sp]
   3e878:	str	r0, [sp, #4]
   3e87c:	add	r3, r4, #88	; 0x58
   3e880:	ldr	r2, [pc, #68]	; 3e8cc <add_hashed_target+0x1dc>
   3e884:	add	r2, pc, r2
   3e888:	mov	r0, #2
   3e88c:	mov	r1, #0
   3e890:	bl	d634 <sendto_realops_snomask@plt>
   3e894:	ldr	r0, [pc, #52]	; 3e8d0 <add_hashed_target+0x1e0>
   3e898:	ldr	r0, [pc, r0]
   3e89c:	ldr	r2, [r0]
   3e8a0:	ldr	r0, [pc, #44]	; 3e8d4 <add_hashed_target+0x1e4>
   3e8a4:	add	r0, pc, r0
   3e8a8:	str	r0, [sp]
   3e8ac:	ldr	r1, [pc, #36]	; 3e8d8 <add_hashed_target+0x1e8>
   3e8b0:	add	r1, pc, r1
   3e8b4:	mov	r5, #0
   3e8b8:	mov	r0, r4
   3e8bc:	mov	r3, #0
   3e8c0:	bl	d0b8 <sendto_match_servs@plt>
   3e8c4:	b	3e81c <add_hashed_target+0x12c>
   3e8c8:	.word	0x0001c184
   3e8cc:	.word	0x000094c2
   3e8d0:	.word	0x0001c2dc
   3e8d4:	.word	0x000094ca
   3e8d8:	.word	0x00002ded

0003e8dc <add_channel_target>:
   3e8dc:	push	{r4, sl, fp, lr}
   3e8e0:	add	fp, sp, #8
   3e8e4:	mov	r4, r0
   3e8e8:	ldr	r0, [pc, #48]	; 3e920 <add_channel_target+0x44>
   3e8ec:	ldr	r0, [pc, r0]
   3e8f0:	ldr	r0, [r0, #72]	; 0x48
   3e8f4:	cmp	r0, #0
   3e8f8:	beq	3e918 <add_channel_target+0x3c>
   3e8fc:	ldr	r0, [r1, #236]	; 0xec
   3e900:	mov	r1, #32
   3e904:	bl	da78 <fnv_hash_upper@plt>
   3e908:	mov	r1, r0
   3e90c:	mov	r0, r4
   3e910:	pop	{r4, sl, fp, lr}
   3e914:	b	3e6f0 <add_hashed_target>
   3e918:	mov	r0, #1
   3e91c:	pop	{r4, sl, fp, pc}
   3e920:	.word	0x0001c22c

0003e924 <add_reply_target>:
   3e924:	push	{r4, sl, fp, lr}
   3e928:	add	fp, sp, #8
   3e92c:	cmp	r0, r1
   3e930:	beq	3e9cc <add_reply_target+0xa8>
   3e934:	mov	r4, r0
   3e938:	ldrb	r0, [r1, #56]	; 0x38
   3e93c:	tst	r0, #64	; 0x40
   3e940:	bne	3e9cc <add_reply_target+0xa8>
   3e944:	ldrb	r0, [r1, #396]!	; 0x18c
   3e948:	cmp	r0, #0
   3e94c:	subeq	r1, r1, #308	; 0x134
   3e950:	mov	r0, r1
   3e954:	mov	r1, #32
   3e958:	bl	da78 <fnv_hash_upper@plt>
   3e95c:	ldr	r1, [r4, #432]	; 0x1b0
   3e960:	add	r3, r1, #352	; 0x160
   3e964:	mov	r2, #0
   3e968:	ldr	r4, [r3, r2, lsl #2]
   3e96c:	cmp	r4, r0
   3e970:	beq	3e9a8 <add_reply_target+0x84>
   3e974:	add	r2, r2, #1
   3e978:	cmp	r2, #15
   3e97c:	bne	3e968 <add_reply_target+0x44>
   3e980:	mov	r2, #0
   3e984:	add	r3, r1, r2, lsl #2
   3e988:	ldr	r4, [r3, #404]	; 0x194
   3e98c:	str	r4, [r3, #408]	; 0x198
   3e990:	sub	r3, r2, #1
   3e994:	add	r2, r2, #13
   3e998:	cmp	r2, #10
   3e99c:	mov	r2, r3
   3e9a0:	bhi	3e984 <add_reply_target+0x60>
   3e9a4:	b	3e9c8 <add_reply_target+0xa4>
   3e9a8:	cmp	r2, #11
   3e9ac:	popcc	{r4, sl, fp, pc}
   3e9b0:	add	r3, r1, r2, lsl #2
   3e9b4:	ldr	r4, [r3, #348]	; 0x15c
   3e9b8:	str	r4, [r3, #352]	; 0x160
   3e9bc:	sub	r2, r2, #1
   3e9c0:	cmp	r2, #10
   3e9c4:	bgt	3e9b0 <add_reply_target+0x8c>
   3e9c8:	str	r0, [r1, #392]	; 0x188
   3e9cc:	pop	{r4, sl, fp, pc}

0003e9d0 <whowas_get_list>:
   3e9d0:	push	{fp, lr}
   3e9d4:	mov	fp, sp
   3e9d8:	mov	r1, r0
   3e9dc:	ldr	r0, [pc, #16]	; 3e9f4 <whowas_get_list+0x24>
   3e9e0:	ldr	r0, [pc, r0]
   3e9e4:	bl	dee0 <rb_radixtree_retrieve@plt>
   3e9e8:	cmp	r0, #0
   3e9ec:	addne	r0, r0, #4
   3e9f0:	pop	{fp, pc}
   3e9f4:	.word	0x00032178

0003e9f8 <whowas_add_history>:
   3e9f8:	cmp	r0, #0
   3e9fc:	bxeq	lr
   3ea00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3ea04:	add	fp, sp, #24
   3ea08:	mov	r8, r1
   3ea0c:	mov	r4, r0
   3ea10:	ldr	r0, [pc, #280]	; 3eb30 <whowas_add_history+0x138>
   3ea14:	add	r0, pc, r0
   3ea18:	ldr	r0, [r0, #8]
   3ea1c:	ldr	r1, [pc, #272]	; 3eb34 <whowas_add_history+0x13c>
   3ea20:	ldr	r1, [pc, r1]
   3ea24:	add	r1, r1, #100	; 0x64
   3ea28:	cmp	r0, r1
   3ea2c:	movhi	r0, #0
   3ea30:	blhi	3eb3c <whowas_trim>
   3ea34:	add	r5, r4, #88	; 0x58
   3ea38:	mov	r0, r5
   3ea3c:	bl	3ebe0 <whowas_get_top>
   3ea40:	mov	r7, r0
   3ea44:	mov	r0, #300	; 0x12c
   3ea48:	bl	3ec4c <rb_malloc>
   3ea4c:	mov	r6, r0
   3ea50:	str	r7, [r0]
   3ea54:	bl	d07c <rb_current_time@plt>
   3ea58:	str	r0, [r6, #292]	; 0x124
   3ea5c:	add	r0, r6, #40	; 0x28
   3ea60:	mov	r1, r5
   3ea64:	mov	r2, #33	; 0x21
   3ea68:	bl	e510 <rb_strlcpy@plt>
   3ea6c:	add	r1, r4, #152	; 0x98
   3ea70:	add	r0, r6, #73	; 0x49
   3ea74:	mov	r2, #11
   3ea78:	bl	e510 <rb_strlcpy@plt>
   3ea7c:	add	r1, r4, #163	; 0xa3
   3ea80:	add	r0, r6, #84	; 0x54
   3ea84:	mov	r2, #64	; 0x40
   3ea88:	bl	e510 <rb_strlcpy@plt>
   3ea8c:	movw	r0, #345	; 0x159
   3ea90:	add	r1, r4, r0
   3ea94:	add	r0, r6, #202	; 0xca
   3ea98:	mov	r2, #51	; 0x33
   3ea9c:	bl	e510 <rb_strlcpy@plt>
   3eaa0:	movw	r0, #291	; 0x123
   3eaa4:	add	r1, r4, r0
   3eaa8:	add	r0, r6, #148	; 0x94
   3eaac:	mov	r2, #54	; 0x36
   3eab0:	bl	e510 <rb_strlcpy@plt>
   3eab4:	ldr	r0, [r4, #64]	; 0x40
   3eab8:	mov	r1, #2
   3eabc:	and	r1, r1, r0, lsr #16
   3eac0:	ubfx	r0, r0, #24, #1
   3eac4:	orr	r0, r0, r1
   3eac8:	strb	r0, [r6, #286]	; 0x11e
   3eacc:	ldr	r0, [r4, #32]
   3ead0:	ldr	r0, [r0, #28]
   3ead4:	ldr	r0, [r0, #68]	; 0x44
   3ead8:	bl	d070 <scache_get_name@plt>
   3eadc:	str	r0, [r6, #288]	; 0x120
   3eae0:	cmp	r8, #0
   3eae4:	beq	3eb00 <whowas_add_history+0x108>
   3eae8:	str	r4, [r6, #296]	; 0x128
   3eaec:	add	r1, r6, #16
   3eaf0:	add	r2, r4, #40	; 0x28
   3eaf4:	mov	r0, r6
   3eaf8:	bl	3ec6c <rb_dlinkAdd>
   3eafc:	b	3eb08 <whowas_add_history+0x110>
   3eb00:	mov	r0, #0
   3eb04:	str	r0, [r6, #296]	; 0x128
   3eb08:	add	r1, r6, #4
   3eb0c:	add	r2, r7, #4
   3eb10:	mov	r0, r6
   3eb14:	bl	3ec6c <rb_dlinkAdd>
   3eb18:	add	r1, r6, #28
   3eb1c:	ldr	r2, [pc, #20]	; 3eb38 <whowas_add_history+0x140>
   3eb20:	add	r2, pc, r2
   3eb24:	mov	r0, r6
   3eb28:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3eb2c:	b	3ec6c <rb_dlinkAdd>
   3eb30:	.word	0x00032148
   3eb34:	.word	0x0001e8a0
   3eb38:	.word	0x0003203c

0003eb3c <whowas_trim>:
   3eb3c:	push	{r4, r5, r6, r7, fp, lr}
   3eb40:	add	fp, sp, #16
   3eb44:	ldr	r4, [pc, #140]	; 3ebd8 <whowas_trim+0x9c>
   3eb48:	add	r4, pc, r4
   3eb4c:	ldr	r0, [r4, #8]
   3eb50:	ldr	r1, [pc, #132]	; 3ebdc <whowas_trim+0xa0>
   3eb54:	ldr	r1, [pc, r1]
   3eb58:	cmp	r0, r1
   3eb5c:	popcc	{r4, r5, r6, r7, fp, pc}
   3eb60:	sub	r7, r0, r1
   3eb64:	cmp	r7, #1
   3eb68:	bge	3eb78 <whowas_trim+0x3c>
   3eb6c:	pop	{r4, r5, r6, r7, fp, pc}
   3eb70:	subs	r7, r7, #1
   3eb74:	beq	3eb6c <whowas_trim+0x30>
   3eb78:	ldr	r0, [r4, #4]
   3eb7c:	cmp	r0, #0
   3eb80:	beq	3eb70 <whowas_trim+0x34>
   3eb84:	ldr	r5, [r0]
   3eb88:	cmp	r5, #0
   3eb8c:	beq	3eb70 <whowas_trim+0x34>
   3eb90:	ldr	r1, [r5, #296]	; 0x128
   3eb94:	cmp	r1, #0
   3eb98:	addne	r0, r5, #16
   3eb9c:	addne	r1, r1, #40	; 0x28
   3eba0:	blne	3ed9c <rb_dlinkDelete>
   3eba4:	mov	r6, r5
   3eba8:	ldr	r1, [r6], #28
   3ebac:	add	r0, r5, #4
   3ebb0:	add	r1, r1, #4
   3ebb4:	bl	3ed9c <rb_dlinkDelete>
   3ebb8:	mov	r0, r6
   3ebbc:	mov	r1, r4
   3ebc0:	bl	3ed9c <rb_dlinkDelete>
   3ebc4:	ldr	r0, [r5]
   3ebc8:	bl	3f020 <whowas_free_wtop>
   3ebcc:	mov	r0, r5
   3ebd0:	bl	3f060 <rb_free>
   3ebd4:	b	3eb70 <whowas_trim+0x34>
   3ebd8:	.word	0x00032014
   3ebdc:	.word	0x0001e76c

0003ebe0 <whowas_get_top>:
   3ebe0:	push	{r4, r5, fp, lr}
   3ebe4:	add	fp, sp, #8
   3ebe8:	mov	r5, r0
   3ebec:	ldr	r0, [pc, #80]	; 3ec44 <whowas_get_top+0x64>
   3ebf0:	ldr	r0, [pc, r0]
   3ebf4:	mov	r1, r5
   3ebf8:	bl	dee0 <rb_radixtree_retrieve@plt>
   3ebfc:	mov	r4, r0
   3ec00:	cmp	r0, #0
   3ec04:	beq	3ec10 <whowas_get_top+0x30>
   3ec08:	mov	r0, r4
   3ec0c:	pop	{r4, r5, fp, pc}
   3ec10:	mov	r0, #16
   3ec14:	bl	3ec4c <rb_malloc>
   3ec18:	mov	r4, r0
   3ec1c:	mov	r0, r5
   3ec20:	bl	3eff0 <rb_strdup>
   3ec24:	mov	r1, r0
   3ec28:	str	r0, [r4]
   3ec2c:	ldr	r0, [pc, #20]	; 3ec48 <whowas_get_top+0x68>
   3ec30:	ldr	r0, [pc, r0]
   3ec34:	mov	r2, r4
   3ec38:	bl	dd9c <rb_radixtree_add@plt>
   3ec3c:	mov	r0, r4
   3ec40:	pop	{r4, r5, fp, pc}
   3ec44:	.word	0x00031f68
   3ec48:	.word	0x00031f28

0003ec4c <rb_malloc>:
   3ec4c:	push	{fp, lr}
   3ec50:	mov	fp, sp
   3ec54:	mov	r1, r0
   3ec58:	mov	r0, #1
   3ec5c:	bl	cfa4 <calloc@plt>
   3ec60:	cmp	r0, #0
   3ec64:	popne	{fp, pc}
   3ec68:	bl	d448 <rb_outofmemory@plt>

0003ec6c <rb_dlinkAdd>:
   3ec6c:	push	{fp, lr}
   3ec70:	mov	fp, sp
   3ec74:	cmp	r0, #0
   3ec78:	beq	3ecd8 <rb_dlinkAdd+0x6c>
   3ec7c:	cmp	r1, #0
   3ec80:	beq	3ecf8 <rb_dlinkAdd+0x8c>
   3ec84:	cmp	r2, #0
   3ec88:	beq	3ed18 <rb_dlinkAdd+0xac>
   3ec8c:	mov	r3, #0
   3ec90:	stm	r1, {r0, r3}
   3ec94:	ldr	r0, [r2]
   3ec98:	str	r0, [r1, #8]
   3ec9c:	ldr	r0, [r2]
   3eca0:	cmp	r0, #0
   3eca4:	beq	3ecb4 <rb_dlinkAdd+0x48>
   3eca8:	add	r0, r0, #4
   3ecac:	str	r1, [r0]
   3ecb0:	b	3ecc4 <rb_dlinkAdd+0x58>
   3ecb4:	mov	r0, r2
   3ecb8:	ldr	r3, [r0, #4]!
   3ecbc:	cmp	r3, #0
   3ecc0:	streq	r1, [r0]
   3ecc4:	str	r1, [r2]
   3ecc8:	ldr	r0, [r2, #8]
   3eccc:	add	r0, r0, #1
   3ecd0:	str	r0, [r2, #8]
   3ecd4:	pop	{fp, pc}
   3ecd8:	ldr	r0, [pc, #88]	; 3ed38 <rb_dlinkAdd+0xcc>
   3ecdc:	add	r0, pc, r0
   3ece0:	ldr	r1, [pc, #84]	; 3ed3c <rb_dlinkAdd+0xd0>
   3ece4:	add	r1, pc, r1
   3ece8:	ldr	r3, [pc, #80]	; 3ed40 <rb_dlinkAdd+0xd4>
   3ecec:	add	r3, pc, r3
   3ecf0:	mov	r2, #143	; 0x8f
   3ecf4:	bl	e7e0 <__assert_fail@plt>
   3ecf8:	ldr	r0, [pc, #68]	; 3ed44 <rb_dlinkAdd+0xd8>
   3ecfc:	add	r0, pc, r0
   3ed00:	ldr	r1, [pc, #64]	; 3ed48 <rb_dlinkAdd+0xdc>
   3ed04:	add	r1, pc, r1
   3ed08:	ldr	r3, [pc, #60]	; 3ed4c <rb_dlinkAdd+0xe0>
   3ed0c:	add	r3, pc, r3
   3ed10:	mov	r2, #144	; 0x90
   3ed14:	bl	e7e0 <__assert_fail@plt>
   3ed18:	ldr	r0, [pc, #48]	; 3ed50 <rb_dlinkAdd+0xe4>
   3ed1c:	add	r0, pc, r0
   3ed20:	ldr	r1, [pc, #44]	; 3ed54 <rb_dlinkAdd+0xe8>
   3ed24:	add	r1, pc, r1
   3ed28:	ldr	r3, [pc, #40]	; 3ed58 <rb_dlinkAdd+0xec>
   3ed2c:	add	r3, pc, r3
   3ed30:	mov	r2, #145	; 0x91
   3ed34:	bl	e7e0 <__assert_fail@plt>
   3ed38:	.word	0x00001c95
   3ed3c:	.word	0x00001c32
   3ed40:	.word	0x00001c92
   3ed44:	.word	0x00001c10
   3ed48:	.word	0x00001c12
   3ed4c:	.word	0x00001c72
   3ed50:	.word	0x00007479
   3ed54:	.word	0x00001bf2
   3ed58:	.word	0x00001c52

0003ed5c <whowas_off_history>:
   3ed5c:	push	{r4, r5, r6, sl, fp, lr}
   3ed60:	add	fp, sp, #16
   3ed64:	mov	r4, r0
   3ed68:	ldr	r5, [r4, #40]!	; 0x28
   3ed6c:	cmp	r5, #0
   3ed70:	beq	3ed98 <whowas_off_history+0x3c>
   3ed74:	mov	r6, #0
   3ed78:	ldr	r0, [r5]
   3ed7c:	ldr	r5, [r5, #8]
   3ed80:	str	r6, [r0, #296]	; 0x128
   3ed84:	add	r0, r0, #16
   3ed88:	mov	r1, r4
   3ed8c:	bl	3ed9c <rb_dlinkDelete>
   3ed90:	cmp	r5, #0
   3ed94:	bne	3ed78 <whowas_off_history+0x1c>
   3ed98:	pop	{r4, r5, r6, sl, fp, pc}

0003ed9c <rb_dlinkDelete>:
   3ed9c:	push	{fp, lr}
   3eda0:	mov	fp, sp
   3eda4:	cmp	r0, #0
   3eda8:	beq	3edfc <rb_dlinkDelete+0x60>
   3edac:	cmp	r1, #0
   3edb0:	beq	3ee1c <rb_dlinkDelete+0x80>
   3edb4:	ldr	ip, [r0, #4]
   3edb8:	ldr	r3, [r0, #8]
   3edbc:	add	r2, r3, #4
   3edc0:	cmp	r3, #0
   3edc4:	addeq	r2, r1, #4
   3edc8:	str	ip, [r2]
   3edcc:	ldmib	r0, {r2, ip}
   3edd0:	cmp	r2, #0
   3edd4:	mov	r3, r1
   3edd8:	addne	r3, r2, #8
   3eddc:	str	ip, [r3]
   3ede0:	mov	r2, #0
   3ede4:	str	r2, [r0, #4]
   3ede8:	str	r2, [r0, #8]
   3edec:	ldr	r0, [r1, #8]
   3edf0:	sub	r0, r0, #1
   3edf4:	str	r0, [r1, #8]
   3edf8:	pop	{fp, pc}
   3edfc:	ldr	r0, [pc, #56]	; 3ee3c <rb_dlinkDelete+0xa0>
   3ee00:	add	r0, pc, r0
   3ee04:	ldr	r1, [pc, #52]	; 3ee40 <rb_dlinkDelete+0xa4>
   3ee08:	add	r1, pc, r1
   3ee0c:	ldr	r3, [pc, #48]	; 3ee44 <rb_dlinkDelete+0xa8>
   3ee10:	add	r3, pc, r3
   3ee14:	mov	r2, #235	; 0xeb
   3ee18:	bl	e7e0 <__assert_fail@plt>
   3ee1c:	ldr	r0, [pc, #36]	; 3ee48 <rb_dlinkDelete+0xac>
   3ee20:	add	r0, pc, r0
   3ee24:	ldr	r1, [pc, #32]	; 3ee4c <rb_dlinkDelete+0xb0>
   3ee28:	add	r1, pc, r1
   3ee2c:	ldr	r3, [pc, #28]	; 3ee50 <rb_dlinkDelete+0xb4>
   3ee30:	add	r3, pc, r3
   3ee34:	mov	r2, #236	; 0xec
   3ee38:	bl	e7e0 <__assert_fail@plt>
   3ee3c:	.word	0x00001b0c
   3ee40:	.word	0x00001b0e
   3ee44:	.word	0x00001ba9
   3ee48:	.word	0x00007375
   3ee4c:	.word	0x00001aee
   3ee50:	.word	0x00001b89

0003ee54 <whowas_get_history>:
   3ee54:	push	{r4, r5, r6, sl, fp, lr}
   3ee58:	add	fp, sp, #16
   3ee5c:	mov	r5, r1
   3ee60:	mov	r1, r0
   3ee64:	ldr	r0, [pc, #88]	; 3eec4 <whowas_get_history+0x70>
   3ee68:	ldr	r0, [pc, r0]
   3ee6c:	bl	dee0 <rb_radixtree_retrieve@plt>
   3ee70:	mov	r4, #0
   3ee74:	cmp	r0, #0
   3ee78:	beq	3eeb0 <whowas_get_history+0x5c>
   3ee7c:	mov	r6, r0
   3ee80:	bl	d07c <rb_current_time@plt>
   3ee84:	ldr	r1, [r6, #8]
   3ee88:	cmp	r1, #0
   3ee8c:	beq	3eeb0 <whowas_get_history+0x5c>
   3ee90:	sub	r0, r0, r5
   3ee94:	ldr	r2, [r1]
   3ee98:	ldr	r3, [r2, #292]	; 0x124
   3ee9c:	cmp	r3, r0
   3eea0:	bge	3eeb8 <whowas_get_history+0x64>
   3eea4:	ldr	r1, [r1, #4]
   3eea8:	cmp	r1, #0
   3eeac:	bne	3ee94 <whowas_get_history+0x40>
   3eeb0:	mov	r0, r4
   3eeb4:	pop	{r4, r5, r6, sl, fp, pc}
   3eeb8:	ldr	r4, [r2, #296]	; 0x128
   3eebc:	mov	r0, r4
   3eec0:	pop	{r4, r5, r6, sl, fp, pc}
   3eec4:	.word	0x00031cf0

0003eec8 <whowas_init>:
   3eec8:	push	{fp, lr}
   3eecc:	mov	fp, sp
   3eed0:	ldr	r0, [pc, #88]	; 3ef30 <whowas_init+0x68>
   3eed4:	add	r0, pc, r0
   3eed8:	ldr	r1, [pc, #84]	; 3ef34 <whowas_init+0x6c>
   3eedc:	add	r1, pc, r1
   3eee0:	bl	d850 <rb_radixtree_create@plt>
   3eee4:	ldr	r1, [pc, #76]	; 3ef38 <whowas_init+0x70>
   3eee8:	add	r1, pc, r1
   3eeec:	str	r0, [r1]
   3eef0:	ldr	r0, [pc, #68]	; 3ef3c <whowas_init+0x74>
   3eef4:	ldr	r0, [pc, r0]
   3eef8:	cmp	r0, #0
   3eefc:	bne	3ef10 <whowas_init+0x48>
   3ef00:	ldr	r0, [pc, #56]	; 3ef40 <whowas_init+0x78>
   3ef04:	add	r0, pc, r0
   3ef08:	movw	r1, #15000	; 0x3a98
   3ef0c:	str	r1, [r0]
   3ef10:	ldr	r0, [pc, #44]	; 3ef44 <whowas_init+0x7c>
   3ef14:	add	r0, pc, r0
   3ef18:	ldr	r1, [pc, #40]	; 3ef48 <whowas_init+0x80>
   3ef1c:	add	r1, pc, r1
   3ef20:	mov	r2, #0
   3ef24:	mov	r3, #10
   3ef28:	pop	{fp, lr}
   3ef2c:	b	d0e8 <rb_event_add@plt>
   3ef30:	.word	0x00009780
   3ef34:	.word	0x00000068
   3ef38:	.word	0x00031c70
   3ef3c:	.word	0x0001e3cc
   3ef40:	.word	0x0001e3bc
   3ef44:	.word	0x00009747
   3ef48:	.word	0xfffffc18

0003ef4c <irccasecanon>:
   3ef4c:	ldrb	r1, [r0]
   3ef50:	cmp	r1, #0
   3ef54:	bxeq	lr
   3ef58:	add	r0, r0, #1
   3ef5c:	ldr	r2, [pc, #32]	; 3ef84 <irccasecanon+0x38>
   3ef60:	ldr	r2, [pc, r2]
   3ef64:	uxtb	r1, r1
   3ef68:	ldrb	r1, [r2, r1]
   3ef6c:	strb	r1, [r0, #-1]
   3ef70:	ldrb	r1, [r0]
   3ef74:	add	r0, r0, #1
   3ef78:	cmp	r1, #0
   3ef7c:	bne	3ef64 <irccasecanon+0x18>
   3ef80:	bx	lr
   3ef84:	.word	0x0001ba08

0003ef88 <whowas_set_size>:
   3ef88:	ldr	r1, [pc, #12]	; 3ef9c <whowas_set_size+0x14>
   3ef8c:	add	r1, pc, r1
   3ef90:	str	r0, [r1]
   3ef94:	mov	r0, #0
   3ef98:	b	3eb3c <whowas_trim>
   3ef9c:	.word	0x0001e334

0003efa0 <whowas_memory_usage>:
   3efa0:	push	{r4, sl, fp, lr}
   3efa4:	add	fp, sp, #8
   3efa8:	mov	r4, r1
   3efac:	ldr	r1, [pc, #52]	; 3efe8 <whowas_memory_usage+0x48>
   3efb0:	add	r1, pc, r1
   3efb4:	ldr	r1, [r1, #8]
   3efb8:	str	r1, [r0]
   3efbc:	ldr	r0, [r4]
   3efc0:	mov	r2, #300	; 0x12c
   3efc4:	mla	r0, r1, r2, r0
   3efc8:	str	r0, [r4]
   3efcc:	ldr	r0, [pc, #24]	; 3efec <whowas_memory_usage+0x4c>
   3efd0:	ldr	r0, [pc, r0]
   3efd4:	bl	e624 <rb_radixtree_size@plt>
   3efd8:	ldr	r1, [r4]
   3efdc:	add	r0, r1, r0, lsl #4
   3efe0:	str	r0, [r4]
   3efe4:	pop	{r4, sl, fp, pc}
   3efe8:	.word	0x00031bac
   3efec:	.word	0x00031b88

0003eff0 <rb_strdup>:
   3eff0:	push	{r4, sl, fp, lr}
   3eff4:	add	fp, sp, #8
   3eff8:	mov	r4, r0
   3effc:	bl	dc94 <strlen@plt>
   3f000:	add	r0, r0, #1
   3f004:	bl	da84 <malloc@plt>
   3f008:	cmp	r0, #0
   3f00c:	beq	3f01c <rb_strdup+0x2c>
   3f010:	mov	r1, r4
   3f014:	pop	{r4, sl, fp, lr}
   3f018:	b	d91c <strcpy@plt>
   3f01c:	bl	d448 <rb_outofmemory@plt>

0003f020 <whowas_free_wtop>:
   3f020:	push	{r4, sl, fp, lr}
   3f024:	add	fp, sp, #8
   3f028:	mov	r4, r0
   3f02c:	ldr	r0, [r0, #12]
   3f030:	cmp	r0, #0
   3f034:	popne	{r4, sl, fp, pc}
   3f038:	ldr	r1, [r4]
   3f03c:	ldr	r0, [pc, #24]	; 3f05c <whowas_free_wtop+0x3c>
   3f040:	ldr	r0, [pc, r0]
   3f044:	bl	e0c0 <rb_radixtree_delete@plt>
   3f048:	ldr	r0, [r4]
   3f04c:	bl	3f060 <rb_free>
   3f050:	mov	r0, r4
   3f054:	pop	{r4, sl, fp, lr}
   3f058:	b	3f060 <rb_free>
   3f05c:	.word	0x00031b18

0003f060 <rb_free>:
   3f060:	cmp	r0, #0
   3f064:	bxeq	lr
   3f068:	b	d328 <free@plt>

0003f06c <restart_wsockd>:
   3f06c:	push	{r4, r5, r6, r7, fp, lr}
   3f070:	add	fp, sp, #16
   3f074:	ldr	r5, [pc, #140]	; 3f108 <restart_wsockd+0x9c>
   3f078:	ldr	r5, [pc, r5]
   3f07c:	cmp	r5, #0
   3f080:	beq	3f0f4 <restart_wsockd+0x88>
   3f084:	mov	r6, #1
   3f088:	ldr	r7, [pc, #124]	; 3f10c <restart_wsockd+0xa0>
   3f08c:	add	r7, pc, r7
   3f090:	b	3f09c <restart_wsockd+0x30>
   3f094:	cmp	r5, #0
   3f098:	beq	3f0f4 <restart_wsockd+0x88>
   3f09c:	ldr	r4, [r5]
   3f0a0:	ldr	r5, [r5, #8]
   3f0a4:	ldrb	r0, [r4, #53]	; 0x35
   3f0a8:	cmp	r0, #0
   3f0ac:	bne	3f094 <restart_wsockd+0x28>
   3f0b0:	ldrb	r0, [r4, #52]	; 0x34
   3f0b4:	cmp	r0, #0
   3f0b8:	bne	3f094 <restart_wsockd+0x28>
   3f0bc:	strb	r6, [r4, #52]	; 0x34
   3f0c0:	ldr	r0, [pc, #72]	; 3f110 <restart_wsockd+0xa4>
   3f0c4:	ldr	r0, [pc, r0]
   3f0c8:	sub	r0, r0, #1
   3f0cc:	str	r0, [r7]
   3f0d0:	ldr	r0, [r4, #12]
   3f0d4:	cmp	r0, #0
   3f0d8:	bne	3f094 <restart_wsockd+0x28>
   3f0dc:	ldr	r0, [r4, #24]
   3f0e0:	mov	r1, #9
   3f0e4:	bl	d478 <rb_kill@plt>
   3f0e8:	mov	r0, r4
   3f0ec:	bl	3f118 <free_ws_daemon>
   3f0f0:	b	3f094 <restart_wsockd+0x28>
   3f0f4:	ldr	r0, [pc, #24]	; 3f114 <restart_wsockd+0xa8>
   3f0f8:	ldr	r0, [pc, r0]
   3f0fc:	ldr	r0, [r0, #304]	; 0x130
   3f100:	pop	{r4, r5, r6, r7, fp, lr}
   3f104:	b	3f220 <start_wsockd>
   3f108:	.word	0x00031af0
   3f10c:	.word	0x00031ae8
   3f110:	.word	0x00031ab0
   3f114:	.word	0x0001b858

0003f118 <free_ws_daemon>:
   3f118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f11c:	add	fp, sp, #24
   3f120:	mov	r8, r0
   3f124:	ldr	r0, [r0, #12]
   3f128:	cmp	r0, #0
   3f12c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f130:	ldr	r6, [r8, #28]
   3f134:	cmp	r6, #0
   3f138:	bne	3f15c <free_ws_daemon+0x44>
   3f13c:	b	3f190 <free_ws_daemon+0x78>
   3f140:	ldr	r0, [r5, #12]
   3f144:	bl	3fbd4 <rb_free>
   3f148:	mov	r0, r5
   3f14c:	bl	3fbd4 <rb_free>
   3f150:	ldr	r6, [r6, #8]
   3f154:	cmp	r6, #0
   3f158:	beq	3f190 <free_ws_daemon+0x78>
   3f15c:	ldr	r5, [r6]
   3f160:	ldr	r0, [r5, #36]	; 0x24
   3f164:	cmp	r0, #1
   3f168:	blt	3f140 <free_ws_daemon+0x28>
   3f16c:	add	r7, r5, #20
   3f170:	mov	r4, #0
   3f174:	ldr	r0, [r7, r4, lsl #2]
   3f178:	bl	db50 <rb_close@plt>
   3f17c:	add	r4, r4, #1
   3f180:	ldr	r0, [r5, #36]	; 0x24
   3f184:	cmp	r4, r0
   3f188:	blt	3f174 <free_ws_daemon+0x5c>
   3f18c:	b	3f140 <free_ws_daemon+0x28>
   3f190:	ldr	r6, [r8, #40]	; 0x28
   3f194:	cmp	r6, #0
   3f198:	bne	3f1bc <free_ws_daemon+0xa4>
   3f19c:	b	3f1f0 <free_ws_daemon+0xd8>
   3f1a0:	ldr	r0, [r5, #12]
   3f1a4:	bl	3fbd4 <rb_free>
   3f1a8:	mov	r0, r5
   3f1ac:	bl	3fbd4 <rb_free>
   3f1b0:	ldr	r6, [r6, #8]
   3f1b4:	cmp	r6, #0
   3f1b8:	beq	3f1f0 <free_ws_daemon+0xd8>
   3f1bc:	ldr	r5, [r6]
   3f1c0:	ldr	r0, [r5, #36]	; 0x24
   3f1c4:	cmp	r0, #1
   3f1c8:	blt	3f1a0 <free_ws_daemon+0x88>
   3f1cc:	add	r7, r5, #20
   3f1d0:	mov	r4, #0
   3f1d4:	ldr	r0, [r7, r4, lsl #2]
   3f1d8:	bl	db50 <rb_close@plt>
   3f1dc:	add	r4, r4, #1
   3f1e0:	ldr	r0, [r5, #36]	; 0x24
   3f1e4:	cmp	r4, r0
   3f1e8:	blt	3f1d4 <free_ws_daemon+0xbc>
   3f1ec:	b	3f1a0 <free_ws_daemon+0x88>
   3f1f0:	ldr	r0, [r8, #16]
   3f1f4:	bl	db50 <rb_close@plt>
   3f1f8:	ldr	r0, [r8, #20]
   3f1fc:	bl	db50 <rb_close@plt>
   3f200:	ldr	r1, [pc, #20]	; 3f21c <free_ws_daemon+0x104>
   3f204:	add	r1, pc, r1
   3f208:	mov	r0, r8
   3f20c:	bl	3fbe0 <rb_dlinkDelete>
   3f210:	mov	r0, r8
   3f214:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f218:	b	3fbd4 <rb_free>
   3f21c:	.word	0x00031964

0003f220 <start_wsockd>:
   3f220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f224:	add	fp, sp, #28
   3f228:	sub	sp, sp, #188	; 0xbc
   3f22c:	sub	sp, sp, #4096	; 0x1000
   3f230:	mov	r9, r0
   3f234:	ldr	r6, [pc, #948]	; 3f5f0 <start_wsockd+0x3d0>
   3f238:	add	r6, pc, r6
   3f23c:	ldrb	r0, [r6]
   3f240:	mov	r4, #0
   3f244:	cmp	r0, #0
   3f248:	bne	3f5e4 <start_wsockd+0x3c4>
   3f24c:	ldr	r0, [pc, #928]	; 3f5f4 <start_wsockd+0x3d4>
   3f250:	ldr	r0, [pc, r0]
   3f254:	cmp	r0, #21
   3f258:	blt	3f2c4 <start_wsockd+0xa4>
   3f25c:	bl	d07c <rb_current_time@plt>
   3f260:	ldr	r1, [pc, #912]	; 3f5f8 <start_wsockd+0x3d8>
   3f264:	ldr	r1, [pc, r1]
   3f268:	sub	r0, r0, r1
   3f26c:	cmp	r0, #4
   3f270:	bgt	3f2c4 <start_wsockd+0xa4>
   3f274:	mov	r4, #0
   3f278:	ldr	r5, [pc, #892]	; 3f5fc <start_wsockd+0x3dc>
   3f27c:	add	r5, pc, r5
   3f280:	mov	r0, #0
   3f284:	mov	r1, r5
   3f288:	bl	e0b4 <ilog@plt>
   3f28c:	mov	r0, #256	; 0x100
   3f290:	mov	r1, #0
   3f294:	mov	r2, r5
   3f298:	bl	d634 <sendto_realops_snomask@plt>
   3f29c:	ldr	r0, [pc, #860]	; 3f600 <start_wsockd+0x3e0>
   3f2a0:	add	r0, pc, r0
   3f2a4:	ldr	r1, [pc, #856]	; 3f604 <start_wsockd+0x3e4>
   3f2a8:	add	r1, pc, r1
   3f2ac:	mov	r2, #0
   3f2b0:	mov	r3, #60	; 0x3c
   3f2b4:	bl	d0e8 <rb_event_add@plt>
   3f2b8:	mov	r0, #1
   3f2bc:	strb	r0, [r6]
   3f2c0:	b	3f5e4 <start_wsockd+0x3c4>
   3f2c4:	ldr	r0, [pc, #828]	; 3f608 <start_wsockd+0x3e8>
   3f2c8:	ldr	r0, [pc, r0]
   3f2cc:	add	r0, r0, #1
   3f2d0:	ldr	r1, [pc, #820]	; 3f60c <start_wsockd+0x3ec>
   3f2d4:	add	r1, pc, r1
   3f2d8:	str	r0, [r1]
   3f2dc:	bl	d07c <rb_current_time@plt>
   3f2e0:	ldr	r1, [pc, #808]	; 3f610 <start_wsockd+0x3f0>
   3f2e4:	add	r1, pc, r1
   3f2e8:	str	r0, [r1]
   3f2ec:	ldr	r0, [pc, #800]	; 3f614 <start_wsockd+0x3f4>
   3f2f0:	ldr	r0, [pc, r0]
   3f2f4:	cmp	r0, #0
   3f2f8:	bne	3f3a0 <start_wsockd+0x180>
   3f2fc:	ldr	r5, [pc, #788]	; 3f618 <start_wsockd+0x3f8>
   3f300:	ldr	r5, [pc, r5]
   3f304:	ldr	r3, [r5, #60]	; 0x3c
   3f308:	ldr	r6, [pc, #780]	; 3f61c <start_wsockd+0x3fc>
   3f30c:	add	r6, pc, r6
   3f310:	mov	r7, #47	; 0x2f
   3f314:	str	r7, [sp]
   3f318:	str	r6, [sp, #4]
   3f31c:	add	r4, sp, #167	; 0xa7
   3f320:	ldr	r2, [pc, #760]	; 3f620 <start_wsockd+0x400>
   3f324:	add	r2, pc, r2
   3f328:	mov	r0, r4
   3f32c:	movw	r1, #4097	; 0x1001
   3f330:	bl	de74 <snprintf@plt>
   3f334:	mov	r0, r4
   3f338:	mov	r1, #1
   3f33c:	bl	e09c <access@plt>
   3f340:	cmn	r0, #1
   3f344:	bne	3f38c <start_wsockd+0x16c>
   3f348:	ldr	r8, [pc, #724]	; 3f624 <start_wsockd+0x404>
   3f34c:	ldr	r8, [pc, r8]
   3f350:	ldr	r3, [r8]
   3f354:	str	r7, [sp]
   3f358:	str	r7, [sp, #4]
   3f35c:	str	r6, [sp, #8]
   3f360:	add	r4, sp, #167	; 0xa7
   3f364:	ldr	r2, [pc, #700]	; 3f628 <start_wsockd+0x408>
   3f368:	add	r2, pc, r2
   3f36c:	mov	r0, r4
   3f370:	movw	r1, #4097	; 0x1001
   3f374:	bl	de74 <snprintf@plt>
   3f378:	mov	r0, r4
   3f37c:	mov	r1, #1
   3f380:	bl	e09c <access@plt>
   3f384:	cmn	r0, #1
   3f388:	beq	3f5bc <start_wsockd+0x39c>
   3f38c:	add	r0, sp, #167	; 0xa7
   3f390:	bl	3f6f4 <rb_strdup>
   3f394:	ldr	r1, [pc, #664]	; 3f634 <start_wsockd+0x414>
   3f398:	add	r1, pc, r1
   3f39c:	str	r0, [r1]
   3f3a0:	add	r6, sp, #24
   3f3a4:	ldr	r1, [pc, #652]	; 3f638 <start_wsockd+0x418>
   3f3a8:	add	r1, pc, r1
   3f3ac:	mov	r0, r6
   3f3b0:	mov	r2, #128	; 0x80
   3f3b4:	bl	e510 <rb_strlcpy@plt>
   3f3b8:	mov	r4, #0
   3f3bc:	str	r4, [sp, #156]	; 0x9c
   3f3c0:	str	r6, [sp, #152]	; 0x98
   3f3c4:	cmp	r9, #1
   3f3c8:	blt	3f5e4 <start_wsockd+0x3c4>
   3f3cc:	mov	r4, #0
   3f3d0:	add	r7, sp, #161	; 0xa1
   3f3d4:	ldr	r6, [pc, #608]	; 3f63c <start_wsockd+0x41c>
   3f3d8:	add	r6, pc, r6
   3f3dc:	add	sl, sp, #14
   3f3e0:	sub	r0, fp, #40	; 0x28
   3f3e4:	str	r0, [sp]
   3f3e8:	ldr	r0, [pc, #592]	; 3f640 <start_wsockd+0x420>
   3f3ec:	add	r0, pc, r0
   3f3f0:	str	r0, [sp, #4]
   3f3f4:	mov	r0, #1
   3f3f8:	mov	r1, #2
   3f3fc:	mov	r2, #0
   3f400:	sub	r3, fp, #36	; 0x24
   3f404:	bl	d514 <rb_socketpair@plt>
   3f408:	cmn	r0, #1
   3f40c:	beq	3f538 <start_wsockd+0x318>
   3f410:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f414:	mov	r1, #16384	; 0x4000
   3f418:	bl	e210 <rb_set_buffers@plt>
   3f41c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f420:	mov	r1, #16384	; 0x4000
   3f424:	bl	e210 <rb_set_buffers@plt>
   3f428:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f42c:	bl	db8c <rb_get_fd@plt>
   3f430:	mov	r3, r0
   3f434:	mov	r0, r7
   3f438:	mov	r1, #6
   3f43c:	mov	r2, r6
   3f440:	bl	de74 <snprintf@plt>
   3f444:	ldr	r0, [pc, #508]	; 3f648 <start_wsockd+0x428>
   3f448:	add	r0, pc, r0
   3f44c:	mov	r1, r7
   3f450:	mov	r2, #1
   3f454:	bl	cf68 <rb_setenv@plt>
   3f458:	sub	r0, fp, #44	; 0x2c
   3f45c:	sub	r1, fp, #48	; 0x30
   3f460:	ldr	r2, [pc, #484]	; 3f64c <start_wsockd+0x42c>
   3f464:	add	r2, pc, r2
   3f468:	bl	e2a0 <rb_pipe@plt>
   3f46c:	cmn	r0, #1
   3f470:	beq	3f554 <start_wsockd+0x334>
   3f474:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f478:	bl	db8c <rb_get_fd@plt>
   3f47c:	mov	r3, r0
   3f480:	mov	r0, r7
   3f484:	mov	r1, #6
   3f488:	mov	r2, r6
   3f48c:	bl	de74 <snprintf@plt>
   3f490:	ldr	r0, [pc, #444]	; 3f654 <start_wsockd+0x434>
   3f494:	add	r0, pc, r0
   3f498:	mov	r1, r7
   3f49c:	mov	r2, #1
   3f4a0:	bl	cf68 <rb_setenv@plt>
   3f4a4:	bl	dc1c <getpid@plt>
   3f4a8:	mov	r3, r0
   3f4ac:	mov	r0, sl
   3f4b0:	mov	r1, #10
   3f4b4:	mov	r2, r6
   3f4b8:	bl	de74 <snprintf@plt>
   3f4bc:	ldr	r0, [pc, #404]	; 3f658 <start_wsockd+0x438>
   3f4c0:	add	r0, pc, r0
   3f4c4:	mov	r1, sl
   3f4c8:	mov	r2, #1
   3f4cc:	bl	cf68 <rb_setenv@plt>
   3f4d0:	ldr	r0, [pc, #388]	; 3f65c <start_wsockd+0x43c>
   3f4d4:	ldr	r0, [pc, r0]
   3f4d8:	add	r1, sp, #152	; 0x98
   3f4dc:	bl	e294 <rb_spawn_process@plt>
   3f4e0:	cmn	r0, #1
   3f4e4:	beq	3f578 <start_wsockd+0x358>
   3f4e8:	mov	r8, r0
   3f4ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f4f0:	bl	db50 <rb_close@plt>
   3f4f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f4f8:	bl	db50 <rb_close@plt>
   3f4fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f500:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f504:	mov	r2, r8
   3f508:	bl	3f724 <allocate_ws_daemon>
   3f50c:	mov	r5, r0
   3f510:	ldr	r0, [r0, #16]
   3f514:	mov	r1, r5
   3f518:	bl	3f798 <ws_read_ctl>
   3f51c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f520:	mov	r1, r5
   3f524:	bl	3f8b8 <ws_do_pipe>
   3f528:	add	r4, r4, #1
   3f52c:	cmp	r9, r4
   3f530:	bne	3f3e0 <start_wsockd+0x1c0>
   3f534:	b	3f5e4 <start_wsockd+0x3c4>
   3f538:	bl	de38 <__errno_location@plt>
   3f53c:	ldr	r0, [r0]
   3f540:	bl	dac0 <strerror@plt>
   3f544:	mov	r2, r0
   3f548:	ldr	r1, [pc, #244]	; 3f644 <start_wsockd+0x424>
   3f54c:	add	r1, pc, r1
   3f550:	b	3f56c <start_wsockd+0x34c>
   3f554:	bl	de38 <__errno_location@plt>
   3f558:	ldr	r0, [r0]
   3f55c:	bl	dac0 <strerror@plt>
   3f560:	mov	r2, r0
   3f564:	ldr	r1, [pc, #228]	; 3f650 <start_wsockd+0x430>
   3f568:	add	r1, pc, r1
   3f56c:	mov	r0, #0
   3f570:	bl	e0b4 <ilog@plt>
   3f574:	b	3f5e4 <start_wsockd+0x3c4>
   3f578:	bl	de38 <__errno_location@plt>
   3f57c:	ldr	r0, [r0]
   3f580:	bl	dac0 <strerror@plt>
   3f584:	mov	r2, r0
   3f588:	ldr	r1, [pc, #208]	; 3f660 <start_wsockd+0x440>
   3f58c:	add	r1, pc, r1
   3f590:	mov	r0, #0
   3f594:	bl	e0b4 <ilog@plt>
   3f598:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f59c:	bl	db50 <rb_close@plt>
   3f5a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f5a4:	bl	db50 <rb_close@plt>
   3f5a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3f5ac:	bl	db50 <rb_close@plt>
   3f5b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f5b4:	bl	db50 <rb_close@plt>
   3f5b8:	b	3f5e4 <start_wsockd+0x3c4>
   3f5bc:	ldr	r3, [r5, #60]	; 0x3c
   3f5c0:	ldr	r0, [r8]
   3f5c4:	str	r0, [sp]
   3f5c8:	mov	r4, #0
   3f5cc:	ldr	r1, [pc, #88]	; 3f62c <start_wsockd+0x40c>
   3f5d0:	add	r1, pc, r1
   3f5d4:	ldr	r2, [pc, #84]	; 3f630 <start_wsockd+0x410>
   3f5d8:	add	r2, pc, r2
   3f5dc:	mov	r0, #0
   3f5e0:	bl	e0b4 <ilog@plt>
   3f5e4:	mov	r0, r4
   3f5e8:	sub	sp, fp, #28
   3f5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f5f0:	.word	0x00031940
   3f5f4:	.word	0x0003192c
   3f5f8:	.word	0x0003191c
   3f5fc:	.word	0x000093eb
   3f600:	.word	0x00009407
   3f604:	.word	0x000003b4
   3f608:	.word	0x000318b4
   3f60c:	.word	0x000318a8
   3f610:	.word	0x0003189c
   3f614:	.word	0x00031894
   3f618:	.word	0x0001b748
   3f61c:	.word	0x00006849
   3f620:	.word	0x00009398
   3f624:	.word	0x0001b830
   3f628:	.word	0x00009361
   3f62c:	.word	0x0000910b
   3f630:	.word	0x0000657d
   3f634:	.word	0x000317ec
   3f638:	.word	0x0000935e
   3f63c:	.word	0x0000185c
   3f640:	.word	0x0000932e
   3f644:	.word	0x000091eb
   3f648:	.word	0x0000846e
   3f64c:	.word	0x00009306
   3f650:	.word	0x0000920e
   3f654:	.word	0x00008461
   3f658:	.word	0x0000843e
   3f65c:	.word	0x000316b0
   3f660:	.word	0x00009217

0003f664 <restart_wsockd_event>:
   3f664:	push	{r4, r5, r6, sl, fp, lr}
   3f668:	add	fp, sp, #16
   3f66c:	ldr	r0, [pc, #108]	; 3f6e0 <restart_wsockd_event+0x7c>
   3f670:	add	r0, pc, r0
   3f674:	mov	r1, #0
   3f678:	str	r1, [r0]
   3f67c:	ldr	r0, [pc, #96]	; 3f6e4 <restart_wsockd_event+0x80>
   3f680:	add	r0, pc, r0
   3f684:	str	r1, [r0]
   3f688:	ldr	r0, [pc, #88]	; 3f6e8 <restart_wsockd_event+0x84>
   3f68c:	add	r0, pc, r0
   3f690:	strb	r1, [r0]
   3f694:	ldr	r0, [pc, #80]	; 3f6ec <restart_wsockd_event+0x88>
   3f698:	ldr	r0, [pc, r0]
   3f69c:	ldr	r6, [r0, #304]	; 0x130
   3f6a0:	bl	e4b0 <get_wsockd_count@plt>
   3f6a4:	cmp	r6, r0
   3f6a8:	pople	{r4, r5, r6, sl, fp, pc}
   3f6ac:	mov	r4, r0
   3f6b0:	ldr	r5, [pc, #56]	; 3f6f0 <restart_wsockd_event+0x8c>
   3f6b4:	add	r5, pc, r5
   3f6b8:	mov	r0, #0
   3f6bc:	mov	r1, r5
   3f6c0:	bl	e0b4 <ilog@plt>
   3f6c4:	mov	r0, #256	; 0x100
   3f6c8:	mov	r1, #0
   3f6cc:	mov	r2, r5
   3f6d0:	bl	d634 <sendto_realops_snomask@plt>
   3f6d4:	sub	r0, r6, r4
   3f6d8:	pop	{r4, r5, r6, sl, fp, lr}
   3f6dc:	b	3f220 <start_wsockd>
   3f6e0:	.word	0x00031510
   3f6e4:	.word	0x000314fc
   3f6e8:	.word	0x000314ec
   3f6ec:	.word	0x0001b2b8
   3f6f0:	.word	0x0000911c

0003f6f4 <rb_strdup>:
   3f6f4:	push	{r4, sl, fp, lr}
   3f6f8:	add	fp, sp, #8
   3f6fc:	mov	r4, r0
   3f700:	bl	dc94 <strlen@plt>
   3f704:	add	r0, r0, #1
   3f708:	bl	da84 <malloc@plt>
   3f70c:	cmp	r0, #0
   3f710:	beq	3f720 <rb_strdup+0x2c>
   3f714:	mov	r1, r4
   3f718:	pop	{r4, sl, fp, lr}
   3f71c:	b	d91c <strcpy@plt>
   3f720:	bl	d448 <rb_outofmemory@plt>

0003f724 <allocate_ws_daemon>:
   3f724:	push	{r4, r5, r6, r7, fp, lr}
   3f728:	add	fp, sp, #16
   3f72c:	mov	r4, #0
   3f730:	cmp	r0, #0
   3f734:	beq	3f788 <allocate_ws_daemon+0x64>
   3f738:	mov	r5, r2
   3f73c:	cmp	r2, #0
   3f740:	bmi	3f788 <allocate_ws_daemon+0x64>
   3f744:	mov	r6, r1
   3f748:	mov	r7, r0
   3f74c:	mov	r0, #56	; 0x38
   3f750:	bl	3fc98 <rb_malloc>
   3f754:	mov	r4, r0
   3f758:	str	r7, [r0, #16]
   3f75c:	str	r6, [r0, #20]
   3f760:	str	r5, [r0, #24]
   3f764:	ldr	r0, [pc, #36]	; 3f790 <allocate_ws_daemon+0x6c>
   3f768:	ldr	r0, [pc, r0]
   3f76c:	add	r0, r0, #1
   3f770:	ldr	r1, [pc, #28]	; 3f794 <allocate_ws_daemon+0x70>
   3f774:	add	r1, pc, r1
   3f778:	str	r0, [r1]
   3f77c:	mov	r0, r4
   3f780:	mov	r1, r4
   3f784:	bl	3fcb8 <rb_dlinkAdd>
   3f788:	mov	r0, r4
   3f78c:	pop	{r4, r5, r6, r7, fp, pc}
   3f790:	.word	0x0003140c
   3f794:	.word	0x00031400

0003f798 <ws_read_ctl>:
   3f798:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f79c:	add	fp, sp, #24
   3f7a0:	sub	sp, sp, #8
   3f7a4:	ldrb	r0, [r1, #53]	; 0x35
   3f7a8:	cmp	r0, #0
   3f7ac:	beq	3f7b8 <ws_read_ctl+0x20>
   3f7b0:	sub	sp, fp, #24
   3f7b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f7b8:	mov	r4, r1
   3f7bc:	mov	r0, #40	; 0x28
   3f7c0:	bl	3fc98 <rb_malloc>
   3f7c4:	mov	r5, r0
   3f7c8:	mov	r0, #1024	; 0x400
   3f7cc:	bl	3fc98 <rb_malloc>
   3f7d0:	mov	r1, r0
   3f7d4:	str	r0, [r5, #12]
   3f7d8:	ldr	r0, [r4, #16]
   3f7dc:	mov	r8, #4
   3f7e0:	str	r8, [sp]
   3f7e4:	add	r3, r5, #20
   3f7e8:	mov	r2, #1024	; 0x400
   3f7ec:	bl	d808 <rb_recv_fd_buf@plt>
   3f7f0:	str	r0, [r5, #16]
   3f7f4:	cmp	r0, #1
   3f7f8:	blt	3f84c <ws_read_ctl+0xb4>
   3f7fc:	add	r6, r4, #28
   3f800:	mov	r0, r5
   3f804:	mov	r1, r5
   3f808:	mov	r2, r6
   3f80c:	bl	3fe14 <rb_dlinkAddTail>
   3f810:	mov	r0, #40	; 0x28
   3f814:	bl	3fc98 <rb_malloc>
   3f818:	mov	r5, r0
   3f81c:	mov	r0, #1024	; 0x400
   3f820:	bl	3fc98 <rb_malloc>
   3f824:	mov	r1, r0
   3f828:	str	r0, [r5, #12]
   3f82c:	ldr	r0, [r4, #16]
   3f830:	str	r8, [sp]
   3f834:	add	r3, r5, #20
   3f838:	mov	r2, #1024	; 0x400
   3f83c:	bl	d808 <rb_recv_fd_buf@plt>
   3f840:	str	r0, [r5, #16]
   3f844:	cmp	r0, #0
   3f848:	bgt	3f800 <ws_read_ctl+0x68>
   3f84c:	mov	r7, r0
   3f850:	ldr	r0, [r5, #12]
   3f854:	bl	3fbd4 <rb_free>
   3f858:	mov	r0, r5
   3f85c:	bl	3fbd4 <rb_free>
   3f860:	cmp	r7, #0
   3f864:	beq	3f8a4 <ws_read_ctl+0x10c>
   3f868:	bl	de38 <__errno_location@plt>
   3f86c:	ldr	r0, [r0]
   3f870:	bl	dab4 <rb_ignore_errno@plt>
   3f874:	cmp	r0, #0
   3f878:	beq	3f8a4 <ws_read_ctl+0x10c>
   3f87c:	mov	r0, r4
   3f880:	bl	3ff0c <ws_process_cmd_recv>
   3f884:	ldr	r0, [r4, #16]
   3f888:	ldr	r2, [pc, #36]	; 3f8b4 <ws_read_ctl+0x11c>
   3f88c:	add	r2, pc, r2
   3f890:	mov	r1, #1
   3f894:	mov	r3, r4
   3f898:	sub	sp, fp, #24
   3f89c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f8a0:	b	d304 <rb_setselect@plt>
   3f8a4:	mov	r0, r4
   3f8a8:	sub	sp, fp, #24
   3f8ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f8b0:	b	3fd84 <ws_dead>
   3f8b4:	.word	0xffffff04

0003f8b8 <ws_do_pipe>:
   3f8b8:	push	{r4, r5, fp, lr}
   3f8bc:	add	fp, sp, #8
   3f8c0:	mov	r4, r1
   3f8c4:	mov	r5, r0
   3f8c8:	ldr	r1, [pc, #84]	; 3f924 <ws_do_pipe+0x6c>
   3f8cc:	add	r1, pc, r1
   3f8d0:	mov	r2, #1
   3f8d4:	bl	e738 <rb_write@plt>
   3f8d8:	cmp	r0, #0
   3f8dc:	beq	3f918 <ws_do_pipe+0x60>
   3f8e0:	cmn	r0, #1
   3f8e4:	bgt	3f8fc <ws_do_pipe+0x44>
   3f8e8:	bl	de38 <__errno_location@plt>
   3f8ec:	ldr	r0, [r0]
   3f8f0:	bl	dab4 <rb_ignore_errno@plt>
   3f8f4:	cmp	r0, #0
   3f8f8:	beq	3f918 <ws_do_pipe+0x60>
   3f8fc:	ldr	r2, [pc, #36]	; 3f928 <ws_do_pipe+0x70>
   3f900:	add	r2, pc, r2
   3f904:	mov	r0, r5
   3f908:	mov	r1, #1
   3f90c:	mov	r3, r4
   3f910:	pop	{r4, r5, fp, lr}
   3f914:	b	d304 <rb_setselect@plt>
   3f918:	mov	r0, r4
   3f91c:	pop	{r4, r5, fp, lr}
   3f920:	b	3fd84 <ws_dead>
   3f924:	.word	0x000084b1
   3f928:	.word	0xffffffb0

0003f92c <start_wsockd_accept>:
   3f92c:	push	{r4, sl, fp, lr}
   3f930:	add	fp, sp, #8
   3f934:	sub	sp, sp, #16
   3f938:	str	r1, [sp, #12]
   3f93c:	str	r0, [sp, #8]
   3f940:	mov	r0, #65	; 0x41
   3f944:	strb	r0, [sp, #3]
   3f948:	add	r0, sp, #3
   3f94c:	add	r0, r0, #1
   3f950:	mov	r1, r2
   3f954:	bl	3f990 <uint32_to_buf>
   3f958:	bl	3f998 <which_wsockd>
   3f95c:	mov	r4, r0
   3f960:	cmp	r0, #0
   3f964:	beq	3f984 <start_wsockd_accept+0x58>
   3f968:	ldr	r0, [r4, #12]
   3f96c:	add	r0, r0, #1
   3f970:	str	r0, [r4, #12]
   3f974:	add	r1, sp, #8
   3f978:	add	r2, sp, #3
   3f97c:	mov	r0, r4
   3f980:	bl	3f9f8 <ws_cmd_write_queue>
   3f984:	mov	r0, r4
   3f988:	sub	sp, fp, #8
   3f98c:	pop	{r4, sl, fp, pc}

0003f990 <uint32_to_buf>:
   3f990:	str	r1, [r0]
   3f994:	bx	lr

0003f998 <which_wsockd>:
   3f998:	ldr	r1, [pc, #84]	; 3f9f4 <which_wsockd+0x5c>
   3f99c:	ldr	r1, [pc, r1]
   3f9a0:	mov	r0, #0
   3f9a4:	b	3f9bc <which_wsockd+0x24>
   3f9a8:	ldr	ip, [r0, #12]
   3f9ac:	ldr	r3, [r2, #12]
   3f9b0:	cmp	r3, ip
   3f9b4:	movlt	r0, r2
   3f9b8:	ldr	r1, [r1, #8]
   3f9bc:	cmp	r1, #0
   3f9c0:	bxeq	lr
   3f9c4:	ldr	r2, [r1]
   3f9c8:	ldrb	r3, [r2, #53]	; 0x35
   3f9cc:	cmp	r3, #0
   3f9d0:	bne	3f9b8 <which_wsockd+0x20>
   3f9d4:	ldrb	r3, [r2, #52]	; 0x34
   3f9d8:	cmp	r3, #0
   3f9dc:	bne	3f9b8 <which_wsockd+0x20>
   3f9e0:	cmp	r0, #0
   3f9e4:	bne	3f9a8 <which_wsockd+0x10>
   3f9e8:	mov	r0, r2
   3f9ec:	ldr	r1, [r1, #8]
   3f9f0:	b	3f9bc <which_wsockd+0x24>
   3f9f4:	.word	0x000311cc

0003f9f8 <ws_cmd_write_queue>:
   3f9f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f9fc:	add	fp, sp, #24
   3fa00:	mov	r4, r0
   3fa04:	ldrb	r0, [r0, #53]	; 0x35
   3fa08:	cmp	r0, #0
   3fa0c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3fa10:	mov	r6, r2
   3fa14:	mov	r5, r1
   3fa18:	mov	r0, #40	; 0x28
   3fa1c:	bl	3fc98 <rb_malloc>
   3fa20:	mov	r7, r0
   3fa24:	mov	r8, #5
   3fa28:	mov	r0, #5
   3fa2c:	bl	3fc98 <rb_malloc>
   3fa30:	ldr	r1, [r6]
   3fa34:	str	r1, [r0]
   3fa38:	ldrb	r1, [r6, #4]
   3fa3c:	strb	r1, [r0, #4]
   3fa40:	ldm	r5, {r1, r2}
   3fa44:	mov	r3, #2
   3fa48:	str	r3, [r7, #36]	; 0x24
   3fa4c:	str	r0, [r7, #12]
   3fa50:	str	r8, [r7, #16]
   3fa54:	str	r1, [r7, #20]
   3fa58:	str	r2, [r7, #24]
   3fa5c:	add	r2, r4, #40	; 0x28
   3fa60:	mov	r0, r7
   3fa64:	mov	r1, r7
   3fa68:	bl	3fe14 <rb_dlinkAddTail>
   3fa6c:	ldr	r0, [r4, #16]
   3fa70:	mov	r1, r4
   3fa74:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3fa78:	b	400a8 <ws_write_ctl>

0003fa7c <wsockd_decrement_clicount>:
   3fa7c:	push	{r4, sl, fp, lr}
   3fa80:	add	fp, sp, #8
   3fa84:	cmp	r0, #0
   3fa88:	beq	3fad8 <wsockd_decrement_clicount+0x5c>
   3fa8c:	mov	r4, r0
   3fa90:	ldr	r0, [r0, #12]
   3fa94:	subs	r0, r0, #1
   3fa98:	str	r0, [r4, #12]
   3fa9c:	bne	3fac0 <wsockd_decrement_clicount+0x44>
   3faa0:	ldrb	r0, [r4, #52]	; 0x34
   3faa4:	cmp	r0, #0
   3faa8:	beq	3fac0 <wsockd_decrement_clicount+0x44>
   3faac:	mov	r0, #1
   3fab0:	strb	r0, [r4, #53]	; 0x35
   3fab4:	ldr	r0, [r4, #24]
   3fab8:	mov	r1, #9
   3fabc:	bl	d478 <rb_kill@plt>
   3fac0:	ldrb	r0, [r4, #53]	; 0x35
   3fac4:	cmp	r0, #0
   3fac8:	popeq	{r4, sl, fp, pc}
   3facc:	ldr	r0, [r4, #12]
   3fad0:	cmp	r0, #0
   3fad4:	beq	3fadc <wsockd_decrement_clicount+0x60>
   3fad8:	pop	{r4, sl, fp, pc}
   3fadc:	mov	r0, r4
   3fae0:	pop	{r4, sl, fp, lr}
   3fae4:	b	3f118 <free_ws_daemon>

0003fae8 <get_wsockd_count>:
   3fae8:	ldr	r0, [pc, #4]	; 3faf4 <get_wsockd_count+0xc>
   3faec:	ldr	r0, [pc, r0]
   3faf0:	bx	lr
   3faf4:	.word	0x00031088

0003faf8 <wsockd_foreach_info>:
   3faf8:	push	{r4, r5, r6, r7, fp, lr}
   3fafc:	add	fp, sp, #16
   3fb00:	ldr	r6, [pc, #88]	; 3fb60 <wsockd_foreach_info+0x68>
   3fb04:	ldr	r6, [pc, r6]
   3fb08:	cmp	r6, #0
   3fb0c:	beq	3fb5c <wsockd_foreach_info+0x64>
   3fb10:	mov	r7, r1
   3fb14:	mov	r5, r0
   3fb18:	b	3fb2c <wsockd_foreach_info+0x34>
   3fb1c:	mov	r0, r7
   3fb20:	blx	r5
   3fb24:	cmp	r6, #0
   3fb28:	beq	3fb5c <wsockd_foreach_info+0x64>
   3fb2c:	ldr	r0, [r6]
   3fb30:	ldr	r6, [r6, #8]
   3fb34:	ldr	r2, [r0, #12]
   3fb38:	ldr	r1, [r0, #24]
   3fb3c:	ldrb	r4, [r0, #53]	; 0x35
   3fb40:	mov	r3, #2
   3fb44:	cmp	r4, #0
   3fb48:	bne	3fb1c <wsockd_foreach_info+0x24>
   3fb4c:	ldrb	r3, [r0, #52]	; 0x34
   3fb50:	cmp	r3, #0
   3fb54:	movwne	r3, #1
   3fb58:	b	3fb1c <wsockd_foreach_info+0x24>
   3fb5c:	pop	{r4, r5, r6, r7, fp, pc}
   3fb60:	.word	0x00031064

0003fb64 <init_wsockd>:
   3fb64:	ldr	r0, [pc, #20]	; 3fb80 <init_wsockd+0x1c>
   3fb68:	add	r0, pc, r0
   3fb6c:	ldr	r1, [pc, #16]	; 3fb84 <init_wsockd+0x20>
   3fb70:	add	r1, pc, r1
   3fb74:	mov	r2, #0
   3fb78:	mov	r3, #60	; 0x3c
   3fb7c:	b	d220 <rb_event_addish@plt>
   3fb80:	.word	0x00008c58
   3fb84:	.word	0x00000010

0003fb88 <cleanup_dead_ws>:
   3fb88:	push	{r4, sl, fp, lr}
   3fb8c:	add	fp, sp, #8
   3fb90:	ldr	r4, [pc, #56]	; 3fbd0 <cleanup_dead_ws+0x48>
   3fb94:	ldr	r4, [pc, r4]
   3fb98:	cmp	r4, #0
   3fb9c:	beq	3fbcc <cleanup_dead_ws+0x44>
   3fba0:	ldr	r0, [r4]
   3fba4:	ldr	r4, [r4, #8]
   3fba8:	ldrb	r1, [r0, #53]	; 0x35
   3fbac:	cmp	r1, #0
   3fbb0:	beq	3fb98 <cleanup_dead_ws+0x10>
   3fbb4:	ldr	r1, [r0, #12]
   3fbb8:	cmp	r1, #0
   3fbbc:	bne	3fb98 <cleanup_dead_ws+0x10>
   3fbc0:	bl	3f118 <free_ws_daemon>
   3fbc4:	cmp	r4, #0
   3fbc8:	bne	3fba0 <cleanup_dead_ws+0x18>
   3fbcc:	pop	{r4, sl, fp, pc}
   3fbd0:	.word	0x00030fd4

0003fbd4 <rb_free>:
   3fbd4:	cmp	r0, #0
   3fbd8:	bxeq	lr
   3fbdc:	b	d328 <free@plt>

0003fbe0 <rb_dlinkDelete>:
   3fbe0:	push	{fp, lr}
   3fbe4:	mov	fp, sp
   3fbe8:	cmp	r0, #0
   3fbec:	beq	3fc40 <rb_dlinkDelete+0x60>
   3fbf0:	cmp	r1, #0
   3fbf4:	beq	3fc60 <rb_dlinkDelete+0x80>
   3fbf8:	ldr	ip, [r0, #4]
   3fbfc:	ldr	r3, [r0, #8]
   3fc00:	add	r2, r3, #4
   3fc04:	cmp	r3, #0
   3fc08:	addeq	r2, r1, #4
   3fc0c:	str	ip, [r2]
   3fc10:	ldmib	r0, {r2, ip}
   3fc14:	cmp	r2, #0
   3fc18:	mov	r3, r1
   3fc1c:	addne	r3, r2, #8
   3fc20:	str	ip, [r3]
   3fc24:	mov	r2, #0
   3fc28:	str	r2, [r0, #4]
   3fc2c:	str	r2, [r0, #8]
   3fc30:	ldr	r0, [r1, #8]
   3fc34:	sub	r0, r0, #1
   3fc38:	str	r0, [r1, #8]
   3fc3c:	pop	{fp, pc}
   3fc40:	ldr	r0, [pc, #56]	; 3fc80 <rb_dlinkDelete+0xa0>
   3fc44:	add	r0, pc, r0
   3fc48:	ldr	r1, [pc, #52]	; 3fc84 <rb_dlinkDelete+0xa4>
   3fc4c:	add	r1, pc, r1
   3fc50:	ldr	r3, [pc, #48]	; 3fc88 <rb_dlinkDelete+0xa8>
   3fc54:	add	r3, pc, r3
   3fc58:	mov	r2, #235	; 0xeb
   3fc5c:	bl	e7e0 <__assert_fail@plt>
   3fc60:	ldr	r0, [pc, #36]	; 3fc8c <rb_dlinkDelete+0xac>
   3fc64:	add	r0, pc, r0
   3fc68:	ldr	r1, [pc, #32]	; 3fc90 <rb_dlinkDelete+0xb0>
   3fc6c:	add	r1, pc, r1
   3fc70:	ldr	r3, [pc, #28]	; 3fc94 <rb_dlinkDelete+0xb4>
   3fc74:	add	r3, pc, r3
   3fc78:	mov	r2, #236	; 0xec
   3fc7c:	bl	e7e0 <__assert_fail@plt>
   3fc80:	.word	0x00000cc8
   3fc84:	.word	0x00000cca
   3fc88:	.word	0x00000d65
   3fc8c:	.word	0x00006531
   3fc90:	.word	0x00000caa
   3fc94:	.word	0x00000d45

0003fc98 <rb_malloc>:
   3fc98:	push	{fp, lr}
   3fc9c:	mov	fp, sp
   3fca0:	mov	r1, r0
   3fca4:	mov	r0, #1
   3fca8:	bl	cfa4 <calloc@plt>
   3fcac:	cmp	r0, #0
   3fcb0:	popne	{fp, pc}
   3fcb4:	bl	d448 <rb_outofmemory@plt>

0003fcb8 <rb_dlinkAdd>:
   3fcb8:	push	{fp, lr}
   3fcbc:	mov	fp, sp
   3fcc0:	cmp	r0, #0
   3fcc4:	beq	3fd24 <rb_dlinkAdd+0x6c>
   3fcc8:	cmp	r1, #0
   3fccc:	beq	3fd44 <rb_dlinkAdd+0x8c>
   3fcd0:	mov	r2, #0
   3fcd4:	stm	r1, {r0, r2}
   3fcd8:	ldr	r2, [pc, #132]	; 3fd64 <rb_dlinkAdd+0xac>
   3fcdc:	ldr	r2, [pc, r2]
   3fce0:	str	r2, [r1, #8]
   3fce4:	cmp	r2, #0
   3fce8:	ldr	r0, [pc, #120]	; 3fd68 <rb_dlinkAdd+0xb0>
   3fcec:	add	r0, pc, r0
   3fcf0:	beq	3fd00 <rb_dlinkAdd+0x48>
   3fcf4:	add	r2, r2, #4
   3fcf8:	str	r1, [r2]
   3fcfc:	b	3fd10 <rb_dlinkAdd+0x58>
   3fd00:	mov	r2, r0
   3fd04:	ldr	r3, [r2, #4]!
   3fd08:	cmp	r3, #0
   3fd0c:	streq	r1, [r2]
   3fd10:	str	r1, [r0]
   3fd14:	ldr	r1, [r0, #8]
   3fd18:	add	r1, r1, #1
   3fd1c:	str	r1, [r0, #8]
   3fd20:	pop	{fp, pc}
   3fd24:	ldr	r0, [pc, #64]	; 3fd6c <rb_dlinkAdd+0xb4>
   3fd28:	add	r0, pc, r0
   3fd2c:	ldr	r1, [pc, #60]	; 3fd70 <rb_dlinkAdd+0xb8>
   3fd30:	add	r1, pc, r1
   3fd34:	ldr	r3, [pc, #56]	; 3fd74 <rb_dlinkAdd+0xbc>
   3fd38:	add	r3, pc, r3
   3fd3c:	mov	r2, #143	; 0x8f
   3fd40:	bl	e7e0 <__assert_fail@plt>
   3fd44:	ldr	r0, [pc, #44]	; 3fd78 <rb_dlinkAdd+0xc0>
   3fd48:	add	r0, pc, r0
   3fd4c:	ldr	r1, [pc, #40]	; 3fd7c <rb_dlinkAdd+0xc4>
   3fd50:	add	r1, pc, r1
   3fd54:	ldr	r3, [pc, #36]	; 3fd80 <rb_dlinkAdd+0xc8>
   3fd58:	add	r3, pc, r3
   3fd5c:	mov	r2, #144	; 0x90
   3fd60:	bl	e7e0 <__assert_fail@plt>
   3fd64:	.word	0x00030e8c
   3fd68:	.word	0x00030e7c
   3fd6c:	.word	0x00000c49
   3fd70:	.word	0x00000be6
   3fd74:	.word	0x00000c46
   3fd78:	.word	0x00000bc4
   3fd7c:	.word	0x00000bc6
   3fd80:	.word	0x00000c26

0003fd84 <ws_dead>:
   3fd84:	push	{r4, sl, fp, lr}
   3fd88:	add	fp, sp, #8
   3fd8c:	mov	r4, r0
   3fd90:	ldrb	r0, [r0, #53]	; 0x35
   3fd94:	cmp	r0, #0
   3fd98:	popne	{r4, sl, fp, pc}
   3fd9c:	mov	r0, #1
   3fda0:	strb	r0, [r4, #53]	; 0x35
   3fda4:	ldr	r0, [r4, #24]
   3fda8:	mov	r1, #9
   3fdac:	bl	d478 <rb_kill@plt>
   3fdb0:	ldrb	r0, [r4, #52]	; 0x34
   3fdb4:	cmp	r0, #0
   3fdb8:	beq	3fdc0 <ws_dead+0x3c>
   3fdbc:	pop	{r4, sl, fp, pc}
   3fdc0:	ldr	r0, [pc, #64]	; 3fe08 <ws_dead+0x84>
   3fdc4:	ldr	r0, [pc, r0]
   3fdc8:	sub	r0, r0, #1
   3fdcc:	ldr	r1, [pc, #56]	; 3fe0c <ws_dead+0x88>
   3fdd0:	add	r1, pc, r1
   3fdd4:	str	r0, [r1]
   3fdd8:	ldr	r4, [pc, #48]	; 3fe10 <ws_dead+0x8c>
   3fddc:	add	r4, pc, r4
   3fde0:	mov	r0, #0
   3fde4:	mov	r1, r4
   3fde8:	bl	e0b4 <ilog@plt>
   3fdec:	mov	r0, #256	; 0x100
   3fdf0:	mov	r1, #0
   3fdf4:	mov	r2, r4
   3fdf8:	bl	d634 <sendto_realops_snomask@plt>
   3fdfc:	mov	r0, #1
   3fe00:	pop	{r4, sl, fp, lr}
   3fe04:	b	3f220 <start_wsockd>
   3fe08:	.word	0x00030db0
   3fe0c:	.word	0x00030da4
   3fe10:	.word	0x00008a1b

0003fe14 <rb_dlinkAddTail>:
   3fe14:	push	{fp, lr}
   3fe18:	mov	fp, sp
   3fe1c:	cmp	r1, #0
   3fe20:	beq	3fe88 <rb_dlinkAddTail+0x74>
   3fe24:	cmp	r2, #0
   3fe28:	beq	3fea8 <rb_dlinkAddTail+0x94>
   3fe2c:	cmp	r0, #0
   3fe30:	beq	3fec8 <rb_dlinkAddTail+0xb4>
   3fe34:	mov	r3, #0
   3fe38:	str	r3, [r1, #8]
   3fe3c:	str	r0, [r1]
   3fe40:	ldr	r0, [r2, #4]
   3fe44:	str	r0, [r1, #4]
   3fe48:	ldr	r0, [r2, #4]
   3fe4c:	cmp	r0, #0
   3fe50:	beq	3fe60 <rb_dlinkAddTail+0x4c>
   3fe54:	add	r0, r0, #8
   3fe58:	str	r1, [r0]
   3fe5c:	b	3fe6c <rb_dlinkAddTail+0x58>
   3fe60:	ldr	r0, [r2]
   3fe64:	cmp	r0, #0
   3fe68:	beq	3fe80 <rb_dlinkAddTail+0x6c>
   3fe6c:	str	r1, [r2, #4]
   3fe70:	ldr	r0, [r2, #8]
   3fe74:	add	r0, r0, #1
   3fe78:	str	r0, [r2, #8]
   3fe7c:	pop	{fp, pc}
   3fe80:	mov	r0, r2
   3fe84:	b	3fe58 <rb_dlinkAddTail+0x44>
   3fe88:	ldr	r0, [pc, #88]	; 3fee8 <rb_dlinkAddTail+0xd4>
   3fe8c:	add	r0, pc, r0
   3fe90:	ldr	r1, [pc, #84]	; 3feec <rb_dlinkAddTail+0xd8>
   3fe94:	add	r1, pc, r1
   3fe98:	ldr	r3, [pc, #80]	; 3fef0 <rb_dlinkAddTail+0xdc>
   3fe9c:	add	r3, pc, r3
   3fea0:	mov	r2, #211	; 0xd3
   3fea4:	bl	e7e0 <__assert_fail@plt>
   3fea8:	ldr	r0, [pc, #68]	; 3fef4 <rb_dlinkAddTail+0xe0>
   3feac:	add	r0, pc, r0
   3feb0:	ldr	r1, [pc, #64]	; 3fef8 <rb_dlinkAddTail+0xe4>
   3feb4:	add	r1, pc, r1
   3feb8:	ldr	r3, [pc, #60]	; 3fefc <rb_dlinkAddTail+0xe8>
   3febc:	add	r3, pc, r3
   3fec0:	mov	r2, #212	; 0xd4
   3fec4:	bl	e7e0 <__assert_fail@plt>
   3fec8:	ldr	r0, [pc, #48]	; 3ff00 <rb_dlinkAddTail+0xec>
   3fecc:	add	r0, pc, r0
   3fed0:	ldr	r1, [pc, #44]	; 3ff04 <rb_dlinkAddTail+0xf0>
   3fed4:	add	r1, pc, r1
   3fed8:	ldr	r3, [pc, #40]	; 3ff08 <rb_dlinkAddTail+0xf4>
   3fedc:	add	r3, pc, r3
   3fee0:	mov	r2, #213	; 0xd5
   3fee4:	bl	e7e0 <__assert_fail@plt>
   3fee8:	.word	0x00000a80
   3feec:	.word	0x00000a82
   3fef0:	.word	0x00000a96
   3fef4:	.word	0x000062e9
   3fef8:	.word	0x00000a62
   3fefc:	.word	0x00000a76
   3ff00:	.word	0x00000aa5
   3ff04:	.word	0x00000a42
   3ff08:	.word	0x00000a56

0003ff0c <ws_process_cmd_recv>:
   3ff0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ff10:	add	fp, sp, #24
   3ff14:	mov	r4, r0
   3ff18:	ldrb	r0, [r0, #53]	; 0x35
   3ff1c:	cmp	r0, #0
   3ff20:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ff24:	ldr	r7, [r4, #28]!
   3ff28:	cmp	r7, #0
   3ff2c:	beq	3ffac <ws_process_cmd_recv+0xa0>
   3ff30:	ldr	r8, [pc, #120]	; 3ffb0 <ws_process_cmd_recv+0xa4>
   3ff34:	add	r8, pc, r8
   3ff38:	ldr	r9, [pc, #116]	; 3ffb4 <ws_process_cmd_recv+0xa8>
   3ff3c:	add	r9, pc, r9
   3ff40:	b	3ff88 <ws_process_cmd_recv+0x7c>
   3ff44:	mov	r0, #0
   3ff48:	mov	r1, r8
   3ff4c:	bl	e0b4 <ilog@plt>
   3ff50:	mov	r0, #256	; 0x100
   3ff54:	mov	r1, #0
   3ff58:	mov	r2, r9
   3ff5c:	bl	d634 <sendto_realops_snomask@plt>
   3ff60:	mov	r0, r7
   3ff64:	mov	r1, r4
   3ff68:	bl	3fbe0 <rb_dlinkDelete>
   3ff6c:	ldr	r0, [r5, #12]
   3ff70:	bl	3fbd4 <rb_free>
   3ff74:	mov	r0, r5
   3ff78:	bl	3fbd4 <rb_free>
   3ff7c:	cmp	r6, #0
   3ff80:	mov	r7, r6
   3ff84:	beq	3ffac <ws_process_cmd_recv+0xa0>
   3ff88:	ldr	r5, [r7]
   3ff8c:	ldr	r6, [r7, #8]
   3ff90:	ldr	r2, [r5, #12]
   3ff94:	ldrb	r0, [r2]
   3ff98:	cmp	r0, #68	; 0x44
   3ff9c:	bne	3ff44 <ws_process_cmd_recv+0x38>
   3ffa0:	mov	r0, r5
   3ffa4:	bl	3ffb8 <ws_process_dead_fd>
   3ffa8:	b	3ff60 <ws_process_cmd_recv+0x54>
   3ffac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ffb0:	.word	0x000088ee
   3ffb4:	.word	0x0000890f

0003ffb8 <ws_process_dead_fd>:
   3ffb8:	push	{r4, r5, r6, r7, fp, lr}
   3ffbc:	add	fp, sp, #16
   3ffc0:	sub	sp, sp, #256	; 0x100
   3ffc4:	ldr	r1, [r0, #16]
   3ffc8:	cmp	r1, #6
   3ffcc:	bcc	40060 <ws_process_dead_fd+0xa8>
   3ffd0:	ldr	r5, [r0, #12]
   3ffd4:	add	r0, r5, #1
   3ffd8:	bl	400a0 <buf_to_uint32>
   3ffdc:	mov	r4, r0
   3ffe0:	add	r1, r5, #5
   3ffe4:	mov	r0, sp
   3ffe8:	mov	r2, #256	; 0x100
   3ffec:	bl	e510 <rb_strlcpy@plt>
   3fff0:	mov	r0, r4
   3fff4:	bl	dfdc <find_cli_connid_hash@plt>
   3fff8:	cmp	r0, #0
   3fffc:	beq	40060 <ws_process_dead_fd+0xa8>
   40000:	mov	r4, r0
   40004:	ldrh	r0, [r0, #80]	; 0x50
   40008:	sub	r1, r0, #1
   4000c:	cmp	r1, #31
   40010:	bhi	40068 <ws_process_dead_fd+0xb0>
   40014:	mov	r2, #1
   40018:	mov	r3, #-2147483645	; 0x80000003
   4001c:	tst	r3, r2, lsl r1
   40020:	beq	40068 <ws_process_dead_fd+0xb0>
   40024:	mov	r0, sp
   40028:	ldr	r1, [pc, #104]	; 40098 <ws_process_dead_fd+0xe0>
   4002c:	add	r1, pc, r1
   40030:	mov	r2, #34	; 0x22
   40034:	bl	dc88 <bcmp@plt>
   40038:	cmp	r0, #0
   4003c:	bne	40050 <ws_process_dead_fd+0x98>
   40040:	ldr	r0, [r4, #432]	; 0x1b0
   40044:	ldr	r0, [r0, #300]	; 0x12c
   40048:	mov	r1, r4
   4004c:	bl	d760 <read_packet@plt>
   40050:	ldrh	r0, [r4, #64]	; 0x40
   40054:	movw	r1, #16418	; 0x4022
   40058:	tst	r0, r1
   4005c:	beq	40078 <ws_process_dead_fd+0xc0>
   40060:	sub	sp, fp, #16
   40064:	pop	{r4, r5, r6, r7, fp, pc}
   40068:	cmp	r0, #9
   4006c:	bcc	40078 <ws_process_dead_fd+0xc0>
   40070:	cmp	r0, #16
   40074:	bne	40024 <ws_process_dead_fd+0x6c>
   40078:	ldr	r2, [pc, #28]	; 4009c <ws_process_dead_fd+0xe4>
   4007c:	ldr	r2, [pc, r2]
   40080:	mov	r3, sp
   40084:	mov	r0, r4
   40088:	mov	r1, r4
   4008c:	bl	e534 <exit_client@plt>
   40090:	sub	sp, fp, #16
   40094:	pop	{r4, r5, r6, r7, fp, pc}
   40098:	.word	0x000016b6
   4009c:	.word	0x0001aadc

000400a0 <buf_to_uint32>:
   400a0:	ldr	r0, [r0]
   400a4:	bx	lr

000400a8 <ws_write_ctl>:
   400a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   400ac:	add	fp, sp, #28
   400b0:	sub	sp, sp, #12
   400b4:	ldrb	r0, [r1, #53]	; 0x35
   400b8:	cmp	r0, #0
   400bc:	beq	400c8 <ws_write_ctl+0x20>
   400c0:	sub	sp, fp, #28
   400c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   400c8:	mov	sl, r1
   400cc:	mov	r9, r1
   400d0:	ldr	r4, [r9, #40]!	; 0x28
   400d4:	cmp	r4, #0
   400d8:	bne	40104 <ws_write_ctl+0x5c>
   400dc:	b	400c0 <ws_write_ctl+0x18>
   400e0:	ldr	r0, [sl, #16]
   400e4:	mov	r1, #2
   400e8:	ldr	r2, [pc, #196]	; 401b4 <ws_write_ctl+0x10c>
   400ec:	add	r2, pc, r2
   400f0:	mov	r3, sl
   400f4:	bl	d304 <rb_setselect@plt>
   400f8:	cmp	r8, #0
   400fc:	mov	r4, r8
   40100:	beq	400c0 <ws_write_ctl+0x18>
   40104:	ldr	r7, [r4]
   40108:	ldr	r8, [r4, #8]
   4010c:	ldr	r3, [r7, #12]
   40110:	ldr	r1, [r7, #16]
   40114:	ldr	r2, [r7, #36]	; 0x24
   40118:	ldr	r0, [sl, #16]
   4011c:	ldr	r6, [sl, #24]
   40120:	stm	sp, {r1, r6}
   40124:	add	r5, r7, #20
   40128:	mov	r1, r5
   4012c:	bl	df94 <rb_send_fd_buf@plt>
   40130:	mov	r6, r0
   40134:	cmp	r0, #1
   40138:	blt	40180 <ws_write_ctl+0xd8>
   4013c:	mov	r0, r4
   40140:	mov	r1, r9
   40144:	bl	3fbe0 <rb_dlinkDelete>
   40148:	ldr	r0, [r7, #36]	; 0x24
   4014c:	cmp	r0, #1
   40150:	blt	40170 <ws_write_ctl+0xc8>
   40154:	mov	r4, #0
   40158:	ldr	r0, [r5, r4, lsl #2]
   4015c:	bl	db50 <rb_close@plt>
   40160:	add	r4, r4, #1
   40164:	ldr	r0, [r7, #36]	; 0x24
   40168:	cmp	r4, r0
   4016c:	blt	40158 <ws_write_ctl+0xb0>
   40170:	ldr	r0, [r7, #12]
   40174:	bl	3fbd4 <rb_free>
   40178:	mov	r0, r7
   4017c:	bl	3fbd4 <rb_free>
   40180:	cmp	r6, #0
   40184:	beq	401a4 <ws_write_ctl+0xfc>
   40188:	cmn	r6, #1
   4018c:	bgt	400e0 <ws_write_ctl+0x38>
   40190:	bl	de38 <__errno_location@plt>
   40194:	ldr	r0, [r0]
   40198:	bl	dab4 <rb_ignore_errno@plt>
   4019c:	cmp	r0, #0
   401a0:	bne	400e0 <ws_write_ctl+0x38>
   401a4:	mov	r0, sl
   401a8:	sub	sp, fp, #28
   401ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   401b0:	b	3fd84 <ws_dead>
   401b4:	.word	0xffffffb4

000401b8 <__aeabi_drsub>:
   401b8:	eor	r1, r1, #-2147483648	; 0x80000000
   401bc:	b	401c4 <__adddf3>

000401c0 <__aeabi_dsub>:
   401c0:	eor	r3, r3, #-2147483648	; 0x80000000

000401c4 <__adddf3>:
   401c4:	push	{r4, r5, lr}
   401c8:	lsl	r4, r1, #1
   401cc:	lsl	r5, r3, #1
   401d0:	teq	r4, r5
   401d4:	teqeq	r0, r2
   401d8:	orrsne	ip, r4, r0
   401dc:	orrsne	ip, r5, r2
   401e0:	mvnsne	ip, r4, asr #21
   401e4:	mvnsne	ip, r5, asr #21
   401e8:	beq	403d4 <__adddf3+0x210>
   401ec:	lsr	r4, r4, #21
   401f0:	rsbs	r5, r4, r5, lsr #21
   401f4:	rsblt	r5, r5, #0
   401f8:	ble	40218 <__adddf3+0x54>
   401fc:	add	r4, r4, r5
   40200:	eor	r2, r0, r2
   40204:	eor	r3, r1, r3
   40208:	eor	r0, r2, r0
   4020c:	eor	r1, r3, r1
   40210:	eor	r2, r0, r2
   40214:	eor	r3, r1, r3
   40218:	cmp	r5, #54	; 0x36
   4021c:	pophi	{r4, r5, pc}
   40220:	tst	r1, #-2147483648	; 0x80000000
   40224:	lsl	r1, r1, #12
   40228:	mov	ip, #1048576	; 0x100000
   4022c:	orr	r1, ip, r1, lsr #12
   40230:	beq	4023c <__adddf3+0x78>
   40234:	rsbs	r0, r0, #0
   40238:	rsc	r1, r1, #0
   4023c:	tst	r3, #-2147483648	; 0x80000000
   40240:	lsl	r3, r3, #12
   40244:	orr	r3, ip, r3, lsr #12
   40248:	beq	40254 <__adddf3+0x90>
   4024c:	rsbs	r2, r2, #0
   40250:	rsc	r3, r3, #0
   40254:	teq	r4, r5
   40258:	beq	403bc <__adddf3+0x1f8>
   4025c:	sub	r4, r4, #1
   40260:	rsbs	lr, r5, #32
   40264:	blt	40280 <__adddf3+0xbc>
   40268:	lsl	ip, r2, lr
   4026c:	adds	r0, r0, r2, lsr r5
   40270:	adc	r1, r1, #0
   40274:	adds	r0, r0, r3, lsl lr
   40278:	adcs	r1, r1, r3, asr r5
   4027c:	b	4029c <__adddf3+0xd8>
   40280:	sub	r5, r5, #32
   40284:	add	lr, lr, #32
   40288:	cmp	r2, #1
   4028c:	lsl	ip, r3, lr
   40290:	orrcs	ip, ip, #2
   40294:	adds	r0, r0, r3, asr r5
   40298:	adcs	r1, r1, r3, asr #31
   4029c:	and	r5, r1, #-2147483648	; 0x80000000
   402a0:	bpl	402b0 <__adddf3+0xec>
   402a4:	rsbs	ip, ip, #0
   402a8:	rscs	r0, r0, #0
   402ac:	rsc	r1, r1, #0
   402b0:	cmp	r1, #1048576	; 0x100000
   402b4:	bcc	402f4 <__adddf3+0x130>
   402b8:	cmp	r1, #2097152	; 0x200000
   402bc:	bcc	402dc <__adddf3+0x118>
   402c0:	lsrs	r1, r1, #1
   402c4:	rrxs	r0, r0
   402c8:	rrx	ip, ip
   402cc:	add	r4, r4, #1
   402d0:	lsl	r2, r4, #21
   402d4:	cmn	r2, #4194304	; 0x400000
   402d8:	bcs	40434 <__adddf3+0x270>
   402dc:	cmp	ip, #-2147483648	; 0x80000000
   402e0:	lsrseq	ip, r0, #1
   402e4:	adcs	r0, r0, #0
   402e8:	adc	r1, r1, r4, lsl #20
   402ec:	orr	r1, r1, r5
   402f0:	pop	{r4, r5, pc}
   402f4:	lsls	ip, ip, #1
   402f8:	adcs	r0, r0, r0
   402fc:	adc	r1, r1, r1
   40300:	tst	r1, #1048576	; 0x100000
   40304:	sub	r4, r4, #1
   40308:	bne	402dc <__adddf3+0x118>
   4030c:	teq	r1, #0
   40310:	moveq	r1, r0
   40314:	moveq	r0, #0
   40318:	clz	r3, r1
   4031c:	addeq	r3, r3, #32
   40320:	sub	r3, r3, #11
   40324:	subs	r2, r3, #32
   40328:	bge	4034c <__adddf3+0x188>
   4032c:	adds	r2, r2, #12
   40330:	ble	40348 <__adddf3+0x184>
   40334:	add	ip, r2, #20
   40338:	rsb	r2, r2, #12
   4033c:	lsl	r0, r1, ip
   40340:	lsr	r1, r1, r2
   40344:	b	4035c <__adddf3+0x198>
   40348:	add	r2, r2, #20
   4034c:	rsble	ip, r2, #32
   40350:	lsl	r1, r1, r2
   40354:	orrle	r1, r1, r0, lsr ip
   40358:	lslle	r0, r0, r2
   4035c:	subs	r4, r4, r3
   40360:	addge	r1, r1, r4, lsl #20
   40364:	orrge	r1, r1, r5
   40368:	popge	{r4, r5, pc}
   4036c:	mvn	r4, r4
   40370:	subs	r4, r4, #31
   40374:	bge	403b0 <__adddf3+0x1ec>
   40378:	adds	r4, r4, #12
   4037c:	bgt	40398 <__adddf3+0x1d4>
   40380:	add	r4, r4, #20
   40384:	rsb	r2, r4, #32
   40388:	lsr	r0, r0, r4
   4038c:	orr	r0, r0, r1, lsl r2
   40390:	orr	r1, r5, r1, lsr r4
   40394:	pop	{r4, r5, pc}
   40398:	rsb	r4, r4, #12
   4039c:	rsb	r2, r4, #32
   403a0:	lsr	r0, r0, r2
   403a4:	orr	r0, r0, r1, lsl r4
   403a8:	mov	r1, r5
   403ac:	pop	{r4, r5, pc}
   403b0:	lsr	r0, r1, r4
   403b4:	mov	r1, r5
   403b8:	pop	{r4, r5, pc}
   403bc:	teq	r4, #0
   403c0:	eor	r3, r3, #1048576	; 0x100000
   403c4:	eoreq	r1, r1, #1048576	; 0x100000
   403c8:	addeq	r4, r4, #1
   403cc:	subne	r5, r5, #1
   403d0:	b	4025c <__adddf3+0x98>
   403d4:	mvns	ip, r4, asr #21
   403d8:	mvnsne	ip, r5, asr #21
   403dc:	beq	40444 <__adddf3+0x280>
   403e0:	teq	r4, r5
   403e4:	teqeq	r0, r2
   403e8:	beq	403fc <__adddf3+0x238>
   403ec:	orrs	ip, r4, r0
   403f0:	moveq	r1, r3
   403f4:	moveq	r0, r2
   403f8:	pop	{r4, r5, pc}
   403fc:	teq	r1, r3
   40400:	movne	r1, #0
   40404:	movne	r0, #0
   40408:	popne	{r4, r5, pc}
   4040c:	lsrs	ip, r4, #21
   40410:	bne	40424 <__adddf3+0x260>
   40414:	lsls	r0, r0, #1
   40418:	adcs	r1, r1, r1
   4041c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   40420:	pop	{r4, r5, pc}
   40424:	adds	r4, r4, #4194304	; 0x400000
   40428:	addcc	r1, r1, #1048576	; 0x100000
   4042c:	popcc	{r4, r5, pc}
   40430:	and	r5, r1, #-2147483648	; 0x80000000
   40434:	orr	r1, r5, #2130706432	; 0x7f000000
   40438:	orr	r1, r1, #15728640	; 0xf00000
   4043c:	mov	r0, #0
   40440:	pop	{r4, r5, pc}
   40444:	mvns	ip, r4, asr #21
   40448:	movne	r1, r3
   4044c:	movne	r0, r2
   40450:	mvnseq	ip, r5, asr #21
   40454:	movne	r3, r1
   40458:	movne	r2, r0
   4045c:	orrs	r4, r0, r1, lsl #12
   40460:	orrseq	r5, r2, r3, lsl #12
   40464:	teqeq	r1, r3
   40468:	orrne	r1, r1, #524288	; 0x80000
   4046c:	pop	{r4, r5, pc}

00040470 <__aeabi_ui2d>:
   40470:	teq	r0, #0
   40474:	moveq	r1, #0
   40478:	bxeq	lr
   4047c:	push	{r4, r5, lr}
   40480:	mov	r4, #1024	; 0x400
   40484:	add	r4, r4, #50	; 0x32
   40488:	mov	r5, #0
   4048c:	mov	r1, #0
   40490:	b	4030c <__adddf3+0x148>

00040494 <__aeabi_i2d>:
   40494:	teq	r0, #0
   40498:	moveq	r1, #0
   4049c:	bxeq	lr
   404a0:	push	{r4, r5, lr}
   404a4:	mov	r4, #1024	; 0x400
   404a8:	add	r4, r4, #50	; 0x32
   404ac:	ands	r5, r0, #-2147483648	; 0x80000000
   404b0:	rsbmi	r0, r0, #0
   404b4:	mov	r1, #0
   404b8:	b	4030c <__adddf3+0x148>

000404bc <__aeabi_f2d>:
   404bc:	lsls	r2, r0, #1
   404c0:	asr	r1, r2, #3
   404c4:	rrx	r1, r1
   404c8:	lsl	r0, r2, #28
   404cc:	andsne	r3, r2, #-16777216	; 0xff000000
   404d0:	teqne	r3, #-16777216	; 0xff000000
   404d4:	eorne	r1, r1, #939524096	; 0x38000000
   404d8:	bxne	lr
   404dc:	bics	r2, r2, #-16777216	; 0xff000000
   404e0:	bxeq	lr
   404e4:	teq	r3, #-16777216	; 0xff000000
   404e8:	orreq	r1, r1, #524288	; 0x80000
   404ec:	bxeq	lr
   404f0:	push	{r4, r5, lr}
   404f4:	mov	r4, #896	; 0x380
   404f8:	and	r5, r1, #-2147483648	; 0x80000000
   404fc:	bic	r1, r1, #-2147483648	; 0x80000000
   40500:	b	4030c <__adddf3+0x148>

00040504 <__aeabi_ul2d>:
   40504:	orrs	r2, r0, r1
   40508:	bxeq	lr
   4050c:	push	{r4, r5, lr}
   40510:	mov	r5, #0
   40514:	b	40534 <__aeabi_l2d+0x1c>

00040518 <__aeabi_l2d>:
   40518:	orrs	r2, r0, r1
   4051c:	bxeq	lr
   40520:	push	{r4, r5, lr}
   40524:	ands	r5, r1, #-2147483648	; 0x80000000
   40528:	bpl	40534 <__aeabi_l2d+0x1c>
   4052c:	rsbs	r0, r0, #0
   40530:	rsc	r1, r1, #0
   40534:	mov	r4, #1024	; 0x400
   40538:	add	r4, r4, #50	; 0x32
   4053c:	lsrs	ip, r1, #22
   40540:	beq	402b0 <__adddf3+0xec>
   40544:	mov	r2, #3
   40548:	lsrs	ip, ip, #3
   4054c:	addne	r2, r2, #3
   40550:	lsrs	ip, ip, #3
   40554:	addne	r2, r2, #3
   40558:	add	r2, r2, ip, lsr #3
   4055c:	rsb	r3, r2, #32
   40560:	lsl	ip, r0, r3
   40564:	lsr	r0, r0, r2
   40568:	orr	r0, r0, r1, lsl r3
   4056c:	lsr	r1, r1, r2
   40570:	add	r4, r4, r2
   40574:	b	402b0 <__adddf3+0xec>

00040578 <__stat>:
   40578:	mov	r2, r1
   4057c:	mov	r1, r0
   40580:	mov	r0, #3
   40584:	b	d7fc <__xstat@plt>

Disassembly of section .fini:

00040588 <_fini>:
   40588:	push	{r3, lr}
   4058c:	pop	{r3, pc}
