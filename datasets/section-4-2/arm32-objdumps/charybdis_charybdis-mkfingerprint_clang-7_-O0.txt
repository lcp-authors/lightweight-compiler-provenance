
../repos/charybdis/tools/.libs/charybdis-mkfingerprint:     file format elf32-littlearm


Disassembly of section .init:

00010478 <.init>:
   10478:	push	{r3, lr}
   1047c:	bl	10540 <strcmp@plt+0x48>
   10480:	pop	{r3, pc}

Disassembly of section .plt:

00010484 <abort@plt-0x14>:
   10484:	push	{lr}		; (str lr, [sp, #-4]!)
   10488:	ldr	lr, [pc, #4]	; 10494 <abort@plt-0x4>
   1048c:	add	lr, pc, lr
   10490:	ldr	pc, [lr, #8]!
   10494:	andeq	r0, r1, ip, ror #22

00010498 <abort@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2924]!	; 0xb6c

000104a4 <__libc_start_main@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2916]!	; 0xb64

000104b0 <__gmon_start__@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2908]!	; 0xb5c

000104bc <memset@plt>:
   104bc:	add	ip, pc, #0, 12
   104c0:	add	ip, ip, #16, 20	; 0x10000
   104c4:	ldr	pc, [ip, #2900]!	; 0xb54

000104c8 <perror@plt>:
   104c8:	add	ip, pc, #0, 12
   104cc:	add	ip, ip, #16, 20	; 0x10000
   104d0:	ldr	pc, [ip, #2892]!	; 0xb4c

000104d4 <printf@plt>:
   104d4:	add	ip, pc, #0, 12
   104d8:	add	ip, ip, #16, 20	; 0x10000
   104dc:	ldr	pc, [ip, #2884]!	; 0xb44

000104e0 <fprintf@plt>:
   104e0:	add	ip, pc, #0, 12
   104e4:	add	ip, ip, #16, 20	; 0x10000
   104e8:	ldr	pc, [ip, #2876]!	; 0xb3c

000104ec <rb_get_ssl_certfp_file@plt>:
   104ec:	add	ip, pc, #0, 12
   104f0:	add	ip, ip, #16, 20	; 0x10000
   104f4:	ldr	pc, [ip, #2868]!	; 0xb34

000104f8 <strcmp@plt>:
   104f8:	add	ip, pc, #0, 12
   104fc:	add	ip, ip, #16, 20	; 0x10000
   10500:	ldr	pc, [ip, #2860]!	; 0xb2c

Disassembly of section .text:

00010504 <.text>:
   10504:	mov	fp, #0
   10508:	mov	lr, #0
   1050c:	pop	{r1}		; (ldr r1, [sp], #4)
   10510:	mov	r2, sp
   10514:	push	{r2}		; (str r2, [sp, #-4]!)
   10518:	push	{r0}		; (str r0, [sp, #-4]!)
   1051c:	ldr	ip, [pc, #16]	; 10534 <strcmp@plt+0x3c>
   10520:	push	{ip}		; (str ip, [sp, #-4]!)
   10524:	ldr	r0, [pc, #12]	; 10538 <strcmp@plt+0x40>
   10528:	ldr	r3, [pc, #12]	; 1053c <strcmp@plt+0x44>
   1052c:	bl	104a4 <__libc_start_main@plt>
   10530:	bl	10498 <abort@plt>
   10534:	andeq	r0, r1, ip, lsr #18
   10538:	strdeq	r0, [r1], -r4
   1053c:	andeq	r0, r1, ip, asr #17
   10540:	ldr	r3, [pc, #20]	; 1055c <strcmp@plt+0x64>
   10544:	ldr	r2, [pc, #20]	; 10560 <strcmp@plt+0x68>
   10548:	add	r3, pc, r3
   1054c:	ldr	r2, [r3, r2]
   10550:	cmp	r2, #0
   10554:	bxeq	lr
   10558:	b	104b0 <__gmon_start__@plt>
   1055c:			; <UNDEFINED> instruction: 0x00010ab0
   10560:	andeq	r0, r0, r0, lsr r0
   10564:	ldr	r0, [pc, #24]	; 10584 <strcmp@plt+0x8c>
   10568:	ldr	r3, [pc, #24]	; 10588 <strcmp@plt+0x90>
   1056c:	cmp	r3, r0
   10570:	bxeq	lr
   10574:	ldr	r3, [pc, #16]	; 1058c <strcmp@plt+0x94>
   10578:	cmp	r3, #0
   1057c:	bxeq	lr
   10580:	bx	r3
   10584:	andeq	r1, r2, r0, asr #32
   10588:	andeq	r1, r2, r0, asr #32
   1058c:	andeq	r0, r0, r0
   10590:	ldr	r0, [pc, #36]	; 105bc <strcmp@plt+0xc4>
   10594:	ldr	r1, [pc, #36]	; 105c0 <strcmp@plt+0xc8>
   10598:	sub	r1, r1, r0
   1059c:	asr	r1, r1, #2
   105a0:	add	r1, r1, r1, lsr #31
   105a4:	asrs	r1, r1, #1
   105a8:	bxeq	lr
   105ac:	ldr	r3, [pc, #16]	; 105c4 <strcmp@plt+0xcc>
   105b0:	cmp	r3, #0
   105b4:	bxeq	lr
   105b8:	bx	r3
   105bc:	andeq	r1, r2, r0, asr #32
   105c0:	andeq	r1, r2, r0, asr #32
   105c4:	andeq	r0, r0, r0
   105c8:	push	{r4, lr}
   105cc:	ldr	r4, [pc, #24]	; 105ec <strcmp@plt+0xf4>
   105d0:	ldrb	r3, [r4]
   105d4:	cmp	r3, #0
   105d8:	popne	{r4, pc}
   105dc:	bl	10564 <strcmp@plt+0x6c>
   105e0:	mov	r3, #1
   105e4:	strb	r3, [r4]
   105e8:	pop	{r4, pc}
   105ec:	andeq	r1, r2, r0, asr #32
   105f0:	b	10590 <strcmp@plt+0x98>
   105f4:	push	{fp, lr}
   105f8:	mov	fp, sp
   105fc:	sub	sp, sp, #136	; 0x88
   10600:	movw	r2, #0
   10604:	str	r2, [fp, #-4]
   10608:	str	r0, [fp, #-8]
   1060c:	str	r1, [fp, #-12]
   10610:	add	r0, sp, #59	; 0x3b
   10614:	movw	r1, #0
   10618:	and	r1, r1, #255	; 0xff
   1061c:	movw	r2, #65	; 0x41
   10620:	bl	104bc <memset@plt>
   10624:	ldr	r0, [fp, #-8]
   10628:	cmp	r0, #3
   1062c:	beq	10660 <strcmp@plt+0x168>
   10630:	ldr	r0, [pc, #636]	; 108b4 <strcmp@plt+0x3bc>
   10634:	add	r0, pc, r0
   10638:	bl	104d4 <printf@plt>
   1063c:	ldr	lr, [pc, #620]	; 108b0 <strcmp@plt+0x3b8>
   10640:	add	lr, pc, lr
   10644:	str	r0, [sp, #28]
   10648:	mov	r0, lr
   1064c:	bl	104d4 <printf@plt>
   10650:	movw	lr, #1
   10654:	str	lr, [fp, #-4]
   10658:	str	r0, [sp, #24]
   1065c:	b	10878 <strcmp@plt+0x380>
   10660:	ldr	r0, [fp, #-12]
   10664:	ldr	r0, [r0, #4]
   10668:	str	r0, [sp, #52]	; 0x34
   1066c:	ldr	r0, [fp, #-12]
   10670:	ldr	r0, [r0, #8]
   10674:	str	r0, [sp, #48]	; 0x30
   10678:	ldr	r0, [sp, #52]	; 0x34
   1067c:	ldr	r1, [pc, #564]	; 108b8 <strcmp@plt+0x3c0>
   10680:	add	r1, pc, r1
   10684:	bl	104f8 <strcmp@plt>
   10688:	cmp	r0, #0
   1068c:	bne	106a8 <strcmp@plt+0x1b0>
   10690:	ldr	r0, [pc, #492]	; 10884 <strcmp@plt+0x38c>
   10694:	add	r0, pc, r0
   10698:	movw	r1, #0
   1069c:	str	r1, [sp, #44]	; 0x2c
   106a0:	str	r0, [sp, #40]	; 0x28
   106a4:	b	10798 <strcmp@plt+0x2a0>
   106a8:	ldr	r0, [sp, #52]	; 0x34
   106ac:	ldr	r1, [pc, #520]	; 108bc <strcmp@plt+0x3c4>
   106b0:	add	r1, pc, r1
   106b4:	bl	104f8 <strcmp@plt>
   106b8:	cmp	r0, #0
   106bc:	bne	106d8 <strcmp@plt+0x1e0>
   106c0:	ldr	r0, [pc, #448]	; 10888 <strcmp@plt+0x390>
   106c4:	add	r0, pc, r0
   106c8:	movw	r1, #1
   106cc:	str	r1, [sp, #44]	; 0x2c
   106d0:	str	r0, [sp, #40]	; 0x28
   106d4:	b	10794 <strcmp@plt+0x29c>
   106d8:	ldr	r0, [sp, #52]	; 0x34
   106dc:	ldr	r1, [pc, #476]	; 108c0 <strcmp@plt+0x3c8>
   106e0:	add	r1, pc, r1
   106e4:	bl	104f8 <strcmp@plt>
   106e8:	cmp	r0, #0
   106ec:	bne	10708 <strcmp@plt+0x210>
   106f0:	ldr	r0, [pc, #404]	; 1088c <strcmp@plt+0x394>
   106f4:	add	r0, pc, r0
   106f8:	movw	r1, #2
   106fc:	str	r1, [sp, #44]	; 0x2c
   10700:	str	r0, [sp, #40]	; 0x28
   10704:	b	10790 <strcmp@plt+0x298>
   10708:	ldr	r0, [sp, #52]	; 0x34
   1070c:	ldr	r1, [pc, #432]	; 108c4 <strcmp@plt+0x3cc>
   10710:	add	r1, pc, r1
   10714:	bl	104f8 <strcmp@plt>
   10718:	cmp	r0, #0
   1071c:	bne	10738 <strcmp@plt+0x240>
   10720:	ldr	r0, [pc, #360]	; 10890 <strcmp@plt+0x398>
   10724:	add	r0, pc, r0
   10728:	movw	r1, #4097	; 0x1001
   1072c:	str	r1, [sp, #44]	; 0x2c
   10730:	str	r0, [sp, #40]	; 0x28
   10734:	b	1078c <strcmp@plt+0x294>
   10738:	ldr	r0, [sp, #52]	; 0x34
   1073c:	ldr	r1, [pc, #388]	; 108c8 <strcmp@plt+0x3d0>
   10740:	add	r1, pc, r1
   10744:	bl	104f8 <strcmp@plt>
   10748:	cmp	r0, #0
   1074c:	bne	10768 <strcmp@plt+0x270>
   10750:	ldr	r0, [pc, #316]	; 10894 <strcmp@plt+0x39c>
   10754:	add	r0, pc, r0
   10758:	movw	r1, #4098	; 0x1002
   1075c:	str	r1, [sp, #44]	; 0x2c
   10760:	str	r0, [sp, #40]	; 0x28
   10764:	b	10788 <strcmp@plt+0x290>
   10768:	ldr	r0, [pc, #316]	; 108ac <strcmp@plt+0x3b4>
   1076c:	add	r0, pc, r0
   10770:	ldr	r1, [sp, #52]	; 0x34
   10774:	bl	104d4 <printf@plt>
   10778:	movw	r1, #1
   1077c:	str	r1, [fp, #-4]
   10780:	str	r0, [sp, #20]
   10784:	b	10878 <strcmp@plt+0x380>
   10788:	b	1078c <strcmp@plt+0x294>
   1078c:	b	10790 <strcmp@plt+0x298>
   10790:	b	10794 <strcmp@plt+0x29c>
   10794:	b	10798 <strcmp@plt+0x2a0>
   10798:	add	r1, sp, #59	; 0x3b
   1079c:	ldr	r0, [sp, #48]	; 0x30
   107a0:	ldr	r2, [sp, #44]	; 0x2c
   107a4:	bl	104ec <rb_get_ssl_certfp_file@plt>
   107a8:	str	r0, [sp, #36]	; 0x24
   107ac:	ldr	r0, [sp, #36]	; 0x24
   107b0:	cmp	r0, #0
   107b4:	bge	107cc <strcmp@plt+0x2d4>
   107b8:	ldr	r0, [sp, #48]	; 0x30
   107bc:	bl	104c8 <perror@plt>
   107c0:	movw	r0, #1
   107c4:	str	r0, [fp, #-4]
   107c8:	b	10878 <strcmp@plt+0x380>
   107cc:	ldr	r0, [sp, #36]	; 0x24
   107d0:	cmp	r0, #0
   107d4:	bne	10800 <strcmp@plt+0x308>
   107d8:	ldr	r0, [pc, #196]	; 108a4 <strcmp@plt+0x3ac>
   107dc:	add	r1, pc, r0
   107e0:	ldr	r0, [pc, #192]	; 108a8 <strcmp@plt+0x3b0>
   107e4:	ldr	r0, [pc, r0]
   107e8:	ldr	r0, [r0]
   107ec:	bl	104e0 <fprintf@plt>
   107f0:	movw	r1, #1
   107f4:	str	r1, [fp, #-4]
   107f8:	str	r0, [sp, #16]
   107fc:	b	10878 <strcmp@plt+0x380>
   10800:	b	10804 <strcmp@plt+0x30c>
   10804:	ldr	r0, [pc, #140]	; 10898 <strcmp@plt+0x3a0>
   10808:	add	r0, pc, r0
   1080c:	ldr	r1, [sp, #40]	; 0x28
   10810:	bl	104d4 <printf@plt>
   10814:	movw	r1, #0
   10818:	str	r1, [sp, #32]
   1081c:	str	r0, [sp, #12]
   10820:	ldr	r0, [sp, #32]
   10824:	ldr	r1, [sp, #36]	; 0x24
   10828:	cmp	r0, r1
   1082c:	bge	10860 <strcmp@plt+0x368>
   10830:	ldr	r0, [pc, #104]	; 108a0 <strcmp@plt+0x3a8>
   10834:	add	r0, pc, r0
   10838:	ldr	r1, [sp, #32]
   1083c:	add	r2, sp, #59	; 0x3b
   10840:	add	r1, r2, r1
   10844:	ldrb	r1, [r1]
   10848:	bl	104d4 <printf@plt>
   1084c:	str	r0, [sp, #8]
   10850:	ldr	r0, [sp, #32]
   10854:	add	r0, r0, #1
   10858:	str	r0, [sp, #32]
   1085c:	b	10820 <strcmp@plt+0x328>
   10860:	ldr	r0, [pc, #52]	; 1089c <strcmp@plt+0x3a4>
   10864:	add	r0, pc, r0
   10868:	bl	104d4 <printf@plt>
   1086c:	movw	lr, #0
   10870:	str	lr, [fp, #-4]
   10874:	str	r0, [sp, #4]
   10878:	ldr	r0, [fp, #-4]
   1087c:	mov	sp, fp
   10880:	pop	{fp, pc}
   10884:	andeq	r0, r0, r3, lsl #6
   10888:	ldrdeq	r0, [r0], -r3
   1088c:	andeq	r0, r0, r3, lsr #5
   10890:	andeq	r0, r0, r5, lsl #5
   10894:	andeq	r0, r0, r0, ror r2
   10898:	andeq	r0, r0, lr, ror #3
   1089c:	andeq	r0, r0, r2, lsr r1
   108a0:	andeq	r0, r0, r5, asr #3
   108a4:	andeq	r0, r0, fp, lsl #4
   108a8:	andeq	r0, r1, r8, asr #16
   108ac:	andeq	r0, r0, r7, ror #4
   108b0:	andeq	r0, r0, r7, lsl r3
   108b4:	andeq	r0, r0, r0, lsl #6
   108b8:	andeq	r0, r0, r8, lsl r3
   108bc:	strdeq	r0, [r0], -r2
   108c0:	ldrdeq	r0, [r0], -sp
   108c4:	andeq	r0, r0, sp, lsl #5
   108c8:	andeq	r0, r0, r8, ror r2
   108cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108d0:	mov	r7, r0
   108d4:	ldr	r6, [pc, #72]	; 10924 <strcmp@plt+0x42c>
   108d8:	ldr	r5, [pc, #72]	; 10928 <strcmp@plt+0x430>
   108dc:	add	r6, pc, r6
   108e0:	add	r5, pc, r5
   108e4:	sub	r6, r6, r5
   108e8:	mov	r8, r1
   108ec:	mov	r9, r2
   108f0:	bl	10478 <abort@plt-0x20>
   108f4:	asrs	r6, r6, #2
   108f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   108fc:	mov	r4, #0
   10900:	add	r4, r4, #1
   10904:	ldr	r3, [r5], #4
   10908:	mov	r2, r9
   1090c:	mov	r1, r8
   10910:	mov	r0, r7
   10914:	blx	r3
   10918:	cmp	r6, r4
   1091c:	bne	10900 <strcmp@plt+0x408>
   10920:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10924:	andeq	r0, r1, r0, lsl r6
   10928:	andeq	r0, r1, r8, lsl #12
   1092c:	bx	lr

Disassembly of section .fini:

00010930 <.fini>:
   10930:	push	{r3, lr}
   10934:	pop	{r3, pc}
