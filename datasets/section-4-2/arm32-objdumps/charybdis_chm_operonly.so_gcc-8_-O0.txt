
../repos/charybdis/extensions/.libs/chm_operonly.so:     file format elf32-littlearm


Disassembly of section .init:

000003d8 <_init>:
 3d8:	push	{r3, lr}
 3dc:	bl	434 <call_weak_fn>
 3e0:	pop	{r3, pc}

Disassembly of section .plt:

000003e4 <.plt>:
 3e4:	push	{lr}		; (str lr, [sp, #-4]!)
 3e8:	ldr	lr, [pc, #4]	; 3f4 <.plt+0x10>
 3ec:	add	lr, pc, lr
 3f0:	ldr	pc, [lr, #8]!
 3f4:	.word	0x00010c0c

000003f8 <cflag_add@plt>:
 3f8:	add	ip, pc, #0, 12
 3fc:	add	ip, ip, #16, 20	; 0x10000
 400:	ldr	pc, [ip, #3084]!	; 0xc0c

00000404 <__cxa_finalize@plt>:
 404:	add	ip, pc, #0, 12
 408:	add	ip, ip, #16, 20	; 0x10000
 40c:	ldr	pc, [ip, #3076]!	; 0xc04

00000410 <__gmon_start__@plt>:
 410:	add	ip, pc, #0, 12
 414:	add	ip, ip, #16, 20	; 0x10000
 418:	ldr	pc, [ip, #3068]!	; 0xbfc

0000041c <sendto_one_numeric@plt>:
 41c:	add	ip, pc, #0, 12
 420:	add	ip, ip, #16, 20	; 0x10000
 424:	ldr	pc, [ip, #3060]!	; 0xbf4

00000428 <cflag_orphan@plt>:
 428:	add	ip, pc, #0, 12
 42c:	add	ip, ip, #16, 20	; 0x10000
 430:	ldr	pc, [ip, #3052]!	; 0xbec

Disassembly of section .text:

00000434 <call_weak_fn>:
 434:	ldr	r3, [pc, #20]	; 450 <call_weak_fn+0x1c>
 438:	ldr	r2, [pc, #20]	; 454 <call_weak_fn+0x20>
 43c:	add	r3, pc, r3
 440:	ldr	r2, [r3, r2]
 444:	cmp	r2, #0
 448:	bxeq	lr
 44c:	b	410 <__gmon_start__@plt>
 450:	.word	0x00010bbc
 454:	.word	0x00000028

00000458 <deregister_tm_clones>:
 458:	ldr	r0, [pc, #44]	; 48c <deregister_tm_clones+0x34>
 45c:	ldr	r3, [pc, #44]	; 490 <deregister_tm_clones+0x38>
 460:	add	r0, pc, r0
 464:	add	r3, pc, r3
 468:	cmp	r3, r0
 46c:	ldr	r3, [pc, #32]	; 494 <deregister_tm_clones+0x3c>
 470:	add	r3, pc, r3
 474:	bxeq	lr
 478:	ldr	r2, [pc, #24]	; 498 <deregister_tm_clones+0x40>
 47c:	ldr	r3, [r3, r2]
 480:	cmp	r3, #0
 484:	bxeq	lr
 488:	bx	r3
 48c:	.word	0x00010c10
 490:	.word	0x00010c0c
 494:	.word	0x00010b88
 498:	.word	0x00000024

0000049c <register_tm_clones>:
 49c:	ldr	r0, [pc, #56]	; 4dc <register_tm_clones+0x40>
 4a0:	ldr	r3, [pc, #56]	; 4e0 <register_tm_clones+0x44>
 4a4:	add	r0, pc, r0
 4a8:	add	r3, pc, r3
 4ac:	sub	r1, r3, r0
 4b0:	ldr	r3, [pc, #44]	; 4e4 <register_tm_clones+0x48>
 4b4:	asr	r1, r1, #2
 4b8:	add	r3, pc, r3
 4bc:	add	r1, r1, r1, lsr #31
 4c0:	asrs	r1, r1, #1
 4c4:	bxeq	lr
 4c8:	ldr	r2, [pc, #24]	; 4e8 <register_tm_clones+0x4c>
 4cc:	ldr	r3, [r3, r2]
 4d0:	cmp	r3, #0
 4d4:	bxeq	lr
 4d8:	bx	r3
 4dc:	.word	0x00010bcc
 4e0:	.word	0x00010bc8
 4e4:	.word	0x00010b40
 4e8:	.word	0x00000030

000004ec <__do_global_dtors_aux>:
 4ec:	ldr	r3, [pc, #76]	; 540 <__do_global_dtors_aux+0x54>
 4f0:	ldr	r2, [pc, #76]	; 544 <__do_global_dtors_aux+0x58>
 4f4:	add	r3, pc, r3
 4f8:	add	r2, pc, r2
 4fc:	ldrb	r3, [r3]
 500:	cmp	r3, #0
 504:	bxne	lr
 508:	ldr	r3, [pc, #56]	; 548 <__do_global_dtors_aux+0x5c>
 50c:	push	{r4, lr}
 510:	ldr	r3, [r2, r3]
 514:	cmp	r3, #0
 518:	beq	528 <__do_global_dtors_aux+0x3c>
 51c:	ldr	r3, [pc, #40]	; 54c <__do_global_dtors_aux+0x60>
 520:	ldr	r0, [pc, r3]
 524:	bl	404 <__cxa_finalize@plt>
 528:	bl	458 <deregister_tm_clones>
 52c:	ldr	r3, [pc, #28]	; 550 <__do_global_dtors_aux+0x64>
 530:	mov	r2, #1
 534:	add	r3, pc, r3
 538:	strb	r2, [r3]
 53c:	pop	{r4, pc}
 540:	.word	0x00010b7c
 544:	.word	0x00010b00
 548:	.word	0x00000020
 54c:	.word	0x00010b0c
 550:	.word	0x00010b3c

00000554 <frame_dummy>:
 554:	b	49c <register_tm_clones>

00000558 <_modinit>:
 558:	str	fp, [sp, #-8]!
 55c:	str	lr, [sp, #4]
 560:	add	fp, sp, #4
 564:	ldr	r2, [pc, #88]	; 5c4 <_modinit+0x6c>
 568:	add	r2, pc, r2
 56c:	ldr	r3, [pc, #84]	; 5c8 <_modinit+0x70>
 570:	ldr	r3, [r2, r3]
 574:	mov	r1, r3
 578:	mov	r0, #79	; 0x4f
 57c:	bl	3f8 <cflag_add@plt>
 580:	mov	r2, r0
 584:	ldr	r3, [pc, #64]	; 5cc <_modinit+0x74>
 588:	add	r3, pc, r3
 58c:	str	r2, [r3]
 590:	ldr	r3, [pc, #56]	; 5d0 <_modinit+0x78>
 594:	add	r3, pc, r3
 598:	ldr	r3, [r3]
 59c:	cmp	r3, #0
 5a0:	bne	5ac <_modinit+0x54>
 5a4:	mvn	r3, #0
 5a8:	b	5b0 <_modinit+0x58>
 5ac:	mov	r3, #0
 5b0:	mov	r0, r3
 5b4:	sub	sp, fp, #4
 5b8:	ldr	fp, [sp]
 5bc:	add	sp, sp, #4
 5c0:	pop	{pc}		; (ldr pc, [sp], #4)
 5c4:	.word	0x00010a90
 5c8:	.word	0x0000002c
 5cc:	.word	0x00010aec
 5d0:	.word	0x00010ae0

000005d4 <_moddeinit>:
 5d4:	str	fp, [sp, #-8]!
 5d8:	str	lr, [sp, #4]
 5dc:	add	fp, sp, #4
 5e0:	mov	r0, #79	; 0x4f
 5e4:	bl	428 <cflag_orphan@plt>
 5e8:	nop	{0}
 5ec:	sub	sp, fp, #4
 5f0:	ldr	fp, [sp]
 5f4:	add	sp, sp, #4
 5f8:	pop	{pc}		; (ldr pc, [sp], #4)

000005fc <h_can_join>:
 5fc:	str	fp, [sp, #-8]!
 600:	str	lr, [sp, #4]
 604:	add	fp, sp, #4
 608:	sub	sp, sp, #16
 60c:	str	r0, [fp, #-16]
 610:	ldr	r3, [fp, #-16]
 614:	ldr	r3, [r3]
 618:	str	r3, [fp, #-8]
 61c:	ldr	r3, [fp, #-16]
 620:	ldr	r3, [r3, #4]
 624:	str	r3, [fp, #-12]
 628:	ldr	r3, [fp, #-12]
 62c:	ldr	r2, [r3, #12]
 630:	ldr	r3, [pc, #96]	; 698 <h_can_join+0x9c>
 634:	add	r3, pc, r3
 638:	ldr	r3, [r3]
 63c:	and	r3, r3, r2
 640:	cmp	r3, #0
 644:	beq	684 <h_can_join+0x88>
 648:	ldr	r3, [fp, #-8]
 64c:	ldr	r3, [r3, #56]	; 0x38
 650:	and	r3, r3, #4096	; 0x1000
 654:	cmp	r3, #0
 658:	bne	684 <h_can_join+0x88>
 65c:	ldr	r3, [fp, #-12]
 660:	ldr	r3, [r3, #236]	; 0xec
 664:	ldr	r2, [pc, #48]	; 69c <h_can_join+0xa0>
 668:	add	r2, pc, r2
 66c:	mov	r1, #520	; 0x208
 670:	ldr	r0, [fp, #-8]
 674:	bl	41c <sendto_one_numeric@plt>
 678:	ldr	r3, [fp, #-16]
 67c:	mov	r2, #1000	; 0x3e8
 680:	str	r2, [r3, #8]
 684:	nop	{0}
 688:	sub	sp, fp, #4
 68c:	ldr	fp, [sp]
 690:	add	sp, sp, #4
 694:	pop	{pc}		; (ldr pc, [sp], #4)
 698:	.word	0x00010a40
 69c:	.word	0x00000080

Disassembly of section .fini:

000006a0 <_fini>:
 6a0:	push	{r3, lr}
 6a4:	pop	{r3, pc}
