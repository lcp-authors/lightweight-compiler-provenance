
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

00011088 <.init>:
   11088:	push	{r3, lr}
   1108c:	bl	113c4 <__assert_fail@plt+0x4c>
   11090:	pop	{r3, pc}

Disassembly of section .plt:

00011094 <fdopen@plt-0x14>:
   11094:	push	{lr}		; (str lr, [sp, #-4]!)
   11098:	ldr	lr, [pc, #4]	; 110a4 <fdopen@plt-0x4>
   1109c:	add	lr, pc, lr
   110a0:	ldr	pc, [lr, #8]!
   110a4:	andeq	ip, r1, ip, asr pc

000110a8 <fdopen@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #28, 20	; 0x1c000
   110b0:	ldr	pc, [ip, #3932]!	; 0xf5c

000110b4 <calloc@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #28, 20	; 0x1c000
   110bc:	ldr	pc, [ip, #3924]!	; 0xf54

000110c0 <fputs_unlocked@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #28, 20	; 0x1c000
   110c8:	ldr	pc, [ip, #3916]!	; 0xf4c

000110cc <raise@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #28, 20	; 0x1c000
   110d4:	ldr	pc, [ip, #3908]!	; 0xf44

000110d8 <strcmp@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #28, 20	; 0x1c000
   110e0:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e4 <posix_fadvise64@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #28, 20	; 0x1c000
   110ec:	ldr	pc, [ip, #3892]!	; 0xf34

000110f0 <fflush@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #28, 20	; 0x1c000
   110f8:	ldr	pc, [ip, #3884]!	; 0xf2c

000110fc <free@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #28, 20	; 0x1c000
   11104:	ldr	pc, [ip, #3876]!	; 0xf24

00011108 <ferror@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #28, 20	; 0x1c000
   11110:	ldr	pc, [ip, #3868]!	; 0xf1c

00011114 <_exit@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #28, 20	; 0x1c000
   1111c:	ldr	pc, [ip, #3860]!	; 0xf14

00011120 <memcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #28, 20	; 0x1c000
   11128:	ldr	pc, [ip, #3852]!	; 0xf0c

0001112c <mbsinit@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #28, 20	; 0x1c000
   11134:	ldr	pc, [ip, #3844]!	; 0xf04

00011138 <dcgettext@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #28, 20	; 0x1c000
   11140:	ldr	pc, [ip, #3836]!	; 0xefc

00011144 <realloc@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #28, 20	; 0x1c000
   1114c:	ldr	pc, [ip, #3828]!	; 0xef4

00011150 <textdomain@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #28, 20	; 0x1c000
   11158:	ldr	pc, [ip, #3820]!	; 0xeec

0001115c <iswprint@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #28, 20	; 0x1c000
   11164:	ldr	pc, [ip, #3812]!	; 0xee4

00011168 <lseek64@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #28, 20	; 0x1c000
   11170:	ldr	pc, [ip, #3804]!	; 0xedc

00011174 <__ctype_get_mb_cur_max@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #28, 20	; 0x1c000
   1117c:	ldr	pc, [ip, #3796]!	; 0xed4

00011180 <fread@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #28, 20	; 0x1c000
   11188:	ldr	pc, [ip, #3788]!	; 0xecc

0001118c <__fpending@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #28, 20	; 0x1c000
   11194:	ldr	pc, [ip, #3780]!	; 0xec4

00011198 <ferror_unlocked@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #28, 20	; 0x1c000
   111a0:	ldr	pc, [ip, #3772]!	; 0xebc

000111a4 <mbrtowc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #28, 20	; 0x1c000
   111ac:	ldr	pc, [ip, #3764]!	; 0xeb4

000111b0 <error@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #28, 20	; 0x1c000
   111b8:	ldr	pc, [ip, #3756]!	; 0xeac

000111bc <malloc@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #28, 20	; 0x1c000
   111c4:	ldr	pc, [ip, #3748]!	; 0xea4

000111c8 <__libc_start_main@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #28, 20	; 0x1c000
   111d0:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d4 <__freading@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #28, 20	; 0x1c000
   111dc:	ldr	pc, [ip, #3732]!	; 0xe94

000111e0 <__ctype_tolower_loc@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #28, 20	; 0x1c000
   111e8:	ldr	pc, [ip, #3724]!	; 0xe8c

000111ec <__gmon_start__@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #28, 20	; 0x1c000
   111f4:	ldr	pc, [ip, #3716]!	; 0xe84

000111f8 <getopt_long@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #28, 20	; 0x1c000
   11200:	ldr	pc, [ip, #3708]!	; 0xe7c

00011204 <__ctype_b_loc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #28, 20	; 0x1c000
   1120c:	ldr	pc, [ip, #3700]!	; 0xe74

00011210 <exit@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #28, 20	; 0x1c000
   11218:	ldr	pc, [ip, #3692]!	; 0xe6c

0001121c <feof@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #28, 20	; 0x1c000
   11224:	ldr	pc, [ip, #3684]!	; 0xe64

00011228 <bcmp@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #28, 20	; 0x1c000
   11230:	ldr	pc, [ip, #3676]!	; 0xe5c

00011234 <strlen@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #28, 20	; 0x1c000
   1123c:	ldr	pc, [ip, #3668]!	; 0xe54

00011240 <strchr@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #28, 20	; 0x1c000
   11248:	ldr	pc, [ip, #3660]!	; 0xe4c

0001124c <__errno_location@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #28, 20	; 0x1c000
   11254:	ldr	pc, [ip, #3652]!	; 0xe44

00011258 <__cxa_atexit@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #28, 20	; 0x1c000
   11260:	ldr	pc, [ip, #3644]!	; 0xe3c

00011264 <setvbuf@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #28, 20	; 0x1c000
   1126c:	ldr	pc, [ip, #3636]!	; 0xe34

00011270 <memset@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #28, 20	; 0x1c000
   11278:	ldr	pc, [ip, #3628]!	; 0xe2c

0001127c <__printf_chk@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #28, 20	; 0x1c000
   11284:	ldr	pc, [ip, #3620]!	; 0xe24

00011288 <fileno@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #28, 20	; 0x1c000
   11290:	ldr	pc, [ip, #3612]!	; 0xe1c

00011294 <strtoumax@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #28, 20	; 0x1c000
   1129c:	ldr	pc, [ip, #3604]!	; 0xe14

000112a0 <__fprintf_chk@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #28, 20	; 0x1c000
   112a8:	ldr	pc, [ip, #3596]!	; 0xe0c

000112ac <fclose@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #28, 20	; 0x1c000
   112b4:	ldr	pc, [ip, #3588]!	; 0xe04

000112b8 <fseeko64@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #28, 20	; 0x1c000
   112c0:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c4 <fcntl64@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #28, 20	; 0x1c000
   112cc:	ldr	pc, [ip, #3572]!	; 0xdf4

000112d0 <setlocale@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #28, 20	; 0x1c000
   112d8:	ldr	pc, [ip, #3564]!	; 0xdec

000112dc <strrchr@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #28, 20	; 0x1c000
   112e4:	ldr	pc, [ip, #3556]!	; 0xde4

000112e8 <nl_langinfo@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #28, 20	; 0x1c000
   112f0:	ldr	pc, [ip, #3548]!	; 0xddc

000112f4 <clearerr_unlocked@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #28, 20	; 0x1c000
   112fc:	ldr	pc, [ip, #3540]!	; 0xdd4

00011300 <fopen64@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #28, 20	; 0x1c000
   11308:	ldr	pc, [ip, #3532]!	; 0xdcc

0001130c <bindtextdomain@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #28, 20	; 0x1c000
   11314:	ldr	pc, [ip, #3524]!	; 0xdc4

00011318 <getline@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #28, 20	; 0x1c000
   11320:	ldr	pc, [ip, #3516]!	; 0xdbc

00011324 <fputs@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #28, 20	; 0x1c000
   1132c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011330 <strncmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #28, 20	; 0x1c000
   11338:	ldr	pc, [ip, #3500]!	; 0xdac

0001133c <abort@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #28, 20	; 0x1c000
   11344:	ldr	pc, [ip, #3492]!	; 0xda4

00011348 <feof_unlocked@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #28, 20	; 0x1c000
   11350:	ldr	pc, [ip, #3484]!	; 0xd9c

00011354 <close@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #28, 20	; 0x1c000
   1135c:	ldr	pc, [ip, #3476]!	; 0xd94

00011360 <dcngettext@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #28, 20	; 0x1c000
   11368:	ldr	pc, [ip, #3468]!	; 0xd8c

0001136c <putchar_unlocked@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #28, 20	; 0x1c000
   11374:	ldr	pc, [ip, #3460]!	; 0xd84

00011378 <__assert_fail@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #28, 20	; 0x1c000
   11380:	ldr	pc, [ip, #3452]!	; 0xd7c

Disassembly of section .text:

00011388 <.text>:
   11388:	mov	fp, #0
   1138c:	mov	lr, #0
   11390:	pop	{r1}		; (ldr r1, [sp], #4)
   11394:	mov	r2, sp
   11398:	push	{r2}		; (str r2, [sp, #-4]!)
   1139c:	push	{r0}		; (str r0, [sp, #-4]!)
   113a0:	ldr	ip, [pc, #16]	; 113b8 <__assert_fail@plt+0x40>
   113a4:	push	{ip}		; (str ip, [sp, #-4]!)
   113a8:	ldr	r0, [pc, #12]	; 113bc <__assert_fail@plt+0x44>
   113ac:	ldr	r3, [pc, #12]	; 113c0 <__assert_fail@plt+0x48>
   113b0:	bl	111c8 <__libc_start_main@plt>
   113b4:	bl	1133c <abort@plt>
   113b8:	andeq	ip, r1, r0, lsr #12
   113bc:	andeq	r1, r1, ip, ror #15
   113c0:	andeq	ip, r1, r0, asr #11
   113c4:	ldr	r3, [pc, #20]	; 113e0 <__assert_fail@plt+0x68>
   113c8:	ldr	r2, [pc, #20]	; 113e4 <__assert_fail@plt+0x6c>
   113cc:	add	r3, pc, r3
   113d0:	ldr	r2, [r3, r2]
   113d4:	cmp	r2, #0
   113d8:	bxeq	lr
   113dc:	b	111ec <__gmon_start__@plt>
   113e0:	andeq	ip, r1, ip, lsr #24
   113e4:	andeq	r0, r0, r0, lsl #2
   113e8:	ldr	r0, [pc, #24]	; 11408 <__assert_fail@plt+0x90>
   113ec:	ldr	r3, [pc, #24]	; 1140c <__assert_fail@plt+0x94>
   113f0:	cmp	r3, r0
   113f4:	bxeq	lr
   113f8:	ldr	r3, [pc, #16]	; 11410 <__assert_fail@plt+0x98>
   113fc:	cmp	r3, #0
   11400:	bxeq	lr
   11404:	bx	r3
   11408:	andeq	lr, r2, r0, ror #2
   1140c:	andeq	lr, r2, r0, ror #2
   11410:	andeq	r0, r0, r0
   11414:	ldr	r0, [pc, #36]	; 11440 <__assert_fail@plt+0xc8>
   11418:	ldr	r1, [pc, #36]	; 11444 <__assert_fail@plt+0xcc>
   1141c:	sub	r1, r1, r0
   11420:	asr	r1, r1, #2
   11424:	add	r1, r1, r1, lsr #31
   11428:	asrs	r1, r1, #1
   1142c:	bxeq	lr
   11430:	ldr	r3, [pc, #16]	; 11448 <__assert_fail@plt+0xd0>
   11434:	cmp	r3, #0
   11438:	bxeq	lr
   1143c:	bx	r3
   11440:	andeq	lr, r2, r0, ror #2
   11444:	andeq	lr, r2, r0, ror #2
   11448:	andeq	r0, r0, r0
   1144c:	push	{r4, lr}
   11450:	ldr	r4, [pc, #24]	; 11470 <__assert_fail@plt+0xf8>
   11454:	ldrb	r3, [r4]
   11458:	cmp	r3, #0
   1145c:	popne	{r4, pc}
   11460:	bl	113e8 <__assert_fail@plt+0x70>
   11464:	mov	r3, #1
   11468:	strb	r3, [r4]
   1146c:	pop	{r4, pc}
   11470:	andeq	lr, r2, r4, lsl #3
   11474:	b	11414 <__assert_fail@plt+0x9c>
   11478:	push	{fp, lr}
   1147c:	mov	fp, sp
   11480:	sub	sp, sp, #56	; 0x38
   11484:	mov	r8, r0
   11488:	cmp	r0, #0
   1148c:	bne	117ac <__assert_fail@plt+0x434>
   11490:	movw	r1, #50803	; 0xc673
   11494:	mov	r0, #0
   11498:	mov	r2, #5
   1149c:	movt	r1, #1
   114a0:	bl	11138 <dcgettext@plt>
   114a4:	mov	r1, r0
   114a8:	movw	r0, #57772	; 0xe1ac
   114ac:	movt	r0, #2
   114b0:	ldr	r2, [r0]
   114b4:	mov	r0, #1
   114b8:	bl	1127c <__printf_chk@plt>
   114bc:	movw	r1, #50836	; 0xc694
   114c0:	mov	r0, #0
   114c4:	mov	r2, #5
   114c8:	movt	r1, #1
   114cc:	bl	11138 <dcgettext@plt>
   114d0:	movw	r2, #50875	; 0xc6bb
   114d4:	mov	r1, r0
   114d8:	mov	r0, #1
   114dc:	mov	r3, #512	; 0x200
   114e0:	movt	r2, #1
   114e4:	bl	1127c <__printf_chk@plt>
   114e8:	movw	r1, #53053	; 0xcf3d
   114ec:	mov	r0, #0
   114f0:	mov	r2, #5
   114f4:	movt	r1, #1
   114f8:	bl	11138 <dcgettext@plt>
   114fc:	movw	r9, #57724	; 0xe17c
   11500:	movt	r9, #2
   11504:	ldr	r1, [r9]
   11508:	bl	110c0 <fputs_unlocked@plt>
   1150c:	movw	r1, #53109	; 0xcf75
   11510:	mov	r0, #0
   11514:	mov	r2, #5
   11518:	movt	r1, #1
   1151c:	bl	11138 <dcgettext@plt>
   11520:	ldr	r1, [r9]
   11524:	bl	110c0 <fputs_unlocked@plt>
   11528:	movw	r1, #50883	; 0xc6c3
   1152c:	mov	r0, #0
   11530:	mov	r2, #5
   11534:	movt	r1, #1
   11538:	bl	11138 <dcgettext@plt>
   1153c:	ldr	r1, [r9]
   11540:	bl	110c0 <fputs_unlocked@plt>
   11544:	movw	r1, #50928	; 0xc6f0
   11548:	mov	r0, #0
   1154c:	mov	r2, #5
   11550:	movt	r1, #1
   11554:	bl	11138 <dcgettext@plt>
   11558:	ldr	r1, [r9]
   1155c:	bl	110c0 <fputs_unlocked@plt>
   11560:	movw	r1, #50998	; 0xc736
   11564:	mov	r0, #0
   11568:	mov	r2, #5
   1156c:	movt	r1, #1
   11570:	bl	11138 <dcgettext@plt>
   11574:	ldr	r1, [r9]
   11578:	bl	110c0 <fputs_unlocked@plt>
   1157c:	movw	r1, #51149	; 0xc7cd
   11580:	mov	r0, #0
   11584:	mov	r2, #5
   11588:	movt	r1, #1
   1158c:	bl	11138 <dcgettext@plt>
   11590:	ldr	r1, [r9]
   11594:	bl	110c0 <fputs_unlocked@plt>
   11598:	movw	r1, #51202	; 0xc802
   1159c:	mov	r0, #0
   115a0:	mov	r2, #5
   115a4:	movt	r1, #1
   115a8:	bl	11138 <dcgettext@plt>
   115ac:	ldr	r1, [r9]
   115b0:	bl	110c0 <fputs_unlocked@plt>
   115b4:	movw	r1, #51255	; 0xc837
   115b8:	mov	r0, #0
   115bc:	mov	r2, #5
   115c0:	movt	r1, #1
   115c4:	bl	11138 <dcgettext@plt>
   115c8:	ldr	r1, [r9]
   115cc:	bl	110c0 <fputs_unlocked@plt>
   115d0:	movw	r1, #51381	; 0xc8b5
   115d4:	mov	r0, #0
   115d8:	mov	r2, #5
   115dc:	movt	r1, #1
   115e0:	bl	11138 <dcgettext@plt>
   115e4:	ldr	r1, [r9]
   115e8:	bl	110c0 <fputs_unlocked@plt>
   115ec:	movw	r1, #51820	; 0xca6c
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11138 <dcgettext@plt>
   11600:	ldr	r1, [r9]
   11604:	bl	110c0 <fputs_unlocked@plt>
   11608:	movw	r1, #51865	; 0xca99
   1160c:	mov	r0, #0
   11610:	mov	r2, #5
   11614:	movt	r1, #1
   11618:	bl	11138 <dcgettext@plt>
   1161c:	ldr	r1, [r9]
   11620:	bl	110c0 <fputs_unlocked@plt>
   11624:	movw	r1, #51919	; 0xcacf
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	movt	r1, #1
   11634:	bl	11138 <dcgettext@plt>
   11638:	movw	r2, #51963	; 0xcafb
   1163c:	mov	r1, r0
   11640:	mov	r0, #1
   11644:	movt	r2, #1
   11648:	bl	1127c <__printf_chk@plt>
   1164c:	movw	r1, #51972	; 0xcb04
   11650:	mov	r0, #0
   11654:	mov	r2, #5
   11658:	movt	r1, #1
   1165c:	bl	11138 <dcgettext@plt>
   11660:	ldr	r1, [r9]
   11664:	bl	110c0 <fputs_unlocked@plt>
   11668:	movw	r0, #54296	; 0xd418
   1166c:	mov	r6, sp
   11670:	movt	r0, #1
   11674:	mov	r1, r6
   11678:	ldm	r0!, {r2, r3, r4, r5}
   1167c:	stmia	r1!, {r2, r3, r4, r5}
   11680:	ldm	r0!, {r2, r3, r4, r5, r7}
   11684:	stmia	r1!, {r2, r3, r4, r5, r7}
   11688:	ldm	r0, {r2, r3, r4, r5, r7}
   1168c:	stm	r1, {r2, r3, r4, r5, r7}
   11690:	movw	r1, #53184	; 0xcfc0
   11694:	movw	r5, #52305	; 0xcc51
   11698:	movt	r1, #1
   1169c:	movt	r5, #1
   116a0:	mov	r0, r5
   116a4:	bl	110d8 <strcmp@plt>
   116a8:	cmp	r0, #0
   116ac:	ldrne	r1, [r6, #8]!
   116b0:	cmpne	r1, #0
   116b4:	bne	116a0 <__assert_fail@plt+0x328>
   116b8:	movw	r1, #53279	; 0xd01f
   116bc:	ldr	r6, [r6, #4]
   116c0:	mov	r0, #0
   116c4:	mov	r2, #5
   116c8:	movt	r1, #1
   116cc:	bl	11138 <dcgettext@plt>
   116d0:	movw	r2, #52407	; 0xccb7
   116d4:	movw	r3, #53302	; 0xd036
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	movt	r2, #1
   116e4:	movt	r3, #1
   116e8:	bl	1127c <__printf_chk@plt>
   116ec:	cmp	r6, #0
   116f0:	mov	r0, #5
   116f4:	mov	r1, #0
   116f8:	moveq	r6, r5
   116fc:	bl	112d0 <setlocale@plt>
   11700:	cmp	r0, #0
   11704:	beq	1173c <__assert_fail@plt+0x3c4>
   11708:	movw	r1, #53342	; 0xd05e
   1170c:	mov	r2, #3
   11710:	movt	r1, #1
   11714:	bl	11330 <strncmp@plt>
   11718:	cmp	r0, #0
   1171c:	beq	1173c <__assert_fail@plt+0x3c4>
   11720:	movw	r1, #53346	; 0xd062
   11724:	mov	r0, #0
   11728:	mov	r2, #5
   1172c:	movt	r1, #1
   11730:	bl	11138 <dcgettext@plt>
   11734:	ldr	r1, [r9]
   11738:	bl	110c0 <fputs_unlocked@plt>
   1173c:	movw	r1, #53417	; 0xd0a9
   11740:	mov	r0, #0
   11744:	mov	r2, #5
   11748:	movt	r1, #1
   1174c:	bl	11138 <dcgettext@plt>
   11750:	movw	r2, #53302	; 0xd036
   11754:	mov	r1, r0
   11758:	mov	r0, #1
   1175c:	mov	r3, r5
   11760:	movt	r2, #1
   11764:	bl	1127c <__printf_chk@plt>
   11768:	movw	r1, #53444	; 0xd0c4
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	movt	r1, #1
   11778:	bl	11138 <dcgettext@plt>
   1177c:	mov	r1, r0
   11780:	movw	r0, #53212	; 0xcfdc
   11784:	movw	r3, #51819	; 0xca6b
   11788:	cmp	r6, r5
   1178c:	mov	r2, r6
   11790:	movt	r0, #1
   11794:	movt	r3, #1
   11798:	moveq	r3, r0
   1179c:	mov	r0, #1
   117a0:	bl	1127c <__printf_chk@plt>
   117a4:	mov	r0, r8
   117a8:	bl	11210 <exit@plt>
   117ac:	movw	r0, #57712	; 0xe170
   117b0:	movw	r1, #50764	; 0xc64c
   117b4:	mov	r2, #5
   117b8:	movt	r0, #2
   117bc:	movt	r1, #1
   117c0:	ldr	r5, [r0]
   117c4:	mov	r0, #0
   117c8:	bl	11138 <dcgettext@plt>
   117cc:	mov	r2, r0
   117d0:	movw	r0, #57772	; 0xe1ac
   117d4:	mov	r1, #1
   117d8:	movt	r0, #2
   117dc:	ldr	r3, [r0]
   117e0:	mov	r0, r5
   117e4:	bl	112a0 <__fprintf_chk@plt>
   117e8:	b	117a4 <__assert_fail@plt+0x42c>
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f0:	add	fp, sp, #28
   117f4:	sub	sp, sp, #308	; 0x134
   117f8:	mov	r5, r0
   117fc:	ldr	r0, [r1]
   11800:	mov	r4, r1
   11804:	bl	19318 <__assert_fail@plt+0x7fa0>
   11808:	movw	sl, #51819	; 0xca6b
   1180c:	mov	r0, #6
   11810:	movt	sl, #1
   11814:	mov	r1, sl
   11818:	bl	112d0 <setlocale@plt>
   1181c:	movw	r6, #52411	; 0xccbb
   11820:	movw	r1, #52311	; 0xcc57
   11824:	movt	r6, #1
   11828:	movt	r1, #1
   1182c:	mov	r0, r6
   11830:	bl	1130c <bindtextdomain@plt>
   11834:	mov	r0, r6
   11838:	bl	11150 <textdomain@plt>
   1183c:	movw	r0, #36736	; 0x8f80
   11840:	movt	r0, #1
   11844:	bl	1c624 <__assert_fail@plt+0xb2ac>
   11848:	movw	r0, #57724	; 0xe17c
   1184c:	mov	r1, #0
   11850:	mov	r2, #1
   11854:	mov	r3, #0
   11858:	mov	r9, #0
   1185c:	movt	r0, #2
   11860:	ldr	r0, [r0]
   11864:	bl	11264 <setvbuf@plt>
   11868:	add	r0, sp, #140	; 0x8c
   1186c:	movw	r6, #52335	; 0xcc6f
   11870:	movw	r8, #54072	; 0xd338
   11874:	add	r0, r0, #7
   11878:	movt	r6, #1
   1187c:	movt	r8, #1
   11880:	and	r1, r0, #7
   11884:	sub	r0, r0, r1
   11888:	str	r1, [sp, #132]	; 0x84
   1188c:	mov	r1, #0
   11890:	str	r0, [sp, #52]	; 0x34
   11894:	mvn	r0, #0
   11898:	str	r0, [sp, #136]	; 0x88
   1189c:	mov	r0, #0
   118a0:	str	r0, [sp, #60]	; 0x3c
   118a4:	str	r1, [sp, #112]	; 0x70
   118a8:	mov	r0, r5
   118ac:	mov	r1, r4
   118b0:	mov	r2, r6
   118b4:	mov	r3, r8
   118b8:	str	r9, [sp]
   118bc:	bl	111f8 <getopt_long@plt>
   118c0:	cmp	r0, #118	; 0x76
   118c4:	bgt	11954 <__assert_fail@plt+0x5dc>
   118c8:	cmp	r0, #98	; 0x62
   118cc:	ble	11988 <__assert_fail@plt+0x610>
   118d0:	cmp	r0, #99	; 0x63
   118d4:	mov	r1, #1
   118d8:	beq	118a4 <__assert_fail@plt+0x52c>
   118dc:	cmp	r0, #108	; 0x6c
   118e0:	bne	119c0 <__assert_fail@plt+0x648>
   118e4:	movw	sl, #57728	; 0xe180
   118e8:	movw	r1, #52343	; 0xcc77
   118ec:	mov	r0, #0
   118f0:	mov	r2, #5
   118f4:	movt	sl, #2
   118f8:	movt	r1, #1
   118fc:	ldr	r7, [sl]
   11900:	bl	11138 <dcgettext@plt>
   11904:	mvn	r1, #0
   11908:	str	r0, [sp, #12]
   1190c:	mov	r0, r7
   11910:	mov	r2, #0
   11914:	mov	r3, #0
   11918:	str	r9, [sp, #16]
   1191c:	str	r1, [sp]
   11920:	str	r1, [sp, #4]
   11924:	movw	r1, #51819	; 0xca6b
   11928:	movt	r1, #1
   1192c:	str	r1, [sp, #8]
   11930:	bl	1b884 <__assert_fail@plt+0xa50c>
   11934:	movw	r2, #57736	; 0xe188
   11938:	ldr	sl, [sl]
   1193c:	tst	r0, #7
   11940:	movt	r2, #2
   11944:	strd	r0, [r2]
   11948:	ldr	r1, [sp, #112]	; 0x70
   1194c:	beq	118a4 <__assert_fail@plt+0x52c>
   11950:	b	12c88 <__assert_fail@plt+0x1910>
   11954:	sub	r1, r0, #256	; 0x100
   11958:	cmp	r1, #4
   1195c:	bhi	11998 <__assert_fail@plt+0x620>
   11960:	add	r0, pc, #0
   11964:	ldr	pc, [r0, r1, lsl #2]
   11968:	andeq	r1, r1, ip, ror r9
   1196c:	andeq	r1, r1, r0, asr #20
   11970:	andeq	r1, r1, r4, lsl #20
   11974:	andeq	r1, r1, r8, lsr #20
   11978:	andeq	r1, r1, ip, ror #19
   1197c:	movw	r0, #57747	; 0xe193
   11980:	movt	r0, #2
   11984:	b	11a30 <__assert_fail@plt+0x6b8>
   11988:	cmp	r0, #97	; 0x61
   1198c:	ble	11a70 <__assert_fail@plt+0x6f8>
   11990:	mov	r0, #1
   11994:	b	119cc <__assert_fail@plt+0x654>
   11998:	cmp	r0, #119	; 0x77
   1199c:	bne	119d8 <__assert_fail@plt+0x660>
   119a0:	movw	r0, #57745	; 0xe191
   119a4:	mov	r1, #1
   119a8:	movt	r0, #2
   119ac:	strb	r1, [r0]
   119b0:	movw	r0, #57744	; 0xe190
   119b4:	movt	r0, #2
   119b8:	strb	r9, [r0]
   119bc:	b	11a5c <__assert_fail@plt+0x6e4>
   119c0:	cmp	r0, #116	; 0x74
   119c4:	bne	12dcc <__assert_fail@plt+0x1a54>
   119c8:	mov	r0, #0
   119cc:	ldr	r1, [sp, #112]	; 0x70
   119d0:	str	r0, [sp, #136]	; 0x88
   119d4:	b	118a4 <__assert_fail@plt+0x52c>
   119d8:	cmp	r0, #122	; 0x7a
   119dc:	bne	12dcc <__assert_fail@plt+0x1a54>
   119e0:	movw	r0, #57749	; 0xe195
   119e4:	movt	r0, #2
   119e8:	b	11a30 <__assert_fail@plt+0x6b8>
   119ec:	ldr	r1, [sp, #112]	; 0x70
   119f0:	mov	r0, #1
   119f4:	str	r0, [sp, #136]	; 0x88
   119f8:	mov	r0, #1
   119fc:	str	r0, [sp, #60]	; 0x3c
   11a00:	b	118a4 <__assert_fail@plt+0x52c>
   11a04:	movw	r0, #57745	; 0xe191
   11a08:	movt	r0, #2
   11a0c:	strb	r9, [r0]
   11a10:	movw	r0, #57744	; 0xe190
   11a14:	movt	r0, #2
   11a18:	strb	r9, [r0]
   11a1c:	movw	r0, #57746	; 0xe192
   11a20:	movt	r0, #2
   11a24:	b	11a30 <__assert_fail@plt+0x6b8>
   11a28:	movw	r0, #57748	; 0xe194
   11a2c:	movt	r0, #2
   11a30:	mov	r1, #1
   11a34:	strb	r1, [r0]
   11a38:	ldr	r1, [sp, #112]	; 0x70
   11a3c:	b	118a4 <__assert_fail@plt+0x52c>
   11a40:	movw	r0, #57745	; 0xe191
   11a44:	mov	r1, #1
   11a48:	movt	r0, #2
   11a4c:	strb	r9, [r0]
   11a50:	movw	r0, #57744	; 0xe190
   11a54:	movt	r0, #2
   11a58:	strb	r1, [r0]
   11a5c:	movw	r0, #57746	; 0xe192
   11a60:	ldr	r1, [sp, #112]	; 0x70
   11a64:	movt	r0, #2
   11a68:	strb	r9, [r0]
   11a6c:	b	118a4 <__assert_fail@plt+0x52c>
   11a70:	cmn	r0, #1
   11a74:	bne	12c1c <__assert_fail@plt+0x18a4>
   11a78:	movw	r1, #57752	; 0xe198
   11a7c:	mov	r0, #1
   11a80:	movw	r2, #513	; 0x201
   11a84:	movt	r1, #2
   11a88:	strb	r0, [r1]
   11a8c:	movw	r0, #57736	; 0xe188
   11a90:	movt	r0, #2
   11a94:	ldrd	r0, [r0]
   11a98:	subs	r2, r0, r2
   11a9c:	sbcs	r2, r1, #0
   11aa0:	bcs	12ce0 <__assert_fail@plt+0x1968>
   11aa4:	orrs	r2, r0, r1
   11aa8:	beq	11ab8 <__assert_fail@plt+0x740>
   11aac:	lsr	r0, r0, #2
   11ab0:	orr	r0, r0, r1, lsl #30
   11ab4:	b	11ad0 <__assert_fail@plt+0x758>
   11ab8:	movw	r2, #57736	; 0xe188
   11abc:	mov	r1, #0
   11ac0:	mov	r0, #512	; 0x200
   11ac4:	movt	r2, #2
   11ac8:	strd	r0, [r2]
   11acc:	mov	r0, #128	; 0x80
   11ad0:	movw	sl, #57756	; 0xe19c
   11ad4:	movt	sl, #2
   11ad8:	str	r0, [sl]
   11adc:	ldr	r0, [sp, #60]	; 0x3c
   11ae0:	eor	r1, r0, #1
   11ae4:	ldr	r0, [sp, #136]	; 0x88
   11ae8:	cmp	r0, #0
   11aec:	tsteq	r1, #1
   11af0:	beq	12d48 <__assert_fail@plt+0x19d0>
   11af4:	ldr	r0, [sp, #112]	; 0x70
   11af8:	eor	r0, r0, #1
   11afc:	tst	r0, #1
   11b00:	bne	11b18 <__assert_fail@plt+0x7a0>
   11b04:	movw	r2, #57749	; 0xe195
   11b08:	movt	r2, #2
   11b0c:	ldrb	r2, [r2]
   11b10:	cmp	r2, #0
   11b14:	bne	12d54 <__assert_fail@plt+0x19dc>
   11b18:	orr	r1, r1, r0
   11b1c:	tst	r1, #1
   11b20:	beq	12d60 <__assert_fail@plt+0x19e8>
   11b24:	ldr	r2, [sp, #136]	; 0x88
   11b28:	mov	r1, #0
   11b2c:	cmp	r2, #0
   11b30:	movwmi	r1, #1
   11b34:	orr	r1, r1, r0
   11b38:	tst	r1, #1
   11b3c:	beq	12d6c <__assert_fail@plt+0x19f4>
   11b40:	movw	r1, #57747	; 0xe193
   11b44:	ldr	r2, [sp, #112]	; 0x70
   11b48:	movt	r1, #2
   11b4c:	ldrb	r1, [r1]
   11b50:	mvn	r1, r1
   11b54:	orr	r1, r2, r1
   11b58:	tst	r1, #1
   11b5c:	beq	12d78 <__assert_fail@plt+0x1a00>
   11b60:	movw	r1, #57744	; 0xe190
   11b64:	movt	r1, #2
   11b68:	ldrb	r1, [r1]
   11b6c:	mvn	r1, r1
   11b70:	orr	r1, r2, r1
   11b74:	tst	r1, #1
   11b78:	beq	12d84 <__assert_fail@plt+0x1a0c>
   11b7c:	movw	r1, #57745	; 0xe191
   11b80:	movt	r1, #2
   11b84:	ldrb	r1, [r1]
   11b88:	mvn	r1, r1
   11b8c:	orr	r1, r2, r1
   11b90:	tst	r1, #1
   11b94:	beq	12d90 <__assert_fail@plt+0x1a18>
   11b98:	movw	r1, #57746	; 0xe192
   11b9c:	movt	r1, #2
   11ba0:	ldrb	r1, [r1]
   11ba4:	mvn	r1, r1
   11ba8:	orr	r1, r2, r1
   11bac:	tst	r1, #1
   11bb0:	beq	12d9c <__assert_fail@plt+0x1a24>
   11bb4:	movw	r1, #57748	; 0xe194
   11bb8:	movt	r1, #2
   11bbc:	ldrb	r1, [r1]
   11bc0:	and	r0, r1, r0
   11bc4:	tst	r0, #1
   11bc8:	bne	12da8 <__assert_fail@plt+0x1a30>
   11bcc:	movw	r0, #57704	; 0xe168
   11bd0:	add	r2, r4, r5, lsl #2
   11bd4:	mov	r6, #1
   11bd8:	movt	r0, #2
   11bdc:	ldr	r0, [r0]
   11be0:	cmp	r0, r5
   11be4:	ldr	r5, [sp, #112]	; 0x70
   11be8:	add	r0, r4, r0, lsl #2
   11bec:	movweq	r1, #54536	; 0xd508
   11bf0:	movteq	r1, #1
   11bf4:	streq	r1, [r2], #4
   11bf8:	cmp	r0, r2
   11bfc:	bcs	12ba4 <__assert_fail@plt+0x182c>
   11c00:	ldr	r3, [sp, #136]	; 0x88
   11c04:	sub	r6, fp, #116	; 0x74
   11c08:	mov	r1, #42	; 0x2a
   11c0c:	ldr	r7, [sp, #132]	; 0x84
   11c10:	movw	r9, #54061	; 0xd32d
   11c14:	str	r2, [sp, #84]	; 0x54
   11c18:	movt	r9, #1
   11c1c:	cmp	r3, #1
   11c20:	mov	r3, r0
   11c24:	add	r0, r6, #7
   11c28:	movwlt	r1, #32
   11c2c:	str	r1, [sp, #32]
   11c30:	and	r1, r0, #7
   11c34:	sub	r0, r0, r1
   11c38:	str	r0, [sp, #28]
   11c3c:	add	r0, sp, #140	; 0x8c
   11c40:	sub	r0, r0, r7
   11c44:	add	r7, r0, #7
   11c48:	sub	r0, r6, r1
   11c4c:	mov	r6, #1
   11c50:	add	r0, r0, #7
   11c54:	str	r7, [sp, #36]	; 0x24
   11c58:	str	r0, [sp, #24]
   11c5c:	mov	r0, r3
   11c60:	ldr	r8, [r0]
   11c64:	str	r0, [sp, #108]	; 0x6c
   11c68:	tst	r5, #1
   11c6c:	mov	r0, r8
   11c70:	beq	11cb8 <__assert_fail@plt+0x940>
   11c74:	movw	r1, #54536	; 0xd508
   11c78:	movt	r1, #1
   11c7c:	bl	110d8 <strcmp@plt>
   11c80:	mov	r4, r0
   11c84:	cmp	r0, #0
   11c88:	beq	11e44 <__assert_fail@plt+0xacc>
   11c8c:	movw	r1, #54042	; 0xd31a
   11c90:	mov	r0, r8
   11c94:	movt	r1, #1
   11c98:	bl	191a0 <__assert_fail@plt+0x7e28>
   11c9c:	cmp	r0, #0
   11ca0:	beq	12b08 <__assert_fail@plt+0x1790>
   11ca4:	str	r0, [sp, #136]	; 0x88
   11ca8:	str	r4, [sp, #68]	; 0x44
   11cac:	str	r8, [sp, #104]	; 0x68
   11cb0:	str	r6, [sp, #64]	; 0x40
   11cb4:	b	11e84 <__assert_fail@plt+0xb0c>
   11cb8:	ldr	r1, [sp, #52]	; 0x34
   11cbc:	sub	r2, fp, #116	; 0x74
   11cc0:	bl	12e00 <__assert_fail@plt+0x1a88>
   11cc4:	mov	r1, #0
   11cc8:	cmp	r0, #0
   11ccc:	beq	11e38 <__assert_fail@plt+0xac0>
   11cd0:	movw	r0, #57749	; 0xe195
   11cd4:	mov	r4, #10
   11cd8:	movt	r0, #2
   11cdc:	ldrb	r0, [r0]
   11ce0:	cmp	r0, #0
   11ce4:	mov	r0, #0
   11ce8:	movwne	r4, #0
   11cec:	str	r0, [sp, #136]	; 0x88
   11cf0:	bne	11d40 <__assert_fail@plt+0x9c8>
   11cf4:	mov	r0, r8
   11cf8:	mov	r1, #92	; 0x5c
   11cfc:	bl	11240 <strchr@plt>
   11d00:	cmp	r0, #0
   11d04:	bne	11d30 <__assert_fail@plt+0x9b8>
   11d08:	mov	r0, r8
   11d0c:	mov	r1, #10
   11d10:	bl	11240 <strchr@plt>
   11d14:	cmp	r0, #0
   11d18:	bne	11d30 <__assert_fail@plt+0x9b8>
   11d1c:	mov	r0, r8
   11d20:	mov	r1, #13
   11d24:	bl	11240 <strchr@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d40 <__assert_fail@plt+0x9c8>
   11d30:	mov	r0, #92	; 0x5c
   11d34:	bl	1136c <putchar_unlocked@plt>
   11d38:	mov	r0, #1
   11d3c:	str	r0, [sp, #136]	; 0x88
   11d40:	ldr	r0, [sp, #60]	; 0x3c
   11d44:	mov	r5, r6
   11d48:	tst	r0, #1
   11d4c:	beq	11dd0 <__assert_fail@plt+0xa58>
   11d50:	movw	r0, #57724	; 0xe17c
   11d54:	movt	r0, #2
   11d58:	ldr	r1, [r0]
   11d5c:	movw	r0, #50875	; 0xc6bb
   11d60:	movt	r0, #1
   11d64:	bl	110c0 <fputs_unlocked@plt>
   11d68:	movw	r0, #57736	; 0xe188
   11d6c:	movt	r0, #2
   11d70:	ldrd	r2, [r0]
   11d74:	lsr	r0, r2, #9
   11d78:	orr	r0, r0, r3, lsl #23
   11d7c:	orr	r0, r0, r3, lsr #9
   11d80:	cmp	r0, #0
   11d84:	bne	11d98 <__assert_fail@plt+0xa20>
   11d88:	movw	r1, #54047	; 0xd31f
   11d8c:	mov	r0, #1
   11d90:	movt	r1, #1
   11d94:	bl	1127c <__printf_chk@plt>
   11d98:	movw	r0, #57724	; 0xe17c
   11d9c:	movt	r0, #2
   11da0:	ldr	r1, [r0]
   11da4:	mov	r6, r0
   11da8:	movw	r0, #54053	; 0xd325
   11dac:	movt	r0, #1
   11db0:	bl	110c0 <fputs_unlocked@plt>
   11db4:	ldr	r1, [sp, #136]	; 0x88
   11db8:	mov	r0, r8
   11dbc:	bl	12f80 <__assert_fail@plt+0x1c08>
   11dc0:	ldr	r1, [r6]
   11dc4:	movw	r0, #54056	; 0xd328
   11dc8:	movt	r0, #1
   11dcc:	bl	110c0 <fputs_unlocked@plt>
   11dd0:	ldr	r0, [sl]
   11dd4:	cmp	r0, #2
   11dd8:	bcc	11e00 <__assert_fail@plt+0xa88>
   11ddc:	mov	r6, #0
   11de0:	ldrb	r2, [r7, r6]
   11de4:	mov	r0, #1
   11de8:	mov	r1, r9
   11dec:	bl	1127c <__printf_chk@plt>
   11df0:	ldr	r0, [sl]
   11df4:	add	r6, r6, #1
   11df8:	cmp	r6, r0, lsr #1
   11dfc:	bcc	11de0 <__assert_fail@plt+0xa68>
   11e00:	ldr	r0, [sp, #60]	; 0x3c
   11e04:	tst	r0, #1
   11e08:	bne	11e28 <__assert_fail@plt+0xab0>
   11e0c:	mov	r0, #32
   11e10:	bl	1136c <putchar_unlocked@plt>
   11e14:	ldr	r0, [sp, #32]
   11e18:	bl	1136c <putchar_unlocked@plt>
   11e1c:	ldr	r1, [sp, #136]	; 0x88
   11e20:	mov	r0, r8
   11e24:	bl	12f80 <__assert_fail@plt+0x1c08>
   11e28:	mov	r0, r4
   11e2c:	bl	1136c <putchar_unlocked@plt>
   11e30:	mov	r1, r5
   11e34:	ldr	r5, [sp, #112]	; 0x70
   11e38:	ldr	r2, [sp, #84]	; 0x54
   11e3c:	mov	r6, r1
   11e40:	b	12b94 <__assert_fail@plt+0x181c>
   11e44:	movw	r0, #57760	; 0xe1a0
   11e48:	mov	r1, #1
   11e4c:	mov	r2, #5
   11e50:	str	r4, [sp, #68]	; 0x44
   11e54:	str	r6, [sp, #64]	; 0x40
   11e58:	movt	r0, #2
   11e5c:	strb	r1, [r0]
   11e60:	movw	r1, #53038	; 0xcf2e
   11e64:	mov	r0, #0
   11e68:	movt	r1, #1
   11e6c:	bl	11138 <dcgettext@plt>
   11e70:	str	r0, [sp, #104]	; 0x68
   11e74:	movw	r0, #57720	; 0xe178
   11e78:	movt	r0, #2
   11e7c:	ldr	r0, [r0]
   11e80:	str	r0, [sp, #136]	; 0x88
   11e84:	mov	r0, #0
   11e88:	mov	r1, #0
   11e8c:	mov	r5, #0
   11e90:	mov	r8, #0
   11e94:	sub	r6, fp, #120	; 0x78
   11e98:	sub	r7, fp, #124	; 0x7c
   11e9c:	str	r0, [sp, #40]	; 0x28
   11ea0:	mov	r0, #0
   11ea4:	str	r1, [fp, #-124]	; 0xffffff84
   11ea8:	str	r1, [fp, #-120]	; 0xffffff88
   11eac:	str	r0, [sp, #44]	; 0x2c
   11eb0:	mov	r0, #0
   11eb4:	str	r0, [sp, #76]	; 0x4c
   11eb8:	mov	r0, #0
   11ebc:	str	r0, [sp, #72]	; 0x48
   11ec0:	mov	r0, #0
   11ec4:	str	r0, [sp, #80]	; 0x50
   11ec8:	mov	r0, #0
   11ecc:	str	r0, [sp, #48]	; 0x30
   11ed0:	mov	r0, #0
   11ed4:	str	r0, [sp, #124]	; 0x7c
   11ed8:	mov	r0, #0
   11edc:	str	r0, [sp, #120]	; 0x78
   11ee0:	mov	r0, #0
   11ee4:	str	r0, [sp, #132]	; 0x84
   11ee8:	mov	r0, #0
   11eec:	str	r0, [sp, #128]	; 0x80
   11ef0:	adds	r5, r5, #1
   11ef4:	mov	r0, #0
   11ef8:	adcs	r8, r8, #0
   11efc:	adc	r0, r0, #0
   11f00:	cmp	r0, #1
   11f04:	beq	12be0 <__assert_fail@plt+0x1868>
   11f08:	ldr	r2, [sp, #136]	; 0x88
   11f0c:	mov	r0, r6
   11f10:	mov	r1, r7
   11f14:	bl	11318 <getline@plt>
   11f18:	cmp	r0, #1
   11f1c:	blt	127a8 <__assert_fail@plt+0x1430>
   11f20:	mov	r9, r0
   11f24:	ldr	r0, [fp, #-120]	; 0xffffff88
   11f28:	ldrb	r1, [r0]
   11f2c:	cmp	r1, #35	; 0x23
   11f30:	beq	12140 <__assert_fail@plt+0xdc8>
   11f34:	add	r1, r9, r0
   11f38:	ldrb	r1, [r1, #-1]
   11f3c:	sub	r1, r1, #10
   11f40:	clz	r1, r1
   11f44:	lsr	r3, r1, #5
   11f48:	sub	r1, r9, r3
   11f4c:	cmp	r1, #0
   11f50:	mov	r2, r1
   11f54:	subgt	r2, r2, #1
   11f58:	ldrb	r2, [r0, r2]
   11f5c:	sub	r2, r2, #13
   11f60:	clz	r2, r2
   11f64:	lsr	r2, r2, #5
   11f68:	subs	r4, r1, r2
   11f6c:	beq	12140 <__assert_fail@plt+0xdc8>
   11f70:	mov	r7, #0
   11f74:	movw	r1, #50875	; 0xc6bb
   11f78:	strb	r7, [r0, r4]
   11f7c:	movt	r1, #1
   11f80:	ldr	sl, [fp, #-120]	; 0xffffff88
   11f84:	b	11f8c <__assert_fail@plt+0xc14>
   11f88:	add	r7, r7, #1
   11f8c:	ldrb	r0, [sl, r7]
   11f90:	cmp	r0, #9
   11f94:	cmpne	r0, #32
   11f98:	beq	11f88 <__assert_fail@plt+0xc10>
   11f9c:	cmp	r0, #92	; 0x5c
   11fa0:	str	r5, [sp, #116]	; 0x74
   11fa4:	str	r2, [sp, #92]	; 0x5c
   11fa8:	mov	r2, #7
   11fac:	str	r3, [sp, #96]	; 0x60
   11fb0:	mov	r6, r1
   11fb4:	addeq	r7, r7, #1
   11fb8:	movne	r0, #0
   11fbc:	moveq	r0, #1
   11fc0:	add	r5, sl, r7
   11fc4:	str	r0, [sp, #88]	; 0x58
   11fc8:	mov	r0, r5
   11fcc:	bl	11330 <strncmp@plt>
   11fd0:	cmp	r0, #0
   11fd4:	str	r4, [sp, #100]	; 0x64
   11fd8:	beq	12148 <__assert_fail@plt+0xdd0>
   11fdc:	movw	r0, #57752	; 0xe198
   11fe0:	ldrb	r1, [r5]
   11fe4:	movt	r0, #2
   11fe8:	ldrb	r0, [r0]
   11fec:	sub	r1, r1, #92	; 0x5c
   11ff0:	clz	r1, r1
   11ff4:	lsr	r1, r1, #5
   11ff8:	cmp	r0, #0
   11ffc:	sub	r0, r4, r7
   12000:	addne	r1, r1, #3
   12004:	cmp	r0, r1
   12008:	bcc	12548 <__assert_fail@plt+0x11d0>
   1200c:	movw	r0, #57756	; 0xe19c
   12010:	mov	r1, #0
   12014:	movt	r0, #2
   12018:	str	r1, [r0]
   1201c:	bl	11204 <__ctype_b_loc@plt>
   12020:	ldrb	r2, [r5]
   12024:	ldr	r1, [r0]
   12028:	add	r0, r1, r2, lsl #1
   1202c:	ldrb	r0, [r0, #1]
   12030:	tst	r0, #16
   12034:	beq	12548 <__assert_fail@plt+0x11d0>
   12038:	add	ip, sl, r7
   1203c:	mov	r6, r5
   12040:	mov	r0, #0
   12044:	mov	r4, #0
   12048:	add	r2, ip, #1
   1204c:	ldrb	r3, [r2, r4]
   12050:	add	r0, r0, #4
   12054:	add	r4, r4, #1
   12058:	add	r3, r1, r3, lsl #1
   1205c:	ldrb	r3, [r3, #1]
   12060:	tst	r3, #16
   12064:	bne	1204c <__assert_fail@plt+0xcd4>
   12068:	movw	r1, #57756	; 0xe19c
   1206c:	cmp	r4, #2
   12070:	movt	r1, #2
   12074:	str	r4, [r1]
   12078:	bcc	12548 <__assert_fail@plt+0x11d0>
   1207c:	cmp	r4, #128	; 0x80
   12080:	bhi	12548 <__assert_fail@plt+0x11d0>
   12084:	ands	r1, r4, #1
   12088:	bne	12548 <__assert_fail@plt+0x11d0>
   1208c:	movw	r1, #57736	; 0xe188
   12090:	mov	r2, #0
   12094:	movt	r1, #2
   12098:	stm	r1, {r0, r2}
   1209c:	mov	r0, ip
   120a0:	ldrb	r1, [r0, r4]!
   120a4:	cmp	r1, #32
   120a8:	cmpne	r1, #9
   120ac:	bne	12548 <__assert_fail@plt+0x11d0>
   120b0:	add	r0, r0, #1
   120b4:	mov	r1, #0
   120b8:	strb	r1, [r0, #-1]
   120bc:	mov	r0, r6
   120c0:	mov	r6, ip
   120c4:	bl	13030 <__assert_fail@plt+0x1cb8>
   120c8:	cmp	r0, #0
   120cc:	beq	12548 <__assert_fail@plt+0x11d0>
   120d0:	mov	r1, r6
   120d4:	ldr	r2, [sp, #96]	; 0x60
   120d8:	ldr	r6, [sp, #92]	; 0x5c
   120dc:	add	ip, r7, r4
   120e0:	mov	r3, r5
   120e4:	add	r0, ip, #1
   120e8:	add	r2, r2, r6
   120ec:	sub	r2, r2, r9
   120f0:	add	r2, r2, r7
   120f4:	add	r2, r2, r4
   120f8:	cmn	r2, #2
   120fc:	beq	12368 <__assert_fail@plt+0xff0>
   12100:	add	r2, r1, r4
   12104:	ldrb	r2, [r2, #1]
   12108:	cmp	r2, #32
   1210c:	cmpne	r2, #42	; 0x2a
   12110:	bne	12368 <__assert_fail@plt+0xff0>
   12114:	movw	r2, #57616	; 0xe110
   12118:	movt	r2, #2
   1211c:	ldr	r2, [r2]
   12120:	cmp	r2, #1
   12124:	beq	1238c <__assert_fail@plt+0x1014>
   12128:	movw	r2, #57616	; 0xe110
   1212c:	mov	r0, #0
   12130:	movt	r2, #2
   12134:	str	r0, [r2]
   12138:	add	r0, ip, #2
   1213c:	b	1238c <__assert_fail@plt+0x1014>
   12140:	mov	r4, sl
   12144:	b	125ec <__assert_fail@plt+0x1274>
   12148:	add	r4, r7, #7
   1214c:	mov	r1, r6
   12150:	ldrb	r0, [sl, r4]
   12154:	str	r0, [sp, #56]	; 0x38
   12158:	mov	r0, #0
   1215c:	strb	r0, [sl, r4]
   12160:	mov	r0, r5
   12164:	bl	110d8 <strcmp@plt>
   12168:	cmp	r0, #0
   1216c:	bne	12548 <__assert_fail@plt+0x11d0>
   12170:	ldr	r3, [sp, #56]	; 0x38
   12174:	mov	r1, #0
   12178:	mov	r2, #512	; 0x200
   1217c:	cmp	r3, #40	; 0x28
   12180:	moveq	r0, #40	; 0x28
   12184:	strbeq	r0, [sl, r4]
   12188:	movw	r0, #57736	; 0xe188
   1218c:	addne	r4, r7, #8
   12190:	cmp	r3, #45	; 0x2d
   12194:	movt	r0, #2
   12198:	str	r2, [r0]
   1219c:	str	r1, [r0, #4]
   121a0:	mov	r0, #128	; 0x80
   121a4:	bne	12210 <__assert_fail@plt+0xe98>
   121a8:	str	r1, [sp]
   121ac:	add	r0, sl, r4
   121b0:	sub	r1, fp, #44	; 0x2c
   121b4:	mov	r2, #0
   121b8:	sub	r3, fp, #40	; 0x28
   121bc:	bl	1b88c <__assert_fail@plt+0xa514>
   121c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   121c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121c8:	subs	r4, r2, #1
   121cc:	sbc	r7, r3, #0
   121d0:	tst	r2, #7
   121d4:	cmpeq	r0, #0
   121d8:	bne	12548 <__assert_fail@plt+0x11d0>
   121dc:	movw	r0, #57736	; 0xe188
   121e0:	movt	r0, #2
   121e4:	ldrd	r0, [r0]
   121e8:	subs	r0, r4, r0
   121ec:	sbcs	r0, r7, r1
   121f0:	bcs	12548 <__assert_fail@plt+0x11d0>
   121f4:	movw	r0, #57736	; 0xe188
   121f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   121fc:	movt	r0, #2
   12200:	strd	r2, [r0]
   12204:	lsr	r0, r2, #2
   12208:	orr	r0, r0, r3, lsl #30
   1220c:	sub	r4, r1, sl
   12210:	movw	r1, #57756	; 0xe19c
   12214:	movt	r1, #2
   12218:	str	r0, [r1]
   1221c:	ldrb	r0, [sl, r4]
   12220:	sub	r0, r0, #32
   12224:	clz	r0, r0
   12228:	lsr	r1, r0, #5
   1222c:	add	r0, r4, r1
   12230:	ldrb	r2, [sl, r0]
   12234:	cmp	r2, #40	; 0x28
   12238:	bne	12548 <__assert_fail@plt+0x11d0>
   1223c:	ldr	r2, [sp, #100]	; 0x64
   12240:	add	r0, r0, #1
   12244:	subs	r2, r2, r0
   12248:	beq	12548 <__assert_fail@plt+0x11d0>
   1224c:	ldr	r5, [sp, #96]	; 0x60
   12250:	ldr	r6, [sp, #92]	; 0x5c
   12254:	add	lr, sl, r0
   12258:	add	r2, sl, r9
   1225c:	add	ip, r5, r6
   12260:	rsb	r0, ip, #0
   12264:	str	r0, [sp, #100]	; 0x64
   12268:	sub	r0, r9, ip
   1226c:	add	r0, sl, r0
   12270:	add	r3, r0, #1
   12274:	add	r0, r4, r5
   12278:	add	r0, r0, r1
   1227c:	sub	r0, r0, r9
   12280:	rsb	r9, r6, #0
   12284:	add	r1, r0, #2
   12288:	add	r7, r0, #1
   1228c:	mov	sl, r7
   12290:	mov	r0, r1
   12294:	mov	r4, r2
   12298:	mov	r5, r3
   1229c:	cmp	r9, r1
   122a0:	beq	122d0 <__assert_fail@plt+0xf58>
   122a4:	ldr	r1, [sp, #100]	; 0x64
   122a8:	sub	r3, r5, #1
   122ac:	sub	r2, r4, #1
   122b0:	add	r7, sl, #1
   122b4:	add	r1, r4, r1
   122b8:	ldrb	r6, [r1, #-1]
   122bc:	add	r1, r0, #1
   122c0:	cmp	r6, #41	; 0x29
   122c4:	bne	1228c <__assert_fail@plt+0xf14>
   122c8:	sub	r7, r2, ip
   122cc:	b	122e0 <__assert_fail@plt+0xf68>
   122d0:	ldrb	r1, [lr]
   122d4:	mov	r7, lr
   122d8:	cmp	r1, #41	; 0x29
   122dc:	bne	12548 <__assert_fail@plt+0x11d0>
   122e0:	ldr	r1, [sp, #88]	; 0x58
   122e4:	cmp	r1, #0
   122e8:	beq	12308 <__assert_fail@plt+0xf90>
   122ec:	sub	r1, r9, r0
   122f0:	mov	r0, lr
   122f4:	mov	r6, lr
   122f8:	bl	13094 <__assert_fail@plt+0x1d1c>
   122fc:	mov	lr, r6
   12300:	cmp	r0, #0
   12304:	beq	12548 <__assert_fail@plt+0x11d0>
   12308:	ldr	r2, [sp, #100]	; 0x64
   1230c:	sub	r0, r9, sl
   12310:	mov	r1, #0
   12314:	strb	r1, [r7]
   12318:	b	12328 <__assert_fail@plt+0xfb0>
   1231c:	add	r5, r5, #1
   12320:	add	r2, r2, #1
   12324:	add	r0, r0, #1
   12328:	ldrb	r1, [r4, r2]
   1232c:	cmp	r1, #9
   12330:	cmpne	r1, #32
   12334:	beq	1231c <__assert_fail@plt+0xfa4>
   12338:	cmp	r1, #61	; 0x3d
   1233c:	bne	12548 <__assert_fail@plt+0x11d0>
   12340:	ldrb	r0, [r5]
   12344:	cmp	r0, #32
   12348:	cmpne	r0, #9
   1234c:	bne	12358 <__assert_fail@plt+0xfe0>
   12350:	add	r5, r5, #1
   12354:	b	12340 <__assert_fail@plt+0xfc8>
   12358:	mov	r0, r5
   1235c:	mov	r4, lr
   12360:	bl	13030 <__assert_fail@plt+0x1cb8>
   12364:	b	123b0 <__assert_fail@plt+0x1038>
   12368:	movw	r1, #57616	; 0xe110
   1236c:	movt	r1, #2
   12370:	ldr	r1, [r1]
   12374:	cmp	r1, #0
   12378:	beq	12548 <__assert_fail@plt+0x11d0>
   1237c:	movw	r2, #57616	; 0xe110
   12380:	mov	r1, #1
   12384:	movt	r2, #2
   12388:	str	r1, [r2]
   1238c:	ldr	r1, [sp, #88]	; 0x58
   12390:	add	r2, sl, r0
   12394:	cmp	r1, #0
   12398:	ldr	r1, [sp, #100]	; 0x64
   1239c:	beq	123c0 <__assert_fail@plt+0x1048>
   123a0:	sub	r1, r1, r0
   123a4:	mov	r0, r2
   123a8:	mov	r4, r2
   123ac:	bl	13094 <__assert_fail@plt+0x1d1c>
   123b0:	mov	r2, r4
   123b4:	mov	r3, r5
   123b8:	cmp	r0, #0
   123bc:	beq	12548 <__assert_fail@plt+0x11d0>
   123c0:	ldr	r0, [sp, #68]	; 0x44
   123c4:	str	r2, [sp, #100]	; 0x64
   123c8:	cmp	r0, #0
   123cc:	bne	123f4 <__assert_fail@plt+0x107c>
   123d0:	movw	r1, #54536	; 0xd508
   123d4:	mov	r0, r2
   123d8:	mov	r4, r3
   123dc:	movt	r1, #1
   123e0:	bl	110d8 <strcmp@plt>
   123e4:	ldr	r2, [sp, #100]	; 0x64
   123e8:	mov	r3, r4
   123ec:	cmp	r0, #0
   123f0:	beq	12548 <__assert_fail@plt+0x11d0>
   123f4:	movw	r0, #57744	; 0xe190
   123f8:	mov	r5, r3
   123fc:	mov	r9, #0
   12400:	movt	r0, #2
   12404:	ldrb	r0, [r0]
   12408:	cmp	r0, #0
   1240c:	bne	1242c <__assert_fail@plt+0x10b4>
   12410:	mov	r0, r2
   12414:	mov	r1, #10
   12418:	bl	11240 <strchr@plt>
   1241c:	ldr	r2, [sp, #100]	; 0x64
   12420:	cmp	r0, #0
   12424:	mov	r9, r0
   12428:	movwne	r9, #1
   1242c:	ldr	r1, [sp, #28]
   12430:	mov	r0, r2
   12434:	sub	r2, fp, #40	; 0x28
   12438:	bl	12e00 <__assert_fail@plt+0x1a88>
   1243c:	ldr	r1, [sp, #72]	; 0x48
   12440:	movw	r4, #57756	; 0xe19c
   12444:	cmp	r0, #0
   12448:	movt	r4, #2
   1244c:	beq	12620 <__assert_fail@plt+0x12a8>
   12450:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   12454:	cmp	r0, #0
   12458:	beq	12470 <__assert_fail@plt+0x10f8>
   1245c:	movw	r0, #57747	; 0xe193
   12460:	movt	r0, #2
   12464:	ldrb	r0, [r0]
   12468:	cmp	r0, #0
   1246c:	bne	12534 <__assert_fail@plt+0x11bc>
   12470:	ldr	r0, [r4]
   12474:	mov	r7, #0
   12478:	cmp	r7, r0, lsr #1
   1247c:	lsr	sl, r0, #1
   12480:	beq	124dc <__assert_fail@plt+0x1164>
   12484:	bl	111e0 <__ctype_tolower_loc@plt>
   12488:	ldr	r0, [r0]
   1248c:	ldr	r6, [sp, #24]
   12490:	movw	r4, #54352	; 0xd450
   12494:	mov	r7, #0
   12498:	movt	r4, #1
   1249c:	ldrb	r3, [r5, r7, lsl #1]
   124a0:	ldrb	r1, [r6, r7]
   124a4:	ldrb	r2, [r4, r1, lsr #4]
   124a8:	ldr	r3, [r0, r3, lsl #2]
   124ac:	cmp	r3, r2
   124b0:	addeq	r2, r5, r7, lsl #1
   124b4:	andeq	r1, r1, #15
   124b8:	ldrbeq	r1, [r4, r1]
   124bc:	ldrbeq	r2, [r2, #1]
   124c0:	ldreq	r2, [r0, r2, lsl #2]
   124c4:	cmpeq	r2, r1
   124c8:	bne	124dc <__assert_fail@plt+0x1164>
   124cc:	add	r7, r7, #1
   124d0:	cmp	sl, r7
   124d4:	bne	1249c <__assert_fail@plt+0x1124>
   124d8:	mov	r7, sl
   124dc:	movw	r2, #57744	; 0xe190
   124e0:	ldr	r0, [sp, #80]	; 0x50
   124e4:	ldr	r1, [sp, #48]	; 0x30
   124e8:	movt	r2, #2
   124ec:	ldrb	r2, [r2]
   124f0:	adds	r6, r0, #1
   124f4:	adc	r4, r1, #0
   124f8:	cmp	r7, sl
   124fc:	movne	r0, r6
   12500:	movne	r1, r4
   12504:	cmp	r2, #0
   12508:	beq	1269c <__assert_fail@plt+0x1324>
   1250c:	ldr	r3, [sp, #40]	; 0x28
   12510:	sub	r2, r7, sl
   12514:	movw	r4, #57756	; 0xe19c
   12518:	str	r0, [sp, #80]	; 0x50
   1251c:	str	r1, [sp, #48]	; 0x30
   12520:	clz	r2, r2
   12524:	movt	r4, #2
   12528:	lsr	r2, r2, #5
   1252c:	orr	r3, r3, r2
   12530:	str	r3, [sp, #40]	; 0x28
   12534:	ldr	r5, [sp, #116]	; 0x74
   12538:	movw	r9, #54061	; 0xd32d
   1253c:	sub	r6, fp, #120	; 0x78
   12540:	sub	r7, fp, #124	; 0x7c
   12544:	b	12730 <__assert_fail@plt+0x13b8>
   12548:	ldr	r0, [sp, #132]	; 0x84
   1254c:	ldr	r5, [sp, #116]	; 0x74
   12550:	adds	r0, r0, #1
   12554:	str	r0, [sp, #132]	; 0x84
   12558:	ldr	r0, [sp, #128]	; 0x80
   1255c:	adc	r0, r0, #0
   12560:	str	r0, [sp, #128]	; 0x80
   12564:	movw	r0, #57745	; 0xe191
   12568:	movt	r0, #2
   1256c:	ldrb	r0, [r0]
   12570:	cmp	r0, #1
   12574:	bne	125c4 <__assert_fail@plt+0x124c>
   12578:	movw	r1, #53603	; 0xd163
   1257c:	mov	r0, #0
   12580:	mov	r2, #5
   12584:	movt	r1, #1
   12588:	bl	11138 <dcgettext@plt>
   1258c:	ldr	r2, [sp, #104]	; 0x68
   12590:	mov	r4, r0
   12594:	mov	r0, #0
   12598:	mov	r1, #3
   1259c:	bl	1ab70 <__assert_fail@plt+0x97f8>
   125a0:	mov	r3, r0
   125a4:	movw	r0, #50875	; 0xc6bb
   125a8:	stm	sp, {r5, r8}
   125ac:	mov	r1, #0
   125b0:	mov	r2, r4
   125b4:	movt	r0, #1
   125b8:	str	r0, [sp, #8]
   125bc:	mov	r0, #0
   125c0:	bl	111b0 <error@plt>
   125c4:	ldr	r0, [sp, #124]	; 0x7c
   125c8:	movw	r4, #57756	; 0xe19c
   125cc:	sub	r6, fp, #120	; 0x78
   125d0:	sub	r7, fp, #124	; 0x7c
   125d4:	movt	r4, #2
   125d8:	adds	r0, r0, #1
   125dc:	str	r0, [sp, #124]	; 0x7c
   125e0:	ldr	r0, [sp, #120]	; 0x78
   125e4:	adc	r0, r0, #0
   125e8:	str	r0, [sp, #120]	; 0x78
   125ec:	movw	r9, #54061	; 0xd32d
   125f0:	movt	r9, #1
   125f4:	ldr	sl, [sp, #136]	; 0x88
   125f8:	mov	r0, sl
   125fc:	bl	11348 <feof_unlocked@plt>
   12600:	cmp	r0, #0
   12604:	bne	127b4 <__assert_fail@plt+0x143c>
   12608:	mov	r0, sl
   1260c:	bl	11198 <ferror_unlocked@plt>
   12610:	cmp	r0, #0
   12614:	mov	sl, r4
   12618:	beq	11ef0 <__assert_fail@plt+0xb78>
   1261c:	b	127b8 <__assert_fail@plt+0x1440>
   12620:	ldr	r0, [sp, #76]	; 0x4c
   12624:	ldr	r5, [sp, #116]	; 0x74
   12628:	sub	r6, fp, #120	; 0x78
   1262c:	sub	r7, fp, #124	; 0x7c
   12630:	adds	r0, r0, #1
   12634:	str	r0, [sp, #76]	; 0x4c
   12638:	movw	r0, #57744	; 0xe190
   1263c:	adc	r1, r1, #0
   12640:	movt	r0, #2
   12644:	str	r1, [sp, #72]	; 0x48
   12648:	ldrb	r0, [r0]
   1264c:	cmp	r0, #0
   12650:	bne	1272c <__assert_fail@plt+0x13b4>
   12654:	cmp	r9, #0
   12658:	beq	12664 <__assert_fail@plt+0x12ec>
   1265c:	mov	r0, #92	; 0x5c
   12660:	bl	1136c <putchar_unlocked@plt>
   12664:	ldr	r0, [sp, #100]	; 0x64
   12668:	mov	r1, r9
   1266c:	bl	12f80 <__assert_fail@plt+0x1c08>
   12670:	movw	r1, #53651	; 0xd193
   12674:	mov	r0, #0
   12678:	mov	r2, #5
   1267c:	movt	r1, #1
   12680:	bl	11138 <dcgettext@plt>
   12684:	movw	r1, #55341	; 0xd82d
   12688:	mov	r2, r0
   1268c:	mov	r0, #1
   12690:	movt	r1, #1
   12694:	bl	1127c <__printf_chk@plt>
   12698:	b	1272c <__assert_fail@plt+0x13b4>
   1269c:	ldr	r5, [sp, #116]	; 0x74
   126a0:	cmp	r7, sl
   126a4:	bne	126c8 <__assert_fail@plt+0x1350>
   126a8:	movw	r0, #57746	; 0xe192
   126ac:	movt	r0, #2
   126b0:	ldrb	r0, [r0]
   126b4:	cmp	r0, #0
   126b8:	beq	126c8 <__assert_fail@plt+0x1350>
   126bc:	mov	r0, #1
   126c0:	str	r0, [sp, #40]	; 0x28
   126c4:	b	1271c <__assert_fail@plt+0x13a4>
   126c8:	cmp	r9, #0
   126cc:	beq	126d8 <__assert_fail@plt+0x1360>
   126d0:	mov	r0, #92	; 0x5c
   126d4:	bl	1136c <putchar_unlocked@plt>
   126d8:	ldr	r0, [sp, #100]	; 0x64
   126dc:	mov	r1, r9
   126e0:	bl	12f80 <__assert_fail@plt+0x1c08>
   126e4:	cmp	r7, sl
   126e8:	beq	12740 <__assert_fail@plt+0x13c8>
   126ec:	movw	r1, #53671	; 0xd1a7
   126f0:	mov	r0, #0
   126f4:	mov	r2, #5
   126f8:	movt	r1, #1
   126fc:	bl	11138 <dcgettext@plt>
   12700:	movw	r1, #55341	; 0xd82d
   12704:	mov	r2, r0
   12708:	mov	r0, #1
   1270c:	movt	r1, #1
   12710:	bl	1127c <__printf_chk@plt>
   12714:	str	r6, [sp, #80]	; 0x50
   12718:	str	r4, [sp, #48]	; 0x30
   1271c:	movw	r4, #57756	; 0xe19c
   12720:	sub	r6, fp, #120	; 0x78
   12724:	sub	r7, fp, #124	; 0x7c
   12728:	movt	r4, #2
   1272c:	movw	r9, #54061	; 0xd32d
   12730:	movt	r9, #1
   12734:	mov	r0, #1
   12738:	str	r0, [sp, #44]	; 0x2c
   1273c:	b	125f4 <__assert_fail@plt+0x127c>
   12740:	movw	r0, #57746	; 0xe192
   12744:	movw	r9, #54061	; 0xd32d
   12748:	mov	r1, #1
   1274c:	movt	r0, #2
   12750:	movt	r9, #1
   12754:	str	r1, [sp, #40]	; 0x28
   12758:	ldrb	r0, [r0]
   1275c:	cmp	r0, #0
   12760:	bne	12794 <__assert_fail@plt+0x141c>
   12764:	movw	r1, #53678	; 0xd1ae
   12768:	mov	r0, #0
   1276c:	mov	r2, #5
   12770:	movt	r1, #1
   12774:	bl	11138 <dcgettext@plt>
   12778:	movw	r1, #55341	; 0xd82d
   1277c:	mov	r2, r0
   12780:	mov	r0, #1
   12784:	movt	r1, #1
   12788:	str	r0, [sp, #40]	; 0x28
   1278c:	mov	r0, #1
   12790:	bl	1127c <__printf_chk@plt>
   12794:	movw	r4, #57756	; 0xe19c
   12798:	sub	r6, fp, #120	; 0x78
   1279c:	sub	r7, fp, #124	; 0x7c
   127a0:	movt	r4, #2
   127a4:	b	12734 <__assert_fail@plt+0x13bc>
   127a8:	movw	r9, #54061	; 0xd32d
   127ac:	movt	r9, #1
   127b0:	b	127b8 <__assert_fail@plt+0x1440>
   127b4:	mov	sl, r4
   127b8:	ldr	r0, [fp, #-120]	; 0xffffff88
   127bc:	bl	1924c <__assert_fail@plt+0x7ed4>
   127c0:	ldr	r5, [sp, #136]	; 0x88
   127c4:	mov	r0, r5
   127c8:	bl	11198 <ferror_unlocked@plt>
   127cc:	mov	r4, r0
   127d0:	cmp	r0, #0
   127d4:	ldr	r0, [sp, #68]	; 0x44
   127d8:	mov	r6, #0
   127dc:	mvneq	r6, #0
   127e0:	cmp	r0, #0
   127e4:	beq	1281c <__assert_fail@plt+0x14a4>
   127e8:	mov	r0, r5
   127ec:	bl	190a8 <__assert_fail@plt+0x7d30>
   127f0:	ldr	r7, [sp, #36]	; 0x24
   127f4:	ldr	r8, [sp, #104]	; 0x68
   127f8:	ldr	r5, [sp, #76]	; 0x4c
   127fc:	cmp	r4, #0
   12800:	bne	12830 <__assert_fail@plt+0x14b8>
   12804:	ldr	r4, [sp, #72]	; 0x48
   12808:	cmp	r0, #0
   1280c:	beq	12834 <__assert_fail@plt+0x14bc>
   12810:	bl	1124c <__errno_location@plt>
   12814:	ldr	r6, [r0]
   12818:	b	12834 <__assert_fail@plt+0x14bc>
   1281c:	mov	r0, r5
   12820:	bl	112f4 <clearerr_unlocked@plt>
   12824:	ldr	r7, [sp, #36]	; 0x24
   12828:	ldr	r8, [sp, #104]	; 0x68
   1282c:	ldr	r5, [sp, #76]	; 0x4c
   12830:	ldr	r4, [sp, #72]	; 0x48
   12834:	ldr	r3, [sp, #80]	; 0x50
   12838:	cmp	r6, #0
   1283c:	bmi	12888 <__assert_fail@plt+0x1510>
   12840:	movw	r4, #52374	; 0xcc96
   12844:	movt	r4, #1
   12848:	bne	12864 <__assert_fail@plt+0x14ec>
   1284c:	movw	r1, #53681	; 0xd1b1
   12850:	mov	r0, #0
   12854:	mov	r2, #5
   12858:	movt	r1, #1
   1285c:	bl	11138 <dcgettext@plt>
   12860:	mov	r4, r0
   12864:	mov	r0, #0
   12868:	mov	r1, #3
   1286c:	mov	r2, r8
   12870:	mov	r5, #0
   12874:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12878:	mov	r3, r0
   1287c:	mov	r0, #0
   12880:	mov	r1, r6
   12884:	b	12b7c <__assert_fail@plt+0x1804>
   12888:	ldr	r0, [sp, #44]	; 0x2c
   1288c:	tst	r0, #1
   12890:	beq	12b44 <__assert_fail@plt+0x17cc>
   12894:	movw	r0, #57744	; 0xe190
   12898:	ldr	r2, [sp, #84]	; 0x54
   1289c:	ldr	r6, [sp, #64]	; 0x40
   128a0:	movt	r0, #2
   128a4:	ldrb	r0, [r0]
   128a8:	cmp	r0, #0
   128ac:	bne	12ab0 <__assert_fail@plt+0x1738>
   128b0:	str	r5, [sp, #76]	; 0x4c
   128b4:	ldr	r5, [sp, #132]	; 0x84
   128b8:	ldr	r1, [sp, #128]	; 0x80
   128bc:	orrs	r0, r5, r1
   128c0:	beq	12944 <__assert_fail@plt+0x15cc>
   128c4:	cmp	r1, #0
   128c8:	mov	r3, r5
   128cc:	str	r1, [sp, #128]	; 0x80
   128d0:	str	r5, [sp, #132]	; 0x84
   128d4:	beq	128fc <__assert_fail@plt+0x1584>
   128d8:	movw	r4, #16960	; 0x4240
   128dc:	ldr	r0, [sp, #132]	; 0x84
   128e0:	ldr	r1, [sp, #128]	; 0x80
   128e4:	mov	r3, #0
   128e8:	movt	r4, #15
   128ec:	mov	r2, r4
   128f0:	bl	1c44c <__assert_fail@plt+0xb0d4>
   128f4:	add	r3, r2, r4
   128f8:	ldr	r4, [sp, #72]	; 0x48
   128fc:	movw	r1, #53743	; 0xd1ef
   12900:	movw	r2, #53786	; 0xd21a
   12904:	mov	r0, #5
   12908:	movt	r1, #1
   1290c:	movt	r2, #1
   12910:	str	r0, [sp]
   12914:	mov	r0, #0
   12918:	bl	11360 <dcngettext@plt>
   1291c:	mov	r2, r0
   12920:	ldr	r0, [sp, #132]	; 0x84
   12924:	mov	r1, #0
   12928:	str	r0, [sp]
   1292c:	ldr	r0, [sp, #128]	; 0x80
   12930:	str	r0, [sp, #4]
   12934:	mov	r0, #0
   12938:	bl	111b0 <error@plt>
   1293c:	ldr	r2, [sp, #84]	; 0x54
   12940:	ldr	r3, [sp, #80]	; 0x50
   12944:	ldr	r5, [sp, #76]	; 0x4c
   12948:	orrs	r0, r5, r4
   1294c:	beq	129c0 <__assert_fail@plt+0x1648>
   12950:	cmp	r4, #0
   12954:	mov	r3, r5
   12958:	beq	12980 <__assert_fail@plt+0x1608>
   1295c:	mov	r1, r4
   12960:	movw	r4, #16960	; 0x4240
   12964:	mov	r0, r5
   12968:	mov	r3, #0
   1296c:	movt	r4, #15
   12970:	mov	r2, r4
   12974:	bl	1c44c <__assert_fail@plt+0xb0d4>
   12978:	add	r3, r2, r4
   1297c:	ldr	r4, [sp, #72]	; 0x48
   12980:	movw	r1, #53831	; 0xd247
   12984:	movw	r2, #53875	; 0xd273
   12988:	mov	r0, #5
   1298c:	movt	r1, #1
   12990:	movt	r2, #1
   12994:	str	r0, [sp]
   12998:	mov	r0, #0
   1299c:	bl	11360 <dcngettext@plt>
   129a0:	mov	r2, r0
   129a4:	mov	r0, #0
   129a8:	mov	r1, #0
   129ac:	str	r5, [sp]
   129b0:	str	r4, [sp, #4]
   129b4:	bl	111b0 <error@plt>
   129b8:	ldr	r2, [sp, #84]	; 0x54
   129bc:	ldr	r3, [sp, #80]	; 0x50
   129c0:	ldr	r1, [sp, #48]	; 0x30
   129c4:	orrs	r0, r3, r1
   129c8:	beq	12a48 <__assert_fail@plt+0x16d0>
   129cc:	cmp	r1, #0
   129d0:	str	r1, [sp, #48]	; 0x30
   129d4:	str	r3, [sp, #80]	; 0x50
   129d8:	beq	12a00 <__assert_fail@plt+0x1688>
   129dc:	movw	r4, #16960	; 0x4240
   129e0:	ldr	r0, [sp, #80]	; 0x50
   129e4:	ldr	r1, [sp, #48]	; 0x30
   129e8:	mov	r3, #0
   129ec:	movt	r4, #15
   129f0:	mov	r2, r4
   129f4:	bl	1c44c <__assert_fail@plt+0xb0d4>
   129f8:	add	r3, r2, r4
   129fc:	ldr	r4, [sp, #72]	; 0x48
   12a00:	movw	r1, #53920	; 0xd2a0
   12a04:	movw	r2, #53966	; 0xd2ce
   12a08:	mov	r0, #5
   12a0c:	movt	r1, #1
   12a10:	movt	r2, #1
   12a14:	str	r0, [sp]
   12a18:	mov	r0, #0
   12a1c:	bl	11360 <dcngettext@plt>
   12a20:	mov	r2, r0
   12a24:	ldr	r0, [sp, #80]	; 0x50
   12a28:	mov	r1, #0
   12a2c:	str	r0, [sp]
   12a30:	ldr	r0, [sp, #48]	; 0x30
   12a34:	str	r0, [sp, #4]
   12a38:	mov	r0, #0
   12a3c:	bl	111b0 <error@plt>
   12a40:	ldr	r2, [sp, #84]	; 0x54
   12a44:	ldr	r3, [sp, #80]	; 0x50
   12a48:	movw	r0, #57747	; 0xe193
   12a4c:	ldr	r1, [sp, #40]	; 0x28
   12a50:	movt	r0, #2
   12a54:	ldrb	r0, [r0]
   12a58:	mvn	r0, r0
   12a5c:	orr	r0, r1, r0
   12a60:	tst	r0, #1
   12a64:	bne	12ab0 <__assert_fail@plt+0x1738>
   12a68:	movw	r1, #54013	; 0xd2fd
   12a6c:	mov	r0, #0
   12a70:	mov	r2, #5
   12a74:	movt	r1, #1
   12a78:	bl	11138 <dcgettext@plt>
   12a7c:	mov	r4, r0
   12a80:	mov	r0, #0
   12a84:	mov	r1, #3
   12a88:	mov	r2, r8
   12a8c:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12a90:	mov	r2, r4
   12a94:	ldr	r4, [sp, #72]	; 0x48
   12a98:	mov	r3, r0
   12a9c:	mov	r0, #0
   12aa0:	mov	r1, #0
   12aa4:	bl	111b0 <error@plt>
   12aa8:	ldr	r3, [sp, #80]	; 0x50
   12aac:	ldr	r2, [sp, #84]	; 0x54
   12ab0:	ldr	r1, [sp, #48]	; 0x30
   12ab4:	orr	r0, r5, r3
   12ab8:	mov	r5, #0
   12abc:	orr	r1, r4, r1
   12ac0:	orrs	r0, r0, r1
   12ac4:	ldr	r1, [sp, #40]	; 0x28
   12ac8:	movwne	r0, #1
   12acc:	mvn	r1, r1
   12ad0:	orr	r0, r1, r0
   12ad4:	tst	r0, #1
   12ad8:	bne	12b8c <__assert_fail@plt+0x1814>
   12adc:	ldr	r0, [sp, #124]	; 0x7c
   12ae0:	ldr	r1, [sp, #120]	; 0x78
   12ae4:	orr	r0, r0, r1
   12ae8:	movw	r1, #57748	; 0xe194
   12aec:	movt	r1, #2
   12af0:	clz	r0, r0
   12af4:	lsr	r0, r0, #5
   12af8:	ldrb	r1, [r1]
   12afc:	eor	r1, r1, #1
   12b00:	orr	r5, r0, r1
   12b04:	b	12b8c <__assert_fail@plt+0x1814>
   12b08:	bl	1124c <__errno_location@plt>
   12b0c:	ldr	r4, [r0]
   12b10:	mov	r0, #0
   12b14:	mov	r1, #3
   12b18:	mov	r2, r8
   12b1c:	mov	r5, #0
   12b20:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12b24:	movw	r2, #52374	; 0xcc96
   12b28:	mov	r3, r0
   12b2c:	mov	r0, #0
   12b30:	mov	r1, r4
   12b34:	movt	r2, #1
   12b38:	bl	111b0 <error@plt>
   12b3c:	ldr	r2, [sp, #84]	; 0x54
   12b40:	b	12b8c <__assert_fail@plt+0x1814>
   12b44:	movw	r1, #53696	; 0xd1c0
   12b48:	mov	r0, #0
   12b4c:	mov	r2, #5
   12b50:	mov	r5, #0
   12b54:	movt	r1, #1
   12b58:	bl	11138 <dcgettext@plt>
   12b5c:	mov	r4, r0
   12b60:	mov	r0, #0
   12b64:	mov	r1, #3
   12b68:	mov	r2, r8
   12b6c:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12b70:	mov	r3, r0
   12b74:	mov	r0, #0
   12b78:	mov	r1, #0
   12b7c:	mov	r2, r4
   12b80:	bl	111b0 <error@plt>
   12b84:	ldr	r2, [sp, #84]	; 0x54
   12b88:	ldr	r6, [sp, #64]	; 0x40
   12b8c:	and	r6, r6, r5
   12b90:	ldr	r5, [sp, #112]	; 0x70
   12b94:	ldr	r0, [sp, #108]	; 0x6c
   12b98:	add	r0, r0, #4
   12b9c:	cmp	r0, r2
   12ba0:	bcc	11c60 <__assert_fail@plt+0x8e8>
   12ba4:	movw	r0, #57760	; 0xe1a0
   12ba8:	movt	r0, #2
   12bac:	ldrb	r0, [r0]
   12bb0:	cmp	r0, #0
   12bb4:	beq	12bd0 <__assert_fail@plt+0x1858>
   12bb8:	movw	r0, #57720	; 0xe178
   12bbc:	movt	r0, #2
   12bc0:	ldr	r0, [r0]
   12bc4:	bl	190a8 <__assert_fail@plt+0x7d30>
   12bc8:	cmn	r0, #1
   12bcc:	beq	12dd4 <__assert_fail@plt+0x1a5c>
   12bd0:	mov	r0, #1
   12bd4:	bic	r0, r0, r6
   12bd8:	sub	sp, fp, #28
   12bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12be0:	movw	r1, #53575	; 0xd147
   12be4:	mov	r0, #0
   12be8:	mov	r2, #5
   12bec:	movt	r1, #1
   12bf0:	bl	11138 <dcgettext@plt>
   12bf4:	ldr	r2, [sp, #104]	; 0x68
   12bf8:	mov	r4, r0
   12bfc:	mov	r0, #0
   12c00:	mov	r1, #3
   12c04:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12c08:	mov	r3, r0
   12c0c:	mov	r0, #1
   12c10:	mov	r1, #0
   12c14:	mov	r2, r4
   12c18:	bl	111b0 <error@plt>
   12c1c:	cmn	r0, #3
   12c20:	bne	12c78 <__assert_fail@plt+0x1900>
   12c24:	movw	r0, #57620	; 0xe114
   12c28:	movw	r2, #52435	; 0xccd3
   12c2c:	mov	r1, #0
   12c30:	movw	r7, #52421	; 0xccc5
   12c34:	movt	r0, #2
   12c38:	movt	r2, #1
   12c3c:	str	r1, [sp, #8]
   12c40:	movw	r1, #52305	; 0xcc51
   12c44:	movt	r7, #1
   12c48:	movt	r1, #1
   12c4c:	ldr	r3, [r0]
   12c50:	movw	r0, #57724	; 0xe17c
   12c54:	str	r2, [sp, #4]
   12c58:	movw	r2, #52407	; 0xccb7
   12c5c:	str	r7, [sp]
   12c60:	movt	r0, #2
   12c64:	movt	r2, #1
   12c68:	ldr	r0, [r0]
   12c6c:	bl	1b214 <__assert_fail@plt+0x9e9c>
   12c70:	mov	r0, #0
   12c74:	bl	11210 <exit@plt>
   12c78:	cmn	r0, #2
   12c7c:	bne	12dcc <__assert_fail@plt+0x1a54>
   12c80:	mov	r0, #0
   12c84:	bl	11478 <__assert_fail@plt+0x100>
   12c88:	movw	r1, #52358	; 0xcc86
   12c8c:	mov	r0, #0
   12c90:	mov	r2, #5
   12c94:	movt	r1, #1
   12c98:	bl	11138 <dcgettext@plt>
   12c9c:	mov	r4, r0
   12ca0:	mov	r0, sl
   12ca4:	bl	1ad04 <__assert_fail@plt+0x998c>
   12ca8:	mov	r3, r0
   12cac:	mov	r0, #0
   12cb0:	mov	r1, #0
   12cb4:	mov	r2, r4
   12cb8:	bl	111b0 <error@plt>
   12cbc:	movw	r1, #52377	; 0xcc99
   12cc0:	mov	r0, #0
   12cc4:	mov	r2, #5
   12cc8:	movt	r1, #1
   12ccc:	bl	11138 <dcgettext@plt>
   12cd0:	mov	r2, r0
   12cd4:	mov	r0, #1
   12cd8:	mov	r1, #0
   12cdc:	bl	111b0 <error@plt>
   12ce0:	movw	r1, #52358	; 0xcc86
   12ce4:	mov	r0, #0
   12ce8:	mov	r2, #5
   12cec:	movt	r1, #1
   12cf0:	bl	11138 <dcgettext@plt>
   12cf4:	mov	r4, r0
   12cf8:	mov	r0, sl
   12cfc:	bl	1ad04 <__assert_fail@plt+0x998c>
   12d00:	mov	r3, r0
   12d04:	mov	r0, #0
   12d08:	mov	r1, #0
   12d0c:	mov	r2, r4
   12d10:	bl	111b0 <error@plt>
   12d14:	movw	r1, #52448	; 0xcce0
   12d18:	mov	r0, #0
   12d1c:	mov	r2, #5
   12d20:	movt	r1, #1
   12d24:	bl	11138 <dcgettext@plt>
   12d28:	mov	r4, r0
   12d2c:	movw	r0, #50875	; 0xc6bb
   12d30:	movt	r0, #1
   12d34:	bl	1ad04 <__assert_fail@plt+0x998c>
   12d38:	mov	r3, r0
   12d3c:	mov	r0, #512	; 0x200
   12d40:	str	r0, [sp]
   12d44:	b	12c0c <__assert_fail@plt+0x1894>
   12d48:	movw	r1, #52488	; 0xcd08
   12d4c:	movt	r1, #1
   12d50:	b	12db0 <__assert_fail@plt+0x1a38>
   12d54:	movw	r1, #52523	; 0xcd2b
   12d58:	movt	r1, #1
   12d5c:	b	12db0 <__assert_fail@plt+0x1a38>
   12d60:	movw	r1, #52583	; 0xcd67
   12d64:	movt	r1, #1
   12d68:	b	12db0 <__assert_fail@plt+0x1a38>
   12d6c:	movw	r1, #52640	; 0xcda0
   12d70:	movt	r1, #1
   12d74:	b	12db0 <__assert_fail@plt+0x1a38>
   12d78:	movw	r1, #52713	; 0xcde9
   12d7c:	movt	r1, #1
   12d80:	b	12db0 <__assert_fail@plt+0x1a38>
   12d84:	movw	r1, #52785	; 0xce31
   12d88:	movt	r1, #1
   12d8c:	b	12db0 <__assert_fail@plt+0x1a38>
   12d90:	movw	r1, #52849	; 0xce71
   12d94:	movt	r1, #1
   12d98:	b	12db0 <__assert_fail@plt+0x1a38>
   12d9c:	movw	r1, #52911	; 0xceaf
   12da0:	movt	r1, #1
   12da4:	b	12db0 <__assert_fail@plt+0x1a38>
   12da8:	movw	r1, #52974	; 0xceee
   12dac:	movt	r1, #1
   12db0:	mov	r0, #0
   12db4:	mov	r2, #5
   12db8:	bl	11138 <dcgettext@plt>
   12dbc:	mov	r2, r0
   12dc0:	mov	r0, #0
   12dc4:	mov	r1, #0
   12dc8:	bl	111b0 <error@plt>
   12dcc:	mov	r0, #1
   12dd0:	bl	11478 <__assert_fail@plt+0x100>
   12dd4:	bl	1124c <__errno_location@plt>
   12dd8:	movw	r1, #53038	; 0xcf2e
   12ddc:	ldr	r4, [r0]
   12de0:	mov	r0, #0
   12de4:	mov	r2, #5
   12de8:	movt	r1, #1
   12dec:	bl	11138 <dcgettext@plt>
   12df0:	mov	r2, r0
   12df4:	mov	r0, #1
   12df8:	mov	r1, r4
   12dfc:	bl	111b0 <error@plt>
   12e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e04:	add	fp, sp, #24
   12e08:	mov	r6, r1
   12e0c:	movw	r1, #54536	; 0xd508
   12e10:	mov	r4, r2
   12e14:	mov	r8, r0
   12e18:	movt	r1, #1
   12e1c:	bl	110d8 <strcmp@plt>
   12e20:	mov	r5, r0
   12e24:	mov	r0, #0
   12e28:	cmp	r5, #0
   12e2c:	strb	r0, [r4]
   12e30:	beq	12e80 <__assert_fail@plt+0x1b08>
   12e34:	movw	r1, #54042	; 0xd31a
   12e38:	mov	r0, r8
   12e3c:	movt	r1, #1
   12e40:	bl	191a0 <__assert_fail@plt+0x7e28>
   12e44:	mov	r7, r0
   12e48:	cmp	r0, #0
   12e4c:	bne	12e9c <__assert_fail@plt+0x1b24>
   12e50:	movw	r0, #57747	; 0xe193
   12e54:	movt	r0, #2
   12e58:	ldrb	r5, [r0]
   12e5c:	bl	1124c <__errno_location@plt>
   12e60:	cmp	r5, #1
   12e64:	bne	12f48 <__assert_fail@plt+0x1bd0>
   12e68:	ldr	r1, [r0]
   12e6c:	cmp	r1, #2
   12e70:	bne	12f48 <__assert_fail@plt+0x1bd0>
   12e74:	mov	r5, #1
   12e78:	strb	r5, [r4]
   12e7c:	b	12f78 <__assert_fail@plt+0x1c00>
   12e80:	movw	r0, #57760	; 0xe1a0
   12e84:	mov	r1, #1
   12e88:	movt	r0, #2
   12e8c:	strb	r1, [r0]
   12e90:	movw	r0, #57720	; 0xe178
   12e94:	movt	r0, #2
   12e98:	ldr	r7, [r0]
   12e9c:	mov	r0, r7
   12ea0:	mov	r1, #2
   12ea4:	bl	1906c <__assert_fail@plt+0x7cf4>
   12ea8:	movw	r0, #57736	; 0xe188
   12eac:	movt	r0, #2
   12eb0:	ldrd	r0, [r0]
   12eb4:	lsr	r0, r0, #3
   12eb8:	orr	r2, r0, r1, lsl #29
   12ebc:	mov	r0, r7
   12ec0:	mov	r1, r6
   12ec4:	bl	18e74 <__assert_fail@plt+0x7afc>
   12ec8:	cmp	r0, #0
   12ecc:	beq	12edc <__assert_fail@plt+0x1b64>
   12ed0:	bl	1124c <__errno_location@plt>
   12ed4:	ldr	r6, [r0]
   12ed8:	b	12ee0 <__assert_fail@plt+0x1b68>
   12edc:	mov	r6, #0
   12ee0:	mov	r0, r7
   12ee4:	cmp	r5, #0
   12ee8:	beq	12f0c <__assert_fail@plt+0x1b94>
   12eec:	bl	190a8 <__assert_fail@plt+0x7d30>
   12ef0:	cmp	r6, #0
   12ef4:	bne	12f10 <__assert_fail@plt+0x1b98>
   12ef8:	cmp	r0, #0
   12efc:	beq	12f10 <__assert_fail@plt+0x1b98>
   12f00:	bl	1124c <__errno_location@plt>
   12f04:	ldr	r6, [r0]
   12f08:	b	12f10 <__assert_fail@plt+0x1b98>
   12f0c:	bl	112f4 <clearerr_unlocked@plt>
   12f10:	cmp	r6, #0
   12f14:	beq	12f40 <__assert_fail@plt+0x1bc8>
   12f18:	mov	r0, #0
   12f1c:	mov	r1, #3
   12f20:	mov	r2, r8
   12f24:	mov	r5, #0
   12f28:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12f2c:	movw	r2, #52374	; 0xcc96
   12f30:	mov	r3, r0
   12f34:	mov	r0, #0
   12f38:	mov	r1, r6
   12f3c:	b	12f70 <__assert_fail@plt+0x1bf8>
   12f40:	mov	r5, #1
   12f44:	b	12f78 <__assert_fail@plt+0x1c00>
   12f48:	ldr	r4, [r0]
   12f4c:	mov	r0, #0
   12f50:	mov	r1, #3
   12f54:	mov	r2, r8
   12f58:	mov	r5, #0
   12f5c:	bl	1ab70 <__assert_fail@plt+0x97f8>
   12f60:	movw	r2, #52374	; 0xcc96
   12f64:	mov	r3, r0
   12f68:	mov	r0, #0
   12f6c:	mov	r1, r4
   12f70:	movt	r2, #1
   12f74:	bl	111b0 <error@plt>
   12f78:	mov	r0, r5
   12f7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f84:	add	fp, sp, #24
   12f88:	mov	r4, r0
   12f8c:	cmp	r1, #0
   12f90:	beq	13014 <__assert_fail@plt+0x1c9c>
   12f94:	movw	r5, #57724	; 0xe17c
   12f98:	movw	r8, #54038	; 0xd316
   12f9c:	movw	r6, #54041	; 0xd319
   12fa0:	movw	r7, #54044	; 0xd31c
   12fa4:	movt	r5, #2
   12fa8:	movt	r8, #1
   12fac:	movt	r6, #1
   12fb0:	movt	r7, #1
   12fb4:	ldrb	r0, [r4]
   12fb8:	cmp	r0, #12
   12fbc:	ble	12fdc <__assert_fail@plt+0x1c64>
   12fc0:	cmp	r0, #13
   12fc4:	beq	12ff0 <__assert_fail@plt+0x1c78>
   12fc8:	cmp	r0, #92	; 0x5c
   12fcc:	bne	13008 <__assert_fail@plt+0x1c90>
   12fd0:	ldr	r1, [r5]
   12fd4:	mov	r0, r7
   12fd8:	b	12ff8 <__assert_fail@plt+0x1c80>
   12fdc:	cmp	r0, #10
   12fe0:	bne	13000 <__assert_fail@plt+0x1c88>
   12fe4:	ldr	r1, [r5]
   12fe8:	mov	r0, r8
   12fec:	b	12ff8 <__assert_fail@plt+0x1c80>
   12ff0:	ldr	r1, [r5]
   12ff4:	mov	r0, r6
   12ff8:	bl	110c0 <fputs_unlocked@plt>
   12ffc:	b	1300c <__assert_fail@plt+0x1c94>
   13000:	cmp	r0, #0
   13004:	beq	1302c <__assert_fail@plt+0x1cb4>
   13008:	bl	1136c <putchar_unlocked@plt>
   1300c:	add	r4, r4, #1
   13010:	b	12fb4 <__assert_fail@plt+0x1c3c>
   13014:	movw	r0, #57724	; 0xe17c
   13018:	movt	r0, #2
   1301c:	ldr	r1, [r0]
   13020:	mov	r0, r4
   13024:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13028:	b	110c0 <fputs_unlocked@plt>
   1302c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13030:	push	{r4, r5, fp, lr}
   13034:	add	fp, sp, #8
   13038:	mov	r4, r0
   1303c:	movw	r0, #57756	; 0xe19c
   13040:	movt	r0, #2
   13044:	ldr	r5, [r0]
   13048:	cmp	r5, #0
   1304c:	beq	13084 <__assert_fail@plt+0x1d0c>
   13050:	bl	11204 <__ctype_b_loc@plt>
   13054:	ldr	r1, [r0]
   13058:	mov	r0, #0
   1305c:	mov	r2, #0
   13060:	ldrb	r3, [r4, r2]
   13064:	add	r3, r1, r3, lsl #1
   13068:	ldrb	r3, [r3, #1]
   1306c:	tst	r3, #16
   13070:	beq	13090 <__assert_fail@plt+0x1d18>
   13074:	add	r2, r2, #1
   13078:	cmp	r2, r5
   1307c:	bcc	13060 <__assert_fail@plt+0x1ce8>
   13080:	add	r4, r4, r2
   13084:	ldrb	r0, [r4]
   13088:	clz	r0, r0
   1308c:	lsr	r0, r0, #5
   13090:	pop	{r4, r5, fp, pc}
   13094:	push	{r4, sl, fp, lr}
   13098:	add	fp, sp, #8
   1309c:	cmp	r1, #0
   130a0:	mov	lr, r0
   130a4:	beq	13114 <__assert_fail@plt+0x1d9c>
   130a8:	sub	ip, r1, #1
   130ac:	mov	r3, #0
   130b0:	mov	lr, r0
   130b4:	ldrb	r2, [r0, r3]
   130b8:	cmp	r2, #92	; 0x5c
   130bc:	beq	130cc <__assert_fail@plt+0x1d54>
   130c0:	cmp	r2, #0
   130c4:	bne	13104 <__assert_fail@plt+0x1d8c>
   130c8:	b	13128 <__assert_fail@plt+0x1db0>
   130cc:	cmp	r3, ip
   130d0:	beq	13128 <__assert_fail@plt+0x1db0>
   130d4:	add	r3, r3, #1
   130d8:	ldrb	r4, [r0, r3]
   130dc:	cmp	r4, #92	; 0x5c
   130e0:	beq	13100 <__assert_fail@plt+0x1d88>
   130e4:	mov	r2, #10
   130e8:	cmp	r4, #110	; 0x6e
   130ec:	beq	13104 <__assert_fail@plt+0x1d8c>
   130f0:	cmp	r4, #114	; 0x72
   130f4:	bne	13128 <__assert_fail@plt+0x1db0>
   130f8:	mov	r2, #13
   130fc:	b	13104 <__assert_fail@plt+0x1d8c>
   13100:	mov	r2, #92	; 0x5c
   13104:	add	r3, r3, #1
   13108:	strb	r2, [lr], #1
   1310c:	cmp	r3, r1
   13110:	bcc	130b4 <__assert_fail@plt+0x1d3c>
   13114:	add	r1, r0, r1
   13118:	cmp	lr, r1
   1311c:	movcc	r1, #0
   13120:	strbcc	r1, [lr]
   13124:	pop	{r4, sl, fp, pc}
   13128:	mov	r0, #0
   1312c:	pop	{r4, sl, fp, pc}
   13130:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13134:	add	fp, sp, #24
   13138:	mov	r8, r1
   1313c:	mov	r9, r0
   13140:	add	r0, r0, #64	; 0x40
   13144:	mov	r1, #0
   13148:	mov	r2, #176	; 0xb0
   1314c:	mov	r6, #0
   13150:	bl	11270 <memset@plt>
   13154:	movw	ip, #54368	; 0xd460
   13158:	mov	r1, r9
   1315c:	movt	ip, #1
   13160:	ldm	ip!, {r0, r2, r3, r5, r7}
   13164:	stmia	r1!, {r0, r2, r3, r5, r7}
   13168:	ldm	ip!, {r0, r2, r3, r5, r7}
   1316c:	stmia	r1!, {r0, r2, r3, r5, r7}
   13170:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   13174:	stm	r1, {r0, r2, r3, r4, r5, r7}
   13178:	mov	r0, r8
   1317c:	mov	r2, r9
   13180:	ldr	r1, [r0, r6]!
   13184:	ldr	r3, [r2, r6]!
   13188:	add	r6, r6, #8
   1318c:	cmp	r6, #64	; 0x40
   13190:	ldr	r0, [r0, #4]
   13194:	eor	r1, r3, r1
   13198:	str	r1, [r2]
   1319c:	ldr	r1, [r2, #4]
   131a0:	eor	r0, r1, r0
   131a4:	str	r0, [r2, #4]
   131a8:	bne	13178 <__assert_fail@plt+0x1e00>
   131ac:	ldrb	r0, [r8]
   131b0:	str	r0, [r9, #228]	; 0xe4
   131b4:	mov	r0, #0
   131b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   131bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131c0:	add	fp, sp, #28
   131c4:	sub	sp, sp, #68	; 0x44
   131c8:	mov	r8, r1
   131cc:	sub	r1, r1, #1
   131d0:	mov	sl, r0
   131d4:	mvn	r0, #0
   131d8:	cmp	r1, #63	; 0x3f
   131dc:	bhi	13284 <__assert_fail@plt+0x1f0c>
   131e0:	vmov.i32	q8, #0	; 0x00000000
   131e4:	add	r9, sp, #4
   131e8:	mov	r1, #0
   131ec:	mov	r2, #176	; 0xb0
   131f0:	mov	r7, #0
   131f4:	add	r0, r9, #4
   131f8:	vst1.32	{d16-d17}, [r0]
   131fc:	add	r0, r9, #20
   13200:	vst1.32	{d16-d17}, [r0]
   13204:	add	r0, r9, #36	; 0x24
   13208:	vst1.32	{d16-d17}, [r0]
   1320c:	add	r0, r9, #48	; 0x30
   13210:	vst1.32	{d16-d17}, [r0]
   13214:	mov	r0, #1
   13218:	strb	r0, [sp, #7]
   1321c:	mov	r0, #256	; 0x100
   13220:	strh	r0, [sp, #5]
   13224:	add	r0, sl, #64	; 0x40
   13228:	strb	r8, [sp, #4]
   1322c:	bl	11270 <memset@plt>
   13230:	movw	ip, #54368	; 0xd460
   13234:	mov	r1, sl
   13238:	movt	ip, #1
   1323c:	ldm	ip!, {r0, r2, r3, r5, r6}
   13240:	stmia	r1!, {r0, r2, r3, r5, r6}
   13244:	ldm	ip!, {r0, r2, r3, r5, r6}
   13248:	stmia	r1!, {r0, r2, r3, r5, r6}
   1324c:	ldm	ip, {r0, r2, r3, r4, r5, r6}
   13250:	stm	r1, {r0, r2, r3, r4, r5, r6}
   13254:	add	r0, sl, r7
   13258:	add	r1, r9, r7
   1325c:	add	r7, r7, #16
   13260:	vld1.8	{d16-d17}, [r1]
   13264:	vld1.64	{d18-d19}, [r0]
   13268:	cmp	r7, #64	; 0x40
   1326c:	veor	q8, q9, q8
   13270:	vst1.64	{d16-d17}, [r0]
   13274:	bne	13254 <__assert_fail@plt+0x1edc>
   13278:	uxtb	r0, r8
   1327c:	str	r0, [sl, #228]	; 0xe4
   13280:	mov	r0, #0
   13284:	sub	sp, fp, #28
   13288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1328c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13290:	add	fp, sp, #28
   13294:	sub	sp, sp, #204	; 0xcc
   13298:	mov	r9, r0
   1329c:	sub	r0, r1, #1
   132a0:	mvn	r6, #0
   132a4:	cmp	r0, #63	; 0x3f
   132a8:	bhi	133c8 <__assert_fail@plt+0x2050>
   132ac:	cmp	r2, #0
   132b0:	beq	133c8 <__assert_fail@plt+0x2050>
   132b4:	sub	r0, r3, #1
   132b8:	cmp	r0, #63	; 0x3f
   132bc:	bhi	133c8 <__assert_fail@plt+0x2050>
   132c0:	vmov.i32	q8, #0	; 0x00000000
   132c4:	sub	r8, fp, #92	; 0x5c
   132c8:	str	r2, [sp]
   132cc:	mov	sl, r1
   132d0:	mov	r2, #176	; 0xb0
   132d4:	str	r3, [sp, #4]
   132d8:	mov	r5, #0
   132dc:	add	r0, r8, #4
   132e0:	vst1.32	{d16-d17}, [r0]
   132e4:	add	r0, r8, #20
   132e8:	vst1.32	{d16-d17}, [r0]
   132ec:	add	r0, r8, #36	; 0x24
   132f0:	vst1.32	{d16-d17}, [r0]
   132f4:	add	r0, r8, #48	; 0x30
   132f8:	vst1.32	{d16-d17}, [r0]
   132fc:	movw	r0, #257	; 0x101
   13300:	strh	r0, [fp, #-90]	; 0xffffffa6
   13304:	strb	r3, [fp, #-91]	; 0xffffffa5
   13308:	strb	r1, [fp, #-92]	; 0xffffffa4
   1330c:	add	r0, r9, #64	; 0x40
   13310:	mov	r1, #0
   13314:	bl	11270 <memset@plt>
   13318:	movw	ip, #54368	; 0xd460
   1331c:	mov	r1, r9
   13320:	movt	ip, #1
   13324:	ldm	ip!, {r0, r2, r3, r6, r7}
   13328:	stmia	r1!, {r0, r2, r3, r6, r7}
   1332c:	ldm	ip!, {r0, r2, r3, r6, r7}
   13330:	stmia	r1!, {r0, r2, r3, r6, r7}
   13334:	ldm	ip, {r0, r2, r3, r4, r6, r7}
   13338:	stm	r1, {r0, r2, r3, r4, r6, r7}
   1333c:	add	r0, r9, r5
   13340:	add	r1, r8, r5
   13344:	add	r5, r5, #16
   13348:	vld1.8	{d16-d17}, [r1]
   1334c:	vld1.64	{d18-d19}, [r0]
   13350:	cmp	r5, #64	; 0x40
   13354:	veor	q8, q9, q8
   13358:	vst1.64	{d16-d17}, [r0]
   1335c:	bne	1333c <__assert_fail@plt+0x1fc4>
   13360:	ldr	r4, [sp, #4]
   13364:	uxtb	r0, sl
   13368:	add	r7, sp, #8
   1336c:	mov	r1, #0
   13370:	mov	r6, #0
   13374:	str	r0, [r9, #228]	; 0xe4
   13378:	cmp	r4, #127	; 0x7f
   1337c:	rsb	r2, r4, #128	; 0x80
   13380:	add	r0, r7, r4
   13384:	movwhi	r2, #0
   13388:	bl	11270 <memset@plt>
   1338c:	ldr	r1, [sp]
   13390:	mov	r0, r7
   13394:	mov	r2, r4
   13398:	bl	11120 <memcpy@plt>
   1339c:	mov	r0, r9
   133a0:	mov	r1, r7
   133a4:	mov	r2, #128	; 0x80
   133a8:	bl	133d4 <__assert_fail@plt+0x205c>
   133ac:	movw	r0, #54432	; 0xd4a0
   133b0:	mov	r1, #0
   133b4:	mov	r2, #128	; 0x80
   133b8:	movt	r0, #1
   133bc:	ldr	r3, [r0]
   133c0:	mov	r0, r7
   133c4:	blx	r3
   133c8:	mov	r0, r6
   133cc:	sub	sp, fp, #28
   133d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133d4:	cmp	r2, #0
   133d8:	beq	134f4 <__assert_fail@plt+0x217c>
   133dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e0:	add	fp, sp, #28
   133e4:	sub	sp, sp, #4
   133e8:	mov	r5, r1
   133ec:	ldr	r1, [r0, #224]	; 0xe0
   133f0:	mov	sl, r2
   133f4:	mov	r8, r0
   133f8:	rsb	r9, r1, #128	; 0x80
   133fc:	cmp	r9, r2
   13400:	bcs	134c8 <__assert_fail@plt+0x2150>
   13404:	mov	r0, #0
   13408:	add	r4, r8, #96	; 0x60
   1340c:	str	r1, [sp]
   13410:	mov	r2, r9
   13414:	add	r7, r8, #64	; 0x40
   13418:	add	r6, r8, #72	; 0x48
   1341c:	str	r0, [r8, #224]	; 0xe0
   13420:	add	r0, r4, r1
   13424:	mov	r1, r5
   13428:	bl	11120 <memcpy@plt>
   1342c:	ldrd	r0, [r7]
   13430:	adds	r0, r0, #128	; 0x80
   13434:	adcs	r1, r1, #0
   13438:	strd	r0, [r7]
   1343c:	ldrd	r0, [r6]
   13440:	adcs	r0, r0, #0
   13444:	adc	r1, r1, #0
   13448:	strd	r0, [r6]
   1344c:	mov	r0, r8
   13450:	mov	r1, r4
   13454:	bl	13500 <__assert_fail@plt+0x2188>
   13458:	sub	r4, sl, r9
   1345c:	add	r5, r5, r9
   13460:	cmp	r4, #129	; 0x81
   13464:	bcc	134c4 <__assert_fail@plt+0x214c>
   13468:	ldr	r0, [sp]
   1346c:	add	r9, r0, sl
   13470:	movw	r0, #257	; 0x101
   13474:	sub	r0, r9, r0
   13478:	bic	sl, r0, #127	; 0x7f
   1347c:	ldrd	r0, [r7]
   13480:	adds	r0, r0, #128	; 0x80
   13484:	adcs	r1, r1, #0
   13488:	strd	r0, [r7]
   1348c:	ldrd	r0, [r6]
   13490:	adcs	r0, r0, #0
   13494:	adc	r1, r1, #0
   13498:	strd	r0, [r6]
   1349c:	mov	r0, r8
   134a0:	mov	r1, r5
   134a4:	bl	13500 <__assert_fail@plt+0x2188>
   134a8:	sub	r4, r4, #128	; 0x80
   134ac:	add	r5, r5, #128	; 0x80
   134b0:	cmp	r4, #128	; 0x80
   134b4:	bhi	1347c <__assert_fail@plt+0x2104>
   134b8:	sub	r0, r9, sl
   134bc:	sub	sl, r0, #256	; 0x100
   134c0:	b	134c8 <__assert_fail@plt+0x2150>
   134c4:	mov	sl, r4
   134c8:	ldr	r0, [r8, #224]	; 0xe0
   134cc:	mov	r1, r5
   134d0:	mov	r2, sl
   134d4:	add	r0, r8, r0
   134d8:	add	r0, r0, #96	; 0x60
   134dc:	bl	11120 <memcpy@plt>
   134e0:	ldr	r0, [r8, #224]	; 0xe0
   134e4:	add	r0, r0, sl
   134e8:	str	r0, [r8, #224]	; 0xe0
   134ec:	sub	sp, fp, #28
   134f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134f4:	mov	r0, #0
   134f8:	bx	lr
   134fc:	nop	{0}
   13500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13504:	add	fp, sp, #28
   13508:	sub	sp, sp, #516	; 0x204
   1350c:	mov	r9, r0
   13510:	sub	r0, fp, #160	; 0xa0
   13514:	mov	r2, #128	; 0x80
   13518:	bl	11120 <memcpy@plt>
   1351c:	add	r1, sp, #256	; 0x100
   13520:	mov	r0, r1
   13524:	mov	ip, r1
   13528:	mov	r1, r9
   1352c:	ldm	r1!, {r2, r3, r5, r6, r7}
   13530:	stmia	r0!, {r2, r3, r5, r6, r7}
   13534:	ldm	r1!, {r2, r3, r5, r6, r7}
   13538:	stmia	r0!, {r2, r3, r5, r6, r7}
   1353c:	add	r2, pc, #1004	; 0x3ec
   13540:	vld1.64	{d16-d17}, [r2]
   13544:	ldm	r1, {r2, r3, r4, r5, r6, r7}
   13548:	stm	r0, {r2, r3, r4, r5, r6, r7}
   1354c:	add	r0, ip, #80	; 0x50
   13550:	movw	r2, #26764	; 0x688c
   13554:	str	r9, [sp, #156]	; 0x9c
   13558:	movt	r2, #39685	; 0x9b05
   1355c:	vst1.64	{d16-d17}, [r0]
   13560:	ldr	r0, [sp, #260]	; 0x104
   13564:	ldr	r1, [sp, #264]	; 0x108
   13568:	ldr	r6, [sp, #296]	; 0x128
   1356c:	ldr	r7, [sp, #300]	; 0x12c
   13570:	ldr	r3, [sp, #268]	; 0x10c
   13574:	ldr	r8, [r9, #68]	; 0x44
   13578:	ldr	ip, [sp, #256]	; 0x100
   1357c:	str	r0, [sp, #252]	; 0xfc
   13580:	ldr	r0, [fp, #-144]	; 0xffffff70
   13584:	adds	r1, r6, r1
   13588:	adc	r3, r7, r3
   1358c:	adds	r5, r1, r0
   13590:	str	r0, [sp, #188]	; 0xbc
   13594:	ldr	r0, [fp, #-140]	; 0xffffff74
   13598:	ldr	r1, [r9, #76]	; 0x4c
   1359c:	adc	sl, r3, r0
   135a0:	str	r0, [sp, #184]	; 0xb8
   135a4:	ldr	r0, [r9, #64]	; 0x40
   135a8:	movw	r3, #44677	; 0xae85
   135ac:	eor	r1, r1, sl
   135b0:	movt	r3, #47975	; 0xbb67
   135b4:	eor	r1, r1, r2
   135b8:	movw	r2, #27679	; 0x6c1f
   135bc:	movt	r2, #11070	; 0x2b3e
   135c0:	str	r0, [sp, #232]	; 0xe8
   135c4:	ldr	r0, [r9, #72]	; 0x48
   135c8:	eor	r0, r0, r5
   135cc:	eor	r0, r0, r2
   135d0:	movw	r2, #42811	; 0xa73b
   135d4:	movt	r2, #33994	; 0x84ca
   135d8:	adds	r2, r1, r2
   135dc:	adc	r3, r0, r3
   135e0:	eor	r6, r2, r6
   135e4:	lsl	r4, r6, #8
   135e8:	eor	r7, r3, r7
   135ec:	lsr	r6, r6, #24
   135f0:	orr	r4, r4, r7, lsr #24
   135f4:	orr	r6, r6, r7, lsl #8
   135f8:	ldr	r7, [fp, #-136]	; 0xffffff78
   135fc:	adds	r5, r7, r5
   13600:	ldr	r7, [fp, #-132]	; 0xffffff7c
   13604:	adc	r7, r7, sl
   13608:	adds	r5, r5, r6
   1360c:	adc	r7, r7, r4
   13610:	eor	r1, r5, r1
   13614:	str	r5, [sp, #236]	; 0xec
   13618:	lsl	r5, r1, #16
   1361c:	eor	r0, r7, r0
   13620:	lsr	r1, r1, #16
   13624:	str	r7, [sp, #248]	; 0xf8
   13628:	ldr	r7, [fp, #-160]	; 0xffffff60
   1362c:	orr	r5, r5, r0, lsr #16
   13630:	orr	r0, r1, r0, lsl #16
   13634:	adds	r1, r0, r2
   13638:	str	r0, [sp, #244]	; 0xf4
   1363c:	str	r5, [sp, #240]	; 0xf0
   13640:	adc	r0, r5, r3
   13644:	str	r1, [sp, #148]	; 0x94
   13648:	eor	r1, r1, r6
   1364c:	ldr	r3, [sp, #252]	; 0xfc
   13650:	ldr	r6, [fp, #-156]	; 0xffffff64
   13654:	ldr	r5, [fp, #-152]	; 0xffffff68
   13658:	str	r0, [sp, #152]	; 0x98
   1365c:	eor	r0, r0, r4
   13660:	ldr	r4, [sp, #232]	; 0xe8
   13664:	lsl	r2, r0, #1
   13668:	orr	r9, r2, r1, lsr #31
   1366c:	lsl	r1, r1, #1
   13670:	ldr	r2, [sp, #292]	; 0x124
   13674:	orr	lr, r1, r0, lsr #31
   13678:	ldr	r0, [sp, #288]	; 0x120
   1367c:	str	r5, [sp, #220]	; 0xdc
   13680:	str	r9, [sp, #196]	; 0xc4
   13684:	str	lr, [sp, #200]	; 0xc8
   13688:	adds	r1, r0, ip
   1368c:	ldr	ip, [fp, #-148]	; 0xffffff6c
   13690:	adc	r3, r2, r3
   13694:	adds	r1, r1, r7
   13698:	adc	r3, r3, r6
   1369c:	movw	r6, #21119	; 0x527f
   136a0:	movt	r6, #20750	; 0x510e
   136a4:	eor	r7, r8, r3
   136a8:	str	ip, [sp, #204]	; 0xcc
   136ac:	eor	r8, r7, r6
   136b0:	movw	r6, #33489	; 0x82d1
   136b4:	eor	r7, r4, r1
   136b8:	movt	r6, #44518	; 0xade6
   136bc:	eor	r7, r7, r6
   136c0:	movw	r6, #51464	; 0xc908
   136c4:	movt	r6, #62396	; 0xf3bc
   136c8:	adds	sl, r8, r6
   136cc:	movw	r6, #58983	; 0xe667
   136d0:	movt	r6, #27145	; 0x6a09
   136d4:	eor	r0, sl, r0
   136d8:	lsl	r4, r0, #8
   136dc:	lsr	r0, r0, #24
   136e0:	adc	r6, r7, r6
   136e4:	eor	r2, r6, r2
   136e8:	orr	r4, r4, r2, lsr #24
   136ec:	orr	r2, r0, r2, lsl #8
   136f0:	adds	r0, r5, r1
   136f4:	adc	r1, ip, r3
   136f8:	ldr	r3, [sp, #156]	; 0x9c
   136fc:	adds	r0, r0, r2
   13700:	adc	r1, r1, r4
   13704:	ldr	r5, [r3, #80]	; 0x50
   13708:	ldr	ip, [r3, #92]	; 0x5c
   1370c:	str	r5, [sp, #252]	; 0xfc
   13710:	ldr	r5, [r3, #84]	; 0x54
   13714:	str	r5, [sp, #224]	; 0xe0
   13718:	ldr	r5, [r3, #88]	; 0x58
   1371c:	adds	r3, lr, r0
   13720:	str	r0, [sp, #256]	; 0x100
   13724:	eor	r0, r0, r8
   13728:	str	r1, [sp, #260]	; 0x104
   1372c:	ldr	r8, [fp, #-100]	; 0xffffff9c
   13730:	str	r3, [sp, #232]	; 0xe8
   13734:	adc	r3, r9, r1
   13738:	eor	r1, r1, r7
   1373c:	lsl	r7, r0, #16
   13740:	lsr	r0, r0, #16
   13744:	ldr	r9, [fp, #-116]	; 0xffffff8c
   13748:	orr	r0, r0, r1, lsl #16
   1374c:	orr	r7, r7, r1, lsr #16
   13750:	str	r3, [sp, #136]	; 0x88
   13754:	adds	r3, r0, sl
   13758:	mov	lr, r0
   1375c:	str	r0, [sp, #180]	; 0xb4
   13760:	str	r7, [sp, #176]	; 0xb0
   13764:	adc	r1, r7, r6
   13768:	str	r3, [sp, #228]	; 0xe4
   1376c:	str	r9, [sp, #212]	; 0xd4
   13770:	eor	r0, r1, r4
   13774:	mov	r4, r1
   13778:	str	r1, [sp, #96]	; 0x60
   1377c:	eor	r1, r3, r2
   13780:	lsl	r2, r0, #1
   13784:	orr	r2, r2, r1, lsr #31
   13788:	lsl	r1, r1, #1
   1378c:	orr	r1, r1, r0, lsr #31
   13790:	movw	r0, #52505	; 0xcd19
   13794:	movt	r0, #23520	; 0x5be0
   13798:	str	r2, [sp, #104]	; 0x68
   1379c:	str	r1, [sp, #100]	; 0x64
   137a0:	eor	r6, ip, r0
   137a4:	movw	r0, #8569	; 0x2179
   137a8:	movt	r0, #4990	; 0x137e
   137ac:	str	r6, [sp, #380]	; 0x17c
   137b0:	str	r6, [sp, #132]	; 0x84
   137b4:	eor	r0, r5, r0
   137b8:	movw	r5, #55723	; 0xd9ab
   137bc:	str	r0, [sp, #128]	; 0x80
   137c0:	str	r0, [sp, #376]	; 0x178
   137c4:	ldr	r0, [sp, #236]	; 0xec
   137c8:	movt	r5, #8067	; 0x1f83
   137cc:	str	r0, [sp, #264]	; 0x108
   137d0:	ldr	r0, [sp, #248]	; 0xf8
   137d4:	str	r0, [sp, #268]	; 0x10c
   137d8:	ldr	r0, [sp, #244]	; 0xf4
   137dc:	str	lr, [sp, #352]	; 0x160
   137e0:	str	r7, [sp, #356]	; 0x164
   137e4:	ldr	lr, [fp, #-120]	; 0xffffff88
   137e8:	str	r0, [sp, #360]	; 0x168
   137ec:	ldr	r0, [sp, #240]	; 0xf0
   137f0:	str	lr, [sp, #216]	; 0xd8
   137f4:	str	r0, [sp, #364]	; 0x16c
   137f8:	ldr	r0, [sp, #148]	; 0x94
   137fc:	str	r3, [sp, #320]	; 0x140
   13800:	ldr	r3, [fp, #-124]	; 0xffffff84
   13804:	str	r0, [sp, #328]	; 0x148
   13808:	ldr	r0, [sp, #152]	; 0x98
   1380c:	str	r4, [sp, #324]	; 0x144
   13810:	str	r3, [sp, #168]	; 0xa8
   13814:	str	r0, [sp, #332]	; 0x14c
   13818:	str	r2, [sp, #292]	; 0x124
   1381c:	str	r1, [sp, #288]	; 0x120
   13820:	add	r2, sp, #272	; 0x110
   13824:	ldm	r2, {r0, r1, r2}
   13828:	str	r2, [sp, #120]	; 0x78
   1382c:	ldr	r2, [sp, #284]	; 0x11c
   13830:	ldr	r6, [sp, #304]	; 0x130
   13834:	ldr	r4, [sp, #308]	; 0x134
   13838:	str	r2, [sp, #116]	; 0x74
   1383c:	ldr	r2, [fp, #-128]	; 0xffffff80
   13840:	adds	r0, r6, r0
   13844:	adc	r1, r4, r1
   13848:	adds	r0, r0, r2
   1384c:	str	r2, [sp, #172]	; 0xac
   13850:	ldr	r2, [sp, #224]	; 0xe0
   13854:	str	r8, [sp, #224]	; 0xe0
   13858:	adc	r1, r1, r3
   1385c:	eor	r3, r2, r1
   13860:	ldr	r2, [sp, #252]	; 0xfc
   13864:	eor	ip, r3, r5
   13868:	eor	r3, r2, r0
   1386c:	movw	r2, #48491	; 0xbd6b
   13870:	movt	r2, #64321	; 0xfb41
   13874:	eor	r2, r3, r2
   13878:	movw	r3, #63531	; 0xf82b
   1387c:	movt	r3, #65172	; 0xfe94
   13880:	adds	r5, ip, r3
   13884:	movw	r3, #62322	; 0xf372
   13888:	movt	r3, #15470	; 0x3c6e
   1388c:	eor	r6, r5, r6
   13890:	str	r5, [sp, #112]	; 0x70
   13894:	lsl	r7, r6, #8
   13898:	lsr	r6, r6, #24
   1389c:	adc	sl, r2, r3
   138a0:	adds	r0, lr, r0
   138a4:	eor	r4, sl, r4
   138a8:	adc	r1, r9, r1
   138ac:	orr	r3, r6, r4, lsl #8
   138b0:	ldr	r6, [fp, #-88]	; 0xffffffa8
   138b4:	orr	r5, r7, r4, lsr #24
   138b8:	ldr	r4, [fp, #-104]	; 0xffffff98
   138bc:	str	r3, [sp, #124]	; 0x7c
   138c0:	adds	r3, r0, r3
   138c4:	str	r5, [sp, #84]	; 0x54
   138c8:	adc	r7, r1, r5
   138cc:	eor	r1, r3, ip
   138d0:	str	r3, [sp, #68]	; 0x44
   138d4:	str	r3, [sp, #272]	; 0x110
   138d8:	ldr	r5, [fp, #-92]	; 0xffffffa4
   138dc:	ldr	ip, [fp, #-108]	; 0xffffff94
   138e0:	str	r6, [sp, #144]	; 0x90
   138e4:	ldr	r6, [fp, #-84]	; 0xffffffac
   138e8:	eor	r0, r7, r2
   138ec:	lsr	r2, r1, #16
   138f0:	lsl	r1, r1, #16
   138f4:	str	r7, [sp, #276]	; 0x114
   138f8:	str	r7, [sp, #64]	; 0x40
   138fc:	str	r4, [sp, #252]	; 0xfc
   13900:	orr	r2, r2, r0, lsl #16
   13904:	orr	r0, r1, r0, lsr #16
   13908:	ldr	r1, [fp, #-112]	; 0xffffff90
   1390c:	str	r0, [sp, #372]	; 0x174
   13910:	str	r2, [sp, #368]	; 0x170
   13914:	mov	r3, r0
   13918:	str	r0, [sp, #88]	; 0x58
   1391c:	mov	r0, r2
   13920:	str	r2, [sp, #92]	; 0x5c
   13924:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13928:	str	r5, [sp, #160]	; 0xa0
   1392c:	b	13940 <__assert_fail@plt+0x25c8>
   13930:	vcmla.f32	d15, d4, d27[0], #90
   13934:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13938:	svcpl	0x001d36f1
   1393c:	strbge	pc, [pc, #-1338]	; 1340a <__assert_fail@plt+0x2092>	; <UNPREDICTABLE>
   13940:	str	ip, [sp, #192]	; 0xc0
   13944:	str	r6, [sp, #140]	; 0x8c
   13948:	ldr	r6, [sp, #232]	; 0xe8
   1394c:	ldr	r7, [sp, #312]	; 0x138
   13950:	ldr	lr, [sp, #316]	; 0x13c
   13954:	str	r1, [sp, #208]	; 0xd0
   13958:	str	r2, [sp, #164]	; 0xa4
   1395c:	adds	r9, r6, r2
   13960:	ldr	r2, [sp, #136]	; 0x88
   13964:	adc	r2, r2, r5
   13968:	str	r2, [sp, #136]	; 0x88
   1396c:	ldr	r2, [sp, #112]	; 0x70
   13970:	adds	r0, r0, r2
   13974:	str	r0, [sp, #56]	; 0x38
   13978:	adc	r0, r3, sl
   1397c:	str	r0, [sp, #48]	; 0x30
   13980:	ldr	r0, [sp, #120]	; 0x78
   13984:	adds	r3, r7, r0
   13988:	ldr	r0, [sp, #116]	; 0x74
   1398c:	adc	r5, lr, r0
   13990:	ldr	r0, [sp, #128]	; 0x80
   13994:	adds	r3, r3, r1
   13998:	ldr	r1, [sp, #132]	; 0x84
   1399c:	eor	sl, r3, r0
   139a0:	adc	r0, r5, ip
   139a4:	movw	r5, #14065	; 0x36f1
   139a8:	movt	r5, #24349	; 0x5f1d
   139ac:	eor	r1, r0, r1
   139b0:	adds	r2, r1, r5
   139b4:	movw	r5, #62778	; 0xf53a
   139b8:	movt	r5, #42319	; 0xa54f
   139bc:	eor	r7, r2, r7
   139c0:	str	r2, [sp, #76]	; 0x4c
   139c4:	adc	r6, sl, r5
   139c8:	adds	r3, r4, r3
   139cc:	ldr	r4, [sp, #140]	; 0x8c
   139d0:	eor	r5, r6, lr
   139d4:	str	r6, [sp, #80]	; 0x50
   139d8:	lsl	r6, r7, #8
   139dc:	adc	r0, r8, r0
   139e0:	ldr	r8, [sp, #56]	; 0x38
   139e4:	ldr	lr, [sp, #48]	; 0x30
   139e8:	orr	r2, r6, r5, lsr #24
   139ec:	lsr	r6, r7, #24
   139f0:	orr	r7, r6, r5, lsl #8
   139f4:	str	r2, [sp, #40]	; 0x28
   139f8:	adds	r3, r3, r7
   139fc:	str	r7, [sp, #52]	; 0x34
   13a00:	adc	r0, r0, r2
   13a04:	eor	r1, r3, r1
   13a08:	str	r3, [sp, #232]	; 0xe8
   13a0c:	str	r0, [sp, #44]	; 0x2c
   13a10:	lsr	r2, r1, #16
   13a14:	eor	r0, r0, sl
   13a18:	lsl	r1, r1, #16
   13a1c:	orr	r3, r2, r0, lsl #16
   13a20:	ldr	r2, [sp, #136]	; 0x88
   13a24:	orr	r0, r1, r0, lsr #16
   13a28:	str	r0, [sp, #72]	; 0x48
   13a2c:	str	r3, [sp, #60]	; 0x3c
   13a30:	eor	r3, r3, r9
   13a34:	eor	ip, r0, r2
   13a38:	ldr	r0, [sp, #196]	; 0xc4
   13a3c:	adds	r5, ip, r8
   13a40:	adc	r6, r3, lr
   13a44:	eor	r1, r6, r0
   13a48:	ldr	r0, [sp, #200]	; 0xc8
   13a4c:	eor	r0, r5, r0
   13a50:	lsl	sl, r0, #8
   13a54:	lsr	r0, r0, #24
   13a58:	orr	sl, sl, r1, lsr #24
   13a5c:	orr	r0, r0, r1, lsl #8
   13a60:	ldr	r1, [sp, #144]	; 0x90
   13a64:	adds	r1, r1, r9
   13a68:	adc	r4, r4, r2
   13a6c:	adds	r7, r1, r0
   13a70:	adc	r1, r4, sl
   13a74:	eor	r2, r7, ip
   13a78:	str	r7, [sp, #116]	; 0x74
   13a7c:	str	r1, [sp, #120]	; 0x78
   13a80:	eor	r1, r1, r3
   13a84:	lsl	r3, r2, #16
   13a88:	lsr	r2, r2, #16
   13a8c:	orr	r3, r3, r1, lsr #16
   13a90:	orr	r1, r2, r1, lsl #16
   13a94:	adds	r2, r1, r5
   13a98:	str	r1, [sp, #136]	; 0x88
   13a9c:	str	r3, [sp, #132]	; 0x84
   13aa0:	adc	r1, r3, r6
   13aa4:	str	r2, [sp, #128]	; 0x80
   13aa8:	eor	r0, r2, r0
   13aac:	ldr	r6, [fp, #-80]	; 0xffffffb0
   13ab0:	str	r1, [sp, #112]	; 0x70
   13ab4:	eor	r1, r1, sl
   13ab8:	lsl	r2, r1, #1
   13abc:	orr	sl, r2, r0, lsr #31
   13ac0:	lsl	r0, r0, #1
   13ac4:	orr	r0, r0, r1, lsr #31
   13ac8:	ldr	r1, [sp, #124]	; 0x7c
   13acc:	str	r6, [sp, #200]	; 0xc8
   13ad0:	str	sl, [sp, #32]
   13ad4:	str	r0, [sp, #108]	; 0x6c
   13ad8:	ldr	r0, [sp, #84]	; 0x54
   13adc:	eor	r1, r8, r1
   13ae0:	eor	r0, lr, r0
   13ae4:	mov	lr, sl
   13ae8:	lsl	r2, r0, #1
   13aec:	orr	r2, r2, r1, lsr #31
   13af0:	lsl	r1, r1, #1
   13af4:	orr	r3, r1, r0, lsr #31
   13af8:	ldr	r0, [sp, #236]	; 0xec
   13afc:	ldr	r1, [sp, #248]	; 0xf8
   13b00:	adds	r0, r3, r0
   13b04:	adc	r1, r2, r1
   13b08:	adds	r6, r0, r6
   13b0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b10:	adc	ip, r1, r0
   13b14:	str	r0, [sp, #196]	; 0xc4
   13b18:	ldr	r0, [sp, #176]	; 0xb0
   13b1c:	ldr	r1, [sp, #60]	; 0x3c
   13b20:	eor	r4, ip, r0
   13b24:	ldr	r0, [sp, #76]	; 0x4c
   13b28:	adds	r5, r1, r0
   13b2c:	ldr	r0, [sp, #80]	; 0x50
   13b30:	ldr	r1, [sp, #72]	; 0x48
   13b34:	str	r5, [sp, #248]	; 0xf8
   13b38:	adc	r1, r1, r0
   13b3c:	ldr	r0, [sp, #180]	; 0xb4
   13b40:	adds	r8, r4, r5
   13b44:	str	r1, [sp, #236]	; 0xec
   13b48:	eor	r3, r8, r3
   13b4c:	eor	r7, r6, r0
   13b50:	lsl	r0, r3, #8
   13b54:	lsr	r3, r3, #24
   13b58:	adc	r9, r7, r1
   13b5c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b60:	eor	r2, r9, r2
   13b64:	orr	r0, r0, r2, lsr #24
   13b68:	orr	r2, r3, r2, lsl #8
   13b6c:	str	r1, [sp, #180]	; 0xb4
   13b70:	adds	r3, r1, r6
   13b74:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b78:	adc	r5, r1, ip
   13b7c:	str	r1, [sp, #176]	; 0xb0
   13b80:	ldr	ip, [sp, #108]	; 0x6c
   13b84:	ldr	r1, [sp, #172]	; 0xac
   13b88:	adds	r3, r3, r2
   13b8c:	adc	r5, r5, r0
   13b90:	adds	r6, ip, r1
   13b94:	ldr	r1, [sp, #168]	; 0xa8
   13b98:	adc	r1, sl, r1
   13b9c:	adds	r6, r6, r3
   13ba0:	eor	r3, r3, r4
   13ba4:	ldr	sl, [sp, #44]	; 0x2c
   13ba8:	adc	r1, r1, r5
   13bac:	lsl	r4, r3, #16
   13bb0:	lsr	r3, r3, #16
   13bb4:	str	r6, [sp, #48]	; 0x30
   13bb8:	str	r1, [sp, #124]	; 0x7c
   13bbc:	eor	r1, r5, r7
   13bc0:	orr	r7, r4, r1, lsr #16
   13bc4:	orr	r1, r3, r1, lsl #16
   13bc8:	str	sl, [sp, #284]	; 0x11c
   13bcc:	adds	r3, r1, r8
   13bd0:	str	r1, [sp, #76]	; 0x4c
   13bd4:	str	r7, [sp, #72]	; 0x48
   13bd8:	ldr	r8, [fp, #-52]	; 0xffffffcc
   13bdc:	adc	r1, r7, r9
   13be0:	mov	r5, r3
   13be4:	str	r3, [sp, #80]	; 0x50
   13be8:	ldr	r7, [sp, #64]	; 0x40
   13bec:	eor	r0, r1, r0
   13bf0:	mov	r4, r1
   13bf4:	str	r1, [sp, #84]	; 0x54
   13bf8:	eor	r1, r3, r2
   13bfc:	lsl	r2, r1, #1
   13c00:	orr	r6, r2, r0, lsr #31
   13c04:	lsl	r0, r0, #1
   13c08:	ldr	r2, [sp, #248]	; 0xf8
   13c0c:	str	r8, [sp, #168]	; 0xa8
   13c10:	orr	r3, r0, r1, lsr #31
   13c14:	ldr	r0, [sp, #40]	; 0x28
   13c18:	ldr	r1, [sp, #236]	; 0xec
   13c1c:	str	r6, [sp, #56]	; 0x38
   13c20:	str	r3, [sp, #60]	; 0x3c
   13c24:	eor	r0, r1, r0
   13c28:	ldr	r1, [sp, #52]	; 0x34
   13c2c:	eor	r1, r2, r1
   13c30:	lsl	r2, r0, #1
   13c34:	orr	r2, r2, r1, lsr #31
   13c38:	lsl	r1, r1, #1
   13c3c:	orr	r0, r1, r0, lsr #31
   13c40:	ldr	r1, [sp, #68]	; 0x44
   13c44:	adds	r1, r0, r1
   13c48:	adc	r9, r2, r7
   13c4c:	ldr	r7, [sp, #232]	; 0xe8
   13c50:	str	r7, [sp, #280]	; 0x118
   13c54:	ldr	r7, [sp, #116]	; 0x74
   13c58:	str	r7, [sp, #256]	; 0x100
   13c5c:	ldr	r7, [sp, #120]	; 0x78
   13c60:	str	r7, [sp, #260]	; 0x104
   13c64:	ldr	r7, [sp, #132]	; 0x84
   13c68:	str	r7, [sp, #380]	; 0x17c
   13c6c:	ldr	r7, [sp, #136]	; 0x88
   13c70:	str	r7, [sp, #376]	; 0x178
   13c74:	ldr	r7, [sp, #128]	; 0x80
   13c78:	str	r7, [sp, #336]	; 0x150
   13c7c:	ldr	r7, [sp, #112]	; 0x70
   13c80:	str	r7, [sp, #340]	; 0x154
   13c84:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13c88:	str	ip, [sp, #296]	; 0x128
   13c8c:	str	lr, [sp, #300]	; 0x12c
   13c90:	str	r4, [sp, #348]	; 0x15c
   13c94:	str	r5, [sp, #344]	; 0x158
   13c98:	str	r6, [sp, #304]	; 0x130
   13c9c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13ca0:	ldr	r4, [sp, #228]	; 0xe4
   13ca4:	str	r3, [sp, #308]	; 0x134
   13ca8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   13cac:	adds	r1, r1, r7
   13cb0:	str	r7, [sp, #236]	; 0xec
   13cb4:	ldr	r7, [sp, #240]	; 0xf0
   13cb8:	str	r6, [sp, #248]	; 0xf8
   13cbc:	str	r5, [sp, #172]	; 0xac
   13cc0:	adc	r3, r9, r6
   13cc4:	ldr	r6, [sp, #244]	; 0xf4
   13cc8:	eor	r7, r3, r7
   13ccc:	adds	lr, r7, r4
   13cd0:	ldr	r4, [sp, #96]	; 0x60
   13cd4:	eor	r6, r1, r6
   13cd8:	eor	r0, lr, r0
   13cdc:	adc	ip, r6, r4
   13ce0:	lsl	r4, r0, #8
   13ce4:	lsr	r0, r0, #24
   13ce8:	adds	r1, r5, r1
   13cec:	ldr	r5, [sp, #104]	; 0x68
   13cf0:	eor	r2, ip, r2
   13cf4:	orr	r0, r0, r2, lsl #8
   13cf8:	orr	r4, r4, r2, lsr #24
   13cfc:	adc	r2, r8, r3
   13d00:	ldr	r8, [sp, #100]	; 0x64
   13d04:	adds	r3, r1, r0
   13d08:	adc	r1, r2, r4
   13d0c:	eor	r2, r3, r7
   13d10:	str	r3, [sp, #36]	; 0x24
   13d14:	str	r1, [sp, #40]	; 0x28
   13d18:	lsl	r3, r2, #16
   13d1c:	eor	r1, r1, r6
   13d20:	lsr	r2, r2, #16
   13d24:	orr	r9, r2, r1, lsl #16
   13d28:	orr	r3, r3, r1, lsr #16
   13d2c:	ldr	r1, [sp, #124]	; 0x7c
   13d30:	adds	r2, r9, lr
   13d34:	eor	r0, r2, r0
   13d38:	str	r2, [sp, #20]
   13d3c:	eor	r1, r3, r1
   13d40:	str	r1, [sp, #28]
   13d44:	adc	r1, r3, ip
   13d48:	eor	r3, r1, r4
   13d4c:	str	r1, [sp, #24]
   13d50:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13d54:	lsl	r7, r3, #1
   13d58:	orr	r1, r7, r0, lsr #31
   13d5c:	lsl	r0, r0, #1
   13d60:	ldr	r7, [fp, #-44]	; 0xffffffd4
   13d64:	orr	r3, r0, r3, lsr #31
   13d68:	ldr	r0, [sp, #232]	; 0xe8
   13d6c:	str	r1, [sp, #52]	; 0x34
   13d70:	str	r1, [sp, #316]	; 0x13c
   13d74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13d78:	str	r4, [sp, #240]	; 0xf0
   13d7c:	str	r3, [sp, #96]	; 0x60
   13d80:	str	r3, [sp, #312]	; 0x138
   13d84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13d88:	str	r7, [sp, #228]	; 0xe4
   13d8c:	adds	r0, r0, r8
   13d90:	adc	r2, sl, r5
   13d94:	str	r1, [sp, #232]	; 0xe8
   13d98:	adds	r1, r0, r1
   13d9c:	ldr	r0, [sp, #88]	; 0x58
   13da0:	adc	r7, r2, r7
   13da4:	str	r3, [sp, #244]	; 0xf4
   13da8:	eor	ip, r7, r0
   13dac:	ldr	r0, [sp, #92]	; 0x5c
   13db0:	eor	r2, r1, r0
   13db4:	ldr	r0, [sp, #148]	; 0x94
   13db8:	adds	lr, ip, r0
   13dbc:	ldr	r0, [sp, #152]	; 0x98
   13dc0:	adc	sl, r2, r0
   13dc4:	eor	r0, lr, r8
   13dc8:	eor	r6, sl, r5
   13dcc:	lsl	r5, r0, #8
   13dd0:	lsr	r0, r0, #24
   13dd4:	orr	r8, r5, r6, lsr #24
   13dd8:	orr	r6, r0, r6, lsl #8
   13ddc:	adds	r0, r3, r1
   13de0:	adc	r1, r4, r7
   13de4:	adds	r0, r0, r6
   13de8:	adc	r1, r1, r8
   13dec:	str	r0, [sp, #100]	; 0x64
   13df0:	str	r1, [sp, #104]	; 0x68
   13df4:	eor	r1, r1, r2
   13df8:	eor	r2, r0, ip
   13dfc:	ldr	ip, [sp, #28]
   13e00:	lsl	r0, r2, #16
   13e04:	lsr	r2, r2, #16
   13e08:	orr	r0, r0, r1, lsr #16
   13e0c:	orr	r1, r2, r1, lsl #16
   13e10:	ldr	r2, [sp, #48]	; 0x30
   13e14:	adds	r4, r1, lr
   13e18:	str	r0, [sp, #92]	; 0x5c
   13e1c:	str	r1, [sp, #88]	; 0x58
   13e20:	adc	lr, r0, sl
   13e24:	ldr	r0, [sp, #32]
   13e28:	adds	r7, r4, ip
   13e2c:	eor	r3, r9, r2
   13e30:	adc	r9, lr, r3
   13e34:	eor	r1, r9, r0
   13e38:	ldr	r0, [sp, #108]	; 0x6c
   13e3c:	eor	r5, r7, r0
   13e40:	ldr	r0, [sp, #164]	; 0xa4
   13e44:	lsl	sl, r5, #8
   13e48:	lsr	r5, r5, #24
   13e4c:	orr	sl, sl, r1, lsr #24
   13e50:	orr	r1, r5, r1, lsl #8
   13e54:	adds	r5, r2, r0
   13e58:	ldr	r0, [sp, #160]	; 0xa0
   13e5c:	ldr	r2, [sp, #124]	; 0x7c
   13e60:	adc	r0, r2, r0
   13e64:	adds	r2, r5, r1
   13e68:	adc	r0, r0, sl
   13e6c:	str	r2, [sp, #64]	; 0x40
   13e70:	str	r0, [sp, #68]	; 0x44
   13e74:	eor	r0, r0, r3
   13e78:	eor	r3, r2, ip
   13e7c:	lsl	r5, r3, #16
   13e80:	lsr	r3, r3, #16
   13e84:	orr	r5, r5, r0, lsr #16
   13e88:	orr	r0, r3, r0, lsl #16
   13e8c:	adds	r3, r0, r7
   13e90:	str	r0, [sp, #108]	; 0x6c
   13e94:	ldr	r7, [sp, #120]	; 0x78
   13e98:	str	r5, [sp, #124]	; 0x7c
   13e9c:	adc	r0, r5, r9
   13ea0:	str	r3, [sp, #148]	; 0x94
   13ea4:	eor	r1, r3, r1
   13ea8:	str	r0, [sp, #152]	; 0x98
   13eac:	eor	r0, r0, sl
   13eb0:	lsl	r3, r0, #1
   13eb4:	orr	r9, r3, r1, lsr #31
   13eb8:	lsl	r1, r1, #1
   13ebc:	ldr	r3, [sp, #116]	; 0x74
   13ec0:	orr	sl, r1, r0, lsr #31
   13ec4:	eor	r0, lr, r8
   13ec8:	eor	r1, r4, r6
   13ecc:	lsl	r2, r0, #1
   13ed0:	str	r9, [sp]
   13ed4:	orr	r2, r2, r1, lsr #31
   13ed8:	lsl	r1, r1, #1
   13edc:	str	sl, [sp, #4]
   13ee0:	orr	r0, r1, r0, lsr #31
   13ee4:	ldr	r1, [sp, #232]	; 0xe8
   13ee8:	adds	r1, r1, r3
   13eec:	ldr	r3, [sp, #228]	; 0xe4
   13ef0:	adc	r3, r3, r7
   13ef4:	ldr	r7, [sp, #72]	; 0x48
   13ef8:	adds	r1, r1, r0
   13efc:	adc	r3, r3, r2
   13f00:	eor	r6, r3, r7
   13f04:	ldr	r7, [sp, #76]	; 0x4c
   13f08:	str	r6, [sp, #32]
   13f0c:	eor	r5, r1, r7
   13f10:	ldr	r7, [sp, #20]
   13f14:	str	r5, [sp, #28]
   13f18:	adds	r7, r6, r7
   13f1c:	ldr	r6, [sp, #24]
   13f20:	eor	r0, r7, r0
   13f24:	str	r7, [sp, #44]	; 0x2c
   13f28:	adc	r6, r5, r6
   13f2c:	str	r6, [sp, #48]	; 0x30
   13f30:	eor	r2, r6, r2
   13f34:	lsl	r6, r0, #8
   13f38:	lsr	r0, r0, #24
   13f3c:	orr	r7, r6, r2, lsr #24
   13f40:	orr	r2, r0, r2, lsl #8
   13f44:	ldr	r0, [sp, #200]	; 0xc8
   13f48:	str	r2, [sp, #24]
   13f4c:	str	r7, [sp, #20]
   13f50:	adds	r0, r1, r0
   13f54:	ldr	r1, [sp, #196]	; 0xc4
   13f58:	adc	r1, r3, r1
   13f5c:	adds	r2, r0, r2
   13f60:	ldr	r0, [sp, #220]	; 0xdc
   13f64:	adc	r3, r1, r7
   13f68:	ldr	r1, [sp, #204]	; 0xcc
   13f6c:	str	r2, [sp, #16]
   13f70:	ldr	r7, [sp, #60]	; 0x3c
   13f74:	str	r3, [sp, #12]
   13f78:	adds	r0, sl, r0
   13f7c:	adc	r1, r9, r1
   13f80:	adds	lr, r0, r2
   13f84:	ldr	r2, [sp, #36]	; 0x24
   13f88:	adc	r0, r1, r3
   13f8c:	ldr	r3, [sp, #56]	; 0x38
   13f90:	ldr	r1, [sp, #140]	; 0x8c
   13f94:	str	r0, [sp, #120]	; 0x78
   13f98:	ldr	r0, [sp, #144]	; 0x90
   13f9c:	adds	r0, r3, r0
   13fa0:	adc	r1, r7, r1
   13fa4:	adds	r0, r0, r2
   13fa8:	ldr	r2, [sp, #40]	; 0x28
   13fac:	adc	r1, r1, r2
   13fb0:	ldr	r2, [sp, #92]	; 0x5c
   13fb4:	eor	r5, r2, r1
   13fb8:	ldr	r2, [sp, #88]	; 0x58
   13fbc:	eor	r4, r2, r0
   13fc0:	ldr	r2, [sp, #128]	; 0x80
   13fc4:	adds	sl, r5, r2
   13fc8:	ldr	r2, [sp, #112]	; 0x70
   13fcc:	eor	r6, sl, r3
   13fd0:	adc	r8, r4, r2
   13fd4:	ldr	r2, [sp, #244]	; 0xf4
   13fd8:	eor	ip, r8, r7
   13fdc:	lsl	r7, r6, #8
   13fe0:	lsr	r6, r6, #24
   13fe4:	orr	r3, r7, ip, lsr #24
   13fe8:	orr	r7, r6, ip, lsl #8
   13fec:	adds	r0, r2, r0
   13ff0:	ldr	r2, [sp, #240]	; 0xf0
   13ff4:	str	r3, [sp, #8]
   13ff8:	str	r7, [sp, #60]	; 0x3c
   13ffc:	adc	r1, r2, r1
   14000:	adds	r2, r0, r7
   14004:	adc	r0, r1, r3
   14008:	eor	r1, r2, r5
   1400c:	str	r2, [sp, #72]	; 0x48
   14010:	str	r0, [sp, #76]	; 0x4c
   14014:	eor	r0, r0, r4
   14018:	lsl	r4, r1, #16
   1401c:	lsr	r1, r1, #16
   14020:	orr	r2, r4, r0, lsr #16
   14024:	orr	r0, r1, r0, lsl #16
   14028:	ldr	r1, [sp, #52]	; 0x34
   1402c:	adds	ip, r0, sl
   14030:	str	r0, [sp, #140]	; 0x8c
   14034:	str	r2, [sp, #128]	; 0x80
   14038:	ldr	r0, [sp, #172]	; 0xac
   1403c:	adc	r3, r2, r8
   14040:	ldr	r2, [sp, #96]	; 0x60
   14044:	adds	r4, r2, r0
   14048:	ldr	r0, [sp, #168]	; 0xa8
   1404c:	adc	r5, r1, r0
   14050:	ldr	r0, [sp, #100]	; 0x64
   14054:	adds	r4, r4, r0
   14058:	ldr	r0, [sp, #104]	; 0x68
   1405c:	adc	r5, r5, r0
   14060:	ldr	r0, [sp, #132]	; 0x84
   14064:	eor	r8, r5, r0
   14068:	ldr	r0, [sp, #136]	; 0x88
   1406c:	eor	r9, r4, r0
   14070:	ldr	r0, [sp, #80]	; 0x50
   14074:	adds	r6, r8, r0
   14078:	ldr	r0, [sp, #84]	; 0x54
   1407c:	str	r6, [sp, #40]	; 0x28
   14080:	adc	r0, r9, r0
   14084:	str	r0, [sp, #56]	; 0x38
   14088:	eor	r1, r0, r1
   1408c:	eor	r0, r6, r2
   14090:	lsl	r6, r0, #8
   14094:	lsr	r0, r0, #24
   14098:	orr	r2, r0, r1, lsl #8
   1409c:	ldr	r0, [sp, #208]	; 0xd0
   140a0:	orr	r6, r6, r1, lsr #24
   140a4:	ldr	r1, [sp, #192]	; 0xc0
   140a8:	str	r2, [sp, #136]	; 0x88
   140ac:	str	r6, [sp, #80]	; 0x50
   140b0:	adds	r0, r4, r0
   140b4:	adc	r1, r5, r1
   140b8:	adds	r2, r0, r2
   140bc:	ldr	r5, [sp, #120]	; 0x78
   140c0:	adc	r0, r1, r6
   140c4:	eor	r1, r2, r8
   140c8:	str	r2, [sp, #88]	; 0x58
   140cc:	str	r0, [sp, #104]	; 0x68
   140d0:	lsr	r4, r1, #16
   140d4:	eor	r0, r0, r9
   140d8:	lsl	r1, r1, #16
   140dc:	orr	r4, r4, r0, lsl #16
   140e0:	orr	r0, r1, r0, lsr #16
   140e4:	eor	r2, r5, r0
   140e8:	str	r0, [sp, #52]	; 0x34
   140ec:	ldr	r0, [sp]
   140f0:	eor	r1, lr, r4
   140f4:	str	r4, [sp, #36]	; 0x24
   140f8:	ldr	r4, [sp, #236]	; 0xec
   140fc:	adds	r8, r2, ip
   14100:	adc	r6, r1, r3
   14104:	eor	r7, r6, r0
   14108:	ldr	r0, [sp, #4]
   1410c:	eor	r0, r8, r0
   14110:	lsl	sl, r0, #8
   14114:	lsr	r0, r0, #24
   14118:	orr	sl, sl, r7, lsr #24
   1411c:	orr	r0, r0, r7, lsl #8
   14120:	adds	r7, lr, r4
   14124:	ldr	r4, [sp, #248]	; 0xf8
   14128:	adc	lr, r5, r4
   1412c:	adds	r4, r7, r0
   14130:	adc	r7, lr, sl
   14134:	eor	r2, r4, r2
   14138:	str	r4, [sp, #96]	; 0x60
   1413c:	str	r7, [sp, #100]	; 0x64
   14140:	eor	r1, r7, r1
   14144:	lsl	r7, r2, #16
   14148:	lsr	r2, r2, #16
   1414c:	orr	lr, r7, r1, lsr #16
   14150:	orr	r1, r2, r1, lsl #16
   14154:	adds	r2, r1, r8
   14158:	mov	r8, r1
   1415c:	str	r1, [sp, #116]	; 0x74
   14160:	str	lr, [sp, #112]	; 0x70
   14164:	adc	r9, lr, r6
   14168:	str	r2, [sp, #144]	; 0x90
   1416c:	eor	r0, r2, r0
   14170:	eor	r1, r9, sl
   14174:	str	r9, [sp, #92]	; 0x5c
   14178:	lsl	r2, r1, #1
   1417c:	orr	r2, r2, r0, lsr #31
   14180:	lsl	r0, r0, #1
   14184:	orr	r0, r0, r1, lsr #31
   14188:	ldr	r1, [sp, #60]	; 0x3c
   1418c:	str	r2, [sp, #120]	; 0x78
   14190:	str	r0, [sp, #132]	; 0x84
   14194:	ldr	r0, [sp, #8]
   14198:	eor	r1, ip, r1
   1419c:	eor	r0, r3, r0
   141a0:	lsl	r2, r0, #1
   141a4:	orr	r3, r2, r1, lsr #31
   141a8:	lsl	r1, r1, #1
   141ac:	orr	r2, r1, r0, lsr #31
   141b0:	ldr	r0, [sp, #64]	; 0x40
   141b4:	ldr	r1, [sp, #12]
   141b8:	str	r3, [sp, #8]
   141bc:	adds	r0, r2, r0
   141c0:	str	r0, [sp, #4]
   141c4:	ldr	r0, [sp, #68]	; 0x44
   141c8:	adc	r0, r3, r0
   141cc:	ldr	r3, [sp, #16]
   141d0:	str	r0, [sp]
   141d4:	ldr	r0, [sp, #28]
   141d8:	eor	r0, r1, r0
   141dc:	ldr	r1, [sp, #32]
   141e0:	eor	r1, r3, r1
   141e4:	lsl	r5, r1, #16
   141e8:	lsr	r1, r1, #16
   141ec:	orr	r7, r5, r0, lsr #16
   141f0:	orr	sl, r1, r0, lsl #16
   141f4:	ldr	r0, [sp, #44]	; 0x2c
   141f8:	str	r7, [sp, #356]	; 0x164
   141fc:	str	sl, [sp, #352]	; 0x160
   14200:	adds	ip, sl, r0
   14204:	ldr	r0, [sp, #48]	; 0x30
   14208:	str	ip, [sp, #320]	; 0x140
   1420c:	adc	r1, r7, r0
   14210:	ldr	r0, [sp, #20]
   14214:	mov	r3, r1
   14218:	str	r1, [sp, #32]
   1421c:	str	r3, [sp, #324]	; 0x144
   14220:	ldr	r3, [fp, #-160]	; 0xffffff60
   14224:	eor	r6, r1, r0
   14228:	ldr	r0, [sp, #24]
   1422c:	lsl	r4, r6, #1
   14230:	str	r3, [sp, #84]	; 0x54
   14234:	eor	r5, ip, r0
   14238:	orr	r1, r4, r5, lsr #31
   1423c:	lsl	r4, r5, #1
   14240:	ldr	r5, [fp, #-156]	; 0xffffff64
   14244:	orr	r0, r4, r6, lsr #31
   14248:	ldr	r6, [sp, #4]
   1424c:	str	r1, [sp, #292]	; 0x124
   14250:	str	r1, [sp, #64]	; 0x40
   14254:	ldr	r1, [sp, #120]	; 0x78
   14258:	str	r0, [sp, #60]	; 0x3c
   1425c:	str	r0, [sp, #288]	; 0x120
   14260:	ldr	r0, [sp, #124]	; 0x7c
   14264:	str	r5, [sp, #68]	; 0x44
   14268:	adds	r6, r6, r3
   1426c:	ldr	r3, [sp]
   14270:	str	r0, [sp, #364]	; 0x16c
   14274:	ldr	r0, [sp, #108]	; 0x6c
   14278:	adc	r3, r3, r5
   1427c:	ldr	r5, [sp, #36]	; 0x24
   14280:	eor	r4, r3, r7
   14284:	ldr	r7, [sp, #40]	; 0x28
   14288:	str	r0, [sp, #360]	; 0x168
   1428c:	ldr	r0, [sp, #152]	; 0x98
   14290:	str	r4, [sp, #44]	; 0x2c
   14294:	str	r0, [sp, #332]	; 0x14c
   14298:	ldr	r0, [sp, #148]	; 0x94
   1429c:	str	r0, [sp, #328]	; 0x148
   142a0:	ldr	r0, [sp, #128]	; 0x80
   142a4:	str	r0, [sp, #372]	; 0x174
   142a8:	ldr	r0, [sp, #140]	; 0x8c
   142ac:	str	r0, [sp, #368]	; 0x170
   142b0:	str	r8, [sp, #376]	; 0x178
   142b4:	adds	r8, r5, r7
   142b8:	ldr	r7, [sp, #56]	; 0x38
   142bc:	ldr	r5, [sp, #52]	; 0x34
   142c0:	str	lr, [sp, #380]	; 0x17c
   142c4:	str	r9, [sp, #340]	; 0x154
   142c8:	ldr	r0, [sp, #144]	; 0x90
   142cc:	adc	r9, r5, r7
   142d0:	ldr	r5, [sp, #8]
   142d4:	eor	r7, r6, sl
   142d8:	adds	sl, r4, r8
   142dc:	str	r0, [sp, #336]	; 0x150
   142e0:	ldr	r0, [sp, #132]	; 0x84
   142e4:	str	r1, [sp, #300]	; 0x12c
   142e8:	str	r7, [sp, #40]	; 0x28
   142ec:	adc	r7, r7, r9
   142f0:	str	r7, [sp, #36]	; 0x24
   142f4:	eor	lr, r7, r5
   142f8:	eor	r5, sl, r2
   142fc:	ldr	r2, [sp, #188]	; 0xbc
   14300:	str	r0, [sp, #296]	; 0x128
   14304:	lsl	r7, r5, #8
   14308:	lsr	r5, r5, #24
   1430c:	orr	r5, r5, lr, lsl #8
   14310:	orr	r4, r7, lr, lsr #24
   14314:	adds	r6, r6, r2
   14318:	ldr	r2, [sp, #184]	; 0xb8
   1431c:	str	r4, [sp, #12]
   14320:	str	r5, [sp, #24]
   14324:	adc	r2, r3, r2
   14328:	adds	lr, r6, r5
   1432c:	ldr	r3, [sp, #32]
   14330:	adc	r4, r2, r4
   14334:	ldr	r2, [sp, #236]	; 0xec
   14338:	adds	r7, r0, r2
   1433c:	ldr	r0, [sp, #248]	; 0xf8
   14340:	ldr	r2, [sp, #72]	; 0x48
   14344:	adc	r5, r1, r0
   14348:	adds	r0, r7, lr
   1434c:	str	r0, [sp, #48]	; 0x30
   14350:	ldr	r0, [sp, #80]	; 0x50
   14354:	adc	r6, r5, r4
   14358:	str	r6, [sp, #20]
   1435c:	eor	r1, r9, r0
   14360:	ldr	r0, [sp, #136]	; 0x88
   14364:	lsl	r7, r1, #1
   14368:	eor	r5, r8, r0
   1436c:	ldr	r0, [sp, #180]	; 0xb4
   14370:	orr	r7, r7, r5, lsr #31
   14374:	lsl	r5, r5, #1
   14378:	orr	r1, r5, r1, lsr #31
   1437c:	adds	r5, r2, r0
   14380:	ldr	r0, [sp, #176]	; 0xb0
   14384:	ldr	r2, [sp, #76]	; 0x4c
   14388:	adc	r8, r2, r0
   1438c:	ldr	r0, [sp, #124]	; 0x7c
   14390:	adds	r5, r5, r1
   14394:	adc	r8, r8, r7
   14398:	eor	r2, r8, r0
   1439c:	ldr	r0, [sp, #108]	; 0x6c
   143a0:	adds	ip, r2, ip
   143a4:	eor	r1, ip, r1
   143a8:	lsl	r9, r1, #8
   143ac:	lsr	r1, r1, #24
   143b0:	eor	r0, r5, r0
   143b4:	adc	r3, r0, r3
   143b8:	eor	r7, r3, r7
   143bc:	orr	r9, r9, r7, lsr #24
   143c0:	orr	r1, r1, r7, lsl #8
   143c4:	ldr	r7, [sp, #252]	; 0xfc
   143c8:	adds	r5, r5, r7
   143cc:	ldr	r7, [sp, #224]	; 0xe0
   143d0:	adc	r7, r8, r7
   143d4:	adds	r5, r5, r1
   143d8:	adc	r7, r7, r9
   143dc:	eor	r2, r5, r2
   143e0:	str	r5, [sp, #52]	; 0x34
   143e4:	lsl	r5, r2, #16
   143e8:	eor	r0, r7, r0
   143ec:	lsr	r2, r2, #16
   143f0:	str	r7, [sp, #56]	; 0x38
   143f4:	orr	r5, r5, r0, lsr #16
   143f8:	orr	r0, r2, r0, lsl #16
   143fc:	adds	r2, r0, ip
   14400:	str	r0, [sp, #108]	; 0x6c
   14404:	eor	r0, r6, r5
   14408:	str	r0, [sp, #16]
   1440c:	adc	r0, r5, r3
   14410:	str	r2, [sp, #32]
   14414:	eor	r1, r2, r1
   14418:	str	r0, [sp, #72]	; 0x48
   1441c:	eor	r0, r0, r9
   14420:	lsl	r2, r0, #1
   14424:	orr	r2, r2, r1, lsr #31
   14428:	lsl	r1, r1, #1
   1442c:	orr	r0, r1, r0, lsr #31
   14430:	ldr	r1, [sp, #44]	; 0x2c
   14434:	str	r2, [sp, #136]	; 0x88
   14438:	str	r0, [sp, #124]	; 0x7c
   1443c:	ldr	r0, [sp, #40]	; 0x28
   14440:	eor	r1, lr, r1
   14444:	lsl	r2, r1, #16
   14448:	lsr	r1, r1, #16
   1444c:	eor	r0, r4, r0
   14450:	ldr	r4, [sp, #64]	; 0x40
   14454:	orr	r3, r2, r0, lsr #16
   14458:	orr	r0, r1, r0, lsl #16
   1445c:	ldr	r1, [sp, #24]
   14460:	adds	lr, r0, sl
   14464:	str	r0, [sp, #44]	; 0x2c
   14468:	ldr	r0, [sp, #36]	; 0x24
   1446c:	str	r3, [sp, #28]
   14470:	str	lr, [sp, #40]	; 0x28
   14474:	str	lr, [sp, #344]	; 0x158
   14478:	eor	r1, lr, r1
   1447c:	adc	r7, r3, r0
   14480:	ldr	r0, [sp, #12]
   14484:	str	r7, [sp, #348]	; 0x15c
   14488:	str	r7, [sp, #36]	; 0x24
   1448c:	eor	r0, r7, r0
   14490:	lsl	r2, r0, #1
   14494:	orr	r2, r2, r1, lsr #31
   14498:	lsl	r1, r1, #1
   1449c:	orr	r5, r1, r0, lsr #31
   144a0:	ldr	r0, [sp, #216]	; 0xd8
   144a4:	str	r2, [sp, #8]
   144a8:	ldr	r2, [sp, #104]	; 0x68
   144ac:	ldr	lr, [sp, #8]
   144b0:	str	r5, [sp, #304]	; 0x130
   144b4:	str	r5, [sp, #24]
   144b8:	ldr	r5, [sp, #48]	; 0x30
   144bc:	mov	r1, r0
   144c0:	ldr	r0, [sp, #88]	; 0x58
   144c4:	str	lr, [sp, #308]	; 0x134
   144c8:	adds	r0, r0, r1
   144cc:	ldr	r1, [sp, #212]	; 0xd4
   144d0:	adc	r1, r2, r1
   144d4:	ldr	r2, [sp, #60]	; 0x3c
   144d8:	adds	ip, r0, r2
   144dc:	ldr	r0, [sp, #128]	; 0x80
   144e0:	adc	r3, r1, r4
   144e4:	eor	r8, r3, r0
   144e8:	ldr	r0, [sp, #140]	; 0x8c
   144ec:	eor	r6, ip, r0
   144f0:	ldr	r0, [sp, #148]	; 0x94
   144f4:	adds	r9, r8, r0
   144f8:	ldr	r0, [sp, #152]	; 0x98
   144fc:	adc	sl, r6, r0
   14500:	eor	r0, r9, r2
   14504:	eor	r1, sl, r4
   14508:	lsl	r4, r0, #8
   1450c:	lsr	r0, r0, #24
   14510:	orr	r2, r4, r1, lsr #24
   14514:	orr	r0, r0, r1, lsl #8
   14518:	ldr	r1, [sp, #124]	; 0x7c
   1451c:	str	r0, [sp, #140]	; 0x8c
   14520:	adds	r0, r0, ip
   14524:	str	r2, [sp, #88]	; 0x58
   14528:	adc	r2, r2, r3
   1452c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   14530:	str	r1, [sp, #312]	; 0x138
   14534:	ldr	r1, [sp, #136]	; 0x88
   14538:	str	r3, [sp, #76]	; 0x4c
   1453c:	str	r1, [sp, #316]	; 0x13c
   14540:	ldr	r1, [fp, #-136]	; 0xffffff78
   14544:	str	r1, [sp, #80]	; 0x50
   14548:	adds	r1, r0, r1
   1454c:	adc	r0, r2, r3
   14550:	eor	r2, r1, r8
   14554:	str	r1, [sp, #148]	; 0x94
   14558:	str	r0, [sp, #152]	; 0x98
   1455c:	lsl	r4, r2, #16
   14560:	eor	r0, r0, r6
   14564:	lsr	r2, r2, #16
   14568:	orr	r1, r4, r0, lsr #16
   1456c:	orr	r0, r2, r0, lsl #16
   14570:	ldr	r2, [sp, #16]
   14574:	adds	r9, r0, r9
   14578:	str	r0, [sp, #128]	; 0x80
   1457c:	ldr	r0, [sp, #108]	; 0x6c
   14580:	adc	ip, r1, sl
   14584:	mov	sl, r1
   14588:	ldr	r1, [sp, #84]	; 0x54
   1458c:	adds	r4, r9, r2
   14590:	eor	r7, r5, r0
   14594:	ldr	r0, [sp, #120]	; 0x78
   14598:	adc	r8, ip, r7
   1459c:	eor	r6, r8, r0
   145a0:	ldr	r0, [sp, #132]	; 0x84
   145a4:	eor	r0, r4, r0
   145a8:	lsl	r3, r0, #8
   145ac:	lsr	r0, r0, #24
   145b0:	orr	r3, r3, r6, lsr #24
   145b4:	orr	r0, r0, r6, lsl #8
   145b8:	adds	r6, r5, r1
   145bc:	ldr	r1, [sp, #68]	; 0x44
   145c0:	ldr	r5, [sp, #20]
   145c4:	adc	r1, r5, r1
   145c8:	adds	r6, r6, r0
   145cc:	str	r6, [sp, #60]	; 0x3c
   145d0:	adc	r1, r1, r3
   145d4:	eor	r6, r6, r2
   145d8:	str	r1, [sp, #64]	; 0x40
   145dc:	eor	r1, r1, r7
   145e0:	lsl	r7, r6, #16
   145e4:	lsr	r6, r6, #16
   145e8:	orr	r7, r7, r1, lsr #16
   145ec:	orr	r1, r6, r1, lsl #16
   145f0:	ldr	r6, [sp, #44]	; 0x2c
   145f4:	adds	r4, r1, r4
   145f8:	str	r1, [sp, #120]	; 0x78
   145fc:	str	r7, [sp, #84]	; 0x54
   14600:	adc	r1, r7, r8
   14604:	eor	r0, r4, r0
   14608:	str	r4, [sp, #104]	; 0x68
   1460c:	ldr	r7, [sp, #100]	; 0x64
   14610:	str	r1, [sp, #108]	; 0x6c
   14614:	eor	r1, r1, r3
   14618:	ldr	r3, [sp, #96]	; 0x60
   1461c:	lsl	r2, r1, #1
   14620:	orr	r8, r2, r0, lsr #31
   14624:	lsl	r0, r0, #1
   14628:	orr	r4, r0, r1, lsr #31
   1462c:	ldr	r0, [sp, #88]	; 0x58
   14630:	ldr	r1, [sp, #140]	; 0x8c
   14634:	str	r8, [sp, #12]
   14638:	str	r4, [sp, #16]
   1463c:	eor	r0, ip, r0
   14640:	eor	r1, r9, r1
   14644:	lsl	r2, r0, #1
   14648:	orr	r2, r2, r1, lsr #31
   1464c:	lsl	r1, r1, #1
   14650:	orr	r0, r1, r0, lsr #31
   14654:	ldr	r1, [sp, #180]	; 0xb4
   14658:	adds	r1, r3, r1
   1465c:	ldr	r3, [sp, #176]	; 0xb0
   14660:	adc	r3, r7, r3
   14664:	adds	r1, r1, r0
   14668:	ldr	r7, [sp, #28]
   1466c:	eor	r5, r1, r6
   14670:	ldr	r6, [sp, #32]
   14674:	adc	r3, r3, r2
   14678:	str	r5, [sp, #44]	; 0x2c
   1467c:	eor	r7, r3, r7
   14680:	adds	r6, r7, r6
   14684:	str	r7, [sp, #48]	; 0x30
   14688:	ldr	r7, [sp, #72]	; 0x48
   1468c:	eor	r0, r6, r0
   14690:	str	r6, [sp, #68]	; 0x44
   14694:	lsl	r6, r0, #8
   14698:	lsr	r0, r0, #24
   1469c:	adc	r7, r5, r7
   146a0:	ldr	r5, [sp, #24]
   146a4:	eor	r2, r7, r2
   146a8:	str	r7, [sp, #72]	; 0x48
   146ac:	orr	r7, r6, r2, lsr #24
   146b0:	orr	r2, r0, r2, lsl #8
   146b4:	ldr	r0, [sp, #164]	; 0xa4
   146b8:	str	r2, [sp, #140]	; 0x8c
   146bc:	str	r7, [sp, #132]	; 0x84
   146c0:	adds	r0, r1, r0
   146c4:	ldr	r1, [sp, #160]	; 0xa0
   146c8:	adc	r1, r3, r1
   146cc:	adds	r2, r0, r2
   146d0:	ldr	r0, [sp, #200]	; 0xc8
   146d4:	adc	r3, r1, r7
   146d8:	ldr	r1, [sp, #196]	; 0xc4
   146dc:	str	r2, [sp, #32]
   146e0:	ldr	r7, [sp, #144]	; 0x90
   146e4:	str	r3, [sp, #28]
   146e8:	adds	r0, r4, r0
   146ec:	adc	r1, r8, r1
   146f0:	adds	r0, r0, r2
   146f4:	ldr	r2, [sp, #56]	; 0x38
   146f8:	str	r0, [sp, #164]	; 0xa4
   146fc:	adc	r0, r1, r3
   14700:	ldr	r1, [sp, #216]	; 0xd8
   14704:	ldr	r3, [sp, #128]	; 0x80
   14708:	str	r0, [sp, #160]	; 0xa0
   1470c:	ldr	r0, [sp, #52]	; 0x34
   14710:	adds	r0, r0, r1
   14714:	ldr	r1, [sp, #212]	; 0xd4
   14718:	adc	r1, r2, r1
   1471c:	adds	r0, r0, r5
   14720:	adc	r1, r1, lr
   14724:	eor	r3, r3, r0
   14728:	eor	r2, sl, r1
   1472c:	adds	r8, r2, r7
   14730:	ldr	r7, [sp, #92]	; 0x5c
   14734:	eor	r6, r8, r5
   14738:	lsl	r5, r6, #8
   1473c:	lsr	r6, r6, #24
   14740:	adc	r9, r3, r7
   14744:	ldr	r7, [sp, #188]	; 0xbc
   14748:	eor	r4, r9, lr
   1474c:	orr	r6, r6, r4, lsl #8
   14750:	orr	r5, r5, r4, lsr #24
   14754:	adds	r0, r0, r7
   14758:	ldr	r7, [sp, #184]	; 0xb8
   1475c:	str	r6, [sp, #24]
   14760:	str	r5, [sp, #20]
   14764:	adc	r1, r1, r7
   14768:	adds	r7, r0, r6
   1476c:	ldr	r6, [sp, #124]	; 0x7c
   14770:	adc	r0, r1, r5
   14774:	eor	r1, r7, r2
   14778:	str	r7, [sp, #52]	; 0x34
   1477c:	ldr	r7, [sp, #136]	; 0x88
   14780:	str	r0, [sp, #56]	; 0x38
   14784:	lsl	r2, r1, #16
   14788:	eor	r0, r0, r3
   1478c:	lsr	r1, r1, #16
   14790:	orr	r2, r2, r0, lsr #16
   14794:	orr	r0, r1, r0, lsl #16
   14798:	ldr	r1, [sp, #240]	; 0xf0
   1479c:	adds	sl, r0, r8
   147a0:	str	r0, [sp, #92]	; 0x5c
   147a4:	ldr	r0, [sp, #244]	; 0xf4
   147a8:	str	r2, [sp, #88]	; 0x58
   147ac:	adc	r9, r2, r9
   147b0:	ldr	r2, [sp, #148]	; 0x94
   147b4:	adds	r0, r6, r0
   147b8:	adc	r1, r7, r1
   147bc:	adds	r2, r0, r2
   147c0:	ldr	r0, [sp, #152]	; 0x98
   147c4:	adc	r1, r1, r0
   147c8:	ldr	r0, [sp, #112]	; 0x70
   147cc:	eor	ip, r1, r0
   147d0:	ldr	r0, [sp, #116]	; 0x74
   147d4:	eor	r3, r2, r0
   147d8:	ldr	r0, [sp, #40]	; 0x28
   147dc:	adds	r5, ip, r0
   147e0:	ldr	r0, [sp, #36]	; 0x24
   147e4:	str	r5, [sp, #8]
   147e8:	adc	r0, r3, r0
   147ec:	str	r0, [sp, #116]	; 0x74
   147f0:	eor	r8, r0, r7
   147f4:	eor	r0, r5, r6
   147f8:	lsl	r7, r0, #8
   147fc:	lsr	r0, r0, #24
   14800:	orr	r6, r0, r8, lsl #8
   14804:	ldr	r0, [sp, #172]	; 0xac
   14808:	orr	r7, r7, r8, lsr #24
   1480c:	str	r6, [sp, #112]	; 0x70
   14810:	str	r7, [sp, #40]	; 0x28
   14814:	adds	r0, r2, r0
   14818:	ldr	r2, [sp, #168]	; 0xa8
   1481c:	adc	r1, r1, r2
   14820:	adds	r2, r0, r6
   14824:	ldr	r6, [sp, #164]	; 0xa4
   14828:	str	r2, [sp, #136]	; 0x88
   1482c:	adc	r0, r1, r7
   14830:	eor	r2, r2, ip
   14834:	ldr	ip, [sp, #160]	; 0xa0
   14838:	str	r0, [sp, #144]	; 0x90
   1483c:	lsr	r1, r2, #16
   14840:	eor	r0, r0, r3
   14844:	lsl	r2, r2, #16
   14848:	orr	r4, r2, r0, lsr #16
   1484c:	orr	r5, r1, r0, lsl #16
   14850:	ldr	r0, [sp, #12]
   14854:	eor	r2, ip, r4
   14858:	eor	r3, r6, r5
   1485c:	adds	r7, r2, sl
   14860:	adc	lr, r3, r9
   14864:	eor	r1, lr, r0
   14868:	ldr	r0, [sp, #16]
   1486c:	eor	r0, r7, r0
   14870:	lsl	r8, r0, #8
   14874:	lsr	r0, r0, #24
   14878:	orr	r8, r8, r1, lsr #24
   1487c:	orr	r0, r0, r1, lsl #8
   14880:	ldr	r1, [sp, #232]	; 0xe8
   14884:	adds	r1, r6, r1
   14888:	ldr	r6, [sp, #228]	; 0xe4
   1488c:	adc	ip, ip, r6
   14890:	adds	r6, r1, r0
   14894:	adc	r1, ip, r8
   14898:	eor	r2, r6, r2
   1489c:	str	r6, [sp, #96]	; 0x60
   148a0:	eor	ip, r1, r3
   148a4:	lsl	r3, r2, #16
   148a8:	lsr	r2, r2, #16
   148ac:	str	r1, [sp, #100]	; 0x64
   148b0:	orr	r1, r2, ip, lsl #16
   148b4:	orr	r3, r3, ip, lsr #16
   148b8:	ldr	ip, [sp, #80]	; 0x50
   148bc:	adds	r2, r1, r7
   148c0:	str	r1, [sp, #152]	; 0x98
   148c4:	str	r3, [sp, #148]	; 0x94
   148c8:	adc	r1, r3, lr
   148cc:	str	r2, [sp, #124]	; 0x7c
   148d0:	eor	r0, r2, r0
   148d4:	str	r1, [sp, #128]	; 0x80
   148d8:	eor	r1, r1, r8
   148dc:	lsl	r2, r1, #1
   148e0:	orr	r2, r2, r0, lsr #31
   148e4:	lsl	r0, r0, #1
   148e8:	orr	r0, r0, r1, lsr #31
   148ec:	ldr	r1, [sp, #24]
   148f0:	str	r2, [sp, #164]	; 0xa4
   148f4:	str	r0, [sp, #160]	; 0xa0
   148f8:	ldr	r0, [sp, #20]
   148fc:	eor	r1, sl, r1
   14900:	ldr	sl, [sp, #76]	; 0x4c
   14904:	eor	r0, r9, r0
   14908:	lsl	r2, r0, #1
   1490c:	orr	r3, r2, r1, lsr #31
   14910:	lsl	r1, r1, #1
   14914:	ldr	r2, [sp, #64]	; 0x40
   14918:	orr	r0, r1, r0, lsr #31
   1491c:	ldr	r1, [sp, #60]	; 0x3c
   14920:	adds	r1, r1, ip
   14924:	adc	r2, r2, sl
   14928:	adds	r6, r1, r0
   1492c:	ldr	r1, [sp, #8]
   14930:	adc	lr, r2, r3
   14934:	ldr	r2, [sp, #28]
   14938:	adds	r8, r5, r1
   1493c:	ldr	r1, [sp, #116]	; 0x74
   14940:	adc	r9, r4, r1
   14944:	ldr	r1, [sp, #44]	; 0x2c
   14948:	ldr	r4, [sp, #32]
   1494c:	eor	r1, r2, r1
   14950:	ldr	r2, [sp, #48]	; 0x30
   14954:	eor	r7, r4, r2
   14958:	lsr	r2, r7, #16
   1495c:	lsl	r7, r7, #16
   14960:	orr	r5, r7, r1, lsr #16
   14964:	orr	r2, r2, r1, lsl #16
   14968:	eor	r1, r5, lr
   1496c:	eor	r4, r2, r6
   14970:	str	r1, [sp, #60]	; 0x3c
   14974:	adds	r1, r1, r8
   14978:	str	r4, [sp, #28]
   1497c:	adc	r4, r4, r9
   14980:	eor	r0, r1, r0
   14984:	str	r1, [sp, #32]
   14988:	str	r4, [sp, #44]	; 0x2c
   1498c:	eor	r4, r4, r3
   14990:	lsl	r3, r0, #8
   14994:	lsr	r0, r0, #24
   14998:	orr	r1, r3, r4, lsr #24
   1499c:	orr	r3, r0, r4, lsl #8
   149a0:	ldr	r0, [sp, #208]	; 0xd0
   149a4:	str	r1, [sp, #20]
   149a8:	str	r3, [sp, #24]
   149ac:	adds	r4, r6, r0
   149b0:	ldr	r0, [sp, #192]	; 0xc0
   149b4:	ldr	r6, [sp, #220]	; 0xdc
   149b8:	adc	lr, lr, r0
   149bc:	adds	r0, r4, r3
   149c0:	adc	r1, lr, r1
   149c4:	adds	lr, r0, ip
   149c8:	str	r0, [sp, #16]
   149cc:	str	r1, [sp, #12]
   149d0:	adc	r0, r1, sl
   149d4:	ldr	r1, [sp, #160]	; 0xa0
   149d8:	adds	r1, lr, r1
   149dc:	str	r1, [sp, #80]	; 0x50
   149e0:	ldr	r1, [sp, #164]	; 0xa4
   149e4:	adc	r0, r0, r1
   149e8:	ldr	r1, [sp, #52]	; 0x34
   149ec:	str	r0, [sp, #116]	; 0x74
   149f0:	ldr	r0, [sp, #40]	; 0x28
   149f4:	eor	lr, r9, r0
   149f8:	ldr	r0, [sp, #112]	; 0x70
   149fc:	lsl	r3, lr, #1
   14a00:	eor	r0, r8, r0
   14a04:	orr	r8, r3, r0, lsr #31
   14a08:	lsl	r0, r0, #1
   14a0c:	orr	lr, r0, lr, lsr #31
   14a10:	ldr	r0, [sp, #252]	; 0xfc
   14a14:	adds	r3, r1, r0
   14a18:	ldr	r0, [sp, #224]	; 0xe0
   14a1c:	ldr	r1, [sp, #56]	; 0x38
   14a20:	adc	r0, r1, r0
   14a24:	ldr	r1, [sp, #84]	; 0x54
   14a28:	adds	r3, r3, lr
   14a2c:	adc	r0, r0, r8
   14a30:	str	r1, [sp, #364]	; 0x16c
   14a34:	eor	ip, r0, r1
   14a38:	ldr	r1, [sp, #68]	; 0x44
   14a3c:	str	r2, [sp, #352]	; 0x160
   14a40:	str	r5, [sp, #356]	; 0x164
   14a44:	adds	r9, r2, r1
   14a48:	ldr	r1, [sp, #72]	; 0x48
   14a4c:	adc	r4, r5, r1
   14a50:	ldr	r1, [sp, #120]	; 0x78
   14a54:	str	r1, [sp, #360]	; 0x168
   14a58:	eor	r5, r3, r1
   14a5c:	adds	r1, ip, r9
   14a60:	str	r4, [sp, #324]	; 0x144
   14a64:	str	r9, [sp, #320]	; 0x140
   14a68:	adc	r2, r5, r4
   14a6c:	eor	lr, r1, lr
   14a70:	adds	r3, r3, r6
   14a74:	ldr	r6, [sp, #204]	; 0xcc
   14a78:	eor	r8, r2, r8
   14a7c:	lsr	r7, lr, #24
   14a80:	lsl	sl, lr, #8
   14a84:	orr	r7, r7, r8, lsl #8
   14a88:	orr	sl, sl, r8, lsr #24
   14a8c:	adc	r0, r0, r6
   14a90:	adds	r3, r3, r7
   14a94:	ldr	r6, [sp, #108]	; 0x6c
   14a98:	str	r3, [sp, #64]	; 0x40
   14a9c:	adc	r0, r0, sl
   14aa0:	eor	r3, r3, ip
   14aa4:	ldr	ip, [sp, #104]	; 0x68
   14aa8:	str	r0, [sp, #84]	; 0x54
   14aac:	eor	r0, r0, r5
   14ab0:	lsl	r5, r3, #16
   14ab4:	lsr	r3, r3, #16
   14ab8:	orr	r5, r5, r0, lsr #16
   14abc:	orr	r0, r3, r0, lsl #16
   14ac0:	adds	r1, r0, r1
   14ac4:	str	r0, [sp, #36]	; 0x24
   14ac8:	ldr	r0, [sp, #116]	; 0x74
   14acc:	str	r1, [sp, #72]	; 0x48
   14ad0:	eor	r1, r1, r7
   14ad4:	eor	r0, r0, r5
   14ad8:	str	r0, [sp, #48]	; 0x30
   14adc:	adc	r0, r5, r2
   14ae0:	str	r0, [sp, #76]	; 0x4c
   14ae4:	eor	r0, r0, sl
   14ae8:	lsl	r2, r0, #1
   14aec:	orr	r2, r2, r1, lsr #31
   14af0:	lsl	r1, r1, #1
   14af4:	orr	r0, r1, r0, lsr #31
   14af8:	ldr	r1, [sp, #12]
   14afc:	str	r2, [sp, #120]	; 0x78
   14b00:	ldr	r2, [sp, #16]
   14b04:	str	r0, [sp, #112]	; 0x70
   14b08:	ldr	r0, [sp, #28]
   14b0c:	eor	r0, r1, r0
   14b10:	ldr	r1, [sp, #60]	; 0x3c
   14b14:	eor	r1, r2, r1
   14b18:	lsl	r2, r1, #16
   14b1c:	lsr	r1, r1, #16
   14b20:	orr	r3, r2, r0, lsr #16
   14b24:	orr	r0, r1, r0, lsl #16
   14b28:	ldr	r1, [sp, #32]
   14b2c:	str	r0, [sp, #68]	; 0x44
   14b30:	str	r3, [sp, #60]	; 0x3c
   14b34:	adds	lr, r0, r1
   14b38:	ldr	r0, [sp, #44]	; 0x2c
   14b3c:	ldr	r1, [sp, #24]
   14b40:	str	lr, [sp, #52]	; 0x34
   14b44:	adc	r8, r3, r0
   14b48:	ldr	r0, [sp, #20]
   14b4c:	eor	r1, lr, r1
   14b50:	str	r8, [sp, #56]	; 0x38
   14b54:	eor	r0, r8, r0
   14b58:	lsl	r2, r0, #1
   14b5c:	orr	r7, r2, r1, lsr #31
   14b60:	lsl	r1, r1, #1
   14b64:	orr	r1, r1, r0, lsr #31
   14b68:	ldr	r0, [sp, #132]	; 0x84
   14b6c:	str	r7, [sp, #44]	; 0x2c
   14b70:	str	r1, [sp, #40]	; 0x28
   14b74:	eor	r2, r4, r0
   14b78:	ldr	r0, [sp, #140]	; 0x8c
   14b7c:	eor	r3, r9, r0
   14b80:	lsl	r0, r2, #1
   14b84:	ldr	r9, [sp, #88]	; 0x58
   14b88:	orr	r5, r0, r3, lsr #31
   14b8c:	ldr	r0, [sp, #136]	; 0x88
   14b90:	lsl	r3, r3, #1
   14b94:	orr	sl, r3, r2, lsr #31
   14b98:	ldr	r2, [sp, #92]	; 0x5c
   14b9c:	add	r3, sp, #300	; 0x12c
   14ba0:	str	r5, [sp, #292]	; 0x124
   14ba4:	str	sl, [sp, #288]	; 0x120
   14ba8:	str	ip, [sp, #328]	; 0x148
   14bac:	str	r6, [sp, #332]	; 0x14c
   14bb0:	str	r9, [sp, #372]	; 0x174
   14bb4:	adds	r4, sl, r0
   14bb8:	ldr	r0, [sp, #144]	; 0x90
   14bbc:	str	r2, [sp, #368]	; 0x170
   14bc0:	adc	r0, r5, r0
   14bc4:	str	r0, [sp, #32]
   14bc8:	ldr	r0, [sp, #148]	; 0x94
   14bcc:	str	r0, [sp, #380]	; 0x17c
   14bd0:	ldr	r0, [sp, #152]	; 0x98
   14bd4:	str	r0, [sp, #376]	; 0x178
   14bd8:	ldr	r0, [sp, #124]	; 0x7c
   14bdc:	str	r0, [sp, #336]	; 0x150
   14be0:	ldr	r0, [sp, #128]	; 0x80
   14be4:	str	r0, [sp, #340]	; 0x154
   14be8:	ldr	r0, [sp, #160]	; 0xa0
   14bec:	str	r0, [sp, #296]	; 0x128
   14bf0:	ldr	r0, [sp, #164]	; 0xa4
   14bf4:	str	r8, [sp, #348]	; 0x15c
   14bf8:	str	lr, [sp, #344]	; 0x158
   14bfc:	ldr	r8, [fp, #-128]	; 0xffffff80
   14c00:	stm	r3, {r0, r1, r7}
   14c04:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14c08:	ldr	r0, [sp, #112]	; 0x70
   14c0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   14c10:	str	r8, [sp, #144]	; 0x90
   14c14:	adds	r4, r4, r1
   14c18:	str	r1, [sp, #136]	; 0x88
   14c1c:	ldr	r1, [sp, #32]
   14c20:	str	r0, [sp, #312]	; 0x138
   14c24:	ldr	r0, [sp, #120]	; 0x78
   14c28:	str	r3, [sp, #132]	; 0x84
   14c2c:	eor	r2, r4, r2
   14c30:	adc	r7, r1, r3
   14c34:	str	r0, [sp, #316]	; 0x13c
   14c38:	ldr	r0, [fp, #-124]	; 0xffffff84
   14c3c:	eor	r9, r7, r9
   14c40:	adds	ip, r9, ip
   14c44:	adc	lr, r2, r6
   14c48:	eor	sl, ip, sl
   14c4c:	adds	r4, r8, r4
   14c50:	eor	r3, lr, r5
   14c54:	lsl	r6, sl, #8
   14c58:	str	r0, [sp, #140]	; 0x8c
   14c5c:	orr	r1, r6, r3, lsr #24
   14c60:	lsr	r6, sl, #24
   14c64:	orr	r5, r6, r3, lsl #8
   14c68:	adc	r6, r0, r7
   14c6c:	str	r1, [sp, #28]
   14c70:	adds	r0, r4, r5
   14c74:	adc	r3, r6, r1
   14c78:	eor	r6, r0, r9
   14c7c:	str	r0, [sp, #24]
   14c80:	ldr	r1, [sp, #220]	; 0xdc
   14c84:	eor	r4, r3, r2
   14c88:	lsl	r2, r6, #16
   14c8c:	lsr	r6, r6, #16
   14c90:	str	r3, [sp, #88]	; 0x58
   14c94:	ldr	r3, [sp, #80]	; 0x50
   14c98:	orr	r8, r6, r4, lsl #16
   14c9c:	orr	r0, r2, r4, lsr #16
   14ca0:	ldr	r2, [sp, #48]	; 0x30
   14ca4:	adds	r4, r8, ip
   14ca8:	str	r0, [sp, #32]
   14cac:	adc	ip, r0, lr
   14cb0:	ldr	r0, [sp, #36]	; 0x24
   14cb4:	adds	r9, r4, r2
   14cb8:	eor	r7, r3, r0
   14cbc:	ldr	r0, [sp, #164]	; 0xa4
   14cc0:	adc	lr, ip, r7
   14cc4:	eor	r6, lr, r0
   14cc8:	ldr	r0, [sp, #160]	; 0xa0
   14ccc:	eor	r0, r9, r0
   14cd0:	lsl	sl, r0, #8
   14cd4:	lsr	r0, r0, #24
   14cd8:	orr	sl, sl, r6, lsr #24
   14cdc:	orr	r0, r0, r6, lsl #8
   14ce0:	adds	r6, r3, r1
   14ce4:	ldr	r1, [sp, #204]	; 0xcc
   14ce8:	ldr	r3, [sp, #116]	; 0x74
   14cec:	adc	r1, r3, r1
   14cf0:	adds	r3, r6, r0
   14cf4:	adc	r1, r1, sl
   14cf8:	eor	r6, r3, r2
   14cfc:	str	r3, [sp, #104]	; 0x68
   14d00:	str	r1, [sp, #108]	; 0x6c
   14d04:	eor	r1, r1, r7
   14d08:	lsl	r7, r6, #16
   14d0c:	lsr	r6, r6, #16
   14d10:	orr	r3, r7, r1, lsr #16
   14d14:	orr	r1, r6, r1, lsl #16
   14d18:	adds	r7, r1, r9
   14d1c:	str	r1, [sp, #92]	; 0x5c
   14d20:	str	r3, [sp, #80]	; 0x50
   14d24:	adc	r1, r3, lr
   14d28:	str	r7, [sp, #160]	; 0xa0
   14d2c:	eor	r0, r7, r0
   14d30:	ldr	r3, [sp, #96]	; 0x60
   14d34:	str	r1, [sp, #164]	; 0xa4
   14d38:	eor	r1, r1, sl
   14d3c:	lsl	r7, r1, #1
   14d40:	orr	lr, r7, r0, lsr #31
   14d44:	lsl	r0, r0, #1
   14d48:	ldr	r7, [sp, #100]	; 0x64
   14d4c:	orr	r9, r0, r1, lsr #31
   14d50:	ldr	r0, [sp, #28]
   14d54:	eor	r1, r4, r5
   14d58:	ldr	r5, [sp, #40]	; 0x28
   14d5c:	str	lr, [sp, #12]
   14d60:	str	r9, [sp, #116]	; 0x74
   14d64:	eor	r0, ip, r0
   14d68:	lsl	r2, r0, #1
   14d6c:	orr	r2, r2, r1, lsr #31
   14d70:	lsl	r1, r1, #1
   14d74:	orr	r0, r1, r0, lsr #31
   14d78:	ldr	r1, [sp, #252]	; 0xfc
   14d7c:	adds	r1, r3, r1
   14d80:	ldr	r3, [sp, #224]	; 0xe0
   14d84:	adc	r3, r7, r3
   14d88:	adds	ip, r1, r0
   14d8c:	ldr	r1, [sp, #60]	; 0x3c
   14d90:	ldr	r7, [sp, #72]	; 0x48
   14d94:	adc	r3, r3, r2
   14d98:	eor	r6, r3, r1
   14d9c:	ldr	r1, [sp, #68]	; 0x44
   14da0:	str	r6, [sp, #100]	; 0x64
   14da4:	adds	r6, r6, r7
   14da8:	ldr	r7, [sp, #76]	; 0x4c
   14dac:	eor	r0, r6, r0
   14db0:	str	r6, [sp, #60]	; 0x3c
   14db4:	lsl	r6, r0, #8
   14db8:	lsr	r0, r0, #24
   14dbc:	eor	r1, ip, r1
   14dc0:	adc	r7, r1, r7
   14dc4:	str	r1, [sp, #96]	; 0x60
   14dc8:	ldr	r1, [sp, #132]	; 0x84
   14dcc:	eor	r2, r7, r2
   14dd0:	str	r7, [sp, #68]	; 0x44
   14dd4:	orr	r7, r6, r2, lsr #24
   14dd8:	orr	r2, r0, r2, lsl #8
   14ddc:	ldr	r0, [sp, #136]	; 0x88
   14de0:	ldr	r6, [sp, #44]	; 0x2c
   14de4:	str	r2, [sp, #76]	; 0x4c
   14de8:	str	r7, [sp, #72]	; 0x48
   14dec:	adds	r0, ip, r0
   14df0:	adc	r1, r3, r1
   14df4:	adds	r2, r0, r2
   14df8:	ldr	r0, [sp, #188]	; 0xbc
   14dfc:	adc	r3, r1, r7
   14e00:	ldr	r1, [sp, #184]	; 0xb8
   14e04:	str	r2, [sp, #48]	; 0x30
   14e08:	ldr	r7, [sp, #124]	; 0x7c
   14e0c:	str	r3, [sp, #36]	; 0x24
   14e10:	adds	r0, r9, r0
   14e14:	adc	r1, lr, r1
   14e18:	adds	r0, r0, r2
   14e1c:	ldr	r2, [sp, #84]	; 0x54
   14e20:	str	r0, [sp, #8]
   14e24:	adc	r0, r1, r3
   14e28:	ldr	r1, [sp, #64]	; 0x40
   14e2c:	str	r0, [sp, #4]
   14e30:	ldr	r0, [sp, #172]	; 0xac
   14e34:	adds	r0, r1, r0
   14e38:	ldr	r1, [sp, #168]	; 0xa8
   14e3c:	adc	r1, r2, r1
   14e40:	ldr	r2, [sp, #32]
   14e44:	adds	r0, r0, r5
   14e48:	adc	r1, r1, r6
   14e4c:	eor	r3, r8, r0
   14e50:	eor	r2, r2, r1
   14e54:	adds	sl, r2, r7
   14e58:	ldr	r7, [sp, #128]	; 0x80
   14e5c:	eor	r5, sl, r5
   14e60:	lsl	r4, r5, #8
   14e64:	lsr	r5, r5, #24
   14e68:	adc	ip, r3, r7
   14e6c:	ldr	r7, [sp, #236]	; 0xec
   14e70:	eor	r8, ip, r6
   14e74:	orr	r5, r5, r8, lsl #8
   14e78:	orr	r4, r4, r8, lsr #24
   14e7c:	adds	r0, r0, r7
   14e80:	ldr	r7, [sp, #248]	; 0xf8
   14e84:	str	r5, [sp, #20]
   14e88:	str	r4, [sp, #16]
   14e8c:	adc	r1, r1, r7
   14e90:	adds	r7, r0, r5
   14e94:	ldr	r5, [sp, #112]	; 0x70
   14e98:	adc	r0, r1, r4
   14e9c:	eor	r1, r7, r2
   14ea0:	str	r7, [sp, #28]
   14ea4:	ldr	r7, [sp, #120]	; 0x78
   14ea8:	str	r0, [sp, #32]
   14eac:	lsl	r2, r1, #16
   14eb0:	eor	r0, r0, r3
   14eb4:	lsr	r1, r1, #16
   14eb8:	orr	r2, r2, r0, lsr #16
   14ebc:	orr	r0, r1, r0, lsl #16
   14ec0:	ldr	r1, [sp, #176]	; 0xb0
   14ec4:	adds	lr, r0, sl
   14ec8:	str	r0, [sp, #44]	; 0x2c
   14ecc:	ldr	r0, [sp, #180]	; 0xb4
   14ed0:	str	r2, [sp, #40]	; 0x28
   14ed4:	adc	r6, r2, ip
   14ed8:	ldr	r2, [sp, #24]
   14edc:	adds	r0, r5, r0
   14ee0:	adc	r1, r7, r1
   14ee4:	adds	r2, r0, r2
   14ee8:	ldr	r0, [sp, #88]	; 0x58
   14eec:	adc	r1, r1, r0
   14ef0:	ldr	r0, [sp, #148]	; 0x94
   14ef4:	eor	ip, r1, r0
   14ef8:	ldr	r0, [sp, #152]	; 0x98
   14efc:	eor	r3, r2, r0
   14f00:	ldr	r0, [sp, #52]	; 0x34
   14f04:	adds	r4, ip, r0
   14f08:	ldr	r0, [sp, #56]	; 0x38
   14f0c:	str	r4, [sp, #24]
   14f10:	adc	r0, r3, r0
   14f14:	str	r0, [sp, #52]	; 0x34
   14f18:	eor	sl, r0, r7
   14f1c:	eor	r0, r4, r5
   14f20:	lsl	r8, r0, #8
   14f24:	lsr	r0, r0, #24
   14f28:	orr	r5, r0, sl, lsl #8
   14f2c:	ldr	r0, [sp, #232]	; 0xe8
   14f30:	orr	r7, r8, sl, lsr #24
   14f34:	mov	r8, lr
   14f38:	str	r7, [sp, #148]	; 0x94
   14f3c:	str	r5, [sp, #152]	; 0x98
   14f40:	adds	r0, r2, r0
   14f44:	ldr	r2, [sp, #228]	; 0xe4
   14f48:	adc	r1, r1, r2
   14f4c:	adds	r2, r0, r5
   14f50:	adc	r0, r1, r7
   14f54:	str	r2, [sp, #56]	; 0x38
   14f58:	eor	r2, r2, ip
   14f5c:	ldr	ip, [sp, #4]
   14f60:	ldr	r7, [sp, #8]
   14f64:	str	r0, [sp, #64]	; 0x40
   14f68:	lsr	r1, r2, #16
   14f6c:	eor	r0, r0, r3
   14f70:	lsl	r2, r2, #16
   14f74:	orr	r5, r2, r0, lsr #16
   14f78:	orr	r9, r1, r0, lsl #16
   14f7c:	ldr	r0, [sp, #12]
   14f80:	eor	r2, ip, r5
   14f84:	eor	r3, r7, r9
   14f88:	adds	lr, r2, lr
   14f8c:	adc	r4, r3, r6
   14f90:	eor	r1, r4, r0
   14f94:	ldr	r0, [sp, #116]	; 0x74
   14f98:	eor	r0, lr, r0
   14f9c:	lsl	sl, r0, #8
   14fa0:	lsr	r0, r0, #24
   14fa4:	orr	sl, sl, r1, lsr #24
   14fa8:	orr	r0, r0, r1, lsl #8
   14fac:	ldr	r1, [sp, #208]	; 0xd0
   14fb0:	adds	r1, r7, r1
   14fb4:	ldr	r7, [sp, #192]	; 0xc0
   14fb8:	adc	ip, ip, r7
   14fbc:	adds	r7, r1, r0
   14fc0:	adc	r1, ip, sl
   14fc4:	eor	r2, r7, r2
   14fc8:	str	r7, [sp, #84]	; 0x54
   14fcc:	eor	ip, r1, r3
   14fd0:	lsl	r3, r2, #16
   14fd4:	lsr	r2, r2, #16
   14fd8:	str	r1, [sp, #88]	; 0x58
   14fdc:	orr	r1, r2, ip, lsl #16
   14fe0:	orr	r3, r3, ip, lsr #16
   14fe4:	adds	r2, r1, lr
   14fe8:	str	r1, [sp, #128]	; 0x80
   14fec:	str	r3, [sp, #124]	; 0x7c
   14ff0:	adc	r1, r3, r4
   14ff4:	str	r2, [sp, #116]	; 0x74
   14ff8:	eor	r0, r2, r0
   14ffc:	ldr	r3, [sp, #216]	; 0xd8
   15000:	ldr	r4, [sp, #212]	; 0xd4
   15004:	str	r1, [sp, #120]	; 0x78
   15008:	eor	r1, r1, sl
   1500c:	lsl	r2, r1, #1
   15010:	orr	r2, r2, r0, lsr #31
   15014:	lsl	r0, r0, #1
   15018:	orr	r0, r0, r1, lsr #31
   1501c:	ldr	r1, [sp, #20]
   15020:	str	r2, [sp, #172]	; 0xac
   15024:	str	r0, [sp, #168]	; 0xa8
   15028:	ldr	r0, [sp, #16]
   1502c:	eor	r1, r8, r1
   15030:	eor	r0, r6, r0
   15034:	lsl	r2, r0, #1
   15038:	orr	lr, r2, r1, lsr #31
   1503c:	lsl	r1, r1, #1
   15040:	orr	r6, r1, r0, lsr #31
   15044:	ldr	r0, [sp, #104]	; 0x68
   15048:	ldr	r1, [sp, #108]	; 0x6c
   1504c:	adds	r0, r0, r3
   15050:	adc	r1, r1, r4
   15054:	adds	ip, r0, r6
   15058:	ldr	r0, [sp, #24]
   1505c:	adc	r8, r1, lr
   15060:	ldr	r1, [sp, #36]	; 0x24
   15064:	adds	r7, r9, r0
   15068:	ldr	r0, [sp, #52]	; 0x34
   1506c:	str	r7, [sp, #16]
   15070:	adc	r2, r5, r0
   15074:	ldr	r0, [sp, #96]	; 0x60
   15078:	ldr	r5, [sp, #48]	; 0x30
   1507c:	str	r2, [sp, #12]
   15080:	eor	r1, r1, r0
   15084:	ldr	r0, [sp, #100]	; 0x64
   15088:	eor	r5, r5, r0
   1508c:	lsr	r0, r5, #16
   15090:	lsl	r5, r5, #16
   15094:	orr	r0, r0, r1, lsl #16
   15098:	orr	r1, r5, r1, lsr #16
   1509c:	eor	r5, r1, r8
   150a0:	str	r1, [sp, #20]
   150a4:	eor	r1, r0, ip
   150a8:	str	r0, [sp, #24]
   150ac:	adds	sl, r5, r7
   150b0:	adc	r9, r1, r2
   150b4:	eor	r6, sl, r6
   150b8:	lsl	r0, r6, #8
   150bc:	eor	r7, r9, lr
   150c0:	lsr	r6, r6, #24
   150c4:	orr	lr, r0, r7, lsr #24
   150c8:	ldr	r0, [sp, #200]	; 0xc8
   150cc:	orr	r6, r6, r7, lsl #8
   150d0:	ldr	r7, [sp, #196]	; 0xc4
   150d4:	adds	r0, ip, r0
   150d8:	adc	r2, r8, r7
   150dc:	adds	r7, r0, r6
   150e0:	adc	r2, r2, lr
   150e4:	adds	r3, r7, r3
   150e8:	adc	r0, r2, r4
   150ec:	ldr	r4, [sp, #168]	; 0xa8
   150f0:	adds	r3, r3, r4
   150f4:	str	r3, [sp, #36]	; 0x24
   150f8:	ldr	r3, [sp, #172]	; 0xac
   150fc:	adc	r0, r0, r3
   15100:	str	r0, [sp, #96]	; 0x60
   15104:	eor	r0, r2, r1
   15108:	eor	r2, r7, r5
   1510c:	ldr	r7, [sp, #32]
   15110:	lsl	r3, r2, #16
   15114:	lsr	r2, r2, #16
   15118:	orr	r3, r3, r0, lsr #16
   1511c:	orr	r0, r2, r0, lsl #16
   15120:	adds	r1, r0, sl
   15124:	str	r0, [sp, #52]	; 0x34
   15128:	str	r3, [sp, #48]	; 0x30
   1512c:	ldr	sl, [sp, #160]	; 0xa0
   15130:	adc	r0, r3, r9
   15134:	str	r1, [sp, #108]	; 0x6c
   15138:	eor	r1, r1, r6
   1513c:	ldr	r9, [sp, #44]	; 0x2c
   15140:	str	r0, [sp, #112]	; 0x70
   15144:	eor	r0, r0, lr
   15148:	lsl	r2, r0, #1
   1514c:	orr	r2, r2, r1, lsr #31
   15150:	lsl	r1, r1, #1
   15154:	orr	r0, r1, r0, lsr #31
   15158:	ldr	r1, [sp, #12]
   1515c:	str	r2, [sp, #104]	; 0x68
   15160:	ldr	r2, [sp, #16]
   15164:	str	r0, [sp, #100]	; 0x64
   15168:	ldr	r0, [sp, #148]	; 0x94
   1516c:	eor	r0, r1, r0
   15170:	ldr	r1, [sp, #152]	; 0x98
   15174:	eor	r1, r2, r1
   15178:	lsl	r2, r0, #1
   1517c:	orr	r3, r2, r1, lsr #31
   15180:	lsl	r1, r1, #1
   15184:	ldr	r2, [sp, #28]
   15188:	orr	r0, r1, r0, lsr #31
   1518c:	ldr	r1, [sp, #144]	; 0x90
   15190:	adds	r1, r2, r1
   15194:	ldr	r2, [sp, #140]	; 0x8c
   15198:	adc	r2, r7, r2
   1519c:	adds	ip, r1, r0
   151a0:	ldr	r1, [sp, #80]	; 0x50
   151a4:	adc	r7, r2, r3
   151a8:	ldr	r2, [sp, #24]
   151ac:	str	r1, [sp, #364]	; 0x16c
   151b0:	eor	lr, r7, r1
   151b4:	ldr	r1, [sp, #60]	; 0x3c
   151b8:	str	r2, [sp, #352]	; 0x160
   151bc:	adds	r6, r2, r1
   151c0:	ldr	r2, [sp, #20]
   151c4:	ldr	r1, [sp, #68]	; 0x44
   151c8:	adc	r1, r2, r1
   151cc:	str	r2, [sp, #356]	; 0x164
   151d0:	ldr	r2, [sp, #92]	; 0x5c
   151d4:	adds	r5, lr, r6
   151d8:	eor	r0, r5, r0
   151dc:	str	r5, [sp, #80]	; 0x50
   151e0:	lsl	r5, r0, #8
   151e4:	lsr	r0, r0, #24
   151e8:	str	r2, [sp, #360]	; 0x168
   151ec:	eor	r2, ip, r2
   151f0:	str	r1, [sp, #324]	; 0x144
   151f4:	str	r6, [sp, #320]	; 0x140
   151f8:	adc	r4, r2, r1
   151fc:	eor	r3, r4, r3
   15200:	str	r4, [sp, #92]	; 0x5c
   15204:	orr	r4, r5, r3, lsr #24
   15208:	orr	r5, r0, r3, lsl #8
   1520c:	adds	r0, r5, ip
   15210:	mov	ip, r4
   15214:	str	r0, [sp, #68]	; 0x44
   15218:	ldr	r0, [sp, #72]	; 0x48
   1521c:	adc	r7, r4, r7
   15220:	ldr	r4, [sp, #40]	; 0x28
   15224:	eor	r1, r1, r0
   15228:	ldr	r0, [sp, #76]	; 0x4c
   1522c:	eor	r3, r6, r0
   15230:	lsl	r0, r1, #1
   15234:	ldr	r6, [sp, #68]	; 0x44
   15238:	orr	r8, r0, r3, lsr #31
   1523c:	ldr	r0, [sp, #164]	; 0xa4
   15240:	lsl	r3, r3, #1
   15244:	orr	r3, r3, r1, lsr #31
   15248:	ldr	r1, [fp, #-156]	; 0xffffff64
   1524c:	str	r8, [sp, #292]	; 0x124
   15250:	str	r3, [sp, #288]	; 0x120
   15254:	str	sl, [sp, #328]	; 0x148
   15258:	str	r0, [sp, #332]	; 0x14c
   1525c:	ldr	r0, [sp, #124]	; 0x7c
   15260:	str	r4, [sp, #372]	; 0x174
   15264:	str	r9, [sp, #368]	; 0x170
   15268:	str	r1, [sp, #148]	; 0x94
   1526c:	str	r0, [sp, #380]	; 0x17c
   15270:	ldr	r0, [sp, #128]	; 0x80
   15274:	str	r0, [sp, #376]	; 0x178
   15278:	ldr	r0, [sp, #116]	; 0x74
   1527c:	str	r0, [sp, #336]	; 0x150
   15280:	ldr	r0, [sp, #120]	; 0x78
   15284:	str	r0, [sp, #340]	; 0x154
   15288:	ldr	r0, [sp, #168]	; 0xa8
   1528c:	str	r0, [sp, #296]	; 0x128
   15290:	ldr	r0, [sp, #172]	; 0xac
   15294:	str	r0, [sp, #300]	; 0x12c
   15298:	ldr	r0, [sp, #108]	; 0x6c
   1529c:	str	r0, [sp, #344]	; 0x158
   152a0:	ldr	r0, [sp, #112]	; 0x70
   152a4:	str	r0, [sp, #348]	; 0x15c
   152a8:	ldr	r0, [sp, #100]	; 0x64
   152ac:	str	r0, [sp, #304]	; 0x130
   152b0:	ldr	r0, [sp, #104]	; 0x68
   152b4:	str	r0, [sp, #308]	; 0x134
   152b8:	ldr	r0, [fp, #-160]	; 0xffffff60
   152bc:	str	r0, [sp, #152]	; 0x98
   152c0:	adds	r0, r6, r0
   152c4:	adc	r1, r7, r1
   152c8:	str	r0, [sp, #28]
   152cc:	str	r1, [sp, #32]
   152d0:	eor	r1, r1, r2
   152d4:	eor	r2, r0, lr
   152d8:	ldr	r0, [sp, #80]	; 0x50
   152dc:	lsl	r7, r2, #16
   152e0:	lsr	r2, r2, #16
   152e4:	orr	r6, r7, r1, lsr #16
   152e8:	orr	r1, r2, r1, lsl #16
   152ec:	adds	r2, r1, r0
   152f0:	ldr	r0, [sp, #96]	; 0x60
   152f4:	str	r1, [sp, #76]	; 0x4c
   152f8:	eor	r5, r2, r5
   152fc:	str	r2, [sp, #68]	; 0x44
   15300:	ldr	r2, [sp, #64]	; 0x40
   15304:	eor	r0, r6, r0
   15308:	str	r0, [sp, #80]	; 0x50
   1530c:	ldr	r0, [sp, #92]	; 0x5c
   15310:	adc	r0, r6, r0
   15314:	eor	r1, r0, ip
   15318:	str	r0, [sp, #72]	; 0x48
   1531c:	ldr	r0, [sp, #244]	; 0xf4
   15320:	lsl	r6, r1, #1
   15324:	orr	lr, r6, r5, lsr #31
   15328:	lsl	r5, r5, #1
   1532c:	orr	ip, r5, r1, lsr #31
   15330:	ldr	r1, [sp, #56]	; 0x38
   15334:	str	lr, [sp, #24]
   15338:	str	lr, [sp, #316]	; 0x13c
   1533c:	str	ip, [sp, #20]
   15340:	str	ip, [sp, #312]	; 0x138
   15344:	adds	r1, r1, r0
   15348:	ldr	r0, [sp, #240]	; 0xf0
   1534c:	adc	r5, r2, r0
   15350:	adds	r6, r1, r3
   15354:	ldr	r0, [sp, #164]	; 0xa4
   15358:	adc	r5, r5, r8
   1535c:	eor	r1, r5, r4
   15360:	eor	r4, r6, r9
   15364:	adds	sl, r1, sl
   15368:	adc	r2, r4, r0
   1536c:	eor	r3, sl, r3
   15370:	lsl	r7, r3, #8
   15374:	eor	r0, r2, r8
   15378:	lsr	r3, r3, #24
   1537c:	orr	r9, r3, r0, lsl #8
   15380:	orr	r7, r7, r0, lsr #24
   15384:	adds	r0, r9, r6
   15388:	ldr	r6, [fp, #-96]	; 0xffffffa0
   1538c:	str	r7, [sp, #56]	; 0x38
   15390:	adc	r5, r7, r5
   15394:	ldr	r7, [fp, #-92]	; 0xffffffa4
   15398:	str	r6, [sp, #164]	; 0xa4
   1539c:	adds	r6, r0, r6
   153a0:	adc	r0, r5, r7
   153a4:	eor	r1, r6, r1
   153a8:	str	r7, [sp, #160]	; 0xa0
   153ac:	ldr	r5, [sp, #36]	; 0x24
   153b0:	str	r6, [sp, #16]
   153b4:	str	r0, [sp, #40]	; 0x28
   153b8:	eor	r0, r0, r4
   153bc:	lsl	r4, r1, #16
   153c0:	lsr	r1, r1, #16
   153c4:	orr	ip, r1, r0, lsl #16
   153c8:	orr	r7, r4, r0, lsr #16
   153cc:	ldr	r0, [sp, #76]	; 0x4c
   153d0:	adds	sl, ip, sl
   153d4:	str	r7, [sp, #44]	; 0x2c
   153d8:	adc	r3, r7, r2
   153dc:	ldr	r2, [sp, #80]	; 0x50
   153e0:	eor	r7, r0, r5
   153e4:	ldr	r0, [sp, #172]	; 0xac
   153e8:	adds	r6, sl, r2
   153ec:	adc	lr, r3, r7
   153f0:	eor	r1, lr, r0
   153f4:	ldr	r0, [sp, #168]	; 0xa8
   153f8:	eor	r4, r6, r0
   153fc:	ldr	r0, [sp, #252]	; 0xfc
   15400:	lsl	r8, r4, #8
   15404:	lsr	r4, r4, #24
   15408:	orr	r8, r8, r1, lsr #24
   1540c:	orr	r1, r4, r1, lsl #8
   15410:	adds	r4, r5, r0
   15414:	ldr	r0, [sp, #224]	; 0xe0
   15418:	ldr	r5, [sp, #96]	; 0x60
   1541c:	adc	r0, r5, r0
   15420:	adds	r4, r4, r1
   15424:	ldr	r5, [sp, #68]	; 0x44
   15428:	str	r4, [sp, #60]	; 0x3c
   1542c:	adc	r0, r0, r8
   15430:	eor	r4, r4, r2
   15434:	str	r0, [sp, #64]	; 0x40
   15438:	eor	r0, r0, r7
   1543c:	lsl	r7, r4, #16
   15440:	lsr	r4, r4, #16
   15444:	orr	r7, r7, r0, lsr #16
   15448:	orr	r0, r4, r0, lsl #16
   1544c:	adds	r4, r0, r6
   15450:	str	r0, [sp, #80]	; 0x50
   15454:	str	r7, [sp, #76]	; 0x4c
   15458:	adc	r0, r7, lr
   1545c:	eor	r1, r4, r1
   15460:	str	r4, [sp, #92]	; 0x5c
   15464:	str	r0, [sp, #96]	; 0x60
   15468:	eor	r0, r0, r8
   1546c:	lsl	r7, r0, #1
   15470:	orr	lr, r7, r1, lsr #31
   15474:	lsl	r1, r1, #1
   15478:	ldr	r7, [sp, #88]	; 0x58
   1547c:	orr	r4, r1, r0, lsr #31
   15480:	ldr	r0, [sp, #56]	; 0x38
   15484:	eor	r1, sl, r9
   15488:	str	lr, [sp, #168]	; 0xa8
   1548c:	str	r4, [sp, #172]	; 0xac
   15490:	eor	r0, r3, r0
   15494:	ldr	r3, [sp, #84]	; 0x54
   15498:	lsl	r2, r0, #1
   1549c:	orr	r2, r2, r1, lsr #31
   154a0:	lsl	r1, r1, #1
   154a4:	orr	r0, r1, r0, lsr #31
   154a8:	ldr	r1, [sp, #136]	; 0x88
   154ac:	adds	r1, r3, r1
   154b0:	ldr	r3, [sp, #132]	; 0x84
   154b4:	adc	r3, r7, r3
   154b8:	ldr	r7, [sp, #48]	; 0x30
   154bc:	adds	r1, r1, r0
   154c0:	adc	r3, r3, r2
   154c4:	eor	r6, r3, r7
   154c8:	ldr	r7, [sp, #52]	; 0x34
   154cc:	str	r6, [sp, #56]	; 0x38
   154d0:	adds	r6, r6, r5
   154d4:	ldr	r5, [sp, #72]	; 0x48
   154d8:	eor	r0, r6, r0
   154dc:	str	r6, [sp, #68]	; 0x44
   154e0:	ldr	r6, [sp, #104]	; 0x68
   154e4:	eor	r7, r1, r7
   154e8:	str	r7, [sp, #52]	; 0x34
   154ec:	adc	r7, r7, r5
   154f0:	str	r7, [sp, #72]	; 0x48
   154f4:	eor	r2, r7, r2
   154f8:	lsl	r7, r0, #8
   154fc:	lsr	r0, r0, #24
   15500:	orr	r7, r7, r2, lsr #24
   15504:	orr	r2, r0, r2, lsl #8
   15508:	ldr	r0, [sp, #152]	; 0x98
   1550c:	str	r2, [sp, #88]	; 0x58
   15510:	str	r7, [sp, #84]	; 0x54
   15514:	adds	r0, r1, r0
   15518:	ldr	r1, [sp, #148]	; 0x94
   1551c:	adc	r1, r3, r1
   15520:	adds	r2, r0, r2
   15524:	ldr	r0, [sp, #232]	; 0xe8
   15528:	adc	r3, r1, r7
   1552c:	ldr	r1, [sp, #228]	; 0xe4
   15530:	str	r2, [sp, #48]	; 0x30
   15534:	ldr	r7, [sp, #116]	; 0x74
   15538:	str	r3, [sp, #36]	; 0x24
   1553c:	adds	r0, r4, r0
   15540:	ldr	r4, [sp, #100]	; 0x64
   15544:	adc	r1, lr, r1
   15548:	adds	r0, r0, r2
   1554c:	ldr	r2, [sp, #28]
   15550:	str	r0, [sp, #136]	; 0x88
   15554:	ldr	r0, [sp, #188]	; 0xbc
   15558:	adc	lr, r1, r3
   1555c:	ldr	r1, [sp, #184]	; 0xb8
   15560:	adds	r0, r4, r0
   15564:	adc	r1, r6, r1
   15568:	adds	r0, r0, r2
   1556c:	ldr	r2, [sp, #32]
   15570:	eor	r3, ip, r0
   15574:	adc	r1, r1, r2
   15578:	ldr	r2, [sp, #44]	; 0x2c
   1557c:	eor	r2, r2, r1
   15580:	adds	r8, r2, r7
   15584:	ldr	r7, [sp, #120]	; 0x78
   15588:	adc	ip, r3, r7
   1558c:	eor	r7, r8, r4
   15590:	eor	r5, ip, r6
   15594:	lsl	r6, r7, #8
   15598:	lsr	r7, r7, #24
   1559c:	orr	r4, r6, r5, lsr #24
   155a0:	orr	r5, r7, r5, lsl #8
   155a4:	ldr	r7, [sp, #144]	; 0x90
   155a8:	ldr	r6, [sp, #20]
   155ac:	str	r4, [sp, #28]
   155b0:	str	r5, [sp, #32]
   155b4:	adds	r0, r0, r7
   155b8:	ldr	r7, [sp, #140]	; 0x8c
   155bc:	adc	r1, r1, r7
   155c0:	adds	r7, r0, r5
   155c4:	ldr	r5, [sp, #136]	; 0x88
   155c8:	adc	r0, r1, r4
   155cc:	eor	r1, r7, r2
   155d0:	str	r7, [sp, #44]	; 0x2c
   155d4:	ldr	r7, [sp, #24]
   155d8:	str	r0, [sp, #120]	; 0x78
   155dc:	lsl	r2, r1, #16
   155e0:	eor	r0, r0, r3
   155e4:	lsr	r1, r1, #16
   155e8:	orr	r2, r2, r0, lsr #16
   155ec:	orr	r0, r1, r0, lsl #16
   155f0:	ldr	r1, [sp, #196]	; 0xc4
   155f4:	adds	sl, r0, r8
   155f8:	str	r0, [sp, #104]	; 0x68
   155fc:	ldr	r0, [sp, #200]	; 0xc8
   15600:	str	r2, [sp, #100]	; 0x64
   15604:	adc	r9, r2, ip
   15608:	ldr	r2, [sp, #16]
   1560c:	adds	r0, r6, r0
   15610:	adc	r1, r7, r1
   15614:	adds	r2, r0, r2
   15618:	ldr	r0, [sp, #40]	; 0x28
   1561c:	adc	r1, r1, r0
   15620:	ldr	r0, [sp, #124]	; 0x7c
   15624:	eor	ip, r1, r0
   15628:	ldr	r0, [sp, #128]	; 0x80
   1562c:	eor	r3, r2, r0
   15630:	ldr	r0, [sp, #108]	; 0x6c
   15634:	adds	r4, ip, r0
   15638:	ldr	r0, [sp, #112]	; 0x70
   1563c:	str	r4, [sp, #12]
   15640:	adc	r0, r3, r0
   15644:	str	r0, [sp, #16]
   15648:	eor	r7, r0, r7
   1564c:	eor	r0, r4, r6
   15650:	lsl	r6, r0, #8
   15654:	lsr	r0, r0, #24
   15658:	orr	r6, r6, r7, lsr #24
   1565c:	orr	r7, r0, r7, lsl #8
   15660:	ldr	r0, [sp, #244]	; 0xf4
   15664:	str	r6, [sp, #40]	; 0x28
   15668:	str	r7, [sp, #108]	; 0x6c
   1566c:	adds	r0, r2, r0
   15670:	ldr	r2, [sp, #240]	; 0xf0
   15674:	adc	r1, r1, r2
   15678:	adds	r2, r0, r7
   1567c:	str	r2, [sp, #124]	; 0x7c
   15680:	adc	r0, r1, r6
   15684:	eor	r2, r2, ip
   15688:	mov	ip, lr
   1568c:	str	r0, [sp, #128]	; 0x80
   15690:	lsr	r1, r2, #16
   15694:	eor	r0, r0, r3
   15698:	lsl	r2, r2, #16
   1569c:	orr	r4, r2, r0, lsr #16
   156a0:	orr	r8, r1, r0, lsl #16
   156a4:	ldr	r0, [sp, #168]	; 0xa8
   156a8:	eor	r2, lr, r4
   156ac:	eor	r3, r5, r8
   156b0:	adds	r6, r2, sl
   156b4:	adc	lr, r3, r9
   156b8:	eor	r1, lr, r0
   156bc:	ldr	r0, [sp, #172]	; 0xac
   156c0:	eor	r0, r6, r0
   156c4:	lsl	r7, r0, #8
   156c8:	lsr	r0, r0, #24
   156cc:	orr	r7, r7, r1, lsr #24
   156d0:	orr	r0, r0, r1, lsl #8
   156d4:	ldr	r1, [sp, #220]	; 0xdc
   156d8:	adds	r1, r5, r1
   156dc:	ldr	r5, [sp, #204]	; 0xcc
   156e0:	adc	ip, ip, r5
   156e4:	adds	r5, r1, r0
   156e8:	adc	r1, ip, r7
   156ec:	eor	r2, r5, r2
   156f0:	str	r5, [sp, #112]	; 0x70
   156f4:	ldr	r5, [sp, #64]	; 0x40
   156f8:	eor	ip, r1, r3
   156fc:	lsl	r3, r2, #16
   15700:	lsr	r2, r2, #16
   15704:	str	r1, [sp, #116]	; 0x74
   15708:	orr	r1, r2, ip, lsl #16
   1570c:	orr	r3, r3, ip, lsr #16
   15710:	adds	r2, r1, r6
   15714:	str	r1, [sp, #172]	; 0xac
   15718:	str	r3, [sp, #168]	; 0xa8
   1571c:	ldr	r6, [sp, #48]	; 0x30
   15720:	adc	r1, r3, lr
   15724:	str	r2, [sp, #140]	; 0x8c
   15728:	eor	r0, r2, r0
   1572c:	ldr	r3, [sp, #60]	; 0x3c
   15730:	str	r1, [sp, #144]	; 0x90
   15734:	eor	r1, r1, r7
   15738:	lsl	r2, r1, #1
   1573c:	orr	ip, r2, r0, lsr #31
   15740:	lsl	r0, r0, #1
   15744:	orr	lr, r0, r1, lsr #31
   15748:	ldr	r0, [sp, #28]
   1574c:	ldr	r1, [sp, #32]
   15750:	str	ip, [sp, #132]	; 0x84
   15754:	str	lr, [sp, #136]	; 0x88
   15758:	eor	r0, r9, r0
   1575c:	eor	r1, sl, r1
   15760:	lsl	r2, r0, #1
   15764:	orr	r2, r2, r1, lsr #31
   15768:	lsl	r1, r1, #1
   1576c:	orr	r0, r1, r0, lsr #31
   15770:	ldr	r1, [sp, #180]	; 0xb4
   15774:	adds	r1, r3, r1
   15778:	ldr	r3, [sp, #176]	; 0xb0
   1577c:	adc	r3, r5, r3
   15780:	adds	r7, r1, r0
   15784:	ldr	r5, [sp, #36]	; 0x24
   15788:	adc	r1, r3, r2
   1578c:	ldr	r3, [sp, #12]
   15790:	adds	r8, r8, r3
   15794:	ldr	r3, [sp, #16]
   15798:	adc	r9, r4, r3
   1579c:	ldr	r4, [sp, #52]	; 0x34
   157a0:	eor	r5, r5, r4
   157a4:	ldr	r4, [sp, #56]	; 0x38
   157a8:	eor	r4, r6, r4
   157ac:	lsr	r6, r4, #16
   157b0:	lsl	r4, r4, #16
   157b4:	orr	sl, r4, r5, lsr #16
   157b8:	orr	r6, r6, r5, lsl #16
   157bc:	eor	r4, sl, r1
   157c0:	eor	r3, r6, r7
   157c4:	adds	r5, r4, r8
   157c8:	str	r4, [sp, #52]	; 0x34
   157cc:	str	r3, [sp, #36]	; 0x24
   157d0:	adc	r4, r3, r9
   157d4:	str	r5, [sp, #56]	; 0x38
   157d8:	str	r4, [sp, #64]	; 0x40
   157dc:	eor	r2, r4, r2
   157e0:	eor	r4, r5, r0
   157e4:	lsl	r0, r4, #8
   157e8:	lsr	r4, r4, #24
   157ec:	orr	r5, r0, r2, lsr #24
   157f0:	ldr	r0, [sp, #236]	; 0xec
   157f4:	orr	r3, r4, r2, lsl #8
   157f8:	str	r3, [sp, #32]
   157fc:	str	r5, [sp, #28]
   15800:	adds	r2, r7, r0
   15804:	ldr	r0, [sp, #248]	; 0xf8
   15808:	adc	r1, r1, r0
   1580c:	adds	r0, r2, r3
   15810:	ldr	r2, [sp, #208]	; 0xd0
   15814:	adc	r3, r1, r5
   15818:	str	r0, [sp, #24]
   1581c:	ldr	r5, [sp, #164]	; 0xa4
   15820:	str	r3, [sp, #8]
   15824:	adds	r1, r0, r2
   15828:	ldr	r0, [sp, #192]	; 0xc0
   1582c:	adc	r7, r3, r0
   15830:	adds	r1, r1, lr
   15834:	ldr	r3, [sp, #108]	; 0x6c
   15838:	str	r1, [sp, #48]	; 0x30
   1583c:	ldr	r1, [sp, #40]	; 0x28
   15840:	adc	r4, r7, ip
   15844:	str	r4, [sp, #20]
   15848:	eor	r3, r8, r3
   1584c:	eor	r1, r9, r1
   15850:	lsl	r7, r1, #1
   15854:	orr	r8, r7, r3, lsr #31
   15858:	lsl	r3, r3, #1
   1585c:	orr	r1, r3, r1, lsr #31
   15860:	ldr	r3, [sp, #44]	; 0x2c
   15864:	adds	r3, r3, r2
   15868:	ldr	r2, [sp, #120]	; 0x78
   1586c:	adc	r7, r2, r0
   15870:	ldr	r0, [sp, #76]	; 0x4c
   15874:	adds	r3, r3, r1
   15878:	adc	r7, r7, r8
   1587c:	str	r0, [sp, #364]	; 0x16c
   15880:	eor	lr, r7, r0
   15884:	ldr	r0, [sp, #68]	; 0x44
   15888:	str	r6, [sp, #352]	; 0x160
   1588c:	str	sl, [sp, #356]	; 0x164
   15890:	adds	r6, r6, r0
   15894:	ldr	r0, [sp, #72]	; 0x48
   15898:	adc	sl, sl, r0
   1589c:	ldr	r0, [sp, #80]	; 0x50
   158a0:	adds	r2, lr, r6
   158a4:	eor	r1, r2, r1
   158a8:	lsl	r9, r1, #8
   158ac:	lsr	r1, r1, #24
   158b0:	str	r0, [sp, #360]	; 0x168
   158b4:	eor	r0, r3, r0
   158b8:	str	sl, [sp, #324]	; 0x144
   158bc:	str	r6, [sp, #320]	; 0x140
   158c0:	adc	ip, r0, sl
   158c4:	adds	r3, r3, r5
   158c8:	ldr	r5, [sp, #160]	; 0xa0
   158cc:	eor	r8, ip, r8
   158d0:	orr	r1, r1, r8, lsl #8
   158d4:	orr	r9, r9, r8, lsr #24
   158d8:	ldr	r8, [sp, #92]	; 0x5c
   158dc:	adc	r7, r7, r5
   158e0:	adds	r5, r3, r1
   158e4:	adc	r3, r7, r9
   158e8:	str	r5, [sp, #76]	; 0x4c
   158ec:	str	r3, [sp, #80]	; 0x50
   158f0:	eor	r0, r3, r0
   158f4:	eor	r3, r5, lr
   158f8:	lsl	r7, r3, #16
   158fc:	lsr	r3, r3, #16
   15900:	orr	r7, r7, r0, lsr #16
   15904:	orr	r0, r3, r0, lsl #16
   15908:	adds	r2, r0, r2
   1590c:	str	r0, [sp, #16]
   15910:	eor	r0, r4, r7
   15914:	str	r0, [sp, #12]
   15918:	adc	r0, r7, ip
   1591c:	str	r2, [sp, #40]	; 0x28
   15920:	eor	r1, r2, r1
   15924:	str	r0, [sp, #44]	; 0x2c
   15928:	eor	r0, r0, r9
   1592c:	lsl	r2, r0, #1
   15930:	orr	r2, r2, r1, lsr #31
   15934:	lsl	r1, r1, #1
   15938:	orr	r9, r1, r0, lsr #31
   1593c:	ldr	r0, [sp, #36]	; 0x24
   15940:	ldr	r1, [sp, #8]
   15944:	str	r2, [sp, #120]	; 0x78
   15948:	ldr	r2, [sp, #24]
   1594c:	str	r9, [sp, #60]	; 0x3c
   15950:	eor	r0, r1, r0
   15954:	ldr	r1, [sp, #52]	; 0x34
   15958:	eor	r1, r2, r1
   1595c:	lsl	r2, r1, #16
   15960:	lsr	r1, r1, #16
   15964:	orr	r3, r2, r0, lsr #16
   15968:	orr	r0, r1, r0, lsl #16
   1596c:	ldr	r1, [sp, #56]	; 0x38
   15970:	ldr	r2, [sp, #96]	; 0x60
   15974:	str	r0, [sp, #36]	; 0x24
   15978:	str	r3, [sp, #24]
   1597c:	adds	r4, r0, r1
   15980:	ldr	r0, [sp, #64]	; 0x40
   15984:	ldr	r1, [sp, #32]
   15988:	str	r4, [sp, #68]	; 0x44
   1598c:	adc	lr, r3, r0
   15990:	ldr	r0, [sp, #28]
   15994:	eor	r1, r4, r1
   15998:	str	lr, [sp, #72]	; 0x48
   1599c:	eor	r0, lr, r0
   159a0:	lsl	r7, r0, #1
   159a4:	orr	r7, r7, r1, lsr #31
   159a8:	lsl	r1, r1, #1
   159ac:	orr	r3, r1, r0, lsr #31
   159b0:	ldr	r0, [sp, #84]	; 0x54
   159b4:	str	r7, [sp, #32]
   159b8:	str	r3, [sp, #28]
   159bc:	eor	r1, sl, r0
   159c0:	ldr	r0, [sp, #88]	; 0x58
   159c4:	eor	r5, r6, r0
   159c8:	lsl	r0, r1, #1
   159cc:	ldr	r6, [sp, #100]	; 0x64
   159d0:	orr	sl, r0, r5, lsr #31
   159d4:	ldr	r0, [sp, #124]	; 0x7c
   159d8:	lsl	r5, r5, #1
   159dc:	orr	r1, r5, r1, lsr #31
   159e0:	ldr	r5, [sp, #104]	; 0x68
   159e4:	str	sl, [sp, #292]	; 0x124
   159e8:	str	r1, [sp, #288]	; 0x120
   159ec:	str	r8, [sp, #328]	; 0x148
   159f0:	str	r2, [sp, #332]	; 0x14c
   159f4:	str	r6, [sp, #372]	; 0x174
   159f8:	adds	ip, r1, r0
   159fc:	ldr	r0, [sp, #128]	; 0x80
   15a00:	str	r5, [sp, #368]	; 0x170
   15a04:	adc	r0, sl, r0
   15a08:	str	r0, [sp, #128]	; 0x80
   15a0c:	ldr	r0, [sp, #168]	; 0xa8
   15a10:	str	r0, [sp, #380]	; 0x17c
   15a14:	ldr	r0, [sp, #172]	; 0xac
   15a18:	str	r0, [sp, #376]	; 0x178
   15a1c:	ldr	r0, [sp, #140]	; 0x8c
   15a20:	str	r0, [sp, #336]	; 0x150
   15a24:	ldr	r0, [sp, #144]	; 0x90
   15a28:	str	r0, [sp, #340]	; 0x154
   15a2c:	ldr	r0, [sp, #136]	; 0x88
   15a30:	str	r0, [sp, #296]	; 0x128
   15a34:	ldr	r0, [sp, #132]	; 0x84
   15a38:	str	lr, [sp, #348]	; 0x15c
   15a3c:	add	lr, sp, #300	; 0x12c
   15a40:	str	r4, [sp, #344]	; 0x158
   15a44:	ldr	r4, [fp, #-132]	; 0xffffff7c
   15a48:	stm	lr, {r0, r3, r7, r9}
   15a4c:	ldr	r0, [sp, #120]	; 0x78
   15a50:	str	r4, [sp, #64]	; 0x40
   15a54:	ldr	lr, [fp, #-56]	; 0xffffffc8
   15a58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15a5c:	str	r0, [sp, #316]	; 0x13c
   15a60:	ldr	r0, [fp, #-136]	; 0xffffff78
   15a64:	str	r3, [sp, #88]	; 0x58
   15a68:	str	lr, [sp, #108]	; 0x6c
   15a6c:	adds	r7, ip, r0
   15a70:	str	r0, [sp, #84]	; 0x54
   15a74:	ldr	r0, [sp, #128]	; 0x80
   15a78:	eor	r5, r7, r5
   15a7c:	adc	r4, r0, r4
   15a80:	eor	r6, r4, r6
   15a84:	adds	r9, r6, r8
   15a88:	adc	ip, r5, r2
   15a8c:	eor	r1, r9, r1
   15a90:	lsl	r2, r1, #8
   15a94:	eor	r0, ip, sl
   15a98:	lsr	r1, r1, #24
   15a9c:	orr	r8, r1, r0, lsl #8
   15aa0:	orr	sl, r2, r0, lsr #24
   15aa4:	adds	r0, lr, r7
   15aa8:	ldr	r7, [sp, #12]
   15aac:	adc	r2, r3, r4
   15ab0:	adds	r1, r0, r8
   15ab4:	adc	r0, r2, sl
   15ab8:	eor	r2, r1, r6
   15abc:	str	r1, [sp, #52]	; 0x34
   15ac0:	ldr	r6, [sp, #48]	; 0x30
   15ac4:	str	r0, [sp, #56]	; 0x38
   15ac8:	lsl	r4, r2, #16
   15acc:	eor	r0, r0, r5
   15ad0:	lsr	r2, r2, #16
   15ad4:	orr	r3, r4, r0, lsr #16
   15ad8:	orr	r0, r2, r0, lsl #16
   15adc:	adds	r1, r0, r9
   15ae0:	str	r0, [sp, #8]
   15ae4:	ldr	r0, [sp, #16]
   15ae8:	str	r3, [sp, #4]
   15aec:	adc	ip, r3, ip
   15af0:	adds	r5, r1, r7
   15af4:	eor	r1, r1, r8
   15af8:	eor	r3, r6, r0
   15afc:	ldr	r0, [sp, #132]	; 0x84
   15b00:	adc	lr, ip, r3
   15b04:	eor	r2, lr, r0
   15b08:	ldr	r0, [sp, #136]	; 0x88
   15b0c:	eor	r4, r5, r0
   15b10:	ldr	r0, [sp, #200]	; 0xc8
   15b14:	lsl	r9, r4, #8
   15b18:	lsr	r4, r4, #24
   15b1c:	orr	r9, r9, r2, lsr #24
   15b20:	orr	r2, r4, r2, lsl #8
   15b24:	adds	r4, r6, r0
   15b28:	ldr	r0, [sp, #196]	; 0xc4
   15b2c:	ldr	r6, [sp, #20]
   15b30:	adc	r0, r6, r0
   15b34:	adds	r4, r4, r2
   15b38:	ldr	r6, [sp, #116]	; 0x74
   15b3c:	adc	r0, r0, r9
   15b40:	str	r4, [sp, #100]	; 0x64
   15b44:	str	r0, [sp, #104]	; 0x68
   15b48:	eor	r0, r0, r3
   15b4c:	eor	r3, r4, r7
   15b50:	lsl	r4, r3, #16
   15b54:	lsr	r3, r3, #16
   15b58:	orr	r4, r4, r0, lsr #16
   15b5c:	orr	r0, r3, r0, lsl #16
   15b60:	adds	r3, r0, r5
   15b64:	str	r0, [sp, #132]	; 0x84
   15b68:	str	r4, [sp, #128]	; 0x80
   15b6c:	adc	r0, r4, lr
   15b70:	str	r3, [sp, #136]	; 0x88
   15b74:	eor	r2, r3, r2
   15b78:	str	r0, [sp, #124]	; 0x7c
   15b7c:	eor	r0, r0, r9
   15b80:	lsl	r3, r0, #1
   15b84:	orr	r9, r3, r2, lsr #31
   15b88:	lsl	r2, r2, #1
   15b8c:	ldr	r3, [sp, #112]	; 0x70
   15b90:	orr	r7, r2, r0, lsr #31
   15b94:	eor	r0, ip, sl
   15b98:	lsl	r2, r0, #1
   15b9c:	str	r9, [sp, #16]
   15ba0:	orr	r2, r2, r1, lsr #31
   15ba4:	lsl	r1, r1, #1
   15ba8:	str	r7, [sp, #20]
   15bac:	orr	r0, r1, r0, lsr #31
   15bb0:	ldr	r1, [sp, #188]	; 0xbc
   15bb4:	adds	r1, r3, r1
   15bb8:	ldr	r3, [sp, #184]	; 0xb8
   15bbc:	adc	r3, r6, r3
   15bc0:	ldr	r6, [sp, #24]
   15bc4:	adds	r1, r1, r0
   15bc8:	adc	r3, r3, r2
   15bcc:	eor	r5, r3, r6
   15bd0:	ldr	r6, [sp, #36]	; 0x24
   15bd4:	eor	r4, r1, r6
   15bd8:	ldr	r6, [sp, #40]	; 0x28
   15bdc:	adds	ip, r5, r6
   15be0:	ldr	r6, [sp, #44]	; 0x2c
   15be4:	eor	r0, ip, r0
   15be8:	adc	lr, r4, r6
   15bec:	lsl	r6, r0, #8
   15bf0:	lsr	r0, r0, #24
   15bf4:	eor	r2, lr, r2
   15bf8:	orr	r6, r6, r2, lsr #24
   15bfc:	orr	r0, r0, r2, lsl #8
   15c00:	ldr	r2, [sp, #236]	; 0xec
   15c04:	adds	r1, r1, r2
   15c08:	ldr	r2, [sp, #248]	; 0xf8
   15c0c:	adc	r2, r3, r2
   15c10:	adds	r3, r1, r0
   15c14:	adc	r1, r2, r6
   15c18:	adds	r2, r3, r7
   15c1c:	eor	r3, r3, r5
   15c20:	str	r2, [sp, #188]	; 0xbc
   15c24:	adc	r2, r1, r9
   15c28:	eor	r1, r1, r4
   15c2c:	lsl	r4, r3, #16
   15c30:	lsr	r3, r3, #16
   15c34:	orr	r8, r4, r1, lsr #16
   15c38:	orr	r1, r3, r1, lsl #16
   15c3c:	str	r2, [sp, #184]	; 0xb8
   15c40:	ldr	r2, [sp, #80]	; 0x50
   15c44:	adds	r9, r1, ip
   15c48:	str	r1, [sp, #116]	; 0x74
   15c4c:	str	r8, [sp, #356]	; 0x164
   15c50:	str	r8, [sp, #44]	; 0x2c
   15c54:	adc	r1, r8, lr
   15c58:	eor	r0, r9, r0
   15c5c:	str	r9, [sp, #48]	; 0x30
   15c60:	str	r1, [sp, #112]	; 0x70
   15c64:	eor	r1, r1, r6
   15c68:	ldr	r6, [sp, #32]
   15c6c:	lsl	r3, r1, #1
   15c70:	orr	sl, r3, r0, lsr #31
   15c74:	lsl	r0, r0, #1
   15c78:	orr	r5, r0, r1, lsr #31
   15c7c:	ldr	r0, [sp, #152]	; 0x98
   15c80:	ldr	r1, [sp, #76]	; 0x4c
   15c84:	str	sl, [sp, #92]	; 0x5c
   15c88:	str	r5, [sp, #96]	; 0x60
   15c8c:	adds	r3, r1, r0
   15c90:	ldr	r1, [sp, #148]	; 0x94
   15c94:	ldr	r0, [sp, #28]
   15c98:	adc	r1, r2, r1
   15c9c:	adds	r3, r3, r0
   15ca0:	ldr	r2, [sp, #140]	; 0x8c
   15ca4:	adc	ip, r1, r6
   15ca8:	ldr	r1, [sp, #4]
   15cac:	eor	lr, r1, ip
   15cb0:	ldr	r1, [sp, #8]
   15cb4:	eor	r4, r1, r3
   15cb8:	adds	r1, lr, r2
   15cbc:	str	r1, [sp, #140]	; 0x8c
   15cc0:	eor	r7, r1, r0
   15cc4:	ldr	r2, [sp, #144]	; 0x90
   15cc8:	adc	r2, r4, r2
   15ccc:	str	r2, [sp, #144]	; 0x90
   15cd0:	eor	r6, r2, r6
   15cd4:	lsl	r2, r7, #8
   15cd8:	orr	r1, r2, r6, lsr #24
   15cdc:	lsr	r2, r7, #24
   15ce0:	ldr	r7, [sp, #188]	; 0xbc
   15ce4:	orr	r6, r2, r6, lsl #8
   15ce8:	ldr	r2, [sp, #180]	; 0xb4
   15cec:	str	r1, [sp, #76]	; 0x4c
   15cf0:	str	r6, [sp, #80]	; 0x50
   15cf4:	adds	r0, r3, r2
   15cf8:	ldr	r2, [sp, #176]	; 0xb0
   15cfc:	adc	r3, ip, r2
   15d00:	adds	r2, r0, r6
   15d04:	ldr	r6, [sp, #60]	; 0x3c
   15d08:	adc	r0, r3, r1
   15d0c:	eor	r1, r2, lr
   15d10:	str	r2, [sp, #148]	; 0x94
   15d14:	str	r0, [sp, #152]	; 0x98
   15d18:	lsr	r2, r1, #16
   15d1c:	eor	r0, r0, r4
   15d20:	lsl	r1, r1, #16
   15d24:	orr	r3, r1, r0, lsr #16
   15d28:	orr	r2, r2, r0, lsl #16
   15d2c:	ldr	r0, [sp, #116]	; 0x74
   15d30:	ldr	r1, [fp, #-124]	; 0xffffff84
   15d34:	str	r2, [sp, #180]	; 0xb4
   15d38:	str	r3, [sp, #176]	; 0xb0
   15d3c:	str	r0, [sp, #352]	; 0x160
   15d40:	ldr	r0, [sp, #112]	; 0x70
   15d44:	str	r9, [sp, #320]	; 0x140
   15d48:	str	r0, [sp, #324]	; 0x144
   15d4c:	ldr	r0, [sp, #128]	; 0x80
   15d50:	str	r5, [sp, #288]	; 0x120
   15d54:	str	sl, [sp, #292]	; 0x124
   15d58:	str	r0, [sp, #364]	; 0x16c
   15d5c:	ldr	r0, [sp, #132]	; 0x84
   15d60:	str	r0, [sp, #360]	; 0x168
   15d64:	ldr	r0, [sp, #136]	; 0x88
   15d68:	str	r0, [sp, #328]	; 0x148
   15d6c:	ldr	r0, [sp, #124]	; 0x7c
   15d70:	str	r0, [sp, #332]	; 0x14c
   15d74:	ldr	r0, [fp, #-128]	; 0xffffff80
   15d78:	str	r2, [sp, #368]	; 0x170
   15d7c:	str	r3, [sp, #372]	; 0x174
   15d80:	adds	r8, r7, r0
   15d84:	ldr	r0, [sp, #184]	; 0xb8
   15d88:	ldr	r7, [sp, #120]	; 0x78
   15d8c:	adc	r5, r0, r1
   15d90:	ldr	r0, [sp, #140]	; 0x8c
   15d94:	adds	r4, r2, r0
   15d98:	ldr	r0, [sp, #144]	; 0x90
   15d9c:	str	r4, [sp, #36]	; 0x24
   15da0:	adc	r0, r3, r0
   15da4:	str	r0, [sp, #40]	; 0x28
   15da8:	ldr	r0, [sp, #164]	; 0xa4
   15dac:	adds	r2, r6, r0
   15db0:	ldr	r0, [sp, #160]	; 0xa0
   15db4:	adc	r3, r7, r0
   15db8:	ldr	r0, [sp, #52]	; 0x34
   15dbc:	adds	r2, r2, r0
   15dc0:	ldr	r0, [sp, #56]	; 0x38
   15dc4:	adc	r3, r3, r0
   15dc8:	ldr	r0, [sp, #168]	; 0xa8
   15dcc:	eor	ip, r3, r0
   15dd0:	ldr	r0, [sp, #172]	; 0xac
   15dd4:	eor	lr, r2, r0
   15dd8:	ldr	r0, [sp, #68]	; 0x44
   15ddc:	adds	r1, ip, r0
   15de0:	ldr	r0, [sp, #72]	; 0x48
   15de4:	str	r1, [sp, #56]	; 0x38
   15de8:	adc	r0, lr, r0
   15dec:	str	r0, [sp, #68]	; 0x44
   15df0:	eor	r9, r0, r7
   15df4:	eor	r0, r1, r6
   15df8:	lsl	r7, r0, #8
   15dfc:	lsr	r0, r0, #24
   15e00:	orr	r6, r0, r9, lsl #8
   15e04:	ldr	r0, [sp, #84]	; 0x54
   15e08:	orr	r7, r7, r9, lsr #24
   15e0c:	str	r7, [sp, #72]	; 0x48
   15e10:	str	r6, [sp, #120]	; 0x78
   15e14:	adds	r0, r2, r0
   15e18:	ldr	r2, [sp, #64]	; 0x40
   15e1c:	adc	r2, r3, r2
   15e20:	adds	r3, r0, r6
   15e24:	adc	r0, r2, r7
   15e28:	eor	r1, r3, ip
   15e2c:	str	r3, [sp, #160]	; 0xa0
   15e30:	str	r0, [sp, #164]	; 0xa4
   15e34:	eor	r0, r0, lr
   15e38:	lsr	r2, r1, #16
   15e3c:	lsl	r1, r1, #16
   15e40:	ldr	lr, [sp, #40]	; 0x28
   15e44:	orr	sl, r1, r0, lsr #16
   15e48:	orr	r2, r2, r0, lsl #16
   15e4c:	ldr	r0, [sp, #16]
   15e50:	eor	r3, r5, sl
   15e54:	str	r2, [sp, #84]	; 0x54
   15e58:	eor	r2, r8, r2
   15e5c:	adds	r7, r3, r4
   15e60:	ldr	r4, [sp, #88]	; 0x58
   15e64:	adc	ip, r2, lr
   15e68:	eor	r1, ip, r0
   15e6c:	ldr	r0, [sp, #20]
   15e70:	eor	r0, r7, r0
   15e74:	lsl	r9, r0, #8
   15e78:	lsr	r0, r0, #24
   15e7c:	orr	r9, r9, r1, lsr #24
   15e80:	orr	r0, r0, r1, lsl #8
   15e84:	ldr	r1, [sp, #108]	; 0x6c
   15e88:	adds	r1, r8, r1
   15e8c:	adc	r4, r5, r4
   15e90:	adds	r5, r1, r0
   15e94:	adc	r1, r4, r9
   15e98:	str	r5, [sp, #140]	; 0x8c
   15e9c:	str	r1, [sp, #144]	; 0x90
   15ea0:	eor	r1, r1, r2
   15ea4:	eor	r2, r5, r3
   15ea8:	lsl	r3, r2, #16
   15eac:	lsr	r2, r2, #16
   15eb0:	orr	r3, r3, r1, lsr #16
   15eb4:	orr	r1, r2, r1, lsl #16
   15eb8:	adds	r2, r1, r7
   15ebc:	str	r1, [sp, #188]	; 0xbc
   15ec0:	str	r3, [sp, #184]	; 0xb8
   15ec4:	ldr	r7, [sp, #84]	; 0x54
   15ec8:	adc	r1, r3, ip
   15ecc:	str	r2, [sp, #168]	; 0xa8
   15ed0:	eor	r0, r2, r0
   15ed4:	ldr	r3, [sp, #104]	; 0x68
   15ed8:	str	r1, [sp, #172]	; 0xac
   15edc:	eor	r1, r1, r9
   15ee0:	lsl	r2, r1, #1
   15ee4:	orr	r6, r2, r0, lsr #31
   15ee8:	lsl	r0, r0, #1
   15eec:	ldr	r2, [sp, #36]	; 0x24
   15ef0:	orr	ip, r0, r1, lsr #31
   15ef4:	ldr	r0, [sp, #76]	; 0x4c
   15ef8:	ldr	r1, [sp, #80]	; 0x50
   15efc:	str	r6, [sp, #64]	; 0x40
   15f00:	eor	r0, lr, r0
   15f04:	eor	r1, r2, r1
   15f08:	lsl	r2, r0, #1
   15f0c:	orr	r5, r2, r1, lsr #31
   15f10:	lsl	r1, r1, #1
   15f14:	ldr	r2, [sp, #100]	; 0x64
   15f18:	orr	r0, r1, r0, lsr #31
   15f1c:	ldr	r1, [sp, #252]	; 0xfc
   15f20:	adds	r1, r2, r1
   15f24:	ldr	r2, [sp, #224]	; 0xe0
   15f28:	adc	r2, r3, r2
   15f2c:	adds	r4, r1, r0
   15f30:	ldr	r1, [sp, #44]	; 0x2c
   15f34:	adc	r2, r2, r5
   15f38:	eor	r3, r1, r2
   15f3c:	ldr	r1, [sp, #56]	; 0x38
   15f40:	str	r3, [sp, #88]	; 0x58
   15f44:	adds	r9, r7, r1
   15f48:	ldr	r1, [sp, #68]	; 0x44
   15f4c:	adc	r8, sl, r1
   15f50:	ldr	r1, [sp, #116]	; 0x74
   15f54:	adds	lr, r3, r9
   15f58:	eor	r0, lr, r0
   15f5c:	eor	r1, r1, r4
   15f60:	str	r1, [sp, #68]	; 0x44
   15f64:	adc	r1, r1, r8
   15f68:	str	r1, [sp, #84]	; 0x54
   15f6c:	eor	r1, r1, r5
   15f70:	lsl	r5, r0, #8
   15f74:	lsr	r0, r0, #24
   15f78:	orr	r3, r5, r1, lsr #24
   15f7c:	orr	r5, r0, r1, lsl #8
   15f80:	ldr	r0, [sp, #216]	; 0xd8
   15f84:	ldr	r1, [sp, #212]	; 0xd4
   15f88:	str	r5, [sp, #60]	; 0x3c
   15f8c:	str	r3, [sp, #56]	; 0x38
   15f90:	adds	r0, r4, r0
   15f94:	adc	r2, r2, r1
   15f98:	adds	r1, r0, r5
   15f9c:	ldr	r0, [sp, #220]	; 0xdc
   15fa0:	ldr	r5, [sp, #204]	; 0xcc
   15fa4:	adc	r3, r2, r3
   15fa8:	str	r1, [sp, #52]	; 0x34
   15fac:	str	r3, [sp, #44]	; 0x2c
   15fb0:	adds	r2, r1, r0
   15fb4:	ldr	r1, [sp, #148]	; 0x94
   15fb8:	adc	r4, r3, r5
   15fbc:	adds	r0, r2, ip
   15fc0:	ldr	r3, [sp, #112]	; 0x70
   15fc4:	str	r0, [sp, #108]	; 0x6c
   15fc8:	ldr	r0, [sp, #72]	; 0x48
   15fcc:	adc	r6, r4, r6
   15fd0:	str	r6, [sp, #104]	; 0x68
   15fd4:	eor	r2, r8, r0
   15fd8:	ldr	r0, [sp, #120]	; 0x78
   15fdc:	lsl	r7, r2, #1
   15fe0:	eor	r4, r9, r0
   15fe4:	ldr	r0, [sp, #244]	; 0xf4
   15fe8:	orr	r7, r7, r4, lsr #31
   15fec:	lsl	r4, r4, #1
   15ff0:	orr	r2, r4, r2, lsr #31
   15ff4:	adds	r4, r1, r0
   15ff8:	ldr	r0, [sp, #240]	; 0xf0
   15ffc:	ldr	r1, [sp, #152]	; 0x98
   16000:	adc	r9, r1, r0
   16004:	ldr	r0, [sp, #128]	; 0x80
   16008:	adds	r4, r4, r2
   1600c:	ldr	r1, [sp, #48]	; 0x30
   16010:	adc	r9, r9, r7
   16014:	eor	sl, r9, r0
   16018:	ldr	r0, [sp, #132]	; 0x84
   1601c:	adds	r1, sl, r1
   16020:	eor	r2, r1, r2
   16024:	lsl	r8, r2, #8
   16028:	lsr	r2, r2, #24
   1602c:	eor	r0, r4, r0
   16030:	adc	r3, r0, r3
   16034:	eor	r7, r3, r7
   16038:	orr	r8, r8, r7, lsr #24
   1603c:	orr	r2, r2, r7, lsl #8
   16040:	ldr	r7, [sp, #232]	; 0xe8
   16044:	adds	r4, r4, r7
   16048:	ldr	r7, [sp, #228]	; 0xe4
   1604c:	adc	r9, r9, r7
   16050:	adds	r7, r4, r2
   16054:	adc	r4, r9, r8
   16058:	str	r7, [sp, #112]	; 0x70
   1605c:	str	r4, [sp, #116]	; 0x74
   16060:	eor	r0, r4, r0
   16064:	eor	r4, r7, sl
   16068:	lsl	r7, r4, #16
   1606c:	lsr	r4, r4, #16
   16070:	orr	r7, r7, r0, lsr #16
   16074:	orr	r0, r4, r0, lsl #16
   16078:	adds	r1, r0, r1
   1607c:	str	r0, [sp, #80]	; 0x50
   16080:	eor	r0, r6, r7
   16084:	str	r0, [sp, #76]	; 0x4c
   16088:	adc	r0, r7, r3
   1608c:	str	r1, [sp, #100]	; 0x64
   16090:	eor	r1, r1, r2
   16094:	str	r0, [sp, #128]	; 0x80
   16098:	eor	r0, r0, r8
   1609c:	lsl	r2, r0, #1
   160a0:	orr	r2, r2, r1, lsr #31
   160a4:	lsl	r1, r1, #1
   160a8:	orr	r0, r1, r0, lsr #31
   160ac:	ldr	r1, [sp, #44]	; 0x2c
   160b0:	str	r2, [sp, #152]	; 0x98
   160b4:	ldr	r2, [sp, #52]	; 0x34
   160b8:	str	r0, [sp, #148]	; 0x94
   160bc:	ldr	r0, [sp, #68]	; 0x44
   160c0:	eor	r0, r1, r0
   160c4:	ldr	r1, [sp, #88]	; 0x58
   160c8:	eor	r1, r2, r1
   160cc:	lsl	r2, r1, #16
   160d0:	lsr	r1, r1, #16
   160d4:	orr	r3, r2, r0, lsr #16
   160d8:	orr	r0, r1, r0, lsl #16
   160dc:	ldr	r1, [sp, #60]	; 0x3c
   160e0:	adds	r4, r0, lr
   160e4:	str	r0, [sp, #88]	; 0x58
   160e8:	ldr	r0, [sp, #84]	; 0x54
   160ec:	str	r3, [sp, #68]	; 0x44
   160f0:	ldr	lr, [sp, #92]	; 0x5c
   160f4:	str	r4, [sp, #120]	; 0x78
   160f8:	eor	r1, r4, r1
   160fc:	adc	sl, r3, r0
   16100:	ldr	r0, [sp, #56]	; 0x38
   16104:	str	sl, [sp, #132]	; 0x84
   16108:	eor	r0, sl, r0
   1610c:	lsl	r3, r0, #1
   16110:	orr	r9, r3, r1, lsr #31
   16114:	lsl	r1, r1, #1
   16118:	orr	r2, r1, r0, lsr #31
   1611c:	ldr	r0, [sp, #160]	; 0xa0
   16120:	ldr	r1, [sp, #220]	; 0xdc
   16124:	str	r9, [sp, #84]	; 0x54
   16128:	str	r2, [sp, #72]	; 0x48
   1612c:	adds	r0, r0, r1
   16130:	ldr	r1, [sp, #164]	; 0xa4
   16134:	adc	r1, r1, r5
   16138:	ldr	r5, [sp, #96]	; 0x60
   1613c:	adds	r8, r0, r5
   16140:	ldr	r0, [sp, #176]	; 0xb0
   16144:	adc	r7, r1, lr
   16148:	eor	r6, r7, r0
   1614c:	ldr	r0, [sp, #180]	; 0xb4
   16150:	eor	r1, r8, r0
   16154:	ldr	r0, [sp, #136]	; 0x88
   16158:	adds	r3, r6, r0
   1615c:	ldr	r0, [sp, #124]	; 0x7c
   16160:	str	r3, [sp, #176]	; 0xb0
   16164:	adc	r0, r1, r0
   16168:	str	r0, [sp, #180]	; 0xb4
   1616c:	eor	lr, r0, lr
   16170:	eor	r0, r3, r5
   16174:	lsl	r5, r0, #8
   16178:	lsr	r0, r0, #24
   1617c:	orr	r0, r0, lr, lsl #8
   16180:	orr	r5, r5, lr, lsr #24
   16184:	adds	lr, r0, r8
   16188:	str	r0, [sp, #96]	; 0x60
   1618c:	ldr	r0, [sp, #184]	; 0xb8
   16190:	ldr	r8, [sp, #64]	; 0x40
   16194:	str	r5, [sp, #124]	; 0x7c
   16198:	adc	r3, r5, r7
   1619c:	ldr	r7, [fp, #-88]	; 0xffffffa8
   161a0:	str	r0, [sp, #380]	; 0x17c
   161a4:	ldr	r0, [sp, #188]	; 0xbc
   161a8:	str	r0, [sp, #376]	; 0x178
   161ac:	ldr	r0, [sp, #168]	; 0xa8
   161b0:	str	r0, [sp, #336]	; 0x150
   161b4:	ldr	r0, [sp, #172]	; 0xac
   161b8:	str	r0, [sp, #340]	; 0x154
   161bc:	ldr	r0, [sp, #148]	; 0x94
   161c0:	str	ip, [sp, #296]	; 0x128
   161c4:	str	r8, [sp, #300]	; 0x12c
   161c8:	str	r4, [sp, #344]	; 0x158
   161cc:	str	sl, [sp, #348]	; 0x15c
   161d0:	str	r2, [sp, #304]	; 0x130
   161d4:	str	r9, [sp, #308]	; 0x134
   161d8:	adds	r2, lr, r7
   161dc:	ldr	r7, [sp, #108]	; 0x6c
   161e0:	str	r2, [sp, #92]	; 0x5c
   161e4:	eor	r2, r2, r6
   161e8:	ldr	r6, [sp, #88]	; 0x58
   161ec:	str	r0, [sp, #312]	; 0x138
   161f0:	ldr	r0, [sp, #152]	; 0x98
   161f4:	str	r0, [sp, #316]	; 0x13c
   161f8:	ldr	r0, [fp, #-84]	; 0xffffffac
   161fc:	adc	r0, r3, r0
   16200:	lsl	r3, r2, #16
   16204:	lsr	r2, r2, #16
   16208:	str	r0, [sp, #136]	; 0x88
   1620c:	eor	r0, r0, r1
   16210:	orr	r1, r3, r0, lsr #16
   16214:	orr	r0, r2, r0, lsl #16
   16218:	ldr	r2, [sp, #176]	; 0xb0
   1621c:	str	r0, [sp, #60]	; 0x3c
   16220:	str	r1, [sp, #56]	; 0x38
   16224:	adds	r5, r0, r2
   16228:	ldr	r0, [sp, #180]	; 0xb4
   1622c:	adc	sl, r1, r0
   16230:	ldr	r0, [sp, #80]	; 0x50
   16234:	ldr	r1, [sp, #76]	; 0x4c
   16238:	eor	r2, r7, r0
   1623c:	ldr	r0, [sp, #244]	; 0xf4
   16240:	adds	lr, r5, r1
   16244:	adc	r9, sl, r2
   16248:	eor	r4, lr, ip
   1624c:	eor	r3, r9, r8
   16250:	lsl	r8, r4, #8
   16254:	lsr	r4, r4, #24
   16258:	orr	r8, r8, r3, lsr #24
   1625c:	orr	r3, r4, r3, lsl #8
   16260:	adds	r4, r7, r0
   16264:	ldr	r0, [sp, #240]	; 0xf0
   16268:	ldr	r7, [sp, #104]	; 0x68
   1626c:	adc	r0, r7, r0
   16270:	adds	r4, r4, r3
   16274:	adc	r0, r0, r8
   16278:	str	r4, [sp, #104]	; 0x68
   1627c:	str	r0, [sp, #108]	; 0x6c
   16280:	eor	r0, r0, r2
   16284:	eor	r2, r4, r1
   16288:	ldr	r1, [sp, #96]	; 0x60
   1628c:	lsl	r4, r2, #16
   16290:	lsr	r2, r2, #16
   16294:	orr	r7, r4, r0, lsr #16
   16298:	orr	r0, r2, r0, lsl #16
   1629c:	adds	r2, r0, lr
   162a0:	str	r0, [sp, #180]	; 0xb4
   162a4:	eor	r1, r5, r1
   162a8:	str	r7, [sp, #176]	; 0xb0
   162ac:	ldr	r5, [sp, #100]	; 0x64
   162b0:	adc	r0, r7, r9
   162b4:	str	r2, [sp, #160]	; 0xa0
   162b8:	eor	r2, r2, r3
   162bc:	ldr	r7, [sp, #144]	; 0x90
   162c0:	str	r0, [sp, #164]	; 0xa4
   162c4:	eor	r0, r0, r8
   162c8:	lsl	r3, r0, #1
   162cc:	orr	lr, r3, r2, lsr #31
   162d0:	lsl	r2, r2, #1
   162d4:	ldr	r3, [sp, #140]	; 0x8c
   162d8:	orr	r9, r2, r0, lsr #31
   162dc:	ldr	r0, [sp, #124]	; 0x7c
   162e0:	str	lr, [sp, #76]	; 0x4c
   162e4:	str	r9, [sp, #80]	; 0x50
   162e8:	eor	r0, sl, r0
   162ec:	lsl	r2, r0, #1
   162f0:	orr	r2, r2, r1, lsr #31
   162f4:	lsl	r1, r1, #1
   162f8:	orr	r0, r1, r0, lsr #31
   162fc:	ldr	r1, [sp, #236]	; 0xec
   16300:	adds	r1, r3, r1
   16304:	ldr	r3, [sp, #248]	; 0xf8
   16308:	adc	r3, r7, r3
   1630c:	ldr	r7, [sp, #68]	; 0x44
   16310:	adds	r1, r1, r0
   16314:	adc	r3, r3, r2
   16318:	eor	r6, r1, r6
   1631c:	eor	r7, r3, r7
   16320:	adds	r8, r7, r5
   16324:	ldr	r5, [sp, #128]	; 0x80
   16328:	eor	r0, r8, r0
   1632c:	lsl	r4, r0, #8
   16330:	lsr	r0, r0, #24
   16334:	adc	ip, r6, r5
   16338:	eor	r2, ip, r2
   1633c:	orr	r5, r4, r2, lsr #24
   16340:	orr	r0, r0, r2, lsl #8
   16344:	ldr	r2, [sp, #216]	; 0xd8
   16348:	adds	r1, r1, r2
   1634c:	ldr	r2, [sp, #212]	; 0xd4
   16350:	adc	r2, r3, r2
   16354:	adds	r1, r1, r0
   16358:	adc	r4, r2, r5
   1635c:	adds	r2, r1, r9
   16360:	eor	r1, r1, r7
   16364:	str	r2, [sp, #88]	; 0x58
   16368:	adc	r2, r4, lr
   1636c:	eor	r6, r4, r6
   16370:	lsl	r4, r1, #16
   16374:	lsr	r1, r1, #16
   16378:	orr	r1, r1, r6, lsl #16
   1637c:	orr	r3, r4, r6, lsr #16
   16380:	str	r2, [sp, #64]	; 0x40
   16384:	ldr	r2, [sp, #116]	; 0x74
   16388:	ldr	r4, [sp, #84]	; 0x54
   1638c:	adds	lr, r1, r8
   16390:	str	r1, [sp, #144]	; 0x90
   16394:	str	r3, [sp, #140]	; 0x8c
   16398:	adc	sl, r3, ip
   1639c:	eor	r0, lr, r0
   163a0:	str	lr, [sp, #96]	; 0x60
   163a4:	eor	r1, sl, r5
   163a8:	ldr	r5, [sp, #72]	; 0x48
   163ac:	str	sl, [sp, #100]	; 0x64
   163b0:	lsl	r7, r1, #1
   163b4:	orr	r7, r7, r0, lsr #31
   163b8:	lsl	r0, r0, #1
   163bc:	orr	ip, r0, r1, lsr #31
   163c0:	ldr	r0, [sp, #232]	; 0xe8
   163c4:	ldr	r1, [sp, #112]	; 0x70
   163c8:	str	r7, [sp, #128]	; 0x80
   163cc:	str	ip, [sp, #124]	; 0x7c
   163d0:	adds	r0, r1, r0
   163d4:	ldr	r1, [sp, #228]	; 0xe4
   163d8:	adc	r1, r2, r1
   163dc:	adds	r3, r0, r5
   163e0:	ldr	r2, [sp, #168]	; 0xa8
   163e4:	adc	r6, r1, r4
   163e8:	ldr	r1, [sp, #56]	; 0x38
   163ec:	eor	r8, r1, r6
   163f0:	ldr	r1, [sp, #60]	; 0x3c
   163f4:	adds	r0, r8, r2
   163f8:	ldr	r2, [sp, #172]	; 0xac
   163fc:	eor	r5, r0, r5
   16400:	str	r0, [sp, #168]	; 0xa8
   16404:	eor	r1, r1, r3
   16408:	adc	r2, r1, r2
   1640c:	str	r2, [sp, #172]	; 0xac
   16410:	eor	r9, r2, r4
   16414:	lsl	r2, r5, #8
   16418:	orr	r4, r2, r9, lsr #24
   1641c:	lsr	r2, r5, #24
   16420:	ldr	r5, [fp, #-56]	; 0xffffffc8
   16424:	orr	r2, r2, r9, lsl #8
   16428:	str	r4, [sp, #56]	; 0x38
   1642c:	adds	r0, r2, r3
   16430:	str	r2, [sp, #68]	; 0x44
   16434:	adc	r2, r4, r6
   16438:	ldr	r4, [sp, #176]	; 0xb0
   1643c:	ldr	r6, [sp, #164]	; 0xa4
   16440:	adds	r3, r0, r5
   16444:	ldr	r5, [fp, #-124]	; 0xffffff84
   16448:	str	r3, [sp, #72]	; 0x48
   1644c:	str	r4, [sp, #364]	; 0x16c
   16450:	ldr	r4, [sp, #180]	; 0xb4
   16454:	str	r4, [sp, #360]	; 0x168
   16458:	ldr	r4, [sp, #160]	; 0xa0
   1645c:	str	r6, [sp, #332]	; 0x14c
   16460:	ldr	r6, [fp, #-52]	; 0xffffffcc
   16464:	str	r4, [sp, #328]	; 0x148
   16468:	ldr	r4, [sp, #140]	; 0x8c
   1646c:	adc	r0, r2, r6
   16470:	str	r0, [sp, #84]	; 0x54
   16474:	eor	r0, r0, r1
   16478:	eor	r1, r3, r8
   1647c:	lsr	r2, r1, #16
   16480:	lsl	r1, r1, #16
   16484:	orr	r3, r2, r0, lsl #16
   16488:	orr	r6, r1, r0, lsr #16
   1648c:	ldr	r0, [fp, #-160]	; 0xffffff60
   16490:	ldr	r1, [fp, #-156]	; 0xffffff64
   16494:	ldr	r2, [fp, #-128]	; 0xffffff80
   16498:	str	r4, [sp, #356]	; 0x164
   1649c:	ldr	r4, [sp, #144]	; 0x90
   164a0:	str	r3, [sp, #116]	; 0x74
   164a4:	str	r6, [sp, #112]	; 0x70
   164a8:	str	r4, [sp, #352]	; 0x160
   164ac:	ldr	r4, [sp, #88]	; 0x58
   164b0:	str	lr, [sp, #320]	; 0x140
   164b4:	str	sl, [sp, #324]	; 0x144
   164b8:	str	ip, [sp, #288]	; 0x120
   164bc:	str	r7, [sp, #292]	; 0x124
   164c0:	str	r3, [sp, #368]	; 0x170
   164c4:	str	r6, [sp, #372]	; 0x174
   164c8:	adds	r8, r4, r0
   164cc:	ldr	r0, [sp, #64]	; 0x40
   164d0:	ldr	r4, [sp, #152]	; 0x98
   164d4:	adc	lr, r0, r1
   164d8:	ldr	r0, [sp, #168]	; 0xa8
   164dc:	adds	r0, r3, r0
   164e0:	ldr	r3, [sp, #148]	; 0x94
   164e4:	str	r0, [sp, #40]	; 0x28
   164e8:	ldr	r0, [sp, #172]	; 0xac
   164ec:	adc	r7, r6, r0
   164f0:	ldr	r0, [sp, #92]	; 0x5c
   164f4:	adds	r1, r0, r3
   164f8:	ldr	r0, [sp, #136]	; 0x88
   164fc:	adc	r6, r0, r4
   16500:	ldr	r0, [sp, #184]	; 0xb8
   16504:	adds	r1, r1, r2
   16508:	adc	r5, r6, r5
   1650c:	eor	ip, r5, r0
   16510:	ldr	r0, [sp, #188]	; 0xbc
   16514:	eor	r9, r1, r0
   16518:	ldr	r0, [sp, #120]	; 0x78
   1651c:	adds	r2, ip, r0
   16520:	ldr	r0, [sp, #132]	; 0x84
   16524:	str	r2, [sp, #52]	; 0x34
   16528:	adc	r0, r9, r0
   1652c:	str	r0, [sp, #188]	; 0xbc
   16530:	eor	r6, r0, r4
   16534:	eor	r0, r2, r3
   16538:	lsl	sl, r0, #8
   1653c:	lsr	r0, r0, #24
   16540:	orr	r3, r0, r6, lsl #8
   16544:	ldr	r0, [sp, #200]	; 0xc8
   16548:	orr	r4, sl, r6, lsr #24
   1654c:	str	r3, [sp, #64]	; 0x40
   16550:	str	r4, [sp, #60]	; 0x3c
   16554:	adds	r0, r1, r0
   16558:	ldr	r1, [sp, #196]	; 0xc4
   1655c:	adc	r1, r5, r1
   16560:	adds	r3, r0, r3
   16564:	ldr	r5, [sp, #224]	; 0xe0
   16568:	adc	r0, r1, r4
   1656c:	eor	r1, r3, ip
   16570:	ldr	r4, [sp, #40]	; 0x28
   16574:	str	r3, [sp, #88]	; 0x58
   16578:	str	r0, [sp, #92]	; 0x5c
   1657c:	lsr	r2, r1, #16
   16580:	eor	r0, r0, r9
   16584:	lsl	r1, r1, #16
   16588:	orr	r2, r2, r0, lsl #16
   1658c:	orr	r0, r1, r0, lsr #16
   16590:	eor	r3, r0, lr
   16594:	str	r0, [sp, #48]	; 0x30
   16598:	ldr	r0, [sp, #76]	; 0x4c
   1659c:	str	r2, [sp, #44]	; 0x2c
   165a0:	eor	r2, r2, r8
   165a4:	adds	ip, r3, r4
   165a8:	adc	r6, r2, r7
   165ac:	eor	r1, r6, r0
   165b0:	ldr	r0, [sp, #80]	; 0x50
   165b4:	eor	r0, ip, r0
   165b8:	lsl	sl, r0, #8
   165bc:	lsr	r0, r0, #24
   165c0:	orr	sl, sl, r1, lsr #24
   165c4:	orr	r0, r0, r1, lsl #8
   165c8:	ldr	r1, [sp, #252]	; 0xfc
   165cc:	adds	r1, r8, r1
   165d0:	adc	lr, lr, r5
   165d4:	adds	r1, r1, r0
   165d8:	adc	r5, lr, sl
   165dc:	str	r1, [sp, #132]	; 0x84
   165e0:	eor	lr, r5, r2
   165e4:	eor	r2, r1, r3
   165e8:	str	r5, [sp, #136]	; 0x88
   165ec:	lsl	r3, r2, #16
   165f0:	lsr	r2, r2, #16
   165f4:	orr	r8, r2, lr, lsl #16
   165f8:	orr	r3, r3, lr, lsr #16
   165fc:	adds	r5, r8, ip
   16600:	mov	lr, r3
   16604:	str	r3, [sp, #148]	; 0x94
   16608:	str	r8, [sp, #152]	; 0x98
   1660c:	str	r8, [sp, #376]	; 0x178
   16610:	adc	r1, r3, r6
   16614:	eor	r0, r5, r0
   16618:	ldr	r3, [sp, #104]	; 0x68
   1661c:	ldr	r6, [sp, #108]	; 0x6c
   16620:	str	lr, [sp, #380]	; 0x17c
   16624:	ldr	lr, [fp, #-132]	; 0xffffff7c
   16628:	str	r5, [sp, #120]	; 0x78
   1662c:	str	r5, [sp, #336]	; 0x150
   16630:	str	r1, [sp, #172]	; 0xac
   16634:	eor	r1, r1, sl
   16638:	lsl	r2, r1, #1
   1663c:	orr	r2, r2, r0, lsr #31
   16640:	lsl	r0, r0, #1
   16644:	orr	r0, r0, r1, lsr #31
   16648:	ldr	r1, [sp, #68]	; 0x44
   1664c:	str	r2, [sp, #168]	; 0xa8
   16650:	str	r0, [sp, #184]	; 0xb8
   16654:	ldr	r0, [sp, #56]	; 0x38
   16658:	ldr	r5, [sp, #184]	; 0xb8
   1665c:	eor	r1, r4, r1
   16660:	eor	r0, r7, r0
   16664:	lsl	r2, r0, #1
   16668:	orr	r2, r2, r1, lsr #31
   1666c:	lsl	r1, r1, #1
   16670:	orr	ip, r1, r0, lsr #31
   16674:	ldr	r0, [sp, #208]	; 0xd0
   16678:	ldr	r1, [sp, #44]	; 0x2c
   1667c:	adds	r0, r3, r0
   16680:	ldr	r3, [sp, #192]	; 0xc0
   16684:	adc	r3, r6, r3
   16688:	adds	r7, r0, ip
   1668c:	ldr	r0, [sp, #140]	; 0x8c
   16690:	adc	r6, r3, r2
   16694:	eor	r9, r6, r0
   16698:	ldr	r0, [sp, #52]	; 0x34
   1669c:	adds	r3, r1, r0
   166a0:	ldr	r0, [sp, #188]	; 0xbc
   166a4:	ldr	r1, [sp, #48]	; 0x30
   166a8:	str	r3, [sp, #56]	; 0x38
   166ac:	adc	r1, r1, r0
   166b0:	ldr	r0, [sp, #144]	; 0x90
   166b4:	adds	sl, r3, r9
   166b8:	ldr	r3, [sp, #172]	; 0xac
   166bc:	str	r1, [sp, #52]	; 0x34
   166c0:	eor	r4, r7, r0
   166c4:	str	r3, [sp, #340]	; 0x154
   166c8:	ldr	r3, [sp, #224]	; 0xe0
   166cc:	str	r5, [sp, #296]	; 0x128
   166d0:	adc	r0, r1, r4
   166d4:	eor	r1, sl, ip
   166d8:	ldr	ip, [fp, #-136]	; 0xffffff78
   166dc:	str	r0, [sp, #144]	; 0x90
   166e0:	eor	r2, r0, r2
   166e4:	lsl	r0, r1, #8
   166e8:	lsr	r1, r1, #24
   166ec:	orr	r1, r1, r2, lsl #8
   166f0:	orr	r0, r0, r2, lsr #24
   166f4:	adds	r2, r1, r7
   166f8:	ldr	r7, [sp, #168]	; 0xa8
   166fc:	adc	r6, r0, r6
   16700:	adds	r8, r2, ip
   16704:	adc	r2, r6, lr
   16708:	ldr	r6, [sp, #252]	; 0xfc
   1670c:	ldr	lr, [fp, #-144]	; 0xffffff70
   16710:	eor	r4, r2, r4
   16714:	str	r7, [sp, #300]	; 0x12c
   16718:	adds	r6, r8, r6
   1671c:	adc	ip, r2, r3
   16720:	eor	r2, r8, r9
   16724:	adds	r6, r6, r5
   16728:	ldr	r8, [fp, #-140]	; 0xffffff74
   1672c:	lsl	r3, r2, #16
   16730:	lsr	r2, r2, #16
   16734:	str	r6, [sp, #68]	; 0x44
   16738:	adc	r6, ip, r7
   1673c:	ldr	r7, [sp, #144]	; 0x90
   16740:	orr	r2, r2, r4, lsl #16
   16744:	orr	r3, r3, r4, lsr #16
   16748:	str	r6, [sp, #188]	; 0xbc
   1674c:	str	r2, [sp, #108]	; 0x6c
   16750:	adds	r2, r2, sl
   16754:	str	r3, [sp, #76]	; 0x4c
   16758:	adc	r3, r3, r7
   1675c:	mov	r6, r2
   16760:	eor	r1, r2, r1
   16764:	str	r2, [sp, #140]	; 0x8c
   16768:	ldr	r7, [sp, #84]	; 0x54
   1676c:	eor	r0, r3, r0
   16770:	str	r6, [sp, #344]	; 0x158
   16774:	str	r3, [sp, #348]	; 0x15c
   16778:	str	r3, [sp, #144]	; 0x90
   1677c:	lsl	r2, r0, #1
   16780:	orr	r5, r2, r1, lsr #31
   16784:	lsl	r1, r1, #1
   16788:	ldr	r2, [sp, #56]	; 0x38
   1678c:	orr	r4, r1, r0, lsr #31
   16790:	ldr	r0, [sp, #60]	; 0x3c
   16794:	ldr	r1, [sp, #52]	; 0x34
   16798:	str	r5, [sp, #104]	; 0x68
   1679c:	str	r5, [sp, #308]	; 0x134
   167a0:	ldr	r5, [fp, #-88]	; 0xffffffa8
   167a4:	str	r4, [sp, #80]	; 0x50
   167a8:	str	r4, [sp, #304]	; 0x130
   167ac:	ldr	r4, [fp, #-84]	; 0xffffffac
   167b0:	eor	r0, r1, r0
   167b4:	ldr	r1, [sp, #64]	; 0x40
   167b8:	eor	r1, r2, r1
   167bc:	lsl	r2, r0, #1
   167c0:	orr	r2, r2, r1, lsr #31
   167c4:	lsl	r1, r1, #1
   167c8:	orr	r0, r1, r0, lsr #31
   167cc:	ldr	r1, [sp, #72]	; 0x48
   167d0:	adds	r1, r0, r1
   167d4:	adc	r7, r2, r7
   167d8:	adds	r1, r1, r5
   167dc:	adc	r3, r7, r4
   167e0:	ldr	r7, [sp, #176]	; 0xb0
   167e4:	eor	r5, r3, r7
   167e8:	ldr	r7, [sp, #180]	; 0xb4
   167ec:	eor	r4, r1, r7
   167f0:	ldr	r7, [sp, #96]	; 0x60
   167f4:	adds	r6, r5, r7
   167f8:	ldr	r7, [sp, #100]	; 0x64
   167fc:	eor	r0, r6, r0
   16800:	adc	sl, r4, r7
   16804:	lsl	r7, r0, #8
   16808:	lsr	r0, r0, #24
   1680c:	adds	r1, lr, r1
   16810:	eor	r2, sl, r2
   16814:	orr	r0, r0, r2, lsl #8
   16818:	orr	ip, r7, r2, lsr #24
   1681c:	adc	r2, r8, r3
   16820:	adds	r3, r1, r0
   16824:	adc	r1, r2, ip
   16828:	eor	r2, r3, r5
   1682c:	str	r3, [sp, #84]	; 0x54
   16830:	ldr	r5, [sp, #128]	; 0x80
   16834:	str	r1, [sp, #96]	; 0x60
   16838:	lsl	r3, r2, #16
   1683c:	eor	r1, r1, r4
   16840:	lsr	r2, r2, #16
   16844:	orr	r8, r2, r1, lsl #16
   16848:	orr	r3, r3, r1, lsr #16
   1684c:	ldr	r1, [sp, #188]	; 0xbc
   16850:	adds	r2, r8, r6
   16854:	eor	r0, r2, r0
   16858:	str	r2, [sp, #60]	; 0x3c
   1685c:	eor	r1, r3, r1
   16860:	str	r1, [sp, #180]	; 0xb4
   16864:	adc	r1, r3, sl
   16868:	ldr	sl, [fp, #-68]	; 0xffffffbc
   1686c:	eor	r3, r1, ip
   16870:	str	r1, [sp, #72]	; 0x48
   16874:	ldr	r1, [sp, #88]	; 0x58
   16878:	lsl	r6, r3, #1
   1687c:	orr	r2, r6, r0, lsr #31
   16880:	lsl	r0, r0, #1
   16884:	ldr	r6, [fp, #-96]	; 0xffffffa0
   16888:	orr	r7, r0, r3, lsr #31
   1688c:	ldr	r0, [sp, #124]	; 0x7c
   16890:	ldr	r3, [sp, #92]	; 0x5c
   16894:	str	sl, [sp, #56]	; 0x38
   16898:	str	r2, [sp, #100]	; 0x64
   1689c:	str	r2, [sp, #316]	; 0x13c
   168a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   168a4:	str	r7, [sp, #176]	; 0xb0
   168a8:	str	r7, [sp, #312]	; 0x138
   168ac:	ldr	r7, [fp, #-92]	; 0xffffffa4
   168b0:	adds	r1, r1, r0
   168b4:	adc	r3, r3, r5
   168b8:	adds	r4, r1, r6
   168bc:	ldr	r1, [sp, #112]	; 0x70
   168c0:	str	r2, [sp, #88]	; 0x58
   168c4:	adc	r3, r3, r7
   168c8:	eor	ip, r3, r1
   168cc:	ldr	r1, [sp, #116]	; 0x74
   168d0:	eor	r7, r4, r1
   168d4:	ldr	r1, [sp, #160]	; 0xa0
   168d8:	adds	lr, ip, r1
   168dc:	ldr	r1, [sp, #164]	; 0xa4
   168e0:	eor	r0, lr, r0
   168e4:	adc	r1, r7, r1
   168e8:	eor	r6, r1, r5
   168ec:	lsl	r5, r0, #8
   168f0:	lsr	r0, r0, #24
   168f4:	orr	r9, r5, r6, lsr #24
   168f8:	orr	r6, r0, r6, lsl #8
   168fc:	adds	r0, r2, r4
   16900:	adc	r3, sl, r3
   16904:	adds	r5, r0, r6
   16908:	adc	r0, r3, r9
   1690c:	str	r5, [sp, #92]	; 0x5c
   16910:	str	r0, [sp, #164]	; 0xa4
   16914:	eor	r0, r0, r7
   16918:	eor	r7, r5, ip
   1691c:	ldr	r5, [sp, #180]	; 0xb4
   16920:	lsl	r3, r7, #16
   16924:	lsr	r7, r7, #16
   16928:	orr	r2, r3, r0, lsr #16
   1692c:	orr	r0, r7, r0, lsl #16
   16930:	adds	lr, r0, lr
   16934:	str	r0, [sp, #124]	; 0x7c
   16938:	ldr	r0, [sp, #168]	; 0xa8
   1693c:	str	r2, [sp, #116]	; 0x74
   16940:	adc	r3, r2, r1
   16944:	ldr	r1, [sp, #68]	; 0x44
   16948:	eor	r2, r8, r1
   1694c:	adds	r8, lr, r5
   16950:	adc	ip, r3, r2
   16954:	eor	r7, ip, r0
   16958:	ldr	r0, [sp, #184]	; 0xb8
   1695c:	eor	r4, r8, r0
   16960:	ldr	r0, [sp, #232]	; 0xe8
   16964:	lsl	sl, r4, #8
   16968:	lsr	r4, r4, #24
   1696c:	orr	sl, sl, r7, lsr #24
   16970:	orr	r4, r4, r7, lsl #8
   16974:	adds	r7, r1, r0
   16978:	ldr	r0, [sp, #228]	; 0xe4
   1697c:	ldr	r1, [sp, #188]	; 0xbc
   16980:	adc	r0, r1, r0
   16984:	adds	r7, r7, r4
   16988:	adc	r0, r0, sl
   1698c:	str	r7, [sp, #128]	; 0x80
   16990:	eor	r1, r0, r2
   16994:	eor	r2, r7, r5
   16998:	str	r0, [sp, #160]	; 0xa0
   1699c:	lsl	r7, r2, #16
   169a0:	lsr	r2, r2, #16
   169a4:	orr	r0, r2, r1, lsl #16
   169a8:	orr	r7, r7, r1, lsr #16
   169ac:	eor	r1, lr, r6
   169b0:	adds	r2, r0, r8
   169b4:	str	r0, [sp, #180]	; 0xb4
   169b8:	str	r7, [sp, #168]	; 0xa8
   169bc:	adc	r0, r7, ip
   169c0:	str	r2, [sp, #184]	; 0xb8
   169c4:	eor	r2, r2, r4
   169c8:	ldr	r7, [sp, #136]	; 0x88
   169cc:	str	r0, [sp, #188]	; 0xbc
   169d0:	eor	r0, r0, sl
   169d4:	lsl	r4, r0, #1
   169d8:	orr	sl, r4, r2, lsr #31
   169dc:	lsl	r2, r2, #1
   169e0:	orr	ip, r2, r0, lsr #31
   169e4:	eor	r0, r3, r9
   169e8:	ldr	r3, [sp, #132]	; 0x84
   169ec:	lsl	r2, r0, #1
   169f0:	str	sl, [sp, #64]	; 0x40
   169f4:	orr	r2, r2, r1, lsr #31
   169f8:	lsl	r1, r1, #1
   169fc:	str	ip, [sp, #68]	; 0x44
   16a00:	orr	r1, r1, r0, lsr #31
   16a04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16a08:	adds	r0, r0, r3
   16a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a10:	adc	r3, r3, r7
   16a14:	adds	r4, r0, r1
   16a18:	ldr	r0, [sp, #76]	; 0x4c
   16a1c:	adc	r3, r3, r2
   16a20:	eor	r7, r3, r0
   16a24:	ldr	r0, [sp, #108]	; 0x6c
   16a28:	str	r7, [sp, #48]	; 0x30
   16a2c:	eor	r9, r4, r0
   16a30:	ldr	r0, [sp, #60]	; 0x3c
   16a34:	adds	r7, r7, r0
   16a38:	ldr	r0, [sp, #72]	; 0x48
   16a3c:	eor	r1, r7, r1
   16a40:	str	r7, [sp, #60]	; 0x3c
   16a44:	adc	r0, r9, r0
   16a48:	eor	r5, r0, r2
   16a4c:	str	r0, [sp, #112]	; 0x70
   16a50:	ldr	r0, [sp, #88]	; 0x58
   16a54:	lsl	r2, r1, #8
   16a58:	lsr	r1, r1, #24
   16a5c:	orr	r1, r1, r5, lsl #8
   16a60:	orr	r2, r2, r5, lsr #24
   16a64:	str	r1, [sp, #72]	; 0x48
   16a68:	str	r2, [sp, #36]	; 0x24
   16a6c:	adds	r4, r4, r0
   16a70:	ldr	r0, [sp, #56]	; 0x38
   16a74:	adc	r3, r3, r0
   16a78:	ldr	r0, [sp, #216]	; 0xd8
   16a7c:	adds	r8, r4, r1
   16a80:	ldr	r1, [sp, #104]	; 0x68
   16a84:	adc	r7, r3, r2
   16a88:	adds	r4, ip, r0
   16a8c:	ldr	r0, [sp, #212]	; 0xd4
   16a90:	adc	r5, sl, r0
   16a94:	adds	r0, r4, r8
   16a98:	ldr	sl, [sp, #80]	; 0x50
   16a9c:	str	r0, [sp, #76]	; 0x4c
   16aa0:	adc	r0, r5, r7
   16aa4:	str	r0, [sp, #52]	; 0x34
   16aa8:	ldr	r0, [sp, #236]	; 0xec
   16aac:	adds	r4, sl, r0
   16ab0:	ldr	r0, [sp, #248]	; 0xf8
   16ab4:	adc	r5, r1, r0
   16ab8:	ldr	r0, [sp, #84]	; 0x54
   16abc:	adds	r4, r4, r0
   16ac0:	ldr	r0, [sp, #96]	; 0x60
   16ac4:	adc	r5, r5, r0
   16ac8:	ldr	r0, [sp, #116]	; 0x74
   16acc:	eor	r6, r0, r5
   16ad0:	ldr	r0, [sp, #124]	; 0x7c
   16ad4:	eor	ip, r0, r4
   16ad8:	ldr	r0, [sp, #120]	; 0x78
   16adc:	adds	lr, r6, r0
   16ae0:	ldr	r0, [sp, #172]	; 0xac
   16ae4:	adc	r3, ip, r0
   16ae8:	eor	r0, lr, sl
   16aec:	lsl	sl, r0, #8
   16af0:	eor	r1, r3, r1
   16af4:	lsr	r0, r0, #24
   16af8:	orr	r2, r0, r1, lsl #8
   16afc:	ldr	r0, [sp, #220]	; 0xdc
   16b00:	orr	sl, sl, r1, lsr #24
   16b04:	ldr	r1, [sp, #204]	; 0xcc
   16b08:	str	r2, [sp, #136]	; 0x88
   16b0c:	str	sl, [sp, #132]	; 0x84
   16b10:	adds	r0, r4, r0
   16b14:	adc	r1, r5, r1
   16b18:	adds	r4, r0, r2
   16b1c:	adc	r0, r1, sl
   16b20:	eor	r1, r4, r6
   16b24:	str	r4, [sp, #104]	; 0x68
   16b28:	ldr	sl, [sp, #176]	; 0xb0
   16b2c:	str	r0, [sp, #108]	; 0x6c
   16b30:	lsl	r6, r1, #16
   16b34:	eor	r0, r0, ip
   16b38:	lsr	r1, r1, #16
   16b3c:	orr	r6, r6, r0, lsr #16
   16b40:	orr	r0, r1, r0, lsl #16
   16b44:	adds	r1, r0, lr
   16b48:	mov	ip, r0
   16b4c:	str	r0, [sp, #124]	; 0x7c
   16b50:	str	r6, [sp, #120]	; 0x78
   16b54:	str	r1, [sp, #44]	; 0x2c
   16b58:	ldr	r1, [sp, #48]	; 0x30
   16b5c:	adc	r0, r6, r3
   16b60:	str	r0, [sp, #40]	; 0x28
   16b64:	eor	r0, r7, r9
   16b68:	ldr	r9, [sp, #100]	; 0x64
   16b6c:	eor	r1, r8, r1
   16b70:	lsl	r2, r1, #16
   16b74:	lsr	r1, r1, #16
   16b78:	orr	r4, r2, r0, lsr #16
   16b7c:	orr	r0, r1, r0, lsl #16
   16b80:	ldr	r1, [sp, #60]	; 0x3c
   16b84:	mov	r5, r0
   16b88:	str	r0, [sp, #96]	; 0x60
   16b8c:	str	r4, [sp, #356]	; 0x164
   16b90:	str	r4, [sp, #48]	; 0x30
   16b94:	str	r5, [sp, #352]	; 0x160
   16b98:	adds	r7, r0, r1
   16b9c:	ldr	r0, [sp, #112]	; 0x70
   16ba0:	str	r7, [sp, #320]	; 0x140
   16ba4:	str	r7, [sp, #88]	; 0x58
   16ba8:	adc	r1, r4, r0
   16bac:	ldr	r0, [sp, #36]	; 0x24
   16bb0:	ldr	r4, [sp, #40]	; 0x28
   16bb4:	mov	r3, r1
   16bb8:	str	r1, [sp, #84]	; 0x54
   16bbc:	str	r3, [sp, #324]	; 0x144
   16bc0:	eor	r0, r1, r0
   16bc4:	ldr	r1, [sp, #72]	; 0x48
   16bc8:	lsl	r2, r0, #1
   16bcc:	eor	r1, r7, r1
   16bd0:	orr	r2, r2, r1, lsr #31
   16bd4:	lsl	r1, r1, #1
   16bd8:	orr	r1, r1, r0, lsr #31
   16bdc:	ldr	r0, [sp, #92]	; 0x5c
   16be0:	str	r2, [sp, #292]	; 0x124
   16be4:	str	r2, [sp, #116]	; 0x74
   16be8:	ldr	r2, [fp, #-136]	; 0xffffff78
   16bec:	str	r1, [sp, #112]	; 0x70
   16bf0:	str	r1, [sp, #288]	; 0x120
   16bf4:	ldr	r1, [sp, #168]	; 0xa8
   16bf8:	adds	r8, r0, sl
   16bfc:	ldr	r0, [sp, #164]	; 0xa4
   16c00:	str	r1, [sp, #364]	; 0x16c
   16c04:	ldr	r1, [sp, #180]	; 0xb4
   16c08:	adc	lr, r0, r9
   16c0c:	ldr	r0, [fp, #-156]	; 0xffffff64
   16c10:	str	r1, [sp, #360]	; 0x168
   16c14:	ldr	r1, [sp, #188]	; 0xbc
   16c18:	str	r0, [sp, #172]	; 0xac
   16c1c:	ldr	r0, [sp, #148]	; 0x94
   16c20:	str	r1, [sp, #332]	; 0x14c
   16c24:	ldr	r1, [sp, #184]	; 0xb8
   16c28:	str	r1, [sp, #328]	; 0x148
   16c2c:	str	r6, [sp, #372]	; 0x174
   16c30:	ldr	r6, [fp, #-132]	; 0xffffff7c
   16c34:	adds	r1, r8, r2
   16c38:	str	ip, [sp, #368]	; 0x170
   16c3c:	ldr	ip, [fp, #-160]	; 0xffffff60
   16c40:	adc	r2, lr, r6
   16c44:	eor	r7, r2, r0
   16c48:	ldr	r0, [sp, #152]	; 0x98
   16c4c:	eor	r3, r1, r0
   16c50:	ldr	r0, [sp, #140]	; 0x8c
   16c54:	adds	r6, r7, r0
   16c58:	ldr	r0, [sp, #144]	; 0x90
   16c5c:	str	r6, [sp, #36]	; 0x24
   16c60:	adc	r0, r3, r0
   16c64:	str	r0, [sp, #92]	; 0x5c
   16c68:	eor	r9, r0, r9
   16c6c:	eor	r0, r6, sl
   16c70:	lsl	sl, r0, #8
   16c74:	lsr	r0, r0, #24
   16c78:	orr	r6, r0, r9, lsl #8
   16c7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16c80:	orr	r5, sl, r9, lsr #24
   16c84:	str	r5, [sp, #56]	; 0x38
   16c88:	str	r6, [sp, #60]	; 0x3c
   16c8c:	adds	r0, r0, r1
   16c90:	ldr	r1, [fp, #-84]	; 0xffffffac
   16c94:	adc	r1, r1, r2
   16c98:	adds	r2, r0, r6
   16c9c:	adc	r0, r1, r5
   16ca0:	eor	r1, r2, r7
   16ca4:	str	r2, [sp, #72]	; 0x48
   16ca8:	ldr	r7, [sp, #52]	; 0x34
   16cac:	ldr	r5, [sp, #44]	; 0x2c
   16cb0:	str	r0, [sp, #80]	; 0x50
   16cb4:	lsr	r2, r1, #16
   16cb8:	eor	r0, r0, r3
   16cbc:	lsl	r1, r1, #16
   16cc0:	orr	r3, r2, r0, lsl #16
   16cc4:	ldr	r2, [sp, #76]	; 0x4c
   16cc8:	orr	r6, r1, r0, lsr #16
   16ccc:	ldr	r0, [sp, #64]	; 0x40
   16cd0:	eor	sl, r6, r7
   16cd4:	str	r3, [sp, #32]
   16cd8:	adds	r8, sl, r5
   16cdc:	eor	r3, r3, r2
   16ce0:	adc	lr, r3, r4
   16ce4:	eor	r1, lr, r0
   16ce8:	ldr	r0, [sp, #68]	; 0x44
   16cec:	eor	r0, r8, r0
   16cf0:	lsl	r9, r0, #8
   16cf4:	lsr	r0, r0, #24
   16cf8:	orr	r9, r9, r1, lsr #24
   16cfc:	orr	r0, r0, r1, lsl #8
   16d00:	adds	r1, ip, r2
   16d04:	ldr	r2, [sp, #172]	; 0xac
   16d08:	adc	ip, r2, r7
   16d0c:	adds	r2, r1, r0
   16d10:	ldr	r7, [sp, #160]	; 0xa0
   16d14:	str	r2, [sp, #144]	; 0x90
   16d18:	adc	r1, ip, r9
   16d1c:	eor	r2, r2, sl
   16d20:	str	r1, [sp, #148]	; 0x94
   16d24:	eor	r1, r1, r3
   16d28:	lsl	r3, r2, #16
   16d2c:	lsr	r2, r2, #16
   16d30:	orr	r3, r3, r1, lsr #16
   16d34:	orr	r1, r2, r1, lsl #16
   16d38:	adds	r2, r1, r8
   16d3c:	str	r1, [sp, #172]	; 0xac
   16d40:	mov	r8, r3
   16d44:	str	r3, [sp, #152]	; 0x98
   16d48:	adc	sl, r3, lr
   16d4c:	str	r2, [sp, #176]	; 0xb0
   16d50:	eor	r0, r2, r0
   16d54:	str	r8, [sp, #380]	; 0x17c
   16d58:	eor	r1, sl, r9
   16d5c:	str	sl, [sp, #140]	; 0x8c
   16d60:	lsl	r2, r1, #1
   16d64:	orr	r2, r2, r0, lsr #31
   16d68:	lsl	r0, r0, #1
   16d6c:	orr	lr, r0, r1, lsr #31
   16d70:	ldr	r0, [sp, #132]	; 0x84
   16d74:	ldr	r1, [sp, #136]	; 0x88
   16d78:	str	r2, [sp, #164]	; 0xa4
   16d7c:	str	lr, [sp, #100]	; 0x64
   16d80:	eor	r0, r4, r0
   16d84:	eor	r1, r5, r1
   16d88:	ldr	r5, [sp, #36]	; 0x24
   16d8c:	lsl	r2, r0, #1
   16d90:	orr	r3, r2, r1, lsr #31
   16d94:	lsl	r1, r1, #1
   16d98:	ldr	r2, [sp, #128]	; 0x80
   16d9c:	orr	r1, r1, r0, lsr #31
   16da0:	ldr	r0, [sp, #244]	; 0xf4
   16da4:	adds	r0, r2, r0
   16da8:	ldr	r2, [sp, #240]	; 0xf0
   16dac:	adc	r2, r7, r2
   16db0:	adds	r7, r0, r1
   16db4:	ldr	r0, [sp, #48]	; 0x30
   16db8:	adc	ip, r2, r3
   16dbc:	ldr	r2, [sp, #32]
   16dc0:	eor	r0, r0, ip
   16dc4:	adds	r2, r2, r5
   16dc8:	ldr	r5, [sp, #92]	; 0x5c
   16dcc:	str	r2, [sp, #64]	; 0x40
   16dd0:	adc	r5, r6, r5
   16dd4:	ldr	r6, [sp, #96]	; 0x60
   16dd8:	str	r5, [sp, #52]	; 0x34
   16ddc:	eor	r4, r6, r7
   16de0:	adds	r6, r2, r0
   16de4:	ldr	r2, [sp, #172]	; 0xac
   16de8:	adc	r9, r5, r4
   16dec:	eor	r1, r6, r1
   16df0:	lsl	r5, r1, #8
   16df4:	eor	r3, r9, r3
   16df8:	lsr	r1, r1, #24
   16dfc:	orr	r1, r1, r3, lsl #8
   16e00:	orr	r5, r5, r3, lsr #24
   16e04:	str	r2, [sp, #376]	; 0x178
   16e08:	ldr	r2, [sp, #176]	; 0xb0
   16e0c:	str	sl, [sp, #340]	; 0x154
   16e10:	adds	r3, r1, r7
   16e14:	ldr	r7, [fp, #-128]	; 0xffffff80
   16e18:	adc	ip, r5, ip
   16e1c:	str	r2, [sp, #336]	; 0x150
   16e20:	ldr	r2, [sp, #164]	; 0xa4
   16e24:	str	lr, [sp, #296]	; 0x128
   16e28:	adds	r3, r3, r7
   16e2c:	ldr	r7, [sp, #108]	; 0x6c
   16e30:	eor	r0, r3, r0
   16e34:	str	r3, [sp, #68]	; 0x44
   16e38:	lsl	r3, r0, #16
   16e3c:	lsr	r0, r0, #16
   16e40:	str	r2, [sp, #300]	; 0x12c
   16e44:	ldr	r2, [fp, #-124]	; 0xffffff84
   16e48:	adc	r2, ip, r2
   16e4c:	ldr	ip, [sp, #192]	; 0xc0
   16e50:	str	r2, [sp, #76]	; 0x4c
   16e54:	eor	r2, r2, r4
   16e58:	orr	r0, r0, r2, lsl #16
   16e5c:	orr	r3, r3, r2, lsr #16
   16e60:	adds	r2, r0, r6
   16e64:	str	r3, [sp, #128]	; 0x80
   16e68:	str	r0, [sp, #160]	; 0xa0
   16e6c:	adc	r3, r3, r9
   16e70:	mov	r6, r2
   16e74:	eor	r1, r2, r1
   16e78:	str	r2, [sp, #132]	; 0x84
   16e7c:	eor	r0, r3, r5
   16e80:	str	r6, [sp, #344]	; 0x158
   16e84:	ldr	r6, [fp, #-96]	; 0xffffffa0
   16e88:	str	r3, [sp, #348]	; 0x15c
   16e8c:	str	r3, [sp, #136]	; 0x88
   16e90:	ldr	r3, [sp, #168]	; 0xa8
   16e94:	lsl	r2, r0, #1
   16e98:	orr	r5, r2, r1, lsr #31
   16e9c:	lsl	r1, r1, #1
   16ea0:	ldr	r2, [sp, #64]	; 0x40
   16ea4:	orr	r4, r1, r0, lsr #31
   16ea8:	ldr	r0, [sp, #56]	; 0x38
   16eac:	ldr	r1, [sp, #52]	; 0x34
   16eb0:	str	r5, [sp, #92]	; 0x5c
   16eb4:	str	r5, [sp, #308]	; 0x134
   16eb8:	ldr	r5, [fp, #-92]	; 0xffffffa4
   16ebc:	str	r4, [sp, #96]	; 0x60
   16ec0:	str	r4, [sp, #304]	; 0x130
   16ec4:	eor	r0, r1, r0
   16ec8:	ldr	r1, [sp, #60]	; 0x3c
   16ecc:	eor	r1, r2, r1
   16ed0:	lsl	r2, r0, #1
   16ed4:	orr	r2, r2, r1, lsr #31
   16ed8:	lsl	r1, r1, #1
   16edc:	orr	r0, r1, r0, lsr #31
   16ee0:	ldr	r1, [sp, #104]	; 0x68
   16ee4:	adds	r1, r0, r1
   16ee8:	adc	r7, r2, r7
   16eec:	adds	r1, r1, r6
   16ef0:	adc	r7, r7, r5
   16ef4:	eor	r6, r7, r3
   16ef8:	ldr	r3, [sp, #180]	; 0xb4
   16efc:	eor	r5, r1, r3
   16f00:	ldr	r3, [sp, #88]	; 0x58
   16f04:	adds	r4, r6, r3
   16f08:	ldr	r3, [sp, #84]	; 0x54
   16f0c:	eor	r0, r4, r0
   16f10:	adc	lr, r5, r3
   16f14:	lsl	r3, r0, #8
   16f18:	lsr	r0, r0, #24
   16f1c:	eor	r2, lr, r2
   16f20:	orr	r3, r3, r2, lsr #24
   16f24:	orr	r0, r0, r2, lsl #8
   16f28:	ldr	r2, [sp, #208]	; 0xd0
   16f2c:	adds	r1, r1, r2
   16f30:	adc	r2, r7, ip
   16f34:	adds	r7, r1, r0
   16f38:	adc	r1, r2, r3
   16f3c:	eor	r2, r7, r6
   16f40:	str	r7, [sp, #84]	; 0x54
   16f44:	str	r1, [sp, #88]	; 0x58
   16f48:	eor	r1, r1, r5
   16f4c:	lsl	r5, r2, #16
   16f50:	lsr	r2, r2, #16
   16f54:	orr	r5, r5, r1, lsr #16
   16f58:	orr	r1, r2, r1, lsl #16
   16f5c:	ldr	r2, [sp, #116]	; 0x74
   16f60:	adds	r6, r1, r4
   16f64:	str	r1, [sp, #104]	; 0x68
   16f68:	str	r5, [sp, #64]	; 0x40
   16f6c:	adc	r1, r5, lr
   16f70:	eor	r0, r6, r0
   16f74:	ldr	r5, [sp, #112]	; 0x70
   16f78:	str	r1, [sp, #180]	; 0xb4
   16f7c:	eor	r1, r1, r3
   16f80:	lsl	r3, r1, #1
   16f84:	orr	r3, r3, r0, lsr #31
   16f88:	lsl	r0, r0, #1
   16f8c:	orr	r7, r0, r1, lsr #31
   16f90:	ldr	r0, [sp, #72]	; 0x48
   16f94:	ldr	r1, [sp, #80]	; 0x50
   16f98:	str	r3, [sp, #108]	; 0x6c
   16f9c:	str	r3, [sp, #316]	; 0x13c
   16fa0:	ldr	r3, [fp, #-144]	; 0xffffff70
   16fa4:	str	r7, [sp, #168]	; 0xa8
   16fa8:	str	r7, [sp, #312]	; 0x138
   16fac:	ldr	r7, [fp, #-140]	; 0xffffff74
   16fb0:	adds	r0, r0, r5
   16fb4:	adc	r1, r1, r2
   16fb8:	adds	r9, r0, r3
   16fbc:	ldr	r0, [sp, #120]	; 0x78
   16fc0:	adc	r1, r1, r7
   16fc4:	eor	r8, r1, r0
   16fc8:	ldr	r0, [sp, #124]	; 0x7c
   16fcc:	eor	r7, r9, r0
   16fd0:	ldr	r0, [sp, #184]	; 0xb8
   16fd4:	adds	r4, r8, r0
   16fd8:	ldr	r0, [sp, #188]	; 0xbc
   16fdc:	adc	lr, r7, r0
   16fe0:	eor	r0, r4, r5
   16fe4:	ldr	r5, [sp, #196]	; 0xc4
   16fe8:	lsl	sl, r0, #8
   16fec:	eor	r3, lr, r2
   16ff0:	lsr	r0, r0, #24
   16ff4:	orr	sl, sl, r3, lsr #24
   16ff8:	orr	r3, r0, r3, lsl #8
   16ffc:	ldr	r0, [sp, #200]	; 0xc8
   17000:	adds	r0, r9, r0
   17004:	adc	r1, r1, r5
   17008:	adds	r2, r0, r3
   1700c:	ldr	r5, [sp, #180]	; 0xb4
   17010:	adc	r0, r1, sl
   17014:	eor	r1, r2, r8
   17018:	str	r2, [sp, #80]	; 0x50
   1701c:	str	r0, [sp, #188]	; 0xbc
   17020:	eor	r0, r0, r7
   17024:	lsl	r7, r1, #16
   17028:	lsr	r1, r1, #16
   1702c:	orr	r2, r7, r0, lsr #16
   17030:	orr	r0, r1, r0, lsl #16
   17034:	ldr	r1, [sp, #144]	; 0x90
   17038:	adds	r7, r0, r4
   1703c:	str	r0, [sp, #120]	; 0x78
   17040:	str	r2, [sp, #116]	; 0x74
   17044:	adc	r0, r2, lr
   17048:	eor	r3, r7, r3
   1704c:	eor	r2, r0, sl
   17050:	str	r0, [sp, #72]	; 0x48
   17054:	ldr	r0, [sp, #208]	; 0xd0
   17058:	lsl	r4, r2, #1
   1705c:	orr	r4, r4, r3, lsr #31
   17060:	lsl	r3, r3, #1
   17064:	orr	r2, r3, r2, lsr #31
   17068:	adds	r3, r1, r0
   1706c:	ldr	r0, [sp, #148]	; 0x94
   17070:	adc	sl, r0, ip
   17074:	ldr	r0, [sp, #128]	; 0x80
   17078:	adds	r3, r3, r2
   1707c:	adc	sl, sl, r4
   17080:	eor	r1, sl, r0
   17084:	ldr	r0, [sp, #160]	; 0xa0
   17088:	adds	r6, r1, r6
   1708c:	eor	r2, r6, r2
   17090:	lsl	r9, r2, #8
   17094:	lsr	r2, r2, #24
   17098:	eor	r0, r3, r0
   1709c:	adc	r5, r0, r5
   170a0:	eor	r4, r5, r4
   170a4:	orr	r9, r9, r4, lsr #24
   170a8:	orr	r2, r2, r4, lsl #8
   170ac:	ldr	r4, [sp, #244]	; 0xf4
   170b0:	adds	r3, r3, r4
   170b4:	ldr	r4, [sp, #240]	; 0xf0
   170b8:	adc	r4, sl, r4
   170bc:	adds	r3, r3, r2
   170c0:	adc	r4, r4, r9
   170c4:	eor	r1, r3, r1
   170c8:	str	r3, [sp, #112]	; 0x70
   170cc:	lsl	r3, r1, #16
   170d0:	eor	r0, r4, r0
   170d4:	lsr	r1, r1, #16
   170d8:	str	r4, [sp, #128]	; 0x80
   170dc:	ldr	r4, [sp, #164]	; 0xa4
   170e0:	orr	ip, r3, r0, lsr #16
   170e4:	orr	r0, r1, r0, lsl #16
   170e8:	adds	r3, r0, r6
   170ec:	mov	sl, r0
   170f0:	str	r0, [sp, #180]	; 0xb4
   170f4:	str	ip, [sp, #356]	; 0x164
   170f8:	str	ip, [sp, #124]	; 0x7c
   170fc:	adc	r1, ip, r5
   17100:	mov	r6, r3
   17104:	str	r3, [sp, #160]	; 0xa0
   17108:	ldr	r5, [sp, #100]	; 0x64
   1710c:	str	sl, [sp, #352]	; 0x160
   17110:	ldr	ip, [fp, #-132]	; 0xffffff7c
   17114:	eor	r0, r1, r9
   17118:	mov	r8, r1
   1711c:	str	r1, [sp, #184]	; 0xb8
   17120:	eor	r1, r3, r2
   17124:	str	r6, [sp, #320]	; 0x140
   17128:	lsl	r2, r0, #1
   1712c:	str	r8, [sp, #324]	; 0x144
   17130:	orr	r2, r2, r1, lsr #31
   17134:	lsl	r1, r1, #1
   17138:	orr	r3, r1, r0, lsr #31
   1713c:	ldr	r0, [sp, #232]	; 0xe8
   17140:	ldr	r1, [sp, #68]	; 0x44
   17144:	str	r2, [sp, #20]
   17148:	ldr	r2, [sp, #76]	; 0x4c
   1714c:	str	r3, [sp, #48]	; 0x30
   17150:	str	r3, [sp, #288]	; 0x120
   17154:	ldr	sl, [sp, #20]
   17158:	adds	r0, r1, r0
   1715c:	ldr	r1, [sp, #228]	; 0xe4
   17160:	str	sl, [sp, #292]	; 0x124
   17164:	adc	r1, r2, r1
   17168:	ldr	r2, [sp, #64]	; 0x40
   1716c:	adds	r0, r0, r5
   17170:	adc	r1, r1, r4
   17174:	eor	lr, r2, r1
   17178:	ldr	r2, [sp, #104]	; 0x68
   1717c:	adds	r9, r7, lr
   17180:	ldr	r7, [sp, #72]	; 0x48
   17184:	eor	r5, r9, r5
   17188:	eor	r2, r2, r0
   1718c:	adc	r7, r7, r2
   17190:	str	r7, [sp, #68]	; 0x44
   17194:	eor	r4, r7, r4
   17198:	lsl	r7, r5, #8
   1719c:	lsr	r5, r5, #24
   171a0:	orr	r7, r7, r4, lsr #24
   171a4:	orr	r4, r5, r4, lsl #8
   171a8:	ldr	r5, [fp, #-84]	; 0xffffffac
   171ac:	adds	r0, r4, r0
   171b0:	str	r4, [sp, #76]	; 0x4c
   171b4:	ldr	r4, [fp, #-88]	; 0xffffffa8
   171b8:	str	r7, [sp, #72]	; 0x48
   171bc:	adc	r1, r7, r1
   171c0:	adds	r7, r0, r4
   171c4:	ldr	r4, [sp, #92]	; 0x5c
   171c8:	adc	r0, r1, r5
   171cc:	eor	r1, r7, lr
   171d0:	str	r7, [sp, #100]	; 0x64
   171d4:	ldr	lr, [sp, #96]	; 0x60
   171d8:	ldr	r5, [fp, #-68]	; 0xffffffbc
   171dc:	str	r0, [sp, #104]	; 0x68
   171e0:	eor	r0, r0, r2
   171e4:	lsl	r2, r1, #16
   171e8:	lsr	r1, r1, #16
   171ec:	orr	r3, r1, r0, lsl #16
   171f0:	orr	r2, r2, r0, lsr #16
   171f4:	ldr	r0, [sp, #68]	; 0x44
   171f8:	ldr	r1, [sp, #88]	; 0x58
   171fc:	adds	r7, r3, r9
   17200:	str	r2, [sp, #364]	; 0x16c
   17204:	str	r3, [sp, #360]	; 0x168
   17208:	str	r3, [sp, #144]	; 0x90
   1720c:	ldr	r9, [fp, #-136]	; 0xffffff78
   17210:	str	r2, [sp, #148]	; 0x94
   17214:	str	r7, [sp, #44]	; 0x2c
   17218:	str	r7, [sp, #328]	; 0x148
   1721c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   17220:	adc	r6, r2, r0
   17224:	ldr	r0, [sp, #84]	; 0x54
   17228:	str	r6, [sp, #40]	; 0x28
   1722c:	str	r6, [sp, #332]	; 0x14c
   17230:	adds	r0, r0, lr
   17234:	adc	r1, r1, r4
   17238:	adds	r3, r0, r7
   1723c:	ldr	r0, [sp, #116]	; 0x74
   17240:	adc	r1, r1, r5
   17244:	eor	r5, r1, r0
   17248:	ldr	r0, [sp, #120]	; 0x78
   1724c:	eor	r7, r3, r0
   17250:	ldr	r0, [sp, #176]	; 0xb0
   17254:	adds	r6, r5, r0
   17258:	ldr	r0, [sp, #140]	; 0x8c
   1725c:	str	r6, [sp, #60]	; 0x3c
   17260:	adc	r0, r7, r0
   17264:	str	r0, [sp, #64]	; 0x40
   17268:	eor	r2, r0, r4
   1726c:	eor	r0, r6, lr
   17270:	lsl	lr, r0, #8
   17274:	lsr	r0, r0, #24
   17278:	orr	r6, lr, r2, lsr #24
   1727c:	orr	r2, r0, r2, lsl #8
   17280:	adds	r0, r9, r3
   17284:	adc	r1, ip, r1
   17288:	str	r2, [sp, #92]	; 0x5c
   1728c:	adds	r2, r0, r2
   17290:	str	r6, [sp, #88]	; 0x58
   17294:	str	r2, [sp, #116]	; 0x74
   17298:	adc	r0, r1, r6
   1729c:	eor	r2, r2, r5
   172a0:	str	r0, [sp, #120]	; 0x78
   172a4:	lsr	r1, r2, #16
   172a8:	eor	r0, r0, r7
   172ac:	lsl	r2, r2, #16
   172b0:	orr	r7, r1, r0, lsl #16
   172b4:	orr	r5, r2, r0, lsr #16
   172b8:	ldr	r0, [sp, #80]	; 0x50
   172bc:	ldr	r1, [sp, #168]	; 0xa8
   172c0:	ldr	r6, [sp, #108]	; 0x6c
   172c4:	str	r7, [sp, #368]	; 0x170
   172c8:	mov	lr, r7
   172cc:	str	r7, [sp, #24]
   172d0:	ldr	r7, [fp, #-160]	; 0xffffff60
   172d4:	str	r5, [sp, #372]	; 0x174
   172d8:	mov	ip, r5
   172dc:	str	r5, [sp, #28]
   172e0:	ldr	r5, [fp, #-156]	; 0xffffff64
   172e4:	adds	r2, r0, r1
   172e8:	ldr	r0, [sp, #188]	; 0xbc
   172ec:	adc	r3, r0, r6
   172f0:	ldr	r0, [fp, #-144]	; 0xffffff70
   172f4:	adds	r7, r2, r7
   172f8:	adc	r3, r3, r5
   172fc:	str	r0, [sp, #56]	; 0x38
   17300:	ldr	r0, [fp, #-140]	; 0xffffff74
   17304:	str	r0, [sp, #52]	; 0x34
   17308:	ldr	r0, [sp, #152]	; 0x98
   1730c:	eor	r2, r3, r0
   17310:	ldr	r0, [sp, #172]	; 0xac
   17314:	str	r2, [sp, #36]	; 0x24
   17318:	eor	r4, r7, r0
   1731c:	ldr	r0, [sp, #132]	; 0x84
   17320:	str	r4, [sp, #32]
   17324:	adds	r2, r2, r0
   17328:	ldr	r0, [sp, #136]	; 0x88
   1732c:	str	r2, [sp, #80]	; 0x50
   17330:	adc	r0, r4, r0
   17334:	eor	r4, r2, r1
   17338:	eor	r5, r0, r6
   1733c:	lsl	r6, r4, #8
   17340:	str	r0, [sp, #84]	; 0x54
   17344:	orr	r0, r6, r5, lsr #24
   17348:	lsr	r6, r4, #24
   1734c:	ldr	r4, [sp, #48]	; 0x30
   17350:	orr	r1, r6, r5, lsl #8
   17354:	ldr	r6, [fp, #-96]	; 0xffffffa0
   17358:	ldr	r5, [sp, #40]	; 0x28
   1735c:	str	r0, [sp, #96]	; 0x60
   17360:	str	r1, [sp, #152]	; 0x98
   17364:	adds	r7, r6, r7
   17368:	ldr	r6, [fp, #-92]	; 0xffffffa4
   1736c:	adc	r3, r6, r3
   17370:	adds	r2, r7, r1
   17374:	ldr	r7, [sp, #44]	; 0x2c
   17378:	mov	r1, sl
   1737c:	adc	r8, r3, r0
   17380:	ldr	r0, [sp, #200]	; 0xc8
   17384:	str	r2, [sp, #132]	; 0x84
   17388:	adds	r3, r4, r0
   1738c:	ldr	r0, [sp, #196]	; 0xc4
   17390:	adc	r6, sl, r0
   17394:	adds	r3, r3, r2
   17398:	adc	r6, r6, r8
   1739c:	eor	r2, r3, lr
   173a0:	eor	r9, r6, ip
   173a4:	adds	ip, r9, r7
   173a8:	adc	lr, r2, r5
   173ac:	eor	r0, ip, r4
   173b0:	eor	r1, lr, sl
   173b4:	lsl	sl, r0, #8
   173b8:	lsr	r0, r0, #24
   173bc:	orr	sl, sl, r1, lsr #24
   173c0:	orr	r0, r0, r1, lsl #8
   173c4:	ldr	r1, [sp, #216]	; 0xd8
   173c8:	adds	r1, r3, r1
   173cc:	ldr	r3, [sp, #212]	; 0xd4
   173d0:	adc	r3, r6, r3
   173d4:	adds	r6, r1, r0
   173d8:	adc	r1, r3, sl
   173dc:	str	r6, [sp, #172]	; 0xac
   173e0:	str	r1, [sp, #176]	; 0xb0
   173e4:	eor	r1, r1, r2
   173e8:	eor	r2, r6, r9
   173ec:	lsl	r3, r2, #16
   173f0:	lsr	r2, r2, #16
   173f4:	orr	r3, r3, r1, lsr #16
   173f8:	orr	r1, r2, r1, lsl #16
   173fc:	adds	r2, r1, ip
   17400:	str	r1, [sp, #168]	; 0xa8
   17404:	str	r3, [sp, #164]	; 0xa4
   17408:	adc	r1, r3, lr
   1740c:	str	r2, [sp, #136]	; 0x88
   17410:	eor	r0, r2, r0
   17414:	ldr	r3, [sp, #128]	; 0x80
   17418:	str	r1, [sp, #140]	; 0x8c
   1741c:	eor	r1, r1, sl
   17420:	lsl	r2, r1, #1
   17424:	orr	r2, r2, r0, lsr #31
   17428:	lsl	r0, r0, #1
   1742c:	orr	r9, r0, r1, lsr #31
   17430:	ldr	r0, [sp, #72]	; 0x48
   17434:	ldr	r1, [sp, #76]	; 0x4c
   17438:	str	r2, [sp, #188]	; 0xbc
   1743c:	str	r9, [sp, #68]	; 0x44
   17440:	eor	r0, r5, r0
   17444:	eor	r1, r7, r1
   17448:	lsl	r2, r0, #1
   1744c:	orr	r2, r2, r1, lsr #31
   17450:	lsl	r1, r1, #1
   17454:	orr	r4, r1, r0, lsr #31
   17458:	ldr	r0, [sp, #236]	; 0xec
   1745c:	ldr	r1, [sp, #112]	; 0x70
   17460:	adds	r0, r1, r0
   17464:	ldr	r1, [sp, #248]	; 0xf8
   17468:	adc	r1, r3, r1
   1746c:	adds	ip, r0, r4
   17470:	ldr	r0, [sp, #60]	; 0x3c
   17474:	ldr	r3, [sp, #132]	; 0x84
   17478:	adc	lr, r1, r2
   1747c:	ldr	r1, [sp, #24]
   17480:	adds	r6, r1, r0
   17484:	ldr	r0, [sp, #64]	; 0x40
   17488:	ldr	r1, [sp, #28]
   1748c:	str	r6, [sp, #48]	; 0x30
   17490:	adc	r1, r1, r0
   17494:	ldr	r0, [sp, #32]
   17498:	str	r1, [sp, #44]	; 0x2c
   1749c:	eor	r5, r8, r0
   174a0:	ldr	r0, [sp, #36]	; 0x24
   174a4:	eor	r7, r3, r0
   174a8:	lsr	r3, r7, #16
   174ac:	orr	r0, r3, r5, lsl #16
   174b0:	lsl	r3, r7, #16
   174b4:	orr	r3, r3, r5, lsr #16
   174b8:	eor	r7, r0, ip
   174bc:	str	r0, [sp, #60]	; 0x3c
   174c0:	str	r3, [sp, #64]	; 0x40
   174c4:	eor	r3, r3, lr
   174c8:	adds	r8, r3, r6
   174cc:	ldr	r6, [sp, #52]	; 0x34
   174d0:	adc	sl, r7, r1
   174d4:	eor	r4, r8, r4
   174d8:	lsl	r5, r4, #8
   174dc:	eor	r2, sl, r2
   174e0:	lsr	r4, r4, #24
   174e4:	orr	r0, r5, r2, lsr #24
   174e8:	orr	r2, r4, r2, lsl #8
   174ec:	ldr	r4, [sp, #56]	; 0x38
   174f0:	adds	r5, r4, ip
   174f4:	adc	r1, r6, lr
   174f8:	adds	r4, r5, r2
   174fc:	ldr	r5, [sp, #200]	; 0xc8
   17500:	ldr	r6, [sp, #196]	; 0xc4
   17504:	adc	r1, r1, r0
   17508:	eor	r3, r4, r3
   1750c:	adds	r5, r4, r5
   17510:	adc	ip, r1, r6
   17514:	ldr	r6, [sp, #188]	; 0xbc
   17518:	eor	r1, r1, r7
   1751c:	lsl	r7, r3, #16
   17520:	lsr	r3, r3, #16
   17524:	adds	r5, r5, r9
   17528:	orr	r7, r7, r1, lsr #16
   1752c:	orr	r1, r3, r1, lsl #16
   17530:	str	r5, [sp, #72]	; 0x48
   17534:	mov	r9, r1
   17538:	str	r1, [sp, #132]	; 0x84
   1753c:	str	r7, [sp, #128]	; 0x80
   17540:	str	r7, [sp, #380]	; 0x17c
   17544:	adc	r6, ip, r6
   17548:	adds	r3, r1, r8
   1754c:	str	r9, [sp, #376]	; 0x178
   17550:	adc	r1, r7, sl
   17554:	str	r6, [sp, #200]	; 0xc8
   17558:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1755c:	str	r3, [sp, #108]	; 0x6c
   17560:	str	r3, [sp, #336]	; 0x150
   17564:	eor	r0, r1, r0
   17568:	mov	r6, r1
   1756c:	str	r1, [sp, #112]	; 0x70
   17570:	eor	r1, r3, r2
   17574:	lsl	r2, r0, #1
   17578:	str	r6, [sp, #340]	; 0x154
   1757c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17580:	orr	r5, r2, r1, lsr #31
   17584:	lsl	r1, r1, #1
   17588:	ldr	r2, [sp, #48]	; 0x30
   1758c:	orr	r4, r1, r0, lsr #31
   17590:	ldr	r0, [sp, #88]	; 0x58
   17594:	ldr	r1, [sp, #44]	; 0x2c
   17598:	str	r5, [sp, #76]	; 0x4c
   1759c:	str	r5, [sp, #300]	; 0x12c
   175a0:	str	r4, [sp, #196]	; 0xc4
   175a4:	str	r4, [sp, #296]	; 0x128
   175a8:	eor	r0, r1, r0
   175ac:	ldr	r1, [sp, #92]	; 0x5c
   175b0:	eor	r1, r2, r1
   175b4:	lsl	r2, r0, #1
   175b8:	orr	ip, r2, r1, lsr #31
   175bc:	lsl	r1, r1, #1
   175c0:	ldr	r2, [sp, #60]	; 0x3c
   175c4:	orr	r8, r1, r0, lsr #31
   175c8:	ldr	r0, [sp, #100]	; 0x64
   175cc:	adds	r1, r8, r0
   175d0:	ldr	r0, [sp, #104]	; 0x68
   175d4:	adc	r0, ip, r0
   175d8:	adds	r1, r1, r7
   175dc:	adc	r3, r0, r6
   175e0:	ldr	r0, [sp, #124]	; 0x7c
   175e4:	eor	r7, r3, r0
   175e8:	ldr	r0, [sp, #80]	; 0x50
   175ec:	adds	lr, r2, r0
   175f0:	ldr	r0, [sp, #84]	; 0x54
   175f4:	ldr	r2, [sp, #64]	; 0x40
   175f8:	adc	r2, r2, r0
   175fc:	ldr	r0, [sp, #180]	; 0xb4
   17600:	adds	r4, r7, lr
   17604:	str	r2, [sp, #84]	; 0x54
   17608:	eor	r6, r1, r0
   1760c:	adc	sl, r6, r2
   17610:	eor	r2, r4, r8
   17614:	lsl	r5, r2, #8
   17618:	eor	r0, sl, ip
   1761c:	lsr	r2, r2, #24
   17620:	orr	r5, r5, r0, lsr #24
   17624:	orr	r0, r2, r0, lsl #8
   17628:	ldr	r2, [sp, #252]	; 0xfc
   1762c:	adds	r1, r1, r2
   17630:	ldr	r2, [sp, #224]	; 0xe0
   17634:	adc	r2, r3, r2
   17638:	adds	r3, r1, r0
   1763c:	adc	r1, r2, r5
   17640:	eor	r2, r3, r7
   17644:	str	r3, [sp, #64]	; 0x40
   17648:	ldr	r7, [sp, #120]	; 0x78
   1764c:	str	r1, [sp, #88]	; 0x58
   17650:	lsl	r3, r2, #16
   17654:	eor	r1, r1, r6
   17658:	lsr	r2, r2, #16
   1765c:	orr	r6, r3, r1, lsr #16
   17660:	orr	r1, r2, r1, lsl #16
   17664:	ldr	r3, [sp, #116]	; 0x74
   17668:	adds	r8, r1, r4
   1766c:	str	r1, [sp, #124]	; 0x7c
   17670:	ldr	r1, [sp, #200]	; 0xc8
   17674:	eor	r0, r8, r0
   17678:	str	r8, [sp, #104]	; 0x68
   1767c:	str	r8, [sp, #344]	; 0x158
   17680:	eor	r1, r6, r1
   17684:	str	r1, [sp, #48]	; 0x30
   17688:	adc	r1, r6, sl
   1768c:	ldr	r6, [sp, #184]	; 0xb8
   17690:	str	r1, [sp, #180]	; 0xb4
   17694:	eor	r1, r1, r5
   17698:	lsl	r2, r1, #1
   1769c:	orr	r9, r2, r0, lsr #31
   176a0:	lsl	r0, r0, #1
   176a4:	orr	r4, r0, r1, lsr #31
   176a8:	ldr	r0, [sp, #96]	; 0x60
   176ac:	ldr	r1, [sp, #84]	; 0x54
   176b0:	str	r9, [sp, #100]	; 0x64
   176b4:	str	r4, [sp, #92]	; 0x5c
   176b8:	eor	r0, r1, r0
   176bc:	ldr	r1, [sp, #152]	; 0x98
   176c0:	lsl	r2, r0, #1
   176c4:	eor	r1, lr, r1
   176c8:	orr	r2, r2, r1, lsr #31
   176cc:	lsl	r1, r1, #1
   176d0:	orr	r0, r1, r0, lsr #31
   176d4:	ldr	r1, [sp, #220]	; 0xdc
   176d8:	adds	r1, r3, r1
   176dc:	ldr	r3, [sp, #204]	; 0xcc
   176e0:	adc	r7, r7, r3
   176e4:	ldr	r3, [sp, #148]	; 0x94
   176e8:	adds	ip, r1, r0
   176ec:	adc	r7, r7, r2
   176f0:	eor	sl, r7, r3
   176f4:	ldr	r3, [sp, #144]	; 0x90
   176f8:	eor	r5, ip, r3
   176fc:	ldr	r3, [sp, #160]	; 0xa0
   17700:	adds	r3, sl, r3
   17704:	adc	lr, r5, r6
   17708:	eor	r0, r3, r0
   1770c:	lsl	r6, r0, #8
   17710:	eor	r2, lr, r2
   17714:	lsr	r0, r0, #24
   17718:	orr	r1, r6, r2, lsr #24
   1771c:	orr	r6, r0, r2, lsl #8
   17720:	ldr	r2, [fp, #-128]	; 0xffffff80
   17724:	adds	r0, r6, ip
   17728:	str	r1, [sp, #160]	; 0xa0
   1772c:	adc	ip, r1, r7
   17730:	ldr	r7, [fp, #-124]	; 0xffffff84
   17734:	ldr	r1, [sp, #180]	; 0xb4
   17738:	str	r2, [sp, #184]	; 0xb8
   1773c:	adds	r2, r0, r2
   17740:	str	r2, [sp, #60]	; 0x3c
   17744:	adc	r0, ip, r7
   17748:	str	r1, [sp, #348]	; 0x15c
   1774c:	str	r7, [sp, #116]	; 0x74
   17750:	str	r4, [sp, #304]	; 0x130
   17754:	str	r9, [sp, #308]	; 0x134
   17758:	str	r0, [sp, #96]	; 0x60
   1775c:	eor	r0, r0, r5
   17760:	eor	r5, r2, sl
   17764:	ldr	r2, [sp, #72]	; 0x48
   17768:	lsl	r1, r5, #16
   1776c:	lsr	r5, r5, #16
   17770:	orr	r1, r1, r0, lsr #16
   17774:	orr	r0, r5, r0, lsl #16
   17778:	adds	sl, r0, r3
   1777c:	str	r0, [sp, #56]	; 0x38
   17780:	ldr	r0, [sp, #124]	; 0x7c
   17784:	str	r1, [sp, #52]	; 0x34
   17788:	adc	r5, r1, lr
   1778c:	ldr	r1, [sp, #48]	; 0x30
   17790:	eor	ip, r0, r2
   17794:	ldr	r0, [sp, #188]	; 0xbc
   17798:	adds	r8, sl, r1
   1779c:	adc	lr, r5, ip
   177a0:	eor	r3, lr, r0
   177a4:	ldr	r0, [sp, #68]	; 0x44
   177a8:	eor	r0, r8, r0
   177ac:	lsl	r7, r0, #8
   177b0:	lsr	r0, r0, #24
   177b4:	orr	r0, r0, r3, lsl #8
   177b8:	orr	r7, r7, r3, lsr #24
   177bc:	ldr	r3, [sp, #160]	; 0xa0
   177c0:	adds	r9, r0, r2
   177c4:	ldr	r2, [sp, #200]	; 0xc8
   177c8:	eor	r4, r5, r3
   177cc:	eor	r5, sl, r6
   177d0:	lsl	r6, r4, #1
   177d4:	orr	r3, r6, r5, lsr #31
   177d8:	lsl	r6, r5, #1
   177dc:	adc	r2, r7, r2
   177e0:	orr	r4, r6, r4, lsr #31
   177e4:	ldr	r6, [fp, #-144]	; 0xffffff70
   177e8:	str	r3, [sp, #80]	; 0x50
   177ec:	str	r3, [sp, #316]	; 0x13c
   177f0:	str	r4, [sp, #84]	; 0x54
   177f4:	str	r4, [sp, #312]	; 0x138
   177f8:	ldr	r4, [fp, #-140]	; 0xffffff74
   177fc:	adds	r9, r9, r6
   17800:	eor	r6, r9, r1
   17804:	adc	sl, r2, r4
   17808:	lsl	r4, r6, #16
   1780c:	lsr	r6, r6, #16
   17810:	eor	r2, sl, ip
   17814:	ldr	ip, [sp, #196]	; 0xc4
   17818:	orr	r4, r4, r2, lsr #16
   1781c:	orr	r2, r6, r2, lsl #16
   17820:	adds	r6, r2, r8
   17824:	mov	r3, r2
   17828:	str	r2, [sp, #124]	; 0x7c
   1782c:	ldr	r8, [sp, #76]	; 0x4c
   17830:	str	r4, [sp, #356]	; 0x164
   17834:	str	r4, [sp, #120]	; 0x78
   17838:	adc	r2, r4, lr
   1783c:	eor	r0, r6, r0
   17840:	str	r3, [sp, #352]	; 0x160
   17844:	str	r6, [sp, #320]	; 0x140
   17848:	str	r6, [sp, #148]	; 0x94
   1784c:	ldr	r6, [sp, #136]	; 0x88
   17850:	ldr	r3, [sp, #56]	; 0x38
   17854:	eor	r1, r2, r7
   17858:	mov	r5, r2
   1785c:	str	r2, [sp, #144]	; 0x90
   17860:	lsl	r2, r1, #1
   17864:	str	r5, [sp, #324]	; 0x144
   17868:	orr	r2, r2, r0, lsr #31
   1786c:	lsl	r0, r0, #1
   17870:	orr	r7, r0, r1, lsr #31
   17874:	ldr	r0, [sp, #64]	; 0x40
   17878:	ldr	r1, [sp, #88]	; 0x58
   1787c:	str	r2, [sp, #152]	; 0x98
   17880:	str	r2, [sp, #292]	; 0x124
   17884:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17888:	str	r7, [sp, #160]	; 0xa0
   1788c:	str	r7, [sp, #288]	; 0x120
   17890:	ldr	r7, [fp, #-92]	; 0xffffffa4
   17894:	adds	r0, r0, ip
   17898:	adc	r1, r1, r8
   1789c:	adds	r0, r0, r2
   178a0:	ldr	r2, [sp, #52]	; 0x34
   178a4:	adc	r1, r1, r7
   178a8:	eor	r7, r0, r3
   178ac:	eor	r2, r1, r2
   178b0:	adds	lr, r2, r6
   178b4:	ldr	r6, [sp, #140]	; 0x8c
   178b8:	adc	r3, r7, r6
   178bc:	eor	r6, lr, ip
   178c0:	lsl	r5, r6, #8
   178c4:	eor	r4, r3, r8
   178c8:	lsr	r6, r6, #24
   178cc:	orr	r5, r5, r4, lsr #24
   178d0:	orr	r4, r6, r4, lsl #8
   178d4:	ldr	r6, [sp, #184]	; 0xb8
   178d8:	adds	r0, r6, r0
   178dc:	ldr	r6, [sp, #116]	; 0x74
   178e0:	adc	r1, r6, r1
   178e4:	adds	r6, r0, r4
   178e8:	adc	r0, r1, r5
   178ec:	eor	r1, r6, r2
   178f0:	str	r6, [sp, #88]	; 0x58
   178f4:	ldr	r6, [sp, #100]	; 0x64
   178f8:	str	r0, [sp, #116]	; 0x74
   178fc:	lsl	r2, r1, #16
   17900:	eor	r0, r0, r7
   17904:	lsr	r1, r1, #16
   17908:	orr	r2, r2, r0, lsr #16
   1790c:	orr	r0, r1, r0, lsl #16
   17910:	adds	r1, r0, lr
   17914:	str	r0, [sp, #188]	; 0xbc
   17918:	str	r2, [sp, #184]	; 0xb8
   1791c:	adc	r0, r2, r3
   17920:	str	r1, [sp, #196]	; 0xc4
   17924:	eor	r1, r1, r4
   17928:	ldr	r4, [sp, #92]	; 0x5c
   1792c:	str	r0, [sp, #200]	; 0xc8
   17930:	eor	r0, r0, r5
   17934:	lsl	r2, r0, #1
   17938:	orr	r2, r2, r1, lsr #31
   1793c:	lsl	r1, r1, #1
   17940:	orr	r3, r1, r0, lsr #31
   17944:	ldr	r0, [sp, #244]	; 0xf4
   17948:	ldr	r1, [sp, #240]	; 0xf0
   1794c:	str	r2, [sp, #136]	; 0x88
   17950:	str	r3, [sp, #140]	; 0x8c
   17954:	adds	r0, r9, r0
   17958:	adc	r1, sl, r1
   1795c:	adds	r0, r0, r3
   17960:	str	r0, [sp, #56]	; 0x38
   17964:	adc	r0, r1, r2
   17968:	ldr	r1, [sp, #60]	; 0x3c
   1796c:	ldr	r2, [sp, #96]	; 0x60
   17970:	str	r0, [sp, #52]	; 0x34
   17974:	ldr	r0, [sp, #252]	; 0xfc
   17978:	adds	r0, r1, r0
   1797c:	ldr	r1, [sp, #224]	; 0xe0
   17980:	adc	r1, r2, r1
   17984:	ldr	r2, [sp, #164]	; 0xa4
   17988:	adds	r0, r0, r4
   1798c:	adc	r1, r1, r6
   17990:	eor	r3, r1, r2
   17994:	ldr	r2, [sp, #168]	; 0xa8
   17998:	eor	r5, r0, r2
   1799c:	ldr	r2, [sp, #108]	; 0x6c
   179a0:	adds	r8, r3, r2
   179a4:	ldr	r2, [sp, #112]	; 0x70
   179a8:	adc	r7, r5, r2
   179ac:	ldr	r2, [sp, #208]	; 0xd0
   179b0:	eor	lr, r7, r6
   179b4:	eor	r6, r8, r4
   179b8:	lsl	sl, r6, #8
   179bc:	lsr	r6, r6, #24
   179c0:	orr	r6, r6, lr, lsl #8
   179c4:	orr	r4, sl, lr, lsr #24
   179c8:	adds	r0, r0, r2
   179cc:	ldr	r2, [sp, #192]	; 0xc0
   179d0:	str	r4, [sp, #64]	; 0x40
   179d4:	str	r6, [sp, #76]	; 0x4c
   179d8:	adc	r1, r1, r2
   179dc:	adds	r2, r0, r6
   179e0:	ldr	r6, [sp, #80]	; 0x50
   179e4:	adc	r0, r1, r4
   179e8:	eor	r1, r2, r3
   179ec:	str	r2, [sp, #92]	; 0x5c
   179f0:	ldr	r2, [sp, #176]	; 0xb0
   179f4:	str	r0, [sp, #96]	; 0x60
   179f8:	lsl	r3, r1, #16
   179fc:	eor	r0, r0, r5
   17a00:	lsr	r1, r1, #16
   17a04:	orr	r4, r1, r0, lsl #16
   17a08:	orr	lr, r3, r0, lsr #16
   17a0c:	ldr	r0, [sp, #220]	; 0xdc
   17a10:	ldr	r1, [sp, #172]	; 0xac
   17a14:	adds	r9, r4, r8
   17a18:	str	r4, [sp, #108]	; 0x6c
   17a1c:	str	lr, [sp, #100]	; 0x64
   17a20:	adc	ip, lr, r7
   17a24:	ldr	r7, [sp, #84]	; 0x54
   17a28:	str	r9, [sp, #60]	; 0x3c
   17a2c:	adds	r0, r1, r0
   17a30:	ldr	r1, [sp, #204]	; 0xcc
   17a34:	str	ip, [sp, #48]	; 0x30
   17a38:	adc	r1, r2, r1
   17a3c:	adds	r2, r0, r7
   17a40:	ldr	r0, [sp, #128]	; 0x80
   17a44:	adc	r1, r1, r6
   17a48:	eor	r8, r1, r0
   17a4c:	ldr	r0, [sp, #132]	; 0x84
   17a50:	eor	r3, r2, r0
   17a54:	ldr	r0, [sp, #104]	; 0x68
   17a58:	adds	r5, r8, r0
   17a5c:	ldr	r0, [sp, #180]	; 0xb4
   17a60:	str	r5, [sp, #72]	; 0x48
   17a64:	adc	r0, r3, r0
   17a68:	str	r0, [sp, #104]	; 0x68
   17a6c:	eor	sl, r0, r6
   17a70:	eor	r0, r5, r7
   17a74:	lsl	r7, r0, #8
   17a78:	lsr	r0, r0, #24
   17a7c:	orr	r6, r7, sl, lsr #24
   17a80:	orr	r7, r0, sl, lsl #8
   17a84:	ldr	r0, [sp, #216]	; 0xd8
   17a88:	str	r6, [sp, #68]	; 0x44
   17a8c:	str	r7, [sp, #84]	; 0x54
   17a90:	adds	r0, r2, r0
   17a94:	ldr	r2, [sp, #212]	; 0xd4
   17a98:	adc	r1, r1, r2
   17a9c:	adds	r2, r0, r7
   17aa0:	adc	r0, r1, r6
   17aa4:	str	r2, [sp, #112]	; 0x70
   17aa8:	eor	r2, r2, r8
   17aac:	ldr	r6, [sp, #136]	; 0x88
   17ab0:	str	r0, [sp, #132]	; 0x84
   17ab4:	lsr	r1, r2, #16
   17ab8:	eor	r0, r0, r3
   17abc:	lsl	r2, r2, #16
   17ac0:	orr	r3, r1, r0, lsl #16
   17ac4:	ldr	r1, [sp, #52]	; 0x34
   17ac8:	orr	r8, r2, r0, lsr #16
   17acc:	ldr	r0, [sp, #56]	; 0x38
   17ad0:	str	r3, [sp, #80]	; 0x50
   17ad4:	eor	r2, r1, r8
   17ad8:	eor	r3, r0, r3
   17adc:	adds	r5, r2, r9
   17ae0:	adc	r7, r3, ip
   17ae4:	eor	ip, r7, r6
   17ae8:	ldr	r6, [sp, #140]	; 0x8c
   17aec:	eor	r9, r5, r6
   17af0:	lsr	r6, r9, #24
   17af4:	lsl	sl, r9, #8
   17af8:	orr	r6, r6, ip, lsl #8
   17afc:	orr	sl, sl, ip, lsr #24
   17b00:	adds	r9, r6, r0
   17b04:	ldr	r0, [sp, #184]	; 0xb8
   17b08:	adc	ip, sl, r1
   17b0c:	ldr	r1, [sp, #48]	; 0x30
   17b10:	str	r0, [sp, #364]	; 0x16c
   17b14:	ldr	r0, [sp, #188]	; 0xbc
   17b18:	str	r0, [sp, #360]	; 0x168
   17b1c:	ldr	r0, [sp, #196]	; 0xc4
   17b20:	str	r4, [sp, #368]	; 0x170
   17b24:	str	lr, [sp, #372]	; 0x174
   17b28:	ldr	r4, [fp, #-72]	; 0xffffffb8
   17b2c:	str	r0, [sp, #328]	; 0x148
   17b30:	ldr	r0, [sp, #200]	; 0xc8
   17b34:	adds	r4, r9, r4
   17b38:	eor	r2, r4, r2
   17b3c:	str	r4, [sp, #168]	; 0xa8
   17b40:	str	r0, [sp, #332]	; 0x14c
   17b44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17b48:	adc	r0, ip, r0
   17b4c:	eor	ip, r0, r3
   17b50:	lsl	r3, r2, #16
   17b54:	lsr	r2, r2, #16
   17b58:	str	r0, [sp, #172]	; 0xac
   17b5c:	orr	r0, r2, ip, lsl #16
   17b60:	orr	r4, r3, ip, lsr #16
   17b64:	adds	r3, r0, r5
   17b68:	mov	lr, r0
   17b6c:	str	r0, [sp, #164]	; 0xa4
   17b70:	str	r4, [sp, #380]	; 0x17c
   17b74:	str	r4, [sp, #136]	; 0x88
   17b78:	adc	r2, r4, r7
   17b7c:	str	r3, [sp, #176]	; 0xb0
   17b80:	str	lr, [sp, #376]	; 0x178
   17b84:	eor	r0, r2, sl
   17b88:	mov	sl, r2
   17b8c:	str	r2, [sp, #180]	; 0xb4
   17b90:	eor	r2, r3, r6
   17b94:	mov	r6, r3
   17b98:	lsl	r3, r0, #1
   17b9c:	str	r6, [sp, #336]	; 0x150
   17ba0:	ldr	r6, [fp, #-88]	; 0xffffffa8
   17ba4:	str	sl, [sp, #340]	; 0x154
   17ba8:	orr	r5, r3, r2, lsr #31
   17bac:	lsl	r2, r2, #1
   17bb0:	orr	r7, r2, r0, lsr #31
   17bb4:	ldr	r0, [sp, #64]	; 0x40
   17bb8:	ldr	r2, [sp, #60]	; 0x3c
   17bbc:	str	r5, [sp, #128]	; 0x80
   17bc0:	str	r5, [sp, #300]	; 0x12c
   17bc4:	ldr	r5, [fp, #-84]	; 0xffffffac
   17bc8:	str	r7, [sp, #140]	; 0x8c
   17bcc:	str	r7, [sp, #296]	; 0x128
   17bd0:	eor	r0, r1, r0
   17bd4:	ldr	r1, [sp, #76]	; 0x4c
   17bd8:	lsl	r3, r0, #1
   17bdc:	eor	r2, r2, r1
   17be0:	ldr	r1, [sp, #88]	; 0x58
   17be4:	orr	r3, r3, r2, lsr #31
   17be8:	lsl	r2, r2, #1
   17bec:	orr	r0, r2, r0, lsr #31
   17bf0:	adds	r2, r1, r0
   17bf4:	ldr	r1, [sp, #116]	; 0x74
   17bf8:	adc	ip, r1, r3
   17bfc:	adds	r2, r2, r6
   17c00:	ldr	r1, [sp, #72]	; 0x48
   17c04:	ldr	r6, [sp, #120]	; 0x78
   17c08:	adc	r7, ip, r5
   17c0c:	ldr	r5, [sp, #80]	; 0x50
   17c10:	eor	r6, r7, r6
   17c14:	adds	ip, r5, r1
   17c18:	ldr	r1, [sp, #104]	; 0x68
   17c1c:	adc	lr, r8, r1
   17c20:	ldr	r1, [sp, #124]	; 0x7c
   17c24:	adds	r5, r6, ip
   17c28:	eor	r0, r5, r0
   17c2c:	eor	r4, r2, r1
   17c30:	lsl	r1, r0, #8
   17c34:	lsr	r0, r0, #24
   17c38:	adc	r9, r4, lr
   17c3c:	eor	r3, r9, r3
   17c40:	orr	r1, r1, r3, lsr #24
   17c44:	orr	r0, r0, r3, lsl #8
   17c48:	ldr	r3, [sp, #232]	; 0xe8
   17c4c:	adds	r2, r2, r3
   17c50:	ldr	r3, [sp, #228]	; 0xe4
   17c54:	adc	r3, r7, r3
   17c58:	adds	r7, r2, r0
   17c5c:	adc	r2, r3, r1
   17c60:	eor	r3, r7, r6
   17c64:	str	r7, [sp, #116]	; 0x74
   17c68:	str	r2, [sp, #120]	; 0x78
   17c6c:	eor	r2, r2, r4
   17c70:	lsl	r4, r3, #16
   17c74:	lsr	r3, r3, #16
   17c78:	orr	r4, r4, r2, lsr #16
   17c7c:	orr	r2, r3, r2, lsl #16
   17c80:	str	r2, [sp, #88]	; 0x58
   17c84:	adds	r2, r2, r5
   17c88:	str	r4, [sp, #72]	; 0x48
   17c8c:	adc	r3, r4, r9
   17c90:	mov	r7, r2
   17c94:	eor	r0, r2, r0
   17c98:	str	r2, [sp, #76]	; 0x4c
   17c9c:	eor	r1, r3, r1
   17ca0:	mov	r6, r3
   17ca4:	str	r3, [sp, #80]	; 0x50
   17ca8:	str	r7, [sp, #344]	; 0x158
   17cac:	ldr	r3, [sp, #96]	; 0x60
   17cb0:	ldr	r7, [fp, #-136]	; 0xffffff78
   17cb4:	lsl	r2, r1, #1
   17cb8:	str	r6, [sp, #348]	; 0x15c
   17cbc:	ldr	r6, [fp, #-132]	; 0xffffff7c
   17cc0:	orr	r5, r2, r0, lsr #31
   17cc4:	lsl	r0, r0, #1
   17cc8:	orr	r4, r0, r1, lsr #31
   17ccc:	ldr	r0, [sp, #68]	; 0x44
   17cd0:	ldr	r1, [sp, #84]	; 0x54
   17cd4:	str	r5, [sp, #104]	; 0x68
   17cd8:	str	r5, [sp, #308]	; 0x134
   17cdc:	ldr	r5, [sp, #148]	; 0x94
   17ce0:	str	r4, [sp, #124]	; 0x7c
   17ce4:	str	r4, [sp, #304]	; 0x130
   17ce8:	ldr	r4, [sp, #144]	; 0x90
   17cec:	eor	r0, lr, r0
   17cf0:	eor	r1, ip, r1
   17cf4:	lsl	r2, r0, #1
   17cf8:	orr	r2, r2, r1, lsr #31
   17cfc:	lsl	r1, r1, #1
   17d00:	orr	r0, r1, r0, lsr #31
   17d04:	ldr	r1, [sp, #92]	; 0x5c
   17d08:	adds	r1, r0, r1
   17d0c:	adc	r3, r2, r3
   17d10:	adds	r1, r1, r7
   17d14:	ldr	r7, [sp, #184]	; 0xb8
   17d18:	adc	r3, r3, r6
   17d1c:	ldr	r6, [sp, #188]	; 0xbc
   17d20:	eor	r7, r3, r7
   17d24:	adds	r5, r7, r5
   17d28:	eor	r6, r1, r6
   17d2c:	adc	ip, r6, r4
   17d30:	eor	r0, r5, r0
   17d34:	lsl	r4, r0, #8
   17d38:	eor	r2, ip, r2
   17d3c:	lsr	r0, r0, #24
   17d40:	orr	r4, r4, r2, lsr #24
   17d44:	orr	r0, r0, r2, lsl #8
   17d48:	ldr	r2, [sp, #236]	; 0xec
   17d4c:	adds	r1, r1, r2
   17d50:	ldr	r2, [sp, #248]	; 0xf8
   17d54:	adc	r2, r3, r2
   17d58:	adds	r3, r1, r0
   17d5c:	adc	r1, r2, r4
   17d60:	eor	r2, r3, r7
   17d64:	str	r3, [sp, #184]	; 0xb8
   17d68:	str	r1, [sp, #188]	; 0xbc
   17d6c:	eor	r1, r1, r6
   17d70:	lsl	r3, r2, #16
   17d74:	lsr	r2, r2, #16
   17d78:	ldr	r6, [sp, #152]	; 0x98
   17d7c:	orr	r3, r3, r1, lsr #16
   17d80:	orr	r1, r2, r1, lsl #16
   17d84:	adds	r8, r1, r5
   17d88:	str	r1, [sp, #92]	; 0x5c
   17d8c:	str	r3, [sp, #84]	; 0x54
   17d90:	ldr	r5, [fp, #-160]	; 0xffffff60
   17d94:	adc	r1, r3, ip
   17d98:	eor	r0, r8, r0
   17d9c:	ldr	ip, [fp, #-156]	; 0xffffff64
   17da0:	str	r1, [sp, #148]	; 0x94
   17da4:	eor	r1, r1, r4
   17da8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   17dac:	lsl	r2, r1, #1
   17db0:	orr	r2, r2, r0, lsr #31
   17db4:	lsl	r0, r0, #1
   17db8:	orr	r3, r0, r1, lsr #31
   17dbc:	ldr	r0, [sp, #160]	; 0xa0
   17dc0:	ldr	r1, [sp, #112]	; 0x70
   17dc4:	str	r2, [sp, #64]	; 0x40
   17dc8:	str	r2, [sp, #316]	; 0x13c
   17dcc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17dd0:	str	r3, [sp, #68]	; 0x44
   17dd4:	str	r3, [sp, #312]	; 0x138
   17dd8:	adds	lr, r0, r1
   17ddc:	ldr	r1, [sp, #132]	; 0x84
   17de0:	adc	r7, r6, r1
   17de4:	ldr	r1, [sp, #100]	; 0x64
   17de8:	adds	r4, lr, r4
   17dec:	adc	r2, r7, r2
   17df0:	eor	lr, r2, r1
   17df4:	ldr	r1, [sp, #108]	; 0x6c
   17df8:	eor	sl, r4, r1
   17dfc:	ldr	r1, [sp, #196]	; 0xc4
   17e00:	adds	r3, lr, r1
   17e04:	ldr	r1, [sp, #200]	; 0xc8
   17e08:	eor	r0, r3, r0
   17e0c:	lsl	r9, r0, #8
   17e10:	lsr	r0, r0, #24
   17e14:	adc	r1, sl, r1
   17e18:	adds	r4, r5, r4
   17e1c:	eor	r7, r1, r6
   17e20:	adc	r2, ip, r2
   17e24:	orr	r0, r0, r7, lsl #8
   17e28:	orr	r9, r9, r7, lsr #24
   17e2c:	adds	r7, r4, r0
   17e30:	adc	r2, r2, r9
   17e34:	eor	r4, r7, lr
   17e38:	ldr	lr, [sp, #68]	; 0x44
   17e3c:	eor	sl, r2, sl
   17e40:	lsl	r6, r4, #16
   17e44:	str	r2, [sp, #160]	; 0xa0
   17e48:	orr	r2, r6, sl, lsr #16
   17e4c:	lsr	r6, r4, #16
   17e50:	orr	r6, r6, sl, lsl #16
   17e54:	str	r2, [sp, #196]	; 0xc4
   17e58:	adds	r3, r6, r3
   17e5c:	str	r6, [sp, #200]	; 0xc8
   17e60:	adc	r1, r2, r1
   17e64:	str	r3, [sp, #100]	; 0x64
   17e68:	eor	r0, r3, r0
   17e6c:	ldr	r2, [sp, #172]	; 0xac
   17e70:	str	r1, [sp, #152]	; 0x98
   17e74:	eor	r1, r1, r9
   17e78:	lsl	r3, r1, #1
   17e7c:	orr	r3, r3, r0, lsr #31
   17e80:	lsl	r0, r0, #1
   17e84:	orr	r0, r0, r1, lsr #31
   17e88:	ldr	r1, [sp, #168]	; 0xa8
   17e8c:	adds	r1, r5, r1
   17e90:	adc	r6, ip, r2
   17e94:	ldr	r2, [sp, #72]	; 0x48
   17e98:	adds	r1, r1, r0
   17e9c:	adc	r6, r6, r3
   17ea0:	eor	r5, r6, r2
   17ea4:	ldr	r2, [sp, #88]	; 0x58
   17ea8:	adds	ip, r5, r8
   17eac:	eor	r0, ip, r0
   17eb0:	eor	r4, r1, r2
   17eb4:	ldr	r2, [sp, #148]	; 0x94
   17eb8:	adc	r8, r4, r2
   17ebc:	lsl	r2, r0, #8
   17ec0:	lsr	r0, r0, #24
   17ec4:	eor	r3, r8, r3
   17ec8:	orr	r2, r2, r3, lsr #24
   17ecc:	orr	r0, r0, r3, lsl #8
   17ed0:	ldr	r3, [sp, #220]	; 0xdc
   17ed4:	adds	r1, r1, r3
   17ed8:	ldr	r3, [sp, #204]	; 0xcc
   17edc:	adc	r3, r6, r3
   17ee0:	adds	r6, r1, r0
   17ee4:	adc	r1, r3, r2
   17ee8:	eor	r3, r6, r5
   17eec:	str	r6, [sp, #144]	; 0x90
   17ef0:	str	r1, [sp, #148]	; 0x94
   17ef4:	eor	r1, r1, r4
   17ef8:	lsl	r4, r3, #16
   17efc:	lsr	r3, r3, #16
   17f00:	orr	sl, r3, r1, lsl #16
   17f04:	orr	r9, r4, r1, lsr #16
   17f08:	adds	r3, sl, ip
   17f0c:	ldr	ip, [sp, #64]	; 0x40
   17f10:	str	r9, [sp, #356]	; 0x164
   17f14:	str	sl, [sp, #352]	; 0x160
   17f18:	str	r9, [sp, #108]	; 0x6c
   17f1c:	str	sl, [sp, #112]	; 0x70
   17f20:	adc	r6, r9, r8
   17f24:	eor	r0, r3, r0
   17f28:	mov	r5, r3
   17f2c:	str	r3, [sp, #168]	; 0xa8
   17f30:	eor	r1, r6, r2
   17f34:	str	r5, [sp, #320]	; 0x140
   17f38:	sub	r5, fp, #144	; 0x90
   17f3c:	str	r6, [sp, #324]	; 0x144
   17f40:	str	r6, [sp, #172]	; 0xac
   17f44:	ldr	r6, [sp, #100]	; 0x64
   17f48:	lsl	r2, r1, #1
   17f4c:	orr	r2, r2, r0, lsr #31
   17f50:	lsl	r0, r0, #1
   17f54:	orr	r8, r0, r1, lsr #31
   17f58:	ldr	r0, [sp, #208]	; 0xd0
   17f5c:	ldr	r1, [sp, #192]	; 0xc0
   17f60:	str	r2, [sp, #40]	; 0x28
   17f64:	ldr	r2, [sp, #136]	; 0x88
   17f68:	adds	r0, lr, r0
   17f6c:	adc	r1, ip, r1
   17f70:	adds	r4, r0, r7
   17f74:	ldr	r0, [sp, #160]	; 0xa0
   17f78:	adc	r1, r1, r0
   17f7c:	eor	r3, r1, r2
   17f80:	ldr	r2, [sp, #164]	; 0xa4
   17f84:	str	r3, [sp, #96]	; 0x60
   17f88:	eor	r0, r4, r2
   17f8c:	ldr	r2, [sp, #76]	; 0x4c
   17f90:	str	r0, [sp, #88]	; 0x58
   17f94:	adds	r3, r3, r2
   17f98:	ldr	r2, [sp, #80]	; 0x50
   17f9c:	str	r3, [sp, #132]	; 0x84
   17fa0:	eor	r3, r3, lr
   17fa4:	lsl	r7, r3, #8
   17fa8:	lsr	r3, r3, #24
   17fac:	adc	r2, r0, r2
   17fb0:	str	r2, [sp, #136]	; 0x88
   17fb4:	eor	r2, r2, ip
   17fb8:	orr	r7, r7, r2, lsr #24
   17fbc:	orr	r3, r3, r2, lsl #8
   17fc0:	ldr	r2, [sp, #252]	; 0xfc
   17fc4:	str	r3, [sp, #164]	; 0xa4
   17fc8:	str	r7, [sp, #160]	; 0xa0
   17fcc:	adds	r0, r4, r2
   17fd0:	ldr	r2, [sp, #224]	; 0xe0
   17fd4:	adc	r1, r1, r2
   17fd8:	adds	r2, r0, r3
   17fdc:	ldr	r0, [sp, #232]	; 0xe8
   17fe0:	adc	r3, r1, r7
   17fe4:	ldr	r1, [sp, #228]	; 0xe4
   17fe8:	str	r2, [sp, #80]	; 0x50
   17fec:	ldr	r7, [sp, #128]	; 0x80
   17ff0:	str	r3, [sp, #76]	; 0x4c
   17ff4:	adds	r0, r2, r0
   17ff8:	mov	r2, r8
   17ffc:	adc	r1, r3, r1
   18000:	adds	r0, r0, r8
   18004:	ldr	r8, [sp, #40]	; 0x28
   18008:	str	r2, [sp, #288]	; 0x120
   1800c:	mov	r9, r2
   18010:	ldm	r5, {r2, r3, r4, r5}
   18014:	str	r0, [sp, #64]	; 0x40
   18018:	adc	r0, r1, r8
   1801c:	ldr	r1, [sp, #116]	; 0x74
   18020:	str	r8, [sp, #292]	; 0x124
   18024:	str	r0, [sp, #56]	; 0x38
   18028:	ldr	r0, [sp, #140]	; 0x8c
   1802c:	adds	lr, r1, r0
   18030:	ldr	r1, [sp, #120]	; 0x78
   18034:	adc	r1, r1, r7
   18038:	adds	r2, lr, r2
   1803c:	adc	r1, r1, r3
   18040:	ldr	r3, [sp, #84]	; 0x54
   18044:	eor	ip, r1, r3
   18048:	ldr	r3, [sp, #92]	; 0x5c
   1804c:	adds	lr, ip, r6
   18050:	ldr	r6, [sp, #152]	; 0x98
   18054:	eor	r0, lr, r0
   18058:	eor	r3, r2, r3
   1805c:	adc	sl, r3, r6
   18060:	lsl	r6, r0, #8
   18064:	lsr	r0, r0, #24
   18068:	eor	r7, sl, r7
   1806c:	orr	r6, r6, r7, lsr #24
   18070:	orr	r7, r0, r7, lsl #8
   18074:	adds	r0, r4, r2
   18078:	adc	r1, r5, r1
   1807c:	ldr	r5, [fp, #-128]	; 0xffffff80
   18080:	adds	r2, r0, r7
   18084:	str	r6, [sp, #60]	; 0x3c
   18088:	str	r7, [sp, #128]	; 0x80
   1808c:	adc	r0, r1, r6
   18090:	eor	r1, r2, ip
   18094:	str	r2, [sp, #84]	; 0x54
   18098:	ldr	r6, [sp, #124]	; 0x7c
   1809c:	str	r0, [sp, #92]	; 0x5c
   180a0:	eor	r0, r0, r3
   180a4:	lsl	r2, r1, #16
   180a8:	lsr	r1, r1, #16
   180ac:	ldr	r3, [sp, #104]	; 0x68
   180b0:	orr	r4, r1, r0, lsl #16
   180b4:	orr	r2, r2, r0, lsr #16
   180b8:	ldr	r0, [sp, #184]	; 0xb8
   180bc:	ldr	r1, [sp, #188]	; 0xbc
   180c0:	adds	ip, r4, lr
   180c4:	str	r4, [sp, #116]	; 0x74
   180c8:	str	r4, [sp, #360]	; 0x168
   180cc:	ldr	r4, [fp, #-124]	; 0xffffff84
   180d0:	str	r2, [sp, #364]	; 0x16c
   180d4:	str	r2, [sp, #120]	; 0x78
   180d8:	adc	lr, r2, sl
   180dc:	str	ip, [sp, #328]	; 0x148
   180e0:	adds	r0, r0, r6
   180e4:	str	lr, [sp, #332]	; 0x14c
   180e8:	adc	r1, r1, r3
   180ec:	adds	r2, r0, r5
   180f0:	ldr	r0, [sp, #196]	; 0xc4
   180f4:	adc	r1, r1, r4
   180f8:	eor	r4, r1, r0
   180fc:	ldr	r0, [sp, #200]	; 0xc8
   18100:	eor	r5, r2, r0
   18104:	ldr	r0, [sp, #176]	; 0xb0
   18108:	adds	r7, r4, r0
   1810c:	ldr	r0, [sp, #180]	; 0xb4
   18110:	str	r7, [sp, #48]	; 0x30
   18114:	adc	r0, r5, r0
   18118:	str	r0, [sp, #52]	; 0x34
   1811c:	eor	sl, r0, r3
   18120:	eor	r0, r7, r6
   18124:	lsl	r7, r0, #8
   18128:	lsr	r0, r0, #24
   1812c:	orr	r6, r0, sl, lsl #8
   18130:	ldr	r0, [sp, #216]	; 0xd8
   18134:	orr	r3, r7, sl, lsr #24
   18138:	str	r3, [sp, #68]	; 0x44
   1813c:	str	r6, [sp, #72]	; 0x48
   18140:	adds	r0, r2, r0
   18144:	ldr	r2, [sp, #212]	; 0xd4
   18148:	adc	r1, r1, r2
   1814c:	adds	r2, r0, r6
   18150:	str	r2, [sp, #100]	; 0x64
   18154:	adc	r0, r1, r3
   18158:	eor	r2, r2, r4
   1815c:	str	r0, [sp, #104]	; 0x68
   18160:	lsr	r1, r2, #16
   18164:	eor	r0, r0, r5
   18168:	lsl	r2, r2, #16
   1816c:	orr	r3, r1, r0, lsl #16
   18170:	ldr	r1, [sp, #56]	; 0x38
   18174:	orr	r0, r2, r0, lsr #16
   18178:	str	r0, [sp, #124]	; 0x7c
   1817c:	str	r3, [sp, #44]	; 0x2c
   18180:	eor	r2, r0, r1
   18184:	ldr	r0, [sp, #64]	; 0x40
   18188:	adds	r5, r2, ip
   1818c:	eor	r9, r5, r9
   18190:	lsl	sl, r9, #8
   18194:	lsr	r6, r9, #24
   18198:	eor	r4, r3, r0
   1819c:	ldr	r3, [sp, #244]	; 0xf4
   181a0:	adc	r7, r4, lr
   181a4:	eor	r8, r7, r8
   181a8:	orr	sl, sl, r8, lsr #24
   181ac:	orr	r6, r6, r8, lsl #8
   181b0:	adds	r8, r0, r3
   181b4:	ldr	r3, [sp, #240]	; 0xf0
   181b8:	ldr	r0, [sp, #60]	; 0x3c
   181bc:	adc	r9, r1, r3
   181c0:	adds	r8, r8, r6
   181c4:	ldr	r1, [sp, #124]	; 0x7c
   181c8:	adc	r3, r9, sl
   181cc:	eor	r2, r8, r2
   181d0:	str	r8, [sp, #184]	; 0xb8
   181d4:	ldr	r8, [fp, #-88]	; 0xffffffa8
   181d8:	str	r3, [sp, #188]	; 0xbc
   181dc:	eor	r4, r3, r4
   181e0:	lsl	r3, r2, #16
   181e4:	lsr	r2, r2, #16
   181e8:	orr	r2, r2, r4, lsl #16
   181ec:	orr	r3, r3, r4, lsr #16
   181f0:	str	r1, [sp, #372]	; 0x174
   181f4:	adds	r4, r2, r5
   181f8:	str	r2, [sp, #180]	; 0xb4
   181fc:	str	r3, [sp, #176]	; 0xb0
   18200:	ldr	r5, [fp, #-96]	; 0xffffffa0
   18204:	adc	r2, r3, r7
   18208:	str	r4, [sp, #140]	; 0x8c
   1820c:	eor	r3, r4, r6
   18210:	str	r2, [sp, #152]	; 0x98
   18214:	eor	r2, r2, sl
   18218:	lsl	r4, r2, #1
   1821c:	orr	r4, r4, r3, lsr #31
   18220:	lsl	r3, r3, #1
   18224:	orr	r2, r3, r2, lsr #31
   18228:	str	r4, [sp, #200]	; 0xc8
   1822c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   18230:	str	r2, [sp, #196]	; 0xc4
   18234:	eor	r2, lr, r0
   18238:	ldr	r0, [sp, #128]	; 0x80
   1823c:	lsl	r7, r2, #1
   18240:	eor	r3, ip, r0
   18244:	ldr	r0, [fp, #-84]	; 0xffffffac
   18248:	orr	sl, r7, r3, lsr #31
   1824c:	lsl	r3, r3, #1
   18250:	ldr	r7, [sp, #44]	; 0x2c
   18254:	orr	r6, r3, r2, lsr #31
   18258:	ldr	r2, [sp, #144]	; 0x90
   1825c:	ldr	r3, [sp, #148]	; 0x94
   18260:	str	r0, [sp, #148]	; 0x94
   18264:	ldr	r0, [sp, #48]	; 0x30
   18268:	str	r7, [sp, #368]	; 0x170
   1826c:	adds	r2, r6, r2
   18270:	adc	r3, sl, r3
   18274:	adds	r5, r2, r5
   18278:	ldr	r2, [sp, #80]	; 0x50
   1827c:	adc	r4, r3, r4
   18280:	adds	r9, r7, r0
   18284:	ldr	r0, [sp, #52]	; 0x34
   18288:	adc	lr, r1, r0
   1828c:	ldr	r0, [sp, #88]	; 0x58
   18290:	ldr	r1, [sp, #76]	; 0x4c
   18294:	eor	r0, r1, r0
   18298:	ldr	r1, [sp, #96]	; 0x60
   1829c:	eor	r1, r2, r1
   182a0:	lsr	r2, r1, #16
   182a4:	lsl	r1, r1, #16
   182a8:	orr	r2, r2, r0, lsl #16
   182ac:	orr	r0, r1, r0, lsr #16
   182b0:	eor	r1, r4, r0
   182b4:	str	r2, [sp, #64]	; 0x40
   182b8:	eor	r2, r5, r2
   182bc:	str	r0, [sp, #76]	; 0x4c
   182c0:	ldr	r0, [sp, #148]	; 0x94
   182c4:	adds	ip, r1, r9
   182c8:	adc	r3, r2, lr
   182cc:	eor	r6, ip, r6
   182d0:	adds	r5, r8, r5
   182d4:	eor	r7, r3, sl
   182d8:	lsl	sl, r6, #8
   182dc:	lsr	r6, r6, #24
   182e0:	orr	r6, r6, r7, lsl #8
   182e4:	orr	sl, sl, r7, lsr #24
   182e8:	adc	r7, r0, r4
   182ec:	ldr	r0, [sp, #228]	; 0xe4
   182f0:	adds	r4, r5, r6
   182f4:	ldr	r5, [sp, #232]	; 0xe8
   182f8:	adc	r7, r7, sl
   182fc:	eor	r1, r4, r1
   18300:	eor	r2, r7, r2
   18304:	adds	r5, r4, r5
   18308:	lsl	r4, r1, #16
   1830c:	lsr	r1, r1, #16
   18310:	adc	r8, r7, r0
   18314:	ldr	r0, [sp, #196]	; 0xc4
   18318:	orr	r1, r1, r2, lsl #16
   1831c:	mov	r7, r1
   18320:	str	r1, [sp, #148]	; 0x94
   18324:	str	r7, [sp, #376]	; 0x178
   18328:	ldr	r7, [fp, #-80]	; 0xffffffb0
   1832c:	adds	r0, r5, r0
   18330:	str	r0, [sp, #80]	; 0x50
   18334:	ldr	r0, [sp, #200]	; 0xc8
   18338:	adc	r0, r8, r0
   1833c:	str	r0, [sp, #228]	; 0xe4
   18340:	orr	r0, r4, r2, lsr #16
   18344:	adds	r2, r1, ip
   18348:	str	r2, [sp, #124]	; 0x7c
   1834c:	adc	r1, r0, r3
   18350:	mov	r5, r0
   18354:	str	r0, [sp, #144]	; 0x90
   18358:	eor	r0, r1, sl
   1835c:	mov	ip, r1
   18360:	str	r1, [sp, #128]	; 0x80
   18364:	eor	r1, r2, r6
   18368:	mov	r6, r2
   1836c:	str	r5, [sp, #380]	; 0x17c
   18370:	lsl	r2, r0, #1
   18374:	str	r6, [sp, #336]	; 0x150
   18378:	ldr	r6, [fp, #-76]	; 0xffffffb4
   1837c:	str	ip, [sp, #340]	; 0x154
   18380:	orr	r4, r2, r1, lsr #31
   18384:	lsl	r1, r1, #1
   18388:	orr	r3, r1, r0, lsr #31
   1838c:	ldr	r0, [sp, #68]	; 0x44
   18390:	ldr	r1, [sp, #72]	; 0x48
   18394:	str	r4, [sp, #88]	; 0x58
   18398:	str	r4, [sp, #300]	; 0x12c
   1839c:	str	r3, [sp, #96]	; 0x60
   183a0:	str	r3, [sp, #296]	; 0x128
   183a4:	eor	r0, lr, r0
   183a8:	eor	r1, r9, r1
   183ac:	ldr	r9, [fp, #-72]	; 0xffffffb8
   183b0:	lsl	r2, r0, #1
   183b4:	orr	sl, r2, r1, lsr #31
   183b8:	lsl	r1, r1, #1
   183bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   183c0:	orr	r8, r1, r0, lsr #31
   183c4:	ldr	r0, [sp, #84]	; 0x54
   183c8:	str	r2, [sp, #232]	; 0xe8
   183cc:	ldr	r2, [sp, #64]	; 0x40
   183d0:	adds	r1, r8, r0
   183d4:	ldr	r0, [sp, #92]	; 0x5c
   183d8:	adc	r0, sl, r0
   183dc:	adds	r1, r1, r7
   183e0:	adc	r3, r0, r6
   183e4:	ldr	r0, [sp, #108]	; 0x6c
   183e8:	eor	r6, r3, r0
   183ec:	ldr	r0, [sp, #132]	; 0x84
   183f0:	adds	r7, r2, r0
   183f4:	ldr	r0, [sp, #136]	; 0x88
   183f8:	ldr	r2, [sp, #76]	; 0x4c
   183fc:	adc	r5, r2, r0
   18400:	ldr	r0, [sp, #112]	; 0x70
   18404:	adds	ip, r6, r7
   18408:	eor	r4, ip, r8
   1840c:	lsl	r8, r4, #8
   18410:	lsr	r4, r4, #24
   18414:	eor	r2, r1, r0
   18418:	adc	lr, r2, r5
   1841c:	adds	r1, r9, r1
   18420:	eor	sl, lr, sl
   18424:	orr	r0, r4, sl, lsl #8
   18428:	ldr	r4, [sp, #232]	; 0xe8
   1842c:	orr	r8, r8, sl, lsr #24
   18430:	adc	r3, r4, r3
   18434:	adds	r4, r1, r0
   18438:	adc	r1, r3, r8
   1843c:	str	r4, [sp, #72]	; 0x48
   18440:	str	r1, [sp, #76]	; 0x4c
   18444:	eor	r1, r1, r2
   18448:	eor	r2, r4, r6
   1844c:	lsl	r6, r2, #16
   18450:	lsr	r2, r2, #16
   18454:	orr	r6, r6, r1, lsr #16
   18458:	orr	r1, r2, r1, lsl #16
   1845c:	ldr	r2, [sp, #248]	; 0xf8
   18460:	adds	r9, r1, ip
   18464:	str	r1, [sp, #136]	; 0x88
   18468:	ldr	r1, [sp, #228]	; 0xe4
   1846c:	eor	r0, r9, r0
   18470:	str	r9, [sp, #344]	; 0x158
   18474:	str	r9, [sp, #112]	; 0x70
   18478:	eor	r1, r6, r1
   1847c:	str	r1, [sp, #132]	; 0x84
   18480:	adc	r1, r6, lr
   18484:	str	r1, [sp, #232]	; 0xe8
   18488:	eor	r1, r1, r8
   1848c:	lsl	r6, r1, #1
   18490:	orr	sl, r6, r0, lsr #31
   18494:	lsl	r0, r0, #1
   18498:	orr	r4, r0, r1, lsr #31
   1849c:	ldr	r0, [sp, #160]	; 0xa0
   184a0:	ldr	r1, [sp, #164]	; 0xa4
   184a4:	str	sl, [sp, #92]	; 0x5c
   184a8:	str	r4, [sp, #84]	; 0x54
   184ac:	eor	r0, r5, r0
   184b0:	eor	r1, r7, r1
   184b4:	lsl	r7, r0, #1
   184b8:	orr	r7, r7, r1, lsr #31
   184bc:	lsl	r1, r1, #1
   184c0:	orr	r0, r1, r0, lsr #31
   184c4:	ldr	r1, [sp, #236]	; 0xec
   184c8:	adds	r1, r0, r1
   184cc:	adc	r6, r7, r2
   184d0:	ldr	r2, [sp, #100]	; 0x64
   184d4:	adds	r1, r1, r2
   184d8:	ldr	r2, [sp, #104]	; 0x68
   184dc:	adc	r6, r6, r2
   184e0:	ldr	r2, [sp, #120]	; 0x78
   184e4:	eor	ip, r6, r2
   184e8:	ldr	r2, [sp, #116]	; 0x74
   184ec:	eor	r5, r1, r2
   184f0:	ldr	r2, [sp, #168]	; 0xa8
   184f4:	adds	lr, ip, r2
   184f8:	ldr	r2, [sp, #172]	; 0xac
   184fc:	eor	r0, lr, r0
   18500:	lsl	r3, r0, #8
   18504:	lsr	r0, r0, #24
   18508:	adc	r8, r5, r2
   1850c:	eor	r7, r8, r7
   18510:	orr	r3, r3, r7, lsr #24
   18514:	orr	r7, r0, r7, lsl #8
   18518:	ldr	r0, [sp, #232]	; 0xe8
   1851c:	adds	r2, r7, r1
   18520:	str	r3, [sp, #172]	; 0xac
   18524:	adc	r1, r3, r6
   18528:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1852c:	str	r0, [sp, #348]	; 0x15c
   18530:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18534:	str	sl, [sp, #308]	; 0x134
   18538:	str	r4, [sp, #304]	; 0x130
   1853c:	ldr	r4, [sp, #172]	; 0xac
   18540:	adds	r2, r2, r3
   18544:	ldr	r3, [sp, #80]	; 0x50
   18548:	str	r2, [sp, #100]	; 0x64
   1854c:	adc	r0, r1, r0
   18550:	eor	r2, r2, ip
   18554:	ldr	ip, [sp, #132]	; 0x84
   18558:	str	r0, [sp, #104]	; 0x68
   1855c:	lsl	r1, r2, #16
   18560:	eor	r0, r0, r5
   18564:	lsr	r2, r2, #16
   18568:	orr	sl, r2, r0, lsl #16
   1856c:	orr	r1, r1, r0, lsr #16
   18570:	ldr	r0, [sp, #136]	; 0x88
   18574:	adds	r2, sl, lr
   18578:	str	r1, [sp, #168]	; 0xa8
   1857c:	adc	r8, r1, r8
   18580:	adds	r9, r2, ip
   18584:	eor	r2, r2, r7
   18588:	eor	r1, r0, r3
   1858c:	ldr	r0, [sp, #200]	; 0xc8
   18590:	eor	r4, r8, r4
   18594:	adc	lr, r8, r1
   18598:	lsl	r7, r4, #1
   1859c:	orr	r7, r7, r2, lsr #31
   185a0:	lsl	r2, r2, #1
   185a4:	orr	r2, r2, r4, lsr #31
   185a8:	ldr	r4, [fp, #-76]	; 0xffffffb4
   185ac:	eor	r5, lr, r0
   185b0:	ldr	r0, [sp, #196]	; 0xc4
   185b4:	str	r7, [sp, #108]	; 0x6c
   185b8:	str	r7, [sp, #316]	; 0x13c
   185bc:	ldr	r7, [sp, #96]	; 0x60
   185c0:	str	r2, [sp, #116]	; 0x74
   185c4:	str	r2, [sp, #312]	; 0x138
   185c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   185cc:	eor	r0, r9, r0
   185d0:	lsl	r6, r0, #8
   185d4:	lsr	r0, r0, #24
   185d8:	orr	r0, r0, r5, lsl #8
   185dc:	orr	r6, r6, r5, lsr #24
   185e0:	adds	r5, r0, r3
   185e4:	ldr	r3, [sp, #228]	; 0xe4
   185e8:	adc	r3, r6, r3
   185ec:	adds	r2, r5, r2
   185f0:	adc	r3, r3, r4
   185f4:	str	r2, [sp, #68]	; 0x44
   185f8:	str	r3, [sp, #80]	; 0x50
   185fc:	eor	r1, r3, r1
   18600:	eor	r3, r2, ip
   18604:	ldr	r2, [sp, #88]	; 0x58
   18608:	lsl	r4, r3, #16
   1860c:	lsr	r3, r3, #16
   18610:	orr	r5, r4, r1, lsr #16
   18614:	orr	r1, r3, r1, lsl #16
   18618:	adds	r4, r1, r9
   1861c:	mov	r8, r1
   18620:	str	r1, [sp, #136]	; 0x88
   18624:	str	r5, [sp, #356]	; 0x164
   18628:	str	r5, [sp, #132]	; 0x84
   1862c:	ldr	r9, [fp, #-96]	; 0xffffffa0
   18630:	adc	r3, r5, lr
   18634:	eor	r0, r4, r0
   18638:	str	r8, [sp, #352]	; 0x160
   1863c:	str	r4, [sp, #320]	; 0x140
   18640:	ldr	r5, [sp, #140]	; 0x8c
   18644:	str	r4, [sp, #196]	; 0xc4
   18648:	ldr	r4, [sp, #152]	; 0x98
   1864c:	eor	r1, r3, r6
   18650:	mov	lr, r3
   18654:	str	r3, [sp, #172]	; 0xac
   18658:	lsl	r3, r1, #1
   1865c:	str	lr, [sp, #324]	; 0x144
   18660:	ldr	lr, [fp, #-92]	; 0xffffffa4
   18664:	orr	r6, r3, r0, lsr #31
   18668:	lsl	r0, r0, #1
   1866c:	orr	r3, r0, r1, lsr #31
   18670:	ldr	r0, [sp, #72]	; 0x48
   18674:	ldr	r1, [sp, #76]	; 0x4c
   18678:	str	r6, [sp, #228]	; 0xe4
   1867c:	str	r6, [sp, #292]	; 0x124
   18680:	ldr	r6, [fp, #-124]	; 0xffffff84
   18684:	str	r3, [sp, #200]	; 0xc8
   18688:	str	r3, [sp, #288]	; 0x120
   1868c:	ldr	r3, [fp, #-128]	; 0xffffff80
   18690:	adds	r0, r0, r7
   18694:	adc	r1, r1, r2
   18698:	adds	r0, r0, r3
   1869c:	ldr	r3, [sp, #168]	; 0xa8
   186a0:	adc	r1, r1, r6
   186a4:	eor	r6, r0, sl
   186a8:	eor	r3, r1, r3
   186ac:	adds	ip, r3, r5
   186b0:	adc	sl, r6, r4
   186b4:	eor	r5, ip, r7
   186b8:	adds	r0, r9, r0
   186bc:	ldr	r7, [sp, #124]	; 0x7c
   186c0:	lsl	r8, r5, #8
   186c4:	eor	r4, sl, r2
   186c8:	lsr	r5, r5, #24
   186cc:	adc	r1, lr, r1
   186d0:	orr	r8, r8, r4, lsr #24
   186d4:	orr	r4, r5, r4, lsl #8
   186d8:	adds	r2, r0, r4
   186dc:	adc	r0, r1, r8
   186e0:	eor	r1, r2, r3
   186e4:	str	r2, [sp, #120]	; 0x78
   186e8:	str	r0, [sp, #140]	; 0x8c
   186ec:	lsl	r3, r1, #16
   186f0:	eor	r0, r0, r6
   186f4:	lsr	r1, r1, #16
   186f8:	orr	r6, r3, r0, lsr #16
   186fc:	orr	r0, r1, r0, lsl #16
   18700:	adds	r3, r0, ip
   18704:	mov	ip, r0
   18708:	str	r0, [sp, #160]	; 0xa0
   1870c:	str	r6, [sp, #364]	; 0x16c
   18710:	str	r6, [sp, #152]	; 0x98
   18714:	adc	r1, r6, sl
   18718:	mov	r5, r3
   1871c:	str	r3, [sp, #164]	; 0xa4
   18720:	str	ip, [sp, #360]	; 0x168
   18724:	eor	r0, r1, r8
   18728:	mov	lr, r1
   1872c:	str	r1, [sp, #168]	; 0xa8
   18730:	eor	r1, r3, r4
   18734:	ldr	r8, [sp, #84]	; 0x54
   18738:	ldr	r4, [sp, #92]	; 0x5c
   1873c:	str	r5, [sp, #328]	; 0x148
   18740:	lsl	r3, r0, #1
   18744:	str	lr, [sp, #332]	; 0x14c
   18748:	orr	r2, r3, r1, lsr #31
   1874c:	lsl	r1, r1, #1
   18750:	ldr	r3, [sp, #80]	; 0x50
   18754:	orr	sl, r1, r0, lsr #31
   18758:	ldr	r0, [sp, #220]	; 0xdc
   1875c:	ldr	r1, [sp, #68]	; 0x44
   18760:	str	r2, [sp, #96]	; 0x60
   18764:	adds	r0, r1, r0
   18768:	ldr	r1, [sp, #204]	; 0xcc
   1876c:	adc	r1, r3, r1
   18770:	adds	r0, r0, sl
   18774:	ldr	r3, [fp, #-84]	; 0xffffffac
   18778:	str	r0, [sp, #88]	; 0x58
   1877c:	adc	r0, r1, r2
   18780:	ldr	r1, [sp, #104]	; 0x68
   18784:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18788:	str	r0, [sp, #80]	; 0x50
   1878c:	ldr	r0, [sp, #100]	; 0x64
   18790:	adds	r0, r8, r0
   18794:	adc	r1, r4, r1
   18798:	adds	r0, r0, r2
   1879c:	ldr	r2, [sp, #176]	; 0xb0
   187a0:	adc	r1, r1, r3
   187a4:	ldr	r3, [sp, #180]	; 0xb4
   187a8:	eor	r2, r1, r2
   187ac:	adds	r5, r2, r7
   187b0:	ldr	r7, [sp, #128]	; 0x80
   187b4:	eor	r3, r0, r3
   187b8:	eor	r6, r5, r8
   187bc:	adc	ip, r3, r7
   187c0:	lsl	r7, r6, #8
   187c4:	lsr	r6, r6, #24
   187c8:	eor	r9, ip, r4
   187cc:	orr	r4, r7, r9, lsr #24
   187d0:	ldr	r7, [sp, #244]	; 0xf4
   187d4:	orr	r6, r6, r9, lsl #8
   187d8:	str	r4, [sp, #128]	; 0x80
   187dc:	str	r6, [sp, #176]	; 0xb0
   187e0:	adds	r0, r0, r7
   187e4:	ldr	r7, [sp, #240]	; 0xf0
   187e8:	adc	r1, r1, r7
   187ec:	adds	r7, r0, r6
   187f0:	ldr	r6, [sp, #108]	; 0x6c
   187f4:	adc	r0, r1, r4
   187f8:	eor	r1, r7, r2
   187fc:	str	r7, [sp, #180]	; 0xb4
   18800:	ldr	r7, [sp, #116]	; 0x74
   18804:	str	r0, [sp, #204]	; 0xcc
   18808:	lsl	r2, r1, #16
   1880c:	eor	r0, r0, r3
   18810:	lsr	r1, r1, #16
   18814:	orr	r1, r1, r0, lsl #16
   18818:	orr	r2, r2, r0, lsr #16
   1881c:	ldr	r0, [sp, #184]	; 0xb8
   18820:	adds	r5, r1, r5
   18824:	str	r1, [sp, #240]	; 0xf0
   18828:	str	r1, [sp, #368]	; 0x170
   1882c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18830:	str	r2, [sp, #244]	; 0xf4
   18834:	str	r2, [sp, #372]	; 0x174
   18838:	adc	r4, r2, ip
   1883c:	adds	ip, r7, r0
   18840:	ldr	r0, [sp, #188]	; 0xbc
   18844:	adc	r8, r6, r0
   18848:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1884c:	adds	r1, ip, r1
   18850:	adc	r2, r8, r0
   18854:	ldr	r0, [sp, #144]	; 0x90
   18858:	eor	ip, r2, r0
   1885c:	ldr	r0, [sp, #148]	; 0x94
   18860:	eor	lr, r1, r0
   18864:	ldr	r0, [sp, #112]	; 0x70
   18868:	adds	r3, ip, r0
   1886c:	ldr	r0, [sp, #232]	; 0xe8
   18870:	str	r3, [sp, #144]	; 0x90
   18874:	adc	r0, lr, r0
   18878:	str	r0, [sp, #148]	; 0x94
   1887c:	eor	r8, r0, r6
   18880:	eor	r0, r3, r7
   18884:	lsl	r7, r0, #8
   18888:	lsr	r0, r0, #24
   1888c:	orr	r6, r0, r8, lsl #8
   18890:	ldr	r0, [sp, #208]	; 0xd0
   18894:	orr	r7, r7, r8, lsr #24
   18898:	str	r7, [sp, #184]	; 0xb8
   1889c:	str	r6, [sp, #188]	; 0xbc
   188a0:	adds	r0, r1, r0
   188a4:	ldr	r1, [sp, #192]	; 0xc0
   188a8:	adc	r1, r2, r1
   188ac:	adds	r2, r0, r6
   188b0:	str	r2, [sp, #220]	; 0xdc
   188b4:	adc	r0, r1, r7
   188b8:	eor	r2, r2, ip
   188bc:	str	r0, [sp, #232]	; 0xe8
   188c0:	lsr	r1, r2, #16
   188c4:	eor	r0, r0, lr
   188c8:	lsl	r2, r2, #16
   188cc:	orr	r9, r2, r0, lsr #16
   188d0:	ldr	r2, [sp, #80]	; 0x50
   188d4:	orr	r3, r1, r0, lsl #16
   188d8:	ldr	r1, [sp, #88]	; 0x58
   188dc:	ldr	r0, [sp, #96]	; 0x60
   188e0:	str	r3, [sp, #208]	; 0xd0
   188e4:	eor	ip, r9, r2
   188e8:	eor	r3, r3, r1
   188ec:	adds	r7, ip, r5
   188f0:	eor	sl, r7, sl
   188f4:	adc	lr, r3, r4
   188f8:	eor	r0, lr, r0
   188fc:	lsl	r8, sl, #8
   18900:	lsr	r6, sl, #24
   18904:	orr	r8, r8, r0, lsr #24
   18908:	orr	sl, r6, r0, lsl #8
   1890c:	ldr	r0, [sp, #236]	; 0xec
   18910:	adds	r6, r1, r0
   18914:	ldr	r0, [sp, #248]	; 0xf8
   18918:	adc	r0, r2, r0
   1891c:	adds	r6, r6, sl
   18920:	adc	r0, r0, r8
   18924:	eor	r2, r6, ip
   18928:	str	r6, [sp, #256]	; 0x100
   1892c:	str	r0, [sp, #260]	; 0x104
   18930:	eor	r0, r0, r3
   18934:	lsl	r3, r2, #16
   18938:	lsr	r2, r2, #16
   1893c:	orr	r3, r3, r0, lsr #16
   18940:	orr	r0, r2, r0, lsl #16
   18944:	str	r0, [sp, #376]	; 0x178
   18948:	adds	r0, r0, r7
   1894c:	str	r3, [sp, #380]	; 0x17c
   18950:	ldr	r7, [sp, #208]	; 0xd0
   18954:	adc	r1, r3, lr
   18958:	str	r0, [sp, #336]	; 0x150
   1895c:	eor	r0, r0, sl
   18960:	ldr	sl, [fp, #-140]	; 0xffffff74
   18964:	str	r1, [sp, #340]	; 0x154
   18968:	eor	r1, r1, r8
   1896c:	lsl	r2, r0, #1
   18970:	ldr	r8, [fp, #-144]	; 0xffffff70
   18974:	orr	r2, r2, r1, lsr #31
   18978:	lsl	r1, r1, #1
   1897c:	orr	r0, r1, r0, lsr #31
   18980:	ldr	r1, [sp, #176]	; 0xb0
   18984:	str	r2, [sp, #296]	; 0x128
   18988:	str	r0, [sp, #300]	; 0x12c
   1898c:	ldr	r0, [sp, #128]	; 0x80
   18990:	eor	r1, r5, r1
   18994:	ldr	r5, [fp, #-156]	; 0xffffff64
   18998:	eor	r0, r4, r0
   1899c:	ldr	r4, [fp, #-160]	; 0xffffff60
   189a0:	lsl	r2, r0, #1
   189a4:	orr	r2, r2, r1, lsr #31
   189a8:	lsl	r1, r1, #1
   189ac:	orr	r3, r1, r0, lsr #31
   189b0:	ldr	r0, [sp, #120]	; 0x78
   189b4:	ldr	r1, [sp, #140]	; 0x8c
   189b8:	adds	r0, r3, r0
   189bc:	adc	r1, r2, r1
   189c0:	adds	r4, r0, r4
   189c4:	ldr	r0, [sp, #132]	; 0x84
   189c8:	adc	r5, r1, r5
   189cc:	eor	r1, r5, r0
   189d0:	ldr	r0, [sp, #144]	; 0x90
   189d4:	adds	lr, r7, r0
   189d8:	ldr	r0, [sp, #148]	; 0x94
   189dc:	adc	ip, r9, r0
   189e0:	ldr	r0, [sp, #136]	; 0x88
   189e4:	adds	r7, r1, lr
   189e8:	eor	r3, r7, r3
   189ec:	eor	r6, r4, r0
   189f0:	lsl	r0, r3, #8
   189f4:	lsr	r3, r3, #24
   189f8:	adc	r9, r6, ip
   189fc:	eor	r2, r9, r2
   18a00:	orr	r0, r0, r2, lsr #24
   18a04:	orr	r2, r3, r2, lsl #8
   18a08:	adds	r3, r8, r4
   18a0c:	adc	r4, sl, r5
   18a10:	ldr	r5, [sp, #196]	; 0xc4
   18a14:	adds	r3, r3, r2
   18a18:	adc	r4, r4, r0
   18a1c:	eor	r1, r3, r1
   18a20:	str	r3, [sp, #264]	; 0x108
   18a24:	str	r4, [sp, #268]	; 0x10c
   18a28:	eor	r4, r4, r6
   18a2c:	lsl	r3, r1, #16
   18a30:	lsr	r1, r1, #16
   18a34:	ldr	r6, [fp, #-68]	; 0xffffffbc
   18a38:	orr	r1, r1, r4, lsl #16
   18a3c:	orr	r3, r3, r4, lsr #16
   18a40:	ldr	r4, [sp, #172]	; 0xac
   18a44:	str	r1, [sp, #352]	; 0x160
   18a48:	adds	r1, r1, r7
   18a4c:	str	r3, [sp, #356]	; 0x164
   18a50:	ldr	r7, [fp, #-72]	; 0xffffffb8
   18a54:	adc	r3, r3, r9
   18a58:	str	r1, [sp, #344]	; 0x158
   18a5c:	eor	r1, r1, r2
   18a60:	eor	r0, r3, r0
   18a64:	lsl	r2, r1, #1
   18a68:	str	r3, [sp, #348]	; 0x15c
   18a6c:	ldr	r3, [sp, #204]	; 0xcc
   18a70:	orr	r2, r2, r0, lsr #31
   18a74:	lsl	r0, r0, #1
   18a78:	orr	r0, r0, r1, lsr #31
   18a7c:	ldr	r1, [sp, #188]	; 0xbc
   18a80:	str	r2, [sp, #304]	; 0x130
   18a84:	str	r0, [sp, #308]	; 0x134
   18a88:	ldr	r0, [sp, #184]	; 0xb8
   18a8c:	eor	r1, lr, r1
   18a90:	eor	r0, ip, r0
   18a94:	lsl	r2, r0, #1
   18a98:	orr	r2, r2, r1, lsr #31
   18a9c:	lsl	r1, r1, #1
   18aa0:	orr	r0, r1, r0, lsr #31
   18aa4:	ldr	r1, [sp, #180]	; 0xb4
   18aa8:	adds	r1, r0, r1
   18aac:	adc	r3, r2, r3
   18ab0:	adds	r1, r1, r7
   18ab4:	ldr	r7, [sp, #152]	; 0x98
   18ab8:	adc	r3, r3, r6
   18abc:	ldr	r6, [sp, #160]	; 0xa0
   18ac0:	eor	r7, r3, r7
   18ac4:	adds	r5, r7, r5
   18ac8:	eor	r6, r1, r6
   18acc:	adc	ip, r6, r4
   18ad0:	eor	r0, r5, r0
   18ad4:	lsl	r4, r0, #8
   18ad8:	eor	r2, ip, r2
   18adc:	lsr	r0, r0, #24
   18ae0:	orr	r4, r4, r2, lsr #24
   18ae4:	orr	r0, r0, r2, lsl #8
   18ae8:	ldr	r2, [sp, #252]	; 0xfc
   18aec:	adds	r1, r1, r2
   18af0:	ldr	r2, [sp, #224]	; 0xe0
   18af4:	adc	r2, r3, r2
   18af8:	adds	r1, r1, r0
   18afc:	adc	r2, r2, r4
   18b00:	str	r1, [sp, #272]	; 0x110
   18b04:	eor	r1, r1, r7
   18b08:	ldr	r7, [sp, #164]	; 0xa4
   18b0c:	str	r2, [sp, #276]	; 0x114
   18b10:	eor	r2, r2, r6
   18b14:	lsl	r3, r1, #16
   18b18:	lsr	r1, r1, #16
   18b1c:	ldr	r6, [sp, #200]	; 0xc8
   18b20:	orr	r1, r1, r2, lsl #16
   18b24:	orr	r3, r3, r2, lsr #16
   18b28:	str	r1, [sp, #360]	; 0x168
   18b2c:	adds	r1, r1, r5
   18b30:	str	r3, [sp, #364]	; 0x16c
   18b34:	adc	r2, r3, ip
   18b38:	eor	r0, r1, r0
   18b3c:	str	r1, [sp, #320]	; 0x140
   18b40:	ldr	r3, [sp, #240]	; 0xf0
   18b44:	str	r2, [sp, #324]	; 0x144
   18b48:	eor	r2, r2, r4
   18b4c:	lsl	r1, r0, #1
   18b50:	ldr	r4, [sp, #228]	; 0xe4
   18b54:	orr	r1, r1, r2, lsr #31
   18b58:	str	r1, [sp, #312]	; 0x138
   18b5c:	lsl	r1, r2, #1
   18b60:	ldr	r2, [sp, #220]	; 0xdc
   18b64:	orr	r0, r1, r0, lsr #31
   18b68:	ldr	r1, [sp, #212]	; 0xd4
   18b6c:	str	r0, [sp, #316]	; 0x13c
   18b70:	ldr	r0, [sp, #216]	; 0xd8
   18b74:	adds	r0, r6, r0
   18b78:	adc	r1, r4, r1
   18b7c:	adds	r0, r0, r2
   18b80:	ldr	r2, [sp, #232]	; 0xe8
   18b84:	eor	r3, r0, r3
   18b88:	adc	r1, r1, r2
   18b8c:	ldr	r2, [sp, #244]	; 0xf4
   18b90:	eor	r2, r1, r2
   18b94:	adds	lr, r2, r7
   18b98:	ldr	r7, [sp, #168]	; 0xa8
   18b9c:	adc	ip, r3, r7
   18ba0:	ldr	r7, [fp, #-132]	; 0xffffff7c
   18ba4:	eor	r5, ip, r4
   18ba8:	eor	r4, lr, r6
   18bac:	lsl	r6, r4, #8
   18bb0:	lsr	r4, r4, #24
   18bb4:	orr	r6, r6, r5, lsr #24
   18bb8:	orr	r5, r4, r5, lsl #8
   18bbc:	ldr	r4, [fp, #-136]	; 0xffffff78
   18bc0:	adds	r0, r5, r0
   18bc4:	adc	r1, r6, r1
   18bc8:	adds	r0, r0, r4
   18bcc:	add	r4, sp, #256	; 0x100
   18bd0:	adc	r1, r1, r7
   18bd4:	str	r0, [sp, #280]	; 0x118
   18bd8:	eor	r0, r0, r2
   18bdc:	ldr	r7, [sp, #156]	; 0x9c
   18be0:	str	r1, [sp, #284]	; 0x11c
   18be4:	lsl	r2, r0, #16
   18be8:	eor	r1, r1, r3
   18bec:	lsr	r0, r0, #16
   18bf0:	orr	r0, r0, r1, lsl #16
   18bf4:	orr	r2, r2, r1, lsr #16
   18bf8:	str	r0, [sp, #368]	; 0x170
   18bfc:	adds	r0, r0, lr
   18c00:	str	r2, [sp, #372]	; 0x174
   18c04:	str	r0, [sp, #328]	; 0x148
   18c08:	adc	r1, r2, ip
   18c0c:	eor	r0, r0, r5
   18c10:	str	r1, [sp, #332]	; 0x14c
   18c14:	eor	r1, r1, r6
   18c18:	lsl	r2, r0, #1
   18c1c:	orr	r2, r2, r1, lsr #31
   18c20:	lsl	r1, r1, #1
   18c24:	orr	r0, r1, r0, lsr #31
   18c28:	mov	r1, #64	; 0x40
   18c2c:	str	r2, [sp, #288]	; 0x120
   18c30:	str	r0, [sp, #292]	; 0x124
   18c34:	mov	r0, #0
   18c38:	add	r2, r4, r0
   18c3c:	add	r3, r7, r0
   18c40:	add	r0, r0, #16
   18c44:	vld1.64	{d16-d17}, [r2], r1
   18c48:	vld1.64	{d18-d19}, [r3]
   18c4c:	cmp	r0, #64	; 0x40
   18c50:	vld1.64	{d20-d21}, [r2]
   18c54:	veor	q8, q8, q9
   18c58:	veor	q8, q8, q10
   18c5c:	vst1.64	{d16-d17}, [r3]
   18c60:	bne	18c38 <__assert_fail@plt+0x78c0>
   18c64:	sub	sp, fp, #28
   18c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c70:	add	fp, sp, #28
   18c74:	sub	sp, sp, #68	; 0x44
   18c78:	vmov.i32	q8, #0	; 0x00000000
   18c7c:	mov	r4, sp
   18c80:	mov	sl, r1
   18c84:	mov	r6, r0
   18c88:	mov	r0, #48	; 0x30
   18c8c:	mvn	r9, #0
   18c90:	mov	r1, r4
   18c94:	cmp	sl, #0
   18c98:	vst1.64	{d16-d17}, [r1], r0
   18c9c:	add	r0, r4, #32
   18ca0:	vst1.64	{d16-d17}, [r0]
   18ca4:	add	r0, r4, #16
   18ca8:	vst1.64	{d16-d17}, [r1]
   18cac:	vst1.64	{d16-d17}, [r0]
   18cb0:	beq	18d90 <__assert_fail@plt+0x7a18>
   18cb4:	ldr	r0, [r6, #228]	; 0xe4
   18cb8:	cmp	r0, r2
   18cbc:	bhi	18d90 <__assert_fail@plt+0x7a18>
   18cc0:	add	r0, r6, #80	; 0x50
   18cc4:	ldrd	r2, [r0]
   18cc8:	orrs	r1, r2, r3
   18ccc:	bne	18d90 <__assert_fail@plt+0x7a18>
   18cd0:	add	r2, r6, #64	; 0x40
   18cd4:	ldr	r1, [r6, #224]	; 0xe0
   18cd8:	add	r3, r6, #72	; 0x48
   18cdc:	ldrd	r8, [r2]
   18ce0:	adds	r8, r8, r1
   18ce4:	adcs	r9, r9, #0
   18ce8:	strd	r8, [r2]
   18cec:	add	r8, r6, #96	; 0x60
   18cf0:	mov	r9, #0
   18cf4:	ldm	r3, {r2, r7}
   18cf8:	adcs	r2, r2, #0
   18cfc:	adc	r7, r7, #0
   18d00:	stm	r3, {r2, r7}
   18d04:	mvn	r3, #0
   18d08:	ldrb	r2, [r6, #232]	; 0xe8
   18d0c:	cmp	r2, #0
   18d10:	addne	r2, r6, #88	; 0x58
   18d14:	strne	r3, [r2]
   18d18:	strne	r3, [r2, #4]
   18d1c:	str	r3, [r0]
   18d20:	str	r3, [r0, #4]
   18d24:	add	r0, r8, r1
   18d28:	rsb	r2, r1, #128	; 0x80
   18d2c:	mov	r1, #0
   18d30:	bl	11270 <memset@plt>
   18d34:	mov	r0, r6
   18d38:	mov	r1, r8
   18d3c:	bl	13500 <__assert_fail@plt+0x2188>
   18d40:	mov	ip, r6
   18d44:	mov	r1, r4
   18d48:	mov	r8, r4
   18d4c:	ldm	ip!, {r0, r2, r3, r4, r5}
   18d50:	stmia	r1!, {r0, r2, r3, r4, r5}
   18d54:	ldm	ip!, {r0, r2, r3, r4, r5}
   18d58:	stmia	r1!, {r0, r2, r3, r4, r5}
   18d5c:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   18d60:	stm	r1, {r0, r2, r3, r4, r5, r7}
   18d64:	mov	r0, sl
   18d68:	mov	r1, r8
   18d6c:	ldr	r2, [r6, #228]	; 0xe4
   18d70:	bl	11120 <memcpy@plt>
   18d74:	movw	r0, #54432	; 0xd4a0
   18d78:	mov	r1, #0
   18d7c:	mov	r2, #64	; 0x40
   18d80:	movt	r0, #1
   18d84:	ldr	r3, [r0]
   18d88:	mov	r0, r8
   18d8c:	blx	r3
   18d90:	mov	r0, r9
   18d94:	sub	sp, fp, #28
   18d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18da0:	add	fp, sp, #24
   18da4:	sub	sp, sp, #240	; 0xf0
   18da8:	mov	r6, r0
   18dac:	cmp	r3, #0
   18db0:	mov	r0, r3
   18db4:	mvn	r4, #0
   18db8:	movwne	r0, #1
   18dbc:	cmp	r6, #0
   18dc0:	beq	18e00 <__assert_fail@plt+0x7a88>
   18dc4:	mov	r8, r1
   18dc8:	clz	r1, r2
   18dcc:	mov	r5, r2
   18dd0:	lsr	r1, r1, #5
   18dd4:	ands	r0, r1, r0
   18dd8:	bne	18e00 <__assert_fail@plt+0x7a88>
   18ddc:	mov	r7, r3
   18de0:	ldr	r3, [fp, #12]
   18de4:	cmp	r3, #0
   18de8:	mov	r0, r3
   18dec:	movwne	r0, #1
   18df0:	cmp	r3, #64	; 0x40
   18df4:	subls	r1, r8, #1
   18df8:	cmpls	r1, #63	; 0x3f
   18dfc:	bls	18e0c <__assert_fail@plt+0x7a94>
   18e00:	mov	r0, r4
   18e04:	sub	sp, fp, #24
   18e08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e0c:	ldr	r2, [fp, #8]
   18e10:	clz	r1, r2
   18e14:	lsr	r1, r1, #5
   18e18:	ands	r0, r1, r0
   18e1c:	bne	18e00 <__assert_fail@plt+0x7a88>
   18e20:	mov	r0, sp
   18e24:	mov	r1, r8
   18e28:	cmp	r3, #0
   18e2c:	beq	18e38 <__assert_fail@plt+0x7ac0>
   18e30:	bl	1328c <__assert_fail@plt+0x1f14>
   18e34:	b	18e3c <__assert_fail@plt+0x7ac4>
   18e38:	bl	131bc <__assert_fail@plt+0x1e44>
   18e3c:	cmp	r0, #0
   18e40:	bmi	18e00 <__assert_fail@plt+0x7a88>
   18e44:	mov	r4, sp
   18e48:	mov	r1, r5
   18e4c:	mov	r2, r7
   18e50:	mov	r0, r4
   18e54:	bl	133d4 <__assert_fail@plt+0x205c>
   18e58:	mov	r0, r4
   18e5c:	mov	r1, r6
   18e60:	mov	r2, r8
   18e64:	bl	18c6c <__assert_fail@plt+0x78f4>
   18e68:	mov	r4, #0
   18e6c:	b	18e00 <__assert_fail@plt+0x7a88>
   18e70:	b	18d9c <__assert_fail@plt+0x7a24>
   18e74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18e78:	add	fp, sp, #24
   18e7c:	sub	sp, sp, #248	; 0xf8
   18e80:	mov	r7, r0
   18e84:	mov	r0, #32768	; 0x8000
   18e88:	mov	r9, r2
   18e8c:	mov	r8, r1
   18e90:	bl	1bf9c <__assert_fail@plt+0xac24>
   18e94:	cmp	r0, #0
   18e98:	beq	18f04 <__assert_fail@plt+0x7b8c>
   18e9c:	mov	r4, sp
   18ea0:	mov	r5, r0
   18ea4:	mov	r1, r9
   18ea8:	mov	r0, r4
   18eac:	bl	131bc <__assert_fail@plt+0x1e44>
   18eb0:	mov	r6, #0
   18eb4:	add	r0, r5, r6
   18eb8:	rsb	r2, r6, #32768	; 0x8000
   18ebc:	mov	r1, #1
   18ec0:	mov	r3, r7
   18ec4:	bl	11180 <fread@plt>
   18ec8:	add	r6, r0, r6
   18ecc:	cmp	r6, #32768	; 0x8000
   18ed0:	beq	18ef0 <__assert_fail@plt+0x7b78>
   18ed4:	cmp	r0, #0
   18ed8:	beq	18f0c <__assert_fail@plt+0x7b94>
   18edc:	mov	r0, r7
   18ee0:	bl	1121c <feof@plt>
   18ee4:	cmp	r0, #0
   18ee8:	beq	18eb4 <__assert_fail@plt+0x7b3c>
   18eec:	b	18f20 <__assert_fail@plt+0x7ba8>
   18ef0:	mov	r0, r4
   18ef4:	mov	r1, r5
   18ef8:	mov	r2, #32768	; 0x8000
   18efc:	bl	133d4 <__assert_fail@plt+0x205c>
   18f00:	b	18eb0 <__assert_fail@plt+0x7b38>
   18f04:	mvn	r4, #0
   18f08:	b	18f54 <__assert_fail@plt+0x7bdc>
   18f0c:	mov	r0, r7
   18f10:	bl	11108 <ferror@plt>
   18f14:	mvn	r4, #0
   18f18:	cmp	r0, #0
   18f1c:	bne	18f4c <__assert_fail@plt+0x7bd4>
   18f20:	cmp	r6, #0
   18f24:	beq	18f38 <__assert_fail@plt+0x7bc0>
   18f28:	mov	r0, sp
   18f2c:	mov	r1, r5
   18f30:	mov	r2, r6
   18f34:	bl	133d4 <__assert_fail@plt+0x205c>
   18f38:	mov	r0, sp
   18f3c:	mov	r1, r8
   18f40:	mov	r2, r9
   18f44:	bl	18c6c <__assert_fail@plt+0x78f4>
   18f48:	mov	r4, #0
   18f4c:	mov	r0, r5
   18f50:	bl	1924c <__assert_fail@plt+0x7ed4>
   18f54:	mov	r0, r4
   18f58:	sub	sp, fp, #24
   18f5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18f60:	movw	r1, #57764	; 0xe1a4
   18f64:	movt	r1, #2
   18f68:	str	r0, [r1]
   18f6c:	bx	lr
   18f70:	movw	r1, #57768	; 0xe1a8
   18f74:	movt	r1, #2
   18f78:	strb	r0, [r1]
   18f7c:	bx	lr
   18f80:	push	{r4, r5, r6, sl, fp, lr}
   18f84:	add	fp, sp, #16
   18f88:	sub	sp, sp, #8
   18f8c:	movw	r0, #57724	; 0xe17c
   18f90:	movt	r0, #2
   18f94:	ldr	r0, [r0]
   18f98:	bl	1c01c <__assert_fail@plt+0xaca4>
   18f9c:	cmp	r0, #0
   18fa0:	beq	18fc8 <__assert_fail@plt+0x7c50>
   18fa4:	movw	r0, #57768	; 0xe1a8
   18fa8:	movt	r0, #2
   18fac:	ldrb	r0, [r0]
   18fb0:	cmp	r0, #0
   18fb4:	beq	18fe8 <__assert_fail@plt+0x7c70>
   18fb8:	bl	1124c <__errno_location@plt>
   18fbc:	ldr	r0, [r0]
   18fc0:	cmp	r0, #32
   18fc4:	bne	18fe8 <__assert_fail@plt+0x7c70>
   18fc8:	movw	r0, #57712	; 0xe170
   18fcc:	movt	r0, #2
   18fd0:	ldr	r0, [r0]
   18fd4:	bl	1c01c <__assert_fail@plt+0xaca4>
   18fd8:	cmp	r0, #0
   18fdc:	subeq	sp, fp, #16
   18fe0:	popeq	{r4, r5, r6, sl, fp, pc}
   18fe4:	b	19058 <__assert_fail@plt+0x7ce0>
   18fe8:	movw	r1, #54451	; 0xd4b3
   18fec:	mov	r0, #0
   18ff0:	mov	r2, #5
   18ff4:	movt	r1, #1
   18ff8:	bl	11138 <dcgettext@plt>
   18ffc:	mov	r4, r0
   19000:	movw	r0, #57764	; 0xe1a4
   19004:	movt	r0, #2
   19008:	ldr	r6, [r0]
   1900c:	bl	1124c <__errno_location@plt>
   19010:	ldr	r5, [r0]
   19014:	cmp	r6, #0
   19018:	bne	19034 <__assert_fail@plt+0x7cbc>
   1901c:	movw	r2, #52374	; 0xcc96
   19020:	mov	r0, #0
   19024:	mov	r1, r5
   19028:	mov	r3, r4
   1902c:	movt	r2, #1
   19030:	b	19054 <__assert_fail@plt+0x7cdc>
   19034:	mov	r0, r6
   19038:	bl	1aac4 <__assert_fail@plt+0x974c>
   1903c:	movw	r2, #54463	; 0xd4bf
   19040:	mov	r3, r0
   19044:	str	r4, [sp]
   19048:	mov	r0, #0
   1904c:	mov	r1, r5
   19050:	movt	r2, #1
   19054:	bl	111b0 <error@plt>
   19058:	movw	r0, #57624	; 0xe118
   1905c:	movt	r0, #2
   19060:	ldr	r0, [r0]
   19064:	bl	11114 <_exit@plt>
   19068:	b	110e4 <posix_fadvise64@plt>
   1906c:	cmp	r0, #0
   19070:	bxeq	lr
   19074:	push	{r4, sl, fp, lr}
   19078:	add	fp, sp, #8
   1907c:	sub	sp, sp, #16
   19080:	mov	r4, r1
   19084:	bl	11288 <fileno@plt>
   19088:	mov	r1, #0
   1908c:	mov	r2, #0
   19090:	mov	r3, #0
   19094:	str	r1, [sp]
   19098:	stmib	sp, {r1, r4}
   1909c:	bl	110e4 <posix_fadvise64@plt>
   190a0:	sub	sp, fp, #8
   190a4:	pop	{r4, sl, fp, pc}
   190a8:	push	{r4, r5, r6, sl, fp, lr}
   190ac:	add	fp, sp, #16
   190b0:	sub	sp, sp, #8
   190b4:	mov	r4, r0
   190b8:	bl	11288 <fileno@plt>
   190bc:	cmn	r0, #1
   190c0:	ble	19134 <__assert_fail@plt+0x7dbc>
   190c4:	mov	r0, r4
   190c8:	bl	111d4 <__freading@plt>
   190cc:	cmp	r0, #0
   190d0:	beq	190fc <__assert_fail@plt+0x7d84>
   190d4:	mov	r0, r4
   190d8:	bl	11288 <fileno@plt>
   190dc:	mov	r1, #1
   190e0:	mov	r2, #0
   190e4:	mov	r3, #0
   190e8:	str	r1, [sp]
   190ec:	bl	11168 <lseek64@plt>
   190f0:	and	r0, r0, r1
   190f4:	cmn	r0, #1
   190f8:	beq	19134 <__assert_fail@plt+0x7dbc>
   190fc:	mov	r0, r4
   19100:	bl	19144 <__assert_fail@plt+0x7dcc>
   19104:	cmp	r0, #0
   19108:	beq	19134 <__assert_fail@plt+0x7dbc>
   1910c:	bl	1124c <__errno_location@plt>
   19110:	ldr	r6, [r0]
   19114:	mov	r5, r0
   19118:	mov	r0, r4
   1911c:	bl	112ac <fclose@plt>
   19120:	cmp	r6, #0
   19124:	strne	r6, [r5]
   19128:	mvnne	r0, #0
   1912c:	sub	sp, fp, #16
   19130:	pop	{r4, r5, r6, sl, fp, pc}
   19134:	mov	r0, r4
   19138:	sub	sp, fp, #16
   1913c:	pop	{r4, r5, r6, sl, fp, lr}
   19140:	b	112ac <fclose@plt>
   19144:	push	{r4, sl, fp, lr}
   19148:	add	fp, sp, #8
   1914c:	sub	sp, sp, #8
   19150:	mov	r4, r0
   19154:	cmp	r0, #0
   19158:	beq	19190 <__assert_fail@plt+0x7e18>
   1915c:	mov	r0, r4
   19160:	bl	111d4 <__freading@plt>
   19164:	cmp	r0, #0
   19168:	beq	19190 <__assert_fail@plt+0x7e18>
   1916c:	ldrb	r0, [r4, #1]
   19170:	tst	r0, #1
   19174:	beq	19190 <__assert_fail@plt+0x7e18>
   19178:	mov	r0, #1
   1917c:	mov	r2, #0
   19180:	mov	r3, #0
   19184:	str	r0, [sp]
   19188:	mov	r0, r4
   1918c:	bl	19274 <__assert_fail@plt+0x7efc>
   19190:	mov	r0, r4
   19194:	sub	sp, fp, #8
   19198:	pop	{r4, sl, fp, lr}
   1919c:	b	110f0 <fflush@plt>
   191a0:	push	{r4, r5, r6, r7, fp, lr}
   191a4:	add	fp, sp, #16
   191a8:	mov	r5, r1
   191ac:	bl	11300 <fopen64@plt>
   191b0:	mov	r4, #0
   191b4:	cmp	r0, #0
   191b8:	beq	19244 <__assert_fail@plt+0x7ecc>
   191bc:	mov	r6, r0
   191c0:	bl	11288 <fileno@plt>
   191c4:	cmp	r0, #2
   191c8:	bhi	19224 <__assert_fail@plt+0x7eac>
   191cc:	bl	1ae50 <__assert_fail@plt+0x9ad8>
   191d0:	cmn	r0, #1
   191d4:	ble	1922c <__assert_fail@plt+0x7eb4>
   191d8:	mov	r7, r0
   191dc:	mov	r0, r6
   191e0:	bl	190a8 <__assert_fail@plt+0x7d30>
   191e4:	cmp	r0, #0
   191e8:	bne	19204 <__assert_fail@plt+0x7e8c>
   191ec:	mov	r0, r7
   191f0:	mov	r1, r5
   191f4:	bl	110a8 <fdopen@plt>
   191f8:	mov	r4, r0
   191fc:	cmp	r0, #0
   19200:	bne	19244 <__assert_fail@plt+0x7ecc>
   19204:	bl	1124c <__errno_location@plt>
   19208:	ldr	r5, [r0]
   1920c:	mov	r4, r0
   19210:	mov	r0, r7
   19214:	bl	11354 <close@plt>
   19218:	str	r5, [r4]
   1921c:	mov	r4, #0
   19220:	b	19244 <__assert_fail@plt+0x7ecc>
   19224:	mov	r4, r6
   19228:	b	19244 <__assert_fail@plt+0x7ecc>
   1922c:	bl	1124c <__errno_location@plt>
   19230:	ldr	r7, [r0]
   19234:	mov	r5, r0
   19238:	mov	r0, r6
   1923c:	bl	190a8 <__assert_fail@plt+0x7d30>
   19240:	str	r7, [r5]
   19244:	mov	r0, r4
   19248:	pop	{r4, r5, r6, r7, fp, pc}
   1924c:	push	{r4, r5, r6, sl, fp, lr}
   19250:	add	fp, sp, #16
   19254:	mov	r4, r0
   19258:	bl	1124c <__errno_location@plt>
   1925c:	ldr	r6, [r0]
   19260:	mov	r5, r0
   19264:	mov	r0, r4
   19268:	bl	110fc <free@plt>
   1926c:	str	r6, [r5]
   19270:	pop	{r4, r5, r6, sl, fp, pc}
   19274:	push	{r4, r5, r6, r7, fp, lr}
   19278:	add	fp, sp, #16
   1927c:	sub	sp, sp, #8
   19280:	mov	r4, r0
   19284:	ldr	r0, [r0, #4]
   19288:	mov	r5, r3
   1928c:	mov	r6, r2
   19290:	ldr	r1, [r4, #8]
   19294:	cmp	r1, r0
   19298:	bne	192b4 <__assert_fail@plt+0x7f3c>
   1929c:	ldrd	r0, [r4, #16]
   192a0:	cmp	r1, r0
   192a4:	bne	192b4 <__assert_fail@plt+0x7f3c>
   192a8:	ldr	r0, [r4, #36]	; 0x24
   192ac:	cmp	r0, #0
   192b0:	beq	192cc <__assert_fail@plt+0x7f54>
   192b4:	mov	r0, r4
   192b8:	mov	r2, r6
   192bc:	mov	r3, r5
   192c0:	sub	sp, fp, #16
   192c4:	pop	{r4, r5, r6, r7, fp, lr}
   192c8:	b	112b8 <fseeko64@plt>
   192cc:	ldr	r7, [fp, #8]
   192d0:	mov	r0, r4
   192d4:	bl	11288 <fileno@plt>
   192d8:	mov	r2, r6
   192dc:	mov	r3, r5
   192e0:	str	r7, [sp]
   192e4:	bl	11168 <lseek64@plt>
   192e8:	and	r2, r0, r1
   192ec:	cmn	r2, #1
   192f0:	beq	1930c <__assert_fail@plt+0x7f94>
   192f4:	strd	r0, [r4, #80]	; 0x50
   192f8:	ldr	r0, [r4]
   192fc:	bic	r0, r0, #16
   19300:	str	r0, [r4]
   19304:	mov	r0, #0
   19308:	b	19310 <__assert_fail@plt+0x7f98>
   1930c:	mvn	r0, #0
   19310:	sub	sp, fp, #16
   19314:	pop	{r4, r5, r6, r7, fp, pc}
   19318:	push	{r4, r5, fp, lr}
   1931c:	add	fp, sp, #8
   19320:	cmp	r0, #0
   19324:	beq	193b8 <__assert_fail@plt+0x8040>
   19328:	mov	r1, #47	; 0x2f
   1932c:	mov	r4, r0
   19330:	bl	112dc <strrchr@plt>
   19334:	cmp	r0, #0
   19338:	mov	r5, r4
   1933c:	addne	r5, r0, #1
   19340:	sub	r0, r5, r4
   19344:	cmp	r0, #7
   19348:	blt	1939c <__assert_fail@plt+0x8024>
   1934c:	movw	r1, #54526	; 0xd4fe
   19350:	sub	r0, r5, #7
   19354:	mov	r2, #7
   19358:	movt	r1, #1
   1935c:	bl	11330 <strncmp@plt>
   19360:	cmp	r0, #0
   19364:	bne	1939c <__assert_fail@plt+0x8024>
   19368:	movw	r1, #54534	; 0xd506
   1936c:	mov	r0, r5
   19370:	mov	r2, #3
   19374:	movt	r1, #1
   19378:	bl	11330 <strncmp@plt>
   1937c:	cmp	r0, #0
   19380:	beq	1938c <__assert_fail@plt+0x8014>
   19384:	mov	r4, r5
   19388:	b	1939c <__assert_fail@plt+0x8024>
   1938c:	movw	r0, #57696	; 0xe160
   19390:	add	r4, r5, #3
   19394:	movt	r0, #2
   19398:	str	r4, [r0]
   1939c:	movw	r0, #57700	; 0xe164
   193a0:	movt	r0, #2
   193a4:	str	r4, [r0]
   193a8:	movw	r0, #57772	; 0xe1ac
   193ac:	movt	r0, #2
   193b0:	str	r4, [r0]
   193b4:	pop	{r4, r5, fp, pc}
   193b8:	movw	r0, #57712	; 0xe170
   193bc:	movt	r0, #2
   193c0:	ldr	r1, [r0]
   193c4:	movw	r0, #54470	; 0xd4c6
   193c8:	movt	r0, #1
   193cc:	bl	11324 <fputs@plt>
   193d0:	bl	1133c <abort@plt>
   193d4:	push	{r4, r5, r6, sl, fp, lr}
   193d8:	add	fp, sp, #16
   193dc:	mov	r4, r0
   193e0:	movw	r0, #57776	; 0xe1b0
   193e4:	movt	r0, #2
   193e8:	cmp	r4, #0
   193ec:	moveq	r4, r0
   193f0:	bl	1124c <__errno_location@plt>
   193f4:	ldr	r6, [r0]
   193f8:	mov	r5, r0
   193fc:	mov	r0, r4
   19400:	mov	r1, #48	; 0x30
   19404:	bl	1b66c <__assert_fail@plt+0xa2f4>
   19408:	str	r6, [r5]
   1940c:	pop	{r4, r5, r6, sl, fp, pc}
   19410:	movw	r1, #57776	; 0xe1b0
   19414:	cmp	r0, #0
   19418:	movt	r1, #2
   1941c:	movne	r1, r0
   19420:	ldr	r0, [r1]
   19424:	bx	lr
   19428:	movw	r2, #57776	; 0xe1b0
   1942c:	cmp	r0, #0
   19430:	movt	r2, #2
   19434:	movne	r2, r0
   19438:	str	r1, [r2]
   1943c:	bx	lr
   19440:	movw	r3, #57776	; 0xe1b0
   19444:	cmp	r0, #0
   19448:	and	r2, r2, #1
   1944c:	movt	r3, #2
   19450:	movne	r3, r0
   19454:	ubfx	r0, r1, #5, #3
   19458:	and	r1, r1, #31
   1945c:	add	ip, r3, r0, lsl #2
   19460:	mov	r0, #1
   19464:	ldr	r3, [ip, #8]
   19468:	and	r0, r0, r3, lsr r1
   1946c:	eor	r2, r0, r2
   19470:	eor	r1, r3, r2, lsl r1
   19474:	str	r1, [ip, #8]
   19478:	bx	lr
   1947c:	movw	r2, #57776	; 0xe1b0
   19480:	cmp	r0, #0
   19484:	movt	r2, #2
   19488:	movne	r2, r0
   1948c:	ldr	r0, [r2, #4]
   19490:	str	r1, [r2, #4]
   19494:	bx	lr
   19498:	push	{fp, lr}
   1949c:	mov	fp, sp
   194a0:	movw	r3, #57776	; 0xe1b0
   194a4:	cmp	r0, #0
   194a8:	movt	r3, #2
   194ac:	movne	r3, r0
   194b0:	cmp	r1, #0
   194b4:	mov	r0, #10
   194b8:	cmpne	r2, #0
   194bc:	str	r0, [r3]
   194c0:	bne	194c8 <__assert_fail@plt+0x8150>
   194c4:	bl	1133c <abort@plt>
   194c8:	str	r1, [r3, #40]	; 0x28
   194cc:	str	r2, [r3, #44]	; 0x2c
   194d0:	pop	{fp, pc}
   194d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194d8:	add	fp, sp, #28
   194dc:	sub	sp, sp, #20
   194e0:	mov	r7, r0
   194e4:	ldr	r0, [fp, #8]
   194e8:	movw	r5, #57776	; 0xe1b0
   194ec:	mov	r8, r3
   194f0:	mov	r9, r2
   194f4:	mov	sl, r1
   194f8:	movt	r5, #2
   194fc:	cmp	r0, #0
   19500:	movne	r5, r0
   19504:	bl	1124c <__errno_location@plt>
   19508:	ldr	r2, [r5, #40]	; 0x28
   1950c:	ldr	r3, [r5, #44]	; 0x2c
   19510:	mov	r4, r0
   19514:	ldm	r5, {r0, r1}
   19518:	add	r5, r5, #8
   1951c:	ldr	r6, [r4]
   19520:	stm	sp, {r0, r1, r5}
   19524:	mov	r0, r7
   19528:	mov	r1, sl
   1952c:	str	r2, [sp, #12]
   19530:	str	r3, [sp, #16]
   19534:	mov	r2, r9
   19538:	mov	r3, r8
   1953c:	bl	1954c <__assert_fail@plt+0x81d4>
   19540:	str	r6, [r4]
   19544:	sub	sp, fp, #28
   19548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1954c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19550:	add	fp, sp, #28
   19554:	sub	sp, sp, #156	; 0x9c
   19558:	mov	r5, r0
   1955c:	add	r0, r2, #1
   19560:	mov	r6, r1
   19564:	mov	sl, r3
   19568:	str	r2, [fp, #-80]	; 0xffffffb0
   1956c:	str	r0, [sp, #72]	; 0x48
   19570:	ldr	r0, [fp, #12]
   19574:	and	r1, r0, #1
   19578:	str	r1, [sp, #32]
   1957c:	and	r1, r0, #4
   19580:	str	r1, [sp, #28]
   19584:	ubfx	r9, r0, #1, #1
   19588:	bl	11174 <__ctype_get_mb_cur_max@plt>
   1958c:	str	r0, [sp, #40]	; 0x28
   19590:	ldr	r0, [fp, #24]
   19594:	ldr	r7, [fp, #8]
   19598:	mov	r1, #0
   1959c:	mov	lr, #0
   195a0:	str	r5, [fp, #-84]	; 0xffffffac
   195a4:	str	r1, [sp, #60]	; 0x3c
   195a8:	mov	r1, #1
   195ac:	str	r1, [fp, #-48]	; 0xffffffd0
   195b0:	str	r0, [sp, #80]	; 0x50
   195b4:	ldr	r0, [fp, #20]
   195b8:	str	r0, [sp, #76]	; 0x4c
   195bc:	mov	r0, #0
   195c0:	str	r0, [sp, #56]	; 0x38
   195c4:	mov	r0, #0
   195c8:	str	r0, [fp, #-88]	; 0xffffffa8
   195cc:	mov	r0, #0
   195d0:	str	r0, [fp, #-72]	; 0xffffffb8
   195d4:	mov	r0, #0
   195d8:	cmp	r7, #10
   195dc:	bhi	1a5b8 <__assert_fail@plt+0x9240>
   195e0:	add	r1, pc, #24
   195e4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   195e8:	mov	ip, r6
   195ec:	mov	r8, #0
   195f0:	mov	r2, #1
   195f4:	mov	r6, #0
   195f8:	mov	r3, sl
   195fc:	ldr	pc, [r1, r7, lsl #2]
   19600:	andeq	r9, r1, ip, ror #13
   19604:	andeq	r9, r1, r0, asr #14
   19608:	andeq	r9, r1, r0, lsl #14
   1960c:	andeq	r9, r1, r4, ror #13
   19610:	andeq	r9, r1, r4, lsr r7
   19614:	andeq	r9, r1, r8, ror #14
   19618:	andeq	r9, r1, r0, lsl r7
   1961c:	andeq	r9, r1, ip, ror #15
   19620:	andeq	r9, r1, ip, lsr #12
   19624:	andeq	r9, r1, ip, lsr #12
   19628:	andeq	r9, r1, ip, ror #12
   1962c:	movw	r0, #54616	; 0xd558
   19630:	mov	r1, r7
   19634:	mov	r6, r5
   19638:	mov	r4, ip
   1963c:	mov	r5, lr
   19640:	movt	r0, #1
   19644:	bl	1ad1c <__assert_fail@plt+0x99a4>
   19648:	str	r0, [sp, #76]	; 0x4c
   1964c:	movw	r0, #54618	; 0xd55a
   19650:	mov	r1, r7
   19654:	movt	r0, #1
   19658:	bl	1ad1c <__assert_fail@plt+0x99a4>
   1965c:	mov	lr, r5
   19660:	mov	r5, r6
   19664:	mov	ip, r4
   19668:	str	r0, [sp, #80]	; 0x50
   1966c:	mov	r8, #0
   19670:	tst	r9, #1
   19674:	str	lr, [sp, #44]	; 0x2c
   19678:	bne	196b0 <__assert_fail@plt+0x8338>
   1967c:	ldr	r0, [sp, #76]	; 0x4c
   19680:	ldrb	r0, [r0]
   19684:	cmp	r0, #0
   19688:	beq	196b0 <__assert_fail@plt+0x8338>
   1968c:	ldr	r1, [sp, #76]	; 0x4c
   19690:	mov	r8, #0
   19694:	add	r1, r1, #1
   19698:	cmp	r8, ip
   1969c:	strbcc	r0, [r5, r8]
   196a0:	ldrb	r0, [r1, r8]
   196a4:	add	r8, r8, #1
   196a8:	cmp	r0, #0
   196ac:	bne	19698 <__assert_fail@plt+0x8320>
   196b0:	ldr	r6, [sp, #80]	; 0x50
   196b4:	mov	r4, ip
   196b8:	mov	r0, r6
   196bc:	bl	11234 <strlen@plt>
   196c0:	mov	ip, r4
   196c4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   196c8:	ldr	lr, [sp, #44]	; 0x2c
   196cc:	str	r6, [fp, #-88]	; 0xffffffa8
   196d0:	str	r0, [fp, #-72]	; 0xffffffb8
   196d4:	mov	r2, #1
   196d8:	mov	r6, r9
   196dc:	mov	r3, sl
   196e0:	b	197ec <__assert_fail@plt+0x8474>
   196e4:	mov	r0, #1
   196e8:	b	19740 <__assert_fail@plt+0x83c8>
   196ec:	mov	r7, #0
   196f0:	mov	r8, #0
   196f4:	mov	r2, r0
   196f8:	mov	r6, #0
   196fc:	b	197ec <__assert_fail@plt+0x8474>
   19700:	tst	r9, #1
   19704:	bne	19740 <__assert_fail@plt+0x83c8>
   19708:	mov	r2, r0
   1970c:	b	19798 <__assert_fail@plt+0x8420>
   19710:	mov	r0, #1
   19714:	mov	r8, #0
   19718:	mov	r7, #5
   1971c:	mov	r2, #1
   19720:	str	r0, [fp, #-72]	; 0xffffffb8
   19724:	movw	r0, #54614	; 0xd556
   19728:	movt	r0, #1
   1972c:	str	r0, [fp, #-88]	; 0xffffffa8
   19730:	b	19760 <__assert_fail@plt+0x83e8>
   19734:	mov	r2, #1
   19738:	tst	r9, #1
   1973c:	beq	19798 <__assert_fail@plt+0x8420>
   19740:	mov	r1, #1
   19744:	mov	r8, #0
   19748:	mov	r7, #2
   1974c:	mov	r2, r0
   19750:	str	r1, [fp, #-72]	; 0xffffffb8
   19754:	movw	r1, #54618	; 0xd55a
   19758:	movt	r1, #1
   1975c:	str	r1, [fp, #-88]	; 0xffffffa8
   19760:	mov	r6, #1
   19764:	b	197ec <__assert_fail@plt+0x8474>
   19768:	tst	r9, #1
   1976c:	beq	197bc <__assert_fail@plt+0x8444>
   19770:	mov	r0, #1
   19774:	mov	r8, #0
   19778:	mov	r2, #1
   1977c:	mov	r6, #1
   19780:	mov	r7, #5
   19784:	str	r0, [fp, #-72]	; 0xffffffb8
   19788:	movw	r0, #54614	; 0xd556
   1978c:	movt	r0, #1
   19790:	str	r0, [fp, #-88]	; 0xffffffa8
   19794:	b	197ec <__assert_fail@plt+0x8474>
   19798:	cmp	ip, #0
   1979c:	mov	r8, #1
   197a0:	mov	r6, #0
   197a4:	mov	r7, #2
   197a8:	movne	r0, #39	; 0x27
   197ac:	strbne	r0, [r5]
   197b0:	movw	r0, #54618	; 0xd55a
   197b4:	movt	r0, #1
   197b8:	b	197e0 <__assert_fail@plt+0x8468>
   197bc:	cmp	ip, #0
   197c0:	mov	r8, #1
   197c4:	mov	r2, #1
   197c8:	mov	r7, #5
   197cc:	mov	r6, #0
   197d0:	movne	r0, #34	; 0x22
   197d4:	strbne	r0, [r5]
   197d8:	movw	r0, #54614	; 0xd556
   197dc:	movt	r0, #1
   197e0:	str	r0, [fp, #-88]	; 0xffffffa8
   197e4:	mov	r0, #1
   197e8:	str	r0, [fp, #-72]	; 0xffffffb8
   197ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   197f0:	str	r7, [fp, #-68]	; 0xffffffbc
   197f4:	str	r6, [fp, #-76]	; 0xffffffb4
   197f8:	str	r2, [sp, #84]	; 0x54
   197fc:	cmp	r0, #0
   19800:	movwne	r0, #1
   19804:	and	r1, r0, r6
   19808:	and	r1, r2, r1
   1980c:	str	r1, [sp, #48]	; 0x30
   19810:	sub	r1, r7, #2
   19814:	clz	r1, r1
   19818:	lsr	r1, r1, #5
   1981c:	and	r1, r1, r6
   19820:	str	r1, [sp, #64]	; 0x40
   19824:	subs	r1, r7, #2
   19828:	eor	r7, r6, #1
   1982c:	movwne	r1, #1
   19830:	str	r7, [sp, #92]	; 0x5c
   19834:	orr	r7, r1, r7
   19838:	and	r1, r1, r2
   1983c:	and	r0, r0, r1
   19840:	str	r7, [sp, #68]	; 0x44
   19844:	mov	r7, #0
   19848:	str	r0, [fp, #-60]	; 0xffffffc4
   1984c:	orr	r0, r1, r6
   19850:	ldr	r1, [fp, #16]
   19854:	eor	r0, r0, #1
   19858:	clz	r1, r1
   1985c:	lsr	r1, r1, #5
   19860:	orr	r0, r1, r0
   19864:	str	r0, [fp, #-64]	; 0xffffffc0
   19868:	eor	r0, r2, #1
   1986c:	str	r0, [sp, #52]	; 0x34
   19870:	cmn	r3, #1
   19874:	beq	19884 <__assert_fail@plt+0x850c>
   19878:	cmp	r7, r3
   1987c:	bne	19890 <__assert_fail@plt+0x8518>
   19880:	b	1a3ec <__assert_fail@plt+0x9074>
   19884:	ldrb	r0, [r4, r7]
   19888:	cmp	r0, #0
   1988c:	beq	1a3f4 <__assert_fail@plt+0x907c>
   19890:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19894:	cmp	r0, #0
   19898:	beq	198e0 <__assert_fail@plt+0x8568>
   1989c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   198a0:	add	r5, r7, r0
   198a4:	cmp	r0, #2
   198a8:	bcc	198f4 <__assert_fail@plt+0x857c>
   198ac:	mov	r0, #0
   198b0:	cmn	r3, #1
   198b4:	str	r0, [fp, #-56]	; 0xffffffc8
   198b8:	bne	198fc <__assert_fail@plt+0x8584>
   198bc:	mov	r0, r4
   198c0:	mov	r4, ip
   198c4:	mov	r6, lr
   198c8:	bl	11234 <strlen@plt>
   198cc:	mov	ip, r4
   198d0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   198d4:	mov	lr, r6
   198d8:	mov	r3, r0
   198dc:	b	198fc <__assert_fail@plt+0x8584>
   198e0:	mov	r0, #0
   198e4:	mov	sl, r3
   198e8:	str	r0, [fp, #-56]	; 0xffffffc8
   198ec:	mov	r0, #0
   198f0:	b	19968 <__assert_fail@plt+0x85f0>
   198f4:	mov	r0, #0
   198f8:	str	r0, [fp, #-56]	; 0xffffffc8
   198fc:	cmp	r5, r3
   19900:	bls	19914 <__assert_fail@plt+0x859c>
   19904:	ldr	r5, [fp, #-84]	; 0xffffffac
   19908:	mov	r0, #0
   1990c:	mov	sl, r3
   19910:	b	19968 <__assert_fail@plt+0x85f0>
   19914:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19918:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1991c:	add	r0, r4, r7
   19920:	mov	r5, lr
   19924:	mov	r6, ip
   19928:	mov	sl, r3
   1992c:	bl	11228 <bcmp@plt>
   19930:	ldr	r2, [sp, #92]	; 0x5c
   19934:	cmp	r0, #0
   19938:	ldr	r3, [fp, #-84]	; 0xffffffac
   1993c:	mov	r1, r0
   19940:	movwne	r1, #1
   19944:	orr	r1, r1, r2
   19948:	tst	r1, #1
   1994c:	beq	1a478 <__assert_fail@plt+0x9100>
   19950:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19954:	clz	r0, r0
   19958:	mov	lr, r5
   1995c:	mov	ip, r6
   19960:	mov	r5, r3
   19964:	lsr	r0, r0, #5
   19968:	str	r0, [fp, #-52]	; 0xffffffcc
   1996c:	ldrb	r6, [r4, r7]
   19970:	cmp	r6, #126	; 0x7e
   19974:	bhi	19e9c <__assert_fail@plt+0x8b24>
   19978:	add	r3, pc, #16
   1997c:	mov	r9, #1
   19980:	mov	r2, #110	; 0x6e
   19984:	mov	r0, #97	; 0x61
   19988:	mov	r1, #0
   1998c:	ldr	pc, [r3, r6, lsl #2]
   19990:	andeq	r9, r1, r0, lsl #26
   19994:	muleq	r1, ip, lr
   19998:	muleq	r1, ip, lr
   1999c:	muleq	r1, ip, lr
   199a0:	muleq	r1, ip, lr
   199a4:	muleq	r1, ip, lr
   199a8:	muleq	r1, ip, lr
   199ac:	andeq	r9, r1, ip, lsl pc
   199b0:	andeq	r9, r1, r0, ror #25
   199b4:	ldrdeq	r9, [r1], -r8
   199b8:	andeq	r9, r1, ip, ror #25
   199bc:	andeq	r9, r1, r4, lsl #28
   199c0:	ldrdeq	r9, [r1], -r0
   199c4:	andeq	r9, r1, r8, ror #25
   199c8:	muleq	r1, ip, lr
   199cc:	muleq	r1, ip, lr
   199d0:	muleq	r1, ip, lr
   199d4:	muleq	r1, ip, lr
   199d8:	muleq	r1, ip, lr
   199dc:	muleq	r1, ip, lr
   199e0:	muleq	r1, ip, lr
   199e4:	muleq	r1, ip, lr
   199e8:	muleq	r1, ip, lr
   199ec:	muleq	r1, ip, lr
   199f0:	muleq	r1, ip, lr
   199f4:	muleq	r1, ip, lr
   199f8:	muleq	r1, ip, lr
   199fc:	muleq	r1, ip, lr
   19a00:	muleq	r1, ip, lr
   19a04:	muleq	r1, ip, lr
   19a08:	muleq	r1, ip, lr
   19a0c:	muleq	r1, ip, lr
   19a10:	andeq	r9, r1, r0, lsl #25
   19a14:	andeq	r9, r1, r4, lsl #25
   19a18:	andeq	r9, r1, r4, lsl #25
   19a1c:	andeq	r9, r1, r8, ror #24
   19a20:	andeq	r9, r1, r4, lsl #25
   19a24:	andeq	r9, r1, ip, lsl #23
   19a28:	andeq	r9, r1, r4, lsl #25
   19a2c:	andeq	r9, r1, ip, lsl #28
   19a30:	andeq	r9, r1, r4, lsl #25
   19a34:	andeq	r9, r1, r4, lsl #25
   19a38:	andeq	r9, r1, r4, lsl #25
   19a3c:	andeq	r9, r1, ip, lsl #23
   19a40:	andeq	r9, r1, ip, lsl #23
   19a44:	andeq	r9, r1, ip, lsl #23
   19a48:	andeq	r9, r1, ip, lsl #23
   19a4c:	andeq	r9, r1, ip, lsl #23
   19a50:	andeq	r9, r1, ip, lsl #23
   19a54:	andeq	r9, r1, ip, lsl #23
   19a58:	andeq	r9, r1, ip, lsl #23
   19a5c:	andeq	r9, r1, ip, lsl #23
   19a60:	andeq	r9, r1, ip, lsl #23
   19a64:	andeq	r9, r1, ip, lsl #23
   19a68:	andeq	r9, r1, ip, lsl #23
   19a6c:	andeq	r9, r1, ip, lsl #23
   19a70:	andeq	r9, r1, ip, lsl #23
   19a74:	andeq	r9, r1, ip, lsl #23
   19a78:	andeq	r9, r1, ip, lsl #23
   19a7c:	andeq	r9, r1, r4, lsl #25
   19a80:	andeq	r9, r1, r4, lsl #25
   19a84:	andeq	r9, r1, r4, lsl #25
   19a88:	andeq	r9, r1, r4, lsl #25
   19a8c:	ldrdeq	r9, [r1], -r8
   19a90:	muleq	r1, ip, lr
   19a94:	andeq	r9, r1, ip, lsl #23
   19a98:	andeq	r9, r1, ip, lsl #23
   19a9c:	andeq	r9, r1, ip, lsl #23
   19aa0:	andeq	r9, r1, ip, lsl #23
   19aa4:	andeq	r9, r1, ip, lsl #23
   19aa8:	andeq	r9, r1, ip, lsl #23
   19aac:	andeq	r9, r1, ip, lsl #23
   19ab0:	andeq	r9, r1, ip, lsl #23
   19ab4:	andeq	r9, r1, ip, lsl #23
   19ab8:	andeq	r9, r1, ip, lsl #23
   19abc:	andeq	r9, r1, ip, lsl #23
   19ac0:	andeq	r9, r1, ip, lsl #23
   19ac4:	andeq	r9, r1, ip, lsl #23
   19ac8:	andeq	r9, r1, ip, lsl #23
   19acc:	andeq	r9, r1, ip, lsl #23
   19ad0:	andeq	r9, r1, ip, lsl #23
   19ad4:	andeq	r9, r1, ip, lsl #23
   19ad8:	andeq	r9, r1, ip, lsl #23
   19adc:	andeq	r9, r1, ip, lsl #23
   19ae0:	andeq	r9, r1, ip, lsl #23
   19ae4:	andeq	r9, r1, ip, lsl #23
   19ae8:	andeq	r9, r1, ip, lsl #23
   19aec:	andeq	r9, r1, ip, lsl #23
   19af0:	andeq	r9, r1, ip, lsl #23
   19af4:	andeq	r9, r1, ip, lsl #23
   19af8:	andeq	r9, r1, ip, lsl #23
   19afc:	andeq	r9, r1, r4, lsl #25
   19b00:	andeq	r9, r1, ip, lsr #25
   19b04:	andeq	r9, r1, ip, lsl #23
   19b08:	andeq	r9, r1, r4, lsl #25
   19b0c:	andeq	r9, r1, ip, lsl #23
   19b10:	andeq	r9, r1, r4, lsl #25
   19b14:	andeq	r9, r1, ip, lsl #23
   19b18:	andeq	r9, r1, ip, lsl #23
   19b1c:	andeq	r9, r1, ip, lsl #23
   19b20:	andeq	r9, r1, ip, lsl #23
   19b24:	andeq	r9, r1, ip, lsl #23
   19b28:	andeq	r9, r1, ip, lsl #23
   19b2c:	andeq	r9, r1, ip, lsl #23
   19b30:	andeq	r9, r1, ip, lsl #23
   19b34:	andeq	r9, r1, ip, lsl #23
   19b38:	andeq	r9, r1, ip, lsl #23
   19b3c:	andeq	r9, r1, ip, lsl #23
   19b40:	andeq	r9, r1, ip, lsl #23
   19b44:	andeq	r9, r1, ip, lsl #23
   19b48:	andeq	r9, r1, ip, lsl #23
   19b4c:	andeq	r9, r1, ip, lsl #23
   19b50:	andeq	r9, r1, ip, lsl #23
   19b54:	andeq	r9, r1, ip, lsl #23
   19b58:	andeq	r9, r1, ip, lsl #23
   19b5c:	andeq	r9, r1, ip, lsl #23
   19b60:	andeq	r9, r1, ip, lsl #23
   19b64:	andeq	r9, r1, ip, lsl #23
   19b68:	andeq	r9, r1, ip, lsl #23
   19b6c:	andeq	r9, r1, ip, lsl #23
   19b70:	andeq	r9, r1, ip, lsl #23
   19b74:	andeq	r9, r1, ip, lsl #23
   19b78:	andeq	r9, r1, ip, lsl #23
   19b7c:	andeq	r9, r1, r0, asr #24
   19b80:	andeq	r9, r1, r4, lsl #25
   19b84:	andeq	r9, r1, r0, asr #24
   19b88:	andeq	r9, r1, r8, ror #24
   19b8c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19b90:	tst	r0, #1
   19b94:	bne	19bc0 <__assert_fail@plt+0x8848>
   19b98:	ldr	r1, [fp, #16]
   19b9c:	ubfx	r0, r6, #5, #3
   19ba0:	mov	r2, #1
   19ba4:	ldr	r0, [r1, r0, lsl #2]
   19ba8:	and	r1, r6, #31
   19bac:	tst	r0, r2, lsl r1
   19bb0:	beq	19bc0 <__assert_fail@plt+0x8848>
   19bb4:	mov	r0, r6
   19bb8:	mov	r1, r9
   19bbc:	b	19bd4 <__assert_fail@plt+0x885c>
   19bc0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19bc4:	mov	r1, r9
   19bc8:	cmp	r0, #0
   19bcc:	mov	r0, r6
   19bd0:	beq	1a320 <__assert_fail@plt+0x8fa8>
   19bd4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19bd8:	tst	r2, #1
   19bdc:	bne	1a4bc <__assert_fail@plt+0x9144>
   19be0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19be4:	subs	r2, r2, #2
   19be8:	movwne	r2, #1
   19bec:	orr	r2, r2, lr
   19bf0:	tst	r2, #1
   19bf4:	bne	19c2c <__assert_fail@plt+0x88b4>
   19bf8:	cmp	r8, ip
   19bfc:	mov	lr, #1
   19c00:	movcc	r2, #39	; 0x27
   19c04:	strbcc	r2, [r5, r8]
   19c08:	add	r2, r8, #1
   19c0c:	cmp	r2, ip
   19c10:	movcc	r3, #36	; 0x24
   19c14:	strbcc	r3, [r5, r2]
   19c18:	add	r2, r8, #2
   19c1c:	add	r8, r8, #3
   19c20:	cmp	r2, ip
   19c24:	movcc	r3, #39	; 0x27
   19c28:	strbcc	r3, [r5, r2]
   19c2c:	cmp	r8, ip
   19c30:	movcc	r2, #92	; 0x5c
   19c34:	strbcc	r2, [r5, r8]
   19c38:	add	r8, r8, #1
   19c3c:	b	1a360 <__assert_fail@plt+0x8fe8>
   19c40:	cmp	sl, #1
   19c44:	beq	19c68 <__assert_fail@plt+0x88f0>
   19c48:	mov	r9, #0
   19c4c:	cmn	sl, #1
   19c50:	bne	19c74 <__assert_fail@plt+0x88fc>
   19c54:	ldrb	r0, [r4, #1]
   19c58:	cmp	r0, #0
   19c5c:	beq	19c68 <__assert_fail@plt+0x88f0>
   19c60:	mvn	sl, #0
   19c64:	b	19c74 <__assert_fail@plt+0x88fc>
   19c68:	mov	r9, #0
   19c6c:	cmp	r7, #0
   19c70:	beq	19c80 <__assert_fail@plt+0x8908>
   19c74:	mov	r0, #0
   19c78:	str	r0, [fp, #-56]	; 0xffffffc8
   19c7c:	b	19b8c <__assert_fail@plt+0x8814>
   19c80:	mov	r1, #1
   19c84:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19c88:	cmp	r0, #2
   19c8c:	bne	19ca4 <__assert_fail@plt+0x892c>
   19c90:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19c94:	mov	r9, r1
   19c98:	tst	r0, #1
   19c9c:	beq	19b8c <__assert_fail@plt+0x8814>
   19ca0:	b	1a4bc <__assert_fail@plt+0x9144>
   19ca4:	mov	r9, r1
   19ca8:	b	19b8c <__assert_fail@plt+0x8814>
   19cac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19cb0:	cmp	r0, #2
   19cb4:	bne	19ef8 <__assert_fail@plt+0x8b80>
   19cb8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19cbc:	tst	r0, #1
   19cc0:	bne	1a4bc <__assert_fail@plt+0x9144>
   19cc4:	mov	r0, #0
   19cc8:	str	r0, [fp, #-56]	; 0xffffffc8
   19ccc:	b	19f10 <__assert_fail@plt+0x8b98>
   19cd0:	mov	r0, #102	; 0x66
   19cd4:	b	19f1c <__assert_fail@plt+0x8ba4>
   19cd8:	mov	r2, #116	; 0x74
   19cdc:	b	19cec <__assert_fail@plt+0x8974>
   19ce0:	mov	r0, #98	; 0x62
   19ce4:	b	19f1c <__assert_fail@plt+0x8ba4>
   19ce8:	mov	r2, #114	; 0x72
   19cec:	ldr	r0, [sp, #68]	; 0x44
   19cf0:	tst	r0, #1
   19cf4:	mov	r0, r2
   19cf8:	bne	19f1c <__assert_fail@plt+0x8ba4>
   19cfc:	b	1a4bc <__assert_fail@plt+0x9144>
   19d00:	ldr	r0, [sp, #84]	; 0x54
   19d04:	tst	r0, #1
   19d08:	beq	19f3c <__assert_fail@plt+0x8bc4>
   19d0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19d10:	tst	r0, #1
   19d14:	bne	1a5a8 <__assert_fail@plt+0x9230>
   19d18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19d1c:	mov	r2, sl
   19d20:	subs	r0, r0, #2
   19d24:	movwne	r0, #1
   19d28:	orr	r0, r0, lr
   19d2c:	tst	r0, #1
   19d30:	bne	19d68 <__assert_fail@plt+0x89f0>
   19d34:	cmp	r8, ip
   19d38:	mov	lr, #1
   19d3c:	movcc	r0, #39	; 0x27
   19d40:	strbcc	r0, [r5, r8]
   19d44:	add	r0, r8, #1
   19d48:	cmp	r0, ip
   19d4c:	movcc	r1, #36	; 0x24
   19d50:	strbcc	r1, [r5, r0]
   19d54:	add	r0, r8, #2
   19d58:	add	r8, r8, #3
   19d5c:	cmp	r0, ip
   19d60:	movcc	r1, #39	; 0x27
   19d64:	strbcc	r1, [r5, r0]
   19d68:	mov	r1, #1
   19d6c:	cmp	r8, ip
   19d70:	mov	r9, #0
   19d74:	mov	r6, #48	; 0x30
   19d78:	str	r1, [fp, #-56]	; 0xffffffc8
   19d7c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19d80:	movcc	r0, #92	; 0x5c
   19d84:	strbcc	r0, [r5, r8]
   19d88:	add	r0, r8, #1
   19d8c:	cmp	r1, #2
   19d90:	beq	1a098 <__assert_fail@plt+0x8d20>
   19d94:	add	r1, r7, #1
   19d98:	cmp	r1, r2
   19d9c:	bcs	1a098 <__assert_fail@plt+0x8d20>
   19da0:	ldrb	r1, [r4, r1]
   19da4:	sub	r1, r1, #48	; 0x30
   19da8:	uxtb	r1, r1
   19dac:	cmp	r1, #9
   19db0:	bhi	1a098 <__assert_fail@plt+0x8d20>
   19db4:	cmp	r0, ip
   19db8:	movcc	r1, #48	; 0x30
   19dbc:	strbcc	r1, [r5, r0]
   19dc0:	add	r0, r8, #2
   19dc4:	add	r8, r8, #3
   19dc8:	cmp	r0, ip
   19dcc:	movcc	r1, #48	; 0x30
   19dd0:	strbcc	r1, [r5, r0]
   19dd4:	b	19b8c <__assert_fail@plt+0x8814>
   19dd8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19ddc:	mov	r6, #63	; 0x3f
   19de0:	cmp	r0, #5
   19de4:	beq	1a0a0 <__assert_fail@plt+0x8d28>
   19de8:	mov	r1, #0
   19dec:	cmp	r0, #2
   19df0:	str	r1, [fp, #-56]	; 0xffffffc8
   19df4:	bne	1a154 <__assert_fail@plt+0x8ddc>
   19df8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19dfc:	mov	r9, #0
   19e00:	b	19c98 <__assert_fail@plt+0x8920>
   19e04:	mov	r0, #118	; 0x76
   19e08:	b	19f1c <__assert_fail@plt+0x8ba4>
   19e0c:	mov	r0, #1
   19e10:	mov	r6, #39	; 0x27
   19e14:	str	r0, [sp, #60]	; 0x3c
   19e18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19e1c:	cmp	r0, #2
   19e20:	bne	19e94 <__assert_fail@plt+0x8b1c>
   19e24:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19e28:	tst	r0, #1
   19e2c:	bne	1a4bc <__assert_fail@plt+0x9144>
   19e30:	ldr	r2, [sp, #56]	; 0x38
   19e34:	clz	r1, ip
   19e38:	mov	lr, #0
   19e3c:	lsr	r1, r1, #5
   19e40:	cmp	r2, #0
   19e44:	mov	r0, r2
   19e48:	movwne	r0, #1
   19e4c:	orrs	r0, r0, r1
   19e50:	moveq	r2, ip
   19e54:	moveq	ip, r0
   19e58:	cmp	r8, ip
   19e5c:	str	r2, [sp, #56]	; 0x38
   19e60:	movcc	r0, #39	; 0x27
   19e64:	strbcc	r0, [r5, r8]
   19e68:	add	r0, r8, #1
   19e6c:	cmp	r0, ip
   19e70:	movcc	r1, #92	; 0x5c
   19e74:	strbcc	r1, [r5, r0]
   19e78:	add	r0, r8, #2
   19e7c:	add	r8, r8, #3
   19e80:	cmp	r0, ip
   19e84:	movcc	r1, #39	; 0x27
   19e88:	strbcc	r1, [r5, r0]
   19e8c:	mov	r0, #0
   19e90:	str	r0, [fp, #-56]	; 0xffffffc8
   19e94:	mov	r9, #1
   19e98:	b	19b8c <__assert_fail@plt+0x8814>
   19e9c:	ldr	r0, [sp, #40]	; 0x28
   19ea0:	str	lr, [sp, #44]	; 0x2c
   19ea4:	str	ip, [sp, #88]	; 0x58
   19ea8:	cmp	r0, #1
   19eac:	bne	19f5c <__assert_fail@plt+0x8be4>
   19eb0:	str	sl, [sp, #36]	; 0x24
   19eb4:	bl	11204 <__ctype_b_loc@plt>
   19eb8:	ldr	r0, [r0]
   19ebc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19ec0:	mov	r1, #1
   19ec4:	add	r0, r0, r6, lsl #1
   19ec8:	ldrb	r0, [r0, #1]
   19ecc:	ubfx	r9, r0, #6, #1
   19ed0:	ldr	r0, [sp, #52]	; 0x34
   19ed4:	ldr	lr, [sp, #44]	; 0x2c
   19ed8:	cmp	r1, #1
   19edc:	orr	r3, r9, r0
   19ee0:	bhi	1a15c <__assert_fail@plt+0x8de4>
   19ee4:	tst	r3, #1
   19ee8:	beq	1a15c <__assert_fail@plt+0x8de4>
   19eec:	ldr	sl, [sp, #36]	; 0x24
   19ef0:	ldr	ip, [sp, #88]	; 0x58
   19ef4:	b	19b8c <__assert_fail@plt+0x8814>
   19ef8:	ldr	r1, [sp, #48]	; 0x30
   19efc:	mov	r0, #0
   19f00:	str	r0, [fp, #-56]	; 0xffffffc8
   19f04:	mov	r0, #92	; 0x5c
   19f08:	cmp	r1, #0
   19f0c:	beq	19f1c <__assert_fail@plt+0x8ba4>
   19f10:	mov	r6, #92	; 0x5c
   19f14:	mov	r9, #0
   19f18:	b	1a320 <__assert_fail@plt+0x8fa8>
   19f1c:	mov	r1, #0
   19f20:	mov	r9, #0
   19f24:	str	r1, [fp, #-56]	; 0xffffffc8
   19f28:	ldr	r1, [sp, #84]	; 0x54
   19f2c:	tst	r1, #1
   19f30:	mov	r1, #0
   19f34:	beq	19b8c <__assert_fail@plt+0x8814>
   19f38:	b	19bd4 <__assert_fail@plt+0x885c>
   19f3c:	ldr	r0, [sp, #32]
   19f40:	mov	r6, #0
   19f44:	mov	r9, #0
   19f48:	cmp	r0, #0
   19f4c:	mov	r0, #0
   19f50:	str	r0, [fp, #-56]	; 0xffffffc8
   19f54:	beq	19b8c <__assert_fail@plt+0x8814>
   19f58:	b	1a378 <__assert_fail@plt+0x9000>
   19f5c:	mov	r0, #0
   19f60:	cmn	sl, #1
   19f64:	sub	r3, fp, #40	; 0x28
   19f68:	str	r0, [fp, #-36]	; 0xffffffdc
   19f6c:	str	r0, [fp, #-40]	; 0xffffffd8
   19f70:	bne	19f88 <__assert_fail@plt+0x8c10>
   19f74:	mov	r0, r4
   19f78:	bl	11234 <strlen@plt>
   19f7c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   19f80:	sub	r3, fp, #40	; 0x28
   19f84:	mov	sl, r0
   19f88:	ldr	r0, [sp, #72]	; 0x48
   19f8c:	mov	r9, #1
   19f90:	mov	r1, #0
   19f94:	str	sl, [sp, #36]	; 0x24
   19f98:	add	r0, r0, r7
   19f9c:	str	r0, [sp, #20]
   19fa0:	add	r0, r1, r7
   19fa4:	str	r1, [sp, #24]
   19fa8:	add	r1, r4, r0
   19fac:	mov	r4, r0
   19fb0:	sub	r2, sl, r0
   19fb4:	sub	r0, fp, #44	; 0x2c
   19fb8:	bl	1c2ac <__assert_fail@plt+0xaf34>
   19fbc:	cmp	r0, #0
   19fc0:	beq	1a3cc <__assert_fail@plt+0x9054>
   19fc4:	cmn	r0, #1
   19fc8:	beq	1a384 <__assert_fail@plt+0x900c>
   19fcc:	ldr	r2, [sp, #36]	; 0x24
   19fd0:	cmn	r0, #2
   19fd4:	beq	1a38c <__assert_fail@plt+0x9014>
   19fd8:	ldr	r2, [sp, #64]	; 0x40
   19fdc:	ldr	ip, [sp, #88]	; 0x58
   19fe0:	ldr	r4, [sp, #84]	; 0x54
   19fe4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   19fe8:	cmp	r0, #2
   19fec:	mov	r1, #0
   19ff0:	movwcc	r1, #1
   19ff4:	eor	r2, r2, #1
   19ff8:	orrs	r1, r2, r1
   19ffc:	bne	1a04c <__assert_fail@plt+0x8cd4>
   1a000:	ldr	r1, [sp, #24]
   1a004:	ldr	r2, [sp, #20]
   1a008:	add	r1, r2, r1
   1a00c:	sub	r2, r0, #1
   1a010:	ldrb	r3, [r1]
   1a014:	sub	r5, r3, #94	; 0x5e
   1a018:	cmp	r5, #30
   1a01c:	bhi	1a034 <__assert_fail@plt+0x8cbc>
   1a020:	mov	r4, #1
   1a024:	mov	sl, #1073741829	; 0x40000005
   1a028:	tst	sl, r4, lsl r5
   1a02c:	ldr	r4, [sp, #84]	; 0x54
   1a030:	bne	1a494 <__assert_fail@plt+0x911c>
   1a034:	sub	r3, r3, #91	; 0x5b
   1a038:	cmp	r3, #2
   1a03c:	bcc	1a494 <__assert_fail@plt+0x911c>
   1a040:	add	r1, r1, #1
   1a044:	subs	r2, r2, #1
   1a048:	bne	1a010 <__assert_fail@plt+0x8c98>
   1a04c:	ldr	r5, [sp, #24]
   1a050:	str	lr, [fp, #-48]	; 0xffffffd0
   1a054:	add	r5, r0, r5
   1a058:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a05c:	bl	1115c <iswprint@plt>
   1a060:	cmp	r0, #0
   1a064:	sub	r4, fp, #40	; 0x28
   1a068:	movwne	r0, #1
   1a06c:	and	r9, r9, r0
   1a070:	mov	r0, r4
   1a074:	bl	1112c <mbsinit@plt>
   1a078:	mov	r1, r5
   1a07c:	mov	r3, r4
   1a080:	ldr	sl, [sp, #36]	; 0x24
   1a084:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a088:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1a08c:	cmp	r0, #0
   1a090:	beq	19fa0 <__assert_fail@plt+0x8c28>
   1a094:	b	19ed0 <__assert_fail@plt+0x8b58>
   1a098:	mov	r8, r0
   1a09c:	b	19b8c <__assert_fail@plt+0x8814>
   1a0a0:	mov	r0, #0
   1a0a4:	str	r0, [fp, #-56]	; 0xffffffc8
   1a0a8:	ldr	r0, [sp, #28]
   1a0ac:	cmp	r0, #0
   1a0b0:	beq	1a154 <__assert_fail@plt+0x8ddc>
   1a0b4:	add	r0, r7, #2
   1a0b8:	mov	r1, sl
   1a0bc:	cmp	r0, sl
   1a0c0:	bcs	1a154 <__assert_fail@plt+0x8ddc>
   1a0c4:	add	r1, r7, r4
   1a0c8:	ldrb	r1, [r1, #1]
   1a0cc:	cmp	r1, #63	; 0x3f
   1a0d0:	bne	1a154 <__assert_fail@plt+0x8ddc>
   1a0d4:	ldrb	r9, [r4, r0]
   1a0d8:	sub	r2, r9, #33	; 0x21
   1a0dc:	cmp	r2, #29
   1a0e0:	bhi	1a154 <__assert_fail@plt+0x8ddc>
   1a0e4:	mov	r1, r4
   1a0e8:	movw	r4, #20929	; 0x51c1
   1a0ec:	mov	r3, #1
   1a0f0:	movt	r4, #14336	; 0x3800
   1a0f4:	tst	r4, r3, lsl r2
   1a0f8:	beq	1a3e0 <__assert_fail@plt+0x9068>
   1a0fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a100:	tst	r2, #1
   1a104:	bne	1a5b0 <__assert_fail@plt+0x9238>
   1a108:	cmp	r8, ip
   1a10c:	mov	r4, r1
   1a110:	mov	r7, r0
   1a114:	mov	r6, r9
   1a118:	movcc	r2, #63	; 0x3f
   1a11c:	strbcc	r2, [r5, r8]
   1a120:	add	r2, r8, #1
   1a124:	cmp	r2, ip
   1a128:	movcc	r3, #34	; 0x22
   1a12c:	strbcc	r3, [r5, r2]
   1a130:	add	r2, r8, #2
   1a134:	cmp	r2, ip
   1a138:	movcc	r3, #34	; 0x22
   1a13c:	strbcc	r3, [r5, r2]
   1a140:	add	r2, r8, #3
   1a144:	add	r8, r8, #4
   1a148:	cmp	r2, ip
   1a14c:	movcc	r3, #63	; 0x3f
   1a150:	strbcc	r3, [r5, r2]
   1a154:	mov	r9, #0
   1a158:	b	19b8c <__assert_fail@plt+0x8814>
   1a15c:	ldr	sl, [sp, #36]	; 0x24
   1a160:	add	r0, r1, r7
   1a164:	mov	r2, #0
   1a168:	str	r3, [sp, #24]
   1a16c:	str	r0, [fp, #-56]	; 0xffffffc8
   1a170:	tst	r3, #1
   1a174:	beq	1a1a0 <__assert_fail@plt+0x8e28>
   1a178:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a17c:	tst	r0, #1
   1a180:	beq	1a268 <__assert_fail@plt+0x8ef0>
   1a184:	ldr	r1, [sp, #88]	; 0x58
   1a188:	mov	r0, r3
   1a18c:	cmp	r8, r1
   1a190:	movcc	r1, #92	; 0x5c
   1a194:	strbcc	r1, [r5, r8]
   1a198:	add	r8, r8, #1
   1a19c:	b	1a26c <__assert_fail@plt+0x8ef4>
   1a1a0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a1a4:	tst	r1, #1
   1a1a8:	bne	1a4b8 <__assert_fail@plt+0x9140>
   1a1ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a1b0:	subs	r2, r1, #2
   1a1b4:	movwne	r2, #1
   1a1b8:	orr	r2, r2, lr
   1a1bc:	tst	r2, #1
   1a1c0:	bne	1a204 <__assert_fail@plt+0x8e8c>
   1a1c4:	ldr	r1, [sp, #88]	; 0x58
   1a1c8:	add	r2, r8, #1
   1a1cc:	mov	lr, #1
   1a1d0:	cmp	r8, r1
   1a1d4:	movcc	r1, #39	; 0x27
   1a1d8:	strbcc	r1, [r5, r8]
   1a1dc:	ldr	r1, [sp, #88]	; 0x58
   1a1e0:	cmp	r2, r1
   1a1e4:	movcc	r1, #36	; 0x24
   1a1e8:	strbcc	r1, [r5, r2]
   1a1ec:	ldr	r1, [sp, #88]	; 0x58
   1a1f0:	add	r2, r8, #2
   1a1f4:	add	r8, r8, #3
   1a1f8:	cmp	r2, r1
   1a1fc:	movcc	r1, #39	; 0x27
   1a200:	strbcc	r1, [r5, r2]
   1a204:	ldr	r1, [sp, #88]	; 0x58
   1a208:	add	r2, r8, #1
   1a20c:	mov	r0, r3
   1a210:	cmp	r8, r1
   1a214:	movcc	r1, #92	; 0x5c
   1a218:	strbcc	r1, [r5, r8]
   1a21c:	ldr	r1, [sp, #88]	; 0x58
   1a220:	cmp	r2, r1
   1a224:	bcs	1a238 <__assert_fail@plt+0x8ec0>
   1a228:	uxtb	r3, r6
   1a22c:	mov	r1, #48	; 0x30
   1a230:	orr	r3, r1, r3, lsr #6
   1a234:	strb	r3, [r5, r2]
   1a238:	ldr	r1, [sp, #88]	; 0x58
   1a23c:	add	r2, r8, #2
   1a240:	add	r8, r8, #3
   1a244:	cmp	r2, r1
   1a248:	lsrcc	r3, r6, #3
   1a24c:	movcc	r1, #6
   1a250:	bficc	r3, r1, #3, #29
   1a254:	mov	r1, #6
   1a258:	bfi	r6, r1, #3, #29
   1a25c:	strbcc	r3, [r5, r2]
   1a260:	mov	r2, #1
   1a264:	b	1a274 <__assert_fail@plt+0x8efc>
   1a268:	mov	r0, r3
   1a26c:	mov	r1, #0
   1a270:	str	r1, [fp, #-52]	; 0xffffffcc
   1a274:	mov	ip, r2
   1a278:	and	r1, r2, #1
   1a27c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a280:	add	r3, r7, #1
   1a284:	cmp	r2, r3
   1a288:	bls	1a310 <__assert_fail@plt+0x8f98>
   1a28c:	cmp	r1, #0
   1a290:	mvn	r5, lr
   1a294:	movwne	r1, #1
   1a298:	orr	r5, r5, r1
   1a29c:	tst	r5, #1
   1a2a0:	bne	1a2e4 <__assert_fail@plt+0x8f6c>
   1a2a4:	ldr	r1, [sp, #88]	; 0x58
   1a2a8:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a2ac:	mov	r2, r4
   1a2b0:	ldr	r4, [sp, #88]	; 0x58
   1a2b4:	ldr	r0, [sp, #24]
   1a2b8:	mov	lr, #0
   1a2bc:	cmp	r8, r1
   1a2c0:	movcc	r1, #39	; 0x27
   1a2c4:	strbcc	r1, [r5, r8]
   1a2c8:	add	r1, r8, #1
   1a2cc:	add	r8, r8, #2
   1a2d0:	cmp	r1, r4
   1a2d4:	movcc	r4, #39	; 0x27
   1a2d8:	strbcc	r4, [r5, r1]
   1a2dc:	mov	r4, r2
   1a2e0:	b	1a2e8 <__assert_fail@plt+0x8f70>
   1a2e4:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a2e8:	ldr	r1, [sp, #88]	; 0x58
   1a2ec:	mov	r2, ip
   1a2f0:	cmp	r8, r1
   1a2f4:	ldr	r1, [sp, #72]	; 0x48
   1a2f8:	strbcc	r6, [r5, r8]
   1a2fc:	add	r8, r8, #1
   1a300:	ldrb	r6, [r1, r7]
   1a304:	mov	r7, r3
   1a308:	mov	r3, r0
   1a30c:	b	1a170 <__assert_fail@plt+0x8df8>
   1a310:	ldr	ip, [sp, #88]	; 0x58
   1a314:	cmp	r1, #0
   1a318:	movwne	r1, #1
   1a31c:	str	r1, [fp, #-56]	; 0xffffffc8
   1a320:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a324:	cmp	r0, #0
   1a328:	bne	1a358 <__assert_fail@plt+0x8fe0>
   1a32c:	tst	lr, #1
   1a330:	beq	1a358 <__assert_fail@plt+0x8fe0>
   1a334:	cmp	r8, ip
   1a338:	mov	lr, #0
   1a33c:	movcc	r0, #39	; 0x27
   1a340:	strbcc	r0, [r5, r8]
   1a344:	add	r0, r8, #1
   1a348:	add	r8, r8, #2
   1a34c:	cmp	r0, ip
   1a350:	movcc	r1, #39	; 0x27
   1a354:	strbcc	r1, [r5, r0]
   1a358:	mov	r1, r9
   1a35c:	mov	r0, r6
   1a360:	cmp	r8, ip
   1a364:	strbcc	r0, [r5, r8]
   1a368:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a36c:	add	r8, r8, #1
   1a370:	and	r0, r0, r1
   1a374:	str	r0, [fp, #-48]	; 0xffffffd0
   1a378:	mov	r3, sl
   1a37c:	add	r7, r7, #1
   1a380:	b	19870 <__assert_fail@plt+0x84f8>
   1a384:	mov	r9, #0
   1a388:	b	1a3cc <__assert_fail@plt+0x9054>
   1a38c:	mov	r9, #0
   1a390:	cmp	r2, r4
   1a394:	bls	1a3cc <__assert_fail@plt+0x9054>
   1a398:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1a39c:	ldr	r1, [sp, #24]
   1a3a0:	add	r0, r4, r7
   1a3a4:	mov	r3, r1
   1a3a8:	ldrb	r1, [r0, r1]
   1a3ac:	cmp	r1, #0
   1a3b0:	beq	1a3d8 <__assert_fail@plt+0x9060>
   1a3b4:	add	r3, r3, #1
   1a3b8:	add	r1, r7, r3
   1a3bc:	cmp	r1, r2
   1a3c0:	mov	r1, r3
   1a3c4:	bcc	1a3a4 <__assert_fail@plt+0x902c>
   1a3c8:	b	19ed0 <__assert_fail@plt+0x8b58>
   1a3cc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1a3d0:	ldr	r1, [sp, #24]
   1a3d4:	b	19ed0 <__assert_fail@plt+0x8b58>
   1a3d8:	mov	r1, r3
   1a3dc:	b	19ed0 <__assert_fail@plt+0x8b58>
   1a3e0:	mov	r9, #0
   1a3e4:	mov	r4, r1
   1a3e8:	b	19b8c <__assert_fail@plt+0x8814>
   1a3ec:	mov	sl, r7
   1a3f0:	b	1a3f8 <__assert_fail@plt+0x9080>
   1a3f4:	mvn	sl, #0
   1a3f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a3fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a400:	eor	r0, r1, #2
   1a404:	orr	r0, r0, r8
   1a408:	clz	r0, r0
   1a40c:	lsr	r0, r0, #5
   1a410:	tst	r2, r0
   1a414:	bne	1a4bc <__assert_fail@plt+0x9144>
   1a418:	subs	r0, r1, #2
   1a41c:	movwne	r0, #1
   1a420:	orr	r0, r2, r0
   1a424:	tst	r0, #1
   1a428:	ldreq	r0, [sp, #60]	; 0x3c
   1a42c:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   1a430:	eoreq	r0, r0, #1
   1a434:	tsteq	r0, #1
   1a438:	bne	1a550 <__assert_fail@plt+0x91d8>
   1a43c:	tst	r1, #1
   1a440:	bne	1a51c <__assert_fail@plt+0x91a4>
   1a444:	ldr	r6, [sp, #56]	; 0x38
   1a448:	mov	r9, #0
   1a44c:	cmp	r6, #0
   1a450:	beq	1a548 <__assert_fail@plt+0x91d0>
   1a454:	ldr	r0, [sp, #84]	; 0x54
   1a458:	mov	r1, #0
   1a45c:	mov	r7, #2
   1a460:	cmp	ip, #0
   1a464:	str	r1, [fp, #-48]	; 0xffffffd0
   1a468:	mov	r1, #0
   1a46c:	str	r1, [fp, #-76]	; 0xffffffb4
   1a470:	beq	195d8 <__assert_fail@plt+0x8260>
   1a474:	b	1a550 <__assert_fail@plt+0x91d8>
   1a478:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1a47c:	ldr	r1, [fp, #12]
   1a480:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a484:	mov	r5, r3
   1a488:	mov	ip, r6
   1a48c:	mov	r3, sl
   1a490:	b	1a4e0 <__assert_fail@plt+0x9168>
   1a494:	tst	r4, #1
   1a498:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a49c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1a4a0:	ldr	r1, [fp, #12]
   1a4a4:	ldr	r3, [sp, #36]	; 0x24
   1a4a8:	mov	r0, #2
   1a4ac:	movwne	r0, #4
   1a4b0:	mov	r2, r0
   1a4b4:	b	1a4e0 <__assert_fail@plt+0x9168>
   1a4b8:	ldr	ip, [sp, #88]	; 0x58
   1a4bc:	ldr	r1, [sp, #84]	; 0x54
   1a4c0:	mov	r0, #2
   1a4c4:	tst	r1, #1
   1a4c8:	movwne	r0, #4
   1a4cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a4d0:	ldr	r1, [fp, #12]
   1a4d4:	mov	r3, sl
   1a4d8:	cmp	r2, #2
   1a4dc:	moveq	r2, r0
   1a4e0:	mov	r0, #0
   1a4e4:	bic	r1, r1, #2
   1a4e8:	str	r2, [sp]
   1a4ec:	mov	r2, r4
   1a4f0:	str	r0, [sp, #8]
   1a4f4:	ldr	r0, [sp, #76]	; 0x4c
   1a4f8:	str	r1, [sp, #4]
   1a4fc:	mov	r1, ip
   1a500:	str	r0, [sp, #12]
   1a504:	ldr	r0, [sp, #80]	; 0x50
   1a508:	str	r0, [sp, #16]
   1a50c:	mov	r0, r5
   1a510:	bl	1954c <__assert_fail@plt+0x81d4>
   1a514:	mov	r8, r0
   1a518:	b	1a59c <__assert_fail@plt+0x9224>
   1a51c:	mov	r0, #5
   1a520:	ldr	r1, [sp, #56]	; 0x38
   1a524:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a528:	mov	r3, sl
   1a52c:	str	r0, [sp]
   1a530:	ldr	r0, [fp, #12]
   1a534:	str	r0, [sp, #4]
   1a538:	ldr	r0, [fp, #16]
   1a53c:	str	r0, [sp, #8]
   1a540:	ldr	r0, [sp, #76]	; 0x4c
   1a544:	b	1a500 <__assert_fail@plt+0x9188>
   1a548:	mov	r0, #0
   1a54c:	str	r0, [fp, #-76]	; 0xffffffb4
   1a550:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a554:	cmp	r1, #0
   1a558:	beq	1a590 <__assert_fail@plt+0x9218>
   1a55c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a560:	tst	r0, #1
   1a564:	bne	1a590 <__assert_fail@plt+0x9218>
   1a568:	ldrb	r0, [r1]
   1a56c:	cmp	r0, #0
   1a570:	beq	1a590 <__assert_fail@plt+0x9218>
   1a574:	add	r1, r1, #1
   1a578:	cmp	r8, ip
   1a57c:	strbcc	r0, [r5, r8]
   1a580:	add	r8, r8, #1
   1a584:	ldrb	r0, [r1], #1
   1a588:	cmp	r0, #0
   1a58c:	bne	1a578 <__assert_fail@plt+0x9200>
   1a590:	cmp	r8, ip
   1a594:	movcc	r0, #0
   1a598:	strbcc	r0, [r5, r8]
   1a59c:	mov	r0, r8
   1a5a0:	sub	sp, fp, #28
   1a5a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5a8:	mov	r0, #4
   1a5ac:	b	1a4cc <__assert_fail@plt+0x9154>
   1a5b0:	mov	r4, r1
   1a5b4:	b	1a4bc <__assert_fail@plt+0x9144>
   1a5b8:	bl	1133c <abort@plt>
   1a5bc:	mov	r3, r2
   1a5c0:	mov	r2, #0
   1a5c4:	b	1a5c8 <__assert_fail@plt+0x9250>
   1a5c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5cc:	add	fp, sp, #28
   1a5d0:	sub	sp, sp, #36	; 0x24
   1a5d4:	movw	r8, #57776	; 0xe1b0
   1a5d8:	cmp	r3, #0
   1a5dc:	mov	r4, r2
   1a5e0:	str	r2, [sp, #24]
   1a5e4:	mov	r5, r1
   1a5e8:	mov	r6, r0
   1a5ec:	str	r0, [sp, #20]
   1a5f0:	movt	r8, #2
   1a5f4:	movne	r8, r3
   1a5f8:	bl	1124c <__errno_location@plt>
   1a5fc:	str	r0, [sp, #28]
   1a600:	ldr	r1, [r8, #40]	; 0x28
   1a604:	ldr	r2, [r8, #44]	; 0x2c
   1a608:	ldr	r7, [r0]
   1a60c:	cmp	r4, #0
   1a610:	add	sl, r8, #8
   1a614:	mov	r0, #0
   1a618:	ldm	r8, {r3, r9}
   1a61c:	orreq	r9, r9, #1
   1a620:	stm	sp, {r3, r9, sl}
   1a624:	str	r1, [sp, #12]
   1a628:	str	r2, [sp, #16]
   1a62c:	mov	r1, #0
   1a630:	mov	r2, r6
   1a634:	mov	r3, r5
   1a638:	str	r7, [sp, #32]
   1a63c:	mov	r7, r5
   1a640:	bl	1954c <__assert_fail@plt+0x81d4>
   1a644:	add	r4, r0, #1
   1a648:	mov	r5, r0
   1a64c:	mov	r0, r4
   1a650:	bl	1b34c <__assert_fail@plt+0x9fd4>
   1a654:	mov	r6, r0
   1a658:	ldr	r0, [r8]
   1a65c:	ldr	r2, [r8, #44]	; 0x2c
   1a660:	ldr	r1, [r8, #40]	; 0x28
   1a664:	mov	r3, r7
   1a668:	stm	sp, {r0, r9, sl}
   1a66c:	str	r2, [sp, #16]
   1a670:	ldr	r2, [sp, #20]
   1a674:	str	r1, [sp, #12]
   1a678:	mov	r0, r6
   1a67c:	mov	r1, r4
   1a680:	bl	1954c <__assert_fail@plt+0x81d4>
   1a684:	ldr	r0, [sp, #24]
   1a688:	ldr	r1, [sp, #32]
   1a68c:	ldr	r2, [sp, #28]
   1a690:	cmp	r0, #0
   1a694:	str	r1, [r2]
   1a698:	strne	r5, [r0]
   1a69c:	mov	r0, r6
   1a6a0:	sub	sp, fp, #28
   1a6a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a6ac:	add	fp, sp, #24
   1a6b0:	movw	r5, #57636	; 0xe124
   1a6b4:	movw	r8, #57632	; 0xe120
   1a6b8:	movt	r5, #2
   1a6bc:	movt	r8, #2
   1a6c0:	ldr	r0, [r5]
   1a6c4:	ldr	r4, [r8]
   1a6c8:	cmp	r0, #2
   1a6cc:	blt	1a6f8 <__assert_fail@plt+0x9380>
   1a6d0:	add	r7, r4, #12
   1a6d4:	mov	r6, #0
   1a6d8:	ldr	r0, [r7, r6, lsl #3]
   1a6dc:	bl	1924c <__assert_fail@plt+0x7ed4>
   1a6e0:	ldr	r1, [r5]
   1a6e4:	add	r2, r6, #2
   1a6e8:	add	r0, r6, #1
   1a6ec:	mov	r6, r0
   1a6f0:	cmp	r2, r1
   1a6f4:	blt	1a6d8 <__assert_fail@plt+0x9360>
   1a6f8:	ldr	r0, [r4, #4]
   1a6fc:	movw	r9, #57824	; 0xe1e0
   1a700:	movw	r7, #57640	; 0xe128
   1a704:	movt	r9, #2
   1a708:	movt	r7, #2
   1a70c:	cmp	r0, r9
   1a710:	beq	1a720 <__assert_fail@plt+0x93a8>
   1a714:	bl	1924c <__assert_fail@plt+0x7ed4>
   1a718:	mov	r0, #256	; 0x100
   1a71c:	stm	r7, {r0, r9}
   1a720:	cmp	r4, r7
   1a724:	beq	1a734 <__assert_fail@plt+0x93bc>
   1a728:	mov	r0, r4
   1a72c:	bl	1924c <__assert_fail@plt+0x7ed4>
   1a730:	str	r7, [r8]
   1a734:	mov	r0, #1
   1a738:	str	r0, [r5]
   1a73c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a740:	movw	r3, #57776	; 0xe1b0
   1a744:	mvn	r2, #0
   1a748:	movt	r3, #2
   1a74c:	b	1a750 <__assert_fail@plt+0x93d8>
   1a750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a754:	add	fp, sp, #28
   1a758:	sub	sp, sp, #44	; 0x2c
   1a75c:	mov	r7, r3
   1a760:	str	r2, [sp, #36]	; 0x24
   1a764:	str	r1, [sp, #32]
   1a768:	mov	r5, r0
   1a76c:	bl	1124c <__errno_location@plt>
   1a770:	cmp	r5, #0
   1a774:	bmi	1a8e4 <__assert_fail@plt+0x956c>
   1a778:	cmn	r5, #-2147483647	; 0x80000001
   1a77c:	beq	1a8e4 <__assert_fail@plt+0x956c>
   1a780:	movw	r8, #57636	; 0xe124
   1a784:	movw	r4, #57632	; 0xe120
   1a788:	str	r0, [sp, #28]
   1a78c:	ldr	r0, [r0]
   1a790:	movt	r8, #2
   1a794:	movt	r4, #2
   1a798:	ldr	r1, [r8]
   1a79c:	ldr	r6, [r4]
   1a7a0:	str	r0, [sp, #24]
   1a7a4:	cmp	r1, r5
   1a7a8:	ble	1a7b4 <__assert_fail@plt+0x943c>
   1a7ac:	mov	sl, r6
   1a7b0:	b	1a820 <__assert_fail@plt+0x94a8>
   1a7b4:	movw	r9, #57640	; 0xe128
   1a7b8:	mov	r0, #8
   1a7bc:	str	r1, [fp, #-32]	; 0xffffffe0
   1a7c0:	sub	r1, r5, r1
   1a7c4:	mvn	r3, #-2147483648	; 0x80000000
   1a7c8:	movt	r9, #2
   1a7cc:	str	r0, [sp]
   1a7d0:	add	r2, r1, #1
   1a7d4:	sub	r1, fp, #32
   1a7d8:	subs	r0, r6, r9
   1a7dc:	movne	r0, r6
   1a7e0:	bl	1b47c <__assert_fail@plt+0xa104>
   1a7e4:	mov	sl, r0
   1a7e8:	cmp	r6, r9
   1a7ec:	str	r0, [r4]
   1a7f0:	bne	1a7fc <__assert_fail@plt+0x9484>
   1a7f4:	ldrd	r0, [r9]
   1a7f8:	stm	sl, {r0, r1}
   1a7fc:	ldr	r1, [r8]
   1a800:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a804:	add	r0, sl, r1, lsl #3
   1a808:	sub	r1, r2, r1
   1a80c:	lsl	r2, r1, #3
   1a810:	mov	r1, #0
   1a814:	bl	11270 <memset@plt>
   1a818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a81c:	str	r0, [r8]
   1a820:	mov	r9, sl
   1a824:	ldm	r7, {r0, r1}
   1a828:	orr	r8, r1, #1
   1a82c:	add	r1, r7, #8
   1a830:	ldr	r2, [r7, #40]	; 0x28
   1a834:	ldr	r3, [r7, #44]	; 0x2c
   1a838:	ldr	r6, [r9, r5, lsl #3]!
   1a83c:	str	r1, [sp, #20]
   1a840:	ldr	r4, [r9, #4]!
   1a844:	stm	sp, {r0, r8}
   1a848:	add	r0, sp, #8
   1a84c:	stm	r0, {r1, r2, r3}
   1a850:	ldr	r2, [sp, #32]
   1a854:	ldr	r3, [sp, #36]	; 0x24
   1a858:	mov	r1, r6
   1a85c:	mov	r0, r4
   1a860:	bl	1954c <__assert_fail@plt+0x81d4>
   1a864:	cmp	r6, r0
   1a868:	bhi	1a8cc <__assert_fail@plt+0x9554>
   1a86c:	add	r6, r0, #1
   1a870:	movw	r0, #57824	; 0xe1e0
   1a874:	movt	r0, #2
   1a878:	str	r6, [sl, r5, lsl #3]
   1a87c:	cmp	r4, r0
   1a880:	beq	1a88c <__assert_fail@plt+0x9514>
   1a884:	mov	r0, r4
   1a888:	bl	1924c <__assert_fail@plt+0x7ed4>
   1a88c:	mov	r0, r6
   1a890:	bl	1b34c <__assert_fail@plt+0x9fd4>
   1a894:	str	r0, [r9]
   1a898:	mov	r4, r0
   1a89c:	add	r3, sp, #8
   1a8a0:	ldr	r0, [r7]
   1a8a4:	ldr	r1, [r7, #40]	; 0x28
   1a8a8:	ldr	r2, [r7, #44]	; 0x2c
   1a8ac:	stm	sp, {r0, r8}
   1a8b0:	ldr	r0, [sp, #20]
   1a8b4:	stm	r3, {r0, r1, r2}
   1a8b8:	ldr	r2, [sp, #32]
   1a8bc:	ldr	r3, [sp, #36]	; 0x24
   1a8c0:	mov	r0, r4
   1a8c4:	mov	r1, r6
   1a8c8:	bl	1954c <__assert_fail@plt+0x81d4>
   1a8cc:	ldr	r0, [sp, #28]
   1a8d0:	ldr	r1, [sp, #24]
   1a8d4:	str	r1, [r0]
   1a8d8:	mov	r0, r4
   1a8dc:	sub	sp, fp, #28
   1a8e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8e4:	bl	1133c <abort@plt>
   1a8e8:	movw	r3, #57776	; 0xe1b0
   1a8ec:	movt	r3, #2
   1a8f0:	b	1a750 <__assert_fail@plt+0x93d8>
   1a8f4:	movw	r3, #57776	; 0xe1b0
   1a8f8:	mov	r1, r0
   1a8fc:	mov	r0, #0
   1a900:	mvn	r2, #0
   1a904:	movt	r3, #2
   1a908:	b	1a750 <__assert_fail@plt+0x93d8>
   1a90c:	movw	r3, #57776	; 0xe1b0
   1a910:	mov	r2, r1
   1a914:	mov	r1, r0
   1a918:	mov	r0, #0
   1a91c:	movt	r3, #2
   1a920:	b	1a750 <__assert_fail@plt+0x93d8>
   1a924:	push	{fp, lr}
   1a928:	mov	fp, sp
   1a92c:	sub	sp, sp, #48	; 0x30
   1a930:	vmov.i32	q8, #0	; 0x00000000
   1a934:	mov	ip, #32
   1a938:	mov	r3, sp
   1a93c:	mov	lr, r2
   1a940:	cmp	r1, #10
   1a944:	add	r2, r3, #16
   1a948:	vst1.64	{d16-d17}, [r3], ip
   1a94c:	vst1.64	{d16-d17}, [r2]
   1a950:	vst1.64	{d16-d17}, [r3]
   1a954:	beq	1a974 <__assert_fail@plt+0x95fc>
   1a958:	str	r1, [sp]
   1a95c:	mov	r3, sp
   1a960:	mov	r1, lr
   1a964:	mvn	r2, #0
   1a968:	bl	1a750 <__assert_fail@plt+0x93d8>
   1a96c:	mov	sp, fp
   1a970:	pop	{fp, pc}
   1a974:	bl	1133c <abort@plt>
   1a978:	push	{r4, sl, fp, lr}
   1a97c:	add	fp, sp, #8
   1a980:	sub	sp, sp, #48	; 0x30
   1a984:	vmov.i32	q8, #0	; 0x00000000
   1a988:	mov	ip, r3
   1a98c:	mov	r3, sp
   1a990:	mov	lr, #32
   1a994:	cmp	r1, #10
   1a998:	add	r4, r3, #16
   1a99c:	vst1.64	{d16-d17}, [r3], lr
   1a9a0:	vst1.64	{d16-d17}, [r4]
   1a9a4:	vst1.64	{d16-d17}, [r3]
   1a9a8:	beq	1a9c8 <__assert_fail@plt+0x9650>
   1a9ac:	str	r1, [sp]
   1a9b0:	mov	r1, r2
   1a9b4:	mov	r3, sp
   1a9b8:	mov	r2, ip
   1a9bc:	bl	1a750 <__assert_fail@plt+0x93d8>
   1a9c0:	sub	sp, fp, #8
   1a9c4:	pop	{r4, sl, fp, pc}
   1a9c8:	bl	1133c <abort@plt>
   1a9cc:	mov	r2, r1
   1a9d0:	mov	r1, r0
   1a9d4:	mov	r0, #0
   1a9d8:	b	1a924 <__assert_fail@plt+0x95ac>
   1a9dc:	mov	r3, r2
   1a9e0:	mov	r2, r1
   1a9e4:	mov	r1, r0
   1a9e8:	mov	r0, #0
   1a9ec:	b	1a978 <__assert_fail@plt+0x9600>
   1a9f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a9f4:	add	fp, sp, #24
   1a9f8:	sub	sp, sp, #48	; 0x30
   1a9fc:	movw	r8, #57776	; 0xe1b0
   1aa00:	mov	lr, r0
   1aa04:	mov	r3, sp
   1aa08:	mov	ip, r1
   1aa0c:	movt	r8, #2
   1aa10:	mov	r1, r3
   1aa14:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   1aa18:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   1aa1c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1aa20:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1aa24:	ubfx	r0, r2, #5, #3
   1aa28:	and	r2, r2, #31
   1aa2c:	mov	r4, #1
   1aa30:	add	r0, r3, r0, lsl #2
   1aa34:	ldr	r1, [r0, #8]
   1aa38:	bic	r4, r4, r1, lsr r2
   1aa3c:	eor	r1, r1, r4, lsl r2
   1aa40:	mov	r2, ip
   1aa44:	str	r1, [r0, #8]
   1aa48:	mov	r0, #0
   1aa4c:	mov	r1, lr
   1aa50:	bl	1a750 <__assert_fail@plt+0x93d8>
   1aa54:	sub	sp, fp, #24
   1aa58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aa5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1aa60:	add	fp, sp, #24
   1aa64:	sub	sp, sp, #48	; 0x30
   1aa68:	movw	lr, #57776	; 0xe1b0
   1aa6c:	mov	ip, r0
   1aa70:	mov	r3, sp
   1aa74:	movt	lr, #2
   1aa78:	mov	r2, r3
   1aa7c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   1aa80:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   1aa84:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   1aa88:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1aa8c:	ubfx	r0, r1, #5, #3
   1aa90:	and	r1, r1, #31
   1aa94:	mov	r7, #1
   1aa98:	add	r0, r3, r0, lsl #2
   1aa9c:	ldr	r2, [r0, #8]
   1aaa0:	bic	r7, r7, r2, lsr r1
   1aaa4:	eor	r1, r2, r7, lsl r1
   1aaa8:	mvn	r2, #0
   1aaac:	str	r1, [r0, #8]
   1aab0:	mov	r0, #0
   1aab4:	mov	r1, ip
   1aab8:	bl	1a750 <__assert_fail@plt+0x93d8>
   1aabc:	sub	sp, fp, #24
   1aac0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aac4:	push	{r4, r5, r6, r7, fp, lr}
   1aac8:	add	fp, sp, #16
   1aacc:	sub	sp, sp, #48	; 0x30
   1aad0:	movw	lr, #57776	; 0xe1b0
   1aad4:	mov	ip, r0
   1aad8:	mov	r3, sp
   1aadc:	movt	lr, #2
   1aae0:	mov	r2, r3
   1aae4:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   1aae8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1aaec:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1aaf0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1aaf4:	mov	r1, ip
   1aaf8:	mvn	r2, #0
   1aafc:	ldr	r0, [sp, #12]
   1ab00:	orr	r0, r0, #67108864	; 0x4000000
   1ab04:	str	r0, [sp, #12]
   1ab08:	mov	r0, #0
   1ab0c:	bl	1a750 <__assert_fail@plt+0x93d8>
   1ab10:	sub	sp, fp, #16
   1ab14:	pop	{r4, r5, r6, r7, fp, pc}
   1ab18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ab1c:	add	fp, sp, #24
   1ab20:	sub	sp, sp, #48	; 0x30
   1ab24:	movw	r8, #57776	; 0xe1b0
   1ab28:	mov	ip, r1
   1ab2c:	mov	lr, r0
   1ab30:	mov	r3, sp
   1ab34:	movt	r8, #2
   1ab38:	mov	r2, r3
   1ab3c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   1ab40:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1ab44:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1ab48:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1ab4c:	mov	r1, lr
   1ab50:	mov	r2, ip
   1ab54:	ldr	r0, [sp, #12]
   1ab58:	orr	r0, r0, #67108864	; 0x4000000
   1ab5c:	str	r0, [sp, #12]
   1ab60:	mov	r0, #0
   1ab64:	bl	1a750 <__assert_fail@plt+0x93d8>
   1ab68:	sub	sp, fp, #24
   1ab6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ab70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ab74:	add	fp, sp, #24
   1ab78:	sub	sp, sp, #96	; 0x60
   1ab7c:	vmov.i32	q8, #0	; 0x00000000
   1ab80:	mov	lr, sp
   1ab84:	mov	ip, r2
   1ab88:	cmp	r1, #10
   1ab8c:	add	r3, lr, #16
   1ab90:	mov	r2, lr
   1ab94:	vst1.64	{d16-d17}, [r3]
   1ab98:	mov	r3, #28
   1ab9c:	vst1.64	{d16-d17}, [r2], r3
   1aba0:	vst1.32	{d16-d17}, [r2]
   1aba4:	beq	1abe4 <__assert_fail@plt+0x986c>
   1aba8:	str	r1, [sp, #48]	; 0x30
   1abac:	add	r3, sp, #48	; 0x30
   1abb0:	ldm	lr!, {r2, r4, r5, r6, r7}
   1abb4:	add	r1, r3, #4
   1abb8:	stmia	r1!, {r2, r4, r5, r6, r7}
   1abbc:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1abc0:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1abc4:	mvn	r2, #0
   1abc8:	ldr	r1, [sp, #60]	; 0x3c
   1abcc:	orr	r1, r1, #67108864	; 0x4000000
   1abd0:	str	r1, [sp, #60]	; 0x3c
   1abd4:	mov	r1, ip
   1abd8:	bl	1a750 <__assert_fail@plt+0x93d8>
   1abdc:	sub	sp, fp, #24
   1abe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1abe4:	bl	1133c <abort@plt>
   1abe8:	push	{fp, lr}
   1abec:	mov	fp, sp
   1abf0:	sub	sp, sp, #8
   1abf4:	mvn	ip, #0
   1abf8:	str	ip, [sp]
   1abfc:	bl	1ac08 <__assert_fail@plt+0x9890>
   1ac00:	mov	sp, fp
   1ac04:	pop	{fp, pc}
   1ac08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ac0c:	add	fp, sp, #24
   1ac10:	sub	sp, sp, #48	; 0x30
   1ac14:	movw	ip, #57776	; 0xe1b0
   1ac18:	mov	lr, r3
   1ac1c:	mov	r3, sp
   1ac20:	cmp	r1, #0
   1ac24:	movt	ip, #2
   1ac28:	cmpne	r2, #0
   1ac2c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1ac30:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1ac34:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   1ac38:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1ac3c:	mov	r3, #10
   1ac40:	str	r3, [sp]
   1ac44:	bne	1ac4c <__assert_fail@plt+0x98d4>
   1ac48:	bl	1133c <abort@plt>
   1ac4c:	ldr	ip, [fp, #8]
   1ac50:	str	r2, [sp, #44]	; 0x2c
   1ac54:	str	r1, [sp, #40]	; 0x28
   1ac58:	mov	r3, sp
   1ac5c:	mov	r1, lr
   1ac60:	mov	r2, ip
   1ac64:	bl	1a750 <__assert_fail@plt+0x93d8>
   1ac68:	sub	sp, fp, #24
   1ac6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ac70:	push	{fp, lr}
   1ac74:	mov	fp, sp
   1ac78:	sub	sp, sp, #8
   1ac7c:	mov	r3, r2
   1ac80:	mov	r2, r1
   1ac84:	mov	r1, r0
   1ac88:	mvn	r0, #0
   1ac8c:	str	r0, [sp]
   1ac90:	mov	r0, #0
   1ac94:	bl	1ac08 <__assert_fail@plt+0x9890>
   1ac98:	mov	sp, fp
   1ac9c:	pop	{fp, pc}
   1aca0:	push	{fp, lr}
   1aca4:	mov	fp, sp
   1aca8:	sub	sp, sp, #8
   1acac:	mov	ip, r2
   1acb0:	mov	r2, r1
   1acb4:	mov	r1, r0
   1acb8:	str	r3, [sp]
   1acbc:	mov	r0, #0
   1acc0:	mov	r3, ip
   1acc4:	bl	1ac08 <__assert_fail@plt+0x9890>
   1acc8:	mov	sp, fp
   1accc:	pop	{fp, pc}
   1acd0:	movw	r3, #57648	; 0xe130
   1acd4:	movt	r3, #2
   1acd8:	b	1a750 <__assert_fail@plt+0x93d8>
   1acdc:	movw	r3, #57648	; 0xe130
   1ace0:	mov	r2, r1
   1ace4:	mov	r1, r0
   1ace8:	mov	r0, #0
   1acec:	movt	r3, #2
   1acf0:	b	1a750 <__assert_fail@plt+0x93d8>
   1acf4:	movw	r3, #57648	; 0xe130
   1acf8:	mvn	r2, #0
   1acfc:	movt	r3, #2
   1ad00:	b	1a750 <__assert_fail@plt+0x93d8>
   1ad04:	movw	r3, #57648	; 0xe130
   1ad08:	mov	r1, r0
   1ad0c:	mov	r0, #0
   1ad10:	mvn	r2, #0
   1ad14:	movt	r3, #2
   1ad18:	b	1a750 <__assert_fail@plt+0x93d8>
   1ad1c:	push	{r4, r5, fp, lr}
   1ad20:	add	fp, sp, #8
   1ad24:	mov	r5, r0
   1ad28:	mov	r4, r1
   1ad2c:	mov	r0, #0
   1ad30:	mov	r2, #5
   1ad34:	mov	r1, r5
   1ad38:	bl	11138 <dcgettext@plt>
   1ad3c:	cmp	r0, r5
   1ad40:	popne	{r4, r5, fp, pc}
   1ad44:	bl	1c274 <__assert_fail@plt+0xaefc>
   1ad48:	ldrb	r1, [r0]
   1ad4c:	and	r1, r1, #223	; 0xdf
   1ad50:	cmp	r1, #71	; 0x47
   1ad54:	beq	1adbc <__assert_fail@plt+0x9a44>
   1ad58:	cmp	r1, #85	; 0x55
   1ad5c:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ad60:	ldrb	r1, [r0, #1]
   1ad64:	and	r1, r1, #223	; 0xdf
   1ad68:	cmp	r1, #84	; 0x54
   1ad6c:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ad70:	ldrb	r1, [r0, #2]
   1ad74:	and	r1, r1, #223	; 0xdf
   1ad78:	cmp	r1, #70	; 0x46
   1ad7c:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ad80:	ldrb	r1, [r0, #3]
   1ad84:	cmp	r1, #45	; 0x2d
   1ad88:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ad8c:	ldrb	r1, [r0, #4]
   1ad90:	cmp	r1, #56	; 0x38
   1ad94:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ad98:	ldrb	r0, [r0, #5]
   1ad9c:	cmp	r0, #0
   1ada0:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ada4:	ldrb	r1, [r5]
   1ada8:	movw	r2, #54620	; 0xd55c
   1adac:	movw	r0, #54624	; 0xd560
   1adb0:	movt	r2, #1
   1adb4:	movt	r0, #1
   1adb8:	b	1ae44 <__assert_fail@plt+0x9acc>
   1adbc:	ldrb	r1, [r0, #1]
   1adc0:	and	r1, r1, #223	; 0xdf
   1adc4:	cmp	r1, #66	; 0x42
   1adc8:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1adcc:	ldrb	r1, [r0, #2]
   1add0:	cmp	r1, #49	; 0x31
   1add4:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1add8:	ldrb	r1, [r0, #3]
   1addc:	cmp	r1, #56	; 0x38
   1ade0:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ade4:	ldrb	r1, [r0, #4]
   1ade8:	cmp	r1, #48	; 0x30
   1adec:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1adf0:	ldrb	r1, [r0, #5]
   1adf4:	cmp	r1, #51	; 0x33
   1adf8:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1adfc:	ldrb	r1, [r0, #6]
   1ae00:	cmp	r1, #48	; 0x30
   1ae04:	bne	1ae14 <__assert_fail@plt+0x9a9c>
   1ae08:	ldrb	r0, [r0, #7]
   1ae0c:	cmp	r0, #0
   1ae10:	beq	1ae30 <__assert_fail@plt+0x9ab8>
   1ae14:	movw	r1, #54614	; 0xd556
   1ae18:	movw	r0, #54618	; 0xd55a
   1ae1c:	cmp	r4, #9
   1ae20:	movt	r1, #1
   1ae24:	movt	r0, #1
   1ae28:	moveq	r0, r1
   1ae2c:	pop	{r4, r5, fp, pc}
   1ae30:	ldrb	r1, [r5]
   1ae34:	movw	r2, #54628	; 0xd564
   1ae38:	movw	r0, #54632	; 0xd568
   1ae3c:	movt	r2, #1
   1ae40:	movt	r0, #1
   1ae44:	cmp	r1, #96	; 0x60
   1ae48:	moveq	r0, r2
   1ae4c:	pop	{r4, r5, fp, pc}
   1ae50:	mov	r1, #0
   1ae54:	mov	r2, #3
   1ae58:	b	1c09c <__assert_fail@plt+0xad24>
   1ae5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ae60:	add	fp, sp, #24
   1ae64:	sub	sp, sp, #32
   1ae68:	ldr	r6, [fp, #12]
   1ae6c:	ldr	r7, [fp, #8]
   1ae70:	mov	r4, r2
   1ae74:	mov	r8, r0
   1ae78:	cmp	r1, #0
   1ae7c:	beq	1aea4 <__assert_fail@plt+0x9b2c>
   1ae80:	movw	r2, #54720	; 0xd5c0
   1ae84:	mov	r5, r1
   1ae88:	str	r3, [sp, #4]
   1ae8c:	str	r4, [sp]
   1ae90:	mov	r0, r8
   1ae94:	mov	r1, #1
   1ae98:	movt	r2, #1
   1ae9c:	mov	r3, r5
   1aea0:	b	1aebc <__assert_fail@plt+0x9b44>
   1aea4:	movw	r2, #54732	; 0xd5cc
   1aea8:	str	r3, [sp]
   1aeac:	mov	r0, r8
   1aeb0:	mov	r1, #1
   1aeb4:	mov	r3, r4
   1aeb8:	movt	r2, #1
   1aebc:	bl	112a0 <__fprintf_chk@plt>
   1aec0:	movw	r1, #54739	; 0xd5d3
   1aec4:	mov	r0, #0
   1aec8:	mov	r2, #5
   1aecc:	movt	r1, #1
   1aed0:	bl	11138 <dcgettext@plt>
   1aed4:	movw	r2, #55457	; 0xd8a1
   1aed8:	mov	r3, r0
   1aedc:	movw	r0, #2022	; 0x7e6
   1aee0:	mov	r1, #1
   1aee4:	movt	r2, #1
   1aee8:	str	r0, [sp]
   1aeec:	mov	r0, r8
   1aef0:	bl	112a0 <__fprintf_chk@plt>
   1aef4:	movw	r4, #51818	; 0xca6a
   1aef8:	mov	r1, r8
   1aefc:	movt	r4, #1
   1af00:	mov	r0, r4
   1af04:	bl	110c0 <fputs_unlocked@plt>
   1af08:	movw	r1, #54743	; 0xd5d7
   1af0c:	mov	r0, #0
   1af10:	mov	r2, #5
   1af14:	movt	r1, #1
   1af18:	bl	11138 <dcgettext@plt>
   1af1c:	movw	r3, #54914	; 0xd682
   1af20:	mov	r2, r0
   1af24:	mov	r0, r8
   1af28:	mov	r1, #1
   1af2c:	movt	r3, #1
   1af30:	bl	112a0 <__fprintf_chk@plt>
   1af34:	mov	r0, r4
   1af38:	mov	r1, r8
   1af3c:	bl	110c0 <fputs_unlocked@plt>
   1af40:	cmp	r6, #9
   1af44:	bhi	1afa8 <__assert_fail@plt+0x9c30>
   1af48:	add	r0, pc, #0
   1af4c:	ldr	pc, [r0, r6, lsl #2]
   1af50:	andeq	fp, r1, r0, lsl #3
   1af54:	andeq	sl, r1, r8, ror pc
   1af58:			; <UNDEFINED> instruction: 0x0001afb4
   1af5c:	ldrdeq	sl, [r1], -ip
   1af60:	andeq	fp, r1, r4
   1af64:	andeq	fp, r1, ip, lsr #32
   1af68:	andeq	fp, r1, r4, asr r0
   1af6c:	andeq	fp, r1, ip, lsl #1
   1af70:	andeq	fp, r1, ip, lsr #2
   1af74:	ldrdeq	fp, [r1], -r4
   1af78:	movw	r1, #54948	; 0xd6a4
   1af7c:	mov	r0, #0
   1af80:	mov	r2, #5
   1af84:	movt	r1, #1
   1af88:	bl	11138 <dcgettext@plt>
   1af8c:	ldr	r3, [r7]
   1af90:	mov	r2, r0
   1af94:	mov	r0, r8
   1af98:	mov	r1, #1
   1af9c:	sub	sp, fp, #24
   1afa0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1afa4:	b	112a0 <__fprintf_chk@plt>
   1afa8:	movw	r1, #55267	; 0xd7e3
   1afac:	movt	r1, #1
   1afb0:	b	1b0dc <__assert_fail@plt+0x9d64>
   1afb4:	movw	r1, #54964	; 0xd6b4
   1afb8:	mov	r0, #0
   1afbc:	mov	r2, #5
   1afc0:	movt	r1, #1
   1afc4:	bl	11138 <dcgettext@plt>
   1afc8:	mov	r2, r0
   1afcc:	ldr	r3, [r7]
   1afd0:	ldr	r0, [r7, #4]
   1afd4:	str	r0, [sp]
   1afd8:	b	1b0c8 <__assert_fail@plt+0x9d50>
   1afdc:	movw	r1, #54987	; 0xd6cb
   1afe0:	mov	r0, #0
   1afe4:	mov	r2, #5
   1afe8:	movt	r1, #1
   1afec:	bl	11138 <dcgettext@plt>
   1aff0:	mov	r2, r0
   1aff4:	ldr	r3, [r7]
   1aff8:	ldmib	r7, {r0, r1}
   1affc:	stm	sp, {r0, r1}
   1b000:	b	1b0c8 <__assert_fail@plt+0x9d50>
   1b004:	movw	r1, #55015	; 0xd6e7
   1b008:	mov	r0, #0
   1b00c:	mov	r2, #5
   1b010:	movt	r1, #1
   1b014:	bl	11138 <dcgettext@plt>
   1b018:	ldr	r3, [r7]
   1b01c:	mov	r2, r0
   1b020:	ldmib	r7, {r0, r1, r7}
   1b024:	stm	sp, {r0, r1, r7}
   1b028:	b	1b0c8 <__assert_fail@plt+0x9d50>
   1b02c:	movw	r1, #55047	; 0xd707
   1b030:	mov	r0, #0
   1b034:	mov	r2, #5
   1b038:	movt	r1, #1
   1b03c:	bl	11138 <dcgettext@plt>
   1b040:	ldr	r3, [r7]
   1b044:	mov	r2, r0
   1b048:	ldmib	r7, {r0, r1, r6, r7}
   1b04c:	stm	sp, {r0, r1, r6, r7}
   1b050:	b	1b0c8 <__assert_fail@plt+0x9d50>
   1b054:	movw	r1, #55083	; 0xd72b
   1b058:	mov	r0, #0
   1b05c:	mov	r2, #5
   1b060:	movt	r1, #1
   1b064:	bl	11138 <dcgettext@plt>
   1b068:	mov	r2, r0
   1b06c:	ldr	r3, [r7]
   1b070:	ldmib	r7, {r0, r1, r6}
   1b074:	ldr	r5, [r7, #16]
   1b078:	ldr	r7, [r7, #20]
   1b07c:	stm	sp, {r0, r1, r6}
   1b080:	str	r5, [sp, #12]
   1b084:	str	r7, [sp, #16]
   1b088:	b	1b0c8 <__assert_fail@plt+0x9d50>
   1b08c:	movw	r1, #55123	; 0xd753
   1b090:	mov	r0, #0
   1b094:	mov	r2, #5
   1b098:	movt	r1, #1
   1b09c:	bl	11138 <dcgettext@plt>
   1b0a0:	mov	r2, r0
   1b0a4:	ldr	r3, [r7]
   1b0a8:	ldmib	r7, {r0, r1, r6}
   1b0ac:	ldr	r5, [r7, #16]
   1b0b0:	ldr	r4, [r7, #20]
   1b0b4:	ldr	r7, [r7, #24]
   1b0b8:	stm	sp, {r0, r1, r6}
   1b0bc:	str	r5, [sp, #12]
   1b0c0:	str	r4, [sp, #16]
   1b0c4:	str	r7, [sp, #20]
   1b0c8:	mov	r0, r8
   1b0cc:	mov	r1, #1
   1b0d0:	b	1b17c <__assert_fail@plt+0x9e04>
   1b0d4:	movw	r1, #55215	; 0xd7af
   1b0d8:	movt	r1, #1
   1b0dc:	mov	r0, #0
   1b0e0:	mov	r2, #5
   1b0e4:	bl	11138 <dcgettext@plt>
   1b0e8:	mov	ip, r0
   1b0ec:	ldr	r3, [r7]
   1b0f0:	ldr	r0, [r7, #4]
   1b0f4:	ldr	r1, [r7, #8]
   1b0f8:	ldr	r6, [r7, #12]
   1b0fc:	ldr	r5, [r7, #16]
   1b100:	ldr	r4, [r7, #20]
   1b104:	ldr	r2, [r7, #24]
   1b108:	ldr	lr, [r7, #28]
   1b10c:	ldr	r7, [r7, #32]
   1b110:	stm	sp, {r0, r1, r6}
   1b114:	str	r5, [sp, #12]
   1b118:	str	r4, [sp, #16]
   1b11c:	str	r2, [sp, #20]
   1b120:	str	lr, [sp, #24]
   1b124:	str	r7, [sp, #28]
   1b128:	b	1b170 <__assert_fail@plt+0x9df8>
   1b12c:	movw	r1, #55167	; 0xd77f
   1b130:	mov	r0, #0
   1b134:	mov	r2, #5
   1b138:	movt	r1, #1
   1b13c:	bl	11138 <dcgettext@plt>
   1b140:	mov	ip, r0
   1b144:	ldr	r3, [r7]
   1b148:	ldmib	r7, {r0, r1, r6}
   1b14c:	ldr	r5, [r7, #16]
   1b150:	ldr	r4, [r7, #20]
   1b154:	ldr	r2, [r7, #24]
   1b158:	ldr	r7, [r7, #28]
   1b15c:	stm	sp, {r0, r1, r6}
   1b160:	str	r5, [sp, #12]
   1b164:	str	r4, [sp, #16]
   1b168:	str	r2, [sp, #20]
   1b16c:	str	r7, [sp, #24]
   1b170:	mov	r0, r8
   1b174:	mov	r1, #1
   1b178:	mov	r2, ip
   1b17c:	bl	112a0 <__fprintf_chk@plt>
   1b180:	sub	sp, fp, #24
   1b184:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b188:	push	{r4, sl, fp, lr}
   1b18c:	add	fp, sp, #8
   1b190:	sub	sp, sp, #8
   1b194:	ldr	ip, [fp, #8]
   1b198:	mov	lr, #0
   1b19c:	ldr	r4, [ip, lr, lsl #2]
   1b1a0:	add	lr, lr, #1
   1b1a4:	cmp	r4, #0
   1b1a8:	bne	1b19c <__assert_fail@plt+0x9e24>
   1b1ac:	sub	r4, lr, #1
   1b1b0:	str	ip, [sp]
   1b1b4:	str	r4, [sp, #4]
   1b1b8:	bl	1ae5c <__assert_fail@plt+0x9ae4>
   1b1bc:	sub	sp, fp, #8
   1b1c0:	pop	{r4, sl, fp, pc}
   1b1c4:	push	{r4, r5, fp, lr}
   1b1c8:	add	fp, sp, #8
   1b1cc:	sub	sp, sp, #48	; 0x30
   1b1d0:	ldr	r4, [fp, #8]
   1b1d4:	mov	ip, #0
   1b1d8:	add	lr, sp, #8
   1b1dc:	ldr	r5, [r4]
   1b1e0:	cmp	r5, #0
   1b1e4:	str	r5, [lr, ip, lsl #2]
   1b1e8:	beq	1b200 <__assert_fail@plt+0x9e88>
   1b1ec:	add	ip, ip, #1
   1b1f0:	add	r4, r4, #4
   1b1f4:	cmp	ip, #10
   1b1f8:	bne	1b1dc <__assert_fail@plt+0x9e64>
   1b1fc:	mov	ip, #10
   1b200:	str	lr, [sp]
   1b204:	str	ip, [sp, #4]
   1b208:	bl	1ae5c <__assert_fail@plt+0x9ae4>
   1b20c:	sub	sp, fp, #8
   1b210:	pop	{r4, r5, fp, pc}
   1b214:	push	{fp, lr}
   1b218:	mov	fp, sp
   1b21c:	sub	sp, sp, #8
   1b220:	add	ip, fp, #8
   1b224:	str	ip, [sp, #4]
   1b228:	str	ip, [sp]
   1b22c:	bl	1b1c4 <__assert_fail@plt+0x9e4c>
   1b230:	mov	sp, fp
   1b234:	pop	{fp, pc}
   1b238:	push	{fp, lr}
   1b23c:	mov	fp, sp
   1b240:	movw	r0, #57724	; 0xe17c
   1b244:	movt	r0, #2
   1b248:	ldr	r1, [r0]
   1b24c:	movw	r0, #51818	; 0xca6a
   1b250:	movt	r0, #1
   1b254:	bl	110c0 <fputs_unlocked@plt>
   1b258:	movw	r1, #55327	; 0xd81f
   1b25c:	mov	r0, #0
   1b260:	mov	r2, #5
   1b264:	movt	r1, #1
   1b268:	bl	11138 <dcgettext@plt>
   1b26c:	movw	r2, #55347	; 0xd833
   1b270:	mov	r1, r0
   1b274:	mov	r0, #1
   1b278:	movt	r2, #1
   1b27c:	bl	1127c <__printf_chk@plt>
   1b280:	movw	r1, #55369	; 0xd849
   1b284:	mov	r0, #0
   1b288:	mov	r2, #5
   1b28c:	movt	r1, #1
   1b290:	bl	11138 <dcgettext@plt>
   1b294:	movw	r2, #52407	; 0xccb7
   1b298:	movw	r3, #53302	; 0xd036
   1b29c:	mov	r1, r0
   1b2a0:	mov	r0, #1
   1b2a4:	movt	r2, #1
   1b2a8:	movt	r3, #1
   1b2ac:	bl	1127c <__printf_chk@plt>
   1b2b0:	movw	r1, #55389	; 0xd85d
   1b2b4:	mov	r0, #0
   1b2b8:	mov	r2, #5
   1b2bc:	movt	r1, #1
   1b2c0:	bl	11138 <dcgettext@plt>
   1b2c4:	movw	r2, #55428	; 0xd884
   1b2c8:	mov	r1, r0
   1b2cc:	mov	r0, #1
   1b2d0:	movt	r2, #1
   1b2d4:	pop	{fp, lr}
   1b2d8:	b	1127c <__printf_chk@plt>
   1b2dc:	b	1b2e0 <__assert_fail@plt+0x9f68>
   1b2e0:	push	{r4, r5, r6, sl, fp, lr}
   1b2e4:	add	fp, sp, #16
   1b2e8:	mov	r4, r2
   1b2ec:	mov	r5, r1
   1b2f0:	mov	r6, r0
   1b2f4:	bl	1c310 <__assert_fail@plt+0xaf98>
   1b2f8:	cmp	r0, #0
   1b2fc:	popne	{r4, r5, r6, sl, fp, pc}
   1b300:	cmp	r6, #0
   1b304:	beq	1b318 <__assert_fail@plt+0x9fa0>
   1b308:	cmp	r5, #0
   1b30c:	cmpne	r4, #0
   1b310:	bne	1b318 <__assert_fail@plt+0x9fa0>
   1b314:	pop	{r4, r5, r6, sl, fp, pc}
   1b318:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b31c:	push	{fp, lr}
   1b320:	mov	fp, sp
   1b324:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b328:	cmp	r0, #0
   1b32c:	popne	{fp, pc}
   1b330:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b334:	push	{fp, lr}
   1b338:	mov	fp, sp
   1b33c:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b340:	cmp	r0, #0
   1b344:	popne	{fp, pc}
   1b348:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b34c:	push	{fp, lr}
   1b350:	mov	fp, sp
   1b354:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b358:	cmp	r0, #0
   1b35c:	popne	{fp, pc}
   1b360:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b364:	push	{r4, r5, fp, lr}
   1b368:	add	fp, sp, #8
   1b36c:	mov	r4, r1
   1b370:	mov	r5, r0
   1b374:	bl	1bfcc <__assert_fail@plt+0xac54>
   1b378:	cmp	r0, #0
   1b37c:	popne	{r4, r5, fp, pc}
   1b380:	cmp	r5, #0
   1b384:	beq	1b394 <__assert_fail@plt+0xa01c>
   1b388:	cmp	r4, #0
   1b38c:	bne	1b394 <__assert_fail@plt+0xa01c>
   1b390:	pop	{r4, r5, fp, pc}
   1b394:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b398:	push	{fp, lr}
   1b39c:	mov	fp, sp
   1b3a0:	cmp	r1, #0
   1b3a4:	orreq	r1, r1, #1
   1b3a8:	bl	1bfcc <__assert_fail@plt+0xac54>
   1b3ac:	cmp	r0, #0
   1b3b0:	popne	{fp, pc}
   1b3b4:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b3b8:	push	{fp, lr}
   1b3bc:	mov	fp, sp
   1b3c0:	clz	r3, r2
   1b3c4:	lsr	ip, r3, #5
   1b3c8:	clz	r3, r1
   1b3cc:	lsr	r3, r3, #5
   1b3d0:	orrs	r3, r3, ip
   1b3d4:	movwne	r1, #1
   1b3d8:	movwne	r2, #1
   1b3dc:	bl	1c310 <__assert_fail@plt+0xaf98>
   1b3e0:	cmp	r0, #0
   1b3e4:	popne	{fp, pc}
   1b3e8:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b3ec:	push	{fp, lr}
   1b3f0:	mov	fp, sp
   1b3f4:	mov	r2, r1
   1b3f8:	mov	r1, r0
   1b3fc:	mov	r0, #0
   1b400:	bl	1c310 <__assert_fail@plt+0xaf98>
   1b404:	cmp	r0, #0
   1b408:	popne	{fp, pc}
   1b40c:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b410:	mov	r2, r1
   1b414:	mov	r1, r0
   1b418:	mov	r0, #0
   1b41c:	b	1b3b8 <__assert_fail@plt+0xa040>
   1b420:	mov	r2, #1
   1b424:	b	1b428 <__assert_fail@plt+0xa0b0>
   1b428:	push	{r4, r5, fp, lr}
   1b42c:	add	fp, sp, #8
   1b430:	ldr	r5, [r1]
   1b434:	mov	r4, r1
   1b438:	cmp	r0, #0
   1b43c:	beq	1b454 <__assert_fail@plt+0xa0dc>
   1b440:	mov	r1, #1
   1b444:	add	r1, r1, r5, lsr #1
   1b448:	adds	r5, r5, r1
   1b44c:	bcc	1b46c <__assert_fail@plt+0xa0f4>
   1b450:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b454:	cmp	r5, #0
   1b458:	bne	1b46c <__assert_fail@plt+0xa0f4>
   1b45c:	mov	r1, #64	; 0x40
   1b460:	cmp	r2, #64	; 0x40
   1b464:	udiv	r5, r1, r2
   1b468:	addhi	r5, r5, #1
   1b46c:	mov	r1, r5
   1b470:	bl	1b2e0 <__assert_fail@plt+0x9f68>
   1b474:	str	r5, [r4]
   1b478:	pop	{r4, r5, fp, pc}
   1b47c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b480:	add	fp, sp, #24
   1b484:	ldr	r6, [r1]
   1b488:	mov	r8, r1
   1b48c:	ldr	r4, [fp, #8]
   1b490:	add	r1, r6, r6, asr #1
   1b494:	cmp	r1, r6
   1b498:	mvnvs	r1, #-2147483648	; 0x80000000
   1b49c:	cmp	r1, r3
   1b4a0:	mov	r5, r1
   1b4a4:	movgt	r5, r3
   1b4a8:	cmn	r3, #1
   1b4ac:	movle	r5, r1
   1b4b0:	cmn	r4, #1
   1b4b4:	ble	1b4d4 <__assert_fail@plt+0xa15c>
   1b4b8:	cmp	r4, #0
   1b4bc:	beq	1b528 <__assert_fail@plt+0xa1b0>
   1b4c0:	cmn	r5, #1
   1b4c4:	ble	1b4fc <__assert_fail@plt+0xa184>
   1b4c8:	mvn	r7, #-2147483648	; 0x80000000
   1b4cc:	udiv	r1, r7, r4
   1b4d0:	b	1b4f0 <__assert_fail@plt+0xa178>
   1b4d4:	cmn	r5, #1
   1b4d8:	ble	1b518 <__assert_fail@plt+0xa1a0>
   1b4dc:	cmn	r4, #1
   1b4e0:	beq	1b528 <__assert_fail@plt+0xa1b0>
   1b4e4:	mov	r1, #-2147483648	; 0x80000000
   1b4e8:	mvn	r7, #-2147483648	; 0x80000000
   1b4ec:	sdiv	r1, r1, r4
   1b4f0:	cmp	r1, r5
   1b4f4:	bge	1b528 <__assert_fail@plt+0xa1b0>
   1b4f8:	b	1b538 <__assert_fail@plt+0xa1c0>
   1b4fc:	beq	1b528 <__assert_fail@plt+0xa1b0>
   1b500:	mov	r1, #-2147483648	; 0x80000000
   1b504:	mvn	r7, #-2147483648	; 0x80000000
   1b508:	sdiv	r1, r1, r5
   1b50c:	cmp	r1, r4
   1b510:	bge	1b528 <__assert_fail@plt+0xa1b0>
   1b514:	b	1b538 <__assert_fail@plt+0xa1c0>
   1b518:	mvn	r7, #-2147483648	; 0x80000000
   1b51c:	sdiv	r1, r7, r4
   1b520:	cmp	r5, r1
   1b524:	blt	1b538 <__assert_fail@plt+0xa1c0>
   1b528:	mul	r1, r5, r4
   1b52c:	mov	r7, #64	; 0x40
   1b530:	cmp	r1, #63	; 0x3f
   1b534:	bgt	1b540 <__assert_fail@plt+0xa1c8>
   1b538:	sdiv	r5, r7, r4
   1b53c:	mul	r1, r5, r4
   1b540:	cmp	r0, #0
   1b544:	moveq	r7, #0
   1b548:	streq	r7, [r8]
   1b54c:	sub	r7, r5, r6
   1b550:	cmp	r7, r2
   1b554:	bge	1b5f8 <__assert_fail@plt+0xa280>
   1b558:	add	r5, r6, r2
   1b55c:	mov	r2, #0
   1b560:	mov	r1, #0
   1b564:	cmp	r5, r3
   1b568:	movwgt	r2, #1
   1b56c:	cmn	r3, #1
   1b570:	movwgt	r1, #1
   1b574:	cmp	r5, r6
   1b578:	bvs	1b5e0 <__assert_fail@plt+0xa268>
   1b57c:	ands	r1, r1, r2
   1b580:	bne	1b5e0 <__assert_fail@plt+0xa268>
   1b584:	cmn	r4, #1
   1b588:	ble	1b5a8 <__assert_fail@plt+0xa230>
   1b58c:	cmp	r4, #0
   1b590:	beq	1b5f4 <__assert_fail@plt+0xa27c>
   1b594:	cmn	r5, #1
   1b598:	ble	1b5cc <__assert_fail@plt+0xa254>
   1b59c:	mvn	r1, #-2147483648	; 0x80000000
   1b5a0:	udiv	r1, r1, r4
   1b5a4:	b	1b5c0 <__assert_fail@plt+0xa248>
   1b5a8:	cmn	r5, #1
   1b5ac:	ble	1b5e4 <__assert_fail@plt+0xa26c>
   1b5b0:	cmn	r4, #1
   1b5b4:	beq	1b5f4 <__assert_fail@plt+0xa27c>
   1b5b8:	mov	r1, #-2147483648	; 0x80000000
   1b5bc:	sdiv	r1, r1, r4
   1b5c0:	cmp	r1, r5
   1b5c4:	bge	1b5f4 <__assert_fail@plt+0xa27c>
   1b5c8:	b	1b5e0 <__assert_fail@plt+0xa268>
   1b5cc:	beq	1b5f4 <__assert_fail@plt+0xa27c>
   1b5d0:	mov	r1, #-2147483648	; 0x80000000
   1b5d4:	sdiv	r1, r1, r5
   1b5d8:	cmp	r1, r4
   1b5dc:	bge	1b5f4 <__assert_fail@plt+0xa27c>
   1b5e0:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b5e4:	mvn	r1, #-2147483648	; 0x80000000
   1b5e8:	sdiv	r1, r1, r4
   1b5ec:	cmp	r5, r1
   1b5f0:	blt	1b5e0 <__assert_fail@plt+0xa268>
   1b5f4:	mul	r1, r5, r4
   1b5f8:	bl	1b364 <__assert_fail@plt+0x9fec>
   1b5fc:	str	r5, [r8]
   1b600:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b604:	push	{fp, lr}
   1b608:	mov	fp, sp
   1b60c:	mov	r1, #1
   1b610:	bl	1bf48 <__assert_fail@plt+0xabd0>
   1b614:	cmp	r0, #0
   1b618:	popne	{fp, pc}
   1b61c:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b620:	push	{fp, lr}
   1b624:	mov	fp, sp
   1b628:	bl	1bf48 <__assert_fail@plt+0xabd0>
   1b62c:	cmp	r0, #0
   1b630:	popne	{fp, pc}
   1b634:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b638:	push	{fp, lr}
   1b63c:	mov	fp, sp
   1b640:	mov	r1, #1
   1b644:	bl	1bf48 <__assert_fail@plt+0xabd0>
   1b648:	cmp	r0, #0
   1b64c:	popne	{fp, pc}
   1b650:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b654:	push	{fp, lr}
   1b658:	mov	fp, sp
   1b65c:	bl	1bf48 <__assert_fail@plt+0xabd0>
   1b660:	cmp	r0, #0
   1b664:	popne	{fp, pc}
   1b668:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b66c:	push	{r4, r5, fp, lr}
   1b670:	add	fp, sp, #8
   1b674:	mov	r5, r0
   1b678:	mov	r0, r1
   1b67c:	mov	r4, r1
   1b680:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b684:	cmp	r0, #0
   1b688:	beq	1b69c <__assert_fail@plt+0xa324>
   1b68c:	mov	r1, r5
   1b690:	mov	r2, r4
   1b694:	pop	{r4, r5, fp, lr}
   1b698:	b	11120 <memcpy@plt>
   1b69c:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b6a0:	push	{r4, r5, fp, lr}
   1b6a4:	add	fp, sp, #8
   1b6a8:	mov	r5, r0
   1b6ac:	mov	r0, r1
   1b6b0:	mov	r4, r1
   1b6b4:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b6b8:	cmp	r0, #0
   1b6bc:	beq	1b6d0 <__assert_fail@plt+0xa358>
   1b6c0:	mov	r1, r5
   1b6c4:	mov	r2, r4
   1b6c8:	pop	{r4, r5, fp, lr}
   1b6cc:	b	11120 <memcpy@plt>
   1b6d0:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b6d4:	push	{r4, r5, fp, lr}
   1b6d8:	add	fp, sp, #8
   1b6dc:	mov	r5, r0
   1b6e0:	add	r0, r1, #1
   1b6e4:	mov	r4, r1
   1b6e8:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b6ec:	cmp	r0, #0
   1b6f0:	beq	1b70c <__assert_fail@plt+0xa394>
   1b6f4:	mov	r1, #0
   1b6f8:	mov	r2, r4
   1b6fc:	strb	r1, [r0, r4]
   1b700:	mov	r1, r5
   1b704:	pop	{r4, r5, fp, lr}
   1b708:	b	11120 <memcpy@plt>
   1b70c:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b710:	push	{r4, r5, fp, lr}
   1b714:	add	fp, sp, #8
   1b718:	mov	r4, r0
   1b71c:	bl	11234 <strlen@plt>
   1b720:	add	r5, r0, #1
   1b724:	mov	r0, r5
   1b728:	bl	1bf9c <__assert_fail@plt+0xac24>
   1b72c:	cmp	r0, #0
   1b730:	beq	1b744 <__assert_fail@plt+0xa3cc>
   1b734:	mov	r1, r4
   1b738:	mov	r2, r5
   1b73c:	pop	{r4, r5, fp, lr}
   1b740:	b	11120 <memcpy@plt>
   1b744:	bl	1b748 <__assert_fail@plt+0xa3d0>
   1b748:	push	{fp, lr}
   1b74c:	mov	fp, sp
   1b750:	movw	r0, #57624	; 0xe118
   1b754:	movw	r1, #55504	; 0xd8d0
   1b758:	mov	r2, #5
   1b75c:	movt	r0, #2
   1b760:	movt	r1, #1
   1b764:	ldr	r4, [r0]
   1b768:	mov	r0, #0
   1b76c:	bl	11138 <dcgettext@plt>
   1b770:	movw	r2, #52374	; 0xcc96
   1b774:	mov	r3, r0
   1b778:	mov	r0, r4
   1b77c:	mov	r1, #0
   1b780:	movt	r2, #1
   1b784:	bl	111b0 <error@plt>
   1b788:	bl	1133c <abort@plt>
   1b78c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b790:	add	fp, sp, #24
   1b794:	sub	sp, sp, #16
   1b798:	mov	r8, r0
   1b79c:	ldr	r0, [fp, #16]
   1b7a0:	mov	r5, r3
   1b7a4:	mov	r6, r2
   1b7a8:	mov	r2, r1
   1b7ac:	add	r3, sp, #8
   1b7b0:	mov	r1, #0
   1b7b4:	str	r0, [sp]
   1b7b8:	mov	r0, r8
   1b7bc:	bl	1b88c <__assert_fail@plt+0xa514>
   1b7c0:	cmp	r0, #0
   1b7c4:	bne	1b858 <__assert_fail@plt+0xa4e0>
   1b7c8:	ldr	r4, [sp, #8]
   1b7cc:	ldr	r7, [sp, #12]
   1b7d0:	subs	r0, r4, r6
   1b7d4:	sbcs	r0, r7, r5
   1b7d8:	bcc	1b7fc <__assert_fail@plt+0xa484>
   1b7dc:	ldr	r1, [fp, #8]
   1b7e0:	ldr	r0, [fp, #12]
   1b7e4:	subs	r1, r1, r4
   1b7e8:	sbcs	r0, r0, r7
   1b7ec:	movcs	r0, r4
   1b7f0:	movcs	r1, r7
   1b7f4:	subcs	sp, fp, #24
   1b7f8:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b7fc:	bl	1124c <__errno_location@plt>
   1b800:	subs	r1, r4, #1073741824	; 0x40000000
   1b804:	sbcs	r1, r7, #0
   1b808:	bcc	1b814 <__assert_fail@plt+0xa49c>
   1b80c:	mov	r1, #75	; 0x4b
   1b810:	b	1b818 <__assert_fail@plt+0xa4a0>
   1b814:	mov	r1, #34	; 0x22
   1b818:	str	r1, [r0]
   1b81c:	ldr	r6, [r0]
   1b820:	ldr	r4, [fp, #24]
   1b824:	ldr	r5, [fp, #20]
   1b828:	mov	r0, r8
   1b82c:	bl	1ad04 <__assert_fail@plt+0x998c>
   1b830:	subs	r1, r6, #22
   1b834:	movw	r2, #54463	; 0xd4bf
   1b838:	str	r0, [sp]
   1b83c:	mov	r3, r5
   1b840:	movne	r1, r6
   1b844:	cmp	r4, #0
   1b848:	movt	r2, #1
   1b84c:	movweq	r4, #1
   1b850:	mov	r0, r4
   1b854:	bl	111b0 <error@plt>
   1b858:	cmp	r0, #1
   1b85c:	beq	1b874 <__assert_fail@plt+0xa4fc>
   1b860:	cmp	r0, #3
   1b864:	bne	1b87c <__assert_fail@plt+0xa504>
   1b868:	bl	1124c <__errno_location@plt>
   1b86c:	mov	r1, #0
   1b870:	b	1b818 <__assert_fail@plt+0xa4a0>
   1b874:	bl	1124c <__errno_location@plt>
   1b878:	b	1b80c <__assert_fail@plt+0xa494>
   1b87c:	bl	1124c <__errno_location@plt>
   1b880:	b	1b81c <__assert_fail@plt+0xa4a4>
   1b884:	mov	r1, #10
   1b888:	b	1b78c <__assert_fail@plt+0xa414>
   1b88c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b890:	add	fp, sp, #28
   1b894:	sub	sp, sp, #20
   1b898:	cmp	r2, #37	; 0x25
   1b89c:	bcs	1bf28 <__assert_fail@plt+0xabb0>
   1b8a0:	mov	r8, r3
   1b8a4:	mov	r5, r2
   1b8a8:	mov	r6, r1
   1b8ac:	mov	r4, r0
   1b8b0:	bl	1124c <__errno_location@plt>
   1b8b4:	mov	r7, r0
   1b8b8:	mov	r0, #0
   1b8bc:	str	r0, [r7]
   1b8c0:	bl	11204 <__ctype_b_loc@plt>
   1b8c4:	ldr	r1, [r0]
   1b8c8:	mov	r2, r4
   1b8cc:	ldrb	r0, [r2], #1
   1b8d0:	add	r3, r1, r0, lsl #1
   1b8d4:	ldrb	r3, [r3, #1]
   1b8d8:	tst	r3, #32
   1b8dc:	bne	1b8cc <__assert_fail@plt+0xa554>
   1b8e0:	cmp	r6, #0
   1b8e4:	add	sl, sp, #16
   1b8e8:	movne	sl, r6
   1b8ec:	mov	r6, #4
   1b8f0:	cmp	r0, #45	; 0x2d
   1b8f4:	beq	1bf1c <__assert_fail@plt+0xaba4>
   1b8f8:	mov	r0, r4
   1b8fc:	mov	r1, sl
   1b900:	mov	r2, r5
   1b904:	str	r8, [sp, #12]
   1b908:	bl	11294 <strtoumax@plt>
   1b90c:	ldr	r5, [sl]
   1b910:	cmp	r5, r4
   1b914:	beq	1b93c <__assert_fail@plt+0xa5c4>
   1b918:	mov	r8, r0
   1b91c:	ldr	r0, [r7]
   1b920:	mov	r9, r1
   1b924:	cmp	r0, #0
   1b928:	beq	1b970 <__assert_fail@plt+0xa5f8>
   1b92c:	cmp	r0, #34	; 0x22
   1b930:	bne	1bf1c <__assert_fail@plt+0xaba4>
   1b934:	mov	r6, #1
   1b938:	b	1b974 <__assert_fail@plt+0xa5fc>
   1b93c:	ldr	r0, [fp, #8]
   1b940:	cmp	r0, #0
   1b944:	beq	1bf1c <__assert_fail@plt+0xaba4>
   1b948:	ldrb	r1, [r4]
   1b94c:	cmp	r1, #0
   1b950:	beq	1bf1c <__assert_fail@plt+0xaba4>
   1b954:	bl	11240 <strchr@plt>
   1b958:	cmp	r0, #0
   1b95c:	beq	1bf1c <__assert_fail@plt+0xaba4>
   1b960:	mov	r6, #0
   1b964:	mov	r8, #1
   1b968:	mov	r9, #0
   1b96c:	b	1b980 <__assert_fail@plt+0xa608>
   1b970:	mov	r6, r0
   1b974:	ldr	r0, [fp, #8]
   1b978:	cmp	r0, #0
   1b97c:	beq	1bf14 <__assert_fail@plt+0xab9c>
   1b980:	ldrb	r7, [r5]
   1b984:	cmp	r7, #0
   1b988:	beq	1bf14 <__assert_fail@plt+0xab9c>
   1b98c:	ldr	r0, [fp, #8]
   1b990:	mov	r1, r7
   1b994:	bl	11240 <strchr@plt>
   1b998:	cmp	r0, #0
   1b99c:	beq	1baa4 <__assert_fail@plt+0xa72c>
   1b9a0:	sub	r0, r7, #69	; 0x45
   1b9a4:	mov	r1, #1
   1b9a8:	mov	r3, #0
   1b9ac:	mov	r4, #1024	; 0x400
   1b9b0:	cmp	r0, #21
   1b9b4:	str	r1, [sp, #8]
   1b9b8:	bhi	1b9d0 <__assert_fail@plt+0xa658>
   1b9bc:	movw	r2, #35141	; 0x8945
   1b9c0:	mov	r1, #1
   1b9c4:	movt	r2, #48	; 0x30
   1b9c8:	tst	r2, r1, lsl r0
   1b9cc:	bne	1b9ec <__assert_fail@plt+0xa674>
   1b9d0:	sub	r0, r7, #103	; 0x67
   1b9d4:	cmp	r0, #13
   1b9d8:	bhi	1ba20 <__assert_fail@plt+0xa6a8>
   1b9dc:	mov	r1, #1
   1b9e0:	movw	r2, #8273	; 0x2051
   1b9e4:	tst	r2, r1, lsl r0
   1b9e8:	beq	1ba20 <__assert_fail@plt+0xa6a8>
   1b9ec:	ldr	r0, [fp, #8]
   1b9f0:	mov	r1, #48	; 0x30
   1b9f4:	bl	11240 <strchr@plt>
   1b9f8:	cmp	r0, #0
   1b9fc:	beq	1ba1c <__assert_fail@plt+0xa6a4>
   1ba00:	ldrb	r0, [r5, #1]
   1ba04:	cmp	r0, #66	; 0x42
   1ba08:	cmpne	r0, #68	; 0x44
   1ba0c:	bne	1bb34 <__assert_fail@plt+0xa7bc>
   1ba10:	mov	r4, #1000	; 0x3e8
   1ba14:	mov	r0, #2
   1ba18:	str	r0, [sp, #8]
   1ba1c:	mov	r3, #0
   1ba20:	cmp	r7, #89	; 0x59
   1ba24:	stm	sp, {r5, r6}
   1ba28:	bgt	1bab0 <__assert_fail@plt+0xa738>
   1ba2c:	sub	r0, r7, #66	; 0x42
   1ba30:	cmp	r0, #14
   1ba34:	bhi	1bb58 <__assert_fail@plt+0xa7e0>
   1ba38:	add	r1, pc, #0
   1ba3c:	ldr	pc, [r1, r0, lsl #2]
   1ba40:	andeq	fp, r1, ip, ror sl
   1ba44:	andeq	fp, r1, r8, lsl #28
   1ba48:	andeq	fp, r1, r8, lsl #28
   1ba4c:	andeq	fp, r1, ip, lsl lr
   1ba50:	andeq	fp, r1, r8, lsl #28
   1ba54:	andeq	fp, r1, ip, lsl #24
   1ba58:	andeq	fp, r1, r8, lsl #28
   1ba5c:	andeq	fp, r1, r8, lsl #28
   1ba60:	andeq	fp, r1, r8, lsl #28
   1ba64:	andeq	fp, r1, r8, ror ip
   1ba68:	andeq	fp, r1, r8, lsl #28
   1ba6c:			; <UNDEFINED> instruction: 0x0001bcbc
   1ba70:	andeq	fp, r1, r8, lsl #28
   1ba74:	andeq	fp, r1, r8, lsl #28
   1ba78:	andeq	fp, r1, r8, lsl #29
   1ba7c:	mov	r1, #0
   1ba80:	lsl	r3, r9, #10
   1ba84:	lsl	r0, r8, #10
   1ba88:	lsr	r2, r9, #22
   1ba8c:	cmp	r1, r9, lsr #22
   1ba90:	orr	r3, r3, r8, lsr #22
   1ba94:	mvnne	r0, #0
   1ba98:	movwne	r2, #1
   1ba9c:	cmp	r1, r9, lsr #22
   1baa0:	b	1bb24 <__assert_fail@plt+0xa7ac>
   1baa4:	ldr	r0, [sp, #12]
   1baa8:	orr	r6, r6, #2
   1baac:	b	1bf18 <__assert_fail@plt+0xaba0>
   1bab0:	cmp	r7, #115	; 0x73
   1bab4:	bgt	1bbd4 <__assert_fail@plt+0xa85c>
   1bab8:	sub	r0, r7, #98	; 0x62
   1babc:	cmp	r0, #11
   1bac0:	bhi	1bd94 <__assert_fail@plt+0xaa1c>
   1bac4:	add	r1, pc, #4
   1bac8:	mov	r2, #0
   1bacc:	ldr	pc, [r1, r0, lsl #2]
   1bad0:	andeq	fp, r1, r0, lsl #22
   1bad4:	strdeq	fp, [r1], -r0
   1bad8:	andeq	fp, r1, r8, lsl #28
   1badc:	andeq	fp, r1, r8, lsl #28
   1bae0:	andeq	fp, r1, r8, lsl #28
   1bae4:	andeq	fp, r1, ip, lsl #24
   1bae8:	andeq	fp, r1, r8, lsl #28
   1baec:	andeq	fp, r1, r8, lsl #28
   1baf0:	andeq	fp, r1, r8, lsl #28
   1baf4:	andeq	fp, r1, r8, ror ip
   1baf8:	andeq	fp, r1, r8, lsl #28
   1bafc:			; <UNDEFINED> instruction: 0x0001bcbc
   1bb00:	mov	r1, #0
   1bb04:	lsl	r3, r9, #9
   1bb08:	lsl	r0, r8, #9
   1bb0c:	lsr	r2, r9, #23
   1bb10:	cmp	r1, r9, lsr #23
   1bb14:	orr	r3, r3, r8, lsr #23
   1bb18:	mvnne	r0, #0
   1bb1c:	movwne	r2, #1
   1bb20:	cmp	r1, r9, lsr #23
   1bb24:	mvnne	r3, #0
   1bb28:	mov	r8, r0
   1bb2c:	mov	r9, r3
   1bb30:	b	1bef0 <__assert_fail@plt+0xab78>
   1bb34:	cmp	r0, #105	; 0x69
   1bb38:	mov	r3, #0
   1bb3c:	bne	1ba20 <__assert_fail@plt+0xa6a8>
   1bb40:	ldrb	r0, [r5, #2]
   1bb44:	mov	r1, #1
   1bb48:	cmp	r0, #66	; 0x42
   1bb4c:	movweq	r1, #3
   1bb50:	str	r1, [sp, #8]
   1bb54:	b	1ba20 <__assert_fail@plt+0xa6a8>
   1bb58:	cmp	r7, #84	; 0x54
   1bb5c:	beq	1bd28 <__assert_fail@plt+0xa9b0>
   1bb60:	cmp	r7, #89	; 0x59
   1bb64:	bne	1be08 <__assert_fail@plt+0xaa90>
   1bb68:	mvn	r0, #0
   1bb6c:	mvn	r1, #0
   1bb70:	mov	r2, r4
   1bb74:	mov	r5, r3
   1bb78:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bb7c:	mov	ip, r5
   1bb80:	mvn	lr, #0
   1bb84:	mov	r2, #0
   1bb88:	mvn	r3, #7
   1bb8c:	mov	r5, r8
   1bb90:	mov	r7, r9
   1bb94:	umull	r8, r6, r5, r4
   1bb98:	mvn	r9, #0
   1bb9c:	mla	r6, r5, ip, r6
   1bba0:	subs	r5, r0, r5
   1bba4:	sbcs	r5, r1, r7
   1bba8:	mov	r5, #0
   1bbac:	movwcc	r5, #1
   1bbb0:	cmp	r5, #0
   1bbb4:	mlaeq	r9, r7, r4, r6
   1bbb8:	movne	r8, lr
   1bbbc:	orrne	r2, r2, #1
   1bbc0:	adds	r3, r3, #1
   1bbc4:	mov	r5, r8
   1bbc8:	mov	r7, r9
   1bbcc:	bcc	1bb94 <__assert_fail@plt+0xa81c>
   1bbd0:	b	1bef0 <__assert_fail@plt+0xab78>
   1bbd4:	cmp	r7, #116	; 0x74
   1bbd8:	beq	1bd28 <__assert_fail@plt+0xa9b0>
   1bbdc:	cmp	r7, #119	; 0x77
   1bbe0:	bne	1be08 <__assert_fail@plt+0xaa90>
   1bbe4:	lsl	r1, r9, #1
   1bbe8:	cmp	r9, #0
   1bbec:	lsl	r0, r8, #1
   1bbf0:	lsr	r2, r9, #31
   1bbf4:	orr	r1, r1, r8, lsr #31
   1bbf8:	mvnmi	r0, #0
   1bbfc:	mvnmi	r1, #0
   1bc00:	mov	r8, r0
   1bc04:	mov	r9, r1
   1bc08:	b	1bef0 <__assert_fail@plt+0xab78>
   1bc0c:	mvn	r0, #0
   1bc10:	mvn	r1, #0
   1bc14:	mov	r2, r4
   1bc18:	mov	r5, r3
   1bc1c:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bc20:	mov	ip, r5
   1bc24:	mvn	lr, #0
   1bc28:	mov	r2, #0
   1bc2c:	mvn	r3, #2
   1bc30:	mov	r6, r8
   1bc34:	mov	r5, r9
   1bc38:	umull	r8, r7, r6, r4
   1bc3c:	mvn	r9, #0
   1bc40:	mla	r7, r6, ip, r7
   1bc44:	subs	r6, r0, r6
   1bc48:	sbcs	r6, r1, r5
   1bc4c:	mov	r6, #0
   1bc50:	movwcc	r6, #1
   1bc54:	cmp	r6, #0
   1bc58:	mlaeq	r9, r5, r4, r7
   1bc5c:	movne	r8, lr
   1bc60:	orrne	r2, r2, #1
   1bc64:	adds	r3, r3, #1
   1bc68:	mov	r6, r8
   1bc6c:	mov	r5, r9
   1bc70:	bcc	1bc38 <__assert_fail@plt+0xa8c0>
   1bc74:	b	1bef0 <__assert_fail@plt+0xab78>
   1bc78:	mvn	r0, #0
   1bc7c:	mvn	r1, #0
   1bc80:	mov	r2, r4
   1bc84:	mov	r5, r3
   1bc88:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bc8c:	subs	r0, r0, r8
   1bc90:	mov	r2, #0
   1bc94:	sbcs	r0, r1, r9
   1bc98:	umull	r0, r1, r8, r4
   1bc9c:	movwcc	r2, #1
   1bca0:	cmp	r2, #0
   1bca4:	mla	r1, r8, r5, r1
   1bca8:	mvnne	r0, #0
   1bcac:	mla	r9, r9, r4, r1
   1bcb0:	mvnne	r9, #0
   1bcb4:	mov	r8, r0
   1bcb8:	b	1bef0 <__assert_fail@plt+0xab78>
   1bcbc:	mvn	r0, #0
   1bcc0:	mvn	r1, #0
   1bcc4:	mov	r2, r4
   1bcc8:	mov	r5, r3
   1bccc:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bcd0:	mov	ip, r5
   1bcd4:	mvn	lr, #0
   1bcd8:	mov	r2, #0
   1bcdc:	mvn	r3, #1
   1bce0:	mov	r6, r8
   1bce4:	mov	r5, r9
   1bce8:	umull	r8, r7, r6, r4
   1bcec:	mvn	r9, #0
   1bcf0:	mla	r7, r6, ip, r7
   1bcf4:	subs	r6, r0, r6
   1bcf8:	sbcs	r6, r1, r5
   1bcfc:	mov	r6, #0
   1bd00:	movwcc	r6, #1
   1bd04:	cmp	r6, #0
   1bd08:	mlaeq	r9, r5, r4, r7
   1bd0c:	movne	r8, lr
   1bd10:	orrne	r2, r2, #1
   1bd14:	adds	r3, r3, #1
   1bd18:	mov	r6, r8
   1bd1c:	mov	r5, r9
   1bd20:	bcc	1bce8 <__assert_fail@plt+0xa970>
   1bd24:	b	1bef0 <__assert_fail@plt+0xab78>
   1bd28:	mvn	r0, #0
   1bd2c:	mvn	r1, #0
   1bd30:	mov	r2, r4
   1bd34:	mov	r5, r3
   1bd38:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bd3c:	mov	ip, r5
   1bd40:	mvn	lr, #0
   1bd44:	mov	r2, #0
   1bd48:	mvn	r3, #3
   1bd4c:	mov	r6, r8
   1bd50:	mov	r5, r9
   1bd54:	umull	r8, r7, r6, r4
   1bd58:	mvn	r9, #0
   1bd5c:	mla	r7, r6, ip, r7
   1bd60:	subs	r6, r0, r6
   1bd64:	sbcs	r6, r1, r5
   1bd68:	mov	r6, #0
   1bd6c:	movwcc	r6, #1
   1bd70:	cmp	r6, #0
   1bd74:	mlaeq	r9, r5, r4, r7
   1bd78:	movne	r8, lr
   1bd7c:	orrne	r2, r2, #1
   1bd80:	adds	r3, r3, #1
   1bd84:	mov	r6, r8
   1bd88:	mov	r5, r9
   1bd8c:	bcc	1bd54 <__assert_fail@plt+0xa9dc>
   1bd90:	b	1bef0 <__assert_fail@plt+0xab78>
   1bd94:	cmp	r7, #90	; 0x5a
   1bd98:	bne	1be08 <__assert_fail@plt+0xaa90>
   1bd9c:	mvn	r0, #0
   1bda0:	mvn	r1, #0
   1bda4:	mov	r2, r4
   1bda8:	mov	r5, r3
   1bdac:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1bdb0:	mov	ip, r5
   1bdb4:	mvn	lr, #0
   1bdb8:	mov	r2, #0
   1bdbc:	mvn	r3, #6
   1bdc0:	mov	r5, r8
   1bdc4:	mov	r7, r9
   1bdc8:	umull	r8, r6, r5, r4
   1bdcc:	mvn	r9, #0
   1bdd0:	mla	r6, r5, ip, r6
   1bdd4:	subs	r5, r0, r5
   1bdd8:	sbcs	r5, r1, r7
   1bddc:	mov	r5, #0
   1bde0:	movwcc	r5, #1
   1bde4:	cmp	r5, #0
   1bde8:	mlaeq	r9, r7, r4, r6
   1bdec:	movne	r8, lr
   1bdf0:	orrne	r2, r2, #1
   1bdf4:	adds	r3, r3, #1
   1bdf8:	mov	r5, r8
   1bdfc:	mov	r7, r9
   1be00:	bcc	1bdc8 <__assert_fail@plt+0xaa50>
   1be04:	b	1bef0 <__assert_fail@plt+0xab78>
   1be08:	ldr	r0, [sp, #12]
   1be0c:	strd	r8, [r0]
   1be10:	ldr	r6, [sp, #4]
   1be14:	orr	r6, r6, #2
   1be18:	b	1bf1c <__assert_fail@plt+0xaba4>
   1be1c:	mvn	r0, #0
   1be20:	mvn	r1, #0
   1be24:	mov	r2, r4
   1be28:	mov	r5, r3
   1be2c:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1be30:	mov	ip, r5
   1be34:	mvn	lr, #0
   1be38:	mov	r2, #0
   1be3c:	mvn	r3, #5
   1be40:	mov	r5, r8
   1be44:	mov	r7, r9
   1be48:	umull	r8, r6, r5, r4
   1be4c:	mvn	r9, #0
   1be50:	mla	r6, r5, ip, r6
   1be54:	subs	r5, r0, r5
   1be58:	sbcs	r5, r1, r7
   1be5c:	mov	r5, #0
   1be60:	movwcc	r5, #1
   1be64:	cmp	r5, #0
   1be68:	mlaeq	r9, r7, r4, r6
   1be6c:	movne	r8, lr
   1be70:	orrne	r2, r2, #1
   1be74:	adds	r3, r3, #1
   1be78:	mov	r5, r8
   1be7c:	mov	r7, r9
   1be80:	bcc	1be48 <__assert_fail@plt+0xaad0>
   1be84:	b	1bef0 <__assert_fail@plt+0xab78>
   1be88:	mvn	r0, #0
   1be8c:	mvn	r1, #0
   1be90:	mov	r2, r4
   1be94:	mov	r5, r3
   1be98:	bl	1c44c <__assert_fail@plt+0xb0d4>
   1be9c:	mov	ip, r5
   1bea0:	mvn	lr, #0
   1bea4:	mov	r2, #0
   1bea8:	mvn	r3, #4
   1beac:	mov	r5, r8
   1beb0:	mov	r7, r9
   1beb4:	umull	r8, r6, r5, r4
   1beb8:	mvn	r9, #0
   1bebc:	mla	r6, r5, ip, r6
   1bec0:	subs	r5, r0, r5
   1bec4:	sbcs	r5, r1, r7
   1bec8:	mov	r5, #0
   1becc:	movwcc	r5, #1
   1bed0:	cmp	r5, #0
   1bed4:	mlaeq	r9, r7, r4, r6
   1bed8:	movne	r8, lr
   1bedc:	orrne	r2, r2, #1
   1bee0:	adds	r3, r3, #1
   1bee4:	mov	r5, r8
   1bee8:	mov	r7, r9
   1beec:	bcc	1beb4 <__assert_fail@plt+0xab3c>
   1bef0:	ldr	r1, [sp]
   1bef4:	ldr	r3, [sp, #8]
   1bef8:	ldr	r6, [sp, #4]
   1befc:	add	r0, r1, r3
   1bf00:	orr	r6, r2, r6
   1bf04:	str	r0, [sl]
   1bf08:	ldrb	r0, [r1, r3]
   1bf0c:	cmp	r0, #0
   1bf10:	orrne	r6, r6, #2
   1bf14:	ldr	r0, [sp, #12]
   1bf18:	strd	r8, [r0]
   1bf1c:	mov	r0, r6
   1bf20:	sub	sp, fp, #28
   1bf24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf28:	movw	r0, #55521	; 0xd8e1
   1bf2c:	movw	r1, #55559	; 0xd907
   1bf30:	movw	r3, #55575	; 0xd917
   1bf34:	mov	r2, #85	; 0x55
   1bf38:	movt	r0, #1
   1bf3c:	movt	r1, #1
   1bf40:	movt	r3, #1
   1bf44:	bl	11378 <__assert_fail@plt>
   1bf48:	clz	r2, r1
   1bf4c:	clz	r3, r0
   1bf50:	lsr	r2, r2, #5
   1bf54:	lsr	r3, r3, #5
   1bf58:	orrs	r2, r3, r2
   1bf5c:	movwne	r1, #1
   1bf60:	movwne	r0, #1
   1bf64:	cmp	r1, #0
   1bf68:	beq	1bf98 <__assert_fail@plt+0xac20>
   1bf6c:	mvn	r2, #-2147483648	; 0x80000000
   1bf70:	udiv	r2, r2, r1
   1bf74:	cmp	r2, r0
   1bf78:	bcs	1bf98 <__assert_fail@plt+0xac20>
   1bf7c:	push	{fp, lr}
   1bf80:	mov	fp, sp
   1bf84:	bl	1124c <__errno_location@plt>
   1bf88:	mov	r1, #12
   1bf8c:	str	r1, [r0]
   1bf90:	mov	r0, #0
   1bf94:	pop	{fp, pc}
   1bf98:	b	110b4 <calloc@plt>
   1bf9c:	cmp	r0, #0
   1bfa0:	movweq	r0, #1
   1bfa4:	cmn	r0, #1
   1bfa8:	ble	1bfb0 <__assert_fail@plt+0xac38>
   1bfac:	b	111bc <malloc@plt>
   1bfb0:	push	{fp, lr}
   1bfb4:	mov	fp, sp
   1bfb8:	bl	1124c <__errno_location@plt>
   1bfbc:	mov	r1, #12
   1bfc0:	str	r1, [r0]
   1bfc4:	mov	r0, #0
   1bfc8:	pop	{fp, pc}
   1bfcc:	push	{fp, lr}
   1bfd0:	mov	fp, sp
   1bfd4:	cmp	r0, #0
   1bfd8:	beq	1bff4 <__assert_fail@plt+0xac7c>
   1bfdc:	cmp	r1, #0
   1bfe0:	beq	1c000 <__assert_fail@plt+0xac88>
   1bfe4:	cmn	r1, #1
   1bfe8:	ble	1c008 <__assert_fail@plt+0xac90>
   1bfec:	pop	{fp, lr}
   1bff0:	b	11144 <realloc@plt>
   1bff4:	mov	r0, r1
   1bff8:	pop	{fp, lr}
   1bffc:	b	1bf9c <__assert_fail@plt+0xac24>
   1c000:	bl	1924c <__assert_fail@plt+0x7ed4>
   1c004:	b	1c014 <__assert_fail@plt+0xac9c>
   1c008:	bl	1124c <__errno_location@plt>
   1c00c:	mov	r1, #12
   1c010:	str	r1, [r0]
   1c014:	mov	r0, #0
   1c018:	pop	{fp, pc}
   1c01c:	push	{r4, r5, r6, sl, fp, lr}
   1c020:	add	fp, sp, #16
   1c024:	mov	r4, r0
   1c028:	bl	1118c <__fpending@plt>
   1c02c:	mov	r5, r0
   1c030:	mov	r0, r4
   1c034:	bl	11198 <ferror_unlocked@plt>
   1c038:	mov	r6, r0
   1c03c:	mov	r0, r4
   1c040:	bl	190a8 <__assert_fail@plt+0x7d30>
   1c044:	cmp	r6, #0
   1c048:	beq	1c068 <__assert_fail@plt+0xacf0>
   1c04c:	mvn	r4, #0
   1c050:	cmp	r0, #0
   1c054:	bne	1c094 <__assert_fail@plt+0xad1c>
   1c058:	bl	1124c <__errno_location@plt>
   1c05c:	mov	r1, #0
   1c060:	str	r1, [r0]
   1c064:	b	1c094 <__assert_fail@plt+0xad1c>
   1c068:	cmp	r0, #0
   1c06c:	mov	r4, r0
   1c070:	mvnne	r4, #0
   1c074:	cmp	r5, #0
   1c078:	bne	1c094 <__assert_fail@plt+0xad1c>
   1c07c:	cmp	r0, #0
   1c080:	beq	1c094 <__assert_fail@plt+0xad1c>
   1c084:	bl	1124c <__errno_location@plt>
   1c088:	ldr	r0, [r0]
   1c08c:	subs	r4, r0, #9
   1c090:	mvnne	r4, #0
   1c094:	mov	r0, r4
   1c098:	pop	{r4, r5, r6, sl, fp, pc}
   1c09c:	sub	sp, sp, #8
   1c0a0:	push	{r4, r5, r6, r7, fp, lr}
   1c0a4:	add	fp, sp, #16
   1c0a8:	sub	sp, sp, #8
   1c0ac:	mov	r5, r0
   1c0b0:	add	r0, fp, #8
   1c0b4:	cmp	r1, #11
   1c0b8:	str	r2, [fp, #8]
   1c0bc:	str	r3, [fp, #12]
   1c0c0:	str	r0, [sp, #4]
   1c0c4:	bhi	1c100 <__assert_fail@plt+0xad88>
   1c0c8:	mov	r0, #1
   1c0cc:	movw	r2, #1300	; 0x514
   1c0d0:	tst	r2, r0, lsl r1
   1c0d4:	bne	1c1b8 <__assert_fail@plt+0xae40>
   1c0d8:	movw	r2, #2570	; 0xa0a
   1c0dc:	tst	r2, r0, lsl r1
   1c0e0:	bne	1c128 <__assert_fail@plt+0xadb0>
   1c0e4:	cmp	r1, #0
   1c0e8:	bne	1c100 <__assert_fail@plt+0xad88>
   1c0ec:	ldr	r0, [sp, #4]
   1c0f0:	add	r1, r0, #4
   1c0f4:	str	r1, [sp, #4]
   1c0f8:	mov	r1, #0
   1c0fc:	b	1c1c4 <__assert_fail@plt+0xae4c>
   1c100:	sub	r0, r1, #1024	; 0x400
   1c104:	cmp	r0, #10
   1c108:	bhi	1c1b8 <__assert_fail@plt+0xae40>
   1c10c:	mov	r2, #1
   1c110:	movw	r3, #645	; 0x285
   1c114:	tst	r3, r2, lsl r0
   1c118:	bne	1c1b8 <__assert_fail@plt+0xae40>
   1c11c:	movw	r3, #1282	; 0x502
   1c120:	tst	r3, r2, lsl r0
   1c124:	beq	1c134 <__assert_fail@plt+0xadbc>
   1c128:	mov	r0, r5
   1c12c:	bl	112c4 <fcntl64@plt>
   1c130:	b	1c1d0 <__assert_fail@plt+0xae58>
   1c134:	cmp	r0, #6
   1c138:	bne	1c1b8 <__assert_fail@plt+0xae40>
   1c13c:	ldr	r0, [sp, #4]
   1c140:	movw	r7, #58080	; 0xe2e0
   1c144:	movt	r7, #2
   1c148:	add	r1, r0, #4
   1c14c:	str	r1, [sp, #4]
   1c150:	ldr	r6, [r0]
   1c154:	ldr	r0, [r7]
   1c158:	cmp	r0, #0
   1c15c:	bmi	1c1f4 <__assert_fail@plt+0xae7c>
   1c160:	mov	r0, r5
   1c164:	movw	r1, #1030	; 0x406
   1c168:	mov	r2, r6
   1c16c:	bl	112c4 <fcntl64@plt>
   1c170:	mov	r4, r0
   1c174:	cmn	r0, #1
   1c178:	bgt	1c1e8 <__assert_fail@plt+0xae70>
   1c17c:	bl	1124c <__errno_location@plt>
   1c180:	ldr	r0, [r0]
   1c184:	cmp	r0, #22
   1c188:	bne	1c1e8 <__assert_fail@plt+0xae70>
   1c18c:	mov	r0, r5
   1c190:	mov	r1, #0
   1c194:	mov	r2, r6
   1c198:	bl	112c4 <fcntl64@plt>
   1c19c:	mov	r4, r0
   1c1a0:	cmp	r0, #0
   1c1a4:	bmi	1c1d4 <__assert_fail@plt+0xae5c>
   1c1a8:	mvn	r0, #0
   1c1ac:	str	r0, [r7]
   1c1b0:	mov	r0, #1
   1c1b4:	b	1c218 <__assert_fail@plt+0xaea0>
   1c1b8:	ldr	r0, [sp, #4]
   1c1bc:	add	r2, r0, #4
   1c1c0:	str	r2, [sp, #4]
   1c1c4:	ldr	r2, [r0]
   1c1c8:	mov	r0, r5
   1c1cc:	bl	112c4 <fcntl64@plt>
   1c1d0:	mov	r4, r0
   1c1d4:	mov	r0, r4
   1c1d8:	sub	sp, fp, #16
   1c1dc:	pop	{r4, r5, r6, r7, fp, lr}
   1c1e0:	add	sp, sp, #8
   1c1e4:	bx	lr
   1c1e8:	mov	r0, #1
   1c1ec:	str	r0, [r7]
   1c1f0:	b	1c1d4 <__assert_fail@plt+0xae5c>
   1c1f4:	mov	r0, r5
   1c1f8:	mov	r1, #0
   1c1fc:	mov	r2, r6
   1c200:	bl	112c4 <fcntl64@plt>
   1c204:	mov	r4, r0
   1c208:	ldr	r0, [r7]
   1c20c:	add	r0, r0, #1
   1c210:	clz	r0, r0
   1c214:	lsr	r0, r0, #5
   1c218:	cmp	r0, #0
   1c21c:	beq	1c1d4 <__assert_fail@plt+0xae5c>
   1c220:	cmp	r4, #0
   1c224:	bmi	1c1d4 <__assert_fail@plt+0xae5c>
   1c228:	mov	r0, r4
   1c22c:	mov	r1, #1
   1c230:	bl	112c4 <fcntl64@plt>
   1c234:	cmp	r0, #0
   1c238:	bmi	1c254 <__assert_fail@plt+0xaedc>
   1c23c:	orr	r2, r0, #1
   1c240:	mov	r0, r4
   1c244:	mov	r1, #2
   1c248:	bl	112c4 <fcntl64@plt>
   1c24c:	cmn	r0, #1
   1c250:	bne	1c1d4 <__assert_fail@plt+0xae5c>
   1c254:	bl	1124c <__errno_location@plt>
   1c258:	ldr	r6, [r0]
   1c25c:	mov	r5, r0
   1c260:	mov	r0, r4
   1c264:	bl	11354 <close@plt>
   1c268:	str	r6, [r5]
   1c26c:	mvn	r4, #0
   1c270:	b	1c1d4 <__assert_fail@plt+0xae5c>
   1c274:	push	{fp, lr}
   1c278:	mov	fp, sp
   1c27c:	mov	r0, #14
   1c280:	bl	112e8 <nl_langinfo@plt>
   1c284:	movw	r1, #51819	; 0xca6b
   1c288:	cmp	r0, #0
   1c28c:	movt	r1, #1
   1c290:	movne	r1, r0
   1c294:	movw	r0, #55654	; 0xd966
   1c298:	ldrb	r2, [r1]
   1c29c:	movt	r0, #1
   1c2a0:	cmp	r2, #0
   1c2a4:	movne	r0, r1
   1c2a8:	pop	{fp, pc}
   1c2ac:	push	{r4, r5, r6, r7, fp, lr}
   1c2b0:	add	fp, sp, #16
   1c2b4:	sub	sp, sp, #8
   1c2b8:	cmp	r0, #0
   1c2bc:	add	r5, sp, #4
   1c2c0:	mov	r7, r2
   1c2c4:	mov	r4, r1
   1c2c8:	movne	r5, r0
   1c2cc:	mov	r0, r5
   1c2d0:	bl	111a4 <mbrtowc@plt>
   1c2d4:	mov	r6, r0
   1c2d8:	cmp	r7, #0
   1c2dc:	beq	1c304 <__assert_fail@plt+0xaf8c>
   1c2e0:	cmn	r6, #2
   1c2e4:	bcc	1c304 <__assert_fail@plt+0xaf8c>
   1c2e8:	mov	r0, #0
   1c2ec:	bl	1c34c <__assert_fail@plt+0xafd4>
   1c2f0:	cmp	r0, #0
   1c2f4:	bne	1c304 <__assert_fail@plt+0xaf8c>
   1c2f8:	ldrb	r0, [r4]
   1c2fc:	mov	r6, #1
   1c300:	str	r0, [r5]
   1c304:	mov	r0, r6
   1c308:	sub	sp, fp, #16
   1c30c:	pop	{r4, r5, r6, r7, fp, pc}
   1c310:	cmp	r2, #0
   1c314:	beq	1c344 <__assert_fail@plt+0xafcc>
   1c318:	mvn	r3, #0
   1c31c:	udiv	r3, r3, r2
   1c320:	cmp	r3, r1
   1c324:	bcs	1c344 <__assert_fail@plt+0xafcc>
   1c328:	push	{fp, lr}
   1c32c:	mov	fp, sp
   1c330:	bl	1124c <__errno_location@plt>
   1c334:	mov	r1, #12
   1c338:	str	r1, [r0]
   1c33c:	mov	r0, #0
   1c340:	pop	{fp, pc}
   1c344:	mul	r1, r2, r1
   1c348:	b	1bfcc <__assert_fail@plt+0xac54>
   1c34c:	push	{r4, sl, fp, lr}
   1c350:	add	fp, sp, #8
   1c354:	sub	sp, sp, #264	; 0x108
   1c358:	add	r1, sp, #7
   1c35c:	movw	r2, #257	; 0x101
   1c360:	bl	1c3b8 <__assert_fail@plt+0xb040>
   1c364:	mov	r4, #0
   1c368:	cmp	r0, #0
   1c36c:	bne	1c3ac <__assert_fail@plt+0xb034>
   1c370:	movw	r1, #55660	; 0xd96c
   1c374:	add	r0, sp, #7
   1c378:	mov	r2, #2
   1c37c:	movt	r1, #1
   1c380:	bl	11228 <bcmp@plt>
   1c384:	cmp	r0, #0
   1c388:	beq	1c3ac <__assert_fail@plt+0xb034>
   1c38c:	movw	r1, #55662	; 0xd96e
   1c390:	add	r0, sp, #7
   1c394:	mov	r2, #6
   1c398:	movt	r1, #1
   1c39c:	bl	11228 <bcmp@plt>
   1c3a0:	cmp	r0, #0
   1c3a4:	mov	r4, r0
   1c3a8:	movwne	r4, #1
   1c3ac:	mov	r0, r4
   1c3b0:	sub	sp, fp, #8
   1c3b4:	pop	{r4, sl, fp, pc}
   1c3b8:	push	{r4, r5, r6, r7, fp, lr}
   1c3bc:	add	fp, sp, #16
   1c3c0:	mov	r4, r1
   1c3c4:	mov	r1, #0
   1c3c8:	mov	r6, r2
   1c3cc:	bl	112d0 <setlocale@plt>
   1c3d0:	cmp	r0, #0
   1c3d4:	beq	1c400 <__assert_fail@plt+0xb088>
   1c3d8:	mov	r7, r0
   1c3dc:	bl	11234 <strlen@plt>
   1c3e0:	cmp	r0, r6
   1c3e4:	bcs	1c414 <__assert_fail@plt+0xb09c>
   1c3e8:	add	r2, r0, #1
   1c3ec:	mov	r0, r4
   1c3f0:	mov	r1, r7
   1c3f4:	bl	11120 <memcpy@plt>
   1c3f8:	mov	r5, #0
   1c3fc:	b	1c43c <__assert_fail@plt+0xb0c4>
   1c400:	cmp	r6, #0
   1c404:	mov	r5, #22
   1c408:	movne	r0, #0
   1c40c:	strbne	r0, [r4]
   1c410:	b	1c43c <__assert_fail@plt+0xb0c4>
   1c414:	mov	r5, #34	; 0x22
   1c418:	cmp	r6, #0
   1c41c:	beq	1c43c <__assert_fail@plt+0xb0c4>
   1c420:	sub	r6, r6, #1
   1c424:	mov	r0, r4
   1c428:	mov	r1, r7
   1c42c:	mov	r2, r6
   1c430:	bl	11120 <memcpy@plt>
   1c434:	mov	r0, #0
   1c438:	strb	r0, [r4, r6]
   1c43c:	mov	r0, r5
   1c440:	pop	{r4, r5, r6, r7, fp, pc}
   1c444:	mov	r1, #0
   1c448:	b	112d0 <setlocale@plt>
   1c44c:	cmp	r3, #0
   1c450:	cmpeq	r2, #0
   1c454:	bne	1c46c <__assert_fail@plt+0xb0f4>
   1c458:	cmp	r1, #0
   1c45c:	cmpeq	r0, #0
   1c460:	mvnne	r1, #0
   1c464:	mvnne	r0, #0
   1c468:	b	1c488 <__assert_fail@plt+0xb110>
   1c46c:	sub	sp, sp, #8
   1c470:	push	{sp, lr}
   1c474:	bl	1c498 <__assert_fail@plt+0xb120>
   1c478:	ldr	lr, [sp, #4]
   1c47c:	add	sp, sp, #8
   1c480:	pop	{r2, r3}
   1c484:	bx	lr
   1c488:	push	{r1, lr}
   1c48c:	mov	r0, #8
   1c490:	bl	110cc <raise@plt>
   1c494:	pop	{r1, pc}
   1c498:	cmp	r1, r3
   1c49c:	cmpeq	r0, r2
   1c4a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4a4:	mov	r4, r0
   1c4a8:	movcc	r0, #0
   1c4ac:	mov	r5, r1
   1c4b0:	ldr	lr, [sp, #36]	; 0x24
   1c4b4:	movcc	r1, r0
   1c4b8:	bcc	1c5b4 <__assert_fail@plt+0xb23c>
   1c4bc:	cmp	r3, #0
   1c4c0:	clzeq	ip, r2
   1c4c4:	clzne	ip, r3
   1c4c8:	addeq	ip, ip, #32
   1c4cc:	cmp	r5, #0
   1c4d0:	clzeq	r1, r4
   1c4d4:	addeq	r1, r1, #32
   1c4d8:	clzne	r1, r5
   1c4dc:	sub	ip, ip, r1
   1c4e0:	sub	sl, ip, #32
   1c4e4:	lsl	r9, r3, ip
   1c4e8:	rsb	fp, ip, #32
   1c4ec:	orr	r9, r9, r2, lsl sl
   1c4f0:	orr	r9, r9, r2, lsr fp
   1c4f4:	lsl	r8, r2, ip
   1c4f8:	cmp	r5, r9
   1c4fc:	cmpeq	r4, r8
   1c500:	movcc	r0, #0
   1c504:	movcc	r1, r0
   1c508:	bcc	1c524 <__assert_fail@plt+0xb1ac>
   1c50c:	mov	r0, #1
   1c510:	subs	r4, r4, r8
   1c514:	lsl	r1, r0, sl
   1c518:	orr	r1, r1, r0, lsr fp
   1c51c:	lsl	r0, r0, ip
   1c520:	sbc	r5, r5, r9
   1c524:	cmp	ip, #0
   1c528:	beq	1c5b4 <__assert_fail@plt+0xb23c>
   1c52c:	lsr	r6, r8, #1
   1c530:	orr	r6, r6, r9, lsl #31
   1c534:	lsr	r7, r9, #1
   1c538:	mov	r2, ip
   1c53c:	b	1c560 <__assert_fail@plt+0xb1e8>
   1c540:	subs	r3, r4, r6
   1c544:	sbc	r8, r5, r7
   1c548:	adds	r3, r3, r3
   1c54c:	adc	r8, r8, r8
   1c550:	adds	r4, r3, #1
   1c554:	adc	r5, r8, #0
   1c558:	subs	r2, r2, #1
   1c55c:	beq	1c57c <__assert_fail@plt+0xb204>
   1c560:	cmp	r5, r7
   1c564:	cmpeq	r4, r6
   1c568:	bcs	1c540 <__assert_fail@plt+0xb1c8>
   1c56c:	adds	r4, r4, r4
   1c570:	adc	r5, r5, r5
   1c574:	subs	r2, r2, #1
   1c578:	bne	1c560 <__assert_fail@plt+0xb1e8>
   1c57c:	lsr	r3, r4, ip
   1c580:	orr	r3, r3, r5, lsl fp
   1c584:	lsr	r2, r5, ip
   1c588:	orr	r3, r3, r5, lsr sl
   1c58c:	adds	r0, r0, r4
   1c590:	mov	r4, r3
   1c594:	lsl	r3, r2, ip
   1c598:	orr	r3, r3, r4, lsl sl
   1c59c:	lsl	ip, r4, ip
   1c5a0:	orr	r3, r3, r4, lsr fp
   1c5a4:	adc	r1, r1, r5
   1c5a8:	subs	r0, r0, ip
   1c5ac:	mov	r5, r2
   1c5b0:	sbc	r1, r1, r3
   1c5b4:	cmp	lr, #0
   1c5b8:	strdne	r4, [lr]
   1c5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c5c4:	mov	r7, r0
   1c5c8:	ldr	r6, [pc, #72]	; 1c618 <__assert_fail@plt+0xb2a0>
   1c5cc:	ldr	r5, [pc, #72]	; 1c61c <__assert_fail@plt+0xb2a4>
   1c5d0:	add	r6, pc, r6
   1c5d4:	add	r5, pc, r5
   1c5d8:	sub	r6, r6, r5
   1c5dc:	mov	r8, r1
   1c5e0:	mov	r9, r2
   1c5e4:	bl	11088 <fdopen@plt-0x20>
   1c5e8:	asrs	r6, r6, #2
   1c5ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c5f0:	mov	r4, #0
   1c5f4:	add	r4, r4, #1
   1c5f8:	ldr	r3, [r5], #4
   1c5fc:	mov	r2, r9
   1c600:	mov	r1, r8
   1c604:	mov	r0, r7
   1c608:	blx	r3
   1c60c:	cmp	r6, r4
   1c610:	bne	1c5f4 <__assert_fail@plt+0xb27c>
   1c614:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c618:	andeq	r1, r1, r4, lsr r9
   1c61c:	andeq	r1, r1, ip, lsr #18
   1c620:	bx	lr
   1c624:	ldr	r3, [pc, #12]	; 1c638 <__assert_fail@plt+0xb2c0>
   1c628:	mov	r1, #0
   1c62c:	add	r3, pc, r3
   1c630:	ldr	r2, [r3]
   1c634:	b	11258 <__cxa_atexit@plt>
   1c638:	ldrdeq	r1, [r1], -r8

Disassembly of section .fini:

0001c63c <.fini>:
   1c63c:	push	{r3, lr}
   1c640:	pop	{r3, pc}
