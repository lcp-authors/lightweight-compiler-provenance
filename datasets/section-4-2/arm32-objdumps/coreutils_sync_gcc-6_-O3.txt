
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010be0 <.init>:
   10be0:	push	{r3, lr}
   10be4:	bl	111f8 <close@plt+0x3ac>
   10be8:	pop	{r3, pc}

Disassembly of section .plt:

00010bec <calloc@plt-0x14>:
   10bec:	push	{lr}		; (str lr, [sp, #-4]!)
   10bf0:	ldr	lr, [pc, #4]	; 10bfc <calloc@plt-0x4>
   10bf4:	add	lr, pc, lr
   10bf8:	ldr	pc, [lr, #8]!
   10bfc:	andeq	r7, r1, r4, lsl #8

00010c00 <calloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #94208	; 0x17000
   10c08:	ldr	pc, [ip, #1028]!	; 0x404

00010c0c <fputs_unlocked@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #94208	; 0x17000
   10c14:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c18 <raise@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #94208	; 0x17000
   10c20:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c24 <fsync@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #94208	; 0x17000
   10c2c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c30 <strcmp@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #94208	; 0x17000
   10c38:	ldr	pc, [ip, #996]!	; 0x3e4

00010c3c <fflush@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #94208	; 0x17000
   10c44:	ldr	pc, [ip, #988]!	; 0x3dc

00010c48 <free@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #94208	; 0x17000
   10c50:	ldr	pc, [ip, #980]!	; 0x3d4

00010c54 <_exit@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c60 <memcpy@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #964]!	; 0x3c4

00010c6c <mbsinit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #956]!	; 0x3bc

00010c78 <memcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #948]!	; 0x3b4

00010c84 <fputc_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c90 <dcgettext@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #932]!	; 0x3a4

00010c9c <syncfs@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #924]!	; 0x39c

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #916]!	; 0x394

00010cb4 <textdomain@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #908]!	; 0x38c

00010cc0 <iswprint@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #900]!	; 0x384

00010ccc <fwrite@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #892]!	; 0x37c

00010cd8 <lseek64@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #884]!	; 0x374

00010ce4 <__ctype_get_mb_cur_max@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #876]!	; 0x36c

00010cf0 <__fpending@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #868]!	; 0x364

00010cfc <mbrtowc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #860]!	; 0x35c

00010d08 <error@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #852]!	; 0x354

00010d14 <open64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #844]!	; 0x34c

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #836]!	; 0x344

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #828]!	; 0x33c

00010d38 <__freading@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #820]!	; 0x334

00010d44 <__gmon_start__@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #812]!	; 0x32c

00010d50 <getopt_long@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #804]!	; 0x324

00010d5c <__ctype_b_loc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #796]!	; 0x31c

00010d68 <exit@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #788]!	; 0x314

00010d74 <strlen@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #780]!	; 0x30c

00010d80 <__errno_location@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #772]!	; 0x304

00010d8c <__cxa_atexit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #764]!	; 0x2fc

00010d98 <memset@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #756]!	; 0x2f4

00010da4 <__printf_chk@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #748]!	; 0x2ec

00010db0 <fileno@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #740]!	; 0x2e4

00010dbc <__fprintf_chk@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #732]!	; 0x2dc

00010dc8 <fclose@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #724]!	; 0x2d4

00010dd4 <fseeko64@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #716]!	; 0x2cc

00010de0 <fcntl64@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dec <setlocale@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #700]!	; 0x2bc

00010df8 <strrchr@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #692]!	; 0x2b4

00010e04 <nl_langinfo@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #684]!	; 0x2ac

00010e10 <bindtextdomain@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #676]!	; 0x2a4

00010e1c <sync@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #668]!	; 0x29c

00010e28 <strncmp@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #660]!	; 0x294

00010e34 <fdatasync@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #652]!	; 0x28c

00010e40 <abort@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #644]!	; 0x284

00010e4c <close@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #636]!	; 0x27c

Disassembly of section .text:

00010e58 <.text>:
   10e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e5c:	mov	r5, r0
   10e60:	sub	sp, sp, #36	; 0x24
   10e64:	ldr	r0, [r1]
   10e68:	mov	r4, r1
   10e6c:	bl	118bc <close@plt+0xa70>
   10e70:	ldr	r1, [pc, #756]	; 1116c <close@plt+0x320>
   10e74:	mov	r0, #6
   10e78:	bl	10dec <setlocale@plt>
   10e7c:	ldr	r1, [pc, #748]	; 11170 <close@plt+0x324>
   10e80:	ldr	r0, [pc, #748]	; 11174 <close@plt+0x328>
   10e84:	bl	10e10 <bindtextdomain@plt>
   10e88:	ldr	r0, [pc, #740]	; 11174 <close@plt+0x328>
   10e8c:	bl	10cb4 <textdomain@plt>
   10e90:	ldr	r0, [pc, #736]	; 11178 <close@plt+0x32c>
   10e94:	bl	17398 <close@plt+0x654c>
   10e98:	mov	r7, #0
   10e9c:	ldr	sl, [pc, #728]	; 1117c <close@plt+0x330>
   10ea0:	ldr	r8, [pc, #728]	; 11180 <close@plt+0x334>
   10ea4:	mov	r9, r7
   10ea8:	mov	r6, r7
   10eac:	mov	fp, #1
   10eb0:	str	r6, [sp]
   10eb4:	mov	r3, sl
   10eb8:	mov	r2, r8
   10ebc:	mov	r1, r4
   10ec0:	mov	r0, r5
   10ec4:	bl	10d50 <getopt_long@plt>
   10ec8:	cmn	r0, #1
   10ecc:	beq	10f4c <close@plt+0x100>
   10ed0:	cmn	r0, #2
   10ed4:	beq	10f44 <close@plt+0xf8>
   10ed8:	ble	10efc <close@plt+0xb0>
   10edc:	cmp	r0, #100	; 0x64
   10ee0:	beq	10ef4 <close@plt+0xa8>
   10ee4:	cmp	r0, #102	; 0x66
   10ee8:	bne	10f3c <close@plt+0xf0>
   10eec:	mov	r7, fp
   10ef0:	b	10eb0 <close@plt+0x64>
   10ef4:	mov	r9, fp
   10ef8:	b	10eb0 <close@plt+0x64>
   10efc:	cmn	r0, #3
   10f00:	bne	10f3c <close@plt+0xf0>
   10f04:	ldr	r3, [pc, #632]	; 11184 <close@plt+0x338>
   10f08:	ldr	r0, [pc, #632]	; 11188 <close@plt+0x33c>
   10f0c:	ldr	r1, [pc, #632]	; 1118c <close@plt+0x340>
   10f10:	ldr	r2, [pc, #632]	; 11190 <close@plt+0x344>
   10f14:	str	r6, [sp, #8]
   10f18:	ldr	r0, [r0]
   10f1c:	ldr	r3, [r3]
   10f20:	str	r1, [sp, #4]
   10f24:	str	r2, [sp]
   10f28:	ldr	r1, [pc, #612]	; 11194 <close@plt+0x348>
   10f2c:	ldr	r2, [pc, #612]	; 11198 <close@plt+0x34c>
   10f30:	bl	1615c <close@plt+0x5310>
   10f34:	mov	r0, #0
   10f38:	bl	10d68 <exit@plt>
   10f3c:	mov	r0, #1
   10f40:	bl	112e4 <close@plt+0x498>
   10f44:	mov	r0, #0
   10f48:	bl	112e4 <close@plt+0x498>
   10f4c:	ldr	r8, [pc, #584]	; 1119c <close@plt+0x350>
   10f50:	ands	r6, r9, r7
   10f54:	ldr	r3, [r8]
   10f58:	bne	1114c <close@plt+0x300>
   10f5c:	cmp	r5, r3
   10f60:	movgt	r2, #0
   10f64:	andle	r2, r9, #1
   10f68:	cmp	r2, #0
   10f6c:	str	r2, [sp, #24]
   10f70:	ldrne	r1, [pc, #552]	; 111a0 <close@plt+0x354>
   10f74:	movne	r2, #5
   10f78:	bne	11154 <close@plt+0x308>
   10f7c:	cmp	r5, r3
   10f80:	ble	11128 <close@plt+0x2dc>
   10f84:	cmp	r7, #0
   10f88:	movne	r9, #2
   10f8c:	mov	r6, #1
   10f90:	str	r9, [sp, #28]
   10f94:	b	10ff8 <close@plt+0x1ac>
   10f98:	bic	r2, r0, #2048	; 0x800
   10f9c:	mov	r1, #4
   10fa0:	mov	r0, r7
   10fa4:	bl	116e8 <close@plt+0x89c>
   10fa8:	cmp	r0, #0
   10fac:	blt	11030 <close@plt+0x1e4>
   10fb0:	ldr	r3, [sp, #28]
   10fb4:	cmp	r3, #1
   10fb8:	beq	1111c <close@plt+0x2d0>
   10fbc:	cmp	r3, #2
   10fc0:	bne	11110 <close@plt+0x2c4>
   10fc4:	mov	r0, r7
   10fc8:	bl	10c9c <syncfs@plt>
   10fcc:	cmp	r0, #0
   10fd0:	movge	sl, #1
   10fd4:	blt	1113c <close@plt+0x2f0>
   10fd8:	mov	r0, r7
   10fdc:	bl	10e4c <close@plt>
   10fe0:	cmp	r0, #0
   10fe4:	blt	110cc <close@plt+0x280>
   10fe8:	ldr	r3, [r8]
   10fec:	and	r6, r6, sl
   10ff0:	add	r3, r3, #1
   10ff4:	str	r3, [r8]
   10ff8:	ldr	r3, [r8]
   10ffc:	cmp	r5, r3
   11000:	ble	11130 <close@plt+0x2e4>
   11004:	ldr	r9, [r4, r3, lsl #2]
   11008:	mov	r1, #2048	; 0x800
   1100c:	mov	r0, r9
   11010:	bl	10d14 <open64@plt>
   11014:	subs	r7, r0, #0
   11018:	blt	11074 <close@plt+0x228>
   1101c:	mov	r1, #3
   11020:	mov	r0, r7
   11024:	bl	116e8 <close@plt+0x89c>
   11028:	cmn	r0, #1
   1102c:	bne	10f98 <close@plt+0x14c>
   11030:	bl	10d80 <__errno_location@plt>
   11034:	ldr	r1, [pc, #360]	; 111a4 <close@plt+0x358>
   11038:	mov	r2, #5
   1103c:	ldr	fp, [r0]
   11040:	mov	r0, #0
   11044:	ldr	sl, [sp, #24]
   11048:	bl	10c90 <dcgettext@plt>
   1104c:	mov	r1, r9
   11050:	str	r0, [sp, #20]
   11054:	mov	r0, #4
   11058:	bl	13e18 <close@plt+0x2fcc>
   1105c:	ldr	r2, [sp, #20]
   11060:	mov	r1, fp
   11064:	mov	r3, r0
   11068:	mov	r0, #0
   1106c:	bl	10d08 <error@plt>
   11070:	b	10fd8 <close@plt+0x18c>
   11074:	bl	10d80 <__errno_location@plt>
   11078:	ldr	r1, [pc, #296]	; 111a8 <close@plt+0x35c>
   1107c:	ldr	sl, [r0]
   11080:	mov	r0, r9
   11084:	bl	10d14 <open64@plt>
   11088:	subs	r7, r0, #0
   1108c:	bge	1101c <close@plt+0x1d0>
   11090:	mov	r2, #5
   11094:	ldr	r1, [pc, #272]	; 111ac <close@plt+0x360>
   11098:	mov	r0, #0
   1109c:	bl	10c90 <dcgettext@plt>
   110a0:	mov	r1, r9
   110a4:	mov	r7, r0
   110a8:	mov	r0, #4
   110ac:	bl	13e18 <close@plt+0x2fcc>
   110b0:	mov	r1, sl
   110b4:	mov	r2, r7
   110b8:	mov	r3, r0
   110bc:	mov	r0, #0
   110c0:	bl	10d08 <error@plt>
   110c4:	ldr	sl, [sp, #24]
   110c8:	b	10fe8 <close@plt+0x19c>
   110cc:	bl	10d80 <__errno_location@plt>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #212]	; 111b0 <close@plt+0x364>
   110d8:	ldr	sl, [sp, #24]
   110dc:	ldr	r7, [r0]
   110e0:	mov	r0, #0
   110e4:	bl	10c90 <dcgettext@plt>
   110e8:	mov	r1, r9
   110ec:	mov	fp, r0
   110f0:	mov	r0, #4
   110f4:	bl	13e18 <close@plt+0x2fcc>
   110f8:	mov	r2, fp
   110fc:	mov	r1, r7
   11100:	mov	r3, r0
   11104:	mov	r0, #0
   11108:	bl	10d08 <error@plt>
   1110c:	b	10fe8 <close@plt+0x19c>
   11110:	mov	r0, r7
   11114:	bl	10c24 <fsync@plt>
   11118:	b	10fcc <close@plt+0x180>
   1111c:	mov	r0, r7
   11120:	bl	10e34 <fdatasync@plt>
   11124:	b	10fcc <close@plt+0x180>
   11128:	bl	10e1c <sync@plt>
   1112c:	mov	r6, #1
   11130:	eor	r0, r6, #1
   11134:	add	sp, sp, #36	; 0x24
   11138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1113c:	bl	10d80 <__errno_location@plt>
   11140:	mov	r2, #5
   11144:	ldr	r1, [pc, #104]	; 111b4 <close@plt+0x368>
   11148:	b	1103c <close@plt+0x1f0>
   1114c:	ldr	r1, [pc, #100]	; 111b8 <close@plt+0x36c>
   11150:	mov	r2, #5
   11154:	mov	r0, #0
   11158:	bl	10c90 <dcgettext@plt>
   1115c:	mov	r1, #0
   11160:	mov	r2, r0
   11164:	mov	r0, #1
   11168:	bl	10d08 <error@plt>
   1116c:	andeq	r7, r1, ip, lsl r5
   11170:	andeq	r7, r1, r0, lsl #14
   11174:	andeq	r7, r1, r8, asr r6
   11178:	andeq	r1, r1, r4, lsl #12
   1117c:	strdeq	r7, [r1], -r4
   11180:	andeq	r7, r1, ip, lsr r7
   11184:	andeq	r8, r2, r0, ror #1
   11188:	andeq	r8, r2, ip, lsr r1
   1118c:	andeq	r7, r1, r8, lsl r7
   11190:	andeq	r7, r1, ip, lsr #14
   11194:	andeq	r7, r1, r4, asr #8
   11198:	andeq	r7, r1, r4, asr r6
   1119c:	andeq	r8, r2, r0, lsr r1
   111a0:	andeq	r7, r1, r0, ror r7
   111a4:	andeq	r7, r1, r8, lsr #15
   111a8:	andeq	r0, r0, r1, lsl #16
   111ac:	muleq	r1, r4, r7
   111b0:	andeq	r7, r1, r0, ror #15
   111b4:	andeq	r7, r1, ip, asr #15
   111b8:	andeq	r7, r1, r0, asr #14
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <close@plt+0x3a0>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <close@plt+0x3a4>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <close@plt+0x3a8>
   111e4:	bl	10d2c <__libc_start_main@plt>
   111e8:	bl	10e40 <abort@plt>
   111ec:	muleq	r1, r4, r3
   111f0:	andeq	r0, r1, r8, asr lr
   111f4:	andeq	r7, r1, r4, lsr r3
   111f8:	ldr	r3, [pc, #20]	; 11214 <close@plt+0x3c8>
   111fc:	ldr	r2, [pc, #20]	; 11218 <close@plt+0x3cc>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10d44 <__gmon_start__@plt>
   11214:	strdeq	r6, [r1], -r8
   11218:	ldrdeq	r0, [r0], -r4
   1121c:	ldr	r3, [pc, #28]	; 11240 <close@plt+0x3f4>
   11220:	ldr	r0, [pc, #28]	; 11244 <close@plt+0x3f8>
   11224:	sub	r3, r3, r0
   11228:	cmp	r3, #6
   1122c:	bxls	lr
   11230:	ldr	r3, [pc, #16]	; 11248 <close@plt+0x3fc>
   11234:	cmp	r3, #0
   11238:	bxeq	lr
   1123c:	bx	r3
   11240:	andeq	r8, r2, fp, lsr #2
   11244:	andeq	r8, r2, r8, lsr #2
   11248:	andeq	r0, r0, r0
   1124c:	ldr	r1, [pc, #36]	; 11278 <close@plt+0x42c>
   11250:	ldr	r0, [pc, #36]	; 1127c <close@plt+0x430>
   11254:	sub	r1, r1, r0
   11258:	asr	r1, r1, #2
   1125c:	add	r1, r1, r1, lsr #31
   11260:	asrs	r1, r1, #1
   11264:	bxeq	lr
   11268:	ldr	r3, [pc, #16]	; 11280 <close@plt+0x434>
   1126c:	cmp	r3, #0
   11270:	bxeq	lr
   11274:	bx	r3
   11278:	andeq	r8, r2, r8, lsr #2
   1127c:	andeq	r8, r2, r8, lsr #2
   11280:	andeq	r0, r0, r0
   11284:	push	{r4, lr}
   11288:	ldr	r4, [pc, #24]	; 112a8 <close@plt+0x45c>
   1128c:	ldrb	r3, [r4]
   11290:	cmp	r3, #0
   11294:	popne	{r4, pc}
   11298:	bl	1121c <close@plt+0x3d0>
   1129c:	mov	r3, #1
   112a0:	strb	r3, [r4]
   112a4:	pop	{r4, pc}
   112a8:	andeq	r8, r2, r0, asr #2
   112ac:	ldr	r0, [pc, #40]	; 112dc <close@plt+0x490>
   112b0:	ldr	r3, [r0]
   112b4:	cmp	r3, #0
   112b8:	bne	112c0 <close@plt+0x474>
   112bc:	b	1124c <close@plt+0x400>
   112c0:	ldr	r3, [pc, #24]	; 112e0 <close@plt+0x494>
   112c4:	cmp	r3, #0
   112c8:	beq	112bc <close@plt+0x470>
   112cc:	push	{r4, lr}
   112d0:	blx	r3
   112d4:	pop	{r4, lr}
   112d8:	b	1124c <close@plt+0x400>
   112dc:	andeq	r7, r2, r4, lsl pc
   112e0:	andeq	r0, r0, r0
   112e4:	subs	r6, r0, #0
   112e8:	push	{r7, lr}
   112ec:	sub	sp, sp, #56	; 0x38
   112f0:	beq	1132c <close@plt+0x4e0>
   112f4:	ldr	r3, [pc, #660]	; 11590 <close@plt+0x744>
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #656]	; 11594 <close@plt+0x748>
   11300:	mov	r0, #0
   11304:	ldr	r4, [r3]
   11308:	bl	10c90 <dcgettext@plt>
   1130c:	ldr	r3, [pc, #644]	; 11598 <close@plt+0x74c>
   11310:	mov	r1, #1
   11314:	ldr	r3, [r3]
   11318:	mov	r2, r0
   1131c:	mov	r0, r4
   11320:	bl	10dbc <__fprintf_chk@plt>
   11324:	mov	r0, r6
   11328:	bl	10d68 <exit@plt>
   1132c:	mov	r2, #5
   11330:	ldr	r1, [pc, #612]	; 1159c <close@plt+0x750>
   11334:	bl	10c90 <dcgettext@plt>
   11338:	ldr	r3, [pc, #600]	; 11598 <close@plt+0x74c>
   1133c:	ldr	r7, [pc, #604]	; 115a0 <close@plt+0x754>
   11340:	ldr	r4, [pc, #604]	; 115a4 <close@plt+0x758>
   11344:	ldr	r2, [r3]
   11348:	mov	r1, r0
   1134c:	mov	r0, #1
   11350:	bl	10da4 <__printf_chk@plt>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #584]	; 115a8 <close@plt+0x75c>
   1135c:	mov	r0, r6
   11360:	bl	10c90 <dcgettext@plt>
   11364:	ldr	r1, [r7]
   11368:	bl	10c0c <fputs_unlocked@plt>
   1136c:	mov	r2, #5
   11370:	ldr	r1, [pc, #564]	; 115ac <close@plt+0x760>
   11374:	mov	r0, r6
   11378:	bl	10c90 <dcgettext@plt>
   1137c:	ldr	r1, [r7]
   11380:	bl	10c0c <fputs_unlocked@plt>
   11384:	mov	r2, #5
   11388:	ldr	r1, [pc, #544]	; 115b0 <close@plt+0x764>
   1138c:	mov	r0, r6
   11390:	bl	10c90 <dcgettext@plt>
   11394:	ldr	r1, [r7]
   11398:	bl	10c0c <fputs_unlocked@plt>
   1139c:	mov	r2, #5
   113a0:	ldr	r1, [pc, #524]	; 115b4 <close@plt+0x768>
   113a4:	mov	r0, r6
   113a8:	bl	10c90 <dcgettext@plt>
   113ac:	ldr	r1, [r7]
   113b0:	bl	10c0c <fputs_unlocked@plt>
   113b4:	mov	r2, #5
   113b8:	ldr	r1, [pc, #504]	; 115b8 <close@plt+0x76c>
   113bc:	mov	r0, r6
   113c0:	bl	10c90 <dcgettext@plt>
   113c4:	ldr	r1, [r7]
   113c8:	bl	10c0c <fputs_unlocked@plt>
   113cc:	ldm	r4!, {r0, r1, r2, r3}
   113d0:	mov	lr, sp
   113d4:	stmia	lr!, {r0, r1, r2, r3}
   113d8:	ldm	r4!, {r0, r1, r2, r3}
   113dc:	ldr	ip, [sp]
   113e0:	stmia	lr!, {r0, r1, r2, r3}
   113e4:	cmp	ip, #0
   113e8:	ldm	r4!, {r0, r1, r2, r3}
   113ec:	stmia	lr!, {r0, r1, r2, r3}
   113f0:	ldm	r4, {r0, r1}
   113f4:	moveq	r4, sp
   113f8:	stm	lr, {r0, r1}
   113fc:	beq	1142c <close@plt+0x5e0>
   11400:	ldr	r5, [pc, #436]	; 115bc <close@plt+0x770>
   11404:	mov	r4, sp
   11408:	b	11418 <close@plt+0x5cc>
   1140c:	ldr	ip, [r4, #8]!
   11410:	cmp	ip, #0
   11414:	beq	1142c <close@plt+0x5e0>
   11418:	mov	r1, ip
   1141c:	mov	r0, r5
   11420:	bl	10c30 <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	1140c <close@plt+0x5c0>
   1142c:	ldr	r4, [r4, #4]
   11430:	mov	r2, #5
   11434:	cmp	r4, #0
   11438:	ldr	r1, [pc, #384]	; 115c0 <close@plt+0x774>
   1143c:	beq	114e4 <close@plt+0x698>
   11440:	mov	r0, #0
   11444:	bl	10c90 <dcgettext@plt>
   11448:	ldr	r3, [pc, #372]	; 115c4 <close@plt+0x778>
   1144c:	ldr	r2, [pc, #372]	; 115c8 <close@plt+0x77c>
   11450:	mov	r1, r0
   11454:	mov	r0, #1
   11458:	bl	10da4 <__printf_chk@plt>
   1145c:	mov	r1, #0
   11460:	mov	r0, #5
   11464:	bl	10dec <setlocale@plt>
   11468:	cmp	r0, #0
   1146c:	ldreq	r5, [pc, #328]	; 115bc <close@plt+0x770>
   11470:	beq	1148c <close@plt+0x640>
   11474:	mov	r2, #3
   11478:	ldr	r1, [pc, #332]	; 115cc <close@plt+0x780>
   1147c:	bl	10e28 <strncmp@plt>
   11480:	ldr	r5, [pc, #308]	; 115bc <close@plt+0x770>
   11484:	cmp	r0, #0
   11488:	bne	11574 <close@plt+0x728>
   1148c:	mov	r2, #5
   11490:	ldr	r1, [pc, #312]	; 115d0 <close@plt+0x784>
   11494:	mov	r0, #0
   11498:	bl	10c90 <dcgettext@plt>
   1149c:	ldr	r3, [pc, #280]	; 115bc <close@plt+0x770>
   114a0:	ldr	r2, [pc, #284]	; 115c4 <close@plt+0x778>
   114a4:	mov	r1, r0
   114a8:	mov	r0, #1
   114ac:	bl	10da4 <__printf_chk@plt>
   114b0:	mov	r2, #5
   114b4:	ldr	r1, [pc, #280]	; 115d4 <close@plt+0x788>
   114b8:	mov	r0, #0
   114bc:	bl	10c90 <dcgettext@plt>
   114c0:	ldr	r2, [pc, #272]	; 115d8 <close@plt+0x78c>
   114c4:	cmp	r4, r5
   114c8:	ldr	r3, [pc, #268]	; 115dc <close@plt+0x790>
   114cc:	movne	r3, r2
   114d0:	mov	r1, r0
   114d4:	mov	r2, r4
   114d8:	mov	r0, #1
   114dc:	bl	10da4 <__printf_chk@plt>
   114e0:	b	11324 <close@plt+0x4d8>
   114e4:	mov	r0, r4
   114e8:	bl	10c90 <dcgettext@plt>
   114ec:	ldr	r3, [pc, #208]	; 115c4 <close@plt+0x778>
   114f0:	ldr	r2, [pc, #208]	; 115c8 <close@plt+0x77c>
   114f4:	mov	r1, r0
   114f8:	mov	r0, #1
   114fc:	bl	10da4 <__printf_chk@plt>
   11500:	mov	r1, r4
   11504:	mov	r0, #5
   11508:	bl	10dec <setlocale@plt>
   1150c:	cmp	r0, #0
   11510:	beq	11528 <close@plt+0x6dc>
   11514:	mov	r2, #3
   11518:	ldr	r1, [pc, #172]	; 115cc <close@plt+0x780>
   1151c:	bl	10e28 <strncmp@plt>
   11520:	cmp	r0, #0
   11524:	bne	1156c <close@plt+0x720>
   11528:	mov	r2, #5
   1152c:	ldr	r1, [pc, #156]	; 115d0 <close@plt+0x784>
   11530:	mov	r0, #0
   11534:	bl	10c90 <dcgettext@plt>
   11538:	ldr	r3, [pc, #124]	; 115bc <close@plt+0x770>
   1153c:	ldr	r2, [pc, #128]	; 115c4 <close@plt+0x778>
   11540:	mov	r4, r3
   11544:	mov	r1, r0
   11548:	mov	r0, #1
   1154c:	bl	10da4 <__printf_chk@plt>
   11550:	ldr	r1, [pc, #124]	; 115d4 <close@plt+0x788>
   11554:	mov	r2, #5
   11558:	mov	r0, #0
   1155c:	bl	10c90 <dcgettext@plt>
   11560:	ldr	r3, [pc, #116]	; 115dc <close@plt+0x790>
   11564:	mov	r1, r0
   11568:	b	114d4 <close@plt+0x688>
   1156c:	ldr	r5, [pc, #72]	; 115bc <close@plt+0x770>
   11570:	mov	r4, r5
   11574:	mov	r2, #5
   11578:	ldr	r1, [pc, #96]	; 115e0 <close@plt+0x794>
   1157c:	mov	r0, #0
   11580:	bl	10c90 <dcgettext@plt>
   11584:	ldr	r1, [r7]
   11588:	bl	10c0c <fputs_unlocked@plt>
   1158c:	b	1148c <close@plt+0x640>
   11590:	andeq	r8, r2, r8, lsr r1
   11594:	andeq	r7, r1, ip, asr #8
   11598:	andeq	r8, r2, r0, asr r1
   1159c:	andeq	r7, r1, r4, ror r4
   115a0:	andeq	r8, r2, ip, lsr r1
   115a4:			; <UNDEFINED> instruction: 0x000173bc
   115a8:	muleq	r1, r4, r4
   115ac:	andeq	r7, r1, r0, lsr #10
   115b0:	andeq	r7, r1, r4, ror #10
   115b4:	andeq	r7, r1, ip, lsr #11
   115b8:	ldrdeq	r7, [r1], -ip
   115bc:	andeq	r7, r1, r4, asr #8
   115c0:	andeq	r7, r1, r4, lsl r6
   115c4:	andeq	r7, r1, ip, lsr #12
   115c8:	andeq	r7, r1, r4, asr r6
   115cc:	andeq	r7, r1, r4, ror #12
   115d0:			; <UNDEFINED> instruction: 0x000176b0
   115d4:	andeq	r7, r1, ip, asr #13
   115d8:	andeq	r7, r1, ip, lsl r5
   115dc:	strdeq	r7, [r1], -ip
   115e0:	andeq	r7, r1, r8, ror #12
   115e4:	ldr	r3, [pc, #4]	; 115f0 <close@plt+0x7a4>
   115e8:	str	r0, [r3]
   115ec:	bx	lr
   115f0:	andeq	r8, r2, r4, asr #2
   115f4:	ldr	r3, [pc, #4]	; 11600 <close@plt+0x7b4>
   115f8:	strb	r0, [r3, #4]
   115fc:	bx	lr
   11600:	andeq	r8, r2, r4, asr #2
   11604:	ldr	r3, [pc, #192]	; 116cc <close@plt+0x880>
   11608:	push	{r4, r5, r6, lr}
   1160c:	sub	sp, sp, #8
   11610:	ldr	r0, [r3]
   11614:	bl	16a9c <close@plt+0x5c50>
   11618:	cmp	r0, #0
   1161c:	beq	11640 <close@plt+0x7f4>
   11620:	ldr	r4, [pc, #168]	; 116d0 <close@plt+0x884>
   11624:	ldrb	r3, [r4, #4]
   11628:	cmp	r3, #0
   1162c:	beq	1165c <close@plt+0x810>
   11630:	bl	10d80 <__errno_location@plt>
   11634:	ldr	r3, [r0]
   11638:	cmp	r3, #32
   1163c:	bne	1165c <close@plt+0x810>
   11640:	ldr	r3, [pc, #140]	; 116d4 <close@plt+0x888>
   11644:	ldr	r0, [r3]
   11648:	bl	16a9c <close@plt+0x5c50>
   1164c:	cmp	r0, #0
   11650:	bne	116a4 <close@plt+0x858>
   11654:	add	sp, sp, #8
   11658:	pop	{r4, r5, r6, pc}
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #112]	; 116d8 <close@plt+0x88c>
   11664:	mov	r0, #0
   11668:	bl	10c90 <dcgettext@plt>
   1166c:	ldr	r4, [r4]
   11670:	cmp	r4, #0
   11674:	mov	r5, r0
   11678:	beq	116b0 <close@plt+0x864>
   1167c:	bl	10d80 <__errno_location@plt>
   11680:	ldr	r6, [r0]
   11684:	mov	r0, r4
   11688:	bl	14528 <close@plt+0x36dc>
   1168c:	mov	r1, r6
   11690:	str	r5, [sp]
   11694:	ldr	r2, [pc, #64]	; 116dc <close@plt+0x890>
   11698:	mov	r3, r0
   1169c:	mov	r0, #0
   116a0:	bl	10d08 <error@plt>
   116a4:	ldr	r3, [pc, #52]	; 116e0 <close@plt+0x894>
   116a8:	ldr	r0, [r3]
   116ac:	bl	10c54 <_exit@plt>
   116b0:	bl	10d80 <__errno_location@plt>
   116b4:	mov	r3, r5
   116b8:	ldr	r2, [pc, #36]	; 116e4 <close@plt+0x898>
   116bc:	ldr	r1, [r0]
   116c0:	mov	r0, r4
   116c4:	bl	10d08 <error@plt>
   116c8:	b	116a4 <close@plt+0x858>
   116cc:	andeq	r8, r2, ip, lsr r1
   116d0:	andeq	r8, r2, r4, asr #2
   116d4:	andeq	r8, r2, r8, lsr r1
   116d8:	muleq	r1, r4, r8
   116dc:	andeq	r7, r1, r0, lsr #17
   116e0:	andeq	r8, r2, r4, ror #1
   116e4:	andeq	r7, r1, r4, lsr #17
   116e8:	push	{r1, r2, r3}
   116ec:	push	{r4, r5, r6, r7, lr}
   116f0:	sub	sp, sp, #8
   116f4:	add	r3, sp, #32
   116f8:	ldr	r1, [sp, #28]
   116fc:	str	r3, [sp, #4]
   11700:	cmp	r1, #0
   11704:	beq	1179c <close@plt+0x950>
   11708:	ldr	r2, [pc, #412]	; 118ac <close@plt+0xa60>
   1170c:	mov	r5, r0
   11710:	cmp	r1, r2
   11714:	bne	11760 <close@plt+0x914>
   11718:	ldr	r6, [pc, #400]	; 118b0 <close@plt+0xa64>
   1171c:	ldr	r7, [r3]
   11720:	add	r2, sp, #36	; 0x24
   11724:	ldr	r3, [r6]
   11728:	str	r2, [sp, #4]
   1172c:	cmp	r3, #0
   11730:	mov	r2, r7
   11734:	blt	11860 <close@plt+0xa14>
   11738:	bl	10de0 <fcntl64@plt>
   1173c:	subs	r4, r0, #0
   11740:	blt	117e4 <close@plt+0x998>
   11744:	mov	r3, #1
   11748:	str	r3, [r6]
   1174c:	mov	r0, r4
   11750:	add	sp, sp, #8
   11754:	pop	{r4, r5, r6, r7, lr}
   11758:	add	sp, sp, #12
   1175c:	bx	lr
   11760:	cmp	r1, #11
   11764:	beq	1178c <close@plt+0x940>
   11768:	bgt	117ac <close@plt+0x960>
   1176c:	cmp	r1, #3
   11770:	beq	1178c <close@plt+0x940>
   11774:	ble	118a0 <close@plt+0xa54>
   11778:	cmp	r1, #8
   1177c:	beq	117cc <close@plt+0x980>
   11780:	ble	117cc <close@plt+0x980>
   11784:	cmp	r1, #9
   11788:	bne	117cc <close@plt+0x980>
   1178c:	mov	r0, r5
   11790:	bl	10de0 <fcntl64@plt>
   11794:	mov	r4, r0
   11798:	b	1174c <close@plt+0x900>
   1179c:	ldr	r2, [sp, #32]
   117a0:	bl	10de0 <fcntl64@plt>
   117a4:	mov	r4, r0
   117a8:	b	1174c <close@plt+0x900>
   117ac:	ldr	r3, [pc, #256]	; 118b4 <close@plt+0xa68>
   117b0:	cmp	r1, r3
   117b4:	bgt	11880 <close@plt+0xa34>
   117b8:	cmp	r1, r2
   117bc:	bge	117cc <close@plt+0x980>
   117c0:	sub	r3, r3, #6
   117c4:	cmp	r1, r3
   117c8:	beq	1178c <close@plt+0x940>
   117cc:	ldr	r3, [sp, #4]
   117d0:	mov	r0, r5
   117d4:	ldr	r2, [r3]
   117d8:	bl	10de0 <fcntl64@plt>
   117dc:	mov	r4, r0
   117e0:	b	1174c <close@plt+0x900>
   117e4:	bl	10d80 <__errno_location@plt>
   117e8:	ldr	r3, [r0]
   117ec:	cmp	r3, #22
   117f0:	bne	11744 <close@plt+0x8f8>
   117f4:	mov	r2, r7
   117f8:	mov	r0, r5
   117fc:	mov	r1, #0
   11800:	bl	10de0 <fcntl64@plt>
   11804:	subs	r4, r0, #0
   11808:	blt	1174c <close@plt+0x900>
   1180c:	mvn	r3, #0
   11810:	str	r3, [r6]
   11814:	mov	r1, #1
   11818:	mov	r0, r4
   1181c:	bl	10de0 <fcntl64@plt>
   11820:	subs	r2, r0, #0
   11824:	blt	11840 <close@plt+0x9f4>
   11828:	orr	r2, r2, #1
   1182c:	mov	r1, #2
   11830:	mov	r0, r4
   11834:	bl	10de0 <fcntl64@plt>
   11838:	cmn	r0, #1
   1183c:	bne	1174c <close@plt+0x900>
   11840:	bl	10d80 <__errno_location@plt>
   11844:	mov	r5, r0
   11848:	mov	r0, r4
   1184c:	ldr	r6, [r5]
   11850:	mvn	r4, #0
   11854:	bl	10e4c <close@plt>
   11858:	str	r6, [r5]
   1185c:	b	1174c <close@plt+0x900>
   11860:	mov	r1, #0
   11864:	bl	10de0 <fcntl64@plt>
   11868:	subs	r4, r0, #0
   1186c:	blt	1174c <close@plt+0x900>
   11870:	ldr	r3, [r6]
   11874:	cmn	r3, #1
   11878:	beq	11814 <close@plt+0x9c8>
   1187c:	b	1174c <close@plt+0x900>
   11880:	ldr	r3, [pc, #48]	; 118b8 <close@plt+0xa6c>
   11884:	cmp	r1, r3
   11888:	beq	117cc <close@plt+0x980>
   1188c:	blt	1178c <close@plt+0x940>
   11890:	add	r3, r3, #1
   11894:	cmp	r1, r3
   11898:	bne	117cc <close@plt+0x980>
   1189c:	b	1178c <close@plt+0x940>
   118a0:	cmp	r1, #1
   118a4:	bne	117cc <close@plt+0x980>
   118a8:	b	1178c <close@plt+0x940>
   118ac:	andeq	r0, r0, r6, lsl #8
   118b0:	andeq	r8, r2, ip, asr #2
   118b4:	andeq	r0, r0, r7, lsl #8
   118b8:	andeq	r0, r0, r9, lsl #8
   118bc:	push	{r4, r5, r6, lr}
   118c0:	subs	r4, r0, #0
   118c4:	beq	11938 <close@plt+0xaec>
   118c8:	mov	r1, #47	; 0x2f
   118cc:	bl	10df8 <strrchr@plt>
   118d0:	subs	r5, r0, #0
   118d4:	beq	11924 <close@plt+0xad8>
   118d8:	add	r6, r5, #1
   118dc:	sub	r3, r6, r4
   118e0:	cmp	r3, #6
   118e4:	ble	11924 <close@plt+0xad8>
   118e8:	mov	r2, #7
   118ec:	ldr	r1, [pc, #96]	; 11954 <close@plt+0xb08>
   118f0:	sub	r0, r5, #6
   118f4:	bl	10e28 <strncmp@plt>
   118f8:	cmp	r0, #0
   118fc:	bne	11924 <close@plt+0xad8>
   11900:	mov	r2, #3
   11904:	ldr	r1, [pc, #76]	; 11958 <close@plt+0xb0c>
   11908:	mov	r0, r6
   1190c:	bl	10e28 <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	movne	r4, r6
   11918:	ldreq	r3, [pc, #60]	; 1195c <close@plt+0xb10>
   1191c:	addeq	r4, r5, #4
   11920:	streq	r4, [r3]
   11924:	ldr	r2, [pc, #52]	; 11960 <close@plt+0xb14>
   11928:	ldr	r3, [pc, #52]	; 11964 <close@plt+0xb18>
   1192c:	str	r4, [r2]
   11930:	str	r4, [r3]
   11934:	pop	{r4, r5, r6, pc}
   11938:	ldr	r3, [pc, #40]	; 11968 <close@plt+0xb1c>
   1193c:	mov	r2, #55	; 0x37
   11940:	mov	r1, #1
   11944:	ldr	r3, [r3]
   11948:	ldr	r0, [pc, #28]	; 1196c <close@plt+0xb20>
   1194c:	bl	10ccc <fwrite@plt>
   11950:	bl	10e40 <abort@plt>
   11954:	andeq	r7, r1, r0, ror #17
   11958:	andeq	r7, r1, r8, ror #17
   1195c:	andeq	r8, r2, r8, lsr #2
   11960:	andeq	r8, r2, r0, asr r1
   11964:	andeq	r8, r2, ip, lsr #2
   11968:	andeq	r8, r2, r8, lsr r1
   1196c:	andeq	r7, r1, r8, lsr #17
   11970:	push	{r4, r5, r6, lr}
   11974:	mov	r4, r0
   11978:	mov	r5, r1
   1197c:	bl	16d10 <close@plt+0x5ec4>
   11980:	ldrb	r3, [r0]
   11984:	bic	r3, r3, #32
   11988:	cmp	r3, #85	; 0x55
   1198c:	bne	119ec <close@plt+0xba0>
   11990:	ldrb	r3, [r0, #1]
   11994:	bic	r3, r3, #32
   11998:	cmp	r3, #84	; 0x54
   1199c:	bne	11a28 <close@plt+0xbdc>
   119a0:	ldrb	r3, [r0, #2]
   119a4:	bic	r3, r3, #32
   119a8:	cmp	r3, #70	; 0x46
   119ac:	bne	11a28 <close@plt+0xbdc>
   119b0:	ldrb	r3, [r0, #3]
   119b4:	cmp	r3, #45	; 0x2d
   119b8:	bne	11a28 <close@plt+0xbdc>
   119bc:	ldrb	r3, [r0, #4]
   119c0:	cmp	r3, #56	; 0x38
   119c4:	bne	11a28 <close@plt+0xbdc>
   119c8:	ldrb	r3, [r0, #5]
   119cc:	cmp	r3, #0
   119d0:	bne	11a28 <close@plt+0xbdc>
   119d4:	ldrb	r2, [r4]
   119d8:	ldr	r3, [pc, #152]	; 11a78 <close@plt+0xc2c>
   119dc:	ldr	r0, [pc, #152]	; 11a7c <close@plt+0xc30>
   119e0:	cmp	r2, #96	; 0x60
   119e4:	movne	r0, r3
   119e8:	pop	{r4, r5, r6, pc}
   119ec:	cmp	r3, #71	; 0x47
   119f0:	bne	11a28 <close@plt+0xbdc>
   119f4:	ldrb	r3, [r0, #1]
   119f8:	bic	r3, r3, #32
   119fc:	cmp	r3, #66	; 0x42
   11a00:	bne	11a28 <close@plt+0xbdc>
   11a04:	ldrb	r3, [r0, #2]
   11a08:	cmp	r3, #49	; 0x31
   11a0c:	bne	11a28 <close@plt+0xbdc>
   11a10:	ldrb	r3, [r0, #3]
   11a14:	cmp	r3, #56	; 0x38
   11a18:	bne	11a28 <close@plt+0xbdc>
   11a1c:	ldrb	r3, [r0, #4]
   11a20:	cmp	r3, #48	; 0x30
   11a24:	beq	11a3c <close@plt+0xbf0>
   11a28:	ldr	r3, [pc, #80]	; 11a80 <close@plt+0xc34>
   11a2c:	cmp	r5, #9
   11a30:	ldr	r0, [pc, #76]	; 11a84 <close@plt+0xc38>
   11a34:	movne	r0, r3
   11a38:	pop	{r4, r5, r6, pc}
   11a3c:	ldrb	r3, [r0, #5]
   11a40:	cmp	r3, #51	; 0x33
   11a44:	bne	11a28 <close@plt+0xbdc>
   11a48:	ldrb	r3, [r0, #6]
   11a4c:	cmp	r3, #48	; 0x30
   11a50:	bne	11a28 <close@plt+0xbdc>
   11a54:	ldrb	r3, [r0, #7]
   11a58:	cmp	r3, #0
   11a5c:	bne	11a28 <close@plt+0xbdc>
   11a60:	ldrb	r2, [r4]
   11a64:	ldr	r3, [pc, #28]	; 11a88 <close@plt+0xc3c>
   11a68:	ldr	r0, [pc, #28]	; 11a8c <close@plt+0xc40>
   11a6c:	cmp	r2, #96	; 0x60
   11a70:	movne	r0, r3
   11a74:	pop	{r4, r5, r6, pc}
   11a78:	andeq	r7, r1, r4, asr #18
   11a7c:	andeq	r7, r1, r0, asr #18
   11a80:	andeq	r7, r1, r4, asr r9
   11a84:	andeq	r7, r1, r0, asr r9
   11a88:	andeq	r7, r1, ip, asr #18
   11a8c:	andeq	r7, r1, r8, asr #18
   11a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a94:	sub	sp, sp, #140	; 0x8c
   11a98:	mov	r9, r1
   11a9c:	str	r3, [sp, #24]
   11aa0:	mov	r3, #1
   11aa4:	mov	sl, r0
   11aa8:	str	r2, [sp, #44]	; 0x2c
   11aac:	str	r3, [sp, #28]
   11ab0:	bl	10ce4 <__ctype_get_mb_cur_max@plt>
   11ab4:	ldr	r3, [sp, #180]	; 0xb4
   11ab8:	mov	fp, r9
   11abc:	mov	r9, sl
   11ac0:	lsr	r3, r3, #1
   11ac4:	and	r3, r3, #1
   11ac8:	str	r3, [sp, #40]	; 0x28
   11acc:	ldr	r3, [sp, #180]	; 0xb4
   11ad0:	mov	r2, #0
   11ad4:	and	r3, r3, #4
   11ad8:	str	r3, [sp, #100]	; 0x64
   11adc:	ldr	r3, [sp, #180]	; 0xb4
   11ae0:	str	r2, [sp, #76]	; 0x4c
   11ae4:	and	r3, r3, #1
   11ae8:	str	r3, [sp, #96]	; 0x60
   11aec:	str	r2, [sp, #36]	; 0x24
   11af0:	str	r2, [sp, #56]	; 0x38
   11af4:	str	r2, [sp, #68]	; 0x44
   11af8:	str	r2, [sp, #72]	; 0x48
   11afc:	str	r2, [sp, #84]	; 0x54
   11b00:	str	r0, [sp, #80]	; 0x50
   11b04:	ldr	r3, [sp, #176]	; 0xb0
   11b08:	cmp	r3, #10
   11b0c:	ldrls	pc, [pc, r3, lsl #2]
   11b10:	b	12ce8 <close@plt+0x1e9c>
   11b14:	andeq	r1, r1, r0, asr #22
   11b18:	andeq	r1, r1, r0, ror #28
   11b1c:			; <UNDEFINED> instruction: 0x00011fb8
   11b20:	muleq	r1, r4, lr
   11b24:	andeq	r2, r1, ip
   11b28:	andeq	r1, r1, ip, ror #31
   11b2c:			; <UNDEFINED> instruction: 0x00011eb4
   11b30:	ldrdeq	r1, [r1], -r8
   11b34:	andeq	r1, r1, r0, lsl #30
   11b38:	andeq	r1, r1, r0, lsl #30
   11b3c:	andeq	r1, r1, r0, lsl #30
   11b40:	mov	r3, #0
   11b44:	ldr	r1, [sp, #56]	; 0x38
   11b48:	ldr	r2, [sp, #176]	; 0xb0
   11b4c:	ldr	lr, [sp, #176]	; 0xb0
   11b50:	mov	r8, r3
   11b54:	mov	ip, r3
   11b58:	str	r3, [sp, #40]	; 0x28
   11b5c:	mov	r3, r1
   11b60:	cmp	r2, #2
   11b64:	moveq	r3, #0
   11b68:	andne	r3, r3, #1
   11b6c:	mov	r0, r3
   11b70:	str	r3, [sp, #92]	; 0x5c
   11b74:	ldr	r3, [sp, #68]	; 0x44
   11b78:	sub	lr, lr, #2
   11b7c:	adds	r2, r3, #0
   11b80:	movne	r2, #1
   11b84:	and	r3, r1, ip
   11b88:	and	r3, r2, r3
   11b8c:	clz	lr, lr
   11b90:	str	r3, [sp, #88]	; 0x58
   11b94:	lsr	lr, lr, #5
   11b98:	mov	r3, ip
   11b9c:	and	r3, r3, lr
   11ba0:	mov	sl, #0
   11ba4:	and	r0, r2, r0
   11ba8:	str	r3, [sp, #64]	; 0x40
   11bac:	eor	r3, r1, #1
   11bb0:	str	lr, [sp, #52]	; 0x34
   11bb4:	str	r0, [sp, #48]	; 0x30
   11bb8:	str	r3, [sp, #60]	; 0x3c
   11bbc:	ldr	r3, [sp, #24]
   11bc0:	cmn	r3, #1
   11bc4:	beq	120f4 <close@plt+0x12a8>
   11bc8:	subs	r7, r3, sl
   11bcc:	movne	r7, #1
   11bd0:	cmp	r7, #0
   11bd4:	beq	1210c <close@plt+0x12c0>
   11bd8:	ldr	r3, [sp, #48]	; 0x30
   11bdc:	cmp	r3, #0
   11be0:	beq	12478 <close@plt+0x162c>
   11be4:	ldr	r2, [sp, #68]	; 0x44
   11be8:	ldr	r1, [sp, #24]
   11bec:	cmp	r2, #1
   11bf0:	mov	r3, r2
   11bf4:	movls	r3, #0
   11bf8:	movhi	r3, #1
   11bfc:	cmn	r1, #1
   11c00:	movne	r3, #0
   11c04:	cmp	r3, #0
   11c08:	add	r4, sl, r2
   11c0c:	beq	11c1c <close@plt+0xdd0>
   11c10:	ldr	r0, [sp, #44]	; 0x2c
   11c14:	bl	10d74 <strlen@plt>
   11c18:	str	r0, [sp, #24]
   11c1c:	ldr	r3, [sp, #24]
   11c20:	cmp	r3, r4
   11c24:	ldr	r3, [sp, #44]	; 0x2c
   11c28:	add	r5, r3, sl
   11c2c:	bcc	12480 <close@plt+0x1634>
   11c30:	mov	r0, r5
   11c34:	ldr	r2, [sp, #68]	; 0x44
   11c38:	ldr	r1, [sp, #72]	; 0x48
   11c3c:	bl	10c78 <memcmp@plt>
   11c40:	cmp	r0, #0
   11c44:	bne	12480 <close@plt+0x1634>
   11c48:	ldr	r3, [sp, #40]	; 0x28
   11c4c:	cmp	r3, #0
   11c50:	bne	12e3c <close@plt+0x1ff0>
   11c54:	ldrb	r4, [r5]
   11c58:	cmp	r4, #126	; 0x7e
   11c5c:	ldrls	pc, [pc, r4, lsl #2]
   11c60:	b	12d78 <close@plt+0x1f2c>
   11c64:	andeq	r2, r1, r8, lsr r3
   11c68:	andeq	r2, r1, r8, ror sp
   11c6c:	andeq	r2, r1, r8, ror sp
   11c70:	andeq	r2, r1, r8, ror sp
   11c74:	andeq	r2, r1, r8, ror sp
   11c78:	andeq	r2, r1, r8, ror sp
   11c7c:	andeq	r2, r1, r8, ror sp
   11c80:	andeq	r2, r1, r4, lsr #6
   11c84:	andeq	r2, r1, r0, lsl r3
   11c88:	andeq	r2, r1, ip, ror #5
   11c8c:	andeq	r2, r1, ip, asr #5
   11c90:	strdeq	r2, [r1], -ip
   11c94:	andeq	r2, r1, r4, lsr r2
   11c98:	andeq	r2, r1, r8, ror #8
   11c9c:	andeq	r2, r1, r8, ror sp
   11ca0:	andeq	r2, r1, r8, ror sp
   11ca4:	andeq	r2, r1, r8, ror sp
   11ca8:	andeq	r2, r1, r8, ror sp
   11cac:	andeq	r2, r1, r8, ror sp
   11cb0:	andeq	r2, r1, r8, ror sp
   11cb4:	andeq	r2, r1, r8, ror sp
   11cb8:	andeq	r2, r1, r8, ror sp
   11cbc:	andeq	r2, r1, r8, ror sp
   11cc0:	andeq	r2, r1, r8, ror sp
   11cc4:	andeq	r2, r1, r8, ror sp
   11cc8:	andeq	r2, r1, r8, ror sp
   11ccc:	andeq	r2, r1, r8, ror sp
   11cd0:	andeq	r2, r1, r8, ror sp
   11cd4:	andeq	r2, r1, r8, ror sp
   11cd8:	andeq	r2, r1, r8, ror sp
   11cdc:	andeq	r2, r1, r8, ror sp
   11ce0:	andeq	r2, r1, r8, ror sp
   11ce4:	andeq	r2, r1, r8, asr r4
   11ce8:	andeq	r2, r1, r8, lsr r4
   11cec:	andeq	r2, r1, r8, lsr r4
   11cf0:	andeq	r2, r1, r8, lsl r4
   11cf4:	andeq	r2, r1, r8, lsr r4
   11cf8:	andeq	r2, r1, r4, lsr #4
   11cfc:	andeq	r2, r1, r8, lsr r4
   11d00:	andeq	r2, r1, r0, lsl #4
   11d04:	andeq	r2, r1, r8, lsr r4
   11d08:	andeq	r2, r1, r8, lsr r4
   11d0c:	andeq	r2, r1, r8, lsr r4
   11d10:	andeq	r2, r1, r4, lsr #4
   11d14:	andeq	r2, r1, r4, lsr #4
   11d18:	andeq	r2, r1, r4, lsr #4
   11d1c:	andeq	r2, r1, r4, lsr #4
   11d20:	andeq	r2, r1, r4, lsr #4
   11d24:	andeq	r2, r1, r4, lsr #4
   11d28:	andeq	r2, r1, r4, lsr #4
   11d2c:	andeq	r2, r1, r4, lsr #4
   11d30:	andeq	r2, r1, r4, lsr #4
   11d34:	andeq	r2, r1, r4, lsr #4
   11d38:	andeq	r2, r1, r4, lsr #4
   11d3c:	andeq	r2, r1, r4, lsr #4
   11d40:	andeq	r2, r1, r4, lsr #4
   11d44:	andeq	r2, r1, r4, lsr #4
   11d48:	andeq	r2, r1, r4, lsr #4
   11d4c:	andeq	r2, r1, r4, lsr #4
   11d50:	andeq	r2, r1, r8, lsr r4
   11d54:	andeq	r2, r1, r8, lsr r4
   11d58:	andeq	r2, r1, r8, lsr r4
   11d5c:	andeq	r2, r1, r8, lsr r4
   11d60:			; <UNDEFINED> instruction: 0x000121b0
   11d64:	andeq	r2, r1, r8, ror sp
   11d68:	andeq	r2, r1, r4, lsr #4
   11d6c:	andeq	r2, r1, r4, lsr #4
   11d70:	andeq	r2, r1, r4, lsr #4
   11d74:	andeq	r2, r1, r4, lsr #4
   11d78:	andeq	r2, r1, r4, lsr #4
   11d7c:	andeq	r2, r1, r4, lsr #4
   11d80:	andeq	r2, r1, r4, lsr #4
   11d84:	andeq	r2, r1, r4, lsr #4
   11d88:	andeq	r2, r1, r4, lsr #4
   11d8c:	andeq	r2, r1, r4, lsr #4
   11d90:	andeq	r2, r1, r4, lsr #4
   11d94:	andeq	r2, r1, r4, lsr #4
   11d98:	andeq	r2, r1, r4, lsr #4
   11d9c:	andeq	r2, r1, r4, lsr #4
   11da0:	andeq	r2, r1, r4, lsr #4
   11da4:	andeq	r2, r1, r4, lsr #4
   11da8:	andeq	r2, r1, r4, lsr #4
   11dac:	andeq	r2, r1, r4, lsr #4
   11db0:	andeq	r2, r1, r4, lsr #4
   11db4:	andeq	r2, r1, r4, lsr #4
   11db8:	andeq	r2, r1, r4, lsr #4
   11dbc:	andeq	r2, r1, r4, lsr #4
   11dc0:	andeq	r2, r1, r4, lsr #4
   11dc4:	andeq	r2, r1, r4, lsr #4
   11dc8:	andeq	r2, r1, r4, lsr #4
   11dcc:	andeq	r2, r1, r4, lsr #4
   11dd0:	andeq	r2, r1, r8, lsr r4
   11dd4:	andeq	r2, r1, ip, ror r1
   11dd8:	andeq	r2, r1, r4, lsr #4
   11ddc:	andeq	r2, r1, r8, lsr r4
   11de0:	andeq	r2, r1, r4, lsr #4
   11de4:	andeq	r2, r1, r8, lsr r4
   11de8:	andeq	r2, r1, r4, lsr #4
   11dec:	andeq	r2, r1, r4, lsr #4
   11df0:	andeq	r2, r1, r4, lsr #4
   11df4:	andeq	r2, r1, r4, lsr #4
   11df8:	andeq	r2, r1, r4, lsr #4
   11dfc:	andeq	r2, r1, r4, lsr #4
   11e00:	andeq	r2, r1, r4, lsr #4
   11e04:	andeq	r2, r1, r4, lsr #4
   11e08:	andeq	r2, r1, r4, lsr #4
   11e0c:	andeq	r2, r1, r4, lsr #4
   11e10:	andeq	r2, r1, r4, lsr #4
   11e14:	andeq	r2, r1, r4, lsr #4
   11e18:	andeq	r2, r1, r4, lsr #4
   11e1c:	andeq	r2, r1, r4, lsr #4
   11e20:	andeq	r2, r1, r4, lsr #4
   11e24:	andeq	r2, r1, r4, lsr #4
   11e28:	andeq	r2, r1, r4, lsr #4
   11e2c:	andeq	r2, r1, r4, lsr #4
   11e30:	andeq	r2, r1, r4, lsr #4
   11e34:	andeq	r2, r1, r4, lsr #4
   11e38:	andeq	r2, r1, r4, lsr #4
   11e3c:	andeq	r2, r1, r4, lsr #4
   11e40:	andeq	r2, r1, r4, lsr #4
   11e44:	andeq	r2, r1, r4, lsr #4
   11e48:	andeq	r2, r1, r4, lsr #4
   11e4c:	andeq	r2, r1, r4, lsr #4
   11e50:	andeq	r2, r1, r4, lsr r0
   11e54:	andeq	r2, r1, r8, lsr r4
   11e58:	andeq	r2, r1, r4, lsr r0
   11e5c:	andeq	r2, r1, r8, lsl r4
   11e60:	mov	r3, #1
   11e64:	str	r3, [sp, #40]	; 0x28
   11e68:	str	r3, [sp, #68]	; 0x44
   11e6c:	mov	r8, #0
   11e70:	ldr	r3, [pc, #4056]	; 12e50 <close@plt+0x2004>
   11e74:	str	r3, [sp, #72]	; 0x48
   11e78:	mov	r3, #2
   11e7c:	str	r3, [sp, #176]	; 0xb0
   11e80:	ldr	r1, [sp, #56]	; 0x38
   11e84:	mov	r2, r3
   11e88:	ldr	ip, [sp, #40]	; 0x28
   11e8c:	mov	lr, r3
   11e90:	b	11b5c <close@plt+0xd10>
   11e94:	mov	r3, #1
   11e98:	str	r3, [sp, #56]	; 0x38
   11e9c:	str	r3, [sp, #68]	; 0x44
   11ea0:	str	r3, [sp, #40]	; 0x28
   11ea4:	ldr	r3, [pc, #4004]	; 12e50 <close@plt+0x2004>
   11ea8:	mov	r8, #0
   11eac:	str	r3, [sp, #72]	; 0x48
   11eb0:	b	11e78 <close@plt+0x102c>
   11eb4:	mov	r3, #1
   11eb8:	str	r3, [sp, #56]	; 0x38
   11ebc:	str	r3, [sp, #68]	; 0x44
   11ec0:	str	r3, [sp, #40]	; 0x28
   11ec4:	ldr	r3, [pc, #3976]	; 12e54 <close@plt+0x2008>
   11ec8:	mov	r8, #0
   11ecc:	str	r3, [sp, #72]	; 0x48
   11ed0:	mov	r3, #5
   11ed4:	b	11e7c <close@plt+0x1030>
   11ed8:	mov	r3, #0
   11edc:	str	r3, [sp, #40]	; 0x28
   11ee0:	mov	r3, #1
   11ee4:	str	r3, [sp, #56]	; 0x38
   11ee8:	mov	r8, #0
   11eec:	mov	r1, r3
   11ef0:	ldr	r2, [sp, #176]	; 0xb0
   11ef4:	ldr	ip, [sp, #40]	; 0x28
   11ef8:	ldr	lr, [sp, #176]	; 0xb0
   11efc:	b	11b5c <close@plt+0xd10>
   11f00:	ldr	r3, [sp, #176]	; 0xb0
   11f04:	cmp	r3, #10
   11f08:	beq	11f4c <close@plt+0x1100>
   11f0c:	mov	r2, #5
   11f10:	ldr	r1, [pc, #3904]	; 12e58 <close@plt+0x200c>
   11f14:	mov	r0, #0
   11f18:	bl	10c90 <dcgettext@plt>
   11f1c:	ldr	r2, [pc, #3892]	; 12e58 <close@plt+0x200c>
   11f20:	cmp	r0, r2
   11f24:	str	r0, [sp, #188]	; 0xbc
   11f28:	beq	12fe4 <close@plt+0x2198>
   11f2c:	mov	r2, #5
   11f30:	ldr	r1, [pc, #3864]	; 12e50 <close@plt+0x2004>
   11f34:	mov	r0, #0
   11f38:	bl	10c90 <dcgettext@plt>
   11f3c:	ldr	r2, [pc, #3852]	; 12e50 <close@plt+0x2004>
   11f40:	cmp	r0, r2
   11f44:	str	r0, [sp, #192]	; 0xc0
   11f48:	beq	12fd4 <close@plt+0x2188>
   11f4c:	ldr	r8, [sp, #40]	; 0x28
   11f50:	cmp	r8, #0
   11f54:	movne	r8, #0
   11f58:	bne	11f88 <close@plt+0x113c>
   11f5c:	ldr	r3, [sp, #188]	; 0xbc
   11f60:	ldrb	r3, [r3]
   11f64:	cmp	r3, #0
   11f68:	beq	11f88 <close@plt+0x113c>
   11f6c:	ldr	r2, [sp, #188]	; 0xbc
   11f70:	cmp	fp, r8
   11f74:	strbhi	r3, [r9, r8]
   11f78:	ldrb	r3, [r2, #1]!
   11f7c:	add	r8, r8, #1
   11f80:	cmp	r3, #0
   11f84:	bne	11f70 <close@plt+0x1124>
   11f88:	ldr	r0, [sp, #192]	; 0xc0
   11f8c:	bl	10d74 <strlen@plt>
   11f90:	ldr	r3, [sp, #192]	; 0xc0
   11f94:	ldr	r2, [sp, #176]	; 0xb0
   11f98:	str	r3, [sp, #72]	; 0x48
   11f9c:	mov	r3, #1
   11fa0:	str	r3, [sp, #56]	; 0x38
   11fa4:	mov	r1, r3
   11fa8:	ldr	ip, [sp, #40]	; 0x28
   11fac:	ldr	lr, [sp, #176]	; 0xb0
   11fb0:	str	r0, [sp, #68]	; 0x44
   11fb4:	b	11b5c <close@plt+0xd10>
   11fb8:	ldr	r3, [sp, #40]	; 0x28
   11fbc:	cmp	r3, #0
   11fc0:	beq	12c68 <close@plt+0x1e1c>
   11fc4:	mov	r3, #1
   11fc8:	str	r3, [sp, #68]	; 0x44
   11fcc:	ldr	r3, [pc, #3708]	; 12e50 <close@plt+0x2004>
   11fd0:	str	r3, [sp, #72]	; 0x48
   11fd4:	mov	r8, #0
   11fd8:	ldr	r1, [sp, #56]	; 0x38
   11fdc:	ldr	r2, [sp, #176]	; 0xb0
   11fe0:	ldr	ip, [sp, #40]	; 0x28
   11fe4:	ldr	lr, [sp, #176]	; 0xb0
   11fe8:	b	11b5c <close@plt+0xd10>
   11fec:	ldr	r3, [sp, #40]	; 0x28
   11ff0:	cmp	r3, #0
   11ff4:	beq	12cec <close@plt+0x1ea0>
   11ff8:	str	r3, [sp, #56]	; 0x38
   11ffc:	mov	r3, #1
   12000:	str	r3, [sp, #68]	; 0x44
   12004:	ldr	r3, [pc, #3656]	; 12e54 <close@plt+0x2008>
   12008:	b	11fd0 <close@plt+0x1184>
   1200c:	ldr	r3, [sp, #40]	; 0x28
   12010:	cmp	r3, #0
   12014:	mov	r3, #1
   12018:	streq	r3, [sp, #56]	; 0x38
   1201c:	beq	12c68 <close@plt+0x1e1c>
   12020:	str	r3, [sp, #68]	; 0x44
   12024:	ldr	r3, [pc, #3620]	; 12e50 <close@plt+0x2004>
   12028:	mov	r8, #0
   1202c:	str	r3, [sp, #72]	; 0x48
   12030:	b	11e78 <close@plt+0x102c>
   12034:	ldr	r3, [sp, #24]
   12038:	ldr	r6, [sp, #48]	; 0x30
   1203c:	cmn	r3, #1
   12040:	beq	1269c <close@plt+0x1850>
   12044:	subs	r3, r3, #1
   12048:	movne	r3, #1
   1204c:	cmp	r3, #0
   12050:	beq	1241c <close@plt+0x15d0>
   12054:	ldr	r1, [sp, #52]	; 0x34
   12058:	mov	r7, r3
   1205c:	mov	r3, #0
   12060:	str	r3, [sp, #32]
   12064:	ldr	r3, [sp, #60]	; 0x3c
   12068:	orr	r2, r1, r3
   1206c:	ldr	r3, [sp, #40]	; 0x28
   12070:	eor	r2, r2, #1
   12074:	orr	r2, r3, r2
   12078:	tst	r2, #255	; 0xff
   1207c:	bne	129a0 <close@plt+0x1b54>
   12080:	cmp	r6, #0
   12084:	bne	12260 <close@plt+0x1414>
   12088:	ldr	r3, [sp, #36]	; 0x24
   1208c:	add	sl, sl, #1
   12090:	and	r3, r3, r7
   12094:	uxtb	r6, r3
   12098:	cmp	r6, #0
   1209c:	beq	120c8 <close@plt+0x127c>
   120a0:	cmp	fp, r8
   120a4:	movhi	r3, #39	; 0x27
   120a8:	strbhi	r3, [r9, r8]
   120ac:	add	r3, r8, #1
   120b0:	cmp	fp, r3
   120b4:	movhi	r2, #39	; 0x27
   120b8:	add	r8, r8, #2
   120bc:	strbhi	r2, [r9, r3]
   120c0:	mov	r3, #0
   120c4:	str	r3, [sp, #36]	; 0x24
   120c8:	ldr	r2, [sp, #32]
   120cc:	cmp	r8, fp
   120d0:	ldr	r3, [sp, #28]
   120d4:	strbcc	r4, [r9, r8]
   120d8:	cmp	r2, #0
   120dc:	moveq	r3, #0
   120e0:	str	r3, [sp, #28]
   120e4:	ldr	r3, [sp, #24]
   120e8:	add	r8, r8, #1
   120ec:	cmn	r3, #1
   120f0:	bne	11bc8 <close@plt+0xd7c>
   120f4:	ldr	r3, [sp, #44]	; 0x2c
   120f8:	ldrb	r3, [r3, sl]
   120fc:	adds	r7, r3, #0
   12100:	movne	r7, #1
   12104:	cmp	r7, #0
   12108:	bne	11bd8 <close@plt+0xd8c>
   1210c:	ldr	r3, [sp, #64]	; 0x40
   12110:	cmp	r8, #0
   12114:	movne	r3, #0
   12118:	andeq	r3, r3, #1
   1211c:	cmp	r3, #0
   12120:	str	r3, [sp, #64]	; 0x40
   12124:	bne	12bc8 <close@plt+0x1d7c>
   12128:	ldr	r3, [sp, #40]	; 0x28
   1212c:	ldr	r2, [sp, #52]	; 0x34
   12130:	eor	r3, r3, #1
   12134:	ands	r2, r2, r3
   12138:	beq	12ff4 <close@plt+0x21a8>
   1213c:	ldr	r3, [sp, #76]	; 0x4c
   12140:	cmp	r3, #0
   12144:	beq	12fc4 <close@plt+0x2178>
   12148:	ldr	r3, [sp, #28]
   1214c:	cmp	r3, #0
   12150:	bne	12f80 <close@plt+0x2134>
   12154:	ldr	r2, [sp, #84]	; 0x54
   12158:	clz	r3, fp
   1215c:	cmp	r2, #0
   12160:	lsr	r3, r3, #5
   12164:	moveq	r3, #0
   12168:	cmp	r3, #0
   1216c:	beq	12f20 <close@plt+0x20d4>
   12170:	mov	fp, r2
   12174:	str	r3, [sp, #76]	; 0x4c
   12178:	b	11b04 <close@plt+0xcb8>
   1217c:	ldr	r3, [sp, #176]	; 0xb0
   12180:	ldr	r6, [sp, #48]	; 0x30
   12184:	cmp	r3, #2
   12188:	beq	126c0 <close@plt+0x1874>
   1218c:	ldr	r3, [sp, #88]	; 0x58
   12190:	cmp	r3, #0
   12194:	beq	12c44 <close@plt+0x1df8>
   12198:	mov	r3, #0
   1219c:	add	sl, sl, #1
   121a0:	ldr	r6, [sp, #36]	; 0x24
   121a4:	str	r3, [sp, #32]
   121a8:	mov	r4, #92	; 0x5c
   121ac:	b	12098 <close@plt+0x124c>
   121b0:	ldr	r3, [sp, #176]	; 0xb0
   121b4:	ldr	r6, [sp, #48]	; 0x30
   121b8:	cmp	r3, #2
   121bc:	beq	126f0 <close@plt+0x18a4>
   121c0:	cmp	r3, #5
   121c4:	bne	12c54 <close@plt+0x1e08>
   121c8:	ldr	r3, [sp, #100]	; 0x64
   121cc:	cmp	r3, #0
   121d0:	beq	12cb8 <close@plt+0x1e6c>
   121d4:	ldr	r2, [sp, #24]
   121d8:	add	r3, sl, #2
   121dc:	cmp	r2, r3
   121e0:	bls	121f0 <close@plt+0x13a4>
   121e4:	ldrb	r4, [r5, #1]
   121e8:	cmp	r4, #63	; 0x3f
   121ec:	beq	12e60 <close@plt+0x2014>
   121f0:	mov	r1, #0
   121f4:	str	r1, [sp, #32]
   121f8:	mov	r4, #63	; 0x3f
   121fc:	b	12064 <close@plt+0x1218>
   12200:	ldr	r3, [sp, #176]	; 0xb0
   12204:	ldr	r6, [sp, #48]	; 0x30
   12208:	cmp	r3, #2
   1220c:	beq	1271c <close@plt+0x18d0>
   12210:	str	r7, [sp, #32]
   12214:	str	r7, [sp, #76]	; 0x4c
   12218:	mov	r1, #0
   1221c:	mov	r4, #39	; 0x27
   12220:	b	12064 <close@plt+0x1218>
   12224:	ldr	r6, [sp, #48]	; 0x30
   12228:	ldr	r1, [sp, #52]	; 0x34
   1222c:	str	r7, [sp, #32]
   12230:	b	12064 <close@plt+0x1218>
   12234:	ldr	r6, [sp, #48]	; 0x30
   12238:	ldr	r1, [sp, #52]	; 0x34
   1223c:	mov	r4, #12
   12240:	mov	r3, #102	; 0x66
   12244:	ldr	r2, [sp, #56]	; 0x38
   12248:	cmp	r2, #0
   1224c:	streq	r2, [sp, #32]
   12250:	beq	12064 <close@plt+0x1218>
   12254:	mov	r4, r3
   12258:	mov	r3, #0
   1225c:	str	r3, [sp, #32]
   12260:	ldr	r3, [sp, #40]	; 0x28
   12264:	cmp	r3, #0
   12268:	bne	129d8 <close@plt+0x1b8c>
   1226c:	ldr	r3, [sp, #36]	; 0x24
   12270:	eor	r3, r3, #1
   12274:	and	r3, r3, r1
   12278:	ands	r3, r3, #255	; 0xff
   1227c:	beq	122b4 <close@plt+0x1468>
   12280:	cmp	fp, r8
   12284:	movhi	r2, #39	; 0x27
   12288:	strbhi	r2, [r9, r8]
   1228c:	add	r2, r8, #1
   12290:	cmp	fp, r2
   12294:	movhi	r1, #36	; 0x24
   12298:	strbhi	r1, [r9, r2]
   1229c:	add	r2, r8, #2
   122a0:	cmp	fp, r2
   122a4:	add	r8, r8, #3
   122a8:	movhi	r1, #39	; 0x27
   122ac:	strbhi	r1, [r9, r2]
   122b0:	str	r3, [sp, #36]	; 0x24
   122b4:	cmp	fp, r8
   122b8:	movhi	r3, #92	; 0x5c
   122bc:	strbhi	r3, [r9, r8]
   122c0:	add	sl, sl, #1
   122c4:	add	r8, r8, #1
   122c8:	b	120c8 <close@plt+0x127c>
   122cc:	ldr	r6, [sp, #48]	; 0x30
   122d0:	mov	r4, #10
   122d4:	mov	r3, #110	; 0x6e
   122d8:	ldr	r2, [sp, #64]	; 0x40
   122dc:	cmp	r2, #0
   122e0:	bne	12d60 <close@plt+0x1f14>
   122e4:	ldr	r1, [sp, #52]	; 0x34
   122e8:	b	12244 <close@plt+0x13f8>
   122ec:	ldr	r6, [sp, #48]	; 0x30
   122f0:	ldr	r1, [sp, #52]	; 0x34
   122f4:	mov	r3, #116	; 0x74
   122f8:	b	12244 <close@plt+0x13f8>
   122fc:	ldr	r6, [sp, #48]	; 0x30
   12300:	ldr	r1, [sp, #52]	; 0x34
   12304:	mov	r4, #11
   12308:	mov	r3, #118	; 0x76
   1230c:	b	12244 <close@plt+0x13f8>
   12310:	ldr	r6, [sp, #48]	; 0x30
   12314:	ldr	r1, [sp, #52]	; 0x34
   12318:	mov	r4, #8
   1231c:	mov	r3, #98	; 0x62
   12320:	b	12244 <close@plt+0x13f8>
   12324:	ldr	r6, [sp, #48]	; 0x30
   12328:	ldr	r1, [sp, #52]	; 0x34
   1232c:	mov	r4, #7
   12330:	mov	r3, #97	; 0x61
   12334:	b	12244 <close@plt+0x13f8>
   12338:	ldr	r3, [sp, #56]	; 0x38
   1233c:	ldr	r6, [sp, #48]	; 0x30
   12340:	cmp	r3, #0
   12344:	beq	12808 <close@plt+0x19bc>
   12348:	ldr	r3, [sp, #40]	; 0x28
   1234c:	cmp	r3, #0
   12350:	bne	12e3c <close@plt+0x1ff0>
   12354:	ldr	r3, [sp, #36]	; 0x24
   12358:	ldr	r2, [sp, #52]	; 0x34
   1235c:	eor	r3, r3, #1
   12360:	ands	r3, r2, r3
   12364:	moveq	r2, r8
   12368:	beq	123a0 <close@plt+0x1554>
   1236c:	cmp	fp, r8
   12370:	movhi	r2, #39	; 0x27
   12374:	strbhi	r2, [r9, r8]
   12378:	add	r2, r8, #1
   1237c:	cmp	fp, r2
   12380:	movhi	r1, #36	; 0x24
   12384:	strbhi	r1, [r9, r2]
   12388:	add	r2, r8, #2
   1238c:	cmp	fp, r2
   12390:	movhi	r1, #39	; 0x27
   12394:	strbhi	r1, [r9, r2]
   12398:	add	r2, r8, #3
   1239c:	str	r3, [sp, #36]	; 0x24
   123a0:	cmp	fp, r2
   123a4:	movhi	r3, #92	; 0x5c
   123a8:	strbhi	r3, [r9, r2]
   123ac:	ldr	r3, [sp, #92]	; 0x5c
   123b0:	add	r8, r2, #1
   123b4:	cmp	r3, #0
   123b8:	beq	12d3c <close@plt+0x1ef0>
   123bc:	ldr	r1, [sp, #24]
   123c0:	add	r3, sl, #1
   123c4:	cmp	r1, r3
   123c8:	bls	12400 <close@plt+0x15b4>
   123cc:	ldr	r1, [sp, #44]	; 0x2c
   123d0:	ldrb	r3, [r1, r3]
   123d4:	sub	r3, r3, #48	; 0x30
   123d8:	cmp	r3, #9
   123dc:	bhi	12400 <close@plt+0x15b4>
   123e0:	cmp	fp, r8
   123e4:	movhi	r3, #48	; 0x30
   123e8:	strbhi	r3, [r9, r8]
   123ec:	add	r3, r2, #2
   123f0:	cmp	fp, r3
   123f4:	add	r8, r2, #3
   123f8:	movhi	r1, #48	; 0x30
   123fc:	strbhi	r1, [r9, r3]
   12400:	ldr	r3, [sp, #40]	; 0x28
   12404:	ldr	r1, [sp, #52]	; 0x34
   12408:	mov	r7, r3
   1240c:	str	r3, [sp, #32]
   12410:	mov	r4, #48	; 0x30
   12414:	b	12064 <close@plt+0x1218>
   12418:	ldr	r6, [sp, #48]	; 0x30
   1241c:	cmp	sl, #0
   12420:	streq	r7, [sp, #32]
   12424:	beq	12444 <close@plt+0x15f8>
   12428:	mov	r3, #0
   1242c:	ldr	r1, [sp, #52]	; 0x34
   12430:	str	r3, [sp, #32]
   12434:	b	12064 <close@plt+0x1218>
   12438:	ldr	r6, [sp, #48]	; 0x30
   1243c:	mov	r3, #0
   12440:	str	r3, [sp, #32]
   12444:	ldr	r3, [sp, #64]	; 0x40
   12448:	cmp	r3, #0
   1244c:	bne	12bc8 <close@plt+0x1d7c>
   12450:	ldr	r1, [sp, #52]	; 0x34
   12454:	b	12064 <close@plt+0x1218>
   12458:	ldr	r3, [sp, #48]	; 0x30
   1245c:	mov	r6, r3
   12460:	str	r3, [sp, #32]
   12464:	b	12444 <close@plt+0x15f8>
   12468:	ldr	r6, [sp, #48]	; 0x30
   1246c:	mov	r4, #13
   12470:	mov	r3, #114	; 0x72
   12474:	b	122d8 <close@plt+0x148c>
   12478:	ldr	r3, [sp, #44]	; 0x2c
   1247c:	add	r5, r3, sl
   12480:	ldrb	r4, [r5]
   12484:	cmp	r4, #126	; 0x7e
   12488:	ldrls	pc, [pc, r4, lsl #2]
   1248c:	b	12828 <close@plt+0x19dc>
   12490:	strdeq	r2, [r1], -r8
   12494:	andeq	r2, r1, r8, lsr #16
   12498:	andeq	r2, r1, r8, lsr #16
   1249c:	andeq	r2, r1, r8, lsr #16
   124a0:	andeq	r2, r1, r8, lsr #16
   124a4:	andeq	r2, r1, r8, lsr #16
   124a8:	andeq	r2, r1, r8, lsr #16
   124ac:	strdeq	r2, [r1], -r0
   124b0:	andeq	r2, r1, r8, ror #15
   124b4:	ldrdeq	r2, [r1], -ip
   124b8:	ldrdeq	r2, [r1], -r4
   124bc:	andeq	r2, r1, ip, asr #15
   124c0:	andeq	r2, r1, r4, asr #15
   124c4:			; <UNDEFINED> instruction: 0x000127bc
   124c8:	andeq	r2, r1, r8, lsr #16
   124cc:	andeq	r2, r1, r8, lsr #16
   124d0:	andeq	r2, r1, r8, lsr #16
   124d4:	andeq	r2, r1, r8, lsr #16
   124d8:	andeq	r2, r1, r8, lsr #16
   124dc:	andeq	r2, r1, r8, lsr #16
   124e0:	andeq	r2, r1, r8, lsr #16
   124e4:	andeq	r2, r1, r8, lsr #16
   124e8:	andeq	r2, r1, r8, lsr #16
   124ec:	andeq	r2, r1, r8, lsr #16
   124f0:	andeq	r2, r1, r8, lsr #16
   124f4:	andeq	r2, r1, r8, lsr #16
   124f8:	andeq	r2, r1, r8, lsr #16
   124fc:	andeq	r2, r1, r8, lsr #16
   12500:	andeq	r2, r1, r8, lsr #16
   12504:	andeq	r2, r1, r8, lsr #16
   12508:	andeq	r2, r1, r8, lsr #16
   1250c:	andeq	r2, r1, r8, lsr #16
   12510:			; <UNDEFINED> instruction: 0x000127b0
   12514:	andeq	r2, r1, r8, lsr #15
   12518:	andeq	r2, r1, r8, lsr #15
   1251c:	andeq	r2, r1, r0, lsr #15
   12520:	andeq	r2, r1, r8, lsr #15
   12524:	muleq	r1, r8, r7
   12528:	andeq	r2, r1, r8, lsr #15
   1252c:	andeq	r2, r1, ip, lsl #14
   12530:	andeq	r2, r1, r8, lsr #15
   12534:	andeq	r2, r1, r8, lsr #15
   12538:	andeq	r2, r1, r8, lsr #15
   1253c:	muleq	r1, r8, r7
   12540:	muleq	r1, r8, r7
   12544:	muleq	r1, r8, r7
   12548:	muleq	r1, r8, r7
   1254c:	muleq	r1, r8, r7
   12550:	muleq	r1, r8, r7
   12554:	muleq	r1, r8, r7
   12558:	muleq	r1, r8, r7
   1255c:	muleq	r1, r8, r7
   12560:	muleq	r1, r8, r7
   12564:	muleq	r1, r8, r7
   12568:	muleq	r1, r8, r7
   1256c:	muleq	r1, r8, r7
   12570:	muleq	r1, r8, r7
   12574:	muleq	r1, r8, r7
   12578:	muleq	r1, r8, r7
   1257c:	andeq	r2, r1, r8, lsr #15
   12580:	andeq	r2, r1, r8, lsr #15
   12584:	andeq	r2, r1, r8, lsr #15
   12588:	andeq	r2, r1, r8, lsr #15
   1258c:	andeq	r2, r1, r0, ror #13
   12590:	andeq	r2, r1, r8, lsr #16
   12594:	muleq	r1, r8, r7
   12598:	muleq	r1, r8, r7
   1259c:	muleq	r1, r8, r7
   125a0:	muleq	r1, r8, r7
   125a4:	muleq	r1, r8, r7
   125a8:	muleq	r1, r8, r7
   125ac:	muleq	r1, r8, r7
   125b0:	muleq	r1, r8, r7
   125b4:	muleq	r1, r8, r7
   125b8:	muleq	r1, r8, r7
   125bc:	muleq	r1, r8, r7
   125c0:	muleq	r1, r8, r7
   125c4:	muleq	r1, r8, r7
   125c8:	muleq	r1, r8, r7
   125cc:	muleq	r1, r8, r7
   125d0:	muleq	r1, r8, r7
   125d4:	muleq	r1, r8, r7
   125d8:	muleq	r1, r8, r7
   125dc:	muleq	r1, r8, r7
   125e0:	muleq	r1, r8, r7
   125e4:	muleq	r1, r8, r7
   125e8:	muleq	r1, r8, r7
   125ec:	muleq	r1, r8, r7
   125f0:	muleq	r1, r8, r7
   125f4:	muleq	r1, r8, r7
   125f8:	muleq	r1, r8, r7
   125fc:	andeq	r2, r1, r8, lsr #15
   12600:			; <UNDEFINED> instruction: 0x000126b0
   12604:	muleq	r1, r8, r7
   12608:	andeq	r2, r1, r8, lsr #15
   1260c:	muleq	r1, r8, r7
   12610:	andeq	r2, r1, r8, lsr #15
   12614:	muleq	r1, r8, r7
   12618:	muleq	r1, r8, r7
   1261c:	muleq	r1, r8, r7
   12620:	muleq	r1, r8, r7
   12624:	muleq	r1, r8, r7
   12628:	muleq	r1, r8, r7
   1262c:	muleq	r1, r8, r7
   12630:	muleq	r1, r8, r7
   12634:	muleq	r1, r8, r7
   12638:	muleq	r1, r8, r7
   1263c:	muleq	r1, r8, r7
   12640:	muleq	r1, r8, r7
   12644:	muleq	r1, r8, r7
   12648:	muleq	r1, r8, r7
   1264c:	muleq	r1, r8, r7
   12650:	muleq	r1, r8, r7
   12654:	muleq	r1, r8, r7
   12658:	muleq	r1, r8, r7
   1265c:	muleq	r1, r8, r7
   12660:	muleq	r1, r8, r7
   12664:	muleq	r1, r8, r7
   12668:	muleq	r1, r8, r7
   1266c:	muleq	r1, r8, r7
   12670:	muleq	r1, r8, r7
   12674:	muleq	r1, r8, r7
   12678:	muleq	r1, r8, r7
   1267c:	andeq	r2, r1, ip, lsl #13
   12680:	andeq	r2, r1, r8, lsr #15
   12684:	andeq	r2, r1, ip, lsl #13
   12688:	andeq	r2, r1, r0, lsr #15
   1268c:	ldr	r3, [sp, #24]
   12690:	mov	r6, #0
   12694:	cmn	r3, #1
   12698:	bne	12044 <close@plt+0x11f8>
   1269c:	ldr	r3, [sp, #44]	; 0x2c
   126a0:	ldrb	r3, [r3, #1]
   126a4:	adds	r3, r3, #0
   126a8:	movne	r3, #1
   126ac:	b	1204c <close@plt+0x1200>
   126b0:	ldr	r3, [sp, #176]	; 0xb0
   126b4:	mov	r6, #0
   126b8:	cmp	r3, #2
   126bc:	bne	1218c <close@plt+0x1340>
   126c0:	ldr	r3, [sp, #64]	; 0x40
   126c4:	cmp	r3, #0
   126c8:	bne	12f00 <close@plt+0x20b4>
   126cc:	add	sl, sl, #1
   126d0:	ldr	r6, [sp, #36]	; 0x24
   126d4:	str	r3, [sp, #32]
   126d8:	mov	r4, #92	; 0x5c
   126dc:	b	12098 <close@plt+0x124c>
   126e0:	ldr	r3, [sp, #176]	; 0xb0
   126e4:	mov	r6, #0
   126e8:	cmp	r3, #2
   126ec:	bne	121c0 <close@plt+0x1374>
   126f0:	ldr	r3, [sp, #40]	; 0x28
   126f4:	cmp	r3, #0
   126f8:	bne	129dc <close@plt+0x1b90>
   126fc:	mov	r1, r7
   12700:	str	r3, [sp, #32]
   12704:	mov	r4, #63	; 0x3f
   12708:	b	12064 <close@plt+0x1218>
   1270c:	ldr	r3, [sp, #176]	; 0xb0
   12710:	mov	r6, #0
   12714:	cmp	r3, #2
   12718:	bne	12210 <close@plt+0x13c4>
   1271c:	ldr	r3, [sp, #64]	; 0x40
   12720:	cmp	r3, #0
   12724:	bne	12f00 <close@plt+0x20b4>
   12728:	ldr	r2, [sp, #84]	; 0x54
   1272c:	adds	r3, fp, #0
   12730:	movne	r3, #1
   12734:	cmp	r2, #0
   12738:	movne	r3, #0
   1273c:	cmp	r3, #0
   12740:	strne	fp, [sp, #84]	; 0x54
   12744:	movne	fp, #0
   12748:	bne	12778 <close@plt+0x192c>
   1274c:	cmp	fp, r8
   12750:	movhi	r3, #39	; 0x27
   12754:	strbhi	r3, [r9, r8]
   12758:	add	r3, r8, #1
   1275c:	cmp	fp, r3
   12760:	movhi	r2, #92	; 0x5c
   12764:	strbhi	r2, [r9, r3]
   12768:	add	r3, r8, #2
   1276c:	cmp	fp, r3
   12770:	movhi	r2, #39	; 0x27
   12774:	strbhi	r2, [r9, r3]
   12778:	ldr	r3, [sp, #64]	; 0x40
   1277c:	add	r8, r8, #3
   12780:	mov	r1, r7
   12784:	str	r7, [sp, #32]
   12788:	str	r7, [sp, #76]	; 0x4c
   1278c:	str	r3, [sp, #36]	; 0x24
   12790:	mov	r4, #39	; 0x27
   12794:	b	12064 <close@plt+0x1218>
   12798:	mov	r6, #0
   1279c:	b	12228 <close@plt+0x13dc>
   127a0:	mov	r6, #0
   127a4:	b	1241c <close@plt+0x15d0>
   127a8:	mov	r6, #0
   127ac:	b	1243c <close@plt+0x15f0>
   127b0:	str	r7, [sp, #32]
   127b4:	mov	r6, #0
   127b8:	b	12444 <close@plt+0x15f8>
   127bc:	mov	r6, #0
   127c0:	b	1246c <close@plt+0x1620>
   127c4:	mov	r6, #0
   127c8:	b	12238 <close@plt+0x13ec>
   127cc:	mov	r6, #0
   127d0:	b	12300 <close@plt+0x14b4>
   127d4:	mov	r6, #0
   127d8:	b	122d0 <close@plt+0x1484>
   127dc:	mov	r6, #0
   127e0:	mov	r3, #116	; 0x74
   127e4:	b	122d8 <close@plt+0x148c>
   127e8:	mov	r6, #0
   127ec:	b	12314 <close@plt+0x14c8>
   127f0:	mov	r6, #0
   127f4:	b	12328 <close@plt+0x14dc>
   127f8:	ldr	r3, [sp, #56]	; 0x38
   127fc:	mov	r6, #0
   12800:	cmp	r3, #0
   12804:	bne	12348 <close@plt+0x14fc>
   12808:	ldr	r3, [sp, #96]	; 0x60
   1280c:	cmp	r3, #0
   12810:	addne	sl, sl, #1
   12814:	bne	11bbc <close@plt+0xd70>
   12818:	ldr	r1, [sp, #52]	; 0x34
   1281c:	str	r3, [sp, #32]
   12820:	mov	r4, r3
   12824:	b	12064 <close@plt+0x1218>
   12828:	mov	r6, #0
   1282c:	ldr	r3, [sp, #80]	; 0x50
   12830:	cmp	r3, #1
   12834:	bne	12a24 <close@plt+0x1bd8>
   12838:	bl	10d5c <__ctype_b_loc@plt>
   1283c:	ldr	r2, [sp, #80]	; 0x50
   12840:	sxth	r3, r4
   12844:	mov	r1, r2
   12848:	lsl	r3, r3, #1
   1284c:	ldr	r2, [r0]
   12850:	ldrh	r3, [r2, r3]
   12854:	and	r3, r3, #16384	; 0x4000
   12858:	cmp	r3, #0
   1285c:	movne	r3, #1
   12860:	moveq	r3, #0
   12864:	str	r3, [sp, #32]
   12868:	moveq	r3, #1
   1286c:	movne	r3, #0
   12870:	ldr	r2, [sp, #56]	; 0x38
   12874:	and	r3, r3, r2
   12878:	ands	r3, r3, #255	; 0xff
   1287c:	beq	12450 <close@plt+0x1604>
   12880:	add	r1, sl, r1
   12884:	mov	r0, #0
   12888:	ldr	r7, [sp, #40]	; 0x28
   1288c:	ldr	r2, [sp, #36]	; 0x24
   12890:	ldr	lr, [sp, #52]	; 0x34
   12894:	b	12944 <close@plt+0x1af8>
   12898:	cmp	r7, #0
   1289c:	bne	12c98 <close@plt+0x1e4c>
   128a0:	eor	r0, r2, #1
   128a4:	ands	r0, lr, r0
   128a8:	beq	128e0 <close@plt+0x1a94>
   128ac:	cmp	fp, r8
   128b0:	movhi	r2, #39	; 0x27
   128b4:	strbhi	r2, [r9, r8]
   128b8:	add	r2, r8, #1
   128bc:	cmp	fp, r2
   128c0:	movhi	ip, #36	; 0x24
   128c4:	strbhi	ip, [r9, r2]
   128c8:	add	r2, r8, #2
   128cc:	cmp	fp, r2
   128d0:	movhi	ip, #39	; 0x27
   128d4:	strbhi	ip, [r9, r2]
   128d8:	add	r8, r8, #3
   128dc:	mov	r2, r0
   128e0:	cmp	fp, r8
   128e4:	movhi	r0, #92	; 0x5c
   128e8:	strbhi	r0, [r9, r8]
   128ec:	add	r0, r8, #1
   128f0:	cmp	fp, r0
   128f4:	lsrhi	ip, r4, #6
   128f8:	addhi	ip, ip, #48	; 0x30
   128fc:	strbhi	ip, [r9, r0]
   12900:	add	ip, r8, #2
   12904:	cmp	fp, ip
   12908:	lsrhi	r0, r4, #3
   1290c:	andhi	r0, r0, #7
   12910:	addhi	r0, r0, #48	; 0x30
   12914:	add	sl, sl, #1
   12918:	strbhi	r0, [r9, ip]
   1291c:	and	r4, r4, #7
   12920:	cmp	sl, r1
   12924:	add	r4, r4, #48	; 0x30
   12928:	add	r8, r8, #3
   1292c:	bcs	12cb0 <close@plt+0x1e64>
   12930:	mov	r0, r3
   12934:	cmp	fp, r8
   12938:	strbhi	r4, [r9, r8]
   1293c:	ldrb	r4, [r5, #1]!
   12940:	add	r8, r8, #1
   12944:	cmp	r3, #0
   12948:	bne	12898 <close@plt+0x1a4c>
   1294c:	cmp	r6, #0
   12950:	bne	129f4 <close@plt+0x1ba8>
   12954:	eor	r6, r0, #1
   12958:	and	r6, r6, r2
   1295c:	add	sl, sl, #1
   12960:	cmp	r1, sl
   12964:	uxtb	r6, r6
   12968:	bls	12a1c <close@plt+0x1bd0>
   1296c:	cmp	r6, #0
   12970:	beq	12934 <close@plt+0x1ae8>
   12974:	cmp	fp, r8
   12978:	movhi	r2, #39	; 0x27
   1297c:	strbhi	r2, [r9, r8]
   12980:	add	r2, r8, #1
   12984:	cmp	fp, r2
   12988:	movhi	ip, #39	; 0x27
   1298c:	strbhi	ip, [r9, r2]
   12990:	add	r8, r8, #2
   12994:	mov	r6, r3
   12998:	mov	r2, r3
   1299c:	b	12934 <close@plt+0x1ae8>
   129a0:	ldr	r3, [sp, #184]	; 0xb8
   129a4:	cmp	r3, #0
   129a8:	beq	12080 <close@plt+0x1234>
   129ac:	lsr	r2, r4, #5
   129b0:	mov	r0, r3
   129b4:	uxtb	r2, r2
   129b8:	and	r3, r4, #31
   129bc:	ldr	r2, [r0, r2, lsl #2]
   129c0:	lsr	r3, r2, r3
   129c4:	tst	r3, #1
   129c8:	beq	12080 <close@plt+0x1234>
   129cc:	ldr	r3, [sp, #40]	; 0x28
   129d0:	cmp	r3, #0
   129d4:	beq	1226c <close@plt+0x1420>
   129d8:	mov	r3, r1
   129dc:	str	r3, [sp, #64]	; 0x40
   129e0:	mov	sl, r9
   129e4:	ldr	r3, [sp, #56]	; 0x38
   129e8:	mov	r9, fp
   129ec:	ldr	r2, [sp, #64]	; 0x40
   129f0:	b	12be0 <close@plt+0x1d94>
   129f4:	cmp	fp, r8
   129f8:	eor	r6, r0, #1
   129fc:	movhi	ip, #92	; 0x5c
   12a00:	and	r6, r6, r2
   12a04:	add	sl, sl, #1
   12a08:	strbhi	ip, [r9, r8]
   12a0c:	cmp	r1, sl
   12a10:	add	r8, r8, #1
   12a14:	uxtb	r6, r6
   12a18:	bhi	1296c <close@plt+0x1b20>
   12a1c:	str	r2, [sp, #36]	; 0x24
   12a20:	b	12098 <close@plt+0x124c>
   12a24:	ldr	r3, [sp, #24]
   12a28:	cmn	r3, #1
   12a2c:	mov	r3, #0
   12a30:	str	r3, [sp, #128]	; 0x80
   12a34:	str	r3, [sp, #132]	; 0x84
   12a38:	beq	12d2c <close@plt+0x1ee0>
   12a3c:	mov	r2, r7
   12a40:	mov	r3, #0
   12a44:	str	r7, [sp, #104]	; 0x68
   12a48:	str	r5, [sp, #116]	; 0x74
   12a4c:	mov	r7, r3
   12a50:	mov	r5, r2
   12a54:	str	r4, [sp, #32]
   12a58:	str	r6, [sp, #108]	; 0x6c
   12a5c:	str	r8, [sp, #112]	; 0x70
   12a60:	ldr	r3, [sp, #44]	; 0x2c
   12a64:	add	r6, sl, r7
   12a68:	add	r4, r3, r6
   12a6c:	ldr	r3, [sp, #24]
   12a70:	mov	r1, r4
   12a74:	sub	r2, r3, r6
   12a78:	add	r0, sp, #124	; 0x7c
   12a7c:	add	r3, sp, #128	; 0x80
   12a80:	bl	16d44 <close@plt+0x5ef8>
   12a84:	subs	r8, r0, #0
   12a88:	beq	12e10 <close@plt+0x1fc4>
   12a8c:	cmn	r8, #1
   12a90:	beq	12de8 <close@plt+0x1f9c>
   12a94:	cmn	r8, #2
   12a98:	beq	12d80 <close@plt+0x1f34>
   12a9c:	ldr	r3, [sp, #64]	; 0x40
   12aa0:	cmp	r3, #0
   12aa4:	beq	12b64 <close@plt+0x1d18>
   12aa8:	cmp	r8, #1
   12aac:	beq	12b64 <close@plt+0x1d18>
   12ab0:	sub	r3, r8, #1
   12ab4:	add	r6, r3, r6
   12ab8:	ldr	r3, [sp, #44]	; 0x2c
   12abc:	add	r6, r3, r6
   12ac0:	ldrb	r3, [r4, #1]!
   12ac4:	sub	r3, r3, #91	; 0x5b
   12ac8:	cmp	r3, #33	; 0x21
   12acc:	ldrls	pc, [pc, r3, lsl #2]
   12ad0:	b	12b5c <close@plt+0x1d10>
   12ad4:	andeq	r2, r1, r8, asr #23
   12ad8:	andeq	r2, r1, r8, asr #23
   12adc:	andeq	r2, r1, ip, asr fp
   12ae0:	andeq	r2, r1, r8, asr #23
   12ae4:	andeq	r2, r1, ip, asr fp
   12ae8:	andeq	r2, r1, r8, asr #23
   12aec:	andeq	r2, r1, ip, asr fp
   12af0:	andeq	r2, r1, ip, asr fp
   12af4:	andeq	r2, r1, ip, asr fp
   12af8:	andeq	r2, r1, ip, asr fp
   12afc:	andeq	r2, r1, ip, asr fp
   12b00:	andeq	r2, r1, ip, asr fp
   12b04:	andeq	r2, r1, ip, asr fp
   12b08:	andeq	r2, r1, ip, asr fp
   12b0c:	andeq	r2, r1, ip, asr fp
   12b10:	andeq	r2, r1, ip, asr fp
   12b14:	andeq	r2, r1, ip, asr fp
   12b18:	andeq	r2, r1, ip, asr fp
   12b1c:	andeq	r2, r1, ip, asr fp
   12b20:	andeq	r2, r1, ip, asr fp
   12b24:	andeq	r2, r1, ip, asr fp
   12b28:	andeq	r2, r1, ip, asr fp
   12b2c:	andeq	r2, r1, ip, asr fp
   12b30:	andeq	r2, r1, ip, asr fp
   12b34:	andeq	r2, r1, ip, asr fp
   12b38:	andeq	r2, r1, ip, asr fp
   12b3c:	andeq	r2, r1, ip, asr fp
   12b40:	andeq	r2, r1, ip, asr fp
   12b44:	andeq	r2, r1, ip, asr fp
   12b48:	andeq	r2, r1, ip, asr fp
   12b4c:	andeq	r2, r1, ip, asr fp
   12b50:	andeq	r2, r1, ip, asr fp
   12b54:	andeq	r2, r1, ip, asr fp
   12b58:	andeq	r2, r1, r8, asr #23
   12b5c:	cmp	r6, r4
   12b60:	bne	12ac0 <close@plt+0x1c74>
   12b64:	ldr	r0, [sp, #124]	; 0x7c
   12b68:	bl	10cc0 <iswprint@plt>
   12b6c:	add	r7, r7, r8
   12b70:	cmp	r0, #0
   12b74:	add	r0, sp, #128	; 0x80
   12b78:	moveq	r5, #0
   12b7c:	bl	10c6c <mbsinit@plt>
   12b80:	cmp	r0, #0
   12b84:	beq	12a60 <close@plt+0x1c14>
   12b88:	ldr	r4, [sp, #32]
   12b8c:	str	r5, [sp, #32]
   12b90:	ldr	r3, [sp, #32]
   12b94:	mov	r1, r7
   12b98:	eor	r3, r3, #1
   12b9c:	ldr	r7, [sp, #104]	; 0x68
   12ba0:	ldr	r6, [sp, #108]	; 0x6c
   12ba4:	ldr	r8, [sp, #112]	; 0x70
   12ba8:	ldr	r5, [sp, #116]	; 0x74
   12bac:	uxtb	r3, r3
   12bb0:	cmp	r1, #1
   12bb4:	bls	12870 <close@plt+0x1a24>
   12bb8:	ldr	r2, [sp, #56]	; 0x38
   12bbc:	and	r3, r3, r2
   12bc0:	uxtb	r3, r3
   12bc4:	b	12880 <close@plt+0x1a34>
   12bc8:	mov	r3, #2
   12bcc:	str	r3, [sp, #176]	; 0xb0
   12bd0:	ldr	r2, [sp, #64]	; 0x40
   12bd4:	ldr	r3, [sp, #56]	; 0x38
   12bd8:	mov	sl, r9
   12bdc:	mov	r9, fp
   12be0:	and	r3, r3, r2
   12be4:	tst	r3, #255	; 0xff
   12be8:	ldr	r3, [sp, #176]	; 0xb0
   12bec:	movne	r3, #4
   12bf0:	str	r3, [sp, #176]	; 0xb0
   12bf4:	ldr	r3, [sp, #180]	; 0xb4
   12bf8:	mov	ip, #0
   12bfc:	bic	r3, r3, #2
   12c00:	str	r3, [sp, #4]
   12c04:	ldr	r3, [sp, #192]	; 0xc0
   12c08:	ldr	r2, [sp, #44]	; 0x2c
   12c0c:	str	r3, [sp, #16]
   12c10:	ldr	r3, [sp, #188]	; 0xbc
   12c14:	mov	r1, r9
   12c18:	str	r3, [sp, #12]
   12c1c:	ldr	r3, [sp, #176]	; 0xb0
   12c20:	mov	r0, sl
   12c24:	str	r3, [sp]
   12c28:	str	ip, [sp, #8]
   12c2c:	ldr	r3, [sp, #24]
   12c30:	bl	11a90 <close@plt+0xc44>
   12c34:	mov	fp, r0
   12c38:	mov	r0, fp
   12c3c:	add	sp, sp, #140	; 0x8c
   12c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c44:	mov	r4, #92	; 0x5c
   12c48:	mov	r1, #0
   12c4c:	mov	r3, r4
   12c50:	b	12244 <close@plt+0x13f8>
   12c54:	mov	r3, #0
   12c58:	ldr	r1, [sp, #52]	; 0x34
   12c5c:	str	r3, [sp, #32]
   12c60:	mov	r4, #63	; 0x3f
   12c64:	b	12064 <close@plt+0x1218>
   12c68:	cmp	fp, #0
   12c6c:	beq	12cc8 <close@plt+0x1e7c>
   12c70:	mov	r3, #39	; 0x27
   12c74:	strb	r3, [r9]
   12c78:	mov	r3, #0
   12c7c:	str	r3, [sp, #40]	; 0x28
   12c80:	mov	r3, #1
   12c84:	str	r3, [sp, #68]	; 0x44
   12c88:	ldr	r3, [pc, #448]	; 12e50 <close@plt+0x2004>
   12c8c:	mov	r8, #1
   12c90:	str	r3, [sp, #72]	; 0x48
   12c94:	b	11e78 <close@plt+0x102c>
   12c98:	ldr	r3, [sp, #40]	; 0x28
   12c9c:	mov	sl, r9
   12ca0:	str	r3, [sp, #56]	; 0x38
   12ca4:	mov	r9, fp
   12ca8:	ldr	r2, [sp, #64]	; 0x40
   12cac:	b	12be0 <close@plt+0x1d94>
   12cb0:	str	r2, [sp, #36]	; 0x24
   12cb4:	b	120c8 <close@plt+0x127c>
   12cb8:	mov	r1, #0
   12cbc:	str	r3, [sp, #32]
   12cc0:	mov	r4, #63	; 0x3f
   12cc4:	b	12064 <close@plt+0x1218>
   12cc8:	ldr	r3, [pc, #384]	; 12e50 <close@plt+0x2004>
   12ccc:	str	r3, [sp, #72]	; 0x48
   12cd0:	mov	r3, #0
   12cd4:	str	r3, [sp, #40]	; 0x28
   12cd8:	mov	r3, #1
   12cdc:	str	r3, [sp, #68]	; 0x44
   12ce0:	mov	r8, r3
   12ce4:	b	11e78 <close@plt+0x102c>
   12ce8:	bl	10e40 <abort@plt>
   12cec:	cmp	fp, #0
   12cf0:	beq	12d50 <close@plt+0x1f04>
   12cf4:	mov	r2, #1
   12cf8:	mov	r3, #34	; 0x22
   12cfc:	strb	r3, [r9]
   12d00:	mov	r8, r2
   12d04:	mov	r3, r2
   12d08:	str	r2, [sp, #68]	; 0x44
   12d0c:	str	r3, [sp, #56]	; 0x38
   12d10:	ldr	r3, [pc, #316]	; 12e54 <close@plt+0x2008>
   12d14:	ldr	r1, [sp, #56]	; 0x38
   12d18:	str	r3, [sp, #72]	; 0x48
   12d1c:	ldr	r2, [sp, #176]	; 0xb0
   12d20:	ldr	ip, [sp, #40]	; 0x28
   12d24:	ldr	lr, [sp, #176]	; 0xb0
   12d28:	b	11b5c <close@plt+0xd10>
   12d2c:	ldr	r0, [sp, #44]	; 0x2c
   12d30:	bl	10d74 <strlen@plt>
   12d34:	str	r0, [sp, #24]
   12d38:	b	12a3c <close@plt+0x1bf0>
   12d3c:	mov	r7, #0
   12d40:	ldr	r1, [sp, #52]	; 0x34
   12d44:	str	r3, [sp, #32]
   12d48:	mov	r4, #48	; 0x30
   12d4c:	b	12064 <close@plt+0x1218>
   12d50:	mov	r3, #1
   12d54:	str	r3, [sp, #68]	; 0x44
   12d58:	mov	r8, r3
   12d5c:	b	12d0c <close@plt+0x1ec0>
   12d60:	mov	r3, #2
   12d64:	mov	sl, r9
   12d68:	str	r3, [sp, #176]	; 0xb0
   12d6c:	mov	r9, fp
   12d70:	ldr	r3, [sp, #56]	; 0x38
   12d74:	b	12be0 <close@plt+0x1d94>
   12d78:	ldr	r6, [sp, #48]	; 0x30
   12d7c:	b	1282c <close@plt+0x19e0>
   12d80:	ldr	r0, [sp, #24]
   12d84:	mov	ip, r6
   12d88:	cmp	r0, ip
   12d8c:	mov	r1, r7
   12d90:	mov	r2, r4
   12d94:	ldr	r7, [sp, #104]	; 0x68
   12d98:	ldr	r4, [sp, #32]
   12d9c:	ldr	r6, [sp, #108]	; 0x6c
   12da0:	ldr	r8, [sp, #112]	; 0x70
   12da4:	ldr	r5, [sp, #116]	; 0x74
   12da8:	bls	12dd8 <close@plt+0x1f8c>
   12dac:	ldrb	r3, [r2]
   12db0:	cmp	r3, #0
   12db4:	bne	12dc8 <close@plt+0x1f7c>
   12db8:	b	12ee8 <close@plt+0x209c>
   12dbc:	ldrb	r3, [r2, #1]!
   12dc0:	cmp	r3, #0
   12dc4:	beq	12ee8 <close@plt+0x209c>
   12dc8:	add	r1, r1, #1
   12dcc:	add	r3, sl, r1
   12dd0:	cmp	r0, r3
   12dd4:	bhi	12dbc <close@plt+0x1f70>
   12dd8:	mov	r2, #0
   12ddc:	mov	r3, r7
   12de0:	str	r2, [sp, #32]
   12de4:	b	12bb0 <close@plt+0x1d64>
   12de8:	mov	r1, r7
   12dec:	ldr	r7, [sp, #104]	; 0x68
   12df0:	mov	r2, #0
   12df4:	ldr	r4, [sp, #32]
   12df8:	ldr	r6, [sp, #108]	; 0x6c
   12dfc:	ldr	r8, [sp, #112]	; 0x70
   12e00:	ldr	r5, [sp, #116]	; 0x74
   12e04:	mov	r3, r7
   12e08:	str	r2, [sp, #32]
   12e0c:	b	12bb0 <close@plt+0x1d64>
   12e10:	mov	r3, r5
   12e14:	eor	r3, r3, #1
   12e18:	ldr	r4, [sp, #32]
   12e1c:	mov	r1, r7
   12e20:	str	r5, [sp, #32]
   12e24:	ldr	r7, [sp, #104]	; 0x68
   12e28:	ldr	r6, [sp, #108]	; 0x6c
   12e2c:	ldr	r8, [sp, #112]	; 0x70
   12e30:	ldr	r5, [sp, #116]	; 0x74
   12e34:	uxtb	r3, r3
   12e38:	b	12bb0 <close@plt+0x1d64>
   12e3c:	mov	sl, r9
   12e40:	str	r3, [sp, #56]	; 0x38
   12e44:	mov	r9, fp
   12e48:	ldr	r2, [sp, #64]	; 0x40
   12e4c:	b	12be0 <close@plt+0x1d94>
   12e50:	andeq	r7, r1, r4, asr r9
   12e54:	andeq	r7, r1, r0, asr r9
   12e58:	andeq	r7, r1, r8, asr r9
   12e5c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12e60:	ldr	r2, [sp, #44]	; 0x2c
   12e64:	ldrb	r1, [r2, r3]
   12e68:	sub	r2, r1, #33	; 0x21
   12e6c:	uxtb	r2, r2
   12e70:	cmp	r2, #29
   12e74:	bhi	12ef4 <close@plt+0x20a8>
   12e78:	ldr	r0, [pc, #-36]	; 12e5c <close@plt+0x2010>
   12e7c:	mov	ip, #1
   12e80:	ands	r2, r0, ip, lsl r2
   12e84:	beq	12f14 <close@plt+0x20c8>
   12e88:	ldr	r2, [sp, #40]	; 0x28
   12e8c:	cmp	r2, #0
   12e90:	bne	13008 <close@plt+0x21bc>
   12e94:	add	r2, r8, #1
   12e98:	cmp	fp, r8
   12e9c:	strbhi	r4, [r9, r8]
   12ea0:	cmp	fp, r2
   12ea4:	movhi	r0, #34	; 0x22
   12ea8:	strbhi	r0, [r9, r2]
   12eac:	add	r2, r8, #2
   12eb0:	cmp	fp, r2
   12eb4:	movhi	r0, #34	; 0x22
   12eb8:	strbhi	r0, [r9, r2]
   12ebc:	add	r2, r8, #3
   12ec0:	cmp	fp, r2
   12ec4:	mov	sl, r3
   12ec8:	ldr	r3, [sp, #40]	; 0x28
   12ecc:	movhi	r0, #63	; 0x3f
   12ed0:	mov	r4, r1
   12ed4:	strbhi	r0, [r9, r2]
   12ed8:	add	r8, r8, #4
   12edc:	mov	r1, r3
   12ee0:	str	r3, [sp, #32]
   12ee4:	b	12064 <close@plt+0x1218>
   12ee8:	str	r3, [sp, #32]
   12eec:	mov	r3, r7
   12ef0:	b	12bb0 <close@plt+0x1d64>
   12ef4:	mov	r1, #0
   12ef8:	str	r1, [sp, #32]
   12efc:	b	12064 <close@plt+0x1218>
   12f00:	mov	sl, r9
   12f04:	ldr	r3, [sp, #56]	; 0x38
   12f08:	mov	r9, fp
   12f0c:	ldr	r2, [sp, #64]	; 0x40
   12f10:	b	12be0 <close@plt+0x1d94>
   12f14:	str	r2, [sp, #32]
   12f18:	mov	r1, #0
   12f1c:	b	12064 <close@plt+0x1218>
   12f20:	ldr	r2, [sp, #76]	; 0x4c
   12f24:	mov	sl, r9
   12f28:	mov	r9, fp
   12f2c:	mov	fp, r8
   12f30:	ldr	r1, [sp, #72]	; 0x48
   12f34:	cmp	r1, #0
   12f38:	moveq	r3, #0
   12f3c:	andne	r3, r2, #1
   12f40:	cmp	r3, #0
   12f44:	beq	12f70 <close@plt+0x2124>
   12f48:	ldrb	r3, [r1]
   12f4c:	cmp	r3, #0
   12f50:	beq	12f70 <close@plt+0x2124>
   12f54:	mov	r2, r1
   12f58:	cmp	r9, fp
   12f5c:	strbhi	r3, [sl, fp]
   12f60:	ldrb	r3, [r2, #1]!
   12f64:	add	fp, fp, #1
   12f68:	cmp	r3, #0
   12f6c:	bne	12f58 <close@plt+0x210c>
   12f70:	cmp	r9, fp
   12f74:	movhi	r3, #0
   12f78:	strbhi	r3, [sl, fp]
   12f7c:	b	12c38 <close@plt+0x1dec>
   12f80:	ldr	r3, [sp, #192]	; 0xc0
   12f84:	mov	ip, #5
   12f88:	str	r3, [sp, #16]
   12f8c:	ldr	r3, [sp, #188]	; 0xbc
   12f90:	ldr	r2, [sp, #44]	; 0x2c
   12f94:	str	r3, [sp, #12]
   12f98:	ldr	r3, [sp, #184]	; 0xb8
   12f9c:	ldr	r1, [sp, #84]	; 0x54
   12fa0:	str	r3, [sp, #8]
   12fa4:	ldr	r3, [sp, #180]	; 0xb4
   12fa8:	mov	r0, r9
   12fac:	str	r3, [sp, #4]
   12fb0:	str	ip, [sp]
   12fb4:	ldr	r3, [sp, #24]
   12fb8:	bl	11a90 <close@plt+0xc44>
   12fbc:	mov	fp, r0
   12fc0:	b	12c38 <close@plt+0x1dec>
   12fc4:	mov	sl, r9
   12fc8:	mov	r9, fp
   12fcc:	mov	fp, r8
   12fd0:	b	12f30 <close@plt+0x20e4>
   12fd4:	ldr	r1, [sp, #176]	; 0xb0
   12fd8:	bl	11970 <close@plt+0xb24>
   12fdc:	str	r0, [sp, #192]	; 0xc0
   12fe0:	b	11f4c <close@plt+0x1100>
   12fe4:	ldr	r1, [sp, #176]	; 0xb0
   12fe8:	bl	11970 <close@plt+0xb24>
   12fec:	str	r0, [sp, #188]	; 0xbc
   12ff0:	b	11f2c <close@plt+0x10e0>
   12ff4:	mov	sl, r9
   12ff8:	mov	r2, r3
   12ffc:	mov	r9, fp
   13000:	mov	fp, r8
   13004:	b	12f30 <close@plt+0x20e4>
   13008:	mov	sl, r9
   1300c:	mov	r9, fp
   13010:	b	12bf4 <close@plt+0x1da8>
   13014:	push	{r4, r5, r6, lr}
   13018:	mov	r5, r0
   1301c:	bl	10d80 <__errno_location@plt>
   13020:	cmp	r5, #0
   13024:	mov	r1, #48	; 0x30
   13028:	mov	r4, r0
   1302c:	ldr	r0, [pc, #16]	; 13044 <close@plt+0x21f8>
   13030:	ldr	r6, [r4]
   13034:	movne	r0, r5
   13038:	bl	168b0 <close@plt+0x5a64>
   1303c:	str	r6, [r4]
   13040:	pop	{r4, r5, r6, pc}
   13044:	andeq	r8, r2, r4, asr r1
   13048:	ldr	r3, [pc, #12]	; 1305c <close@plt+0x2210>
   1304c:	cmp	r0, #0
   13050:	moveq	r0, r3
   13054:	ldr	r0, [r0]
   13058:	bx	lr
   1305c:	andeq	r8, r2, r4, asr r1
   13060:	ldr	r3, [pc, #12]	; 13074 <close@plt+0x2228>
   13064:	cmp	r0, #0
   13068:	moveq	r0, r3
   1306c:	str	r1, [r0]
   13070:	bx	lr
   13074:	andeq	r8, r2, r4, asr r1
   13078:	ldr	r3, [pc, #52]	; 130b4 <close@plt+0x2268>
   1307c:	cmp	r0, #0
   13080:	moveq	r0, r3
   13084:	add	r3, r0, #8
   13088:	push	{lr}		; (str lr, [sp, #-4]!)
   1308c:	lsr	lr, r1, #5
   13090:	and	r1, r1, #31
   13094:	ldr	ip, [r3, lr, lsl #2]
   13098:	lsr	r0, ip, r1
   1309c:	eor	r2, r2, r0
   130a0:	and	r2, r2, #1
   130a4:	and	r0, r0, #1
   130a8:	eor	r1, ip, r2, lsl r1
   130ac:	str	r1, [r3, lr, lsl #2]
   130b0:	pop	{pc}		; (ldr pc, [sp], #4)
   130b4:	andeq	r8, r2, r4, asr r1
   130b8:	ldr	r3, [pc, #16]	; 130d0 <close@plt+0x2284>
   130bc:	cmp	r0, #0
   130c0:	movne	r3, r0
   130c4:	ldr	r0, [r3, #4]
   130c8:	str	r1, [r3, #4]
   130cc:	bx	lr
   130d0:	andeq	r8, r2, r4, asr r1
   130d4:	ldr	r3, [pc, #44]	; 13108 <close@plt+0x22bc>
   130d8:	cmp	r0, #0
   130dc:	moveq	r0, r3
   130e0:	mov	ip, #10
   130e4:	cmp	r2, #0
   130e8:	cmpne	r1, #0
   130ec:	str	ip, [r0]
   130f0:	beq	13100 <close@plt+0x22b4>
   130f4:	str	r1, [r0, #40]	; 0x28
   130f8:	str	r2, [r0, #44]	; 0x2c
   130fc:	bx	lr
   13100:	push	{r4, lr}
   13104:	bl	10e40 <abort@plt>
   13108:	andeq	r8, r2, r4, asr r1
   1310c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13110:	sub	sp, sp, #24
   13114:	ldr	ip, [pc, #108]	; 13188 <close@plt+0x233c>
   13118:	ldr	r4, [sp, #56]	; 0x38
   1311c:	mov	r9, r2
   13120:	cmp	r4, #0
   13124:	moveq	r4, ip
   13128:	mov	sl, r3
   1312c:	mov	r7, r0
   13130:	mov	r8, r1
   13134:	bl	10d80 <__errno_location@plt>
   13138:	ldr	r3, [r4, #44]	; 0x2c
   1313c:	mov	r1, r8
   13140:	ldr	r6, [r0]
   13144:	str	r3, [sp, #16]
   13148:	ldr	r2, [r4, #40]	; 0x28
   1314c:	add	r3, r4, #8
   13150:	str	r3, [sp, #8]
   13154:	str	r2, [sp, #12]
   13158:	ldr	r2, [r4, #4]
   1315c:	mov	r5, r0
   13160:	str	r2, [sp, #4]
   13164:	ldr	ip, [r4]
   13168:	mov	r3, sl
   1316c:	mov	r2, r9
   13170:	mov	r0, r7
   13174:	str	ip, [sp]
   13178:	bl	11a90 <close@plt+0xc44>
   1317c:	str	r6, [r5]
   13180:	add	sp, sp, #24
   13184:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13188:	andeq	r8, r2, r4, asr r1
   1318c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13190:	cmp	r2, #0
   13194:	sub	sp, sp, #36	; 0x24
   13198:	ldr	r4, [pc, #164]	; 13244 <close@plt+0x23f8>
   1319c:	mov	r8, r1
   131a0:	movne	r4, r2
   131a4:	mov	r7, r0
   131a8:	bl	10d80 <__errno_location@plt>
   131ac:	ldr	r3, [r4, #44]	; 0x2c
   131b0:	ldr	r5, [r4, #4]
   131b4:	add	r9, r4, #8
   131b8:	orr	r5, r5, #1
   131bc:	mov	r1, #0
   131c0:	mov	r2, r7
   131c4:	ldr	fp, [r0]
   131c8:	str	r3, [sp, #16]
   131cc:	ldr	r3, [r4, #40]	; 0x28
   131d0:	stmib	sp, {r5, r9}
   131d4:	str	r3, [sp, #12]
   131d8:	ldr	r3, [r4]
   131dc:	mov	r6, r0
   131e0:	str	r3, [sp]
   131e4:	mov	r0, r1
   131e8:	mov	r3, r8
   131ec:	bl	11a90 <close@plt+0xc44>
   131f0:	add	r1, r0, #1
   131f4:	mov	r0, r1
   131f8:	str	r1, [sp, #28]
   131fc:	bl	1636c <close@plt+0x5520>
   13200:	ldr	r3, [r4, #44]	; 0x2c
   13204:	ldr	r1, [sp, #28]
   13208:	str	r3, [sp, #16]
   1320c:	ldr	r3, [r4, #40]	; 0x28
   13210:	str	r5, [sp, #4]
   13214:	str	r3, [sp, #12]
   13218:	str	r9, [sp, #8]
   1321c:	ldr	ip, [r4]
   13220:	mov	r3, r8
   13224:	mov	r2, r7
   13228:	str	ip, [sp]
   1322c:	mov	sl, r0
   13230:	bl	11a90 <close@plt+0xc44>
   13234:	mov	r0, sl
   13238:	str	fp, [r6]
   1323c:	add	sp, sp, #36	; 0x24
   13240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13244:	andeq	r8, r2, r4, asr r1
   13248:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1324c:	cmp	r3, #0
   13250:	sub	sp, sp, #44	; 0x2c
   13254:	ldr	r4, [pc, #192]	; 1331c <close@plt+0x24d0>
   13258:	mov	r6, r2
   1325c:	movne	r4, r3
   13260:	mov	r9, r1
   13264:	mov	r8, r0
   13268:	bl	10d80 <__errno_location@plt>
   1326c:	ldr	r3, [r4, #44]	; 0x2c
   13270:	ldr	r5, [r4, #4]
   13274:	add	sl, r4, #8
   13278:	cmp	r6, #0
   1327c:	orreq	r5, r5, #1
   13280:	mov	r1, #0
   13284:	ldr	r2, [r0]
   13288:	str	r3, [sp, #16]
   1328c:	ldr	r3, [r4, #40]	; 0x28
   13290:	stmib	sp, {r5, sl}
   13294:	str	r3, [sp, #12]
   13298:	ldr	r3, [r4]
   1329c:	mov	r7, r0
   132a0:	str	r2, [sp, #28]
   132a4:	str	r3, [sp]
   132a8:	mov	r2, r8
   132ac:	mov	r3, r9
   132b0:	mov	r0, r1
   132b4:	bl	11a90 <close@plt+0xc44>
   132b8:	add	r1, r0, #1
   132bc:	mov	fp, r0
   132c0:	mov	r0, r1
   132c4:	str	r1, [sp, #36]	; 0x24
   132c8:	bl	1636c <close@plt+0x5520>
   132cc:	ldr	r3, [r4, #44]	; 0x2c
   132d0:	mov	r2, r8
   132d4:	str	r3, [sp, #16]
   132d8:	ldr	r3, [r4, #40]	; 0x28
   132dc:	str	r5, [sp, #4]
   132e0:	str	r3, [sp, #12]
   132e4:	str	sl, [sp, #8]
   132e8:	ldr	ip, [r4]
   132ec:	ldr	r1, [sp, #36]	; 0x24
   132f0:	mov	r3, r9
   132f4:	str	ip, [sp]
   132f8:	str	r0, [sp, #32]
   132fc:	bl	11a90 <close@plt+0xc44>
   13300:	ldr	r2, [sp, #28]
   13304:	cmp	r6, #0
   13308:	str	r2, [r7]
   1330c:	ldr	r0, [sp, #32]
   13310:	strne	fp, [r6]
   13314:	add	sp, sp, #44	; 0x2c
   13318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1331c:	andeq	r8, r2, r4, asr r1
   13320:	push	{r4, r5, r6, r7, r8, lr}
   13324:	ldr	r6, [pc, #116]	; 133a0 <close@plt+0x2554>
   13328:	ldr	r3, [r6, #4]
   1332c:	ldr	r7, [r6]
   13330:	cmp	r3, #1
   13334:	movgt	r5, r7
   13338:	movgt	r4, #1
   1333c:	ble	1335c <close@plt+0x2510>
   13340:	ldr	r0, [r5, #12]
   13344:	bl	16c18 <close@plt+0x5dcc>
   13348:	ldr	r3, [r6, #4]
   1334c:	add	r4, r4, #1
   13350:	cmp	r3, r4
   13354:	add	r5, r5, #8
   13358:	bgt	13340 <close@plt+0x24f4>
   1335c:	ldr	r0, [r7, #4]
   13360:	ldr	r4, [pc, #60]	; 133a4 <close@plt+0x2558>
   13364:	cmp	r0, r4
   13368:	beq	1337c <close@plt+0x2530>
   1336c:	bl	16c18 <close@plt+0x5dcc>
   13370:	mov	r3, #256	; 0x100
   13374:	str	r4, [r6, #12]
   13378:	str	r3, [r6, #8]
   1337c:	ldr	r4, [pc, #36]	; 133a8 <close@plt+0x255c>
   13380:	cmp	r7, r4
   13384:	beq	13394 <close@plt+0x2548>
   13388:	mov	r0, r7
   1338c:	bl	16c18 <close@plt+0x5dcc>
   13390:	str	r4, [r6]
   13394:	mov	r3, #1
   13398:	str	r3, [r6, #4]
   1339c:	pop	{r4, r5, r6, r7, r8, pc}
   133a0:	andeq	r8, r2, r8, ror #1
   133a4:	andeq	r8, r2, r4, lsl #3
   133a8:	strdeq	r8, [r2], -r0
   133ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133b0:	sub	sp, sp, #44	; 0x2c
   133b4:	mov	r5, r0
   133b8:	mov	sl, r1
   133bc:	bl	10d80 <__errno_location@plt>
   133c0:	ldr	r4, [pc, #400]	; 13558 <close@plt+0x270c>
   133c4:	cmn	r5, #-2147483647	; 0x80000001
   133c8:	ldr	r6, [r4]
   133cc:	mov	r8, r0
   133d0:	movne	r0, #0
   133d4:	moveq	r0, #1
   133d8:	ldr	r3, [r8]
   133dc:	orrs	r0, r0, r5, lsr #31
   133e0:	str	r3, [sp, #24]
   133e4:	bne	13554 <close@plt+0x2708>
   133e8:	ldr	r2, [r4, #4]
   133ec:	cmp	r5, r2
   133f0:	blt	13450 <close@plt+0x2604>
   133f4:	add	r7, r4, #8
   133f8:	cmp	r6, r7
   133fc:	str	r2, [sp, #36]	; 0x24
   13400:	beq	13524 <close@plt+0x26d8>
   13404:	mov	r3, #8
   13408:	sub	r2, r5, r2
   1340c:	mov	r0, r6
   13410:	str	r3, [sp]
   13414:	add	r2, r2, #1
   13418:	mvn	r3, #-2147483648	; 0x80000000
   1341c:	add	r1, sp, #36	; 0x24
   13420:	bl	16588 <close@plt+0x573c>
   13424:	mov	r6, r0
   13428:	str	r0, [r4]
   1342c:	ldr	r0, [r4, #4]
   13430:	ldr	r2, [sp, #36]	; 0x24
   13434:	mov	r1, #0
   13438:	sub	r2, r2, r0
   1343c:	add	r0, r6, r0, lsl #3
   13440:	lsl	r2, r2, #3
   13444:	bl	10d98 <memset@plt>
   13448:	ldr	r3, [sp, #36]	; 0x24
   1344c:	str	r3, [r4, #4]
   13450:	ldr	r4, [pc, #260]	; 1355c <close@plt+0x2710>
   13454:	add	fp, r6, r5, lsl #3
   13458:	ldr	r9, [r6, r5, lsl #3]
   1345c:	ldr	r0, [r4, #4]
   13460:	ldr	r3, [r4]
   13464:	ldr	r7, [fp, #4]
   13468:	ldr	r1, [r4, #44]	; 0x2c
   1346c:	ldr	r2, [r4, #40]	; 0x28
   13470:	orr	r0, r0, #1
   13474:	str	r3, [sp]
   13478:	add	r3, r4, #8
   1347c:	str	r0, [sp, #28]
   13480:	str	r0, [sp, #4]
   13484:	str	r1, [sp, #16]
   13488:	str	r2, [sp, #12]
   1348c:	str	r3, [sp, #8]
   13490:	mov	r0, r7
   13494:	mov	r1, r9
   13498:	mvn	r3, #0
   1349c:	mov	r2, sl
   134a0:	bl	11a90 <close@plt+0xc44>
   134a4:	cmp	r9, r0
   134a8:	bhi	13510 <close@plt+0x26c4>
   134ac:	add	r3, r4, #48	; 0x30
   134b0:	add	r9, r0, #1
   134b4:	cmp	r7, r3
   134b8:	str	r9, [r6, r5, lsl #3]
   134bc:	beq	134c8 <close@plt+0x267c>
   134c0:	mov	r0, r7
   134c4:	bl	16c18 <close@plt+0x5dcc>
   134c8:	mov	r0, r9
   134cc:	bl	1636c <close@plt+0x5520>
   134d0:	ldr	ip, [r4, #44]	; 0x2c
   134d4:	ldr	r3, [r4]
   134d8:	ldr	lr, [r4, #40]	; 0x28
   134dc:	ldr	r4, [pc, #124]	; 13560 <close@plt+0x2714>
   134e0:	mov	r2, sl
   134e4:	mov	r1, r9
   134e8:	str	r0, [fp, #4]
   134ec:	str	r4, [sp, #8]
   134f0:	ldr	r4, [sp, #28]
   134f4:	str	r3, [sp]
   134f8:	str	r4, [sp, #4]
   134fc:	str	ip, [sp, #16]
   13500:	str	lr, [sp, #12]
   13504:	mvn	r3, #0
   13508:	mov	r7, r0
   1350c:	bl	11a90 <close@plt+0xc44>
   13510:	ldr	r3, [sp, #24]
   13514:	mov	r0, r7
   13518:	str	r3, [r8]
   1351c:	add	sp, sp, #44	; 0x2c
   13520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13524:	mov	r3, #8
   13528:	sub	r2, r5, r2
   1352c:	str	r3, [sp]
   13530:	add	r1, sp, #36	; 0x24
   13534:	add	r2, r2, #1
   13538:	mvn	r3, #-2147483648	; 0x80000000
   1353c:	bl	16588 <close@plt+0x573c>
   13540:	mov	r6, r0
   13544:	ldm	r7, {r0, r1}
   13548:	str	r6, [r4]
   1354c:	stm	r6, {r0, r1}
   13550:	b	1342c <close@plt+0x25e0>
   13554:	bl	10e40 <abort@plt>
   13558:	andeq	r8, r2, r8, ror #1
   1355c:	andeq	r8, r2, r4, asr r1
   13560:	andeq	r8, r2, ip, asr r1
   13564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13568:	sub	sp, sp, #52	; 0x34
   1356c:	mov	r5, r0
   13570:	mov	sl, r1
   13574:	mov	fp, r2
   13578:	bl	10d80 <__errno_location@plt>
   1357c:	ldr	r4, [pc, #408]	; 1371c <close@plt+0x28d0>
   13580:	cmn	r5, #-2147483647	; 0x80000001
   13584:	ldr	r6, [r4]
   13588:	mov	r8, r0
   1358c:	movne	r0, #0
   13590:	moveq	r0, #1
   13594:	ldr	r3, [r8]
   13598:	orrs	r0, r0, r5, lsr #31
   1359c:	str	r3, [sp, #28]
   135a0:	bne	13718 <close@plt+0x28cc>
   135a4:	ldr	r2, [r4, #4]
   135a8:	cmp	r5, r2
   135ac:	blt	1360c <close@plt+0x27c0>
   135b0:	add	r7, r4, #8
   135b4:	cmp	r6, r7
   135b8:	str	r2, [sp, #44]	; 0x2c
   135bc:	beq	136e8 <close@plt+0x289c>
   135c0:	mov	r3, #8
   135c4:	sub	r2, r5, r2
   135c8:	mov	r0, r6
   135cc:	str	r3, [sp]
   135d0:	add	r2, r2, #1
   135d4:	mvn	r3, #-2147483648	; 0x80000000
   135d8:	add	r1, sp, #44	; 0x2c
   135dc:	bl	16588 <close@plt+0x573c>
   135e0:	mov	r6, r0
   135e4:	str	r0, [r4]
   135e8:	ldr	r0, [r4, #4]
   135ec:	ldr	r2, [sp, #44]	; 0x2c
   135f0:	mov	r1, #0
   135f4:	sub	r2, r2, r0
   135f8:	add	r0, r6, r0, lsl #3
   135fc:	lsl	r2, r2, #3
   13600:	bl	10d98 <memset@plt>
   13604:	ldr	r3, [sp, #44]	; 0x2c
   13608:	str	r3, [r4, #4]
   1360c:	ldr	r4, [pc, #268]	; 13720 <close@plt+0x28d4>
   13610:	add	r3, r6, r5, lsl #3
   13614:	str	r3, [sp, #32]
   13618:	ldr	r7, [r3, #4]
   1361c:	ldr	r0, [r4, #4]
   13620:	ldr	r3, [r4]
   13624:	ldr	r9, [r6, r5, lsl #3]
   13628:	ldr	r1, [r4, #44]	; 0x2c
   1362c:	ldr	r2, [r4, #40]	; 0x28
   13630:	orr	r0, r0, #1
   13634:	str	r3, [sp]
   13638:	add	r3, r4, #8
   1363c:	str	r0, [sp, #36]	; 0x24
   13640:	str	r0, [sp, #4]
   13644:	str	r1, [sp, #16]
   13648:	str	r2, [sp, #12]
   1364c:	str	r3, [sp, #8]
   13650:	mov	r0, r7
   13654:	mov	r1, r9
   13658:	mov	r3, fp
   1365c:	mov	r2, sl
   13660:	bl	11a90 <close@plt+0xc44>
   13664:	cmp	r9, r0
   13668:	bhi	136d4 <close@plt+0x2888>
   1366c:	add	r3, r4, #48	; 0x30
   13670:	add	r9, r0, #1
   13674:	cmp	r7, r3
   13678:	str	r9, [r6, r5, lsl #3]
   1367c:	beq	13688 <close@plt+0x283c>
   13680:	mov	r0, r7
   13684:	bl	16c18 <close@plt+0x5dcc>
   13688:	mov	r0, r9
   1368c:	bl	1636c <close@plt+0x5520>
   13690:	ldr	ip, [sp, #32]
   13694:	ldr	lr, [r4, #44]	; 0x2c
   13698:	ldr	r5, [r4, #40]	; 0x28
   1369c:	mov	r3, fp
   136a0:	mov	r2, sl
   136a4:	mov	r1, r9
   136a8:	str	r0, [ip, #4]
   136ac:	ldr	ip, [r4]
   136b0:	ldr	r4, [pc, #108]	; 13724 <close@plt+0x28d8>
   136b4:	str	lr, [sp, #16]
   136b8:	str	r4, [sp, #8]
   136bc:	ldr	r4, [sp, #36]	; 0x24
   136c0:	str	r5, [sp, #12]
   136c4:	str	r4, [sp, #4]
   136c8:	str	ip, [sp]
   136cc:	mov	r7, r0
   136d0:	bl	11a90 <close@plt+0xc44>
   136d4:	ldr	r3, [sp, #28]
   136d8:	mov	r0, r7
   136dc:	str	r3, [r8]
   136e0:	add	sp, sp, #52	; 0x34
   136e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136e8:	mov	r3, #8
   136ec:	sub	r2, r5, r2
   136f0:	str	r3, [sp]
   136f4:	add	r1, sp, #44	; 0x2c
   136f8:	add	r2, r2, #1
   136fc:	mvn	r3, #-2147483648	; 0x80000000
   13700:	bl	16588 <close@plt+0x573c>
   13704:	mov	r6, r0
   13708:	ldm	r7, {r0, r1}
   1370c:	str	r6, [r4]
   13710:	stm	r6, {r0, r1}
   13714:	b	135e8 <close@plt+0x279c>
   13718:	bl	10e40 <abort@plt>
   1371c:	andeq	r8, r2, r8, ror #1
   13720:	andeq	r8, r2, r4, asr r1
   13724:	andeq	r8, r2, ip, asr r1
   13728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1372c:	sub	sp, sp, #44	; 0x2c
   13730:	mov	sl, r0
   13734:	bl	10d80 <__errno_location@plt>
   13738:	ldr	r4, [pc, #352]	; 138a0 <close@plt+0x2a54>
   1373c:	ldr	r2, [r4, #4]
   13740:	ldr	r5, [r4]
   13744:	cmp	r2, #0
   13748:	ldr	r3, [r0]
   1374c:	mov	r8, r0
   13750:	str	r3, [sp, #28]
   13754:	bgt	137b0 <close@plt+0x2964>
   13758:	add	r6, r4, #8
   1375c:	cmp	r5, r6
   13760:	str	r2, [sp, #36]	; 0x24
   13764:	beq	13870 <close@plt+0x2a24>
   13768:	mov	r3, #8
   1376c:	mov	r0, r5
   13770:	str	r3, [sp]
   13774:	rsb	r2, r2, #1
   13778:	mvn	r3, #-2147483648	; 0x80000000
   1377c:	add	r1, sp, #36	; 0x24
   13780:	bl	16588 <close@plt+0x573c>
   13784:	mov	r5, r0
   13788:	str	r0, [r4]
   1378c:	ldr	r0, [r4, #4]
   13790:	ldr	r2, [sp, #36]	; 0x24
   13794:	mov	r1, #0
   13798:	sub	r2, r2, r0
   1379c:	add	r0, r5, r0, lsl #3
   137a0:	lsl	r2, r2, #3
   137a4:	bl	10d98 <memset@plt>
   137a8:	ldr	r3, [sp, #36]	; 0x24
   137ac:	str	r3, [r4, #4]
   137b0:	ldr	r4, [pc, #236]	; 138a4 <close@plt+0x2a58>
   137b4:	ldr	r9, [r5]
   137b8:	ldr	r6, [r5, #4]
   137bc:	ldr	r7, [r4, #4]
   137c0:	ldr	r1, [r4, #44]	; 0x2c
   137c4:	ldr	r2, [r4, #40]	; 0x28
   137c8:	ldr	r3, [r4]
   137cc:	orr	r7, r7, #1
   137d0:	add	fp, r4, #8
   137d4:	str	r1, [sp, #16]
   137d8:	str	r2, [sp, #12]
   137dc:	str	r3, [sp]
   137e0:	str	r7, [sp, #4]
   137e4:	str	fp, [sp, #8]
   137e8:	mov	r1, r9
   137ec:	mov	r0, r6
   137f0:	mvn	r3, #0
   137f4:	mov	r2, sl
   137f8:	bl	11a90 <close@plt+0xc44>
   137fc:	cmp	r9, r0
   13800:	bhi	1385c <close@plt+0x2a10>
   13804:	add	r3, r4, #48	; 0x30
   13808:	add	r9, r0, #1
   1380c:	cmp	r6, r3
   13810:	str	r9, [r5]
   13814:	beq	13820 <close@plt+0x29d4>
   13818:	mov	r0, r6
   1381c:	bl	16c18 <close@plt+0x5dcc>
   13820:	mov	r0, r9
   13824:	bl	1636c <close@plt+0x5520>
   13828:	ldr	ip, [r4, #44]	; 0x2c
   1382c:	ldr	r3, [r4]
   13830:	ldr	lr, [r4, #40]	; 0x28
   13834:	mov	r2, sl
   13838:	mov	r1, r9
   1383c:	str	r0, [r5, #4]
   13840:	str	r3, [sp]
   13844:	stmib	sp, {r7, fp}
   13848:	str	ip, [sp, #16]
   1384c:	str	lr, [sp, #12]
   13850:	mvn	r3, #0
   13854:	mov	r6, r0
   13858:	bl	11a90 <close@plt+0xc44>
   1385c:	ldr	r3, [sp, #28]
   13860:	mov	r0, r6
   13864:	str	r3, [r8]
   13868:	add	sp, sp, #44	; 0x2c
   1386c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13870:	mov	r3, #8
   13874:	str	r3, [sp]
   13878:	add	r1, sp, #36	; 0x24
   1387c:	rsb	r2, r2, #1
   13880:	mvn	r3, #-2147483648	; 0x80000000
   13884:	mov	r0, #0
   13888:	bl	16588 <close@plt+0x573c>
   1388c:	mov	r5, r0
   13890:	ldm	r6, {r0, r1}
   13894:	str	r5, [r4]
   13898:	stm	r5, {r0, r1}
   1389c:	b	1378c <close@plt+0x2940>
   138a0:	andeq	r8, r2, r8, ror #1
   138a4:	andeq	r8, r2, r4, asr r1
   138a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138ac:	sub	sp, sp, #44	; 0x2c
   138b0:	mov	r9, r0
   138b4:	mov	sl, r1
   138b8:	bl	10d80 <__errno_location@plt>
   138bc:	ldr	r4, [pc, #364]	; 13a30 <close@plt+0x2be4>
   138c0:	ldr	r2, [r4, #4]
   138c4:	ldr	r5, [r4]
   138c8:	cmp	r2, #0
   138cc:	ldr	r3, [r0]
   138d0:	mov	r7, r0
   138d4:	str	r3, [sp, #24]
   138d8:	bgt	13934 <close@plt+0x2ae8>
   138dc:	add	r6, r4, #8
   138e0:	cmp	r5, r6
   138e4:	str	r2, [sp, #36]	; 0x24
   138e8:	beq	13a00 <close@plt+0x2bb4>
   138ec:	mov	r3, #8
   138f0:	mov	r0, r5
   138f4:	str	r3, [sp]
   138f8:	rsb	r2, r2, #1
   138fc:	mvn	r3, #-2147483648	; 0x80000000
   13900:	add	r1, sp, #36	; 0x24
   13904:	bl	16588 <close@plt+0x573c>
   13908:	mov	r5, r0
   1390c:	str	r0, [r4]
   13910:	ldr	r0, [r4, #4]
   13914:	ldr	r2, [sp, #36]	; 0x24
   13918:	mov	r1, #0
   1391c:	sub	r2, r2, r0
   13920:	add	r0, r5, r0, lsl #3
   13924:	lsl	r2, r2, #3
   13928:	bl	10d98 <memset@plt>
   1392c:	ldr	r3, [sp, #36]	; 0x24
   13930:	str	r3, [r4, #4]
   13934:	ldr	r4, [pc, #248]	; 13a34 <close@plt+0x2be8>
   13938:	ldr	r8, [r5]
   1393c:	ldr	r6, [r5, #4]
   13940:	ldr	r0, [r4, #4]
   13944:	ldr	r1, [r4, #44]	; 0x2c
   13948:	ldr	r2, [r4, #40]	; 0x28
   1394c:	ldr	r3, [r4]
   13950:	orr	r0, r0, #1
   13954:	add	fp, r4, #8
   13958:	str	r0, [sp, #28]
   1395c:	str	r0, [sp, #4]
   13960:	str	r1, [sp, #16]
   13964:	str	r2, [sp, #12]
   13968:	str	r3, [sp]
   1396c:	str	fp, [sp, #8]
   13970:	mov	r1, r8
   13974:	mov	r0, r6
   13978:	mov	r3, sl
   1397c:	mov	r2, r9
   13980:	bl	11a90 <close@plt+0xc44>
   13984:	cmp	r8, r0
   13988:	bhi	139ec <close@plt+0x2ba0>
   1398c:	add	r3, r4, #48	; 0x30
   13990:	add	r8, r0, #1
   13994:	cmp	r6, r3
   13998:	str	r8, [r5]
   1399c:	beq	139a8 <close@plt+0x2b5c>
   139a0:	mov	r0, r6
   139a4:	bl	16c18 <close@plt+0x5dcc>
   139a8:	mov	r0, r8
   139ac:	bl	1636c <close@plt+0x5520>
   139b0:	ldr	lr, [r4, #44]	; 0x2c
   139b4:	ldr	ip, [r4]
   139b8:	mov	r3, sl
   139bc:	mov	r2, r9
   139c0:	mov	r1, r8
   139c4:	str	r0, [r5, #4]
   139c8:	ldr	r5, [r4, #40]	; 0x28
   139cc:	ldr	r4, [sp, #28]
   139d0:	str	fp, [sp, #8]
   139d4:	str	r4, [sp, #4]
   139d8:	str	lr, [sp, #16]
   139dc:	str	r5, [sp, #12]
   139e0:	str	ip, [sp]
   139e4:	mov	r6, r0
   139e8:	bl	11a90 <close@plt+0xc44>
   139ec:	ldr	r3, [sp, #24]
   139f0:	mov	r0, r6
   139f4:	str	r3, [r7]
   139f8:	add	sp, sp, #44	; 0x2c
   139fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a00:	mov	r3, #8
   13a04:	str	r3, [sp]
   13a08:	add	r1, sp, #36	; 0x24
   13a0c:	rsb	r2, r2, #1
   13a10:	mvn	r3, #-2147483648	; 0x80000000
   13a14:	mov	r0, #0
   13a18:	bl	16588 <close@plt+0x573c>
   13a1c:	mov	r5, r0
   13a20:	ldm	r6, {r0, r1}
   13a24:	str	r5, [r4]
   13a28:	stm	r5, {r0, r1}
   13a2c:	b	13910 <close@plt+0x2ac4>
   13a30:	andeq	r8, r2, r8, ror #1
   13a34:	andeq	r8, r2, r4, asr r1
   13a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13a3c:	sub	sp, sp, #132	; 0x84
   13a40:	mov	r5, r1
   13a44:	mov	r4, r0
   13a48:	mov	r9, r2
   13a4c:	add	r0, sp, #80	; 0x50
   13a50:	mov	r2, #48	; 0x30
   13a54:	mov	r1, #0
   13a58:	bl	10d98 <memset@plt>
   13a5c:	cmp	r5, #10
   13a60:	beq	13c18 <close@plt+0x2dcc>
   13a64:	add	lr, sp, #80	; 0x50
   13a68:	str	r5, [sp, #80]	; 0x50
   13a6c:	ldm	lr!, {r0, r1, r2, r3}
   13a70:	add	ip, sp, #32
   13a74:	ldr	r6, [pc, #416]	; 13c1c <close@plt+0x2dd0>
   13a78:	stmia	ip!, {r0, r1, r2, r3}
   13a7c:	ldm	lr!, {r0, r1, r2, r3}
   13a80:	stmia	ip!, {r0, r1, r2, r3}
   13a84:	ldm	lr, {r0, r1, r2, r3}
   13a88:	stm	ip, {r0, r1, r2, r3}
   13a8c:	bl	10d80 <__errno_location@plt>
   13a90:	cmn	r4, #-2147483647	; 0x80000001
   13a94:	ldr	r5, [r6]
   13a98:	mov	r7, r0
   13a9c:	movne	r0, #0
   13aa0:	moveq	r0, #1
   13aa4:	ldr	r3, [r7]
   13aa8:	orrs	r0, r0, r4, lsr #31
   13aac:	str	r3, [sp, #24]
   13ab0:	bne	13c18 <close@plt+0x2dcc>
   13ab4:	ldr	r2, [r6, #4]
   13ab8:	cmp	r4, r2
   13abc:	blt	13b1c <close@plt+0x2cd0>
   13ac0:	add	r8, r6, #8
   13ac4:	cmp	r5, r8
   13ac8:	str	r2, [sp, #80]	; 0x50
   13acc:	beq	13be8 <close@plt+0x2d9c>
   13ad0:	mov	r3, #8
   13ad4:	sub	r2, r4, r2
   13ad8:	mov	r0, r5
   13adc:	str	r3, [sp]
   13ae0:	add	r2, r2, #1
   13ae4:	add	r1, sp, #80	; 0x50
   13ae8:	mvn	r3, #-2147483648	; 0x80000000
   13aec:	bl	16588 <close@plt+0x573c>
   13af0:	mov	r5, r0
   13af4:	str	r0, [r6]
   13af8:	ldr	r0, [r6, #4]
   13afc:	ldr	r2, [sp, #80]	; 0x50
   13b00:	mov	r1, #0
   13b04:	sub	r2, r2, r0
   13b08:	add	r0, r5, r0, lsl #3
   13b0c:	lsl	r2, r2, #3
   13b10:	bl	10d98 <memset@plt>
   13b14:	ldr	r3, [sp, #80]	; 0x50
   13b18:	str	r3, [r6, #4]
   13b1c:	add	fp, r5, r4, lsl #3
   13b20:	ldr	r1, [sp, #36]	; 0x24
   13b24:	ldr	r8, [r5, r4, lsl #3]
   13b28:	ldr	r6, [fp, #4]
   13b2c:	ldr	r2, [sp, #72]	; 0x48
   13b30:	ldr	r3, [sp, #32]
   13b34:	ldr	ip, [sp, #76]	; 0x4c
   13b38:	orr	r1, r1, #1
   13b3c:	add	sl, sp, #40	; 0x28
   13b40:	str	r1, [sp, #28]
   13b44:	str	r1, [sp, #4]
   13b48:	str	r2, [sp, #12]
   13b4c:	str	r3, [sp]
   13b50:	mov	r0, r6
   13b54:	mov	r1, r8
   13b58:	str	ip, [sp, #16]
   13b5c:	str	sl, [sp, #8]
   13b60:	mvn	r3, #0
   13b64:	mov	r2, r9
   13b68:	bl	11a90 <close@plt+0xc44>
   13b6c:	cmp	r8, r0
   13b70:	bhi	13bd4 <close@plt+0x2d88>
   13b74:	ldr	r3, [pc, #164]	; 13c20 <close@plt+0x2dd4>
   13b78:	add	r8, r0, #1
   13b7c:	cmp	r6, r3
   13b80:	str	r8, [r5, r4, lsl #3]
   13b84:	beq	13b90 <close@plt+0x2d44>
   13b88:	mov	r0, r6
   13b8c:	bl	16c18 <close@plt+0x5dcc>
   13b90:	mov	r0, r8
   13b94:	bl	1636c <close@plt+0x5520>
   13b98:	ldr	lr, [sp, #76]	; 0x4c
   13b9c:	ldr	r3, [sp, #32]
   13ba0:	ldr	ip, [sp, #72]	; 0x48
   13ba4:	ldr	r4, [sp, #28]
   13ba8:	mov	r2, r9
   13bac:	mov	r1, r8
   13bb0:	str	r0, [fp, #4]
   13bb4:	str	r3, [sp]
   13bb8:	str	sl, [sp, #8]
   13bbc:	str	r4, [sp, #4]
   13bc0:	str	lr, [sp, #16]
   13bc4:	str	ip, [sp, #12]
   13bc8:	mvn	r3, #0
   13bcc:	mov	r6, r0
   13bd0:	bl	11a90 <close@plt+0xc44>
   13bd4:	ldr	r3, [sp, #24]
   13bd8:	mov	r0, r6
   13bdc:	str	r3, [r7]
   13be0:	add	sp, sp, #132	; 0x84
   13be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13be8:	mov	r3, #8
   13bec:	sub	r2, r4, r2
   13bf0:	add	r1, sp, #80	; 0x50
   13bf4:	str	r3, [sp]
   13bf8:	add	r2, r2, #1
   13bfc:	mvn	r3, #-2147483648	; 0x80000000
   13c00:	bl	16588 <close@plt+0x573c>
   13c04:	mov	r5, r0
   13c08:	ldm	r8, {r0, r1}
   13c0c:	str	r5, [r6]
   13c10:	stm	r5, {r0, r1}
   13c14:	b	13af8 <close@plt+0x2cac>
   13c18:	bl	10e40 <abort@plt>
   13c1c:	andeq	r8, r2, r8, ror #1
   13c20:	andeq	r8, r2, r4, lsl #3
   13c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c28:	sub	sp, sp, #132	; 0x84
   13c2c:	mov	r5, r1
   13c30:	mov	r4, r0
   13c34:	mov	r9, r2
   13c38:	add	r0, sp, #80	; 0x50
   13c3c:	mov	r2, #48	; 0x30
   13c40:	mov	r1, #0
   13c44:	mov	sl, r3
   13c48:	bl	10d98 <memset@plt>
   13c4c:	cmp	r5, #10
   13c50:	beq	13e0c <close@plt+0x2fc0>
   13c54:	add	lr, sp, #80	; 0x50
   13c58:	str	r5, [sp, #80]	; 0x50
   13c5c:	ldm	lr!, {r0, r1, r2, r3}
   13c60:	add	ip, sp, #32
   13c64:	ldr	r6, [pc, #420]	; 13e10 <close@plt+0x2fc4>
   13c68:	stmia	ip!, {r0, r1, r2, r3}
   13c6c:	ldm	lr!, {r0, r1, r2, r3}
   13c70:	stmia	ip!, {r0, r1, r2, r3}
   13c74:	ldm	lr, {r0, r1, r2, r3}
   13c78:	stm	ip, {r0, r1, r2, r3}
   13c7c:	bl	10d80 <__errno_location@plt>
   13c80:	cmn	r4, #-2147483647	; 0x80000001
   13c84:	ldr	r5, [r6]
   13c88:	mov	r7, r0
   13c8c:	movne	r0, #0
   13c90:	moveq	r0, #1
   13c94:	ldr	r3, [r7]
   13c98:	orrs	r0, r0, r4, lsr #31
   13c9c:	str	r3, [sp, #24]
   13ca0:	bne	13e0c <close@plt+0x2fc0>
   13ca4:	ldr	r2, [r6, #4]
   13ca8:	cmp	r4, r2
   13cac:	blt	13d0c <close@plt+0x2ec0>
   13cb0:	add	r8, r6, #8
   13cb4:	cmp	r5, r8
   13cb8:	str	r2, [sp, #80]	; 0x50
   13cbc:	beq	13ddc <close@plt+0x2f90>
   13cc0:	mov	r3, #8
   13cc4:	sub	r2, r4, r2
   13cc8:	mov	r0, r5
   13ccc:	str	r3, [sp]
   13cd0:	add	r2, r2, #1
   13cd4:	add	r1, sp, #80	; 0x50
   13cd8:	mvn	r3, #-2147483648	; 0x80000000
   13cdc:	bl	16588 <close@plt+0x573c>
   13ce0:	mov	r5, r0
   13ce4:	str	r0, [r6]
   13ce8:	ldr	r0, [r6, #4]
   13cec:	ldr	r2, [sp, #80]	; 0x50
   13cf0:	mov	r1, #0
   13cf4:	sub	r2, r2, r0
   13cf8:	add	r0, r5, r0, lsl #3
   13cfc:	lsl	r2, r2, #3
   13d00:	bl	10d98 <memset@plt>
   13d04:	ldr	r3, [sp, #80]	; 0x50
   13d08:	str	r3, [r6, #4]
   13d0c:	add	fp, r5, r4, lsl #3
   13d10:	ldr	r3, [sp, #32]
   13d14:	ldr	r1, [sp, #36]	; 0x24
   13d18:	ldr	r8, [r5, r4, lsl #3]
   13d1c:	ldr	r6, [fp, #4]
   13d20:	ldr	r2, [sp, #72]	; 0x48
   13d24:	ldr	ip, [sp, #76]	; 0x4c
   13d28:	orr	r1, r1, #1
   13d2c:	str	r3, [sp]
   13d30:	add	r3, sp, #40	; 0x28
   13d34:	str	r1, [sp, #28]
   13d38:	str	r1, [sp, #4]
   13d3c:	str	r2, [sp, #12]
   13d40:	str	r3, [sp, #8]
   13d44:	mov	r0, r6
   13d48:	mov	r1, r8
   13d4c:	str	ip, [sp, #16]
   13d50:	mov	r3, sl
   13d54:	mov	r2, r9
   13d58:	bl	11a90 <close@plt+0xc44>
   13d5c:	cmp	r8, r0
   13d60:	bhi	13dc8 <close@plt+0x2f7c>
   13d64:	ldr	r3, [pc, #168]	; 13e14 <close@plt+0x2fc8>
   13d68:	add	r8, r0, #1
   13d6c:	cmp	r6, r3
   13d70:	str	r8, [r5, r4, lsl #3]
   13d74:	beq	13d80 <close@plt+0x2f34>
   13d78:	mov	r0, r6
   13d7c:	bl	16c18 <close@plt+0x5dcc>
   13d80:	mov	r0, r8
   13d84:	bl	1636c <close@plt+0x5520>
   13d88:	add	lr, sp, #40	; 0x28
   13d8c:	ldr	ip, [sp, #76]	; 0x4c
   13d90:	ldr	r4, [sp, #72]	; 0x48
   13d94:	ldr	r5, [sp, #28]
   13d98:	mov	r3, sl
   13d9c:	mov	r2, r9
   13da0:	mov	r1, r8
   13da4:	str	r0, [fp, #4]
   13da8:	str	lr, [sp, #8]
   13dac:	ldr	lr, [sp, #32]
   13db0:	str	r5, [sp, #4]
   13db4:	str	ip, [sp, #16]
   13db8:	str	r4, [sp, #12]
   13dbc:	str	lr, [sp]
   13dc0:	mov	r6, r0
   13dc4:	bl	11a90 <close@plt+0xc44>
   13dc8:	ldr	r3, [sp, #24]
   13dcc:	mov	r0, r6
   13dd0:	str	r3, [r7]
   13dd4:	add	sp, sp, #132	; 0x84
   13dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ddc:	mov	r3, #8
   13de0:	sub	r2, r4, r2
   13de4:	add	r1, sp, #80	; 0x50
   13de8:	str	r3, [sp]
   13dec:	add	r2, r2, #1
   13df0:	mvn	r3, #-2147483648	; 0x80000000
   13df4:	bl	16588 <close@plt+0x573c>
   13df8:	mov	r5, r0
   13dfc:	ldm	r8, {r0, r1}
   13e00:	str	r5, [r6]
   13e04:	stm	r5, {r0, r1}
   13e08:	b	13ce8 <close@plt+0x2e9c>
   13e0c:	bl	10e40 <abort@plt>
   13e10:	andeq	r8, r2, r8, ror #1
   13e14:	andeq	r8, r2, r4, lsl #3
   13e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e1c:	sub	sp, sp, #124	; 0x7c
   13e20:	mov	r4, r0
   13e24:	mov	r9, r1
   13e28:	add	r0, sp, #72	; 0x48
   13e2c:	mov	r2, #48	; 0x30
   13e30:	mov	r1, #0
   13e34:	bl	10d98 <memset@plt>
   13e38:	cmp	r4, #10
   13e3c:	beq	13fc8 <close@plt+0x317c>
   13e40:	add	lr, sp, #72	; 0x48
   13e44:	str	r4, [sp, #72]	; 0x48
   13e48:	ldm	lr!, {r0, r1, r2, r3}
   13e4c:	add	ip, sp, #24
   13e50:	ldr	r5, [pc, #372]	; 13fcc <close@plt+0x3180>
   13e54:	stmia	ip!, {r0, r1, r2, r3}
   13e58:	ldm	lr!, {r0, r1, r2, r3}
   13e5c:	stmia	ip!, {r0, r1, r2, r3}
   13e60:	ldm	lr, {r0, r1, r2, r3}
   13e64:	stm	ip, {r0, r1, r2, r3}
   13e68:	bl	10d80 <__errno_location@plt>
   13e6c:	ldr	r2, [r5, #4]
   13e70:	ldr	r4, [r5]
   13e74:	cmp	r2, #0
   13e78:	mov	r7, r0
   13e7c:	ldr	fp, [r0]
   13e80:	bgt	13edc <close@plt+0x3090>
   13e84:	add	r6, r5, #8
   13e88:	cmp	r4, r6
   13e8c:	str	r2, [sp, #72]	; 0x48
   13e90:	beq	13f98 <close@plt+0x314c>
   13e94:	mov	r3, #8
   13e98:	mov	r0, r4
   13e9c:	str	r3, [sp]
   13ea0:	rsb	r2, r2, #1
   13ea4:	add	r1, sp, #72	; 0x48
   13ea8:	mvn	r3, #-2147483648	; 0x80000000
   13eac:	bl	16588 <close@plt+0x573c>
   13eb0:	mov	r4, r0
   13eb4:	str	r0, [r5]
   13eb8:	ldr	r0, [r5, #4]
   13ebc:	ldr	r2, [sp, #72]	; 0x48
   13ec0:	mov	r1, #0
   13ec4:	sub	r2, r2, r0
   13ec8:	add	r0, r4, r0, lsl #3
   13ecc:	lsl	r2, r2, #3
   13ed0:	bl	10d98 <memset@plt>
   13ed4:	ldr	r3, [sp, #72]	; 0x48
   13ed8:	str	r3, [r5, #4]
   13edc:	ldr	r6, [sp, #28]
   13ee0:	ldr	r8, [r4]
   13ee4:	ldr	r5, [r4, #4]
   13ee8:	ldr	r2, [sp, #64]	; 0x40
   13eec:	ldr	r3, [sp, #24]
   13ef0:	ldr	ip, [sp, #68]	; 0x44
   13ef4:	orr	r6, r6, #1
   13ef8:	add	sl, sp, #32
   13efc:	str	r2, [sp, #12]
   13f00:	str	r3, [sp]
   13f04:	str	r6, [sp, #4]
   13f08:	mov	r1, r8
   13f0c:	mov	r0, r5
   13f10:	str	ip, [sp, #16]
   13f14:	str	sl, [sp, #8]
   13f18:	mvn	r3, #0
   13f1c:	mov	r2, r9
   13f20:	bl	11a90 <close@plt+0xc44>
   13f24:	cmp	r8, r0
   13f28:	bhi	13f88 <close@plt+0x313c>
   13f2c:	ldr	r3, [pc, #156]	; 13fd0 <close@plt+0x3184>
   13f30:	add	r8, r0, #1
   13f34:	cmp	r5, r3
   13f38:	str	r8, [r4]
   13f3c:	beq	13f48 <close@plt+0x30fc>
   13f40:	mov	r0, r5
   13f44:	bl	16c18 <close@plt+0x5dcc>
   13f48:	mov	r0, r8
   13f4c:	bl	1636c <close@plt+0x5520>
   13f50:	ldr	lr, [sp, #68]	; 0x44
   13f54:	ldr	r3, [sp, #24]
   13f58:	ldr	ip, [sp, #64]	; 0x40
   13f5c:	mov	r2, r9
   13f60:	mov	r1, r8
   13f64:	str	r0, [r4, #4]
   13f68:	str	r3, [sp]
   13f6c:	str	sl, [sp, #8]
   13f70:	str	r6, [sp, #4]
   13f74:	str	lr, [sp, #16]
   13f78:	str	ip, [sp, #12]
   13f7c:	mvn	r3, #0
   13f80:	mov	r5, r0
   13f84:	bl	11a90 <close@plt+0xc44>
   13f88:	mov	r0, r5
   13f8c:	str	fp, [r7]
   13f90:	add	sp, sp, #124	; 0x7c
   13f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f98:	mov	r3, #8
   13f9c:	add	r1, sp, #72	; 0x48
   13fa0:	str	r3, [sp]
   13fa4:	rsb	r2, r2, #1
   13fa8:	mvn	r3, #-2147483648	; 0x80000000
   13fac:	mov	r0, #0
   13fb0:	bl	16588 <close@plt+0x573c>
   13fb4:	mov	r4, r0
   13fb8:	ldm	r6, {r0, r1}
   13fbc:	str	r4, [r5]
   13fc0:	stm	r4, {r0, r1}
   13fc4:	b	13eb8 <close@plt+0x306c>
   13fc8:	bl	10e40 <abort@plt>
   13fcc:	andeq	r8, r2, r8, ror #1
   13fd0:	andeq	r8, r2, r4, lsl #3
   13fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd8:	sub	sp, sp, #132	; 0x84
   13fdc:	mov	r4, r0
   13fe0:	mov	r9, r1
   13fe4:	mov	sl, r2
   13fe8:	add	r0, sp, #80	; 0x50
   13fec:	mov	r2, #48	; 0x30
   13ff0:	mov	r1, #0
   13ff4:	bl	10d98 <memset@plt>
   13ff8:	cmp	r4, #10
   13ffc:	beq	14190 <close@plt+0x3344>
   14000:	add	lr, sp, #80	; 0x50
   14004:	str	r4, [sp, #80]	; 0x50
   14008:	ldm	lr!, {r0, r1, r2, r3}
   1400c:	add	ip, sp, #32
   14010:	ldr	r5, [pc, #380]	; 14194 <close@plt+0x3348>
   14014:	stmia	ip!, {r0, r1, r2, r3}
   14018:	ldm	lr!, {r0, r1, r2, r3}
   1401c:	stmia	ip!, {r0, r1, r2, r3}
   14020:	ldm	lr, {r0, r1, r2, r3}
   14024:	stm	ip, {r0, r1, r2, r3}
   14028:	bl	10d80 <__errno_location@plt>
   1402c:	ldr	r2, [r5, #4]
   14030:	ldr	r4, [r5]
   14034:	cmp	r2, #0
   14038:	ldr	r3, [r0]
   1403c:	mov	r7, r0
   14040:	str	r3, [sp, #28]
   14044:	bgt	140a0 <close@plt+0x3254>
   14048:	add	r6, r5, #8
   1404c:	cmp	r4, r6
   14050:	str	r2, [sp, #80]	; 0x50
   14054:	beq	14160 <close@plt+0x3314>
   14058:	mov	r3, #8
   1405c:	mov	r0, r4
   14060:	str	r3, [sp]
   14064:	rsb	r2, r2, #1
   14068:	add	r1, sp, #80	; 0x50
   1406c:	mvn	r3, #-2147483648	; 0x80000000
   14070:	bl	16588 <close@plt+0x573c>
   14074:	mov	r4, r0
   14078:	str	r0, [r5]
   1407c:	ldr	r0, [r5, #4]
   14080:	ldr	r2, [sp, #80]	; 0x50
   14084:	mov	r1, #0
   14088:	sub	r2, r2, r0
   1408c:	add	r0, r4, r0, lsl #3
   14090:	lsl	r2, r2, #3
   14094:	bl	10d98 <memset@plt>
   14098:	ldr	r3, [sp, #80]	; 0x50
   1409c:	str	r3, [r5, #4]
   140a0:	ldr	r6, [sp, #36]	; 0x24
   140a4:	ldr	r8, [r4]
   140a8:	ldr	r5, [r4, #4]
   140ac:	ldr	r2, [sp, #72]	; 0x48
   140b0:	ldr	r3, [sp, #32]
   140b4:	ldr	ip, [sp, #76]	; 0x4c
   140b8:	orr	r6, r6, #1
   140bc:	add	fp, sp, #40	; 0x28
   140c0:	str	r2, [sp, #12]
   140c4:	str	r3, [sp]
   140c8:	str	r6, [sp, #4]
   140cc:	mov	r1, r8
   140d0:	mov	r0, r5
   140d4:	str	ip, [sp, #16]
   140d8:	str	fp, [sp, #8]
   140dc:	mov	r3, sl
   140e0:	mov	r2, r9
   140e4:	bl	11a90 <close@plt+0xc44>
   140e8:	cmp	r8, r0
   140ec:	bhi	1414c <close@plt+0x3300>
   140f0:	ldr	r3, [pc, #160]	; 14198 <close@plt+0x334c>
   140f4:	add	r8, r0, #1
   140f8:	cmp	r5, r3
   140fc:	str	r8, [r4]
   14100:	beq	1410c <close@plt+0x32c0>
   14104:	mov	r0, r5
   14108:	bl	16c18 <close@plt+0x5dcc>
   1410c:	mov	r0, r8
   14110:	bl	1636c <close@plt+0x5520>
   14114:	ldr	ip, [sp, #76]	; 0x4c
   14118:	ldr	lr, [sp, #32]
   1411c:	mov	r3, sl
   14120:	mov	r2, r9
   14124:	mov	r1, r8
   14128:	str	r0, [r4, #4]
   1412c:	ldr	r4, [sp, #72]	; 0x48
   14130:	str	fp, [sp, #8]
   14134:	str	r6, [sp, #4]
   14138:	str	ip, [sp, #16]
   1413c:	str	r4, [sp, #12]
   14140:	str	lr, [sp]
   14144:	mov	r5, r0
   14148:	bl	11a90 <close@plt+0xc44>
   1414c:	ldr	r3, [sp, #28]
   14150:	mov	r0, r5
   14154:	str	r3, [r7]
   14158:	add	sp, sp, #132	; 0x84
   1415c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14160:	mov	r3, #8
   14164:	add	r1, sp, #80	; 0x50
   14168:	str	r3, [sp]
   1416c:	rsb	r2, r2, #1
   14170:	mvn	r3, #-2147483648	; 0x80000000
   14174:	mov	r0, #0
   14178:	bl	16588 <close@plt+0x573c>
   1417c:	mov	r4, r0
   14180:	ldm	r6, {r0, r1}
   14184:	str	r4, [r5]
   14188:	stm	r4, {r0, r1}
   1418c:	b	1407c <close@plt+0x3230>
   14190:	bl	10e40 <abort@plt>
   14194:	andeq	r8, r2, r8, ror #1
   14198:	andeq	r8, r2, r4, lsl #3
   1419c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141a0:	mov	r4, r2
   141a4:	ldr	lr, [pc, #432]	; 1435c <close@plt+0x3510>
   141a8:	mov	sl, r0
   141ac:	mov	fp, r1
   141b0:	ldm	lr!, {r0, r1, r2, r3}
   141b4:	sub	sp, sp, #92	; 0x5c
   141b8:	add	ip, sp, #40	; 0x28
   141bc:	lsr	r7, r4, #5
   141c0:	stmia	ip!, {r0, r1, r2, r3}
   141c4:	add	r6, sp, #48	; 0x30
   141c8:	ldm	lr!, {r0, r1, r2, r3}
   141cc:	and	r4, r4, #31
   141d0:	ldr	r5, [pc, #392]	; 14360 <close@plt+0x3514>
   141d4:	stmia	ip!, {r0, r1, r2, r3}
   141d8:	ldm	lr, {r0, r1, r2, r3}
   141dc:	stm	ip, {r0, r1, r2, r3}
   141e0:	ldr	r2, [r6, r7, lsl #2]
   141e4:	lsr	r3, r2, r4
   141e8:	eor	r3, r3, #1
   141ec:	and	r3, r3, #1
   141f0:	eor	r4, r2, r3, lsl r4
   141f4:	str	r4, [r6, r7, lsl #2]
   141f8:	bl	10d80 <__errno_location@plt>
   141fc:	ldr	r2, [r5, #4]
   14200:	ldr	r4, [r5]
   14204:	cmp	r2, #0
   14208:	ldr	r3, [r0]
   1420c:	mov	r8, r0
   14210:	str	r3, [sp, #28]
   14214:	bgt	14270 <close@plt+0x3424>
   14218:	add	r7, r5, #8
   1421c:	cmp	r4, r7
   14220:	str	r2, [sp, #36]	; 0x24
   14224:	beq	1432c <close@plt+0x34e0>
   14228:	mov	r3, #8
   1422c:	mov	r0, r4
   14230:	str	r3, [sp]
   14234:	rsb	r2, r2, #1
   14238:	mvn	r3, #-2147483648	; 0x80000000
   1423c:	add	r1, sp, #36	; 0x24
   14240:	bl	16588 <close@plt+0x573c>
   14244:	mov	r4, r0
   14248:	str	r0, [r5]
   1424c:	ldr	r0, [r5, #4]
   14250:	ldr	r2, [sp, #36]	; 0x24
   14254:	mov	r1, #0
   14258:	sub	r2, r2, r0
   1425c:	add	r0, r4, r0, lsl #3
   14260:	lsl	r2, r2, #3
   14264:	bl	10d98 <memset@plt>
   14268:	ldr	r3, [sp, #36]	; 0x24
   1426c:	str	r3, [r5, #4]
   14270:	ldr	r7, [sp, #44]	; 0x2c
   14274:	ldr	r9, [r4]
   14278:	ldr	r5, [r4, #4]
   1427c:	ldr	r2, [sp, #80]	; 0x50
   14280:	ldr	r3, [sp, #40]	; 0x28
   14284:	ldr	ip, [sp, #84]	; 0x54
   14288:	orr	r7, r7, #1
   1428c:	str	r2, [sp, #12]
   14290:	str	r3, [sp]
   14294:	str	r7, [sp, #4]
   14298:	str	r6, [sp, #8]
   1429c:	mov	r1, r9
   142a0:	mov	r0, r5
   142a4:	str	ip, [sp, #16]
   142a8:	mov	r3, fp
   142ac:	mov	r2, sl
   142b0:	bl	11a90 <close@plt+0xc44>
   142b4:	cmp	r9, r0
   142b8:	bhi	14318 <close@plt+0x34cc>
   142bc:	ldr	r3, [pc, #160]	; 14364 <close@plt+0x3518>
   142c0:	add	r9, r0, #1
   142c4:	cmp	r5, r3
   142c8:	str	r9, [r4]
   142cc:	beq	142d8 <close@plt+0x348c>
   142d0:	mov	r0, r5
   142d4:	bl	16c18 <close@plt+0x5dcc>
   142d8:	mov	r0, r9
   142dc:	bl	1636c <close@plt+0x5520>
   142e0:	ldr	ip, [sp, #84]	; 0x54
   142e4:	ldr	lr, [sp, #40]	; 0x28
   142e8:	mov	r3, fp
   142ec:	mov	r2, sl
   142f0:	mov	r1, r9
   142f4:	str	r0, [r4, #4]
   142f8:	ldr	r4, [sp, #80]	; 0x50
   142fc:	str	r6, [sp, #8]
   14300:	str	r7, [sp, #4]
   14304:	str	ip, [sp, #16]
   14308:	str	r4, [sp, #12]
   1430c:	str	lr, [sp]
   14310:	mov	r5, r0
   14314:	bl	11a90 <close@plt+0xc44>
   14318:	ldr	r3, [sp, #28]
   1431c:	mov	r0, r5
   14320:	str	r3, [r8]
   14324:	add	sp, sp, #92	; 0x5c
   14328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1432c:	mov	r3, #8
   14330:	str	r3, [sp]
   14334:	add	r1, sp, #36	; 0x24
   14338:	rsb	r2, r2, #1
   1433c:	mvn	r3, #-2147483648	; 0x80000000
   14340:	mov	r0, #0
   14344:	bl	16588 <close@plt+0x573c>
   14348:	mov	r4, r0
   1434c:	ldm	r7, {r0, r1}
   14350:	str	r4, [r5]
   14354:	stm	r4, {r0, r1}
   14358:	b	1424c <close@plt+0x3400>
   1435c:	andeq	r8, r2, r4, asr r1
   14360:	andeq	r8, r2, r8, ror #1
   14364:	andeq	r8, r2, r4, lsl #3
   14368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1436c:	mov	r4, r1
   14370:	ldr	lr, [pc, #420]	; 1451c <close@plt+0x36d0>
   14374:	mov	r6, r0
   14378:	sub	sp, sp, #84	; 0x54
   1437c:	ldm	lr!, {r0, r1, r2, r3}
   14380:	add	ip, sp, #32
   14384:	lsr	r8, r4, #5
   14388:	add	r5, sp, #40	; 0x28
   1438c:	stmia	ip!, {r0, r1, r2, r3}
   14390:	and	r4, r4, #31
   14394:	ldm	lr!, {r0, r1, r2, r3}
   14398:	ldr	r7, [pc, #384]	; 14520 <close@plt+0x36d4>
   1439c:	stmia	ip!, {r0, r1, r2, r3}
   143a0:	ldm	lr, {r0, r1, r2, r3}
   143a4:	stm	ip, {r0, r1, r2, r3}
   143a8:	ldr	r2, [r5, r8, lsl #2]
   143ac:	lsr	r3, r2, r4
   143b0:	eor	r3, r3, #1
   143b4:	and	r3, r3, #1
   143b8:	eor	r4, r2, r3, lsl r4
   143bc:	str	r4, [r5, r8, lsl #2]
   143c0:	bl	10d80 <__errno_location@plt>
   143c4:	ldr	r2, [r7, #4]
   143c8:	ldr	r4, [r7]
   143cc:	cmp	r2, #0
   143d0:	mov	r9, r0
   143d4:	ldr	sl, [r0]
   143d8:	bgt	14434 <close@plt+0x35e8>
   143dc:	add	r8, r7, #8
   143e0:	cmp	r4, r8
   143e4:	str	r2, [sp, #28]
   143e8:	beq	144ec <close@plt+0x36a0>
   143ec:	mov	r3, #8
   143f0:	mov	r0, r4
   143f4:	str	r3, [sp]
   143f8:	rsb	r2, r2, #1
   143fc:	mvn	r3, #-2147483648	; 0x80000000
   14400:	add	r1, sp, #28
   14404:	bl	16588 <close@plt+0x573c>
   14408:	mov	r4, r0
   1440c:	str	r0, [r7]
   14410:	ldr	r0, [r7, #4]
   14414:	ldr	r2, [sp, #28]
   14418:	mov	r1, #0
   1441c:	sub	r2, r2, r0
   14420:	add	r0, r4, r0, lsl #3
   14424:	lsl	r2, r2, #3
   14428:	bl	10d98 <memset@plt>
   1442c:	ldr	r3, [sp, #28]
   14430:	str	r3, [r7, #4]
   14434:	ldr	r8, [sp, #36]	; 0x24
   14438:	ldr	fp, [r4]
   1443c:	ldr	r7, [r4, #4]
   14440:	ldr	r2, [sp, #72]	; 0x48
   14444:	ldr	r3, [sp, #32]
   14448:	ldr	ip, [sp, #76]	; 0x4c
   1444c:	orr	r8, r8, #1
   14450:	str	r2, [sp, #12]
   14454:	str	r3, [sp]
   14458:	str	r8, [sp, #4]
   1445c:	str	r5, [sp, #8]
   14460:	mov	r1, fp
   14464:	mov	r0, r7
   14468:	str	ip, [sp, #16]
   1446c:	mvn	r3, #0
   14470:	mov	r2, r6
   14474:	bl	11a90 <close@plt+0xc44>
   14478:	cmp	fp, r0
   1447c:	bhi	144dc <close@plt+0x3690>
   14480:	ldr	r3, [pc, #156]	; 14524 <close@plt+0x36d8>
   14484:	add	fp, r0, #1
   14488:	cmp	r7, r3
   1448c:	str	fp, [r4]
   14490:	beq	1449c <close@plt+0x3650>
   14494:	mov	r0, r7
   14498:	bl	16c18 <close@plt+0x5dcc>
   1449c:	mov	r0, fp
   144a0:	bl	1636c <close@plt+0x5520>
   144a4:	ldr	lr, [sp, #76]	; 0x4c
   144a8:	ldr	r3, [sp, #32]
   144ac:	ldr	ip, [sp, #72]	; 0x48
   144b0:	mov	r2, r6
   144b4:	mov	r1, fp
   144b8:	str	r0, [r4, #4]
   144bc:	str	r3, [sp]
   144c0:	str	r5, [sp, #8]
   144c4:	str	r8, [sp, #4]
   144c8:	str	lr, [sp, #16]
   144cc:	str	ip, [sp, #12]
   144d0:	mvn	r3, #0
   144d4:	mov	r7, r0
   144d8:	bl	11a90 <close@plt+0xc44>
   144dc:	mov	r0, r7
   144e0:	str	sl, [r9]
   144e4:	add	sp, sp, #84	; 0x54
   144e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144ec:	mov	r3, #8
   144f0:	str	r3, [sp]
   144f4:	add	r1, sp, #28
   144f8:	rsb	r2, r2, #1
   144fc:	mvn	r3, #-2147483648	; 0x80000000
   14500:	mov	r0, #0
   14504:	bl	16588 <close@plt+0x573c>
   14508:	mov	r4, r0
   1450c:	ldm	r8, {r0, r1}
   14510:	str	r4, [r7]
   14514:	stm	r4, {r0, r1}
   14518:	b	14410 <close@plt+0x35c4>
   1451c:	andeq	r8, r2, r4, asr r1
   14520:	andeq	r8, r2, r8, ror #1
   14524:	andeq	r8, r2, r4, lsl #3
   14528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1452c:	mov	r6, r0
   14530:	ldr	lr, [pc, #404]	; 146cc <close@plt+0x3880>
   14534:	sub	sp, sp, #84	; 0x54
   14538:	add	ip, sp, #32
   1453c:	ldm	lr!, {r0, r1, r2, r3}
   14540:	ldr	r5, [pc, #392]	; 146d0 <close@plt+0x3884>
   14544:	stmia	ip!, {r0, r1, r2, r3}
   14548:	ldm	lr!, {r0, r1, r2, r3}
   1454c:	ldr	r4, [sp, #44]	; 0x2c
   14550:	stmia	ip!, {r0, r1, r2, r3}
   14554:	ldm	lr, {r0, r1, r2, r3}
   14558:	mvn	lr, r4
   1455c:	and	lr, lr, #67108864	; 0x4000000
   14560:	eor	lr, lr, r4
   14564:	stm	ip, {r0, r1, r2, r3}
   14568:	str	lr, [sp, #44]	; 0x2c
   1456c:	bl	10d80 <__errno_location@plt>
   14570:	ldr	r2, [r5, #4]
   14574:	ldr	r4, [r5]
   14578:	cmp	r2, #0
   1457c:	mov	r8, r0
   14580:	ldr	sl, [r0]
   14584:	bgt	145e0 <close@plt+0x3794>
   14588:	add	r7, r5, #8
   1458c:	cmp	r4, r7
   14590:	str	r2, [sp, #28]
   14594:	beq	1469c <close@plt+0x3850>
   14598:	mov	r3, #8
   1459c:	mov	r0, r4
   145a0:	str	r3, [sp]
   145a4:	rsb	r2, r2, #1
   145a8:	mvn	r3, #-2147483648	; 0x80000000
   145ac:	add	r1, sp, #28
   145b0:	bl	16588 <close@plt+0x573c>
   145b4:	mov	r4, r0
   145b8:	str	r0, [r5]
   145bc:	ldr	r0, [r5, #4]
   145c0:	ldr	r2, [sp, #28]
   145c4:	mov	r1, #0
   145c8:	sub	r2, r2, r0
   145cc:	add	r0, r4, r0, lsl #3
   145d0:	lsl	r2, r2, #3
   145d4:	bl	10d98 <memset@plt>
   145d8:	ldr	r3, [sp, #28]
   145dc:	str	r3, [r5, #4]
   145e0:	ldr	r7, [sp, #36]	; 0x24
   145e4:	ldr	r9, [r4]
   145e8:	ldr	r5, [r4, #4]
   145ec:	ldr	r2, [sp, #72]	; 0x48
   145f0:	ldr	r3, [sp, #32]
   145f4:	ldr	ip, [sp, #76]	; 0x4c
   145f8:	orr	r7, r7, #1
   145fc:	add	fp, sp, #40	; 0x28
   14600:	str	r2, [sp, #12]
   14604:	str	r3, [sp]
   14608:	str	r7, [sp, #4]
   1460c:	mov	r1, r9
   14610:	mov	r0, r5
   14614:	str	ip, [sp, #16]
   14618:	str	fp, [sp, #8]
   1461c:	mvn	r3, #0
   14620:	mov	r2, r6
   14624:	bl	11a90 <close@plt+0xc44>
   14628:	cmp	r9, r0
   1462c:	bhi	1468c <close@plt+0x3840>
   14630:	ldr	r3, [pc, #156]	; 146d4 <close@plt+0x3888>
   14634:	add	r9, r0, #1
   14638:	cmp	r5, r3
   1463c:	str	r9, [r4]
   14640:	beq	1464c <close@plt+0x3800>
   14644:	mov	r0, r5
   14648:	bl	16c18 <close@plt+0x5dcc>
   1464c:	mov	r0, r9
   14650:	bl	1636c <close@plt+0x5520>
   14654:	ldr	lr, [sp, #76]	; 0x4c
   14658:	ldr	r3, [sp, #32]
   1465c:	ldr	ip, [sp, #72]	; 0x48
   14660:	mov	r2, r6
   14664:	mov	r1, r9
   14668:	str	r0, [r4, #4]
   1466c:	str	r3, [sp]
   14670:	str	fp, [sp, #8]
   14674:	str	r7, [sp, #4]
   14678:	str	lr, [sp, #16]
   1467c:	str	ip, [sp, #12]
   14680:	mvn	r3, #0
   14684:	mov	r5, r0
   14688:	bl	11a90 <close@plt+0xc44>
   1468c:	mov	r0, r5
   14690:	str	sl, [r8]
   14694:	add	sp, sp, #84	; 0x54
   14698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1469c:	mov	r3, #8
   146a0:	str	r3, [sp]
   146a4:	add	r1, sp, #28
   146a8:	rsb	r2, r2, #1
   146ac:	mvn	r3, #-2147483648	; 0x80000000
   146b0:	mov	r0, #0
   146b4:	bl	16588 <close@plt+0x573c>
   146b8:	mov	r4, r0
   146bc:	ldm	r7, {r0, r1}
   146c0:	str	r4, [r5]
   146c4:	stm	r4, {r0, r1}
   146c8:	b	145bc <close@plt+0x3770>
   146cc:	andeq	r8, r2, r4, asr r1
   146d0:	andeq	r8, r2, r8, ror #1
   146d4:	andeq	r8, r2, r4, lsl #3
   146d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146dc:	mov	r9, r0
   146e0:	ldr	lr, [pc, #416]	; 14888 <close@plt+0x3a3c>
   146e4:	mov	sl, r1
   146e8:	sub	sp, sp, #92	; 0x5c
   146ec:	ldm	lr!, {r0, r1, r2, r3}
   146f0:	add	ip, sp, #40	; 0x28
   146f4:	ldr	r5, [pc, #400]	; 1488c <close@plt+0x3a40>
   146f8:	stmia	ip!, {r0, r1, r2, r3}
   146fc:	ldm	lr!, {r0, r1, r2, r3}
   14700:	ldr	r4, [sp, #52]	; 0x34
   14704:	stmia	ip!, {r0, r1, r2, r3}
   14708:	ldm	lr, {r0, r1, r2, r3}
   1470c:	mvn	lr, r4
   14710:	and	lr, lr, #67108864	; 0x4000000
   14714:	eor	lr, lr, r4
   14718:	stm	ip, {r0, r1, r2, r3}
   1471c:	str	lr, [sp, #52]	; 0x34
   14720:	bl	10d80 <__errno_location@plt>
   14724:	ldr	r2, [r5, #4]
   14728:	ldr	r4, [r5]
   1472c:	cmp	r2, #0
   14730:	ldr	r3, [r0]
   14734:	mov	r7, r0
   14738:	str	r3, [sp, #28]
   1473c:	bgt	14798 <close@plt+0x394c>
   14740:	add	r6, r5, #8
   14744:	cmp	r4, r6
   14748:	str	r2, [sp, #36]	; 0x24
   1474c:	beq	14858 <close@plt+0x3a0c>
   14750:	mov	r3, #8
   14754:	mov	r0, r4
   14758:	str	r3, [sp]
   1475c:	rsb	r2, r2, #1
   14760:	mvn	r3, #-2147483648	; 0x80000000
   14764:	add	r1, sp, #36	; 0x24
   14768:	bl	16588 <close@plt+0x573c>
   1476c:	mov	r4, r0
   14770:	str	r0, [r5]
   14774:	ldr	r0, [r5, #4]
   14778:	ldr	r2, [sp, #36]	; 0x24
   1477c:	mov	r1, #0
   14780:	sub	r2, r2, r0
   14784:	add	r0, r4, r0, lsl #3
   14788:	lsl	r2, r2, #3
   1478c:	bl	10d98 <memset@plt>
   14790:	ldr	r3, [sp, #36]	; 0x24
   14794:	str	r3, [r5, #4]
   14798:	ldr	r6, [sp, #44]	; 0x2c
   1479c:	ldr	r8, [r4]
   147a0:	ldr	r5, [r4, #4]
   147a4:	ldr	r2, [sp, #80]	; 0x50
   147a8:	ldr	r3, [sp, #40]	; 0x28
   147ac:	ldr	ip, [sp, #84]	; 0x54
   147b0:	orr	r6, r6, #1
   147b4:	add	fp, sp, #48	; 0x30
   147b8:	str	r2, [sp, #12]
   147bc:	str	r3, [sp]
   147c0:	str	r6, [sp, #4]
   147c4:	mov	r1, r8
   147c8:	mov	r0, r5
   147cc:	str	ip, [sp, #16]
   147d0:	str	fp, [sp, #8]
   147d4:	mov	r3, sl
   147d8:	mov	r2, r9
   147dc:	bl	11a90 <close@plt+0xc44>
   147e0:	cmp	r8, r0
   147e4:	bhi	14844 <close@plt+0x39f8>
   147e8:	ldr	r3, [pc, #160]	; 14890 <close@plt+0x3a44>
   147ec:	add	r8, r0, #1
   147f0:	cmp	r5, r3
   147f4:	str	r8, [r4]
   147f8:	beq	14804 <close@plt+0x39b8>
   147fc:	mov	r0, r5
   14800:	bl	16c18 <close@plt+0x5dcc>
   14804:	mov	r0, r8
   14808:	bl	1636c <close@plt+0x5520>
   1480c:	ldr	ip, [sp, #84]	; 0x54
   14810:	ldr	lr, [sp, #40]	; 0x28
   14814:	mov	r3, sl
   14818:	mov	r2, r9
   1481c:	mov	r1, r8
   14820:	str	r0, [r4, #4]
   14824:	ldr	r4, [sp, #80]	; 0x50
   14828:	str	fp, [sp, #8]
   1482c:	str	r6, [sp, #4]
   14830:	str	ip, [sp, #16]
   14834:	str	r4, [sp, #12]
   14838:	str	lr, [sp]
   1483c:	mov	r5, r0
   14840:	bl	11a90 <close@plt+0xc44>
   14844:	ldr	r3, [sp, #28]
   14848:	mov	r0, r5
   1484c:	str	r3, [r7]
   14850:	add	sp, sp, #92	; 0x5c
   14854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14858:	mov	r3, #8
   1485c:	str	r3, [sp]
   14860:	add	r1, sp, #36	; 0x24
   14864:	rsb	r2, r2, #1
   14868:	mvn	r3, #-2147483648	; 0x80000000
   1486c:	mov	r0, #0
   14870:	bl	16588 <close@plt+0x573c>
   14874:	mov	r4, r0
   14878:	ldm	r6, {r0, r1}
   1487c:	str	r4, [r5]
   14880:	stm	r4, {r0, r1}
   14884:	b	14774 <close@plt+0x3928>
   14888:	andeq	r8, r2, r4, asr r1
   1488c:	andeq	r8, r2, r8, ror #1
   14890:	andeq	r8, r2, r4, lsl #3
   14894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14898:	sub	sp, sp, #180	; 0xb4
   1489c:	mov	r6, r1
   148a0:	mov	r4, r0
   148a4:	mov	r9, r2
   148a8:	add	r0, sp, #80	; 0x50
   148ac:	mov	r2, #48	; 0x30
   148b0:	mov	r1, #0
   148b4:	bl	10d98 <memset@plt>
   148b8:	cmp	r6, #10
   148bc:	beq	14a9c <close@plt+0x3c50>
   148c0:	add	r5, sp, #80	; 0x50
   148c4:	str	r6, [sp, #80]	; 0x50
   148c8:	ldm	r5!, {r0, r1, r2, r3}
   148cc:	add	ip, sp, #128	; 0x80
   148d0:	mov	r7, ip
   148d4:	add	lr, sp, #32
   148d8:	stmia	ip!, {r0, r1, r2, r3}
   148dc:	mov	r8, #67108864	; 0x4000000
   148e0:	ldm	r5!, {r0, r1, r2, r3}
   148e4:	ldr	r6, [pc, #436]	; 14aa0 <close@plt+0x3c54>
   148e8:	stmia	ip!, {r0, r1, r2, r3}
   148ec:	ldm	r5, {r0, r1, r2, r3}
   148f0:	stm	ip, {r0, r1, r2, r3}
   148f4:	ldm	r7!, {r0, r1, r2, r3}
   148f8:	stmia	lr!, {r0, r1, r2, r3}
   148fc:	ldm	r7!, {r0, r1, r2, r3}
   14900:	str	r8, [sp, #44]	; 0x2c
   14904:	stmia	lr!, {r0, r1, r2, r3}
   14908:	ldm	ip, {r0, r1, r2, r3}
   1490c:	stm	lr, {r0, r1, r2, r3}
   14910:	bl	10d80 <__errno_location@plt>
   14914:	cmn	r4, #-2147483647	; 0x80000001
   14918:	ldr	r5, [r6]
   1491c:	mov	r7, r0
   14920:	movne	r0, #0
   14924:	moveq	r0, #1
   14928:	ldr	r3, [r7]
   1492c:	orrs	r0, r0, r4, lsr #31
   14930:	str	r3, [sp, #24]
   14934:	bne	14a9c <close@plt+0x3c50>
   14938:	ldr	r2, [r6, #4]
   1493c:	cmp	r4, r2
   14940:	blt	149a0 <close@plt+0x3b54>
   14944:	add	r8, r6, #8
   14948:	cmp	r5, r8
   1494c:	str	r2, [sp, #80]	; 0x50
   14950:	beq	14a6c <close@plt+0x3c20>
   14954:	mov	r3, #8
   14958:	sub	r2, r4, r2
   1495c:	mov	r0, r5
   14960:	str	r3, [sp]
   14964:	add	r2, r2, #1
   14968:	add	r1, sp, #80	; 0x50
   1496c:	mvn	r3, #-2147483648	; 0x80000000
   14970:	bl	16588 <close@plt+0x573c>
   14974:	mov	r5, r0
   14978:	str	r0, [r6]
   1497c:	ldr	r0, [r6, #4]
   14980:	ldr	r2, [sp, #80]	; 0x50
   14984:	mov	r1, #0
   14988:	sub	r2, r2, r0
   1498c:	add	r0, r5, r0, lsl #3
   14990:	lsl	r2, r2, #3
   14994:	bl	10d98 <memset@plt>
   14998:	ldr	r3, [sp, #80]	; 0x50
   1499c:	str	r3, [r6, #4]
   149a0:	add	fp, r5, r4, lsl #3
   149a4:	ldr	r1, [sp, #36]	; 0x24
   149a8:	ldr	r8, [r5, r4, lsl #3]
   149ac:	ldr	r6, [fp, #4]
   149b0:	ldr	r2, [sp, #72]	; 0x48
   149b4:	ldr	r3, [sp, #32]
   149b8:	ldr	ip, [sp, #76]	; 0x4c
   149bc:	orr	r1, r1, #1
   149c0:	add	sl, sp, #40	; 0x28
   149c4:	str	r1, [sp, #28]
   149c8:	str	r1, [sp, #4]
   149cc:	str	r2, [sp, #12]
   149d0:	str	r3, [sp]
   149d4:	mov	r0, r6
   149d8:	mov	r1, r8
   149dc:	str	ip, [sp, #16]
   149e0:	str	sl, [sp, #8]
   149e4:	mvn	r3, #0
   149e8:	mov	r2, r9
   149ec:	bl	11a90 <close@plt+0xc44>
   149f0:	cmp	r8, r0
   149f4:	bhi	14a58 <close@plt+0x3c0c>
   149f8:	ldr	r3, [pc, #164]	; 14aa4 <close@plt+0x3c58>
   149fc:	add	r8, r0, #1
   14a00:	cmp	r6, r3
   14a04:	str	r8, [r5, r4, lsl #3]
   14a08:	beq	14a14 <close@plt+0x3bc8>
   14a0c:	mov	r0, r6
   14a10:	bl	16c18 <close@plt+0x5dcc>
   14a14:	mov	r0, r8
   14a18:	bl	1636c <close@plt+0x5520>
   14a1c:	ldr	lr, [sp, #76]	; 0x4c
   14a20:	ldr	r3, [sp, #32]
   14a24:	ldr	ip, [sp, #72]	; 0x48
   14a28:	ldr	r4, [sp, #28]
   14a2c:	mov	r2, r9
   14a30:	mov	r1, r8
   14a34:	str	r0, [fp, #4]
   14a38:	str	r3, [sp]
   14a3c:	str	sl, [sp, #8]
   14a40:	str	r4, [sp, #4]
   14a44:	str	lr, [sp, #16]
   14a48:	str	ip, [sp, #12]
   14a4c:	mvn	r3, #0
   14a50:	mov	r6, r0
   14a54:	bl	11a90 <close@plt+0xc44>
   14a58:	ldr	r3, [sp, #24]
   14a5c:	mov	r0, r6
   14a60:	str	r3, [r7]
   14a64:	add	sp, sp, #180	; 0xb4
   14a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a6c:	mov	r3, #8
   14a70:	sub	r2, r4, r2
   14a74:	add	r1, sp, #80	; 0x50
   14a78:	str	r3, [sp]
   14a7c:	add	r2, r2, #1
   14a80:	mvn	r3, #-2147483648	; 0x80000000
   14a84:	bl	16588 <close@plt+0x573c>
   14a88:	mov	r5, r0
   14a8c:	ldm	r8, {r0, r1}
   14a90:	str	r5, [r6]
   14a94:	stm	r5, {r0, r1}
   14a98:	b	1497c <close@plt+0x3b30>
   14a9c:	bl	10e40 <abort@plt>
   14aa0:	andeq	r8, r2, r8, ror #1
   14aa4:	andeq	r8, r2, r4, lsl #3
   14aa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14aac:	mov	r7, r1
   14ab0:	ldr	lr, [pc, #492]	; 14ca4 <close@plt+0x3e58>
   14ab4:	mov	r8, r2
   14ab8:	mov	r4, r0
   14abc:	mov	fp, r3
   14ac0:	ldm	lr!, {r0, r1, r2, r3}
   14ac4:	sub	sp, sp, #100	; 0x64
   14ac8:	add	ip, sp, #48	; 0x30
   14acc:	mov	sl, #10
   14ad0:	stmia	ip!, {r0, r1, r2, r3}
   14ad4:	cmp	r8, #0
   14ad8:	cmpne	r7, #0
   14adc:	ldm	lr!, {r0, r1, r2, r3}
   14ae0:	str	sl, [sp, #48]	; 0x30
   14ae4:	stmia	ip!, {r0, r1, r2, r3}
   14ae8:	ldm	lr, {r0, r1, r2, r3}
   14aec:	stm	ip, {r0, r1, r2, r3}
   14af0:	beq	14ca0 <close@plt+0x3e54>
   14af4:	str	r7, [sp, #88]	; 0x58
   14af8:	str	r8, [sp, #92]	; 0x5c
   14afc:	bl	10d80 <__errno_location@plt>
   14b00:	ldr	r6, [pc, #416]	; 14ca8 <close@plt+0x3e5c>
   14b04:	cmn	r4, #-2147483647	; 0x80000001
   14b08:	ldr	r5, [r6]
   14b0c:	mov	r9, r0
   14b10:	movne	r0, #0
   14b14:	moveq	r0, #1
   14b18:	ldr	r3, [r9]
   14b1c:	orrs	r0, r0, r4, lsr #31
   14b20:	str	r3, [sp, #28]
   14b24:	bne	14ca0 <close@plt+0x3e54>
   14b28:	ldr	r2, [r6, #4]
   14b2c:	cmp	r4, r2
   14b30:	movlt	r3, sl
   14b34:	blt	14ba0 <close@plt+0x3d54>
   14b38:	add	r7, r6, #8
   14b3c:	cmp	r5, r7
   14b40:	str	r2, [sp, #44]	; 0x2c
   14b44:	beq	14c70 <close@plt+0x3e24>
   14b48:	mov	r3, #8
   14b4c:	sub	r2, r4, r2
   14b50:	mov	r0, r5
   14b54:	str	r3, [sp]
   14b58:	add	r2, r2, #1
   14b5c:	mvn	r3, #-2147483648	; 0x80000000
   14b60:	add	r1, sp, #44	; 0x2c
   14b64:	bl	16588 <close@plt+0x573c>
   14b68:	mov	r5, r0
   14b6c:	str	r0, [r6]
   14b70:	ldr	r0, [r6, #4]
   14b74:	ldr	r2, [sp, #44]	; 0x2c
   14b78:	mov	r1, #0
   14b7c:	sub	r2, r2, r0
   14b80:	add	r0, r5, r0, lsl #3
   14b84:	lsl	r2, r2, #3
   14b88:	bl	10d98 <memset@plt>
   14b8c:	ldr	r3, [sp, #48]	; 0x30
   14b90:	ldr	r7, [sp, #88]	; 0x58
   14b94:	ldr	r8, [sp, #92]	; 0x5c
   14b98:	ldr	r2, [sp, #44]	; 0x2c
   14b9c:	str	r2, [r6, #4]
   14ba0:	add	r2, r5, r4, lsl #3
   14ba4:	mov	r1, r2
   14ba8:	str	r2, [sp, #32]
   14bac:	ldr	r2, [sp, #52]	; 0x34
   14bb0:	ldr	r6, [r1, #4]
   14bb4:	ldr	sl, [r5, r4, lsl #3]
   14bb8:	orr	r2, r2, #1
   14bbc:	str	r3, [sp]
   14bc0:	add	r3, sp, #56	; 0x38
   14bc4:	str	r2, [sp, #36]	; 0x24
   14bc8:	str	r2, [sp, #4]
   14bcc:	str	r3, [sp, #8]
   14bd0:	mov	r0, r6
   14bd4:	str	r8, [sp, #16]
   14bd8:	str	r7, [sp, #12]
   14bdc:	mov	r1, sl
   14be0:	mvn	r3, #0
   14be4:	mov	r2, fp
   14be8:	bl	11a90 <close@plt+0xc44>
   14bec:	cmp	sl, r0
   14bf0:	bhi	14c5c <close@plt+0x3e10>
   14bf4:	ldr	r3, [pc, #176]	; 14cac <close@plt+0x3e60>
   14bf8:	add	r7, r0, #1
   14bfc:	cmp	r6, r3
   14c00:	str	r7, [r5, r4, lsl #3]
   14c04:	beq	14c10 <close@plt+0x3dc4>
   14c08:	mov	r0, r6
   14c0c:	bl	16c18 <close@plt+0x5dcc>
   14c10:	mov	r0, r7
   14c14:	bl	1636c <close@plt+0x5520>
   14c18:	ldr	r3, [sp, #32]
   14c1c:	ldr	lr, [sp, #92]	; 0x5c
   14c20:	ldr	ip, [sp, #88]	; 0x58
   14c24:	ldr	r4, [sp, #36]	; 0x24
   14c28:	mov	r2, fp
   14c2c:	mov	r1, r7
   14c30:	str	r0, [r3, #4]
   14c34:	add	r3, sp, #56	; 0x38
   14c38:	str	r3, [sp, #8]
   14c3c:	ldr	r3, [sp, #48]	; 0x30
   14c40:	str	r4, [sp, #4]
   14c44:	str	r3, [sp]
   14c48:	str	lr, [sp, #16]
   14c4c:	str	ip, [sp, #12]
   14c50:	mvn	r3, #0
   14c54:	mov	r6, r0
   14c58:	bl	11a90 <close@plt+0xc44>
   14c5c:	ldr	r3, [sp, #28]
   14c60:	mov	r0, r6
   14c64:	str	r3, [r9]
   14c68:	add	sp, sp, #100	; 0x64
   14c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c70:	mov	r3, #8
   14c74:	sub	r2, r4, r2
   14c78:	str	r3, [sp]
   14c7c:	add	r1, sp, #44	; 0x2c
   14c80:	add	r2, r2, #1
   14c84:	mvn	r3, #-2147483648	; 0x80000000
   14c88:	bl	16588 <close@plt+0x573c>
   14c8c:	mov	r5, r0
   14c90:	ldm	r7, {r0, r1}
   14c94:	str	r5, [r6]
   14c98:	stm	r5, {r0, r1}
   14c9c:	b	14b70 <close@plt+0x3d24>
   14ca0:	bl	10e40 <abort@plt>
   14ca4:	andeq	r8, r2, r4, asr r1
   14ca8:	andeq	r8, r2, r8, ror #1
   14cac:	andeq	r8, r2, r4, lsl #3
   14cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cb4:	mov	r7, r1
   14cb8:	ldr	lr, [pc, #492]	; 14eac <close@plt+0x4060>
   14cbc:	mov	r8, r2
   14cc0:	mov	r4, r0
   14cc4:	mov	fp, r3
   14cc8:	ldm	lr!, {r0, r1, r2, r3}
   14ccc:	sub	sp, sp, #100	; 0x64
   14cd0:	add	ip, sp, #48	; 0x30
   14cd4:	mov	sl, #10
   14cd8:	stmia	ip!, {r0, r1, r2, r3}
   14cdc:	cmp	r8, #0
   14ce0:	cmpne	r7, #0
   14ce4:	ldm	lr!, {r0, r1, r2, r3}
   14ce8:	str	sl, [sp, #48]	; 0x30
   14cec:	stmia	ip!, {r0, r1, r2, r3}
   14cf0:	ldm	lr, {r0, r1, r2, r3}
   14cf4:	stm	ip, {r0, r1, r2, r3}
   14cf8:	beq	14ea8 <close@plt+0x405c>
   14cfc:	str	r7, [sp, #88]	; 0x58
   14d00:	str	r8, [sp, #92]	; 0x5c
   14d04:	bl	10d80 <__errno_location@plt>
   14d08:	ldr	r6, [pc, #416]	; 14eb0 <close@plt+0x4064>
   14d0c:	cmn	r4, #-2147483647	; 0x80000001
   14d10:	ldr	r5, [r6]
   14d14:	mov	r9, r0
   14d18:	movne	r0, #0
   14d1c:	moveq	r0, #1
   14d20:	ldr	r3, [r9]
   14d24:	orrs	r0, r0, r4, lsr #31
   14d28:	str	r3, [sp, #28]
   14d2c:	bne	14ea8 <close@plt+0x405c>
   14d30:	ldr	r2, [r6, #4]
   14d34:	cmp	r4, r2
   14d38:	movlt	r3, sl
   14d3c:	blt	14da8 <close@plt+0x3f5c>
   14d40:	add	r7, r6, #8
   14d44:	cmp	r5, r7
   14d48:	str	r2, [sp, #44]	; 0x2c
   14d4c:	beq	14e78 <close@plt+0x402c>
   14d50:	mov	r3, #8
   14d54:	sub	r2, r4, r2
   14d58:	mov	r0, r5
   14d5c:	str	r3, [sp]
   14d60:	add	r2, r2, #1
   14d64:	mvn	r3, #-2147483648	; 0x80000000
   14d68:	add	r1, sp, #44	; 0x2c
   14d6c:	bl	16588 <close@plt+0x573c>
   14d70:	mov	r5, r0
   14d74:	str	r0, [r6]
   14d78:	ldr	r0, [r6, #4]
   14d7c:	ldr	r2, [sp, #44]	; 0x2c
   14d80:	mov	r1, #0
   14d84:	sub	r2, r2, r0
   14d88:	add	r0, r5, r0, lsl #3
   14d8c:	lsl	r2, r2, #3
   14d90:	bl	10d98 <memset@plt>
   14d94:	ldr	r3, [sp, #48]	; 0x30
   14d98:	ldr	r7, [sp, #88]	; 0x58
   14d9c:	ldr	r8, [sp, #92]	; 0x5c
   14da0:	ldr	r2, [sp, #44]	; 0x2c
   14da4:	str	r2, [r6, #4]
   14da8:	add	r2, r5, r4, lsl #3
   14dac:	mov	r1, r2
   14db0:	str	r2, [sp, #32]
   14db4:	ldr	r2, [sp, #52]	; 0x34
   14db8:	ldr	r6, [r1, #4]
   14dbc:	ldr	sl, [r5, r4, lsl #3]
   14dc0:	orr	r2, r2, #1
   14dc4:	str	r3, [sp]
   14dc8:	add	r3, sp, #56	; 0x38
   14dcc:	str	r2, [sp, #36]	; 0x24
   14dd0:	str	r2, [sp, #4]
   14dd4:	str	r3, [sp, #8]
   14dd8:	mov	r0, r6
   14ddc:	str	r8, [sp, #16]
   14de0:	str	r7, [sp, #12]
   14de4:	mov	r1, sl
   14de8:	ldr	r3, [sp, #136]	; 0x88
   14dec:	mov	r2, fp
   14df0:	bl	11a90 <close@plt+0xc44>
   14df4:	cmp	sl, r0
   14df8:	bhi	14e64 <close@plt+0x4018>
   14dfc:	ldr	r3, [pc, #176]	; 14eb4 <close@plt+0x4068>
   14e00:	add	r7, r0, #1
   14e04:	cmp	r6, r3
   14e08:	str	r7, [r5, r4, lsl #3]
   14e0c:	beq	14e18 <close@plt+0x3fcc>
   14e10:	mov	r0, r6
   14e14:	bl	16c18 <close@plt+0x5dcc>
   14e18:	mov	r0, r7
   14e1c:	bl	1636c <close@plt+0x5520>
   14e20:	ldr	r3, [sp, #32]
   14e24:	ldr	lr, [sp, #92]	; 0x5c
   14e28:	ldr	ip, [sp, #88]	; 0x58
   14e2c:	ldr	r4, [sp, #36]	; 0x24
   14e30:	mov	r2, fp
   14e34:	mov	r1, r7
   14e38:	str	r0, [r3, #4]
   14e3c:	add	r3, sp, #56	; 0x38
   14e40:	str	r3, [sp, #8]
   14e44:	ldr	r3, [sp, #48]	; 0x30
   14e48:	str	r4, [sp, #4]
   14e4c:	str	r3, [sp]
   14e50:	str	lr, [sp, #16]
   14e54:	str	ip, [sp, #12]
   14e58:	ldr	r3, [sp, #136]	; 0x88
   14e5c:	mov	r6, r0
   14e60:	bl	11a90 <close@plt+0xc44>
   14e64:	ldr	r3, [sp, #28]
   14e68:	mov	r0, r6
   14e6c:	str	r3, [r9]
   14e70:	add	sp, sp, #100	; 0x64
   14e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e78:	mov	r3, #8
   14e7c:	sub	r2, r4, r2
   14e80:	str	r3, [sp]
   14e84:	add	r1, sp, #44	; 0x2c
   14e88:	add	r2, r2, #1
   14e8c:	mvn	r3, #-2147483648	; 0x80000000
   14e90:	bl	16588 <close@plt+0x573c>
   14e94:	mov	r5, r0
   14e98:	ldm	r7, {r0, r1}
   14e9c:	str	r5, [r6]
   14ea0:	stm	r5, {r0, r1}
   14ea4:	b	14d78 <close@plt+0x3f2c>
   14ea8:	bl	10e40 <abort@plt>
   14eac:	andeq	r8, r2, r4, asr r1
   14eb0:	andeq	r8, r2, r8, ror #1
   14eb4:	andeq	r8, r2, r4, lsl #3
   14eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ebc:	mov	r5, r0
   14ec0:	ldr	lr, [pc, #452]	; 1508c <close@plt+0x4240>
   14ec4:	mov	r6, r1
   14ec8:	mov	sl, r2
   14ecc:	ldm	lr!, {r0, r1, r2, r3}
   14ed0:	sub	sp, sp, #92	; 0x5c
   14ed4:	add	ip, sp, #40	; 0x28
   14ed8:	cmp	r6, #0
   14edc:	cmpne	r5, #0
   14ee0:	stmia	ip!, {r0, r1, r2, r3}
   14ee4:	mov	r9, #10
   14ee8:	ldm	lr!, {r0, r1, r2, r3}
   14eec:	moveq	fp, #1
   14ef0:	movne	fp, #0
   14ef4:	str	r9, [sp, #40]	; 0x28
   14ef8:	stmia	ip!, {r0, r1, r2, r3}
   14efc:	ldm	lr, {r0, r1, r2, r3}
   14f00:	stm	ip, {r0, r1, r2, r3}
   14f04:	beq	15088 <close@plt+0x423c>
   14f08:	str	r5, [sp, #80]	; 0x50
   14f0c:	str	r6, [sp, #84]	; 0x54
   14f10:	bl	10d80 <__errno_location@plt>
   14f14:	ldr	r7, [pc, #372]	; 15090 <close@plt+0x4244>
   14f18:	ldr	r2, [r7, #4]
   14f1c:	ldr	r4, [r7]
   14f20:	cmp	r2, #0
   14f24:	ldr	r3, [r0]
   14f28:	mov	r8, r0
   14f2c:	str	r3, [sp, #24]
   14f30:	movgt	r3, r9
   14f34:	bgt	14f9c <close@plt+0x4150>
   14f38:	add	r5, r7, #8
   14f3c:	cmp	r4, r5
   14f40:	str	r2, [sp, #36]	; 0x24
   14f44:	beq	15058 <close@plt+0x420c>
   14f48:	mov	r3, #8
   14f4c:	mov	r0, r4
   14f50:	str	r3, [sp]
   14f54:	rsb	r2, r2, #1
   14f58:	mvn	r3, #-2147483648	; 0x80000000
   14f5c:	add	r1, sp, #36	; 0x24
   14f60:	bl	16588 <close@plt+0x573c>
   14f64:	mov	r4, r0
   14f68:	str	r0, [r7]
   14f6c:	ldr	r0, [r7, #4]
   14f70:	ldr	r2, [sp, #36]	; 0x24
   14f74:	mov	r1, #0
   14f78:	sub	r2, r2, r0
   14f7c:	add	r0, r4, r0, lsl #3
   14f80:	lsl	r2, r2, #3
   14f84:	bl	10d98 <memset@plt>
   14f88:	ldr	r3, [sp, #40]	; 0x28
   14f8c:	ldr	r5, [sp, #80]	; 0x50
   14f90:	ldr	r6, [sp, #84]	; 0x54
   14f94:	ldr	r2, [sp, #36]	; 0x24
   14f98:	str	r2, [r7, #4]
   14f9c:	ldr	r2, [sp, #44]	; 0x2c
   14fa0:	ldr	r9, [r4]
   14fa4:	ldr	r7, [r4, #4]
   14fa8:	orr	r2, r2, #1
   14fac:	add	fp, sp, #48	; 0x30
   14fb0:	str	r2, [sp, #28]
   14fb4:	str	r2, [sp, #4]
   14fb8:	str	r3, [sp]
   14fbc:	str	r6, [sp, #16]
   14fc0:	str	r5, [sp, #12]
   14fc4:	mov	r1, r9
   14fc8:	mov	r0, r7
   14fcc:	str	fp, [sp, #8]
   14fd0:	mvn	r3, #0
   14fd4:	mov	r2, sl
   14fd8:	bl	11a90 <close@plt+0xc44>
   14fdc:	cmp	r9, r0
   14fe0:	bhi	15044 <close@plt+0x41f8>
   14fe4:	ldr	r3, [pc, #168]	; 15094 <close@plt+0x4248>
   14fe8:	add	r5, r0, #1
   14fec:	cmp	r7, r3
   14ff0:	str	r5, [r4]
   14ff4:	beq	15000 <close@plt+0x41b4>
   14ff8:	mov	r0, r7
   14ffc:	bl	16c18 <close@plt+0x5dcc>
   15000:	mov	r0, r5
   15004:	bl	1636c <close@plt+0x5520>
   15008:	ldr	lr, [sp, #84]	; 0x54
   1500c:	ldr	r3, [sp, #40]	; 0x28
   15010:	ldr	ip, [sp, #80]	; 0x50
   15014:	mov	r2, sl
   15018:	mov	r1, r5
   1501c:	str	r0, [r4, #4]
   15020:	ldr	r4, [sp, #28]
   15024:	str	r3, [sp]
   15028:	str	fp, [sp, #8]
   1502c:	str	r4, [sp, #4]
   15030:	str	lr, [sp, #16]
   15034:	str	ip, [sp, #12]
   15038:	mvn	r3, #0
   1503c:	mov	r7, r0
   15040:	bl	11a90 <close@plt+0xc44>
   15044:	ldr	r3, [sp, #24]
   15048:	mov	r0, r7
   1504c:	str	r3, [r8]
   15050:	add	sp, sp, #92	; 0x5c
   15054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15058:	mov	r3, #8
   1505c:	str	r3, [sp]
   15060:	add	r1, sp, #36	; 0x24
   15064:	rsb	r2, r2, #1
   15068:	mov	r0, fp
   1506c:	mvn	r3, #-2147483648	; 0x80000000
   15070:	bl	16588 <close@plt+0x573c>
   15074:	mov	r4, r0
   15078:	ldm	r5, {r0, r1}
   1507c:	str	r4, [r7]
   15080:	stm	r4, {r0, r1}
   15084:	b	14f6c <close@plt+0x4120>
   15088:	bl	10e40 <abort@plt>
   1508c:	andeq	r8, r2, r4, asr r1
   15090:	andeq	r8, r2, r8, ror #1
   15094:	andeq	r8, r2, r4, lsl #3
   15098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1509c:	mov	r5, r0
   150a0:	ldr	lr, [pc, #464]	; 15278 <close@plt+0x442c>
   150a4:	mov	r6, r1
   150a8:	mov	sl, r2
   150ac:	mov	fp, r3
   150b0:	ldm	lr!, {r0, r1, r2, r3}
   150b4:	sub	sp, sp, #92	; 0x5c
   150b8:	add	ip, sp, #40	; 0x28
   150bc:	cmp	r6, #0
   150c0:	cmpne	r5, #0
   150c4:	stmia	ip!, {r0, r1, r2, r3}
   150c8:	moveq	r4, #1
   150cc:	ldm	lr!, {r0, r1, r2, r3}
   150d0:	movne	r4, #0
   150d4:	mov	r9, #10
   150d8:	str	r4, [sp, #28]
   150dc:	stmia	ip!, {r0, r1, r2, r3}
   150e0:	ldm	lr, {r0, r1, r2, r3}
   150e4:	str	r9, [sp, #40]	; 0x28
   150e8:	stm	ip, {r0, r1, r2, r3}
   150ec:	beq	15274 <close@plt+0x4428>
   150f0:	str	r5, [sp, #80]	; 0x50
   150f4:	str	r6, [sp, #84]	; 0x54
   150f8:	bl	10d80 <__errno_location@plt>
   150fc:	ldr	r7, [pc, #376]	; 1527c <close@plt+0x4430>
   15100:	ldr	r2, [r7, #4]
   15104:	ldr	r4, [r7]
   15108:	cmp	r2, #0
   1510c:	ldr	r3, [r0]
   15110:	mov	r8, r0
   15114:	str	r3, [sp, #24]
   15118:	movgt	r3, r9
   1511c:	bgt	15184 <close@plt+0x4338>
   15120:	add	r5, r7, #8
   15124:	cmp	r4, r5
   15128:	str	r2, [sp, #36]	; 0x24
   1512c:	beq	15244 <close@plt+0x43f8>
   15130:	mov	r3, #8
   15134:	mov	r0, r4
   15138:	str	r3, [sp]
   1513c:	rsb	r2, r2, #1
   15140:	mvn	r3, #-2147483648	; 0x80000000
   15144:	add	r1, sp, #36	; 0x24
   15148:	bl	16588 <close@plt+0x573c>
   1514c:	mov	r4, r0
   15150:	str	r0, [r7]
   15154:	ldr	r0, [r7, #4]
   15158:	ldr	r2, [sp, #36]	; 0x24
   1515c:	mov	r1, #0
   15160:	sub	r2, r2, r0
   15164:	add	r0, r4, r0, lsl #3
   15168:	lsl	r2, r2, #3
   1516c:	bl	10d98 <memset@plt>
   15170:	ldr	r3, [sp, #40]	; 0x28
   15174:	ldr	r5, [sp, #80]	; 0x50
   15178:	ldr	r6, [sp, #84]	; 0x54
   1517c:	ldr	r2, [sp, #36]	; 0x24
   15180:	str	r2, [r7, #4]
   15184:	ldr	r2, [sp, #44]	; 0x2c
   15188:	ldr	r9, [r4]
   1518c:	ldr	r7, [r4, #4]
   15190:	orr	r2, r2, #1
   15194:	str	r3, [sp]
   15198:	add	r3, sp, #48	; 0x30
   1519c:	str	r2, [sp, #28]
   151a0:	str	r2, [sp, #4]
   151a4:	str	r3, [sp, #8]
   151a8:	str	r6, [sp, #16]
   151ac:	str	r5, [sp, #12]
   151b0:	mov	r1, r9
   151b4:	mov	r0, r7
   151b8:	mov	r3, fp
   151bc:	mov	r2, sl
   151c0:	bl	11a90 <close@plt+0xc44>
   151c4:	cmp	r9, r0
   151c8:	bhi	15230 <close@plt+0x43e4>
   151cc:	ldr	r3, [pc, #172]	; 15280 <close@plt+0x4434>
   151d0:	add	r5, r0, #1
   151d4:	cmp	r7, r3
   151d8:	str	r5, [r4]
   151dc:	beq	151e8 <close@plt+0x439c>
   151e0:	mov	r0, r7
   151e4:	bl	16c18 <close@plt+0x5dcc>
   151e8:	mov	r0, r5
   151ec:	bl	1636c <close@plt+0x5520>
   151f0:	add	lr, sp, #48	; 0x30
   151f4:	ldr	ip, [sp, #84]	; 0x54
   151f8:	mov	r1, r5
   151fc:	ldr	r5, [sp, #28]
   15200:	mov	r3, fp
   15204:	mov	r2, sl
   15208:	str	r0, [r4, #4]
   1520c:	ldr	r4, [sp, #80]	; 0x50
   15210:	str	lr, [sp, #8]
   15214:	ldr	lr, [sp, #40]	; 0x28
   15218:	str	r5, [sp, #4]
   1521c:	str	ip, [sp, #16]
   15220:	str	r4, [sp, #12]
   15224:	str	lr, [sp]
   15228:	mov	r7, r0
   1522c:	bl	11a90 <close@plt+0xc44>
   15230:	ldr	r3, [sp, #24]
   15234:	mov	r0, r7
   15238:	str	r3, [r8]
   1523c:	add	sp, sp, #92	; 0x5c
   15240:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15244:	mov	r3, #8
   15248:	str	r3, [sp]
   1524c:	add	r1, sp, #36	; 0x24
   15250:	rsb	r2, r2, #1
   15254:	ldr	r0, [sp, #28]
   15258:	mvn	r3, #-2147483648	; 0x80000000
   1525c:	bl	16588 <close@plt+0x573c>
   15260:	mov	r4, r0
   15264:	ldm	r5, {r0, r1}
   15268:	str	r4, [r7]
   1526c:	stm	r4, {r0, r1}
   15270:	b	15154 <close@plt+0x4308>
   15274:	bl	10e40 <abort@plt>
   15278:	andeq	r8, r2, r4, asr r1
   1527c:	andeq	r8, r2, r8, ror #1
   15280:	andeq	r8, r2, r4, lsl #3
   15284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15288:	sub	sp, sp, #52	; 0x34
   1528c:	mov	r5, r0
   15290:	mov	sl, r1
   15294:	mov	fp, r2
   15298:	bl	10d80 <__errno_location@plt>
   1529c:	ldr	r4, [pc, #404]	; 15438 <close@plt+0x45ec>
   152a0:	cmn	r5, #-2147483647	; 0x80000001
   152a4:	ldr	r6, [r4]
   152a8:	mov	r8, r0
   152ac:	movne	r0, #0
   152b0:	moveq	r0, #1
   152b4:	ldr	r3, [r8]
   152b8:	orrs	r0, r0, r5, lsr #31
   152bc:	str	r3, [sp, #28]
   152c0:	bne	15434 <close@plt+0x45e8>
   152c4:	ldr	r2, [r4, #4]
   152c8:	cmp	r5, r2
   152cc:	blt	1532c <close@plt+0x44e0>
   152d0:	add	r7, r4, #8
   152d4:	cmp	r6, r7
   152d8:	str	r2, [sp, #44]	; 0x2c
   152dc:	beq	15404 <close@plt+0x45b8>
   152e0:	mov	r3, #8
   152e4:	sub	r2, r5, r2
   152e8:	mov	r0, r6
   152ec:	str	r3, [sp]
   152f0:	add	r2, r2, #1
   152f4:	mvn	r3, #-2147483648	; 0x80000000
   152f8:	add	r1, sp, #44	; 0x2c
   152fc:	bl	16588 <close@plt+0x573c>
   15300:	mov	r6, r0
   15304:	str	r0, [r4]
   15308:	ldr	r0, [r4, #4]
   1530c:	ldr	r2, [sp, #44]	; 0x2c
   15310:	mov	r1, #0
   15314:	sub	r2, r2, r0
   15318:	add	r0, r6, r0, lsl #3
   1531c:	lsl	r2, r2, #3
   15320:	bl	10d98 <memset@plt>
   15324:	ldr	r3, [sp, #44]	; 0x2c
   15328:	str	r3, [r4, #4]
   1532c:	ldr	r2, [r4, #56]	; 0x38
   15330:	add	r3, r6, r5, lsl #3
   15334:	ldr	r1, [r4, #20]
   15338:	ldr	r7, [r3, #4]
   1533c:	ldr	r9, [r6, r5, lsl #3]
   15340:	ldr	ip, [r4, #60]	; 0x3c
   15344:	str	r3, [sp, #32]
   15348:	ldr	r3, [r4, #16]
   1534c:	str	r2, [sp, #12]
   15350:	ldr	r2, [pc, #228]	; 1543c <close@plt+0x45f0>
   15354:	orr	r1, r1, #1
   15358:	str	r1, [sp, #36]	; 0x24
   1535c:	str	r1, [sp, #4]
   15360:	str	r2, [sp, #8]
   15364:	str	r3, [sp]
   15368:	mov	r0, r7
   1536c:	mov	r1, r9
   15370:	str	ip, [sp, #16]
   15374:	mov	r3, fp
   15378:	mov	r2, sl
   1537c:	bl	11a90 <close@plt+0xc44>
   15380:	cmp	r9, r0
   15384:	bhi	153f0 <close@plt+0x45a4>
   15388:	ldr	r3, [pc, #176]	; 15440 <close@plt+0x45f4>
   1538c:	add	r9, r0, #1
   15390:	cmp	r7, r3
   15394:	str	r9, [r6, r5, lsl #3]
   15398:	beq	153a4 <close@plt+0x4558>
   1539c:	mov	r0, r7
   153a0:	bl	16c18 <close@plt+0x5dcc>
   153a4:	mov	r0, r9
   153a8:	bl	1636c <close@plt+0x5520>
   153ac:	ldr	ip, [sp, #32]
   153b0:	ldr	lr, [r4, #60]	; 0x3c
   153b4:	ldr	r5, [r4, #56]	; 0x38
   153b8:	mov	r3, fp
   153bc:	mov	r2, sl
   153c0:	mov	r1, r9
   153c4:	str	r0, [ip, #4]
   153c8:	ldr	ip, [r4, #16]
   153cc:	ldr	r4, [pc, #104]	; 1543c <close@plt+0x45f0>
   153d0:	str	lr, [sp, #16]
   153d4:	str	r4, [sp, #8]
   153d8:	ldr	r4, [sp, #36]	; 0x24
   153dc:	str	r5, [sp, #12]
   153e0:	str	r4, [sp, #4]
   153e4:	str	ip, [sp]
   153e8:	mov	r7, r0
   153ec:	bl	11a90 <close@plt+0xc44>
   153f0:	ldr	r3, [sp, #28]
   153f4:	mov	r0, r7
   153f8:	str	r3, [r8]
   153fc:	add	sp, sp, #52	; 0x34
   15400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15404:	mov	r3, #8
   15408:	sub	r2, r5, r2
   1540c:	str	r3, [sp]
   15410:	add	r1, sp, #44	; 0x2c
   15414:	add	r2, r2, #1
   15418:	mvn	r3, #-2147483648	; 0x80000000
   1541c:	bl	16588 <close@plt+0x573c>
   15420:	mov	r6, r0
   15424:	ldm	r7, {r0, r1}
   15428:	str	r6, [r4]
   1542c:	stm	r6, {r0, r1}
   15430:	b	15308 <close@plt+0x44bc>
   15434:	bl	10e40 <abort@plt>
   15438:	andeq	r8, r2, r8, ror #1
   1543c:	andeq	r8, r2, r0, lsl #2
   15440:	andeq	r8, r2, r4, lsl #3
   15444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15448:	sub	sp, sp, #44	; 0x2c
   1544c:	mov	r9, r0
   15450:	mov	sl, r1
   15454:	bl	10d80 <__errno_location@plt>
   15458:	ldr	r4, [pc, #360]	; 155c8 <close@plt+0x477c>
   1545c:	ldr	r2, [r4, #4]
   15460:	ldr	r5, [r4]
   15464:	cmp	r2, #0
   15468:	ldr	r3, [r0]
   1546c:	mov	r7, r0
   15470:	str	r3, [sp, #24]
   15474:	bgt	154d0 <close@plt+0x4684>
   15478:	add	r6, r4, #8
   1547c:	cmp	r5, r6
   15480:	str	r2, [sp, #36]	; 0x24
   15484:	beq	15598 <close@plt+0x474c>
   15488:	mov	r3, #8
   1548c:	mov	r0, r5
   15490:	str	r3, [sp]
   15494:	rsb	r2, r2, #1
   15498:	mvn	r3, #-2147483648	; 0x80000000
   1549c:	add	r1, sp, #36	; 0x24
   154a0:	bl	16588 <close@plt+0x573c>
   154a4:	mov	r5, r0
   154a8:	str	r0, [r4]
   154ac:	ldr	r0, [r4, #4]
   154b0:	ldr	r2, [sp, #36]	; 0x24
   154b4:	mov	r1, #0
   154b8:	sub	r2, r2, r0
   154bc:	add	r0, r5, r0, lsl #3
   154c0:	lsl	r2, r2, #3
   154c4:	bl	10d98 <memset@plt>
   154c8:	ldr	r3, [sp, #36]	; 0x24
   154cc:	str	r3, [r4, #4]
   154d0:	ldr	r1, [r4, #20]
   154d4:	ldr	r8, [r5]
   154d8:	ldr	r6, [r5, #4]
   154dc:	ldr	r2, [r4, #56]	; 0x38
   154e0:	ldr	r3, [r4, #16]
   154e4:	ldr	ip, [r4, #60]	; 0x3c
   154e8:	ldr	fp, [pc, #220]	; 155cc <close@plt+0x4780>
   154ec:	orr	r1, r1, #1
   154f0:	str	r1, [sp, #28]
   154f4:	str	r1, [sp, #4]
   154f8:	str	r2, [sp, #12]
   154fc:	str	r3, [sp]
   15500:	mov	r1, r8
   15504:	mov	r0, r6
   15508:	str	ip, [sp, #16]
   1550c:	str	fp, [sp, #8]
   15510:	mov	r3, sl
   15514:	mov	r2, r9
   15518:	bl	11a90 <close@plt+0xc44>
   1551c:	cmp	r8, r0
   15520:	bhi	15584 <close@plt+0x4738>
   15524:	ldr	r3, [pc, #164]	; 155d0 <close@plt+0x4784>
   15528:	add	r8, r0, #1
   1552c:	cmp	r6, r3
   15530:	str	r8, [r5]
   15534:	beq	15540 <close@plt+0x46f4>
   15538:	mov	r0, r6
   1553c:	bl	16c18 <close@plt+0x5dcc>
   15540:	mov	r0, r8
   15544:	bl	1636c <close@plt+0x5520>
   15548:	ldr	lr, [r4, #60]	; 0x3c
   1554c:	ldr	ip, [r4, #16]
   15550:	mov	r3, sl
   15554:	mov	r2, r9
   15558:	mov	r1, r8
   1555c:	str	r0, [r5, #4]
   15560:	ldr	r5, [r4, #56]	; 0x38
   15564:	ldr	r4, [sp, #28]
   15568:	str	fp, [sp, #8]
   1556c:	str	r4, [sp, #4]
   15570:	str	lr, [sp, #16]
   15574:	str	r5, [sp, #12]
   15578:	str	ip, [sp]
   1557c:	mov	r6, r0
   15580:	bl	11a90 <close@plt+0xc44>
   15584:	ldr	r3, [sp, #24]
   15588:	mov	r0, r6
   1558c:	str	r3, [r7]
   15590:	add	sp, sp, #44	; 0x2c
   15594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15598:	mov	r3, #8
   1559c:	str	r3, [sp]
   155a0:	add	r1, sp, #36	; 0x24
   155a4:	rsb	r2, r2, #1
   155a8:	mvn	r3, #-2147483648	; 0x80000000
   155ac:	mov	r0, #0
   155b0:	bl	16588 <close@plt+0x573c>
   155b4:	mov	r5, r0
   155b8:	ldm	r6, {r0, r1}
   155bc:	str	r5, [r4]
   155c0:	stm	r5, {r0, r1}
   155c4:	b	154ac <close@plt+0x4660>
   155c8:	andeq	r8, r2, r8, ror #1
   155cc:	andeq	r8, r2, r0, lsl #2
   155d0:	andeq	r8, r2, r4, lsl #3
   155d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155d8:	sub	sp, sp, #44	; 0x2c
   155dc:	mov	r5, r0
   155e0:	mov	sl, r1
   155e4:	bl	10d80 <__errno_location@plt>
   155e8:	ldr	r4, [pc, #396]	; 1577c <close@plt+0x4930>
   155ec:	cmn	r5, #-2147483647	; 0x80000001
   155f0:	ldr	r6, [r4]
   155f4:	mov	r8, r0
   155f8:	movne	r0, #0
   155fc:	moveq	r0, #1
   15600:	ldr	r3, [r8]
   15604:	orrs	r0, r0, r5, lsr #31
   15608:	str	r3, [sp, #24]
   1560c:	bne	15778 <close@plt+0x492c>
   15610:	ldr	r2, [r4, #4]
   15614:	cmp	r5, r2
   15618:	blt	15678 <close@plt+0x482c>
   1561c:	add	r7, r4, #8
   15620:	cmp	r6, r7
   15624:	str	r2, [sp, #36]	; 0x24
   15628:	beq	15748 <close@plt+0x48fc>
   1562c:	mov	r3, #8
   15630:	sub	r2, r5, r2
   15634:	mov	r0, r6
   15638:	str	r3, [sp]
   1563c:	add	r2, r2, #1
   15640:	mvn	r3, #-2147483648	; 0x80000000
   15644:	add	r1, sp, #36	; 0x24
   15648:	bl	16588 <close@plt+0x573c>
   1564c:	mov	r6, r0
   15650:	str	r0, [r4]
   15654:	ldr	r0, [r4, #4]
   15658:	ldr	r2, [sp, #36]	; 0x24
   1565c:	mov	r1, #0
   15660:	sub	r2, r2, r0
   15664:	add	r0, r6, r0, lsl #3
   15668:	lsl	r2, r2, #3
   1566c:	bl	10d98 <memset@plt>
   15670:	ldr	r3, [sp, #36]	; 0x24
   15674:	str	r3, [r4, #4]
   15678:	ldr	r2, [r4, #56]	; 0x38
   1567c:	add	fp, r6, r5, lsl #3
   15680:	ldr	r1, [r4, #20]
   15684:	ldr	r9, [r6, r5, lsl #3]
   15688:	ldr	r7, [fp, #4]
   1568c:	ldr	r3, [r4, #16]
   15690:	ldr	ip, [r4, #60]	; 0x3c
   15694:	str	r2, [sp, #12]
   15698:	ldr	r2, [pc, #224]	; 15780 <close@plt+0x4934>
   1569c:	orr	r1, r1, #1
   156a0:	str	r1, [sp, #28]
   156a4:	str	r1, [sp, #4]
   156a8:	str	r2, [sp, #8]
   156ac:	str	r3, [sp]
   156b0:	mov	r0, r7
   156b4:	mov	r1, r9
   156b8:	str	ip, [sp, #16]
   156bc:	mvn	r3, #0
   156c0:	mov	r2, sl
   156c4:	bl	11a90 <close@plt+0xc44>
   156c8:	cmp	r9, r0
   156cc:	bhi	15734 <close@plt+0x48e8>
   156d0:	ldr	r3, [pc, #172]	; 15784 <close@plt+0x4938>
   156d4:	add	r9, r0, #1
   156d8:	cmp	r7, r3
   156dc:	str	r9, [r6, r5, lsl #3]
   156e0:	beq	156ec <close@plt+0x48a0>
   156e4:	mov	r0, r7
   156e8:	bl	16c18 <close@plt+0x5dcc>
   156ec:	mov	r0, r9
   156f0:	bl	1636c <close@plt+0x5520>
   156f4:	ldr	ip, [r4, #60]	; 0x3c
   156f8:	ldr	r3, [r4, #16]
   156fc:	ldr	lr, [r4, #56]	; 0x38
   15700:	ldr	r4, [pc, #120]	; 15780 <close@plt+0x4934>
   15704:	mov	r2, sl
   15708:	mov	r1, r9
   1570c:	str	r0, [fp, #4]
   15710:	str	r4, [sp, #8]
   15714:	ldr	r4, [sp, #28]
   15718:	str	r3, [sp]
   1571c:	str	r4, [sp, #4]
   15720:	str	ip, [sp, #16]
   15724:	str	lr, [sp, #12]
   15728:	mvn	r3, #0
   1572c:	mov	r7, r0
   15730:	bl	11a90 <close@plt+0xc44>
   15734:	ldr	r3, [sp, #24]
   15738:	mov	r0, r7
   1573c:	str	r3, [r8]
   15740:	add	sp, sp, #44	; 0x2c
   15744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15748:	mov	r3, #8
   1574c:	sub	r2, r5, r2
   15750:	str	r3, [sp]
   15754:	add	r1, sp, #36	; 0x24
   15758:	add	r2, r2, #1
   1575c:	mvn	r3, #-2147483648	; 0x80000000
   15760:	bl	16588 <close@plt+0x573c>
   15764:	mov	r6, r0
   15768:	ldm	r7, {r0, r1}
   1576c:	str	r6, [r4]
   15770:	stm	r6, {r0, r1}
   15774:	b	15654 <close@plt+0x4808>
   15778:	bl	10e40 <abort@plt>
   1577c:	andeq	r8, r2, r8, ror #1
   15780:	andeq	r8, r2, r0, lsl #2
   15784:	andeq	r8, r2, r4, lsl #3
   15788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1578c:	sub	sp, sp, #44	; 0x2c
   15790:	mov	sl, r0
   15794:	bl	10d80 <__errno_location@plt>
   15798:	ldr	r4, [pc, #348]	; 158fc <close@plt+0x4ab0>
   1579c:	ldr	r2, [r4, #4]
   157a0:	ldr	r5, [r4]
   157a4:	cmp	r2, #0
   157a8:	ldr	r3, [r0]
   157ac:	mov	r8, r0
   157b0:	str	r3, [sp, #28]
   157b4:	bgt	15810 <close@plt+0x49c4>
   157b8:	add	r6, r4, #8
   157bc:	cmp	r5, r6
   157c0:	str	r2, [sp, #36]	; 0x24
   157c4:	beq	158cc <close@plt+0x4a80>
   157c8:	mov	r3, #8
   157cc:	mov	r0, r5
   157d0:	str	r3, [sp]
   157d4:	rsb	r2, r2, #1
   157d8:	mvn	r3, #-2147483648	; 0x80000000
   157dc:	add	r1, sp, #36	; 0x24
   157e0:	bl	16588 <close@plt+0x573c>
   157e4:	mov	r5, r0
   157e8:	str	r0, [r4]
   157ec:	ldr	r0, [r4, #4]
   157f0:	ldr	r2, [sp, #36]	; 0x24
   157f4:	mov	r1, #0
   157f8:	sub	r2, r2, r0
   157fc:	add	r0, r5, r0, lsl #3
   15800:	lsl	r2, r2, #3
   15804:	bl	10d98 <memset@plt>
   15808:	ldr	r3, [sp, #36]	; 0x24
   1580c:	str	r3, [r4, #4]
   15810:	ldr	r7, [r4, #20]
   15814:	ldr	r9, [r5]
   15818:	ldr	r6, [r5, #4]
   1581c:	ldr	r2, [r4, #56]	; 0x38
   15820:	ldr	r3, [r4, #16]
   15824:	ldr	ip, [r4, #60]	; 0x3c
   15828:	ldr	fp, [pc, #208]	; 15900 <close@plt+0x4ab4>
   1582c:	orr	r7, r7, #1
   15830:	str	r2, [sp, #12]
   15834:	str	r3, [sp]
   15838:	str	r7, [sp, #4]
   1583c:	mov	r1, r9
   15840:	mov	r0, r6
   15844:	str	ip, [sp, #16]
   15848:	str	fp, [sp, #8]
   1584c:	mvn	r3, #0
   15850:	mov	r2, sl
   15854:	bl	11a90 <close@plt+0xc44>
   15858:	cmp	r9, r0
   1585c:	bhi	158b8 <close@plt+0x4a6c>
   15860:	ldr	r3, [pc, #156]	; 15904 <close@plt+0x4ab8>
   15864:	add	r9, r0, #1
   15868:	cmp	r6, r3
   1586c:	str	r9, [r5]
   15870:	beq	1587c <close@plt+0x4a30>
   15874:	mov	r0, r6
   15878:	bl	16c18 <close@plt+0x5dcc>
   1587c:	mov	r0, r9
   15880:	bl	1636c <close@plt+0x5520>
   15884:	ldr	ip, [r4, #60]	; 0x3c
   15888:	ldr	r3, [r4, #16]
   1588c:	ldr	lr, [r4, #56]	; 0x38
   15890:	mov	r2, sl
   15894:	mov	r1, r9
   15898:	str	r0, [r5, #4]
   1589c:	str	r3, [sp]
   158a0:	stmib	sp, {r7, fp}
   158a4:	str	ip, [sp, #16]
   158a8:	str	lr, [sp, #12]
   158ac:	mvn	r3, #0
   158b0:	mov	r6, r0
   158b4:	bl	11a90 <close@plt+0xc44>
   158b8:	ldr	r3, [sp, #28]
   158bc:	mov	r0, r6
   158c0:	str	r3, [r8]
   158c4:	add	sp, sp, #44	; 0x2c
   158c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158cc:	mov	r3, #8
   158d0:	str	r3, [sp]
   158d4:	add	r1, sp, #36	; 0x24
   158d8:	rsb	r2, r2, #1
   158dc:	mvn	r3, #-2147483648	; 0x80000000
   158e0:	mov	r0, #0
   158e4:	bl	16588 <close@plt+0x573c>
   158e8:	mov	r5, r0
   158ec:	ldm	r6, {r0, r1}
   158f0:	str	r5, [r4]
   158f4:	stm	r5, {r0, r1}
   158f8:	b	157ec <close@plt+0x49a0>
   158fc:	andeq	r8, r2, r8, ror #1
   15900:	andeq	r8, r2, r0, lsl #2
   15904:	andeq	r8, r2, r4, lsl #3
   15908:	push	{r4, r5, r6, lr}
   1590c:	sub	sp, sp, #32
   15910:	cmp	r1, #0
   15914:	mov	r4, r0
   15918:	ldr	r5, [sp, #48]	; 0x30
   1591c:	ldr	r6, [sp, #52]	; 0x34
   15920:	beq	15c38 <close@plt+0x4dec>
   15924:	stm	sp, {r2, r3}
   15928:	mov	r3, r1
   1592c:	ldr	r2, [pc, #808]	; 15c5c <close@plt+0x4e10>
   15930:	mov	r1, #1
   15934:	bl	10dbc <__fprintf_chk@plt>
   15938:	mov	r2, #5
   1593c:	ldr	r1, [pc, #796]	; 15c60 <close@plt+0x4e14>
   15940:	mov	r0, #0
   15944:	bl	10c90 <dcgettext@plt>
   15948:	ldr	r3, [pc, #788]	; 15c64 <close@plt+0x4e18>
   1594c:	ldr	r2, [pc, #788]	; 15c68 <close@plt+0x4e1c>
   15950:	str	r3, [sp]
   15954:	mov	r1, #1
   15958:	mov	r3, r0
   1595c:	mov	r0, r4
   15960:	bl	10dbc <__fprintf_chk@plt>
   15964:	mov	r1, r4
   15968:	mov	r0, #10
   1596c:	bl	10c84 <fputc_unlocked@plt>
   15970:	mov	r2, #5
   15974:	ldr	r1, [pc, #752]	; 15c6c <close@plt+0x4e20>
   15978:	mov	r0, #0
   1597c:	bl	10c90 <dcgettext@plt>
   15980:	mov	r1, #1
   15984:	ldr	r3, [pc, #740]	; 15c70 <close@plt+0x4e24>
   15988:	mov	r2, r0
   1598c:	mov	r0, r4
   15990:	bl	10dbc <__fprintf_chk@plt>
   15994:	mov	r1, r4
   15998:	mov	r0, #10
   1599c:	bl	10c84 <fputc_unlocked@plt>
   159a0:	cmp	r6, #9
   159a4:	ldrls	pc, [pc, r6, lsl #2]
   159a8:	b	15c50 <close@plt+0x4e04>
   159ac:	andeq	r5, r1, r0, lsr sl
   159b0:	andeq	r5, r1, r8, lsr sl
   159b4:	andeq	r5, r1, r4, ror #20
   159b8:	muleq	r1, r8, sl
   159bc:	ldrdeq	r5, [r1], -r4
   159c0:	andeq	r5, r1, r0, lsl fp
   159c4:	andeq	r5, r1, ip, asr #22
   159c8:	muleq	r1, r0, fp
   159cc:	andeq	r5, r1, r0, ror #23
   159d0:	ldrdeq	r5, [r1], -r4
   159d4:	ldr	r1, [pc, #664]	; 15c74 <close@plt+0x4e28>
   159d8:	mov	r2, #5
   159dc:	mov	r0, #0
   159e0:	bl	10c90 <dcgettext@plt>
   159e4:	ldr	ip, [r5, #32]
   159e8:	ldr	r1, [r5, #28]
   159ec:	ldr	r2, [r5, #24]
   159f0:	ldr	r3, [r5]
   159f4:	ldr	r6, [r5, #20]
   159f8:	str	ip, [sp, #28]
   159fc:	ldr	lr, [r5, #16]
   15a00:	str	r1, [sp, #24]
   15a04:	ldr	ip, [r5, #12]
   15a08:	str	r2, [sp, #20]
   15a0c:	ldr	r1, [r5, #8]
   15a10:	ldr	r2, [r5, #4]
   15a14:	str	r6, [sp, #16]
   15a18:	stmib	sp, {r1, ip, lr}
   15a1c:	mov	r1, #1
   15a20:	str	r2, [sp]
   15a24:	mov	r2, r0
   15a28:	mov	r0, r4
   15a2c:	bl	10dbc <__fprintf_chk@plt>
   15a30:	add	sp, sp, #32
   15a34:	pop	{r4, r5, r6, pc}
   15a38:	mov	r2, #5
   15a3c:	ldr	r1, [pc, #564]	; 15c78 <close@plt+0x4e2c>
   15a40:	mov	r0, #0
   15a44:	bl	10c90 <dcgettext@plt>
   15a48:	ldr	r3, [r5]
   15a4c:	mov	r1, #1
   15a50:	mov	r2, r0
   15a54:	mov	r0, r4
   15a58:	add	sp, sp, #32
   15a5c:	pop	{r4, r5, r6, lr}
   15a60:	b	10dbc <__fprintf_chk@plt>
   15a64:	mov	r2, #5
   15a68:	ldr	r1, [pc, #524]	; 15c7c <close@plt+0x4e30>
   15a6c:	mov	r0, #0
   15a70:	bl	10c90 <dcgettext@plt>
   15a74:	ldr	r2, [r5, #4]
   15a78:	ldr	r3, [r5]
   15a7c:	mov	r1, #1
   15a80:	str	r2, [sp, #48]	; 0x30
   15a84:	mov	r2, r0
   15a88:	mov	r0, r4
   15a8c:	add	sp, sp, #32
   15a90:	pop	{r4, r5, r6, lr}
   15a94:	b	10dbc <__fprintf_chk@plt>
   15a98:	mov	r2, #5
   15a9c:	ldr	r1, [pc, #476]	; 15c80 <close@plt+0x4e34>
   15aa0:	mov	r0, #0
   15aa4:	bl	10c90 <dcgettext@plt>
   15aa8:	ldr	r1, [r5, #8]
   15aac:	ldr	r2, [r5, #4]
   15ab0:	ldr	r3, [r5]
   15ab4:	str	r1, [sp, #52]	; 0x34
   15ab8:	str	r2, [sp, #48]	; 0x30
   15abc:	mov	r1, #1
   15ac0:	mov	r2, r0
   15ac4:	mov	r0, r4
   15ac8:	add	sp, sp, #32
   15acc:	pop	{r4, r5, r6, lr}
   15ad0:	b	10dbc <__fprintf_chk@plt>
   15ad4:	mov	r2, #5
   15ad8:	ldr	r1, [pc, #420]	; 15c84 <close@plt+0x4e38>
   15adc:	mov	r0, #0
   15ae0:	bl	10c90 <dcgettext@plt>
   15ae4:	ldr	r1, [r5, #8]
   15ae8:	ldr	ip, [r5, #12]
   15aec:	ldr	r2, [r5, #4]
   15af0:	ldr	r3, [r5]
   15af4:	stmib	sp, {r1, ip}
   15af8:	str	r2, [sp]
   15afc:	mov	r1, #1
   15b00:	mov	r2, r0
   15b04:	mov	r0, r4
   15b08:	bl	10dbc <__fprintf_chk@plt>
   15b0c:	b	15a30 <close@plt+0x4be4>
   15b10:	mov	r2, #5
   15b14:	ldr	r1, [pc, #364]	; 15c88 <close@plt+0x4e3c>
   15b18:	mov	r0, #0
   15b1c:	bl	10c90 <dcgettext@plt>
   15b20:	add	r1, r5, #8
   15b24:	ldr	r2, [r5, #4]
   15b28:	ldm	r1, {r1, ip, lr}
   15b2c:	ldr	r3, [r5]
   15b30:	str	r2, [sp]
   15b34:	stmib	sp, {r1, ip, lr}
   15b38:	mov	r1, #1
   15b3c:	mov	r2, r0
   15b40:	mov	r0, r4
   15b44:	bl	10dbc <__fprintf_chk@plt>
   15b48:	b	15a30 <close@plt+0x4be4>
   15b4c:	mov	r2, #5
   15b50:	ldr	r1, [pc, #308]	; 15c8c <close@plt+0x4e40>
   15b54:	mov	r0, #0
   15b58:	bl	10c90 <dcgettext@plt>
   15b5c:	add	r1, r5, #8
   15b60:	ldr	r2, [r5, #4]
   15b64:	ldm	r1, {r1, ip, lr}
   15b68:	ldr	r6, [r5, #20]
   15b6c:	ldr	r3, [r5]
   15b70:	stmib	sp, {r1, ip, lr}
   15b74:	mov	r1, #1
   15b78:	str	r2, [sp]
   15b7c:	str	r6, [sp, #16]
   15b80:	mov	r2, r0
   15b84:	mov	r0, r4
   15b88:	bl	10dbc <__fprintf_chk@plt>
   15b8c:	b	15a30 <close@plt+0x4be4>
   15b90:	mov	r2, #5
   15b94:	ldr	r1, [pc, #244]	; 15c90 <close@plt+0x4e44>
   15b98:	mov	r0, #0
   15b9c:	bl	10c90 <dcgettext@plt>
   15ba0:	ldr	r2, [r5, #24]
   15ba4:	ldr	r3, [r5]
   15ba8:	ldr	r6, [r5, #20]
   15bac:	ldr	lr, [r5, #16]
   15bb0:	ldr	ip, [r5, #12]
   15bb4:	str	r2, [sp, #20]
   15bb8:	ldr	r1, [r5, #8]
   15bbc:	ldr	r2, [r5, #4]
   15bc0:	str	r6, [sp, #16]
   15bc4:	stmib	sp, {r1, ip, lr}
   15bc8:	mov	r1, #1
   15bcc:	str	r2, [sp]
   15bd0:	mov	r2, r0
   15bd4:	mov	r0, r4
   15bd8:	bl	10dbc <__fprintf_chk@plt>
   15bdc:	b	15a30 <close@plt+0x4be4>
   15be0:	mov	r2, #5
   15be4:	ldr	r1, [pc, #168]	; 15c94 <close@plt+0x4e48>
   15be8:	mov	r0, #0
   15bec:	bl	10c90 <dcgettext@plt>
   15bf0:	ldr	r1, [r5, #28]
   15bf4:	ldr	r2, [r5, #24]
   15bf8:	ldr	r3, [r5]
   15bfc:	ldr	r6, [r5, #20]
   15c00:	ldr	lr, [r5, #16]
   15c04:	str	r1, [sp, #24]
   15c08:	ldr	ip, [r5, #12]
   15c0c:	str	r2, [sp, #20]
   15c10:	ldr	r1, [r5, #8]
   15c14:	ldr	r2, [r5, #4]
   15c18:	str	r6, [sp, #16]
   15c1c:	stmib	sp, {r1, ip, lr}
   15c20:	mov	r1, #1
   15c24:	str	r2, [sp]
   15c28:	mov	r2, r0
   15c2c:	mov	r0, r4
   15c30:	bl	10dbc <__fprintf_chk@plt>
   15c34:	b	15a30 <close@plt+0x4be4>
   15c38:	str	r3, [sp]
   15c3c:	mov	r1, #1
   15c40:	mov	r3, r2
   15c44:	ldr	r2, [pc, #76]	; 15c98 <close@plt+0x4e4c>
   15c48:	bl	10dbc <__fprintf_chk@plt>
   15c4c:	b	15938 <close@plt+0x4aec>
   15c50:	mov	r2, #5
   15c54:	ldr	r1, [pc, #64]	; 15c9c <close@plt+0x4e50>
   15c58:	b	159dc <close@plt+0x4b90>
   15c5c:	andeq	r7, r1, r4, asr #19
   15c60:	ldrdeq	r7, [r1], -r8
   15c64:	andeq	r0, r0, r6, ror #15
   15c68:			; <UNDEFINED> instruction: 0x00017cb0
   15c6c:	ldrdeq	r7, [r1], -ip
   15c70:	andeq	r7, r1, r8, lsl #21
   15c74:			; <UNDEFINED> instruction: 0x00017bb8
   15c78:	andeq	r7, r1, ip, lsr #21
   15c7c:			; <UNDEFINED> instruction: 0x00017abc
   15c80:	ldrdeq	r7, [r1], -r4
   15c84:	strdeq	r7, [r1], -r0
   15c88:	andeq	r7, r1, r0, lsl fp
   15c8c:	andeq	r7, r1, r4, lsr fp
   15c90:	andeq	r7, r1, ip, asr fp
   15c94:	andeq	r7, r1, r8, lsl #23
   15c98:	ldrdeq	r7, [r1], -r0
   15c9c:	andeq	r7, r1, ip, ror #23
   15ca0:	push	{r4, r5, lr}
   15ca4:	sub	sp, sp, #12
   15ca8:	ldr	r5, [sp, #24]
   15cac:	ldr	ip, [r5]
   15cb0:	cmp	ip, #0
   15cb4:	beq	15cd0 <close@plt+0x4e84>
   15cb8:	mov	lr, r5
   15cbc:	mov	ip, #0
   15cc0:	ldr	r4, [lr, #4]!
   15cc4:	add	ip, ip, #1
   15cc8:	cmp	r4, #0
   15ccc:	bne	15cc0 <close@plt+0x4e74>
   15cd0:	stm	sp, {r5, ip}
   15cd4:	bl	15908 <close@plt+0x4abc>
   15cd8:	add	sp, sp, #12
   15cdc:	pop	{r4, r5, pc}
   15ce0:	push	{r4, r5, lr}
   15ce4:	sub	sp, sp, #76	; 0x4c
   15ce8:	mov	r5, r0
   15cec:	ldr	ip, [sp, #88]	; 0x58
   15cf0:	ldr	r0, [ip]
   15cf4:	cmp	r0, #0
   15cf8:	str	r0, [sp, #32]
   15cfc:	beq	160d0 <close@plt+0x5284>
   15d00:	ldr	r0, [ip, #4]
   15d04:	cmp	r0, #0
   15d08:	str	r0, [sp, #36]	; 0x24
   15d0c:	beq	160d8 <close@plt+0x528c>
   15d10:	ldr	r0, [ip, #8]
   15d14:	cmp	r0, #0
   15d18:	str	r0, [sp, #40]	; 0x28
   15d1c:	beq	160e0 <close@plt+0x5294>
   15d20:	ldr	r0, [ip, #12]
   15d24:	cmp	r0, #0
   15d28:	str	r0, [sp, #44]	; 0x2c
   15d2c:	beq	160e8 <close@plt+0x529c>
   15d30:	ldr	r0, [ip, #16]
   15d34:	cmp	r0, #0
   15d38:	str	r0, [sp, #48]	; 0x30
   15d3c:	beq	160f0 <close@plt+0x52a4>
   15d40:	ldr	r0, [ip, #20]
   15d44:	cmp	r0, #0
   15d48:	str	r0, [sp, #52]	; 0x34
   15d4c:	beq	160f8 <close@plt+0x52ac>
   15d50:	ldr	r0, [ip, #24]
   15d54:	cmp	r0, #0
   15d58:	str	r0, [sp, #56]	; 0x38
   15d5c:	beq	16100 <close@plt+0x52b4>
   15d60:	ldr	r0, [ip, #28]
   15d64:	cmp	r0, #0
   15d68:	str	r0, [sp, #60]	; 0x3c
   15d6c:	beq	16108 <close@plt+0x52bc>
   15d70:	ldr	r0, [ip, #32]
   15d74:	cmp	r0, #0
   15d78:	str	r0, [sp, #64]	; 0x40
   15d7c:	beq	16110 <close@plt+0x52c4>
   15d80:	ldr	r0, [ip, #36]	; 0x24
   15d84:	cmp	r0, #0
   15d88:	movne	r4, #10
   15d8c:	moveq	r4, #9
   15d90:	cmp	r1, #0
   15d94:	beq	160a8 <close@plt+0x525c>
   15d98:	stm	sp, {r2, r3}
   15d9c:	mov	r0, r5
   15da0:	mov	r3, r1
   15da4:	ldr	r2, [pc, #876]	; 16118 <close@plt+0x52cc>
   15da8:	mov	r1, #1
   15dac:	bl	10dbc <__fprintf_chk@plt>
   15db0:	mov	r2, #5
   15db4:	ldr	r1, [pc, #864]	; 1611c <close@plt+0x52d0>
   15db8:	mov	r0, #0
   15dbc:	bl	10c90 <dcgettext@plt>
   15dc0:	ldr	r3, [pc, #856]	; 16120 <close@plt+0x52d4>
   15dc4:	ldr	r2, [pc, #856]	; 16124 <close@plt+0x52d8>
   15dc8:	str	r3, [sp]
   15dcc:	mov	r1, #1
   15dd0:	mov	r3, r0
   15dd4:	mov	r0, r5
   15dd8:	bl	10dbc <__fprintf_chk@plt>
   15ddc:	mov	r1, r5
   15de0:	mov	r0, #10
   15de4:	bl	10c84 <fputc_unlocked@plt>
   15de8:	mov	r2, #5
   15dec:	ldr	r1, [pc, #820]	; 16128 <close@plt+0x52dc>
   15df0:	mov	r0, #0
   15df4:	bl	10c90 <dcgettext@plt>
   15df8:	mov	r1, #1
   15dfc:	ldr	r3, [pc, #808]	; 1612c <close@plt+0x52e0>
   15e00:	mov	r2, r0
   15e04:	mov	r0, r5
   15e08:	bl	10dbc <__fprintf_chk@plt>
   15e0c:	mov	r1, r5
   15e10:	mov	r0, #10
   15e14:	bl	10c84 <fputc_unlocked@plt>
   15e18:	cmp	r4, #9
   15e1c:	ldrls	pc, [pc, r4, lsl #2]
   15e20:	b	160c4 <close@plt+0x5278>
   15e24:	andeq	r5, r1, r8, lsr #29
   15e28:			; <UNDEFINED> instruction: 0x00015eb0
   15e2c:	ldrdeq	r5, [r1], -ip
   15e30:	andeq	r5, r1, r0, lsl pc
   15e34:	andeq	r5, r1, r8, asr #30
   15e38:	andeq	r5, r1, r4, lsl #31
   15e3c:	andeq	r5, r1, r0, asr #31
   15e40:	andeq	r6, r1, r4
   15e44:	andeq	r6, r1, r0, asr r0
   15e48:	andeq	r5, r1, ip, asr #28
   15e4c:	ldr	r1, [pc, #732]	; 16130 <close@plt+0x52e4>
   15e50:	mov	r2, #5
   15e54:	mov	r0, #0
   15e58:	bl	10c90 <dcgettext@plt>
   15e5c:	ldr	ip, [sp, #64]	; 0x40
   15e60:	ldr	r1, [sp, #60]	; 0x3c
   15e64:	ldr	r2, [sp, #56]	; 0x38
   15e68:	ldr	lr, [sp, #48]	; 0x30
   15e6c:	str	ip, [sp, #28]
   15e70:	str	r1, [sp, #24]
   15e74:	ldr	ip, [sp, #44]	; 0x2c
   15e78:	ldr	r1, [sp, #40]	; 0x28
   15e7c:	ldr	r4, [sp, #52]	; 0x34
   15e80:	str	r2, [sp, #20]
   15e84:	ldr	r2, [sp, #36]	; 0x24
   15e88:	stmib	sp, {r1, ip, lr}
   15e8c:	mov	r1, #1
   15e90:	str	r2, [sp]
   15e94:	ldr	r3, [sp, #32]
   15e98:	str	r4, [sp, #16]
   15e9c:	mov	r2, r0
   15ea0:	mov	r0, r5
   15ea4:	bl	10dbc <__fprintf_chk@plt>
   15ea8:	add	sp, sp, #76	; 0x4c
   15eac:	pop	{r4, r5, pc}
   15eb0:	mov	r2, #5
   15eb4:	ldr	r1, [pc, #632]	; 16134 <close@plt+0x52e8>
   15eb8:	mov	r0, #0
   15ebc:	bl	10c90 <dcgettext@plt>
   15ec0:	ldr	r3, [sp, #32]
   15ec4:	mov	r1, #1
   15ec8:	mov	r2, r0
   15ecc:	mov	r0, r5
   15ed0:	add	sp, sp, #76	; 0x4c
   15ed4:	pop	{r4, r5, lr}
   15ed8:	b	10dbc <__fprintf_chk@plt>
   15edc:	mov	r2, #5
   15ee0:	ldr	r1, [pc, #592]	; 16138 <close@plt+0x52ec>
   15ee4:	mov	r0, #0
   15ee8:	bl	10c90 <dcgettext@plt>
   15eec:	ldr	r2, [sp, #36]	; 0x24
   15ef0:	ldr	r3, [sp, #32]
   15ef4:	str	r2, [sp, #88]	; 0x58
   15ef8:	mov	r1, #1
   15efc:	mov	r2, r0
   15f00:	mov	r0, r5
   15f04:	add	sp, sp, #76	; 0x4c
   15f08:	pop	{r4, r5, lr}
   15f0c:	b	10dbc <__fprintf_chk@plt>
   15f10:	mov	r2, #5
   15f14:	ldr	r1, [pc, #544]	; 1613c <close@plt+0x52f0>
   15f18:	mov	r0, #0
   15f1c:	bl	10c90 <dcgettext@plt>
   15f20:	ldr	r1, [sp, #40]	; 0x28
   15f24:	ldr	r2, [sp, #36]	; 0x24
   15f28:	str	r1, [sp, #4]
   15f2c:	str	r2, [sp]
   15f30:	ldr	r3, [sp, #32]
   15f34:	mov	r1, #1
   15f38:	mov	r2, r0
   15f3c:	mov	r0, r5
   15f40:	bl	10dbc <__fprintf_chk@plt>
   15f44:	b	15ea8 <close@plt+0x505c>
   15f48:	mov	r2, #5
   15f4c:	ldr	r1, [pc, #492]	; 16140 <close@plt+0x52f4>
   15f50:	mov	r0, #0
   15f54:	bl	10c90 <dcgettext@plt>
   15f58:	ldr	r1, [sp, #40]	; 0x28
   15f5c:	ldr	ip, [sp, #44]	; 0x2c
   15f60:	ldr	r2, [sp, #36]	; 0x24
   15f64:	ldr	r3, [sp, #32]
   15f68:	stmib	sp, {r1, ip}
   15f6c:	str	r2, [sp]
   15f70:	mov	r1, #1
   15f74:	mov	r2, r0
   15f78:	mov	r0, r5
   15f7c:	bl	10dbc <__fprintf_chk@plt>
   15f80:	b	15ea8 <close@plt+0x505c>
   15f84:	mov	r2, #5
   15f88:	ldr	r1, [pc, #436]	; 16144 <close@plt+0x52f8>
   15f8c:	mov	r0, #0
   15f90:	bl	10c90 <dcgettext@plt>
   15f94:	add	r1, sp, #40	; 0x28
   15f98:	ldr	r2, [sp, #36]	; 0x24
   15f9c:	ldm	r1, {r1, ip, lr}
   15fa0:	ldr	r3, [sp, #32]
   15fa4:	str	r2, [sp]
   15fa8:	stmib	sp, {r1, ip, lr}
   15fac:	mov	r1, #1
   15fb0:	mov	r2, r0
   15fb4:	mov	r0, r5
   15fb8:	bl	10dbc <__fprintf_chk@plt>
   15fbc:	b	15ea8 <close@plt+0x505c>
   15fc0:	mov	r2, #5
   15fc4:	ldr	r1, [pc, #380]	; 16148 <close@plt+0x52fc>
   15fc8:	mov	r0, #0
   15fcc:	bl	10c90 <dcgettext@plt>
   15fd0:	add	r1, sp, #40	; 0x28
   15fd4:	ldr	r2, [sp, #36]	; 0x24
   15fd8:	ldm	r1, {r1, ip, lr}
   15fdc:	ldr	r4, [sp, #52]	; 0x34
   15fe0:	str	r2, [sp]
   15fe4:	stmib	sp, {r1, ip, lr}
   15fe8:	mov	r1, #1
   15fec:	ldr	r3, [sp, #32]
   15ff0:	str	r4, [sp, #16]
   15ff4:	mov	r2, r0
   15ff8:	mov	r0, r5
   15ffc:	bl	10dbc <__fprintf_chk@plt>
   16000:	b	15ea8 <close@plt+0x505c>
   16004:	mov	r2, #5
   16008:	ldr	r1, [pc, #316]	; 1614c <close@plt+0x5300>
   1600c:	mov	r0, #0
   16010:	bl	10c90 <dcgettext@plt>
   16014:	add	r1, sp, #40	; 0x28
   16018:	ldr	r2, [sp, #56]	; 0x38
   1601c:	ldm	r1, {r1, ip, lr}
   16020:	ldr	r4, [sp, #52]	; 0x34
   16024:	str	r2, [sp, #20]
   16028:	ldr	r2, [sp, #36]	; 0x24
   1602c:	stmib	sp, {r1, ip, lr}
   16030:	mov	r1, #1
   16034:	str	r2, [sp]
   16038:	ldr	r3, [sp, #32]
   1603c:	str	r4, [sp, #16]
   16040:	mov	r2, r0
   16044:	mov	r0, r5
   16048:	bl	10dbc <__fprintf_chk@plt>
   1604c:	b	15ea8 <close@plt+0x505c>
   16050:	mov	r2, #5
   16054:	ldr	r1, [pc, #244]	; 16150 <close@plt+0x5304>
   16058:	mov	r0, #0
   1605c:	bl	10c90 <dcgettext@plt>
   16060:	ldr	r1, [sp, #60]	; 0x3c
   16064:	ldr	r2, [sp, #56]	; 0x38
   16068:	ldr	lr, [sp, #48]	; 0x30
   1606c:	ldr	ip, [sp, #44]	; 0x2c
   16070:	str	r1, [sp, #24]
   16074:	ldr	r1, [sp, #40]	; 0x28
   16078:	ldr	r4, [sp, #52]	; 0x34
   1607c:	str	r2, [sp, #20]
   16080:	ldr	r2, [sp, #36]	; 0x24
   16084:	stmib	sp, {r1, ip, lr}
   16088:	mov	r1, #1
   1608c:	str	r2, [sp]
   16090:	ldr	r3, [sp, #32]
   16094:	str	r4, [sp, #16]
   16098:	mov	r2, r0
   1609c:	mov	r0, r5
   160a0:	bl	10dbc <__fprintf_chk@plt>
   160a4:	b	15ea8 <close@plt+0x505c>
   160a8:	str	r3, [sp]
   160ac:	mov	r1, #1
   160b0:	mov	r3, r2
   160b4:	mov	r0, r5
   160b8:	ldr	r2, [pc, #148]	; 16154 <close@plt+0x5308>
   160bc:	bl	10dbc <__fprintf_chk@plt>
   160c0:	b	15db0 <close@plt+0x4f64>
   160c4:	mov	r2, #5
   160c8:	ldr	r1, [pc, #136]	; 16158 <close@plt+0x530c>
   160cc:	b	15e54 <close@plt+0x5008>
   160d0:	mov	r4, r0
   160d4:	b	15d90 <close@plt+0x4f44>
   160d8:	mov	r4, #1
   160dc:	b	15d90 <close@plt+0x4f44>
   160e0:	mov	r4, #2
   160e4:	b	15d90 <close@plt+0x4f44>
   160e8:	mov	r4, #3
   160ec:	b	15d90 <close@plt+0x4f44>
   160f0:	mov	r4, #4
   160f4:	b	15d90 <close@plt+0x4f44>
   160f8:	mov	r4, #5
   160fc:	b	15d90 <close@plt+0x4f44>
   16100:	mov	r4, #6
   16104:	b	15d90 <close@plt+0x4f44>
   16108:	mov	r4, #7
   1610c:	b	15d90 <close@plt+0x4f44>
   16110:	mov	r4, #8
   16114:	b	15d90 <close@plt+0x4f44>
   16118:	andeq	r7, r1, r4, asr #19
   1611c:	ldrdeq	r7, [r1], -r8
   16120:	andeq	r0, r0, r6, ror #15
   16124:			; <UNDEFINED> instruction: 0x00017cb0
   16128:	ldrdeq	r7, [r1], -ip
   1612c:	andeq	r7, r1, r8, lsl #21
   16130:			; <UNDEFINED> instruction: 0x00017bb8
   16134:	andeq	r7, r1, ip, lsr #21
   16138:			; <UNDEFINED> instruction: 0x00017abc
   1613c:	ldrdeq	r7, [r1], -r4
   16140:	strdeq	r7, [r1], -r0
   16144:	andeq	r7, r1, r0, lsl fp
   16148:	andeq	r7, r1, r4, lsr fp
   1614c:	andeq	r7, r1, ip, asr fp
   16150:	andeq	r7, r1, r8, lsl #23
   16154:	ldrdeq	r7, [r1], -r0
   16158:	andeq	r7, r1, ip, ror #23
   1615c:	push	{r3}		; (str r3, [sp, #-4]!)
   16160:	push	{lr}		; (str lr, [sp, #-4]!)
   16164:	sub	sp, sp, #56	; 0x38
   16168:	add	r3, sp, #64	; 0x40
   1616c:	ldr	ip, [sp, #64]	; 0x40
   16170:	str	r3, [sp, #12]
   16174:	cmp	ip, #0
   16178:	str	ip, [sp, #16]
   1617c:	beq	16214 <close@plt+0x53c8>
   16180:	ldr	ip, [sp, #68]	; 0x44
   16184:	cmp	ip, #0
   16188:	str	ip, [sp, #20]
   1618c:	beq	16234 <close@plt+0x53e8>
   16190:	ldr	ip, [sp, #72]	; 0x48
   16194:	cmp	ip, #0
   16198:	str	ip, [sp, #24]
   1619c:	beq	1623c <close@plt+0x53f0>
   161a0:	ldr	ip, [sp, #76]	; 0x4c
   161a4:	cmp	ip, #0
   161a8:	str	ip, [sp, #28]
   161ac:	beq	16244 <close@plt+0x53f8>
   161b0:	ldr	ip, [sp, #80]	; 0x50
   161b4:	cmp	ip, #0
   161b8:	str	ip, [sp, #32]
   161bc:	beq	1624c <close@plt+0x5400>
   161c0:	ldr	ip, [sp, #84]	; 0x54
   161c4:	cmp	ip, #0
   161c8:	str	ip, [sp, #36]	; 0x24
   161cc:	beq	16254 <close@plt+0x5408>
   161d0:	ldr	ip, [sp, #88]	; 0x58
   161d4:	cmp	ip, #0
   161d8:	str	ip, [sp, #40]	; 0x28
   161dc:	beq	1625c <close@plt+0x5410>
   161e0:	ldr	ip, [sp, #92]	; 0x5c
   161e4:	cmp	ip, #0
   161e8:	str	ip, [sp, #44]	; 0x2c
   161ec:	beq	16264 <close@plt+0x5418>
   161f0:	ldr	ip, [sp, #96]	; 0x60
   161f4:	cmp	ip, #0
   161f8:	str	ip, [sp, #48]	; 0x30
   161fc:	beq	1626c <close@plt+0x5420>
   16200:	ldr	ip, [sp, #100]	; 0x64
   16204:	cmp	ip, #0
   16208:	str	ip, [sp, #52]	; 0x34
   1620c:	movne	ip, #10
   16210:	moveq	ip, #9
   16214:	add	r3, sp, #16
   16218:	stm	sp, {r3, ip}
   1621c:	ldr	r3, [sp, #60]	; 0x3c
   16220:	bl	15908 <close@plt+0x4abc>
   16224:	add	sp, sp, #56	; 0x38
   16228:	pop	{lr}		; (ldr lr, [sp], #4)
   1622c:	add	sp, sp, #4
   16230:	bx	lr
   16234:	mov	ip, #1
   16238:	b	16214 <close@plt+0x53c8>
   1623c:	mov	ip, #2
   16240:	b	16214 <close@plt+0x53c8>
   16244:	mov	ip, #3
   16248:	b	16214 <close@plt+0x53c8>
   1624c:	mov	ip, #4
   16250:	b	16214 <close@plt+0x53c8>
   16254:	mov	ip, #5
   16258:	b	16214 <close@plt+0x53c8>
   1625c:	mov	ip, #6
   16260:	b	16214 <close@plt+0x53c8>
   16264:	mov	ip, #7
   16268:	b	16214 <close@plt+0x53c8>
   1626c:	mov	ip, #8
   16270:	b	16214 <close@plt+0x53c8>
   16274:	ldr	r3, [pc, #116]	; 162f0 <close@plt+0x54a4>
   16278:	push	{r4, lr}
   1627c:	mov	r0, #10
   16280:	ldr	r1, [r3]
   16284:	bl	10c84 <fputc_unlocked@plt>
   16288:	mov	r2, #5
   1628c:	ldr	r1, [pc, #96]	; 162f4 <close@plt+0x54a8>
   16290:	mov	r0, #0
   16294:	bl	10c90 <dcgettext@plt>
   16298:	ldr	r2, [pc, #88]	; 162f8 <close@plt+0x54ac>
   1629c:	mov	r1, r0
   162a0:	mov	r0, #1
   162a4:	bl	10da4 <__printf_chk@plt>
   162a8:	mov	r2, #5
   162ac:	ldr	r1, [pc, #72]	; 162fc <close@plt+0x54b0>
   162b0:	mov	r0, #0
   162b4:	bl	10c90 <dcgettext@plt>
   162b8:	ldr	r3, [pc, #64]	; 16300 <close@plt+0x54b4>
   162bc:	ldr	r2, [pc, #64]	; 16304 <close@plt+0x54b8>
   162c0:	mov	r1, r0
   162c4:	mov	r0, #1
   162c8:	bl	10da4 <__printf_chk@plt>
   162cc:	mov	r2, #5
   162d0:	ldr	r1, [pc, #48]	; 16308 <close@plt+0x54bc>
   162d4:	mov	r0, #0
   162d8:	bl	10c90 <dcgettext@plt>
   162dc:	ldr	r2, [pc, #40]	; 1630c <close@plt+0x54c0>
   162e0:	pop	{r4, lr}
   162e4:	mov	r1, r0
   162e8:	mov	r0, #1
   162ec:	b	10da4 <__printf_chk@plt>
   162f0:	andeq	r8, r2, ip, lsr r1
   162f4:	andeq	r7, r1, r8, lsr #24
   162f8:	andeq	r7, r1, ip, lsr ip
   162fc:	andeq	r7, r1, r4, asr ip
   16300:	andeq	r7, r1, ip, lsr #12
   16304:	andeq	r7, r1, r4, asr r6
   16308:	andeq	r7, r1, r8, ror #24
   1630c:	muleq	r1, r0, ip
   16310:	push	{r4, r5, r6, lr}
   16314:	mov	r6, r0
   16318:	mov	r5, r1
   1631c:	mov	r4, r2
   16320:	bl	16d98 <close@plt+0x5f4c>
   16324:	cmp	r0, #0
   16328:	popne	{r4, r5, r6, pc}
   1632c:	cmp	r6, #0
   16330:	beq	16340 <close@plt+0x54f4>
   16334:	cmp	r5, #0
   16338:	cmpne	r4, #0
   1633c:	popeq	{r4, r5, r6, pc}
   16340:	bl	1698c <close@plt+0x5b40>
   16344:	push	{r4, lr}
   16348:	bl	16a14 <close@plt+0x5bc8>
   1634c:	cmp	r0, #0
   16350:	popne	{r4, pc}
   16354:	bl	1698c <close@plt+0x5b40>
   16358:	push	{r4, lr}
   1635c:	bl	16a14 <close@plt+0x5bc8>
   16360:	cmp	r0, #0
   16364:	popne	{r4, pc}
   16368:	bl	1698c <close@plt+0x5b40>
   1636c:	push	{r4, lr}
   16370:	bl	16a14 <close@plt+0x5bc8>
   16374:	cmp	r0, #0
   16378:	popne	{r4, pc}
   1637c:	bl	1698c <close@plt+0x5b40>
   16380:	push	{r4, r5, r6, lr}
   16384:	mov	r5, r0
   16388:	mov	r4, r1
   1638c:	bl	16a40 <close@plt+0x5bf4>
   16390:	cmp	r0, #0
   16394:	popne	{r4, r5, r6, pc}
   16398:	adds	r4, r4, #0
   1639c:	movne	r4, #1
   163a0:	cmp	r5, #0
   163a4:	orreq	r4, r4, #1
   163a8:	cmp	r4, #0
   163ac:	popeq	{r4, r5, r6, pc}
   163b0:	bl	1698c <close@plt+0x5b40>
   163b4:	push	{r4, lr}
   163b8:	cmp	r1, #0
   163bc:	orreq	r1, r1, #1
   163c0:	bl	16a40 <close@plt+0x5bf4>
   163c4:	cmp	r0, #0
   163c8:	popne	{r4, pc}
   163cc:	bl	1698c <close@plt+0x5b40>
   163d0:	push	{r4, r5, r6, lr}
   163d4:	mov	r6, r0
   163d8:	mov	r5, r1
   163dc:	mov	r4, r2
   163e0:	bl	16d98 <close@plt+0x5f4c>
   163e4:	cmp	r0, #0
   163e8:	popne	{r4, r5, r6, pc}
   163ec:	cmp	r6, #0
   163f0:	beq	16400 <close@plt+0x55b4>
   163f4:	cmp	r5, #0
   163f8:	cmpne	r4, #0
   163fc:	popeq	{r4, r5, r6, pc}
   16400:	bl	1698c <close@plt+0x5b40>
   16404:	cmp	r2, #0
   16408:	cmpne	r1, #0
   1640c:	moveq	r2, #1
   16410:	moveq	r1, r2
   16414:	push	{r4, lr}
   16418:	bl	16d98 <close@plt+0x5f4c>
   1641c:	cmp	r0, #0
   16420:	popne	{r4, pc}
   16424:	bl	1698c <close@plt+0x5b40>
   16428:	push	{r4, lr}
   1642c:	mov	r2, r1
   16430:	mov	r1, r0
   16434:	mov	r0, #0
   16438:	bl	16d98 <close@plt+0x5f4c>
   1643c:	cmp	r0, #0
   16440:	popne	{r4, pc}
   16444:	bl	1698c <close@plt+0x5b40>
   16448:	cmp	r1, #0
   1644c:	cmpne	r0, #0
   16450:	moveq	r2, #1
   16454:	movne	r2, r1
   16458:	moveq	r1, r2
   1645c:	movne	r1, r0
   16460:	push	{r4, lr}
   16464:	mov	r0, #0
   16468:	bl	16d98 <close@plt+0x5f4c>
   1646c:	cmp	r0, #0
   16470:	popne	{r4, pc}
   16474:	bl	1698c <close@plt+0x5b40>
   16478:	cmp	r0, #0
   1647c:	push	{r4, r5, r6, lr}
   16480:	mov	r5, r1
   16484:	ldr	r4, [r1]
   16488:	beq	164c4 <close@plt+0x5678>
   1648c:	lsr	r2, r4, #1
   16490:	add	r3, r2, #1
   16494:	mvn	r3, r3
   16498:	cmp	r4, r3
   1649c:	bhi	164e0 <close@plt+0x5694>
   164a0:	add	r4, r4, #1
   164a4:	add	r4, r4, r2
   164a8:	mov	r1, r4
   164ac:	mov	r2, #1
   164b0:	bl	16d98 <close@plt+0x5f4c>
   164b4:	cmp	r0, #0
   164b8:	beq	164e4 <close@plt+0x5698>
   164bc:	str	r4, [r5]
   164c0:	pop	{r4, r5, r6, pc}
   164c4:	cmp	r4, #0
   164c8:	moveq	r4, #64	; 0x40
   164cc:	mov	r1, r4
   164d0:	mov	r2, #1
   164d4:	bl	16d98 <close@plt+0x5f4c>
   164d8:	cmp	r0, #0
   164dc:	bne	164bc <close@plt+0x5670>
   164e0:	bl	1698c <close@plt+0x5b40>
   164e4:	cmp	r4, #0
   164e8:	bne	164e0 <close@plt+0x5694>
   164ec:	str	r4, [r5]
   164f0:	pop	{r4, r5, r6, pc}
   164f4:	cmp	r0, #0
   164f8:	push	{r4, r5, r6, lr}
   164fc:	mov	r5, r1
   16500:	ldr	r4, [r1]
   16504:	mov	r6, r2
   16508:	beq	1654c <close@plt+0x5700>
   1650c:	lsr	r1, r4, #1
   16510:	add	r3, r1, #1
   16514:	mvn	r3, r3
   16518:	cmp	r4, r3
   1651c:	bhi	16584 <close@plt+0x5738>
   16520:	add	r4, r4, #1
   16524:	add	r4, r4, r1
   16528:	mov	r1, r4
   1652c:	bl	16d98 <close@plt+0x5f4c>
   16530:	cmp	r0, #0
   16534:	bne	16544 <close@plt+0x56f8>
   16538:	cmp	r4, #0
   1653c:	cmpne	r6, #0
   16540:	bne	16584 <close@plt+0x5738>
   16544:	str	r4, [r5]
   16548:	pop	{r4, r5, r6, pc}
   1654c:	cmp	r4, #0
   16550:	bne	1656c <close@plt+0x5720>
   16554:	mov	r1, r2
   16558:	mov	r0, #64	; 0x40
   1655c:	bl	16ed8 <close@plt+0x608c>
   16560:	cmp	r0, #0
   16564:	movne	r4, r0
   16568:	addeq	r4, r0, #1
   1656c:	mov	r2, r6
   16570:	mov	r1, r4
   16574:	mov	r0, #0
   16578:	bl	16d98 <close@plt+0x5f4c>
   1657c:	cmp	r0, #0
   16580:	bne	16544 <close@plt+0x56f8>
   16584:	bl	1698c <close@plt+0x5b40>
   16588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1658c:	sub	sp, sp, #12
   16590:	ldr	r6, [r1]
   16594:	mov	r8, r1
   16598:	mov	r9, r0
   1659c:	asrs	r4, r6, #1
   165a0:	mov	sl, r2
   165a4:	mov	fp, r3
   165a8:	ldr	r7, [sp, #48]	; 0x30
   165ac:	bmi	16728 <close@plt+0x58dc>
   165b0:	mvn	r1, #-2147483648	; 0x80000000
   165b4:	sub	r1, r1, r4
   165b8:	cmp	r6, r1
   165bc:	movle	r1, #0
   165c0:	movgt	r1, #1
   165c4:	mvn	r3, fp
   165c8:	cmp	r1, #0
   165cc:	addeq	r4, r4, r6
   165d0:	mvnne	r4, #-2147483648	; 0x80000000
   165d4:	lsr	r3, r3, #31
   165d8:	cmp	fp, r4
   165dc:	movge	r2, #0
   165e0:	andlt	r2, r3, #1
   165e4:	cmp	r2, #0
   165e8:	beq	166d8 <close@plt+0x588c>
   165ec:	cmp	r7, #0
   165f0:	blt	167c0 <close@plt+0x5974>
   165f4:	bne	167b8 <close@plt+0x596c>
   165f8:	mov	r5, #64	; 0x40
   165fc:	mov	r1, r7
   16600:	mov	r0, r5
   16604:	str	r3, [sp, #4]
   16608:	bl	170e4 <close@plt+0x6298>
   1660c:	mov	r1, r7
   16610:	mov	r4, r0
   16614:	mov	r0, r5
   16618:	bl	17304 <close@plt+0x64b8>
   1661c:	ldr	r3, [sp, #4]
   16620:	sub	r5, r5, r1
   16624:	cmp	r9, #0
   16628:	sub	r2, r4, r6
   1662c:	streq	r9, [r8]
   16630:	cmp	r2, sl
   16634:	bge	166b8 <close@plt+0x586c>
   16638:	cmp	sl, #0
   1663c:	blt	16758 <close@plt+0x590c>
   16640:	cmp	r6, #0
   16644:	blt	16664 <close@plt+0x5818>
   16648:	mvn	r2, #-2147483648	; 0x80000000
   1664c:	sub	r2, r2, sl
   16650:	cmp	r6, r2
   16654:	movle	r2, #0
   16658:	movgt	r2, #1
   1665c:	cmp	r2, #0
   16660:	bne	16754 <close@plt+0x5908>
   16664:	add	r6, r6, sl
   16668:	cmp	fp, r6
   1666c:	movge	r3, #0
   16670:	andlt	r3, r3, #1
   16674:	cmp	r3, #0
   16678:	mov	r4, r6
   1667c:	bne	16754 <close@plt+0x5908>
   16680:	cmp	r7, #0
   16684:	blt	1676c <close@plt+0x5920>
   16688:	beq	166b4 <close@plt+0x5868>
   1668c:	cmp	r6, #0
   16690:	blt	16810 <close@plt+0x59c4>
   16694:	mov	r1, r7
   16698:	mvn	r0, #-2147483648	; 0x80000000
   1669c:	bl	170e4 <close@plt+0x6298>
   166a0:	cmp	r6, r0
   166a4:	movle	r0, #0
   166a8:	movgt	r0, #1
   166ac:	cmp	r0, #0
   166b0:	bne	16754 <close@plt+0x5908>
   166b4:	mul	r5, r6, r7
   166b8:	mov	r1, r5
   166bc:	mov	r0, r9
   166c0:	bl	16a40 <close@plt+0x5bf4>
   166c4:	cmp	r0, #0
   166c8:	beq	1673c <close@plt+0x58f0>
   166cc:	str	r4, [r8]
   166d0:	add	sp, sp, #12
   166d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166d8:	cmp	r7, #0
   166dc:	blt	16798 <close@plt+0x594c>
   166e0:	beq	165f8 <close@plt+0x57ac>
   166e4:	cmp	r4, #0
   166e8:	blt	167c8 <close@plt+0x597c>
   166ec:	mov	r1, r7
   166f0:	mvn	r0, #-2147483648	; 0x80000000
   166f4:	str	r3, [sp, #4]
   166f8:	bl	170e4 <close@plt+0x6298>
   166fc:	ldr	r3, [sp, #4]
   16700:	cmp	r0, r4
   16704:	movge	r0, #0
   16708:	movlt	r0, #1
   1670c:	cmp	r0, #0
   16710:	mvnne	r5, #-2147483648	; 0x80000000
   16714:	bne	165fc <close@plt+0x57b0>
   16718:	mul	r5, r7, r4
   1671c:	cmp	r5, #63	; 0x3f
   16720:	bgt	16624 <close@plt+0x57d8>
   16724:	b	165f8 <close@plt+0x57ac>
   16728:	rsb	r1, r4, #-2147483648	; 0x80000000
   1672c:	cmp	r6, r1
   16730:	movge	r1, #0
   16734:	movlt	r1, #1
   16738:	b	165c4 <close@plt+0x5778>
   1673c:	adds	r5, r5, #0
   16740:	movne	r5, #1
   16744:	cmp	r9, #0
   16748:	orreq	r5, r5, #1
   1674c:	cmp	r5, #0
   16750:	beq	166cc <close@plt+0x5880>
   16754:	bl	1698c <close@plt+0x5b40>
   16758:	rsb	r2, sl, #-2147483648	; 0x80000000
   1675c:	cmp	r6, r2
   16760:	movge	r2, #0
   16764:	movlt	r2, #1
   16768:	b	1665c <close@plt+0x5810>
   1676c:	cmp	r6, #0
   16770:	blt	167f4 <close@plt+0x59a8>
   16774:	cmn	r7, #1
   16778:	beq	166b4 <close@plt+0x5868>
   1677c:	mov	r1, r7
   16780:	mov	r0, #-2147483648	; 0x80000000
   16784:	bl	170e4 <close@plt+0x6298>
   16788:	cmp	r6, r0
   1678c:	movle	r0, #0
   16790:	movgt	r0, #1
   16794:	b	166ac <close@plt+0x5860>
   16798:	cmp	r4, #0
   1679c:	blt	16834 <close@plt+0x59e8>
   167a0:	cmn	r7, #1
   167a4:	beq	16718 <close@plt+0x58cc>
   167a8:	str	r3, [sp, #4]
   167ac:	mov	r1, r7
   167b0:	mov	r0, #-2147483648	; 0x80000000
   167b4:	b	166f8 <close@plt+0x58ac>
   167b8:	mov	r4, fp
   167bc:	b	166ec <close@plt+0x58a0>
   167c0:	mov	r4, fp
   167c4:	b	167a0 <close@plt+0x5954>
   167c8:	cmn	r4, #1
   167cc:	beq	16718 <close@plt+0x58cc>
   167d0:	mov	r1, r4
   167d4:	mov	r0, #-2147483648	; 0x80000000
   167d8:	str	r3, [sp, #4]
   167dc:	bl	170e4 <close@plt+0x6298>
   167e0:	ldr	r3, [sp, #4]
   167e4:	cmp	r7, r0
   167e8:	movle	r0, #0
   167ec:	movgt	r0, #1
   167f0:	b	1670c <close@plt+0x58c0>
   167f4:	mov	r1, r7
   167f8:	mvn	r0, #-2147483648	; 0x80000000
   167fc:	bl	170e4 <close@plt+0x6298>
   16800:	cmp	r6, r0
   16804:	movge	r0, #0
   16808:	movlt	r0, #1
   1680c:	b	166ac <close@plt+0x5860>
   16810:	cmn	r6, #1
   16814:	beq	166b4 <close@plt+0x5868>
   16818:	mov	r1, r6
   1681c:	mov	r0, #-2147483648	; 0x80000000
   16820:	bl	170e4 <close@plt+0x6298>
   16824:	cmp	r7, r0
   16828:	movle	r0, #0
   1682c:	movgt	r0, #1
   16830:	b	166ac <close@plt+0x5860>
   16834:	mov	r1, r7
   16838:	mvn	r0, #-2147483648	; 0x80000000
   1683c:	str	r3, [sp, #4]
   16840:	bl	170e4 <close@plt+0x6298>
   16844:	ldr	r3, [sp, #4]
   16848:	cmp	r0, r4
   1684c:	movle	r0, #0
   16850:	movgt	r0, #1
   16854:	b	1670c <close@plt+0x58c0>
   16858:	push	{r4, lr}
   1685c:	mov	r1, #1
   16860:	bl	169cc <close@plt+0x5b80>
   16864:	cmp	r0, #0
   16868:	popne	{r4, pc}
   1686c:	bl	1698c <close@plt+0x5b40>
   16870:	push	{r4, lr}
   16874:	mov	r1, #1
   16878:	bl	169cc <close@plt+0x5b80>
   1687c:	cmp	r0, #0
   16880:	popne	{r4, pc}
   16884:	bl	1698c <close@plt+0x5b40>
   16888:	push	{r4, lr}
   1688c:	bl	169cc <close@plt+0x5b80>
   16890:	cmp	r0, #0
   16894:	popne	{r4, pc}
   16898:	bl	1698c <close@plt+0x5b40>
   1689c:	push	{r4, lr}
   168a0:	bl	169cc <close@plt+0x5b80>
   168a4:	cmp	r0, #0
   168a8:	popne	{r4, pc}
   168ac:	bl	1698c <close@plt+0x5b40>
   168b0:	push	{r4, r5, r6, lr}
   168b4:	mov	r6, r0
   168b8:	mov	r0, r1
   168bc:	mov	r4, r1
   168c0:	bl	16a14 <close@plt+0x5bc8>
   168c4:	subs	r5, r0, #0
   168c8:	beq	168e0 <close@plt+0x5a94>
   168cc:	mov	r2, r4
   168d0:	mov	r1, r6
   168d4:	bl	10c60 <memcpy@plt>
   168d8:	mov	r0, r5
   168dc:	pop	{r4, r5, r6, pc}
   168e0:	bl	1698c <close@plt+0x5b40>
   168e4:	push	{r4, r5, r6, lr}
   168e8:	mov	r6, r0
   168ec:	mov	r0, r1
   168f0:	mov	r4, r1
   168f4:	bl	16a14 <close@plt+0x5bc8>
   168f8:	subs	r5, r0, #0
   168fc:	beq	16914 <close@plt+0x5ac8>
   16900:	mov	r2, r4
   16904:	mov	r1, r6
   16908:	bl	10c60 <memcpy@plt>
   1690c:	mov	r0, r5
   16910:	pop	{r4, r5, r6, pc}
   16914:	bl	1698c <close@plt+0x5b40>
   16918:	push	{r4, r5, r6, lr}
   1691c:	mov	r6, r0
   16920:	add	r0, r1, #1
   16924:	mov	r4, r1
   16928:	bl	16a14 <close@plt+0x5bc8>
   1692c:	subs	r5, r0, #0
   16930:	beq	16950 <close@plt+0x5b04>
   16934:	mov	r3, #0
   16938:	mov	r1, r6
   1693c:	strb	r3, [r5, r4]
   16940:	mov	r2, r4
   16944:	bl	10c60 <memcpy@plt>
   16948:	mov	r0, r5
   1694c:	pop	{r4, r5, r6, pc}
   16950:	bl	1698c <close@plt+0x5b40>
   16954:	push	{r4, r5, r6, lr}
   16958:	mov	r6, r0
   1695c:	bl	10d74 <strlen@plt>
   16960:	add	r4, r0, #1
   16964:	mov	r0, r4
   16968:	bl	16a14 <close@plt+0x5bc8>
   1696c:	subs	r5, r0, #0
   16970:	beq	16988 <close@plt+0x5b3c>
   16974:	mov	r2, r4
   16978:	mov	r1, r6
   1697c:	bl	10c60 <memcpy@plt>
   16980:	mov	r0, r5
   16984:	pop	{r4, r5, r6, pc}
   16988:	bl	1698c <close@plt+0x5b40>
   1698c:	ldr	r3, [pc, #44]	; 169c0 <close@plt+0x5b74>
   16990:	push	{r4, lr}
   16994:	mov	r2, #5
   16998:	ldr	r1, [pc, #36]	; 169c4 <close@plt+0x5b78>
   1699c:	mov	r0, #0
   169a0:	ldr	r4, [r3]
   169a4:	bl	10c90 <dcgettext@plt>
   169a8:	ldr	r2, [pc, #24]	; 169c8 <close@plt+0x5b7c>
   169ac:	mov	r1, #0
   169b0:	mov	r3, r0
   169b4:	mov	r0, r4
   169b8:	bl	10d08 <error@plt>
   169bc:	bl	10e40 <abort@plt>
   169c0:	andeq	r8, r2, r4, ror #1
   169c4:	andeq	r7, r1, r0, ror #25
   169c8:	andeq	r7, r1, r4, lsr #17
   169cc:	cmp	r1, #0
   169d0:	cmpne	r0, #0
   169d4:	moveq	r1, #1
   169d8:	moveq	r0, r1
   169dc:	umull	r2, r3, r0, r1
   169e0:	adds	r3, r3, #0
   169e4:	movne	r3, #1
   169e8:	cmp	r2, #0
   169ec:	blt	169fc <close@plt+0x5bb0>
   169f0:	cmp	r3, #0
   169f4:	bne	169fc <close@plt+0x5bb0>
   169f8:	b	10c00 <calloc@plt>
   169fc:	push	{r4, lr}
   16a00:	bl	10d80 <__errno_location@plt>
   16a04:	mov	r3, #12
   16a08:	str	r3, [r0]
   16a0c:	mov	r0, #0
   16a10:	pop	{r4, pc}
   16a14:	cmp	r0, #0
   16a18:	moveq	r0, #1
   16a1c:	cmp	r0, #0
   16a20:	blt	16a28 <close@plt+0x5bdc>
   16a24:	b	10d20 <malloc@plt>
   16a28:	push	{r4, lr}
   16a2c:	bl	10d80 <__errno_location@plt>
   16a30:	mov	r3, #12
   16a34:	str	r3, [r0]
   16a38:	mov	r0, #0
   16a3c:	pop	{r4, pc}
   16a40:	cmp	r0, #0
   16a44:	beq	16a68 <close@plt+0x5c1c>
   16a48:	cmp	r1, #0
   16a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   16a50:	sub	sp, sp, #12
   16a54:	beq	16a70 <close@plt+0x5c24>
   16a58:	blt	16a88 <close@plt+0x5c3c>
   16a5c:	add	sp, sp, #12
   16a60:	pop	{lr}		; (ldr lr, [sp], #4)
   16a64:	b	10ca8 <realloc@plt>
   16a68:	mov	r0, r1
   16a6c:	b	16a14 <close@plt+0x5bc8>
   16a70:	str	r1, [sp, #4]
   16a74:	bl	16c18 <close@plt+0x5dcc>
   16a78:	ldr	r3, [sp, #4]
   16a7c:	mov	r0, r3
   16a80:	add	sp, sp, #12
   16a84:	pop	{pc}		; (ldr pc, [sp], #4)
   16a88:	bl	10d80 <__errno_location@plt>
   16a8c:	mov	r2, #12
   16a90:	mov	r3, #0
   16a94:	str	r2, [r0]
   16a98:	b	16a7c <close@plt+0x5c30>
   16a9c:	push	{r4, r5, r6, lr}
   16aa0:	mov	r4, r0
   16aa4:	bl	10cf0 <__fpending@plt>
   16aa8:	ldr	r5, [r4]
   16aac:	and	r5, r5, #32
   16ab0:	mov	r6, r0
   16ab4:	mov	r0, r4
   16ab8:	bl	16b18 <close@plt+0x5ccc>
   16abc:	cmp	r5, #0
   16ac0:	mov	r4, r0
   16ac4:	bne	16ae4 <close@plt+0x5c98>
   16ac8:	cmp	r0, #0
   16acc:	beq	16adc <close@plt+0x5c90>
   16ad0:	cmp	r6, #0
   16ad4:	beq	16b00 <close@plt+0x5cb4>
   16ad8:	mvn	r4, #0
   16adc:	mov	r0, r4
   16ae0:	pop	{r4, r5, r6, pc}
   16ae4:	cmp	r0, #0
   16ae8:	bne	16ad8 <close@plt+0x5c8c>
   16aec:	bl	10d80 <__errno_location@plt>
   16af0:	str	r4, [r0]
   16af4:	mvn	r4, #0
   16af8:	mov	r0, r4
   16afc:	pop	{r4, r5, r6, pc}
   16b00:	bl	10d80 <__errno_location@plt>
   16b04:	ldr	r4, [r0]
   16b08:	subs	r4, r4, #9
   16b0c:	mvnne	r4, #0
   16b10:	mov	r0, r4
   16b14:	pop	{r4, r5, r6, pc}
   16b18:	push	{r4, r5, lr}
   16b1c:	sub	sp, sp, #12
   16b20:	mov	r4, r0
   16b24:	bl	10db0 <fileno@plt>
   16b28:	cmp	r0, #0
   16b2c:	mov	r0, r4
   16b30:	blt	16bac <close@plt+0x5d60>
   16b34:	bl	10d38 <__freading@plt>
   16b38:	cmp	r0, #0
   16b3c:	bne	16b78 <close@plt+0x5d2c>
   16b40:	mov	r0, r4
   16b44:	bl	16bb8 <close@plt+0x5d6c>
   16b48:	cmp	r0, #0
   16b4c:	beq	16ba8 <close@plt+0x5d5c>
   16b50:	bl	10d80 <__errno_location@plt>
   16b54:	mov	r5, r0
   16b58:	mov	r0, r4
   16b5c:	ldr	r4, [r5]
   16b60:	bl	10dc8 <fclose@plt>
   16b64:	cmp	r4, #0
   16b68:	mvnne	r0, #0
   16b6c:	strne	r4, [r5]
   16b70:	add	sp, sp, #12
   16b74:	pop	{r4, r5, pc}
   16b78:	mov	r0, r4
   16b7c:	bl	10db0 <fileno@plt>
   16b80:	mov	r3, #1
   16b84:	str	r3, [sp]
   16b88:	mov	r2, #0
   16b8c:	mov	r3, #0
   16b90:	bl	10cd8 <lseek64@plt>
   16b94:	mvn	r3, #0
   16b98:	mvn	r2, #0
   16b9c:	cmp	r1, r3
   16ba0:	cmpeq	r0, r2
   16ba4:	bne	16b40 <close@plt+0x5cf4>
   16ba8:	mov	r0, r4
   16bac:	add	sp, sp, #12
   16bb0:	pop	{r4, r5, lr}
   16bb4:	b	10dc8 <fclose@plt>
   16bb8:	push	{r4, lr}
   16bbc:	subs	r4, r0, #0
   16bc0:	sub	sp, sp, #8
   16bc4:	beq	16be0 <close@plt+0x5d94>
   16bc8:	bl	10d38 <__freading@plt>
   16bcc:	cmp	r0, #0
   16bd0:	beq	16be0 <close@plt+0x5d94>
   16bd4:	ldr	r3, [r4]
   16bd8:	tst	r3, #256	; 0x100
   16bdc:	bne	16bf0 <close@plt+0x5da4>
   16be0:	mov	r0, r4
   16be4:	add	sp, sp, #8
   16be8:	pop	{r4, lr}
   16bec:	b	10c3c <fflush@plt>
   16bf0:	mov	r3, #1
   16bf4:	str	r3, [sp]
   16bf8:	mov	r2, #0
   16bfc:	mov	r3, #0
   16c00:	mov	r0, r4
   16c04:	bl	16c70 <close@plt+0x5e24>
   16c08:	mov	r0, r4
   16c0c:	add	sp, sp, #8
   16c10:	pop	{r4, lr}
   16c14:	b	10c3c <fflush@plt>
   16c18:	push	{r4, r5, lr}
   16c1c:	sub	sp, sp, #12
   16c20:	mov	r5, r0
   16c24:	bl	10d80 <__errno_location@plt>
   16c28:	mov	r2, #0
   16c2c:	mov	r4, r0
   16c30:	ldr	r3, [r0]
   16c34:	str	r2, [r4]
   16c38:	mov	r0, r5
   16c3c:	str	r3, [sp]
   16c40:	str	r3, [sp, #4]
   16c44:	bl	10c48 <free@plt>
   16c48:	ldr	r3, [r4]
   16c4c:	add	r2, sp, #8
   16c50:	cmp	r3, #0
   16c54:	moveq	r3, #4
   16c58:	movne	r3, #0
   16c5c:	add	r3, r2, r3
   16c60:	ldr	r3, [r3, #-8]
   16c64:	str	r3, [r4]
   16c68:	add	sp, sp, #12
   16c6c:	pop	{r4, r5, pc}
   16c70:	push	{r4, r5, r6, r7, r8, lr}
   16c74:	sub	sp, sp, #8
   16c78:	ldmib	r0, {ip, lr}
   16c7c:	mov	r4, r0
   16c80:	ldr	r5, [sp, #32]
   16c84:	cmp	lr, ip
   16c88:	beq	16ca0 <close@plt+0x5e54>
   16c8c:	str	r5, [sp, #32]
   16c90:	mov	r0, r4
   16c94:	add	sp, sp, #8
   16c98:	pop	{r4, r5, r6, r7, r8, lr}
   16c9c:	b	10dd4 <fseeko64@plt>
   16ca0:	ldr	lr, [r0, #20]
   16ca4:	ldr	ip, [r0, #16]
   16ca8:	cmp	lr, ip
   16cac:	bne	16c8c <close@plt+0x5e40>
   16cb0:	ldr	r8, [r0, #36]	; 0x24
   16cb4:	cmp	r8, #0
   16cb8:	bne	16c8c <close@plt+0x5e40>
   16cbc:	mov	r6, r2
   16cc0:	mov	r7, r3
   16cc4:	bl	10db0 <fileno@plt>
   16cc8:	mov	r2, r6
   16ccc:	mov	r3, r7
   16cd0:	str	r5, [sp]
   16cd4:	bl	10cd8 <lseek64@plt>
   16cd8:	mvn	r3, #0
   16cdc:	mvn	r2, #0
   16ce0:	cmp	r1, r3
   16ce4:	cmpeq	r0, r2
   16ce8:	beq	16d08 <close@plt+0x5ebc>
   16cec:	ldr	r3, [r4]
   16cf0:	strd	r0, [r4, #80]	; 0x50
   16cf4:	mov	r0, r8
   16cf8:	bic	r3, r3, #16
   16cfc:	str	r3, [r4]
   16d00:	add	sp, sp, #8
   16d04:	pop	{r4, r5, r6, r7, r8, pc}
   16d08:	mvn	r0, #0
   16d0c:	b	16d00 <close@plt+0x5eb4>
   16d10:	push	{r4, lr}
   16d14:	mov	r0, #14
   16d18:	bl	10e04 <nl_langinfo@plt>
   16d1c:	cmp	r0, #0
   16d20:	beq	16d38 <close@plt+0x5eec>
   16d24:	ldrb	r2, [r0]
   16d28:	ldr	r3, [pc, #16]	; 16d40 <close@plt+0x5ef4>
   16d2c:	cmp	r2, #0
   16d30:	moveq	r0, r3
   16d34:	pop	{r4, pc}
   16d38:	ldr	r0, [pc]	; 16d40 <close@plt+0x5ef4>
   16d3c:	pop	{r4, pc}
   16d40:	strdeq	r7, [r1], -r4
   16d44:	push	{r4, r5, r6, r7, lr}
   16d48:	subs	r6, r0, #0
   16d4c:	sub	sp, sp, #12
   16d50:	addeq	r6, sp, #4
   16d54:	mov	r0, r6
   16d58:	mov	r5, r2
   16d5c:	mov	r7, r1
   16d60:	bl	10cfc <mbrtowc@plt>
   16d64:	cmp	r5, #0
   16d68:	cmnne	r0, #3
   16d6c:	mov	r4, r0
   16d70:	bls	16d8c <close@plt+0x5f40>
   16d74:	mov	r0, #0
   16d78:	bl	16de4 <close@plt+0x5f98>
   16d7c:	cmp	r0, #0
   16d80:	moveq	r4, #1
   16d84:	ldrbeq	r3, [r7]
   16d88:	streq	r3, [r6]
   16d8c:	mov	r0, r4
   16d90:	add	sp, sp, #12
   16d94:	pop	{r4, r5, r6, r7, pc}
   16d98:	push	{r4, r5, r6, lr}
   16d9c:	subs	r4, r2, #0
   16da0:	mov	r6, r0
   16da4:	mov	r5, r1
   16da8:	beq	16dd4 <close@plt+0x5f88>
   16dac:	mov	r1, r4
   16db0:	mvn	r0, #0
   16db4:	bl	16ed8 <close@plt+0x608c>
   16db8:	cmp	r0, r5
   16dbc:	bcs	16dd4 <close@plt+0x5f88>
   16dc0:	bl	10d80 <__errno_location@plt>
   16dc4:	mov	r3, #12
   16dc8:	str	r3, [r0]
   16dcc:	mov	r0, #0
   16dd0:	pop	{r4, r5, r6, pc}
   16dd4:	mul	r1, r5, r4
   16dd8:	mov	r0, r6
   16ddc:	pop	{r4, r5, r6, lr}
   16de0:	b	16a40 <close@plt+0x5bf4>
   16de4:	push	{lr}		; (str lr, [sp, #-4]!)
   16de8:	sub	sp, sp, #268	; 0x10c
   16dec:	add	r1, sp, #4
   16df0:	ldr	r2, [pc, #60]	; 16e34 <close@plt+0x5fe8>
   16df4:	bl	16e40 <close@plt+0x5ff4>
   16df8:	cmp	r0, #0
   16dfc:	movne	r0, #0
   16e00:	bne	16e2c <close@plt+0x5fe0>
   16e04:	ldr	r1, [pc, #44]	; 16e38 <close@plt+0x5fec>
   16e08:	add	r0, sp, #4
   16e0c:	bl	10c30 <strcmp@plt>
   16e10:	cmp	r0, #0
   16e14:	beq	16e2c <close@plt+0x5fe0>
   16e18:	add	r0, sp, #4
   16e1c:	ldr	r1, [pc, #24]	; 16e3c <close@plt+0x5ff0>
   16e20:	bl	10c30 <strcmp@plt>
   16e24:	adds	r0, r0, #0
   16e28:	movne	r0, #1
   16e2c:	add	sp, sp, #268	; 0x10c
   16e30:	pop	{pc}		; (ldr pc, [sp], #4)
   16e34:	andeq	r0, r0, r1, lsl #2
   16e38:	strdeq	r7, [r1], -ip
   16e3c:	andeq	r7, r1, r0, lsl #26
   16e40:	push	{r4, r5, r6, lr}
   16e44:	mov	r5, r1
   16e48:	mov	r1, #0
   16e4c:	mov	r4, r2
   16e50:	bl	10dec <setlocale@plt>
   16e54:	subs	r6, r0, #0
   16e58:	beq	16eb4 <close@plt+0x6068>
   16e5c:	bl	10d74 <strlen@plt>
   16e60:	cmp	r4, r0
   16e64:	bhi	16e9c <close@plt+0x6050>
   16e68:	cmp	r4, #0
   16e6c:	bne	16e78 <close@plt+0x602c>
   16e70:	mov	r0, #34	; 0x22
   16e74:	pop	{r4, r5, r6, pc}
   16e78:	sub	r4, r4, #1
   16e7c:	mov	r1, r6
   16e80:	mov	r2, r4
   16e84:	mov	r0, r5
   16e88:	bl	10c60 <memcpy@plt>
   16e8c:	mov	r3, #0
   16e90:	strb	r3, [r5, r4]
   16e94:	mov	r0, #34	; 0x22
   16e98:	pop	{r4, r5, r6, pc}
   16e9c:	add	r2, r0, #1
   16ea0:	mov	r1, r6
   16ea4:	mov	r0, r5
   16ea8:	bl	10c60 <memcpy@plt>
   16eac:	mov	r0, #0
   16eb0:	pop	{r4, r5, r6, pc}
   16eb4:	cmp	r4, #0
   16eb8:	beq	16ec8 <close@plt+0x607c>
   16ebc:	strb	r6, [r5]
   16ec0:	mov	r0, #22
   16ec4:	pop	{r4, r5, r6, pc}
   16ec8:	mov	r0, #22
   16ecc:	pop	{r4, r5, r6, pc}
   16ed0:	mov	r1, #0
   16ed4:	b	10dec <setlocale@plt>
   16ed8:	subs	r2, r1, #1
   16edc:	bxeq	lr
   16ee0:	bcc	170b8 <close@plt+0x626c>
   16ee4:	cmp	r0, r1
   16ee8:	bls	1709c <close@plt+0x6250>
   16eec:	tst	r1, r2
   16ef0:	beq	170a8 <close@plt+0x625c>
   16ef4:	clz	r3, r0
   16ef8:	clz	r2, r1
   16efc:	sub	r3, r2, r3
   16f00:	rsbs	r3, r3, #31
   16f04:	addne	r3, r3, r3, lsl #1
   16f08:	mov	r2, #0
   16f0c:	addne	pc, pc, r3, lsl #2
   16f10:	nop			; (mov r0, r0)
   16f14:	cmp	r0, r1, lsl #31
   16f18:	adc	r2, r2, r2
   16f1c:	subcs	r0, r0, r1, lsl #31
   16f20:	cmp	r0, r1, lsl #30
   16f24:	adc	r2, r2, r2
   16f28:	subcs	r0, r0, r1, lsl #30
   16f2c:	cmp	r0, r1, lsl #29
   16f30:	adc	r2, r2, r2
   16f34:	subcs	r0, r0, r1, lsl #29
   16f38:	cmp	r0, r1, lsl #28
   16f3c:	adc	r2, r2, r2
   16f40:	subcs	r0, r0, r1, lsl #28
   16f44:	cmp	r0, r1, lsl #27
   16f48:	adc	r2, r2, r2
   16f4c:	subcs	r0, r0, r1, lsl #27
   16f50:	cmp	r0, r1, lsl #26
   16f54:	adc	r2, r2, r2
   16f58:	subcs	r0, r0, r1, lsl #26
   16f5c:	cmp	r0, r1, lsl #25
   16f60:	adc	r2, r2, r2
   16f64:	subcs	r0, r0, r1, lsl #25
   16f68:	cmp	r0, r1, lsl #24
   16f6c:	adc	r2, r2, r2
   16f70:	subcs	r0, r0, r1, lsl #24
   16f74:	cmp	r0, r1, lsl #23
   16f78:	adc	r2, r2, r2
   16f7c:	subcs	r0, r0, r1, lsl #23
   16f80:	cmp	r0, r1, lsl #22
   16f84:	adc	r2, r2, r2
   16f88:	subcs	r0, r0, r1, lsl #22
   16f8c:	cmp	r0, r1, lsl #21
   16f90:	adc	r2, r2, r2
   16f94:	subcs	r0, r0, r1, lsl #21
   16f98:	cmp	r0, r1, lsl #20
   16f9c:	adc	r2, r2, r2
   16fa0:	subcs	r0, r0, r1, lsl #20
   16fa4:	cmp	r0, r1, lsl #19
   16fa8:	adc	r2, r2, r2
   16fac:	subcs	r0, r0, r1, lsl #19
   16fb0:	cmp	r0, r1, lsl #18
   16fb4:	adc	r2, r2, r2
   16fb8:	subcs	r0, r0, r1, lsl #18
   16fbc:	cmp	r0, r1, lsl #17
   16fc0:	adc	r2, r2, r2
   16fc4:	subcs	r0, r0, r1, lsl #17
   16fc8:	cmp	r0, r1, lsl #16
   16fcc:	adc	r2, r2, r2
   16fd0:	subcs	r0, r0, r1, lsl #16
   16fd4:	cmp	r0, r1, lsl #15
   16fd8:	adc	r2, r2, r2
   16fdc:	subcs	r0, r0, r1, lsl #15
   16fe0:	cmp	r0, r1, lsl #14
   16fe4:	adc	r2, r2, r2
   16fe8:	subcs	r0, r0, r1, lsl #14
   16fec:	cmp	r0, r1, lsl #13
   16ff0:	adc	r2, r2, r2
   16ff4:	subcs	r0, r0, r1, lsl #13
   16ff8:	cmp	r0, r1, lsl #12
   16ffc:	adc	r2, r2, r2
   17000:	subcs	r0, r0, r1, lsl #12
   17004:	cmp	r0, r1, lsl #11
   17008:	adc	r2, r2, r2
   1700c:	subcs	r0, r0, r1, lsl #11
   17010:	cmp	r0, r1, lsl #10
   17014:	adc	r2, r2, r2
   17018:	subcs	r0, r0, r1, lsl #10
   1701c:	cmp	r0, r1, lsl #9
   17020:	adc	r2, r2, r2
   17024:	subcs	r0, r0, r1, lsl #9
   17028:	cmp	r0, r1, lsl #8
   1702c:	adc	r2, r2, r2
   17030:	subcs	r0, r0, r1, lsl #8
   17034:	cmp	r0, r1, lsl #7
   17038:	adc	r2, r2, r2
   1703c:	subcs	r0, r0, r1, lsl #7
   17040:	cmp	r0, r1, lsl #6
   17044:	adc	r2, r2, r2
   17048:	subcs	r0, r0, r1, lsl #6
   1704c:	cmp	r0, r1, lsl #5
   17050:	adc	r2, r2, r2
   17054:	subcs	r0, r0, r1, lsl #5
   17058:	cmp	r0, r1, lsl #4
   1705c:	adc	r2, r2, r2
   17060:	subcs	r0, r0, r1, lsl #4
   17064:	cmp	r0, r1, lsl #3
   17068:	adc	r2, r2, r2
   1706c:	subcs	r0, r0, r1, lsl #3
   17070:	cmp	r0, r1, lsl #2
   17074:	adc	r2, r2, r2
   17078:	subcs	r0, r0, r1, lsl #2
   1707c:	cmp	r0, r1, lsl #1
   17080:	adc	r2, r2, r2
   17084:	subcs	r0, r0, r1, lsl #1
   17088:	cmp	r0, r1
   1708c:	adc	r2, r2, r2
   17090:	subcs	r0, r0, r1
   17094:	mov	r0, r2
   17098:	bx	lr
   1709c:	moveq	r0, #1
   170a0:	movne	r0, #0
   170a4:	bx	lr
   170a8:	clz	r2, r1
   170ac:	rsb	r2, r2, #31
   170b0:	lsr	r0, r0, r2
   170b4:	bx	lr
   170b8:	cmp	r0, #0
   170bc:	mvnne	r0, #0
   170c0:	b	17324 <close@plt+0x64d8>
   170c4:	cmp	r1, #0
   170c8:	beq	170b8 <close@plt+0x626c>
   170cc:	push	{r0, r1, lr}
   170d0:	bl	16ed8 <close@plt+0x608c>
   170d4:	pop	{r1, r2, lr}
   170d8:	mul	r3, r2, r0
   170dc:	sub	r1, r1, r3
   170e0:	bx	lr
   170e4:	cmp	r1, #0
   170e8:	beq	172f4 <close@plt+0x64a8>
   170ec:	eor	ip, r0, r1
   170f0:	rsbmi	r1, r1, #0
   170f4:	subs	r2, r1, #1
   170f8:	beq	172c0 <close@plt+0x6474>
   170fc:	movs	r3, r0
   17100:	rsbmi	r3, r0, #0
   17104:	cmp	r3, r1
   17108:	bls	172cc <close@plt+0x6480>
   1710c:	tst	r1, r2
   17110:	beq	172dc <close@plt+0x6490>
   17114:	clz	r2, r3
   17118:	clz	r0, r1
   1711c:	sub	r2, r0, r2
   17120:	rsbs	r2, r2, #31
   17124:	addne	r2, r2, r2, lsl #1
   17128:	mov	r0, #0
   1712c:	addne	pc, pc, r2, lsl #2
   17130:	nop			; (mov r0, r0)
   17134:	cmp	r3, r1, lsl #31
   17138:	adc	r0, r0, r0
   1713c:	subcs	r3, r3, r1, lsl #31
   17140:	cmp	r3, r1, lsl #30
   17144:	adc	r0, r0, r0
   17148:	subcs	r3, r3, r1, lsl #30
   1714c:	cmp	r3, r1, lsl #29
   17150:	adc	r0, r0, r0
   17154:	subcs	r3, r3, r1, lsl #29
   17158:	cmp	r3, r1, lsl #28
   1715c:	adc	r0, r0, r0
   17160:	subcs	r3, r3, r1, lsl #28
   17164:	cmp	r3, r1, lsl #27
   17168:	adc	r0, r0, r0
   1716c:	subcs	r3, r3, r1, lsl #27
   17170:	cmp	r3, r1, lsl #26
   17174:	adc	r0, r0, r0
   17178:	subcs	r3, r3, r1, lsl #26
   1717c:	cmp	r3, r1, lsl #25
   17180:	adc	r0, r0, r0
   17184:	subcs	r3, r3, r1, lsl #25
   17188:	cmp	r3, r1, lsl #24
   1718c:	adc	r0, r0, r0
   17190:	subcs	r3, r3, r1, lsl #24
   17194:	cmp	r3, r1, lsl #23
   17198:	adc	r0, r0, r0
   1719c:	subcs	r3, r3, r1, lsl #23
   171a0:	cmp	r3, r1, lsl #22
   171a4:	adc	r0, r0, r0
   171a8:	subcs	r3, r3, r1, lsl #22
   171ac:	cmp	r3, r1, lsl #21
   171b0:	adc	r0, r0, r0
   171b4:	subcs	r3, r3, r1, lsl #21
   171b8:	cmp	r3, r1, lsl #20
   171bc:	adc	r0, r0, r0
   171c0:	subcs	r3, r3, r1, lsl #20
   171c4:	cmp	r3, r1, lsl #19
   171c8:	adc	r0, r0, r0
   171cc:	subcs	r3, r3, r1, lsl #19
   171d0:	cmp	r3, r1, lsl #18
   171d4:	adc	r0, r0, r0
   171d8:	subcs	r3, r3, r1, lsl #18
   171dc:	cmp	r3, r1, lsl #17
   171e0:	adc	r0, r0, r0
   171e4:	subcs	r3, r3, r1, lsl #17
   171e8:	cmp	r3, r1, lsl #16
   171ec:	adc	r0, r0, r0
   171f0:	subcs	r3, r3, r1, lsl #16
   171f4:	cmp	r3, r1, lsl #15
   171f8:	adc	r0, r0, r0
   171fc:	subcs	r3, r3, r1, lsl #15
   17200:	cmp	r3, r1, lsl #14
   17204:	adc	r0, r0, r0
   17208:	subcs	r3, r3, r1, lsl #14
   1720c:	cmp	r3, r1, lsl #13
   17210:	adc	r0, r0, r0
   17214:	subcs	r3, r3, r1, lsl #13
   17218:	cmp	r3, r1, lsl #12
   1721c:	adc	r0, r0, r0
   17220:	subcs	r3, r3, r1, lsl #12
   17224:	cmp	r3, r1, lsl #11
   17228:	adc	r0, r0, r0
   1722c:	subcs	r3, r3, r1, lsl #11
   17230:	cmp	r3, r1, lsl #10
   17234:	adc	r0, r0, r0
   17238:	subcs	r3, r3, r1, lsl #10
   1723c:	cmp	r3, r1, lsl #9
   17240:	adc	r0, r0, r0
   17244:	subcs	r3, r3, r1, lsl #9
   17248:	cmp	r3, r1, lsl #8
   1724c:	adc	r0, r0, r0
   17250:	subcs	r3, r3, r1, lsl #8
   17254:	cmp	r3, r1, lsl #7
   17258:	adc	r0, r0, r0
   1725c:	subcs	r3, r3, r1, lsl #7
   17260:	cmp	r3, r1, lsl #6
   17264:	adc	r0, r0, r0
   17268:	subcs	r3, r3, r1, lsl #6
   1726c:	cmp	r3, r1, lsl #5
   17270:	adc	r0, r0, r0
   17274:	subcs	r3, r3, r1, lsl #5
   17278:	cmp	r3, r1, lsl #4
   1727c:	adc	r0, r0, r0
   17280:	subcs	r3, r3, r1, lsl #4
   17284:	cmp	r3, r1, lsl #3
   17288:	adc	r0, r0, r0
   1728c:	subcs	r3, r3, r1, lsl #3
   17290:	cmp	r3, r1, lsl #2
   17294:	adc	r0, r0, r0
   17298:	subcs	r3, r3, r1, lsl #2
   1729c:	cmp	r3, r1, lsl #1
   172a0:	adc	r0, r0, r0
   172a4:	subcs	r3, r3, r1, lsl #1
   172a8:	cmp	r3, r1
   172ac:	adc	r0, r0, r0
   172b0:	subcs	r3, r3, r1
   172b4:	cmp	ip, #0
   172b8:	rsbmi	r0, r0, #0
   172bc:	bx	lr
   172c0:	teq	ip, r0
   172c4:	rsbmi	r0, r0, #0
   172c8:	bx	lr
   172cc:	movcc	r0, #0
   172d0:	asreq	r0, ip, #31
   172d4:	orreq	r0, r0, #1
   172d8:	bx	lr
   172dc:	clz	r2, r1
   172e0:	rsb	r2, r2, #31
   172e4:	cmp	ip, #0
   172e8:	lsr	r0, r3, r2
   172ec:	rsbmi	r0, r0, #0
   172f0:	bx	lr
   172f4:	cmp	r0, #0
   172f8:	mvngt	r0, #-2147483648	; 0x80000000
   172fc:	movlt	r0, #-2147483648	; 0x80000000
   17300:	b	17324 <close@plt+0x64d8>
   17304:	cmp	r1, #0
   17308:	beq	172f4 <close@plt+0x64a8>
   1730c:	push	{r0, r1, lr}
   17310:	bl	170ec <close@plt+0x62a0>
   17314:	pop	{r1, r2, lr}
   17318:	mul	r3, r2, r0
   1731c:	sub	r1, r1, r3
   17320:	bx	lr
   17324:	push	{r1, lr}
   17328:	mov	r0, #8
   1732c:	bl	10c18 <raise@plt>
   17330:	pop	{r1, pc}
   17334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17338:	mov	r7, r0
   1733c:	ldr	r6, [pc, #72]	; 1738c <close@plt+0x6540>
   17340:	ldr	r5, [pc, #72]	; 17390 <close@plt+0x6544>
   17344:	add	r6, pc, r6
   17348:	add	r5, pc, r5
   1734c:	sub	r6, r6, r5
   17350:	mov	r8, r1
   17354:	mov	r9, r2
   17358:	bl	10be0 <calloc@plt-0x20>
   1735c:	asrs	r6, r6, #2
   17360:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17364:	mov	r4, #0
   17368:	add	r4, r4, #1
   1736c:	ldr	r3, [r5], #4
   17370:	mov	r2, r9
   17374:	mov	r1, r8
   17378:	mov	r0, r7
   1737c:	blx	r3
   17380:	cmp	r6, r4
   17384:	bne	17368 <close@plt+0x651c>
   17388:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1738c:	andeq	r0, r1, r4, asr #23
   17390:			; <UNDEFINED> instruction: 0x00010bbc
   17394:	bx	lr
   17398:	ldr	r3, [pc, #12]	; 173ac <close@plt+0x6560>
   1739c:	mov	r1, #0
   173a0:	add	r3, pc, r3
   173a4:	ldr	r2, [r3]
   173a8:	b	10d8c <__cxa_atexit@plt>
   173ac:	andeq	r0, r1, r4, lsr sp

Disassembly of section .fini:

000173b0 <.fini>:
   173b0:	push	{r3, lr}
   173b4:	pop	{r3, pc}
