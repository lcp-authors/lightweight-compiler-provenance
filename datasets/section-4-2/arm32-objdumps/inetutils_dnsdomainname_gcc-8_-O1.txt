
../repos/inetutils/src/dnsdomainname:     file format elf32-littlearm


Disassembly of section .init:

00010cf8 <.init>:
   10cf8:	push	{r3, lr}
   10cfc:	bl	10f94 <__assert_fail@plt+0x48>
   10d00:	pop	{r3, pc}

Disassembly of section .plt:

00010d04 <calloc@plt-0x14>:
   10d04:	push	{lr}		; (str lr, [sp, #-4]!)
   10d08:	ldr	lr, [pc, #4]	; 10d14 <calloc@plt-0x4>
   10d0c:	add	lr, pc, lr
   10d10:	ldr	pc, [lr, #8]!
   10d14:	andeq	r8, r1, ip, ror #5

00010d18 <calloc@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #24, 20	; 0x18000
   10d20:	ldr	pc, [ip, #748]!	; 0x2ec

00010d24 <fputs_unlocked@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #24, 20	; 0x18000
   10d2c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d30 <strcmp@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #24, 20	; 0x18000
   10d38:	ldr	pc, [ip, #732]!	; 0x2dc

00010d3c <strtol@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #724]!	; 0x2d4

00010d48 <printf@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #716]!	; 0x2cc

00010d54 <memmove@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #708]!	; 0x2c4

00010d60 <strchrnul@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #700]!	; 0x2bc

00010d6c <free@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #692]!	; 0x2b4

00010d78 <gai_strerror@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #684]!	; 0x2ac

00010d84 <strndup@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d90 <memcpy@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #668]!	; 0x29c

00010d9c <fwrite_unlocked@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #660]!	; 0x294

00010da8 <sleep@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #652]!	; 0x28c

00010db4 <realloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #644]!	; 0x284

00010dc0 <strcasecmp@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #636]!	; 0x27c

00010dcc <funlockfile@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #628]!	; 0x274

00010dd8 <fwrite@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #620]!	; 0x26c

00010de4 <error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #612]!	; 0x264

00010df0 <gethostname@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #604]!	; 0x25c

00010dfc <getenv@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #596]!	; 0x254

00010e08 <puts@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #588]!	; 0x24c

00010e14 <malloc@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #580]!	; 0x244

00010e20 <__libc_start_main@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #572]!	; 0x23c

00010e2c <strerror@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #564]!	; 0x234

00010e38 <__ctype_tolower_loc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #556]!	; 0x22c

00010e44 <__gmon_start__@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #548]!	; 0x224

00010e50 <mempcpy@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #540]!	; 0x21c

00010e5c <__ctype_b_loc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #532]!	; 0x214

00010e68 <exit@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #524]!	; 0x20c

00010e74 <strlen@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #516]!	; 0x204

00010e80 <strchr@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #508]!	; 0x1fc

00010e8c <fprintf@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #500]!	; 0x1f4

00010e98 <__errno_location@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #24, 20	; 0x18000
   10ea0:	ldr	pc, [ip, #492]!	; 0x1ec

00010ea4 <strerror_r@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #24, 20	; 0x18000
   10eac:	ldr	pc, [ip, #484]!	; 0x1e4

00010eb0 <memset@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #24, 20	; 0x18000
   10eb8:	ldr	pc, [ip, #476]!	; 0x1dc

00010ebc <memchr@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #24, 20	; 0x18000
   10ec4:	ldr	pc, [ip, #468]!	; 0x1d4

00010ec8 <__overflow@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #24, 20	; 0x18000
   10ed0:	ldr	pc, [ip, #460]!	; 0x1cc

00010ed4 <strrchr@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #24, 20	; 0x18000
   10edc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ee0 <vfprintf@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #24, 20	; 0x18000
   10ee8:	ldr	pc, [ip, #444]!	; 0x1bc

00010eec <fputc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #24, 20	; 0x18000
   10ef4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ef8 <flockfile@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #24, 20	; 0x18000
   10f00:	ldr	pc, [ip, #428]!	; 0x1ac

00010f04 <vsnprintf@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #24, 20	; 0x18000
   10f0c:	ldr	pc, [ip, #420]!	; 0x1a4

00010f10 <qsort@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #24, 20	; 0x18000
   10f18:	ldr	pc, [ip, #412]!	; 0x19c

00010f1c <freeaddrinfo@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #24, 20	; 0x18000
   10f24:	ldr	pc, [ip, #404]!	; 0x194

00010f28 <getaddrinfo@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #24, 20	; 0x18000
   10f30:	ldr	pc, [ip, #396]!	; 0x18c

00010f34 <strncmp@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #24, 20	; 0x18000
   10f3c:	ldr	pc, [ip, #388]!	; 0x184

00010f40 <abort@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #24, 20	; 0x18000
   10f48:	ldr	pc, [ip, #380]!	; 0x17c

00010f4c <__assert_fail@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #24, 20	; 0x18000
   10f54:	ldr	pc, [ip, #372]!	; 0x174

Disassembly of section .text:

00010f58 <argp_parse@@Base-0x87c>:
   10f58:	mov	fp, #0
   10f5c:	mov	lr, #0
   10f60:	pop	{r1}		; (ldr r1, [sp], #4)
   10f64:	mov	r2, sp
   10f68:	push	{r2}		; (str r2, [sp, #-4]!)
   10f6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f70:	ldr	ip, [pc, #16]	; 10f88 <__assert_fail@plt+0x3c>
   10f74:	push	{ip}		; (str ip, [sp, #-4]!)
   10f78:	ldr	r0, [pc, #12]	; 10f8c <__assert_fail@plt+0x40>
   10f7c:	ldr	r3, [pc, #12]	; 10f90 <__assert_fail@plt+0x44>
   10f80:	bl	10e20 <__libc_start_main@plt>
   10f84:	bl	10f40 <abort@plt>
   10f88:	strdeq	r7, [r1], -r4
   10f8c:	andeq	r1, r1, ip, lsl r1
   10f90:	muleq	r1, r4, sl
   10f94:	ldr	r3, [pc, #20]	; 10fb0 <__assert_fail@plt+0x64>
   10f98:	ldr	r2, [pc, #20]	; 10fb4 <__assert_fail@plt+0x68>
   10f9c:	add	r3, pc, r3
   10fa0:	ldr	r2, [r3, r2]
   10fa4:	cmp	r2, #0
   10fa8:	bxeq	lr
   10fac:	b	10e44 <__gmon_start__@plt>
   10fb0:	andeq	r8, r1, ip, asr r0
   10fb4:	andeq	r0, r0, ip, asr #1
   10fb8:	ldr	r0, [pc, #24]	; 10fd8 <__assert_fail@plt+0x8c>
   10fbc:	ldr	r3, [pc, #24]	; 10fdc <__assert_fail@plt+0x90>
   10fc0:	cmp	r3, r0
   10fc4:	bxeq	lr
   10fc8:	ldr	r3, [pc, #16]	; 10fe0 <__assert_fail@plt+0x94>
   10fcc:	cmp	r3, #0
   10fd0:	bxeq	lr
   10fd4:	bx	r3
   10fd8:	andeq	r9, r2, r8, lsr r1
   10fdc:	andeq	r9, r2, r8, lsr r1
   10fe0:	andeq	r0, r0, r0
   10fe4:	ldr	r0, [pc, #36]	; 11010 <__assert_fail@plt+0xc4>
   10fe8:	ldr	r1, [pc, #36]	; 11014 <__assert_fail@plt+0xc8>
   10fec:	sub	r1, r1, r0
   10ff0:	asr	r1, r1, #2
   10ff4:	add	r1, r1, r1, lsr #31
   10ff8:	asrs	r1, r1, #1
   10ffc:	bxeq	lr
   11000:	ldr	r3, [pc, #16]	; 11018 <__assert_fail@plt+0xcc>
   11004:	cmp	r3, #0
   11008:	bxeq	lr
   1100c:	bx	r3
   11010:	andeq	r9, r2, r8, lsr r1
   11014:	andeq	r9, r2, r8, lsr r1
   11018:	andeq	r0, r0, r0
   1101c:	push	{r4, lr}
   11020:	ldr	r4, [pc, #24]	; 11040 <__assert_fail@plt+0xf4>
   11024:	ldrb	r3, [r4]
   11028:	cmp	r3, #0
   1102c:	popne	{r4, pc}
   11030:	bl	10fb8 <__assert_fail@plt+0x6c>
   11034:	mov	r3, #1
   11038:	strb	r3, [r4]
   1103c:	pop	{r4, pc}
   11040:	andeq	r9, r2, r8, asr #2
   11044:	b	10fe4 <__assert_fail@plt+0x98>
   11048:	str	r4, [sp, #-8]!
   1104c:	str	lr, [sp, #4]
   11050:	sub	sp, sp, #40	; 0x28
   11054:	bl	12ae4 <argp_parse@@Base+0x1310>
   11058:	subs	r4, r0, #0
   1105c:	beq	110e0 <__assert_fail@plt+0x194>
   11060:	mov	r1, #0
   11064:	str	r1, [sp, #12]
   11068:	str	r1, [sp, #16]
   1106c:	str	r1, [sp, #20]
   11070:	str	r1, [sp, #24]
   11074:	str	r1, [sp, #28]
   11078:	str	r1, [sp, #32]
   1107c:	str	r1, [sp, #36]	; 0x24
   11080:	mov	r3, #2
   11084:	str	r3, [sp, #8]
   11088:	add	r3, sp, #4
   1108c:	add	r2, sp, #8
   11090:	mov	r0, r4
   11094:	bl	10f28 <getaddrinfo@plt>
   11098:	cmp	r0, #0
   1109c:	bne	110fc <__assert_fail@plt+0x1b0>
   110a0:	mov	r1, #46	; 0x2e
   110a4:	ldr	r3, [sp, #4]
   110a8:	ldr	r0, [r3, #24]
   110ac:	bl	10e80 <strchr@plt>
   110b0:	cmp	r0, #0
   110b4:	beq	110c0 <__assert_fail@plt+0x174>
   110b8:	add	r0, r0, #1
   110bc:	bl	10e08 <puts@plt>
   110c0:	mov	r0, r4
   110c4:	bl	124ac <argp_parse@@Base+0xcd8>
   110c8:	ldr	r0, [sp, #4]
   110cc:	bl	10f1c <freeaddrinfo@plt>
   110d0:	add	sp, sp, #40	; 0x28
   110d4:	ldr	r4, [sp]
   110d8:	add	sp, sp, #4
   110dc:	pop	{pc}		; (ldr pc, [sp], #4)
   110e0:	bl	10e98 <__errno_location@plt>
   110e4:	movw	r2, #31740	; 0x7bfc
   110e8:	movt	r2, #1
   110ec:	ldr	r1, [r0]
   110f0:	mov	r0, #1
   110f4:	bl	10de4 <error@plt>
   110f8:	b	11060 <__assert_fail@plt+0x114>
   110fc:	bl	10d78 <gai_strerror@plt>
   11100:	mov	r3, r0
   11104:	movw	r2, #31768	; 0x7c18
   11108:	movt	r2, #1
   1110c:	mov	r1, #0
   11110:	mov	r0, #1
   11114:	bl	10de4 <error@plt>
   11118:	b	110a0 <__assert_fail@plt+0x154>
   1111c:	str	r7, [sp, #-8]!
   11120:	str	lr, [sp, #4]
   11124:	sub	sp, sp, #8
   11128:	mov	r7, r0
   1112c:	mov	r6, r1
   11130:	ldr	r0, [r1]
   11134:	bl	125c4 <argp_parse@@Base+0xdf0>
   11138:	movw	r3, #37252	; 0x9184
   1113c:	movt	r3, #2
   11140:	movw	r2, #31772	; 0x7c1c
   11144:	movt	r2, #1
   11148:	str	r2, [r3]
   1114c:	movw	r5, #37080	; 0x90d8
   11150:	movt	r5, #2
   11154:	mov	r1, r5
   11158:	movw	r0, #31796	; 0x7c34
   1115c:	movt	r0, #1
   11160:	bl	123c0 <argp_parse@@Base+0xbec>
   11164:	mov	r4, #0
   11168:	str	r4, [sp, #4]
   1116c:	str	r4, [sp]
   11170:	mov	r3, r4
   11174:	mov	r2, r6
   11178:	mov	r1, r7
   1117c:	add	r0, r5, #8
   11180:	bl	117d4 <argp_parse@@Base>
   11184:	bl	11048 <__assert_fail@plt+0xfc>
   11188:	mov	r0, r4
   1118c:	bl	10e68 <exit@plt>
   11190:	ldr	ip, [r0]
   11194:	cmp	ip, #0
   11198:	beq	11200 <__assert_fail@plt+0x2b4>
   1119c:	strd	r4, [sp, #-16]!
   111a0:	str	r6, [sp, #8]
   111a4:	str	lr, [sp, #12]
   111a8:	mov	ip, r2
   111ac:	mov	r5, r1
   111b0:	mov	r4, r0
   111b4:	ldr	r2, [r0, #32]
   111b8:	str	r2, [r1, #36]	; 0x24
   111bc:	ldr	r2, [r0, #24]
   111c0:	str	r2, [r1, #28]
   111c4:	ldr	r2, [r0, #28]
   111c8:	str	r2, [r1, #32]
   111cc:	ldr	r2, [r0, #12]
   111d0:	str	r2, [r1, #20]
   111d4:	ldr	r6, [r0]
   111d8:	mov	r2, r1
   111dc:	mov	r1, r3
   111e0:	mov	r0, ip
   111e4:	blx	r6
   111e8:	ldr	r3, [r5, #36]	; 0x24
   111ec:	str	r3, [r4, #32]
   111f0:	ldrd	r4, [sp]
   111f4:	ldr	r6, [sp, #8]
   111f8:	add	sp, sp, #12
   111fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11200:	mov	r0, #7
   11204:	bx	lr
   11208:	strd	r4, [sp, #-16]!
   1120c:	str	r6, [sp, #8]
   11210:	str	lr, [sp, #12]
   11214:	ldr	r5, [r0, #16]
   11218:	ldr	r3, [r0]
   1121c:	cmp	r3, #0
   11220:	beq	11238 <__assert_fail@plt+0x2ec>
   11224:	ldr	r2, [r1, #8]
   11228:	add	r2, r2, #1
   1122c:	str	r2, [r1, #8]
   11230:	mov	r2, #0
   11234:	b	11258 <__assert_fail@plt+0x30c>
   11238:	ldr	r3, [r0, #4]
   1123c:	cmp	r3, #0
   11240:	beq	112a8 <__assert_fail@plt+0x35c>
   11244:	ldr	r3, [r1, #8]
   11248:	add	r3, r3, #1
   1124c:	str	r3, [r1, #8]
   11250:	b	112a8 <__assert_fail@plt+0x35c>
   11254:	add	r2, r2, #1
   11258:	add	r3, r3, #24
   1125c:	ldr	r0, [r3, #-20]	; 0xffffffec
   11260:	cmp	r0, #0
   11264:	bne	11254 <__assert_fail@plt+0x308>
   11268:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1126c:	cmp	r0, #0
   11270:	bne	11254 <__assert_fail@plt+0x308>
   11274:	ldr	r0, [r3, #-8]
   11278:	cmp	r0, #0
   1127c:	bne	11254 <__assert_fail@plt+0x308>
   11280:	ldr	r0, [r3, #-4]
   11284:	cmp	r0, #0
   11288:	bne	11254 <__assert_fail@plt+0x308>
   1128c:	add	r0, r2, r2, lsl #1
   11290:	ldr	r3, [r1]
   11294:	add	r3, r3, r0
   11298:	str	r3, [r1]
   1129c:	ldr	r3, [r1, #4]
   112a0:	add	r2, r3, r2
   112a4:	str	r2, [r1, #4]
   112a8:	cmp	r5, #0
   112ac:	beq	112e0 <__assert_fail@plt+0x394>
   112b0:	ldr	r0, [r5]
   112b4:	cmp	r0, #0
   112b8:	beq	112e0 <__assert_fail@plt+0x394>
   112bc:	mov	r4, r1
   112c0:	mov	r1, r4
   112c4:	bl	11208 <__assert_fail@plt+0x2bc>
   112c8:	ldr	r3, [r4, #12]
   112cc:	add	r3, r3, #1
   112d0:	str	r3, [r4, #12]
   112d4:	ldr	r0, [r5, #16]!
   112d8:	cmp	r0, #0
   112dc:	bne	112c0 <__assert_fail@plt+0x374>
   112e0:	ldrd	r4, [sp]
   112e4:	ldr	r6, [sp, #8]
   112e8:	add	sp, sp, #12
   112ec:	pop	{pc}		; (ldr pc, [sp], #4)
   112f0:	cmp	r0, #86	; 0x56
   112f4:	beq	11300 <__assert_fail@plt+0x3b4>
   112f8:	mov	r0, #7
   112fc:	bx	lr
   11300:	str	r4, [sp, #-8]!
   11304:	str	lr, [sp, #4]
   11308:	mov	r4, r2
   1130c:	movw	r3, #37200	; 0x9150
   11310:	movt	r3, #2
   11314:	ldr	r3, [r3]
   11318:	cmp	r3, #0
   1131c:	beq	11348 <__assert_fail@plt+0x3fc>
   11320:	mov	r1, r2
   11324:	ldr	r0, [r2, #48]	; 0x30
   11328:	blx	r3
   1132c:	ldr	r3, [r4, #16]
   11330:	tst	r3, #32
   11334:	beq	1138c <__assert_fail@plt+0x440>
   11338:	mov	r0, #0
   1133c:	ldr	r4, [sp]
   11340:	add	sp, sp, #4
   11344:	pop	{pc}		; (ldr pc, [sp], #4)
   11348:	movw	r3, #37256	; 0x9188
   1134c:	movt	r3, #2
   11350:	ldr	r2, [r3]
   11354:	cmp	r2, #0
   11358:	beq	11370 <__assert_fail@plt+0x424>
   1135c:	movw	r1, #32520	; 0x7f08
   11360:	movt	r1, #1
   11364:	ldr	r0, [r4, #48]	; 0x30
   11368:	bl	10e8c <fprintf@plt>
   1136c:	b	1132c <__assert_fail@plt+0x3e0>
   11370:	movw	r2, #32108	; 0x7d6c
   11374:	movt	r2, #1
   11378:	movw	r1, #31768	; 0x7c18
   1137c:	movt	r1, #1
   11380:	mov	r0, r4
   11384:	bl	15f20 <argp_error@@Base>
   11388:	b	1132c <__assert_fail@plt+0x3e0>
   1138c:	mov	r0, #0
   11390:	bl	10e68 <exit@plt>
   11394:	strd	r4, [sp, #-16]!
   11398:	str	r6, [sp, #8]
   1139c:	str	lr, [sp, #12]
   113a0:	mov	r4, r2
   113a4:	cmn	r0, #3
   113a8:	beq	11460 <__assert_fail@plt+0x514>
   113ac:	mov	r5, r1
   113b0:	ble	113ec <__assert_fail@plt+0x4a0>
   113b4:	cmn	r0, #2
   113b8:	beq	11478 <__assert_fail@plt+0x52c>
   113bc:	cmp	r0, #63	; 0x3f
   113c0:	movne	r0, #7
   113c4:	bne	113dc <__assert_fail@plt+0x490>
   113c8:	movw	r2, #634	; 0x27a
   113cc:	ldr	r1, [r4, #48]	; 0x30
   113d0:	mov	r0, r4
   113d4:	bl	15e58 <argp_state_help@@Base>
   113d8:	mov	r0, #0
   113dc:	ldrd	r4, [sp]
   113e0:	ldr	r6, [sp, #8]
   113e4:	add	sp, sp, #12
   113e8:	pop	{pc}		; (ldr pc, [sp], #4)
   113ec:	cmn	r0, #4
   113f0:	movne	r0, #7
   113f4:	bne	113dc <__assert_fail@plt+0x490>
   113f8:	movw	r0, #32144	; 0x7d90
   113fc:	movt	r0, #1
   11400:	mov	r2, #10
   11404:	mov	r1, #0
   11408:	cmp	r5, r1
   1140c:	movne	r0, r5
   11410:	bl	10d3c <strtol@plt>
   11414:	movw	r3, #37196	; 0x914c
   11418:	movt	r3, #2
   1141c:	str	r0, [r3]
   11420:	ldr	r2, [r3]
   11424:	sub	r1, r2, #1
   11428:	str	r1, [r3]
   1142c:	cmp	r2, #0
   11430:	ble	114c0 <__assert_fail@plt+0x574>
   11434:	mov	r5, #1
   11438:	mov	r4, r3
   1143c:	mov	r0, r5
   11440:	bl	10da8 <sleep@plt>
   11444:	ldr	r3, [r4]
   11448:	sub	r2, r3, #1
   1144c:	str	r2, [r4]
   11450:	cmp	r3, #0
   11454:	bgt	1143c <__assert_fail@plt+0x4f0>
   11458:	mov	r0, #0
   1145c:	b	113dc <__assert_fail@plt+0x490>
   11460:	movw	r2, #513	; 0x201
   11464:	ldr	r1, [r4, #48]	; 0x30
   11468:	mov	r0, r4
   1146c:	bl	15e58 <argp_state_help@@Base>
   11470:	mov	r0, #0
   11474:	b	113dc <__assert_fail@plt+0x490>
   11478:	movw	r3, #37180	; 0x913c
   1147c:	movt	r3, #2
   11480:	str	r1, [r3]
   11484:	mov	r0, r1
   11488:	bl	123e8 <argp_parse@@Base+0xc14>
   1148c:	str	r0, [r4, #40]	; 0x28
   11490:	movw	r3, #37176	; 0x9138
   11494:	movt	r3, #2
   11498:	str	r0, [r3]
   1149c:	ldr	r3, [r4, #16]
   114a0:	and	r3, r3, #3
   114a4:	cmp	r3, #1
   114a8:	movne	r0, #0
   114ac:	bne	113dc <__assert_fail@plt+0x490>
   114b0:	ldr	r3, [r4, #8]
   114b4:	str	r5, [r3]
   114b8:	mov	r0, #0
   114bc:	b	113dc <__assert_fail@plt+0x490>
   114c0:	mov	r0, #0
   114c4:	b	113dc <__assert_fail@plt+0x490>
   114c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   114cc:	strd	r6, [sp, #8]
   114d0:	strd	r8, [sp, #16]
   114d4:	strd	sl, [sp, #24]
   114d8:	str	lr, [sp, #32]
   114dc:	sub	sp, sp, #36	; 0x24
   114e0:	str	r0, [sp, #16]
   114e4:	str	r1, [sp, #20]
   114e8:	str	r2, [sp, #24]
   114ec:	str	r3, [sp, #8]
   114f0:	ldr	r8, [sp, #72]	; 0x48
   114f4:	ldr	r6, [r0]
   114f8:	ldr	sl, [r0, #16]
   114fc:	cmp	r6, #0
   11500:	beq	1151c <__assert_fail@plt+0x5d0>
   11504:	mov	r4, r6
   11508:	movw	r3, #36409	; 0x8e39
   1150c:	movt	r3, #14563	; 0x38e3
   11510:	str	r3, [sp, #12]
   11514:	str	sl, [sp, #28]
   11518:	b	11560 <__assert_fail@plt+0x614>
   1151c:	ldr	r3, [r0, #4]
   11520:	cmp	r3, #0
   11524:	bne	116ec <__assert_fail@plt+0x7a0>
   11528:	ldr	r0, [sp, #8]
   1152c:	str	r6, [sp, #8]
   11530:	b	11770 <__assert_fail@plt+0x824>
   11534:	ldr	r0, [r7, #16]!
   11538:	cmp	r0, #0
   1153c:	beq	11640 <__assert_fail@plt+0x6f4>
   11540:	mov	r1, r9
   11544:	bl	10d30 <strcmp@plt>
   11548:	cmp	r0, #0
   1154c:	bne	11534 <__assert_fail@plt+0x5e8>
   11550:	sub	sl, r7, fp
   11554:	cmp	sl, #0
   11558:	blt	11640 <__assert_fail@plt+0x6f4>
   1155c:	add	r4, r4, #24
   11560:	ldr	r7, [r4, #4]
   11564:	cmp	r7, #0
   11568:	bne	11578 <__assert_fail@plt+0x62c>
   1156c:	ldr	r3, [r4]
   11570:	cmp	r3, #0
   11574:	beq	116d0 <__assert_fail@plt+0x784>
   11578:	ldr	r3, [r4, #12]
   1157c:	and	r2, r3, #4
   11580:	cmp	r2, #0
   11584:	moveq	r6, r4
   11588:	ldr	r5, [r6, #12]
   1158c:	ands	r5, r5, #8
   11590:	bne	1155c <__assert_fail@plt+0x610>
   11594:	tst	r3, #8
   11598:	bne	11618 <__assert_fail@plt+0x6cc>
   1159c:	sub	r3, r7, #1
   115a0:	cmp	r3, #254	; 0xfe
   115a4:	bhi	11618 <__assert_fail@plt+0x6cc>
   115a8:	bl	10e5c <__ctype_b_loc@plt>
   115ac:	ldr	r2, [r0]
   115b0:	lsl	r3, r7, #1
   115b4:	ldrh	r3, [r2, r3]
   115b8:	tst	r3, #16384	; 0x4000
   115bc:	beq	11618 <__assert_fail@plt+0x6cc>
   115c0:	ldr	r3, [r8, #4]
   115c4:	add	r2, r3, #1
   115c8:	str	r2, [r8, #4]
   115cc:	strb	r7, [r3]
   115d0:	ldr	r3, [r6, #8]
   115d4:	cmp	r3, #0
   115d8:	beq	1160c <__assert_fail@plt+0x6c0>
   115dc:	ldr	r3, [r8, #4]
   115e0:	add	r2, r3, #1
   115e4:	str	r2, [r8, #4]
   115e8:	mov	r1, #58	; 0x3a
   115ec:	strb	r1, [r3]
   115f0:	ldr	r3, [r6, #12]
   115f4:	tst	r3, #1
   115f8:	beq	1160c <__assert_fail@plt+0x6c0>
   115fc:	ldr	r3, [r8, #4]
   11600:	add	r2, r3, #1
   11604:	str	r2, [r8, #4]
   11608:	strb	r1, [r3]
   1160c:	ldr	r3, [r8, #4]
   11610:	mov	r2, #0
   11614:	strb	r2, [r3]
   11618:	ldr	r9, [r4]
   1161c:	cmp	r9, #0
   11620:	beq	1155c <__assert_fail@plt+0x610>
   11624:	ldr	r3, [r8]
   11628:	ldr	fp, [r3, #8]
   1162c:	ldr	r0, [fp]
   11630:	cmp	r0, #0
   11634:	beq	11640 <__assert_fail@plt+0x6f4>
   11638:	mov	r7, fp
   1163c:	b	11540 <__assert_fail@plt+0x5f4>
   11640:	ldr	r3, [r8, #8]
   11644:	str	r9, [r3]
   11648:	ldr	r3, [r6, #8]
   1164c:	cmp	r3, #0
   11650:	beq	11668 <__assert_fail@plt+0x71c>
   11654:	ldr	r3, [r6, #12]
   11658:	and	r3, r3, #1
   1165c:	cmp	r3, #0
   11660:	movne	r5, #2
   11664:	moveq	r5, #1
   11668:	ldr	r3, [r8, #8]
   1166c:	str	r5, [r3, #4]
   11670:	ldr	r3, [r8, #8]
   11674:	mov	r2, #0
   11678:	str	r2, [r3, #8]
   1167c:	ldr	r3, [r4, #4]
   11680:	cmp	r3, r2
   11684:	ldreq	r3, [r6, #4]
   11688:	bic	r2, r3, #-16777216	; 0xff000000
   1168c:	ldr	r1, [r8, #8]
   11690:	ldr	r3, [r8]
   11694:	ldr	r3, [r3, #48]	; 0x30
   11698:	ldr	r0, [sp, #8]
   1169c:	sub	r3, r0, r3
   116a0:	asr	r3, r3, #2
   116a4:	ldr	r0, [sp, #12]
   116a8:	mul	r3, r0, r3
   116ac:	add	r3, r3, #1
   116b0:	add	r3, r2, r3, lsl #24
   116b4:	str	r3, [r1, #12]
   116b8:	ldr	r3, [r8, #8]
   116bc:	add	r2, r3, #16
   116c0:	str	r2, [r8, #8]
   116c4:	mov	r2, #0
   116c8:	str	r2, [r3, #16]
   116cc:	b	1155c <__assert_fail@plt+0x610>
   116d0:	ldr	r3, [r4, #16]
   116d4:	cmp	r3, #0
   116d8:	bne	11578 <__assert_fail@plt+0x62c>
   116dc:	ldr	r3, [r4, #20]
   116e0:	cmp	r3, #0
   116e4:	bne	11578 <__assert_fail@plt+0x62c>
   116e8:	ldr	sl, [sp, #28]
   116ec:	ldr	r1, [sp, #16]
   116f0:	ldr	r3, [r1, #4]
   116f4:	ldr	r2, [sp, #8]
   116f8:	str	r3, [r2]
   116fc:	str	r1, [r2, #4]
   11700:	ldr	r3, [r8, #4]
   11704:	str	r3, [r2, #8]
   11708:	mov	r3, #0
   1170c:	str	r3, [r2, #12]
   11710:	ldr	r1, [sp, #20]
   11714:	str	r1, [r2, #16]
   11718:	ldr	r1, [sp, #24]
   1171c:	str	r1, [r2, #20]
   11720:	str	r3, [r2, #24]
   11724:	str	r3, [r2, #32]
   11728:	str	r3, [r2, #28]
   1172c:	cmp	sl, r3
   11730:	beq	11768 <__assert_fail@plt+0x81c>
   11734:	ldr	r3, [sl]
   11738:	cmp	r3, #0
   1173c:	beq	117cc <__assert_fail@plt+0x880>
   11740:	mov	r3, #0
   11744:	add	r3, r3, #1
   11748:	ldr	r2, [sl, r3, lsl #4]
   1174c:	cmp	r2, #0
   11750:	bne	11744 <__assert_fail@plt+0x7f8>
   11754:	ldr	r2, [r8, #12]
   11758:	ldr	r1, [sp, #8]
   1175c:	str	r2, [r1, #28]
   11760:	add	r3, r2, r3, lsl #2
   11764:	str	r3, [r8, #12]
   11768:	ldr	r3, [sp, #8]
   1176c:	add	r0, r3, #36	; 0x24
   11770:	cmp	sl, #0
   11774:	beq	117b0 <__assert_fail@plt+0x864>
   11778:	ldr	ip, [sl]
   1177c:	cmp	ip, #0
   11780:	beq	117b0 <__assert_fail@plt+0x864>
   11784:	mov	r2, #0
   11788:	add	r4, r2, #1
   1178c:	str	r8, [sp]
   11790:	mov	r3, r0
   11794:	ldr	r1, [sp, #8]
   11798:	mov	r0, ip
   1179c:	bl	114c8 <__assert_fail@plt+0x57c>
   117a0:	ldr	ip, [sl, r4, lsl #4]
   117a4:	mov	r2, r4
   117a8:	cmp	ip, #0
   117ac:	bne	11788 <__assert_fail@plt+0x83c>
   117b0:	add	sp, sp, #36	; 0x24
   117b4:	ldrd	r4, [sp]
   117b8:	ldrd	r6, [sp, #8]
   117bc:	ldrd	r8, [sp, #16]
   117c0:	ldrd	sl, [sp, #24]
   117c4:	add	sp, sp, #32
   117c8:	pop	{pc}		; (ldr pc, [sp], #4)
   117cc:	mov	r3, #0
   117d0:	b	11754 <__assert_fail@plt+0x808>

000117d4 <argp_parse@@Base>:
   117d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   117d8:	strd	r6, [sp, #8]
   117dc:	strd	r8, [sp, #16]
   117e0:	strd	sl, [sp, #24]
   117e4:	str	lr, [sp, #32]
   117e8:	add	fp, sp, #32
   117ec:	sub	sp, sp, #228	; 0xe4
   117f0:	mov	r8, r0
   117f4:	str	r1, [fp, #-240]	; 0xffffff10
   117f8:	str	r2, [fp, #-232]	; 0xffffff18
   117fc:	mov	r7, r3
   11800:	tst	r3, #1
   11804:	bne	11830 <argp_parse@@Base+0x5c>
   11808:	movw	r3, #37180	; 0x913c
   1180c:	movt	r3, #2
   11810:	ldr	r3, [r3]
   11814:	cmp	r3, #0
   11818:	beq	11888 <argp_parse@@Base+0xb4>
   1181c:	movw	r3, #37176	; 0x9138
   11820:	movt	r3, #2
   11824:	ldr	r3, [r3]
   11828:	cmp	r3, #0
   1182c:	beq	1189c <argp_parse@@Base+0xc8>
   11830:	tst	r7, #16
   11834:	beq	118b8 <argp_parse@@Base+0xe4>
   11838:	str	r7, [fp, #-244]	; 0xffffff0c
   1183c:	mov	r3, #0
   11840:	str	r3, [fp, #-188]	; 0xffffff44
   11844:	str	r3, [fp, #-184]	; 0xffffff48
   11848:	str	r3, [fp, #-180]	; 0xffffff4c
   1184c:	str	r3, [fp, #-176]	; 0xffffff50
   11850:	str	r3, [fp, #-172]	; 0xffffff54
   11854:	str	r3, [fp, #-168]	; 0xffffff58
   11858:	str	r3, [fp, #-164]	; 0xffffff5c
   1185c:	ands	r2, r7, #4
   11860:	str	r2, [fp, #-248]	; 0xffffff08
   11864:	moveq	r2, #1
   11868:	movne	r2, r3
   1186c:	str	r2, [fp, #-228]	; 0xffffff1c
   11870:	str	r3, [fp, #-224]	; 0xffffff20
   11874:	str	r3, [fp, #-220]	; 0xffffff24
   11878:	str	r3, [fp, #-216]	; 0xffffff28
   1187c:	cmp	r8, r3
   11880:	beq	11984 <argp_parse@@Base+0x1b0>
   11884:	b	11978 <argp_parse@@Base+0x1a4>
   11888:	ldr	r2, [r2]
   1188c:	movw	r3, #37180	; 0x913c
   11890:	movt	r3, #2
   11894:	str	r2, [r3]
   11898:	b	1181c <argp_parse@@Base+0x48>
   1189c:	ldr	r3, [fp, #-232]	; 0xffffff18
   118a0:	ldr	r0, [r3]
   118a4:	bl	123e8 <argp_parse@@Base+0xc14>
   118a8:	movw	r3, #37176	; 0x9138
   118ac:	movt	r3, #2
   118b0:	str	r0, [r3]
   118b4:	b	11830 <argp_parse@@Base+0x5c>
   118b8:	sub	sp, sp, #64	; 0x40
   118bc:	add	r5, sp, #8
   118c0:	sub	sp, sp, #32
   118c4:	add	r4, sp, #8
   118c8:	mov	r1, #0
   118cc:	str	r1, [r4]
   118d0:	str	r1, [r4, #4]
   118d4:	str	r1, [r4, #8]
   118d8:	str	r1, [r4, #12]
   118dc:	str	r1, [r4, #20]
   118e0:	str	r1, [r4, #24]
   118e4:	str	r5, [r4, #16]
   118e8:	mov	r2, #64	; 0x40
   118ec:	mov	r0, r5
   118f0:	bl	10eb0 <memset@plt>
   118f4:	cmp	r8, #0
   118f8:	mov	r0, r5
   118fc:	strne	r8, [r0], #16
   11900:	movw	r3, #31828	; 0x7c54
   11904:	movt	r3, #1
   11908:	str	r3, [r0]
   1190c:	movw	r3, #37256	; 0x9188
   11910:	movt	r3, #2
   11914:	ldr	r3, [r3]
   11918:	cmp	r3, #0
   1191c:	beq	11b44 <argp_parse@@Base+0x370>
   11920:	add	r2, r0, #32
   11924:	ldr	r3, [pc, #2548]	; 12320 <argp_parse@@Base+0xb4c>
   11928:	str	r3, [r0, #16]
   1192c:	mov	r3, #0
   11930:	str	r3, [r2]
   11934:	str	r7, [fp, #-244]	; 0xffffff0c
   11938:	str	r3, [fp, #-188]	; 0xffffff44
   1193c:	str	r3, [fp, #-184]	; 0xffffff48
   11940:	str	r3, [fp, #-180]	; 0xffffff4c
   11944:	str	r3, [fp, #-176]	; 0xffffff50
   11948:	str	r3, [fp, #-172]	; 0xffffff54
   1194c:	str	r3, [fp, #-168]	; 0xffffff58
   11950:	str	r3, [fp, #-164]	; 0xffffff5c
   11954:	ands	r2, r7, #4
   11958:	str	r2, [fp, #-248]	; 0xffffff08
   1195c:	moveq	r2, #1
   11960:	movne	r2, r3
   11964:	str	r2, [fp, #-228]	; 0xffffff1c
   11968:	str	r3, [fp, #-224]	; 0xffffff20
   1196c:	str	r3, [fp, #-220]	; 0xffffff24
   11970:	str	r3, [fp, #-216]	; 0xffffff28
   11974:	mov	r8, r4
   11978:	sub	r1, fp, #228	; 0xe4
   1197c:	mov	r0, r8
   11980:	bl	11208 <__assert_fail@plt+0x2bc>
   11984:	ldr	r4, [fp, #-220]	; 0xffffff24
   11988:	add	r4, r4, #1
   1198c:	add	r4, r4, r4, lsl #3
   11990:	lsl	r4, r4, #2
   11994:	ldr	r3, [fp, #-216]	; 0xffffff28
   11998:	lsl	r3, r3, #2
   1199c:	str	r3, [fp, #-236]	; 0xffffff14
   119a0:	add	r9, r3, r4
   119a4:	ldr	r5, [fp, #-224]	; 0xffffff20
   119a8:	add	r5, r5, #1
   119ac:	add	r5, r9, r5, lsl #4
   119b0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   119b4:	add	r0, r0, #1
   119b8:	add	r0, r0, r5
   119bc:	bl	12bf8 <argp_parse@@Base+0x1424>
   119c0:	mov	r6, r0
   119c4:	str	r0, [fp, #-40]	; 0xffffffd8
   119c8:	cmp	r0, #0
   119cc:	moveq	r4, #12
   119d0:	beq	12140 <argp_parse@@Base+0x96c>
   119d4:	str	r0, [fp, #-112]	; 0xffffff90
   119d8:	add	r4, r0, r4
   119dc:	str	r4, [fp, #-104]	; 0xffffff98
   119e0:	add	r9, r0, r9
   119e4:	str	r9, [fp, #-152]	; 0xffffff68
   119e8:	add	sl, r0, r5
   119ec:	str	sl, [fp, #-156]	; 0xffffff64
   119f0:	mov	r3, #1
   119f4:	str	r3, [fp, #-196]	; 0xffffff3c
   119f8:	str	r3, [fp, #-192]	; 0xffffff40
   119fc:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   11a00:	strd	r2, [fp, #-148]	; 0xffffff6c
   11a04:	ldrd	r2, [fp, #-188]	; 0xffffff44
   11a08:	strd	r2, [fp, #-140]	; 0xffffff74
   11a0c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   11a10:	strd	r2, [fp, #-132]	; 0xffffff7c
   11a14:	ldrd	r2, [fp, #-172]	; 0xffffff54
   11a18:	strd	r2, [fp, #-124]	; 0xffffff84
   11a1c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   11a20:	str	r3, [fp, #-116]	; 0xffffff8c
   11a24:	ldr	r2, [fp, #-236]	; 0xffffff14
   11a28:	mov	r1, #0
   11a2c:	mov	r0, r4
   11a30:	bl	10eb0 <memset@plt>
   11a34:	sub	r3, fp, #160	; 0xa0
   11a38:	str	r3, [fp, #-212]	; 0xffffff2c
   11a3c:	str	sl, [fp, #-208]	; 0xffffff30
   11a40:	str	r9, [fp, #-204]	; 0xffffff34
   11a44:	str	r4, [fp, #-200]	; 0xffffff38
   11a48:	ldr	r3, [fp, #-244]	; 0xffffff0c
   11a4c:	tst	r3, #8
   11a50:	beq	11b60 <argp_parse@@Base+0x38c>
   11a54:	add	sl, sl, #1
   11a58:	str	sl, [fp, #-208]	; 0xffffff30
   11a5c:	mov	r3, #45	; 0x2d
   11a60:	strb	r3, [r6, r5]
   11a64:	mov	r3, #0
   11a68:	ldr	r2, [fp, #-208]	; 0xffffff30
   11a6c:	strb	r3, [r2]
   11a70:	ldr	r2, [fp, #-204]	; 0xffffff34
   11a74:	str	r3, [r2]
   11a78:	str	r8, [fp, #-160]	; 0xffffff60
   11a7c:	cmp	r8, r3
   11a80:	beq	11b80 <argp_parse@@Base+0x3ac>
   11a84:	sub	r3, fp, #212	; 0xd4
   11a88:	str	r3, [sp]
   11a8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11a90:	mov	r2, #0
   11a94:	mov	r1, r2
   11a98:	mov	r0, r8
   11a9c:	bl	114c8 <__assert_fail@plt+0x57c>
   11aa0:	str	r0, [fp, #-108]	; 0xffffff94
   11aa4:	mov	r2, #0
   11aa8:	mov	r3, #0
   11aac:	strd	r2, [fp, #-76]	; 0xffffffb4
   11ab0:	strd	r2, [fp, #-68]	; 0xffffffbc
   11ab4:	strd	r2, [fp, #-60]	; 0xffffffc4
   11ab8:	ldr	r3, [fp, #-160]	; 0xffffff60
   11abc:	str	r3, [fp, #-96]	; 0xffffffa0
   11ac0:	ldr	r3, [fp, #-240]	; 0xffffff10
   11ac4:	str	r3, [fp, #-92]	; 0xffffffa4
   11ac8:	ldr	r3, [fp, #-232]	; 0xffffff18
   11acc:	str	r3, [fp, #-88]	; 0xffffffa8
   11ad0:	str	r7, [fp, #-80]	; 0xffffffb0
   11ad4:	movw	r3, #37184	; 0x9140
   11ad8:	movt	r3, #2
   11adc:	ldr	r3, [r3]
   11ae0:	str	r3, [fp, #-52]	; 0xffffffcc
   11ae4:	movw	r3, #37188	; 0x9144
   11ae8:	movt	r3, #2
   11aec:	ldr	r3, [r3]
   11af0:	str	r3, [fp, #-48]	; 0xffffffd0
   11af4:	mov	r3, #0
   11af8:	str	r3, [fp, #-84]	; 0xffffffac
   11afc:	sub	r3, fp, #160	; 0xa0
   11b00:	str	r3, [fp, #-44]	; 0xffffffd4
   11b04:	mov	r3, #1
   11b08:	str	r3, [fp, #-100]	; 0xffffff9c
   11b0c:	ldr	r3, [fp, #-112]	; 0xffffff90
   11b10:	ldr	r2, [fp, #-108]	; 0xffffff94
   11b14:	cmp	r3, r2
   11b18:	bcs	11c2c <argp_parse@@Base+0x458>
   11b1c:	ldr	r2, [fp, #8]
   11b20:	str	r2, [r3, #24]
   11b24:	ldr	r5, [fp, #-112]	; 0xffffff90
   11b28:	ldr	r3, [fp, #-108]	; 0xffffff94
   11b2c:	cmp	r5, r3
   11b30:	bcs	11c2c <argp_parse@@Base+0x458>
   11b34:	mov	r6, #3
   11b38:	movt	r6, #256	; 0x100
   11b3c:	mov	r7, #0
   11b40:	b	11bc8 <argp_parse@@Base+0x3f4>
   11b44:	movw	r3, #37200	; 0x9150
   11b48:	movt	r3, #2
   11b4c:	ldr	r3, [r3]
   11b50:	cmp	r3, #0
   11b54:	addeq	r2, r0, #16
   11b58:	bne	11920 <argp_parse@@Base+0x14c>
   11b5c:	b	1192c <argp_parse@@Base+0x158>
   11b60:	ldr	r3, [fp, #-248]	; 0xffffff08
   11b64:	cmp	r3, #0
   11b68:	beq	11a64 <argp_parse@@Base+0x290>
   11b6c:	add	sl, sl, #1
   11b70:	str	sl, [fp, #-208]	; 0xffffff30
   11b74:	mov	r3, #43	; 0x2b
   11b78:	strb	r3, [r6, r5]
   11b7c:	b	11a64 <argp_parse@@Base+0x290>
   11b80:	ldr	r3, [fp, #-112]	; 0xffffff90
   11b84:	str	r3, [fp, #-108]	; 0xffffff94
   11b88:	b	11aa4 <argp_parse@@Base+0x2d0>
   11b8c:	ldr	r3, [r5]
   11b90:	cmp	r3, #0
   11b94:	beq	11be8 <argp_parse@@Base+0x414>
   11b98:	mov	r3, r7
   11b9c:	mov	r2, r6
   11ba0:	sub	r1, fp, #96	; 0x60
   11ba4:	mov	r0, r5
   11ba8:	bl	11190 <__assert_fail@plt+0x244>
   11bac:	add	r5, r5, #36	; 0x24
   11bb0:	ldr	r3, [fp, #-108]	; 0xffffff94
   11bb4:	cmp	r5, r3
   11bb8:	bcs	11c1c <argp_parse@@Base+0x448>
   11bbc:	cmp	r0, #7
   11bc0:	cmpne	r0, #0
   11bc4:	bne	11c14 <argp_parse@@Base+0x440>
   11bc8:	ldr	r3, [r5, #16]
   11bcc:	cmp	r3, #0
   11bd0:	beq	11b8c <argp_parse@@Base+0x3b8>
   11bd4:	ldr	r2, [r5, #20]
   11bd8:	ldr	r3, [r3, #28]
   11bdc:	ldr	r3, [r3, r2, lsl #2]
   11be0:	str	r3, [r5, #24]
   11be4:	b	11b8c <argp_parse@@Base+0x3b8>
   11be8:	ldr	r3, [r5, #4]
   11bec:	ldr	r3, [r3, #16]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11b98 <argp_parse@@Base+0x3c4>
   11bf8:	ldr	r3, [r3]
   11bfc:	cmp	r3, #0
   11c00:	beq	11b98 <argp_parse@@Base+0x3c4>
   11c04:	ldr	r3, [r5, #28]
   11c08:	ldr	r2, [r5, #24]
   11c0c:	str	r2, [r3]
   11c10:	b	11b98 <argp_parse@@Base+0x3c4>
   11c14:	mov	r4, r0
   11c18:	b	12140 <argp_parse@@Base+0x96c>
   11c1c:	mov	r4, r0
   11c20:	cmp	r0, #7
   11c24:	cmpne	r0, #0
   11c28:	bne	12140 <argp_parse@@Base+0x96c>
   11c2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11c30:	tst	r3, #2
   11c34:	moveq	r3, #1
   11c38:	streq	r3, [fp, #-144]	; 0xffffff70
   11c3c:	beq	11c68 <argp_parse@@Base+0x494>
   11c40:	mov	r2, #0
   11c44:	str	r2, [fp, #-144]	; 0xffffff70
   11c48:	tst	r3, #1
   11c4c:	beq	11c68 <argp_parse@@Base+0x494>
   11c50:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11c54:	sub	r3, r3, #4
   11c58:	str	r3, [fp, #-88]	; 0xffffffa8
   11c5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11c60:	add	r3, r3, #1
   11c64:	str	r3, [fp, #-92]	; 0xffffffa4
   11c68:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11c6c:	ldr	r2, [fp, #-232]	; 0xffffff18
   11c70:	cmp	r2, r3
   11c74:	beq	11c9c <argp_parse@@Base+0x4c8>
   11c78:	movw	r3, #37176	; 0x9138
   11c7c:	movt	r3, #2
   11c80:	ldr	r3, [r3]
   11c84:	str	r3, [fp, #-56]	; 0xffffffc8
   11c88:	movw	sl, #32156	; 0x7d9c
   11c8c:	movt	sl, #1
   11c90:	mov	r9, #6
   11c94:	movt	r9, #256	; 0x100
   11c98:	b	11d64 <argp_parse@@Base+0x590>
   11c9c:	ldr	r0, [r2]
   11ca0:	cmp	r0, #0
   11ca4:	beq	11c78 <argp_parse@@Base+0x4a4>
   11ca8:	bl	123e8 <argp_parse@@Base+0xc14>
   11cac:	str	r0, [fp, #-56]	; 0xffffffc8
   11cb0:	b	11c88 <argp_parse@@Base+0x4b4>
   11cb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   11cb8:	str	r3, [fp, #-148]	; 0xffffff6c
   11cbc:	mvn	r3, #0
   11cc0:	str	r3, [fp, #-140]	; 0xffffff74
   11cc4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11cc8:	tst	r3, #64	; 0x40
   11ccc:	beq	11de8 <argp_parse@@Base+0x614>
   11cd0:	sub	r3, fp, #148	; 0x94
   11cd4:	str	r3, [sp, #4]
   11cd8:	mov	r3, #0
   11cdc:	str	r3, [sp]
   11ce0:	ldr	r3, [fp, #-152]	; 0xffffff68
   11ce4:	ldr	r2, [fp, #-156]	; 0xffffff64
   11ce8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11cec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11cf0:	bl	12590 <argp_parse@@Base+0xdbc>
   11cf4:	mov	r5, r0
   11cf8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   11cfc:	str	r4, [fp, #-84]	; 0xffffffac
   11d00:	cmn	r5, #1
   11d04:	beq	11e14 <argp_parse@@Base+0x640>
   11d08:	cmp	r5, #63	; 0x3f
   11d0c:	beq	11e44 <argp_parse@@Base+0x670>
   11d10:	cmp	r5, #1
   11d14:	beq	11dc0 <argp_parse@@Base+0x5ec>
   11d18:	ldr	r4, [fp, #-136]	; 0xffffff78
   11d1c:	asrs	r3, r5, #24
   11d20:	beq	11e54 <argp_parse@@Base+0x680>
   11d24:	ands	r1, r5, #8388608	; 0x800000
   11d28:	movne	r1, #-16777216	; 0xff000000
   11d2c:	bic	r2, r5, #-16777216	; 0xff000000
   11d30:	add	r0, r3, r3, lsl #3
   11d34:	lsl	r0, r0, #2
   11d38:	sub	r0, r0, #36	; 0x24
   11d3c:	mov	r3, r4
   11d40:	orr	r2, r2, r1
   11d44:	sub	r1, fp, #96	; 0x60
   11d48:	ldr	ip, [fp, #-112]	; 0xffffff90
   11d4c:	add	r0, ip, r0
   11d50:	bl	11190 <__assert_fail@plt+0x244>
   11d54:	cmp	r0, #7
   11d58:	beq	1201c <argp_parse@@Base+0x848>
   11d5c:	cmp	r0, #0
   11d60:	bne	120a0 <argp_parse@@Base+0x8cc>
   11d64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11d68:	cmp	r3, #0
   11d6c:	beq	11d84 <argp_parse@@Base+0x5b0>
   11d70:	ldr	r2, [fp, #-84]	; 0xffffffac
   11d74:	cmp	r3, r2
   11d78:	movgt	r3, #0
   11d7c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   11d80:	ble	11d90 <argp_parse@@Base+0x5bc>
   11d84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11d88:	cmp	r3, #0
   11d8c:	bne	11cb4 <argp_parse@@Base+0x4e0>
   11d90:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d94:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11d98:	cmp	r3, r2
   11d9c:	bge	12310 <argp_parse@@Base+0xb3c>
   11da0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11da4:	tst	r2, #4
   11da8:	bne	12318 <argp_parse@@Base+0xb44>
   11dac:	add	r2, r3, #1
   11db0:	str	r2, [fp, #-84]	; 0xffffffac
   11db4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11db8:	ldr	r3, [r2, r3, lsl #2]
   11dbc:	str	r3, [fp, #-136]	; 0xffffff78
   11dc0:	ldr	r7, [fp, #-136]	; 0xffffff78
   11dc4:	ldr	r4, [fp, #-84]	; 0xffffffac
   11dc8:	sub	r4, r4, #1
   11dcc:	str	r4, [fp, #-84]	; 0xffffffac
   11dd0:	ldr	r5, [fp, #-112]	; 0xffffff90
   11dd4:	ldr	r3, [fp, #-108]	; 0xffffff94
   11dd8:	cmp	r3, r5
   11ddc:	bls	12098 <argp_parse@@Base+0x8c4>
   11de0:	mov	r6, #0
   11de4:	b	11f14 <argp_parse@@Base+0x740>
   11de8:	sub	r3, fp, #148	; 0x94
   11dec:	str	r3, [sp, #4]
   11df0:	mov	r3, #0
   11df4:	str	r3, [sp]
   11df8:	ldr	r3, [fp, #-152]	; 0xffffff68
   11dfc:	ldr	r2, [fp, #-156]	; 0xffffff64
   11e00:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11e04:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11e08:	bl	12534 <argp_parse@@Base+0xd60>
   11e0c:	mov	r5, r0
   11e10:	b	11cf8 <argp_parse@@Base+0x524>
   11e14:	mov	r3, #0
   11e18:	str	r3, [fp, #-100]	; 0xffffff9c
   11e1c:	cmp	r4, #1
   11e20:	ble	11d90 <argp_parse@@Base+0x5bc>
   11e24:	sub	r3, r4, #-1073741823	; 0xc0000001
   11e28:	mov	r1, sl
   11e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11e30:	ldr	r0, [r2, r3, lsl #2]
   11e34:	bl	10d30 <strcmp@plt>
   11e38:	cmp	r0, #0
   11e3c:	streq	r4, [fp, #-72]	; 0xffffffb8
   11e40:	b	11d90 <argp_parse@@Base+0x5bc>
   11e44:	ldr	r3, [fp, #-140]	; 0xffffff74
   11e48:	cmn	r3, #1
   11e4c:	bne	12308 <argp_parse@@Base+0xb34>
   11e50:	ldr	r4, [fp, #-136]	; 0xffffff78
   11e54:	mov	r1, r5
   11e58:	ldr	r0, [fp, #-156]	; 0xffffff64
   11e5c:	bl	10e80 <strchr@plt>
   11e60:	subs	r1, r0, #0
   11e64:	beq	11eb4 <argp_parse@@Base+0x6e0>
   11e68:	ldr	r0, [fp, #-112]	; 0xffffff90
   11e6c:	ldr	r2, [fp, #-108]	; 0xffffff94
   11e70:	cmp	r2, r0
   11e74:	bls	11eb4 <argp_parse@@Base+0x6e0>
   11e78:	ldr	r3, [r0, #8]
   11e7c:	cmp	r1, r3
   11e80:	bcc	11e9c <argp_parse@@Base+0x6c8>
   11e84:	add	r0, r0, #36	; 0x24
   11e88:	cmp	r2, r0
   11e8c:	bls	11eb4 <argp_parse@@Base+0x6e0>
   11e90:	ldr	r3, [r0, #8]
   11e94:	cmp	r1, r3
   11e98:	bcs	11e84 <argp_parse@@Base+0x6b0>
   11e9c:	mov	r3, r4
   11ea0:	mov	r2, r5
   11ea4:	sub	r1, fp, #96	; 0x60
   11ea8:	bl	11190 <__assert_fail@plt+0x244>
   11eac:	cmp	r0, #7
   11eb0:	bne	11d5c <argp_parse@@Base+0x588>
   11eb4:	ldr	r3, [pc, #1128]	; 12324 <argp_parse@@Base+0xb50>
   11eb8:	mov	r2, r5
   11ebc:	movw	r1, #32160	; 0x7da0
   11ec0:	movt	r1, #1
   11ec4:	sub	r0, fp, #96	; 0x60
   11ec8:	bl	15f20 <argp_error@@Base>
   11ecc:	b	11f54 <argp_parse@@Base+0x780>
   11ed0:	ldr	r3, [fp, #-84]	; 0xffffffac
   11ed4:	sub	r3, r3, #1
   11ed8:	str	r3, [fp, #-84]	; 0xffffffac
   11edc:	mov	r3, r6
   11ee0:	mov	r2, r9
   11ee4:	sub	r1, fp, #96	; 0x60
   11ee8:	mov	r0, r5
   11eec:	bl	11190 <__assert_fail@plt+0x244>
   11ef0:	add	r5, r5, #36	; 0x24
   11ef4:	ldr	r2, [fp, #-108]	; 0xffffff94
   11ef8:	cmp	r5, r2
   11efc:	movcs	r3, #0
   11f00:	movcc	r3, #1
   11f04:	cmp	r0, #7
   11f08:	movne	r3, #0
   11f0c:	cmp	r3, #0
   11f10:	beq	11fe4 <argp_parse@@Base+0x810>
   11f14:	ldr	r3, [fp, #-84]	; 0xffffffac
   11f18:	add	r3, r3, #1
   11f1c:	str	r3, [fp, #-84]	; 0xffffffac
   11f20:	mov	r3, r7
   11f24:	mov	r2, r6
   11f28:	sub	r1, fp, #96	; 0x60
   11f2c:	mov	r0, r5
   11f30:	bl	11190 <__assert_fail@plt+0x244>
   11f34:	cmp	r0, #7
   11f38:	beq	11ed0 <argp_parse@@Base+0x6fc>
   11f3c:	add	r5, r5, #36	; 0x24
   11f40:	cmp	r0, #0
   11f44:	beq	11ff4 <argp_parse@@Base+0x820>
   11f48:	cmp	r0, #7
   11f4c:	bne	11d5c <argp_parse@@Base+0x588>
   11f50:	mov	r5, #1
   11f54:	add	r5, r5, #1
   11f58:	bics	r3, r5, #2
   11f5c:	moveq	r3, #1
   11f60:	movne	r3, #0
   11f64:	cmp	r3, #0
   11f68:	beq	122ac <argp_parse@@Base+0xad8>
   11f6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   11f70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11f74:	cmp	r3, r2
   11f78:	beq	12160 <argp_parse@@Base+0x98c>
   11f7c:	ldr	r2, [fp, #4]
   11f80:	cmp	r2, #0
   11f84:	strne	r3, [r2]
   11f88:	beq	12284 <argp_parse@@Base+0xab0>
   11f8c:	ldr	r5, [fp, #-108]	; 0xffffff94
   11f90:	sub	r5, r5, #36	; 0x24
   11f94:	ldr	r3, [fp, #-112]	; 0xffffff90
   11f98:	cmp	r5, r3
   11f9c:	bcc	122ec <argp_parse@@Base+0xb18>
   11fa0:	mov	r6, #4
   11fa4:	movt	r6, #256	; 0x100
   11fa8:	mov	r7, #0
   11fac:	mov	r3, r7
   11fb0:	mov	r2, r6
   11fb4:	sub	r1, fp, #96	; 0x60
   11fb8:	mov	r0, r5
   11fbc:	bl	11190 <__assert_fail@plt+0x244>
   11fc0:	sub	r5, r5, #36	; 0x24
   11fc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   11fc8:	cmp	r5, r3
   11fcc:	bcc	122c4 <argp_parse@@Base+0xaf0>
   11fd0:	cmp	r0, #7
   11fd4:	cmpne	r0, #0
   11fd8:	beq	11fac <argp_parse@@Base+0x7d8>
   11fdc:	mov	r4, r0
   11fe0:	b	122d4 <argp_parse@@Base+0xb00>
   11fe4:	cmp	r0, #0
   11fe8:	bne	11f48 <argp_parse@@Base+0x774>
   11fec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11ff0:	str	r3, [fp, #-84]	; 0xffffffac
   11ff4:	ldr	r3, [fp, #-84]	; 0xffffffac
   11ff8:	cmp	r4, r3
   11ffc:	movge	r3, #1
   12000:	strge	r3, [fp, #-100]	; 0xffffff9c
   12004:	bge	11d64 <argp_parse@@Base+0x590>
   12008:	sub	r4, r3, r4
   1200c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12010:	add	r4, r3, r4
   12014:	str	r4, [r5, #-24]	; 0xffffffe8
   12018:	b	11d64 <argp_parse@@Base+0x590>
   1201c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12020:	ldr	r2, [r3, #12]
   12024:	cmp	r2, r5
   12028:	beq	12060 <argp_parse@@Base+0x88c>
   1202c:	ldr	r2, [r3]
   12030:	cmp	r2, #0
   12034:	beq	1208c <argp_parse@@Base+0x8b8>
   12038:	add	r3, r3, #16
   1203c:	ldr	r2, [r3, #12]
   12040:	cmp	r5, r2
   12044:	beq	12060 <argp_parse@@Base+0x88c>
   12048:	ldr	r2, [r3]
   1204c:	cmp	r2, #0
   12050:	bne	12038 <argp_parse@@Base+0x864>
   12054:	movw	r2, #32152	; 0x7d98
   12058:	movt	r2, #1
   1205c:	b	12074 <argp_parse@@Base+0x8a0>
   12060:	ldr	r2, [r3]
   12064:	movw	r3, #32152	; 0x7d98
   12068:	movt	r3, #1
   1206c:	cmp	r2, #0
   12070:	moveq	r2, r3
   12074:	ldr	r3, [pc, #680]	; 12324 <argp_parse@@Base+0xb50>
   12078:	movw	r1, #32168	; 0x7da8
   1207c:	movt	r1, #1
   12080:	sub	r0, fp, #96	; 0x60
   12084:	bl	15f20 <argp_error@@Base>
   12088:	b	11f54 <argp_parse@@Base+0x780>
   1208c:	movw	r2, #32152	; 0x7d98
   12090:	movt	r2, #1
   12094:	b	12074 <argp_parse@@Base+0x8a0>
   12098:	mov	r5, #1
   1209c:	b	11f54 <argp_parse@@Base+0x780>
   120a0:	mov	r4, r0
   120a4:	cmp	r4, #7
   120a8:	beq	122ac <argp_parse@@Base+0xad8>
   120ac:	ldr	r5, [fp, #-112]	; 0xffffff90
   120b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   120b4:	cmp	r5, r3
   120b8:	bcs	120ec <argp_parse@@Base+0x918>
   120bc:	mov	r6, #5
   120c0:	movt	r6, #256	; 0x100
   120c4:	mov	r7, #0
   120c8:	mov	r3, r7
   120cc:	mov	r2, r6
   120d0:	sub	r1, fp, #96	; 0x60
   120d4:	mov	r0, r5
   120d8:	bl	11190 <__assert_fail@plt+0x244>
   120dc:	add	r5, r5, #36	; 0x24
   120e0:	ldr	r3, [fp, #-108]	; 0xffffff94
   120e4:	cmp	r5, r3
   120e8:	bcc	120c8 <argp_parse@@Base+0x8f4>
   120ec:	ldr	r5, [fp, #-108]	; 0xffffff94
   120f0:	sub	r5, r5, #36	; 0x24
   120f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   120f8:	cmp	r3, r5
   120fc:	bhi	12130 <argp_parse@@Base+0x95c>
   12100:	mov	r6, #7
   12104:	movt	r6, #256	; 0x100
   12108:	mov	r7, #0
   1210c:	mov	r3, r7
   12110:	mov	r2, r6
   12114:	sub	r1, fp, #96	; 0x60
   12118:	mov	r0, r5
   1211c:	bl	11190 <__assert_fail@plt+0x244>
   12120:	sub	r5, r5, #36	; 0x24
   12124:	ldr	r3, [fp, #-112]	; 0xffffff90
   12128:	cmp	r5, r3
   1212c:	bcs	1210c <argp_parse@@Base+0x938>
   12130:	cmp	r4, #7
   12134:	moveq	r4, #22
   12138:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1213c:	bl	124ac <argp_parse@@Base+0xcd8>
   12140:	mov	r0, r4
   12144:	sub	sp, fp, #32
   12148:	ldrd	r4, [sp]
   1214c:	ldrd	r6, [sp, #8]
   12150:	ldrd	r8, [sp, #16]
   12154:	ldrd	sl, [sp, #24]
   12158:	add	sp, sp, #32
   1215c:	pop	{pc}		; (ldr pc, [sp], #4)
   12160:	ldr	r6, [fp, #-112]	; 0xffffff90
   12164:	ldr	r5, [fp, #-108]	; 0xffffff94
   12168:	cmp	r5, r6
   1216c:	bls	122f4 <argp_parse@@Base+0xb20>
   12170:	mov	r4, #0
   12174:	mov	r7, #2
   12178:	movt	r7, #256	; 0x100
   1217c:	mov	r8, r4
   12180:	mov	r0, r4
   12184:	b	121a4 <argp_parse@@Base+0x9d0>
   12188:	add	r6, r6, #36	; 0x24
   1218c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12190:	cmp	r6, r5
   12194:	bcs	121e0 <argp_parse@@Base+0xa0c>
   12198:	cmp	r0, #7
   1219c:	cmpne	r0, #0
   121a0:	bne	121c8 <argp_parse@@Base+0x9f4>
   121a4:	ldr	r3, [r6, #12]
   121a8:	cmp	r3, #0
   121ac:	bne	12188 <argp_parse@@Base+0x9b4>
   121b0:	mov	r3, r8
   121b4:	mov	r2, r7
   121b8:	sub	r1, fp, #96	; 0x60
   121bc:	mov	r0, r6
   121c0:	bl	11190 <__assert_fail@plt+0x244>
   121c4:	b	12188 <argp_parse@@Base+0x9b4>
   121c8:	mov	r4, r0
   121cc:	sub	r5, r5, #36	; 0x24
   121d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   121d4:	cmp	r3, r5
   121d8:	bls	121f4 <argp_parse@@Base+0xa20>
   121dc:	b	12240 <argp_parse@@Base+0xa6c>
   121e0:	mov	r4, r0
   121e4:	sub	r5, r5, #36	; 0x24
   121e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   121ec:	cmp	r3, r5
   121f0:	bhi	12268 <argp_parse@@Base+0xa94>
   121f4:	cmp	r4, #7
   121f8:	cmpne	r4, #0
   121fc:	bne	12240 <argp_parse@@Base+0xa6c>
   12200:	mov	r6, #1
   12204:	movt	r6, #256	; 0x100
   12208:	mov	r7, #0
   1220c:	mov	r3, r7
   12210:	mov	r2, r6
   12214:	sub	r1, fp, #96	; 0x60
   12218:	mov	r0, r5
   1221c:	bl	11190 <__assert_fail@plt+0x244>
   12220:	sub	r5, r5, #36	; 0x24
   12224:	ldr	r3, [fp, #-112]	; 0xffffff90
   12228:	cmp	r5, r3
   1222c:	bcc	12264 <argp_parse@@Base+0xa90>
   12230:	cmp	r0, #7
   12234:	cmpne	r0, #0
   12238:	beq	1220c <argp_parse@@Base+0xa38>
   1223c:	mov	r4, r0
   12240:	ldr	r3, [fp, #4]
   12244:	cmp	r3, #0
   12248:	beq	12258 <argp_parse@@Base+0xa84>
   1224c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12250:	ldr	r2, [fp, #4]
   12254:	str	r3, [r2]
   12258:	cmp	r4, #0
   1225c:	beq	11f8c <argp_parse@@Base+0x7b8>
   12260:	b	120a4 <argp_parse@@Base+0x8d0>
   12264:	mov	r4, r0
   12268:	cmp	r4, #7
   1226c:	bne	12240 <argp_parse@@Base+0xa6c>
   12270:	ldr	r3, [fp, #4]
   12274:	cmp	r3, #0
   12278:	movne	r4, #0
   1227c:	bne	1224c <argp_parse@@Base+0xa78>
   12280:	b	11f8c <argp_parse@@Base+0x7b8>
   12284:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12288:	tst	r3, #2
   1228c:	bne	122ac <argp_parse@@Base+0xad8>
   12290:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12294:	cmp	r0, #0
   12298:	beq	122ac <argp_parse@@Base+0xad8>
   1229c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   122a0:	movw	r1, #32180	; 0x7db4
   122a4:	movt	r1, #1
   122a8:	bl	10e8c <fprintf@plt>
   122ac:	mov	r2, #260	; 0x104
   122b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   122b4:	sub	r0, fp, #96	; 0x60
   122b8:	bl	15e58 <argp_state_help@@Base>
   122bc:	mov	r4, #7
   122c0:	b	120ac <argp_parse@@Base+0x8d8>
   122c4:	mov	r4, r0
   122c8:	cmp	r0, #7
   122cc:	movne	r4, r0
   122d0:	moveq	r4, #0
   122d4:	ldr	r5, [fp, #-108]	; 0xffffff94
   122d8:	sub	r5, r5, #36	; 0x24
   122dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   122e0:	cmp	r3, r5
   122e4:	bls	12100 <argp_parse@@Base+0x92c>
   122e8:	b	12138 <argp_parse@@Base+0x964>
   122ec:	mov	r4, #0
   122f0:	b	12138 <argp_parse@@Base+0x964>
   122f4:	sub	r5, r5, #36	; 0x24
   122f8:	cmp	r5, r6
   122fc:	movcc	r4, #0
   12300:	bcs	12200 <argp_parse@@Base+0xa2c>
   12304:	b	12240 <argp_parse@@Base+0xa6c>
   12308:	mov	r3, #0
   1230c:	b	11f64 <argp_parse@@Base+0x790>
   12310:	mov	r3, #1
   12314:	b	11f64 <argp_parse@@Base+0x790>
   12318:	mov	r3, #1
   1231c:	b	11f64 <argp_parse@@Base+0x790>
   12320:	andeq	r7, r1, r0, ror ip
   12324:	andeq	r7, r1, ip, lsl #25
   12328:	cmp	r1, #0
   1232c:	beq	12378 <argp_parse@@Base+0xba4>
   12330:	ldr	r2, [r1, #52]	; 0x34
   12334:	ldr	r3, [r2, #48]	; 0x30
   12338:	ldr	r1, [r2, #52]	; 0x34
   1233c:	cmp	r3, r1
   12340:	bcs	12380 <argp_parse@@Base+0xbac>
   12344:	ldr	r2, [r3, #4]
   12348:	cmp	r0, r2
   1234c:	beq	12368 <argp_parse@@Base+0xb94>
   12350:	add	r3, r3, #36	; 0x24
   12354:	cmp	r3, r1
   12358:	bcs	12370 <argp_parse@@Base+0xb9c>
   1235c:	ldr	r2, [r3, #4]
   12360:	cmp	r2, r0
   12364:	bne	12350 <argp_parse@@Base+0xb7c>
   12368:	ldr	r0, [r3, #24]
   1236c:	bx	lr
   12370:	mov	r0, #0
   12374:	bx	lr
   12378:	mov	r0, r1
   1237c:	bx	lr
   12380:	mov	r0, #0
   12384:	bx	lr
   12388:	push	{lr}		; (str lr, [sp, #-4]!)
   1238c:	sub	sp, sp, #12
   12390:	movw	r1, #37204	; 0x9154
   12394:	movt	r1, #2
   12398:	ldr	r3, [r1, #4]
   1239c:	str	r3, [sp]
   123a0:	movw	r3, #32412	; 0x7e9c
   123a4:	movt	r3, #1
   123a8:	movw	r2, #32428	; 0x7eac
   123ac:	movt	r2, #1
   123b0:	ldr	r1, [r1]
   123b4:	bl	1299c <argp_parse@@Base+0x11c8>
   123b8:	add	sp, sp, #12
   123bc:	pop	{pc}		; (ldr pc, [sp], #4)
   123c0:	movw	r3, #37200	; 0x9150
   123c4:	movt	r3, #2
   123c8:	movw	r2, #9096	; 0x2388
   123cc:	movt	r2, #1
   123d0:	str	r2, [r3]
   123d4:	movw	r3, #37204	; 0x9154
   123d8:	movt	r3, #2
   123dc:	str	r0, [r3]
   123e0:	str	r1, [r3, #4]
   123e4:	bx	lr
   123e8:	ldrb	r3, [r0]
   123ec:	cmp	r3, #47	; 0x2f
   123f0:	bne	12400 <argp_parse@@Base+0xc2c>
   123f4:	ldrb	r3, [r0, #1]!
   123f8:	cmp	r3, #47	; 0x2f
   123fc:	beq	123f4 <argp_parse@@Base+0xc20>
   12400:	ldrb	r2, [r0]
   12404:	cmp	r2, #0
   12408:	bxeq	lr
   1240c:	push	{lr}		; (str lr, [sp, #-4]!)
   12410:	mov	r1, r0
   12414:	mov	r3, #0
   12418:	mov	lr, #1
   1241c:	mov	ip, r3
   12420:	b	1243c <argp_parse@@Base+0xc68>
   12424:	cmp	r3, #0
   12428:	movne	r0, r1
   1242c:	movne	r3, ip
   12430:	ldrb	r2, [r1, #1]!
   12434:	cmp	r2, #0
   12438:	beq	1244c <argp_parse@@Base+0xc78>
   1243c:	cmp	r2, #47	; 0x2f
   12440:	moveq	r3, lr
   12444:	bne	12424 <argp_parse@@Base+0xc50>
   12448:	b	12430 <argp_parse@@Base+0xc5c>
   1244c:	pop	{pc}		; (ldr pc, [sp], #4)
   12450:	str	r4, [sp, #-8]!
   12454:	str	lr, [sp, #4]
   12458:	mov	r4, r0
   1245c:	bl	10e74 <strlen@plt>
   12460:	cmp	r0, #1
   12464:	bls	12484 <argp_parse@@Base+0xcb0>
   12468:	add	r3, r4, r0
   1246c:	ldrb	r3, [r3, #-1]
   12470:	cmp	r3, #47	; 0x2f
   12474:	subeq	r0, r0, #2
   12478:	addeq	r3, r4, r0
   1247c:	rsbeq	r1, r4, #1
   12480:	beq	12490 <argp_parse@@Base+0xcbc>
   12484:	ldr	r4, [sp]
   12488:	add	sp, sp, #4
   1248c:	pop	{pc}		; (ldr pc, [sp], #4)
   12490:	add	r0, r1, r3
   12494:	cmp	r3, r4
   12498:	beq	12484 <argp_parse@@Base+0xcb0>
   1249c:	ldrb	r2, [r3], #-1
   124a0:	cmp	r2, #47	; 0x2f
   124a4:	bne	12484 <argp_parse@@Base+0xcb0>
   124a8:	b	12490 <argp_parse@@Base+0xcbc>
   124ac:	strd	r4, [sp, #-12]!
   124b0:	str	lr, [sp, #8]
   124b4:	sub	sp, sp, #12
   124b8:	mov	r5, r0
   124bc:	bl	10e98 <__errno_location@plt>
   124c0:	mov	r4, r0
   124c4:	ldr	r3, [r0]
   124c8:	str	r3, [sp]
   124cc:	str	r3, [sp, #4]
   124d0:	mov	r3, #0
   124d4:	str	r3, [r0]
   124d8:	mov	r0, r5
   124dc:	bl	10d6c <free@plt>
   124e0:	ldr	r3, [r4]
   124e4:	clz	r3, r3
   124e8:	lsr	r3, r3, #5
   124ec:	add	r2, sp, #8
   124f0:	add	r3, r2, r3, lsl #2
   124f4:	ldr	r3, [r3, #-8]
   124f8:	str	r3, [r4]
   124fc:	add	sp, sp, #12
   12500:	ldrd	r4, [sp]
   12504:	add	sp, sp, #8
   12508:	pop	{pc}		; (ldr pc, [sp], #4)
   1250c:	push	{lr}		; (str lr, [sp, #-4]!)
   12510:	sub	sp, sp, #20
   12514:	mov	ip, #0
   12518:	str	ip, [sp, #8]
   1251c:	str	ip, [sp, #4]
   12520:	ldr	ip, [sp, #24]
   12524:	str	ip, [sp]
   12528:	bl	16c80 <argp_error@@Base+0xd60>
   1252c:	add	sp, sp, #20
   12530:	pop	{pc}		; (ldr pc, [sp], #4)
   12534:	push	{lr}		; (str lr, [sp, #-4]!)
   12538:	sub	sp, sp, #20
   1253c:	mov	ip, #0
   12540:	str	ip, [sp, #12]
   12544:	ldr	lr, [sp, #28]
   12548:	str	lr, [sp, #8]
   1254c:	str	ip, [sp, #4]
   12550:	ldr	ip, [sp, #24]
   12554:	str	ip, [sp]
   12558:	bl	166c4 <argp_error@@Base+0x7a4>
   1255c:	add	sp, sp, #20
   12560:	pop	{pc}		; (ldr pc, [sp], #4)
   12564:	push	{lr}		; (str lr, [sp, #-4]!)
   12568:	sub	sp, sp, #20
   1256c:	mov	ip, #0
   12570:	str	ip, [sp, #8]
   12574:	mov	ip, #1
   12578:	str	ip, [sp, #4]
   1257c:	ldr	ip, [sp, #24]
   12580:	str	ip, [sp]
   12584:	bl	16c80 <argp_error@@Base+0xd60>
   12588:	add	sp, sp, #20
   1258c:	pop	{pc}		; (ldr pc, [sp], #4)
   12590:	push	{lr}		; (str lr, [sp, #-4]!)
   12594:	sub	sp, sp, #20
   12598:	mov	ip, #0
   1259c:	str	ip, [sp, #12]
   125a0:	ldr	ip, [sp, #28]
   125a4:	str	ip, [sp, #8]
   125a8:	mov	ip, #1
   125ac:	str	ip, [sp, #4]
   125b0:	ldr	ip, [sp, #24]
   125b4:	str	ip, [sp]
   125b8:	bl	166c4 <argp_error@@Base+0x7a4>
   125bc:	add	sp, sp, #20
   125c0:	pop	{pc}		; (ldr pc, [sp], #4)
   125c4:	strd	r4, [sp, #-16]!
   125c8:	str	r6, [sp, #8]
   125cc:	str	lr, [sp, #12]
   125d0:	subs	r4, r0, #0
   125d4:	beq	12670 <argp_parse@@Base+0xe9c>
   125d8:	mov	r1, #47	; 0x2f
   125dc:	mov	r0, r4
   125e0:	bl	10ed4 <strrchr@plt>
   125e4:	subs	r5, r0, #0
   125e8:	beq	12648 <argp_parse@@Base+0xe74>
   125ec:	add	r6, r5, #1
   125f0:	sub	r3, r6, r4
   125f4:	cmp	r3, #6
   125f8:	ble	12648 <argp_parse@@Base+0xe74>
   125fc:	mov	r2, #7
   12600:	movw	r1, #32500	; 0x7ef4
   12604:	movt	r1, #1
   12608:	sub	r0, r5, #6
   1260c:	bl	10f34 <strncmp@plt>
   12610:	cmp	r0, #0
   12614:	bne	12648 <argp_parse@@Base+0xe74>
   12618:	mov	r2, #3
   1261c:	movw	r1, #32508	; 0x7efc
   12620:	movt	r1, #1
   12624:	mov	r0, r6
   12628:	bl	10f34 <strncmp@plt>
   1262c:	cmp	r0, #0
   12630:	movne	r4, r6
   12634:	bne	12648 <argp_parse@@Base+0xe74>
   12638:	add	r4, r5, #4
   1263c:	movw	r3, #37176	; 0x9138
   12640:	movt	r3, #2
   12644:	str	r4, [r3]
   12648:	movw	r3, #37212	; 0x915c
   1264c:	movt	r3, #2
   12650:	str	r4, [r3]
   12654:	movw	r3, #37180	; 0x913c
   12658:	movt	r3, #2
   1265c:	str	r4, [r3]
   12660:	ldrd	r4, [sp]
   12664:	ldr	r6, [sp, #8]
   12668:	add	sp, sp, #12
   1266c:	pop	{pc}		; (ldr pc, [sp], #4)
   12670:	movw	r3, #37184	; 0x9140
   12674:	movt	r3, #2
   12678:	ldr	r3, [r3]
   1267c:	mov	r2, #55	; 0x37
   12680:	mov	r1, #1
   12684:	movw	r0, #32444	; 0x7ebc
   12688:	movt	r0, #1
   1268c:	bl	10dd8 <fwrite@plt>
   12690:	bl	10f40 <abort@plt>
   12694:	strd	r4, [sp, #-16]!
   12698:	str	r6, [sp, #8]
   1269c:	str	lr, [sp, #12]
   126a0:	sub	sp, sp, #32
   126a4:	mov	r4, r0
   126a8:	ldr	r5, [sp, #48]	; 0x30
   126ac:	ldr	r6, [sp, #52]	; 0x34
   126b0:	cmp	r1, #0
   126b4:	beq	12750 <argp_parse@@Base+0xf7c>
   126b8:	str	r3, [sp]
   126bc:	mov	r3, r2
   126c0:	mov	r2, r1
   126c4:	movw	r1, #32512	; 0x7f00
   126c8:	movt	r1, #1
   126cc:	bl	10e8c <fprintf@plt>
   126d0:	movw	r3, #2022	; 0x7e6
   126d4:	movw	r2, #32532	; 0x7f14
   126d8:	movt	r2, #1
   126dc:	movw	r1, #33300	; 0x8214
   126e0:	movt	r1, #1
   126e4:	mov	r0, r4
   126e8:	bl	10e8c <fprintf@plt>
   126ec:	mov	r1, r4
   126f0:	mov	r0, #10
   126f4:	bl	10eec <fputc@plt>
   126f8:	movw	r2, #32536	; 0x7f18
   126fc:	movt	r2, #1
   12700:	movw	r1, #32572	; 0x7f3c
   12704:	movt	r1, #1
   12708:	mov	r0, r4
   1270c:	bl	10e8c <fprintf@plt>
   12710:	mov	r1, r4
   12714:	mov	r0, #10
   12718:	bl	10eec <fputc@plt>
   1271c:	cmp	r6, #9
   12720:	ldrls	pc, [pc, r6, lsl #2]
   12724:	b	12948 <argp_parse@@Base+0x1174>
   12728:	andeq	r2, r1, r4, ror r7
   1272c:	andeq	r2, r1, r0, ror #14
   12730:	andeq	r2, r1, r8, lsl #15
   12734:	andeq	r2, r1, r4, lsr #15
   12738:	andeq	r2, r1, r8, asr #15
   1273c:	strdeq	r2, [r1], -r4
   12740:	andeq	r2, r1, r8, lsr #16
   12744:	andeq	r2, r1, r4, ror #16
   12748:	andeq	r2, r1, r8, lsr #17
   1274c:	strdeq	r2, [r1], -r4
   12750:	movw	r1, #32524	; 0x7f0c
   12754:	movt	r1, #1
   12758:	bl	10e8c <fprintf@plt>
   1275c:	b	126d0 <argp_parse@@Base+0xefc>
   12760:	ldr	r2, [r5]
   12764:	movw	r1, #32744	; 0x7fe8
   12768:	movt	r1, #1
   1276c:	mov	r0, r4
   12770:	bl	10e8c <fprintf@plt>
   12774:	add	sp, sp, #32
   12778:	ldrd	r4, [sp]
   1277c:	ldr	r6, [sp, #8]
   12780:	add	sp, sp, #12
   12784:	pop	{pc}		; (ldr pc, [sp], #4)
   12788:	ldr	r3, [r5, #4]
   1278c:	ldr	r2, [r5]
   12790:	movw	r1, #32760	; 0x7ff8
   12794:	movt	r1, #1
   12798:	mov	r0, r4
   1279c:	bl	10e8c <fprintf@plt>
   127a0:	b	12774 <argp_parse@@Base+0xfa0>
   127a4:	ldr	r3, [r5, #8]
   127a8:	str	r3, [sp]
   127ac:	ldr	r3, [r5, #4]
   127b0:	ldr	r2, [r5]
   127b4:	movw	r1, #32784	; 0x8010
   127b8:	movt	r1, #1
   127bc:	mov	r0, r4
   127c0:	bl	10e8c <fprintf@plt>
   127c4:	b	12774 <argp_parse@@Base+0xfa0>
   127c8:	ldr	r3, [r5, #12]
   127cc:	str	r3, [sp, #4]
   127d0:	ldr	r3, [r5, #8]
   127d4:	str	r3, [sp]
   127d8:	ldr	r3, [r5, #4]
   127dc:	ldr	r2, [r5]
   127e0:	movw	r1, #32812	; 0x802c
   127e4:	movt	r1, #1
   127e8:	mov	r0, r4
   127ec:	bl	10e8c <fprintf@plt>
   127f0:	b	12774 <argp_parse@@Base+0xfa0>
   127f4:	ldr	r3, [r5, #16]
   127f8:	str	r3, [sp, #8]
   127fc:	ldr	r3, [r5, #12]
   12800:	str	r3, [sp, #4]
   12804:	ldr	r3, [r5, #8]
   12808:	str	r3, [sp]
   1280c:	ldr	r3, [r5, #4]
   12810:	ldr	r2, [r5]
   12814:	movw	r1, #32844	; 0x804c
   12818:	movt	r1, #1
   1281c:	mov	r0, r4
   12820:	bl	10e8c <fprintf@plt>
   12824:	b	12774 <argp_parse@@Base+0xfa0>
   12828:	ldr	r3, [r5, #20]
   1282c:	str	r3, [sp, #12]
   12830:	ldr	r3, [r5, #16]
   12834:	str	r3, [sp, #8]
   12838:	ldr	r3, [r5, #12]
   1283c:	str	r3, [sp, #4]
   12840:	ldr	r3, [r5, #8]
   12844:	str	r3, [sp]
   12848:	ldr	r3, [r5, #4]
   1284c:	ldr	r2, [r5]
   12850:	movw	r1, #32880	; 0x8070
   12854:	movt	r1, #1
   12858:	mov	r0, r4
   1285c:	bl	10e8c <fprintf@plt>
   12860:	b	12774 <argp_parse@@Base+0xfa0>
   12864:	ldr	r3, [r5, #24]
   12868:	str	r3, [sp, #16]
   1286c:	ldr	r3, [r5, #20]
   12870:	str	r3, [sp, #12]
   12874:	ldr	r3, [r5, #16]
   12878:	str	r3, [sp, #8]
   1287c:	ldr	r3, [r5, #12]
   12880:	str	r3, [sp, #4]
   12884:	ldr	r3, [r5, #8]
   12888:	str	r3, [sp]
   1288c:	ldr	r3, [r5, #4]
   12890:	ldr	r2, [r5]
   12894:	movw	r1, #32920	; 0x8098
   12898:	movt	r1, #1
   1289c:	mov	r0, r4
   128a0:	bl	10e8c <fprintf@plt>
   128a4:	b	12774 <argp_parse@@Base+0xfa0>
   128a8:	ldr	r3, [r5, #28]
   128ac:	str	r3, [sp, #20]
   128b0:	ldr	r3, [r5, #24]
   128b4:	str	r3, [sp, #16]
   128b8:	ldr	r3, [r5, #20]
   128bc:	str	r3, [sp, #12]
   128c0:	ldr	r3, [r5, #16]
   128c4:	str	r3, [sp, #8]
   128c8:	ldr	r3, [r5, #12]
   128cc:	str	r3, [sp, #4]
   128d0:	ldr	r3, [r5, #8]
   128d4:	str	r3, [sp]
   128d8:	ldr	r3, [r5, #4]
   128dc:	ldr	r2, [r5]
   128e0:	movw	r1, #32964	; 0x80c4
   128e4:	movt	r1, #1
   128e8:	mov	r0, r4
   128ec:	bl	10e8c <fprintf@plt>
   128f0:	b	12774 <argp_parse@@Base+0xfa0>
   128f4:	ldr	r3, [r5, #32]
   128f8:	str	r3, [sp, #24]
   128fc:	ldr	r3, [r5, #28]
   12900:	str	r3, [sp, #20]
   12904:	ldr	r3, [r5, #24]
   12908:	str	r3, [sp, #16]
   1290c:	ldr	r3, [r5, #20]
   12910:	str	r3, [sp, #12]
   12914:	ldr	r3, [r5, #16]
   12918:	str	r3, [sp, #8]
   1291c:	ldr	r3, [r5, #12]
   12920:	str	r3, [sp, #4]
   12924:	ldr	r3, [r5, #8]
   12928:	str	r3, [sp]
   1292c:	ldr	r3, [r5, #4]
   12930:	ldr	r2, [r5]
   12934:	movw	r1, #33012	; 0x80f4
   12938:	movt	r1, #1
   1293c:	mov	r0, r4
   12940:	bl	10e8c <fprintf@plt>
   12944:	b	12774 <argp_parse@@Base+0xfa0>
   12948:	ldr	r3, [r5, #32]
   1294c:	str	r3, [sp, #24]
   12950:	ldr	r3, [r5, #28]
   12954:	str	r3, [sp, #20]
   12958:	ldr	r3, [r5, #24]
   1295c:	str	r3, [sp, #16]
   12960:	ldr	r3, [r5, #20]
   12964:	str	r3, [sp, #12]
   12968:	ldr	r3, [r5, #16]
   1296c:	str	r3, [sp, #8]
   12970:	ldr	r3, [r5, #12]
   12974:	str	r3, [sp, #4]
   12978:	ldr	r3, [r5, #8]
   1297c:	str	r3, [sp]
   12980:	ldr	r3, [r5, #4]
   12984:	ldr	r2, [r5]
   12988:	movw	r1, #33064	; 0x8128
   1298c:	movt	r1, #1
   12990:	mov	r0, r4
   12994:	bl	10e8c <fprintf@plt>
   12998:	b	12774 <argp_parse@@Base+0xfa0>
   1299c:	strd	r4, [sp, #-12]!
   129a0:	str	lr, [sp, #8]
   129a4:	sub	sp, sp, #12
   129a8:	ldr	r5, [sp, #24]
   129ac:	ldr	ip, [r5]
   129b0:	cmp	ip, #0
   129b4:	beq	129ec <argp_parse@@Base+0x1218>
   129b8:	mov	lr, r5
   129bc:	mov	ip, #0
   129c0:	add	ip, ip, #1
   129c4:	ldr	r4, [lr, #4]!
   129c8:	cmp	r4, #0
   129cc:	bne	129c0 <argp_parse@@Base+0x11ec>
   129d0:	str	ip, [sp, #4]
   129d4:	str	r5, [sp]
   129d8:	bl	12694 <argp_parse@@Base+0xec0>
   129dc:	add	sp, sp, #12
   129e0:	ldrd	r4, [sp]
   129e4:	add	sp, sp, #8
   129e8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ec:	mov	ip, #0
   129f0:	b	129d0 <argp_parse@@Base+0x11fc>
   129f4:	strd	r4, [sp, #-12]!
   129f8:	str	lr, [sp, #8]
   129fc:	sub	sp, sp, #52	; 0x34
   12a00:	ldr	r5, [sp, #64]	; 0x40
   12a04:	add	r4, sp, #8
   12a08:	mov	ip, #0
   12a0c:	ldr	lr, [r5], #4
   12a10:	str	lr, [r4], #4
   12a14:	cmp	lr, #0
   12a18:	beq	12a28 <argp_parse@@Base+0x1254>
   12a1c:	add	ip, ip, #1
   12a20:	cmp	ip, #10
   12a24:	bne	12a0c <argp_parse@@Base+0x1238>
   12a28:	str	ip, [sp, #4]
   12a2c:	add	ip, sp, #8
   12a30:	str	ip, [sp]
   12a34:	bl	12694 <argp_parse@@Base+0xec0>
   12a38:	add	sp, sp, #52	; 0x34
   12a3c:	ldrd	r4, [sp]
   12a40:	add	sp, sp, #8
   12a44:	pop	{pc}		; (ldr pc, [sp], #4)
   12a48:	push	{r3}		; (str r3, [sp, #-4]!)
   12a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a50:	sub	sp, sp, #16
   12a54:	add	r3, sp, #24
   12a58:	str	r3, [sp, #12]
   12a5c:	str	r3, [sp]
   12a60:	ldr	r3, [sp, #20]
   12a64:	bl	129f4 <argp_parse@@Base+0x1220>
   12a68:	add	sp, sp, #16
   12a6c:	pop	{lr}		; (ldr lr, [sp], #4)
   12a70:	add	sp, sp, #4
   12a74:	bx	lr
   12a78:	str	r4, [sp, #-8]!
   12a7c:	str	lr, [sp, #4]
   12a80:	movw	r3, #37188	; 0x9144
   12a84:	movt	r3, #2
   12a88:	ldr	r1, [r3]
   12a8c:	mov	r0, #10
   12a90:	bl	10eec <fputc@plt>
   12a94:	movw	r1, #33124	; 0x8164
   12a98:	movt	r1, #1
   12a9c:	movw	r0, #33148	; 0x817c
   12aa0:	movt	r0, #1
   12aa4:	bl	10d48 <printf@plt>
   12aa8:	movw	r2, #33168	; 0x8190
   12aac:	movt	r2, #1
   12ab0:	movw	r1, #32428	; 0x7eac
   12ab4:	movt	r1, #1
   12ab8:	movw	r0, #33208	; 0x81b8
   12abc:	movt	r0, #1
   12ac0:	bl	10d48 <printf@plt>
   12ac4:	movw	r1, #33228	; 0x81cc
   12ac8:	movt	r1, #1
   12acc:	movw	r0, #33260	; 0x81ec
   12ad0:	movt	r0, #1
   12ad4:	bl	10d48 <printf@plt>
   12ad8:	ldr	r4, [sp]
   12adc:	add	sp, sp, #4
   12ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ae4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12ae8:	strd	r6, [sp, #8]
   12aec:	strd	r8, [sp, #16]
   12af0:	str	lr, [sp, #24]
   12af4:	sub	sp, sp, #116	; 0x74
   12af8:	mov	r3, #100	; 0x64
   12afc:	str	r3, [sp, #8]
   12b00:	bl	10e98 <__errno_location@plt>
   12b04:	mov	r6, r0
   12b08:	mov	r9, #0
   12b0c:	add	r8, sp, #12
   12b10:	mov	r5, r9
   12b14:	mov	r7, #1
   12b18:	b	12bb0 <argp_parse@@Base+0x13dc>
   12b1c:	cmp	r9, #0
   12b20:	beq	12b40 <argp_parse@@Base+0x136c>
   12b24:	mov	r0, r9
   12b28:	add	sp, sp, #116	; 0x74
   12b2c:	ldrd	r4, [sp]
   12b30:	ldrd	r6, [sp, #8]
   12b34:	ldrd	r8, [sp, #16]
   12b38:	add	sp, sp, #24
   12b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b40:	mov	r1, r0
   12b44:	mov	r0, r8
   12b48:	bl	17118 <argp_error@@Base+0x11f8>
   12b4c:	mov	r9, r0
   12b50:	b	12b24 <argp_parse@@Base+0x1350>
   12b54:	mov	r0, r9
   12b58:	bl	124ac <argp_parse@@Base+0xcd8>
   12b5c:	ldr	r2, [r6]
   12b60:	subs	r3, r2, #36	; 0x24
   12b64:	movne	r3, #1
   12b68:	cmp	r2, #0
   12b6c:	moveq	r3, #0
   12b70:	cmp	r2, #22
   12b74:	moveq	r3, #0
   12b78:	andne	r3, r3, #1
   12b7c:	cmp	r2, #12
   12b80:	moveq	r3, #0
   12b84:	andne	r3, r3, #1
   12b88:	cmp	r3, #0
   12b8c:	bne	12bf0 <argp_parse@@Base+0x141c>
   12b90:	str	r7, [sp]
   12b94:	mvn	r3, #0
   12b98:	mov	r2, r7
   12b9c:	add	r1, sp, #8
   12ba0:	mov	r0, r5
   12ba4:	bl	16f70 <argp_error@@Base+0x1050>
   12ba8:	mov	r9, r0
   12bac:	mov	r8, r0
   12bb0:	ldr	r4, [sp, #8]
   12bb4:	sub	r4, r4, #1
   12bb8:	strb	r5, [r8, r4]
   12bbc:	str	r5, [r6]
   12bc0:	mov	r1, r4
   12bc4:	mov	r0, r8
   12bc8:	bl	10df0 <gethostname@plt>
   12bcc:	cmp	r0, #0
   12bd0:	bne	12b54 <argp_parse@@Base+0x1380>
   12bd4:	mov	r0, r8
   12bd8:	bl	10e74 <strlen@plt>
   12bdc:	add	r0, r0, #1
   12be0:	cmp	r4, r0
   12be4:	bgt	12b1c <argp_parse@@Base+0x1348>
   12be8:	str	r5, [r6]
   12bec:	b	12b54 <argp_parse@@Base+0x1380>
   12bf0:	mov	r9, #0
   12bf4:	b	12b24 <argp_parse@@Base+0x1350>
   12bf8:	str	r4, [sp, #-8]!
   12bfc:	str	lr, [sp, #4]
   12c00:	cmp	r0, #0
   12c04:	beq	12c20 <argp_parse@@Base+0x144c>
   12c08:	bge	12c24 <argp_parse@@Base+0x1450>
   12c0c:	bl	10e98 <__errno_location@plt>
   12c10:	mov	r3, #12
   12c14:	str	r3, [r0]
   12c18:	mov	r0, #0
   12c1c:	b	12c28 <argp_parse@@Base+0x1454>
   12c20:	mov	r0, #1
   12c24:	bl	10e14 <malloc@plt>
   12c28:	ldr	r4, [sp]
   12c2c:	add	sp, sp, #4
   12c30:	pop	{pc}		; (ldr pc, [sp], #4)
   12c34:	ldr	r3, [r0]
   12c38:	ldr	r2, [r0, #4]
   12c3c:	cmp	r2, #0
   12c40:	beq	12c7c <argp_parse@@Base+0x14a8>
   12c44:	add	r3, r3, #24
   12c48:	b	12c58 <argp_parse@@Base+0x1484>
   12c4c:	add	r3, r3, #24
   12c50:	subs	r2, r2, #1
   12c54:	beq	12c74 <argp_parse@@Base+0x14a0>
   12c58:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12c5c:	cmp	r0, #0
   12c60:	beq	12c4c <argp_parse@@Base+0x1478>
   12c64:	ldr	r1, [r3, #-12]
   12c68:	tst	r1, #2
   12c6c:	bne	12c4c <argp_parse@@Base+0x1478>
   12c70:	bx	lr
   12c74:	mov	r0, #0
   12c78:	bx	lr
   12c7c:	mov	r0, #0
   12c80:	b	12c70 <argp_parse@@Base+0x149c>
   12c84:	ldr	r2, [r0, #8]
   12c88:	cmp	r2, #0
   12c8c:	beq	12c98 <argp_parse@@Base+0x14c4>
   12c90:	mov	r0, #0
   12c94:	bx	lr
   12c98:	ldr	r2, [r1, #8]
   12c9c:	cmp	r2, #0
   12ca0:	bne	12c90 <argp_parse@@Base+0x14bc>
   12ca4:	ldr	r2, [r0, #12]
   12ca8:	ldr	r1, [r1, #12]
   12cac:	orr	r2, r2, r1
   12cb0:	tst	r2, #16
   12cb4:	bne	12c90 <argp_parse@@Base+0x14bc>
   12cb8:	ldr	r1, [r0, #4]
   12cbc:	ldr	r2, [r3]
   12cc0:	add	r0, r2, #1
   12cc4:	str	r0, [r3]
   12cc8:	strb	r1, [r2]
   12ccc:	b	12c90 <argp_parse@@Base+0x14bc>
   12cd0:	str	r4, [sp, #-8]!
   12cd4:	str	lr, [sp, #4]
   12cd8:	mov	r4, r0
   12cdc:	bl	10e5c <__ctype_b_loc@plt>
   12ce0:	ldr	r3, [r4]
   12ce4:	ldrb	r2, [r3]
   12ce8:	ldr	ip, [r0]
   12cec:	lsl	r1, r2, #1
   12cf0:	ldrh	r1, [ip, r1]
   12cf4:	tst	r1, #8192	; 0x2000
   12cf8:	beq	12d08 <argp_parse@@Base+0x1534>
   12cfc:	add	r3, r3, #1
   12d00:	str	r3, [r4]
   12d04:	b	12ce0 <argp_parse@@Base+0x150c>
   12d08:	subs	ip, r2, #45	; 0x2d
   12d0c:	movne	ip, #1
   12d10:	cmp	r2, #0
   12d14:	beq	12d48 <argp_parse@@Base+0x1574>
   12d18:	tst	r1, #8
   12d1c:	bne	12d48 <argp_parse@@Base+0x1574>
   12d20:	add	r3, r3, #1
   12d24:	str	r3, [r4]
   12d28:	ldrb	r2, [r3]
   12d2c:	cmp	r2, #0
   12d30:	beq	12d48 <argp_parse@@Base+0x1574>
   12d34:	ldr	r1, [r0]
   12d38:	lsl	r2, r2, #1
   12d3c:	ldrh	r2, [r1, r2]
   12d40:	tst	r2, #8
   12d44:	beq	12d20 <argp_parse@@Base+0x154c>
   12d48:	mov	r0, ip
   12d4c:	ldr	r4, [sp]
   12d50:	add	sp, sp, #4
   12d54:	pop	{pc}		; (ldr pc, [sp], #4)
   12d58:	strd	r4, [sp, #-16]!
   12d5c:	str	r6, [sp, #8]
   12d60:	str	lr, [sp, #12]
   12d64:	mov	r5, r0
   12d68:	ldr	r0, [r0, #12]
   12d6c:	cmp	r0, #0
   12d70:	beq	12d88 <argp_parse@@Base+0x15b4>
   12d74:	ldr	r4, [r0, #24]
   12d78:	bl	124ac <argp_parse@@Base+0xcd8>
   12d7c:	mov	r0, r4
   12d80:	cmp	r4, #0
   12d84:	bne	12d74 <argp_parse@@Base+0x15a0>
   12d88:	ldr	r3, [r5, #4]
   12d8c:	cmp	r3, #0
   12d90:	bne	12dac <argp_parse@@Base+0x15d8>
   12d94:	mov	r0, r5
   12d98:	bl	124ac <argp_parse@@Base+0xcd8>
   12d9c:	ldrd	r4, [sp]
   12da0:	ldr	r6, [sp, #8]
   12da4:	add	sp, sp, #12
   12da8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dac:	ldr	r0, [r5]
   12db0:	bl	124ac <argp_parse@@Base+0xcd8>
   12db4:	ldr	r0, [r5, #8]
   12db8:	bl	124ac <argp_parse@@Base+0xcd8>
   12dbc:	b	12d94 <argp_parse@@Base+0x15c0>
   12dc0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12dc4:	strd	r6, [sp, #8]
   12dc8:	str	r8, [sp, #16]
   12dcc:	str	lr, [sp, #20]
   12dd0:	mov	r6, r1
   12dd4:	ldr	r7, [r0]
   12dd8:	ldr	r3, [r0, #4]
   12ddc:	sub	r8, r3, #1
   12de0:	cmp	r3, #0
   12de4:	bne	12e50 <argp_parse@@Base+0x167c>
   12de8:	mov	r7, #0
   12dec:	b	12e28 <argp_parse@@Base+0x1654>
   12df0:	sub	r5, r5, #1
   12df4:	add	r4, r4, #24
   12df8:	cmn	r5, #1
   12dfc:	beq	12e40 <argp_parse@@Base+0x166c>
   12e00:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12e04:	cmp	r0, #0
   12e08:	beq	12df0 <argp_parse@@Base+0x161c>
   12e0c:	ldr	r3, [r4, #-12]
   12e10:	tst	r3, #2
   12e14:	bne	12df0 <argp_parse@@Base+0x161c>
   12e18:	mov	r1, r6
   12e1c:	bl	10d30 <strcmp@plt>
   12e20:	cmp	r0, #0
   12e24:	bne	12df0 <argp_parse@@Base+0x161c>
   12e28:	mov	r0, r7
   12e2c:	ldrd	r4, [sp]
   12e30:	ldrd	r6, [sp, #8]
   12e34:	ldr	r8, [sp, #16]
   12e38:	add	sp, sp, #20
   12e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e40:	add	r7, r7, #28
   12e44:	sub	r8, r8, #1
   12e48:	cmn	r8, #1
   12e4c:	beq	12e6c <argp_parse@@Base+0x1698>
   12e50:	ldr	r4, [r7]
   12e54:	ldr	r3, [r7, #4]
   12e58:	sub	r5, r3, #1
   12e5c:	cmp	r3, #0
   12e60:	beq	12e40 <argp_parse@@Base+0x166c>
   12e64:	add	r4, r4, #24
   12e68:	b	12e00 <argp_parse@@Base+0x162c>
   12e6c:	mov	r7, #0
   12e70:	b	12e28 <argp_parse@@Base+0x1654>
   12e74:	strd	r4, [sp, #-16]!
   12e78:	str	r6, [sp, #8]
   12e7c:	str	lr, [sp, #12]
   12e80:	ldr	r4, [r0, #16]
   12e84:	ldr	r0, [r0, #8]
   12e88:	cmp	r0, #0
   12e8c:	moveq	r5, #0
   12e90:	beq	12ea4 <argp_parse@@Base+0x16d0>
   12e94:	mov	r1, #10
   12e98:	bl	10e80 <strchr@plt>
   12e9c:	adds	r5, r0, #0
   12ea0:	movne	r5, #1
   12ea4:	cmp	r4, #0
   12ea8:	beq	12ecc <argp_parse@@Base+0x16f8>
   12eac:	ldr	r0, [r4]
   12eb0:	cmp	r0, #0
   12eb4:	beq	12ecc <argp_parse@@Base+0x16f8>
   12eb8:	bl	12e74 <argp_parse@@Base+0x16a0>
   12ebc:	add	r5, r5, r0
   12ec0:	ldr	r0, [r4, #16]!
   12ec4:	cmp	r0, #0
   12ec8:	bne	12eb8 <argp_parse@@Base+0x16e4>
   12ecc:	mov	r0, r5
   12ed0:	ldrd	r4, [sp]
   12ed4:	ldr	r6, [sp, #8]
   12ed8:	add	sp, sp, #12
   12edc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ee0:	strd	r4, [sp, #-16]!
   12ee4:	str	r6, [sp, #8]
   12ee8:	str	lr, [sp, #12]
   12eec:	mov	r4, r0
   12ef0:	subs	r5, r2, #0
   12ef4:	beq	12f2c <argp_parse@@Base+0x1758>
   12ef8:	mov	r6, r1
   12efc:	ldr	r2, [r5, #20]
   12f00:	cmp	r2, #0
   12f04:	beq	12f2c <argp_parse@@Base+0x1758>
   12f08:	mov	r1, r3
   12f0c:	mov	r0, r5
   12f10:	bl	12328 <argp_parse@@Base+0xb54>
   12f14:	ldr	r3, [r5, #20]
   12f18:	mov	r2, r0
   12f1c:	mov	r1, r4
   12f20:	mov	r0, r6
   12f24:	blx	r3
   12f28:	mov	r4, r0
   12f2c:	mov	r0, r4
   12f30:	ldrd	r4, [sp]
   12f34:	ldr	r6, [sp, #8]
   12f38:	add	sp, sp, #12
   12f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f40:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12f44:	strd	r6, [sp, #8]
   12f48:	strd	r8, [sp, #16]
   12f4c:	strd	sl, [sp, #24]
   12f50:	str	lr, [sp, #32]
   12f54:	sub	sp, sp, #20
   12f58:	ldr	r4, [r0]
   12f5c:	ldr	r9, [r0, #8]
   12f60:	ldr	r6, [r0, #4]
   12f64:	cmp	r6, #0
   12f68:	beq	12fbc <argp_parse@@Base+0x17e8>
   12f6c:	str	r3, [sp, #12]
   12f70:	str	r2, [sp, #8]
   12f74:	str	r1, [sp, #4]
   12f78:	mov	fp, r4
   12f7c:	mov	sl, #0
   12f80:	b	1300c <argp_parse@@Base+0x1838>
   12f84:	and	r3, r5, #4
   12f88:	cmp	r3, #0
   12f8c:	moveq	fp, r4
   12f90:	tst	r5, #2
   12f94:	bne	12fb4 <argp_parse@@Base+0x17e0>
   12f98:	ldr	r3, [sp, #12]
   12f9c:	ldr	r2, [sp, #8]
   12fa0:	mov	r1, fp
   12fa4:	mov	r0, r4
   12fa8:	ldr	ip, [sp, #4]
   12fac:	blx	ip
   12fb0:	mov	r7, r0
   12fb4:	add	r9, r9, #1
   12fb8:	b	12fec <argp_parse@@Base+0x1818>
   12fbc:	mov	r7, #0
   12fc0:	mov	r0, r7
   12fc4:	add	sp, sp, #20
   12fc8:	ldrd	r4, [sp]
   12fcc:	ldrd	r6, [sp, #8]
   12fd0:	ldrd	r8, [sp, #16]
   12fd4:	ldrd	sl, [sp, #24]
   12fd8:	add	sp, sp, #32
   12fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fe0:	ldrb	r3, [r9]
   12fe4:	cmp	r3, r8
   12fe8:	beq	12f84 <argp_parse@@Base+0x17b0>
   12fec:	add	r4, r4, #24
   12ff0:	subs	r6, r6, #1
   12ff4:	movne	r3, #1
   12ff8:	moveq	r3, #0
   12ffc:	cmp	r7, #0
   13000:	movne	r3, #0
   13004:	cmp	r3, #0
   13008:	beq	12fc0 <argp_parse@@Base+0x17ec>
   1300c:	ldr	r5, [r4, #12]
   13010:	ands	r7, r5, #8
   13014:	movne	r7, sl
   13018:	bne	12fec <argp_parse@@Base+0x1818>
   1301c:	ldr	r8, [r4, #4]
   13020:	sub	r3, r8, #1
   13024:	cmp	r3, #254	; 0xfe
   13028:	bhi	12fec <argp_parse@@Base+0x1818>
   1302c:	bl	10e5c <__ctype_b_loc@plt>
   13030:	ldr	r2, [r0]
   13034:	lsl	r3, r8, #1
   13038:	ldrh	r3, [r2, r3]
   1303c:	tst	r3, #16384	; 0x4000
   13040:	bne	12fe0 <argp_parse@@Base+0x180c>
   13044:	b	12fec <argp_parse@@Base+0x1818>
   13048:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1304c:	strd	r6, [sp, #8]
   13050:	strd	r8, [sp, #16]
   13054:	strd	sl, [sp, #24]
   13058:	str	lr, [sp, #32]
   1305c:	add	fp, sp, #32
   13060:	sub	sp, sp, #20
   13064:	ldr	r5, [r0, #4]
   13068:	cmp	r5, #0
   1306c:	beq	13214 <argp_parse@@Base+0x1a40>
   13070:	str	r1, [fp, #-48]	; 0xffffffd0
   13074:	mov	r6, r0
   13078:	ldr	r0, [r0, #8]
   1307c:	bl	10e74 <strlen@plt>
   13080:	add	r3, r0, #8
   13084:	bic	r3, r3, #7
   13088:	sub	sp, sp, r3
   1308c:	mov	r8, sp
   13090:	str	r8, [fp, #-40]	; 0xffffffd8
   13094:	ldr	r4, [r6]
   13098:	movw	r7, #11396	; 0x2c84
   1309c:	movt	r7, #1
   130a0:	ldr	r2, [r4, #20]
   130a4:	sub	r3, fp, #40	; 0x28
   130a8:	ldr	r2, [r2, #24]
   130ac:	mov	r1, r7
   130b0:	mov	r0, r4
   130b4:	bl	12f40 <argp_parse@@Base+0x176c>
   130b8:	add	r4, r4, #28
   130bc:	subs	r5, r5, #1
   130c0:	bne	130a0 <argp_parse@@Base+0x18cc>
   130c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   130c8:	cmp	r3, r8
   130cc:	bhi	13140 <argp_parse@@Base+0x196c>
   130d0:	ldr	r4, [r6]
   130d4:	ldr	r5, [r6, #4]
   130d8:	cmp	r5, #0
   130dc:	beq	13214 <argp_parse@@Base+0x1a40>
   130e0:	movw	r7, #13324	; 0x340c
   130e4:	movt	r7, #1
   130e8:	ldr	r2, [r4, #20]
   130ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   130f0:	ldr	r2, [r2, #24]
   130f4:	mov	r1, r7
   130f8:	mov	r0, r4
   130fc:	bl	12f40 <argp_parse@@Base+0x176c>
   13100:	add	r4, r4, #28
   13104:	subs	r5, r5, #1
   13108:	bne	130e8 <argp_parse@@Base+0x1914>
   1310c:	ldr	r7, [r6]
   13110:	ldr	r8, [r6, #4]
   13114:	cmp	r8, #0
   13118:	beq	13214 <argp_parse@@Base+0x1a40>
   1311c:	add	r7, r7, #28
   13120:	movw	sl, #33540	; 0x8304
   13124:	movt	sl, #1
   13128:	movw	r9, #33524	; 0x82f4
   1312c:	movt	r9, #1
   13130:	movw	r3, #33552	; 0x8310
   13134:	movt	r3, #1
   13138:	str	r3, [fp, #-52]	; 0xffffffcc
   1313c:	b	131fc <argp_parse@@Base+0x1a28>
   13140:	add	r2, r3, #1
   13144:	str	r2, [fp, #-40]	; 0xffffffd8
   13148:	mov	r2, #0
   1314c:	strb	r2, [r3]
   13150:	mov	r2, r8
   13154:	movw	r1, #33516	; 0x82ec
   13158:	movt	r1, #1
   1315c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13160:	bl	179c8 <argp_error@@Base+0x1aa8>
   13164:	b	130d0 <argp_parse@@Base+0x18fc>
   13168:	tst	r1, #16
   1316c:	bne	131a0 <argp_parse@@Base+0x19cc>
   13170:	ldr	r3, [r6, #8]
   13174:	cmp	r3, #0
   13178:	bne	1318c <argp_parse@@Base+0x19b8>
   1317c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13184:	bl	179c8 <argp_error@@Base+0x1aa8>
   13188:	b	131a0 <argp_parse@@Base+0x19cc>
   1318c:	tst	r1, #1
   13190:	movne	r1, r9
   13194:	moveq	r1, sl
   13198:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1319c:	bl	179c8 <argp_error@@Base+0x1aa8>
   131a0:	add	r4, r4, #24
   131a4:	subs	r5, r5, #1
   131a8:	beq	131f0 <argp_parse@@Base+0x1a1c>
   131ac:	ldr	r2, [r4]
   131b0:	cmp	r2, #0
   131b4:	beq	131a0 <argp_parse@@Base+0x19cc>
   131b8:	ldr	r1, [r4, #12]
   131bc:	and	r3, r1, #4
   131c0:	cmp	r3, #0
   131c4:	moveq	r6, r4
   131c8:	tst	r1, #2
   131cc:	bne	131a0 <argp_parse@@Base+0x19cc>
   131d0:	ldr	r3, [r4, #8]
   131d4:	ldr	r0, [r6, #12]
   131d8:	orr	r1, r1, r0
   131dc:	cmp	r3, #0
   131e0:	beq	13168 <argp_parse@@Base+0x1994>
   131e4:	tst	r1, #16
   131e8:	beq	1318c <argp_parse@@Base+0x19b8>
   131ec:	b	131a0 <argp_parse@@Base+0x19cc>
   131f0:	add	r7, r7, #28
   131f4:	subs	r8, r8, #1
   131f8:	beq	13214 <argp_parse@@Base+0x1a40>
   131fc:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13200:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13204:	cmp	r5, #0
   13208:	beq	131f0 <argp_parse@@Base+0x1a1c>
   1320c:	mov	r6, r4
   13210:	b	131ac <argp_parse@@Base+0x19d8>
   13214:	sub	sp, fp, #32
   13218:	ldrd	r4, [sp]
   1321c:	ldrd	r6, [sp, #8]
   13220:	ldrd	r8, [sp, #16]
   13224:	ldrd	sl, [sp, #24]
   13228:	add	sp, sp, #32
   1322c:	pop	{pc}		; (ldr pc, [sp], #4)
   13230:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13234:	strd	r6, [sp, #8]
   13238:	str	r8, [sp, #16]
   1323c:	str	lr, [sp, #20]
   13240:	mov	r4, r0
   13244:	mov	r5, r1
   13248:	ldr	r3, [r0, #28]
   1324c:	ldr	r2, [r0, #24]
   13250:	sub	r3, r3, r2
   13254:	ldr	r2, [r0, #16]
   13258:	cmp	r3, r2
   1325c:	bhi	13278 <argp_parse@@Base+0x1aa4>
   13260:	ldr	r3, [r4, #20]
   13264:	cmp	r3, #0
   13268:	subge	r5, r5, r3
   1326c:	mov	r6, #32
   13270:	mov	r7, #1
   13274:	b	13294 <argp_parse@@Base+0x1ac0>
   13278:	bl	17350 <argp_error@@Base+0x1430>
   1327c:	b	13260 <argp_parse@@Base+0x1a8c>
   13280:	ldr	r3, [r4, #28]
   13284:	add	r2, r3, #1
   13288:	str	r2, [r4, #28]
   1328c:	strb	r6, [r3]
   13290:	sub	r5, r5, #1
   13294:	cmp	r5, #0
   13298:	ble	132c4 <argp_parse@@Base+0x1af0>
   1329c:	ldr	r2, [r4, #28]
   132a0:	ldr	r3, [r4, #32]
   132a4:	cmp	r2, r3
   132a8:	bcc	13280 <argp_parse@@Base+0x1aac>
   132ac:	mov	r1, r7
   132b0:	mov	r0, r4
   132b4:	bl	178c8 <argp_error@@Base+0x19a8>
   132b8:	cmp	r0, #0
   132bc:	bne	13280 <argp_parse@@Base+0x1aac>
   132c0:	b	13290 <argp_parse@@Base+0x1abc>
   132c4:	ldrd	r4, [sp]
   132c8:	ldrd	r6, [sp, #8]
   132cc:	ldr	r8, [sp, #16]
   132d0:	add	sp, sp, #20
   132d4:	pop	{pc}		; (ldr pc, [sp], #4)
   132d8:	strd	r4, [sp, #-16]!
   132dc:	str	r6, [sp, #8]
   132e0:	str	lr, [sp, #12]
   132e4:	ldr	r4, [r0, #12]
   132e8:	ands	r4, r4, #8
   132ec:	movne	r4, #0
   132f0:	bne	13320 <argp_parse@@Base+0x1b4c>
   132f4:	ldr	r5, [r0, #4]
   132f8:	sub	r3, r5, #1
   132fc:	cmp	r3, #254	; 0xfe
   13300:	bhi	13320 <argp_parse@@Base+0x1b4c>
   13304:	bl	10e5c <__ctype_b_loc@plt>
   13308:	ldr	r2, [r0]
   1330c:	lsl	r3, r5, #1
   13310:	ldrh	r3, [r2, r3]
   13314:	and	r3, r3, #16384	; 0x4000
   13318:	cmp	r3, #0
   1331c:	movne	r4, r5
   13320:	mov	r0, r4
   13324:	ldrd	r4, [sp]
   13328:	ldr	r6, [sp, #8]
   1332c:	add	sp, sp, #12
   13330:	pop	{pc}		; (ldr pc, [sp], #4)
   13334:	strd	r4, [sp, #-16]!
   13338:	str	r6, [sp, #8]
   1333c:	str	lr, [sp, #12]
   13340:	mov	r4, r0
   13344:	mov	r5, r1
   13348:	ldr	r3, [r0, #28]
   1334c:	ldr	r2, [r0, #24]
   13350:	sub	r3, r3, r2
   13354:	ldr	r2, [r0, #16]
   13358:	cmp	r3, r2
   1335c:	bhi	133ac <argp_parse@@Base+0x1bd8>
   13360:	ldr	r3, [r4, #20]
   13364:	cmp	r3, #0
   13368:	addge	r5, r5, r3
   1336c:	ldr	r3, [r4, #8]
   13370:	cmp	r5, r3
   13374:	bcc	133cc <argp_parse@@Base+0x1bf8>
   13378:	ldr	r2, [r4, #28]
   1337c:	ldr	r3, [r4, #32]
   13380:	cmp	r2, r3
   13384:	bcs	133b4 <argp_parse@@Base+0x1be0>
   13388:	ldr	r3, [r4, #28]
   1338c:	add	r2, r3, #1
   13390:	str	r2, [r4, #28]
   13394:	mov	r2, #10
   13398:	strb	r2, [r3]
   1339c:	ldrd	r4, [sp]
   133a0:	ldr	r6, [sp, #8]
   133a4:	add	sp, sp, #12
   133a8:	pop	{pc}		; (ldr pc, [sp], #4)
   133ac:	bl	17350 <argp_error@@Base+0x1430>
   133b0:	b	13360 <argp_parse@@Base+0x1b8c>
   133b4:	mov	r1, #1
   133b8:	mov	r0, r4
   133bc:	bl	178c8 <argp_error@@Base+0x19a8>
   133c0:	cmp	r0, #0
   133c4:	bne	13388 <argp_parse@@Base+0x1bb4>
   133c8:	b	1339c <argp_parse@@Base+0x1bc8>
   133cc:	ldr	r2, [r4, #28]
   133d0:	ldr	r3, [r4, #32]
   133d4:	cmp	r2, r3
   133d8:	bcs	133f4 <argp_parse@@Base+0x1c20>
   133dc:	ldr	r3, [r4, #28]
   133e0:	add	r2, r3, #1
   133e4:	str	r2, [r4, #28]
   133e8:	mov	r2, #32
   133ec:	strb	r2, [r3]
   133f0:	b	1339c <argp_parse@@Base+0x1bc8>
   133f4:	mov	r1, #1
   133f8:	mov	r0, r4
   133fc:	bl	178c8 <argp_error@@Base+0x19a8>
   13400:	cmp	r0, #0
   13404:	bne	133dc <argp_parse@@Base+0x1c08>
   13408:	b	1339c <argp_parse@@Base+0x1bc8>
   1340c:	strd	r4, [sp, #-16]!
   13410:	str	r6, [sp, #8]
   13414:	str	lr, [sp, #12]
   13418:	ldr	r5, [r0, #8]
   1341c:	cmp	r5, #0
   13420:	beq	13464 <argp_parse@@Base+0x1c90>
   13424:	ldr	r2, [r0, #12]
   13428:	ldr	r1, [r1, #12]
   1342c:	orr	r2, r2, r1
   13430:	tst	r2, #16
   13434:	bne	13470 <argp_parse@@Base+0x1c9c>
   13438:	mov	r6, r3
   1343c:	mov	r4, r0
   13440:	tst	r2, #1
   13444:	beq	13484 <argp_parse@@Base+0x1cb0>
   13448:	mov	r3, r5
   1344c:	ldr	r2, [r0, #4]
   13450:	movw	r1, #33560	; 0x8318
   13454:	movt	r1, #1
   13458:	mov	r0, r6
   1345c:	bl	179c8 <argp_error@@Base+0x1aa8>
   13460:	b	13470 <argp_parse@@Base+0x1c9c>
   13464:	ldr	r5, [r1, #8]
   13468:	cmp	r5, #0
   1346c:	bne	13424 <argp_parse@@Base+0x1c50>
   13470:	mov	r0, #0
   13474:	ldrd	r4, [sp]
   13478:	ldr	r6, [sp, #8]
   1347c:	add	sp, sp, #12
   13480:	pop	{pc}		; (ldr pc, [sp], #4)
   13484:	mov	r0, r5
   13488:	bl	10e74 <strlen@plt>
   1348c:	add	r1, r0, #6
   13490:	mov	r0, r6
   13494:	bl	13334 <argp_parse@@Base+0x1b60>
   13498:	mov	r3, r5
   1349c:	ldr	r2, [r4, #4]
   134a0:	movw	r1, #33572	; 0x8324
   134a4:	movt	r1, #1
   134a8:	mov	r0, r6
   134ac:	bl	179c8 <argp_error@@Base+0x1aa8>
   134b0:	b	13470 <argp_parse@@Base+0x1c9c>
   134b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   134b8:	strd	r6, [sp, #8]
   134bc:	strd	r8, [sp, #16]
   134c0:	strd	sl, [sp, #24]
   134c4:	str	lr, [sp, #32]
   134c8:	sub	sp, sp, #28
   134cc:	str	r1, [sp, #8]
   134d0:	mov	sl, r2
   134d4:	mov	r4, r3
   134d8:	ldr	r9, [sp, #64]	; 0x40
   134dc:	ldr	r6, [r2]
   134e0:	str	r6, [sp, #20]
   134e4:	ldr	r7, [r0, #16]
   134e8:	ldr	r2, [r0, #8]
   134ec:	mov	ip, r2
   134f0:	str	r2, [sp, #16]
   134f4:	mov	r3, r1
   134f8:	mov	r2, r0
   134fc:	mov	r1, #6
   13500:	movt	r1, #512	; 0x200
   13504:	mov	r0, ip
   13508:	bl	12ee0 <argp_parse@@Base+0x170c>
   1350c:	cmp	r0, #0
   13510:	str	r0, [sp, #12]
   13514:	beq	136a4 <argp_parse@@Base+0x1ed0>
   13518:	mov	r1, #10
   1351c:	bl	10d60 <strchrnul@plt>
   13520:	mov	r5, r0
   13524:	ldrb	r3, [r0]
   13528:	cmp	r3, #0
   1352c:	beq	13674 <argp_parse@@Base+0x1ea0>
   13530:	ldrb	fp, [r6]
   13534:	cmp	fp, #0
   13538:	ble	1366c <argp_parse@@Base+0x1e98>
   1353c:	mov	r6, #0
   13540:	add	r8, r0, #1
   13544:	mov	r1, #10
   13548:	mov	r0, r8
   1354c:	bl	10d60 <strchrnul@plt>
   13550:	add	r6, r6, #1
   13554:	cmp	r6, fp
   13558:	bne	13540 <argp_parse@@Base+0x1d6c>
   1355c:	mov	r5, r0
   13560:	ldr	r3, [sl]
   13564:	add	r3, r3, #1
   13568:	str	r3, [sl]
   1356c:	mov	fp, #1
   13570:	add	r1, r5, #1
   13574:	sub	r1, r1, r8
   13578:	mov	r0, r9
   1357c:	bl	13334 <argp_parse@@Base+0x1b60>
   13580:	sub	r6, r5, r8
   13584:	ldr	r3, [r9, #28]
   13588:	add	r3, r3, r6
   1358c:	ldr	r2, [r9, #32]
   13590:	cmp	r2, r3
   13594:	bcs	135ac <argp_parse@@Base+0x1dd8>
   13598:	mov	r1, r6
   1359c:	mov	r0, r9
   135a0:	bl	178c8 <argp_error@@Base+0x19a8>
   135a4:	cmp	r0, #0
   135a8:	beq	135c8 <argp_parse@@Base+0x1df4>
   135ac:	mov	r2, r6
   135b0:	mov	r1, r8
   135b4:	ldr	r0, [r9, #28]
   135b8:	bl	10d90 <memcpy@plt>
   135bc:	ldr	r3, [r9, #28]
   135c0:	add	r6, r3, r6
   135c4:	str	r6, [r9, #28]
   135c8:	ldr	r2, [sp, #16]
   135cc:	ldr	r3, [sp, #12]
   135d0:	cmp	r2, r3
   135d4:	bne	13680 <argp_parse@@Base+0x1eac>
   135d8:	cmp	r7, #0
   135dc:	beq	13618 <argp_parse@@Base+0x1e44>
   135e0:	ldr	r0, [r7]
   135e4:	cmp	r0, #0
   135e8:	beq	13618 <argp_parse@@Base+0x1e44>
   135ec:	mov	r3, r4
   135f0:	str	r9, [sp]
   135f4:	mov	r2, sl
   135f8:	ldr	r1, [sp, #8]
   135fc:	bl	134b4 <argp_parse@@Base+0x1ce0>
   13600:	clz	r3, r0
   13604:	lsr	r3, r3, #5
   13608:	ldr	r0, [r7, #16]!
   1360c:	cmp	r0, #0
   13610:	bne	135f0 <argp_parse@@Base+0x1e1c>
   13614:	mov	r4, r3
   13618:	cmp	r4, #0
   1361c:	moveq	fp, #0
   13620:	cmp	fp, #0
   13624:	beq	13648 <argp_parse@@Base+0x1e74>
   13628:	ldrb	r3, [r5]
   1362c:	cmp	r3, #0
   13630:	beq	1368c <argp_parse@@Base+0x1eb8>
   13634:	ldr	r2, [sp, #20]
   13638:	ldrb	r3, [r2]
   1363c:	add	r3, r3, #1
   13640:	strb	r3, [r2]
   13644:	mov	r4, #0
   13648:	clz	r0, r4
   1364c:	lsr	r0, r0, #5
   13650:	add	sp, sp, #28
   13654:	ldrd	r4, [sp]
   13658:	ldrd	r6, [sp, #8]
   1365c:	ldrd	r8, [sp, #16]
   13660:	ldrd	sl, [sp, #24]
   13664:	add	sp, sp, #32
   13668:	pop	{pc}		; (ldr pc, [sp], #4)
   1366c:	ldr	r8, [sp, #12]
   13670:	b	13560 <argp_parse@@Base+0x1d8c>
   13674:	ldr	r8, [sp, #12]
   13678:	mov	fp, #0
   1367c:	b	13570 <argp_parse@@Base+0x1d9c>
   13680:	mov	r0, r3
   13684:	bl	124ac <argp_parse@@Base+0xcd8>
   13688:	b	135d8 <argp_parse@@Base+0x1e04>
   1368c:	ldr	r2, [sp, #20]
   13690:	ldrb	r3, [r2]
   13694:	cmp	r3, #0
   13698:	movne	r3, #0
   1369c:	strbne	r3, [r2]
   136a0:	b	13648 <argp_parse@@Base+0x1e74>
   136a4:	cmp	r7, #0
   136a8:	beq	13648 <argp_parse@@Base+0x1e74>
   136ac:	ldr	r5, [sp, #12]
   136b0:	mov	fp, #0
   136b4:	b	135e0 <argp_parse@@Base+0x1e0c>
   136b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   136bc:	strd	r6, [sp, #8]
   136c0:	str	r8, [sp, #16]
   136c4:	str	lr, [sp, #20]
   136c8:	mov	r6, r0
   136cc:	mov	r4, r2
   136d0:	ldr	r3, [r2, #16]
   136d4:	mov	r2, r1
   136d8:	mov	r1, #3
   136dc:	movt	r1, #512	; 0x200
   136e0:	bl	12ee0 <argp_parse@@Base+0x170c>
   136e4:	subs	r5, r0, #0
   136e8:	beq	137fc <argp_parse@@Base+0x2028>
   136ec:	ldrb	r3, [r5]
   136f0:	cmp	r3, #0
   136f4:	beq	137f0 <argp_parse@@Base+0x201c>
   136f8:	ldr	r3, [r4, #8]
   136fc:	ldr	r3, [r3]
   13700:	cmp	r3, #0
   13704:	beq	13730 <argp_parse@@Base+0x1f5c>
   13708:	ldr	r7, [r4, #4]
   1370c:	ldr	r2, [r7, #28]
   13710:	ldr	r3, [r7, #32]
   13714:	cmp	r2, r3
   13718:	bcs	13820 <argp_parse@@Base+0x204c>
   1371c:	ldr	r3, [r7, #28]
   13720:	add	r2, r3, #1
   13724:	str	r2, [r7, #28]
   13728:	mov	r2, #10
   1372c:	strb	r2, [r3]
   13730:	movw	r8, #37116	; 0x90fc
   13734:	movt	r8, #2
   13738:	ldr	r1, [r8, #24]
   1373c:	ldr	r0, [r4, #4]
   13740:	bl	13230 <argp_parse@@Base+0x1a5c>
   13744:	ldr	r7, [r4, #4]
   13748:	ldr	r8, [r8, #24]
   1374c:	ldr	r3, [r7, #28]
   13750:	ldr	r2, [r7, #24]
   13754:	sub	r3, r3, r2
   13758:	ldr	r2, [r7, #16]
   1375c:	cmp	r3, r2
   13760:	bhi	13838 <argp_parse@@Base+0x2064>
   13764:	str	r8, [r7, #4]
   13768:	ldr	r7, [r4, #4]
   1376c:	movw	r3, #37116	; 0x90fc
   13770:	movt	r3, #2
   13774:	ldr	r8, [r3, #24]
   13778:	ldr	r3, [r7, #28]
   1377c:	ldr	r2, [r7, #24]
   13780:	sub	r3, r3, r2
   13784:	ldr	r2, [r7, #16]
   13788:	cmp	r3, r2
   1378c:	bhi	13844 <argp_parse@@Base+0x2070>
   13790:	str	r8, [r7, #12]
   13794:	mov	r0, r5
   13798:	bl	10e74 <strlen@plt>
   1379c:	subs	r7, r0, #0
   137a0:	bne	13850 <argp_parse@@Base+0x207c>
   137a4:	ldr	r7, [r4, #4]
   137a8:	ldr	r3, [r7, #28]
   137ac:	ldr	r2, [r7, #24]
   137b0:	sub	r3, r3, r2
   137b4:	ldr	r2, [r7, #16]
   137b8:	cmp	r3, r2
   137bc:	bhi	1389c <argp_parse@@Base+0x20c8>
   137c0:	mov	r3, #0
   137c4:	str	r3, [r7, #4]
   137c8:	ldr	r7, [r4, #4]
   137cc:	ldr	r2, [r7, #28]
   137d0:	ldr	r3, [r7, #32]
   137d4:	cmp	r2, r3
   137d8:	bcs	138a8 <argp_parse@@Base+0x20d4>
   137dc:	ldr	r3, [r7, #28]
   137e0:	add	r2, r3, #1
   137e4:	str	r2, [r7, #28]
   137e8:	mov	r2, #10
   137ec:	strb	r2, [r3]
   137f0:	ldr	r3, [r4, #8]
   137f4:	mov	r2, #1
   137f8:	str	r2, [r3, #4]
   137fc:	cmp	r6, r5
   13800:	beq	1380c <argp_parse@@Base+0x2038>
   13804:	mov	r0, r5
   13808:	bl	124ac <argp_parse@@Base+0xcd8>
   1380c:	ldrd	r4, [sp]
   13810:	ldrd	r6, [sp, #8]
   13814:	ldr	r8, [sp, #16]
   13818:	add	sp, sp, #20
   1381c:	pop	{pc}		; (ldr pc, [sp], #4)
   13820:	mov	r1, #1
   13824:	mov	r0, r7
   13828:	bl	178c8 <argp_error@@Base+0x19a8>
   1382c:	cmp	r0, #0
   13830:	bne	1371c <argp_parse@@Base+0x1f48>
   13834:	b	13730 <argp_parse@@Base+0x1f5c>
   13838:	mov	r0, r7
   1383c:	bl	17350 <argp_error@@Base+0x1430>
   13840:	b	13764 <argp_parse@@Base+0x1f90>
   13844:	mov	r0, r7
   13848:	bl	17350 <argp_error@@Base+0x1430>
   1384c:	b	13790 <argp_parse@@Base+0x1fbc>
   13850:	ldr	r8, [r4, #4]
   13854:	ldr	r3, [r8, #28]
   13858:	add	r3, r3, r7
   1385c:	ldr	r2, [r8, #32]
   13860:	cmp	r2, r3
   13864:	bcs	1387c <argp_parse@@Base+0x20a8>
   13868:	mov	r1, r7
   1386c:	mov	r0, r8
   13870:	bl	178c8 <argp_error@@Base+0x19a8>
   13874:	cmp	r0, #0
   13878:	beq	137a4 <argp_parse@@Base+0x1fd0>
   1387c:	mov	r2, r7
   13880:	mov	r1, r5
   13884:	ldr	r0, [r8, #28]
   13888:	bl	10d90 <memcpy@plt>
   1388c:	ldr	r3, [r8, #28]
   13890:	add	r7, r3, r7
   13894:	str	r7, [r8, #28]
   13898:	b	137a4 <argp_parse@@Base+0x1fd0>
   1389c:	mov	r0, r7
   138a0:	bl	17350 <argp_error@@Base+0x1430>
   138a4:	b	137c0 <argp_parse@@Base+0x1fec>
   138a8:	mov	r1, #1
   138ac:	mov	r0, r7
   138b0:	bl	178c8 <argp_error@@Base+0x19a8>
   138b4:	cmp	r0, #0
   138b8:	bne	137dc <argp_parse@@Base+0x2008>
   138bc:	b	137f0 <argp_parse@@Base+0x201c>
   138c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   138c4:	strd	r6, [sp, #8]
   138c8:	str	r8, [sp, #16]
   138cc:	str	lr, [sp, #20]
   138d0:	mov	r6, r0
   138d4:	mov	r4, r1
   138d8:	ldr	r3, [r1, #12]
   138dc:	cmp	r3, #0
   138e0:	beq	13a14 <argp_parse@@Base+0x2240>
   138e4:	ldr	r3, [r1, #8]
   138e8:	ldr	r7, [r3]
   138ec:	ldr	r2, [r1]
   138f0:	ldr	r5, [r2, #16]
   138f4:	ldr	r3, [r3, #4]
   138f8:	cmp	r3, #0
   138fc:	cmpne	r7, #0
   13900:	bne	139b4 <argp_parse@@Base+0x21e0>
   13904:	cmp	r5, #0
   13908:	beq	1398c <argp_parse@@Base+0x21b8>
   1390c:	ldr	r0, [r5]
   13910:	cmp	r0, #0
   13914:	beq	1398c <argp_parse@@Base+0x21b8>
   13918:	ldrb	r3, [r0]
   1391c:	cmp	r3, #0
   13920:	beq	1398c <argp_parse@@Base+0x21b8>
   13924:	cmp	r7, #0
   13928:	beq	13958 <argp_parse@@Base+0x2184>
   1392c:	ldr	r3, [r7, #16]
   13930:	cmp	r3, r5
   13934:	beq	1398c <argp_parse@@Base+0x21b8>
   13938:	cmp	r3, #0
   1393c:	beq	13958 <argp_parse@@Base+0x2184>
   13940:	ldr	r3, [r3, #12]
   13944:	cmp	r3, #0
   13948:	cmpne	r5, r3
   1394c:	bne	13940 <argp_parse@@Base+0x216c>
   13950:	cmp	r5, r3
   13954:	beq	1398c <argp_parse@@Base+0x21b8>
   13958:	ldr	r3, [r4, #4]
   1395c:	ldr	r7, [r3, #12]
   13960:	mov	r2, r4
   13964:	ldr	r1, [r5, #16]
   13968:	bl	136b8 <argp_parse@@Base+0x1ee4>
   1396c:	ldr	r5, [r4, #4]
   13970:	ldr	r3, [r5, #28]
   13974:	ldr	r2, [r5, #24]
   13978:	sub	r3, r3, r2
   1397c:	ldr	r2, [r5, #16]
   13980:	cmp	r3, r2
   13984:	bhi	13a08 <argp_parse@@Base+0x2234>
   13988:	str	r7, [r5, #12]
   1398c:	mov	r3, #0
   13990:	str	r3, [r4, #12]
   13994:	mov	r1, r6
   13998:	ldr	r0, [r4, #4]
   1399c:	bl	13230 <argp_parse@@Base+0x1a5c>
   139a0:	ldrd	r4, [sp]
   139a4:	ldrd	r6, [sp, #8]
   139a8:	ldr	r8, [sp, #16]
   139ac:	add	sp, sp, #20
   139b0:	pop	{pc}		; (ldr pc, [sp], #4)
   139b4:	ldr	r2, [r2, #12]
   139b8:	ldr	r3, [r7, #12]
   139bc:	cmp	r2, r3
   139c0:	beq	13904 <argp_parse@@Base+0x2130>
   139c4:	ldr	r8, [r1, #4]
   139c8:	ldr	r2, [r8, #28]
   139cc:	ldr	r3, [r8, #32]
   139d0:	cmp	r2, r3
   139d4:	bcs	139f0 <argp_parse@@Base+0x221c>
   139d8:	ldr	r3, [r8, #28]
   139dc:	add	r2, r3, #1
   139e0:	str	r2, [r8, #28]
   139e4:	mov	r2, #10
   139e8:	strb	r2, [r3]
   139ec:	b	13904 <argp_parse@@Base+0x2130>
   139f0:	mov	r1, #1
   139f4:	mov	r0, r8
   139f8:	bl	178c8 <argp_error@@Base+0x19a8>
   139fc:	cmp	r0, #0
   13a00:	bne	139d8 <argp_parse@@Base+0x2204>
   13a04:	b	13904 <argp_parse@@Base+0x2130>
   13a08:	mov	r0, r5
   13a0c:	bl	17350 <argp_error@@Base+0x1430>
   13a10:	b	13988 <argp_parse@@Base+0x21b4>
   13a14:	ldr	r5, [r1, #4]
   13a18:	ldr	r3, [r5, #28]
   13a1c:	add	r3, r3, #2
   13a20:	ldr	r2, [r5, #32]
   13a24:	cmp	r2, r3
   13a28:	bcs	13a40 <argp_parse@@Base+0x226c>
   13a2c:	mov	r1, #2
   13a30:	mov	r0, r5
   13a34:	bl	178c8 <argp_error@@Base+0x19a8>
   13a38:	cmp	r0, #0
   13a3c:	beq	13994 <argp_parse@@Base+0x21c0>
   13a40:	ldr	r2, [r5, #28]
   13a44:	movw	r3, #33584	; 0x8330
   13a48:	movt	r3, #1
   13a4c:	ldrh	r3, [r3]
   13a50:	strh	r3, [r2]
   13a54:	ldr	r3, [r5, #28]
   13a58:	add	r3, r3, #2
   13a5c:	str	r3, [r5, #28]
   13a60:	b	13994 <argp_parse@@Base+0x21c0>
   13a64:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13a68:	strd	r6, [sp, #8]
   13a6c:	strd	r8, [sp, #16]
   13a70:	strd	sl, [sp, #24]
   13a74:	str	lr, [sp, #32]
   13a78:	sub	sp, sp, #28
   13a7c:	mov	r8, r0
   13a80:	str	r1, [sp, #12]
   13a84:	str	r2, [sp, #8]
   13a88:	mov	fp, r3
   13a8c:	ldr	sl, [sp, #64]	; 0x40
   13a90:	ldr	r4, [sp, #68]	; 0x44
   13a94:	ldr	r6, [r0, #12]
   13a98:	ldr	r9, [r0, #16]
   13a9c:	cmp	r6, #0
   13aa0:	beq	13f1c <argp_parse@@Base+0x2748>
   13aa4:	mov	r5, r2
   13aa8:	mov	r1, #11
   13aac:	mov	r0, r6
   13ab0:	bl	10e80 <strchr@plt>
   13ab4:	cmp	r5, #0
   13ab8:	beq	13af8 <argp_parse@@Base+0x2324>
   13abc:	cmp	r0, #0
   13ac0:	addne	r6, r0, #1
   13ac4:	beq	13f64 <argp_parse@@Base+0x2790>
   13ac8:	ldr	r3, [r8, #20]
   13acc:	cmp	r3, #0
   13ad0:	beq	13f6c <argp_parse@@Base+0x2798>
   13ad4:	ldr	r1, [sp, #12]
   13ad8:	mov	r0, r8
   13adc:	bl	12328 <argp_parse@@Base+0xb54>
   13ae0:	str	r0, [sp, #16]
   13ae4:	ldr	r3, [r8, #20]
   13ae8:	mov	r7, #0
   13aec:	mov	r0, #2
   13af0:	movt	r0, #512	; 0x200
   13af4:	b	13b44 <argp_parse@@Base+0x2370>
   13af8:	cmp	r0, #0
   13afc:	beq	13f88 <argp_parse@@Base+0x27b4>
   13b00:	sub	r7, r0, r6
   13b04:	ldr	r3, [r8, #20]
   13b08:	cmp	r3, #0
   13b0c:	beq	13d2c <argp_parse@@Base+0x2558>
   13b10:	cmp	r7, #0
   13b14:	beq	13b28 <argp_parse@@Base+0x2354>
   13b18:	mov	r1, r7
   13b1c:	mov	r0, r6
   13b20:	bl	10d84 <strndup@plt>
   13b24:	mov	r6, r0
   13b28:	ldr	r1, [sp, #12]
   13b2c:	mov	r0, r8
   13b30:	bl	12328 <argp_parse@@Base+0xb54>
   13b34:	str	r0, [sp, #16]
   13b38:	ldr	r3, [r8, #20]
   13b3c:	mov	r0, #1
   13b40:	movt	r0, #512	; 0x200
   13b44:	ldr	r2, [sp, #16]
   13b48:	mov	r1, r6
   13b4c:	blx	r3
   13b50:	subs	r5, r0, #0
   13b54:	beq	13e38 <argp_parse@@Base+0x2664>
   13b58:	cmp	fp, #0
   13b5c:	bne	13d3c <argp_parse@@Base+0x2568>
   13b60:	cmp	r5, r6
   13b64:	movne	r3, #0
   13b68:	moveq	r3, #1
   13b6c:	cmp	r7, #0
   13b70:	moveq	r3, #0
   13b74:	cmp	r3, #0
   13b78:	beq	13d7c <argp_parse@@Base+0x25a8>
   13b7c:	ldr	r3, [r4, #28]
   13b80:	add	r3, r3, r7
   13b84:	ldr	r2, [r4, #32]
   13b88:	cmp	r2, r3
   13b8c:	bcs	13ba4 <argp_parse@@Base+0x23d0>
   13b90:	mov	r1, r7
   13b94:	mov	r0, r4
   13b98:	bl	178c8 <argp_error@@Base+0x19a8>
   13b9c:	cmp	r0, #0
   13ba0:	beq	13bc0 <argp_parse@@Base+0x23ec>
   13ba4:	mov	r2, r7
   13ba8:	mov	r1, r6
   13bac:	ldr	r0, [r4, #28]
   13bb0:	bl	10d90 <memcpy@plt>
   13bb4:	ldr	r3, [r4, #28]
   13bb8:	add	r3, r3, r7
   13bbc:	str	r3, [r4, #28]
   13bc0:	ldr	r3, [r4, #28]
   13bc4:	ldr	r2, [r4, #24]
   13bc8:	sub	r3, r3, r2
   13bcc:	ldr	r2, [r4, #16]
   13bd0:	cmp	r3, r2
   13bd4:	bhi	13ddc <argp_parse@@Base+0x2608>
   13bd8:	ldr	r3, [r4, #20]
   13bdc:	bic	r3, r3, r3, asr #31
   13be0:	ldr	r2, [r4, #4]
   13be4:	cmp	r2, r3
   13be8:	bcc	13de8 <argp_parse@@Base+0x2614>
   13bec:	cmp	r5, r6
   13bf0:	moveq	r5, #1
   13bf4:	bne	13e28 <argp_parse@@Base+0x2654>
   13bf8:	cmp	r6, #0
   13bfc:	cmpne	r7, #0
   13c00:	beq	13c18 <argp_parse@@Base+0x2444>
   13c04:	ldr	r3, [r8, #20]
   13c08:	cmp	r3, #0
   13c0c:	beq	13c9c <argp_parse@@Base+0x24c8>
   13c10:	mov	r0, r6
   13c14:	bl	124ac <argp_parse@@Base+0xcd8>
   13c18:	ldr	r3, [sp, #8]
   13c1c:	cmp	r3, #0
   13c20:	beq	13c9c <argp_parse@@Base+0x24c8>
   13c24:	ldr	r3, [r8, #20]
   13c28:	cmp	r3, #0
   13c2c:	beq	13c9c <argp_parse@@Base+0x24c8>
   13c30:	ldr	r2, [sp, #16]
   13c34:	mov	r1, #0
   13c38:	mov	r0, #4
   13c3c:	movt	r0, #512	; 0x200
   13c40:	blx	r3
   13c44:	subs	r6, r0, #0
   13c48:	beq	13c9c <argp_parse@@Base+0x24c8>
   13c4c:	orrs	r3, fp, r5
   13c50:	bne	13e40 <argp_parse@@Base+0x266c>
   13c54:	mov	r0, r6
   13c58:	bl	10e74 <strlen@plt>
   13c5c:	subs	r5, r0, #0
   13c60:	bne	13e80 <argp_parse@@Base+0x26ac>
   13c64:	mov	r0, r6
   13c68:	bl	124ac <argp_parse@@Base+0xcd8>
   13c6c:	ldr	r3, [r4, #28]
   13c70:	ldr	r2, [r4, #24]
   13c74:	sub	r3, r3, r2
   13c78:	ldr	r2, [r4, #16]
   13c7c:	cmp	r3, r2
   13c80:	bhi	13ec8 <argp_parse@@Base+0x26f4>
   13c84:	ldr	r3, [r4, #20]
   13c88:	bic	r3, r3, r3, asr #31
   13c8c:	ldr	r2, [r4, #4]
   13c90:	cmp	r2, r3
   13c94:	movcs	r5, #1
   13c98:	bcc	13ed4 <argp_parse@@Base+0x2700>
   13c9c:	cmp	r9, #0
   13ca0:	beq	13d0c <argp_parse@@Base+0x2538>
   13ca4:	ldr	r0, [r9]
   13ca8:	cmp	r0, #0
   13cac:	beq	13d0c <argp_parse@@Base+0x2538>
   13cb0:	clz	r6, sl
   13cb4:	lsr	r6, r6, #5
   13cb8:	cmp	sl, #0
   13cbc:	cmpne	r5, #0
   13cc0:	bne	13d0c <argp_parse@@Base+0x2538>
   13cc4:	orrs	r3, fp, r5
   13cc8:	str	r4, [sp, #4]
   13ccc:	str	sl, [sp]
   13cd0:	movne	r3, #1
   13cd4:	moveq	r3, #0
   13cd8:	ldr	r2, [sp, #8]
   13cdc:	ldr	r1, [sp, #12]
   13ce0:	bl	13a64 <argp_parse@@Base+0x2290>
   13ce4:	orr	r5, r5, r0
   13ce8:	ldr	r0, [r9, #16]
   13cec:	cmp	r0, #0
   13cf0:	beq	13d0c <argp_parse@@Base+0x2538>
   13cf4:	add	r9, r9, #16
   13cf8:	cmp	r5, #0
   13cfc:	movne	r3, r6
   13d00:	moveq	r3, #1
   13d04:	cmp	r3, #0
   13d08:	bne	13cc4 <argp_parse@@Base+0x24f0>
   13d0c:	mov	r0, r5
   13d10:	add	sp, sp, #28
   13d14:	ldrd	r4, [sp]
   13d18:	ldrd	r6, [sp, #8]
   13d1c:	ldrd	r8, [sp, #16]
   13d20:	ldrd	sl, [sp, #24]
   13d24:	add	sp, sp, #32
   13d28:	pop	{pc}		; (ldr pc, [sp], #4)
   13d2c:	mov	r5, r6
   13d30:	mov	r3, #0
   13d34:	str	r3, [sp, #16]
   13d38:	b	13b58 <argp_parse@@Base+0x2384>
   13d3c:	ldr	r2, [r4, #28]
   13d40:	ldr	r3, [r4, #32]
   13d44:	cmp	r2, r3
   13d48:	bcs	13d64 <argp_parse@@Base+0x2590>
   13d4c:	ldr	r3, [r4, #28]
   13d50:	add	r2, r3, #1
   13d54:	str	r2, [r4, #28]
   13d58:	mov	r2, #10
   13d5c:	strb	r2, [r3]
   13d60:	b	13b60 <argp_parse@@Base+0x238c>
   13d64:	mov	r1, #1
   13d68:	mov	r0, r4
   13d6c:	bl	178c8 <argp_error@@Base+0x19a8>
   13d70:	cmp	r0, #0
   13d74:	bne	13d4c <argp_parse@@Base+0x2578>
   13d78:	b	13b60 <argp_parse@@Base+0x238c>
   13d7c:	mov	r0, r5
   13d80:	bl	10e74 <strlen@plt>
   13d84:	subs	r3, r0, #0
   13d88:	str	r3, [sp, #20]
   13d8c:	beq	13bc0 <argp_parse@@Base+0x23ec>
   13d90:	ldr	r3, [r4, #28]
   13d94:	mov	r1, r0
   13d98:	add	r3, r3, r0
   13d9c:	ldr	r2, [r4, #32]
   13da0:	cmp	r2, r3
   13da4:	bcs	13db8 <argp_parse@@Base+0x25e4>
   13da8:	mov	r0, r4
   13dac:	bl	178c8 <argp_error@@Base+0x19a8>
   13db0:	cmp	r0, #0
   13db4:	beq	13bc0 <argp_parse@@Base+0x23ec>
   13db8:	ldr	r2, [sp, #20]
   13dbc:	mov	r1, r5
   13dc0:	ldr	r0, [r4, #28]
   13dc4:	bl	10d90 <memcpy@plt>
   13dc8:	ldr	r3, [r4, #28]
   13dcc:	ldr	r2, [sp, #20]
   13dd0:	add	r3, r3, r2
   13dd4:	str	r3, [r4, #28]
   13dd8:	b	13bc0 <argp_parse@@Base+0x23ec>
   13ddc:	mov	r0, r4
   13de0:	bl	17350 <argp_error@@Base+0x1430>
   13de4:	b	13bd8 <argp_parse@@Base+0x2404>
   13de8:	ldr	r2, [r4, #28]
   13dec:	ldr	r3, [r4, #32]
   13df0:	cmp	r2, r3
   13df4:	bcs	13e10 <argp_parse@@Base+0x263c>
   13df8:	ldr	r3, [r4, #28]
   13dfc:	add	r2, r3, #1
   13e00:	str	r2, [r4, #28]
   13e04:	mov	r2, #10
   13e08:	strb	r2, [r3]
   13e0c:	b	13bec <argp_parse@@Base+0x2418>
   13e10:	mov	r1, #1
   13e14:	mov	r0, r4
   13e18:	bl	178c8 <argp_error@@Base+0x19a8>
   13e1c:	cmp	r0, #0
   13e20:	bne	13df8 <argp_parse@@Base+0x2624>
   13e24:	b	13bec <argp_parse@@Base+0x2418>
   13e28:	mov	r0, r5
   13e2c:	bl	124ac <argp_parse@@Base+0xcd8>
   13e30:	mov	r5, #1
   13e34:	b	13bf8 <argp_parse@@Base+0x2424>
   13e38:	mov	r5, #0
   13e3c:	b	13bf8 <argp_parse@@Base+0x2424>
   13e40:	ldr	r2, [r4, #28]
   13e44:	ldr	r3, [r4, #32]
   13e48:	cmp	r2, r3
   13e4c:	bcs	13e68 <argp_parse@@Base+0x2694>
   13e50:	ldr	r3, [r4, #28]
   13e54:	add	r2, r3, #1
   13e58:	str	r2, [r4, #28]
   13e5c:	mov	r2, #10
   13e60:	strb	r2, [r3]
   13e64:	b	13c54 <argp_parse@@Base+0x2480>
   13e68:	mov	r1, #1
   13e6c:	mov	r0, r4
   13e70:	bl	178c8 <argp_error@@Base+0x19a8>
   13e74:	cmp	r0, #0
   13e78:	bne	13e50 <argp_parse@@Base+0x267c>
   13e7c:	b	13c54 <argp_parse@@Base+0x2480>
   13e80:	ldr	r3, [r4, #28]
   13e84:	add	r3, r3, r5
   13e88:	ldr	r2, [r4, #32]
   13e8c:	cmp	r2, r3
   13e90:	bcs	13ea8 <argp_parse@@Base+0x26d4>
   13e94:	mov	r1, r5
   13e98:	mov	r0, r4
   13e9c:	bl	178c8 <argp_error@@Base+0x19a8>
   13ea0:	cmp	r0, #0
   13ea4:	beq	13c64 <argp_parse@@Base+0x2490>
   13ea8:	mov	r2, r5
   13eac:	mov	r1, r6
   13eb0:	ldr	r0, [r4, #28]
   13eb4:	bl	10d90 <memcpy@plt>
   13eb8:	ldr	r3, [r4, #28]
   13ebc:	add	r5, r3, r5
   13ec0:	str	r5, [r4, #28]
   13ec4:	b	13c64 <argp_parse@@Base+0x2490>
   13ec8:	mov	r0, r4
   13ecc:	bl	17350 <argp_error@@Base+0x1430>
   13ed0:	b	13c84 <argp_parse@@Base+0x24b0>
   13ed4:	ldr	r2, [r4, #28]
   13ed8:	ldr	r3, [r4, #32]
   13edc:	cmp	r2, r3
   13ee0:	bcs	13f00 <argp_parse@@Base+0x272c>
   13ee4:	ldr	r3, [r4, #28]
   13ee8:	add	r2, r3, #1
   13eec:	str	r2, [r4, #28]
   13ef0:	mov	r2, #10
   13ef4:	strb	r2, [r3]
   13ef8:	mov	r5, #1
   13efc:	b	13c9c <argp_parse@@Base+0x24c8>
   13f00:	mov	r1, #1
   13f04:	mov	r0, r4
   13f08:	bl	178c8 <argp_error@@Base+0x19a8>
   13f0c:	cmp	r0, #0
   13f10:	bne	13ee4 <argp_parse@@Base+0x2710>
   13f14:	mov	r5, #1
   13f18:	b	13c9c <argp_parse@@Base+0x24c8>
   13f1c:	ldr	r3, [r0, #20]
   13f20:	cmp	r3, #0
   13f24:	moveq	r5, r6
   13f28:	beq	13f70 <argp_parse@@Base+0x279c>
   13f2c:	ldr	r1, [sp, #12]
   13f30:	mov	r0, r8
   13f34:	bl	12328 <argp_parse@@Base+0xb54>
   13f38:	str	r0, [sp, #16]
   13f3c:	ldr	r3, [r8, #20]
   13f40:	mov	r7, #0
   13f44:	mov	r0, #2
   13f48:	movt	r0, #512	; 0x200
   13f4c:	mov	r2, #1
   13f50:	movt	r2, #512	; 0x200
   13f54:	ldr	r1, [sp, #8]
   13f58:	cmp	r1, r7
   13f5c:	moveq	r0, r2
   13f60:	b	13b44 <argp_parse@@Base+0x2370>
   13f64:	mov	r6, r0
   13f68:	b	13ac8 <argp_parse@@Base+0x22f4>
   13f6c:	mov	r5, r6
   13f70:	cmp	r5, #0
   13f74:	streq	r5, [sp, #16]
   13f78:	beq	13c18 <argp_parse@@Base+0x2444>
   13f7c:	mov	r7, #0
   13f80:	str	r7, [sp, #16]
   13f84:	b	13b58 <argp_parse@@Base+0x2384>
   13f88:	ldr	r3, [r8, #20]
   13f8c:	cmp	r3, #0
   13f90:	moveq	r5, r6
   13f94:	beq	13f70 <argp_parse@@Base+0x279c>
   13f98:	ldr	r1, [sp, #12]
   13f9c:	mov	r0, r8
   13fa0:	bl	12328 <argp_parse@@Base+0xb54>
   13fa4:	str	r0, [sp, #16]
   13fa8:	ldr	r3, [r8, #20]
   13fac:	mov	r7, #0
   13fb0:	mov	r0, #1
   13fb4:	movt	r0, #512	; 0x200
   13fb8:	b	13b44 <argp_parse@@Base+0x2370>
   13fbc:	ldr	r3, [r0, #12]
   13fc0:	ldr	r2, [r1, #12]
   13fc4:	cmp	r3, r2
   13fc8:	beq	14038 <argp_parse@@Base+0x2864>
   13fcc:	strd	r4, [sp, #-16]!
   13fd0:	str	r6, [sp, #8]
   13fd4:	str	lr, [sp, #12]
   13fd8:	mov	r5, r1
   13fdc:	mov	r4, r0
   13fe0:	mov	r1, r2
   13fe4:	mov	r0, r3
   13fe8:	bl	13fbc <argp_parse@@Base+0x27e8>
   13fec:	subs	r3, r0, #0
   13ff0:	bne	14024 <argp_parse@@Base+0x2850>
   13ff4:	ldr	r0, [r4, #8]
   13ff8:	ldr	r3, [r5, #8]
   13ffc:	mvn	r2, r3
   14000:	lsr	r2, r2, #31
   14004:	cmp	r2, r0, lsr #31
   14008:	subne	r3, r0, r3
   1400c:	subeq	r3, r3, r0
   14010:	cmp	r3, #0
   14014:	bne	14024 <argp_parse@@Base+0x2850>
   14018:	ldr	r3, [r5, #4]
   1401c:	ldr	r0, [r4, #4]
   14020:	sub	r3, r3, r0
   14024:	mov	r0, r3
   14028:	ldrd	r4, [sp]
   1402c:	ldr	r6, [sp, #8]
   14030:	add	sp, sp, #12
   14034:	pop	{pc}		; (ldr pc, [sp], #4)
   14038:	ldr	r2, [r0, #8]
   1403c:	ldr	r3, [r1, #8]
   14040:	mvn	ip, r3
   14044:	lsr	ip, ip, #31
   14048:	cmp	ip, r2, lsr #31
   1404c:	subne	r3, r2, r3
   14050:	subeq	r3, r3, r2
   14054:	cmp	r3, #0
   14058:	bne	14068 <argp_parse@@Base+0x2894>
   1405c:	ldr	r3, [r1, #4]
   14060:	ldr	r0, [r0, #4]
   14064:	sub	r3, r3, r0
   14068:	mov	r0, r3
   1406c:	bx	lr
   14070:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14074:	strd	r6, [sp, #8]
   14078:	str	r8, [sp, #16]
   1407c:	str	lr, [sp, #20]
   14080:	sub	sp, sp, #8
   14084:	ldr	lr, [r0, #16]
   14088:	cmp	lr, #0
   1408c:	movne	r3, lr
   14090:	bne	140a0 <argp_parse@@Base+0x28cc>
   14094:	ldr	ip, [r0, #12]
   14098:	b	140b0 <argp_parse@@Base+0x28dc>
   1409c:	mov	r3, r2
   140a0:	ldr	r2, [r3, #12]
   140a4:	cmp	r2, #0
   140a8:	bne	1409c <argp_parse@@Base+0x28c8>
   140ac:	ldr	ip, [r3, #8]
   140b0:	ldr	r5, [r1, #16]
   140b4:	cmp	r5, #0
   140b8:	movne	r3, r5
   140bc:	bne	140cc <argp_parse@@Base+0x28f8>
   140c0:	ldr	r4, [r1, #12]
   140c4:	b	140dc <argp_parse@@Base+0x2908>
   140c8:	mov	r3, r2
   140cc:	ldr	r2, [r3, #12]
   140d0:	cmp	r2, #0
   140d4:	bne	140c8 <argp_parse@@Base+0x28f4>
   140d8:	ldr	r4, [r3, #8]
   140dc:	mvn	r3, r4
   140e0:	lsr	r3, r3, #31
   140e4:	cmp	r3, ip, lsr #31
   140e8:	subne	r4, ip, r4
   140ec:	subeq	r4, r4, ip
   140f0:	cmp	r4, #0
   140f4:	bne	14234 <argp_parse@@Base+0x2a60>
   140f8:	adds	r4, r5, #0
   140fc:	movne	r4, #1
   14100:	cmp	lr, #0
   14104:	rsbeq	r4, r4, #0
   14108:	rsbne	r4, r4, #1
   1410c:	cmp	r4, #0
   14110:	bne	14234 <argp_parse@@Base+0x2a60>
   14114:	mov	r7, r1
   14118:	mov	r6, r0
   1411c:	cmp	lr, #0
   14120:	beq	141a0 <argp_parse@@Base+0x29cc>
   14124:	ldr	r1, [lr, #20]
   14128:	ldr	r2, [r5, #20]
   1412c:	cmp	r1, r2
   14130:	ble	1415c <argp_parse@@Base+0x2988>
   14134:	ldr	lr, [lr, #12]
   14138:	ldr	r3, [lr, #20]
   1413c:	cmp	r2, r3
   14140:	blt	14134 <argp_parse@@Base+0x2960>
   14144:	mov	r1, r5
   14148:	mov	r0, lr
   1414c:	bl	13fbc <argp_parse@@Base+0x27e8>
   14150:	subs	r4, r0, #0
   14154:	moveq	r4, #1
   14158:	b	14234 <argp_parse@@Base+0x2a60>
   1415c:	cmp	r1, r2
   14160:	bge	1418c <argp_parse@@Base+0x29b8>
   14164:	ldr	r5, [r5, #12]
   14168:	ldr	r3, [r5, #20]
   1416c:	cmp	r1, r3
   14170:	blt	14164 <argp_parse@@Base+0x2990>
   14174:	mov	r1, r5
   14178:	mov	r0, lr
   1417c:	bl	13fbc <argp_parse@@Base+0x27e8>
   14180:	subs	r4, r0, #0
   14184:	mvneq	r4, #0
   14188:	b	14234 <argp_parse@@Base+0x2a60>
   1418c:	mov	r1, r5
   14190:	mov	r0, lr
   14194:	bl	13fbc <argp_parse@@Base+0x27e8>
   14198:	subs	r4, r0, #0
   1419c:	bne	14234 <argp_parse@@Base+0x2a60>
   141a0:	ldr	r3, [r6, #12]
   141a4:	ldr	r4, [r7, #12]
   141a8:	mvn	r2, r4
   141ac:	lsr	r2, r2, #31
   141b0:	cmp	r2, r3, lsr #31
   141b4:	subne	r4, r3, r4
   141b8:	subeq	r4, r4, r3
   141bc:	cmp	r4, #0
   141c0:	bne	14234 <argp_parse@@Base+0x2a60>
   141c4:	mov	r0, r6
   141c8:	bl	12c34 <argp_parse@@Base+0x1460>
   141cc:	mov	r5, r0
   141d0:	str	r0, [sp]
   141d4:	mov	r0, r7
   141d8:	bl	12c34 <argp_parse@@Base+0x1460>
   141dc:	str	r0, [sp, #4]
   141e0:	ldr	r3, [r6]
   141e4:	ldr	r0, [r3, #12]
   141e8:	ubfx	r0, r0, #3, #1
   141ec:	cmp	r5, #0
   141f0:	moveq	r0, #0
   141f4:	cmp	r0, #0
   141f8:	bne	14250 <argp_parse@@Base+0x2a7c>
   141fc:	ldr	r3, [r7]
   14200:	ldr	r3, [r3, #12]
   14204:	tst	r3, #8
   14208:	beq	14288 <argp_parse@@Base+0x2ab4>
   1420c:	ldr	r3, [sp, #4]
   14210:	cmp	r3, #0
   14214:	beq	14288 <argp_parse@@Base+0x2ab4>
   14218:	add	r0, sp, #4
   1421c:	bl	12cd0 <argp_parse@@Base+0x14fc>
   14220:	adds	r3, r0, #0
   14224:	movne	r3, #1
   14228:	mov	r0, r4
   1422c:	subs	r4, r0, r3
   14230:	beq	14288 <argp_parse@@Base+0x2ab4>
   14234:	mov	r0, r4
   14238:	add	sp, sp, #8
   1423c:	ldrd	r4, [sp]
   14240:	ldrd	r6, [sp, #8]
   14244:	ldr	r8, [sp, #16]
   14248:	add	sp, sp, #20
   1424c:	pop	{pc}		; (ldr pc, [sp], #4)
   14250:	mov	r0, sp
   14254:	bl	12cd0 <argp_parse@@Base+0x14fc>
   14258:	adds	r0, r0, #0
   1425c:	movne	r0, #1
   14260:	ldr	r3, [r7]
   14264:	ldr	r3, [r3, #12]
   14268:	ands	r3, r3, #8
   1426c:	beq	1422c <argp_parse@@Base+0x2a58>
   14270:	ldr	r3, [sp, #4]
   14274:	cmp	r3, #0
   14278:	moveq	r3, r4
   1427c:	beq	1422c <argp_parse@@Base+0x2a58>
   14280:	mov	r4, r0
   14284:	b	14218 <argp_parse@@Base+0x2a44>
   14288:	ldr	r2, [r6, #20]
   1428c:	movw	r4, #13016	; 0x32d8
   14290:	movt	r4, #1
   14294:	mov	r3, #0
   14298:	ldr	r2, [r2, #24]
   1429c:	mov	r1, r4
   142a0:	mov	r0, r6
   142a4:	bl	12f40 <argp_parse@@Base+0x176c>
   142a8:	mov	r5, r0
   142ac:	uxtb	r8, r0
   142b0:	ldr	r2, [r7, #20]
   142b4:	mov	r3, #0
   142b8:	ldr	r2, [r2, #24]
   142bc:	mov	r1, r4
   142c0:	mov	r0, r7
   142c4:	bl	12f40 <argp_parse@@Base+0x176c>
   142c8:	uxtb	r7, r0
   142cc:	cmp	r8, #0
   142d0:	movne	r5, r8
   142d4:	bne	142e8 <argp_parse@@Base+0x2b14>
   142d8:	ldr	r3, [sp]
   142dc:	cmp	r3, #0
   142e0:	ldrbne	r5, [r3]
   142e4:	moveq	r5, #0
   142e8:	cmp	r7, #0
   142ec:	uxtbne	r6, r0
   142f0:	bne	14304 <argp_parse@@Base+0x2b30>
   142f4:	ldr	r3, [sp, #4]
   142f8:	cmp	r3, #0
   142fc:	ldrbne	r6, [r3]
   14300:	moveq	r6, #0
   14304:	bl	10e38 <__ctype_tolower_loc@plt>
   14308:	ldr	r3, [r0]
   1430c:	ldr	r4, [r3, r5, lsl #2]
   14310:	ldr	r3, [r3, r6, lsl #2]
   14314:	subs	r4, r4, r3
   14318:	bne	14234 <argp_parse@@Base+0x2a60>
   1431c:	subs	r4, r6, r5
   14320:	bne	14234 <argp_parse@@Base+0x2a60>
   14324:	adds	r4, r7, #0
   14328:	movne	r4, #1
   1432c:	cmp	r8, #0
   14330:	rsbeq	r4, r4, #0
   14334:	rsbne	r4, r4, #1
   14338:	cmp	r4, #0
   1433c:	bne	14234 <argp_parse@@Base+0x2a60>
   14340:	cmp	r8, #0
   14344:	bne	14234 <argp_parse@@Base+0x2a60>
   14348:	ldr	r0, [sp]
   1434c:	ldr	r1, [sp, #4]
   14350:	adds	r4, r1, #0
   14354:	movne	r4, #1
   14358:	cmp	r0, #0
   1435c:	rsbeq	r4, r4, #0
   14360:	rsbne	r4, r4, #1
   14364:	cmp	r4, #0
   14368:	bne	14234 <argp_parse@@Base+0x2a60>
   1436c:	cmp	r0, #0
   14370:	beq	14234 <argp_parse@@Base+0x2a60>
   14374:	bl	10dc0 <strcasecmp@plt>
   14378:	mov	r4, r0
   1437c:	b	14234 <argp_parse@@Base+0x2a60>
   14380:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14384:	strd	r6, [sp, #8]
   14388:	strd	r8, [sp, #16]
   1438c:	strd	sl, [sp, #24]
   14390:	str	lr, [sp, #32]
   14394:	sub	sp, sp, #52	; 0x34
   14398:	str	r0, [sp, #12]
   1439c:	str	r1, [sp, #4]
   143a0:	ldr	fp, [r0, #16]
   143a4:	ldr	r4, [r0]
   143a8:	mov	r0, #16
   143ac:	bl	12bf8 <argp_parse@@Base+0x1424>
   143b0:	subs	sl, r0, #0
   143b4:	beq	143e4 <argp_parse@@Base+0x2c10>
   143b8:	mov	r3, #0
   143bc:	str	r3, [sl, #4]
   143c0:	str	r3, [sl, #12]
   143c4:	cmp	r4, r3
   143c8:	beq	145f0 <argp_parse@@Base+0x2e1c>
   143cc:	ldr	r3, [r4, #12]
   143d0:	tst	r3, #4
   143d4:	bne	14404 <argp_parse@@Base+0x2c30>
   143d8:	add	r5, r4, #24
   143dc:	mov	r6, #0
   143e0:	b	14428 <argp_parse@@Base+0x2c54>
   143e4:	movw	r3, #33348	; 0x8244
   143e8:	movt	r3, #1
   143ec:	movw	r2, #450	; 0x1c2
   143f0:	movw	r1, #33588	; 0x8334
   143f4:	movt	r1, #1
   143f8:	movw	r0, #33600	; 0x8340
   143fc:	movt	r0, #1
   14400:	bl	10f4c <__assert_fail@plt>
   14404:	movw	r3, #33348	; 0x8244
   14408:	movt	r3, #1
   1440c:	mov	r2, #460	; 0x1cc
   14410:	movw	r1, #33588	; 0x8334
   14414:	movt	r1, #1
   14418:	movw	r0, #33604	; 0x8344
   1441c:	movt	r0, #1
   14420:	bl	10f4c <__assert_fail@plt>
   14424:	add	r5, r5, #24
   14428:	mov	r3, r5
   1442c:	ldr	r2, [r5, #-20]	; 0xffffffec
   14430:	cmp	r2, #0
   14434:	bne	14444 <argp_parse@@Base+0x2c70>
   14438:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1443c:	cmp	r2, #0
   14440:	beq	14494 <argp_parse@@Base+0x2cc0>
   14444:	ldr	r2, [r3, #-12]
   14448:	tst	r2, #4
   1444c:	bne	1445c <argp_parse@@Base+0x2c88>
   14450:	ldr	r2, [sl, #4]
   14454:	add	r2, r2, #1
   14458:	str	r2, [sl, #4]
   1445c:	ldr	r2, [r3, #-12]
   14460:	tst	r2, #8
   14464:	bne	14424 <argp_parse@@Base+0x2c50>
   14468:	ldr	r7, [r3, #-20]	; 0xffffffec
   1446c:	sub	r3, r7, #1
   14470:	cmp	r3, #254	; 0xfe
   14474:	bhi	14424 <argp_parse@@Base+0x2c50>
   14478:	bl	10e5c <__ctype_b_loc@plt>
   1447c:	ldr	r3, [r0]
   14480:	lsl	r7, r7, #1
   14484:	ldrh	r3, [r3, r7]
   14488:	tst	r3, #16384	; 0x4000
   1448c:	addne	r6, r6, #1
   14490:	b	14424 <argp_parse@@Base+0x2c50>
   14494:	ldr	r2, [r5, #-8]
   14498:	cmp	r2, #0
   1449c:	bne	14444 <argp_parse@@Base+0x2c70>
   144a0:	ldr	r9, [r5, #-4]
   144a4:	cmp	r9, #0
   144a8:	bne	14444 <argp_parse@@Base+0x2c70>
   144ac:	ldr	r0, [sl, #4]
   144b0:	rsb	r0, r0, r0, lsl #3
   144b4:	lsl	r0, r0, #2
   144b8:	bl	12bf8 <argp_parse@@Base+0x1424>
   144bc:	str	r0, [sl]
   144c0:	add	r0, r6, #1
   144c4:	bl	12bf8 <argp_parse@@Base+0x1424>
   144c8:	mov	r5, r0
   144cc:	str	r0, [sl, #8]
   144d0:	ldr	r7, [sl]
   144d4:	cmp	r0, #0
   144d8:	cmpne	r7, #0
   144dc:	beq	14504 <argp_parse@@Base+0x2d30>
   144e0:	movw	r3, #37449	; 0x9249
   144e4:	movt	r3, #2340	; 0x924
   144e8:	ldr	r2, [sl, #4]
   144ec:	cmp	r2, r3
   144f0:	bhi	14524 <argp_parse@@Base+0x2d50>
   144f4:	add	r7, r7, #28
   144f8:	str	fp, [sp, #8]
   144fc:	ldr	fp, [sp, #12]
   14500:	b	14570 <argp_parse@@Base+0x2d9c>
   14504:	movw	r3, #33348	; 0x8244
   14508:	movt	r3, #1
   1450c:	movw	r2, #474	; 0x1da
   14510:	movw	r1, #33588	; 0x8334
   14514:	movt	r1, #1
   14518:	movw	r0, #33620	; 0x8354
   1451c:	movt	r0, #1
   14520:	bl	10f4c <__assert_fail@plt>
   14524:	movw	r3, #33348	; 0x8244
   14528:	movt	r3, #1
   1452c:	mov	r2, #476	; 0x1dc
   14530:	movw	r1, #33588	; 0x8334
   14534:	movt	r1, #1
   14538:	movw	r0, #33656	; 0x8378
   1453c:	movt	r0, #1
   14540:	bl	10f4c <__assert_fail@plt>
   14544:	ldr	r3, [r4, #4]
   14548:	cmp	r3, #0
   1454c:	addeq	r9, r9, #1
   14550:	b	145b8 <argp_parse@@Base+0x2de4>
   14554:	ldr	r3, [r4, #16]
   14558:	cmp	r3, #0
   1455c:	bne	14990 <argp_parse@@Base+0x31bc>
   14560:	ldr	r3, [r4, #20]
   14564:	cmp	r3, #0
   14568:	bne	14990 <argp_parse@@Base+0x31bc>
   1456c:	add	r7, r7, #28
   14570:	ldr	r3, [r4, #4]
   14574:	cmp	r3, #0
   14578:	bne	14588 <argp_parse@@Base+0x2db4>
   1457c:	ldr	r3, [r4]
   14580:	cmp	r3, #0
   14584:	beq	145cc <argp_parse@@Base+0x2df8>
   14588:	mov	r8, r7
   1458c:	str	r4, [r7, #-28]	; 0xffffffe4
   14590:	mov	r3, #0
   14594:	str	r3, [r7, #-24]	; 0xffffffe8
   14598:	str	r5, [r7, #-20]	; 0xffffffec
   1459c:	ldr	r3, [r4, #20]
   145a0:	cmp	r3, #0
   145a4:	movne	r9, r3
   145a8:	bne	145b8 <argp_parse@@Base+0x2de4>
   145ac:	ldr	r3, [r4]
   145b0:	cmp	r3, #0
   145b4:	beq	14544 <argp_parse@@Base+0x2d70>
   145b8:	str	r9, [r8, #-16]
   145bc:	ldr	r3, [sp, #4]
   145c0:	str	r3, [r8, #-12]
   145c4:	str	fp, [r8, #-8]
   145c8:	b	1499c <argp_parse@@Base+0x31c8>
   145cc:	ldr	r3, [r4, #16]
   145d0:	cmp	r3, #0
   145d4:	bne	14588 <argp_parse@@Base+0x2db4>
   145d8:	ldr	r3, [r4, #20]
   145dc:	cmp	r3, #0
   145e0:	bne	14588 <argp_parse@@Base+0x2db4>
   145e4:	ldr	fp, [sp, #8]
   145e8:	mov	r3, #0
   145ec:	strb	r3, [r5]
   145f0:	cmp	fp, #0
   145f4:	beq	14a14 <argp_parse@@Base+0x3240>
   145f8:	ldr	r3, [fp]
   145fc:	cmp	r3, #0
   14600:	beq	14a14 <argp_parse@@Base+0x3240>
   14604:	movw	r3, #37449	; 0x9249
   14608:	movt	r3, #2340	; 0x924
   1460c:	str	r3, [sp, #32]
   14610:	b	14684 <argp_parse@@Base+0x2eb0>
   14614:	ldr	r1, [sp, #4]
   14618:	b	146fc <argp_parse@@Base+0x2f28>
   1461c:	mov	r3, r2
   14620:	ldr	r2, [r3, #24]
   14624:	cmp	r2, #0
   14628:	bne	1461c <argp_parse@@Base+0x2e48>
   1462c:	add	r3, r3, #24
   14630:	ldr	r2, [r5, #12]
   14634:	str	r2, [r3]
   14638:	mov	r1, #0
   1463c:	str	r1, [r5, #12]
   14640:	ldr	r3, [r5, #4]
   14644:	cmp	r3, r1
   14648:	beq	14670 <argp_parse@@Base+0x2e9c>
   1464c:	ldr	r2, [sl, #4]
   14650:	cmp	r2, r1
   14654:	bne	1471c <argp_parse@@Base+0x2f48>
   14658:	str	r3, [sl, #4]
   1465c:	ldr	r3, [r5]
   14660:	str	r3, [sl]
   14664:	ldr	r3, [r5, #8]
   14668:	str	r3, [sl, #8]
   1466c:	str	r1, [r5, #4]
   14670:	mov	r0, r5
   14674:	bl	12d58 <argp_parse@@Base+0x1584>
   14678:	ldr	r3, [fp, #16]!
   1467c:	cmp	r3, #0
   14680:	beq	14a14 <argp_parse@@Base+0x3240>
   14684:	mov	r5, fp
   14688:	ldr	r6, [fp, #12]
   1468c:	cmp	r6, #0
   14690:	bne	146a0 <argp_parse@@Base+0x2ecc>
   14694:	ldr	r3, [fp, #8]
   14698:	cmp	r3, #0
   1469c:	beq	14614 <argp_parse@@Base+0x2e40>
   146a0:	ldr	r7, [r5, #8]
   146a4:	ldr	r8, [sp, #12]
   146a8:	ldr	r4, [r8, #16]
   146ac:	mov	r0, #28
   146b0:	bl	12bf8 <argp_parse@@Base+0x1424>
   146b4:	subs	r1, r0, #0
   146b8:	beq	146fc <argp_parse@@Base+0x2f28>
   146bc:	str	r6, [r1, #8]
   146c0:	str	r7, [r1]
   146c4:	sub	r4, r5, r4
   146c8:	asr	r4, r4, #4
   146cc:	str	r4, [r1, #4]
   146d0:	ldr	r3, [sp, #4]
   146d4:	str	r3, [r1, #12]
   146d8:	str	r8, [r1, #16]
   146dc:	cmp	r3, #0
   146e0:	ldrne	r3, [r3, #20]
   146e4:	addne	r3, r3, #1
   146e8:	moveq	r3, #0
   146ec:	str	r3, [r1, #20]
   146f0:	ldr	r3, [sl, #12]
   146f4:	str	r3, [r1, #24]
   146f8:	str	r1, [sl, #12]
   146fc:	ldr	r0, [r5]
   14700:	bl	14380 <argp_parse@@Base+0x2bac>
   14704:	mov	r5, r0
   14708:	ldr	r3, [sl, #12]
   1470c:	cmp	r3, #0
   14710:	bne	14620 <argp_parse@@Base+0x2e4c>
   14714:	add	r3, sl, #12
   14718:	b	14630 <argp_parse@@Base+0x2e5c>
   1471c:	add	r3, r3, r2
   14720:	str	r3, [sp, #24]
   14724:	rsb	r0, r3, r3, lsl #3
   14728:	lsl	r0, r0, #2
   1472c:	bl	12bf8 <argp_parse@@Base+0x1424>
   14730:	mov	r4, r0
   14734:	str	r0, [sp, #20]
   14738:	ldr	r0, [sl, #8]
   1473c:	bl	10e74 <strlen@plt>
   14740:	mov	r7, r0
   14744:	ldr	r0, [r5, #8]
   14748:	bl	10e74 <strlen@plt>
   1474c:	add	r0, r7, r0
   14750:	add	r0, r0, #1
   14754:	bl	12bf8 <argp_parse@@Base+0x1424>
   14758:	mov	r9, r0
   1475c:	cmp	r4, #0
   14760:	cmpne	r0, #0
   14764:	beq	14830 <argp_parse@@Base+0x305c>
   14768:	ldr	r3, [sp, #24]
   1476c:	ldr	r2, [sp, #32]
   14770:	cmp	r3, r2
   14774:	bhi	1484c <argp_parse@@Base+0x3078>
   14778:	ldr	r1, [sl]
   1477c:	str	r1, [sp, #28]
   14780:	ldr	r4, [sl, #4]
   14784:	rsb	r8, r4, r4, lsl #3
   14788:	lsl	r8, r8, #2
   1478c:	mov	r2, r8
   14790:	ldr	r0, [sp, #20]
   14794:	bl	10e50 <mempcpy@plt>
   14798:	ldr	r3, [r5, #4]
   1479c:	str	r3, [sp, #16]
   147a0:	rsb	r2, r3, r3, lsl #3
   147a4:	lsl	r2, r2, #2
   147a8:	ldr	r1, [r5]
   147ac:	bl	10d90 <memcpy@plt>
   147b0:	ldr	r6, [sl, #8]
   147b4:	mov	r2, r7
   147b8:	mov	r1, r6
   147bc:	mov	r0, r9
   147c0:	bl	10d90 <memcpy@plt>
   147c4:	cmp	r4, #0
   147c8:	beq	14868 <argp_parse@@Base+0x3094>
   147cc:	ldr	r2, [sp, #20]
   147d0:	ldr	r3, [r2, #8]
   147d4:	sub	r3, r3, r6
   147d8:	add	r3, r9, r3
   147dc:	str	r3, [r2, #8]
   147e0:	add	r2, r2, #28
   147e4:	subs	r4, r4, #1
   147e8:	bne	147d0 <argp_parse@@Base+0x2ffc>
   147ec:	ldr	r3, [sp, #20]
   147f0:	add	r4, r3, r8
   147f4:	add	r3, r9, r7
   147f8:	str	r3, [sp, #8]
   147fc:	ldr	r1, [r5, #8]
   14800:	ldr	r8, [sp, #16]
   14804:	cmp	r8, #0
   14808:	beq	1490c <argp_parse@@Base+0x3138>
   1480c:	add	r4, r4, #28
   14810:	sub	r2, r3, #1
   14814:	str	r2, [sp, #16]
   14818:	str	r5, [sp, #36]	; 0x24
   1481c:	str	fp, [sp, #40]	; 0x28
   14820:	mov	fp, r3
   14824:	str	sl, [sp, #44]	; 0x2c
   14828:	mov	sl, r1
   1482c:	b	148b4 <argp_parse@@Base+0x30e0>
   14830:	ldr	r3, [pc, #508]	; 14a34 <argp_parse@@Base+0x3260>
   14834:	movw	r2, #970	; 0x3ca
   14838:	movw	r1, #33588	; 0x8334
   1483c:	movt	r1, #1
   14840:	movw	r0, #33716	; 0x83b4
   14844:	movt	r0, #1
   14848:	bl	10f4c <__assert_fail@plt>
   1484c:	ldr	r3, [pc, #480]	; 14a34 <argp_parse@@Base+0x3260>
   14850:	mov	r2, #972	; 0x3cc
   14854:	movw	r1, #33588	; 0x8334
   14858:	movt	r1, #1
   1485c:	movw	r0, #33744	; 0x83d0
   14860:	movt	r0, #1
   14864:	bl	10f4c <__assert_fail@plt>
   14868:	ldr	r4, [sp, #20]
   1486c:	b	147f4 <argp_parse@@Base+0x3020>
   14870:	ldr	r2, [sp, #8]
   14874:	cmp	r9, r2
   14878:	bcs	14914 <argp_parse@@Base+0x3140>
   1487c:	ldrb	r2, [r9]
   14880:	cmp	r2, r3
   14884:	beq	14918 <argp_parse@@Base+0x3144>
   14888:	mov	r2, r9
   1488c:	ldr	r1, [sp, #16]
   14890:	cmp	r1, r2
   14894:	beq	14914 <argp_parse@@Base+0x3140>
   14898:	ldrb	r1, [r2, #1]!
   1489c:	cmp	r1, r3
   148a0:	bne	1488c <argp_parse@@Base+0x30b8>
   148a4:	b	14918 <argp_parse@@Base+0x3144>
   148a8:	add	r4, r4, #28
   148ac:	subs	r8, r8, #1
   148b0:	beq	148cc <argp_parse@@Base+0x30f8>
   148b4:	str	fp, [r4, #-20]	; 0xffffffec
   148b8:	ldr	r5, [r4, #-24]	; 0xffffffe8
   148bc:	ldr	r6, [r4, #-28]	; 0xffffffe4
   148c0:	cmp	r5, #0
   148c4:	bne	14938 <argp_parse@@Base+0x3164>
   148c8:	b	148a8 <argp_parse@@Base+0x30d4>
   148cc:	ldr	r5, [sp, #36]	; 0x24
   148d0:	mov	r3, fp
   148d4:	ldr	fp, [sp, #40]	; 0x28
   148d8:	ldr	sl, [sp, #44]	; 0x2c
   148dc:	mov	r2, #0
   148e0:	strb	r2, [r3]
   148e4:	ldr	r0, [sp, #28]
   148e8:	bl	124ac <argp_parse@@Base+0xcd8>
   148ec:	ldr	r0, [sl, #8]
   148f0:	bl	124ac <argp_parse@@Base+0xcd8>
   148f4:	ldr	r3, [sp, #20]
   148f8:	str	r3, [sl]
   148fc:	ldr	r3, [sp, #24]
   14900:	str	r3, [sl, #4]
   14904:	str	r9, [sl, #8]
   14908:	b	14670 <argp_parse@@Base+0x2e9c>
   1490c:	ldr	r3, [sp, #8]
   14910:	b	148dc <argp_parse@@Base+0x3108>
   14914:	strb	r3, [fp], #1
   14918:	add	sl, sl, #1
   1491c:	b	1492c <argp_parse@@Base+0x3158>
   14920:	ldrb	r3, [sl]
   14924:	cmp	r3, r7
   14928:	beq	14870 <argp_parse@@Base+0x309c>
   1492c:	add	r6, r6, #24
   14930:	subs	r5, r5, #1
   14934:	beq	148a8 <argp_parse@@Base+0x30d4>
   14938:	ldr	r3, [r6, #12]
   1493c:	tst	r3, #8
   14940:	bne	1492c <argp_parse@@Base+0x3158>
   14944:	ldr	r7, [r6, #4]
   14948:	sub	r3, r7, #1
   1494c:	cmp	r3, #254	; 0xfe
   14950:	bhi	1492c <argp_parse@@Base+0x3158>
   14954:	bl	10e5c <__ctype_b_loc@plt>
   14958:	ldr	r2, [r0]
   1495c:	lsl	r3, r7, #1
   14960:	ldrh	r3, [r2, r3]
   14964:	tst	r3, #16384	; 0x4000
   14968:	bne	14920 <argp_parse@@Base+0x314c>
   1496c:	b	1492c <argp_parse@@Base+0x3158>
   14970:	strb	r6, [r5], #1
   14974:	add	r4, r4, #24
   14978:	ldr	r3, [r4, #4]
   1497c:	cmp	r3, #0
   14980:	bne	14990 <argp_parse@@Base+0x31bc>
   14984:	ldr	r3, [r4]
   14988:	cmp	r3, #0
   1498c:	beq	14554 <argp_parse@@Base+0x2d80>
   14990:	ldr	r3, [r4, #12]
   14994:	tst	r3, #4
   14998:	beq	1456c <argp_parse@@Base+0x2d98>
   1499c:	ldr	r3, [r8, #-24]	; 0xffffffe8
   149a0:	add	r3, r3, #1
   149a4:	str	r3, [r8, #-24]	; 0xffffffe8
   149a8:	ldr	r3, [r4, #12]
   149ac:	tst	r3, #8
   149b0:	bne	14974 <argp_parse@@Base+0x31a0>
   149b4:	ldr	r6, [r4, #4]
   149b8:	sub	r3, r6, #1
   149bc:	cmp	r3, #254	; 0xfe
   149c0:	bhi	14974 <argp_parse@@Base+0x31a0>
   149c4:	bl	10e5c <__ctype_b_loc@plt>
   149c8:	ldr	r2, [r0]
   149cc:	lsl	r3, r6, #1
   149d0:	ldrh	r3, [r2, r3]
   149d4:	tst	r3, #16384	; 0x4000
   149d8:	beq	14974 <argp_parse@@Base+0x31a0>
   149dc:	uxtb	r6, r6
   149e0:	ldr	r3, [sl, #8]
   149e4:	cmp	r3, r5
   149e8:	bcs	14970 <argp_parse@@Base+0x319c>
   149ec:	ldrb	r2, [r3]
   149f0:	cmp	r2, r6
   149f4:	beq	14974 <argp_parse@@Base+0x31a0>
   149f8:	sub	r2, r5, #1
   149fc:	cmp	r3, r2
   14a00:	beq	14970 <argp_parse@@Base+0x319c>
   14a04:	ldrb	r1, [r3, #1]!
   14a08:	cmp	r1, r6
   14a0c:	bne	149fc <argp_parse@@Base+0x3228>
   14a10:	b	14974 <argp_parse@@Base+0x31a0>
   14a14:	mov	r0, sl
   14a18:	add	sp, sp, #52	; 0x34
   14a1c:	ldrd	r4, [sp]
   14a20:	ldrd	r6, [sp, #8]
   14a24:	ldrd	r8, [sp, #16]
   14a28:	ldrd	sl, [sp, #24]
   14a2c:	add	sp, sp, #32
   14a30:	pop	{pc}		; (ldr pc, [sp], #4)
   14a34:	andeq	r8, r1, r0, asr r2

00014a38 <argp_failure@@Base>:
   14a38:	push	{r3}		; (str r3, [sp, #-4]!)
   14a3c:	strd	r4, [sp, #-20]!	; 0xffffffec
   14a40:	strd	r6, [sp, #8]
   14a44:	str	lr, [sp, #16]
   14a48:	sub	sp, sp, #200	; 0xc8
   14a4c:	mov	r7, r1
   14a50:	mov	r6, r2
   14a54:	subs	r5, r0, #0
   14a58:	beq	14bb4 <argp_failure@@Base+0x17c>
   14a5c:	ldr	r3, [r5, #16]
   14a60:	tst	r3, #2
   14a64:	bne	14b98 <argp_failure@@Base+0x160>
   14a68:	ldr	r4, [r5, #44]	; 0x2c
   14a6c:	cmp	r4, #0
   14a70:	beq	14b98 <argp_failure@@Base+0x160>
   14a74:	mov	r0, r4
   14a78:	bl	10ef8 <flockfile@plt>
   14a7c:	ldr	r0, [r5, #40]	; 0x28
   14a80:	mov	r1, r4
   14a84:	bl	10d24 <fputs_unlocked@plt>
   14a88:	ldr	r3, [sp, #220]	; 0xdc
   14a8c:	cmp	r3, #0
   14a90:	beq	14aec <argp_failure@@Base+0xb4>
   14a94:	add	r3, sp, #224	; 0xe0
   14a98:	str	r3, [sp]
   14a9c:	ldr	r3, [r4, #20]
   14aa0:	ldr	r2, [r4, #24]
   14aa4:	cmp	r3, r2
   14aa8:	addcc	r2, r3, #1
   14aac:	strcc	r2, [r4, #20]
   14ab0:	movcc	r2, #58	; 0x3a
   14ab4:	strbcc	r2, [r3]
   14ab8:	bcs	14be0 <argp_failure@@Base+0x1a8>
   14abc:	ldr	r3, [r4, #20]
   14ac0:	ldr	r2, [r4, #24]
   14ac4:	cmp	r3, r2
   14ac8:	addcc	r2, r3, #1
   14acc:	strcc	r2, [r4, #20]
   14ad0:	movcc	r2, #32
   14ad4:	strbcc	r2, [r3]
   14ad8:	bcs	14bf0 <argp_failure@@Base+0x1b8>
   14adc:	ldr	r2, [sp]
   14ae0:	ldr	r1, [sp, #220]	; 0xdc
   14ae4:	mov	r0, r4
   14ae8:	bl	10ee0 <vfprintf@plt>
   14aec:	cmp	r6, #0
   14af0:	beq	14b54 <argp_failure@@Base+0x11c>
   14af4:	ldr	r3, [r4, #20]
   14af8:	ldr	r2, [r4, #24]
   14afc:	cmp	r3, r2
   14b00:	addcc	r2, r3, #1
   14b04:	strcc	r2, [r4, #20]
   14b08:	movcc	r2, #58	; 0x3a
   14b0c:	strbcc	r2, [r3]
   14b10:	bcs	14c00 <argp_failure@@Base+0x1c8>
   14b14:	ldr	r3, [r4, #20]
   14b18:	ldr	r2, [r4, #24]
   14b1c:	cmp	r3, r2
   14b20:	addcc	r2, r3, #1
   14b24:	strcc	r2, [r4, #20]
   14b28:	movcc	r2, #32
   14b2c:	strbcc	r2, [r3]
   14b30:	bcs	14c10 <argp_failure@@Base+0x1d8>
   14b34:	mov	r2, #200	; 0xc8
   14b38:	mov	r1, sp
   14b3c:	mov	r0, r6
   14b40:	bl	10ea4 <strerror_r@plt>
   14b44:	cmp	r0, #0
   14b48:	beq	14c20 <argp_failure@@Base+0x1e8>
   14b4c:	mov	r1, r4
   14b50:	bl	10d24 <fputs_unlocked@plt>
   14b54:	ldr	r3, [r4, #20]
   14b58:	ldr	r2, [r4, #24]
   14b5c:	cmp	r3, r2
   14b60:	addcc	r2, r3, #1
   14b64:	strcc	r2, [r4, #20]
   14b68:	movcc	r2, #10
   14b6c:	strbcc	r2, [r3]
   14b70:	bcs	14c3c <argp_failure@@Base+0x204>
   14b74:	mov	r0, r4
   14b78:	bl	10dcc <funlockfile@plt>
   14b7c:	cmp	r7, #0
   14b80:	beq	14b98 <argp_failure@@Base+0x160>
   14b84:	cmp	r5, #0
   14b88:	beq	14c4c <argp_failure@@Base+0x214>
   14b8c:	ldr	r3, [r5, #16]
   14b90:	tst	r3, #32
   14b94:	beq	14c4c <argp_failure@@Base+0x214>
   14b98:	add	sp, sp, #200	; 0xc8
   14b9c:	ldrd	r4, [sp]
   14ba0:	ldrd	r6, [sp, #8]
   14ba4:	ldr	lr, [sp, #16]
   14ba8:	add	sp, sp, #20
   14bac:	add	sp, sp, #4
   14bb0:	bx	lr
   14bb4:	movw	r3, #37184	; 0x9140
   14bb8:	movt	r3, #2
   14bbc:	ldr	r4, [r3]
   14bc0:	cmp	r4, #0
   14bc4:	beq	14b98 <argp_failure@@Base+0x160>
   14bc8:	mov	r0, r4
   14bcc:	bl	10ef8 <flockfile@plt>
   14bd0:	movw	r3, #37176	; 0x9138
   14bd4:	movt	r3, #2
   14bd8:	ldr	r0, [r3]
   14bdc:	b	14a80 <argp_failure@@Base+0x48>
   14be0:	mov	r1, #58	; 0x3a
   14be4:	mov	r0, r4
   14be8:	bl	10ec8 <__overflow@plt>
   14bec:	b	14abc <argp_failure@@Base+0x84>
   14bf0:	mov	r1, #32
   14bf4:	mov	r0, r4
   14bf8:	bl	10ec8 <__overflow@plt>
   14bfc:	b	14adc <argp_failure@@Base+0xa4>
   14c00:	mov	r1, #58	; 0x3a
   14c04:	mov	r0, r4
   14c08:	bl	10ec8 <__overflow@plt>
   14c0c:	b	14b14 <argp_failure@@Base+0xdc>
   14c10:	mov	r1, #32
   14c14:	mov	r0, r4
   14c18:	bl	10ec8 <__overflow@plt>
   14c1c:	b	14b34 <argp_failure@@Base+0xfc>
   14c20:	mov	r0, r6
   14c24:	bl	10e2c <strerror@plt>
   14c28:	movw	r3, #33796	; 0x8404
   14c2c:	movt	r3, #1
   14c30:	cmp	r0, #0
   14c34:	moveq	r0, r3
   14c38:	b	14b4c <argp_failure@@Base+0x114>
   14c3c:	mov	r1, #10
   14c40:	mov	r0, r4
   14c44:	bl	10ec8 <__overflow@plt>
   14c48:	b	14b74 <argp_failure@@Base+0x13c>
   14c4c:	mov	r0, r7
   14c50:	bl	10e68 <exit@plt>
   14c54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14c58:	strd	r6, [sp, #8]
   14c5c:	strd	r8, [sp, #16]
   14c60:	strd	sl, [sp, #24]
   14c64:	str	lr, [sp, #32]
   14c68:	add	fp, sp, #32
   14c6c:	sub	sp, sp, #124	; 0x7c
   14c70:	str	r0, [fp, #-108]	; 0xffffff94
   14c74:	str	r1, [fp, #-104]	; 0xffffff98
   14c78:	str	r3, [fp, #-100]	; 0xffffff9c
   14c7c:	subs	r3, r2, #0
   14c80:	str	r3, [fp, #-132]	; 0xffffff7c
   14c84:	beq	15c6c <argp_failure@@Base+0x1234>
   14c88:	mov	r0, r3
   14c8c:	bl	10ef8 <flockfile@plt>
   14c90:	movw	r3, #37116	; 0x90fc
   14c94:	movt	r3, #2
   14c98:	ldr	r9, [r3, #36]	; 0x24
   14c9c:	cmp	r9, #0
   14ca0:	beq	14d78 <argp_failure@@Base+0x340>
   14ca4:	movw	r2, #37116	; 0x90fc
   14ca8:	movt	r2, #2
   14cac:	mov	r3, #0
   14cb0:	ldr	r2, [r2, #32]
   14cb4:	mov	r1, r3
   14cb8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   14cbc:	bl	172b8 <argp_error@@Base+0x1398>
   14cc0:	subs	sl, r0, #0
   14cc4:	beq	15154 <argp_failure@@Base+0x71c>
   14cc8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14ccc:	tst	r3, #11
   14cd0:	moveq	r3, #0
   14cd4:	streq	r3, [fp, #-128]	; 0xffffff80
   14cd8:	bne	15160 <argp_failure@@Base+0x728>
   14cdc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14ce0:	tst	r3, #3
   14ce4:	moveq	r4, #0
   14ce8:	bne	151f0 <argp_failure@@Base+0x7b8>
   14cec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14cf0:	tst	r3, #16
   14cf4:	bne	15414 <argp_failure@@Base+0x9dc>
   14cf8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14cfc:	tst	r3, #4
   14d00:	bne	1543c <argp_failure@@Base+0xa04>
   14d04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d08:	tst	r3, #8
   14d0c:	beq	15bf8 <argp_failure@@Base+0x11c0>
   14d10:	ldr	r3, [fp, #-128]	; 0xffffff80
   14d14:	ldr	r3, [r3, #4]
   14d18:	cmp	r3, #0
   14d1c:	beq	15bf8 <argp_failure@@Base+0x11c0>
   14d20:	cmp	r4, #0
   14d24:	bne	1545c <argp_failure@@Base+0xa24>
   14d28:	mov	r3, #0
   14d2c:	str	r3, [fp, #-88]	; 0xffffffa8
   14d30:	str	r3, [fp, #-84]	; 0xffffffac
   14d34:	str	r3, [fp, #-80]	; 0xffffffb0
   14d38:	ldr	r3, [fp, #-128]	; 0xffffff80
   14d3c:	ldr	r9, [r3]
   14d40:	ldr	r3, [r3, #4]
   14d44:	str	r3, [fp, #-116]	; 0xffffff8c
   14d48:	cmp	r3, #0
   14d4c:	beq	15bf4 <argp_failure@@Base+0x11bc>
   14d50:	movw	r3, #37116	; 0x90fc
   14d54:	movt	r3, #2
   14d58:	str	r3, [fp, #-96]	; 0xffffffa0
   14d5c:	movw	r3, #34112	; 0x8540
   14d60:	movt	r3, #1
   14d64:	str	r3, [fp, #-140]	; 0xffffff74
   14d68:	movw	r3, #32164	; 0x7da4
   14d6c:	movt	r3, #1
   14d70:	str	r3, [fp, #-144]	; 0xffffff70
   14d74:	b	15a74 <argp_failure@@Base+0x103c>
   14d78:	movw	r0, #33820	; 0x841c
   14d7c:	movt	r0, #1
   14d80:	bl	10dfc <getenv@plt>
   14d84:	movw	r1, #37116	; 0x90fc
   14d88:	movt	r1, #2
   14d8c:	ldrd	r2, [r1]
   14d90:	strd	r2, [fp, #-76]	; 0xffffffb4
   14d94:	ldrd	r2, [r1, #8]
   14d98:	strd	r2, [fp, #-68]	; 0xffffffbc
   14d9c:	ldrd	r2, [r1, #16]
   14da0:	strd	r2, [fp, #-60]	; 0xffffffc4
   14da4:	ldrd	r2, [r1, #24]
   14da8:	strd	r2, [fp, #-52]	; 0xffffffcc
   14dac:	ldrd	r2, [r1, #32]
   14db0:	strd	r2, [fp, #-44]	; 0xffffffd4
   14db4:	subs	r6, r0, #0
   14db8:	beq	14ca4 <argp_failure@@Base+0x26c>
   14dbc:	movw	sl, #33348	; 0x8244
   14dc0:	movt	sl, #1
   14dc4:	add	r8, sl, #168	; 0xa8
   14dc8:	b	15024 <argp_failure@@Base+0x5ec>
   14dcc:	cmp	r0, #45	; 0x2d
   14dd0:	cmpne	r0, #95	; 0x5f
   14dd4:	moveq	r3, #1
   14dd8:	movne	r3, #0
   14ddc:	ubfx	r1, r1, #3, #1
   14de0:	orrs	r3, r3, r1
   14de4:	beq	15dd0 <argp_failure@@Base+0x1398>
   14de8:	mov	r4, r6
   14dec:	ldrb	r3, [r4, #1]!
   14df0:	lsl	r1, r3, #1
   14df4:	ldrh	r1, [r2, r1]
   14df8:	ubfx	r1, r1, #3, #1
   14dfc:	cmp	r3, #95	; 0x5f
   14e00:	cmpne	r3, #45	; 0x2d
   14e04:	moveq	r3, #1
   14e08:	movne	r3, #0
   14e0c:	orrs	r3, r1, r3
   14e10:	bne	14dec <argp_failure@@Base+0x3b4>
   14e14:	sub	r7, r4, r6
   14e18:	ldrb	r3, [r4]
   14e1c:	lsl	r1, r3, #1
   14e20:	ldrh	r1, [r2, r1]
   14e24:	tst	r1, #8192	; 0x2000
   14e28:	beq	14e40 <argp_failure@@Base+0x408>
   14e2c:	ldrb	r3, [r4, #1]!
   14e30:	lsl	r1, r3, #1
   14e34:	ldrh	r1, [r2, r1]
   14e38:	tst	r1, #8192	; 0x2000
   14e3c:	bne	14e2c <argp_failure@@Base+0x3f4>
   14e40:	cmp	r3, #44	; 0x2c
   14e44:	cmpne	r3, #0
   14e48:	beq	14eac <argp_failure@@Base+0x474>
   14e4c:	cmp	r3, #61	; 0x3d
   14e50:	beq	14e78 <argp_failure@@Base+0x440>
   14e54:	ldrb	r3, [r4]
   14e58:	lsl	r3, r3, #1
   14e5c:	ldrh	r3, [r2, r3]
   14e60:	tst	r3, #2048	; 0x800
   14e64:	streq	r9, [fp, #-96]	; 0xffffffa0
   14e68:	streq	r9, [fp, #-112]	; 0xffffff90
   14e6c:	bne	14f10 <argp_failure@@Base+0x4d8>
   14e70:	add	r5, sl, #24
   14e74:	b	14fb8 <argp_failure@@Base+0x580>
   14e78:	add	r1, r4, #1
   14e7c:	ldrb	r3, [r4, #1]
   14e80:	lsl	r3, r3, #1
   14e84:	ldrh	r3, [r2, r3]
   14e88:	tst	r3, #8192	; 0x2000
   14e8c:	beq	14f08 <argp_failure@@Base+0x4d0>
   14e90:	ldrb	r3, [r1, #1]!
   14e94:	lsl	r3, r3, #1
   14e98:	ldrh	r3, [r2, r3]
   14e9c:	tst	r3, #8192	; 0x2000
   14ea0:	bne	14e90 <argp_failure@@Base+0x458>
   14ea4:	mov	r4, r1
   14ea8:	b	14e54 <argp_failure@@Base+0x41c>
   14eac:	cmp	r0, #110	; 0x6e
   14eb0:	movne	r3, #1
   14eb4:	strne	r3, [fp, #-96]	; 0xffffffa0
   14eb8:	strne	r3, [fp, #-112]	; 0xffffff90
   14ebc:	bne	14e70 <argp_failure@@Base+0x438>
   14ec0:	ldrb	r3, [r6, #1]
   14ec4:	cmp	r3, #111	; 0x6f
   14ec8:	movne	r3, #1
   14ecc:	strne	r3, [fp, #-96]	; 0xffffffa0
   14ed0:	strne	r3, [fp, #-112]	; 0xffffff90
   14ed4:	bne	14e70 <argp_failure@@Base+0x438>
   14ed8:	ldrb	r3, [r6, #2]
   14edc:	cmp	r3, #45	; 0x2d
   14ee0:	movne	r3, #1
   14ee4:	strne	r3, [fp, #-96]	; 0xffffffa0
   14ee8:	strne	r3, [fp, #-112]	; 0xffffff90
   14eec:	bne	14e70 <argp_failure@@Base+0x438>
   14ef0:	add	r6, r6, #3
   14ef4:	sub	r7, r7, #3
   14ef8:	str	r9, [fp, #-112]	; 0xffffff90
   14efc:	mov	r3, #1
   14f00:	str	r3, [fp, #-96]	; 0xffffffa0
   14f04:	b	14e70 <argp_failure@@Base+0x438>
   14f08:	mov	r4, r1
   14f0c:	b	14e54 <argp_failure@@Base+0x41c>
   14f10:	mov	r2, #10
   14f14:	mov	r1, #0
   14f18:	mov	r0, r4
   14f1c:	bl	10d3c <strtol@plt>
   14f20:	str	r0, [fp, #-112]	; 0xffffff90
   14f24:	ldr	r2, [r5]
   14f28:	ldrb	r3, [r4]
   14f2c:	lsl	r3, r3, #1
   14f30:	ldrh	r3, [r2, r3]
   14f34:	tst	r3, #2048	; 0x800
   14f38:	beq	14f50 <argp_failure@@Base+0x518>
   14f3c:	ldrb	r3, [r4, #1]!
   14f40:	lsl	r3, r3, #1
   14f44:	ldrh	r3, [r2, r3]
   14f48:	tst	r3, #2048	; 0x800
   14f4c:	bne	14f3c <argp_failure@@Base+0x504>
   14f50:	ldrb	r3, [r4]
   14f54:	lsl	r3, r3, #1
   14f58:	ldrh	r3, [r2, r3]
   14f5c:	tst	r3, #8192	; 0x2000
   14f60:	beq	14f80 <argp_failure@@Base+0x548>
   14f64:	ldrb	r3, [r4, #1]!
   14f68:	lsl	r3, r3, #1
   14f6c:	ldrh	r3, [r2, r3]
   14f70:	tst	r3, #8192	; 0x2000
   14f74:	bne	14f64 <argp_failure@@Base+0x52c>
   14f78:	str	r9, [fp, #-96]	; 0xffffffa0
   14f7c:	b	14e70 <argp_failure@@Base+0x438>
   14f80:	str	r9, [fp, #-96]	; 0xffffffa0
   14f84:	b	14e70 <argp_failure@@Base+0x438>
   14f88:	str	r6, [sp, #4]
   14f8c:	str	r7, [sp]
   14f90:	movw	r3, #33836	; 0x842c
   14f94:	movt	r3, #1
   14f98:	mov	r2, #0
   14f9c:	mov	r1, r2
   14fa0:	ldr	r0, [fp, #-104]	; 0xffffff98
   14fa4:	bl	14a38 <argp_failure@@Base>
   14fa8:	b	1500c <argp_failure@@Base+0x5d4>
   14fac:	add	r5, r5, #16
   14fb0:	cmp	r5, r8
   14fb4:	beq	150f4 <argp_failure@@Base+0x6bc>
   14fb8:	mov	r0, r5
   14fbc:	bl	10e74 <strlen@plt>
   14fc0:	cmp	r0, r7
   14fc4:	bne	14fac <argp_failure@@Base+0x574>
   14fc8:	mov	r2, r7
   14fcc:	mov	r1, r5
   14fd0:	mov	r0, r6
   14fd4:	bl	10f34 <strncmp@plt>
   14fd8:	cmp	r0, #0
   14fdc:	bne	14fac <argp_failure@@Base+0x574>
   14fe0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   14fe4:	cmp	r3, #0
   14fe8:	beq	14ff8 <argp_failure@@Base+0x5c0>
   14fec:	ldrb	r3, [r5, #14]
   14ff0:	cmp	r3, #0
   14ff4:	beq	14f88 <argp_failure@@Base+0x550>
   14ff8:	ldrb	r3, [r5, #15]
   14ffc:	sub	r2, fp, #36	; 0x24
   15000:	add	r3, r2, r3
   15004:	ldr	r2, [fp, #-112]	; 0xffffff90
   15008:	str	r2, [r3, #-40]	; 0xffffffd8
   1500c:	cmp	r5, r8
   15010:	beq	150f4 <argp_failure@@Base+0x6bc>
   15014:	ldrb	r3, [r4]
   15018:	cmp	r3, #44	; 0x2c
   1501c:	addeq	r6, r4, #1
   15020:	movne	r6, r4
   15024:	ldrb	r3, [r6]
   15028:	cmp	r3, #0
   1502c:	beq	15084 <argp_failure@@Base+0x64c>
   15030:	bl	10e5c <__ctype_b_loc@plt>
   15034:	mov	r5, r0
   15038:	ldr	r2, [r0]
   1503c:	mov	r3, r6
   15040:	mov	r6, r3
   15044:	ldrb	r0, [r3], #1
   15048:	lsl	r1, r0, #1
   1504c:	ldrh	r1, [r2, r1]
   15050:	tst	r1, #8192	; 0x2000
   15054:	bne	15040 <argp_failure@@Base+0x608>
   15058:	tst	r1, #1024	; 0x400
   1505c:	bne	14dcc <argp_failure@@Base+0x394>
   15060:	cmp	r0, #0
   15064:	beq	15024 <argp_failure@@Base+0x5ec>
   15068:	str	r6, [sp]
   1506c:	movw	r3, #33924	; 0x8484
   15070:	movt	r3, #1
   15074:	mov	r2, #0
   15078:	mov	r1, r2
   1507c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15080:	bl	14a38 <argp_failure@@Base>
   15084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15088:	ldr	r3, [pc, #3488]	; 15e30 <argp_failure@@Base+0x13f8>
   1508c:	add	r1, r3, #144	; 0x90
   15090:	add	r3, r3, #16
   15094:	cmp	r3, r1
   15098:	beq	15118 <argp_failure@@Base+0x6e0>
   1509c:	ldrb	r2, [r3, #14]
   150a0:	cmp	r2, #0
   150a4:	bne	15090 <argp_failure@@Base+0x658>
   150a8:	ldrb	r2, [r3, #15]
   150ac:	cmp	r2, #32
   150b0:	beq	15090 <argp_failure@@Base+0x658>
   150b4:	sub	ip, fp, #36	; 0x24
   150b8:	add	r2, ip, r2
   150bc:	ldr	r2, [r2, #-40]	; 0xffffffd8
   150c0:	cmp	r2, r0
   150c4:	blt	15090 <argp_failure@@Base+0x658>
   150c8:	str	r3, [sp, #4]
   150cc:	movw	r3, #34008	; 0x84d8
   150d0:	movt	r3, #1
   150d4:	str	r3, [sp]
   150d8:	movw	r3, #33956	; 0x84a4
   150dc:	movt	r3, #1
   150e0:	mov	r2, #0
   150e4:	mov	r1, r2
   150e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   150ec:	bl	14a38 <argp_failure@@Base>
   150f0:	b	14ca4 <argp_failure@@Base+0x26c>
   150f4:	str	r6, [sp, #4]
   150f8:	str	r7, [sp]
   150fc:	movw	r3, #33884	; 0x845c
   15100:	movt	r3, #1
   15104:	mov	r2, #0
   15108:	mov	r1, r2
   1510c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15110:	bl	14a38 <argp_failure@@Base>
   15114:	b	15014 <argp_failure@@Base+0x5dc>
   15118:	movw	r1, #37116	; 0x90fc
   1511c:	movt	r1, #2
   15120:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15124:	strd	r2, [r1]
   15128:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1512c:	strd	r2, [r1, #8]
   15130:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   15134:	strd	r2, [r1, #16]
   15138:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1513c:	strd	r2, [r1, #24]
   15140:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   15144:	strd	r2, [r1, #32]
   15148:	mov	r3, #1
   1514c:	str	r3, [r1, #36]	; 0x24
   15150:	b	14ca4 <argp_failure@@Base+0x26c>
   15154:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15158:	bl	10dcc <funlockfile@plt>
   1515c:	b	15c6c <argp_failure@@Base+0x1234>
   15160:	mov	r1, #0
   15164:	ldr	r0, [fp, #-108]	; 0xffffff94
   15168:	bl	14380 <argp_parse@@Base+0x2bac>
   1516c:	str	r0, [fp, #-128]	; 0xffffff80
   15170:	movw	r1, #32244	; 0x7df4
   15174:	movt	r1, #1
   15178:	bl	12dc0 <argp_parse@@Base+0x15ec>
   1517c:	cmp	r0, #0
   15180:	mvnne	r3, #0
   15184:	strne	r3, [r0, #12]
   15188:	movw	r1, #32212	; 0x7dd4
   1518c:	movt	r1, #1
   15190:	ldr	r0, [fp, #-128]	; 0xffffff80
   15194:	bl	12dc0 <argp_parse@@Base+0x15ec>
   15198:	cmp	r0, #0
   1519c:	mvnne	r3, #0
   151a0:	strne	r3, [r0, #12]
   151a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   151a8:	ldr	r3, [r0, #4]
   151ac:	cmp	r3, #0
   151b0:	beq	14cdc <argp_failure@@Base+0x2a4>
   151b4:	ldr	r2, [r0]
   151b8:	mov	r3, #0
   151bc:	str	r3, [r2, #24]
   151c0:	add	r3, r3, #1
   151c4:	add	r2, r2, #28
   151c8:	ldr	r1, [r0, #4]
   151cc:	cmp	r3, r1
   151d0:	bcc	151bc <argp_failure@@Base+0x784>
   151d4:	movw	r3, #16496	; 0x4070
   151d8:	movt	r3, #1
   151dc:	mov	r2, #28
   151e0:	ldr	r0, [fp, #-128]	; 0xffffff80
   151e4:	ldr	r0, [r0]
   151e8:	bl	10f10 <qsort@plt>
   151ec:	b	14cdc <argp_failure@@Base+0x2a4>
   151f0:	ldr	r0, [fp, #-108]	; 0xffffff94
   151f4:	bl	12e74 <argp_parse@@Base+0x16a0>
   151f8:	mov	r2, r0
   151fc:	add	r3, r0, #7
   15200:	bic	r3, r3, #7
   15204:	sub	sp, sp, r3
   15208:	add	r9, sp, #8
   1520c:	mov	r1, #0
   15210:	mov	r0, r9
   15214:	bl	10eb0 <memset@plt>
   15218:	mov	r5, #1
   1521c:	movw	r4, #37116	; 0x90fc
   15220:	movt	r4, #2
   15224:	movw	r3, #34032	; 0x84f0
   15228:	movt	r3, #1
   1522c:	str	r3, [fp, #-116]	; 0xffffff8c
   15230:	movw	r8, #34024	; 0x84e8
   15234:	movt	r8, #1
   15238:	str	r9, [fp, #-96]	; 0xffffffa0
   1523c:	ldr	r9, [fp, #-128]	; 0xffffff80
   15240:	str	r8, [fp, #-112]	; 0xffffff90
   15244:	ldr	r8, [fp, #-100]	; 0xffffff9c
   15248:	b	152f8 <argp_failure@@Base+0x8c0>
   1524c:	mov	r0, sl
   15250:	bl	17350 <argp_error@@Base+0x1430>
   15254:	b	15314 <argp_failure@@Base+0x8dc>
   15258:	mov	r0, sl
   1525c:	bl	17350 <argp_error@@Base+0x1430>
   15260:	b	15360 <argp_failure@@Base+0x928>
   15264:	mov	r1, sl
   15268:	mov	r0, r9
   1526c:	bl	13048 <argp_parse@@Base+0x1874>
   15270:	orr	r8, r8, #2
   15274:	str	sl, [sp]
   15278:	mov	r3, #1
   1527c:	sub	r2, fp, #76	; 0x4c
   15280:	ldr	r1, [fp, #-104]	; 0xffffff98
   15284:	ldr	r0, [fp, #-108]	; 0xffffff94
   15288:	bl	134b4 <argp_parse@@Base+0x1ce0>
   1528c:	mov	r6, r0
   15290:	ldr	r3, [sl, #28]
   15294:	ldr	r2, [sl, #24]
   15298:	sub	r3, r3, r2
   1529c:	ldr	r2, [sl, #16]
   152a0:	cmp	r3, r2
   152a4:	bhi	153d8 <argp_failure@@Base+0x9a0>
   152a8:	str	r7, [sl, #12]
   152ac:	ldr	r3, [sl, #28]
   152b0:	ldr	r2, [sl, #24]
   152b4:	sub	r3, r3, r2
   152b8:	ldr	r2, [sl, #16]
   152bc:	cmp	r3, r2
   152c0:	bhi	153e4 <argp_failure@@Base+0x9ac>
   152c4:	str	r5, [sl, #4]
   152c8:	ldr	r2, [sl, #28]
   152cc:	ldr	r3, [sl, #32]
   152d0:	cmp	r2, r3
   152d4:	bcs	153f0 <argp_failure@@Base+0x9b8>
   152d8:	ldr	r3, [sl, #28]
   152dc:	add	r2, r3, #1
   152e0:	str	r2, [sl, #28]
   152e4:	mov	r2, #10
   152e8:	strb	r2, [r3]
   152ec:	mov	r5, #0
   152f0:	cmp	r6, r5
   152f4:	beq	15408 <argp_failure@@Base+0x9d0>
   152f8:	ldr	r6, [r4, #28]
   152fc:	ldr	r3, [sl, #28]
   15300:	ldr	r2, [sl, #24]
   15304:	sub	r3, r3, r2
   15308:	ldr	r2, [sl, #16]
   1530c:	cmp	r3, r2
   15310:	bhi	1524c <argp_failure@@Base+0x814>
   15314:	ldr	r7, [sl, #12]
   15318:	str	r6, [sl, #12]
   1531c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15320:	str	r3, [fp, #-76]	; 0xffffffb4
   15324:	cmp	r5, #0
   15328:	ldr	r3, [fp, #4]
   1532c:	movwne	r2, #34016	; 0x84e0
   15330:	movtne	r2, #1
   15334:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   15338:	ldr	r1, [fp, #-112]	; 0xffffff90
   1533c:	mov	r0, sl
   15340:	bl	179c8 <argp_error@@Base+0x1aa8>
   15344:	ldr	r6, [r4, #28]
   15348:	ldr	r3, [sl, #28]
   1534c:	ldr	r2, [sl, #24]
   15350:	sub	r3, r3, r2
   15354:	ldr	r2, [sl, #16]
   15358:	cmp	r3, r2
   1535c:	bhi	15258 <argp_failure@@Base+0x820>
   15360:	ldr	r5, [sl, #4]
   15364:	str	r6, [sl, #4]
   15368:	tst	r8, #2
   1536c:	beq	15264 <argp_failure@@Base+0x82c>
   15370:	ldr	r3, [r9, #4]
   15374:	cmp	r3, #0
   15378:	beq	15274 <argp_failure@@Base+0x83c>
   1537c:	ldr	r3, [sl, #28]
   15380:	add	r3, r3, #12
   15384:	ldr	r2, [sl, #32]
   15388:	cmp	r2, r3
   1538c:	bcs	153a4 <argp_failure@@Base+0x96c>
   15390:	mov	r1, #12
   15394:	mov	r0, sl
   15398:	bl	178c8 <argp_error@@Base+0x19a8>
   1539c:	cmp	r0, #0
   153a0:	beq	15274 <argp_failure@@Base+0x83c>
   153a4:	ldr	r2, [sl, #28]
   153a8:	movw	r3, #34040	; 0x84f8
   153ac:	movt	r3, #1
   153b0:	ldr	r0, [r3]
   153b4:	ldr	r1, [r3, #4]
   153b8:	str	r0, [r2]
   153bc:	str	r1, [r2, #4]
   153c0:	ldr	r3, [r3, #8]
   153c4:	str	r3, [r2, #8]
   153c8:	ldr	r3, [sl, #28]
   153cc:	add	r3, r3, #12
   153d0:	str	r3, [sl, #28]
   153d4:	b	15274 <argp_failure@@Base+0x83c>
   153d8:	mov	r0, sl
   153dc:	bl	17350 <argp_error@@Base+0x1430>
   153e0:	b	152a8 <argp_failure@@Base+0x870>
   153e4:	mov	r0, sl
   153e8:	bl	17350 <argp_error@@Base+0x1430>
   153ec:	b	152c4 <argp_failure@@Base+0x88c>
   153f0:	mov	r1, #1
   153f4:	mov	r0, sl
   153f8:	bl	178c8 <argp_error@@Base+0x19a8>
   153fc:	cmp	r0, #0
   15400:	bne	152d8 <argp_failure@@Base+0x8a0>
   15404:	b	152ec <argp_failure@@Base+0x8b4>
   15408:	str	r8, [fp, #-100]	; 0xffffff9c
   1540c:	mov	r4, #1
   15410:	b	14cec <argp_failure@@Base+0x2b4>
   15414:	str	sl, [sp, #4]
   15418:	mov	r3, #1
   1541c:	str	r3, [sp]
   15420:	mov	r3, #0
   15424:	mov	r2, r3
   15428:	ldr	r1, [fp, #-104]	; 0xffffff98
   1542c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15430:	bl	13a64 <argp_parse@@Base+0x2290>
   15434:	orr	r4, r4, r0
   15438:	b	14cf8 <argp_failure@@Base+0x2c0>
   1543c:	ldr	r3, [fp, #4]
   15440:	mov	r2, r3
   15444:	movw	r1, #34056	; 0x8508
   15448:	movt	r1, #1
   1544c:	mov	r0, sl
   15450:	bl	179c8 <argp_error@@Base+0x1aa8>
   15454:	mov	r4, #1
   15458:	b	14d04 <argp_failure@@Base+0x2cc>
   1545c:	ldr	r2, [sl, #28]
   15460:	ldr	r3, [sl, #32]
   15464:	cmp	r2, r3
   15468:	bcs	15484 <argp_failure@@Base+0xa4c>
   1546c:	ldr	r3, [sl, #28]
   15470:	add	r2, r3, #1
   15474:	str	r2, [sl, #28]
   15478:	mov	r2, #10
   1547c:	strb	r2, [r3]
   15480:	b	14d28 <argp_failure@@Base+0x2f0>
   15484:	mov	r1, #1
   15488:	mov	r0, sl
   1548c:	bl	178c8 <argp_error@@Base+0x19a8>
   15490:	cmp	r0, #0
   15494:	bne	1546c <argp_failure@@Base+0xa34>
   15498:	b	14d28 <argp_failure@@Base+0x2f0>
   1549c:	mov	r0, sl
   154a0:	bl	17350 <argp_error@@Base+0x1430>
   154a4:	b	15a94 <argp_failure@@Base+0x105c>
   154a8:	add	r3, r3, #24
   154ac:	subs	r2, r2, #1
   154b0:	beq	154d4 <argp_failure@@Base+0xa9c>
   154b4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   154b8:	cmp	r1, #0
   154bc:	beq	154a8 <argp_failure@@Base+0xa70>
   154c0:	ldr	r1, [r3, #-12]
   154c4:	tst	r1, #2
   154c8:	bne	154a8 <argp_failure@@Base+0xa70>
   154cc:	mov	r3, #1
   154d0:	str	r3, [fp, #-112]	; 0xffffff90
   154d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154d8:	ldr	r5, [r3, #8]
   154dc:	ldr	r3, [sl, #28]
   154e0:	ldr	r2, [sl, #24]
   154e4:	sub	r3, r3, r2
   154e8:	ldr	r2, [sl, #16]
   154ec:	cmp	r3, r2
   154f0:	bhi	15510 <argp_failure@@Base+0xad8>
   154f4:	str	r5, [sl, #12]
   154f8:	ldr	r6, [r9, #4]
   154fc:	cmp	r6, #0
   15500:	beq	15610 <argp_failure@@Base+0xbd8>
   15504:	mov	r5, r4
   15508:	str	r9, [fp, #-136]	; 0xffffff78
   1550c:	b	15df8 <argp_failure@@Base+0x13c0>
   15510:	mov	r0, sl
   15514:	bl	17350 <argp_error@@Base+0x1430>
   15518:	b	154f4 <argp_failure@@Base+0xabc>
   1551c:	tst	r9, #2
   15520:	beq	1552c <argp_failure@@Base+0xaf4>
   15524:	add	r8, r8, #1
   15528:	b	15dec <argp_failure@@Base+0x13b4>
   1552c:	sub	r1, fp, #76	; 0x4c
   15530:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15534:	ldr	r0, [r3, #8]
   15538:	bl	138c0 <argp_parse@@Base+0x20ec>
   1553c:	ldr	r2, [sl, #28]
   15540:	ldr	r3, [sl, #32]
   15544:	cmp	r2, r3
   15548:	bcs	155c8 <argp_failure@@Base+0xb90>
   1554c:	ldr	r3, [sl, #28]
   15550:	add	r2, r3, #1
   15554:	str	r2, [sl, #28]
   15558:	mov	r2, #45	; 0x2d
   1555c:	strb	r2, [r3]
   15560:	ldrb	r7, [r8]
   15564:	ldr	r2, [sl, #28]
   15568:	ldr	r3, [sl, #32]
   1556c:	cmp	r2, r3
   15570:	bcs	155e0 <argp_failure@@Base+0xba8>
   15574:	ldr	r3, [sl, #28]
   15578:	add	r2, r3, #1
   1557c:	str	r2, [sl, #28]
   15580:	strb	r7, [r3]
   15584:	ldr	r3, [fp, #-112]	; 0xffffff90
   15588:	cmp	r3, #0
   1558c:	beq	155a0 <argp_failure@@Base+0xb68>
   15590:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15594:	ldr	r3, [r3]
   15598:	cmp	r3, #0
   1559c:	beq	155f8 <argp_failure@@Base+0xbc0>
   155a0:	ldr	r2, [r4, #8]
   155a4:	cmp	r2, #0
   155a8:	beq	15524 <argp_failure@@Base+0xaec>
   155ac:	ldr	r3, [r4, #12]
   155b0:	tst	r3, #1
   155b4:	ldrne	r1, [fp, #-140]	; 0xffffff74
   155b8:	ldreq	r1, [fp, #-144]	; 0xffffff70
   155bc:	mov	r0, sl
   155c0:	bl	179c8 <argp_error@@Base+0x1aa8>
   155c4:	b	15524 <argp_failure@@Base+0xaec>
   155c8:	mov	r1, #1
   155cc:	mov	r0, sl
   155d0:	bl	178c8 <argp_error@@Base+0x19a8>
   155d4:	cmp	r0, #0
   155d8:	bne	1554c <argp_failure@@Base+0xb14>
   155dc:	b	15560 <argp_failure@@Base+0xb28>
   155e0:	mov	r1, #1
   155e4:	mov	r0, sl
   155e8:	bl	178c8 <argp_error@@Base+0x19a8>
   155ec:	cmp	r0, #0
   155f0:	bne	15574 <argp_failure@@Base+0xb3c>
   155f4:	b	15584 <argp_failure@@Base+0xb4c>
   155f8:	ldr	r3, [r4, #8]
   155fc:	cmp	r3, #0
   15600:	movne	r3, #1
   15604:	strne	r3, [fp, #-80]	; 0xffffffb0
   15608:	b	15524 <argp_failure@@Base+0xaec>
   1560c:	ldr	r9, [fp, #-136]	; 0xffffff78
   15610:	ldr	r3, [r4, #12]
   15614:	tst	r3, #8
   15618:	beq	156f0 <argp_failure@@Base+0xcb8>
   1561c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15620:	ldr	r5, [r3, #16]
   15624:	ldr	r3, [sl, #28]
   15628:	ldr	r2, [sl, #24]
   1562c:	sub	r3, r3, r2
   15630:	ldr	r2, [sl, #16]
   15634:	cmp	r3, r2
   15638:	bhi	15654 <argp_failure@@Base+0xc1c>
   1563c:	str	r5, [sl, #12]
   15640:	ldr	r6, [r9, #4]
   15644:	cmp	r6, #0
   15648:	beq	157b8 <argp_failure@@Base+0xd80>
   1564c:	add	r5, r4, #24
   15650:	b	15688 <argp_failure@@Base+0xc50>
   15654:	mov	r0, sl
   15658:	bl	17350 <argp_error@@Base+0x1430>
   1565c:	b	1563c <argp_failure@@Base+0xc04>
   15660:	mov	r2, r8
   15664:	mov	r1, r7
   15668:	ldr	r0, [sl, #28]
   1566c:	bl	10d90 <memcpy@plt>
   15670:	ldr	r3, [sl, #28]
   15674:	add	r8, r3, r8
   15678:	str	r8, [sl, #28]
   1567c:	add	r5, r5, #24
   15680:	subs	r6, r6, #1
   15684:	beq	157b8 <argp_failure@@Base+0xd80>
   15688:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1568c:	cmp	r3, #0
   15690:	beq	1567c <argp_failure@@Base+0xc44>
   15694:	ldr	r3, [r5, #-12]
   15698:	tst	r3, #2
   1569c:	bne	1567c <argp_failure@@Base+0xc44>
   156a0:	sub	r1, fp, #76	; 0x4c
   156a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156a8:	ldr	r0, [r3, #16]
   156ac:	bl	138c0 <argp_parse@@Base+0x20ec>
   156b0:	ldr	r7, [r5, #-24]	; 0xffffffe8
   156b4:	mov	r0, r7
   156b8:	bl	10e74 <strlen@plt>
   156bc:	subs	r8, r0, #0
   156c0:	beq	1567c <argp_failure@@Base+0xc44>
   156c4:	ldr	r3, [sl, #28]
   156c8:	add	r3, r3, r8
   156cc:	ldr	r2, [sl, #32]
   156d0:	cmp	r2, r3
   156d4:	bcs	15660 <argp_failure@@Base+0xc28>
   156d8:	mov	r1, r8
   156dc:	mov	r0, sl
   156e0:	bl	178c8 <argp_error@@Base+0x19a8>
   156e4:	cmp	r0, #0
   156e8:	beq	1567c <argp_failure@@Base+0xc44>
   156ec:	b	15660 <argp_failure@@Base+0xc28>
   156f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156f4:	ldr	r5, [r3, #12]
   156f8:	ldr	r3, [sl, #28]
   156fc:	ldr	r2, [sl, #24]
   15700:	sub	r3, r3, r2
   15704:	ldr	r2, [sl, #16]
   15708:	cmp	r3, r2
   1570c:	bhi	1573c <argp_failure@@Base+0xd04>
   15710:	str	r5, [sl, #12]
   15714:	ldr	r6, [r9, #4]
   15718:	cmp	r6, #0
   1571c:	beq	157b8 <argp_failure@@Base+0xd80>
   15720:	add	r5, r4, #24
   15724:	movw	r8, #34120	; 0x8548
   15728:	movt	r8, #1
   1572c:	movw	r7, #34136	; 0x8558
   15730:	movt	r7, #1
   15734:	str	r7, [fp, #-112]	; 0xffffff90
   15738:	b	15754 <argp_failure@@Base+0xd1c>
   1573c:	mov	r0, sl
   15740:	bl	17350 <argp_error@@Base+0x1430>
   15744:	b	15710 <argp_failure@@Base+0xcd8>
   15748:	add	r5, r5, #24
   1574c:	subs	r6, r6, #1
   15750:	beq	157b8 <argp_failure@@Base+0xd80>
   15754:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15758:	cmp	r3, #0
   1575c:	beq	15748 <argp_failure@@Base+0xd10>
   15760:	ldr	r3, [r5, #-12]
   15764:	tst	r3, #2
   15768:	bne	15748 <argp_failure@@Base+0xd10>
   1576c:	sub	r1, fp, #76	; 0x4c
   15770:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15774:	ldr	r0, [r3, #12]
   15778:	bl	138c0 <argp_parse@@Base+0x20ec>
   1577c:	ldr	r2, [r5, #-24]	; 0xffffffe8
   15780:	mov	r1, r8
   15784:	mov	r0, sl
   15788:	bl	179c8 <argp_error@@Base+0x1aa8>
   1578c:	ldr	r2, [r4, #8]
   15790:	cmp	r2, #0
   15794:	beq	15748 <argp_failure@@Base+0xd10>
   15798:	ldr	r3, [r4, #12]
   1579c:	tst	r3, #1
   157a0:	movwne	r1, #34128	; 0x8550
   157a4:	movtne	r1, #1
   157a8:	ldreq	r1, [fp, #-112]	; 0xffffff90
   157ac:	mov	r0, sl
   157b0:	bl	179c8 <argp_error@@Base+0x1aa8>
   157b4:	b	15748 <argp_failure@@Base+0xd10>
   157b8:	ldr	r3, [sl, #28]
   157bc:	ldr	r2, [sl, #24]
   157c0:	sub	r3, r3, r2
   157c4:	ldr	r2, [sl, #16]
   157c8:	cmp	r3, r2
   157cc:	bhi	15838 <argp_failure@@Base+0xe00>
   157d0:	mov	r3, #0
   157d4:	str	r3, [sl, #4]
   157d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   157dc:	cmp	r3, #0
   157e0:	beq	15844 <argp_failure@@Base+0xe0c>
   157e4:	ldr	r3, [r4, #12]
   157e8:	tst	r3, #8
   157ec:	bne	15818 <argp_failure@@Base+0xde0>
   157f0:	ldr	r5, [r4, #4]
   157f4:	sub	r3, r5, #1
   157f8:	cmp	r3, #254	; 0xfe
   157fc:	bhi	15818 <argp_failure@@Base+0xde0>
   15800:	bl	10e5c <__ctype_b_loc@plt>
   15804:	ldr	r3, [r0]
   15808:	lsl	r5, r5, #1
   1580c:	ldrh	r3, [r3, r5]
   15810:	tst	r3, #16384	; 0x4000
   15814:	bne	15a20 <argp_failure@@Base+0xfe8>
   15818:	ldr	r3, [r4]
   1581c:	cmp	r3, #0
   15820:	bne	15a20 <argp_failure@@Base+0xfe8>
   15824:	sub	r2, fp, #76	; 0x4c
   15828:	ldr	r1, [r9, #20]
   1582c:	ldr	r0, [r4, #16]
   15830:	bl	136b8 <argp_parse@@Base+0x1ee4>
   15834:	b	15a1c <argp_failure@@Base+0xfe4>
   15838:	mov	r0, sl
   1583c:	bl	17350 <argp_error@@Base+0x1430>
   15840:	b	157d0 <argp_failure@@Base+0xd98>
   15844:	ldr	r5, [r4, #16]
   15848:	ldr	r3, [fp, #-104]	; 0xffffff98
   1584c:	ldr	r2, [r9, #20]
   15850:	ldr	r1, [r4, #4]
   15854:	mov	r0, r5
   15858:	bl	12ee0 <argp_parse@@Base+0x170c>
   1585c:	subs	r4, r0, #0
   15860:	beq	159d8 <argp_failure@@Base+0xfa0>
   15864:	ldrb	r3, [r4]
   15868:	cmp	r3, #0
   1586c:	beq	159d0 <argp_failure@@Base+0xf98>
   15870:	ldr	r3, [sl, #28]
   15874:	ldr	r2, [sl, #24]
   15878:	sub	r3, r3, r2
   1587c:	ldr	r2, [sl, #16]
   15880:	cmp	r3, r2
   15884:	bhi	15930 <argp_failure@@Base+0xef8>
   15888:	ldr	r6, [sl, #20]
   1588c:	bic	r6, r6, r6, asr #31
   15890:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15894:	ldr	r7, [r3, #20]
   15898:	str	r7, [sl, #4]
   1589c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   158a0:	ldr	r7, [r3, #20]
   158a4:	ldr	r3, [sl, #28]
   158a8:	ldr	r2, [sl, #24]
   158ac:	sub	r3, r3, r2
   158b0:	ldr	r2, [sl, #16]
   158b4:	cmp	r3, r2
   158b8:	bhi	1596c <argp_failure@@Base+0xf34>
   158bc:	str	r7, [sl, #12]
   158c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   158c4:	ldr	r1, [r3, #20]
   158c8:	add	r3, r1, #3
   158cc:	cmp	r6, r3
   158d0:	bhi	15978 <argp_failure@@Base+0xf40>
   158d4:	cmp	r6, r1
   158d8:	bcc	159b8 <argp_failure@@Base+0xf80>
   158dc:	ldr	r3, [sl, #28]
   158e0:	add	r3, r3, #3
   158e4:	ldr	r2, [sl, #32]
   158e8:	cmp	r2, r3
   158ec:	bcs	15904 <argp_failure@@Base+0xecc>
   158f0:	mov	r1, #3
   158f4:	mov	r0, sl
   158f8:	bl	178c8 <argp_error@@Base+0x19a8>
   158fc:	cmp	r0, #0
   15900:	beq	159c0 <argp_failure@@Base+0xf88>
   15904:	ldr	r2, [sl, #28]
   15908:	movw	r3, #34140	; 0x855c
   1590c:	movt	r3, #1
   15910:	ldrh	r1, [r3]
   15914:	strh	r1, [r2]
   15918:	ldrb	r3, [r3, #2]
   1591c:	strb	r3, [r2, #2]
   15920:	ldr	r3, [sl, #28]
   15924:	add	r3, r3, #3
   15928:	str	r3, [sl, #28]
   1592c:	b	159c0 <argp_failure@@Base+0xf88>
   15930:	mov	r0, sl
   15934:	bl	17350 <argp_error@@Base+0x1430>
   15938:	ldr	r6, [sl, #20]
   1593c:	bic	r6, r6, r6, asr #31
   15940:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15944:	ldr	r7, [r3, #20]
   15948:	ldr	r3, [sl, #28]
   1594c:	ldr	r2, [sl, #24]
   15950:	sub	r3, r3, r2
   15954:	ldr	r2, [sl, #16]
   15958:	cmp	r3, r2
   1595c:	bls	15898 <argp_failure@@Base+0xe60>
   15960:	mov	r0, sl
   15964:	bl	17350 <argp_error@@Base+0x1430>
   15968:	b	15898 <argp_failure@@Base+0xe60>
   1596c:	mov	r0, sl
   15970:	bl	17350 <argp_error@@Base+0x1430>
   15974:	b	158bc <argp_failure@@Base+0xe84>
   15978:	ldr	r2, [sl, #28]
   1597c:	ldr	r3, [sl, #32]
   15980:	cmp	r2, r3
   15984:	bcs	159a0 <argp_failure@@Base+0xf68>
   15988:	ldr	r3, [sl, #28]
   1598c:	add	r2, r3, #1
   15990:	str	r2, [sl, #28]
   15994:	mov	r2, #10
   15998:	strb	r2, [r3]
   1599c:	b	159c0 <argp_failure@@Base+0xf88>
   159a0:	mov	r1, #1
   159a4:	mov	r0, sl
   159a8:	bl	178c8 <argp_error@@Base+0x19a8>
   159ac:	cmp	r0, #0
   159b0:	bne	15988 <argp_failure@@Base+0xf50>
   159b4:	b	159c0 <argp_failure@@Base+0xf88>
   159b8:	mov	r0, sl
   159bc:	bl	13230 <argp_parse@@Base+0x1a5c>
   159c0:	mov	r0, r4
   159c4:	bl	10e74 <strlen@plt>
   159c8:	subs	r6, r0, #0
   159cc:	bne	15af8 <argp_failure@@Base+0x10c0>
   159d0:	cmp	r5, r4
   159d4:	bne	15b40 <argp_failure@@Base+0x1108>
   159d8:	ldr	r3, [sl, #28]
   159dc:	ldr	r2, [sl, #24]
   159e0:	sub	r3, r3, r2
   159e4:	ldr	r2, [sl, #16]
   159e8:	cmp	r3, r2
   159ec:	bhi	15b4c <argp_failure@@Base+0x1114>
   159f0:	mov	r3, #0
   159f4:	str	r3, [sl, #4]
   159f8:	ldr	r2, [sl, #28]
   159fc:	ldr	r3, [sl, #32]
   15a00:	cmp	r2, r3
   15a04:	bcs	15b58 <argp_failure@@Base+0x1120>
   15a08:	ldr	r3, [sl, #28]
   15a0c:	add	r2, r3, #1
   15a10:	str	r2, [sl, #28]
   15a14:	mov	r2, #10
   15a18:	strb	r2, [r3]
   15a1c:	str	r9, [fp, #-88]	; 0xffffffa8
   15a20:	ldr	r3, [sl, #28]
   15a24:	ldr	r2, [sl, #24]
   15a28:	sub	r3, r3, r2
   15a2c:	ldr	r2, [sl, #16]
   15a30:	cmp	r3, r2
   15a34:	bhi	15b70 <argp_failure@@Base+0x1138>
   15a38:	ldr	r3, [fp, #-120]	; 0xffffff88
   15a3c:	str	r3, [sl, #4]
   15a40:	ldr	r3, [sl, #28]
   15a44:	ldr	r2, [sl, #24]
   15a48:	sub	r3, r3, r2
   15a4c:	ldr	r2, [sl, #16]
   15a50:	cmp	r3, r2
   15a54:	bhi	15b7c <argp_failure@@Base+0x1144>
   15a58:	ldr	r3, [fp, #-124]	; 0xffffff84
   15a5c:	str	r3, [sl, #12]
   15a60:	add	r9, r9, #28
   15a64:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15a68:	subs	r3, r3, #1
   15a6c:	str	r3, [fp, #-116]	; 0xffffff8c
   15a70:	beq	15b88 <argp_failure@@Base+0x1150>
   15a74:	ldr	r4, [r9]
   15a78:	ldr	r8, [r9, #8]
   15a7c:	ldr	r3, [sl, #28]
   15a80:	ldr	r2, [sl, #24]
   15a84:	sub	r3, r3, r2
   15a88:	ldr	r2, [sl, #16]
   15a8c:	cmp	r3, r2
   15a90:	bhi	1549c <argp_failure@@Base+0xa64>
   15a94:	ldr	r3, [sl, #4]
   15a98:	str	r3, [fp, #-120]	; 0xffffff88
   15a9c:	mov	r3, #0
   15aa0:	str	r3, [sl, #4]
   15aa4:	ldr	r3, [sl, #12]
   15aa8:	str	r3, [fp, #-124]	; 0xffffff84
   15aac:	str	r9, [fp, #-76]	; 0xffffffb4
   15ab0:	str	sl, [fp, #-72]	; 0xffffffb8
   15ab4:	sub	r3, fp, #88	; 0x58
   15ab8:	str	r3, [fp, #-68]	; 0xffffffbc
   15abc:	mov	r3, #1
   15ac0:	str	r3, [fp, #-64]	; 0xffffffc0
   15ac4:	ldr	r3, [fp, #-104]	; 0xffffff98
   15ac8:	str	r3, [fp, #-60]	; 0xffffffc4
   15acc:	ldr	r3, [r4, #12]
   15ad0:	ands	r3, r3, #8
   15ad4:	str	r3, [fp, #-112]	; 0xffffff90
   15ad8:	movne	r3, #0
   15adc:	strne	r3, [fp, #-112]	; 0xffffff90
   15ae0:	bne	154d4 <argp_failure@@Base+0xa9c>
   15ae4:	ldr	r2, [r9, #4]
   15ae8:	cmp	r2, #0
   15aec:	beq	154d4 <argp_failure@@Base+0xa9c>
   15af0:	add	r3, r4, #24
   15af4:	b	154b4 <argp_failure@@Base+0xa7c>
   15af8:	ldr	r3, [sl, #28]
   15afc:	add	r3, r3, r6
   15b00:	ldr	r2, [sl, #32]
   15b04:	cmp	r2, r3
   15b08:	bcs	15b20 <argp_failure@@Base+0x10e8>
   15b0c:	mov	r1, r6
   15b10:	mov	r0, sl
   15b14:	bl	178c8 <argp_error@@Base+0x19a8>
   15b18:	cmp	r0, #0
   15b1c:	beq	159d0 <argp_failure@@Base+0xf98>
   15b20:	mov	r2, r6
   15b24:	mov	r1, r4
   15b28:	ldr	r0, [sl, #28]
   15b2c:	bl	10d90 <memcpy@plt>
   15b30:	ldr	r3, [sl, #28]
   15b34:	add	r6, r3, r6
   15b38:	str	r6, [sl, #28]
   15b3c:	b	159d0 <argp_failure@@Base+0xf98>
   15b40:	mov	r0, r4
   15b44:	bl	124ac <argp_parse@@Base+0xcd8>
   15b48:	b	159d8 <argp_failure@@Base+0xfa0>
   15b4c:	mov	r0, sl
   15b50:	bl	17350 <argp_error@@Base+0x1430>
   15b54:	b	159f0 <argp_failure@@Base+0xfb8>
   15b58:	mov	r1, #1
   15b5c:	mov	r0, sl
   15b60:	bl	178c8 <argp_error@@Base+0x19a8>
   15b64:	cmp	r0, #0
   15b68:	bne	15a08 <argp_failure@@Base+0xfd0>
   15b6c:	b	15a1c <argp_failure@@Base+0xfe4>
   15b70:	mov	r0, sl
   15b74:	bl	17350 <argp_error@@Base+0x1430>
   15b78:	b	15a38 <argp_failure@@Base+0x1000>
   15b7c:	mov	r0, sl
   15b80:	bl	17350 <argp_error@@Base+0x1430>
   15b84:	b	15a58 <argp_failure@@Base+0x1020>
   15b88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15b8c:	cmp	r3, #0
   15b90:	beq	15bf4 <argp_failure@@Base+0x11bc>
   15b94:	movw	r3, #37116	; 0x90fc
   15b98:	movt	r3, #2
   15b9c:	ldr	r3, [r3, #4]
   15ba0:	cmp	r3, #0
   15ba4:	beq	15bf4 <argp_failure@@Base+0x11bc>
   15ba8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15bac:	cmp	r3, #0
   15bb0:	ldrne	r2, [r3]
   15bb4:	ldreq	r2, [fp, #-104]	; 0xffffff98
   15bb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15bbc:	mov	r1, #5
   15bc0:	movt	r1, #512	; 0x200
   15bc4:	movw	r0, #34144	; 0x8560
   15bc8:	movt	r0, #1
   15bcc:	bl	12ee0 <argp_parse@@Base+0x170c>
   15bd0:	subs	r4, r0, #0
   15bd4:	beq	15bf4 <argp_failure@@Base+0x11bc>
   15bd8:	ldrb	r3, [r4]
   15bdc:	cmp	r3, #0
   15be0:	bne	15c88 <argp_failure@@Base+0x1250>
   15be4:	movw	r3, #34144	; 0x8560
   15be8:	movt	r3, #1
   15bec:	cmp	r4, r3
   15bf0:	bne	15d5c <argp_failure@@Base+0x1324>
   15bf4:	mov	r4, #1
   15bf8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bfc:	tst	r3, #32
   15c00:	bne	15d68 <argp_failure@@Base+0x1330>
   15c04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c08:	tst	r3, #64	; 0x40
   15c0c:	beq	15c48 <argp_failure@@Base+0x1210>
   15c10:	movw	r3, #37252	; 0x9184
   15c14:	movt	r3, #2
   15c18:	ldr	r3, [r3]
   15c1c:	cmp	r3, #0
   15c20:	beq	15c48 <argp_failure@@Base+0x1210>
   15c24:	cmp	r4, #0
   15c28:	bne	15d90 <argp_failure@@Base+0x1358>
   15c2c:	movw	r3, #37252	; 0x9184
   15c30:	movt	r3, #2
   15c34:	ldr	r2, [r3]
   15c38:	movw	r1, #34260	; 0x85d4
   15c3c:	movt	r1, #1
   15c40:	mov	r0, sl
   15c44:	bl	179c8 <argp_error@@Base+0x1aa8>
   15c48:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15c4c:	bl	10dcc <funlockfile@plt>
   15c50:	ldr	r3, [fp, #-128]	; 0xffffff80
   15c54:	cmp	r3, #0
   15c58:	beq	15c64 <argp_failure@@Base+0x122c>
   15c5c:	mov	r0, r3
   15c60:	bl	12d58 <argp_parse@@Base+0x1584>
   15c64:	mov	r0, sl
   15c68:	bl	1787c <argp_error@@Base+0x195c>
   15c6c:	sub	sp, fp, #32
   15c70:	ldrd	r4, [sp]
   15c74:	ldrd	r6, [sp, #8]
   15c78:	ldrd	r8, [sp, #16]
   15c7c:	ldrd	sl, [sp, #24]
   15c80:	add	sp, sp, #32
   15c84:	pop	{pc}		; (ldr pc, [sp], #4)
   15c88:	ldr	r2, [sl, #28]
   15c8c:	ldr	r3, [sl, #32]
   15c90:	cmp	r2, r3
   15c94:	bcs	15ce4 <argp_failure@@Base+0x12ac>
   15c98:	ldr	r3, [sl, #28]
   15c9c:	add	r2, r3, #1
   15ca0:	str	r2, [sl, #28]
   15ca4:	mov	r2, #10
   15ca8:	strb	r2, [r3]
   15cac:	mov	r0, r4
   15cb0:	bl	10e74 <strlen@plt>
   15cb4:	subs	r5, r0, #0
   15cb8:	bne	15cfc <argp_failure@@Base+0x12c4>
   15cbc:	ldr	r2, [sl, #28]
   15cc0:	ldr	r3, [sl, #32]
   15cc4:	cmp	r2, r3
   15cc8:	bcs	15d44 <argp_failure@@Base+0x130c>
   15ccc:	ldr	r3, [sl, #28]
   15cd0:	add	r2, r3, #1
   15cd4:	str	r2, [sl, #28]
   15cd8:	mov	r2, #10
   15cdc:	strb	r2, [r3]
   15ce0:	b	15be4 <argp_failure@@Base+0x11ac>
   15ce4:	mov	r1, #1
   15ce8:	mov	r0, sl
   15cec:	bl	178c8 <argp_error@@Base+0x19a8>
   15cf0:	cmp	r0, #0
   15cf4:	bne	15c98 <argp_failure@@Base+0x1260>
   15cf8:	b	15cac <argp_failure@@Base+0x1274>
   15cfc:	ldr	r3, [sl, #28]
   15d00:	add	r3, r3, r5
   15d04:	ldr	r2, [sl, #32]
   15d08:	cmp	r2, r3
   15d0c:	bcs	15d24 <argp_failure@@Base+0x12ec>
   15d10:	mov	r1, r5
   15d14:	mov	r0, sl
   15d18:	bl	178c8 <argp_error@@Base+0x19a8>
   15d1c:	cmp	r0, #0
   15d20:	beq	15cbc <argp_failure@@Base+0x1284>
   15d24:	mov	r2, r5
   15d28:	mov	r1, r4
   15d2c:	ldr	r0, [sl, #28]
   15d30:	bl	10d90 <memcpy@plt>
   15d34:	ldr	r3, [sl, #28]
   15d38:	add	r5, r3, r5
   15d3c:	str	r5, [sl, #28]
   15d40:	b	15cbc <argp_failure@@Base+0x1284>
   15d44:	mov	r1, #1
   15d48:	mov	r0, sl
   15d4c:	bl	178c8 <argp_error@@Base+0x19a8>
   15d50:	cmp	r0, #0
   15d54:	bne	15ccc <argp_failure@@Base+0x1294>
   15d58:	b	15be4 <argp_failure@@Base+0x11ac>
   15d5c:	mov	r0, r4
   15d60:	bl	124ac <argp_parse@@Base+0xcd8>
   15d64:	b	15bf4 <argp_failure@@Base+0x11bc>
   15d68:	str	sl, [sp, #4]
   15d6c:	mov	r3, #0
   15d70:	str	r3, [sp]
   15d74:	mov	r3, r4
   15d78:	mov	r2, #1
   15d7c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15d80:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d84:	bl	13a64 <argp_parse@@Base+0x2290>
   15d88:	orr	r4, r4, r0
   15d8c:	b	15c04 <argp_failure@@Base+0x11cc>
   15d90:	ldr	r2, [sl, #28]
   15d94:	ldr	r3, [sl, #32]
   15d98:	cmp	r2, r3
   15d9c:	bcs	15db8 <argp_failure@@Base+0x1380>
   15da0:	ldr	r3, [sl, #28]
   15da4:	add	r2, r3, #1
   15da8:	str	r2, [sl, #28]
   15dac:	mov	r2, #10
   15db0:	strb	r2, [r3]
   15db4:	b	15c2c <argp_failure@@Base+0x11f4>
   15db8:	mov	r1, #1
   15dbc:	mov	r0, sl
   15dc0:	bl	178c8 <argp_error@@Base+0x19a8>
   15dc4:	cmp	r0, #0
   15dc8:	bne	15da0 <argp_failure@@Base+0x1368>
   15dcc:	b	15c2c <argp_failure@@Base+0x11f4>
   15dd0:	ldrb	r3, [r6]
   15dd4:	mov	r4, r6
   15dd8:	mov	r7, #0
   15ddc:	b	14e40 <argp_failure@@Base+0x408>
   15de0:	ldrb	r3, [r8]
   15de4:	cmp	r3, r7
   15de8:	beq	1551c <argp_failure@@Base+0xae4>
   15dec:	add	r5, r5, #24
   15df0:	subs	r6, r6, #1
   15df4:	beq	1560c <argp_failure@@Base+0xbd4>
   15df8:	ldr	r9, [r5, #12]
   15dfc:	tst	r9, #8
   15e00:	bne	15dec <argp_failure@@Base+0x13b4>
   15e04:	ldr	r7, [r5, #4]
   15e08:	sub	r3, r7, #1
   15e0c:	cmp	r3, #254	; 0xfe
   15e10:	bhi	15dec <argp_failure@@Base+0x13b4>
   15e14:	bl	10e5c <__ctype_b_loc@plt>
   15e18:	ldr	r2, [r0]
   15e1c:	lsl	r3, r7, #1
   15e20:	ldrh	r3, [r2, r3]
   15e24:	tst	r3, #16384	; 0x4000
   15e28:	bne	15de0 <argp_failure@@Base+0x13a8>
   15e2c:	b	15dec <argp_failure@@Base+0x13b4>
   15e30:	andeq	r8, r1, ip, asr r2

00015e34 <argp_help@@Base>:
   15e34:	push	{lr}		; (str lr, [sp, #-4]!)
   15e38:	sub	sp, sp, #12
   15e3c:	str	r3, [sp]
   15e40:	mov	r3, r2
   15e44:	mov	r2, r1
   15e48:	mov	r1, #0
   15e4c:	bl	14c54 <argp_failure@@Base+0x21c>
   15e50:	add	sp, sp, #12
   15e54:	pop	{pc}		; (ldr pc, [sp], #4)

00015e58 <argp_state_help@@Base>:
   15e58:	strd	r4, [sp, #-12]!
   15e5c:	str	lr, [sp, #8]
   15e60:	sub	sp, sp, #12
   15e64:	mov	r5, r2
   15e68:	subs	r4, r0, #0
   15e6c:	beq	15e8c <argp_state_help@@Base+0x34>
   15e70:	ldr	r3, [r4, #16]
   15e74:	tst	r3, #2
   15e78:	beq	15ecc <argp_state_help@@Base+0x74>
   15e7c:	add	sp, sp, #12
   15e80:	ldrd	r4, [sp]
   15e84:	add	sp, sp, #8
   15e88:	pop	{pc}		; (ldr pc, [sp], #4)
   15e8c:	cmp	r1, #0
   15e90:	beq	15e7c <argp_state_help@@Base+0x24>
   15e94:	movw	r3, #37176	; 0x9138
   15e98:	movt	r3, #2
   15e9c:	ldr	r3, [r3]
   15ea0:	str	r3, [sp]
   15ea4:	mov	r3, r2
   15ea8:	mov	r2, r1
   15eac:	mov	r1, #0
   15eb0:	mov	r0, r1
   15eb4:	bl	14c54 <argp_failure@@Base+0x21c>
   15eb8:	b	15f08 <argp_state_help@@Base+0xb0>
   15ebc:	movw	r3, #37168	; 0x9130
   15ec0:	movt	r3, #2
   15ec4:	ldr	r0, [r3]
   15ec8:	bl	10e68 <exit@plt>
   15ecc:	cmp	r1, #0
   15ed0:	beq	15e7c <argp_state_help@@Base+0x24>
   15ed4:	ldr	r3, [r4, #16]
   15ed8:	tst	r3, #64	; 0x40
   15edc:	orrne	r5, r5, #128	; 0x80
   15ee0:	ldr	r3, [r4, #40]	; 0x28
   15ee4:	str	r3, [sp]
   15ee8:	mov	r3, r5
   15eec:	mov	r2, r1
   15ef0:	mov	r1, r4
   15ef4:	ldr	r0, [r4]
   15ef8:	bl	14c54 <argp_failure@@Base+0x21c>
   15efc:	ldr	r3, [r4, #16]
   15f00:	tst	r3, #32
   15f04:	bne	15e7c <argp_state_help@@Base+0x24>
   15f08:	tst	r5, #256	; 0x100
   15f0c:	bne	15ebc <argp_state_help@@Base+0x64>
   15f10:	tst	r5, #512	; 0x200
   15f14:	beq	15e7c <argp_state_help@@Base+0x24>
   15f18:	mov	r0, #0
   15f1c:	bl	10e68 <exit@plt>

00015f20 <argp_error@@Base>:
   15f20:	push	{r1, r2, r3}
   15f24:	strd	r4, [sp, #-12]!
   15f28:	str	lr, [sp, #8]
   15f2c:	sub	sp, sp, #8
   15f30:	subs	r5, r0, #0
   15f34:	beq	1600c <argp_error@@Base+0xec>
   15f38:	ldr	r3, [r5, #16]
   15f3c:	tst	r3, #2
   15f40:	bne	15ff4 <argp_error@@Base+0xd4>
   15f44:	ldr	r4, [r5, #44]	; 0x2c
   15f48:	cmp	r4, #0
   15f4c:	beq	15ff4 <argp_error@@Base+0xd4>
   15f50:	mov	r0, r4
   15f54:	bl	10ef8 <flockfile@plt>
   15f58:	add	r3, sp, #24
   15f5c:	str	r3, [sp, #4]
   15f60:	ldr	r0, [r5, #40]	; 0x28
   15f64:	mov	r1, r4
   15f68:	bl	10d24 <fputs_unlocked@plt>
   15f6c:	ldr	r3, [r4, #20]
   15f70:	ldr	r2, [r4, #24]
   15f74:	cmp	r3, r2
   15f78:	addcc	r2, r3, #1
   15f7c:	strcc	r2, [r4, #20]
   15f80:	movcc	r2, #58	; 0x3a
   15f84:	strbcc	r2, [r3]
   15f88:	bcs	16040 <argp_error@@Base+0x120>
   15f8c:	ldr	r3, [r4, #20]
   15f90:	ldr	r2, [r4, #24]
   15f94:	cmp	r3, r2
   15f98:	addcc	r2, r3, #1
   15f9c:	strcc	r2, [r4, #20]
   15fa0:	movcc	r2, #32
   15fa4:	strbcc	r2, [r3]
   15fa8:	bcs	16050 <argp_error@@Base+0x130>
   15fac:	ldr	r2, [sp, #4]
   15fb0:	ldr	r1, [sp, #20]
   15fb4:	mov	r0, r4
   15fb8:	bl	10ee0 <vfprintf@plt>
   15fbc:	ldr	r3, [r4, #20]
   15fc0:	ldr	r2, [r4, #24]
   15fc4:	cmp	r3, r2
   15fc8:	addcc	r2, r3, #1
   15fcc:	strcc	r2, [r4, #20]
   15fd0:	movcc	r2, #10
   15fd4:	strbcc	r2, [r3]
   15fd8:	bcs	16060 <argp_error@@Base+0x140>
   15fdc:	mov	r2, #260	; 0x104
   15fe0:	mov	r1, r4
   15fe4:	mov	r0, r5
   15fe8:	bl	15e58 <argp_state_help@@Base>
   15fec:	mov	r0, r4
   15ff0:	bl	10dcc <funlockfile@plt>
   15ff4:	add	sp, sp, #8
   15ff8:	ldrd	r4, [sp]
   15ffc:	ldr	lr, [sp, #8]
   16000:	add	sp, sp, #12
   16004:	add	sp, sp, #12
   16008:	bx	lr
   1600c:	movw	r3, #37184	; 0x9140
   16010:	movt	r3, #2
   16014:	ldr	r4, [r3]
   16018:	cmp	r4, #0
   1601c:	beq	15ff4 <argp_error@@Base+0xd4>
   16020:	mov	r0, r4
   16024:	bl	10ef8 <flockfile@plt>
   16028:	add	r3, sp, #24
   1602c:	str	r3, [sp, #4]
   16030:	movw	r3, #37176	; 0x9138
   16034:	movt	r3, #2
   16038:	ldr	r0, [r3]
   1603c:	b	15f64 <argp_error@@Base+0x44>
   16040:	mov	r1, #58	; 0x3a
   16044:	mov	r0, r4
   16048:	bl	10ec8 <__overflow@plt>
   1604c:	b	15f8c <argp_error@@Base+0x6c>
   16050:	mov	r1, #32
   16054:	mov	r0, r4
   16058:	bl	10ec8 <__overflow@plt>
   1605c:	b	15fac <argp_error@@Base+0x8c>
   16060:	mov	r1, #10
   16064:	mov	r0, r4
   16068:	bl	10ec8 <__overflow@plt>
   1606c:	b	15fdc <argp_error@@Base+0xbc>
   16070:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16074:	strd	r6, [sp, #8]
   16078:	strd	r8, [sp, #16]
   1607c:	str	lr, [sp, #24]
   16080:	ldr	r5, [r1, #28]
   16084:	ldr	r6, [r1, #32]
   16088:	ldr	r8, [r1]
   1608c:	add	r7, r0, r6, lsl #2
   16090:	b	160c0 <argp_error@@Base+0x1a0>
   16094:	add	r3, r0, r5, lsl #2
   16098:	add	r4, r9, r5
   1609c:	add	r4, r0, r4, lsl #2
   160a0:	mov	r2, r7
   160a4:	ldr	ip, [r3]
   160a8:	ldr	lr, [r2]
   160ac:	str	lr, [r3], #4
   160b0:	str	ip, [r2], #4
   160b4:	cmp	r3, r4
   160b8:	bne	160a4 <argp_error@@Base+0x184>
   160bc:	add	r5, r5, r9
   160c0:	cmp	r8, r6
   160c4:	movle	r3, #0
   160c8:	movgt	r3, #1
   160cc:	cmp	r5, r6
   160d0:	movge	r3, #0
   160d4:	cmp	r3, #0
   160d8:	beq	1611c <argp_error@@Base+0x1fc>
   160dc:	sub	r9, r8, r6
   160e0:	sub	r3, r6, r5
   160e4:	cmp	r9, r3
   160e8:	ble	16094 <argp_error@@Base+0x174>
   160ec:	add	r2, r0, r5, lsl #2
   160f0:	sub	r9, r8, r3
   160f4:	add	r3, r0, r9, lsl #2
   160f8:	add	r4, r0, r8, lsl #2
   160fc:	ldr	ip, [r2]
   16100:	ldr	lr, [r3]
   16104:	str	lr, [r2], #4
   16108:	str	ip, [r3], #4
   1610c:	cmp	r3, r4
   16110:	bne	160fc <argp_error@@Base+0x1dc>
   16114:	mov	r8, r9
   16118:	b	160c0 <argp_error@@Base+0x1a0>
   1611c:	ldr	r0, [r1]
   16120:	ldr	r3, [r1, #32]
   16124:	sub	r2, r0, r3
   16128:	ldr	r3, [r1, #28]
   1612c:	add	r3, r3, r2
   16130:	str	r3, [r1, #28]
   16134:	str	r0, [r1, #32]
   16138:	ldrd	r4, [sp]
   1613c:	ldrd	r6, [sp, #8]
   16140:	ldrd	r8, [sp, #16]
   16144:	add	sp, sp, #24
   16148:	pop	{pc}		; (ldr pc, [sp], #4)
   1614c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16150:	strd	r6, [sp, #8]
   16154:	strd	r8, [sp, #16]
   16158:	strd	sl, [sp, #24]
   1615c:	str	lr, [sp, #32]
   16160:	sub	sp, sp, #52	; 0x34
   16164:	str	r0, [sp, #32]
   16168:	str	r1, [sp, #20]
   1616c:	str	r2, [sp, #28]
   16170:	str	r3, [sp, #16]
   16174:	ldr	fp, [sp, #96]	; 0x60
   16178:	ldr	r9, [fp, #20]
   1617c:	ldrb	r3, [r9]
   16180:	cmp	r3, #0
   16184:	cmpne	r3, #61	; 0x3d
   16188:	beq	161c0 <argp_error@@Base+0x2a0>
   1618c:	mov	r8, r9
   16190:	ldrb	r3, [r8, #1]!
   16194:	cmp	r3, #0
   16198:	cmpne	r3, #61	; 0x3d
   1619c:	bne	16190 <argp_error@@Base+0x270>
   161a0:	sub	r7, r8, r9
   161a4:	ldr	r5, [sp, #16]
   161a8:	ldr	sl, [r5]
   161ac:	cmp	sl, #0
   161b0:	beq	16684 <argp_error@@Base+0x764>
   161b4:	mov	r4, sl
   161b8:	mov	r6, #0
   161bc:	b	161d8 <argp_error@@Base+0x2b8>
   161c0:	mov	r8, r9
   161c4:	b	161a0 <argp_error@@Base+0x280>
   161c8:	add	r6, r6, #1
   161cc:	ldr	r4, [r5, #16]!
   161d0:	cmp	r4, #0
   161d4:	beq	16688 <argp_error@@Base+0x768>
   161d8:	str	r5, [sp, #12]
   161dc:	mov	r2, r7
   161e0:	mov	r1, r9
   161e4:	mov	r0, r4
   161e8:	bl	10f34 <strncmp@plt>
   161ec:	cmp	r0, #0
   161f0:	bne	161c8 <argp_error@@Base+0x2a8>
   161f4:	mov	r0, r4
   161f8:	bl	10e74 <strlen@plt>
   161fc:	cmp	r0, r7
   16200:	bne	161c8 <argp_error@@Base+0x2a8>
   16204:	cmp	r5, #0
   16208:	beq	16690 <argp_error@@Base+0x770>
   1620c:	ldr	r3, [fp]
   16210:	add	r2, r3, #1
   16214:	str	r2, [fp]
   16218:	mov	r1, #0
   1621c:	str	r1, [fp, #20]
   16220:	ldrb	r1, [r8]
   16224:	cmp	r1, #0
   16228:	beq	165d8 <argp_error@@Base+0x6b8>
   1622c:	ldr	r3, [sp, #12]
   16230:	ldr	r3, [r3, #4]
   16234:	cmp	r3, #0
   16238:	beq	16584 <argp_error@@Base+0x664>
   1623c:	add	r8, r8, #1
   16240:	str	r8, [fp, #12]
   16244:	ldr	r3, [sp, #88]	; 0x58
   16248:	cmp	r3, #0
   1624c:	strne	r6, [r3]
   16250:	ldr	r2, [sp, #12]
   16254:	ldr	r3, [r2, #8]
   16258:	cmp	r3, #0
   1625c:	beq	16670 <argp_error@@Base+0x750>
   16260:	ldr	r2, [r2, #12]
   16264:	str	r2, [r3]
   16268:	mov	r0, #0
   1626c:	add	sp, sp, #52	; 0x34
   16270:	ldrd	r4, [sp]
   16274:	ldrd	r6, [sp, #8]
   16278:	ldrd	r8, [sp, #16]
   1627c:	ldrd	sl, [sp, #24]
   16280:	add	sp, sp, #32
   16284:	pop	{pc}		; (ldr pc, [sp], #4)
   16288:	ldr	r2, [sl, #8]
   1628c:	ldr	r3, [r9, #8]
   16290:	cmp	r2, r3
   16294:	bne	16354 <argp_error@@Base+0x434>
   16298:	ldr	r2, [sl, #12]
   1629c:	ldr	r3, [r9, #12]
   162a0:	cmp	r2, r3
   162a4:	bne	16354 <argp_error@@Base+0x434>
   162a8:	b	1630c <argp_error@@Base+0x3ec>
   162ac:	mov	r0, r6
   162b0:	bl	12bf8 <argp_parse@@Base+0x1424>
   162b4:	subs	r3, r0, #0
   162b8:	str	r3, [sp, #24]
   162bc:	beq	16384 <argp_error@@Base+0x464>
   162c0:	mov	r2, r6
   162c4:	mov	r1, #0
   162c8:	ldr	r7, [sp, #24]
   162cc:	mov	r0, r7
   162d0:	bl	10eb0 <memset@plt>
   162d4:	ldr	r2, [sp, #36]	; 0x24
   162d8:	mov	r1, #1
   162dc:	strb	r1, [r7, r2]
   162e0:	ldr	r3, [sp, #44]	; 0x2c
   162e4:	str	r3, [sp, #40]	; 0x28
   162e8:	b	16374 <argp_error@@Base+0x454>
   162ec:	ldr	r3, [sp, #24]
   162f0:	cmp	r3, #0
   162f4:	moveq	r5, #1
   162f8:	beq	1630c <argp_error@@Base+0x3ec>
   162fc:	mov	r5, #1
   16300:	b	16374 <argp_error@@Base+0x454>
   16304:	str	r4, [sp, #36]	; 0x24
   16308:	mov	sl, r9
   1630c:	add	r4, r4, #1
   16310:	ldr	r0, [r9, #16]!
   16314:	cmp	r0, #0
   16318:	beq	1638c <argp_error@@Base+0x46c>
   1631c:	ldr	r2, [sp, #12]
   16320:	ldr	r1, [fp, #20]
   16324:	bl	10f34 <strncmp@plt>
   16328:	cmp	r0, #0
   1632c:	bne	1630c <argp_error@@Base+0x3ec>
   16330:	cmp	sl, #0
   16334:	beq	16304 <argp_error@@Base+0x3e4>
   16338:	ldr	r3, [sp, #92]	; 0x5c
   1633c:	cmp	r3, #0
   16340:	bne	16354 <argp_error@@Base+0x434>
   16344:	ldr	r2, [sl, #4]
   16348:	ldr	r3, [r9, #4]
   1634c:	cmp	r2, r3
   16350:	beq	16288 <argp_error@@Base+0x368>
   16354:	cmp	r5, #0
   16358:	bne	1630c <argp_error@@Base+0x3ec>
   1635c:	ldr	r3, [sp, #100]	; 0x64
   16360:	cmp	r3, #0
   16364:	beq	162ec <argp_error@@Base+0x3cc>
   16368:	ldr	r3, [sp, #24]
   1636c:	cmp	r3, #0
   16370:	beq	162ac <argp_error@@Base+0x38c>
   16374:	ldr	r3, [sp, #24]
   16378:	mov	r2, #1
   1637c:	strb	r2, [r3, r4]
   16380:	b	1630c <argp_error@@Base+0x3ec>
   16384:	mov	r5, #1
   16388:	b	1630c <argp_error@@Base+0x3ec>
   1638c:	str	sl, [sp, #12]
   16390:	ldr	r3, [sp, #24]
   16394:	orrs	r3, r3, r5
   16398:	bne	16410 <argp_error@@Base+0x4f0>
   1639c:	ldr	r3, [sp, #12]
   163a0:	cmp	r3, #0
   163a4:	bne	1657c <argp_error@@Base+0x65c>
   163a8:	ldr	r3, [sp, #92]	; 0x5c
   163ac:	cmp	r3, #0
   163b0:	beq	163e4 <argp_error@@Base+0x4c4>
   163b4:	ldr	r3, [fp]
   163b8:	ldr	r2, [sp, #20]
   163bc:	ldr	r3, [r2, r3, lsl #2]
   163c0:	ldrb	r3, [r3, #1]
   163c4:	cmp	r3, #45	; 0x2d
   163c8:	beq	163e4 <argp_error@@Base+0x4c4>
   163cc:	ldr	r3, [fp, #20]
   163d0:	ldrb	r1, [r3]
   163d4:	ldr	r0, [sp, #28]
   163d8:	bl	10e80 <strchr@plt>
   163dc:	cmp	r0, #0
   163e0:	bne	1667c <argp_error@@Base+0x75c>
   163e4:	ldr	r3, [sp, #100]	; 0x64
   163e8:	cmp	r3, #0
   163ec:	bne	1654c <argp_error@@Base+0x62c>
   163f0:	mov	r2, #0
   163f4:	str	r2, [fp, #20]
   163f8:	ldr	r3, [fp]
   163fc:	add	r3, r3, #1
   16400:	str	r3, [fp]
   16404:	str	r2, [fp, #8]
   16408:	mov	r0, #63	; 0x3f
   1640c:	b	1626c <argp_error@@Base+0x34c>
   16410:	ldr	r3, [sp, #100]	; 0x64
   16414:	cmp	r3, #0
   16418:	beq	16450 <argp_error@@Base+0x530>
   1641c:	cmp	r5, #0
   16420:	beq	1648c <argp_error@@Base+0x56c>
   16424:	movw	r0, #37184	; 0x9140
   16428:	movt	r0, #2
   1642c:	ldr	r3, [fp, #20]
   16430:	str	r3, [sp]
   16434:	ldr	r3, [sp, #104]	; 0x68
   16438:	ldr	r2, [sp, #20]
   1643c:	ldr	r2, [r2]
   16440:	movw	r1, #34280	; 0x85e8
   16444:	movt	r1, #1
   16448:	ldr	r0, [r0]
   1644c:	bl	10e8c <fprintf@plt>
   16450:	ldr	r3, [sp, #40]	; 0x28
   16454:	cmp	r3, #0
   16458:	bne	16540 <argp_error@@Base+0x620>
   1645c:	ldr	r4, [fp, #20]
   16460:	mov	r0, r4
   16464:	bl	10e74 <strlen@plt>
   16468:	add	r0, r4, r0
   1646c:	str	r0, [fp, #20]
   16470:	ldr	r3, [fp]
   16474:	add	r3, r3, #1
   16478:	str	r3, [fp]
   1647c:	mov	r3, #0
   16480:	str	r3, [fp, #8]
   16484:	mov	r0, #63	; 0x3f
   16488:	b	1626c <argp_error@@Base+0x34c>
   1648c:	movw	r4, #37184	; 0x9140
   16490:	movt	r4, #2
   16494:	ldr	r0, [r4]
   16498:	bl	10ef8 <flockfile@plt>
   1649c:	ldr	r3, [fp, #20]
   164a0:	str	r3, [sp]
   164a4:	ldr	r3, [sp, #104]	; 0x68
   164a8:	ldr	r2, [sp, #20]
   164ac:	ldr	r2, [r2]
   164b0:	movw	r1, #34312	; 0x8608
   164b4:	movt	r1, #1
   164b8:	ldr	r0, [r4]
   164bc:	bl	10e8c <fprintf@plt>
   164c0:	cmp	r6, #0
   164c4:	ble	16520 <argp_error@@Base+0x600>
   164c8:	ldr	r2, [sp, #24]
   164cc:	sub	r4, r2, #1
   164d0:	sub	r3, r6, #1
   164d4:	add	r8, r2, r3
   164d8:	movw	r7, #34360	; 0x8638
   164dc:	movt	r7, #1
   164e0:	movw	r6, #37184	; 0x9140
   164e4:	movt	r6, #2
   164e8:	ldr	r9, [sp, #16]
   164ec:	b	164fc <argp_error@@Base+0x5dc>
   164f0:	add	r5, r5, #1
   164f4:	cmp	r8, r4
   164f8:	beq	16520 <argp_error@@Base+0x600>
   164fc:	ldrb	r3, [r4, #1]!
   16500:	cmp	r3, #0
   16504:	beq	164f0 <argp_error@@Base+0x5d0>
   16508:	ldr	r3, [r9, r5, lsl #4]
   1650c:	ldr	r2, [sp, #104]	; 0x68
   16510:	mov	r1, r7
   16514:	ldr	r0, [r6]
   16518:	bl	10e8c <fprintf@plt>
   1651c:	b	164f0 <argp_error@@Base+0x5d0>
   16520:	movw	r4, #37184	; 0x9140
   16524:	movt	r4, #2
   16528:	ldr	r1, [r4]
   1652c:	mov	r0, #10
   16530:	bl	10eec <fputc@plt>
   16534:	ldr	r0, [r4]
   16538:	bl	10dcc <funlockfile@plt>
   1653c:	b	16450 <argp_error@@Base+0x530>
   16540:	ldr	r0, [sp, #24]
   16544:	bl	124ac <argp_parse@@Base+0xcd8>
   16548:	b	1645c <argp_error@@Base+0x53c>
   1654c:	movw	r0, #37184	; 0x9140
   16550:	movt	r0, #2
   16554:	ldr	r3, [fp, #20]
   16558:	str	r3, [sp]
   1655c:	ldr	r3, [sp, #104]	; 0x68
   16560:	ldr	r2, [sp, #20]
   16564:	ldr	r2, [r2]
   16568:	movw	r1, #34368	; 0x8640
   1656c:	movt	r1, #1
   16570:	ldr	r0, [r0]
   16574:	bl	10e8c <fprintf@plt>
   16578:	b	163f0 <argp_error@@Base+0x4d0>
   1657c:	ldr	r6, [sp, #36]	; 0x24
   16580:	b	1620c <argp_error@@Base+0x2ec>
   16584:	ldr	r3, [sp, #100]	; 0x64
   16588:	cmp	r3, #0
   1658c:	bne	165a4 <argp_error@@Base+0x684>
   16590:	ldr	r3, [sp, #12]
   16594:	ldr	r3, [r3, #12]
   16598:	str	r3, [fp, #8]
   1659c:	mov	r0, #63	; 0x3f
   165a0:	b	1626c <argp_error@@Base+0x34c>
   165a4:	movw	r0, #37184	; 0x9140
   165a8:	movt	r0, #2
   165ac:	ldr	r3, [sp, #12]
   165b0:	ldr	r3, [r3]
   165b4:	str	r3, [sp]
   165b8:	ldr	r3, [sp, #104]	; 0x68
   165bc:	ldr	r2, [sp, #20]
   165c0:	ldr	r2, [r2]
   165c4:	movw	r1, #34400	; 0x8660
   165c8:	movt	r1, #1
   165cc:	ldr	r0, [r0]
   165d0:	bl	10e8c <fprintf@plt>
   165d4:	b	16590 <argp_error@@Base+0x670>
   165d8:	ldr	r1, [sp, #12]
   165dc:	ldr	r1, [r1, #4]
   165e0:	cmp	r1, #1
   165e4:	bne	16244 <argp_error@@Base+0x324>
   165e8:	ldr	r1, [sp, #32]
   165ec:	cmp	r2, r1
   165f0:	bge	1660c <argp_error@@Base+0x6ec>
   165f4:	add	r3, r3, #2
   165f8:	str	r3, [fp]
   165fc:	ldr	r3, [sp, #20]
   16600:	ldr	r3, [r3, r2, lsl #2]
   16604:	str	r3, [fp, #12]
   16608:	b	16244 <argp_error@@Base+0x324>
   1660c:	ldr	r3, [sp, #100]	; 0x64
   16610:	cmp	r3, #0
   16614:	bne	1663c <argp_error@@Base+0x71c>
   16618:	ldr	r3, [sp, #12]
   1661c:	ldr	r3, [r3, #12]
   16620:	str	r3, [fp, #8]
   16624:	ldr	r3, [sp, #28]
   16628:	ldrb	r3, [r3]
   1662c:	cmp	r3, #58	; 0x3a
   16630:	moveq	r0, #58	; 0x3a
   16634:	movne	r0, #63	; 0x3f
   16638:	b	1626c <argp_error@@Base+0x34c>
   1663c:	movw	r0, #37184	; 0x9140
   16640:	movt	r0, #2
   16644:	ldr	r3, [sp, #12]
   16648:	ldr	r3, [r3]
   1664c:	str	r3, [sp]
   16650:	ldr	r3, [sp, #104]	; 0x68
   16654:	ldr	r2, [sp, #20]
   16658:	ldr	r2, [r2]
   1665c:	movw	r1, #34448	; 0x8690
   16660:	movt	r1, #1
   16664:	ldr	r0, [r0]
   16668:	bl	10e8c <fprintf@plt>
   1666c:	b	16618 <argp_error@@Base+0x6f8>
   16670:	ldr	r3, [sp, #12]
   16674:	ldr	r0, [r3, #12]
   16678:	b	1626c <argp_error@@Base+0x34c>
   1667c:	mvn	r0, #0
   16680:	b	1626c <argp_error@@Base+0x34c>
   16684:	mov	r6, #0
   16688:	cmp	sl, #0
   1668c:	beq	163a8 <argp_error@@Base+0x488>
   16690:	ldr	r9, [sp, #16]
   16694:	mvn	r3, #0
   16698:	str	r3, [sp, #36]	; 0x24
   1669c:	mov	r5, #0
   166a0:	str	r5, [sp, #40]	; 0x28
   166a4:	str	r5, [sp, #24]
   166a8:	mov	r4, r5
   166ac:	mov	r3, #1
   166b0:	str	r3, [sp, #44]	; 0x2c
   166b4:	mov	r0, sl
   166b8:	mov	sl, r5
   166bc:	str	r7, [sp, #12]
   166c0:	b	1631c <argp_error@@Base+0x3fc>
   166c4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   166c8:	strd	r6, [sp, #8]
   166cc:	strd	r8, [sp, #16]
   166d0:	strd	sl, [sp, #24]
   166d4:	str	lr, [sp, #32]
   166d8:	sub	sp, sp, #36	; 0x24
   166dc:	str	r3, [sp, #24]
   166e0:	ldr	r4, [sp, #80]	; 0x50
   166e4:	ldr	r8, [r4, #4]
   166e8:	subs	r5, r0, #0
   166ec:	ble	16c28 <argp_error@@Base+0xd08>
   166f0:	mov	r9, r1
   166f4:	mov	r6, r2
   166f8:	mov	r3, #0
   166fc:	str	r3, [r4, #12]
   16700:	ldr	r3, [r4]
   16704:	cmp	r3, #0
   16708:	beq	1672c <argp_error@@Base+0x80c>
   1670c:	ldr	r3, [r4, #16]
   16710:	cmp	r3, #0
   16714:	beq	16734 <argp_error@@Base+0x814>
   16718:	ldrb	r3, [r2]
   1671c:	sub	r3, r3, #43	; 0x2b
   16720:	tst	r3, #253	; 0xfd
   16724:	addeq	r6, r2, #1
   16728:	b	16790 <argp_error@@Base+0x870>
   1672c:	mov	r3, #1
   16730:	str	r3, [r4]
   16734:	ldr	r3, [r4]
   16738:	str	r3, [r4, #32]
   1673c:	str	r3, [r4, #28]
   16740:	mov	r3, #0
   16744:	str	r3, [r4, #20]
   16748:	ldrb	r3, [r6]
   1674c:	cmp	r3, #45	; 0x2d
   16750:	moveq	r3, #2
   16754:	streq	r3, [r4, #24]
   16758:	addeq	r6, r6, #1
   1675c:	beq	16788 <argp_error@@Base+0x868>
   16760:	cmp	r3, #43	; 0x2b
   16764:	moveq	r3, #0
   16768:	streq	r3, [r4, #24]
   1676c:	addeq	r6, r6, #1
   16770:	beq	16788 <argp_error@@Base+0x868>
   16774:	ldr	r3, [sp, #84]	; 0x54
   16778:	cmp	r3, #0
   1677c:	beq	16850 <argp_error@@Base+0x930>
   16780:	mov	r3, #0
   16784:	str	r3, [r4, #24]
   16788:	mov	r3, #1
   1678c:	str	r3, [r4, #16]
   16790:	ldrb	r3, [r6]
   16794:	cmp	r3, #58	; 0x3a
   16798:	moveq	r8, #0
   1679c:	ldr	r3, [r4, #20]
   167a0:	cmp	r3, #0
   167a4:	beq	167b4 <argp_error@@Base+0x894>
   167a8:	ldrb	r3, [r3]
   167ac:	cmp	r3, #0
   167b0:	bne	16954 <argp_error@@Base+0xa34>
   167b4:	ldr	r3, [r4]
   167b8:	ldr	r2, [r4, #32]
   167bc:	cmp	r2, r3
   167c0:	strgt	r3, [r4, #32]
   167c4:	ldr	r2, [r4, #28]
   167c8:	cmp	r3, r2
   167cc:	strlt	r3, [r4, #28]
   167d0:	ldr	r2, [r4, #24]
   167d4:	cmp	r2, #1
   167d8:	beq	16870 <argp_error@@Base+0x950>
   167dc:	ldr	r7, [r4]
   167e0:	cmp	r7, r5
   167e4:	beq	16830 <argp_error@@Base+0x910>
   167e8:	ldr	sl, [r9, r7, lsl #2]
   167ec:	movw	r1, #32156	; 0x7d9c
   167f0:	movt	r1, #1
   167f4:	mov	r0, sl
   167f8:	bl	10d30 <strcmp@plt>
   167fc:	cmp	r0, #0
   16800:	bne	16c38 <argp_error@@Base+0xd18>
   16804:	add	r7, r7, #1
   16808:	str	r7, [r4]
   1680c:	ldr	r2, [r4, #28]
   16810:	ldr	r3, [r4, #32]
   16814:	cmp	r2, r3
   16818:	cmpne	r7, r3
   1681c:	bne	168ec <argp_error@@Base+0x9cc>
   16820:	cmp	r2, r3
   16824:	streq	r7, [r4, #28]
   16828:	str	r5, [r4, #32]
   1682c:	str	r5, [r4]
   16830:	ldr	r3, [r4, #28]
   16834:	ldr	r2, [r4, #32]
   16838:	cmp	r3, r2
   1683c:	mvneq	r0, #0
   16840:	beq	16c64 <argp_error@@Base+0xd44>
   16844:	str	r3, [r4]
   16848:	mvn	r0, #0
   1684c:	b	16c64 <argp_error@@Base+0xd44>
   16850:	movw	r0, #34488	; 0x86b8
   16854:	movt	r0, #1
   16858:	bl	10dfc <getenv@plt>
   1685c:	cmp	r0, #0
   16860:	bne	16780 <argp_error@@Base+0x860>
   16864:	mov	r3, #1
   16868:	str	r3, [r4, #24]
   1686c:	b	16788 <argp_error@@Base+0x868>
   16870:	ldr	r2, [r4, #32]
   16874:	ldr	r1, [r4, #28]
   16878:	cmp	r1, r2
   1687c:	cmpne	r3, r2
   16880:	bne	168a0 <argp_error@@Base+0x980>
   16884:	cmp	r3, r2
   16888:	strne	r3, [r4, #28]
   1688c:	ldr	r3, [r4]
   16890:	cmp	r5, r3
   16894:	ble	168e4 <argp_error@@Base+0x9c4>
   16898:	add	r1, r9, r3, lsl #2
   1689c:	b	168c0 <argp_error@@Base+0x9a0>
   168a0:	mov	r1, r4
   168a4:	mov	r0, r9
   168a8:	bl	16070 <argp_error@@Base+0x150>
   168ac:	b	1688c <argp_error@@Base+0x96c>
   168b0:	add	r3, r3, #1
   168b4:	str	r3, [r4]
   168b8:	cmp	r3, r5
   168bc:	beq	168e0 <argp_error@@Base+0x9c0>
   168c0:	ldr	r2, [r1], #4
   168c4:	ldrb	r0, [r2]
   168c8:	cmp	r0, #45	; 0x2d
   168cc:	bne	168b0 <argp_error@@Base+0x990>
   168d0:	ldrb	r2, [r2, #1]
   168d4:	cmp	r2, #0
   168d8:	beq	168b0 <argp_error@@Base+0x990>
   168dc:	b	168e4 <argp_error@@Base+0x9c4>
   168e0:	mov	r3, r5
   168e4:	str	r3, [r4, #32]
   168e8:	b	167dc <argp_error@@Base+0x8bc>
   168ec:	mov	r1, r4
   168f0:	mov	r0, r9
   168f4:	bl	16070 <argp_error@@Base+0x150>
   168f8:	b	16828 <argp_error@@Base+0x908>
   168fc:	ldrb	r1, [sl, #1]
   16900:	cmp	r1, #0
   16904:	beq	16c44 <argp_error@@Base+0xd24>
   16908:	ldr	r3, [sp, #24]
   1690c:	cmp	r3, #0
   16910:	beq	16944 <argp_error@@Base+0xa24>
   16914:	cmp	r1, #45	; 0x2d
   16918:	beq	169c0 <argp_error@@Base+0xaa0>
   1691c:	ldr	r3, [sp, #76]	; 0x4c
   16920:	cmp	r3, #0
   16924:	beq	16944 <argp_error@@Base+0xa24>
   16928:	ldrb	r3, [sl, #2]
   1692c:	cmp	r3, #0
   16930:	bne	16a04 <argp_error@@Base+0xae4>
   16934:	mov	r0, r6
   16938:	bl	10e80 <strchr@plt>
   1693c:	cmp	r0, #0
   16940:	beq	16a04 <argp_error@@Base+0xae4>
   16944:	ldr	r3, [r4]
   16948:	ldr	r3, [r9, r3, lsl #2]
   1694c:	add	r3, r3, #1
   16950:	str	r3, [r4, #20]
   16954:	ldr	sl, [r4, #20]
   16958:	add	fp, sl, #1
   1695c:	str	fp, [r4, #20]
   16960:	ldrb	r7, [sl]
   16964:	str	r7, [sp, #28]
   16968:	mov	r1, r7
   1696c:	mov	r0, r6
   16970:	bl	10e80 <strchr@plt>
   16974:	ldrb	r3, [sl, #1]
   16978:	cmp	r3, #0
   1697c:	bne	1698c <argp_error@@Base+0xa6c>
   16980:	ldr	r3, [r4]
   16984:	add	r3, r3, #1
   16988:	str	r3, [r4]
   1698c:	sub	r3, r7, #58	; 0x3a
   16990:	uxtb	r3, r3
   16994:	cmp	r0, #0
   16998:	cmpne	r3, #1
   1699c:	bls	16a50 <argp_error@@Base+0xb30>
   169a0:	ldrb	r3, [r0]
   169a4:	cmp	r3, #87	; 0x57
   169a8:	beq	16a8c <argp_error@@Base+0xb6c>
   169ac:	ldrb	r3, [r0, #1]
   169b0:	cmp	r3, #58	; 0x3a
   169b4:	beq	16b60 <argp_error@@Base+0xc40>
   169b8:	mov	r0, r7
   169bc:	b	16c64 <argp_error@@Base+0xd44>
   169c0:	add	sl, sl, #2
   169c4:	str	sl, [r4, #20]
   169c8:	movw	r3, #32156	; 0x7d9c
   169cc:	movt	r3, #1
   169d0:	str	r3, [sp, #16]
   169d4:	str	r8, [sp, #12]
   169d8:	str	r4, [sp, #8]
   169dc:	ldr	r3, [sp, #76]	; 0x4c
   169e0:	str	r3, [sp, #4]
   169e4:	ldr	r3, [sp, #72]	; 0x48
   169e8:	str	r3, [sp]
   169ec:	ldr	r3, [sp, #24]
   169f0:	mov	r2, r6
   169f4:	mov	r1, r9
   169f8:	mov	r0, r5
   169fc:	bl	1614c <argp_error@@Base+0x22c>
   16a00:	b	16c64 <argp_error@@Base+0xd44>
   16a04:	add	sl, sl, #1
   16a08:	str	sl, [r4, #20]
   16a0c:	movw	r3, #34504	; 0x86c8
   16a10:	movt	r3, #1
   16a14:	str	r3, [sp, #16]
   16a18:	str	r8, [sp, #12]
   16a1c:	str	r4, [sp, #8]
   16a20:	ldr	r3, [sp, #76]	; 0x4c
   16a24:	str	r3, [sp, #4]
   16a28:	ldr	r3, [sp, #72]	; 0x48
   16a2c:	str	r3, [sp]
   16a30:	ldr	r3, [sp, #24]
   16a34:	mov	r2, r6
   16a38:	mov	r1, r9
   16a3c:	mov	r0, r5
   16a40:	bl	1614c <argp_error@@Base+0x22c>
   16a44:	cmn	r0, #1
   16a48:	bne	16c64 <argp_error@@Base+0xd44>
   16a4c:	b	16944 <argp_error@@Base+0xa24>
   16a50:	cmp	r8, #0
   16a54:	bne	16a68 <argp_error@@Base+0xb48>
   16a58:	ldr	r3, [sp, #28]
   16a5c:	str	r3, [r4, #8]
   16a60:	mov	r0, #63	; 0x3f
   16a64:	b	16c64 <argp_error@@Base+0xd44>
   16a68:	movw	r0, #37184	; 0x9140
   16a6c:	movt	r0, #2
   16a70:	ldr	r3, [sp, #28]
   16a74:	ldr	r2, [r9]
   16a78:	movw	r1, #34508	; 0x86cc
   16a7c:	movt	r1, #1
   16a80:	ldr	r0, [r0]
   16a84:	bl	10e8c <fprintf@plt>
   16a88:	b	16a58 <argp_error@@Base+0xb38>
   16a8c:	ldrb	r1, [r0, #1]
   16a90:	ldr	r2, [sp, #24]
   16a94:	cmp	r1, #59	; 0x3b
   16a98:	movne	r3, #0
   16a9c:	moveq	r3, #1
   16aa0:	cmp	r2, #0
   16aa4:	moveq	r3, #0
   16aa8:	cmp	r3, #0
   16aac:	beq	169ac <argp_error@@Base+0xa8c>
   16ab0:	ldrb	r3, [sl, #1]
   16ab4:	cmp	r3, #0
   16ab8:	strne	fp, [r4, #12]
   16abc:	bne	16ad4 <argp_error@@Base+0xbb4>
   16ac0:	ldr	r3, [r4]
   16ac4:	cmp	r3, r5
   16ac8:	beq	16b1c <argp_error@@Base+0xbfc>
   16acc:	ldr	r3, [r9, r3, lsl #2]
   16ad0:	str	r3, [r4, #12]
   16ad4:	ldr	r3, [r4, #12]
   16ad8:	str	r3, [r4, #20]
   16adc:	mov	r2, #0
   16ae0:	str	r2, [r4, #12]
   16ae4:	movw	r3, #34580	; 0x8714
   16ae8:	movt	r3, #1
   16aec:	str	r3, [sp, #16]
   16af0:	str	r8, [sp, #12]
   16af4:	str	r4, [sp, #8]
   16af8:	str	r2, [sp, #4]
   16afc:	ldr	r3, [sp, #72]	; 0x48
   16b00:	str	r3, [sp]
   16b04:	ldr	r3, [sp, #24]
   16b08:	mov	r2, r6
   16b0c:	mov	r1, r9
   16b10:	mov	r0, r5
   16b14:	bl	1614c <argp_error@@Base+0x22c>
   16b18:	b	16c64 <argp_error@@Base+0xd44>
   16b1c:	cmp	r8, #0
   16b20:	bne	16b3c <argp_error@@Base+0xc1c>
   16b24:	ldr	r3, [sp, #28]
   16b28:	str	r3, [r4, #8]
   16b2c:	ldrb	r0, [r6]
   16b30:	cmp	r0, #58	; 0x3a
   16b34:	movne	r0, #63	; 0x3f
   16b38:	b	16c64 <argp_error@@Base+0xd44>
   16b3c:	movw	r0, #37184	; 0x9140
   16b40:	movt	r0, #2
   16b44:	ldr	r3, [sp, #28]
   16b48:	ldr	r2, [r9]
   16b4c:	movw	r1, #34536	; 0x86e8
   16b50:	movt	r1, #1
   16b54:	ldr	r0, [r0]
   16b58:	bl	10e8c <fprintf@plt>
   16b5c:	b	16b24 <argp_error@@Base+0xc04>
   16b60:	ldrb	r3, [r0, #2]
   16b64:	cmp	r3, #58	; 0x3a
   16b68:	beq	16b94 <argp_error@@Base+0xc74>
   16b6c:	ldrb	r3, [sl, #1]
   16b70:	cmp	r3, #0
   16b74:	beq	16bc4 <argp_error@@Base+0xca4>
   16b78:	str	fp, [r4, #12]
   16b7c:	ldr	r3, [r4]
   16b80:	add	r3, r3, #1
   16b84:	str	r3, [r4]
   16b88:	mov	r3, #0
   16b8c:	str	r3, [r4, #20]
   16b90:	b	169b8 <argp_error@@Base+0xa98>
   16b94:	ldrb	r3, [sl, #1]
   16b98:	cmp	r3, #0
   16b9c:	moveq	r3, #0
   16ba0:	streq	r3, [r4, #12]
   16ba4:	beq	16bb8 <argp_error@@Base+0xc98>
   16ba8:	str	fp, [r4, #12]
   16bac:	ldr	r3, [r4]
   16bb0:	add	r3, r3, #1
   16bb4:	str	r3, [r4]
   16bb8:	mov	r3, #0
   16bbc:	str	r3, [r4, #20]
   16bc0:	b	169b8 <argp_error@@Base+0xa98>
   16bc4:	ldr	r3, [r4]
   16bc8:	cmp	r3, r5
   16bcc:	beq	16be4 <argp_error@@Base+0xcc4>
   16bd0:	add	r2, r3, #1
   16bd4:	str	r2, [r4]
   16bd8:	ldr	r3, [r9, r3, lsl #2]
   16bdc:	str	r3, [r4, #12]
   16be0:	b	16b88 <argp_error@@Base+0xc68>
   16be4:	cmp	r8, #0
   16be8:	bne	16c04 <argp_error@@Base+0xce4>
   16bec:	ldr	r3, [sp, #28]
   16bf0:	str	r3, [r4, #8]
   16bf4:	ldrb	r7, [r6]
   16bf8:	cmp	r7, #58	; 0x3a
   16bfc:	movne	r7, #63	; 0x3f
   16c00:	b	16b88 <argp_error@@Base+0xc68>
   16c04:	movw	r0, #37184	; 0x9140
   16c08:	movt	r0, #2
   16c0c:	ldr	r3, [sp, #28]
   16c10:	ldr	r2, [r9]
   16c14:	movw	r1, #34536	; 0x86e8
   16c18:	movt	r1, #1
   16c1c:	ldr	r0, [r0]
   16c20:	bl	10e8c <fprintf@plt>
   16c24:	b	16bec <argp_error@@Base+0xccc>
   16c28:	mvn	r0, #0
   16c2c:	b	16c64 <argp_error@@Base+0xd44>
   16c30:	mvn	r0, #0
   16c34:	b	16c64 <argp_error@@Base+0xd44>
   16c38:	ldrb	r3, [sl]
   16c3c:	cmp	r3, #45	; 0x2d
   16c40:	beq	168fc <argp_error@@Base+0x9dc>
   16c44:	ldr	r3, [r4, #24]
   16c48:	cmp	r3, #0
   16c4c:	beq	16c30 <argp_error@@Base+0xd10>
   16c50:	add	r3, r7, #1
   16c54:	str	r3, [r4]
   16c58:	ldr	r3, [r9, r7, lsl #2]
   16c5c:	str	r3, [r4, #12]
   16c60:	mov	r0, #1
   16c64:	add	sp, sp, #36	; 0x24
   16c68:	ldrd	r4, [sp]
   16c6c:	ldrd	r6, [sp, #8]
   16c70:	ldrd	r8, [sp, #16]
   16c74:	ldrd	sl, [sp, #24]
   16c78:	add	sp, sp, #32
   16c7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c80:	strd	r4, [sp, #-12]!
   16c84:	str	lr, [sp, #8]
   16c88:	sub	sp, sp, #20
   16c8c:	movw	r4, #37216	; 0x9160
   16c90:	movt	r4, #2
   16c94:	movw	r5, #37156	; 0x9124
   16c98:	movt	r5, #2
   16c9c:	ldr	ip, [r5]
   16ca0:	str	ip, [r4]
   16ca4:	ldr	ip, [r5, #4]
   16ca8:	str	ip, [r4, #4]
   16cac:	ldr	ip, [sp, #40]	; 0x28
   16cb0:	str	ip, [sp, #12]
   16cb4:	str	r4, [sp, #8]
   16cb8:	ldr	ip, [sp, #36]	; 0x24
   16cbc:	str	ip, [sp, #4]
   16cc0:	ldr	ip, [sp, #32]
   16cc4:	str	ip, [sp]
   16cc8:	bl	166c4 <argp_error@@Base+0x7a4>
   16ccc:	ldr	r3, [r4]
   16cd0:	str	r3, [r5]
   16cd4:	movw	r3, #37260	; 0x918c
   16cd8:	movt	r3, #2
   16cdc:	ldr	r2, [r4, #12]
   16ce0:	str	r2, [r3]
   16ce4:	ldr	r3, [r4, #8]
   16ce8:	str	r3, [r5, #8]
   16cec:	add	sp, sp, #20
   16cf0:	ldrd	r4, [sp]
   16cf4:	add	sp, sp, #8
   16cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   16cfc:	push	{lr}		; (str lr, [sp, #-4]!)
   16d00:	sub	sp, sp, #20
   16d04:	mov	r3, #1
   16d08:	str	r3, [sp, #8]
   16d0c:	mov	r3, #0
   16d10:	str	r3, [sp, #4]
   16d14:	str	r3, [sp]
   16d18:	bl	16c80 <argp_error@@Base+0xd60>
   16d1c:	add	sp, sp, #20
   16d20:	pop	{pc}		; (ldr pc, [sp], #4)
   16d24:	str	r4, [sp, #-8]!
   16d28:	str	lr, [sp, #4]
   16d2c:	bl	12bf8 <argp_parse@@Base+0x1424>
   16d30:	cmp	r0, #0
   16d34:	beq	16d44 <argp_error@@Base+0xe24>
   16d38:	ldr	r4, [sp]
   16d3c:	add	sp, sp, #4
   16d40:	pop	{pc}		; (ldr pc, [sp], #4)
   16d44:	bl	171b8 <argp_error@@Base+0x1298>
   16d48:	str	r4, [sp, #-8]!
   16d4c:	str	lr, [sp, #4]
   16d50:	bl	12bf8 <argp_parse@@Base+0x1424>
   16d54:	cmp	r0, #0
   16d58:	beq	16d68 <argp_error@@Base+0xe48>
   16d5c:	ldr	r4, [sp]
   16d60:	add	sp, sp, #4
   16d64:	pop	{pc}		; (ldr pc, [sp], #4)
   16d68:	bl	171b8 <argp_error@@Base+0x1298>
   16d6c:	str	r4, [sp, #-8]!
   16d70:	str	lr, [sp, #4]
   16d74:	bl	16d24 <argp_error@@Base+0xe04>
   16d78:	ldr	r4, [sp]
   16d7c:	add	sp, sp, #4
   16d80:	pop	{pc}		; (ldr pc, [sp], #4)
   16d84:	strd	r4, [sp, #-16]!
   16d88:	str	r6, [sp, #8]
   16d8c:	str	lr, [sp, #12]
   16d90:	mov	r5, r0
   16d94:	mov	r4, r1
   16d98:	bl	1725c <argp_error@@Base+0x133c>
   16d9c:	cmp	r0, #0
   16da0:	beq	16db4 <argp_error@@Base+0xe94>
   16da4:	ldrd	r4, [sp]
   16da8:	ldr	r6, [sp, #8]
   16dac:	add	sp, sp, #12
   16db0:	pop	{pc}		; (ldr pc, [sp], #4)
   16db4:	adds	r4, r4, #0
   16db8:	movne	r4, #1
   16dbc:	cmp	r5, #0
   16dc0:	moveq	r4, #1
   16dc4:	cmp	r4, #0
   16dc8:	beq	16da4 <argp_error@@Base+0xe84>
   16dcc:	bl	171b8 <argp_error@@Base+0x1298>
   16dd0:	str	r4, [sp, #-8]!
   16dd4:	str	lr, [sp, #4]
   16dd8:	cmp	r1, #0
   16ddc:	orreq	r1, r1, #1
   16de0:	bl	1725c <argp_error@@Base+0x133c>
   16de4:	cmp	r0, #0
   16de8:	beq	16df8 <argp_error@@Base+0xed8>
   16dec:	ldr	r4, [sp]
   16df0:	add	sp, sp, #4
   16df4:	pop	{pc}		; (ldr pc, [sp], #4)
   16df8:	bl	171b8 <argp_error@@Base+0x1298>
   16dfc:	strd	r4, [sp, #-16]!
   16e00:	str	r6, [sp, #8]
   16e04:	str	lr, [sp, #12]
   16e08:	mov	r4, r0
   16e0c:	mov	r6, r1
   16e10:	mov	r5, r2
   16e14:	bl	17a58 <argp_error@@Base+0x1b38>
   16e18:	cmp	r0, #0
   16e1c:	beq	16e30 <argp_error@@Base+0xf10>
   16e20:	ldrd	r4, [sp]
   16e24:	ldr	r6, [sp, #8]
   16e28:	add	sp, sp, #12
   16e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e30:	cmp	r4, #0
   16e34:	beq	16e44 <argp_error@@Base+0xf24>
   16e38:	cmp	r6, #0
   16e3c:	cmpne	r5, #0
   16e40:	beq	16e20 <argp_error@@Base+0xf00>
   16e44:	bl	171b8 <argp_error@@Base+0x1298>
   16e48:	str	r4, [sp, #-8]!
   16e4c:	str	lr, [sp, #4]
   16e50:	bl	16dfc <argp_error@@Base+0xedc>
   16e54:	ldr	r4, [sp]
   16e58:	add	sp, sp, #4
   16e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e60:	str	r4, [sp, #-8]!
   16e64:	str	lr, [sp, #4]
   16e68:	mov	ip, r1
   16e6c:	mov	r3, r2
   16e70:	cmp	r2, #0
   16e74:	cmpne	r1, #0
   16e78:	moveq	r3, #1
   16e7c:	moveq	ip, r3
   16e80:	mov	r2, r3
   16e84:	mov	r1, ip
   16e88:	bl	17a58 <argp_error@@Base+0x1b38>
   16e8c:	cmp	r0, #0
   16e90:	beq	16ea0 <argp_error@@Base+0xf80>
   16e94:	ldr	r4, [sp]
   16e98:	add	sp, sp, #4
   16e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16ea0:	bl	171b8 <argp_error@@Base+0x1298>
   16ea4:	str	r4, [sp, #-8]!
   16ea8:	str	lr, [sp, #4]
   16eac:	mov	r2, r1
   16eb0:	mov	r1, r0
   16eb4:	mov	r0, #0
   16eb8:	bl	16dfc <argp_error@@Base+0xedc>
   16ebc:	ldr	r4, [sp]
   16ec0:	add	sp, sp, #4
   16ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ec8:	str	r4, [sp, #-8]!
   16ecc:	str	lr, [sp, #4]
   16ed0:	mov	r2, r1
   16ed4:	mov	r1, r0
   16ed8:	mov	r0, #0
   16edc:	bl	16e60 <argp_error@@Base+0xf40>
   16ee0:	ldr	r4, [sp]
   16ee4:	add	sp, sp, #4
   16ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   16eec:	strd	r4, [sp, #-16]!
   16ef0:	str	r6, [sp, #8]
   16ef4:	str	lr, [sp, #12]
   16ef8:	mov	r5, r1
   16efc:	ldr	r4, [r1]
   16f00:	cmp	r0, #0
   16f04:	beq	16f34 <argp_error@@Base+0x1014>
   16f08:	lsr	r3, r4, #1
   16f0c:	add	r3, r3, #1
   16f10:	adds	r4, r4, r3
   16f14:	bcs	16f50 <argp_error@@Base+0x1030>
   16f18:	mov	r1, r4
   16f1c:	bl	16dfc <argp_error@@Base+0xedc>
   16f20:	str	r4, [r5]
   16f24:	ldrd	r4, [sp]
   16f28:	ldr	r6, [sp, #8]
   16f2c:	add	sp, sp, #12
   16f30:	pop	{pc}		; (ldr pc, [sp], #4)
   16f34:	cmp	r4, #0
   16f38:	bne	16f18 <argp_error@@Base+0xff8>
   16f3c:	mov	r4, #64	; 0x40
   16f40:	udiv	r4, r4, r2
   16f44:	cmp	r2, #64	; 0x40
   16f48:	addhi	r4, r4, #1
   16f4c:	b	16f18 <argp_error@@Base+0xff8>
   16f50:	bl	171b8 <argp_error@@Base+0x1298>
   16f54:	str	r4, [sp, #-8]!
   16f58:	str	lr, [sp, #4]
   16f5c:	mov	r2, #1
   16f60:	bl	16eec <argp_error@@Base+0xfcc>
   16f64:	ldr	r4, [sp]
   16f68:	add	sp, sp, #4
   16f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16f74:	strd	r6, [sp, #8]
   16f78:	str	r8, [sp, #16]
   16f7c:	str	lr, [sp, #20]
   16f80:	mov	r5, r1
   16f84:	ldr	lr, [sp, #24]
   16f88:	ldr	ip, [r1]
   16f8c:	asr	r4, ip, #1
   16f90:	adds	r4, ip, r4
   16f94:	movvs	r1, #1
   16f98:	movvc	r1, #0
   16f9c:	cmp	r1, #0
   16fa0:	mvnne	r4, #-2147483648	; 0x80000000
   16fa4:	mvn	r8, r3
   16fa8:	lsr	r8, r8, #31
   16fac:	cmp	r3, r4
   16fb0:	movge	r1, #0
   16fb4:	andlt	r1, r8, #1
   16fb8:	cmp	r1, #0
   16fbc:	movne	r4, r3
   16fc0:	smull	r6, r7, r4, lr
   16fc4:	asr	r1, r6, #31
   16fc8:	cmp	r1, r7
   16fcc:	bne	16fe4 <argp_error@@Base+0x10c4>
   16fd0:	mov	r1, r6
   16fd4:	cmp	r6, #63	; 0x3f
   16fd8:	movle	r1, #64	; 0x40
   16fdc:	ble	16fe8 <argp_error@@Base+0x10c8>
   16fe0:	b	16ff4 <argp_error@@Base+0x10d4>
   16fe4:	mvn	r1, #-2147483648	; 0x80000000
   16fe8:	sdiv	r4, r1, lr
   16fec:	mls	r6, lr, r4, r1
   16ff0:	sub	r1, r1, r6
   16ff4:	cmp	r0, #0
   16ff8:	moveq	r6, #0
   16ffc:	streq	r6, [r5]
   17000:	sub	r6, r4, ip
   17004:	cmp	r6, r2
   17008:	bge	17040 <argp_error@@Base+0x1120>
   1700c:	adds	r2, ip, r2
   17010:	mov	r4, r2
   17014:	bvs	1705c <argp_error@@Base+0x113c>
   17018:	cmp	r2, r3
   1701c:	movle	r3, #0
   17020:	andgt	r3, r8, #1
   17024:	cmp	r3, #0
   17028:	bne	1705c <argp_error@@Base+0x113c>
   1702c:	smull	r2, r3, r2, lr
   17030:	asr	ip, r2, #31
   17034:	mov	r1, r2
   17038:	cmp	ip, r3
   1703c:	bne	1705c <argp_error@@Base+0x113c>
   17040:	bl	16d84 <argp_error@@Base+0xe64>
   17044:	str	r4, [r5]
   17048:	ldrd	r4, [sp]
   1704c:	ldrd	r6, [sp, #8]
   17050:	ldr	r8, [sp, #16]
   17054:	add	sp, sp, #20
   17058:	pop	{pc}		; (ldr pc, [sp], #4)
   1705c:	bl	171b8 <argp_error@@Base+0x1298>
   17060:	str	r4, [sp, #-8]!
   17064:	str	lr, [sp, #4]
   17068:	bl	171e8 <argp_error@@Base+0x12c8>
   1706c:	cmp	r0, #0
   17070:	beq	17080 <argp_error@@Base+0x1160>
   17074:	ldr	r4, [sp]
   17078:	add	sp, sp, #4
   1707c:	pop	{pc}		; (ldr pc, [sp], #4)
   17080:	bl	171b8 <argp_error@@Base+0x1298>
   17084:	str	r4, [sp, #-8]!
   17088:	str	lr, [sp, #4]
   1708c:	mov	r1, #1
   17090:	bl	17060 <argp_error@@Base+0x1140>
   17094:	ldr	r4, [sp]
   17098:	add	sp, sp, #4
   1709c:	pop	{pc}		; (ldr pc, [sp], #4)
   170a0:	str	r4, [sp, #-8]!
   170a4:	str	lr, [sp, #4]
   170a8:	bl	171e8 <argp_error@@Base+0x12c8>
   170ac:	cmp	r0, #0
   170b0:	beq	170c0 <argp_error@@Base+0x11a0>
   170b4:	ldr	r4, [sp]
   170b8:	add	sp, sp, #4
   170bc:	pop	{pc}		; (ldr pc, [sp], #4)
   170c0:	bl	171b8 <argp_error@@Base+0x1298>
   170c4:	str	r4, [sp, #-8]!
   170c8:	str	lr, [sp, #4]
   170cc:	mov	r1, #1
   170d0:	bl	170a0 <argp_error@@Base+0x1180>
   170d4:	ldr	r4, [sp]
   170d8:	add	sp, sp, #4
   170dc:	pop	{pc}		; (ldr pc, [sp], #4)
   170e0:	strd	r4, [sp, #-16]!
   170e4:	str	r6, [sp, #8]
   170e8:	str	lr, [sp, #12]
   170ec:	mov	r5, r0
   170f0:	mov	r4, r1
   170f4:	mov	r0, r1
   170f8:	bl	16d24 <argp_error@@Base+0xe04>
   170fc:	mov	r2, r4
   17100:	mov	r1, r5
   17104:	bl	10d90 <memcpy@plt>
   17108:	ldrd	r4, [sp]
   1710c:	ldr	r6, [sp, #8]
   17110:	add	sp, sp, #12
   17114:	pop	{pc}		; (ldr pc, [sp], #4)
   17118:	strd	r4, [sp, #-16]!
   1711c:	str	r6, [sp, #8]
   17120:	str	lr, [sp, #12]
   17124:	mov	r5, r0
   17128:	mov	r4, r1
   1712c:	mov	r0, r1
   17130:	bl	16d48 <argp_error@@Base+0xe28>
   17134:	mov	r2, r4
   17138:	mov	r1, r5
   1713c:	bl	10d90 <memcpy@plt>
   17140:	ldrd	r4, [sp]
   17144:	ldr	r6, [sp, #8]
   17148:	add	sp, sp, #12
   1714c:	pop	{pc}		; (ldr pc, [sp], #4)
   17150:	strd	r4, [sp, #-16]!
   17154:	str	r6, [sp, #8]
   17158:	str	lr, [sp, #12]
   1715c:	mov	r5, r0
   17160:	mov	r4, r1
   17164:	add	r0, r1, #1
   17168:	bl	16d48 <argp_error@@Base+0xe28>
   1716c:	mov	r2, #0
   17170:	strb	r2, [r0, r4]
   17174:	mov	r2, r4
   17178:	mov	r1, r5
   1717c:	bl	10d90 <memcpy@plt>
   17180:	ldrd	r4, [sp]
   17184:	ldr	r6, [sp, #8]
   17188:	add	sp, sp, #12
   1718c:	pop	{pc}		; (ldr pc, [sp], #4)
   17190:	str	r4, [sp, #-8]!
   17194:	str	lr, [sp, #4]
   17198:	mov	r4, r0
   1719c:	bl	10e74 <strlen@plt>
   171a0:	add	r1, r0, #1
   171a4:	mov	r0, r4
   171a8:	bl	170e0 <argp_error@@Base+0x11c0>
   171ac:	ldr	r4, [sp]
   171b0:	add	sp, sp, #4
   171b4:	pop	{pc}		; (ldr pc, [sp], #4)
   171b8:	str	r4, [sp, #-8]!
   171bc:	str	lr, [sp, #4]
   171c0:	movw	r3, #37172	; 0x9134
   171c4:	movt	r3, #2
   171c8:	ldr	r0, [r3]
   171cc:	movw	r3, #34584	; 0x8718
   171d0:	movt	r3, #1
   171d4:	movw	r2, #31768	; 0x7c18
   171d8:	movt	r2, #1
   171dc:	mov	r1, #0
   171e0:	bl	10de4 <error@plt>
   171e4:	bl	10f40 <abort@plt>
   171e8:	strd	r4, [sp, #-16]!
   171ec:	str	r6, [sp, #8]
   171f0:	str	lr, [sp, #12]
   171f4:	cmp	r1, #0
   171f8:	cmpne	r0, #0
   171fc:	beq	17238 <argp_error@@Base+0x1318>
   17200:	mov	r2, r0
   17204:	mov	r3, r1
   17208:	umull	r4, r5, r0, r1
   1720c:	adds	r1, r5, #0
   17210:	movne	r1, #1
   17214:	cmp	r4, #0
   17218:	movlt	r1, #1
   1721c:	cmp	r1, #0
   17220:	beq	17240 <argp_error@@Base+0x1320>
   17224:	bl	10e98 <__errno_location@plt>
   17228:	mov	r3, #12
   1722c:	str	r3, [r0]
   17230:	mov	r0, #0
   17234:	b	1724c <argp_error@@Base+0x132c>
   17238:	mov	r3, #1
   1723c:	mov	r2, r3
   17240:	mov	r1, r3
   17244:	mov	r0, r2
   17248:	bl	10d18 <calloc@plt>
   1724c:	ldrd	r4, [sp]
   17250:	ldr	r6, [sp, #8]
   17254:	add	sp, sp, #12
   17258:	pop	{pc}		; (ldr pc, [sp], #4)
   1725c:	str	r4, [sp, #-8]!
   17260:	str	lr, [sp, #4]
   17264:	cmp	r0, #0
   17268:	beq	1728c <argp_error@@Base+0x136c>
   1726c:	cmp	r1, #0
   17270:	beq	17298 <argp_error@@Base+0x1378>
   17274:	cmp	r1, #0
   17278:	blt	172a4 <argp_error@@Base+0x1384>
   1727c:	bl	10db4 <realloc@plt>
   17280:	ldr	r4, [sp]
   17284:	add	sp, sp, #4
   17288:	pop	{pc}		; (ldr pc, [sp], #4)
   1728c:	mov	r0, r1
   17290:	bl	12bf8 <argp_parse@@Base+0x1424>
   17294:	b	17280 <argp_error@@Base+0x1360>
   17298:	bl	124ac <argp_parse@@Base+0xcd8>
   1729c:	mov	r0, #0
   172a0:	b	17280 <argp_error@@Base+0x1360>
   172a4:	bl	10e98 <__errno_location@plt>
   172a8:	mov	r3, #12
   172ac:	str	r3, [r0]
   172b0:	mov	r0, #0
   172b4:	b	17280 <argp_error@@Base+0x1360>
   172b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   172bc:	strd	r6, [sp, #8]
   172c0:	str	r8, [sp, #16]
   172c4:	str	lr, [sp, #20]
   172c8:	mov	r8, r0
   172cc:	mov	r7, r1
   172d0:	mov	r6, r2
   172d4:	mov	r5, r3
   172d8:	mov	r0, #36	; 0x24
   172dc:	bl	12bf8 <argp_parse@@Base+0x1424>
   172e0:	subs	r4, r0, #0
   172e4:	beq	17328 <argp_error@@Base+0x1408>
   172e8:	str	r8, [r4]
   172ec:	str	r7, [r4, #4]
   172f0:	str	r6, [r4, #8]
   172f4:	str	r5, [r4, #12]
   172f8:	mov	r3, #0
   172fc:	str	r3, [r4, #20]
   17300:	str	r3, [r4, #16]
   17304:	mov	r0, #200	; 0xc8
   17308:	bl	12bf8 <argp_parse@@Base+0x1424>
   1730c:	mov	r5, r0
   17310:	str	r0, [r4, #24]
   17314:	cmp	r0, #0
   17318:	strne	r0, [r4, #28]
   1731c:	addne	r5, r0, #200	; 0xc8
   17320:	strne	r5, [r4, #32]
   17324:	beq	17340 <argp_error@@Base+0x1420>
   17328:	mov	r0, r4
   1732c:	ldrd	r4, [sp]
   17330:	ldrd	r6, [sp, #8]
   17334:	ldr	r8, [sp, #16]
   17338:	add	sp, sp, #20
   1733c:	pop	{pc}		; (ldr pc, [sp], #4)
   17340:	mov	r0, r4
   17344:	bl	124ac <argp_parse@@Base+0xcd8>
   17348:	mov	r4, r5
   1734c:	b	17328 <argp_error@@Base+0x1408>
   17350:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17354:	strd	r6, [sp, #8]
   17358:	strd	r8, [sp, #16]
   1735c:	strd	sl, [sp, #24]
   17360:	str	lr, [sp, #32]
   17364:	sub	sp, sp, #20
   17368:	mov	r4, r0
   1736c:	ldr	r5, [r0, #24]
   17370:	ldr	r3, [r0, #16]
   17374:	add	r5, r5, r3
   17378:	mov	sl, #32
   1737c:	str	sl, [sp, #8]
   17380:	b	17468 <argp_error@@Base+0x1548>
   17384:	mov	r7, #0
   17388:	ldr	r0, [r4]
   1738c:	ldr	r3, [r0, #20]
   17390:	ldr	r2, [r0, #24]
   17394:	cmp	r3, r2
   17398:	addcc	r2, r3, #1
   1739c:	strcc	r2, [r0, #20]
   173a0:	strbcc	sl, [r3]
   173a4:	bcs	174d4 <argp_error@@Base+0x15b4>
   173a8:	add	r7, r7, #1
   173ac:	cmp	r6, r7
   173b0:	bne	17388 <argp_error@@Base+0x1468>
   173b4:	str	r6, [r4, #20]
   173b8:	ldr	r8, [r4, #28]
   173bc:	sub	fp, r8, r5
   173c0:	mov	r2, fp
   173c4:	mov	r1, #10
   173c8:	mov	r0, r5
   173cc:	bl	10ebc <memchr@plt>
   173d0:	mov	r6, r0
   173d4:	ldr	r3, [r4, #20]
   173d8:	cmp	r3, #0
   173dc:	movlt	r3, #0
   173e0:	strlt	r3, [r4, #20]
   173e4:	cmp	r6, #0
   173e8:	beq	174e0 <argp_error@@Base+0x15c0>
   173ec:	ldr	r0, [r4, #20]
   173f0:	ldr	r9, [r4, #8]
   173f4:	sub	r3, r6, r5
   173f8:	add	r3, r3, r0
   173fc:	cmp	r3, r9
   17400:	movlt	r3, #0
   17404:	strlt	r3, [r4, #20]
   17408:	addlt	r5, r6, #1
   1740c:	blt	17468 <argp_error@@Base+0x1548>
   17410:	sub	r7, r9, #1
   17414:	ldr	r3, [r4, #12]
   17418:	str	r3, [sp, #4]
   1741c:	cmp	r3, #0
   17420:	bge	1750c <argp_error@@Base+0x15ec>
   17424:	cmp	r8, r6
   17428:	bls	1759c <argp_error@@Base+0x167c>
   1742c:	sub	r0, r7, r0
   17430:	sub	r2, r8, r6
   17434:	mov	r1, r6
   17438:	add	r0, r5, r0
   1743c:	bl	10d54 <memmove@plt>
   17440:	ldr	r3, [r4, #20]
   17444:	sub	r7, r7, r3
   17448:	add	r7, r5, r7
   1744c:	sub	r6, r7, r6
   17450:	ldr	r3, [r4, #28]
   17454:	sub	r6, r3, r6
   17458:	str	r6, [r4, #28]
   1745c:	mov	r3, #0
   17460:	str	r3, [r4, #20]
   17464:	add	r5, r5, r9
   17468:	ldr	r8, [r4, #28]
   1746c:	cmp	r8, r5
   17470:	bls	175b4 <argp_error@@Base+0x1694>
   17474:	ldr	r3, [r4, #20]
   17478:	cmp	r3, #0
   1747c:	bne	173b8 <argp_error@@Base+0x1498>
   17480:	ldr	r6, [r4, #4]
   17484:	cmp	r6, #0
   17488:	beq	17860 <argp_error@@Base+0x1940>
   1748c:	add	r3, r8, r6
   17490:	ldr	r2, [r4, #32]
   17494:	cmp	r2, r3
   17498:	bls	17384 <argp_error@@Base+0x1464>
   1749c:	add	r7, r5, r6
   174a0:	sub	r2, r8, r5
   174a4:	mov	r1, r5
   174a8:	mov	r0, r7
   174ac:	bl	10d54 <memmove@plt>
   174b0:	ldr	r3, [r4, #28]
   174b4:	add	r3, r3, r6
   174b8:	str	r3, [r4, #28]
   174bc:	mov	r2, r6
   174c0:	mov	r1, sl
   174c4:	mov	r0, r5
   174c8:	bl	10eb0 <memset@plt>
   174cc:	mov	r5, r7
   174d0:	b	173b4 <argp_error@@Base+0x1494>
   174d4:	ldr	r1, [sp, #8]
   174d8:	bl	10ec8 <__overflow@plt>
   174dc:	b	173a8 <argp_error@@Base+0x1488>
   174e0:	ldr	r3, [r4, #20]
   174e4:	add	r3, fp, r3
   174e8:	ldr	r7, [r4, #8]
   174ec:	cmp	r3, r7
   174f0:	bcc	17594 <argp_error@@Base+0x1674>
   174f4:	sub	r7, r7, #1
   174f8:	ldr	r3, [r4, #12]
   174fc:	str	r3, [sp, #4]
   17500:	cmp	r3, #0
   17504:	blt	1759c <argp_error@@Base+0x167c>
   17508:	mov	r6, r8
   1750c:	ldr	r3, [r4, #20]
   17510:	rsb	r3, r3, #1
   17514:	add	r7, r3, r7
   17518:	adds	r7, r5, r7
   1751c:	bcs	17858 <argp_error@@Base+0x1938>
   17520:	bl	10e5c <__ctype_b_loc@plt>
   17524:	ldr	r0, [r0]
   17528:	mov	r3, r7
   1752c:	mov	r1, r3
   17530:	sub	r3, r3, #1
   17534:	ldrb	r2, [r1]
   17538:	lsl	r2, r2, #1
   1753c:	ldrh	r2, [r0, r2]
   17540:	tst	r2, #1
   17544:	bne	175e0 <argp_error@@Base+0x16c0>
   17548:	mov	r1, r3
   1754c:	cmp	r3, r5
   17550:	bcs	1752c <argp_error@@Base+0x160c>
   17554:	add	r9, r1, #1
   17558:	cmp	r9, r5
   1755c:	bhi	1761c <argp_error@@Base+0x16fc>
   17560:	cmp	r6, r7
   17564:	bhi	176b8 <argp_error@@Base+0x1798>
   17568:	cmp	r7, r6
   1756c:	beq	176f8 <argp_error@@Base+0x17d8>
   17570:	bl	10e5c <__ctype_b_loc@plt>
   17574:	ldr	r2, [r0]
   17578:	mov	r9, r7
   1757c:	ldrb	r3, [r9, #1]!
   17580:	lsl	r3, r3, #1
   17584:	ldrh	r3, [r2, r3]
   17588:	tst	r3, #1
   1758c:	bne	1757c <argp_error@@Base+0x165c>
   17590:	b	17620 <argp_error@@Base+0x1700>
   17594:	str	r3, [r4, #20]
   17598:	b	175b4 <argp_error@@Base+0x1694>
   1759c:	ldr	r3, [r4, #20]
   175a0:	add	r3, fp, r3
   175a4:	str	r3, [r4, #20]
   175a8:	sub	r3, r7, r3
   175ac:	add	r8, r8, r3
   175b0:	str	r8, [r4, #28]
   175b4:	ldr	r3, [r4, #28]
   175b8:	ldr	r2, [r4, #24]
   175bc:	sub	r3, r3, r2
   175c0:	str	r3, [r4, #16]
   175c4:	add	sp, sp, #20
   175c8:	ldrd	r4, [sp]
   175cc:	ldrd	r6, [sp, #8]
   175d0:	ldrd	r8, [sp, #16]
   175d4:	ldrd	sl, [sp, #24]
   175d8:	add	sp, sp, #32
   175dc:	pop	{pc}		; (ldr pc, [sp], #4)
   175e0:	add	r9, r1, #1
   175e4:	cmp	r9, r5
   175e8:	bls	17560 <argp_error@@Base+0x1640>
   175ec:	cmp	r5, r1
   175f0:	bhi	1761c <argp_error@@Base+0x16fc>
   175f4:	sub	ip, r5, #1
   175f8:	mov	r1, r3
   175fc:	cmp	r3, ip
   17600:	beq	1761c <argp_error@@Base+0x16fc>
   17604:	sub	r3, r3, #1
   17608:	ldrb	r2, [r1]
   1760c:	lsl	r2, r2, #1
   17610:	ldrh	r2, [r0, r2]
   17614:	tst	r2, #1
   17618:	bne	175f8 <argp_error@@Base+0x16d8>
   1761c:	add	r7, r1, #1
   17620:	add	r3, fp, #1
   17624:	add	r3, r5, r3
   17628:	cmp	r9, r3
   1762c:	beq	17708 <argp_error@@Base+0x17e8>
   17630:	add	r3, r7, #1
   17634:	sub	r3, r9, r3
   17638:	ldr	r2, [sp, #4]
   1763c:	cmp	r3, r2
   17640:	bge	1771c <argp_error@@Base+0x17fc>
   17644:	cmp	r9, r8
   17648:	bcs	1771c <argp_error@@Base+0x17fc>
   1764c:	ldr	r3, [r4, #32]
   17650:	sub	r3, r3, r8
   17654:	ldr	r2, [sp, #4]
   17658:	add	r2, r2, #1
   1765c:	cmp	r3, r2
   17660:	bgt	177c4 <argp_error@@Base+0x18a4>
   17664:	ldr	r0, [r4, #24]
   17668:	cmp	r0, r7
   1766c:	bcs	17680 <argp_error@@Base+0x1760>
   17670:	ldr	r3, [r4]
   17674:	sub	r2, r7, r0
   17678:	mov	r1, #1
   1767c:	bl	10d9c <fwrite_unlocked@plt>
   17680:	ldr	r0, [r4]
   17684:	ldr	r3, [r0, #20]
   17688:	ldr	r2, [r0, #24]
   1768c:	cmp	r3, r2
   17690:	addcc	r2, r3, #1
   17694:	strcc	r2, [r0, #20]
   17698:	movcc	r2, #10
   1769c:	strbcc	r2, [r3]
   176a0:	bcs	17804 <argp_error@@Base+0x18e4>
   176a4:	ldr	r8, [r4, #24]
   176a8:	sub	r5, r5, r8
   176ac:	add	fp, fp, r5
   176b0:	mov	r5, r8
   176b4:	b	1772c <argp_error@@Base+0x180c>
   176b8:	add	r9, r7, #1
   176bc:	str	r6, [sp, #12]
   176c0:	mov	r7, r9
   176c4:	cmp	r9, r6
   176c8:	beq	176f0 <argp_error@@Base+0x17d0>
   176cc:	bl	10e5c <__ctype_b_loc@plt>
   176d0:	add	r9, r9, #1
   176d4:	ldrb	r3, [r7]
   176d8:	ldr	r2, [r0]
   176dc:	lsl	r3, r3, #1
   176e0:	ldrh	r3, [r2, r3]
   176e4:	tst	r3, #1
   176e8:	beq	176c0 <argp_error@@Base+0x17a0>
   176ec:	b	17570 <argp_error@@Base+0x1650>
   176f0:	ldr	r6, [sp, #12]
   176f4:	b	17568 <argp_error@@Base+0x1648>
   176f8:	mov	r3, #0
   176fc:	str	r3, [r4, #20]
   17700:	add	r5, r6, #1
   17704:	b	17468 <argp_error@@Base+0x1548>
   17708:	ldr	r3, [r4, #32]
   1770c:	sub	r3, r3, r7
   17710:	ldr	r2, [sp, #4]
   17714:	cmp	r3, r2
   17718:	ble	17644 <argp_error@@Base+0x1724>
   1771c:	mov	r3, #10
   17720:	strb	r3, [r7], #1
   17724:	mov	r8, r5
   17728:	mov	r5, r7
   1772c:	ldr	r3, [r4, #12]
   17730:	sub	r2, r9, r5
   17734:	cmp	r2, r3
   17738:	bge	17810 <argp_error@@Base+0x18f0>
   1773c:	add	r2, fp, #1
   17740:	add	r2, r8, r2
   17744:	cmp	r9, r2
   17748:	bne	1775c <argp_error@@Base+0x183c>
   1774c:	ldr	r2, [r4, #32]
   17750:	sub	r2, r2, r9
   17754:	cmp	r3, r2
   17758:	ble	17810 <argp_error@@Base+0x18f0>
   1775c:	cmp	r3, #0
   17760:	movgt	r6, #0
   17764:	ble	17798 <argp_error@@Base+0x1878>
   17768:	ldr	r0, [r4]
   1776c:	ldr	r3, [r0, #20]
   17770:	ldr	r2, [r0, #24]
   17774:	cmp	r3, r2
   17778:	addcc	r2, r3, #1
   1777c:	strcc	r2, [r0, #20]
   17780:	strbcc	sl, [r3]
   17784:	bcs	17834 <argp_error@@Base+0x1914>
   17788:	add	r6, r6, #1
   1778c:	ldr	r3, [r4, #12]
   17790:	cmp	r3, r6
   17794:	bgt	17768 <argp_error@@Base+0x1848>
   17798:	cmp	r5, r9
   1779c:	bcc	17840 <argp_error@@Base+0x1920>
   177a0:	sub	r9, r9, r8
   177a4:	sub	fp, fp, r9
   177a8:	add	fp, r5, fp
   177ac:	str	fp, [r4, #28]
   177b0:	ldr	r3, [r4, #12]
   177b4:	cmp	r3, #0
   177b8:	mvneq	r3, #0
   177bc:	str	r3, [r4, #20]
   177c0:	b	17468 <argp_error@@Base+0x1548>
   177c4:	sub	r8, r8, r9
   177c8:	mov	r0, r2
   177cc:	mov	r2, r8
   177d0:	mov	r1, r9
   177d4:	add	r0, r7, r0
   177d8:	bl	10d54 <memmove@plt>
   177dc:	ldr	r9, [r4, #12]
   177e0:	add	r9, r9, #1
   177e4:	add	r9, r7, r9
   177e8:	add	r8, r9, r8
   177ec:	sub	fp, r8, r5
   177f0:	mov	r3, #10
   177f4:	strb	r3, [r7], #1
   177f8:	mov	r8, r5
   177fc:	mov	r5, r7
   17800:	b	1772c <argp_error@@Base+0x180c>
   17804:	mov	r1, #10
   17808:	bl	10ec8 <__overflow@plt>
   1780c:	b	176a4 <argp_error@@Base+0x1784>
   17810:	cmp	r3, #0
   17814:	movgt	r3, #0
   17818:	ble	17798 <argp_error@@Base+0x1878>
   1781c:	strb	sl, [r5], #1
   17820:	add	r3, r3, #1
   17824:	ldr	r2, [r4, #12]
   17828:	cmp	r2, r3
   1782c:	bgt	1781c <argp_error@@Base+0x18fc>
   17830:	b	17798 <argp_error@@Base+0x1878>
   17834:	ldr	r1, [sp, #8]
   17838:	bl	10ec8 <__overflow@plt>
   1783c:	b	17788 <argp_error@@Base+0x1868>
   17840:	add	r2, r8, fp
   17844:	sub	r2, r2, r9
   17848:	mov	r1, r9
   1784c:	mov	r0, r5
   17850:	bl	10d54 <memmove@plt>
   17854:	b	177a0 <argp_error@@Base+0x1880>
   17858:	mov	r1, r7
   1785c:	b	17554 <argp_error@@Base+0x1634>
   17860:	sub	fp, r8, r5
   17864:	mov	r2, fp
   17868:	mov	r1, #10
   1786c:	mov	r0, r5
   17870:	bl	10ebc <memchr@plt>
   17874:	mov	r6, r0
   17878:	b	173e4 <argp_error@@Base+0x14c4>
   1787c:	str	r4, [sp, #-8]!
   17880:	str	lr, [sp, #4]
   17884:	mov	r4, r0
   17888:	bl	17350 <argp_error@@Base+0x1430>
   1788c:	ldr	r2, [r4, #28]
   17890:	ldr	r0, [r4, #24]
   17894:	cmp	r2, r0
   17898:	bls	178ac <argp_error@@Base+0x198c>
   1789c:	ldr	r3, [r4]
   178a0:	sub	r2, r2, r0
   178a4:	mov	r1, #1
   178a8:	bl	10d9c <fwrite_unlocked@plt>
   178ac:	ldr	r0, [r4, #24]
   178b0:	bl	124ac <argp_parse@@Base+0xcd8>
   178b4:	mov	r0, r4
   178b8:	bl	124ac <argp_parse@@Base+0xcd8>
   178bc:	ldr	r4, [sp]
   178c0:	add	sp, sp, #4
   178c4:	pop	{pc}		; (ldr pc, [sp], #4)
   178c8:	ldr	r3, [r0, #32]
   178cc:	ldr	r2, [r0, #28]
   178d0:	sub	r3, r3, r2
   178d4:	cmp	r3, r1
   178d8:	bcc	178e4 <argp_error@@Base+0x19c4>
   178dc:	mov	r0, #1
   178e0:	bx	lr
   178e4:	strd	r4, [sp, #-16]!
   178e8:	str	r6, [sp, #8]
   178ec:	str	lr, [sp, #12]
   178f0:	mov	r5, r1
   178f4:	mov	r4, r0
   178f8:	bl	17350 <argp_error@@Base+0x1430>
   178fc:	ldr	r0, [r4, #24]
   17900:	ldr	r2, [r4, #28]
   17904:	ldr	r3, [r4]
   17908:	sub	r2, r2, r0
   1790c:	mov	r1, #1
   17910:	bl	10d9c <fwrite_unlocked@plt>
   17914:	ldr	r2, [r4, #28]
   17918:	ldr	r3, [r4, #24]
   1791c:	sub	r1, r2, r3
   17920:	cmp	r1, r0
   17924:	bne	17964 <argp_error@@Base+0x1a44>
   17928:	str	r3, [r4, #28]
   1792c:	mov	r2, #0
   17930:	str	r2, [r4, #16]
   17934:	ldr	r1, [r4, #32]
   17938:	sub	r1, r1, r3
   1793c:	cmp	r1, r5
   17940:	movcs	r0, #1
   17944:	bcs	1798c <argp_error@@Base+0x1a6c>
   17948:	adds	r5, r1, r5
   1794c:	bcc	1799c <argp_error@@Base+0x1a7c>
   17950:	bl	10e98 <__errno_location@plt>
   17954:	mov	r3, #12
   17958:	str	r3, [r0]
   1795c:	mov	r0, #0
   17960:	b	1798c <argp_error@@Base+0x1a6c>
   17964:	sub	r2, r2, r0
   17968:	str	r2, [r4, #28]
   1796c:	ldr	r1, [r4, #16]
   17970:	sub	r1, r1, r0
   17974:	str	r1, [r4, #16]
   17978:	sub	r2, r2, r3
   1797c:	add	r1, r3, r0
   17980:	mov	r0, r3
   17984:	bl	10d54 <memmove@plt>
   17988:	mov	r0, #0
   1798c:	ldrd	r4, [sp]
   17990:	ldr	r6, [sp, #8]
   17994:	add	sp, sp, #12
   17998:	pop	{pc}		; (ldr pc, [sp], #4)
   1799c:	mov	r1, r5
   179a0:	mov	r0, r3
   179a4:	bl	1725c <argp_error@@Base+0x133c>
   179a8:	cmp	r0, #0
   179ac:	beq	17950 <argp_error@@Base+0x1a30>
   179b0:	str	r0, [r4, #24]
   179b4:	add	r5, r0, r5
   179b8:	str	r5, [r4, #32]
   179bc:	str	r0, [r4, #28]
   179c0:	mov	r0, #1
   179c4:	b	1798c <argp_error@@Base+0x1a6c>
   179c8:	push	{r1, r2, r3}
   179cc:	strd	r4, [sp, #-16]!
   179d0:	str	r6, [sp, #8]
   179d4:	str	lr, [sp, #12]
   179d8:	sub	sp, sp, #12
   179dc:	mov	r5, r0
   179e0:	mov	r1, #150	; 0x96
   179e4:	add	r6, sp, #32
   179e8:	mov	r0, r5
   179ec:	bl	178c8 <argp_error@@Base+0x19a8>
   179f0:	cmp	r0, #0
   179f4:	beq	17a28 <argp_error@@Base+0x1b08>
   179f8:	str	r6, [sp, #4]
   179fc:	ldr	r0, [r5, #28]
   17a00:	ldr	r4, [r5, #32]
   17a04:	sub	r4, r4, r0
   17a08:	mov	r3, r6
   17a0c:	ldr	r2, [sp, #28]
   17a10:	mov	r1, r4
   17a14:	bl	10f04 <vsnprintf@plt>
   17a18:	cmp	r0, r4
   17a1c:	bcc	17a48 <argp_error@@Base+0x1b28>
   17a20:	add	r1, r0, #1
   17a24:	b	179e8 <argp_error@@Base+0x1ac8>
   17a28:	mvn	r0, #0
   17a2c:	add	sp, sp, #12
   17a30:	ldrd	r4, [sp]
   17a34:	ldr	r6, [sp, #8]
   17a38:	ldr	lr, [sp, #12]
   17a3c:	add	sp, sp, #16
   17a40:	add	sp, sp, #12
   17a44:	bx	lr
   17a48:	ldr	r2, [r5, #28]
   17a4c:	add	r3, r2, r0
   17a50:	str	r3, [r5, #28]
   17a54:	b	17a2c <argp_error@@Base+0x1b0c>
   17a58:	str	r4, [sp, #-8]!
   17a5c:	str	lr, [sp, #4]
   17a60:	umull	r2, r3, r1, r2
   17a64:	cmp	r3, #0
   17a68:	bne	17a80 <argp_error@@Base+0x1b60>
   17a6c:	mov	r1, r2
   17a70:	bl	1725c <argp_error@@Base+0x133c>
   17a74:	ldr	r4, [sp]
   17a78:	add	sp, sp, #4
   17a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a80:	bl	10e98 <__errno_location@plt>
   17a84:	mov	r3, #12
   17a88:	str	r3, [r0]
   17a8c:	mov	r0, #0
   17a90:	b	17a74 <argp_error@@Base+0x1b54>
   17a94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a98:	mov	r7, r0
   17a9c:	ldr	r6, [pc, #72]	; 17aec <argp_error@@Base+0x1bcc>
   17aa0:	ldr	r5, [pc, #72]	; 17af0 <argp_error@@Base+0x1bd0>
   17aa4:	add	r6, pc, r6
   17aa8:	add	r5, pc, r5
   17aac:	sub	r6, r6, r5
   17ab0:	mov	r8, r1
   17ab4:	mov	r9, r2
   17ab8:	bl	10cf8 <calloc@plt-0x20>
   17abc:	asrs	r6, r6, #2
   17ac0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ac4:	mov	r4, #0
   17ac8:	add	r4, r4, #1
   17acc:	ldr	r3, [r5], #4
   17ad0:	mov	r2, r9
   17ad4:	mov	r1, r8
   17ad8:	mov	r0, r7
   17adc:	blx	r3
   17ae0:	cmp	r6, r4
   17ae4:	bne	17ac8 <argp_error@@Base+0x1ba8>
   17ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17aec:	andeq	r1, r1, r0, ror #8
   17af0:	andeq	r1, r1, r8, asr r4
   17af4:	bx	lr

Disassembly of section .fini:

00017af8 <.fini>:
   17af8:	push	{r3, lr}
   17afc:	pop	{r3, pc}
