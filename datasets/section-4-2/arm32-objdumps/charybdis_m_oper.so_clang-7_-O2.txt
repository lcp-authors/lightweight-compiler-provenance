
../repos/charybdis/modules/.libs/m_oper.so:     file format elf32-littlearm


Disassembly of section .init:

000007fc <_init>:
 7fc:	push	{r3, lr}
 800:	bl	924 <call_weak_fn>
 804:	pop	{r3, pc}

Disassembly of section .plt:

00000808 <.plt>:
 808:	push	{lr}		; (str lr, [sp, #-4]!)
 80c:	ldr	lr, [pc, #4]	; 818 <.plt+0x10>
 810:	add	lr, pc, lr
 814:	ldr	pc, [lr, #8]!
 818:	.word	0x000117e8

0000081c <strcmp@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2024]!	; 0x7e8

00000828 <__cxa_finalize@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2016]!	; 0x7e0

00000834 <sendto_one@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2008]!	; 0x7d8

00000840 <rb_strcasecmp@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2000]!	; 0x7d0

0000084c <privilegeset_get@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #1992]!	; 0x7c8

00000858 <rb_outofmemory@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #1984]!	; 0x7c0

00000864 <sendto_realops_snomask@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #1976]!	; 0x7b8

00000870 <privilegeset_set_new@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #1968]!	; 0x7b0

0000087c <strcpy@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #1960]!	; 0x7a8

00000888 <rb_crypt@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #1952]!	; 0x7a0

00000894 <sendto_server@plt>:
 894:	add	ip, pc, #0, 12
 898:	add	ip, ip, #69632	; 0x11000
 89c:	ldr	pc, [ip, #1944]!	; 0x798

000008a0 <malloc@plt>:
 8a0:	add	ip, pc, #0, 12
 8a4:	add	ip, ip, #69632	; 0x11000
 8a8:	ldr	pc, [ip, #1936]!	; 0x790

000008ac <privilegeset_ref@plt>:
 8ac:	add	ip, pc, #0, 12
 8b0:	add	ip, ip, #69632	; 0x11000
 8b4:	ldr	pc, [ip, #1928]!	; 0x788

000008b8 <__gmon_start__@plt>:
 8b8:	add	ip, pc, #0, 12
 8bc:	add	ip, ip, #69632	; 0x11000
 8c0:	ldr	pc, [ip, #1920]!	; 0x780

000008c4 <send_oper_motd@plt>:
 8c4:	add	ip, pc, #0, 12
 8c8:	add	ip, ip, #69632	; 0x11000
 8cc:	ldr	pc, [ip, #1912]!	; 0x778

000008d0 <sendto_one_numeric@plt>:
 8d0:	add	ip, pc, #0, 12
 8d4:	add	ip, ip, #69632	; 0x11000
 8d8:	ldr	pc, [ip, #1904]!	; 0x770

000008dc <strlen@plt>:
 8dc:	add	ip, pc, #0, 12
 8e0:	add	ip, ip, #69632	; 0x11000
 8e4:	ldr	pc, [ip, #1896]!	; 0x768

000008e8 <ilog@plt>:
 8e8:	add	ip, pc, #0, 12
 8ec:	add	ip, ip, #69632	; 0x11000
 8f0:	ldr	pc, [ip, #1888]!	; 0x760

000008f4 <flood_endgrace@plt>:
 8f4:	add	ip, pc, #0, 12
 8f8:	add	ip, ip, #69632	; 0x11000
 8fc:	ldr	pc, [ip, #1880]!	; 0x758

00000900 <find_oper_conf@plt>:
 900:	add	ip, pc, #0, 12
 904:	add	ip, ip, #69632	; 0x11000
 908:	ldr	pc, [ip, #1872]!	; 0x750

0000090c <oper_up@plt>:
 90c:	add	ip, pc, #0, 12
 910:	add	ip, ip, #69632	; 0x11000
 914:	ldr	pc, [ip, #1864]!	; 0x748

00000918 <privilegeset_unref@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1856]!	; 0x740

Disassembly of section .text:

00000924 <call_weak_fn>:
 924:	ldr	r3, [pc, #20]	; 940 <call_weak_fn+0x1c>
 928:	ldr	r2, [pc, #20]	; 944 <call_weak_fn+0x20>
 92c:	add	r3, pc, r3
 930:	ldr	r2, [r3, r2]
 934:	cmp	r2, #0
 938:	bxeq	lr
 93c:	b	8b8 <__gmon_start__@plt>
 940:	.word	0x000116cc
 944:	.word	0x00000070

00000948 <deregister_tm_clones>:
 948:	ldr	r0, [pc, #44]	; 97c <deregister_tm_clones+0x34>
 94c:	ldr	r3, [pc, #44]	; 980 <deregister_tm_clones+0x38>
 950:	add	r0, pc, r0
 954:	add	r3, pc, r3
 958:	cmp	r3, r0
 95c:	ldr	r3, [pc, #32]	; 984 <deregister_tm_clones+0x3c>
 960:	add	r3, pc, r3
 964:	bxeq	lr
 968:	ldr	r2, [pc, #24]	; 988 <deregister_tm_clones+0x40>
 96c:	ldr	r3, [r3, r2]
 970:	cmp	r3, #0
 974:	bxeq	lr
 978:	bx	r3
 97c:	.word	0x000117a0
 980:	.word	0x0001179c
 984:	.word	0x00011698
 988:	.word	0x00000068

0000098c <register_tm_clones>:
 98c:	ldr	r0, [pc, #56]	; 9cc <register_tm_clones+0x40>
 990:	ldr	r3, [pc, #56]	; 9d0 <register_tm_clones+0x44>
 994:	add	r0, pc, r0
 998:	add	r3, pc, r3
 99c:	sub	r1, r3, r0
 9a0:	ldr	r3, [pc, #44]	; 9d4 <register_tm_clones+0x48>
 9a4:	asr	r1, r1, #2
 9a8:	add	r3, pc, r3
 9ac:	add	r1, r1, r1, lsr #31
 9b0:	asrs	r1, r1, #1
 9b4:	bxeq	lr
 9b8:	ldr	r2, [pc, #24]	; 9d8 <register_tm_clones+0x4c>
 9bc:	ldr	r3, [r3, r2]
 9c0:	cmp	r3, #0
 9c4:	bxeq	lr
 9c8:	bx	r3
 9cc:	.word	0x0001175c
 9d0:	.word	0x00011758
 9d4:	.word	0x00011650
 9d8:	.word	0x00000074

000009dc <__do_global_dtors_aux>:
 9dc:	ldr	r3, [pc, #76]	; a30 <__do_global_dtors_aux+0x54>
 9e0:	ldr	r2, [pc, #76]	; a34 <__do_global_dtors_aux+0x58>
 9e4:	add	r3, pc, r3
 9e8:	add	r2, pc, r2
 9ec:	ldrb	r3, [r3]
 9f0:	cmp	r3, #0
 9f4:	bxne	lr
 9f8:	ldr	r3, [pc, #56]	; a38 <__do_global_dtors_aux+0x5c>
 9fc:	push	{r4, lr}
 a00:	ldr	r3, [r2, r3]
 a04:	cmp	r3, #0
 a08:	beq	a18 <__do_global_dtors_aux+0x3c>
 a0c:	ldr	r3, [pc, #40]	; a3c <__do_global_dtors_aux+0x60>
 a10:	ldr	r0, [pc, r3]
 a14:	bl	828 <__cxa_finalize@plt>
 a18:	bl	948 <deregister_tm_clones>
 a1c:	ldr	r3, [pc, #28]	; a40 <__do_global_dtors_aux+0x64>
 a20:	mov	r2, #1
 a24:	add	r3, pc, r3
 a28:	strb	r2, [r3]
 a2c:	pop	{r4, pc}
 a30:	.word	0x0001170c
 a34:	.word	0x00011610
 a38:	.word	0x00000064
 a3c:	.word	0x00011668
 a40:	.word	0x000116cc

00000a44 <frame_dummy>:
 a44:	b	98c <register_tm_clones>

00000a48 <m_oper>:
 a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 a4c:	add	fp, sp, #28
 a50:	sub	sp, sp, #12
 a54:	ldrb	r0, [r2, #57]	; 0x39
 a58:	mov	r6, r2
 a5c:	tst	r0, #16
 a60:	bne	b2c <m_oper+0xe4>
 a64:	ldr	r0, [fp, #8]
 a68:	ldr	r9, [r0, #4]
 a6c:	ldr	r8, [r0, #8]
 a70:	ldrb	r0, [r6, #65]	; 0x41
 a74:	tst	r0, #1
 a78:	bne	a84 <m_oper+0x3c>
 a7c:	mov	r0, r6
 a80:	bl	8f4 <flood_endgrace@plt>
 a84:	movw	r0, #291	; 0x123
 a88:	add	sl, r6, #152	; 0x98
 a8c:	add	r1, r6, #227	; 0xe3
 a90:	mov	r3, r9
 a94:	add	r7, r6, r0
 a98:	mov	r0, sl
 a9c:	mov	r2, r7
 aa0:	bl	900 <find_oper_conf@plt>
 aa4:	cmp	r0, #0
 aa8:	beq	bec <m_oper+0x1a4>
 aac:	mov	r5, r0
 ab0:	ldrb	r0, [r0, #22]
 ab4:	tst	r0, #8
 ab8:	beq	b5c <m_oper+0x114>
 abc:	ldrb	r0, [r6, #57]	; 0x39
 ac0:	tst	r0, #64	; 0x40
 ac4:	bne	b5c <m_oper+0x114>
 ac8:	ldr	r2, [pc, #704]	; d90 <m_oper+0x348>
 acc:	mov	r0, r6
 ad0:	movw	r1, #491	; 0x1eb
 ad4:	add	r2, pc, r2
 ad8:	bl	8d0 <sendto_one_numeric@plt>
 adc:	add	r4, r6, #163	; 0xa3
 ae0:	str	sl, [sp]
 ae4:	add	r5, r6, #88	; 0x58
 ae8:	mov	r0, #4
 aec:	mov	r2, r9
 af0:	stmib	sp, {r4, r7}
 af4:	mov	r3, r5
 af8:	ldr	r1, [pc, #660]	; d94 <m_oper+0x34c>
 afc:	add	r1, pc, r1
 b00:	bl	8e8 <ilog@plt>
 b04:	ldr	r0, [pc, #652]	; d98 <m_oper+0x350>
 b08:	ldr	r0, [pc, r0]
 b0c:	ldr	r0, [r0, #84]	; 0x54
 b10:	cmp	r0, #0
 b14:	beq	ce8 <m_oper+0x2a0>
 b18:	str	sl, [sp]
 b1c:	str	r4, [sp, #4]
 b20:	ldr	r2, [pc, #628]	; d9c <m_oper+0x354>
 b24:	add	r2, pc, r2
 b28:	b	be0 <m_oper+0x198>
 b2c:	ldr	r0, [pc, #660]	; dc8 <m_oper+0x380>
 b30:	add	r3, r6, #88	; 0x58
 b34:	ldr	r0, [pc, r0]
 b38:	ldr	r1, [pc, #652]	; dcc <m_oper+0x384>
 b3c:	add	r2, r0, #88	; 0x58
 b40:	add	r1, pc, r1
 b44:	mov	r0, r6
 b48:	bl	834 <sendto_one@plt>
 b4c:	mov	r0, r6
 b50:	sub	sp, fp, #28
 b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b58:	b	8c4 <send_oper_motd@plt>
 b5c:	ldr	r1, [r5, #16]
 b60:	cmp	r1, #0
 b64:	beq	c50 <m_oper+0x208>
 b68:	ldr	r0, [r6, #444]	; 0x1bc
 b6c:	cmp	r0, #0
 b70:	beq	b80 <m_oper+0x138>
 b74:	bl	840 <rb_strcasecmp@plt>
 b78:	cmp	r0, #0
 b7c:	beq	c50 <m_oper+0x208>
 b80:	ldr	r2, [pc, #536]	; da0 <m_oper+0x358>
 b84:	mov	r0, r6
 b88:	movw	r1, #491	; 0x1eb
 b8c:	add	r2, pc, r2
 b90:	bl	8d0 <sendto_one_numeric@plt>
 b94:	add	r4, r6, #163	; 0xa3
 b98:	str	sl, [sp]
 b9c:	add	r5, r6, #88	; 0x58
 ba0:	mov	r0, #4
 ba4:	mov	r2, r9
 ba8:	stmib	sp, {r4, r7}
 bac:	mov	r3, r5
 bb0:	ldr	r1, [pc, #492]	; da4 <m_oper+0x35c>
 bb4:	add	r1, pc, r1
 bb8:	bl	8e8 <ilog@plt>
 bbc:	ldr	r0, [pc, #484]	; da8 <m_oper+0x360>
 bc0:	ldr	r0, [pc, r0]
 bc4:	ldr	r0, [r0, #84]	; 0x54
 bc8:	cmp	r0, #0
 bcc:	beq	ce8 <m_oper+0x2a0>
 bd0:	str	sl, [sp]
 bd4:	str	r4, [sp, #4]
 bd8:	ldr	r2, [pc, #460]	; dac <m_oper+0x364>
 bdc:	add	r2, pc, r2
 be0:	mov	r0, #256	; 0x100
 be4:	mov	r1, #0
 be8:	b	cd8 <m_oper+0x290>
 bec:	ldr	r2, [pc, #396]	; d80 <m_oper+0x338>
 bf0:	mov	r0, r6
 bf4:	movw	r1, #491	; 0x1eb
 bf8:	add	r2, pc, r2
 bfc:	bl	8d0 <sendto_one_numeric@plt>
 c00:	add	r4, r6, #163	; 0xa3
 c04:	str	sl, [sp]
 c08:	add	r5, r6, #88	; 0x58
 c0c:	mov	r0, #4
 c10:	mov	r2, r9
 c14:	stmib	sp, {r4, r7}
 c18:	mov	r3, r5
 c1c:	ldr	r1, [pc, #352]	; d84 <m_oper+0x33c>
 c20:	add	r1, pc, r1
 c24:	bl	8e8 <ilog@plt>
 c28:	ldr	r0, [pc, #344]	; d88 <m_oper+0x340>
 c2c:	ldr	r0, [pc, r0]
 c30:	ldr	r0, [r0, #84]	; 0x54
 c34:	cmp	r0, #0
 c38:	beq	ce8 <m_oper+0x2a0>
 c3c:	str	sl, [sp]
 c40:	str	r4, [sp, #4]
 c44:	ldr	r2, [pc, #320]	; d8c <m_oper+0x344>
 c48:	add	r2, pc, r2
 c4c:	b	cd0 <m_oper+0x288>
 c50:	ldr	r1, [r5, #12]
 c54:	cmp	r1, #0
 c58:	ldrbne	r0, [r1]
 c5c:	cmpne	r0, #0
 c60:	bne	cf0 <m_oper+0x2a8>
 c64:	ldr	r0, [pc, #328]	; db4 <m_oper+0x36c>
 c68:	add	r5, r6, #88	; 0x58
 c6c:	mov	r3, r5
 c70:	ldr	r0, [pc, r0]
 c74:	ldr	r1, [pc, #316]	; db8 <m_oper+0x370>
 c78:	add	r2, r0, #88	; 0x58
 c7c:	add	r1, pc, r1
 c80:	mov	r0, r6
 c84:	bl	834 <sendto_one@plt>
 c88:	add	r4, r6, #163	; 0xa3
 c8c:	str	sl, [sp]
 c90:	mov	r0, #4
 c94:	mov	r2, r9
 c98:	mov	r3, r5
 c9c:	stmib	sp, {r4, r7}
 ca0:	ldr	r1, [pc, #276]	; dbc <m_oper+0x374>
 ca4:	add	r1, pc, r1
 ca8:	bl	8e8 <ilog@plt>
 cac:	ldr	r0, [pc, #268]	; dc0 <m_oper+0x378>
 cb0:	ldr	r0, [pc, r0]
 cb4:	ldr	r0, [r0, #84]	; 0x54
 cb8:	cmp	r0, #0
 cbc:	beq	ce8 <m_oper+0x2a0>
 cc0:	str	sl, [sp]
 cc4:	str	r4, [sp, #4]
 cc8:	ldr	r2, [pc, #244]	; dc4 <m_oper+0x37c>
 ccc:	add	r2, pc, r2
 cd0:	mov	r0, #256	; 0x100
 cd4:	mov	r1, #256	; 0x100
 cd8:	mov	r3, r5
 cdc:	bl	864 <sendto_realops_snomask@plt>
 ce0:	sub	sp, fp, #28
 ce4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ce8:	sub	sp, fp, #28
 cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 cf0:	ldrb	r0, [r5, #20]
 cf4:	tst	r0, #1
 cf8:	beq	d24 <m_oper+0x2dc>
 cfc:	ldr	r0, [pc, #172]	; db0 <m_oper+0x368>
 d00:	cmp	r8, #0
 d04:	add	r0, pc, r0
 d08:	beq	d34 <m_oper+0x2ec>
 d0c:	ldrb	r2, [r8]
 d10:	cmp	r2, #0
 d14:	beq	d34 <m_oper+0x2ec>
 d18:	mov	r0, r8
 d1c:	bl	888 <rb_crypt@plt>
 d20:	mov	r8, r0
 d24:	cmp	r8, #0
 d28:	beq	c64 <m_oper+0x21c>
 d2c:	ldr	r1, [r5, #12]
 d30:	b	d38 <m_oper+0x2f0>
 d34:	mov	r8, r0
 d38:	mov	r0, r8
 d3c:	bl	81c <strcmp@plt>
 d40:	cmp	r0, #0
 d44:	bne	c64 <m_oper+0x21c>
 d48:	mov	r0, r6
 d4c:	mov	r1, r5
 d50:	bl	90c <oper_up@plt>
 d54:	add	r0, r6, #163	; 0xa3
 d58:	str	sl, [sp]
 d5c:	add	r3, r6, #88	; 0x58
 d60:	mov	r2, r9
 d64:	stmib	sp, {r0, r7}
 d68:	mov	r0, #3
 d6c:	ldr	r1, [pc, #92]	; dd0 <m_oper+0x388>
 d70:	add	r1, pc, r1
 d74:	bl	8e8 <ilog@plt>
 d78:	sub	sp, fp, #28
 d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 d80:	.word	0x00000389
 d84:	.word	0x0000039a
 d88:	.word	0x00011448
 d8c:	.word	0x00000396
 d90:	.word	0x000004ad
 d94:	.word	0x00000514
 d98:	.word	0x0001156c
 d9c:	.word	0x00000524
 da0:	.word	0x000003f5
 da4:	.word	0x000004c8
 da8:	.word	0x000114b4
 dac:	.word	0x000004ef
 db0:	.word	0x000002d9
 db4:	.word	0x00011400
 db8:	.word	0x000004b4
 dbc:	.word	0x00000316
 dc0:	.word	0x000113c4
 dc4:	.word	0x00000483
 dc8:	.word	0x0001153c
 dcc:	.word	0x000003b5
 dd0:	.word	0x000003a7

00000dd4 <mc_oper>:
 dd4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 dd8:	add	fp, sp, #24
 ddc:	sub	sp, sp, #16
 de0:	mov	r0, r1
 de4:	ldr	r1, [pc, #244]	; ee0 <mc_oper+0x10c>
 de8:	mov	r4, r2
 dec:	ldr	r8, [fp, #8]
 df0:	ldr	r1, [pc, r1]
 df4:	ldr	r2, [r1]
 df8:	mov	r1, r4
 dfc:	ldrb	r3, [r1, #396]!	; 0x18c
 e00:	ldmib	r8, {r6, r7}
 e04:	cmp	r3, #0
 e08:	ldr	r3, [pc, #212]	; ee4 <mc_oper+0x110>
 e0c:	sub	r5, r1, #308	; 0x134
 e10:	moveq	r1, r5
 e14:	add	r3, pc, r3
 e18:	str	r3, [sp]
 e1c:	stmib	sp, {r1, r6, r7}
 e20:	mov	r1, #0
 e24:	mov	r3, #0
 e28:	bl	894 <sendto_server@plt>
 e2c:	ldr	r0, [r8, #8]
 e30:	bl	84c <privilegeset_get@plt>
 e34:	cmp	r0, #0
 e38:	bne	e7c <mc_oper+0xa8>
 e3c:	ldr	r0, [r8, #8]
 e40:	mov	r1, #256	; 0x100
 e44:	mov	r3, r5
 e48:	str	r0, [sp]
 e4c:	mov	r0, #256	; 0x100
 e50:	ldr	r2, [pc, #144]	; ee8 <mc_oper+0x114>
 e54:	add	r2, pc, r2
 e58:	bl	864 <sendto_realops_snomask@plt>
 e5c:	ldr	r0, [r8, #8]
 e60:	ldr	r1, [pc, #132]	; eec <mc_oper+0x118>
 e64:	mov	r2, #0
 e68:	add	r1, pc, r1
 e6c:	bl	870 <privilegeset_set_new@plt>
 e70:	ldr	r1, [r0]
 e74:	orr	r1, r1, #-2147483648	; 0x80000000
 e78:	str	r1, [r0]
 e7c:	bl	8ac <privilegeset_ref@plt>
 e80:	ldr	r1, [r4, #24]
 e84:	mov	r5, r0
 e88:	ldr	r0, [r1, #36]!	; 0x24
 e8c:	cmp	r0, #0
 e90:	beq	ea0 <mc_oper+0xcc>
 e94:	bl	918 <privilegeset_unref@plt>
 e98:	ldr	r0, [r4, #24]
 e9c:	add	r1, r0, #36	; 0x24
 ea0:	str	r5, [r1]
 ea4:	ldr	r5, [r8, #4]
 ea8:	mov	r0, r5
 eac:	bl	8dc <strlen@plt>
 eb0:	add	r0, r0, #1
 eb4:	bl	8a0 <malloc@plt>
 eb8:	cmp	r0, #0
 ebc:	beq	edc <mc_oper+0x108>
 ec0:	mov	r1, r5
 ec4:	mov	r6, r0
 ec8:	bl	87c <strcpy@plt>
 ecc:	ldr	r0, [r4, #24]
 ed0:	str	r6, [r0, #32]
 ed4:	sub	sp, fp, #24
 ed8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 edc:	bl	858 <rb_outofmemory@plt>
 ee0:	.word	0x00011274
 ee4:	.word	0x0000035d
 ee8:	.word	0x0000032c
 eec:	.word	0x00000175

Disassembly of section .fini:

00000ef0 <_fini>:
 ef0:	push	{r3, lr}
 ef4:	pop	{r3, pc}
