
../repos/inetutils/src/hostname:     file format elf32-littlearm


Disassembly of section .init:

00010f3c <.init>:
   10f3c:	push	{r3, lr}
   10f40:	bl	117e4 <putc_unlocked@plt+0x5c4>
   10f44:	pop	{r3, pc}

Disassembly of section .plt:

00010f48 <calloc@plt-0x14>:
   10f48:	push	{lr}		; (str lr, [sp, #-4]!)
   10f4c:	ldr	lr, [pc, #4]	; 10f58 <calloc@plt-0x4>
   10f50:	add	lr, pc, lr
   10f54:	ldr	pc, [lr, #8]!
   10f58:	andeq	r8, r1, r8, lsr #1

00010f5c <calloc@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #168]!	; 0xa8

00010f68 <fputs_unlocked@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #160]!	; 0xa0

00010f74 <raise@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #152]!	; 0x98

00010f80 <strcmp@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #144]!	; 0x90

00010f8c <printf@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #136]!	; 0x88

00010f98 <hstrerror@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #128]!	; 0x80

00010fa4 <memmove@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #120]!	; 0x78

00010fb0 <strchrnul@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #112]!	; 0x70

00010fbc <free@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #104]!	; 0x68

00010fc8 <strndup@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #96]!	; 0x60

00010fd4 <memcpy@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #88]!	; 0x58

00010fe0 <fwrite_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #80]!	; 0x50

00010fec <sleep@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #72]!	; 0x48

00010ff8 <getdomainname@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #64]!	; 0x40

00011004 <strdup@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #56]!	; 0x38

00011010 <realloc@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #48]!	; 0x30

0001101c <strcasecmp@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #40]!	; 0x28

00011028 <funlockfile@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #32]!

00011034 <strcat@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #24]!

00011040 <strcpy@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #16]!

0001104c <error@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #8]!

00011058 <gethostname@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #0]!

00011064 <getenv@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #94208	; 0x17000
   1106c:	ldr	pc, [ip, #4088]!	; 0xff8

00011070 <puts@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #94208	; 0x17000
   11078:	ldr	pc, [ip, #4080]!	; 0xff0

0001107c <malloc@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #94208	; 0x17000
   11084:	ldr	pc, [ip, #4072]!	; 0xfe8

00011088 <__libc_start_main@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #94208	; 0x17000
   11090:	ldr	pc, [ip, #4064]!	; 0xfe0

00011094 <strerror@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #94208	; 0x17000
   1109c:	ldr	pc, [ip, #4056]!	; 0xfd8

000110a0 <__h_errno_location@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #94208	; 0x17000
   110a8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110ac <sethostname@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #94208	; 0x17000
   110b4:	ldr	pc, [ip, #4040]!	; 0xfc8

000110b8 <__ctype_tolower_loc@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #94208	; 0x17000
   110c0:	ldr	pc, [ip, #4032]!	; 0xfc0

000110c4 <__gmon_start__@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #4024]!	; 0xfb8

000110d0 <mempcpy@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110dc <__ctype_b_loc@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110e8 <exit@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110f4 <feof@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #3992]!	; 0xf98

00011100 <strlen@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #3984]!	; 0xf90

0001110c <strchr@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #3976]!	; 0xf88

00011118 <fprintf@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #3968]!	; 0xf80

00011124 <__errno_location@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #94208	; 0x17000
   1112c:	ldr	pc, [ip, #3960]!	; 0xf78

00011130 <strerror_r@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #94208	; 0x17000
   11138:	ldr	pc, [ip, #3952]!	; 0xf70

0001113c <memset@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #94208	; 0x17000
   11144:	ldr	pc, [ip, #3944]!	; 0xf68

00011148 <memchr@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #94208	; 0x17000
   11150:	ldr	pc, [ip, #3936]!	; 0xf60

00011154 <fclose@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #94208	; 0x17000
   1115c:	ldr	pc, [ip, #3928]!	; 0xf58

00011160 <strrchr@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #94208	; 0x17000
   11168:	ldr	pc, [ip, #3920]!	; 0xf50

0001116c <vfprintf@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #94208	; 0x17000
   11174:	ldr	pc, [ip, #3912]!	; 0xf48

00011178 <fputc@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #94208	; 0x17000
   11180:	ldr	pc, [ip, #3904]!	; 0xf40

00011184 <sscanf@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #94208	; 0x17000
   1118c:	ldr	pc, [ip, #3896]!	; 0xf38

00011190 <flockfile@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #94208	; 0x17000
   11198:	ldr	pc, [ip, #3888]!	; 0xf30

0001119c <vsnprintf@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #94208	; 0x17000
   111a4:	ldr	pc, [ip, #3880]!	; 0xf28

000111a8 <atoi@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #94208	; 0x17000
   111b0:	ldr	pc, [ip, #3872]!	; 0xf20

000111b4 <fopen64@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #94208	; 0x17000
   111bc:	ldr	pc, [ip, #3864]!	; 0xf18

000111c0 <qsort@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #94208	; 0x17000
   111c8:	ldr	pc, [ip, #3856]!	; 0xf10

000111cc <inet_ntop@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #94208	; 0x17000
   111d4:	ldr	pc, [ip, #3848]!	; 0xf08

000111d8 <getline@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #94208	; 0x17000
   111e0:	ldr	pc, [ip, #3840]!	; 0xf00

000111e4 <gethostbyname@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #94208	; 0x17000
   111ec:	ldr	pc, [ip, #3832]!	; 0xef8

000111f0 <fputs@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #94208	; 0x17000
   111f8:	ldr	pc, [ip, #3824]!	; 0xef0

000111fc <strncmp@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #94208	; 0x17000
   11204:	ldr	pc, [ip, #3816]!	; 0xee8

00011208 <abort@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #94208	; 0x17000
   11210:	ldr	pc, [ip, #3808]!	; 0xee0

00011214 <__assert_fail@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #94208	; 0x17000
   1121c:	ldr	pc, [ip, #3800]!	; 0xed8

00011220 <putc_unlocked@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #94208	; 0x17000
   11228:	ldr	pc, [ip, #3792]!	; 0xed0

Disassembly of section .text:

0001122c <argp_parse@@Base-0xd30>:
   1122c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11230:	sub	sp, sp, #52	; 0x34
   11234:	mov	r6, r0
   11238:	add	r5, sp, #28
   1123c:	ldr	r0, [r1]
   11240:	mov	r4, r1
   11244:	bl	12aec <argp_parse@@Base+0xb90>
   11248:	mov	r2, #20
   1124c:	mov	r1, #0
   11250:	mov	r0, r5
   11254:	bl	1113c <memset@plt>
   11258:	ldr	r3, [pc, #1264]	; 11750 <putc_unlocked@plt+0x530>
   1125c:	ldr	r2, [pc, #1264]	; 11754 <putc_unlocked@plt+0x534>
   11260:	ldr	r1, [pc, #1264]	; 11758 <putc_unlocked@plt+0x538>
   11264:	ldr	r0, [pc, #1264]	; 1175c <putc_unlocked@plt+0x53c>
   11268:	str	r2, [r3]
   1126c:	bl	12944 <argp_parse@@Base+0x9e8>
   11270:	mov	r2, r4
   11274:	ldr	r4, [pc, #1252]	; 11760 <putc_unlocked@plt+0x540>
   11278:	mov	r3, #0
   1127c:	str	r3, [sp]
   11280:	mov	r1, r6
   11284:	str	r5, [sp, #4]
   11288:	ldr	r0, [pc, #1236]	; 11764 <putc_unlocked@plt+0x544>
   1128c:	bl	11f5c <argp_parse@@Base>
   11290:	ldr	r3, [r4]
   11294:	ldr	r1, [pc, #1228]	; 11768 <putc_unlocked@plt+0x548>
   11298:	cmp	r3, #0
   1129c:	bne	112ac <putc_unlocked@plt+0x8c>
   112a0:	ldr	r3, [r4, #4]
   112a4:	cmp	r3, #0
   112a8:	streq	r1, [r4]
   112ac:	ldr	r3, [pc, #1208]	; 1176c <putc_unlocked@plt+0x54c>
   112b0:	ldr	r2, [r4]
   112b4:	cmp	r2, r1
   112b8:	cmpne	r2, r3
   112bc:	moveq	r3, #1
   112c0:	movne	r3, #0
   112c4:	bne	11568 <putc_unlocked@plt+0x348>
   112c8:	blx	r2
   112cc:	subs	r5, r0, #0
   112d0:	bne	112e8 <putc_unlocked@plt+0xc8>
   112d4:	bl	11124 <__errno_location@plt>
   112d8:	ldr	r2, [pc, #1168]	; 11770 <putc_unlocked@plt+0x550>
   112dc:	ldr	r1, [r0]
   112e0:	mov	r0, #1
   112e4:	bl	1104c <error@plt>
   112e8:	ldrsh	r3, [sp, #36]	; 0x24
   112ec:	cmp	r3, #1
   112f0:	bne	113b0 <putc_unlocked@plt+0x190>
   112f4:	mov	r0, #256	; 0x100
   112f8:	bl	12f78 <argp_parse@@Base+0x101c>
   112fc:	mov	r6, #0
   11300:	strb	r6, [r0]
   11304:	mov	r4, r0
   11308:	mov	r0, r5
   1130c:	bl	111e4 <gethostbyname@plt>
   11310:	subs	r8, r0, #0
   11314:	beq	1138c <putc_unlocked@plt+0x16c>
   11318:	ldr	sl, [pc, #1108]	; 11774 <putc_unlocked@plt+0x554>
   1131c:	mov	r7, #256	; 0x100
   11320:	mov	fp, r6
   11324:	ldr	r3, [r8, #4]
   11328:	ldr	r0, [r3, r6]
   1132c:	cmp	r0, #0
   11330:	beq	11398 <putc_unlocked@plt+0x178>
   11334:	add	r9, r6, #4
   11338:	ldr	r3, [r3, r9]
   1133c:	cmp	r3, #0
   11340:	addne	fp, fp, #1
   11344:	bl	11100 <strlen@plt>
   11348:	add	fp, fp, r0
   1134c:	cmp	fp, r7
   11350:	bcc	11368 <putc_unlocked@plt+0x148>
   11354:	lsl	r7, r7, #1
   11358:	mov	r0, r4
   1135c:	mov	r1, r7
   11360:	bl	12fa4 <argp_parse@@Base+0x1048>
   11364:	mov	r4, r0
   11368:	ldr	r3, [r8, #4]
   1136c:	mov	r0, r4
   11370:	ldr	r1, [r3, r6]
   11374:	bl	11034 <strcat@plt>
   11378:	mov	r1, sl
   1137c:	mov	r0, r4
   11380:	bl	11034 <strcat@plt>
   11384:	mov	r6, r9
   11388:	b	11324 <putc_unlocked@plt+0x104>
   1138c:	ldr	r1, [pc, #996]	; 11778 <putc_unlocked@plt+0x558>
   11390:	mov	r0, r4
   11394:	bl	11040 <strcpy@plt>
   11398:	ldrb	r3, [r4]
   1139c:	cmp	r3, #0
   113a0:	beq	11734 <putc_unlocked@plt+0x514>
   113a4:	mov	r0, r4
   113a8:	bl	11070 <puts@plt>
   113ac:	b	11734 <putc_unlocked@plt+0x514>
   113b0:	ldrsh	r3, [sp, #38]	; 0x26
   113b4:	cmp	r3, #1
   113b8:	bne	11460 <putc_unlocked@plt+0x240>
   113bc:	mov	r0, r5
   113c0:	bl	111e4 <gethostbyname@plt>
   113c4:	cmp	r0, #0
   113c8:	moveq	r0, r5
   113cc:	ldrne	r0, [r0]
   113d0:	bl	11004 <strdup@plt>
   113d4:	cmp	r0, #0
   113d8:	mov	r4, r0
   113dc:	bne	113f4 <putc_unlocked@plt+0x1d4>
   113e0:	bl	11124 <__errno_location@plt>
   113e4:	ldr	r2, [pc, #912]	; 1177c <putc_unlocked@plt+0x55c>
   113e8:	ldr	r1, [r0]
   113ec:	mov	r0, #1
   113f0:	bl	1104c <error@plt>
   113f4:	ldrsh	r3, [sp, #42]	; 0x2a
   113f8:	cmp	r3, #1
   113fc:	beq	116bc <putc_unlocked@plt+0x49c>
   11400:	ldrsh	r3, [sp, #44]	; 0x2c
   11404:	cmp	r3, #1
   11408:	bne	116ec <putc_unlocked@plt+0x4cc>
   1140c:	cmp	r4, #0
   11410:	bne	116c4 <putc_unlocked@plt+0x4a4>
   11414:	ldrsh	r3, [sp, #44]	; 0x2c
   11418:	cmp	r3, #1
   1141c:	bne	1155c <putc_unlocked@plt+0x33c>
   11420:	mov	r1, #46	; 0x2e
   11424:	mov	r0, r5
   11428:	bl	1110c <strchr@plt>
   1142c:	subs	r1, r0, #0
   11430:	moveq	r0, r5
   11434:	beq	11710 <putc_unlocked@plt+0x4f0>
   11438:	sub	r1, r1, r5
   1143c:	mov	r0, r5
   11440:	bl	10fc8 <strndup@plt>
   11444:	b	11714 <putc_unlocked@plt+0x4f4>
   11448:	cmp	r3, #40	; 0x28
   1144c:	bne	116ec <putc_unlocked@plt+0x4cc>
   11450:	mov	r0, r4
   11454:	bl	129f8 <argp_parse@@Base+0xa9c>
   11458:	mov	r4, r6
   1145c:	b	116ec <putc_unlocked@plt+0x4cc>
   11460:	ldrsh	r8, [sp, #40]	; 0x28
   11464:	cmp	r8, #1
   11468:	bne	1154c <putc_unlocked@plt+0x32c>
   1146c:	mov	r0, #256	; 0x100
   11470:	bl	12f78 <argp_parse@@Base+0x101c>
   11474:	mov	r6, #0
   11478:	strb	r6, [r0]
   1147c:	mov	r4, r0
   11480:	mov	r0, r5
   11484:	bl	111e4 <gethostbyname@plt>
   11488:	subs	r7, r0, #0
   1148c:	beq	11528 <putc_unlocked@plt+0x308>
   11490:	ldr	fp, [pc, #732]	; 11774 <putc_unlocked@plt+0x554>
   11494:	mov	r9, #256	; 0x100
   11498:	mov	r8, r6
   1149c:	mov	sl, #16
   114a0:	ldr	r3, [r7, #16]
   114a4:	ldr	r1, [r3, r6]
   114a8:	cmp	r1, #0
   114ac:	beq	11398 <putc_unlocked@plt+0x178>
   114b0:	mov	r3, sl
   114b4:	add	r2, sp, #12
   114b8:	ldr	r0, [r7, #8]
   114bc:	bl	111cc <inet_ntop@plt>
   114c0:	ldr	r3, [r7, #16]
   114c4:	add	r6, r6, #4
   114c8:	add	r0, sp, #12
   114cc:	ldr	r3, [r3, r6]
   114d0:	cmp	r3, #0
   114d4:	addne	r8, r8, #1
   114d8:	bl	11100 <strlen@plt>
   114dc:	add	r8, r8, r0
   114e0:	cmp	r8, r9
   114e4:	bcc	114fc <putc_unlocked@plt+0x2dc>
   114e8:	lsl	r9, r9, #1
   114ec:	mov	r0, r4
   114f0:	mov	r1, r9
   114f4:	bl	12fa4 <argp_parse@@Base+0x1048>
   114f8:	mov	r4, r0
   114fc:	add	r1, sp, #12
   11500:	mov	r0, r4
   11504:	bl	11034 <strcat@plt>
   11508:	ldr	r3, [r7, #16]
   1150c:	ldr	r3, [r3, r6]
   11510:	cmp	r3, #0
   11514:	beq	114a0 <putc_unlocked@plt+0x280>
   11518:	mov	r1, fp
   1151c:	mov	r0, r4
   11520:	bl	11034 <strcat@plt>
   11524:	b	114a0 <putc_unlocked@plt+0x280>
   11528:	bl	110a0 <__h_errno_location@plt>
   1152c:	ldr	r0, [r0]
   11530:	bl	10f98 <hstrerror@plt>
   11534:	ldr	r2, [pc, #580]	; 11780 <putc_unlocked@plt+0x560>
   11538:	mov	r1, r7
   1153c:	mov	r3, r0
   11540:	mov	r0, r8
   11544:	bl	1104c <error@plt>
   11548:	b	11398 <putc_unlocked@plt+0x178>
   1154c:	mov	r0, r5
   11550:	bl	11004 <strdup@plt>
   11554:	subs	r4, r0, #0
   11558:	b	1171c <putc_unlocked@plt+0x4fc>
   1155c:	cmp	r4, #0
   11560:	beq	11734 <putc_unlocked@plt+0x514>
   11564:	b	11398 <putc_unlocked@plt+0x178>
   11568:	ldr	r1, [r4, #4]
   1156c:	ldr	r2, [pc, #528]	; 11784 <putc_unlocked@plt+0x564>
   11570:	cmp	r1, r2
   11574:	bne	11744 <putc_unlocked@plt+0x524>
   11578:	ldr	r0, [sp, #28]
   1157c:	cmp	r0, #0
   11580:	ldreq	r5, [sp, #32]
   11584:	beq	11664 <putc_unlocked@plt+0x444>
   11588:	ldr	r1, [pc, #504]	; 11788 <putc_unlocked@plt+0x568>
   1158c:	str	r3, [sp, #8]
   11590:	str	r3, [sp, #12]
   11594:	bl	111b4 <fopen64@plt>
   11598:	subs	r7, r0, #0
   1159c:	bne	115b4 <putc_unlocked@plt+0x394>
   115a0:	bl	11124 <__errno_location@plt>
   115a4:	ldr	r2, [pc, #480]	; 1178c <putc_unlocked@plt+0x56c>
   115a8:	ldr	r1, [r0]
   115ac:	mov	r0, #1
   115b0:	bl	1104c <error@plt>
   115b4:	bl	11124 <__errno_location@plt>
   115b8:	ldr	r9, [pc, #440]	; 11778 <putc_unlocked@plt+0x558>
   115bc:	mov	r3, #0
   115c0:	mov	r8, r0
   115c4:	str	r3, [r0]
   115c8:	mov	r2, r7
   115cc:	add	r1, sp, #12
   115d0:	add	r0, sp, #8
   115d4:	bl	111d8 <getline@plt>
   115d8:	cmn	r0, #1
   115dc:	mov	r5, r0
   115e0:	bne	11600 <putc_unlocked@plt+0x3e0>
   115e4:	ldr	r1, [r8]
   115e8:	ldr	r3, [pc, #416]	; 11790 <putc_unlocked@plt+0x570>
   115ec:	cmp	r1, #0
   115f0:	movne	r3, r9
   115f4:	ldr	r2, [pc, #408]	; 11794 <putc_unlocked@plt+0x574>
   115f8:	mov	r0, #1
   115fc:	bl	1104c <error@plt>
   11600:	ldr	r3, [sp, #8]
   11604:	ldrb	r3, [r3]
   11608:	cmp	r3, #35	; 0x23
   1160c:	beq	11640 <putc_unlocked@plt+0x420>
   11610:	add	r0, r5, #1
   11614:	bl	12f78 <argp_parse@@Base+0x101c>
   11618:	ldr	r1, [pc, #376]	; 11798 <putc_unlocked@plt+0x578>
   1161c:	mov	r2, r0
   11620:	mov	r6, r0
   11624:	mov	r5, r0
   11628:	ldr	r0, [sp, #8]
   1162c:	bl	11184 <sscanf@plt>
   11630:	cmp	r0, #1
   11634:	beq	11654 <putc_unlocked@plt+0x434>
   11638:	mov	r0, r6
   1163c:	bl	129f8 <argp_parse@@Base+0xa9c>
   11640:	mov	r0, r7
   11644:	bl	110f4 <feof@plt>
   11648:	cmp	r0, #0
   1164c:	beq	115c8 <putc_unlocked@plt+0x3a8>
   11650:	mov	r5, #0
   11654:	ldr	r0, [sp, #8]
   11658:	bl	129f8 <argp_parse@@Base+0xa9c>
   1165c:	mov	r0, r7
   11660:	bl	11154 <fclose@plt>
   11664:	cmp	r5, #0
   11668:	beq	1167c <putc_unlocked@plt+0x45c>
   1166c:	mov	r0, r5
   11670:	bl	11100 <strlen@plt>
   11674:	subs	r1, r0, #0
   11678:	bne	11690 <putc_unlocked@plt+0x470>
   1167c:	mov	r1, #0
   11680:	ldr	r2, [pc, #276]	; 1179c <putc_unlocked@plt+0x57c>
   11684:	mov	r0, #1
   11688:	bl	1104c <error@plt>
   1168c:	mov	r1, #0
   11690:	ldr	r3, [r4, #4]
   11694:	mov	r0, r5
   11698:	blx	r3
   1169c:	cmn	r0, #1
   116a0:	bne	1173c <putc_unlocked@plt+0x51c>
   116a4:	bl	11124 <__errno_location@plt>
   116a8:	ldr	r2, [pc, #240]	; 117a0 <putc_unlocked@plt+0x580>
   116ac:	ldr	r1, [r0]
   116b0:	mov	r0, #1
   116b4:	bl	1104c <error@plt>
   116b8:	b	1173c <putc_unlocked@plt+0x51c>
   116bc:	cmp	r4, #0
   116c0:	beq	116f8 <putc_unlocked@plt+0x4d8>
   116c4:	ldrb	r3, [r4]
   116c8:	cmp	r3, #0
   116cc:	cmpne	r3, #40	; 0x28
   116d0:	movne	r6, #1
   116d4:	moveq	r6, #0
   116d8:	beq	11448 <putc_unlocked@plt+0x228>
   116dc:	mov	r0, r5
   116e0:	bl	129f8 <argp_parse@@Base+0xa9c>
   116e4:	mov	r5, r4
   116e8:	mov	r4, #0
   116ec:	ldrsh	r3, [sp, #42]	; 0x2a
   116f0:	cmp	r3, #1
   116f4:	bne	11414 <putc_unlocked@plt+0x1f4>
   116f8:	mov	r1, #46	; 0x2e
   116fc:	mov	r0, r5
   11700:	bl	1110c <strchr@plt>
   11704:	cmp	r0, #0
   11708:	addne	r0, r0, #1
   1170c:	ldreq	r0, [pc, #144]	; 117a4 <putc_unlocked@plt+0x584>
   11710:	bl	11004 <strdup@plt>
   11714:	mov	r4, r0
   11718:	cmp	r0, #0
   1171c:	bne	11398 <putc_unlocked@plt+0x178>
   11720:	bl	11124 <__errno_location@plt>
   11724:	ldr	r2, [pc, #80]	; 1177c <putc_unlocked@plt+0x55c>
   11728:	ldr	r1, [r0]
   1172c:	mov	r0, #1
   11730:	bl	1104c <error@plt>
   11734:	mov	r0, r4
   11738:	bl	129f8 <argp_parse@@Base+0xa9c>
   1173c:	mov	r0, r5
   11740:	bl	129f8 <argp_parse@@Base+0xa9c>
   11744:	mov	r0, #0
   11748:	add	sp, sp, #52	; 0x34
   1174c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11750:	andeq	r9, r2, ip, lsr #5
   11754:	andeq	r7, r1, r8, lsl #19
   11758:	andeq	r9, r2, r8, lsl #2
   1175c:	andeq	r7, r1, r5, ror #19
   11760:	andeq	r9, r2, ip, ror #4
   11764:	andeq	r9, r2, r0, lsl r1
   11768:	andeq	r3, r1, r8, lsl r5
   1176c:	andeq	r3, r1, r8, lsr r4
   11770:	andeq	r7, r1, r0, lsr #19
   11774:	andeq	r8, r1, r4, asr r3
   11778:	ldrdeq	r8, [r1], -r5
   1177c:	andeq	r7, r1, r7, ror r9
   11780:			; <UNDEFINED> instruction: 0x000179bd
   11784:	andeq	r1, r1, ip, lsr #1
   11788:	andeq	r8, r1, fp, lsl #5
   1178c:	andeq	r7, r1, pc, asr #19
   11790:	andeq	r7, r1, lr, ror r9
   11794:	ldrdeq	r7, [r1], -r5
   11798:	andeq	r8, r1, r7, lsr #5
   1179c:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   117a0:	andeq	r7, r1, lr, ror #19
   117a4:			; <UNDEFINED> instruction: 0x000179b6
   117a8:	mov	fp, #0
   117ac:	mov	lr, #0
   117b0:	pop	{r1}		; (ldr r1, [sp], #4)
   117b4:	mov	r2, sp
   117b8:	push	{r2}		; (str r2, [sp, #-4]!)
   117bc:	push	{r0}		; (str r0, [sp, #-4]!)
   117c0:	ldr	ip, [pc, #16]	; 117d8 <putc_unlocked@plt+0x5b8>
   117c4:	push	{ip}		; (str ip, [sp, #-4]!)
   117c8:	ldr	r0, [pc, #12]	; 117dc <putc_unlocked@plt+0x5bc>
   117cc:	ldr	r3, [pc, #12]	; 117e0 <putc_unlocked@plt+0x5c0>
   117d0:	bl	11088 <__libc_start_main@plt>
   117d4:	bl	11208 <abort@plt>
   117d8:	andeq	r7, r1, ip, lsr r9
   117dc:	andeq	r1, r1, ip, lsr #4
   117e0:	ldrdeq	r7, [r1], -ip
   117e4:	ldr	r3, [pc, #20]	; 11800 <putc_unlocked@plt+0x5e0>
   117e8:	ldr	r2, [pc, #20]	; 11804 <putc_unlocked@plt+0x5e4>
   117ec:	add	r3, pc, r3
   117f0:	ldr	r2, [r3, r2]
   117f4:	cmp	r2, #0
   117f8:	bxeq	lr
   117fc:	b	110c4 <__gmon_start__@plt>
   11800:	andeq	r7, r1, ip, lsl #16
   11804:	strdeq	r0, [r0], -ip
   11808:	ldr	r3, [pc, #28]	; 1182c <putc_unlocked@plt+0x60c>
   1180c:	ldr	r0, [pc, #28]	; 11830 <putc_unlocked@plt+0x610>
   11810:	sub	r3, r3, r0
   11814:	cmp	r3, #6
   11818:	bxls	lr
   1181c:	ldr	r3, [pc, #16]	; 11834 <putc_unlocked@plt+0x614>
   11820:	cmp	r3, #0
   11824:	bxeq	lr
   11828:	bx	r3
   1182c:	andeq	r9, r2, fp, asr r2
   11830:	andeq	r9, r2, r8, asr r2
   11834:	andeq	r0, r0, r0
   11838:	ldr	r1, [pc, #36]	; 11864 <putc_unlocked@plt+0x644>
   1183c:	ldr	r0, [pc, #36]	; 11868 <putc_unlocked@plt+0x648>
   11840:	sub	r1, r1, r0
   11844:	asr	r1, r1, #2
   11848:	add	r1, r1, r1, lsr #31
   1184c:	asrs	r1, r1, #1
   11850:	bxeq	lr
   11854:	ldr	r3, [pc, #16]	; 1186c <putc_unlocked@plt+0x64c>
   11858:	cmp	r3, #0
   1185c:	bxeq	lr
   11860:	bx	r3
   11864:	andeq	r9, r2, r8, asr r2
   11868:	andeq	r9, r2, r8, asr r2
   1186c:	andeq	r0, r0, r0
   11870:	push	{r4, lr}
   11874:	ldr	r4, [pc, #24]	; 11894 <putc_unlocked@plt+0x674>
   11878:	ldrb	r3, [r4]
   1187c:	cmp	r3, #0
   11880:	popne	{r4, pc}
   11884:	bl	11808 <putc_unlocked@plt+0x5e8>
   11888:	mov	r3, #1
   1188c:	strb	r3, [r4]
   11890:	pop	{r4, pc}
   11894:	andeq	r9, r2, r8, ror #4
   11898:	ldr	r0, [pc, #40]	; 118c8 <putc_unlocked@plt+0x6a8>
   1189c:	ldr	r3, [r0]
   118a0:	cmp	r3, #0
   118a4:	bne	118ac <putc_unlocked@plt+0x68c>
   118a8:	b	11838 <putc_unlocked@plt+0x618>
   118ac:	ldr	r3, [pc, #24]	; 118cc <putc_unlocked@plt+0x6ac>
   118b0:	cmp	r3, #0
   118b4:	beq	118a8 <putc_unlocked@plt+0x688>
   118b8:	push	{r4, lr}
   118bc:	blx	r3
   118c0:	pop	{r4, lr}
   118c4:	b	11838 <putc_unlocked@plt+0x618>
   118c8:	andeq	r8, r2, ip, lsl #30
   118cc:	andeq	r0, r0, r0
   118d0:	cmp	r0, #100	; 0x64
   118d4:	push	{r4, r5, r6, lr}
   118d8:	ldr	r5, [r2, #28]
   118dc:	beq	11994 <putc_unlocked@plt+0x774>
   118e0:	bgt	1193c <putc_unlocked@plt+0x71c>
   118e4:	cmp	r0, #70	; 0x46
   118e8:	beq	119b0 <putc_unlocked@plt+0x790>
   118ec:	cmp	r0, #97	; 0x61
   118f0:	beq	11978 <putc_unlocked@plt+0x758>
   118f4:	cmp	r0, #0
   118f8:	bne	11950 <putc_unlocked@plt+0x730>
   118fc:	ldr	r3, [pc, #268]	; 11a10 <putc_unlocked@plt+0x7f0>
   11900:	ldr	r2, [pc, #268]	; 11a14 <putc_unlocked@plt+0x7f4>
   11904:	mov	r4, r0
   11908:	mov	r0, r1
   1190c:	str	r2, [r3, #4]
   11910:	bl	11004 <strdup@plt>
   11914:	cmp	r0, #0
   11918:	mov	r6, r0
   1191c:	str	r0, [r5, #4]
   11920:	bne	1198c <putc_unlocked@plt+0x76c>
   11924:	bl	11124 <__errno_location@plt>
   11928:	ldr	r2, [pc, #232]	; 11a18 <putc_unlocked@plt+0x7f8>
   1192c:	ldr	r1, [r0]
   11930:	mov	r0, #1
   11934:	bl	1104c <error@plt>
   11938:	b	1198c <putc_unlocked@plt+0x76c>
   1193c:	cmp	r0, #105	; 0x69
   11940:	beq	119dc <putc_unlocked@plt+0x7bc>
   11944:	bgt	11958 <putc_unlocked@plt+0x738>
   11948:	cmp	r0, #102	; 0x66
   1194c:	beq	119c4 <putc_unlocked@plt+0x7a4>
   11950:	mov	r0, #7
   11954:	pop	{r4, r5, r6, pc}
   11958:	cmp	r0, #115	; 0x73
   1195c:	beq	119f4 <putc_unlocked@plt+0x7d4>
   11960:	cmp	r0, #121	; 0x79
   11964:	bne	11950 <putc_unlocked@plt+0x730>
   11968:	ldr	r3, [pc, #160]	; 11a10 <putc_unlocked@plt+0x7f0>
   1196c:	ldr	r2, [pc, #168]	; 11a1c <putc_unlocked@plt+0x7fc>
   11970:	str	r2, [r3]
   11974:	b	1198c <putc_unlocked@plt+0x76c>
   11978:	ldr	r3, [pc, #144]	; 11a10 <putc_unlocked@plt+0x7f0>
   1197c:	ldr	r2, [pc, #156]	; 11a20 <putc_unlocked@plt+0x800>
   11980:	str	r2, [r3]
   11984:	mov	r3, #1
   11988:	strh	r3, [r5, #8]
   1198c:	mov	r0, #0
   11990:	pop	{r4, r5, r6, pc}
   11994:	ldr	r3, [pc, #116]	; 11a10 <putc_unlocked@plt+0x7f0>
   11998:	ldr	r2, [pc, #128]	; 11a20 <putc_unlocked@plt+0x800>
   1199c:	str	r2, [r3]
   119a0:	mov	r3, #1
   119a4:	strh	r3, [r5, #10]
   119a8:	strh	r3, [r5, #14]
   119ac:	b	1198c <putc_unlocked@plt+0x76c>
   119b0:	ldr	r3, [pc, #88]	; 11a10 <putc_unlocked@plt+0x7f0>
   119b4:	ldr	r2, [pc, #88]	; 11a14 <putc_unlocked@plt+0x7f4>
   119b8:	str	r1, [r5]
   119bc:	str	r2, [r3, #4]
   119c0:	b	1198c <putc_unlocked@plt+0x76c>
   119c4:	ldr	r3, [pc, #68]	; 11a10 <putc_unlocked@plt+0x7f0>
   119c8:	ldr	r2, [pc, #80]	; 11a20 <putc_unlocked@plt+0x800>
   119cc:	str	r2, [r3]
   119d0:	mov	r3, #1
   119d4:	strh	r3, [r5, #10]
   119d8:	b	1198c <putc_unlocked@plt+0x76c>
   119dc:	ldr	r3, [pc, #44]	; 11a10 <putc_unlocked@plt+0x7f0>
   119e0:	ldr	r2, [pc, #56]	; 11a20 <putc_unlocked@plt+0x800>
   119e4:	str	r2, [r3]
   119e8:	mov	r3, #1
   119ec:	strh	r3, [r5, #12]
   119f0:	b	1198c <putc_unlocked@plt+0x76c>
   119f4:	ldr	r3, [pc, #20]	; 11a10 <putc_unlocked@plt+0x7f0>
   119f8:	ldr	r2, [pc, #32]	; 11a20 <putc_unlocked@plt+0x800>
   119fc:	str	r2, [r3]
   11a00:	mov	r3, #1
   11a04:	strh	r3, [r5, #10]
   11a08:	strh	r3, [r5, #16]
   11a0c:	b	1198c <putc_unlocked@plt+0x76c>
   11a10:	andeq	r9, r2, ip, ror #4
   11a14:	andeq	r1, r1, ip, lsr #1
   11a18:	andeq	r7, r1, r7, ror r9
   11a1c:	andeq	r3, r1, r8, lsr r4
   11a20:	andeq	r3, r1, r8, lsl r5
   11a24:	push	{r4, r5, r6, lr}
   11a28:	ldr	r6, [r0]
   11a2c:	cmp	r6, #0
   11a30:	beq	11a7c <putc_unlocked@plt+0x85c>
   11a34:	mov	ip, r2
   11a38:	ldr	r2, [r0, #32]
   11a3c:	mov	r5, r1
   11a40:	str	r2, [r1, #36]	; 0x24
   11a44:	ldr	r2, [r0, #24]
   11a48:	mov	r4, r0
   11a4c:	str	r2, [r1, #28]
   11a50:	ldr	r2, [r0, #28]
   11a54:	str	r2, [r1, #32]
   11a58:	ldr	r2, [r0, #12]
   11a5c:	mov	r0, ip
   11a60:	str	r2, [r1, #20]
   11a64:	mov	r2, r1
   11a68:	mov	r1, r3
   11a6c:	blx	r6
   11a70:	ldr	r3, [r5, #36]	; 0x24
   11a74:	str	r3, [r4, #32]
   11a78:	pop	{r4, r5, r6, pc}
   11a7c:	mov	r0, #7
   11a80:	pop	{r4, r5, r6, pc}
   11a84:	ldr	r3, [r0]
   11a88:	push	{r4, r5, r6, lr}
   11a8c:	cmp	r3, #0
   11a90:	ldr	r4, [r0, #16]
   11a94:	bne	11aa4 <putc_unlocked@plt+0x884>
   11a98:	ldr	r2, [r0, #4]
   11a9c:	cmp	r2, #0
   11aa0:	beq	11b0c <putc_unlocked@plt+0x8ec>
   11aa4:	ldr	r2, [r1, #8]
   11aa8:	cmp	r3, #0
   11aac:	add	r2, r2, #1
   11ab0:	str	r2, [r1, #8]
   11ab4:	beq	11b0c <putc_unlocked@plt+0x8ec>
   11ab8:	mov	r2, #0
   11abc:	add	r3, r3, #24
   11ac0:	ldr	r0, [r3, #-20]	; 0xffffffec
   11ac4:	cmp	r0, #0
   11ac8:	bne	11b48 <putc_unlocked@plt+0x928>
   11acc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11ad0:	cmp	r0, #0
   11ad4:	bne	11b48 <putc_unlocked@plt+0x928>
   11ad8:	ldr	r0, [r3, #-8]
   11adc:	cmp	r0, #0
   11ae0:	bne	11b48 <putc_unlocked@plt+0x928>
   11ae4:	ldr	r0, [r3, #-4]
   11ae8:	cmp	r0, #0
   11aec:	bne	11b48 <putc_unlocked@plt+0x928>
   11af0:	ldr	r3, [r1]
   11af4:	add	r0, r2, r2, lsl #1
   11af8:	add	r3, r3, r0
   11afc:	str	r3, [r1]
   11b00:	ldr	r3, [r1, #4]
   11b04:	add	r2, r3, r2
   11b08:	str	r2, [r1, #4]
   11b0c:	cmp	r4, #0
   11b10:	movne	r5, r1
   11b14:	addne	r4, r4, #16
   11b18:	bne	11b34 <putc_unlocked@plt+0x914>
   11b1c:	pop	{r4, r5, r6, pc}
   11b20:	mov	r1, r5
   11b24:	bl	11a84 <putc_unlocked@plt+0x864>
   11b28:	ldr	r3, [r5, #12]
   11b2c:	add	r3, r3, #1
   11b30:	str	r3, [r5, #12]
   11b34:	add	r4, r4, #16
   11b38:	ldr	r0, [r4, #-32]	; 0xffffffe0
   11b3c:	cmp	r0, #0
   11b40:	bne	11b20 <putc_unlocked@plt+0x900>
   11b44:	pop	{r4, r5, r6, pc}
   11b48:	add	r2, r2, #1
   11b4c:	b	11abc <putc_unlocked@plt+0x89c>
   11b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b54:	sub	sp, sp, #36	; 0x24
   11b58:	ldr	r6, [r0]
   11b5c:	mov	r9, r0
   11b60:	cmp	r6, #0
   11b64:	str	r1, [sp, #16]
   11b68:	str	r2, [sp, #20]
   11b6c:	mov	r4, r3
   11b70:	ldr	r5, [sp, #72]	; 0x48
   11b74:	ldr	sl, [r0, #16]
   11b78:	addne	r7, r6, #24
   11b7c:	movne	fp, #0
   11b80:	bne	11cfc <putc_unlocked@plt+0xadc>
   11b84:	ldr	r6, [r0, #4]
   11b88:	cmp	r6, #0
   11b8c:	beq	11bf0 <putc_unlocked@plt+0x9d0>
   11b90:	ldr	r3, [r9, #4]
   11b94:	ldr	r2, [sp, #16]
   11b98:	stm	r4, {r3, r9}
   11b9c:	ldr	r3, [r5, #4]
   11ba0:	str	r2, [r4, #16]
   11ba4:	str	r3, [r4, #8]
   11ba8:	ldr	r2, [sp, #20]
   11bac:	mov	r3, #0
   11bb0:	cmp	sl, r3
   11bb4:	str	r3, [r4, #12]
   11bb8:	str	r2, [r4, #20]
   11bbc:	str	r3, [r4, #24]
   11bc0:	str	r3, [r4, #32]
   11bc4:	str	r3, [r4, #28]
   11bc8:	beq	11be8 <putc_unlocked@plt+0x9c8>
   11bcc:	ldr	r2, [sl, r3, lsl #4]
   11bd0:	cmp	r2, #0
   11bd4:	bne	11d58 <putc_unlocked@plt+0xb38>
   11bd8:	ldr	r2, [r5, #12]
   11bdc:	add	r3, r2, r3, lsl #2
   11be0:	str	r2, [r4, #28]
   11be4:	str	r3, [r5, #12]
   11be8:	mov	r6, r4
   11bec:	add	r4, r4, #36	; 0x24
   11bf0:	cmp	sl, #0
   11bf4:	movne	r2, #0
   11bf8:	bne	11d7c <putc_unlocked@plt+0xb5c>
   11bfc:	mov	r0, r4
   11c00:	add	sp, sp, #36	; 0x24
   11c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c08:	tst	r2, #8
   11c0c:	bne	11c34 <putc_unlocked@plt+0xa14>
   11c10:	sub	r3, r8, #1
   11c14:	cmp	r3, #254	; 0xfe
   11c18:	bhi	11c34 <putc_unlocked@plt+0xa14>
   11c1c:	bl	110dc <__ctype_b_loc@plt>
   11c20:	lsl	r3, r8, #1
   11c24:	ldr	r2, [r0]
   11c28:	ldrh	r3, [r2, r3]
   11c2c:	tst	r3, #16384	; 0x4000
   11c30:	bne	11d8c <putc_unlocked@plt+0xb6c>
   11c34:	ldr	r3, [r7, #-24]	; 0xffffffe8
   11c38:	cmp	r3, #0
   11c3c:	beq	11cf8 <putc_unlocked@plt+0xad8>
   11c40:	ldr	r2, [r5]
   11c44:	str	r2, [sp, #12]
   11c48:	ldr	r2, [r2, #8]
   11c4c:	mov	r8, r2
   11c50:	ldr	r0, [r8]
   11c54:	cmp	r0, #0
   11c58:	beq	11c88 <putc_unlocked@plt+0xa68>
   11c5c:	mov	r1, r3
   11c60:	str	r2, [sp, #28]
   11c64:	str	r3, [sp, #24]
   11c68:	bl	10f80 <strcmp@plt>
   11c6c:	ldr	r3, [sp, #24]
   11c70:	ldr	r2, [sp, #28]
   11c74:	cmp	r0, #0
   11c78:	bne	11d50 <putc_unlocked@plt+0xb30>
   11c7c:	sub	r8, r8, r2
   11c80:	cmn	r8, #15
   11c84:	bge	11cf8 <putc_unlocked@plt+0xad8>
   11c88:	ldr	r1, [r5, #8]
   11c8c:	str	r3, [r1]
   11c90:	ldr	r3, [r6, #8]
   11c94:	cmp	r3, #0
   11c98:	beq	11cb0 <putc_unlocked@plt+0xa90>
   11c9c:	ldr	r3, [r6, #12]
   11ca0:	tst	r3, #1
   11ca4:	movne	r3, #2
   11ca8:	moveq	r3, #1
   11cac:	str	r3, [sp, #8]
   11cb0:	ldr	r2, [sp, #12]
   11cb4:	ldr	r3, [sp, #8]
   11cb8:	ldr	r0, [pc, #292]	; 11de4 <putc_unlocked@plt+0xbc4>
   11cbc:	ldr	r2, [r2, #48]	; 0x30
   11cc0:	stmib	r1, {r3, fp}
   11cc4:	sub	r2, r4, r2
   11cc8:	ldr	r3, [r7, #-20]	; 0xffffffec
   11ccc:	asr	r2, r2, #2
   11cd0:	cmp	r3, #0
   11cd4:	mul	r2, r0, r2
   11cd8:	ldreq	r3, [r6, #4]
   11cdc:	add	r2, r2, #1
   11ce0:	bic	r3, r3, #-16777216	; 0xff000000
   11ce4:	add	r3, r3, r2, lsl #24
   11ce8:	str	r3, [r1, #12]
   11cec:	add	r3, r1, #16
   11cf0:	str	r3, [r5, #8]
   11cf4:	str	fp, [r1, #16]
   11cf8:	add	r7, r7, #24
   11cfc:	ldr	r8, [r7, #-20]	; 0xffffffec
   11d00:	sub	r3, r7, #24
   11d04:	cmp	r8, #0
   11d08:	bne	11d30 <putc_unlocked@plt+0xb10>
   11d0c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   11d10:	cmp	r2, #0
   11d14:	bne	11d30 <putc_unlocked@plt+0xb10>
   11d18:	ldr	r2, [r7, #-8]
   11d1c:	cmp	r2, #0
   11d20:	bne	11d30 <putc_unlocked@plt+0xb10>
   11d24:	ldr	r2, [r7, #-4]
   11d28:	cmp	r2, #0
   11d2c:	beq	11b90 <putc_unlocked@plt+0x970>
   11d30:	ldr	r2, [r7, #-12]
   11d34:	tst	r2, #4
   11d38:	moveq	r6, r3
   11d3c:	ldr	r3, [r6, #12]
   11d40:	ands	r3, r3, #8
   11d44:	str	r3, [sp, #8]
   11d48:	beq	11c08 <putc_unlocked@plt+0x9e8>
   11d4c:	b	11cf8 <putc_unlocked@plt+0xad8>
   11d50:	add	r8, r8, #16
   11d54:	b	11c50 <putc_unlocked@plt+0xa30>
   11d58:	add	r3, r3, #1
   11d5c:	b	11bcc <putc_unlocked@plt+0x9ac>
   11d60:	mov	r3, r4
   11d64:	str	r5, [sp]
   11d68:	mov	r1, r6
   11d6c:	add	r7, r2, #1
   11d70:	bl	11b50 <putc_unlocked@plt+0x930>
   11d74:	mov	r2, r7
   11d78:	mov	r4, r0
   11d7c:	ldr	r0, [sl, r2, lsl #4]
   11d80:	cmp	r0, #0
   11d84:	bne	11d60 <putc_unlocked@plt+0xb40>
   11d88:	b	11bfc <putc_unlocked@plt+0x9dc>
   11d8c:	ldr	r3, [r5, #4]
   11d90:	add	r2, r3, #1
   11d94:	str	r2, [r5, #4]
   11d98:	strb	r8, [r3]
   11d9c:	ldr	r3, [r6, #8]
   11da0:	cmp	r3, #0
   11da4:	beq	11dd8 <putc_unlocked@plt+0xbb8>
   11da8:	ldr	r3, [r5, #4]
   11dac:	add	r2, r3, #1
   11db0:	str	r2, [r5, #4]
   11db4:	mov	r2, #58	; 0x3a
   11db8:	strb	r2, [r3]
   11dbc:	ldr	r3, [r6, #12]
   11dc0:	tst	r3, #1
   11dc4:	ldrne	r3, [r5, #4]
   11dc8:	addne	r2, r3, #1
   11dcc:	strne	r2, [r5, #4]
   11dd0:	movne	r2, #58	; 0x3a
   11dd4:	strbne	r2, [r3]
   11dd8:	ldr	r3, [r5, #4]
   11ddc:	strb	fp, [r3]
   11de0:	b	11c34 <putc_unlocked@plt+0xa14>
   11de4:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   11de8:	cmp	r0, #86	; 0x56
   11dec:	bne	11e58 <putc_unlocked@plt+0xc38>
   11df0:	ldr	r3, [pc, #112]	; 11e68 <putc_unlocked@plt+0xc48>
   11df4:	push	{r4, lr}
   11df8:	mov	r4, r2
   11dfc:	ldr	r3, [r3]
   11e00:	cmp	r3, #0
   11e04:	beq	11e24 <putc_unlocked@plt+0xc04>
   11e08:	mov	r1, r2
   11e0c:	ldr	r0, [r2, #48]	; 0x30
   11e10:	blx	r3
   11e14:	ldr	r0, [r4, #16]
   11e18:	ands	r0, r0, #32
   11e1c:	bne	11e60 <putc_unlocked@plt+0xc40>
   11e20:	bl	110e8 <exit@plt>
   11e24:	ldr	r3, [pc, #64]	; 11e6c <putc_unlocked@plt+0xc4c>
   11e28:	ldr	r2, [r3]
   11e2c:	cmp	r2, #0
   11e30:	beq	11e44 <putc_unlocked@plt+0xc24>
   11e34:	ldr	r1, [pc, #52]	; 11e70 <putc_unlocked@plt+0xc50>
   11e38:	ldr	r0, [r4, #48]	; 0x30
   11e3c:	bl	11118 <fprintf@plt>
   11e40:	b	11e14 <putc_unlocked@plt+0xbf4>
   11e44:	ldr	r2, [pc, #40]	; 11e74 <putc_unlocked@plt+0xc54>
   11e48:	ldr	r1, [pc, #40]	; 11e78 <putc_unlocked@plt+0xc58>
   11e4c:	mov	r0, r4
   11e50:	bl	1629c <argp_error@@Base>
   11e54:	b	11e14 <putc_unlocked@plt+0xbf4>
   11e58:	mov	r0, #7
   11e5c:	bx	lr
   11e60:	mov	r0, #0
   11e64:	pop	{r4, pc}
   11e68:	andeq	r9, r2, r8, ror r2
   11e6c:			; <UNDEFINED> instruction: 0x000292b0
   11e70:	andeq	r7, r1, lr, asr sp
   11e74:	strdeq	r7, [r1], -r4
   11e78:	andeq	r8, r1, r7, lsr #5
   11e7c:	cmn	r0, #3
   11e80:	push	{r4, r5, r6, lr}
   11e84:	mov	r4, r2
   11e88:	beq	11ecc <putc_unlocked@plt+0xcac>
   11e8c:	mov	r5, r1
   11e90:	bgt	11ea4 <putc_unlocked@plt+0xc84>
   11e94:	cmn	r0, #4
   11e98:	beq	11f08 <putc_unlocked@plt+0xce8>
   11e9c:	mov	r0, #7
   11ea0:	pop	{r4, r5, r6, pc}
   11ea4:	cmn	r0, #2
   11ea8:	beq	11ed4 <putc_unlocked@plt+0xcb4>
   11eac:	cmp	r0, #63	; 0x3f
   11eb0:	ldreq	r2, [pc, #140]	; 11f44 <putc_unlocked@plt+0xd24>
   11eb4:	bne	11e9c <putc_unlocked@plt+0xc7c>
   11eb8:	ldr	r1, [r4, #48]	; 0x30
   11ebc:	mov	r0, r4
   11ec0:	bl	161fc <argp_state_help@@Base>
   11ec4:	mov	r0, #0
   11ec8:	pop	{r4, r5, r6, pc}
   11ecc:	ldr	r2, [pc, #116]	; 11f48 <putc_unlocked@plt+0xd28>
   11ed0:	b	11eb8 <putc_unlocked@plt+0xc98>
   11ed4:	ldr	r3, [pc, #112]	; 11f4c <putc_unlocked@plt+0xd2c>
   11ed8:	mov	r0, r1
   11edc:	str	r1, [r3]
   11ee0:	bl	12968 <argp_parse@@Base+0xa0c>
   11ee4:	ldr	r3, [pc, #100]	; 11f50 <putc_unlocked@plt+0xd30>
   11ee8:	str	r0, [r3]
   11eec:	ldr	r3, [r4, #16]
   11ef0:	str	r0, [r4, #40]	; 0x28
   11ef4:	and	r3, r3, #3
   11ef8:	cmp	r3, #1
   11efc:	ldreq	r3, [r4, #8]
   11f00:	streq	r5, [r3]
   11f04:	b	11ec4 <putc_unlocked@plt+0xca4>
   11f08:	cmp	r1, #0
   11f0c:	ldr	r0, [pc, #64]	; 11f54 <putc_unlocked@plt+0xd34>
   11f10:	movne	r0, r1
   11f14:	bl	111a8 <atoi@plt>
   11f18:	ldr	r4, [pc, #56]	; 11f58 <putc_unlocked@plt+0xd38>
   11f1c:	mov	r5, #1
   11f20:	str	r0, [r4]
   11f24:	ldr	r3, [r4]
   11f28:	sub	r2, r3, #1
   11f2c:	cmp	r3, #0
   11f30:	str	r2, [r4]
   11f34:	ble	11ec4 <putc_unlocked@plt+0xca4>
   11f38:	mov	r0, r5
   11f3c:	bl	10fec <sleep@plt>
   11f40:	b	11f24 <putc_unlocked@plt+0xd04>
   11f44:	andeq	r0, r0, sl, ror r2
   11f48:	andeq	r0, r0, r1, lsl #4
   11f4c:	andeq	r9, r2, ip, asr r2
   11f50:	andeq	r9, r2, r8, asr r2
   11f54:	andeq	r7, r1, r7, lsl ip
   11f58:	andeq	r9, r2, r4, ror r2

00011f5c <argp_parse@@Base>:
   11f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f60:	add	fp, sp, #32
   11f64:	tst	r3, #1
   11f68:	sub	sp, sp, #220	; 0xdc
   11f6c:	mov	r4, r0
   11f70:	mov	r8, r2
   11f74:	str	r1, [fp, #-240]	; 0xffffff10
   11f78:	mov	sl, r3
   11f7c:	bne	11fb0 <argp_parse@@Base+0x54>
   11f80:	ldr	r3, [pc, #2296]	; 12880 <argp_parse@@Base+0x924>
   11f84:	ldr	r5, [pc, #2296]	; 12884 <argp_parse@@Base+0x928>
   11f88:	ldr	r2, [r3]
   11f8c:	cmp	r2, #0
   11f90:	ldreq	r2, [r8]
   11f94:	streq	r2, [r3]
   11f98:	ldr	r3, [r5]
   11f9c:	cmp	r3, #0
   11fa0:	bne	11fb0 <argp_parse@@Base+0x54>
   11fa4:	ldr	r0, [r8]
   11fa8:	bl	12968 <argp_parse@@Base+0xa0c>
   11fac:	str	r0, [r5]
   11fb0:	ands	r7, sl, #16
   11fb4:	bne	1203c <argp_parse@@Base+0xe0>
   11fb8:	sub	sp, sp, #72	; 0x48
   11fbc:	add	r5, sp, #8
   11fc0:	sub	sp, sp, #40	; 0x28
   11fc4:	add	r6, sp, #8
   11fc8:	mov	r2, #28
   11fcc:	mov	r1, r7
   11fd0:	mov	r0, r6
   11fd4:	bl	1113c <memset@plt>
   11fd8:	str	r5, [r6, #16]
   11fdc:	mov	r0, r5
   11fe0:	mov	r2, #64	; 0x40
   11fe4:	mov	r1, r7
   11fe8:	bl	1113c <memset@plt>
   11fec:	cmp	r4, #0
   11ff0:	strne	r4, [r5]
   11ff4:	ldr	r3, [pc, #2188]	; 12888 <argp_parse@@Base+0x92c>
   11ff8:	addne	r5, r5, #16
   11ffc:	str	r3, [r5]
   12000:	ldr	r3, [pc, #2180]	; 1288c <argp_parse@@Base+0x930>
   12004:	ldr	r3, [r3]
   12008:	cmp	r3, #0
   1200c:	bne	12024 <argp_parse@@Base+0xc8>
   12010:	ldr	r3, [pc, #2168]	; 12890 <argp_parse@@Base+0x934>
   12014:	ldr	r3, [r3]
   12018:	cmp	r3, #0
   1201c:	addeq	r3, r5, #16
   12020:	beq	12030 <argp_parse@@Base+0xd4>
   12024:	ldr	r2, [pc, #2152]	; 12894 <argp_parse@@Base+0x938>
   12028:	add	r3, r5, #32
   1202c:	str	r2, [r5, #16]
   12030:	mov	r4, r6
   12034:	mov	r2, #0
   12038:	str	r2, [r3]
   1203c:	mov	r2, #36	; 0x24
   12040:	mov	r1, #0
   12044:	sub	r0, fp, #196	; 0xc4
   12048:	bl	1113c <memset@plt>
   1204c:	ands	r3, sl, #4
   12050:	moveq	r3, #1
   12054:	movne	r3, #0
   12058:	str	r3, [fp, #-228]	; 0xffffff1c
   1205c:	mov	r3, #0
   12060:	cmp	r4, r3
   12064:	str	r3, [fp, #-224]	; 0xffffff20
   12068:	str	r3, [fp, #-220]	; 0xffffff24
   1206c:	str	r3, [fp, #-216]	; 0xffffff28
   12070:	beq	12080 <argp_parse@@Base+0x124>
   12074:	sub	r1, fp, #228	; 0xe4
   12078:	mov	r0, r4
   1207c:	bl	11a84 <putc_unlocked@plt+0x864>
   12080:	ldr	r9, [fp, #-220]	; 0xffffff24
   12084:	ldr	r5, [fp, #-216]	; 0xffffff28
   12088:	add	r3, r9, #1
   1208c:	mov	r9, #36	; 0x24
   12090:	ldr	r6, [fp, #-224]	; 0xffffff20
   12094:	mul	r9, r9, r3
   12098:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1209c:	lsl	r5, r5, #2
   120a0:	add	r6, r6, #1
   120a4:	add	r3, r9, r5
   120a8:	add	r6, r3, r6, lsl #4
   120ac:	add	r0, r0, #1
   120b0:	add	r0, r0, r6
   120b4:	str	r3, [fp, #-236]	; 0xffffff14
   120b8:	bl	13640 <argp_parse@@Base+0x16e4>
   120bc:	cmp	r0, #0
   120c0:	mov	r7, r0
   120c4:	str	r0, [fp, #-40]	; 0xffffffd8
   120c8:	moveq	r4, #12
   120cc:	beq	1224c <argp_parse@@Base+0x2f0>
   120d0:	add	r3, r0, r9
   120d4:	str	r3, [fp, #-232]	; 0xffffff18
   120d8:	str	r3, [fp, #-104]	; 0xffffff98
   120dc:	ldr	r3, [fp, #-236]	; 0xffffff14
   120e0:	sub	lr, fp, #196	; 0xc4
   120e4:	add	r3, r0, r3
   120e8:	str	r3, [fp, #-236]	; 0xffffff14
   120ec:	str	r3, [fp, #-152]	; 0xffffff68
   120f0:	mov	r3, #1
   120f4:	add	r9, r0, r6
   120f8:	str	r0, [fp, #-112]	; 0xffffff90
   120fc:	str	r3, [fp, #-196]	; 0xffffff3c
   12100:	str	r3, [fp, #-192]	; 0xffffff40
   12104:	ldm	lr!, {r0, r1, r2, r3}
   12108:	sub	ip, fp, #148	; 0x94
   1210c:	str	r9, [fp, #-156]	; 0xffffff64
   12110:	stmia	ip!, {r0, r1, r2, r3}
   12114:	ldm	lr!, {r0, r1, r2, r3}
   12118:	stmia	ip!, {r0, r1, r2, r3}
   1211c:	mov	r2, r5
   12120:	ldr	r3, [lr]
   12124:	mov	r1, #0
   12128:	ldr	r0, [fp, #-232]	; 0xffffff18
   1212c:	str	r3, [ip]
   12130:	bl	1113c <memset@plt>
   12134:	ldr	r3, [fp, #-236]	; 0xffffff14
   12138:	tst	sl, #8
   1213c:	str	r3, [fp, #-204]	; 0xffffff34
   12140:	ldr	r3, [fp, #-232]	; 0xffffff18
   12144:	str	r9, [fp, #-208]	; 0xffffff30
   12148:	sub	r5, fp, #160	; 0xa0
   1214c:	addne	r9, r9, #1
   12150:	str	r3, [fp, #-200]	; 0xffffff38
   12154:	str	r5, [fp, #-212]	; 0xffffff2c
   12158:	strne	r9, [fp, #-208]	; 0xffffff30
   1215c:	movne	r3, #45	; 0x2d
   12160:	bne	1217c <argp_parse@@Base+0x220>
   12164:	ands	r3, sl, #4
   12168:	cmp	r3, #0
   1216c:	beq	12180 <argp_parse@@Base+0x224>
   12170:	mov	r3, #43	; 0x2b
   12174:	add	r9, r9, #1
   12178:	str	r9, [fp, #-208]	; 0xffffff30
   1217c:	strb	r3, [r7, r6]
   12180:	ldr	r3, [fp, #-208]	; 0xffffff30
   12184:	mov	r2, #0
   12188:	cmp	r4, r2
   1218c:	strb	r2, [r3]
   12190:	ldr	r3, [fp, #-204]	; 0xffffff34
   12194:	str	r2, [r3]
   12198:	ldreq	r3, [fp, #-112]	; 0xffffff90
   1219c:	str	r4, [fp, #-160]	; 0xffffff60
   121a0:	streq	r3, [fp, #-108]	; 0xffffff94
   121a4:	beq	121c4 <argp_parse@@Base+0x268>
   121a8:	sub	r3, fp, #212	; 0xd4
   121ac:	str	r3, [sp]
   121b0:	mov	r1, r2
   121b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   121b8:	mov	r0, r4
   121bc:	bl	11b50 <putc_unlocked@plt+0x930>
   121c0:	str	r0, [fp, #-108]	; 0xffffff94
   121c4:	mov	r2, #56	; 0x38
   121c8:	mov	r1, #0
   121cc:	add	r0, r5, #64	; 0x40
   121d0:	bl	1113c <memset@plt>
   121d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   121d8:	ldr	r6, [fp, #-112]	; 0xffffff90
   121dc:	str	r3, [fp, #-96]	; 0xffffffa0
   121e0:	ldr	r3, [fp, #-240]	; 0xffffff10
   121e4:	str	sl, [fp, #-80]	; 0xffffffb0
   121e8:	str	r3, [fp, #-92]	; 0xffffffa4
   121ec:	ldr	r3, [pc, #1700]	; 12898 <argp_parse@@Base+0x93c>
   121f0:	mov	r4, #0
   121f4:	ldr	sl, [pc, #1696]	; 1289c <argp_parse@@Base+0x940>
   121f8:	ldr	r3, [r3]
   121fc:	add	r7, r5, #64	; 0x40
   12200:	str	r3, [fp, #-52]	; 0xffffffcc
   12204:	ldr	r3, [pc, #1684]	; 128a0 <argp_parse@@Base+0x944>
   12208:	mov	r9, r4
   1220c:	str	r8, [fp, #-88]	; 0xffffffa8
   12210:	ldr	r3, [r3]
   12214:	str	r5, [fp, #-44]	; 0xffffffd4
   12218:	str	r3, [fp, #-48]	; 0xffffffd0
   1221c:	mov	r3, #1
   12220:	str	r3, [fp, #-100]	; 0xffffff9c
   12224:	ldr	r3, [fp, #-108]	; 0xffffff94
   12228:	cmp	r6, r3
   1222c:	ldrcc	r3, [fp, #8]
   12230:	strcc	r3, [r6, #24]
   12234:	ldr	r3, [fp, #-108]	; 0xffffff94
   12238:	cmp	r6, r3
   1223c:	bcs	122c0 <argp_parse@@Base+0x364>
   12240:	cmp	r4, #7
   12244:	cmpne	r4, #0
   12248:	beq	12258 <argp_parse@@Base+0x2fc>
   1224c:	mov	r0, r4
   12250:	sub	sp, fp, #32
   12254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12258:	ldr	r3, [r6, #16]
   1225c:	cmp	r3, #0
   12260:	ldrne	r3, [r3, #28]
   12264:	ldrne	r2, [r6, #20]
   12268:	ldrne	r3, [r3, r2, lsl #2]
   1226c:	strne	r3, [r6, #24]
   12270:	ldr	r3, [r6]
   12274:	cmp	r3, #0
   12278:	bne	122a0 <argp_parse@@Base+0x344>
   1227c:	ldr	r3, [r6, #4]
   12280:	ldr	r3, [r3, #16]
   12284:	cmp	r3, #0
   12288:	beq	122a0 <argp_parse@@Base+0x344>
   1228c:	ldr	r3, [r3]
   12290:	cmp	r3, #0
   12294:	ldrne	r3, [r6, #28]
   12298:	ldrne	r2, [r6, #24]
   1229c:	strne	r2, [r3]
   122a0:	mov	r0, r6
   122a4:	mov	r3, r9
   122a8:	mov	r2, sl
   122ac:	mov	r1, r7
   122b0:	bl	11a24 <putc_unlocked@plt+0x804>
   122b4:	add	r6, r6, #36	; 0x24
   122b8:	mov	r4, r0
   122bc:	b	12234 <argp_parse@@Base+0x2d8>
   122c0:	cmp	r4, #7
   122c4:	beq	122d0 <argp_parse@@Base+0x374>
   122c8:	cmp	r4, #0
   122cc:	bne	1224c <argp_parse@@Base+0x2f0>
   122d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   122d4:	tst	r3, #2
   122d8:	moveq	r3, #1
   122dc:	streq	r3, [fp, #-144]	; 0xffffff70
   122e0:	beq	12308 <argp_parse@@Base+0x3ac>
   122e4:	tst	r3, #1
   122e8:	mov	r2, #0
   122ec:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   122f0:	str	r2, [fp, #-144]	; 0xffffff70
   122f4:	subne	r3, r3, #4
   122f8:	strne	r3, [fp, #-88]	; 0xffffffa8
   122fc:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   12300:	addne	r3, r3, #1
   12304:	strne	r3, [fp, #-92]	; 0xffffffa4
   12308:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1230c:	cmp	r8, r3
   12310:	bne	12334 <argp_parse@@Base+0x3d8>
   12314:	ldr	r0, [r8]
   12318:	cmp	r0, #0
   1231c:	beq	12334 <argp_parse@@Base+0x3d8>
   12320:	bl	12968 <argp_parse@@Base+0xa0c>
   12324:	str	r0, [fp, #-56]	; 0xffffffc8
   12328:	add	r8, r5, #64	; 0x40
   1232c:	ldr	r9, [pc, #1392]	; 128a4 <argp_parse@@Base+0x948>
   12330:	b	124f8 <argp_parse@@Base+0x59c>
   12334:	ldr	r3, [pc, #1352]	; 12884 <argp_parse@@Base+0x928>
   12338:	ldr	r3, [r3]
   1233c:	str	r3, [fp, #-56]	; 0xffffffc8
   12340:	b	12328 <argp_parse@@Base+0x3cc>
   12344:	bl	12a70 <argp_parse@@Base+0xb14>
   12348:	b	12564 <argp_parse@@Base+0x608>
   1234c:	cmp	r0, #63	; 0x3f
   12350:	bne	12814 <argp_parse@@Base+0x8b8>
   12354:	ldr	r3, [fp, #-140]	; 0xffffff74
   12358:	cmn	r3, #1
   1235c:	bne	127b8 <argp_parse@@Base+0x85c>
   12360:	asrs	r3, r6, #24
   12364:	bne	12620 <argp_parse@@Base+0x6c4>
   12368:	mov	r1, r6
   1236c:	ldr	r0, [fp, #-156]	; 0xffffff64
   12370:	bl	1110c <strchr@plt>
   12374:	subs	r2, r0, #0
   12378:	beq	123b4 <argp_parse@@Base+0x458>
   1237c:	ldr	r0, [fp, #-112]	; 0xffffff90
   12380:	ldr	r3, [fp, #-108]	; 0xffffff94
   12384:	cmp	r0, r3
   12388:	bcs	123b4 <argp_parse@@Base+0x458>
   1238c:	ldr	r1, [r0, #8]
   12390:	cmp	r2, r1
   12394:	bcs	12618 <argp_parse@@Base+0x6bc>
   12398:	ldr	r3, [fp, #-136]	; 0xffffff78
   1239c:	mov	r2, r6
   123a0:	mov	r1, r8
   123a4:	bl	11a24 <putc_unlocked@plt+0x804>
   123a8:	cmp	r0, #7
   123ac:	mov	r4, r0
   123b0:	bne	126ac <argp_parse@@Base+0x750>
   123b4:	ldr	r3, [pc, #1260]	; 128a8 <argp_parse@@Base+0x94c>
   123b8:	ldr	r1, [pc, #1260]	; 128ac <argp_parse@@Base+0x950>
   123bc:	mov	r2, r6
   123c0:	add	r0, r5, #64	; 0x40
   123c4:	bl	1629c <argp_error@@Base>
   123c8:	sub	r7, r6, #1
   123cc:	mov	r4, #7
   123d0:	clz	r7, r7
   123d4:	lsr	r7, r7, #5
   123d8:	cmp	r4, #7
   123dc:	movne	r7, #0
   123e0:	andeq	r7, r7, #1
   123e4:	cmp	r7, #0
   123e8:	beq	1272c <argp_parse@@Base+0x7d0>
   123ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   123f0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   123f4:	cmp	r3, r2
   123f8:	bne	12784 <argp_parse@@Base+0x828>
   123fc:	mov	r4, #0
   12400:	ldr	r7, [fp, #-112]	; 0xffffff90
   12404:	ldr	sl, [pc, #1188]	; 128b0 <argp_parse@@Base+0x954>
   12408:	add	r8, r5, #64	; 0x40
   1240c:	mov	r9, r4
   12410:	ldr	r6, [fp, #-108]	; 0xffffff94
   12414:	cmp	r7, r6
   12418:	bcc	126b8 <argp_parse@@Base+0x75c>
   1241c:	ldr	r9, [pc, #1168]	; 128b4 <argp_parse@@Base+0x958>
   12420:	sub	r6, r6, #36	; 0x24
   12424:	add	r7, r5, #64	; 0x40
   12428:	mov	r8, #0
   1242c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12430:	cmp	r6, r3
   12434:	bcc	12710 <argp_parse@@Base+0x7b4>
   12438:	cmp	r4, #7
   1243c:	cmpne	r4, #0
   12440:	beq	126f0 <argp_parse@@Base+0x794>
   12444:	ldr	r3, [fp, #4]
   12448:	cmp	r3, #0
   1244c:	beq	1272c <argp_parse@@Base+0x7d0>
   12450:	ldr	r2, [fp, #4]
   12454:	ldr	r3, [fp, #-84]	; 0xffffffac
   12458:	str	r3, [r2]
   1245c:	b	12724 <argp_parse@@Base+0x7c8>
   12460:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12464:	tst	r2, #4
   12468:	bne	123ec <argp_parse@@Base+0x490>
   1246c:	add	r2, r3, #1
   12470:	str	r2, [fp, #-84]	; 0xffffffac
   12474:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12478:	ldr	r3, [r2, r3, lsl #2]
   1247c:	str	r3, [fp, #-136]	; 0xffffff78
   12480:	ldr	r3, [fp, #-136]	; 0xffffff78
   12484:	ldr	r7, [fp, #-84]	; 0xffffffac
   12488:	str	r3, [fp, #-232]	; 0xffffff18
   1248c:	ldr	r6, [fp, #-112]	; 0xffffff90
   12490:	mov	r3, #0
   12494:	mov	r4, #7
   12498:	mov	sl, r3
   1249c:	sub	r7, r7, #1
   124a0:	str	r7, [fp, #-84]	; 0xffffffac
   124a4:	ldr	r2, [fp, #-108]	; 0xffffff94
   124a8:	cmp	r6, r2
   124ac:	movcs	r2, #0
   124b0:	movcc	r2, #1
   124b4:	cmp	r4, #7
   124b8:	movne	r2, #0
   124bc:	cmp	r2, #0
   124c0:	bne	125b8 <argp_parse@@Base+0x65c>
   124c4:	cmp	r4, #0
   124c8:	bne	1269c <argp_parse@@Base+0x740>
   124cc:	cmp	r3, r9
   124d0:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   124d4:	streq	r3, [fp, #-84]	; 0xffffffac
   124d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   124dc:	cmp	r7, r3
   124e0:	sublt	r7, r3, r7
   124e4:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   124e8:	movge	r3, #1
   124ec:	addlt	r7, r3, r7
   124f0:	strlt	r7, [r6, #-24]	; 0xffffffe8
   124f4:	strge	r3, [fp, #-100]	; 0xffffff9c
   124f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   124fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   12500:	cmp	r2, #0
   12504:	beq	12514 <argp_parse@@Base+0x5b8>
   12508:	cmp	r2, r3
   1250c:	movgt	r2, #0
   12510:	strgt	r2, [fp, #-72]	; 0xffffffb8
   12514:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12518:	cmp	r2, #0
   1251c:	beq	125a4 <argp_parse@@Base+0x648>
   12520:	ldr	r7, [fp, #-72]	; 0xffffffb8
   12524:	cmp	r7, #0
   12528:	bne	125a4 <argp_parse@@Base+0x648>
   1252c:	str	r3, [fp, #-148]	; 0xffffff6c
   12530:	mvn	r3, #0
   12534:	str	r3, [fp, #-140]	; 0xffffff74
   12538:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1253c:	str	r7, [sp]
   12540:	tst	r3, #64	; 0x40
   12544:	add	r3, r5, #12
   12548:	str	r3, [sp, #4]
   1254c:	ldr	r2, [fp, #-156]	; 0xffffff64
   12550:	ldr	r3, [fp, #-152]	; 0xffffff68
   12554:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12558:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1255c:	beq	12344 <argp_parse@@Base+0x3e8>
   12560:	bl	12abc <argp_parse@@Base+0xb60>
   12564:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12568:	cmn	r0, #1
   1256c:	mov	r6, r0
   12570:	str	r4, [fp, #-84]	; 0xffffffac
   12574:	bne	1234c <argp_parse@@Base+0x3f0>
   12578:	mov	r3, #0
   1257c:	cmp	r4, #1
   12580:	str	r3, [fp, #-100]	; 0xffffff9c
   12584:	ble	125a4 <argp_parse@@Base+0x648>
   12588:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1258c:	sub	r3, r4, #-1073741823	; 0xc0000001
   12590:	ldr	r1, [pc, #800]	; 128b8 <argp_parse@@Base+0x95c>
   12594:	ldr	r0, [r2, r3, lsl #2]
   12598:	bl	10f80 <strcmp@plt>
   1259c:	cmp	r0, #0
   125a0:	streq	r4, [fp, #-72]	; 0xffffffb8
   125a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   125a8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   125ac:	cmp	r3, r2
   125b0:	bge	123ec <argp_parse@@Base+0x490>
   125b4:	b	12460 <argp_parse@@Base+0x504>
   125b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   125bc:	mov	r2, sl
   125c0:	add	r3, r3, #1
   125c4:	str	r3, [fp, #-84]	; 0xffffffac
   125c8:	mov	r1, r8
   125cc:	ldr	r3, [fp, #-232]	; 0xffffff18
   125d0:	mov	r0, r6
   125d4:	bl	11a24 <putc_unlocked@plt+0x804>
   125d8:	cmp	r0, #7
   125dc:	mov	r4, r0
   125e0:	movne	r3, sl
   125e4:	bne	12610 <argp_parse@@Base+0x6b4>
   125e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   125ec:	mov	r2, r9
   125f0:	sub	r3, r3, #1
   125f4:	str	r3, [fp, #-84]	; 0xffffffac
   125f8:	mov	r1, r8
   125fc:	mov	r3, sl
   12600:	mov	r0, r6
   12604:	bl	11a24 <putc_unlocked@plt+0x804>
   12608:	mov	r3, r9
   1260c:	mov	r4, r0
   12610:	add	r6, r6, #36	; 0x24
   12614:	b	124a4 <argp_parse@@Base+0x548>
   12618:	add	r0, r0, #36	; 0x24
   1261c:	b	12384 <argp_parse@@Base+0x428>
   12620:	mov	r0, #36	; 0x24
   12624:	ands	r1, r6, #8388608	; 0x800000
   12628:	mul	r0, r0, r3
   1262c:	ldr	ip, [fp, #-112]	; 0xffffff90
   12630:	movne	r1, #-16777216	; 0xff000000
   12634:	bic	r2, r6, #-16777216	; 0xff000000
   12638:	sub	r0, r0, #36	; 0x24
   1263c:	orr	r2, r2, r1
   12640:	ldr	r3, [fp, #-136]	; 0xffffff78
   12644:	mov	r1, r8
   12648:	add	r0, ip, r0
   1264c:	bl	11a24 <putc_unlocked@plt+0x804>
   12650:	cmp	r0, #7
   12654:	mov	r4, r0
   12658:	bne	126ac <argp_parse@@Base+0x750>
   1265c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12660:	b	12674 <argp_parse@@Base+0x718>
   12664:	ldr	r2, [r3]
   12668:	cmp	r2, #0
   1266c:	beq	12680 <argp_parse@@Base+0x724>
   12670:	add	r3, r3, #16
   12674:	ldr	r2, [r3, #12]
   12678:	cmp	r2, r6
   1267c:	bne	12664 <argp_parse@@Base+0x708>
   12680:	ldr	r2, [r3]
   12684:	ldr	r1, [pc, #560]	; 128bc <argp_parse@@Base+0x960>
   12688:	cmp	r2, #0
   1268c:	moveq	r2, r1
   12690:	ldr	r3, [pc, #528]	; 128a8 <argp_parse@@Base+0x94c>
   12694:	ldr	r1, [pc, #548]	; 128c0 <argp_parse@@Base+0x964>
   12698:	b	123c0 <argp_parse@@Base+0x464>
   1269c:	cmp	r4, #7
   126a0:	bne	12734 <argp_parse@@Base+0x7d8>
   126a4:	mov	r6, #1
   126a8:	b	123c8 <argp_parse@@Base+0x46c>
   126ac:	cmp	r4, #0
   126b0:	beq	124f8 <argp_parse@@Base+0x59c>
   126b4:	b	123d8 <argp_parse@@Base+0x47c>
   126b8:	cmp	r4, #7
   126bc:	cmpne	r4, #0
   126c0:	bne	1241c <argp_parse@@Base+0x4c0>
   126c4:	ldr	r3, [r7, #12]
   126c8:	cmp	r3, #0
   126cc:	bne	126e8 <argp_parse@@Base+0x78c>
   126d0:	mov	r3, r9
   126d4:	mov	r2, sl
   126d8:	mov	r1, r8
   126dc:	mov	r0, r7
   126e0:	bl	11a24 <putc_unlocked@plt+0x804>
   126e4:	mov	r4, r0
   126e8:	add	r7, r7, #36	; 0x24
   126ec:	b	12410 <argp_parse@@Base+0x4b4>
   126f0:	mov	r0, r6
   126f4:	mov	r3, r8
   126f8:	mov	r2, r9
   126fc:	mov	r1, r7
   12700:	bl	11a24 <putc_unlocked@plt+0x804>
   12704:	sub	r6, r6, #36	; 0x24
   12708:	mov	r4, r0
   1270c:	b	1242c <argp_parse@@Base+0x4d0>
   12710:	cmp	r4, #7
   12714:	beq	12820 <argp_parse@@Base+0x8c4>
   12718:	ldr	r3, [fp, #4]
   1271c:	cmp	r3, #0
   12720:	bne	12450 <argp_parse@@Base+0x4f4>
   12724:	cmp	r4, #0
   12728:	beq	12830 <argp_parse@@Base+0x8d4>
   1272c:	cmp	r4, #7
   12730:	beq	127b8 <argp_parse@@Base+0x85c>
   12734:	ldr	r6, [fp, #-112]	; 0xffffff90
   12738:	ldr	r9, [pc, #388]	; 128c4 <argp_parse@@Base+0x968>
   1273c:	add	r7, r5, #64	; 0x40
   12740:	mov	r8, #0
   12744:	ldr	r3, [fp, #-108]	; 0xffffff94
   12748:	cmp	r6, r3
   1274c:	bcc	127d0 <argp_parse@@Base+0x874>
   12750:	ldr	r6, [fp, #-108]	; 0xffffff94
   12754:	ldr	r8, [pc, #364]	; 128c8 <argp_parse@@Base+0x96c>
   12758:	sub	r6, r6, #36	; 0x24
   1275c:	add	r5, r5, #64	; 0x40
   12760:	mov	r7, #0
   12764:	ldr	r3, [fp, #-112]	; 0xffffff90
   12768:	cmp	r6, r3
   1276c:	bcs	127f8 <argp_parse@@Base+0x89c>
   12770:	cmp	r4, #7
   12774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12778:	moveq	r4, #22
   1277c:	bl	129f8 <argp_parse@@Base+0xa9c>
   12780:	b	1224c <argp_parse@@Base+0x2f0>
   12784:	ldr	r2, [fp, #4]
   12788:	cmp	r2, #0
   1278c:	strne	r3, [r2]
   12790:	bne	12830 <argp_parse@@Base+0x8d4>
   12794:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12798:	tst	r3, #2
   1279c:	bne	127b8 <argp_parse@@Base+0x85c>
   127a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   127a4:	cmp	r0, #0
   127a8:	beq	127b8 <argp_parse@@Base+0x85c>
   127ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   127b0:	ldr	r1, [pc, #276]	; 128cc <argp_parse@@Base+0x970>
   127b4:	bl	11118 <fprintf@plt>
   127b8:	mov	r2, #260	; 0x104
   127bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   127c0:	add	r0, r5, #64	; 0x40
   127c4:	bl	161fc <argp_state_help@@Base>
   127c8:	mov	r4, #7
   127cc:	b	12734 <argp_parse@@Base+0x7d8>
   127d0:	mov	r0, r6
   127d4:	mov	r3, r8
   127d8:	mov	r2, r9
   127dc:	mov	r1, r7
   127e0:	bl	11a24 <putc_unlocked@plt+0x804>
   127e4:	add	r6, r6, #36	; 0x24
   127e8:	b	12744 <argp_parse@@Base+0x7e8>
   127ec:	cmp	r4, #7
   127f0:	moveq	r4, #0
   127f4:	b	12750 <argp_parse@@Base+0x7f4>
   127f8:	mov	r0, r6
   127fc:	mov	r3, r7
   12800:	mov	r2, r8
   12804:	mov	r1, r5
   12808:	bl	11a24 <putc_unlocked@plt+0x804>
   1280c:	sub	r6, r6, #36	; 0x24
   12810:	b	12764 <argp_parse@@Base+0x808>
   12814:	cmp	r0, #1
   12818:	bne	12360 <argp_parse@@Base+0x404>
   1281c:	b	12480 <argp_parse@@Base+0x524>
   12820:	ldr	r3, [fp, #4]
   12824:	cmp	r3, #0
   12828:	movne	r4, #0
   1282c:	bne	12450 <argp_parse@@Base+0x4f4>
   12830:	ldr	r6, [fp, #-108]	; 0xffffff94
   12834:	mov	r4, #0
   12838:	ldr	r9, [pc, #144]	; 128d0 <argp_parse@@Base+0x974>
   1283c:	sub	r6, r6, #36	; 0x24
   12840:	add	r7, r5, #64	; 0x40
   12844:	mov	r8, r4
   12848:	ldr	r3, [fp, #-112]	; 0xffffff90
   1284c:	cmp	r6, r3
   12850:	bcc	127ec <argp_parse@@Base+0x890>
   12854:	cmp	r4, #7
   12858:	cmpne	r4, #0
   1285c:	bne	12750 <argp_parse@@Base+0x7f4>
   12860:	mov	r0, r6
   12864:	mov	r3, r8
   12868:	mov	r2, r9
   1286c:	mov	r1, r7
   12870:	bl	11a24 <putc_unlocked@plt+0x804>
   12874:	sub	r6, r6, #36	; 0x24
   12878:	mov	r4, r0
   1287c:	b	12848 <argp_parse@@Base+0x8ec>
   12880:	andeq	r9, r2, ip, asr r2
   12884:	andeq	r9, r2, r8, asr r2
   12888:	ldrdeq	r7, [r1], -ip
   1288c:			; <UNDEFINED> instruction: 0x000292b0
   12890:	andeq	r9, r2, r8, ror r2
   12894:	strdeq	r7, [r1], -r8
   12898:	andeq	r9, r2, r0, ror #4
   1289c:	tsteq	r0, r3
   128a0:	andeq	r9, r2, r4, ror #4
   128a4:	tsteq	r0, r6
   128a8:	andeq	r7, r1, r4, lsl fp
   128ac:	andeq	r7, r1, r3, lsr #24
   128b0:	tsteq	r0, r2
   128b4:	tsteq	r0, r1
   128b8:	andeq	r7, r1, r0, lsr #24
   128bc:	andeq	r7, r1, ip, lsl ip
   128c0:	andeq	r7, r1, fp, lsr #24
   128c4:	tsteq	r0, r5
   128c8:	tsteq	r0, r7
   128cc:	andeq	r7, r1, r4, lsr ip
   128d0:	tsteq	r0, r4
   128d4:	cmp	r1, #0
   128d8:	ldrne	r2, [r1, #52]	; 0x34
   128dc:	ldrne	r3, [r2, #48]	; 0x30
   128e0:	ldrne	r2, [r2, #52]	; 0x34
   128e4:	bne	128f4 <argp_parse@@Base+0x998>
   128e8:	mov	r0, #0
   128ec:	bx	lr
   128f0:	add	r3, r3, #36	; 0x24
   128f4:	cmp	r3, r2
   128f8:	bcs	128e8 <argp_parse@@Base+0x98c>
   128fc:	ldr	r1, [r3, #4]
   12900:	cmp	r1, r0
   12904:	bne	128f0 <argp_parse@@Base+0x994>
   12908:	ldr	r0, [r3, #24]
   1290c:	bx	lr
   12910:	push	{r0, r1, r2, lr}
   12914:	ldr	r1, [pc, #28]	; 12938 <argp_parse@@Base+0x9dc>
   12918:	ldr	r2, [pc, #28]	; 1293c <argp_parse@@Base+0x9e0>
   1291c:	ldr	r3, [r1, #4]
   12920:	str	r3, [sp]
   12924:	ldr	r3, [pc, #20]	; 12940 <argp_parse@@Base+0x9e4>
   12928:	ldr	r1, [r1]
   1292c:	bl	12e74 <argp_parse@@Base+0xf18>
   12930:	add	sp, sp, #12
   12934:	pop	{pc}		; (ldr pc, [sp], #4)
   12938:	andeq	r9, r2, ip, ror r2
   1293c:	andeq	r7, r1, r4, lsl #26
   12940:	strdeq	r7, [r1], -r7	; <UNPREDICTABLE>
   12944:	ldr	r3, [pc, #16]	; 1295c <argp_parse@@Base+0xa00>
   12948:	ldr	r2, [pc, #16]	; 12960 <argp_parse@@Base+0xa04>
   1294c:	str	r2, [r3]
   12950:	ldr	r3, [pc, #12]	; 12964 <argp_parse@@Base+0xa08>
   12954:	stm	r3, {r0, r1}
   12958:	bx	lr
   1295c:	andeq	r9, r2, r8, ror r2
   12960:	andeq	r2, r1, r0, lsl r9
   12964:	andeq	r9, r2, ip, ror r2
   12968:	mov	r2, r0
   1296c:	push	{r4, lr}
   12970:	mov	r0, r2
   12974:	ldrb	r3, [r2]
   12978:	add	r1, r2, #1
   1297c:	cmp	r3, #47	; 0x2f
   12980:	beq	129a4 <argp_parse@@Base+0xa48>
   12984:	mov	r3, #0
   12988:	mov	lr, #1
   1298c:	mov	r4, r3
   12990:	mov	ip, r2
   12994:	ldrb	r1, [r2], #1
   12998:	cmp	r1, #0
   1299c:	bne	129ac <argp_parse@@Base+0xa50>
   129a0:	pop	{r4, pc}
   129a4:	mov	r2, r1
   129a8:	b	12970 <argp_parse@@Base+0xa14>
   129ac:	cmp	r1, #47	; 0x2f
   129b0:	moveq	r3, lr
   129b4:	beq	12990 <argp_parse@@Base+0xa34>
   129b8:	cmp	r3, #0
   129bc:	movne	r0, ip
   129c0:	movne	r3, r4
   129c4:	b	12990 <argp_parse@@Base+0xa34>
   129c8:	push	{r4, lr}
   129cc:	mov	r4, r0
   129d0:	bl	11100 <strlen@plt>
   129d4:	cmp	r0, #1
   129d8:	popls	{r4, pc}
   129dc:	sub	r3, r0, #1
   129e0:	ldrb	r2, [r4, r3]
   129e4:	cmp	r2, #47	; 0x2f
   129e8:	beq	129f0 <argp_parse@@Base+0xa94>
   129ec:	pop	{r4, pc}
   129f0:	mov	r0, r3
   129f4:	b	129d4 <argp_parse@@Base+0xa78>
   129f8:	push	{r0, r1, r2, r4, r5, lr}
   129fc:	mov	r5, r0
   12a00:	bl	11124 <__errno_location@plt>
   12a04:	ldr	r3, [r0]
   12a08:	mov	r4, r0
   12a0c:	str	r3, [sp]
   12a10:	str	r3, [sp, #4]
   12a14:	mov	r3, #0
   12a18:	str	r3, [r0]
   12a1c:	mov	r0, r5
   12a20:	bl	10fbc <free@plt>
   12a24:	ldr	r3, [r4]
   12a28:	add	r2, sp, #8
   12a2c:	cmp	r3, #0
   12a30:	moveq	r3, #4
   12a34:	movne	r3, #0
   12a38:	add	r3, r2, r3
   12a3c:	ldr	r3, [r3, #-8]
   12a40:	str	r3, [r4]
   12a44:	add	sp, sp, #12
   12a48:	pop	{r4, r5, pc}
   12a4c:	push	{r0, r1, r2, r3, r4, lr}
   12a50:	mov	ip, #0
   12a54:	str	ip, [sp, #8]
   12a58:	str	ip, [sp, #4]
   12a5c:	ldr	ip, [sp, #24]
   12a60:	str	ip, [sp]
   12a64:	bl	16d80 <argp_error@@Base+0xae4>
   12a68:	add	sp, sp, #20
   12a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a70:	push	{r0, r1, r2, r3, r4, lr}
   12a74:	mov	ip, #0
   12a78:	ldr	lr, [sp, #28]
   12a7c:	str	ip, [sp, #12]
   12a80:	stmib	sp, {ip, lr}
   12a84:	ldr	ip, [sp, #24]
   12a88:	str	ip, [sp]
   12a8c:	bl	16888 <argp_error@@Base+0x5ec>
   12a90:	add	sp, sp, #20
   12a94:	pop	{pc}		; (ldr pc, [sp], #4)
   12a98:	push	{r0, r1, r2, r3, r4, lr}
   12a9c:	mov	ip, #1
   12aa0:	mov	lr, #0
   12aa4:	stmib	sp, {ip, lr}
   12aa8:	ldr	ip, [sp, #24]
   12aac:	str	ip, [sp]
   12ab0:	bl	16d80 <argp_error@@Base+0xae4>
   12ab4:	add	sp, sp, #20
   12ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   12abc:	push	{r0, r1, r2, r3, r4, lr}
   12ac0:	mov	ip, #0
   12ac4:	str	ip, [sp, #12]
   12ac8:	ldr	ip, [sp, #28]
   12acc:	str	ip, [sp, #8]
   12ad0:	mov	ip, #1
   12ad4:	str	ip, [sp, #4]
   12ad8:	ldr	ip, [sp, #24]
   12adc:	str	ip, [sp]
   12ae0:	bl	16888 <argp_error@@Base+0x5ec>
   12ae4:	add	sp, sp, #20
   12ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   12aec:	push	{r4, r5, r6, lr}
   12af0:	subs	r5, r0, #0
   12af4:	bne	12b0c <argp_parse@@Base+0xbb0>
   12af8:	ldr	r3, [pc, #124]	; 12b7c <argp_parse@@Base+0xc20>
   12afc:	ldr	r0, [pc, #124]	; 12b80 <argp_parse@@Base+0xc24>
   12b00:	ldr	r1, [r3]
   12b04:	bl	111f0 <fputs@plt>
   12b08:	bl	11208 <abort@plt>
   12b0c:	mov	r1, #47	; 0x2f
   12b10:	bl	11160 <strrchr@plt>
   12b14:	cmp	r0, #0
   12b18:	addne	r4, r0, #1
   12b1c:	moveq	r4, r5
   12b20:	sub	r3, r4, r5
   12b24:	cmp	r3, #6
   12b28:	ble	12b68 <argp_parse@@Base+0xc0c>
   12b2c:	mov	r2, #7
   12b30:	ldr	r1, [pc, #76]	; 12b84 <argp_parse@@Base+0xc28>
   12b34:	sub	r0, r4, #7
   12b38:	bl	111fc <strncmp@plt>
   12b3c:	cmp	r0, #0
   12b40:	bne	12b68 <argp_parse@@Base+0xc0c>
   12b44:	mov	r2, #3
   12b48:	ldr	r1, [pc, #56]	; 12b88 <argp_parse@@Base+0xc2c>
   12b4c:	mov	r0, r4
   12b50:	bl	111fc <strncmp@plt>
   12b54:	cmp	r0, #0
   12b58:	movne	r5, r4
   12b5c:	ldreq	r3, [pc, #40]	; 12b8c <argp_parse@@Base+0xc30>
   12b60:	addeq	r5, r4, #3
   12b64:	streq	r5, [r3]
   12b68:	ldr	r3, [pc, #32]	; 12b90 <argp_parse@@Base+0xc34>
   12b6c:	str	r5, [r3]
   12b70:	ldr	r3, [pc, #28]	; 12b94 <argp_parse@@Base+0xc38>
   12b74:	str	r5, [r3]
   12b78:	pop	{r4, r5, r6, pc}
   12b7c:	andeq	r9, r2, r0, ror #4
   12b80:	andeq	r7, r1, r2, lsl sp
   12b84:	andeq	r7, r1, sl, asr #26
   12b88:	andeq	r7, r1, r2, asr sp
   12b8c:	andeq	r9, r2, r8, asr r2
   12b90:	andeq	r9, r2, r4, lsl #5
   12b94:	andeq	r9, r2, ip, asr r2
   12b98:	push	{r4, r5, r6, lr}
   12b9c:	sub	sp, sp, #32
   12ba0:	cmp	r1, #0
   12ba4:	mov	r5, r0
   12ba8:	ldr	r4, [sp, #48]	; 0x30
   12bac:	ldr	r6, [sp, #52]	; 0x34
   12bb0:	beq	12c38 <argp_parse@@Base+0xcdc>
   12bb4:	str	r3, [sp]
   12bb8:	mov	r3, r2
   12bbc:	mov	r2, r1
   12bc0:	ldr	r1, [pc, #616]	; 12e30 <argp_parse@@Base+0xed4>
   12bc4:	bl	11118 <fprintf@plt>
   12bc8:	ldr	r3, [pc, #612]	; 12e34 <argp_parse@@Base+0xed8>
   12bcc:	ldr	r2, [pc, #612]	; 12e38 <argp_parse@@Base+0xedc>
   12bd0:	ldr	r1, [pc, #612]	; 12e3c <argp_parse@@Base+0xee0>
   12bd4:	mov	r0, r5
   12bd8:	bl	11118 <fprintf@plt>
   12bdc:	mov	r1, r5
   12be0:	mov	r0, #10
   12be4:	bl	11178 <fputc@plt>
   12be8:	ldr	r1, [pc, #592]	; 12e40 <argp_parse@@Base+0xee4>
   12bec:	ldr	r2, [pc, #592]	; 12e44 <argp_parse@@Base+0xee8>
   12bf0:	mov	r0, r5
   12bf4:	bl	11118 <fprintf@plt>
   12bf8:	mov	r1, r5
   12bfc:	mov	r0, #10
   12c00:	bl	11178 <fputc@plt>
   12c04:	cmp	r6, #9
   12c08:	ldrls	pc, [pc, r6, lsl #2]
   12c0c:	b	12dec <argp_parse@@Base+0xe90>
   12c10:	andeq	r2, r1, r4, ror #25
   12c14:	andeq	r2, r1, r4, asr #24
   12c18:	andeq	r2, r1, ip, asr ip
   12c1c:	andeq	r2, r1, r4, ror ip
   12c20:	muleq	r1, r4, ip
   12c24:			; <UNDEFINED> instruction: 0x00012cbc
   12c28:	andeq	r2, r1, ip, ror #25
   12c2c:	andeq	r2, r1, r0, lsr #26
   12c30:	andeq	r2, r1, ip, asr sp
   12c34:	andeq	r2, r1, r0, lsr #27
   12c38:	ldr	r1, [pc, #520]	; 12e48 <argp_parse@@Base+0xeec>
   12c3c:	bl	11118 <fprintf@plt>
   12c40:	b	12bc8 <argp_parse@@Base+0xc6c>
   12c44:	ldr	r2, [r4]
   12c48:	ldr	r1, [pc, #508]	; 12e4c <argp_parse@@Base+0xef0>
   12c4c:	mov	r0, r5
   12c50:	add	sp, sp, #32
   12c54:	pop	{r4, r5, r6, lr}
   12c58:	b	11118 <fprintf@plt>
   12c5c:	ldm	r4, {r2, r3}
   12c60:	ldr	r1, [pc, #488]	; 12e50 <argp_parse@@Base+0xef4>
   12c64:	mov	r0, r5
   12c68:	add	sp, sp, #32
   12c6c:	pop	{r4, r5, r6, lr}
   12c70:	b	11118 <fprintf@plt>
   12c74:	ldr	r3, [r4, #8]
   12c78:	ldr	r1, [pc, #468]	; 12e54 <argp_parse@@Base+0xef8>
   12c7c:	str	r3, [sp, #48]	; 0x30
   12c80:	mov	r0, r5
   12c84:	ldm	r4, {r2, r3}
   12c88:	add	sp, sp, #32
   12c8c:	pop	{r4, r5, r6, lr}
   12c90:	b	11118 <fprintf@plt>
   12c94:	ldr	r3, [r4, #12]
   12c98:	ldr	r1, [pc, #440]	; 12e58 <argp_parse@@Base+0xefc>
   12c9c:	str	r3, [sp, #52]	; 0x34
   12ca0:	ldr	r3, [r4, #8]
   12ca4:	mov	r0, r5
   12ca8:	str	r3, [sp, #48]	; 0x30
   12cac:	ldm	r4, {r2, r3}
   12cb0:	add	sp, sp, #32
   12cb4:	pop	{r4, r5, r6, lr}
   12cb8:	b	11118 <fprintf@plt>
   12cbc:	ldr	r3, [r4, #16]
   12cc0:	ldr	r1, [pc, #404]	; 12e5c <argp_parse@@Base+0xf00>
   12cc4:	str	r3, [sp, #8]
   12cc8:	ldr	r3, [r4, #12]
   12ccc:	mov	r0, r5
   12cd0:	str	r3, [sp, #4]
   12cd4:	ldr	r3, [r4, #8]
   12cd8:	str	r3, [sp]
   12cdc:	ldm	r4, {r2, r3}
   12ce0:	bl	11118 <fprintf@plt>
   12ce4:	add	sp, sp, #32
   12ce8:	pop	{r4, r5, r6, pc}
   12cec:	ldr	r3, [r4, #20]
   12cf0:	ldr	r1, [pc, #360]	; 12e60 <argp_parse@@Base+0xf04>
   12cf4:	str	r3, [sp, #12]
   12cf8:	ldr	r3, [r4, #16]
   12cfc:	mov	r0, r5
   12d00:	str	r3, [sp, #8]
   12d04:	ldr	r3, [r4, #12]
   12d08:	str	r3, [sp, #4]
   12d0c:	ldr	r3, [r4, #8]
   12d10:	str	r3, [sp]
   12d14:	ldm	r4, {r2, r3}
   12d18:	bl	11118 <fprintf@plt>
   12d1c:	b	12ce4 <argp_parse@@Base+0xd88>
   12d20:	ldr	r3, [r4, #24]
   12d24:	ldr	r1, [pc, #312]	; 12e64 <argp_parse@@Base+0xf08>
   12d28:	str	r3, [sp, #16]
   12d2c:	ldr	r3, [r4, #20]
   12d30:	mov	r0, r5
   12d34:	str	r3, [sp, #12]
   12d38:	ldr	r3, [r4, #16]
   12d3c:	str	r3, [sp, #8]
   12d40:	ldr	r3, [r4, #12]
   12d44:	str	r3, [sp, #4]
   12d48:	ldr	r3, [r4, #8]
   12d4c:	str	r3, [sp]
   12d50:	ldm	r4, {r2, r3}
   12d54:	bl	11118 <fprintf@plt>
   12d58:	b	12ce4 <argp_parse@@Base+0xd88>
   12d5c:	ldr	r3, [r4, #28]
   12d60:	ldr	r1, [pc, #256]	; 12e68 <argp_parse@@Base+0xf0c>
   12d64:	str	r3, [sp, #20]
   12d68:	ldr	r3, [r4, #24]
   12d6c:	mov	r0, r5
   12d70:	str	r3, [sp, #16]
   12d74:	ldr	r3, [r4, #20]
   12d78:	str	r3, [sp, #12]
   12d7c:	ldr	r3, [r4, #16]
   12d80:	str	r3, [sp, #8]
   12d84:	ldr	r3, [r4, #12]
   12d88:	str	r3, [sp, #4]
   12d8c:	ldr	r3, [r4, #8]
   12d90:	str	r3, [sp]
   12d94:	ldm	r4, {r2, r3}
   12d98:	bl	11118 <fprintf@plt>
   12d9c:	b	12ce4 <argp_parse@@Base+0xd88>
   12da0:	ldr	r3, [r4, #32]
   12da4:	ldr	r1, [pc, #192]	; 12e6c <argp_parse@@Base+0xf10>
   12da8:	str	r3, [sp, #24]
   12dac:	ldr	r3, [r4, #28]
   12db0:	str	r3, [sp, #20]
   12db4:	ldr	r3, [r4, #24]
   12db8:	str	r3, [sp, #16]
   12dbc:	ldr	r3, [r4, #20]
   12dc0:	str	r3, [sp, #12]
   12dc4:	ldr	r3, [r4, #16]
   12dc8:	str	r3, [sp, #8]
   12dcc:	ldr	r3, [r4, #12]
   12dd0:	str	r3, [sp, #4]
   12dd4:	ldr	r3, [r4, #8]
   12dd8:	str	r3, [sp]
   12ddc:	ldm	r4, {r2, r3}
   12de0:	mov	r0, r5
   12de4:	bl	11118 <fprintf@plt>
   12de8:	b	12ce4 <argp_parse@@Base+0xd88>
   12dec:	ldr	r3, [r4, #32]
   12df0:	ldr	r1, [pc, #120]	; 12e70 <argp_parse@@Base+0xf14>
   12df4:	str	r3, [sp, #24]
   12df8:	ldr	r3, [r4, #28]
   12dfc:	str	r3, [sp, #20]
   12e00:	ldr	r3, [r4, #24]
   12e04:	str	r3, [sp, #16]
   12e08:	ldr	r3, [r4, #20]
   12e0c:	str	r3, [sp, #12]
   12e10:	ldr	r3, [r4, #16]
   12e14:	str	r3, [sp, #8]
   12e18:	ldr	r3, [r4, #12]
   12e1c:	str	r3, [sp, #4]
   12e20:	ldr	r3, [r4, #8]
   12e24:	str	r3, [sp]
   12e28:	ldm	r4, {r2, r3}
   12e2c:	b	12de0 <argp_parse@@Base+0xe84>
   12e30:	andeq	r7, r1, r6, asr sp
   12e34:	andeq	r0, r0, r6, ror #15
   12e38:	andeq	r7, r1, r9, ror #26
   12e3c:	andeq	r8, r1, lr, asr r0
   12e40:	andeq	r7, r1, pc, lsl #27
   12e44:	andeq	r7, r1, sp, ror #26
   12e48:	andeq	r7, r1, r2, ror #26
   12e4c:	andeq	r7, r1, sl, lsr lr
   12e50:	andeq	r7, r1, sl, asr #28
   12e54:	andeq	r7, r1, r1, ror #28
   12e58:	andeq	r7, r1, sp, ror lr
   12e5c:	muleq	r1, sp, lr
   12e60:	andeq	r7, r1, r1, asr #29
   12e64:	andeq	r7, r1, r9, ror #29
   12e68:	andeq	r7, r1, r5, lsl pc
   12e6c:	andeq	r7, r1, r5, asr #30
   12e70:	andeq	r7, r1, r9, ror pc
   12e74:	push	{r0, r1, r4, lr}
   12e78:	mov	ip, #0
   12e7c:	ldr	lr, [sp, #16]
   12e80:	ldr	r4, [lr, ip, lsl #2]
   12e84:	cmp	r4, #0
   12e88:	bne	12ea0 <argp_parse@@Base+0xf44>
   12e8c:	str	ip, [sp, #4]
   12e90:	str	lr, [sp]
   12e94:	bl	12b98 <argp_parse@@Base+0xc3c>
   12e98:	add	sp, sp, #8
   12e9c:	pop	{r4, pc}
   12ea0:	add	ip, ip, #1
   12ea4:	b	12e80 <argp_parse@@Base+0xf24>
   12ea8:	push	{r4, r5, lr}
   12eac:	sub	sp, sp, #52	; 0x34
   12eb0:	mov	ip, #0
   12eb4:	ldr	r5, [sp, #64]	; 0x40
   12eb8:	add	lr, sp, #8
   12ebc:	ldr	r4, [r5, ip, lsl #2]
   12ec0:	cmp	r4, #0
   12ec4:	str	r4, [lr, ip, lsl #2]
   12ec8:	beq	12ed8 <argp_parse@@Base+0xf7c>
   12ecc:	add	ip, ip, #1
   12ed0:	cmp	ip, #10
   12ed4:	bne	12ebc <argp_parse@@Base+0xf60>
   12ed8:	str	ip, [sp, #4]
   12edc:	str	lr, [sp]
   12ee0:	bl	12b98 <argp_parse@@Base+0xc3c>
   12ee4:	add	sp, sp, #52	; 0x34
   12ee8:	pop	{r4, r5, pc}
   12eec:	push	{r3}		; (str r3, [sp, #-4]!)
   12ef0:	push	{r0, r1, r2, r3, lr}
   12ef4:	add	r3, sp, #24
   12ef8:	str	r3, [sp, #12]
   12efc:	str	r3, [sp]
   12f00:	ldr	r3, [sp, #20]
   12f04:	bl	12ea8 <argp_parse@@Base+0xf4c>
   12f08:	add	sp, sp, #16
   12f0c:	pop	{lr}		; (ldr lr, [sp], #4)
   12f10:	add	sp, sp, #4
   12f14:	bx	lr
   12f18:	ldr	r3, [pc, #56]	; 12f58 <argp_parse@@Base+0xffc>
   12f1c:	push	{r4, lr}
   12f20:	mov	r0, #10
   12f24:	ldr	r1, [r3]
   12f28:	bl	11178 <fputc@plt>
   12f2c:	ldr	r1, [pc, #40]	; 12f5c <argp_parse@@Base+0x1000>
   12f30:	ldr	r0, [pc, #40]	; 12f60 <argp_parse@@Base+0x1004>
   12f34:	bl	10f8c <printf@plt>
   12f38:	ldr	r1, [pc, #36]	; 12f64 <argp_parse@@Base+0x1008>
   12f3c:	ldr	r2, [pc, #36]	; 12f68 <argp_parse@@Base+0x100c>
   12f40:	ldr	r0, [pc, #36]	; 12f6c <argp_parse@@Base+0x1010>
   12f44:	bl	10f8c <printf@plt>
   12f48:	ldr	r1, [pc, #32]	; 12f70 <argp_parse@@Base+0x1014>
   12f4c:	ldr	r0, [pc, #32]	; 12f74 <argp_parse@@Base+0x1018>
   12f50:	pop	{r4, lr}
   12f54:	b	10f8c <printf@plt>
   12f58:	andeq	r9, r2, r4, ror #4
   12f5c:			; <UNDEFINED> instruction: 0x00017fb5
   12f60:	andeq	r7, r1, fp, asr #31
   12f64:	andeq	r7, r1, r4, lsl #26
   12f68:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   12f6c:	andeq	r8, r1, r6
   12f70:	andeq	r8, r1, sl, lsl r0
   12f74:	andeq	r8, r1, r7, lsr r0
   12f78:	push	{r4, lr}
   12f7c:	bl	13640 <argp_parse@@Base+0x16e4>
   12f80:	cmp	r0, #0
   12f84:	popne	{r4, pc}
   12f88:	bl	1340c <argp_parse@@Base+0x14b0>
   12f8c:	push	{r4, lr}
   12f90:	bl	13640 <argp_parse@@Base+0x16e4>
   12f94:	cmp	r0, #0
   12f98:	popne	{r4, pc}
   12f9c:	bl	1340c <argp_parse@@Base+0x14b0>
   12fa0:	b	12f78 <argp_parse@@Base+0x101c>
   12fa4:	push	{r4, r5, r6, lr}
   12fa8:	mov	r5, r0
   12fac:	mov	r4, r1
   12fb0:	bl	13680 <argp_parse@@Base+0x1724>
   12fb4:	cmp	r0, #0
   12fb8:	popne	{r4, r5, r6, pc}
   12fbc:	adds	r4, r4, #0
   12fc0:	movne	r4, #1
   12fc4:	cmp	r5, #0
   12fc8:	orreq	r4, r4, #1
   12fcc:	cmp	r4, #0
   12fd0:	popeq	{r4, r5, r6, pc}
   12fd4:	bl	1340c <argp_parse@@Base+0x14b0>
   12fd8:	push	{r4, lr}
   12fdc:	cmp	r1, #0
   12fe0:	orreq	r1, r1, #1
   12fe4:	bl	13680 <argp_parse@@Base+0x1724>
   12fe8:	cmp	r0, #0
   12fec:	popne	{r4, pc}
   12ff0:	bl	1340c <argp_parse@@Base+0x14b0>
   12ff4:	push	{r4, r5, r6, lr}
   12ff8:	mov	r6, r0
   12ffc:	mov	r5, r1
   13000:	mov	r4, r2
   13004:	bl	16e14 <argp_error@@Base+0xb78>
   13008:	cmp	r0, #0
   1300c:	popne	{r4, r5, r6, pc}
   13010:	cmp	r6, #0
   13014:	beq	13024 <argp_parse@@Base+0x10c8>
   13018:	cmp	r5, #0
   1301c:	cmpne	r4, #0
   13020:	popeq	{r4, r5, r6, pc}
   13024:	bl	1340c <argp_parse@@Base+0x14b0>
   13028:	b	12ff4 <argp_parse@@Base+0x1098>
   1302c:	cmp	r2, #0
   13030:	cmpne	r1, #0
   13034:	moveq	r2, #1
   13038:	moveq	r1, r2
   1303c:	push	{r4, lr}
   13040:	bl	16e14 <argp_error@@Base+0xb78>
   13044:	cmp	r0, #0
   13048:	popne	{r4, pc}
   1304c:	bl	1340c <argp_parse@@Base+0x14b0>
   13050:	mov	r2, r1
   13054:	mov	r1, r0
   13058:	mov	r0, #0
   1305c:	b	12ff4 <argp_parse@@Base+0x1098>
   13060:	mov	r2, r1
   13064:	mov	r1, r0
   13068:	mov	r0, #0
   1306c:	b	1302c <argp_parse@@Base+0x10d0>
   13070:	push	{r4, r5, r6, r7, r8, lr}
   13074:	subs	r7, r0, #0
   13078:	mov	r5, r1
   1307c:	mov	r6, r2
   13080:	ldr	r4, [r1]
   13084:	bne	130c0 <argp_parse@@Base+0x1164>
   13088:	cmp	r4, #0
   1308c:	bne	130a8 <argp_parse@@Base+0x114c>
   13090:	mov	r1, r2
   13094:	mov	r0, #64	; 0x40
   13098:	bl	17480 <argp_error@@Base+0x11e4>
   1309c:	cmp	r0, #0
   130a0:	movne	r4, r0
   130a4:	addeq	r4, r0, #1
   130a8:	mov	r2, r6
   130ac:	mov	r1, r4
   130b0:	mov	r0, r7
   130b4:	bl	12ff4 <argp_parse@@Base+0x1098>
   130b8:	str	r4, [r5]
   130bc:	pop	{r4, r5, r6, r7, r8, pc}
   130c0:	lsr	r2, r4, #1
   130c4:	add	r3, r2, #1
   130c8:	mvn	r3, r3
   130cc:	cmp	r4, r3
   130d0:	addls	r4, r4, #1
   130d4:	addls	r4, r4, r2
   130d8:	bls	130a8 <argp_parse@@Base+0x114c>
   130dc:	bl	1340c <argp_parse@@Base+0x14b0>
   130e0:	mov	r2, #1
   130e4:	b	13070 <argp_parse@@Base+0x1114>
   130e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130ec:	mov	sl, r0
   130f0:	ldr	r8, [r1]
   130f4:	mov	fp, r1
   130f8:	mov	r5, r2
   130fc:	asrs	r4, r8, #1
   13100:	mov	r9, r3
   13104:	ldr	r7, [sp, #48]	; 0x30
   13108:	bpl	131a4 <argp_parse@@Base+0x1248>
   1310c:	rsb	r2, r4, #-2147483648	; 0x80000000
   13110:	cmp	r8, r2
   13114:	movge	r2, #0
   13118:	movlt	r2, #1
   1311c:	mvn	r3, r9
   13120:	cmp	r2, #0
   13124:	lsr	r3, r3, #31
   13128:	addeq	r4, r4, r8
   1312c:	mvnne	r4, #-2147483648	; 0x80000000
   13130:	mov	r0, r3
   13134:	cmp	r9, r4
   13138:	movge	r0, #0
   1313c:	andlt	r0, r0, #1
   13140:	cmp	r0, #0
   13144:	str	r3, [sp, #4]
   13148:	bne	13318 <argp_parse@@Base+0x13bc>
   1314c:	cmp	r7, #0
   13150:	bge	13264 <argp_parse@@Base+0x1308>
   13154:	cmp	r4, #0
   13158:	bge	131bc <argp_parse@@Base+0x1260>
   1315c:	mov	r1, r7
   13160:	mvn	r0, #-2147483648	; 0x80000000
   13164:	bl	1768c <argp_error@@Base+0x13f0>
   13168:	cmp	r0, r4
   1316c:	movle	r0, #0
   13170:	movgt	r0, #1
   13174:	cmp	r0, #0
   13178:	mvnne	r6, #-2147483648	; 0x80000000
   1317c:	beq	131cc <argp_parse@@Base+0x1270>
   13180:	mov	r1, r7
   13184:	mov	r0, r6
   13188:	bl	1768c <argp_error@@Base+0x13f0>
   1318c:	mov	r1, r7
   13190:	mov	r4, r0
   13194:	mov	r0, r6
   13198:	bl	178ac <argp_error@@Base+0x1610>
   1319c:	sub	r1, r6, r1
   131a0:	b	131dc <argp_parse@@Base+0x1280>
   131a4:	mvn	r2, #-2147483648	; 0x80000000
   131a8:	sub	r2, r2, r4
   131ac:	cmp	r8, r2
   131b0:	movle	r2, #0
   131b4:	movgt	r2, #1
   131b8:	b	1311c <argp_parse@@Base+0x11c0>
   131bc:	cmn	r7, #1
   131c0:	movne	r1, r7
   131c4:	movne	r0, #-2147483648	; 0x80000000
   131c8:	bne	13330 <argp_parse@@Base+0x13d4>
   131cc:	mul	r1, r7, r4
   131d0:	cmp	r1, #63	; 0x3f
   131d4:	movle	r6, #64	; 0x40
   131d8:	ble	13180 <argp_parse@@Base+0x1224>
   131dc:	cmp	sl, #0
   131e0:	sub	r2, r4, r8
   131e4:	streq	sl, [fp]
   131e8:	cmp	r2, r5
   131ec:	bge	132c0 <argp_parse@@Base+0x1364>
   131f0:	cmp	r5, #0
   131f4:	bge	1328c <argp_parse@@Base+0x1330>
   131f8:	rsb	r2, r5, #-2147483648	; 0x80000000
   131fc:	cmp	r8, r2
   13200:	movge	r2, #0
   13204:	movlt	r2, #1
   13208:	cmp	r2, #0
   1320c:	bne	13260 <argp_parse@@Base+0x1304>
   13210:	ldr	r0, [sp, #4]
   13214:	add	r5, r8, r5
   13218:	cmp	r9, r5
   1321c:	movge	r0, #0
   13220:	andlt	r0, r0, #1
   13224:	cmp	r0, #0
   13228:	mov	r4, r5
   1322c:	bne	13260 <argp_parse@@Base+0x1304>
   13230:	cmp	r7, #0
   13234:	bge	132d4 <argp_parse@@Base+0x1378>
   13238:	cmp	r5, #0
   1323c:	bge	132ac <argp_parse@@Base+0x1350>
   13240:	mov	r1, r7
   13244:	mvn	r0, #-2147483648	; 0x80000000
   13248:	bl	1768c <argp_error@@Base+0x13f0>
   1324c:	cmp	r5, r0
   13250:	movge	r0, #0
   13254:	movlt	r0, #1
   13258:	cmp	r0, #0
   1325c:	beq	132bc <argp_parse@@Base+0x1360>
   13260:	bl	1340c <argp_parse@@Base+0x14b0>
   13264:	beq	131cc <argp_parse@@Base+0x1270>
   13268:	cmp	r4, #0
   1326c:	bge	13328 <argp_parse@@Base+0x13cc>
   13270:	cmn	r4, #1
   13274:	beq	131cc <argp_parse@@Base+0x1270>
   13278:	mov	r1, r4
   1327c:	mov	r0, #-2147483648	; 0x80000000
   13280:	bl	1768c <argp_error@@Base+0x13f0>
   13284:	cmp	r7, r0
   13288:	b	1316c <argp_parse@@Base+0x1210>
   1328c:	cmp	r8, #0
   13290:	blt	13210 <argp_parse@@Base+0x12b4>
   13294:	mvn	r2, #-2147483648	; 0x80000000
   13298:	sub	r2, r2, r5
   1329c:	cmp	r8, r2
   132a0:	movle	r2, #0
   132a4:	movgt	r2, #1
   132a8:	b	13208 <argp_parse@@Base+0x12ac>
   132ac:	cmn	r7, #1
   132b0:	movne	r1, r7
   132b4:	movne	r0, #-2147483648	; 0x80000000
   132b8:	bne	1330c <argp_parse@@Base+0x13b0>
   132bc:	mul	r1, r5, r7
   132c0:	mov	r0, sl
   132c4:	bl	12fa4 <argp_parse@@Base+0x1048>
   132c8:	str	r4, [fp]
   132cc:	add	sp, sp, #12
   132d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132d4:	beq	132bc <argp_parse@@Base+0x1360>
   132d8:	cmp	r5, #0
   132dc:	movge	r1, r7
   132e0:	mvnge	r0, #-2147483648	; 0x80000000
   132e4:	bge	1330c <argp_parse@@Base+0x13b0>
   132e8:	cmn	r5, #1
   132ec:	beq	132bc <argp_parse@@Base+0x1360>
   132f0:	mov	r1, r5
   132f4:	mov	r0, #-2147483648	; 0x80000000
   132f8:	bl	1768c <argp_error@@Base+0x13f0>
   132fc:	cmp	r7, r0
   13300:	movle	r0, #0
   13304:	movgt	r0, #1
   13308:	b	13258 <argp_parse@@Base+0x12fc>
   1330c:	bl	1768c <argp_error@@Base+0x13f0>
   13310:	cmp	r5, r0
   13314:	b	13300 <argp_parse@@Base+0x13a4>
   13318:	cmp	r7, #0
   1331c:	mov	r4, r9
   13320:	blt	131bc <argp_parse@@Base+0x1260>
   13324:	beq	131cc <argp_parse@@Base+0x1270>
   13328:	mov	r1, r7
   1332c:	mvn	r0, #-2147483648	; 0x80000000
   13330:	bl	1768c <argp_error@@Base+0x13f0>
   13334:	cmp	r0, r4
   13338:	movge	r0, #0
   1333c:	movlt	r0, #1
   13340:	b	13174 <argp_parse@@Base+0x1218>
   13344:	push	{r4, lr}
   13348:	bl	135f8 <argp_parse@@Base+0x169c>
   1334c:	cmp	r0, #0
   13350:	popne	{r4, pc}
   13354:	bl	1340c <argp_parse@@Base+0x14b0>
   13358:	mov	r1, #1
   1335c:	b	13344 <argp_parse@@Base+0x13e8>
   13360:	push	{r4, lr}
   13364:	bl	135f8 <argp_parse@@Base+0x169c>
   13368:	cmp	r0, #0
   1336c:	popne	{r4, pc}
   13370:	bl	1340c <argp_parse@@Base+0x14b0>
   13374:	mov	r1, #1
   13378:	b	13360 <argp_parse@@Base+0x1404>
   1337c:	push	{r4, r5, r6, lr}
   13380:	mov	r4, r1
   13384:	mov	r5, r0
   13388:	mov	r0, r1
   1338c:	bl	12f78 <argp_parse@@Base+0x101c>
   13390:	mov	r2, r4
   13394:	mov	r1, r5
   13398:	pop	{r4, r5, r6, lr}
   1339c:	b	10fd4 <memcpy@plt>
   133a0:	push	{r4, r5, r6, lr}
   133a4:	mov	r4, r1
   133a8:	mov	r5, r0
   133ac:	mov	r0, r1
   133b0:	bl	12f8c <argp_parse@@Base+0x1030>
   133b4:	mov	r2, r4
   133b8:	mov	r1, r5
   133bc:	pop	{r4, r5, r6, lr}
   133c0:	b	10fd4 <memcpy@plt>
   133c4:	push	{r4, r5, r6, lr}
   133c8:	mov	r5, r0
   133cc:	add	r0, r1, #1
   133d0:	mov	r4, r1
   133d4:	bl	12f8c <argp_parse@@Base+0x1030>
   133d8:	mov	r2, #0
   133dc:	mov	r1, r5
   133e0:	strb	r2, [r0, r4]
   133e4:	mov	r2, r4
   133e8:	pop	{r4, r5, r6, lr}
   133ec:	b	10fd4 <memcpy@plt>
   133f0:	push	{r4, lr}
   133f4:	mov	r4, r0
   133f8:	bl	11100 <strlen@plt>
   133fc:	add	r1, r0, #1
   13400:	mov	r0, r4
   13404:	pop	{r4, lr}
   13408:	b	1337c <argp_parse@@Base+0x1420>
   1340c:	ldr	r3, [pc, #24]	; 1342c <argp_parse@@Base+0x14d0>
   13410:	push	{r4, lr}
   13414:	mov	r1, #0
   13418:	ldr	r0, [r3]
   1341c:	ldr	r2, [pc, #12]	; 13430 <argp_parse@@Base+0x14d4>
   13420:	ldr	r3, [pc, #12]	; 13434 <argp_parse@@Base+0x14d8>
   13424:	bl	1104c <error@plt>
   13428:	bl	11208 <abort@plt>
   1342c:	andeq	r9, r2, r4, asr #4
   13430:	andeq	r8, r1, r7, lsr #5
   13434:	andeq	r8, r1, sp, lsl #1
   13438:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1343c:	sub	sp, sp, #112	; 0x70
   13440:	mov	r3, #100	; 0x64
   13444:	str	r3, [sp, #8]
   13448:	bl	11124 <__errno_location@plt>
   1344c:	mov	r4, #0
   13450:	ldr	r9, [pc, #188]	; 13514 <argp_parse@@Base+0x15b8>
   13454:	add	r5, sp, #12
   13458:	mov	r7, r4
   1345c:	mov	r8, r0
   13460:	ldr	r6, [sp, #8]
   13464:	mov	r0, r5
   13468:	sub	r6, r6, #1
   1346c:	mov	r1, r6
   13470:	strb	r7, [r5, r6]
   13474:	str	r7, [r8]
   13478:	bl	10ff8 <getdomainname@plt>
   1347c:	subs	sl, r0, #0
   13480:	bne	134bc <argp_parse@@Base+0x1560>
   13484:	mov	r0, r5
   13488:	bl	11100 <strlen@plt>
   1348c:	add	r1, r0, #1
   13490:	cmp	r6, r1
   13494:	ble	134b8 <argp_parse@@Base+0x155c>
   13498:	cmp	r4, #0
   1349c:	bne	134ac <argp_parse@@Base+0x1550>
   134a0:	mov	r0, r5
   134a4:	bl	133a0 <argp_parse@@Base+0x1444>
   134a8:	mov	r4, r0
   134ac:	mov	r0, r4
   134b0:	add	sp, sp, #112	; 0x70
   134b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134b8:	str	sl, [r8]
   134bc:	mov	r0, r4
   134c0:	bl	129f8 <argp_parse@@Base+0xa9c>
   134c4:	ldr	r2, [r8]
   134c8:	cmp	r2, #22
   134cc:	mvnls	r3, r9, lsr r2
   134d0:	movhi	r3, #1
   134d4:	cmp	r2, #36	; 0x24
   134d8:	moveq	r3, #0
   134dc:	andne	r3, r3, #1
   134e0:	cmp	r3, #0
   134e4:	bne	1350c <argp_parse@@Base+0x15b0>
   134e8:	mov	r2, #1
   134ec:	str	r2, [sp]
   134f0:	mvn	r3, #0
   134f4:	add	r1, sp, #8
   134f8:	mov	r0, r7
   134fc:	bl	130e8 <argp_parse@@Base+0x118c>
   13500:	mov	r4, r0
   13504:	mov	r5, r0
   13508:	b	13460 <argp_parse@@Base+0x1504>
   1350c:	mov	r4, #0
   13510:	b	134ac <argp_parse@@Base+0x1550>
   13514:	subeq	r1, r0, r1
   13518:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1351c:	sub	sp, sp, #112	; 0x70
   13520:	mov	r3, #100	; 0x64
   13524:	str	r3, [sp, #8]
   13528:	bl	11124 <__errno_location@plt>
   1352c:	mov	r4, #0
   13530:	ldr	r9, [pc, #188]	; 135f4 <argp_parse@@Base+0x1698>
   13534:	add	r5, sp, #12
   13538:	mov	r7, r4
   1353c:	mov	r8, r0
   13540:	ldr	r6, [sp, #8]
   13544:	mov	r0, r5
   13548:	sub	r6, r6, #1
   1354c:	mov	r1, r6
   13550:	strb	r7, [r5, r6]
   13554:	str	r7, [r8]
   13558:	bl	11058 <gethostname@plt>
   1355c:	subs	sl, r0, #0
   13560:	bne	1359c <argp_parse@@Base+0x1640>
   13564:	mov	r0, r5
   13568:	bl	11100 <strlen@plt>
   1356c:	add	r1, r0, #1
   13570:	cmp	r6, r1
   13574:	ble	13598 <argp_parse@@Base+0x163c>
   13578:	cmp	r4, #0
   1357c:	bne	1358c <argp_parse@@Base+0x1630>
   13580:	mov	r0, r5
   13584:	bl	133a0 <argp_parse@@Base+0x1444>
   13588:	mov	r4, r0
   1358c:	mov	r0, r4
   13590:	add	sp, sp, #112	; 0x70
   13594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13598:	str	sl, [r8]
   1359c:	mov	r0, r4
   135a0:	bl	129f8 <argp_parse@@Base+0xa9c>
   135a4:	ldr	r2, [r8]
   135a8:	cmp	r2, #22
   135ac:	mvnls	r3, r9, lsr r2
   135b0:	movhi	r3, #1
   135b4:	cmp	r2, #36	; 0x24
   135b8:	moveq	r3, #0
   135bc:	andne	r3, r3, #1
   135c0:	cmp	r3, #0
   135c4:	bne	135ec <argp_parse@@Base+0x1690>
   135c8:	mov	r2, #1
   135cc:	str	r2, [sp]
   135d0:	mvn	r3, #0
   135d4:	add	r1, sp, #8
   135d8:	mov	r0, r7
   135dc:	bl	130e8 <argp_parse@@Base+0x118c>
   135e0:	mov	r4, r0
   135e4:	mov	r5, r0
   135e8:	b	13540 <argp_parse@@Base+0x15e4>
   135ec:	mov	r4, #0
   135f0:	b	1358c <argp_parse@@Base+0x1630>
   135f4:	subeq	r1, r0, r1
   135f8:	cmp	r1, #0
   135fc:	cmpne	r0, #0
   13600:	moveq	r1, #1
   13604:	moveq	r0, r1
   13608:	umull	r2, r3, r0, r1
   1360c:	adds	r3, r3, #0
   13610:	movne	r3, #1
   13614:	cmp	r2, #0
   13618:	blt	13628 <argp_parse@@Base+0x16cc>
   1361c:	cmp	r3, #0
   13620:	bne	13628 <argp_parse@@Base+0x16cc>
   13624:	b	10f5c <calloc@plt>
   13628:	push	{r4, lr}
   1362c:	bl	11124 <__errno_location@plt>
   13630:	mov	r3, #12
   13634:	str	r3, [r0]
   13638:	mov	r0, #0
   1363c:	pop	{r4, pc}
   13640:	cmp	r0, #0
   13644:	mov	r3, #0
   13648:	moveq	r0, #1
   1364c:	adds	r3, r3, #0
   13650:	movne	r3, #1
   13654:	cmp	r0, #0
   13658:	blt	13668 <argp_parse@@Base+0x170c>
   1365c:	cmp	r3, #0
   13660:	bne	13668 <argp_parse@@Base+0x170c>
   13664:	b	1107c <malloc@plt>
   13668:	push	{r4, lr}
   1366c:	bl	11124 <__errno_location@plt>
   13670:	mov	r3, #12
   13674:	str	r3, [r0]
   13678:	mov	r0, #0
   1367c:	pop	{r4, pc}
   13680:	cmp	r0, #0
   13684:	push	{r4, lr}
   13688:	mov	r4, r1
   1368c:	bne	1369c <argp_parse@@Base+0x1740>
   13690:	mov	r0, r1
   13694:	pop	{r4, lr}
   13698:	b	13640 <argp_parse@@Base+0x16e4>
   1369c:	cmp	r1, #0
   136a0:	bne	136b0 <argp_parse@@Base+0x1754>
   136a4:	bl	129f8 <argp_parse@@Base+0xa9c>
   136a8:	mov	r0, #0
   136ac:	pop	{r4, pc}
   136b0:	cmp	r1, #0
   136b4:	blt	136c4 <argp_parse@@Base+0x1768>
   136b8:	mov	r3, #0
   136bc:	cmp	r3, r3
   136c0:	beq	136d4 <argp_parse@@Base+0x1778>
   136c4:	bl	11124 <__errno_location@plt>
   136c8:	mov	r3, #12
   136cc:	str	r3, [r0]
   136d0:	b	136a8 <argp_parse@@Base+0x174c>
   136d4:	pop	{r4, lr}
   136d8:	b	11010 <realloc@plt>
   136dc:	ldr	r2, [r0, #4]
   136e0:	ldr	r3, [r0]
   136e4:	cmp	r2, #0
   136e8:	add	r3, r3, #24
   136ec:	bne	136f8 <argp_parse@@Base+0x179c>
   136f0:	mov	r0, r2
   136f4:	bx	lr
   136f8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   136fc:	cmp	r0, #0
   13700:	beq	13710 <argp_parse@@Base+0x17b4>
   13704:	ldr	r1, [r3, #-12]
   13708:	tst	r1, #2
   1370c:	bxeq	lr
   13710:	sub	r2, r2, #1
   13714:	b	136e4 <argp_parse@@Base+0x1788>
   13718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1371c:	mov	sl, r3
   13720:	ldm	r0, {r5, r6, r7}
   13724:	mov	r3, #0
   13728:	sub	sp, sp, #20
   1372c:	mov	r8, r1
   13730:	mov	r9, r2
   13734:	mov	r4, r5
   13738:	mov	fp, r3
   1373c:	adds	r2, r6, #0
   13740:	movne	r2, #1
   13744:	cmp	r3, #0
   13748:	movne	r2, #0
   1374c:	cmp	r2, #0
   13750:	bne	13760 <argp_parse@@Base+0x1804>
   13754:	mov	r0, r3
   13758:	add	sp, sp, #20
   1375c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13760:	ldr	r2, [r4, #12]
   13764:	ands	r3, r2, #8
   13768:	str	r2, [sp, #12]
   1376c:	movne	r3, fp
   13770:	bne	137b0 <argp_parse@@Base+0x1854>
   13774:	ldr	r1, [r4, #4]
   13778:	sub	r0, r1, #1
   1377c:	cmp	r0, #254	; 0xfe
   13780:	str	r1, [sp, #8]
   13784:	bhi	137b0 <argp_parse@@Base+0x1854>
   13788:	str	r3, [sp, #4]
   1378c:	bl	110dc <__ctype_b_loc@plt>
   13790:	ldr	r1, [sp, #8]
   13794:	ldr	r3, [sp, #4]
   13798:	ldr	r2, [sp, #12]
   1379c:	ldr	ip, [r0]
   137a0:	lsl	r0, r1, #1
   137a4:	ldrh	r0, [ip, r0]
   137a8:	tst	r0, #16384	; 0x4000
   137ac:	bne	137bc <argp_parse@@Base+0x1860>
   137b0:	add	r4, r4, #24
   137b4:	sub	r6, r6, #1
   137b8:	b	1373c <argp_parse@@Base+0x17e0>
   137bc:	ldrb	r0, [r7]
   137c0:	cmp	r0, r1
   137c4:	bne	137b0 <argp_parse@@Base+0x1854>
   137c8:	tst	r2, #4
   137cc:	moveq	r5, r4
   137d0:	tst	r2, #2
   137d4:	bne	137f0 <argp_parse@@Base+0x1894>
   137d8:	mov	r3, sl
   137dc:	mov	r2, r9
   137e0:	mov	r1, r5
   137e4:	mov	r0, r4
   137e8:	blx	r8
   137ec:	mov	r3, r0
   137f0:	add	r7, r7, #1
   137f4:	b	137b0 <argp_parse@@Base+0x1854>
   137f8:	ldr	r3, [r0, #12]
   137fc:	ands	r3, r3, #8
   13800:	bne	13838 <argp_parse@@Base+0x18dc>
   13804:	push	{r4, lr}
   13808:	ldr	r4, [r0, #4]
   1380c:	sub	r2, r4, #1
   13810:	cmp	r2, #254	; 0xfe
   13814:	bhi	13830 <argp_parse@@Base+0x18d4>
   13818:	bl	110dc <__ctype_b_loc@plt>
   1381c:	lsl	r3, r4, #1
   13820:	ldr	r2, [r0]
   13824:	ldrh	r3, [r2, r3]
   13828:	ands	r3, r3, #16384	; 0x4000
   1382c:	movne	r3, r4
   13830:	mov	r0, r3
   13834:	pop	{r4, pc}
   13838:	mov	r3, #0
   1383c:	mov	r0, r3
   13840:	bx	lr
   13844:	push	{r4, lr}
   13848:	mov	r4, r0
   1384c:	bl	110dc <__ctype_b_loc@plt>
   13850:	ldr	r1, [r0]
   13854:	ldr	r3, [r4]
   13858:	ldrb	r0, [r3]
   1385c:	lsl	r2, r0, #1
   13860:	ldrh	r2, [r1, r2]
   13864:	tst	r2, #8192	; 0x2000
   13868:	bne	13898 <argp_parse@@Base+0x193c>
   1386c:	subs	r0, r0, #45	; 0x2d
   13870:	movne	r0, #1
   13874:	ldr	r2, [r4]
   13878:	ldrb	r3, [r2]
   1387c:	cmp	r3, #0
   13880:	popeq	{r4, pc}
   13884:	lsl	r3, r3, #1
   13888:	ldrh	r3, [r1, r3]
   1388c:	tst	r3, #8
   13890:	beq	138a4 <argp_parse@@Base+0x1948>
   13894:	pop	{r4, pc}
   13898:	add	r3, r3, #1
   1389c:	str	r3, [r4]
   138a0:	b	13854 <argp_parse@@Base+0x18f8>
   138a4:	add	r2, r2, #1
   138a8:	str	r2, [r4]
   138ac:	b	13874 <argp_parse@@Base+0x1918>
   138b0:	push	{r4, r5, r6, lr}
   138b4:	mov	r4, r0
   138b8:	ldr	r0, [r0, #12]
   138bc:	cmp	r0, #0
   138c0:	bne	138ec <argp_parse@@Base+0x1990>
   138c4:	ldr	r3, [r4, #4]
   138c8:	cmp	r3, #0
   138cc:	beq	138e0 <argp_parse@@Base+0x1984>
   138d0:	ldr	r0, [r4]
   138d4:	bl	129f8 <argp_parse@@Base+0xa9c>
   138d8:	ldr	r0, [r4, #8]
   138dc:	bl	129f8 <argp_parse@@Base+0xa9c>
   138e0:	mov	r0, r4
   138e4:	pop	{r4, r5, r6, lr}
   138e8:	b	129f8 <argp_parse@@Base+0xa9c>
   138ec:	ldr	r5, [r0, #24]
   138f0:	bl	129f8 <argp_parse@@Base+0xa9c>
   138f4:	mov	r0, r5
   138f8:	b	138bc <argp_parse@@Base+0x1960>
   138fc:	push	{r4, r5, r6, lr}
   13900:	ldr	r5, [r0, #16]
   13904:	ldr	r0, [r0, #8]
   13908:	cmp	r0, #0
   1390c:	beq	13920 <argp_parse@@Base+0x19c4>
   13910:	mov	r1, #10
   13914:	bl	1110c <strchr@plt>
   13918:	adds	r0, r0, #0
   1391c:	movne	r0, #1
   13920:	cmp	r5, #0
   13924:	mov	r4, r0
   13928:	addne	r5, r5, #16
   1392c:	bne	13940 <argp_parse@@Base+0x19e4>
   13930:	mov	r0, r4
   13934:	pop	{r4, r5, r6, pc}
   13938:	bl	138fc <argp_parse@@Base+0x19a0>
   1393c:	add	r4, r4, r0
   13940:	add	r5, r5, #16
   13944:	ldr	r0, [r5, #-32]	; 0xffffffe0
   13948:	cmp	r0, #0
   1394c:	bne	13938 <argp_parse@@Base+0x19dc>
   13950:	b	13930 <argp_parse@@Base+0x19d4>
   13954:	ldr	r2, [r0, #24]
   13958:	ldr	r3, [r0, #28]
   1395c:	push	{r4, r5, r6, r7, r8, lr}
   13960:	sub	r3, r3, r2
   13964:	ldr	r2, [r0, #16]
   13968:	mov	r4, r0
   1396c:	cmp	r3, r2
   13970:	mov	r5, r1
   13974:	bls	1397c <argp_parse@@Base+0x1a20>
   13978:	bl	16ed8 <argp_error@@Base+0xc3c>
   1397c:	ldr	r1, [r4, #20]
   13980:	mov	r6, #1
   13984:	cmp	r1, #0
   13988:	subge	r5, r5, r1
   1398c:	mov	r7, #32
   13990:	cmp	r5, #0
   13994:	bgt	1399c <argp_parse@@Base+0x1a40>
   13998:	pop	{r4, r5, r6, r7, r8, pc}
   1399c:	ldr	r2, [r4, #28]
   139a0:	ldr	r3, [r4, #32]
   139a4:	cmp	r2, r3
   139a8:	bcs	139c4 <argp_parse@@Base+0x1a68>
   139ac:	ldr	r3, [r4, #28]
   139b0:	add	r2, r3, #1
   139b4:	str	r2, [r4, #28]
   139b8:	strb	r7, [r3]
   139bc:	sub	r5, r5, #1
   139c0:	b	13990 <argp_parse@@Base+0x1a34>
   139c4:	mov	r1, r6
   139c8:	mov	r0, r4
   139cc:	bl	17328 <argp_error@@Base+0x108c>
   139d0:	cmp	r0, #0
   139d4:	bne	139ac <argp_parse@@Base+0x1a50>
   139d8:	b	139bc <argp_parse@@Base+0x1a60>
   139dc:	push	{r4, r5, r6, lr}
   139e0:	subs	r4, r2, #0
   139e4:	popeq	{r4, r5, r6, pc}
   139e8:	ldr	r2, [r4, #20]
   139ec:	cmp	r2, #0
   139f0:	popeq	{r4, r5, r6, pc}
   139f4:	mov	r6, r1
   139f8:	mov	r5, r0
   139fc:	mov	r1, r3
   13a00:	mov	r0, r4
   13a04:	bl	128d4 <argp_parse@@Base+0x978>
   13a08:	ldr	r3, [r4, #20]
   13a0c:	mov	r1, r5
   13a10:	mov	r2, r0
   13a14:	mov	r0, r6
   13a18:	pop	{r4, r5, r6, lr}
   13a1c:	bx	r3
   13a20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a24:	mov	r4, r2
   13a28:	ldr	r3, [r2, #16]
   13a2c:	mov	r2, r1
   13a30:	ldr	r1, [pc, #440]	; 13bf0 <argp_parse@@Base+0x1c94>
   13a34:	mov	r7, r0
   13a38:	bl	139dc <argp_parse@@Base+0x1a80>
   13a3c:	subs	r6, r0, #0
   13a40:	beq	13b94 <argp_parse@@Base+0x1c38>
   13a44:	ldrb	r3, [r6]
   13a48:	cmp	r3, #0
   13a4c:	beq	13b88 <argp_parse@@Base+0x1c2c>
   13a50:	ldr	r3, [r4, #8]
   13a54:	ldr	r3, [r3]
   13a58:	cmp	r3, #0
   13a5c:	beq	13a88 <argp_parse@@Base+0x1b2c>
   13a60:	ldr	r5, [r4, #4]
   13a64:	ldr	r2, [r5, #28]
   13a68:	ldr	r3, [r5, #32]
   13a6c:	cmp	r2, r3
   13a70:	bcs	13ba8 <argp_parse@@Base+0x1c4c>
   13a74:	ldr	r3, [r5, #28]
   13a78:	add	r2, r3, #1
   13a7c:	str	r2, [r5, #28]
   13a80:	mov	r2, #10
   13a84:	strb	r2, [r3]
   13a88:	ldr	r8, [pc, #356]	; 13bf4 <argp_parse@@Base+0x1c98>
   13a8c:	ldr	r0, [r4, #4]
   13a90:	ldr	r1, [r8, #24]
   13a94:	bl	13954 <argp_parse@@Base+0x19f8>
   13a98:	ldr	r9, [r4, #4]
   13a9c:	ldr	sl, [r8, #24]
   13aa0:	ldr	r2, [r9, #24]
   13aa4:	ldr	r3, [r9, #28]
   13aa8:	sub	r3, r3, r2
   13aac:	ldr	r2, [r9, #16]
   13ab0:	cmp	r3, r2
   13ab4:	bls	13ac0 <argp_parse@@Base+0x1b64>
   13ab8:	mov	r0, r9
   13abc:	bl	16ed8 <argp_error@@Base+0xc3c>
   13ac0:	ldr	r5, [r4, #4]
   13ac4:	str	sl, [r9, #4]
   13ac8:	ldr	r8, [r8, #24]
   13acc:	ldr	r2, [r5, #24]
   13ad0:	ldr	r3, [r5, #28]
   13ad4:	sub	r3, r3, r2
   13ad8:	ldr	r2, [r5, #16]
   13adc:	cmp	r3, r2
   13ae0:	bls	13aec <argp_parse@@Base+0x1b90>
   13ae4:	mov	r0, r5
   13ae8:	bl	16ed8 <argp_error@@Base+0xc3c>
   13aec:	str	r8, [r5, #12]
   13af0:	mov	r0, r6
   13af4:	bl	11100 <strlen@plt>
   13af8:	subs	r8, r0, #0
   13afc:	beq	13b34 <argp_parse@@Base+0x1bd8>
   13b00:	ldr	r5, [r4, #4]
   13b04:	ldr	r3, [r5, #28]
   13b08:	ldr	r2, [r5, #32]
   13b0c:	add	r3, r3, r8
   13b10:	cmp	r2, r3
   13b14:	bcc	13bc0 <argp_parse@@Base+0x1c64>
   13b18:	mov	r2, r8
   13b1c:	mov	r1, r6
   13b20:	ldr	r0, [r5, #28]
   13b24:	bl	10fd4 <memcpy@plt>
   13b28:	ldr	r3, [r5, #28]
   13b2c:	add	r8, r3, r8
   13b30:	str	r8, [r5, #28]
   13b34:	ldr	r5, [r4, #4]
   13b38:	ldr	r2, [r5, #24]
   13b3c:	ldr	r3, [r5, #28]
   13b40:	sub	r3, r3, r2
   13b44:	ldr	r2, [r5, #16]
   13b48:	cmp	r3, r2
   13b4c:	bls	13b58 <argp_parse@@Base+0x1bfc>
   13b50:	mov	r0, r5
   13b54:	bl	16ed8 <argp_error@@Base+0xc3c>
   13b58:	mov	r3, #0
   13b5c:	str	r3, [r5, #4]
   13b60:	ldr	r5, [r4, #4]
   13b64:	ldr	r2, [r5, #28]
   13b68:	ldr	r3, [r5, #32]
   13b6c:	cmp	r2, r3
   13b70:	bcs	13bd8 <argp_parse@@Base+0x1c7c>
   13b74:	ldr	r3, [r5, #28]
   13b78:	add	r2, r3, #1
   13b7c:	str	r2, [r5, #28]
   13b80:	mov	r2, #10
   13b84:	strb	r2, [r3]
   13b88:	ldr	r3, [r4, #8]
   13b8c:	mov	r2, #1
   13b90:	str	r2, [r3, #4]
   13b94:	cmp	r7, r6
   13b98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b9c:	mov	r0, r6
   13ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ba4:	b	129f8 <argp_parse@@Base+0xa9c>
   13ba8:	mov	r1, #1
   13bac:	mov	r0, r5
   13bb0:	bl	17328 <argp_error@@Base+0x108c>
   13bb4:	cmp	r0, #0
   13bb8:	bne	13a74 <argp_parse@@Base+0x1b18>
   13bbc:	b	13a88 <argp_parse@@Base+0x1b2c>
   13bc0:	mov	r1, r8
   13bc4:	mov	r0, r5
   13bc8:	bl	17328 <argp_error@@Base+0x108c>
   13bcc:	cmp	r0, #0
   13bd0:	bne	13b18 <argp_parse@@Base+0x1bbc>
   13bd4:	b	13b34 <argp_parse@@Base+0x1bd8>
   13bd8:	mov	r1, #1
   13bdc:	mov	r0, r5
   13be0:	bl	17328 <argp_error@@Base+0x108c>
   13be4:	cmp	r0, #0
   13be8:	bne	13b74 <argp_parse@@Base+0x1c18>
   13bec:	b	13b88 <argp_parse@@Base+0x1c2c>
   13bf0:	andeq	r0, r0, #3
   13bf4:	andeq	r9, r2, ip, lsl r2
   13bf8:	ldr	r3, [r1, #12]
   13bfc:	push	{r4, r5, r6, r7, r8, lr}
   13c00:	cmp	r3, #0
   13c04:	mov	r7, r0
   13c08:	mov	r4, r1
   13c0c:	beq	13d24 <argp_parse@@Base+0x1dc8>
   13c10:	ldr	r2, [r1, #8]
   13c14:	ldr	r3, [r1]
   13c18:	ldr	r8, [r2]
   13c1c:	ldr	r2, [r2, #4]
   13c20:	ldr	r5, [r3, #16]
   13c24:	cmp	r2, #0
   13c28:	cmpne	r8, #0
   13c2c:	beq	13c68 <argp_parse@@Base+0x1d0c>
   13c30:	ldr	r2, [r3, #12]
   13c34:	ldr	r3, [r8, #12]
   13c38:	cmp	r2, r3
   13c3c:	beq	13c68 <argp_parse@@Base+0x1d0c>
   13c40:	ldr	r6, [r1, #4]
   13c44:	ldr	r2, [r6, #28]
   13c48:	ldr	r3, [r6, #32]
   13c4c:	cmp	r2, r3
   13c50:	bcs	13d04 <argp_parse@@Base+0x1da8>
   13c54:	ldr	r3, [r6, #28]
   13c58:	add	r2, r3, #1
   13c5c:	str	r2, [r6, #28]
   13c60:	mov	r2, #10
   13c64:	strb	r2, [r3]
   13c68:	cmp	r5, #0
   13c6c:	beq	13cec <argp_parse@@Base+0x1d90>
   13c70:	ldr	r0, [r5]
   13c74:	cmp	r0, #0
   13c78:	beq	13cec <argp_parse@@Base+0x1d90>
   13c7c:	ldrb	r3, [r0]
   13c80:	cmp	r3, #0
   13c84:	beq	13cec <argp_parse@@Base+0x1d90>
   13c88:	cmp	r8, #0
   13c8c:	beq	13cb0 <argp_parse@@Base+0x1d54>
   13c90:	ldr	r3, [r8, #16]
   13c94:	cmp	r5, r3
   13c98:	beq	13cec <argp_parse@@Base+0x1d90>
   13c9c:	cmp	r3, #0
   13ca0:	cmpne	r5, r3
   13ca4:	bne	13d1c <argp_parse@@Base+0x1dc0>
   13ca8:	cmp	r5, r3
   13cac:	beq	13cec <argp_parse@@Base+0x1d90>
   13cb0:	ldr	r3, [r4, #4]
   13cb4:	mov	r2, r4
   13cb8:	ldr	r1, [r5, #16]
   13cbc:	ldr	r6, [r3, #12]
   13cc0:	bl	13a20 <argp_parse@@Base+0x1ac4>
   13cc4:	ldr	r5, [r4, #4]
   13cc8:	ldr	r2, [r5, #24]
   13ccc:	ldr	r3, [r5, #28]
   13cd0:	sub	r3, r3, r2
   13cd4:	ldr	r2, [r5, #16]
   13cd8:	cmp	r3, r2
   13cdc:	bls	13ce8 <argp_parse@@Base+0x1d8c>
   13ce0:	mov	r0, r5
   13ce4:	bl	16ed8 <argp_error@@Base+0xc3c>
   13ce8:	str	r6, [r5, #12]
   13cec:	mov	r3, #0
   13cf0:	str	r3, [r4, #12]
   13cf4:	mov	r1, r7
   13cf8:	ldr	r0, [r4, #4]
   13cfc:	pop	{r4, r5, r6, r7, r8, lr}
   13d00:	b	13954 <argp_parse@@Base+0x19f8>
   13d04:	mov	r1, #1
   13d08:	mov	r0, r6
   13d0c:	bl	17328 <argp_error@@Base+0x108c>
   13d10:	cmp	r0, #0
   13d14:	bne	13c54 <argp_parse@@Base+0x1cf8>
   13d18:	b	13c68 <argp_parse@@Base+0x1d0c>
   13d1c:	ldr	r3, [r3, #12]
   13d20:	b	13c9c <argp_parse@@Base+0x1d40>
   13d24:	ldr	r5, [r1, #4]
   13d28:	ldr	r3, [r5, #28]
   13d2c:	ldr	r2, [r5, #32]
   13d30:	add	r3, r3, #2
   13d34:	cmp	r2, r3
   13d38:	bcc	13d5c <argp_parse@@Base+0x1e00>
   13d3c:	ldr	r2, [pc, #48]	; 13d74 <argp_parse@@Base+0x1e18>
   13d40:	ldr	r3, [r5, #28]
   13d44:	ldrh	r2, [r2]
   13d48:	strh	r2, [r3]
   13d4c:	ldr	r3, [r5, #28]
   13d50:	add	r3, r3, #2
   13d54:	str	r3, [r5, #28]
   13d58:	b	13cf4 <argp_parse@@Base+0x1d98>
   13d5c:	mov	r1, #2
   13d60:	mov	r0, r5
   13d64:	bl	17328 <argp_error@@Base+0x108c>
   13d68:	cmp	r0, #0
   13d6c:	bne	13d3c <argp_parse@@Base+0x1de0>
   13d70:	b	13cf4 <argp_parse@@Base+0x1d98>
   13d74:	andeq	r8, r1, r2, asr #2
   13d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d7c:	sub	sp, sp, #28
   13d80:	ldr	r7, [r0, #12]
   13d84:	str	r3, [sp, #8]
   13d88:	cmp	r7, #0
   13d8c:	ldr	r3, [r0, #16]
   13d90:	moveq	r5, r7
   13d94:	mov	r8, r0
   13d98:	str	r1, [sp, #16]
   13d9c:	mov	fp, r2
   13da0:	ldr	r4, [sp, #68]	; 0x44
   13da4:	str	r3, [sp, #12]
   13da8:	moveq	r6, r5
   13dac:	beq	13dec <argp_parse@@Base+0x1e90>
   13db0:	mov	r1, #11
   13db4:	mov	r0, r7
   13db8:	bl	1110c <strchr@plt>
   13dbc:	cmp	fp, #0
   13dc0:	moveq	r5, r7
   13dc4:	beq	13dd4 <argp_parse@@Base+0x1e78>
   13dc8:	cmp	r0, #0
   13dcc:	addne	r5, r0, #1
   13dd0:	moveq	r5, r0
   13dd4:	cmp	r0, #0
   13dd8:	clz	r6, fp
   13ddc:	lsr	r6, r6, #5
   13de0:	moveq	r6, #0
   13de4:	cmp	r6, #0
   13de8:	subne	r6, r0, r7
   13dec:	ldr	r9, [r8, #20]
   13df0:	cmp	r9, #0
   13df4:	moveq	sl, r5
   13df8:	beq	13e4c <argp_parse@@Base+0x1ef0>
   13dfc:	cmp	r6, #0
   13e00:	beq	13e14 <argp_parse@@Base+0x1eb8>
   13e04:	mov	r0, r5
   13e08:	mov	r1, r6
   13e0c:	bl	10fc8 <strndup@plt>
   13e10:	mov	r5, r0
   13e14:	ldr	r1, [sp, #16]
   13e18:	mov	r0, r8
   13e1c:	bl	128d4 <argp_parse@@Base+0x978>
   13e20:	ldr	ip, [pc, #928]	; 141c8 <argp_parse@@Base+0x226c>
   13e24:	cmp	fp, #0
   13e28:	mov	r1, r5
   13e2c:	ldr	r3, [r8, #20]
   13e30:	mov	sl, r5
   13e34:	mov	r2, r0
   13e38:	mov	r9, r0
   13e3c:	ldr	r0, [pc, #904]	; 141cc <argp_parse@@Base+0x2270>
   13e40:	movne	r0, ip
   13e44:	blx	r3
   13e48:	mov	r5, r0
   13e4c:	cmp	r5, #0
   13e50:	moveq	r7, r5
   13e54:	beq	13f0c <argp_parse@@Base+0x1fb0>
   13e58:	ldr	r3, [sp, #8]
   13e5c:	cmp	r3, #0
   13e60:	beq	13e88 <argp_parse@@Base+0x1f2c>
   13e64:	ldr	r2, [r4, #28]
   13e68:	ldr	r3, [r4, #32]
   13e6c:	cmp	r2, r3
   13e70:	bcs	14038 <argp_parse@@Base+0x20dc>
   13e74:	ldr	r3, [r4, #28]
   13e78:	add	r2, r3, #1
   13e7c:	str	r2, [r4, #28]
   13e80:	mov	r2, #10
   13e84:	strb	r2, [r3]
   13e88:	cmp	r6, #0
   13e8c:	sub	r3, r5, sl
   13e90:	clz	r3, r3
   13e94:	lsr	r3, r3, #5
   13e98:	moveq	r3, #0
   13e9c:	cmp	r3, #0
   13ea0:	ldr	r3, [r4, #28]
   13ea4:	beq	14068 <argp_parse@@Base+0x210c>
   13ea8:	ldr	r2, [r4, #32]
   13eac:	add	r3, r3, r6
   13eb0:	cmp	r2, r3
   13eb4:	bcc	14050 <argp_parse@@Base+0x20f4>
   13eb8:	mov	r2, r6
   13ebc:	mov	r1, sl
   13ec0:	ldr	r0, [r4, #28]
   13ec4:	bl	10fd4 <memcpy@plt>
   13ec8:	ldr	r3, [r4, #28]
   13ecc:	add	r3, r3, r6
   13ed0:	str	r3, [r4, #28]
   13ed4:	ldr	r2, [r4, #24]
   13ed8:	ldr	r3, [r4, #28]
   13edc:	sub	r3, r3, r2
   13ee0:	ldr	r2, [r4, #16]
   13ee4:	cmp	r3, r2
   13ee8:	bls	13ef4 <argp_parse@@Base+0x1f98>
   13eec:	mov	r0, r4
   13ef0:	bl	16ed8 <argp_error@@Base+0xc3c>
   13ef4:	ldr	r3, [r4, #20]
   13ef8:	ldr	r2, [r4, #4]
   13efc:	bic	r3, r3, r3, asr #31
   13f00:	cmp	r2, r3
   13f04:	bcc	140c8 <argp_parse@@Base+0x216c>
   13f08:	mov	r7, #1
   13f0c:	cmp	r5, #0
   13f10:	cmpne	r5, sl
   13f14:	beq	13f20 <argp_parse@@Base+0x1fc4>
   13f18:	mov	r0, r5
   13f1c:	bl	129f8 <argp_parse@@Base+0xa9c>
   13f20:	cmp	sl, #0
   13f24:	cmpne	r6, #0
   13f28:	beq	13f40 <argp_parse@@Base+0x1fe4>
   13f2c:	ldr	r3, [r8, #20]
   13f30:	cmp	r3, #0
   13f34:	beq	1401c <argp_parse@@Base+0x20c0>
   13f38:	mov	r0, sl
   13f3c:	bl	129f8 <argp_parse@@Base+0xa9c>
   13f40:	cmp	fp, #0
   13f44:	beq	1401c <argp_parse@@Base+0x20c0>
   13f48:	ldr	r3, [r8, #20]
   13f4c:	cmp	r3, #0
   13f50:	beq	1401c <argp_parse@@Base+0x20c0>
   13f54:	mov	r2, r9
   13f58:	mov	r1, #0
   13f5c:	ldr	r0, [pc, #620]	; 141d0 <argp_parse@@Base+0x2274>
   13f60:	blx	r3
   13f64:	subs	r5, r0, #0
   13f68:	beq	1401c <argp_parse@@Base+0x20c0>
   13f6c:	ldr	r3, [sp, #8]
   13f70:	orrs	r3, r7, r3
   13f74:	beq	13f9c <argp_parse@@Base+0x2040>
   13f78:	ldr	r2, [r4, #28]
   13f7c:	ldr	r3, [r4, #32]
   13f80:	cmp	r2, r3
   13f84:	bcs	14108 <argp_parse@@Base+0x21ac>
   13f88:	ldr	r3, [r4, #28]
   13f8c:	add	r2, r3, #1
   13f90:	str	r2, [r4, #28]
   13f94:	mov	r2, #10
   13f98:	strb	r2, [r3]
   13f9c:	mov	r0, r5
   13fa0:	bl	11100 <strlen@plt>
   13fa4:	subs	r6, r0, #0
   13fa8:	beq	13fdc <argp_parse@@Base+0x2080>
   13fac:	ldr	r3, [r4, #28]
   13fb0:	ldr	r2, [r4, #32]
   13fb4:	add	r3, r3, r6
   13fb8:	cmp	r2, r3
   13fbc:	bcc	14120 <argp_parse@@Base+0x21c4>
   13fc0:	mov	r2, r6
   13fc4:	mov	r1, r5
   13fc8:	ldr	r0, [r4, #28]
   13fcc:	bl	10fd4 <memcpy@plt>
   13fd0:	ldr	r3, [r4, #28]
   13fd4:	add	r6, r3, r6
   13fd8:	str	r6, [r4, #28]
   13fdc:	mov	r0, r5
   13fe0:	bl	129f8 <argp_parse@@Base+0xa9c>
   13fe4:	ldr	r2, [r4, #24]
   13fe8:	ldr	r3, [r4, #28]
   13fec:	sub	r3, r3, r2
   13ff0:	ldr	r2, [r4, #16]
   13ff4:	cmp	r3, r2
   13ff8:	bls	14004 <argp_parse@@Base+0x20a8>
   13ffc:	mov	r0, r4
   14000:	bl	16ed8 <argp_error@@Base+0xc3c>
   14004:	ldr	r3, [r4, #20]
   14008:	ldr	r2, [r4, #4]
   1400c:	bic	r3, r3, r3, asr #31
   14010:	cmp	r2, r3
   14014:	bcc	14138 <argp_parse@@Base+0x21dc>
   14018:	mov	r7, #1
   1401c:	ldr	r3, [sp, #12]
   14020:	cmp	r3, #0
   14024:	addne	r5, r3, #16
   14028:	bne	141a4 <argp_parse@@Base+0x2248>
   1402c:	mov	r0, r7
   14030:	add	sp, sp, #28
   14034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14038:	mov	r1, #1
   1403c:	mov	r0, r4
   14040:	bl	17328 <argp_error@@Base+0x108c>
   14044:	cmp	r0, #0
   14048:	bne	13e74 <argp_parse@@Base+0x1f18>
   1404c:	b	13e88 <argp_parse@@Base+0x1f2c>
   14050:	mov	r1, r6
   14054:	mov	r0, r4
   14058:	bl	17328 <argp_error@@Base+0x108c>
   1405c:	cmp	r0, #0
   14060:	bne	13eb8 <argp_parse@@Base+0x1f5c>
   14064:	b	13ed4 <argp_parse@@Base+0x1f78>
   14068:	mov	r0, r5
   1406c:	str	r3, [sp, #20]
   14070:	bl	11100 <strlen@plt>
   14074:	subs	r7, r0, #0
   14078:	beq	13ed4 <argp_parse@@Base+0x1f78>
   1407c:	ldr	r3, [sp, #20]
   14080:	ldr	r2, [r4, #32]
   14084:	add	r3, r3, r7
   14088:	cmp	r2, r3
   1408c:	bcc	140b0 <argp_parse@@Base+0x2154>
   14090:	mov	r2, r7
   14094:	mov	r1, r5
   14098:	ldr	r0, [r4, #28]
   1409c:	bl	10fd4 <memcpy@plt>
   140a0:	ldr	r3, [r4, #28]
   140a4:	add	r7, r3, r7
   140a8:	str	r7, [r4, #28]
   140ac:	b	13ed4 <argp_parse@@Base+0x1f78>
   140b0:	mov	r1, r7
   140b4:	mov	r0, r4
   140b8:	bl	17328 <argp_error@@Base+0x108c>
   140bc:	cmp	r0, #0
   140c0:	bne	14090 <argp_parse@@Base+0x2134>
   140c4:	b	13ed4 <argp_parse@@Base+0x1f78>
   140c8:	ldr	r2, [r4, #28]
   140cc:	ldr	r3, [r4, #32]
   140d0:	cmp	r2, r3
   140d4:	bcs	140f0 <argp_parse@@Base+0x2194>
   140d8:	ldr	r3, [r4, #28]
   140dc:	add	r2, r3, #1
   140e0:	str	r2, [r4, #28]
   140e4:	mov	r2, #10
   140e8:	strb	r2, [r3]
   140ec:	b	13f08 <argp_parse@@Base+0x1fac>
   140f0:	mov	r1, #1
   140f4:	mov	r0, r4
   140f8:	bl	17328 <argp_error@@Base+0x108c>
   140fc:	cmp	r0, #0
   14100:	bne	140d8 <argp_parse@@Base+0x217c>
   14104:	b	13f08 <argp_parse@@Base+0x1fac>
   14108:	mov	r1, #1
   1410c:	mov	r0, r4
   14110:	bl	17328 <argp_error@@Base+0x108c>
   14114:	cmp	r0, #0
   14118:	bne	13f88 <argp_parse@@Base+0x202c>
   1411c:	b	13f9c <argp_parse@@Base+0x2040>
   14120:	mov	r1, r6
   14124:	mov	r0, r4
   14128:	bl	17328 <argp_error@@Base+0x108c>
   1412c:	cmp	r0, #0
   14130:	bne	13fc0 <argp_parse@@Base+0x2064>
   14134:	b	13fdc <argp_parse@@Base+0x2080>
   14138:	ldr	r2, [r4, #28]
   1413c:	ldr	r3, [r4, #32]
   14140:	cmp	r2, r3
   14144:	bcs	14160 <argp_parse@@Base+0x2204>
   14148:	ldr	r3, [r4, #28]
   1414c:	add	r2, r3, #1
   14150:	str	r2, [r4, #28]
   14154:	mov	r2, #10
   14158:	strb	r2, [r3]
   1415c:	b	14018 <argp_parse@@Base+0x20bc>
   14160:	mov	r1, #1
   14164:	mov	r0, r4
   14168:	bl	17328 <argp_error@@Base+0x108c>
   1416c:	cmp	r0, #0
   14170:	bne	14148 <argp_parse@@Base+0x21ec>
   14174:	b	14018 <argp_parse@@Base+0x20bc>
   14178:	ldr	r3, [sp, #8]
   1417c:	str	r4, [sp, #4]
   14180:	orrs	r3, r7, r3
   14184:	ldr	r3, [sp, #64]	; 0x40
   14188:	mov	r2, fp
   1418c:	str	r3, [sp]
   14190:	ldr	r1, [sp, #16]
   14194:	movne	r3, #1
   14198:	moveq	r3, #0
   1419c:	bl	13d78 <argp_parse@@Base+0x1e1c>
   141a0:	orr	r7, r7, r0
   141a4:	ldr	r0, [r5, #-16]
   141a8:	cmp	r0, #0
   141ac:	beq	1402c <argp_parse@@Base+0x20d0>
   141b0:	ldr	r3, [sp, #64]	; 0x40
   141b4:	add	r5, r5, #16
   141b8:	cmp	r7, #0
   141bc:	cmpne	r3, #0
   141c0:	beq	14178 <argp_parse@@Base+0x221c>
   141c4:	b	1402c <argp_parse@@Base+0x20d0>
   141c8:	andeq	r0, r0, #2
   141cc:	andeq	r0, r0, #1
   141d0:	andeq	r0, r0, #4
   141d4:	ldr	r2, [r0, #24]
   141d8:	ldr	r3, [r0, #28]
   141dc:	push	{r4, r5, r6, lr}
   141e0:	sub	r3, r3, r2
   141e4:	ldr	r2, [r0, #16]
   141e8:	mov	r4, r0
   141ec:	cmp	r3, r2
   141f0:	mov	r5, r1
   141f4:	bls	141fc <argp_parse@@Base+0x22a0>
   141f8:	bl	16ed8 <argp_error@@Base+0xc3c>
   141fc:	ldr	r1, [r4, #20]
   14200:	ldr	r3, [r4, #8]
   14204:	cmp	r1, #0
   14208:	addge	r5, r5, r1
   1420c:	cmp	r5, r3
   14210:	ldr	r2, [r4, #28]
   14214:	ldr	r3, [r4, #32]
   14218:	bcc	14254 <argp_parse@@Base+0x22f8>
   1421c:	cmp	r2, r3
   14220:	bcs	1423c <argp_parse@@Base+0x22e0>
   14224:	ldr	r3, [r4, #28]
   14228:	add	r2, r3, #1
   1422c:	str	r2, [r4, #28]
   14230:	mov	r2, #10
   14234:	strb	r2, [r3]
   14238:	pop	{r4, r5, r6, pc}
   1423c:	mov	r1, #1
   14240:	mov	r0, r4
   14244:	bl	17328 <argp_error@@Base+0x108c>
   14248:	cmp	r0, #0
   1424c:	bne	14224 <argp_parse@@Base+0x22c8>
   14250:	pop	{r4, r5, r6, pc}
   14254:	cmp	r2, r3
   14258:	bcs	14270 <argp_parse@@Base+0x2314>
   1425c:	ldr	r3, [r4, #28]
   14260:	add	r2, r3, #1
   14264:	str	r2, [r4, #28]
   14268:	mov	r2, #32
   1426c:	b	14234 <argp_parse@@Base+0x22d8>
   14270:	mov	r1, #1
   14274:	mov	r0, r4
   14278:	bl	17328 <argp_error@@Base+0x108c>
   1427c:	cmp	r0, #0
   14280:	bne	1425c <argp_parse@@Base+0x2300>
   14284:	pop	{r4, r5, r6, pc}
   14288:	push	{r4, r5, r6, lr}
   1428c:	ldr	r5, [r0, #8]
   14290:	ldr	r2, [r0, #12]
   14294:	ldr	ip, [r1, #12]
   14298:	cmp	r5, #0
   1429c:	orr	r2, r2, ip
   142a0:	bne	142b0 <argp_parse@@Base+0x2354>
   142a4:	ldr	r5, [r1, #8]
   142a8:	cmp	r5, #0
   142ac:	beq	142dc <argp_parse@@Base+0x2380>
   142b0:	tst	r2, #16
   142b4:	bne	142dc <argp_parse@@Base+0x2380>
   142b8:	tst	r2, #1
   142bc:	mov	r6, r3
   142c0:	mov	r4, r0
   142c4:	beq	142e4 <argp_parse@@Base+0x2388>
   142c8:	ldr	r2, [r0, #4]
   142cc:	ldr	r1, [pc, #52]	; 14308 <argp_parse@@Base+0x23ac>
   142d0:	mov	r3, r5
   142d4:	mov	r0, r6
   142d8:	bl	1740c <argp_error@@Base+0x1170>
   142dc:	mov	r0, #0
   142e0:	pop	{r4, r5, r6, pc}
   142e4:	mov	r0, r5
   142e8:	bl	11100 <strlen@plt>
   142ec:	add	r1, r0, #6
   142f0:	mov	r0, r6
   142f4:	bl	141d4 <argp_parse@@Base+0x2278>
   142f8:	mov	r3, r5
   142fc:	ldr	r2, [r4, #4]
   14300:	ldr	r1, [pc, #4]	; 1430c <argp_parse@@Base+0x23b0>
   14304:	b	142d4 <argp_parse@@Base+0x2378>
   14308:	andeq	r8, r1, r5, asr #2
   1430c:	andeq	r8, r1, r0, asr r1
   14310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14314:	mov	r6, r3
   14318:	sub	sp, sp, #36	; 0x24
   1431c:	ldr	r3, [r0, #16]
   14320:	str	r1, [sp, #20]
   14324:	str	r3, [sp, #12]
   14328:	ldr	r3, [r0, #8]
   1432c:	ldr	sl, [r2]
   14330:	str	r3, [sp, #16]
   14334:	mov	fp, r2
   14338:	mov	r3, r1
   1433c:	mov	r2, r0
   14340:	ldr	r1, [pc, #404]	; 144dc <argp_parse@@Base+0x2580>
   14344:	ldr	r0, [sp, #16]
   14348:	ldr	r5, [sp, #72]	; 0x48
   1434c:	bl	139dc <argp_parse@@Base+0x1a80>
   14350:	subs	r8, r0, #0
   14354:	moveq	r7, r8
   14358:	moveq	r4, r8
   1435c:	beq	143f0 <argp_parse@@Base+0x2494>
   14360:	mov	r1, #10
   14364:	bl	10fb0 <strchrnul@plt>
   14368:	ldrb	r4, [r0]
   1436c:	mov	r7, r0
   14370:	cmp	r4, #0
   14374:	moveq	r9, r8
   14378:	beq	143a4 <argp_parse@@Base+0x2448>
   1437c:	ldrb	r3, [sl]
   14380:	mov	r9, r8
   14384:	mov	r4, #0
   14388:	mov	r2, #10
   1438c:	cmp	r4, r3
   14390:	blt	14460 <argp_parse@@Base+0x2504>
   14394:	ldr	r3, [fp]
   14398:	mov	r4, #1
   1439c:	add	r3, r3, #1
   143a0:	str	r3, [fp]
   143a4:	add	r1, r7, #1
   143a8:	sub	r1, r1, r9
   143ac:	mov	r0, r5
   143b0:	bl	141d4 <argp_parse@@Base+0x2278>
   143b4:	ldr	r2, [r5, #28]
   143b8:	sub	r3, r7, r9
   143bc:	ldr	r1, [r5, #32]
   143c0:	add	r2, r2, r3
   143c4:	cmp	r1, r2
   143c8:	bcc	1448c <argp_parse@@Base+0x2530>
   143cc:	mov	r2, r3
   143d0:	mov	r1, r9
   143d4:	ldr	r0, [r5, #28]
   143d8:	str	r3, [sp, #24]
   143dc:	bl	10fd4 <memcpy@plt>
   143e0:	ldr	r2, [r5, #28]
   143e4:	ldr	r3, [sp, #24]
   143e8:	add	r3, r2, r3
   143ec:	str	r3, [r5, #28]
   143f0:	ldr	r3, [sp, #16]
   143f4:	cmp	r8, #0
   143f8:	cmpne	r3, r8
   143fc:	beq	14408 <argp_parse@@Base+0x24ac>
   14400:	mov	r0, r8
   14404:	bl	129f8 <argp_parse@@Base+0xa9c>
   14408:	ldr	r3, [sp, #12]
   1440c:	cmp	r3, #0
   14410:	addne	r8, r3, #16
   14414:	bne	144c8 <argp_parse@@Base+0x256c>
   14418:	cmp	r6, #0
   1441c:	moveq	r4, #0
   14420:	andne	r4, r4, #1
   14424:	cmp	r4, #0
   14428:	beq	14450 <argp_parse@@Base+0x24f4>
   1442c:	ldrb	r2, [r7]
   14430:	ldrb	r3, [sl]
   14434:	cmp	r2, #0
   14438:	addne	r3, r3, #1
   1443c:	strbne	r3, [sl]
   14440:	movne	r6, #0
   14444:	bne	14450 <argp_parse@@Base+0x24f4>
   14448:	cmp	r3, #0
   1444c:	strbne	r2, [sl]
   14450:	clz	r0, r6
   14454:	lsr	r0, r0, #5
   14458:	add	sp, sp, #36	; 0x24
   1445c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14460:	add	r9, r7, #1
   14464:	mov	r1, r2
   14468:	mov	r0, r9
   1446c:	str	r3, [sp, #28]
   14470:	str	r2, [sp, #24]
   14474:	bl	10fb0 <strchrnul@plt>
   14478:	add	r4, r4, #1
   1447c:	ldr	r3, [sp, #28]
   14480:	ldr	r2, [sp, #24]
   14484:	mov	r7, r0
   14488:	b	1438c <argp_parse@@Base+0x2430>
   1448c:	mov	r1, r3
   14490:	mov	r0, r5
   14494:	str	r3, [sp, #24]
   14498:	bl	17328 <argp_error@@Base+0x108c>
   1449c:	ldr	r3, [sp, #24]
   144a0:	cmp	r0, #0
   144a4:	bne	143cc <argp_parse@@Base+0x2470>
   144a8:	b	143f0 <argp_parse@@Base+0x2494>
   144ac:	mov	r3, r6
   144b0:	str	r5, [sp]
   144b4:	mov	r2, fp
   144b8:	ldr	r1, [sp, #20]
   144bc:	bl	14310 <argp_parse@@Base+0x23b4>
   144c0:	clz	r6, r0
   144c4:	lsr	r6, r6, #5
   144c8:	add	r8, r8, #16
   144cc:	ldr	r0, [r8, #-32]	; 0xffffffe0
   144d0:	cmp	r0, #0
   144d4:	bne	144ac <argp_parse@@Base+0x2550>
   144d8:	b	14418 <argp_parse@@Base+0x24bc>
   144dc:	andeq	r0, r0, #6
   144e0:	ldr	r2, [r0, #8]
   144e4:	cmp	r2, #0
   144e8:	bne	1451c <argp_parse@@Base+0x25c0>
   144ec:	ldr	r2, [r1, #8]
   144f0:	cmp	r2, #0
   144f4:	bne	1451c <argp_parse@@Base+0x25c0>
   144f8:	ldr	r1, [r1, #12]
   144fc:	ldr	r2, [r0, #12]
   14500:	orr	r2, r2, r1
   14504:	tst	r2, #16
   14508:	ldreq	r2, [r3]
   1450c:	addeq	r1, r2, #1
   14510:	streq	r1, [r3]
   14514:	ldreq	r3, [r0, #4]
   14518:	strbeq	r3, [r2]
   1451c:	mov	r0, #0
   14520:	bx	lr
   14524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14528:	add	fp, sp, #32
   1452c:	sub	sp, sp, #12
   14530:	ldr	r6, [r0, #4]
   14534:	cmp	r6, #0
   14538:	beq	145dc <argp_parse@@Base+0x2680>
   1453c:	mov	r5, r0
   14540:	ldr	r0, [r0, #8]
   14544:	mov	r4, r1
   14548:	bl	11100 <strlen@plt>
   1454c:	ldr	sl, [pc, #324]	; 14698 <argp_parse@@Base+0x273c>
   14550:	ldr	r7, [r5]
   14554:	sub	r9, fp, #36	; 0x24
   14558:	add	r0, r0, #15
   1455c:	bic	r0, r0, #7
   14560:	sub	sp, sp, r0
   14564:	mov	r8, sp
   14568:	str	sp, [r9, #-4]!
   1456c:	ldr	r2, [r7, #20]
   14570:	mov	r0, r7
   14574:	mov	r3, r9
   14578:	ldr	r2, [r2, #24]
   1457c:	mov	r1, sl
   14580:	bl	13718 <argp_parse@@Base+0x17bc>
   14584:	subs	r6, r6, #1
   14588:	add	r7, r7, #28
   1458c:	bne	1456c <argp_parse@@Base+0x2610>
   14590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14594:	cmp	r8, r3
   14598:	bcs	145b8 <argp_parse@@Base+0x265c>
   1459c:	add	r2, r3, #1
   145a0:	str	r2, [fp, #-40]	; 0xffffffd8
   145a4:	ldr	r1, [pc, #240]	; 1469c <argp_parse@@Base+0x2740>
   145a8:	strb	r6, [r3]
   145ac:	mov	r2, r8
   145b0:	mov	r0, r4
   145b4:	bl	1740c <argp_error@@Base+0x1170>
   145b8:	ldm	r5, {r6, r7}
   145bc:	ldr	r8, [pc, #220]	; 146a0 <argp_parse@@Base+0x2744>
   145c0:	cmp	r7, #0
   145c4:	bne	145e4 <argp_parse@@Base+0x2688>
   145c8:	ldm	r5, {r5, r8}
   145cc:	ldr	sl, [pc, #208]	; 146a4 <argp_parse@@Base+0x2748>
   145d0:	add	r5, r5, #28
   145d4:	cmp	r8, #0
   145d8:	bne	14608 <argp_parse@@Base+0x26ac>
   145dc:	sub	sp, fp, #32
   145e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145e4:	ldr	r2, [r6, #20]
   145e8:	mov	r0, r6
   145ec:	mov	r3, r4
   145f0:	ldr	r2, [r2, #24]
   145f4:	mov	r1, r8
   145f8:	bl	13718 <argp_parse@@Base+0x17bc>
   145fc:	add	r6, r6, #28
   14600:	sub	r7, r7, #1
   14604:	b	145c0 <argp_parse@@Base+0x2664>
   14608:	ldr	r7, [r5, #-28]	; 0xffffffe4
   1460c:	ldr	r9, [r5, #-24]	; 0xffffffe8
   14610:	mov	r6, r7
   14614:	cmp	r9, #0
   14618:	subeq	r8, r8, #1
   1461c:	addeq	r5, r5, #28
   14620:	beq	145d4 <argp_parse@@Base+0x2678>
   14624:	ldr	r2, [r6]
   14628:	cmp	r2, #0
   1462c:	beq	1467c <argp_parse@@Base+0x2720>
   14630:	ldr	r1, [r6, #12]
   14634:	tst	r1, #4
   14638:	moveq	r7, r6
   1463c:	tst	r1, #2
   14640:	bne	1467c <argp_parse@@Base+0x2720>
   14644:	ldr	r3, [r6, #8]
   14648:	ldr	r0, [r7, #12]
   1464c:	cmp	r3, #0
   14650:	orr	r1, r1, r0
   14654:	ldreq	r3, [r7, #8]
   14658:	tst	r1, #16
   1465c:	bne	1467c <argp_parse@@Base+0x2720>
   14660:	cmp	r3, #0
   14664:	beq	14688 <argp_parse@@Base+0x272c>
   14668:	tst	r1, #1
   1466c:	movne	r1, sl
   14670:	ldreq	r1, [pc, #48]	; 146a8 <argp_parse@@Base+0x274c>
   14674:	mov	r0, r4
   14678:	bl	1740c <argp_error@@Base+0x1170>
   1467c:	add	r6, r6, #24
   14680:	sub	r9, r9, #1
   14684:	b	14614 <argp_parse@@Base+0x26b8>
   14688:	ldr	r1, [pc, #28]	; 146ac <argp_parse@@Base+0x2750>
   1468c:	mov	r0, r4
   14690:	bl	1740c <argp_error@@Base+0x1170>
   14694:	b	1467c <argp_parse@@Base+0x2720>
   14698:	andeq	r4, r1, r0, ror #9
   1469c:	andeq	r8, r1, r9, asr r1
   146a0:	andeq	r4, r1, r8, lsl #5
   146a4:	andeq	r8, r1, r0, ror #2
   146a8:	andeq	r8, r1, sp, ror #2
   146ac:	andeq	r8, r1, r8, ror r1
   146b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146b4:	mov	r8, r1
   146b8:	ldm	r0, {r5, r6}
   146bc:	cmp	r6, #0
   146c0:	bne	146c8 <argp_parse@@Base+0x276c>
   146c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146c8:	ldm	r5, {r4, r9}
   146cc:	mov	r7, #0
   146d0:	add	r4, r4, #24
   146d4:	cmp	r9, r7
   146d8:	subeq	r6, r6, #1
   146dc:	addeq	r5, r5, #28
   146e0:	beq	146bc <argp_parse@@Base+0x2760>
   146e4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   146e8:	cmp	r0, #0
   146ec:	beq	1470c <argp_parse@@Base+0x27b0>
   146f0:	ldr	r3, [r4, #-12]
   146f4:	tst	r3, #2
   146f8:	bne	1470c <argp_parse@@Base+0x27b0>
   146fc:	mov	r1, r8
   14700:	bl	10f80 <strcmp@plt>
   14704:	cmp	r0, #0
   14708:	beq	14718 <argp_parse@@Base+0x27bc>
   1470c:	add	r7, r7, #1
   14710:	add	r4, r4, #24
   14714:	b	146d4 <argp_parse@@Base+0x2778>
   14718:	mvn	r3, #0
   1471c:	str	r3, [r5, #12]
   14720:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14728:	sub	sp, sp, #44	; 0x2c
   1472c:	ldr	r6, [r0, #16]
   14730:	str	r0, [sp, #8]
   14734:	ldr	r5, [r0]
   14738:	mov	r0, #16
   1473c:	mov	r9, r1
   14740:	bl	13640 <argp_parse@@Base+0x16e4>
   14744:	subs	r4, r0, #0
   14748:	bne	14760 <argp_parse@@Base+0x2804>
   1474c:	ldr	r3, [pc, #1444]	; 14cf8 <argp_parse@@Base+0x2d9c>
   14750:	ldr	r2, [pc, #1444]	; 14cfc <argp_parse@@Base+0x2da0>
   14754:	ldr	r1, [pc, #1444]	; 14d00 <argp_parse@@Base+0x2da4>
   14758:	ldr	r0, [pc, #1444]	; 14d04 <argp_parse@@Base+0x2da8>
   1475c:	bl	11214 <__assert_fail@plt>
   14760:	mov	r3, #0
   14764:	cmp	r5, r3
   14768:	str	r3, [r4, #4]
   1476c:	str	r3, [r4, #12]
   14770:	beq	14cc4 <argp_parse@@Base+0x2d68>
   14774:	ldr	r8, [r5, #12]
   14778:	ands	r8, r8, #4
   1477c:	addeq	r7, r5, #24
   14780:	moveq	fp, r8
   14784:	beq	14b2c <argp_parse@@Base+0x2bd0>
   14788:	ldr	r3, [pc, #1384]	; 14cf8 <argp_parse@@Base+0x2d9c>
   1478c:	mov	r2, #460	; 0x1cc
   14790:	ldr	r1, [pc, #1384]	; 14d00 <argp_parse@@Base+0x2da4>
   14794:	ldr	r0, [pc, #1388]	; 14d08 <argp_parse@@Base+0x2dac>
   14798:	b	1475c <argp_parse@@Base+0x2800>
   1479c:	ldr	r2, [pc, #1384]	; 14d0c <argp_parse@@Base+0x2db0>
   147a0:	ldr	r0, [r4, #4]
   147a4:	cmp	r0, r2
   147a8:	addls	r7, r7, #28
   147ac:	movls	sl, r3
   147b0:	movls	r2, r1
   147b4:	bls	14c90 <argp_parse@@Base+0x2d34>
   147b8:	ldr	r3, [pc, #1336]	; 14cf8 <argp_parse@@Base+0x2d9c>
   147bc:	mov	r2, #476	; 0x1dc
   147c0:	ldr	r1, [pc, #1336]	; 14d00 <argp_parse@@Base+0x2da4>
   147c4:	ldr	r0, [pc, #1348]	; 14d10 <argp_parse@@Base+0x2db4>
   147c8:	b	1475c <argp_parse@@Base+0x2800>
   147cc:	ldrb	r0, [r0]
   147d0:	add	r1, r1, #1
   147d4:	cmp	r0, r8
   147d8:	beq	14c54 <argp_parse@@Base+0x2cf8>
   147dc:	cmp	sl, r1
   147e0:	mov	r0, r1
   147e4:	bhi	147cc <argp_parse@@Base+0x2870>
   147e8:	strb	r8, [sl]
   147ec:	add	sl, sl, #1
   147f0:	b	14c54 <argp_parse@@Base+0x2cf8>
   147f4:	ldr	r8, [r6, #-4]
   147f8:	ldr	r7, [r6, #-8]
   147fc:	cmp	r8, #0
   14800:	bne	14810 <argp_parse@@Base+0x28b4>
   14804:	cmp	r7, #0
   14808:	moveq	r1, r9
   1480c:	beq	1486c <argp_parse@@Base+0x2910>
   14810:	ldr	r3, [sp, #8]
   14814:	sub	r5, r6, #16
   14818:	mov	r0, #28
   1481c:	ldr	r3, [r3, #16]
   14820:	sub	r5, r5, r3
   14824:	bl	13640 <argp_parse@@Base+0x16e4>
   14828:	asr	r5, r5, #4
   1482c:	subs	r1, r0, #0
   14830:	beq	1486c <argp_parse@@Base+0x2910>
   14834:	ldr	r3, [sp, #8]
   14838:	cmp	r9, #0
   1483c:	str	r3, [r1, #16]
   14840:	ldrne	r3, [r9, #20]
   14844:	moveq	r3, #0
   14848:	addne	r3, r3, #1
   1484c:	str	r3, [r1, #20]
   14850:	ldr	r3, [r4, #12]
   14854:	str	r8, [r1, #8]
   14858:	str	r7, [r1]
   1485c:	str	r5, [r1, #4]
   14860:	str	r9, [r1, #12]
   14864:	str	r3, [r1, #24]
   14868:	str	r1, [r4, #12]
   1486c:	ldr	r0, [r6, #-16]
   14870:	bl	14724 <argp_parse@@Base+0x27c8>
   14874:	ldr	r2, [sp, #28]
   14878:	ldr	r3, [r4, #12]
   1487c:	mov	r5, r0
   14880:	cmp	r3, #0
   14884:	bne	148e0 <argp_parse@@Base+0x2984>
   14888:	ldr	r1, [r5, #12]
   1488c:	str	r1, [r2]
   14890:	ldr	r2, [r5, #4]
   14894:	str	r3, [r5, #12]
   14898:	cmp	r2, #0
   1489c:	beq	148c4 <argp_parse@@Base+0x2968>
   148a0:	ldr	r1, [r4, #4]
   148a4:	cmp	r1, #0
   148a8:	bne	148ec <argp_parse@@Base+0x2990>
   148ac:	str	r2, [r4, #4]
   148b0:	ldr	r2, [r5]
   148b4:	str	r2, [r4]
   148b8:	ldr	r2, [r5, #8]
   148bc:	str	r2, [r4, #8]
   148c0:	str	r3, [r5, #4]
   148c4:	mov	r0, r5
   148c8:	bl	138b0 <argp_parse@@Base+0x1954>
   148cc:	add	r6, r6, #16
   148d0:	ldr	r3, [r6, #-16]
   148d4:	cmp	r3, #0
   148d8:	bne	147f4 <argp_parse@@Base+0x2898>
   148dc:	b	14cd8 <argp_parse@@Base+0x2d7c>
   148e0:	add	r2, r3, #24
   148e4:	ldr	r3, [r3, #24]
   148e8:	b	14880 <argp_parse@@Base+0x2924>
   148ec:	add	r3, r2, r1
   148f0:	mov	r7, #28
   148f4:	str	r3, [sp, #12]
   148f8:	mul	r0, r7, r3
   148fc:	bl	13640 <argp_parse@@Base+0x16e4>
   14900:	str	r0, [sp]
   14904:	ldr	r0, [r4, #8]
   14908:	bl	11100 <strlen@plt>
   1490c:	mov	fp, r0
   14910:	ldr	r0, [r5, #8]
   14914:	bl	11100 <strlen@plt>
   14918:	add	r0, fp, r0
   1491c:	add	r0, r0, #1
   14920:	bl	13640 <argp_parse@@Base+0x16e4>
   14924:	ldr	r3, [sp]
   14928:	cmp	r3, #0
   1492c:	cmpne	r0, #0
   14930:	mov	r8, r0
   14934:	ldreq	r3, [pc, #984]	; 14d14 <argp_parse@@Base+0x2db8>
   14938:	ldreq	r2, [pc, #984]	; 14d18 <argp_parse@@Base+0x2dbc>
   1493c:	ldreq	r1, [pc, #956]	; 14d00 <argp_parse@@Base+0x2da4>
   14940:	ldreq	r0, [pc, #980]	; 14d1c <argp_parse@@Base+0x2dc0>
   14944:	beq	1475c <argp_parse@@Base+0x2800>
   14948:	ldr	r3, [sp, #12]
   1494c:	ldr	r2, [pc, #952]	; 14d0c <argp_parse@@Base+0x2db0>
   14950:	cmp	r3, r2
   14954:	ldrhi	r3, [pc, #952]	; 14d14 <argp_parse@@Base+0x2db8>
   14958:	movhi	r2, #972	; 0x3cc
   1495c:	ldrhi	r1, [pc, #924]	; 14d00 <argp_parse@@Base+0x2da4>
   14960:	ldrhi	r0, [pc, #952]	; 14d20 <argp_parse@@Base+0x2dc4>
   14964:	bhi	1475c <argp_parse@@Base+0x2800>
   14968:	ldr	sl, [r4, #4]
   1496c:	ldr	r3, [r4]
   14970:	ldr	r0, [sp]
   14974:	str	r3, [sp, #16]
   14978:	mul	r3, r7, sl
   1497c:	ldr	r1, [sp, #16]
   14980:	mov	r2, r3
   14984:	str	r3, [sp, #24]
   14988:	bl	110d0 <mempcpy@plt>
   1498c:	ldr	r3, [r5, #4]
   14990:	ldr	r1, [r5]
   14994:	str	r3, [sp, #4]
   14998:	mul	r2, r7, r3
   1499c:	bl	10fd4 <memcpy@plt>
   149a0:	ldr	r3, [r4, #8]
   149a4:	mov	r2, fp
   149a8:	mov	r1, r3
   149ac:	mov	r0, r8
   149b0:	str	r3, [sp, #20]
   149b4:	bl	10fd4 <memcpy@plt>
   149b8:	ldr	r1, [sp]
   149bc:	ldr	r3, [sp, #20]
   149c0:	cmp	sl, #0
   149c4:	bne	14a20 <argp_parse@@Base+0x2ac4>
   149c8:	add	r3, r8, fp
   149cc:	str	r3, [sp, #20]
   149d0:	ldr	r3, [sp, #24]
   149d4:	ldr	r1, [r5, #8]
   149d8:	add	r7, r3, #28
   149dc:	ldr	r3, [sp]
   149e0:	ldr	sl, [sp, #20]
   149e4:	add	r7, r3, r7
   149e8:	ldr	r3, [sp, #4]
   149ec:	cmp	r3, #0
   149f0:	bne	14a3c <argp_parse@@Base+0x2ae0>
   149f4:	ldrb	r3, [sp, #4]
   149f8:	ldr	r0, [sp, #16]
   149fc:	strb	r3, [sl]
   14a00:	bl	129f8 <argp_parse@@Base+0xa9c>
   14a04:	ldr	r0, [r4, #8]
   14a08:	bl	129f8 <argp_parse@@Base+0xa9c>
   14a0c:	ldr	r3, [sp]
   14a10:	str	r3, [r4]
   14a14:	ldr	r3, [sp, #12]
   14a18:	stmib	r4, {r3, r8}
   14a1c:	b	148c4 <argp_parse@@Base+0x2968>
   14a20:	ldr	r2, [r1, #8]
   14a24:	sub	sl, sl, #1
   14a28:	sub	r2, r2, r3
   14a2c:	add	r2, r8, r2
   14a30:	str	r2, [r1, #8]
   14a34:	add	r1, r1, #28
   14a38:	b	149c0 <argp_parse@@Base+0x2a64>
   14a3c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   14a40:	ldr	fp, [r7, #-28]	; 0xffffffe4
   14a44:	str	sl, [r7, #-20]	; 0xffffffec
   14a48:	cmp	r3, #0
   14a4c:	ldreq	r3, [sp, #4]
   14a50:	addeq	r7, r7, #28
   14a54:	subeq	r3, r3, #1
   14a58:	streq	r3, [sp, #4]
   14a5c:	beq	149e8 <argp_parse@@Base+0x2a8c>
   14a60:	ldr	r2, [fp, #12]
   14a64:	tst	r2, #8
   14a68:	bne	14aac <argp_parse@@Base+0x2b50>
   14a6c:	ldr	r2, [fp, #4]
   14a70:	sub	r0, r2, #1
   14a74:	cmp	r0, #254	; 0xfe
   14a78:	str	r2, [sp, #36]	; 0x24
   14a7c:	bhi	14aac <argp_parse@@Base+0x2b50>
   14a80:	str	r3, [sp, #32]
   14a84:	str	r1, [sp, #24]
   14a88:	bl	110dc <__ctype_b_loc@plt>
   14a8c:	ldr	r2, [sp, #36]	; 0x24
   14a90:	ldr	r1, [sp, #24]
   14a94:	ldr	r3, [sp, #32]
   14a98:	ldr	ip, [r0]
   14a9c:	lsl	r0, r2, #1
   14aa0:	ldrh	r0, [ip, r0]
   14aa4:	tst	r0, #16384	; 0x4000
   14aa8:	bne	14ce4 <argp_parse@@Base+0x2d88>
   14aac:	add	fp, fp, #24
   14ab0:	sub	r3, r3, #1
   14ab4:	b	14a48 <argp_parse@@Base+0x2aec>
   14ab8:	ldrb	ip, [ip]
   14abc:	add	r2, r2, #1
   14ac0:	cmp	ip, r0
   14ac4:	beq	14ae0 <argp_parse@@Base+0x2b84>
   14ac8:	ldr	lr, [sp, #20]
   14acc:	mov	ip, r2
   14ad0:	cmp	lr, r2
   14ad4:	bhi	14ab8 <argp_parse@@Base+0x2b5c>
   14ad8:	strb	r0, [sl]
   14adc:	add	sl, sl, #1
   14ae0:	add	r1, r1, #1
   14ae4:	b	14aac <argp_parse@@Base+0x2b50>
   14ae8:	ldr	r1, [r7, #-12]
   14aec:	tst	r1, #4
   14af0:	ldreq	r2, [r4, #4]
   14af4:	addeq	r2, r2, #1
   14af8:	streq	r2, [r4, #4]
   14afc:	tst	r1, #8
   14b00:	bne	14b28 <argp_parse@@Base+0x2bcc>
   14b04:	sub	r2, sl, #1
   14b08:	cmp	r2, #254	; 0xfe
   14b0c:	bhi	14b28 <argp_parse@@Base+0x2bcc>
   14b10:	bl	110dc <__ctype_b_loc@plt>
   14b14:	lsl	sl, sl, #1
   14b18:	ldr	r2, [r0]
   14b1c:	ldrh	r2, [r2, sl]
   14b20:	tst	r2, #16384	; 0x4000
   14b24:	addne	fp, fp, #1
   14b28:	add	r7, r7, #24
   14b2c:	ldr	sl, [r7, #-20]	; 0xffffffec
   14b30:	cmp	sl, #0
   14b34:	bne	14ae8 <argp_parse@@Base+0x2b8c>
   14b38:	ldr	r2, [r7, #-24]	; 0xffffffe8
   14b3c:	cmp	r2, #0
   14b40:	bne	14ae8 <argp_parse@@Base+0x2b8c>
   14b44:	ldr	r2, [r7, #-8]
   14b48:	cmp	r2, #0
   14b4c:	bne	14ae8 <argp_parse@@Base+0x2b8c>
   14b50:	ldr	r1, [r7, #-4]
   14b54:	cmp	r1, #0
   14b58:	bne	14ae8 <argp_parse@@Base+0x2b8c>
   14b5c:	ldr	r2, [r4, #4]
   14b60:	mov	r0, #28
   14b64:	str	r1, [sp]
   14b68:	mul	r0, r0, r2
   14b6c:	bl	13640 <argp_parse@@Base+0x16e4>
   14b70:	str	r0, [r4]
   14b74:	add	r0, fp, #1
   14b78:	bl	13640 <argp_parse@@Base+0x16e4>
   14b7c:	ldr	r7, [r4]
   14b80:	ldr	r1, [sp]
   14b84:	cmp	r0, #0
   14b88:	cmpne	r7, #0
   14b8c:	mov	r3, r0
   14b90:	str	r0, [r4, #8]
   14b94:	bne	1479c <argp_parse@@Base+0x2840>
   14b98:	ldr	r3, [pc, #344]	; 14cf8 <argp_parse@@Base+0x2d9c>
   14b9c:	ldr	r2, [pc, #384]	; 14d24 <argp_parse@@Base+0x2dc8>
   14ba0:	ldr	r1, [pc, #344]	; 14d00 <argp_parse@@Base+0x2da4>
   14ba4:	ldr	r0, [pc, #380]	; 14d28 <argp_parse@@Base+0x2dcc>
   14ba8:	b	1475c <argp_parse@@Base+0x2800>
   14bac:	uxtb	r8, r8
   14bb0:	mov	r1, r3
   14bb4:	b	147dc <argp_parse@@Base+0x2880>
   14bb8:	ldr	r1, [r5, #12]
   14bbc:	tst	r1, #4
   14bc0:	bne	14c04 <argp_parse@@Base+0x2ca8>
   14bc4:	b	14c88 <argp_parse@@Base+0x2d2c>
   14bc8:	str	r2, [r7, #-24]	; 0xffffffe8
   14bcc:	ldr	fp, [r5, #20]
   14bd0:	str	r5, [r7, #-28]	; 0xffffffe4
   14bd4:	cmp	fp, #0
   14bd8:	str	sl, [r7, #-20]	; 0xffffffec
   14bdc:	bne	14bf4 <argp_parse@@Base+0x2c98>
   14be0:	ldr	r1, [r5]
   14be4:	cmp	r1, #0
   14be8:	cmpeq	r0, #0
   14bec:	addeq	fp, r8, #1
   14bf0:	movne	fp, r8
   14bf4:	ldr	r1, [sp, #8]
   14bf8:	str	fp, [r7, #-16]
   14bfc:	str	r9, [r7, #-12]
   14c00:	str	r1, [r7, #-8]
   14c04:	ldr	r1, [r7, #-24]	; 0xffffffe8
   14c08:	add	r1, r1, #1
   14c0c:	str	r1, [r7, #-24]	; 0xffffffe8
   14c10:	ldr	r1, [r5, #12]
   14c14:	tst	r1, #8
   14c18:	bne	14c54 <argp_parse@@Base+0x2cf8>
   14c1c:	ldr	r8, [r5, #4]
   14c20:	sub	r1, r8, #1
   14c24:	cmp	r1, #254	; 0xfe
   14c28:	bhi	14c54 <argp_parse@@Base+0x2cf8>
   14c2c:	str	r2, [sp, #4]
   14c30:	str	r3, [sp]
   14c34:	bl	110dc <__ctype_b_loc@plt>
   14c38:	lsl	r1, r8, #1
   14c3c:	ldr	r3, [sp]
   14c40:	ldr	r2, [sp, #4]
   14c44:	ldr	r0, [r0]
   14c48:	ldrh	r1, [r0, r1]
   14c4c:	tst	r1, #16384	; 0x4000
   14c50:	bne	14bac <argp_parse@@Base+0x2c50>
   14c54:	add	r5, r5, #24
   14c58:	ldr	r1, [r5, #4]
   14c5c:	cmp	r1, #0
   14c60:	bne	14bb8 <argp_parse@@Base+0x2c5c>
   14c64:	ldr	r1, [r5]
   14c68:	cmp	r1, #0
   14c6c:	bne	14bb8 <argp_parse@@Base+0x2c5c>
   14c70:	ldr	r1, [r5, #16]
   14c74:	cmp	r1, #0
   14c78:	bne	14bb8 <argp_parse@@Base+0x2c5c>
   14c7c:	ldr	r1, [r5, #20]
   14c80:	cmp	r1, #0
   14c84:	bne	14bb8 <argp_parse@@Base+0x2c5c>
   14c88:	add	r7, r7, #28
   14c8c:	mov	r8, fp
   14c90:	ldr	r0, [r5, #4]
   14c94:	cmp	r0, #0
   14c98:	bne	14bc8 <argp_parse@@Base+0x2c6c>
   14c9c:	ldr	r1, [r5]
   14ca0:	cmp	r1, #0
   14ca4:	bne	14bc8 <argp_parse@@Base+0x2c6c>
   14ca8:	ldr	r1, [r5, #16]
   14cac:	cmp	r1, #0
   14cb0:	bne	14bc8 <argp_parse@@Base+0x2c6c>
   14cb4:	ldr	r1, [r5, #20]
   14cb8:	cmp	r1, #0
   14cbc:	bne	14bc8 <argp_parse@@Base+0x2c6c>
   14cc0:	strb	r1, [sl]
   14cc4:	cmp	r6, #0
   14cc8:	addne	r3, r4, #12
   14ccc:	addne	r6, r6, #16
   14cd0:	strne	r3, [sp, #28]
   14cd4:	bne	148d0 <argp_parse@@Base+0x2974>
   14cd8:	mov	r0, r4
   14cdc:	add	sp, sp, #44	; 0x2c
   14ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ce4:	ldrb	r0, [r1]
   14ce8:	cmp	r0, r2
   14cec:	moveq	r2, r8
   14cf0:	bne	14aac <argp_parse@@Base+0x2b50>
   14cf4:	b	14ac8 <argp_parse@@Base+0x2b6c>
   14cf8:	muleq	r1, lr, r0
   14cfc:	andeq	r0, r0, r2, asr #3
   14d00:	andeq	r8, r1, r0, lsl #3
   14d04:	andeq	r8, r1, ip, lsl #3
   14d08:	muleq	r1, r0, r1
   14d0c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14d10:	andeq	r8, r1, r3, asr #3
   14d14:	andeq	r8, r1, r7, lsr #1
   14d18:	andeq	r0, r0, sl, asr #7
   14d1c:	strdeq	r8, [r1], -ip
   14d20:	andeq	r8, r1, r8, asr #3
   14d24:	ldrdeq	r0, [r0], -sl
   14d28:	andeq	r8, r1, r0, lsr #3
   14d2c:	push	{r4, r5, r6, lr}
   14d30:	mov	r4, r0
   14d34:	mov	r5, r1
   14d38:	ldr	r0, [r0, #12]
   14d3c:	ldr	r1, [r1, #12]
   14d40:	cmp	r0, r1
   14d44:	bne	14d7c <argp_parse@@Base+0x2e20>
   14d48:	ldr	r0, [r5, #8]
   14d4c:	ldr	r3, [r4, #8]
   14d50:	mvn	r2, r0
   14d54:	lsr	r2, r2, #31
   14d58:	cmp	r2, r3, lsr #31
   14d5c:	subne	r0, r3, r0
   14d60:	subeq	r0, r0, r3
   14d64:	cmp	r0, #0
   14d68:	popne	{r4, r5, r6, pc}
   14d6c:	ldr	r0, [r5, #4]
   14d70:	ldr	r3, [r4, #4]
   14d74:	sub	r0, r0, r3
   14d78:	pop	{r4, r5, r6, pc}
   14d7c:	bl	14d2c <argp_parse@@Base+0x2dd0>
   14d80:	cmp	r0, #0
   14d84:	popne	{r4, r5, r6, pc}
   14d88:	ldr	r0, [r5, #8]
   14d8c:	ldr	r3, [r4, #8]
   14d90:	mvn	r2, r0
   14d94:	lsr	r2, r2, #31
   14d98:	cmp	r2, r3, lsr #31
   14d9c:	subne	r0, r3, r0
   14da0:	subeq	r0, r0, r3
   14da4:	cmp	r0, #0
   14da8:	beq	14d6c <argp_parse@@Base+0x2e10>
   14dac:	pop	{r4, r5, r6, pc}
   14db0:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14db4:	mov	r6, r0
   14db8:	ldr	r0, [r0, #16]
   14dbc:	mov	r5, r1
   14dc0:	cmp	r0, #0
   14dc4:	movne	r3, r0
   14dc8:	bne	14dd8 <argp_parse@@Base+0x2e7c>
   14dcc:	ldr	r3, [r6, #12]
   14dd0:	b	14de8 <argp_parse@@Base+0x2e8c>
   14dd4:	mov	r3, r2
   14dd8:	ldr	r2, [r3, #12]
   14ddc:	cmp	r2, #0
   14de0:	bne	14dd4 <argp_parse@@Base+0x2e78>
   14de4:	ldr	r3, [r3, #8]
   14de8:	ldr	r1, [r5, #16]
   14dec:	cmp	r1, #0
   14df0:	movne	r2, r1
   14df4:	bne	14e04 <argp_parse@@Base+0x2ea8>
   14df8:	ldr	r4, [r5, #12]
   14dfc:	b	14e14 <argp_parse@@Base+0x2eb8>
   14e00:	mov	r2, ip
   14e04:	ldr	ip, [r2, #12]
   14e08:	cmp	ip, #0
   14e0c:	bne	14e00 <argp_parse@@Base+0x2ea4>
   14e10:	ldr	r4, [r2, #8]
   14e14:	mvn	r2, r4
   14e18:	lsr	r2, r2, #31
   14e1c:	cmp	r2, r3, lsr #31
   14e20:	subne	r4, r3, r4
   14e24:	subeq	r4, r4, r3
   14e28:	cmp	r4, #0
   14e2c:	bne	14e84 <argp_parse@@Base+0x2f28>
   14e30:	adds	r4, r1, #0
   14e34:	movne	r4, #1
   14e38:	cmp	r0, #0
   14e3c:	rsbeq	r4, r4, #0
   14e40:	rsbne	r4, r4, #1
   14e44:	cmp	r4, #0
   14e48:	bne	14e84 <argp_parse@@Base+0x2f28>
   14e4c:	cmp	r0, #0
   14e50:	beq	14ec0 <argp_parse@@Base+0x2f64>
   14e54:	ldr	r3, [r0, #20]
   14e58:	ldr	r2, [r1, #20]
   14e5c:	cmp	r3, r2
   14e60:	ble	14e90 <argp_parse@@Base+0x2f34>
   14e64:	ldr	r0, [r0, #12]
   14e68:	ldr	r3, [r0, #20]
   14e6c:	cmp	r2, r3
   14e70:	blt	14e64 <argp_parse@@Base+0x2f08>
   14e74:	bl	14d2c <argp_parse@@Base+0x2dd0>
   14e78:	cmp	r0, #0
   14e7c:	movne	r4, r0
   14e80:	moveq	r4, #1
   14e84:	mov	r0, r4
   14e88:	add	sp, sp, #8
   14e8c:	pop	{r4, r5, r6, r7, r8, pc}
   14e90:	bge	14eb4 <argp_parse@@Base+0x2f58>
   14e94:	ldr	r1, [r1, #12]
   14e98:	ldr	r2, [r1, #20]
   14e9c:	cmp	r3, r2
   14ea0:	blt	14e94 <argp_parse@@Base+0x2f38>
   14ea4:	bl	14d2c <argp_parse@@Base+0x2dd0>
   14ea8:	subs	r4, r0, #0
   14eac:	mvneq	r4, #0
   14eb0:	b	14e84 <argp_parse@@Base+0x2f28>
   14eb4:	bl	14d2c <argp_parse@@Base+0x2dd0>
   14eb8:	subs	r4, r0, #0
   14ebc:	bne	14e84 <argp_parse@@Base+0x2f28>
   14ec0:	ldr	r4, [r5, #12]
   14ec4:	ldr	r3, [r6, #12]
   14ec8:	mvn	r2, r4
   14ecc:	lsr	r2, r2, #31
   14ed0:	cmp	r2, r3, lsr #31
   14ed4:	subne	r4, r3, r4
   14ed8:	subeq	r4, r4, r3
   14edc:	cmp	r4, #0
   14ee0:	bne	14e84 <argp_parse@@Base+0x2f28>
   14ee4:	mov	r0, r6
   14ee8:	bl	136dc <argp_parse@@Base+0x1780>
   14eec:	mov	r7, r0
   14ef0:	str	r0, [sp]
   14ef4:	mov	r0, r5
   14ef8:	bl	136dc <argp_parse@@Base+0x1780>
   14efc:	ldr	r3, [r6]
   14f00:	adds	r7, r7, #0
   14f04:	movne	r7, #1
   14f08:	ldr	r3, [r3, #12]
   14f0c:	ands	r3, r7, r3, lsr #3
   14f10:	moveq	r7, r4
   14f14:	str	r0, [sp, #4]
   14f18:	beq	14f2c <argp_parse@@Base+0x2fd0>
   14f1c:	mov	r0, sp
   14f20:	bl	13844 <argp_parse@@Base+0x18e8>
   14f24:	adds	r7, r0, #0
   14f28:	movne	r7, #1
   14f2c:	ldr	r3, [r5]
   14f30:	ldr	r0, [r3, #12]
   14f34:	ands	r0, r0, #8
   14f38:	beq	14f5c <argp_parse@@Base+0x3000>
   14f3c:	ldr	r3, [sp, #4]
   14f40:	cmp	r3, #0
   14f44:	moveq	r0, r4
   14f48:	beq	14f5c <argp_parse@@Base+0x3000>
   14f4c:	add	r0, sp, #4
   14f50:	bl	13844 <argp_parse@@Base+0x18e8>
   14f54:	adds	r0, r0, #0
   14f58:	movne	r0, #1
   14f5c:	subs	r4, r7, r0
   14f60:	bne	14e84 <argp_parse@@Base+0x2f28>
   14f64:	ldr	r2, [r6, #20]
   14f68:	mov	r3, r4
   14f6c:	ldr	r1, [pc, #224]	; 15054 <argp_parse@@Base+0x30f8>
   14f70:	ldr	r2, [r2, #24]
   14f74:	mov	r0, r6
   14f78:	bl	13718 <argp_parse@@Base+0x17bc>
   14f7c:	ldr	r2, [r5, #20]
   14f80:	mov	r3, r4
   14f84:	ldr	r1, [pc, #200]	; 15054 <argp_parse@@Base+0x30f8>
   14f88:	ldr	r2, [r2, #24]
   14f8c:	uxtb	r8, r0
   14f90:	mov	r0, r5
   14f94:	bl	13718 <argp_parse@@Base+0x17bc>
   14f98:	cmp	r8, #0
   14f9c:	uxtb	r5, r0
   14fa0:	beq	14fac <argp_parse@@Base+0x3050>
   14fa4:	mov	r6, r8
   14fa8:	b	14fbc <argp_parse@@Base+0x3060>
   14fac:	ldr	r3, [sp]
   14fb0:	cmp	r3, #0
   14fb4:	ldrbne	r6, [r3]
   14fb8:	beq	14fa4 <argp_parse@@Base+0x3048>
   14fbc:	cmp	r5, #0
   14fc0:	beq	14fcc <argp_parse@@Base+0x3070>
   14fc4:	mov	r7, r5
   14fc8:	b	14fdc <argp_parse@@Base+0x3080>
   14fcc:	ldr	r3, [sp, #4]
   14fd0:	cmp	r3, #0
   14fd4:	ldrbne	r7, [r3]
   14fd8:	beq	14fc4 <argp_parse@@Base+0x3068>
   14fdc:	bl	110b8 <__ctype_tolower_loc@plt>
   14fe0:	ldr	r3, [r0]
   14fe4:	ldr	r4, [r3, r6, lsl #2]
   14fe8:	ldr	r3, [r3, r7, lsl #2]
   14fec:	subs	r4, r4, r3
   14ff0:	bne	14e84 <argp_parse@@Base+0x2f28>
   14ff4:	subs	r4, r7, r6
   14ff8:	bne	14e84 <argp_parse@@Base+0x2f28>
   14ffc:	adds	r4, r5, #0
   15000:	movne	r4, #1
   15004:	cmp	r8, #0
   15008:	rsbeq	r4, r4, #0
   1500c:	rsbne	r4, r4, #1
   15010:	cmp	r4, #0
   15014:	bne	14e84 <argp_parse@@Base+0x2f28>
   15018:	cmp	r8, #0
   1501c:	bne	14e84 <argp_parse@@Base+0x2f28>
   15020:	ldm	sp, {r0, r1}
   15024:	adds	r4, r1, #0
   15028:	movne	r4, #1
   1502c:	cmp	r0, #0
   15030:	rsbeq	r4, r4, #0
   15034:	rsbne	r4, r4, #1
   15038:	cmp	r4, #0
   1503c:	bne	14e84 <argp_parse@@Base+0x2f28>
   15040:	cmp	r0, #0
   15044:	beq	14e84 <argp_parse@@Base+0x2f28>
   15048:	bl	1101c <strcasecmp@plt>
   1504c:	mov	r4, r0
   15050:	b	14e84 <argp_parse@@Base+0x2f28>
   15054:	strdeq	r3, [r1], -r8

00015058 <argp_failure@@Base>:
   15058:	push	{r3}		; (str r3, [sp, #-4]!)
   1505c:	push	{r4, r5, r6, r7, r8, lr}
   15060:	sub	sp, sp, #204	; 0xcc
   15064:	subs	r5, r0, #0
   15068:	mov	r7, r1
   1506c:	mov	r6, r2
   15070:	ldr	r8, [sp, #228]	; 0xe4
   15074:	beq	150a0 <argp_failure@@Base+0x48>
   15078:	ldr	r3, [r5, #16]
   1507c:	tst	r3, #2
   15080:	bne	15090 <argp_failure@@Base+0x38>
   15084:	ldr	r4, [r5, #44]	; 0x2c
   15088:	cmp	r4, #0
   1508c:	bne	150c4 <argp_failure@@Base+0x6c>
   15090:	add	sp, sp, #204	; 0xcc
   15094:	pop	{r4, r5, r6, r7, r8, lr}
   15098:	add	sp, sp, #4
   1509c:	bx	lr
   150a0:	ldr	r3, [pc, #244]	; 1519c <argp_failure@@Base+0x144>
   150a4:	ldr	r4, [r3]
   150a8:	cmp	r4, #0
   150ac:	beq	15090 <argp_failure@@Base+0x38>
   150b0:	mov	r0, r4
   150b4:	bl	11190 <flockfile@plt>
   150b8:	ldr	r3, [pc, #224]	; 151a0 <argp_failure@@Base+0x148>
   150bc:	ldr	r0, [r3]
   150c0:	b	150d0 <argp_failure@@Base+0x78>
   150c4:	mov	r0, r4
   150c8:	bl	11190 <flockfile@plt>
   150cc:	ldr	r0, [r5, #40]	; 0x28
   150d0:	mov	r1, r4
   150d4:	bl	10f68 <fputs_unlocked@plt>
   150d8:	cmp	r8, #0
   150dc:	beq	15110 <argp_failure@@Base+0xb8>
   150e0:	add	r3, sp, #232	; 0xe8
   150e4:	mov	r1, r4
   150e8:	mov	r0, #58	; 0x3a
   150ec:	str	r3, [sp]
   150f0:	bl	11220 <putc_unlocked@plt>
   150f4:	mov	r1, r4
   150f8:	mov	r0, #32
   150fc:	bl	11220 <putc_unlocked@plt>
   15100:	ldr	r2, [sp]
   15104:	mov	r1, r8
   15108:	mov	r0, r4
   1510c:	bl	1116c <vfprintf@plt>
   15110:	cmp	r6, #0
   15114:	beq	15164 <argp_failure@@Base+0x10c>
   15118:	mov	r1, r4
   1511c:	mov	r0, #58	; 0x3a
   15120:	bl	11220 <putc_unlocked@plt>
   15124:	mov	r1, r4
   15128:	mov	r0, #32
   1512c:	bl	11220 <putc_unlocked@plt>
   15130:	mov	r2, #200	; 0xc8
   15134:	mov	r1, sp
   15138:	mov	r0, r6
   1513c:	bl	11130 <strerror_r@plt>
   15140:	cmp	r0, #0
   15144:	bne	1515c <argp_failure@@Base+0x104>
   15148:	mov	r0, r6
   1514c:	bl	11094 <strerror@plt>
   15150:	ldr	r3, [pc, #76]	; 151a4 <argp_failure@@Base+0x14c>
   15154:	cmp	r0, #0
   15158:	moveq	r0, r3
   1515c:	mov	r1, r4
   15160:	bl	10f68 <fputs_unlocked@plt>
   15164:	mov	r1, r4
   15168:	mov	r0, #10
   1516c:	bl	11220 <putc_unlocked@plt>
   15170:	mov	r0, r4
   15174:	bl	11028 <funlockfile@plt>
   15178:	cmp	r7, #0
   1517c:	beq	15090 <argp_failure@@Base+0x38>
   15180:	cmp	r5, #0
   15184:	beq	15194 <argp_failure@@Base+0x13c>
   15188:	ldr	r3, [r5, #16]
   1518c:	tst	r3, #32
   15190:	bne	15090 <argp_failure@@Base+0x38>
   15194:	mov	r0, r7
   15198:	bl	110e8 <exit@plt>
   1519c:	andeq	r9, r2, r0, ror #4
   151a0:	andeq	r9, r2, r8, asr r2
   151a4:	andeq	r8, r1, r5, lsl r2
   151a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151ac:	add	fp, sp, #32
   151b0:	sub	sp, sp, #116	; 0x74
   151b4:	str	r3, [fp, #-104]	; 0xffffff98
   151b8:	subs	r3, r2, #0
   151bc:	str	r0, [fp, #-108]	; 0xffffff94
   151c0:	str	r1, [fp, #-96]	; 0xffffffa0
   151c4:	str	r3, [fp, #-112]	; 0xffffff90
   151c8:	beq	15244 <argp_failure@@Base+0x1ec>
   151cc:	ldr	r5, [pc, #3996]	; 16170 <argp_failure@@Base+0x1118>
   151d0:	mov	r0, r3
   151d4:	bl	11190 <flockfile@plt>
   151d8:	ldr	r9, [r5, #36]	; 0x24
   151dc:	cmp	r9, #0
   151e0:	bne	1521c <argp_failure@@Base+0x1c4>
   151e4:	ldr	r0, [pc, #3976]	; 16174 <argp_failure@@Base+0x111c>
   151e8:	bl	11064 <getenv@plt>
   151ec:	mov	ip, r5
   151f0:	sub	lr, fp, #76	; 0x4c
   151f4:	mov	r4, r0
   151f8:	ldm	ip!, {r0, r1, r2, r3}
   151fc:	cmp	r4, #0
   15200:	movne	r5, #1
   15204:	stmia	lr!, {r0, r1, r2, r3}
   15208:	ldm	ip!, {r0, r1, r2, r3}
   1520c:	stmia	lr!, {r0, r1, r2, r3}
   15210:	ldm	ip, {r0, r1}
   15214:	stm	lr, {r0, r1}
   15218:	bne	15498 <argp_failure@@Base+0x440>
   1521c:	ldr	r5, [pc, #3916]	; 16170 <argp_failure@@Base+0x1118>
   15220:	mov	r3, #0
   15224:	mov	r1, r3
   15228:	ldr	r2, [r5, #32]
   1522c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15230:	bl	16e60 <argp_error@@Base+0xbc4>
   15234:	subs	r4, r0, #0
   15238:	bne	1552c <argp_failure@@Base+0x4d4>
   1523c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15240:	bl	11028 <funlockfile@plt>
   15244:	sub	sp, fp, #32
   15248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1524c:	mov	r3, r1
   15250:	mov	r1, r3
   15254:	str	r3, [fp, #-100]	; 0xffffff9c
   15258:	ldrb	r0, [r1], #1
   1525c:	lsl	r2, r0, #1
   15260:	ldrh	r2, [r6, r2]
   15264:	tst	r2, #8192	; 0x2000
   15268:	bne	1524c <argp_failure@@Base+0x1f4>
   1526c:	ands	r2, r2, #1024	; 0x400
   15270:	movne	r2, r3
   15274:	bne	152f0 <argp_failure@@Base+0x298>
   15278:	cmp	r0, #0
   1527c:	beq	154e8 <argp_failure@@Base+0x490>
   15280:	str	r3, [sp]
   15284:	mov	r1, r2
   15288:	ldr	r3, [pc, #3816]	; 16178 <argp_failure@@Base+0x1120>
   1528c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15290:	bl	15058 <argp_failure@@Base>
   15294:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15298:	ldr	r3, [pc, #3804]	; 1617c <argp_failure@@Base+0x1124>
   1529c:	mov	r0, #9
   152a0:	ldrb	r2, [r3, #14]
   152a4:	cmp	r2, #0
   152a8:	bne	154f0 <argp_failure@@Base+0x498>
   152ac:	ldrb	r1, [r3, #15]
   152b0:	cmp	r1, #32
   152b4:	beq	154f0 <argp_failure@@Base+0x498>
   152b8:	sub	lr, fp, #36	; 0x24
   152bc:	add	r1, lr, r1
   152c0:	ldr	r1, [r1, #-40]	; 0xffffffd8
   152c4:	cmp	r1, ip
   152c8:	blt	154f0 <argp_failure@@Base+0x498>
   152cc:	str	r3, [sp, #4]
   152d0:	ldr	r3, [pc, #3752]	; 16180 <argp_failure@@Base+0x1128>
   152d4:	mov	r1, r2
   152d8:	str	r3, [sp]
   152dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   152e0:	ldr	r3, [pc, #3740]	; 16184 <argp_failure@@Base+0x112c>
   152e4:	bl	15058 <argp_failure@@Base>
   152e8:	b	1521c <argp_failure@@Base+0x1c4>
   152ec:	mov	r2, lr
   152f0:	mov	lr, r2
   152f4:	ldrb	r1, [lr], #1
   152f8:	cmp	r1, #95	; 0x5f
   152fc:	cmpne	r1, #45	; 0x2d
   15300:	lsl	ip, r1, #1
   15304:	moveq	r1, #1
   15308:	ldrh	ip, [r6, ip]
   1530c:	movne	r1, #0
   15310:	lsl	ip, ip, #28
   15314:	orrs	r1, r1, ip, lsr #31
   15318:	bne	152ec <argp_failure@@Base+0x294>
   1531c:	sub	r8, r2, r3
   15320:	mov	r4, r2
   15324:	ldrb	r1, [r2], #1
   15328:	lsl	ip, r1, #1
   1532c:	ldrh	ip, [r6, ip]
   15330:	tst	ip, #8192	; 0x2000
   15334:	bne	15320 <argp_failure@@Base+0x2c8>
   15338:	cmp	r1, #44	; 0x2c
   1533c:	cmpne	r1, #0
   15340:	beq	160b0 <argp_failure@@Base+0x1058>
   15344:	cmp	r1, #61	; 0x3d
   15348:	bne	15368 <argp_failure@@Base+0x310>
   1534c:	mov	r4, r2
   15350:	add	r2, r2, #1
   15354:	ldrb	r3, [r4]
   15358:	lsl	r3, r3, #1
   1535c:	ldrh	r3, [r6, r3]
   15360:	tst	r3, #8192	; 0x2000
   15364:	bne	1534c <argp_failure@@Base+0x2f4>
   15368:	ldrb	r3, [r4]
   1536c:	lsl	r3, r3, #1
   15370:	ldrh	r3, [r6, r3]
   15374:	tst	r3, #2048	; 0x800
   15378:	moveq	sl, r9
   1537c:	moveq	r7, r9
   15380:	beq	153fc <argp_failure@@Base+0x3a4>
   15384:	mov	r0, r4
   15388:	bl	111a8 <atoi@plt>
   1538c:	mov	r3, r4
   15390:	mov	r7, r0
   15394:	ldrb	r2, [r3]
   15398:	add	r1, r3, #1
   1539c:	lsl	r2, r2, #1
   153a0:	ldrh	r2, [r6, r2]
   153a4:	tst	r2, #2048	; 0x800
   153a8:	bne	154b4 <argp_failure@@Base+0x45c>
   153ac:	mov	r4, r3
   153b0:	add	r3, r3, #1
   153b4:	ldrb	r2, [r4]
   153b8:	lsl	r2, r2, #1
   153bc:	ldrh	r2, [r6, r2]
   153c0:	tst	r2, #8192	; 0x2000
   153c4:	bne	153ac <argp_failure@@Base+0x354>
   153c8:	mov	sl, r9
   153cc:	b	153fc <argp_failure@@Base+0x3a4>
   153d0:	ldrb	r2, [r3, #1]
   153d4:	cmp	r2, #111	; 0x6f
   153d8:	bne	160b8 <argp_failure@@Base+0x1060>
   153dc:	ldrb	r2, [r3, #2]
   153e0:	cmp	r2, #45	; 0x2d
   153e4:	bne	160b8 <argp_failure@@Base+0x1060>
   153e8:	sub	r8, r8, #3
   153ec:	mov	r7, r9
   153f0:	mov	sl, r5
   153f4:	add	r3, r3, #3
   153f8:	str	r3, [fp, #-100]	; 0xffffff9c
   153fc:	ldr	r6, [pc, #3448]	; 1617c <argp_failure@@Base+0x1124>
   15400:	mov	r3, #9
   15404:	str	r3, [fp, #-116]	; 0xffffff8c
   15408:	mov	r0, r6
   1540c:	bl	11100 <strlen@plt>
   15410:	cmp	r0, r8
   15414:	bne	154d0 <argp_failure@@Base+0x478>
   15418:	mov	r2, r8
   1541c:	mov	r1, r6
   15420:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15424:	bl	111fc <strncmp@plt>
   15428:	cmp	r0, #0
   1542c:	bne	154d0 <argp_failure@@Base+0x478>
   15430:	cmp	sl, #0
   15434:	beq	154bc <argp_failure@@Base+0x464>
   15438:	ldrb	r2, [r6, #14]
   1543c:	cmp	r2, #0
   15440:	bne	154bc <argp_failure@@Base+0x464>
   15444:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15448:	str	r8, [sp]
   1544c:	str	r3, [sp, #4]
   15450:	mov	r1, r2
   15454:	ldr	r3, [pc, #3372]	; 16188 <argp_failure@@Base+0x1130>
   15458:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1545c:	bl	15058 <argp_failure@@Base>
   15460:	ldr	r3, [pc, #3364]	; 1618c <argp_failure@@Base+0x1134>
   15464:	cmp	r6, r3
   15468:	bne	1548c <argp_failure@@Base+0x434>
   1546c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15470:	mov	r2, #0
   15474:	str	r3, [sp, #4]
   15478:	str	r8, [sp]
   1547c:	ldr	r3, [pc, #3340]	; 16190 <argp_failure@@Base+0x1138>
   15480:	mov	r1, r2
   15484:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15488:	bl	15058 <argp_failure@@Base>
   1548c:	ldrb	r3, [r4]
   15490:	cmp	r3, #44	; 0x2c
   15494:	addeq	r4, r4, #1
   15498:	ldrb	r3, [r4]
   1549c:	cmp	r3, #0
   154a0:	beq	15294 <argp_failure@@Base+0x23c>
   154a4:	bl	110dc <__ctype_b_loc@plt>
   154a8:	mov	r3, r4
   154ac:	ldr	r6, [r0]
   154b0:	b	15250 <argp_failure@@Base+0x1f8>
   154b4:	mov	r3, r1
   154b8:	b	15394 <argp_failure@@Base+0x33c>
   154bc:	ldrb	r3, [r6, #15]
   154c0:	sub	r2, fp, #36	; 0x24
   154c4:	add	r3, r2, r3
   154c8:	str	r7, [r3, #-40]	; 0xffffffd8
   154cc:	b	15460 <argp_failure@@Base+0x408>
   154d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   154d4:	add	r6, r6, #16
   154d8:	subs	r3, r3, #1
   154dc:	str	r3, [fp, #-116]	; 0xffffff8c
   154e0:	bne	15408 <argp_failure@@Base+0x3b0>
   154e4:	b	15460 <argp_failure@@Base+0x408>
   154e8:	mov	r4, r3
   154ec:	b	15498 <argp_failure@@Base+0x440>
   154f0:	subs	r0, r0, #1
   154f4:	add	r3, r3, #16
   154f8:	bne	152a0 <argp_failure@@Base+0x248>
   154fc:	sub	lr, fp, #76	; 0x4c
   15500:	ldr	r4, [pc, #3176]	; 16170 <argp_failure@@Base+0x1118>
   15504:	ldm	lr!, {r0, r1, r2, r3}
   15508:	mov	ip, r4
   1550c:	stmia	ip!, {r0, r1, r2, r3}
   15510:	ldm	lr!, {r0, r1, r2, r3}
   15514:	stmia	ip!, {r0, r1, r2, r3}
   15518:	mov	r3, #1
   1551c:	ldm	lr, {r0, r1}
   15520:	stm	ip, {r0, r1}
   15524:	str	r3, [r4, #36]	; 0x24
   15528:	b	1521c <argp_failure@@Base+0x1c4>
   1552c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15530:	ands	r3, r3, #11
   15534:	moveq	sl, r3
   15538:	beq	15598 <argp_failure@@Base+0x540>
   1553c:	mov	r1, #0
   15540:	ldr	r0, [fp, #-108]	; 0xffffff94
   15544:	bl	14724 <argp_parse@@Base+0x27c8>
   15548:	ldr	r1, [pc, #3140]	; 16194 <argp_failure@@Base+0x113c>
   1554c:	mov	sl, r0
   15550:	bl	146b0 <argp_parse@@Base+0x2754>
   15554:	ldr	r1, [pc, #3132]	; 16198 <argp_failure@@Base+0x1140>
   15558:	mov	r0, sl
   1555c:	bl	146b0 <argp_parse@@Base+0x2754>
   15560:	ldr	r1, [sl, #4]
   15564:	cmp	r1, #0
   15568:	beq	15598 <argp_failure@@Base+0x540>
   1556c:	ldr	r0, [sl]
   15570:	mov	r3, #0
   15574:	mov	r2, r0
   15578:	str	r3, [r2, #24]
   1557c:	add	r3, r3, #1
   15580:	cmp	r1, r3
   15584:	add	r2, r2, #28
   15588:	bne	15578 <argp_failure@@Base+0x520>
   1558c:	ldr	r3, [pc, #3080]	; 1619c <argp_failure@@Base+0x1144>
   15590:	mov	r2, #28
   15594:	bl	111c0 <qsort@plt>
   15598:	ldr	r3, [fp, #-104]	; 0xffffff98
   1559c:	ands	r3, r3, #3
   155a0:	moveq	r5, r3
   155a4:	beq	15744 <argp_failure@@Base+0x6ec>
   155a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   155ac:	bl	138fc <argp_parse@@Base+0x19a0>
   155b0:	mov	r1, #0
   155b4:	ldr	r6, [pc, #3044]	; 161a0 <argp_failure@@Base+0x1148>
   155b8:	mov	r9, #1
   155bc:	add	r3, r0, #14
   155c0:	bic	r3, r3, #7
   155c4:	sub	sp, sp, r3
   155c8:	add	r7, sp, #8
   155cc:	mov	r2, r0
   155d0:	mov	r0, r7
   155d4:	bl	1113c <memset@plt>
   155d8:	ldr	r2, [r4, #24]
   155dc:	ldr	r3, [r4, #28]
   155e0:	ldr	r8, [r5, #28]
   155e4:	sub	r3, r3, r2
   155e8:	ldr	r2, [r4, #16]
   155ec:	cmp	r3, r2
   155f0:	bls	155fc <argp_failure@@Base+0x5a4>
   155f4:	mov	r0, r4
   155f8:	bl	16ed8 <argp_error@@Base+0xc3c>
   155fc:	ldr	r3, [r4, #12]
   15600:	cmp	r9, #0
   15604:	str	r8, [r4, #12]
   15608:	ldrne	r2, [pc, #2964]	; 161a4 <argp_failure@@Base+0x114c>
   1560c:	ldreq	r2, [pc, #2964]	; 161a8 <argp_failure@@Base+0x1150>
   15610:	str	r3, [fp, #-100]	; 0xffffff9c
   15614:	ldr	r1, [pc, #2960]	; 161ac <argp_failure@@Base+0x1154>
   15618:	ldr	r3, [fp, #4]
   1561c:	mov	r0, r4
   15620:	str	r7, [fp, #-76]	; 0xffffffb4
   15624:	bl	1740c <argp_error@@Base+0x1170>
   15628:	ldr	r2, [r4, #24]
   1562c:	ldr	r3, [r4, #28]
   15630:	ldr	r8, [r5, #28]
   15634:	sub	r3, r3, r2
   15638:	ldr	r2, [r4, #16]
   1563c:	cmp	r3, r2
   15640:	bls	1564c <argp_failure@@Base+0x5f4>
   15644:	mov	r0, r4
   15648:	bl	16ed8 <argp_error@@Base+0xc3c>
   1564c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15650:	ldr	r9, [r4, #4]
   15654:	tst	r3, #2
   15658:	str	r8, [r4, #4]
   1565c:	beq	159c0 <argp_failure@@Base+0x968>
   15660:	ldr	r3, [sl, #4]
   15664:	cmp	r3, #0
   15668:	beq	156a8 <argp_failure@@Base+0x650>
   1566c:	ldr	r3, [r4, #28]
   15670:	ldr	r2, [r4, #32]
   15674:	add	r3, r3, #12
   15678:	cmp	r2, r3
   1567c:	bcc	159a8 <argp_failure@@Base+0x950>
   15680:	ldr	r2, [r4, #28]
   15684:	ldr	r3, [r6]
   15688:	str	r3, [r2]
   1568c:	ldr	r3, [r6, #4]
   15690:	str	r3, [r2, #4]
   15694:	ldr	r3, [r6, #8]
   15698:	str	r3, [r2, #8]
   1569c:	ldr	r3, [r4, #28]
   156a0:	add	r3, r3, #12
   156a4:	str	r3, [r4, #28]
   156a8:	mov	r3, #1
   156ac:	sub	r2, fp, #76	; 0x4c
   156b0:	str	r4, [sp]
   156b4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   156b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   156bc:	bl	14310 <argp_parse@@Base+0x23b4>
   156c0:	ldr	r2, [r4, #24]
   156c4:	ldr	r3, [r4, #28]
   156c8:	sub	r3, r3, r2
   156cc:	ldr	r2, [r4, #16]
   156d0:	cmp	r3, r2
   156d4:	mov	r8, r0
   156d8:	bls	156e4 <argp_failure@@Base+0x68c>
   156dc:	mov	r0, r4
   156e0:	bl	16ed8 <argp_error@@Base+0xc3c>
   156e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   156e8:	ldr	r2, [r4, #24]
   156ec:	str	r3, [r4, #12]
   156f0:	ldr	r3, [r4, #28]
   156f4:	sub	r3, r3, r2
   156f8:	ldr	r2, [r4, #16]
   156fc:	cmp	r3, r2
   15700:	bls	1570c <argp_failure@@Base+0x6b4>
   15704:	mov	r0, r4
   15708:	bl	16ed8 <argp_error@@Base+0xc3c>
   1570c:	ldr	r2, [r4, #28]
   15710:	ldr	r3, [r4, #32]
   15714:	str	r9, [r4, #4]
   15718:	cmp	r2, r3
   1571c:	bcs	159dc <argp_failure@@Base+0x984>
   15720:	ldr	r3, [r4, #28]
   15724:	add	r2, r3, #1
   15728:	str	r2, [r4, #28]
   1572c:	mov	r2, #10
   15730:	strb	r2, [r3]
   15734:	mov	r9, #0
   15738:	cmp	r8, r9
   1573c:	bne	155d8 <argp_failure@@Base+0x580>
   15740:	mov	r5, #1
   15744:	ldr	r3, [fp, #-104]	; 0xffffff98
   15748:	tst	r3, #16
   1574c:	beq	15774 <argp_failure@@Base+0x71c>
   15750:	mov	r3, #1
   15754:	str	r3, [sp]
   15758:	mov	r3, #0
   1575c:	str	r4, [sp, #4]
   15760:	mov	r2, r3
   15764:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15768:	ldr	r0, [fp, #-108]	; 0xffffff94
   1576c:	bl	13d78 <argp_parse@@Base+0x1e1c>
   15770:	orr	r5, r5, r0
   15774:	ldr	r3, [fp, #-104]	; 0xffffff98
   15778:	tst	r3, #4
   1577c:	beq	15798 <argp_failure@@Base+0x740>
   15780:	ldr	r3, [fp, #4]
   15784:	ldr	r1, [pc, #2596]	; 161b0 <argp_failure@@Base+0x1158>
   15788:	mov	r2, r3
   1578c:	mov	r0, r4
   15790:	bl	1740c <argp_error@@Base+0x1170>
   15794:	mov	r5, #1
   15798:	ldr	r3, [fp, #-104]	; 0xffffff98
   1579c:	tst	r3, #8
   157a0:	beq	158f8 <argp_failure@@Base+0x8a0>
   157a4:	ldr	r3, [sl, #4]
   157a8:	cmp	r3, #0
   157ac:	beq	158f8 <argp_failure@@Base+0x8a0>
   157b0:	cmp	r5, #0
   157b4:	beq	157dc <argp_failure@@Base+0x784>
   157b8:	ldr	r2, [r4, #28]
   157bc:	ldr	r3, [r4, #32]
   157c0:	cmp	r2, r3
   157c4:	bcs	159f4 <argp_failure@@Base+0x99c>
   157c8:	ldr	r3, [r4, #28]
   157cc:	add	r2, r3, #1
   157d0:	str	r2, [r4, #28]
   157d4:	mov	r2, #10
   157d8:	strb	r2, [r3]
   157dc:	mov	r3, #0
   157e0:	str	r3, [fp, #-88]	; 0xffffffa8
   157e4:	str	r3, [fp, #-84]	; 0xffffffac
   157e8:	str	r3, [fp, #-80]	; 0xffffffb0
   157ec:	ldr	r3, [sl]
   157f0:	str	r3, [fp, #-100]	; 0xffffff9c
   157f4:	ldr	r3, [sl, #4]
   157f8:	str	r3, [fp, #-116]	; 0xffffff8c
   157fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15800:	cmp	r3, #0
   15804:	bne	15a0c <argp_failure@@Base+0x9b4>
   15808:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1580c:	cmp	r3, #0
   15810:	beq	158f4 <argp_failure@@Base+0x89c>
   15814:	ldr	r3, [pc, #2388]	; 16170 <argp_failure@@Base+0x1118>
   15818:	ldr	r3, [r3, #4]
   1581c:	cmp	r3, #0
   15820:	beq	158f4 <argp_failure@@Base+0x89c>
   15824:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15828:	ldr	r1, [pc, #2436]	; 161b4 <argp_failure@@Base+0x115c>
   1582c:	cmp	r3, #0
   15830:	ldr	r0, [pc, #2432]	; 161b8 <argp_failure@@Base+0x1160>
   15834:	ldrne	r2, [r3]
   15838:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   1583c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15840:	bl	139dc <argp_parse@@Base+0x1a80>
   15844:	subs	r5, r0, #0
   15848:	beq	158f4 <argp_failure@@Base+0x89c>
   1584c:	ldrb	r3, [r5]
   15850:	cmp	r3, #0
   15854:	beq	158e0 <argp_failure@@Base+0x888>
   15858:	ldr	r2, [r4, #28]
   1585c:	ldr	r3, [r4, #32]
   15860:	cmp	r2, r3
   15864:	bcs	16050 <argp_failure@@Base+0xff8>
   15868:	ldr	r3, [r4, #28]
   1586c:	add	r2, r3, #1
   15870:	str	r2, [r4, #28]
   15874:	mov	r2, #10
   15878:	strb	r2, [r3]
   1587c:	mov	r0, r5
   15880:	bl	11100 <strlen@plt>
   15884:	subs	r6, r0, #0
   15888:	beq	158bc <argp_failure@@Base+0x864>
   1588c:	ldr	r3, [r4, #28]
   15890:	ldr	r2, [r4, #32]
   15894:	add	r3, r3, r6
   15898:	cmp	r2, r3
   1589c:	bcc	16068 <argp_failure@@Base+0x1010>
   158a0:	mov	r2, r6
   158a4:	mov	r1, r5
   158a8:	ldr	r0, [r4, #28]
   158ac:	bl	10fd4 <memcpy@plt>
   158b0:	ldr	r3, [r4, #28]
   158b4:	add	r6, r3, r6
   158b8:	str	r6, [r4, #28]
   158bc:	ldr	r2, [r4, #28]
   158c0:	ldr	r3, [r4, #32]
   158c4:	cmp	r2, r3
   158c8:	bcs	16080 <argp_failure@@Base+0x1028>
   158cc:	ldr	r3, [r4, #28]
   158d0:	add	r2, r3, #1
   158d4:	str	r2, [r4, #28]
   158d8:	mov	r2, #10
   158dc:	strb	r2, [r3]
   158e0:	ldr	r3, [pc, #2256]	; 161b8 <argp_failure@@Base+0x1160>
   158e4:	cmp	r5, r3
   158e8:	beq	158f4 <argp_failure@@Base+0x89c>
   158ec:	mov	r0, r5
   158f0:	bl	129f8 <argp_parse@@Base+0xa9c>
   158f4:	mov	r5, #1
   158f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   158fc:	tst	r3, #32
   15900:	beq	15928 <argp_failure@@Base+0x8d0>
   15904:	mov	r3, #0
   15908:	str	r3, [sp]
   1590c:	str	r4, [sp, #4]
   15910:	mov	r3, r5
   15914:	mov	r2, #1
   15918:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1591c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15920:	bl	13d78 <argp_parse@@Base+0x1e1c>
   15924:	orr	r5, r5, r0
   15928:	ldr	r3, [fp, #-104]	; 0xffffff98
   1592c:	tst	r3, #64	; 0x40
   15930:	beq	15984 <argp_failure@@Base+0x92c>
   15934:	ldr	r3, [pc, #2176]	; 161bc <argp_failure@@Base+0x1164>
   15938:	mov	r6, r3
   1593c:	ldr	r2, [r3]
   15940:	cmp	r2, #0
   15944:	beq	15984 <argp_failure@@Base+0x92c>
   15948:	cmp	r5, #0
   1594c:	beq	15974 <argp_failure@@Base+0x91c>
   15950:	ldr	r2, [r4, #28]
   15954:	ldr	r3, [r4, #32]
   15958:	cmp	r2, r3
   1595c:	bcs	16098 <argp_failure@@Base+0x1040>
   15960:	ldr	r3, [r4, #28]
   15964:	add	r2, r3, #1
   15968:	str	r2, [r4, #28]
   1596c:	mov	r2, #10
   15970:	strb	r2, [r3]
   15974:	ldr	r2, [r6]
   15978:	ldr	r1, [pc, #2112]	; 161c0 <argp_failure@@Base+0x1168>
   1597c:	mov	r0, r4
   15980:	bl	1740c <argp_error@@Base+0x1170>
   15984:	ldr	r0, [fp, #-112]	; 0xffffff90
   15988:	bl	11028 <funlockfile@plt>
   1598c:	cmp	sl, #0
   15990:	beq	1599c <argp_failure@@Base+0x944>
   15994:	mov	r0, sl
   15998:	bl	138b0 <argp_parse@@Base+0x1954>
   1599c:	mov	r0, r4
   159a0:	bl	172e8 <argp_error@@Base+0x104c>
   159a4:	b	15244 <argp_failure@@Base+0x1ec>
   159a8:	mov	r1, #12
   159ac:	mov	r0, r4
   159b0:	bl	17328 <argp_error@@Base+0x108c>
   159b4:	cmp	r0, #0
   159b8:	bne	15680 <argp_failure@@Base+0x628>
   159bc:	b	156a8 <argp_failure@@Base+0x650>
   159c0:	mov	r1, r4
   159c4:	mov	r0, sl
   159c8:	bl	14524 <argp_parse@@Base+0x25c8>
   159cc:	ldr	r3, [fp, #-104]	; 0xffffff98
   159d0:	orr	r3, r3, #2
   159d4:	str	r3, [fp, #-104]	; 0xffffff98
   159d8:	b	156a8 <argp_failure@@Base+0x650>
   159dc:	mov	r1, #1
   159e0:	mov	r0, r4
   159e4:	bl	17328 <argp_error@@Base+0x108c>
   159e8:	cmp	r0, #0
   159ec:	bne	15720 <argp_failure@@Base+0x6c8>
   159f0:	b	15734 <argp_failure@@Base+0x6dc>
   159f4:	mov	r1, #1
   159f8:	mov	r0, r4
   159fc:	bl	17328 <argp_error@@Base+0x108c>
   15a00:	cmp	r0, #0
   15a04:	bne	157c8 <argp_failure@@Base+0x770>
   15a08:	b	157dc <argp_failure@@Base+0x784>
   15a0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15a10:	ldr	r2, [r4, #24]
   15a14:	ldr	r5, [r3]
   15a18:	ldr	r9, [r3, #8]
   15a1c:	ldr	r3, [r4, #28]
   15a20:	sub	r3, r3, r2
   15a24:	ldr	r2, [r4, #16]
   15a28:	cmp	r3, r2
   15a2c:	bls	15a38 <argp_failure@@Base+0x9e0>
   15a30:	mov	r0, r4
   15a34:	bl	16ed8 <argp_error@@Base+0xc3c>
   15a38:	ldr	r2, [r4, #12]
   15a3c:	ldr	r3, [r4, #4]
   15a40:	str	r2, [fp, #-128]	; 0xffffff80
   15a44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15a48:	str	r3, [fp, #-124]	; 0xffffff84
   15a4c:	mov	r3, #0
   15a50:	str	r3, [r4, #4]
   15a54:	str	r2, [fp, #-76]	; 0xffffffb4
   15a58:	sub	r2, fp, #88	; 0x58
   15a5c:	str	r2, [fp, #-68]	; 0xffffffbc
   15a60:	mov	r2, #1
   15a64:	str	r2, [fp, #-64]	; 0xffffffc0
   15a68:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15a6c:	str	r4, [fp, #-72]	; 0xffffffb8
   15a70:	str	r2, [fp, #-60]	; 0xffffffc4
   15a74:	ldr	r2, [r5, #12]
   15a78:	ands	r2, r2, #8
   15a7c:	str	r2, [fp, #-120]	; 0xffffff88
   15a80:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   15a84:	ldreq	r2, [r3, #4]
   15a88:	addeq	r3, r5, #24
   15a8c:	beq	15ab8 <argp_failure@@Base+0xa60>
   15a90:	str	r3, [fp, #-120]	; 0xffffff88
   15a94:	b	15ac0 <argp_failure@@Base+0xa68>
   15a98:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15a9c:	cmp	r1, #0
   15aa0:	beq	15ab0 <argp_failure@@Base+0xa58>
   15aa4:	ldr	r1, [r3, #-12]
   15aa8:	tst	r1, #2
   15aac:	beq	15c48 <argp_failure@@Base+0xbf0>
   15ab0:	sub	r2, r2, #1
   15ab4:	add	r3, r3, #24
   15ab8:	cmp	r2, #0
   15abc:	bne	15a98 <argp_failure@@Base+0xa40>
   15ac0:	ldr	r3, [pc, #1704]	; 16170 <argp_failure@@Base+0x1118>
   15ac4:	ldr	r2, [r4, #24]
   15ac8:	ldr	r6, [r3, #8]
   15acc:	ldr	r3, [r4, #28]
   15ad0:	sub	r3, r3, r2
   15ad4:	ldr	r2, [r4, #16]
   15ad8:	cmp	r3, r2
   15adc:	bls	15ae8 <argp_failure@@Base+0xa90>
   15ae0:	mov	r0, r4
   15ae4:	bl	16ed8 <argp_error@@Base+0xc3c>
   15ae8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15aec:	str	r6, [r4, #12]
   15af0:	ldr	r7, [pc, #1656]	; 16170 <argp_failure@@Base+0x1118>
   15af4:	ldr	r8, [r3, #4]
   15af8:	mov	r6, r5
   15afc:	cmp	r8, #0
   15b00:	bne	15c50 <argp_failure@@Base+0xbf8>
   15b04:	ldr	r3, [r5, #12]
   15b08:	ldr	r1, [pc, #1632]	; 16170 <argp_failure@@Base+0x1118>
   15b0c:	tst	r3, #8
   15b10:	ldr	r2, [r4, #24]
   15b14:	ldr	r3, [r4, #28]
   15b18:	beq	15d7c <argp_failure@@Base+0xd24>
   15b1c:	sub	r3, r3, r2
   15b20:	ldr	r2, [r4, #16]
   15b24:	ldr	r6, [r1, #16]
   15b28:	cmp	r3, r2
   15b2c:	bls	15b38 <argp_failure@@Base+0xae0>
   15b30:	mov	r0, r4
   15b34:	bl	16ed8 <argp_error@@Base+0xc3c>
   15b38:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b3c:	str	r6, [r4, #12]
   15b40:	add	r6, r5, #24
   15b44:	ldr	r7, [r3, #4]
   15b48:	cmp	r7, #0
   15b4c:	bne	15cec <argp_failure@@Base+0xc94>
   15b50:	ldr	r2, [r4, #24]
   15b54:	ldr	r3, [r4, #28]
   15b58:	sub	r3, r3, r2
   15b5c:	ldr	r2, [r4, #16]
   15b60:	cmp	r3, r2
   15b64:	bls	15b70 <argp_failure@@Base+0xb18>
   15b68:	mov	r0, r4
   15b6c:	bl	16ed8 <argp_error@@Base+0xc3c>
   15b70:	mov	r3, #0
   15b74:	str	r3, [r4, #4]
   15b78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b7c:	cmp	r3, #0
   15b80:	beq	15e1c <argp_failure@@Base+0xdc4>
   15b84:	ldr	r3, [r5, #12]
   15b88:	tst	r3, #8
   15b8c:	bne	15bb8 <argp_failure@@Base+0xb60>
   15b90:	ldr	r6, [r5, #4]
   15b94:	sub	r3, r6, #1
   15b98:	cmp	r3, #254	; 0xfe
   15b9c:	bhi	15bb8 <argp_failure@@Base+0xb60>
   15ba0:	bl	110dc <__ctype_b_loc@plt>
   15ba4:	lsl	r6, r6, #1
   15ba8:	ldr	r3, [r0]
   15bac:	ldrh	r3, [r3, r6]
   15bb0:	tst	r3, #16384	; 0x4000
   15bb4:	bne	15be0 <argp_failure@@Base+0xb88>
   15bb8:	ldr	r3, [r5]
   15bbc:	cmp	r3, #0
   15bc0:	bne	15be0 <argp_failure@@Base+0xb88>
   15bc4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bc8:	sub	r2, fp, #76	; 0x4c
   15bcc:	ldr	r0, [r5, #16]
   15bd0:	ldr	r1, [r3, #20]
   15bd4:	bl	13a20 <argp_parse@@Base+0x1ac4>
   15bd8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bdc:	str	r3, [fp, #-88]	; 0xffffffa8
   15be0:	ldr	r2, [r4, #24]
   15be4:	ldr	r3, [r4, #28]
   15be8:	sub	r3, r3, r2
   15bec:	ldr	r2, [r4, #16]
   15bf0:	cmp	r3, r2
   15bf4:	bls	15c00 <argp_failure@@Base+0xba8>
   15bf8:	mov	r0, r4
   15bfc:	bl	16ed8 <argp_error@@Base+0xc3c>
   15c00:	ldr	r3, [fp, #-124]	; 0xffffff84
   15c04:	ldr	r2, [r4, #24]
   15c08:	str	r3, [r4, #4]
   15c0c:	ldr	r3, [r4, #28]
   15c10:	sub	r3, r3, r2
   15c14:	ldr	r2, [r4, #16]
   15c18:	cmp	r3, r2
   15c1c:	bls	15c28 <argp_failure@@Base+0xbd0>
   15c20:	mov	r0, r4
   15c24:	bl	16ed8 <argp_error@@Base+0xc3c>
   15c28:	ldr	r3, [fp, #-128]	; 0xffffff80
   15c2c:	str	r3, [r4, #12]
   15c30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c34:	add	r3, r3, #28
   15c38:	str	r3, [fp, #-100]	; 0xffffff9c
   15c3c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15c40:	sub	r3, r3, #1
   15c44:	b	157f8 <argp_failure@@Base+0x7a0>
   15c48:	mov	r3, #1
   15c4c:	b	15a90 <argp_failure@@Base+0xa38>
   15c50:	ldr	r2, [r6, #12]
   15c54:	tst	r2, #8
   15c58:	str	r2, [fp, #-136]	; 0xffffff78
   15c5c:	bne	15c94 <argp_failure@@Base+0xc3c>
   15c60:	ldr	r3, [r6, #4]
   15c64:	sub	r1, r3, #1
   15c68:	cmp	r1, #254	; 0xfe
   15c6c:	str	r3, [fp, #-132]	; 0xffffff7c
   15c70:	bhi	15c94 <argp_failure@@Base+0xc3c>
   15c74:	bl	110dc <__ctype_b_loc@plt>
   15c78:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15c7c:	ldr	r2, [fp, #-136]	; 0xffffff78
   15c80:	lsl	r1, r3, #1
   15c84:	ldr	r0, [r0]
   15c88:	ldrh	r1, [r0, r1]
   15c8c:	tst	r1, #16384	; 0x4000
   15c90:	bne	160c4 <argp_failure@@Base+0x106c>
   15c94:	add	r6, r6, #24
   15c98:	sub	r8, r8, #1
   15c9c:	b	15afc <argp_failure@@Base+0xaa4>
   15ca0:	mov	r1, #1
   15ca4:	mov	r0, r4
   15ca8:	bl	17328 <argp_error@@Base+0x108c>
   15cac:	cmp	r0, #0
   15cb0:	bne	160f4 <argp_failure@@Base+0x109c>
   15cb4:	b	16108 <argp_failure@@Base+0x10b0>
   15cb8:	mov	r1, #1
   15cbc:	mov	r0, r4
   15cc0:	str	r2, [fp, #-132]	; 0xffffff7c
   15cc4:	bl	17328 <argp_error@@Base+0x108c>
   15cc8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   15ccc:	cmp	r0, #0
   15cd0:	bne	1611c <argp_failure@@Base+0x10c4>
   15cd4:	b	1612c <argp_failure@@Base+0x10d4>
   15cd8:	ldr	r3, [r5, #8]
   15cdc:	cmp	r3, #0
   15ce0:	movne	r3, #1
   15ce4:	strne	r3, [fp, #-80]	; 0xffffffb0
   15ce8:	b	16168 <argp_failure@@Base+0x1110>
   15cec:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15cf0:	cmp	r3, #0
   15cf4:	beq	15d58 <argp_failure@@Base+0xd00>
   15cf8:	ldr	r3, [r6, #-12]
   15cfc:	tst	r3, #2
   15d00:	bne	15d58 <argp_failure@@Base+0xd00>
   15d04:	ldr	r3, [pc, #1124]	; 16170 <argp_failure@@Base+0x1118>
   15d08:	sub	r1, fp, #76	; 0x4c
   15d0c:	ldr	r0, [r3, #16]
   15d10:	bl	13bf8 <argp_parse@@Base+0x1c9c>
   15d14:	ldr	r8, [r6, #-24]	; 0xffffffe8
   15d18:	mov	r0, r8
   15d1c:	bl	11100 <strlen@plt>
   15d20:	subs	r9, r0, #0
   15d24:	beq	15d58 <argp_failure@@Base+0xd00>
   15d28:	ldr	r3, [r4, #28]
   15d2c:	ldr	r2, [r4, #32]
   15d30:	add	r3, r3, r9
   15d34:	cmp	r2, r3
   15d38:	bcc	15d64 <argp_failure@@Base+0xd0c>
   15d3c:	mov	r2, r9
   15d40:	mov	r1, r8
   15d44:	ldr	r0, [r4, #28]
   15d48:	bl	10fd4 <memcpy@plt>
   15d4c:	ldr	r3, [r4, #28]
   15d50:	add	r9, r3, r9
   15d54:	str	r9, [r4, #28]
   15d58:	sub	r7, r7, #1
   15d5c:	add	r6, r6, #24
   15d60:	b	15b48 <argp_failure@@Base+0xaf0>
   15d64:	mov	r1, r9
   15d68:	mov	r0, r4
   15d6c:	bl	17328 <argp_error@@Base+0x108c>
   15d70:	cmp	r0, #0
   15d74:	bne	15d3c <argp_failure@@Base+0xce4>
   15d78:	b	15d58 <argp_failure@@Base+0xd00>
   15d7c:	sub	r3, r3, r2
   15d80:	ldr	r2, [r4, #16]
   15d84:	ldr	r6, [r1, #12]
   15d88:	cmp	r3, r2
   15d8c:	bls	15d98 <argp_failure@@Base+0xd40>
   15d90:	mov	r0, r4
   15d94:	bl	16ed8 <argp_error@@Base+0xc3c>
   15d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d9c:	str	r6, [r4, #12]
   15da0:	ldr	r7, [pc, #968]	; 16170 <argp_failure@@Base+0x1118>
   15da4:	ldr	r6, [r3, #4]
   15da8:	ldr	r8, [pc, #1044]	; 161c4 <argp_failure@@Base+0x116c>
   15dac:	add	r9, r5, #24
   15db0:	cmp	r6, #0
   15db4:	beq	15b50 <argp_failure@@Base+0xaf8>
   15db8:	ldr	r3, [r9, #-24]	; 0xffffffe8
   15dbc:	cmp	r3, #0
   15dc0:	beq	15e10 <argp_failure@@Base+0xdb8>
   15dc4:	ldr	r3, [r9, #-12]
   15dc8:	tst	r3, #2
   15dcc:	bne	15e10 <argp_failure@@Base+0xdb8>
   15dd0:	sub	r1, fp, #76	; 0x4c
   15dd4:	ldr	r0, [r7, #12]
   15dd8:	bl	13bf8 <argp_parse@@Base+0x1c9c>
   15ddc:	ldr	r2, [r9, #-24]	; 0xffffffe8
   15de0:	mov	r1, r8
   15de4:	mov	r0, r4
   15de8:	bl	1740c <argp_error@@Base+0x1170>
   15dec:	ldr	r2, [r5, #8]
   15df0:	cmp	r2, #0
   15df4:	beq	15e10 <argp_failure@@Base+0xdb8>
   15df8:	ldr	r3, [r5, #12]
   15dfc:	mov	r0, r4
   15e00:	tst	r3, #1
   15e04:	ldrne	r1, [pc, #956]	; 161c8 <argp_failure@@Base+0x1170>
   15e08:	ldreq	r1, [pc, #956]	; 161cc <argp_failure@@Base+0x1174>
   15e0c:	bl	1740c <argp_error@@Base+0x1170>
   15e10:	sub	r6, r6, #1
   15e14:	add	r9, r9, #24
   15e18:	b	15db0 <argp_failure@@Base+0xd58>
   15e1c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15e20:	ldr	r6, [r5, #16]
   15e24:	ldr	r1, [r5, #4]
   15e28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e2c:	ldr	r2, [r2, #20]
   15e30:	mov	r0, r6
   15e34:	bl	139dc <argp_parse@@Base+0x1a80>
   15e38:	subs	r5, r0, #0
   15e3c:	beq	15f50 <argp_failure@@Base+0xef8>
   15e40:	ldrb	r3, [r5]
   15e44:	cmp	r3, #0
   15e48:	beq	15f40 <argp_failure@@Base+0xee8>
   15e4c:	ldr	r2, [r4, #24]
   15e50:	ldr	r3, [r4, #28]
   15e54:	sub	r3, r3, r2
   15e58:	ldr	r2, [r4, #16]
   15e5c:	cmp	r3, r2
   15e60:	bls	15e6c <argp_failure@@Base+0xe14>
   15e64:	mov	r0, r4
   15e68:	bl	16ed8 <argp_error@@Base+0xc3c>
   15e6c:	ldr	r2, [r4, #24]
   15e70:	ldr	r3, [r4, #28]
   15e74:	ldr	r7, [r4, #20]
   15e78:	sub	r3, r3, r2
   15e7c:	ldr	r8, [pc, #748]	; 16170 <argp_failure@@Base+0x1118>
   15e80:	ldr	r2, [r4, #16]
   15e84:	bic	r7, r7, r7, asr #31
   15e88:	cmp	r3, r2
   15e8c:	ldr	r9, [r8, #20]
   15e90:	bls	15e9c <argp_failure@@Base+0xe44>
   15e94:	mov	r0, r4
   15e98:	bl	16ed8 <argp_error@@Base+0xc3c>
   15e9c:	ldr	r2, [r4, #24]
   15ea0:	ldr	r3, [r4, #28]
   15ea4:	str	r9, [r4, #4]
   15ea8:	sub	r3, r3, r2
   15eac:	ldr	r2, [r4, #16]
   15eb0:	ldr	r8, [r8, #20]
   15eb4:	cmp	r3, r2
   15eb8:	bls	15ec4 <argp_failure@@Base+0xe6c>
   15ebc:	mov	r0, r4
   15ec0:	bl	16ed8 <argp_error@@Base+0xc3c>
   15ec4:	ldr	r3, [pc, #676]	; 16170 <argp_failure@@Base+0x1118>
   15ec8:	str	r8, [r4, #12]
   15ecc:	ldr	r1, [r3, #20]
   15ed0:	add	r3, r1, #3
   15ed4:	cmp	r7, r3
   15ed8:	bls	15fb8 <argp_failure@@Base+0xf60>
   15edc:	ldr	r2, [r4, #28]
   15ee0:	ldr	r3, [r4, #32]
   15ee4:	cmp	r2, r3
   15ee8:	bcs	15fa0 <argp_failure@@Base+0xf48>
   15eec:	ldr	r3, [r4, #28]
   15ef0:	add	r2, r3, #1
   15ef4:	str	r2, [r4, #28]
   15ef8:	mov	r2, #10
   15efc:	strb	r2, [r3]
   15f00:	mov	r0, r5
   15f04:	bl	11100 <strlen@plt>
   15f08:	subs	r7, r0, #0
   15f0c:	beq	15f40 <argp_failure@@Base+0xee8>
   15f10:	ldr	r3, [r4, #28]
   15f14:	ldr	r2, [r4, #32]
   15f18:	add	r3, r3, r7
   15f1c:	cmp	r2, r3
   15f20:	bcc	16020 <argp_failure@@Base+0xfc8>
   15f24:	mov	r2, r7
   15f28:	mov	r1, r5
   15f2c:	ldr	r0, [r4, #28]
   15f30:	bl	10fd4 <memcpy@plt>
   15f34:	ldr	r3, [r4, #28]
   15f38:	add	r7, r3, r7
   15f3c:	str	r7, [r4, #28]
   15f40:	cmp	r6, r5
   15f44:	beq	15f50 <argp_failure@@Base+0xef8>
   15f48:	mov	r0, r5
   15f4c:	bl	129f8 <argp_parse@@Base+0xa9c>
   15f50:	ldr	r2, [r4, #24]
   15f54:	ldr	r3, [r4, #28]
   15f58:	sub	r3, r3, r2
   15f5c:	ldr	r2, [r4, #16]
   15f60:	cmp	r3, r2
   15f64:	bls	15f70 <argp_failure@@Base+0xf18>
   15f68:	mov	r0, r4
   15f6c:	bl	16ed8 <argp_error@@Base+0xc3c>
   15f70:	mov	r3, #0
   15f74:	str	r3, [r4, #4]
   15f78:	ldr	r2, [r4, #28]
   15f7c:	ldr	r3, [r4, #32]
   15f80:	cmp	r2, r3
   15f84:	bcs	16038 <argp_failure@@Base+0xfe0>
   15f88:	ldr	r3, [r4, #28]
   15f8c:	add	r2, r3, #1
   15f90:	str	r2, [r4, #28]
   15f94:	mov	r2, #10
   15f98:	strb	r2, [r3]
   15f9c:	b	15bd8 <argp_failure@@Base+0xb80>
   15fa0:	mov	r1, #1
   15fa4:	mov	r0, r4
   15fa8:	bl	17328 <argp_error@@Base+0x108c>
   15fac:	cmp	r0, #0
   15fb0:	bne	15eec <argp_failure@@Base+0xe94>
   15fb4:	b	15f00 <argp_failure@@Base+0xea8>
   15fb8:	cmp	r7, r1
   15fbc:	bcc	16014 <argp_failure@@Base+0xfbc>
   15fc0:	ldr	r3, [r4, #28]
   15fc4:	ldr	r2, [r4, #32]
   15fc8:	add	r3, r3, #3
   15fcc:	cmp	r2, r3
   15fd0:	bcc	15ffc <argp_failure@@Base+0xfa4>
   15fd4:	ldr	r2, [pc, #500]	; 161d0 <argp_failure@@Base+0x1178>
   15fd8:	ldr	r3, [r4, #28]
   15fdc:	ldrh	r1, [r2]
   15fe0:	ldrb	r2, [r2, #2]
   15fe4:	strh	r1, [r3]
   15fe8:	strb	r2, [r3, #2]
   15fec:	ldr	r3, [r4, #28]
   15ff0:	add	r3, r3, #3
   15ff4:	str	r3, [r4, #28]
   15ff8:	b	15f00 <argp_failure@@Base+0xea8>
   15ffc:	mov	r1, #3
   16000:	mov	r0, r4
   16004:	bl	17328 <argp_error@@Base+0x108c>
   16008:	cmp	r0, #0
   1600c:	bne	15fd4 <argp_failure@@Base+0xf7c>
   16010:	b	15f00 <argp_failure@@Base+0xea8>
   16014:	mov	r0, r4
   16018:	bl	13954 <argp_parse@@Base+0x19f8>
   1601c:	b	15f00 <argp_failure@@Base+0xea8>
   16020:	mov	r1, r7
   16024:	mov	r0, r4
   16028:	bl	17328 <argp_error@@Base+0x108c>
   1602c:	cmp	r0, #0
   16030:	bne	15f24 <argp_failure@@Base+0xecc>
   16034:	b	15f40 <argp_failure@@Base+0xee8>
   16038:	mov	r1, #1
   1603c:	mov	r0, r4
   16040:	bl	17328 <argp_error@@Base+0x108c>
   16044:	cmp	r0, #0
   16048:	bne	15f88 <argp_failure@@Base+0xf30>
   1604c:	b	15bd8 <argp_failure@@Base+0xb80>
   16050:	mov	r1, #1
   16054:	mov	r0, r4
   16058:	bl	17328 <argp_error@@Base+0x108c>
   1605c:	cmp	r0, #0
   16060:	bne	15868 <argp_failure@@Base+0x810>
   16064:	b	1587c <argp_failure@@Base+0x824>
   16068:	mov	r1, r6
   1606c:	mov	r0, r4
   16070:	bl	17328 <argp_error@@Base+0x108c>
   16074:	cmp	r0, #0
   16078:	bne	158a0 <argp_failure@@Base+0x848>
   1607c:	b	158bc <argp_failure@@Base+0x864>
   16080:	mov	r1, #1
   16084:	mov	r0, r4
   16088:	bl	17328 <argp_error@@Base+0x108c>
   1608c:	cmp	r0, #0
   16090:	bne	158cc <argp_failure@@Base+0x874>
   16094:	b	158e0 <argp_failure@@Base+0x888>
   16098:	mov	r1, #1
   1609c:	mov	r0, r4
   160a0:	bl	17328 <argp_error@@Base+0x108c>
   160a4:	cmp	r0, #0
   160a8:	bne	15960 <argp_failure@@Base+0x908>
   160ac:	b	15974 <argp_failure@@Base+0x91c>
   160b0:	cmp	r0, #110	; 0x6e
   160b4:	beq	153d0 <argp_failure@@Base+0x378>
   160b8:	mov	sl, r5
   160bc:	mov	r7, r5
   160c0:	b	153fc <argp_failure@@Base+0x3a4>
   160c4:	ldrb	r1, [r9]
   160c8:	cmp	r3, r1
   160cc:	bne	15c94 <argp_failure@@Base+0xc3c>
   160d0:	tst	r2, #2
   160d4:	bne	16168 <argp_failure@@Base+0x1110>
   160d8:	sub	r1, fp, #76	; 0x4c
   160dc:	ldr	r0, [r7, #8]
   160e0:	bl	13bf8 <argp_parse@@Base+0x1c9c>
   160e4:	ldr	r2, [r4, #28]
   160e8:	ldr	r3, [r4, #32]
   160ec:	cmp	r2, r3
   160f0:	bcs	15ca0 <argp_failure@@Base+0xc48>
   160f4:	ldr	r3, [r4, #28]
   160f8:	add	r2, r3, #1
   160fc:	str	r2, [r4, #28]
   16100:	mov	r2, #45	; 0x2d
   16104:	strb	r2, [r3]
   16108:	ldr	r1, [r4, #28]
   1610c:	ldr	r3, [r4, #32]
   16110:	ldrb	r2, [r9]
   16114:	cmp	r1, r3
   16118:	bcs	15cb8 <argp_failure@@Base+0xc60>
   1611c:	ldr	r3, [r4, #28]
   16120:	add	r1, r3, #1
   16124:	str	r1, [r4, #28]
   16128:	strb	r2, [r3]
   1612c:	ldr	r3, [fp, #-120]	; 0xffffff88
   16130:	cmp	r3, #0
   16134:	beq	16144 <argp_failure@@Base+0x10ec>
   16138:	ldr	r3, [r7]
   1613c:	cmp	r3, #0
   16140:	beq	15cd8 <argp_failure@@Base+0xc80>
   16144:	ldr	r2, [r5, #8]
   16148:	cmp	r2, #0
   1614c:	beq	16168 <argp_failure@@Base+0x1110>
   16150:	ldr	r3, [r5, #12]
   16154:	mov	r0, r4
   16158:	tst	r3, #1
   1615c:	ldrne	r1, [pc, #112]	; 161d4 <argp_failure@@Base+0x117c>
   16160:	ldreq	r1, [pc, #112]	; 161d8 <argp_failure@@Base+0x1180>
   16164:	bl	1740c <argp_error@@Base+0x1170>
   16168:	add	r9, r9, #1
   1616c:	b	15c94 <argp_failure@@Base+0xc3c>
   16170:	andeq	r9, r2, ip, lsl r2
   16174:	andeq	r8, r1, sl, lsr #4
   16178:	andeq	r8, r1, sp, lsl #5
   1617c:	strheq	r8, [r1], -r2
   16180:	ldrdeq	r8, [r1], -lr
   16184:	andeq	r8, r1, sl, lsr #5
   16188:	andeq	r8, r1, r8, lsr r2
   1618c:	andeq	r8, r1, r2, asr #2
   16190:	andeq	r8, r1, r7, ror #4
   16194:	andeq	r7, r1, r7, ror #24
   16198:	andeq	r7, r1, pc, asr ip
   1619c:			; <UNDEFINED> instruction: 0x00014db0
   161a0:	strdeq	r8, [r1], -sl
   161a4:	andeq	r8, r1, r6, ror #5
   161a8:	strdeq	r8, [r1], -r3
   161ac:	andeq	r8, r1, sp, ror #5
   161b0:	andeq	r8, r1, r7, lsl #6
   161b4:	andeq	r0, r0, #5
   161b8:	andeq	r8, r1, r6, asr r3
   161bc:	andeq	r9, r2, ip, lsr #5
   161c0:	andeq	r8, r1, sl, asr #7
   161c4:	andeq	r8, r1, r3, asr #6
   161c8:	andeq	r8, r1, r8, asr #6
   161cc:	andeq	r8, r1, lr, asr #6
   161d0:	andeq	r8, r1, r2, asr r3
   161d4:	andeq	r8, r1, lr, lsr r3
   161d8:	andeq	r8, r1, r6, lsr #5

000161dc <argp_help@@Base>:
   161dc:	push	{r0, r1, r2, lr}
   161e0:	str	r3, [sp]
   161e4:	mov	r3, r2
   161e8:	mov	r2, r1
   161ec:	mov	r1, #0
   161f0:	bl	151a8 <argp_failure@@Base+0x150>
   161f4:	add	sp, sp, #12
   161f8:	pop	{pc}		; (ldr pc, [sp], #4)

000161fc <argp_state_help@@Base>:
   161fc:	push	{r0, r1, r2, r4, r5, lr}
   16200:	subs	r4, r0, #0
   16204:	mov	r5, r2
   16208:	beq	16220 <argp_state_help@@Base+0x24>
   1620c:	ldr	r3, [r4, #16]
   16210:	tst	r3, #2
   16214:	beq	16238 <argp_state_help@@Base+0x3c>
   16218:	add	sp, sp, #12
   1621c:	pop	{r4, r5, pc}
   16220:	cmp	r1, #0
   16224:	beq	16218 <argp_state_help@@Base+0x1c>
   16228:	ldr	r3, [pc, #100]	; 16294 <argp_state_help@@Base+0x98>
   1622c:	mov	r0, r4
   16230:	ldr	r3, [r3]
   16234:	b	16250 <argp_state_help@@Base+0x54>
   16238:	cmp	r1, #0
   1623c:	beq	16218 <argp_state_help@@Base+0x1c>
   16240:	tst	r3, #64	; 0x40
   16244:	ldr	r0, [r4]
   16248:	ldr	r3, [r4, #40]	; 0x28
   1624c:	orrne	r5, r5, #128	; 0x80
   16250:	str	r3, [sp]
   16254:	mov	r2, r1
   16258:	mov	r3, r5
   1625c:	mov	r1, r4
   16260:	bl	151a8 <argp_failure@@Base+0x150>
   16264:	cmp	r4, #0
   16268:	beq	16278 <argp_state_help@@Base+0x7c>
   1626c:	ldr	r3, [r4, #16]
   16270:	tst	r3, #32
   16274:	bne	16218 <argp_state_help@@Base+0x1c>
   16278:	ands	r0, r5, #256	; 0x100
   1627c:	ldrne	r3, [pc, #20]	; 16298 <argp_state_help@@Base+0x9c>
   16280:	ldrne	r0, [r3]
   16284:	bne	16290 <argp_state_help@@Base+0x94>
   16288:	tst	r5, #512	; 0x200
   1628c:	beq	16218 <argp_state_help@@Base+0x1c>
   16290:	bl	110e8 <exit@plt>
   16294:	andeq	r9, r2, r8, asr r2
   16298:	andeq	r9, r2, r4, asr r2

0001629c <argp_error@@Base>:
   1629c:	push	{r1, r2, r3}
   162a0:	push	{r0, r1, r4, r5, lr}
   162a4:	subs	r5, r0, #0
   162a8:	beq	162d4 <argp_error@@Base+0x38>
   162ac:	ldr	r3, [r5, #16]
   162b0:	tst	r3, #2
   162b4:	bne	162c4 <argp_error@@Base+0x28>
   162b8:	ldr	r4, [r5, #44]	; 0x2c
   162bc:	cmp	r4, #0
   162c0:	bne	16300 <argp_error@@Base+0x64>
   162c4:	add	sp, sp, #8
   162c8:	pop	{r4, r5, lr}
   162cc:	add	sp, sp, #12
   162d0:	bx	lr
   162d4:	ldr	r3, [pc, #144]	; 1636c <argp_error@@Base+0xd0>
   162d8:	ldr	r4, [r3]
   162dc:	cmp	r4, #0
   162e0:	beq	162c4 <argp_error@@Base+0x28>
   162e4:	mov	r0, r4
   162e8:	bl	11190 <flockfile@plt>
   162ec:	add	r3, sp, #24
   162f0:	str	r3, [sp, #4]
   162f4:	ldr	r3, [pc, #116]	; 16370 <argp_error@@Base+0xd4>
   162f8:	ldr	r0, [r3]
   162fc:	b	16314 <argp_error@@Base+0x78>
   16300:	mov	r0, r4
   16304:	bl	11190 <flockfile@plt>
   16308:	ldr	r0, [r5, #40]	; 0x28
   1630c:	add	r3, sp, #24
   16310:	str	r3, [sp, #4]
   16314:	mov	r1, r4
   16318:	bl	10f68 <fputs_unlocked@plt>
   1631c:	mov	r1, r4
   16320:	mov	r0, #58	; 0x3a
   16324:	bl	11220 <putc_unlocked@plt>
   16328:	mov	r1, r4
   1632c:	mov	r0, #32
   16330:	bl	11220 <putc_unlocked@plt>
   16334:	ldr	r2, [sp, #4]
   16338:	ldr	r1, [sp, #20]
   1633c:	mov	r0, r4
   16340:	bl	1116c <vfprintf@plt>
   16344:	mov	r1, r4
   16348:	mov	r0, #10
   1634c:	bl	11220 <putc_unlocked@plt>
   16350:	mov	r0, r5
   16354:	mov	r2, #260	; 0x104
   16358:	mov	r1, r4
   1635c:	bl	161fc <argp_state_help@@Base>
   16360:	mov	r0, r4
   16364:	bl	11028 <funlockfile@plt>
   16368:	b	162c4 <argp_error@@Base+0x28>
   1636c:	andeq	r9, r2, r0, ror #4
   16370:	andeq	r9, r2, r8, asr r2
   16374:	ldr	r3, [r1, #32]
   16378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1637c:	ldr	r7, [r1, #28]
   16380:	ldr	r6, [r1]
   16384:	add	r8, r0, r3, lsl #2
   16388:	mov	lr, r6
   1638c:	mov	r4, r7
   16390:	cmp	lr, r3
   16394:	movle	r2, #0
   16398:	movgt	r2, #1
   1639c:	cmp	r4, r3
   163a0:	movge	r2, #0
   163a4:	cmp	r2, #0
   163a8:	bne	163c0 <argp_error@@Base+0x124>
   163ac:	sub	r3, r6, r3
   163b0:	add	r3, r3, r7
   163b4:	str	r3, [r1, #28]
   163b8:	str	r6, [r1, #32]
   163bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163c0:	sub	r2, r3, r4
   163c4:	sub	r5, lr, r3
   163c8:	cmp	r5, r2
   163cc:	lsl	ip, r4, #2
   163d0:	addle	r2, r0, ip
   163d4:	movle	r9, r8
   163d8:	movle	ip, #0
   163dc:	ble	16410 <argp_error@@Base+0x174>
   163e0:	sub	r2, lr, r2
   163e4:	add	ip, r0, ip
   163e8:	add	r5, r0, r2, lsl #2
   163ec:	add	lr, r0, lr, lsl #2
   163f0:	ldr	r9, [ip]
   163f4:	ldr	sl, [r5]
   163f8:	str	sl, [ip], #4
   163fc:	str	r9, [r5], #4
   16400:	cmp	lr, r5
   16404:	bne	163f0 <argp_error@@Base+0x154>
   16408:	mov	lr, r2
   1640c:	b	16390 <argp_error@@Base+0xf4>
   16410:	ldr	sl, [r2]
   16414:	ldr	fp, [r9]
   16418:	add	ip, ip, #1
   1641c:	cmp	r5, ip
   16420:	str	fp, [r2], #4
   16424:	str	sl, [r9], #4
   16428:	bgt	16410 <argp_error@@Base+0x174>
   1642c:	add	r4, r4, r5
   16430:	mov	r2, lr
   16434:	b	16408 <argp_error@@Base+0x16c>
   16438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1643c:	sub	sp, sp, #44	; 0x2c
   16440:	mov	sl, r1
   16444:	ldr	r4, [sp, #88]	; 0x58
   16448:	str	r0, [sp, #36]	; 0x24
   1644c:	str	r2, [sp, #32]
   16450:	ldr	r8, [r4, #20]
   16454:	str	r3, [sp, #20]
   16458:	mov	r9, r8
   1645c:	mov	r3, r9
   16460:	ldrb	r6, [r3], #1
   16464:	cmp	r6, #0
   16468:	cmpne	r6, #61	; 0x3d
   1646c:	movne	r6, #1
   16470:	moveq	r6, #0
   16474:	bne	1653c <argp_error@@Base+0x2a0>
   16478:	sub	r3, r9, r8
   1647c:	str	r3, [sp, #24]
   16480:	ldr	r3, [sp, #20]
   16484:	add	r7, r3, r6, lsl #4
   16488:	ldr	r5, [r3, r6, lsl #4]
   1648c:	cmp	r5, #0
   16490:	bne	16544 <argp_error@@Base+0x2a8>
   16494:	mov	r8, r5
   16498:	mov	r7, r5
   1649c:	mov	fp, r3
   164a0:	mvn	r3, #0
   164a4:	str	r3, [sp, #16]
   164a8:	str	r5, [sp, #28]
   164ac:	str	r5, [sp, #12]
   164b0:	ldr	r0, [fp]
   164b4:	cmp	r0, #0
   164b8:	bne	16578 <argp_error@@Base+0x2dc>
   164bc:	cmp	r5, #0
   164c0:	cmpeq	r8, #0
   164c4:	beq	166b0 <argp_error@@Base+0x414>
   164c8:	ldr	r3, [sp, #92]	; 0x5c
   164cc:	cmp	r3, #0
   164d0:	beq	164fc <argp_error@@Base+0x260>
   164d4:	cmp	r5, #0
   164d8:	ldr	r7, [pc, #908]	; 1686c <argp_error@@Base+0x5d0>
   164dc:	beq	1663c <argp_error@@Base+0x3a0>
   164e0:	ldr	r3, [r4, #20]
   164e4:	ldr	r2, [sl]
   164e8:	str	r3, [sp]
   164ec:	ldr	r1, [pc, #892]	; 16870 <argp_error@@Base+0x5d4>
   164f0:	ldr	r3, [sp, #96]	; 0x60
   164f4:	ldr	r0, [r7]
   164f8:	bl	11118 <fprintf@plt>
   164fc:	ldr	r3, [sp, #28]
   16500:	cmp	r3, #0
   16504:	beq	16510 <argp_error@@Base+0x274>
   16508:	mov	r0, r8
   1650c:	bl	129f8 <argp_parse@@Base+0xa9c>
   16510:	ldr	r5, [r4, #20]
   16514:	mov	r0, r5
   16518:	bl	11100 <strlen@plt>
   1651c:	ldr	r3, [r4]
   16520:	add	r3, r3, #1
   16524:	str	r3, [r4]
   16528:	mov	r3, #0
   1652c:	add	r0, r5, r0
   16530:	str	r0, [r4, #20]
   16534:	str	r3, [r4, #8]
   16538:	b	16738 <argp_error@@Base+0x49c>
   1653c:	mov	r9, r3
   16540:	b	1645c <argp_error@@Base+0x1c0>
   16544:	ldr	r2, [sp, #24]
   16548:	mov	r1, r8
   1654c:	mov	r0, r5
   16550:	bl	111fc <strncmp@plt>
   16554:	cmp	r0, #0
   16558:	bne	16570 <argp_error@@Base+0x2d4>
   1655c:	mov	r0, r5
   16560:	bl	11100 <strlen@plt>
   16564:	ldr	r3, [sp, #24]
   16568:	cmp	r3, r0
   1656c:	beq	16744 <argp_error@@Base+0x4a8>
   16570:	add	r6, r6, #1
   16574:	b	16480 <argp_error@@Base+0x1e4>
   16578:	ldr	r2, [sp, #24]
   1657c:	ldr	r1, [r4, #20]
   16580:	bl	111fc <strncmp@plt>
   16584:	cmp	r0, #0
   16588:	bne	16628 <argp_error@@Base+0x38c>
   1658c:	cmp	r7, #0
   16590:	moveq	r7, fp
   16594:	ldreq	r3, [sp, #12]
   16598:	streq	r3, [sp, #16]
   1659c:	beq	16628 <argp_error@@Base+0x38c>
   165a0:	ldr	r3, [sp, #84]	; 0x54
   165a4:	cmp	r3, #0
   165a8:	bne	165dc <argp_error@@Base+0x340>
   165ac:	ldr	r1, [r7, #4]
   165b0:	ldr	r2, [fp, #4]
   165b4:	cmp	r1, r2
   165b8:	bne	165dc <argp_error@@Base+0x340>
   165bc:	ldr	r1, [r7, #8]
   165c0:	ldr	r2, [fp, #8]
   165c4:	cmp	r1, r2
   165c8:	bne	165dc <argp_error@@Base+0x340>
   165cc:	ldr	r1, [r7, #12]
   165d0:	ldr	r2, [fp, #12]
   165d4:	cmp	r1, r2
   165d8:	beq	16628 <argp_error@@Base+0x38c>
   165dc:	cmp	r5, #0
   165e0:	bne	16628 <argp_error@@Base+0x38c>
   165e4:	ldr	r3, [sp, #92]	; 0x5c
   165e8:	cmp	r3, #0
   165ec:	beq	16610 <argp_error@@Base+0x374>
   165f0:	cmp	r8, #0
   165f4:	bne	1661c <argp_error@@Base+0x380>
   165f8:	mov	r0, r6
   165fc:	bl	13640 <argp_parse@@Base+0x16e4>
   16600:	subs	r8, r0, #0
   16604:	bne	16848 <argp_error@@Base+0x5ac>
   16608:	mov	r5, #1
   1660c:	b	16628 <argp_error@@Base+0x38c>
   16610:	cmp	r8, #0
   16614:	mov	r5, #1
   16618:	beq	16628 <argp_error@@Base+0x38c>
   1661c:	ldr	r3, [sp, #12]
   16620:	mov	r2, #1
   16624:	strb	r2, [r8, r3]
   16628:	ldr	r3, [sp, #12]
   1662c:	add	fp, fp, #16
   16630:	add	r3, r3, #1
   16634:	str	r3, [sp, #12]
   16638:	b	164b0 <argp_error@@Base+0x214>
   1663c:	ldr	r0, [r7]
   16640:	bl	11190 <flockfile@plt>
   16644:	ldr	r3, [r4, #20]
   16648:	ldr	r2, [sl]
   1664c:	str	r3, [sp]
   16650:	ldr	r1, [pc, #540]	; 16874 <argp_error@@Base+0x5d8>
   16654:	ldr	r3, [sp, #96]	; 0x60
   16658:	ldr	r0, [r7]
   1665c:	bl	11118 <fprintf@plt>
   16660:	ldr	r9, [pc, #528]	; 16878 <argp_error@@Base+0x5dc>
   16664:	cmp	r6, r5
   16668:	bne	16684 <argp_error@@Base+0x3e8>
   1666c:	ldr	r1, [r7]
   16670:	mov	r0, #10
   16674:	bl	11178 <fputc@plt>
   16678:	ldr	r0, [r7]
   1667c:	bl	11028 <funlockfile@plt>
   16680:	b	164fc <argp_error@@Base+0x260>
   16684:	ldrb	r3, [r8, r5]
   16688:	cmp	r3, #0
   1668c:	beq	166a8 <argp_error@@Base+0x40c>
   16690:	ldr	r3, [sp, #20]
   16694:	ldr	r2, [sp, #96]	; 0x60
   16698:	mov	r1, r9
   1669c:	ldr	r3, [r3, r5, lsl #4]
   166a0:	ldr	r0, [r7]
   166a4:	bl	11118 <fprintf@plt>
   166a8:	add	r5, r5, #1
   166ac:	b	16664 <argp_error@@Base+0x3c8>
   166b0:	cmp	r7, #0
   166b4:	bne	16748 <argp_error@@Base+0x4ac>
   166b8:	ldr	r3, [sp, #84]	; 0x54
   166bc:	cmp	r3, #0
   166c0:	beq	166f4 <argp_error@@Base+0x458>
   166c4:	ldr	r3, [r4]
   166c8:	ldr	r3, [sl, r3, lsl #2]
   166cc:	ldrb	r3, [r3, #1]
   166d0:	cmp	r3, #45	; 0x2d
   166d4:	beq	166f4 <argp_error@@Base+0x458>
   166d8:	ldr	r3, [r4, #20]
   166dc:	ldr	r0, [sp, #32]
   166e0:	ldrb	r1, [r3]
   166e4:	bl	1110c <strchr@plt>
   166e8:	cmp	r0, #0
   166ec:	mvnne	r0, #0
   166f0:	bne	1673c <argp_error@@Base+0x4a0>
   166f4:	ldr	r3, [sp, #92]	; 0x5c
   166f8:	cmp	r3, #0
   166fc:	beq	16720 <argp_error@@Base+0x484>
   16700:	ldr	r0, [pc, #356]	; 1686c <argp_error@@Base+0x5d0>
   16704:	ldr	r3, [r4, #20]
   16708:	ldr	r2, [sl]
   1670c:	str	r3, [sp]
   16710:	ldr	r1, [pc, #356]	; 1687c <argp_error@@Base+0x5e0>
   16714:	ldr	r3, [sp, #96]	; 0x60
   16718:	ldr	r0, [r0]
   1671c:	bl	11118 <fprintf@plt>
   16720:	ldr	r3, [r4]
   16724:	mov	r2, #0
   16728:	add	r3, r3, #1
   1672c:	str	r2, [r4, #20]
   16730:	str	r3, [r4]
   16734:	str	r2, [r4, #8]
   16738:	mov	r0, #63	; 0x3f
   1673c:	add	sp, sp, #44	; 0x2c
   16740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16744:	str	r6, [sp, #16]
   16748:	ldr	r3, [r4]
   1674c:	mov	r1, #0
   16750:	add	r2, r3, #1
   16754:	str	r2, [r4]
   16758:	str	r1, [r4, #20]
   1675c:	ldrb	r1, [r9]
   16760:	cmp	r1, #0
   16764:	ldr	r1, [r7, #4]
   16768:	beq	167b0 <argp_error@@Base+0x514>
   1676c:	cmp	r1, #0
   16770:	addne	r9, r9, #1
   16774:	strne	r9, [r4, #12]
   16778:	bne	167d4 <argp_error@@Base+0x538>
   1677c:	ldr	r3, [sp, #92]	; 0x5c
   16780:	cmp	r3, #0
   16784:	beq	167a8 <argp_error@@Base+0x50c>
   16788:	ldr	r0, [pc, #220]	; 1686c <argp_error@@Base+0x5d0>
   1678c:	ldr	r3, [r7]
   16790:	ldr	r2, [sl]
   16794:	str	r3, [sp]
   16798:	ldr	r1, [pc, #224]	; 16880 <argp_error@@Base+0x5e4>
   1679c:	ldr	r3, [sp, #96]	; 0x60
   167a0:	ldr	r0, [r0]
   167a4:	bl	11118 <fprintf@plt>
   167a8:	ldr	r3, [r7, #12]
   167ac:	b	16534 <argp_error@@Base+0x298>
   167b0:	cmp	r1, #1
   167b4:	bne	167d4 <argp_error@@Base+0x538>
   167b8:	ldr	r1, [sp, #36]	; 0x24
   167bc:	cmp	r2, r1
   167c0:	bge	167fc <argp_error@@Base+0x560>
   167c4:	add	r3, r3, #2
   167c8:	str	r3, [r4]
   167cc:	ldr	r3, [sl, r2, lsl #2]
   167d0:	str	r3, [r4, #12]
   167d4:	ldr	r3, [sp, #80]	; 0x50
   167d8:	cmp	r3, #0
   167dc:	ldrne	r2, [sp, #16]
   167e0:	strne	r2, [r3]
   167e4:	ldr	r3, [r7, #8]
   167e8:	ldr	r0, [r7, #12]
   167ec:	cmp	r3, #0
   167f0:	strne	r0, [r3]
   167f4:	movne	r0, #0
   167f8:	b	1673c <argp_error@@Base+0x4a0>
   167fc:	ldr	r3, [sp, #92]	; 0x5c
   16800:	cmp	r3, #0
   16804:	beq	16828 <argp_error@@Base+0x58c>
   16808:	ldr	r0, [pc, #92]	; 1686c <argp_error@@Base+0x5d0>
   1680c:	ldr	r3, [r7]
   16810:	ldr	r2, [sl]
   16814:	str	r3, [sp]
   16818:	ldr	r1, [pc, #100]	; 16884 <argp_error@@Base+0x5e8>
   1681c:	ldr	r3, [sp, #96]	; 0x60
   16820:	ldr	r0, [r0]
   16824:	bl	11118 <fprintf@plt>
   16828:	ldr	r3, [r7, #12]
   1682c:	str	r3, [r4, #8]
   16830:	ldr	r3, [sp, #32]
   16834:	ldrb	r0, [r3]
   16838:	cmp	r0, #58	; 0x3a
   1683c:	moveq	r0, #58	; 0x3a
   16840:	movne	r0, #63	; 0x3f
   16844:	b	1673c <argp_error@@Base+0x4a0>
   16848:	mov	r2, r6
   1684c:	mov	r1, #0
   16850:	bl	1113c <memset@plt>
   16854:	ldr	r3, [sp, #16]
   16858:	mov	r2, #1
   1685c:	strb	r2, [r8, r3]
   16860:	mov	r3, #1
   16864:	str	r3, [sp, #28]
   16868:	b	1661c <argp_error@@Base+0x380>
   1686c:	andeq	r9, r2, r0, ror #4
   16870:	ldrdeq	r8, [r1], -lr
   16874:	strdeq	r8, [r1], -lr
   16878:	andeq	r8, r1, sp, lsr #8
   1687c:	andeq	r8, r1, r5, lsr r4
   16880:	andeq	r8, r1, r5, asr r4
   16884:	andeq	r8, r1, r2, lsl #9
   16888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1688c:	sub	sp, sp, #36	; 0x24
   16890:	subs	r8, r0, #0
   16894:	ldr	r4, [sp, #80]	; 0x50
   16898:	ldr	fp, [sp, #72]	; 0x48
   1689c:	ldr	r5, [sp, #76]	; 0x4c
   168a0:	ldr	r9, [r4, #4]
   168a4:	bgt	168b4 <argp_error@@Base+0x618>
   168a8:	mvn	r0, #0
   168ac:	add	sp, sp, #36	; 0x24
   168b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168b4:	mov	sl, r3
   168b8:	mov	r3, #0
   168bc:	str	r3, [r4, #12]
   168c0:	ldr	r3, [r4]
   168c4:	mov	r7, r1
   168c8:	cmp	r3, #0
   168cc:	mov	r6, r2
   168d0:	beq	168f4 <argp_error@@Base+0x658>
   168d4:	ldr	r3, [r4, #16]
   168d8:	cmp	r3, #0
   168dc:	beq	168fc <argp_error@@Base+0x660>
   168e0:	ldrb	r3, [r2]
   168e4:	sub	r3, r3, #43	; 0x2b
   168e8:	tst	r3, #253	; 0xfd
   168ec:	addeq	r6, r2, #1
   168f0:	b	16938 <argp_error@@Base+0x69c>
   168f4:	mov	r3, #1
   168f8:	str	r3, [r4]
   168fc:	ldr	r3, [r4]
   16900:	str	r3, [r4, #32]
   16904:	str	r3, [r4, #28]
   16908:	mov	r3, #0
   1690c:	str	r3, [r4, #20]
   16910:	ldrb	r2, [r6]
   16914:	cmp	r2, #45	; 0x2d
   16918:	moveq	r3, #2
   1691c:	beq	16928 <argp_error@@Base+0x68c>
   16920:	cmp	r2, #43	; 0x2b
   16924:	bne	16a38 <argp_error@@Base+0x79c>
   16928:	add	r6, r6, #1
   1692c:	str	r3, [r4, #24]
   16930:	mov	r3, #1
   16934:	str	r3, [r4, #16]
   16938:	ldrb	r3, [r6]
   1693c:	cmp	r3, #58	; 0x3a
   16940:	ldr	r3, [r4, #20]
   16944:	moveq	r9, #0
   16948:	cmp	r3, #0
   1694c:	beq	1695c <argp_error@@Base+0x6c0>
   16950:	ldrb	r3, [r3]
   16954:	cmp	r3, #0
   16958:	bne	16af0 <argp_error@@Base+0x854>
   1695c:	ldr	r3, [r4]
   16960:	ldr	r2, [r4, #32]
   16964:	cmp	r2, r3
   16968:	ldr	r2, [r4, #28]
   1696c:	strgt	r3, [r4, #32]
   16970:	cmp	r3, r2
   16974:	ldr	r2, [r4, #24]
   16978:	strlt	r3, [r4, #28]
   1697c:	cmp	r2, #1
   16980:	bne	169b8 <argp_error@@Base+0x71c>
   16984:	ldr	r1, [r4, #32]
   16988:	ldr	r2, [r4, #28]
   1698c:	cmp	r2, r1
   16990:	beq	16a68 <argp_error@@Base+0x7cc>
   16994:	cmp	r3, r1
   16998:	beq	169a8 <argp_error@@Base+0x70c>
   1699c:	mov	r1, r4
   169a0:	mov	r0, r7
   169a4:	bl	16374 <argp_error@@Base+0xd8>
   169a8:	ldr	r3, [r4]
   169ac:	cmp	r8, r3
   169b0:	bgt	16a74 <argp_error@@Base+0x7d8>
   169b4:	str	r3, [r4, #32]
   169b8:	ldr	r3, [r4]
   169bc:	cmp	r8, r3
   169c0:	beq	16a18 <argp_error@@Base+0x77c>
   169c4:	ldr	r1, [pc, #920]	; 16d64 <argp_error@@Base+0xac8>
   169c8:	ldr	r0, [r7, r3, lsl #2]
   169cc:	str	r3, [sp, #24]
   169d0:	bl	10f80 <strcmp@plt>
   169d4:	cmp	r0, #0
   169d8:	bne	16a18 <argp_error@@Base+0x77c>
   169dc:	ldr	r1, [r4, #28]
   169e0:	ldr	r3, [sp, #24]
   169e4:	ldr	r2, [r4, #32]
   169e8:	add	r3, r3, #1
   169ec:	cmp	r1, r2
   169f0:	str	r3, [r4]
   169f4:	streq	r3, [r4, #28]
   169f8:	beq	16a10 <argp_error@@Base+0x774>
   169fc:	cmp	r3, r2
   16a00:	beq	16a10 <argp_error@@Base+0x774>
   16a04:	mov	r1, r4
   16a08:	mov	r0, r7
   16a0c:	bl	16374 <argp_error@@Base+0xd8>
   16a10:	str	r8, [r4, #32]
   16a14:	str	r8, [r4]
   16a18:	ldr	r2, [r4]
   16a1c:	cmp	r8, r2
   16a20:	bne	16a9c <argp_error@@Base+0x800>
   16a24:	ldr	r3, [r4, #28]
   16a28:	ldr	r2, [r4, #32]
   16a2c:	cmp	r3, r2
   16a30:	strne	r3, [r4]
   16a34:	b	168a8 <argp_error@@Base+0x60c>
   16a38:	ldr	r3, [sp, #84]	; 0x54
   16a3c:	cmp	r3, #0
   16a40:	beq	16a50 <argp_error@@Base+0x7b4>
   16a44:	mov	r3, #0
   16a48:	str	r3, [r4, #24]
   16a4c:	b	16930 <argp_error@@Base+0x694>
   16a50:	ldr	r0, [pc, #784]	; 16d68 <argp_error@@Base+0xacc>
   16a54:	bl	11064 <getenv@plt>
   16a58:	cmp	r0, #0
   16a5c:	bne	16a44 <argp_error@@Base+0x7a8>
   16a60:	mov	r3, #1
   16a64:	b	16a48 <argp_error@@Base+0x7ac>
   16a68:	cmp	r3, r2
   16a6c:	strne	r3, [r4, #28]
   16a70:	b	169a8 <argp_error@@Base+0x70c>
   16a74:	ldr	r2, [r7, r3, lsl #2]
   16a78:	ldrb	r1, [r2]
   16a7c:	cmp	r1, #45	; 0x2d
   16a80:	bne	16a90 <argp_error@@Base+0x7f4>
   16a84:	ldrb	r2, [r2, #1]
   16a88:	cmp	r2, #0
   16a8c:	bne	169b4 <argp_error@@Base+0x718>
   16a90:	add	r3, r3, #1
   16a94:	str	r3, [r4]
   16a98:	b	169a8 <argp_error@@Base+0x70c>
   16a9c:	ldr	r3, [r7, r2, lsl #2]
   16aa0:	ldrb	r1, [r3]
   16aa4:	cmp	r1, #45	; 0x2d
   16aa8:	bne	16ab8 <argp_error@@Base+0x81c>
   16aac:	ldrb	r1, [r3, #1]
   16ab0:	cmp	r1, #0
   16ab4:	bne	16ad8 <argp_error@@Base+0x83c>
   16ab8:	ldr	r1, [r4, #24]
   16abc:	cmp	r1, #0
   16ac0:	beq	168a8 <argp_error@@Base+0x60c>
   16ac4:	add	r2, r2, #1
   16ac8:	str	r2, [r4]
   16acc:	str	r3, [r4, #12]
   16ad0:	mov	r0, #1
   16ad4:	b	168ac <argp_error@@Base+0x610>
   16ad8:	cmp	sl, #0
   16adc:	bne	16b6c <argp_error@@Base+0x8d0>
   16ae0:	ldr	r3, [r4]
   16ae4:	ldr	r3, [r7, r3, lsl #2]
   16ae8:	add	r3, r3, #1
   16aec:	str	r3, [r4, #20]
   16af0:	ldr	r3, [r4, #20]
   16af4:	mov	r0, r6
   16af8:	add	r2, r3, #1
   16afc:	str	r2, [r4, #20]
   16b00:	ldrb	r5, [r3]
   16b04:	str	r2, [sp, #28]
   16b08:	str	r3, [sp, #24]
   16b0c:	mov	r1, r5
   16b10:	bl	1110c <strchr@plt>
   16b14:	ldr	r3, [sp, #24]
   16b18:	ldr	r2, [sp, #28]
   16b1c:	ldrb	r1, [r3, #1]
   16b20:	cmp	r1, #0
   16b24:	ldreq	r1, [r4]
   16b28:	addeq	r1, r1, #1
   16b2c:	streq	r1, [r4]
   16b30:	sub	r1, r5, #58	; 0x3a
   16b34:	cmp	r0, #0
   16b38:	cmpne	r1, #1
   16b3c:	bhi	16c18 <argp_error@@Base+0x97c>
   16b40:	cmp	r9, #0
   16b44:	beq	16b60 <argp_error@@Base+0x8c4>
   16b48:	ldr	r0, [pc, #540]	; 16d6c <argp_error@@Base+0xad0>
   16b4c:	mov	r3, r5
   16b50:	ldr	r2, [r7]
   16b54:	ldr	r1, [pc, #532]	; 16d70 <argp_error@@Base+0xad4>
   16b58:	ldr	r0, [r0]
   16b5c:	bl	11118 <fprintf@plt>
   16b60:	str	r5, [r4, #8]
   16b64:	mov	r0, #63	; 0x3f
   16b68:	b	168ac <argp_error@@Base+0x610>
   16b6c:	cmp	r1, #45	; 0x2d
   16b70:	bne	16bac <argp_error@@Base+0x910>
   16b74:	add	r3, r3, #2
   16b78:	str	r3, [r4, #20]
   16b7c:	ldr	r3, [pc, #480]	; 16d64 <argp_error@@Base+0xac8>
   16b80:	str	r9, [sp, #12]
   16b84:	str	r3, [sp, #16]
   16b88:	str	r4, [sp, #8]
   16b8c:	str	r5, [sp, #4]
   16b90:	str	fp, [sp]
   16b94:	mov	r3, sl
   16b98:	mov	r2, r6
   16b9c:	mov	r1, r7
   16ba0:	mov	r0, r8
   16ba4:	bl	16438 <argp_error@@Base+0x19c>
   16ba8:	b	168ac <argp_error@@Base+0x610>
   16bac:	cmp	r5, #0
   16bb0:	beq	16ae0 <argp_error@@Base+0x844>
   16bb4:	ldrb	r2, [r3, #2]
   16bb8:	cmp	r2, #0
   16bbc:	bne	16bd8 <argp_error@@Base+0x93c>
   16bc0:	mov	r0, r6
   16bc4:	str	r3, [sp, #24]
   16bc8:	bl	1110c <strchr@plt>
   16bcc:	ldr	r3, [sp, #24]
   16bd0:	cmp	r0, #0
   16bd4:	bne	16ae0 <argp_error@@Base+0x844>
   16bd8:	add	r3, r3, #1
   16bdc:	str	r3, [r4, #20]
   16be0:	ldr	r3, [pc, #396]	; 16d74 <argp_error@@Base+0xad8>
   16be4:	str	r9, [sp, #12]
   16be8:	str	r3, [sp, #16]
   16bec:	str	r4, [sp, #8]
   16bf0:	str	r5, [sp, #4]
   16bf4:	str	fp, [sp]
   16bf8:	mov	r3, sl
   16bfc:	mov	r2, r6
   16c00:	mov	r1, r7
   16c04:	mov	r0, r8
   16c08:	bl	16438 <argp_error@@Base+0x19c>
   16c0c:	cmn	r0, #1
   16c10:	bne	168ac <argp_error@@Base+0x610>
   16c14:	b	16ae0 <argp_error@@Base+0x844>
   16c18:	ldrb	r1, [r0]
   16c1c:	cmp	r1, #87	; 0x57
   16c20:	ldrb	r1, [r0, #1]
   16c24:	bne	16cc0 <argp_error@@Base+0xa24>
   16c28:	cmp	sl, #0
   16c2c:	sub	ip, r1, #59	; 0x3b
   16c30:	clz	ip, ip
   16c34:	lsr	ip, ip, #5
   16c38:	moveq	ip, #0
   16c3c:	cmp	ip, #0
   16c40:	beq	16cc0 <argp_error@@Base+0xa24>
   16c44:	ldrb	r3, [r3, #1]
   16c48:	cmp	r3, #0
   16c4c:	strne	r2, [r4, #12]
   16c50:	bne	16ca0 <argp_error@@Base+0xa04>
   16c54:	ldr	r3, [r4]
   16c58:	cmp	r8, r3
   16c5c:	ldrne	r3, [r7, r3, lsl #2]
   16c60:	strne	r3, [r4, #12]
   16c64:	bne	16ca0 <argp_error@@Base+0xa04>
   16c68:	cmp	r9, #0
   16c6c:	beq	16c88 <argp_error@@Base+0x9ec>
   16c70:	ldr	r0, [pc, #244]	; 16d6c <argp_error@@Base+0xad0>
   16c74:	mov	r3, r5
   16c78:	ldr	r2, [r7]
   16c7c:	ldr	r1, [pc, #244]	; 16d78 <argp_error@@Base+0xadc>
   16c80:	ldr	r0, [r0]
   16c84:	bl	11118 <fprintf@plt>
   16c88:	str	r5, [r4, #8]
   16c8c:	ldrb	r0, [r6]
   16c90:	cmp	r0, #58	; 0x3a
   16c94:	moveq	r0, #58	; 0x3a
   16c98:	movne	r0, #63	; 0x3f
   16c9c:	b	168ac <argp_error@@Base+0x610>
   16ca0:	ldr	r3, [r4, #12]
   16ca4:	ldr	r2, [pc, #208]	; 16d7c <argp_error@@Base+0xae0>
   16ca8:	str	r3, [r4, #20]
   16cac:	mov	r3, #0
   16cb0:	str	r3, [r4, #12]
   16cb4:	str	r2, [sp, #16]
   16cb8:	stmib	sp, {r3, r4, r9}
   16cbc:	b	16b90 <argp_error@@Base+0x8f4>
   16cc0:	cmp	r1, #58	; 0x3a
   16cc4:	bne	16d10 <argp_error@@Base+0xa74>
   16cc8:	ldrb	r1, [r0, #2]
   16ccc:	ldrb	r3, [r3, #1]
   16cd0:	cmp	r1, #58	; 0x3a
   16cd4:	bne	16cf0 <argp_error@@Base+0xa54>
   16cd8:	cmp	r3, #0
   16cdc:	strne	r2, [r4, #12]
   16ce0:	ldrne	r3, [r4]
   16ce4:	bne	16d00 <argp_error@@Base+0xa64>
   16ce8:	str	r3, [r4, #12]
   16cec:	b	16d08 <argp_error@@Base+0xa6c>
   16cf0:	cmp	r3, #0
   16cf4:	ldr	r3, [r4]
   16cf8:	beq	16d18 <argp_error@@Base+0xa7c>
   16cfc:	str	r2, [r4, #12]
   16d00:	add	r3, r3, #1
   16d04:	str	r3, [r4]
   16d08:	mov	r3, #0
   16d0c:	str	r3, [r4, #20]
   16d10:	mov	r0, r5
   16d14:	b	168ac <argp_error@@Base+0x610>
   16d18:	cmp	r8, r3
   16d1c:	addne	r2, r3, #1
   16d20:	strne	r2, [r4]
   16d24:	ldrne	r3, [r7, r3, lsl #2]
   16d28:	bne	16ce8 <argp_error@@Base+0xa4c>
   16d2c:	cmp	r9, #0
   16d30:	beq	16d4c <argp_error@@Base+0xab0>
   16d34:	ldr	r0, [pc, #48]	; 16d6c <argp_error@@Base+0xad0>
   16d38:	mov	r3, r5
   16d3c:	ldr	r2, [r7]
   16d40:	ldr	r1, [pc, #48]	; 16d78 <argp_error@@Base+0xadc>
   16d44:	ldr	r0, [r0]
   16d48:	bl	11118 <fprintf@plt>
   16d4c:	str	r5, [r4, #8]
   16d50:	ldrb	r5, [r6]
   16d54:	cmp	r5, #58	; 0x3a
   16d58:	moveq	r5, #58	; 0x3a
   16d5c:	movne	r5, #63	; 0x3f
   16d60:	b	16d08 <argp_error@@Base+0xa6c>
   16d64:	andeq	r7, r1, r0, lsr #24
   16d68:	andeq	r8, r1, sl, lsr #9
   16d6c:	andeq	r9, r2, r0, ror #4
   16d70:			; <UNDEFINED> instruction: 0x000184ba
   16d74:	andeq	r7, r1, r1, lsr #24
   16d78:	ldrdeq	r8, [r1], -r6
   16d7c:	strdeq	r8, [r1], -pc	; <UNPREDICTABLE>
   16d80:	push	{r4, r5, lr}
   16d84:	sub	sp, sp, #20
   16d88:	ldr	r5, [pc, #84]	; 16de4 <argp_error@@Base+0xb48>
   16d8c:	ldr	r4, [pc, #84]	; 16de8 <argp_error@@Base+0xb4c>
   16d90:	ldr	ip, [r5]
   16d94:	str	r4, [sp, #8]
   16d98:	str	ip, [r4]
   16d9c:	ldr	ip, [r5, #4]
   16da0:	str	ip, [r4, #4]
   16da4:	ldr	ip, [sp, #40]	; 0x28
   16da8:	str	ip, [sp, #12]
   16dac:	ldr	ip, [sp, #36]	; 0x24
   16db0:	str	ip, [sp, #4]
   16db4:	ldr	ip, [sp, #32]
   16db8:	str	ip, [sp]
   16dbc:	bl	16888 <argp_error@@Base+0x5ec>
   16dc0:	ldr	r3, [r4]
   16dc4:	ldr	r2, [r4, #12]
   16dc8:	str	r3, [r5]
   16dcc:	ldr	r3, [pc, #24]	; 16dec <argp_error@@Base+0xb50>
   16dd0:	str	r2, [r3]
   16dd4:	ldr	r3, [r4, #8]
   16dd8:	str	r3, [r5, #8]
   16ddc:	add	sp, sp, #20
   16de0:	pop	{r4, r5, pc}
   16de4:	andeq	r9, r2, r8, asr #4
   16de8:	andeq	r9, r2, r8, lsl #5
   16dec:			; <UNDEFINED> instruction: 0x000292b4
   16df0:	push	{r0, r1, r2, r3, r4, lr}
   16df4:	mov	r3, #1
   16df8:	str	r3, [sp, #8]
   16dfc:	mov	r3, #0
   16e00:	str	r3, [sp, #4]
   16e04:	str	r3, [sp]
   16e08:	bl	16d80 <argp_error@@Base+0xae4>
   16e0c:	add	sp, sp, #20
   16e10:	pop	{pc}		; (ldr pc, [sp], #4)
   16e14:	push	{r4, r5, r6, lr}
   16e18:	subs	r4, r2, #0
   16e1c:	mov	r6, r0
   16e20:	mov	r5, r1
   16e24:	beq	16e3c <argp_error@@Base+0xba0>
   16e28:	mov	r1, r4
   16e2c:	mvn	r0, #0
   16e30:	bl	17480 <argp_error@@Base+0x11e4>
   16e34:	cmp	r0, r5
   16e38:	bcc	16e4c <argp_error@@Base+0xbb0>
   16e3c:	mul	r1, r5, r4
   16e40:	mov	r0, r6
   16e44:	pop	{r4, r5, r6, lr}
   16e48:	b	13680 <argp_parse@@Base+0x1724>
   16e4c:	bl	11124 <__errno_location@plt>
   16e50:	mov	r3, #12
   16e54:	str	r3, [r0]
   16e58:	mov	r0, #0
   16e5c:	pop	{r4, r5, r6, pc}
   16e60:	push	{r4, r5, r6, r7, r8, lr}
   16e64:	mov	r8, r0
   16e68:	mov	r0, #36	; 0x24
   16e6c:	mov	r7, r1
   16e70:	mov	r6, r2
   16e74:	mov	r5, r3
   16e78:	bl	13640 <argp_parse@@Base+0x16e4>
   16e7c:	subs	r4, r0, #0
   16e80:	beq	16ed0 <argp_error@@Base+0xc34>
   16e84:	mov	r3, #0
   16e88:	str	r5, [r4, #12]
   16e8c:	str	r8, [r4]
   16e90:	str	r7, [r4, #4]
   16e94:	str	r6, [r4, #8]
   16e98:	str	r3, [r4, #20]
   16e9c:	str	r3, [r4, #16]
   16ea0:	mov	r0, #200	; 0xc8
   16ea4:	bl	13640 <argp_parse@@Base+0x16e4>
   16ea8:	cmp	r0, #0
   16eac:	mov	r5, r0
   16eb0:	addne	r5, r0, #200	; 0xc8
   16eb4:	str	r0, [r4, #24]
   16eb8:	strne	r0, [r4, #28]
   16ebc:	strne	r5, [r4, #32]
   16ec0:	bne	16ed0 <argp_error@@Base+0xc34>
   16ec4:	mov	r0, r4
   16ec8:	bl	129f8 <argp_parse@@Base+0xa9c>
   16ecc:	mov	r4, r5
   16ed0:	mov	r0, r4
   16ed4:	pop	{r4, r5, r6, r7, r8, pc}
   16ed8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16edc:	mov	r4, r0
   16ee0:	ldr	r6, [r0, #24]
   16ee4:	ldr	r3, [r0, #16]
   16ee8:	add	r6, r6, r3
   16eec:	ldr	r2, [r4, #28]
   16ef0:	cmp	r6, r2
   16ef4:	bcs	16fa4 <argp_error@@Base+0xd08>
   16ef8:	ldr	r7, [r4, #20]
   16efc:	cmp	r7, #0
   16f00:	bne	16f58 <argp_error@@Base+0xcbc>
   16f04:	ldr	r5, [r4, #4]
   16f08:	cmp	r5, #0
   16f0c:	beq	16f58 <argp_error@@Base+0xcbc>
   16f10:	ldr	r1, [r4, #32]
   16f14:	add	r3, r2, r5
   16f18:	cmp	r1, r3
   16f1c:	bls	16fbc <argp_error@@Base+0xd20>
   16f20:	add	r7, r6, r5
   16f24:	sub	r2, r2, r6
   16f28:	mov	r1, r6
   16f2c:	mov	r0, r7
   16f30:	bl	10fa4 <memmove@plt>
   16f34:	ldr	r3, [r4, #28]
   16f38:	mov	r0, r6
   16f3c:	add	r3, r3, r5
   16f40:	str	r3, [r4, #28]
   16f44:	mov	r2, r5
   16f48:	mov	r1, #32
   16f4c:	bl	1113c <memset@plt>
   16f50:	mov	r6, r7
   16f54:	str	r5, [r4, #20]
   16f58:	ldr	r9, [r4, #28]
   16f5c:	mov	r1, #10
   16f60:	sub	r8, r9, r6
   16f64:	mov	r2, r8
   16f68:	mov	r0, r6
   16f6c:	bl	11148 <memchr@plt>
   16f70:	ldr	r2, [r4, #20]
   16f74:	ldr	r5, [r4, #8]
   16f78:	cmp	r2, #0
   16f7c:	movlt	r3, #0
   16f80:	strlt	r3, [r4, #20]
   16f84:	cmp	r0, #0
   16f88:	mov	fp, r0
   16f8c:	ldr	r0, [r4, #20]
   16f90:	bne	16fd8 <argp_error@@Base+0xd3c>
   16f94:	add	r3, r8, r0
   16f98:	cmp	r3, r5
   16f9c:	bcs	16ff8 <argp_error@@Base+0xd5c>
   16fa0:	str	r3, [r4, #20]
   16fa4:	ldr	r3, [r4, #28]
   16fa8:	ldr	r2, [r4, #24]
   16fac:	sub	r3, r3, r2
   16fb0:	str	r3, [r4, #16]
   16fb4:	add	sp, sp, #12
   16fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fbc:	ldr	r1, [r4]
   16fc0:	mov	r0, #32
   16fc4:	add	r7, r7, #1
   16fc8:	bl	11220 <putc_unlocked@plt>
   16fcc:	cmp	r5, r7
   16fd0:	bne	16fbc <argp_error@@Base+0xd20>
   16fd4:	b	16f54 <argp_error@@Base+0xcb8>
   16fd8:	sub	r2, fp, r6
   16fdc:	add	r2, r2, r0
   16fe0:	cmp	r2, r5
   16fe4:	bge	16ffc <argp_error@@Base+0xd60>
   16fe8:	mov	r3, #0
   16fec:	str	r3, [r4, #20]
   16ff0:	add	r3, fp, #1
   16ff4:	b	1705c <argp_error@@Base+0xdc0>
   16ff8:	mov	fp, r9
   16ffc:	ldr	sl, [r4, #12]
   17000:	cmp	sl, #0
   17004:	subge	r5, r5, r0
   17008:	addge	r5, r6, r5
   1700c:	movge	r7, r5
   17010:	bge	1707c <argp_error@@Base+0xde0>
   17014:	cmp	fp, r9
   17018:	sub	sl, r5, #1
   1701c:	bcs	17064 <argp_error@@Base+0xdc8>
   17020:	sub	r0, sl, r0
   17024:	sub	r2, r9, fp
   17028:	mov	r1, fp
   1702c:	add	r0, r6, r0
   17030:	bl	10fa4 <memmove@plt>
   17034:	ldr	r8, [r4, #20]
   17038:	sub	sl, sl, r8
   1703c:	add	sl, r6, sl
   17040:	sub	r3, sl, fp
   17044:	ldr	sl, [r4, #28]
   17048:	sub	r3, sl, r3
   1704c:	str	r3, [r4, #28]
   17050:	mov	r3, #0
   17054:	str	r3, [r4, #20]
   17058:	add	r3, r6, r5
   1705c:	mov	r6, r3
   17060:	b	16eec <argp_error@@Base+0xc50>
   17064:	add	r0, r8, r0
   17068:	str	r0, [r4, #20]
   1706c:	sub	r0, sl, r0
   17070:	add	r9, r9, r0
   17074:	str	r9, [r4, #28]
   17078:	b	16fa4 <argp_error@@Base+0xd08>
   1707c:	cmp	r6, r7
   17080:	mov	r2, r7
   17084:	bhi	170b0 <argp_error@@Base+0xe14>
   17088:	str	r7, [sp, #4]
   1708c:	bl	110dc <__ctype_b_loc@plt>
   17090:	ldr	r2, [sp, #4]
   17094:	sub	r7, r7, #1
   17098:	ldrb	r1, [r2]
   1709c:	lsl	r1, r1, #1
   170a0:	ldr	r0, [r0]
   170a4:	ldrh	r1, [r0, r1]
   170a8:	tst	r1, #1
   170ac:	beq	1707c <argp_error@@Base+0xde0>
   170b0:	add	r7, r2, #1
   170b4:	cmp	r6, r7
   170b8:	bcs	17130 <argp_error@@Base+0xe94>
   170bc:	cmp	r6, r2
   170c0:	bhi	170fc <argp_error@@Base+0xe60>
   170c4:	sub	r5, r2, #1
   170c8:	cmp	r6, r5
   170cc:	mov	r2, r5
   170d0:	bhi	170fc <argp_error@@Base+0xe60>
   170d4:	str	r5, [sp, #4]
   170d8:	bl	110dc <__ctype_b_loc@plt>
   170dc:	ldr	r2, [sp, #4]
   170e0:	sub	r5, r5, #1
   170e4:	ldrb	r3, [r2]
   170e8:	lsl	r3, r3, #1
   170ec:	ldr	r1, [r0]
   170f0:	ldrh	r3, [r1, r3]
   170f4:	tst	r3, #1
   170f8:	bne	170c8 <argp_error@@Base+0xe2c>
   170fc:	add	r5, r2, #1
   17100:	add	r3, r8, #1
   17104:	add	r3, r6, r3
   17108:	cmp	r7, r3
   1710c:	bne	17198 <argp_error@@Base+0xefc>
   17110:	ldr	r3, [r4, #32]
   17114:	sub	r3, r3, r5
   17118:	cmp	sl, r3
   1711c:	bge	171a8 <argp_error@@Base+0xf0c>
   17120:	mov	r3, #10
   17124:	add	r9, r5, #1
   17128:	strb	r3, [r5]
   1712c:	b	17228 <argp_error@@Base+0xf8c>
   17130:	cmp	fp, r5
   17134:	bls	1718c <argp_error@@Base+0xef0>
   17138:	add	r7, r5, #1
   1713c:	cmp	fp, r7
   17140:	mov	r5, r7
   17144:	beq	1718c <argp_error@@Base+0xef0>
   17148:	bl	110dc <__ctype_b_loc@plt>
   1714c:	ldrb	r2, [r5]
   17150:	add	r7, r7, #1
   17154:	lsl	r2, r2, #1
   17158:	ldr	r1, [r0]
   1715c:	ldrh	r2, [r1, r2]
   17160:	tst	r2, #1
   17164:	beq	1713c <argp_error@@Base+0xea0>
   17168:	bl	110dc <__ctype_b_loc@plt>
   1716c:	mov	r7, r5
   17170:	ldr	r2, [r0]
   17174:	ldrb	r3, [r7, #1]!
   17178:	lsl	r3, r3, #1
   1717c:	ldrh	r3, [r2, r3]
   17180:	tst	r3, #1
   17184:	bne	17174 <argp_error@@Base+0xed8>
   17188:	b	17100 <argp_error@@Base+0xe64>
   1718c:	cmp	fp, r5
   17190:	bne	17168 <argp_error@@Base+0xecc>
   17194:	b	16fe8 <argp_error@@Base+0xd4c>
   17198:	add	r3, r5, #1
   1719c:	sub	r3, r7, r3
   171a0:	cmp	sl, r3
   171a4:	ble	17120 <argp_error@@Base+0xe84>
   171a8:	cmp	r7, r9
   171ac:	bcs	17120 <argp_error@@Base+0xe84>
   171b0:	ldr	r3, [r4, #32]
   171b4:	add	r0, sl, #1
   171b8:	sub	r3, r3, r9
   171bc:	cmp	r3, r0
   171c0:	ble	171f0 <argp_error@@Base+0xf54>
   171c4:	sub	r9, r9, r7
   171c8:	mov	r2, r9
   171cc:	mov	r1, r7
   171d0:	add	r0, r5, r0
   171d4:	bl	10fa4 <memmove@plt>
   171d8:	ldr	r7, [r4, #12]
   171dc:	add	r7, r7, #1
   171e0:	add	r7, r5, r7
   171e4:	add	r9, r7, r9
   171e8:	sub	r8, r9, r6
   171ec:	b	17120 <argp_error@@Base+0xe84>
   171f0:	ldr	r0, [r4, #24]
   171f4:	cmp	r5, r0
   171f8:	bls	1720c <argp_error@@Base+0xf70>
   171fc:	ldr	r3, [r4]
   17200:	sub	r2, r5, r0
   17204:	mov	r1, #1
   17208:	bl	10fe0 <fwrite_unlocked@plt>
   1720c:	ldr	r1, [r4]
   17210:	mov	r0, #10
   17214:	bl	11220 <putc_unlocked@plt>
   17218:	ldr	r9, [r4, #24]
   1721c:	sub	r6, r6, r9
   17220:	add	r8, r8, r6
   17224:	mov	r6, r9
   17228:	ldr	r2, [r4, #12]
   1722c:	sub	r3, r7, r9
   17230:	cmp	r3, r2
   17234:	bge	17270 <argp_error@@Base+0xfd4>
   17238:	add	r3, r8, #1
   1723c:	add	r3, r6, r3
   17240:	cmp	r7, r3
   17244:	bne	17258 <argp_error@@Base+0xfbc>
   17248:	ldr	r3, [r4, #32]
   1724c:	sub	r3, r3, r7
   17250:	cmp	r2, r3
   17254:	ble	17270 <argp_error@@Base+0xfd4>
   17258:	mov	r5, #0
   1725c:	ldr	r3, [r4, #12]
   17260:	cmp	r5, r3
   17264:	blt	172d4 <argp_error@@Base+0x1038>
   17268:	mov	r3, r9
   1726c:	b	17284 <argp_error@@Base+0xfe8>
   17270:	mov	r3, r9
   17274:	ldr	r1, [r4, #12]
   17278:	sub	r2, r3, r9
   1727c:	cmp	r1, r2
   17280:	bgt	172c8 <argp_error@@Base+0x102c>
   17284:	cmp	r3, r7
   17288:	bcs	172a4 <argp_error@@Base+0x1008>
   1728c:	add	r2, r6, r8
   17290:	mov	r0, r3
   17294:	sub	r2, r2, r7
   17298:	mov	r1, r7
   1729c:	bl	10fa4 <memmove@plt>
   172a0:	mov	r3, r0
   172a4:	ldr	r2, [r4, #12]
   172a8:	sub	r6, r7, r6
   172ac:	sub	r6, r8, r6
   172b0:	cmp	r2, #0
   172b4:	add	r6, r3, r6
   172b8:	mvneq	r2, #0
   172bc:	str	r6, [r4, #28]
   172c0:	str	r2, [r4, #20]
   172c4:	b	1705c <argp_error@@Base+0xdc0>
   172c8:	mov	r2, #32
   172cc:	strb	r2, [r3], #1
   172d0:	b	17274 <argp_error@@Base+0xfd8>
   172d4:	ldr	r1, [r4]
   172d8:	mov	r0, #32
   172dc:	bl	11220 <putc_unlocked@plt>
   172e0:	add	r5, r5, #1
   172e4:	b	1725c <argp_error@@Base+0xfc0>
   172e8:	push	{r4, lr}
   172ec:	mov	r4, r0
   172f0:	bl	16ed8 <argp_error@@Base+0xc3c>
   172f4:	ldr	r2, [r4, #28]
   172f8:	ldr	r0, [r4, #24]
   172fc:	cmp	r2, r0
   17300:	bls	17314 <argp_error@@Base+0x1078>
   17304:	ldr	r3, [r4]
   17308:	sub	r2, r2, r0
   1730c:	mov	r1, #1
   17310:	bl	10fe0 <fwrite_unlocked@plt>
   17314:	ldr	r0, [r4, #24]
   17318:	bl	129f8 <argp_parse@@Base+0xa9c>
   1731c:	mov	r0, r4
   17320:	pop	{r4, lr}
   17324:	b	129f8 <argp_parse@@Base+0xa9c>
   17328:	ldr	r3, [r0, #32]
   1732c:	ldr	r2, [r0, #28]
   17330:	sub	r3, r3, r2
   17334:	cmp	r3, r1
   17338:	bcc	17344 <argp_error@@Base+0x10a8>
   1733c:	mov	r0, #1
   17340:	bx	lr
   17344:	push	{r4, r5, r6, lr}
   17348:	mov	r4, r0
   1734c:	mov	r5, r1
   17350:	bl	16ed8 <argp_error@@Base+0xc3c>
   17354:	ldr	r0, [r4, #24]
   17358:	ldr	r2, [r4, #28]
   1735c:	ldr	r3, [r4]
   17360:	sub	r2, r2, r0
   17364:	mov	r1, #1
   17368:	bl	10fe0 <fwrite_unlocked@plt>
   1736c:	ldr	r2, [r4, #28]
   17370:	mov	r1, r0
   17374:	ldr	r0, [r4, #24]
   17378:	sub	r3, r2, r0
   1737c:	cmp	r1, r3
   17380:	bne	173a8 <argp_error@@Base+0x110c>
   17384:	ldr	r1, [r4, #32]
   17388:	mov	r3, #0
   1738c:	sub	r1, r1, r0
   17390:	cmp	r5, r1
   17394:	str	r0, [r4, #28]
   17398:	str	r3, [r4, #16]
   1739c:	bhi	173d0 <argp_error@@Base+0x1134>
   173a0:	mov	r0, #1
   173a4:	pop	{r4, r5, r6, pc}
   173a8:	ldr	r3, [r4, #16]
   173ac:	sub	r2, r2, r1
   173b0:	sub	r3, r3, r1
   173b4:	str	r2, [r4, #28]
   173b8:	str	r3, [r4, #16]
   173bc:	sub	r2, r2, r0
   173c0:	add	r1, r0, r1
   173c4:	bl	10fa4 <memmove@plt>
   173c8:	mov	r0, #0
   173cc:	pop	{r4, r5, r6, pc}
   173d0:	adds	r5, r5, r1
   173d4:	bcc	173e8 <argp_error@@Base+0x114c>
   173d8:	bl	11124 <__errno_location@plt>
   173dc:	mov	r3, #12
   173e0:	str	r3, [r0]
   173e4:	b	173c8 <argp_error@@Base+0x112c>
   173e8:	mov	r1, r5
   173ec:	bl	13680 <argp_parse@@Base+0x1724>
   173f0:	cmp	r0, #0
   173f4:	beq	173d8 <argp_error@@Base+0x113c>
   173f8:	add	r5, r0, r5
   173fc:	str	r0, [r4, #24]
   17400:	str	r5, [r4, #32]
   17404:	str	r0, [r4, #28]
   17408:	b	173a0 <argp_error@@Base+0x1104>
   1740c:	push	{r1, r2, r3}
   17410:	push	{r0, r1, r2, r4, r5, r6, lr}
   17414:	mov	r4, r0
   17418:	mov	r1, #150	; 0x96
   1741c:	add	r6, sp, #32
   17420:	mov	r0, r4
   17424:	bl	17328 <argp_error@@Base+0x108c>
   17428:	cmp	r0, #0
   1742c:	bne	17444 <argp_error@@Base+0x11a8>
   17430:	mvn	r0, #0
   17434:	add	sp, sp, #12
   17438:	pop	{r4, r5, r6, lr}
   1743c:	add	sp, sp, #12
   17440:	bx	lr
   17444:	ldr	r0, [r4, #28]
   17448:	ldr	r5, [r4, #32]
   1744c:	mov	r3, r6
   17450:	sub	r5, r5, r0
   17454:	ldr	r2, [sp, #28]
   17458:	mov	r1, r5
   1745c:	str	r6, [sp, #4]
   17460:	bl	1119c <vsnprintf@plt>
   17464:	cmp	r5, r0
   17468:	addls	r1, r0, #1
   1746c:	bls	17420 <argp_error@@Base+0x1184>
   17470:	ldr	r3, [r4, #28]
   17474:	add	r3, r3, r0
   17478:	str	r3, [r4, #28]
   1747c:	b	17434 <argp_error@@Base+0x1198>
   17480:	subs	r2, r1, #1
   17484:	bxeq	lr
   17488:	bcc	17660 <argp_error@@Base+0x13c4>
   1748c:	cmp	r0, r1
   17490:	bls	17644 <argp_error@@Base+0x13a8>
   17494:	tst	r1, r2
   17498:	beq	17650 <argp_error@@Base+0x13b4>
   1749c:	clz	r3, r0
   174a0:	clz	r2, r1
   174a4:	sub	r3, r2, r3
   174a8:	rsbs	r3, r3, #31
   174ac:	addne	r3, r3, r3, lsl #1
   174b0:	mov	r2, #0
   174b4:	addne	pc, pc, r3, lsl #2
   174b8:	nop			; (mov r0, r0)
   174bc:	cmp	r0, r1, lsl #31
   174c0:	adc	r2, r2, r2
   174c4:	subcs	r0, r0, r1, lsl #31
   174c8:	cmp	r0, r1, lsl #30
   174cc:	adc	r2, r2, r2
   174d0:	subcs	r0, r0, r1, lsl #30
   174d4:	cmp	r0, r1, lsl #29
   174d8:	adc	r2, r2, r2
   174dc:	subcs	r0, r0, r1, lsl #29
   174e0:	cmp	r0, r1, lsl #28
   174e4:	adc	r2, r2, r2
   174e8:	subcs	r0, r0, r1, lsl #28
   174ec:	cmp	r0, r1, lsl #27
   174f0:	adc	r2, r2, r2
   174f4:	subcs	r0, r0, r1, lsl #27
   174f8:	cmp	r0, r1, lsl #26
   174fc:	adc	r2, r2, r2
   17500:	subcs	r0, r0, r1, lsl #26
   17504:	cmp	r0, r1, lsl #25
   17508:	adc	r2, r2, r2
   1750c:	subcs	r0, r0, r1, lsl #25
   17510:	cmp	r0, r1, lsl #24
   17514:	adc	r2, r2, r2
   17518:	subcs	r0, r0, r1, lsl #24
   1751c:	cmp	r0, r1, lsl #23
   17520:	adc	r2, r2, r2
   17524:	subcs	r0, r0, r1, lsl #23
   17528:	cmp	r0, r1, lsl #22
   1752c:	adc	r2, r2, r2
   17530:	subcs	r0, r0, r1, lsl #22
   17534:	cmp	r0, r1, lsl #21
   17538:	adc	r2, r2, r2
   1753c:	subcs	r0, r0, r1, lsl #21
   17540:	cmp	r0, r1, lsl #20
   17544:	adc	r2, r2, r2
   17548:	subcs	r0, r0, r1, lsl #20
   1754c:	cmp	r0, r1, lsl #19
   17550:	adc	r2, r2, r2
   17554:	subcs	r0, r0, r1, lsl #19
   17558:	cmp	r0, r1, lsl #18
   1755c:	adc	r2, r2, r2
   17560:	subcs	r0, r0, r1, lsl #18
   17564:	cmp	r0, r1, lsl #17
   17568:	adc	r2, r2, r2
   1756c:	subcs	r0, r0, r1, lsl #17
   17570:	cmp	r0, r1, lsl #16
   17574:	adc	r2, r2, r2
   17578:	subcs	r0, r0, r1, lsl #16
   1757c:	cmp	r0, r1, lsl #15
   17580:	adc	r2, r2, r2
   17584:	subcs	r0, r0, r1, lsl #15
   17588:	cmp	r0, r1, lsl #14
   1758c:	adc	r2, r2, r2
   17590:	subcs	r0, r0, r1, lsl #14
   17594:	cmp	r0, r1, lsl #13
   17598:	adc	r2, r2, r2
   1759c:	subcs	r0, r0, r1, lsl #13
   175a0:	cmp	r0, r1, lsl #12
   175a4:	adc	r2, r2, r2
   175a8:	subcs	r0, r0, r1, lsl #12
   175ac:	cmp	r0, r1, lsl #11
   175b0:	adc	r2, r2, r2
   175b4:	subcs	r0, r0, r1, lsl #11
   175b8:	cmp	r0, r1, lsl #10
   175bc:	adc	r2, r2, r2
   175c0:	subcs	r0, r0, r1, lsl #10
   175c4:	cmp	r0, r1, lsl #9
   175c8:	adc	r2, r2, r2
   175cc:	subcs	r0, r0, r1, lsl #9
   175d0:	cmp	r0, r1, lsl #8
   175d4:	adc	r2, r2, r2
   175d8:	subcs	r0, r0, r1, lsl #8
   175dc:	cmp	r0, r1, lsl #7
   175e0:	adc	r2, r2, r2
   175e4:	subcs	r0, r0, r1, lsl #7
   175e8:	cmp	r0, r1, lsl #6
   175ec:	adc	r2, r2, r2
   175f0:	subcs	r0, r0, r1, lsl #6
   175f4:	cmp	r0, r1, lsl #5
   175f8:	adc	r2, r2, r2
   175fc:	subcs	r0, r0, r1, lsl #5
   17600:	cmp	r0, r1, lsl #4
   17604:	adc	r2, r2, r2
   17608:	subcs	r0, r0, r1, lsl #4
   1760c:	cmp	r0, r1, lsl #3
   17610:	adc	r2, r2, r2
   17614:	subcs	r0, r0, r1, lsl #3
   17618:	cmp	r0, r1, lsl #2
   1761c:	adc	r2, r2, r2
   17620:	subcs	r0, r0, r1, lsl #2
   17624:	cmp	r0, r1, lsl #1
   17628:	adc	r2, r2, r2
   1762c:	subcs	r0, r0, r1, lsl #1
   17630:	cmp	r0, r1
   17634:	adc	r2, r2, r2
   17638:	subcs	r0, r0, r1
   1763c:	mov	r0, r2
   17640:	bx	lr
   17644:	moveq	r0, #1
   17648:	movne	r0, #0
   1764c:	bx	lr
   17650:	clz	r2, r1
   17654:	rsb	r2, r2, #31
   17658:	lsr	r0, r0, r2
   1765c:	bx	lr
   17660:	cmp	r0, #0
   17664:	mvnne	r0, #0
   17668:	b	178cc <argp_error@@Base+0x1630>
   1766c:	cmp	r1, #0
   17670:	beq	17660 <argp_error@@Base+0x13c4>
   17674:	push	{r0, r1, lr}
   17678:	bl	17480 <argp_error@@Base+0x11e4>
   1767c:	pop	{r1, r2, lr}
   17680:	mul	r3, r2, r0
   17684:	sub	r1, r1, r3
   17688:	bx	lr
   1768c:	cmp	r1, #0
   17690:	beq	1789c <argp_error@@Base+0x1600>
   17694:	eor	ip, r0, r1
   17698:	rsbmi	r1, r1, #0
   1769c:	subs	r2, r1, #1
   176a0:	beq	17868 <argp_error@@Base+0x15cc>
   176a4:	movs	r3, r0
   176a8:	rsbmi	r3, r0, #0
   176ac:	cmp	r3, r1
   176b0:	bls	17874 <argp_error@@Base+0x15d8>
   176b4:	tst	r1, r2
   176b8:	beq	17884 <argp_error@@Base+0x15e8>
   176bc:	clz	r2, r3
   176c0:	clz	r0, r1
   176c4:	sub	r2, r0, r2
   176c8:	rsbs	r2, r2, #31
   176cc:	addne	r2, r2, r2, lsl #1
   176d0:	mov	r0, #0
   176d4:	addne	pc, pc, r2, lsl #2
   176d8:	nop			; (mov r0, r0)
   176dc:	cmp	r3, r1, lsl #31
   176e0:	adc	r0, r0, r0
   176e4:	subcs	r3, r3, r1, lsl #31
   176e8:	cmp	r3, r1, lsl #30
   176ec:	adc	r0, r0, r0
   176f0:	subcs	r3, r3, r1, lsl #30
   176f4:	cmp	r3, r1, lsl #29
   176f8:	adc	r0, r0, r0
   176fc:	subcs	r3, r3, r1, lsl #29
   17700:	cmp	r3, r1, lsl #28
   17704:	adc	r0, r0, r0
   17708:	subcs	r3, r3, r1, lsl #28
   1770c:	cmp	r3, r1, lsl #27
   17710:	adc	r0, r0, r0
   17714:	subcs	r3, r3, r1, lsl #27
   17718:	cmp	r3, r1, lsl #26
   1771c:	adc	r0, r0, r0
   17720:	subcs	r3, r3, r1, lsl #26
   17724:	cmp	r3, r1, lsl #25
   17728:	adc	r0, r0, r0
   1772c:	subcs	r3, r3, r1, lsl #25
   17730:	cmp	r3, r1, lsl #24
   17734:	adc	r0, r0, r0
   17738:	subcs	r3, r3, r1, lsl #24
   1773c:	cmp	r3, r1, lsl #23
   17740:	adc	r0, r0, r0
   17744:	subcs	r3, r3, r1, lsl #23
   17748:	cmp	r3, r1, lsl #22
   1774c:	adc	r0, r0, r0
   17750:	subcs	r3, r3, r1, lsl #22
   17754:	cmp	r3, r1, lsl #21
   17758:	adc	r0, r0, r0
   1775c:	subcs	r3, r3, r1, lsl #21
   17760:	cmp	r3, r1, lsl #20
   17764:	adc	r0, r0, r0
   17768:	subcs	r3, r3, r1, lsl #20
   1776c:	cmp	r3, r1, lsl #19
   17770:	adc	r0, r0, r0
   17774:	subcs	r3, r3, r1, lsl #19
   17778:	cmp	r3, r1, lsl #18
   1777c:	adc	r0, r0, r0
   17780:	subcs	r3, r3, r1, lsl #18
   17784:	cmp	r3, r1, lsl #17
   17788:	adc	r0, r0, r0
   1778c:	subcs	r3, r3, r1, lsl #17
   17790:	cmp	r3, r1, lsl #16
   17794:	adc	r0, r0, r0
   17798:	subcs	r3, r3, r1, lsl #16
   1779c:	cmp	r3, r1, lsl #15
   177a0:	adc	r0, r0, r0
   177a4:	subcs	r3, r3, r1, lsl #15
   177a8:	cmp	r3, r1, lsl #14
   177ac:	adc	r0, r0, r0
   177b0:	subcs	r3, r3, r1, lsl #14
   177b4:	cmp	r3, r1, lsl #13
   177b8:	adc	r0, r0, r0
   177bc:	subcs	r3, r3, r1, lsl #13
   177c0:	cmp	r3, r1, lsl #12
   177c4:	adc	r0, r0, r0
   177c8:	subcs	r3, r3, r1, lsl #12
   177cc:	cmp	r3, r1, lsl #11
   177d0:	adc	r0, r0, r0
   177d4:	subcs	r3, r3, r1, lsl #11
   177d8:	cmp	r3, r1, lsl #10
   177dc:	adc	r0, r0, r0
   177e0:	subcs	r3, r3, r1, lsl #10
   177e4:	cmp	r3, r1, lsl #9
   177e8:	adc	r0, r0, r0
   177ec:	subcs	r3, r3, r1, lsl #9
   177f0:	cmp	r3, r1, lsl #8
   177f4:	adc	r0, r0, r0
   177f8:	subcs	r3, r3, r1, lsl #8
   177fc:	cmp	r3, r1, lsl #7
   17800:	adc	r0, r0, r0
   17804:	subcs	r3, r3, r1, lsl #7
   17808:	cmp	r3, r1, lsl #6
   1780c:	adc	r0, r0, r0
   17810:	subcs	r3, r3, r1, lsl #6
   17814:	cmp	r3, r1, lsl #5
   17818:	adc	r0, r0, r0
   1781c:	subcs	r3, r3, r1, lsl #5
   17820:	cmp	r3, r1, lsl #4
   17824:	adc	r0, r0, r0
   17828:	subcs	r3, r3, r1, lsl #4
   1782c:	cmp	r3, r1, lsl #3
   17830:	adc	r0, r0, r0
   17834:	subcs	r3, r3, r1, lsl #3
   17838:	cmp	r3, r1, lsl #2
   1783c:	adc	r0, r0, r0
   17840:	subcs	r3, r3, r1, lsl #2
   17844:	cmp	r3, r1, lsl #1
   17848:	adc	r0, r0, r0
   1784c:	subcs	r3, r3, r1, lsl #1
   17850:	cmp	r3, r1
   17854:	adc	r0, r0, r0
   17858:	subcs	r3, r3, r1
   1785c:	cmp	ip, #0
   17860:	rsbmi	r0, r0, #0
   17864:	bx	lr
   17868:	teq	ip, r0
   1786c:	rsbmi	r0, r0, #0
   17870:	bx	lr
   17874:	movcc	r0, #0
   17878:	asreq	r0, ip, #31
   1787c:	orreq	r0, r0, #1
   17880:	bx	lr
   17884:	clz	r2, r1
   17888:	rsb	r2, r2, #31
   1788c:	cmp	ip, #0
   17890:	lsr	r0, r3, r2
   17894:	rsbmi	r0, r0, #0
   17898:	bx	lr
   1789c:	cmp	r0, #0
   178a0:	mvngt	r0, #-2147483648	; 0x80000000
   178a4:	movlt	r0, #-2147483648	; 0x80000000
   178a8:	b	178cc <argp_error@@Base+0x1630>
   178ac:	cmp	r1, #0
   178b0:	beq	1789c <argp_error@@Base+0x1600>
   178b4:	push	{r0, r1, lr}
   178b8:	bl	17694 <argp_error@@Base+0x13f8>
   178bc:	pop	{r1, r2, lr}
   178c0:	mul	r3, r2, r0
   178c4:	sub	r1, r1, r3
   178c8:	bx	lr
   178cc:	push	{r1, lr}
   178d0:	mov	r0, #8
   178d4:	bl	10f74 <raise@plt>
   178d8:	pop	{r1, pc}
   178dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   178e0:	mov	r7, r0
   178e4:	ldr	r6, [pc, #72]	; 17934 <argp_error@@Base+0x1698>
   178e8:	ldr	r5, [pc, #72]	; 17938 <argp_error@@Base+0x169c>
   178ec:	add	r6, pc, r6
   178f0:	add	r5, pc, r5
   178f4:	sub	r6, r6, r5
   178f8:	mov	r8, r1
   178fc:	mov	r9, r2
   17900:	bl	10f3c <calloc@plt-0x20>
   17904:	asrs	r6, r6, #2
   17908:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1790c:	mov	r4, #0
   17910:	add	r4, r4, #1
   17914:	ldr	r3, [r5], #4
   17918:	mov	r2, r9
   1791c:	mov	r1, r8
   17920:	mov	r0, r7
   17924:	blx	r3
   17928:	cmp	r6, r4
   1792c:	bne	17910 <argp_error@@Base+0x1674>
   17930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17934:	andeq	r1, r1, r4, lsl r6
   17938:	andeq	r1, r1, ip, lsl #12
   1793c:	bx	lr

Disassembly of section .fini:

00017940 <.fini>:
   17940:	push	{r3, lr}
   17944:	pop	{r3, pc}
