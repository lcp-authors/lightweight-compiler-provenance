
../repos/prog2/1.5:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	107e0 <_start@@Base+0x3c>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <strcmp@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <strcmp@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r0, r1, r4, ror #17

00010720 <strcmp@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <printf@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <fopen@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <__libc_start_main@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <__gmon_start__@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <strlen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <memset@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <fgetc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <fclose@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <fseek@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <abort@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

Disassembly of section .text:

000107a4 <_start@@Base>:
   107a4:	mov	fp, #0
   107a8:	mov	lr, #0
   107ac:	pop	{r1}		; (ldr r1, [sp], #4)
   107b0:	mov	r2, sp
   107b4:	push	{r2}		; (str r2, [sp, #-4]!)
   107b8:	push	{r0}		; (str r0, [sp, #-4]!)
   107bc:	ldr	ip, [pc, #16]	; 107d4 <_start@@Base+0x30>
   107c0:	push	{ip}		; (str ip, [sp, #-4]!)
   107c4:	ldr	r0, [pc, #12]	; 107d8 <_start@@Base+0x34>
   107c8:	ldr	r3, [pc, #12]	; 107dc <_start@@Base+0x38>
   107cc:	bl	10744 <__libc_start_main@plt>
   107d0:	bl	10798 <abort@plt>
   107d4:	andeq	r0, r1, r8, lsl #25
   107d8:	muleq	r1, r4, r8
   107dc:	andeq	r0, r1, r8, lsr #24
   107e0:	ldr	r3, [pc, #20]	; 107fc <_start@@Base+0x58>
   107e4:	ldr	r2, [pc, #20]	; 10800 <_start@@Base+0x5c>
   107e8:	add	r3, pc, r3
   107ec:	ldr	r2, [r3, r2]
   107f0:	cmp	r2, #0
   107f4:	bxeq	lr
   107f8:	b	10750 <__gmon_start__@plt>
   107fc:	andeq	r0, r1, r0, lsl r8
   10800:	andeq	r0, r0, r8, lsr r0
   10804:	ldr	r0, [pc, #24]	; 10824 <_start@@Base+0x80>
   10808:	ldr	r3, [pc, #24]	; 10828 <_start@@Base+0x84>
   1080c:	cmp	r3, r0
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0x88>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, r4, asr #32
   10828:	andeq	r1, r2, r4, asr #32
   1082c:	andeq	r0, r0, r0
   10830:	ldr	r0, [pc, #36]	; 1085c <_start@@Base+0xb8>
   10834:	ldr	r1, [pc, #36]	; 10860 <_start@@Base+0xbc>
   10838:	sub	r1, r1, r0
   1083c:	asr	r1, r1, #2
   10840:	add	r1, r1, r1, lsr #31
   10844:	asrs	r1, r1, #1
   10848:	bxeq	lr
   1084c:	ldr	r3, [pc, #16]	; 10864 <_start@@Base+0xc0>
   10850:	cmp	r3, #0
   10854:	bxeq	lr
   10858:	bx	r3
   1085c:	andeq	r1, r2, r4, asr #32
   10860:	andeq	r1, r2, r4, asr #32
   10864:	andeq	r0, r0, r0
   10868:	push	{r4, lr}
   1086c:	ldr	r4, [pc, #24]	; 1088c <_start@@Base+0xe8>
   10870:	ldrb	r3, [r4]
   10874:	cmp	r3, #0
   10878:	popne	{r4, pc}
   1087c:	bl	10804 <_start@@Base+0x60>
   10880:	mov	r3, #1
   10884:	strb	r3, [r4]
   10888:	pop	{r4, pc}
   1088c:	andeq	r1, r2, r4, asr #32
   10890:	b	10830 <_start@@Base+0x8c>

00010894 <main@@Base>:
   10894:	push	{fp, lr}
   10898:	mov	fp, sp
   1089c:	sub	sp, sp, #56	; 0x38
   108a0:	ldr	r0, [pc, #612]	; 10b0c <main@@Base+0x278>
   108a4:	add	r0, pc, r0
   108a8:	ldr	r1, [pc, #608]	; 10b10 <main@@Base+0x27c>
   108ac:	add	r1, pc, r1
   108b0:	movw	r2, #0
   108b4:	str	r2, [fp, #-4]
   108b8:	str	r2, [fp, #-8]
   108bc:	movw	r3, #1
   108c0:	str	r3, [fp, #-12]
   108c4:	str	r2, [fp, #-16]
   108c8:	str	r2, [fp, #-20]	; 0xffffffec
   108cc:	str	r2, [fp, #-24]	; 0xffffffe8
   108d0:	bl	10738 <fopen@plt>
   108d4:	str	r0, [sp, #24]
   108d8:	ldr	r0, [sp, #24]
   108dc:	bl	10774 <fgetc@plt>
   108e0:	strb	r0, [fp, #-25]	; 0xffffffe7
   108e4:	and	r0, r0, #255	; 0xff
   108e8:	mvn	r1, #0
   108ec:	cmp	r1, r0
   108f0:	beq	10a4c <main@@Base+0x1b8>
   108f4:	ldr	r0, [fp, #-16]
   108f8:	add	r0, r0, #1
   108fc:	str	r0, [fp, #-16]
   10900:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   10904:	cmp	r0, #10
   10908:	bne	1091c <main@@Base+0x88>
   1090c:	ldr	r0, [fp, #-12]
   10910:	add	r0, r0, #1
   10914:	str	r0, [fp, #-12]
   10918:	b	10a48 <main@@Base+0x1b4>
   1091c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   10920:	cmp	r0, #115	; 0x73
   10924:	bne	10950 <main@@Base+0xbc>
   10928:	ldr	r0, [pc, #508]	; 10b2c <main@@Base+0x298>
   1092c:	add	r0, pc, r0
   10930:	ldr	r1, [sp, #24]
   10934:	bl	10b30 <IsIOFunction@@Base>
   10938:	cmp	r0, #0
   1093c:	beq	1094c <main@@Base+0xb8>
   10940:	ldr	r0, [fp, #-20]	; 0xffffffec
   10944:	add	r0, r0, #1
   10948:	str	r0, [fp, #-20]	; 0xffffffec
   1094c:	b	10a44 <main@@Base+0x1b0>
   10950:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   10954:	cmp	r0, #112	; 0x70
   10958:	bne	10984 <main@@Base+0xf0>
   1095c:	ldr	r0, [pc, #452]	; 10b28 <main@@Base+0x294>
   10960:	add	r0, pc, r0
   10964:	ldr	r1, [sp, #24]
   10968:	bl	10b30 <IsIOFunction@@Base>
   1096c:	cmp	r0, #0
   10970:	beq	10980 <main@@Base+0xec>
   10974:	ldr	r0, [fp, #-20]	; 0xffffffec
   10978:	add	r0, r0, #1
   1097c:	str	r0, [fp, #-20]	; 0xffffffec
   10980:	b	10a40 <main@@Base+0x1ac>
   10984:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   10988:	cmp	r0, #47	; 0x2f
   1098c:	bne	109d8 <main@@Base+0x144>
   10990:	ldr	r0, [sp, #24]
   10994:	bl	10774 <fgetc@plt>
   10998:	cmp	r0, #42	; 0x2a
   1099c:	bne	109c4 <main@@Base+0x130>
   109a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109a4:	cmp	r0, #0
   109a8:	bne	109c4 <main@@Base+0x130>
   109ac:	movw	r0, #1
   109b0:	str	r0, [fp, #-24]	; 0xffffffe8
   109b4:	ldr	r0, [fp, #-16]
   109b8:	add	r0, r0, #1
   109bc:	str	r0, [fp, #-16]
   109c0:	b	109d4 <main@@Base+0x140>
   109c4:	ldr	r0, [sp, #24]
   109c8:	mvn	r1, #0
   109cc:	movw	r2, #1
   109d0:	bl	1078c <fseek@plt>
   109d4:	b	10a3c <main@@Base+0x1a8>
   109d8:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   109dc:	cmp	r0, #42	; 0x2a
   109e0:	bne	10a38 <main@@Base+0x1a4>
   109e4:	ldr	r0, [sp, #24]
   109e8:	bl	10774 <fgetc@plt>
   109ec:	cmp	r0, #47	; 0x2f
   109f0:	bne	10a24 <main@@Base+0x190>
   109f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109f8:	cmp	r0, #0
   109fc:	beq	10a24 <main@@Base+0x190>
   10a00:	ldr	r0, [fp, #-16]
   10a04:	add	r0, r0, #1
   10a08:	str	r0, [fp, #-16]
   10a0c:	ldr	r0, [fp, #-8]
   10a10:	add	r0, r0, #1
   10a14:	str	r0, [fp, #-8]
   10a18:	movw	r0, #0
   10a1c:	str	r0, [fp, #-24]	; 0xffffffe8
   10a20:	b	10a34 <main@@Base+0x1a0>
   10a24:	ldr	r0, [sp, #24]
   10a28:	mvn	r1, #0
   10a2c:	movw	r2, #1
   10a30:	bl	1078c <fseek@plt>
   10a34:	b	10a38 <main@@Base+0x1a4>
   10a38:	b	10a3c <main@@Base+0x1a8>
   10a3c:	b	10a40 <main@@Base+0x1ac>
   10a40:	b	10a44 <main@@Base+0x1b0>
   10a44:	b	10a48 <main@@Base+0x1b4>
   10a48:	b	108d8 <main@@Base+0x44>
   10a4c:	ldr	r0, [pc, #208]	; 10b24 <main@@Base+0x290>
   10a50:	add	r0, pc, r0
   10a54:	ldr	r1, [fp, #-12]
   10a58:	bl	1072c <printf@plt>
   10a5c:	ldr	r1, [pc, #188]	; 10b20 <main@@Base+0x28c>
   10a60:	add	r1, pc, r1
   10a64:	ldr	r2, [fp, #-16]
   10a68:	vmov	s0, r2
   10a6c:	vcvt.f32.s32	s0, s0
   10a70:	ldr	r2, [fp, #-12]
   10a74:	vmov	s2, r2
   10a78:	vcvt.f32.s32	s2, s2
   10a7c:	vdiv.f32	s0, s0, s2
   10a80:	vcvt.f64.f32	d16, s0
   10a84:	str	r0, [sp, #20]
   10a88:	mov	r0, r1
   10a8c:	vmov	r2, r3, d16
   10a90:	bl	1072c <printf@plt>
   10a94:	ldr	r1, [pc, #128]	; 10b1c <main@@Base+0x288>
   10a98:	add	r1, pc, r1
   10a9c:	ldr	r2, [fp, #-16]
   10aa0:	str	r0, [sp, #16]
   10aa4:	mov	r0, r1
   10aa8:	mov	r1, r2
   10aac:	bl	1072c <printf@plt>
   10ab0:	ldr	r1, [pc, #96]	; 10b18 <main@@Base+0x284>
   10ab4:	add	r1, pc, r1
   10ab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   10abc:	str	r0, [sp, #12]
   10ac0:	mov	r0, r1
   10ac4:	mov	r1, r2
   10ac8:	bl	1072c <printf@plt>
   10acc:	ldr	r1, [pc, #64]	; 10b14 <main@@Base+0x280>
   10ad0:	add	r1, pc, r1
   10ad4:	ldr	r2, [fp, #-8]
   10ad8:	str	r0, [sp, #8]
   10adc:	mov	r0, r1
   10ae0:	mov	r1, r2
   10ae4:	bl	1072c <printf@plt>
   10ae8:	ldr	r1, [sp, #24]
   10aec:	str	r0, [sp, #4]
   10af0:	mov	r0, r1
   10af4:	bl	10780 <fclose@plt>
   10af8:	ldr	r1, [fp, #-4]
   10afc:	str	r0, [sp]
   10b00:	mov	r0, r1
   10b04:	mov	sp, fp
   10b08:	pop	{fp, pc}
   10b0c:	andeq	r0, r0, ip, ror #7
   10b10:	strdeq	r0, [r0], -r6
   10b14:	andeq	r0, r0, r5, ror #4
   10b18:	andeq	r0, r0, sp, asr #4
   10b1c:	andeq	r0, r0, sl, asr r2
   10b20:	andeq	r0, r0, r7, ror #4
   10b24:	andeq	r0, r0, r1, ror #4
   10b28:	andeq	r0, r0, sl, asr #6
   10b2c:	andeq	r0, r0, r8, ror r3

00010b30 <IsIOFunction@@Base>:
   10b30:	push	{fp, lr}
   10b34:	mov	fp, sp
   10b38:	sub	sp, sp, #40	; 0x28
   10b3c:	str	r0, [fp, #-8]
   10b40:	str	r1, [fp, #-12]
   10b44:	ldr	r0, [fp, #-12]
   10b48:	mvn	r1, #0
   10b4c:	movw	r2, #1
   10b50:	bl	1078c <fseek@plt>
   10b54:	ldr	r1, [fp, #-8]
   10b58:	str	r0, [sp, #8]
   10b5c:	mov	r0, r1
   10b60:	bl	1075c <strlen@plt>
   10b64:	str	r0, [fp, #-16]
   10b68:	add	r0, sp, #13
   10b6c:	movw	r1, #0
   10b70:	and	r1, r1, #255	; 0xff
   10b74:	movw	r2, #7
   10b78:	bl	10768 <memset@plt>
   10b7c:	movw	r0, #0
   10b80:	str	r0, [sp, #20]
   10b84:	ldr	r0, [sp, #20]
   10b88:	ldr	r1, [fp, #-16]
   10b8c:	cmp	r0, r1
   10b90:	bge	10bbc <IsIOFunction@@Base+0x8c>
   10b94:	ldr	r0, [fp, #-12]
   10b98:	bl	10774 <fgetc@plt>
   10b9c:	ldr	r1, [sp, #20]
   10ba0:	add	r2, sp, #13
   10ba4:	add	r1, r2, r1
   10ba8:	strb	r0, [r1]
   10bac:	ldr	r0, [sp, #20]
   10bb0:	add	r0, r0, #1
   10bb4:	str	r0, [sp, #20]
   10bb8:	b	10b84 <IsIOFunction@@Base+0x54>
   10bbc:	ldr	r0, [sp, #20]
   10bc0:	add	r1, sp, #13
   10bc4:	add	r0, r1, r0
   10bc8:	movw	r1, #0
   10bcc:	strb	r1, [r0]
   10bd0:	ldr	r0, [fp, #-12]
   10bd4:	ldr	r1, [fp, #-16]
   10bd8:	movw	r2, #0
   10bdc:	sub	r1, r2, r1
   10be0:	add	r1, r1, #1
   10be4:	movw	r2, #1
   10be8:	bl	1078c <fseek@plt>
   10bec:	add	r1, sp, #13
   10bf0:	ldr	r2, [fp, #-8]
   10bf4:	str	r0, [sp, #4]
   10bf8:	mov	r0, r2
   10bfc:	bl	10720 <strcmp@plt>
   10c00:	cmp	r0, #0
   10c04:	bne	10c14 <IsIOFunction@@Base+0xe4>
   10c08:	movw	r0, #1
   10c0c:	str	r0, [fp, #-4]
   10c10:	b	10c1c <IsIOFunction@@Base+0xec>
   10c14:	movw	r0, #0
   10c18:	str	r0, [fp, #-4]
   10c1c:	ldr	r0, [fp, #-4]
   10c20:	mov	sp, fp
   10c24:	pop	{fp, pc}

00010c28 <__libc_csu_init@@Base>:
   10c28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c2c:	mov	r7, r0
   10c30:	ldr	r6, [pc, #72]	; 10c80 <__libc_csu_init@@Base+0x58>
   10c34:	ldr	r5, [pc, #72]	; 10c84 <__libc_csu_init@@Base+0x5c>
   10c38:	add	r6, pc, r6
   10c3c:	add	r5, pc, r5
   10c40:	sub	r6, r6, r5
   10c44:	mov	r8, r1
   10c48:	mov	r9, r2
   10c4c:	bl	10700 <strcmp@plt-0x20>
   10c50:	asrs	r6, r6, #2
   10c54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c58:	mov	r4, #0
   10c5c:	add	r4, r4, #1
   10c60:	ldr	r3, [r5], #4
   10c64:	mov	r2, r9
   10c68:	mov	r1, r8
   10c6c:	mov	r0, r7
   10c70:	blx	r3
   10c74:	cmp	r6, r4
   10c78:	bne	10c5c <__libc_csu_init@@Base+0x34>
   10c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c80:	andeq	r0, r1, ip, asr #5
   10c84:	andeq	r0, r1, r4, asr #5

00010c88 <__libc_csu_fini@@Base>:
   10c88:	bx	lr

Disassembly of section .fini:

00010c8c <.fini>:
   10c8c:	push	{r3, lr}
   10c90:	pop	{r3, pc}
