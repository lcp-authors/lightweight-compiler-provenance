
../repos/coreutils/src/unexpand:     file format elf32-littlearm


Disassembly of section .init:

00010dd4 <.init>:
   10dd4:	push	{r3, lr}
   10dd8:	bl	11094 <__assert_fail@plt+0x48>
   10ddc:	pop	{r3, pc}

Disassembly of section .plt:

00010de0 <calloc@plt-0x14>:
   10de0:	push	{lr}		; (str lr, [sp, #-4]!)
   10de4:	ldr	lr, [pc, #4]	; 10df0 <calloc@plt-0x4>
   10de8:	add	lr, pc, lr
   10dec:	ldr	pc, [lr, #8]!
   10df0:	andeq	ip, r1, r0, lsl r2

00010df4 <calloc@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #28, 20	; 0x1c000
   10dfc:	ldr	pc, [ip, #528]!	; 0x210

00010e00 <fputs_unlocked@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #28, 20	; 0x1c000
   10e08:	ldr	pc, [ip, #520]!	; 0x208

00010e0c <raise@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #28, 20	; 0x1c000
   10e14:	ldr	pc, [ip, #512]!	; 0x200

00010e18 <strcmp@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #28, 20	; 0x1c000
   10e20:	ldr	pc, [ip, #504]!	; 0x1f8

00010e24 <posix_fadvise64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #28, 20	; 0x1c000
   10e2c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e30 <printf@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #28, 20	; 0x1c000
   10e38:	ldr	pc, [ip, #488]!	; 0x1e8

00010e3c <fflush@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #28, 20	; 0x1c000
   10e44:	ldr	pc, [ip, #480]!	; 0x1e0

00010e48 <free@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #472]!	; 0x1d8

00010e54 <_exit@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e60 <memcpy@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #456]!	; 0x1c8

00010e6c <mbsinit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #448]!	; 0x1c0

00010e78 <fwrite_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #440]!	; 0x1b8

00010e84 <memcmp@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e90 <getc_unlocked@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #424]!	; 0x1a8

00010e9c <realloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ea8 <textdomain@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #408]!	; 0x198

00010eb4 <iswprint@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #400]!	; 0x190

00010ec0 <lseek64@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #392]!	; 0x188

00010ecc <__ctype_get_mb_cur_max@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #384]!	; 0x180

00010ed8 <__fpending@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #376]!	; 0x178

00010ee4 <ferror_unlocked@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #368]!	; 0x170

00010ef0 <mbrtowc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #360]!	; 0x168

00010efc <error@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #352]!	; 0x160

00010f08 <malloc@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #344]!	; 0x158

00010f14 <__libc_start_main@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #336]!	; 0x150

00010f20 <__freading@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #28, 20	; 0x1c000
   10f28:	ldr	pc, [ip, #328]!	; 0x148

00010f2c <__gmon_start__@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #28, 20	; 0x1c000
   10f34:	ldr	pc, [ip, #320]!	; 0x140

00010f38 <getopt_long@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #28, 20	; 0x1c000
   10f40:	ldr	pc, [ip, #312]!	; 0x138

00010f44 <__ctype_b_loc@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #28, 20	; 0x1c000
   10f4c:	ldr	pc, [ip, #304]!	; 0x130

00010f50 <exit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #28, 20	; 0x1c000
   10f58:	ldr	pc, [ip, #296]!	; 0x128

00010f5c <gettext@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #28, 20	; 0x1c000
   10f64:	ldr	pc, [ip, #288]!	; 0x120

00010f68 <strlen@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #28, 20	; 0x1c000
   10f70:	ldr	pc, [ip, #280]!	; 0x118

00010f74 <fprintf@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #28, 20	; 0x1c000
   10f7c:	ldr	pc, [ip, #272]!	; 0x110

00010f80 <__errno_location@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #28, 20	; 0x1c000
   10f88:	ldr	pc, [ip, #264]!	; 0x108

00010f8c <__cxa_atexit@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #28, 20	; 0x1c000
   10f94:	ldr	pc, [ip, #256]!	; 0x100

00010f98 <memset@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #28, 20	; 0x1c000
   10fa0:	ldr	pc, [ip, #248]!	; 0xf8

00010fa4 <fileno@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #28, 20	; 0x1c000
   10fac:	ldr	pc, [ip, #240]!	; 0xf0

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #28, 20	; 0x1c000
   10fb8:	ldr	pc, [ip, #232]!	; 0xe8

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #224]!	; 0xe0

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #216]!	; 0xd8

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #208]!	; 0xd0

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #200]!	; 0xc8

00010fec <clearerr_unlocked@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #192]!	; 0xc0

00010ff8 <fopen64@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #184]!	; 0xb8

00011004 <bindtextdomain@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #176]!	; 0xb0

00011010 <fputs@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #168]!	; 0xa8

0001101c <strncmp@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #160]!	; 0xa0

00011028 <abort@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #152]!	; 0x98

00011034 <putchar_unlocked@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #144]!	; 0x90

00011040 <strspn@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #136]!	; 0x88

0001104c <__assert_fail@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

00011058 <.text>:
   11058:	mov	fp, #0
   1105c:	mov	lr, #0
   11060:	pop	{r1}		; (ldr r1, [sp], #4)
   11064:	mov	r2, sp
   11068:	push	{r2}		; (str r2, [sp, #-4]!)
   1106c:	push	{r0}		; (str r0, [sp, #-4]!)
   11070:	ldr	ip, [pc, #16]	; 11088 <__assert_fail@plt+0x3c>
   11074:	push	{ip}		; (str ip, [sp, #-4]!)
   11078:	ldr	r0, [pc, #12]	; 1108c <__assert_fail@plt+0x40>
   1107c:	ldr	r3, [pc, #12]	; 11090 <__assert_fail@plt+0x44>
   11080:	bl	10f14 <__libc_start_main@plt>
   11084:	bl	11028 <abort@plt>
   11088:	andeq	fp, r1, ip, asr r6
   1108c:	muleq	r1, r8, r4
   11090:	strdeq	fp, [r1], -ip
   11094:	ldr	r3, [pc, #20]	; 110b0 <__assert_fail@plt+0x64>
   11098:	ldr	r2, [pc, #20]	; 110b4 <__assert_fail@plt+0x68>
   1109c:	add	r3, pc, r3
   110a0:	ldr	r2, [r3, r2]
   110a4:	cmp	r2, #0
   110a8:	bxeq	lr
   110ac:	b	10f2c <__gmon_start__@plt>
   110b0:	andeq	fp, r1, ip, asr pc
   110b4:	ldrdeq	r0, [r0], -r8
   110b8:	ldr	r0, [pc, #24]	; 110d8 <__assert_fail@plt+0x8c>
   110bc:	ldr	r3, [pc, #24]	; 110dc <__assert_fail@plt+0x90>
   110c0:	cmp	r3, r0
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__assert_fail@plt+0x94>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	sp, r2, r4, lsr r1
   110dc:	andeq	sp, r2, r4, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	ldr	r0, [pc, #36]	; 11110 <__assert_fail@plt+0xc4>
   110e8:	ldr	r1, [pc, #36]	; 11114 <__assert_fail@plt+0xc8>
   110ec:	sub	r1, r1, r0
   110f0:	asr	r1, r1, #2
   110f4:	add	r1, r1, r1, lsr #31
   110f8:	asrs	r1, r1, #1
   110fc:	bxeq	lr
   11100:	ldr	r3, [pc, #16]	; 11118 <__assert_fail@plt+0xcc>
   11104:	cmp	r3, #0
   11108:	bxeq	lr
   1110c:	bx	r3
   11110:	andeq	sp, r2, r4, lsr r1
   11114:	andeq	sp, r2, r4, lsr r1
   11118:	andeq	r0, r0, r0
   1111c:	push	{r4, lr}
   11120:	ldr	r4, [pc, #24]	; 11140 <__assert_fail@plt+0xf4>
   11124:	ldrb	r3, [r4]
   11128:	cmp	r3, #0
   1112c:	popne	{r4, pc}
   11130:	bl	110b8 <__assert_fail@plt+0x6c>
   11134:	mov	r3, #1
   11138:	strb	r3, [r4]
   1113c:	pop	{r4, pc}
   11140:	andeq	sp, r2, ip, asr r1
   11144:	b	110e4 <__assert_fail@plt+0x98>
   11148:	push	{fp, lr}
   1114c:	mov	fp, sp
   11150:	sub	sp, sp, #40	; 0x28
   11154:	str	r0, [fp, #-4]
   11158:	ldr	r0, [fp, #-4]
   1115c:	cmp	r0, #0
   11160:	beq	111b0 <__assert_fail@plt+0x164>
   11164:	b	11168 <__assert_fail@plt+0x11c>
   11168:	movw	r0, #53576	; 0xd148
   1116c:	movt	r0, #2
   11170:	ldr	r0, [r0]
   11174:	movw	r1, #46724	; 0xb684
   11178:	movt	r1, #1
   1117c:	str	r0, [fp, #-8]
   11180:	mov	r0, r1
   11184:	bl	10f5c <gettext@plt>
   11188:	movw	r1, #53668	; 0xd1a4
   1118c:	movt	r1, #2
   11190:	ldr	r2, [r1]
   11194:	ldr	r1, [fp, #-8]
   11198:	str	r0, [fp, #-12]
   1119c:	mov	r0, r1
   111a0:	ldr	r1, [fp, #-12]
   111a4:	bl	10f74 <fprintf@plt>
   111a8:	str	r0, [fp, #-16]
   111ac:	b	11274 <__assert_fail@plt+0x228>
   111b0:	movw	r0, #46763	; 0xb6ab
   111b4:	movt	r0, #1
   111b8:	bl	10f5c <gettext@plt>
   111bc:	movw	lr, #53668	; 0xd1a4
   111c0:	movt	lr, #2
   111c4:	ldr	r1, [lr]
   111c8:	bl	10e30 <printf@plt>
   111cc:	movw	r1, #46796	; 0xb6cc
   111d0:	movt	r1, #1
   111d4:	str	r0, [sp, #20]
   111d8:	mov	r0, r1
   111dc:	bl	10f5c <gettext@plt>
   111e0:	movw	r1, #53588	; 0xd154
   111e4:	movt	r1, #2
   111e8:	ldr	r1, [r1]
   111ec:	bl	10e00 <fputs_unlocked@plt>
   111f0:	str	r0, [sp, #16]
   111f4:	bl	1127c <__assert_fail@plt+0x230>
   111f8:	bl	112b0 <__assert_fail@plt+0x264>
   111fc:	movw	r0, #46862	; 0xb70e
   11200:	movt	r0, #1
   11204:	bl	10f5c <gettext@plt>
   11208:	movw	r1, #53588	; 0xd154
   1120c:	movt	r1, #2
   11210:	ldr	r1, [r1]
   11214:	bl	10e00 <fputs_unlocked@plt>
   11218:	str	r0, [sp, #12]
   1121c:	bl	12d98 <__assert_fail@plt+0x1d4c>
   11220:	movw	r0, #47083	; 0xb7eb
   11224:	movt	r0, #1
   11228:	bl	10f5c <gettext@plt>
   1122c:	movw	r1, #53588	; 0xd154
   11230:	movt	r1, #2
   11234:	ldr	r1, [r1]
   11238:	bl	10e00 <fputs_unlocked@plt>
   1123c:	movw	r1, #47128	; 0xb818
   11240:	movt	r1, #1
   11244:	str	r0, [sp, #8]
   11248:	mov	r0, r1
   1124c:	bl	10f5c <gettext@plt>
   11250:	movw	r1, #53588	; 0xd154
   11254:	movt	r1, #2
   11258:	ldr	r1, [r1]
   1125c:	bl	10e00 <fputs_unlocked@plt>
   11260:	movw	r1, #47182	; 0xb84e
   11264:	movt	r1, #1
   11268:	str	r0, [sp, #4]
   1126c:	mov	r0, r1
   11270:	bl	112e4 <__assert_fail@plt+0x298>
   11274:	ldr	r0, [fp, #-4]
   11278:	bl	10f50 <exit@plt>
   1127c:	push	{fp, lr}
   11280:	mov	fp, sp
   11284:	sub	sp, sp, #8
   11288:	movw	r0, #47288	; 0xb8b8
   1128c:	movt	r0, #1
   11290:	bl	10f5c <gettext@plt>
   11294:	movw	lr, #53588	; 0xd154
   11298:	movt	lr, #2
   1129c:	ldr	r1, [lr]
   112a0:	bl	10e00 <fputs_unlocked@plt>
   112a4:	str	r0, [sp, #4]
   112a8:	mov	sp, fp
   112ac:	pop	{fp, pc}
   112b0:	push	{fp, lr}
   112b4:	mov	fp, sp
   112b8:	sub	sp, sp, #8
   112bc:	movw	r0, #47344	; 0xb8f0
   112c0:	movt	r0, #1
   112c4:	bl	10f5c <gettext@plt>
   112c8:	movw	lr, #53588	; 0xd154
   112cc:	movt	lr, #2
   112d0:	ldr	r1, [lr]
   112d4:	bl	10e00 <fputs_unlocked@plt>
   112d8:	str	r0, [sp, #4]
   112dc:	mov	sp, fp
   112e0:	pop	{fp, pc}
   112e4:	push	{fp, lr}
   112e8:	mov	fp, sp
   112ec:	sub	sp, sp, #96	; 0x60
   112f0:	add	r1, sp, #36	; 0x24
   112f4:	movw	r2, #47896	; 0xbb18
   112f8:	movt	r2, #1
   112fc:	str	r0, [fp, #-4]
   11300:	mov	r0, r1
   11304:	str	r1, [sp, #20]
   11308:	mov	r1, r2
   1130c:	movw	r2, #56	; 0x38
   11310:	bl	10e60 <memcpy@plt>
   11314:	ldr	r0, [fp, #-4]
   11318:	str	r0, [sp, #32]
   1131c:	ldr	r0, [sp, #20]
   11320:	str	r0, [sp, #28]
   11324:	ldr	r0, [sp, #28]
   11328:	ldr	r0, [r0]
   1132c:	movw	r1, #0
   11330:	cmp	r0, r1
   11334:	movw	r0, #0
   11338:	str	r0, [sp, #16]
   1133c:	beq	11368 <__assert_fail@plt+0x31c>
   11340:	ldr	r0, [fp, #-4]
   11344:	ldr	r1, [sp, #28]
   11348:	ldr	r1, [r1]
   1134c:	bl	10e18 <strcmp@plt>
   11350:	cmp	r0, #0
   11354:	movw	r0, #0
   11358:	moveq	r0, #1
   1135c:	mvn	r1, #0
   11360:	eor	r0, r0, r1
   11364:	str	r0, [sp, #16]
   11368:	ldr	r0, [sp, #16]
   1136c:	tst	r0, #1
   11370:	beq	11384 <__assert_fail@plt+0x338>
   11374:	ldr	r0, [sp, #28]
   11378:	add	r0, r0, #8
   1137c:	str	r0, [sp, #28]
   11380:	b	11324 <__assert_fail@plt+0x2d8>
   11384:	ldr	r0, [sp, #28]
   11388:	ldr	r0, [r0, #4]
   1138c:	movw	r1, #0
   11390:	cmp	r0, r1
   11394:	beq	113a4 <__assert_fail@plt+0x358>
   11398:	ldr	r0, [sp, #28]
   1139c:	ldr	r0, [r0, #4]
   113a0:	str	r0, [sp, #32]
   113a4:	movw	r0, #47514	; 0xb99a
   113a8:	movt	r0, #1
   113ac:	bl	10f5c <gettext@plt>
   113b0:	movw	r1, #47230	; 0xb87e
   113b4:	movt	r1, #1
   113b8:	movw	r2, #47537	; 0xb9b1
   113bc:	movt	r2, #1
   113c0:	bl	10e30 <printf@plt>
   113c4:	movw	r1, #5
   113c8:	str	r0, [sp, #12]
   113cc:	mov	r0, r1
   113d0:	movw	r1, #0
   113d4:	bl	10fc8 <setlocale@plt>
   113d8:	str	r0, [sp, #24]
   113dc:	ldr	r0, [sp, #24]
   113e0:	movw	r1, #0
   113e4:	cmp	r0, r1
   113e8:	beq	11428 <__assert_fail@plt+0x3dc>
   113ec:	ldr	r0, [sp, #24]
   113f0:	movw	r1, #47577	; 0xb9d9
   113f4:	movt	r1, #1
   113f8:	movw	r2, #3
   113fc:	bl	1101c <strncmp@plt>
   11400:	cmp	r0, #0
   11404:	beq	11428 <__assert_fail@plt+0x3dc>
   11408:	movw	r0, #47581	; 0xb9dd
   1140c:	movt	r0, #1
   11410:	bl	10f5c <gettext@plt>
   11414:	movw	lr, #53588	; 0xd154
   11418:	movt	lr, #2
   1141c:	ldr	r1, [lr]
   11420:	bl	10e00 <fputs_unlocked@plt>
   11424:	str	r0, [sp, #8]
   11428:	movw	r0, #47652	; 0xba24
   1142c:	movt	r0, #1
   11430:	bl	10f5c <gettext@plt>
   11434:	ldr	r2, [fp, #-4]
   11438:	movw	r1, #47537	; 0xb9b1
   1143c:	movt	r1, #1
   11440:	bl	10e30 <printf@plt>
   11444:	movw	r1, #47679	; 0xba3f
   11448:	movt	r1, #1
   1144c:	str	r0, [sp, #4]
   11450:	mov	r0, r1
   11454:	bl	10f5c <gettext@plt>
   11458:	ldr	r1, [sp, #32]
   1145c:	ldr	r2, [sp, #32]
   11460:	ldr	lr, [fp, #-4]
   11464:	cmp	r2, lr
   11468:	movw	r2, #0
   1146c:	moveq	r2, #1
   11470:	tst	r2, #1
   11474:	movw	r2, #47729	; 0xba71
   11478:	movt	r2, #1
   1147c:	movw	lr, #47447	; 0xb957
   11480:	movt	lr, #1
   11484:	movne	r2, lr
   11488:	bl	10e30 <printf@plt>
   1148c:	str	r0, [sp]
   11490:	mov	sp, fp
   11494:	pop	{fp, pc}
   11498:	push	{fp, lr}
   1149c:	mov	fp, sp
   114a0:	sub	sp, sp, #88	; 0x58
   114a4:	movw	r2, #0
   114a8:	str	r2, [fp, #-4]
   114ac:	str	r0, [fp, #-8]
   114b0:	str	r1, [fp, #-12]
   114b4:	movw	r0, #0
   114b8:	strb	r0, [fp, #-13]
   114bc:	strb	r0, [fp, #-29]	; 0xffffffe3
   114c0:	ldr	r0, [fp, #-12]
   114c4:	ldr	r0, [r0]
   114c8:	bl	13300 <__assert_fail@plt+0x22b4>
   114cc:	movw	r0, #6
   114d0:	movw	r1, #47729	; 0xba71
   114d4:	movt	r1, #1
   114d8:	bl	10fc8 <setlocale@plt>
   114dc:	movw	r1, #47234	; 0xb882
   114e0:	movt	r1, #1
   114e4:	str	r0, [fp, #-36]	; 0xffffffdc
   114e8:	mov	r0, r1
   114ec:	movw	r1, #47191	; 0xb857
   114f0:	movt	r1, #1
   114f4:	bl	11004 <bindtextdomain@plt>
   114f8:	movw	r1, #47234	; 0xb882
   114fc:	movt	r1, #1
   11500:	str	r0, [fp, #-40]	; 0xffffffd8
   11504:	mov	r0, r1
   11508:	bl	10ea8 <textdomain@plt>
   1150c:	movw	r1, #11832	; 0x2e38
   11510:	movt	r1, #1
   11514:	str	r0, [sp, #44]	; 0x2c
   11518:	mov	r0, r1
   1151c:	bl	1b660 <__assert_fail@plt+0xa614>
   11520:	str	r0, [sp, #40]	; 0x28
   11524:	ldr	r0, [fp, #-8]
   11528:	ldr	r1, [fp, #-12]
   1152c:	movw	r2, #47215	; 0xb86f
   11530:	movt	r2, #1
   11534:	movw	r3, #47800	; 0xbab8
   11538:	movt	r3, #1
   1153c:	movw	ip, #0
   11540:	str	ip, [sp]
   11544:	bl	10f38 <getopt_long@plt>
   11548:	str	r0, [fp, #-28]	; 0xffffffe4
   1154c:	cmn	r0, #1
   11550:	beq	11794 <__assert_fail@plt+0x748>
   11554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11558:	cmn	r0, #3
   1155c:	str	r0, [sp, #36]	; 0x24
   11560:	beq	11640 <__assert_fail@plt+0x5f4>
   11564:	b	11568 <__assert_fail@plt+0x51c>
   11568:	ldr	r0, [sp, #36]	; 0x24
   1156c:	cmn	r0, #2
   11570:	beq	11638 <__assert_fail@plt+0x5ec>
   11574:	b	11578 <__assert_fail@plt+0x52c>
   11578:	ldr	r0, [sp, #36]	; 0x24
   1157c:	cmp	r0, #44	; 0x2c
   11580:	beq	11614 <__assert_fail@plt+0x5c8>
   11584:	b	11588 <__assert_fail@plt+0x53c>
   11588:	ldr	r0, [sp, #36]	; 0x24
   1158c:	cmp	r0, #63	; 0x3f
   11590:	beq	115c8 <__assert_fail@plt+0x57c>
   11594:	b	11598 <__assert_fail@plt+0x54c>
   11598:	ldr	r0, [sp, #36]	; 0x24
   1159c:	cmp	r0, #97	; 0x61
   115a0:	beq	115d0 <__assert_fail@plt+0x584>
   115a4:	b	115a8 <__assert_fail@plt+0x55c>
   115a8:	ldr	r0, [sp, #36]	; 0x24
   115ac:	cmp	r0, #116	; 0x74
   115b0:	beq	115e4 <__assert_fail@plt+0x598>
   115b4:	b	115b8 <__assert_fail@plt+0x56c>
   115b8:	ldr	r0, [sp, #36]	; 0x24
   115bc:	cmp	r0, #256	; 0x100
   115c0:	beq	11608 <__assert_fail@plt+0x5bc>
   115c4:	b	11688 <__assert_fail@plt+0x63c>
   115c8:	movw	r0, #1
   115cc:	bl	11148 <__assert_fail@plt+0xfc>
   115d0:	movw	r0, #53600	; 0xd160
   115d4:	movt	r0, #2
   115d8:	movw	r1, #1
   115dc:	strb	r1, [r0]
   115e0:	b	11790 <__assert_fail@plt+0x744>
   115e4:	movw	r0, #53600	; 0xd160
   115e8:	movt	r0, #2
   115ec:	movw	r1, #1
   115f0:	strb	r1, [r0]
   115f4:	movw	r0, #53592	; 0xd158
   115f8:	movt	r0, #2
   115fc:	ldr	r0, [r0]
   11600:	bl	11edc <__assert_fail@plt+0xe90>
   11604:	b	11790 <__assert_fail@plt+0x744>
   11608:	movw	r0, #1
   1160c:	strb	r0, [fp, #-29]	; 0xffffffe3
   11610:	b	11790 <__assert_fail@plt+0x744>
   11614:	ldrb	r0, [fp, #-13]
   11618:	tst	r0, #1
   1161c:	beq	1162c <__assert_fail@plt+0x5e0>
   11620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11624:	ldr	r1, [fp, #-20]	; 0xffffffec
   11628:	bl	11d00 <__assert_fail@plt+0xcb4>
   1162c:	movw	r0, #0
   11630:	strb	r0, [fp, #-13]
   11634:	b	11790 <__assert_fail@plt+0x744>
   11638:	movw	r0, #0
   1163c:	bl	11148 <__assert_fail@plt+0xfc>
   11640:	movw	r0, #53588	; 0xd154
   11644:	movt	r0, #2
   11648:	ldr	r0, [r0]
   1164c:	movw	r1, #53484	; 0xd0ec
   11650:	movt	r1, #2
   11654:	ldr	r3, [r1]
   11658:	movw	r1, #47182	; 0xb84e
   1165c:	movt	r1, #1
   11660:	movw	r2, #47230	; 0xb87e
   11664:	movt	r2, #1
   11668:	movw	ip, #47244	; 0xb88c
   1166c:	movt	ip, #1
   11670:	str	ip, [sp]
   11674:	movw	ip, #0
   11678:	str	ip, [sp, #4]
   1167c:	bl	16218 <__assert_fail@plt+0x51cc>
   11680:	movw	r0, #0
   11684:	bl	10f50 <exit@plt>
   11688:	ldrb	r0, [fp, #-13]
   1168c:	tst	r0, #1
   11690:	bne	116a8 <__assert_fail@plt+0x65c>
   11694:	mov	r0, #0
   11698:	str	r0, [fp, #-20]	; 0xffffffec
   1169c:	str	r0, [fp, #-24]	; 0xffffffe8
   116a0:	movw	r0, #1
   116a4:	strb	r0, [fp, #-13]
   116a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   116b0:	movw	r2, #39321	; 0x9999
   116b4:	movt	r2, #39321	; 0x9999
   116b8:	subs	r0, r2, r0
   116bc:	movw	r2, #39321	; 0x9999
   116c0:	movt	r2, #6553	; 0x1999
   116c4:	sbcs	r1, r2, r1
   116c8:	str	r0, [sp, #32]
   116cc:	str	r1, [sp, #28]
   116d0:	bcc	11718 <__assert_fail@plt+0x6cc>
   116d4:	b	116d8 <__assert_fail@plt+0x68c>
   116d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   116e0:	mov	r2, #10
   116e4:	umull	r2, r3, r0, r2
   116e8:	add	ip, r1, r1, lsl #2
   116ec:	add	r3, r3, ip, lsl #1
   116f0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   116f4:	sub	ip, ip, #48	; 0x30
   116f8:	adds	r2, r2, ip
   116fc:	adc	r3, r3, ip, asr #31
   11700:	subs	r0, r2, r0
   11704:	sbcs	r1, r3, r1
   11708:	str	r0, [sp, #24]
   1170c:	str	r1, [sp, #20]
   11710:	bcs	11724 <__assert_fail@plt+0x6d8>
   11714:	b	11718 <__assert_fail@plt+0x6cc>
   11718:	movw	r0, #0
   1171c:	str	r0, [sp, #16]
   11720:	b	1175c <__assert_fail@plt+0x710>
   11724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11728:	ldr	r1, [fp, #-20]	; 0xffffffec
   1172c:	mov	r2, #10
   11730:	umull	r0, r2, r0, r2
   11734:	add	r1, r1, r1, lsl #2
   11738:	add	r1, r2, r1, lsl #1
   1173c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11740:	sub	r2, r2, #48	; 0x30
   11744:	adds	r0, r0, r2
   11748:	adc	r1, r1, r2, asr #31
   1174c:	str	r0, [fp, #-24]	; 0xffffffe8
   11750:	str	r1, [fp, #-20]	; 0xffffffec
   11754:	movw	r0, #1
   11758:	str	r0, [sp, #16]
   1175c:	ldr	r0, [sp, #16]
   11760:	cmp	r0, #0
   11764:	bne	1178c <__assert_fail@plt+0x740>
   11768:	movw	r0, #47260	; 0xb89c
   1176c:	movt	r0, #1
   11770:	bl	10f5c <gettext@plt>
   11774:	movw	lr, #1
   11778:	str	r0, [sp, #12]
   1177c:	mov	r0, lr
   11780:	movw	r1, #0
   11784:	ldr	r2, [sp, #12]
   11788:	bl	10efc <error@plt>
   1178c:	b	11790 <__assert_fail@plt+0x744>
   11790:	b	11524 <__assert_fail@plt+0x4d8>
   11794:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11798:	tst	r0, #1
   1179c:	beq	117b0 <__assert_fail@plt+0x764>
   117a0:	movw	r0, #53600	; 0xd160
   117a4:	movt	r0, #2
   117a8:	movw	r1, #0
   117ac:	strb	r1, [r0]
   117b0:	ldrb	r0, [fp, #-13]
   117b4:	tst	r0, #1
   117b8:	beq	117c8 <__assert_fail@plt+0x77c>
   117bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   117c4:	bl	11d00 <__assert_fail@plt+0xcb4>
   117c8:	bl	124c8 <__assert_fail@plt+0x147c>
   117cc:	movw	lr, #53568	; 0xd140
   117d0:	movt	lr, #2
   117d4:	ldr	lr, [lr]
   117d8:	ldr	r0, [fp, #-8]
   117dc:	cmp	lr, r0
   117e0:	bge	11800 <__assert_fail@plt+0x7b4>
   117e4:	ldr	r0, [fp, #-12]
   117e8:	movw	r1, #53568	; 0xd140
   117ec:	movt	r1, #2
   117f0:	ldr	r1, [r1]
   117f4:	add	r0, r0, r1, lsl #2
   117f8:	str	r0, [sp, #8]
   117fc:	b	1180c <__assert_fail@plt+0x7c0>
   11800:	movw	r0, #0
   11804:	str	r0, [sp, #8]
   11808:	b	1180c <__assert_fail@plt+0x7c0>
   1180c:	ldr	r0, [sp, #8]
   11810:	bl	12aa4 <__assert_fail@plt+0x1a58>
   11814:	bl	11830 <__assert_fail@plt+0x7e4>
   11818:	bl	12d48 <__assert_fail@plt+0x1cfc>
   1181c:	movw	r0, #53604	; 0xd164
   11820:	movt	r0, #2
   11824:	ldr	r0, [r0]
   11828:	mov	sp, fp
   1182c:	pop	{fp, pc}
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #88	; 0x58
   1183c:	movw	r0, #0
   11840:	bl	12afc <__assert_fail@plt+0x1ab0>
   11844:	str	r0, [fp, #-4]
   11848:	ldr	r0, [fp, #-4]
   1184c:	movw	lr, #0
   11850:	cmp	r0, lr
   11854:	bne	1185c <__assert_fail@plt+0x810>
   11858:	b	11cf8 <__assert_fail@plt+0xcac>
   1185c:	movw	r0, #53976	; 0xd2d8
   11860:	movt	r0, #2
   11864:	ldr	r0, [r0]
   11868:	bl	163a8 <__assert_fail@plt+0x535c>
   1186c:	str	r0, [fp, #-8]
   11870:	mov	r0, #1
   11874:	strb	r0, [fp, #-13]
   11878:	mov	r0, #0
   1187c:	str	r0, [fp, #-20]	; 0xffffffec
   11880:	str	r0, [fp, #-24]	; 0xffffffe8
   11884:	str	r0, [fp, #-28]	; 0xffffffe4
   11888:	str	r0, [fp, #-32]	; 0xffffffe0
   1188c:	movw	r0, #0
   11890:	str	r0, [fp, #-36]	; 0xffffffdc
   11894:	movw	r1, #0
   11898:	strb	r1, [fp, #-37]	; 0xffffffdb
   1189c:	movw	r1, #1
   118a0:	strb	r1, [fp, #-38]	; 0xffffffda
   118a4:	str	r0, [sp, #44]	; 0x2c
   118a8:	b	118ac <__assert_fail@plt+0x860>
   118ac:	ldr	r0, [fp, #-4]
   118b0:	bl	10e90 <getc_unlocked@plt>
   118b4:	str	r0, [fp, #-12]
   118b8:	cmp	r0, #0
   118bc:	movw	r0, #0
   118c0:	str	r0, [sp, #36]	; 0x24
   118c4:	bge	118e8 <__assert_fail@plt+0x89c>
   118c8:	ldr	r0, [fp, #-4]
   118cc:	bl	12afc <__assert_fail@plt+0x1ab0>
   118d0:	str	r0, [fp, #-4]
   118d4:	movw	lr, #0
   118d8:	cmp	r0, lr
   118dc:	movw	r0, #0
   118e0:	movne	r0, #1
   118e4:	str	r0, [sp, #36]	; 0x24
   118e8:	ldr	r0, [sp, #36]	; 0x24
   118ec:	tst	r0, #1
   118f0:	beq	118f8 <__assert_fail@plt+0x8ac>
   118f4:	b	118ac <__assert_fail@plt+0x860>
   118f8:	ldrb	r0, [fp, #-13]
   118fc:	tst	r0, #1
   11900:	beq	11c8c <__assert_fail@plt+0xc40>
   11904:	bl	10f44 <__ctype_b_loc@plt>
   11908:	ldr	r0, [r0]
   1190c:	ldr	lr, [fp, #-12]
   11910:	add	r0, r0, lr, lsl #1
   11914:	ldrh	r0, [r0]
   11918:	and	r0, r0, #1
   1191c:	cmp	r0, #0
   11920:	movw	r0, #0
   11924:	movne	r0, #1
   11928:	mvn	lr, #0
   1192c:	eor	r0, r0, lr
   11930:	eor	r0, r0, lr
   11934:	and	r0, r0, #1
   11938:	strb	r0, [sp, #43]	; 0x2b
   1193c:	ldrb	r0, [sp, #43]	; 0x2b
   11940:	tst	r0, #1
   11944:	beq	11ad0 <__assert_fail@plt+0xa84>
   11948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1194c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11950:	sub	r2, fp, #36	; 0x24
   11954:	add	r3, sp, #42	; 0x2a
   11958:	bl	127d4 <__assert_fail@plt+0x1788>
   1195c:	str	r1, [fp, #-28]	; 0xffffffe4
   11960:	str	r0, [fp, #-32]	; 0xffffffe0
   11964:	ldrb	r0, [sp, #42]	; 0x2a
   11968:	tst	r0, #1
   1196c:	beq	11978 <__assert_fail@plt+0x92c>
   11970:	movw	r0, #0
   11974:	strb	r0, [fp, #-13]
   11978:	ldrb	r0, [fp, #-13]
   1197c:	tst	r0, #1
   11980:	beq	11acc <__assert_fail@plt+0xa80>
   11984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11988:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1198c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11990:	ldr	r3, [fp, #-20]	; 0xffffffec
   11994:	subs	r0, r0, r2
   11998:	sbcs	r1, r1, r3
   1199c:	str	r0, [sp, #32]
   119a0:	str	r1, [sp, #28]
   119a4:	bcs	119d0 <__assert_fail@plt+0x984>
   119a8:	b	119ac <__assert_fail@plt+0x960>
   119ac:	movw	r0, #47763	; 0xba93
   119b0:	movt	r0, #1
   119b4:	bl	10f5c <gettext@plt>
   119b8:	movw	lr, #1
   119bc:	str	r0, [sp, #24]
   119c0:	mov	r0, lr
   119c4:	movw	r1, #0
   119c8:	ldr	r2, [sp, #24]
   119cc:	bl	10efc <error@plt>
   119d0:	ldr	r0, [fp, #-12]
   119d4:	cmp	r0, #9
   119d8:	bne	11a08 <__assert_fail@plt+0x9bc>
   119dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   119e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119e4:	str	r1, [fp, #-20]	; 0xffffffec
   119e8:	str	r0, [fp, #-24]	; 0xffffffe8
   119ec:	ldr	r0, [sp, #44]	; 0x2c
   119f0:	cmp	r0, #0
   119f4:	beq	11a04 <__assert_fail@plt+0x9b8>
   119f8:	ldr	r0, [fp, #-8]
   119fc:	movw	r1, #9
   11a00:	strb	r1, [r0]
   11a04:	b	11ac0 <__assert_fail@plt+0xa74>
   11a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a10:	adds	r0, r0, #1
   11a14:	adc	r1, r1, #0
   11a18:	str	r0, [fp, #-24]	; 0xffffffe8
   11a1c:	str	r1, [fp, #-20]	; 0xffffffec
   11a20:	ldrb	r0, [fp, #-38]	; 0xffffffda
   11a24:	tst	r0, #1
   11a28:	beq	11a54 <__assert_fail@plt+0xa08>
   11a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a30:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11a38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a3c:	eor	r1, r1, r3
   11a40:	eor	r0, r0, r2
   11a44:	orr	r0, r0, r1
   11a48:	cmp	r0, #0
   11a4c:	beq	11aac <__assert_fail@plt+0xa60>
   11a50:	b	11a54 <__assert_fail@plt+0xa08>
   11a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11a60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a64:	eor	r1, r1, r3
   11a68:	eor	r0, r0, r2
   11a6c:	orr	r0, r0, r1
   11a70:	cmp	r0, #0
   11a74:	bne	11a84 <__assert_fail@plt+0xa38>
   11a78:	b	11a7c <__assert_fail@plt+0xa30>
   11a7c:	movw	r0, #1
   11a80:	strb	r0, [fp, #-37]	; 0xffffffdb
   11a84:	ldr	r0, [fp, #-12]
   11a88:	ldr	r1, [fp, #-8]
   11a8c:	ldr	r2, [sp, #44]	; 0x2c
   11a90:	add	r3, r2, #1
   11a94:	str	r3, [sp, #44]	; 0x2c
   11a98:	add	r1, r1, r2
   11a9c:	strb	r0, [r1]
   11aa0:	movw	r0, #1
   11aa4:	strb	r0, [fp, #-38]	; 0xffffffda
   11aa8:	b	11ce8 <__assert_fail@plt+0xc9c>
   11aac:	movw	r0, #9
   11ab0:	str	r0, [fp, #-12]
   11ab4:	ldr	r0, [fp, #-8]
   11ab8:	movw	r1, #9
   11abc:	strb	r1, [r0]
   11ac0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11ac4:	and	r0, r0, #1
   11ac8:	str	r0, [sp, #44]	; 0x2c
   11acc:	b	11b9c <__assert_fail@plt+0xb50>
   11ad0:	ldr	r0, [fp, #-12]
   11ad4:	cmp	r0, #8
   11ad8:	bne	11b40 <__assert_fail@plt+0xaf4>
   11adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ae4:	orr	r2, r0, r1
   11ae8:	cmp	r2, #0
   11aec:	movwne	r2, #1
   11af0:	subs	r0, r0, r2
   11af4:	sbc	r1, r1, #0
   11af8:	str	r0, [fp, #-24]	; 0xffffffe8
   11afc:	str	r1, [fp, #-20]	; 0xffffffec
   11b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b04:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b08:	str	r1, [fp, #-28]	; 0xffffffe4
   11b0c:	str	r0, [fp, #-32]	; 0xffffffe0
   11b10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b14:	cmp	r0, #0
   11b18:	movw	r0, #0
   11b1c:	movne	r0, #1
   11b20:	mvn	r1, #0
   11b24:	eor	r0, r0, r1
   11b28:	eor	r0, r0, r1
   11b2c:	and	r0, r0, #1
   11b30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b34:	sub	r0, r1, r0
   11b38:	str	r0, [fp, #-36]	; 0xffffffdc
   11b3c:	b	11b98 <__assert_fail@plt+0xb4c>
   11b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b44:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b48:	adds	r0, r0, #1
   11b4c:	adc	r1, r1, #0
   11b50:	str	r0, [fp, #-24]	; 0xffffffe8
   11b54:	str	r1, [fp, #-20]	; 0xffffffec
   11b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b60:	orr	r0, r0, r1
   11b64:	cmp	r0, #0
   11b68:	bne	11b94 <__assert_fail@plt+0xb48>
   11b6c:	b	11b70 <__assert_fail@plt+0xb24>
   11b70:	movw	r0, #47763	; 0xba93
   11b74:	movt	r0, #1
   11b78:	bl	10f5c <gettext@plt>
   11b7c:	movw	lr, #1
   11b80:	str	r0, [sp, #20]
   11b84:	mov	r0, lr
   11b88:	movw	r1, #0
   11b8c:	ldr	r2, [sp, #20]
   11b90:	bl	10efc <error@plt>
   11b94:	b	11b98 <__assert_fail@plt+0xb4c>
   11b98:	b	11b9c <__assert_fail@plt+0xb50>
   11b9c:	ldr	r0, [sp, #44]	; 0x2c
   11ba0:	cmp	r0, #0
   11ba4:	beq	11c34 <__assert_fail@plt+0xbe8>
   11ba8:	ldr	r0, [sp, #44]	; 0x2c
   11bac:	cmp	r0, #1
   11bb0:	bls	11bcc <__assert_fail@plt+0xb80>
   11bb4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11bb8:	tst	r0, #1
   11bbc:	beq	11bcc <__assert_fail@plt+0xb80>
   11bc0:	ldr	r0, [fp, #-8]
   11bc4:	movw	r1, #9
   11bc8:	strb	r1, [r0]
   11bcc:	ldr	r0, [fp, #-8]
   11bd0:	ldr	r2, [sp, #44]	; 0x2c
   11bd4:	movw	r1, #53588	; 0xd154
   11bd8:	movt	r1, #2
   11bdc:	ldr	r3, [r1]
   11be0:	movw	r1, #1
   11be4:	bl	10e78 <fwrite_unlocked@plt>
   11be8:	ldr	r1, [sp, #44]	; 0x2c
   11bec:	cmp	r0, r1
   11bf0:	beq	11c24 <__assert_fail@plt+0xbd8>
   11bf4:	bl	10f80 <__errno_location@plt>
   11bf8:	ldr	r1, [r0]
   11bfc:	movw	r0, #47786	; 0xbaaa
   11c00:	movt	r0, #1
   11c04:	str	r1, [sp, #16]
   11c08:	bl	10f5c <gettext@plt>
   11c0c:	movw	r1, #1
   11c10:	str	r0, [sp, #12]
   11c14:	mov	r0, r1
   11c18:	ldr	r1, [sp, #16]
   11c1c:	ldr	r2, [sp, #12]
   11c20:	bl	10efc <error@plt>
   11c24:	movw	r0, #0
   11c28:	str	r0, [sp, #44]	; 0x2c
   11c2c:	movw	r0, #0
   11c30:	strb	r0, [fp, #-37]	; 0xffffffdb
   11c34:	ldrb	r0, [sp, #43]	; 0x2b
   11c38:	and	r0, r0, #1
   11c3c:	strb	r0, [fp, #-38]	; 0xffffffda
   11c40:	movw	r0, #53600	; 0xd160
   11c44:	movt	r0, #2
   11c48:	ldrb	r0, [r0]
   11c4c:	tst	r0, #1
   11c50:	movw	r0, #1
   11c54:	str	r0, [sp, #8]
   11c58:	bne	11c64 <__assert_fail@plt+0xc18>
   11c5c:	ldrb	r0, [sp, #43]	; 0x2b
   11c60:	str	r0, [sp, #8]
   11c64:	ldr	r0, [sp, #8]
   11c68:	and	r0, r0, #1
   11c6c:	ldrb	r1, [fp, #-13]
   11c70:	and	r1, r1, #1
   11c74:	and	r0, r1, r0
   11c78:	cmp	r0, #0
   11c7c:	movw	r0, #0
   11c80:	movne	r0, #1
   11c84:	and	r0, r0, #1
   11c88:	strb	r0, [fp, #-13]
   11c8c:	ldr	r0, [fp, #-12]
   11c90:	cmp	r0, #0
   11c94:	bge	11ca4 <__assert_fail@plt+0xc58>
   11c98:	ldr	r0, [fp, #-8]
   11c9c:	bl	131b4 <__assert_fail@plt+0x2168>
   11ca0:	b	11cf8 <__assert_fail@plt+0xcac>
   11ca4:	ldr	r0, [fp, #-12]
   11ca8:	bl	11034 <putchar_unlocked@plt>
   11cac:	cmp	r0, #0
   11cb0:	bge	11ce4 <__assert_fail@plt+0xc98>
   11cb4:	bl	10f80 <__errno_location@plt>
   11cb8:	ldr	r1, [r0]
   11cbc:	movw	r0, #47786	; 0xbaaa
   11cc0:	movt	r0, #1
   11cc4:	str	r1, [sp, #4]
   11cc8:	bl	10f5c <gettext@plt>
   11ccc:	movw	r1, #1
   11cd0:	str	r0, [sp]
   11cd4:	mov	r0, r1
   11cd8:	ldr	r1, [sp, #4]
   11cdc:	ldr	r2, [sp]
   11ce0:	bl	10efc <error@plt>
   11ce4:	b	11ce8 <__assert_fail@plt+0xc9c>
   11ce8:	ldr	r0, [fp, #-12]
   11cec:	cmp	r0, #10
   11cf0:	bne	118a8 <__assert_fail@plt+0x85c>
   11cf4:	b	11870 <__assert_fail@plt+0x824>
   11cf8:	mov	sp, fp
   11cfc:	pop	{fp, pc}
   11d00:	push	{fp, lr}
   11d04:	mov	fp, sp
   11d08:	sub	sp, sp, #64	; 0x40
   11d0c:	str	r0, [fp, #-8]
   11d10:	str	r1, [fp, #-4]
   11d14:	movw	r0, #53608	; 0xd168
   11d18:	movt	r0, #2
   11d1c:	ldr	r0, [r0]
   11d20:	cmp	r0, #0
   11d24:	beq	11d58 <__assert_fail@plt+0xd0c>
   11d28:	movw	r0, #53612	; 0xd16c
   11d2c:	movt	r0, #2
   11d30:	ldr	r0, [r0]
   11d34:	movw	r1, #53608	; 0xd168
   11d38:	movt	r1, #2
   11d3c:	ldr	r1, [r1]
   11d40:	add	r0, r0, r1, lsl #3
   11d44:	ldr	r1, [r0, #-8]
   11d48:	ldr	r0, [r0, #-4]
   11d4c:	str	r1, [fp, #-28]	; 0xffffffe4
   11d50:	str	r0, [sp, #32]
   11d54:	b	11d6c <__assert_fail@plt+0xd20>
   11d58:	mov	r0, #0
   11d5c:	mov	r1, r0
   11d60:	str	r1, [fp, #-28]	; 0xffffffe4
   11d64:	str	r0, [sp, #32]
   11d68:	b	11d6c <__assert_fail@plt+0xd20>
   11d6c:	ldr	r0, [sp, #32]
   11d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11d74:	str	r1, [fp, #-16]
   11d78:	str	r0, [fp, #-12]
   11d7c:	ldr	r0, [fp, #-16]
   11d80:	ldr	r1, [fp, #-12]
   11d84:	ldr	r2, [fp, #-8]
   11d88:	ldr	r3, [fp, #-4]
   11d8c:	subs	r0, r2, r0
   11d90:	sbcs	r1, r3, r1
   11d94:	str	r0, [sp, #28]
   11d98:	str	r1, [sp, #24]
   11d9c:	bcc	11dc8 <__assert_fail@plt+0xd7c>
   11da0:	b	11da4 <__assert_fail@plt+0xd58>
   11da4:	ldr	r0, [fp, #-8]
   11da8:	ldr	r1, [fp, #-4]
   11dac:	ldr	r2, [fp, #-16]
   11db0:	ldr	r3, [fp, #-12]
   11db4:	subs	r0, r0, r2
   11db8:	sbc	r1, r1, r3
   11dbc:	str	r0, [sp, #20]
   11dc0:	str	r1, [sp, #16]
   11dc4:	b	11ddc <__assert_fail@plt+0xd90>
   11dc8:	mov	r0, #0
   11dcc:	mov	r1, r0
   11dd0:	str	r1, [sp, #20]
   11dd4:	str	r0, [sp, #16]
   11dd8:	b	11ddc <__assert_fail@plt+0xd90>
   11ddc:	ldr	r0, [sp, #16]
   11de0:	ldr	r1, [sp, #20]
   11de4:	str	r1, [fp, #-24]	; 0xffffffe8
   11de8:	str	r0, [fp, #-20]	; 0xffffffec
   11dec:	movw	r0, #53608	; 0xd168
   11df0:	movt	r0, #2
   11df4:	ldr	r0, [r0]
   11df8:	movw	r1, #53616	; 0xd170
   11dfc:	movt	r1, #2
   11e00:	ldr	r1, [r1]
   11e04:	cmp	r0, r1
   11e08:	bne	11e34 <__assert_fail@plt+0xde8>
   11e0c:	movw	r0, #53612	; 0xd16c
   11e10:	movt	r0, #2
   11e14:	ldr	r0, [r0]
   11e18:	movw	r1, #53616	; 0xd170
   11e1c:	movt	r1, #2
   11e20:	movw	r2, #8
   11e24:	bl	16584 <__assert_fail@plt+0x5538>
   11e28:	movw	r1, #53612	; 0xd16c
   11e2c:	movt	r1, #2
   11e30:	str	r0, [r1]
   11e34:	ldr	r0, [fp, #-8]
   11e38:	ldr	r1, [fp, #-4]
   11e3c:	movw	r2, #53612	; 0xd16c
   11e40:	movt	r2, #2
   11e44:	ldr	r2, [r2]
   11e48:	movw	r3, #53608	; 0xd168
   11e4c:	movt	r3, #2
   11e50:	ldr	ip, [r3]
   11e54:	add	lr, ip, #1
   11e58:	str	lr, [r3]
   11e5c:	str	r0, [r2, ip, lsl #3]!
   11e60:	str	r1, [r2, #4]
   11e64:	movw	r0, #53976	; 0xd2d8
   11e68:	movt	r0, #2
   11e6c:	ldr	r0, [r0]
   11e70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11e74:	ldr	r2, [fp, #-20]	; 0xffffffec
   11e78:	subs	r0, r0, r1
   11e7c:	rscs	r1, r2, #0
   11e80:	str	r0, [sp, #12]
   11e84:	str	r1, [sp, #8]
   11e88:	bcs	11ed4 <__assert_fail@plt+0xe88>
   11e8c:	b	11e90 <__assert_fail@plt+0xe44>
   11e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e94:	cmp	r0, #0
   11e98:	beq	11ec4 <__assert_fail@plt+0xe78>
   11e9c:	b	11ea0 <__assert_fail@plt+0xe54>
   11ea0:	movw	r0, #47952	; 0xbb50
   11ea4:	movt	r0, #1
   11ea8:	bl	10f5c <gettext@plt>
   11eac:	movw	lr, #1
   11eb0:	str	r0, [sp, #4]
   11eb4:	mov	r0, lr
   11eb8:	movw	r1, #0
   11ebc:	ldr	r2, [sp, #4]
   11ec0:	bl	10efc <error@plt>
   11ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ec8:	movw	r1, #53976	; 0xd2d8
   11ecc:	movt	r1, #2
   11ed0:	str	r0, [r1]
   11ed4:	mov	sp, fp
   11ed8:	pop	{fp, pc}
   11edc:	push	{fp, lr}
   11ee0:	mov	fp, sp
   11ee4:	sub	sp, sp, #96	; 0x60
   11ee8:	str	r0, [fp, #-4]
   11eec:	mov	r0, #0
   11ef0:	strb	r0, [fp, #-5]
   11ef4:	str	r0, [fp, #-12]
   11ef8:	str	r0, [fp, #-16]
   11efc:	movw	r0, #0
   11f00:	strb	r0, [fp, #-17]	; 0xffffffef
   11f04:	strb	r0, [fp, #-18]	; 0xffffffee
   11f08:	movw	r0, #0
   11f0c:	str	r0, [fp, #-24]	; 0xffffffe8
   11f10:	movw	r0, #1
   11f14:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f18:	ldr	r0, [fp, #-4]
   11f1c:	ldrsb	r0, [r0]
   11f20:	cmp	r0, #0
   11f24:	beq	122cc <__assert_fail@plt+0x1280>
   11f28:	ldr	r0, [fp, #-4]
   11f2c:	ldrb	r0, [r0]
   11f30:	cmp	r0, #44	; 0x2c
   11f34:	beq	11f74 <__assert_fail@plt+0xf28>
   11f38:	bl	10f44 <__ctype_b_loc@plt>
   11f3c:	ldr	r0, [r0]
   11f40:	ldr	lr, [fp, #-4]
   11f44:	ldrb	lr, [lr]
   11f48:	str	r0, [fp, #-40]	; 0xffffffd8
   11f4c:	mov	r0, lr
   11f50:	bl	12394 <__assert_fail@plt+0x1348>
   11f54:	mov	lr, r0
   11f58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11f5c:	add	r0, r1, r0, lsl #1
   11f60:	ldrh	r0, [r0]
   11f64:	and	r0, r0, #1
   11f68:	cmp	r0, #0
   11f6c:	str	lr, [fp, #-44]	; 0xffffffd4
   11f70:	beq	12000 <__assert_fail@plt+0xfb4>
   11f74:	ldrb	r0, [fp, #-5]
   11f78:	tst	r0, #1
   11f7c:	beq	11ff4 <__assert_fail@plt+0xfa8>
   11f80:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11f84:	tst	r0, #1
   11f88:	beq	11fb0 <__assert_fail@plt+0xf64>
   11f8c:	ldr	r0, [fp, #-16]
   11f90:	ldr	r1, [fp, #-12]
   11f94:	bl	123a8 <__assert_fail@plt+0x135c>
   11f98:	tst	r0, #1
   11f9c:	bne	11fac <__assert_fail@plt+0xf60>
   11fa0:	movw	r0, #0
   11fa4:	strb	r0, [fp, #-25]	; 0xffffffe7
   11fa8:	b	122cc <__assert_fail@plt+0x1280>
   11fac:	b	11ff0 <__assert_fail@plt+0xfa4>
   11fb0:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11fb4:	tst	r0, #1
   11fb8:	beq	11fe0 <__assert_fail@plt+0xf94>
   11fbc:	ldr	r0, [fp, #-16]
   11fc0:	ldr	r1, [fp, #-12]
   11fc4:	bl	12438 <__assert_fail@plt+0x13ec>
   11fc8:	tst	r0, #1
   11fcc:	bne	11fdc <__assert_fail@plt+0xf90>
   11fd0:	movw	r0, #0
   11fd4:	strb	r0, [fp, #-25]	; 0xffffffe7
   11fd8:	b	122cc <__assert_fail@plt+0x1280>
   11fdc:	b	11fec <__assert_fail@plt+0xfa0>
   11fe0:	ldr	r0, [fp, #-16]
   11fe4:	ldr	r1, [fp, #-12]
   11fe8:	bl	11d00 <__assert_fail@plt+0xcb4>
   11fec:	b	11ff0 <__assert_fail@plt+0xfa4>
   11ff0:	b	11ff4 <__assert_fail@plt+0xfa8>
   11ff4:	movw	r0, #0
   11ff8:	strb	r0, [fp, #-5]
   11ffc:	b	122b8 <__assert_fail@plt+0x126c>
   12000:	ldr	r0, [fp, #-4]
   12004:	ldrb	r0, [r0]
   12008:	cmp	r0, #47	; 0x2f
   1200c:	bne	12070 <__assert_fail@plt+0x1024>
   12010:	ldrb	r0, [fp, #-5]
   12014:	tst	r0, #1
   12018:	beq	1205c <__assert_fail@plt+0x1010>
   1201c:	movw	r0, #47975	; 0xbb67
   12020:	movt	r0, #1
   12024:	bl	10f5c <gettext@plt>
   12028:	ldr	lr, [fp, #-4]
   1202c:	str	r0, [sp, #48]	; 0x30
   12030:	mov	r0, lr
   12034:	bl	1595c <__assert_fail@plt+0x4910>
   12038:	movw	lr, #0
   1203c:	str	r0, [sp, #44]	; 0x2c
   12040:	mov	r0, lr
   12044:	mov	r1, lr
   12048:	ldr	r2, [sp, #48]	; 0x30
   1204c:	ldr	r3, [sp, #44]	; 0x2c
   12050:	bl	10efc <error@plt>
   12054:	movw	r0, #0
   12058:	strb	r0, [fp, #-25]	; 0xffffffe7
   1205c:	movw	r0, #1
   12060:	strb	r0, [fp, #-17]	; 0xffffffef
   12064:	movw	r0, #0
   12068:	strb	r0, [fp, #-18]	; 0xffffffee
   1206c:	b	122b4 <__assert_fail@plt+0x1268>
   12070:	ldr	r0, [fp, #-4]
   12074:	ldrb	r0, [r0]
   12078:	cmp	r0, #43	; 0x2b
   1207c:	bne	120e0 <__assert_fail@plt+0x1094>
   12080:	ldrb	r0, [fp, #-5]
   12084:	tst	r0, #1
   12088:	beq	120cc <__assert_fail@plt+0x1080>
   1208c:	movw	r0, #48016	; 0xbb90
   12090:	movt	r0, #1
   12094:	bl	10f5c <gettext@plt>
   12098:	ldr	lr, [fp, #-4]
   1209c:	str	r0, [sp, #40]	; 0x28
   120a0:	mov	r0, lr
   120a4:	bl	1595c <__assert_fail@plt+0x4910>
   120a8:	movw	lr, #0
   120ac:	str	r0, [sp, #36]	; 0x24
   120b0:	mov	r0, lr
   120b4:	mov	r1, lr
   120b8:	ldr	r2, [sp, #40]	; 0x28
   120bc:	ldr	r3, [sp, #36]	; 0x24
   120c0:	bl	10efc <error@plt>
   120c4:	movw	r0, #0
   120c8:	strb	r0, [fp, #-25]	; 0xffffffe7
   120cc:	movw	r0, #1
   120d0:	strb	r0, [fp, #-18]	; 0xffffffee
   120d4:	movw	r0, #0
   120d8:	strb	r0, [fp, #-17]	; 0xffffffef
   120dc:	b	122b0 <__assert_fail@plt+0x1264>
   120e0:	ldr	r0, [fp, #-4]
   120e4:	ldrb	r0, [r0]
   120e8:	sub	r0, r0, #48	; 0x30
   120ec:	cmp	r0, #9
   120f0:	bhi	12268 <__assert_fail@plt+0x121c>
   120f4:	ldrb	r0, [fp, #-5]
   120f8:	tst	r0, #1
   120fc:	bne	1211c <__assert_fail@plt+0x10d0>
   12100:	mov	r0, #0
   12104:	str	r0, [fp, #-12]
   12108:	str	r0, [fp, #-16]
   1210c:	movw	r0, #1
   12110:	strb	r0, [fp, #-5]
   12114:	ldr	r0, [fp, #-4]
   12118:	str	r0, [fp, #-24]	; 0xffffffe8
   1211c:	ldr	r0, [fp, #-16]
   12120:	ldr	r1, [fp, #-12]
   12124:	movw	r2, #39321	; 0x9999
   12128:	movt	r2, #39321	; 0x9999
   1212c:	subs	r0, r2, r0
   12130:	movw	r2, #39321	; 0x9999
   12134:	movt	r2, #6553	; 0x1999
   12138:	sbcs	r1, r2, r1
   1213c:	str	r0, [sp, #32]
   12140:	str	r1, [sp, #28]
   12144:	bcc	12190 <__assert_fail@plt+0x1144>
   12148:	b	1214c <__assert_fail@plt+0x1100>
   1214c:	ldr	r0, [fp, #-16]
   12150:	ldr	r1, [fp, #-12]
   12154:	mov	r2, #10
   12158:	umull	r2, r3, r0, r2
   1215c:	add	ip, r1, r1, lsl #2
   12160:	add	r3, r3, ip, lsl #1
   12164:	ldr	ip, [fp, #-4]
   12168:	ldrb	ip, [ip]
   1216c:	sub	ip, ip, #48	; 0x30
   12170:	adds	r2, r2, ip
   12174:	adc	r3, r3, ip, asr #31
   12178:	subs	r0, r2, r0
   1217c:	sbcs	r1, r3, r1
   12180:	str	r0, [sp, #24]
   12184:	str	r1, [sp, #20]
   12188:	bcs	1219c <__assert_fail@plt+0x1150>
   1218c:	b	12190 <__assert_fail@plt+0x1144>
   12190:	movw	r0, #0
   12194:	str	r0, [sp, #16]
   12198:	b	121d8 <__assert_fail@plt+0x118c>
   1219c:	ldr	r0, [fp, #-16]
   121a0:	ldr	r1, [fp, #-12]
   121a4:	mov	r2, #10
   121a8:	umull	r0, r2, r0, r2
   121ac:	add	r1, r1, r1, lsl #2
   121b0:	add	r1, r2, r1, lsl #1
   121b4:	ldr	r2, [fp, #-4]
   121b8:	ldrb	r2, [r2]
   121bc:	sub	r2, r2, #48	; 0x30
   121c0:	adds	r0, r0, r2
   121c4:	adc	r1, r1, r2, asr #31
   121c8:	str	r0, [fp, #-16]
   121cc:	str	r1, [fp, #-12]
   121d0:	movw	r0, #1
   121d4:	str	r0, [sp, #16]
   121d8:	ldr	r0, [sp, #16]
   121dc:	cmp	r0, #0
   121e0:	bne	12264 <__assert_fail@plt+0x1218>
   121e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121e8:	movw	r1, #48057	; 0xbbb9
   121ec:	movt	r1, #1
   121f0:	bl	11040 <strspn@plt>
   121f4:	str	r0, [fp, #-32]	; 0xffffffe0
   121f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12200:	bl	190f4 <__assert_fail@plt+0x80a8>
   12204:	str	r0, [fp, #-36]	; 0xffffffdc
   12208:	movw	r0, #48068	; 0xbbc4
   1220c:	movt	r0, #1
   12210:	bl	10f5c <gettext@plt>
   12214:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12218:	str	r0, [sp, #12]
   1221c:	mov	r0, r1
   12220:	bl	1595c <__assert_fail@plt+0x4910>
   12224:	movw	r1, #0
   12228:	str	r0, [sp, #8]
   1222c:	mov	r0, r1
   12230:	ldr	r2, [sp, #12]
   12234:	ldr	r3, [sp, #8]
   12238:	bl	10efc <error@plt>
   1223c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12240:	bl	131b4 <__assert_fail@plt+0x2168>
   12244:	movw	r0, #0
   12248:	strb	r0, [fp, #-25]	; 0xffffffe7
   1224c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12250:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12254:	add	r0, r0, r1
   12258:	mvn	r1, #0
   1225c:	add	r0, r0, r1
   12260:	str	r0, [fp, #-4]
   12264:	b	122ac <__assert_fail@plt+0x1260>
   12268:	movw	r0, #48093	; 0xbbdd
   1226c:	movt	r0, #1
   12270:	bl	10f5c <gettext@plt>
   12274:	ldr	lr, [fp, #-4]
   12278:	str	r0, [sp, #4]
   1227c:	mov	r0, lr
   12280:	bl	1595c <__assert_fail@plt+0x4910>
   12284:	movw	lr, #0
   12288:	str	r0, [sp]
   1228c:	mov	r0, lr
   12290:	mov	r1, lr
   12294:	ldr	r2, [sp, #4]
   12298:	ldr	r3, [sp]
   1229c:	bl	10efc <error@plt>
   122a0:	movw	r0, #0
   122a4:	strb	r0, [fp, #-25]	; 0xffffffe7
   122a8:	b	122cc <__assert_fail@plt+0x1280>
   122ac:	b	122b0 <__assert_fail@plt+0x1264>
   122b0:	b	122b4 <__assert_fail@plt+0x1268>
   122b4:	b	122b8 <__assert_fail@plt+0x126c>
   122b8:	b	122bc <__assert_fail@plt+0x1270>
   122bc:	ldr	r0, [fp, #-4]
   122c0:	add	r0, r0, #1
   122c4:	str	r0, [fp, #-4]
   122c8:	b	11f18 <__assert_fail@plt+0xecc>
   122cc:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   122d0:	tst	r0, #1
   122d4:	beq	12378 <__assert_fail@plt+0x132c>
   122d8:	ldrb	r0, [fp, #-5]
   122dc:	tst	r0, #1
   122e0:	beq	12378 <__assert_fail@plt+0x132c>
   122e4:	ldrb	r0, [fp, #-17]	; 0xffffffef
   122e8:	tst	r0, #1
   122ec:	beq	12324 <__assert_fail@plt+0x12d8>
   122f0:	ldr	r0, [fp, #-16]
   122f4:	ldr	r1, [fp, #-12]
   122f8:	bl	123a8 <__assert_fail@plt+0x135c>
   122fc:	and	r0, r0, #1
   12300:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12304:	and	r1, r1, #1
   12308:	and	r0, r1, r0
   1230c:	cmp	r0, #0
   12310:	movw	r0, #0
   12314:	movne	r0, #1
   12318:	and	r0, r0, #1
   1231c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12320:	b	12374 <__assert_fail@plt+0x1328>
   12324:	ldrb	r0, [fp, #-18]	; 0xffffffee
   12328:	tst	r0, #1
   1232c:	beq	12364 <__assert_fail@plt+0x1318>
   12330:	ldr	r0, [fp, #-16]
   12334:	ldr	r1, [fp, #-12]
   12338:	bl	12438 <__assert_fail@plt+0x13ec>
   1233c:	and	r0, r0, #1
   12340:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12344:	and	r1, r1, #1
   12348:	and	r0, r1, r0
   1234c:	cmp	r0, #0
   12350:	movw	r0, #0
   12354:	movne	r0, #1
   12358:	and	r0, r0, #1
   1235c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12360:	b	12370 <__assert_fail@plt+0x1324>
   12364:	ldr	r0, [fp, #-16]
   12368:	ldr	r1, [fp, #-12]
   1236c:	bl	11d00 <__assert_fail@plt+0xcb4>
   12370:	b	12374 <__assert_fail@plt+0x1328>
   12374:	b	12378 <__assert_fail@plt+0x132c>
   12378:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1237c:	tst	r0, #1
   12380:	bne	1238c <__assert_fail@plt+0x1340>
   12384:	movw	r0, #1
   12388:	bl	10f50 <exit@plt>
   1238c:	mov	sp, fp
   12390:	pop	{fp, pc}
   12394:	sub	sp, sp, #4
   12398:	strb	r0, [sp, #3]
   1239c:	ldrb	r0, [sp, #3]
   123a0:	add	sp, sp, #4
   123a4:	bx	lr
   123a8:	push	{fp, lr}
   123ac:	mov	fp, sp
   123b0:	sub	sp, sp, #16
   123b4:	str	r0, [sp, #8]
   123b8:	str	r1, [sp, #12]
   123bc:	mov	r0, #1
   123c0:	strb	r0, [sp, #7]
   123c4:	movw	r0, #53624	; 0xd178
   123c8:	movt	r0, #2
   123cc:	ldr	r1, [r0]
   123d0:	ldr	r0, [r0, #4]
   123d4:	orr	r0, r1, r0
   123d8:	cmp	r0, #0
   123dc:	beq	12410 <__assert_fail@plt+0x13c4>
   123e0:	b	123e4 <__assert_fail@plt+0x1398>
   123e4:	movw	r0, #48618	; 0xbdea
   123e8:	movt	r0, #1
   123ec:	bl	10f5c <gettext@plt>
   123f0:	movw	lr, #0
   123f4:	str	r0, [sp]
   123f8:	mov	r0, lr
   123fc:	mov	r1, lr
   12400:	ldr	r2, [sp]
   12404:	bl	10efc <error@plt>
   12408:	movw	r0, #0
   1240c:	strb	r0, [sp, #7]
   12410:	ldr	r0, [sp, #8]
   12414:	ldr	r1, [sp, #12]
   12418:	movw	r2, #53624	; 0xd178
   1241c:	movt	r2, #2
   12420:	str	r1, [r2, #4]
   12424:	str	r0, [r2]
   12428:	ldrb	r0, [sp, #7]
   1242c:	and	r0, r0, #1
   12430:	mov	sp, fp
   12434:	pop	{fp, pc}
   12438:	push	{fp, lr}
   1243c:	mov	fp, sp
   12440:	sub	sp, sp, #16
   12444:	str	r0, [sp, #8]
   12448:	str	r1, [sp, #12]
   1244c:	mov	r0, #1
   12450:	strb	r0, [sp, #7]
   12454:	movw	r0, #53632	; 0xd180
   12458:	movt	r0, #2
   1245c:	ldr	r1, [r0]
   12460:	ldr	r0, [r0, #4]
   12464:	orr	r0, r1, r0
   12468:	cmp	r0, #0
   1246c:	beq	124a0 <__assert_fail@plt+0x1454>
   12470:	b	12474 <__assert_fail@plt+0x1428>
   12474:	movw	r0, #48665	; 0xbe19
   12478:	movt	r0, #1
   1247c:	bl	10f5c <gettext@plt>
   12480:	movw	lr, #0
   12484:	str	r0, [sp]
   12488:	mov	r0, lr
   1248c:	mov	r1, lr
   12490:	ldr	r2, [sp]
   12494:	bl	10efc <error@plt>
   12498:	movw	r0, #0
   1249c:	strb	r0, [sp, #7]
   124a0:	ldr	r0, [sp, #8]
   124a4:	ldr	r1, [sp, #12]
   124a8:	movw	r2, #53632	; 0xd180
   124ac:	movt	r2, #2
   124b0:	str	r1, [r2, #4]
   124b4:	str	r0, [r2]
   124b8:	ldrb	r0, [sp, #7]
   124bc:	and	r0, r0, #1
   124c0:	mov	sp, fp
   124c4:	pop	{fp, pc}
   124c8:	push	{fp, lr}
   124cc:	mov	fp, sp
   124d0:	sub	sp, sp, #24
   124d4:	movw	r0, #53612	; 0xd16c
   124d8:	movt	r0, #2
   124dc:	ldr	r0, [r0]
   124e0:	movw	r1, #53608	; 0xd168
   124e4:	movt	r1, #2
   124e8:	ldr	r1, [r1]
   124ec:	bl	12670 <__assert_fail@plt+0x1624>
   124f0:	movw	r0, #53608	; 0xd168
   124f4:	movt	r0, #2
   124f8:	ldr	r0, [r0]
   124fc:	cmp	r0, #0
   12500:	bne	125d4 <__assert_fail@plt+0x1588>
   12504:	movw	r0, #53624	; 0xd178
   12508:	movt	r0, #2
   1250c:	ldr	r1, [r0]
   12510:	ldr	r0, [r0, #4]
   12514:	orr	r0, r1, r0
   12518:	cmp	r0, #0
   1251c:	beq	12540 <__assert_fail@plt+0x14f4>
   12520:	b	12524 <__assert_fail@plt+0x14d8>
   12524:	movw	r0, #53624	; 0xd178
   12528:	movt	r0, #2
   1252c:	ldr	r1, [r0]
   12530:	ldr	r0, [r0, #4]
   12534:	str	r1, [fp, #-4]
   12538:	str	r0, [fp, #-8]
   1253c:	b	125a4 <__assert_fail@plt+0x1558>
   12540:	movw	r0, #53632	; 0xd180
   12544:	movt	r0, #2
   12548:	ldr	r1, [r0]
   1254c:	ldr	r0, [r0, #4]
   12550:	orr	r0, r1, r0
   12554:	cmp	r0, #0
   12558:	beq	1257c <__assert_fail@plt+0x1530>
   1255c:	b	12560 <__assert_fail@plt+0x1514>
   12560:	movw	r0, #53632	; 0xd180
   12564:	movt	r0, #2
   12568:	ldr	r1, [r0]
   1256c:	ldr	r0, [r0, #4]
   12570:	str	r1, [sp, #12]
   12574:	str	r0, [sp, #8]
   12578:	b	12590 <__assert_fail@plt+0x1544>
   1257c:	mov	r0, #0
   12580:	mov	r1, #8
   12584:	str	r1, [sp, #12]
   12588:	str	r0, [sp, #8]
   1258c:	b	12590 <__assert_fail@plt+0x1544>
   12590:	ldr	r0, [sp, #8]
   12594:	ldr	r1, [sp, #12]
   12598:	str	r1, [fp, #-4]
   1259c:	str	r0, [fp, #-8]
   125a0:	b	125a4 <__assert_fail@plt+0x1558>
   125a4:	ldr	r0, [fp, #-8]
   125a8:	ldr	r1, [fp, #-4]
   125ac:	movw	r2, #53976	; 0xd2d8
   125b0:	movt	r2, #2
   125b4:	str	r1, [r2]
   125b8:	movw	r2, #53640	; 0xd188
   125bc:	movt	r2, #2
   125c0:	mov	r3, #0
   125c4:	str	r3, [r2, #4]
   125c8:	str	r1, [r2]
   125cc:	str	r0, [sp, #4]
   125d0:	b	12668 <__assert_fail@plt+0x161c>
   125d4:	movw	r0, #53608	; 0xd168
   125d8:	movt	r0, #2
   125dc:	ldr	r0, [r0]
   125e0:	cmp	r0, #1
   125e4:	bne	12650 <__assert_fail@plt+0x1604>
   125e8:	movw	r0, #53624	; 0xd178
   125ec:	movt	r0, #2
   125f0:	ldr	r1, [r0]
   125f4:	ldr	r0, [r0, #4]
   125f8:	orr	r0, r1, r0
   125fc:	cmp	r0, #0
   12600:	bne	12650 <__assert_fail@plt+0x1604>
   12604:	b	12608 <__assert_fail@plt+0x15bc>
   12608:	movw	r0, #53632	; 0xd180
   1260c:	movt	r0, #2
   12610:	ldr	r1, [r0]
   12614:	ldr	r0, [r0, #4]
   12618:	orr	r0, r1, r0
   1261c:	cmp	r0, #0
   12620:	bne	12650 <__assert_fail@plt+0x1604>
   12624:	b	12628 <__assert_fail@plt+0x15dc>
   12628:	movw	r0, #53612	; 0xd16c
   1262c:	movt	r0, #2
   12630:	ldr	r0, [r0]
   12634:	ldr	r1, [r0]
   12638:	ldr	r0, [r0, #4]
   1263c:	movw	r2, #53640	; 0xd188
   12640:	movt	r2, #2
   12644:	str	r0, [r2, #4]
   12648:	str	r1, [r2]
   1264c:	b	12664 <__assert_fail@plt+0x1618>
   12650:	movw	r0, #53640	; 0xd188
   12654:	movt	r0, #2
   12658:	mov	r1, #0
   1265c:	str	r1, [r0, #4]
   12660:	str	r1, [r0]
   12664:	b	12668 <__assert_fail@plt+0x161c>
   12668:	mov	sp, fp
   1266c:	pop	{fp, pc}
   12670:	push	{fp, lr}
   12674:	mov	fp, sp
   12678:	sub	sp, sp, #40	; 0x28
   1267c:	str	r0, [fp, #-4]
   12680:	str	r1, [fp, #-8]
   12684:	mov	r0, #0
   12688:	str	r0, [fp, #-12]
   1268c:	str	r0, [fp, #-16]
   12690:	movw	r0, #0
   12694:	str	r0, [sp, #20]
   12698:	ldr	r0, [sp, #20]
   1269c:	ldr	r1, [fp, #-8]
   126a0:	cmp	r0, r1
   126a4:	bcs	12768 <__assert_fail@plt+0x171c>
   126a8:	ldr	r0, [fp, #-4]
   126ac:	ldr	r1, [sp, #20]
   126b0:	ldr	r1, [r0, r1, lsl #3]!
   126b4:	ldr	r0, [r0, #4]
   126b8:	orr	r0, r1, r0
   126bc:	cmp	r0, #0
   126c0:	bne	126ec <__assert_fail@plt+0x16a0>
   126c4:	b	126c8 <__assert_fail@plt+0x167c>
   126c8:	movw	r0, #48712	; 0xbe48
   126cc:	movt	r0, #1
   126d0:	bl	10f5c <gettext@plt>
   126d4:	movw	lr, #1
   126d8:	str	r0, [sp, #16]
   126dc:	mov	r0, lr
   126e0:	movw	r1, #0
   126e4:	ldr	r2, [sp, #16]
   126e8:	bl	10efc <error@plt>
   126ec:	ldr	r0, [fp, #-4]
   126f0:	ldr	r1, [sp, #20]
   126f4:	ldr	r1, [r0, r1, lsl #3]!
   126f8:	ldr	r0, [r0, #4]
   126fc:	ldr	r2, [fp, #-16]
   12700:	ldr	r3, [fp, #-12]
   12704:	subs	r1, r2, r1
   12708:	sbcs	r0, r3, r0
   1270c:	str	r1, [sp, #12]
   12710:	str	r0, [sp, #8]
   12714:	bcc	12740 <__assert_fail@plt+0x16f4>
   12718:	b	1271c <__assert_fail@plt+0x16d0>
   1271c:	movw	r0, #48733	; 0xbe5d
   12720:	movt	r0, #1
   12724:	bl	10f5c <gettext@plt>
   12728:	movw	lr, #1
   1272c:	str	r0, [sp, #4]
   12730:	mov	r0, lr
   12734:	movw	r1, #0
   12738:	ldr	r2, [sp, #4]
   1273c:	bl	10efc <error@plt>
   12740:	ldr	r0, [fp, #-4]
   12744:	ldr	r1, [sp, #20]
   12748:	ldr	r1, [r0, r1, lsl #3]!
   1274c:	ldr	r0, [r0, #4]
   12750:	str	r0, [fp, #-12]
   12754:	str	r1, [fp, #-16]
   12758:	ldr	r0, [sp, #20]
   1275c:	add	r0, r0, #1
   12760:	str	r0, [sp, #20]
   12764:	b	12698 <__assert_fail@plt+0x164c>
   12768:	movw	r0, #53632	; 0xd180
   1276c:	movt	r0, #2
   12770:	ldr	r1, [r0]
   12774:	ldr	r0, [r0, #4]
   12778:	orr	r0, r1, r0
   1277c:	cmp	r0, #0
   12780:	beq	127cc <__assert_fail@plt+0x1780>
   12784:	b	12788 <__assert_fail@plt+0x173c>
   12788:	movw	r0, #53624	; 0xd178
   1278c:	movt	r0, #2
   12790:	ldr	r1, [r0]
   12794:	ldr	r0, [r0, #4]
   12798:	orr	r0, r1, r0
   1279c:	cmp	r0, #0
   127a0:	beq	127cc <__assert_fail@plt+0x1780>
   127a4:	b	127a8 <__assert_fail@plt+0x175c>
   127a8:	movw	r0, #48761	; 0xbe79
   127ac:	movt	r0, #1
   127b0:	bl	10f5c <gettext@plt>
   127b4:	movw	lr, #1
   127b8:	str	r0, [sp]
   127bc:	mov	r0, lr
   127c0:	movw	r1, #0
   127c4:	ldr	r2, [sp]
   127c8:	bl	10efc <error@plt>
   127cc:	mov	sp, fp
   127d0:	pop	{fp, pc}
   127d4:	push	{r4, r5, fp, lr}
   127d8:	add	fp, sp, #8
   127dc:	sub	sp, sp, #120	; 0x78
   127e0:	str	r0, [fp, #-24]	; 0xffffffe8
   127e4:	str	r1, [fp, #-20]	; 0xffffffec
   127e8:	str	r2, [fp, #-28]	; 0xffffffe4
   127ec:	str	r3, [fp, #-32]	; 0xffffffe0
   127f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127f4:	mov	r1, #0
   127f8:	strb	r1, [r0]
   127fc:	movw	r0, #53640	; 0xd188
   12800:	movt	r0, #2
   12804:	ldr	r1, [r0]
   12808:	ldr	r0, [r0, #4]
   1280c:	orr	r0, r1, r0
   12810:	cmp	r0, #0
   12814:	beq	12888 <__assert_fail@plt+0x183c>
   12818:	b	1281c <__assert_fail@plt+0x17d0>
   1281c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12820:	ldr	r1, [fp, #-20]	; 0xffffffec
   12824:	movw	r2, #53640	; 0xd188
   12828:	movt	r2, #2
   1282c:	ldr	r3, [r2]
   12830:	ldr	r2, [r2, #4]
   12834:	str	r0, [fp, #-52]	; 0xffffffcc
   12838:	str	r1, [fp, #-56]	; 0xffffffc8
   1283c:	str	r2, [fp, #-60]	; 0xffffffc4
   12840:	mov	r2, r3
   12844:	ldr	ip, [fp, #-60]	; 0xffffffc4
   12848:	str	r3, [sp, #64]	; 0x40
   1284c:	mov	r3, ip
   12850:	bl	1b488 <__assert_fail@plt+0xa43c>
   12854:	ldr	ip, [sp, #64]	; 0x40
   12858:	subs	r2, ip, r2
   1285c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   12860:	sbc	r3, lr, r3
   12864:	ldr	r4, [fp, #-52]	; 0xffffffcc
   12868:	adds	r2, r4, r2
   1286c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   12870:	adc	r3, r5, r3
   12874:	str	r2, [fp, #-16]
   12878:	str	r3, [fp, #-12]
   1287c:	str	r0, [sp, #60]	; 0x3c
   12880:	str	r1, [sp, #56]	; 0x38
   12884:	b	12a94 <__assert_fail@plt+0x1a48>
   12888:	b	1288c <__assert_fail@plt+0x1840>
   1288c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12890:	ldr	r0, [r0]
   12894:	movw	r1, #53608	; 0xd168
   12898:	movt	r1, #2
   1289c:	ldr	r1, [r1]
   128a0:	cmp	r0, r1
   128a4:	bcs	12920 <__assert_fail@plt+0x18d4>
   128a8:	movw	r0, #53612	; 0xd16c
   128ac:	movt	r0, #2
   128b0:	ldr	r0, [r0]
   128b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   128b8:	ldr	r1, [r1]
   128bc:	ldr	r1, [r0, r1, lsl #3]!
   128c0:	ldr	r0, [r0, #4]
   128c4:	str	r0, [fp, #-36]	; 0xffffffdc
   128c8:	str	r1, [fp, #-40]	; 0xffffffd8
   128cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   128d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   128d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   128dc:	subs	r0, r0, r2
   128e0:	sbcs	r1, r1, r3
   128e4:	str	r0, [sp, #52]	; 0x34
   128e8:	str	r1, [sp, #48]	; 0x30
   128ec:	bcs	12908 <__assert_fail@plt+0x18bc>
   128f0:	b	128f4 <__assert_fail@plt+0x18a8>
   128f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   128f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   128fc:	str	r1, [fp, #-12]
   12900:	str	r0, [fp, #-16]
   12904:	b	12a94 <__assert_fail@plt+0x1a48>
   12908:	b	1290c <__assert_fail@plt+0x18c0>
   1290c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12910:	ldr	r1, [r0]
   12914:	add	r1, r1, #1
   12918:	str	r1, [r0]
   1291c:	b	1288c <__assert_fail@plt+0x1840>
   12920:	movw	r0, #53624	; 0xd178
   12924:	movt	r0, #2
   12928:	ldr	r1, [r0]
   1292c:	ldr	r0, [r0, #4]
   12930:	orr	r0, r1, r0
   12934:	cmp	r0, #0
   12938:	beq	129ac <__assert_fail@plt+0x1960>
   1293c:	b	12940 <__assert_fail@plt+0x18f4>
   12940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12944:	ldr	r1, [fp, #-20]	; 0xffffffec
   12948:	movw	r2, #53624	; 0xd178
   1294c:	movt	r2, #2
   12950:	ldr	r3, [r2]
   12954:	ldr	r2, [r2, #4]
   12958:	str	r0, [sp, #44]	; 0x2c
   1295c:	str	r1, [sp, #40]	; 0x28
   12960:	str	r2, [sp, #36]	; 0x24
   12964:	mov	r2, r3
   12968:	ldr	ip, [sp, #36]	; 0x24
   1296c:	str	r3, [sp, #32]
   12970:	mov	r3, ip
   12974:	bl	1b488 <__assert_fail@plt+0xa43c>
   12978:	ldr	ip, [sp, #32]
   1297c:	subs	r2, ip, r2
   12980:	ldr	lr, [sp, #36]	; 0x24
   12984:	sbc	r3, lr, r3
   12988:	ldr	r4, [sp, #44]	; 0x2c
   1298c:	adds	r2, r4, r2
   12990:	ldr	r5, [sp, #40]	; 0x28
   12994:	adc	r3, r5, r3
   12998:	str	r2, [fp, #-16]
   1299c:	str	r3, [fp, #-12]
   129a0:	str	r0, [sp, #28]
   129a4:	str	r1, [sp, #24]
   129a8:	b	12a94 <__assert_fail@plt+0x1a48>
   129ac:	movw	r0, #53632	; 0xd180
   129b0:	movt	r0, #2
   129b4:	ldr	r1, [r0]
   129b8:	ldr	r0, [r0, #4]
   129bc:	orr	r0, r1, r0
   129c0:	cmp	r0, #0
   129c4:	beq	12a7c <__assert_fail@plt+0x1a30>
   129c8:	b	129cc <__assert_fail@plt+0x1980>
   129cc:	movw	r0, #53612	; 0xd16c
   129d0:	movt	r0, #2
   129d4:	ldr	r0, [r0]
   129d8:	movw	r1, #53608	; 0xd168
   129dc:	movt	r1, #2
   129e0:	ldr	r1, [r1]
   129e4:	add	r0, r0, r1, lsl #3
   129e8:	ldr	r1, [r0, #-8]
   129ec:	ldr	r0, [r0, #-4]
   129f0:	str	r0, [fp, #-44]	; 0xffffffd4
   129f4:	str	r1, [fp, #-48]	; 0xffffffd0
   129f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   129fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a00:	movw	r2, #53632	; 0xd180
   12a04:	movt	r2, #2
   12a08:	ldr	r3, [r2]
   12a0c:	ldr	r2, [r2, #4]
   12a10:	ldr	ip, [fp, #-48]	; 0xffffffd0
   12a14:	ldr	lr, [fp, #-44]	; 0xffffffd4
   12a18:	subs	ip, r0, ip
   12a1c:	sbc	lr, r1, lr
   12a20:	str	r0, [sp, #20]
   12a24:	mov	r0, ip
   12a28:	str	r1, [sp, #16]
   12a2c:	mov	r1, lr
   12a30:	str	r2, [sp, #12]
   12a34:	mov	r2, r3
   12a38:	ldr	ip, [sp, #12]
   12a3c:	str	r3, [sp, #8]
   12a40:	mov	r3, ip
   12a44:	bl	1b488 <__assert_fail@plt+0xa43c>
   12a48:	ldr	ip, [sp, #8]
   12a4c:	subs	r2, ip, r2
   12a50:	ldr	lr, [sp, #12]
   12a54:	sbc	r3, lr, r3
   12a58:	ldr	r4, [sp, #20]
   12a5c:	adds	r2, r4, r2
   12a60:	ldr	r5, [sp, #16]
   12a64:	adc	r3, r5, r3
   12a68:	str	r2, [fp, #-16]
   12a6c:	str	r3, [fp, #-12]
   12a70:	str	r0, [sp, #4]
   12a74:	str	r1, [sp]
   12a78:	b	12a94 <__assert_fail@plt+0x1a48>
   12a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a80:	mov	r1, #1
   12a84:	strb	r1, [r0]
   12a88:	mov	r0, #0
   12a8c:	str	r0, [fp, #-12]
   12a90:	str	r0, [fp, #-16]
   12a94:	ldr	r0, [fp, #-16]
   12a98:	ldr	r1, [fp, #-12]
   12a9c:	sub	sp, fp, #8
   12aa0:	pop	{r4, r5, fp, pc}
   12aa4:	sub	sp, sp, #4
   12aa8:	str	r0, [sp]
   12aac:	movw	r0, #53648	; 0xd190
   12ab0:	movt	r0, #2
   12ab4:	movw	r1, #0
   12ab8:	strb	r1, [r0]
   12abc:	ldr	r0, [sp]
   12ac0:	movw	r1, #0
   12ac4:	cmp	r0, r1
   12ac8:	bne	12ae4 <__assert_fail@plt+0x1a98>
   12acc:	movw	r0, #53652	; 0xd194
   12ad0:	movt	r0, #2
   12ad4:	movw	r1, #53476	; 0xd0e4
   12ad8:	movt	r1, #2
   12adc:	str	r1, [r0]
   12ae0:	b	12af4 <__assert_fail@plt+0x1aa8>
   12ae4:	ldr	r0, [sp]
   12ae8:	movw	r1, #53652	; 0xd194
   12aec:	movt	r1, #2
   12af0:	str	r0, [r1]
   12af4:	add	sp, sp, #4
   12af8:	bx	lr
   12afc:	push	{fp, lr}
   12b00:	mov	fp, sp
   12b04:	sub	sp, sp, #32
   12b08:	str	r0, [fp, #-8]
   12b0c:	ldr	r0, [fp, #-8]
   12b10:	movw	r1, #0
   12b14:	cmp	r0, r1
   12b18:	beq	12c2c <__assert_fail@plt+0x1be0>
   12b1c:	movw	r0, #53656	; 0xd198
   12b20:	movt	r0, #2
   12b24:	ldr	r0, [r0]
   12b28:	movw	r1, #0
   12b2c:	cmp	r0, r1
   12b30:	beq	12b38 <__assert_fail@plt+0x1aec>
   12b34:	b	12b58 <__assert_fail@plt+0x1b0c>
   12b38:	movw	r0, #48136	; 0xbc08
   12b3c:	movt	r0, #1
   12b40:	movw	r1, #48146	; 0xbc12
   12b44:	movt	r1, #1
   12b48:	movw	r2, #340	; 0x154
   12b4c:	movw	r3, #48166	; 0xbc26
   12b50:	movt	r3, #1
   12b54:	bl	1104c <__assert_fail@plt>
   12b58:	bl	10f80 <__errno_location@plt>
   12b5c:	ldr	r0, [r0]
   12b60:	str	r0, [sp, #16]
   12b64:	ldr	r0, [fp, #-8]
   12b68:	bl	10ee4 <ferror_unlocked@plt>
   12b6c:	cmp	r0, #0
   12b70:	bne	12b7c <__assert_fail@plt+0x1b30>
   12b74:	movw	r0, #0
   12b78:	str	r0, [sp, #16]
   12b7c:	movw	r0, #53656	; 0xd198
   12b80:	movt	r0, #2
   12b84:	ldr	r0, [r0]
   12b88:	movw	r1, #48894	; 0xbefe
   12b8c:	movt	r1, #1
   12b90:	bl	10e18 <strcmp@plt>
   12b94:	cmp	r0, #0
   12b98:	bne	12ba8 <__assert_fail@plt+0x1b5c>
   12b9c:	ldr	r0, [fp, #-8]
   12ba0:	bl	10fec <clearerr_unlocked@plt>
   12ba4:	b	12bc8 <__assert_fail@plt+0x1b7c>
   12ba8:	ldr	r0, [fp, #-8]
   12bac:	bl	13018 <__assert_fail@plt+0x1fcc>
   12bb0:	cmp	r0, #0
   12bb4:	beq	12bc4 <__assert_fail@plt+0x1b78>
   12bb8:	bl	10f80 <__errno_location@plt>
   12bbc:	ldr	r0, [r0]
   12bc0:	str	r0, [sp, #16]
   12bc4:	b	12bc8 <__assert_fail@plt+0x1b7c>
   12bc8:	ldr	r0, [sp, #16]
   12bcc:	cmp	r0, #0
   12bd0:	beq	12c28 <__assert_fail@plt+0x1bdc>
   12bd4:	ldr	r1, [sp, #16]
   12bd8:	movw	r0, #53656	; 0xd198
   12bdc:	movt	r0, #2
   12be0:	ldr	r2, [r0]
   12be4:	movw	r0, #0
   12be8:	movw	r3, #3
   12bec:	str	r1, [sp, #12]
   12bf0:	mov	r1, r3
   12bf4:	bl	15718 <__assert_fail@plt+0x46cc>
   12bf8:	movw	r1, #0
   12bfc:	str	r0, [sp, #8]
   12c00:	mov	r0, r1
   12c04:	ldr	r1, [sp, #12]
   12c08:	movw	r2, #48133	; 0xbc05
   12c0c:	movt	r2, #1
   12c10:	ldr	r3, [sp, #8]
   12c14:	bl	10efc <error@plt>
   12c18:	movw	r0, #53604	; 0xd164
   12c1c:	movt	r0, #2
   12c20:	movw	r1, #1
   12c24:	str	r1, [r0]
   12c28:	b	12c2c <__assert_fail@plt+0x1be0>
   12c2c:	b	12c30 <__assert_fail@plt+0x1be4>
   12c30:	movw	r0, #53652	; 0xd194
   12c34:	movt	r0, #2
   12c38:	ldr	r1, [r0]
   12c3c:	add	r2, r1, #4
   12c40:	str	r2, [r0]
   12c44:	ldr	r0, [r1]
   12c48:	str	r0, [fp, #-12]
   12c4c:	movw	r1, #0
   12c50:	cmp	r0, r1
   12c54:	beq	12d34 <__assert_fail@plt+0x1ce8>
   12c58:	ldr	r0, [fp, #-12]
   12c5c:	movw	r1, #48894	; 0xbefe
   12c60:	movt	r1, #1
   12c64:	bl	10e18 <strcmp@plt>
   12c68:	cmp	r0, #0
   12c6c:	bne	12c94 <__assert_fail@plt+0x1c48>
   12c70:	movw	r0, #53648	; 0xd190
   12c74:	movt	r0, #2
   12c78:	movw	r1, #1
   12c7c:	strb	r1, [r0]
   12c80:	movw	r0, #53584	; 0xd150
   12c84:	movt	r0, #2
   12c88:	ldr	r0, [r0]
   12c8c:	str	r0, [fp, #-8]
   12c90:	b	12ca8 <__assert_fail@plt+0x1c5c>
   12c94:	ldr	r0, [fp, #-12]
   12c98:	movw	r1, #47796	; 0xbab4
   12c9c:	movt	r1, #1
   12ca0:	bl	10ff8 <fopen64@plt>
   12ca4:	str	r0, [fp, #-8]
   12ca8:	ldr	r0, [fp, #-8]
   12cac:	movw	r1, #0
   12cb0:	cmp	r0, r1
   12cb4:	beq	12ce0 <__assert_fail@plt+0x1c94>
   12cb8:	ldr	r0, [fp, #-12]
   12cbc:	movw	r1, #53656	; 0xd198
   12cc0:	movt	r1, #2
   12cc4:	str	r0, [r1]
   12cc8:	ldr	r0, [fp, #-8]
   12ccc:	movw	r1, #2
   12cd0:	bl	12fc0 <__assert_fail@plt+0x1f74>
   12cd4:	ldr	r0, [fp, #-8]
   12cd8:	str	r0, [fp, #-4]
   12cdc:	b	12d3c <__assert_fail@plt+0x1cf0>
   12ce0:	bl	10f80 <__errno_location@plt>
   12ce4:	ldr	r1, [r0]
   12ce8:	ldr	r2, [fp, #-12]
   12cec:	movw	r0, #0
   12cf0:	movw	lr, #3
   12cf4:	str	r1, [sp, #4]
   12cf8:	mov	r1, lr
   12cfc:	bl	15718 <__assert_fail@plt+0x46cc>
   12d00:	movw	r1, #0
   12d04:	str	r0, [sp]
   12d08:	mov	r0, r1
   12d0c:	ldr	r1, [sp, #4]
   12d10:	movw	r2, #48133	; 0xbc05
   12d14:	movt	r2, #1
   12d18:	ldr	r3, [sp]
   12d1c:	bl	10efc <error@plt>
   12d20:	movw	r0, #53604	; 0xd164
   12d24:	movt	r0, #2
   12d28:	movw	r1, #1
   12d2c:	str	r1, [r0]
   12d30:	b	12c30 <__assert_fail@plt+0x1be4>
   12d34:	movw	r0, #0
   12d38:	str	r0, [fp, #-4]
   12d3c:	ldr	r0, [fp, #-4]
   12d40:	mov	sp, fp
   12d44:	pop	{fp, pc}
   12d48:	push	{fp, lr}
   12d4c:	mov	fp, sp
   12d50:	movw	r0, #53648	; 0xd190
   12d54:	movt	r0, #2
   12d58:	ldrb	r0, [r0]
   12d5c:	tst	r0, #1
   12d60:	beq	12d94 <__assert_fail@plt+0x1d48>
   12d64:	movw	r0, #53584	; 0xd150
   12d68:	movt	r0, #2
   12d6c:	ldr	r0, [r0]
   12d70:	bl	13018 <__assert_fail@plt+0x1fcc>
   12d74:	cmp	r0, #0
   12d78:	beq	12d94 <__assert_fail@plt+0x1d48>
   12d7c:	bl	10f80 <__errno_location@plt>
   12d80:	ldr	r1, [r0]
   12d84:	movw	r0, #1
   12d88:	movw	r2, #48894	; 0xbefe
   12d8c:	movt	r2, #1
   12d90:	bl	10efc <error@plt>
   12d94:	pop	{fp, pc}
   12d98:	push	{fp, lr}
   12d9c:	mov	fp, sp
   12da0:	sub	sp, sp, #8
   12da4:	movw	r0, #48190	; 0xbc3e
   12da8:	movt	r0, #1
   12dac:	bl	10f5c <gettext@plt>
   12db0:	movw	lr, #53588	; 0xd154
   12db4:	movt	lr, #2
   12db8:	ldr	r1, [lr]
   12dbc:	bl	10e00 <fputs_unlocked@plt>
   12dc0:	movw	r1, #48253	; 0xbc7d
   12dc4:	movt	r1, #1
   12dc8:	str	r0, [sp, #4]
   12dcc:	mov	r0, r1
   12dd0:	bl	10f5c <gettext@plt>
   12dd4:	movw	r1, #53588	; 0xd154
   12dd8:	movt	r1, #2
   12ddc:	ldr	r1, [r1]
   12de0:	bl	10e00 <fputs_unlocked@plt>
   12de4:	str	r0, [sp]
   12de8:	mov	sp, fp
   12dec:	pop	{fp, pc}
   12df0:	sub	sp, sp, #4
   12df4:	str	r0, [sp]
   12df8:	ldr	r0, [sp]
   12dfc:	movw	r1, #53660	; 0xd19c
   12e00:	movt	r1, #2
   12e04:	str	r0, [r1]
   12e08:	add	sp, sp, #4
   12e0c:	bx	lr
   12e10:	sub	sp, sp, #4
   12e14:	and	r0, r0, #1
   12e18:	strb	r0, [sp, #3]
   12e1c:	ldrb	r0, [sp, #3]
   12e20:	and	r0, r0, #1
   12e24:	movw	r1, #53664	; 0xd1a0
   12e28:	movt	r1, #2
   12e2c:	strb	r0, [r1]
   12e30:	add	sp, sp, #4
   12e34:	bx	lr
   12e38:	push	{fp, lr}
   12e3c:	mov	fp, sp
   12e40:	sub	sp, sp, #24
   12e44:	movw	r0, #53588	; 0xd154
   12e48:	movt	r0, #2
   12e4c:	ldr	r0, [r0]
   12e50:	bl	1943c <__assert_fail@plt+0x83f0>
   12e54:	cmp	r0, #0
   12e58:	beq	12f28 <__assert_fail@plt+0x1edc>
   12e5c:	movw	r0, #53664	; 0xd1a0
   12e60:	movt	r0, #2
   12e64:	ldrb	r0, [r0]
   12e68:	tst	r0, #1
   12e6c:	beq	12e80 <__assert_fail@plt+0x1e34>
   12e70:	bl	10f80 <__errno_location@plt>
   12e74:	ldr	r0, [r0]
   12e78:	cmp	r0, #32
   12e7c:	beq	12f28 <__assert_fail@plt+0x1edc>
   12e80:	movw	r0, #47786	; 0xbaaa
   12e84:	movt	r0, #1
   12e88:	bl	10f5c <gettext@plt>
   12e8c:	str	r0, [fp, #-4]
   12e90:	movw	r0, #53660	; 0xd19c
   12e94:	movt	r0, #2
   12e98:	ldr	r0, [r0]
   12e9c:	movw	lr, #0
   12ea0:	cmp	r0, lr
   12ea4:	beq	12efc <__assert_fail@plt+0x1eb0>
   12ea8:	bl	10f80 <__errno_location@plt>
   12eac:	ldr	r1, [r0]
   12eb0:	movw	r0, #53660	; 0xd19c
   12eb4:	movt	r0, #2
   12eb8:	ldr	r0, [r0]
   12ebc:	str	r1, [fp, #-8]
   12ec0:	bl	156c0 <__assert_fail@plt+0x4674>
   12ec4:	ldr	r1, [fp, #-4]
   12ec8:	movw	lr, #0
   12ecc:	str	r0, [sp, #12]
   12ed0:	mov	r0, lr
   12ed4:	ldr	lr, [fp, #-8]
   12ed8:	str	r1, [sp, #8]
   12edc:	mov	r1, lr
   12ee0:	movw	r2, #48821	; 0xbeb5
   12ee4:	movt	r2, #1
   12ee8:	ldr	r3, [sp, #12]
   12eec:	ldr	ip, [sp, #8]
   12ef0:	str	ip, [sp]
   12ef4:	bl	10efc <error@plt>
   12ef8:	b	12f18 <__assert_fail@plt+0x1ecc>
   12efc:	bl	10f80 <__errno_location@plt>
   12f00:	ldr	r1, [r0]
   12f04:	ldr	r3, [fp, #-4]
   12f08:	movw	r0, #0
   12f0c:	movw	r2, #48133	; 0xbc05
   12f10:	movt	r2, #1
   12f14:	bl	10efc <error@plt>
   12f18:	movw	r0, #53488	; 0xd0f0
   12f1c:	movt	r0, #2
   12f20:	ldr	r0, [r0]
   12f24:	bl	10e54 <_exit@plt>
   12f28:	movw	r0, #53576	; 0xd148
   12f2c:	movt	r0, #2
   12f30:	ldr	r0, [r0]
   12f34:	bl	1943c <__assert_fail@plt+0x83f0>
   12f38:	cmp	r0, #0
   12f3c:	beq	12f50 <__assert_fail@plt+0x1f04>
   12f40:	movw	r0, #53488	; 0xd0f0
   12f44:	movt	r0, #2
   12f48:	ldr	r0, [r0]
   12f4c:	bl	10e54 <_exit@plt>
   12f50:	mov	sp, fp
   12f54:	pop	{fp, pc}
   12f58:	push	{r4, r5, fp, lr}
   12f5c:	add	fp, sp, #8
   12f60:	sub	sp, sp, #48	; 0x30
   12f64:	ldr	r1, [fp, #12]
   12f68:	ldr	ip, [fp, #8]
   12f6c:	ldr	lr, [fp, #16]
   12f70:	str	r0, [fp, #-12]
   12f74:	str	r3, [fp, #-20]	; 0xffffffec
   12f78:	str	r2, [fp, #-24]	; 0xffffffe8
   12f7c:	str	r1, [sp, #28]
   12f80:	str	ip, [sp, #24]
   12f84:	ldr	r0, [fp, #-12]
   12f88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f90:	ldr	r1, [sp, #24]
   12f94:	ldr	ip, [sp, #28]
   12f98:	ldr	r4, [fp, #16]
   12f9c:	mov	r5, sp
   12fa0:	str	r4, [r5, #8]
   12fa4:	str	ip, [r5, #4]
   12fa8:	str	r1, [r5]
   12fac:	str	lr, [sp, #20]
   12fb0:	bl	10e24 <posix_fadvise64@plt>
   12fb4:	str	r0, [sp, #16]
   12fb8:	sub	sp, fp, #8
   12fbc:	pop	{r4, r5, fp, pc}
   12fc0:	push	{fp, lr}
   12fc4:	mov	fp, sp
   12fc8:	sub	sp, sp, #24
   12fcc:	str	r0, [fp, #-4]
   12fd0:	str	r1, [fp, #-8]
   12fd4:	ldr	r0, [fp, #-4]
   12fd8:	movw	r1, #0
   12fdc:	cmp	r0, r1
   12fe0:	beq	13010 <__assert_fail@plt+0x1fc4>
   12fe4:	ldr	r0, [fp, #-4]
   12fe8:	bl	10fa4 <fileno@plt>
   12fec:	ldr	lr, [fp, #-8]
   12ff0:	mov	r1, sp
   12ff4:	str	lr, [r1, #8]
   12ff8:	mov	lr, #0
   12ffc:	str	lr, [r1, #4]
   13000:	str	lr, [r1]
   13004:	mov	r2, lr
   13008:	mov	r3, lr
   1300c:	bl	12f58 <__assert_fail@plt+0x1f0c>
   13010:	mov	sp, fp
   13014:	pop	{fp, pc}
   13018:	push	{fp, lr}
   1301c:	mov	fp, sp
   13020:	sub	sp, sp, #32
   13024:	str	r0, [fp, #-8]
   13028:	movw	r0, #0
   1302c:	str	r0, [fp, #-12]
   13030:	str	r0, [sp, #12]
   13034:	ldr	r0, [fp, #-8]
   13038:	bl	10fa4 <fileno@plt>
   1303c:	str	r0, [sp, #16]
   13040:	ldr	r0, [sp, #16]
   13044:	cmp	r0, #0
   13048:	bge	1305c <__assert_fail@plt+0x2010>
   1304c:	ldr	r0, [fp, #-8]
   13050:	bl	10fb0 <fclose@plt>
   13054:	str	r0, [fp, #-4]
   13058:	b	130f8 <__assert_fail@plt+0x20ac>
   1305c:	ldr	r0, [fp, #-8]
   13060:	bl	10f20 <__freading@plt>
   13064:	cmp	r0, #0
   13068:	beq	130a0 <__assert_fail@plt+0x2054>
   1306c:	ldr	r0, [fp, #-8]
   13070:	bl	10fa4 <fileno@plt>
   13074:	mov	lr, sp
   13078:	mov	r1, #1
   1307c:	str	r1, [lr]
   13080:	mov	r1, #0
   13084:	mov	r2, r1
   13088:	mov	r3, r1
   1308c:	bl	10ec0 <lseek64@plt>
   13090:	and	r0, r0, r1
   13094:	cmn	r0, #1
   13098:	beq	130bc <__assert_fail@plt+0x2070>
   1309c:	b	130a0 <__assert_fail@plt+0x2054>
   130a0:	ldr	r0, [fp, #-8]
   130a4:	bl	13104 <__assert_fail@plt+0x20b8>
   130a8:	cmp	r0, #0
   130ac:	beq	130bc <__assert_fail@plt+0x2070>
   130b0:	bl	10f80 <__errno_location@plt>
   130b4:	ldr	r0, [r0]
   130b8:	str	r0, [fp, #-12]
   130bc:	ldr	r0, [fp, #-8]
   130c0:	bl	10fb0 <fclose@plt>
   130c4:	str	r0, [sp, #12]
   130c8:	ldr	r0, [fp, #-12]
   130cc:	cmp	r0, #0
   130d0:	beq	130f0 <__assert_fail@plt+0x20a4>
   130d4:	ldr	r0, [fp, #-12]
   130d8:	str	r0, [sp, #8]
   130dc:	bl	10f80 <__errno_location@plt>
   130e0:	ldr	lr, [sp, #8]
   130e4:	str	lr, [r0]
   130e8:	mvn	r0, #0
   130ec:	str	r0, [sp, #12]
   130f0:	ldr	r0, [sp, #12]
   130f4:	str	r0, [fp, #-4]
   130f8:	ldr	r0, [fp, #-4]
   130fc:	mov	sp, fp
   13100:	pop	{fp, pc}
   13104:	push	{fp, lr}
   13108:	mov	fp, sp
   1310c:	sub	sp, sp, #8
   13110:	str	r0, [sp]
   13114:	ldr	r0, [sp]
   13118:	movw	r1, #0
   1311c:	cmp	r0, r1
   13120:	beq	13134 <__assert_fail@plt+0x20e8>
   13124:	ldr	r0, [sp]
   13128:	bl	10f20 <__freading@plt>
   1312c:	cmp	r0, #0
   13130:	bne	13144 <__assert_fail@plt+0x20f8>
   13134:	ldr	r0, [sp]
   13138:	bl	10e3c <fflush@plt>
   1313c:	str	r0, [sp, #4]
   13140:	b	13158 <__assert_fail@plt+0x210c>
   13144:	ldr	r0, [sp]
   13148:	bl	13164 <__assert_fail@plt+0x2118>
   1314c:	ldr	r0, [sp]
   13150:	bl	10e3c <fflush@plt>
   13154:	str	r0, [sp, #4]
   13158:	ldr	r0, [sp, #4]
   1315c:	mov	sp, fp
   13160:	pop	{fp, pc}
   13164:	push	{fp, lr}
   13168:	mov	fp, sp
   1316c:	sub	sp, sp, #16
   13170:	str	r0, [fp, #-4]
   13174:	ldr	r0, [fp, #-4]
   13178:	ldr	r0, [r0]
   1317c:	and	r0, r0, #256	; 0x100
   13180:	cmp	r0, #0
   13184:	beq	131ac <__assert_fail@plt+0x2160>
   13188:	ldr	r0, [fp, #-4]
   1318c:	mov	r1, sp
   13190:	mov	r2, #1
   13194:	str	r2, [r1]
   13198:	mov	r1, #0
   1319c:	mov	r2, r1
   131a0:	mov	r3, r1
   131a4:	bl	131f4 <__assert_fail@plt+0x21a8>
   131a8:	str	r0, [sp, #8]
   131ac:	mov	sp, fp
   131b0:	pop	{fp, pc}
   131b4:	push	{fp, lr}
   131b8:	mov	fp, sp
   131bc:	sub	sp, sp, #16
   131c0:	str	r0, [fp, #-4]
   131c4:	bl	10f80 <__errno_location@plt>
   131c8:	ldr	r0, [r0]
   131cc:	str	r0, [sp, #8]
   131d0:	ldr	r0, [fp, #-4]
   131d4:	bl	10e48 <free@plt>
   131d8:	ldr	r0, [sp, #8]
   131dc:	str	r0, [sp, #4]
   131e0:	bl	10f80 <__errno_location@plt>
   131e4:	ldr	lr, [sp, #4]
   131e8:	str	lr, [r0]
   131ec:	mov	sp, fp
   131f0:	pop	{fp, pc}
   131f4:	push	{fp, lr}
   131f8:	mov	fp, sp
   131fc:	sub	sp, sp, #32
   13200:	ldr	r1, [fp, #8]
   13204:	str	r0, [fp, #-8]
   13208:	str	r3, [sp, #20]
   1320c:	str	r2, [sp, #16]
   13210:	ldr	r0, [fp, #-8]
   13214:	ldr	r0, [r0, #8]
   13218:	ldr	r2, [fp, #-8]
   1321c:	ldr	r2, [r2, #4]
   13220:	cmp	r0, r2
   13224:	str	r1, [sp, #4]
   13228:	bne	132d4 <__assert_fail@plt+0x2288>
   1322c:	ldr	r0, [fp, #-8]
   13230:	ldr	r0, [r0, #20]
   13234:	ldr	r1, [fp, #-8]
   13238:	ldr	r1, [r1, #16]
   1323c:	cmp	r0, r1
   13240:	bne	132d4 <__assert_fail@plt+0x2288>
   13244:	ldr	r0, [fp, #-8]
   13248:	ldr	r0, [r0, #36]	; 0x24
   1324c:	movw	r1, #0
   13250:	cmp	r0, r1
   13254:	bne	132d4 <__assert_fail@plt+0x2288>
   13258:	ldr	r0, [fp, #-8]
   1325c:	bl	10fa4 <fileno@plt>
   13260:	ldr	r2, [sp, #16]
   13264:	ldr	r3, [sp, #20]
   13268:	ldr	lr, [fp, #8]
   1326c:	mov	r1, sp
   13270:	str	lr, [r1]
   13274:	bl	10ec0 <lseek64@plt>
   13278:	str	r1, [sp, #12]
   1327c:	str	r0, [sp, #8]
   13280:	ldr	r0, [sp, #8]
   13284:	ldr	r1, [sp, #12]
   13288:	and	r0, r0, r1
   1328c:	cmn	r0, #1
   13290:	bne	132a4 <__assert_fail@plt+0x2258>
   13294:	b	13298 <__assert_fail@plt+0x224c>
   13298:	mvn	r0, #0
   1329c:	str	r0, [fp, #-4]
   132a0:	b	132f4 <__assert_fail@plt+0x22a8>
   132a4:	ldr	r0, [fp, #-8]
   132a8:	ldr	r1, [r0]
   132ac:	bic	r1, r1, #16
   132b0:	str	r1, [r0]
   132b4:	ldr	r0, [sp, #8]
   132b8:	ldr	r1, [sp, #12]
   132bc:	ldr	r2, [fp, #-8]
   132c0:	str	r1, [r2, #84]	; 0x54
   132c4:	str	r0, [r2, #80]	; 0x50
   132c8:	movw	r0, #0
   132cc:	str	r0, [fp, #-4]
   132d0:	b	132f4 <__assert_fail@plt+0x22a8>
   132d4:	ldr	r0, [fp, #-8]
   132d8:	ldr	r2, [sp, #16]
   132dc:	ldr	r3, [sp, #20]
   132e0:	ldr	r1, [fp, #8]
   132e4:	mov	ip, sp
   132e8:	str	r1, [ip]
   132ec:	bl	10fbc <fseeko64@plt>
   132f0:	str	r0, [fp, #-4]
   132f4:	ldr	r0, [fp, #-4]
   132f8:	mov	sp, fp
   132fc:	pop	{fp, pc}
   13300:	push	{fp, lr}
   13304:	mov	fp, sp
   13308:	sub	sp, sp, #24
   1330c:	str	r0, [fp, #-4]
   13310:	ldr	r0, [fp, #-4]
   13314:	movw	r1, #0
   13318:	cmp	r0, r1
   1331c:	bne	13340 <__assert_fail@plt+0x22f4>
   13320:	movw	r0, #53576	; 0xd148
   13324:	movt	r0, #2
   13328:	ldr	r1, [r0]
   1332c:	movw	r0, #48828	; 0xbebc
   13330:	movt	r0, #1
   13334:	bl	11010 <fputs@plt>
   13338:	str	r0, [sp, #8]
   1333c:	bl	11028 <abort@plt>
   13340:	ldr	r0, [fp, #-4]
   13344:	movw	r1, #47	; 0x2f
   13348:	bl	10fd4 <strrchr@plt>
   1334c:	str	r0, [fp, #-8]
   13350:	ldr	r0, [fp, #-8]
   13354:	movw	r1, #0
   13358:	cmp	r0, r1
   1335c:	beq	13370 <__assert_fail@plt+0x2324>
   13360:	ldr	r0, [fp, #-8]
   13364:	add	r0, r0, #1
   13368:	str	r0, [sp, #4]
   1336c:	b	13378 <__assert_fail@plt+0x232c>
   13370:	ldr	r0, [fp, #-4]
   13374:	str	r0, [sp, #4]
   13378:	ldr	r0, [sp, #4]
   1337c:	str	r0, [sp, #12]
   13380:	ldr	r0, [sp, #12]
   13384:	ldr	r1, [fp, #-4]
   13388:	sub	r0, r0, r1
   1338c:	cmp	r0, #7
   13390:	blt	133fc <__assert_fail@plt+0x23b0>
   13394:	ldr	r0, [sp, #12]
   13398:	mvn	r1, #6
   1339c:	add	r0, r0, r1
   133a0:	movw	r1, #48884	; 0xbef4
   133a4:	movt	r1, #1
   133a8:	movw	r2, #7
   133ac:	bl	1101c <strncmp@plt>
   133b0:	cmp	r0, #0
   133b4:	bne	133fc <__assert_fail@plt+0x23b0>
   133b8:	ldr	r0, [sp, #12]
   133bc:	str	r0, [fp, #-4]
   133c0:	ldr	r0, [sp, #12]
   133c4:	movw	r1, #48892	; 0xbefc
   133c8:	movt	r1, #1
   133cc:	movw	r2, #3
   133d0:	bl	1101c <strncmp@plt>
   133d4:	cmp	r0, #0
   133d8:	bne	133f8 <__assert_fail@plt+0x23ac>
   133dc:	ldr	r0, [sp, #12]
   133e0:	add	r0, r0, #3
   133e4:	str	r0, [fp, #-4]
   133e8:	ldr	r0, [fp, #-4]
   133ec:	movw	r1, #53560	; 0xd138
   133f0:	movt	r1, #2
   133f4:	str	r0, [r1]
   133f8:	b	133fc <__assert_fail@plt+0x23b0>
   133fc:	ldr	r0, [fp, #-4]
   13400:	movw	r1, #53668	; 0xd1a4
   13404:	movt	r1, #2
   13408:	str	r0, [r1]
   1340c:	ldr	r0, [fp, #-4]
   13410:	movw	r1, #53564	; 0xd13c
   13414:	movt	r1, #2
   13418:	str	r0, [r1]
   1341c:	mov	sp, fp
   13420:	pop	{fp, pc}
   13424:	push	{fp, lr}
   13428:	mov	fp, sp
   1342c:	sub	sp, sp, #24
   13430:	str	r0, [fp, #-4]
   13434:	bl	10f80 <__errno_location@plt>
   13438:	ldr	r0, [r0]
   1343c:	str	r0, [fp, #-8]
   13440:	ldr	r0, [fp, #-4]
   13444:	movw	lr, #0
   13448:	cmp	r0, lr
   1344c:	beq	1345c <__assert_fail@plt+0x2410>
   13450:	ldr	r0, [fp, #-4]
   13454:	str	r0, [sp, #8]
   13458:	b	1346c <__assert_fail@plt+0x2420>
   1345c:	movw	r0, #53672	; 0xd1a8
   13460:	movt	r0, #2
   13464:	str	r0, [sp, #8]
   13468:	b	1346c <__assert_fail@plt+0x2420>
   1346c:	ldr	r0, [sp, #8]
   13470:	movw	r1, #48	; 0x30
   13474:	bl	19084 <__assert_fail@plt+0x8038>
   13478:	str	r0, [sp, #12]
   1347c:	ldr	r0, [fp, #-8]
   13480:	str	r0, [sp, #4]
   13484:	bl	10f80 <__errno_location@plt>
   13488:	ldr	r1, [sp, #4]
   1348c:	str	r1, [r0]
   13490:	ldr	r0, [sp, #12]
   13494:	mov	sp, fp
   13498:	pop	{fp, pc}
   1349c:	sub	sp, sp, #8
   134a0:	str	r0, [sp, #4]
   134a4:	ldr	r0, [sp, #4]
   134a8:	movw	r1, #0
   134ac:	cmp	r0, r1
   134b0:	beq	134c0 <__assert_fail@plt+0x2474>
   134b4:	ldr	r0, [sp, #4]
   134b8:	str	r0, [sp]
   134bc:	b	134d0 <__assert_fail@plt+0x2484>
   134c0:	movw	r0, #53672	; 0xd1a8
   134c4:	movt	r0, #2
   134c8:	str	r0, [sp]
   134cc:	b	134d0 <__assert_fail@plt+0x2484>
   134d0:	ldr	r0, [sp]
   134d4:	ldr	r0, [r0]
   134d8:	add	sp, sp, #8
   134dc:	bx	lr
   134e0:	sub	sp, sp, #16
   134e4:	str	r0, [sp, #12]
   134e8:	str	r1, [sp, #8]
   134ec:	ldr	r0, [sp, #8]
   134f0:	ldr	r1, [sp, #12]
   134f4:	movw	r2, #0
   134f8:	cmp	r1, r2
   134fc:	str	r0, [sp, #4]
   13500:	beq	13510 <__assert_fail@plt+0x24c4>
   13504:	ldr	r0, [sp, #12]
   13508:	str	r0, [sp]
   1350c:	b	13520 <__assert_fail@plt+0x24d4>
   13510:	movw	r0, #53672	; 0xd1a8
   13514:	movt	r0, #2
   13518:	str	r0, [sp]
   1351c:	b	13520 <__assert_fail@plt+0x24d4>
   13520:	ldr	r0, [sp]
   13524:	ldr	r1, [sp, #4]
   13528:	str	r1, [r0]
   1352c:	add	sp, sp, #16
   13530:	bx	lr
   13534:	sub	sp, sp, #32
   13538:	str	r0, [sp, #28]
   1353c:	strb	r1, [sp, #27]
   13540:	str	r2, [sp, #20]
   13544:	ldrb	r0, [sp, #27]
   13548:	strb	r0, [sp, #19]
   1354c:	ldr	r0, [sp, #28]
   13550:	movw	r1, #0
   13554:	cmp	r0, r1
   13558:	beq	13568 <__assert_fail@plt+0x251c>
   1355c:	ldr	r0, [sp, #28]
   13560:	str	r0, [sp]
   13564:	b	13578 <__assert_fail@plt+0x252c>
   13568:	movw	r0, #53672	; 0xd1a8
   1356c:	movt	r0, #2
   13570:	str	r0, [sp]
   13574:	b	13578 <__assert_fail@plt+0x252c>
   13578:	ldr	r0, [sp]
   1357c:	add	r0, r0, #8
   13580:	ldrb	r1, [sp, #19]
   13584:	lsr	r1, r1, #5
   13588:	add	r0, r0, r1, lsl #2
   1358c:	str	r0, [sp, #12]
   13590:	ldrb	r0, [sp, #19]
   13594:	and	r0, r0, #31
   13598:	str	r0, [sp, #8]
   1359c:	ldr	r0, [sp, #12]
   135a0:	ldr	r0, [r0]
   135a4:	ldr	r1, [sp, #8]
   135a8:	lsr	r0, r0, r1
   135ac:	and	r0, r0, #1
   135b0:	str	r0, [sp, #4]
   135b4:	ldr	r0, [sp, #20]
   135b8:	and	r0, r0, #1
   135bc:	ldr	r1, [sp, #4]
   135c0:	eor	r0, r0, r1
   135c4:	ldr	r1, [sp, #8]
   135c8:	lsl	r0, r0, r1
   135cc:	ldr	r1, [sp, #12]
   135d0:	ldr	r2, [r1]
   135d4:	eor	r0, r2, r0
   135d8:	str	r0, [r1]
   135dc:	ldr	r0, [sp, #4]
   135e0:	add	sp, sp, #32
   135e4:	bx	lr
   135e8:	sub	sp, sp, #12
   135ec:	str	r0, [sp, #8]
   135f0:	str	r1, [sp, #4]
   135f4:	ldr	r0, [sp, #8]
   135f8:	movw	r1, #0
   135fc:	cmp	r0, r1
   13600:	bne	13610 <__assert_fail@plt+0x25c4>
   13604:	movw	r0, #53672	; 0xd1a8
   13608:	movt	r0, #2
   1360c:	str	r0, [sp, #8]
   13610:	ldr	r0, [sp, #8]
   13614:	ldr	r0, [r0, #4]
   13618:	str	r0, [sp]
   1361c:	ldr	r0, [sp, #4]
   13620:	ldr	r1, [sp, #8]
   13624:	str	r0, [r1, #4]
   13628:	ldr	r0, [sp]
   1362c:	add	sp, sp, #12
   13630:	bx	lr
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	sub	sp, sp, #16
   13640:	str	r0, [fp, #-4]
   13644:	str	r1, [sp, #8]
   13648:	str	r2, [sp, #4]
   1364c:	ldr	r0, [fp, #-4]
   13650:	movw	r1, #0
   13654:	cmp	r0, r1
   13658:	bne	13668 <__assert_fail@plt+0x261c>
   1365c:	movw	r0, #53672	; 0xd1a8
   13660:	movt	r0, #2
   13664:	str	r0, [fp, #-4]
   13668:	ldr	r0, [fp, #-4]
   1366c:	movw	r1, #10
   13670:	str	r1, [r0]
   13674:	ldr	r0, [sp, #8]
   13678:	movw	r1, #0
   1367c:	cmp	r0, r1
   13680:	beq	13694 <__assert_fail@plt+0x2648>
   13684:	ldr	r0, [sp, #4]
   13688:	movw	r1, #0
   1368c:	cmp	r0, r1
   13690:	bne	13698 <__assert_fail@plt+0x264c>
   13694:	bl	11028 <abort@plt>
   13698:	ldr	r0, [sp, #8]
   1369c:	ldr	r1, [fp, #-4]
   136a0:	str	r0, [r1, #40]	; 0x28
   136a4:	ldr	r0, [sp, #4]
   136a8:	ldr	r1, [fp, #-4]
   136ac:	str	r0, [r1, #44]	; 0x2c
   136b0:	mov	sp, fp
   136b4:	pop	{fp, pc}
   136b8:	push	{r4, r5, r6, sl, fp, lr}
   136bc:	add	fp, sp, #16
   136c0:	sub	sp, sp, #64	; 0x40
   136c4:	ldr	ip, [fp, #8]
   136c8:	str	r0, [fp, #-20]	; 0xffffffec
   136cc:	str	r1, [fp, #-24]	; 0xffffffe8
   136d0:	str	r2, [fp, #-28]	; 0xffffffe4
   136d4:	str	r3, [fp, #-32]	; 0xffffffe0
   136d8:	ldr	r0, [fp, #8]
   136dc:	movw	r1, #0
   136e0:	cmp	r0, r1
   136e4:	str	ip, [sp, #32]
   136e8:	beq	136f8 <__assert_fail@plt+0x26ac>
   136ec:	ldr	r0, [fp, #8]
   136f0:	str	r0, [sp, #28]
   136f4:	b	13708 <__assert_fail@plt+0x26bc>
   136f8:	movw	r0, #53672	; 0xd1a8
   136fc:	movt	r0, #2
   13700:	str	r0, [sp, #28]
   13704:	b	13708 <__assert_fail@plt+0x26bc>
   13708:	ldr	r0, [sp, #28]
   1370c:	str	r0, [fp, #-36]	; 0xffffffdc
   13710:	bl	10f80 <__errno_location@plt>
   13714:	ldr	r0, [r0]
   13718:	str	r0, [sp, #40]	; 0x28
   1371c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13724:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1372c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13730:	ldr	lr, [lr]
   13734:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13738:	ldr	ip, [ip, #4]
   1373c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13740:	add	r4, r4, #8
   13744:	ldr	r5, [fp, #-36]	; 0xffffffdc
   13748:	ldr	r5, [r5, #40]	; 0x28
   1374c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13750:	ldr	r6, [r6, #44]	; 0x2c
   13754:	str	lr, [sp]
   13758:	str	ip, [sp, #4]
   1375c:	str	r4, [sp, #8]
   13760:	str	r5, [sp, #12]
   13764:	str	r6, [sp, #16]
   13768:	bl	13790 <__assert_fail@plt+0x2744>
   1376c:	str	r0, [sp, #36]	; 0x24
   13770:	ldr	r0, [sp, #40]	; 0x28
   13774:	str	r0, [sp, #24]
   13778:	bl	10f80 <__errno_location@plt>
   1377c:	ldr	r1, [sp, #24]
   13780:	str	r1, [r0]
   13784:	ldr	r0, [sp, #36]	; 0x24
   13788:	sub	sp, fp, #16
   1378c:	pop	{r4, r5, r6, sl, fp, pc}
   13790:	push	{r4, r5, r6, sl, fp, lr}
   13794:	add	fp, sp, #16
   13798:	sub	sp, sp, #168	; 0xa8
   1379c:	ldr	ip, [fp, #24]
   137a0:	ldr	lr, [fp, #20]
   137a4:	ldr	r4, [fp, #16]
   137a8:	ldr	r5, [fp, #12]
   137ac:	ldr	r6, [fp, #8]
   137b0:	str	r0, [fp, #-24]	; 0xffffffe8
   137b4:	str	r1, [fp, #-28]	; 0xffffffe4
   137b8:	str	r2, [fp, #-32]	; 0xffffffe0
   137bc:	str	r3, [fp, #-36]	; 0xffffffdc
   137c0:	movw	r0, #0
   137c4:	str	r0, [fp, #-44]	; 0xffffffd4
   137c8:	str	r0, [fp, #-48]	; 0xffffffd0
   137cc:	str	r0, [fp, #-52]	; 0xffffffcc
   137d0:	str	r0, [fp, #-56]	; 0xffffffc8
   137d4:	movw	r0, #0
   137d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   137dc:	str	r6, [sp, #80]	; 0x50
   137e0:	str	lr, [sp, #76]	; 0x4c
   137e4:	str	r4, [sp, #72]	; 0x48
   137e8:	str	r5, [sp, #68]	; 0x44
   137ec:	str	ip, [sp, #64]	; 0x40
   137f0:	bl	10ecc <__ctype_get_mb_cur_max@plt>
   137f4:	cmp	r0, #1
   137f8:	movw	r0, #0
   137fc:	moveq	r0, #1
   13800:	and	r0, r0, #1
   13804:	strb	r0, [fp, #-58]	; 0xffffffc6
   13808:	ldr	r0, [fp, #12]
   1380c:	and	r0, r0, #2
   13810:	cmp	r0, #0
   13814:	movw	r0, #0
   13818:	movne	r0, #1
   1381c:	and	r0, r0, #1
   13820:	strb	r0, [fp, #-59]	; 0xffffffc5
   13824:	movw	r0, #0
   13828:	strb	r0, [fp, #-60]	; 0xffffffc4
   1382c:	strb	r0, [fp, #-61]	; 0xffffffc3
   13830:	movw	r0, #1
   13834:	strb	r0, [fp, #-62]	; 0xffffffc2
   13838:	ldr	r0, [fp, #8]
   1383c:	cmp	r0, #10
   13840:	str	r0, [sp, #60]	; 0x3c
   13844:	bhi	13a6c <__assert_fail@plt+0x2a20>
   13848:	add	r0, pc, #8
   1384c:	ldr	r1, [sp, #60]	; 0x3c
   13850:	ldr	r0, [r0, r1, lsl #2]
   13854:	mov	pc, r0
   13858:	andeq	r3, r1, r0, ror #20
   1385c:	ldrdeq	r3, [r1], -ip
   13860:	strdeq	r3, [r1], -ip
   13864:	ldrdeq	r3, [r1], -r4
   13868:	andeq	r3, r1, r4, ror #19
   1386c:	muleq	r1, r4, r8
   13870:	andeq	r3, r1, r4, lsl #17
   13874:	strdeq	r3, [r1], -r8
   13878:	andeq	r3, r1, ip, lsl #18
   1387c:	andeq	r3, r1, ip, lsl #18
   13880:	andeq	r3, r1, ip, lsl #18
   13884:	movw	r0, #5
   13888:	str	r0, [fp, #8]
   1388c:	movw	r0, #1
   13890:	strb	r0, [fp, #-59]	; 0xffffffc5
   13894:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13898:	tst	r0, #1
   1389c:	bne	138d8 <__assert_fail@plt+0x288c>
   138a0:	b	138a4 <__assert_fail@plt+0x2858>
   138a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138ac:	cmp	r0, r1
   138b0:	bcs	138c8 <__assert_fail@plt+0x287c>
   138b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   138b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   138bc:	add	r0, r0, r1
   138c0:	movw	r1, #34	; 0x22
   138c4:	strb	r1, [r0]
   138c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138cc:	add	r0, r0, #1
   138d0:	str	r0, [fp, #-44]	; 0xffffffd4
   138d4:	b	138d8 <__assert_fail@plt+0x288c>
   138d8:	movw	r0, #1
   138dc:	strb	r0, [fp, #-57]	; 0xffffffc7
   138e0:	movw	r0, #48972	; 0xbf4c
   138e4:	movt	r0, #1
   138e8:	str	r0, [fp, #-52]	; 0xffffffcc
   138ec:	movw	r0, #1
   138f0:	str	r0, [fp, #-56]	; 0xffffffc8
   138f4:	b	13a70 <__assert_fail@plt+0x2a24>
   138f8:	movw	r0, #1
   138fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   13900:	movw	r0, #0
   13904:	strb	r0, [fp, #-59]	; 0xffffffc5
   13908:	b	13a70 <__assert_fail@plt+0x2a24>
   1390c:	ldr	r0, [fp, #8]
   13910:	cmp	r0, #10
   13914:	beq	13940 <__assert_fail@plt+0x28f4>
   13918:	ldr	r1, [fp, #8]
   1391c:	movw	r0, #48974	; 0xbf4e
   13920:	movt	r0, #1
   13924:	bl	15980 <__assert_fail@plt+0x4934>
   13928:	str	r0, [fp, #20]
   1392c:	ldr	r1, [fp, #8]
   13930:	movw	r0, #48804	; 0xbea4
   13934:	movt	r0, #1
   13938:	bl	15980 <__assert_fail@plt+0x4934>
   1393c:	str	r0, [fp, #24]
   13940:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13944:	tst	r0, #1
   13948:	bne	139b4 <__assert_fail@plt+0x2968>
   1394c:	ldr	r0, [fp, #20]
   13950:	str	r0, [fp, #-52]	; 0xffffffcc
   13954:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13958:	ldrsb	r0, [r0]
   1395c:	cmp	r0, #0
   13960:	beq	139b0 <__assert_fail@plt+0x2964>
   13964:	b	13968 <__assert_fail@plt+0x291c>
   13968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1396c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13970:	cmp	r0, r1
   13974:	bcs	13990 <__assert_fail@plt+0x2944>
   13978:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1397c:	ldrb	r0, [r0]
   13980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13984:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13988:	add	r1, r1, r2
   1398c:	strb	r0, [r1]
   13990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13994:	add	r0, r0, #1
   13998:	str	r0, [fp, #-44]	; 0xffffffd4
   1399c:	b	139a0 <__assert_fail@plt+0x2954>
   139a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139a4:	add	r0, r0, #1
   139a8:	str	r0, [fp, #-52]	; 0xffffffcc
   139ac:	b	13954 <__assert_fail@plt+0x2908>
   139b0:	b	139b4 <__assert_fail@plt+0x2968>
   139b4:	movw	r0, #1
   139b8:	strb	r0, [fp, #-57]	; 0xffffffc7
   139bc:	ldr	r0, [fp, #24]
   139c0:	str	r0, [fp, #-52]	; 0xffffffcc
   139c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139c8:	bl	10f68 <strlen@plt>
   139cc:	str	r0, [fp, #-56]	; 0xffffffc8
   139d0:	b	13a70 <__assert_fail@plt+0x2a24>
   139d4:	movw	r0, #1
   139d8:	strb	r0, [fp, #-57]	; 0xffffffc7
   139dc:	movw	r0, #1
   139e0:	strb	r0, [fp, #-59]	; 0xffffffc5
   139e4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   139e8:	tst	r0, #1
   139ec:	bne	139f8 <__assert_fail@plt+0x29ac>
   139f0:	movw	r0, #1
   139f4:	strb	r0, [fp, #-57]	; 0xffffffc7
   139f8:	b	139fc <__assert_fail@plt+0x29b0>
   139fc:	movw	r0, #2
   13a00:	str	r0, [fp, #8]
   13a04:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13a08:	tst	r0, #1
   13a0c:	bne	13a48 <__assert_fail@plt+0x29fc>
   13a10:	b	13a14 <__assert_fail@plt+0x29c8>
   13a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a1c:	cmp	r0, r1
   13a20:	bcs	13a38 <__assert_fail@plt+0x29ec>
   13a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13a2c:	add	r0, r0, r1
   13a30:	movw	r1, #39	; 0x27
   13a34:	strb	r1, [r0]
   13a38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a3c:	add	r0, r0, #1
   13a40:	str	r0, [fp, #-44]	; 0xffffffd4
   13a44:	b	13a48 <__assert_fail@plt+0x29fc>
   13a48:	movw	r0, #48804	; 0xbea4
   13a4c:	movt	r0, #1
   13a50:	str	r0, [fp, #-52]	; 0xffffffcc
   13a54:	movw	r0, #1
   13a58:	str	r0, [fp, #-56]	; 0xffffffc8
   13a5c:	b	13a70 <__assert_fail@plt+0x2a24>
   13a60:	movw	r0, #0
   13a64:	strb	r0, [fp, #-59]	; 0xffffffc5
   13a68:	b	13a70 <__assert_fail@plt+0x2a24>
   13a6c:	bl	11028 <abort@plt>
   13a70:	movw	r0, #0
   13a74:	str	r0, [fp, #-40]	; 0xffffffd8
   13a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a7c:	cmn	r0, #1
   13a80:	bne	13aac <__assert_fail@plt+0x2a60>
   13a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a8c:	add	r0, r0, r1
   13a90:	ldrb	r0, [r0]
   13a94:	cmp	r0, #0
   13a98:	movw	r0, #0
   13a9c:	moveq	r0, #1
   13aa0:	and	r0, r0, #1
   13aa4:	str	r0, [sp, #56]	; 0x38
   13aa8:	b	13ac8 <__assert_fail@plt+0x2a7c>
   13aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ab0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ab4:	cmp	r0, r1
   13ab8:	movw	r0, #0
   13abc:	moveq	r0, #1
   13ac0:	and	r0, r0, #1
   13ac4:	str	r0, [sp, #56]	; 0x38
   13ac8:	ldr	r0, [sp, #56]	; 0x38
   13acc:	cmp	r0, #0
   13ad0:	movw	r0, #0
   13ad4:	movne	r0, #1
   13ad8:	mvn	r1, #0
   13adc:	eor	r0, r0, r1
   13ae0:	tst	r0, #1
   13ae4:	beq	14cd4 <__assert_fail@plt+0x3c88>
   13ae8:	movw	r0, #0
   13aec:	strb	r0, [fp, #-65]	; 0xffffffbf
   13af0:	strb	r0, [fp, #-66]	; 0xffffffbe
   13af4:	strb	r0, [fp, #-67]	; 0xffffffbd
   13af8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13afc:	tst	r0, #1
   13b00:	beq	13bac <__assert_fail@plt+0x2b60>
   13b04:	ldr	r0, [fp, #8]
   13b08:	cmp	r0, #2
   13b0c:	beq	13bac <__assert_fail@plt+0x2b60>
   13b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b14:	cmp	r0, #0
   13b18:	beq	13bac <__assert_fail@plt+0x2b60>
   13b1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13b20:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13b24:	add	r0, r0, r1
   13b28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b2c:	cmn	r1, #1
   13b30:	str	r0, [sp, #52]	; 0x34
   13b34:	bne	13b5c <__assert_fail@plt+0x2b10>
   13b38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13b3c:	movw	r1, #1
   13b40:	cmp	r1, r0
   13b44:	bcs	13b5c <__assert_fail@plt+0x2b10>
   13b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b4c:	bl	10f68 <strlen@plt>
   13b50:	str	r0, [fp, #-36]	; 0xffffffdc
   13b54:	str	r0, [sp, #48]	; 0x30
   13b58:	b	13b64 <__assert_fail@plt+0x2b18>
   13b5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b60:	str	r0, [sp, #48]	; 0x30
   13b64:	ldr	r0, [sp, #48]	; 0x30
   13b68:	ldr	r1, [sp, #52]	; 0x34
   13b6c:	cmp	r1, r0
   13b70:	bhi	13bac <__assert_fail@plt+0x2b60>
   13b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13b7c:	add	r0, r0, r1
   13b80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13b88:	bl	10e84 <memcmp@plt>
   13b8c:	cmp	r0, #0
   13b90:	bne	13bac <__assert_fail@plt+0x2b60>
   13b94:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13b98:	tst	r0, #1
   13b9c:	beq	13ba4 <__assert_fail@plt+0x2b58>
   13ba0:	b	14e54 <__assert_fail@plt+0x3e08>
   13ba4:	movw	r0, #1
   13ba8:	strb	r0, [fp, #-65]	; 0xffffffbf
   13bac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bb0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13bb4:	ldrb	r0, [r0, r1]
   13bb8:	strb	r0, [fp, #-63]	; 0xffffffc1
   13bbc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13bc0:	mov	r1, r0
   13bc4:	cmp	r0, #126	; 0x7e
   13bc8:	str	r1, [sp, #44]	; 0x2c
   13bcc:	bhi	1443c <__assert_fail@plt+0x33f0>
   13bd0:	add	r0, pc, #8
   13bd4:	ldr	r1, [sp, #44]	; 0x2c
   13bd8:	ldr	r0, [r0, r1, lsl #2]
   13bdc:	mov	pc, r0
   13be0:	ldrdeq	r3, [r1], -ip
   13be4:	andeq	r4, r1, ip, lsr r4
   13be8:	andeq	r4, r1, ip, lsr r4
   13bec:	andeq	r4, r1, ip, lsr r4
   13bf0:	andeq	r4, r1, ip, lsr r4
   13bf4:	andeq	r4, r1, ip, lsr r4
   13bf8:	andeq	r4, r1, ip, lsr r4
   13bfc:	andeq	r4, r1, r4, ror #3
   13c00:	strdeq	r4, [r1], -r0
   13c04:	andeq	r4, r1, r0, lsr #4
   13c08:	andeq	r4, r1, r8, lsl #4
   13c0c:	andeq	r4, r1, ip, lsr #4
   13c10:	strdeq	r4, [r1], -ip
   13c14:	andeq	r4, r1, r4, lsl r2
   13c18:	andeq	r4, r1, ip, lsr r4
   13c1c:	andeq	r4, r1, ip, lsr r4
   13c20:	andeq	r4, r1, ip, lsr r4
   13c24:	andeq	r4, r1, ip, lsr r4
   13c28:	andeq	r4, r1, ip, lsr r4
   13c2c:	andeq	r4, r1, ip, lsr r4
   13c30:	andeq	r4, r1, ip, lsr r4
   13c34:	andeq	r4, r1, ip, lsr r4
   13c38:	andeq	r4, r1, ip, lsr r4
   13c3c:	andeq	r4, r1, ip, lsr r4
   13c40:	andeq	r4, r1, ip, lsr r4
   13c44:	andeq	r4, r1, ip, lsr r4
   13c48:	andeq	r4, r1, ip, lsr r4
   13c4c:	andeq	r4, r1, ip, lsr r4
   13c50:	andeq	r4, r1, ip, lsr r4
   13c54:	andeq	r4, r1, ip, lsr r4
   13c58:	andeq	r4, r1, ip, lsr r4
   13c5c:	andeq	r4, r1, ip, lsr r4
   13c60:	andeq	r4, r1, r0, lsl r3
   13c64:	andeq	r4, r1, r8, lsl r3
   13c68:	andeq	r4, r1, r8, lsl r3
   13c6c:	strdeq	r4, [r1], -ip
   13c70:	andeq	r4, r1, r8, lsl r3
   13c74:	andeq	r4, r1, r0, lsr r4
   13c78:	andeq	r4, r1, r8, lsl r3
   13c7c:	andeq	r4, r1, r8, lsr r3
   13c80:	andeq	r4, r1, r8, lsl r3
   13c84:	andeq	r4, r1, r8, lsl r3
   13c88:	andeq	r4, r1, r8, lsl r3
   13c8c:	andeq	r4, r1, r0, lsr r4
   13c90:	andeq	r4, r1, r0, lsr r4
   13c94:	andeq	r4, r1, r0, lsr r4
   13c98:	andeq	r4, r1, r0, lsr r4
   13c9c:	andeq	r4, r1, r0, lsr r4
   13ca0:	andeq	r4, r1, r0, lsr r4
   13ca4:	andeq	r4, r1, r0, lsr r4
   13ca8:	andeq	r4, r1, r0, lsr r4
   13cac:	andeq	r4, r1, r0, lsr r4
   13cb0:	andeq	r4, r1, r0, lsr r4
   13cb4:	andeq	r4, r1, r0, lsr r4
   13cb8:	andeq	r4, r1, r0, lsr r4
   13cbc:	andeq	r4, r1, r0, lsr r4
   13cc0:	andeq	r4, r1, r0, lsr r4
   13cc4:	andeq	r4, r1, r0, lsr r4
   13cc8:	andeq	r4, r1, r0, lsr r4
   13ccc:	andeq	r4, r1, r8, lsl r3
   13cd0:	andeq	r4, r1, r8, lsl r3
   13cd4:	andeq	r4, r1, r8, lsl r3
   13cd8:	andeq	r4, r1, r8, lsl r3
   13cdc:	andeq	r3, r1, r8, ror #31
   13ce0:	andeq	r4, r1, ip, lsr r4
   13ce4:	andeq	r4, r1, r0, lsr r4
   13ce8:	andeq	r4, r1, r0, lsr r4
   13cec:	andeq	r4, r1, r0, lsr r4
   13cf0:	andeq	r4, r1, r0, lsr r4
   13cf4:	andeq	r4, r1, r0, lsr r4
   13cf8:	andeq	r4, r1, r0, lsr r4
   13cfc:	andeq	r4, r1, r0, lsr r4
   13d00:	andeq	r4, r1, r0, lsr r4
   13d04:	andeq	r4, r1, r0, lsr r4
   13d08:	andeq	r4, r1, r0, lsr r4
   13d0c:	andeq	r4, r1, r0, lsr r4
   13d10:	andeq	r4, r1, r0, lsr r4
   13d14:	andeq	r4, r1, r0, lsr r4
   13d18:	andeq	r4, r1, r0, lsr r4
   13d1c:	andeq	r4, r1, r0, lsr r4
   13d20:	andeq	r4, r1, r0, lsr r4
   13d24:	andeq	r4, r1, r0, lsr r4
   13d28:	andeq	r4, r1, r0, lsr r4
   13d2c:	andeq	r4, r1, r0, lsr r4
   13d30:	andeq	r4, r1, r0, lsr r4
   13d34:	andeq	r4, r1, r0, lsr r4
   13d38:	andeq	r4, r1, r0, lsr r4
   13d3c:	andeq	r4, r1, r0, lsr r4
   13d40:	andeq	r4, r1, r0, lsr r4
   13d44:	andeq	r4, r1, r0, lsr r4
   13d48:	andeq	r4, r1, r0, lsr r4
   13d4c:	andeq	r4, r1, r8, lsl r3
   13d50:	andeq	r4, r1, r8, lsr r2
   13d54:	andeq	r4, r1, r0, lsr r4
   13d58:	andeq	r4, r1, r8, lsl r3
   13d5c:	andeq	r4, r1, r0, lsr r4
   13d60:	andeq	r4, r1, r8, lsl r3
   13d64:	andeq	r4, r1, r0, lsr r4
   13d68:	andeq	r4, r1, r0, lsr r4
   13d6c:	andeq	r4, r1, r0, lsr r4
   13d70:	andeq	r4, r1, r0, lsr r4
   13d74:	andeq	r4, r1, r0, lsr r4
   13d78:	andeq	r4, r1, r0, lsr r4
   13d7c:	andeq	r4, r1, r0, lsr r4
   13d80:	andeq	r4, r1, r0, lsr r4
   13d84:	andeq	r4, r1, r0, lsr r4
   13d88:	andeq	r4, r1, r0, lsr r4
   13d8c:	andeq	r4, r1, r0, lsr r4
   13d90:	andeq	r4, r1, r0, lsr r4
   13d94:	andeq	r4, r1, r0, lsr r4
   13d98:	andeq	r4, r1, r0, lsr r4
   13d9c:	andeq	r4, r1, r0, lsr r4
   13da0:	andeq	r4, r1, r0, lsr r4
   13da4:	andeq	r4, r1, r0, lsr r4
   13da8:	andeq	r4, r1, r0, lsr r4
   13dac:	andeq	r4, r1, r0, lsr r4
   13db0:	andeq	r4, r1, r0, lsr r4
   13db4:	andeq	r4, r1, r0, lsr r4
   13db8:	andeq	r4, r1, r0, lsr r4
   13dbc:	andeq	r4, r1, r0, lsr r4
   13dc0:	andeq	r4, r1, r0, lsr r4
   13dc4:	andeq	r4, r1, r0, lsr r4
   13dc8:	andeq	r4, r1, r0, lsr r4
   13dcc:	andeq	r4, r1, r8, asr #5
   13dd0:	andeq	r4, r1, r8, lsl r3
   13dd4:	andeq	r4, r1, r8, asr #5
   13dd8:	strdeq	r4, [r1], -ip
   13ddc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13de0:	tst	r0, #1
   13de4:	beq	13fcc <__assert_fail@plt+0x2f80>
   13de8:	b	13dec <__assert_fail@plt+0x2da0>
   13dec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13df0:	tst	r0, #1
   13df4:	beq	13dfc <__assert_fail@plt+0x2db0>
   13df8:	b	14e54 <__assert_fail@plt+0x3e08>
   13dfc:	movw	r0, #1
   13e00:	strb	r0, [fp, #-66]	; 0xffffffbe
   13e04:	ldr	r0, [fp, #8]
   13e08:	cmp	r0, #2
   13e0c:	bne	13ec0 <__assert_fail@plt+0x2e74>
   13e10:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13e14:	tst	r0, #1
   13e18:	bne	13ec0 <__assert_fail@plt+0x2e74>
   13e1c:	b	13e20 <__assert_fail@plt+0x2dd4>
   13e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e28:	cmp	r0, r1
   13e2c:	bcs	13e44 <__assert_fail@plt+0x2df8>
   13e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e38:	add	r0, r0, r1
   13e3c:	movw	r1, #39	; 0x27
   13e40:	strb	r1, [r0]
   13e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e48:	add	r0, r0, #1
   13e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   13e50:	b	13e54 <__assert_fail@plt+0x2e08>
   13e54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e5c:	cmp	r0, r1
   13e60:	bcs	13e78 <__assert_fail@plt+0x2e2c>
   13e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e6c:	add	r0, r0, r1
   13e70:	movw	r1, #36	; 0x24
   13e74:	strb	r1, [r0]
   13e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e7c:	add	r0, r0, #1
   13e80:	str	r0, [fp, #-44]	; 0xffffffd4
   13e84:	b	13e88 <__assert_fail@plt+0x2e3c>
   13e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e90:	cmp	r0, r1
   13e94:	bcs	13eac <__assert_fail@plt+0x2e60>
   13e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ea0:	add	r0, r0, r1
   13ea4:	movw	r1, #39	; 0x27
   13ea8:	strb	r1, [r0]
   13eac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13eb0:	add	r0, r0, #1
   13eb4:	str	r0, [fp, #-44]	; 0xffffffd4
   13eb8:	movw	r0, #1
   13ebc:	strb	r0, [fp, #-60]	; 0xffffffc4
   13ec0:	b	13ec4 <__assert_fail@plt+0x2e78>
   13ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ec8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ecc:	cmp	r0, r1
   13ed0:	bcs	13ee8 <__assert_fail@plt+0x2e9c>
   13ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ed8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13edc:	add	r0, r0, r1
   13ee0:	movw	r1, #92	; 0x5c
   13ee4:	strb	r1, [r0]
   13ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13eec:	add	r0, r0, #1
   13ef0:	str	r0, [fp, #-44]	; 0xffffffd4
   13ef4:	b	13ef8 <__assert_fail@plt+0x2eac>
   13ef8:	ldr	r0, [fp, #8]
   13efc:	cmp	r0, #2
   13f00:	beq	13fc0 <__assert_fail@plt+0x2f74>
   13f04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f08:	add	r0, r0, #1
   13f0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f10:	cmp	r0, r1
   13f14:	bcs	13fc0 <__assert_fail@plt+0x2f74>
   13f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f20:	add	r1, r1, #1
   13f24:	add	r0, r0, r1
   13f28:	ldrb	r0, [r0]
   13f2c:	movw	r1, #48	; 0x30
   13f30:	cmp	r1, r0
   13f34:	bgt	13fc0 <__assert_fail@plt+0x2f74>
   13f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f40:	add	r1, r1, #1
   13f44:	add	r0, r0, r1
   13f48:	ldrb	r0, [r0]
   13f4c:	cmp	r0, #57	; 0x39
   13f50:	bgt	13fc0 <__assert_fail@plt+0x2f74>
   13f54:	b	13f58 <__assert_fail@plt+0x2f0c>
   13f58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f60:	cmp	r0, r1
   13f64:	bcs	13f7c <__assert_fail@plt+0x2f30>
   13f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f70:	add	r0, r0, r1
   13f74:	movw	r1, #48	; 0x30
   13f78:	strb	r1, [r0]
   13f7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f80:	add	r0, r0, #1
   13f84:	str	r0, [fp, #-44]	; 0xffffffd4
   13f88:	b	13f8c <__assert_fail@plt+0x2f40>
   13f8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f94:	cmp	r0, r1
   13f98:	bcs	13fb0 <__assert_fail@plt+0x2f64>
   13f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fa0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fa4:	add	r0, r0, r1
   13fa8:	movw	r1, #48	; 0x30
   13fac:	strb	r1, [r0]
   13fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fb4:	add	r0, r0, #1
   13fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   13fbc:	b	13fc0 <__assert_fail@plt+0x2f74>
   13fc0:	movw	r0, #48	; 0x30
   13fc4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13fc8:	b	13fe4 <__assert_fail@plt+0x2f98>
   13fcc:	ldr	r0, [fp, #12]
   13fd0:	and	r0, r0, #1
   13fd4:	cmp	r0, #0
   13fd8:	beq	13fe0 <__assert_fail@plt+0x2f94>
   13fdc:	b	14cc4 <__assert_fail@plt+0x3c78>
   13fe0:	b	13fe4 <__assert_fail@plt+0x2f98>
   13fe4:	b	14a60 <__assert_fail@plt+0x3a14>
   13fe8:	ldr	r0, [fp, #8]
   13fec:	cmp	r0, #2
   13ff0:	str	r0, [sp, #40]	; 0x28
   13ff4:	beq	1400c <__assert_fail@plt+0x2fc0>
   13ff8:	b	13ffc <__assert_fail@plt+0x2fb0>
   13ffc:	ldr	r0, [sp, #40]	; 0x28
   14000:	cmp	r0, #5
   14004:	beq	14020 <__assert_fail@plt+0x2fd4>
   14008:	b	141dc <__assert_fail@plt+0x3190>
   1400c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14010:	tst	r0, #1
   14014:	beq	1401c <__assert_fail@plt+0x2fd0>
   14018:	b	14e54 <__assert_fail@plt+0x3e08>
   1401c:	b	141e0 <__assert_fail@plt+0x3194>
   14020:	ldr	r0, [fp, #12]
   14024:	and	r0, r0, #4
   14028:	cmp	r0, #0
   1402c:	beq	141d8 <__assert_fail@plt+0x318c>
   14030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14034:	add	r0, r0, #2
   14038:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1403c:	cmp	r0, r1
   14040:	bcs	141d8 <__assert_fail@plt+0x318c>
   14044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14048:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1404c:	add	r1, r1, #1
   14050:	add	r0, r0, r1
   14054:	ldrb	r0, [r0]
   14058:	cmp	r0, #63	; 0x3f
   1405c:	bne	141d8 <__assert_fail@plt+0x318c>
   14060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14064:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14068:	add	r0, r0, r1
   1406c:	ldrb	r0, [r0, #2]
   14070:	mov	r1, r0
   14074:	cmp	r0, #33	; 0x21
   14078:	str	r1, [sp, #36]	; 0x24
   1407c:	beq	140cc <__assert_fail@plt+0x3080>
   14080:	b	14084 <__assert_fail@plt+0x3038>
   14084:	ldr	r0, [sp, #36]	; 0x24
   14088:	sub	r1, r0, #39	; 0x27
   1408c:	cmp	r1, #3
   14090:	bcc	140cc <__assert_fail@plt+0x3080>
   14094:	b	14098 <__assert_fail@plt+0x304c>
   14098:	ldr	r0, [sp, #36]	; 0x24
   1409c:	cmp	r0, #45	; 0x2d
   140a0:	beq	140cc <__assert_fail@plt+0x3080>
   140a4:	b	140a8 <__assert_fail@plt+0x305c>
   140a8:	ldr	r0, [sp, #36]	; 0x24
   140ac:	cmp	r0, #47	; 0x2f
   140b0:	beq	140cc <__assert_fail@plt+0x3080>
   140b4:	b	140b8 <__assert_fail@plt+0x306c>
   140b8:	ldr	r0, [sp, #36]	; 0x24
   140bc:	sub	r1, r0, #60	; 0x3c
   140c0:	cmp	r1, #2
   140c4:	bhi	141d0 <__assert_fail@plt+0x3184>
   140c8:	b	140cc <__assert_fail@plt+0x3080>
   140cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140d0:	tst	r0, #1
   140d4:	beq	140dc <__assert_fail@plt+0x3090>
   140d8:	b	14e54 <__assert_fail@plt+0x3e08>
   140dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   140e4:	add	r1, r1, #2
   140e8:	add	r0, r0, r1
   140ec:	ldrb	r0, [r0]
   140f0:	strb	r0, [fp, #-63]	; 0xffffffc1
   140f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   140f8:	add	r0, r0, #2
   140fc:	str	r0, [fp, #-40]	; 0xffffffd8
   14100:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14104:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14108:	cmp	r0, r1
   1410c:	bcs	14124 <__assert_fail@plt+0x30d8>
   14110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14118:	add	r0, r0, r1
   1411c:	movw	r1, #63	; 0x3f
   14120:	strb	r1, [r0]
   14124:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14128:	add	r0, r0, #1
   1412c:	str	r0, [fp, #-44]	; 0xffffffd4
   14130:	b	14134 <__assert_fail@plt+0x30e8>
   14134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14138:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1413c:	cmp	r0, r1
   14140:	bcs	14158 <__assert_fail@plt+0x310c>
   14144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14148:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1414c:	add	r0, r0, r1
   14150:	movw	r1, #34	; 0x22
   14154:	strb	r1, [r0]
   14158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1415c:	add	r0, r0, #1
   14160:	str	r0, [fp, #-44]	; 0xffffffd4
   14164:	b	14168 <__assert_fail@plt+0x311c>
   14168:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1416c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14170:	cmp	r0, r1
   14174:	bcs	1418c <__assert_fail@plt+0x3140>
   14178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1417c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14180:	add	r0, r0, r1
   14184:	movw	r1, #34	; 0x22
   14188:	strb	r1, [r0]
   1418c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14190:	add	r0, r0, #1
   14194:	str	r0, [fp, #-44]	; 0xffffffd4
   14198:	b	1419c <__assert_fail@plt+0x3150>
   1419c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141a4:	cmp	r0, r1
   141a8:	bcs	141c0 <__assert_fail@plt+0x3174>
   141ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141b4:	add	r0, r0, r1
   141b8:	movw	r1, #63	; 0x3f
   141bc:	strb	r1, [r0]
   141c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141c4:	add	r0, r0, #1
   141c8:	str	r0, [fp, #-44]	; 0xffffffd4
   141cc:	b	141d4 <__assert_fail@plt+0x3188>
   141d0:	b	141d4 <__assert_fail@plt+0x3188>
   141d4:	b	141d8 <__assert_fail@plt+0x318c>
   141d8:	b	141e0 <__assert_fail@plt+0x3194>
   141dc:	b	141e0 <__assert_fail@plt+0x3194>
   141e0:	b	14a60 <__assert_fail@plt+0x3a14>
   141e4:	movw	r0, #97	; 0x61
   141e8:	strb	r0, [fp, #-64]	; 0xffffffc0
   141ec:	b	142ac <__assert_fail@plt+0x3260>
   141f0:	movw	r0, #98	; 0x62
   141f4:	strb	r0, [fp, #-64]	; 0xffffffc0
   141f8:	b	142ac <__assert_fail@plt+0x3260>
   141fc:	movw	r0, #102	; 0x66
   14200:	strb	r0, [fp, #-64]	; 0xffffffc0
   14204:	b	142ac <__assert_fail@plt+0x3260>
   14208:	movw	r0, #110	; 0x6e
   1420c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14210:	b	1428c <__assert_fail@plt+0x3240>
   14214:	movw	r0, #114	; 0x72
   14218:	strb	r0, [fp, #-64]	; 0xffffffc0
   1421c:	b	1428c <__assert_fail@plt+0x3240>
   14220:	movw	r0, #116	; 0x74
   14224:	strb	r0, [fp, #-64]	; 0xffffffc0
   14228:	b	1428c <__assert_fail@plt+0x3240>
   1422c:	movw	r0, #118	; 0x76
   14230:	strb	r0, [fp, #-64]	; 0xffffffc0
   14234:	b	142ac <__assert_fail@plt+0x3260>
   14238:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1423c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14240:	ldr	r0, [fp, #8]
   14244:	cmp	r0, #2
   14248:	bne	14260 <__assert_fail@plt+0x3214>
   1424c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14250:	tst	r0, #1
   14254:	beq	1425c <__assert_fail@plt+0x3210>
   14258:	b	14e54 <__assert_fail@plt+0x3e08>
   1425c:	b	14be8 <__assert_fail@plt+0x3b9c>
   14260:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14264:	tst	r0, #1
   14268:	beq	14288 <__assert_fail@plt+0x323c>
   1426c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14270:	tst	r0, #1
   14274:	beq	14288 <__assert_fail@plt+0x323c>
   14278:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1427c:	cmp	r0, #0
   14280:	beq	14288 <__assert_fail@plt+0x323c>
   14284:	b	14be8 <__assert_fail@plt+0x3b9c>
   14288:	b	1428c <__assert_fail@plt+0x3240>
   1428c:	ldr	r0, [fp, #8]
   14290:	cmp	r0, #2
   14294:	bne	142a8 <__assert_fail@plt+0x325c>
   14298:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1429c:	tst	r0, #1
   142a0:	beq	142a8 <__assert_fail@plt+0x325c>
   142a4:	b	14e54 <__assert_fail@plt+0x3e08>
   142a8:	b	142ac <__assert_fail@plt+0x3260>
   142ac:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   142b0:	tst	r0, #1
   142b4:	beq	142c4 <__assert_fail@plt+0x3278>
   142b8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   142bc:	strb	r0, [fp, #-63]	; 0xffffffc1
   142c0:	b	14ad4 <__assert_fail@plt+0x3a88>
   142c4:	b	14a60 <__assert_fail@plt+0x3a14>
   142c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142cc:	cmn	r0, #1
   142d0:	bne	142e8 <__assert_fail@plt+0x329c>
   142d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142d8:	ldrb	r0, [r0, #1]
   142dc:	cmp	r0, #0
   142e0:	beq	142f8 <__assert_fail@plt+0x32ac>
   142e4:	b	142f4 <__assert_fail@plt+0x32a8>
   142e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142ec:	cmp	r0, #1
   142f0:	beq	142f8 <__assert_fail@plt+0x32ac>
   142f4:	b	14a60 <__assert_fail@plt+0x3a14>
   142f8:	b	142fc <__assert_fail@plt+0x32b0>
   142fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14300:	cmp	r0, #0
   14304:	beq	1430c <__assert_fail@plt+0x32c0>
   14308:	b	14a60 <__assert_fail@plt+0x3a14>
   1430c:	b	14310 <__assert_fail@plt+0x32c4>
   14310:	movw	r0, #1
   14314:	strb	r0, [fp, #-67]	; 0xffffffbd
   14318:	ldr	r0, [fp, #8]
   1431c:	cmp	r0, #2
   14320:	bne	14334 <__assert_fail@plt+0x32e8>
   14324:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14328:	tst	r0, #1
   1432c:	beq	14334 <__assert_fail@plt+0x32e8>
   14330:	b	14e54 <__assert_fail@plt+0x3e08>
   14334:	b	14a60 <__assert_fail@plt+0x3a14>
   14338:	movw	r0, #1
   1433c:	strb	r0, [fp, #-61]	; 0xffffffc3
   14340:	strb	r0, [fp, #-67]	; 0xffffffbd
   14344:	ldr	r0, [fp, #8]
   14348:	cmp	r0, #2
   1434c:	bne	1442c <__assert_fail@plt+0x33e0>
   14350:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14354:	tst	r0, #1
   14358:	beq	14360 <__assert_fail@plt+0x3314>
   1435c:	b	14e54 <__assert_fail@plt+0x3e08>
   14360:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14364:	cmp	r0, #0
   14368:	beq	14388 <__assert_fail@plt+0x333c>
   1436c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14370:	cmp	r0, #0
   14374:	bne	14388 <__assert_fail@plt+0x333c>
   14378:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1437c:	str	r0, [fp, #-48]	; 0xffffffd0
   14380:	movw	r0, #0
   14384:	str	r0, [fp, #-28]	; 0xffffffe4
   14388:	b	1438c <__assert_fail@plt+0x3340>
   1438c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14390:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14394:	cmp	r0, r1
   14398:	bcs	143b0 <__assert_fail@plt+0x3364>
   1439c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143a4:	add	r0, r0, r1
   143a8:	movw	r1, #39	; 0x27
   143ac:	strb	r1, [r0]
   143b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143b4:	add	r0, r0, #1
   143b8:	str	r0, [fp, #-44]	; 0xffffffd4
   143bc:	b	143c0 <__assert_fail@plt+0x3374>
   143c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143c8:	cmp	r0, r1
   143cc:	bcs	143e4 <__assert_fail@plt+0x3398>
   143d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   143d8:	add	r0, r0, r1
   143dc:	movw	r1, #92	; 0x5c
   143e0:	strb	r1, [r0]
   143e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143e8:	add	r0, r0, #1
   143ec:	str	r0, [fp, #-44]	; 0xffffffd4
   143f0:	b	143f4 <__assert_fail@plt+0x33a8>
   143f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   143fc:	cmp	r0, r1
   14400:	bcs	14418 <__assert_fail@plt+0x33cc>
   14404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14408:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1440c:	add	r0, r0, r1
   14410:	movw	r1, #39	; 0x27
   14414:	strb	r1, [r0]
   14418:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1441c:	add	r0, r0, #1
   14420:	str	r0, [fp, #-44]	; 0xffffffd4
   14424:	movw	r0, #0
   14428:	strb	r0, [fp, #-60]	; 0xffffffc4
   1442c:	b	14a60 <__assert_fail@plt+0x3a14>
   14430:	movw	r0, #1
   14434:	strb	r0, [fp, #-67]	; 0xffffffbd
   14438:	b	14a60 <__assert_fail@plt+0x3a14>
   1443c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14440:	tst	r0, #1
   14444:	beq	14488 <__assert_fail@plt+0x343c>
   14448:	mov	r0, #1
   1444c:	str	r0, [fp, #-72]	; 0xffffffb8
   14450:	bl	10f44 <__ctype_b_loc@plt>
   14454:	ldr	r0, [r0]
   14458:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   1445c:	mov	r1, lr
   14460:	add	r0, r0, lr, lsl #1
   14464:	ldrh	r0, [r0]
   14468:	and	r0, r0, #16384	; 0x4000
   1446c:	cmp	r0, #0
   14470:	movw	r0, #0
   14474:	movne	r0, #1
   14478:	and	r0, r0, #1
   1447c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14480:	str	r1, [sp, #32]
   14484:	b	14714 <__assert_fail@plt+0x36c8>
   14488:	sub	r0, fp, #84	; 0x54
   1448c:	movw	r1, #0
   14490:	and	r1, r1, #255	; 0xff
   14494:	movw	r2, #8
   14498:	bl	10f98 <memset@plt>
   1449c:	movw	r0, #0
   144a0:	str	r0, [fp, #-72]	; 0xffffffb8
   144a4:	movw	r0, #1
   144a8:	strb	r0, [fp, #-73]	; 0xffffffb7
   144ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   144b0:	cmn	r0, #1
   144b4:	bne	144c4 <__assert_fail@plt+0x3478>
   144b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144bc:	bl	10f68 <strlen@plt>
   144c0:	str	r0, [fp, #-36]	; 0xffffffdc
   144c4:	b	144c8 <__assert_fail@plt+0x347c>
   144c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   144d4:	add	r1, r1, r2
   144d8:	add	r1, r0, r1
   144dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   144e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   144e8:	add	r2, r2, r3
   144ec:	sub	r2, r0, r2
   144f0:	sub	r0, fp, #88	; 0x58
   144f4:	sub	r3, fp, #84	; 0x54
   144f8:	bl	1973c <__assert_fail@plt+0x86f0>
   144fc:	str	r0, [sp, #92]	; 0x5c
   14500:	ldr	r0, [sp, #92]	; 0x5c
   14504:	cmp	r0, #0
   14508:	bne	14510 <__assert_fail@plt+0x34c4>
   1450c:	b	14710 <__assert_fail@plt+0x36c4>
   14510:	ldr	r0, [sp, #92]	; 0x5c
   14514:	cmn	r0, #1
   14518:	bne	14528 <__assert_fail@plt+0x34dc>
   1451c:	movw	r0, #0
   14520:	strb	r0, [fp, #-73]	; 0xffffffb7
   14524:	b	14710 <__assert_fail@plt+0x36c4>
   14528:	ldr	r0, [sp, #92]	; 0x5c
   1452c:	cmn	r0, #2
   14530:	bne	145a4 <__assert_fail@plt+0x3558>
   14534:	movw	r0, #0
   14538:	strb	r0, [fp, #-73]	; 0xffffffb7
   1453c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14540:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14544:	add	r0, r0, r1
   14548:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1454c:	cmp	r0, r1
   14550:	movw	r0, #0
   14554:	str	r0, [sp, #28]
   14558:	bcs	14584 <__assert_fail@plt+0x3538>
   1455c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14560:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14564:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14568:	add	r1, r1, r2
   1456c:	add	r0, r0, r1
   14570:	ldrb	r0, [r0]
   14574:	cmp	r0, #0
   14578:	movw	r0, #0
   1457c:	movne	r0, #1
   14580:	str	r0, [sp, #28]
   14584:	ldr	r0, [sp, #28]
   14588:	tst	r0, #1
   1458c:	beq	145a0 <__assert_fail@plt+0x3554>
   14590:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14594:	add	r0, r0, #1
   14598:	str	r0, [fp, #-72]	; 0xffffffb8
   1459c:	b	1453c <__assert_fail@plt+0x34f0>
   145a0:	b	14710 <__assert_fail@plt+0x36c4>
   145a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145a8:	tst	r0, #1
   145ac:	beq	146b8 <__assert_fail@plt+0x366c>
   145b0:	ldr	r0, [fp, #8]
   145b4:	cmp	r0, #2
   145b8:	bne	146b8 <__assert_fail@plt+0x366c>
   145bc:	movw	r0, #1
   145c0:	str	r0, [sp, #88]	; 0x58
   145c4:	ldr	r0, [sp, #88]	; 0x58
   145c8:	ldr	r1, [sp, #92]	; 0x5c
   145cc:	cmp	r0, r1
   145d0:	bcs	146b4 <__assert_fail@plt+0x3668>
   145d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   145dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   145e0:	add	r1, r1, r2
   145e4:	ldr	r2, [sp, #88]	; 0x58
   145e8:	add	r1, r1, r2
   145ec:	ldrb	r0, [r0, r1]
   145f0:	sub	r0, r0, #91	; 0x5b
   145f4:	cmp	r0, #33	; 0x21
   145f8:	str	r0, [sp, #24]
   145fc:	bhi	1469c <__assert_fail@plt+0x3650>
   14600:	add	r0, pc, #8
   14604:	ldr	r1, [sp, #24]
   14608:	ldr	r0, [r0, r1, lsl #2]
   1460c:	mov	pc, r0
   14610:	muleq	r1, r8, r6
   14614:	muleq	r1, r8, r6
   14618:	muleq	r1, ip, r6
   1461c:	muleq	r1, r8, r6
   14620:	muleq	r1, ip, r6
   14624:	muleq	r1, r8, r6
   14628:	muleq	r1, ip, r6
   1462c:	muleq	r1, ip, r6
   14630:	muleq	r1, ip, r6
   14634:	muleq	r1, ip, r6
   14638:	muleq	r1, ip, r6
   1463c:	muleq	r1, ip, r6
   14640:	muleq	r1, ip, r6
   14644:	muleq	r1, ip, r6
   14648:	muleq	r1, ip, r6
   1464c:	muleq	r1, ip, r6
   14650:	muleq	r1, ip, r6
   14654:	muleq	r1, ip, r6
   14658:	muleq	r1, ip, r6
   1465c:	muleq	r1, ip, r6
   14660:	muleq	r1, ip, r6
   14664:	muleq	r1, ip, r6
   14668:	muleq	r1, ip, r6
   1466c:	muleq	r1, ip, r6
   14670:	muleq	r1, ip, r6
   14674:	muleq	r1, ip, r6
   14678:	muleq	r1, ip, r6
   1467c:	muleq	r1, ip, r6
   14680:	muleq	r1, ip, r6
   14684:	muleq	r1, ip, r6
   14688:	muleq	r1, ip, r6
   1468c:	muleq	r1, ip, r6
   14690:	muleq	r1, ip, r6
   14694:	muleq	r1, r8, r6
   14698:	b	14e54 <__assert_fail@plt+0x3e08>
   1469c:	b	146a0 <__assert_fail@plt+0x3654>
   146a0:	b	146a4 <__assert_fail@plt+0x3658>
   146a4:	ldr	r0, [sp, #88]	; 0x58
   146a8:	add	r0, r0, #1
   146ac:	str	r0, [sp, #88]	; 0x58
   146b0:	b	145c4 <__assert_fail@plt+0x3578>
   146b4:	b	146b8 <__assert_fail@plt+0x366c>
   146b8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   146bc:	bl	10eb4 <iswprint@plt>
   146c0:	cmp	r0, #0
   146c4:	bne	146d0 <__assert_fail@plt+0x3684>
   146c8:	movw	r0, #0
   146cc:	strb	r0, [fp, #-73]	; 0xffffffb7
   146d0:	ldr	r0, [sp, #92]	; 0x5c
   146d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   146d8:	add	r0, r1, r0
   146dc:	str	r0, [fp, #-72]	; 0xffffffb8
   146e0:	b	146e4 <__assert_fail@plt+0x3698>
   146e4:	b	146e8 <__assert_fail@plt+0x369c>
   146e8:	b	146ec <__assert_fail@plt+0x36a0>
   146ec:	sub	r0, fp, #84	; 0x54
   146f0:	bl	10e6c <mbsinit@plt>
   146f4:	cmp	r0, #0
   146f8:	movw	r0, #0
   146fc:	movne	r0, #1
   14700:	mvn	lr, #0
   14704:	eor	r0, r0, lr
   14708:	tst	r0, #1
   1470c:	bne	144c8 <__assert_fail@plt+0x347c>
   14710:	b	14714 <__assert_fail@plt+0x36c8>
   14714:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14718:	and	r0, r0, #1
   1471c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14720:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14724:	movw	r1, #1
   14728:	cmp	r1, r0
   1472c:	bcc	14748 <__assert_fail@plt+0x36fc>
   14730:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14734:	tst	r0, #1
   14738:	beq	14a5c <__assert_fail@plt+0x3a10>
   1473c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14740:	tst	r0, #1
   14744:	bne	14a5c <__assert_fail@plt+0x3a10>
   14748:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1474c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14750:	add	r0, r0, r1
   14754:	str	r0, [sp, #84]	; 0x54
   14758:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1475c:	tst	r0, #1
   14760:	beq	14910 <__assert_fail@plt+0x38c4>
   14764:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14768:	tst	r0, #1
   1476c:	bne	14910 <__assert_fail@plt+0x38c4>
   14770:	b	14774 <__assert_fail@plt+0x3728>
   14774:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14778:	tst	r0, #1
   1477c:	beq	14784 <__assert_fail@plt+0x3738>
   14780:	b	14e54 <__assert_fail@plt+0x3e08>
   14784:	movw	r0, #1
   14788:	strb	r0, [fp, #-66]	; 0xffffffbe
   1478c:	ldr	r0, [fp, #8]
   14790:	cmp	r0, #2
   14794:	bne	14848 <__assert_fail@plt+0x37fc>
   14798:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1479c:	tst	r0, #1
   147a0:	bne	14848 <__assert_fail@plt+0x37fc>
   147a4:	b	147a8 <__assert_fail@plt+0x375c>
   147a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147b0:	cmp	r0, r1
   147b4:	bcs	147cc <__assert_fail@plt+0x3780>
   147b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147c0:	add	r0, r0, r1
   147c4:	movw	r1, #39	; 0x27
   147c8:	strb	r1, [r0]
   147cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147d0:	add	r0, r0, #1
   147d4:	str	r0, [fp, #-44]	; 0xffffffd4
   147d8:	b	147dc <__assert_fail@plt+0x3790>
   147dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147e4:	cmp	r0, r1
   147e8:	bcs	14800 <__assert_fail@plt+0x37b4>
   147ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147f4:	add	r0, r0, r1
   147f8:	movw	r1, #36	; 0x24
   147fc:	strb	r1, [r0]
   14800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14804:	add	r0, r0, #1
   14808:	str	r0, [fp, #-44]	; 0xffffffd4
   1480c:	b	14810 <__assert_fail@plt+0x37c4>
   14810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14814:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14818:	cmp	r0, r1
   1481c:	bcs	14834 <__assert_fail@plt+0x37e8>
   14820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14824:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14828:	add	r0, r0, r1
   1482c:	movw	r1, #39	; 0x27
   14830:	strb	r1, [r0]
   14834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14838:	add	r0, r0, #1
   1483c:	str	r0, [fp, #-44]	; 0xffffffd4
   14840:	movw	r0, #1
   14844:	strb	r0, [fp, #-60]	; 0xffffffc4
   14848:	b	1484c <__assert_fail@plt+0x3800>
   1484c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14850:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14854:	cmp	r0, r1
   14858:	bcs	14870 <__assert_fail@plt+0x3824>
   1485c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14864:	add	r0, r0, r1
   14868:	movw	r1, #92	; 0x5c
   1486c:	strb	r1, [r0]
   14870:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14874:	add	r0, r0, #1
   14878:	str	r0, [fp, #-44]	; 0xffffffd4
   1487c:	b	14880 <__assert_fail@plt+0x3834>
   14880:	b	14884 <__assert_fail@plt+0x3838>
   14884:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14888:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1488c:	cmp	r0, r1
   14890:	bcs	148b0 <__assert_fail@plt+0x3864>
   14894:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14898:	asr	r0, r0, #6
   1489c:	add	r0, r0, #48	; 0x30
   148a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148a8:	add	r1, r1, r2
   148ac:	strb	r0, [r1]
   148b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148b4:	add	r0, r0, #1
   148b8:	str	r0, [fp, #-44]	; 0xffffffd4
   148bc:	b	148c0 <__assert_fail@plt+0x3874>
   148c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148c8:	cmp	r0, r1
   148cc:	bcs	148f0 <__assert_fail@plt+0x38a4>
   148d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   148d4:	asr	r0, r0, #3
   148d8:	and	r0, r0, #7
   148dc:	add	r0, r0, #48	; 0x30
   148e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   148e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148e8:	add	r1, r1, r2
   148ec:	strb	r0, [r1]
   148f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148f4:	add	r0, r0, #1
   148f8:	str	r0, [fp, #-44]	; 0xffffffd4
   148fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14900:	and	r0, r0, #7
   14904:	add	r0, r0, #48	; 0x30
   14908:	strb	r0, [fp, #-63]	; 0xffffffc1
   1490c:	b	1495c <__assert_fail@plt+0x3910>
   14910:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14914:	tst	r0, #1
   14918:	beq	14958 <__assert_fail@plt+0x390c>
   1491c:	b	14920 <__assert_fail@plt+0x38d4>
   14920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14928:	cmp	r0, r1
   1492c:	bcs	14944 <__assert_fail@plt+0x38f8>
   14930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14934:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14938:	add	r0, r0, r1
   1493c:	movw	r1, #92	; 0x5c
   14940:	strb	r1, [r0]
   14944:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14948:	add	r0, r0, #1
   1494c:	str	r0, [fp, #-44]	; 0xffffffd4
   14950:	movw	r0, #0
   14954:	strb	r0, [fp, #-65]	; 0xffffffbf
   14958:	b	1495c <__assert_fail@plt+0x3910>
   1495c:	ldr	r0, [sp, #84]	; 0x54
   14960:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14964:	add	r1, r1, #1
   14968:	cmp	r0, r1
   1496c:	bhi	14974 <__assert_fail@plt+0x3928>
   14970:	b	14a58 <__assert_fail@plt+0x3a0c>
   14974:	b	14978 <__assert_fail@plt+0x392c>
   14978:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1497c:	tst	r0, #1
   14980:	beq	14a00 <__assert_fail@plt+0x39b4>
   14984:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14988:	tst	r0, #1
   1498c:	bne	14a00 <__assert_fail@plt+0x39b4>
   14990:	b	14994 <__assert_fail@plt+0x3948>
   14994:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14998:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1499c:	cmp	r0, r1
   149a0:	bcs	149b8 <__assert_fail@plt+0x396c>
   149a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149ac:	add	r0, r0, r1
   149b0:	movw	r1, #39	; 0x27
   149b4:	strb	r1, [r0]
   149b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149bc:	add	r0, r0, #1
   149c0:	str	r0, [fp, #-44]	; 0xffffffd4
   149c4:	b	149c8 <__assert_fail@plt+0x397c>
   149c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149d0:	cmp	r0, r1
   149d4:	bcs	149ec <__assert_fail@plt+0x39a0>
   149d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149e0:	add	r0, r0, r1
   149e4:	movw	r1, #39	; 0x27
   149e8:	strb	r1, [r0]
   149ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149f0:	add	r0, r0, #1
   149f4:	str	r0, [fp, #-44]	; 0xffffffd4
   149f8:	movw	r0, #0
   149fc:	strb	r0, [fp, #-60]	; 0xffffffc4
   14a00:	b	14a04 <__assert_fail@plt+0x39b8>
   14a04:	b	14a08 <__assert_fail@plt+0x39bc>
   14a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a10:	cmp	r0, r1
   14a14:	bcs	14a2c <__assert_fail@plt+0x39e0>
   14a18:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14a24:	add	r1, r1, r2
   14a28:	strb	r0, [r1]
   14a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a30:	add	r0, r0, #1
   14a34:	str	r0, [fp, #-44]	; 0xffffffd4
   14a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a40:	add	r1, r1, #1
   14a44:	str	r1, [fp, #-40]	; 0xffffffd8
   14a48:	add	r0, r0, r1
   14a4c:	ldrb	r0, [r0]
   14a50:	strb	r0, [fp, #-63]	; 0xffffffc1
   14a54:	b	14758 <__assert_fail@plt+0x370c>
   14a58:	b	14be8 <__assert_fail@plt+0x3b9c>
   14a5c:	b	14a60 <__assert_fail@plt+0x3a14>
   14a60:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14a64:	tst	r0, #1
   14a68:	beq	14a78 <__assert_fail@plt+0x3a2c>
   14a6c:	ldr	r0, [fp, #8]
   14a70:	cmp	r0, #2
   14a74:	bne	14a84 <__assert_fail@plt+0x3a38>
   14a78:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a7c:	tst	r0, #1
   14a80:	beq	14ac0 <__assert_fail@plt+0x3a74>
   14a84:	ldr	r0, [fp, #16]
   14a88:	movw	r1, #0
   14a8c:	cmp	r0, r1
   14a90:	beq	14ac0 <__assert_fail@plt+0x3a74>
   14a94:	ldr	r0, [fp, #16]
   14a98:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14a9c:	lsr	r1, r1, #5
   14aa0:	add	r0, r0, r1, lsl #2
   14aa4:	ldr	r0, [r0]
   14aa8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14aac:	and	r1, r1, #31
   14ab0:	lsr	r0, r0, r1
   14ab4:	and	r0, r0, #1
   14ab8:	cmp	r0, #0
   14abc:	bne	14ad0 <__assert_fail@plt+0x3a84>
   14ac0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14ac4:	tst	r0, #1
   14ac8:	bne	14ad0 <__assert_fail@plt+0x3a84>
   14acc:	b	14be8 <__assert_fail@plt+0x3b9c>
   14ad0:	b	14ad4 <__assert_fail@plt+0x3a88>
   14ad4:	b	14ad8 <__assert_fail@plt+0x3a8c>
   14ad8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14adc:	tst	r0, #1
   14ae0:	beq	14ae8 <__assert_fail@plt+0x3a9c>
   14ae4:	b	14e54 <__assert_fail@plt+0x3e08>
   14ae8:	movw	r0, #1
   14aec:	strb	r0, [fp, #-66]	; 0xffffffbe
   14af0:	ldr	r0, [fp, #8]
   14af4:	cmp	r0, #2
   14af8:	bne	14bac <__assert_fail@plt+0x3b60>
   14afc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14b00:	tst	r0, #1
   14b04:	bne	14bac <__assert_fail@plt+0x3b60>
   14b08:	b	14b0c <__assert_fail@plt+0x3ac0>
   14b0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b14:	cmp	r0, r1
   14b18:	bcs	14b30 <__assert_fail@plt+0x3ae4>
   14b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b24:	add	r0, r0, r1
   14b28:	movw	r1, #39	; 0x27
   14b2c:	strb	r1, [r0]
   14b30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b34:	add	r0, r0, #1
   14b38:	str	r0, [fp, #-44]	; 0xffffffd4
   14b3c:	b	14b40 <__assert_fail@plt+0x3af4>
   14b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b48:	cmp	r0, r1
   14b4c:	bcs	14b64 <__assert_fail@plt+0x3b18>
   14b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b58:	add	r0, r0, r1
   14b5c:	movw	r1, #36	; 0x24
   14b60:	strb	r1, [r0]
   14b64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b68:	add	r0, r0, #1
   14b6c:	str	r0, [fp, #-44]	; 0xffffffd4
   14b70:	b	14b74 <__assert_fail@plt+0x3b28>
   14b74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b7c:	cmp	r0, r1
   14b80:	bcs	14b98 <__assert_fail@plt+0x3b4c>
   14b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b8c:	add	r0, r0, r1
   14b90:	movw	r1, #39	; 0x27
   14b94:	strb	r1, [r0]
   14b98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b9c:	add	r0, r0, #1
   14ba0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ba4:	movw	r0, #1
   14ba8:	strb	r0, [fp, #-60]	; 0xffffffc4
   14bac:	b	14bb0 <__assert_fail@plt+0x3b64>
   14bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bb8:	cmp	r0, r1
   14bbc:	bcs	14bd4 <__assert_fail@plt+0x3b88>
   14bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14bc8:	add	r0, r0, r1
   14bcc:	movw	r1, #92	; 0x5c
   14bd0:	strb	r1, [r0]
   14bd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bd8:	add	r0, r0, #1
   14bdc:	str	r0, [fp, #-44]	; 0xffffffd4
   14be0:	b	14be4 <__assert_fail@plt+0x3b98>
   14be4:	b	14be8 <__assert_fail@plt+0x3b9c>
   14be8:	b	14bec <__assert_fail@plt+0x3ba0>
   14bec:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14bf0:	tst	r0, #1
   14bf4:	beq	14c74 <__assert_fail@plt+0x3c28>
   14bf8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14bfc:	tst	r0, #1
   14c00:	bne	14c74 <__assert_fail@plt+0x3c28>
   14c04:	b	14c08 <__assert_fail@plt+0x3bbc>
   14c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c10:	cmp	r0, r1
   14c14:	bcs	14c2c <__assert_fail@plt+0x3be0>
   14c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c20:	add	r0, r0, r1
   14c24:	movw	r1, #39	; 0x27
   14c28:	strb	r1, [r0]
   14c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c30:	add	r0, r0, #1
   14c34:	str	r0, [fp, #-44]	; 0xffffffd4
   14c38:	b	14c3c <__assert_fail@plt+0x3bf0>
   14c3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c44:	cmp	r0, r1
   14c48:	bcs	14c60 <__assert_fail@plt+0x3c14>
   14c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c54:	add	r0, r0, r1
   14c58:	movw	r1, #39	; 0x27
   14c5c:	strb	r1, [r0]
   14c60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c64:	add	r0, r0, #1
   14c68:	str	r0, [fp, #-44]	; 0xffffffd4
   14c6c:	movw	r0, #0
   14c70:	strb	r0, [fp, #-60]	; 0xffffffc4
   14c74:	b	14c78 <__assert_fail@plt+0x3c2c>
   14c78:	b	14c7c <__assert_fail@plt+0x3c30>
   14c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c84:	cmp	r0, r1
   14c88:	bcs	14ca0 <__assert_fail@plt+0x3c54>
   14c8c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14c90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c94:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14c98:	add	r1, r1, r2
   14c9c:	strb	r0, [r1]
   14ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ca4:	add	r0, r0, #1
   14ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   14cac:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14cb0:	tst	r0, #1
   14cb4:	bne	14cc0 <__assert_fail@plt+0x3c74>
   14cb8:	movw	r0, #0
   14cbc:	strb	r0, [fp, #-62]	; 0xffffffc2
   14cc0:	b	14cc4 <__assert_fail@plt+0x3c78>
   14cc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14cc8:	add	r0, r0, #1
   14ccc:	str	r0, [fp, #-40]	; 0xffffffd8
   14cd0:	b	13a78 <__assert_fail@plt+0x2a2c>
   14cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cd8:	cmp	r0, #0
   14cdc:	bne	14cfc <__assert_fail@plt+0x3cb0>
   14ce0:	ldr	r0, [fp, #8]
   14ce4:	cmp	r0, #2
   14ce8:	bne	14cfc <__assert_fail@plt+0x3cb0>
   14cec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14cf0:	tst	r0, #1
   14cf4:	beq	14cfc <__assert_fail@plt+0x3cb0>
   14cf8:	b	14e54 <__assert_fail@plt+0x3e08>
   14cfc:	ldr	r0, [fp, #8]
   14d00:	cmp	r0, #2
   14d04:	bne	14da4 <__assert_fail@plt+0x3d58>
   14d08:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14d0c:	tst	r0, #1
   14d10:	bne	14da4 <__assert_fail@plt+0x3d58>
   14d14:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14d18:	tst	r0, #1
   14d1c:	beq	14da4 <__assert_fail@plt+0x3d58>
   14d20:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14d24:	tst	r0, #1
   14d28:	beq	14d70 <__assert_fail@plt+0x3d24>
   14d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d30:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14d34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d3c:	ldr	ip, [fp, #12]
   14d40:	ldr	lr, [fp, #16]
   14d44:	ldr	r4, [fp, #20]
   14d48:	ldr	r5, [fp, #24]
   14d4c:	movw	r6, #5
   14d50:	str	r6, [sp]
   14d54:	str	ip, [sp, #4]
   14d58:	str	lr, [sp, #8]
   14d5c:	str	r4, [sp, #12]
   14d60:	str	r5, [sp, #16]
   14d64:	bl	13790 <__assert_fail@plt+0x2744>
   14d68:	str	r0, [fp, #-20]	; 0xffffffec
   14d6c:	b	14ebc <__assert_fail@plt+0x3e70>
   14d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14d74:	cmp	r0, #0
   14d78:	bne	14d9c <__assert_fail@plt+0x3d50>
   14d7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14d80:	cmp	r0, #0
   14d84:	beq	14d9c <__assert_fail@plt+0x3d50>
   14d88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14d8c:	str	r0, [fp, #-28]	; 0xffffffe4
   14d90:	movw	r0, #0
   14d94:	str	r0, [fp, #-44]	; 0xffffffd4
   14d98:	b	13838 <__assert_fail@plt+0x27ec>
   14d9c:	b	14da0 <__assert_fail@plt+0x3d54>
   14da0:	b	14da4 <__assert_fail@plt+0x3d58>
   14da4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14da8:	movw	r1, #0
   14dac:	cmp	r0, r1
   14db0:	beq	14e24 <__assert_fail@plt+0x3dd8>
   14db4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14db8:	tst	r0, #1
   14dbc:	bne	14e24 <__assert_fail@plt+0x3dd8>
   14dc0:	b	14dc4 <__assert_fail@plt+0x3d78>
   14dc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14dc8:	ldrsb	r0, [r0]
   14dcc:	cmp	r0, #0
   14dd0:	beq	14e20 <__assert_fail@plt+0x3dd4>
   14dd4:	b	14dd8 <__assert_fail@plt+0x3d8c>
   14dd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14de0:	cmp	r0, r1
   14de4:	bcs	14e00 <__assert_fail@plt+0x3db4>
   14de8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14dec:	ldrb	r0, [r0]
   14df0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14df4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14df8:	add	r1, r1, r2
   14dfc:	strb	r0, [r1]
   14e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e04:	add	r0, r0, #1
   14e08:	str	r0, [fp, #-44]	; 0xffffffd4
   14e0c:	b	14e10 <__assert_fail@plt+0x3dc4>
   14e10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14e14:	add	r0, r0, #1
   14e18:	str	r0, [fp, #-52]	; 0xffffffcc
   14e1c:	b	14dc4 <__assert_fail@plt+0x3d78>
   14e20:	b	14e24 <__assert_fail@plt+0x3dd8>
   14e24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e2c:	cmp	r0, r1
   14e30:	bcs	14e48 <__assert_fail@plt+0x3dfc>
   14e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14e3c:	add	r0, r0, r1
   14e40:	movw	r1, #0
   14e44:	strb	r1, [r0]
   14e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e4c:	str	r0, [fp, #-20]	; 0xffffffec
   14e50:	b	14ebc <__assert_fail@plt+0x3e70>
   14e54:	ldr	r0, [fp, #8]
   14e58:	cmp	r0, #2
   14e5c:	bne	14e74 <__assert_fail@plt+0x3e28>
   14e60:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14e64:	tst	r0, #1
   14e68:	beq	14e74 <__assert_fail@plt+0x3e28>
   14e6c:	movw	r0, #4
   14e70:	str	r0, [fp, #8]
   14e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e84:	ldr	ip, [fp, #8]
   14e88:	ldr	lr, [fp, #12]
   14e8c:	mvn	r4, #2
   14e90:	and	lr, lr, r4
   14e94:	ldr	r4, [fp, #20]
   14e98:	ldr	r5, [fp, #24]
   14e9c:	str	ip, [sp]
   14ea0:	str	lr, [sp, #4]
   14ea4:	movw	ip, #0
   14ea8:	str	ip, [sp, #8]
   14eac:	str	r4, [sp, #12]
   14eb0:	str	r5, [sp, #16]
   14eb4:	bl	13790 <__assert_fail@plt+0x2744>
   14eb8:	str	r0, [fp, #-20]	; 0xffffffec
   14ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ec0:	sub	sp, fp, #16
   14ec4:	pop	{r4, r5, r6, sl, fp, pc}
   14ec8:	push	{fp, lr}
   14ecc:	mov	fp, sp
   14ed0:	sub	sp, sp, #16
   14ed4:	str	r0, [fp, #-4]
   14ed8:	str	r1, [sp, #8]
   14edc:	str	r2, [sp, #4]
   14ee0:	ldr	r0, [fp, #-4]
   14ee4:	ldr	r1, [sp, #8]
   14ee8:	ldr	r3, [sp, #4]
   14eec:	movw	r2, #0
   14ef0:	bl	14efc <__assert_fail@plt+0x3eb0>
   14ef4:	mov	sp, fp
   14ef8:	pop	{fp, pc}
   14efc:	push	{r4, r5, r6, sl, fp, lr}
   14f00:	add	fp, sp, #16
   14f04:	sub	sp, sp, #72	; 0x48
   14f08:	str	r0, [fp, #-20]	; 0xffffffec
   14f0c:	str	r1, [fp, #-24]	; 0xffffffe8
   14f10:	str	r2, [fp, #-28]	; 0xffffffe4
   14f14:	str	r3, [fp, #-32]	; 0xffffffe0
   14f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f1c:	movw	r1, #0
   14f20:	cmp	r0, r1
   14f24:	beq	14f34 <__assert_fail@plt+0x3ee8>
   14f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f2c:	str	r0, [sp, #32]
   14f30:	b	14f44 <__assert_fail@plt+0x3ef8>
   14f34:	movw	r0, #53672	; 0xd1a8
   14f38:	movt	r0, #2
   14f3c:	str	r0, [sp, #32]
   14f40:	b	14f44 <__assert_fail@plt+0x3ef8>
   14f44:	ldr	r0, [sp, #32]
   14f48:	str	r0, [fp, #-36]	; 0xffffffdc
   14f4c:	bl	10f80 <__errno_location@plt>
   14f50:	ldr	r0, [r0]
   14f54:	str	r0, [fp, #-40]	; 0xffffffd8
   14f58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f5c:	ldr	r0, [r0, #4]
   14f60:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14f64:	movw	r1, #0
   14f68:	cmp	lr, r1
   14f6c:	movw	lr, #0
   14f70:	movne	lr, #1
   14f74:	tst	lr, #1
   14f78:	mov	lr, r1
   14f7c:	moveq	lr, #1
   14f80:	orr	r0, r0, lr
   14f84:	str	r0, [sp, #44]	; 0x2c
   14f88:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f94:	ldr	r0, [r0]
   14f98:	ldr	lr, [sp, #44]	; 0x2c
   14f9c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14fa0:	add	ip, ip, #8
   14fa4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14fa8:	ldr	r4, [r4, #40]	; 0x28
   14fac:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14fb0:	ldr	r5, [r5, #44]	; 0x2c
   14fb4:	str	r0, [sp, #28]
   14fb8:	mov	r0, r1
   14fbc:	ldr	r6, [sp, #28]
   14fc0:	str	r6, [sp]
   14fc4:	str	lr, [sp, #4]
   14fc8:	str	ip, [sp, #8]
   14fcc:	str	r4, [sp, #12]
   14fd0:	str	r5, [sp, #16]
   14fd4:	bl	13790 <__assert_fail@plt+0x2744>
   14fd8:	add	r0, r0, #1
   14fdc:	str	r0, [sp, #40]	; 0x28
   14fe0:	ldr	r0, [sp, #40]	; 0x28
   14fe4:	bl	16420 <__assert_fail@plt+0x53d4>
   14fe8:	str	r0, [sp, #36]	; 0x24
   14fec:	ldr	r0, [sp, #36]	; 0x24
   14ff0:	ldr	r1, [sp, #40]	; 0x28
   14ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ffc:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15000:	ldr	ip, [ip]
   15004:	ldr	lr, [sp, #44]	; 0x2c
   15008:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1500c:	add	r4, r4, #8
   15010:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15014:	ldr	r5, [r5, #40]	; 0x28
   15018:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1501c:	ldr	r6, [r6, #44]	; 0x2c
   15020:	str	ip, [sp]
   15024:	str	lr, [sp, #4]
   15028:	str	r4, [sp, #8]
   1502c:	str	r5, [sp, #12]
   15030:	str	r6, [sp, #16]
   15034:	bl	13790 <__assert_fail@plt+0x2744>
   15038:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1503c:	str	r0, [sp, #24]
   15040:	str	r1, [sp, #20]
   15044:	bl	10f80 <__errno_location@plt>
   15048:	ldr	r1, [sp, #20]
   1504c:	str	r1, [r0]
   15050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15054:	movw	r2, #0
   15058:	cmp	r0, r2
   1505c:	beq	15070 <__assert_fail@plt+0x4024>
   15060:	ldr	r0, [sp, #40]	; 0x28
   15064:	sub	r0, r0, #1
   15068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1506c:	str	r0, [r1]
   15070:	ldr	r0, [sp, #36]	; 0x24
   15074:	sub	sp, fp, #16
   15078:	pop	{r4, r5, r6, sl, fp, pc}
   1507c:	push	{fp, lr}
   15080:	mov	fp, sp
   15084:	sub	sp, sp, #8
   15088:	movw	r0, #53492	; 0xd0f4
   1508c:	movt	r0, #2
   15090:	ldr	r0, [r0]
   15094:	str	r0, [sp, #4]
   15098:	movw	r0, #1
   1509c:	str	r0, [sp]
   150a0:	ldr	r0, [sp]
   150a4:	movw	r1, #53496	; 0xd0f8
   150a8:	movt	r1, #2
   150ac:	ldr	r1, [r1]
   150b0:	cmp	r0, r1
   150b4:	bge	150dc <__assert_fail@plt+0x4090>
   150b8:	ldr	r0, [sp, #4]
   150bc:	ldr	r1, [sp]
   150c0:	add	r0, r0, r1, lsl #3
   150c4:	ldr	r0, [r0, #4]
   150c8:	bl	131b4 <__assert_fail@plt+0x2168>
   150cc:	ldr	r0, [sp]
   150d0:	add	r0, r0, #1
   150d4:	str	r0, [sp]
   150d8:	b	150a0 <__assert_fail@plt+0x4054>
   150dc:	ldr	r0, [sp, #4]
   150e0:	ldr	r0, [r0, #4]
   150e4:	movw	r1, #53720	; 0xd1d8
   150e8:	movt	r1, #2
   150ec:	cmp	r0, r1
   150f0:	beq	1511c <__assert_fail@plt+0x40d0>
   150f4:	ldr	r0, [sp, #4]
   150f8:	ldr	r0, [r0, #4]
   150fc:	bl	131b4 <__assert_fail@plt+0x2168>
   15100:	movw	r0, #256	; 0x100
   15104:	movw	lr, #53500	; 0xd0fc
   15108:	movt	lr, #2
   1510c:	str	r0, [lr]
   15110:	movw	r0, #53720	; 0xd1d8
   15114:	movt	r0, #2
   15118:	str	r0, [lr, #4]
   1511c:	ldr	r0, [sp, #4]
   15120:	movw	r1, #53500	; 0xd0fc
   15124:	movt	r1, #2
   15128:	cmp	r0, r1
   1512c:	beq	1514c <__assert_fail@plt+0x4100>
   15130:	ldr	r0, [sp, #4]
   15134:	bl	131b4 <__assert_fail@plt+0x2168>
   15138:	movw	r0, #53492	; 0xd0f4
   1513c:	movt	r0, #2
   15140:	movw	lr, #53500	; 0xd0fc
   15144:	movt	lr, #2
   15148:	str	lr, [r0]
   1514c:	movw	r0, #53496	; 0xd0f8
   15150:	movt	r0, #2
   15154:	movw	r1, #1
   15158:	str	r1, [r0]
   1515c:	mov	sp, fp
   15160:	pop	{fp, pc}
   15164:	push	{fp, lr}
   15168:	mov	fp, sp
   1516c:	sub	sp, sp, #8
   15170:	str	r0, [sp, #4]
   15174:	str	r1, [sp]
   15178:	ldr	r0, [sp, #4]
   1517c:	ldr	r1, [sp]
   15180:	mvn	r2, #0
   15184:	movw	r3, #53672	; 0xd1a8
   15188:	movt	r3, #2
   1518c:	bl	15198 <__assert_fail@plt+0x414c>
   15190:	mov	sp, fp
   15194:	pop	{fp, pc}
   15198:	push	{r4, r5, r6, sl, fp, lr}
   1519c:	add	fp, sp, #16
   151a0:	sub	sp, sp, #88	; 0x58
   151a4:	str	r0, [fp, #-20]	; 0xffffffec
   151a8:	str	r1, [fp, #-24]	; 0xffffffe8
   151ac:	str	r2, [fp, #-28]	; 0xffffffe4
   151b0:	str	r3, [fp, #-32]	; 0xffffffe0
   151b4:	bl	10f80 <__errno_location@plt>
   151b8:	ldr	r1, [pc, #676]	; 15464 <__assert_fail@plt+0x4418>
   151bc:	ldr	r0, [r0]
   151c0:	str	r0, [fp, #-36]	; 0xffffffdc
   151c4:	movw	r0, #53492	; 0xd0f4
   151c8:	movt	r0, #2
   151cc:	ldr	r0, [r0]
   151d0:	str	r0, [fp, #-40]	; 0xffffffd8
   151d4:	str	r1, [fp, #-44]	; 0xffffffd4
   151d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   151dc:	movw	r1, #0
   151e0:	cmp	r1, r0
   151e4:	bgt	151f8 <__assert_fail@plt+0x41ac>
   151e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   151ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151f0:	cmp	r0, r1
   151f4:	blt	151fc <__assert_fail@plt+0x41b0>
   151f8:	bl	11028 <abort@plt>
   151fc:	movw	r0, #53496	; 0xd0f8
   15200:	movt	r0, #2
   15204:	ldr	r0, [r0]
   15208:	ldr	r1, [fp, #-20]	; 0xffffffec
   1520c:	cmp	r0, r1
   15210:	bgt	15308 <__assert_fail@plt+0x42bc>
   15214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15218:	movw	r1, #53500	; 0xd0fc
   1521c:	movt	r1, #2
   15220:	cmp	r0, r1
   15224:	movw	r0, #0
   15228:	moveq	r0, #1
   1522c:	and	r0, r0, #1
   15230:	strb	r0, [fp, #-45]	; 0xffffffd3
   15234:	movw	r0, #53496	; 0xd0f8
   15238:	movt	r0, #2
   1523c:	ldr	r0, [r0]
   15240:	str	r0, [sp, #52]	; 0x34
   15244:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15248:	tst	r0, #1
   1524c:	beq	1525c <__assert_fail@plt+0x4210>
   15250:	movw	r0, #0
   15254:	str	r0, [sp, #32]
   15258:	b	15264 <__assert_fail@plt+0x4218>
   1525c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15260:	str	r0, [sp, #32]
   15264:	ldr	r0, [sp, #32]
   15268:	ldr	r1, [fp, #-20]	; 0xffffffec
   1526c:	movw	r2, #53496	; 0xd0f8
   15270:	movt	r2, #2
   15274:	ldr	r2, [r2]
   15278:	sub	r1, r1, r2
   1527c:	add	r2, r1, #1
   15280:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15284:	add	r1, sp, #52	; 0x34
   15288:	movw	ip, #8
   1528c:	str	ip, [sp]
   15290:	bl	1665c <__assert_fail@plt+0x5610>
   15294:	str	r0, [fp, #-40]	; 0xffffffd8
   15298:	movw	r1, #53492	; 0xd0f4
   1529c:	movt	r1, #2
   152a0:	str	r0, [r1]
   152a4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   152a8:	tst	r0, #1
   152ac:	beq	152cc <__assert_fail@plt+0x4280>
   152b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   152b4:	movw	r1, #53500	; 0xd0fc
   152b8:	movt	r1, #2
   152bc:	ldr	r2, [r1]
   152c0:	str	r2, [r0]
   152c4:	ldr	r1, [r1, #4]
   152c8:	str	r1, [r0, #4]
   152cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   152d0:	movw	r1, #53496	; 0xd0f8
   152d4:	movt	r1, #2
   152d8:	ldr	r1, [r1]
   152dc:	add	r0, r0, r1, lsl #3
   152e0:	ldr	r2, [sp, #52]	; 0x34
   152e4:	sub	r1, r2, r1
   152e8:	lsl	r2, r1, #3
   152ec:	movw	r1, #0
   152f0:	and	r1, r1, #255	; 0xff
   152f4:	bl	10f98 <memset@plt>
   152f8:	ldr	r0, [sp, #52]	; 0x34
   152fc:	movw	r1, #53496	; 0xd0f8
   15300:	movt	r1, #2
   15304:	str	r0, [r1]
   15308:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1530c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15310:	ldr	r0, [r0, r1, lsl #3]
   15314:	str	r0, [sp, #48]	; 0x30
   15318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1531c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15320:	add	r0, r0, r1, lsl #3
   15324:	ldr	r0, [r0, #4]
   15328:	str	r0, [sp, #44]	; 0x2c
   1532c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15330:	ldr	r0, [r0, #4]
   15334:	orr	r0, r0, #1
   15338:	str	r0, [sp, #40]	; 0x28
   1533c:	ldr	r0, [sp, #44]	; 0x2c
   15340:	ldr	r1, [sp, #48]	; 0x30
   15344:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1534c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15350:	ldr	ip, [ip]
   15354:	ldr	lr, [sp, #40]	; 0x28
   15358:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1535c:	add	r4, r4, #8
   15360:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15364:	ldr	r5, [r5, #40]	; 0x28
   15368:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1536c:	ldr	r6, [r6, #44]	; 0x2c
   15370:	str	ip, [sp]
   15374:	str	lr, [sp, #4]
   15378:	str	r4, [sp, #8]
   1537c:	str	r5, [sp, #12]
   15380:	str	r6, [sp, #16]
   15384:	bl	13790 <__assert_fail@plt+0x2744>
   15388:	str	r0, [sp, #36]	; 0x24
   1538c:	ldr	r0, [sp, #48]	; 0x30
   15390:	ldr	r1, [sp, #36]	; 0x24
   15394:	cmp	r0, r1
   15398:	bhi	15444 <__assert_fail@plt+0x43f8>
   1539c:	ldr	r0, [sp, #36]	; 0x24
   153a0:	add	r0, r0, #1
   153a4:	str	r0, [sp, #48]	; 0x30
   153a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   153ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   153b0:	add	r1, r1, r2, lsl #3
   153b4:	str	r0, [r1]
   153b8:	ldr	r0, [sp, #44]	; 0x2c
   153bc:	movw	r1, #53720	; 0xd1d8
   153c0:	movt	r1, #2
   153c4:	cmp	r0, r1
   153c8:	beq	153d4 <__assert_fail@plt+0x4388>
   153cc:	ldr	r0, [sp, #44]	; 0x2c
   153d0:	bl	131b4 <__assert_fail@plt+0x2168>
   153d4:	ldr	r0, [sp, #48]	; 0x30
   153d8:	bl	16420 <__assert_fail@plt+0x53d4>
   153dc:	mov	lr, r0
   153e0:	str	r0, [sp, #44]	; 0x2c
   153e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   153ec:	add	r0, r0, r1, lsl #3
   153f0:	str	lr, [r0, #4]
   153f4:	ldr	r0, [sp, #44]	; 0x2c
   153f8:	ldr	r1, [sp, #48]	; 0x30
   153fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15400:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15404:	ldr	lr, [fp, #-32]	; 0xffffffe0
   15408:	ldr	lr, [lr]
   1540c:	ldr	ip, [sp, #40]	; 0x28
   15410:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15414:	add	r4, r4, #8
   15418:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1541c:	ldr	r5, [r5, #40]	; 0x28
   15420:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15424:	ldr	r6, [r6, #44]	; 0x2c
   15428:	str	lr, [sp]
   1542c:	str	ip, [sp, #4]
   15430:	str	r4, [sp, #8]
   15434:	str	r5, [sp, #12]
   15438:	str	r6, [sp, #16]
   1543c:	bl	13790 <__assert_fail@plt+0x2744>
   15440:	str	r0, [sp, #28]
   15444:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15448:	str	r0, [sp, #24]
   1544c:	bl	10f80 <__errno_location@plt>
   15450:	ldr	lr, [sp, #24]
   15454:	str	lr, [r0]
   15458:	ldr	r0, [sp, #44]	; 0x2c
   1545c:	sub	sp, fp, #16
   15460:	pop	{r4, r5, r6, sl, fp, pc}
   15464:	svcvc	0x00ffffff
   15468:	push	{fp, lr}
   1546c:	mov	fp, sp
   15470:	sub	sp, sp, #16
   15474:	str	r0, [fp, #-4]
   15478:	str	r1, [sp, #8]
   1547c:	str	r2, [sp, #4]
   15480:	ldr	r0, [fp, #-4]
   15484:	ldr	r1, [sp, #8]
   15488:	ldr	r2, [sp, #4]
   1548c:	movw	r3, #53672	; 0xd1a8
   15490:	movt	r3, #2
   15494:	bl	15198 <__assert_fail@plt+0x414c>
   15498:	mov	sp, fp
   1549c:	pop	{fp, pc}
   154a0:	push	{fp, lr}
   154a4:	mov	fp, sp
   154a8:	sub	sp, sp, #8
   154ac:	str	r0, [sp, #4]
   154b0:	ldr	r1, [sp, #4]
   154b4:	movw	r0, #0
   154b8:	bl	15164 <__assert_fail@plt+0x4118>
   154bc:	mov	sp, fp
   154c0:	pop	{fp, pc}
   154c4:	push	{fp, lr}
   154c8:	mov	fp, sp
   154cc:	sub	sp, sp, #8
   154d0:	str	r0, [sp, #4]
   154d4:	str	r1, [sp]
   154d8:	ldr	r1, [sp, #4]
   154dc:	ldr	r2, [sp]
   154e0:	movw	r0, #0
   154e4:	bl	15468 <__assert_fail@plt+0x441c>
   154e8:	mov	sp, fp
   154ec:	pop	{fp, pc}
   154f0:	push	{fp, lr}
   154f4:	mov	fp, sp
   154f8:	sub	sp, sp, #64	; 0x40
   154fc:	str	r0, [fp, #-4]
   15500:	str	r1, [fp, #-8]
   15504:	str	r2, [fp, #-12]
   15508:	ldr	r1, [fp, #-8]
   1550c:	add	r0, sp, #4
   15510:	bl	15530 <__assert_fail@plt+0x44e4>
   15514:	ldr	r0, [fp, #-4]
   15518:	ldr	r1, [fp, #-12]
   1551c:	mvn	r2, #0
   15520:	add	r3, sp, #4
   15524:	bl	15198 <__assert_fail@plt+0x414c>
   15528:	mov	sp, fp
   1552c:	pop	{fp, pc}
   15530:	push	{fp, lr}
   15534:	mov	fp, sp
   15538:	sub	sp, sp, #8
   1553c:	str	r1, [sp, #4]
   15540:	mov	r1, r0
   15544:	str	r0, [sp]
   15548:	mov	r0, r1
   1554c:	movw	r1, #0
   15550:	and	r1, r1, #255	; 0xff
   15554:	movw	r2, #48	; 0x30
   15558:	bl	10f98 <memset@plt>
   1555c:	ldr	r0, [sp, #4]
   15560:	cmp	r0, #10
   15564:	bne	1556c <__assert_fail@plt+0x4520>
   15568:	bl	11028 <abort@plt>
   1556c:	ldr	r0, [sp, #4]
   15570:	ldr	r1, [sp]
   15574:	str	r0, [r1]
   15578:	mov	sp, fp
   1557c:	pop	{fp, pc}
   15580:	push	{fp, lr}
   15584:	mov	fp, sp
   15588:	sub	sp, sp, #64	; 0x40
   1558c:	str	r0, [fp, #-4]
   15590:	str	r1, [fp, #-8]
   15594:	str	r2, [fp, #-12]
   15598:	str	r3, [fp, #-16]
   1559c:	ldr	r1, [fp, #-8]
   155a0:	mov	r0, sp
   155a4:	bl	15530 <__assert_fail@plt+0x44e4>
   155a8:	ldr	r0, [fp, #-4]
   155ac:	ldr	r1, [fp, #-12]
   155b0:	ldr	r2, [fp, #-16]
   155b4:	mov	r3, sp
   155b8:	bl	15198 <__assert_fail@plt+0x414c>
   155bc:	mov	sp, fp
   155c0:	pop	{fp, pc}
   155c4:	push	{fp, lr}
   155c8:	mov	fp, sp
   155cc:	sub	sp, sp, #8
   155d0:	str	r0, [sp, #4]
   155d4:	str	r1, [sp]
   155d8:	ldr	r1, [sp, #4]
   155dc:	ldr	r2, [sp]
   155e0:	movw	r0, #0
   155e4:	bl	154f0 <__assert_fail@plt+0x44a4>
   155e8:	mov	sp, fp
   155ec:	pop	{fp, pc}
   155f0:	push	{fp, lr}
   155f4:	mov	fp, sp
   155f8:	sub	sp, sp, #16
   155fc:	str	r0, [fp, #-4]
   15600:	str	r1, [sp, #8]
   15604:	str	r2, [sp, #4]
   15608:	ldr	r1, [fp, #-4]
   1560c:	ldr	r2, [sp, #8]
   15610:	ldr	r3, [sp, #4]
   15614:	movw	r0, #0
   15618:	bl	15580 <__assert_fail@plt+0x4534>
   1561c:	mov	sp, fp
   15620:	pop	{fp, pc}
   15624:	push	{fp, lr}
   15628:	mov	fp, sp
   1562c:	sub	sp, sp, #72	; 0x48
   15630:	movw	r3, #53672	; 0xd1a8
   15634:	movt	r3, #2
   15638:	str	r0, [fp, #-4]
   1563c:	str	r1, [fp, #-8]
   15640:	strb	r2, [fp, #-9]
   15644:	add	r0, sp, #12
   15648:	mov	r1, r0
   1564c:	str	r0, [sp, #8]
   15650:	mov	r0, r1
   15654:	mov	r1, r3
   15658:	movw	r2, #48	; 0x30
   1565c:	bl	10e60 <memcpy@plt>
   15660:	ldr	r0, [sp, #8]
   15664:	ldrb	r1, [fp, #-9]
   15668:	movw	r2, #1
   1566c:	bl	13534 <__assert_fail@plt+0x24e8>
   15670:	ldr	r1, [fp, #-4]
   15674:	ldr	r2, [fp, #-8]
   15678:	movw	r3, #0
   1567c:	str	r0, [sp, #4]
   15680:	mov	r0, r3
   15684:	add	r3, sp, #12
   15688:	bl	15198 <__assert_fail@plt+0x414c>
   1568c:	mov	sp, fp
   15690:	pop	{fp, pc}
   15694:	push	{fp, lr}
   15698:	mov	fp, sp
   1569c:	sub	sp, sp, #8
   156a0:	str	r0, [sp, #4]
   156a4:	strb	r1, [sp, #3]
   156a8:	ldr	r0, [sp, #4]
   156ac:	mvn	r1, #0
   156b0:	ldrb	r2, [sp, #3]
   156b4:	bl	15624 <__assert_fail@plt+0x45d8>
   156b8:	mov	sp, fp
   156bc:	pop	{fp, pc}
   156c0:	push	{fp, lr}
   156c4:	mov	fp, sp
   156c8:	sub	sp, sp, #8
   156cc:	str	r0, [sp, #4]
   156d0:	ldr	r0, [sp, #4]
   156d4:	movw	r1, #58	; 0x3a
   156d8:	and	r1, r1, #255	; 0xff
   156dc:	bl	15694 <__assert_fail@plt+0x4648>
   156e0:	mov	sp, fp
   156e4:	pop	{fp, pc}
   156e8:	push	{fp, lr}
   156ec:	mov	fp, sp
   156f0:	sub	sp, sp, #8
   156f4:	str	r0, [sp, #4]
   156f8:	str	r1, [sp]
   156fc:	ldr	r0, [sp, #4]
   15700:	ldr	r1, [sp]
   15704:	movw	r2, #58	; 0x3a
   15708:	and	r2, r2, #255	; 0xff
   1570c:	bl	15624 <__assert_fail@plt+0x45d8>
   15710:	mov	sp, fp
   15714:	pop	{fp, pc}
   15718:	push	{fp, lr}
   1571c:	mov	fp, sp
   15720:	sub	sp, sp, #120	; 0x78
   15724:	str	r0, [fp, #-4]
   15728:	str	r1, [fp, #-8]
   1572c:	str	r2, [fp, #-12]
   15730:	ldr	r1, [fp, #-8]
   15734:	add	r0, sp, #12
   15738:	bl	15530 <__assert_fail@plt+0x44e4>
   1573c:	add	r0, sp, #60	; 0x3c
   15740:	mov	r1, r0
   15744:	add	r2, sp, #12
   15748:	str	r0, [sp, #8]
   1574c:	mov	r0, r1
   15750:	mov	r1, r2
   15754:	movw	r2, #48	; 0x30
   15758:	bl	10e60 <memcpy@plt>
   1575c:	ldr	r0, [sp, #8]
   15760:	movw	r1, #58	; 0x3a
   15764:	and	r1, r1, #255	; 0xff
   15768:	movw	r2, #1
   1576c:	bl	13534 <__assert_fail@plt+0x24e8>
   15770:	ldr	r1, [fp, #-4]
   15774:	ldr	r2, [fp, #-12]
   15778:	str	r0, [sp, #4]
   1577c:	mov	r0, r1
   15780:	mov	r1, r2
   15784:	mvn	r2, #0
   15788:	add	r3, sp, #60	; 0x3c
   1578c:	bl	15198 <__assert_fail@plt+0x414c>
   15790:	mov	sp, fp
   15794:	pop	{fp, pc}
   15798:	push	{fp, lr}
   1579c:	mov	fp, sp
   157a0:	sub	sp, sp, #24
   157a4:	str	r0, [fp, #-4]
   157a8:	str	r1, [fp, #-8]
   157ac:	str	r2, [sp, #12]
   157b0:	str	r3, [sp, #8]
   157b4:	ldr	r0, [fp, #-4]
   157b8:	ldr	r1, [fp, #-8]
   157bc:	ldr	r2, [sp, #12]
   157c0:	ldr	r3, [sp, #8]
   157c4:	mvn	ip, #0
   157c8:	str	ip, [sp]
   157cc:	bl	157d8 <__assert_fail@plt+0x478c>
   157d0:	mov	sp, fp
   157d4:	pop	{fp, pc}
   157d8:	push	{fp, lr}
   157dc:	mov	fp, sp
   157e0:	sub	sp, sp, #72	; 0x48
   157e4:	ldr	ip, [fp, #8]
   157e8:	movw	lr, #53672	; 0xd1a8
   157ec:	movt	lr, #2
   157f0:	str	r0, [fp, #-4]
   157f4:	str	r1, [fp, #-8]
   157f8:	str	r2, [fp, #-12]
   157fc:	str	r3, [fp, #-16]
   15800:	add	r0, sp, #8
   15804:	mov	r1, r0
   15808:	str	r0, [sp, #4]
   1580c:	mov	r0, r1
   15810:	mov	r1, lr
   15814:	movw	r2, #48	; 0x30
   15818:	str	ip, [sp]
   1581c:	bl	10e60 <memcpy@plt>
   15820:	ldr	r1, [fp, #-8]
   15824:	ldr	r2, [fp, #-12]
   15828:	ldr	r0, [sp, #4]
   1582c:	bl	13634 <__assert_fail@plt+0x25e8>
   15830:	ldr	r0, [fp, #-4]
   15834:	ldr	r1, [fp, #-16]
   15838:	ldr	r2, [fp, #8]
   1583c:	add	r3, sp, #8
   15840:	bl	15198 <__assert_fail@plt+0x414c>
   15844:	mov	sp, fp
   15848:	pop	{fp, pc}
   1584c:	push	{fp, lr}
   15850:	mov	fp, sp
   15854:	sub	sp, sp, #16
   15858:	str	r0, [fp, #-4]
   1585c:	str	r1, [sp, #8]
   15860:	str	r2, [sp, #4]
   15864:	ldr	r1, [fp, #-4]
   15868:	ldr	r2, [sp, #8]
   1586c:	ldr	r3, [sp, #4]
   15870:	movw	r0, #0
   15874:	bl	15798 <__assert_fail@plt+0x474c>
   15878:	mov	sp, fp
   1587c:	pop	{fp, pc}
   15880:	push	{fp, lr}
   15884:	mov	fp, sp
   15888:	sub	sp, sp, #24
   1588c:	str	r0, [fp, #-4]
   15890:	str	r1, [fp, #-8]
   15894:	str	r2, [sp, #12]
   15898:	str	r3, [sp, #8]
   1589c:	ldr	r1, [fp, #-4]
   158a0:	ldr	r2, [fp, #-8]
   158a4:	ldr	r3, [sp, #12]
   158a8:	ldr	r0, [sp, #8]
   158ac:	movw	ip, #0
   158b0:	str	r0, [sp, #4]
   158b4:	mov	r0, ip
   158b8:	ldr	ip, [sp, #4]
   158bc:	str	ip, [sp]
   158c0:	bl	157d8 <__assert_fail@plt+0x478c>
   158c4:	mov	sp, fp
   158c8:	pop	{fp, pc}
   158cc:	push	{fp, lr}
   158d0:	mov	fp, sp
   158d4:	sub	sp, sp, #16
   158d8:	str	r0, [fp, #-4]
   158dc:	str	r1, [sp, #8]
   158e0:	str	r2, [sp, #4]
   158e4:	ldr	r0, [fp, #-4]
   158e8:	ldr	r1, [sp, #8]
   158ec:	ldr	r2, [sp, #4]
   158f0:	movw	r3, #53508	; 0xd104
   158f4:	movt	r3, #2
   158f8:	bl	15198 <__assert_fail@plt+0x414c>
   158fc:	mov	sp, fp
   15900:	pop	{fp, pc}
   15904:	push	{fp, lr}
   15908:	mov	fp, sp
   1590c:	sub	sp, sp, #8
   15910:	str	r0, [sp, #4]
   15914:	str	r1, [sp]
   15918:	ldr	r1, [sp, #4]
   1591c:	ldr	r2, [sp]
   15920:	movw	r0, #0
   15924:	bl	158cc <__assert_fail@plt+0x4880>
   15928:	mov	sp, fp
   1592c:	pop	{fp, pc}
   15930:	push	{fp, lr}
   15934:	mov	fp, sp
   15938:	sub	sp, sp, #8
   1593c:	str	r0, [sp, #4]
   15940:	str	r1, [sp]
   15944:	ldr	r0, [sp, #4]
   15948:	ldr	r1, [sp]
   1594c:	mvn	r2, #0
   15950:	bl	158cc <__assert_fail@plt+0x4880>
   15954:	mov	sp, fp
   15958:	pop	{fp, pc}
   1595c:	push	{fp, lr}
   15960:	mov	fp, sp
   15964:	sub	sp, sp, #8
   15968:	str	r0, [sp, #4]
   1596c:	ldr	r1, [sp, #4]
   15970:	movw	r0, #0
   15974:	bl	15930 <__assert_fail@plt+0x48e4>
   15978:	mov	sp, fp
   1597c:	pop	{fp, pc}
   15980:	push	{fp, lr}
   15984:	mov	fp, sp
   15988:	sub	sp, sp, #24
   1598c:	str	r0, [fp, #-8]
   15990:	str	r1, [sp, #12]
   15994:	ldr	r0, [fp, #-8]
   15998:	bl	10f5c <gettext@plt>
   1599c:	str	r0, [sp, #8]
   159a0:	ldr	r0, [sp, #8]
   159a4:	ldr	r1, [fp, #-8]
   159a8:	cmp	r0, r1
   159ac:	beq	159bc <__assert_fail@plt+0x4970>
   159b0:	ldr	r0, [sp, #8]
   159b4:	str	r0, [fp, #-4]
   159b8:	b	15a88 <__assert_fail@plt+0x4a3c>
   159bc:	bl	196e0 <__assert_fail@plt+0x8694>
   159c0:	str	r0, [sp, #4]
   159c4:	ldr	r0, [sp, #4]
   159c8:	movw	r1, #48976	; 0xbf50
   159cc:	movt	r1, #1
   159d0:	bl	19384 <__assert_fail@plt+0x8338>
   159d4:	cmp	r0, #0
   159d8:	bne	15a10 <__assert_fail@plt+0x49c4>
   159dc:	ldr	r0, [fp, #-8]
   159e0:	ldrb	r0, [r0]
   159e4:	cmp	r0, #96	; 0x60
   159e8:	movw	r0, #0
   159ec:	moveq	r0, #1
   159f0:	tst	r0, #1
   159f4:	movw	r0, #48986	; 0xbf5a
   159f8:	movt	r0, #1
   159fc:	movw	r1, #48982	; 0xbf56
   15a00:	movt	r1, #1
   15a04:	movne	r0, r1
   15a08:	str	r0, [fp, #-4]
   15a0c:	b	15a88 <__assert_fail@plt+0x4a3c>
   15a10:	ldr	r0, [sp, #4]
   15a14:	movw	r1, #48990	; 0xbf5e
   15a18:	movt	r1, #1
   15a1c:	bl	19384 <__assert_fail@plt+0x8338>
   15a20:	cmp	r0, #0
   15a24:	bne	15a5c <__assert_fail@plt+0x4a10>
   15a28:	ldr	r0, [fp, #-8]
   15a2c:	ldrb	r0, [r0]
   15a30:	cmp	r0, #96	; 0x60
   15a34:	movw	r0, #0
   15a38:	moveq	r0, #1
   15a3c:	tst	r0, #1
   15a40:	movw	r0, #49002	; 0xbf6a
   15a44:	movt	r0, #1
   15a48:	movw	r1, #48998	; 0xbf66
   15a4c:	movt	r1, #1
   15a50:	movne	r0, r1
   15a54:	str	r0, [fp, #-4]
   15a58:	b	15a88 <__assert_fail@plt+0x4a3c>
   15a5c:	ldr	r0, [sp, #12]
   15a60:	cmp	r0, #9
   15a64:	movw	r0, #0
   15a68:	moveq	r0, #1
   15a6c:	tst	r0, #1
   15a70:	movw	r0, #48804	; 0xbea4
   15a74:	movt	r0, #1
   15a78:	movw	r1, #48972	; 0xbf4c
   15a7c:	movt	r1, #1
   15a80:	movne	r0, r1
   15a84:	str	r0, [fp, #-4]
   15a88:	ldr	r0, [fp, #-4]
   15a8c:	mov	sp, fp
   15a90:	pop	{fp, pc}
   15a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a98:	add	fp, sp, #28
   15a9c:	sub	sp, sp, #260	; 0x104
   15aa0:	ldr	ip, [fp, #12]
   15aa4:	ldr	lr, [fp, #8]
   15aa8:	str	r0, [fp, #-32]	; 0xffffffe0
   15aac:	str	r1, [fp, #-36]	; 0xffffffdc
   15ab0:	str	r2, [fp, #-40]	; 0xffffffd8
   15ab4:	str	r3, [fp, #-44]	; 0xffffffd4
   15ab8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15abc:	movw	r1, #0
   15ac0:	cmp	r0, r1
   15ac4:	str	lr, [fp, #-48]	; 0xffffffd0
   15ac8:	str	ip, [fp, #-52]	; 0xffffffcc
   15acc:	beq	15b04 <__assert_fail@plt+0x4ab8>
   15ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ad4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15adc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ae0:	movw	ip, #49092	; 0xbfc4
   15ae4:	movt	ip, #1
   15ae8:	str	r1, [fp, #-56]	; 0xffffffc8
   15aec:	mov	r1, ip
   15af0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15af4:	str	ip, [sp]
   15af8:	bl	10f74 <fprintf@plt>
   15afc:	str	r0, [fp, #-60]	; 0xffffffc4
   15b00:	b	15b20 <__assert_fail@plt+0x4ad4>
   15b04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b10:	movw	r1, #49104	; 0xbfd0
   15b14:	movt	r1, #1
   15b18:	bl	10f74 <fprintf@plt>
   15b1c:	str	r0, [fp, #-64]	; 0xffffffc0
   15b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b24:	movw	r1, #49111	; 0xbfd7
   15b28:	movt	r1, #1
   15b2c:	str	r0, [fp, #-68]	; 0xffffffbc
   15b30:	mov	r0, r1
   15b34:	bl	10f5c <gettext@plt>
   15b38:	movw	r1, #49829	; 0xc2a5
   15b3c:	movt	r1, #1
   15b40:	movw	r3, #2022	; 0x7e6
   15b44:	ldr	lr, [fp, #-68]	; 0xffffffbc
   15b48:	str	r0, [fp, #-72]	; 0xffffffb8
   15b4c:	mov	r0, lr
   15b50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15b54:	bl	10f74 <fprintf@plt>
   15b58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b5c:	movw	r2, #47728	; 0xba70
   15b60:	movt	r2, #1
   15b64:	str	r0, [fp, #-76]	; 0xffffffb4
   15b68:	mov	r0, r2
   15b6c:	str	r2, [fp, #-80]	; 0xffffffb0
   15b70:	bl	10e00 <fputs_unlocked@plt>
   15b74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b78:	movw	r2, #49115	; 0xbfdb
   15b7c:	movt	r2, #1
   15b80:	str	r0, [fp, #-84]	; 0xffffffac
   15b84:	mov	r0, r2
   15b88:	str	r1, [fp, #-88]	; 0xffffffa8
   15b8c:	bl	10f5c <gettext@plt>
   15b90:	movw	r2, #49286	; 0xc086
   15b94:	movt	r2, #1
   15b98:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15b9c:	str	r0, [fp, #-92]	; 0xffffffa4
   15ba0:	mov	r0, r1
   15ba4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15ba8:	bl	10f74 <fprintf@plt>
   15bac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15bb0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15bb4:	str	r0, [fp, #-96]	; 0xffffffa0
   15bb8:	mov	r0, r2
   15bbc:	bl	10e00 <fputs_unlocked@plt>
   15bc0:	ldr	r1, [fp, #12]
   15bc4:	cmp	r1, #9
   15bc8:	str	r0, [fp, #-100]	; 0xffffff9c
   15bcc:	str	r1, [fp, #-104]	; 0xffffff98
   15bd0:	bhi	16010 <__assert_fail@plt+0x4fc4>
   15bd4:	add	r0, pc, #8
   15bd8:	ldr	r1, [fp, #-104]	; 0xffffff98
   15bdc:	ldr	r0, [r0, r1, lsl #2]
   15be0:	mov	pc, r0
   15be4:	andeq	r5, r1, ip, lsl #24
   15be8:	andeq	r5, r1, r0, lsl ip
   15bec:	andeq	r5, r1, ip, asr #24
   15bf0:	muleq	r1, r0, ip
   15bf4:	andeq	r5, r1, ip, ror #25
   15bf8:	andeq	r5, r1, r4, asr sp
   15bfc:	andeq	r5, r1, r8, asr #27
   15c00:	andeq	r5, r1, r8, asr #28
   15c04:	ldrdeq	r5, [r1], -r4
   15c08:	andeq	r5, r1, ip, ror #30
   15c0c:	b	160b0 <__assert_fail@plt+0x5064>
   15c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c14:	movw	r1, #49320	; 0xc0a8
   15c18:	movt	r1, #1
   15c1c:	str	r0, [fp, #-108]	; 0xffffff94
   15c20:	mov	r0, r1
   15c24:	bl	10f5c <gettext@plt>
   15c28:	ldr	r1, [fp, #8]
   15c2c:	ldr	r2, [r1]
   15c30:	ldr	r1, [fp, #-108]	; 0xffffff94
   15c34:	str	r0, [fp, #-112]	; 0xffffff90
   15c38:	mov	r0, r1
   15c3c:	ldr	r1, [fp, #-112]	; 0xffffff90
   15c40:	bl	10f74 <fprintf@plt>
   15c44:	str	r0, [fp, #-116]	; 0xffffff8c
   15c48:	b	160b0 <__assert_fail@plt+0x5064>
   15c4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c50:	movw	r1, #49336	; 0xc0b8
   15c54:	movt	r1, #1
   15c58:	str	r0, [fp, #-120]	; 0xffffff88
   15c5c:	mov	r0, r1
   15c60:	bl	10f5c <gettext@plt>
   15c64:	ldr	r1, [fp, #8]
   15c68:	ldr	r2, [r1]
   15c6c:	ldr	r1, [fp, #8]
   15c70:	ldr	r3, [r1, #4]
   15c74:	ldr	r1, [fp, #-120]	; 0xffffff88
   15c78:	str	r0, [fp, #-124]	; 0xffffff84
   15c7c:	mov	r0, r1
   15c80:	ldr	r1, [fp, #-124]	; 0xffffff84
   15c84:	bl	10f74 <fprintf@plt>
   15c88:	str	r0, [fp, #-128]	; 0xffffff80
   15c8c:	b	160b0 <__assert_fail@plt+0x5064>
   15c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c94:	movw	r1, #49359	; 0xc0cf
   15c98:	movt	r1, #1
   15c9c:	str	r0, [fp, #-132]	; 0xffffff7c
   15ca0:	mov	r0, r1
   15ca4:	bl	10f5c <gettext@plt>
   15ca8:	ldr	r1, [fp, #8]
   15cac:	ldr	r2, [r1]
   15cb0:	ldr	r1, [fp, #8]
   15cb4:	ldr	r3, [r1, #4]
   15cb8:	ldr	r1, [fp, #8]
   15cbc:	ldr	r1, [r1, #8]
   15cc0:	ldr	lr, [fp, #-132]	; 0xffffff7c
   15cc4:	str	r0, [fp, #-136]	; 0xffffff78
   15cc8:	mov	r0, lr
   15ccc:	ldr	ip, [fp, #-136]	; 0xffffff78
   15cd0:	str	r1, [fp, #-140]	; 0xffffff74
   15cd4:	mov	r1, ip
   15cd8:	ldr	r4, [fp, #-140]	; 0xffffff74
   15cdc:	str	r4, [sp]
   15ce0:	bl	10f74 <fprintf@plt>
   15ce4:	str	r0, [sp, #144]	; 0x90
   15ce8:	b	160b0 <__assert_fail@plt+0x5064>
   15cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cf0:	movw	r1, #49387	; 0xc0eb
   15cf4:	movt	r1, #1
   15cf8:	str	r0, [sp, #140]	; 0x8c
   15cfc:	mov	r0, r1
   15d00:	bl	10f5c <gettext@plt>
   15d04:	ldr	r1, [fp, #8]
   15d08:	ldr	r2, [r1]
   15d0c:	ldr	r1, [fp, #8]
   15d10:	ldr	r3, [r1, #4]
   15d14:	ldr	r1, [fp, #8]
   15d18:	ldr	r1, [r1, #8]
   15d1c:	ldr	lr, [fp, #8]
   15d20:	ldr	lr, [lr, #12]
   15d24:	ldr	ip, [sp, #140]	; 0x8c
   15d28:	str	r0, [sp, #136]	; 0x88
   15d2c:	mov	r0, ip
   15d30:	ldr	r4, [sp, #136]	; 0x88
   15d34:	str	r1, [sp, #132]	; 0x84
   15d38:	mov	r1, r4
   15d3c:	ldr	r5, [sp, #132]	; 0x84
   15d40:	str	r5, [sp]
   15d44:	str	lr, [sp, #4]
   15d48:	bl	10f74 <fprintf@plt>
   15d4c:	str	r0, [sp, #128]	; 0x80
   15d50:	b	160b0 <__assert_fail@plt+0x5064>
   15d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d58:	movw	r1, #49419	; 0xc10b
   15d5c:	movt	r1, #1
   15d60:	str	r0, [sp, #124]	; 0x7c
   15d64:	mov	r0, r1
   15d68:	bl	10f5c <gettext@plt>
   15d6c:	ldr	r1, [fp, #8]
   15d70:	ldr	r2, [r1]
   15d74:	ldr	r1, [fp, #8]
   15d78:	ldr	r3, [r1, #4]
   15d7c:	ldr	r1, [fp, #8]
   15d80:	ldr	r1, [r1, #8]
   15d84:	ldr	lr, [fp, #8]
   15d88:	ldr	lr, [lr, #12]
   15d8c:	ldr	ip, [fp, #8]
   15d90:	ldr	ip, [ip, #16]
   15d94:	ldr	r4, [sp, #124]	; 0x7c
   15d98:	str	r0, [sp, #120]	; 0x78
   15d9c:	mov	r0, r4
   15da0:	ldr	r5, [sp, #120]	; 0x78
   15da4:	str	r1, [sp, #116]	; 0x74
   15da8:	mov	r1, r5
   15dac:	ldr	r6, [sp, #116]	; 0x74
   15db0:	str	r6, [sp]
   15db4:	str	lr, [sp, #4]
   15db8:	str	ip, [sp, #8]
   15dbc:	bl	10f74 <fprintf@plt>
   15dc0:	str	r0, [sp, #112]	; 0x70
   15dc4:	b	160b0 <__assert_fail@plt+0x5064>
   15dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15dcc:	movw	r1, #49455	; 0xc12f
   15dd0:	movt	r1, #1
   15dd4:	str	r0, [sp, #108]	; 0x6c
   15dd8:	mov	r0, r1
   15ddc:	bl	10f5c <gettext@plt>
   15de0:	ldr	r1, [fp, #8]
   15de4:	ldr	r2, [r1]
   15de8:	ldr	r1, [fp, #8]
   15dec:	ldr	r3, [r1, #4]
   15df0:	ldr	r1, [fp, #8]
   15df4:	ldr	r1, [r1, #8]
   15df8:	ldr	lr, [fp, #8]
   15dfc:	ldr	lr, [lr, #12]
   15e00:	ldr	ip, [fp, #8]
   15e04:	ldr	ip, [ip, #16]
   15e08:	ldr	r4, [fp, #8]
   15e0c:	ldr	r4, [r4, #20]
   15e10:	ldr	r5, [sp, #108]	; 0x6c
   15e14:	str	r0, [sp, #104]	; 0x68
   15e18:	mov	r0, r5
   15e1c:	ldr	r6, [sp, #104]	; 0x68
   15e20:	str	r1, [sp, #100]	; 0x64
   15e24:	mov	r1, r6
   15e28:	ldr	r7, [sp, #100]	; 0x64
   15e2c:	str	r7, [sp]
   15e30:	str	lr, [sp, #4]
   15e34:	str	ip, [sp, #8]
   15e38:	str	r4, [sp, #12]
   15e3c:	bl	10f74 <fprintf@plt>
   15e40:	str	r0, [sp, #96]	; 0x60
   15e44:	b	160b0 <__assert_fail@plt+0x5064>
   15e48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e4c:	movw	r1, #49495	; 0xc157
   15e50:	movt	r1, #1
   15e54:	str	r0, [sp, #92]	; 0x5c
   15e58:	mov	r0, r1
   15e5c:	bl	10f5c <gettext@plt>
   15e60:	ldr	r1, [fp, #8]
   15e64:	ldr	r2, [r1]
   15e68:	ldr	r1, [fp, #8]
   15e6c:	ldr	r3, [r1, #4]
   15e70:	ldr	r1, [fp, #8]
   15e74:	ldr	r1, [r1, #8]
   15e78:	ldr	lr, [fp, #8]
   15e7c:	ldr	lr, [lr, #12]
   15e80:	ldr	ip, [fp, #8]
   15e84:	ldr	ip, [ip, #16]
   15e88:	ldr	r4, [fp, #8]
   15e8c:	ldr	r4, [r4, #20]
   15e90:	ldr	r5, [fp, #8]
   15e94:	ldr	r5, [r5, #24]
   15e98:	ldr	r6, [sp, #92]	; 0x5c
   15e9c:	str	r0, [sp, #88]	; 0x58
   15ea0:	mov	r0, r6
   15ea4:	ldr	r7, [sp, #88]	; 0x58
   15ea8:	str	r1, [sp, #84]	; 0x54
   15eac:	mov	r1, r7
   15eb0:	ldr	r8, [sp, #84]	; 0x54
   15eb4:	str	r8, [sp]
   15eb8:	str	lr, [sp, #4]
   15ebc:	str	ip, [sp, #8]
   15ec0:	str	r4, [sp, #12]
   15ec4:	str	r5, [sp, #16]
   15ec8:	bl	10f74 <fprintf@plt>
   15ecc:	str	r0, [sp, #80]	; 0x50
   15ed0:	b	160b0 <__assert_fail@plt+0x5064>
   15ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ed8:	movw	r1, #49539	; 0xc183
   15edc:	movt	r1, #1
   15ee0:	str	r0, [sp, #76]	; 0x4c
   15ee4:	mov	r0, r1
   15ee8:	bl	10f5c <gettext@plt>
   15eec:	ldr	r1, [fp, #8]
   15ef0:	ldr	r2, [r1]
   15ef4:	ldr	r1, [fp, #8]
   15ef8:	ldr	r3, [r1, #4]
   15efc:	ldr	r1, [fp, #8]
   15f00:	ldr	r1, [r1, #8]
   15f04:	ldr	lr, [fp, #8]
   15f08:	ldr	lr, [lr, #12]
   15f0c:	ldr	ip, [fp, #8]
   15f10:	ldr	ip, [ip, #16]
   15f14:	ldr	r4, [fp, #8]
   15f18:	ldr	r4, [r4, #20]
   15f1c:	ldr	r5, [fp, #8]
   15f20:	ldr	r5, [r5, #24]
   15f24:	ldr	r6, [fp, #8]
   15f28:	ldr	r6, [r6, #28]
   15f2c:	ldr	r7, [sp, #76]	; 0x4c
   15f30:	str	r0, [sp, #72]	; 0x48
   15f34:	mov	r0, r7
   15f38:	ldr	r8, [sp, #72]	; 0x48
   15f3c:	str	r1, [sp, #68]	; 0x44
   15f40:	mov	r1, r8
   15f44:	ldr	r9, [sp, #68]	; 0x44
   15f48:	str	r9, [sp]
   15f4c:	str	lr, [sp, #4]
   15f50:	str	ip, [sp, #8]
   15f54:	str	r4, [sp, #12]
   15f58:	str	r5, [sp, #16]
   15f5c:	str	r6, [sp, #20]
   15f60:	bl	10f74 <fprintf@plt>
   15f64:	str	r0, [sp, #64]	; 0x40
   15f68:	b	160b0 <__assert_fail@plt+0x5064>
   15f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f70:	movw	r1, #49587	; 0xc1b3
   15f74:	movt	r1, #1
   15f78:	str	r0, [sp, #60]	; 0x3c
   15f7c:	mov	r0, r1
   15f80:	bl	10f5c <gettext@plt>
   15f84:	ldr	r1, [fp, #8]
   15f88:	ldr	r2, [r1]
   15f8c:	ldr	r1, [fp, #8]
   15f90:	ldr	r3, [r1, #4]
   15f94:	ldr	r1, [fp, #8]
   15f98:	ldr	r1, [r1, #8]
   15f9c:	ldr	lr, [fp, #8]
   15fa0:	ldr	lr, [lr, #12]
   15fa4:	ldr	ip, [fp, #8]
   15fa8:	ldr	ip, [ip, #16]
   15fac:	ldr	r4, [fp, #8]
   15fb0:	ldr	r4, [r4, #20]
   15fb4:	ldr	r5, [fp, #8]
   15fb8:	ldr	r5, [r5, #24]
   15fbc:	ldr	r6, [fp, #8]
   15fc0:	ldr	r6, [r6, #28]
   15fc4:	ldr	r7, [fp, #8]
   15fc8:	ldr	r7, [r7, #32]
   15fcc:	ldr	r8, [sp, #60]	; 0x3c
   15fd0:	str	r0, [sp, #56]	; 0x38
   15fd4:	mov	r0, r8
   15fd8:	ldr	r9, [sp, #56]	; 0x38
   15fdc:	str	r1, [sp, #52]	; 0x34
   15fe0:	mov	r1, r9
   15fe4:	ldr	sl, [sp, #52]	; 0x34
   15fe8:	str	sl, [sp]
   15fec:	str	lr, [sp, #4]
   15ff0:	str	ip, [sp, #8]
   15ff4:	str	r4, [sp, #12]
   15ff8:	str	r5, [sp, #16]
   15ffc:	str	r6, [sp, #20]
   16000:	str	r7, [sp, #24]
   16004:	bl	10f74 <fprintf@plt>
   16008:	str	r0, [sp, #48]	; 0x30
   1600c:	b	160b0 <__assert_fail@plt+0x5064>
   16010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16014:	movw	r1, #49639	; 0xc1e7
   16018:	movt	r1, #1
   1601c:	str	r0, [sp, #44]	; 0x2c
   16020:	mov	r0, r1
   16024:	bl	10f5c <gettext@plt>
   16028:	ldr	r1, [fp, #8]
   1602c:	ldr	r2, [r1]
   16030:	ldr	r1, [fp, #8]
   16034:	ldr	r3, [r1, #4]
   16038:	ldr	r1, [fp, #8]
   1603c:	ldr	r1, [r1, #8]
   16040:	ldr	lr, [fp, #8]
   16044:	ldr	lr, [lr, #12]
   16048:	ldr	ip, [fp, #8]
   1604c:	ldr	ip, [ip, #16]
   16050:	ldr	r4, [fp, #8]
   16054:	ldr	r4, [r4, #20]
   16058:	ldr	r5, [fp, #8]
   1605c:	ldr	r5, [r5, #24]
   16060:	ldr	r6, [fp, #8]
   16064:	ldr	r6, [r6, #28]
   16068:	ldr	r7, [fp, #8]
   1606c:	ldr	r7, [r7, #32]
   16070:	ldr	r8, [sp, #44]	; 0x2c
   16074:	str	r0, [sp, #40]	; 0x28
   16078:	mov	r0, r8
   1607c:	ldr	r9, [sp, #40]	; 0x28
   16080:	str	r1, [sp, #36]	; 0x24
   16084:	mov	r1, r9
   16088:	ldr	sl, [sp, #36]	; 0x24
   1608c:	str	sl, [sp]
   16090:	str	lr, [sp, #4]
   16094:	str	ip, [sp, #8]
   16098:	str	r4, [sp, #12]
   1609c:	str	r5, [sp, #16]
   160a0:	str	r6, [sp, #20]
   160a4:	str	r7, [sp, #24]
   160a8:	bl	10f74 <fprintf@plt>
   160ac:	str	r0, [sp, #32]
   160b0:	sub	sp, fp, #28
   160b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160b8:	push	{fp, lr}
   160bc:	mov	fp, sp
   160c0:	sub	sp, sp, #32
   160c4:	ldr	ip, [fp, #8]
   160c8:	str	r0, [fp, #-4]
   160cc:	str	r1, [fp, #-8]
   160d0:	str	r2, [fp, #-12]
   160d4:	str	r3, [sp, #16]
   160d8:	movw	r0, #0
   160dc:	str	r0, [sp, #12]
   160e0:	str	ip, [sp, #8]
   160e4:	ldr	r0, [fp, #8]
   160e8:	ldr	r1, [sp, #12]
   160ec:	add	r0, r0, r1, lsl #2
   160f0:	ldr	r0, [r0]
   160f4:	movw	r1, #0
   160f8:	cmp	r0, r1
   160fc:	beq	16114 <__assert_fail@plt+0x50c8>
   16100:	b	16104 <__assert_fail@plt+0x50b8>
   16104:	ldr	r0, [sp, #12]
   16108:	add	r0, r0, #1
   1610c:	str	r0, [sp, #12]
   16110:	b	160e4 <__assert_fail@plt+0x5098>
   16114:	ldr	r0, [fp, #-4]
   16118:	ldr	r1, [fp, #-8]
   1611c:	ldr	r2, [fp, #-12]
   16120:	ldr	r3, [sp, #16]
   16124:	ldr	ip, [fp, #8]
   16128:	ldr	lr, [sp, #12]
   1612c:	str	ip, [sp]
   16130:	str	lr, [sp, #4]
   16134:	bl	15a94 <__assert_fail@plt+0x4a48>
   16138:	mov	sp, fp
   1613c:	pop	{fp, pc}
   16140:	push	{fp, lr}
   16144:	mov	fp, sp
   16148:	sub	sp, sp, #80	; 0x50
   1614c:	ldr	ip, [fp, #8]
   16150:	str	ip, [fp, #-4]
   16154:	str	r0, [fp, #-8]
   16158:	str	r1, [fp, #-12]
   1615c:	str	r2, [fp, #-16]
   16160:	str	r3, [fp, #-20]	; 0xffffffec
   16164:	movw	r0, #0
   16168:	str	r0, [fp, #-24]	; 0xffffffe8
   1616c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16170:	cmp	r0, #10
   16174:	movw	r0, #0
   16178:	str	r0, [sp, #12]
   1617c:	bcs	161b4 <__assert_fail@plt+0x5168>
   16180:	ldr	r0, [fp, #-4]
   16184:	add	r1, r0, #4
   16188:	str	r1, [fp, #-4]
   1618c:	ldr	r0, [r0]
   16190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16194:	add	r2, sp, #16
   16198:	add	r1, r2, r1, lsl #2
   1619c:	str	r0, [r1]
   161a0:	movw	r1, #0
   161a4:	cmp	r0, r1
   161a8:	movw	r0, #0
   161ac:	movne	r0, #1
   161b0:	str	r0, [sp, #12]
   161b4:	ldr	r0, [sp, #12]
   161b8:	tst	r0, #1
   161bc:	beq	161d4 <__assert_fail@plt+0x5188>
   161c0:	b	161c4 <__assert_fail@plt+0x5178>
   161c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161c8:	add	r0, r0, #1
   161cc:	str	r0, [fp, #-24]	; 0xffffffe8
   161d0:	b	1616c <__assert_fail@plt+0x5120>
   161d4:	add	r0, sp, #16
   161d8:	ldr	r1, [fp, #-8]
   161dc:	ldr	r2, [fp, #-12]
   161e0:	ldr	r3, [fp, #-16]
   161e4:	ldr	ip, [fp, #-20]	; 0xffffffec
   161e8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   161ec:	str	r0, [sp, #8]
   161f0:	mov	r0, r1
   161f4:	mov	r1, r2
   161f8:	mov	r2, r3
   161fc:	mov	r3, ip
   16200:	ldr	ip, [sp, #8]
   16204:	str	ip, [sp]
   16208:	str	lr, [sp, #4]
   1620c:	bl	15a94 <__assert_fail@plt+0x4a48>
   16210:	mov	sp, fp
   16214:	pop	{fp, pc}
   16218:	push	{fp, lr}
   1621c:	mov	fp, sp
   16220:	sub	sp, sp, #32
   16224:	str	r0, [fp, #-4]
   16228:	str	r1, [fp, #-8]
   1622c:	str	r2, [fp, #-12]
   16230:	str	r3, [sp, #16]
   16234:	add	r0, fp, #8
   16238:	str	r0, [sp, #12]
   1623c:	ldr	r0, [fp, #-4]
   16240:	ldr	r1, [fp, #-8]
   16244:	ldr	r2, [fp, #-12]
   16248:	ldr	r3, [sp, #16]
   1624c:	ldr	ip, [sp, #12]
   16250:	mov	lr, sp
   16254:	str	ip, [lr]
   16258:	bl	16140 <__assert_fail@plt+0x50f4>
   1625c:	add	r0, sp, #12
   16260:	str	r0, [sp, #8]
   16264:	mov	sp, fp
   16268:	pop	{fp, pc}
   1626c:	push	{fp, lr}
   16270:	mov	fp, sp
   16274:	sub	sp, sp, #16
   16278:	movw	r0, #53588	; 0xd154
   1627c:	movt	r0, #2
   16280:	ldr	r1, [r0]
   16284:	movw	r0, #47728	; 0xba70
   16288:	movt	r0, #1
   1628c:	bl	10e00 <fputs_unlocked@plt>
   16290:	movw	r1, #49699	; 0xc223
   16294:	movt	r1, #1
   16298:	str	r0, [fp, #-4]
   1629c:	mov	r0, r1
   162a0:	bl	10f5c <gettext@plt>
   162a4:	movw	r1, #49719	; 0xc237
   162a8:	movt	r1, #1
   162ac:	bl	10e30 <printf@plt>
   162b0:	movw	r1, #49741	; 0xc24d
   162b4:	movt	r1, #1
   162b8:	str	r0, [sp, #8]
   162bc:	mov	r0, r1
   162c0:	bl	10f5c <gettext@plt>
   162c4:	movw	r1, #47230	; 0xb87e
   162c8:	movt	r1, #1
   162cc:	movw	r2, #47537	; 0xb9b1
   162d0:	movt	r2, #1
   162d4:	bl	10e30 <printf@plt>
   162d8:	movw	r1, #49761	; 0xc261
   162dc:	movt	r1, #1
   162e0:	str	r0, [sp, #4]
   162e4:	mov	r0, r1
   162e8:	bl	10f5c <gettext@plt>
   162ec:	movw	r1, #49800	; 0xc288
   162f0:	movt	r1, #1
   162f4:	bl	10e30 <printf@plt>
   162f8:	str	r0, [sp]
   162fc:	mov	sp, fp
   16300:	pop	{fp, pc}
   16304:	push	{fp, lr}
   16308:	mov	fp, sp
   1630c:	sub	sp, sp, #16
   16310:	str	r0, [fp, #-4]
   16314:	str	r1, [sp, #8]
   16318:	str	r2, [sp, #4]
   1631c:	ldr	r0, [fp, #-4]
   16320:	ldr	r1, [sp, #8]
   16324:	ldr	r2, [sp, #4]
   16328:	bl	16334 <__assert_fail@plt+0x52e8>
   1632c:	mov	sp, fp
   16330:	pop	{fp, pc}
   16334:	push	{fp, lr}
   16338:	mov	fp, sp
   1633c:	sub	sp, sp, #16
   16340:	str	r0, [fp, #-4]
   16344:	str	r1, [sp, #8]
   16348:	str	r2, [sp, #4]
   1634c:	ldr	r0, [fp, #-4]
   16350:	ldr	r1, [sp, #8]
   16354:	ldr	r2, [sp, #4]
   16358:	bl	197ec <__assert_fail@plt+0x87a0>
   1635c:	str	r0, [sp]
   16360:	ldr	r0, [sp]
   16364:	movw	r1, #0
   16368:	cmp	r0, r1
   1636c:	bne	1639c <__assert_fail@plt+0x5350>
   16370:	ldr	r0, [fp, #-4]
   16374:	movw	r1, #0
   16378:	cmp	r0, r1
   1637c:	beq	16398 <__assert_fail@plt+0x534c>
   16380:	ldr	r0, [sp, #8]
   16384:	cmp	r0, #0
   16388:	beq	1639c <__assert_fail@plt+0x5350>
   1638c:	ldr	r0, [sp, #4]
   16390:	cmp	r0, #0
   16394:	beq	1639c <__assert_fail@plt+0x5350>
   16398:	bl	19184 <__assert_fail@plt+0x8138>
   1639c:	ldr	r0, [sp]
   163a0:	mov	sp, fp
   163a4:	pop	{fp, pc}
   163a8:	push	{fp, lr}
   163ac:	mov	fp, sp
   163b0:	sub	sp, sp, #8
   163b4:	str	r0, [sp, #4]
   163b8:	ldr	r0, [sp, #4]
   163bc:	bl	19270 <__assert_fail@plt+0x8224>
   163c0:	bl	163cc <__assert_fail@plt+0x5380>
   163c4:	mov	sp, fp
   163c8:	pop	{fp, pc}
   163cc:	push	{fp, lr}
   163d0:	mov	fp, sp
   163d4:	sub	sp, sp, #8
   163d8:	str	r0, [sp, #4]
   163dc:	ldr	r0, [sp, #4]
   163e0:	movw	r1, #0
   163e4:	cmp	r0, r1
   163e8:	bne	163f0 <__assert_fail@plt+0x53a4>
   163ec:	bl	19184 <__assert_fail@plt+0x8138>
   163f0:	ldr	r0, [sp, #4]
   163f4:	mov	sp, fp
   163f8:	pop	{fp, pc}
   163fc:	push	{fp, lr}
   16400:	mov	fp, sp
   16404:	sub	sp, sp, #8
   16408:	str	r0, [sp, #4]
   1640c:	ldr	r0, [sp, #4]
   16410:	bl	19528 <__assert_fail@plt+0x84dc>
   16414:	bl	163cc <__assert_fail@plt+0x5380>
   16418:	mov	sp, fp
   1641c:	pop	{fp, pc}
   16420:	push	{fp, lr}
   16424:	mov	fp, sp
   16428:	sub	sp, sp, #8
   1642c:	str	r0, [sp, #4]
   16430:	ldr	r0, [sp, #4]
   16434:	bl	163a8 <__assert_fail@plt+0x535c>
   16438:	mov	sp, fp
   1643c:	pop	{fp, pc}
   16440:	push	{fp, lr}
   16444:	mov	fp, sp
   16448:	sub	sp, sp, #16
   1644c:	str	r0, [fp, #-4]
   16450:	str	r1, [sp, #8]
   16454:	ldr	r0, [fp, #-4]
   16458:	ldr	r1, [sp, #8]
   1645c:	bl	192e0 <__assert_fail@plt+0x8294>
   16460:	str	r0, [sp, #4]
   16464:	ldr	r0, [sp, #4]
   16468:	movw	r1, #0
   1646c:	cmp	r0, r1
   16470:	bne	16494 <__assert_fail@plt+0x5448>
   16474:	ldr	r0, [fp, #-4]
   16478:	movw	r1, #0
   1647c:	cmp	r0, r1
   16480:	beq	16490 <__assert_fail@plt+0x5444>
   16484:	ldr	r0, [sp, #8]
   16488:	cmp	r0, #0
   1648c:	beq	16494 <__assert_fail@plt+0x5448>
   16490:	bl	19184 <__assert_fail@plt+0x8138>
   16494:	ldr	r0, [sp, #4]
   16498:	mov	sp, fp
   1649c:	pop	{fp, pc}
   164a0:	push	{fp, lr}
   164a4:	mov	fp, sp
   164a8:	sub	sp, sp, #8
   164ac:	str	r0, [sp, #4]
   164b0:	str	r1, [sp]
   164b4:	ldr	r0, [sp, #4]
   164b8:	ldr	r1, [sp]
   164bc:	bl	19568 <__assert_fail@plt+0x851c>
   164c0:	bl	163cc <__assert_fail@plt+0x5380>
   164c4:	mov	sp, fp
   164c8:	pop	{fp, pc}
   164cc:	push	{fp, lr}
   164d0:	mov	fp, sp
   164d4:	sub	sp, sp, #16
   164d8:	str	r0, [fp, #-4]
   164dc:	str	r1, [sp, #8]
   164e0:	str	r2, [sp, #4]
   164e4:	ldr	r0, [fp, #-4]
   164e8:	ldr	r1, [sp, #8]
   164ec:	ldr	r2, [sp, #4]
   164f0:	bl	19660 <__assert_fail@plt+0x8614>
   164f4:	bl	163cc <__assert_fail@plt+0x5380>
   164f8:	mov	sp, fp
   164fc:	pop	{fp, pc}
   16500:	push	{fp, lr}
   16504:	mov	fp, sp
   16508:	sub	sp, sp, #8
   1650c:	str	r0, [sp, #4]
   16510:	str	r1, [sp]
   16514:	ldr	r1, [sp, #4]
   16518:	ldr	r2, [sp]
   1651c:	movw	r0, #0
   16520:	bl	16334 <__assert_fail@plt+0x52e8>
   16524:	mov	sp, fp
   16528:	pop	{fp, pc}
   1652c:	push	{fp, lr}
   16530:	mov	fp, sp
   16534:	sub	sp, sp, #8
   16538:	str	r0, [sp, #4]
   1653c:	str	r1, [sp]
   16540:	ldr	r1, [sp, #4]
   16544:	ldr	r2, [sp]
   16548:	movw	r0, #0
   1654c:	bl	164cc <__assert_fail@plt+0x5480>
   16550:	mov	sp, fp
   16554:	pop	{fp, pc}
   16558:	push	{fp, lr}
   1655c:	mov	fp, sp
   16560:	sub	sp, sp, #8
   16564:	str	r0, [sp, #4]
   16568:	str	r1, [sp]
   1656c:	ldr	r0, [sp, #4]
   16570:	ldr	r1, [sp]
   16574:	movw	r2, #1
   16578:	bl	16584 <__assert_fail@plt+0x5538>
   1657c:	mov	sp, fp
   16580:	pop	{fp, pc}
   16584:	push	{fp, lr}
   16588:	mov	fp, sp
   1658c:	sub	sp, sp, #16
   16590:	str	r0, [fp, #-4]
   16594:	str	r1, [sp, #8]
   16598:	str	r2, [sp, #4]
   1659c:	ldr	r0, [sp, #8]
   165a0:	ldr	r0, [r0]
   165a4:	str	r0, [sp]
   165a8:	ldr	r0, [fp, #-4]
   165ac:	movw	r1, #0
   165b0:	cmp	r0, r1
   165b4:	bne	16600 <__assert_fail@plt+0x55b4>
   165b8:	ldr	r0, [sp]
   165bc:	cmp	r0, #0
   165c0:	bne	165fc <__assert_fail@plt+0x55b0>
   165c4:	ldr	r0, [sp, #4]
   165c8:	movw	r1, #64	; 0x40
   165cc:	udiv	r0, r1, r0
   165d0:	str	r0, [sp]
   165d4:	ldr	r0, [sp]
   165d8:	cmp	r0, #0
   165dc:	movw	r0, #0
   165e0:	movne	r0, #1
   165e4:	mvn	r1, #0
   165e8:	eor	r0, r0, r1
   165ec:	and	r0, r0, #1
   165f0:	ldr	r1, [sp]
   165f4:	add	r0, r1, r0
   165f8:	str	r0, [sp]
   165fc:	b	16630 <__assert_fail@plt+0x55e4>
   16600:	ldr	r0, [sp]
   16604:	ldr	r1, [sp]
   16608:	lsr	r1, r1, #1
   1660c:	add	r1, r1, #1
   16610:	adds	r0, r0, r1
   16614:	mov	r1, #0
   16618:	adc	r1, r1, #0
   1661c:	str	r0, [sp]
   16620:	tst	r1, #1
   16624:	beq	1662c <__assert_fail@plt+0x55e0>
   16628:	bl	19184 <__assert_fail@plt+0x8138>
   1662c:	b	16630 <__assert_fail@plt+0x55e4>
   16630:	ldr	r0, [fp, #-4]
   16634:	ldr	r1, [sp]
   16638:	ldr	r2, [sp, #4]
   1663c:	bl	16334 <__assert_fail@plt+0x52e8>
   16640:	str	r0, [fp, #-4]
   16644:	ldr	r0, [sp]
   16648:	ldr	r1, [sp, #8]
   1664c:	str	r0, [r1]
   16650:	ldr	r0, [fp, #-4]
   16654:	mov	sp, fp
   16658:	pop	{fp, pc}
   1665c:	push	{fp, lr}
   16660:	mov	fp, sp
   16664:	sub	sp, sp, #376	; 0x178
   16668:	ldr	ip, [fp, #8]
   1666c:	str	r0, [fp, #-4]
   16670:	str	r1, [fp, #-8]
   16674:	str	r2, [fp, #-12]
   16678:	str	r3, [fp, #-16]
   1667c:	ldr	r0, [fp, #-8]
   16680:	ldr	r0, [r0]
   16684:	str	r0, [fp, #-20]	; 0xffffffec
   16688:	ldr	r0, [fp, #-20]	; 0xffffffec
   1668c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16690:	asr	r1, r1, #1
   16694:	add	r1, r0, r1
   16698:	mov	r2, #1
   1669c:	cmp	r1, r0
   166a0:	movwvc	r2, #0
   166a4:	str	r1, [fp, #-24]	; 0xffffffe8
   166a8:	tst	r2, #1
   166ac:	str	ip, [fp, #-36]	; 0xffffffdc
   166b0:	beq	166bc <__assert_fail@plt+0x5670>
   166b4:	ldr	r0, [pc, #4044]	; 17688 <__assert_fail@plt+0x663c>
   166b8:	str	r0, [fp, #-24]	; 0xffffffe8
   166bc:	ldr	r0, [fp, #-16]
   166c0:	movw	r1, #0
   166c4:	cmp	r1, r0
   166c8:	bgt	166e4 <__assert_fail@plt+0x5698>
   166cc:	ldr	r0, [fp, #-16]
   166d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166d4:	cmp	r0, r1
   166d8:	bge	166e4 <__assert_fail@plt+0x5698>
   166dc:	ldr	r0, [fp, #-16]
   166e0:	str	r0, [fp, #-24]	; 0xffffffe8
   166e4:	b	16abc <__assert_fail@plt+0x5a70>
   166e8:	b	166ec <__assert_fail@plt+0x56a0>
   166ec:	ldr	r0, [fp, #8]
   166f0:	cmp	r0, #0
   166f4:	bge	16808 <__assert_fail@plt+0x57bc>
   166f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166fc:	cmp	r0, #0
   16700:	bge	1678c <__assert_fail@plt+0x5740>
   16704:	b	16708 <__assert_fail@plt+0x56bc>
   16708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1670c:	ldr	r1, [fp, #8]
   16710:	movw	r2, #127	; 0x7f
   16714:	sdiv	r1, r2, r1
   16718:	cmp	r0, r1
   1671c:	blt	168a8 <__assert_fail@plt+0x585c>
   16720:	b	168c0 <__assert_fail@plt+0x5874>
   16724:	b	16728 <__assert_fail@plt+0x56dc>
   16728:	ldr	r0, [pc, #4076]	; 1771c <__assert_fail@plt+0x66d0>
   1672c:	ldr	r1, [fp, #8]
   16730:	cmp	r1, r0
   16734:	blt	1674c <__assert_fail@plt+0x5700>
   16738:	b	16758 <__assert_fail@plt+0x570c>
   1673c:	ldr	r0, [fp, #8]
   16740:	movw	r1, #0
   16744:	cmp	r1, r0
   16748:	bge	16758 <__assert_fail@plt+0x570c>
   1674c:	movw	r0, #0
   16750:	str	r0, [fp, #-40]	; 0xffffffd8
   16754:	b	16770 <__assert_fail@plt+0x5724>
   16758:	ldr	r0, [fp, #8]
   1675c:	movw	r1, #0
   16760:	sub	r0, r1, r0
   16764:	movw	r1, #127	; 0x7f
   16768:	sdiv	r0, r1, r0
   1676c:	str	r0, [fp, #-40]	; 0xffffffd8
   16770:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16778:	mvn	r2, #0
   1677c:	sub	r1, r2, r1
   16780:	cmp	r0, r1
   16784:	ble	168a8 <__assert_fail@plt+0x585c>
   16788:	b	168c0 <__assert_fail@plt+0x5874>
   1678c:	b	16790 <__assert_fail@plt+0x5744>
   16790:	b	167ec <__assert_fail@plt+0x57a0>
   16794:	b	167ec <__assert_fail@plt+0x57a0>
   16798:	ldr	r0, [fp, #8]
   1679c:	cmn	r0, #1
   167a0:	bne	167ec <__assert_fail@plt+0x57a0>
   167a4:	b	167a8 <__assert_fail@plt+0x575c>
   167a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167ac:	mvn	r1, #127	; 0x7f
   167b0:	add	r0, r0, r1
   167b4:	movw	r1, #0
   167b8:	cmp	r1, r0
   167bc:	blt	168a8 <__assert_fail@plt+0x585c>
   167c0:	b	168c0 <__assert_fail@plt+0x5874>
   167c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c8:	movw	r1, #0
   167cc:	cmp	r1, r0
   167d0:	bge	168c0 <__assert_fail@plt+0x5874>
   167d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167d8:	sub	r0, r0, #1
   167dc:	movw	r1, #127	; 0x7f
   167e0:	cmp	r1, r0
   167e4:	blt	168a8 <__assert_fail@plt+0x585c>
   167e8:	b	168c0 <__assert_fail@plt+0x5874>
   167ec:	ldr	r0, [fp, #8]
   167f0:	mvn	r1, #127	; 0x7f
   167f4:	sdiv	r0, r1, r0
   167f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167fc:	cmp	r0, r1
   16800:	blt	168a8 <__assert_fail@plt+0x585c>
   16804:	b	168c0 <__assert_fail@plt+0x5874>
   16808:	ldr	r0, [fp, #8]
   1680c:	cmp	r0, #0
   16810:	bne	16818 <__assert_fail@plt+0x57cc>
   16814:	b	168c0 <__assert_fail@plt+0x5874>
   16818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1681c:	cmp	r0, #0
   16820:	bge	16890 <__assert_fail@plt+0x5844>
   16824:	b	16828 <__assert_fail@plt+0x57dc>
   16828:	b	16874 <__assert_fail@plt+0x5828>
   1682c:	b	16874 <__assert_fail@plt+0x5828>
   16830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16834:	cmn	r0, #1
   16838:	bne	16874 <__assert_fail@plt+0x5828>
   1683c:	b	16840 <__assert_fail@plt+0x57f4>
   16840:	ldr	r0, [fp, #8]
   16844:	mvn	r1, #127	; 0x7f
   16848:	add	r0, r0, r1
   1684c:	movw	r1, #0
   16850:	cmp	r1, r0
   16854:	blt	168a8 <__assert_fail@plt+0x585c>
   16858:	b	168c0 <__assert_fail@plt+0x5874>
   1685c:	ldr	r0, [fp, #8]
   16860:	sub	r0, r0, #1
   16864:	movw	r1, #127	; 0x7f
   16868:	cmp	r1, r0
   1686c:	blt	168a8 <__assert_fail@plt+0x585c>
   16870:	b	168c0 <__assert_fail@plt+0x5874>
   16874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16878:	mvn	r1, #127	; 0x7f
   1687c:	sdiv	r0, r1, r0
   16880:	ldr	r1, [fp, #8]
   16884:	cmp	r0, r1
   16888:	blt	168a8 <__assert_fail@plt+0x585c>
   1688c:	b	168c0 <__assert_fail@plt+0x5874>
   16890:	ldr	r0, [fp, #8]
   16894:	movw	r1, #127	; 0x7f
   16898:	sdiv	r0, r1, r0
   1689c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168a0:	cmp	r0, r1
   168a4:	bge	168c0 <__assert_fail@plt+0x5874>
   168a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168ac:	ldr	r1, [fp, #8]
   168b0:	mul	r0, r0, r1
   168b4:	sxtb	r0, r0
   168b8:	str	r0, [fp, #-28]	; 0xffffffe4
   168bc:	b	17ad4 <__assert_fail@plt+0x6a88>
   168c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168c4:	ldr	r1, [fp, #8]
   168c8:	mul	r0, r0, r1
   168cc:	sxtb	r0, r0
   168d0:	str	r0, [fp, #-28]	; 0xffffffe4
   168d4:	b	17ae4 <__assert_fail@plt+0x6a98>
   168d8:	ldr	r0, [fp, #8]
   168dc:	cmp	r0, #0
   168e0:	bge	169f0 <__assert_fail@plt+0x59a4>
   168e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168e8:	cmp	r0, #0
   168ec:	bge	16978 <__assert_fail@plt+0x592c>
   168f0:	b	168f4 <__assert_fail@plt+0x58a8>
   168f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168f8:	ldr	r1, [fp, #8]
   168fc:	movw	r2, #255	; 0xff
   16900:	sdiv	r1, r2, r1
   16904:	cmp	r0, r1
   16908:	blt	16a8c <__assert_fail@plt+0x5a40>
   1690c:	b	16aa4 <__assert_fail@plt+0x5a58>
   16910:	b	16914 <__assert_fail@plt+0x58c8>
   16914:	ldr	r0, [pc, #3584]	; 1771c <__assert_fail@plt+0x66d0>
   16918:	ldr	r1, [fp, #8]
   1691c:	cmp	r1, r0
   16920:	blt	16938 <__assert_fail@plt+0x58ec>
   16924:	b	16944 <__assert_fail@plt+0x58f8>
   16928:	ldr	r0, [fp, #8]
   1692c:	movw	r1, #0
   16930:	cmp	r1, r0
   16934:	bge	16944 <__assert_fail@plt+0x58f8>
   16938:	movw	r0, #0
   1693c:	str	r0, [fp, #-44]	; 0xffffffd4
   16940:	b	1695c <__assert_fail@plt+0x5910>
   16944:	ldr	r0, [fp, #8]
   16948:	movw	r1, #0
   1694c:	sub	r0, r1, r0
   16950:	movw	r1, #255	; 0xff
   16954:	sdiv	r0, r1, r0
   16958:	str	r0, [fp, #-44]	; 0xffffffd4
   1695c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16964:	mvn	r2, #0
   16968:	sub	r1, r2, r1
   1696c:	cmp	r0, r1
   16970:	ble	16a8c <__assert_fail@plt+0x5a40>
   16974:	b	16aa4 <__assert_fail@plt+0x5a58>
   16978:	b	1697c <__assert_fail@plt+0x5930>
   1697c:	b	169d4 <__assert_fail@plt+0x5988>
   16980:	b	169d4 <__assert_fail@plt+0x5988>
   16984:	ldr	r0, [fp, #8]
   16988:	cmn	r0, #1
   1698c:	bne	169d4 <__assert_fail@plt+0x5988>
   16990:	b	16994 <__assert_fail@plt+0x5948>
   16994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16998:	add	r0, r0, #0
   1699c:	movw	r1, #0
   169a0:	cmp	r1, r0
   169a4:	blt	16a8c <__assert_fail@plt+0x5a40>
   169a8:	b	16aa4 <__assert_fail@plt+0x5a58>
   169ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b0:	movw	r1, #0
   169b4:	cmp	r1, r0
   169b8:	bge	16aa4 <__assert_fail@plt+0x5a58>
   169bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169c0:	sub	r0, r0, #1
   169c4:	mvn	r1, #0
   169c8:	cmp	r1, r0
   169cc:	blt	16a8c <__assert_fail@plt+0x5a40>
   169d0:	b	16aa4 <__assert_fail@plt+0x5a58>
   169d4:	ldr	r0, [fp, #8]
   169d8:	movw	r1, #0
   169dc:	sdiv	r0, r1, r0
   169e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169e4:	cmp	r0, r1
   169e8:	blt	16a8c <__assert_fail@plt+0x5a40>
   169ec:	b	16aa4 <__assert_fail@plt+0x5a58>
   169f0:	ldr	r0, [fp, #8]
   169f4:	cmp	r0, #0
   169f8:	bne	16a00 <__assert_fail@plt+0x59b4>
   169fc:	b	16aa4 <__assert_fail@plt+0x5a58>
   16a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a04:	cmp	r0, #0
   16a08:	bge	16a74 <__assert_fail@plt+0x5a28>
   16a0c:	b	16a10 <__assert_fail@plt+0x59c4>
   16a10:	b	16a58 <__assert_fail@plt+0x5a0c>
   16a14:	b	16a58 <__assert_fail@plt+0x5a0c>
   16a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a1c:	cmn	r0, #1
   16a20:	bne	16a58 <__assert_fail@plt+0x5a0c>
   16a24:	b	16a28 <__assert_fail@plt+0x59dc>
   16a28:	ldr	r0, [fp, #8]
   16a2c:	add	r0, r0, #0
   16a30:	movw	r1, #0
   16a34:	cmp	r1, r0
   16a38:	blt	16a8c <__assert_fail@plt+0x5a40>
   16a3c:	b	16aa4 <__assert_fail@plt+0x5a58>
   16a40:	ldr	r0, [fp, #8]
   16a44:	sub	r0, r0, #1
   16a48:	mvn	r1, #0
   16a4c:	cmp	r1, r0
   16a50:	blt	16a8c <__assert_fail@plt+0x5a40>
   16a54:	b	16aa4 <__assert_fail@plt+0x5a58>
   16a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a5c:	movw	r1, #0
   16a60:	sdiv	r0, r1, r0
   16a64:	ldr	r1, [fp, #8]
   16a68:	cmp	r0, r1
   16a6c:	blt	16a8c <__assert_fail@plt+0x5a40>
   16a70:	b	16aa4 <__assert_fail@plt+0x5a58>
   16a74:	ldr	r0, [fp, #8]
   16a78:	movw	r1, #255	; 0xff
   16a7c:	sdiv	r0, r1, r0
   16a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a84:	cmp	r0, r1
   16a88:	bge	16aa4 <__assert_fail@plt+0x5a58>
   16a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a90:	ldr	r1, [fp, #8]
   16a94:	mul	r0, r0, r1
   16a98:	and	r0, r0, #255	; 0xff
   16a9c:	str	r0, [fp, #-28]	; 0xffffffe4
   16aa0:	b	17ad4 <__assert_fail@plt+0x6a88>
   16aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aa8:	ldr	r1, [fp, #8]
   16aac:	mul	r0, r0, r1
   16ab0:	and	r0, r0, #255	; 0xff
   16ab4:	str	r0, [fp, #-28]	; 0xffffffe4
   16ab8:	b	17ae4 <__assert_fail@plt+0x6a98>
   16abc:	b	16e94 <__assert_fail@plt+0x5e48>
   16ac0:	b	16ac4 <__assert_fail@plt+0x5a78>
   16ac4:	ldr	r0, [fp, #8]
   16ac8:	cmp	r0, #0
   16acc:	bge	16be0 <__assert_fail@plt+0x5b94>
   16ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ad4:	cmp	r0, #0
   16ad8:	bge	16b64 <__assert_fail@plt+0x5b18>
   16adc:	b	16ae0 <__assert_fail@plt+0x5a94>
   16ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ae4:	ldr	r1, [fp, #8]
   16ae8:	movw	r2, #32767	; 0x7fff
   16aec:	sdiv	r1, r2, r1
   16af0:	cmp	r0, r1
   16af4:	blt	16c80 <__assert_fail@plt+0x5c34>
   16af8:	b	16c98 <__assert_fail@plt+0x5c4c>
   16afc:	b	16b00 <__assert_fail@plt+0x5ab4>
   16b00:	ldr	r0, [pc, #3092]	; 1771c <__assert_fail@plt+0x66d0>
   16b04:	ldr	r1, [fp, #8]
   16b08:	cmp	r1, r0
   16b0c:	blt	16b24 <__assert_fail@plt+0x5ad8>
   16b10:	b	16b30 <__assert_fail@plt+0x5ae4>
   16b14:	ldr	r0, [fp, #8]
   16b18:	movw	r1, #0
   16b1c:	cmp	r1, r0
   16b20:	bge	16b30 <__assert_fail@plt+0x5ae4>
   16b24:	movw	r0, #0
   16b28:	str	r0, [fp, #-48]	; 0xffffffd0
   16b2c:	b	16b48 <__assert_fail@plt+0x5afc>
   16b30:	ldr	r0, [fp, #8]
   16b34:	movw	r1, #0
   16b38:	sub	r0, r1, r0
   16b3c:	movw	r1, #32767	; 0x7fff
   16b40:	sdiv	r0, r1, r0
   16b44:	str	r0, [fp, #-48]	; 0xffffffd0
   16b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b50:	mvn	r2, #0
   16b54:	sub	r1, r2, r1
   16b58:	cmp	r0, r1
   16b5c:	ble	16c80 <__assert_fail@plt+0x5c34>
   16b60:	b	16c98 <__assert_fail@plt+0x5c4c>
   16b64:	b	16b68 <__assert_fail@plt+0x5b1c>
   16b68:	b	16bc4 <__assert_fail@plt+0x5b78>
   16b6c:	b	16bc4 <__assert_fail@plt+0x5b78>
   16b70:	ldr	r0, [fp, #8]
   16b74:	cmn	r0, #1
   16b78:	bne	16bc4 <__assert_fail@plt+0x5b78>
   16b7c:	b	16b80 <__assert_fail@plt+0x5b34>
   16b80:	ldr	r0, [pc, #3928]	; 17ae0 <__assert_fail@plt+0x6a94>
   16b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b88:	add	r0, r1, r0
   16b8c:	movw	r1, #0
   16b90:	cmp	r1, r0
   16b94:	blt	16c80 <__assert_fail@plt+0x5c34>
   16b98:	b	16c98 <__assert_fail@plt+0x5c4c>
   16b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba0:	movw	r1, #0
   16ba4:	cmp	r1, r0
   16ba8:	bge	16c98 <__assert_fail@plt+0x5c4c>
   16bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bb0:	sub	r0, r0, #1
   16bb4:	movw	r1, #32767	; 0x7fff
   16bb8:	cmp	r1, r0
   16bbc:	blt	16c80 <__assert_fail@plt+0x5c34>
   16bc0:	b	16c98 <__assert_fail@plt+0x5c4c>
   16bc4:	ldr	r0, [pc, #3860]	; 17ae0 <__assert_fail@plt+0x6a94>
   16bc8:	ldr	r1, [fp, #8]
   16bcc:	sdiv	r0, r0, r1
   16bd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16bd4:	cmp	r0, r1
   16bd8:	blt	16c80 <__assert_fail@plt+0x5c34>
   16bdc:	b	16c98 <__assert_fail@plt+0x5c4c>
   16be0:	ldr	r0, [fp, #8]
   16be4:	cmp	r0, #0
   16be8:	bne	16bf0 <__assert_fail@plt+0x5ba4>
   16bec:	b	16c98 <__assert_fail@plt+0x5c4c>
   16bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bf4:	cmp	r0, #0
   16bf8:	bge	16c68 <__assert_fail@plt+0x5c1c>
   16bfc:	b	16c00 <__assert_fail@plt+0x5bb4>
   16c00:	b	16c4c <__assert_fail@plt+0x5c00>
   16c04:	b	16c4c <__assert_fail@plt+0x5c00>
   16c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c0c:	cmn	r0, #1
   16c10:	bne	16c4c <__assert_fail@plt+0x5c00>
   16c14:	b	16c18 <__assert_fail@plt+0x5bcc>
   16c18:	ldr	r0, [pc, #3776]	; 17ae0 <__assert_fail@plt+0x6a94>
   16c1c:	ldr	r1, [fp, #8]
   16c20:	add	r0, r1, r0
   16c24:	movw	r1, #0
   16c28:	cmp	r1, r0
   16c2c:	blt	16c80 <__assert_fail@plt+0x5c34>
   16c30:	b	16c98 <__assert_fail@plt+0x5c4c>
   16c34:	ldr	r0, [fp, #8]
   16c38:	sub	r0, r0, #1
   16c3c:	movw	r1, #32767	; 0x7fff
   16c40:	cmp	r1, r0
   16c44:	blt	16c80 <__assert_fail@plt+0x5c34>
   16c48:	b	16c98 <__assert_fail@plt+0x5c4c>
   16c4c:	ldr	r0, [pc, #3724]	; 17ae0 <__assert_fail@plt+0x6a94>
   16c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c54:	sdiv	r0, r0, r1
   16c58:	ldr	r1, [fp, #8]
   16c5c:	cmp	r0, r1
   16c60:	blt	16c80 <__assert_fail@plt+0x5c34>
   16c64:	b	16c98 <__assert_fail@plt+0x5c4c>
   16c68:	ldr	r0, [fp, #8]
   16c6c:	movw	r1, #32767	; 0x7fff
   16c70:	sdiv	r0, r1, r0
   16c74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c78:	cmp	r0, r1
   16c7c:	bge	16c98 <__assert_fail@plt+0x5c4c>
   16c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c84:	ldr	r1, [fp, #8]
   16c88:	mul	r0, r0, r1
   16c8c:	sxth	r0, r0
   16c90:	str	r0, [fp, #-28]	; 0xffffffe4
   16c94:	b	17ad4 <__assert_fail@plt+0x6a88>
   16c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c9c:	ldr	r1, [fp, #8]
   16ca0:	mul	r0, r0, r1
   16ca4:	sxth	r0, r0
   16ca8:	str	r0, [fp, #-28]	; 0xffffffe4
   16cac:	b	17ae4 <__assert_fail@plt+0x6a98>
   16cb0:	ldr	r0, [fp, #8]
   16cb4:	cmp	r0, #0
   16cb8:	bge	16dc8 <__assert_fail@plt+0x5d7c>
   16cbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cc0:	cmp	r0, #0
   16cc4:	bge	16d50 <__assert_fail@plt+0x5d04>
   16cc8:	b	16ccc <__assert_fail@plt+0x5c80>
   16ccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cd0:	ldr	r1, [fp, #8]
   16cd4:	movw	r2, #65535	; 0xffff
   16cd8:	sdiv	r1, r2, r1
   16cdc:	cmp	r0, r1
   16ce0:	blt	16e64 <__assert_fail@plt+0x5e18>
   16ce4:	b	16e7c <__assert_fail@plt+0x5e30>
   16ce8:	b	16cec <__assert_fail@plt+0x5ca0>
   16cec:	ldr	r0, [pc, #2600]	; 1771c <__assert_fail@plt+0x66d0>
   16cf0:	ldr	r1, [fp, #8]
   16cf4:	cmp	r1, r0
   16cf8:	blt	16d10 <__assert_fail@plt+0x5cc4>
   16cfc:	b	16d1c <__assert_fail@plt+0x5cd0>
   16d00:	ldr	r0, [fp, #8]
   16d04:	movw	r1, #0
   16d08:	cmp	r1, r0
   16d0c:	bge	16d1c <__assert_fail@plt+0x5cd0>
   16d10:	movw	r0, #0
   16d14:	str	r0, [fp, #-52]	; 0xffffffcc
   16d18:	b	16d34 <__assert_fail@plt+0x5ce8>
   16d1c:	ldr	r0, [fp, #8]
   16d20:	movw	r1, #0
   16d24:	sub	r0, r1, r0
   16d28:	movw	r1, #65535	; 0xffff
   16d2c:	sdiv	r0, r1, r0
   16d30:	str	r0, [fp, #-52]	; 0xffffffcc
   16d34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16d38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d3c:	mvn	r2, #0
   16d40:	sub	r1, r2, r1
   16d44:	cmp	r0, r1
   16d48:	ble	16e64 <__assert_fail@plt+0x5e18>
   16d4c:	b	16e7c <__assert_fail@plt+0x5e30>
   16d50:	b	16d54 <__assert_fail@plt+0x5d08>
   16d54:	b	16dac <__assert_fail@plt+0x5d60>
   16d58:	b	16dac <__assert_fail@plt+0x5d60>
   16d5c:	ldr	r0, [fp, #8]
   16d60:	cmn	r0, #1
   16d64:	bne	16dac <__assert_fail@plt+0x5d60>
   16d68:	b	16d6c <__assert_fail@plt+0x5d20>
   16d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d70:	add	r0, r0, #0
   16d74:	movw	r1, #0
   16d78:	cmp	r1, r0
   16d7c:	blt	16e64 <__assert_fail@plt+0x5e18>
   16d80:	b	16e7c <__assert_fail@plt+0x5e30>
   16d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d88:	movw	r1, #0
   16d8c:	cmp	r1, r0
   16d90:	bge	16e7c <__assert_fail@plt+0x5e30>
   16d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d98:	sub	r0, r0, #1
   16d9c:	mvn	r1, #0
   16da0:	cmp	r1, r0
   16da4:	blt	16e64 <__assert_fail@plt+0x5e18>
   16da8:	b	16e7c <__assert_fail@plt+0x5e30>
   16dac:	ldr	r0, [fp, #8]
   16db0:	movw	r1, #0
   16db4:	sdiv	r0, r1, r0
   16db8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dbc:	cmp	r0, r1
   16dc0:	blt	16e64 <__assert_fail@plt+0x5e18>
   16dc4:	b	16e7c <__assert_fail@plt+0x5e30>
   16dc8:	ldr	r0, [fp, #8]
   16dcc:	cmp	r0, #0
   16dd0:	bne	16dd8 <__assert_fail@plt+0x5d8c>
   16dd4:	b	16e7c <__assert_fail@plt+0x5e30>
   16dd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ddc:	cmp	r0, #0
   16de0:	bge	16e4c <__assert_fail@plt+0x5e00>
   16de4:	b	16de8 <__assert_fail@plt+0x5d9c>
   16de8:	b	16e30 <__assert_fail@plt+0x5de4>
   16dec:	b	16e30 <__assert_fail@plt+0x5de4>
   16df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16df4:	cmn	r0, #1
   16df8:	bne	16e30 <__assert_fail@plt+0x5de4>
   16dfc:	b	16e00 <__assert_fail@plt+0x5db4>
   16e00:	ldr	r0, [fp, #8]
   16e04:	add	r0, r0, #0
   16e08:	movw	r1, #0
   16e0c:	cmp	r1, r0
   16e10:	blt	16e64 <__assert_fail@plt+0x5e18>
   16e14:	b	16e7c <__assert_fail@plt+0x5e30>
   16e18:	ldr	r0, [fp, #8]
   16e1c:	sub	r0, r0, #1
   16e20:	mvn	r1, #0
   16e24:	cmp	r1, r0
   16e28:	blt	16e64 <__assert_fail@plt+0x5e18>
   16e2c:	b	16e7c <__assert_fail@plt+0x5e30>
   16e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e34:	movw	r1, #0
   16e38:	sdiv	r0, r1, r0
   16e3c:	ldr	r1, [fp, #8]
   16e40:	cmp	r0, r1
   16e44:	blt	16e64 <__assert_fail@plt+0x5e18>
   16e48:	b	16e7c <__assert_fail@plt+0x5e30>
   16e4c:	ldr	r0, [fp, #8]
   16e50:	movw	r1, #65535	; 0xffff
   16e54:	sdiv	r0, r1, r0
   16e58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e5c:	cmp	r0, r1
   16e60:	bge	16e7c <__assert_fail@plt+0x5e30>
   16e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e68:	ldr	r1, [fp, #8]
   16e6c:	mul	r0, r0, r1
   16e70:	uxth	r0, r0
   16e74:	str	r0, [fp, #-28]	; 0xffffffe4
   16e78:	b	17ad4 <__assert_fail@plt+0x6a88>
   16e7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e80:	ldr	r1, [fp, #8]
   16e84:	mul	r0, r0, r1
   16e88:	uxth	r0, r0
   16e8c:	str	r0, [fp, #-28]	; 0xffffffe4
   16e90:	b	17ae4 <__assert_fail@plt+0x6a98>
   16e94:	b	16e98 <__assert_fail@plt+0x5e4c>
   16e98:	b	16e9c <__assert_fail@plt+0x5e50>
   16e9c:	ldr	r0, [fp, #8]
   16ea0:	cmp	r0, #0
   16ea4:	bge	16fa8 <__assert_fail@plt+0x5f5c>
   16ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eac:	cmp	r0, #0
   16eb0:	bge	16f3c <__assert_fail@plt+0x5ef0>
   16eb4:	b	16eb8 <__assert_fail@plt+0x5e6c>
   16eb8:	ldr	r0, [pc, #1992]	; 17688 <__assert_fail@plt+0x663c>
   16ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ec0:	ldr	r2, [fp, #8]
   16ec4:	sdiv	r0, r0, r2
   16ec8:	cmp	r1, r0
   16ecc:	blt	17038 <__assert_fail@plt+0x5fec>
   16ed0:	b	1704c <__assert_fail@plt+0x6000>
   16ed4:	b	16ed8 <__assert_fail@plt+0x5e8c>
   16ed8:	ldr	r0, [pc, #2108]	; 1771c <__assert_fail@plt+0x66d0>
   16edc:	ldr	r1, [fp, #8]
   16ee0:	cmp	r1, r0
   16ee4:	blt	16efc <__assert_fail@plt+0x5eb0>
   16ee8:	b	16f08 <__assert_fail@plt+0x5ebc>
   16eec:	ldr	r0, [fp, #8]
   16ef0:	movw	r1, #0
   16ef4:	cmp	r1, r0
   16ef8:	bge	16f08 <__assert_fail@plt+0x5ebc>
   16efc:	movw	r0, #0
   16f00:	str	r0, [fp, #-56]	; 0xffffffc8
   16f04:	b	16f20 <__assert_fail@plt+0x5ed4>
   16f08:	ldr	r0, [pc, #1912]	; 17688 <__assert_fail@plt+0x663c>
   16f0c:	ldr	r1, [fp, #8]
   16f10:	movw	r2, #0
   16f14:	sub	r1, r2, r1
   16f18:	sdiv	r0, r0, r1
   16f1c:	str	r0, [fp, #-56]	; 0xffffffc8
   16f20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16f24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f28:	mvn	r2, #0
   16f2c:	sub	r1, r2, r1
   16f30:	cmp	r0, r1
   16f34:	ble	17038 <__assert_fail@plt+0x5fec>
   16f38:	b	1704c <__assert_fail@plt+0x6000>
   16f3c:	ldr	r0, [fp, #8]
   16f40:	cmn	r0, #1
   16f44:	bne	16f8c <__assert_fail@plt+0x5f40>
   16f48:	b	16f4c <__assert_fail@plt+0x5f00>
   16f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f50:	add	r0, r0, #-2147483648	; 0x80000000
   16f54:	movw	r1, #0
   16f58:	cmp	r1, r0
   16f5c:	blt	17038 <__assert_fail@plt+0x5fec>
   16f60:	b	1704c <__assert_fail@plt+0x6000>
   16f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f68:	movw	r1, #0
   16f6c:	cmp	r1, r0
   16f70:	bge	1704c <__assert_fail@plt+0x6000>
   16f74:	ldr	r0, [pc, #1804]	; 17688 <__assert_fail@plt+0x663c>
   16f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f7c:	sub	r1, r1, #1
   16f80:	cmp	r0, r1
   16f84:	blt	17038 <__assert_fail@plt+0x5fec>
   16f88:	b	1704c <__assert_fail@plt+0x6000>
   16f8c:	ldr	r0, [pc, #4072]	; 17f7c <__assert_fail@plt+0x6f30>
   16f90:	ldr	r1, [fp, #8]
   16f94:	sdiv	r0, r0, r1
   16f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f9c:	cmp	r0, r1
   16fa0:	blt	17038 <__assert_fail@plt+0x5fec>
   16fa4:	b	1704c <__assert_fail@plt+0x6000>
   16fa8:	ldr	r0, [fp, #8]
   16fac:	cmp	r0, #0
   16fb0:	bne	16fb8 <__assert_fail@plt+0x5f6c>
   16fb4:	b	1704c <__assert_fail@plt+0x6000>
   16fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fbc:	cmp	r0, #0
   16fc0:	bge	17020 <__assert_fail@plt+0x5fd4>
   16fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fc8:	cmn	r0, #1
   16fcc:	bne	17004 <__assert_fail@plt+0x5fb8>
   16fd0:	b	16fd4 <__assert_fail@plt+0x5f88>
   16fd4:	ldr	r0, [fp, #8]
   16fd8:	add	r0, r0, #-2147483648	; 0x80000000
   16fdc:	movw	r1, #0
   16fe0:	cmp	r1, r0
   16fe4:	blt	17038 <__assert_fail@plt+0x5fec>
   16fe8:	b	1704c <__assert_fail@plt+0x6000>
   16fec:	ldr	r0, [pc, #1684]	; 17688 <__assert_fail@plt+0x663c>
   16ff0:	ldr	r1, [fp, #8]
   16ff4:	sub	r1, r1, #1
   16ff8:	cmp	r0, r1
   16ffc:	blt	17038 <__assert_fail@plt+0x5fec>
   17000:	b	1704c <__assert_fail@plt+0x6000>
   17004:	ldr	r0, [pc, #3952]	; 17f7c <__assert_fail@plt+0x6f30>
   17008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1700c:	sdiv	r0, r0, r1
   17010:	ldr	r1, [fp, #8]
   17014:	cmp	r0, r1
   17018:	blt	17038 <__assert_fail@plt+0x5fec>
   1701c:	b	1704c <__assert_fail@plt+0x6000>
   17020:	ldr	r0, [pc, #1632]	; 17688 <__assert_fail@plt+0x663c>
   17024:	ldr	r1, [fp, #8]
   17028:	sdiv	r0, r0, r1
   1702c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17030:	cmp	r0, r1
   17034:	bge	1704c <__assert_fail@plt+0x6000>
   17038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1703c:	ldr	r1, [fp, #8]
   17040:	mul	r0, r0, r1
   17044:	str	r0, [fp, #-28]	; 0xffffffe4
   17048:	b	17ad4 <__assert_fail@plt+0x6a88>
   1704c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17050:	ldr	r1, [fp, #8]
   17054:	mul	r0, r0, r1
   17058:	str	r0, [fp, #-28]	; 0xffffffe4
   1705c:	b	17ae4 <__assert_fail@plt+0x6a98>
   17060:	ldr	r0, [fp, #8]
   17064:	cmp	r0, #0
   17068:	bge	17178 <__assert_fail@plt+0x612c>
   1706c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17070:	cmp	r0, #0
   17074:	bge	17100 <__assert_fail@plt+0x60b4>
   17078:	b	17098 <__assert_fail@plt+0x604c>
   1707c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17080:	ldr	r1, [fp, #8]
   17084:	mvn	r2, #0
   17088:	udiv	r1, r2, r1
   1708c:	cmp	r0, r1
   17090:	bcc	17214 <__assert_fail@plt+0x61c8>
   17094:	b	17228 <__assert_fail@plt+0x61dc>
   17098:	b	1709c <__assert_fail@plt+0x6050>
   1709c:	ldr	r0, [pc, #1656]	; 1771c <__assert_fail@plt+0x66d0>
   170a0:	ldr	r1, [fp, #8]
   170a4:	cmp	r1, r0
   170a8:	blt	170c0 <__assert_fail@plt+0x6074>
   170ac:	b	170cc <__assert_fail@plt+0x6080>
   170b0:	ldr	r0, [fp, #8]
   170b4:	movw	r1, #0
   170b8:	cmp	r1, r0
   170bc:	bge	170cc <__assert_fail@plt+0x6080>
   170c0:	movw	r0, #1
   170c4:	str	r0, [fp, #-60]	; 0xffffffc4
   170c8:	b	170e4 <__assert_fail@plt+0x6098>
   170cc:	ldr	r0, [fp, #8]
   170d0:	movw	r1, #0
   170d4:	sub	r0, r1, r0
   170d8:	mvn	r1, #0
   170dc:	udiv	r0, r1, r0
   170e0:	str	r0, [fp, #-60]	; 0xffffffc4
   170e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   170e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170ec:	mvn	r2, #0
   170f0:	sub	r1, r2, r1
   170f4:	cmp	r0, r1
   170f8:	bls	17214 <__assert_fail@plt+0x61c8>
   170fc:	b	17228 <__assert_fail@plt+0x61dc>
   17100:	b	17104 <__assert_fail@plt+0x60b8>
   17104:	b	1715c <__assert_fail@plt+0x6110>
   17108:	b	1715c <__assert_fail@plt+0x6110>
   1710c:	ldr	r0, [fp, #8]
   17110:	cmn	r0, #1
   17114:	bne	1715c <__assert_fail@plt+0x6110>
   17118:	b	1711c <__assert_fail@plt+0x60d0>
   1711c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17120:	add	r0, r0, #0
   17124:	movw	r1, #0
   17128:	cmp	r1, r0
   1712c:	blt	17214 <__assert_fail@plt+0x61c8>
   17130:	b	17228 <__assert_fail@plt+0x61dc>
   17134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17138:	movw	r1, #0
   1713c:	cmp	r1, r0
   17140:	bge	17228 <__assert_fail@plt+0x61dc>
   17144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17148:	sub	r0, r0, #1
   1714c:	mvn	r1, #0
   17150:	cmp	r1, r0
   17154:	blt	17214 <__assert_fail@plt+0x61c8>
   17158:	b	17228 <__assert_fail@plt+0x61dc>
   1715c:	ldr	r0, [fp, #8]
   17160:	movw	r1, #0
   17164:	sdiv	r0, r1, r0
   17168:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1716c:	cmp	r0, r1
   17170:	blt	17214 <__assert_fail@plt+0x61c8>
   17174:	b	17228 <__assert_fail@plt+0x61dc>
   17178:	ldr	r0, [fp, #8]
   1717c:	cmp	r0, #0
   17180:	bne	17188 <__assert_fail@plt+0x613c>
   17184:	b	17228 <__assert_fail@plt+0x61dc>
   17188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1718c:	cmp	r0, #0
   17190:	bge	171fc <__assert_fail@plt+0x61b0>
   17194:	b	17198 <__assert_fail@plt+0x614c>
   17198:	b	171e0 <__assert_fail@plt+0x6194>
   1719c:	b	171e0 <__assert_fail@plt+0x6194>
   171a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171a4:	cmn	r0, #1
   171a8:	bne	171e0 <__assert_fail@plt+0x6194>
   171ac:	b	171b0 <__assert_fail@plt+0x6164>
   171b0:	ldr	r0, [fp, #8]
   171b4:	add	r0, r0, #0
   171b8:	movw	r1, #0
   171bc:	cmp	r1, r0
   171c0:	blt	17214 <__assert_fail@plt+0x61c8>
   171c4:	b	17228 <__assert_fail@plt+0x61dc>
   171c8:	ldr	r0, [fp, #8]
   171cc:	sub	r0, r0, #1
   171d0:	mvn	r1, #0
   171d4:	cmp	r1, r0
   171d8:	blt	17214 <__assert_fail@plt+0x61c8>
   171dc:	b	17228 <__assert_fail@plt+0x61dc>
   171e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e4:	movw	r1, #0
   171e8:	sdiv	r0, r1, r0
   171ec:	ldr	r1, [fp, #8]
   171f0:	cmp	r0, r1
   171f4:	blt	17214 <__assert_fail@plt+0x61c8>
   171f8:	b	17228 <__assert_fail@plt+0x61dc>
   171fc:	ldr	r0, [fp, #8]
   17200:	mvn	r1, #0
   17204:	udiv	r0, r1, r0
   17208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1720c:	cmp	r0, r1
   17210:	bcs	17228 <__assert_fail@plt+0x61dc>
   17214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17218:	ldr	r1, [fp, #8]
   1721c:	mul	r0, r0, r1
   17220:	str	r0, [fp, #-28]	; 0xffffffe4
   17224:	b	17ad4 <__assert_fail@plt+0x6a88>
   17228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1722c:	ldr	r1, [fp, #8]
   17230:	mul	r0, r0, r1
   17234:	str	r0, [fp, #-28]	; 0xffffffe4
   17238:	b	17ae4 <__assert_fail@plt+0x6a98>
   1723c:	b	17240 <__assert_fail@plt+0x61f4>
   17240:	b	17244 <__assert_fail@plt+0x61f8>
   17244:	ldr	r0, [fp, #8]
   17248:	cmp	r0, #0
   1724c:	bge	17350 <__assert_fail@plt+0x6304>
   17250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17254:	cmp	r0, #0
   17258:	bge	172e4 <__assert_fail@plt+0x6298>
   1725c:	b	17260 <__assert_fail@plt+0x6214>
   17260:	ldr	r0, [pc, #1056]	; 17688 <__assert_fail@plt+0x663c>
   17264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17268:	ldr	r2, [fp, #8]
   1726c:	sdiv	r0, r0, r2
   17270:	cmp	r1, r0
   17274:	blt	173e0 <__assert_fail@plt+0x6394>
   17278:	b	173f4 <__assert_fail@plt+0x63a8>
   1727c:	b	17280 <__assert_fail@plt+0x6234>
   17280:	ldr	r0, [pc, #1172]	; 1771c <__assert_fail@plt+0x66d0>
   17284:	ldr	r1, [fp, #8]
   17288:	cmp	r1, r0
   1728c:	blt	172a4 <__assert_fail@plt+0x6258>
   17290:	b	172b0 <__assert_fail@plt+0x6264>
   17294:	ldr	r0, [fp, #8]
   17298:	movw	r1, #0
   1729c:	cmp	r1, r0
   172a0:	bge	172b0 <__assert_fail@plt+0x6264>
   172a4:	movw	r0, #0
   172a8:	str	r0, [fp, #-64]	; 0xffffffc0
   172ac:	b	172c8 <__assert_fail@plt+0x627c>
   172b0:	ldr	r0, [pc, #976]	; 17688 <__assert_fail@plt+0x663c>
   172b4:	ldr	r1, [fp, #8]
   172b8:	movw	r2, #0
   172bc:	sub	r1, r2, r1
   172c0:	sdiv	r0, r0, r1
   172c4:	str	r0, [fp, #-64]	; 0xffffffc0
   172c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   172cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172d0:	mvn	r2, #0
   172d4:	sub	r1, r2, r1
   172d8:	cmp	r0, r1
   172dc:	ble	173e0 <__assert_fail@plt+0x6394>
   172e0:	b	173f4 <__assert_fail@plt+0x63a8>
   172e4:	ldr	r0, [fp, #8]
   172e8:	cmn	r0, #1
   172ec:	bne	17334 <__assert_fail@plt+0x62e8>
   172f0:	b	172f4 <__assert_fail@plt+0x62a8>
   172f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f8:	add	r0, r0, #-2147483648	; 0x80000000
   172fc:	movw	r1, #0
   17300:	cmp	r1, r0
   17304:	blt	173e0 <__assert_fail@plt+0x6394>
   17308:	b	173f4 <__assert_fail@plt+0x63a8>
   1730c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17310:	movw	r1, #0
   17314:	cmp	r1, r0
   17318:	bge	173f4 <__assert_fail@plt+0x63a8>
   1731c:	ldr	r0, [pc, #868]	; 17688 <__assert_fail@plt+0x663c>
   17320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17324:	sub	r1, r1, #1
   17328:	cmp	r0, r1
   1732c:	blt	173e0 <__assert_fail@plt+0x6394>
   17330:	b	173f4 <__assert_fail@plt+0x63a8>
   17334:	ldr	r0, [pc, #3136]	; 17f7c <__assert_fail@plt+0x6f30>
   17338:	ldr	r1, [fp, #8]
   1733c:	sdiv	r0, r0, r1
   17340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17344:	cmp	r0, r1
   17348:	blt	173e0 <__assert_fail@plt+0x6394>
   1734c:	b	173f4 <__assert_fail@plt+0x63a8>
   17350:	ldr	r0, [fp, #8]
   17354:	cmp	r0, #0
   17358:	bne	17360 <__assert_fail@plt+0x6314>
   1735c:	b	173f4 <__assert_fail@plt+0x63a8>
   17360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17364:	cmp	r0, #0
   17368:	bge	173c8 <__assert_fail@plt+0x637c>
   1736c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17370:	cmn	r0, #1
   17374:	bne	173ac <__assert_fail@plt+0x6360>
   17378:	b	1737c <__assert_fail@plt+0x6330>
   1737c:	ldr	r0, [fp, #8]
   17380:	add	r0, r0, #-2147483648	; 0x80000000
   17384:	movw	r1, #0
   17388:	cmp	r1, r0
   1738c:	blt	173e0 <__assert_fail@plt+0x6394>
   17390:	b	173f4 <__assert_fail@plt+0x63a8>
   17394:	ldr	r0, [pc, #748]	; 17688 <__assert_fail@plt+0x663c>
   17398:	ldr	r1, [fp, #8]
   1739c:	sub	r1, r1, #1
   173a0:	cmp	r0, r1
   173a4:	blt	173e0 <__assert_fail@plt+0x6394>
   173a8:	b	173f4 <__assert_fail@plt+0x63a8>
   173ac:	ldr	r0, [pc, #3016]	; 17f7c <__assert_fail@plt+0x6f30>
   173b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173b4:	sdiv	r0, r0, r1
   173b8:	ldr	r1, [fp, #8]
   173bc:	cmp	r0, r1
   173c0:	blt	173e0 <__assert_fail@plt+0x6394>
   173c4:	b	173f4 <__assert_fail@plt+0x63a8>
   173c8:	ldr	r0, [pc, #696]	; 17688 <__assert_fail@plt+0x663c>
   173cc:	ldr	r1, [fp, #8]
   173d0:	sdiv	r0, r0, r1
   173d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173d8:	cmp	r0, r1
   173dc:	bge	173f4 <__assert_fail@plt+0x63a8>
   173e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e4:	ldr	r1, [fp, #8]
   173e8:	mul	r0, r0, r1
   173ec:	str	r0, [fp, #-28]	; 0xffffffe4
   173f0:	b	17ad4 <__assert_fail@plt+0x6a88>
   173f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f8:	ldr	r1, [fp, #8]
   173fc:	mul	r0, r0, r1
   17400:	str	r0, [fp, #-28]	; 0xffffffe4
   17404:	b	17ae4 <__assert_fail@plt+0x6a98>
   17408:	ldr	r0, [fp, #8]
   1740c:	cmp	r0, #0
   17410:	bge	17520 <__assert_fail@plt+0x64d4>
   17414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17418:	cmp	r0, #0
   1741c:	bge	174a8 <__assert_fail@plt+0x645c>
   17420:	b	17440 <__assert_fail@plt+0x63f4>
   17424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17428:	ldr	r1, [fp, #8]
   1742c:	mvn	r2, #0
   17430:	udiv	r1, r2, r1
   17434:	cmp	r0, r1
   17438:	bcc	175bc <__assert_fail@plt+0x6570>
   1743c:	b	175d0 <__assert_fail@plt+0x6584>
   17440:	b	17444 <__assert_fail@plt+0x63f8>
   17444:	ldr	r0, [pc, #720]	; 1771c <__assert_fail@plt+0x66d0>
   17448:	ldr	r1, [fp, #8]
   1744c:	cmp	r1, r0
   17450:	blt	17468 <__assert_fail@plt+0x641c>
   17454:	b	17474 <__assert_fail@plt+0x6428>
   17458:	ldr	r0, [fp, #8]
   1745c:	movw	r1, #0
   17460:	cmp	r1, r0
   17464:	bge	17474 <__assert_fail@plt+0x6428>
   17468:	movw	r0, #1
   1746c:	str	r0, [fp, #-68]	; 0xffffffbc
   17470:	b	1748c <__assert_fail@plt+0x6440>
   17474:	ldr	r0, [fp, #8]
   17478:	movw	r1, #0
   1747c:	sub	r0, r1, r0
   17480:	mvn	r1, #0
   17484:	udiv	r0, r1, r0
   17488:	str	r0, [fp, #-68]	; 0xffffffbc
   1748c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17494:	mvn	r2, #0
   17498:	sub	r1, r2, r1
   1749c:	cmp	r0, r1
   174a0:	bls	175bc <__assert_fail@plt+0x6570>
   174a4:	b	175d0 <__assert_fail@plt+0x6584>
   174a8:	b	174ac <__assert_fail@plt+0x6460>
   174ac:	b	17504 <__assert_fail@plt+0x64b8>
   174b0:	b	17504 <__assert_fail@plt+0x64b8>
   174b4:	ldr	r0, [fp, #8]
   174b8:	cmn	r0, #1
   174bc:	bne	17504 <__assert_fail@plt+0x64b8>
   174c0:	b	174c4 <__assert_fail@plt+0x6478>
   174c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c8:	add	r0, r0, #0
   174cc:	movw	r1, #0
   174d0:	cmp	r1, r0
   174d4:	blt	175bc <__assert_fail@plt+0x6570>
   174d8:	b	175d0 <__assert_fail@plt+0x6584>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	movw	r1, #0
   174e4:	cmp	r1, r0
   174e8:	bge	175d0 <__assert_fail@plt+0x6584>
   174ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f0:	sub	r0, r0, #1
   174f4:	mvn	r1, #0
   174f8:	cmp	r1, r0
   174fc:	blt	175bc <__assert_fail@plt+0x6570>
   17500:	b	175d0 <__assert_fail@plt+0x6584>
   17504:	ldr	r0, [fp, #8]
   17508:	movw	r1, #0
   1750c:	sdiv	r0, r1, r0
   17510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17514:	cmp	r0, r1
   17518:	blt	175bc <__assert_fail@plt+0x6570>
   1751c:	b	175d0 <__assert_fail@plt+0x6584>
   17520:	ldr	r0, [fp, #8]
   17524:	cmp	r0, #0
   17528:	bne	17530 <__assert_fail@plt+0x64e4>
   1752c:	b	175d0 <__assert_fail@plt+0x6584>
   17530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17534:	cmp	r0, #0
   17538:	bge	175a4 <__assert_fail@plt+0x6558>
   1753c:	b	17540 <__assert_fail@plt+0x64f4>
   17540:	b	17588 <__assert_fail@plt+0x653c>
   17544:	b	17588 <__assert_fail@plt+0x653c>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	cmn	r0, #1
   17550:	bne	17588 <__assert_fail@plt+0x653c>
   17554:	b	17558 <__assert_fail@plt+0x650c>
   17558:	ldr	r0, [fp, #8]
   1755c:	add	r0, r0, #0
   17560:	movw	r1, #0
   17564:	cmp	r1, r0
   17568:	blt	175bc <__assert_fail@plt+0x6570>
   1756c:	b	175d0 <__assert_fail@plt+0x6584>
   17570:	ldr	r0, [fp, #8]
   17574:	sub	r0, r0, #1
   17578:	mvn	r1, #0
   1757c:	cmp	r1, r0
   17580:	blt	175bc <__assert_fail@plt+0x6570>
   17584:	b	175d0 <__assert_fail@plt+0x6584>
   17588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1758c:	movw	r1, #0
   17590:	sdiv	r0, r1, r0
   17594:	ldr	r1, [fp, #8]
   17598:	cmp	r0, r1
   1759c:	blt	175bc <__assert_fail@plt+0x6570>
   175a0:	b	175d0 <__assert_fail@plt+0x6584>
   175a4:	ldr	r0, [fp, #8]
   175a8:	mvn	r1, #0
   175ac:	udiv	r0, r1, r0
   175b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175b4:	cmp	r0, r1
   175b8:	bcs	175d0 <__assert_fail@plt+0x6584>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	ldr	r1, [fp, #8]
   175c4:	mul	r0, r0, r1
   175c8:	str	r0, [fp, #-28]	; 0xffffffe4
   175cc:	b	17ad4 <__assert_fail@plt+0x6a88>
   175d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d4:	ldr	r1, [fp, #8]
   175d8:	mul	r0, r0, r1
   175dc:	str	r0, [fp, #-28]	; 0xffffffe4
   175e0:	b	17ae4 <__assert_fail@plt+0x6a98>
   175e4:	b	175e8 <__assert_fail@plt+0x659c>
   175e8:	ldr	r0, [fp, #8]
   175ec:	cmp	r0, #0
   175f0:	bge	17780 <__assert_fail@plt+0x6734>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	cmp	r0, #0
   175fc:	bge	176e8 <__assert_fail@plt+0x669c>
   17600:	b	17604 <__assert_fail@plt+0x65b8>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	ldr	r1, [fp, #8]
   1760c:	asr	r3, r1, #31
   17610:	mvn	r2, #0
   17614:	mvn	ip, #-2147483648	; 0x80000000
   17618:	str	r0, [fp, #-72]	; 0xffffffb8
   1761c:	mov	r0, r2
   17620:	str	r1, [fp, #-76]	; 0xffffffb4
   17624:	mov	r1, ip
   17628:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1762c:	bl	1b3b4 <__assert_fail@plt+0xa368>
   17630:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17634:	subs	r0, r2, r0
   17638:	rscs	r1, r1, r2, asr #31
   1763c:	str	r0, [fp, #-80]	; 0xffffffb0
   17640:	str	r1, [fp, #-84]	; 0xffffffac
   17644:	blt	17860 <__assert_fail@plt+0x6814>
   17648:	b	17874 <__assert_fail@plt+0x6828>
   1764c:	b	17650 <__assert_fail@plt+0x6604>
   17650:	ldr	r0, [pc, #196]	; 1771c <__assert_fail@plt+0x66d0>
   17654:	ldr	r1, [fp, #8]
   17658:	cmp	r1, r0
   1765c:	blt	17674 <__assert_fail@plt+0x6628>
   17660:	b	1768c <__assert_fail@plt+0x6640>
   17664:	ldr	r0, [fp, #8]
   17668:	movw	r1, #0
   1766c:	cmp	r1, r0
   17670:	bge	1768c <__assert_fail@plt+0x6640>
   17674:	mov	r0, #0
   17678:	mvn	r1, #0
   1767c:	str	r1, [fp, #-88]	; 0xffffffa8
   17680:	str	r0, [fp, #-92]	; 0xffffffa4
   17684:	b	176c0 <__assert_fail@plt+0x6674>
   17688:	svcvc	0x00ffffff
   1768c:	ldr	r0, [fp, #8]
   17690:	rsb	r0, r0, #0
   17694:	asr	r3, r0, #31
   17698:	mvn	r1, #0
   1769c:	mvn	r2, #-2147483648	; 0x80000000
   176a0:	str	r0, [fp, #-96]	; 0xffffffa0
   176a4:	mov	r0, r1
   176a8:	mov	r1, r2
   176ac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   176b0:	bl	1b3b4 <__assert_fail@plt+0xa368>
   176b4:	str	r0, [fp, #-88]	; 0xffffffa8
   176b8:	str	r1, [fp, #-92]	; 0xffffffa4
   176bc:	b	176c0 <__assert_fail@plt+0x6674>
   176c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   176c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   176c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176cc:	mvn	r2, r2
   176d0:	subs	r1, r2, r1
   176d4:	rscs	r0, r0, r2, asr #31
   176d8:	str	r1, [fp, #-100]	; 0xffffff9c
   176dc:	str	r0, [fp, #-104]	; 0xffffff98
   176e0:	bge	17860 <__assert_fail@plt+0x6814>
   176e4:	b	17874 <__assert_fail@plt+0x6828>
   176e8:	ldr	r0, [fp, #8]
   176ec:	cmn	r0, #1
   176f0:	bne	17740 <__assert_fail@plt+0x66f4>
   176f4:	b	176f8 <__assert_fail@plt+0x66ac>
   176f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176fc:	mov	r1, #-2147483648	; 0x80000000
   17700:	add	r1, r1, r0, asr #31
   17704:	rsbs	r0, r0, #0
   17708:	rscs	r1, r1, #0
   1770c:	str	r0, [fp, #-108]	; 0xffffff94
   17710:	str	r1, [fp, #-112]	; 0xffffff90
   17714:	blt	17860 <__assert_fail@plt+0x6814>
   17718:	b	17874 <__assert_fail@plt+0x6828>
   1771c:	andhi	r0, r0, r1
   17720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17724:	movw	r1, #0
   17728:	cmp	r1, r0
   1772c:	bge	17874 <__assert_fail@plt+0x6828>
   17730:	mov	r0, #0
   17734:	cmp	r0, #0
   17738:	bne	17860 <__assert_fail@plt+0x6814>
   1773c:	b	17874 <__assert_fail@plt+0x6828>
   17740:	ldr	r0, [fp, #8]
   17744:	asr	r3, r0, #31
   17748:	mov	r1, #0
   1774c:	mov	r2, #-2147483648	; 0x80000000
   17750:	str	r0, [fp, #-116]	; 0xffffff8c
   17754:	mov	r0, r1
   17758:	mov	r1, r2
   1775c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17760:	bl	1b3b4 <__assert_fail@plt+0xa368>
   17764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17768:	subs	r0, r0, r2
   1776c:	sbcs	r1, r1, r2, asr #31
   17770:	str	r0, [fp, #-120]	; 0xffffff88
   17774:	str	r1, [fp, #-124]	; 0xffffff84
   17778:	blt	17860 <__assert_fail@plt+0x6814>
   1777c:	b	17874 <__assert_fail@plt+0x6828>
   17780:	ldr	r0, [fp, #8]
   17784:	cmp	r0, #0
   17788:	bne	17790 <__assert_fail@plt+0x6744>
   1778c:	b	17874 <__assert_fail@plt+0x6828>
   17790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17794:	cmp	r0, #0
   17798:	bge	17820 <__assert_fail@plt+0x67d4>
   1779c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a0:	cmn	r0, #1
   177a4:	bne	177e0 <__assert_fail@plt+0x6794>
   177a8:	b	177ac <__assert_fail@plt+0x6760>
   177ac:	ldr	r0, [fp, #8]
   177b0:	mov	r1, #-2147483648	; 0x80000000
   177b4:	add	r1, r1, r0, asr #31
   177b8:	rsbs	r0, r0, #0
   177bc:	rscs	r1, r1, #0
   177c0:	str	r0, [fp, #-128]	; 0xffffff80
   177c4:	str	r1, [fp, #-132]	; 0xffffff7c
   177c8:	blt	17860 <__assert_fail@plt+0x6814>
   177cc:	b	17874 <__assert_fail@plt+0x6828>
   177d0:	mov	r0, #0
   177d4:	cmp	r0, #0
   177d8:	bne	17860 <__assert_fail@plt+0x6814>
   177dc:	b	17874 <__assert_fail@plt+0x6828>
   177e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177e4:	asr	r3, r0, #31
   177e8:	mov	r1, #0
   177ec:	mov	r2, #-2147483648	; 0x80000000
   177f0:	str	r0, [fp, #-136]	; 0xffffff78
   177f4:	mov	r0, r1
   177f8:	mov	r1, r2
   177fc:	ldr	r2, [fp, #-136]	; 0xffffff78
   17800:	bl	1b3b4 <__assert_fail@plt+0xa368>
   17804:	ldr	r2, [fp, #8]
   17808:	subs	r0, r0, r2
   1780c:	sbcs	r1, r1, r2, asr #31
   17810:	str	r0, [fp, #-140]	; 0xffffff74
   17814:	str	r1, [fp, #-144]	; 0xffffff70
   17818:	blt	17860 <__assert_fail@plt+0x6814>
   1781c:	b	17874 <__assert_fail@plt+0x6828>
   17820:	ldr	r0, [fp, #8]
   17824:	asr	r3, r0, #31
   17828:	mvn	r1, #0
   1782c:	mvn	r2, #-2147483648	; 0x80000000
   17830:	str	r0, [fp, #-148]	; 0xffffff6c
   17834:	mov	r0, r1
   17838:	mov	r1, r2
   1783c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   17840:	bl	1b3b4 <__assert_fail@plt+0xa368>
   17844:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17848:	subs	r0, r0, r2
   1784c:	sbcs	r1, r1, r2, asr #31
   17850:	str	r0, [fp, #-152]	; 0xffffff68
   17854:	str	r1, [fp, #-156]	; 0xffffff64
   17858:	bge	17874 <__assert_fail@plt+0x6828>
   1785c:	b	17860 <__assert_fail@plt+0x6814>
   17860:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17864:	ldr	r1, [fp, #8]
   17868:	mul	r0, r0, r1
   1786c:	str	r0, [fp, #-28]	; 0xffffffe4
   17870:	b	17ad4 <__assert_fail@plt+0x6a88>
   17874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17878:	ldr	r1, [fp, #8]
   1787c:	mul	r0, r0, r1
   17880:	str	r0, [fp, #-28]	; 0xffffffe4
   17884:	b	17ae4 <__assert_fail@plt+0x6a98>
   17888:	ldr	r0, [fp, #8]
   1788c:	cmp	r0, #0
   17890:	bge	179f0 <__assert_fail@plt+0x69a4>
   17894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17898:	cmp	r0, #0
   1789c:	bge	17978 <__assert_fail@plt+0x692c>
   178a0:	b	178e8 <__assert_fail@plt+0x689c>
   178a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178a8:	ldr	r1, [fp, #8]
   178ac:	asr	r3, r1, #31
   178b0:	mvn	r2, #0
   178b4:	str	r0, [fp, #-160]	; 0xffffff60
   178b8:	mov	r0, r2
   178bc:	str	r1, [fp, #-164]	; 0xffffff5c
   178c0:	mov	r1, r2
   178c4:	ldr	r2, [fp, #-164]	; 0xffffff5c
   178c8:	bl	1b488 <__assert_fail@plt+0xa43c>
   178cc:	ldr	r2, [fp, #-160]	; 0xffffff60
   178d0:	subs	r0, r2, r0
   178d4:	rscs	r1, r1, r2, asr #31
   178d8:	str	r0, [fp, #-168]	; 0xffffff58
   178dc:	str	r1, [fp, #-172]	; 0xffffff54
   178e0:	bcc	17aac <__assert_fail@plt+0x6a60>
   178e4:	b	17ac0 <__assert_fail@plt+0x6a74>
   178e8:	b	178ec <__assert_fail@plt+0x68a0>
   178ec:	ldr	r0, [pc, #-472]	; 1771c <__assert_fail@plt+0x66d0>
   178f0:	ldr	r1, [fp, #8]
   178f4:	cmp	r1, r0
   178f8:	blt	17910 <__assert_fail@plt+0x68c4>
   178fc:	b	17924 <__assert_fail@plt+0x68d8>
   17900:	ldr	r0, [fp, #8]
   17904:	movw	r1, #0
   17908:	cmp	r1, r0
   1790c:	bge	17924 <__assert_fail@plt+0x68d8>
   17910:	mov	r0, #1
   17914:	mvn	r1, #0
   17918:	str	r1, [fp, #-176]	; 0xffffff50
   1791c:	str	r0, [fp, #-180]	; 0xffffff4c
   17920:	b	17950 <__assert_fail@plt+0x6904>
   17924:	ldr	r0, [fp, #8]
   17928:	rsb	r0, r0, #0
   1792c:	asr	r3, r0, #31
   17930:	mvn	r1, #0
   17934:	str	r0, [fp, #-184]	; 0xffffff48
   17938:	mov	r0, r1
   1793c:	ldr	r2, [fp, #-184]	; 0xffffff48
   17940:	bl	1b488 <__assert_fail@plt+0xa43c>
   17944:	str	r0, [fp, #-176]	; 0xffffff50
   17948:	str	r1, [fp, #-180]	; 0xffffff4c
   1794c:	b	17950 <__assert_fail@plt+0x6904>
   17950:	ldr	r0, [fp, #-180]	; 0xffffff4c
   17954:	ldr	r1, [fp, #-176]	; 0xffffff50
   17958:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1795c:	mvn	r2, r2
   17960:	subs	r1, r2, r1
   17964:	rscs	r0, r0, r2, asr #31
   17968:	str	r1, [sp, #188]	; 0xbc
   1796c:	str	r0, [sp, #184]	; 0xb8
   17970:	bcs	17aac <__assert_fail@plt+0x6a60>
   17974:	b	17ac0 <__assert_fail@plt+0x6a74>
   17978:	b	1797c <__assert_fail@plt+0x6930>
   1797c:	b	179d4 <__assert_fail@plt+0x6988>
   17980:	b	179d4 <__assert_fail@plt+0x6988>
   17984:	ldr	r0, [fp, #8]
   17988:	cmn	r0, #1
   1798c:	bne	179d4 <__assert_fail@plt+0x6988>
   17990:	b	17994 <__assert_fail@plt+0x6948>
   17994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17998:	add	r0, r0, #0
   1799c:	movw	r1, #0
   179a0:	cmp	r1, r0
   179a4:	blt	17aac <__assert_fail@plt+0x6a60>
   179a8:	b	17ac0 <__assert_fail@plt+0x6a74>
   179ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b0:	movw	r1, #0
   179b4:	cmp	r1, r0
   179b8:	bge	17ac0 <__assert_fail@plt+0x6a74>
   179bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179c0:	sub	r0, r0, #1
   179c4:	mvn	r1, #0
   179c8:	cmp	r1, r0
   179cc:	blt	17aac <__assert_fail@plt+0x6a60>
   179d0:	b	17ac0 <__assert_fail@plt+0x6a74>
   179d4:	ldr	r0, [fp, #8]
   179d8:	movw	r1, #0
   179dc:	sdiv	r0, r1, r0
   179e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179e4:	cmp	r0, r1
   179e8:	blt	17aac <__assert_fail@plt+0x6a60>
   179ec:	b	17ac0 <__assert_fail@plt+0x6a74>
   179f0:	ldr	r0, [fp, #8]
   179f4:	cmp	r0, #0
   179f8:	bne	17a00 <__assert_fail@plt+0x69b4>
   179fc:	b	17ac0 <__assert_fail@plt+0x6a74>
   17a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a04:	cmp	r0, #0
   17a08:	bge	17a74 <__assert_fail@plt+0x6a28>
   17a0c:	b	17a10 <__assert_fail@plt+0x69c4>
   17a10:	b	17a58 <__assert_fail@plt+0x6a0c>
   17a14:	b	17a58 <__assert_fail@plt+0x6a0c>
   17a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a1c:	cmn	r0, #1
   17a20:	bne	17a58 <__assert_fail@plt+0x6a0c>
   17a24:	b	17a28 <__assert_fail@plt+0x69dc>
   17a28:	ldr	r0, [fp, #8]
   17a2c:	add	r0, r0, #0
   17a30:	movw	r1, #0
   17a34:	cmp	r1, r0
   17a38:	blt	17aac <__assert_fail@plt+0x6a60>
   17a3c:	b	17ac0 <__assert_fail@plt+0x6a74>
   17a40:	ldr	r0, [fp, #8]
   17a44:	sub	r0, r0, #1
   17a48:	mvn	r1, #0
   17a4c:	cmp	r1, r0
   17a50:	blt	17aac <__assert_fail@plt+0x6a60>
   17a54:	b	17ac0 <__assert_fail@plt+0x6a74>
   17a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a5c:	movw	r1, #0
   17a60:	sdiv	r0, r1, r0
   17a64:	ldr	r1, [fp, #8]
   17a68:	cmp	r0, r1
   17a6c:	blt	17aac <__assert_fail@plt+0x6a60>
   17a70:	b	17ac0 <__assert_fail@plt+0x6a74>
   17a74:	ldr	r0, [fp, #8]
   17a78:	asr	r3, r0, #31
   17a7c:	mvn	r1, #0
   17a80:	str	r0, [sp, #180]	; 0xb4
   17a84:	mov	r0, r1
   17a88:	ldr	r2, [sp, #180]	; 0xb4
   17a8c:	bl	1b488 <__assert_fail@plt+0xa43c>
   17a90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a94:	subs	r0, r0, r2
   17a98:	sbcs	r1, r1, r2, asr #31
   17a9c:	str	r0, [sp, #176]	; 0xb0
   17aa0:	str	r1, [sp, #172]	; 0xac
   17aa4:	bcs	17ac0 <__assert_fail@plt+0x6a74>
   17aa8:	b	17aac <__assert_fail@plt+0x6a60>
   17aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab0:	ldr	r1, [fp, #8]
   17ab4:	mul	r0, r0, r1
   17ab8:	str	r0, [fp, #-28]	; 0xffffffe4
   17abc:	b	17ad4 <__assert_fail@plt+0x6a88>
   17ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ac4:	ldr	r1, [fp, #8]
   17ac8:	mul	r0, r0, r1
   17acc:	str	r0, [fp, #-28]	; 0xffffffe4
   17ad0:	b	17ae4 <__assert_fail@plt+0x6a98>
   17ad4:	ldr	r0, [pc, #-1108]	; 17688 <__assert_fail@plt+0x663c>
   17ad8:	str	r0, [sp, #168]	; 0xa8
   17adc:	b	17b04 <__assert_fail@plt+0x6ab8>
   17ae0:			; <UNDEFINED> instruction: 0xffff8000
   17ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ae8:	cmp	r0, #64	; 0x40
   17aec:	movw	r0, #0
   17af0:	movlt	r0, #1
   17af4:	tst	r0, #1
   17af8:	movw	r0, #64	; 0x40
   17afc:	moveq	r0, #0
   17b00:	str	r0, [sp, #168]	; 0xa8
   17b04:	ldr	r0, [sp, #168]	; 0xa8
   17b08:	str	r0, [fp, #-32]	; 0xffffffe0
   17b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b10:	cmp	r0, #0
   17b14:	beq	17b44 <__assert_fail@plt+0x6af8>
   17b18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b1c:	ldr	r1, [fp, #8]
   17b20:	sdiv	r0, r0, r1
   17b24:	str	r0, [fp, #-24]	; 0xffffffe8
   17b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b2c:	mov	r1, r0
   17b30:	ldr	r2, [fp, #8]
   17b34:	sdiv	r3, r0, r2
   17b38:	mls	r0, r3, r2, r0
   17b3c:	sub	r0, r1, r0
   17b40:	str	r0, [fp, #-28]	; 0xffffffe4
   17b44:	ldr	r0, [fp, #-4]
   17b48:	movw	r1, #0
   17b4c:	cmp	r0, r1
   17b50:	bne	17b60 <__assert_fail@plt+0x6b14>
   17b54:	ldr	r0, [fp, #-8]
   17b58:	movw	r1, #0
   17b5c:	str	r1, [r0]
   17b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b64:	ldr	r1, [fp, #-20]	; 0xffffffec
   17b68:	sub	r0, r0, r1
   17b6c:	ldr	r1, [fp, #-12]
   17b70:	cmp	r0, r1
   17b74:	bge	18fac <__assert_fail@plt+0x7f60>
   17b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   17b7c:	ldr	r1, [fp, #-12]
   17b80:	add	r1, r0, r1
   17b84:	mov	r2, #1
   17b88:	cmp	r1, r0
   17b8c:	movwvc	r2, #0
   17b90:	str	r1, [fp, #-24]	; 0xffffffe8
   17b94:	tst	r2, #1
   17b98:	bne	18fa8 <__assert_fail@plt+0x7f5c>
   17b9c:	ldr	r0, [fp, #-16]
   17ba0:	movw	r1, #0
   17ba4:	cmp	r1, r0
   17ba8:	bgt	17bbc <__assert_fail@plt+0x6b70>
   17bac:	ldr	r0, [fp, #-16]
   17bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bb4:	cmp	r0, r1
   17bb8:	blt	18fa8 <__assert_fail@plt+0x7f5c>
   17bbc:	b	17f98 <__assert_fail@plt+0x6f4c>
   17bc0:	b	17bc4 <__assert_fail@plt+0x6b78>
   17bc4:	ldr	r0, [fp, #8]
   17bc8:	cmp	r0, #0
   17bcc:	bge	17ce0 <__assert_fail@plt+0x6c94>
   17bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd4:	cmp	r0, #0
   17bd8:	bge	17c64 <__assert_fail@plt+0x6c18>
   17bdc:	b	17be0 <__assert_fail@plt+0x6b94>
   17be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be4:	ldr	r1, [fp, #8]
   17be8:	movw	r2, #127	; 0x7f
   17bec:	sdiv	r1, r2, r1
   17bf0:	cmp	r0, r1
   17bf4:	blt	17d80 <__assert_fail@plt+0x6d34>
   17bf8:	b	17d98 <__assert_fail@plt+0x6d4c>
   17bfc:	b	17c00 <__assert_fail@plt+0x6bb4>
   17c00:	ldr	r0, [pc, #-1260]	; 1771c <__assert_fail@plt+0x66d0>
   17c04:	ldr	r1, [fp, #8]
   17c08:	cmp	r1, r0
   17c0c:	blt	17c24 <__assert_fail@plt+0x6bd8>
   17c10:	b	17c30 <__assert_fail@plt+0x6be4>
   17c14:	ldr	r0, [fp, #8]
   17c18:	movw	r1, #0
   17c1c:	cmp	r1, r0
   17c20:	bge	17c30 <__assert_fail@plt+0x6be4>
   17c24:	movw	r0, #0
   17c28:	str	r0, [sp, #164]	; 0xa4
   17c2c:	b	17c48 <__assert_fail@plt+0x6bfc>
   17c30:	ldr	r0, [fp, #8]
   17c34:	movw	r1, #0
   17c38:	sub	r0, r1, r0
   17c3c:	movw	r1, #127	; 0x7f
   17c40:	sdiv	r0, r1, r0
   17c44:	str	r0, [sp, #164]	; 0xa4
   17c48:	ldr	r0, [sp, #164]	; 0xa4
   17c4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c50:	mvn	r2, #0
   17c54:	sub	r1, r2, r1
   17c58:	cmp	r0, r1
   17c5c:	ble	17d80 <__assert_fail@plt+0x6d34>
   17c60:	b	17d98 <__assert_fail@plt+0x6d4c>
   17c64:	b	17c68 <__assert_fail@plt+0x6c1c>
   17c68:	b	17cc4 <__assert_fail@plt+0x6c78>
   17c6c:	b	17cc4 <__assert_fail@plt+0x6c78>
   17c70:	ldr	r0, [fp, #8]
   17c74:	cmn	r0, #1
   17c78:	bne	17cc4 <__assert_fail@plt+0x6c78>
   17c7c:	b	17c80 <__assert_fail@plt+0x6c34>
   17c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c84:	mvn	r1, #127	; 0x7f
   17c88:	add	r0, r0, r1
   17c8c:	movw	r1, #0
   17c90:	cmp	r1, r0
   17c94:	blt	17d80 <__assert_fail@plt+0x6d34>
   17c98:	b	17d98 <__assert_fail@plt+0x6d4c>
   17c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ca0:	movw	r1, #0
   17ca4:	cmp	r1, r0
   17ca8:	bge	17d98 <__assert_fail@plt+0x6d4c>
   17cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb0:	sub	r0, r0, #1
   17cb4:	movw	r1, #127	; 0x7f
   17cb8:	cmp	r1, r0
   17cbc:	blt	17d80 <__assert_fail@plt+0x6d34>
   17cc0:	b	17d98 <__assert_fail@plt+0x6d4c>
   17cc4:	ldr	r0, [fp, #8]
   17cc8:	mvn	r1, #127	; 0x7f
   17ccc:	sdiv	r0, r1, r0
   17cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cd4:	cmp	r0, r1
   17cd8:	blt	17d80 <__assert_fail@plt+0x6d34>
   17cdc:	b	17d98 <__assert_fail@plt+0x6d4c>
   17ce0:	ldr	r0, [fp, #8]
   17ce4:	cmp	r0, #0
   17ce8:	bne	17cf0 <__assert_fail@plt+0x6ca4>
   17cec:	b	17d98 <__assert_fail@plt+0x6d4c>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	cmp	r0, #0
   17cf8:	bge	17d68 <__assert_fail@plt+0x6d1c>
   17cfc:	b	17d00 <__assert_fail@plt+0x6cb4>
   17d00:	b	17d4c <__assert_fail@plt+0x6d00>
   17d04:	b	17d4c <__assert_fail@plt+0x6d00>
   17d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d0c:	cmn	r0, #1
   17d10:	bne	17d4c <__assert_fail@plt+0x6d00>
   17d14:	b	17d18 <__assert_fail@plt+0x6ccc>
   17d18:	ldr	r0, [fp, #8]
   17d1c:	mvn	r1, #127	; 0x7f
   17d20:	add	r0, r0, r1
   17d24:	movw	r1, #0
   17d28:	cmp	r1, r0
   17d2c:	blt	17d80 <__assert_fail@plt+0x6d34>
   17d30:	b	17d98 <__assert_fail@plt+0x6d4c>
   17d34:	ldr	r0, [fp, #8]
   17d38:	sub	r0, r0, #1
   17d3c:	movw	r1, #127	; 0x7f
   17d40:	cmp	r1, r0
   17d44:	blt	17d80 <__assert_fail@plt+0x6d34>
   17d48:	b	17d98 <__assert_fail@plt+0x6d4c>
   17d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d50:	mvn	r1, #127	; 0x7f
   17d54:	sdiv	r0, r1, r0
   17d58:	ldr	r1, [fp, #8]
   17d5c:	cmp	r0, r1
   17d60:	blt	17d80 <__assert_fail@plt+0x6d34>
   17d64:	b	17d98 <__assert_fail@plt+0x6d4c>
   17d68:	ldr	r0, [fp, #8]
   17d6c:	movw	r1, #127	; 0x7f
   17d70:	sdiv	r0, r1, r0
   17d74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d78:	cmp	r0, r1
   17d7c:	bge	17d98 <__assert_fail@plt+0x6d4c>
   17d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d84:	ldr	r1, [fp, #8]
   17d88:	mul	r0, r0, r1
   17d8c:	sxtb	r0, r0
   17d90:	str	r0, [fp, #-28]	; 0xffffffe4
   17d94:	b	18fa8 <__assert_fail@plt+0x7f5c>
   17d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d9c:	ldr	r1, [fp, #8]
   17da0:	mul	r0, r0, r1
   17da4:	sxtb	r0, r0
   17da8:	str	r0, [fp, #-28]	; 0xffffffe4
   17dac:	b	18fac <__assert_fail@plt+0x7f60>
   17db0:	ldr	r0, [fp, #8]
   17db4:	cmp	r0, #0
   17db8:	bge	17ec8 <__assert_fail@plt+0x6e7c>
   17dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc0:	cmp	r0, #0
   17dc4:	bge	17e50 <__assert_fail@plt+0x6e04>
   17dc8:	b	17dcc <__assert_fail@plt+0x6d80>
   17dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dd0:	ldr	r1, [fp, #8]
   17dd4:	movw	r2, #255	; 0xff
   17dd8:	sdiv	r1, r2, r1
   17ddc:	cmp	r0, r1
   17de0:	blt	17f64 <__assert_fail@plt+0x6f18>
   17de4:	b	17f80 <__assert_fail@plt+0x6f34>
   17de8:	b	17dec <__assert_fail@plt+0x6da0>
   17dec:	ldr	r0, [pc, #-1752]	; 1771c <__assert_fail@plt+0x66d0>
   17df0:	ldr	r1, [fp, #8]
   17df4:	cmp	r1, r0
   17df8:	blt	17e10 <__assert_fail@plt+0x6dc4>
   17dfc:	b	17e1c <__assert_fail@plt+0x6dd0>
   17e00:	ldr	r0, [fp, #8]
   17e04:	movw	r1, #0
   17e08:	cmp	r1, r0
   17e0c:	bge	17e1c <__assert_fail@plt+0x6dd0>
   17e10:	movw	r0, #0
   17e14:	str	r0, [sp, #160]	; 0xa0
   17e18:	b	17e34 <__assert_fail@plt+0x6de8>
   17e1c:	ldr	r0, [fp, #8]
   17e20:	movw	r1, #0
   17e24:	sub	r0, r1, r0
   17e28:	movw	r1, #255	; 0xff
   17e2c:	sdiv	r0, r1, r0
   17e30:	str	r0, [sp, #160]	; 0xa0
   17e34:	ldr	r0, [sp, #160]	; 0xa0
   17e38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e3c:	mvn	r2, #0
   17e40:	sub	r1, r2, r1
   17e44:	cmp	r0, r1
   17e48:	ble	17f64 <__assert_fail@plt+0x6f18>
   17e4c:	b	17f80 <__assert_fail@plt+0x6f34>
   17e50:	b	17e54 <__assert_fail@plt+0x6e08>
   17e54:	b	17eac <__assert_fail@plt+0x6e60>
   17e58:	b	17eac <__assert_fail@plt+0x6e60>
   17e5c:	ldr	r0, [fp, #8]
   17e60:	cmn	r0, #1
   17e64:	bne	17eac <__assert_fail@plt+0x6e60>
   17e68:	b	17e6c <__assert_fail@plt+0x6e20>
   17e6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e70:	add	r0, r0, #0
   17e74:	movw	r1, #0
   17e78:	cmp	r1, r0
   17e7c:	blt	17f64 <__assert_fail@plt+0x6f18>
   17e80:	b	17f80 <__assert_fail@plt+0x6f34>
   17e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e88:	movw	r1, #0
   17e8c:	cmp	r1, r0
   17e90:	bge	17f80 <__assert_fail@plt+0x6f34>
   17e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e98:	sub	r0, r0, #1
   17e9c:	mvn	r1, #0
   17ea0:	cmp	r1, r0
   17ea4:	blt	17f64 <__assert_fail@plt+0x6f18>
   17ea8:	b	17f80 <__assert_fail@plt+0x6f34>
   17eac:	ldr	r0, [fp, #8]
   17eb0:	movw	r1, #0
   17eb4:	sdiv	r0, r1, r0
   17eb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ebc:	cmp	r0, r1
   17ec0:	blt	17f64 <__assert_fail@plt+0x6f18>
   17ec4:	b	17f80 <__assert_fail@plt+0x6f34>
   17ec8:	ldr	r0, [fp, #8]
   17ecc:	cmp	r0, #0
   17ed0:	bne	17ed8 <__assert_fail@plt+0x6e8c>
   17ed4:	b	17f80 <__assert_fail@plt+0x6f34>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	cmp	r0, #0
   17ee0:	bge	17f4c <__assert_fail@plt+0x6f00>
   17ee4:	b	17ee8 <__assert_fail@plt+0x6e9c>
   17ee8:	b	17f30 <__assert_fail@plt+0x6ee4>
   17eec:	b	17f30 <__assert_fail@plt+0x6ee4>
   17ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef4:	cmn	r0, #1
   17ef8:	bne	17f30 <__assert_fail@plt+0x6ee4>
   17efc:	b	17f00 <__assert_fail@plt+0x6eb4>
   17f00:	ldr	r0, [fp, #8]
   17f04:	add	r0, r0, #0
   17f08:	movw	r1, #0
   17f0c:	cmp	r1, r0
   17f10:	blt	17f64 <__assert_fail@plt+0x6f18>
   17f14:	b	17f80 <__assert_fail@plt+0x6f34>
   17f18:	ldr	r0, [fp, #8]
   17f1c:	sub	r0, r0, #1
   17f20:	mvn	r1, #0
   17f24:	cmp	r1, r0
   17f28:	blt	17f64 <__assert_fail@plt+0x6f18>
   17f2c:	b	17f80 <__assert_fail@plt+0x6f34>
   17f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f34:	movw	r1, #0
   17f38:	sdiv	r0, r1, r0
   17f3c:	ldr	r1, [fp, #8]
   17f40:	cmp	r0, r1
   17f44:	blt	17f64 <__assert_fail@plt+0x6f18>
   17f48:	b	17f80 <__assert_fail@plt+0x6f34>
   17f4c:	ldr	r0, [fp, #8]
   17f50:	movw	r1, #255	; 0xff
   17f54:	sdiv	r0, r1, r0
   17f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f5c:	cmp	r0, r1
   17f60:	bge	17f80 <__assert_fail@plt+0x6f34>
   17f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f68:	ldr	r1, [fp, #8]
   17f6c:	mul	r0, r0, r1
   17f70:	and	r0, r0, #255	; 0xff
   17f74:	str	r0, [fp, #-28]	; 0xffffffe4
   17f78:	b	18fa8 <__assert_fail@plt+0x7f5c>
   17f7c:	andhi	r0, r0, r0
   17f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f84:	ldr	r1, [fp, #8]
   17f88:	mul	r0, r0, r1
   17f8c:	and	r0, r0, #255	; 0xff
   17f90:	str	r0, [fp, #-28]	; 0xffffffe4
   17f94:	b	18fac <__assert_fail@plt+0x7f60>
   17f98:	b	18370 <__assert_fail@plt+0x7324>
   17f9c:	b	17fa0 <__assert_fail@plt+0x6f54>
   17fa0:	ldr	r0, [fp, #8]
   17fa4:	cmp	r0, #0
   17fa8:	bge	180bc <__assert_fail@plt+0x7070>
   17fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fb0:	cmp	r0, #0
   17fb4:	bge	18040 <__assert_fail@plt+0x6ff4>
   17fb8:	b	17fbc <__assert_fail@plt+0x6f70>
   17fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc0:	ldr	r1, [fp, #8]
   17fc4:	movw	r2, #32767	; 0x7fff
   17fc8:	sdiv	r1, r2, r1
   17fcc:	cmp	r0, r1
   17fd0:	blt	1815c <__assert_fail@plt+0x7110>
   17fd4:	b	18174 <__assert_fail@plt+0x7128>
   17fd8:	b	17fdc <__assert_fail@plt+0x6f90>
   17fdc:	ldr	r0, [pc, #4084]	; 18fd8 <__assert_fail@plt+0x7f8c>
   17fe0:	ldr	r1, [fp, #8]
   17fe4:	cmp	r1, r0
   17fe8:	blt	18000 <__assert_fail@plt+0x6fb4>
   17fec:	b	1800c <__assert_fail@plt+0x6fc0>
   17ff0:	ldr	r0, [fp, #8]
   17ff4:	movw	r1, #0
   17ff8:	cmp	r1, r0
   17ffc:	bge	1800c <__assert_fail@plt+0x6fc0>
   18000:	movw	r0, #0
   18004:	str	r0, [sp, #156]	; 0x9c
   18008:	b	18024 <__assert_fail@plt+0x6fd8>
   1800c:	ldr	r0, [fp, #8]
   18010:	movw	r1, #0
   18014:	sub	r0, r1, r0
   18018:	movw	r1, #32767	; 0x7fff
   1801c:	sdiv	r0, r1, r0
   18020:	str	r0, [sp, #156]	; 0x9c
   18024:	ldr	r0, [sp, #156]	; 0x9c
   18028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1802c:	mvn	r2, #0
   18030:	sub	r1, r2, r1
   18034:	cmp	r0, r1
   18038:	ble	1815c <__assert_fail@plt+0x7110>
   1803c:	b	18174 <__assert_fail@plt+0x7128>
   18040:	b	18044 <__assert_fail@plt+0x6ff8>
   18044:	b	180a0 <__assert_fail@plt+0x7054>
   18048:	b	180a0 <__assert_fail@plt+0x7054>
   1804c:	ldr	r0, [fp, #8]
   18050:	cmn	r0, #1
   18054:	bne	180a0 <__assert_fail@plt+0x7054>
   18058:	b	1805c <__assert_fail@plt+0x7010>
   1805c:	ldr	r0, [pc, #3964]	; 18fe0 <__assert_fail@plt+0x7f94>
   18060:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18064:	add	r0, r1, r0
   18068:	movw	r1, #0
   1806c:	cmp	r1, r0
   18070:	blt	1815c <__assert_fail@plt+0x7110>
   18074:	b	18174 <__assert_fail@plt+0x7128>
   18078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1807c:	movw	r1, #0
   18080:	cmp	r1, r0
   18084:	bge	18174 <__assert_fail@plt+0x7128>
   18088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1808c:	sub	r0, r0, #1
   18090:	movw	r1, #32767	; 0x7fff
   18094:	cmp	r1, r0
   18098:	blt	1815c <__assert_fail@plt+0x7110>
   1809c:	b	18174 <__assert_fail@plt+0x7128>
   180a0:	ldr	r0, [pc, #3896]	; 18fe0 <__assert_fail@plt+0x7f94>
   180a4:	ldr	r1, [fp, #8]
   180a8:	sdiv	r0, r0, r1
   180ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180b0:	cmp	r0, r1
   180b4:	blt	1815c <__assert_fail@plt+0x7110>
   180b8:	b	18174 <__assert_fail@plt+0x7128>
   180bc:	ldr	r0, [fp, #8]
   180c0:	cmp	r0, #0
   180c4:	bne	180cc <__assert_fail@plt+0x7080>
   180c8:	b	18174 <__assert_fail@plt+0x7128>
   180cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d0:	cmp	r0, #0
   180d4:	bge	18144 <__assert_fail@plt+0x70f8>
   180d8:	b	180dc <__assert_fail@plt+0x7090>
   180dc:	b	18128 <__assert_fail@plt+0x70dc>
   180e0:	b	18128 <__assert_fail@plt+0x70dc>
   180e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180e8:	cmn	r0, #1
   180ec:	bne	18128 <__assert_fail@plt+0x70dc>
   180f0:	b	180f4 <__assert_fail@plt+0x70a8>
   180f4:	ldr	r0, [pc, #3812]	; 18fe0 <__assert_fail@plt+0x7f94>
   180f8:	ldr	r1, [fp, #8]
   180fc:	add	r0, r1, r0
   18100:	movw	r1, #0
   18104:	cmp	r1, r0
   18108:	blt	1815c <__assert_fail@plt+0x7110>
   1810c:	b	18174 <__assert_fail@plt+0x7128>
   18110:	ldr	r0, [fp, #8]
   18114:	sub	r0, r0, #1
   18118:	movw	r1, #32767	; 0x7fff
   1811c:	cmp	r1, r0
   18120:	blt	1815c <__assert_fail@plt+0x7110>
   18124:	b	18174 <__assert_fail@plt+0x7128>
   18128:	ldr	r0, [pc, #3760]	; 18fe0 <__assert_fail@plt+0x7f94>
   1812c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18130:	sdiv	r0, r0, r1
   18134:	ldr	r1, [fp, #8]
   18138:	cmp	r0, r1
   1813c:	blt	1815c <__assert_fail@plt+0x7110>
   18140:	b	18174 <__assert_fail@plt+0x7128>
   18144:	ldr	r0, [fp, #8]
   18148:	movw	r1, #32767	; 0x7fff
   1814c:	sdiv	r0, r1, r0
   18150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18154:	cmp	r0, r1
   18158:	bge	18174 <__assert_fail@plt+0x7128>
   1815c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18160:	ldr	r1, [fp, #8]
   18164:	mul	r0, r0, r1
   18168:	sxth	r0, r0
   1816c:	str	r0, [fp, #-28]	; 0xffffffe4
   18170:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18178:	ldr	r1, [fp, #8]
   1817c:	mul	r0, r0, r1
   18180:	sxth	r0, r0
   18184:	str	r0, [fp, #-28]	; 0xffffffe4
   18188:	b	18fac <__assert_fail@plt+0x7f60>
   1818c:	ldr	r0, [fp, #8]
   18190:	cmp	r0, #0
   18194:	bge	182a4 <__assert_fail@plt+0x7258>
   18198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1819c:	cmp	r0, #0
   181a0:	bge	1822c <__assert_fail@plt+0x71e0>
   181a4:	b	181a8 <__assert_fail@plt+0x715c>
   181a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181ac:	ldr	r1, [fp, #8]
   181b0:	movw	r2, #65535	; 0xffff
   181b4:	sdiv	r1, r2, r1
   181b8:	cmp	r0, r1
   181bc:	blt	18340 <__assert_fail@plt+0x72f4>
   181c0:	b	18358 <__assert_fail@plt+0x730c>
   181c4:	b	181c8 <__assert_fail@plt+0x717c>
   181c8:	ldr	r0, [pc, #3592]	; 18fd8 <__assert_fail@plt+0x7f8c>
   181cc:	ldr	r1, [fp, #8]
   181d0:	cmp	r1, r0
   181d4:	blt	181ec <__assert_fail@plt+0x71a0>
   181d8:	b	181f8 <__assert_fail@plt+0x71ac>
   181dc:	ldr	r0, [fp, #8]
   181e0:	movw	r1, #0
   181e4:	cmp	r1, r0
   181e8:	bge	181f8 <__assert_fail@plt+0x71ac>
   181ec:	movw	r0, #0
   181f0:	str	r0, [sp, #152]	; 0x98
   181f4:	b	18210 <__assert_fail@plt+0x71c4>
   181f8:	ldr	r0, [fp, #8]
   181fc:	movw	r1, #0
   18200:	sub	r0, r1, r0
   18204:	movw	r1, #65535	; 0xffff
   18208:	sdiv	r0, r1, r0
   1820c:	str	r0, [sp, #152]	; 0x98
   18210:	ldr	r0, [sp, #152]	; 0x98
   18214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18218:	mvn	r2, #0
   1821c:	sub	r1, r2, r1
   18220:	cmp	r0, r1
   18224:	ble	18340 <__assert_fail@plt+0x72f4>
   18228:	b	18358 <__assert_fail@plt+0x730c>
   1822c:	b	18230 <__assert_fail@plt+0x71e4>
   18230:	b	18288 <__assert_fail@plt+0x723c>
   18234:	b	18288 <__assert_fail@plt+0x723c>
   18238:	ldr	r0, [fp, #8]
   1823c:	cmn	r0, #1
   18240:	bne	18288 <__assert_fail@plt+0x723c>
   18244:	b	18248 <__assert_fail@plt+0x71fc>
   18248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1824c:	add	r0, r0, #0
   18250:	movw	r1, #0
   18254:	cmp	r1, r0
   18258:	blt	18340 <__assert_fail@plt+0x72f4>
   1825c:	b	18358 <__assert_fail@plt+0x730c>
   18260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18264:	movw	r1, #0
   18268:	cmp	r1, r0
   1826c:	bge	18358 <__assert_fail@plt+0x730c>
   18270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18274:	sub	r0, r0, #1
   18278:	mvn	r1, #0
   1827c:	cmp	r1, r0
   18280:	blt	18340 <__assert_fail@plt+0x72f4>
   18284:	b	18358 <__assert_fail@plt+0x730c>
   18288:	ldr	r0, [fp, #8]
   1828c:	movw	r1, #0
   18290:	sdiv	r0, r1, r0
   18294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18298:	cmp	r0, r1
   1829c:	blt	18340 <__assert_fail@plt+0x72f4>
   182a0:	b	18358 <__assert_fail@plt+0x730c>
   182a4:	ldr	r0, [fp, #8]
   182a8:	cmp	r0, #0
   182ac:	bne	182b4 <__assert_fail@plt+0x7268>
   182b0:	b	18358 <__assert_fail@plt+0x730c>
   182b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182b8:	cmp	r0, #0
   182bc:	bge	18328 <__assert_fail@plt+0x72dc>
   182c0:	b	182c4 <__assert_fail@plt+0x7278>
   182c4:	b	1830c <__assert_fail@plt+0x72c0>
   182c8:	b	1830c <__assert_fail@plt+0x72c0>
   182cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d0:	cmn	r0, #1
   182d4:	bne	1830c <__assert_fail@plt+0x72c0>
   182d8:	b	182dc <__assert_fail@plt+0x7290>
   182dc:	ldr	r0, [fp, #8]
   182e0:	add	r0, r0, #0
   182e4:	movw	r1, #0
   182e8:	cmp	r1, r0
   182ec:	blt	18340 <__assert_fail@plt+0x72f4>
   182f0:	b	18358 <__assert_fail@plt+0x730c>
   182f4:	ldr	r0, [fp, #8]
   182f8:	sub	r0, r0, #1
   182fc:	mvn	r1, #0
   18300:	cmp	r1, r0
   18304:	blt	18340 <__assert_fail@plt+0x72f4>
   18308:	b	18358 <__assert_fail@plt+0x730c>
   1830c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18310:	movw	r1, #0
   18314:	sdiv	r0, r1, r0
   18318:	ldr	r1, [fp, #8]
   1831c:	cmp	r0, r1
   18320:	blt	18340 <__assert_fail@plt+0x72f4>
   18324:	b	18358 <__assert_fail@plt+0x730c>
   18328:	ldr	r0, [fp, #8]
   1832c:	movw	r1, #65535	; 0xffff
   18330:	sdiv	r0, r1, r0
   18334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18338:	cmp	r0, r1
   1833c:	bge	18358 <__assert_fail@plt+0x730c>
   18340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18344:	ldr	r1, [fp, #8]
   18348:	mul	r0, r0, r1
   1834c:	uxth	r0, r0
   18350:	str	r0, [fp, #-28]	; 0xffffffe4
   18354:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1835c:	ldr	r1, [fp, #8]
   18360:	mul	r0, r0, r1
   18364:	uxth	r0, r0
   18368:	str	r0, [fp, #-28]	; 0xffffffe4
   1836c:	b	18fac <__assert_fail@plt+0x7f60>
   18370:	b	18374 <__assert_fail@plt+0x7328>
   18374:	b	18378 <__assert_fail@plt+0x732c>
   18378:	ldr	r0, [fp, #8]
   1837c:	cmp	r0, #0
   18380:	bge	18484 <__assert_fail@plt+0x7438>
   18384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18388:	cmp	r0, #0
   1838c:	bge	18418 <__assert_fail@plt+0x73cc>
   18390:	b	18394 <__assert_fail@plt+0x7348>
   18394:	ldr	r0, [pc, #3128]	; 18fd4 <__assert_fail@plt+0x7f88>
   18398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1839c:	ldr	r2, [fp, #8]
   183a0:	sdiv	r0, r0, r2
   183a4:	cmp	r1, r0
   183a8:	blt	18514 <__assert_fail@plt+0x74c8>
   183ac:	b	18528 <__assert_fail@plt+0x74dc>
   183b0:	b	183b4 <__assert_fail@plt+0x7368>
   183b4:	ldr	r0, [pc, #3100]	; 18fd8 <__assert_fail@plt+0x7f8c>
   183b8:	ldr	r1, [fp, #8]
   183bc:	cmp	r1, r0
   183c0:	blt	183d8 <__assert_fail@plt+0x738c>
   183c4:	b	183e4 <__assert_fail@plt+0x7398>
   183c8:	ldr	r0, [fp, #8]
   183cc:	movw	r1, #0
   183d0:	cmp	r1, r0
   183d4:	bge	183e4 <__assert_fail@plt+0x7398>
   183d8:	movw	r0, #0
   183dc:	str	r0, [sp, #148]	; 0x94
   183e0:	b	183fc <__assert_fail@plt+0x73b0>
   183e4:	ldr	r0, [pc, #3048]	; 18fd4 <__assert_fail@plt+0x7f88>
   183e8:	ldr	r1, [fp, #8]
   183ec:	movw	r2, #0
   183f0:	sub	r1, r2, r1
   183f4:	sdiv	r0, r0, r1
   183f8:	str	r0, [sp, #148]	; 0x94
   183fc:	ldr	r0, [sp, #148]	; 0x94
   18400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18404:	mvn	r2, #0
   18408:	sub	r1, r2, r1
   1840c:	cmp	r0, r1
   18410:	ble	18514 <__assert_fail@plt+0x74c8>
   18414:	b	18528 <__assert_fail@plt+0x74dc>
   18418:	ldr	r0, [fp, #8]
   1841c:	cmn	r0, #1
   18420:	bne	18468 <__assert_fail@plt+0x741c>
   18424:	b	18428 <__assert_fail@plt+0x73dc>
   18428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1842c:	add	r0, r0, #-2147483648	; 0x80000000
   18430:	movw	r1, #0
   18434:	cmp	r1, r0
   18438:	blt	18514 <__assert_fail@plt+0x74c8>
   1843c:	b	18528 <__assert_fail@plt+0x74dc>
   18440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18444:	movw	r1, #0
   18448:	cmp	r1, r0
   1844c:	bge	18528 <__assert_fail@plt+0x74dc>
   18450:	ldr	r0, [pc, #2940]	; 18fd4 <__assert_fail@plt+0x7f88>
   18454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18458:	sub	r1, r1, #1
   1845c:	cmp	r0, r1
   18460:	blt	18514 <__assert_fail@plt+0x74c8>
   18464:	b	18528 <__assert_fail@plt+0x74dc>
   18468:	ldr	r0, [pc, #2924]	; 18fdc <__assert_fail@plt+0x7f90>
   1846c:	ldr	r1, [fp, #8]
   18470:	sdiv	r0, r0, r1
   18474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18478:	cmp	r0, r1
   1847c:	blt	18514 <__assert_fail@plt+0x74c8>
   18480:	b	18528 <__assert_fail@plt+0x74dc>
   18484:	ldr	r0, [fp, #8]
   18488:	cmp	r0, #0
   1848c:	bne	18494 <__assert_fail@plt+0x7448>
   18490:	b	18528 <__assert_fail@plt+0x74dc>
   18494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18498:	cmp	r0, #0
   1849c:	bge	184fc <__assert_fail@plt+0x74b0>
   184a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184a4:	cmn	r0, #1
   184a8:	bne	184e0 <__assert_fail@plt+0x7494>
   184ac:	b	184b0 <__assert_fail@plt+0x7464>
   184b0:	ldr	r0, [fp, #8]
   184b4:	add	r0, r0, #-2147483648	; 0x80000000
   184b8:	movw	r1, #0
   184bc:	cmp	r1, r0
   184c0:	blt	18514 <__assert_fail@plt+0x74c8>
   184c4:	b	18528 <__assert_fail@plt+0x74dc>
   184c8:	ldr	r0, [pc, #2820]	; 18fd4 <__assert_fail@plt+0x7f88>
   184cc:	ldr	r1, [fp, #8]
   184d0:	sub	r1, r1, #1
   184d4:	cmp	r0, r1
   184d8:	blt	18514 <__assert_fail@plt+0x74c8>
   184dc:	b	18528 <__assert_fail@plt+0x74dc>
   184e0:	ldr	r0, [pc, #2804]	; 18fdc <__assert_fail@plt+0x7f90>
   184e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184e8:	sdiv	r0, r0, r1
   184ec:	ldr	r1, [fp, #8]
   184f0:	cmp	r0, r1
   184f4:	blt	18514 <__assert_fail@plt+0x74c8>
   184f8:	b	18528 <__assert_fail@plt+0x74dc>
   184fc:	ldr	r0, [pc, #2768]	; 18fd4 <__assert_fail@plt+0x7f88>
   18500:	ldr	r1, [fp, #8]
   18504:	sdiv	r0, r0, r1
   18508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1850c:	cmp	r0, r1
   18510:	bge	18528 <__assert_fail@plt+0x74dc>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	ldr	r1, [fp, #8]
   1851c:	mul	r0, r0, r1
   18520:	str	r0, [fp, #-28]	; 0xffffffe4
   18524:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1852c:	ldr	r1, [fp, #8]
   18530:	mul	r0, r0, r1
   18534:	str	r0, [fp, #-28]	; 0xffffffe4
   18538:	b	18fac <__assert_fail@plt+0x7f60>
   1853c:	ldr	r0, [fp, #8]
   18540:	cmp	r0, #0
   18544:	bge	18654 <__assert_fail@plt+0x7608>
   18548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1854c:	cmp	r0, #0
   18550:	bge	185dc <__assert_fail@plt+0x7590>
   18554:	b	18574 <__assert_fail@plt+0x7528>
   18558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1855c:	ldr	r1, [fp, #8]
   18560:	mvn	r2, #0
   18564:	udiv	r1, r2, r1
   18568:	cmp	r0, r1
   1856c:	bcc	186f0 <__assert_fail@plt+0x76a4>
   18570:	b	18704 <__assert_fail@plt+0x76b8>
   18574:	b	18578 <__assert_fail@plt+0x752c>
   18578:	ldr	r0, [pc, #2648]	; 18fd8 <__assert_fail@plt+0x7f8c>
   1857c:	ldr	r1, [fp, #8]
   18580:	cmp	r1, r0
   18584:	blt	1859c <__assert_fail@plt+0x7550>
   18588:	b	185a8 <__assert_fail@plt+0x755c>
   1858c:	ldr	r0, [fp, #8]
   18590:	movw	r1, #0
   18594:	cmp	r1, r0
   18598:	bge	185a8 <__assert_fail@plt+0x755c>
   1859c:	movw	r0, #1
   185a0:	str	r0, [sp, #144]	; 0x90
   185a4:	b	185c0 <__assert_fail@plt+0x7574>
   185a8:	ldr	r0, [fp, #8]
   185ac:	movw	r1, #0
   185b0:	sub	r0, r1, r0
   185b4:	mvn	r1, #0
   185b8:	udiv	r0, r1, r0
   185bc:	str	r0, [sp, #144]	; 0x90
   185c0:	ldr	r0, [sp, #144]	; 0x90
   185c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185c8:	mvn	r2, #0
   185cc:	sub	r1, r2, r1
   185d0:	cmp	r0, r1
   185d4:	bls	186f0 <__assert_fail@plt+0x76a4>
   185d8:	b	18704 <__assert_fail@plt+0x76b8>
   185dc:	b	185e0 <__assert_fail@plt+0x7594>
   185e0:	b	18638 <__assert_fail@plt+0x75ec>
   185e4:	b	18638 <__assert_fail@plt+0x75ec>
   185e8:	ldr	r0, [fp, #8]
   185ec:	cmn	r0, #1
   185f0:	bne	18638 <__assert_fail@plt+0x75ec>
   185f4:	b	185f8 <__assert_fail@plt+0x75ac>
   185f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185fc:	add	r0, r0, #0
   18600:	movw	r1, #0
   18604:	cmp	r1, r0
   18608:	blt	186f0 <__assert_fail@plt+0x76a4>
   1860c:	b	18704 <__assert_fail@plt+0x76b8>
   18610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18614:	movw	r1, #0
   18618:	cmp	r1, r0
   1861c:	bge	18704 <__assert_fail@plt+0x76b8>
   18620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18624:	sub	r0, r0, #1
   18628:	mvn	r1, #0
   1862c:	cmp	r1, r0
   18630:	blt	186f0 <__assert_fail@plt+0x76a4>
   18634:	b	18704 <__assert_fail@plt+0x76b8>
   18638:	ldr	r0, [fp, #8]
   1863c:	movw	r1, #0
   18640:	sdiv	r0, r1, r0
   18644:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18648:	cmp	r0, r1
   1864c:	blt	186f0 <__assert_fail@plt+0x76a4>
   18650:	b	18704 <__assert_fail@plt+0x76b8>
   18654:	ldr	r0, [fp, #8]
   18658:	cmp	r0, #0
   1865c:	bne	18664 <__assert_fail@plt+0x7618>
   18660:	b	18704 <__assert_fail@plt+0x76b8>
   18664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18668:	cmp	r0, #0
   1866c:	bge	186d8 <__assert_fail@plt+0x768c>
   18670:	b	18674 <__assert_fail@plt+0x7628>
   18674:	b	186bc <__assert_fail@plt+0x7670>
   18678:	b	186bc <__assert_fail@plt+0x7670>
   1867c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18680:	cmn	r0, #1
   18684:	bne	186bc <__assert_fail@plt+0x7670>
   18688:	b	1868c <__assert_fail@plt+0x7640>
   1868c:	ldr	r0, [fp, #8]
   18690:	add	r0, r0, #0
   18694:	movw	r1, #0
   18698:	cmp	r1, r0
   1869c:	blt	186f0 <__assert_fail@plt+0x76a4>
   186a0:	b	18704 <__assert_fail@plt+0x76b8>
   186a4:	ldr	r0, [fp, #8]
   186a8:	sub	r0, r0, #1
   186ac:	mvn	r1, #0
   186b0:	cmp	r1, r0
   186b4:	blt	186f0 <__assert_fail@plt+0x76a4>
   186b8:	b	18704 <__assert_fail@plt+0x76b8>
   186bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186c0:	movw	r1, #0
   186c4:	sdiv	r0, r1, r0
   186c8:	ldr	r1, [fp, #8]
   186cc:	cmp	r0, r1
   186d0:	blt	186f0 <__assert_fail@plt+0x76a4>
   186d4:	b	18704 <__assert_fail@plt+0x76b8>
   186d8:	ldr	r0, [fp, #8]
   186dc:	mvn	r1, #0
   186e0:	udiv	r0, r1, r0
   186e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186e8:	cmp	r0, r1
   186ec:	bcs	18704 <__assert_fail@plt+0x76b8>
   186f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r1, [fp, #8]
   186f8:	mul	r0, r0, r1
   186fc:	str	r0, [fp, #-28]	; 0xffffffe4
   18700:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18704:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18708:	ldr	r1, [fp, #8]
   1870c:	mul	r0, r0, r1
   18710:	str	r0, [fp, #-28]	; 0xffffffe4
   18714:	b	18fac <__assert_fail@plt+0x7f60>
   18718:	b	1871c <__assert_fail@plt+0x76d0>
   1871c:	b	18720 <__assert_fail@plt+0x76d4>
   18720:	ldr	r0, [fp, #8]
   18724:	cmp	r0, #0
   18728:	bge	1882c <__assert_fail@plt+0x77e0>
   1872c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18730:	cmp	r0, #0
   18734:	bge	187c0 <__assert_fail@plt+0x7774>
   18738:	b	1873c <__assert_fail@plt+0x76f0>
   1873c:	ldr	r0, [pc, #2192]	; 18fd4 <__assert_fail@plt+0x7f88>
   18740:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18744:	ldr	r2, [fp, #8]
   18748:	sdiv	r0, r0, r2
   1874c:	cmp	r1, r0
   18750:	blt	188bc <__assert_fail@plt+0x7870>
   18754:	b	188d0 <__assert_fail@plt+0x7884>
   18758:	b	1875c <__assert_fail@plt+0x7710>
   1875c:	ldr	r0, [pc, #2164]	; 18fd8 <__assert_fail@plt+0x7f8c>
   18760:	ldr	r1, [fp, #8]
   18764:	cmp	r1, r0
   18768:	blt	18780 <__assert_fail@plt+0x7734>
   1876c:	b	1878c <__assert_fail@plt+0x7740>
   18770:	ldr	r0, [fp, #8]
   18774:	movw	r1, #0
   18778:	cmp	r1, r0
   1877c:	bge	1878c <__assert_fail@plt+0x7740>
   18780:	movw	r0, #0
   18784:	str	r0, [sp, #140]	; 0x8c
   18788:	b	187a4 <__assert_fail@plt+0x7758>
   1878c:	ldr	r0, [pc, #2112]	; 18fd4 <__assert_fail@plt+0x7f88>
   18790:	ldr	r1, [fp, #8]
   18794:	movw	r2, #0
   18798:	sub	r1, r2, r1
   1879c:	sdiv	r0, r0, r1
   187a0:	str	r0, [sp, #140]	; 0x8c
   187a4:	ldr	r0, [sp, #140]	; 0x8c
   187a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187ac:	mvn	r2, #0
   187b0:	sub	r1, r2, r1
   187b4:	cmp	r0, r1
   187b8:	ble	188bc <__assert_fail@plt+0x7870>
   187bc:	b	188d0 <__assert_fail@plt+0x7884>
   187c0:	ldr	r0, [fp, #8]
   187c4:	cmn	r0, #1
   187c8:	bne	18810 <__assert_fail@plt+0x77c4>
   187cc:	b	187d0 <__assert_fail@plt+0x7784>
   187d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187d4:	add	r0, r0, #-2147483648	; 0x80000000
   187d8:	movw	r1, #0
   187dc:	cmp	r1, r0
   187e0:	blt	188bc <__assert_fail@plt+0x7870>
   187e4:	b	188d0 <__assert_fail@plt+0x7884>
   187e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187ec:	movw	r1, #0
   187f0:	cmp	r1, r0
   187f4:	bge	188d0 <__assert_fail@plt+0x7884>
   187f8:	ldr	r0, [pc, #2004]	; 18fd4 <__assert_fail@plt+0x7f88>
   187fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18800:	sub	r1, r1, #1
   18804:	cmp	r0, r1
   18808:	blt	188bc <__assert_fail@plt+0x7870>
   1880c:	b	188d0 <__assert_fail@plt+0x7884>
   18810:	ldr	r0, [pc, #1988]	; 18fdc <__assert_fail@plt+0x7f90>
   18814:	ldr	r1, [fp, #8]
   18818:	sdiv	r0, r0, r1
   1881c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18820:	cmp	r0, r1
   18824:	blt	188bc <__assert_fail@plt+0x7870>
   18828:	b	188d0 <__assert_fail@plt+0x7884>
   1882c:	ldr	r0, [fp, #8]
   18830:	cmp	r0, #0
   18834:	bne	1883c <__assert_fail@plt+0x77f0>
   18838:	b	188d0 <__assert_fail@plt+0x7884>
   1883c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18840:	cmp	r0, #0
   18844:	bge	188a4 <__assert_fail@plt+0x7858>
   18848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1884c:	cmn	r0, #1
   18850:	bne	18888 <__assert_fail@plt+0x783c>
   18854:	b	18858 <__assert_fail@plt+0x780c>
   18858:	ldr	r0, [fp, #8]
   1885c:	add	r0, r0, #-2147483648	; 0x80000000
   18860:	movw	r1, #0
   18864:	cmp	r1, r0
   18868:	blt	188bc <__assert_fail@plt+0x7870>
   1886c:	b	188d0 <__assert_fail@plt+0x7884>
   18870:	ldr	r0, [pc, #1884]	; 18fd4 <__assert_fail@plt+0x7f88>
   18874:	ldr	r1, [fp, #8]
   18878:	sub	r1, r1, #1
   1887c:	cmp	r0, r1
   18880:	blt	188bc <__assert_fail@plt+0x7870>
   18884:	b	188d0 <__assert_fail@plt+0x7884>
   18888:	ldr	r0, [pc, #1868]	; 18fdc <__assert_fail@plt+0x7f90>
   1888c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18890:	sdiv	r0, r0, r1
   18894:	ldr	r1, [fp, #8]
   18898:	cmp	r0, r1
   1889c:	blt	188bc <__assert_fail@plt+0x7870>
   188a0:	b	188d0 <__assert_fail@plt+0x7884>
   188a4:	ldr	r0, [pc, #1832]	; 18fd4 <__assert_fail@plt+0x7f88>
   188a8:	ldr	r1, [fp, #8]
   188ac:	sdiv	r0, r0, r1
   188b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188b4:	cmp	r0, r1
   188b8:	bge	188d0 <__assert_fail@plt+0x7884>
   188bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c0:	ldr	r1, [fp, #8]
   188c4:	mul	r0, r0, r1
   188c8:	str	r0, [fp, #-28]	; 0xffffffe4
   188cc:	b	18fa8 <__assert_fail@plt+0x7f5c>
   188d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d4:	ldr	r1, [fp, #8]
   188d8:	mul	r0, r0, r1
   188dc:	str	r0, [fp, #-28]	; 0xffffffe4
   188e0:	b	18fac <__assert_fail@plt+0x7f60>
   188e4:	ldr	r0, [fp, #8]
   188e8:	cmp	r0, #0
   188ec:	bge	189fc <__assert_fail@plt+0x79b0>
   188f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188f4:	cmp	r0, #0
   188f8:	bge	18984 <__assert_fail@plt+0x7938>
   188fc:	b	1891c <__assert_fail@plt+0x78d0>
   18900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18904:	ldr	r1, [fp, #8]
   18908:	mvn	r2, #0
   1890c:	udiv	r1, r2, r1
   18910:	cmp	r0, r1
   18914:	bcc	18a98 <__assert_fail@plt+0x7a4c>
   18918:	b	18aac <__assert_fail@plt+0x7a60>
   1891c:	b	18920 <__assert_fail@plt+0x78d4>
   18920:	ldr	r0, [pc, #1712]	; 18fd8 <__assert_fail@plt+0x7f8c>
   18924:	ldr	r1, [fp, #8]
   18928:	cmp	r1, r0
   1892c:	blt	18944 <__assert_fail@plt+0x78f8>
   18930:	b	18950 <__assert_fail@plt+0x7904>
   18934:	ldr	r0, [fp, #8]
   18938:	movw	r1, #0
   1893c:	cmp	r1, r0
   18940:	bge	18950 <__assert_fail@plt+0x7904>
   18944:	movw	r0, #1
   18948:	str	r0, [sp, #136]	; 0x88
   1894c:	b	18968 <__assert_fail@plt+0x791c>
   18950:	ldr	r0, [fp, #8]
   18954:	movw	r1, #0
   18958:	sub	r0, r1, r0
   1895c:	mvn	r1, #0
   18960:	udiv	r0, r1, r0
   18964:	str	r0, [sp, #136]	; 0x88
   18968:	ldr	r0, [sp, #136]	; 0x88
   1896c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18970:	mvn	r2, #0
   18974:	sub	r1, r2, r1
   18978:	cmp	r0, r1
   1897c:	bls	18a98 <__assert_fail@plt+0x7a4c>
   18980:	b	18aac <__assert_fail@plt+0x7a60>
   18984:	b	18988 <__assert_fail@plt+0x793c>
   18988:	b	189e0 <__assert_fail@plt+0x7994>
   1898c:	b	189e0 <__assert_fail@plt+0x7994>
   18990:	ldr	r0, [fp, #8]
   18994:	cmn	r0, #1
   18998:	bne	189e0 <__assert_fail@plt+0x7994>
   1899c:	b	189a0 <__assert_fail@plt+0x7954>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	add	r0, r0, #0
   189a8:	movw	r1, #0
   189ac:	cmp	r1, r0
   189b0:	blt	18a98 <__assert_fail@plt+0x7a4c>
   189b4:	b	18aac <__assert_fail@plt+0x7a60>
   189b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189bc:	movw	r1, #0
   189c0:	cmp	r1, r0
   189c4:	bge	18aac <__assert_fail@plt+0x7a60>
   189c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189cc:	sub	r0, r0, #1
   189d0:	mvn	r1, #0
   189d4:	cmp	r1, r0
   189d8:	blt	18a98 <__assert_fail@plt+0x7a4c>
   189dc:	b	18aac <__assert_fail@plt+0x7a60>
   189e0:	ldr	r0, [fp, #8]
   189e4:	movw	r1, #0
   189e8:	sdiv	r0, r1, r0
   189ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189f0:	cmp	r0, r1
   189f4:	blt	18a98 <__assert_fail@plt+0x7a4c>
   189f8:	b	18aac <__assert_fail@plt+0x7a60>
   189fc:	ldr	r0, [fp, #8]
   18a00:	cmp	r0, #0
   18a04:	bne	18a0c <__assert_fail@plt+0x79c0>
   18a08:	b	18aac <__assert_fail@plt+0x7a60>
   18a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a10:	cmp	r0, #0
   18a14:	bge	18a80 <__assert_fail@plt+0x7a34>
   18a18:	b	18a1c <__assert_fail@plt+0x79d0>
   18a1c:	b	18a64 <__assert_fail@plt+0x7a18>
   18a20:	b	18a64 <__assert_fail@plt+0x7a18>
   18a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a28:	cmn	r0, #1
   18a2c:	bne	18a64 <__assert_fail@plt+0x7a18>
   18a30:	b	18a34 <__assert_fail@plt+0x79e8>
   18a34:	ldr	r0, [fp, #8]
   18a38:	add	r0, r0, #0
   18a3c:	movw	r1, #0
   18a40:	cmp	r1, r0
   18a44:	blt	18a98 <__assert_fail@plt+0x7a4c>
   18a48:	b	18aac <__assert_fail@plt+0x7a60>
   18a4c:	ldr	r0, [fp, #8]
   18a50:	sub	r0, r0, #1
   18a54:	mvn	r1, #0
   18a58:	cmp	r1, r0
   18a5c:	blt	18a98 <__assert_fail@plt+0x7a4c>
   18a60:	b	18aac <__assert_fail@plt+0x7a60>
   18a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a68:	movw	r1, #0
   18a6c:	sdiv	r0, r1, r0
   18a70:	ldr	r1, [fp, #8]
   18a74:	cmp	r0, r1
   18a78:	blt	18a98 <__assert_fail@plt+0x7a4c>
   18a7c:	b	18aac <__assert_fail@plt+0x7a60>
   18a80:	ldr	r0, [fp, #8]
   18a84:	mvn	r1, #0
   18a88:	udiv	r0, r1, r0
   18a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a90:	cmp	r0, r1
   18a94:	bcs	18aac <__assert_fail@plt+0x7a60>
   18a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a9c:	ldr	r1, [fp, #8]
   18aa0:	mul	r0, r0, r1
   18aa4:	str	r0, [fp, #-28]	; 0xffffffe4
   18aa8:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab0:	ldr	r1, [fp, #8]
   18ab4:	mul	r0, r0, r1
   18ab8:	str	r0, [fp, #-28]	; 0xffffffe4
   18abc:	b	18fac <__assert_fail@plt+0x7f60>
   18ac0:	b	18ac4 <__assert_fail@plt+0x7a78>
   18ac4:	ldr	r0, [fp, #8]
   18ac8:	cmp	r0, #0
   18acc:	bge	18c54 <__assert_fail@plt+0x7c08>
   18ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ad4:	cmp	r0, #0
   18ad8:	bge	18bc0 <__assert_fail@plt+0x7b74>
   18adc:	b	18ae0 <__assert_fail@plt+0x7a94>
   18ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ae4:	ldr	r1, [fp, #8]
   18ae8:	asr	r3, r1, #31
   18aec:	mvn	r2, #0
   18af0:	mvn	ip, #-2147483648	; 0x80000000
   18af4:	str	r0, [sp, #132]	; 0x84
   18af8:	mov	r0, r2
   18afc:	str	r1, [sp, #128]	; 0x80
   18b00:	mov	r1, ip
   18b04:	ldr	r2, [sp, #128]	; 0x80
   18b08:	bl	1b3b4 <__assert_fail@plt+0xa368>
   18b0c:	ldr	r2, [sp, #132]	; 0x84
   18b10:	subs	r0, r2, r0
   18b14:	rscs	r1, r1, r2, asr #31
   18b18:	str	r0, [sp, #124]	; 0x7c
   18b1c:	str	r1, [sp, #120]	; 0x78
   18b20:	blt	18d34 <__assert_fail@plt+0x7ce8>
   18b24:	b	18d48 <__assert_fail@plt+0x7cfc>
   18b28:	b	18b2c <__assert_fail@plt+0x7ae0>
   18b2c:	ldr	r0, [pc, #1188]	; 18fd8 <__assert_fail@plt+0x7f8c>
   18b30:	ldr	r1, [fp, #8]
   18b34:	cmp	r1, r0
   18b38:	blt	18b50 <__assert_fail@plt+0x7b04>
   18b3c:	b	18b64 <__assert_fail@plt+0x7b18>
   18b40:	ldr	r0, [fp, #8]
   18b44:	movw	r1, #0
   18b48:	cmp	r1, r0
   18b4c:	bge	18b64 <__assert_fail@plt+0x7b18>
   18b50:	mov	r0, #0
   18b54:	mvn	r1, #0
   18b58:	str	r1, [sp, #116]	; 0x74
   18b5c:	str	r0, [sp, #112]	; 0x70
   18b60:	b	18b98 <__assert_fail@plt+0x7b4c>
   18b64:	ldr	r0, [fp, #8]
   18b68:	rsb	r0, r0, #0
   18b6c:	asr	r3, r0, #31
   18b70:	mvn	r1, #0
   18b74:	mvn	r2, #-2147483648	; 0x80000000
   18b78:	str	r0, [sp, #108]	; 0x6c
   18b7c:	mov	r0, r1
   18b80:	mov	r1, r2
   18b84:	ldr	r2, [sp, #108]	; 0x6c
   18b88:	bl	1b3b4 <__assert_fail@plt+0xa368>
   18b8c:	str	r0, [sp, #116]	; 0x74
   18b90:	str	r1, [sp, #112]	; 0x70
   18b94:	b	18b98 <__assert_fail@plt+0x7b4c>
   18b98:	ldr	r0, [sp, #112]	; 0x70
   18b9c:	ldr	r1, [sp, #116]	; 0x74
   18ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ba4:	mvn	r2, r2
   18ba8:	subs	r1, r2, r1
   18bac:	rscs	r0, r0, r2, asr #31
   18bb0:	str	r1, [sp, #104]	; 0x68
   18bb4:	str	r0, [sp, #100]	; 0x64
   18bb8:	bge	18d34 <__assert_fail@plt+0x7ce8>
   18bbc:	b	18d48 <__assert_fail@plt+0x7cfc>
   18bc0:	ldr	r0, [fp, #8]
   18bc4:	cmn	r0, #1
   18bc8:	bne	18c14 <__assert_fail@plt+0x7bc8>
   18bcc:	b	18bd0 <__assert_fail@plt+0x7b84>
   18bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bd4:	mov	r1, #-2147483648	; 0x80000000
   18bd8:	add	r1, r1, r0, asr #31
   18bdc:	rsbs	r0, r0, #0
   18be0:	rscs	r1, r1, #0
   18be4:	str	r0, [sp, #96]	; 0x60
   18be8:	str	r1, [sp, #92]	; 0x5c
   18bec:	blt	18d34 <__assert_fail@plt+0x7ce8>
   18bf0:	b	18d48 <__assert_fail@plt+0x7cfc>
   18bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf8:	movw	r1, #0
   18bfc:	cmp	r1, r0
   18c00:	bge	18d48 <__assert_fail@plt+0x7cfc>
   18c04:	mov	r0, #0
   18c08:	cmp	r0, #0
   18c0c:	bne	18d34 <__assert_fail@plt+0x7ce8>
   18c10:	b	18d48 <__assert_fail@plt+0x7cfc>
   18c14:	ldr	r0, [fp, #8]
   18c18:	asr	r3, r0, #31
   18c1c:	mov	r1, #0
   18c20:	mov	r2, #-2147483648	; 0x80000000
   18c24:	str	r0, [sp, #88]	; 0x58
   18c28:	mov	r0, r1
   18c2c:	mov	r1, r2
   18c30:	ldr	r2, [sp, #88]	; 0x58
   18c34:	bl	1b3b4 <__assert_fail@plt+0xa368>
   18c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c3c:	subs	r0, r0, r2
   18c40:	sbcs	r1, r1, r2, asr #31
   18c44:	str	r0, [sp, #84]	; 0x54
   18c48:	str	r1, [sp, #80]	; 0x50
   18c4c:	blt	18d34 <__assert_fail@plt+0x7ce8>
   18c50:	b	18d48 <__assert_fail@plt+0x7cfc>
   18c54:	ldr	r0, [fp, #8]
   18c58:	cmp	r0, #0
   18c5c:	bne	18c64 <__assert_fail@plt+0x7c18>
   18c60:	b	18d48 <__assert_fail@plt+0x7cfc>
   18c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c68:	cmp	r0, #0
   18c6c:	bge	18cf4 <__assert_fail@plt+0x7ca8>
   18c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c74:	cmn	r0, #1
   18c78:	bne	18cb4 <__assert_fail@plt+0x7c68>
   18c7c:	b	18c80 <__assert_fail@plt+0x7c34>
   18c80:	ldr	r0, [fp, #8]
   18c84:	mov	r1, #-2147483648	; 0x80000000
   18c88:	add	r1, r1, r0, asr #31
   18c8c:	rsbs	r0, r0, #0
   18c90:	rscs	r1, r1, #0
   18c94:	str	r0, [sp, #76]	; 0x4c
   18c98:	str	r1, [sp, #72]	; 0x48
   18c9c:	blt	18d34 <__assert_fail@plt+0x7ce8>
   18ca0:	b	18d48 <__assert_fail@plt+0x7cfc>
   18ca4:	mov	r0, #0
   18ca8:	cmp	r0, #0
   18cac:	bne	18d34 <__assert_fail@plt+0x7ce8>
   18cb0:	b	18d48 <__assert_fail@plt+0x7cfc>
   18cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb8:	asr	r3, r0, #31
   18cbc:	mov	r1, #0
   18cc0:	mov	r2, #-2147483648	; 0x80000000
   18cc4:	str	r0, [sp, #68]	; 0x44
   18cc8:	mov	r0, r1
   18ccc:	mov	r1, r2
   18cd0:	ldr	r2, [sp, #68]	; 0x44
   18cd4:	bl	1b3b4 <__assert_fail@plt+0xa368>
   18cd8:	ldr	r2, [fp, #8]
   18cdc:	subs	r0, r0, r2
   18ce0:	sbcs	r1, r1, r2, asr #31
   18ce4:	str	r0, [sp, #64]	; 0x40
   18ce8:	str	r1, [sp, #60]	; 0x3c
   18cec:	blt	18d34 <__assert_fail@plt+0x7ce8>
   18cf0:	b	18d48 <__assert_fail@plt+0x7cfc>
   18cf4:	ldr	r0, [fp, #8]
   18cf8:	asr	r3, r0, #31
   18cfc:	mvn	r1, #0
   18d00:	mvn	r2, #-2147483648	; 0x80000000
   18d04:	str	r0, [sp, #56]	; 0x38
   18d08:	mov	r0, r1
   18d0c:	mov	r1, r2
   18d10:	ldr	r2, [sp, #56]	; 0x38
   18d14:	bl	1b3b4 <__assert_fail@plt+0xa368>
   18d18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18d1c:	subs	r0, r0, r2
   18d20:	sbcs	r1, r1, r2, asr #31
   18d24:	str	r0, [sp, #52]	; 0x34
   18d28:	str	r1, [sp, #48]	; 0x30
   18d2c:	bge	18d48 <__assert_fail@plt+0x7cfc>
   18d30:	b	18d34 <__assert_fail@plt+0x7ce8>
   18d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d38:	ldr	r1, [fp, #8]
   18d3c:	mul	r0, r0, r1
   18d40:	str	r0, [fp, #-28]	; 0xffffffe4
   18d44:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d4c:	ldr	r1, [fp, #8]
   18d50:	mul	r0, r0, r1
   18d54:	str	r0, [fp, #-28]	; 0xffffffe4
   18d58:	b	18fac <__assert_fail@plt+0x7f60>
   18d5c:	ldr	r0, [fp, #8]
   18d60:	cmp	r0, #0
   18d64:	bge	18ec4 <__assert_fail@plt+0x7e78>
   18d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d6c:	cmp	r0, #0
   18d70:	bge	18e4c <__assert_fail@plt+0x7e00>
   18d74:	b	18dbc <__assert_fail@plt+0x7d70>
   18d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d7c:	ldr	r1, [fp, #8]
   18d80:	asr	r3, r1, #31
   18d84:	mvn	r2, #0
   18d88:	str	r0, [sp, #44]	; 0x2c
   18d8c:	mov	r0, r2
   18d90:	str	r1, [sp, #40]	; 0x28
   18d94:	mov	r1, r2
   18d98:	ldr	r2, [sp, #40]	; 0x28
   18d9c:	bl	1b488 <__assert_fail@plt+0xa43c>
   18da0:	ldr	r2, [sp, #44]	; 0x2c
   18da4:	subs	r0, r2, r0
   18da8:	rscs	r1, r1, r2, asr #31
   18dac:	str	r0, [sp, #36]	; 0x24
   18db0:	str	r1, [sp, #32]
   18db4:	bcc	18f80 <__assert_fail@plt+0x7f34>
   18db8:	b	18f94 <__assert_fail@plt+0x7f48>
   18dbc:	b	18dc0 <__assert_fail@plt+0x7d74>
   18dc0:	ldr	r0, [pc, #528]	; 18fd8 <__assert_fail@plt+0x7f8c>
   18dc4:	ldr	r1, [fp, #8]
   18dc8:	cmp	r1, r0
   18dcc:	blt	18de4 <__assert_fail@plt+0x7d98>
   18dd0:	b	18df8 <__assert_fail@plt+0x7dac>
   18dd4:	ldr	r0, [fp, #8]
   18dd8:	movw	r1, #0
   18ddc:	cmp	r1, r0
   18de0:	bge	18df8 <__assert_fail@plt+0x7dac>
   18de4:	mov	r0, #1
   18de8:	mvn	r1, #0
   18dec:	str	r1, [sp, #28]
   18df0:	str	r0, [sp, #24]
   18df4:	b	18e24 <__assert_fail@plt+0x7dd8>
   18df8:	ldr	r0, [fp, #8]
   18dfc:	rsb	r0, r0, #0
   18e00:	asr	r3, r0, #31
   18e04:	mvn	r1, #0
   18e08:	str	r0, [sp, #20]
   18e0c:	mov	r0, r1
   18e10:	ldr	r2, [sp, #20]
   18e14:	bl	1b488 <__assert_fail@plt+0xa43c>
   18e18:	str	r0, [sp, #28]
   18e1c:	str	r1, [sp, #24]
   18e20:	b	18e24 <__assert_fail@plt+0x7dd8>
   18e24:	ldr	r0, [sp, #24]
   18e28:	ldr	r1, [sp, #28]
   18e2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e30:	mvn	r2, r2
   18e34:	subs	r1, r2, r1
   18e38:	rscs	r0, r0, r2, asr #31
   18e3c:	str	r1, [sp, #16]
   18e40:	str	r0, [sp, #12]
   18e44:	bcs	18f80 <__assert_fail@plt+0x7f34>
   18e48:	b	18f94 <__assert_fail@plt+0x7f48>
   18e4c:	b	18e50 <__assert_fail@plt+0x7e04>
   18e50:	b	18ea8 <__assert_fail@plt+0x7e5c>
   18e54:	b	18ea8 <__assert_fail@plt+0x7e5c>
   18e58:	ldr	r0, [fp, #8]
   18e5c:	cmn	r0, #1
   18e60:	bne	18ea8 <__assert_fail@plt+0x7e5c>
   18e64:	b	18e68 <__assert_fail@plt+0x7e1c>
   18e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e6c:	add	r0, r0, #0
   18e70:	movw	r1, #0
   18e74:	cmp	r1, r0
   18e78:	blt	18f80 <__assert_fail@plt+0x7f34>
   18e7c:	b	18f94 <__assert_fail@plt+0x7f48>
   18e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e84:	movw	r1, #0
   18e88:	cmp	r1, r0
   18e8c:	bge	18f94 <__assert_fail@plt+0x7f48>
   18e90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e94:	sub	r0, r0, #1
   18e98:	mvn	r1, #0
   18e9c:	cmp	r1, r0
   18ea0:	blt	18f80 <__assert_fail@plt+0x7f34>
   18ea4:	b	18f94 <__assert_fail@plt+0x7f48>
   18ea8:	ldr	r0, [fp, #8]
   18eac:	movw	r1, #0
   18eb0:	sdiv	r0, r1, r0
   18eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18eb8:	cmp	r0, r1
   18ebc:	blt	18f80 <__assert_fail@plt+0x7f34>
   18ec0:	b	18f94 <__assert_fail@plt+0x7f48>
   18ec4:	ldr	r0, [fp, #8]
   18ec8:	cmp	r0, #0
   18ecc:	bne	18ed4 <__assert_fail@plt+0x7e88>
   18ed0:	b	18f94 <__assert_fail@plt+0x7f48>
   18ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed8:	cmp	r0, #0
   18edc:	bge	18f48 <__assert_fail@plt+0x7efc>
   18ee0:	b	18ee4 <__assert_fail@plt+0x7e98>
   18ee4:	b	18f2c <__assert_fail@plt+0x7ee0>
   18ee8:	b	18f2c <__assert_fail@plt+0x7ee0>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	cmn	r0, #1
   18ef4:	bne	18f2c <__assert_fail@plt+0x7ee0>
   18ef8:	b	18efc <__assert_fail@plt+0x7eb0>
   18efc:	ldr	r0, [fp, #8]
   18f00:	add	r0, r0, #0
   18f04:	movw	r1, #0
   18f08:	cmp	r1, r0
   18f0c:	blt	18f80 <__assert_fail@plt+0x7f34>
   18f10:	b	18f94 <__assert_fail@plt+0x7f48>
   18f14:	ldr	r0, [fp, #8]
   18f18:	sub	r0, r0, #1
   18f1c:	mvn	r1, #0
   18f20:	cmp	r1, r0
   18f24:	blt	18f80 <__assert_fail@plt+0x7f34>
   18f28:	b	18f94 <__assert_fail@plt+0x7f48>
   18f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f30:	movw	r1, #0
   18f34:	sdiv	r0, r1, r0
   18f38:	ldr	r1, [fp, #8]
   18f3c:	cmp	r0, r1
   18f40:	blt	18f80 <__assert_fail@plt+0x7f34>
   18f44:	b	18f94 <__assert_fail@plt+0x7f48>
   18f48:	ldr	r0, [fp, #8]
   18f4c:	asr	r3, r0, #31
   18f50:	mvn	r1, #0
   18f54:	str	r0, [sp, #8]
   18f58:	mov	r0, r1
   18f5c:	ldr	r2, [sp, #8]
   18f60:	bl	1b488 <__assert_fail@plt+0xa43c>
   18f64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f68:	subs	r0, r0, r2
   18f6c:	sbcs	r1, r1, r2, asr #31
   18f70:	str	r0, [sp, #4]
   18f74:	str	r1, [sp]
   18f78:	bcs	18f94 <__assert_fail@plt+0x7f48>
   18f7c:	b	18f80 <__assert_fail@plt+0x7f34>
   18f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f84:	ldr	r1, [fp, #8]
   18f88:	mul	r0, r0, r1
   18f8c:	str	r0, [fp, #-28]	; 0xffffffe4
   18f90:	b	18fa8 <__assert_fail@plt+0x7f5c>
   18f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f98:	ldr	r1, [fp, #8]
   18f9c:	mul	r0, r0, r1
   18fa0:	str	r0, [fp, #-28]	; 0xffffffe4
   18fa4:	b	18fac <__assert_fail@plt+0x7f60>
   18fa8:	bl	19184 <__assert_fail@plt+0x8138>
   18fac:	ldr	r0, [fp, #-4]
   18fb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fb4:	bl	16440 <__assert_fail@plt+0x53f4>
   18fb8:	str	r0, [fp, #-4]
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	ldr	r1, [fp, #-8]
   18fc4:	str	r0, [r1]
   18fc8:	ldr	r0, [fp, #-4]
   18fcc:	mov	sp, fp
   18fd0:	pop	{fp, pc}
   18fd4:	svcvc	0x00ffffff
   18fd8:	andhi	r0, r0, r1
   18fdc:	andhi	r0, r0, r0
   18fe0:			; <UNDEFINED> instruction: 0xffff8000
   18fe4:	push	{fp, lr}
   18fe8:	mov	fp, sp
   18fec:	sub	sp, sp, #8
   18ff0:	str	r0, [sp, #4]
   18ff4:	ldr	r0, [sp, #4]
   18ff8:	movw	r1, #1
   18ffc:	bl	19008 <__assert_fail@plt+0x7fbc>
   19000:	mov	sp, fp
   19004:	pop	{fp, pc}
   19008:	push	{fp, lr}
   1900c:	mov	fp, sp
   19010:	sub	sp, sp, #8
   19014:	str	r0, [sp, #4]
   19018:	str	r1, [sp]
   1901c:	ldr	r0, [sp, #4]
   19020:	ldr	r1, [sp]
   19024:	bl	191d4 <__assert_fail@plt+0x8188>
   19028:	bl	163cc <__assert_fail@plt+0x5380>
   1902c:	mov	sp, fp
   19030:	pop	{fp, pc}
   19034:	push	{fp, lr}
   19038:	mov	fp, sp
   1903c:	sub	sp, sp, #8
   19040:	str	r0, [sp, #4]
   19044:	ldr	r0, [sp, #4]
   19048:	movw	r1, #1
   1904c:	bl	19058 <__assert_fail@plt+0x800c>
   19050:	mov	sp, fp
   19054:	pop	{fp, pc}
   19058:	push	{fp, lr}
   1905c:	mov	fp, sp
   19060:	sub	sp, sp, #8
   19064:	str	r0, [sp, #4]
   19068:	str	r1, [sp]
   1906c:	ldr	r0, [sp, #4]
   19070:	ldr	r1, [sp]
   19074:	bl	195d0 <__assert_fail@plt+0x8584>
   19078:	bl	163cc <__assert_fail@plt+0x5380>
   1907c:	mov	sp, fp
   19080:	pop	{fp, pc}
   19084:	push	{fp, lr}
   19088:	mov	fp, sp
   1908c:	sub	sp, sp, #16
   19090:	str	r0, [fp, #-4]
   19094:	str	r1, [sp, #8]
   19098:	ldr	r0, [sp, #8]
   1909c:	bl	163a8 <__assert_fail@plt+0x535c>
   190a0:	ldr	r1, [fp, #-4]
   190a4:	ldr	r2, [sp, #8]
   190a8:	str	r0, [sp, #4]
   190ac:	bl	10e60 <memcpy@plt>
   190b0:	ldr	r0, [sp, #4]
   190b4:	mov	sp, fp
   190b8:	pop	{fp, pc}
   190bc:	push	{fp, lr}
   190c0:	mov	fp, sp
   190c4:	sub	sp, sp, #16
   190c8:	str	r0, [fp, #-4]
   190cc:	str	r1, [sp, #8]
   190d0:	ldr	r0, [sp, #8]
   190d4:	bl	163fc <__assert_fail@plt+0x53b0>
   190d8:	ldr	r1, [fp, #-4]
   190dc:	ldr	r2, [sp, #8]
   190e0:	str	r0, [sp, #4]
   190e4:	bl	10e60 <memcpy@plt>
   190e8:	ldr	r0, [sp, #4]
   190ec:	mov	sp, fp
   190f0:	pop	{fp, pc}
   190f4:	push	{fp, lr}
   190f8:	mov	fp, sp
   190fc:	sub	sp, sp, #16
   19100:	str	r0, [fp, #-4]
   19104:	str	r1, [sp, #8]
   19108:	ldr	r0, [sp, #8]
   1910c:	add	r0, r0, #1
   19110:	bl	163fc <__assert_fail@plt+0x53b0>
   19114:	str	r0, [sp, #4]
   19118:	ldr	r0, [sp, #4]
   1911c:	ldr	r1, [sp, #8]
   19120:	add	r0, r0, r1
   19124:	movw	r1, #0
   19128:	strb	r1, [r0]
   1912c:	ldr	r0, [sp, #4]
   19130:	ldr	r1, [fp, #-4]
   19134:	ldr	r2, [sp, #8]
   19138:	str	r0, [sp]
   1913c:	bl	10e60 <memcpy@plt>
   19140:	ldr	r0, [sp]
   19144:	mov	sp, fp
   19148:	pop	{fp, pc}
   1914c:	push	{fp, lr}
   19150:	mov	fp, sp
   19154:	sub	sp, sp, #8
   19158:	str	r0, [sp, #4]
   1915c:	ldr	r0, [sp, #4]
   19160:	ldr	r1, [sp, #4]
   19164:	str	r0, [sp]
   19168:	mov	r0, r1
   1916c:	bl	10f68 <strlen@plt>
   19170:	add	r1, r0, #1
   19174:	ldr	r0, [sp]
   19178:	bl	19084 <__assert_fail@plt+0x8038>
   1917c:	mov	sp, fp
   19180:	pop	{fp, pc}
   19184:	push	{fp, lr}
   19188:	mov	fp, sp
   1918c:	sub	sp, sp, #8
   19190:	movw	r0, #53488	; 0xd0f0
   19194:	movt	r0, #2
   19198:	ldr	r0, [r0]
   1919c:	movw	r1, #49876	; 0xc2d4
   191a0:	movt	r1, #1
   191a4:	str	r0, [sp, #4]
   191a8:	mov	r0, r1
   191ac:	bl	10f5c <gettext@plt>
   191b0:	ldr	r1, [sp, #4]
   191b4:	str	r0, [sp]
   191b8:	mov	r0, r1
   191bc:	movw	r1, #0
   191c0:	movw	r2, #48133	; 0xbc05
   191c4:	movt	r2, #1
   191c8:	ldr	r3, [sp]
   191cc:	bl	10efc <error@plt>
   191d0:	bl	11028 <abort@plt>
   191d4:	push	{fp, lr}
   191d8:	mov	fp, sp
   191dc:	sub	sp, sp, #16
   191e0:	str	r0, [sp, #8]
   191e4:	str	r1, [sp, #4]
   191e8:	ldr	r0, [sp, #8]
   191ec:	cmp	r0, #0
   191f0:	beq	19200 <__assert_fail@plt+0x81b4>
   191f4:	ldr	r0, [sp, #4]
   191f8:	cmp	r0, #0
   191fc:	bne	1920c <__assert_fail@plt+0x81c0>
   19200:	movw	r0, #1
   19204:	str	r0, [sp, #4]
   19208:	str	r0, [sp, #8]
   1920c:	ldr	r0, [sp, #4]
   19210:	cmp	r0, #0
   19214:	beq	19248 <__assert_fail@plt+0x81fc>
   19218:	ldr	r0, [pc, #76]	; 1926c <__assert_fail@plt+0x8220>
   1921c:	ldr	r1, [sp, #4]
   19220:	udiv	r0, r0, r1
   19224:	ldr	r1, [sp, #8]
   19228:	cmp	r0, r1
   1922c:	bcs	19248 <__assert_fail@plt+0x81fc>
   19230:	bl	10f80 <__errno_location@plt>
   19234:	movw	lr, #12
   19238:	str	lr, [r0]
   1923c:	movw	r0, #0
   19240:	str	r0, [fp, #-4]
   19244:	b	19260 <__assert_fail@plt+0x8214>
   19248:	ldr	r0, [sp, #8]
   1924c:	ldr	r1, [sp, #4]
   19250:	bl	10df4 <calloc@plt>
   19254:	str	r0, [sp]
   19258:	ldr	r0, [sp]
   1925c:	str	r0, [fp, #-4]
   19260:	ldr	r0, [fp, #-4]
   19264:	mov	sp, fp
   19268:	pop	{fp, pc}
   1926c:	svcvc	0x00ffffff
   19270:	push	{fp, lr}
   19274:	mov	fp, sp
   19278:	sub	sp, sp, #16
   1927c:	str	r0, [sp, #8]
   19280:	ldr	r0, [sp, #8]
   19284:	cmp	r0, #0
   19288:	bne	19294 <__assert_fail@plt+0x8248>
   1928c:	movw	r0, #1
   19290:	str	r0, [sp, #8]
   19294:	ldr	r0, [pc, #64]	; 192dc <__assert_fail@plt+0x8290>
   19298:	ldr	r1, [sp, #8]
   1929c:	cmp	r0, r1
   192a0:	bcs	192bc <__assert_fail@plt+0x8270>
   192a4:	bl	10f80 <__errno_location@plt>
   192a8:	movw	lr, #12
   192ac:	str	lr, [r0]
   192b0:	movw	r0, #0
   192b4:	str	r0, [fp, #-4]
   192b8:	b	192d0 <__assert_fail@plt+0x8284>
   192bc:	ldr	r0, [sp, #8]
   192c0:	bl	10f08 <malloc@plt>
   192c4:	str	r0, [sp, #4]
   192c8:	ldr	r0, [sp, #4]
   192cc:	str	r0, [fp, #-4]
   192d0:	ldr	r0, [fp, #-4]
   192d4:	mov	sp, fp
   192d8:	pop	{fp, pc}
   192dc:	svcvc	0x00ffffff
   192e0:	push	{fp, lr}
   192e4:	mov	fp, sp
   192e8:	sub	sp, sp, #16
   192ec:	str	r0, [sp, #8]
   192f0:	str	r1, [sp, #4]
   192f4:	ldr	r0, [sp, #8]
   192f8:	movw	r1, #0
   192fc:	cmp	r0, r1
   19300:	bne	19314 <__assert_fail@plt+0x82c8>
   19304:	ldr	r0, [sp, #4]
   19308:	bl	19270 <__assert_fail@plt+0x8224>
   1930c:	str	r0, [fp, #-4]
   19310:	b	19374 <__assert_fail@plt+0x8328>
   19314:	ldr	r0, [sp, #4]
   19318:	cmp	r0, #0
   1931c:	bne	19334 <__assert_fail@plt+0x82e8>
   19320:	ldr	r0, [sp, #8]
   19324:	bl	131b4 <__assert_fail@plt+0x2168>
   19328:	movw	r0, #0
   1932c:	str	r0, [fp, #-4]
   19330:	b	19374 <__assert_fail@plt+0x8328>
   19334:	ldr	r0, [pc, #68]	; 19380 <__assert_fail@plt+0x8334>
   19338:	ldr	r1, [sp, #4]
   1933c:	cmp	r0, r1
   19340:	bcs	1935c <__assert_fail@plt+0x8310>
   19344:	bl	10f80 <__errno_location@plt>
   19348:	movw	lr, #12
   1934c:	str	lr, [r0]
   19350:	movw	r0, #0
   19354:	str	r0, [fp, #-4]
   19358:	b	19374 <__assert_fail@plt+0x8328>
   1935c:	ldr	r0, [sp, #8]
   19360:	ldr	r1, [sp, #4]
   19364:	bl	10e9c <realloc@plt>
   19368:	str	r0, [sp]
   1936c:	ldr	r0, [sp]
   19370:	str	r0, [fp, #-4]
   19374:	ldr	r0, [fp, #-4]
   19378:	mov	sp, fp
   1937c:	pop	{fp, pc}
   19380:	svcvc	0x00ffffff
   19384:	push	{fp, lr}
   19388:	mov	fp, sp
   1938c:	sub	sp, sp, #24
   19390:	str	r0, [fp, #-8]
   19394:	str	r1, [sp, #12]
   19398:	ldr	r0, [fp, #-8]
   1939c:	str	r0, [sp, #8]
   193a0:	ldr	r0, [sp, #12]
   193a4:	str	r0, [sp, #4]
   193a8:	ldr	r0, [sp, #8]
   193ac:	ldr	r1, [sp, #4]
   193b0:	cmp	r0, r1
   193b4:	bne	193c4 <__assert_fail@plt+0x8378>
   193b8:	movw	r0, #0
   193bc:	str	r0, [fp, #-4]
   193c0:	b	19430 <__assert_fail@plt+0x83e4>
   193c4:	b	193c8 <__assert_fail@plt+0x837c>
   193c8:	ldr	r0, [sp, #8]
   193cc:	ldrb	r0, [r0]
   193d0:	bl	1b134 <__assert_fail@plt+0xa0e8>
   193d4:	strb	r0, [sp, #3]
   193d8:	ldr	r0, [sp, #4]
   193dc:	ldrb	r0, [r0]
   193e0:	bl	1b134 <__assert_fail@plt+0xa0e8>
   193e4:	strb	r0, [sp, #2]
   193e8:	ldrb	r0, [sp, #3]
   193ec:	cmp	r0, #0
   193f0:	bne	193f8 <__assert_fail@plt+0x83ac>
   193f4:	b	19420 <__assert_fail@plt+0x83d4>
   193f8:	ldr	r0, [sp, #8]
   193fc:	add	r0, r0, #1
   19400:	str	r0, [sp, #8]
   19404:	ldr	r0, [sp, #4]
   19408:	add	r0, r0, #1
   1940c:	str	r0, [sp, #4]
   19410:	ldrb	r0, [sp, #3]
   19414:	ldrb	r1, [sp, #2]
   19418:	cmp	r0, r1
   1941c:	beq	193c8 <__assert_fail@plt+0x837c>
   19420:	ldrb	r0, [sp, #3]
   19424:	ldrb	r1, [sp, #2]
   19428:	sub	r0, r0, r1
   1942c:	str	r0, [fp, #-4]
   19430:	ldr	r0, [fp, #-4]
   19434:	mov	sp, fp
   19438:	pop	{fp, pc}
   1943c:	push	{fp, lr}
   19440:	mov	fp, sp
   19444:	sub	sp, sp, #16
   19448:	str	r0, [sp, #8]
   1944c:	ldr	r0, [sp, #8]
   19450:	bl	10ed8 <__fpending@plt>
   19454:	cmp	r0, #0
   19458:	movw	r0, #0
   1945c:	movne	r0, #1
   19460:	and	r0, r0, #1
   19464:	strb	r0, [sp, #7]
   19468:	ldr	r0, [sp, #8]
   1946c:	bl	10ee4 <ferror_unlocked@plt>
   19470:	cmp	r0, #0
   19474:	movw	r0, #0
   19478:	movne	r0, #1
   1947c:	and	r0, r0, #1
   19480:	strb	r0, [sp, #6]
   19484:	ldr	r0, [sp, #8]
   19488:	bl	13018 <__assert_fail@plt+0x1fcc>
   1948c:	cmp	r0, #0
   19490:	movw	r0, #0
   19494:	movne	r0, #1
   19498:	and	r0, r0, #1
   1949c:	strb	r0, [sp, #5]
   194a0:	ldrb	r0, [sp, #6]
   194a4:	tst	r0, #1
   194a8:	bne	194d4 <__assert_fail@plt+0x8488>
   194ac:	ldrb	r0, [sp, #5]
   194b0:	tst	r0, #1
   194b4:	beq	194f8 <__assert_fail@plt+0x84ac>
   194b8:	ldrb	r0, [sp, #7]
   194bc:	tst	r0, #1
   194c0:	bne	194d4 <__assert_fail@plt+0x8488>
   194c4:	bl	10f80 <__errno_location@plt>
   194c8:	ldr	r0, [r0]
   194cc:	cmp	r0, #9
   194d0:	beq	194f8 <__assert_fail@plt+0x84ac>
   194d4:	ldrb	r0, [sp, #5]
   194d8:	tst	r0, #1
   194dc:	bne	194ec <__assert_fail@plt+0x84a0>
   194e0:	bl	10f80 <__errno_location@plt>
   194e4:	movw	lr, #0
   194e8:	str	lr, [r0]
   194ec:	mvn	r0, #0
   194f0:	str	r0, [fp, #-4]
   194f4:	b	19500 <__assert_fail@plt+0x84b4>
   194f8:	movw	r0, #0
   194fc:	str	r0, [fp, #-4]
   19500:	ldr	r0, [fp, #-4]
   19504:	mov	sp, fp
   19508:	pop	{fp, pc}
   1950c:	push	{fp, lr}
   19510:	mov	fp, sp
   19514:	bl	10f80 <__errno_location@plt>
   19518:	movw	lr, #12
   1951c:	str	lr, [r0]
   19520:	movw	r0, #0
   19524:	pop	{fp, pc}
   19528:	push	{fp, lr}
   1952c:	mov	fp, sp
   19530:	sub	sp, sp, #8
   19534:	str	r0, [sp, #4]
   19538:	ldr	r0, [sp, #4]
   1953c:	cmn	r0, #1
   19540:	bhi	19554 <__assert_fail@plt+0x8508>
   19544:	ldr	r0, [sp, #4]
   19548:	bl	19270 <__assert_fail@plt+0x8224>
   1954c:	str	r0, [sp]
   19550:	b	1955c <__assert_fail@plt+0x8510>
   19554:	bl	1950c <__assert_fail@plt+0x84c0>
   19558:	str	r0, [sp]
   1955c:	ldr	r0, [sp]
   19560:	mov	sp, fp
   19564:	pop	{fp, pc}
   19568:	push	{fp, lr}
   1956c:	mov	fp, sp
   19570:	sub	sp, sp, #16
   19574:	str	r0, [fp, #-4]
   19578:	str	r1, [sp, #8]
   1957c:	ldr	r0, [sp, #8]
   19580:	cmn	r0, #1
   19584:	bhi	195bc <__assert_fail@plt+0x8570>
   19588:	ldr	r0, [fp, #-4]
   1958c:	ldr	r1, [sp, #8]
   19590:	ldr	r2, [sp, #8]
   19594:	cmp	r2, #0
   19598:	movw	r2, #0
   1959c:	movne	r2, #1
   195a0:	mvn	r3, #0
   195a4:	eor	r2, r2, r3
   195a8:	and	r2, r2, #1
   195ac:	orr	r1, r1, r2
   195b0:	bl	192e0 <__assert_fail@plt+0x8294>
   195b4:	str	r0, [sp, #4]
   195b8:	b	195c4 <__assert_fail@plt+0x8578>
   195bc:	bl	1950c <__assert_fail@plt+0x84c0>
   195c0:	str	r0, [sp, #4]
   195c4:	ldr	r0, [sp, #4]
   195c8:	mov	sp, fp
   195cc:	pop	{fp, pc}
   195d0:	push	{fp, lr}
   195d4:	mov	fp, sp
   195d8:	sub	sp, sp, #16
   195dc:	str	r0, [sp, #8]
   195e0:	str	r1, [sp, #4]
   195e4:	ldr	r0, [sp, #8]
   195e8:	mvn	r1, #0
   195ec:	cmp	r1, r0
   195f0:	bcs	19614 <__assert_fail@plt+0x85c8>
   195f4:	ldr	r0, [sp, #4]
   195f8:	cmp	r0, #0
   195fc:	beq	1960c <__assert_fail@plt+0x85c0>
   19600:	bl	1950c <__assert_fail@plt+0x84c0>
   19604:	str	r0, [fp, #-4]
   19608:	b	19654 <__assert_fail@plt+0x8608>
   1960c:	movw	r0, #0
   19610:	str	r0, [sp, #8]
   19614:	ldr	r0, [sp, #4]
   19618:	mvn	r1, #0
   1961c:	cmp	r1, r0
   19620:	bcs	19644 <__assert_fail@plt+0x85f8>
   19624:	ldr	r0, [sp, #8]
   19628:	cmp	r0, #0
   1962c:	beq	1963c <__assert_fail@plt+0x85f0>
   19630:	bl	1950c <__assert_fail@plt+0x84c0>
   19634:	str	r0, [fp, #-4]
   19638:	b	19654 <__assert_fail@plt+0x8608>
   1963c:	movw	r0, #0
   19640:	str	r0, [sp, #4]
   19644:	ldr	r0, [sp, #8]
   19648:	ldr	r1, [sp, #4]
   1964c:	bl	191d4 <__assert_fail@plt+0x8188>
   19650:	str	r0, [fp, #-4]
   19654:	ldr	r0, [fp, #-4]
   19658:	mov	sp, fp
   1965c:	pop	{fp, pc}
   19660:	push	{fp, lr}
   19664:	mov	fp, sp
   19668:	sub	sp, sp, #16
   1966c:	str	r0, [fp, #-4]
   19670:	str	r1, [sp, #8]
   19674:	str	r2, [sp, #4]
   19678:	ldr	r0, [sp, #8]
   1967c:	cmp	r0, #0
   19680:	beq	19690 <__assert_fail@plt+0x8644>
   19684:	ldr	r0, [sp, #4]
   19688:	cmp	r0, #0
   1968c:	bne	1969c <__assert_fail@plt+0x8650>
   19690:	movw	r0, #1
   19694:	str	r0, [sp, #4]
   19698:	str	r0, [sp, #8]
   1969c:	ldr	r0, [sp, #8]
   196a0:	cmn	r0, #1
   196a4:	bhi	196cc <__assert_fail@plt+0x8680>
   196a8:	ldr	r0, [sp, #4]
   196ac:	cmn	r0, #1
   196b0:	bhi	196cc <__assert_fail@plt+0x8680>
   196b4:	ldr	r0, [fp, #-4]
   196b8:	ldr	r1, [sp, #8]
   196bc:	ldr	r2, [sp, #4]
   196c0:	bl	197ec <__assert_fail@plt+0x87a0>
   196c4:	str	r0, [sp]
   196c8:	b	196d4 <__assert_fail@plt+0x8688>
   196cc:	bl	1950c <__assert_fail@plt+0x84c0>
   196d0:	str	r0, [sp]
   196d4:	ldr	r0, [sp]
   196d8:	mov	sp, fp
   196dc:	pop	{fp, pc}
   196e0:	push	{fp, lr}
   196e4:	mov	fp, sp
   196e8:	sub	sp, sp, #8
   196ec:	movw	r0, #14
   196f0:	bl	10fe0 <nl_langinfo@plt>
   196f4:	str	r0, [sp, #4]
   196f8:	ldr	r0, [sp, #4]
   196fc:	movw	lr, #0
   19700:	cmp	r0, lr
   19704:	bne	19714 <__assert_fail@plt+0x86c8>
   19708:	movw	r0, #47729	; 0xba71
   1970c:	movt	r0, #1
   19710:	str	r0, [sp, #4]
   19714:	ldr	r0, [sp, #4]
   19718:	ldrb	r0, [r0]
   1971c:	cmp	r0, #0
   19720:	bne	19730 <__assert_fail@plt+0x86e4>
   19724:	movw	r0, #49893	; 0xc2e5
   19728:	movt	r0, #1
   1972c:	str	r0, [sp, #4]
   19730:	ldr	r0, [sp, #4]
   19734:	mov	sp, fp
   19738:	pop	{fp, pc}
   1973c:	push	{fp, lr}
   19740:	mov	fp, sp
   19744:	sub	sp, sp, #32
   19748:	str	r0, [fp, #-8]
   1974c:	str	r1, [fp, #-12]
   19750:	str	r2, [sp, #16]
   19754:	str	r3, [sp, #12]
   19758:	ldr	r0, [fp, #-8]
   1975c:	movw	r1, #0
   19760:	cmp	r0, r1
   19764:	bne	19770 <__assert_fail@plt+0x8724>
   19768:	add	r0, sp, #4
   1976c:	str	r0, [fp, #-8]
   19770:	ldr	r0, [fp, #-8]
   19774:	ldr	r1, [fp, #-12]
   19778:	ldr	r2, [sp, #16]
   1977c:	ldr	r3, [sp, #12]
   19780:	bl	10ef0 <mbrtowc@plt>
   19784:	str	r0, [sp, #8]
   19788:	ldr	r0, [sp, #8]
   1978c:	mvn	r1, #1
   19790:	cmp	r1, r0
   19794:	bhi	197d8 <__assert_fail@plt+0x878c>
   19798:	ldr	r0, [sp, #16]
   1979c:	cmp	r0, #0
   197a0:	beq	197d8 <__assert_fail@plt+0x878c>
   197a4:	movw	r0, #0
   197a8:	bl	1b1bc <__assert_fail@plt+0xa170>
   197ac:	tst	r0, #1
   197b0:	bne	197d8 <__assert_fail@plt+0x878c>
   197b4:	ldr	r0, [fp, #-12]
   197b8:	ldrb	r0, [r0]
   197bc:	strb	r0, [sp, #3]
   197c0:	ldrb	r0, [sp, #3]
   197c4:	ldr	r1, [fp, #-8]
   197c8:	str	r0, [r1]
   197cc:	movw	r0, #1
   197d0:	str	r0, [fp, #-4]
   197d4:	b	197e0 <__assert_fail@plt+0x8794>
   197d8:	ldr	r0, [sp, #8]
   197dc:	str	r0, [fp, #-4]
   197e0:	ldr	r0, [fp, #-4]
   197e4:	mov	sp, fp
   197e8:	pop	{fp, pc}
   197ec:	push	{fp, lr}
   197f0:	mov	fp, sp
   197f4:	sub	sp, sp, #176	; 0xb0
   197f8:	str	r0, [fp, #-8]
   197fc:	str	r1, [fp, #-12]
   19800:	str	r2, [fp, #-16]
   19804:	b	19bbc <__assert_fail@plt+0x8b70>
   19808:	b	199dc <__assert_fail@plt+0x8990>
   1980c:	ldr	r0, [fp, #-16]
   19810:	cmp	r0, #0
   19814:	bcs	19918 <__assert_fail@plt+0x88cc>
   19818:	ldr	r0, [fp, #-12]
   1981c:	cmp	r0, #0
   19820:	bcs	198a8 <__assert_fail@plt+0x885c>
   19824:	b	19844 <__assert_fail@plt+0x87f8>
   19828:	ldr	r0, [fp, #-12]
   1982c:	ldr	r1, [fp, #-16]
   19830:	movw	r2, #127	; 0x7f
   19834:	udiv	r1, r2, r1
   19838:	cmp	r0, r1
   1983c:	bcc	199ac <__assert_fail@plt+0x8960>
   19840:	b	199c4 <__assert_fail@plt+0x8978>
   19844:	b	19858 <__assert_fail@plt+0x880c>
   19848:	ldr	r0, [fp, #-16]
   1984c:	cmp	r0, #1
   19850:	bcc	19868 <__assert_fail@plt+0x881c>
   19854:	b	19874 <__assert_fail@plt+0x8828>
   19858:	ldr	r0, [fp, #-16]
   1985c:	movw	r1, #0
   19860:	cmp	r1, r0
   19864:	bcs	19874 <__assert_fail@plt+0x8828>
   19868:	movw	r0, #0
   1986c:	str	r0, [fp, #-24]	; 0xffffffe8
   19870:	b	1988c <__assert_fail@plt+0x8840>
   19874:	ldr	r0, [fp, #-16]
   19878:	movw	r1, #0
   1987c:	sub	r0, r1, r0
   19880:	movw	r1, #127	; 0x7f
   19884:	udiv	r0, r1, r0
   19888:	str	r0, [fp, #-24]	; 0xffffffe8
   1988c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19890:	ldr	r1, [fp, #-12]
   19894:	mvn	r2, #0
   19898:	sub	r1, r2, r1
   1989c:	cmp	r0, r1
   198a0:	bls	199ac <__assert_fail@plt+0x8960>
   198a4:	b	199c4 <__assert_fail@plt+0x8978>
   198a8:	ldr	r0, [fp, #-16]
   198ac:	cmn	r0, #1
   198b0:	bne	198fc <__assert_fail@plt+0x88b0>
   198b4:	b	198d4 <__assert_fail@plt+0x8888>
   198b8:	ldr	r0, [fp, #-12]
   198bc:	mvn	r1, #127	; 0x7f
   198c0:	add	r0, r0, r1
   198c4:	movw	r1, #0
   198c8:	cmp	r1, r0
   198cc:	bcc	199ac <__assert_fail@plt+0x8960>
   198d0:	b	199c4 <__assert_fail@plt+0x8978>
   198d4:	ldr	r0, [fp, #-12]
   198d8:	movw	r1, #0
   198dc:	cmp	r1, r0
   198e0:	bcs	199c4 <__assert_fail@plt+0x8978>
   198e4:	ldr	r0, [fp, #-12]
   198e8:	sub	r0, r0, #1
   198ec:	movw	r1, #127	; 0x7f
   198f0:	cmp	r1, r0
   198f4:	bcc	199ac <__assert_fail@plt+0x8960>
   198f8:	b	199c4 <__assert_fail@plt+0x8978>
   198fc:	ldr	r0, [fp, #-16]
   19900:	mvn	r1, #127	; 0x7f
   19904:	udiv	r0, r1, r0
   19908:	ldr	r1, [fp, #-12]
   1990c:	cmp	r0, r1
   19910:	bcc	199ac <__assert_fail@plt+0x8960>
   19914:	b	199c4 <__assert_fail@plt+0x8978>
   19918:	ldr	r0, [fp, #-16]
   1991c:	cmp	r0, #0
   19920:	bne	19928 <__assert_fail@plt+0x88dc>
   19924:	b	199c4 <__assert_fail@plt+0x8978>
   19928:	ldr	r0, [fp, #-12]
   1992c:	cmp	r0, #0
   19930:	bcs	19994 <__assert_fail@plt+0x8948>
   19934:	ldr	r0, [fp, #-12]
   19938:	cmn	r0, #1
   1993c:	bne	19978 <__assert_fail@plt+0x892c>
   19940:	b	19960 <__assert_fail@plt+0x8914>
   19944:	ldr	r0, [fp, #-16]
   19948:	mvn	r1, #127	; 0x7f
   1994c:	add	r0, r0, r1
   19950:	movw	r1, #0
   19954:	cmp	r1, r0
   19958:	bcc	199ac <__assert_fail@plt+0x8960>
   1995c:	b	199c4 <__assert_fail@plt+0x8978>
   19960:	ldr	r0, [fp, #-16]
   19964:	sub	r0, r0, #1
   19968:	movw	r1, #127	; 0x7f
   1996c:	cmp	r1, r0
   19970:	bcc	199ac <__assert_fail@plt+0x8960>
   19974:	b	199c4 <__assert_fail@plt+0x8978>
   19978:	ldr	r0, [fp, #-12]
   1997c:	mvn	r1, #127	; 0x7f
   19980:	udiv	r0, r1, r0
   19984:	ldr	r1, [fp, #-16]
   19988:	cmp	r0, r1
   1998c:	bcc	199ac <__assert_fail@plt+0x8960>
   19990:	b	199c4 <__assert_fail@plt+0x8978>
   19994:	ldr	r0, [fp, #-16]
   19998:	movw	r1, #127	; 0x7f
   1999c:	udiv	r0, r1, r0
   199a0:	ldr	r1, [fp, #-12]
   199a4:	cmp	r0, r1
   199a8:	bcs	199c4 <__assert_fail@plt+0x8978>
   199ac:	ldr	r0, [fp, #-12]
   199b0:	ldr	r1, [fp, #-16]
   199b4:	mul	r0, r0, r1
   199b8:	sxtb	r0, r0
   199bc:	str	r0, [fp, #-20]	; 0xffffffec
   199c0:	b	1ab3c <__assert_fail@plt+0x9af0>
   199c4:	ldr	r0, [fp, #-12]
   199c8:	ldr	r1, [fp, #-16]
   199cc:	mul	r0, r0, r1
   199d0:	sxtb	r0, r0
   199d4:	str	r0, [fp, #-20]	; 0xffffffec
   199d8:	b	1ab54 <__assert_fail@plt+0x9b08>
   199dc:	ldr	r0, [fp, #-16]
   199e0:	cmp	r0, #0
   199e4:	bcs	19af0 <__assert_fail@plt+0x8aa4>
   199e8:	ldr	r0, [fp, #-12]
   199ec:	cmp	r0, #0
   199f0:	bcs	19a78 <__assert_fail@plt+0x8a2c>
   199f4:	b	19a14 <__assert_fail@plt+0x89c8>
   199f8:	ldr	r0, [fp, #-12]
   199fc:	ldr	r1, [fp, #-16]
   19a00:	movw	r2, #255	; 0xff
   19a04:	udiv	r1, r2, r1
   19a08:	cmp	r0, r1
   19a0c:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19a10:	b	19ba4 <__assert_fail@plt+0x8b58>
   19a14:	b	19a28 <__assert_fail@plt+0x89dc>
   19a18:	ldr	r0, [fp, #-16]
   19a1c:	cmp	r0, #1
   19a20:	bcc	19a38 <__assert_fail@plt+0x89ec>
   19a24:	b	19a44 <__assert_fail@plt+0x89f8>
   19a28:	ldr	r0, [fp, #-16]
   19a2c:	movw	r1, #0
   19a30:	cmp	r1, r0
   19a34:	bcs	19a44 <__assert_fail@plt+0x89f8>
   19a38:	movw	r0, #0
   19a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   19a40:	b	19a5c <__assert_fail@plt+0x8a10>
   19a44:	ldr	r0, [fp, #-16]
   19a48:	movw	r1, #0
   19a4c:	sub	r0, r1, r0
   19a50:	movw	r1, #255	; 0xff
   19a54:	udiv	r0, r1, r0
   19a58:	str	r0, [fp, #-28]	; 0xffffffe4
   19a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19a60:	ldr	r1, [fp, #-12]
   19a64:	mvn	r2, #0
   19a68:	sub	r1, r2, r1
   19a6c:	cmp	r0, r1
   19a70:	bls	19b8c <__assert_fail@plt+0x8b40>
   19a74:	b	19ba4 <__assert_fail@plt+0x8b58>
   19a78:	b	19a80 <__assert_fail@plt+0x8a34>
   19a7c:	b	19a84 <__assert_fail@plt+0x8a38>
   19a80:	b	19ad4 <__assert_fail@plt+0x8a88>
   19a84:	ldr	r0, [fp, #-16]
   19a88:	cmn	r0, #1
   19a8c:	bne	19ad4 <__assert_fail@plt+0x8a88>
   19a90:	b	19aac <__assert_fail@plt+0x8a60>
   19a94:	ldr	r0, [fp, #-12]
   19a98:	add	r0, r0, #0
   19a9c:	movw	r1, #0
   19aa0:	cmp	r1, r0
   19aa4:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19aa8:	b	19ba4 <__assert_fail@plt+0x8b58>
   19aac:	ldr	r0, [fp, #-12]
   19ab0:	movw	r1, #0
   19ab4:	cmp	r1, r0
   19ab8:	bcs	19ba4 <__assert_fail@plt+0x8b58>
   19abc:	ldr	r0, [fp, #-12]
   19ac0:	sub	r0, r0, #1
   19ac4:	mvn	r1, #0
   19ac8:	cmp	r1, r0
   19acc:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19ad0:	b	19ba4 <__assert_fail@plt+0x8b58>
   19ad4:	ldr	r0, [fp, #-16]
   19ad8:	movw	r1, #0
   19adc:	udiv	r0, r1, r0
   19ae0:	ldr	r1, [fp, #-12]
   19ae4:	cmp	r0, r1
   19ae8:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19aec:	b	19ba4 <__assert_fail@plt+0x8b58>
   19af0:	ldr	r0, [fp, #-16]
   19af4:	cmp	r0, #0
   19af8:	bne	19b00 <__assert_fail@plt+0x8ab4>
   19afc:	b	19ba4 <__assert_fail@plt+0x8b58>
   19b00:	ldr	r0, [fp, #-12]
   19b04:	cmp	r0, #0
   19b08:	bcs	19b74 <__assert_fail@plt+0x8b28>
   19b0c:	b	19b14 <__assert_fail@plt+0x8ac8>
   19b10:	b	19b18 <__assert_fail@plt+0x8acc>
   19b14:	b	19b58 <__assert_fail@plt+0x8b0c>
   19b18:	ldr	r0, [fp, #-12]
   19b1c:	cmn	r0, #1
   19b20:	bne	19b58 <__assert_fail@plt+0x8b0c>
   19b24:	b	19b40 <__assert_fail@plt+0x8af4>
   19b28:	ldr	r0, [fp, #-16]
   19b2c:	add	r0, r0, #0
   19b30:	movw	r1, #0
   19b34:	cmp	r1, r0
   19b38:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19b3c:	b	19ba4 <__assert_fail@plt+0x8b58>
   19b40:	ldr	r0, [fp, #-16]
   19b44:	sub	r0, r0, #1
   19b48:	mvn	r1, #0
   19b4c:	cmp	r1, r0
   19b50:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19b54:	b	19ba4 <__assert_fail@plt+0x8b58>
   19b58:	ldr	r0, [fp, #-12]
   19b5c:	movw	r1, #0
   19b60:	udiv	r0, r1, r0
   19b64:	ldr	r1, [fp, #-16]
   19b68:	cmp	r0, r1
   19b6c:	bcc	19b8c <__assert_fail@plt+0x8b40>
   19b70:	b	19ba4 <__assert_fail@plt+0x8b58>
   19b74:	ldr	r0, [fp, #-16]
   19b78:	movw	r1, #255	; 0xff
   19b7c:	udiv	r0, r1, r0
   19b80:	ldr	r1, [fp, #-12]
   19b84:	cmp	r0, r1
   19b88:	bcs	19ba4 <__assert_fail@plt+0x8b58>
   19b8c:	ldr	r0, [fp, #-12]
   19b90:	ldr	r1, [fp, #-16]
   19b94:	mul	r0, r0, r1
   19b98:	and	r0, r0, #255	; 0xff
   19b9c:	str	r0, [fp, #-20]	; 0xffffffec
   19ba0:	b	1ab3c <__assert_fail@plt+0x9af0>
   19ba4:	ldr	r0, [fp, #-12]
   19ba8:	ldr	r1, [fp, #-16]
   19bac:	mul	r0, r0, r1
   19bb0:	and	r0, r0, #255	; 0xff
   19bb4:	str	r0, [fp, #-20]	; 0xffffffec
   19bb8:	b	1ab54 <__assert_fail@plt+0x9b08>
   19bbc:	b	19f74 <__assert_fail@plt+0x8f28>
   19bc0:	b	19d94 <__assert_fail@plt+0x8d48>
   19bc4:	ldr	r0, [fp, #-16]
   19bc8:	cmp	r0, #0
   19bcc:	bcs	19cd0 <__assert_fail@plt+0x8c84>
   19bd0:	ldr	r0, [fp, #-12]
   19bd4:	cmp	r0, #0
   19bd8:	bcs	19c60 <__assert_fail@plt+0x8c14>
   19bdc:	b	19bfc <__assert_fail@plt+0x8bb0>
   19be0:	ldr	r0, [fp, #-12]
   19be4:	ldr	r1, [fp, #-16]
   19be8:	movw	r2, #32767	; 0x7fff
   19bec:	udiv	r1, r2, r1
   19bf0:	cmp	r0, r1
   19bf4:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19bf8:	b	19d7c <__assert_fail@plt+0x8d30>
   19bfc:	b	19c10 <__assert_fail@plt+0x8bc4>
   19c00:	ldr	r0, [fp, #-16]
   19c04:	cmp	r0, #1
   19c08:	bcc	19c20 <__assert_fail@plt+0x8bd4>
   19c0c:	b	19c2c <__assert_fail@plt+0x8be0>
   19c10:	ldr	r0, [fp, #-16]
   19c14:	movw	r1, #0
   19c18:	cmp	r1, r0
   19c1c:	bcs	19c2c <__assert_fail@plt+0x8be0>
   19c20:	movw	r0, #0
   19c24:	str	r0, [fp, #-32]	; 0xffffffe0
   19c28:	b	19c44 <__assert_fail@plt+0x8bf8>
   19c2c:	ldr	r0, [fp, #-16]
   19c30:	movw	r1, #0
   19c34:	sub	r0, r1, r0
   19c38:	movw	r1, #32767	; 0x7fff
   19c3c:	udiv	r0, r1, r0
   19c40:	str	r0, [fp, #-32]	; 0xffffffe0
   19c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c48:	ldr	r1, [fp, #-12]
   19c4c:	mvn	r2, #0
   19c50:	sub	r1, r2, r1
   19c54:	cmp	r0, r1
   19c58:	bls	19d64 <__assert_fail@plt+0x8d18>
   19c5c:	b	19d7c <__assert_fail@plt+0x8d30>
   19c60:	ldr	r0, [fp, #-16]
   19c64:	cmn	r0, #1
   19c68:	bne	19cb4 <__assert_fail@plt+0x8c68>
   19c6c:	b	19c8c <__assert_fail@plt+0x8c40>
   19c70:	ldr	r0, [pc, #3840]	; 1ab78 <__assert_fail@plt+0x9b2c>
   19c74:	ldr	r1, [fp, #-12]
   19c78:	add	r0, r1, r0
   19c7c:	movw	r1, #0
   19c80:	cmp	r1, r0
   19c84:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19c88:	b	19d7c <__assert_fail@plt+0x8d30>
   19c8c:	ldr	r0, [fp, #-12]
   19c90:	movw	r1, #0
   19c94:	cmp	r1, r0
   19c98:	bcs	19d7c <__assert_fail@plt+0x8d30>
   19c9c:	ldr	r0, [fp, #-12]
   19ca0:	sub	r0, r0, #1
   19ca4:	movw	r1, #32767	; 0x7fff
   19ca8:	cmp	r1, r0
   19cac:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19cb0:	b	19d7c <__assert_fail@plt+0x8d30>
   19cb4:	ldr	r0, [pc, #3772]	; 1ab78 <__assert_fail@plt+0x9b2c>
   19cb8:	ldr	r1, [fp, #-16]
   19cbc:	udiv	r0, r0, r1
   19cc0:	ldr	r1, [fp, #-12]
   19cc4:	cmp	r0, r1
   19cc8:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19ccc:	b	19d7c <__assert_fail@plt+0x8d30>
   19cd0:	ldr	r0, [fp, #-16]
   19cd4:	cmp	r0, #0
   19cd8:	bne	19ce0 <__assert_fail@plt+0x8c94>
   19cdc:	b	19d7c <__assert_fail@plt+0x8d30>
   19ce0:	ldr	r0, [fp, #-12]
   19ce4:	cmp	r0, #0
   19ce8:	bcs	19d4c <__assert_fail@plt+0x8d00>
   19cec:	ldr	r0, [fp, #-12]
   19cf0:	cmn	r0, #1
   19cf4:	bne	19d30 <__assert_fail@plt+0x8ce4>
   19cf8:	b	19d18 <__assert_fail@plt+0x8ccc>
   19cfc:	ldr	r0, [pc, #3700]	; 1ab78 <__assert_fail@plt+0x9b2c>
   19d00:	ldr	r1, [fp, #-16]
   19d04:	add	r0, r1, r0
   19d08:	movw	r1, #0
   19d0c:	cmp	r1, r0
   19d10:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19d14:	b	19d7c <__assert_fail@plt+0x8d30>
   19d18:	ldr	r0, [fp, #-16]
   19d1c:	sub	r0, r0, #1
   19d20:	movw	r1, #32767	; 0x7fff
   19d24:	cmp	r1, r0
   19d28:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19d2c:	b	19d7c <__assert_fail@plt+0x8d30>
   19d30:	ldr	r0, [pc, #3648]	; 1ab78 <__assert_fail@plt+0x9b2c>
   19d34:	ldr	r1, [fp, #-12]
   19d38:	udiv	r0, r0, r1
   19d3c:	ldr	r1, [fp, #-16]
   19d40:	cmp	r0, r1
   19d44:	bcc	19d64 <__assert_fail@plt+0x8d18>
   19d48:	b	19d7c <__assert_fail@plt+0x8d30>
   19d4c:	ldr	r0, [fp, #-16]
   19d50:	movw	r1, #32767	; 0x7fff
   19d54:	udiv	r0, r1, r0
   19d58:	ldr	r1, [fp, #-12]
   19d5c:	cmp	r0, r1
   19d60:	bcs	19d7c <__assert_fail@plt+0x8d30>
   19d64:	ldr	r0, [fp, #-12]
   19d68:	ldr	r1, [fp, #-16]
   19d6c:	mul	r0, r0, r1
   19d70:	sxth	r0, r0
   19d74:	str	r0, [fp, #-20]	; 0xffffffec
   19d78:	b	1ab3c <__assert_fail@plt+0x9af0>
   19d7c:	ldr	r0, [fp, #-12]
   19d80:	ldr	r1, [fp, #-16]
   19d84:	mul	r0, r0, r1
   19d88:	sxth	r0, r0
   19d8c:	str	r0, [fp, #-20]	; 0xffffffec
   19d90:	b	1ab54 <__assert_fail@plt+0x9b08>
   19d94:	ldr	r0, [fp, #-16]
   19d98:	cmp	r0, #0
   19d9c:	bcs	19ea8 <__assert_fail@plt+0x8e5c>
   19da0:	ldr	r0, [fp, #-12]
   19da4:	cmp	r0, #0
   19da8:	bcs	19e30 <__assert_fail@plt+0x8de4>
   19dac:	b	19dcc <__assert_fail@plt+0x8d80>
   19db0:	ldr	r0, [fp, #-12]
   19db4:	ldr	r1, [fp, #-16]
   19db8:	movw	r2, #65535	; 0xffff
   19dbc:	udiv	r1, r2, r1
   19dc0:	cmp	r0, r1
   19dc4:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19dc8:	b	19f5c <__assert_fail@plt+0x8f10>
   19dcc:	b	19de0 <__assert_fail@plt+0x8d94>
   19dd0:	ldr	r0, [fp, #-16]
   19dd4:	cmp	r0, #1
   19dd8:	bcc	19df0 <__assert_fail@plt+0x8da4>
   19ddc:	b	19dfc <__assert_fail@plt+0x8db0>
   19de0:	ldr	r0, [fp, #-16]
   19de4:	movw	r1, #0
   19de8:	cmp	r1, r0
   19dec:	bcs	19dfc <__assert_fail@plt+0x8db0>
   19df0:	movw	r0, #0
   19df4:	str	r0, [fp, #-36]	; 0xffffffdc
   19df8:	b	19e14 <__assert_fail@plt+0x8dc8>
   19dfc:	ldr	r0, [fp, #-16]
   19e00:	movw	r1, #0
   19e04:	sub	r0, r1, r0
   19e08:	movw	r1, #65535	; 0xffff
   19e0c:	udiv	r0, r1, r0
   19e10:	str	r0, [fp, #-36]	; 0xffffffdc
   19e14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e18:	ldr	r1, [fp, #-12]
   19e1c:	mvn	r2, #0
   19e20:	sub	r1, r2, r1
   19e24:	cmp	r0, r1
   19e28:	bls	19f44 <__assert_fail@plt+0x8ef8>
   19e2c:	b	19f5c <__assert_fail@plt+0x8f10>
   19e30:	b	19e38 <__assert_fail@plt+0x8dec>
   19e34:	b	19e3c <__assert_fail@plt+0x8df0>
   19e38:	b	19e8c <__assert_fail@plt+0x8e40>
   19e3c:	ldr	r0, [fp, #-16]
   19e40:	cmn	r0, #1
   19e44:	bne	19e8c <__assert_fail@plt+0x8e40>
   19e48:	b	19e64 <__assert_fail@plt+0x8e18>
   19e4c:	ldr	r0, [fp, #-12]
   19e50:	add	r0, r0, #0
   19e54:	movw	r1, #0
   19e58:	cmp	r1, r0
   19e5c:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19e60:	b	19f5c <__assert_fail@plt+0x8f10>
   19e64:	ldr	r0, [fp, #-12]
   19e68:	movw	r1, #0
   19e6c:	cmp	r1, r0
   19e70:	bcs	19f5c <__assert_fail@plt+0x8f10>
   19e74:	ldr	r0, [fp, #-12]
   19e78:	sub	r0, r0, #1
   19e7c:	mvn	r1, #0
   19e80:	cmp	r1, r0
   19e84:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19e88:	b	19f5c <__assert_fail@plt+0x8f10>
   19e8c:	ldr	r0, [fp, #-16]
   19e90:	movw	r1, #0
   19e94:	udiv	r0, r1, r0
   19e98:	ldr	r1, [fp, #-12]
   19e9c:	cmp	r0, r1
   19ea0:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19ea4:	b	19f5c <__assert_fail@plt+0x8f10>
   19ea8:	ldr	r0, [fp, #-16]
   19eac:	cmp	r0, #0
   19eb0:	bne	19eb8 <__assert_fail@plt+0x8e6c>
   19eb4:	b	19f5c <__assert_fail@plt+0x8f10>
   19eb8:	ldr	r0, [fp, #-12]
   19ebc:	cmp	r0, #0
   19ec0:	bcs	19f2c <__assert_fail@plt+0x8ee0>
   19ec4:	b	19ecc <__assert_fail@plt+0x8e80>
   19ec8:	b	19ed0 <__assert_fail@plt+0x8e84>
   19ecc:	b	19f10 <__assert_fail@plt+0x8ec4>
   19ed0:	ldr	r0, [fp, #-12]
   19ed4:	cmn	r0, #1
   19ed8:	bne	19f10 <__assert_fail@plt+0x8ec4>
   19edc:	b	19ef8 <__assert_fail@plt+0x8eac>
   19ee0:	ldr	r0, [fp, #-16]
   19ee4:	add	r0, r0, #0
   19ee8:	movw	r1, #0
   19eec:	cmp	r1, r0
   19ef0:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19ef4:	b	19f5c <__assert_fail@plt+0x8f10>
   19ef8:	ldr	r0, [fp, #-16]
   19efc:	sub	r0, r0, #1
   19f00:	mvn	r1, #0
   19f04:	cmp	r1, r0
   19f08:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19f0c:	b	19f5c <__assert_fail@plt+0x8f10>
   19f10:	ldr	r0, [fp, #-12]
   19f14:	movw	r1, #0
   19f18:	udiv	r0, r1, r0
   19f1c:	ldr	r1, [fp, #-16]
   19f20:	cmp	r0, r1
   19f24:	bcc	19f44 <__assert_fail@plt+0x8ef8>
   19f28:	b	19f5c <__assert_fail@plt+0x8f10>
   19f2c:	ldr	r0, [fp, #-16]
   19f30:	movw	r1, #65535	; 0xffff
   19f34:	udiv	r0, r1, r0
   19f38:	ldr	r1, [fp, #-12]
   19f3c:	cmp	r0, r1
   19f40:	bcs	19f5c <__assert_fail@plt+0x8f10>
   19f44:	ldr	r0, [fp, #-12]
   19f48:	ldr	r1, [fp, #-16]
   19f4c:	mul	r0, r0, r1
   19f50:	uxth	r0, r0
   19f54:	str	r0, [fp, #-20]	; 0xffffffec
   19f58:	b	1ab3c <__assert_fail@plt+0x9af0>
   19f5c:	ldr	r0, [fp, #-12]
   19f60:	ldr	r1, [fp, #-16]
   19f64:	mul	r0, r0, r1
   19f68:	uxth	r0, r0
   19f6c:	str	r0, [fp, #-20]	; 0xffffffec
   19f70:	b	1ab54 <__assert_fail@plt+0x9b08>
   19f74:	b	19f78 <__assert_fail@plt+0x8f2c>
   19f78:	b	1a13c <__assert_fail@plt+0x90f0>
   19f7c:	ldr	r0, [fp, #-16]
   19f80:	cmp	r0, #0
   19f84:	bcs	1a084 <__assert_fail@plt+0x9038>
   19f88:	ldr	r0, [fp, #-12]
   19f8c:	cmp	r0, #0
   19f90:	bcs	1a018 <__assert_fail@plt+0x8fcc>
   19f94:	b	19fb4 <__assert_fail@plt+0x8f68>
   19f98:	ldr	r0, [pc, #3024]	; 1ab70 <__assert_fail@plt+0x9b24>
   19f9c:	ldr	r1, [fp, #-12]
   19fa0:	ldr	r2, [fp, #-16]
   19fa4:	udiv	r0, r0, r2
   19fa8:	cmp	r1, r0
   19fac:	bcc	1a114 <__assert_fail@plt+0x90c8>
   19fb0:	b	1a128 <__assert_fail@plt+0x90dc>
   19fb4:	b	19fc8 <__assert_fail@plt+0x8f7c>
   19fb8:	ldr	r0, [fp, #-16]
   19fbc:	cmp	r0, #1
   19fc0:	bcc	19fd8 <__assert_fail@plt+0x8f8c>
   19fc4:	b	19fe4 <__assert_fail@plt+0x8f98>
   19fc8:	ldr	r0, [fp, #-16]
   19fcc:	movw	r1, #0
   19fd0:	cmp	r1, r0
   19fd4:	bcs	19fe4 <__assert_fail@plt+0x8f98>
   19fd8:	movw	r0, #0
   19fdc:	str	r0, [fp, #-40]	; 0xffffffd8
   19fe0:	b	19ffc <__assert_fail@plt+0x8fb0>
   19fe4:	ldr	r0, [pc, #2948]	; 1ab70 <__assert_fail@plt+0x9b24>
   19fe8:	ldr	r1, [fp, #-16]
   19fec:	movw	r2, #0
   19ff0:	sub	r1, r2, r1
   19ff4:	udiv	r0, r0, r1
   19ff8:	str	r0, [fp, #-40]	; 0xffffffd8
   19ffc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a000:	ldr	r1, [fp, #-12]
   1a004:	mvn	r2, #0
   1a008:	sub	r1, r2, r1
   1a00c:	cmp	r0, r1
   1a010:	bls	1a114 <__assert_fail@plt+0x90c8>
   1a014:	b	1a128 <__assert_fail@plt+0x90dc>
   1a018:	ldr	r0, [fp, #-16]
   1a01c:	cmn	r0, #1
   1a020:	bne	1a068 <__assert_fail@plt+0x901c>
   1a024:	b	1a040 <__assert_fail@plt+0x8ff4>
   1a028:	ldr	r0, [fp, #-12]
   1a02c:	add	r0, r0, #-2147483648	; 0x80000000
   1a030:	movw	r1, #0
   1a034:	cmp	r1, r0
   1a038:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a03c:	b	1a128 <__assert_fail@plt+0x90dc>
   1a040:	ldr	r0, [fp, #-12]
   1a044:	movw	r1, #0
   1a048:	cmp	r1, r0
   1a04c:	bcs	1a128 <__assert_fail@plt+0x90dc>
   1a050:	ldr	r0, [pc, #2840]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a054:	ldr	r1, [fp, #-12]
   1a058:	sub	r1, r1, #1
   1a05c:	cmp	r0, r1
   1a060:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a064:	b	1a128 <__assert_fail@plt+0x90dc>
   1a068:	ldr	r0, [pc, #2820]	; 1ab74 <__assert_fail@plt+0x9b28>
   1a06c:	ldr	r1, [fp, #-16]
   1a070:	udiv	r0, r0, r1
   1a074:	ldr	r1, [fp, #-12]
   1a078:	cmp	r0, r1
   1a07c:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a080:	b	1a128 <__assert_fail@plt+0x90dc>
   1a084:	ldr	r0, [fp, #-16]
   1a088:	cmp	r0, #0
   1a08c:	bne	1a094 <__assert_fail@plt+0x9048>
   1a090:	b	1a128 <__assert_fail@plt+0x90dc>
   1a094:	ldr	r0, [fp, #-12]
   1a098:	cmp	r0, #0
   1a09c:	bcs	1a0fc <__assert_fail@plt+0x90b0>
   1a0a0:	ldr	r0, [fp, #-12]
   1a0a4:	cmn	r0, #1
   1a0a8:	bne	1a0e0 <__assert_fail@plt+0x9094>
   1a0ac:	b	1a0c8 <__assert_fail@plt+0x907c>
   1a0b0:	ldr	r0, [fp, #-16]
   1a0b4:	add	r0, r0, #-2147483648	; 0x80000000
   1a0b8:	movw	r1, #0
   1a0bc:	cmp	r1, r0
   1a0c0:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a0c4:	b	1a128 <__assert_fail@plt+0x90dc>
   1a0c8:	ldr	r0, [pc, #2720]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a0cc:	ldr	r1, [fp, #-16]
   1a0d0:	sub	r1, r1, #1
   1a0d4:	cmp	r0, r1
   1a0d8:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a0dc:	b	1a128 <__assert_fail@plt+0x90dc>
   1a0e0:	ldr	r0, [pc, #2700]	; 1ab74 <__assert_fail@plt+0x9b28>
   1a0e4:	ldr	r1, [fp, #-12]
   1a0e8:	udiv	r0, r0, r1
   1a0ec:	ldr	r1, [fp, #-16]
   1a0f0:	cmp	r0, r1
   1a0f4:	bcc	1a114 <__assert_fail@plt+0x90c8>
   1a0f8:	b	1a128 <__assert_fail@plt+0x90dc>
   1a0fc:	ldr	r0, [pc, #2668]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a100:	ldr	r1, [fp, #-16]
   1a104:	udiv	r0, r0, r1
   1a108:	ldr	r1, [fp, #-12]
   1a10c:	cmp	r0, r1
   1a110:	bcs	1a128 <__assert_fail@plt+0x90dc>
   1a114:	ldr	r0, [fp, #-12]
   1a118:	ldr	r1, [fp, #-16]
   1a11c:	mul	r0, r0, r1
   1a120:	str	r0, [fp, #-20]	; 0xffffffec
   1a124:	b	1ab3c <__assert_fail@plt+0x9af0>
   1a128:	ldr	r0, [fp, #-12]
   1a12c:	ldr	r1, [fp, #-16]
   1a130:	mul	r0, r0, r1
   1a134:	str	r0, [fp, #-20]	; 0xffffffec
   1a138:	b	1ab54 <__assert_fail@plt+0x9b08>
   1a13c:	ldr	r0, [fp, #-16]
   1a140:	cmp	r0, #0
   1a144:	bcs	1a250 <__assert_fail@plt+0x9204>
   1a148:	ldr	r0, [fp, #-12]
   1a14c:	cmp	r0, #0
   1a150:	bcs	1a1d8 <__assert_fail@plt+0x918c>
   1a154:	b	1a174 <__assert_fail@plt+0x9128>
   1a158:	ldr	r0, [fp, #-12]
   1a15c:	ldr	r1, [fp, #-16]
   1a160:	mvn	r2, #0
   1a164:	udiv	r1, r2, r1
   1a168:	cmp	r0, r1
   1a16c:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a170:	b	1a300 <__assert_fail@plt+0x92b4>
   1a174:	b	1a188 <__assert_fail@plt+0x913c>
   1a178:	ldr	r0, [fp, #-16]
   1a17c:	cmp	r0, #1
   1a180:	bcc	1a198 <__assert_fail@plt+0x914c>
   1a184:	b	1a1a4 <__assert_fail@plt+0x9158>
   1a188:	ldr	r0, [fp, #-16]
   1a18c:	movw	r1, #0
   1a190:	cmp	r1, r0
   1a194:	bcs	1a1a4 <__assert_fail@plt+0x9158>
   1a198:	movw	r0, #1
   1a19c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a1a0:	b	1a1bc <__assert_fail@plt+0x9170>
   1a1a4:	ldr	r0, [fp, #-16]
   1a1a8:	movw	r1, #0
   1a1ac:	sub	r0, r1, r0
   1a1b0:	mvn	r1, #0
   1a1b4:	udiv	r0, r1, r0
   1a1b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a1bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1c0:	ldr	r1, [fp, #-12]
   1a1c4:	mvn	r2, #0
   1a1c8:	sub	r1, r2, r1
   1a1cc:	cmp	r0, r1
   1a1d0:	bls	1a2ec <__assert_fail@plt+0x92a0>
   1a1d4:	b	1a300 <__assert_fail@plt+0x92b4>
   1a1d8:	b	1a1e0 <__assert_fail@plt+0x9194>
   1a1dc:	b	1a1e4 <__assert_fail@plt+0x9198>
   1a1e0:	b	1a234 <__assert_fail@plt+0x91e8>
   1a1e4:	ldr	r0, [fp, #-16]
   1a1e8:	cmn	r0, #1
   1a1ec:	bne	1a234 <__assert_fail@plt+0x91e8>
   1a1f0:	b	1a20c <__assert_fail@plt+0x91c0>
   1a1f4:	ldr	r0, [fp, #-12]
   1a1f8:	add	r0, r0, #0
   1a1fc:	movw	r1, #0
   1a200:	cmp	r1, r0
   1a204:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a208:	b	1a300 <__assert_fail@plt+0x92b4>
   1a20c:	ldr	r0, [fp, #-12]
   1a210:	movw	r1, #0
   1a214:	cmp	r1, r0
   1a218:	bcs	1a300 <__assert_fail@plt+0x92b4>
   1a21c:	ldr	r0, [fp, #-12]
   1a220:	sub	r0, r0, #1
   1a224:	mvn	r1, #0
   1a228:	cmp	r1, r0
   1a22c:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a230:	b	1a300 <__assert_fail@plt+0x92b4>
   1a234:	ldr	r0, [fp, #-16]
   1a238:	movw	r1, #0
   1a23c:	udiv	r0, r1, r0
   1a240:	ldr	r1, [fp, #-12]
   1a244:	cmp	r0, r1
   1a248:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a24c:	b	1a300 <__assert_fail@plt+0x92b4>
   1a250:	ldr	r0, [fp, #-16]
   1a254:	cmp	r0, #0
   1a258:	bne	1a260 <__assert_fail@plt+0x9214>
   1a25c:	b	1a300 <__assert_fail@plt+0x92b4>
   1a260:	ldr	r0, [fp, #-12]
   1a264:	cmp	r0, #0
   1a268:	bcs	1a2d4 <__assert_fail@plt+0x9288>
   1a26c:	b	1a274 <__assert_fail@plt+0x9228>
   1a270:	b	1a278 <__assert_fail@plt+0x922c>
   1a274:	b	1a2b8 <__assert_fail@plt+0x926c>
   1a278:	ldr	r0, [fp, #-12]
   1a27c:	cmn	r0, #1
   1a280:	bne	1a2b8 <__assert_fail@plt+0x926c>
   1a284:	b	1a2a0 <__assert_fail@plt+0x9254>
   1a288:	ldr	r0, [fp, #-16]
   1a28c:	add	r0, r0, #0
   1a290:	movw	r1, #0
   1a294:	cmp	r1, r0
   1a298:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a29c:	b	1a300 <__assert_fail@plt+0x92b4>
   1a2a0:	ldr	r0, [fp, #-16]
   1a2a4:	sub	r0, r0, #1
   1a2a8:	mvn	r1, #0
   1a2ac:	cmp	r1, r0
   1a2b0:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a2b4:	b	1a300 <__assert_fail@plt+0x92b4>
   1a2b8:	ldr	r0, [fp, #-12]
   1a2bc:	movw	r1, #0
   1a2c0:	udiv	r0, r1, r0
   1a2c4:	ldr	r1, [fp, #-16]
   1a2c8:	cmp	r0, r1
   1a2cc:	bcc	1a2ec <__assert_fail@plt+0x92a0>
   1a2d0:	b	1a300 <__assert_fail@plt+0x92b4>
   1a2d4:	ldr	r0, [fp, #-16]
   1a2d8:	mvn	r1, #0
   1a2dc:	udiv	r0, r1, r0
   1a2e0:	ldr	r1, [fp, #-12]
   1a2e4:	cmp	r0, r1
   1a2e8:	bcs	1a300 <__assert_fail@plt+0x92b4>
   1a2ec:	ldr	r0, [fp, #-12]
   1a2f0:	ldr	r1, [fp, #-16]
   1a2f4:	mul	r0, r0, r1
   1a2f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a2fc:	b	1ab3c <__assert_fail@plt+0x9af0>
   1a300:	ldr	r0, [fp, #-12]
   1a304:	ldr	r1, [fp, #-16]
   1a308:	mul	r0, r0, r1
   1a30c:	str	r0, [fp, #-20]	; 0xffffffec
   1a310:	b	1ab54 <__assert_fail@plt+0x9b08>
   1a314:	b	1a318 <__assert_fail@plt+0x92cc>
   1a318:	b	1a4dc <__assert_fail@plt+0x9490>
   1a31c:	ldr	r0, [fp, #-16]
   1a320:	cmp	r0, #0
   1a324:	bcs	1a424 <__assert_fail@plt+0x93d8>
   1a328:	ldr	r0, [fp, #-12]
   1a32c:	cmp	r0, #0
   1a330:	bcs	1a3b8 <__assert_fail@plt+0x936c>
   1a334:	b	1a354 <__assert_fail@plt+0x9308>
   1a338:	ldr	r0, [pc, #2096]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a33c:	ldr	r1, [fp, #-12]
   1a340:	ldr	r2, [fp, #-16]
   1a344:	udiv	r0, r0, r2
   1a348:	cmp	r1, r0
   1a34c:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a350:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a354:	b	1a368 <__assert_fail@plt+0x931c>
   1a358:	ldr	r0, [fp, #-16]
   1a35c:	cmp	r0, #1
   1a360:	bcc	1a378 <__assert_fail@plt+0x932c>
   1a364:	b	1a384 <__assert_fail@plt+0x9338>
   1a368:	ldr	r0, [fp, #-16]
   1a36c:	movw	r1, #0
   1a370:	cmp	r1, r0
   1a374:	bcs	1a384 <__assert_fail@plt+0x9338>
   1a378:	movw	r0, #0
   1a37c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a380:	b	1a39c <__assert_fail@plt+0x9350>
   1a384:	ldr	r0, [pc, #2020]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a388:	ldr	r1, [fp, #-16]
   1a38c:	movw	r2, #0
   1a390:	sub	r1, r2, r1
   1a394:	udiv	r0, r0, r1
   1a398:	str	r0, [fp, #-48]	; 0xffffffd0
   1a39c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a3a0:	ldr	r1, [fp, #-12]
   1a3a4:	mvn	r2, #0
   1a3a8:	sub	r1, r2, r1
   1a3ac:	cmp	r0, r1
   1a3b0:	bls	1a4b4 <__assert_fail@plt+0x9468>
   1a3b4:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a3b8:	ldr	r0, [fp, #-16]
   1a3bc:	cmn	r0, #1
   1a3c0:	bne	1a408 <__assert_fail@plt+0x93bc>
   1a3c4:	b	1a3e0 <__assert_fail@plt+0x9394>
   1a3c8:	ldr	r0, [fp, #-12]
   1a3cc:	add	r0, r0, #-2147483648	; 0x80000000
   1a3d0:	movw	r1, #0
   1a3d4:	cmp	r1, r0
   1a3d8:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a3dc:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a3e0:	ldr	r0, [fp, #-12]
   1a3e4:	movw	r1, #0
   1a3e8:	cmp	r1, r0
   1a3ec:	bcs	1a4c8 <__assert_fail@plt+0x947c>
   1a3f0:	ldr	r0, [pc, #1912]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a3f4:	ldr	r1, [fp, #-12]
   1a3f8:	sub	r1, r1, #1
   1a3fc:	cmp	r0, r1
   1a400:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a404:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a408:	ldr	r0, [pc, #1892]	; 1ab74 <__assert_fail@plt+0x9b28>
   1a40c:	ldr	r1, [fp, #-16]
   1a410:	udiv	r0, r0, r1
   1a414:	ldr	r1, [fp, #-12]
   1a418:	cmp	r0, r1
   1a41c:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a420:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a424:	ldr	r0, [fp, #-16]
   1a428:	cmp	r0, #0
   1a42c:	bne	1a434 <__assert_fail@plt+0x93e8>
   1a430:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a434:	ldr	r0, [fp, #-12]
   1a438:	cmp	r0, #0
   1a43c:	bcs	1a49c <__assert_fail@plt+0x9450>
   1a440:	ldr	r0, [fp, #-12]
   1a444:	cmn	r0, #1
   1a448:	bne	1a480 <__assert_fail@plt+0x9434>
   1a44c:	b	1a468 <__assert_fail@plt+0x941c>
   1a450:	ldr	r0, [fp, #-16]
   1a454:	add	r0, r0, #-2147483648	; 0x80000000
   1a458:	movw	r1, #0
   1a45c:	cmp	r1, r0
   1a460:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a464:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a468:	ldr	r0, [pc, #1792]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a46c:	ldr	r1, [fp, #-16]
   1a470:	sub	r1, r1, #1
   1a474:	cmp	r0, r1
   1a478:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a47c:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a480:	ldr	r0, [pc, #1772]	; 1ab74 <__assert_fail@plt+0x9b28>
   1a484:	ldr	r1, [fp, #-12]
   1a488:	udiv	r0, r0, r1
   1a48c:	ldr	r1, [fp, #-16]
   1a490:	cmp	r0, r1
   1a494:	bcc	1a4b4 <__assert_fail@plt+0x9468>
   1a498:	b	1a4c8 <__assert_fail@plt+0x947c>
   1a49c:	ldr	r0, [pc, #1740]	; 1ab70 <__assert_fail@plt+0x9b24>
   1a4a0:	ldr	r1, [fp, #-16]
   1a4a4:	udiv	r0, r0, r1
   1a4a8:	ldr	r1, [fp, #-12]
   1a4ac:	cmp	r0, r1
   1a4b0:	bcs	1a4c8 <__assert_fail@plt+0x947c>
   1a4b4:	ldr	r0, [fp, #-12]
   1a4b8:	ldr	r1, [fp, #-16]
   1a4bc:	mul	r0, r0, r1
   1a4c0:	str	r0, [fp, #-20]	; 0xffffffec
   1a4c4:	b	1ab3c <__assert_fail@plt+0x9af0>
   1a4c8:	ldr	r0, [fp, #-12]
   1a4cc:	ldr	r1, [fp, #-16]
   1a4d0:	mul	r0, r0, r1
   1a4d4:	str	r0, [fp, #-20]	; 0xffffffec
   1a4d8:	b	1ab54 <__assert_fail@plt+0x9b08>
   1a4dc:	ldr	r0, [fp, #-16]
   1a4e0:	cmp	r0, #0
   1a4e4:	bcs	1a5f0 <__assert_fail@plt+0x95a4>
   1a4e8:	ldr	r0, [fp, #-12]
   1a4ec:	cmp	r0, #0
   1a4f0:	bcs	1a578 <__assert_fail@plt+0x952c>
   1a4f4:	b	1a514 <__assert_fail@plt+0x94c8>
   1a4f8:	ldr	r0, [fp, #-12]
   1a4fc:	ldr	r1, [fp, #-16]
   1a500:	mvn	r2, #0
   1a504:	udiv	r1, r2, r1
   1a508:	cmp	r0, r1
   1a50c:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a510:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a514:	b	1a528 <__assert_fail@plt+0x94dc>
   1a518:	ldr	r0, [fp, #-16]
   1a51c:	cmp	r0, #1
   1a520:	bcc	1a538 <__assert_fail@plt+0x94ec>
   1a524:	b	1a544 <__assert_fail@plt+0x94f8>
   1a528:	ldr	r0, [fp, #-16]
   1a52c:	movw	r1, #0
   1a530:	cmp	r1, r0
   1a534:	bcs	1a544 <__assert_fail@plt+0x94f8>
   1a538:	movw	r0, #1
   1a53c:	str	r0, [fp, #-52]	; 0xffffffcc
   1a540:	b	1a55c <__assert_fail@plt+0x9510>
   1a544:	ldr	r0, [fp, #-16]
   1a548:	movw	r1, #0
   1a54c:	sub	r0, r1, r0
   1a550:	mvn	r1, #0
   1a554:	udiv	r0, r1, r0
   1a558:	str	r0, [fp, #-52]	; 0xffffffcc
   1a55c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a560:	ldr	r1, [fp, #-12]
   1a564:	mvn	r2, #0
   1a568:	sub	r1, r2, r1
   1a56c:	cmp	r0, r1
   1a570:	bls	1a68c <__assert_fail@plt+0x9640>
   1a574:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a578:	b	1a580 <__assert_fail@plt+0x9534>
   1a57c:	b	1a584 <__assert_fail@plt+0x9538>
   1a580:	b	1a5d4 <__assert_fail@plt+0x9588>
   1a584:	ldr	r0, [fp, #-16]
   1a588:	cmn	r0, #1
   1a58c:	bne	1a5d4 <__assert_fail@plt+0x9588>
   1a590:	b	1a5ac <__assert_fail@plt+0x9560>
   1a594:	ldr	r0, [fp, #-12]
   1a598:	add	r0, r0, #0
   1a59c:	movw	r1, #0
   1a5a0:	cmp	r1, r0
   1a5a4:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a5a8:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	movw	r1, #0
   1a5b4:	cmp	r1, r0
   1a5b8:	bcs	1a6a0 <__assert_fail@plt+0x9654>
   1a5bc:	ldr	r0, [fp, #-12]
   1a5c0:	sub	r0, r0, #1
   1a5c4:	mvn	r1, #0
   1a5c8:	cmp	r1, r0
   1a5cc:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a5d0:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a5d4:	ldr	r0, [fp, #-16]
   1a5d8:	movw	r1, #0
   1a5dc:	udiv	r0, r1, r0
   1a5e0:	ldr	r1, [fp, #-12]
   1a5e4:	cmp	r0, r1
   1a5e8:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a5ec:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a5f0:	ldr	r0, [fp, #-16]
   1a5f4:	cmp	r0, #0
   1a5f8:	bne	1a600 <__assert_fail@plt+0x95b4>
   1a5fc:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a600:	ldr	r0, [fp, #-12]
   1a604:	cmp	r0, #0
   1a608:	bcs	1a674 <__assert_fail@plt+0x9628>
   1a60c:	b	1a614 <__assert_fail@plt+0x95c8>
   1a610:	b	1a618 <__assert_fail@plt+0x95cc>
   1a614:	b	1a658 <__assert_fail@plt+0x960c>
   1a618:	ldr	r0, [fp, #-12]
   1a61c:	cmn	r0, #1
   1a620:	bne	1a658 <__assert_fail@plt+0x960c>
   1a624:	b	1a640 <__assert_fail@plt+0x95f4>
   1a628:	ldr	r0, [fp, #-16]
   1a62c:	add	r0, r0, #0
   1a630:	movw	r1, #0
   1a634:	cmp	r1, r0
   1a638:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a63c:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a640:	ldr	r0, [fp, #-16]
   1a644:	sub	r0, r0, #1
   1a648:	mvn	r1, #0
   1a64c:	cmp	r1, r0
   1a650:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a654:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a658:	ldr	r0, [fp, #-12]
   1a65c:	movw	r1, #0
   1a660:	udiv	r0, r1, r0
   1a664:	ldr	r1, [fp, #-16]
   1a668:	cmp	r0, r1
   1a66c:	bcc	1a68c <__assert_fail@plt+0x9640>
   1a670:	b	1a6a0 <__assert_fail@plt+0x9654>
   1a674:	ldr	r0, [fp, #-16]
   1a678:	mvn	r1, #0
   1a67c:	udiv	r0, r1, r0
   1a680:	ldr	r1, [fp, #-12]
   1a684:	cmp	r0, r1
   1a688:	bcs	1a6a0 <__assert_fail@plt+0x9654>
   1a68c:	ldr	r0, [fp, #-12]
   1a690:	ldr	r1, [fp, #-16]
   1a694:	mul	r0, r0, r1
   1a698:	str	r0, [fp, #-20]	; 0xffffffec
   1a69c:	b	1ab3c <__assert_fail@plt+0x9af0>
   1a6a0:	ldr	r0, [fp, #-12]
   1a6a4:	ldr	r1, [fp, #-16]
   1a6a8:	mul	r0, r0, r1
   1a6ac:	str	r0, [fp, #-20]	; 0xffffffec
   1a6b0:	b	1ab54 <__assert_fail@plt+0x9b08>
   1a6b4:	b	1a908 <__assert_fail@plt+0x98bc>
   1a6b8:	ldr	r0, [fp, #-16]
   1a6bc:	cmp	r0, #0
   1a6c0:	bcs	1a820 <__assert_fail@plt+0x97d4>
   1a6c4:	ldr	r0, [fp, #-12]
   1a6c8:	cmp	r0, #0
   1a6cc:	bcs	1a79c <__assert_fail@plt+0x9750>
   1a6d0:	b	1a6d4 <__assert_fail@plt+0x9688>
   1a6d4:	ldr	r0, [fp, #-12]
   1a6d8:	ldr	r2, [fp, #-16]
   1a6dc:	mvn	r1, #0
   1a6e0:	mvn	r3, #-2147483648	; 0x80000000
   1a6e4:	mov	ip, #0
   1a6e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6ec:	mov	r0, r1
   1a6f0:	mov	r1, r3
   1a6f4:	mov	r3, ip
   1a6f8:	bl	1b488 <__assert_fail@plt+0xa43c>
   1a6fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a700:	subs	r0, r2, r0
   1a704:	rscs	r1, r1, #0
   1a708:	str	r0, [fp, #-60]	; 0xffffffc4
   1a70c:	str	r1, [fp, #-64]	; 0xffffffc0
   1a710:	blt	1a8e0 <__assert_fail@plt+0x9894>
   1a714:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a718:	b	1a72c <__assert_fail@plt+0x96e0>
   1a71c:	ldr	r0, [fp, #-16]
   1a720:	cmp	r0, #1
   1a724:	bcc	1a73c <__assert_fail@plt+0x96f0>
   1a728:	b	1a750 <__assert_fail@plt+0x9704>
   1a72c:	ldr	r0, [fp, #-16]
   1a730:	movw	r1, #0
   1a734:	cmp	r1, r0
   1a738:	bcs	1a750 <__assert_fail@plt+0x9704>
   1a73c:	mov	r0, #0
   1a740:	mvn	r1, #0
   1a744:	str	r1, [fp, #-68]	; 0xffffffbc
   1a748:	str	r0, [fp, #-72]	; 0xffffffb8
   1a74c:	b	1a774 <__assert_fail@plt+0x9728>
   1a750:	ldr	r0, [fp, #-16]
   1a754:	rsb	r2, r0, #0
   1a758:	mvn	r0, #0
   1a75c:	mvn	r1, #-2147483648	; 0x80000000
   1a760:	mov	r3, #0
   1a764:	bl	1b488 <__assert_fail@plt+0xa43c>
   1a768:	str	r0, [fp, #-68]	; 0xffffffbc
   1a76c:	str	r1, [fp, #-72]	; 0xffffffb8
   1a770:	b	1a774 <__assert_fail@plt+0x9728>
   1a774:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a778:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a77c:	ldr	r2, [fp, #-12]
   1a780:	mvn	r2, r2
   1a784:	subs	r1, r2, r1
   1a788:	rscs	r0, r0, #0
   1a78c:	str	r1, [fp, #-76]	; 0xffffffb4
   1a790:	str	r0, [fp, #-80]	; 0xffffffb0
   1a794:	bge	1a8e0 <__assert_fail@plt+0x9894>
   1a798:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a79c:	ldr	r0, [fp, #-16]
   1a7a0:	cmn	r0, #1
   1a7a4:	bne	1a7ec <__assert_fail@plt+0x97a0>
   1a7a8:	b	1a7cc <__assert_fail@plt+0x9780>
   1a7ac:	ldr	r0, [fp, #-12]
   1a7b0:	rsbs	r0, r0, #0
   1a7b4:	mov	r1, #0
   1a7b8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a7bc:	str	r0, [fp, #-84]	; 0xffffffac
   1a7c0:	str	r1, [sp, #88]	; 0x58
   1a7c4:	blt	1a8e0 <__assert_fail@plt+0x9894>
   1a7c8:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a7cc:	ldr	r0, [fp, #-12]
   1a7d0:	movw	r1, #0
   1a7d4:	cmp	r1, r0
   1a7d8:	bcs	1a8f4 <__assert_fail@plt+0x98a8>
   1a7dc:	mov	r0, #0
   1a7e0:	cmp	r0, #0
   1a7e4:	bne	1a8e0 <__assert_fail@plt+0x9894>
   1a7e8:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a7ec:	ldr	r2, [fp, #-16]
   1a7f0:	mov	r1, #-2147483648	; 0x80000000
   1a7f4:	mov	r0, #0
   1a7f8:	str	r0, [sp, #84]	; 0x54
   1a7fc:	ldr	r3, [sp, #84]	; 0x54
   1a800:	bl	1b3b4 <__assert_fail@plt+0xa368>
   1a804:	ldr	r2, [fp, #-12]
   1a808:	subs	r0, r0, r2
   1a80c:	sbcs	r1, r1, #0
   1a810:	str	r0, [sp, #80]	; 0x50
   1a814:	str	r1, [sp, #76]	; 0x4c
   1a818:	blt	1a8e0 <__assert_fail@plt+0x9894>
   1a81c:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a820:	ldr	r0, [fp, #-16]
   1a824:	cmp	r0, #0
   1a828:	bne	1a830 <__assert_fail@plt+0x97e4>
   1a82c:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a830:	ldr	r0, [fp, #-12]
   1a834:	cmp	r0, #0
   1a838:	bcs	1a8b0 <__assert_fail@plt+0x9864>
   1a83c:	ldr	r0, [fp, #-12]
   1a840:	cmn	r0, #1
   1a844:	bne	1a87c <__assert_fail@plt+0x9830>
   1a848:	b	1a86c <__assert_fail@plt+0x9820>
   1a84c:	ldr	r0, [fp, #-16]
   1a850:	rsbs	r0, r0, #0
   1a854:	mov	r1, #0
   1a858:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a85c:	str	r0, [sp, #72]	; 0x48
   1a860:	str	r1, [sp, #68]	; 0x44
   1a864:	blt	1a8e0 <__assert_fail@plt+0x9894>
   1a868:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a86c:	mov	r0, #0
   1a870:	cmp	r0, #0
   1a874:	bne	1a8e0 <__assert_fail@plt+0x9894>
   1a878:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a87c:	ldr	r2, [fp, #-12]
   1a880:	mov	r1, #-2147483648	; 0x80000000
   1a884:	mov	r0, #0
   1a888:	str	r0, [sp, #64]	; 0x40
   1a88c:	ldr	r3, [sp, #64]	; 0x40
   1a890:	bl	1b3b4 <__assert_fail@plt+0xa368>
   1a894:	ldr	r2, [fp, #-16]
   1a898:	subs	r0, r0, r2
   1a89c:	sbcs	r1, r1, #0
   1a8a0:	str	r0, [sp, #60]	; 0x3c
   1a8a4:	str	r1, [sp, #56]	; 0x38
   1a8a8:	blt	1a8e0 <__assert_fail@plt+0x9894>
   1a8ac:	b	1a8f4 <__assert_fail@plt+0x98a8>
   1a8b0:	ldr	r2, [fp, #-16]
   1a8b4:	mvn	r0, #0
   1a8b8:	mvn	r1, #-2147483648	; 0x80000000
   1a8bc:	mov	r3, #0
   1a8c0:	bl	1b488 <__assert_fail@plt+0xa43c>
   1a8c4:	ldr	r2, [fp, #-12]
   1a8c8:	subs	r0, r0, r2
   1a8cc:	sbcs	r1, r1, #0
   1a8d0:	str	r0, [sp, #52]	; 0x34
   1a8d4:	str	r1, [sp, #48]	; 0x30
   1a8d8:	bge	1a8f4 <__assert_fail@plt+0x98a8>
   1a8dc:	b	1a8e0 <__assert_fail@plt+0x9894>
   1a8e0:	ldr	r0, [fp, #-12]
   1a8e4:	ldr	r1, [fp, #-16]
   1a8e8:	mul	r0, r0, r1
   1a8ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a8f0:	b	1ab3c <__assert_fail@plt+0x9af0>
   1a8f4:	ldr	r0, [fp, #-12]
   1a8f8:	ldr	r1, [fp, #-16]
   1a8fc:	mul	r0, r0, r1
   1a900:	str	r0, [fp, #-20]	; 0xffffffec
   1a904:	b	1ab54 <__assert_fail@plt+0x9b08>
   1a908:	ldr	r0, [fp, #-16]
   1a90c:	cmp	r0, #0
   1a910:	bcs	1aa5c <__assert_fail@plt+0x9a10>
   1a914:	ldr	r0, [fp, #-12]
   1a918:	cmp	r0, #0
   1a91c:	bcs	1a9e4 <__assert_fail@plt+0x9998>
   1a920:	b	1a95c <__assert_fail@plt+0x9910>
   1a924:	ldr	r0, [fp, #-12]
   1a928:	ldr	r2, [fp, #-16]
   1a92c:	mvn	r1, #0
   1a930:	mov	r3, #0
   1a934:	str	r0, [sp, #44]	; 0x2c
   1a938:	mov	r0, r1
   1a93c:	bl	1b488 <__assert_fail@plt+0xa43c>
   1a940:	ldr	r2, [sp, #44]	; 0x2c
   1a944:	subs	r0, r2, r0
   1a948:	rscs	r1, r1, #0
   1a94c:	str	r0, [sp, #40]	; 0x28
   1a950:	str	r1, [sp, #36]	; 0x24
   1a954:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1a958:	b	1ab28 <__assert_fail@plt+0x9adc>
   1a95c:	b	1a970 <__assert_fail@plt+0x9924>
   1a960:	ldr	r0, [fp, #-16]
   1a964:	cmp	r0, #1
   1a968:	bcc	1a980 <__assert_fail@plt+0x9934>
   1a96c:	b	1a994 <__assert_fail@plt+0x9948>
   1a970:	ldr	r0, [fp, #-16]
   1a974:	movw	r1, #0
   1a978:	cmp	r1, r0
   1a97c:	bcs	1a994 <__assert_fail@plt+0x9948>
   1a980:	mov	r0, #1
   1a984:	mvn	r1, #0
   1a988:	str	r1, [sp, #32]
   1a98c:	str	r0, [sp, #28]
   1a990:	b	1a9bc <__assert_fail@plt+0x9970>
   1a994:	ldr	r0, [fp, #-16]
   1a998:	rsb	r2, r0, #0
   1a99c:	mvn	r0, #0
   1a9a0:	mov	r3, #0
   1a9a4:	str	r0, [sp, #24]
   1a9a8:	ldr	r1, [sp, #24]
   1a9ac:	bl	1b488 <__assert_fail@plt+0xa43c>
   1a9b0:	str	r0, [sp, #32]
   1a9b4:	str	r1, [sp, #28]
   1a9b8:	b	1a9bc <__assert_fail@plt+0x9970>
   1a9bc:	ldr	r0, [sp, #28]
   1a9c0:	ldr	r1, [sp, #32]
   1a9c4:	ldr	r2, [fp, #-12]
   1a9c8:	mvn	r2, r2
   1a9cc:	subs	r1, r2, r1
   1a9d0:	rscs	r0, r0, #0
   1a9d4:	str	r1, [sp, #20]
   1a9d8:	str	r0, [sp, #16]
   1a9dc:	bcs	1ab14 <__assert_fail@plt+0x9ac8>
   1a9e0:	b	1ab28 <__assert_fail@plt+0x9adc>
   1a9e4:	b	1a9ec <__assert_fail@plt+0x99a0>
   1a9e8:	b	1a9f0 <__assert_fail@plt+0x99a4>
   1a9ec:	b	1aa40 <__assert_fail@plt+0x99f4>
   1a9f0:	ldr	r0, [fp, #-16]
   1a9f4:	cmn	r0, #1
   1a9f8:	bne	1aa40 <__assert_fail@plt+0x99f4>
   1a9fc:	b	1aa18 <__assert_fail@plt+0x99cc>
   1aa00:	ldr	r0, [fp, #-12]
   1aa04:	add	r0, r0, #0
   1aa08:	movw	r1, #0
   1aa0c:	cmp	r1, r0
   1aa10:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aa14:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aa18:	ldr	r0, [fp, #-12]
   1aa1c:	movw	r1, #0
   1aa20:	cmp	r1, r0
   1aa24:	bcs	1ab28 <__assert_fail@plt+0x9adc>
   1aa28:	ldr	r0, [fp, #-12]
   1aa2c:	sub	r0, r0, #1
   1aa30:	mvn	r1, #0
   1aa34:	cmp	r1, r0
   1aa38:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aa3c:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aa40:	ldr	r0, [fp, #-16]
   1aa44:	movw	r1, #0
   1aa48:	udiv	r0, r1, r0
   1aa4c:	ldr	r1, [fp, #-12]
   1aa50:	cmp	r0, r1
   1aa54:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aa58:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aa5c:	ldr	r0, [fp, #-16]
   1aa60:	cmp	r0, #0
   1aa64:	bne	1aa6c <__assert_fail@plt+0x9a20>
   1aa68:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aa6c:	ldr	r0, [fp, #-12]
   1aa70:	cmp	r0, #0
   1aa74:	bcs	1aae0 <__assert_fail@plt+0x9a94>
   1aa78:	b	1aa80 <__assert_fail@plt+0x9a34>
   1aa7c:	b	1aa84 <__assert_fail@plt+0x9a38>
   1aa80:	b	1aac4 <__assert_fail@plt+0x9a78>
   1aa84:	ldr	r0, [fp, #-12]
   1aa88:	cmn	r0, #1
   1aa8c:	bne	1aac4 <__assert_fail@plt+0x9a78>
   1aa90:	b	1aaac <__assert_fail@plt+0x9a60>
   1aa94:	ldr	r0, [fp, #-16]
   1aa98:	add	r0, r0, #0
   1aa9c:	movw	r1, #0
   1aaa0:	cmp	r1, r0
   1aaa4:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aaa8:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aaac:	ldr	r0, [fp, #-16]
   1aab0:	sub	r0, r0, #1
   1aab4:	mvn	r1, #0
   1aab8:	cmp	r1, r0
   1aabc:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aac0:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aac4:	ldr	r0, [fp, #-12]
   1aac8:	movw	r1, #0
   1aacc:	udiv	r0, r1, r0
   1aad0:	ldr	r1, [fp, #-16]
   1aad4:	cmp	r0, r1
   1aad8:	bcc	1ab14 <__assert_fail@plt+0x9ac8>
   1aadc:	b	1ab28 <__assert_fail@plt+0x9adc>
   1aae0:	ldr	r2, [fp, #-16]
   1aae4:	mvn	r0, #0
   1aae8:	mov	r3, #0
   1aaec:	str	r0, [sp, #12]
   1aaf0:	ldr	r1, [sp, #12]
   1aaf4:	bl	1b488 <__assert_fail@plt+0xa43c>
   1aaf8:	ldr	r2, [fp, #-12]
   1aafc:	subs	r0, r0, r2
   1ab00:	sbcs	r1, r1, #0
   1ab04:	str	r0, [sp, #8]
   1ab08:	str	r1, [sp, #4]
   1ab0c:	bcs	1ab28 <__assert_fail@plt+0x9adc>
   1ab10:	b	1ab14 <__assert_fail@plt+0x9ac8>
   1ab14:	ldr	r0, [fp, #-12]
   1ab18:	ldr	r1, [fp, #-16]
   1ab1c:	mul	r0, r0, r1
   1ab20:	str	r0, [fp, #-20]	; 0xffffffec
   1ab24:	b	1ab3c <__assert_fail@plt+0x9af0>
   1ab28:	ldr	r0, [fp, #-12]
   1ab2c:	ldr	r1, [fp, #-16]
   1ab30:	mul	r0, r0, r1
   1ab34:	str	r0, [fp, #-20]	; 0xffffffec
   1ab38:	b	1ab54 <__assert_fail@plt+0x9b08>
   1ab3c:	bl	10f80 <__errno_location@plt>
   1ab40:	movw	lr, #12
   1ab44:	str	lr, [r0]
   1ab48:	movw	r0, #0
   1ab4c:	str	r0, [fp, #-4]
   1ab50:	b	1ab64 <__assert_fail@plt+0x9b18>
   1ab54:	ldr	r0, [fp, #-8]
   1ab58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ab5c:	bl	192e0 <__assert_fail@plt+0x8294>
   1ab60:	str	r0, [fp, #-4]
   1ab64:	ldr	r0, [fp, #-4]
   1ab68:	mov	sp, fp
   1ab6c:	pop	{fp, pc}
   1ab70:	svcvc	0x00ffffff
   1ab74:	andhi	r0, r0, r0
   1ab78:			; <UNDEFINED> instruction: 0xffff8000
   1ab7c:	sub	sp, sp, #12
   1ab80:	str	r0, [sp, #4]
   1ab84:	ldr	r0, [sp, #4]
   1ab88:	sub	r1, r0, #48	; 0x30
   1ab8c:	cmp	r1, #10
   1ab90:	str	r0, [sp]
   1ab94:	bcc	1abc4 <__assert_fail@plt+0x9b78>
   1ab98:	b	1ab9c <__assert_fail@plt+0x9b50>
   1ab9c:	ldr	r0, [sp]
   1aba0:	sub	r1, r0, #65	; 0x41
   1aba4:	cmp	r1, #26
   1aba8:	bcc	1abc4 <__assert_fail@plt+0x9b78>
   1abac:	b	1abb0 <__assert_fail@plt+0x9b64>
   1abb0:	ldr	r0, [sp]
   1abb4:	sub	r1, r0, #97	; 0x61
   1abb8:	cmp	r1, #25
   1abbc:	bhi	1abd4 <__assert_fail@plt+0x9b88>
   1abc0:	b	1abc4 <__assert_fail@plt+0x9b78>
   1abc4:	movw	r0, #1
   1abc8:	and	r0, r0, #1
   1abcc:	strb	r0, [sp, #11]
   1abd0:	b	1abe0 <__assert_fail@plt+0x9b94>
   1abd4:	movw	r0, #0
   1abd8:	and	r0, r0, #1
   1abdc:	strb	r0, [sp, #11]
   1abe0:	ldrb	r0, [sp, #11]
   1abe4:	and	r0, r0, #1
   1abe8:	add	sp, sp, #12
   1abec:	bx	lr
   1abf0:	sub	sp, sp, #12
   1abf4:	str	r0, [sp, #4]
   1abf8:	ldr	r0, [sp, #4]
   1abfc:	sub	r1, r0, #65	; 0x41
   1ac00:	cmp	r1, #26
   1ac04:	str	r0, [sp]
   1ac08:	bcc	1ac24 <__assert_fail@plt+0x9bd8>
   1ac0c:	b	1ac10 <__assert_fail@plt+0x9bc4>
   1ac10:	ldr	r0, [sp]
   1ac14:	sub	r1, r0, #97	; 0x61
   1ac18:	cmp	r1, #25
   1ac1c:	bhi	1ac34 <__assert_fail@plt+0x9be8>
   1ac20:	b	1ac24 <__assert_fail@plt+0x9bd8>
   1ac24:	movw	r0, #1
   1ac28:	and	r0, r0, #1
   1ac2c:	strb	r0, [sp, #11]
   1ac30:	b	1ac40 <__assert_fail@plt+0x9bf4>
   1ac34:	movw	r0, #0
   1ac38:	and	r0, r0, #1
   1ac3c:	strb	r0, [sp, #11]
   1ac40:	ldrb	r0, [sp, #11]
   1ac44:	and	r0, r0, #1
   1ac48:	add	sp, sp, #12
   1ac4c:	bx	lr
   1ac50:	sub	sp, sp, #8
   1ac54:	str	r0, [sp]
   1ac58:	ldr	r0, [sp]
   1ac5c:	cmp	r0, #127	; 0x7f
   1ac60:	bhi	1ac78 <__assert_fail@plt+0x9c2c>
   1ac64:	b	1ac68 <__assert_fail@plt+0x9c1c>
   1ac68:	movw	r0, #1
   1ac6c:	and	r0, r0, #1
   1ac70:	strb	r0, [sp, #7]
   1ac74:	b	1ac84 <__assert_fail@plt+0x9c38>
   1ac78:	movw	r0, #0
   1ac7c:	and	r0, r0, #1
   1ac80:	strb	r0, [sp, #7]
   1ac84:	ldrb	r0, [sp, #7]
   1ac88:	and	r0, r0, #1
   1ac8c:	add	sp, sp, #8
   1ac90:	bx	lr
   1ac94:	sub	sp, sp, #8
   1ac98:	str	r0, [sp, #4]
   1ac9c:	ldr	r0, [sp, #4]
   1aca0:	cmp	r0, #32
   1aca4:	movw	r0, #1
   1aca8:	str	r0, [sp]
   1acac:	beq	1acc4 <__assert_fail@plt+0x9c78>
   1acb0:	ldr	r0, [sp, #4]
   1acb4:	cmp	r0, #9
   1acb8:	movw	r0, #0
   1acbc:	moveq	r0, #1
   1acc0:	str	r0, [sp]
   1acc4:	ldr	r0, [sp]
   1acc8:	and	r0, r0, #1
   1accc:	add	sp, sp, #8
   1acd0:	bx	lr
   1acd4:	sub	sp, sp, #12
   1acd8:	str	r0, [sp, #4]
   1acdc:	ldr	r0, [sp, #4]
   1ace0:	cmp	r0, #32
   1ace4:	str	r0, [sp]
   1ace8:	bcc	1ad00 <__assert_fail@plt+0x9cb4>
   1acec:	b	1acf0 <__assert_fail@plt+0x9ca4>
   1acf0:	ldr	r0, [sp]
   1acf4:	cmp	r0, #127	; 0x7f
   1acf8:	bne	1ad10 <__assert_fail@plt+0x9cc4>
   1acfc:	b	1ad00 <__assert_fail@plt+0x9cb4>
   1ad00:	movw	r0, #1
   1ad04:	and	r0, r0, #1
   1ad08:	strb	r0, [sp, #11]
   1ad0c:	b	1ad1c <__assert_fail@plt+0x9cd0>
   1ad10:	movw	r0, #0
   1ad14:	and	r0, r0, #1
   1ad18:	strb	r0, [sp, #11]
   1ad1c:	ldrb	r0, [sp, #11]
   1ad20:	and	r0, r0, #1
   1ad24:	add	sp, sp, #12
   1ad28:	bx	lr
   1ad2c:	sub	sp, sp, #8
   1ad30:	str	r0, [sp]
   1ad34:	ldr	r0, [sp]
   1ad38:	sub	r0, r0, #48	; 0x30
   1ad3c:	cmp	r0, #9
   1ad40:	bhi	1ad58 <__assert_fail@plt+0x9d0c>
   1ad44:	b	1ad48 <__assert_fail@plt+0x9cfc>
   1ad48:	movw	r0, #1
   1ad4c:	and	r0, r0, #1
   1ad50:	strb	r0, [sp, #7]
   1ad54:	b	1ad64 <__assert_fail@plt+0x9d18>
   1ad58:	movw	r0, #0
   1ad5c:	and	r0, r0, #1
   1ad60:	strb	r0, [sp, #7]
   1ad64:	ldrb	r0, [sp, #7]
   1ad68:	and	r0, r0, #1
   1ad6c:	add	sp, sp, #8
   1ad70:	bx	lr
   1ad74:	sub	sp, sp, #8
   1ad78:	str	r0, [sp]
   1ad7c:	ldr	r0, [sp]
   1ad80:	sub	r0, r0, #33	; 0x21
   1ad84:	cmp	r0, #93	; 0x5d
   1ad88:	bhi	1ada0 <__assert_fail@plt+0x9d54>
   1ad8c:	b	1ad90 <__assert_fail@plt+0x9d44>
   1ad90:	movw	r0, #1
   1ad94:	and	r0, r0, #1
   1ad98:	strb	r0, [sp, #7]
   1ad9c:	b	1adac <__assert_fail@plt+0x9d60>
   1ada0:	movw	r0, #0
   1ada4:	and	r0, r0, #1
   1ada8:	strb	r0, [sp, #7]
   1adac:	ldrb	r0, [sp, #7]
   1adb0:	and	r0, r0, #1
   1adb4:	add	sp, sp, #8
   1adb8:	bx	lr
   1adbc:	sub	sp, sp, #8
   1adc0:	str	r0, [sp]
   1adc4:	ldr	r0, [sp]
   1adc8:	sub	r0, r0, #97	; 0x61
   1adcc:	cmp	r0, #25
   1add0:	bhi	1ade8 <__assert_fail@plt+0x9d9c>
   1add4:	b	1add8 <__assert_fail@plt+0x9d8c>
   1add8:	movw	r0, #1
   1addc:	and	r0, r0, #1
   1ade0:	strb	r0, [sp, #7]
   1ade4:	b	1adf4 <__assert_fail@plt+0x9da8>
   1ade8:	movw	r0, #0
   1adec:	and	r0, r0, #1
   1adf0:	strb	r0, [sp, #7]
   1adf4:	ldrb	r0, [sp, #7]
   1adf8:	and	r0, r0, #1
   1adfc:	add	sp, sp, #8
   1ae00:	bx	lr
   1ae04:	sub	sp, sp, #8
   1ae08:	str	r0, [sp]
   1ae0c:	ldr	r0, [sp]
   1ae10:	sub	r0, r0, #32
   1ae14:	cmp	r0, #94	; 0x5e
   1ae18:	bhi	1ae30 <__assert_fail@plt+0x9de4>
   1ae1c:	b	1ae20 <__assert_fail@plt+0x9dd4>
   1ae20:	movw	r0, #1
   1ae24:	and	r0, r0, #1
   1ae28:	strb	r0, [sp, #7]
   1ae2c:	b	1ae3c <__assert_fail@plt+0x9df0>
   1ae30:	movw	r0, #0
   1ae34:	and	r0, r0, #1
   1ae38:	strb	r0, [sp, #7]
   1ae3c:	ldrb	r0, [sp, #7]
   1ae40:	and	r0, r0, #1
   1ae44:	add	sp, sp, #8
   1ae48:	bx	lr
   1ae4c:	sub	sp, sp, #12
   1ae50:	str	r0, [sp, #4]
   1ae54:	ldr	r0, [sp, #4]
   1ae58:	sub	r0, r0, #33	; 0x21
   1ae5c:	cmp	r0, #93	; 0x5d
   1ae60:	str	r0, [sp]
   1ae64:	bhi	1b000 <__assert_fail@plt+0x9fb4>
   1ae68:	add	r0, pc, #8
   1ae6c:	ldr	r1, [sp]
   1ae70:	ldr	r0, [r0, r1, lsl #2]
   1ae74:	mov	pc, r0
   1ae78:	strdeq	sl, [r1], -r0
   1ae7c:	strdeq	sl, [r1], -r0
   1ae80:	strdeq	sl, [r1], -r0
   1ae84:	strdeq	sl, [r1], -r0
   1ae88:	strdeq	sl, [r1], -r0
   1ae8c:	strdeq	sl, [r1], -r0
   1ae90:	strdeq	sl, [r1], -r0
   1ae94:	strdeq	sl, [r1], -r0
   1ae98:	strdeq	sl, [r1], -r0
   1ae9c:	strdeq	sl, [r1], -r0
   1aea0:	strdeq	sl, [r1], -r0
   1aea4:	strdeq	sl, [r1], -r0
   1aea8:	strdeq	sl, [r1], -r0
   1aeac:	strdeq	sl, [r1], -r0
   1aeb0:	strdeq	sl, [r1], -r0
   1aeb4:	andeq	fp, r1, r0
   1aeb8:	andeq	fp, r1, r0
   1aebc:	andeq	fp, r1, r0
   1aec0:	andeq	fp, r1, r0
   1aec4:	andeq	fp, r1, r0
   1aec8:	andeq	fp, r1, r0
   1aecc:	andeq	fp, r1, r0
   1aed0:	andeq	fp, r1, r0
   1aed4:	andeq	fp, r1, r0
   1aed8:	andeq	fp, r1, r0
   1aedc:	strdeq	sl, [r1], -r0
   1aee0:	strdeq	sl, [r1], -r0
   1aee4:	strdeq	sl, [r1], -r0
   1aee8:	strdeq	sl, [r1], -r0
   1aeec:	strdeq	sl, [r1], -r0
   1aef0:	strdeq	sl, [r1], -r0
   1aef4:	strdeq	sl, [r1], -r0
   1aef8:	andeq	fp, r1, r0
   1aefc:	andeq	fp, r1, r0
   1af00:	andeq	fp, r1, r0
   1af04:	andeq	fp, r1, r0
   1af08:	andeq	fp, r1, r0
   1af0c:	andeq	fp, r1, r0
   1af10:	andeq	fp, r1, r0
   1af14:	andeq	fp, r1, r0
   1af18:	andeq	fp, r1, r0
   1af1c:	andeq	fp, r1, r0
   1af20:	andeq	fp, r1, r0
   1af24:	andeq	fp, r1, r0
   1af28:	andeq	fp, r1, r0
   1af2c:	andeq	fp, r1, r0
   1af30:	andeq	fp, r1, r0
   1af34:	andeq	fp, r1, r0
   1af38:	andeq	fp, r1, r0
   1af3c:	andeq	fp, r1, r0
   1af40:	andeq	fp, r1, r0
   1af44:	andeq	fp, r1, r0
   1af48:	andeq	fp, r1, r0
   1af4c:	andeq	fp, r1, r0
   1af50:	andeq	fp, r1, r0
   1af54:	andeq	fp, r1, r0
   1af58:	andeq	fp, r1, r0
   1af5c:	andeq	fp, r1, r0
   1af60:	strdeq	sl, [r1], -r0
   1af64:	strdeq	sl, [r1], -r0
   1af68:	strdeq	sl, [r1], -r0
   1af6c:	strdeq	sl, [r1], -r0
   1af70:	strdeq	sl, [r1], -r0
   1af74:	strdeq	sl, [r1], -r0
   1af78:	andeq	fp, r1, r0
   1af7c:	andeq	fp, r1, r0
   1af80:	andeq	fp, r1, r0
   1af84:	andeq	fp, r1, r0
   1af88:	andeq	fp, r1, r0
   1af8c:	andeq	fp, r1, r0
   1af90:	andeq	fp, r1, r0
   1af94:	andeq	fp, r1, r0
   1af98:	andeq	fp, r1, r0
   1af9c:	andeq	fp, r1, r0
   1afa0:	andeq	fp, r1, r0
   1afa4:	andeq	fp, r1, r0
   1afa8:	andeq	fp, r1, r0
   1afac:	andeq	fp, r1, r0
   1afb0:	andeq	fp, r1, r0
   1afb4:	andeq	fp, r1, r0
   1afb8:	andeq	fp, r1, r0
   1afbc:	andeq	fp, r1, r0
   1afc0:	andeq	fp, r1, r0
   1afc4:	andeq	fp, r1, r0
   1afc8:	andeq	fp, r1, r0
   1afcc:	andeq	fp, r1, r0
   1afd0:	andeq	fp, r1, r0
   1afd4:	andeq	fp, r1, r0
   1afd8:	andeq	fp, r1, r0
   1afdc:	andeq	fp, r1, r0
   1afe0:	strdeq	sl, [r1], -r0
   1afe4:	strdeq	sl, [r1], -r0
   1afe8:	strdeq	sl, [r1], -r0
   1afec:	strdeq	sl, [r1], -r0
   1aff0:	movw	r0, #1
   1aff4:	and	r0, r0, #1
   1aff8:	strb	r0, [sp, #11]
   1affc:	b	1b00c <__assert_fail@plt+0x9fc0>
   1b000:	movw	r0, #0
   1b004:	and	r0, r0, #1
   1b008:	strb	r0, [sp, #11]
   1b00c:	ldrb	r0, [sp, #11]
   1b010:	and	r0, r0, #1
   1b014:	add	sp, sp, #12
   1b018:	bx	lr
   1b01c:	sub	sp, sp, #12
   1b020:	str	r0, [sp, #4]
   1b024:	ldr	r0, [sp, #4]
   1b028:	sub	r1, r0, #9
   1b02c:	cmp	r1, #5
   1b030:	str	r0, [sp]
   1b034:	bcc	1b04c <__assert_fail@plt+0xa000>
   1b038:	b	1b03c <__assert_fail@plt+0x9ff0>
   1b03c:	ldr	r0, [sp]
   1b040:	cmp	r0, #32
   1b044:	bne	1b05c <__assert_fail@plt+0xa010>
   1b048:	b	1b04c <__assert_fail@plt+0xa000>
   1b04c:	movw	r0, #1
   1b050:	and	r0, r0, #1
   1b054:	strb	r0, [sp, #11]
   1b058:	b	1b068 <__assert_fail@plt+0xa01c>
   1b05c:	movw	r0, #0
   1b060:	and	r0, r0, #1
   1b064:	strb	r0, [sp, #11]
   1b068:	ldrb	r0, [sp, #11]
   1b06c:	and	r0, r0, #1
   1b070:	add	sp, sp, #12
   1b074:	bx	lr
   1b078:	sub	sp, sp, #8
   1b07c:	str	r0, [sp]
   1b080:	ldr	r0, [sp]
   1b084:	sub	r0, r0, #65	; 0x41
   1b088:	cmp	r0, #25
   1b08c:	bhi	1b0a4 <__assert_fail@plt+0xa058>
   1b090:	b	1b094 <__assert_fail@plt+0xa048>
   1b094:	movw	r0, #1
   1b098:	and	r0, r0, #1
   1b09c:	strb	r0, [sp, #7]
   1b0a0:	b	1b0b0 <__assert_fail@plt+0xa064>
   1b0a4:	movw	r0, #0
   1b0a8:	and	r0, r0, #1
   1b0ac:	strb	r0, [sp, #7]
   1b0b0:	ldrb	r0, [sp, #7]
   1b0b4:	and	r0, r0, #1
   1b0b8:	add	sp, sp, #8
   1b0bc:	bx	lr
   1b0c0:	sub	sp, sp, #12
   1b0c4:	str	r0, [sp, #4]
   1b0c8:	ldr	r0, [sp, #4]
   1b0cc:	sub	r1, r0, #48	; 0x30
   1b0d0:	cmp	r1, #10
   1b0d4:	str	r0, [sp]
   1b0d8:	bcc	1b108 <__assert_fail@plt+0xa0bc>
   1b0dc:	b	1b0e0 <__assert_fail@plt+0xa094>
   1b0e0:	ldr	r0, [sp]
   1b0e4:	sub	r1, r0, #65	; 0x41
   1b0e8:	cmp	r1, #6
   1b0ec:	bcc	1b108 <__assert_fail@plt+0xa0bc>
   1b0f0:	b	1b0f4 <__assert_fail@plt+0xa0a8>
   1b0f4:	ldr	r0, [sp]
   1b0f8:	sub	r1, r0, #97	; 0x61
   1b0fc:	cmp	r1, #5
   1b100:	bhi	1b118 <__assert_fail@plt+0xa0cc>
   1b104:	b	1b108 <__assert_fail@plt+0xa0bc>
   1b108:	movw	r0, #1
   1b10c:	and	r0, r0, #1
   1b110:	strb	r0, [sp, #11]
   1b114:	b	1b124 <__assert_fail@plt+0xa0d8>
   1b118:	movw	r0, #0
   1b11c:	and	r0, r0, #1
   1b120:	strb	r0, [sp, #11]
   1b124:	ldrb	r0, [sp, #11]
   1b128:	and	r0, r0, #1
   1b12c:	add	sp, sp, #12
   1b130:	bx	lr
   1b134:	sub	sp, sp, #8
   1b138:	str	r0, [sp]
   1b13c:	ldr	r0, [sp]
   1b140:	sub	r0, r0, #65	; 0x41
   1b144:	cmp	r0, #25
   1b148:	bhi	1b164 <__assert_fail@plt+0xa118>
   1b14c:	b	1b150 <__assert_fail@plt+0xa104>
   1b150:	ldr	r0, [sp]
   1b154:	sub	r0, r0, #65	; 0x41
   1b158:	add	r0, r0, #97	; 0x61
   1b15c:	str	r0, [sp, #4]
   1b160:	b	1b16c <__assert_fail@plt+0xa120>
   1b164:	ldr	r0, [sp]
   1b168:	str	r0, [sp, #4]
   1b16c:	ldr	r0, [sp, #4]
   1b170:	add	sp, sp, #8
   1b174:	bx	lr
   1b178:	sub	sp, sp, #8
   1b17c:	str	r0, [sp]
   1b180:	ldr	r0, [sp]
   1b184:	sub	r0, r0, #97	; 0x61
   1b188:	cmp	r0, #25
   1b18c:	bhi	1b1a8 <__assert_fail@plt+0xa15c>
   1b190:	b	1b194 <__assert_fail@plt+0xa148>
   1b194:	ldr	r0, [sp]
   1b198:	sub	r0, r0, #97	; 0x61
   1b19c:	add	r0, r0, #65	; 0x41
   1b1a0:	str	r0, [sp, #4]
   1b1a4:	b	1b1b0 <__assert_fail@plt+0xa164>
   1b1a8:	ldr	r0, [sp]
   1b1ac:	str	r0, [sp, #4]
   1b1b0:	ldr	r0, [sp, #4]
   1b1b4:	add	sp, sp, #8
   1b1b8:	bx	lr
   1b1bc:	push	{r4, r5, fp, lr}
   1b1c0:	add	fp, sp, #8
   1b1c4:	sub	sp, sp, #272	; 0x110
   1b1c8:	add	r1, sp, #7
   1b1cc:	str	r0, [fp, #-16]
   1b1d0:	ldr	r0, [fp, #-16]
   1b1d4:	movw	r2, #257	; 0x101
   1b1d8:	bl	1b258 <__assert_fail@plt+0xa20c>
   1b1dc:	cmp	r0, #0
   1b1e0:	beq	1b1f4 <__assert_fail@plt+0xa1a8>
   1b1e4:	movw	r0, #0
   1b1e8:	and	r0, r0, #1
   1b1ec:	strb	r0, [fp, #-9]
   1b1f0:	b	1b248 <__assert_fail@plt+0xa1fc>
   1b1f4:	add	r0, sp, #7
   1b1f8:	movw	r1, #49899	; 0xc2eb
   1b1fc:	movt	r1, #1
   1b200:	bl	10e18 <strcmp@plt>
   1b204:	cmp	r0, #0
   1b208:	movw	r0, #1
   1b20c:	str	r0, [sp]
   1b210:	beq	1b234 <__assert_fail@plt+0xa1e8>
   1b214:	add	r0, sp, #7
   1b218:	movw	r1, #49901	; 0xc2ed
   1b21c:	movt	r1, #1
   1b220:	bl	10e18 <strcmp@plt>
   1b224:	cmp	r0, #0
   1b228:	movw	r0, #0
   1b22c:	moveq	r0, #1
   1b230:	str	r0, [sp]
   1b234:	ldr	r0, [sp]
   1b238:	mvn	r1, #0
   1b23c:	eor	r0, r0, r1
   1b240:	and	r0, r0, #1
   1b244:	strb	r0, [fp, #-9]
   1b248:	ldrb	r0, [fp, #-9]
   1b24c:	and	r0, r0, #1
   1b250:	sub	sp, fp, #8
   1b254:	pop	{r4, r5, fp, pc}
   1b258:	push	{fp, lr}
   1b25c:	mov	fp, sp
   1b260:	sub	sp, sp, #16
   1b264:	str	r0, [fp, #-4]
   1b268:	str	r1, [sp, #8]
   1b26c:	str	r2, [sp, #4]
   1b270:	ldr	r0, [fp, #-4]
   1b274:	ldr	r1, [sp, #8]
   1b278:	ldr	r2, [sp, #4]
   1b27c:	bl	1b288 <__assert_fail@plt+0xa23c>
   1b280:	mov	sp, fp
   1b284:	pop	{fp, pc}
   1b288:	push	{fp, lr}
   1b28c:	mov	fp, sp
   1b290:	sub	sp, sp, #24
   1b294:	str	r0, [fp, #-8]
   1b298:	str	r1, [sp, #12]
   1b29c:	str	r2, [sp, #8]
   1b2a0:	ldr	r0, [fp, #-8]
   1b2a4:	bl	1b388 <__assert_fail@plt+0xa33c>
   1b2a8:	str	r0, [sp, #4]
   1b2ac:	ldr	r0, [sp, #4]
   1b2b0:	movw	r1, #0
   1b2b4:	cmp	r0, r1
   1b2b8:	bne	1b2e0 <__assert_fail@plt+0xa294>
   1b2bc:	ldr	r0, [sp, #8]
   1b2c0:	cmp	r0, #0
   1b2c4:	bls	1b2d4 <__assert_fail@plt+0xa288>
   1b2c8:	ldr	r0, [sp, #12]
   1b2cc:	movw	r1, #0
   1b2d0:	strb	r1, [r0]
   1b2d4:	movw	r0, #22
   1b2d8:	str	r0, [fp, #-4]
   1b2dc:	b	1b35c <__assert_fail@plt+0xa310>
   1b2e0:	ldr	r0, [sp, #4]
   1b2e4:	bl	10f68 <strlen@plt>
   1b2e8:	str	r0, [sp]
   1b2ec:	ldr	r0, [sp]
   1b2f0:	ldr	lr, [sp, #8]
   1b2f4:	cmp	r0, lr
   1b2f8:	bcs	1b31c <__assert_fail@plt+0xa2d0>
   1b2fc:	ldr	r0, [sp, #12]
   1b300:	ldr	r1, [sp, #4]
   1b304:	ldr	r2, [sp]
   1b308:	add	r2, r2, #1
   1b30c:	bl	10e60 <memcpy@plt>
   1b310:	movw	r0, #0
   1b314:	str	r0, [fp, #-4]
   1b318:	b	1b35c <__assert_fail@plt+0xa310>
   1b31c:	ldr	r0, [sp, #8]
   1b320:	cmp	r0, #0
   1b324:	bls	1b354 <__assert_fail@plt+0xa308>
   1b328:	ldr	r0, [sp, #12]
   1b32c:	ldr	r1, [sp, #4]
   1b330:	ldr	r2, [sp, #8]
   1b334:	sub	r2, r2, #1
   1b338:	bl	10e60 <memcpy@plt>
   1b33c:	ldr	r0, [sp, #12]
   1b340:	ldr	r1, [sp, #8]
   1b344:	sub	r1, r1, #1
   1b348:	add	r0, r0, r1
   1b34c:	movw	r1, #0
   1b350:	strb	r1, [r0]
   1b354:	movw	r0, #34	; 0x22
   1b358:	str	r0, [fp, #-4]
   1b35c:	ldr	r0, [fp, #-4]
   1b360:	mov	sp, fp
   1b364:	pop	{fp, pc}
   1b368:	push	{fp, lr}
   1b36c:	mov	fp, sp
   1b370:	sub	sp, sp, #8
   1b374:	str	r0, [sp, #4]
   1b378:	ldr	r0, [sp, #4]
   1b37c:	bl	1b388 <__assert_fail@plt+0xa33c>
   1b380:	mov	sp, fp
   1b384:	pop	{fp, pc}
   1b388:	push	{fp, lr}
   1b38c:	mov	fp, sp
   1b390:	sub	sp, sp, #8
   1b394:	str	r0, [sp, #4]
   1b398:	ldr	r0, [sp, #4]
   1b39c:	movw	r1, #0
   1b3a0:	bl	10fc8 <setlocale@plt>
   1b3a4:	str	r0, [sp]
   1b3a8:	ldr	r0, [sp]
   1b3ac:	mov	sp, fp
   1b3b0:	pop	{fp, pc}
   1b3b4:	cmp	r3, #0
   1b3b8:	cmpeq	r2, #0
   1b3bc:	bne	1b3e0 <__assert_fail@plt+0xa394>
   1b3c0:	cmp	r1, #0
   1b3c4:	movlt	r1, #-2147483648	; 0x80000000
   1b3c8:	movlt	r0, #0
   1b3cc:	blt	1b3dc <__assert_fail@plt+0xa390>
   1b3d0:	cmpeq	r0, #0
   1b3d4:	mvnne	r1, #-2147483648	; 0x80000000
   1b3d8:	mvnne	r0, #0
   1b3dc:	b	1b4c4 <__assert_fail@plt+0xa478>
   1b3e0:	sub	sp, sp, #8
   1b3e4:	push	{sp, lr}
   1b3e8:	cmp	r1, #0
   1b3ec:	blt	1b40c <__assert_fail@plt+0xa3c0>
   1b3f0:	cmp	r3, #0
   1b3f4:	blt	1b440 <__assert_fail@plt+0xa3f4>
   1b3f8:	bl	1b4d4 <__assert_fail@plt+0xa488>
   1b3fc:	ldr	lr, [sp, #4]
   1b400:	add	sp, sp, #8
   1b404:	pop	{r2, r3}
   1b408:	bx	lr
   1b40c:	rsbs	r0, r0, #0
   1b410:	sbc	r1, r1, r1, lsl #1
   1b414:	cmp	r3, #0
   1b418:	blt	1b464 <__assert_fail@plt+0xa418>
   1b41c:	bl	1b4d4 <__assert_fail@plt+0xa488>
   1b420:	ldr	lr, [sp, #4]
   1b424:	add	sp, sp, #8
   1b428:	pop	{r2, r3}
   1b42c:	rsbs	r0, r0, #0
   1b430:	sbc	r1, r1, r1, lsl #1
   1b434:	rsbs	r2, r2, #0
   1b438:	sbc	r3, r3, r3, lsl #1
   1b43c:	bx	lr
   1b440:	rsbs	r2, r2, #0
   1b444:	sbc	r3, r3, r3, lsl #1
   1b448:	bl	1b4d4 <__assert_fail@plt+0xa488>
   1b44c:	ldr	lr, [sp, #4]
   1b450:	add	sp, sp, #8
   1b454:	pop	{r2, r3}
   1b458:	rsbs	r0, r0, #0
   1b45c:	sbc	r1, r1, r1, lsl #1
   1b460:	bx	lr
   1b464:	rsbs	r2, r2, #0
   1b468:	sbc	r3, r3, r3, lsl #1
   1b46c:	bl	1b4d4 <__assert_fail@plt+0xa488>
   1b470:	ldr	lr, [sp, #4]
   1b474:	add	sp, sp, #8
   1b478:	pop	{r2, r3}
   1b47c:	rsbs	r2, r2, #0
   1b480:	sbc	r3, r3, r3, lsl #1
   1b484:	bx	lr
   1b488:	cmp	r3, #0
   1b48c:	cmpeq	r2, #0
   1b490:	bne	1b4a8 <__assert_fail@plt+0xa45c>
   1b494:	cmp	r1, #0
   1b498:	cmpeq	r0, #0
   1b49c:	mvnne	r1, #0
   1b4a0:	mvnne	r0, #0
   1b4a4:	b	1b4c4 <__assert_fail@plt+0xa478>
   1b4a8:	sub	sp, sp, #8
   1b4ac:	push	{sp, lr}
   1b4b0:	bl	1b4d4 <__assert_fail@plt+0xa488>
   1b4b4:	ldr	lr, [sp, #4]
   1b4b8:	add	sp, sp, #8
   1b4bc:	pop	{r2, r3}
   1b4c0:	bx	lr
   1b4c4:	push	{r1, lr}
   1b4c8:	mov	r0, #8
   1b4cc:	bl	10e0c <raise@plt>
   1b4d0:	pop	{r1, pc}
   1b4d4:	cmp	r1, r3
   1b4d8:	cmpeq	r0, r2
   1b4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4e0:	mov	r4, r0
   1b4e4:	movcc	r0, #0
   1b4e8:	mov	r5, r1
   1b4ec:	ldr	lr, [sp, #36]	; 0x24
   1b4f0:	movcc	r1, r0
   1b4f4:	bcc	1b5f0 <__assert_fail@plt+0xa5a4>
   1b4f8:	cmp	r3, #0
   1b4fc:	clzeq	ip, r2
   1b500:	clzne	ip, r3
   1b504:	addeq	ip, ip, #32
   1b508:	cmp	r5, #0
   1b50c:	clzeq	r1, r4
   1b510:	addeq	r1, r1, #32
   1b514:	clzne	r1, r5
   1b518:	sub	ip, ip, r1
   1b51c:	sub	sl, ip, #32
   1b520:	lsl	r9, r3, ip
   1b524:	rsb	fp, ip, #32
   1b528:	orr	r9, r9, r2, lsl sl
   1b52c:	orr	r9, r9, r2, lsr fp
   1b530:	lsl	r8, r2, ip
   1b534:	cmp	r5, r9
   1b538:	cmpeq	r4, r8
   1b53c:	movcc	r0, #0
   1b540:	movcc	r1, r0
   1b544:	bcc	1b560 <__assert_fail@plt+0xa514>
   1b548:	mov	r0, #1
   1b54c:	subs	r4, r4, r8
   1b550:	lsl	r1, r0, sl
   1b554:	orr	r1, r1, r0, lsr fp
   1b558:	lsl	r0, r0, ip
   1b55c:	sbc	r5, r5, r9
   1b560:	cmp	ip, #0
   1b564:	beq	1b5f0 <__assert_fail@plt+0xa5a4>
   1b568:	lsr	r6, r8, #1
   1b56c:	orr	r6, r6, r9, lsl #31
   1b570:	lsr	r7, r9, #1
   1b574:	mov	r2, ip
   1b578:	b	1b59c <__assert_fail@plt+0xa550>
   1b57c:	subs	r3, r4, r6
   1b580:	sbc	r8, r5, r7
   1b584:	adds	r3, r3, r3
   1b588:	adc	r8, r8, r8
   1b58c:	adds	r4, r3, #1
   1b590:	adc	r5, r8, #0
   1b594:	subs	r2, r2, #1
   1b598:	beq	1b5b8 <__assert_fail@plt+0xa56c>
   1b59c:	cmp	r5, r7
   1b5a0:	cmpeq	r4, r6
   1b5a4:	bcs	1b57c <__assert_fail@plt+0xa530>
   1b5a8:	adds	r4, r4, r4
   1b5ac:	adc	r5, r5, r5
   1b5b0:	subs	r2, r2, #1
   1b5b4:	bne	1b59c <__assert_fail@plt+0xa550>
   1b5b8:	lsr	r3, r4, ip
   1b5bc:	orr	r3, r3, r5, lsl fp
   1b5c0:	lsr	r2, r5, ip
   1b5c4:	orr	r3, r3, r5, lsr sl
   1b5c8:	adds	r0, r0, r4
   1b5cc:	mov	r4, r3
   1b5d0:	lsl	r3, r2, ip
   1b5d4:	orr	r3, r3, r4, lsl sl
   1b5d8:	lsl	ip, r4, ip
   1b5dc:	orr	r3, r3, r4, lsr fp
   1b5e0:	adc	r1, r1, r5
   1b5e4:	subs	r0, r0, ip
   1b5e8:	mov	r5, r2
   1b5ec:	sbc	r1, r1, r3
   1b5f0:	cmp	lr, #0
   1b5f4:	strdne	r4, [lr]
   1b5f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b600:	mov	r7, r0
   1b604:	ldr	r6, [pc, #72]	; 1b654 <__assert_fail@plt+0xa608>
   1b608:	ldr	r5, [pc, #72]	; 1b658 <__assert_fail@plt+0xa60c>
   1b60c:	add	r6, pc, r6
   1b610:	add	r5, pc, r5
   1b614:	sub	r6, r6, r5
   1b618:	mov	r8, r1
   1b61c:	mov	r9, r2
   1b620:	bl	10dd4 <calloc@plt-0x20>
   1b624:	asrs	r6, r6, #2
   1b628:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b62c:	mov	r4, #0
   1b630:	add	r4, r4, #1
   1b634:	ldr	r3, [r5], #4
   1b638:	mov	r2, r9
   1b63c:	mov	r1, r8
   1b640:	mov	r0, r7
   1b644:	blx	r3
   1b648:	cmp	r6, r4
   1b64c:	bne	1b630 <__assert_fail@plt+0xa5e4>
   1b650:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b654:	strdeq	r1, [r1], -r8
   1b658:	strdeq	r1, [r1], -r0
   1b65c:	bx	lr
   1b660:	ldr	r3, [pc, #12]	; 1b674 <__assert_fail@plt+0xa628>
   1b664:	mov	r1, #0
   1b668:	add	r3, pc, r3
   1b66c:	ldr	r2, [r3]
   1b670:	b	10f8c <__cxa_atexit@plt>
   1b674:	andeq	r1, r1, r0, ror sl

Disassembly of section .fini:

0001b678 <.fini>:
   1b678:	push	{r3, lr}
   1b67c:	pop	{r3, pc}
