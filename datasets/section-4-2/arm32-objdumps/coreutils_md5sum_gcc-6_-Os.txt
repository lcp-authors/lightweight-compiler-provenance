
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010d5c <.init>:
   10d5c:	push	{r3, lr}
   10d60:	bl	11f10 <putchar_unlocked@plt+0xee8>
   10d64:	pop	{r3, pc}

Disassembly of section .plt:

00010d68 <fdopen@plt-0x14>:
   10d68:	push	{lr}		; (str lr, [sp, #-4]!)
   10d6c:	ldr	lr, [pc, #4]	; 10d78 <fdopen@plt-0x4>
   10d70:	add	lr, pc, lr
   10d74:	ldr	pc, [lr, #8]!
   10d78:	andeq	r7, r1, r8, lsl #5

00010d7c <fdopen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #94208	; 0x17000
   10d84:	ldr	pc, [ip, #648]!	; 0x288

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #94208	; 0x17000
   10d90:	ldr	pc, [ip, #640]!	; 0x280

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #94208	; 0x17000
   10d9c:	ldr	pc, [ip, #632]!	; 0x278

00010da0 <raise@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #94208	; 0x17000
   10da8:	ldr	pc, [ip, #624]!	; 0x270

00010dac <strcmp@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #94208	; 0x17000
   10db4:	ldr	pc, [ip, #616]!	; 0x268

00010db8 <posix_fadvise64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #94208	; 0x17000
   10dc0:	ldr	pc, [ip, #608]!	; 0x260

00010dc4 <fflush@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #94208	; 0x17000
   10dcc:	ldr	pc, [ip, #600]!	; 0x258

00010dd0 <free@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #94208	; 0x17000
   10dd8:	ldr	pc, [ip, #592]!	; 0x250

00010ddc <_exit@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #94208	; 0x17000
   10de4:	ldr	pc, [ip, #584]!	; 0x248

00010de8 <memcpy@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #94208	; 0x17000
   10df0:	ldr	pc, [ip, #576]!	; 0x240

00010df4 <mbsinit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #94208	; 0x17000
   10dfc:	ldr	pc, [ip, #568]!	; 0x238

00010e00 <memcmp@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #94208	; 0x17000
   10e08:	ldr	pc, [ip, #560]!	; 0x230

00010e0c <fputc_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #94208	; 0x17000
   10e14:	ldr	pc, [ip, #552]!	; 0x228

00010e18 <dcgettext@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #94208	; 0x17000
   10e20:	ldr	pc, [ip, #544]!	; 0x220

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #94208	; 0x17000
   10e2c:	ldr	pc, [ip, #536]!	; 0x218

00010e30 <textdomain@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #94208	; 0x17000
   10e38:	ldr	pc, [ip, #528]!	; 0x210

00010e3c <iswprint@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #94208	; 0x17000
   10e44:	ldr	pc, [ip, #520]!	; 0x208

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #94208	; 0x17000
   10e50:	ldr	pc, [ip, #512]!	; 0x200

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #94208	; 0x17000
   10e5c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #94208	; 0x17000
   10e68:	ldr	pc, [ip, #496]!	; 0x1f0

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #94208	; 0x17000
   10e74:	ldr	pc, [ip, #488]!	; 0x1e8

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #94208	; 0x17000
   10e80:	ldr	pc, [ip, #480]!	; 0x1e0

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #94208	; 0x17000
   10e8c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e90 <malloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #94208	; 0x17000
   10e98:	ldr	pc, [ip, #464]!	; 0x1d0

00010e9c <__libc_start_main@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #94208	; 0x17000
   10ea4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea8 <__freading@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #94208	; 0x17000
   10eb0:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb4 <__ctype_tolower_loc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #94208	; 0x17000
   10ebc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ec0 <__gmon_start__@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #94208	; 0x17000
   10ec8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ecc <getopt_long@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #94208	; 0x17000
   10ed4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed8 <__ctype_b_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #94208	; 0x17000
   10ee0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee4 <exit@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #94208	; 0x17000
   10eec:	ldr	pc, [ip, #408]!	; 0x198

00010ef0 <strlen@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #94208	; 0x17000
   10ef8:	ldr	pc, [ip, #400]!	; 0x190

00010efc <strchr@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #94208	; 0x17000
   10f04:	ldr	pc, [ip, #392]!	; 0x188

00010f08 <__errno_location@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #94208	; 0x17000
   10f10:	ldr	pc, [ip, #384]!	; 0x180

00010f14 <__cxa_atexit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #94208	; 0x17000
   10f1c:	ldr	pc, [ip, #376]!	; 0x178

00010f20 <setvbuf@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #94208	; 0x17000
   10f28:	ldr	pc, [ip, #368]!	; 0x170

00010f2c <memset@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #94208	; 0x17000
   10f34:	ldr	pc, [ip, #360]!	; 0x168

00010f38 <__printf_chk@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #94208	; 0x17000
   10f40:	ldr	pc, [ip, #352]!	; 0x160

00010f44 <fileno@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #94208	; 0x17000
   10f4c:	ldr	pc, [ip, #344]!	; 0x158

00010f50 <__fprintf_chk@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #94208	; 0x17000
   10f58:	ldr	pc, [ip, #336]!	; 0x150

00010f5c <fclose@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #94208	; 0x17000
   10f64:	ldr	pc, [ip, #328]!	; 0x148

00010f68 <fseeko64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #94208	; 0x17000
   10f70:	ldr	pc, [ip, #320]!	; 0x140

00010f74 <fcntl64@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #94208	; 0x17000
   10f7c:	ldr	pc, [ip, #312]!	; 0x138

00010f80 <setlocale@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #94208	; 0x17000
   10f88:	ldr	pc, [ip, #304]!	; 0x130

00010f8c <strrchr@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #94208	; 0x17000
   10f94:	ldr	pc, [ip, #296]!	; 0x128

00010f98 <nl_langinfo@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #94208	; 0x17000
   10fa0:	ldr	pc, [ip, #288]!	; 0x120

00010fa4 <clearerr_unlocked@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #94208	; 0x17000
   10fac:	ldr	pc, [ip, #280]!	; 0x118

00010fb0 <fopen64@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #94208	; 0x17000
   10fb8:	ldr	pc, [ip, #272]!	; 0x110

00010fbc <bindtextdomain@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #94208	; 0x17000
   10fc4:	ldr	pc, [ip, #264]!	; 0x108

00010fc8 <fread_unlocked@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #94208	; 0x17000
   10fd0:	ldr	pc, [ip, #256]!	; 0x100

00010fd4 <getline@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #94208	; 0x17000
   10fdc:	ldr	pc, [ip, #248]!	; 0xf8

00010fe0 <fputs@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #94208	; 0x17000
   10fe8:	ldr	pc, [ip, #240]!	; 0xf0

00010fec <strncmp@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #94208	; 0x17000
   10ff4:	ldr	pc, [ip, #232]!	; 0xe8

00010ff8 <abort@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #94208	; 0x17000
   11000:	ldr	pc, [ip, #224]!	; 0xe0

00011004 <feof_unlocked@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #94208	; 0x17000
   1100c:	ldr	pc, [ip, #216]!	; 0xd8

00011010 <close@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #94208	; 0x17000
   11018:	ldr	pc, [ip, #208]!	; 0xd0

0001101c <dcngettext@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #94208	; 0x17000
   11024:	ldr	pc, [ip, #200]!	; 0xc8

00011028 <putchar_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #94208	; 0x17000
   11030:	ldr	pc, [ip, #192]!	; 0xc0

Disassembly of section .text:

00011034 <.text>:
   11034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11038:	mov	r9, r0
   1103c:	sub	sp, sp, #164	; 0xa4
   11040:	ldr	r0, [r1]
   11044:	mov	r7, r1
   11048:	bl	13794 <putchar_unlocked@plt+0x276c>
   1104c:	ldr	r1, [pc, #3500]	; 11e00 <putchar_unlocked@plt+0xdd8>
   11050:	mov	r0, #6
   11054:	bl	10f80 <setlocale@plt>
   11058:	ldr	r1, [pc, #3492]	; 11e04 <putchar_unlocked@plt+0xddc>
   1105c:	ldr	r0, [pc, #3492]	; 11e08 <putchar_unlocked@plt+0xde0>
   11060:	bl	10fbc <bindtextdomain@plt>
   11064:	ldr	r8, [pc, #3488]	; 11e0c <putchar_unlocked@plt+0xde4>
   11068:	ldr	r0, [pc, #3480]	; 11e08 <putchar_unlocked@plt+0xde0>
   1106c:	bl	10e30 <textdomain@plt>
   11070:	ldr	r0, [pc, #3480]	; 11e10 <putchar_unlocked@plt+0xde8>
   11074:	bl	162a8 <putchar_unlocked@plt+0x5280>
   11078:	mov	r3, #0
   1107c:	mov	r1, r3
   11080:	mov	r2, #1
   11084:	ldr	r0, [r8]
   11088:	bl	10f20 <setvbuf@plt>
   1108c:	ldr	r5, [pc, #3456]	; 11e14 <putchar_unlocked@plt+0xdec>
   11090:	mov	r3, #0
   11094:	ldr	fp, [pc, #3452]	; 11e18 <putchar_unlocked@plt+0xdf0>
   11098:	mvn	r6, #0
   1109c:	mov	sl, r3
   110a0:	str	r3, [sp, #48]	; 0x30
   110a4:	mov	r4, #0
   110a8:	str	r4, [sp]
   110ac:	ldr	r3, [pc, #3432]	; 11e1c <putchar_unlocked@plt+0xdf4>
   110b0:	ldr	r2, [pc, #3432]	; 11e20 <putchar_unlocked@plt+0xdf8>
   110b4:	mov	r1, r7
   110b8:	mov	r0, r9
   110bc:	bl	10ecc <getopt_long@plt>
   110c0:	cmn	r0, #1
   110c4:	bne	1113c <putchar_unlocked@plt+0x114>
   110c8:	ldr	r5, [sp, #48]	; 0x30
   110cc:	ldr	r3, [pc, #3392]	; 11e14 <putchar_unlocked@plt+0xdec>
   110d0:	cmp	r6, r4
   110d4:	movne	r5, #0
   110d8:	andeq	r5, r5, #1
   110dc:	mov	r2, #34	; 0x22
   110e0:	cmp	r5, r4
   110e4:	str	r2, [r3, #12]
   110e8:	mov	r2, #32
   110ec:	str	r2, [r3]
   110f0:	ldrne	r1, [pc, #3372]	; 11e24 <putchar_unlocked@plt+0xdfc>
   110f4:	movne	r2, #5
   110f8:	bne	11314 <putchar_unlocked@plt+0x2ec>
   110fc:	ldr	r2, [pc, #3364]	; 11e28 <putchar_unlocked@plt+0xe00>
   11100:	ldrb	r4, [r2]
   11104:	cmp	r4, #10
   11108:	moveq	r4, #0
   1110c:	andne	r4, sl, #1
   11110:	cmp	r4, #0
   11114:	beq	11264 <putchar_unlocked@plt+0x23c>
   11118:	ldr	r1, [pc, #3340]	; 11e2c <putchar_unlocked@plt+0xe04>
   1111c:	mov	r2, #5
   11120:	mov	r0, r5
   11124:	bl	10e18 <dcgettext@plt>
   11128:	mov	r1, r5
   1112c:	mov	r2, r0
   11130:	mov	r0, r1
   11134:	bl	10e84 <error@plt>
   11138:	b	11168 <putchar_unlocked@plt+0x140>
   1113c:	cmp	r0, #119	; 0x77
   11140:	beq	111ec <putchar_unlocked@plt+0x1c4>
   11144:	bgt	11188 <putchar_unlocked@plt+0x160>
   11148:	cmp	r0, #98	; 0x62
   1114c:	beq	111d0 <putchar_unlocked@plt+0x1a8>
   11150:	bgt	11170 <putchar_unlocked@plt+0x148>
   11154:	cmn	r0, #3
   11158:	beq	11220 <putchar_unlocked@plt+0x1f8>
   1115c:	cmn	r0, #2
   11160:	moveq	r0, r4
   11164:	beq	1116c <putchar_unlocked@plt+0x144>
   11168:	mov	r0, #1
   1116c:	bl	122a4 <putchar_unlocked@plt+0x127c>
   11170:	cmp	r0, #99	; 0x63
   11174:	beq	1125c <putchar_unlocked@plt+0x234>
   11178:	cmp	r0, #116	; 0x74
   1117c:	bne	11168 <putchar_unlocked@plt+0x140>
   11180:	mov	r6, r4
   11184:	b	110a4 <putchar_unlocked@plt+0x7c>
   11188:	ldr	r3, [pc, #3232]	; 11e30 <putchar_unlocked@plt+0xe08>
   1118c:	cmp	r0, r3
   11190:	beq	111d8 <putchar_unlocked@plt+0x1b0>
   11194:	bgt	111b4 <putchar_unlocked@plt+0x18c>
   11198:	cmp	r0, #122	; 0x7a
   1119c:	beq	11214 <putchar_unlocked@plt+0x1ec>
   111a0:	cmp	r0, #256	; 0x100
   111a4:	bne	11168 <putchar_unlocked@plt+0x140>
   111a8:	mov	r3, #1
   111ac:	strb	r3, [r5, #5]
   111b0:	b	110a4 <putchar_unlocked@plt+0x7c>
   111b4:	cmp	r0, fp
   111b8:	mov	r3, #1
   111bc:	beq	1120c <putchar_unlocked@plt+0x1e4>
   111c0:	blt	111fc <putchar_unlocked@plt+0x1d4>
   111c4:	cmp	r0, #260	; 0x104
   111c8:	bne	11168 <putchar_unlocked@plt+0x140>
   111cc:	str	r3, [sp, #48]	; 0x30
   111d0:	mov	r6, #1
   111d4:	b	110a4 <putchar_unlocked@plt+0x7c>
   111d8:	mov	r3, #1
   111dc:	strb	r3, [r5, #6]
   111e0:	strb	r4, [r5, #7]
   111e4:	strb	r4, [r5, #8]
   111e8:	b	110a4 <putchar_unlocked@plt+0x7c>
   111ec:	mov	r3, #1
   111f0:	strb	r4, [r5, #6]
   111f4:	strb	r3, [r5, #7]
   111f8:	b	111e4 <putchar_unlocked@plt+0x1bc>
   111fc:	strb	r4, [r5, #6]
   11200:	strb	r4, [r5, #7]
   11204:	strb	r3, [r5, #8]
   11208:	b	110a4 <putchar_unlocked@plt+0x7c>
   1120c:	strb	r3, [r5, #9]
   11210:	b	110a4 <putchar_unlocked@plt+0x7c>
   11214:	ldr	r3, [pc, #3084]	; 11e28 <putchar_unlocked@plt+0xe00>
   11218:	strb	r4, [r3]
   1121c:	b	110a4 <putchar_unlocked@plt+0x7c>
   11220:	ldr	r3, [pc, #3084]	; 11e34 <putchar_unlocked@plt+0xe0c>
   11224:	str	r4, [sp, #12]
   11228:	str	r3, [sp, #8]
   1122c:	ldr	r3, [pc, #3076]	; 11e38 <putchar_unlocked@plt+0xe10>
   11230:	ldr	r2, [pc, #3076]	; 11e3c <putchar_unlocked@plt+0xe14>
   11234:	str	r3, [sp, #4]
   11238:	ldr	r3, [pc, #3072]	; 11e40 <putchar_unlocked@plt+0xe18>
   1123c:	ldr	r1, [pc, #3072]	; 11e44 <putchar_unlocked@plt+0xe1c>
   11240:	str	r3, [sp]
   11244:	ldr	r3, [pc, #3068]	; 11e48 <putchar_unlocked@plt+0xe20>
   11248:	ldr	r0, [r8]
   1124c:	ldr	r3, [r3]
   11250:	bl	15220 <putchar_unlocked@plt+0x41f8>
   11254:	mov	r0, r4
   11258:	bl	10ee4 <exit@plt>
   1125c:	mov	sl, #1
   11260:	b	110a4 <putchar_unlocked@plt+0x7c>
   11264:	ldr	r2, [sp, #48]	; 0x30
   11268:	ands	r5, sl, r2
   1126c:	movne	r2, #5
   11270:	ldrne	r1, [pc, #3028]	; 11e4c <putchar_unlocked@plt+0xe24>
   11274:	bne	11314 <putchar_unlocked@plt+0x2ec>
   11278:	cmp	r6, #0
   1127c:	movlt	r2, #0
   11280:	andge	r2, sl, #1
   11284:	cmp	r2, #0
   11288:	movne	r2, #5
   1128c:	ldrne	r1, [pc, #3004]	; 11e50 <putchar_unlocked@plt+0xe28>
   11290:	bne	11120 <putchar_unlocked@plt+0xf8>
   11294:	ldrb	r4, [r3, #5]
   11298:	eor	r4, r4, #1
   1129c:	orrs	r4, sl, r4
   112a0:	moveq	r2, #5
   112a4:	ldreq	r1, [pc, #2984]	; 11e54 <putchar_unlocked@plt+0xe2c>
   112a8:	beq	11314 <putchar_unlocked@plt+0x2ec>
   112ac:	ldrb	r4, [r3, #6]
   112b0:	eor	r4, r4, #1
   112b4:	orrs	r4, sl, r4
   112b8:	moveq	r2, #5
   112bc:	ldreq	r1, [pc, #2964]	; 11e58 <putchar_unlocked@plt+0xe30>
   112c0:	beq	11314 <putchar_unlocked@plt+0x2ec>
   112c4:	ldrb	r4, [r3, #7]
   112c8:	eor	r4, r4, #1
   112cc:	orrs	r4, sl, r4
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #2944]	; 11e5c <putchar_unlocked@plt+0xe34>
   112d8:	beq	11314 <putchar_unlocked@plt+0x2ec>
   112dc:	ldrb	r0, [r3, #8]
   112e0:	eor	r0, r0, #1
   112e4:	orrs	r2, sl, r0
   112e8:	str	r2, [sp, #44]	; 0x2c
   112ec:	ldreq	r1, [pc, #2924]	; 11e60 <putchar_unlocked@plt+0xe38>
   112f0:	moveq	r2, #5
   112f4:	beq	11314 <putchar_unlocked@plt+0x2ec>
   112f8:	ldrb	r1, [r3, #9]
   112fc:	eor	r2, sl, #1
   11300:	ands	r3, r1, r2
   11304:	str	r3, [sp, #64]	; 0x40
   11308:	beq	11328 <putchar_unlocked@plt+0x300>
   1130c:	ldr	r1, [pc, #2896]	; 11e64 <putchar_unlocked@plt+0xe3c>
   11310:	mov	r2, #5
   11314:	mov	r0, #0
   11318:	bl	10e18 <dcgettext@plt>
   1131c:	mov	r1, #0
   11320:	mov	r2, r0
   11324:	b	11130 <putchar_unlocked@plt+0x108>
   11328:	add	r3, r7, r9, lsl #2
   1132c:	str	r3, [sp, #68]	; 0x44
   11330:	ldr	r3, [pc, #2864]	; 11e68 <putchar_unlocked@plt+0xe40>
   11334:	cmn	r6, #1
   11338:	moveq	r6, #0
   1133c:	ldr	r3, [r3]
   11340:	cmp	r9, r3
   11344:	ldreq	r2, [pc, #2848]	; 11e6c <putchar_unlocked@plt+0xe44>
   11348:	streq	r2, [r7, r3, lsl #2]
   1134c:	ldreq	r2, [sp, #68]	; 0x44
   11350:	add	r3, r7, r3, lsl #2
   11354:	addeq	r2, r2, #4
   11358:	streq	r2, [sp, #68]	; 0x44
   1135c:	cmp	r6, #0
   11360:	movne	r2, #42	; 0x2a
   11364:	moveq	r2, #32
   11368:	str	r2, [sp, #92]	; 0x5c
   1136c:	str	r3, [sp, #80]	; 0x50
   11370:	ldr	r3, [sp, #68]	; 0x44
   11374:	ldr	r2, [sp, #80]	; 0x50
   11378:	cmp	r3, r2
   1137c:	bhi	113cc <putchar_unlocked@plt+0x3a4>
   11380:	ldr	r3, [pc, #2700]	; 11e14 <putchar_unlocked@plt+0xdec>
   11384:	ldrb	r3, [r3, #4]
   11388:	cmp	r3, #0
   1138c:	beq	11dec <putchar_unlocked@plt+0xdc4>
   11390:	ldr	r3, [pc, #2776]	; 11e70 <putchar_unlocked@plt+0xe48>
   11394:	ldr	r0, [r3]
   11398:	bl	13520 <putchar_unlocked@plt+0x24f8>
   1139c:	cmn	r0, #1
   113a0:	bne	11dec <putchar_unlocked@plt+0xdc4>
   113a4:	bl	10f08 <__errno_location@plt>
   113a8:	mov	r2, #5
   113ac:	ldr	r1, [pc, #2752]	; 11e74 <putchar_unlocked@plt+0xe4c>
   113b0:	ldr	r4, [r0]
   113b4:	mov	r0, #0
   113b8:	bl	10e18 <dcgettext@plt>
   113bc:	mov	r1, r4
   113c0:	mov	r2, r0
   113c4:	mov	r0, #1
   113c8:	bl	10e84 <error@plt>
   113cc:	ldr	r3, [sp, #80]	; 0x50
   113d0:	cmp	sl, #0
   113d4:	ldr	r4, [r3], #4
   113d8:	str	r3, [sp, #80]	; 0x50
   113dc:	beq	11c7c <putchar_unlocked@plt+0xc54>
   113e0:	ldr	r1, [pc, #2692]	; 11e6c <putchar_unlocked@plt+0xe44>
   113e4:	mov	r0, r4
   113e8:	bl	10dac <strcmp@plt>
   113ec:	subs	r3, r0, #0
   113f0:	str	r3, [sp, #88]	; 0x58
   113f4:	bne	114a0 <putchar_unlocked@plt+0x478>
   113f8:	ldr	r3, [pc, #2580]	; 11e14 <putchar_unlocked@plt+0xdec>
   113fc:	mov	r2, #1
   11400:	ldr	r1, [pc, #2668]	; 11e74 <putchar_unlocked@plt+0xe4c>
   11404:	strb	r2, [r3, #4]
   11408:	mov	r2, #5
   1140c:	bl	10e18 <dcgettext@plt>
   11410:	ldr	r3, [pc, #2648]	; 11e70 <putchar_unlocked@plt+0xe48>
   11414:	ldr	r6, [r3]
   11418:	str	r0, [sp, #52]	; 0x34
   1141c:	add	r2, sp, #160	; 0xa0
   11420:	mov	r3, #0
   11424:	str	r3, [r2, #-44]!	; 0xffffffd4
   11428:	str	r3, [sp, #112]	; 0x70
   1142c:	ldr	r3, [sp, #64]	; 0x40
   11430:	str	r2, [sp, #84]	; 0x54
   11434:	str	r3, [sp, #72]	; 0x48
   11438:	mov	r2, #1
   1143c:	mov	r9, r3
   11440:	mov	r3, #0
   11444:	strd	r2, [sp, #56]	; 0x38
   11448:	mov	r2, #0
   1144c:	mov	r3, #0
   11450:	strd	r2, [sp, #24]
   11454:	strd	r2, [sp, #32]
   11458:	strd	r2, [sp, #16]
   1145c:	ldrd	r2, [sp, #56]	; 0x38
   11460:	orrs	r3, r2, r3
   11464:	bne	114f8 <putchar_unlocked@plt+0x4d0>
   11468:	mov	r2, #5
   1146c:	ldr	r1, [pc, #2564]	; 11e78 <putchar_unlocked@plt+0xe50>
   11470:	mov	r0, #0
   11474:	bl	10e18 <dcgettext@plt>
   11478:	ldr	r2, [sp, #52]	; 0x34
   1147c:	mov	r1, #3
   11480:	mov	r4, r0
   11484:	mov	r0, #0
   11488:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   1148c:	mov	r2, r4
   11490:	mov	r1, #0
   11494:	mov	r3, r0
   11498:	mov	r0, #1
   1149c:	bl	10e84 <error@plt>
   114a0:	ldr	r1, [pc, #2516]	; 11e7c <putchar_unlocked@plt+0xe54>
   114a4:	mov	r0, r4
   114a8:	bl	13618 <putchar_unlocked@plt+0x25f0>
   114ac:	subs	r6, r0, #0
   114b0:	strne	r4, [sp, #52]	; 0x34
   114b4:	bne	1141c <putchar_unlocked@plt+0x3f4>
   114b8:	bl	10f08 <__errno_location@plt>
   114bc:	mov	r2, r4
   114c0:	mov	r1, #3
   114c4:	ldr	r5, [r0]
   114c8:	mov	r0, r6
   114cc:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   114d0:	ldr	r2, [pc, #2472]	; 11e80 <putchar_unlocked@plt+0xe58>
   114d4:	mov	r1, r5
   114d8:	mov	r3, r0
   114dc:	mov	r0, #0
   114e0:	bl	10e84 <error@plt>
   114e4:	ldr	r9, [sp, #64]	; 0x40
   114e8:	ldr	r3, [sp, #44]	; 0x2c
   114ec:	and	r3, r3, r9
   114f0:	str	r3, [sp, #44]	; 0x2c
   114f4:	b	11370 <putchar_unlocked@plt+0x348>
   114f8:	mov	r2, r6
   114fc:	ldr	r1, [sp, #84]	; 0x54
   11500:	add	r0, sp, #112	; 0x70
   11504:	bl	10fd4 <getline@plt>
   11508:	subs	r8, r0, #0
   1150c:	ble	1165c <putchar_unlocked@plt+0x634>
   11510:	ldr	r3, [sp, #112]	; 0x70
   11514:	ldrb	r2, [r3]
   11518:	cmp	r2, #35	; 0x23
   1151c:	beq	1162c <putchar_unlocked@plt+0x604>
   11520:	add	r2, r3, r8
   11524:	ldrb	r0, [r2, #-1]
   11528:	cmp	r0, #10
   1152c:	subeq	r8, r8, #1
   11530:	cmp	r8, #0
   11534:	movle	r2, r8
   11538:	subgt	r2, r8, #1
   1153c:	ldrb	r0, [r3, r2]
   11540:	cmp	r0, #13
   11544:	subeq	r8, r8, #1
   11548:	cmp	r8, #0
   1154c:	beq	1162c <putchar_unlocked@plt+0x604>
   11550:	mov	r2, #0
   11554:	strb	r2, [r3, r8]
   11558:	ldr	r4, [sp, #112]	; 0x70
   1155c:	mov	r2, r4
   11560:	sub	fp, r2, r4
   11564:	ldrb	r3, [r2], #1
   11568:	cmp	r3, #9
   1156c:	cmpne	r3, #32
   11570:	moveq	r7, #1
   11574:	movne	r7, #0
   11578:	beq	11560 <putchar_unlocked@plt+0x538>
   1157c:	cmp	r3, #92	; 0x5c
   11580:	addeq	fp, fp, #1
   11584:	add	r5, r4, fp
   11588:	mov	r2, #3
   1158c:	ldr	r1, [pc, #2288]	; 11e84 <putchar_unlocked@plt+0xe5c>
   11590:	mov	r0, r5
   11594:	streq	sl, [sp, #76]	; 0x4c
   11598:	strne	r7, [sp, #76]	; 0x4c
   1159c:	bl	10fec <strncmp@plt>
   115a0:	cmp	r0, #0
   115a4:	bne	11850 <putchar_unlocked@plt+0x828>
   115a8:	add	r3, fp, #3
   115ac:	ldrb	r2, [r4, r3]
   115b0:	cmp	r2, #32
   115b4:	addeq	r3, fp, #4
   115b8:	ldrb	r2, [r4, r3]
   115bc:	cmp	r2, #40	; 0x28
   115c0:	beq	116d8 <putchar_unlocked@plt+0x6b0>
   115c4:	ldrd	r2, [sp, #16]
   115c8:	adds	r2, r2, #1
   115cc:	adc	r3, r3, #0
   115d0:	strd	r2, [sp, #16]
   115d4:	ldr	r3, [pc, #2104]	; 11e14 <putchar_unlocked@plt+0xdec>
   115d8:	ldrb	r3, [r3, #7]
   115dc:	cmp	r3, #0
   115e0:	beq	1162c <putchar_unlocked@plt+0x604>
   115e4:	mov	r2, #5
   115e8:	ldr	r1, [pc, #2200]	; 11e88 <putchar_unlocked@plt+0xe60>
   115ec:	mov	r0, #0
   115f0:	bl	10e18 <dcgettext@plt>
   115f4:	ldr	r2, [sp, #52]	; 0x34
   115f8:	mov	r1, #3
   115fc:	mov	r4, r0
   11600:	mov	r0, #0
   11604:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   11608:	ldr	r3, [pc, #2164]	; 11e84 <putchar_unlocked@plt+0xe5c>
   1160c:	mov	r1, #0
   11610:	str	r3, [sp, #8]
   11614:	ldrd	r2, [sp, #56]	; 0x38
   11618:	strd	r2, [sp]
   1161c:	mov	r2, r4
   11620:	mov	r3, r0
   11624:	mov	r0, r1
   11628:	bl	10e84 <error@plt>
   1162c:	mov	r0, r6
   11630:	bl	11004 <feof_unlocked@plt>
   11634:	cmp	r0, #0
   11638:	bne	1165c <putchar_unlocked@plt+0x634>
   1163c:	mov	r0, r6
   11640:	bl	10e6c <ferror_unlocked@plt>
   11644:	ldrd	r2, [sp, #56]	; 0x38
   11648:	adds	r2, r2, #1
   1164c:	adc	r3, r3, #0
   11650:	strd	r2, [sp, #56]	; 0x38
   11654:	cmp	r0, #0
   11658:	beq	1145c <putchar_unlocked@plt+0x434>
   1165c:	ldr	r0, [sp, #112]	; 0x70
   11660:	bl	136ac <putchar_unlocked@plt+0x2684>
   11664:	mov	r0, r6
   11668:	bl	10e6c <ferror_unlocked@plt>
   1166c:	ldr	r3, [sp, #88]	; 0x58
   11670:	cmp	r0, #0
   11674:	movne	r4, #0
   11678:	mvneq	r4, #0
   1167c:	cmp	r3, #0
   11680:	mov	r5, r0
   11684:	mov	r0, r6
   11688:	bne	11a24 <putchar_unlocked@plt+0x9fc>
   1168c:	bl	10fa4 <clearerr_unlocked@plt>
   11690:	cmp	r4, #0
   11694:	blt	11a44 <putchar_unlocked@plt+0xa1c>
   11698:	ldrne	r5, [pc, #2016]	; 11e80 <putchar_unlocked@plt+0xe58>
   1169c:	bne	116b8 <putchar_unlocked@plt+0x690>
   116a0:	mov	r2, #5
   116a4:	ldr	r1, [pc, #2016]	; 11e8c <putchar_unlocked@plt+0xe64>
   116a8:	mov	r0, #0
   116ac:	bl	10e18 <dcgettext@plt>
   116b0:	mov	r4, #0
   116b4:	mov	r5, r0
   116b8:	ldr	r2, [sp, #52]	; 0x34
   116bc:	mov	r1, #3
   116c0:	mov	r0, #0
   116c4:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   116c8:	mov	r2, r5
   116cc:	mov	r1, r4
   116d0:	mov	r3, r0
   116d4:	b	114dc <putchar_unlocked@plt+0x4b4>
   116d8:	add	r3, r3, #1
   116dc:	subs	r8, r8, r3
   116e0:	beq	115c4 <putchar_unlocked@plt+0x59c>
   116e4:	add	r4, r4, r3
   116e8:	sub	r8, r8, #1
   116ec:	cmp	r8, #0
   116f0:	beq	11700 <putchar_unlocked@plt+0x6d8>
   116f4:	ldrb	r3, [r4, r8]
   116f8:	cmp	r3, #41	; 0x29
   116fc:	bne	116e8 <putchar_unlocked@plt+0x6c0>
   11700:	ldrb	r3, [r4, r8]
   11704:	add	r5, r4, r8
   11708:	cmp	r3, #41	; 0x29
   1170c:	bne	115c4 <putchar_unlocked@plt+0x59c>
   11710:	ldr	r3, [sp, #76]	; 0x4c
   11714:	cmp	r3, #0
   11718:	bne	11830 <putchar_unlocked@plt+0x808>
   1171c:	add	r8, r8, #1
   11720:	mov	r3, #0
   11724:	strb	r3, [r5]
   11728:	ldrb	r3, [r4, r8]
   1172c:	cmp	r3, #9
   11730:	cmpne	r3, #32
   11734:	beq	11848 <putchar_unlocked@plt+0x820>
   11738:	cmp	r3, #61	; 0x3d
   1173c:	bne	115c4 <putchar_unlocked@plt+0x59c>
   11740:	add	r8, r8, #1
   11744:	add	r8, r4, r8
   11748:	mov	r5, r8
   1174c:	ldrb	r3, [r8], #1
   11750:	cmp	r3, #9
   11754:	cmpne	r3, #32
   11758:	beq	11748 <putchar_unlocked@plt+0x720>
   1175c:	mov	r0, r5
   11760:	bl	12094 <putchar_unlocked@plt+0x106c>
   11764:	cmp	r0, #0
   11768:	beq	115c4 <putchar_unlocked@plt+0x59c>
   1176c:	ldr	r3, [sp, #88]	; 0x58
   11770:	cmp	r3, #0
   11774:	bne	1178c <putchar_unlocked@plt+0x764>
   11778:	ldr	r1, [pc, #1772]	; 11e6c <putchar_unlocked@plt+0xe44>
   1177c:	mov	r0, r4
   11780:	bl	10dac <strcmp@plt>
   11784:	cmp	r0, #0
   11788:	beq	115c4 <putchar_unlocked@plt+0x59c>
   1178c:	ldr	r3, [pc, #1664]	; 11e14 <putchar_unlocked@plt+0xdec>
   11790:	ldrb	r3, [r3, #6]
   11794:	cmp	r3, #0
   11798:	bne	117b0 <putchar_unlocked@plt+0x788>
   1179c:	mov	r1, #10
   117a0:	mov	r0, r4
   117a4:	bl	10efc <strchr@plt>
   117a8:	adds	r7, r0, #0
   117ac:	movne	r7, #1
   117b0:	add	r2, sp, #111	; 0x6f
   117b4:	add	r1, sp, #140	; 0x8c
   117b8:	mov	r0, r4
   117bc:	str	r7, [sp, #76]	; 0x4c
   117c0:	bl	12178 <putchar_unlocked@plt+0x1150>
   117c4:	ldr	r3, [pc, #1608]	; 11e14 <putchar_unlocked@plt+0xdec>
   117c8:	subs	r2, r0, #0
   117cc:	bne	11924 <putchar_unlocked@plt+0x8fc>
   117d0:	ldrd	r0, [sp, #24]
   117d4:	ldrb	r3, [r3, #6]
   117d8:	adds	r0, r0, #1
   117dc:	adc	r1, r1, #0
   117e0:	cmp	r3, #0
   117e4:	strd	r0, [sp, #24]
   117e8:	bne	11828 <putchar_unlocked@plt+0x800>
   117ec:	cmp	r7, #0
   117f0:	beq	117fc <putchar_unlocked@plt+0x7d4>
   117f4:	mov	r0, #92	; 0x5c
   117f8:	bl	11028 <putchar_unlocked@plt>
   117fc:	ldr	r1, [sp, #76]	; 0x4c
   11800:	mov	r0, r4
   11804:	bl	120ec <putchar_unlocked@plt+0x10c4>
   11808:	ldr	r1, [pc, #1664]	; 11e90 <putchar_unlocked@plt+0xe68>
   1180c:	mov	r2, #5
   11810:	mov	r0, #0
   11814:	bl	10e18 <dcgettext@plt>
   11818:	ldr	r1, [pc, #1652]	; 11e94 <putchar_unlocked@plt+0xe6c>
   1181c:	mov	r2, r0
   11820:	mov	r0, #1
   11824:	bl	10f38 <__printf_chk@plt>
   11828:	mov	r9, sl
   1182c:	b	1162c <putchar_unlocked@plt+0x604>
   11830:	mov	r1, r8
   11834:	mov	r0, r4
   11838:	bl	11ffc <putchar_unlocked@plt+0xfd4>
   1183c:	cmp	r0, #0
   11840:	bne	1171c <putchar_unlocked@plt+0x6f4>
   11844:	b	115c4 <putchar_unlocked@plt+0x59c>
   11848:	add	r8, r8, #1
   1184c:	b	11728 <putchar_unlocked@plt+0x700>
   11850:	ldr	r1, [pc, #1468]	; 11e14 <putchar_unlocked@plt+0xdec>
   11854:	ldrb	r0, [r4, fp]
   11858:	sub	r2, r8, fp
   1185c:	ldr	r3, [r1, #12]
   11860:	cmp	r0, #92	; 0x5c
   11864:	addeq	r3, r3, #1
   11868:	cmp	r2, r3
   1186c:	bcc	115c4 <putchar_unlocked@plt+0x59c>
   11870:	ldr	r3, [r1]
   11874:	add	fp, fp, r3
   11878:	ldrb	r3, [r4, fp]
   1187c:	cmp	r3, #32
   11880:	cmpne	r3, #9
   11884:	movne	r3, #1
   11888:	moveq	r3, #0
   1188c:	bne	115c4 <putchar_unlocked@plt+0x59c>
   11890:	strb	r3, [r4, fp]
   11894:	mov	r0, r5
   11898:	bl	12094 <putchar_unlocked@plt+0x106c>
   1189c:	cmp	r0, #0
   118a0:	beq	115c4 <putchar_unlocked@plt+0x59c>
   118a4:	add	r1, fp, #1
   118a8:	sub	r3, r8, r1
   118ac:	cmp	r3, #1
   118b0:	beq	118cc <putchar_unlocked@plt+0x8a4>
   118b4:	ldrb	r3, [r4, r1]
   118b8:	cmp	r3, #32
   118bc:	cmpne	r3, #42	; 0x2a
   118c0:	movne	r3, #1
   118c4:	moveq	r3, #0
   118c8:	beq	1190c <putchar_unlocked@plt+0x8e4>
   118cc:	ldr	r3, [pc, #1364]	; 11e28 <putchar_unlocked@plt+0xe00>
   118d0:	ldr	r2, [r3, #4]
   118d4:	cmp	r2, #0
   118d8:	movne	r2, #1
   118dc:	strne	r2, [r3, #4]
   118e0:	beq	115c4 <putchar_unlocked@plt+0x59c>
   118e4:	ldr	r3, [sp, #76]	; 0x4c
   118e8:	add	r4, r4, r1
   118ec:	cmp	r3, #0
   118f0:	beq	1176c <putchar_unlocked@plt+0x744>
   118f4:	sub	r1, r8, r1
   118f8:	mov	r0, r4
   118fc:	bl	11ffc <putchar_unlocked@plt+0xfd4>
   11900:	adds	r0, r0, #0
   11904:	movne	r0, #1
   11908:	b	11764 <putchar_unlocked@plt+0x73c>
   1190c:	ldr	r2, [pc, #1300]	; 11e28 <putchar_unlocked@plt+0xe00>
   11910:	ldr	r0, [r2, #4]
   11914:	cmp	r0, #1
   11918:	strne	r3, [r2, #4]
   1191c:	addne	r1, fp, #2
   11920:	b	118e4 <putchar_unlocked@plt+0x8bc>
   11924:	ldrb	r1, [r3, #5]
   11928:	cmp	r1, #0
   1192c:	beq	1193c <putchar_unlocked@plt+0x914>
   11930:	ldrb	r1, [sp, #111]	; 0x6f
   11934:	cmp	r1, #0
   11938:	bne	11828 <putchar_unlocked@plt+0x800>
   1193c:	ldr	r9, [r3]
   11940:	mov	fp, r5
   11944:	mov	r8, #0
   11948:	lsr	r9, r9, #1
   1194c:	add	r1, sp, #140	; 0x8c
   11950:	cmp	r9, r8
   11954:	streq	r2, [sp, #72]	; 0x48
   11958:	beq	119a4 <putchar_unlocked@plt+0x97c>
   1195c:	str	r1, [sp, #100]	; 0x64
   11960:	str	r2, [sp, #96]	; 0x60
   11964:	bl	10eb4 <__ctype_tolower_loc@plt>
   11968:	ldr	r1, [sp, #100]	; 0x64
   1196c:	ldr	r2, [pc, #1316]	; 11e98 <putchar_unlocked@plt+0xe70>
   11970:	ldrb	lr, [r5, r8, lsl #1]
   11974:	ldrb	r3, [r8, r1]
   11978:	add	ip, r2, r3, lsr #4
   1197c:	ldr	r2, [sp, #96]	; 0x60
   11980:	ldrb	ip, [ip, #264]	; 0x108
   11984:	ldr	r0, [r0]
   11988:	ldr	lr, [r0, lr, lsl #2]
   1198c:	cmp	lr, ip
   11990:	beq	119f8 <putchar_unlocked@plt+0x9d0>
   11994:	ldrd	r2, [sp, #32]
   11998:	adds	r2, r2, #1
   1199c:	adc	r3, r3, #0
   119a0:	strd	r2, [sp, #32]
   119a4:	ldr	r3, [pc, #1128]	; 11e14 <putchar_unlocked@plt+0xdec>
   119a8:	ldrb	r2, [r3, #6]
   119ac:	cmp	r2, #0
   119b0:	bne	11828 <putchar_unlocked@plt+0x800>
   119b4:	cmp	r9, r8
   119b8:	bne	11dbc <putchar_unlocked@plt+0xd94>
   119bc:	ldrb	r3, [r3, #8]
   119c0:	cmp	r3, #0
   119c4:	bne	11828 <putchar_unlocked@plt+0x800>
   119c8:	cmp	r7, #0
   119cc:	bne	11dc4 <putchar_unlocked@plt+0xd9c>
   119d0:	mov	r1, r7
   119d4:	mov	r0, r4
   119d8:	bl	120ec <putchar_unlocked@plt+0x10c4>
   119dc:	ldr	r3, [pc, #1072]	; 11e14 <putchar_unlocked@plt+0xdec>
   119e0:	ldrb	r0, [r3, #8]
   119e4:	cmp	r0, #0
   119e8:	bne	11828 <putchar_unlocked@plt+0x800>
   119ec:	mov	r2, #5
   119f0:	ldr	r1, [pc, #1188]	; 11e9c <putchar_unlocked@plt+0xe74>
   119f4:	b	11814 <putchar_unlocked@plt+0x7ec>
   119f8:	ldrb	ip, [fp, #1]
   119fc:	and	r3, r3, #15
   11a00:	add	fp, fp, #2
   11a04:	ldr	r0, [r0, ip, lsl #2]
   11a08:	ldr	ip, [pc, #1160]	; 11e98 <putchar_unlocked@plt+0xe70>
   11a0c:	add	r3, ip, r3
   11a10:	ldrb	r3, [r3, #264]	; 0x108
   11a14:	cmp	r0, r3
   11a18:	bne	11994 <putchar_unlocked@plt+0x96c>
   11a1c:	add	r8, r8, #1
   11a20:	b	11950 <putchar_unlocked@plt+0x928>
   11a24:	bl	13520 <putchar_unlocked@plt+0x24f8>
   11a28:	cmp	r0, #0
   11a2c:	beq	11690 <putchar_unlocked@plt+0x668>
   11a30:	cmp	r5, #0
   11a34:	bne	116a0 <putchar_unlocked@plt+0x678>
   11a38:	bl	10f08 <__errno_location@plt>
   11a3c:	ldr	r4, [r0]
   11a40:	b	11690 <putchar_unlocked@plt+0x668>
   11a44:	cmp	r9, #0
   11a48:	bne	11ad4 <putchar_unlocked@plt+0xaac>
   11a4c:	mov	r2, #5
   11a50:	ldr	r1, [pc, #1096]	; 11ea0 <putchar_unlocked@plt+0xe78>
   11a54:	mov	r0, r9
   11a58:	bl	10e18 <dcgettext@plt>
   11a5c:	ldr	r2, [sp, #52]	; 0x34
   11a60:	mov	r1, #3
   11a64:	mov	r4, r0
   11a68:	mov	r0, r9
   11a6c:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   11a70:	mov	r2, r4
   11a74:	mov	r1, r9
   11a78:	mov	r3, r0
   11a7c:	mov	r0, r9
   11a80:	bl	10e84 <error@plt>
   11a84:	ldr	r3, [sp, #72]	; 0x48
   11a88:	and	r9, r9, r3
   11a8c:	ands	r9, r9, #255	; 0xff
   11a90:	beq	11acc <putchar_unlocked@plt+0xaa4>
   11a94:	ldrd	r2, [sp, #24]
   11a98:	ldrd	r0, [sp, #32]
   11a9c:	orr	r2, r2, r0
   11aa0:	orr	r3, r3, r1
   11aa4:	orrs	r3, r2, r3
   11aa8:	movne	r9, #0
   11aac:	bne	11acc <putchar_unlocked@plt+0xaa4>
   11ab0:	ldr	r3, [pc, #860]	; 11e14 <putchar_unlocked@plt+0xdec>
   11ab4:	ldr	r2, [sp, #20]
   11ab8:	ldrb	r9, [r3, #9]
   11abc:	ldr	r3, [sp, #16]
   11ac0:	eor	r9, r9, #1
   11ac4:	orrs	r3, r3, r2
   11ac8:	orreq	r9, r9, #1
   11acc:	and	r9, r9, #1
   11ad0:	b	114e8 <putchar_unlocked@plt+0x4c0>
   11ad4:	ldr	r3, [pc, #824]	; 11e14 <putchar_unlocked@plt+0xdec>
   11ad8:	ldrb	r3, [r3, #6]
   11adc:	cmp	r3, #0
   11ae0:	bne	11a84 <putchar_unlocked@plt+0xa5c>
   11ae4:	ldrd	r2, [sp, #16]
   11ae8:	orrs	r3, r2, r3
   11aec:	beq	11b50 <putchar_unlocked@plt+0xb28>
   11af0:	ldrd	r0, [sp, #16]
   11af4:	mov	r3, #0
   11af8:	mvn	r2, #0
   11afc:	cmp	r1, r3
   11b00:	cmpeq	r0, r2
   11b04:	ldrls	r3, [sp, #16]
   11b08:	bls	11b20 <putchar_unlocked@plt+0xaf8>
   11b0c:	ldr	r2, [pc, #912]	; 11ea4 <putchar_unlocked@plt+0xe7c>
   11b10:	mov	r3, #0
   11b14:	bl	160d0 <putchar_unlocked@plt+0x50a8>
   11b18:	add	r3, r2, #999424	; 0xf4000
   11b1c:	add	r3, r3, #576	; 0x240
   11b20:	mov	r2, #5
   11b24:	str	r2, [sp]
   11b28:	ldr	r1, [pc, #888]	; 11ea8 <putchar_unlocked@plt+0xe80>
   11b2c:	ldr	r2, [pc, #888]	; 11eac <putchar_unlocked@plt+0xe84>
   11b30:	mov	r0, #0
   11b34:	bl	1101c <dcngettext@plt>
   11b38:	ldrd	r2, [sp, #16]
   11b3c:	mov	r1, #0
   11b40:	strd	r2, [sp]
   11b44:	mov	r2, r0
   11b48:	mov	r0, r1
   11b4c:	bl	10e84 <error@plt>
   11b50:	ldrd	r2, [sp, #24]
   11b54:	orrs	r3, r2, r3
   11b58:	beq	11bbc <putchar_unlocked@plt+0xb94>
   11b5c:	ldrd	r0, [sp, #24]
   11b60:	mov	r3, #0
   11b64:	mvn	r2, #0
   11b68:	cmp	r1, r3
   11b6c:	cmpeq	r0, r2
   11b70:	ldrls	r3, [sp, #24]
   11b74:	bls	11b8c <putchar_unlocked@plt+0xb64>
   11b78:	ldr	r2, [pc, #804]	; 11ea4 <putchar_unlocked@plt+0xe7c>
   11b7c:	mov	r3, #0
   11b80:	bl	160d0 <putchar_unlocked@plt+0x50a8>
   11b84:	add	r3, r2, #999424	; 0xf4000
   11b88:	add	r3, r3, #576	; 0x240
   11b8c:	mov	r2, #5
   11b90:	str	r2, [sp]
   11b94:	ldr	r1, [pc, #788]	; 11eb0 <putchar_unlocked@plt+0xe88>
   11b98:	ldr	r2, [pc, #788]	; 11eb4 <putchar_unlocked@plt+0xe8c>
   11b9c:	mov	r0, #0
   11ba0:	bl	1101c <dcngettext@plt>
   11ba4:	ldrd	r2, [sp, #24]
   11ba8:	mov	r1, #0
   11bac:	strd	r2, [sp]
   11bb0:	mov	r2, r0
   11bb4:	mov	r0, r1
   11bb8:	bl	10e84 <error@plt>
   11bbc:	ldrd	r2, [sp, #32]
   11bc0:	orrs	r3, r2, r3
   11bc4:	beq	11c28 <putchar_unlocked@plt+0xc00>
   11bc8:	ldrd	r0, [sp, #32]
   11bcc:	mov	r3, #0
   11bd0:	mvn	r2, #0
   11bd4:	cmp	r1, r3
   11bd8:	cmpeq	r0, r2
   11bdc:	ldrls	r3, [sp, #32]
   11be0:	bls	11bf8 <putchar_unlocked@plt+0xbd0>
   11be4:	ldr	r2, [pc, #696]	; 11ea4 <putchar_unlocked@plt+0xe7c>
   11be8:	mov	r3, #0
   11bec:	bl	160d0 <putchar_unlocked@plt+0x50a8>
   11bf0:	add	r3, r2, #999424	; 0xf4000
   11bf4:	add	r3, r3, #576	; 0x240
   11bf8:	mov	r2, #5
   11bfc:	str	r2, [sp]
   11c00:	ldr	r1, [pc, #688]	; 11eb8 <putchar_unlocked@plt+0xe90>
   11c04:	ldr	r2, [pc, #688]	; 11ebc <putchar_unlocked@plt+0xe94>
   11c08:	mov	r0, #0
   11c0c:	bl	1101c <dcngettext@plt>
   11c10:	ldrd	r2, [sp, #32]
   11c14:	mov	r1, #0
   11c18:	strd	r2, [sp]
   11c1c:	mov	r2, r0
   11c20:	mov	r0, r1
   11c24:	bl	10e84 <error@plt>
   11c28:	ldr	r3, [pc, #484]	; 11e14 <putchar_unlocked@plt+0xdec>
   11c2c:	ldrb	r4, [r3, #5]
   11c30:	ldr	r3, [sp, #72]	; 0x48
   11c34:	eor	r4, r4, #1
   11c38:	orr	r4, r3, r4
   11c3c:	ands	r4, r4, #255	; 0xff
   11c40:	bne	11a84 <putchar_unlocked@plt+0xa5c>
   11c44:	mov	r2, #5
   11c48:	ldr	r1, [pc, #624]	; 11ec0 <putchar_unlocked@plt+0xe98>
   11c4c:	mov	r0, r4
   11c50:	bl	10e18 <dcgettext@plt>
   11c54:	ldr	r2, [sp, #52]	; 0x34
   11c58:	mov	r1, #3
   11c5c:	mov	r5, r0
   11c60:	mov	r0, r4
   11c64:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   11c68:	mov	r2, r5
   11c6c:	mov	r1, r4
   11c70:	mov	r3, r0
   11c74:	mov	r0, r4
   11c78:	b	11a80 <putchar_unlocked@plt+0xa58>
   11c7c:	add	r8, sp, #120	; 0x78
   11c80:	add	r2, sp, #140	; 0x8c
   11c84:	mov	r1, r8
   11c88:	mov	r0, r4
   11c8c:	bl	12178 <putchar_unlocked@plt+0x1150>
   11c90:	cmp	r0, #0
   11c94:	beq	11d84 <putchar_unlocked@plt+0xd5c>
   11c98:	ldr	r3, [pc, #392]	; 11e28 <putchar_unlocked@plt+0xe00>
   11c9c:	ldrb	r7, [r3]
   11ca0:	cmp	r7, #10
   11ca4:	movne	r5, sl
   11ca8:	bne	11ce8 <putchar_unlocked@plt+0xcc0>
   11cac:	mov	r1, #92	; 0x5c
   11cb0:	mov	r0, r4
   11cb4:	bl	10efc <strchr@plt>
   11cb8:	cmp	r0, #0
   11cbc:	bne	11d8c <putchar_unlocked@plt+0xd64>
   11cc0:	mov	r1, r7
   11cc4:	mov	r0, r4
   11cc8:	bl	10efc <strchr@plt>
   11ccc:	cmp	r0, #0
   11cd0:	bne	11d8c <putchar_unlocked@plt+0xd64>
   11cd4:	mov	r1, #13
   11cd8:	mov	r0, r4
   11cdc:	bl	10efc <strchr@plt>
   11ce0:	adds	r5, r0, #0
   11ce4:	movne	r5, #1
   11ce8:	cmp	r5, #0
   11cec:	beq	11cf8 <putchar_unlocked@plt+0xcd0>
   11cf0:	mov	r0, #92	; 0x5c
   11cf4:	bl	11028 <putchar_unlocked@plt>
   11cf8:	ldr	r3, [sp, #48]	; 0x30
   11cfc:	cmp	r3, #0
   11d00:	beq	11d38 <putchar_unlocked@plt+0xd10>
   11d04:	ldr	r6, [pc, #256]	; 11e0c <putchar_unlocked@plt+0xde4>
   11d08:	ldr	r0, [pc, #372]	; 11e84 <putchar_unlocked@plt+0xe5c>
   11d0c:	ldr	r1, [r6]
   11d10:	bl	10d94 <fputs_unlocked@plt>
   11d14:	ldr	r1, [r6]
   11d18:	ldr	r0, [pc, #420]	; 11ec4 <putchar_unlocked@plt+0xe9c>
   11d1c:	bl	10d94 <fputs_unlocked@plt>
   11d20:	mov	r1, r5
   11d24:	mov	r0, r4
   11d28:	bl	120ec <putchar_unlocked@plt+0x10c4>
   11d2c:	ldr	r1, [r6]
   11d30:	ldr	r0, [pc, #400]	; 11ec8 <putchar_unlocked@plt+0xea0>
   11d34:	bl	10d94 <fputs_unlocked@plt>
   11d38:	ldr	r9, [pc, #212]	; 11e14 <putchar_unlocked@plt+0xdec>
   11d3c:	mov	r6, #0
   11d40:	mov	fp, #1
   11d44:	ldr	r3, [r9]
   11d48:	cmp	r6, r3, lsr #1
   11d4c:	bcc	11d94 <putchar_unlocked@plt+0xd6c>
   11d50:	ldr	r3, [sp, #48]	; 0x30
   11d54:	cmp	r3, #0
   11d58:	bne	11d78 <putchar_unlocked@plt+0xd50>
   11d5c:	mov	r0, #32
   11d60:	bl	11028 <putchar_unlocked@plt>
   11d64:	ldr	r0, [sp, #92]	; 0x5c
   11d68:	bl	11028 <putchar_unlocked@plt>
   11d6c:	mov	r1, r5
   11d70:	mov	r0, r4
   11d74:	bl	120ec <putchar_unlocked@plt+0x10c4>
   11d78:	mov	r0, r7
   11d7c:	bl	11028 <putchar_unlocked@plt>
   11d80:	ldr	r0, [sp, #44]	; 0x2c
   11d84:	str	r0, [sp, #44]	; 0x2c
   11d88:	b	11370 <putchar_unlocked@plt+0x348>
   11d8c:	mov	r5, #1
   11d90:	b	11ce8 <putchar_unlocked@plt+0xcc0>
   11d94:	ldrb	r2, [r8, r6]
   11d98:	ldr	r1, [pc, #300]	; 11ecc <putchar_unlocked@plt+0xea4>
   11d9c:	mov	r0, fp
   11da0:	bl	10f38 <__printf_chk@plt>
   11da4:	add	r6, r6, #1
   11da8:	b	11d44 <putchar_unlocked@plt+0xd1c>
   11dac:	mov	r1, r7
   11db0:	mov	r0, r4
   11db4:	bl	120ec <putchar_unlocked@plt+0x10c4>
   11db8:	b	11de0 <putchar_unlocked@plt+0xdb8>
   11dbc:	cmp	r7, #0
   11dc0:	beq	11dac <putchar_unlocked@plt+0xd84>
   11dc4:	mov	r0, #92	; 0x5c
   11dc8:	bl	11028 <putchar_unlocked@plt>
   11dcc:	ldr	r1, [sp, #76]	; 0x4c
   11dd0:	mov	r0, r4
   11dd4:	bl	120ec <putchar_unlocked@plt+0x10c4>
   11dd8:	cmp	r9, r8
   11ddc:	beq	119dc <putchar_unlocked@plt+0x9b4>
   11de0:	mov	r2, #5
   11de4:	ldr	r1, [pc, #228]	; 11ed0 <putchar_unlocked@plt+0xea8>
   11de8:	b	11810 <putchar_unlocked@plt+0x7e8>
   11dec:	ldr	r3, [sp, #44]	; 0x2c
   11df0:	eor	r0, r3, #1
   11df4:	uxtb	r0, r0
   11df8:	add	sp, sp, #164	; 0xa4
   11dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e00:			; <UNDEFINED> instruction: 0x000167b0
   11e04:	andeq	r6, r1, ip, ror sl
   11e08:	ldrdeq	r6, [r1], -r9
   11e0c:	andeq	r8, r2, ip, ror #2
   11e10:	andeq	r2, r1, r0, lsl #12
   11e14:	andeq	r8, r2, r4, ror r1
   11e18:	andeq	r0, r0, r3, lsl #2
   11e1c:	andeq	r6, r1, r4, lsl #6
   11e20:			; <UNDEFINED> instruction: 0x00016abd
   11e24:	andeq	r6, r1, r3, asr #21
   11e28:	andeq	r8, r2, r0, lsl #2
   11e2c:	andeq	r6, r1, r6, ror #21
   11e30:	andeq	r0, r0, r1, lsl #2
   11e34:	muleq	r1, r4, sl
   11e38:	andeq	r6, r1, r1, lsr #21
   11e3c:	ldrdeq	r6, [r1], -r5
   11e40:	andeq	r6, r1, lr, lsr #21
   11e44:	andeq	r6, r1, sp, ror #7
   11e48:	andeq	r8, r2, r8, lsl #2
   11e4c:	andeq	r6, r1, r2, lsr #22
   11e50:	andeq	r6, r1, fp, asr fp
   11e54:	andeq	r6, r1, r4, lsr #23
   11e58:	andeq	r6, r1, ip, ror #23
   11e5c:	andeq	r6, r1, ip, lsr #24
   11e60:	andeq	r6, r1, sl, ror #24
   11e64:	andeq	r6, r1, r9, lsr #25
   11e68:	andeq	r8, r2, r8, asr r1
   11e6c:	andeq	r7, r1, r7, lsr #32
   11e70:	andeq	r8, r2, r8, ror #2
   11e74:	andeq	r6, r1, r9, ror #25
   11e78:	strdeq	r6, [r1], -r8
   11e7c:	andeq	r6, r1, r8, ror #7
   11e80:	andeq	r6, r1, r2, lsr #31
   11e84:	andeq	r6, r1, r3, ror #8
   11e88:	andeq	r6, r1, r4, lsl sp
   11e8c:	andeq	r6, r1, r2, ror #26
   11e90:	andeq	r6, r1, r4, asr #26
   11e94:	andeq	r7, r1, r0, asr r3
   11e98:	andeq	r6, r1, ip, asr #5
   11e9c:	andeq	r6, r1, pc, asr sp
   11ea0:	andeq	r6, r1, r1, ror sp
   11ea4:	andeq	r4, pc, r0, asr #4
   11ea8:	andeq	r6, r1, sp, asr #27
   11eac:	andeq	r6, r1, r0, lsr #27
   11eb0:	andeq	r6, r1, r5, lsr #28
   11eb4:	strdeq	r6, [r1], -r8
   11eb8:	andeq	r6, r1, r0, lsl #29
   11ebc:	andeq	r6, r1, r1, asr lr
   11ec0:	andeq	r6, r1, lr, lsr #29
   11ec4:	andeq	r6, r1, r7, asr #29
   11ec8:	andeq	r6, r1, sl, asr #29
   11ecc:	andeq	r6, r1, pc, asr #29
   11ed0:	andeq	r6, r1, r8, asr sp
   11ed4:	mov	fp, #0
   11ed8:	mov	lr, #0
   11edc:	pop	{r1}		; (ldr r1, [sp], #4)
   11ee0:	mov	r2, sp
   11ee4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ee8:	push	{r0}		; (str r0, [sp, #-4]!)
   11eec:	ldr	ip, [pc, #16]	; 11f04 <putchar_unlocked@plt+0xedc>
   11ef0:	push	{ip}		; (str ip, [sp, #-4]!)
   11ef4:	ldr	r0, [pc, #12]	; 11f08 <putchar_unlocked@plt+0xee0>
   11ef8:	ldr	r3, [pc, #12]	; 11f0c <putchar_unlocked@plt+0xee4>
   11efc:	bl	10e9c <__libc_start_main@plt>
   11f00:	bl	10ff8 <abort@plt>
   11f04:	andeq	r6, r1, r4, lsr #5
   11f08:	andeq	r1, r1, r4, lsr r0
   11f0c:	andeq	r6, r1, r4, asr #4
   11f10:	ldr	r3, [pc, #20]	; 11f2c <putchar_unlocked@plt+0xf04>
   11f14:	ldr	r2, [pc, #20]	; 11f30 <putchar_unlocked@plt+0xf08>
   11f18:	add	r3, pc, r3
   11f1c:	ldr	r2, [r3, r2]
   11f20:	cmp	r2, #0
   11f24:	bxeq	lr
   11f28:	b	10ec0 <__gmon_start__@plt>
   11f2c:	andeq	r6, r1, r0, ror #1
   11f30:	strdeq	r0, [r0], -r4
   11f34:	ldr	r3, [pc, #28]	; 11f58 <putchar_unlocked@plt+0xf30>
   11f38:	ldr	r0, [pc, #28]	; 11f5c <putchar_unlocked@plt+0xf34>
   11f3c:	sub	r3, r3, r0
   11f40:	cmp	r3, #6
   11f44:	bxls	lr
   11f48:	ldr	r3, [pc, #16]	; 11f60 <putchar_unlocked@plt+0xf38>
   11f4c:	cmp	r3, #0
   11f50:	bxeq	lr
   11f54:	bx	r3
   11f58:	andeq	r8, r2, r3, asr r1
   11f5c:	andeq	r8, r2, r0, asr r1
   11f60:	andeq	r0, r0, r0
   11f64:	ldr	r1, [pc, #36]	; 11f90 <putchar_unlocked@plt+0xf68>
   11f68:	ldr	r0, [pc, #36]	; 11f94 <putchar_unlocked@plt+0xf6c>
   11f6c:	sub	r1, r1, r0
   11f70:	asr	r1, r1, #2
   11f74:	add	r1, r1, r1, lsr #31
   11f78:	asrs	r1, r1, #1
   11f7c:	bxeq	lr
   11f80:	ldr	r3, [pc, #16]	; 11f98 <putchar_unlocked@plt+0xf70>
   11f84:	cmp	r3, #0
   11f88:	bxeq	lr
   11f8c:	bx	r3
   11f90:	andeq	r8, r2, r0, asr r1
   11f94:	andeq	r8, r2, r0, asr r1
   11f98:	andeq	r0, r0, r0
   11f9c:	push	{r4, lr}
   11fa0:	ldr	r4, [pc, #24]	; 11fc0 <putchar_unlocked@plt+0xf98>
   11fa4:	ldrb	r3, [r4]
   11fa8:	cmp	r3, #0
   11fac:	popne	{r4, pc}
   11fb0:	bl	11f34 <putchar_unlocked@plt+0xf0c>
   11fb4:	mov	r3, #1
   11fb8:	strb	r3, [r4]
   11fbc:	pop	{r4, pc}
   11fc0:	andeq	r8, r2, r0, ror r1
   11fc4:	ldr	r0, [pc, #40]	; 11ff4 <putchar_unlocked@plt+0xfcc>
   11fc8:	ldr	r3, [r0]
   11fcc:	cmp	r3, #0
   11fd0:	bne	11fd8 <putchar_unlocked@plt+0xfb0>
   11fd4:	b	11f64 <putchar_unlocked@plt+0xf3c>
   11fd8:	ldr	r3, [pc, #24]	; 11ff8 <putchar_unlocked@plt+0xfd0>
   11fdc:	cmp	r3, #0
   11fe0:	beq	11fd4 <putchar_unlocked@plt+0xfac>
   11fe4:	push	{r4, lr}
   11fe8:	blx	r3
   11fec:	pop	{r4, lr}
   11ff0:	b	11f64 <putchar_unlocked@plt+0xf3c>
   11ff4:	andeq	r7, r2, r4, lsl pc
   11ff8:	andeq	r0, r0, r0
   11ffc:	push	{r4, r5, lr}
   12000:	mov	r3, r0
   12004:	mov	r2, #0
   12008:	sub	lr, r1, #1
   1200c:	mov	r4, #10
   12010:	mov	r5, #13
   12014:	cmp	r2, r1
   12018:	bcc	12030 <putchar_unlocked@plt+0x1008>
   1201c:	add	r1, r0, r1
   12020:	cmp	r3, r1
   12024:	movcc	r2, #0
   12028:	strbcc	r2, [r3]
   1202c:	pop	{r4, r5, pc}
   12030:	ldrb	ip, [r0, r2]
   12034:	cmp	ip, #0
   12038:	beq	1208c <putchar_unlocked@plt+0x1064>
   1203c:	cmp	ip, #92	; 0x5c
   12040:	bne	1206c <putchar_unlocked@plt+0x1044>
   12044:	cmp	r2, lr
   12048:	beq	1208c <putchar_unlocked@plt+0x1064>
   1204c:	add	r2, r2, #1
   12050:	ldrb	ip, [r0, r2]
   12054:	cmp	ip, #110	; 0x6e
   12058:	beq	12074 <putchar_unlocked@plt+0x104c>
   1205c:	cmp	ip, #114	; 0x72
   12060:	beq	12084 <putchar_unlocked@plt+0x105c>
   12064:	cmp	ip, #92	; 0x5c
   12068:	bne	1208c <putchar_unlocked@plt+0x1064>
   1206c:	strb	ip, [r3]
   12070:	b	12078 <putchar_unlocked@plt+0x1050>
   12074:	strb	r4, [r3]
   12078:	add	r2, r2, #1
   1207c:	add	r3, r3, #1
   12080:	b	12014 <putchar_unlocked@plt+0xfec>
   12084:	strb	r5, [r3]
   12088:	b	12078 <putchar_unlocked@plt+0x1050>
   1208c:	mov	r0, #0
   12090:	pop	{r4, r5, pc}
   12094:	ldr	r3, [pc, #76]	; 120e8 <putchar_unlocked@plt+0x10c0>
   12098:	push	{r4, r5, r6, lr}
   1209c:	mov	r4, r0
   120a0:	ldr	r5, [r3]
   120a4:	add	r5, r0, r5
   120a8:	cmp	r4, r5
   120ac:	mov	r6, r4
   120b0:	bne	120c4 <putchar_unlocked@plt+0x109c>
   120b4:	ldrb	r0, [r4]
   120b8:	clz	r0, r0
   120bc:	lsr	r0, r0, #5
   120c0:	pop	{r4, r5, r6, pc}
   120c4:	bl	10ed8 <__ctype_b_loc@plt>
   120c8:	ldrb	r3, [r6]
   120cc:	add	r4, r4, #1
   120d0:	lsl	r3, r3, #1
   120d4:	ldr	r2, [r0]
   120d8:	ldrh	r0, [r2, r3]
   120dc:	ands	r0, r0, #4096	; 0x1000
   120e0:	bne	120a8 <putchar_unlocked@plt+0x1080>
   120e4:	pop	{r4, r5, r6, pc}
   120e8:	andeq	r8, r2, r4, ror r1
   120ec:	cmp	r1, #0
   120f0:	beq	12118 <putchar_unlocked@plt+0x10f0>
   120f4:	push	{r4, r5, r6, r7, r8, lr}
   120f8:	sub	r4, r0, #1
   120fc:	ldr	r5, [pc, #100]	; 12168 <putchar_unlocked@plt+0x1140>
   12100:	ldr	r6, [pc, #100]	; 1216c <putchar_unlocked@plt+0x1144>
   12104:	ldr	r7, [pc, #100]	; 12170 <putchar_unlocked@plt+0x1148>
   12108:	ldrb	r0, [r4, #1]!
   1210c:	cmp	r0, #0
   12110:	bne	12124 <putchar_unlocked@plt+0x10fc>
   12114:	pop	{r4, r5, r6, r7, r8, pc}
   12118:	ldr	r3, [pc, #72]	; 12168 <putchar_unlocked@plt+0x1140>
   1211c:	ldr	r1, [r3]
   12120:	b	10d94 <fputs_unlocked@plt>
   12124:	cmp	r0, #13
   12128:	beq	1214c <putchar_unlocked@plt+0x1124>
   1212c:	cmp	r0, #92	; 0x5c
   12130:	beq	1215c <putchar_unlocked@plt+0x1134>
   12134:	cmp	r0, #10
   12138:	ldreq	r1, [r5]
   1213c:	ldreq	r0, [pc, #48]	; 12174 <putchar_unlocked@plt+0x114c>
   12140:	beq	12154 <putchar_unlocked@plt+0x112c>
   12144:	bl	11028 <putchar_unlocked@plt>
   12148:	b	12108 <putchar_unlocked@plt+0x10e0>
   1214c:	ldr	r1, [r5]
   12150:	mov	r0, r6
   12154:	bl	10d94 <fputs_unlocked@plt>
   12158:	b	12108 <putchar_unlocked@plt+0x10e0>
   1215c:	ldr	r1, [r5]
   12160:	mov	r0, r7
   12164:	b	12154 <putchar_unlocked@plt+0x112c>
   12168:	andeq	r8, r2, ip, ror #2
   1216c:	andeq	r6, r1, r7, ror #7
   12170:	andeq	r6, r1, sl, ror #7
   12174:	andeq	r6, r1, r4, ror #7
   12178:	push	{r4, r5, r6, r7, r8, lr}
   1217c:	mov	r4, r1
   12180:	ldr	r1, [pc, #264]	; 12290 <putchar_unlocked@plt+0x1268>
   12184:	mov	r7, r2
   12188:	mov	r6, r0
   1218c:	bl	10dac <strcmp@plt>
   12190:	mov	r3, #0
   12194:	strb	r3, [r7]
   12198:	subs	r8, r0, #0
   1219c:	bne	12200 <putchar_unlocked@plt+0x11d8>
   121a0:	ldr	r3, [pc, #236]	; 12294 <putchar_unlocked@plt+0x126c>
   121a4:	mov	r2, #1
   121a8:	strb	r2, [r3, #4]
   121ac:	ldr	r3, [pc, #228]	; 12298 <putchar_unlocked@plt+0x1270>
   121b0:	ldr	r5, [r3]
   121b4:	mov	r1, #2
   121b8:	mov	r0, r5
   121bc:	bl	134f0 <putchar_unlocked@plt+0x24c8>
   121c0:	mov	r1, r4
   121c4:	mov	r0, r5
   121c8:	bl	126e4 <putchar_unlocked@plt+0x16bc>
   121cc:	subs	r4, r0, #0
   121d0:	beq	121dc <putchar_unlocked@plt+0x11b4>
   121d4:	bl	10f08 <__errno_location@plt>
   121d8:	ldr	r4, [r0]
   121dc:	cmp	r8, #0
   121e0:	mov	r0, r5
   121e4:	bne	12270 <putchar_unlocked@plt+0x1248>
   121e8:	bl	10fa4 <clearerr_unlocked@plt>
   121ec:	cmp	r4, #0
   121f0:	moveq	r4, #1
   121f4:	bne	12244 <putchar_unlocked@plt+0x121c>
   121f8:	mov	r0, r4
   121fc:	pop	{r4, r5, r6, r7, r8, pc}
   12200:	ldr	r1, [pc, #148]	; 1229c <putchar_unlocked@plt+0x1274>
   12204:	mov	r0, r6
   12208:	bl	13618 <putchar_unlocked@plt+0x25f0>
   1220c:	subs	r5, r0, #0
   12210:	bne	121b4 <putchar_unlocked@plt+0x118c>
   12214:	ldr	r3, [pc, #120]	; 12294 <putchar_unlocked@plt+0x126c>
   12218:	ldrb	r4, [r3, #5]
   1221c:	cmp	r4, #0
   12220:	beq	1223c <putchar_unlocked@plt+0x1214>
   12224:	bl	10f08 <__errno_location@plt>
   12228:	ldr	r3, [r0]
   1222c:	cmp	r3, #2
   12230:	moveq	r3, #1
   12234:	strbeq	r3, [r7]
   12238:	beq	121f8 <putchar_unlocked@plt+0x11d0>
   1223c:	bl	10f08 <__errno_location@plt>
   12240:	ldr	r4, [r0]
   12244:	mov	r2, r6
   12248:	mov	r1, #3
   1224c:	mov	r0, #0
   12250:	bl	14c84 <putchar_unlocked@plt+0x3c5c>
   12254:	mov	r1, r4
   12258:	ldr	r2, [pc, #64]	; 122a0 <putchar_unlocked@plt+0x1278>
   1225c:	mov	r4, #0
   12260:	mov	r3, r0
   12264:	mov	r0, #0
   12268:	bl	10e84 <error@plt>
   1226c:	b	121f8 <putchar_unlocked@plt+0x11d0>
   12270:	bl	13520 <putchar_unlocked@plt+0x24f8>
   12274:	cmp	r0, #0
   12278:	beq	121ec <putchar_unlocked@plt+0x11c4>
   1227c:	cmp	r4, #0
   12280:	bne	12244 <putchar_unlocked@plt+0x121c>
   12284:	bl	10f08 <__errno_location@plt>
   12288:	ldr	r4, [r0]
   1228c:	b	121ec <putchar_unlocked@plt+0x11c4>
   12290:	andeq	r7, r1, r7, lsr #32
   12294:	andeq	r8, r2, r4, ror r1
   12298:	andeq	r8, r2, r8, ror #2
   1229c:	andeq	r6, r1, r8, ror #7
   122a0:	andeq	r6, r1, r2, lsr #31
   122a4:	subs	r4, r0, #0
   122a8:	push	{r7, lr}
   122ac:	sub	sp, sp, #56	; 0x38
   122b0:	ldr	r5, [pc, #688]	; 12568 <putchar_unlocked@plt+0x1540>
   122b4:	beq	122ec <putchar_unlocked@plt+0x12c4>
   122b8:	ldr	r3, [pc, #684]	; 1256c <putchar_unlocked@plt+0x1544>
   122bc:	mov	r2, #5
   122c0:	ldr	r1, [pc, #680]	; 12570 <putchar_unlocked@plt+0x1548>
   122c4:	mov	r0, #0
   122c8:	ldr	r6, [r3]
   122cc:	bl	10e18 <dcgettext@plt>
   122d0:	ldr	r3, [r5]
   122d4:	mov	r1, #1
   122d8:	mov	r2, r0
   122dc:	mov	r0, r6
   122e0:	bl	10f50 <__fprintf_chk@plt>
   122e4:	mov	r0, r4
   122e8:	bl	10ee4 <exit@plt>
   122ec:	mov	r2, #5
   122f0:	ldr	r1, [pc, #636]	; 12574 <putchar_unlocked@plt+0x154c>
   122f4:	bl	10e18 <dcgettext@plt>
   122f8:	ldr	r2, [r5]
   122fc:	ldr	r5, [pc, #628]	; 12578 <putchar_unlocked@plt+0x1550>
   12300:	ldr	r8, [pc, #628]	; 1257c <putchar_unlocked@plt+0x1554>
   12304:	mov	r6, r4
   12308:	mov	r1, r0
   1230c:	mov	r0, #1
   12310:	bl	10f38 <__printf_chk@plt>
   12314:	mov	r2, #5
   12318:	ldr	r1, [pc, #608]	; 12580 <putchar_unlocked@plt+0x1558>
   1231c:	mov	r0, r4
   12320:	bl	10e18 <dcgettext@plt>
   12324:	mov	r3, #128	; 0x80
   12328:	ldr	r2, [pc, #596]	; 12584 <putchar_unlocked@plt+0x155c>
   1232c:	mov	r1, r0
   12330:	mov	r0, #1
   12334:	bl	10f38 <__printf_chk@plt>
   12338:	mov	r2, #5
   1233c:	ldr	r1, [pc, #580]	; 12588 <putchar_unlocked@plt+0x1560>
   12340:	mov	r0, r4
   12344:	bl	10e18 <dcgettext@plt>
   12348:	ldr	r1, [r5]
   1234c:	bl	10d94 <fputs_unlocked@plt>
   12350:	mov	r2, #5
   12354:	ldr	r1, [pc, #560]	; 1258c <putchar_unlocked@plt+0x1564>
   12358:	mov	r0, r4
   1235c:	bl	10e18 <dcgettext@plt>
   12360:	ldr	r1, [r5]
   12364:	bl	10d94 <fputs_unlocked@plt>
   12368:	mov	r2, #5
   1236c:	ldr	r1, [pc, #540]	; 12590 <putchar_unlocked@plt+0x1568>
   12370:	mov	r0, r4
   12374:	bl	10e18 <dcgettext@plt>
   12378:	ldr	r1, [r5]
   1237c:	bl	10d94 <fputs_unlocked@plt>
   12380:	mov	r2, #5
   12384:	ldr	r1, [pc, #520]	; 12594 <putchar_unlocked@plt+0x156c>
   12388:	mov	r0, r4
   1238c:	bl	10e18 <dcgettext@plt>
   12390:	ldr	r1, [r5]
   12394:	bl	10d94 <fputs_unlocked@plt>
   12398:	mov	r2, #5
   1239c:	ldr	r1, [pc, #500]	; 12598 <putchar_unlocked@plt+0x1570>
   123a0:	mov	r0, r4
   123a4:	bl	10e18 <dcgettext@plt>
   123a8:	ldr	r1, [r5]
   123ac:	bl	10d94 <fputs_unlocked@plt>
   123b0:	mov	r2, #5
   123b4:	ldr	r1, [pc, #480]	; 1259c <putchar_unlocked@plt+0x1574>
   123b8:	mov	r0, r4
   123bc:	bl	10e18 <dcgettext@plt>
   123c0:	ldr	r1, [r5]
   123c4:	bl	10d94 <fputs_unlocked@plt>
   123c8:	mov	r2, #5
   123cc:	ldr	r1, [pc, #460]	; 125a0 <putchar_unlocked@plt+0x1578>
   123d0:	mov	r0, r4
   123d4:	bl	10e18 <dcgettext@plt>
   123d8:	ldr	r1, [r5]
   123dc:	bl	10d94 <fputs_unlocked@plt>
   123e0:	mov	r2, #5
   123e4:	ldr	r1, [pc, #440]	; 125a4 <putchar_unlocked@plt+0x157c>
   123e8:	mov	r0, r4
   123ec:	bl	10e18 <dcgettext@plt>
   123f0:	ldr	r1, [r5]
   123f4:	bl	10d94 <fputs_unlocked@plt>
   123f8:	mov	r2, #5
   123fc:	ldr	r1, [pc, #420]	; 125a8 <putchar_unlocked@plt+0x1580>
   12400:	mov	r0, r4
   12404:	bl	10e18 <dcgettext@plt>
   12408:	ldr	r1, [r5]
   1240c:	bl	10d94 <fputs_unlocked@plt>
   12410:	mov	r2, #5
   12414:	ldr	r1, [pc, #400]	; 125ac <putchar_unlocked@plt+0x1584>
   12418:	mov	r0, r4
   1241c:	bl	10e18 <dcgettext@plt>
   12420:	ldr	r2, [pc, #392]	; 125b0 <putchar_unlocked@plt+0x1588>
   12424:	mov	r1, r0
   12428:	mov	r0, #1
   1242c:	bl	10f38 <__printf_chk@plt>
   12430:	mov	r2, #5
   12434:	ldr	r1, [pc, #376]	; 125b4 <putchar_unlocked@plt+0x158c>
   12438:	mov	r0, r4
   1243c:	bl	10e18 <dcgettext@plt>
   12440:	ldr	r1, [r5]
   12444:	bl	10d94 <fputs_unlocked@plt>
   12448:	ldr	lr, [pc, #360]	; 125b8 <putchar_unlocked@plt+0x1590>
   1244c:	mov	ip, sp
   12450:	ldm	lr!, {r0, r1, r2, r3}
   12454:	stmia	ip!, {r0, r1, r2, r3}
   12458:	ldm	lr!, {r0, r1, r2, r3}
   1245c:	stmia	ip!, {r0, r1, r2, r3}
   12460:	ldm	lr!, {r0, r1, r2, r3}
   12464:	stmia	ip!, {r0, r1, r2, r3}
   12468:	ldm	lr, {r0, r1}
   1246c:	stm	ip, {r0, r1}
   12470:	ldr	r1, [sp, r6]
   12474:	add	r7, sp, r6
   12478:	cmp	r1, #0
   1247c:	bne	12520 <putchar_unlocked@plt+0x14f8>
   12480:	ldr	r6, [r7, #4]
   12484:	ldr	r7, [pc, #240]	; 1257c <putchar_unlocked@plt+0x1554>
   12488:	cmp	r6, #0
   1248c:	mov	r2, #5
   12490:	ldr	r1, [pc, #292]	; 125bc <putchar_unlocked@plt+0x1594>
   12494:	mov	r0, #0
   12498:	moveq	r6, r7
   1249c:	bl	10e18 <dcgettext@plt>
   124a0:	ldr	r3, [pc, #280]	; 125c0 <putchar_unlocked@plt+0x1598>
   124a4:	ldr	r2, [pc, #280]	; 125c4 <putchar_unlocked@plt+0x159c>
   124a8:	mov	r1, r0
   124ac:	mov	r0, #1
   124b0:	bl	10f38 <__printf_chk@plt>
   124b4:	mov	r1, #0
   124b8:	mov	r0, #5
   124bc:	bl	10f80 <setlocale@plt>
   124c0:	cmp	r0, #0
   124c4:	bne	12538 <putchar_unlocked@plt+0x1510>
   124c8:	mov	r2, #5
   124cc:	ldr	r1, [pc, #244]	; 125c8 <putchar_unlocked@plt+0x15a0>
   124d0:	mov	r0, #0
   124d4:	bl	10e18 <dcgettext@plt>
   124d8:	ldr	r3, [pc, #156]	; 1257c <putchar_unlocked@plt+0x1554>
   124dc:	ldr	r2, [pc, #220]	; 125c0 <putchar_unlocked@plt+0x1598>
   124e0:	mov	r1, r0
   124e4:	mov	r0, #1
   124e8:	bl	10f38 <__printf_chk@plt>
   124ec:	mov	r2, #5
   124f0:	ldr	r1, [pc, #212]	; 125cc <putchar_unlocked@plt+0x15a4>
   124f4:	mov	r0, #0
   124f8:	bl	10e18 <dcgettext@plt>
   124fc:	ldr	r2, [pc, #204]	; 125d0 <putchar_unlocked@plt+0x15a8>
   12500:	cmp	r6, r7
   12504:	ldr	r3, [pc, #200]	; 125d4 <putchar_unlocked@plt+0x15ac>
   12508:	moveq	r3, r2
   1250c:	mov	r2, r6
   12510:	mov	r1, r0
   12514:	mov	r0, #1
   12518:	bl	10f38 <__printf_chk@plt>
   1251c:	b	122e4 <putchar_unlocked@plt+0x12bc>
   12520:	mov	r0, r8
   12524:	bl	10dac <strcmp@plt>
   12528:	add	r6, r6, #8
   1252c:	cmp	r0, #0
   12530:	bne	12470 <putchar_unlocked@plt+0x1448>
   12534:	b	12480 <putchar_unlocked@plt+0x1458>
   12538:	mov	r2, #3
   1253c:	ldr	r1, [pc, #148]	; 125d8 <putchar_unlocked@plt+0x15b0>
   12540:	bl	10fec <strncmp@plt>
   12544:	cmp	r0, #0
   12548:	beq	124c8 <putchar_unlocked@plt+0x14a0>
   1254c:	mov	r2, #5
   12550:	ldr	r1, [pc, #132]	; 125dc <putchar_unlocked@plt+0x15b4>
   12554:	mov	r0, #0
   12558:	bl	10e18 <dcgettext@plt>
   1255c:	ldr	r1, [r5]
   12560:	bl	10d94 <fputs_unlocked@plt>
   12564:	b	124c8 <putchar_unlocked@plt+0x14a0>
   12568:	andeq	r8, r2, ip, lsl #3
   1256c:	andeq	r8, r2, r0, ror #2
   12570:	strdeq	r6, [r1], -r4
   12574:	andeq	r6, r1, fp, lsl r4
   12578:	andeq	r8, r2, ip, ror #2
   1257c:	andeq	r6, r1, sp, ror #7
   12580:	andeq	r6, r1, ip, lsr r4
   12584:	andeq	r6, r1, r3, ror #8
   12588:	andeq	r6, r1, r7, ror #8
   1258c:	muleq	r1, pc, r4	; <UNPREDICTABLE>
   12590:	andeq	r6, r1, ip, asr #9
   12594:	andeq	r6, r1, r2, lsl r5
   12598:	andeq	r6, r1, r7, asr #10
   1259c:	andeq	r6, r1, ip, ror r5
   125a0:	strdeq	r6, [r1], -sl
   125a4:			; <UNDEFINED> instruction: 0x000167b1
   125a8:	ldrdeq	r6, [r1], -lr
   125ac:	andeq	r6, r1, r4, lsl r8
   125b0:	andeq	r6, r1, r0, asr #16
   125b4:	andeq	r6, r1, r9, asr #16
   125b8:	andeq	r6, r1, ip, asr #5
   125bc:	muleq	r1, r6, r9
   125c0:	andeq	r6, r1, sp, lsr #19
   125c4:	ldrdeq	r6, [r1], -r5
   125c8:	andeq	r6, r1, lr, lsr #20
   125cc:	andeq	r6, r1, r9, asr #20
   125d0:	strdeq	r6, [r1], -r0
   125d4:			; <UNDEFINED> instruction: 0x000167b0
   125d8:	andeq	r6, r1, r3, ror #19
   125dc:	andeq	r6, r1, r7, ror #19
   125e0:	ldr	r3, [pc, #4]	; 125ec <putchar_unlocked@plt+0x15c4>
   125e4:	str	r0, [r3]
   125e8:	bx	lr
   125ec:	andeq	r8, r2, r4, lsl #3
   125f0:	ldr	r3, [pc, #4]	; 125fc <putchar_unlocked@plt+0x15d4>
   125f4:	strb	r0, [r3, #4]
   125f8:	bx	lr
   125fc:	andeq	r8, r2, r4, lsl #3
   12600:	ldr	r3, [pc, #192]	; 126c8 <putchar_unlocked@plt+0x16a0>
   12604:	push	{r0, r1, r4, r5, r6, lr}
   12608:	ldr	r0, [r3]
   1260c:	bl	158a0 <putchar_unlocked@plt+0x4878>
   12610:	cmp	r0, #0
   12614:	beq	126ac <putchar_unlocked@plt+0x1684>
   12618:	ldr	r3, [pc, #172]	; 126cc <putchar_unlocked@plt+0x16a4>
   1261c:	mov	r4, r3
   12620:	ldrb	r2, [r3, #4]
   12624:	cmp	r2, #0
   12628:	beq	1263c <putchar_unlocked@plt+0x1614>
   1262c:	bl	10f08 <__errno_location@plt>
   12630:	ldr	r3, [r0]
   12634:	cmp	r3, #32
   12638:	beq	126ac <putchar_unlocked@plt+0x1684>
   1263c:	mov	r2, #5
   12640:	ldr	r1, [pc, #136]	; 126d0 <putchar_unlocked@plt+0x16a8>
   12644:	mov	r0, #0
   12648:	bl	10e18 <dcgettext@plt>
   1264c:	ldr	r4, [r4]
   12650:	cmp	r4, #0
   12654:	mov	r5, r0
   12658:	beq	12690 <putchar_unlocked@plt+0x1668>
   1265c:	bl	10f08 <__errno_location@plt>
   12660:	ldr	r6, [r0]
   12664:	mov	r0, r4
   12668:	bl	14c74 <putchar_unlocked@plt+0x3c4c>
   1266c:	str	r5, [sp]
   12670:	ldr	r2, [pc, #92]	; 126d4 <putchar_unlocked@plt+0x16ac>
   12674:	mov	r1, r6
   12678:	mov	r3, r0
   1267c:	mov	r0, #0
   12680:	bl	10e84 <error@plt>
   12684:	ldr	r3, [pc, #76]	; 126d8 <putchar_unlocked@plt+0x16b0>
   12688:	ldr	r0, [r3]
   1268c:	bl	10ddc <_exit@plt>
   12690:	bl	10f08 <__errno_location@plt>
   12694:	mov	r3, r5
   12698:	ldr	r2, [pc, #60]	; 126dc <putchar_unlocked@plt+0x16b4>
   1269c:	ldr	r1, [r0]
   126a0:	mov	r0, r4
   126a4:	bl	10e84 <error@plt>
   126a8:	b	12684 <putchar_unlocked@plt+0x165c>
   126ac:	ldr	r3, [pc, #44]	; 126e0 <putchar_unlocked@plt+0x16b8>
   126b0:	ldr	r0, [r3]
   126b4:	bl	158a0 <putchar_unlocked@plt+0x4878>
   126b8:	cmp	r0, #0
   126bc:	bne	12684 <putchar_unlocked@plt+0x165c>
   126c0:	add	sp, sp, #8
   126c4:	pop	{r4, r5, r6, pc}
   126c8:	andeq	r8, r2, ip, ror #2
   126cc:	andeq	r8, r2, r4, lsl #3
   126d0:	muleq	r1, r2, pc	; <UNPREDICTABLE>
   126d4:	muleq	r1, lr, pc	; <UNPREDICTABLE>
   126d8:	andeq	r8, r2, ip, lsl #2
   126dc:	andeq	r6, r1, r2, lsr #31
   126e0:	andeq	r8, r2, r0, ror #2
   126e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   126e8:	mov	r6, r0
   126ec:	sub	sp, sp, #164	; 0xa4
   126f0:	ldr	r0, [pc, #196]	; 127bc <putchar_unlocked@plt+0x1794>
   126f4:	mov	r7, r1
   126f8:	bl	15804 <putchar_unlocked@plt+0x47dc>
   126fc:	subs	r5, r0, #0
   12700:	beq	12768 <putchar_unlocked@plt+0x1740>
   12704:	add	r0, sp, #4
   12708:	bl	127c0 <putchar_unlocked@plt+0x1798>
   1270c:	mov	r9, #1
   12710:	mov	r8, #32768	; 0x8000
   12714:	mov	r4, #0
   12718:	mov	r0, r6
   1271c:	bl	11004 <feof_unlocked@plt>
   12720:	cmp	r0, #0
   12724:	bne	12784 <putchar_unlocked@plt+0x175c>
   12728:	rsb	r2, r4, #32768	; 0x8000
   1272c:	add	r0, r5, r4
   12730:	mov	r3, r6
   12734:	mov	r1, r9
   12738:	bl	10fc8 <fread_unlocked@plt>
   1273c:	add	r4, r4, r0
   12740:	cmp	r4, #32768	; 0x8000
   12744:	beq	12770 <putchar_unlocked@plt+0x1748>
   12748:	cmp	r0, #0
   1274c:	bne	12718 <putchar_unlocked@plt+0x16f0>
   12750:	mov	r0, r6
   12754:	bl	10e6c <ferror_unlocked@plt>
   12758:	cmp	r0, #0
   1275c:	beq	12784 <putchar_unlocked@plt+0x175c>
   12760:	mov	r0, r5
   12764:	bl	136ac <putchar_unlocked@plt+0x2684>
   12768:	mov	r0, #1
   1276c:	b	127b4 <putchar_unlocked@plt+0x178c>
   12770:	add	r2, sp, #4
   12774:	mov	r1, r8
   12778:	mov	r0, r5
   1277c:	bl	12820 <putchar_unlocked@plt+0x17f8>
   12780:	b	12714 <putchar_unlocked@plt+0x16ec>
   12784:	cmp	r4, #0
   12788:	beq	1279c <putchar_unlocked@plt+0x1774>
   1278c:	add	r2, sp, #4
   12790:	mov	r1, r4
   12794:	mov	r0, r5
   12798:	bl	13338 <putchar_unlocked@plt+0x2310>
   1279c:	mov	r1, r7
   127a0:	add	r0, sp, #4
   127a4:	bl	132a4 <putchar_unlocked@plt+0x227c>
   127a8:	mov	r0, r5
   127ac:	bl	136ac <putchar_unlocked@plt+0x2684>
   127b0:	mov	r0, #0
   127b4:	add	sp, sp, #164	; 0xa4
   127b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   127bc:	andeq	r8, r0, r8, asr #32
   127c0:	ldr	r3, [pc, #32]	; 127e8 <putchar_unlocked@plt+0x17c0>
   127c4:	ldr	r1, [pc, #32]	; 127ec <putchar_unlocked@plt+0x17c4>
   127c8:	ldr	r2, [pc, #32]	; 127f0 <putchar_unlocked@plt+0x17c8>
   127cc:	ldr	ip, [pc, #32]	; 127f4 <putchar_unlocked@plt+0x17cc>
   127d0:	stm	r0, {r1, r2, r3, ip}
   127d4:	mov	r3, #0
   127d8:	str	r3, [r0, #20]
   127dc:	str	r3, [r0, #16]
   127e0:	str	r3, [r0, #24]
   127e4:	bx	lr
   127e8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   127ec:	strbvs	r2, [r5, -r1, lsl #6]
   127f0:	svc	0x00cdab89
   127f4:	eorsne	r5, r2, r6, ror r4
   127f8:	ldr	r3, [r0]
   127fc:	str	r3, [r1]
   12800:	ldr	r3, [r0, #4]
   12804:	str	r3, [r1, #4]
   12808:	ldr	r3, [r0, #8]
   1280c:	str	r3, [r1, #8]
   12810:	ldr	r3, [r0, #12]
   12814:	mov	r0, r1
   12818:	str	r3, [r1, #12]
   1281c:	bx	lr
   12820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12824:	bic	r3, r1, #3
   12828:	sub	sp, sp, #68	; 0x44
   1282c:	add	r3, r0, r3
   12830:	str	r3, [sp, #60]	; 0x3c
   12834:	ldr	r3, [r2]
   12838:	ldr	ip, [r2, #20]
   1283c:	str	r3, [sp, #8]
   12840:	ldr	r3, [r2, #12]
   12844:	ldmib	r2, {r5, r6}
   12848:	str	r3, [sp, #4]
   1284c:	ldr	r3, [r2, #16]
   12850:	add	r3, r1, r3
   12854:	str	r3, [r2, #16]
   12858:	cmp	r1, r3
   1285c:	movls	r3, ip
   12860:	addhi	r3, ip, #1
   12864:	str	r3, [r2, #20]
   12868:	ldr	r3, [sp, #60]	; 0x3c
   1286c:	cmp	r0, r3
   12870:	bcc	1288c <putchar_unlocked@plt+0x1864>
   12874:	ldr	r3, [sp, #8]
   12878:	stm	r2, {r3, r5, r6}
   1287c:	ldr	r3, [sp, #4]
   12880:	str	r3, [r2, #12]
   12884:	add	sp, sp, #68	; 0x44
   12888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1288c:	ldr	r3, [r0]
   12890:	ldr	r1, [pc, #2340]	; 131bc <putchar_unlocked@plt+0x2194>
   12894:	str	r3, [sp, #12]
   12898:	ldr	r3, [sp, #8]
   1289c:	ldr	ip, [sp, #4]
   128a0:	add	r1, r3, r1
   128a4:	ldr	r3, [sp, #12]
   128a8:	ldr	r4, [pc, #2320]	; 131c0 <putchar_unlocked@plt+0x2198>
   128ac:	add	r1, r1, r3
   128b0:	ldr	r3, [sp, #4]
   128b4:	add	r4, r5, r4
   128b8:	eor	r3, r6, r3
   128bc:	and	r3, r3, r5
   128c0:	eor	r3, r3, ip
   128c4:	add	r3, r3, r1
   128c8:	ldr	r1, [r0, #4]
   128cc:	add	r3, r5, r3, ror #25
   128d0:	str	r1, [sp, #16]
   128d4:	add	r1, ip, #-402653184	; 0xe8000000
   128d8:	add	r1, r1, #13041664	; 0xc70000
   128dc:	ldr	ip, [sp, #16]
   128e0:	add	r1, r1, #46848	; 0xb700
   128e4:	add	r1, r1, #86	; 0x56
   128e8:	add	r1, r1, ip
   128ec:	eor	ip, r5, r6
   128f0:	and	ip, ip, r3
   128f4:	eor	ip, ip, r6
   128f8:	add	ip, ip, r1
   128fc:	ldr	r1, [r0, #8]
   12900:	add	ip, r3, ip, ror #20
   12904:	str	r1, [sp, #20]
   12908:	ldr	r1, [pc, #2228]	; 131c4 <putchar_unlocked@plt+0x219c>
   1290c:	ldr	lr, [sp, #20]
   12910:	add	r1, r6, r1
   12914:	add	r1, r1, lr
   12918:	eor	lr, r5, r3
   1291c:	and	lr, lr, ip
   12920:	eor	lr, lr, r5
   12924:	add	lr, lr, r1
   12928:	ldr	r1, [r0, #12]
   1292c:	add	lr, ip, lr, ror #15
   12930:	add	r4, r4, r1
   12934:	str	r1, [sp, #24]
   12938:	eor	r1, r3, ip
   1293c:	and	r1, r1, lr
   12940:	eor	r1, r1, r3
   12944:	add	r1, r1, r4
   12948:	ldr	r4, [r0, #16]
   1294c:	add	r1, lr, r1, ror #10
   12950:	str	r4, [sp, #28]
   12954:	sub	r4, r4, #176160768	; 0xa800000
   12958:	sub	r4, r4, #258048	; 0x3f000
   1295c:	sub	r4, r4, #81	; 0x51
   12960:	add	r3, r4, r3
   12964:	eor	r4, ip, lr
   12968:	and	r4, r4, r1
   1296c:	eor	r4, r4, ip
   12970:	add	r3, r4, r3
   12974:	ldr	r4, [r0, #20]
   12978:	add	r3, r1, r3, ror #25
   1297c:	str	r4, [sp, #32]
   12980:	add	r4, r4, #1191182336	; 0x47000000
   12984:	add	r4, r4, #8847360	; 0x870000
   12988:	add	r4, r4, #50688	; 0xc600
   1298c:	add	r4, r4, #42	; 0x2a
   12990:	add	ip, r4, ip
   12994:	eor	r4, lr, r1
   12998:	and	r4, r4, r3
   1299c:	eor	r4, r4, lr
   129a0:	add	ip, r4, ip
   129a4:	ldr	r4, [r0, #24]
   129a8:	add	ip, r3, ip, ror #20
   129ac:	str	r4, [sp, #36]	; 0x24
   129b0:	add	r4, r4, #-1476395008	; 0xa8000000
   129b4:	add	r4, r4, #3162112	; 0x304000
   129b8:	add	r4, r4, #1552	; 0x610
   129bc:	add	r4, r4, #3
   129c0:	add	lr, r4, lr
   129c4:	eor	r4, r1, r3
   129c8:	and	r4, r4, ip
   129cc:	eor	r4, r4, r1
   129d0:	ldr	sl, [r0, #28]
   129d4:	add	lr, r4, lr
   129d8:	ldr	r4, [pc, #2024]	; 131c8 <putchar_unlocked@plt+0x21a0>
   129dc:	add	lr, ip, lr, ror #15
   129e0:	add	r4, sl, r4
   129e4:	add	r1, r4, r1
   129e8:	eor	r4, r3, ip
   129ec:	and	r4, r4, lr
   129f0:	eor	r4, r4, r3
   129f4:	add	r1, r4, r1
   129f8:	ldr	r4, [r0, #32]
   129fc:	add	r1, lr, r1, ror #10
   12a00:	str	r4, [sp, #40]	; 0x28
   12a04:	add	r4, r4, #1761607680	; 0x69000000
   12a08:	add	r4, r4, #8388608	; 0x800000
   12a0c:	add	r4, r4, #38912	; 0x9800
   12a10:	add	r4, r4, #216	; 0xd8
   12a14:	add	r3, r4, r3
   12a18:	eor	r4, ip, lr
   12a1c:	and	r4, r4, r1
   12a20:	eor	r4, r4, ip
   12a24:	add	r3, r4, r3
   12a28:	ldr	r4, [r0, #36]	; 0x24
   12a2c:	add	r3, r1, r3, ror #25
   12a30:	str	r4, [sp, #44]	; 0x2c
   12a34:	ldr	r7, [sp, #44]	; 0x2c
   12a38:	ldr	r4, [pc, #1932]	; 131cc <putchar_unlocked@plt+0x21a4>
   12a3c:	ldr	r8, [r0, #48]	; 0x30
   12a40:	add	r4, r7, r4
   12a44:	add	r4, r4, ip
   12a48:	eor	ip, lr, r1
   12a4c:	and	ip, ip, r3
   12a50:	eor	ip, ip, lr
   12a54:	add	ip, ip, r4
   12a58:	ldr	r4, [r0, #40]	; 0x28
   12a5c:	add	ip, r3, ip, ror #20
   12a60:	str	r4, [sp, #48]	; 0x30
   12a64:	sub	r4, r4, #41984	; 0xa400
   12a68:	sub	r4, r4, #79	; 0x4f
   12a6c:	add	r4, r4, lr
   12a70:	eor	lr, r1, r3
   12a74:	and	lr, lr, ip
   12a78:	eor	lr, lr, r1
   12a7c:	add	lr, lr, r4
   12a80:	ldr	r4, [r0, #44]	; 0x2c
   12a84:	add	lr, ip, lr, ror #15
   12a88:	str	r4, [sp, #52]	; 0x34
   12a8c:	ldr	r7, [sp, #52]	; 0x34
   12a90:	ldr	r4, [pc, #1848]	; 131d0 <putchar_unlocked@plt+0x21a8>
   12a94:	add	r0, r0, #64	; 0x40
   12a98:	add	r4, r7, r4
   12a9c:	add	r4, r4, r1
   12aa0:	eor	r1, r3, ip
   12aa4:	and	r1, r1, lr
   12aa8:	eor	r1, r1, r3
   12aac:	add	r1, r1, r4
   12ab0:	ldr	r4, [pc, #1820]	; 131d4 <putchar_unlocked@plt+0x21ac>
   12ab4:	add	r1, lr, r1, ror #10
   12ab8:	add	r4, r8, r4
   12abc:	add	r4, r4, r3
   12ac0:	eor	r3, ip, lr
   12ac4:	and	r3, r3, r1
   12ac8:	eor	r3, r3, ip
   12acc:	add	r3, r3, r4
   12ad0:	ldr	r4, [r0, #-12]
   12ad4:	add	r3, r1, r3, ror #25
   12ad8:	str	r4, [sp, #56]	; 0x38
   12adc:	ldr	r7, [sp, #56]	; 0x38
   12ae0:	ldr	r4, [pc, #1776]	; 131d8 <putchar_unlocked@plt+0x21b0>
   12ae4:	ldr	r9, [r0, #-8]
   12ae8:	add	r4, r7, r4
   12aec:	add	r4, r4, ip
   12af0:	eor	ip, lr, r1
   12af4:	and	ip, ip, r3
   12af8:	eor	ip, ip, lr
   12afc:	add	ip, ip, r4
   12b00:	ldr	r4, [pc, #1748]	; 131dc <putchar_unlocked@plt+0x21b4>
   12b04:	add	ip, r3, ip, ror #20
   12b08:	add	r4, r9, r4
   12b0c:	add	r4, r4, lr
   12b10:	eor	lr, r1, r3
   12b14:	and	lr, lr, ip
   12b18:	eor	lr, lr, r1
   12b1c:	ldr	r7, [r0, #-4]
   12b20:	add	lr, lr, r4
   12b24:	ldr	r4, [pc, #1716]	; 131e0 <putchar_unlocked@plt+0x21b8>
   12b28:	add	lr, ip, lr, ror #15
   12b2c:	add	r4, r7, r4
   12b30:	add	r4, r4, r1
   12b34:	eor	r1, r3, ip
   12b38:	and	r1, r1, lr
   12b3c:	eor	r1, r1, r3
   12b40:	ldr	fp, [sp, #16]
   12b44:	add	r1, r1, r4
   12b48:	ldr	r4, [pc, #1684]	; 131e4 <putchar_unlocked@plt+0x21bc>
   12b4c:	add	r1, lr, r1, ror #10
   12b50:	add	r4, fp, r4
   12b54:	add	r4, r4, r3
   12b58:	eor	r3, lr, r1
   12b5c:	and	r3, r3, ip
   12b60:	eor	r3, r3, lr
   12b64:	ldr	fp, [sp, #36]	; 0x24
   12b68:	add	r3, r3, r4
   12b6c:	ldr	r4, [pc, #1652]	; 131e8 <putchar_unlocked@plt+0x21c0>
   12b70:	add	r3, r1, r3, ror #27
   12b74:	add	r4, fp, r4
   12b78:	add	r4, r4, ip
   12b7c:	eor	ip, r1, r3
   12b80:	and	ip, ip, lr
   12b84:	eor	ip, ip, r1
   12b88:	ldr	fp, [sp, #52]	; 0x34
   12b8c:	add	ip, ip, r4
   12b90:	ldr	r4, [pc, #1620]	; 131ec <putchar_unlocked@plt+0x21c4>
   12b94:	add	ip, r3, ip, ror #23
   12b98:	add	r4, fp, r4
   12b9c:	add	r4, r4, lr
   12ba0:	eor	lr, r3, ip
   12ba4:	and	lr, lr, r1
   12ba8:	eor	lr, lr, r3
   12bac:	ldr	fp, [sp, #12]
   12bb0:	add	lr, lr, r4
   12bb4:	ldr	r4, [pc, #1588]	; 131f0 <putchar_unlocked@plt+0x21c8>
   12bb8:	add	lr, ip, lr, ror #18
   12bbc:	add	r4, fp, r4
   12bc0:	add	r4, r4, r1
   12bc4:	eor	r1, ip, lr
   12bc8:	and	r1, r1, r3
   12bcc:	eor	r1, r1, ip
   12bd0:	ldr	fp, [sp, #32]
   12bd4:	add	r1, r1, r4
   12bd8:	ldr	r4, [pc, #1556]	; 131f4 <putchar_unlocked@plt+0x21cc>
   12bdc:	add	r1, lr, r1, ror #12
   12be0:	add	r4, fp, r4
   12be4:	add	r4, r4, r3
   12be8:	eor	r3, lr, r1
   12bec:	and	r3, r3, ip
   12bf0:	eor	r3, r3, lr
   12bf4:	ldr	fp, [sp, #48]	; 0x30
   12bf8:	add	r3, r3, r4
   12bfc:	ldr	r4, [pc, #1524]	; 131f8 <putchar_unlocked@plt+0x21d0>
   12c00:	add	r3, r1, r3, ror #27
   12c04:	add	r4, fp, r4
   12c08:	add	r4, r4, ip
   12c0c:	eor	ip, r1, r3
   12c10:	and	ip, ip, lr
   12c14:	eor	ip, ip, r1
   12c18:	add	ip, ip, r4
   12c1c:	ldr	r4, [pc, #1496]	; 131fc <putchar_unlocked@plt+0x21d4>
   12c20:	add	ip, r3, ip, ror #23
   12c24:	add	r4, r7, r4
   12c28:	add	r4, r4, lr
   12c2c:	eor	lr, r3, ip
   12c30:	and	lr, lr, r1
   12c34:	eor	lr, lr, r3
   12c38:	ldr	fp, [sp, #28]
   12c3c:	add	lr, lr, r4
   12c40:	ldr	r4, [pc, #1464]	; 13200 <putchar_unlocked@plt+0x21d8>
   12c44:	add	lr, ip, lr, ror #18
   12c48:	add	r4, fp, r4
   12c4c:	add	r4, r4, r1
   12c50:	eor	r1, ip, lr
   12c54:	and	r1, r1, r3
   12c58:	eor	r1, r1, ip
   12c5c:	ldr	fp, [sp, #44]	; 0x2c
   12c60:	add	r1, r1, r4
   12c64:	ldr	r4, [pc, #1432]	; 13204 <putchar_unlocked@plt+0x21dc>
   12c68:	add	r1, lr, r1, ror #12
   12c6c:	add	r4, fp, r4
   12c70:	add	r4, r4, r3
   12c74:	eor	r3, lr, r1
   12c78:	and	r3, r3, ip
   12c7c:	eor	r3, r3, lr
   12c80:	add	r3, r3, r4
   12c84:	ldr	r4, [pc, #1404]	; 13208 <putchar_unlocked@plt+0x21e0>
   12c88:	add	r3, r1, r3, ror #27
   12c8c:	add	r4, r9, r4
   12c90:	add	r4, r4, ip
   12c94:	eor	ip, r1, r3
   12c98:	and	ip, ip, lr
   12c9c:	eor	ip, ip, r1
   12ca0:	ldr	fp, [sp, #24]
   12ca4:	add	ip, ip, r4
   12ca8:	ldr	r4, [pc, #1372]	; 1320c <putchar_unlocked@plt+0x21e4>
   12cac:	add	ip, r3, ip, ror #23
   12cb0:	add	r4, fp, r4
   12cb4:	add	lr, r4, lr
   12cb8:	eor	r4, r3, ip
   12cbc:	and	r4, r4, r1
   12cc0:	eor	r4, r4, r3
   12cc4:	ldr	fp, [sp, #40]	; 0x28
   12cc8:	add	lr, r4, lr
   12ccc:	ldr	r4, [pc, #1340]	; 13210 <putchar_unlocked@plt+0x21e8>
   12cd0:	add	lr, ip, lr, ror #18
   12cd4:	add	r4, fp, r4
   12cd8:	add	r1, r4, r1
   12cdc:	eor	r4, ip, lr
   12ce0:	and	r4, r4, r3
   12ce4:	eor	r4, r4, ip
   12ce8:	ldr	fp, [sp, #56]	; 0x38
   12cec:	add	r1, r4, r1
   12cf0:	ldr	r4, [pc, #1308]	; 13214 <putchar_unlocked@plt+0x21ec>
   12cf4:	add	r1, lr, r1, ror #12
   12cf8:	add	r4, fp, r4
   12cfc:	add	r3, r4, r3
   12d00:	eor	r4, lr, r1
   12d04:	and	r4, r4, ip
   12d08:	eor	r4, r4, lr
   12d0c:	ldr	fp, [sp, #20]
   12d10:	add	r3, r4, r3
   12d14:	ldr	r4, [pc, #1276]	; 13218 <putchar_unlocked@plt+0x21f0>
   12d18:	add	r3, r1, r3, ror #27
   12d1c:	add	r4, fp, r4
   12d20:	add	ip, r4, ip
   12d24:	eor	r4, r1, r3
   12d28:	and	r4, r4, lr
   12d2c:	eor	r4, r4, r1
   12d30:	add	ip, r4, ip
   12d34:	ldr	r4, [pc, #1248]	; 1321c <putchar_unlocked@plt+0x21f4>
   12d38:	add	ip, r3, ip, ror #23
   12d3c:	add	r4, sl, r4
   12d40:	add	lr, r4, lr
   12d44:	eor	r4, r3, ip
   12d48:	and	r4, r4, r1
   12d4c:	eor	r4, r4, r3
   12d50:	add	r4, r4, lr
   12d54:	ldr	fp, [pc, #1220]	; 13220 <putchar_unlocked@plt+0x21f8>
   12d58:	add	r4, ip, r4, ror #18
   12d5c:	add	fp, r8, fp
   12d60:	add	fp, fp, r1
   12d64:	eor	r1, ip, r4
   12d68:	and	r1, r3, r1
   12d6c:	eor	r1, r1, ip
   12d70:	ldr	lr, [sp, #32]
   12d74:	add	r1, r1, fp
   12d78:	ldr	fp, [pc, #1188]	; 13224 <putchar_unlocked@plt+0x21fc>
   12d7c:	add	r1, r4, r1, ror #12
   12d80:	add	fp, lr, fp
   12d84:	eor	lr, ip, r4
   12d88:	eor	lr, lr, r1
   12d8c:	add	r3, fp, r3
   12d90:	add	r3, lr, r3
   12d94:	ldr	fp, [sp, #40]	; 0x28
   12d98:	ldr	lr, [pc, #1160]	; 13228 <putchar_unlocked@plt+0x2200>
   12d9c:	add	r3, r1, r3, ror #28
   12da0:	add	lr, fp, lr
   12da4:	add	lr, lr, ip
   12da8:	eor	ip, r4, r1
   12dac:	eor	ip, ip, r3
   12db0:	ldr	fp, [sp, #52]	; 0x34
   12db4:	add	ip, ip, lr
   12db8:	ldr	lr, [pc, #1132]	; 1322c <putchar_unlocked@plt+0x2204>
   12dbc:	add	ip, r3, ip, ror #21
   12dc0:	add	lr, fp, lr
   12dc4:	add	lr, lr, r4
   12dc8:	eor	r4, r1, r3
   12dcc:	eor	r4, r4, ip
   12dd0:	add	r4, r4, lr
   12dd4:	ldr	lr, [pc, #1108]	; 13230 <putchar_unlocked@plt+0x2208>
   12dd8:	add	r4, ip, r4, ror #16
   12ddc:	add	lr, r9, lr
   12de0:	add	r1, lr, r1
   12de4:	eor	lr, r3, ip
   12de8:	eor	lr, lr, r4
   12dec:	ldr	fp, [sp, #16]
   12df0:	add	r1, lr, r1
   12df4:	ldr	lr, [pc, #1080]	; 13234 <putchar_unlocked@plt+0x220c>
   12df8:	add	r1, r4, r1, ror #9
   12dfc:	add	lr, fp, lr
   12e00:	add	lr, lr, r3
   12e04:	eor	r3, ip, r4
   12e08:	eor	r3, r3, r1
   12e0c:	ldr	fp, [sp, #28]
   12e10:	add	r3, r3, lr
   12e14:	ldr	lr, [pc, #1052]	; 13238 <putchar_unlocked@plt+0x2210>
   12e18:	add	r3, r1, r3, ror #28
   12e1c:	add	lr, fp, lr
   12e20:	add	lr, lr, ip
   12e24:	eor	ip, r4, r1
   12e28:	eor	ip, ip, r3
   12e2c:	add	ip, ip, lr
   12e30:	ldr	lr, [pc, #1028]	; 1323c <putchar_unlocked@plt+0x2214>
   12e34:	add	ip, r3, ip, ror #21
   12e38:	add	lr, sl, lr
   12e3c:	add	r4, lr, r4
   12e40:	eor	lr, r1, r3
   12e44:	eor	lr, lr, ip
   12e48:	ldr	fp, [sp, #48]	; 0x30
   12e4c:	add	r4, lr, r4
   12e50:	ldr	lr, [pc, #1000]	; 13240 <putchar_unlocked@plt+0x2218>
   12e54:	add	r4, ip, r4, ror #16
   12e58:	add	lr, fp, lr
   12e5c:	add	r1, lr, r1
   12e60:	eor	lr, r3, ip
   12e64:	eor	lr, lr, r4
   12e68:	ldr	fp, [sp, #56]	; 0x38
   12e6c:	add	lr, lr, r1
   12e70:	ldr	r1, [pc, #972]	; 13244 <putchar_unlocked@plt+0x221c>
   12e74:	add	lr, r4, lr, ror #9
   12e78:	add	r1, fp, r1
   12e7c:	add	r1, r1, r3
   12e80:	eor	r3, ip, r4
   12e84:	eor	r3, r3, lr
   12e88:	ldr	fp, [sp, #12]
   12e8c:	add	r3, r3, r1
   12e90:	ldr	r1, [pc, #944]	; 13248 <putchar_unlocked@plt+0x2220>
   12e94:	add	r3, lr, r3, ror #28
   12e98:	add	r1, fp, r1
   12e9c:	add	ip, r1, ip
   12ea0:	eor	r1, r4, lr
   12ea4:	eor	r1, r1, r3
   12ea8:	ldr	fp, [sp, #24]
   12eac:	add	r1, r1, ip
   12eb0:	ldr	ip, [pc, #916]	; 1324c <putchar_unlocked@plt+0x2224>
   12eb4:	add	r1, r3, r1, ror #21
   12eb8:	add	ip, fp, ip
   12ebc:	add	r4, ip, r4
   12ec0:	eor	ip, lr, r3
   12ec4:	eor	ip, ip, r1
   12ec8:	ldr	fp, [sp, #36]	; 0x24
   12ecc:	add	ip, ip, r4
   12ed0:	ldr	r4, [pc, #888]	; 13250 <putchar_unlocked@plt+0x2228>
   12ed4:	add	ip, r1, ip, ror #16
   12ed8:	add	r4, fp, r4
   12edc:	add	r4, r4, lr
   12ee0:	eor	lr, r3, r1
   12ee4:	eor	lr, lr, ip
   12ee8:	ldr	fp, [sp, #44]	; 0x2c
   12eec:	add	lr, lr, r4
   12ef0:	ldr	r4, [pc, #860]	; 13254 <putchar_unlocked@plt+0x222c>
   12ef4:	add	lr, ip, lr, ror #9
   12ef8:	add	r4, fp, r4
   12efc:	add	r4, r4, r3
   12f00:	eor	r3, r1, ip
   12f04:	eor	r3, r3, lr
   12f08:	add	r3, r3, r4
   12f0c:	ldr	r4, [pc, #836]	; 13258 <putchar_unlocked@plt+0x2230>
   12f10:	add	r3, lr, r3, ror #28
   12f14:	add	r4, r8, r4
   12f18:	add	r1, r4, r1
   12f1c:	eor	r4, ip, lr
   12f20:	eor	r4, r4, r3
   12f24:	add	r1, r4, r1
   12f28:	ldr	r4, [pc, #812]	; 1325c <putchar_unlocked@plt+0x2234>
   12f2c:	add	r1, r3, r1, ror #21
   12f30:	add	r4, r7, r4
   12f34:	add	r4, r4, ip
   12f38:	eor	ip, lr, r3
   12f3c:	eor	ip, ip, r1
   12f40:	ldr	fp, [sp, #20]
   12f44:	add	ip, ip, r4
   12f48:	ldr	r4, [pc, #784]	; 13260 <putchar_unlocked@plt+0x2238>
   12f4c:	add	ip, r1, ip, ror #16
   12f50:	add	r4, fp, r4
   12f54:	add	r4, r4, lr
   12f58:	eor	lr, r3, r1
   12f5c:	eor	lr, lr, ip
   12f60:	add	lr, lr, r4
   12f64:	ldr	fp, [sp, #12]
   12f68:	ldr	r4, [pc, #756]	; 13264 <putchar_unlocked@plt+0x223c>
   12f6c:	add	lr, ip, lr, ror #9
   12f70:	add	r4, fp, r4
   12f74:	add	r3, r4, r3
   12f78:	mvn	r4, r1
   12f7c:	orr	r4, r4, lr
   12f80:	eor	r4, r4, ip
   12f84:	add	r3, r4, r3
   12f88:	ldr	r4, [pc, #728]	; 13268 <putchar_unlocked@plt+0x2240>
   12f8c:	add	r3, lr, r3, ror #26
   12f90:	add	r4, sl, r4
   12f94:	mvn	sl, ip
   12f98:	orr	sl, sl, r3
   12f9c:	add	r1, r4, r1
   12fa0:	eor	sl, sl, lr
   12fa4:	add	r1, sl, r1
   12fa8:	ldr	r4, [pc, #700]	; 1326c <putchar_unlocked@plt+0x2244>
   12fac:	add	r1, r3, r1, ror #22
   12fb0:	add	r4, r9, r4
   12fb4:	mvn	r9, lr
   12fb8:	orr	r9, r9, r1
   12fbc:	eor	r9, r9, r3
   12fc0:	add	ip, r4, ip
   12fc4:	add	ip, r9, ip
   12fc8:	ldr	r4, [pc, #672]	; 13270 <putchar_unlocked@plt+0x2248>
   12fcc:	ldr	r9, [sp, #32]
   12fd0:	add	ip, r1, ip, ror #17
   12fd4:	add	r4, r9, r4
   12fd8:	mvn	r9, r3
   12fdc:	orr	r9, r9, ip
   12fe0:	add	lr, r4, lr
   12fe4:	eor	r9, r9, r1
   12fe8:	add	lr, r9, lr
   12fec:	ldr	r4, [pc, #640]	; 13274 <putchar_unlocked@plt+0x224c>
   12ff0:	add	lr, ip, lr, ror #11
   12ff4:	add	r4, r8, r4
   12ff8:	mvn	r8, r1
   12ffc:	orr	r8, r8, lr
   13000:	eor	r8, r8, ip
   13004:	add	r3, r4, r3
   13008:	add	r3, r8, r3
   1300c:	ldr	r4, [pc, #612]	; 13278 <putchar_unlocked@plt+0x2250>
   13010:	ldr	r8, [sp, #24]
   13014:	add	r3, lr, r3, ror #26
   13018:	add	r4, r8, r4
   1301c:	add	r4, r4, r1
   13020:	mvn	r1, ip
   13024:	orr	r1, r1, r3
   13028:	eor	r1, r1, lr
   1302c:	ldr	r8, [sp, #48]	; 0x30
   13030:	add	r1, r1, r4
   13034:	ldr	r4, [pc, #576]	; 1327c <putchar_unlocked@plt+0x2254>
   13038:	add	r1, r3, r1, ror #22
   1303c:	add	r4, r8, r4
   13040:	mvn	r8, lr
   13044:	orr	r8, r8, r1
   13048:	eor	r8, r8, r3
   1304c:	add	ip, r4, ip
   13050:	add	ip, r8, ip
   13054:	ldr	r4, [pc, #548]	; 13280 <putchar_unlocked@plt+0x2258>
   13058:	ldr	r8, [sp, #16]
   1305c:	add	ip, r1, ip, ror #17
   13060:	add	r4, r8, r4
   13064:	add	r4, r4, lr
   13068:	mvn	lr, r3
   1306c:	orr	lr, lr, ip
   13070:	eor	lr, lr, r1
   13074:	add	lr, lr, r4
   13078:	ldr	r8, [sp, #40]	; 0x28
   1307c:	ldr	r4, [pc, #512]	; 13284 <putchar_unlocked@plt+0x225c>
   13080:	add	lr, ip, lr, ror #11
   13084:	add	r4, r8, r4
   13088:	mvn	r8, r1
   1308c:	orr	r8, r8, lr
   13090:	add	r3, r4, r3
   13094:	eor	r8, r8, ip
   13098:	add	r3, r8, r3
   1309c:	ldr	r4, [pc, #484]	; 13288 <putchar_unlocked@plt+0x2260>
   130a0:	add	r3, lr, r3, ror #26
   130a4:	add	r4, r7, r4
   130a8:	mvn	r7, ip
   130ac:	orr	r7, r7, r3
   130b0:	eor	r7, r7, lr
   130b4:	add	r1, r4, r1
   130b8:	add	r1, r7, r1
   130bc:	ldr	r4, [pc, #456]	; 1328c <putchar_unlocked@plt+0x2264>
   130c0:	ldr	r7, [sp, #36]	; 0x24
   130c4:	add	r1, r3, r1, ror #22
   130c8:	add	r4, r7, r4
   130cc:	mvn	r7, lr
   130d0:	orr	r7, r7, r1
   130d4:	eor	r7, r7, r3
   130d8:	add	ip, r4, ip
   130dc:	add	ip, r7, ip
   130e0:	ldr	r4, [pc, #424]	; 13290 <putchar_unlocked@plt+0x2268>
   130e4:	ldr	r7, [sp, #56]	; 0x38
   130e8:	add	ip, r1, ip, ror #17
   130ec:	add	r4, r7, r4
   130f0:	mvn	r7, r3
   130f4:	orr	r7, r7, ip
   130f8:	eor	r7, r7, r1
   130fc:	add	lr, r4, lr
   13100:	add	lr, r7, lr
   13104:	ldr	r4, [pc, #392]	; 13294 <putchar_unlocked@plt+0x226c>
   13108:	ldr	r7, [sp, #28]
   1310c:	add	lr, ip, lr, ror #11
   13110:	add	r4, r7, r4
   13114:	mvn	r7, r1
   13118:	orr	r7, r7, lr
   1311c:	eor	r7, r7, ip
   13120:	add	r3, r4, r3
   13124:	add	r3, r7, r3
   13128:	ldr	r4, [pc, #360]	; 13298 <putchar_unlocked@plt+0x2270>
   1312c:	ldr	r7, [sp, #52]	; 0x34
   13130:	add	r3, lr, r3, ror #26
   13134:	add	r4, r7, r4
   13138:	mvn	r7, ip
   1313c:	orr	r7, r7, r3
   13140:	eor	r7, r7, lr
   13144:	add	r1, r4, r1
   13148:	add	r1, r7, r1
   1314c:	ldr	r4, [pc, #328]	; 1329c <putchar_unlocked@plt+0x2274>
   13150:	ldr	r7, [sp, #20]
   13154:	add	r1, r3, r1, ror #22
   13158:	add	r4, r7, r4
   1315c:	mvn	r7, lr
   13160:	orr	r7, r7, r1
   13164:	eor	r7, r7, r3
   13168:	add	ip, r4, ip
   1316c:	add	ip, r7, ip
   13170:	ldr	r4, [pc, #296]	; 132a0 <putchar_unlocked@plt+0x2278>
   13174:	ldr	r7, [sp, #44]	; 0x2c
   13178:	add	ip, r1, ip, ror #17
   1317c:	add	r4, r7, r4
   13180:	add	lr, r4, lr
   13184:	mvn	r7, r3
   13188:	ldr	r4, [sp, #8]
   1318c:	orr	r7, r7, ip
   13190:	add	r3, r4, r3
   13194:	eor	r7, r7, r1
   13198:	add	lr, r7, lr
   1319c:	str	r3, [sp, #8]
   131a0:	ldr	r3, [sp, #4]
   131a4:	add	lr, ip, lr, ror #11
   131a8:	add	r3, r3, r1
   131ac:	add	r5, r5, lr
   131b0:	add	r6, r6, ip
   131b4:	str	r3, [sp, #4]
   131b8:	b	12868 <putchar_unlocked@plt+0x1840>
   131bc:			; <UNDEFINED> instruction: 0xd76aa478
   131c0:			; <UNDEFINED> instruction: 0xc1bdceee
   131c4:	strtcs	r7, [r0], #-219	; 0xffffff25
   131c8:	stc2l	5, cr9, [r6, #-4]
   131cc:	blhi	1151090 <stdout@@GLIBC_2.4+0x1128f24>
   131d0:	ldmdbhi	ip, {r1, r2, r3, r4, r5, r7, r8, r9, sl, ip, lr, pc}^
   131d4:	blvs	fe417664 <stdout@@GLIBC_2.4+0xfe3ef4f8>
   131d8:	ldc2	1, cr7, [r8, #588]	; 0x24c
   131dc:	ldrbtge	r4, [r9], -lr, lsl #7
   131e0:	ldmibmi	r4!, {r0, r5, fp}
   131e4:			; <UNDEFINED> instruction: 0xf61e2562
   131e8:	subgt	fp, r0, r0, asr #6
   131ec:			; <UNDEFINED> instruction: 0x265e5a51
   131f0:	ldmib	r6!, {r1, r3, r5, r7, r8, r9, sl, lr, pc}
   131f4:			; <UNDEFINED> instruction: 0xd62f105d
   131f8:	subeq	r1, r4, #1392508928	; 0x53000000
   131fc:	stmiale	r1!, {r0, r7, r9, sl, sp, lr, pc}
   13200:	ldrb	pc, [r3, r8, asr #23]	; <UNPREDICTABLE>
   13204:	mvncs	ip, r6, ror #27
   13208:	teqgt	r7, #56098816	; 0x3580000
   1320c:			; <UNDEFINED> instruction: 0xf4d50d87
   13210:	ldrbmi	r1, [sl, #-1261]	; 0xfffffb13
   13214:	stmibge	r3!, {r0, r2, r8, fp, sp, lr, pc}^
   13218:	stc2l	3, cr10, [pc], #992	; 13600 <putchar_unlocked@plt+0x25d8>
   1321c:			; <UNDEFINED> instruction: 0x676f02d9
   13220:	stchi	12, cr4, [sl, #-552]!	; 0xfffffdd8
   13224:			; <UNDEFINED> instruction: 0xfffa3942
   13228:	ldrbhi	pc, [r1, -r1, lsl #13]!	; <UNPREDICTABLE>
   1322c:	ldfvss	f6, [sp, #136]	; 0x88
   13230:	vcmla.f16	d19, d5, d12, #270
   13234:	ldrtge	lr, [lr], #2628	; 0xa44
   13238:	blmi	ff7c70e4 <stdout@@GLIBC_2.4+0xff79ef78>
   1323c:			; <UNDEFINED> instruction: 0xf6bb4b60
   13240:	mrclt	12, 5, fp, cr15, cr0, {3}
   13244:	ldmcs	fp, {r1, r2, r6, r7, r9, sl, fp, ip, sp, lr}
   13248:	b	fe85d238 <stdout@@GLIBC_2.4+0xfe8350cc>
   1324c:	strbtle	r3, [pc], #133	; 13254 <putchar_unlocked@plt+0x222c>
   13250:	streq	r1, [r8], #3333	; 0xd05
   13254:	ldmible	r4, {r0, r3, r4, r5, ip, lr, pc}^
   13258:	ldrb	r9, [fp], r5, ror #19
   1325c:	svcne	0x00a27cf8
   13260:	strtgt	r5, [ip], #1637	; 0x665
   13264:	vld1.16	{d2-d5}, [r9], r4
   13268:	msrmi	CPSR_fx, #604	; 0x25c
   1326c:	blge	fe51c110 <stdout@@GLIBC_2.4+0xfe4f3fa4>
   13270:	ldc2	0, cr10, [r3], {57}	; 0x39
   13274:	ldrbvs	r5, [fp, #-2499]	; 0xfffff63d
   13278:	svchi	0x000ccc92
   1327c:			; <UNDEFINED> instruction: 0xffeff47d
   13280:	strhi	r5, [r4, #3537]	; 0xdd1
   13284:	svcvs	0x00a87e4f
   13288:	cdp2	6, 2, cr14, cr12, cr0, {7}
   1328c:	movwge	r4, #4884	; 0x1314
   13290:	adfmi<illegal precision>p	f1, f0, f1
   13294:			; <UNDEFINED> instruction: 0xf7537e82
   13298:	lfmlt	f7, 1, [sl, #-212]!	; 0xffffff2c
   1329c:	bcs	ff607d90 <stdout@@GLIBC_2.4+0xff5dfc24>
   132a0:	bl	fe1c80ec <stdout@@GLIBC_2.4+0xfe19ff80>
   132a4:	push	{r4, r5, r6, r7, r8, lr}
   132a8:	mov	r4, r0
   132ac:	ldr	r0, [r0, #24]
   132b0:	ldr	r3, [r4, #16]
   132b4:	cmp	r0, #55	; 0x37
   132b8:	add	r3, r0, r3
   132bc:	movls	r5, #16
   132c0:	movhi	r5, #32
   132c4:	cmp	r0, r3
   132c8:	mov	r6, r1
   132cc:	ldrhi	r2, [r4, #20]
   132d0:	lsl	r1, r3, #3
   132d4:	addhi	r2, r2, #1
   132d8:	strhi	r2, [r4, #20]
   132dc:	add	r2, r4, r5, lsl #2
   132e0:	str	r3, [r4, #16]
   132e4:	str	r1, [r2, #20]
   132e8:	ldr	r1, [r4, #20]
   132ec:	sub	r5, r5, #-1073741822	; 0xc0000002
   132f0:	lsr	r3, r3, #29
   132f4:	orr	r3, r3, r1, lsl #3
   132f8:	add	r7, r4, #28
   132fc:	lsl	r5, r5, #2
   13300:	str	r3, [r2, #24]
   13304:	ldr	r1, [pc, #40]	; 13334 <putchar_unlocked@plt+0x230c>
   13308:	sub	r2, r5, r0
   1330c:	add	r0, r7, r0
   13310:	bl	10de8 <memcpy@plt>
   13314:	add	r1, r5, #8
   13318:	mov	r0, r7
   1331c:	mov	r2, r4
   13320:	bl	12820 <putchar_unlocked@plt+0x17f8>
   13324:	mov	r1, r6
   13328:	mov	r0, r4
   1332c:	pop	{r4, r5, r6, r7, r8, lr}
   13330:	b	127f8 <putchar_unlocked@plt+0x17d0>
   13334:	andeq	r6, r1, r5, lsr #31
   13338:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1333c:	mov	r6, r0
   13340:	ldr	r8, [r2, #24]
   13344:	mov	r4, r1
   13348:	cmp	r8, #0
   1334c:	mov	r5, r2
   13350:	beq	133c0 <putchar_unlocked@plt+0x2398>
   13354:	rsb	r7, r8, #128	; 0x80
   13358:	cmp	r7, r1
   1335c:	movcs	r7, r1
   13360:	add	r9, r2, #28
   13364:	mov	r1, r0
   13368:	mov	r2, r7
   1336c:	add	r0, r9, r8
   13370:	bl	10de8 <memcpy@plt>
   13374:	ldr	r1, [r5, #24]
   13378:	add	r1, r7, r1
   1337c:	cmp	r1, #64	; 0x40
   13380:	str	r1, [r5, #24]
   13384:	bls	133b8 <putchar_unlocked@plt+0x2390>
   13388:	mov	r2, r5
   1338c:	bic	r1, r1, #63	; 0x3f
   13390:	mov	r0, r9
   13394:	bl	12820 <putchar_unlocked@plt+0x17f8>
   13398:	ldr	r2, [r5, #24]
   1339c:	add	r1, r8, r7
   133a0:	and	r2, r2, #63	; 0x3f
   133a4:	bic	r1, r1, #63	; 0x3f
   133a8:	str	r2, [r5, #24]
   133ac:	add	r1, r9, r1
   133b0:	mov	r0, r9
   133b4:	bl	10de8 <memcpy@plt>
   133b8:	add	r6, r6, r7
   133bc:	sub	r4, r4, r7
   133c0:	cmp	r4, #63	; 0x3f
   133c4:	bls	133f8 <putchar_unlocked@plt+0x23d0>
   133c8:	tst	r6, #3
   133cc:	movne	r7, r4
   133d0:	addne	r8, r5, #28
   133d4:	movne	r9, #64	; 0x40
   133d8:	bne	13430 <putchar_unlocked@plt+0x2408>
   133dc:	bic	r7, r4, #63	; 0x3f
   133e0:	mov	r0, r6
   133e4:	mov	r2, r5
   133e8:	mov	r1, r7
   133ec:	bl	12820 <putchar_unlocked@plt+0x17f8>
   133f0:	add	r6, r6, r7
   133f4:	and	r4, r4, #63	; 0x3f
   133f8:	cmp	r4, #0
   133fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13400:	b	13454 <putchar_unlocked@plt+0x242c>
   13404:	mov	r2, r8
   13408:	add	r1, r3, #64	; 0x40
   1340c:	ldr	r0, [r3], #4
   13410:	cmp	r3, r1
   13414:	str	r0, [r2], #4
   13418:	bne	1340c <putchar_unlocked@plt+0x23e4>
   1341c:	mov	r2, r5
   13420:	mov	r1, r9
   13424:	mov	r0, r8
   13428:	bl	12820 <putchar_unlocked@plt+0x17f8>
   1342c:	sub	r7, r7, #64	; 0x40
   13430:	sub	r3, r4, r7
   13434:	cmp	r7, #64	; 0x40
   13438:	add	r3, r6, r3
   1343c:	bhi	13404 <putchar_unlocked@plt+0x23dc>
   13440:	sub	r3, r4, #1
   13444:	bic	r2, r3, #63	; 0x3f
   13448:	lsr	r3, r3, #6
   1344c:	add	r6, r6, r2
   13450:	sub	r4, r4, r3, lsl #6
   13454:	ldr	r7, [r5, #24]
   13458:	add	r8, r5, #28
   1345c:	mov	r2, r4
   13460:	mov	r1, r6
   13464:	add	r0, r8, r7
   13468:	add	r4, r7, r4
   1346c:	bl	10de8 <memcpy@plt>
   13470:	cmp	r4, #63	; 0x3f
   13474:	bls	1349c <putchar_unlocked@plt+0x2474>
   13478:	mov	r2, r5
   1347c:	mov	r1, #64	; 0x40
   13480:	mov	r0, r8
   13484:	sub	r4, r4, #64	; 0x40
   13488:	bl	12820 <putchar_unlocked@plt+0x17f8>
   1348c:	mov	r2, r4
   13490:	add	r1, r5, #92	; 0x5c
   13494:	mov	r0, r8
   13498:	bl	10de8 <memcpy@plt>
   1349c:	str	r4, [r5, #24]
   134a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134a4:	push	{r4, r5, r6, lr}
   134a8:	sub	sp, sp, #160	; 0xa0
   134ac:	mov	r5, r0
   134b0:	mov	r6, r1
   134b4:	add	r0, sp, #4
   134b8:	mov	r4, r2
   134bc:	bl	127c0 <putchar_unlocked@plt+0x1798>
   134c0:	add	r2, sp, #4
   134c4:	mov	r1, r6
   134c8:	mov	r0, r5
   134cc:	bl	13338 <putchar_unlocked@plt+0x2310>
   134d0:	mov	r1, r4
   134d4:	add	r0, sp, #4
   134d8:	bl	132a4 <putchar_unlocked@plt+0x227c>
   134dc:	add	sp, sp, #160	; 0xa0
   134e0:	pop	{r4, r5, r6, pc}
   134e4:	push	{r4, r5}
   134e8:	pop	{r4, r5}
   134ec:	b	10db8 <posix_fadvise64@plt>
   134f0:	cmp	r0, #0
   134f4:	bxeq	lr
   134f8:	push	{r0, r1, r2, r3, r4, lr}
   134fc:	mov	r4, r1
   13500:	bl	10f44 <fileno@plt>
   13504:	mov	r2, #0
   13508:	mov	r3, #0
   1350c:	str	r4, [sp, #8]
   13510:	strd	r2, [sp]
   13514:	bl	10db8 <posix_fadvise64@plt>
   13518:	add	sp, sp, #16
   1351c:	pop	{r4, pc}
   13520:	push	{r0, r1, r2, r4, r5, lr}
   13524:	mov	r4, r0
   13528:	bl	10f44 <fileno@plt>
   1352c:	cmp	r0, #0
   13530:	mov	r0, r4
   13534:	bge	13544 <putchar_unlocked@plt+0x251c>
   13538:	add	sp, sp, #12
   1353c:	pop	{r4, r5, lr}
   13540:	b	10f5c <fclose@plt>
   13544:	bl	10ea8 <__freading@plt>
   13548:	cmp	r0, #0
   1354c:	bne	13588 <putchar_unlocked@plt+0x2560>
   13550:	mov	r0, r4
   13554:	bl	135c8 <putchar_unlocked@plt+0x25a0>
   13558:	cmp	r0, #0
   1355c:	bne	135bc <putchar_unlocked@plt+0x2594>
   13560:	mov	r5, #0
   13564:	mov	r0, r4
   13568:	bl	10f5c <fclose@plt>
   1356c:	cmp	r5, #0
   13570:	beq	13580 <putchar_unlocked@plt+0x2558>
   13574:	bl	10f08 <__errno_location@plt>
   13578:	str	r5, [r0]
   1357c:	mvn	r0, #0
   13580:	add	sp, sp, #12
   13584:	pop	{r4, r5, pc}
   13588:	mov	r0, r4
   1358c:	bl	10f44 <fileno@plt>
   13590:	mov	r3, #1
   13594:	str	r3, [sp]
   13598:	mov	r2, #0
   1359c:	mov	r3, #0
   135a0:	bl	10e48 <lseek64@plt>
   135a4:	mvn	r3, #0
   135a8:	mvn	r2, #0
   135ac:	cmp	r1, r3
   135b0:	cmpeq	r0, r2
   135b4:	bne	13550 <putchar_unlocked@plt+0x2528>
   135b8:	b	13560 <putchar_unlocked@plt+0x2538>
   135bc:	bl	10f08 <__errno_location@plt>
   135c0:	ldr	r5, [r0]
   135c4:	b	13564 <putchar_unlocked@plt+0x253c>
   135c8:	push	{r0, r1, r4, lr}
   135cc:	subs	r4, r0, #0
   135d0:	bne	135e4 <putchar_unlocked@plt+0x25bc>
   135d4:	mov	r0, r4
   135d8:	add	sp, sp, #8
   135dc:	pop	{r4, lr}
   135e0:	b	10dc4 <fflush@plt>
   135e4:	bl	10ea8 <__freading@plt>
   135e8:	cmp	r0, #0
   135ec:	beq	135d4 <putchar_unlocked@plt+0x25ac>
   135f0:	ldr	r3, [r4]
   135f4:	tst	r3, #256	; 0x100
   135f8:	beq	135d4 <putchar_unlocked@plt+0x25ac>
   135fc:	mov	r3, #1
   13600:	str	r3, [sp]
   13604:	mov	r2, #0
   13608:	mov	r3, #0
   1360c:	mov	r0, r4
   13610:	bl	13700 <putchar_unlocked@plt+0x26d8>
   13614:	b	135d4 <putchar_unlocked@plt+0x25ac>
   13618:	push	{r4, r5, r6, lr}
   1361c:	mov	r6, r1
   13620:	bl	10fb0 <fopen64@plt>
   13624:	subs	r4, r0, #0
   13628:	beq	13660 <putchar_unlocked@plt+0x2638>
   1362c:	bl	10f44 <fileno@plt>
   13630:	cmp	r0, #2
   13634:	bhi	13660 <putchar_unlocked@plt+0x2638>
   13638:	bl	14dd0 <putchar_unlocked@plt+0x3da8>
   1363c:	subs	r5, r0, #0
   13640:	bge	13668 <putchar_unlocked@plt+0x2640>
   13644:	bl	10f08 <__errno_location@plt>
   13648:	ldr	r6, [r0]
   1364c:	mov	r5, r0
   13650:	mov	r0, r4
   13654:	bl	13520 <putchar_unlocked@plt+0x24f8>
   13658:	str	r6, [r5]
   1365c:	mov	r4, #0
   13660:	mov	r0, r4
   13664:	pop	{r4, r5, r6, pc}
   13668:	mov	r0, r4
   1366c:	bl	13520 <putchar_unlocked@plt+0x24f8>
   13670:	cmp	r0, #0
   13674:	beq	13694 <putchar_unlocked@plt+0x266c>
   13678:	bl	10f08 <__errno_location@plt>
   1367c:	ldr	r6, [r0]
   13680:	mov	r4, r0
   13684:	mov	r0, r5
   13688:	bl	11010 <close@plt>
   1368c:	str	r6, [r4]
   13690:	b	1365c <putchar_unlocked@plt+0x2634>
   13694:	mov	r1, r6
   13698:	mov	r0, r5
   1369c:	bl	10d7c <fdopen@plt>
   136a0:	subs	r4, r0, #0
   136a4:	bne	13660 <putchar_unlocked@plt+0x2638>
   136a8:	b	13678 <putchar_unlocked@plt+0x2650>
   136ac:	push	{r0, r1, r2, r4, r5, lr}
   136b0:	mov	r5, r0
   136b4:	bl	10f08 <__errno_location@plt>
   136b8:	ldr	r3, [r0]
   136bc:	mov	r4, r0
   136c0:	str	r3, [sp]
   136c4:	str	r3, [sp, #4]
   136c8:	mov	r3, #0
   136cc:	str	r3, [r0]
   136d0:	mov	r0, r5
   136d4:	bl	10dd0 <free@plt>
   136d8:	ldr	r3, [r4]
   136dc:	add	r2, sp, #8
   136e0:	cmp	r3, #0
   136e4:	moveq	r3, #4
   136e8:	movne	r3, #0
   136ec:	add	r3, r2, r3
   136f0:	ldr	r3, [r3, #-8]
   136f4:	str	r3, [r4]
   136f8:	add	sp, sp, #12
   136fc:	pop	{r4, r5, pc}
   13700:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13704:	mov	r4, r0
   13708:	ldmib	r0, {ip, lr}
   1370c:	ldr	r8, [sp, #32]
   13710:	cmp	lr, ip
   13714:	bne	13780 <putchar_unlocked@plt+0x2758>
   13718:	ldr	lr, [r0, #20]
   1371c:	ldr	ip, [r0, #16]
   13720:	cmp	lr, ip
   13724:	bne	13780 <putchar_unlocked@plt+0x2758>
   13728:	ldr	r5, [r0, #36]	; 0x24
   1372c:	cmp	r5, #0
   13730:	bne	13780 <putchar_unlocked@plt+0x2758>
   13734:	mov	r6, r2
   13738:	mov	r7, r3
   1373c:	bl	10f44 <fileno@plt>
   13740:	mov	r2, r6
   13744:	mov	r3, r7
   13748:	str	r8, [sp]
   1374c:	bl	10e48 <lseek64@plt>
   13750:	mvn	r3, #0
   13754:	mvn	r2, #0
   13758:	cmp	r1, r3
   1375c:	cmpeq	r0, r2
   13760:	mvneq	r0, #0
   13764:	ldrne	r3, [r4]
   13768:	strdne	r0, [r4, #80]	; 0x50
   1376c:	movne	r0, r5
   13770:	bicne	r3, r3, #16
   13774:	strne	r3, [r4]
   13778:	add	sp, sp, #8
   1377c:	pop	{r4, r5, r6, r7, r8, pc}
   13780:	str	r8, [sp, #32]
   13784:	mov	r0, r4
   13788:	add	sp, sp, #8
   1378c:	pop	{r4, r5, r6, r7, r8, lr}
   13790:	b	10f68 <fseeko64@plt>
   13794:	push	{r4, r5, r6, lr}
   13798:	subs	r5, r0, #0
   1379c:	bne	137b4 <putchar_unlocked@plt+0x278c>
   137a0:	ldr	r3, [pc, #124]	; 13824 <putchar_unlocked@plt+0x27fc>
   137a4:	ldr	r0, [pc, #124]	; 13828 <putchar_unlocked@plt+0x2800>
   137a8:	ldr	r1, [r3]
   137ac:	bl	10fe0 <fputs@plt>
   137b0:	bl	10ff8 <abort@plt>
   137b4:	mov	r1, #47	; 0x2f
   137b8:	bl	10f8c <strrchr@plt>
   137bc:	cmp	r0, #0
   137c0:	addne	r4, r0, #1
   137c4:	moveq	r4, r5
   137c8:	sub	r3, r4, r5
   137cc:	cmp	r3, #6
   137d0:	ble	13810 <putchar_unlocked@plt+0x27e8>
   137d4:	mov	r2, #7
   137d8:	ldr	r1, [pc, #76]	; 1382c <putchar_unlocked@plt+0x2804>
   137dc:	sub	r0, r4, #7
   137e0:	bl	10fec <strncmp@plt>
   137e4:	cmp	r0, #0
   137e8:	bne	13810 <putchar_unlocked@plt+0x27e8>
   137ec:	mov	r2, #3
   137f0:	ldr	r1, [pc, #56]	; 13830 <putchar_unlocked@plt+0x2808>
   137f4:	mov	r0, r4
   137f8:	bl	10fec <strncmp@plt>
   137fc:	cmp	r0, #0
   13800:	movne	r5, r4
   13804:	ldreq	r3, [pc, #40]	; 13834 <putchar_unlocked@plt+0x280c>
   13808:	addeq	r5, r4, #3
   1380c:	streq	r5, [r3]
   13810:	ldr	r3, [pc, #32]	; 13838 <putchar_unlocked@plt+0x2810>
   13814:	str	r5, [r3]
   13818:	ldr	r3, [pc, #28]	; 1383c <putchar_unlocked@plt+0x2814>
   1381c:	str	r5, [r3]
   13820:	pop	{r4, r5, r6, pc}
   13824:	andeq	r8, r2, r0, ror #2
   13828:	andeq	r6, r1, r5, ror #31
   1382c:	andeq	r7, r1, sp, lsl r0
   13830:	andeq	r7, r1, r5, lsr #32
   13834:	andeq	r8, r2, r0, asr r1
   13838:	andeq	r8, r2, ip, lsl #3
   1383c:	andeq	r8, r2, r4, asr r1
   13840:	push	{r4, r5, r6, lr}
   13844:	mov	r2, #48	; 0x30
   13848:	mov	r5, r1
   1384c:	mov	r1, #0
   13850:	mov	r4, r0
   13854:	bl	10f2c <memset@plt>
   13858:	cmp	r5, #10
   1385c:	bne	13864 <putchar_unlocked@plt+0x283c>
   13860:	bl	10ff8 <abort@plt>
   13864:	str	r5, [r4]
   13868:	mov	r0, r4
   1386c:	pop	{r4, r5, r6, pc}
   13870:	push	{r4, r5, r6, lr}
   13874:	mov	r4, r0
   13878:	mov	r5, r1
   1387c:	bl	15ad4 <putchar_unlocked@plt+0x4aac>
   13880:	ldrb	r3, [r0]
   13884:	bic	r3, r3, #32
   13888:	cmp	r3, #85	; 0x55
   1388c:	bne	138fc <putchar_unlocked@plt+0x28d4>
   13890:	ldrb	r3, [r0, #1]
   13894:	bic	r3, r3, #32
   13898:	cmp	r3, #84	; 0x54
   1389c:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   138a0:	ldrb	r3, [r0, #2]
   138a4:	bic	r3, r3, #32
   138a8:	cmp	r3, #70	; 0x46
   138ac:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   138b0:	ldrb	r3, [r0, #3]
   138b4:	cmp	r3, #45	; 0x2d
   138b8:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   138bc:	ldrb	r3, [r0, #4]
   138c0:	cmp	r3, #56	; 0x38
   138c4:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   138c8:	ldrb	r3, [r0, #5]
   138cc:	cmp	r3, #0
   138d0:	beq	138e8 <putchar_unlocked@plt+0x28c0>
   138d4:	ldr	r1, [pc, #144]	; 1396c <putchar_unlocked@plt+0x2944>
   138d8:	ldr	r0, [pc, #144]	; 13970 <putchar_unlocked@plt+0x2948>
   138dc:	cmp	r5, #9
   138e0:	movne	r0, r1
   138e4:	pop	{r4, r5, r6, pc}
   138e8:	ldrb	r3, [r4]
   138ec:	ldr	r1, [pc, #128]	; 13974 <putchar_unlocked@plt+0x294c>
   138f0:	ldr	r0, [pc, #128]	; 13978 <putchar_unlocked@plt+0x2950>
   138f4:	cmp	r3, #96	; 0x60
   138f8:	b	138e0 <putchar_unlocked@plt+0x28b8>
   138fc:	cmp	r3, #71	; 0x47
   13900:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13904:	ldrb	r3, [r0, #1]
   13908:	bic	r3, r3, #32
   1390c:	cmp	r3, #66	; 0x42
   13910:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13914:	ldrb	r3, [r0, #2]
   13918:	cmp	r3, #49	; 0x31
   1391c:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13920:	ldrb	r3, [r0, #3]
   13924:	cmp	r3, #56	; 0x38
   13928:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   1392c:	ldrb	r3, [r0, #4]
   13930:	cmp	r3, #48	; 0x30
   13934:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13938:	ldrb	r3, [r0, #5]
   1393c:	cmp	r3, #51	; 0x33
   13940:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13944:	ldrb	r3, [r0, #6]
   13948:	cmp	r3, #48	; 0x30
   1394c:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   13950:	ldrb	r3, [r0, #7]
   13954:	cmp	r3, #0
   13958:	bne	138d4 <putchar_unlocked@plt+0x28ac>
   1395c:	ldrb	r3, [r4]
   13960:	ldr	r1, [pc, #20]	; 1397c <putchar_unlocked@plt+0x2954>
   13964:	ldr	r0, [pc, #20]	; 13980 <putchar_unlocked@plt+0x2958>
   13968:	b	138f4 <putchar_unlocked@plt+0x28cc>
   1396c:	muleq	r1, r1, r0
   13970:	andeq	r7, r1, pc, lsl #1
   13974:	andeq	r7, r1, r4, lsl #1
   13978:	andeq	r7, r1, r0, lsl #1
   1397c:	andeq	r7, r1, ip, lsl #1
   13980:	andeq	r7, r1, r8, lsl #1
   13984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13988:	sub	sp, sp, #108	; 0x6c
   1398c:	mov	r8, r0
   13990:	str	r3, [sp, #36]	; 0x24
   13994:	mov	r5, r1
   13998:	str	r2, [sp, #44]	; 0x2c
   1399c:	ldr	sl, [sp, #144]	; 0x90
   139a0:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   139a4:	ldr	r3, [sp, #148]	; 0x94
   139a8:	mov	r7, #0
   139ac:	str	r7, [sp, #48]	; 0x30
   139b0:	lsr	r6, r3, #1
   139b4:	and	r6, r6, #1
   139b8:	mov	r3, #1
   139bc:	str	r3, [sp, #72]	; 0x48
   139c0:	str	r7, [sp, #24]
   139c4:	str	r7, [sp, #32]
   139c8:	str	r7, [sp, #40]	; 0x28
   139cc:	str	r7, [sp, #60]	; 0x3c
   139d0:	str	r0, [sp, #76]	; 0x4c
   139d4:	cmp	sl, #10
   139d8:	ldrls	pc, [pc, sl, lsl #2]
   139dc:	b	13c18 <putchar_unlocked@plt+0x2bf0>
   139e0:	andeq	r3, r1, ip, lsl #20
   139e4:	andeq	r4, r1, r0, lsr #13
   139e8:	andeq	r3, r1, r4, ror #23
   139ec:	andeq	r3, r1, r0, lsr ip
   139f0:	andeq	r3, r1, r0, asr #23
   139f4:	andeq	r3, r1, r8, lsl sl
   139f8:	andeq	r4, r1, r0, lsl #13
   139fc:	andeq	r3, r1, ip, lsl ip
   13a00:	andeq	r3, r1, r0, lsl fp
   13a04:	andeq	r3, r1, r0, lsl fp
   13a08:	andeq	r3, r1, r0, lsl fp
   13a0c:	mov	r6, #0
   13a10:	mov	r4, #0
   13a14:	b	13a44 <putchar_unlocked@plt+0x2a1c>
   13a18:	cmp	r6, #0
   13a1c:	bne	13c40 <putchar_unlocked@plt+0x2c18>
   13a20:	cmp	r5, #0
   13a24:	movne	r3, #34	; 0x22
   13a28:	strbne	r3, [r8]
   13a2c:	mov	r3, #1
   13a30:	str	r3, [sp, #24]
   13a34:	str	r3, [sp, #32]
   13a38:	mov	r4, #1
   13a3c:	ldr	r3, [pc, #3172]	; 146a8 <putchar_unlocked@plt+0x3680>
   13a40:	str	r3, [sp, #40]	; 0x28
   13a44:	mov	r9, r5
   13a48:	mov	r3, #0
   13a4c:	str	r7, [sp, #68]	; 0x44
   13a50:	str	r3, [sp, #28]
   13a54:	ldr	r3, [sp, #36]	; 0x24
   13a58:	cmn	r3, #1
   13a5c:	bne	145ec <putchar_unlocked@plt+0x35c4>
   13a60:	ldr	r3, [sp, #44]	; 0x2c
   13a64:	ldr	r2, [sp, #28]
   13a68:	ldrb	r3, [r3, r2]
   13a6c:	adds	r3, r3, #0
   13a70:	movne	r3, #1
   13a74:	str	r3, [sp, #52]	; 0x34
   13a78:	ldr	r3, [sp, #52]	; 0x34
   13a7c:	cmp	r3, #0
   13a80:	bne	13c68 <putchar_unlocked@plt+0x2c40>
   13a84:	sub	r2, sl, #2
   13a88:	clz	r2, r2
   13a8c:	lsr	r2, r2, #5
   13a90:	and	r3, r6, r2
   13a94:	cmp	r4, #0
   13a98:	movne	r3, #0
   13a9c:	andeq	r3, r3, #1
   13aa0:	cmp	r3, #0
   13aa4:	bne	13e30 <putchar_unlocked@plt+0x2e08>
   13aa8:	eor	r3, r6, #1
   13aac:	ands	r2, r2, r3
   13ab0:	beq	14624 <putchar_unlocked@plt+0x35fc>
   13ab4:	ldr	r3, [sp, #68]	; 0x44
   13ab8:	cmp	r3, #0
   13abc:	beq	1465c <putchar_unlocked@plt+0x3634>
   13ac0:	ldr	r3, [sp, #72]	; 0x48
   13ac4:	cmp	r3, #0
   13ac8:	beq	14600 <putchar_unlocked@plt+0x35d8>
   13acc:	ldr	r3, [sp, #160]	; 0xa0
   13ad0:	ldr	r2, [sp, #44]	; 0x2c
   13ad4:	str	r3, [sp, #16]
   13ad8:	ldr	r3, [sp, #156]	; 0x9c
   13adc:	ldr	r1, [sp, #60]	; 0x3c
   13ae0:	str	r3, [sp, #12]
   13ae4:	ldr	r3, [sp, #152]	; 0x98
   13ae8:	str	r3, [sp, #8]
   13aec:	ldr	r3, [sp, #148]	; 0x94
   13af0:	str	r3, [sp, #4]
   13af4:	mov	r3, #5
   13af8:	str	r3, [sp]
   13afc:	ldr	r3, [sp, #36]	; 0x24
   13b00:	mov	r0, r8
   13b04:	bl	13984 <putchar_unlocked@plt+0x295c>
   13b08:	mov	r4, r0
   13b0c:	b	14650 <putchar_unlocked@plt+0x3628>
   13b10:	cmp	sl, #10
   13b14:	beq	13b70 <putchar_unlocked@plt+0x2b48>
   13b18:	ldr	r4, [pc, #2956]	; 146ac <putchar_unlocked@plt+0x3684>
   13b1c:	mov	r2, #5
   13b20:	mov	r1, r4
   13b24:	mov	r0, #0
   13b28:	bl	10e18 <dcgettext@plt>
   13b2c:	cmp	r0, r4
   13b30:	str	r0, [sp, #156]	; 0x9c
   13b34:	bne	13b44 <putchar_unlocked@plt+0x2b1c>
   13b38:	mov	r1, sl
   13b3c:	bl	13870 <putchar_unlocked@plt+0x2848>
   13b40:	str	r0, [sp, #156]	; 0x9c
   13b44:	ldr	r4, [pc, #2916]	; 146b0 <putchar_unlocked@plt+0x3688>
   13b48:	mov	r2, #5
   13b4c:	mov	r1, r4
   13b50:	mov	r0, #0
   13b54:	bl	10e18 <dcgettext@plt>
   13b58:	cmp	r0, r4
   13b5c:	str	r0, [sp, #160]	; 0xa0
   13b60:	bne	13b70 <putchar_unlocked@plt+0x2b48>
   13b64:	mov	r1, sl
   13b68:	bl	13870 <putchar_unlocked@plt+0x2848>
   13b6c:	str	r0, [sp, #160]	; 0xa0
   13b70:	cmp	r6, #0
   13b74:	moveq	r4, r6
   13b78:	beq	13b90 <putchar_unlocked@plt+0x2b68>
   13b7c:	mov	r4, #0
   13b80:	b	13ba0 <putchar_unlocked@plt+0x2b78>
   13b84:	cmp	r5, r4
   13b88:	strbhi	r3, [r8, r4]
   13b8c:	add	r4, r4, #1
   13b90:	ldr	r3, [sp, #156]	; 0x9c
   13b94:	ldrb	r3, [r3, r4]
   13b98:	cmp	r3, #0
   13b9c:	bne	13b84 <putchar_unlocked@plt+0x2b5c>
   13ba0:	ldr	r0, [sp, #160]	; 0xa0
   13ba4:	bl	10ef0 <strlen@plt>
   13ba8:	ldr	r3, [sp, #160]	; 0xa0
   13bac:	str	r3, [sp, #40]	; 0x28
   13bb0:	mov	r3, #1
   13bb4:	str	r3, [sp, #24]
   13bb8:	str	r0, [sp, #32]
   13bbc:	b	13a44 <putchar_unlocked@plt+0x2a1c>
   13bc0:	mov	r3, #1
   13bc4:	cmp	r6, #0
   13bc8:	streq	r3, [sp, #24]
   13bcc:	beq	13bec <putchar_unlocked@plt+0x2bc4>
   13bd0:	str	r3, [sp, #32]
   13bd4:	ldr	r3, [pc, #2772]	; 146b0 <putchar_unlocked@plt+0x3688>
   13bd8:	mov	r4, #0
   13bdc:	str	r3, [sp, #40]	; 0x28
   13be0:	b	13c10 <putchar_unlocked@plt+0x2be8>
   13be4:	cmp	r6, #0
   13be8:	bne	13c58 <putchar_unlocked@plt+0x2c30>
   13bec:	cmp	r5, #0
   13bf0:	movne	r3, #39	; 0x27
   13bf4:	strbne	r3, [r8]
   13bf8:	mov	r3, #1
   13bfc:	str	r3, [sp, #32]
   13c00:	mov	r6, #0
   13c04:	ldr	r3, [pc, #2724]	; 146b0 <putchar_unlocked@plt+0x3688>
   13c08:	mov	r4, #1
   13c0c:	str	r3, [sp, #40]	; 0x28
   13c10:	mov	sl, #2
   13c14:	b	13a44 <putchar_unlocked@plt+0x2a1c>
   13c18:	bl	10ff8 <abort@plt>
   13c1c:	mov	r6, #0
   13c20:	mov	r3, #1
   13c24:	str	r3, [sp, #24]
   13c28:	mov	r4, r6
   13c2c:	b	13a44 <putchar_unlocked@plt+0x2a1c>
   13c30:	mov	r6, #1
   13c34:	str	r6, [sp, #24]
   13c38:	str	r6, [sp, #32]
   13c3c:	b	13bd4 <putchar_unlocked@plt+0x2bac>
   13c40:	mov	r3, #1
   13c44:	str	r3, [sp, #32]
   13c48:	ldr	r3, [pc, #2648]	; 146a8 <putchar_unlocked@plt+0x3680>
   13c4c:	str	r6, [sp, #24]
   13c50:	str	r3, [sp, #40]	; 0x28
   13c54:	b	13a10 <putchar_unlocked@plt+0x29e8>
   13c58:	mov	r3, #1
   13c5c:	str	r3, [sp, #32]
   13c60:	ldr	r3, [pc, #2632]	; 146b0 <putchar_unlocked@plt+0x3688>
   13c64:	b	13c50 <putchar_unlocked@plt+0x2c28>
   13c68:	ldr	r3, [sp, #32]
   13c6c:	ldr	fp, [sp, #24]
   13c70:	cmp	sl, #2
   13c74:	moveq	fp, #0
   13c78:	andne	fp, fp, #1
   13c7c:	adds	r5, r3, #0
   13c80:	movne	r5, #1
   13c84:	ands	r3, r5, fp
   13c88:	str	r3, [sp, #64]	; 0x40
   13c8c:	beq	13d5c <putchar_unlocked@plt+0x2d34>
   13c90:	ldr	r2, [sp, #32]
   13c94:	ldr	r3, [sp, #28]
   13c98:	add	r7, r3, r2
   13c9c:	mov	r3, r2
   13ca0:	ldr	r2, [sp, #36]	; 0x24
   13ca4:	cmp	r3, #1
   13ca8:	movls	r3, #0
   13cac:	movhi	r3, #1
   13cb0:	cmn	r2, #1
   13cb4:	movne	r3, #0
   13cb8:	cmp	r3, #0
   13cbc:	beq	13ccc <putchar_unlocked@plt+0x2ca4>
   13cc0:	ldr	r0, [sp, #44]	; 0x2c
   13cc4:	bl	10ef0 <strlen@plt>
   13cc8:	str	r0, [sp, #36]	; 0x24
   13ccc:	ldr	r3, [sp, #36]	; 0x24
   13cd0:	cmp	r3, r7
   13cd4:	bcc	13d54 <putchar_unlocked@plt+0x2d2c>
   13cd8:	ldr	r3, [sp, #44]	; 0x2c
   13cdc:	ldr	r0, [sp, #28]
   13ce0:	ldr	r2, [sp, #32]
   13ce4:	ldr	r1, [sp, #40]	; 0x28
   13ce8:	add	r0, r3, r0
   13cec:	bl	10e00 <memcmp@plt>
   13cf0:	cmp	r0, #0
   13cf4:	bne	13d54 <putchar_unlocked@plt+0x2d2c>
   13cf8:	cmp	r6, #0
   13cfc:	beq	13d5c <putchar_unlocked@plt+0x2d34>
   13d00:	str	r6, [sp, #24]
   13d04:	ldr	r3, [sp, #24]
   13d08:	ldr	r2, [sp, #44]	; 0x2c
   13d0c:	cmp	sl, #2
   13d10:	movne	r3, #0
   13d14:	andeq	r3, r3, #1
   13d18:	cmp	r3, #0
   13d1c:	ldr	r3, [sp, #160]	; 0xa0
   13d20:	movne	sl, #4
   13d24:	str	r3, [sp, #16]
   13d28:	ldr	r3, [sp, #156]	; 0x9c
   13d2c:	str	sl, [sp]
   13d30:	str	r3, [sp, #12]
   13d34:	mov	r3, #0
   13d38:	str	r3, [sp, #8]
   13d3c:	ldr	r3, [sp, #148]	; 0x94
   13d40:	mov	r1, r9
   13d44:	bic	r3, r3, #2
   13d48:	str	r3, [sp, #4]
   13d4c:	ldr	r3, [sp, #36]	; 0x24
   13d50:	b	13b00 <putchar_unlocked@plt+0x2ad8>
   13d54:	mov	r3, #0
   13d58:	str	r3, [sp, #64]	; 0x40
   13d5c:	ldr	r2, [sp, #28]
   13d60:	ldr	r3, [sp, #44]	; 0x2c
   13d64:	add	r3, r3, r2
   13d68:	str	r3, [sp, #80]	; 0x50
   13d6c:	ldr	r3, [sp, #44]	; 0x2c
   13d70:	ldrb	r7, [r3, r2]
   13d74:	cmp	r7, #58	; 0x3a
   13d78:	bhi	13ee0 <putchar_unlocked@plt+0x2eb8>
   13d7c:	cmp	r7, #43	; 0x2b
   13d80:	bcs	13f34 <putchar_unlocked@plt+0x2f0c>
   13d84:	cmp	r7, #32
   13d88:	beq	13f8c <putchar_unlocked@plt+0x2f64>
   13d8c:	bhi	13e38 <putchar_unlocked@plt+0x2e10>
   13d90:	cmp	r7, #9
   13d94:	beq	14240 <putchar_unlocked@plt+0x3218>
   13d98:	bhi	13dfc <putchar_unlocked@plt+0x2dd4>
   13d9c:	cmp	r7, #7
   13da0:	beq	142ec <putchar_unlocked@plt+0x32c4>
   13da4:	bhi	13fa8 <putchar_unlocked@plt+0x2f80>
   13da8:	cmp	r7, #0
   13dac:	beq	13fc4 <putchar_unlocked@plt+0x2f9c>
   13db0:	ldr	r3, [sp, #76]	; 0x4c
   13db4:	cmp	r3, #1
   13db8:	bne	14330 <putchar_unlocked@plt+0x3308>
   13dbc:	bl	10ed8 <__ctype_b_loc@plt>
   13dc0:	sxth	r3, r7
   13dc4:	lsl	r3, r3, #1
   13dc8:	ldr	r2, [r0]
   13dcc:	ldrh	r5, [r2, r3]
   13dd0:	ldr	r3, [sp, #76]	; 0x4c
   13dd4:	str	r3, [sp, #56]	; 0x38
   13dd8:	lsr	r5, r5, #14
   13ddc:	and	r5, r5, #1
   13de0:	ldr	r3, [sp, #24]
   13de4:	eor	fp, r5, #1
   13de8:	and	fp, fp, r3
   13dec:	ands	fp, fp, #255	; 0xff
   13df0:	beq	14178 <putchar_unlocked@plt+0x3150>
   13df4:	mov	r5, #0
   13df8:	b	143dc <putchar_unlocked@plt+0x33b4>
   13dfc:	cmp	r7, #11
   13e00:	beq	14248 <putchar_unlocked@plt+0x3220>
   13e04:	bcc	142e4 <putchar_unlocked@plt+0x32bc>
   13e08:	cmp	r7, #12
   13e0c:	beq	142f4 <putchar_unlocked@plt+0x32cc>
   13e10:	cmp	r7, #13
   13e14:	moveq	r3, #114	; 0x72
   13e18:	bne	13db0 <putchar_unlocked@plt+0x2d88>
   13e1c:	cmp	sl, #2
   13e20:	movne	r2, #0
   13e24:	andeq	r2, r6, #1
   13e28:	cmp	r2, #0
   13e2c:	beq	13fac <putchar_unlocked@plt+0x2f84>
   13e30:	mov	sl, #2
   13e34:	b	13d04 <putchar_unlocked@plt+0x2cdc>
   13e38:	cmp	r7, #37	; 0x25
   13e3c:	beq	13f34 <putchar_unlocked@plt+0x2f0c>
   13e40:	bhi	13e54 <putchar_unlocked@plt+0x2e2c>
   13e44:	cmp	r7, #35	; 0x23
   13e48:	beq	13f80 <putchar_unlocked@plt+0x2f58>
   13e4c:	mov	r5, #0
   13e50:	b	13f90 <putchar_unlocked@plt+0x2f68>
   13e54:	cmp	r7, #39	; 0x27
   13e58:	bne	13e4c <putchar_unlocked@plt+0x2e24>
   13e5c:	cmp	sl, #2
   13e60:	ldrne	r5, [sp, #52]	; 0x34
   13e64:	movne	r3, r5
   13e68:	strne	r3, [sp, #68]	; 0x44
   13e6c:	bne	13f38 <putchar_unlocked@plt+0x2f10>
   13e70:	cmp	r6, #0
   13e74:	bne	13d04 <putchar_unlocked@plt+0x2cdc>
   13e78:	ldr	r2, [sp, #60]	; 0x3c
   13e7c:	adds	r3, r9, #0
   13e80:	movne	r3, #1
   13e84:	cmp	r2, #0
   13e88:	movne	r3, #0
   13e8c:	cmp	r3, #0
   13e90:	strne	r9, [sp, #60]	; 0x3c
   13e94:	movne	r9, #0
   13e98:	bne	13ea8 <putchar_unlocked@plt+0x2e80>
   13e9c:	cmp	r9, r4
   13ea0:	movhi	r3, #39	; 0x27
   13ea4:	strbhi	r3, [r8, r4]
   13ea8:	add	r3, r4, #1
   13eac:	cmp	r3, r9
   13eb0:	movcc	r2, #92	; 0x5c
   13eb4:	strbcc	r2, [r8, r3]
   13eb8:	add	r3, r4, #2
   13ebc:	cmp	r3, r9
   13ec0:	ldr	r5, [sp, #52]	; 0x34
   13ec4:	movcc	r2, #39	; 0x27
   13ec8:	strbcc	r2, [r8, r3]
   13ecc:	add	r4, r4, #3
   13ed0:	mov	fp, r6
   13ed4:	str	r5, [sp, #68]	; 0x44
   13ed8:	str	r6, [sp, #48]	; 0x30
   13edc:	b	14178 <putchar_unlocked@plt+0x3150>
   13ee0:	cmp	r7, #94	; 0x5e
   13ee4:	beq	13e4c <putchar_unlocked@plt+0x2e24>
   13ee8:	bhi	13f40 <putchar_unlocked@plt+0x2f18>
   13eec:	cmp	r7, #90	; 0x5a
   13ef0:	bhi	13f28 <putchar_unlocked@plt+0x2f00>
   13ef4:	cmp	r7, #65	; 0x41
   13ef8:	bcs	13f34 <putchar_unlocked@plt+0x2f0c>
   13efc:	cmp	r7, #62	; 0x3e
   13f00:	bls	13e4c <putchar_unlocked@plt+0x2e24>
   13f04:	cmp	r7, #63	; 0x3f
   13f08:	bne	13db0 <putchar_unlocked@plt+0x2d88>
   13f0c:	cmp	sl, #2
   13f10:	beq	140b4 <putchar_unlocked@plt+0x308c>
   13f14:	cmp	sl, #5
   13f18:	beq	140c4 <putchar_unlocked@plt+0x309c>
   13f1c:	mov	fp, #0
   13f20:	mov	r5, fp
   13f24:	b	14178 <putchar_unlocked@plt+0x3150>
   13f28:	cmp	r7, #92	; 0x5c
   13f2c:	beq	14250 <putchar_unlocked@plt+0x3228>
   13f30:	bls	13e4c <putchar_unlocked@plt+0x2e24>
   13f34:	ldr	r5, [sp, #52]	; 0x34
   13f38:	mov	fp, #0
   13f3c:	b	14178 <putchar_unlocked@plt+0x3150>
   13f40:	cmp	r7, #122	; 0x7a
   13f44:	bhi	13f64 <putchar_unlocked@plt+0x2f3c>
   13f48:	cmp	r7, #97	; 0x61
   13f4c:	bcs	13f34 <putchar_unlocked@plt+0x2f0c>
   13f50:	cmp	r7, #95	; 0x5f
   13f54:	beq	13f34 <putchar_unlocked@plt+0x2f0c>
   13f58:	cmp	r7, #96	; 0x60
   13f5c:	bne	13db0 <putchar_unlocked@plt+0x2d88>
   13f60:	b	13e4c <putchar_unlocked@plt+0x2e24>
   13f64:	cmp	r7, #124	; 0x7c
   13f68:	beq	13e4c <putchar_unlocked@plt+0x2e24>
   13f6c:	bcc	142fc <putchar_unlocked@plt+0x32d4>
   13f70:	cmp	r7, #125	; 0x7d
   13f74:	beq	142fc <putchar_unlocked@plt+0x32d4>
   13f78:	cmp	r7, #126	; 0x7e
   13f7c:	bne	13db0 <putchar_unlocked@plt+0x2d88>
   13f80:	ldr	r3, [sp, #28]
   13f84:	cmp	r3, #0
   13f88:	bne	140bc <putchar_unlocked@plt+0x3094>
   13f8c:	ldr	r5, [sp, #52]	; 0x34
   13f90:	cmp	sl, #2
   13f94:	movne	fp, #0
   13f98:	andeq	fp, r6, #1
   13f9c:	cmp	fp, #0
   13fa0:	beq	14178 <putchar_unlocked@plt+0x3150>
   13fa4:	b	13e30 <putchar_unlocked@plt+0x2e08>
   13fa8:	mov	r3, #98	; 0x62
   13fac:	ldr	r2, [sp, #24]
   13fb0:	cmp	r2, #0
   13fb4:	beq	140bc <putchar_unlocked@plt+0x3094>
   13fb8:	mov	r7, r3
   13fbc:	mov	r5, #0
   13fc0:	b	141d0 <putchar_unlocked@plt+0x31a8>
   13fc4:	ldr	r3, [sp, #24]
   13fc8:	cmp	r3, #0
   13fcc:	beq	14098 <putchar_unlocked@plt+0x3070>
   13fd0:	cmp	r6, #0
   13fd4:	bne	13d00 <putchar_unlocked@plt+0x2cd8>
   13fd8:	ldr	r3, [sp, #48]	; 0x30
   13fdc:	eor	r2, r3, #1
   13fe0:	cmp	sl, #2
   13fe4:	movne	r2, #0
   13fe8:	andeq	r2, r2, #1
   13fec:	cmp	r2, #0
   13ff0:	moveq	r3, r4
   13ff4:	beq	1402c <putchar_unlocked@plt+0x3004>
   13ff8:	cmp	r9, r4
   13ffc:	movhi	r3, #39	; 0x27
   14000:	strbhi	r3, [r8, r4]
   14004:	add	r3, r4, #1
   14008:	cmp	r9, r3
   1400c:	movhi	r1, #36	; 0x24
   14010:	strbhi	r1, [r8, r3]
   14014:	add	r3, r4, #2
   14018:	cmp	r9, r3
   1401c:	movhi	r1, #39	; 0x27
   14020:	strbhi	r1, [r8, r3]
   14024:	add	r3, r4, #3
   14028:	str	r2, [sp, #48]	; 0x30
   1402c:	cmp	r9, r3
   14030:	movhi	r2, #92	; 0x5c
   14034:	strbhi	r2, [r8, r3]
   14038:	cmp	fp, #0
   1403c:	add	r4, r3, #1
   14040:	beq	145d0 <putchar_unlocked@plt+0x35a8>
   14044:	ldr	r2, [sp, #28]
   14048:	ldr	r1, [sp, #36]	; 0x24
   1404c:	add	r2, r2, #1
   14050:	cmp	r1, r2
   14054:	bls	14090 <putchar_unlocked@plt+0x3068>
   14058:	ldr	r1, [sp, #44]	; 0x2c
   1405c:	mov	r7, #48	; 0x30
   14060:	ldrb	r2, [r1, r2]
   14064:	sub	r2, r2, #48	; 0x30
   14068:	cmp	r2, #9
   1406c:	movhi	r5, r6
   14070:	bhi	14178 <putchar_unlocked@plt+0x3150>
   14074:	cmp	r9, r4
   14078:	add	r2, r3, #2
   1407c:	strbhi	r7, [r8, r4]
   14080:	cmp	r9, r2
   14084:	add	r4, r3, #3
   14088:	movhi	r1, #48	; 0x30
   1408c:	strbhi	r1, [r8, r2]
   14090:	mov	r5, r6
   14094:	b	145d8 <putchar_unlocked@plt+0x35b0>
   14098:	ldr	r3, [sp, #148]	; 0x94
   1409c:	tst	r3, #1
   140a0:	ldreq	r5, [sp, #24]
   140a4:	beq	145e4 <putchar_unlocked@plt+0x35bc>
   140a8:	ldr	r3, [sp, #28]
   140ac:	add	r3, r3, #1
   140b0:	b	13a50 <putchar_unlocked@plt+0x2a28>
   140b4:	cmp	r6, #0
   140b8:	bne	13d04 <putchar_unlocked@plt+0x2cdc>
   140bc:	mov	r5, #0
   140c0:	b	13f38 <putchar_unlocked@plt+0x2f10>
   140c4:	ldr	r3, [sp, #148]	; 0x94
   140c8:	tst	r3, #4
   140cc:	beq	140bc <putchar_unlocked@plt+0x3094>
   140d0:	ldr	r3, [sp, #28]
   140d4:	add	r2, r3, #2
   140d8:	ldr	r3, [sp, #36]	; 0x24
   140dc:	cmp	r3, r2
   140e0:	bls	140bc <putchar_unlocked@plt+0x3094>
   140e4:	ldr	r3, [sp, #44]	; 0x2c
   140e8:	ldr	r1, [sp, #28]
   140ec:	add	r3, r3, r1
   140f0:	ldrb	r0, [r3, #1]
   140f4:	cmp	r0, #63	; 0x3f
   140f8:	bne	140bc <putchar_unlocked@plt+0x3094>
   140fc:	ldr	r3, [sp, #44]	; 0x2c
   14100:	ldrb	r1, [r3, r2]
   14104:	sub	r3, r1, #33	; 0x21
   14108:	uxtb	r3, r3
   1410c:	cmp	r3, #29
   14110:	bhi	145e0 <putchar_unlocked@plt+0x35b8>
   14114:	mov	ip, #1
   14118:	ldr	r5, [pc, #1428]	; 146b4 <putchar_unlocked@plt+0x368c>
   1411c:	ands	r5, r5, ip, lsl r3
   14120:	beq	13f38 <putchar_unlocked@plt+0x2f10>
   14124:	cmp	r6, #0
   14128:	bne	13d04 <putchar_unlocked@plt+0x2cdc>
   1412c:	add	r3, r4, #1
   14130:	cmp	r9, r4
   14134:	strbhi	r0, [r8, r4]
   14138:	cmp	r9, r3
   1413c:	movhi	r0, #34	; 0x22
   14140:	strbhi	r0, [r8, r3]
   14144:	add	r3, r4, #2
   14148:	cmp	r9, r3
   1414c:	movhi	r0, #34	; 0x22
   14150:	strbhi	r0, [r8, r3]
   14154:	add	r3, r4, #3
   14158:	cmp	r9, r3
   1415c:	add	r4, r4, #4
   14160:	mov	r5, r6
   14164:	mov	fp, r6
   14168:	mov	r7, r1
   1416c:	movhi	r0, #63	; 0x3f
   14170:	strbhi	r0, [r8, r3]
   14174:	str	r2, [sp, #28]
   14178:	ldr	r3, [sp, #24]
   1417c:	eor	r3, r3, #1
   14180:	cmp	sl, #2
   14184:	orreq	r3, r3, #1
   14188:	eor	r3, r3, #1
   1418c:	orr	r3, r6, r3
   14190:	tst	r3, #255	; 0xff
   14194:	beq	141c4 <putchar_unlocked@plt+0x319c>
   14198:	ldr	r3, [sp, #152]	; 0x98
   1419c:	cmp	r3, #0
   141a0:	beq	141c4 <putchar_unlocked@plt+0x319c>
   141a4:	lsr	r2, r7, #5
   141a8:	ldr	r1, [sp, #152]	; 0x98
   141ac:	uxtb	r2, r2
   141b0:	and	r3, r7, #31
   141b4:	ldr	r2, [r1, r2, lsl #2]
   141b8:	lsr	r3, r2, r3
   141bc:	tst	r3, #1
   141c0:	bne	141d0 <putchar_unlocked@plt+0x31a8>
   141c4:	ldr	r3, [sp, #64]	; 0x40
   141c8:	cmp	r3, #0
   141cc:	beq	14268 <putchar_unlocked@plt+0x3240>
   141d0:	cmp	r6, #0
   141d4:	bne	13d04 <putchar_unlocked@plt+0x2cdc>
   141d8:	ldr	r3, [sp, #48]	; 0x30
   141dc:	eor	r3, r3, #1
   141e0:	cmp	sl, #2
   141e4:	movne	r3, #0
   141e8:	andeq	r3, r3, #1
   141ec:	cmp	r3, #0
   141f0:	beq	14228 <putchar_unlocked@plt+0x3200>
   141f4:	cmp	r9, r4
   141f8:	movhi	r2, #39	; 0x27
   141fc:	strbhi	r2, [r8, r4]
   14200:	add	r2, r4, #1
   14204:	cmp	r9, r2
   14208:	movhi	r1, #36	; 0x24
   1420c:	strbhi	r1, [r8, r2]
   14210:	add	r2, r4, #2
   14214:	cmp	r9, r2
   14218:	add	r4, r4, #3
   1421c:	movhi	r1, #39	; 0x27
   14220:	strbhi	r1, [r8, r2]
   14224:	str	r3, [sp, #48]	; 0x30
   14228:	cmp	r9, r4
   1422c:	movhi	r3, #92	; 0x5c
   14230:	strbhi	r3, [r8, r4]
   14234:	ldr	fp, [sp, #52]	; 0x34
   14238:	add	r4, r4, #1
   1423c:	b	14268 <putchar_unlocked@plt+0x3240>
   14240:	mov	r3, #116	; 0x74
   14244:	b	13e1c <putchar_unlocked@plt+0x2df4>
   14248:	mov	r3, #118	; 0x76
   1424c:	b	13fac <putchar_unlocked@plt+0x2f84>
   14250:	cmp	sl, #2
   14254:	bne	142c4 <putchar_unlocked@plt+0x329c>
   14258:	cmp	r6, #0
   1425c:	bne	13d04 <putchar_unlocked@plt+0x2cdc>
   14260:	mov	r5, r6
   14264:	mov	fp, r6
   14268:	ldr	r3, [sp, #48]	; 0x30
   1426c:	eor	fp, fp, #1
   14270:	and	fp, fp, r3
   14274:	tst	fp, #255	; 0xff
   14278:	beq	142a4 <putchar_unlocked@plt+0x327c>
   1427c:	cmp	r9, r4
   14280:	movhi	r3, #39	; 0x27
   14284:	strbhi	r3, [r8, r4]
   14288:	add	r3, r4, #1
   1428c:	cmp	r9, r3
   14290:	movhi	r2, #39	; 0x27
   14294:	add	r4, r4, #2
   14298:	strbhi	r2, [r8, r3]
   1429c:	mov	r3, #0
   142a0:	str	r3, [sp, #48]	; 0x30
   142a4:	cmp	r9, r4
   142a8:	strbhi	r7, [r8, r4]
   142ac:	ldr	r3, [sp, #72]	; 0x48
   142b0:	cmp	r5, #0
   142b4:	moveq	r3, #0
   142b8:	add	r4, r4, #1
   142bc:	str	r3, [sp, #72]	; 0x48
   142c0:	b	140a8 <putchar_unlocked@plt+0x3080>
   142c4:	ldr	r3, [sp, #24]
   142c8:	and	r3, r3, r6
   142cc:	tst	r5, r3
   142d0:	moveq	r3, r7
   142d4:	beq	13e1c <putchar_unlocked@plt+0x2df4>
   142d8:	mov	fp, #0
   142dc:	mov	r5, fp
   142e0:	b	14268 <putchar_unlocked@plt+0x3240>
   142e4:	mov	r3, #110	; 0x6e
   142e8:	b	13e1c <putchar_unlocked@plt+0x2df4>
   142ec:	mov	r3, #97	; 0x61
   142f0:	b	13fac <putchar_unlocked@plt+0x2f84>
   142f4:	mov	r3, #102	; 0x66
   142f8:	b	13fac <putchar_unlocked@plt+0x2f84>
   142fc:	ldr	r3, [sp, #36]	; 0x24
   14300:	cmn	r3, #1
   14304:	bne	14324 <putchar_unlocked@plt+0x32fc>
   14308:	ldr	r3, [sp, #44]	; 0x2c
   1430c:	ldrb	r3, [r3, #1]
   14310:	adds	r3, r3, #0
   14314:	movne	r3, #1
   14318:	cmp	r3, #0
   1431c:	bne	140bc <putchar_unlocked@plt+0x3094>
   14320:	b	13f80 <putchar_unlocked@plt+0x2f58>
   14324:	ldr	r3, [sp, #36]	; 0x24
   14328:	subs	r3, r3, #1
   1432c:	b	14314 <putchar_unlocked@plt+0x32ec>
   14330:	mov	r3, #0
   14334:	str	r3, [sp, #96]	; 0x60
   14338:	str	r3, [sp, #100]	; 0x64
   1433c:	ldr	r3, [sp, #36]	; 0x24
   14340:	cmn	r3, #1
   14344:	bne	14354 <putchar_unlocked@plt+0x332c>
   14348:	ldr	r0, [sp, #44]	; 0x2c
   1434c:	bl	10ef0 <strlen@plt>
   14350:	str	r0, [sp, #36]	; 0x24
   14354:	ldr	r5, [sp, #52]	; 0x34
   14358:	mov	r3, #0
   1435c:	str	r3, [sp, #56]	; 0x38
   14360:	ldr	r3, [sp, #28]
   14364:	ldr	r2, [sp, #56]	; 0x38
   14368:	ldr	r1, [sp, #36]	; 0x24
   1436c:	add	r2, r3, r2
   14370:	ldr	r3, [sp, #44]	; 0x2c
   14374:	add	r0, sp, #92	; 0x5c
   14378:	add	fp, r3, r2
   1437c:	sub	r2, r1, r2
   14380:	add	r3, sp, #96	; 0x60
   14384:	mov	r1, fp
   14388:	bl	15b08 <putchar_unlocked@plt+0x4ae0>
   1438c:	subs	r2, r0, #0
   14390:	beq	143d0 <putchar_unlocked@plt+0x33a8>
   14394:	cmn	r2, #1
   14398:	beq	145a8 <putchar_unlocked@plt+0x3580>
   1439c:	cmn	r2, #2
   143a0:	bne	14518 <putchar_unlocked@plt+0x34f0>
   143a4:	ldr	r2, [sp, #56]	; 0x38
   143a8:	ldr	r3, [sp, #28]
   143ac:	add	r3, r3, r2
   143b0:	ldr	r2, [sp, #36]	; 0x24
   143b4:	cmp	r2, r3
   143b8:	bls	145a8 <putchar_unlocked@plt+0x3580>
   143bc:	ldr	r3, [sp, #80]	; 0x50
   143c0:	ldr	r2, [sp, #56]	; 0x38
   143c4:	ldrb	r5, [r3, r2]
   143c8:	cmp	r5, #0
   143cc:	bne	14508 <putchar_unlocked@plt+0x34e0>
   143d0:	ldr	r3, [sp, #56]	; 0x38
   143d4:	cmp	r3, #1
   143d8:	bls	13de0 <putchar_unlocked@plt+0x2db8>
   143dc:	ldr	r2, [sp, #56]	; 0x38
   143e0:	ldr	r3, [sp, #28]
   143e4:	mov	fp, #0
   143e8:	add	r3, r3, r2
   143ec:	ldr	r2, [sp, #24]
   143f0:	str	r3, [sp, #52]	; 0x34
   143f4:	eor	r3, r5, #1
   143f8:	and	r3, r3, r2
   143fc:	mov	ip, #92	; 0x5c
   14400:	uxtb	r3, r3
   14404:	mov	r2, #39	; 0x27
   14408:	cmp	r3, #0
   1440c:	beq	145b0 <putchar_unlocked@plt+0x3588>
   14410:	cmp	r6, #0
   14414:	bne	13d00 <putchar_unlocked@plt+0x2cd8>
   14418:	ldr	r1, [sp, #48]	; 0x30
   1441c:	eor	r1, r1, #1
   14420:	cmp	sl, #2
   14424:	movne	r1, #0
   14428:	andeq	r1, r1, #1
   1442c:	cmp	r1, #0
   14430:	beq	14460 <putchar_unlocked@plt+0x3438>
   14434:	add	r0, r4, #1
   14438:	cmp	r9, r4
   1443c:	strbhi	r2, [r8, r4]
   14440:	cmp	r9, r0
   14444:	movhi	lr, #36	; 0x24
   14448:	strbhi	lr, [r8, r0]
   1444c:	add	r0, r4, #2
   14450:	add	r4, r4, #3
   14454:	cmp	r9, r0
   14458:	strbhi	r2, [r8, r0]
   1445c:	str	r1, [sp, #48]	; 0x30
   14460:	add	r0, r4, #1
   14464:	cmp	r9, r4
   14468:	strbhi	ip, [r8, r4]
   1446c:	cmp	r9, r0
   14470:	lsrhi	r1, r7, #6
   14474:	addhi	r1, r1, #48	; 0x30
   14478:	strbhi	r1, [r8, r0]
   1447c:	add	r0, r4, #2
   14480:	cmp	r9, r0
   14484:	lsrhi	r1, r7, #3
   14488:	and	r7, r7, #7
   1448c:	andhi	r1, r1, #7
   14490:	add	r4, r4, #3
   14494:	add	r7, r7, #48	; 0x30
   14498:	mov	fp, r3
   1449c:	addhi	r1, r1, #48	; 0x30
   144a0:	strbhi	r1, [r8, r0]
   144a4:	ldr	r1, [sp, #28]
   144a8:	ldr	r0, [sp, #52]	; 0x34
   144ac:	add	r1, r1, #1
   144b0:	cmp	r0, r1
   144b4:	bls	14268 <putchar_unlocked@plt+0x3240>
   144b8:	ldr	lr, [sp, #48]	; 0x30
   144bc:	eor	r0, fp, #1
   144c0:	and	r0, r0, lr
   144c4:	tst	r0, #255	; 0xff
   144c8:	beq	144ec <putchar_unlocked@plt+0x34c4>
   144cc:	add	r0, r4, #1
   144d0:	cmp	r9, r4
   144d4:	strbhi	r2, [r8, r4]
   144d8:	cmp	r9, r0
   144dc:	add	r4, r4, #2
   144e0:	strbhi	r2, [r8, r0]
   144e4:	mov	r0, #0
   144e8:	str	r0, [sp, #48]	; 0x30
   144ec:	ldr	r0, [sp, #44]	; 0x2c
   144f0:	cmp	r9, r4
   144f4:	strbhi	r7, [r8, r4]
   144f8:	str	r1, [sp, #28]
   144fc:	add	r4, r4, #1
   14500:	ldrb	r7, [r0, r1]
   14504:	b	14408 <putchar_unlocked@plt+0x33e0>
   14508:	ldr	r3, [sp, #56]	; 0x38
   1450c:	add	r3, r3, #1
   14510:	str	r3, [sp, #56]	; 0x38
   14514:	b	143a4 <putchar_unlocked@plt+0x337c>
   14518:	cmp	sl, #2
   1451c:	movne	r3, #0
   14520:	andeq	r3, r6, #1
   14524:	cmp	r3, #0
   14528:	movne	r1, #1
   1452c:	bne	14588 <putchar_unlocked@plt+0x3560>
   14530:	ldr	r0, [sp, #92]	; 0x5c
   14534:	str	r2, [sp, #84]	; 0x54
   14538:	bl	10e3c <iswprint@plt>
   1453c:	ldr	r3, [sp, #56]	; 0x38
   14540:	ldr	r2, [sp, #84]	; 0x54
   14544:	add	r3, r3, r2
   14548:	str	r3, [sp, #56]	; 0x38
   1454c:	cmp	r0, #0
   14550:	add	r0, sp, #96	; 0x60
   14554:	moveq	r5, #0
   14558:	bl	10df4 <mbsinit@plt>
   1455c:	cmp	r0, #0
   14560:	beq	14360 <putchar_unlocked@plt+0x3338>
   14564:	b	143d0 <putchar_unlocked@plt+0x33a8>
   14568:	ldrb	r3, [fp, r1]
   1456c:	cmp	r3, #94	; 0x5e
   14570:	beq	13e30 <putchar_unlocked@plt+0x2e08>
   14574:	bhi	14594 <putchar_unlocked@plt+0x356c>
   14578:	sub	r3, r3, #91	; 0x5b
   1457c:	cmp	r3, #1
   14580:	bls	13e30 <putchar_unlocked@plt+0x2e08>
   14584:	add	r1, r1, #1
   14588:	cmp	r1, r2
   1458c:	bne	14568 <putchar_unlocked@plt+0x3540>
   14590:	b	14530 <putchar_unlocked@plt+0x3508>
   14594:	cmp	r3, #96	; 0x60
   14598:	beq	13e30 <putchar_unlocked@plt+0x2e08>
   1459c:	cmp	r3, #124	; 0x7c
   145a0:	bne	14584 <putchar_unlocked@plt+0x355c>
   145a4:	b	13e30 <putchar_unlocked@plt+0x2e08>
   145a8:	mov	r5, #0
   145ac:	b	143d0 <putchar_unlocked@plt+0x33a8>
   145b0:	ldr	r1, [sp, #64]	; 0x40
   145b4:	cmp	r1, #0
   145b8:	beq	144a4 <putchar_unlocked@plt+0x347c>
   145bc:	cmp	r9, r4
   145c0:	strbhi	ip, [r8, r4]
   145c4:	str	r3, [sp, #64]	; 0x40
   145c8:	add	r4, r4, #1
   145cc:	b	144a4 <putchar_unlocked@plt+0x347c>
   145d0:	mov	r5, fp
   145d4:	ldr	fp, [sp, #24]
   145d8:	mov	r7, #48	; 0x30
   145dc:	b	14178 <putchar_unlocked@plt+0x3150>
   145e0:	mov	r5, #0
   145e4:	mov	fp, r5
   145e8:	b	14178 <putchar_unlocked@plt+0x3150>
   145ec:	ldr	r3, [sp, #36]	; 0x24
   145f0:	ldr	r2, [sp, #28]
   145f4:	subs	r3, r3, r2
   145f8:	movne	r3, #1
   145fc:	b	13a74 <putchar_unlocked@plt+0x2a4c>
   14600:	ldr	r3, [sp, #60]	; 0x3c
   14604:	clz	r7, r9
   14608:	cmp	r3, #0
   1460c:	lsr	r7, r7, #5
   14610:	moveq	r7, #0
   14614:	cmp	r7, #0
   14618:	mov	r5, r3
   1461c:	bne	139d4 <putchar_unlocked@plt+0x29ac>
   14620:	ldr	r3, [sp, #68]	; 0x44
   14624:	ldr	r2, [sp, #40]	; 0x28
   14628:	cmp	r2, #0
   1462c:	moveq	r3, #0
   14630:	andne	r3, r3, #1
   14634:	cmp	r3, #0
   14638:	movne	r3, r2
   1463c:	subne	r2, r3, #1
   14640:	bne	14670 <putchar_unlocked@plt+0x3648>
   14644:	cmp	r9, r4
   14648:	movhi	r3, #0
   1464c:	strbhi	r3, [r8, r4]
   14650:	mov	r0, r4
   14654:	add	sp, sp, #108	; 0x6c
   14658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1465c:	mov	r3, r2
   14660:	b	14624 <putchar_unlocked@plt+0x35fc>
   14664:	cmp	r9, r4
   14668:	strbhi	r3, [r8, r4]
   1466c:	add	r4, r4, #1
   14670:	ldrb	r3, [r2, #1]!
   14674:	cmp	r3, #0
   14678:	bne	14664 <putchar_unlocked@plt+0x363c>
   1467c:	b	14644 <putchar_unlocked@plt+0x361c>
   14680:	ldr	r3, [pc, #32]	; 146a8 <putchar_unlocked@plt+0x3680>
   14684:	mov	r6, #1
   14688:	str	r6, [sp, #24]
   1468c:	str	r6, [sp, #32]
   14690:	str	r3, [sp, #40]	; 0x28
   14694:	mov	r4, #0
   14698:	mov	sl, #5
   1469c:	b	13a44 <putchar_unlocked@plt+0x2a1c>
   146a0:	mov	r6, #1
   146a4:	b	13c38 <putchar_unlocked@plt+0x2c10>
   146a8:	andeq	r7, r1, pc, lsl #1
   146ac:	muleq	r1, r3, r0
   146b0:	muleq	r1, r1, r0
   146b4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   146b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146bc:	sub	sp, sp, #52	; 0x34
   146c0:	mov	r6, r0
   146c4:	mov	r5, r3
   146c8:	mov	r8, r1
   146cc:	mov	r9, r2
   146d0:	bl	10f08 <__errno_location@plt>
   146d4:	ldr	r7, [pc, #380]	; 14858 <putchar_unlocked@plt+0x3830>
   146d8:	cmn	r6, #-2147483647	; 0x80000001
   146dc:	ldr	r4, [r7]
   146e0:	ldr	r3, [r0]
   146e4:	str	r0, [sp, #24]
   146e8:	str	r3, [sp, #32]
   146ec:	movne	r3, #0
   146f0:	moveq	r3, #1
   146f4:	orrs	r3, r3, r6, lsr #31
   146f8:	beq	14700 <putchar_unlocked@plt+0x36d8>
   146fc:	bl	10ff8 <abort@plt>
   14700:	ldr	r2, [r7, #4]
   14704:	cmp	r6, r2
   14708:	blt	14778 <putchar_unlocked@plt+0x3750>
   1470c:	add	r1, sp, #48	; 0x30
   14710:	add	sl, r7, #8
   14714:	str	r2, [r1, #-4]!
   14718:	cmp	r4, sl
   1471c:	mov	r3, #8
   14720:	sub	r2, r6, r2
   14724:	movne	r0, r4
   14728:	str	r3, [sp]
   1472c:	add	r2, r2, #1
   14730:	mvn	r3, #-2147483648	; 0x80000000
   14734:	moveq	r0, #0
   14738:	bl	15458 <putchar_unlocked@plt+0x4430>
   1473c:	cmp	r4, sl
   14740:	ldr	r2, [sp, #44]	; 0x2c
   14744:	mov	fp, r0
   14748:	str	r0, [r7]
   1474c:	ldmeq	r4, {r0, r1}
   14750:	mov	r4, fp
   14754:	stmeq	fp, {r0, r1}
   14758:	ldr	r0, [r7, #4]
   1475c:	mov	r1, #0
   14760:	sub	r2, r2, r0
   14764:	add	r0, fp, r0, lsl #3
   14768:	lsl	r2, r2, #3
   1476c:	bl	10f2c <memset@plt>
   14770:	ldr	r3, [sp, #44]	; 0x2c
   14774:	str	r3, [r7, #4]
   14778:	ldr	r3, [r5, #4]
   1477c:	add	sl, r4, r6, lsl #3
   14780:	orr	r3, r3, #1
   14784:	str	r3, [sp, #28]
   14788:	add	r3, r5, #8
   1478c:	str	r3, [sp, #36]	; 0x24
   14790:	ldr	r3, [r5, #44]	; 0x2c
   14794:	ldr	fp, [r4, r6, lsl #3]
   14798:	ldr	r7, [sl, #4]
   1479c:	str	r3, [sp, #16]
   147a0:	ldr	r3, [r5, #40]	; 0x28
   147a4:	mov	r2, r8
   147a8:	str	r3, [sp, #12]
   147ac:	add	r3, r5, #8
   147b0:	str	r3, [sp, #8]
   147b4:	ldr	r3, [sp, #28]
   147b8:	mov	r1, fp
   147bc:	str	r3, [sp, #4]
   147c0:	ldr	r3, [r5]
   147c4:	mov	r0, r7
   147c8:	str	r3, [sp]
   147cc:	mov	r3, r9
   147d0:	bl	13984 <putchar_unlocked@plt+0x295c>
   147d4:	cmp	fp, r0
   147d8:	bhi	14840 <putchar_unlocked@plt+0x3818>
   147dc:	ldr	r3, [pc, #120]	; 1485c <putchar_unlocked@plt+0x3834>
   147e0:	add	fp, r0, #1
   147e4:	cmp	r7, r3
   147e8:	str	fp, [r4, r6, lsl #3]
   147ec:	beq	147f8 <putchar_unlocked@plt+0x37d0>
   147f0:	mov	r0, r7
   147f4:	bl	136ac <putchar_unlocked@plt+0x2684>
   147f8:	mov	r0, fp
   147fc:	bl	15310 <putchar_unlocked@plt+0x42e8>
   14800:	ldr	r3, [r5, #44]	; 0x2c
   14804:	mov	r2, r8
   14808:	mov	r1, fp
   1480c:	str	r0, [sl, #4]
   14810:	str	r3, [sp, #16]
   14814:	ldr	r3, [r5, #40]	; 0x28
   14818:	mov	r7, r0
   1481c:	str	r3, [sp, #12]
   14820:	add	r3, r5, #8
   14824:	str	r3, [sp, #8]
   14828:	ldr	r3, [sp, #28]
   1482c:	str	r3, [sp, #4]
   14830:	ldr	r3, [r5]
   14834:	str	r3, [sp]
   14838:	mov	r3, r9
   1483c:	bl	13984 <putchar_unlocked@plt+0x295c>
   14840:	ldr	r3, [sp, #24]
   14844:	ldr	r2, [sp, #32]
   14848:	mov	r0, r7
   1484c:	str	r2, [r3]
   14850:	add	sp, sp, #52	; 0x34
   14854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14858:	andeq	r8, r2, r0, lsl r1
   1485c:	muleq	r2, r0, r1
   14860:	push	{r4, r5, r6, lr}
   14864:	mov	r5, r0
   14868:	bl	10f08 <__errno_location@plt>
   1486c:	cmp	r5, #0
   14870:	mov	r1, #48	; 0x30
   14874:	ldr	r6, [r0]
   14878:	mov	r4, r0
   1487c:	ldr	r0, [pc, #12]	; 14890 <putchar_unlocked@plt+0x3868>
   14880:	movne	r0, r5
   14884:	bl	156ec <putchar_unlocked@plt+0x46c4>
   14888:	str	r6, [r4]
   1488c:	pop	{r4, r5, r6, pc}
   14890:	muleq	r2, r0, r2
   14894:	ldr	r3, [pc, #12]	; 148a8 <putchar_unlocked@plt+0x3880>
   14898:	cmp	r0, #0
   1489c:	moveq	r0, r3
   148a0:	ldr	r0, [r0]
   148a4:	bx	lr
   148a8:	muleq	r2, r0, r2
   148ac:	ldr	r3, [pc, #12]	; 148c0 <putchar_unlocked@plt+0x3898>
   148b0:	cmp	r0, #0
   148b4:	moveq	r0, r3
   148b8:	str	r1, [r0]
   148bc:	bx	lr
   148c0:	muleq	r2, r0, r2
   148c4:	ldr	r3, [pc, #52]	; 14900 <putchar_unlocked@plt+0x38d8>
   148c8:	cmp	r0, #0
   148cc:	moveq	r0, r3
   148d0:	add	r3, r0, #8
   148d4:	push	{lr}		; (str lr, [sp, #-4]!)
   148d8:	lsr	lr, r1, #5
   148dc:	and	r1, r1, #31
   148e0:	ldr	ip, [r3, lr, lsl #2]
   148e4:	lsr	r0, ip, r1
   148e8:	eor	r2, r2, r0
   148ec:	and	r2, r2, #1
   148f0:	and	r0, r0, #1
   148f4:	eor	r1, ip, r2, lsl r1
   148f8:	str	r1, [r3, lr, lsl #2]
   148fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14900:	muleq	r2, r0, r2
   14904:	ldr	r3, [pc, #16]	; 1491c <putchar_unlocked@plt+0x38f4>
   14908:	cmp	r0, #0
   1490c:	movne	r3, r0
   14910:	ldr	r0, [r3, #4]
   14914:	str	r1, [r3, #4]
   14918:	bx	lr
   1491c:	muleq	r2, r0, r2
   14920:	ldr	r3, [pc, #44]	; 14954 <putchar_unlocked@plt+0x392c>
   14924:	cmp	r0, #0
   14928:	moveq	r0, r3
   1492c:	mov	r3, #10
   14930:	cmp	r2, #0
   14934:	cmpne	r1, #0
   14938:	str	r3, [r0]
   1493c:	bne	14948 <putchar_unlocked@plt+0x3920>
   14940:	push	{r4, lr}
   14944:	bl	10ff8 <abort@plt>
   14948:	str	r1, [r0, #40]	; 0x28
   1494c:	str	r2, [r0, #44]	; 0x2c
   14950:	bx	lr
   14954:	muleq	r2, r0, r2
   14958:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1495c:	sub	sp, sp, #24
   14960:	mov	sl, r3
   14964:	ldr	r4, [sp, #56]	; 0x38
   14968:	ldr	r3, [pc, #100]	; 149d4 <putchar_unlocked@plt+0x39ac>
   1496c:	cmp	r4, #0
   14970:	moveq	r4, r3
   14974:	mov	r7, r0
   14978:	mov	r8, r1
   1497c:	mov	r9, r2
   14980:	bl	10f08 <__errno_location@plt>
   14984:	ldr	r3, [r4, #44]	; 0x2c
   14988:	mov	r2, r9
   1498c:	mov	r1, r8
   14990:	ldr	r6, [r0]
   14994:	str	r3, [sp, #16]
   14998:	ldr	r3, [r4, #40]	; 0x28
   1499c:	mov	r5, r0
   149a0:	str	r3, [sp, #12]
   149a4:	add	r3, r4, #8
   149a8:	str	r3, [sp, #8]
   149ac:	ldr	r3, [r4, #4]
   149b0:	mov	r0, r7
   149b4:	str	r3, [sp, #4]
   149b8:	ldr	r3, [r4]
   149bc:	str	r3, [sp]
   149c0:	mov	r3, sl
   149c4:	bl	13984 <putchar_unlocked@plt+0x295c>
   149c8:	str	r6, [r5]
   149cc:	add	sp, sp, #24
   149d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149d4:	muleq	r2, r0, r2
   149d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149dc:	cmp	r3, #0
   149e0:	sub	sp, sp, #44	; 0x2c
   149e4:	ldr	r4, [pc, #188]	; 14aa8 <putchar_unlocked@plt+0x3a80>
   149e8:	mov	r6, r2
   149ec:	movne	r4, r3
   149f0:	mov	sl, r1
   149f4:	mov	r9, r0
   149f8:	bl	10f08 <__errno_location@plt>
   149fc:	ldr	r5, [r4, #4]
   14a00:	add	fp, r4, #8
   14a04:	cmp	r6, #0
   14a08:	orreq	r5, r5, #1
   14a0c:	mov	r1, #0
   14a10:	mov	r2, r9
   14a14:	ldr	r3, [r0]
   14a18:	mov	r8, r0
   14a1c:	str	r3, [sp, #28]
   14a20:	ldr	r3, [r4, #44]	; 0x2c
   14a24:	mov	r0, r1
   14a28:	str	r3, [sp, #16]
   14a2c:	ldr	r3, [r4, #40]	; 0x28
   14a30:	stmib	sp, {r5, fp}
   14a34:	str	r3, [sp, #12]
   14a38:	ldr	r3, [r4]
   14a3c:	str	r3, [sp]
   14a40:	mov	r3, sl
   14a44:	bl	13984 <putchar_unlocked@plt+0x295c>
   14a48:	add	r1, r0, #1
   14a4c:	mov	r7, r0
   14a50:	mov	r0, r1
   14a54:	str	r1, [sp, #36]	; 0x24
   14a58:	bl	15310 <putchar_unlocked@plt+0x42e8>
   14a5c:	ldr	r3, [r4, #44]	; 0x2c
   14a60:	mov	r2, r9
   14a64:	str	r3, [sp, #16]
   14a68:	ldr	r3, [r4, #40]	; 0x28
   14a6c:	stmib	sp, {r5, fp}
   14a70:	str	r3, [sp, #12]
   14a74:	ldr	r3, [r4]
   14a78:	ldr	r1, [sp, #36]	; 0x24
   14a7c:	str	r3, [sp]
   14a80:	mov	r3, sl
   14a84:	str	r0, [sp, #32]
   14a88:	bl	13984 <putchar_unlocked@plt+0x295c>
   14a8c:	ldr	r3, [sp, #28]
   14a90:	cmp	r6, #0
   14a94:	str	r3, [r8]
   14a98:	ldr	r0, [sp, #32]
   14a9c:	strne	r7, [r6]
   14aa0:	add	sp, sp, #44	; 0x2c
   14aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aa8:	muleq	r2, r0, r2
   14aac:	mov	r3, r2
   14ab0:	mov	r2, #0
   14ab4:	b	149d8 <putchar_unlocked@plt+0x39b0>
   14ab8:	push	{r4, r5, r6, r7, r8, lr}
   14abc:	mov	r6, #1
   14ac0:	ldr	r4, [pc, #104]	; 14b30 <putchar_unlocked@plt+0x3b08>
   14ac4:	ldr	r5, [r4]
   14ac8:	add	r7, r5, #12
   14acc:	ldr	r3, [r4, #4]
   14ad0:	add	r7, r7, #8
   14ad4:	cmp	r6, r3
   14ad8:	blt	14b20 <putchar_unlocked@plt+0x3af8>
   14adc:	ldr	r0, [r5, #4]
   14ae0:	ldr	r6, [pc, #76]	; 14b34 <putchar_unlocked@plt+0x3b0c>
   14ae4:	cmp	r0, r6
   14ae8:	beq	14afc <putchar_unlocked@plt+0x3ad4>
   14aec:	bl	136ac <putchar_unlocked@plt+0x2684>
   14af0:	mov	r3, #256	; 0x100
   14af4:	str	r3, [r4, #8]
   14af8:	str	r6, [r4, #12]
   14afc:	ldr	r6, [pc, #52]	; 14b38 <putchar_unlocked@plt+0x3b10>
   14b00:	cmp	r5, r6
   14b04:	beq	14b14 <putchar_unlocked@plt+0x3aec>
   14b08:	mov	r0, r5
   14b0c:	bl	136ac <putchar_unlocked@plt+0x2684>
   14b10:	str	r6, [r4]
   14b14:	mov	r3, #1
   14b18:	str	r3, [r4, #4]
   14b1c:	pop	{r4, r5, r6, r7, r8, pc}
   14b20:	ldr	r0, [r7, #-8]
   14b24:	bl	136ac <putchar_unlocked@plt+0x2684>
   14b28:	add	r6, r6, #1
   14b2c:	b	14acc <putchar_unlocked@plt+0x3aa4>
   14b30:	andeq	r8, r2, r0, lsl r1
   14b34:	muleq	r2, r0, r1
   14b38:	andeq	r8, r2, r8, lsl r1
   14b3c:	ldr	r3, [pc, #4]	; 14b48 <putchar_unlocked@plt+0x3b20>
   14b40:	mvn	r2, #0
   14b44:	b	146b8 <putchar_unlocked@plt+0x3690>
   14b48:	muleq	r2, r0, r2
   14b4c:	ldr	r3, [pc]	; 14b54 <putchar_unlocked@plt+0x3b2c>
   14b50:	b	146b8 <putchar_unlocked@plt+0x3690>
   14b54:	muleq	r2, r0, r2
   14b58:	mov	r1, r0
   14b5c:	mov	r0, #0
   14b60:	b	14b3c <putchar_unlocked@plt+0x3b14>
   14b64:	mov	r2, r1
   14b68:	mov	r1, r0
   14b6c:	mov	r0, #0
   14b70:	b	14b4c <putchar_unlocked@plt+0x3b24>
   14b74:	push	{r4, r5, lr}
   14b78:	sub	sp, sp, #52	; 0x34
   14b7c:	mov	r5, r2
   14b80:	mov	r4, r0
   14b84:	mov	r0, sp
   14b88:	bl	13840 <putchar_unlocked@plt+0x2818>
   14b8c:	mov	r3, sp
   14b90:	mvn	r2, #0
   14b94:	mov	r1, r5
   14b98:	mov	r0, r4
   14b9c:	bl	146b8 <putchar_unlocked@plt+0x3690>
   14ba0:	add	sp, sp, #52	; 0x34
   14ba4:	pop	{r4, r5, pc}
   14ba8:	push	{r4, r5, r6, lr}
   14bac:	sub	sp, sp, #48	; 0x30
   14bb0:	mov	r5, r2
   14bb4:	mov	r6, r3
   14bb8:	mov	r4, r0
   14bbc:	mov	r0, sp
   14bc0:	bl	13840 <putchar_unlocked@plt+0x2818>
   14bc4:	mov	r3, sp
   14bc8:	mov	r2, r6
   14bcc:	mov	r1, r5
   14bd0:	mov	r0, r4
   14bd4:	bl	146b8 <putchar_unlocked@plt+0x3690>
   14bd8:	add	sp, sp, #48	; 0x30
   14bdc:	pop	{r4, r5, r6, pc}
   14be0:	mov	r2, r1
   14be4:	mov	r1, r0
   14be8:	mov	r0, #0
   14bec:	b	14b74 <putchar_unlocked@plt+0x3b4c>
   14bf0:	mov	r3, r2
   14bf4:	mov	r2, r1
   14bf8:	mov	r1, r0
   14bfc:	mov	r0, #0
   14c00:	b	14ba8 <putchar_unlocked@plt+0x3b80>
   14c04:	push	{r4, r5, r6, lr}
   14c08:	mov	r4, r0
   14c0c:	ldr	lr, [pc, #80]	; 14c64 <putchar_unlocked@plt+0x3c3c>
   14c10:	mov	r5, r1
   14c14:	mov	r6, r2
   14c18:	ldm	lr!, {r0, r1, r2, r3}
   14c1c:	sub	sp, sp, #48	; 0x30
   14c20:	mov	ip, sp
   14c24:	stmia	ip!, {r0, r1, r2, r3}
   14c28:	ldm	lr!, {r0, r1, r2, r3}
   14c2c:	stmia	ip!, {r0, r1, r2, r3}
   14c30:	ldm	lr, {r0, r1, r2, r3}
   14c34:	stm	ip, {r0, r1, r2, r3}
   14c38:	mov	r1, r6
   14c3c:	mov	r2, #1
   14c40:	mov	r0, sp
   14c44:	bl	148c4 <putchar_unlocked@plt+0x389c>
   14c48:	mov	r3, sp
   14c4c:	mov	r2, r5
   14c50:	mov	r1, r4
   14c54:	mov	r0, #0
   14c58:	bl	146b8 <putchar_unlocked@plt+0x3690>
   14c5c:	add	sp, sp, #48	; 0x30
   14c60:	pop	{r4, r5, r6, pc}
   14c64:	muleq	r2, r0, r2
   14c68:	mov	r2, r1
   14c6c:	mvn	r1, #0
   14c70:	b	14c04 <putchar_unlocked@plt+0x3bdc>
   14c74:	mov	r1, #58	; 0x3a
   14c78:	b	14c68 <putchar_unlocked@plt+0x3c40>
   14c7c:	mov	r2, #58	; 0x3a
   14c80:	b	14c04 <putchar_unlocked@plt+0x3bdc>
   14c84:	push	{r4, r5, lr}
   14c88:	sub	sp, sp, #100	; 0x64
   14c8c:	mov	r4, r0
   14c90:	mov	r0, sp
   14c94:	mov	r5, r2
   14c98:	bl	13840 <putchar_unlocked@plt+0x2818>
   14c9c:	mov	ip, sp
   14ca0:	add	lr, sp, #48	; 0x30
   14ca4:	ldm	ip!, {r0, r1, r2, r3}
   14ca8:	stmia	lr!, {r0, r1, r2, r3}
   14cac:	ldm	ip!, {r0, r1, r2, r3}
   14cb0:	stmia	lr!, {r0, r1, r2, r3}
   14cb4:	ldm	ip, {r0, r1, r2, r3}
   14cb8:	stm	lr, {r0, r1, r2, r3}
   14cbc:	mov	r2, #1
   14cc0:	mov	r1, #58	; 0x3a
   14cc4:	add	r0, sp, #48	; 0x30
   14cc8:	bl	148c4 <putchar_unlocked@plt+0x389c>
   14ccc:	add	r3, sp, #48	; 0x30
   14cd0:	mvn	r2, #0
   14cd4:	mov	r1, r5
   14cd8:	mov	r0, r4
   14cdc:	bl	146b8 <putchar_unlocked@plt+0x3690>
   14ce0:	add	sp, sp, #100	; 0x64
   14ce4:	pop	{r4, r5, pc}
   14ce8:	push	{r4, r5, r6, r7, lr}
   14cec:	mov	r4, r0
   14cf0:	ldr	lr, [pc, #84]	; 14d4c <putchar_unlocked@plt+0x3d24>
   14cf4:	mov	r6, r1
   14cf8:	mov	r7, r2
   14cfc:	mov	r5, r3
   14d00:	ldm	lr!, {r0, r1, r2, r3}
   14d04:	sub	sp, sp, #52	; 0x34
   14d08:	mov	ip, sp
   14d0c:	stmia	ip!, {r0, r1, r2, r3}
   14d10:	ldm	lr!, {r0, r1, r2, r3}
   14d14:	stmia	ip!, {r0, r1, r2, r3}
   14d18:	ldm	lr, {r0, r1, r2, r3}
   14d1c:	stm	ip, {r0, r1, r2, r3}
   14d20:	mov	r2, r7
   14d24:	mov	r1, r6
   14d28:	mov	r0, sp
   14d2c:	bl	14920 <putchar_unlocked@plt+0x38f8>
   14d30:	mov	r3, sp
   14d34:	ldr	r2, [sp, #72]	; 0x48
   14d38:	mov	r1, r5
   14d3c:	mov	r0, r4
   14d40:	bl	146b8 <putchar_unlocked@plt+0x3690>
   14d44:	add	sp, sp, #52	; 0x34
   14d48:	pop	{r4, r5, r6, r7, pc}
   14d4c:	muleq	r2, r0, r2
   14d50:	mvn	ip, #0
   14d54:	push	{r0, r1, r2, lr}
   14d58:	str	ip, [sp]
   14d5c:	bl	14ce8 <putchar_unlocked@plt+0x3cc0>
   14d60:	add	sp, sp, #12
   14d64:	pop	{pc}		; (ldr pc, [sp], #4)
   14d68:	mov	r3, r2
   14d6c:	mov	r2, r1
   14d70:	mov	r1, r0
   14d74:	mov	r0, #0
   14d78:	b	14d50 <putchar_unlocked@plt+0x3d28>
   14d7c:	push	{r0, r1, r2, lr}
   14d80:	str	r3, [sp]
   14d84:	mov	r3, r2
   14d88:	mov	r2, r1
   14d8c:	mov	r1, r0
   14d90:	mov	r0, #0
   14d94:	bl	14ce8 <putchar_unlocked@plt+0x3cc0>
   14d98:	add	sp, sp, #12
   14d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   14da0:	ldr	r3, [pc]	; 14da8 <putchar_unlocked@plt+0x3d80>
   14da4:	b	146b8 <putchar_unlocked@plt+0x3690>
   14da8:	andeq	r8, r2, r0, lsr #2
   14dac:	mov	r2, r1
   14db0:	mov	r1, r0
   14db4:	mov	r0, #0
   14db8:	b	14da0 <putchar_unlocked@plt+0x3d78>
   14dbc:	mvn	r2, #0
   14dc0:	b	14da0 <putchar_unlocked@plt+0x3d78>
   14dc4:	mov	r1, r0
   14dc8:	mov	r0, #0
   14dcc:	b	14dbc <putchar_unlocked@plt+0x3d94>
   14dd0:	mov	r2, #3
   14dd4:	mov	r1, #0
   14dd8:	b	15910 <putchar_unlocked@plt+0x48e8>
   14ddc:	push	{r4, r5, r6, lr}
   14de0:	sub	sp, sp, #32
   14de4:	cmp	r1, #0
   14de8:	mov	r5, r0
   14dec:	ldr	r4, [sp, #48]	; 0x30
   14df0:	ldr	r6, [sp, #52]	; 0x34
   14df4:	beq	14ea8 <putchar_unlocked@plt+0x3e80>
   14df8:	stm	sp, {r2, r3}
   14dfc:	mov	r3, r1
   14e00:	ldr	r2, [pc, #860]	; 15164 <putchar_unlocked@plt+0x413c>
   14e04:	mov	r1, #1
   14e08:	bl	10f50 <__fprintf_chk@plt>
   14e0c:	mov	r2, #5
   14e10:	ldr	r1, [pc, #848]	; 15168 <putchar_unlocked@plt+0x4140>
   14e14:	mov	r0, #0
   14e18:	bl	10e18 <dcgettext@plt>
   14e1c:	ldr	r3, [pc, #840]	; 1516c <putchar_unlocked@plt+0x4144>
   14e20:	ldr	r2, [pc, #840]	; 15170 <putchar_unlocked@plt+0x4148>
   14e24:	str	r3, [sp]
   14e28:	mov	r1, #1
   14e2c:	mov	r3, r0
   14e30:	mov	r0, r5
   14e34:	bl	10f50 <__fprintf_chk@plt>
   14e38:	mov	r1, r5
   14e3c:	mov	r0, #10
   14e40:	bl	10e0c <fputc_unlocked@plt>
   14e44:	mov	r2, #5
   14e48:	ldr	r1, [pc, #804]	; 15174 <putchar_unlocked@plt+0x414c>
   14e4c:	mov	r0, #0
   14e50:	bl	10e18 <dcgettext@plt>
   14e54:	mov	r1, #1
   14e58:	ldr	r3, [pc, #792]	; 15178 <putchar_unlocked@plt+0x4150>
   14e5c:	mov	r2, r0
   14e60:	mov	r0, r5
   14e64:	bl	10f50 <__fprintf_chk@plt>
   14e68:	mov	r1, r5
   14e6c:	mov	r0, #10
   14e70:	bl	10e0c <fputc_unlocked@plt>
   14e74:	cmp	r6, #9
   14e78:	ldrls	pc, [pc, r6, lsl #2]
   14e7c:	b	15158 <putchar_unlocked@plt+0x4130>
   14e80:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14e84:	andeq	r4, r1, r0, asr #29
   14e88:	andeq	r4, r1, ip, ror #29
   14e8c:	andeq	r4, r1, r0, lsr #30
   14e90:	andeq	r4, r1, ip, asr pc
   14e94:	andeq	r4, r1, r0, lsr #31
   14e98:	andeq	r4, r1, r8, ror #31
   14e9c:	andeq	r5, r1, r8, lsr r0
   14ea0:	muleq	r1, r0, r0
   14ea4:	strdeq	r5, [r1], -r0
   14ea8:	str	r3, [sp]
   14eac:	mov	r1, #1
   14eb0:	mov	r3, r2
   14eb4:	ldr	r2, [pc, #704]	; 1517c <putchar_unlocked@plt+0x4154>
   14eb8:	bl	10f50 <__fprintf_chk@plt>
   14ebc:	b	14e0c <putchar_unlocked@plt+0x3de4>
   14ec0:	mov	r2, #5
   14ec4:	ldr	r1, [pc, #692]	; 15180 <putchar_unlocked@plt+0x4158>
   14ec8:	mov	r0, #0
   14ecc:	bl	10e18 <dcgettext@plt>
   14ed0:	ldr	r3, [r4]
   14ed4:	mov	r1, #1
   14ed8:	mov	r2, r0
   14edc:	mov	r0, r5
   14ee0:	add	sp, sp, #32
   14ee4:	pop	{r4, r5, r6, lr}
   14ee8:	b	10f50 <__fprintf_chk@plt>
   14eec:	mov	r2, #5
   14ef0:	ldr	r1, [pc, #652]	; 15184 <putchar_unlocked@plt+0x415c>
   14ef4:	mov	r0, #0
   14ef8:	bl	10e18 <dcgettext@plt>
   14efc:	ldr	r3, [r4, #4]
   14f00:	mov	r1, #1
   14f04:	str	r3, [sp, #48]	; 0x30
   14f08:	ldr	r3, [r4]
   14f0c:	mov	r2, r0
   14f10:	mov	r0, r5
   14f14:	add	sp, sp, #32
   14f18:	pop	{r4, r5, r6, lr}
   14f1c:	b	10f50 <__fprintf_chk@plt>
   14f20:	mov	r2, #5
   14f24:	ldr	r1, [pc, #604]	; 15188 <putchar_unlocked@plt+0x4160>
   14f28:	mov	r0, #0
   14f2c:	bl	10e18 <dcgettext@plt>
   14f30:	ldr	r3, [r4, #8]
   14f34:	mov	r1, #1
   14f38:	str	r3, [sp, #52]	; 0x34
   14f3c:	ldr	r3, [r4, #4]
   14f40:	str	r3, [sp, #48]	; 0x30
   14f44:	ldr	r3, [r4]
   14f48:	mov	r2, r0
   14f4c:	mov	r0, r5
   14f50:	add	sp, sp, #32
   14f54:	pop	{r4, r5, r6, lr}
   14f58:	b	10f50 <__fprintf_chk@plt>
   14f5c:	mov	r2, #5
   14f60:	ldr	r1, [pc, #548]	; 1518c <putchar_unlocked@plt+0x4164>
   14f64:	mov	r0, #0
   14f68:	bl	10e18 <dcgettext@plt>
   14f6c:	ldr	r3, [r4, #12]
   14f70:	mov	r1, #1
   14f74:	str	r3, [sp, #8]
   14f78:	ldr	r3, [r4, #8]
   14f7c:	str	r3, [sp, #4]
   14f80:	ldr	r3, [r4, #4]
   14f84:	str	r3, [sp]
   14f88:	ldr	r3, [r4]
   14f8c:	mov	r2, r0
   14f90:	mov	r0, r5
   14f94:	bl	10f50 <__fprintf_chk@plt>
   14f98:	add	sp, sp, #32
   14f9c:	pop	{r4, r5, r6, pc}
   14fa0:	mov	r2, #5
   14fa4:	ldr	r1, [pc, #484]	; 15190 <putchar_unlocked@plt+0x4168>
   14fa8:	mov	r0, #0
   14fac:	bl	10e18 <dcgettext@plt>
   14fb0:	ldr	r3, [r4, #16]
   14fb4:	mov	r1, #1
   14fb8:	str	r3, [sp, #12]
   14fbc:	ldr	r3, [r4, #12]
   14fc0:	str	r3, [sp, #8]
   14fc4:	ldr	r3, [r4, #8]
   14fc8:	str	r3, [sp, #4]
   14fcc:	ldr	r3, [r4, #4]
   14fd0:	str	r3, [sp]
   14fd4:	ldr	r3, [r4]
   14fd8:	mov	r2, r0
   14fdc:	mov	r0, r5
   14fe0:	bl	10f50 <__fprintf_chk@plt>
   14fe4:	b	14f98 <putchar_unlocked@plt+0x3f70>
   14fe8:	mov	r2, #5
   14fec:	ldr	r1, [pc, #416]	; 15194 <putchar_unlocked@plt+0x416c>
   14ff0:	mov	r0, #0
   14ff4:	bl	10e18 <dcgettext@plt>
   14ff8:	ldr	r3, [r4, #20]
   14ffc:	mov	r1, #1
   15000:	str	r3, [sp, #16]
   15004:	ldr	r3, [r4, #16]
   15008:	str	r3, [sp, #12]
   1500c:	ldr	r3, [r4, #12]
   15010:	str	r3, [sp, #8]
   15014:	ldr	r3, [r4, #8]
   15018:	str	r3, [sp, #4]
   1501c:	ldr	r3, [r4, #4]
   15020:	str	r3, [sp]
   15024:	ldr	r3, [r4]
   15028:	mov	r2, r0
   1502c:	mov	r0, r5
   15030:	bl	10f50 <__fprintf_chk@plt>
   15034:	b	14f98 <putchar_unlocked@plt+0x3f70>
   15038:	mov	r2, #5
   1503c:	ldr	r1, [pc, #340]	; 15198 <putchar_unlocked@plt+0x4170>
   15040:	mov	r0, #0
   15044:	bl	10e18 <dcgettext@plt>
   15048:	ldr	r3, [r4, #24]
   1504c:	mov	r1, #1
   15050:	str	r3, [sp, #20]
   15054:	ldr	r3, [r4, #20]
   15058:	str	r3, [sp, #16]
   1505c:	ldr	r3, [r4, #16]
   15060:	str	r3, [sp, #12]
   15064:	ldr	r3, [r4, #12]
   15068:	str	r3, [sp, #8]
   1506c:	ldr	r3, [r4, #8]
   15070:	str	r3, [sp, #4]
   15074:	ldr	r3, [r4, #4]
   15078:	str	r3, [sp]
   1507c:	ldr	r3, [r4]
   15080:	mov	r2, r0
   15084:	mov	r0, r5
   15088:	bl	10f50 <__fprintf_chk@plt>
   1508c:	b	14f98 <putchar_unlocked@plt+0x3f70>
   15090:	mov	r2, #5
   15094:	ldr	r1, [pc, #256]	; 1519c <putchar_unlocked@plt+0x4174>
   15098:	mov	r0, #0
   1509c:	bl	10e18 <dcgettext@plt>
   150a0:	ldr	r3, [r4, #28]
   150a4:	mov	r1, #1
   150a8:	str	r3, [sp, #24]
   150ac:	ldr	r3, [r4, #24]
   150b0:	str	r3, [sp, #20]
   150b4:	ldr	r3, [r4, #20]
   150b8:	str	r3, [sp, #16]
   150bc:	ldr	r3, [r4, #16]
   150c0:	str	r3, [sp, #12]
   150c4:	ldr	r3, [r4, #12]
   150c8:	str	r3, [sp, #8]
   150cc:	ldr	r3, [r4, #8]
   150d0:	str	r3, [sp, #4]
   150d4:	ldr	r3, [r4, #4]
   150d8:	str	r3, [sp]
   150dc:	ldr	r3, [r4]
   150e0:	mov	r2, r0
   150e4:	mov	r0, r5
   150e8:	bl	10f50 <__fprintf_chk@plt>
   150ec:	b	14f98 <putchar_unlocked@plt+0x3f70>
   150f0:	ldr	r1, [pc, #168]	; 151a0 <putchar_unlocked@plt+0x4178>
   150f4:	mov	r2, #5
   150f8:	mov	r0, #0
   150fc:	bl	10e18 <dcgettext@plt>
   15100:	ldr	r3, [r4, #32]
   15104:	mov	r1, #1
   15108:	str	r3, [sp, #28]
   1510c:	ldr	r3, [r4, #28]
   15110:	str	r3, [sp, #24]
   15114:	ldr	r3, [r4, #24]
   15118:	str	r3, [sp, #20]
   1511c:	ldr	r3, [r4, #20]
   15120:	str	r3, [sp, #16]
   15124:	ldr	r3, [r4, #16]
   15128:	str	r3, [sp, #12]
   1512c:	ldr	r3, [r4, #12]
   15130:	str	r3, [sp, #8]
   15134:	ldr	r3, [r4, #8]
   15138:	str	r3, [sp, #4]
   1513c:	ldr	r3, [r4, #4]
   15140:	str	r3, [sp]
   15144:	ldr	r3, [r4]
   15148:	mov	r2, r0
   1514c:	mov	r0, r5
   15150:	bl	10f50 <__fprintf_chk@plt>
   15154:	b	14f98 <putchar_unlocked@plt+0x3f70>
   15158:	mov	r2, #5
   1515c:	ldr	r1, [pc, #64]	; 151a4 <putchar_unlocked@plt+0x417c>
   15160:	b	150f8 <putchar_unlocked@plt+0x40d0>
   15164:	andeq	r7, r1, r3, ror #1
   15168:	strdeq	r7, [r1], -r6
   1516c:	andeq	r0, r0, r6, ror #15
   15170:	andeq	r7, r1, r4, asr #7
   15174:	strdeq	r7, [r1], -sl
   15178:	andeq	r7, r1, r5, lsr #3
   1517c:	andeq	r7, r1, pc, ror #1
   15180:	andeq	r7, r1, r7, asr #3
   15184:	ldrdeq	r7, [r1], -r7	; <UNPREDICTABLE>
   15188:	andeq	r7, r1, lr, ror #3
   1518c:	andeq	r7, r1, sl, lsl #4
   15190:	andeq	r7, r1, sl, lsr #4
   15194:	andeq	r7, r1, lr, asr #4
   15198:	andeq	r7, r1, r6, ror r2
   1519c:	andeq	r7, r1, r2, lsr #5
   151a0:	ldrdeq	r7, [r1], -r2
   151a4:	andeq	r7, r1, r6, lsl #6
   151a8:	push	{r0, r1, r4, lr}
   151ac:	mov	ip, #0
   151b0:	ldr	lr, [sp, #16]
   151b4:	ldr	r4, [lr, ip, lsl #2]
   151b8:	cmp	r4, #0
   151bc:	bne	151d4 <putchar_unlocked@plt+0x41ac>
   151c0:	str	ip, [sp, #4]
   151c4:	str	lr, [sp]
   151c8:	bl	14ddc <putchar_unlocked@plt+0x3db4>
   151cc:	add	sp, sp, #8
   151d0:	pop	{r4, pc}
   151d4:	add	ip, ip, #1
   151d8:	b	151b4 <putchar_unlocked@plt+0x418c>
   151dc:	push	{r4, r5, lr}
   151e0:	sub	sp, sp, #52	; 0x34
   151e4:	mov	ip, #0
   151e8:	ldr	r5, [sp, #64]	; 0x40
   151ec:	add	lr, sp, #8
   151f0:	ldr	r4, [r5, ip, lsl #2]
   151f4:	cmp	r4, #0
   151f8:	str	r4, [lr, ip, lsl #2]
   151fc:	beq	1520c <putchar_unlocked@plt+0x41e4>
   15200:	add	ip, ip, #1
   15204:	cmp	ip, #10
   15208:	bne	151f0 <putchar_unlocked@plt+0x41c8>
   1520c:	str	ip, [sp, #4]
   15210:	str	lr, [sp]
   15214:	bl	14ddc <putchar_unlocked@plt+0x3db4>
   15218:	add	sp, sp, #52	; 0x34
   1521c:	pop	{r4, r5, pc}
   15220:	push	{r3}		; (str r3, [sp, #-4]!)
   15224:	push	{r0, r1, r2, r3, lr}
   15228:	add	r3, sp, #24
   1522c:	str	r3, [sp, #12]
   15230:	str	r3, [sp]
   15234:	ldr	r3, [sp, #20]
   15238:	bl	151dc <putchar_unlocked@plt+0x41b4>
   1523c:	add	sp, sp, #16
   15240:	pop	{lr}		; (ldr lr, [sp], #4)
   15244:	add	sp, sp, #4
   15248:	bx	lr
   1524c:	ldr	r3, [pc, #116]	; 152c8 <putchar_unlocked@plt+0x42a0>
   15250:	push	{r4, lr}
   15254:	mov	r0, #10
   15258:	ldr	r1, [r3]
   1525c:	bl	10e0c <fputc_unlocked@plt>
   15260:	mov	r2, #5
   15264:	ldr	r1, [pc, #96]	; 152cc <putchar_unlocked@plt+0x42a4>
   15268:	mov	r0, #0
   1526c:	bl	10e18 <dcgettext@plt>
   15270:	ldr	r2, [pc, #88]	; 152d0 <putchar_unlocked@plt+0x42a8>
   15274:	mov	r1, r0
   15278:	mov	r0, #1
   1527c:	bl	10f38 <__printf_chk@plt>
   15280:	mov	r2, #5
   15284:	ldr	r1, [pc, #72]	; 152d4 <putchar_unlocked@plt+0x42ac>
   15288:	mov	r0, #0
   1528c:	bl	10e18 <dcgettext@plt>
   15290:	ldr	r3, [pc, #64]	; 152d8 <putchar_unlocked@plt+0x42b0>
   15294:	ldr	r2, [pc, #64]	; 152dc <putchar_unlocked@plt+0x42b4>
   15298:	mov	r1, r0
   1529c:	mov	r0, #1
   152a0:	bl	10f38 <__printf_chk@plt>
   152a4:	mov	r2, #5
   152a8:	ldr	r1, [pc, #48]	; 152e0 <putchar_unlocked@plt+0x42b8>
   152ac:	mov	r0, #0
   152b0:	bl	10e18 <dcgettext@plt>
   152b4:	ldr	r2, [pc, #40]	; 152e4 <putchar_unlocked@plt+0x42bc>
   152b8:	pop	{r4, lr}
   152bc:	mov	r1, r0
   152c0:	mov	r0, #1
   152c4:	b	10f38 <__printf_chk@plt>
   152c8:	andeq	r8, r2, ip, ror #2
   152cc:	andeq	r7, r1, r2, asr #6
   152d0:	andeq	r7, r1, r6, asr r3
   152d4:	andeq	r7, r1, ip, ror #6
   152d8:	andeq	r6, r1, sp, lsr #19
   152dc:	ldrdeq	r6, [r1], -r5
   152e0:	andeq	r7, r1, r0, lsl #7
   152e4:	andeq	r7, r1, r7, lsr #7
   152e8:	push	{r4, lr}
   152ec:	bl	15804 <putchar_unlocked@plt+0x47dc>
   152f0:	cmp	r0, #0
   152f4:	popne	{r4, pc}
   152f8:	bl	1577c <putchar_unlocked@plt+0x4754>
   152fc:	push	{r4, lr}
   15300:	bl	15804 <putchar_unlocked@plt+0x47dc>
   15304:	cmp	r0, #0
   15308:	popne	{r4, pc}
   1530c:	bl	1577c <putchar_unlocked@plt+0x4754>
   15310:	b	152e8 <putchar_unlocked@plt+0x42c0>
   15314:	push	{r4, r5, r6, lr}
   15318:	mov	r5, r0
   1531c:	mov	r4, r1
   15320:	bl	15844 <putchar_unlocked@plt+0x481c>
   15324:	cmp	r0, #0
   15328:	popne	{r4, r5, r6, pc}
   1532c:	adds	r4, r4, #0
   15330:	movne	r4, #1
   15334:	cmp	r5, #0
   15338:	orreq	r4, r4, #1
   1533c:	cmp	r4, #0
   15340:	popeq	{r4, r5, r6, pc}
   15344:	bl	1577c <putchar_unlocked@plt+0x4754>
   15348:	push	{r4, lr}
   1534c:	cmp	r1, #0
   15350:	orreq	r1, r1, #1
   15354:	bl	15844 <putchar_unlocked@plt+0x481c>
   15358:	cmp	r0, #0
   1535c:	popne	{r4, pc}
   15360:	bl	1577c <putchar_unlocked@plt+0x4754>
   15364:	push	{r4, r5, r6, lr}
   15368:	mov	r6, r0
   1536c:	mov	r5, r1
   15370:	mov	r4, r2
   15374:	bl	15b58 <putchar_unlocked@plt+0x4b30>
   15378:	cmp	r0, #0
   1537c:	popne	{r4, r5, r6, pc}
   15380:	cmp	r6, #0
   15384:	beq	15394 <putchar_unlocked@plt+0x436c>
   15388:	cmp	r5, #0
   1538c:	cmpne	r4, #0
   15390:	popeq	{r4, r5, r6, pc}
   15394:	bl	1577c <putchar_unlocked@plt+0x4754>
   15398:	b	15364 <putchar_unlocked@plt+0x433c>
   1539c:	cmp	r2, #0
   153a0:	cmpne	r1, #0
   153a4:	moveq	r2, #1
   153a8:	moveq	r1, r2
   153ac:	push	{r4, lr}
   153b0:	bl	15b58 <putchar_unlocked@plt+0x4b30>
   153b4:	cmp	r0, #0
   153b8:	popne	{r4, pc}
   153bc:	bl	1577c <putchar_unlocked@plt+0x4754>
   153c0:	mov	r2, r1
   153c4:	mov	r1, r0
   153c8:	mov	r0, #0
   153cc:	b	15364 <putchar_unlocked@plt+0x433c>
   153d0:	mov	r2, r1
   153d4:	mov	r1, r0
   153d8:	mov	r0, #0
   153dc:	b	1539c <putchar_unlocked@plt+0x4374>
   153e0:	push	{r4, r5, r6, r7, r8, lr}
   153e4:	subs	r7, r0, #0
   153e8:	mov	r5, r1
   153ec:	mov	r6, r2
   153f0:	ldr	r4, [r1]
   153f4:	bne	15430 <putchar_unlocked@plt+0x4408>
   153f8:	cmp	r4, #0
   153fc:	bne	15418 <putchar_unlocked@plt+0x43f0>
   15400:	mov	r1, r2
   15404:	mov	r0, #64	; 0x40
   15408:	bl	15c84 <putchar_unlocked@plt+0x4c5c>
   1540c:	cmp	r0, #0
   15410:	movne	r4, r0
   15414:	addeq	r4, r0, #1
   15418:	mov	r2, r6
   1541c:	mov	r1, r4
   15420:	mov	r0, r7
   15424:	bl	15364 <putchar_unlocked@plt+0x433c>
   15428:	str	r4, [r5]
   1542c:	pop	{r4, r5, r6, r7, r8, pc}
   15430:	lsr	r2, r4, #1
   15434:	add	r3, r2, #1
   15438:	mvn	r3, r3
   1543c:	cmp	r4, r3
   15440:	addls	r4, r4, #1
   15444:	addls	r4, r4, r2
   15448:	bls	15418 <putchar_unlocked@plt+0x43f0>
   1544c:	bl	1577c <putchar_unlocked@plt+0x4754>
   15450:	mov	r2, #1
   15454:	b	153e0 <putchar_unlocked@plt+0x43b8>
   15458:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1545c:	mov	sl, r0
   15460:	ldr	r8, [r1]
   15464:	mov	fp, r1
   15468:	mov	r5, r2
   1546c:	asrs	r4, r8, #1
   15470:	mov	r9, r3
   15474:	ldr	r7, [sp, #48]	; 0x30
   15478:	bpl	15514 <putchar_unlocked@plt+0x44ec>
   1547c:	rsb	r2, r4, #-2147483648	; 0x80000000
   15480:	cmp	r8, r2
   15484:	movge	r2, #0
   15488:	movlt	r2, #1
   1548c:	mvn	r3, r9
   15490:	cmp	r2, #0
   15494:	lsr	r3, r3, #31
   15498:	addeq	r4, r4, r8
   1549c:	mvnne	r4, #-2147483648	; 0x80000000
   154a0:	mov	r0, r3
   154a4:	cmp	r9, r4
   154a8:	movge	r0, #0
   154ac:	andlt	r0, r0, #1
   154b0:	cmp	r0, #0
   154b4:	str	r3, [sp, #4]
   154b8:	bne	15688 <putchar_unlocked@plt+0x4660>
   154bc:	cmp	r7, #0
   154c0:	bge	155d4 <putchar_unlocked@plt+0x45ac>
   154c4:	cmp	r4, #0
   154c8:	bge	1552c <putchar_unlocked@plt+0x4504>
   154cc:	mov	r1, r7
   154d0:	mvn	r0, #-2147483648	; 0x80000000
   154d4:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   154d8:	cmp	r0, r4
   154dc:	movle	r0, #0
   154e0:	movgt	r0, #1
   154e4:	cmp	r0, #0
   154e8:	mvnne	r6, #-2147483648	; 0x80000000
   154ec:	beq	1553c <putchar_unlocked@plt+0x4514>
   154f0:	mov	r1, r7
   154f4:	mov	r0, r6
   154f8:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   154fc:	mov	r1, r7
   15500:	mov	r4, r0
   15504:	mov	r0, r6
   15508:	bl	160b0 <putchar_unlocked@plt+0x5088>
   1550c:	sub	r1, r6, r1
   15510:	b	1554c <putchar_unlocked@plt+0x4524>
   15514:	mvn	r2, #-2147483648	; 0x80000000
   15518:	sub	r2, r2, r4
   1551c:	cmp	r8, r2
   15520:	movle	r2, #0
   15524:	movgt	r2, #1
   15528:	b	1548c <putchar_unlocked@plt+0x4464>
   1552c:	cmn	r7, #1
   15530:	movne	r1, r7
   15534:	movne	r0, #-2147483648	; 0x80000000
   15538:	bne	156a0 <putchar_unlocked@plt+0x4678>
   1553c:	mul	r1, r7, r4
   15540:	cmp	r1, #63	; 0x3f
   15544:	movle	r6, #64	; 0x40
   15548:	ble	154f0 <putchar_unlocked@plt+0x44c8>
   1554c:	cmp	sl, #0
   15550:	sub	r2, r4, r8
   15554:	streq	sl, [fp]
   15558:	cmp	r2, r5
   1555c:	bge	15630 <putchar_unlocked@plt+0x4608>
   15560:	cmp	r5, #0
   15564:	bge	155fc <putchar_unlocked@plt+0x45d4>
   15568:	rsb	r2, r5, #-2147483648	; 0x80000000
   1556c:	cmp	r8, r2
   15570:	movge	r2, #0
   15574:	movlt	r2, #1
   15578:	cmp	r2, #0
   1557c:	bne	155d0 <putchar_unlocked@plt+0x45a8>
   15580:	ldr	r0, [sp, #4]
   15584:	add	r5, r8, r5
   15588:	cmp	r9, r5
   1558c:	movge	r0, #0
   15590:	andlt	r0, r0, #1
   15594:	cmp	r0, #0
   15598:	mov	r4, r5
   1559c:	bne	155d0 <putchar_unlocked@plt+0x45a8>
   155a0:	cmp	r7, #0
   155a4:	bge	15644 <putchar_unlocked@plt+0x461c>
   155a8:	cmp	r5, #0
   155ac:	bge	1561c <putchar_unlocked@plt+0x45f4>
   155b0:	mov	r1, r7
   155b4:	mvn	r0, #-2147483648	; 0x80000000
   155b8:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   155bc:	cmp	r5, r0
   155c0:	movge	r0, #0
   155c4:	movlt	r0, #1
   155c8:	cmp	r0, #0
   155cc:	beq	1562c <putchar_unlocked@plt+0x4604>
   155d0:	bl	1577c <putchar_unlocked@plt+0x4754>
   155d4:	beq	1553c <putchar_unlocked@plt+0x4514>
   155d8:	cmp	r4, #0
   155dc:	bge	15698 <putchar_unlocked@plt+0x4670>
   155e0:	cmn	r4, #1
   155e4:	beq	1553c <putchar_unlocked@plt+0x4514>
   155e8:	mov	r1, r4
   155ec:	mov	r0, #-2147483648	; 0x80000000
   155f0:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   155f4:	cmp	r7, r0
   155f8:	b	154dc <putchar_unlocked@plt+0x44b4>
   155fc:	cmp	r8, #0
   15600:	blt	15580 <putchar_unlocked@plt+0x4558>
   15604:	mvn	r2, #-2147483648	; 0x80000000
   15608:	sub	r2, r2, r5
   1560c:	cmp	r8, r2
   15610:	movle	r2, #0
   15614:	movgt	r2, #1
   15618:	b	15578 <putchar_unlocked@plt+0x4550>
   1561c:	cmn	r7, #1
   15620:	movne	r1, r7
   15624:	movne	r0, #-2147483648	; 0x80000000
   15628:	bne	1567c <putchar_unlocked@plt+0x4654>
   1562c:	mul	r1, r5, r7
   15630:	mov	r0, sl
   15634:	bl	15314 <putchar_unlocked@plt+0x42ec>
   15638:	str	r4, [fp]
   1563c:	add	sp, sp, #12
   15640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15644:	beq	1562c <putchar_unlocked@plt+0x4604>
   15648:	cmp	r5, #0
   1564c:	movge	r1, r7
   15650:	mvnge	r0, #-2147483648	; 0x80000000
   15654:	bge	1567c <putchar_unlocked@plt+0x4654>
   15658:	cmn	r5, #1
   1565c:	beq	1562c <putchar_unlocked@plt+0x4604>
   15660:	mov	r1, r5
   15664:	mov	r0, #-2147483648	; 0x80000000
   15668:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   1566c:	cmp	r7, r0
   15670:	movle	r0, #0
   15674:	movgt	r0, #1
   15678:	b	155c8 <putchar_unlocked@plt+0x45a0>
   1567c:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   15680:	cmp	r5, r0
   15684:	b	15670 <putchar_unlocked@plt+0x4648>
   15688:	cmp	r7, #0
   1568c:	mov	r4, r9
   15690:	blt	1552c <putchar_unlocked@plt+0x4504>
   15694:	beq	1553c <putchar_unlocked@plt+0x4514>
   15698:	mov	r1, r7
   1569c:	mvn	r0, #-2147483648	; 0x80000000
   156a0:	bl	15e90 <putchar_unlocked@plt+0x4e68>
   156a4:	cmp	r0, r4
   156a8:	movge	r0, #0
   156ac:	movlt	r0, #1
   156b0:	b	154e4 <putchar_unlocked@plt+0x44bc>
   156b4:	push	{r4, lr}
   156b8:	bl	157bc <putchar_unlocked@plt+0x4794>
   156bc:	cmp	r0, #0
   156c0:	popne	{r4, pc}
   156c4:	bl	1577c <putchar_unlocked@plt+0x4754>
   156c8:	mov	r1, #1
   156cc:	b	156b4 <putchar_unlocked@plt+0x468c>
   156d0:	push	{r4, lr}
   156d4:	bl	157bc <putchar_unlocked@plt+0x4794>
   156d8:	cmp	r0, #0
   156dc:	popne	{r4, pc}
   156e0:	bl	1577c <putchar_unlocked@plt+0x4754>
   156e4:	mov	r1, #1
   156e8:	b	156d0 <putchar_unlocked@plt+0x46a8>
   156ec:	push	{r4, r5, r6, lr}
   156f0:	mov	r4, r1
   156f4:	mov	r5, r0
   156f8:	mov	r0, r1
   156fc:	bl	152e8 <putchar_unlocked@plt+0x42c0>
   15700:	mov	r2, r4
   15704:	mov	r1, r5
   15708:	pop	{r4, r5, r6, lr}
   1570c:	b	10de8 <memcpy@plt>
   15710:	push	{r4, r5, r6, lr}
   15714:	mov	r4, r1
   15718:	mov	r5, r0
   1571c:	mov	r0, r1
   15720:	bl	152fc <putchar_unlocked@plt+0x42d4>
   15724:	mov	r2, r4
   15728:	mov	r1, r5
   1572c:	pop	{r4, r5, r6, lr}
   15730:	b	10de8 <memcpy@plt>
   15734:	push	{r4, r5, r6, lr}
   15738:	mov	r5, r0
   1573c:	add	r0, r1, #1
   15740:	mov	r4, r1
   15744:	bl	152fc <putchar_unlocked@plt+0x42d4>
   15748:	mov	r2, #0
   1574c:	mov	r1, r5
   15750:	strb	r2, [r0, r4]
   15754:	mov	r2, r4
   15758:	pop	{r4, r5, r6, lr}
   1575c:	b	10de8 <memcpy@plt>
   15760:	push	{r4, lr}
   15764:	mov	r4, r0
   15768:	bl	10ef0 <strlen@plt>
   1576c:	add	r1, r0, #1
   15770:	mov	r0, r4
   15774:	pop	{r4, lr}
   15778:	b	156ec <putchar_unlocked@plt+0x46c4>
   1577c:	ldr	r3, [pc, #44]	; 157b0 <putchar_unlocked@plt+0x4788>
   15780:	push	{r4, lr}
   15784:	mov	r2, #5
   15788:	ldr	r1, [pc, #36]	; 157b4 <putchar_unlocked@plt+0x478c>
   1578c:	mov	r0, #0
   15790:	ldr	r4, [r3]
   15794:	bl	10e18 <dcgettext@plt>
   15798:	ldr	r2, [pc, #24]	; 157b8 <putchar_unlocked@plt+0x4790>
   1579c:	mov	r1, #0
   157a0:	mov	r3, r0
   157a4:	mov	r0, r4
   157a8:	bl	10e84 <error@plt>
   157ac:	bl	10ff8 <abort@plt>
   157b0:	andeq	r8, r2, ip, lsl #2
   157b4:	strdeq	r7, [r1], -r3
   157b8:	andeq	r6, r1, r2, lsr #31
   157bc:	cmp	r1, #0
   157c0:	cmpne	r0, #0
   157c4:	moveq	r1, #1
   157c8:	moveq	r0, r1
   157cc:	umull	r2, r3, r0, r1
   157d0:	adds	r3, r3, #0
   157d4:	movne	r3, #1
   157d8:	cmp	r2, #0
   157dc:	blt	157ec <putchar_unlocked@plt+0x47c4>
   157e0:	cmp	r3, #0
   157e4:	bne	157ec <putchar_unlocked@plt+0x47c4>
   157e8:	b	10d88 <calloc@plt>
   157ec:	push	{r4, lr}
   157f0:	bl	10f08 <__errno_location@plt>
   157f4:	mov	r3, #12
   157f8:	str	r3, [r0]
   157fc:	mov	r0, #0
   15800:	pop	{r4, pc}
   15804:	cmp	r0, #0
   15808:	mov	r3, #0
   1580c:	moveq	r0, #1
   15810:	adds	r3, r3, #0
   15814:	movne	r3, #1
   15818:	cmp	r0, #0
   1581c:	blt	1582c <putchar_unlocked@plt+0x4804>
   15820:	cmp	r3, #0
   15824:	bne	1582c <putchar_unlocked@plt+0x4804>
   15828:	b	10e90 <malloc@plt>
   1582c:	push	{r4, lr}
   15830:	bl	10f08 <__errno_location@plt>
   15834:	mov	r3, #12
   15838:	str	r3, [r0]
   1583c:	mov	r0, #0
   15840:	pop	{r4, pc}
   15844:	cmp	r0, #0
   15848:	push	{r4, lr}
   1584c:	mov	r4, r1
   15850:	bne	15860 <putchar_unlocked@plt+0x4838>
   15854:	mov	r0, r1
   15858:	pop	{r4, lr}
   1585c:	b	15804 <putchar_unlocked@plt+0x47dc>
   15860:	cmp	r1, #0
   15864:	bne	15874 <putchar_unlocked@plt+0x484c>
   15868:	bl	136ac <putchar_unlocked@plt+0x2684>
   1586c:	mov	r0, #0
   15870:	pop	{r4, pc}
   15874:	cmp	r1, #0
   15878:	blt	15888 <putchar_unlocked@plt+0x4860>
   1587c:	mov	r3, #0
   15880:	cmp	r3, r3
   15884:	beq	15898 <putchar_unlocked@plt+0x4870>
   15888:	bl	10f08 <__errno_location@plt>
   1588c:	mov	r3, #12
   15890:	str	r3, [r0]
   15894:	b	1586c <putchar_unlocked@plt+0x4844>
   15898:	pop	{r4, lr}
   1589c:	b	10e24 <realloc@plt>
   158a0:	push	{r4, r5, r6, lr}
   158a4:	mov	r4, r0
   158a8:	bl	10e60 <__fpending@plt>
   158ac:	mov	r5, r0
   158b0:	mov	r0, r4
   158b4:	bl	10e6c <ferror_unlocked@plt>
   158b8:	mov	r6, r0
   158bc:	mov	r0, r4
   158c0:	bl	13520 <putchar_unlocked@plt+0x24f8>
   158c4:	cmp	r6, #0
   158c8:	mov	r4, r0
   158cc:	bne	158f8 <putchar_unlocked@plt+0x48d0>
   158d0:	cmp	r0, #0
   158d4:	beq	158f0 <putchar_unlocked@plt+0x48c8>
   158d8:	cmp	r5, #0
   158dc:	bne	15908 <putchar_unlocked@plt+0x48e0>
   158e0:	bl	10f08 <__errno_location@plt>
   158e4:	ldr	r4, [r0]
   158e8:	subs	r4, r4, #9
   158ec:	mvnne	r4, #0
   158f0:	mov	r0, r4
   158f4:	pop	{r4, r5, r6, pc}
   158f8:	cmp	r0, #0
   158fc:	bne	15908 <putchar_unlocked@plt+0x48e0>
   15900:	bl	10f08 <__errno_location@plt>
   15904:	str	r4, [r0]
   15908:	mvn	r4, #0
   1590c:	b	158f0 <putchar_unlocked@plt+0x48c8>
   15910:	push	{r1, r2, r3}
   15914:	push	{r0, r1, r4, r5, r6, r7, lr}
   15918:	add	r2, sp, #32
   1591c:	ldr	r1, [sp, #28]
   15920:	str	r2, [sp, #4]
   15924:	cmp	r1, #0
   15928:	beq	1596c <putchar_unlocked@plt+0x4944>
   1592c:	ldr	r3, [pc, #396]	; 15ac0 <putchar_unlocked@plt+0x4a98>
   15930:	mov	r6, r0
   15934:	cmp	r1, r3
   15938:	beq	15978 <putchar_unlocked@plt+0x4950>
   1593c:	cmp	r1, #11
   15940:	beq	1595c <putchar_unlocked@plt+0x4934>
   15944:	bgt	15a88 <putchar_unlocked@plt+0x4a60>
   15948:	cmp	r1, #3
   1594c:	beq	1595c <putchar_unlocked@plt+0x4934>
   15950:	bgt	15a64 <putchar_unlocked@plt+0x4a3c>
   15954:	cmp	r1, #1
   15958:	bne	15a70 <putchar_unlocked@plt+0x4a48>
   1595c:	mov	r0, r6
   15960:	bl	10f74 <fcntl64@plt>
   15964:	mov	r4, r0
   15968:	b	15a24 <putchar_unlocked@plt+0x49fc>
   1596c:	ldr	r2, [sp, #32]
   15970:	bl	10f74 <fcntl64@plt>
   15974:	b	15964 <putchar_unlocked@plt+0x493c>
   15978:	ldr	r5, [pc, #324]	; 15ac4 <putchar_unlocked@plt+0x4a9c>
   1597c:	add	r3, sp, #36	; 0x24
   15980:	str	r3, [sp, #4]
   15984:	ldr	r3, [r5]
   15988:	ldr	r7, [r2]
   1598c:	cmp	r3, #0
   15990:	mov	r2, r7
   15994:	blt	15a38 <putchar_unlocked@plt+0x4a10>
   15998:	bl	10f74 <fcntl64@plt>
   1599c:	subs	r4, r0, #0
   159a0:	bge	159b4 <putchar_unlocked@plt+0x498c>
   159a4:	bl	10f08 <__errno_location@plt>
   159a8:	ldr	r3, [r0]
   159ac:	cmp	r3, #22
   159b0:	beq	15a04 <putchar_unlocked@plt+0x49dc>
   159b4:	mov	r3, #1
   159b8:	str	r3, [r5]
   159bc:	cmp	r4, #0
   159c0:	blt	15a24 <putchar_unlocked@plt+0x49fc>
   159c4:	ldr	r5, [r5]
   159c8:	cmn	r5, #1
   159cc:	bne	15a24 <putchar_unlocked@plt+0x49fc>
   159d0:	mov	r1, #1
   159d4:	mov	r0, r4
   159d8:	bl	10f74 <fcntl64@plt>
   159dc:	subs	r2, r0, #0
   159e0:	bge	15a48 <putchar_unlocked@plt+0x4a20>
   159e4:	bl	10f08 <__errno_location@plt>
   159e8:	ldr	r7, [r0]
   159ec:	mov	r6, r0
   159f0:	mov	r0, r4
   159f4:	bl	11010 <close@plt>
   159f8:	mov	r4, r5
   159fc:	str	r7, [r6]
   15a00:	b	15a24 <putchar_unlocked@plt+0x49fc>
   15a04:	mov	r2, r7
   15a08:	mov	r1, #0
   15a0c:	mov	r0, r6
   15a10:	bl	10f74 <fcntl64@plt>
   15a14:	subs	r4, r0, #0
   15a18:	mvnge	r3, #0
   15a1c:	strge	r3, [r5]
   15a20:	bge	159c4 <putchar_unlocked@plt+0x499c>
   15a24:	mov	r0, r4
   15a28:	add	sp, sp, #8
   15a2c:	pop	{r4, r5, r6, r7, lr}
   15a30:	add	sp, sp, #12
   15a34:	bx	lr
   15a38:	mov	r1, #0
   15a3c:	bl	10f74 <fcntl64@plt>
   15a40:	mov	r4, r0
   15a44:	b	159bc <putchar_unlocked@plt+0x4994>
   15a48:	orr	r2, r2, #1
   15a4c:	mov	r1, #2
   15a50:	mov	r0, r4
   15a54:	bl	10f74 <fcntl64@plt>
   15a58:	cmn	r0, #1
   15a5c:	bne	15a24 <putchar_unlocked@plt+0x49fc>
   15a60:	b	159e4 <putchar_unlocked@plt+0x49bc>
   15a64:	cmp	r1, #8
   15a68:	beq	15a70 <putchar_unlocked@plt+0x4a48>
   15a6c:	bgt	15a80 <putchar_unlocked@plt+0x4a58>
   15a70:	ldr	r3, [sp, #4]
   15a74:	mov	r0, r6
   15a78:	ldr	r2, [r3]
   15a7c:	b	15970 <putchar_unlocked@plt+0x4948>
   15a80:	cmp	r1, #9
   15a84:	b	15958 <putchar_unlocked@plt+0x4930>
   15a88:	ldr	r2, [pc, #56]	; 15ac8 <putchar_unlocked@plt+0x4aa0>
   15a8c:	cmp	r1, r2
   15a90:	bgt	15aa8 <putchar_unlocked@plt+0x4a80>
   15a94:	cmp	r1, r3
   15a98:	ldrlt	r3, [pc, #44]	; 15acc <putchar_unlocked@plt+0x4aa4>
   15a9c:	bge	15a70 <putchar_unlocked@plt+0x4a48>
   15aa0:	cmp	r1, r3
   15aa4:	b	15958 <putchar_unlocked@plt+0x4930>
   15aa8:	ldr	r3, [pc, #32]	; 15ad0 <putchar_unlocked@plt+0x4aa8>
   15aac:	cmp	r1, r3
   15ab0:	beq	15a70 <putchar_unlocked@plt+0x4a48>
   15ab4:	blt	1595c <putchar_unlocked@plt+0x4934>
   15ab8:	add	r3, r3, #1
   15abc:	b	15aa0 <putchar_unlocked@plt+0x4a78>
   15ac0:	andeq	r0, r0, r6, lsl #8
   15ac4:	andeq	r8, r2, r0, asr #5
   15ac8:	andeq	r0, r0, r7, lsl #8
   15acc:	andeq	r0, r0, r1, lsl #8
   15ad0:	andeq	r0, r0, r9, lsl #8
   15ad4:	push	{r4, lr}
   15ad8:	mov	r0, #14
   15adc:	bl	10f98 <nl_langinfo@plt>
   15ae0:	ldr	r3, [pc, #24]	; 15b00 <putchar_unlocked@plt+0x4ad8>
   15ae4:	cmp	r0, #0
   15ae8:	moveq	r0, r3
   15aec:	ldr	r3, [pc, #16]	; 15b04 <putchar_unlocked@plt+0x4adc>
   15af0:	ldrb	r2, [r0]
   15af4:	cmp	r2, #0
   15af8:	moveq	r0, r3
   15afc:	pop	{r4, pc}
   15b00:			; <UNDEFINED> instruction: 0x000167b0
   15b04:	andeq	r7, r1, r4, lsl #8
   15b08:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   15b0c:	subs	r5, r0, #0
   15b10:	addeq	r5, sp, #4
   15b14:	mov	r0, r5
   15b18:	mov	r7, r2
   15b1c:	mov	r6, r1
   15b20:	bl	10e78 <mbrtowc@plt>
   15b24:	cmp	r7, #0
   15b28:	cmnne	r0, #3
   15b2c:	mov	r4, r0
   15b30:	bls	15b4c <putchar_unlocked@plt+0x4b24>
   15b34:	mov	r0, #0
   15b38:	bl	15ba4 <putchar_unlocked@plt+0x4b7c>
   15b3c:	cmp	r0, #0
   15b40:	moveq	r4, #1
   15b44:	ldrbeq	r3, [r6]
   15b48:	streq	r3, [r5]
   15b4c:	mov	r0, r4
   15b50:	add	sp, sp, #12
   15b54:	pop	{r4, r5, r6, r7, pc}
   15b58:	push	{r4, r5, r6, lr}
   15b5c:	subs	r4, r2, #0
   15b60:	mov	r6, r0
   15b64:	mov	r5, r1
   15b68:	beq	15b80 <putchar_unlocked@plt+0x4b58>
   15b6c:	mov	r1, r4
   15b70:	mvn	r0, #0
   15b74:	bl	15c84 <putchar_unlocked@plt+0x4c5c>
   15b78:	cmp	r0, r5
   15b7c:	bcc	15b90 <putchar_unlocked@plt+0x4b68>
   15b80:	mul	r1, r5, r4
   15b84:	mov	r0, r6
   15b88:	pop	{r4, r5, r6, lr}
   15b8c:	b	15844 <putchar_unlocked@plt+0x481c>
   15b90:	bl	10f08 <__errno_location@plt>
   15b94:	mov	r3, #12
   15b98:	str	r3, [r0]
   15b9c:	mov	r0, #0
   15ba0:	pop	{r4, r5, r6, pc}
   15ba4:	push	{lr}		; (str lr, [sp, #-4]!)
   15ba8:	sub	sp, sp, #268	; 0x10c
   15bac:	ldr	r2, [pc, #64]	; 15bf4 <putchar_unlocked@plt+0x4bcc>
   15bb0:	add	r1, sp, #4
   15bb4:	bl	15c00 <putchar_unlocked@plt+0x4bd8>
   15bb8:	cmp	r0, #0
   15bbc:	movne	r0, #0
   15bc0:	bne	15bec <putchar_unlocked@plt+0x4bc4>
   15bc4:	ldr	r1, [pc, #44]	; 15bf8 <putchar_unlocked@plt+0x4bd0>
   15bc8:	add	r0, sp, #4
   15bcc:	bl	10dac <strcmp@plt>
   15bd0:	cmp	r0, #0
   15bd4:	beq	15bec <putchar_unlocked@plt+0x4bc4>
   15bd8:	ldr	r1, [pc, #28]	; 15bfc <putchar_unlocked@plt+0x4bd4>
   15bdc:	add	r0, sp, #4
   15be0:	bl	10dac <strcmp@plt>
   15be4:	adds	r0, r0, #0
   15be8:	movne	r0, #1
   15bec:	add	sp, sp, #268	; 0x10c
   15bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   15bf4:	andeq	r0, r0, r1, lsl #2
   15bf8:	andeq	r7, r1, sl, lsl #8
   15bfc:	andeq	r7, r1, ip, lsl #8
   15c00:	push	{r4, r5, r6, lr}
   15c04:	mov	r5, r1
   15c08:	mov	r1, #0
   15c0c:	mov	r4, r2
   15c10:	bl	10f80 <setlocale@plt>
   15c14:	subs	r6, r0, #0
   15c18:	bne	15c2c <putchar_unlocked@plt+0x4c04>
   15c1c:	cmp	r4, #0
   15c20:	strbne	r6, [r5]
   15c24:	mov	r0, #22
   15c28:	pop	{r4, r5, r6, pc}
   15c2c:	bl	10ef0 <strlen@plt>
   15c30:	cmp	r4, r0
   15c34:	bls	15c50 <putchar_unlocked@plt+0x4c28>
   15c38:	add	r2, r0, #1
   15c3c:	mov	r1, r6
   15c40:	mov	r0, r5
   15c44:	bl	10de8 <memcpy@plt>
   15c48:	mov	r0, #0
   15c4c:	pop	{r4, r5, r6, pc}
   15c50:	cmp	r4, #0
   15c54:	beq	15c74 <putchar_unlocked@plt+0x4c4c>
   15c58:	sub	r4, r4, #1
   15c5c:	mov	r2, r4
   15c60:	mov	r1, r6
   15c64:	mov	r0, r5
   15c68:	bl	10de8 <memcpy@plt>
   15c6c:	mov	r3, #0
   15c70:	strb	r3, [r5, r4]
   15c74:	mov	r0, #34	; 0x22
   15c78:	pop	{r4, r5, r6, pc}
   15c7c:	mov	r1, #0
   15c80:	b	10f80 <setlocale@plt>
   15c84:	subs	r2, r1, #1
   15c88:	bxeq	lr
   15c8c:	bcc	15e64 <putchar_unlocked@plt+0x4e3c>
   15c90:	cmp	r0, r1
   15c94:	bls	15e48 <putchar_unlocked@plt+0x4e20>
   15c98:	tst	r1, r2
   15c9c:	beq	15e54 <putchar_unlocked@plt+0x4e2c>
   15ca0:	clz	r3, r0
   15ca4:	clz	r2, r1
   15ca8:	sub	r3, r2, r3
   15cac:	rsbs	r3, r3, #31
   15cb0:	addne	r3, r3, r3, lsl #1
   15cb4:	mov	r2, #0
   15cb8:	addne	pc, pc, r3, lsl #2
   15cbc:	nop			; (mov r0, r0)
   15cc0:	cmp	r0, r1, lsl #31
   15cc4:	adc	r2, r2, r2
   15cc8:	subcs	r0, r0, r1, lsl #31
   15ccc:	cmp	r0, r1, lsl #30
   15cd0:	adc	r2, r2, r2
   15cd4:	subcs	r0, r0, r1, lsl #30
   15cd8:	cmp	r0, r1, lsl #29
   15cdc:	adc	r2, r2, r2
   15ce0:	subcs	r0, r0, r1, lsl #29
   15ce4:	cmp	r0, r1, lsl #28
   15ce8:	adc	r2, r2, r2
   15cec:	subcs	r0, r0, r1, lsl #28
   15cf0:	cmp	r0, r1, lsl #27
   15cf4:	adc	r2, r2, r2
   15cf8:	subcs	r0, r0, r1, lsl #27
   15cfc:	cmp	r0, r1, lsl #26
   15d00:	adc	r2, r2, r2
   15d04:	subcs	r0, r0, r1, lsl #26
   15d08:	cmp	r0, r1, lsl #25
   15d0c:	adc	r2, r2, r2
   15d10:	subcs	r0, r0, r1, lsl #25
   15d14:	cmp	r0, r1, lsl #24
   15d18:	adc	r2, r2, r2
   15d1c:	subcs	r0, r0, r1, lsl #24
   15d20:	cmp	r0, r1, lsl #23
   15d24:	adc	r2, r2, r2
   15d28:	subcs	r0, r0, r1, lsl #23
   15d2c:	cmp	r0, r1, lsl #22
   15d30:	adc	r2, r2, r2
   15d34:	subcs	r0, r0, r1, lsl #22
   15d38:	cmp	r0, r1, lsl #21
   15d3c:	adc	r2, r2, r2
   15d40:	subcs	r0, r0, r1, lsl #21
   15d44:	cmp	r0, r1, lsl #20
   15d48:	adc	r2, r2, r2
   15d4c:	subcs	r0, r0, r1, lsl #20
   15d50:	cmp	r0, r1, lsl #19
   15d54:	adc	r2, r2, r2
   15d58:	subcs	r0, r0, r1, lsl #19
   15d5c:	cmp	r0, r1, lsl #18
   15d60:	adc	r2, r2, r2
   15d64:	subcs	r0, r0, r1, lsl #18
   15d68:	cmp	r0, r1, lsl #17
   15d6c:	adc	r2, r2, r2
   15d70:	subcs	r0, r0, r1, lsl #17
   15d74:	cmp	r0, r1, lsl #16
   15d78:	adc	r2, r2, r2
   15d7c:	subcs	r0, r0, r1, lsl #16
   15d80:	cmp	r0, r1, lsl #15
   15d84:	adc	r2, r2, r2
   15d88:	subcs	r0, r0, r1, lsl #15
   15d8c:	cmp	r0, r1, lsl #14
   15d90:	adc	r2, r2, r2
   15d94:	subcs	r0, r0, r1, lsl #14
   15d98:	cmp	r0, r1, lsl #13
   15d9c:	adc	r2, r2, r2
   15da0:	subcs	r0, r0, r1, lsl #13
   15da4:	cmp	r0, r1, lsl #12
   15da8:	adc	r2, r2, r2
   15dac:	subcs	r0, r0, r1, lsl #12
   15db0:	cmp	r0, r1, lsl #11
   15db4:	adc	r2, r2, r2
   15db8:	subcs	r0, r0, r1, lsl #11
   15dbc:	cmp	r0, r1, lsl #10
   15dc0:	adc	r2, r2, r2
   15dc4:	subcs	r0, r0, r1, lsl #10
   15dc8:	cmp	r0, r1, lsl #9
   15dcc:	adc	r2, r2, r2
   15dd0:	subcs	r0, r0, r1, lsl #9
   15dd4:	cmp	r0, r1, lsl #8
   15dd8:	adc	r2, r2, r2
   15ddc:	subcs	r0, r0, r1, lsl #8
   15de0:	cmp	r0, r1, lsl #7
   15de4:	adc	r2, r2, r2
   15de8:	subcs	r0, r0, r1, lsl #7
   15dec:	cmp	r0, r1, lsl #6
   15df0:	adc	r2, r2, r2
   15df4:	subcs	r0, r0, r1, lsl #6
   15df8:	cmp	r0, r1, lsl #5
   15dfc:	adc	r2, r2, r2
   15e00:	subcs	r0, r0, r1, lsl #5
   15e04:	cmp	r0, r1, lsl #4
   15e08:	adc	r2, r2, r2
   15e0c:	subcs	r0, r0, r1, lsl #4
   15e10:	cmp	r0, r1, lsl #3
   15e14:	adc	r2, r2, r2
   15e18:	subcs	r0, r0, r1, lsl #3
   15e1c:	cmp	r0, r1, lsl #2
   15e20:	adc	r2, r2, r2
   15e24:	subcs	r0, r0, r1, lsl #2
   15e28:	cmp	r0, r1, lsl #1
   15e2c:	adc	r2, r2, r2
   15e30:	subcs	r0, r0, r1, lsl #1
   15e34:	cmp	r0, r1
   15e38:	adc	r2, r2, r2
   15e3c:	subcs	r0, r0, r1
   15e40:	mov	r0, r2
   15e44:	bx	lr
   15e48:	moveq	r0, #1
   15e4c:	movne	r0, #0
   15e50:	bx	lr
   15e54:	clz	r2, r1
   15e58:	rsb	r2, r2, #31
   15e5c:	lsr	r0, r0, r2
   15e60:	bx	lr
   15e64:	cmp	r0, #0
   15e68:	mvnne	r0, #0
   15e6c:	b	1610c <putchar_unlocked@plt+0x50e4>
   15e70:	cmp	r1, #0
   15e74:	beq	15e64 <putchar_unlocked@plt+0x4e3c>
   15e78:	push	{r0, r1, lr}
   15e7c:	bl	15c84 <putchar_unlocked@plt+0x4c5c>
   15e80:	pop	{r1, r2, lr}
   15e84:	mul	r3, r2, r0
   15e88:	sub	r1, r1, r3
   15e8c:	bx	lr
   15e90:	cmp	r1, #0
   15e94:	beq	160a0 <putchar_unlocked@plt+0x5078>
   15e98:	eor	ip, r0, r1
   15e9c:	rsbmi	r1, r1, #0
   15ea0:	subs	r2, r1, #1
   15ea4:	beq	1606c <putchar_unlocked@plt+0x5044>
   15ea8:	movs	r3, r0
   15eac:	rsbmi	r3, r0, #0
   15eb0:	cmp	r3, r1
   15eb4:	bls	16078 <putchar_unlocked@plt+0x5050>
   15eb8:	tst	r1, r2
   15ebc:	beq	16088 <putchar_unlocked@plt+0x5060>
   15ec0:	clz	r2, r3
   15ec4:	clz	r0, r1
   15ec8:	sub	r2, r0, r2
   15ecc:	rsbs	r2, r2, #31
   15ed0:	addne	r2, r2, r2, lsl #1
   15ed4:	mov	r0, #0
   15ed8:	addne	pc, pc, r2, lsl #2
   15edc:	nop			; (mov r0, r0)
   15ee0:	cmp	r3, r1, lsl #31
   15ee4:	adc	r0, r0, r0
   15ee8:	subcs	r3, r3, r1, lsl #31
   15eec:	cmp	r3, r1, lsl #30
   15ef0:	adc	r0, r0, r0
   15ef4:	subcs	r3, r3, r1, lsl #30
   15ef8:	cmp	r3, r1, lsl #29
   15efc:	adc	r0, r0, r0
   15f00:	subcs	r3, r3, r1, lsl #29
   15f04:	cmp	r3, r1, lsl #28
   15f08:	adc	r0, r0, r0
   15f0c:	subcs	r3, r3, r1, lsl #28
   15f10:	cmp	r3, r1, lsl #27
   15f14:	adc	r0, r0, r0
   15f18:	subcs	r3, r3, r1, lsl #27
   15f1c:	cmp	r3, r1, lsl #26
   15f20:	adc	r0, r0, r0
   15f24:	subcs	r3, r3, r1, lsl #26
   15f28:	cmp	r3, r1, lsl #25
   15f2c:	adc	r0, r0, r0
   15f30:	subcs	r3, r3, r1, lsl #25
   15f34:	cmp	r3, r1, lsl #24
   15f38:	adc	r0, r0, r0
   15f3c:	subcs	r3, r3, r1, lsl #24
   15f40:	cmp	r3, r1, lsl #23
   15f44:	adc	r0, r0, r0
   15f48:	subcs	r3, r3, r1, lsl #23
   15f4c:	cmp	r3, r1, lsl #22
   15f50:	adc	r0, r0, r0
   15f54:	subcs	r3, r3, r1, lsl #22
   15f58:	cmp	r3, r1, lsl #21
   15f5c:	adc	r0, r0, r0
   15f60:	subcs	r3, r3, r1, lsl #21
   15f64:	cmp	r3, r1, lsl #20
   15f68:	adc	r0, r0, r0
   15f6c:	subcs	r3, r3, r1, lsl #20
   15f70:	cmp	r3, r1, lsl #19
   15f74:	adc	r0, r0, r0
   15f78:	subcs	r3, r3, r1, lsl #19
   15f7c:	cmp	r3, r1, lsl #18
   15f80:	adc	r0, r0, r0
   15f84:	subcs	r3, r3, r1, lsl #18
   15f88:	cmp	r3, r1, lsl #17
   15f8c:	adc	r0, r0, r0
   15f90:	subcs	r3, r3, r1, lsl #17
   15f94:	cmp	r3, r1, lsl #16
   15f98:	adc	r0, r0, r0
   15f9c:	subcs	r3, r3, r1, lsl #16
   15fa0:	cmp	r3, r1, lsl #15
   15fa4:	adc	r0, r0, r0
   15fa8:	subcs	r3, r3, r1, lsl #15
   15fac:	cmp	r3, r1, lsl #14
   15fb0:	adc	r0, r0, r0
   15fb4:	subcs	r3, r3, r1, lsl #14
   15fb8:	cmp	r3, r1, lsl #13
   15fbc:	adc	r0, r0, r0
   15fc0:	subcs	r3, r3, r1, lsl #13
   15fc4:	cmp	r3, r1, lsl #12
   15fc8:	adc	r0, r0, r0
   15fcc:	subcs	r3, r3, r1, lsl #12
   15fd0:	cmp	r3, r1, lsl #11
   15fd4:	adc	r0, r0, r0
   15fd8:	subcs	r3, r3, r1, lsl #11
   15fdc:	cmp	r3, r1, lsl #10
   15fe0:	adc	r0, r0, r0
   15fe4:	subcs	r3, r3, r1, lsl #10
   15fe8:	cmp	r3, r1, lsl #9
   15fec:	adc	r0, r0, r0
   15ff0:	subcs	r3, r3, r1, lsl #9
   15ff4:	cmp	r3, r1, lsl #8
   15ff8:	adc	r0, r0, r0
   15ffc:	subcs	r3, r3, r1, lsl #8
   16000:	cmp	r3, r1, lsl #7
   16004:	adc	r0, r0, r0
   16008:	subcs	r3, r3, r1, lsl #7
   1600c:	cmp	r3, r1, lsl #6
   16010:	adc	r0, r0, r0
   16014:	subcs	r3, r3, r1, lsl #6
   16018:	cmp	r3, r1, lsl #5
   1601c:	adc	r0, r0, r0
   16020:	subcs	r3, r3, r1, lsl #5
   16024:	cmp	r3, r1, lsl #4
   16028:	adc	r0, r0, r0
   1602c:	subcs	r3, r3, r1, lsl #4
   16030:	cmp	r3, r1, lsl #3
   16034:	adc	r0, r0, r0
   16038:	subcs	r3, r3, r1, lsl #3
   1603c:	cmp	r3, r1, lsl #2
   16040:	adc	r0, r0, r0
   16044:	subcs	r3, r3, r1, lsl #2
   16048:	cmp	r3, r1, lsl #1
   1604c:	adc	r0, r0, r0
   16050:	subcs	r3, r3, r1, lsl #1
   16054:	cmp	r3, r1
   16058:	adc	r0, r0, r0
   1605c:	subcs	r3, r3, r1
   16060:	cmp	ip, #0
   16064:	rsbmi	r0, r0, #0
   16068:	bx	lr
   1606c:	teq	ip, r0
   16070:	rsbmi	r0, r0, #0
   16074:	bx	lr
   16078:	movcc	r0, #0
   1607c:	asreq	r0, ip, #31
   16080:	orreq	r0, r0, #1
   16084:	bx	lr
   16088:	clz	r2, r1
   1608c:	rsb	r2, r2, #31
   16090:	cmp	ip, #0
   16094:	lsr	r0, r3, r2
   16098:	rsbmi	r0, r0, #0
   1609c:	bx	lr
   160a0:	cmp	r0, #0
   160a4:	mvngt	r0, #-2147483648	; 0x80000000
   160a8:	movlt	r0, #-2147483648	; 0x80000000
   160ac:	b	1610c <putchar_unlocked@plt+0x50e4>
   160b0:	cmp	r1, #0
   160b4:	beq	160a0 <putchar_unlocked@plt+0x5078>
   160b8:	push	{r0, r1, lr}
   160bc:	bl	15e98 <putchar_unlocked@plt+0x4e70>
   160c0:	pop	{r1, r2, lr}
   160c4:	mul	r3, r2, r0
   160c8:	sub	r1, r1, r3
   160cc:	bx	lr
   160d0:	cmp	r3, #0
   160d4:	cmpeq	r2, #0
   160d8:	bne	160f0 <putchar_unlocked@plt+0x50c8>
   160dc:	cmp	r1, #0
   160e0:	cmpeq	r0, #0
   160e4:	mvnne	r1, #0
   160e8:	mvnne	r0, #0
   160ec:	b	1610c <putchar_unlocked@plt+0x50e4>
   160f0:	sub	sp, sp, #8
   160f4:	push	{sp, lr}
   160f8:	bl	1611c <putchar_unlocked@plt+0x50f4>
   160fc:	ldr	lr, [sp, #4]
   16100:	add	sp, sp, #8
   16104:	pop	{r2, r3}
   16108:	bx	lr
   1610c:	push	{r1, lr}
   16110:	mov	r0, #8
   16114:	bl	10da0 <raise@plt>
   16118:	pop	{r1, pc}
   1611c:	cmp	r1, r3
   16120:	push	{r4, r5, r6, r7, r8, r9, lr}
   16124:	cmpeq	r0, r2
   16128:	mov	r4, r0
   1612c:	mov	r5, r1
   16130:	ldr	r9, [sp, #28]
   16134:	movcc	r0, #0
   16138:	movcc	r1, #0
   1613c:	bcc	16234 <putchar_unlocked@plt+0x520c>
   16140:	cmp	r3, #0
   16144:	clzeq	ip, r2
   16148:	clzne	ip, r3
   1614c:	addeq	ip, ip, #32
   16150:	cmp	r5, #0
   16154:	clzeq	r1, r4
   16158:	addeq	r1, r1, #32
   1615c:	clzne	r1, r5
   16160:	sub	ip, ip, r1
   16164:	sub	lr, ip, #32
   16168:	lsl	r7, r3, ip
   1616c:	rsb	r8, ip, #32
   16170:	orr	r7, r7, r2, lsl lr
   16174:	orr	r7, r7, r2, lsr r8
   16178:	lsl	r6, r2, ip
   1617c:	cmp	r5, r7
   16180:	cmpeq	r4, r6
   16184:	movcc	r0, #0
   16188:	movcc	r1, #0
   1618c:	bcc	161a8 <putchar_unlocked@plt+0x5180>
   16190:	mov	r3, #1
   16194:	subs	r4, r4, r6
   16198:	lsl	r1, r3, lr
   1619c:	lsl	r0, r3, ip
   161a0:	orr	r1, r1, r3, lsr r8
   161a4:	sbc	r5, r5, r7
   161a8:	cmp	ip, #0
   161ac:	beq	16234 <putchar_unlocked@plt+0x520c>
   161b0:	lsrs	r3, r7, #1
   161b4:	rrx	r2, r6
   161b8:	mov	r6, ip
   161bc:	b	161e0 <putchar_unlocked@plt+0x51b8>
   161c0:	subs	r4, r4, r2
   161c4:	sbc	r5, r5, r3
   161c8:	adds	r4, r4, r4
   161cc:	adc	r5, r5, r5
   161d0:	adds	r4, r4, #1
   161d4:	adc	r5, r5, #0
   161d8:	subs	r6, r6, #1
   161dc:	beq	161fc <putchar_unlocked@plt+0x51d4>
   161e0:	cmp	r5, r3
   161e4:	cmpeq	r4, r2
   161e8:	bcs	161c0 <putchar_unlocked@plt+0x5198>
   161ec:	adds	r4, r4, r4
   161f0:	adc	r5, r5, r5
   161f4:	subs	r6, r6, #1
   161f8:	bne	161e0 <putchar_unlocked@plt+0x51b8>
   161fc:	lsr	r6, r4, ip
   16200:	lsr	r7, r5, ip
   16204:	orr	r6, r6, r5, lsl r8
   16208:	adds	r2, r0, r4
   1620c:	orr	r6, r6, r5, lsr lr
   16210:	adc	r3, r1, r5
   16214:	lsl	r1, r7, ip
   16218:	orr	r1, r1, r6, lsl lr
   1621c:	lsl	r0, r6, ip
   16220:	orr	r1, r1, r6, lsr r8
   16224:	subs	r0, r2, r0
   16228:	mov	r4, r6
   1622c:	mov	r5, r7
   16230:	sbc	r1, r3, r1
   16234:	cmp	r9, #0
   16238:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1623c:	strd	r4, [r9]
   16240:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16248:	mov	r7, r0
   1624c:	ldr	r6, [pc, #72]	; 1629c <putchar_unlocked@plt+0x5274>
   16250:	ldr	r5, [pc, #72]	; 162a0 <putchar_unlocked@plt+0x5278>
   16254:	add	r6, pc, r6
   16258:	add	r5, pc, r5
   1625c:	sub	r6, r6, r5
   16260:	mov	r8, r1
   16264:	mov	r9, r2
   16268:	bl	10d5c <fdopen@plt-0x20>
   1626c:	asrs	r6, r6, #2
   16270:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16274:	mov	r4, #0
   16278:	add	r4, r4, #1
   1627c:	ldr	r3, [r5], #4
   16280:	mov	r2, r9
   16284:	mov	r1, r8
   16288:	mov	r0, r7
   1628c:	blx	r3
   16290:	cmp	r6, r4
   16294:	bne	16278 <putchar_unlocked@plt+0x5250>
   16298:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1629c:			; <UNDEFINED> instruction: 0x00011cb4
   162a0:	andeq	r1, r1, ip, lsr #25
   162a4:	bx	lr
   162a8:	ldr	r3, [pc, #12]	; 162bc <putchar_unlocked@plt+0x5294>
   162ac:	mov	r1, #0
   162b0:	add	r3, pc, r3
   162b4:	ldr	r2, [r3]
   162b8:	b	10f14 <__cxa_atexit@plt>
   162bc:	andeq	r1, r1, r4, asr #28

Disassembly of section .fini:

000162c0 <.fini>:
   162c0:	push	{r3, lr}
   162c4:	pop	{r3, pc}
