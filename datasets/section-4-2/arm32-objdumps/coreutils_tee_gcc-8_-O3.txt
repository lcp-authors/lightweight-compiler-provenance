
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010ca4 <.init>:
   10ca4:	push	{r3, lr}
   10ca8:	bl	111f0 <close@plt+0x2bc>
   10cac:	pop	{r3, pc}

Disassembly of section .plt:

00010cb0 <fdopen@plt-0x14>:
   10cb0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cb4:	ldr	lr, [pc, #4]	; 10cc0 <fdopen@plt-0x4>
   10cb8:	add	lr, pc, lr
   10cbc:	ldr	pc, [lr, #8]!
   10cc0:	andeq	r7, r1, r0, asr #6

00010cc4 <fdopen@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #94208	; 0x17000
   10ccc:	ldr	pc, [ip, #832]!	; 0x340

00010cd0 <calloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #94208	; 0x17000
   10cd8:	ldr	pc, [ip, #824]!	; 0x338

00010cdc <fputs_unlocked@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #94208	; 0x17000
   10ce4:	ldr	pc, [ip, #816]!	; 0x330

00010ce8 <strcmp@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #94208	; 0x17000
   10cf0:	ldr	pc, [ip, #808]!	; 0x328

00010cf4 <posix_fadvise64@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #94208	; 0x17000
   10cfc:	ldr	pc, [ip, #800]!	; 0x320

00010d00 <read@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #94208	; 0x17000
   10d08:	ldr	pc, [ip, #792]!	; 0x318

00010d0c <fflush@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #94208	; 0x17000
   10d14:	ldr	pc, [ip, #784]!	; 0x310

00010d18 <free@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #94208	; 0x17000
   10d20:	ldr	pc, [ip, #776]!	; 0x308

00010d24 <_exit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #94208	; 0x17000
   10d2c:	ldr	pc, [ip, #768]!	; 0x300

00010d30 <memcpy@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #94208	; 0x17000
   10d38:	ldr	pc, [ip, #760]!	; 0x2f8

00010d3c <mbsinit@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #94208	; 0x17000
   10d44:	ldr	pc, [ip, #752]!	; 0x2f0

00010d48 <signal@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #94208	; 0x17000
   10d50:	ldr	pc, [ip, #744]!	; 0x2e8

00010d54 <fwrite_unlocked@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #94208	; 0x17000
   10d5c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d60 <memcmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #94208	; 0x17000
   10d68:	ldr	pc, [ip, #728]!	; 0x2d8

00010d6c <fputc_unlocked@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #94208	; 0x17000
   10d74:	ldr	pc, [ip, #720]!	; 0x2d0

00010d78 <dcgettext@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #94208	; 0x17000
   10d80:	ldr	pc, [ip, #712]!	; 0x2c8

00010d84 <realloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #94208	; 0x17000
   10d8c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d90 <textdomain@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #94208	; 0x17000
   10d98:	ldr	pc, [ip, #696]!	; 0x2b8

00010d9c <iswprint@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #94208	; 0x17000
   10da4:	ldr	pc, [ip, #688]!	; 0x2b0

00010da8 <fwrite@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #94208	; 0x17000
   10db0:	ldr	pc, [ip, #680]!	; 0x2a8

00010db4 <lseek64@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #94208	; 0x17000
   10dbc:	ldr	pc, [ip, #672]!	; 0x2a0

00010dc0 <__ctype_get_mb_cur_max@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #94208	; 0x17000
   10dc8:	ldr	pc, [ip, #664]!	; 0x298

00010dcc <__fpending@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #656]!	; 0x290

00010dd8 <mbrtowc@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #648]!	; 0x288

00010de4 <error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #640]!	; 0x280

00010df0 <malloc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #632]!	; 0x278

00010dfc <__libc_start_main@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #624]!	; 0x270

00010e08 <__freading@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #616]!	; 0x268

00010e14 <__gmon_start__@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #608]!	; 0x260

00010e20 <getopt_long@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #600]!	; 0x258

00010e2c <__ctype_b_loc@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #592]!	; 0x250

00010e38 <exit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #584]!	; 0x248

00010e44 <strlen@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #576]!	; 0x240

00010e50 <__errno_location@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #568]!	; 0x238

00010e5c <__cxa_atexit@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #560]!	; 0x230

00010e68 <setvbuf@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #552]!	; 0x228

00010e74 <memset@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #544]!	; 0x220

00010e80 <__printf_chk@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #536]!	; 0x218

00010e8c <fileno@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #528]!	; 0x210

00010e98 <__fprintf_chk@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #520]!	; 0x208

00010ea4 <fclose@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #512]!	; 0x200

00010eb0 <fseeko64@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #504]!	; 0x1f8

00010ebc <fcntl64@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec8 <__overflow@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed4 <setlocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #480]!	; 0x1e0

00010ee0 <strrchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #472]!	; 0x1d8

00010eec <nl_langinfo@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef8 <clearerr_unlocked@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #456]!	; 0x1c8

00010f04 <fopen64@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #448]!	; 0x1c0

00010f10 <bindtextdomain@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #440]!	; 0x1b8

00010f1c <strncmp@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #432]!	; 0x1b0

00010f28 <abort@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #424]!	; 0x1a8

00010f34 <close@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #416]!	; 0x1a0

Disassembly of section .text:

00010f40 <.text>:
   10f40:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f44:	movw	r5, #33120	; 0x8160
   10f48:	movt	r5, #2
   10f4c:	strd	r6, [sp, #8]
   10f50:	mov	r7, r1
   10f54:	movw	r6, #30652	; 0x77bc
   10f58:	movt	r6, #1
   10f5c:	strd	r8, [sp, #16]
   10f60:	mov	r8, r0
   10f64:	strd	sl, [sp, #24]
   10f68:	movw	sl, #29072	; 0x7190
   10f6c:	movt	sl, #1
   10f70:	str	lr, [sp, #32]
   10f74:	sub	sp, sp, #20
   10f78:	movw	fp, #33112	; 0x8158
   10f7c:	movt	fp, #2
   10f80:	ldr	r0, [r1]
   10f84:	add	r9, sl, #92	; 0x5c
   10f88:	bl	12334 <close@plt+0x1400>
   10f8c:	movw	r1, #29372	; 0x72bc
   10f90:	movt	r1, #1
   10f94:	mov	r0, #6
   10f98:	bl	10ed4 <setlocale@plt>
   10f9c:	movw	r1, #30564	; 0x7764
   10fa0:	movt	r1, #1
   10fa4:	movw	r0, #30396	; 0x76bc
   10fa8:	movt	r0, #1
   10fac:	bl	10f10 <bindtextdomain@plt>
   10fb0:	movw	r0, #30396	; 0x76bc
   10fb4:	movt	r0, #1
   10fb8:	bl	10d90 <textdomain@plt>
   10fbc:	movw	r0, #7940	; 0x1f04
   10fc0:	movt	r0, #1
   10fc4:	bl	1716c <close@plt+0x6238>
   10fc8:	mov	r3, #0
   10fcc:	strb	r3, [r5]
   10fd0:	strb	r3, [r5, #8]
   10fd4:	mov	r4, #0
   10fd8:	mov	r3, r9
   10fdc:	mov	r2, r6
   10fe0:	mov	r1, r7
   10fe4:	mov	r0, r8
   10fe8:	str	r4, [sp]
   10fec:	bl	10e20 <getopt_long@plt>
   10ff0:	cmn	r0, #1
   10ff4:	beq	110ec <close@plt+0x1b8>
   10ff8:	cmp	r0, #97	; 0x61
   10ffc:	beq	110e0 <close@plt+0x1ac>
   11000:	ble	11018 <close@plt+0xe4>
   11004:	cmp	r0, #105	; 0x69
   11008:	bne	11074 <close@plt+0x140>
   1100c:	mov	r3, #1
   11010:	strb	r3, [r5, #8]
   11014:	b	10fd4 <close@plt+0xa0>
   11018:	cmn	r0, #3
   1101c:	bne	110d0 <close@plt+0x19c>
   11020:	movw	r3, #30604	; 0x778c
   11024:	movt	r3, #1
   11028:	movw	r1, #30620	; 0x779c
   1102c:	movt	r1, #1
   11030:	movw	r2, #30640	; 0x77b0
   11034:	movt	r2, #1
   11038:	movw	r0, #33108	; 0x8154
   1103c:	movt	r0, #2
   11040:	str	r2, [sp]
   11044:	movw	r2, #30392	; 0x76b8
   11048:	movt	r2, #1
   1104c:	stmib	sp, {r1, r3, r4}
   11050:	movw	r3, #33004	; 0x80ec
   11054:	movt	r3, #2
   11058:	movw	r1, #29296	; 0x7270
   1105c:	movt	r1, #1
   11060:	ldr	r0, [r0]
   11064:	ldr	r3, [r3]
   11068:	bl	16374 <close@plt+0x5440>
   1106c:	mov	r0, r4
   11070:	bl	10e38 <exit@plt>
   11074:	cmp	r0, #112	; 0x70
   11078:	bne	11174 <close@plt+0x240>
   1107c:	ldr	r1, [fp]
   11080:	cmp	r1, #0
   11084:	moveq	r3, #2
   11088:	streq	r3, [r5, #4]
   1108c:	beq	10fd4 <close@plt+0xa0>
   11090:	movw	r2, #33008	; 0x80f0
   11094:	movt	r2, #2
   11098:	ldr	r3, [pc, #272]	; 111b0 <close@plt+0x27c>
   1109c:	mov	r0, #1
   110a0:	ldr	ip, [r2]
   110a4:	mov	r2, #4
   110a8:	stm	sp, {r2, ip}
   110ac:	add	r2, r3, #16
   110b0:	str	r0, [sp, #8]
   110b4:	movw	r0, #30588	; 0x777c
   110b8:	movt	r0, #1
   110bc:	bl	11d44 <close@plt+0xe10>
   110c0:	add	r0, sl, r0, lsl #2
   110c4:	ldr	r3, [r0, #56]	; 0x38
   110c8:	str	r3, [r5, #4]
   110cc:	b	10fd4 <close@plt+0xa0>
   110d0:	cmn	r0, #2
   110d4:	bne	11174 <close@plt+0x240>
   110d8:	mov	r0, r4
   110dc:	bl	11650 <close@plt+0x71c>
   110e0:	mov	r3, #1
   110e4:	strb	r3, [r5]
   110e8:	b	10fd4 <close@plt+0xa0>
   110ec:	ldrb	r3, [r5, #8]
   110f0:	cmp	r3, r4
   110f4:	bne	11154 <close@plt+0x220>
   110f8:	ldr	r3, [r5, #4]
   110fc:	cmp	r3, #0
   11100:	bne	11164 <close@plt+0x230>
   11104:	movw	r3, #33088	; 0x8140
   11108:	movt	r3, #2
   1110c:	ldr	r0, [r3]
   11110:	add	r1, r7, r0, lsl #2
   11114:	sub	r0, r8, r0
   11118:	bl	112a4 <close@plt+0x370>
   1111c:	mov	r4, r0
   11120:	mov	r0, #0
   11124:	bl	10f34 <close@plt>
   11128:	cmp	r0, #0
   1112c:	bne	1117c <close@plt+0x248>
   11130:	eor	r0, r4, #1
   11134:	uxtb	r0, r0
   11138:	add	sp, sp, #20
   1113c:	ldrd	r4, [sp]
   11140:	ldrd	r6, [sp, #8]
   11144:	ldrd	r8, [sp, #16]
   11148:	ldrd	sl, [sp, #24]
   1114c:	add	sp, sp, #32
   11150:	pop	{pc}		; (ldr pc, [sp], #4)
   11154:	mov	r1, #1
   11158:	mov	r0, #2
   1115c:	bl	10d48 <signal@plt>
   11160:	b	110f8 <close@plt+0x1c4>
   11164:	mov	r1, #1
   11168:	mov	r0, #13
   1116c:	bl	10d48 <signal@plt>
   11170:	b	11104 <close@plt+0x1d0>
   11174:	mov	r0, #1
   11178:	bl	11650 <close@plt+0x71c>
   1117c:	bl	10e50 <__errno_location@plt>
   11180:	ldr	r4, [r0]
   11184:	mov	r2, #5
   11188:	movw	r1, #30656	; 0x77c0
   1118c:	movt	r1, #1
   11190:	mov	r0, #0
   11194:	bl	10d78 <dcgettext@plt>
   11198:	mov	r3, r0
   1119c:	movw	r2, #31012	; 0x7924
   111a0:	movt	r2, #1
   111a4:	mov	r0, #1
   111a8:	mov	r1, r4
   111ac:	bl	10de4 <error@plt>
   111b0:	andeq	r7, r1, r8, asr #3
   111b4:	mov	fp, #0
   111b8:	mov	lr, #0
   111bc:	pop	{r1}		; (ldr r1, [sp], #4)
   111c0:	mov	r2, sp
   111c4:	push	{r2}		; (str r2, [sp, #-4]!)
   111c8:	push	{r0}		; (str r0, [sp, #-4]!)
   111cc:	ldr	ip, [pc, #16]	; 111e4 <close@plt+0x2b0>
   111d0:	push	{ip}		; (str ip, [sp, #-4]!)
   111d4:	ldr	r0, [pc, #12]	; 111e8 <close@plt+0x2b4>
   111d8:	ldr	r3, [pc, #12]	; 111ec <close@plt+0x2b8>
   111dc:	bl	10dfc <__libc_start_main@plt>
   111e0:	bl	10f28 <abort@plt>
   111e4:	andeq	r7, r1, r8, ror #2
   111e8:	andeq	r0, r1, r0, asr #30
   111ec:	andeq	r7, r1, r8, lsl #2
   111f0:	ldr	r3, [pc, #20]	; 1120c <close@plt+0x2d8>
   111f4:	ldr	r2, [pc, #20]	; 11210 <close@plt+0x2dc>
   111f8:	add	r3, pc, r3
   111fc:	ldr	r2, [r3, r2]
   11200:	cmp	r2, #0
   11204:	bxeq	lr
   11208:	b	10e14 <__gmon_start__@plt>
   1120c:	andeq	r6, r1, r0, lsl #28
   11210:	andeq	r0, r0, r0, ror #1
   11214:	ldr	r0, [pc, #24]	; 11234 <close@plt+0x300>
   11218:	ldr	r3, [pc, #24]	; 11238 <close@plt+0x304>
   1121c:	cmp	r3, r0
   11220:	bxeq	lr
   11224:	ldr	r3, [pc, #16]	; 1123c <close@plt+0x308>
   11228:	cmp	r3, #0
   1122c:	bxeq	lr
   11230:	bx	r3
   11234:	andeq	r8, r2, r8, lsr r1
   11238:	andeq	r8, r2, r8, lsr r1
   1123c:	andeq	r0, r0, r0
   11240:	ldr	r0, [pc, #36]	; 1126c <close@plt+0x338>
   11244:	ldr	r1, [pc, #36]	; 11270 <close@plt+0x33c>
   11248:	sub	r1, r1, r0
   1124c:	asr	r1, r1, #2
   11250:	add	r1, r1, r1, lsr #31
   11254:	asrs	r1, r1, #1
   11258:	bxeq	lr
   1125c:	ldr	r3, [pc, #16]	; 11274 <close@plt+0x340>
   11260:	cmp	r3, #0
   11264:	bxeq	lr
   11268:	bx	r3
   1126c:	andeq	r8, r2, r8, lsr r1
   11270:	andeq	r8, r2, r8, lsr r1
   11274:	andeq	r0, r0, r0
   11278:	push	{r4, lr}
   1127c:	ldr	r4, [pc, #24]	; 1129c <close@plt+0x368>
   11280:	ldrb	r3, [r4]
   11284:	cmp	r3, #0
   11288:	popne	{r4, pc}
   1128c:	bl	11214 <close@plt+0x2e0>
   11290:	mov	r3, #1
   11294:	strb	r3, [r4]
   11298:	pop	{r4, pc}
   1129c:	andeq	r8, r2, ip, asr r1
   112a0:	b	11240 <close@plt+0x30c>
   112a4:	movw	r3, #33120	; 0x8160
   112a8:	movt	r3, #2
   112ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112b0:	ldrb	ip, [r3]
   112b4:	movw	r5, #33108	; 0x8154
   112b8:	movt	r5, #2
   112bc:	strd	r6, [sp, #8]
   112c0:	movw	r2, #33104	; 0x8150
   112c4:	movt	r2, #2
   112c8:	strd	r8, [sp, #16]
   112cc:	mov	r4, r1
   112d0:	mov	r6, r0
   112d4:	strd	sl, [sp, #24]
   112d8:	mov	r1, #2
   112dc:	movw	sl, #29264	; 0x7250
   112e0:	movt	sl, #1
   112e4:	str	lr, [sp, #32]
   112e8:	sub	sp, sp, #8192	; 0x2000
   112ec:	sub	sp, sp, #36	; 0x24
   112f0:	cmp	ip, #0
   112f4:	sub	r7, r4, #4
   112f8:	stm	sp, {r3, r5}
   112fc:	movw	r3, #29260	; 0x724c
   11300:	movt	r3, #1
   11304:	str	r0, [sp, #16]
   11308:	movne	sl, r3
   1130c:	ldr	r0, [r2]
   11310:	bl	11ff4 <close@plt+0x10c0>
   11314:	mov	r1, #4
   11318:	add	r0, r6, #1
   1131c:	bl	166e8 <close@plt+0x57b4>
   11320:	ldr	r3, [r5]
   11324:	mov	r2, #5
   11328:	mov	r8, r0
   1132c:	movw	r1, #29268	; 0x7254
   11330:	movt	r1, #1
   11334:	str	r0, [sp, #12]
   11338:	str	r7, [sp, #20]
   1133c:	str	r3, [r0]
   11340:	mov	r0, #0
   11344:	bl	10d78 <dcgettext@plt>
   11348:	mov	r3, #0
   1134c:	mov	r2, #2
   11350:	str	r0, [r4, #-4]
   11354:	mov	r1, r3
   11358:	ldr	r0, [r5]
   1135c:	bl	10e68 <setvbuf@plt>
   11360:	cmp	r6, #0
   11364:	ble	11638 <close@plt+0x704>
   11368:	lsl	r3, r6, #2
   1136c:	mov	r2, #1
   11370:	movw	r9, #31012	; 0x7924
   11374:	movt	r9, #1
   11378:	mov	r6, r2
   1137c:	mov	r5, r8
   11380:	add	fp, r8, r3
   11384:	str	r2, [sp, #8]
   11388:	str	r9, [sp, #24]
   1138c:	str	r3, [sp, #28]
   11390:	b	113a4 <close@plt+0x470>
   11394:	bl	10e68 <setvbuf@plt>
   11398:	cmp	fp, r5
   1139c:	add	r6, r6, #1
   113a0:	beq	1141c <close@plt+0x4e8>
   113a4:	mov	r1, sl
   113a8:	ldr	r0, [r7, #4]!
   113ac:	bl	12158 <close@plt+0x1224>
   113b0:	mov	r3, #0
   113b4:	mov	r4, r0
   113b8:	str	r0, [r5, #4]!
   113bc:	cmp	r0, r3
   113c0:	mov	r2, #2
   113c4:	mov	r1, r3
   113c8:	bne	11394 <close@plt+0x460>
   113cc:	ldr	r3, [sp]
   113d0:	str	r0, [sp, #8]
   113d4:	ldr	r8, [r3, #4]
   113d8:	sub	r8, r8, #3
   113dc:	cmp	r8, #1
   113e0:	movhi	r8, #0
   113e4:	movls	r8, #1
   113e8:	bl	10e50 <__errno_location@plt>
   113ec:	ldr	r9, [r0]
   113f0:	mov	r1, #3
   113f4:	mov	r0, r4
   113f8:	ldr	r2, [r7]
   113fc:	bl	154f8 <close@plt+0x45c4>
   11400:	mov	r3, r0
   11404:	mov	r0, r8
   11408:	ldr	r2, [sp, #24]
   1140c:	mov	r1, r9
   11410:	bl	10de4 <error@plt>
   11414:	cmp	fp, r5
   11418:	bne	113a4 <close@plt+0x470>
   1141c:	cmp	r6, #0
   11420:	beq	1146c <close@plt+0x538>
   11424:	ldr	r3, [sp, #12]
   11428:	ldr	r2, [sp, #28]
   1142c:	add	r7, r3, r2
   11430:	mov	r2, #8192	; 0x2000
   11434:	add	r1, sp, #32
   11438:	mov	r0, #0
   1143c:	bl	10d00 <read@plt>
   11440:	subs	r8, r0, #0
   11444:	bge	1151c <close@plt+0x5e8>
   11448:	bl	10e50 <__errno_location@plt>
   1144c:	ldr	r3, [r0]
   11450:	cmp	r3, #4
   11454:	beq	11510 <close@plt+0x5dc>
   11458:	cmn	r8, #1
   1145c:	beq	11604 <close@plt+0x6d0>
   11460:	ldr	r3, [sp, #16]
   11464:	cmp	r3, #0
   11468:	ble	114e4 <close@plt+0x5b0>
   1146c:	add	r5, sp, #12
   11470:	movw	r6, #31012	; 0x7924
   11474:	movt	r6, #1
   11478:	mov	r4, #1
   1147c:	ldm	r5, {r5, r7, r9}
   11480:	b	11490 <close@plt+0x55c>
   11484:	add	r4, r4, #1
   11488:	cmp	r7, r4
   1148c:	blt	114e4 <close@plt+0x5b0>
   11490:	ldr	r3, [r5, #4]!
   11494:	subs	r0, r3, #0
   11498:	beq	11484 <close@plt+0x550>
   1149c:	bl	12044 <close@plt+0x1110>
   114a0:	cmp	r0, #0
   114a4:	beq	11484 <close@plt+0x550>
   114a8:	bl	10e50 <__errno_location@plt>
   114ac:	ldr	r8, [r0]
   114b0:	mov	r0, #0
   114b4:	mov	r1, #3
   114b8:	ldr	r2, [r9, r4, lsl #2]
   114bc:	add	r4, r4, #1
   114c0:	str	r0, [sp, #8]
   114c4:	bl	154f8 <close@plt+0x45c4>
   114c8:	mov	r3, r0
   114cc:	mov	r2, r6
   114d0:	mov	r1, r8
   114d4:	mov	r0, #0
   114d8:	bl	10de4 <error@plt>
   114dc:	cmp	r7, r4
   114e0:	bge	11490 <close@plt+0x55c>
   114e4:	ldr	r0, [sp, #12]
   114e8:	bl	12204 <close@plt+0x12d0>
   114ec:	ldr	r0, [sp, #8]
   114f0:	add	sp, sp, #8192	; 0x2000
   114f4:	add	sp, sp, #36	; 0x24
   114f8:	ldrd	r4, [sp]
   114fc:	ldrd	r6, [sp, #8]
   11500:	ldrd	r8, [sp, #16]
   11504:	ldrd	sl, [sp, #24]
   11508:	add	sp, sp, #32
   1150c:	pop	{pc}		; (ldr pc, [sp], #4)
   11510:	cmp	r6, #0
   11514:	bne	11430 <close@plt+0x4fc>
   11518:	b	11458 <close@plt+0x524>
   1151c:	beq	11460 <close@plt+0x52c>
   11520:	ldr	r3, [sp, #16]
   11524:	cmp	r3, #0
   11528:	blt	11510 <close@plt+0x5dc>
   1152c:	ldr	r3, [sp, #12]
   11530:	movw	sl, #31012	; 0x7924
   11534:	movt	sl, #1
   11538:	ldr	r5, [sp, #20]
   1153c:	sub	r4, r3, #4
   11540:	b	115a0 <close@plt+0x66c>
   11544:	cmp	r0, r2
   11548:	bne	11550 <close@plt+0x61c>
   1154c:	bl	10ef8 <clearerr_unlocked@plt>
   11550:	mov	r1, #3
   11554:	mov	r0, #0
   11558:	ldr	r2, [r5]
   1155c:	bl	154f8 <close@plt+0x45c4>
   11560:	sub	fp, fp, #3
   11564:	mov	r3, #0
   11568:	cmp	fp, #1
   1156c:	mov	r1, r9
   11570:	mov	r2, sl
   11574:	str	r3, [sp, #8]
   11578:	mov	r3, r0
   1157c:	movhi	r0, #0
   11580:	movls	r0, #1
   11584:	bl	10de4 <error@plt>
   11588:	mov	r3, #0
   1158c:	sub	r6, r6, #1
   11590:	str	r3, [r4]
   11594:	cmp	r4, r7
   11598:	add	r5, r5, #4
   1159c:	beq	11510 <close@plt+0x5dc>
   115a0:	ldr	r3, [r4, #4]!
   115a4:	cmp	r3, #0
   115a8:	beq	11594 <close@plt+0x660>
   115ac:	mov	r2, #1
   115b0:	mov	r1, r8
   115b4:	add	r0, sp, #32
   115b8:	bl	10d54 <fwrite_unlocked@plt>
   115bc:	cmp	r0, #1
   115c0:	beq	11594 <close@plt+0x660>
   115c4:	bl	10e50 <__errno_location@plt>
   115c8:	ldr	r3, [sp, #4]
   115cc:	ldr	r9, [r0]
   115d0:	ldr	r2, [r4]
   115d4:	ldr	r0, [r3]
   115d8:	cmp	r9, #32
   115dc:	ldr	r3, [sp]
   115e0:	ldr	fp, [r3, #4]
   115e4:	bne	11544 <close@plt+0x610>
   115e8:	bic	r1, fp, #2
   115ec:	cmp	r1, #1
   115f0:	beq	11544 <close@plt+0x610>
   115f4:	cmp	r0, r2
   115f8:	bne	11588 <close@plt+0x654>
   115fc:	bl	10ef8 <clearerr_unlocked@plt>
   11600:	b	11588 <close@plt+0x654>
   11604:	bl	10e50 <__errno_location@plt>
   11608:	ldr	r4, [r0]
   1160c:	mov	r2, #5
   11610:	movw	r1, #29284	; 0x7264
   11614:	movt	r1, #1
   11618:	mov	r0, #0
   1161c:	bl	10d78 <dcgettext@plt>
   11620:	mov	r2, r0
   11624:	mov	r0, #0
   11628:	mov	r1, r4
   1162c:	str	r0, [sp, #8]
   11630:	bl	10de4 <error@plt>
   11634:	b	11460 <close@plt+0x52c>
   11638:	ldr	r3, [sp, #16]
   1163c:	mov	r6, #1
   11640:	str	r6, [sp, #8]
   11644:	lsl	r3, r3, #2
   11648:	str	r3, [sp, #28]
   1164c:	b	11424 <close@plt+0x4f0>
   11650:	subs	r6, r0, #0
   11654:	str	r7, [sp, #-8]!
   11658:	str	lr, [sp, #4]
   1165c:	sub	sp, sp, #56	; 0x38
   11660:	beq	116a8 <close@plt+0x774>
   11664:	movw	r3, #33096	; 0x8148
   11668:	movt	r3, #2
   1166c:	ldr	r4, [r3]
   11670:	mov	r2, #5
   11674:	movw	r1, #29300	; 0x7274
   11678:	movt	r1, #1
   1167c:	mov	r0, #0
   11680:	bl	10d78 <dcgettext@plt>
   11684:	movw	r3, #33140	; 0x8174
   11688:	movt	r3, #2
   1168c:	mov	r2, r0
   11690:	mov	r1, #1
   11694:	ldr	r3, [r3]
   11698:	mov	r0, r4
   1169c:	bl	10e98 <__fprintf_chk@plt>
   116a0:	mov	r0, r6
   116a4:	bl	10e38 <exit@plt>
   116a8:	mov	r2, #5
   116ac:	movw	r1, #29340	; 0x729c
   116b0:	movt	r1, #1
   116b4:	movw	r7, #33108	; 0x8154
   116b8:	movt	r7, #2
   116bc:	bl	10d78 <dcgettext@plt>
   116c0:	movw	r3, #33140	; 0x8174
   116c4:	movt	r3, #2
   116c8:	mov	r1, r0
   116cc:	mov	r0, #1
   116d0:	ldr	r2, [r3]
   116d4:	bl	10e80 <__printf_chk@plt>
   116d8:	mov	r2, #5
   116dc:	movw	r1, #29376	; 0x72c0
   116e0:	movt	r1, #1
   116e4:	mov	r0, r6
   116e8:	bl	10d78 <dcgettext@plt>
   116ec:	ldr	r1, [r7]
   116f0:	bl	10cdc <fputs_unlocked@plt>
   116f4:	mov	r2, #5
   116f8:	movw	r1, #29568	; 0x7380
   116fc:	movt	r1, #1
   11700:	mov	r0, r6
   11704:	bl	10d78 <dcgettext@plt>
   11708:	ldr	r1, [r7]
   1170c:	bl	10cdc <fputs_unlocked@plt>
   11710:	mov	r2, #5
   11714:	movw	r1, #29712	; 0x7410
   11718:	movt	r1, #1
   1171c:	mov	r0, r6
   11720:	bl	10d78 <dcgettext@plt>
   11724:	ldr	r1, [r7]
   11728:	bl	10cdc <fputs_unlocked@plt>
   1172c:	mov	r2, #5
   11730:	movw	r1, #29760	; 0x7440
   11734:	movt	r1, #1
   11738:	mov	r0, r6
   1173c:	bl	10d78 <dcgettext@plt>
   11740:	ldr	r1, [r7]
   11744:	bl	10cdc <fputs_unlocked@plt>
   11748:	mov	r2, #5
   1174c:	movw	r1, #29816	; 0x7478
   11750:	movt	r1, #1
   11754:	mov	r0, r6
   11758:	bl	10d78 <dcgettext@plt>
   1175c:	ldr	r1, [r7]
   11760:	bl	10cdc <fputs_unlocked@plt>
   11764:	movw	lr, #29072	; 0x7190
   11768:	movt	lr, #1
   1176c:	ldr	ip, [lr]
   11770:	ldr	r4, [lr, #4]
   11774:	ldrd	r8, [lr, #8]
   11778:	subs	r1, ip, #0
   1177c:	str	ip, [sp]
   11780:	ldrd	r2, [lr, #16]
   11784:	str	r4, [sp, #4]
   11788:	ldrd	r4, [lr, #24]
   1178c:	strd	r8, [sp, #8]
   11790:	ldrd	r8, [lr, #32]
   11794:	strd	r2, [sp, #16]
   11798:	ldrd	r2, [lr, #40]	; 0x28
   1179c:	strd	r4, [sp, #24]
   117a0:	ldrd	r4, [lr, #48]	; 0x30
   117a4:	strd	r8, [sp, #32]
   117a8:	strd	r2, [sp, #40]	; 0x28
   117ac:	strd	r4, [sp, #48]	; 0x30
   117b0:	movwne	r5, #29296	; 0x7270
   117b4:	mov	r4, sp
   117b8:	movtne	r5, #1
   117bc:	bne	118b4 <close@plt+0x980>
   117c0:	ldr	r4, [r4, #4]
   117c4:	movw	r1, #30328	; 0x7678
   117c8:	movt	r1, #1
   117cc:	mov	r2, #5
   117d0:	cmp	r4, #0
   117d4:	beq	118c8 <close@plt+0x994>
   117d8:	mov	r0, #0
   117dc:	bl	10d78 <dcgettext@plt>
   117e0:	mov	r1, r0
   117e4:	movw	r3, #30352	; 0x7690
   117e8:	movt	r3, #1
   117ec:	movw	r2, #30392	; 0x76b8
   117f0:	movt	r2, #1
   117f4:	mov	r0, #1
   117f8:	bl	10e80 <__printf_chk@plt>
   117fc:	mov	r1, #0
   11800:	mov	r0, #5
   11804:	bl	10ed4 <setlocale@plt>
   11808:	cmp	r0, #0
   1180c:	movweq	r5, #29296	; 0x7270
   11810:	movteq	r5, #1
   11814:	beq	11838 <close@plt+0x904>
   11818:	movw	r1, #30408	; 0x76c8
   1181c:	movt	r1, #1
   11820:	mov	r2, #3
   11824:	movw	r5, #29296	; 0x7270
   11828:	movt	r5, #1
   1182c:	bl	10f1c <strncmp@plt>
   11830:	cmp	r0, #0
   11834:	bne	11980 <close@plt+0xa4c>
   11838:	mov	r2, #5
   1183c:	movw	r1, #30484	; 0x7714
   11840:	movt	r1, #1
   11844:	mov	r0, #0
   11848:	bl	10d78 <dcgettext@plt>
   1184c:	mov	r1, r0
   11850:	movw	r3, #29296	; 0x7270
   11854:	movt	r3, #1
   11858:	movw	r2, #30352	; 0x7690
   1185c:	movt	r2, #1
   11860:	mov	r0, #1
   11864:	bl	10e80 <__printf_chk@plt>
   11868:	mov	r2, #5
   1186c:	movw	r1, #30512	; 0x7730
   11870:	movt	r1, #1
   11874:	mov	r0, #0
   11878:	bl	10d78 <dcgettext@plt>
   1187c:	movw	r2, #30680	; 0x77d8
   11880:	movt	r2, #1
   11884:	cmp	r4, r5
   11888:	movw	r3, #29372	; 0x72bc
   1188c:	movt	r3, #1
   11890:	mov	r1, r0
   11894:	moveq	r3, r2
   11898:	mov	r2, r4
   1189c:	mov	r0, #1
   118a0:	bl	10e80 <__printf_chk@plt>
   118a4:	b	116a0 <close@plt+0x76c>
   118a8:	ldr	r1, [r4, #8]!
   118ac:	cmp	r1, #0
   118b0:	beq	117c0 <close@plt+0x88c>
   118b4:	mov	r0, r5
   118b8:	bl	10ce8 <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	bne	118a8 <close@plt+0x974>
   118c4:	b	117c0 <close@plt+0x88c>
   118c8:	mov	r0, r4
   118cc:	bl	10d78 <dcgettext@plt>
   118d0:	mov	r1, r0
   118d4:	movw	r3, #30352	; 0x7690
   118d8:	movt	r3, #1
   118dc:	movw	r2, #30392	; 0x76b8
   118e0:	movt	r2, #1
   118e4:	mov	r0, #1
   118e8:	bl	10e80 <__printf_chk@plt>
   118ec:	mov	r1, r4
   118f0:	mov	r0, #5
   118f4:	bl	10ed4 <setlocale@plt>
   118f8:	cmp	r0, #0
   118fc:	beq	11918 <close@plt+0x9e4>
   11900:	movw	r1, #30408	; 0x76c8
   11904:	movt	r1, #1
   11908:	mov	r2, #3
   1190c:	bl	10f1c <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	bne	11974 <close@plt+0xa40>
   11918:	mov	r2, #5
   1191c:	movw	r1, #30484	; 0x7714
   11920:	movt	r1, #1
   11924:	mov	r0, #0
   11928:	bl	10d78 <dcgettext@plt>
   1192c:	mov	r1, r0
   11930:	movw	r3, #29296	; 0x7270
   11934:	movt	r3, #1
   11938:	movw	r2, #30352	; 0x7690
   1193c:	movt	r2, #1
   11940:	mov	r0, #1
   11944:	bl	10e80 <__printf_chk@plt>
   11948:	movw	r1, #30512	; 0x7730
   1194c:	movt	r1, #1
   11950:	mov	r2, #5
   11954:	mov	r0, #0
   11958:	bl	10d78 <dcgettext@plt>
   1195c:	movw	r4, #29296	; 0x7270
   11960:	movt	r4, #1
   11964:	movw	r3, #30680	; 0x77d8
   11968:	movt	r3, #1
   1196c:	mov	r1, r0
   11970:	b	11898 <close@plt+0x964>
   11974:	movw	r5, #29296	; 0x7270
   11978:	movt	r5, #1
   1197c:	mov	r4, r5
   11980:	mov	r2, #5
   11984:	movw	r1, #30412	; 0x76cc
   11988:	movt	r1, #1
   1198c:	mov	r0, #0
   11990:	bl	10d78 <dcgettext@plt>
   11994:	ldr	r1, [r7]
   11998:	bl	10cdc <fputs_unlocked@plt>
   1199c:	b	11838 <close@plt+0x904>
   119a0:	mov	r0, #1
   119a4:	b	11650 <close@plt+0x71c>
   119a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   119ac:	mov	r4, r1
   119b0:	strd	r6, [sp, #8]
   119b4:	mov	r6, r2
   119b8:	strd	r8, [sp, #16]
   119bc:	mov	r8, r3
   119c0:	strd	sl, [sp, #24]
   119c4:	mov	sl, r0
   119c8:	str	lr, [sp, #32]
   119cc:	sub	sp, sp, #12
   119d0:	str	r2, [sp]
   119d4:	bl	10e44 <strlen@plt>
   119d8:	ldr	fp, [r4]
   119dc:	cmp	fp, #0
   119e0:	beq	11af0 <close@plt+0xbbc>
   119e4:	cmp	r6, #0
   119e8:	mov	r7, r0
   119ec:	beq	11a9c <close@plt+0xb68>
   119f0:	mov	r5, #0
   119f4:	mvn	r9, #0
   119f8:	str	r5, [sp, #4]
   119fc:	mov	r2, r7
   11a00:	mov	r1, sl
   11a04:	mov	r0, fp
   11a08:	bl	10f1c <strncmp@plt>
   11a0c:	cmp	r0, #0
   11a10:	mov	r0, fp
   11a14:	bne	11a54 <close@plt+0xb20>
   11a18:	bl	10e44 <strlen@plt>
   11a1c:	ldr	r3, [sp]
   11a20:	cmp	r0, r7
   11a24:	mov	r2, r8
   11a28:	mov	r1, r6
   11a2c:	mla	r0, r8, r9, r3
   11a30:	beq	11a94 <close@plt+0xb60>
   11a34:	cmn	r9, #1
   11a38:	moveq	r9, r5
   11a3c:	beq	11a54 <close@plt+0xb20>
   11a40:	bl	10d60 <memcmp@plt>
   11a44:	ldr	r3, [sp, #4]
   11a48:	cmp	r0, #0
   11a4c:	movne	r3, #1
   11a50:	str	r3, [sp, #4]
   11a54:	ldr	fp, [r4, #4]!
   11a58:	add	r5, r5, #1
   11a5c:	add	r6, r6, r8
   11a60:	cmp	fp, #0
   11a64:	bne	119fc <close@plt+0xac8>
   11a68:	ldr	r3, [sp, #4]
   11a6c:	cmp	r3, #0
   11a70:	mvnne	r9, #1
   11a74:	mov	r0, r9
   11a78:	add	sp, sp, #12
   11a7c:	ldrd	r4, [sp]
   11a80:	ldrd	r6, [sp, #8]
   11a84:	ldrd	r8, [sp, #16]
   11a88:	ldrd	sl, [sp, #24]
   11a8c:	add	sp, sp, #32
   11a90:	pop	{pc}		; (ldr pc, [sp], #4)
   11a94:	mov	r9, r5
   11a98:	b	11a74 <close@plt+0xb40>
   11a9c:	mov	r5, r6
   11aa0:	mvn	r9, #0
   11aa4:	mov	r2, r7
   11aa8:	mov	r1, sl
   11aac:	mov	r0, fp
   11ab0:	bl	10f1c <strncmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	mov	r0, fp
   11abc:	bne	11ad8 <close@plt+0xba4>
   11ac0:	bl	10e44 <strlen@plt>
   11ac4:	cmp	r0, r7
   11ac8:	beq	11a94 <close@plt+0xb60>
   11acc:	cmn	r9, #1
   11ad0:	moveq	r9, r5
   11ad4:	movne	r6, #1
   11ad8:	ldr	fp, [r4, #4]!
   11adc:	add	r5, r5, #1
   11ae0:	cmp	fp, #0
   11ae4:	bne	11aa4 <close@plt+0xb70>
   11ae8:	str	r6, [sp, #4]
   11aec:	b	11a68 <close@plt+0xb34>
   11af0:	mvn	r9, #0
   11af4:	b	11a74 <close@plt+0xb40>
   11af8:	strd	r4, [sp, #-16]!
   11afc:	str	r6, [sp, #8]
   11b00:	mov	r6, r0
   11b04:	ldr	r0, [r1]
   11b08:	str	lr, [sp, #12]
   11b0c:	cmp	r0, #0
   11b10:	beq	11b54 <close@plt+0xc20>
   11b14:	mov	r4, r1
   11b18:	mov	r5, #0
   11b1c:	b	11b30 <close@plt+0xbfc>
   11b20:	ldr	r0, [r4, #4]!
   11b24:	add	r5, r5, #1
   11b28:	cmp	r0, #0
   11b2c:	beq	11b54 <close@plt+0xc20>
   11b30:	mov	r1, r6
   11b34:	bl	10ce8 <strcmp@plt>
   11b38:	cmp	r0, #0
   11b3c:	bne	11b20 <close@plt+0xbec>
   11b40:	mov	r0, r5
   11b44:	ldrd	r4, [sp]
   11b48:	ldr	r6, [sp, #8]
   11b4c:	add	sp, sp, #12
   11b50:	pop	{pc}		; (ldr pc, [sp], #4)
   11b54:	ldrd	r4, [sp]
   11b58:	mvn	r0, #0
   11b5c:	ldr	r6, [sp, #8]
   11b60:	add	sp, sp, #12
   11b64:	pop	{pc}		; (ldr pc, [sp], #4)
   11b68:	cmn	r2, #1
   11b6c:	strd	r4, [sp, #-16]!
   11b70:	mov	r5, r1
   11b74:	movweq	r1, #30896	; 0x78b0
   11b78:	movwne	r1, #30924	; 0x78cc
   11b7c:	str	r6, [sp, #8]
   11b80:	movteq	r1, #1
   11b84:	movtne	r1, #1
   11b88:	str	lr, [sp, #12]
   11b8c:	mov	r6, r0
   11b90:	sub	sp, sp, #8
   11b94:	mov	r2, #5
   11b98:	mov	r0, #0
   11b9c:	bl	10d78 <dcgettext@plt>
   11ba0:	mov	r4, r0
   11ba4:	mov	r2, r5
   11ba8:	mov	r1, #8
   11bac:	mov	r0, #0
   11bb0:	bl	1489c <close@plt+0x3968>
   11bb4:	mov	r5, r0
   11bb8:	mov	r1, r6
   11bbc:	mov	r0, #1
   11bc0:	bl	15c94 <close@plt+0x4d60>
   11bc4:	mov	r1, #0
   11bc8:	mov	r3, r5
   11bcc:	str	r0, [sp]
   11bd0:	mov	r2, r4
   11bd4:	mov	r0, r1
   11bd8:	bl	10de4 <error@plt>
   11bdc:	add	sp, sp, #8
   11be0:	ldrd	r4, [sp]
   11be4:	ldr	r6, [sp, #8]
   11be8:	add	sp, sp, #12
   11bec:	pop	{pc}		; (ldr pc, [sp], #4)
   11bf0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11bf4:	mov	r4, r1
   11bf8:	movw	r1, #30956	; 0x78ec
   11bfc:	movt	r1, #1
   11c00:	strd	r6, [sp, #8]
   11c04:	mov	r6, r0
   11c08:	mov	r7, r2
   11c0c:	mov	r0, #0
   11c10:	strd	r8, [sp, #16]
   11c14:	mov	r2, #5
   11c18:	strd	sl, [sp, #24]
   11c1c:	movw	sl, #33096	; 0x8148
   11c20:	movt	sl, #2
   11c24:	str	lr, [sp, #32]
   11c28:	sub	sp, sp, #12
   11c2c:	bl	10d78 <dcgettext@plt>
   11c30:	ldr	r1, [sl]
   11c34:	bl	10cdc <fputs_unlocked@plt>
   11c38:	ldr	fp, [r6]
   11c3c:	cmp	fp, #0
   11c40:	beq	11ce0 <close@plt+0xdac>
   11c44:	movw	r3, #30980	; 0x7904
   11c48:	movt	r3, #1
   11c4c:	mov	r9, #0
   11c50:	str	r3, [sp]
   11c54:	movw	r3, #30988	; 0x790c
   11c58:	movt	r3, #1
   11c5c:	mov	r5, r9
   11c60:	str	r3, [sp, #4]
   11c64:	b	11c9c <close@plt+0xd68>
   11c68:	mov	r0, fp
   11c6c:	mov	r9, r4
   11c70:	bl	15ca4 <close@plt+0x4d70>
   11c74:	mov	r3, r0
   11c78:	mov	r1, #1
   11c7c:	ldr	r2, [sp]
   11c80:	mov	r0, r8
   11c84:	bl	10e98 <__fprintf_chk@plt>
   11c88:	ldr	fp, [r6, #4]!
   11c8c:	add	r5, r5, #1
   11c90:	add	r4, r4, r7
   11c94:	cmp	fp, #0
   11c98:	beq	11ce0 <close@plt+0xdac>
   11c9c:	cmp	r5, #0
   11ca0:	mov	r1, r4
   11ca4:	ldr	r8, [sl]
   11ca8:	mov	r2, r7
   11cac:	mov	r0, r9
   11cb0:	beq	11c68 <close@plt+0xd34>
   11cb4:	bl	10d60 <memcmp@plt>
   11cb8:	cmp	r0, #0
   11cbc:	bne	11c68 <close@plt+0xd34>
   11cc0:	mov	r0, fp
   11cc4:	bl	15ca4 <close@plt+0x4d70>
   11cc8:	mov	r3, r0
   11ccc:	mov	r1, #1
   11cd0:	ldr	r2, [sp, #4]
   11cd4:	mov	r0, r8
   11cd8:	bl	10e98 <__fprintf_chk@plt>
   11cdc:	b	11c88 <close@plt+0xd54>
   11ce0:	ldr	r0, [sl]
   11ce4:	ldr	r3, [r0, #20]
   11ce8:	ldr	r2, [r0, #24]
   11cec:	cmp	r3, r2
   11cf0:	bcs	11d20 <close@plt+0xdec>
   11cf4:	add	r1, r3, #1
   11cf8:	mov	r2, #10
   11cfc:	str	r1, [r0, #20]
   11d00:	strb	r2, [r3]
   11d04:	add	sp, sp, #12
   11d08:	ldrd	r4, [sp]
   11d0c:	ldrd	r6, [sp, #8]
   11d10:	ldrd	r8, [sp, #16]
   11d14:	ldrd	sl, [sp, #24]
   11d18:	add	sp, sp, #32
   11d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d20:	mov	r1, #10
   11d24:	add	sp, sp, #12
   11d28:	ldrd	r4, [sp]
   11d2c:	ldrd	r6, [sp, #8]
   11d30:	ldrd	r8, [sp, #16]
   11d34:	ldrd	sl, [sp, #24]
   11d38:	ldr	lr, [sp, #32]
   11d3c:	add	sp, sp, #36	; 0x24
   11d40:	b	10ec8 <__overflow@plt>
   11d44:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11d48:	mov	r5, r1
   11d4c:	strd	r6, [sp, #8]
   11d50:	mov	r6, r2
   11d54:	mov	r7, r3
   11d58:	strd	r8, [sp, #16]
   11d5c:	mov	r8, r0
   11d60:	str	lr, [sp, #24]
   11d64:	sub	sp, sp, #12
   11d68:	ldrb	r4, [sp, #48]	; 0x30
   11d6c:	cmp	r4, #0
   11d70:	bne	11e1c <close@plt+0xee8>
   11d74:	ldr	r0, [r2]
   11d78:	cmp	r0, #0
   11d7c:	movne	r9, r2
   11d80:	bne	11e04 <close@plt+0xed0>
   11d84:	movw	r1, #30896	; 0x78b0
   11d88:	movt	r1, #1
   11d8c:	mov	r2, #5
   11d90:	mov	r0, #0
   11d94:	bl	10d78 <dcgettext@plt>
   11d98:	mov	r9, r0
   11d9c:	mov	r2, r5
   11da0:	mov	r1, #8
   11da4:	mov	r0, #0
   11da8:	bl	1489c <close@plt+0x3968>
   11dac:	mov	r4, r0
   11db0:	mov	r1, r8
   11db4:	mov	r0, #1
   11db8:	bl	15c94 <close@plt+0x4d60>
   11dbc:	mov	r1, #0
   11dc0:	mov	r3, r4
   11dc4:	str	r0, [sp]
   11dc8:	mov	r2, r9
   11dcc:	mov	r0, r1
   11dd0:	bl	10de4 <error@plt>
   11dd4:	mov	r0, r6
   11dd8:	mov	r1, r7
   11ddc:	ldr	r2, [sp, #40]	; 0x28
   11de0:	bl	11bf0 <close@plt+0xcbc>
   11de4:	ldr	r3, [sp, #44]	; 0x2c
   11de8:	blx	r3
   11dec:	mvn	r0, #0
   11df0:	b	11e38 <close@plt+0xf04>
   11df4:	ldr	r0, [r9, #4]!
   11df8:	add	r4, r4, #1
   11dfc:	cmp	r0, #0
   11e00:	beq	11d84 <close@plt+0xe50>
   11e04:	mov	r1, r5
   11e08:	bl	10ce8 <strcmp@plt>
   11e0c:	cmp	r0, #0
   11e10:	bne	11df4 <close@plt+0xec0>
   11e14:	mov	r0, r4
   11e18:	b	11e38 <close@plt+0xf04>
   11e1c:	mov	r2, r3
   11e20:	mov	r1, r6
   11e24:	ldr	r3, [sp, #40]	; 0x28
   11e28:	mov	r0, r5
   11e2c:	bl	119a8 <close@plt+0xa74>
   11e30:	cmp	r0, #0
   11e34:	blt	11e50 <close@plt+0xf1c>
   11e38:	add	sp, sp, #12
   11e3c:	ldrd	r4, [sp]
   11e40:	ldrd	r6, [sp, #8]
   11e44:	ldrd	r8, [sp, #16]
   11e48:	add	sp, sp, #24
   11e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e50:	cmn	r0, #1
   11e54:	beq	11d84 <close@plt+0xe50>
   11e58:	movw	r1, #30924	; 0x78cc
   11e5c:	movt	r1, #1
   11e60:	mov	r2, #5
   11e64:	mov	r0, #0
   11e68:	bl	10d78 <dcgettext@plt>
   11e6c:	mov	r9, r0
   11e70:	b	11d9c <close@plt+0xe68>
   11e74:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e78:	strd	r6, [sp, #8]
   11e7c:	ldr	r7, [r1]
   11e80:	str	r8, [sp, #16]
   11e84:	str	lr, [sp, #20]
   11e88:	cmp	r7, #0
   11e8c:	beq	11ecc <close@plt+0xf98>
   11e90:	mov	r6, r3
   11e94:	mov	r8, r0
   11e98:	mov	r4, r2
   11e9c:	mov	r5, r1
   11ea0:	b	11eb0 <close@plt+0xf7c>
   11ea4:	ldr	r7, [r5, #4]!
   11ea8:	cmp	r7, #0
   11eac:	beq	11ecc <close@plt+0xf98>
   11eb0:	mov	r1, r4
   11eb4:	mov	r2, r6
   11eb8:	mov	r0, r8
   11ebc:	add	r4, r4, r6
   11ec0:	bl	10d60 <memcmp@plt>
   11ec4:	cmp	r0, #0
   11ec8:	bne	11ea4 <close@plt+0xf70>
   11ecc:	mov	r0, r7
   11ed0:	ldrd	r4, [sp]
   11ed4:	ldrd	r6, [sp, #8]
   11ed8:	ldr	r8, [sp, #16]
   11edc:	add	sp, sp, #20
   11ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee4:	movw	r3, #33132	; 0x816c
   11ee8:	movt	r3, #2
   11eec:	str	r0, [r3]
   11ef0:	bx	lr
   11ef4:	movw	r3, #33132	; 0x816c
   11ef8:	movt	r3, #2
   11efc:	strb	r0, [r3, #4]
   11f00:	bx	lr
   11f04:	movw	r3, #33108	; 0x8154
   11f08:	movt	r3, #2
   11f0c:	strd	r4, [sp, #-16]!
   11f10:	ldr	r0, [r3]
   11f14:	str	r6, [sp, #8]
   11f18:	str	lr, [sp, #12]
   11f1c:	sub	sp, sp, #8
   11f20:	bl	16c88 <close@plt+0x5d54>
   11f24:	cmp	r0, #0
   11f28:	beq	11f54 <close@plt+0x1020>
   11f2c:	movw	r4, #33132	; 0x816c
   11f30:	movt	r4, #2
   11f34:	ldrb	r6, [r4, #4]
   11f38:	bl	10e50 <__errno_location@plt>
   11f3c:	mov	r5, r0
   11f40:	cmp	r6, #0
   11f44:	beq	11f80 <close@plt+0x104c>
   11f48:	ldr	r3, [r0]
   11f4c:	cmp	r3, #32
   11f50:	bne	11f80 <close@plt+0x104c>
   11f54:	movw	r3, #33096	; 0x8148
   11f58:	movt	r3, #2
   11f5c:	ldr	r0, [r3]
   11f60:	bl	16c88 <close@plt+0x5d54>
   11f64:	cmp	r0, #0
   11f68:	bne	11fc8 <close@plt+0x1094>
   11f6c:	add	sp, sp, #8
   11f70:	ldrd	r4, [sp]
   11f74:	ldr	r6, [sp, #8]
   11f78:	add	sp, sp, #12
   11f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f80:	movw	r1, #30996	; 0x7914
   11f84:	movt	r1, #1
   11f88:	mov	r2, #5
   11f8c:	mov	r0, #0
   11f90:	bl	10d78 <dcgettext@plt>
   11f94:	mov	r6, r0
   11f98:	ldr	r0, [r4]
   11f9c:	cmp	r0, #0
   11fa0:	beq	11fd8 <close@plt+0x10a4>
   11fa4:	ldr	r4, [r5]
   11fa8:	bl	15128 <close@plt+0x41f4>
   11fac:	mov	r3, r0
   11fb0:	movw	r2, #31008	; 0x7920
   11fb4:	movt	r2, #1
   11fb8:	mov	r0, #0
   11fbc:	str	r6, [sp]
   11fc0:	mov	r1, r4
   11fc4:	bl	10de4 <error@plt>
   11fc8:	movw	r3, #33012	; 0x80f4
   11fcc:	movt	r3, #2
   11fd0:	ldr	r0, [r3]
   11fd4:	bl	10d24 <_exit@plt>
   11fd8:	mov	r3, r6
   11fdc:	movw	r2, #31012	; 0x7924
   11fe0:	movt	r2, #1
   11fe4:	ldr	r1, [r5]
   11fe8:	bl	10de4 <error@plt>
   11fec:	b	11fc8 <close@plt+0x1094>
   11ff0:	b	10cf4 <posix_fadvise64@plt>
   11ff4:	cmp	r0, #0
   11ff8:	bxeq	lr
   11ffc:	str	r4, [sp, #-16]!
   12000:	mov	r4, r1
   12004:	strd	r6, [sp, #4]
   12008:	mov	r6, #0
   1200c:	mov	r7, #0
   12010:	str	lr, [sp, #12]
   12014:	sub	sp, sp, #16
   12018:	bl	10e8c <fileno@plt>
   1201c:	mov	r2, r6
   12020:	mov	r3, r7
   12024:	strd	r6, [sp]
   12028:	str	r4, [sp, #8]
   1202c:	bl	10cf4 <posix_fadvise64@plt>
   12030:	add	sp, sp, #16
   12034:	ldr	r4, [sp]
   12038:	ldrd	r6, [sp, #4]
   1203c:	add	sp, sp, #12
   12040:	pop	{pc}		; (ldr pc, [sp], #4)
   12044:	strd	r4, [sp, #-12]!
   12048:	mov	r4, r0
   1204c:	str	lr, [sp, #8]
   12050:	sub	sp, sp, #12
   12054:	bl	10e8c <fileno@plt>
   12058:	cmp	r0, #0
   1205c:	mov	r0, r4
   12060:	blt	120e4 <close@plt+0x11b0>
   12064:	bl	10e08 <__freading@plt>
   12068:	cmp	r0, #0
   1206c:	bne	120b0 <close@plt+0x117c>
   12070:	mov	r0, r4
   12074:	bl	120f8 <close@plt+0x11c4>
   12078:	cmp	r0, #0
   1207c:	beq	120e0 <close@plt+0x11ac>
   12080:	bl	10e50 <__errno_location@plt>
   12084:	mov	r5, r0
   12088:	mov	r0, r4
   1208c:	ldr	r4, [r5]
   12090:	bl	10ea4 <fclose@plt>
   12094:	cmp	r4, #0
   12098:	mvnne	r0, #0
   1209c:	strne	r4, [r5]
   120a0:	add	sp, sp, #12
   120a4:	ldrd	r4, [sp]
   120a8:	add	sp, sp, #8
   120ac:	pop	{pc}		; (ldr pc, [sp], #4)
   120b0:	mov	r0, r4
   120b4:	bl	10e8c <fileno@plt>
   120b8:	mov	r1, #1
   120bc:	mov	r2, #0
   120c0:	mov	r3, #0
   120c4:	str	r1, [sp]
   120c8:	bl	10db4 <lseek64@plt>
   120cc:	mvn	r3, #0
   120d0:	mvn	r2, #0
   120d4:	cmp	r1, r3
   120d8:	cmpeq	r0, r2
   120dc:	bne	12070 <close@plt+0x113c>
   120e0:	mov	r0, r4
   120e4:	add	sp, sp, #12
   120e8:	ldrd	r4, [sp]
   120ec:	ldr	lr, [sp, #8]
   120f0:	add	sp, sp, #12
   120f4:	b	10ea4 <fclose@plt>
   120f8:	str	r4, [sp, #-8]!
   120fc:	subs	r4, r0, #0
   12100:	str	lr, [sp, #4]
   12104:	sub	sp, sp, #8
   12108:	beq	12124 <close@plt+0x11f0>
   1210c:	bl	10e08 <__freading@plt>
   12110:	cmp	r0, #0
   12114:	beq	12124 <close@plt+0x11f0>
   12118:	ldr	r3, [r4]
   1211c:	tst	r3, #256	; 0x100
   12120:	bne	1213c <close@plt+0x1208>
   12124:	mov	r0, r4
   12128:	add	sp, sp, #8
   1212c:	ldr	r4, [sp]
   12130:	ldr	lr, [sp, #4]
   12134:	add	sp, sp, #8
   12138:	b	10d0c <fflush@plt>
   1213c:	mov	r1, #1
   12140:	mov	r2, #0
   12144:	mov	r3, #0
   12148:	mov	r0, r4
   1214c:	str	r1, [sp]
   12150:	bl	12264 <close@plt+0x1330>
   12154:	b	12124 <close@plt+0x11f0>
   12158:	strd	r4, [sp, #-16]!
   1215c:	mov	r5, r1
   12160:	str	r6, [sp, #8]
   12164:	str	lr, [sp, #12]
   12168:	bl	10f04 <fopen64@plt>
   1216c:	subs	r4, r0, #0
   12170:	beq	12180 <close@plt+0x124c>
   12174:	bl	10e8c <fileno@plt>
   12178:	cmp	r0, #2
   1217c:	bls	12194 <close@plt+0x1260>
   12180:	mov	r0, r4
   12184:	ldrd	r4, [sp]
   12188:	ldr	r6, [sp, #8]
   1218c:	add	sp, sp, #12
   12190:	pop	{pc}		; (ldr pc, [sp], #4)
   12194:	bl	15e38 <close@plt+0x4f04>
   12198:	subs	r6, r0, #0
   1219c:	blt	121e4 <close@plt+0x12b0>
   121a0:	mov	r0, r4
   121a4:	bl	12044 <close@plt+0x1110>
   121a8:	cmp	r0, #0
   121ac:	bne	121c4 <close@plt+0x1290>
   121b0:	mov	r1, r5
   121b4:	mov	r0, r6
   121b8:	bl	10cc4 <fdopen@plt>
   121bc:	subs	r4, r0, #0
   121c0:	bne	12180 <close@plt+0x124c>
   121c4:	bl	10e50 <__errno_location@plt>
   121c8:	mov	r5, r0
   121cc:	mov	r0, r6
   121d0:	ldr	r6, [r5]
   121d4:	mov	r4, #0
   121d8:	bl	10f34 <close@plt>
   121dc:	str	r6, [r5]
   121e0:	b	12180 <close@plt+0x124c>
   121e4:	bl	10e50 <__errno_location@plt>
   121e8:	mov	r5, r0
   121ec:	mov	r0, r4
   121f0:	ldr	r6, [r5]
   121f4:	mov	r4, #0
   121f8:	bl	12044 <close@plt+0x1110>
   121fc:	str	r6, [r5]
   12200:	b	12180 <close@plt+0x124c>
   12204:	strd	r4, [sp, #-12]!
   12208:	mov	r5, r0
   1220c:	str	lr, [sp, #8]
   12210:	sub	sp, sp, #12
   12214:	bl	10e50 <__errno_location@plt>
   12218:	mov	r4, r0
   1221c:	mov	r2, #0
   12220:	ldr	r3, [r4]
   12224:	mov	r0, r5
   12228:	str	r2, [r4]
   1222c:	str	r3, [sp]
   12230:	str	r3, [sp, #4]
   12234:	bl	10d18 <free@plt>
   12238:	ldr	r3, [r4]
   1223c:	add	r2, sp, #8
   12240:	clz	r3, r3
   12244:	lsr	r3, r3, #5
   12248:	add	r3, r2, r3, lsl #2
   1224c:	ldr	r3, [r3, #-8]
   12250:	str	r3, [r4]
   12254:	add	sp, sp, #12
   12258:	ldrd	r4, [sp]
   1225c:	add	sp, sp, #8
   12260:	pop	{pc}		; (ldr pc, [sp], #4)
   12264:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12268:	mov	r4, r0
   1226c:	ldr	ip, [r0, #4]
   12270:	strd	r6, [sp, #8]
   12274:	str	lr, [sp, #20]
   12278:	ldr	lr, [r0, #8]
   1227c:	str	r8, [sp, #16]
   12280:	sub	sp, sp, #8
   12284:	ldr	r5, [sp, #32]
   12288:	cmp	lr, ip
   1228c:	beq	122b4 <close@plt+0x1380>
   12290:	mov	r0, r4
   12294:	str	r5, [sp, #32]
   12298:	add	sp, sp, #8
   1229c:	ldrd	r4, [sp]
   122a0:	ldrd	r6, [sp, #8]
   122a4:	ldr	r8, [sp, #16]
   122a8:	ldr	lr, [sp, #20]
   122ac:	add	sp, sp, #24
   122b0:	b	10eb0 <fseeko64@plt>
   122b4:	ldr	ip, [r0, #16]
   122b8:	ldr	lr, [r0, #20]
   122bc:	cmp	lr, ip
   122c0:	bne	12290 <close@plt+0x135c>
   122c4:	ldr	r8, [r0, #36]	; 0x24
   122c8:	cmp	r8, #0
   122cc:	bne	12290 <close@plt+0x135c>
   122d0:	mov	r6, r2
   122d4:	mov	r7, r3
   122d8:	bl	10e8c <fileno@plt>
   122dc:	mov	r2, r6
   122e0:	mov	r3, r7
   122e4:	str	r5, [sp]
   122e8:	bl	10db4 <lseek64@plt>
   122ec:	mvn	r3, #0
   122f0:	mvn	r2, #0
   122f4:	cmp	r1, r3
   122f8:	cmpeq	r0, r2
   122fc:	beq	1232c <close@plt+0x13f8>
   12300:	ldr	r3, [r4]
   12304:	strd	r0, [r4, #80]	; 0x50
   12308:	bic	r3, r3, #16
   1230c:	str	r3, [r4]
   12310:	mov	r0, r8
   12314:	add	sp, sp, #8
   12318:	ldrd	r4, [sp]
   1231c:	ldrd	r6, [sp, #8]
   12320:	ldr	r8, [sp, #16]
   12324:	add	sp, sp, #20
   12328:	pop	{pc}		; (ldr pc, [sp], #4)
   1232c:	mvn	r8, #0
   12330:	b	12310 <close@plt+0x13dc>
   12334:	strd	r4, [sp, #-16]!
   12338:	subs	r4, r0, #0
   1233c:	str	r6, [sp, #8]
   12340:	str	lr, [sp, #12]
   12344:	beq	123dc <close@plt+0x14a8>
   12348:	mov	r1, #47	; 0x2f
   1234c:	bl	10ee0 <strrchr@plt>
   12350:	subs	r5, r0, #0
   12354:	beq	123b4 <close@plt+0x1480>
   12358:	add	r6, r5, #1
   1235c:	sub	r3, r6, r4
   12360:	cmp	r3, #6
   12364:	ble	123b4 <close@plt+0x1480>
   12368:	movw	r1, #31072	; 0x7960
   1236c:	movt	r1, #1
   12370:	mov	r2, #7
   12374:	sub	r0, r5, #6
   12378:	bl	10f1c <strncmp@plt>
   1237c:	cmp	r0, #0
   12380:	bne	123b4 <close@plt+0x1480>
   12384:	movw	r1, #31080	; 0x7968
   12388:	movt	r1, #1
   1238c:	mov	r2, #3
   12390:	mov	r0, r6
   12394:	bl	10f1c <strncmp@plt>
   12398:	cmp	r0, #0
   1239c:	movne	r4, r6
   123a0:	bne	123b4 <close@plt+0x1480>
   123a4:	add	r4, r5, #4
   123a8:	movw	r3, #33080	; 0x8138
   123ac:	movt	r3, #2
   123b0:	str	r4, [r3]
   123b4:	movw	r2, #33140	; 0x8174
   123b8:	movt	r2, #2
   123bc:	ldr	r6, [sp, #8]
   123c0:	movw	r3, #33084	; 0x813c
   123c4:	movt	r3, #2
   123c8:	str	r4, [r2]
   123cc:	str	r4, [r3]
   123d0:	ldrd	r4, [sp]
   123d4:	add	sp, sp, #12
   123d8:	pop	{pc}		; (ldr pc, [sp], #4)
   123dc:	movw	r3, #33096	; 0x8148
   123e0:	movt	r3, #2
   123e4:	movw	r0, #31016	; 0x7928
   123e8:	movt	r0, #1
   123ec:	ldr	r3, [r3]
   123f0:	mov	r2, #55	; 0x37
   123f4:	mov	r1, #1
   123f8:	bl	10da8 <fwrite@plt>
   123fc:	bl	10f28 <abort@plt>
   12400:	mov	r2, #5
   12404:	strd	r4, [sp, #-16]!
   12408:	mov	r5, r0
   1240c:	str	r6, [sp, #8]
   12410:	mov	r6, r1
   12414:	mov	r1, r0
   12418:	mov	r0, #0
   1241c:	str	lr, [sp, #12]
   12420:	bl	10d78 <dcgettext@plt>
   12424:	cmp	r5, r0
   12428:	mov	r4, r0
   1242c:	beq	12444 <close@plt+0x1510>
   12430:	mov	r0, r4
   12434:	ldrd	r4, [sp]
   12438:	ldr	r6, [sp, #8]
   1243c:	add	sp, sp, #12
   12440:	pop	{pc}		; (ldr pc, [sp], #4)
   12444:	bl	16ef8 <close@plt+0x5fc4>
   12448:	ldrb	r3, [r0]
   1244c:	bic	r3, r3, #32
   12450:	cmp	r3, #85	; 0x55
   12454:	bne	124bc <close@plt+0x1588>
   12458:	ldrb	r3, [r0, #1]
   1245c:	bic	r3, r3, #32
   12460:	cmp	r3, #84	; 0x54
   12464:	bne	1253c <close@plt+0x1608>
   12468:	ldrb	r3, [r0, #2]
   1246c:	bic	r3, r3, #32
   12470:	cmp	r3, #70	; 0x46
   12474:	bne	1253c <close@plt+0x1608>
   12478:	ldrb	r3, [r0, #3]
   1247c:	cmp	r3, #45	; 0x2d
   12480:	bne	1253c <close@plt+0x1608>
   12484:	ldrb	r3, [r0, #4]
   12488:	cmp	r3, #56	; 0x38
   1248c:	bne	1253c <close@plt+0x1608>
   12490:	ldrb	r3, [r0, #5]
   12494:	cmp	r3, #0
   12498:	bne	1253c <close@plt+0x1608>
   1249c:	ldrb	r2, [r4]
   124a0:	movw	r3, #31172	; 0x79c4
   124a4:	movt	r3, #1
   124a8:	movw	r4, #31184	; 0x79d0
   124ac:	movt	r4, #1
   124b0:	cmp	r2, #96	; 0x60
   124b4:	movne	r4, r3
   124b8:	b	12430 <close@plt+0x14fc>
   124bc:	cmp	r3, #71	; 0x47
   124c0:	bne	1253c <close@plt+0x1608>
   124c4:	ldrb	r3, [r0, #1]
   124c8:	bic	r3, r3, #32
   124cc:	cmp	r3, #66	; 0x42
   124d0:	bne	1253c <close@plt+0x1608>
   124d4:	ldrb	r3, [r0, #2]
   124d8:	cmp	r3, #49	; 0x31
   124dc:	bne	1253c <close@plt+0x1608>
   124e0:	ldrb	r3, [r0, #3]
   124e4:	cmp	r3, #56	; 0x38
   124e8:	bne	1253c <close@plt+0x1608>
   124ec:	ldrb	r3, [r0, #4]
   124f0:	cmp	r3, #48	; 0x30
   124f4:	bne	1253c <close@plt+0x1608>
   124f8:	ldrb	r3, [r0, #5]
   124fc:	cmp	r3, #51	; 0x33
   12500:	bne	1253c <close@plt+0x1608>
   12504:	ldrb	r3, [r0, #6]
   12508:	cmp	r3, #48	; 0x30
   1250c:	bne	1253c <close@plt+0x1608>
   12510:	ldrb	r3, [r0, #7]
   12514:	cmp	r3, #0
   12518:	bne	1253c <close@plt+0x1608>
   1251c:	ldrb	r2, [r4]
   12520:	movw	r3, #31176	; 0x79c8
   12524:	movt	r3, #1
   12528:	movw	r4, #31180	; 0x79cc
   1252c:	movt	r4, #1
   12530:	cmp	r2, #96	; 0x60
   12534:	movne	r4, r3
   12538:	b	12430 <close@plt+0x14fc>
   1253c:	movw	r3, #31188	; 0x79d4
   12540:	movt	r3, #1
   12544:	cmp	r6, #9
   12548:	movw	r4, #31168	; 0x79c0
   1254c:	movt	r4, #1
   12550:	movne	r4, r3
   12554:	b	12430 <close@plt+0x14fc>
   12558:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1255c:	strd	r6, [sp, #8]
   12560:	strd	r8, [sp, #16]
   12564:	mov	r8, r3
   12568:	strd	sl, [sp, #24]
   1256c:	mov	fp, r0
   12570:	mov	sl, r1
   12574:	str	lr, [sp, #32]
   12578:	sub	sp, sp, #140	; 0x8c
   1257c:	ldr	r3, [sp, #180]	; 0xb4
   12580:	str	r2, [sp, #28]
   12584:	and	r4, r3, #2
   12588:	ubfx	r3, r3, #1, #1
   1258c:	str	r3, [sp, #44]	; 0x2c
   12590:	bl	10dc0 <__ctype_get_mb_cur_max@plt>
   12594:	ldr	r3, [sp, #176]	; 0xb0
   12598:	str	r0, [sp, #76]	; 0x4c
   1259c:	cmp	r3, #10
   125a0:	ldrls	pc, [pc, r3, lsl #2]
   125a4:	b	13f40 <close@plt+0x300c>
   125a8:	andeq	r2, r1, r8, lsr #20
   125ac:	andeq	r2, r1, r4, asr #22
   125b0:	andeq	r3, r1, r0, asr #1
   125b4:			; <UNDEFINED> instruction: 0x00012bb0
   125b8:	andeq	r2, r1, r0, lsr r9
   125bc:	andeq	r2, r1, ip, lsr #19
   125c0:	andeq	r2, r1, r4, lsl #21
   125c4:	andeq	r2, r1, ip, ror #21
   125c8:	ldrdeq	r2, [r1], -r4
   125cc:	ldrdeq	r2, [r1], -r4
   125d0:	ldrdeq	r2, [r1], -r4
   125d4:	ldr	r3, [sp, #176]	; 0xb0
   125d8:	cmp	r3, #10
   125dc:	beq	12608 <close@plt+0x16d4>
   125e0:	mov	r1, r3
   125e4:	movw	r0, #31192	; 0x79d8
   125e8:	movt	r0, #1
   125ec:	bl	12400 <close@plt+0x14cc>
   125f0:	str	r0, [sp, #188]	; 0xbc
   125f4:	movw	r0, #31188	; 0x79d4
   125f8:	movt	r0, #1
   125fc:	ldr	r1, [sp, #176]	; 0xb0
   12600:	bl	12400 <close@plt+0x14cc>
   12604:	str	r0, [sp, #192]	; 0xc0
   12608:	cmp	r4, #0
   1260c:	movne	r4, #0
   12610:	beq	13ccc <close@plt+0x2d98>
   12614:	mov	r5, #0
   12618:	ldr	r0, [sp, #192]	; 0xc0
   1261c:	mov	r9, r5
   12620:	str	r5, [sp, #64]	; 0x40
   12624:	bl	10e44 <strlen@plt>
   12628:	mov	r3, #1
   1262c:	ldr	r2, [sp, #44]	; 0x2c
   12630:	cmp	r0, r5
   12634:	moveq	r2, r5
   12638:	str	r3, [sp, #32]
   1263c:	str	r3, [sp, #48]	; 0x30
   12640:	str	r5, [sp, #52]	; 0x34
   12644:	str	r3, [sp, #60]	; 0x3c
   12648:	ldr	r3, [sp, #180]	; 0xb4
   1264c:	str	r0, [sp, #56]	; 0x38
   12650:	str	r5, [sp, #68]	; 0x44
   12654:	str	r5, [sp, #80]	; 0x50
   12658:	str	r5, [sp, #84]	; 0x54
   1265c:	and	r3, r3, #1
   12660:	str	r2, [sp, #88]	; 0x58
   12664:	str	r3, [sp, #92]	; 0x5c
   12668:	ldr	r3, [sp, #180]	; 0xb4
   1266c:	and	r3, r3, #4
   12670:	str	r3, [sp, #96]	; 0x60
   12674:	ldr	r3, [sp, #192]	; 0xc0
   12678:	str	r3, [sp, #72]	; 0x48
   1267c:	mov	r3, fp
   12680:	mov	r7, #0
   12684:	mov	fp, r9
   12688:	mov	r9, r3
   1268c:	cmn	r8, #1
   12690:	beq	12c94 <close@plt+0x1d60>
   12694:	subs	r6, r8, r7
   12698:	movne	r6, #1
   1269c:	cmp	r6, #0
   126a0:	beq	12cac <close@plt+0x1d78>
   126a4:	ldr	r0, [sp, #28]
   126a8:	ldr	r3, [sp, #48]	; 0x30
   126ac:	cmp	r3, #0
   126b0:	add	r3, r0, r7
   126b4:	str	r3, [sp, #36]	; 0x24
   126b8:	beq	13138 <close@plt+0x2204>
   126bc:	ldr	r2, [sp, #56]	; 0x38
   126c0:	cmp	r2, #0
   126c4:	beq	13638 <close@plt+0x2704>
   126c8:	cmp	r2, #1
   126cc:	mov	r3, r2
   126d0:	movls	r3, #0
   126d4:	movhi	r3, #1
   126d8:	cmn	r8, #1
   126dc:	add	r5, r7, r2
   126e0:	movne	r3, #0
   126e4:	cmp	r3, #0
   126e8:	beq	126f4 <close@plt+0x17c0>
   126ec:	bl	10e44 <strlen@plt>
   126f0:	mov	r8, r0
   126f4:	cmp	r5, r8
   126f8:	bhi	13638 <close@plt+0x2704>
   126fc:	ldr	r0, [sp, #36]	; 0x24
   12700:	ldr	r2, [sp, #56]	; 0x38
   12704:	ldr	r1, [sp, #72]	; 0x48
   12708:	bl	10d60 <memcmp@plt>
   1270c:	cmp	r0, #0
   12710:	bne	13638 <close@plt+0x2704>
   12714:	ldr	r3, [sp, #44]	; 0x2c
   12718:	cmp	r3, #0
   1271c:	bne	13de4 <close@plt+0x2eb0>
   12720:	ldr	r3, [sp, #36]	; 0x24
   12724:	ldrb	r5, [r3]
   12728:	cmp	r5, #126	; 0x7e
   1272c:	ldrls	pc, [pc, r5, lsl #2]
   12730:	b	13bcc <close@plt+0x2c98>
   12734:	andeq	r2, r1, r8, lsl #28
   12738:	andeq	r3, r1, ip, asr #23
   1273c:	andeq	r3, r1, ip, asr #23
   12740:	andeq	r3, r1, ip, asr #23
   12744:	andeq	r3, r1, ip, asr #23
   12748:	andeq	r3, r1, ip, asr #23
   1274c:	andeq	r3, r1, ip, asr #23
   12750:	andeq	r2, r1, r0, ror #26
   12754:	andeq	r2, r1, r8, asr sp
   12758:	andeq	r2, r1, r8, ror #26
   1275c:	andeq	r2, r1, ip, ror #29
   12760:	ldrdeq	r2, [r1], -ip
   12764:	andeq	r2, r1, r4, lsl #24
   12768:			; <UNDEFINED> instruction: 0x00012eb8
   1276c:	andeq	r3, r1, ip, asr #23
   12770:	andeq	r3, r1, ip, asr #23
   12774:	andeq	r3, r1, ip, asr #23
   12778:	andeq	r3, r1, ip, asr #23
   1277c:	andeq	r3, r1, ip, asr #23
   12780:	andeq	r3, r1, ip, asr #23
   12784:	andeq	r3, r1, ip, asr #23
   12788:	andeq	r3, r1, ip, asr #23
   1278c:	andeq	r3, r1, ip, asr #23
   12790:	andeq	r3, r1, ip, asr #23
   12794:	andeq	r3, r1, ip, asr #23
   12798:	andeq	r3, r1, ip, asr #23
   1279c:	andeq	r3, r1, ip, asr #23
   127a0:	andeq	r3, r1, ip, asr #23
   127a4:	andeq	r3, r1, ip, asr #23
   127a8:	andeq	r3, r1, ip, asr #23
   127ac:	andeq	r3, r1, ip, asr #23
   127b0:	andeq	r3, r1, ip, asr #23
   127b4:	andeq	r2, r1, r4, ror #30
   127b8:	andeq	r2, r1, r8, asr pc
   127bc:	andeq	r2, r1, r8, asr pc
   127c0:	andeq	r2, r1, ip, asr #30
   127c4:	andeq	r2, r1, r8, asr pc
   127c8:	andeq	r3, r1, r0, lsr r0
   127cc:	andeq	r2, r1, r8, asr pc
   127d0:	andeq	r3, r1, r0, lsr #1
   127d4:	andeq	r2, r1, r8, asr pc
   127d8:	andeq	r2, r1, r8, asr pc
   127dc:	andeq	r2, r1, r8, asr pc
   127e0:	andeq	r3, r1, r0, lsr r0
   127e4:	andeq	r3, r1, r0, lsr r0
   127e8:	andeq	r3, r1, r0, lsr r0
   127ec:	andeq	r3, r1, r0, lsr r0
   127f0:	andeq	r3, r1, r0, lsr r0
   127f4:	andeq	r3, r1, r0, lsr r0
   127f8:	andeq	r3, r1, r0, lsr r0
   127fc:	andeq	r3, r1, r0, lsr r0
   12800:	andeq	r3, r1, r0, lsr r0
   12804:	andeq	r3, r1, r0, lsr r0
   12808:	andeq	r3, r1, r0, lsr r0
   1280c:	andeq	r3, r1, r0, lsr r0
   12810:	andeq	r3, r1, r0, lsr r0
   12814:	andeq	r3, r1, r0, lsr r0
   12818:	andeq	r3, r1, r0, lsr r0
   1281c:	andeq	r3, r1, r0, lsr r0
   12820:	andeq	r2, r1, r8, asr pc
   12824:	andeq	r2, r1, r8, asr pc
   12828:	andeq	r2, r1, r8, asr pc
   1282c:	andeq	r2, r1, r8, asr pc
   12830:	andeq	r3, r1, r0, asr r0
   12834:	andeq	r3, r1, ip, asr #23
   12838:	andeq	r3, r1, r0, lsr r0
   1283c:	andeq	r3, r1, r0, lsr r0
   12840:	andeq	r3, r1, r0, lsr r0
   12844:	andeq	r3, r1, r0, lsr r0
   12848:	andeq	r3, r1, r0, lsr r0
   1284c:	andeq	r3, r1, r0, lsr r0
   12850:	andeq	r3, r1, r0, lsr r0
   12854:	andeq	r3, r1, r0, lsr r0
   12858:	andeq	r3, r1, r0, lsr r0
   1285c:	andeq	r3, r1, r0, lsr r0
   12860:	andeq	r3, r1, r0, lsr r0
   12864:	andeq	r3, r1, r0, lsr r0
   12868:	andeq	r3, r1, r0, lsr r0
   1286c:	andeq	r3, r1, r0, lsr r0
   12870:	andeq	r3, r1, r0, lsr r0
   12874:	andeq	r3, r1, r0, lsr r0
   12878:	andeq	r3, r1, r0, lsr r0
   1287c:	andeq	r3, r1, r0, lsr r0
   12880:	andeq	r3, r1, r0, lsr r0
   12884:	andeq	r3, r1, r0, lsr r0
   12888:	andeq	r3, r1, r0, lsr r0
   1288c:	andeq	r3, r1, r0, lsr r0
   12890:	andeq	r3, r1, r0, lsr r0
   12894:	andeq	r3, r1, r0, lsr r0
   12898:	andeq	r3, r1, r0, lsr r0
   1289c:	andeq	r3, r1, r0, lsr r0
   128a0:	andeq	r2, r1, r8, asr pc
   128a4:	strdeq	r2, [r1], -r4
   128a8:	andeq	r3, r1, r0, lsr r0
   128ac:	andeq	r2, r1, r8, asr pc
   128b0:	andeq	r3, r1, r0, lsr r0
   128b4:	andeq	r2, r1, r8, asr pc
   128b8:	andeq	r3, r1, r0, lsr r0
   128bc:	andeq	r3, r1, r0, lsr r0
   128c0:	andeq	r3, r1, r0, lsr r0
   128c4:	andeq	r3, r1, r0, lsr r0
   128c8:	andeq	r3, r1, r0, lsr r0
   128cc:	andeq	r3, r1, r0, lsr r0
   128d0:	andeq	r3, r1, r0, lsr r0
   128d4:	andeq	r3, r1, r0, lsr r0
   128d8:	andeq	r3, r1, r0, lsr r0
   128dc:	andeq	r3, r1, r0, lsr r0
   128e0:	andeq	r3, r1, r0, lsr r0
   128e4:	andeq	r3, r1, r0, lsr r0
   128e8:	andeq	r3, r1, r0, lsr r0
   128ec:	andeq	r3, r1, r0, lsr r0
   128f0:	andeq	r3, r1, r0, lsr r0
   128f4:	andeq	r3, r1, r0, lsr r0
   128f8:	andeq	r3, r1, r0, lsr r0
   128fc:	andeq	r3, r1, r0, lsr r0
   12900:	andeq	r3, r1, r0, lsr r0
   12904:	andeq	r3, r1, r0, lsr r0
   12908:	andeq	r3, r1, r0, lsr r0
   1290c:	andeq	r3, r1, r0, lsr r0
   12910:	andeq	r3, r1, r0, lsr r0
   12914:	andeq	r3, r1, r0, lsr r0
   12918:	andeq	r3, r1, r0, lsr r0
   1291c:	andeq	r3, r1, r0, lsr r0
   12920:	andeq	r2, r1, r0, lsl #30
   12924:	andeq	r2, r1, r8, asr pc
   12928:	andeq	r2, r1, r0, lsl #30
   1292c:	andeq	r2, r1, ip, asr #30
   12930:	ldr	r3, [sp, #180]	; 0xb4
   12934:	cmp	r4, #0
   12938:	and	r3, r3, #1
   1293c:	str	r3, [sp, #92]	; 0x5c
   12940:	ldr	r3, [sp, #180]	; 0xb4
   12944:	and	r3, r3, #4
   12948:	str	r3, [sp, #96]	; 0x60
   1294c:	moveq	r3, #1
   12950:	streq	r3, [sp, #60]	; 0x3c
   12954:	beq	130e4 <close@plt+0x21b0>
   12958:	mov	r3, #0
   1295c:	mov	r2, #1
   12960:	mov	r4, r3
   12964:	mov	r9, r3
   12968:	str	r2, [sp, #32]
   1296c:	str	r2, [sp, #44]	; 0x2c
   12970:	str	r3, [sp, #48]	; 0x30
   12974:	str	r2, [sp, #52]	; 0x34
   12978:	str	r2, [sp, #56]	; 0x38
   1297c:	str	r3, [sp, #60]	; 0x3c
   12980:	str	r2, [sp, #64]	; 0x40
   12984:	str	r2, [sp, #68]	; 0x44
   12988:	str	r3, [sp, #80]	; 0x50
   1298c:	str	r3, [sp, #84]	; 0x54
   12990:	str	r3, [sp, #88]	; 0x58
   12994:	movw	r3, #31188	; 0x79d4
   12998:	movt	r3, #1
   1299c:	str	r3, [sp, #72]	; 0x48
   129a0:	mov	r3, #2
   129a4:	str	r3, [sp, #176]	; 0xb0
   129a8:	b	1267c <close@plt+0x1748>
   129ac:	ldr	r3, [sp, #180]	; 0xb4
   129b0:	cmp	r4, #0
   129b4:	and	r3, r3, #1
   129b8:	str	r3, [sp, #92]	; 0x5c
   129bc:	ldr	r3, [sp, #180]	; 0xb4
   129c0:	and	r3, r3, #4
   129c4:	str	r3, [sp, #96]	; 0x60
   129c8:	bne	13d9c <close@plt+0x2e68>
   129cc:	cmp	sl, #0
   129d0:	beq	13b48 <close@plt+0x2c14>
   129d4:	mov	r3, #34	; 0x22
   129d8:	mov	r2, r4
   129dc:	mov	r1, #1
   129e0:	mov	r9, r2
   129e4:	strb	r3, [fp]
   129e8:	movw	r3, #31168	; 0x79c0
   129ec:	movt	r3, #1
   129f0:	mov	r4, r1
   129f4:	str	r1, [sp, #32]
   129f8:	str	r2, [sp, #44]	; 0x2c
   129fc:	str	r1, [sp, #48]	; 0x30
   12a00:	str	r2, [sp, #52]	; 0x34
   12a04:	str	r1, [sp, #56]	; 0x38
   12a08:	str	r1, [sp, #60]	; 0x3c
   12a0c:	str	r2, [sp, #64]	; 0x40
   12a10:	str	r2, [sp, #68]	; 0x44
   12a14:	str	r3, [sp, #72]	; 0x48
   12a18:	str	r2, [sp, #80]	; 0x50
   12a1c:	str	r2, [sp, #84]	; 0x54
   12a20:	str	r2, [sp, #88]	; 0x58
   12a24:	b	1267c <close@plt+0x1748>
   12a28:	mov	r3, #0
   12a2c:	mov	r2, #1
   12a30:	mov	r9, r3
   12a34:	str	r2, [sp, #32]
   12a38:	str	r3, [sp, #44]	; 0x2c
   12a3c:	str	r3, [sp, #48]	; 0x30
   12a40:	str	r3, [sp, #52]	; 0x34
   12a44:	str	r3, [sp, #60]	; 0x3c
   12a48:	strd	r2, [sp, #64]	; 0x40
   12a4c:	str	r3, [sp, #72]	; 0x48
   12a50:	str	r3, [sp, #80]	; 0x50
   12a54:	str	r3, [sp, #88]	; 0x58
   12a58:	ldr	r3, [sp, #180]	; 0xb4
   12a5c:	and	r3, r3, r2
   12a60:	str	r3, [sp, #92]	; 0x5c
   12a64:	ldr	r3, [sp, #180]	; 0xb4
   12a68:	and	r3, r3, #4
   12a6c:	str	r3, [sp, #96]	; 0x60
   12a70:	ldr	r3, [sp, #176]	; 0xb0
   12a74:	mov	r4, r3
   12a78:	str	r3, [sp, #56]	; 0x38
   12a7c:	str	r3, [sp, #84]	; 0x54
   12a80:	b	1267c <close@plt+0x1748>
   12a84:	mov	r3, #1
   12a88:	mov	r4, #0
   12a8c:	mov	r9, r4
   12a90:	str	r3, [sp, #32]
   12a94:	str	r3, [sp, #44]	; 0x2c
   12a98:	str	r3, [sp, #48]	; 0x30
   12a9c:	str	r4, [sp, #52]	; 0x34
   12aa0:	str	r3, [sp, #56]	; 0x38
   12aa4:	str	r3, [sp, #60]	; 0x3c
   12aa8:	str	r3, [sp, #88]	; 0x58
   12aac:	movw	r3, #31168	; 0x79c0
   12ab0:	movt	r3, #1
   12ab4:	str	r4, [sp, #64]	; 0x40
   12ab8:	str	r4, [sp, #68]	; 0x44
   12abc:	str	r3, [sp, #72]	; 0x48
   12ac0:	ldr	r3, [sp, #180]	; 0xb4
   12ac4:	str	r4, [sp, #80]	; 0x50
   12ac8:	str	r4, [sp, #84]	; 0x54
   12acc:	and	r3, r3, #1
   12ad0:	str	r3, [sp, #92]	; 0x5c
   12ad4:	ldr	r3, [sp, #180]	; 0xb4
   12ad8:	and	r3, r3, #4
   12adc:	str	r3, [sp, #96]	; 0x60
   12ae0:	mov	r3, #5
   12ae4:	str	r3, [sp, #176]	; 0xb0
   12ae8:	b	1267c <close@plt+0x1748>
   12aec:	mov	r3, #1
   12af0:	mov	r4, #0
   12af4:	mov	r9, r4
   12af8:	str	r3, [sp, #32]
   12afc:	str	r4, [sp, #44]	; 0x2c
   12b00:	str	r3, [sp, #48]	; 0x30
   12b04:	str	r3, [sp, #60]	; 0x3c
   12b08:	ldr	r3, [sp, #180]	; 0xb4
   12b0c:	str	r4, [sp, #52]	; 0x34
   12b10:	str	r4, [sp, #56]	; 0x38
   12b14:	str	r4, [sp, #64]	; 0x40
   12b18:	str	r4, [sp, #68]	; 0x44
   12b1c:	and	r3, r3, #1
   12b20:	str	r4, [sp, #72]	; 0x48
   12b24:	str	r4, [sp, #80]	; 0x50
   12b28:	str	r4, [sp, #84]	; 0x54
   12b2c:	str	r3, [sp, #92]	; 0x5c
   12b30:	ldr	r3, [sp, #180]	; 0xb4
   12b34:	str	r4, [sp, #88]	; 0x58
   12b38:	and	r3, r3, #4
   12b3c:	str	r3, [sp, #96]	; 0x60
   12b40:	b	1267c <close@plt+0x1748>
   12b44:	mov	r3, #0
   12b48:	mov	r2, #1
   12b4c:	ldr	r1, [sp, #176]	; 0xb0
   12b50:	mov	r4, r3
   12b54:	mov	r9, r3
   12b58:	movw	r3, #31188	; 0x79d4
   12b5c:	movt	r3, #1
   12b60:	str	r2, [sp, #32]
   12b64:	str	r2, [sp, #44]	; 0x2c
   12b68:	str	r4, [sp, #48]	; 0x30
   12b6c:	strd	r2, [sp, #68]	; 0x44
   12b70:	ldr	r3, [sp, #180]	; 0xb4
   12b74:	str	r2, [sp, #52]	; 0x34
   12b78:	str	r1, [sp, #56]	; 0x38
   12b7c:	str	r4, [sp, #60]	; 0x3c
   12b80:	str	r2, [sp, #64]	; 0x40
   12b84:	and	r3, r3, r2
   12b88:	str	r4, [sp, #80]	; 0x50
   12b8c:	str	r4, [sp, #84]	; 0x54
   12b90:	str	r4, [sp, #88]	; 0x58
   12b94:	str	r3, [sp, #92]	; 0x5c
   12b98:	ldr	r3, [sp, #180]	; 0xb4
   12b9c:	and	r3, r3, #4
   12ba0:	str	r3, [sp, #96]	; 0x60
   12ba4:	mov	r3, #2
   12ba8:	str	r3, [sp, #176]	; 0xb0
   12bac:	b	1267c <close@plt+0x1748>
   12bb0:	mov	r3, #1
   12bb4:	mov	r2, #0
   12bb8:	mov	r4, r2
   12bbc:	mov	r9, r2
   12bc0:	str	r3, [sp, #32]
   12bc4:	str	r3, [sp, #44]	; 0x2c
   12bc8:	str	r2, [sp, #48]	; 0x30
   12bcc:	str	r3, [sp, #52]	; 0x34
   12bd0:	str	r3, [sp, #56]	; 0x38
   12bd4:	str	r3, [sp, #60]	; 0x3c
   12bd8:	str	r3, [sp, #64]	; 0x40
   12bdc:	str	r3, [sp, #68]	; 0x44
   12be0:	str	r3, [sp, #88]	; 0x58
   12be4:	movw	r3, #31188	; 0x79d4
   12be8:	movt	r3, #1
   12bec:	str	r3, [sp, #72]	; 0x48
   12bf0:	ldr	r3, [sp, #180]	; 0xb4
   12bf4:	str	r2, [sp, #80]	; 0x50
   12bf8:	str	r2, [sp, #84]	; 0x54
   12bfc:	and	r3, r3, #1
   12c00:	b	12b94 <close@plt+0x1c60>
   12c04:	mov	r5, #102	; 0x66
   12c08:	mov	r6, #0
   12c0c:	ldr	r3, [sp, #44]	; 0x2c
   12c10:	cmp	r3, #0
   12c14:	bne	13ac4 <close@plt+0x2b90>
   12c18:	ldr	r2, [sp, #52]	; 0x34
   12c1c:	eor	r3, fp, #1
   12c20:	ands	r3, r2, r3
   12c24:	beq	12c5c <close@plt+0x1d28>
   12c28:	cmp	sl, r4
   12c2c:	mov	fp, r3
   12c30:	movhi	r2, #39	; 0x27
   12c34:	strbhi	r2, [r9, r4]
   12c38:	add	r2, r4, #1
   12c3c:	cmp	sl, r2
   12c40:	movhi	r1, #36	; 0x24
   12c44:	strbhi	r1, [r9, r2]
   12c48:	add	r2, r4, #2
   12c4c:	add	r4, r4, #3
   12c50:	cmp	sl, r2
   12c54:	movhi	r1, #39	; 0x27
   12c58:	strbhi	r1, [r9, r2]
   12c5c:	cmp	sl, r4
   12c60:	add	r7, r7, #1
   12c64:	movhi	r3, #92	; 0x5c
   12c68:	strbhi	r3, [r9, r4]
   12c6c:	add	r4, r4, #1
   12c70:	cmp	r4, sl
   12c74:	ldr	r3, [sp, #32]
   12c78:	strbcc	r5, [r9, r4]
   12c7c:	cmp	r6, #0
   12c80:	add	r4, r4, #1
   12c84:	moveq	r3, #0
   12c88:	cmn	r8, #1
   12c8c:	str	r3, [sp, #32]
   12c90:	bne	12694 <close@plt+0x1760>
   12c94:	ldr	r3, [sp, #28]
   12c98:	ldrb	r6, [r3, r7]
   12c9c:	adds	r6, r6, #0
   12ca0:	movne	r6, #1
   12ca4:	cmp	r6, #0
   12ca8:	bne	126a4 <close@plt+0x1770>
   12cac:	mov	r3, r9
   12cb0:	mov	r9, fp
   12cb4:	mov	fp, r3
   12cb8:	ldr	r3, [sp, #68]	; 0x44
   12cbc:	cmp	r4, #0
   12cc0:	movne	r3, #0
   12cc4:	cmp	r3, #0
   12cc8:	bne	13ebc <close@plt+0x2f88>
   12ccc:	ldr	r3, [sp, #44]	; 0x2c
   12cd0:	ldr	r2, [sp, #52]	; 0x34
   12cd4:	eor	r3, r3, #1
   12cd8:	ands	r2, r3, r2
   12cdc:	beq	13df4 <close@plt+0x2ec0>
   12ce0:	ldr	r3, [sp, #80]	; 0x50
   12ce4:	cmp	r3, #0
   12ce8:	beq	13df8 <close@plt+0x2ec4>
   12cec:	ldr	r3, [sp, #32]
   12cf0:	cmp	r3, #0
   12cf4:	bne	13e6c <close@plt+0x2f38>
   12cf8:	ldr	r3, [sp, #84]	; 0x54
   12cfc:	adds	r3, r3, #0
   12d00:	movne	r3, #1
   12d04:	cmp	sl, #0
   12d08:	movne	r3, #0
   12d0c:	cmp	r3, #0
   12d10:	ldreq	r2, [sp, #80]	; 0x50
   12d14:	beq	13df8 <close@plt+0x2ec4>
   12d18:	ldr	r2, [sp, #84]	; 0x54
   12d1c:	mov	sl, r2
   12d20:	mov	r0, #0
   12d24:	mov	r4, #1
   12d28:	mov	r1, #39	; 0x27
   12d2c:	str	r0, [sp, #44]	; 0x2c
   12d30:	strb	r1, [fp]
   12d34:	str	r0, [sp, #48]	; 0x30
   12d38:	str	r4, [sp, #52]	; 0x34
   12d3c:	str	r4, [sp, #56]	; 0x38
   12d40:	str	r4, [sp, #64]	; 0x40
   12d44:	str	r0, [sp, #68]	; 0x44
   12d48:	str	r3, [sp, #80]	; 0x50
   12d4c:	str	r2, [sp, #84]	; 0x54
   12d50:	str	r0, [sp, #88]	; 0x58
   12d54:	b	12994 <close@plt+0x1a60>
   12d58:	mov	r5, #98	; 0x62
   12d5c:	b	12c08 <close@plt+0x1cd4>
   12d60:	mov	r5, #97	; 0x61
   12d64:	b	12c08 <close@plt+0x1cd4>
   12d68:	ldr	r3, [sp, #48]	; 0x30
   12d6c:	str	r3, [sp, #40]	; 0x28
   12d70:	mov	r3, #116	; 0x74
   12d74:	ldr	r2, [sp, #68]	; 0x44
   12d78:	cmp	r2, #0
   12d7c:	bne	12f78 <close@plt+0x2044>
   12d80:	ldr	r2, [sp, #60]	; 0x3c
   12d84:	cmp	r2, #0
   12d88:	bne	12ed4 <close@plt+0x1fa0>
   12d8c:	ldr	r3, [sp, #44]	; 0x2c
   12d90:	mov	r6, #0
   12d94:	cmp	r3, #0
   12d98:	beq	12f44 <close@plt+0x2010>
   12d9c:	mov	r3, fp
   12da0:	ldr	r2, [sp, #184]	; 0xb8
   12da4:	cmp	r2, #0
   12da8:	beq	12dc8 <close@plt+0x1e94>
   12dac:	ubfx	r1, r5, #5, #8
   12db0:	mov	r0, r2
   12db4:	and	r2, r5, #31
   12db8:	ldr	r1, [r0, r1, lsl #2]
   12dbc:	lsr	r2, r1, r2
   12dc0:	tst	r2, #1
   12dc4:	bne	12c0c <close@plt+0x1cd8>
   12dc8:	ldr	r2, [sp, #40]	; 0x28
   12dcc:	cmp	r2, #0
   12dd0:	addeq	r7, r7, #1
   12dd4:	bne	12c0c <close@plt+0x1cd8>
   12dd8:	cmp	r3, #0
   12ddc:	beq	12c70 <close@plt+0x1d3c>
   12de0:	cmp	sl, r4
   12de4:	mov	fp, #0
   12de8:	movhi	r3, #39	; 0x27
   12dec:	strbhi	r3, [r9, r4]
   12df0:	add	r3, r4, #1
   12df4:	add	r4, r4, #2
   12df8:	cmp	sl, r3
   12dfc:	movhi	r2, #39	; 0x27
   12e00:	strbhi	r2, [r9, r3]
   12e04:	b	12c70 <close@plt+0x1d3c>
   12e08:	ldr	r3, [sp, #48]	; 0x30
   12e0c:	str	r3, [sp, #40]	; 0x28
   12e10:	eor	r3, fp, #1
   12e14:	ldr	r2, [sp, #52]	; 0x34
   12e18:	ands	r2, r2, r3
   12e1c:	beq	13adc <close@plt+0x2ba8>
   12e20:	cmp	sl, r4
   12e24:	movhi	r3, #39	; 0x27
   12e28:	strbhi	r3, [r9, r4]
   12e2c:	add	r3, r4, #1
   12e30:	cmp	sl, r3
   12e34:	movhi	r1, #36	; 0x24
   12e38:	strbhi	r1, [r9, r3]
   12e3c:	add	r3, r4, #2
   12e40:	cmp	sl, r3
   12e44:	movhi	r1, #39	; 0x27
   12e48:	strbhi	r1, [r9, r3]
   12e4c:	add	r3, r4, #3
   12e50:	cmp	sl, r3
   12e54:	bls	13b28 <close@plt+0x2bf4>
   12e58:	mov	r4, r3
   12e5c:	mov	r3, #92	; 0x5c
   12e60:	mov	fp, r2
   12e64:	mov	r2, r4
   12e68:	strb	r3, [r9, r4]
   12e6c:	ldr	r3, [sp, #176]	; 0xb0
   12e70:	add	r4, r4, #1
   12e74:	cmp	r3, #2
   12e78:	beq	13b90 <close@plt+0x2c5c>
   12e7c:	add	r3, r7, #1
   12e80:	cmp	r3, r8
   12e84:	bcs	12e9c <close@plt+0x1f68>
   12e88:	ldr	r1, [sp, #28]
   12e8c:	ldrb	r3, [r1, r3]
   12e90:	sub	r3, r3, #48	; 0x30
   12e94:	cmp	r3, #9
   12e98:	bls	13ba0 <close@plt+0x2c6c>
   12e9c:	mov	r3, #0
   12ea0:	mov	r5, #48	; 0x30
   12ea4:	ldr	r6, [sp, #64]	; 0x40
   12ea8:	cmp	r6, #0
   12eac:	beq	12da0 <close@plt+0x1e6c>
   12eb0:	mov	r6, #0
   12eb4:	b	12dc8 <close@plt+0x1e94>
   12eb8:	ldr	r3, [sp, #48]	; 0x30
   12ebc:	str	r3, [sp, #40]	; 0x28
   12ec0:	ldr	r2, [sp, #60]	; 0x3c
   12ec4:	mov	r5, #13
   12ec8:	mov	r3, #114	; 0x72
   12ecc:	cmp	r2, #0
   12ed0:	beq	12d8c <close@plt+0x1e58>
   12ed4:	mov	r5, r3
   12ed8:	b	12c08 <close@plt+0x1cd4>
   12edc:	ldr	r3, [sp, #48]	; 0x30
   12ee0:	str	r3, [sp, #40]	; 0x28
   12ee4:	mov	r3, #118	; 0x76
   12ee8:	b	12d80 <close@plt+0x1e4c>
   12eec:	ldr	r3, [sp, #48]	; 0x30
   12ef0:	str	r3, [sp, #40]	; 0x28
   12ef4:	mov	r5, #10
   12ef8:	mov	r3, #110	; 0x6e
   12efc:	b	12d80 <close@plt+0x1e4c>
   12f00:	ldr	r3, [sp, #48]	; 0x30
   12f04:	cmn	r8, #1
   12f08:	str	r3, [sp, #40]	; 0x28
   12f0c:	beq	13354 <close@plt+0x2420>
   12f10:	subs	r3, r8, #1
   12f14:	movne	r3, #1
   12f18:	cmp	r3, #0
   12f1c:	bne	12f28 <close@plt+0x1ff4>
   12f20:	cmp	r7, #0
   12f24:	beq	12f6c <close@plt+0x2038>
   12f28:	mov	r6, #0
   12f2c:	ldr	r3, [sp, #64]	; 0x40
   12f30:	cmp	r3, #0
   12f34:	beq	12d9c <close@plt+0x1e68>
   12f38:	ldr	r3, [sp, #44]	; 0x2c
   12f3c:	cmp	r3, #0
   12f40:	bne	12d9c <close@plt+0x1e68>
   12f44:	mov	r3, fp
   12f48:	b	12dc8 <close@plt+0x1e94>
   12f4c:	ldr	r3, [sp, #48]	; 0x30
   12f50:	str	r3, [sp, #40]	; 0x28
   12f54:	b	12f20 <close@plt+0x1fec>
   12f58:	ldr	r3, [sp, #48]	; 0x30
   12f5c:	str	r3, [sp, #40]	; 0x28
   12f60:	b	12f28 <close@plt+0x1ff4>
   12f64:	ldr	r6, [sp, #48]	; 0x30
   12f68:	str	r6, [sp, #40]	; 0x28
   12f6c:	ldr	r3, [sp, #68]	; 0x44
   12f70:	cmp	r3, #0
   12f74:	beq	12f2c <close@plt+0x1ff8>
   12f78:	mov	r3, #2
   12f7c:	mov	fp, r9
   12f80:	str	r3, [sp, #176]	; 0xb0
   12f84:	ldr	r3, [sp, #60]	; 0x3c
   12f88:	cmp	r3, #0
   12f8c:	ldr	r3, [sp, #176]	; 0xb0
   12f90:	movne	r3, #4
   12f94:	str	r3, [sp, #176]	; 0xb0
   12f98:	mov	lr, #0
   12f9c:	mov	r0, fp
   12fa0:	ldr	r2, [sp, #28]
   12fa4:	ldr	r3, [sp, #180]	; 0xb4
   12fa8:	ldr	r1, [sp, #188]	; 0xbc
   12fac:	bic	ip, r3, #2
   12fb0:	ldr	r3, [sp, #176]	; 0xb0
   12fb4:	stm	sp, {r3, ip, lr}
   12fb8:	mov	r3, r8
   12fbc:	ldr	ip, [sp, #192]	; 0xc0
   12fc0:	str	r1, [sp, #12]
   12fc4:	mov	r1, sl
   12fc8:	str	ip, [sp, #16]
   12fcc:	bl	12558 <close@plt+0x1624>
   12fd0:	mov	r4, r0
   12fd4:	mov	r0, r4
   12fd8:	add	sp, sp, #140	; 0x8c
   12fdc:	ldrd	r4, [sp]
   12fe0:	ldrd	r6, [sp, #8]
   12fe4:	ldrd	r8, [sp, #16]
   12fe8:	ldrd	sl, [sp, #24]
   12fec:	add	sp, sp, #32
   12ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff4:	ldr	r3, [sp, #48]	; 0x30
   12ff8:	str	r3, [sp, #40]	; 0x28
   12ffc:	ldr	r3, [sp, #176]	; 0xb0
   13000:	cmp	r3, #2
   13004:	beq	1337c <close@plt+0x2448>
   13008:	ldr	r3, [sp, #88]	; 0x58
   1300c:	cmp	r3, #0
   13010:	moveq	r5, #92	; 0x5c
   13014:	moveq	r3, r5
   13018:	beq	12d80 <close@plt+0x1e4c>
   1301c:	add	r7, r7, #1
   13020:	mov	r3, fp
   13024:	mov	r6, #0
   13028:	mov	r5, #92	; 0x5c
   1302c:	b	12dd8 <close@plt+0x1ea4>
   13030:	ldr	r3, [sp, #64]	; 0x40
   13034:	cmp	r3, #0
   13038:	bne	13eb0 <close@plt+0x2f7c>
   1303c:	ldr	r2, [sp, #48]	; 0x30
   13040:	mov	r3, fp
   13044:	mov	r6, r2
   13048:	str	r2, [sp, #40]	; 0x28
   1304c:	b	12da0 <close@plt+0x1e6c>
   13050:	ldr	r3, [sp, #176]	; 0xb0
   13054:	cmp	r3, #2
   13058:	beq	13dec <close@plt+0x2eb8>
   1305c:	cmp	r3, #5
   13060:	ldr	r3, [sp, #48]	; 0x30
   13064:	str	r3, [sp, #40]	; 0x28
   13068:	bne	13094 <close@plt+0x2160>
   1306c:	ldr	r3, [sp, #96]	; 0x60
   13070:	cmp	r3, #0
   13074:	beq	13af0 <close@plt+0x2bbc>
   13078:	add	r3, r7, #2
   1307c:	cmp	r3, r8
   13080:	bcs	13094 <close@plt+0x2160>
   13084:	ldr	r2, [sp, #36]	; 0x24
   13088:	ldrb	r5, [r2, #1]
   1308c:	cmp	r5, #63	; 0x3f
   13090:	beq	13bd8 <close@plt+0x2ca4>
   13094:	mov	r6, #0
   13098:	mov	r5, #63	; 0x3f
   1309c:	b	12f2c <close@plt+0x1ff8>
   130a0:	ldr	r3, [sp, #176]	; 0xb0
   130a4:	cmp	r3, #2
   130a8:	ldr	r3, [sp, #48]	; 0x30
   130ac:	beq	13894 <close@plt+0x2960>
   130b0:	mov	r5, #39	; 0x27
   130b4:	str	r3, [sp, #40]	; 0x28
   130b8:	str	r6, [sp, #80]	; 0x50
   130bc:	b	12f2c <close@plt+0x1ff8>
   130c0:	ldr	r3, [sp, #180]	; 0xb4
   130c4:	cmp	r4, #0
   130c8:	and	r3, r3, #1
   130cc:	str	r3, [sp, #92]	; 0x5c
   130d0:	ldr	r3, [sp, #180]	; 0xb4
   130d4:	and	r3, r3, #4
   130d8:	str	r3, [sp, #96]	; 0x60
   130dc:	bne	13efc <close@plt+0x2fc8>
   130e0:	str	r4, [sp, #60]	; 0x3c
   130e4:	cmp	sl, #0
   130e8:	bne	13ee0 <close@plt+0x2fac>
   130ec:	mov	r3, #1
   130f0:	movw	r2, #31188	; 0x79d4
   130f4:	movt	r2, #1
   130f8:	mov	r4, r3
   130fc:	mov	r3, #2
   13100:	mov	r9, sl
   13104:	str	r4, [sp, #32]
   13108:	str	sl, [sp, #44]	; 0x2c
   1310c:	str	sl, [sp, #48]	; 0x30
   13110:	str	r4, [sp, #52]	; 0x34
   13114:	str	r4, [sp, #56]	; 0x38
   13118:	str	r4, [sp, #64]	; 0x40
   1311c:	str	sl, [sp, #68]	; 0x44
   13120:	str	r2, [sp, #72]	; 0x48
   13124:	str	sl, [sp, #80]	; 0x50
   13128:	str	sl, [sp, #84]	; 0x54
   1312c:	str	sl, [sp, #88]	; 0x58
   13130:	str	r3, [sp, #176]	; 0xb0
   13134:	b	1267c <close@plt+0x1748>
   13138:	ldrb	r5, [r0, r7]
   1313c:	cmp	r5, #126	; 0x7e
   13140:	ldrls	pc, [pc, r5, lsl #2]
   13144:	b	134a8 <close@plt+0x2574>
   13148:	andeq	r3, r1, r4, ror r4
   1314c:	andeq	r3, r1, r8, lsr #9
   13150:	andeq	r3, r1, r8, lsr #9
   13154:	andeq	r3, r1, r8, lsr #9
   13158:	andeq	r3, r1, r8, lsr #9
   1315c:	andeq	r3, r1, r8, lsr #9
   13160:	andeq	r3, r1, r8, lsr #9
   13164:	andeq	r3, r1, r4, ror #8
   13168:	andeq	r3, r1, r4, asr r4
   1316c:	ldrdeq	r3, [r1], -r8
   13170:	andeq	r3, r1, r4, asr #8
   13174:			; <UNDEFINED> instruction: 0x000133b8
   13178:	muleq	r1, r8, r4
   1317c:	andeq	r3, r1, r4, lsr #8
   13180:	andeq	r3, r1, r8, lsr #9
   13184:	andeq	r3, r1, r8, lsr #9
   13188:	andeq	r3, r1, r8, lsr #9
   1318c:	andeq	r3, r1, r8, lsr #9
   13190:	andeq	r3, r1, r8, lsr #9
   13194:	andeq	r3, r1, r8, lsr #9
   13198:	andeq	r3, r1, r8, lsr #9
   1319c:	andeq	r3, r1, r8, lsr #9
   131a0:	andeq	r3, r1, r8, lsr #9
   131a4:	andeq	r3, r1, r8, lsr #9
   131a8:	andeq	r3, r1, r8, lsr #9
   131ac:	andeq	r3, r1, r8, lsr #9
   131b0:	andeq	r3, r1, r8, lsr #9
   131b4:	andeq	r3, r1, r8, lsr #9
   131b8:	andeq	r3, r1, r8, lsr #9
   131bc:	andeq	r3, r1, r8, lsr #9
   131c0:	andeq	r3, r1, r8, lsr #9
   131c4:	andeq	r3, r1, r8, lsr #9
   131c8:	andeq	r3, r1, ip, asr #7
   131cc:	andeq	r3, r1, r4, lsr r4
   131d0:	andeq	r3, r1, r4, lsr r4
   131d4:	andeq	r3, r1, ip, lsr #7
   131d8:	andeq	r3, r1, r4, lsr r4
   131dc:	andeq	r3, r1, r0, lsr #7
   131e0:	andeq	r3, r1, r4, lsr r4
   131e4:	andeq	r3, r1, r0, lsl r4
   131e8:	andeq	r3, r1, r4, lsr r4
   131ec:	andeq	r3, r1, r4, lsr r4
   131f0:	andeq	r3, r1, r4, lsr r4
   131f4:	andeq	r3, r1, r0, lsr #7
   131f8:	andeq	r3, r1, r0, lsr #7
   131fc:	andeq	r3, r1, r0, lsr #7
   13200:	andeq	r3, r1, r0, lsr #7
   13204:	andeq	r3, r1, r0, lsr #7
   13208:	andeq	r3, r1, r0, lsr #7
   1320c:	andeq	r3, r1, r0, lsr #7
   13210:	andeq	r3, r1, r0, lsr #7
   13214:	andeq	r3, r1, r0, lsr #7
   13218:	andeq	r3, r1, r0, lsr #7
   1321c:	andeq	r3, r1, r0, lsr #7
   13220:	andeq	r3, r1, r0, lsr #7
   13224:	andeq	r3, r1, r0, lsr #7
   13228:	andeq	r3, r1, r0, lsr #7
   1322c:	andeq	r3, r1, r0, lsr #7
   13230:	andeq	r3, r1, r0, lsr #7
   13234:	andeq	r3, r1, r4, lsr r4
   13238:	andeq	r3, r1, r4, lsr r4
   1323c:	andeq	r3, r1, r4, lsr r4
   13240:	andeq	r3, r1, r4, lsr r4
   13244:	andeq	r3, r1, r8, ror #7
   13248:	andeq	r3, r1, r8, lsr #9
   1324c:	andeq	r3, r1, r0, lsr #7
   13250:	andeq	r3, r1, r0, lsr #7
   13254:	andeq	r3, r1, r0, lsr #7
   13258:	andeq	r3, r1, r0, lsr #7
   1325c:	andeq	r3, r1, r0, lsr #7
   13260:	andeq	r3, r1, r0, lsr #7
   13264:	andeq	r3, r1, r0, lsr #7
   13268:	andeq	r3, r1, r0, lsr #7
   1326c:	andeq	r3, r1, r0, lsr #7
   13270:	andeq	r3, r1, r0, lsr #7
   13274:	andeq	r3, r1, r0, lsr #7
   13278:	andeq	r3, r1, r0, lsr #7
   1327c:	andeq	r3, r1, r0, lsr #7
   13280:	andeq	r3, r1, r0, lsr #7
   13284:	andeq	r3, r1, r0, lsr #7
   13288:	andeq	r3, r1, r0, lsr #7
   1328c:	andeq	r3, r1, r0, lsr #7
   13290:	andeq	r3, r1, r0, lsr #7
   13294:	andeq	r3, r1, r0, lsr #7
   13298:	andeq	r3, r1, r0, lsr #7
   1329c:	andeq	r3, r1, r0, lsr #7
   132a0:	andeq	r3, r1, r0, lsr #7
   132a4:	andeq	r3, r1, r0, lsr #7
   132a8:	andeq	r3, r1, r0, lsr #7
   132ac:	andeq	r3, r1, r0, lsr #7
   132b0:	andeq	r3, r1, r0, lsr #7
   132b4:	andeq	r3, r1, r4, lsr r4
   132b8:	andeq	r3, r1, r8, ror #6
   132bc:	andeq	r3, r1, r0, lsr #7
   132c0:	andeq	r3, r1, r4, lsr r4
   132c4:	andeq	r3, r1, r0, lsr #7
   132c8:	andeq	r3, r1, r4, lsr r4
   132cc:	andeq	r3, r1, r0, lsr #7
   132d0:	andeq	r3, r1, r0, lsr #7
   132d4:	andeq	r3, r1, r0, lsr #7
   132d8:	andeq	r3, r1, r0, lsr #7
   132dc:	andeq	r3, r1, r0, lsr #7
   132e0:	andeq	r3, r1, r0, lsr #7
   132e4:	andeq	r3, r1, r0, lsr #7
   132e8:	andeq	r3, r1, r0, lsr #7
   132ec:	andeq	r3, r1, r0, lsr #7
   132f0:	andeq	r3, r1, r0, lsr #7
   132f4:	andeq	r3, r1, r0, lsr #7
   132f8:	andeq	r3, r1, r0, lsr #7
   132fc:	andeq	r3, r1, r0, lsr #7
   13300:	andeq	r3, r1, r0, lsr #7
   13304:	andeq	r3, r1, r0, lsr #7
   13308:	andeq	r3, r1, r0, lsr #7
   1330c:	andeq	r3, r1, r0, lsr #7
   13310:	andeq	r3, r1, r0, lsr #7
   13314:	andeq	r3, r1, r0, lsr #7
   13318:	andeq	r3, r1, r0, lsr #7
   1331c:	andeq	r3, r1, r0, lsr #7
   13320:	andeq	r3, r1, r0, lsr #7
   13324:	andeq	r3, r1, r0, lsr #7
   13328:	andeq	r3, r1, r0, lsr #7
   1332c:	andeq	r3, r1, r0, lsr #7
   13330:	andeq	r3, r1, r0, lsr #7
   13334:	andeq	r3, r1, r4, asr #6
   13338:	andeq	r3, r1, r4, lsr r4
   1333c:	andeq	r3, r1, r4, asr #6
   13340:	andeq	r3, r1, ip, lsr #7
   13344:	mov	r3, #0
   13348:	cmn	r8, #1
   1334c:	str	r3, [sp, #40]	; 0x28
   13350:	bne	12f10 <close@plt+0x1fdc>
   13354:	ldr	r3, [sp, #28]
   13358:	ldrb	r3, [r3, #1]
   1335c:	adds	r3, r3, #0
   13360:	movne	r3, #1
   13364:	b	12f18 <close@plt+0x1fe4>
   13368:	mov	r3, #0
   1336c:	str	r3, [sp, #40]	; 0x28
   13370:	ldr	r3, [sp, #176]	; 0xb0
   13374:	cmp	r3, #2
   13378:	bne	13008 <close@plt+0x20d4>
   1337c:	ldr	r3, [sp, #44]	; 0x2c
   13380:	cmp	r3, #0
   13384:	bne	13cc4 <close@plt+0x2d90>
   13388:	mov	r6, r3
   1338c:	add	r7, r7, #1
   13390:	mov	r3, fp
   13394:	mov	r5, #92	; 0x5c
   13398:	b	12dd8 <close@plt+0x1ea4>
   1339c:	ldr	r6, [sp, #48]	; 0x30
   133a0:	mov	r3, #0
   133a4:	str	r3, [sp, #40]	; 0x28
   133a8:	b	12f2c <close@plt+0x1ff8>
   133ac:	mov	r3, #0
   133b0:	str	r3, [sp, #40]	; 0x28
   133b4:	b	12f20 <close@plt+0x1fec>
   133b8:	mov	r3, #0
   133bc:	str	r3, [sp, #40]	; 0x28
   133c0:	mov	r3, #118	; 0x76
   133c4:	b	12d80 <close@plt+0x1e4c>
   133c8:	ldr	r6, [sp, #48]	; 0x30
   133cc:	mov	r3, #0
   133d0:	str	r3, [sp, #40]	; 0x28
   133d4:	b	12f6c <close@plt+0x2038>
   133d8:	mov	r3, #0
   133dc:	str	r3, [sp, #40]	; 0x28
   133e0:	mov	r3, #116	; 0x74
   133e4:	b	12d74 <close@plt+0x1e40>
   133e8:	ldr	r3, [sp, #176]	; 0xb0
   133ec:	cmp	r3, #2
   133f0:	beq	13900 <close@plt+0x29cc>
   133f4:	cmp	r3, #5
   133f8:	mov	r3, #0
   133fc:	str	r3, [sp, #40]	; 0x28
   13400:	beq	1306c <close@plt+0x2138>
   13404:	mov	r6, #0
   13408:	mov	r5, #63	; 0x3f
   1340c:	b	12f2c <close@plt+0x1ff8>
   13410:	ldr	r3, [sp, #176]	; 0xb0
   13414:	cmp	r3, #2
   13418:	beq	13888 <close@plt+0x2954>
   1341c:	mov	r3, #0
   13420:	b	130b0 <close@plt+0x217c>
   13424:	mov	r3, #0
   13428:	str	r3, [sp, #40]	; 0x28
   1342c:	mov	r3, #114	; 0x72
   13430:	b	12d74 <close@plt+0x1e40>
   13434:	mov	r3, #0
   13438:	mov	r6, r3
   1343c:	str	r3, [sp, #40]	; 0x28
   13440:	b	12f6c <close@plt+0x2038>
   13444:	mov	r3, #0
   13448:	str	r3, [sp, #40]	; 0x28
   1344c:	mov	r3, #110	; 0x6e
   13450:	b	12d74 <close@plt+0x1e40>
   13454:	mov	r3, #0
   13458:	str	r3, [sp, #40]	; 0x28
   1345c:	mov	r3, #98	; 0x62
   13460:	b	12d80 <close@plt+0x1e4c>
   13464:	mov	r3, #0
   13468:	str	r3, [sp, #40]	; 0x28
   1346c:	mov	r3, #97	; 0x61
   13470:	b	12d80 <close@plt+0x1e4c>
   13474:	ldr	r3, [sp, #60]	; 0x3c
   13478:	cmp	r3, #0
   1347c:	bne	1386c <close@plt+0x2938>
   13480:	ldr	r3, [sp, #92]	; 0x5c
   13484:	cmp	r3, #0
   13488:	addne	r7, r7, #1
   1348c:	bne	1268c <close@plt+0x1758>
   13490:	str	r3, [sp, #40]	; 0x28
   13494:	b	12d8c <close@plt+0x1e58>
   13498:	mov	r3, #0
   1349c:	str	r3, [sp, #40]	; 0x28
   134a0:	mov	r3, #102	; 0x66
   134a4:	b	12d80 <close@plt+0x1e4c>
   134a8:	mov	r3, #0
   134ac:	str	r3, [sp, #40]	; 0x28
   134b0:	ldr	r3, [sp, #76]	; 0x4c
   134b4:	cmp	r3, #1
   134b8:	bne	13920 <close@plt+0x29ec>
   134bc:	bl	10e2c <__ctype_b_loc@plt>
   134c0:	ldr	r2, [r0]
   134c4:	sxth	r3, r5
   134c8:	lsl	r3, r3, #1
   134cc:	ldr	r1, [sp, #76]	; 0x4c
   134d0:	ldrh	r3, [r2, r3]
   134d4:	mov	r0, r1
   134d8:	and	r3, r3, #16384	; 0x4000
   134dc:	cmp	r3, #0
   134e0:	ldr	r3, [sp, #60]	; 0x3c
   134e4:	movne	r6, #1
   134e8:	moveq	r6, #0
   134ec:	movne	r2, #0
   134f0:	andeq	r2, r3, #1
   134f4:	cmp	r2, #0
   134f8:	beq	12f2c <close@plt+0x1ff8>
   134fc:	ldr	r2, [sp, #60]	; 0x3c
   13500:	mov	r6, #0
   13504:	add	r1, r0, r7
   13508:	mov	ip, #39	; 0x27
   1350c:	str	r6, [sp, #100]	; 0x64
   13510:	mov	r0, #0
   13514:	ldr	lr, [sp, #36]	; 0x24
   13518:	str	r8, [sp, #36]	; 0x24
   1351c:	ldr	r6, [sp, #40]	; 0x28
   13520:	ldr	r8, [sp, #44]	; 0x2c
   13524:	b	135d4 <close@plt+0x26a0>
   13528:	cmp	r8, #0
   1352c:	bne	13b08 <close@plt+0x2bd4>
   13530:	ldr	r0, [sp, #52]	; 0x34
   13534:	eor	r3, fp, #1
   13538:	ands	r3, r0, r3
   1353c:	beq	1356c <close@plt+0x2638>
   13540:	cmp	sl, r4
   13544:	add	r0, r4, #1
   13548:	strbhi	ip, [r9, r4]
   1354c:	cmp	sl, r0
   13550:	movhi	fp, #36	; 0x24
   13554:	strbhi	fp, [r9, r0]
   13558:	add	r0, r4, #2
   1355c:	mov	fp, r3
   13560:	cmp	sl, r0
   13564:	add	r4, r4, #3
   13568:	strbhi	ip, [r9, r0]
   1356c:	cmp	sl, r4
   13570:	movhi	r3, #92	; 0x5c
   13574:	strbhi	r3, [r9, r4]
   13578:	add	r3, r4, #1
   1357c:	cmp	sl, r3
   13580:	bls	13590 <close@plt+0x265c>
   13584:	lsr	r0, r5, #6
   13588:	add	r0, r0, #48	; 0x30
   1358c:	strb	r0, [r9, r3]
   13590:	add	r3, r4, #2
   13594:	cmp	sl, r3
   13598:	bls	135a8 <close@plt+0x2674>
   1359c:	ubfx	r0, r5, #3, #3
   135a0:	add	r0, r0, #48	; 0x30
   135a4:	strb	r0, [r9, r3]
   135a8:	add	r7, r7, #1
   135ac:	and	r5, r5, #7
   135b0:	cmp	r1, r7
   135b4:	add	r5, r5, #48	; 0x30
   135b8:	add	r4, r4, #3
   135bc:	bls	13b1c <close@plt+0x2be8>
   135c0:	mov	r0, r2
   135c4:	cmp	sl, r4
   135c8:	strbhi	r5, [r9, r4]
   135cc:	add	r4, r4, #1
   135d0:	ldrb	r5, [lr, #1]!
   135d4:	cmp	r2, #0
   135d8:	bne	13528 <close@plt+0x25f4>
   135dc:	eor	r3, r0, #1
   135e0:	cmp	r6, #0
   135e4:	and	r3, r3, fp
   135e8:	uxtb	r3, r3
   135ec:	beq	13600 <close@plt+0x26cc>
   135f0:	cmp	sl, r4
   135f4:	movhi	r6, #92	; 0x5c
   135f8:	strbhi	r6, [r9, r4]
   135fc:	add	r4, r4, #1
   13600:	add	r7, r7, #1
   13604:	cmp	r7, r1
   13608:	bcs	13afc <close@plt+0x2bc8>
   1360c:	cmp	r3, #0
   13610:	beq	13b40 <close@plt+0x2c0c>
   13614:	cmp	sl, r4
   13618:	add	r3, r4, #1
   1361c:	mov	r6, #0
   13620:	strbhi	ip, [r9, r4]
   13624:	cmp	sl, r3
   13628:	add	r4, r4, #2
   1362c:	mov	fp, r6
   13630:	strbhi	ip, [r9, r3]
   13634:	b	135c4 <close@plt+0x2690>
   13638:	ldr	r3, [sp, #36]	; 0x24
   1363c:	ldrb	r5, [r3]
   13640:	cmp	r5, #126	; 0x7e
   13644:	ldrls	pc, [pc, r5, lsl #2]
   13648:	b	134a8 <close@plt+0x2574>
   1364c:	andeq	r3, r1, ip, ror #16
   13650:	andeq	r3, r1, r8, lsr #9
   13654:	andeq	r3, r1, r8, lsr #9
   13658:	andeq	r3, r1, r8, lsr #9
   1365c:	andeq	r3, r1, r8, lsr #9
   13660:	andeq	r3, r1, r8, lsr #9
   13664:	andeq	r3, r1, r8, lsr #9
   13668:	andeq	r2, r1, r0, ror #26
   1366c:	andeq	r2, r1, r8, asr sp
   13670:	ldrdeq	r3, [r1], -r8
   13674:	andeq	r3, r1, r0, ror #16
   13678:			; <UNDEFINED> instruction: 0x000133b8
   1367c:	andeq	r2, r1, r4, lsl #24
   13680:	andeq	r3, r1, r4, asr r8
   13684:	andeq	r3, r1, r8, lsr #9
   13688:	andeq	r3, r1, r8, lsr #9
   1368c:	andeq	r3, r1, r8, lsr #9
   13690:	andeq	r3, r1, r8, lsr #9
   13694:	andeq	r3, r1, r8, lsr #9
   13698:	andeq	r3, r1, r8, lsr #9
   1369c:	andeq	r3, r1, r8, lsr #9
   136a0:	andeq	r3, r1, r8, lsr #9
   136a4:	andeq	r3, r1, r8, lsr #9
   136a8:	andeq	r3, r1, r8, lsr #9
   136ac:	andeq	r3, r1, r8, lsr #9
   136b0:	andeq	r3, r1, r8, lsr #9
   136b4:	andeq	r3, r1, r8, lsr #9
   136b8:	andeq	r3, r1, r8, lsr #9
   136bc:	andeq	r3, r1, r8, lsr #9
   136c0:	andeq	r3, r1, r8, lsr #9
   136c4:	andeq	r3, r1, r8, lsr #9
   136c8:	andeq	r3, r1, r8, lsr #9
   136cc:	andeq	r3, r1, r8, asr #7
   136d0:	andeq	r3, r1, r8, asr #16
   136d4:	andeq	r3, r1, r8, asr #16
   136d8:	andeq	r3, r1, ip, lsr #7
   136dc:	andeq	r3, r1, r8, asr #16
   136e0:	muleq	r1, ip, r3
   136e4:	andeq	r3, r1, r8, asr #16
   136e8:	andeq	r3, r1, r0, lsl r4
   136ec:	andeq	r3, r1, r8, asr #16
   136f0:	andeq	r3, r1, r8, asr #16
   136f4:	andeq	r3, r1, r8, asr #16
   136f8:	muleq	r1, ip, r3
   136fc:	muleq	r1, ip, r3
   13700:	muleq	r1, ip, r3
   13704:	muleq	r1, ip, r3
   13708:	muleq	r1, ip, r3
   1370c:	muleq	r1, ip, r3
   13710:	muleq	r1, ip, r3
   13714:	muleq	r1, ip, r3
   13718:	muleq	r1, ip, r3
   1371c:	muleq	r1, ip, r3
   13720:	muleq	r1, ip, r3
   13724:	muleq	r1, ip, r3
   13728:	muleq	r1, ip, r3
   1372c:	muleq	r1, ip, r3
   13730:	muleq	r1, ip, r3
   13734:	muleq	r1, ip, r3
   13738:	andeq	r3, r1, r8, asr #16
   1373c:	andeq	r3, r1, r8, asr #16
   13740:	andeq	r3, r1, r8, asr #16
   13744:	andeq	r3, r1, r8, asr #16
   13748:	andeq	r3, r1, r8, ror #7
   1374c:	andeq	r3, r1, r8, lsr #9
   13750:	muleq	r1, ip, r3
   13754:	muleq	r1, ip, r3
   13758:	muleq	r1, ip, r3
   1375c:	muleq	r1, ip, r3
   13760:	muleq	r1, ip, r3
   13764:	muleq	r1, ip, r3
   13768:	muleq	r1, ip, r3
   1376c:	muleq	r1, ip, r3
   13770:	muleq	r1, ip, r3
   13774:	muleq	r1, ip, r3
   13778:	muleq	r1, ip, r3
   1377c:	muleq	r1, ip, r3
   13780:	muleq	r1, ip, r3
   13784:	muleq	r1, ip, r3
   13788:	muleq	r1, ip, r3
   1378c:	muleq	r1, ip, r3
   13790:	muleq	r1, ip, r3
   13794:	muleq	r1, ip, r3
   13798:	muleq	r1, ip, r3
   1379c:	muleq	r1, ip, r3
   137a0:	muleq	r1, ip, r3
   137a4:	muleq	r1, ip, r3
   137a8:	muleq	r1, ip, r3
   137ac:	muleq	r1, ip, r3
   137b0:	muleq	r1, ip, r3
   137b4:	muleq	r1, ip, r3
   137b8:	andeq	r3, r1, r8, asr #16
   137bc:	andeq	r3, r1, r8, ror #6
   137c0:	muleq	r1, ip, r3
   137c4:	andeq	r3, r1, r8, asr #16
   137c8:	muleq	r1, ip, r3
   137cc:	andeq	r3, r1, r8, asr #16
   137d0:	muleq	r1, ip, r3
   137d4:	muleq	r1, ip, r3
   137d8:	muleq	r1, ip, r3
   137dc:	muleq	r1, ip, r3
   137e0:	muleq	r1, ip, r3
   137e4:	muleq	r1, ip, r3
   137e8:	muleq	r1, ip, r3
   137ec:	muleq	r1, ip, r3
   137f0:	muleq	r1, ip, r3
   137f4:	muleq	r1, ip, r3
   137f8:	muleq	r1, ip, r3
   137fc:	muleq	r1, ip, r3
   13800:	muleq	r1, ip, r3
   13804:	muleq	r1, ip, r3
   13808:	muleq	r1, ip, r3
   1380c:	muleq	r1, ip, r3
   13810:	muleq	r1, ip, r3
   13814:	muleq	r1, ip, r3
   13818:	muleq	r1, ip, r3
   1381c:	muleq	r1, ip, r3
   13820:	muleq	r1, ip, r3
   13824:	muleq	r1, ip, r3
   13828:	muleq	r1, ip, r3
   1382c:	muleq	r1, ip, r3
   13830:	muleq	r1, ip, r3
   13834:	muleq	r1, ip, r3
   13838:	andeq	r3, r1, r4, asr #6
   1383c:	andeq	r3, r1, r8, asr #16
   13840:	andeq	r3, r1, r4, asr #6
   13844:	andeq	r3, r1, ip, lsr #7
   13848:	mov	r3, #0
   1384c:	str	r3, [sp, #40]	; 0x28
   13850:	b	12f28 <close@plt+0x1ff4>
   13854:	mov	r3, #0
   13858:	str	r3, [sp, #40]	; 0x28
   1385c:	b	12ec0 <close@plt+0x1f8c>
   13860:	mov	r3, #0
   13864:	str	r3, [sp, #40]	; 0x28
   13868:	b	12ef4 <close@plt+0x1fc0>
   1386c:	ldr	r3, [sp, #44]	; 0x2c
   13870:	cmp	r3, #0
   13874:	beq	12e0c <close@plt+0x1ed8>
   13878:	ldr	r3, [sp, #52]	; 0x34
   1387c:	mov	fp, r9
   13880:	str	r3, [sp, #60]	; 0x3c
   13884:	b	12f84 <close@plt+0x2050>
   13888:	ldr	r3, [sp, #44]	; 0x2c
   1388c:	cmp	r3, #0
   13890:	bne	13cc4 <close@plt+0x2d90>
   13894:	str	r3, [sp, #40]	; 0x28
   13898:	cmp	sl, #0
   1389c:	ldr	r3, [sp, #84]	; 0x54
   138a0:	clz	r3, r3
   138a4:	lsr	r3, r3, #5
   138a8:	moveq	r3, #0
   138ac:	cmp	r3, #0
   138b0:	strne	sl, [sp, #84]	; 0x54
   138b4:	movne	sl, #0
   138b8:	bne	138e8 <close@plt+0x29b4>
   138bc:	cmp	sl, r4
   138c0:	movhi	r3, #39	; 0x27
   138c4:	strbhi	r3, [r9, r4]
   138c8:	add	r3, r4, #1
   138cc:	cmp	sl, r3
   138d0:	movhi	r2, #92	; 0x5c
   138d4:	strbhi	r2, [r9, r3]
   138d8:	add	r3, r4, #2
   138dc:	cmp	sl, r3
   138e0:	movhi	r2, #39	; 0x27
   138e4:	strbhi	r2, [r9, r3]
   138e8:	mov	r3, #0
   138ec:	add	r4, r4, #3
   138f0:	str	r6, [sp, #80]	; 0x50
   138f4:	mov	fp, r3
   138f8:	mov	r5, #39	; 0x27
   138fc:	b	12dc8 <close@plt+0x1e94>
   13900:	ldr	r3, [sp, #44]	; 0x2c
   13904:	cmp	r3, #0
   13908:	bne	13cc4 <close@plt+0x2d90>
   1390c:	mov	r6, #0
   13910:	mov	r5, #63	; 0x3f
   13914:	str	r3, [sp, #40]	; 0x28
   13918:	mov	r3, fp
   1391c:	b	12dc8 <close@plt+0x1e94>
   13920:	mov	r2, #0
   13924:	mov	r3, #0
   13928:	cmn	r8, #1
   1392c:	strd	r2, [sp, #128]	; 0x80
   13930:	bne	13940 <close@plt+0x2a0c>
   13934:	ldr	r0, [sp, #28]
   13938:	bl	10e44 <strlen@plt>
   1393c:	mov	r8, r0
   13940:	str	r9, [sp, #100]	; 0x64
   13944:	mov	r3, #0
   13948:	strd	sl, [sp, #104]	; 0x68
   1394c:	ldr	sl, [sp, #28]
   13950:	str	r5, [sp, #112]	; 0x70
   13954:	mov	r5, r3
   13958:	ldr	r9, [sp, #68]	; 0x44
   1395c:	str	r4, [sp, #116]	; 0x74
   13960:	add	r4, r7, r5
   13964:	add	r3, sp, #128	; 0x80
   13968:	add	fp, sl, r4
   1396c:	sub	r2, r8, r4
   13970:	mov	r1, fp
   13974:	add	r0, sp, #124	; 0x7c
   13978:	bl	16f44 <close@plt+0x6010>
   1397c:	subs	r1, r0, #0
   13980:	beq	139c0 <close@plt+0x2a8c>
   13984:	cmn	r1, #1
   13988:	beq	13d18 <close@plt+0x2de4>
   1398c:	cmn	r1, #2
   13990:	beq	13d38 <close@plt+0x2e04>
   13994:	cmp	r9, #0
   13998:	bne	139f0 <close@plt+0x2abc>
   1399c:	ldr	r0, [sp, #124]	; 0x7c
   139a0:	add	r5, r5, r1
   139a4:	bl	10d9c <iswprint@plt>
   139a8:	cmp	r0, #0
   139ac:	add	r0, sp, #128	; 0x80
   139b0:	moveq	r6, #0
   139b4:	bl	10d3c <mbsinit@plt>
   139b8:	cmp	r0, #0
   139bc:	beq	13960 <close@plt+0x2a2c>
   139c0:	ldr	r3, [sp, #60]	; 0x3c
   139c4:	add	r9, sp, #100	; 0x64
   139c8:	mov	r0, r5
   139cc:	ldm	r9, {r9, sl, fp}
   139d0:	eor	r2, r6, #1
   139d4:	ldr	r5, [sp, #112]	; 0x70
   139d8:	and	r2, r2, r3
   139dc:	uxtb	r2, r2
   139e0:	ldr	r4, [sp, #116]	; 0x74
   139e4:	cmp	r0, #1
   139e8:	bhi	13504 <close@plt+0x25d0>
   139ec:	b	134f4 <close@plt+0x25c0>
   139f0:	cmp	r1, #1
   139f4:	beq	1399c <close@plt+0x2a68>
   139f8:	add	r2, r4, #1
   139fc:	add	r3, sl, r1
   13a00:	add	r2, sl, r2
   13a04:	add	r4, r3, r4
   13a08:	ldrb	r3, [r2], #1
   13a0c:	sub	r3, r3, #91	; 0x5b
   13a10:	cmp	r3, #33	; 0x21
   13a14:	ldrls	pc, [pc, r3, lsl #2]
   13a18:	b	13aa4 <close@plt+0x2b70>
   13a1c:			; <UNDEFINED> instruction: 0x00013ab0
   13a20:			; <UNDEFINED> instruction: 0x00013ab0
   13a24:	andeq	r3, r1, r4, lsr #21
   13a28:			; <UNDEFINED> instruction: 0x00013ab0
   13a2c:	andeq	r3, r1, r4, lsr #21
   13a30:			; <UNDEFINED> instruction: 0x00013ab0
   13a34:	andeq	r3, r1, r4, lsr #21
   13a38:	andeq	r3, r1, r4, lsr #21
   13a3c:	andeq	r3, r1, r4, lsr #21
   13a40:	andeq	r3, r1, r4, lsr #21
   13a44:	andeq	r3, r1, r4, lsr #21
   13a48:	andeq	r3, r1, r4, lsr #21
   13a4c:	andeq	r3, r1, r4, lsr #21
   13a50:	andeq	r3, r1, r4, lsr #21
   13a54:	andeq	r3, r1, r4, lsr #21
   13a58:	andeq	r3, r1, r4, lsr #21
   13a5c:	andeq	r3, r1, r4, lsr #21
   13a60:	andeq	r3, r1, r4, lsr #21
   13a64:	andeq	r3, r1, r4, lsr #21
   13a68:	andeq	r3, r1, r4, lsr #21
   13a6c:	andeq	r3, r1, r4, lsr #21
   13a70:	andeq	r3, r1, r4, lsr #21
   13a74:	andeq	r3, r1, r4, lsr #21
   13a78:	andeq	r3, r1, r4, lsr #21
   13a7c:	andeq	r3, r1, r4, lsr #21
   13a80:	andeq	r3, r1, r4, lsr #21
   13a84:	andeq	r3, r1, r4, lsr #21
   13a88:	andeq	r3, r1, r4, lsr #21
   13a8c:	andeq	r3, r1, r4, lsr #21
   13a90:	andeq	r3, r1, r4, lsr #21
   13a94:	andeq	r3, r1, r4, lsr #21
   13a98:	andeq	r3, r1, r4, lsr #21
   13a9c:	andeq	r3, r1, r4, lsr #21
   13aa0:			; <UNDEFINED> instruction: 0x00013ab0
   13aa4:	cmp	r4, r2
   13aa8:	bne	13a08 <close@plt+0x2ad4>
   13aac:	b	1399c <close@plt+0x2a68>
   13ab0:	mov	r3, #2
   13ab4:	ldr	fp, [sp, #100]	; 0x64
   13ab8:	str	r3, [sp, #176]	; 0xb0
   13abc:	ldr	sl, [sp, #104]	; 0x68
   13ac0:	b	12f84 <close@plt+0x2050>
   13ac4:	ldr	r2, [sp, #52]	; 0x34
   13ac8:	mov	fp, r9
   13acc:	ldr	r3, [sp, #60]	; 0x3c
   13ad0:	and	r3, r3, r2
   13ad4:	str	r3, [sp, #60]	; 0x3c
   13ad8:	b	12f84 <close@plt+0x2050>
   13adc:	cmp	sl, r4
   13ae0:	movhi	r2, fp
   13ae4:	bhi	12e5c <close@plt+0x1f28>
   13ae8:	mov	r2, r4
   13aec:	b	12e6c <close@plt+0x1f38>
   13af0:	mov	r6, r3
   13af4:	mov	r5, #63	; 0x3f
   13af8:	b	12f2c <close@plt+0x1ff8>
   13afc:	ldr	r8, [sp, #36]	; 0x24
   13b00:	ldr	r6, [sp, #100]	; 0x64
   13b04:	b	12dd8 <close@plt+0x1ea4>
   13b08:	mov	fp, r9
   13b0c:	ldr	r8, [sp, #36]	; 0x24
   13b10:	ldr	r3, [sp, #52]	; 0x34
   13b14:	str	r3, [sp, #60]	; 0x3c
   13b18:	b	12f84 <close@plt+0x2050>
   13b1c:	ldr	r8, [sp, #36]	; 0x24
   13b20:	ldr	r6, [sp, #100]	; 0x64
   13b24:	b	12c70 <close@plt+0x1d3c>
   13b28:	mov	r3, #0
   13b2c:	add	r4, r4, #4
   13b30:	mov	fp, r2
   13b34:	mov	r6, r3
   13b38:	mov	r5, #48	; 0x30
   13b3c:	b	12dc8 <close@plt+0x1e94>
   13b40:	mov	r6, r3
   13b44:	b	135c4 <close@plt+0x2690>
   13b48:	mov	r3, #1
   13b4c:	movw	r2, #31168	; 0x79c0
   13b50:	movt	r2, #1
   13b54:	mov	r4, r3
   13b58:	mov	r9, sl
   13b5c:	str	r3, [sp, #32]
   13b60:	str	sl, [sp, #44]	; 0x2c
   13b64:	str	r3, [sp, #48]	; 0x30
   13b68:	str	sl, [sp, #52]	; 0x34
   13b6c:	str	r3, [sp, #56]	; 0x38
   13b70:	str	r3, [sp, #60]	; 0x3c
   13b74:	str	sl, [sp, #64]	; 0x40
   13b78:	str	sl, [sp, #68]	; 0x44
   13b7c:	str	r2, [sp, #72]	; 0x48
   13b80:	str	sl, [sp, #80]	; 0x50
   13b84:	str	sl, [sp, #84]	; 0x54
   13b88:	str	sl, [sp, #88]	; 0x58
   13b8c:	b	1267c <close@plt+0x1748>
   13b90:	mov	r3, #0
   13b94:	mov	r5, #48	; 0x30
   13b98:	mov	r6, r3
   13b9c:	b	12dc8 <close@plt+0x1e94>
   13ba0:	cmp	sl, r4
   13ba4:	mov	r5, #48	; 0x30
   13ba8:	movhi	r3, #48	; 0x30
   13bac:	strbhi	r3, [r9, r4]
   13bb0:	add	r3, r2, #2
   13bb4:	add	r4, r2, #3
   13bb8:	cmp	sl, r3
   13bbc:	movhi	r1, #48	; 0x30
   13bc0:	strbhi	r1, [r9, r3]
   13bc4:	mov	r3, #0
   13bc8:	b	12ea4 <close@plt+0x1f70>
   13bcc:	ldr	r3, [sp, #48]	; 0x30
   13bd0:	str	r3, [sp, #40]	; 0x28
   13bd4:	b	134b0 <close@plt+0x257c>
   13bd8:	ldr	r2, [sp, #28]
   13bdc:	ldrb	r2, [r2, r3]
   13be0:	sub	r1, r2, #33	; 0x21
   13be4:	cmp	r1, #29
   13be8:	ldrls	pc, [pc, r1, lsl #2]
   13bec:	b	12f28 <close@plt+0x1ff4>
   13bf0:	andeq	r3, r1, r8, ror #24
   13bf4:	andeq	r2, r1, r8, lsr #30
   13bf8:	andeq	r2, r1, r8, lsr #30
   13bfc:	andeq	r2, r1, r8, lsr #30
   13c00:	andeq	r2, r1, r8, lsr #30
   13c04:	andeq	r2, r1, r8, lsr #30
   13c08:	andeq	r3, r1, r8, ror #24
   13c0c:	andeq	r3, r1, r8, ror #24
   13c10:	andeq	r3, r1, r8, ror #24
   13c14:	andeq	r2, r1, r8, lsr #30
   13c18:	andeq	r2, r1, r8, lsr #30
   13c1c:	andeq	r2, r1, r8, lsr #30
   13c20:	andeq	r3, r1, r8, ror #24
   13c24:	andeq	r2, r1, r8, lsr #30
   13c28:	andeq	r3, r1, r8, ror #24
   13c2c:	andeq	r2, r1, r8, lsr #30
   13c30:	andeq	r2, r1, r8, lsr #30
   13c34:	andeq	r2, r1, r8, lsr #30
   13c38:	andeq	r2, r1, r8, lsr #30
   13c3c:	andeq	r2, r1, r8, lsr #30
   13c40:	andeq	r2, r1, r8, lsr #30
   13c44:	andeq	r2, r1, r8, lsr #30
   13c48:	andeq	r2, r1, r8, lsr #30
   13c4c:	andeq	r2, r1, r8, lsr #30
   13c50:	andeq	r2, r1, r8, lsr #30
   13c54:	andeq	r2, r1, r8, lsr #30
   13c58:	andeq	r2, r1, r8, lsr #30
   13c5c:	andeq	r3, r1, r8, ror #24
   13c60:	andeq	r3, r1, r8, ror #24
   13c64:	andeq	r3, r1, r8, ror #24
   13c68:	ldr	r1, [sp, #44]	; 0x2c
   13c6c:	cmp	r1, #0
   13c70:	bne	13ed0 <close@plt+0x2f9c>
   13c74:	cmp	sl, r4
   13c78:	mov	r7, r3
   13c7c:	movhi	r1, #63	; 0x3f
   13c80:	mov	r5, r2
   13c84:	mov	r3, fp
   13c88:	strbhi	r1, [r9, r4]
   13c8c:	add	r1, r4, #1
   13c90:	cmp	sl, r1
   13c94:	movhi	r0, #34	; 0x22
   13c98:	strbhi	r0, [r9, r1]
   13c9c:	add	r1, r4, #2
   13ca0:	cmp	sl, r1
   13ca4:	movhi	r0, #34	; 0x22
   13ca8:	strbhi	r0, [r9, r1]
   13cac:	add	r1, r4, #3
   13cb0:	add	r4, r4, #4
   13cb4:	cmp	sl, r1
   13cb8:	movhi	r0, #63	; 0x3f
   13cbc:	strbhi	r0, [r9, r1]
   13cc0:	b	12ea4 <close@plt+0x1f70>
   13cc4:	mov	fp, r9
   13cc8:	b	12f84 <close@plt+0x2050>
   13ccc:	ldr	r3, [sp, #188]	; 0xbc
   13cd0:	ldrb	r3, [r3]
   13cd4:	cmp	r3, #0
   13cd8:	beq	12614 <close@plt+0x16e0>
   13cdc:	ldr	r2, [sp, #188]	; 0xbc
   13ce0:	cmp	sl, r4
   13ce4:	bls	13d04 <close@plt+0x2dd0>
   13ce8:	strb	r3, [fp, r4]
   13cec:	add	r4, r4, #1
   13cf0:	ldrb	r3, [r2, #1]!
   13cf4:	cmp	r3, #0
   13cf8:	beq	12614 <close@plt+0x16e0>
   13cfc:	cmp	sl, r4
   13d00:	bhi	13ce8 <close@plt+0x2db4>
   13d04:	ldrb	r3, [r2, #1]!
   13d08:	add	r4, r4, #1
   13d0c:	cmp	r3, #0
   13d10:	bne	13ce0 <close@plt+0x2dac>
   13d14:	b	12614 <close@plt+0x16e0>
   13d18:	add	r9, sp, #100	; 0x64
   13d1c:	mov	r0, r5
   13d20:	ldr	r2, [sp, #60]	; 0x3c
   13d24:	mov	r6, #0
   13d28:	ldm	r9, {r9, sl, fp}
   13d2c:	ldr	r5, [sp, #112]	; 0x70
   13d30:	ldr	r4, [sp, #116]	; 0x74
   13d34:	b	139e4 <close@plt+0x2ab0>
   13d38:	cmp	r4, r8
   13d3c:	add	r9, sp, #100	; 0x64
   13d40:	mov	r1, r4
   13d44:	mov	r2, fp
   13d48:	ldm	r9, {r9, sl, fp}
   13d4c:	mov	r3, r5
   13d50:	mov	r0, r5
   13d54:	ldr	r5, [sp, #112]	; 0x70
   13d58:	ldr	r4, [sp, #116]	; 0x74
   13d5c:	bcs	13d90 <close@plt+0x2e5c>
   13d60:	ldrb	r6, [r2]
   13d64:	cmp	r6, #0
   13d68:	bne	13d7c <close@plt+0x2e48>
   13d6c:	b	13ec8 <close@plt+0x2f94>
   13d70:	ldrb	r6, [r2, #1]!
   13d74:	cmp	r6, #0
   13d78:	beq	13e60 <close@plt+0x2f2c>
   13d7c:	add	r3, r3, #1
   13d80:	add	r1, r7, r3
   13d84:	cmp	r8, r1
   13d88:	bhi	13d70 <close@plt+0x2e3c>
   13d8c:	mov	r0, r3
   13d90:	mov	r6, #0
   13d94:	ldr	r2, [sp, #60]	; 0x3c
   13d98:	b	139e4 <close@plt+0x2ab0>
   13d9c:	mov	r3, #1
   13da0:	mov	r4, #0
   13da4:	mov	r9, r4
   13da8:	str	r3, [sp, #32]
   13dac:	str	r3, [sp, #44]	; 0x2c
   13db0:	str	r3, [sp, #48]	; 0x30
   13db4:	str	r4, [sp, #52]	; 0x34
   13db8:	str	r3, [sp, #56]	; 0x38
   13dbc:	str	r3, [sp, #60]	; 0x3c
   13dc0:	str	r3, [sp, #88]	; 0x58
   13dc4:	movw	r3, #31168	; 0x79c0
   13dc8:	movt	r3, #1
   13dcc:	str	r4, [sp, #64]	; 0x40
   13dd0:	str	r4, [sp, #68]	; 0x44
   13dd4:	str	r3, [sp, #72]	; 0x48
   13dd8:	str	r4, [sp, #80]	; 0x50
   13ddc:	str	r4, [sp, #84]	; 0x54
   13de0:	b	1267c <close@plt+0x1748>
   13de4:	mov	fp, r9
   13de8:	b	12f98 <close@plt+0x2064>
   13dec:	ldr	r3, [sp, #48]	; 0x30
   13df0:	b	1390c <close@plt+0x29d8>
   13df4:	mov	r2, r3
   13df8:	ldr	r3, [sp, #72]	; 0x48
   13dfc:	cmp	r3, #0
   13e00:	moveq	r2, #0
   13e04:	andne	r2, r2, #1
   13e08:	cmp	r2, #0
   13e0c:	beq	13e3c <close@plt+0x2f08>
   13e10:	mov	r2, r3
   13e14:	ldrb	r3, [r3]
   13e18:	cmp	r3, #0
   13e1c:	beq	13e3c <close@plt+0x2f08>
   13e20:	cmp	sl, r4
   13e24:	bls	13e4c <close@plt+0x2f18>
   13e28:	strb	r3, [fp, r4]
   13e2c:	add	r4, r4, #1
   13e30:	ldrb	r3, [r2, #1]!
   13e34:	cmp	r3, #0
   13e38:	bne	13e20 <close@plt+0x2eec>
   13e3c:	cmp	sl, r4
   13e40:	movhi	r3, #0
   13e44:	strbhi	r3, [fp, r4]
   13e48:	b	12fd4 <close@plt+0x20a0>
   13e4c:	ldrb	r3, [r2, #1]!
   13e50:	add	r4, r4, #1
   13e54:	cmp	r3, #0
   13e58:	bne	13e20 <close@plt+0x2eec>
   13e5c:	b	13e3c <close@plt+0x2f08>
   13e60:	mov	r0, r3
   13e64:	ldr	r2, [sp, #60]	; 0x3c
   13e68:	b	139e4 <close@plt+0x2ab0>
   13e6c:	mov	ip, #5
   13e70:	mov	r3, r8
   13e74:	ldr	r1, [sp, #84]	; 0x54
   13e78:	str	ip, [sp]
   13e7c:	ldr	r2, [sp, #180]	; 0xb4
   13e80:	ldr	ip, [sp, #188]	; 0xbc
   13e84:	ldr	r0, [sp, #184]	; 0xb8
   13e88:	str	r2, [sp, #4]
   13e8c:	ldr	r2, [sp, #28]
   13e90:	str	ip, [sp, #12]
   13e94:	ldr	ip, [sp, #192]	; 0xc0
   13e98:	str	r0, [sp, #8]
   13e9c:	mov	r0, fp
   13ea0:	str	ip, [sp, #16]
   13ea4:	bl	12558 <close@plt+0x1624>
   13ea8:	mov	r4, r0
   13eac:	b	12fd4 <close@plt+0x20a0>
   13eb0:	mov	r6, r3
   13eb4:	str	r3, [sp, #40]	; 0x28
   13eb8:	b	12f44 <close@plt+0x2010>
   13ebc:	mov	r3, #2
   13ec0:	str	r3, [sp, #176]	; 0xb0
   13ec4:	b	12f84 <close@plt+0x2050>
   13ec8:	ldr	r2, [sp, #60]	; 0x3c
   13ecc:	b	139e4 <close@plt+0x2ab0>
   13ed0:	mov	r3, #5
   13ed4:	mov	fp, r9
   13ed8:	str	r3, [sp, #176]	; 0xb0
   13edc:	b	12f98 <close@plt+0x2064>
   13ee0:	mov	r1, #1
   13ee4:	mov	r9, #0
   13ee8:	mov	r3, r9
   13eec:	mov	r2, r9
   13ef0:	str	r1, [sp, #32]
   13ef4:	str	sl, [sp, #84]	; 0x54
   13ef8:	b	12d20 <close@plt+0x1dec>
   13efc:	mov	r3, #0
   13f00:	mov	r2, #1
   13f04:	mov	r9, r3
   13f08:	mov	r4, r3
   13f0c:	str	r2, [sp, #32]
   13f10:	strd	r2, [sp, #44]	; 0x2c
   13f14:	strd	r2, [sp, #56]	; 0x38
   13f18:	str	r3, [sp, #80]	; 0x50
   13f1c:	str	r3, [sp, #84]	; 0x54
   13f20:	str	r3, [sp, #88]	; 0x58
   13f24:	movw	r3, #31188	; 0x79d4
   13f28:	movt	r3, #1
   13f2c:	str	r2, [sp, #52]	; 0x34
   13f30:	str	r2, [sp, #64]	; 0x40
   13f34:	str	r2, [sp, #68]	; 0x44
   13f38:	str	r3, [sp, #72]	; 0x48
   13f3c:	b	1267c <close@plt+0x1748>
   13f40:	bl	10f28 <abort@plt>
   13f44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f48:	mov	r4, r0
   13f4c:	mov	r5, r3
   13f50:	strd	r6, [sp, #8]
   13f54:	movw	r7, #33016	; 0x80f8
   13f58:	movt	r7, #2
   13f5c:	strd	r8, [sp, #16]
   13f60:	strd	sl, [sp, #24]
   13f64:	mov	sl, r1
   13f68:	mov	fp, r2
   13f6c:	str	lr, [sp, #32]
   13f70:	sub	sp, sp, #60	; 0x3c
   13f74:	bl	10e50 <__errno_location@plt>
   13f78:	mov	r8, r0
   13f7c:	cmn	r4, #-2147483647	; 0x80000001
   13f80:	ldr	r6, [r7]
   13f84:	movne	r0, #0
   13f88:	moveq	r0, #1
   13f8c:	ldr	r3, [r8]
   13f90:	orrs	r0, r0, r4, lsr #31
   13f94:	str	r3, [sp, #28]
   13f98:	bne	14128 <close@plt+0x31f4>
   13f9c:	ldr	r3, [r7, #4]
   13fa0:	cmp	r3, r4
   13fa4:	bgt	14004 <close@plt+0x30d0>
   13fa8:	add	r1, r7, #8
   13fac:	sub	r2, r4, r3
   13fb0:	str	r3, [sp, #52]	; 0x34
   13fb4:	cmp	r6, r1
   13fb8:	add	r2, r2, #1
   13fbc:	beq	14100 <close@plt+0x31cc>
   13fc0:	mov	r1, #8
   13fc4:	mov	r0, r6
   13fc8:	mvn	r3, #-2147483648	; 0x80000000
   13fcc:	str	r1, [sp]
   13fd0:	add	r1, sp, #52	; 0x34
   13fd4:	bl	16870 <close@plt+0x593c>
   13fd8:	mov	r6, r0
   13fdc:	str	r0, [r7]
   13fe0:	ldr	r0, [r7, #4]
   13fe4:	mov	r1, #0
   13fe8:	ldr	r2, [sp, #52]	; 0x34
   13fec:	sub	r2, r2, r0
   13ff0:	add	r0, r6, r0, lsl #3
   13ff4:	lsl	r2, r2, #3
   13ff8:	bl	10e74 <memset@plt>
   13ffc:	ldr	r3, [sp, #52]	; 0x34
   14000:	str	r3, [r7, #4]
   14004:	ldr	r1, [r5, #4]
   14008:	add	r0, r6, r4, lsl #3
   1400c:	add	ip, r5, #8
   14010:	mov	r3, fp
   14014:	mov	r2, sl
   14018:	ldr	r7, [r0, #4]
   1401c:	str	r0, [sp, #36]	; 0x24
   14020:	str	ip, [sp, #40]	; 0x28
   14024:	orr	r0, r1, #1
   14028:	ldr	r9, [r6, r4, lsl #3]
   1402c:	str	ip, [sp, #8]
   14030:	ldr	lr, [r5, #44]	; 0x2c
   14034:	str	r0, [sp, #4]
   14038:	ldr	ip, [r5]
   1403c:	mov	r1, r9
   14040:	str	ip, [sp, #32]
   14044:	ldr	ip, [r5, #40]	; 0x28
   14048:	str	ip, [sp, #12]
   1404c:	ldr	ip, [sp, #32]
   14050:	str	lr, [sp, #16]
   14054:	str	r0, [sp, #44]	; 0x2c
   14058:	mov	r0, r7
   1405c:	str	ip, [sp]
   14060:	bl	12558 <close@plt+0x1624>
   14064:	cmp	r9, r0
   14068:	bhi	140d8 <close@plt+0x31a4>
   1406c:	add	r9, r0, #1
   14070:	movw	r3, #33144	; 0x8178
   14074:	movt	r3, #2
   14078:	cmp	r7, r3
   1407c:	str	r9, [r6, r4, lsl #3]
   14080:	beq	1408c <close@plt+0x3158>
   14084:	mov	r0, r7
   14088:	bl	12204 <close@plt+0x12d0>
   1408c:	mov	r0, r9
   14090:	bl	165cc <close@plt+0x5698>
   14094:	ldr	ip, [r5]
   14098:	mov	r3, fp
   1409c:	mov	r2, sl
   140a0:	mov	r1, r9
   140a4:	mov	r7, r0
   140a8:	ldr	lr, [sp, #36]	; 0x24
   140ac:	ldr	r4, [r5, #40]	; 0x28
   140b0:	str	r0, [lr, #4]
   140b4:	ldr	lr, [r5, #44]	; 0x2c
   140b8:	str	ip, [sp]
   140bc:	ldr	ip, [sp, #44]	; 0x2c
   140c0:	str	ip, [sp, #4]
   140c4:	ldr	ip, [sp, #40]	; 0x28
   140c8:	str	r4, [sp, #12]
   140cc:	str	lr, [sp, #16]
   140d0:	str	ip, [sp, #8]
   140d4:	bl	12558 <close@plt+0x1624>
   140d8:	ldr	r3, [sp, #28]
   140dc:	mov	r0, r7
   140e0:	str	r3, [r8]
   140e4:	add	sp, sp, #60	; 0x3c
   140e8:	ldrd	r4, [sp]
   140ec:	ldrd	r6, [sp, #8]
   140f0:	ldrd	r8, [sp, #16]
   140f4:	ldrd	sl, [sp, #24]
   140f8:	add	sp, sp, #32
   140fc:	pop	{pc}		; (ldr pc, [sp], #4)
   14100:	mov	r1, #8
   14104:	mvn	r3, #-2147483648	; 0x80000000
   14108:	str	r1, [sp]
   1410c:	add	r1, sp, #52	; 0x34
   14110:	bl	16870 <close@plt+0x593c>
   14114:	ldrd	r2, [r7, #8]
   14118:	mov	r6, r0
   1411c:	str	r0, [r7]
   14120:	strd	r2, [r0]
   14124:	b	13fe0 <close@plt+0x30ac>
   14128:	bl	10f28 <abort@plt>
   1412c:	strd	r4, [sp, #-16]!
   14130:	mov	r5, r0
   14134:	str	r6, [sp, #8]
   14138:	str	lr, [sp, #12]
   1413c:	bl	10e50 <__errno_location@plt>
   14140:	mov	r4, r0
   14144:	cmp	r5, #0
   14148:	ldr	r0, [pc, #32]	; 14170 <close@plt+0x323c>
   1414c:	mov	r1, #48	; 0x30
   14150:	movne	r0, r5
   14154:	ldr	r6, [r4]
   14158:	bl	16a10 <close@plt+0x5adc>
   1415c:	str	r6, [r4]
   14160:	ldrd	r4, [sp]
   14164:	ldr	r6, [sp, #8]
   14168:	add	sp, sp, #12
   1416c:	pop	{pc}		; (ldr pc, [sp], #4)
   14170:	andeq	r8, r2, r8, ror r2
   14174:	ldr	r3, [pc, #12]	; 14188 <close@plt+0x3254>
   14178:	cmp	r0, #0
   1417c:	moveq	r0, r3
   14180:	ldr	r0, [r0]
   14184:	bx	lr
   14188:	andeq	r8, r2, r8, ror r2
   1418c:	ldr	r3, [pc, #12]	; 141a0 <close@plt+0x326c>
   14190:	cmp	r0, #0
   14194:	moveq	r0, r3
   14198:	str	r1, [r0]
   1419c:	bx	lr
   141a0:	andeq	r8, r2, r8, ror r2
   141a4:	ldr	r3, [pc, #52]	; 141e0 <close@plt+0x32ac>
   141a8:	cmp	r0, #0
   141ac:	push	{lr}		; (str lr, [sp, #-4]!)
   141b0:	lsr	lr, r1, #5
   141b4:	and	r1, r1, #31
   141b8:	moveq	r0, r3
   141bc:	add	r3, r0, #8
   141c0:	ldr	ip, [r3, lr, lsl #2]
   141c4:	lsr	r0, ip, r1
   141c8:	eor	r2, r2, r0
   141cc:	and	r0, r0, #1
   141d0:	and	r2, r2, #1
   141d4:	eor	r1, ip, r2, lsl r1
   141d8:	str	r1, [r3, lr, lsl #2]
   141dc:	pop	{pc}		; (ldr pc, [sp], #4)
   141e0:	andeq	r8, r2, r8, ror r2
   141e4:	ldr	r3, [pc, #16]	; 141fc <close@plt+0x32c8>
   141e8:	cmp	r0, #0
   141ec:	movne	r3, r0
   141f0:	ldr	r0, [r3, #4]
   141f4:	str	r1, [r3, #4]
   141f8:	bx	lr
   141fc:	andeq	r8, r2, r8, ror r2
   14200:	ldr	r3, [pc, #48]	; 14238 <close@plt+0x3304>
   14204:	cmp	r0, #0
   14208:	mov	ip, #10
   1420c:	moveq	r0, r3
   14210:	cmp	r2, #0
   14214:	cmpne	r1, #0
   14218:	str	ip, [r0]
   1421c:	beq	1422c <close@plt+0x32f8>
   14220:	str	r1, [r0, #40]	; 0x28
   14224:	str	r2, [r0, #44]	; 0x2c
   14228:	bx	lr
   1422c:	str	r4, [sp, #-8]!
   14230:	str	lr, [sp, #4]
   14234:	bl	10f28 <abort@plt>
   14238:	andeq	r8, r2, r8, ror r2
   1423c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14240:	strd	r6, [sp, #8]
   14244:	mov	r7, r0
   14248:	mov	r6, r1
   1424c:	strd	r8, [sp, #16]
   14250:	mov	r8, r2
   14254:	mov	r9, r3
   14258:	str	lr, [sp, #24]
   1425c:	sub	sp, sp, #28
   14260:	ldr	r4, [sp, #56]	; 0x38
   14264:	ldr	ip, [pc, #104]	; 142d4 <close@plt+0x33a0>
   14268:	cmp	r4, #0
   1426c:	moveq	r4, ip
   14270:	bl	10e50 <__errno_location@plt>
   14274:	ldr	ip, [r4, #44]	; 0x2c
   14278:	mov	r5, r0
   1427c:	mov	r1, r6
   14280:	add	lr, r4, #8
   14284:	mov	r3, r9
   14288:	ldr	r6, [r5]
   1428c:	mov	r2, r8
   14290:	mov	r0, r7
   14294:	str	ip, [sp, #16]
   14298:	ldr	ip, [r4, #40]	; 0x28
   1429c:	str	lr, [sp, #8]
   142a0:	str	ip, [sp, #12]
   142a4:	ldr	ip, [r4, #4]
   142a8:	str	ip, [sp, #4]
   142ac:	ldr	ip, [r4]
   142b0:	str	ip, [sp]
   142b4:	bl	12558 <close@plt+0x1624>
   142b8:	str	r6, [r5]
   142bc:	add	sp, sp, #28
   142c0:	ldrd	r4, [sp]
   142c4:	ldrd	r6, [sp, #8]
   142c8:	ldrd	r8, [sp, #16]
   142cc:	add	sp, sp, #24
   142d0:	pop	{pc}		; (ldr pc, [sp], #4)
   142d4:	andeq	r8, r2, r8, ror r2
   142d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142dc:	cmp	r2, #0
   142e0:	ldr	r4, [pc, #192]	; 143a8 <close@plt+0x3474>
   142e4:	movne	r4, r2
   142e8:	strd	r6, [sp, #8]
   142ec:	strd	r8, [sp, #16]
   142f0:	mov	r9, r1
   142f4:	mov	r8, r0
   142f8:	strd	sl, [sp, #24]
   142fc:	str	lr, [sp, #32]
   14300:	sub	sp, sp, #36	; 0x24
   14304:	bl	10e50 <__errno_location@plt>
   14308:	ldr	r5, [r4, #4]
   1430c:	mov	r6, r0
   14310:	add	r7, r4, #8
   14314:	mov	r1, #0
   14318:	mov	r3, r9
   1431c:	ldr	ip, [r4, #44]	; 0x2c
   14320:	mov	r2, r8
   14324:	mov	r0, r1
   14328:	ldr	sl, [r6]
   1432c:	orr	r5, r5, #1
   14330:	str	ip, [sp, #16]
   14334:	ldr	ip, [r4, #40]	; 0x28
   14338:	stmib	sp, {r5, r7, ip}
   1433c:	ldr	ip, [r4]
   14340:	str	ip, [sp]
   14344:	bl	12558 <close@plt+0x1624>
   14348:	add	r1, r0, #1
   1434c:	mov	r0, r1
   14350:	str	r1, [sp, #28]
   14354:	bl	165cc <close@plt+0x5698>
   14358:	ldr	ip, [r4, #44]	; 0x2c
   1435c:	mov	fp, r0
   14360:	mov	r3, r9
   14364:	mov	r2, r8
   14368:	ldr	r1, [sp, #28]
   1436c:	str	ip, [sp, #16]
   14370:	ldr	ip, [r4, #40]	; 0x28
   14374:	stmib	sp, {r5, r7, ip}
   14378:	ldr	ip, [r4]
   1437c:	str	ip, [sp]
   14380:	bl	12558 <close@plt+0x1624>
   14384:	mov	r0, fp
   14388:	str	sl, [r6]
   1438c:	add	sp, sp, #36	; 0x24
   14390:	ldrd	r4, [sp]
   14394:	ldrd	r6, [sp, #8]
   14398:	ldrd	r8, [sp, #16]
   1439c:	ldrd	sl, [sp, #24]
   143a0:	add	sp, sp, #32
   143a4:	pop	{pc}		; (ldr pc, [sp], #4)
   143a8:	andeq	r8, r2, r8, ror r2
   143ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   143b0:	cmp	r3, #0
   143b4:	ldr	r4, [pc, #220]	; 14498 <close@plt+0x3564>
   143b8:	movne	r4, r3
   143bc:	strd	r6, [sp, #8]
   143c0:	mov	r6, r2
   143c4:	strd	r8, [sp, #16]
   143c8:	mov	r9, r0
   143cc:	strd	sl, [sp, #24]
   143d0:	mov	sl, r1
   143d4:	str	lr, [sp, #32]
   143d8:	sub	sp, sp, #44	; 0x2c
   143dc:	bl	10e50 <__errno_location@plt>
   143e0:	ldr	r5, [r4, #4]
   143e4:	mov	r7, r0
   143e8:	mov	r1, #0
   143ec:	add	r8, r4, #8
   143f0:	mov	r3, sl
   143f4:	ldr	ip, [r4, #44]	; 0x2c
   143f8:	mov	r2, r9
   143fc:	mov	r0, r1
   14400:	ldr	lr, [r7]
   14404:	cmp	r6, r1
   14408:	orreq	r5, r5, #1
   1440c:	str	ip, [sp, #16]
   14410:	ldr	ip, [r4, #40]	; 0x28
   14414:	stmib	sp, {r5, r8, ip}
   14418:	ldr	ip, [r4]
   1441c:	str	lr, [sp, #28]
   14420:	str	ip, [sp]
   14424:	bl	12558 <close@plt+0x1624>
   14428:	add	r1, r0, #1
   1442c:	mov	fp, r0
   14430:	mov	r0, r1
   14434:	str	r1, [sp, #36]	; 0x24
   14438:	bl	165cc <close@plt+0x5698>
   1443c:	ldr	ip, [r4, #44]	; 0x2c
   14440:	mov	r3, sl
   14444:	mov	r2, r9
   14448:	ldr	r1, [sp, #36]	; 0x24
   1444c:	str	ip, [sp, #16]
   14450:	ldr	ip, [r4, #40]	; 0x28
   14454:	str	r0, [sp, #32]
   14458:	stmib	sp, {r5, r8, ip}
   1445c:	ldr	ip, [r4]
   14460:	str	ip, [sp]
   14464:	bl	12558 <close@plt+0x1624>
   14468:	ldr	lr, [sp, #28]
   1446c:	cmp	r6, #0
   14470:	ldr	r0, [sp, #32]
   14474:	str	lr, [r7]
   14478:	strne	fp, [r6]
   1447c:	add	sp, sp, #44	; 0x2c
   14480:	ldrd	r4, [sp]
   14484:	ldrd	r6, [sp, #8]
   14488:	ldrd	r8, [sp, #16]
   1448c:	ldrd	sl, [sp, #24]
   14490:	add	sp, sp, #32
   14494:	pop	{pc}		; (ldr pc, [sp], #4)
   14498:	andeq	r8, r2, r8, ror r2
   1449c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   144a0:	movw	r5, #33016	; 0x80f8
   144a4:	movt	r5, #2
   144a8:	ldr	r3, [r5, #4]
   144ac:	strd	r6, [sp, #8]
   144b0:	str	r8, [sp, #16]
   144b4:	str	lr, [sp, #20]
   144b8:	ldr	r7, [r5]
   144bc:	cmp	r3, #1
   144c0:	ble	144e4 <close@plt+0x35b0>
   144c4:	mov	r4, #1
   144c8:	add	r6, r7, #4
   144cc:	ldr	r0, [r6, r4, lsl #3]
   144d0:	add	r4, r4, #1
   144d4:	bl	12204 <close@plt+0x12d0>
   144d8:	ldr	r3, [r5, #4]
   144dc:	cmp	r3, r4
   144e0:	bgt	144cc <close@plt+0x3598>
   144e4:	ldr	r0, [r7, #4]
   144e8:	movw	r4, #33144	; 0x8178
   144ec:	movt	r4, #2
   144f0:	cmp	r0, r4
   144f4:	beq	14508 <close@plt+0x35d4>
   144f8:	bl	12204 <close@plt+0x12d0>
   144fc:	mov	r3, #256	; 0x100
   14500:	str	r3, [r5, #8]
   14504:	str	r4, [r5, #12]
   14508:	ldr	r4, [pc, #44]	; 1453c <close@plt+0x3608>
   1450c:	cmp	r7, r4
   14510:	beq	14520 <close@plt+0x35ec>
   14514:	mov	r0, r7
   14518:	bl	12204 <close@plt+0x12d0>
   1451c:	str	r4, [r5]
   14520:	mov	r3, #1
   14524:	ldrd	r6, [sp, #8]
   14528:	str	r3, [r5, #4]
   1452c:	ldrd	r4, [sp]
   14530:	ldr	r8, [sp, #16]
   14534:	add	sp, sp, #20
   14538:	pop	{pc}		; (ldr pc, [sp], #4)
   1453c:	andeq	r8, r2, r0, lsl #2
   14540:	ldr	r3, [pc, #4]	; 1454c <close@plt+0x3618>
   14544:	mvn	r2, #0
   14548:	b	13f44 <close@plt+0x3010>
   1454c:	andeq	r8, r2, r8, ror r2
   14550:	ldr	r3, [pc]	; 14558 <close@plt+0x3624>
   14554:	b	13f44 <close@plt+0x3010>
   14558:	andeq	r8, r2, r8, ror r2
   1455c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14560:	movw	r4, #33016	; 0x80f8
   14564:	movt	r4, #2
   14568:	strd	r6, [sp, #8]
   1456c:	strd	r8, [sp, #16]
   14570:	strd	sl, [sp, #24]
   14574:	mov	sl, r0
   14578:	str	lr, [sp, #32]
   1457c:	sub	sp, sp, #44	; 0x2c
   14580:	bl	10e50 <__errno_location@plt>
   14584:	ldr	r3, [r0]
   14588:	mov	r8, r0
   1458c:	ldr	r2, [r4, #4]
   14590:	ldr	r5, [r4]
   14594:	str	r3, [sp, #28]
   14598:	cmp	r2, #0
   1459c:	bgt	145f8 <close@plt+0x36c4>
   145a0:	add	r3, r4, #8
   145a4:	str	r2, [sp, #36]	; 0x24
   145a8:	rsb	r2, r2, #1
   145ac:	cmp	r5, r3
   145b0:	beq	146c4 <close@plt+0x3790>
   145b4:	mov	r1, #8
   145b8:	mov	r0, r5
   145bc:	mvn	r3, #-2147483648	; 0x80000000
   145c0:	str	r1, [sp]
   145c4:	add	r1, sp, #36	; 0x24
   145c8:	bl	16870 <close@plt+0x593c>
   145cc:	mov	r5, r0
   145d0:	str	r0, [r4]
   145d4:	ldr	r0, [r4, #4]
   145d8:	mov	r1, #0
   145dc:	ldr	r2, [sp, #36]	; 0x24
   145e0:	sub	r2, r2, r0
   145e4:	add	r0, r5, r0, lsl #3
   145e8:	lsl	r2, r2, #3
   145ec:	bl	10e74 <memset@plt>
   145f0:	ldr	r3, [sp, #36]	; 0x24
   145f4:	str	r3, [r4, #4]
   145f8:	movw	r4, #33144	; 0x8178
   145fc:	movt	r4, #2
   14600:	ldr	r9, [r5]
   14604:	add	fp, r4, #264	; 0x108
   14608:	mvn	r3, #0
   1460c:	ldr	r7, [r4, #260]	; 0x104
   14610:	mov	r2, sl
   14614:	ldr	r6, [r5, #4]
   14618:	str	fp, [sp, #8]
   1461c:	mov	r1, r9
   14620:	ldr	ip, [r4, #256]	; 0x100
   14624:	orr	r7, r7, #1
   14628:	ldr	lr, [r4, #300]	; 0x12c
   1462c:	mov	r0, r6
   14630:	str	ip, [sp]
   14634:	str	r7, [sp, #4]
   14638:	str	lr, [sp, #16]
   1463c:	ldr	ip, [r4, #296]	; 0x128
   14640:	str	ip, [sp, #12]
   14644:	bl	12558 <close@plt+0x1624>
   14648:	cmp	r9, r0
   1464c:	bhi	1469c <close@plt+0x3768>
   14650:	add	r9, r0, #1
   14654:	cmp	r6, r4
   14658:	str	r9, [r5]
   1465c:	beq	14668 <close@plt+0x3734>
   14660:	mov	r0, r6
   14664:	bl	12204 <close@plt+0x12d0>
   14668:	mov	r0, r9
   1466c:	bl	165cc <close@plt+0x5698>
   14670:	ldr	r3, [r4, #256]	; 0x100
   14674:	mov	r2, sl
   14678:	mov	r1, r9
   1467c:	mov	r6, r0
   14680:	ldr	lr, [r4, #296]	; 0x128
   14684:	ldr	ip, [r4, #300]	; 0x12c
   14688:	str	r0, [r5, #4]
   1468c:	stm	sp, {r3, r7, fp, lr}
   14690:	mvn	r3, #0
   14694:	str	ip, [sp, #16]
   14698:	bl	12558 <close@plt+0x1624>
   1469c:	ldr	r3, [sp, #28]
   146a0:	mov	r0, r6
   146a4:	str	r3, [r8]
   146a8:	add	sp, sp, #44	; 0x2c
   146ac:	ldrd	r4, [sp]
   146b0:	ldrd	r6, [sp, #8]
   146b4:	ldrd	r8, [sp, #16]
   146b8:	ldrd	sl, [sp, #24]
   146bc:	add	sp, sp, #32
   146c0:	pop	{pc}		; (ldr pc, [sp], #4)
   146c4:	mov	r0, #8
   146c8:	mvn	r3, #-2147483648	; 0x80000000
   146cc:	add	r1, sp, #36	; 0x24
   146d0:	str	r0, [sp]
   146d4:	mov	r0, #0
   146d8:	bl	16870 <close@plt+0x593c>
   146dc:	ldrd	r2, [r4, #8]
   146e0:	mov	r5, r0
   146e4:	str	r0, [r4]
   146e8:	strd	r2, [r0]
   146ec:	b	145d4 <close@plt+0x36a0>
   146f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   146f4:	movw	r4, #33016	; 0x80f8
   146f8:	movt	r4, #2
   146fc:	strd	r6, [sp, #8]
   14700:	strd	r8, [sp, #16]
   14704:	strd	sl, [sp, #24]
   14708:	mov	sl, r0
   1470c:	mov	fp, r1
   14710:	str	lr, [sp, #32]
   14714:	sub	sp, sp, #44	; 0x2c
   14718:	bl	10e50 <__errno_location@plt>
   1471c:	ldr	r3, [r0]
   14720:	mov	r8, r0
   14724:	ldr	r2, [r4, #4]
   14728:	ldr	r5, [r4]
   1472c:	str	r3, [sp, #28]
   14730:	cmp	r2, #0
   14734:	bgt	14790 <close@plt+0x385c>
   14738:	add	r3, r4, #8
   1473c:	str	r2, [sp, #36]	; 0x24
   14740:	rsb	r2, r2, #1
   14744:	cmp	r5, r3
   14748:	beq	1486c <close@plt+0x3938>
   1474c:	mov	r1, #8
   14750:	mov	r0, r5
   14754:	mvn	r3, #-2147483648	; 0x80000000
   14758:	str	r1, [sp]
   1475c:	add	r1, sp, #36	; 0x24
   14760:	bl	16870 <close@plt+0x593c>
   14764:	mov	r5, r0
   14768:	str	r0, [r4]
   1476c:	ldr	r0, [r4, #4]
   14770:	mov	r1, #0
   14774:	ldr	r2, [sp, #36]	; 0x24
   14778:	sub	r2, r2, r0
   1477c:	add	r0, r5, r0, lsl #3
   14780:	lsl	r2, r2, #3
   14784:	bl	10e74 <memset@plt>
   14788:	ldr	r3, [sp, #36]	; 0x24
   1478c:	str	r3, [r4, #4]
   14790:	movw	r4, #33144	; 0x8178
   14794:	movt	r4, #2
   14798:	ldr	r9, [r5]
   1479c:	add	r0, r4, #264	; 0x108
   147a0:	mov	r3, fp
   147a4:	ldr	r7, [r4, #260]	; 0x104
   147a8:	mov	r2, sl
   147ac:	ldr	r6, [r5, #4]
   147b0:	str	r0, [sp, #8]
   147b4:	mov	r1, r9
   147b8:	ldr	ip, [r4, #256]	; 0x100
   147bc:	orr	r7, r7, #1
   147c0:	ldr	lr, [r4, #300]	; 0x12c
   147c4:	mov	r0, r6
   147c8:	str	ip, [sp]
   147cc:	str	r7, [sp, #4]
   147d0:	str	lr, [sp, #16]
   147d4:	ldr	ip, [r4, #296]	; 0x128
   147d8:	str	ip, [sp, #12]
   147dc:	bl	12558 <close@plt+0x1624>
   147e0:	cmp	r9, r0
   147e4:	bhi	14844 <close@plt+0x3910>
   147e8:	add	r9, r0, #1
   147ec:	cmp	r6, r4
   147f0:	str	r9, [r5]
   147f4:	beq	14800 <close@plt+0x38cc>
   147f8:	mov	r0, r6
   147fc:	bl	12204 <close@plt+0x12d0>
   14800:	mov	r0, r9
   14804:	bl	165cc <close@plt+0x5698>
   14808:	ldr	ip, [r4, #256]	; 0x100
   1480c:	mov	r1, r9
   14810:	mov	r3, fp
   14814:	mov	r2, sl
   14818:	mov	r6, r0
   1481c:	ldr	r9, [r4, #296]	; 0x128
   14820:	ldr	lr, [r4, #300]	; 0x12c
   14824:	str	r0, [r5, #4]
   14828:	str	ip, [sp]
   1482c:	ldr	ip, [pc, #100]	; 14898 <close@plt+0x3964>
   14830:	str	r7, [sp, #4]
   14834:	str	ip, [sp, #8]
   14838:	str	r9, [sp, #12]
   1483c:	str	lr, [sp, #16]
   14840:	bl	12558 <close@plt+0x1624>
   14844:	ldr	r3, [sp, #28]
   14848:	mov	r0, r6
   1484c:	str	r3, [r8]
   14850:	add	sp, sp, #44	; 0x2c
   14854:	ldrd	r4, [sp]
   14858:	ldrd	r6, [sp, #8]
   1485c:	ldrd	r8, [sp, #16]
   14860:	ldrd	sl, [sp, #24]
   14864:	add	sp, sp, #32
   14868:	pop	{pc}		; (ldr pc, [sp], #4)
   1486c:	mov	r0, #8
   14870:	mvn	r3, #-2147483648	; 0x80000000
   14874:	add	r1, sp, #36	; 0x24
   14878:	str	r0, [sp]
   1487c:	mov	r0, #0
   14880:	bl	16870 <close@plt+0x593c>
   14884:	ldrd	r2, [r4, #8]
   14888:	mov	r5, r0
   1488c:	str	r0, [r4]
   14890:	strd	r2, [r0]
   14894:	b	1476c <close@plt+0x3838>
   14898:	andeq	r8, r2, r0, lsl #5
   1489c:	strd	r4, [sp, #-20]!	; 0xffffffec
   148a0:	mov	r4, #0
   148a4:	mov	r5, #0
   148a8:	strd	r6, [sp, #8]
   148ac:	cmp	r1, #10
   148b0:	str	lr, [sp, #16]
   148b4:	sub	sp, sp, #100	; 0x64
   148b8:	strd	r4, [sp, #48]	; 0x30
   148bc:	beq	14904 <close@plt+0x39d0>
   148c0:	mov	r3, sp
   148c4:	strd	r4, [sp, #8]
   148c8:	str	r1, [sp, #48]	; 0x30
   148cc:	mov	r1, r2
   148d0:	mvn	r2, #0
   148d4:	ldrd	r6, [sp, #48]	; 0x30
   148d8:	strd	r6, [sp]
   148dc:	strd	r4, [sp, #16]
   148e0:	strd	r4, [sp, #24]
   148e4:	strd	r4, [sp, #32]
   148e8:	strd	r4, [sp, #40]	; 0x28
   148ec:	bl	13f44 <close@plt+0x3010>
   148f0:	add	sp, sp, #100	; 0x64
   148f4:	ldrd	r4, [sp]
   148f8:	ldrd	r6, [sp, #8]
   148fc:	add	sp, sp, #16
   14900:	pop	{pc}		; (ldr pc, [sp], #4)
   14904:	bl	10f28 <abort@plt>
   14908:	strd	r4, [sp, #-20]!	; 0xffffffec
   1490c:	mov	r4, #0
   14910:	mov	r5, #0
   14914:	strd	r6, [sp, #8]
   14918:	cmp	r1, #10
   1491c:	str	lr, [sp, #16]
   14920:	sub	sp, sp, #100	; 0x64
   14924:	strd	r4, [sp, #48]	; 0x30
   14928:	beq	14974 <close@plt+0x3a40>
   1492c:	mov	ip, r2
   14930:	mov	r2, r3
   14934:	strd	r4, [sp, #8]
   14938:	str	r1, [sp, #48]	; 0x30
   1493c:	mov	r3, sp
   14940:	mov	r1, ip
   14944:	ldrd	r6, [sp, #48]	; 0x30
   14948:	strd	r6, [sp]
   1494c:	strd	r4, [sp, #16]
   14950:	strd	r4, [sp, #24]
   14954:	strd	r4, [sp, #32]
   14958:	strd	r4, [sp, #40]	; 0x28
   1495c:	bl	13f44 <close@plt+0x3010>
   14960:	add	sp, sp, #100	; 0x64
   14964:	ldrd	r4, [sp]
   14968:	ldrd	r6, [sp, #8]
   1496c:	add	sp, sp, #16
   14970:	pop	{pc}		; (ldr pc, [sp], #4)
   14974:	bl	10f28 <abort@plt>
   14978:	mov	r2, #0
   1497c:	mov	r3, #0
   14980:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14984:	strd	r6, [sp, #8]
   14988:	cmp	r0, #10
   1498c:	strd	r8, [sp, #16]
   14990:	strd	sl, [sp, #24]
   14994:	str	lr, [sp, #32]
   14998:	sub	sp, sp, #124	; 0x7c
   1499c:	strd	r2, [sp, #72]	; 0x48
   149a0:	strd	r2, [sp, #80]	; 0x50
   149a4:	strd	r2, [sp, #88]	; 0x58
   149a8:	strd	r2, [sp, #96]	; 0x60
   149ac:	strd	r2, [sp, #104]	; 0x68
   149b0:	strd	r2, [sp, #112]	; 0x70
   149b4:	beq	14b58 <close@plt+0x3c24>
   149b8:	mov	r6, r1
   149bc:	movw	r4, #33016	; 0x80f8
   149c0:	movt	r4, #2
   149c4:	str	r0, [sp, #72]	; 0x48
   149c8:	ldrd	r0, [sp, #72]	; 0x48
   149cc:	strd	r0, [sp, #24]
   149d0:	strd	r2, [sp, #32]
   149d4:	strd	r2, [sp, #40]	; 0x28
   149d8:	strd	r2, [sp, #48]	; 0x30
   149dc:	strd	r2, [sp, #56]	; 0x38
   149e0:	strd	r2, [sp, #64]	; 0x40
   149e4:	bl	10e50 <__errno_location@plt>
   149e8:	mov	r8, r0
   149ec:	ldr	r5, [r4]
   149f0:	ldr	r2, [r4, #4]
   149f4:	ldr	r9, [r0]
   149f8:	cmp	r2, #0
   149fc:	bgt	14a58 <close@plt+0x3b24>
   14a00:	add	r3, r4, #8
   14a04:	str	r2, [sp, #72]	; 0x48
   14a08:	rsb	r2, r2, #1
   14a0c:	cmp	r5, r3
   14a10:	beq	14b2c <close@plt+0x3bf8>
   14a14:	mov	r3, #8
   14a18:	mov	r0, r5
   14a1c:	add	r1, sp, #72	; 0x48
   14a20:	str	r3, [sp]
   14a24:	mvn	r3, #-2147483648	; 0x80000000
   14a28:	bl	16870 <close@plt+0x593c>
   14a2c:	mov	r5, r0
   14a30:	str	r0, [r4]
   14a34:	ldr	r0, [r4, #4]
   14a38:	mov	r1, #0
   14a3c:	ldr	r2, [sp, #72]	; 0x48
   14a40:	sub	r2, r2, r0
   14a44:	add	r0, r5, r0, lsl #3
   14a48:	lsl	r2, r2, #3
   14a4c:	bl	10e74 <memset@plt>
   14a50:	ldr	r3, [sp, #72]	; 0x48
   14a54:	str	r3, [r4, #4]
   14a58:	ldr	sl, [r5]
   14a5c:	add	r0, sp, #32
   14a60:	mvn	r3, #0
   14a64:	mov	r2, r6
   14a68:	ldr	r7, [sp, #28]
   14a6c:	ldr	r4, [r5, #4]
   14a70:	mov	r1, sl
   14a74:	str	r0, [sp, #8]
   14a78:	ldr	lr, [sp, #24]
   14a7c:	orr	r7, r7, #1
   14a80:	ldr	ip, [sp, #64]	; 0x40
   14a84:	mov	r0, r4
   14a88:	ldr	fp, [sp, #68]	; 0x44
   14a8c:	str	lr, [sp]
   14a90:	str	r7, [sp, #4]
   14a94:	str	ip, [sp, #12]
   14a98:	str	fp, [sp, #16]
   14a9c:	bl	12558 <close@plt+0x1624>
   14aa0:	cmp	sl, r0
   14aa4:	bhi	14b08 <close@plt+0x3bd4>
   14aa8:	add	sl, r0, #1
   14aac:	movw	r3, #33144	; 0x8178
   14ab0:	movt	r3, #2
   14ab4:	cmp	r4, r3
   14ab8:	str	sl, [r5]
   14abc:	beq	14ac8 <close@plt+0x3b94>
   14ac0:	mov	r0, r4
   14ac4:	bl	12204 <close@plt+0x12d0>
   14ac8:	mov	r0, sl
   14acc:	bl	165cc <close@plt+0x5698>
   14ad0:	ldr	r3, [sp, #24]
   14ad4:	mov	r2, r6
   14ad8:	mov	r1, sl
   14adc:	mov	r4, r0
   14ae0:	ldr	lr, [sp, #64]	; 0x40
   14ae4:	ldr	ip, [sp, #68]	; 0x44
   14ae8:	str	r0, [r5, #4]
   14aec:	add	r5, sp, #32
   14af0:	stm	sp, {r3, r7}
   14af4:	mvn	r3, #0
   14af8:	str	r5, [sp, #8]
   14afc:	str	lr, [sp, #12]
   14b00:	str	ip, [sp, #16]
   14b04:	bl	12558 <close@plt+0x1624>
   14b08:	mov	r0, r4
   14b0c:	str	r9, [r8]
   14b10:	add	sp, sp, #124	; 0x7c
   14b14:	ldrd	r4, [sp]
   14b18:	ldrd	r6, [sp, #8]
   14b1c:	ldrd	r8, [sp, #16]
   14b20:	ldrd	sl, [sp, #24]
   14b24:	add	sp, sp, #32
   14b28:	pop	{pc}		; (ldr pc, [sp], #4)
   14b2c:	mov	r0, #8
   14b30:	mvn	r3, #-2147483648	; 0x80000000
   14b34:	add	r1, sp, #72	; 0x48
   14b38:	str	r0, [sp]
   14b3c:	mov	r0, #0
   14b40:	bl	16870 <close@plt+0x593c>
   14b44:	ldrd	r2, [r4, #8]
   14b48:	mov	r5, r0
   14b4c:	str	r0, [r4]
   14b50:	strd	r2, [r0]
   14b54:	b	14a34 <close@plt+0x3b00>
   14b58:	bl	10f28 <abort@plt>
   14b5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b60:	cmp	r0, #10
   14b64:	strd	r6, [sp, #8]
   14b68:	mov	r6, #0
   14b6c:	mov	r7, #0
   14b70:	strd	r8, [sp, #16]
   14b74:	strd	sl, [sp, #24]
   14b78:	str	lr, [sp, #32]
   14b7c:	sub	sp, sp, #124	; 0x7c
   14b80:	strd	r6, [sp, #72]	; 0x48
   14b84:	strd	r6, [sp, #80]	; 0x50
   14b88:	strd	r6, [sp, #88]	; 0x58
   14b8c:	strd	r6, [sp, #96]	; 0x60
   14b90:	strd	r6, [sp, #104]	; 0x68
   14b94:	strd	r6, [sp, #112]	; 0x70
   14b98:	beq	14d44 <close@plt+0x3e10>
   14b9c:	mov	sl, r2
   14ba0:	movw	r5, #33016	; 0x80f8
   14ba4:	movt	r5, #2
   14ba8:	str	r0, [sp, #72]	; 0x48
   14bac:	mov	r9, r1
   14bb0:	ldrd	r2, [sp, #72]	; 0x48
   14bb4:	strd	r2, [sp, #24]
   14bb8:	strd	r6, [sp, #32]
   14bbc:	strd	r6, [sp, #40]	; 0x28
   14bc0:	strd	r6, [sp, #48]	; 0x30
   14bc4:	strd	r6, [sp, #56]	; 0x38
   14bc8:	strd	r6, [sp, #64]	; 0x40
   14bcc:	bl	10e50 <__errno_location@plt>
   14bd0:	mov	r7, r0
   14bd4:	ldr	r4, [r5]
   14bd8:	ldr	r2, [r5, #4]
   14bdc:	ldr	fp, [r0]
   14be0:	cmp	r2, #0
   14be4:	bgt	14c40 <close@plt+0x3d0c>
   14be8:	add	r3, r5, #8
   14bec:	str	r2, [sp, #72]	; 0x48
   14bf0:	rsb	r2, r2, #1
   14bf4:	cmp	r4, r3
   14bf8:	beq	14d18 <close@plt+0x3de4>
   14bfc:	mov	r3, #8
   14c00:	mov	r0, r4
   14c04:	add	r1, sp, #72	; 0x48
   14c08:	str	r3, [sp]
   14c0c:	mvn	r3, #-2147483648	; 0x80000000
   14c10:	bl	16870 <close@plt+0x593c>
   14c14:	mov	r4, r0
   14c18:	str	r0, [r5]
   14c1c:	ldr	r0, [r5, #4]
   14c20:	mov	r1, #0
   14c24:	ldr	r2, [sp, #72]	; 0x48
   14c28:	sub	r2, r2, r0
   14c2c:	add	r0, r4, r0, lsl #3
   14c30:	lsl	r2, r2, #3
   14c34:	bl	10e74 <memset@plt>
   14c38:	ldr	r3, [sp, #72]	; 0x48
   14c3c:	str	r3, [r5, #4]
   14c40:	ldr	ip, [sp, #24]
   14c44:	add	r0, sp, #32
   14c48:	mov	r3, sl
   14c4c:	mov	r2, r9
   14c50:	ldr	r6, [sp, #28]
   14c54:	ldr	r8, [r4]
   14c58:	ldr	r5, [r4, #4]
   14c5c:	str	ip, [sp]
   14c60:	orr	r6, r6, #1
   14c64:	ldr	ip, [sp, #64]	; 0x40
   14c68:	mov	r1, r8
   14c6c:	str	r6, [sp, #4]
   14c70:	ldr	lr, [sp, #68]	; 0x44
   14c74:	str	r0, [sp, #8]
   14c78:	mov	r0, r5
   14c7c:	str	ip, [sp, #12]
   14c80:	str	lr, [sp, #16]
   14c84:	bl	12558 <close@plt+0x1624>
   14c88:	cmp	r8, r0
   14c8c:	bhi	14cf4 <close@plt+0x3dc0>
   14c90:	add	r8, r0, #1
   14c94:	movw	r3, #33144	; 0x8178
   14c98:	movt	r3, #2
   14c9c:	cmp	r5, r3
   14ca0:	str	r8, [r4]
   14ca4:	beq	14cb0 <close@plt+0x3d7c>
   14ca8:	mov	r0, r5
   14cac:	bl	12204 <close@plt+0x12d0>
   14cb0:	mov	r0, r8
   14cb4:	bl	165cc <close@plt+0x5698>
   14cb8:	ldr	lr, [sp, #24]
   14cbc:	mov	r1, r8
   14cc0:	mov	r3, sl
   14cc4:	mov	r2, r9
   14cc8:	mov	r5, r0
   14ccc:	ldr	r8, [sp, #64]	; 0x40
   14cd0:	ldr	ip, [sp, #68]	; 0x44
   14cd4:	str	r0, [r4, #4]
   14cd8:	str	lr, [sp]
   14cdc:	add	lr, sp, #32
   14ce0:	str	r6, [sp, #4]
   14ce4:	str	lr, [sp, #8]
   14ce8:	str	r8, [sp, #12]
   14cec:	str	ip, [sp, #16]
   14cf0:	bl	12558 <close@plt+0x1624>
   14cf4:	mov	r0, r5
   14cf8:	str	fp, [r7]
   14cfc:	add	sp, sp, #124	; 0x7c
   14d00:	ldrd	r4, [sp]
   14d04:	ldrd	r6, [sp, #8]
   14d08:	ldrd	r8, [sp, #16]
   14d0c:	ldrd	sl, [sp, #24]
   14d10:	add	sp, sp, #32
   14d14:	pop	{pc}		; (ldr pc, [sp], #4)
   14d18:	mov	r0, #8
   14d1c:	mvn	r3, #-2147483648	; 0x80000000
   14d20:	add	r1, sp, #72	; 0x48
   14d24:	str	r0, [sp]
   14d28:	mov	r0, #0
   14d2c:	bl	16870 <close@plt+0x593c>
   14d30:	ldrd	r2, [r5, #8]
   14d34:	mov	r4, r0
   14d38:	str	r0, [r5]
   14d3c:	strd	r2, [r0]
   14d40:	b	14c1c <close@plt+0x3ce8>
   14d44:	bl	10f28 <abort@plt>
   14d48:	ldr	r3, [pc, #492]	; 14f3c <close@plt+0x4008>
   14d4c:	lsr	ip, r2, #5
   14d50:	and	r2, r2, #31
   14d54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14d58:	movw	r5, #33016	; 0x80f8
   14d5c:	movt	r5, #2
   14d60:	strd	r6, [sp, #8]
   14d64:	strd	r8, [sp, #16]
   14d68:	strd	sl, [sp, #24]
   14d6c:	mov	sl, r0
   14d70:	mov	fp, r1
   14d74:	ldrd	r0, [r3]
   14d78:	str	lr, [sp, #32]
   14d7c:	sub	sp, sp, #92	; 0x5c
   14d80:	ldrd	r8, [r3, #8]
   14d84:	add	r6, sp, #48	; 0x30
   14d88:	strd	r0, [sp, #40]	; 0x28
   14d8c:	ldrd	r0, [r3, #16]
   14d90:	strd	r8, [sp, #48]	; 0x30
   14d94:	ldrd	r8, [r3, #24]
   14d98:	strd	r0, [sp, #56]	; 0x38
   14d9c:	ldrd	r0, [r3, #32]
   14da0:	strd	r8, [sp, #64]	; 0x40
   14da4:	ldrd	r8, [r3, #40]	; 0x28
   14da8:	strd	r0, [sp, #72]	; 0x48
   14dac:	strd	r8, [sp, #80]	; 0x50
   14db0:	ldr	r3, [r6, ip, lsl #2]
   14db4:	mvn	r1, r3, lsr r2
   14db8:	and	r1, r1, #1
   14dbc:	eor	r2, r3, r1, lsl r2
   14dc0:	str	r2, [r6, ip, lsl #2]
   14dc4:	bl	10e50 <__errno_location@plt>
   14dc8:	ldr	r3, [r0]
   14dcc:	mov	r8, r0
   14dd0:	ldr	r2, [r5, #4]
   14dd4:	ldr	r4, [r5]
   14dd8:	str	r3, [sp, #28]
   14ddc:	cmp	r2, #0
   14de0:	bgt	14e3c <close@plt+0x3f08>
   14de4:	add	r3, r5, #8
   14de8:	str	r2, [sp, #36]	; 0x24
   14dec:	rsb	r2, r2, #1
   14df0:	cmp	r4, r3
   14df4:	beq	14f10 <close@plt+0x3fdc>
   14df8:	mov	r1, #8
   14dfc:	mov	r0, r4
   14e00:	mvn	r3, #-2147483648	; 0x80000000
   14e04:	str	r1, [sp]
   14e08:	add	r1, sp, #36	; 0x24
   14e0c:	bl	16870 <close@plt+0x593c>
   14e10:	mov	r4, r0
   14e14:	str	r0, [r5]
   14e18:	ldr	r0, [r5, #4]
   14e1c:	mov	r1, #0
   14e20:	ldr	r2, [sp, #36]	; 0x24
   14e24:	sub	r2, r2, r0
   14e28:	add	r0, r4, r0, lsl #3
   14e2c:	lsl	r2, r2, #3
   14e30:	bl	10e74 <memset@plt>
   14e34:	ldr	r3, [sp, #36]	; 0x24
   14e38:	str	r3, [r5, #4]
   14e3c:	ldr	ip, [sp, #40]	; 0x28
   14e40:	mov	r3, fp
   14e44:	mov	r2, sl
   14e48:	ldr	r7, [sp, #44]	; 0x2c
   14e4c:	ldr	r9, [r4]
   14e50:	ldr	r5, [r4, #4]
   14e54:	str	ip, [sp]
   14e58:	orr	r7, r7, #1
   14e5c:	ldr	ip, [sp, #80]	; 0x50
   14e60:	mov	r1, r9
   14e64:	str	r7, [sp, #4]
   14e68:	ldr	lr, [sp, #84]	; 0x54
   14e6c:	mov	r0, r5
   14e70:	str	r6, [sp, #8]
   14e74:	str	ip, [sp, #12]
   14e78:	str	lr, [sp, #16]
   14e7c:	bl	12558 <close@plt+0x1624>
   14e80:	cmp	r9, r0
   14e84:	bhi	14ee8 <close@plt+0x3fb4>
   14e88:	add	r9, r0, #1
   14e8c:	movw	r3, #33144	; 0x8178
   14e90:	movt	r3, #2
   14e94:	cmp	r5, r3
   14e98:	str	r9, [r4]
   14e9c:	beq	14ea8 <close@plt+0x3f74>
   14ea0:	mov	r0, r5
   14ea4:	bl	12204 <close@plt+0x12d0>
   14ea8:	mov	r0, r9
   14eac:	bl	165cc <close@plt+0x5698>
   14eb0:	mov	r1, r9
   14eb4:	ldr	ip, [sp, #40]	; 0x28
   14eb8:	mov	r3, fp
   14ebc:	mov	r2, sl
   14ec0:	mov	r5, r0
   14ec4:	ldr	r9, [sp, #80]	; 0x50
   14ec8:	ldr	lr, [sp, #84]	; 0x54
   14ecc:	str	r0, [r4, #4]
   14ed0:	str	ip, [sp]
   14ed4:	str	r7, [sp, #4]
   14ed8:	str	r6, [sp, #8]
   14edc:	str	r9, [sp, #12]
   14ee0:	str	lr, [sp, #16]
   14ee4:	bl	12558 <close@plt+0x1624>
   14ee8:	ldr	r3, [sp, #28]
   14eec:	mov	r0, r5
   14ef0:	str	r3, [r8]
   14ef4:	add	sp, sp, #92	; 0x5c
   14ef8:	ldrd	r4, [sp]
   14efc:	ldrd	r6, [sp, #8]
   14f00:	ldrd	r8, [sp, #16]
   14f04:	ldrd	sl, [sp, #24]
   14f08:	add	sp, sp, #32
   14f0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f10:	mov	r0, #8
   14f14:	mvn	r3, #-2147483648	; 0x80000000
   14f18:	add	r1, sp, #36	; 0x24
   14f1c:	str	r0, [sp]
   14f20:	mov	r0, #0
   14f24:	bl	16870 <close@plt+0x593c>
   14f28:	ldrd	r2, [r5, #8]
   14f2c:	mov	r4, r0
   14f30:	str	r0, [r5]
   14f34:	strd	r2, [r0]
   14f38:	b	14e18 <close@plt+0x3ee4>
   14f3c:	andeq	r8, r2, r8, ror r2
   14f40:	ldr	ip, [pc, #476]	; 15124 <close@plt+0x41f0>
   14f44:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14f48:	movw	r4, #33016	; 0x80f8
   14f4c:	movt	r4, #2
   14f50:	ldrd	r2, [ip, #8]
   14f54:	strd	r6, [sp, #8]
   14f58:	lsr	r7, r1, #5
   14f5c:	mov	r6, r0
   14f60:	strd	r8, [sp, #16]
   14f64:	str	lr, [sp, #32]
   14f68:	and	lr, r1, #31
   14f6c:	ldrd	r0, [ip]
   14f70:	strd	sl, [sp, #24]
   14f74:	sub	sp, sp, #84	; 0x54
   14f78:	add	r5, sp, #40	; 0x28
   14f7c:	strd	r0, [sp, #32]
   14f80:	strd	r2, [sp, #40]	; 0x28
   14f84:	ldrd	r0, [ip, #16]
   14f88:	ldrd	r2, [ip, #24]
   14f8c:	strd	r0, [sp, #48]	; 0x30
   14f90:	ldrd	r0, [ip, #32]
   14f94:	strd	r2, [sp, #56]	; 0x38
   14f98:	ldrd	r2, [ip, #40]	; 0x28
   14f9c:	strd	r0, [sp, #64]	; 0x40
   14fa0:	strd	r2, [sp, #72]	; 0x48
   14fa4:	ldr	r1, [r5, r7, lsl #2]
   14fa8:	mvn	r3, r1, lsr lr
   14fac:	and	r3, r3, #1
   14fb0:	eor	r1, r1, r3, lsl lr
   14fb4:	str	r1, [r5, r7, lsl #2]
   14fb8:	bl	10e50 <__errno_location@plt>
   14fbc:	mov	r9, r0
   14fc0:	ldr	sl, [r0]
   14fc4:	ldr	r2, [r4, #4]
   14fc8:	ldr	r7, [r4]
   14fcc:	cmp	r2, #0
   14fd0:	bgt	1502c <close@plt+0x40f8>
   14fd4:	add	r3, r4, #8
   14fd8:	str	r2, [sp, #28]
   14fdc:	rsb	r2, r2, #1
   14fe0:	cmp	r7, r3
   14fe4:	beq	150f8 <close@plt+0x41c4>
   14fe8:	mov	r1, #8
   14fec:	mov	r0, r7
   14ff0:	mvn	r3, #-2147483648	; 0x80000000
   14ff4:	str	r1, [sp]
   14ff8:	add	r1, sp, #28
   14ffc:	bl	16870 <close@plt+0x593c>
   15000:	mov	r7, r0
   15004:	str	r0, [r4]
   15008:	ldr	r0, [r4, #4]
   1500c:	mov	r1, #0
   15010:	ldr	r2, [sp, #28]
   15014:	sub	r2, r2, r0
   15018:	add	r0, r7, r0, lsl #3
   1501c:	lsl	r2, r2, #3
   15020:	bl	10e74 <memset@plt>
   15024:	ldr	r3, [sp, #28]
   15028:	str	r3, [r4, #4]
   1502c:	ldr	ip, [sp, #32]
   15030:	mvn	r3, #0
   15034:	mov	r2, r6
   15038:	ldr	r8, [sp, #36]	; 0x24
   1503c:	ldr	fp, [r7]
   15040:	ldr	r4, [r7, #4]
   15044:	str	ip, [sp]
   15048:	orr	r8, r8, #1
   1504c:	ldr	ip, [sp, #72]	; 0x48
   15050:	mov	r1, fp
   15054:	str	r8, [sp, #4]
   15058:	ldr	lr, [sp, #76]	; 0x4c
   1505c:	mov	r0, r4
   15060:	str	r5, [sp, #8]
   15064:	str	ip, [sp, #12]
   15068:	str	lr, [sp, #16]
   1506c:	bl	12558 <close@plt+0x1624>
   15070:	cmp	fp, r0
   15074:	bhi	150d4 <close@plt+0x41a0>
   15078:	add	fp, r0, #1
   1507c:	movw	r3, #33144	; 0x8178
   15080:	movt	r3, #2
   15084:	cmp	r4, r3
   15088:	str	fp, [r7]
   1508c:	beq	15098 <close@plt+0x4164>
   15090:	mov	r0, r4
   15094:	bl	12204 <close@plt+0x12d0>
   15098:	mov	r0, fp
   1509c:	bl	165cc <close@plt+0x5698>
   150a0:	ldr	r3, [sp, #32]
   150a4:	mov	r2, r6
   150a8:	mov	r1, fp
   150ac:	mov	r4, r0
   150b0:	ldr	lr, [sp, #72]	; 0x48
   150b4:	ldr	ip, [sp, #76]	; 0x4c
   150b8:	str	r0, [r7, #4]
   150bc:	stm	sp, {r3, r8}
   150c0:	mvn	r3, #0
   150c4:	str	r5, [sp, #8]
   150c8:	str	lr, [sp, #12]
   150cc:	str	ip, [sp, #16]
   150d0:	bl	12558 <close@plt+0x1624>
   150d4:	mov	r0, r4
   150d8:	str	sl, [r9]
   150dc:	add	sp, sp, #84	; 0x54
   150e0:	ldrd	r4, [sp]
   150e4:	ldrd	r6, [sp, #8]
   150e8:	ldrd	r8, [sp, #16]
   150ec:	ldrd	sl, [sp, #24]
   150f0:	add	sp, sp, #32
   150f4:	pop	{pc}		; (ldr pc, [sp], #4)
   150f8:	mov	r0, #8
   150fc:	mvn	r3, #-2147483648	; 0x80000000
   15100:	add	r1, sp, #28
   15104:	str	r0, [sp]
   15108:	mov	r0, #0
   1510c:	bl	16870 <close@plt+0x593c>
   15110:	ldrd	r2, [r4, #8]
   15114:	mov	r7, r0
   15118:	str	r0, [r4]
   1511c:	strd	r2, [r0]
   15120:	b	15008 <close@plt+0x40d4>
   15124:	andeq	r8, r2, r8, ror r2
   15128:	ldr	ip, [pc, #472]	; 15308 <close@plt+0x43d4>
   1512c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15130:	mov	r5, r0
   15134:	movw	r4, #33016	; 0x80f8
   15138:	movt	r4, #2
   1513c:	ldrd	r2, [ip]
   15140:	ldrd	r0, [ip, #8]
   15144:	strd	r6, [sp, #8]
   15148:	strd	r8, [sp, #16]
   1514c:	strd	sl, [sp, #24]
   15150:	str	lr, [sp, #32]
   15154:	sub	sp, sp, #84	; 0x54
   15158:	strd	r2, [sp, #32]
   1515c:	strd	r0, [sp, #40]	; 0x28
   15160:	ldr	r6, [sp, #44]	; 0x2c
   15164:	ldrd	r2, [ip, #16]
   15168:	ldrd	r0, [ip, #24]
   1516c:	mvn	lr, r6
   15170:	and	lr, lr, #67108864	; 0x4000000
   15174:	eor	lr, lr, r6
   15178:	ldrd	r6, [ip, #40]	; 0x28
   1517c:	strd	r2, [sp, #48]	; 0x30
   15180:	ldrd	r2, [ip, #32]
   15184:	str	lr, [sp, #44]	; 0x2c
   15188:	strd	r0, [sp, #56]	; 0x38
   1518c:	strd	r2, [sp, #64]	; 0x40
   15190:	strd	r6, [sp, #72]	; 0x48
   15194:	bl	10e50 <__errno_location@plt>
   15198:	mov	r8, r0
   1519c:	ldr	r9, [r0]
   151a0:	ldr	r2, [r4, #4]
   151a4:	ldr	r6, [r4]
   151a8:	cmp	r2, #0
   151ac:	bgt	15208 <close@plt+0x42d4>
   151b0:	add	r3, r4, #8
   151b4:	str	r2, [sp, #28]
   151b8:	rsb	r2, r2, #1
   151bc:	cmp	r6, r3
   151c0:	beq	152dc <close@plt+0x43a8>
   151c4:	mov	r1, #8
   151c8:	mov	r0, r6
   151cc:	mvn	r3, #-2147483648	; 0x80000000
   151d0:	str	r1, [sp]
   151d4:	add	r1, sp, #28
   151d8:	bl	16870 <close@plt+0x593c>
   151dc:	mov	r6, r0
   151e0:	str	r0, [r4]
   151e4:	ldr	r0, [r4, #4]
   151e8:	mov	r1, #0
   151ec:	ldr	r2, [sp, #28]
   151f0:	sub	r2, r2, r0
   151f4:	add	r0, r6, r0, lsl #3
   151f8:	lsl	r2, r2, #3
   151fc:	bl	10e74 <memset@plt>
   15200:	ldr	r3, [sp, #28]
   15204:	str	r3, [r4, #4]
   15208:	ldr	sl, [r6]
   1520c:	add	r0, sp, #40	; 0x28
   15210:	mvn	r3, #0
   15214:	mov	r2, r5
   15218:	ldr	r7, [sp, #36]	; 0x24
   1521c:	ldr	r4, [r6, #4]
   15220:	mov	r1, sl
   15224:	str	r0, [sp, #8]
   15228:	ldr	lr, [sp, #32]
   1522c:	orr	r7, r7, #1
   15230:	ldr	ip, [sp, #72]	; 0x48
   15234:	mov	r0, r4
   15238:	ldr	fp, [sp, #76]	; 0x4c
   1523c:	str	lr, [sp]
   15240:	str	r7, [sp, #4]
   15244:	str	ip, [sp, #12]
   15248:	str	fp, [sp, #16]
   1524c:	bl	12558 <close@plt+0x1624>
   15250:	cmp	sl, r0
   15254:	bhi	152b8 <close@plt+0x4384>
   15258:	add	sl, r0, #1
   1525c:	movw	r3, #33144	; 0x8178
   15260:	movt	r3, #2
   15264:	cmp	r4, r3
   15268:	str	sl, [r6]
   1526c:	beq	15278 <close@plt+0x4344>
   15270:	mov	r0, r4
   15274:	bl	12204 <close@plt+0x12d0>
   15278:	mov	r0, sl
   1527c:	bl	165cc <close@plt+0x5698>
   15280:	ldr	r3, [sp, #32]
   15284:	mov	r2, r5
   15288:	add	r5, sp, #40	; 0x28
   1528c:	mov	r1, sl
   15290:	mov	r4, r0
   15294:	ldr	lr, [sp, #72]	; 0x48
   15298:	ldr	ip, [sp, #76]	; 0x4c
   1529c:	str	r0, [r6, #4]
   152a0:	stm	sp, {r3, r7}
   152a4:	mvn	r3, #0
   152a8:	str	r5, [sp, #8]
   152ac:	str	lr, [sp, #12]
   152b0:	str	ip, [sp, #16]
   152b4:	bl	12558 <close@plt+0x1624>
   152b8:	mov	r0, r4
   152bc:	str	r9, [r8]
   152c0:	add	sp, sp, #84	; 0x54
   152c4:	ldrd	r4, [sp]
   152c8:	ldrd	r6, [sp, #8]
   152cc:	ldrd	r8, [sp, #16]
   152d0:	ldrd	sl, [sp, #24]
   152d4:	add	sp, sp, #32
   152d8:	pop	{pc}		; (ldr pc, [sp], #4)
   152dc:	mov	r0, #8
   152e0:	mvn	r3, #-2147483648	; 0x80000000
   152e4:	add	r1, sp, #28
   152e8:	str	r0, [sp]
   152ec:	mov	r0, #0
   152f0:	bl	16870 <close@plt+0x593c>
   152f4:	ldrd	r2, [r4, #8]
   152f8:	mov	r6, r0
   152fc:	str	r0, [r4]
   15300:	strd	r2, [r0]
   15304:	b	151e4 <close@plt+0x42b0>
   15308:	andeq	r8, r2, r8, ror r2
   1530c:	ldr	ip, [pc, #480]	; 154f4 <close@plt+0x45c0>
   15310:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15314:	mov	r5, r0
   15318:	movw	r4, #33016	; 0x80f8
   1531c:	movt	r4, #2
   15320:	ldrd	r2, [ip]
   15324:	strd	r6, [sp, #8]
   15328:	mov	r6, r1
   1532c:	ldrd	r0, [ip, #8]
   15330:	strd	r8, [sp, #16]
   15334:	strd	sl, [sp, #24]
   15338:	str	lr, [sp, #32]
   1533c:	sub	sp, sp, #84	; 0x54
   15340:	ldrd	r8, [ip, #40]	; 0x28
   15344:	strd	r2, [sp, #32]
   15348:	strd	r0, [sp, #40]	; 0x28
   1534c:	ldrd	r2, [ip, #16]
   15350:	ldr	r7, [sp, #44]	; 0x2c
   15354:	ldrd	r0, [ip, #24]
   15358:	strd	r2, [sp, #48]	; 0x30
   1535c:	ldrd	r2, [ip, #32]
   15360:	mvn	lr, r7
   15364:	and	lr, lr, #67108864	; 0x4000000
   15368:	eor	lr, lr, r7
   1536c:	str	lr, [sp, #44]	; 0x2c
   15370:	strd	r0, [sp, #56]	; 0x38
   15374:	strd	r2, [sp, #64]	; 0x40
   15378:	strd	r8, [sp, #72]	; 0x48
   1537c:	bl	10e50 <__errno_location@plt>
   15380:	mov	r9, r0
   15384:	ldr	sl, [r0]
   15388:	ldr	r2, [r4, #4]
   1538c:	ldr	r7, [r4]
   15390:	cmp	r2, #0
   15394:	bgt	153f0 <close@plt+0x44bc>
   15398:	add	r3, r4, #8
   1539c:	str	r2, [sp, #28]
   153a0:	rsb	r2, r2, #1
   153a4:	cmp	r7, r3
   153a8:	beq	154c8 <close@plt+0x4594>
   153ac:	mov	r1, #8
   153b0:	mov	r0, r7
   153b4:	mvn	r3, #-2147483648	; 0x80000000
   153b8:	str	r1, [sp]
   153bc:	add	r1, sp, #28
   153c0:	bl	16870 <close@plt+0x593c>
   153c4:	mov	r7, r0
   153c8:	str	r0, [r4]
   153cc:	ldr	r0, [r4, #4]
   153d0:	mov	r1, #0
   153d4:	ldr	r2, [sp, #28]
   153d8:	sub	r2, r2, r0
   153dc:	add	r0, r7, r0, lsl #3
   153e0:	lsl	r2, r2, #3
   153e4:	bl	10e74 <memset@plt>
   153e8:	ldr	r3, [sp, #28]
   153ec:	str	r3, [r4, #4]
   153f0:	ldr	ip, [sp, #32]
   153f4:	add	r0, sp, #40	; 0x28
   153f8:	mov	r3, r6
   153fc:	mov	r2, r5
   15400:	ldr	r8, [sp, #36]	; 0x24
   15404:	ldr	fp, [r7]
   15408:	ldr	r4, [r7, #4]
   1540c:	str	ip, [sp]
   15410:	orr	r8, r8, #1
   15414:	ldr	ip, [sp, #72]	; 0x48
   15418:	mov	r1, fp
   1541c:	str	r8, [sp, #4]
   15420:	ldr	lr, [sp, #76]	; 0x4c
   15424:	str	r0, [sp, #8]
   15428:	mov	r0, r4
   1542c:	str	ip, [sp, #12]
   15430:	str	lr, [sp, #16]
   15434:	bl	12558 <close@plt+0x1624>
   15438:	cmp	fp, r0
   1543c:	bhi	154a4 <close@plt+0x4570>
   15440:	add	fp, r0, #1
   15444:	movw	r3, #33144	; 0x8178
   15448:	movt	r3, #2
   1544c:	cmp	r4, r3
   15450:	str	fp, [r7]
   15454:	beq	15460 <close@plt+0x452c>
   15458:	mov	r0, r4
   1545c:	bl	12204 <close@plt+0x12d0>
   15460:	mov	r0, fp
   15464:	bl	165cc <close@plt+0x5698>
   15468:	ldr	lr, [sp, #32]
   1546c:	mov	r2, r5
   15470:	mov	r3, r6
   15474:	mov	r1, fp
   15478:	mov	r4, r0
   1547c:	ldr	r5, [sp, #72]	; 0x48
   15480:	ldr	ip, [sp, #76]	; 0x4c
   15484:	str	r0, [r7, #4]
   15488:	str	lr, [sp]
   1548c:	add	lr, sp, #40	; 0x28
   15490:	str	r8, [sp, #4]
   15494:	str	lr, [sp, #8]
   15498:	str	r5, [sp, #12]
   1549c:	str	ip, [sp, #16]
   154a0:	bl	12558 <close@plt+0x1624>
   154a4:	mov	r0, r4
   154a8:	str	sl, [r9]
   154ac:	add	sp, sp, #84	; 0x54
   154b0:	ldrd	r4, [sp]
   154b4:	ldrd	r6, [sp, #8]
   154b8:	ldrd	r8, [sp, #16]
   154bc:	ldrd	sl, [sp, #24]
   154c0:	add	sp, sp, #32
   154c4:	pop	{pc}		; (ldr pc, [sp], #4)
   154c8:	mov	r0, #8
   154cc:	mvn	r3, #-2147483648	; 0x80000000
   154d0:	add	r1, sp, #28
   154d4:	str	r0, [sp]
   154d8:	mov	r0, #0
   154dc:	bl	16870 <close@plt+0x593c>
   154e0:	ldrd	r2, [r4, #8]
   154e4:	mov	r7, r0
   154e8:	str	r0, [r4]
   154ec:	strd	r2, [r0]
   154f0:	b	153cc <close@plt+0x4498>
   154f4:	andeq	r8, r2, r8, ror r2
   154f8:	strd	r4, [sp, #-12]!
   154fc:	mov	r4, #0
   15500:	mov	r5, #0
   15504:	str	lr, [sp, #8]
   15508:	sub	sp, sp, #100	; 0x64
   1550c:	cmp	r1, #10
   15510:	strd	r4, [sp]
   15514:	strd	r4, [sp, #8]
   15518:	strd	r4, [sp, #16]
   1551c:	strd	r4, [sp, #24]
   15520:	strd	r4, [sp, #32]
   15524:	strd	r4, [sp, #40]	; 0x28
   15528:	beq	15558 <close@plt+0x4624>
   1552c:	mov	ip, #67108864	; 0x4000000
   15530:	mov	r3, sp
   15534:	str	r1, [sp]
   15538:	mov	r1, r2
   1553c:	mvn	r2, #0
   15540:	str	ip, [sp, #12]
   15544:	bl	13f44 <close@plt+0x3010>
   15548:	add	sp, sp, #100	; 0x64
   1554c:	ldrd	r4, [sp]
   15550:	add	sp, sp, #8
   15554:	pop	{pc}		; (ldr pc, [sp], #4)
   15558:	bl	10f28 <abort@plt>
   1555c:	ldr	ip, [pc, #156]	; 15600 <close@plt+0x46cc>
   15560:	cmp	r2, #0
   15564:	cmpne	r1, #0
   15568:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1556c:	strd	r6, [sp, #8]
   15570:	mov	r6, r2
   15574:	str	r8, [sp, #16]
   15578:	mov	r8, r3
   1557c:	strd	sl, [sp, #20]
   15580:	ldrd	r4, [ip]
   15584:	str	lr, [sp, #28]
   15588:	sub	sp, sp, #48	; 0x30
   1558c:	mov	lr, #10
   15590:	ldrd	r2, [ip, #8]
   15594:	ldrd	sl, [ip, #16]
   15598:	strd	r4, [sp]
   1559c:	ldrd	r4, [ip, #32]
   155a0:	str	lr, [sp]
   155a4:	strd	r2, [sp, #8]
   155a8:	strd	sl, [sp, #16]
   155ac:	ldrd	r2, [ip, #24]
   155b0:	ldrd	sl, [ip, #40]	; 0x28
   155b4:	strd	r2, [sp, #24]
   155b8:	strd	r4, [sp, #32]
   155bc:	strd	sl, [sp, #40]	; 0x28
   155c0:	beq	155fc <close@plt+0x46c8>
   155c4:	mov	r7, r1
   155c8:	mov	r3, sp
   155cc:	mov	r1, r8
   155d0:	mvn	r2, #0
   155d4:	str	r7, [sp, #40]	; 0x28
   155d8:	str	r6, [sp, #44]	; 0x2c
   155dc:	bl	13f44 <close@plt+0x3010>
   155e0:	add	sp, sp, #48	; 0x30
   155e4:	ldrd	r4, [sp]
   155e8:	ldrd	r6, [sp, #8]
   155ec:	ldr	r8, [sp, #16]
   155f0:	ldrd	sl, [sp, #20]
   155f4:	add	sp, sp, #28
   155f8:	pop	{pc}		; (ldr pc, [sp], #4)
   155fc:	bl	10f28 <abort@plt>
   15600:	andeq	r8, r2, r8, ror r2
   15604:	ldr	ip, [pc, #156]	; 156a8 <close@plt+0x4774>
   15608:	cmp	r2, #0
   1560c:	cmpne	r1, #0
   15610:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15614:	strd	r6, [sp, #8]
   15618:	mov	r6, r2
   1561c:	str	r8, [sp, #16]
   15620:	mov	r8, r3
   15624:	strd	sl, [sp, #20]
   15628:	ldrd	r4, [ip]
   1562c:	str	lr, [sp, #28]
   15630:	sub	sp, sp, #48	; 0x30
   15634:	mov	lr, #10
   15638:	ldrd	r2, [ip, #8]
   1563c:	ldrd	sl, [ip, #16]
   15640:	strd	r4, [sp]
   15644:	ldrd	r4, [ip, #32]
   15648:	str	lr, [sp]
   1564c:	strd	r2, [sp, #8]
   15650:	strd	sl, [sp, #16]
   15654:	ldrd	r2, [ip, #24]
   15658:	ldrd	sl, [ip, #40]	; 0x28
   1565c:	strd	r2, [sp, #24]
   15660:	strd	r4, [sp, #32]
   15664:	strd	sl, [sp, #40]	; 0x28
   15668:	beq	156a4 <close@plt+0x4770>
   1566c:	ldr	r2, [sp, #80]	; 0x50
   15670:	mov	r7, r1
   15674:	mov	r3, sp
   15678:	mov	r1, r8
   1567c:	str	r7, [sp, #40]	; 0x28
   15680:	str	r6, [sp, #44]	; 0x2c
   15684:	bl	13f44 <close@plt+0x3010>
   15688:	add	sp, sp, #48	; 0x30
   1568c:	ldrd	r4, [sp]
   15690:	ldrd	r6, [sp, #8]
   15694:	ldr	r8, [sp, #16]
   15698:	ldrd	sl, [sp, #20]
   1569c:	add	sp, sp, #28
   156a0:	pop	{pc}		; (ldr pc, [sp], #4)
   156a4:	bl	10f28 <abort@plt>
   156a8:	andeq	r8, r2, r8, ror r2
   156ac:	ldr	ip, [pc, #512]	; 158b4 <close@plt+0x4980>
   156b0:	cmp	r0, #0
   156b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   156b8:	ldrd	r4, [ip, #16]
   156bc:	strd	r6, [sp, #8]
   156c0:	clz	r6, r1
   156c4:	mov	r7, r1
   156c8:	strd	r8, [sp, #16]
   156cc:	mov	r8, r0
   156d0:	lsr	r6, r6, #5
   156d4:	strd	sl, [sp, #24]
   156d8:	mov	fp, r2
   156dc:	mov	sl, #10
   156e0:	ldrd	r2, [ip]
   156e4:	moveq	r6, #1
   156e8:	str	lr, [sp, #32]
   156ec:	sub	sp, sp, #92	; 0x5c
   156f0:	cmp	r6, #0
   156f4:	ldrd	r0, [ip, #8]
   156f8:	strd	r2, [sp, #40]	; 0x28
   156fc:	strd	r4, [sp, #56]	; 0x38
   15700:	ldrd	r2, [ip, #24]
   15704:	strd	r0, [sp, #48]	; 0x30
   15708:	ldrd	r0, [ip, #32]
   1570c:	str	sl, [sp, #40]	; 0x28
   15710:	ldrd	r4, [ip, #40]	; 0x28
   15714:	strd	r2, [sp, #64]	; 0x40
   15718:	strd	r0, [sp, #72]	; 0x48
   1571c:	strd	r4, [sp, #80]	; 0x50
   15720:	bne	158b0 <close@plt+0x497c>
   15724:	movw	r5, #33016	; 0x80f8
   15728:	movt	r5, #2
   1572c:	str	r8, [sp, #80]	; 0x50
   15730:	str	r7, [sp, #84]	; 0x54
   15734:	bl	10e50 <__errno_location@plt>
   15738:	ldr	r3, [r0]
   1573c:	mov	r9, r0
   15740:	ldr	r2, [r5, #4]
   15744:	ldr	r4, [r5]
   15748:	str	r3, [sp, #28]
   1574c:	cmp	r2, #0
   15750:	movgt	r1, sl
   15754:	bgt	157bc <close@plt+0x4888>
   15758:	add	r3, r5, #8
   1575c:	str	r2, [sp, #36]	; 0x24
   15760:	rsb	r2, r2, #1
   15764:	cmp	r4, r3
   15768:	beq	15884 <close@plt+0x4950>
   1576c:	mov	r1, #8
   15770:	mov	r0, r4
   15774:	mvn	r3, #-2147483648	; 0x80000000
   15778:	str	r1, [sp]
   1577c:	add	r1, sp, #36	; 0x24
   15780:	bl	16870 <close@plt+0x593c>
   15784:	mov	r4, r0
   15788:	str	r0, [r5]
   1578c:	ldr	r0, [r5, #4]
   15790:	mov	r1, #0
   15794:	ldr	r2, [sp, #36]	; 0x24
   15798:	sub	r2, r2, r0
   1579c:	add	r0, r4, r0, lsl #3
   157a0:	lsl	r2, r2, #3
   157a4:	bl	10e74 <memset@plt>
   157a8:	ldr	r3, [sp, #36]	; 0x24
   157ac:	ldr	r1, [sp, #40]	; 0x28
   157b0:	ldr	r8, [sp, #80]	; 0x50
   157b4:	str	r3, [r5, #4]
   157b8:	ldr	r7, [sp, #84]	; 0x54
   157bc:	mvn	r3, #0
   157c0:	mov	r2, fp
   157c4:	ldr	r6, [sp, #44]	; 0x2c
   157c8:	ldr	sl, [r4]
   157cc:	ldr	r5, [r4, #4]
   157d0:	orr	r6, r6, #1
   157d4:	stm	sp, {r1, r6}
   157d8:	add	r1, sp, #48	; 0x30
   157dc:	str	r8, [sp, #12]
   157e0:	mov	r0, r5
   157e4:	str	r1, [sp, #8]
   157e8:	mov	r1, sl
   157ec:	str	r7, [sp, #16]
   157f0:	bl	12558 <close@plt+0x1624>
   157f4:	cmp	sl, r0
   157f8:	bhi	1585c <close@plt+0x4928>
   157fc:	add	r7, r0, #1
   15800:	movw	r3, #33144	; 0x8178
   15804:	movt	r3, #2
   15808:	cmp	r5, r3
   1580c:	str	r7, [r4]
   15810:	beq	1581c <close@plt+0x48e8>
   15814:	mov	r0, r5
   15818:	bl	12204 <close@plt+0x12d0>
   1581c:	mov	r0, r7
   15820:	bl	165cc <close@plt+0x5698>
   15824:	ldr	r3, [sp, #40]	; 0x28
   15828:	mov	r2, fp
   1582c:	mov	r1, r7
   15830:	mov	r5, r0
   15834:	ldr	lr, [sp, #80]	; 0x50
   15838:	ldr	ip, [sp, #84]	; 0x54
   1583c:	str	r0, [r4, #4]
   15840:	add	r4, sp, #48	; 0x30
   15844:	stm	sp, {r3, r6}
   15848:	mvn	r3, #0
   1584c:	str	r4, [sp, #8]
   15850:	str	lr, [sp, #12]
   15854:	str	ip, [sp, #16]
   15858:	bl	12558 <close@plt+0x1624>
   1585c:	ldr	r3, [sp, #28]
   15860:	mov	r0, r5
   15864:	str	r3, [r9]
   15868:	add	sp, sp, #92	; 0x5c
   1586c:	ldrd	r4, [sp]
   15870:	ldrd	r6, [sp, #8]
   15874:	ldrd	r8, [sp, #16]
   15878:	ldrd	sl, [sp, #24]
   1587c:	add	sp, sp, #32
   15880:	pop	{pc}		; (ldr pc, [sp], #4)
   15884:	mov	r1, #8
   15888:	mvn	r3, #-2147483648	; 0x80000000
   1588c:	mov	r0, r6
   15890:	str	r1, [sp]
   15894:	add	r1, sp, #36	; 0x24
   15898:	bl	16870 <close@plt+0x593c>
   1589c:	ldrd	r2, [r5, #8]
   158a0:	mov	r4, r0
   158a4:	str	r0, [r5]
   158a8:	strd	r2, [r0]
   158ac:	b	1578c <close@plt+0x4858>
   158b0:	bl	10f28 <abort@plt>
   158b4:	andeq	r8, r2, r8, ror r2
   158b8:	ldr	ip, [pc, #536]	; 15ad8 <close@plt+0x4ba4>
   158bc:	cmp	r0, #0
   158c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   158c4:	ldrd	r4, [ip, #16]
   158c8:	strd	r6, [sp, #8]
   158cc:	mov	r6, r1
   158d0:	mov	r7, r0
   158d4:	strd	r8, [sp, #16]
   158d8:	mov	r9, #10
   158dc:	strd	sl, [sp, #24]
   158e0:	mov	sl, r2
   158e4:	mov	fp, r3
   158e8:	str	lr, [sp, #32]
   158ec:	clz	lr, r1
   158f0:	sub	sp, sp, #92	; 0x5c
   158f4:	ldrd	r2, [ip]
   158f8:	lsr	lr, lr, #5
   158fc:	moveq	lr, #1
   15900:	ldrd	r0, [ip, #8]
   15904:	cmp	lr, #0
   15908:	strd	r4, [sp, #56]	; 0x38
   1590c:	ldrd	r4, [ip, #40]	; 0x28
   15910:	str	lr, [sp, #28]
   15914:	strd	r2, [sp, #40]	; 0x28
   15918:	ldrd	r2, [ip, #24]
   1591c:	strd	r0, [sp, #48]	; 0x30
   15920:	ldrd	r0, [ip, #32]
   15924:	str	r9, [sp, #40]	; 0x28
   15928:	strd	r2, [sp, #64]	; 0x40
   1592c:	strd	r4, [sp, #80]	; 0x50
   15930:	strd	r0, [sp, #72]	; 0x48
   15934:	bne	15ad4 <close@plt+0x4ba0>
   15938:	movw	r5, #33016	; 0x80f8
   1593c:	movt	r5, #2
   15940:	str	r7, [sp, #80]	; 0x50
   15944:	str	r6, [sp, #84]	; 0x54
   15948:	bl	10e50 <__errno_location@plt>
   1594c:	ldr	r3, [r0]
   15950:	mov	r8, r0
   15954:	ldr	r2, [r5, #4]
   15958:	ldr	r4, [r5]
   1595c:	str	r3, [sp, #24]
   15960:	cmp	r2, #0
   15964:	movgt	r1, r9
   15968:	bgt	159d0 <close@plt+0x4a9c>
   1596c:	add	r3, r5, #8
   15970:	str	r2, [sp, #36]	; 0x24
   15974:	rsb	r2, r2, #1
   15978:	cmp	r4, r3
   1597c:	beq	15aa8 <close@plt+0x4b74>
   15980:	mov	r1, #8
   15984:	mov	r0, r4
   15988:	mvn	r3, #-2147483648	; 0x80000000
   1598c:	str	r1, [sp]
   15990:	add	r1, sp, #36	; 0x24
   15994:	bl	16870 <close@plt+0x593c>
   15998:	mov	r4, r0
   1599c:	str	r0, [r5]
   159a0:	ldr	r0, [r5, #4]
   159a4:	mov	r1, #0
   159a8:	ldr	r2, [sp, #36]	; 0x24
   159ac:	sub	r2, r2, r0
   159b0:	add	r0, r4, r0, lsl #3
   159b4:	lsl	r2, r2, #3
   159b8:	bl	10e74 <memset@plt>
   159bc:	ldr	r3, [sp, #36]	; 0x24
   159c0:	ldr	r1, [sp, #40]	; 0x28
   159c4:	ldr	r7, [sp, #80]	; 0x50
   159c8:	str	r3, [r5, #4]
   159cc:	ldr	r6, [sp, #84]	; 0x54
   159d0:	mov	r3, fp
   159d4:	mov	r2, sl
   159d8:	ldr	r0, [sp, #44]	; 0x2c
   159dc:	ldr	r9, [r4]
   159e0:	ldr	r5, [r4, #4]
   159e4:	orr	r0, r0, #1
   159e8:	str	r1, [sp]
   159ec:	add	r1, sp, #48	; 0x30
   159f0:	str	r0, [sp, #4]
   159f4:	str	r1, [sp, #8]
   159f8:	mov	r1, r9
   159fc:	str	r7, [sp, #12]
   15a00:	str	r6, [sp, #16]
   15a04:	str	r0, [sp, #28]
   15a08:	mov	r0, r5
   15a0c:	bl	12558 <close@plt+0x1624>
   15a10:	cmp	r9, r0
   15a14:	bhi	15a80 <close@plt+0x4b4c>
   15a18:	add	r6, r0, #1
   15a1c:	movw	r3, #33144	; 0x8178
   15a20:	movt	r3, #2
   15a24:	cmp	r5, r3
   15a28:	str	r6, [r4]
   15a2c:	beq	15a38 <close@plt+0x4b04>
   15a30:	mov	r0, r5
   15a34:	bl	12204 <close@plt+0x12d0>
   15a38:	mov	r0, r6
   15a3c:	bl	165cc <close@plt+0x5698>
   15a40:	ldr	lr, [sp, #40]	; 0x28
   15a44:	mov	r1, r6
   15a48:	mov	r3, fp
   15a4c:	mov	r2, sl
   15a50:	mov	r5, r0
   15a54:	ldr	r6, [sp, #80]	; 0x50
   15a58:	ldr	ip, [sp, #84]	; 0x54
   15a5c:	str	r0, [r4, #4]
   15a60:	str	lr, [sp]
   15a64:	ldr	lr, [sp, #28]
   15a68:	str	lr, [sp, #4]
   15a6c:	add	lr, sp, #48	; 0x30
   15a70:	str	r6, [sp, #12]
   15a74:	str	lr, [sp, #8]
   15a78:	str	ip, [sp, #16]
   15a7c:	bl	12558 <close@plt+0x1624>
   15a80:	ldr	r3, [sp, #24]
   15a84:	mov	r0, r5
   15a88:	str	r3, [r8]
   15a8c:	add	sp, sp, #92	; 0x5c
   15a90:	ldrd	r4, [sp]
   15a94:	ldrd	r6, [sp, #8]
   15a98:	ldrd	r8, [sp, #16]
   15a9c:	ldrd	sl, [sp, #24]
   15aa0:	add	sp, sp, #32
   15aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa8:	mov	r1, #8
   15aac:	mvn	r3, #-2147483648	; 0x80000000
   15ab0:	ldr	r0, [sp, #28]
   15ab4:	str	r1, [sp]
   15ab8:	add	r1, sp, #36	; 0x24
   15abc:	bl	16870 <close@plt+0x593c>
   15ac0:	ldrd	r2, [r5, #8]
   15ac4:	mov	r4, r0
   15ac8:	str	r0, [r5]
   15acc:	strd	r2, [r0]
   15ad0:	b	159a0 <close@plt+0x4a6c>
   15ad4:	bl	10f28 <abort@plt>
   15ad8:	andeq	r8, r2, r8, ror r2
   15adc:	ldr	r3, [pc]	; 15ae4 <close@plt+0x4bb0>
   15ae0:	b	13f44 <close@plt+0x3010>
   15ae4:	andeq	r8, r2, r8, lsl #2
   15ae8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15aec:	movw	r4, #33016	; 0x80f8
   15af0:	movt	r4, #2
   15af4:	strd	r6, [sp, #8]
   15af8:	strd	r8, [sp, #16]
   15afc:	strd	sl, [sp, #24]
   15b00:	mov	sl, r0
   15b04:	mov	fp, r1
   15b08:	str	lr, [sp, #32]
   15b0c:	sub	sp, sp, #44	; 0x2c
   15b10:	bl	10e50 <__errno_location@plt>
   15b14:	ldr	r3, [r0]
   15b18:	mov	r8, r0
   15b1c:	ldr	r2, [r4, #4]
   15b20:	ldr	r5, [r4]
   15b24:	str	r3, [sp, #28]
   15b28:	cmp	r2, #0
   15b2c:	bgt	15b88 <close@plt+0x4c54>
   15b30:	add	r3, r4, #8
   15b34:	str	r2, [sp, #36]	; 0x24
   15b38:	rsb	r2, r2, #1
   15b3c:	cmp	r5, r3
   15b40:	beq	15c64 <close@plt+0x4d30>
   15b44:	mov	r1, #8
   15b48:	mov	r0, r5
   15b4c:	mvn	r3, #-2147483648	; 0x80000000
   15b50:	str	r1, [sp]
   15b54:	add	r1, sp, #36	; 0x24
   15b58:	bl	16870 <close@plt+0x593c>
   15b5c:	mov	r5, r0
   15b60:	str	r0, [r4]
   15b64:	ldr	r0, [r4, #4]
   15b68:	mov	r1, #0
   15b6c:	ldr	r2, [sp, #36]	; 0x24
   15b70:	sub	r2, r2, r0
   15b74:	add	r0, r5, r0, lsl #3
   15b78:	lsl	r2, r2, #3
   15b7c:	bl	10e74 <memset@plt>
   15b80:	ldr	r3, [sp, #36]	; 0x24
   15b84:	str	r3, [r4, #4]
   15b88:	ldr	ip, [r4, #16]
   15b8c:	mov	r3, fp
   15b90:	mov	r2, sl
   15b94:	ldr	r7, [r4, #20]
   15b98:	ldr	r0, [pc, #240]	; 15c90 <close@plt+0x4d5c>
   15b9c:	ldr	r9, [r5]
   15ba0:	orr	r7, r7, #1
   15ba4:	ldr	r6, [r5, #4]
   15ba8:	str	ip, [sp]
   15bac:	ldr	ip, [r4, #56]	; 0x38
   15bb0:	mov	r1, r9
   15bb4:	str	r7, [sp, #4]
   15bb8:	ldr	lr, [r4, #60]	; 0x3c
   15bbc:	str	r0, [sp, #8]
   15bc0:	mov	r0, r6
   15bc4:	str	ip, [sp, #12]
   15bc8:	str	lr, [sp, #16]
   15bcc:	bl	12558 <close@plt+0x1624>
   15bd0:	cmp	r9, r0
   15bd4:	bhi	15c3c <close@plt+0x4d08>
   15bd8:	add	r9, r0, #1
   15bdc:	movw	r3, #33144	; 0x8178
   15be0:	movt	r3, #2
   15be4:	cmp	r6, r3
   15be8:	str	r9, [r5]
   15bec:	beq	15bf8 <close@plt+0x4cc4>
   15bf0:	mov	r0, r6
   15bf4:	bl	12204 <close@plt+0x12d0>
   15bf8:	mov	r0, r9
   15bfc:	bl	165cc <close@plt+0x5698>
   15c00:	ldr	ip, [r4, #16]
   15c04:	mov	r1, r9
   15c08:	mov	r3, fp
   15c0c:	mov	r2, sl
   15c10:	mov	r6, r0
   15c14:	ldr	r9, [r4, #56]	; 0x38
   15c18:	ldr	lr, [r4, #60]	; 0x3c
   15c1c:	str	r0, [r5, #4]
   15c20:	str	ip, [sp]
   15c24:	ldr	ip, [pc, #100]	; 15c90 <close@plt+0x4d5c>
   15c28:	str	r7, [sp, #4]
   15c2c:	str	ip, [sp, #8]
   15c30:	str	r9, [sp, #12]
   15c34:	str	lr, [sp, #16]
   15c38:	bl	12558 <close@plt+0x1624>
   15c3c:	ldr	r3, [sp, #28]
   15c40:	mov	r0, r6
   15c44:	str	r3, [r8]
   15c48:	add	sp, sp, #44	; 0x2c
   15c4c:	ldrd	r4, [sp]
   15c50:	ldrd	r6, [sp, #8]
   15c54:	ldrd	r8, [sp, #16]
   15c58:	ldrd	sl, [sp, #24]
   15c5c:	add	sp, sp, #32
   15c60:	pop	{pc}		; (ldr pc, [sp], #4)
   15c64:	mov	r0, #8
   15c68:	mvn	r3, #-2147483648	; 0x80000000
   15c6c:	add	r1, sp, #36	; 0x24
   15c70:	str	r0, [sp]
   15c74:	mov	r0, #0
   15c78:	bl	16870 <close@plt+0x593c>
   15c7c:	ldrd	r2, [r4, #8]
   15c80:	mov	r5, r0
   15c84:	str	r0, [r4]
   15c88:	strd	r2, [r0]
   15c8c:	b	15b64 <close@plt+0x4c30>
   15c90:	andeq	r8, r2, r0, lsl r1
   15c94:	ldr	r3, [pc, #4]	; 15ca0 <close@plt+0x4d6c>
   15c98:	mvn	r2, #0
   15c9c:	b	13f44 <close@plt+0x3010>
   15ca0:	andeq	r8, r2, r8, lsl #2
   15ca4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15ca8:	movw	r4, #33016	; 0x80f8
   15cac:	movt	r4, #2
   15cb0:	strd	r6, [sp, #8]
   15cb4:	strd	r8, [sp, #16]
   15cb8:	strd	sl, [sp, #24]
   15cbc:	mov	sl, r0
   15cc0:	str	lr, [sp, #32]
   15cc4:	sub	sp, sp, #44	; 0x2c
   15cc8:	bl	10e50 <__errno_location@plt>
   15ccc:	ldr	r3, [r0]
   15cd0:	mov	r8, r0
   15cd4:	ldr	r2, [r4, #4]
   15cd8:	ldr	r5, [r4]
   15cdc:	str	r3, [sp, #28]
   15ce0:	cmp	r2, #0
   15ce4:	bgt	15d40 <close@plt+0x4e0c>
   15ce8:	add	r3, r4, #8
   15cec:	str	r2, [sp, #36]	; 0x24
   15cf0:	rsb	r2, r2, #1
   15cf4:	cmp	r5, r3
   15cf8:	beq	15e08 <close@plt+0x4ed4>
   15cfc:	mov	r1, #8
   15d00:	mov	r0, r5
   15d04:	mvn	r3, #-2147483648	; 0x80000000
   15d08:	str	r1, [sp]
   15d0c:	add	r1, sp, #36	; 0x24
   15d10:	bl	16870 <close@plt+0x593c>
   15d14:	mov	r5, r0
   15d18:	str	r0, [r4]
   15d1c:	ldr	r0, [r4, #4]
   15d20:	mov	r1, #0
   15d24:	ldr	r2, [sp, #36]	; 0x24
   15d28:	sub	r2, r2, r0
   15d2c:	add	r0, r5, r0, lsl #3
   15d30:	lsl	r2, r2, #3
   15d34:	bl	10e74 <memset@plt>
   15d38:	ldr	r3, [sp, #36]	; 0x24
   15d3c:	str	r3, [r4, #4]
   15d40:	ldr	ip, [r4, #16]
   15d44:	mvn	r3, #0
   15d48:	mov	r2, sl
   15d4c:	ldr	r7, [r4, #20]
   15d50:	ldr	fp, [pc, #220]	; 15e34 <close@plt+0x4f00>
   15d54:	ldr	r9, [r5]
   15d58:	orr	r7, r7, #1
   15d5c:	ldr	r6, [r5, #4]
   15d60:	str	ip, [sp]
   15d64:	ldr	ip, [r4, #56]	; 0x38
   15d68:	mov	r1, r9
   15d6c:	stmib	sp, {r7, fp}
   15d70:	ldr	lr, [r4, #60]	; 0x3c
   15d74:	mov	r0, r6
   15d78:	str	ip, [sp, #12]
   15d7c:	str	lr, [sp, #16]
   15d80:	bl	12558 <close@plt+0x1624>
   15d84:	cmp	r9, r0
   15d88:	bhi	15de0 <close@plt+0x4eac>
   15d8c:	add	r9, r0, #1
   15d90:	movw	r3, #33144	; 0x8178
   15d94:	movt	r3, #2
   15d98:	cmp	r6, r3
   15d9c:	str	r9, [r5]
   15da0:	beq	15dac <close@plt+0x4e78>
   15da4:	mov	r0, r6
   15da8:	bl	12204 <close@plt+0x12d0>
   15dac:	mov	r0, r9
   15db0:	bl	165cc <close@plt+0x5698>
   15db4:	ldr	r3, [r4, #16]
   15db8:	mov	r2, sl
   15dbc:	mov	r1, r9
   15dc0:	mov	r6, r0
   15dc4:	ldr	lr, [r4, #56]	; 0x38
   15dc8:	ldr	ip, [r4, #60]	; 0x3c
   15dcc:	str	r0, [r5, #4]
   15dd0:	stm	sp, {r3, r7, fp, lr}
   15dd4:	mvn	r3, #0
   15dd8:	str	ip, [sp, #16]
   15ddc:	bl	12558 <close@plt+0x1624>
   15de0:	ldr	r3, [sp, #28]
   15de4:	mov	r0, r6
   15de8:	str	r3, [r8]
   15dec:	add	sp, sp, #44	; 0x2c
   15df0:	ldrd	r4, [sp]
   15df4:	ldrd	r6, [sp, #8]
   15df8:	ldrd	r8, [sp, #16]
   15dfc:	ldrd	sl, [sp, #24]
   15e00:	add	sp, sp, #32
   15e04:	pop	{pc}		; (ldr pc, [sp], #4)
   15e08:	mov	r0, #8
   15e0c:	mvn	r3, #-2147483648	; 0x80000000
   15e10:	add	r1, sp, #36	; 0x24
   15e14:	str	r0, [sp]
   15e18:	mov	r0, #0
   15e1c:	bl	16870 <close@plt+0x593c>
   15e20:	ldrd	r2, [r4, #8]
   15e24:	mov	r5, r0
   15e28:	str	r0, [r4]
   15e2c:	strd	r2, [r0]
   15e30:	b	15d1c <close@plt+0x4de8>
   15e34:	andeq	r8, r2, r0, lsl r1
   15e38:	mov	r2, #3
   15e3c:	mov	r1, #0
   15e40:	b	16d10 <close@plt+0x5ddc>
   15e44:	cmp	r1, #0
   15e48:	strd	r4, [sp, #-16]!
   15e4c:	mov	ip, r3
   15e50:	str	r6, [sp, #8]
   15e54:	mov	r4, r0
   15e58:	str	lr, [sp, #12]
   15e5c:	sub	sp, sp, #32
   15e60:	ldr	r5, [sp, #48]	; 0x30
   15e64:	ldr	r6, [sp, #52]	; 0x34
   15e68:	beq	15fac <close@plt+0x5078>
   15e6c:	mov	r3, r1
   15e70:	mov	r1, #1
   15e74:	stm	sp, {r2, ip}
   15e78:	movw	r2, #31300	; 0x7a44
   15e7c:	movt	r2, #1
   15e80:	bl	10e98 <__fprintf_chk@plt>
   15e84:	mov	r2, #5
   15e88:	movw	r1, #31320	; 0x7a58
   15e8c:	movt	r1, #1
   15e90:	mov	r0, #0
   15e94:	bl	10d78 <dcgettext@plt>
   15e98:	movw	ip, #2022	; 0x7e6
   15e9c:	mov	r3, r0
   15ea0:	mov	r1, #1
   15ea4:	movw	r2, #32048	; 0x7d30
   15ea8:	movt	r2, #1
   15eac:	mov	r0, r4
   15eb0:	str	ip, [sp]
   15eb4:	bl	10e98 <__fprintf_chk@plt>
   15eb8:	mov	r1, r4
   15ebc:	mov	r0, #10
   15ec0:	bl	10d6c <fputc_unlocked@plt>
   15ec4:	mov	r2, #5
   15ec8:	movw	r1, #31324	; 0x7a5c
   15ecc:	movt	r1, #1
   15ed0:	mov	r0, #0
   15ed4:	bl	10d78 <dcgettext@plt>
   15ed8:	mov	r2, r0
   15edc:	mov	r1, #1
   15ee0:	movw	r3, #31496	; 0x7b08
   15ee4:	movt	r3, #1
   15ee8:	mov	r0, r4
   15eec:	bl	10e98 <__fprintf_chk@plt>
   15ef0:	mov	r1, r4
   15ef4:	mov	r0, #10
   15ef8:	bl	10d6c <fputc_unlocked@plt>
   15efc:	cmp	r6, #9
   15f00:	ldrls	pc, [pc, r6, lsl #2]
   15f04:	b	16218 <close@plt+0x52e4>
   15f08:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15f0c:	andeq	r5, r1, r8, asr #31
   15f10:	andeq	r6, r1, r4
   15f14:	andeq	r6, r1, r4, asr #32
   15f18:	andeq	r6, r1, ip, lsl #1
   15f1c:	andeq	r6, r1, r4, asr #1
   15f20:	andeq	r6, r1, ip, lsl #2
   15f24:	andeq	r6, r1, r0, ror #2
   15f28:			; <UNDEFINED> instruction: 0x000161b8
   15f2c:	andeq	r5, r1, r0, lsr pc
   15f30:	movw	r1, #31800	; 0x7c38
   15f34:	movt	r1, #1
   15f38:	mov	r2, #5
   15f3c:	mov	r0, #0
   15f40:	bl	10d78 <dcgettext@plt>
   15f44:	ldr	lr, [r5, #4]
   15f48:	mov	r2, r0
   15f4c:	mov	r1, #1
   15f50:	mov	r0, r4
   15f54:	ldr	r3, [r5, #8]
   15f58:	ldr	ip, [r5, #32]
   15f5c:	str	lr, [sp]
   15f60:	ldr	lr, [r5, #12]
   15f64:	str	ip, [sp, #28]
   15f68:	ldr	ip, [r5, #28]
   15f6c:	str	r3, [sp, #4]
   15f70:	ldr	r3, [r5, #16]
   15f74:	str	lr, [sp, #8]
   15f78:	ldr	lr, [r5, #20]
   15f7c:	str	ip, [sp, #24]
   15f80:	ldr	ip, [r5, #24]
   15f84:	str	r3, [sp, #12]
   15f88:	ldr	r3, [r5]
   15f8c:	str	lr, [sp, #16]
   15f90:	str	ip, [sp, #20]
   15f94:	bl	10e98 <__fprintf_chk@plt>
   15f98:	add	sp, sp, #32
   15f9c:	ldrd	r4, [sp]
   15fa0:	ldr	r6, [sp, #8]
   15fa4:	add	sp, sp, #12
   15fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fac:	mov	r3, r2
   15fb0:	mov	r1, #1
   15fb4:	str	ip, [sp]
   15fb8:	movw	r2, #31312	; 0x7a50
   15fbc:	movt	r2, #1
   15fc0:	bl	10e98 <__fprintf_chk@plt>
   15fc4:	b	15e84 <close@plt+0x4f50>
   15fc8:	mov	r2, #5
   15fcc:	movw	r1, #31532	; 0x7b2c
   15fd0:	movt	r1, #1
   15fd4:	mov	r0, #0
   15fd8:	bl	10d78 <dcgettext@plt>
   15fdc:	ldr	r3, [r5]
   15fe0:	mov	r2, r0
   15fe4:	mov	r1, #1
   15fe8:	mov	r0, r4
   15fec:	add	sp, sp, #32
   15ff0:	ldrd	r4, [sp]
   15ff4:	ldr	r6, [sp, #8]
   15ff8:	ldr	lr, [sp, #12]
   15ffc:	add	sp, sp, #16
   16000:	b	10e98 <__fprintf_chk@plt>
   16004:	mov	r2, #5
   16008:	movw	r1, #31548	; 0x7b3c
   1600c:	movt	r1, #1
   16010:	mov	r0, #0
   16014:	bl	10d78 <dcgettext@plt>
   16018:	ldm	r5, {r3, ip}
   1601c:	mov	r2, r0
   16020:	mov	r1, #1
   16024:	mov	r0, r4
   16028:	str	ip, [sp, #48]	; 0x30
   1602c:	add	sp, sp, #32
   16030:	ldrd	r4, [sp]
   16034:	ldr	r6, [sp, #8]
   16038:	ldr	lr, [sp, #12]
   1603c:	add	sp, sp, #16
   16040:	b	10e98 <__fprintf_chk@plt>
   16044:	mov	r2, #5
   16048:	movw	r1, #31572	; 0x7b54
   1604c:	movt	r1, #1
   16050:	mov	r0, #0
   16054:	bl	10d78 <dcgettext@plt>
   16058:	ldm	r5, {r3, lr}
   1605c:	mov	r2, r0
   16060:	mov	r1, #1
   16064:	mov	r0, r4
   16068:	ldr	ip, [r5, #8]
   1606c:	str	lr, [sp, #48]	; 0x30
   16070:	str	ip, [sp, #52]	; 0x34
   16074:	add	sp, sp, #32
   16078:	ldrd	r4, [sp]
   1607c:	ldr	r6, [sp, #8]
   16080:	ldr	lr, [sp, #12]
   16084:	add	sp, sp, #16
   16088:	b	10e98 <__fprintf_chk@plt>
   1608c:	mov	r2, #5
   16090:	movw	r1, #31600	; 0x7b70
   16094:	movt	r1, #1
   16098:	mov	r0, #0
   1609c:	bl	10d78 <dcgettext@plt>
   160a0:	ldmib	r5, {r3, ip, lr}
   160a4:	mov	r2, r0
   160a8:	mov	r1, #1
   160ac:	mov	r0, r4
   160b0:	str	r3, [sp]
   160b4:	ldr	r3, [r5]
   160b8:	stmib	sp, {ip, lr}
   160bc:	bl	10e98 <__fprintf_chk@plt>
   160c0:	b	15f98 <close@plt+0x5064>
   160c4:	mov	r2, #5
   160c8:	movw	r1, #31632	; 0x7b90
   160cc:	movt	r1, #1
   160d0:	mov	r0, #0
   160d4:	bl	10d78 <dcgettext@plt>
   160d8:	ldmib	r5, {ip, lr}
   160dc:	mov	r2, r0
   160e0:	mov	r1, #1
   160e4:	mov	r0, r4
   160e8:	ldr	r3, [r5, #16]
   160ec:	str	ip, [sp]
   160f0:	ldr	ip, [r5, #12]
   160f4:	str	r3, [sp, #12]
   160f8:	ldr	r3, [r5]
   160fc:	str	lr, [sp, #4]
   16100:	str	ip, [sp, #8]
   16104:	bl	10e98 <__fprintf_chk@plt>
   16108:	b	15f98 <close@plt+0x5064>
   1610c:	mov	r2, #5
   16110:	movw	r1, #31668	; 0x7bb4
   16114:	movt	r1, #1
   16118:	mov	r0, #0
   1611c:	bl	10d78 <dcgettext@plt>
   16120:	ldr	lr, [r5, #4]
   16124:	mov	r2, r0
   16128:	mov	r1, #1
   1612c:	mov	r0, r4
   16130:	ldr	r3, [r5, #8]
   16134:	ldr	ip, [r5, #20]
   16138:	str	lr, [sp]
   1613c:	ldr	lr, [r5, #12]
   16140:	str	ip, [sp, #16]
   16144:	ldr	ip, [r5, #16]
   16148:	str	r3, [sp, #4]
   1614c:	ldr	r3, [r5]
   16150:	str	lr, [sp, #8]
   16154:	str	ip, [sp, #12]
   16158:	bl	10e98 <__fprintf_chk@plt>
   1615c:	b	15f98 <close@plt+0x5064>
   16160:	mov	r2, #5
   16164:	movw	r1, #31708	; 0x7bdc
   16168:	movt	r1, #1
   1616c:	mov	r0, #0
   16170:	bl	10d78 <dcgettext@plt>
   16174:	ldmib	r5, {r3, ip}
   16178:	mov	r2, r0
   1617c:	mov	r1, #1
   16180:	mov	r0, r4
   16184:	ldr	lr, [r5, #24]
   16188:	str	r3, [sp]
   1618c:	ldr	r3, [r5, #12]
   16190:	str	lr, [sp, #20]
   16194:	ldr	lr, [r5, #20]
   16198:	str	ip, [sp, #4]
   1619c:	ldr	ip, [r5, #16]
   161a0:	str	r3, [sp, #8]
   161a4:	ldr	r3, [r5]
   161a8:	str	ip, [sp, #12]
   161ac:	str	lr, [sp, #16]
   161b0:	bl	10e98 <__fprintf_chk@plt>
   161b4:	b	15f98 <close@plt+0x5064>
   161b8:	mov	r2, #5
   161bc:	movw	r1, #31752	; 0x7c08
   161c0:	movt	r1, #1
   161c4:	mov	r0, #0
   161c8:	bl	10d78 <dcgettext@plt>
   161cc:	ldmib	r5, {ip, lr}
   161d0:	mov	r2, r0
   161d4:	mov	r1, #1
   161d8:	mov	r0, r4
   161dc:	ldr	r3, [r5, #28]
   161e0:	str	ip, [sp]
   161e4:	ldr	ip, [r5, #12]
   161e8:	str	r3, [sp, #24]
   161ec:	ldr	r3, [r5, #24]
   161f0:	str	lr, [sp, #4]
   161f4:	ldr	lr, [r5, #16]
   161f8:	str	ip, [sp, #8]
   161fc:	ldr	ip, [r5, #20]
   16200:	str	r3, [sp, #20]
   16204:	ldr	r3, [r5]
   16208:	str	lr, [sp, #12]
   1620c:	str	ip, [sp, #16]
   16210:	bl	10e98 <__fprintf_chk@plt>
   16214:	b	15f98 <close@plt+0x5064>
   16218:	movw	r1, #31852	; 0x7c6c
   1621c:	movt	r1, #1
   16220:	b	15f38 <close@plt+0x5004>
   16224:	strd	r4, [sp, #-12]!
   16228:	str	lr, [sp, #8]
   1622c:	sub	sp, sp, #12
   16230:	ldr	r5, [sp, #24]
   16234:	ldr	ip, [r5]
   16238:	cmp	ip, #0
   1623c:	beq	16258 <close@plt+0x5324>
   16240:	mov	lr, r5
   16244:	mov	ip, #0
   16248:	ldr	r4, [lr, #4]!
   1624c:	add	ip, ip, #1
   16250:	cmp	r4, #0
   16254:	bne	16248 <close@plt+0x5314>
   16258:	stm	sp, {r5, ip}
   1625c:	bl	15e44 <close@plt+0x4f10>
   16260:	add	sp, sp, #12
   16264:	ldrd	r4, [sp]
   16268:	add	sp, sp, #8
   1626c:	pop	{pc}		; (ldr pc, [sp], #4)
   16270:	push	{lr}		; (str lr, [sp, #-4]!)
   16274:	sub	sp, sp, #52	; 0x34
   16278:	ldr	ip, [sp, #56]	; 0x38
   1627c:	ldr	lr, [ip]
   16280:	cmp	lr, #0
   16284:	str	lr, [sp, #8]
   16288:	beq	16320 <close@plt+0x53ec>
   1628c:	ldr	lr, [ip, #4]
   16290:	cmp	lr, #0
   16294:	str	lr, [sp, #12]
   16298:	beq	16334 <close@plt+0x5400>
   1629c:	ldr	lr, [ip, #8]
   162a0:	cmp	lr, #0
   162a4:	str	lr, [sp, #16]
   162a8:	beq	1633c <close@plt+0x5408>
   162ac:	ldr	lr, [ip, #12]
   162b0:	cmp	lr, #0
   162b4:	str	lr, [sp, #20]
   162b8:	beq	16344 <close@plt+0x5410>
   162bc:	ldr	lr, [ip, #16]
   162c0:	cmp	lr, #0
   162c4:	str	lr, [sp, #24]
   162c8:	beq	1634c <close@plt+0x5418>
   162cc:	ldr	lr, [ip, #20]
   162d0:	cmp	lr, #0
   162d4:	str	lr, [sp, #28]
   162d8:	beq	16354 <close@plt+0x5420>
   162dc:	ldr	lr, [ip, #24]
   162e0:	cmp	lr, #0
   162e4:	str	lr, [sp, #32]
   162e8:	beq	1635c <close@plt+0x5428>
   162ec:	ldr	lr, [ip, #28]
   162f0:	cmp	lr, #0
   162f4:	str	lr, [sp, #36]	; 0x24
   162f8:	beq	16364 <close@plt+0x5430>
   162fc:	ldr	lr, [ip, #32]
   16300:	cmp	lr, #0
   16304:	str	lr, [sp, #40]	; 0x28
   16308:	beq	1636c <close@plt+0x5438>
   1630c:	ldr	ip, [ip, #36]	; 0x24
   16310:	cmp	ip, #0
   16314:	str	ip, [sp, #44]	; 0x2c
   16318:	movne	lr, #10
   1631c:	moveq	lr, #9
   16320:	add	ip, sp, #8
   16324:	stm	sp, {ip, lr}
   16328:	bl	15e44 <close@plt+0x4f10>
   1632c:	add	sp, sp, #52	; 0x34
   16330:	pop	{pc}		; (ldr pc, [sp], #4)
   16334:	mov	lr, #1
   16338:	b	16320 <close@plt+0x53ec>
   1633c:	mov	lr, #2
   16340:	b	16320 <close@plt+0x53ec>
   16344:	mov	lr, #3
   16348:	b	16320 <close@plt+0x53ec>
   1634c:	mov	lr, #4
   16350:	b	16320 <close@plt+0x53ec>
   16354:	mov	lr, #5
   16358:	b	16320 <close@plt+0x53ec>
   1635c:	mov	lr, #6
   16360:	b	16320 <close@plt+0x53ec>
   16364:	mov	lr, #7
   16368:	b	16320 <close@plt+0x53ec>
   1636c:	mov	lr, #8
   16370:	b	16320 <close@plt+0x53ec>
   16374:	push	{r3}		; (str r3, [sp, #-4]!)
   16378:	push	{lr}		; (str lr, [sp, #-4]!)
   1637c:	sub	sp, sp, #56	; 0x38
   16380:	ldr	ip, [sp, #64]	; 0x40
   16384:	add	r3, sp, #64	; 0x40
   16388:	str	r3, [sp, #12]
   1638c:	cmp	ip, #0
   16390:	str	ip, [sp, #16]
   16394:	beq	1642c <close@plt+0x54f8>
   16398:	ldr	ip, [sp, #68]	; 0x44
   1639c:	cmp	ip, #0
   163a0:	str	ip, [sp, #20]
   163a4:	beq	16450 <close@plt+0x551c>
   163a8:	ldr	ip, [sp, #72]	; 0x48
   163ac:	cmp	ip, #0
   163b0:	str	ip, [sp, #24]
   163b4:	beq	16458 <close@plt+0x5524>
   163b8:	ldr	ip, [sp, #76]	; 0x4c
   163bc:	cmp	ip, #0
   163c0:	str	ip, [sp, #28]
   163c4:	beq	16460 <close@plt+0x552c>
   163c8:	ldr	ip, [sp, #80]	; 0x50
   163cc:	cmp	ip, #0
   163d0:	str	ip, [sp, #32]
   163d4:	beq	16468 <close@plt+0x5534>
   163d8:	ldr	ip, [sp, #84]	; 0x54
   163dc:	cmp	ip, #0
   163e0:	str	ip, [sp, #36]	; 0x24
   163e4:	beq	16470 <close@plt+0x553c>
   163e8:	ldr	ip, [sp, #88]	; 0x58
   163ec:	cmp	ip, #0
   163f0:	str	ip, [sp, #40]	; 0x28
   163f4:	beq	16478 <close@plt+0x5544>
   163f8:	ldr	ip, [sp, #92]	; 0x5c
   163fc:	cmp	ip, #0
   16400:	str	ip, [sp, #44]	; 0x2c
   16404:	beq	16480 <close@plt+0x554c>
   16408:	ldr	ip, [sp, #96]	; 0x60
   1640c:	cmp	ip, #0
   16410:	str	ip, [sp, #48]	; 0x30
   16414:	beq	16488 <close@plt+0x5554>
   16418:	ldr	r3, [sp, #100]	; 0x64
   1641c:	cmp	r3, #0
   16420:	str	r3, [sp, #52]	; 0x34
   16424:	movne	ip, #10
   16428:	moveq	ip, #9
   1642c:	ldr	r3, [sp, #60]	; 0x3c
   16430:	add	lr, sp, #16
   16434:	str	lr, [sp]
   16438:	str	ip, [sp, #4]
   1643c:	bl	15e44 <close@plt+0x4f10>
   16440:	add	sp, sp, #56	; 0x38
   16444:	pop	{lr}		; (ldr lr, [sp], #4)
   16448:	add	sp, sp, #4
   1644c:	bx	lr
   16450:	mov	ip, #1
   16454:	b	1642c <close@plt+0x54f8>
   16458:	mov	ip, #2
   1645c:	b	1642c <close@plt+0x54f8>
   16460:	mov	ip, #3
   16464:	b	1642c <close@plt+0x54f8>
   16468:	mov	ip, #4
   1646c:	b	1642c <close@plt+0x54f8>
   16470:	mov	ip, #5
   16474:	b	1642c <close@plt+0x54f8>
   16478:	mov	ip, #6
   1647c:	b	1642c <close@plt+0x54f8>
   16480:	mov	ip, #7
   16484:	b	1642c <close@plt+0x54f8>
   16488:	mov	ip, #8
   1648c:	b	1642c <close@plt+0x54f8>
   16490:	movw	r3, #33108	; 0x8154
   16494:	movt	r3, #2
   16498:	str	r4, [sp, #-8]!
   1649c:	mov	r0, #10
   164a0:	ldr	r1, [r3]
   164a4:	str	lr, [sp, #4]
   164a8:	bl	10d6c <fputc_unlocked@plt>
   164ac:	mov	r2, #5
   164b0:	movw	r1, #31912	; 0x7ca8
   164b4:	movt	r1, #1
   164b8:	mov	r0, #0
   164bc:	bl	10d78 <dcgettext@plt>
   164c0:	mov	r1, r0
   164c4:	movw	r2, #31932	; 0x7cbc
   164c8:	movt	r2, #1
   164cc:	mov	r0, #1
   164d0:	bl	10e80 <__printf_chk@plt>
   164d4:	mov	r2, #5
   164d8:	movw	r1, #31956	; 0x7cd4
   164dc:	movt	r1, #1
   164e0:	mov	r0, #0
   164e4:	bl	10d78 <dcgettext@plt>
   164e8:	mov	r1, r0
   164ec:	movw	r3, #30352	; 0x7690
   164f0:	movt	r3, #1
   164f4:	movw	r2, #30392	; 0x76b8
   164f8:	movt	r2, #1
   164fc:	mov	r0, #1
   16500:	bl	10e80 <__printf_chk@plt>
   16504:	mov	r2, #5
   16508:	movw	r1, #31976	; 0x7ce8
   1650c:	movt	r1, #1
   16510:	mov	r0, #0
   16514:	bl	10d78 <dcgettext@plt>
   16518:	mov	r1, r0
   1651c:	movw	r2, #32016	; 0x7d10
   16520:	movt	r2, #1
   16524:	mov	r0, #1
   16528:	ldr	r4, [sp]
   1652c:	ldr	lr, [sp, #4]
   16530:	add	sp, sp, #8
   16534:	b	10e80 <__printf_chk@plt>
   16538:	strd	r4, [sp, #-16]!
   1653c:	mov	r4, r0
   16540:	mov	r5, r2
   16544:	str	r6, [sp, #8]
   16548:	mov	r6, r1
   1654c:	str	lr, [sp, #12]
   16550:	bl	16fb4 <close@plt+0x6080>
   16554:	cmp	r0, #0
   16558:	beq	1656c <close@plt+0x5638>
   1655c:	ldrd	r4, [sp]
   16560:	ldr	r6, [sp, #8]
   16564:	add	sp, sp, #12
   16568:	pop	{pc}		; (ldr pc, [sp], #4)
   1656c:	cmp	r4, #0
   16570:	beq	16580 <close@plt+0x564c>
   16574:	cmp	r6, #0
   16578:	cmpne	r5, #0
   1657c:	beq	1655c <close@plt+0x5628>
   16580:	bl	16b3c <close@plt+0x5c08>
   16584:	str	r4, [sp, #-8]!
   16588:	str	lr, [sp, #4]
   1658c:	bl	16bf4 <close@plt+0x5cc0>
   16590:	cmp	r0, #0
   16594:	beq	165a4 <close@plt+0x5670>
   16598:	ldr	r4, [sp]
   1659c:	add	sp, sp, #4
   165a0:	pop	{pc}		; (ldr pc, [sp], #4)
   165a4:	bl	16b3c <close@plt+0x5c08>
   165a8:	str	r4, [sp, #-8]!
   165ac:	str	lr, [sp, #4]
   165b0:	bl	16bf4 <close@plt+0x5cc0>
   165b4:	cmp	r0, #0
   165b8:	beq	165c8 <close@plt+0x5694>
   165bc:	ldr	r4, [sp]
   165c0:	add	sp, sp, #4
   165c4:	pop	{pc}		; (ldr pc, [sp], #4)
   165c8:	bl	16b3c <close@plt+0x5c08>
   165cc:	str	r4, [sp, #-8]!
   165d0:	str	lr, [sp, #4]
   165d4:	bl	16bf4 <close@plt+0x5cc0>
   165d8:	cmp	r0, #0
   165dc:	beq	165ec <close@plt+0x56b8>
   165e0:	ldr	r4, [sp]
   165e4:	add	sp, sp, #4
   165e8:	pop	{pc}		; (ldr pc, [sp], #4)
   165ec:	bl	16b3c <close@plt+0x5c08>
   165f0:	strd	r4, [sp, #-16]!
   165f4:	mov	r5, r0
   165f8:	mov	r4, r1
   165fc:	str	r6, [sp, #8]
   16600:	str	lr, [sp, #12]
   16604:	bl	16c30 <close@plt+0x5cfc>
   16608:	cmp	r0, #0
   1660c:	beq	16620 <close@plt+0x56ec>
   16610:	ldrd	r4, [sp]
   16614:	ldr	r6, [sp, #8]
   16618:	add	sp, sp, #12
   1661c:	pop	{pc}		; (ldr pc, [sp], #4)
   16620:	adds	r4, r4, #0
   16624:	movne	r4, #1
   16628:	cmp	r5, #0
   1662c:	moveq	r4, #1
   16630:	cmp	r4, #0
   16634:	beq	16610 <close@plt+0x56dc>
   16638:	bl	16b3c <close@plt+0x5c08>
   1663c:	cmp	r1, #0
   16640:	orreq	r1, r1, #1
   16644:	str	r4, [sp, #-8]!
   16648:	str	lr, [sp, #4]
   1664c:	bl	16c30 <close@plt+0x5cfc>
   16650:	cmp	r0, #0
   16654:	beq	16664 <close@plt+0x5730>
   16658:	ldr	r4, [sp]
   1665c:	add	sp, sp, #4
   16660:	pop	{pc}		; (ldr pc, [sp], #4)
   16664:	bl	16b3c <close@plt+0x5c08>
   16668:	strd	r4, [sp, #-16]!
   1666c:	mov	r4, r0
   16670:	mov	r5, r2
   16674:	str	r6, [sp, #8]
   16678:	mov	r6, r1
   1667c:	str	lr, [sp, #12]
   16680:	bl	16fb4 <close@plt+0x6080>
   16684:	cmp	r0, #0
   16688:	beq	1669c <close@plt+0x5768>
   1668c:	ldrd	r4, [sp]
   16690:	ldr	r6, [sp, #8]
   16694:	add	sp, sp, #12
   16698:	pop	{pc}		; (ldr pc, [sp], #4)
   1669c:	cmp	r4, #0
   166a0:	beq	166b0 <close@plt+0x577c>
   166a4:	cmp	r6, #0
   166a8:	cmpne	r5, #0
   166ac:	beq	1668c <close@plt+0x5758>
   166b0:	bl	16b3c <close@plt+0x5c08>
   166b4:	cmp	r2, #0
   166b8:	cmpne	r1, #0
   166bc:	str	r4, [sp, #-8]!
   166c0:	moveq	r2, #1
   166c4:	str	lr, [sp, #4]
   166c8:	moveq	r1, r2
   166cc:	bl	16fb4 <close@plt+0x6080>
   166d0:	cmp	r0, #0
   166d4:	beq	166e4 <close@plt+0x57b0>
   166d8:	ldr	r4, [sp]
   166dc:	add	sp, sp, #4
   166e0:	pop	{pc}		; (ldr pc, [sp], #4)
   166e4:	bl	16b3c <close@plt+0x5c08>
   166e8:	mov	r2, r1
   166ec:	mov	r1, r0
   166f0:	str	r4, [sp, #-8]!
   166f4:	mov	r0, #0
   166f8:	str	lr, [sp, #4]
   166fc:	bl	16fb4 <close@plt+0x6080>
   16700:	cmp	r0, #0
   16704:	beq	16714 <close@plt+0x57e0>
   16708:	ldr	r4, [sp]
   1670c:	add	sp, sp, #4
   16710:	pop	{pc}		; (ldr pc, [sp], #4)
   16714:	bl	16b3c <close@plt+0x5c08>
   16718:	cmp	r1, #0
   1671c:	cmpne	r0, #0
   16720:	str	r4, [sp, #-8]!
   16724:	moveq	r2, #1
   16728:	movne	r2, r1
   1672c:	str	lr, [sp, #4]
   16730:	movne	r1, r0
   16734:	moveq	r1, r2
   16738:	mov	r0, #0
   1673c:	bl	16fb4 <close@plt+0x6080>
   16740:	cmp	r0, #0
   16744:	beq	16754 <close@plt+0x5820>
   16748:	ldr	r4, [sp]
   1674c:	add	sp, sp, #4
   16750:	pop	{pc}		; (ldr pc, [sp], #4)
   16754:	bl	16b3c <close@plt+0x5c08>
   16758:	cmp	r0, #0
   1675c:	strd	r4, [sp, #-16]!
   16760:	mov	r5, r1
   16764:	ldr	r4, [r1]
   16768:	str	r6, [sp, #8]
   1676c:	str	lr, [sp, #12]
   16770:	beq	167b8 <close@plt+0x5884>
   16774:	lsr	r3, r4, #1
   16778:	add	r3, r3, #1
   1677c:	adds	r4, r4, r3
   16780:	bcs	167b4 <close@plt+0x5880>
   16784:	mov	r2, #1
   16788:	mov	r1, r4
   1678c:	bl	16fb4 <close@plt+0x6080>
   16790:	cmp	r0, #0
   16794:	beq	167ac <close@plt+0x5878>
   16798:	ldr	r6, [sp, #8]
   1679c:	str	r4, [r5]
   167a0:	ldrd	r4, [sp]
   167a4:	add	sp, sp, #12
   167a8:	pop	{pc}		; (ldr pc, [sp], #4)
   167ac:	cmp	r4, #0
   167b0:	beq	16798 <close@plt+0x5864>
   167b4:	bl	16b3c <close@plt+0x5c08>
   167b8:	cmp	r4, #0
   167bc:	mov	r2, #1
   167c0:	moveq	r4, #64	; 0x40
   167c4:	mov	r1, r4
   167c8:	bl	16fb4 <close@plt+0x6080>
   167cc:	cmp	r0, #0
   167d0:	bne	16798 <close@plt+0x5864>
   167d4:	b	167b4 <close@plt+0x5880>
   167d8:	cmp	r0, #0
   167dc:	strd	r4, [sp, #-16]!
   167e0:	mov	r5, r1
   167e4:	ldr	r4, [r1]
   167e8:	str	r6, [sp, #8]
   167ec:	mov	r6, r2
   167f0:	str	lr, [sp, #12]
   167f4:	beq	1683c <close@plt+0x5908>
   167f8:	lsr	r3, r4, #1
   167fc:	add	r3, r3, #1
   16800:	adds	r4, r4, r3
   16804:	bcs	16838 <close@plt+0x5904>
   16808:	mov	r1, r4
   1680c:	bl	16fb4 <close@plt+0x6080>
   16810:	cmp	r0, #0
   16814:	beq	1682c <close@plt+0x58f8>
   16818:	ldr	r6, [sp, #8]
   1681c:	str	r4, [r5]
   16820:	ldrd	r4, [sp]
   16824:	add	sp, sp, #12
   16828:	pop	{pc}		; (ldr pc, [sp], #4)
   1682c:	cmp	r4, #0
   16830:	cmpne	r6, #0
   16834:	beq	16818 <close@plt+0x58e4>
   16838:	bl	16b3c <close@plt+0x5c08>
   1683c:	cmp	r4, #0
   16840:	bne	16854 <close@plt+0x5920>
   16844:	mov	r4, #64	; 0x40
   16848:	udiv	r4, r4, r2
   1684c:	cmp	r2, #64	; 0x40
   16850:	addhi	r4, r4, #1
   16854:	mov	r2, r6
   16858:	mov	r1, r4
   1685c:	mov	r0, #0
   16860:	bl	16fb4 <close@plt+0x6080>
   16864:	cmp	r0, #0
   16868:	bne	16818 <close@plt+0x58e4>
   1686c:	b	16838 <close@plt+0x5904>
   16870:	ldr	ip, [r1]
   16874:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16878:	strd	r6, [sp, #8]
   1687c:	mov	r7, r1
   16880:	mov	r6, r0
   16884:	str	r8, [sp, #16]
   16888:	mvn	r8, r3
   1688c:	lsr	r8, r8, #31
   16890:	str	lr, [sp, #20]
   16894:	asr	r1, ip, #1
   16898:	ldr	lr, [sp, #24]
   1689c:	adds	r4, ip, r1
   168a0:	mvnvs	r4, #-2147483648	; 0x80000000
   168a4:	cmp	r3, r4
   168a8:	movge	r1, #0
   168ac:	andlt	r1, r8, #1
   168b0:	cmp	r1, #0
   168b4:	movne	r4, r3
   168b8:	smull	r0, r1, r4, lr
   168bc:	cmp	r1, r0, asr #31
   168c0:	bne	16970 <close@plt+0x5a3c>
   168c4:	cmp	r0, #63	; 0x3f
   168c8:	mov	r5, r0
   168cc:	ble	1693c <close@plt+0x5a08>
   168d0:	cmp	r6, #0
   168d4:	sub	r1, r4, ip
   168d8:	streq	r6, [r7]
   168dc:	cmp	r1, r2
   168e0:	bge	16910 <close@plt+0x59dc>
   168e4:	adds	r4, ip, r2
   168e8:	bvs	1696c <close@plt+0x5a38>
   168ec:	cmp	r4, r3
   168f0:	movle	r3, #0
   168f4:	andgt	r3, r8, #1
   168f8:	cmp	r3, #0
   168fc:	bne	1696c <close@plt+0x5a38>
   16900:	smull	r0, r1, r4, lr
   16904:	cmp	r1, r0, asr #31
   16908:	mov	r5, r0
   1690c:	bne	1696c <close@plt+0x5a38>
   16910:	mov	r1, r5
   16914:	mov	r0, r6
   16918:	bl	16c30 <close@plt+0x5cfc>
   1691c:	cmp	r0, #0
   16920:	beq	16950 <close@plt+0x5a1c>
   16924:	ldr	r8, [sp, #16]
   16928:	str	r4, [r7]
   1692c:	ldrd	r4, [sp]
   16930:	ldrd	r6, [sp, #8]
   16934:	add	sp, sp, #20
   16938:	pop	{pc}		; (ldr pc, [sp], #4)
   1693c:	mov	r0, #64	; 0x40
   16940:	sdiv	r4, r0, lr
   16944:	mls	r5, lr, r4, r0
   16948:	sub	r5, r0, r5
   1694c:	b	168d0 <close@plt+0x599c>
   16950:	adds	r5, r5, #0
   16954:	movne	r5, #1
   16958:	cmp	r6, #0
   1695c:	movne	r6, r5
   16960:	moveq	r6, #1
   16964:	cmp	r6, #0
   16968:	beq	16924 <close@plt+0x59f0>
   1696c:	bl	16b3c <close@plt+0x5c08>
   16970:	mvn	r0, #-2147483648	; 0x80000000
   16974:	b	16940 <close@plt+0x5a0c>
   16978:	mov	r1, #1
   1697c:	str	r4, [sp, #-8]!
   16980:	str	lr, [sp, #4]
   16984:	bl	16b80 <close@plt+0x5c4c>
   16988:	cmp	r0, #0
   1698c:	beq	1699c <close@plt+0x5a68>
   16990:	ldr	r4, [sp]
   16994:	add	sp, sp, #4
   16998:	pop	{pc}		; (ldr pc, [sp], #4)
   1699c:	bl	16b3c <close@plt+0x5c08>
   169a0:	mov	r1, #1
   169a4:	str	r4, [sp, #-8]!
   169a8:	str	lr, [sp, #4]
   169ac:	bl	16b80 <close@plt+0x5c4c>
   169b0:	cmp	r0, #0
   169b4:	beq	169c4 <close@plt+0x5a90>
   169b8:	ldr	r4, [sp]
   169bc:	add	sp, sp, #4
   169c0:	pop	{pc}		; (ldr pc, [sp], #4)
   169c4:	bl	16b3c <close@plt+0x5c08>
   169c8:	str	r4, [sp, #-8]!
   169cc:	str	lr, [sp, #4]
   169d0:	bl	16b80 <close@plt+0x5c4c>
   169d4:	cmp	r0, #0
   169d8:	beq	169e8 <close@plt+0x5ab4>
   169dc:	ldr	r4, [sp]
   169e0:	add	sp, sp, #4
   169e4:	pop	{pc}		; (ldr pc, [sp], #4)
   169e8:	bl	16b3c <close@plt+0x5c08>
   169ec:	str	r4, [sp, #-8]!
   169f0:	str	lr, [sp, #4]
   169f4:	bl	16b80 <close@plt+0x5c4c>
   169f8:	cmp	r0, #0
   169fc:	beq	16a0c <close@plt+0x5ad8>
   16a00:	ldr	r4, [sp]
   16a04:	add	sp, sp, #4
   16a08:	pop	{pc}		; (ldr pc, [sp], #4)
   16a0c:	bl	16b3c <close@plt+0x5c08>
   16a10:	strd	r4, [sp, #-16]!
   16a14:	mov	r4, r1
   16a18:	str	r6, [sp, #8]
   16a1c:	mov	r6, r0
   16a20:	mov	r0, r1
   16a24:	str	lr, [sp, #12]
   16a28:	bl	16bf4 <close@plt+0x5cc0>
   16a2c:	subs	r5, r0, #0
   16a30:	beq	16a54 <close@plt+0x5b20>
   16a34:	mov	r2, r4
   16a38:	mov	r1, r6
   16a3c:	bl	10d30 <memcpy@plt>
   16a40:	mov	r0, r5
   16a44:	ldrd	r4, [sp]
   16a48:	ldr	r6, [sp, #8]
   16a4c:	add	sp, sp, #12
   16a50:	pop	{pc}		; (ldr pc, [sp], #4)
   16a54:	bl	16b3c <close@plt+0x5c08>
   16a58:	strd	r4, [sp, #-16]!
   16a5c:	mov	r4, r1
   16a60:	str	r6, [sp, #8]
   16a64:	mov	r6, r0
   16a68:	mov	r0, r1
   16a6c:	str	lr, [sp, #12]
   16a70:	bl	16bf4 <close@plt+0x5cc0>
   16a74:	subs	r5, r0, #0
   16a78:	beq	16a9c <close@plt+0x5b68>
   16a7c:	mov	r2, r4
   16a80:	mov	r1, r6
   16a84:	bl	10d30 <memcpy@plt>
   16a88:	mov	r0, r5
   16a8c:	ldrd	r4, [sp]
   16a90:	ldr	r6, [sp, #8]
   16a94:	add	sp, sp, #12
   16a98:	pop	{pc}		; (ldr pc, [sp], #4)
   16a9c:	bl	16b3c <close@plt+0x5c08>
   16aa0:	strd	r4, [sp, #-16]!
   16aa4:	mov	r4, r1
   16aa8:	str	r6, [sp, #8]
   16aac:	mov	r6, r0
   16ab0:	add	r0, r1, #1
   16ab4:	str	lr, [sp, #12]
   16ab8:	bl	16bf4 <close@plt+0x5cc0>
   16abc:	subs	r5, r0, #0
   16ac0:	beq	16aec <close@plt+0x5bb8>
   16ac4:	mov	r3, #0
   16ac8:	mov	r1, r6
   16acc:	mov	r2, r4
   16ad0:	strb	r3, [r5, r4]
   16ad4:	bl	10d30 <memcpy@plt>
   16ad8:	mov	r0, r5
   16adc:	ldrd	r4, [sp]
   16ae0:	ldr	r6, [sp, #8]
   16ae4:	add	sp, sp, #12
   16ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   16aec:	bl	16b3c <close@plt+0x5c08>
   16af0:	strd	r4, [sp, #-16]!
   16af4:	str	r6, [sp, #8]
   16af8:	mov	r6, r0
   16afc:	str	lr, [sp, #12]
   16b00:	bl	10e44 <strlen@plt>
   16b04:	add	r4, r0, #1
   16b08:	mov	r0, r4
   16b0c:	bl	16bf4 <close@plt+0x5cc0>
   16b10:	subs	r5, r0, #0
   16b14:	beq	16b38 <close@plt+0x5c04>
   16b18:	mov	r2, r4
   16b1c:	mov	r1, r6
   16b20:	bl	10d30 <memcpy@plt>
   16b24:	mov	r0, r5
   16b28:	ldrd	r4, [sp]
   16b2c:	ldr	r6, [sp, #8]
   16b30:	add	sp, sp, #12
   16b34:	pop	{pc}		; (ldr pc, [sp], #4)
   16b38:	bl	16b3c <close@plt+0x5c08>
   16b3c:	movw	r3, #33012	; 0x80f4
   16b40:	movt	r3, #2
   16b44:	str	r4, [sp, #-8]!
   16b48:	ldr	r4, [r3]
   16b4c:	mov	r2, #5
   16b50:	movw	r1, #32096	; 0x7d60
   16b54:	movt	r1, #1
   16b58:	mov	r0, #0
   16b5c:	str	lr, [sp, #4]
   16b60:	bl	10d78 <dcgettext@plt>
   16b64:	mov	r3, r0
   16b68:	movw	r2, #31012	; 0x7924
   16b6c:	movt	r2, #1
   16b70:	mov	r1, #0
   16b74:	mov	r0, r4
   16b78:	bl	10de4 <error@plt>
   16b7c:	bl	10f28 <abort@plt>
   16b80:	cmp	r1, #0
   16b84:	cmpne	r0, #0
   16b88:	beq	16bd4 <close@plt+0x5ca0>
   16b8c:	strd	r4, [sp, #-16]!
   16b90:	umull	r4, r5, r0, r1
   16b94:	str	r6, [sp, #8]
   16b98:	str	lr, [sp, #12]
   16b9c:	adds	r3, r5, #0
   16ba0:	movne	r3, #1
   16ba4:	cmp	r4, #0
   16ba8:	blt	16bb4 <close@plt+0x5c80>
   16bac:	cmp	r3, #0
   16bb0:	beq	16be0 <close@plt+0x5cac>
   16bb4:	bl	10e50 <__errno_location@plt>
   16bb8:	mov	r3, #12
   16bbc:	ldrd	r4, [sp]
   16bc0:	ldr	r6, [sp, #8]
   16bc4:	add	sp, sp, #12
   16bc8:	str	r3, [r0]
   16bcc:	mov	r0, #0
   16bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   16bd4:	mov	r1, #1
   16bd8:	mov	r0, r1
   16bdc:	b	10cd0 <calloc@plt>
   16be0:	ldrd	r4, [sp]
   16be4:	ldr	r6, [sp, #8]
   16be8:	ldr	lr, [sp, #12]
   16bec:	add	sp, sp, #16
   16bf0:	b	10cd0 <calloc@plt>
   16bf4:	cmp	r0, #0
   16bf8:	beq	16c04 <close@plt+0x5cd0>
   16bfc:	blt	16c0c <close@plt+0x5cd8>
   16c00:	b	10df0 <malloc@plt>
   16c04:	mov	r0, #1
   16c08:	b	10df0 <malloc@plt>
   16c0c:	str	r4, [sp, #-8]!
   16c10:	str	lr, [sp, #4]
   16c14:	bl	10e50 <__errno_location@plt>
   16c18:	mov	r3, #12
   16c1c:	ldr	r4, [sp]
   16c20:	add	sp, sp, #4
   16c24:	str	r3, [r0]
   16c28:	mov	r0, #0
   16c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c30:	cmp	r0, #0
   16c34:	beq	16c5c <close@plt+0x5d28>
   16c38:	cmp	r1, #0
   16c3c:	str	r4, [sp, #-8]!
   16c40:	str	lr, [sp, #4]
   16c44:	beq	16c64 <close@plt+0x5d30>
   16c48:	blt	16c78 <close@plt+0x5d44>
   16c4c:	ldr	r4, [sp]
   16c50:	ldr	lr, [sp, #4]
   16c54:	add	sp, sp, #8
   16c58:	b	10d84 <realloc@plt>
   16c5c:	mov	r0, r1
   16c60:	b	16bf4 <close@plt+0x5cc0>
   16c64:	bl	12204 <close@plt+0x12d0>
   16c68:	ldr	r4, [sp]
   16c6c:	add	sp, sp, #4
   16c70:	mov	r0, #0
   16c74:	pop	{pc}		; (ldr pc, [sp], #4)
   16c78:	bl	10e50 <__errno_location@plt>
   16c7c:	mov	r3, #12
   16c80:	str	r3, [r0]
   16c84:	b	16c68 <close@plt+0x5d34>
   16c88:	strd	r4, [sp, #-16]!
   16c8c:	mov	r4, r0
   16c90:	str	r6, [sp, #8]
   16c94:	str	lr, [sp, #12]
   16c98:	bl	10dcc <__fpending@plt>
   16c9c:	ldr	r5, [r4]
   16ca0:	mov	r6, r0
   16ca4:	mov	r0, r4
   16ca8:	bl	12044 <close@plt+0x1110>
   16cac:	mov	r4, r0
   16cb0:	and	r5, r5, #32
   16cb4:	cmp	r5, #0
   16cb8:	bne	16cf0 <close@plt+0x5dbc>
   16cbc:	cmp	r0, #0
   16cc0:	beq	16cdc <close@plt+0x5da8>
   16cc4:	cmp	r6, #0
   16cc8:	bne	16d08 <close@plt+0x5dd4>
   16ccc:	bl	10e50 <__errno_location@plt>
   16cd0:	ldr	r4, [r0]
   16cd4:	subs	r4, r4, #9
   16cd8:	mvnne	r4, #0
   16cdc:	mov	r0, r4
   16ce0:	ldrd	r4, [sp]
   16ce4:	ldr	r6, [sp, #8]
   16ce8:	add	sp, sp, #12
   16cec:	pop	{pc}		; (ldr pc, [sp], #4)
   16cf0:	cmp	r0, #0
   16cf4:	bne	16d08 <close@plt+0x5dd4>
   16cf8:	bl	10e50 <__errno_location@plt>
   16cfc:	str	r4, [r0]
   16d00:	mvn	r4, #0
   16d04:	b	16cdc <close@plt+0x5da8>
   16d08:	mvn	r4, #0
   16d0c:	b	16cdc <close@plt+0x5da8>
   16d10:	push	{r1, r2, r3}
   16d14:	strd	r4, [sp, #-20]!	; 0xffffffec
   16d18:	strd	r6, [sp, #8]
   16d1c:	str	lr, [sp, #16]
   16d20:	sub	sp, sp, #8
   16d24:	ldr	r1, [sp, #28]
   16d28:	add	r2, sp, #32
   16d2c:	str	r2, [sp, #4]
   16d30:	cmp	r1, #0
   16d34:	beq	16e10 <close@plt+0x5edc>
   16d38:	movw	r3, #1030	; 0x406
   16d3c:	mov	r6, r0
   16d40:	cmp	r1, r3
   16d44:	beq	16e20 <close@plt+0x5eec>
   16d48:	cmp	r1, #11
   16d4c:	beq	16dc8 <close@plt+0x5e94>
   16d50:	ble	16da8 <close@plt+0x5e74>
   16d54:	movw	r2, #1031	; 0x407
   16d58:	cmp	r1, r2
   16d5c:	bgt	16de4 <close@plt+0x5eb0>
   16d60:	cmp	r1, r3
   16d64:	bge	16d74 <close@plt+0x5e40>
   16d68:	movw	r3, #1025	; 0x401
   16d6c:	cmp	r1, r3
   16d70:	beq	16dc8 <close@plt+0x5e94>
   16d74:	ldr	r3, [sp, #4]
   16d78:	mov	r0, r6
   16d7c:	ldr	r2, [r3]
   16d80:	bl	10ebc <fcntl64@plt>
   16d84:	mov	r4, r0
   16d88:	mov	r0, r4
   16d8c:	add	sp, sp, #8
   16d90:	ldrd	r4, [sp]
   16d94:	ldrd	r6, [sp, #8]
   16d98:	ldr	lr, [sp, #16]
   16d9c:	add	sp, sp, #20
   16da0:	add	sp, sp, #12
   16da4:	bx	lr
   16da8:	cmp	r1, #4
   16dac:	beq	16d74 <close@plt+0x5e40>
   16db0:	bgt	16dd8 <close@plt+0x5ea4>
   16db4:	cmp	r1, #2
   16db8:	beq	16d74 <close@plt+0x5e40>
   16dbc:	bgt	16dc8 <close@plt+0x5e94>
   16dc0:	cmp	r1, #1
   16dc4:	bne	16d74 <close@plt+0x5e40>
   16dc8:	mov	r0, r6
   16dcc:	bl	10ebc <fcntl64@plt>
   16dd0:	mov	r4, r0
   16dd4:	b	16d88 <close@plt+0x5e54>
   16dd8:	cmp	r1, #9
   16ddc:	bne	16d74 <close@plt+0x5e40>
   16de0:	b	16dc8 <close@plt+0x5e94>
   16de4:	movw	r3, #1033	; 0x409
   16de8:	cmp	r1, r3
   16dec:	beq	16d74 <close@plt+0x5e40>
   16df0:	blt	16dc8 <close@plt+0x5e94>
   16df4:	movw	r3, #1034	; 0x40a
   16df8:	cmp	r1, r3
   16dfc:	bne	16d74 <close@plt+0x5e40>
   16e00:	mov	r0, r6
   16e04:	bl	10ebc <fcntl64@plt>
   16e08:	mov	r4, r0
   16e0c:	b	16d88 <close@plt+0x5e54>
   16e10:	ldr	r2, [sp, #32]
   16e14:	bl	10ebc <fcntl64@plt>
   16e18:	mov	r4, r0
   16e1c:	b	16d88 <close@plt+0x5e54>
   16e20:	movw	r5, #33448	; 0x82a8
   16e24:	movt	r5, #2
   16e28:	ldr	r7, [r2]
   16e2c:	add	r2, sp, #36	; 0x24
   16e30:	ldr	r3, [r5]
   16e34:	str	r2, [sp, #4]
   16e38:	mov	r2, r7
   16e3c:	cmp	r3, #0
   16e40:	blt	16e5c <close@plt+0x5f28>
   16e44:	bl	10ebc <fcntl64@plt>
   16e48:	subs	r4, r0, #0
   16e4c:	blt	16ec4 <close@plt+0x5f90>
   16e50:	mov	r3, #1
   16e54:	str	r3, [r5]
   16e58:	b	16d88 <close@plt+0x5e54>
   16e5c:	mov	r1, #0
   16e60:	bl	10ebc <fcntl64@plt>
   16e64:	subs	r4, r0, #0
   16e68:	blt	16d88 <close@plt+0x5e54>
   16e6c:	ldr	r3, [r5]
   16e70:	cmn	r3, #1
   16e74:	bne	16d88 <close@plt+0x5e54>
   16e78:	mov	r1, #1
   16e7c:	mov	r0, r4
   16e80:	bl	10ebc <fcntl64@plt>
   16e84:	subs	r2, r0, #0
   16e88:	blt	16ea4 <close@plt+0x5f70>
   16e8c:	orr	r2, r2, #1
   16e90:	mov	r1, #2
   16e94:	mov	r0, r4
   16e98:	bl	10ebc <fcntl64@plt>
   16e9c:	cmn	r0, #1
   16ea0:	bne	16d88 <close@plt+0x5e54>
   16ea4:	bl	10e50 <__errno_location@plt>
   16ea8:	mov	r5, r0
   16eac:	mov	r0, r4
   16eb0:	ldr	r6, [r5]
   16eb4:	mvn	r4, #0
   16eb8:	bl	10f34 <close@plt>
   16ebc:	str	r6, [r5]
   16ec0:	b	16d88 <close@plt+0x5e54>
   16ec4:	bl	10e50 <__errno_location@plt>
   16ec8:	ldr	r3, [r0]
   16ecc:	cmp	r3, #22
   16ed0:	bne	16e50 <close@plt+0x5f1c>
   16ed4:	mov	r2, r7
   16ed8:	mov	r0, r6
   16edc:	mov	r1, #0
   16ee0:	bl	10ebc <fcntl64@plt>
   16ee4:	subs	r4, r0, #0
   16ee8:	mvnge	r3, #0
   16eec:	strge	r3, [r5]
   16ef0:	bge	16e78 <close@plt+0x5f44>
   16ef4:	b	16d88 <close@plt+0x5e54>
   16ef8:	mov	r0, #14
   16efc:	str	r4, [sp, #-8]!
   16f00:	str	lr, [sp, #4]
   16f04:	bl	10eec <nl_langinfo@plt>
   16f08:	cmp	r0, #0
   16f0c:	beq	16f30 <close@plt+0x5ffc>
   16f10:	ldrb	r2, [r0]
   16f14:	movw	r3, #32116	; 0x7d74
   16f18:	movt	r3, #1
   16f1c:	ldr	r4, [sp]
   16f20:	add	sp, sp, #4
   16f24:	cmp	r2, #0
   16f28:	moveq	r0, r3
   16f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f30:	ldr	r4, [sp]
   16f34:	add	sp, sp, #4
   16f38:	movw	r0, #32116	; 0x7d74
   16f3c:	movt	r0, #1
   16f40:	pop	{pc}		; (ldr pc, [sp], #4)
   16f44:	strd	r4, [sp, #-20]!	; 0xffffffec
   16f48:	mov	r5, r2
   16f4c:	strd	r6, [sp, #8]
   16f50:	subs	r6, r0, #0
   16f54:	mov	r7, r1
   16f58:	str	lr, [sp, #16]
   16f5c:	sub	sp, sp, #12
   16f60:	addeq	r6, sp, #4
   16f64:	mov	r0, r6
   16f68:	bl	10dd8 <mbrtowc@plt>
   16f6c:	cmp	r5, #0
   16f70:	cmnne	r0, #3
   16f74:	mov	r4, r0
   16f78:	bhi	16f94 <close@plt+0x6060>
   16f7c:	mov	r0, r4
   16f80:	add	sp, sp, #12
   16f84:	ldrd	r4, [sp]
   16f88:	ldrd	r6, [sp, #8]
   16f8c:	add	sp, sp, #16
   16f90:	pop	{pc}		; (ldr pc, [sp], #4)
   16f94:	mov	r0, #0
   16f98:	bl	16fec <close@plt+0x60b8>
   16f9c:	cmp	r0, #0
   16fa0:	bne	16f7c <close@plt+0x6048>
   16fa4:	ldrb	r3, [r7]
   16fa8:	mov	r4, #1
   16fac:	str	r3, [r6]
   16fb0:	b	16f7c <close@plt+0x6048>
   16fb4:	umull	r2, r3, r1, r2
   16fb8:	cmp	r3, #0
   16fbc:	bne	16fc8 <close@plt+0x6094>
   16fc0:	mov	r1, r2
   16fc4:	b	16c30 <close@plt+0x5cfc>
   16fc8:	str	r4, [sp, #-8]!
   16fcc:	str	lr, [sp, #4]
   16fd0:	bl	10e50 <__errno_location@plt>
   16fd4:	mov	r3, #12
   16fd8:	ldr	r4, [sp]
   16fdc:	add	sp, sp, #4
   16fe0:	str	r3, [r0]
   16fe4:	mov	r0, #0
   16fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   16fec:	push	{lr}		; (str lr, [sp, #-4]!)
   16ff0:	sub	sp, sp, #268	; 0x10c
   16ff4:	movw	r2, #257	; 0x101
   16ff8:	add	r1, sp, #4
   16ffc:	bl	17044 <close@plt+0x6110>
   17000:	cmp	r0, #0
   17004:	movne	r0, #0
   17008:	bne	1703c <close@plt+0x6108>
   1700c:	movw	r1, #32124	; 0x7d7c
   17010:	movt	r1, #1
   17014:	add	r0, sp, #4
   17018:	bl	10ce8 <strcmp@plt>
   1701c:	cmp	r0, #0
   17020:	beq	1703c <close@plt+0x6108>
   17024:	add	r0, sp, #4
   17028:	movw	r1, #32128	; 0x7d80
   1702c:	movt	r1, #1
   17030:	bl	10ce8 <strcmp@plt>
   17034:	adds	r0, r0, #0
   17038:	movne	r0, #1
   1703c:	add	sp, sp, #268	; 0x10c
   17040:	pop	{pc}		; (ldr pc, [sp], #4)
   17044:	strd	r4, [sp, #-16]!
   17048:	mov	r5, r1
   1704c:	mov	r1, #0
   17050:	mov	r4, r2
   17054:	str	r6, [sp, #8]
   17058:	str	lr, [sp, #12]
   1705c:	bl	10ed4 <setlocale@plt>
   17060:	subs	r6, r0, #0
   17064:	beq	170e4 <close@plt+0x61b0>
   17068:	bl	10e44 <strlen@plt>
   1706c:	cmp	r4, r0
   17070:	bhi	17090 <close@plt+0x615c>
   17074:	cmp	r4, #0
   17078:	moveq	r0, #34	; 0x22
   1707c:	bne	170b4 <close@plt+0x6180>
   17080:	ldrd	r4, [sp]
   17084:	ldr	r6, [sp, #8]
   17088:	add	sp, sp, #12
   1708c:	pop	{pc}		; (ldr pc, [sp], #4)
   17090:	add	r2, r0, #1
   17094:	mov	r1, r6
   17098:	mov	r0, r5
   1709c:	bl	10d30 <memcpy@plt>
   170a0:	ldrd	r4, [sp]
   170a4:	mov	r0, #0
   170a8:	ldr	r6, [sp, #8]
   170ac:	add	sp, sp, #12
   170b0:	pop	{pc}		; (ldr pc, [sp], #4)
   170b4:	sub	r4, r4, #1
   170b8:	mov	r1, r6
   170bc:	mov	r2, r4
   170c0:	mov	r0, r5
   170c4:	bl	10d30 <memcpy@plt>
   170c8:	mov	r3, #0
   170cc:	mov	r0, #34	; 0x22
   170d0:	strb	r3, [r5, r4]
   170d4:	ldrd	r4, [sp]
   170d8:	ldr	r6, [sp, #8]
   170dc:	add	sp, sp, #12
   170e0:	pop	{pc}		; (ldr pc, [sp], #4)
   170e4:	cmp	r4, #0
   170e8:	mov	r0, #22
   170ec:	strbne	r6, [r5]
   170f0:	ldrd	r4, [sp]
   170f4:	ldr	r6, [sp, #8]
   170f8:	add	sp, sp, #12
   170fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17100:	mov	r1, #0
   17104:	b	10ed4 <setlocale@plt>
   17108:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1710c:	mov	r7, r0
   17110:	ldr	r6, [pc, #72]	; 17160 <close@plt+0x622c>
   17114:	ldr	r5, [pc, #72]	; 17164 <close@plt+0x6230>
   17118:	add	r6, pc, r6
   1711c:	add	r5, pc, r5
   17120:	sub	r6, r6, r5
   17124:	mov	r8, r1
   17128:	mov	r9, r2
   1712c:	bl	10ca4 <fdopen@plt-0x20>
   17130:	asrs	r6, r6, #2
   17134:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17138:	mov	r4, #0
   1713c:	add	r4, r4, #1
   17140:	ldr	r3, [r5], #4
   17144:	mov	r2, r9
   17148:	mov	r1, r8
   1714c:	mov	r0, r7
   17150:	blx	r3
   17154:	cmp	r6, r4
   17158:	bne	1713c <close@plt+0x6208>
   1715c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17160:	strdeq	r0, [r1], -r4
   17164:	andeq	r0, r1, ip, ror #27
   17168:	bx	lr
   1716c:	ldr	r3, [pc, #12]	; 17180 <close@plt+0x624c>
   17170:	mov	r1, #0
   17174:	add	r3, pc, r3
   17178:	ldr	r2, [r3]
   1717c:	b	10e5c <__cxa_atexit@plt>
   17180:	andeq	r0, r1, ip, ror #30

Disassembly of section .fini:

00017184 <.fini>:
   17184:	push	{r3, lr}
   17188:	pop	{r3, pc}
