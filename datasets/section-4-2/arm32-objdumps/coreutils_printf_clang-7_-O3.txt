
../repos/coreutils/src/printf:     file format elf32-littlearm


Disassembly of section .init:

00010dac <.init>:
   10dac:	push	{r3, lr}
   10db0:	bl	11084 <__mempcpy_chk@plt+0x48>
   10db4:	pop	{r3, pc}

Disassembly of section .plt:

00010db8 <calloc@plt-0x14>:
   10db8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dbc:	ldr	lr, [pc, #4]	; 10dc8 <calloc@plt-0x4>
   10dc0:	add	lr, pc, lr
   10dc4:	ldr	pc, [lr, #8]!
   10dc8:	andeq	r7, r1, r8, lsr r2

00010dcc <calloc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #94208	; 0x17000
   10dd4:	ldr	pc, [ip, #568]!	; 0x238

00010dd8 <fputs_unlocked@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #94208	; 0x17000
   10de0:	ldr	pc, [ip, #560]!	; 0x230

00010de4 <uselocale@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #94208	; 0x17000
   10dec:	ldr	pc, [ip, #552]!	; 0x228

00010df0 <iconv@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #94208	; 0x17000
   10df8:	ldr	pc, [ip, #544]!	; 0x220

00010dfc <strcmp@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #94208	; 0x17000
   10e04:	ldr	pc, [ip, #536]!	; 0x218

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #94208	; 0x17000
   10e10:	ldr	pc, [ip, #528]!	; 0x210

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #94208	; 0x17000
   10e1c:	ldr	pc, [ip, #520]!	; 0x208

00010e20 <ferror@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #94208	; 0x17000
   10e28:	ldr	pc, [ip, #512]!	; 0x200

00010e2c <_exit@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #94208	; 0x17000
   10e34:	ldr	pc, [ip, #504]!	; 0x1f8

00010e38 <memcpy@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #94208	; 0x17000
   10e40:	ldr	pc, [ip, #496]!	; 0x1f0

00010e44 <__strtoull_internal@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #94208	; 0x17000
   10e4c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e50 <mbsinit@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #94208	; 0x17000
   10e58:	ldr	pc, [ip, #480]!	; 0x1e0

00010e5c <strtold@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #94208	; 0x17000
   10e64:	ldr	pc, [ip, #472]!	; 0x1d8

00010e68 <memcmp@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #94208	; 0x17000
   10e70:	ldr	pc, [ip, #464]!	; 0x1d0

00010e74 <dcgettext@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #94208	; 0x17000
   10e7c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e80 <realloc@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #94208	; 0x17000
   10e88:	ldr	pc, [ip, #448]!	; 0x1c0

00010e8c <textdomain@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #94208	; 0x17000
   10e94:	ldr	pc, [ip, #440]!	; 0x1b8

00010e98 <iswprint@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #94208	; 0x17000
   10ea0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea4 <fwrite@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #94208	; 0x17000
   10eac:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb0 <lseek64@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #94208	; 0x17000
   10eb8:	ldr	pc, [ip, #416]!	; 0x1a0

00010ebc <__ctype_get_mb_cur_max@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #94208	; 0x17000
   10ec4:	ldr	pc, [ip, #408]!	; 0x198

00010ec8 <__fpending@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #94208	; 0x17000
   10ed0:	ldr	pc, [ip, #400]!	; 0x190

00010ed4 <mbrtowc@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #94208	; 0x17000
   10edc:	ldr	pc, [ip, #392]!	; 0x188

00010ee0 <error@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #94208	; 0x17000
   10ee8:	ldr	pc, [ip, #384]!	; 0x180

00010eec <getenv@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #376]!	; 0x178

00010ef8 <malloc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #368]!	; 0x170

00010f04 <iconv_open@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #360]!	; 0x168

00010f10 <__libc_start_main@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #352]!	; 0x160

00010f1c <__vfprintf_chk@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #344]!	; 0x158

00010f28 <__freading@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #336]!	; 0x150

00010f34 <__gmon_start__@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #328]!	; 0x148

00010f40 <__ctype_b_loc@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #320]!	; 0x140

00010f4c <exit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #312]!	; 0x138

00010f58 <strlen@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #304]!	; 0x130

00010f64 <__errno_location@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #296]!	; 0x128

00010f70 <__cxa_atexit@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #288]!	; 0x120

00010f7c <memset@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #280]!	; 0x118

00010f88 <__printf_chk@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #272]!	; 0x110

00010f94 <fileno@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #264]!	; 0x108

00010fa0 <__fprintf_chk@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #256]!	; 0x100

00010fac <memchr@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #248]!	; 0xf8

00010fb8 <fclose@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #240]!	; 0xf0

00010fc4 <fseeko64@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #232]!	; 0xe8

00010fd0 <__overflow@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #224]!	; 0xe0

00010fdc <setlocale@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #216]!	; 0xd8

00010fe8 <strrchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #208]!	; 0xd0

00010ff4 <nl_langinfo@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #200]!	; 0xc8

00011000 <newlocale@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #192]!	; 0xc0

0001100c <__strtoll_internal@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #184]!	; 0xb8

00011018 <bindtextdomain@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #176]!	; 0xb0

00011024 <strncmp@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #168]!	; 0xa8

00011030 <abort@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #160]!	; 0xa0

0001103c <__mempcpy_chk@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #152]!	; 0x98

Disassembly of section .text:

00011048 <.text>:
   11048:	mov	fp, #0
   1104c:	mov	lr, #0
   11050:	pop	{r1}		; (ldr r1, [sp], #4)
   11054:	mov	r2, sp
   11058:	push	{r2}		; (str r2, [sp, #-4]!)
   1105c:	push	{r0}		; (str r0, [sp, #-4]!)
   11060:	ldr	ip, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x3c>
   11064:	push	{ip}		; (str ip, [sp, #-4]!)
   11068:	ldr	r0, [pc, #12]	; 1107c <__mempcpy_chk@plt+0x40>
   1106c:	ldr	r3, [pc, #12]	; 11080 <__mempcpy_chk@plt+0x44>
   11070:	bl	10f10 <__libc_start_main@plt>
   11074:	bl	11030 <abort@plt>
   11078:	andeq	r6, r1, r4, asr #9
   1107c:	andeq	r1, r1, r4, lsl r4
   11080:	andeq	r6, r1, r4, ror #8
   11084:	ldr	r3, [pc, #20]	; 110a0 <__mempcpy_chk@plt+0x64>
   11088:	ldr	r2, [pc, #20]	; 110a4 <__mempcpy_chk@plt+0x68>
   1108c:	add	r3, pc, r3
   11090:	ldr	r2, [r3, r2]
   11094:	cmp	r2, #0
   11098:	bxeq	lr
   1109c:	b	10f34 <__gmon_start__@plt>
   110a0:	andeq	r6, r1, ip, ror #30
   110a4:	andeq	r0, r0, r0, ror #1
   110a8:	ldr	r0, [pc, #24]	; 110c8 <__mempcpy_chk@plt+0x8c>
   110ac:	ldr	r3, [pc, #24]	; 110cc <__mempcpy_chk@plt+0x90>
   110b0:	cmp	r3, r0
   110b4:	bxeq	lr
   110b8:	ldr	r3, [pc, #16]	; 110d0 <__mempcpy_chk@plt+0x94>
   110bc:	cmp	r3, #0
   110c0:	bxeq	lr
   110c4:	bx	r3
   110c8:	andeq	r8, r2, r8, lsr r1
   110cc:	andeq	r8, r2, r8, lsr r1
   110d0:	andeq	r0, r0, r0
   110d4:	ldr	r0, [pc, #36]	; 11100 <__mempcpy_chk@plt+0xc4>
   110d8:	ldr	r1, [pc, #36]	; 11104 <__mempcpy_chk@plt+0xc8>
   110dc:	sub	r1, r1, r0
   110e0:	asr	r1, r1, #2
   110e4:	add	r1, r1, r1, lsr #31
   110e8:	asrs	r1, r1, #1
   110ec:	bxeq	lr
   110f0:	ldr	r3, [pc, #16]	; 11108 <__mempcpy_chk@plt+0xcc>
   110f4:	cmp	r3, #0
   110f8:	bxeq	lr
   110fc:	bx	r3
   11100:	andeq	r8, r2, r8, lsr r1
   11104:	andeq	r8, r2, r8, lsr r1
   11108:	andeq	r0, r0, r0
   1110c:	push	{r4, lr}
   11110:	ldr	r4, [pc, #24]	; 11130 <__mempcpy_chk@plt+0xf4>
   11114:	ldrb	r3, [r4]
   11118:	cmp	r3, #0
   1111c:	popne	{r4, pc}
   11120:	bl	110a8 <__mempcpy_chk@plt+0x6c>
   11124:	mov	r3, #1
   11128:	strb	r3, [r4]
   1112c:	pop	{r4, pc}
   11130:	andeq	r8, r2, r8, asr #2
   11134:	b	110d4 <__mempcpy_chk@plt+0x98>
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	sub	sp, sp, #56	; 0x38
   11144:	mov	r4, r0
   11148:	cmp	r0, #0
   1114c:	bne	113d0 <__mempcpy_chk@plt+0x394>
   11150:	movw	r1, #25875	; 0x6513
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10e74 <dcgettext@plt>
   11164:	mov	r1, r0
   11168:	movw	r0, #33112	; 0x8158
   1116c:	movt	r0, #2
   11170:	ldr	r2, [r0]
   11174:	mov	r0, #1
   11178:	mov	r3, r2
   1117c:	bl	10f88 <__printf_chk@plt>
   11180:	movw	r1, #25924	; 0x6544
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e74 <dcgettext@plt>
   11194:	movw	r7, #33092	; 0x8144
   11198:	movt	r7, #2
   1119c:	ldr	r1, [r7]
   111a0:	bl	10dd8 <fputs_unlocked@plt>
   111a4:	movw	r1, #25997	; 0x658d
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	movt	r1, #1
   111b4:	bl	10e74 <dcgettext@plt>
   111b8:	ldr	r1, [r7]
   111bc:	bl	10dd8 <fputs_unlocked@plt>
   111c0:	movw	r1, #26042	; 0x65ba
   111c4:	mov	r0, #0
   111c8:	mov	r2, #5
   111cc:	movt	r1, #1
   111d0:	bl	10e74 <dcgettext@plt>
   111d4:	ldr	r1, [r7]
   111d8:	bl	10dd8 <fputs_unlocked@plt>
   111dc:	movw	r1, #26096	; 0x65f0
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	movt	r1, #1
   111ec:	bl	10e74 <dcgettext@plt>
   111f0:	ldr	r1, [r7]
   111f4:	bl	10dd8 <fputs_unlocked@plt>
   111f8:	movw	r1, #26193	; 0x6651
   111fc:	mov	r0, #0
   11200:	mov	r2, #5
   11204:	movt	r1, #1
   11208:	bl	10e74 <dcgettext@plt>
   1120c:	ldr	r1, [r7]
   11210:	bl	10dd8 <fputs_unlocked@plt>
   11214:	movw	r1, #26422	; 0x6736
   11218:	mov	r0, #0
   1121c:	mov	r2, #5
   11220:	movt	r1, #1
   11224:	bl	10e74 <dcgettext@plt>
   11228:	ldr	r1, [r7]
   1122c:	bl	10dd8 <fputs_unlocked@plt>
   11230:	movw	r1, #26674	; 0x6832
   11234:	mov	r0, #0
   11238:	mov	r2, #5
   1123c:	movt	r1, #1
   11240:	bl	10e74 <dcgettext@plt>
   11244:	ldr	r1, [r7]
   11248:	bl	10dd8 <fputs_unlocked@plt>
   1124c:	movw	r1, #27122	; 0x69f2
   11250:	mov	r0, #0
   11254:	mov	r2, #5
   11258:	movt	r1, #1
   1125c:	bl	10e74 <dcgettext@plt>
   11260:	movw	r5, #27313	; 0x6ab1
   11264:	mov	r1, r0
   11268:	mov	r0, #1
   1126c:	movt	r5, #1
   11270:	mov	r2, r5
   11274:	bl	10f88 <__printf_chk@plt>
   11278:	movw	r0, #28112	; 0x6dd0
   1127c:	mov	r2, #48	; 0x30
   11280:	mov	r6, sp
   11284:	movt	r0, #1
   11288:	add	r1, r0, #32
   1128c:	add	r3, r0, #16
   11290:	vld1.64	{d18-d19}, [r0], r2
   11294:	vld1.64	{d16-d17}, [r1]
   11298:	vld1.64	{d20-d21}, [r3]
   1129c:	add	r1, r6, #32
   112a0:	vldr	d22, [r0]
   112a4:	add	r0, r6, #16
   112a8:	vst1.64	{d16-d17}, [r1]
   112ac:	movw	r1, #27479	; 0x6b57
   112b0:	vst1.64	{d20-d21}, [r0]
   112b4:	mov	r0, r6
   112b8:	vst1.64	{d18-d19}, [r0], r2
   112bc:	movt	r1, #1
   112c0:	vstr	d22, [r0]
   112c4:	mov	r0, r5
   112c8:	bl	10dfc <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	ldrne	r1, [r6, #8]!
   112d4:	cmpne	r1, #0
   112d8:	bne	112c4 <__mempcpy_chk@plt+0x288>
   112dc:	ldr	r6, [r6, #4]
   112e0:	movw	r1, #27574	; 0x6bb6
   112e4:	mov	r0, #0
   112e8:	mov	r2, #5
   112ec:	movt	r1, #1
   112f0:	bl	10e74 <dcgettext@plt>
   112f4:	movw	r2, #27377	; 0x6af1
   112f8:	movw	r3, #27597	; 0x6bcd
   112fc:	mov	r1, r0
   11300:	mov	r0, #1
   11304:	movt	r2, #1
   11308:	movt	r3, #1
   1130c:	bl	10f88 <__printf_chk@plt>
   11310:	cmp	r6, #0
   11314:	mov	r0, #5
   11318:	mov	r1, #0
   1131c:	moveq	r6, r5
   11320:	bl	10fdc <setlocale@plt>
   11324:	cmp	r0, #0
   11328:	beq	11360 <__mempcpy_chk@plt+0x324>
   1132c:	movw	r1, #27637	; 0x6bf5
   11330:	mov	r2, #3
   11334:	movt	r1, #1
   11338:	bl	11024 <strncmp@plt>
   1133c:	cmp	r0, #0
   11340:	beq	11360 <__mempcpy_chk@plt+0x324>
   11344:	movw	r1, #27641	; 0x6bf9
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	movt	r1, #1
   11354:	bl	10e74 <dcgettext@plt>
   11358:	ldr	r1, [r7]
   1135c:	bl	10dd8 <fputs_unlocked@plt>
   11360:	movw	r1, #27712	; 0x6c40
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	movt	r1, #1
   11370:	bl	10e74 <dcgettext@plt>
   11374:	movw	r2, #27597	; 0x6bcd
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	mov	r3, r5
   11384:	movt	r2, #1
   11388:	bl	10f88 <__printf_chk@plt>
   1138c:	movw	r1, #27739	; 0x6c5b
   11390:	mov	r0, #0
   11394:	mov	r2, #5
   11398:	movt	r1, #1
   1139c:	bl	10e74 <dcgettext@plt>
   113a0:	movw	r3, #25996	; 0x658c
   113a4:	mov	r1, r0
   113a8:	movw	r0, #27507	; 0x6b73
   113ac:	cmp	r6, r5
   113b0:	mov	r2, r6
   113b4:	movt	r0, #1
   113b8:	movt	r3, #1
   113bc:	moveq	r3, r0
   113c0:	mov	r0, #1
   113c4:	bl	10f88 <__printf_chk@plt>
   113c8:	mov	r0, r4
   113cc:	bl	10f4c <exit@plt>
   113d0:	movw	r0, #33088	; 0x8140
   113d4:	movw	r1, #25836	; 0x64ec
   113d8:	mov	r2, #5
   113dc:	movt	r0, #2
   113e0:	movt	r1, #1
   113e4:	ldr	r5, [r0]
   113e8:	mov	r0, #0
   113ec:	bl	10e74 <dcgettext@plt>
   113f0:	mov	r2, r0
   113f4:	movw	r0, #33112	; 0x8158
   113f8:	mov	r1, #1
   113fc:	movt	r0, #2
   11400:	ldr	r3, [r0]
   11404:	mov	r0, r5
   11408:	bl	10fa0 <__fprintf_chk@plt>
   1140c:	mov	r0, r4
   11410:	bl	10f4c <exit@plt>
   11414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11418:	add	fp, sp, #28
   1141c:	sub	sp, sp, #4
   11420:	vpush	{d8}
   11424:	sub	sp, sp, #328	; 0x148
   11428:	mov	r8, r0
   1142c:	ldr	r0, [r1]
   11430:	mov	r7, r1
   11434:	bl	12c90 <__mempcpy_chk@plt+0x1c54>
   11438:	movw	r1, #25996	; 0x658c
   1143c:	mov	r0, #6
   11440:	movt	r1, #1
   11444:	bl	10fdc <setlocale@plt>
   11448:	movw	r6, #27381	; 0x6af5
   1144c:	movw	r1, #27320	; 0x6ab8
   11450:	movt	r6, #1
   11454:	movt	r1, #1
   11458:	mov	r0, r6
   1145c:	bl	11018 <bindtextdomain@plt>
   11460:	mov	r0, r6
   11464:	bl	10e8c <textdomain@plt>
   11468:	movw	r0, #11132	; 0x2b7c
   1146c:	movt	r0, #1
   11470:	bl	164c8 <__mempcpy_chk@plt+0x548c>
   11474:	movw	r4, #33100	; 0x814c
   11478:	mov	r0, #0
   1147c:	movt	r4, #2
   11480:	strb	r0, [r4]
   11484:	movw	r0, #27344	; 0x6ad0
   11488:	movt	r0, #1
   1148c:	bl	10eec <getenv@plt>
   11490:	cmp	r0, #0
   11494:	movwne	r0, #1
   11498:	cmp	r8, #2
   1149c:	strb	r0, [r4, #1]
   114a0:	bne	1151c <__mempcpy_chk@plt+0x4e0>
   114a4:	mov	r4, r7
   114a8:	movw	r1, #27360	; 0x6ae0
   114ac:	ldr	r6, [r4, #4]!
   114b0:	movt	r1, #1
   114b4:	mov	r0, r6
   114b8:	bl	10dfc <strcmp@plt>
   114bc:	cmp	r0, #0
   114c0:	beq	122a0 <__mempcpy_chk@plt+0x1264>
   114c4:	movw	r1, #27367	; 0x6ae7
   114c8:	mov	r0, r6
   114cc:	movt	r1, #1
   114d0:	bl	10dfc <strcmp@plt>
   114d4:	cmp	r0, #0
   114d8:	bne	11528 <__mempcpy_chk@plt+0x4ec>
   114dc:	movw	r0, #33008	; 0x80f0
   114e0:	movw	r1, #27391	; 0x6aff
   114e4:	mov	r4, #0
   114e8:	movw	r2, #27377	; 0x6af1
   114ec:	movt	r0, #2
   114f0:	movt	r1, #1
   114f4:	movt	r2, #1
   114f8:	ldr	r3, [r0]
   114fc:	movw	r0, #33092	; 0x8144
   11500:	movt	r0, #2
   11504:	ldr	r0, [r0]
   11508:	stm	sp, {r1, r4}
   1150c:	movw	r1, #27313	; 0x6ab1
   11510:	movt	r1, #1
   11514:	bl	154a4 <__mempcpy_chk@plt+0x4468>
   11518:	b	121f0 <__mempcpy_chk@plt+0x11b4>
   1151c:	blt	12274 <__mempcpy_chk@plt+0x1238>
   11520:	mov	r4, r7
   11524:	ldr	r6, [r4, #4]!
   11528:	movw	r1, #27407	; 0x6b0f
   1152c:	mov	r0, r6
   11530:	mov	r5, r6
   11534:	movt	r1, #1
   11538:	bl	10dfc <strcmp@plt>
   1153c:	cmp	r0, #0
   11540:	beq	1154c <__mempcpy_chk@plt+0x510>
   11544:	mov	r4, r7
   11548:	b	1155c <__mempcpy_chk@plt+0x520>
   1154c:	cmp	r8, #3
   11550:	blt	12274 <__mempcpy_chk@plt+0x1238>
   11554:	ldr	r5, [r7, #8]
   11558:	sub	r8, r8, #1
   1155c:	add	r7, sp, #64	; 0x40
   11560:	movw	r6, #33092	; 0x8144
   11564:	add	r1, r4, #8
   11568:	mov	r4, #0
   1156c:	str	r5, [sp, #12]
   11570:	add	r0, r7, #99	; 0x63
   11574:	movt	r6, #2
   11578:	str	r0, [sp, #24]
   1157c:	sub	r0, r8, #2
   11580:	mov	sl, r0
   11584:	str	r0, [sp, #20]
   11588:	mov	r0, #0
   1158c:	mov	r8, r1
   11590:	str	r1, [sp, #16]
   11594:	str	r0, [sp, #32]
   11598:	mov	r0, #0
   1159c:	str	r0, [sp, #28]
   115a0:	ldrb	r1, [r5]
   115a4:	cmp	r1, #37	; 0x25
   115a8:	bne	115c0 <__mempcpy_chk@plt+0x584>
   115ac:	b	11618 <__mempcpy_chk@plt+0x5dc>
   115b0:	add	r5, r9, #1
   115b4:	ldrb	r1, [r5]
   115b8:	cmp	r1, #37	; 0x25
   115bc:	beq	11618 <__mempcpy_chk@plt+0x5dc>
   115c0:	cmp	r1, #92	; 0x5c
   115c4:	beq	115f8 <__mempcpy_chk@plt+0x5bc>
   115c8:	cmp	r1, #0
   115cc:	beq	1217c <__mempcpy_chk@plt+0x1140>
   115d0:	ldr	r0, [r6]
   115d4:	ldr	r2, [r0, #20]
   115d8:	ldr	r3, [r0, #24]
   115dc:	cmp	r2, r3
   115e0:	bcs	12158 <__mempcpy_chk@plt+0x111c>
   115e4:	add	r3, r2, #1
   115e8:	str	r3, [r0, #20]
   115ec:	strb	r1, [r2]
   115f0:	mov	r9, r5
   115f4:	b	115b0 <__mempcpy_chk@plt+0x574>
   115f8:	mov	r0, r5
   115fc:	mov	r1, #0
   11600:	bl	12378 <__mempcpy_chk@plt+0x133c>
   11604:	add	r9, r5, r0
   11608:	add	r5, r9, #1
   1160c:	ldrb	r1, [r5]
   11610:	cmp	r1, #37	; 0x25
   11614:	bne	115c0 <__mempcpy_chk@plt+0x584>
   11618:	mov	r9, r5
   1161c:	ldrb	r0, [r9, #1]!
   11620:	cmp	r0, #113	; 0x71
   11624:	beq	116fc <__mempcpy_chk@plt+0x6c0>
   11628:	cmp	r0, #98	; 0x62
   1162c:	beq	11670 <__mempcpy_chk@plt+0x634>
   11630:	cmp	r0, #37	; 0x25
   11634:	bne	11730 <__mempcpy_chk@plt+0x6f4>
   11638:	ldr	r0, [r6]
   1163c:	ldr	r1, [r0, #20]
   11640:	ldr	r2, [r0, #24]
   11644:	cmp	r1, r2
   11648:	bcs	12160 <__mempcpy_chk@plt+0x1124>
   1164c:	add	r2, r1, #1
   11650:	add	r5, r9, #1
   11654:	str	r2, [r0, #20]
   11658:	mov	r0, #37	; 0x25
   1165c:	strb	r0, [r1]
   11660:	ldrb	r1, [r5]
   11664:	cmp	r1, #37	; 0x25
   11668:	bne	115c0 <__mempcpy_chk@plt+0x584>
   1166c:	b	11618 <__mempcpy_chk@plt+0x5dc>
   11670:	cmp	sl, #1
   11674:	blt	115b0 <__mempcpy_chk@plt+0x574>
   11678:	ldr	r5, [r8]
   1167c:	ldrb	r1, [r5]
   11680:	cmp	r1, #92	; 0x5c
   11684:	bne	116a8 <__mempcpy_chk@plt+0x66c>
   11688:	mov	r0, r5
   1168c:	mov	r1, #1
   11690:	bl	12378 <__mempcpy_chk@plt+0x133c>
   11694:	add	r0, r5, r0
   11698:	add	r5, r0, #1
   1169c:	ldrb	r1, [r5]
   116a0:	cmp	r1, #92	; 0x5c
   116a4:	beq	11688 <__mempcpy_chk@plt+0x64c>
   116a8:	cmp	r1, #0
   116ac:	beq	118b0 <__mempcpy_chk@plt+0x874>
   116b0:	ldr	r0, [r6]
   116b4:	ldr	r2, [r0, #20]
   116b8:	ldr	r3, [r0, #24]
   116bc:	cmp	r2, r3
   116c0:	bcs	116e4 <__mempcpy_chk@plt+0x6a8>
   116c4:	add	r3, r2, #1
   116c8:	add	r5, r5, #1
   116cc:	str	r3, [r0, #20]
   116d0:	strb	r1, [r2]
   116d4:	ldrb	r1, [r5]
   116d8:	cmp	r1, #92	; 0x5c
   116dc:	bne	116a8 <__mempcpy_chk@plt+0x66c>
   116e0:	b	11688 <__mempcpy_chk@plt+0x64c>
   116e4:	bl	10fd0 <__overflow@plt>
   116e8:	add	r5, r5, #1
   116ec:	ldrb	r1, [r5]
   116f0:	cmp	r1, #92	; 0x5c
   116f4:	bne	116a8 <__mempcpy_chk@plt+0x66c>
   116f8:	b	11688 <__mempcpy_chk@plt+0x64c>
   116fc:	cmp	sl, #1
   11700:	blt	115b0 <__mempcpy_chk@plt+0x574>
   11704:	ldr	r1, [r8], #4
   11708:	mov	r0, #3
   1170c:	bl	146e4 <__mempcpy_chk@plt+0x36a8>
   11710:	ldr	r1, [r6]
   11714:	bl	10dd8 <fputs_unlocked@plt>
   11718:	sub	sl, sl, #1
   1171c:	add	r5, r9, #1
   11720:	ldrb	r1, [r5]
   11724:	cmp	r1, #37	; 0x25
   11728:	bne	115c0 <__mempcpy_chk@plt+0x584>
   1172c:	b	11618 <__mempcpy_chk@plt+0x5dc>
   11730:	mov	r0, r7
   11734:	mov	r1, #0
   11738:	mov	r2, #256	; 0x100
   1173c:	str	sl, [sp, #60]	; 0x3c
   11740:	mov	r6, #0
   11744:	bl	10f7c <memset@plt>
   11748:	mov	sl, #1
   1174c:	movw	r0, #257	; 0x101
   11750:	movw	r1, #257	; 0x101
   11754:	strb	sl, [sp, #152]	; 0x98
   11758:	strb	sl, [sp, #184]	; 0xb8
   1175c:	strb	sl, [sp, #181]	; 0xb5
   11760:	strb	sl, [sp, #179]	; 0xb3
   11764:	strb	sl, [sp, #175]	; 0xaf
   11768:	strb	sl, [sp, #169]	; 0xa9
   1176c:	strb	sl, [sp, #135]	; 0x87
   11770:	strh	r0, [sp, #133]	; 0x85
   11774:	ldr	r0, [sp, #24]
   11778:	movt	r1, #257	; 0x101
   1177c:	strb	sl, [sp, #129]	; 0x81
   11780:	strb	sl, [sp, #161]	; 0xa1
   11784:	strb	sl, [r0, #4]
   11788:	str	r1, [r0]
   1178c:	ldrb	r0, [r5, sl]
   11790:	sub	r1, r0, #32
   11794:	cmp	r1, #41	; 0x29
   11798:	bls	117b8 <__mempcpy_chk@plt+0x77c>
   1179c:	b	118cc <__mempcpy_chk@plt+0x890>
   117a0:	add	r6, r6, #1
   117a4:	add	sl, sl, #1
   117a8:	ldrb	r0, [r5, sl]
   117ac:	sub	r1, r0, #32
   117b0:	cmp	r1, #41	; 0x29
   117b4:	bhi	118cc <__mempcpy_chk@plt+0x890>
   117b8:	add	r2, pc, #0
   117bc:	ldr	pc, [r2, r1, lsl #2]
   117c0:	andeq	r1, r1, r0, lsr #15
   117c4:	andeq	r1, r1, ip, asr #17
   117c8:	andeq	r1, r1, ip, asr #17
   117cc:	muleq	r1, r0, r8
   117d0:	andeq	r1, r1, ip, asr #17
   117d4:	andeq	r1, r1, ip, asr #17
   117d8:	andeq	r1, r1, ip, asr #17
   117dc:	andeq	r1, r1, r8, ror #16
   117e0:	andeq	r1, r1, ip, asr #17
   117e4:	andeq	r1, r1, ip, asr #17
   117e8:	andeq	r1, r1, r4, lsl r9
   117ec:	andeq	r1, r1, r0, lsr #15
   117f0:	andeq	r1, r1, ip, asr #17
   117f4:	andeq	r1, r1, r0, lsr #15
   117f8:	andeq	r1, r1, ip, asr #17
   117fc:	andeq	r1, r1, ip, asr #17
   11800:	andeq	r1, r1, r4, lsr #17
   11804:	andeq	r1, r1, ip, asr #17
   11808:	andeq	r1, r1, ip, asr #17
   1180c:	andeq	r1, r1, ip, asr #17
   11810:	andeq	r1, r1, ip, asr #17
   11814:	andeq	r1, r1, ip, asr #17
   11818:	andeq	r1, r1, ip, asr #17
   1181c:	andeq	r1, r1, ip, asr #17
   11820:	andeq	r1, r1, ip, asr #17
   11824:	andeq	r1, r1, ip, asr #17
   11828:	andeq	r1, r1, ip, asr #17
   1182c:	andeq	r1, r1, ip, asr #17
   11830:	andeq	r1, r1, ip, asr #17
   11834:	andeq	r1, r1, ip, asr #17
   11838:	andeq	r1, r1, ip, asr #17
   1183c:	andeq	r1, r1, ip, asr #17
   11840:	andeq	r1, r1, ip, asr #17
   11844:	andeq	r1, r1, ip, asr #17
   11848:	andeq	r1, r1, ip, asr #17
   1184c:	andeq	r1, r1, ip, asr #17
   11850:	andeq	r1, r1, ip, asr #17
   11854:	andeq	r1, r1, ip, asr #17
   11858:	andeq	r1, r1, ip, asr #17
   1185c:	andeq	r1, r1, ip, asr #17
   11860:	andeq	r1, r1, ip, asr #17
   11864:	andeq	r1, r1, r8, ror #16
   11868:	strb	r4, [sp, #184]	; 0xb8
   1186c:	strb	r4, [sp, #152]	; 0x98
   11870:	strb	r4, [sp, #179]	; 0xb3
   11874:	strb	r4, [sp, #175]	; 0xaf
   11878:	strb	r4, [sp, #133]	; 0x85
   1187c:	strb	r4, [sp, #165]	; 0xa5
   11880:	strb	r4, [sp, #163]	; 0xa3
   11884:	strb	r4, [sp, #129]	; 0x81
   11888:	strb	r4, [sp, #161]	; 0xa1
   1188c:	b	117a0 <__mempcpy_chk@plt+0x764>
   11890:	strb	r4, [sp, #179]	; 0xb3
   11894:	strb	r4, [sp, #181]	; 0xb5
   11898:	strb	r4, [sp, #169]	; 0xa9
   1189c:	strh	r4, [sp, #163]	; 0xa3
   118a0:	b	117a0 <__mempcpy_chk@plt+0x764>
   118a4:	strb	r4, [sp, #163]	; 0xa3
   118a8:	strb	r4, [sp, #179]	; 0xb3
   118ac:	b	117a0 <__mempcpy_chk@plt+0x764>
   118b0:	sub	sl, sl, #1
   118b4:	add	r8, r8, #4
   118b8:	add	r5, r9, #1
   118bc:	ldrb	r1, [r5]
   118c0:	cmp	r1, #37	; 0x25
   118c4:	bne	115c0 <__mempcpy_chk@plt+0x584>
   118c8:	b	11618 <__mempcpy_chk@plt+0x5dc>
   118cc:	sub	r1, r0, #48	; 0x30
   118d0:	mov	r2, #0
   118d4:	cmp	r1, #9
   118d8:	str	r2, [sp, #40]	; 0x28
   118dc:	bhi	1194c <__mempcpy_chk@plt+0x910>
   118e0:	add	r0, r5, r6
   118e4:	add	r6, r6, #1
   118e8:	ldrb	r0, [r0, #2]
   118ec:	sub	r1, r0, #48	; 0x30
   118f0:	cmp	r1, #10
   118f4:	bcc	118e0 <__mempcpy_chk@plt+0x8a4>
   118f8:	add	r1, r5, r6
   118fc:	add	sl, r6, #1
   11900:	add	r9, r1, #1
   11904:	mov	r6, #0
   11908:	cmp	r0, #46	; 0x2e
   1190c:	bne	1195c <__mempcpy_chk@plt+0x920>
   11910:	b	119a0 <__mempcpy_chk@plt+0x964>
   11914:	ldr	r0, [sp, #60]	; 0x3c
   11918:	cmp	r0, #1
   1191c:	blt	11974 <__mempcpy_chk@plt+0x938>
   11920:	ldr	r0, [r8]
   11924:	bl	122a8 <__mempcpy_chk@plt+0x126c>
   11928:	str	r0, [sp, #32]
   1192c:	adds	r0, r0, #-2147483648	; 0x80000000
   11930:	adcs	r0, r1, #0
   11934:	bne	12204 <__mempcpy_chk@plt+0x11c8>
   11938:	ldr	r0, [sp, #60]	; 0x3c
   1193c:	add	r8, r8, #4
   11940:	sub	r0, r0, #1
   11944:	str	r0, [sp, #60]	; 0x3c
   11948:	b	1197c <__mempcpy_chk@plt+0x940>
   1194c:	add	r9, r5, sl
   11950:	mov	r6, #0
   11954:	cmp	r0, #46	; 0x2e
   11958:	beq	119a0 <__mempcpy_chk@plt+0x964>
   1195c:	str	r8, [sp, #56]	; 0x38
   11960:	ldrb	r8, [r9]
   11964:	sub	r0, r8, #76	; 0x4c
   11968:	cmp	r0, #46	; 0x2e
   1196c:	bls	11ab0 <__mempcpy_chk@plt+0xa74>
   11970:	b	11b74 <__mempcpy_chk@plt+0xb38>
   11974:	mov	r0, #0
   11978:	str	r0, [sp, #32]
   1197c:	add	r0, r5, sl
   11980:	mov	r1, #1
   11984:	add	sl, sl, #1
   11988:	add	r9, r0, #1
   1198c:	ldrb	r0, [r0, #1]
   11990:	str	r1, [sp, #40]	; 0x28
   11994:	mov	r6, #0
   11998:	cmp	r0, #46	; 0x2e
   1199c:	bne	1195c <__mempcpy_chk@plt+0x920>
   119a0:	strb	r4, [sp, #163]	; 0xa3
   119a4:	mov	r0, r9
   119a8:	ldrb	r1, [r0, #1]!
   119ac:	cmp	r1, #42	; 0x2a
   119b0:	bne	119f0 <__mempcpy_chk@plt+0x9b4>
   119b4:	ldr	r0, [sp, #60]	; 0x3c
   119b8:	add	sl, sl, #2
   119bc:	add	r9, r9, #2
   119c0:	mov	r6, #1
   119c4:	cmp	r0, #1
   119c8:	blt	11a4c <__mempcpy_chk@plt+0xa10>
   119cc:	ldr	r0, [r8]
   119d0:	bl	122a8 <__mempcpy_chk@plt+0x126c>
   119d4:	cmp	r1, #0
   119d8:	blt	11a6c <__mempcpy_chk@plt+0xa30>
   119dc:	str	r0, [sp, #28]
   119e0:	subs	r0, r0, #-2147483648	; 0x80000000
   119e4:	sbcs	r0, r1, #0
   119e8:	blt	11a74 <__mempcpy_chk@plt+0xa38>
   119ec:	b	12210 <__mempcpy_chk@plt+0x11d4>
   119f0:	sub	r1, r1, #48	; 0x30
   119f4:	add	sl, sl, #1
   119f8:	str	r8, [sp, #56]	; 0x38
   119fc:	cmp	r1, #9
   11a00:	bhi	11a34 <__mempcpy_chk@plt+0x9f8>
   11a04:	add	r0, r9, #2
   11a08:	ldrb	r1, [r0], #1
   11a0c:	add	sl, sl, #1
   11a10:	sub	r1, r1, #48	; 0x30
   11a14:	cmp	r1, #10
   11a18:	bcc	11a08 <__mempcpy_chk@plt+0x9cc>
   11a1c:	sub	r9, r0, #1
   11a20:	ldrb	r8, [r9]
   11a24:	sub	r0, r8, #76	; 0x4c
   11a28:	cmp	r0, #46	; 0x2e
   11a2c:	bls	11ab0 <__mempcpy_chk@plt+0xa74>
   11a30:	b	11b74 <__mempcpy_chk@plt+0xb38>
   11a34:	mov	r9, r0
   11a38:	ldrb	r8, [r9]
   11a3c:	sub	r0, r8, #76	; 0x4c
   11a40:	cmp	r0, #46	; 0x2e
   11a44:	bls	11ab0 <__mempcpy_chk@plt+0xa74>
   11a48:	b	11b74 <__mempcpy_chk@plt+0xb38>
   11a4c:	mov	r0, #0
   11a50:	str	r8, [sp, #56]	; 0x38
   11a54:	str	r0, [sp, #28]
   11a58:	ldrb	r8, [r9]
   11a5c:	sub	r0, r8, #76	; 0x4c
   11a60:	cmp	r0, #46	; 0x2e
   11a64:	bls	11ab0 <__mempcpy_chk@plt+0xa74>
   11a68:	b	11b74 <__mempcpy_chk@plt+0xb38>
   11a6c:	mvn	r0, #0
   11a70:	str	r0, [sp, #28]
   11a74:	ldr	r0, [sp, #60]	; 0x3c
   11a78:	add	r8, r8, #4
   11a7c:	str	r8, [sp, #56]	; 0x38
   11a80:	sub	r0, r0, #1
   11a84:	str	r0, [sp, #60]	; 0x3c
   11a88:	ldrb	r8, [r9]
   11a8c:	sub	r0, r8, #76	; 0x4c
   11a90:	cmp	r0, #46	; 0x2e
   11a94:	bls	11ab0 <__mempcpy_chk@plt+0xa74>
   11a98:	b	11b74 <__mempcpy_chk@plt+0xb38>
   11a9c:	add	r9, r9, #1
   11aa0:	ldrb	r8, [r9]
   11aa4:	sub	r0, r8, #76	; 0x4c
   11aa8:	cmp	r0, #46	; 0x2e
   11aac:	bhi	11b74 <__mempcpy_chk@plt+0xb38>
   11ab0:	add	r1, pc, #0
   11ab4:	ldr	pc, [r1, r0, lsl #2]
   11ab8:	muleq	r1, ip, sl
   11abc:	andeq	r1, r1, r4, ror fp
   11ac0:	andeq	r1, r1, r4, ror fp
   11ac4:	andeq	r1, r1, r4, ror fp
   11ac8:	andeq	r1, r1, r4, ror fp
   11acc:	andeq	r1, r1, r4, ror fp
   11ad0:	andeq	r1, r1, r4, ror fp
   11ad4:	andeq	r1, r1, r4, ror fp
   11ad8:	andeq	r1, r1, r4, ror fp
   11adc:	andeq	r1, r1, r4, ror fp
   11ae0:	andeq	r1, r1, r4, ror fp
   11ae4:	andeq	r1, r1, r4, ror fp
   11ae8:	andeq	r1, r1, r4, ror fp
   11aec:	andeq	r1, r1, r4, ror fp
   11af0:	andeq	r1, r1, r4, ror fp
   11af4:	andeq	r1, r1, r4, ror fp
   11af8:	andeq	r1, r1, r4, ror fp
   11afc:	andeq	r1, r1, r4, ror fp
   11b00:	andeq	r1, r1, r4, ror fp
   11b04:	andeq	r1, r1, r4, ror fp
   11b08:	andeq	r1, r1, r4, ror fp
   11b0c:	andeq	r1, r1, r4, ror fp
   11b10:	andeq	r1, r1, r4, ror fp
   11b14:	andeq	r1, r1, r4, ror fp
   11b18:	andeq	r1, r1, r4, ror fp
   11b1c:	andeq	r1, r1, r4, ror fp
   11b20:	andeq	r1, r1, r4, ror fp
   11b24:	andeq	r1, r1, r4, ror fp
   11b28:	muleq	r1, ip, sl
   11b2c:	andeq	r1, r1, r4, ror fp
   11b30:	muleq	r1, ip, sl
   11b34:	andeq	r1, r1, r4, ror fp
   11b38:	muleq	r1, ip, sl
   11b3c:	andeq	r1, r1, r4, ror fp
   11b40:	andeq	r1, r1, r4, ror fp
   11b44:	andeq	r1, r1, r4, ror fp
   11b48:	andeq	r1, r1, r4, ror fp
   11b4c:	andeq	r1, r1, r4, ror fp
   11b50:	andeq	r1, r1, r4, ror fp
   11b54:	andeq	r1, r1, r4, ror fp
   11b58:	muleq	r1, ip, sl
   11b5c:	andeq	r1, r1, r4, ror fp
   11b60:	andeq	r1, r1, r4, ror fp
   11b64:	andeq	r1, r1, r4, ror fp
   11b68:	andeq	r1, r1, r4, ror fp
   11b6c:	andeq	r1, r1, r4, ror fp
   11b70:	muleq	r1, ip, sl
   11b74:	ldrb	r0, [r7, r8]
   11b78:	cmp	r0, #0
   11b7c:	beq	12244 <__mempcpy_chk@plt+0x1208>
   11b80:	ldr	r0, [sp, #60]	; 0x3c
   11b84:	str	r6, [sp, #36]	; 0x24
   11b88:	cmp	r0, #1
   11b8c:	blt	11bb8 <__mempcpy_chk@plt+0xb7c>
   11b90:	sub	r0, r0, #1
   11b94:	str	r0, [sp, #60]	; 0x3c
   11b98:	ldr	r0, [sp, #56]	; 0x38
   11b9c:	ldr	r1, [r0], #4
   11ba0:	str	r1, [sp, #48]	; 0x30
   11ba4:	str	r0, [sp, #56]	; 0x38
   11ba8:	sub	r7, r8, #65	; 0x41
   11bac:	cmp	r7, #55	; 0x37
   11bb0:	bls	11bd0 <__mempcpy_chk@plt+0xb94>
   11bb4:	b	1203c <__mempcpy_chk@plt+0x1000>
   11bb8:	movw	r0, #25996	; 0x658c
   11bbc:	movt	r0, #1
   11bc0:	str	r0, [sp, #48]	; 0x30
   11bc4:	sub	r7, r8, #65	; 0x41
   11bc8:	cmp	r7, #55	; 0x37
   11bcc:	bhi	1203c <__mempcpy_chk@plt+0x1000>
   11bd0:	movw	r1, #28012	; 0x6d6c
   11bd4:	add	r0, pc, #8
   11bd8:	mov	r6, #2
   11bdc:	movt	r1, #1
   11be0:	ldr	pc, [r0, r7, lsl #2]
   11be4:	andeq	r1, r1, r4, asr #25
   11be8:	andeq	r2, r1, ip, lsr r0
   11bec:	andeq	r2, r1, ip, lsr r0
   11bf0:	andeq	r2, r1, ip, lsr r0
   11bf4:	andeq	r1, r1, r4, asr #25
   11bf8:	andeq	r1, r1, r4, asr #25
   11bfc:	andeq	r1, r1, r4, asr #25
   11c00:	andeq	r2, r1, ip, lsr r0
   11c04:	andeq	r2, r1, ip, lsr r0
   11c08:	andeq	r2, r1, ip, lsr r0
   11c0c:	andeq	r2, r1, ip, lsr r0
   11c10:	andeq	r2, r1, ip, lsr r0
   11c14:	andeq	r2, r1, ip, lsr r0
   11c18:	andeq	r2, r1, ip, lsr r0
   11c1c:	andeq	r2, r1, ip, lsr r0
   11c20:	andeq	r2, r1, ip, lsr r0
   11c24:	andeq	r2, r1, ip, lsr r0
   11c28:	andeq	r2, r1, ip, lsr r0
   11c2c:	andeq	r2, r1, ip, lsr r0
   11c30:	andeq	r2, r1, ip, lsr r0
   11c34:	andeq	r2, r1, ip, lsr r0
   11c38:	andeq	r2, r1, ip, lsr r0
   11c3c:	andeq	r2, r1, ip, lsr r0
   11c40:	ldrdeq	r1, [r1], -r4
   11c44:	andeq	r2, r1, ip, lsr r0
   11c48:	andeq	r2, r1, ip, lsr r0
   11c4c:	andeq	r2, r1, ip, lsr r0
   11c50:	andeq	r2, r1, ip, lsr r0
   11c54:	andeq	r2, r1, ip, lsr r0
   11c58:	andeq	r2, r1, ip, lsr r0
   11c5c:	andeq	r2, r1, ip, lsr r0
   11c60:	andeq	r2, r1, ip, lsr r0
   11c64:	andeq	r1, r1, r4, asr #25
   11c68:	andeq	r2, r1, ip, lsr r0
   11c6c:	andeq	r2, r1, ip, lsr r0
   11c70:	ldrdeq	r1, [r1], -r4
   11c74:	andeq	r1, r1, r4, asr #25
   11c78:	andeq	r1, r1, r4, asr #25
   11c7c:	andeq	r1, r1, r4, asr #25
   11c80:	andeq	r2, r1, ip, lsr r0
   11c84:	ldrdeq	r1, [r1], -r4
   11c88:	andeq	r2, r1, ip, lsr r0
   11c8c:	andeq	r2, r1, ip, lsr r0
   11c90:	andeq	r2, r1, ip, lsr r0
   11c94:	andeq	r2, r1, ip, lsr r0
   11c98:	andeq	r2, r1, ip, lsr r0
   11c9c:	ldrdeq	r1, [r1], -r4
   11ca0:	andeq	r2, r1, ip, lsr r0
   11ca4:	andeq	r2, r1, ip, lsr r0
   11ca8:	andeq	r2, r1, ip, lsr r0
   11cac:	andeq	r2, r1, ip, lsr r0
   11cb0:	andeq	r2, r1, ip, lsr r0
   11cb4:	ldrdeq	r1, [r1], -r4
   11cb8:	andeq	r2, r1, ip, lsr r0
   11cbc:	andeq	r2, r1, ip, lsr r0
   11cc0:	ldrdeq	r1, [r1], -r4
   11cc4:	movw	r0, #28016	; 0x6d70
   11cc8:	mov	r6, #1
   11ccc:	movt	r0, #1
   11cd0:	mov	r1, r0
   11cd4:	add	r0, sl, r6
   11cd8:	str	r1, [sp, #44]	; 0x2c
   11cdc:	add	r0, r0, #2
   11ce0:	bl	156d8 <__mempcpy_chk@plt+0x469c>
   11ce4:	mov	r1, r5
   11ce8:	mov	r2, sl
   11cec:	mvn	r3, #0
   11cf0:	str	r0, [sp, #52]	; 0x34
   11cf4:	bl	1103c <__mempcpy_chk@plt>
   11cf8:	ldr	r1, [sp, #44]	; 0x2c
   11cfc:	mov	r2, r6
   11d00:	mvn	r3, #0
   11d04:	bl	1103c <__mempcpy_chk@plt>
   11d08:	strb	r8, [r0]
   11d0c:	ldr	r8, [sp, #56]	; 0x38
   11d10:	ldr	sl, [sp, #60]	; 0x3c
   11d14:	movw	r6, #33092	; 0x8144
   11d18:	cmp	r7, #55	; 0x37
   11d1c:	strb	r4, [r0, #1]
   11d20:	movt	r6, #2
   11d24:	bhi	120d0 <__mempcpy_chk@plt+0x1094>
   11d28:	add	r0, pc, #0
   11d2c:	ldr	pc, [r0, r7, lsl #2]
   11d30:	andeq	r1, r1, r0, lsl lr
   11d34:	ldrdeq	r2, [r1], -r0
   11d38:	ldrdeq	r2, [r1], -r0
   11d3c:	ldrdeq	r2, [r1], -r0
   11d40:	andeq	r1, r1, r0, lsl lr
   11d44:	andeq	r1, r1, r0, lsl lr
   11d48:	andeq	r1, r1, r0, lsl lr
   11d4c:	ldrdeq	r2, [r1], -r0
   11d50:	ldrdeq	r2, [r1], -r0
   11d54:	ldrdeq	r2, [r1], -r0
   11d58:	ldrdeq	r2, [r1], -r0
   11d5c:	ldrdeq	r2, [r1], -r0
   11d60:	ldrdeq	r2, [r1], -r0
   11d64:	ldrdeq	r2, [r1], -r0
   11d68:	ldrdeq	r2, [r1], -r0
   11d6c:	ldrdeq	r2, [r1], -r0
   11d70:	ldrdeq	r2, [r1], -r0
   11d74:	ldrdeq	r2, [r1], -r0
   11d78:	ldrdeq	r2, [r1], -r0
   11d7c:	ldrdeq	r2, [r1], -r0
   11d80:	ldrdeq	r2, [r1], -r0
   11d84:	ldrdeq	r2, [r1], -r0
   11d88:	ldrdeq	r2, [r1], -r0
   11d8c:	andeq	r1, r1, r4, lsl #30
   11d90:	ldrdeq	r2, [r1], -r0
   11d94:	ldrdeq	r2, [r1], -r0
   11d98:	ldrdeq	r2, [r1], -r0
   11d9c:	ldrdeq	r2, [r1], -r0
   11da0:	ldrdeq	r2, [r1], -r0
   11da4:	ldrdeq	r2, [r1], -r0
   11da8:	ldrdeq	r2, [r1], -r0
   11dac:	ldrdeq	r2, [r1], -r0
   11db0:	andeq	r1, r1, r0, lsl lr
   11db4:	ldrdeq	r2, [r1], -r0
   11db8:	andeq	r2, r1, r8, asr #32
   11dbc:	strdeq	r1, [r1], -ip
   11dc0:	andeq	r1, r1, r0, lsl lr
   11dc4:	andeq	r1, r1, r0, lsl lr
   11dc8:	andeq	r1, r1, r0, lsl lr
   11dcc:	ldrdeq	r2, [r1], -r0
   11dd0:	strdeq	r1, [r1], -ip
   11dd4:	ldrdeq	r2, [r1], -r0
   11dd8:	ldrdeq	r2, [r1], -r0
   11ddc:	ldrdeq	r2, [r1], -r0
   11de0:	ldrdeq	r2, [r1], -r0
   11de4:	ldrdeq	r2, [r1], -r0
   11de8:	andeq	r1, r1, r4, lsl #30
   11dec:	ldrdeq	r2, [r1], -r0
   11df0:	ldrdeq	r2, [r1], -r0
   11df4:	ldrdeq	r2, [r1], -r0
   11df8:	andeq	r2, r1, ip, rrx
   11dfc:	ldrdeq	r2, [r1], -r0
   11e00:	andeq	r1, r1, r4, lsl #30
   11e04:	ldrdeq	r2, [r1], -r0
   11e08:	ldrdeq	r2, [r1], -r0
   11e0c:	andeq	r1, r1, r4, lsl #30
   11e10:	ldr	r7, [sp, #48]	; 0x30
   11e14:	ldrb	r0, [r7]
   11e18:	cmp	r0, #39	; 0x27
   11e1c:	cmpne	r0, #34	; 0x22
   11e20:	bne	11eac <__mempcpy_chk@plt+0xe70>
   11e24:	ldrb	r0, [r7, #1]
   11e28:	cmp	r0, #0
   11e2c:	beq	11eac <__mempcpy_chk@plt+0xe70>
   11e30:	vmov	s0, r0
   11e34:	vcvt.f64.u32	d8, s0
   11e38:	ldrb	r0, [r7, #2]!
   11e3c:	cmp	r0, #0
   11e40:	beq	11ed0 <__mempcpy_chk@plt+0xe94>
   11e44:	movw	r0, #33100	; 0x814c
   11e48:	ldr	r5, [sp, #40]	; 0x28
   11e4c:	movt	r0, #2
   11e50:	ldrb	r0, [r0, #1]
   11e54:	cmp	r0, #0
   11e58:	bne	12104 <__mempcpy_chk@plt+0x10c8>
   11e5c:	movw	r1, #27875	; 0x6ce3
   11e60:	mov	r0, #0
   11e64:	mov	r2, #5
   11e68:	movt	r1, #1
   11e6c:	bl	10e74 <dcgettext@plt>
   11e70:	mov	r2, r0
   11e74:	mov	r0, #0
   11e78:	mov	r1, #0
   11e7c:	mov	r3, r7
   11e80:	bl	10ee0 <error@plt>
   11e84:	ldr	r7, [sp, #28]
   11e88:	cmp	r5, #0
   11e8c:	bne	11ee0 <__mempcpy_chk@plt+0xea4>
   11e90:	ldr	r0, [sp, #36]	; 0x24
   11e94:	vmov	r2, r3, d8
   11e98:	cmp	r0, #0
   11e9c:	beq	120b0 <__mempcpy_chk@plt+0x1074>
   11ea0:	ldr	r0, [sp, #52]	; 0x34
   11ea4:	mov	r1, r7
   11ea8:	b	120cc <__mempcpy_chk@plt+0x1090>
   11eac:	bl	10f64 <__errno_location@plt>
   11eb0:	str	r4, [r0]
   11eb4:	mov	r0, r7
   11eb8:	sub	r1, fp, #48	; 0x30
   11ebc:	bl	12ad8 <__mempcpy_chk@plt+0x1a9c>
   11ec0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11ec4:	mov	r0, r7
   11ec8:	vmov.f64	d8, d0
   11ecc:	bl	12a30 <__mempcpy_chk@plt+0x19f4>
   11ed0:	ldr	r7, [sp, #28]
   11ed4:	ldr	r5, [sp, #40]	; 0x28
   11ed8:	cmp	r5, #0
   11edc:	beq	11e90 <__mempcpy_chk@plt+0xe54>
   11ee0:	ldr	r0, [sp, #36]	; 0x24
   11ee4:	cmp	r0, #0
   11ee8:	beq	11fec <__mempcpy_chk@plt+0xfb0>
   11eec:	ldr	r0, [sp, #52]	; 0x34
   11ef0:	ldr	r1, [sp, #32]
   11ef4:	mov	r2, r7
   11ef8:	vstr	d8, [sp]
   11efc:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   11f00:	b	120d0 <__mempcpy_chk@plt+0x1094>
   11f04:	ldr	r7, [sp, #48]	; 0x30
   11f08:	ldrb	r0, [r7]
   11f0c:	cmp	r0, #39	; 0x27
   11f10:	cmpne	r0, #34	; 0x22
   11f14:	bne	11f98 <__mempcpy_chk@plt+0xf5c>
   11f18:	ldrb	r5, [r7, #1]
   11f1c:	cmp	r5, #0
   11f20:	beq	11f98 <__mempcpy_chk@plt+0xf5c>
   11f24:	ldrb	r0, [r7, #2]!
   11f28:	str	r7, [sp, #48]	; 0x30
   11f2c:	mov	r7, #0
   11f30:	cmp	r0, #0
   11f34:	beq	11f78 <__mempcpy_chk@plt+0xf3c>
   11f38:	movw	r0, #33100	; 0x814c
   11f3c:	movt	r0, #2
   11f40:	ldrb	r0, [r0, #1]
   11f44:	cmp	r0, #0
   11f48:	bne	11f78 <__mempcpy_chk@plt+0xf3c>
   11f4c:	movw	r1, #27875	; 0x6ce3
   11f50:	mov	r0, #0
   11f54:	mov	r2, #5
   11f58:	mov	r7, #0
   11f5c:	movt	r1, #1
   11f60:	bl	10e74 <dcgettext@plt>
   11f64:	ldr	r3, [sp, #48]	; 0x30
   11f68:	mov	r2, r0
   11f6c:	mov	r0, #0
   11f70:	mov	r1, #0
   11f74:	bl	10ee0 <error@plt>
   11f78:	ldr	r0, [sp, #40]	; 0x28
   11f7c:	cmp	r0, #0
   11f80:	beq	11fd4 <__mempcpy_chk@plt+0xf98>
   11f84:	ldr	r0, [sp, #36]	; 0x24
   11f88:	cmp	r0, #0
   11f8c:	beq	120bc <__mempcpy_chk@plt+0x1080>
   11f90:	stm	sp, {r5, r7}
   11f94:	b	12028 <__mempcpy_chk@plt+0xfec>
   11f98:	bl	10f64 <__errno_location@plt>
   11f9c:	str	r4, [r0]
   11fa0:	mov	r0, r7
   11fa4:	sub	r1, fp, #48	; 0x30
   11fa8:	mov	r2, #0
   11fac:	mov	r3, #0
   11fb0:	bl	10e44 <__strtoull_internal@plt>
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r7
   11fbc:	mov	r7, r1
   11fc0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   11fc4:	bl	12a30 <__mempcpy_chk@plt+0x19f4>
   11fc8:	ldr	r0, [sp, #40]	; 0x28
   11fcc:	cmp	r0, #0
   11fd0:	bne	11f84 <__mempcpy_chk@plt+0xf48>
   11fd4:	ldr	r0, [sp, #36]	; 0x24
   11fd8:	cmp	r0, #0
   11fdc:	beq	120f0 <__mempcpy_chk@plt+0x10b4>
   11fe0:	ldr	r0, [sp, #52]	; 0x34
   11fe4:	ldr	r1, [sp, #28]
   11fe8:	b	120c4 <__mempcpy_chk@plt+0x1088>
   11fec:	vmov	r2, r3, d8
   11ff0:	ldr	r0, [sp, #52]	; 0x34
   11ff4:	ldr	r1, [sp, #32]
   11ff8:	b	120cc <__mempcpy_chk@plt+0x1090>
   11ffc:	ldr	r0, [sp, #48]	; 0x30
   12000:	bl	122a8 <__mempcpy_chk@plt+0x126c>
   12004:	mov	r2, r0
   12008:	ldr	r0, [sp, #40]	; 0x28
   1200c:	mov	r3, r1
   12010:	cmp	r0, #0
   12014:	beq	12098 <__mempcpy_chk@plt+0x105c>
   12018:	ldr	r0, [sp, #36]	; 0x24
   1201c:	cmp	r0, #0
   12020:	beq	11ff0 <__mempcpy_chk@plt+0xfb4>
   12024:	stm	sp, {r2, r3}
   12028:	ldr	r0, [sp, #52]	; 0x34
   1202c:	ldr	r1, [sp, #32]
   12030:	ldr	r2, [sp, #28]
   12034:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12038:	b	120d0 <__mempcpy_chk@plt+0x1094>
   1203c:	mov	r6, #0
   12040:	mov	r1, r5
   12044:	b	11cd4 <__mempcpy_chk@plt+0xc98>
   12048:	ldr	r0, [sp, #48]	; 0x30
   1204c:	ldrb	r2, [r0]
   12050:	ldr	r0, [sp, #40]	; 0x28
   12054:	cmp	r0, #0
   12058:	beq	12134 <__mempcpy_chk@plt+0x10f8>
   1205c:	ldr	r0, [sp, #52]	; 0x34
   12060:	ldr	r1, [sp, #32]
   12064:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12068:	b	120d0 <__mempcpy_chk@plt+0x1094>
   1206c:	ldr	r0, [sp, #40]	; 0x28
   12070:	cmp	r0, #0
   12074:	beq	12114 <__mempcpy_chk@plt+0x10d8>
   12078:	ldr	r0, [sp, #36]	; 0x24
   1207c:	ldr	r3, [sp, #48]	; 0x30
   12080:	cmp	r0, #0
   12084:	beq	12144 <__mempcpy_chk@plt+0x1108>
   12088:	ldr	r0, [sp, #52]	; 0x34
   1208c:	ldr	r1, [sp, #32]
   12090:	ldr	r2, [sp, #28]
   12094:	b	120cc <__mempcpy_chk@plt+0x1090>
   12098:	ldr	r0, [sp, #36]	; 0x24
   1209c:	cmp	r0, #0
   120a0:	beq	120b0 <__mempcpy_chk@plt+0x1074>
   120a4:	ldr	r0, [sp, #52]	; 0x34
   120a8:	ldr	r1, [sp, #28]
   120ac:	b	120cc <__mempcpy_chk@plt+0x1090>
   120b0:	ldr	r0, [sp, #52]	; 0x34
   120b4:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   120b8:	b	120d0 <__mempcpy_chk@plt+0x1094>
   120bc:	ldr	r0, [sp, #52]	; 0x34
   120c0:	ldr	r1, [sp, #32]
   120c4:	mov	r2, r5
   120c8:	mov	r3, r7
   120cc:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   120d0:	ldr	r0, [sp, #52]	; 0x34
   120d4:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   120d8:	add	r7, sp, #64	; 0x40
   120dc:	add	r5, r9, #1
   120e0:	ldrb	r1, [r5]
   120e4:	cmp	r1, #37	; 0x25
   120e8:	bne	115c0 <__mempcpy_chk@plt+0x584>
   120ec:	b	11618 <__mempcpy_chk@plt+0x5dc>
   120f0:	ldr	r0, [sp, #52]	; 0x34
   120f4:	mov	r2, r5
   120f8:	mov	r3, r7
   120fc:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12100:	b	120d0 <__mempcpy_chk@plt+0x1094>
   12104:	ldr	r7, [sp, #28]
   12108:	cmp	r5, #0
   1210c:	beq	11e90 <__mempcpy_chk@plt+0xe54>
   12110:	b	11ee0 <__mempcpy_chk@plt+0xea4>
   12114:	ldr	r0, [sp, #36]	; 0x24
   12118:	ldr	r2, [sp, #48]	; 0x30
   1211c:	cmp	r0, #0
   12120:	beq	12134 <__mempcpy_chk@plt+0x10f8>
   12124:	ldr	r0, [sp, #52]	; 0x34
   12128:	ldr	r1, [sp, #28]
   1212c:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12130:	b	120d0 <__mempcpy_chk@plt+0x1094>
   12134:	ldr	r0, [sp, #52]	; 0x34
   12138:	mov	r1, r2
   1213c:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12140:	b	120d0 <__mempcpy_chk@plt+0x1094>
   12144:	ldr	r0, [sp, #52]	; 0x34
   12148:	ldr	r1, [sp, #32]
   1214c:	mov	r2, r3
   12150:	bl	15c7c <__mempcpy_chk@plt+0x4c40>
   12154:	b	120d0 <__mempcpy_chk@plt+0x1094>
   12158:	bl	10fd0 <__overflow@plt>
   1215c:	b	115f0 <__mempcpy_chk@plt+0x5b4>
   12160:	mov	r1, #37	; 0x25
   12164:	bl	10fd0 <__overflow@plt>
   12168:	add	r5, r9, #1
   1216c:	ldrb	r1, [r5]
   12170:	cmp	r1, #37	; 0x25
   12174:	bne	115c0 <__mempcpy_chk@plt+0x584>
   12178:	b	11618 <__mempcpy_chk@plt+0x5dc>
   1217c:	ldr	r0, [sp, #20]
   12180:	ldr	r1, [sp, #16]
   12184:	ldr	r5, [sp, #12]
   12188:	cmp	sl, #1
   1218c:	sub	r0, r0, sl
   12190:	add	r1, r1, r0, lsl #2
   12194:	blt	121a4 <__mempcpy_chk@plt+0x1168>
   12198:	cmp	r0, #0
   1219c:	str	sl, [sp, #20]
   121a0:	bgt	11588 <__mempcpy_chk@plt+0x54c>
   121a4:	cmp	sl, #1
   121a8:	blt	121e4 <__mempcpy_chk@plt+0x11a8>
   121ac:	mov	r4, r1
   121b0:	movw	r1, #27426	; 0x6b22
   121b4:	mov	r0, #0
   121b8:	mov	r2, #5
   121bc:	movt	r1, #1
   121c0:	bl	10e74 <dcgettext@plt>
   121c4:	mov	r5, r0
   121c8:	ldr	r0, [r4]
   121cc:	bl	14c0c <__mempcpy_chk@plt+0x3bd0>
   121d0:	mov	r3, r0
   121d4:	mov	r0, #0
   121d8:	mov	r1, #0
   121dc:	mov	r2, r5
   121e0:	bl	10ee0 <error@plt>
   121e4:	movw	r0, #33100	; 0x814c
   121e8:	movt	r0, #2
   121ec:	ldrb	r4, [r0]
   121f0:	mov	r0, r4
   121f4:	sub	sp, fp, #40	; 0x28
   121f8:	vpop	{d8}
   121fc:	add	sp, sp, #4
   12200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12204:	movw	r1, #27790	; 0x6c8e
   12208:	movt	r1, #1
   1220c:	b	12218 <__mempcpy_chk@plt+0x11dc>
   12210:	movw	r1, #27814	; 0x6ca6
   12214:	movt	r1, #1
   12218:	mov	r0, #0
   1221c:	mov	r2, #5
   12220:	bl	10e74 <dcgettext@plt>
   12224:	mov	r4, r0
   12228:	ldr	r0, [r8]
   1222c:	bl	14c0c <__mempcpy_chk@plt+0x3bd0>
   12230:	mov	r3, r0
   12234:	mov	r0, #1
   12238:	mov	r1, #0
   1223c:	mov	r2, r4
   12240:	bl	10ee0 <error@plt>
   12244:	movw	r1, #27836	; 0x6cbc
   12248:	mov	r0, #0
   1224c:	mov	r2, #5
   12250:	movt	r1, #1
   12254:	bl	10e74 <dcgettext@plt>
   12258:	mov	r2, r0
   1225c:	add	r0, r9, #1
   12260:	mov	r1, #0
   12264:	str	r5, [sp]
   12268:	sub	r3, r0, r5
   1226c:	mov	r0, #1
   12270:	bl	10ee0 <error@plt>
   12274:	movw	r1, #27410	; 0x6b12
   12278:	mov	r0, #0
   1227c:	mov	r2, #5
   12280:	movt	r1, #1
   12284:	bl	10e74 <dcgettext@plt>
   12288:	mov	r2, r0
   1228c:	mov	r0, #0
   12290:	mov	r1, #0
   12294:	bl	10ee0 <error@plt>
   12298:	mov	r0, #1
   1229c:	bl	11138 <__mempcpy_chk@plt+0xfc>
   122a0:	mov	r0, #0
   122a4:	bl	11138 <__mempcpy_chk@plt+0xfc>
   122a8:	push	{r4, r5, r6, sl, fp, lr}
   122ac:	add	fp, sp, #16
   122b0:	sub	sp, sp, #8
   122b4:	mov	r4, r0
   122b8:	ldrb	r0, [r0]
   122bc:	cmp	r0, #39	; 0x27
   122c0:	cmpne	r0, #34	; 0x22
   122c4:	bne	12334 <__mempcpy_chk@plt+0x12f8>
   122c8:	ldrb	r5, [r4, #1]
   122cc:	cmp	r5, #0
   122d0:	beq	12334 <__mempcpy_chk@plt+0x12f8>
   122d4:	ldrb	r0, [r4, #2]!
   122d8:	mov	r6, #0
   122dc:	cmp	r0, #0
   122e0:	beq	12324 <__mempcpy_chk@plt+0x12e8>
   122e4:	movw	r0, #33100	; 0x814c
   122e8:	movt	r0, #2
   122ec:	ldrb	r0, [r0, #1]
   122f0:	cmp	r0, #0
   122f4:	bne	12324 <__mempcpy_chk@plt+0x12e8>
   122f8:	movw	r1, #27875	; 0x6ce3
   122fc:	mov	r0, #0
   12300:	mov	r2, #5
   12304:	mov	r6, #0
   12308:	movt	r1, #1
   1230c:	bl	10e74 <dcgettext@plt>
   12310:	mov	r2, r0
   12314:	mov	r0, #0
   12318:	mov	r1, #0
   1231c:	mov	r3, r4
   12320:	bl	10ee0 <error@plt>
   12324:	mov	r0, r5
   12328:	mov	r1, r6
   1232c:	sub	sp, fp, #16
   12330:	pop	{r4, r5, r6, sl, fp, pc}
   12334:	bl	10f64 <__errno_location@plt>
   12338:	mov	r1, #0
   1233c:	mov	r2, #0
   12340:	mov	r3, #0
   12344:	str	r1, [r0]
   12348:	add	r1, sp, #4
   1234c:	mov	r0, r4
   12350:	bl	1100c <__strtoll_internal@plt>
   12354:	mov	r6, r1
   12358:	ldr	r1, [sp, #4]
   1235c:	mov	r5, r0
   12360:	mov	r0, r4
   12364:	bl	12a30 <__mempcpy_chk@plt+0x19f4>
   12368:	mov	r0, r5
   1236c:	mov	r1, r6
   12370:	sub	sp, fp, #16
   12374:	pop	{r4, r5, r6, sl, fp, pc}
   12378:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1237c:	add	fp, sp, #24
   12380:	sub	sp, sp, #8
   12384:	mov	r7, r0
   12388:	mov	r8, r0
   1238c:	ldrb	r5, [r7, #1]!
   12390:	cmp	r5, #120	; 0x78
   12394:	bne	12434 <__mempcpy_chk@plt+0x13f8>
   12398:	bl	10f40 <__ctype_b_loc@plt>
   1239c:	ldrb	r1, [r8, #2]
   123a0:	ldr	r0, [r0]
   123a4:	add	r2, r0, r1, lsl #1
   123a8:	ldrb	r2, [r2, #1]
   123ac:	tst	r2, #16
   123b0:	beq	12a04 <__mempcpy_chk@plt+0x19c8>
   123b4:	sub	r2, r1, #97	; 0x61
   123b8:	uxtb	r3, r2
   123bc:	mvn	r2, #86	; 0x56
   123c0:	cmp	r3, #6
   123c4:	bcc	123dc <__mempcpy_chk@plt+0x13a0>
   123c8:	sub	r2, r1, #65	; 0x41
   123cc:	uxtb	r3, r2
   123d0:	mvn	r2, #47	; 0x2f
   123d4:	cmp	r3, #6
   123d8:	mvncc	r2, #54	; 0x36
   123dc:	mov	r7, r8
   123e0:	add	r1, r2, r1
   123e4:	ldrb	r2, [r7, #3]!
   123e8:	add	r0, r0, r2, lsl #1
   123ec:	ldrb	r0, [r0, #1]
   123f0:	tst	r0, #16
   123f4:	beq	12498 <__mempcpy_chk@plt+0x145c>
   123f8:	lsl	r0, r1, #4
   123fc:	sub	r1, r2, #97	; 0x61
   12400:	uxtb	r3, r1
   12404:	mvn	r1, #86	; 0x56
   12408:	cmp	r3, #6
   1240c:	bcc	12424 <__mempcpy_chk@plt+0x13e8>
   12410:	sub	r1, r2, #65	; 0x41
   12414:	uxtb	r3, r1
   12418:	mvn	r1, #47	; 0x2f
   1241c:	cmp	r3, #6
   12420:	mvncc	r1, #54	; 0x36
   12424:	add	r1, r1, r2
   12428:	add	r7, r8, #4
   1242c:	add	r1, r1, r0
   12430:	b	12498 <__mempcpy_chk@plt+0x145c>
   12434:	and	r0, r5, #248	; 0xf8
   12438:	cmp	r0, #48	; 0x30
   1243c:	bne	124d0 <__mempcpy_chk@plt+0x1494>
   12440:	sub	r0, r5, #48	; 0x30
   12444:	clz	r0, r0
   12448:	lsr	r0, r0, #5
   1244c:	and	r0, r0, r1
   12450:	mov	r1, #0
   12454:	ldrb	r0, [r7, r0]!
   12458:	and	r2, r0, #248	; 0xf8
   1245c:	cmp	r2, #48	; 0x30
   12460:	bne	12498 <__mempcpy_chk@plt+0x145c>
   12464:	sub	r1, r0, #48	; 0x30
   12468:	ldrb	r0, [r7, #1]!
   1246c:	and	r2, r0, #248	; 0xf8
   12470:	cmp	r2, #48	; 0x30
   12474:	bne	12498 <__mempcpy_chk@plt+0x145c>
   12478:	add	r0, r0, r1, lsl #3
   1247c:	sub	r1, r0, #48	; 0x30
   12480:	ldrb	r0, [r7, #1]!
   12484:	and	r2, r0, #248	; 0xf8
   12488:	cmp	r2, #48	; 0x30
   1248c:	addeq	r0, r0, r1, lsl #3
   12490:	addeq	r7, r7, #1
   12494:	subeq	r1, r0, #48	; 0x30
   12498:	movw	r0, #33092	; 0x8144
   1249c:	movt	r0, #2
   124a0:	ldr	r0, [r0]
   124a4:	ldr	r2, [r0, #20]
   124a8:	ldr	r3, [r0, #24]
   124ac:	cmp	r2, r3
   124b0:	bcs	128f4 <__mempcpy_chk@plt+0x18b8>
   124b4:	add	r3, r2, #1
   124b8:	str	r3, [r0, #20]
   124bc:	strb	r1, [r2]
   124c0:	mvn	r0, r8
   124c4:	add	r0, r7, r0
   124c8:	sub	sp, fp, #24
   124cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   124d0:	cmp	r5, #0
   124d4:	beq	12674 <__mempcpy_chk@plt+0x1638>
   124d8:	movw	r0, #28055	; 0x6d97
   124dc:	mov	r1, r5
   124e0:	mov	r2, #12
   124e4:	movt	r0, #1
   124e8:	bl	10fac <memchr@plt>
   124ec:	cmp	r0, #0
   124f0:	beq	125a0 <__mempcpy_chk@plt+0x1564>
   124f4:	sub	r0, r5, #97	; 0x61
   124f8:	add	r7, r8, #2
   124fc:	cmp	r0, #21
   12500:	bhi	12884 <__mempcpy_chk@plt+0x1848>
   12504:	add	r1, pc, #0
   12508:	ldr	pc, [r1, r0, lsl #2]
   1250c:	andeq	r2, r1, r4, ror #10
   12510:	andeq	r2, r1, ip, lsl r7
   12514:	andeq	r2, r1, r8, lsr #20
   12518:	andeq	r2, r1, r4, lsl #17
   1251c:	ldrdeq	r2, [r1], -r0
   12520:	andeq	r2, r1, ip, lsl #16
   12524:	andeq	r2, r1, r4, lsl #17
   12528:	andeq	r2, r1, r4, lsl #17
   1252c:	andeq	r2, r1, r4, lsl #17
   12530:	andeq	r2, r1, r4, lsl #17
   12534:	andeq	r2, r1, r4, lsl #17
   12538:	andeq	r2, r1, r4, lsl #17
   1253c:	andeq	r2, r1, r4, lsl #17
   12540:	andeq	r2, r1, r8, asr #16
   12544:	andeq	r2, r1, r4, lsl #17
   12548:	andeq	r2, r1, r4, lsl #17
   1254c:	andeq	r2, r1, r4, lsl #17
   12550:	andeq	r2, r1, r0, ror #13
   12554:	andeq	r2, r1, r4, lsl #17
   12558:	andeq	r2, r1, r8, asr r7
   1255c:	andeq	r2, r1, r4, lsl #17
   12560:	muleq	r1, r4, r7
   12564:	movw	r0, #33092	; 0x8144
   12568:	movt	r0, #2
   1256c:	ldr	r0, [r0]
   12570:	ldr	r1, [r0, #20]
   12574:	ldr	r2, [r0, #24]
   12578:	cmp	r1, r2
   1257c:	bcs	1292c <__mempcpy_chk@plt+0x18f0>
   12580:	add	r2, r1, #1
   12584:	str	r2, [r0, #20]
   12588:	mov	r0, #7
   1258c:	strb	r0, [r1]
   12590:	mvn	r0, r8
   12594:	add	r0, r7, r0
   12598:	sub	sp, fp, #24
   1259c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125a0:	orr	r0, r5, #32
   125a4:	cmp	r0, #117	; 0x75
   125a8:	bne	12674 <__mempcpy_chk@plt+0x1638>
   125ac:	mov	r7, #8
   125b0:	cmp	r5, #117	; 0x75
   125b4:	movweq	r7, #4
   125b8:	bl	10f40 <__ctype_b_loc@plt>
   125bc:	ldr	r1, [r0]
   125c0:	mov	r6, #0
   125c4:	mvn	r0, #1
   125c8:	ldrb	r2, [r8, -r0]
   125cc:	add	r3, r1, r2, lsl #1
   125d0:	ldrb	r3, [r3, #1]
   125d4:	tst	r3, #16
   125d8:	beq	12a04 <__mempcpy_chk@plt+0x19c8>
   125dc:	lsl	r3, r6, #4
   125e0:	sub	r6, r2, #97	; 0x61
   125e4:	uxtb	r4, r6
   125e8:	mvn	r6, #86	; 0x56
   125ec:	cmp	r4, #6
   125f0:	bcc	12608 <__mempcpy_chk@plt+0x15cc>
   125f4:	sub	r6, r2, #65	; 0x41
   125f8:	uxtb	r6, r6
   125fc:	cmp	r6, #6
   12600:	mvn	r6, #47	; 0x2f
   12604:	mvncc	r6, #54	; 0x36
   12608:	add	r2, r6, r2
   1260c:	sub	r0, r0, #1
   12610:	add	r6, r2, r3
   12614:	add	r2, r7, r0
   12618:	add	r2, r2, #3
   1261c:	cmp	r2, #1
   12620:	bgt	125c8 <__mempcpy_chk@plt+0x158c>
   12624:	cmp	r6, #159	; 0x9f
   12628:	bhi	12638 <__mempcpy_chk@plt+0x15fc>
   1262c:	cmp	r6, #36	; 0x24
   12630:	cmpne	r6, #96	; 0x60
   12634:	bne	128bc <__mempcpy_chk@plt+0x1880>
   12638:	mov	r1, r6
   1263c:	bfc	r1, #0, #11
   12640:	cmp	r1, #55296	; 0xd800
   12644:	beq	128c4 <__mempcpy_chk@plt+0x1888>
   12648:	sub	r7, r8, r0
   1264c:	movw	r0, #33092	; 0x8144
   12650:	mov	r1, r6
   12654:	mov	r2, #0
   12658:	movt	r0, #2
   1265c:	ldr	r0, [r0]
   12660:	bl	14e28 <__mempcpy_chk@plt+0x3dec>
   12664:	mvn	r0, r8
   12668:	add	r0, r7, r0
   1266c:	sub	sp, fp, #24
   12670:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12674:	movw	r5, #33092	; 0x8144
   12678:	movt	r5, #2
   1267c:	ldr	r0, [r5]
   12680:	ldr	r1, [r0, #20]
   12684:	ldr	r2, [r0, #24]
   12688:	cmp	r1, r2
   1268c:	bcs	1290c <__mempcpy_chk@plt+0x18d0>
   12690:	add	r2, r1, #1
   12694:	str	r2, [r0, #20]
   12698:	mov	r0, #92	; 0x5c
   1269c:	strb	r0, [r1]
   126a0:	ldrb	r1, [r7]
   126a4:	cmp	r1, #0
   126a8:	beq	124c0 <__mempcpy_chk@plt+0x1484>
   126ac:	ldr	r0, [r5]
   126b0:	ldr	r2, [r0, #20]
   126b4:	ldr	r3, [r0, #24]
   126b8:	cmp	r2, r3
   126bc:	bcs	12924 <__mempcpy_chk@plt+0x18e8>
   126c0:	add	r3, r2, #1
   126c4:	str	r3, [r0, #20]
   126c8:	strb	r1, [r2]
   126cc:	add	r7, r8, #2
   126d0:	mvn	r0, r8
   126d4:	add	r0, r7, r0
   126d8:	sub	sp, fp, #24
   126dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   126e0:	movw	r0, #33092	; 0x8144
   126e4:	movt	r0, #2
   126e8:	ldr	r0, [r0]
   126ec:	ldr	r1, [r0, #20]
   126f0:	ldr	r2, [r0, #24]
   126f4:	cmp	r1, r2
   126f8:	bcs	12944 <__mempcpy_chk@plt+0x1908>
   126fc:	add	r2, r1, #1
   12700:	str	r2, [r0, #20]
   12704:	mov	r0, #13
   12708:	strb	r0, [r1]
   1270c:	mvn	r0, r8
   12710:	add	r0, r7, r0
   12714:	sub	sp, fp, #24
   12718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1271c:	movw	r0, #33092	; 0x8144
   12720:	movt	r0, #2
   12724:	ldr	r0, [r0]
   12728:	ldr	r1, [r0, #20]
   1272c:	ldr	r2, [r0, #24]
   12730:	cmp	r1, r2
   12734:	bcs	1295c <__mempcpy_chk@plt+0x1920>
   12738:	add	r2, r1, #1
   1273c:	str	r2, [r0, #20]
   12740:	mov	r0, #8
   12744:	strb	r0, [r1]
   12748:	mvn	r0, r8
   1274c:	add	r0, r7, r0
   12750:	sub	sp, fp, #24
   12754:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12758:	movw	r0, #33092	; 0x8144
   1275c:	movt	r0, #2
   12760:	ldr	r0, [r0]
   12764:	ldr	r1, [r0, #20]
   12768:	ldr	r2, [r0, #24]
   1276c:	cmp	r1, r2
   12770:	bcs	12974 <__mempcpy_chk@plt+0x1938>
   12774:	add	r2, r1, #1
   12778:	str	r2, [r0, #20]
   1277c:	mov	r0, #9
   12780:	strb	r0, [r1]
   12784:	mvn	r0, r8
   12788:	add	r0, r7, r0
   1278c:	sub	sp, fp, #24
   12790:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12794:	movw	r0, #33092	; 0x8144
   12798:	movt	r0, #2
   1279c:	ldr	r0, [r0]
   127a0:	ldr	r1, [r0, #20]
   127a4:	ldr	r2, [r0, #24]
   127a8:	cmp	r1, r2
   127ac:	bcs	1298c <__mempcpy_chk@plt+0x1950>
   127b0:	add	r2, r1, #1
   127b4:	str	r2, [r0, #20]
   127b8:	mov	r0, #11
   127bc:	strb	r0, [r1]
   127c0:	mvn	r0, r8
   127c4:	add	r0, r7, r0
   127c8:	sub	sp, fp, #24
   127cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127d0:	movw	r0, #33092	; 0x8144
   127d4:	movt	r0, #2
   127d8:	ldr	r0, [r0]
   127dc:	ldr	r1, [r0, #20]
   127e0:	ldr	r2, [r0, #24]
   127e4:	cmp	r1, r2
   127e8:	bcs	129a4 <__mempcpy_chk@plt+0x1968>
   127ec:	add	r2, r1, #1
   127f0:	str	r2, [r0, #20]
   127f4:	mov	r0, #27
   127f8:	strb	r0, [r1]
   127fc:	mvn	r0, r8
   12800:	add	r0, r7, r0
   12804:	sub	sp, fp, #24
   12808:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1280c:	movw	r0, #33092	; 0x8144
   12810:	movt	r0, #2
   12814:	ldr	r0, [r0]
   12818:	ldr	r1, [r0, #20]
   1281c:	ldr	r2, [r0, #24]
   12820:	cmp	r1, r2
   12824:	bcs	129bc <__mempcpy_chk@plt+0x1980>
   12828:	add	r2, r1, #1
   1282c:	str	r2, [r0, #20]
   12830:	mov	r0, #12
   12834:	strb	r0, [r1]
   12838:	mvn	r0, r8
   1283c:	add	r0, r7, r0
   12840:	sub	sp, fp, #24
   12844:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12848:	movw	r0, #33092	; 0x8144
   1284c:	movt	r0, #2
   12850:	ldr	r0, [r0]
   12854:	ldr	r1, [r0, #20]
   12858:	ldr	r2, [r0, #24]
   1285c:	cmp	r1, r2
   12860:	bcs	129d4 <__mempcpy_chk@plt+0x1998>
   12864:	add	r2, r1, #1
   12868:	str	r2, [r0, #20]
   1286c:	mov	r0, #10
   12870:	strb	r0, [r1]
   12874:	mvn	r0, r8
   12878:	add	r0, r7, r0
   1287c:	sub	sp, fp, #24
   12880:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12884:	movw	r0, #33092	; 0x8144
   12888:	movt	r0, #2
   1288c:	ldr	r0, [r0]
   12890:	ldr	r1, [r0, #20]
   12894:	ldr	r2, [r0, #24]
   12898:	cmp	r1, r2
   1289c:	bcs	129ec <__mempcpy_chk@plt+0x19b0>
   128a0:	add	r2, r1, #1
   128a4:	str	r2, [r0, #20]
   128a8:	strb	r5, [r1]
   128ac:	mvn	r0, r8
   128b0:	add	r0, r7, r0
   128b4:	sub	sp, fp, #24
   128b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   128bc:	cmp	r6, #64	; 0x40
   128c0:	beq	12638 <__mempcpy_chk@plt+0x15fc>
   128c4:	movw	r1, #28067	; 0x6da3
   128c8:	mov	r0, #0
   128cc:	mov	r2, #5
   128d0:	movt	r1, #1
   128d4:	bl	10e74 <dcgettext@plt>
   128d8:	mov	r2, r0
   128dc:	mov	r0, #1
   128e0:	mov	r1, #0
   128e4:	mov	r3, r5
   128e8:	str	r7, [sp]
   128ec:	str	r6, [sp, #4]
   128f0:	bl	10ee0 <error@plt>
   128f4:	uxtb	r1, r1
   128f8:	bl	10fd0 <__overflow@plt>
   128fc:	mvn	r0, r8
   12900:	add	r0, r7, r0
   12904:	sub	sp, fp, #24
   12908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1290c:	mov	r1, #92	; 0x5c
   12910:	bl	10fd0 <__overflow@plt>
   12914:	ldrb	r1, [r7]
   12918:	cmp	r1, #0
   1291c:	bne	126ac <__mempcpy_chk@plt+0x1670>
   12920:	b	124c0 <__mempcpy_chk@plt+0x1484>
   12924:	bl	10fd0 <__overflow@plt>
   12928:	b	126cc <__mempcpy_chk@plt+0x1690>
   1292c:	mov	r1, #7
   12930:	bl	10fd0 <__overflow@plt>
   12934:	mvn	r0, r8
   12938:	add	r0, r7, r0
   1293c:	sub	sp, fp, #24
   12940:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12944:	mov	r1, #13
   12948:	bl	10fd0 <__overflow@plt>
   1294c:	mvn	r0, r8
   12950:	add	r0, r7, r0
   12954:	sub	sp, fp, #24
   12958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1295c:	mov	r1, #8
   12960:	bl	10fd0 <__overflow@plt>
   12964:	mvn	r0, r8
   12968:	add	r0, r7, r0
   1296c:	sub	sp, fp, #24
   12970:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12974:	mov	r1, #9
   12978:	bl	10fd0 <__overflow@plt>
   1297c:	mvn	r0, r8
   12980:	add	r0, r7, r0
   12984:	sub	sp, fp, #24
   12988:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1298c:	mov	r1, #11
   12990:	bl	10fd0 <__overflow@plt>
   12994:	mvn	r0, r8
   12998:	add	r0, r7, r0
   1299c:	sub	sp, fp, #24
   129a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129a4:	mov	r1, #27
   129a8:	bl	10fd0 <__overflow@plt>
   129ac:	mvn	r0, r8
   129b0:	add	r0, r7, r0
   129b4:	sub	sp, fp, #24
   129b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129bc:	mov	r1, #12
   129c0:	bl	10fd0 <__overflow@plt>
   129c4:	mvn	r0, r8
   129c8:	add	r0, r7, r0
   129cc:	sub	sp, fp, #24
   129d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129d4:	mov	r1, #10
   129d8:	bl	10fd0 <__overflow@plt>
   129dc:	mvn	r0, r8
   129e0:	add	r0, r7, r0
   129e4:	sub	sp, fp, #24
   129e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129ec:	mov	r1, r5
   129f0:	bl	10fd0 <__overflow@plt>
   129f4:	mvn	r0, r8
   129f8:	add	r0, r7, r0
   129fc:	sub	sp, fp, #24
   12a00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a04:	movw	r1, #28018	; 0x6d72
   12a08:	mov	r0, #0
   12a0c:	mov	r2, #5
   12a10:	movt	r1, #1
   12a14:	bl	10e74 <dcgettext@plt>
   12a18:	mov	r2, r0
   12a1c:	mov	r0, #1
   12a20:	mov	r1, #0
   12a24:	bl	10ee0 <error@plt>
   12a28:	mov	r0, #0
   12a2c:	bl	10f4c <exit@plt>
   12a30:	push	{r4, r5, r6, sl, fp, lr}
   12a34:	add	fp, sp, #16
   12a38:	mov	r5, r1
   12a3c:	mov	r4, r0
   12a40:	bl	10f64 <__errno_location@plt>
   12a44:	ldr	r6, [r0]
   12a48:	cmp	r6, #0
   12a4c:	beq	12a70 <__mempcpy_chk@plt+0x1a34>
   12a50:	mov	r0, r4
   12a54:	bl	14c0c <__mempcpy_chk@plt+0x3bd0>
   12a58:	movw	r2, #27811	; 0x6ca3
   12a5c:	mov	r3, r0
   12a60:	mov	r0, #0
   12a64:	mov	r1, r6
   12a68:	movt	r2, #1
   12a6c:	b	12ac0 <__mempcpy_chk@plt+0x1a84>
   12a70:	ldrb	r0, [r5]
   12a74:	cmp	r0, #0
   12a78:	popeq	{r4, r5, r6, sl, fp, pc}
   12a7c:	cmp	r4, r5
   12a80:	beq	12a90 <__mempcpy_chk@plt+0x1a54>
   12a84:	movw	r1, #27977	; 0x6d49
   12a88:	movt	r1, #1
   12a8c:	b	12a98 <__mempcpy_chk@plt+0x1a5c>
   12a90:	movw	r1, #27948	; 0x6d2c
   12a94:	movt	r1, #1
   12a98:	mov	r0, #0
   12a9c:	mov	r2, #5
   12aa0:	bl	10e74 <dcgettext@plt>
   12aa4:	mov	r5, r0
   12aa8:	mov	r0, r4
   12aac:	bl	14c0c <__mempcpy_chk@plt+0x3bd0>
   12ab0:	mov	r3, r0
   12ab4:	mov	r0, #0
   12ab8:	mov	r1, #0
   12abc:	mov	r2, r5
   12ac0:	bl	10ee0 <error@plt>
   12ac4:	movw	r0, #33100	; 0x814c
   12ac8:	mov	r1, #1
   12acc:	movt	r0, #2
   12ad0:	strb	r1, [r0]
   12ad4:	pop	{r4, r5, r6, sl, fp, pc}
   12ad8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12adc:	add	fp, sp, #24
   12ae0:	vpush	{d8}
   12ae4:	sub	sp, sp, #8
   12ae8:	mov	r4, r1
   12aec:	add	r1, sp, #4
   12af0:	mov	r5, r0
   12af4:	bl	10e5c <strtold@plt>
   12af8:	ldr	r7, [sp, #4]
   12afc:	vmov.f64	d8, d0
   12b00:	ldrb	r0, [r7]
   12b04:	cmp	r0, #0
   12b08:	beq	12b44 <__mempcpy_chk@plt+0x1b08>
   12b0c:	bl	10f64 <__errno_location@plt>
   12b10:	ldr	r8, [r0]
   12b14:	mov	r6, r0
   12b18:	mov	r1, sp
   12b1c:	mov	r0, r5
   12b20:	bl	15f9c <__mempcpy_chk@plt+0x4f60>
   12b24:	ldr	r0, [sp]
   12b28:	cmp	r7, r0
   12b2c:	bcs	12b40 <__mempcpy_chk@plt+0x1b04>
   12b30:	str	r0, [sp, #4]
   12b34:	mov	r7, r0
   12b38:	vmov.f64	d8, d0
   12b3c:	b	12b44 <__mempcpy_chk@plt+0x1b08>
   12b40:	str	r8, [r6]
   12b44:	cmp	r4, #0
   12b48:	vmov.f64	d0, d8
   12b4c:	strne	r7, [r4]
   12b50:	sub	sp, fp, #32
   12b54:	vpop	{d8}
   12b58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12b5c:	movw	r1, #33104	; 0x8150
   12b60:	movt	r1, #2
   12b64:	str	r0, [r1, #4]
   12b68:	bx	lr
   12b6c:	movw	r1, #33104	; 0x8150
   12b70:	movt	r1, #2
   12b74:	strb	r0, [r1]
   12b78:	bx	lr
   12b7c:	push	{r4, r5, r6, sl, fp, lr}
   12b80:	add	fp, sp, #16
   12b84:	sub	sp, sp, #8
   12b88:	movw	r0, #33092	; 0x8144
   12b8c:	movt	r0, #2
   12b90:	ldr	r0, [r0]
   12b94:	bl	1605c <__mempcpy_chk@plt+0x5020>
   12b98:	cmp	r0, #0
   12b9c:	beq	12bc4 <__mempcpy_chk@plt+0x1b88>
   12ba0:	movw	r5, #33104	; 0x8150
   12ba4:	movt	r5, #2
   12ba8:	ldrb	r0, [r5]
   12bac:	cmp	r0, #0
   12bb0:	beq	12bf0 <__mempcpy_chk@plt+0x1bb4>
   12bb4:	bl	10f64 <__errno_location@plt>
   12bb8:	ldr	r0, [r0]
   12bbc:	cmp	r0, #32
   12bc0:	bne	12bf0 <__mempcpy_chk@plt+0x1bb4>
   12bc4:	movw	r0, #33088	; 0x8140
   12bc8:	movt	r0, #2
   12bcc:	ldr	r0, [r0]
   12bd0:	bl	1605c <__mempcpy_chk@plt+0x5020>
   12bd4:	cmp	r0, #0
   12bd8:	subeq	sp, fp, #16
   12bdc:	popeq	{r4, r5, r6, sl, fp, pc}
   12be0:	movw	r0, #33012	; 0x80f4
   12be4:	movt	r0, #2
   12be8:	ldr	r0, [r0]
   12bec:	bl	10e2c <_exit@plt>
   12bf0:	movw	r1, #28183	; 0x6e17
   12bf4:	mov	r0, #0
   12bf8:	mov	r2, #5
   12bfc:	movt	r1, #1
   12c00:	bl	10e74 <dcgettext@plt>
   12c04:	ldr	r6, [r5, #4]
   12c08:	mov	r4, r0
   12c0c:	bl	10f64 <__errno_location@plt>
   12c10:	ldr	r5, [r0]
   12c14:	cmp	r6, #0
   12c18:	bne	12c34 <__mempcpy_chk@plt+0x1bf8>
   12c1c:	movw	r2, #27811	; 0x6ca3
   12c20:	mov	r0, #0
   12c24:	mov	r1, r5
   12c28:	mov	r3, r4
   12c2c:	movt	r2, #1
   12c30:	b	12c54 <__mempcpy_chk@plt+0x1c18>
   12c34:	mov	r0, r6
   12c38:	bl	14884 <__mempcpy_chk@plt+0x3848>
   12c3c:	movw	r2, #28195	; 0x6e23
   12c40:	mov	r3, r0
   12c44:	str	r4, [sp]
   12c48:	mov	r0, #0
   12c4c:	mov	r1, r5
   12c50:	movt	r2, #1
   12c54:	bl	10ee0 <error@plt>
   12c58:	movw	r0, #33012	; 0x80f4
   12c5c:	movt	r0, #2
   12c60:	ldr	r0, [r0]
   12c64:	bl	10e2c <_exit@plt>
   12c68:	push	{r4, r5, r6, sl, fp, lr}
   12c6c:	add	fp, sp, #16
   12c70:	mov	r4, r0
   12c74:	bl	10f64 <__errno_location@plt>
   12c78:	ldr	r6, [r0]
   12c7c:	mov	r5, r0
   12c80:	mov	r0, r4
   12c84:	bl	10e14 <free@plt>
   12c88:	str	r6, [r5]
   12c8c:	pop	{r4, r5, r6, sl, fp, pc}
   12c90:	push	{r4, r5, fp, lr}
   12c94:	add	fp, sp, #8
   12c98:	cmp	r0, #0
   12c9c:	beq	12d30 <__mempcpy_chk@plt+0x1cf4>
   12ca0:	mov	r1, #47	; 0x2f
   12ca4:	mov	r4, r0
   12ca8:	bl	10fe8 <strrchr@plt>
   12cac:	cmp	r0, #0
   12cb0:	mov	r5, r4
   12cb4:	addne	r5, r0, #1
   12cb8:	sub	r0, r5, r4
   12cbc:	cmp	r0, #7
   12cc0:	blt	12d14 <__mempcpy_chk@plt+0x1cd8>
   12cc4:	movw	r1, #28258	; 0x6e62
   12cc8:	sub	r0, r5, #7
   12ccc:	mov	r2, #7
   12cd0:	movt	r1, #1
   12cd4:	bl	11024 <strncmp@plt>
   12cd8:	cmp	r0, #0
   12cdc:	bne	12d14 <__mempcpy_chk@plt+0x1cd8>
   12ce0:	movw	r1, #28266	; 0x6e6a
   12ce4:	mov	r0, r5
   12ce8:	mov	r2, #3
   12cec:	movt	r1, #1
   12cf0:	bl	11024 <strncmp@plt>
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d04 <__mempcpy_chk@plt+0x1cc8>
   12cfc:	mov	r4, r5
   12d00:	b	12d14 <__mempcpy_chk@plt+0x1cd8>
   12d04:	movw	r0, #33080	; 0x8138
   12d08:	add	r4, r5, #3
   12d0c:	movt	r0, #2
   12d10:	str	r4, [r0]
   12d14:	movw	r0, #33084	; 0x813c
   12d18:	movt	r0, #2
   12d1c:	str	r4, [r0]
   12d20:	movw	r0, #33112	; 0x8158
   12d24:	movt	r0, #2
   12d28:	str	r4, [r0]
   12d2c:	pop	{r4, r5, fp, pc}
   12d30:	movw	r0, #33088	; 0x8140
   12d34:	mov	r1, #55	; 0x37
   12d38:	mov	r2, #1
   12d3c:	movt	r0, #2
   12d40:	ldr	r3, [r0]
   12d44:	movw	r0, #28202	; 0x6e2a
   12d48:	movt	r0, #1
   12d4c:	bl	10ea4 <fwrite@plt>
   12d50:	bl	11030 <abort@plt>
   12d54:	push	{r4, r5, r6, sl, fp, lr}
   12d58:	add	fp, sp, #16
   12d5c:	mov	r4, r0
   12d60:	movw	r0, #33120	; 0x8160
   12d64:	movt	r0, #2
   12d68:	cmp	r4, #0
   12d6c:	moveq	r4, r0
   12d70:	bl	10f64 <__errno_location@plt>
   12d74:	ldr	r6, [r0]
   12d78:	mov	r5, r0
   12d7c:	mov	r0, r4
   12d80:	mov	r1, #48	; 0x30
   12d84:	bl	15b38 <__mempcpy_chk@plt+0x4afc>
   12d88:	str	r6, [r5]
   12d8c:	pop	{r4, r5, r6, sl, fp, pc}
   12d90:	movw	r1, #33120	; 0x8160
   12d94:	cmp	r0, #0
   12d98:	movt	r1, #2
   12d9c:	movne	r1, r0
   12da0:	ldr	r0, [r1]
   12da4:	bx	lr
   12da8:	movw	r2, #33120	; 0x8160
   12dac:	cmp	r0, #0
   12db0:	movt	r2, #2
   12db4:	movne	r2, r0
   12db8:	str	r1, [r2]
   12dbc:	bx	lr
   12dc0:	movw	r3, #33120	; 0x8160
   12dc4:	cmp	r0, #0
   12dc8:	movt	r3, #2
   12dcc:	movne	r3, r0
   12dd0:	ubfx	r0, r1, #5, #3
   12dd4:	and	r1, r1, #31
   12dd8:	add	r0, r3, r0, lsl #2
   12ddc:	ldr	r3, [r0, #8]
   12de0:	eor	r2, r2, r3, lsr r1
   12de4:	and	r2, r2, #1
   12de8:	eor	r2, r3, r2, lsl r1
   12dec:	str	r2, [r0, #8]
   12df0:	mov	r0, #1
   12df4:	and	r0, r0, r3, lsr r1
   12df8:	bx	lr
   12dfc:	movw	r2, #33120	; 0x8160
   12e00:	cmp	r0, #0
   12e04:	movt	r2, #2
   12e08:	movne	r2, r0
   12e0c:	ldr	r0, [r2, #4]
   12e10:	str	r1, [r2, #4]
   12e14:	bx	lr
   12e18:	movw	r3, #33120	; 0x8160
   12e1c:	cmp	r0, #0
   12e20:	movt	r3, #2
   12e24:	movne	r3, r0
   12e28:	cmp	r1, #0
   12e2c:	mov	r0, #10
   12e30:	cmpne	r2, #0
   12e34:	str	r0, [r3]
   12e38:	bne	12e48 <__mempcpy_chk@plt+0x1e0c>
   12e3c:	push	{fp, lr}
   12e40:	mov	fp, sp
   12e44:	bl	11030 <abort@plt>
   12e48:	str	r1, [r3, #40]	; 0x28
   12e4c:	str	r2, [r3, #44]	; 0x2c
   12e50:	bx	lr
   12e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e58:	add	fp, sp, #28
   12e5c:	sub	sp, sp, #20
   12e60:	mov	r7, r0
   12e64:	ldr	r0, [fp, #8]
   12e68:	movw	r5, #33120	; 0x8160
   12e6c:	mov	r8, r3
   12e70:	mov	r9, r2
   12e74:	mov	sl, r1
   12e78:	movt	r5, #2
   12e7c:	cmp	r0, #0
   12e80:	movne	r5, r0
   12e84:	bl	10f64 <__errno_location@plt>
   12e88:	mov	r4, r0
   12e8c:	ldm	r5, {r0, r1}
   12e90:	ldr	r2, [r5, #40]	; 0x28
   12e94:	ldr	r3, [r5, #44]	; 0x2c
   12e98:	add	r5, r5, #8
   12e9c:	ldr	r6, [r4]
   12ea0:	stm	sp, {r0, r1, r5}
   12ea4:	str	r2, [sp, #12]
   12ea8:	str	r3, [sp, #16]
   12eac:	mov	r0, r7
   12eb0:	mov	r1, sl
   12eb4:	mov	r2, r9
   12eb8:	mov	r3, r8
   12ebc:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   12ec0:	str	r6, [r4]
   12ec4:	sub	sp, fp, #28
   12ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ed0:	add	fp, sp, #28
   12ed4:	sub	sp, sp, #156	; 0x9c
   12ed8:	str	r0, [sp, #76]	; 0x4c
   12edc:	ldr	r0, [fp, #12]
   12ee0:	mov	r6, r1
   12ee4:	str	r3, [sp, #84]	; 0x54
   12ee8:	str	r2, [fp, #-84]	; 0xffffffac
   12eec:	and	r1, r0, #4
   12ef0:	str	r1, [sp, #24]
   12ef4:	and	r1, r0, #1
   12ef8:	str	r1, [sp, #28]
   12efc:	ubfx	r8, r0, #1, #1
   12f00:	bl	10ebc <__ctype_get_mb_cur_max@plt>
   12f04:	str	r0, [sp, #32]
   12f08:	ldr	r0, [fp, #24]
   12f0c:	ldr	r7, [fp, #8]
   12f10:	mov	r1, #0
   12f14:	mov	r2, #0
   12f18:	mov	r4, #1
   12f1c:	str	r1, [sp, #52]	; 0x34
   12f20:	str	r0, [sp, #72]	; 0x48
   12f24:	ldr	r0, [fp, #20]
   12f28:	str	r0, [sp, #68]	; 0x44
   12f2c:	mov	r0, #0
   12f30:	str	r0, [sp, #48]	; 0x30
   12f34:	mov	r0, #0
   12f38:	str	r0, [sp, #92]	; 0x5c
   12f3c:	mov	r0, #0
   12f40:	str	r0, [fp, #-76]	; 0xffffffb4
   12f44:	mov	r0, #0
   12f48:	cmp	r7, #10
   12f4c:	bhi	14234 <__mempcpy_chk@plt+0x31f8>
   12f50:	add	r1, pc, #28
   12f54:	mov	sl, r6
   12f58:	ldr	r6, [sp, #76]	; 0x4c
   12f5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f60:	ldr	lr, [sp, #84]	; 0x54
   12f64:	mov	r9, #0
   12f68:	mov	r3, #1
   12f6c:	mov	r5, #0
   12f70:	ldr	pc, [r1, r7, lsl #2]
   12f74:	andeq	r3, r1, r4, asr #32
   12f78:	andeq	r3, r1, r0, lsl #1
   12f7c:	andeq	r3, r1, r4, asr r0
   12f80:	andeq	r3, r1, ip, lsr r0
   12f84:	andeq	r3, r1, r4, ror r0
   12f88:	andeq	r3, r1, r8, lsr #1
   12f8c:	andeq	r3, r1, r4, rrx
   12f90:			; <UNDEFINED> instruction: 0x000132b4
   12f94:	andeq	r2, r1, r0, lsr #31
   12f98:	andeq	r2, r1, r0, lsr #31
   12f9c:	andeq	r3, r1, r8, asr #4
   12fa0:	mov	r9, r4
   12fa4:	movw	r4, #28350	; 0x6ebe
   12fa8:	mov	r5, r8
   12fac:	mov	r8, r2
   12fb0:	mov	r0, #0
   12fb4:	mov	r2, #5
   12fb8:	movt	r4, #1
   12fbc:	mov	r1, r4
   12fc0:	bl	10e74 <dcgettext@plt>
   12fc4:	cmp	r0, r4
   12fc8:	str	r0, [sp, #68]	; 0x44
   12fcc:	bne	1315c <__mempcpy_chk@plt+0x2120>
   12fd0:	bl	16288 <__mempcpy_chk@plt+0x524c>
   12fd4:	ldrb	r1, [r0]
   12fd8:	and	r1, r1, #223	; 0xdf
   12fdc:	cmp	r1, #71	; 0x47
   12fe0:	beq	13128 <__mempcpy_chk@plt+0x20ec>
   12fe4:	cmp	r1, #85	; 0x55
   12fe8:	bne	13140 <__mempcpy_chk@plt+0x2104>
   12fec:	ldrb	r1, [r0, #1]
   12ff0:	and	r1, r1, #223	; 0xdf
   12ff4:	cmp	r1, #84	; 0x54
   12ff8:	bne	13140 <__mempcpy_chk@plt+0x2104>
   12ffc:	ldrb	r1, [r0, #2]
   13000:	and	r1, r1, #223	; 0xdf
   13004:	cmp	r1, #70	; 0x46
   13008:	bne	13140 <__mempcpy_chk@plt+0x2104>
   1300c:	ldrb	r1, [r0, #3]
   13010:	cmp	r1, #45	; 0x2d
   13014:	ldrbeq	r1, [r0, #4]
   13018:	cmpeq	r1, #56	; 0x38
   1301c:	bne	13140 <__mempcpy_chk@plt+0x2104>
   13020:	ldrb	r0, [r0, #5]
   13024:	cmp	r0, #0
   13028:	movw	r0, #28354	; 0x6ec2
   1302c:	movt	r0, #1
   13030:	str	r0, [sp, #68]	; 0x44
   13034:	bne	13140 <__mempcpy_chk@plt+0x2104>
   13038:	b	1315c <__mempcpy_chk@plt+0x2120>
   1303c:	mov	r0, #1
   13040:	b	13080 <__mempcpy_chk@plt+0x2044>
   13044:	mov	r7, #0
   13048:	mov	r9, #0
   1304c:	mov	r3, r0
   13050:	b	13120 <__mempcpy_chk@plt+0x20e4>
   13054:	tst	r8, #1
   13058:	bne	13080 <__mempcpy_chk@plt+0x2044>
   1305c:	mov	r3, r0
   13060:	b	130d8 <__mempcpy_chk@plt+0x209c>
   13064:	mov	r0, #1
   13068:	mov	r9, #0
   1306c:	mov	r7, #5
   13070:	b	130bc <__mempcpy_chk@plt+0x2080>
   13074:	mov	r3, #1
   13078:	tst	r8, #1
   1307c:	beq	130d8 <__mempcpy_chk@plt+0x209c>
   13080:	mov	r1, #1
   13084:	mov	r9, #0
   13088:	mov	r7, #2
   1308c:	mov	r3, r0
   13090:	mov	r5, #1
   13094:	str	r1, [fp, #-76]	; 0xffffffb4
   13098:	movw	r1, #28352	; 0x6ec0
   1309c:	movt	r1, #1
   130a0:	str	r1, [sp, #92]	; 0x5c
   130a4:	b	132b4 <__mempcpy_chk@plt+0x2278>
   130a8:	mov	r7, #5
   130ac:	tst	r8, #1
   130b0:	beq	130f8 <__mempcpy_chk@plt+0x20bc>
   130b4:	mov	r0, #1
   130b8:	mov	r9, #0
   130bc:	str	r0, [fp, #-76]	; 0xffffffb4
   130c0:	movw	r0, #28348	; 0x6ebc
   130c4:	mov	r3, #1
   130c8:	mov	r5, #1
   130cc:	movt	r0, #1
   130d0:	str	r0, [sp, #92]	; 0x5c
   130d4:	b	132b4 <__mempcpy_chk@plt+0x2278>
   130d8:	cmp	sl, #0
   130dc:	mov	r9, #1
   130e0:	mov	r7, #2
   130e4:	movne	r0, #39	; 0x27
   130e8:	strbne	r0, [r6]
   130ec:	movw	r0, #28352	; 0x6ec0
   130f0:	movt	r0, #1
   130f4:	b	13114 <__mempcpy_chk@plt+0x20d8>
   130f8:	cmp	sl, #0
   130fc:	mov	r9, #1
   13100:	mov	r3, #1
   13104:	movne	r0, #34	; 0x22
   13108:	strbne	r0, [r6]
   1310c:	movw	r0, #28348	; 0x6ebc
   13110:	movt	r0, #1
   13114:	str	r0, [sp, #92]	; 0x5c
   13118:	mov	r0, #1
   1311c:	str	r0, [fp, #-76]	; 0xffffffb4
   13120:	mov	r5, #0
   13124:	b	132b4 <__mempcpy_chk@plt+0x2278>
   13128:	ldrb	r1, [r0, #1]
   1312c:	and	r1, r1, #223	; 0xdf
   13130:	cmp	r1, #66	; 0x42
   13134:	ldrbeq	r1, [r0, #2]
   13138:	cmpeq	r1, #49	; 0x31
   1313c:	beq	1405c <__mempcpy_chk@plt+0x3020>
   13140:	movw	r0, #28352	; 0x6ec0
   13144:	movw	r1, #28348	; 0x6ebc
   13148:	cmp	r7, #9
   1314c:	movt	r0, #1
   13150:	movt	r1, #1
   13154:	moveq	r0, r1
   13158:	str	r0, [sp, #68]	; 0x44
   1315c:	movw	r4, #28352	; 0x6ec0
   13160:	mov	r0, #0
   13164:	mov	r2, #5
   13168:	movt	r4, #1
   1316c:	mov	r1, r4
   13170:	bl	10e74 <dcgettext@plt>
   13174:	cmp	r0, r4
   13178:	str	r0, [sp, #72]	; 0x48
   1317c:	beq	1318c <__mempcpy_chk@plt+0x2150>
   13180:	mov	r4, r9
   13184:	mov	r2, r8
   13188:	b	13244 <__mempcpy_chk@plt+0x2208>
   1318c:	bl	16288 <__mempcpy_chk@plt+0x524c>
   13190:	ldrb	r1, [r0]
   13194:	mov	r4, r9
   13198:	and	r1, r1, #223	; 0xdf
   1319c:	cmp	r1, #71	; 0x47
   131a0:	beq	131fc <__mempcpy_chk@plt+0x21c0>
   131a4:	cmp	r1, #85	; 0x55
   131a8:	mov	r2, r8
   131ac:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   131b0:	ldrb	r1, [r0, #1]
   131b4:	and	r1, r1, #223	; 0xdf
   131b8:	cmp	r1, #84	; 0x54
   131bc:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   131c0:	ldrb	r1, [r0, #2]
   131c4:	and	r1, r1, #223	; 0xdf
   131c8:	cmp	r1, #70	; 0x46
   131cc:	ldrbeq	r1, [r0, #3]
   131d0:	cmpeq	r1, #45	; 0x2d
   131d4:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   131d8:	ldrb	r1, [r0, #4]
   131dc:	cmp	r1, #56	; 0x38
   131e0:	ldrbeq	r0, [r0, #5]
   131e4:	cmpeq	r0, #0
   131e8:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   131ec:	movw	r0, #28358	; 0x6ec6
   131f0:	movt	r0, #1
   131f4:	str	r0, [sp, #72]	; 0x48
   131f8:	b	13244 <__mempcpy_chk@plt+0x2208>
   131fc:	ldrb	r1, [r0, #1]
   13200:	mov	r2, r8
   13204:	and	r1, r1, #223	; 0xdf
   13208:	cmp	r1, #66	; 0x42
   1320c:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   13210:	ldrb	r1, [r0, #2]
   13214:	cmp	r1, #49	; 0x31
   13218:	ldrbeq	r1, [r0, #3]
   1321c:	cmpeq	r1, #56	; 0x38
   13220:	beq	140a0 <__mempcpy_chk@plt+0x3064>
   13224:	movw	r0, #28352	; 0x6ec0
   13228:	cmp	r7, #9
   1322c:	movt	r0, #1
   13230:	mov	r1, r0
   13234:	movw	r0, #28348	; 0x6ebc
   13238:	movt	r0, #1
   1323c:	moveq	r1, r0
   13240:	str	r1, [sp, #72]	; 0x48
   13244:	mov	r8, r5
   13248:	mov	r9, #0
   1324c:	tst	r8, #1
   13250:	mov	r5, r8
   13254:	str	r2, [fp, #-48]	; 0xffffffd0
   13258:	bne	13290 <__mempcpy_chk@plt+0x2254>
   1325c:	ldr	r0, [sp, #68]	; 0x44
   13260:	ldrb	r0, [r0]
   13264:	cmp	r0, #0
   13268:	beq	13290 <__mempcpy_chk@plt+0x2254>
   1326c:	ldr	r1, [sp, #68]	; 0x44
   13270:	mov	r9, #0
   13274:	add	r1, r1, #1
   13278:	cmp	r9, sl
   1327c:	strbcc	r0, [r6, r9]
   13280:	ldrb	r0, [r1, r9]
   13284:	add	r9, r9, #1
   13288:	cmp	r0, #0
   1328c:	bne	13278 <__mempcpy_chk@plt+0x223c>
   13290:	ldr	r8, [sp, #72]	; 0x48
   13294:	mov	r0, r8
   13298:	bl	10f58 <strlen@plt>
   1329c:	ldr	ip, [fp, #-84]	; 0xffffffac
   132a0:	ldr	lr, [sp, #84]	; 0x54
   132a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   132a8:	str	r0, [fp, #-76]	; 0xffffffb4
   132ac:	str	r8, [sp, #92]	; 0x5c
   132b0:	mov	r3, #1
   132b4:	ldr	r0, [fp, #16]
   132b8:	str	r7, [fp, #-64]	; 0xffffffc0
   132bc:	str	r5, [fp, #-72]	; 0xffffffb8
   132c0:	str	r3, [sp, #80]	; 0x50
   132c4:	cmp	r0, #0
   132c8:	movwne	r0, #1
   132cc:	and	r0, r0, r5
   132d0:	str	r0, [fp, #-88]	; 0xffffffa8
   132d4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   132d8:	cmp	r0, #0
   132dc:	movwne	r0, #1
   132e0:	subs	r7, r7, #2
   132e4:	and	r1, r0, r5
   132e8:	str	r7, [fp, #-80]	; 0xffffffb0
   132ec:	and	r1, r3, r1
   132f0:	str	r1, [sp, #40]	; 0x28
   132f4:	clz	r1, r7
   132f8:	lsr	r1, r1, #5
   132fc:	and	r1, r1, r5
   13300:	eor	r5, r5, #1
   13304:	str	r1, [sp, #36]	; 0x24
   13308:	mov	r1, r7
   1330c:	str	r5, [sp, #88]	; 0x58
   13310:	mov	r7, #0
   13314:	movwne	r1, #1
   13318:	orr	r5, r1, r5
   1331c:	and	r1, r1, r3
   13320:	and	r0, r0, r1
   13324:	str	r5, [sp, #60]	; 0x3c
   13328:	str	r1, [fp, #-68]	; 0xffffffbc
   1332c:	str	r0, [fp, #-60]	; 0xffffffc4
   13330:	eor	r0, r3, #1
   13334:	str	r0, [sp, #44]	; 0x2c
   13338:	cmn	lr, #1
   1333c:	beq	1334c <__mempcpy_chk@plt+0x2310>
   13340:	cmp	r7, lr
   13344:	bne	13358 <__mempcpy_chk@plt+0x231c>
   13348:	b	13fd0 <__mempcpy_chk@plt+0x2f94>
   1334c:	ldrb	r0, [ip, r7]
   13350:	cmp	r0, #0
   13354:	beq	13fd8 <__mempcpy_chk@plt+0x2f9c>
   13358:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1335c:	mov	r8, #0
   13360:	str	r4, [fp, #-52]	; 0xffffffcc
   13364:	str	r2, [fp, #-48]	; 0xffffffd0
   13368:	cmp	r0, #0
   1336c:	beq	133a0 <__mempcpy_chk@plt+0x2364>
   13370:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13374:	add	r4, r7, r0
   13378:	cmp	r0, #2
   1337c:	bcc	13398 <__mempcpy_chk@plt+0x235c>
   13380:	cmn	lr, #1
   13384:	bne	13398 <__mempcpy_chk@plt+0x235c>
   13388:	mov	r0, ip
   1338c:	bl	10f58 <strlen@plt>
   13390:	ldr	ip, [fp, #-84]	; 0xffffffac
   13394:	mov	lr, r0
   13398:	cmp	r4, lr
   1339c:	bls	133b8 <__mempcpy_chk@plt+0x237c>
   133a0:	mov	r0, #0
   133a4:	str	r0, [fp, #-56]	; 0xffffffc8
   133a8:	ldrb	r5, [ip, r7]
   133ac:	cmp	r5, #126	; 0x7e
   133b0:	bls	13408 <__mempcpy_chk@plt+0x23cc>
   133b4:	b	13810 <__mempcpy_chk@plt+0x27d4>
   133b8:	ldr	r1, [sp, #92]	; 0x5c
   133bc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   133c0:	add	r0, ip, r7
   133c4:	mov	r4, lr
   133c8:	bl	10e68 <memcmp@plt>
   133cc:	ldr	r2, [sp, #88]	; 0x58
   133d0:	cmp	r0, #0
   133d4:	mov	r1, r0
   133d8:	movwne	r1, #1
   133dc:	orr	r1, r1, r2
   133e0:	tst	r1, #1
   133e4:	beq	140e4 <__mempcpy_chk@plt+0x30a8>
   133e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   133ec:	clz	r0, r0
   133f0:	mov	lr, r4
   133f4:	lsr	r0, r0, #5
   133f8:	str	r0, [fp, #-56]	; 0xffffffc8
   133fc:	ldrb	r5, [ip, r7]
   13400:	cmp	r5, #126	; 0x7e
   13404:	bhi	13810 <__mempcpy_chk@plt+0x27d4>
   13408:	add	r3, pc, #16
   1340c:	mov	r4, #1
   13410:	mov	r2, #110	; 0x6e
   13414:	mov	r0, #97	; 0x61
   13418:	mov	r1, #0
   1341c:	ldr	pc, [r3, r5, lsl #2]
   13420:	strdeq	r3, [r1], -r0
   13424:	andeq	r3, r1, r0, lsl r8
   13428:	andeq	r3, r1, r0, lsl r8
   1342c:	andeq	r3, r1, r0, lsl r8
   13430:	andeq	r3, r1, r0, lsl r8
   13434:	andeq	r3, r1, r0, lsl r8
   13438:	andeq	r3, r1, r0, lsl r8
   1343c:	andeq	r3, r1, ip, ror #17
   13440:	ldrdeq	r3, [r1], -r0
   13444:			; <UNDEFINED> instruction: 0x000136b8
   13448:	ldrdeq	r3, [r1], -ip
   1344c:	andeq	r3, r1, ip, ror #14
   13450:			; <UNDEFINED> instruction: 0x000136b0
   13454:	ldrdeq	r3, [r1], -r8
   13458:	andeq	r3, r1, r0, lsl r8
   1345c:	andeq	r3, r1, r0, lsl r8
   13460:	andeq	r3, r1, r0, lsl r8
   13464:	andeq	r3, r1, r0, lsl r8
   13468:	andeq	r3, r1, r0, lsl r8
   1346c:	andeq	r3, r1, r0, lsl r8
   13470:	andeq	r3, r1, r0, lsl r8
   13474:	andeq	r3, r1, r0, lsl r8
   13478:	andeq	r3, r1, r0, lsl r8
   1347c:	andeq	r3, r1, r0, lsl r8
   13480:	andeq	r3, r1, r0, lsl r8
   13484:	andeq	r3, r1, r0, lsl r8
   13488:	andeq	r3, r1, r0, lsl r8
   1348c:	andeq	r3, r1, r0, lsl r8
   13490:	andeq	r3, r1, r0, lsl r8
   13494:	andeq	r3, r1, r0, lsl r8
   13498:	andeq	r3, r1, r0, lsl r8
   1349c:	andeq	r3, r1, r0, lsl r8
   134a0:	andeq	r3, r1, r8, ror #16
   134a4:	andeq	r3, r1, ip, ror #16
   134a8:	andeq	r3, r1, ip, ror #16
   134ac:	andeq	r3, r1, ip, lsr r6
   134b0:	andeq	r3, r1, ip, ror #16
   134b4:	andeq	r3, r1, ip, lsl r6
   134b8:	andeq	r3, r1, ip, ror #16
   134bc:	andeq	r3, r1, r4, ror r7
   134c0:	andeq	r3, r1, ip, ror #16
   134c4:	andeq	r3, r1, ip, ror #16
   134c8:	andeq	r3, r1, ip, ror #16
   134cc:	andeq	r3, r1, ip, lsl r6
   134d0:	andeq	r3, r1, ip, lsl r6
   134d4:	andeq	r3, r1, ip, lsl r6
   134d8:	andeq	r3, r1, ip, lsl r6
   134dc:	andeq	r3, r1, ip, lsl r6
   134e0:	andeq	r3, r1, ip, lsl r6
   134e4:	andeq	r3, r1, ip, lsl r6
   134e8:	andeq	r3, r1, ip, lsl r6
   134ec:	andeq	r3, r1, ip, lsl r6
   134f0:	andeq	r3, r1, ip, lsl r6
   134f4:	andeq	r3, r1, ip, lsl r6
   134f8:	andeq	r3, r1, ip, lsl r6
   134fc:	andeq	r3, r1, ip, lsl r6
   13500:	andeq	r3, r1, ip, lsl r6
   13504:	andeq	r3, r1, ip, lsl r6
   13508:	andeq	r3, r1, ip, lsl r6
   1350c:	andeq	r3, r1, ip, ror #16
   13510:	andeq	r3, r1, ip, ror #16
   13514:	andeq	r3, r1, ip, ror #16
   13518:	andeq	r3, r1, ip, ror #16
   1351c:	andeq	r3, r1, r0, lsr r7
   13520:	andeq	r3, r1, r0, lsl r8
   13524:	andeq	r3, r1, ip, lsl r6
   13528:	andeq	r3, r1, ip, lsl r6
   1352c:	andeq	r3, r1, ip, lsl r6
   13530:	andeq	r3, r1, ip, lsl r6
   13534:	andeq	r3, r1, ip, lsl r6
   13538:	andeq	r3, r1, ip, lsl r6
   1353c:	andeq	r3, r1, ip, lsl r6
   13540:	andeq	r3, r1, ip, lsl r6
   13544:	andeq	r3, r1, ip, lsl r6
   13548:	andeq	r3, r1, ip, lsl r6
   1354c:	andeq	r3, r1, ip, lsl r6
   13550:	andeq	r3, r1, ip, lsl r6
   13554:	andeq	r3, r1, ip, lsl r6
   13558:	andeq	r3, r1, ip, lsl r6
   1355c:	andeq	r3, r1, ip, lsl r6
   13560:	andeq	r3, r1, ip, lsl r6
   13564:	andeq	r3, r1, ip, lsl r6
   13568:	andeq	r3, r1, ip, lsl r6
   1356c:	andeq	r3, r1, ip, lsl r6
   13570:	andeq	r3, r1, ip, lsl r6
   13574:	andeq	r3, r1, ip, lsl r6
   13578:	andeq	r3, r1, ip, lsl r6
   1357c:	andeq	r3, r1, ip, lsl r6
   13580:	andeq	r3, r1, ip, lsl r6
   13584:	andeq	r3, r1, ip, lsl r6
   13588:	andeq	r3, r1, ip, lsl r6
   1358c:	andeq	r3, r1, ip, ror #16
   13590:	andeq	r3, r1, ip, ror r6
   13594:	andeq	r3, r1, ip, lsl r6
   13598:	andeq	r3, r1, ip, ror #16
   1359c:	andeq	r3, r1, ip, lsl r6
   135a0:	andeq	r3, r1, ip, ror #16
   135a4:	andeq	r3, r1, ip, lsl r6
   135a8:	andeq	r3, r1, ip, lsl r6
   135ac:	andeq	r3, r1, ip, lsl r6
   135b0:	andeq	r3, r1, ip, lsl r6
   135b4:	andeq	r3, r1, ip, lsl r6
   135b8:	andeq	r3, r1, ip, lsl r6
   135bc:	andeq	r3, r1, ip, lsl r6
   135c0:	andeq	r3, r1, ip, lsl r6
   135c4:	andeq	r3, r1, ip, lsl r6
   135c8:	andeq	r3, r1, ip, lsl r6
   135cc:	andeq	r3, r1, ip, lsl r6
   135d0:	andeq	r3, r1, ip, lsl r6
   135d4:	andeq	r3, r1, ip, lsl r6
   135d8:	andeq	r3, r1, ip, lsl r6
   135dc:	andeq	r3, r1, ip, lsl r6
   135e0:	andeq	r3, r1, ip, lsl r6
   135e4:	andeq	r3, r1, ip, lsl r6
   135e8:	andeq	r3, r1, ip, lsl r6
   135ec:	andeq	r3, r1, ip, lsl r6
   135f0:	andeq	r3, r1, ip, lsl r6
   135f4:	andeq	r3, r1, ip, lsl r6
   135f8:	andeq	r3, r1, ip, lsl r6
   135fc:	andeq	r3, r1, ip, lsl r6
   13600:	andeq	r3, r1, ip, lsl r6
   13604:	andeq	r3, r1, ip, lsl r6
   13608:	andeq	r3, r1, ip, lsl r6
   1360c:	andeq	r3, r1, ip, asr r6
   13610:	andeq	r3, r1, ip, ror #16
   13614:	andeq	r3, r1, ip, asr r6
   13618:	andeq	r3, r1, ip, lsr r6
   1361c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13620:	cmp	r0, #0
   13624:	beq	13900 <__mempcpy_chk@plt+0x28c4>
   13628:	ldr	r0, [fp, #16]
   1362c:	cmp	r0, #0
   13630:	mov	r0, r5
   13634:	bne	13910 <__mempcpy_chk@plt+0x28d4>
   13638:	b	13930 <__mempcpy_chk@plt+0x28f4>
   1363c:	mov	r4, #0
   13640:	cmp	r7, #0
   13644:	beq	13868 <__mempcpy_chk@plt+0x282c>
   13648:	mov	r8, #0
   1364c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13650:	cmp	r0, #0
   13654:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13658:	b	13900 <__mempcpy_chk@plt+0x28c4>
   1365c:	mov	r4, #0
   13660:	cmn	lr, #1
   13664:	beq	13840 <__mempcpy_chk@plt+0x2804>
   13668:	cmp	r7, #0
   1366c:	bne	13648 <__mempcpy_chk@plt+0x260c>
   13670:	cmp	lr, #1
   13674:	beq	13868 <__mempcpy_chk@plt+0x282c>
   13678:	b	13648 <__mempcpy_chk@plt+0x260c>
   1367c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13680:	cmp	r0, #2
   13684:	bne	13898 <__mempcpy_chk@plt+0x285c>
   13688:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1368c:	tst	r0, #1
   13690:	bne	140f8 <__mempcpy_chk@plt+0x30bc>
   13694:	mov	r8, #0
   13698:	mov	r0, #92	; 0x5c
   1369c:	mov	r4, #0
   136a0:	cmp	r8, #0
   136a4:	beq	138b8 <__mempcpy_chk@plt+0x287c>
   136a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   136ac:	b	139ac <__mempcpy_chk@plt+0x2970>
   136b0:	mov	r0, #102	; 0x66
   136b4:	b	138ec <__mempcpy_chk@plt+0x28b0>
   136b8:	mov	r2, #116	; 0x74
   136bc:	ldr	r0, [sp, #60]	; 0x3c
   136c0:	tst	r0, #1
   136c4:	mov	r0, r2
   136c8:	bne	138ec <__mempcpy_chk@plt+0x28b0>
   136cc:	b	140f8 <__mempcpy_chk@plt+0x30bc>
   136d0:	mov	r0, #98	; 0x62
   136d4:	b	138ec <__mempcpy_chk@plt+0x28b0>
   136d8:	mov	r2, #114	; 0x72
   136dc:	ldr	r0, [sp, #60]	; 0x3c
   136e0:	tst	r0, #1
   136e4:	mov	r0, r2
   136e8:	bne	138ec <__mempcpy_chk@plt+0x28b0>
   136ec:	b	140f8 <__mempcpy_chk@plt+0x30bc>
   136f0:	ldr	r0, [sp, #80]	; 0x50
   136f4:	tst	r0, #1
   136f8:	beq	139d4 <__mempcpy_chk@plt+0x2998>
   136fc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13700:	tst	r0, #1
   13704:	bne	14220 <__mempcpy_chk@plt+0x31e4>
   13708:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1370c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13710:	cmp	r0, #2
   13714:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13718:	movwne	r0, #1
   1371c:	orr	r0, r0, r2
   13720:	tst	r0, #1
   13724:	beq	13ccc <__mempcpy_chk@plt+0x2c90>
   13728:	mov	r0, r9
   1372c:	b	13d00 <__mempcpy_chk@plt+0x2cc4>
   13730:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13734:	mov	r8, #0
   13738:	mov	r5, #63	; 0x3f
   1373c:	cmp	r0, #5
   13740:	beq	13b88 <__mempcpy_chk@plt+0x2b4c>
   13744:	cmp	r0, #2
   13748:	bne	13c38 <__mempcpy_chk@plt+0x2bfc>
   1374c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13750:	tst	r0, #1
   13754:	bne	140f8 <__mempcpy_chk@plt+0x30bc>
   13758:	mov	r4, #0
   1375c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13760:	cmp	r0, #0
   13764:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13768:	b	13900 <__mempcpy_chk@plt+0x28c4>
   1376c:	mov	r0, #118	; 0x76
   13770:	b	138ec <__mempcpy_chk@plt+0x28b0>
   13774:	mov	r0, #1
   13778:	mov	r5, #39	; 0x27
   1377c:	str	r0, [sp, #52]	; 0x34
   13780:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13784:	cmp	r0, #2
   13788:	bne	137fc <__mempcpy_chk@plt+0x27c0>
   1378c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13790:	tst	r0, #1
   13794:	bne	140f8 <__mempcpy_chk@plt+0x30bc>
   13798:	ldr	r2, [sp, #48]	; 0x30
   1379c:	clz	r1, sl
   137a0:	mov	r8, #0
   137a4:	lsr	r1, r1, #5
   137a8:	cmp	r2, #0
   137ac:	mov	r0, r2
   137b0:	movwne	r0, #1
   137b4:	orrs	r0, r0, r1
   137b8:	moveq	r2, sl
   137bc:	moveq	sl, r0
   137c0:	cmp	r9, sl
   137c4:	str	r2, [sp, #48]	; 0x30
   137c8:	movcc	r0, #39	; 0x27
   137cc:	strbcc	r0, [r6, r9]
   137d0:	add	r0, r9, #1
   137d4:	cmp	r0, sl
   137d8:	movcc	r1, #92	; 0x5c
   137dc:	strbcc	r1, [r6, r0]
   137e0:	add	r0, r9, #2
   137e4:	add	r9, r9, #3
   137e8:	cmp	r0, sl
   137ec:	movcc	r1, #39	; 0x27
   137f0:	strbcc	r1, [r6, r0]
   137f4:	mov	r0, #0
   137f8:	str	r0, [fp, #-48]	; 0xffffffd0
   137fc:	mov	r4, #1
   13800:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13804:	cmp	r0, #0
   13808:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   1380c:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13810:	ldr	r0, [sp, #32]
   13814:	cmp	r0, #1
   13818:	bne	13a04 <__mempcpy_chk@plt+0x29c8>
   1381c:	str	lr, [sp, #84]	; 0x54
   13820:	bl	10f40 <__ctype_b_loc@plt>
   13824:	ldr	r0, [r0]
   13828:	ldr	ip, [fp, #-84]	; 0xffffffac
   1382c:	mov	r1, #1
   13830:	add	r0, r0, r5, lsl #1
   13834:	ldrb	r0, [r0, #1]
   13838:	ubfx	r4, r0, #6, #1
   1383c:	b	13dfc <__mempcpy_chk@plt+0x2dc0>
   13840:	cmp	r7, #0
   13844:	ldrbeq	r0, [ip, #1]
   13848:	cmpeq	r0, #0
   1384c:	beq	13868 <__mempcpy_chk@plt+0x282c>
   13850:	mvn	lr, #0
   13854:	mov	r8, #0
   13858:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1385c:	cmp	r0, #0
   13860:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13864:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13868:	mov	r1, #1
   1386c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13870:	cmp	r0, #2
   13874:	bne	13884 <__mempcpy_chk@plt+0x2848>
   13878:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1387c:	tst	r0, #1
   13880:	bne	140f8 <__mempcpy_chk@plt+0x30bc>
   13884:	mov	r4, r1
   13888:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1388c:	cmp	r0, #0
   13890:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13894:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13898:	ldr	r1, [sp, #40]	; 0x28
   1389c:	mov	r8, #0
   138a0:	mov	r0, #92	; 0x5c
   138a4:	cmp	r1, #0
   138a8:	beq	138ec <__mempcpy_chk@plt+0x28b0>
   138ac:	mov	r4, #0
   138b0:	cmp	r8, #0
   138b4:	bne	136a8 <__mempcpy_chk@plt+0x266c>
   138b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   138bc:	tst	r2, #1
   138c0:	beq	139ac <__mempcpy_chk@plt+0x2970>
   138c4:	cmp	r9, sl
   138c8:	movcc	r1, #39	; 0x27
   138cc:	strbcc	r1, [r6, r9]
   138d0:	add	r1, r9, #1
   138d4:	add	r9, r9, #2
   138d8:	cmp	r1, sl
   138dc:	movcc	r2, #39	; 0x27
   138e0:	strbcc	r2, [r6, r1]
   138e4:	mov	r2, #0
   138e8:	b	139ac <__mempcpy_chk@plt+0x2970>
   138ec:	ldr	r1, [sp, #80]	; 0x50
   138f0:	mov	r4, #0
   138f4:	mov	r8, #0
   138f8:	tst	r1, #1
   138fc:	bne	1393c <__mempcpy_chk@plt+0x2900>
   13900:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13904:	cmp	r0, #0
   13908:	mov	r0, r5
   1390c:	beq	13930 <__mempcpy_chk@plt+0x28f4>
   13910:	ldr	r1, [fp, #16]
   13914:	ubfx	r0, r5, #5, #3
   13918:	mov	r2, #1
   1391c:	ldr	r0, [r1, r0, lsl #2]
   13920:	and	r1, r5, #31
   13924:	tst	r0, r2, lsl r1
   13928:	mov	r0, r5
   1392c:	bne	1393c <__mempcpy_chk@plt+0x2900>
   13930:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13934:	cmp	r1, #0
   13938:	beq	13d94 <__mempcpy_chk@plt+0x2d58>
   1393c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13940:	tst	r1, #1
   13944:	bne	140d8 <__mempcpy_chk@plt+0x309c>
   13948:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1394c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13950:	cmp	r1, #2
   13954:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13958:	movwne	r1, #1
   1395c:	orr	r1, r1, r2
   13960:	tst	r1, #1
   13964:	bne	1399c <__mempcpy_chk@plt+0x2960>
   13968:	cmp	r9, sl
   1396c:	movcc	r1, #39	; 0x27
   13970:	strbcc	r1, [r6, r9]
   13974:	add	r1, r9, #1
   13978:	cmp	r1, sl
   1397c:	movcc	r2, #36	; 0x24
   13980:	strbcc	r2, [r6, r1]
   13984:	add	r1, r9, #2
   13988:	add	r9, r9, #3
   1398c:	cmp	r1, sl
   13990:	movcc	r2, #39	; 0x27
   13994:	strbcc	r2, [r6, r1]
   13998:	mov	r2, #1
   1399c:	cmp	r9, sl
   139a0:	movcc	r1, #92	; 0x5c
   139a4:	strbcc	r1, [r6, r9]
   139a8:	add	r9, r9, #1
   139ac:	cmp	r9, sl
   139b0:	add	r7, r7, #1
   139b4:	strbcc	r0, [r6, r9]
   139b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   139bc:	add	r9, r9, #1
   139c0:	and	r0, r0, r4
   139c4:	mov	r4, r0
   139c8:	cmn	lr, #1
   139cc:	bne	13340 <__mempcpy_chk@plt+0x2304>
   139d0:	b	1334c <__mempcpy_chk@plt+0x2310>
   139d4:	ldr	r0, [sp, #28]
   139d8:	mov	r4, #0
   139dc:	mov	r8, #0
   139e0:	mov	r5, #0
   139e4:	cmp	r0, #0
   139e8:	beq	13900 <__mempcpy_chk@plt+0x28c4>
   139ec:	ldr	r4, [fp, #-52]	; 0xffffffcc
   139f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   139f4:	add	r7, r7, #1
   139f8:	cmn	lr, #1
   139fc:	bne	13340 <__mempcpy_chk@plt+0x2304>
   13a00:	b	1334c <__mempcpy_chk@plt+0x2310>
   13a04:	mov	r0, #0
   13a08:	cmn	lr, #1
   13a0c:	str	r0, [fp, #-36]	; 0xffffffdc
   13a10:	str	r0, [fp, #-40]	; 0xffffffd8
   13a14:	bne	13a28 <__mempcpy_chk@plt+0x29ec>
   13a18:	mov	r0, ip
   13a1c:	bl	10f58 <strlen@plt>
   13a20:	ldr	ip, [fp, #-84]	; 0xffffffac
   13a24:	mov	lr, r0
   13a28:	ldr	r0, [sp, #36]	; 0x24
   13a2c:	str	sl, [sp, #56]	; 0x38
   13a30:	str	lr, [sp, #84]	; 0x54
   13a34:	cmp	r0, #0
   13a38:	beq	13c50 <__mempcpy_chk@plt+0x2c14>
   13a3c:	add	r0, ip, r7
   13a40:	mov	r4, #1
   13a44:	mov	r6, #0
   13a48:	sub	sl, fp, #40	; 0x28
   13a4c:	str	r0, [sp, #20]
   13a50:	str	r6, [sp, #64]	; 0x40
   13a54:	add	r6, r6, r7
   13a58:	sub	r0, fp, #44	; 0x2c
   13a5c:	mov	r3, sl
   13a60:	add	r1, ip, r6
   13a64:	sub	r2, lr, r6
   13a68:	bl	162c0 <__mempcpy_chk@plt+0x5284>
   13a6c:	cmn	r0, #2
   13a70:	beq	13dac <__mempcpy_chk@plt+0x2d70>
   13a74:	ldr	sl, [sp, #56]	; 0x38
   13a78:	cmn	r0, #1
   13a7c:	beq	13da0 <__mempcpy_chk@plt+0x2d64>
   13a80:	cmp	r0, #0
   13a84:	beq	13da4 <__mempcpy_chk@plt+0x2d68>
   13a88:	cmp	r0, #2
   13a8c:	bcc	13b4c <__mempcpy_chk@plt+0x2b10>
   13a90:	ldr	r1, [sp, #64]	; 0x40
   13a94:	ldr	r2, [sp, #20]
   13a98:	add	r1, r2, r1
   13a9c:	mov	r2, #1
   13aa0:	ldrb	r3, [r1, r2]
   13aa4:	sub	r3, r3, #91	; 0x5b
   13aa8:	cmp	r3, #33	; 0x21
   13aac:	bhi	13b40 <__mempcpy_chk@plt+0x2b04>
   13ab0:	add	r6, pc, #0
   13ab4:	ldr	pc, [r6, r3, lsl #2]
   13ab8:	andeq	r4, r1, r4, lsl #2
   13abc:	andeq	r4, r1, r4, lsl #2
   13ac0:	andeq	r3, r1, r0, asr #22
   13ac4:	andeq	r4, r1, r4, lsl #2
   13ac8:	andeq	r3, r1, r0, asr #22
   13acc:	andeq	r4, r1, r4, lsl #2
   13ad0:	andeq	r3, r1, r0, asr #22
   13ad4:	andeq	r3, r1, r0, asr #22
   13ad8:	andeq	r3, r1, r0, asr #22
   13adc:	andeq	r3, r1, r0, asr #22
   13ae0:	andeq	r3, r1, r0, asr #22
   13ae4:	andeq	r3, r1, r0, asr #22
   13ae8:	andeq	r3, r1, r0, asr #22
   13aec:	andeq	r3, r1, r0, asr #22
   13af0:	andeq	r3, r1, r0, asr #22
   13af4:	andeq	r3, r1, r0, asr #22
   13af8:	andeq	r3, r1, r0, asr #22
   13afc:	andeq	r3, r1, r0, asr #22
   13b00:	andeq	r3, r1, r0, asr #22
   13b04:	andeq	r3, r1, r0, asr #22
   13b08:	andeq	r3, r1, r0, asr #22
   13b0c:	andeq	r3, r1, r0, asr #22
   13b10:	andeq	r3, r1, r0, asr #22
   13b14:	andeq	r3, r1, r0, asr #22
   13b18:	andeq	r3, r1, r0, asr #22
   13b1c:	andeq	r3, r1, r0, asr #22
   13b20:	andeq	r3, r1, r0, asr #22
   13b24:	andeq	r3, r1, r0, asr #22
   13b28:	andeq	r3, r1, r0, asr #22
   13b2c:	andeq	r3, r1, r0, asr #22
   13b30:	andeq	r3, r1, r0, asr #22
   13b34:	andeq	r3, r1, r0, asr #22
   13b38:	andeq	r3, r1, r0, asr #22
   13b3c:	andeq	r4, r1, r4, lsl #2
   13b40:	add	r2, r2, #1
   13b44:	cmp	r2, r0
   13b48:	bcc	13aa0 <__mempcpy_chk@plt+0x2a64>
   13b4c:	ldr	r6, [sp, #64]	; 0x40
   13b50:	add	r6, r0, r6
   13b54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13b58:	bl	10e98 <iswprint@plt>
   13b5c:	cmp	r0, #0
   13b60:	sub	sl, fp, #40	; 0x28
   13b64:	movwne	r0, #1
   13b68:	and	r4, r4, r0
   13b6c:	mov	r0, sl
   13b70:	bl	10e50 <mbsinit@plt>
   13b74:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b78:	ldr	lr, [sp, #84]	; 0x54
   13b7c:	cmp	r0, #0
   13b80:	beq	13a50 <__mempcpy_chk@plt+0x2a14>
   13b84:	b	13df0 <__mempcpy_chk@plt+0x2db4>
   13b88:	ldr	r0, [sp, #24]
   13b8c:	cmp	r0, #0
   13b90:	beq	13c38 <__mempcpy_chk@plt+0x2bfc>
   13b94:	add	r0, r7, #2
   13b98:	cmp	r0, lr
   13b9c:	bcs	13c38 <__mempcpy_chk@plt+0x2bfc>
   13ba0:	add	r1, ip, r7
   13ba4:	ldrb	r1, [r1, #1]
   13ba8:	cmp	r1, #63	; 0x3f
   13bac:	bne	13c38 <__mempcpy_chk@plt+0x2bfc>
   13bb0:	ldrb	r5, [ip, r0]
   13bb4:	sub	r1, r5, #33	; 0x21
   13bb8:	cmp	r1, #29
   13bbc:	bhi	13c38 <__mempcpy_chk@plt+0x2bfc>
   13bc0:	movw	r3, #20929	; 0x51c1
   13bc4:	mov	r2, #1
   13bc8:	movt	r3, #14336	; 0x3800
   13bcc:	tst	r3, r2, lsl r1
   13bd0:	beq	13c38 <__mempcpy_chk@plt+0x2bfc>
   13bd4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13bd8:	tst	r1, #1
   13bdc:	bne	14228 <__mempcpy_chk@plt+0x31ec>
   13be0:	cmp	r9, sl
   13be4:	mov	r7, r0
   13be8:	mov	r4, #0
   13bec:	movcc	r1, #63	; 0x3f
   13bf0:	strbcc	r1, [r6, r9]
   13bf4:	add	r1, r9, #1
   13bf8:	cmp	r1, sl
   13bfc:	movcc	r2, #34	; 0x22
   13c00:	strbcc	r2, [r6, r1]
   13c04:	add	r1, r9, #2
   13c08:	cmp	r1, sl
   13c0c:	movcc	r2, #34	; 0x22
   13c10:	strbcc	r2, [r6, r1]
   13c14:	add	r1, r9, #3
   13c18:	add	r9, r9, #4
   13c1c:	cmp	r1, sl
   13c20:	movcc	r2, #63	; 0x3f
   13c24:	strbcc	r2, [r6, r1]
   13c28:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c2c:	cmp	r0, #0
   13c30:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13c34:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13c38:	mov	r5, #63	; 0x3f
   13c3c:	mov	r4, #0
   13c40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13c44:	cmp	r0, #0
   13c48:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13c4c:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13c50:	mov	r4, #1
   13c54:	mov	r6, #0
   13c58:	sub	sl, fp, #40	; 0x28
   13c5c:	str	r6, [sp, #64]	; 0x40
   13c60:	add	r6, r6, r7
   13c64:	sub	r0, fp, #44	; 0x2c
   13c68:	mov	r3, sl
   13c6c:	add	r1, ip, r6
   13c70:	sub	r2, lr, r6
   13c74:	bl	162c0 <__mempcpy_chk@plt+0x5284>
   13c78:	cmn	r0, #2
   13c7c:	beq	13dac <__mempcpy_chk@plt+0x2d70>
   13c80:	cmn	r0, #1
   13c84:	beq	13da0 <__mempcpy_chk@plt+0x2d64>
   13c88:	ldr	r6, [sp, #64]	; 0x40
   13c8c:	cmp	r0, #0
   13c90:	beq	13dec <__mempcpy_chk@plt+0x2db0>
   13c94:	add	r6, r0, r6
   13c98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c9c:	bl	10e98 <iswprint@plt>
   13ca0:	cmp	r0, #0
   13ca4:	sub	sl, fp, #40	; 0x28
   13ca8:	movwne	r0, #1
   13cac:	and	r4, r4, r0
   13cb0:	mov	r0, sl
   13cb4:	bl	10e50 <mbsinit@plt>
   13cb8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13cbc:	ldr	lr, [sp, #84]	; 0x54
   13cc0:	cmp	r0, #0
   13cc4:	beq	13c5c <__mempcpy_chk@plt+0x2c20>
   13cc8:	b	13df0 <__mempcpy_chk@plt+0x2db4>
   13ccc:	cmp	r9, sl
   13cd0:	mov	r2, #1
   13cd4:	movcc	r0, #39	; 0x27
   13cd8:	strbcc	r0, [r6, r9]
   13cdc:	add	r0, r9, #1
   13ce0:	cmp	r0, sl
   13ce4:	movcc	r1, #36	; 0x24
   13ce8:	strbcc	r1, [r6, r0]
   13cec:	add	r0, r9, #2
   13cf0:	cmp	r0, sl
   13cf4:	movcc	r1, #39	; 0x27
   13cf8:	strbcc	r1, [r6, r0]
   13cfc:	add	r0, r9, #3
   13d00:	cmp	r0, sl
   13d04:	add	r9, r0, #1
   13d08:	str	r2, [fp, #-48]	; 0xffffffd0
   13d0c:	movcc	r1, #92	; 0x5c
   13d10:	strbcc	r1, [r6, r0]
   13d14:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13d18:	cmp	r1, #2
   13d1c:	beq	13d7c <__mempcpy_chk@plt+0x2d40>
   13d20:	add	r1, r7, #1
   13d24:	mov	r4, #0
   13d28:	mov	r8, #1
   13d2c:	mov	r5, #48	; 0x30
   13d30:	cmp	r1, lr
   13d34:	bcs	1361c <__mempcpy_chk@plt+0x25e0>
   13d38:	ldrb	r1, [ip, r1]
   13d3c:	sub	r1, r1, #48	; 0x30
   13d40:	uxtb	r1, r1
   13d44:	cmp	r1, #9
   13d48:	bhi	1361c <__mempcpy_chk@plt+0x25e0>
   13d4c:	cmp	r9, sl
   13d50:	movcc	r1, #48	; 0x30
   13d54:	strbcc	r1, [r6, r9]
   13d58:	add	r1, r0, #2
   13d5c:	add	r9, r0, #3
   13d60:	cmp	r1, sl
   13d64:	movcc	r2, #48	; 0x30
   13d68:	strbcc	r2, [r6, r1]
   13d6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13d70:	cmp	r0, #0
   13d74:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13d78:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13d7c:	mov	r0, #48	; 0x30
   13d80:	mov	r8, #1
   13d84:	mov	r4, #0
   13d88:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13d8c:	cmp	r1, #0
   13d90:	bne	1393c <__mempcpy_chk@plt+0x2900>
   13d94:	cmp	r8, #0
   13d98:	beq	138b8 <__mempcpy_chk@plt+0x287c>
   13d9c:	b	136a8 <__mempcpy_chk@plt+0x266c>
   13da0:	mov	r4, #0
   13da4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13da8:	b	13de4 <__mempcpy_chk@plt+0x2da8>
   13dac:	ldr	r1, [sp, #84]	; 0x54
   13db0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13db4:	mov	r4, #0
   13db8:	cmp	r6, r1
   13dbc:	bcs	13de4 <__mempcpy_chk@plt+0x2da8>
   13dc0:	ldrb	r0, [ip, r6]
   13dc4:	cmp	r0, #0
   13dc8:	beq	13de4 <__mempcpy_chk@plt+0x2da8>
   13dcc:	ldr	r0, [sp, #64]	; 0x40
   13dd0:	add	r0, r0, #1
   13dd4:	add	r6, r0, r7
   13dd8:	str	r0, [sp, #64]	; 0x40
   13ddc:	cmp	r6, r1
   13de0:	bcc	13dc0 <__mempcpy_chk@plt+0x2d84>
   13de4:	ldr	r6, [sp, #64]	; 0x40
   13de8:	b	13df0 <__mempcpy_chk@plt+0x2db4>
   13dec:	ldr	ip, [fp, #-84]	; 0xffffffac
   13df0:	mov	r1, r6
   13df4:	ldr	r6, [sp, #76]	; 0x4c
   13df8:	ldr	sl, [sp, #56]	; 0x38
   13dfc:	ldr	r0, [sp, #44]	; 0x2c
   13e00:	cmp	r1, #1
   13e04:	orr	r2, r4, r0
   13e08:	mov	r0, r1
   13e0c:	bhi	13e2c <__mempcpy_chk@plt+0x2df0>
   13e10:	tst	r2, #1
   13e14:	beq	13e2c <__mempcpy_chk@plt+0x2df0>
   13e18:	ldr	lr, [sp, #84]	; 0x54
   13e1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e20:	cmp	r0, #0
   13e24:	bne	13628 <__mempcpy_chk@plt+0x25ec>
   13e28:	b	13900 <__mempcpy_chk@plt+0x28c4>
   13e2c:	str	r2, [sp, #64]	; 0x40
   13e30:	add	r0, r0, r7
   13e34:	add	r1, r7, #1
   13e38:	ldr	lr, [sp, #84]	; 0x54
   13e3c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13e40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13e44:	mov	r3, #0
   13e48:	str	r0, [sp, #56]	; 0x38
   13e4c:	ldr	r0, [sp, #64]	; 0x40
   13e50:	tst	r0, #1
   13e54:	bne	13f3c <__mempcpy_chk@plt+0x2f00>
   13e58:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13e5c:	tst	r0, #1
   13e60:	bne	140dc <__mempcpy_chk@plt+0x30a0>
   13e64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e68:	cmp	r7, #2
   13e6c:	movwne	r3, #1
   13e70:	orr	r3, r3, r2
   13e74:	tst	r3, #1
   13e78:	bne	13eb0 <__mempcpy_chk@plt+0x2e74>
   13e7c:	cmp	r9, sl
   13e80:	add	r3, r9, #1
   13e84:	movcc	r2, #39	; 0x27
   13e88:	strbcc	r2, [r6, r9]
   13e8c:	cmp	r3, sl
   13e90:	movcc	r2, #36	; 0x24
   13e94:	strbcc	r2, [r6, r3]
   13e98:	add	r3, r9, #2
   13e9c:	add	r9, r9, #3
   13ea0:	cmp	r3, sl
   13ea4:	movcc	r2, #39	; 0x27
   13ea8:	strbcc	r2, [r6, r3]
   13eac:	mov	r2, #1
   13eb0:	cmp	r9, sl
   13eb4:	mov	r0, r2
   13eb8:	movcc	r3, #92	; 0x5c
   13ebc:	strbcc	r3, [r6, r9]
   13ec0:	add	r3, r9, #1
   13ec4:	cmp	r3, sl
   13ec8:	andcc	r7, r5, #192	; 0xc0
   13ecc:	movcc	r2, #48	; 0x30
   13ed0:	orrcc	r7, r2, r7, lsr #6
   13ed4:	strbcc	r7, [r6, r3]
   13ed8:	add	r3, r9, #2
   13edc:	add	r9, r9, #3
   13ee0:	cmp	r3, sl
   13ee4:	lsrcc	r7, r5, #3
   13ee8:	movcc	r2, #6
   13eec:	bficc	r7, r2, #3, #29
   13ef0:	mov	r2, #6
   13ef4:	strbcc	r7, [r6, r3]
   13ef8:	bfi	r5, r2, #3, #29
   13efc:	mov	r3, #1
   13f00:	mov	r2, r0
   13f04:	ldr	r0, [sp, #56]	; 0x38
   13f08:	and	r8, r3, #1
   13f0c:	cmp	r0, r1
   13f10:	bhi	13f70 <__mempcpy_chk@plt+0x2f34>
   13f14:	b	13fb0 <__mempcpy_chk@plt+0x2f74>
   13f18:	cmp	r9, sl
   13f1c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13f20:	strbcc	r5, [r6, r9]
   13f24:	add	r9, r9, #1
   13f28:	ldrb	r5, [ip, r1]
   13f2c:	add	r1, r1, #1
   13f30:	ldr	r0, [sp, #64]	; 0x40
   13f34:	tst	r0, #1
   13f38:	beq	13e58 <__mempcpy_chk@plt+0x2e1c>
   13f3c:	ldr	r7, [fp, #-56]	; 0xffffffc8
   13f40:	tst	r7, #1
   13f44:	beq	13f58 <__mempcpy_chk@plt+0x2f1c>
   13f48:	cmp	r9, sl
   13f4c:	movcc	r7, #92	; 0x5c
   13f50:	strbcc	r7, [r6, r9]
   13f54:	add	r9, r9, #1
   13f58:	mov	r7, #0
   13f5c:	str	r7, [fp, #-56]	; 0xffffffc8
   13f60:	ldr	r0, [sp, #56]	; 0x38
   13f64:	and	r8, r3, #1
   13f68:	cmp	r0, r1
   13f6c:	bls	13fb0 <__mempcpy_chk@plt+0x2f74>
   13f70:	cmp	r8, #0
   13f74:	mvn	r7, r2
   13f78:	movwne	r8, #1
   13f7c:	orr	r7, r7, r8
   13f80:	tst	r7, #1
   13f84:	bne	13f18 <__mempcpy_chk@plt+0x2edc>
   13f88:	cmp	r9, sl
   13f8c:	movcc	r7, #39	; 0x27
   13f90:	strbcc	r7, [r6, r9]
   13f94:	add	r7, r9, #1
   13f98:	add	r9, r9, #2
   13f9c:	cmp	r7, sl
   13fa0:	movcc	r2, #39	; 0x27
   13fa4:	strbcc	r2, [r6, r7]
   13fa8:	mov	r2, #0
   13fac:	b	13f18 <__mempcpy_chk@plt+0x2edc>
   13fb0:	cmp	r8, #0
   13fb4:	sub	r7, r1, #1
   13fb8:	mov	r0, r5
   13fbc:	str	r2, [fp, #-48]	; 0xffffffd0
   13fc0:	movwne	r8, #1
   13fc4:	cmp	r8, #0
   13fc8:	beq	138b8 <__mempcpy_chk@plt+0x287c>
   13fcc:	b	136a8 <__mempcpy_chk@plt+0x266c>
   13fd0:	mov	lr, r7
   13fd4:	b	13fdc <__mempcpy_chk@plt+0x2fa0>
   13fd8:	mvn	lr, #0
   13fdc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13fe0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13fe4:	eor	r0, r7, #2
   13fe8:	orr	r0, r0, r9
   13fec:	clz	r0, r0
   13ff0:	lsr	r0, r0, #5
   13ff4:	tst	r1, r0
   13ff8:	bne	140f8 <__mempcpy_chk@plt+0x30bc>
   13ffc:	mov	r0, r1
   14000:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14004:	cmp	r7, #2
   14008:	movwne	r1, #1
   1400c:	orr	r0, r0, r1
   14010:	tst	r0, #1
   14014:	ldreq	r0, [sp, #52]	; 0x34
   14018:	streq	lr, [sp, #84]	; 0x54
   1401c:	eoreq	r0, r0, #1
   14020:	tsteq	r0, #1
   14024:	bne	141bc <__mempcpy_chk@plt+0x3180>
   14028:	tst	r4, #1
   1402c:	bne	14178 <__mempcpy_chk@plt+0x313c>
   14030:	ldr	r6, [sp, #48]	; 0x30
   14034:	mov	r8, #0
   14038:	cmp	r6, #0
   1403c:	beq	141b4 <__mempcpy_chk@plt+0x3178>
   14040:	ldr	r0, [sp, #80]	; 0x50
   14044:	mov	r1, #0
   14048:	cmp	sl, #0
   1404c:	mov	r4, #0
   14050:	str	r1, [fp, #-72]	; 0xffffffb8
   14054:	beq	12f48 <__mempcpy_chk@plt+0x1f0c>
   14058:	b	141bc <__mempcpy_chk@plt+0x3180>
   1405c:	ldrb	r1, [r0, #3]
   14060:	cmp	r1, #56	; 0x38
   14064:	ldrbeq	r1, [r0, #4]
   14068:	cmpeq	r1, #48	; 0x30
   1406c:	bne	13140 <__mempcpy_chk@plt+0x2104>
   14070:	ldrb	r1, [r0, #5]
   14074:	cmp	r1, #51	; 0x33
   14078:	ldrbeq	r1, [r0, #6]
   1407c:	cmpeq	r1, #48	; 0x30
   14080:	bne	13140 <__mempcpy_chk@plt+0x2104>
   14084:	ldrb	r0, [r0, #7]
   14088:	cmp	r0, #0
   1408c:	movw	r0, #28362	; 0x6eca
   14090:	movt	r0, #1
   14094:	str	r0, [sp, #68]	; 0x44
   14098:	bne	13140 <__mempcpy_chk@plt+0x2104>
   1409c:	b	1315c <__mempcpy_chk@plt+0x2120>
   140a0:	ldrb	r1, [r0, #4]
   140a4:	cmp	r1, #48	; 0x30
   140a8:	ldrbeq	r1, [r0, #5]
   140ac:	cmpeq	r1, #51	; 0x33
   140b0:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   140b4:	ldrb	r1, [r0, #6]
   140b8:	cmp	r1, #48	; 0x30
   140bc:	ldrbeq	r0, [r0, #7]
   140c0:	cmpeq	r0, #0
   140c4:	bne	13224 <__mempcpy_chk@plt+0x21e8>
   140c8:	movw	r0, #28366	; 0x6ece
   140cc:	movt	r0, #1
   140d0:	str	r0, [sp, #72]	; 0x48
   140d4:	b	13244 <__mempcpy_chk@plt+0x2208>
   140d8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   140dc:	ldr	r2, [sp, #80]	; 0x50
   140e0:	b	14118 <__mempcpy_chk@plt+0x30dc>
   140e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   140e8:	mov	r2, #1
   140ec:	mov	lr, r4
   140f0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   140f4:	b	14118 <__mempcpy_chk@plt+0x30dc>
   140f8:	ldr	r2, [sp, #80]	; 0x50
   140fc:	mov	r7, #2
   14100:	b	14118 <__mempcpy_chk@plt+0x30dc>
   14104:	ldr	r6, [sp, #76]	; 0x4c
   14108:	ldr	ip, [fp, #-84]	; 0xffffffac
   1410c:	ldr	lr, [sp, #84]	; 0x54
   14110:	ldr	r2, [sp, #80]	; 0x50
   14114:	mov	r7, #2
   14118:	mov	r0, #0
   1411c:	ldr	r1, [fp, #12]
   14120:	tst	r2, #1
   14124:	mov	r2, r7
   14128:	mov	r3, lr
   1412c:	str	r0, [sp, #8]
   14130:	ldr	r0, [sp, #68]	; 0x44
   14134:	movwne	r2, #4
   14138:	cmp	r7, #2
   1413c:	movne	r2, r7
   14140:	str	r2, [sp]
   14144:	mov	r2, ip
   14148:	bic	r1, r1, #2
   1414c:	str	r0, [sp, #12]
   14150:	ldr	r0, [sp, #72]	; 0x48
   14154:	str	r1, [sp, #4]
   14158:	mov	r1, sl
   1415c:	str	r0, [sp, #16]
   14160:	mov	r0, r6
   14164:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   14168:	mov	r9, r0
   1416c:	mov	r0, r9
   14170:	sub	sp, fp, #28
   14174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14178:	mov	r0, #5
   1417c:	ldr	r1, [sp, #48]	; 0x30
   14180:	ldr	r2, [fp, #-84]	; 0xffffffac
   14184:	ldr	r3, [sp, #84]	; 0x54
   14188:	str	r0, [sp]
   1418c:	ldr	r0, [fp, #12]
   14190:	str	r0, [sp, #4]
   14194:	ldr	r0, [fp, #16]
   14198:	str	r0, [sp, #8]
   1419c:	ldr	r0, [sp, #68]	; 0x44
   141a0:	str	r0, [sp, #12]
   141a4:	ldr	r0, [sp, #72]	; 0x48
   141a8:	str	r0, [sp, #16]
   141ac:	ldr	r0, [sp, #76]	; 0x4c
   141b0:	b	14164 <__mempcpy_chk@plt+0x3128>
   141b4:	mov	r0, #0
   141b8:	str	r0, [fp, #-72]	; 0xffffffb8
   141bc:	ldr	r1, [sp, #92]	; 0x5c
   141c0:	cmp	r1, #0
   141c4:	beq	14204 <__mempcpy_chk@plt+0x31c8>
   141c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   141cc:	ldr	r2, [sp, #76]	; 0x4c
   141d0:	tst	r0, #1
   141d4:	bne	14208 <__mempcpy_chk@plt+0x31cc>
   141d8:	ldrb	r0, [r1]
   141dc:	cmp	r0, #0
   141e0:	beq	14208 <__mempcpy_chk@plt+0x31cc>
   141e4:	add	r1, r1, #1
   141e8:	cmp	r9, sl
   141ec:	strbcc	r0, [r2, r9]
   141f0:	add	r9, r9, #1
   141f4:	ldrb	r0, [r1], #1
   141f8:	cmp	r0, #0
   141fc:	bne	141e8 <__mempcpy_chk@plt+0x31ac>
   14200:	b	14208 <__mempcpy_chk@plt+0x31cc>
   14204:	ldr	r2, [sp, #76]	; 0x4c
   14208:	cmp	r9, sl
   1420c:	movcc	r0, #0
   14210:	strbcc	r0, [r2, r9]
   14214:	mov	r0, r9
   14218:	sub	sp, fp, #28
   1421c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14220:	mov	r2, #1
   14224:	b	140f0 <__mempcpy_chk@plt+0x30b4>
   14228:	ldr	r2, [sp, #80]	; 0x50
   1422c:	mov	r7, #5
   14230:	b	14118 <__mempcpy_chk@plt+0x30dc>
   14234:	bl	11030 <abort@plt>
   14238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1423c:	add	fp, sp, #28
   14240:	sub	sp, sp, #28
   14244:	movw	r5, #33120	; 0x8160
   14248:	cmp	r2, #0
   1424c:	mov	r4, r1
   14250:	mov	r7, r0
   14254:	str	r0, [sp, #20]
   14258:	movt	r5, #2
   1425c:	movne	r5, r2
   14260:	bl	10f64 <__errno_location@plt>
   14264:	mov	sl, r0
   14268:	ldm	r5, {r0, r1}
   1426c:	ldr	r2, [r5, #40]	; 0x28
   14270:	ldr	r3, [r5, #44]	; 0x2c
   14274:	add	r9, r5, #8
   14278:	ldr	r6, [sl]
   1427c:	orr	r8, r1, #1
   14280:	mov	r1, #0
   14284:	str	r6, [sp, #24]
   14288:	stm	sp, {r0, r8, r9}
   1428c:	str	r2, [sp, #12]
   14290:	str	r3, [sp, #16]
   14294:	mov	r0, #0
   14298:	mov	r2, r7
   1429c:	mov	r3, r4
   142a0:	mov	r6, r4
   142a4:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   142a8:	add	r7, r0, #1
   142ac:	mov	r0, r7
   142b0:	bl	15708 <__mempcpy_chk@plt+0x46cc>
   142b4:	mov	r4, r0
   142b8:	ldr	r0, [r5]
   142bc:	ldr	r2, [r5, #44]	; 0x2c
   142c0:	ldr	r1, [r5, #40]	; 0x28
   142c4:	mov	r3, r6
   142c8:	stm	sp, {r0, r8, r9}
   142cc:	str	r2, [sp, #16]
   142d0:	str	r1, [sp, #12]
   142d4:	mov	r0, r4
   142d8:	mov	r1, r7
   142dc:	ldr	r2, [sp, #20]
   142e0:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   142e4:	ldr	r0, [sp, #24]
   142e8:	str	r0, [sl]
   142ec:	mov	r0, r4
   142f0:	sub	sp, fp, #28
   142f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142fc:	add	fp, sp, #28
   14300:	sub	sp, sp, #36	; 0x24
   14304:	movw	r8, #33120	; 0x8160
   14308:	cmp	r3, #0
   1430c:	mov	r4, r2
   14310:	str	r2, [sp, #24]
   14314:	mov	r5, r1
   14318:	mov	r6, r0
   1431c:	str	r0, [sp, #20]
   14320:	movt	r8, #2
   14324:	movne	r8, r3
   14328:	bl	10f64 <__errno_location@plt>
   1432c:	str	r0, [sp, #28]
   14330:	cmp	r4, #0
   14334:	add	sl, r8, #8
   14338:	ldm	r8, {r3, r9}
   1433c:	ldr	r7, [r0]
   14340:	ldr	r1, [r8, #40]	; 0x28
   14344:	ldr	r2, [r8, #44]	; 0x2c
   14348:	mov	r0, #0
   1434c:	orreq	r9, r9, #1
   14350:	str	r7, [sp, #32]
   14354:	mov	r7, r5
   14358:	stm	sp, {r3, r9, sl}
   1435c:	str	r1, [sp, #12]
   14360:	str	r2, [sp, #16]
   14364:	mov	r1, #0
   14368:	mov	r2, r6
   1436c:	mov	r3, r5
   14370:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   14374:	add	r4, r0, #1
   14378:	mov	r5, r0
   1437c:	mov	r0, r4
   14380:	bl	15708 <__mempcpy_chk@plt+0x46cc>
   14384:	mov	r6, r0
   14388:	ldr	r0, [r8]
   1438c:	ldr	r2, [r8, #44]	; 0x2c
   14390:	ldr	r1, [r8, #40]	; 0x28
   14394:	mov	r3, r7
   14398:	stm	sp, {r0, r9, sl}
   1439c:	str	r2, [sp, #16]
   143a0:	str	r1, [sp, #12]
   143a4:	mov	r0, r6
   143a8:	mov	r1, r4
   143ac:	ldr	r2, [sp, #20]
   143b0:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   143b4:	ldr	r0, [sp, #24]
   143b8:	ldr	r1, [sp, #32]
   143bc:	ldr	r2, [sp, #28]
   143c0:	cmp	r0, #0
   143c4:	str	r1, [r2]
   143c8:	strne	r5, [r0]
   143cc:	mov	r0, r6
   143d0:	sub	sp, fp, #28
   143d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143d8:	push	{r4, r5, r6, r7, fp, lr}
   143dc:	add	fp, sp, #16
   143e0:	movw	r4, #33064	; 0x8128
   143e4:	movt	r4, #2
   143e8:	ldrd	r6, [r4]
   143ec:	cmp	r7, #2
   143f0:	blt	1441c <__mempcpy_chk@plt+0x33e0>
   143f4:	add	r5, r6, #12
   143f8:	mov	r7, #0
   143fc:	ldr	r0, [r5, r7, lsl #3]
   14400:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   14404:	ldr	r1, [r4, #4]
   14408:	add	r2, r7, #2
   1440c:	add	r0, r7, #1
   14410:	mov	r7, r0
   14414:	cmp	r2, r1
   14418:	blt	143fc <__mempcpy_chk@plt+0x33c0>
   1441c:	ldr	r0, [r6, #4]
   14420:	movw	r5, #33168	; 0x8190
   14424:	movt	r5, #2
   14428:	cmp	r0, r5
   1442c:	beq	14440 <__mempcpy_chk@plt+0x3404>
   14430:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   14434:	mov	r0, #256	; 0x100
   14438:	str	r0, [r4, #8]
   1443c:	str	r5, [r4, #12]
   14440:	add	r5, r4, #8
   14444:	cmp	r6, r5
   14448:	beq	14458 <__mempcpy_chk@plt+0x341c>
   1444c:	mov	r0, r6
   14450:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   14454:	str	r5, [r4]
   14458:	mov	r0, #1
   1445c:	str	r0, [r4, #4]
   14460:	pop	{r4, r5, r6, r7, fp, pc}
   14464:	movw	r3, #33120	; 0x8160
   14468:	mvn	r2, #0
   1446c:	movt	r3, #2
   14470:	b	14474 <__mempcpy_chk@plt+0x3438>
   14474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14478:	add	fp, sp, #28
   1447c:	sub	sp, sp, #44	; 0x2c
   14480:	mov	r7, r3
   14484:	str	r2, [sp, #36]	; 0x24
   14488:	str	r1, [sp, #32]
   1448c:	mov	r5, r0
   14490:	bl	10f64 <__errno_location@plt>
   14494:	cmp	r5, #0
   14498:	blt	145fc <__mempcpy_chk@plt+0x35c0>
   1449c:	cmn	r5, #-2147483647	; 0x80000001
   144a0:	beq	145fc <__mempcpy_chk@plt+0x35c0>
   144a4:	movw	r8, #33064	; 0x8128
   144a8:	mov	r4, r0
   144ac:	movt	r8, #2
   144b0:	ldr	r6, [r8]
   144b4:	ldr	r1, [r8, #4]
   144b8:	ldr	r0, [r0]
   144bc:	str	r4, [sp, #28]
   144c0:	cmp	r1, r5
   144c4:	str	r0, [sp, #24]
   144c8:	ble	144d4 <__mempcpy_chk@plt+0x3498>
   144cc:	mov	sl, r6
   144d0:	b	14538 <__mempcpy_chk@plt+0x34fc>
   144d4:	mov	r0, #8
   144d8:	add	r9, r8, #8
   144dc:	add	r2, r5, #1
   144e0:	str	r1, [fp, #-32]	; 0xffffffe0
   144e4:	mvn	r3, #-2147483648	; 0x80000000
   144e8:	str	r0, [sp]
   144ec:	subs	r0, r6, r9
   144f0:	sub	r2, r2, r1
   144f4:	sub	r1, fp, #32
   144f8:	movne	r0, r6
   144fc:	bl	15908 <__mempcpy_chk@plt+0x48cc>
   14500:	str	r0, [r8]
   14504:	cmp	r6, r9
   14508:	mov	sl, r0
   1450c:	ldrdeq	r0, [r8, #8]
   14510:	stmeq	sl, {r0, r1}
   14514:	ldr	r1, [r8, #4]
   14518:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1451c:	add	r0, sl, r1, lsl #3
   14520:	sub	r1, r2, r1
   14524:	lsl	r2, r1, #3
   14528:	mov	r1, #0
   1452c:	bl	10f7c <memset@plt>
   14530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14534:	str	r0, [r8, #4]
   14538:	mov	r9, sl
   1453c:	ldr	r6, [r9, r5, lsl #3]!
   14540:	ldr	r4, [r9, #4]!
   14544:	ldm	r7, {r0, r1}
   14548:	ldr	r2, [r7, #40]	; 0x28
   1454c:	ldr	r3, [r7, #44]	; 0x2c
   14550:	orr	r8, r1, #1
   14554:	add	r1, r7, #8
   14558:	stm	sp, {r0, r8}
   1455c:	add	r0, sp, #8
   14560:	str	r1, [sp, #20]
   14564:	stm	r0, {r1, r2, r3}
   14568:	mov	r0, r4
   1456c:	mov	r1, r6
   14570:	ldr	r2, [sp, #32]
   14574:	ldr	r3, [sp, #36]	; 0x24
   14578:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   1457c:	cmp	r6, r0
   14580:	bhi	145e4 <__mempcpy_chk@plt+0x35a8>
   14584:	add	r6, r0, #1
   14588:	movw	r0, #33168	; 0x8190
   1458c:	movt	r0, #2
   14590:	str	r6, [sl, r5, lsl #3]
   14594:	cmp	r4, r0
   14598:	beq	145a4 <__mempcpy_chk@plt+0x3568>
   1459c:	mov	r0, r4
   145a0:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   145a4:	mov	r0, r6
   145a8:	bl	15708 <__mempcpy_chk@plt+0x46cc>
   145ac:	str	r0, [r9]
   145b0:	mov	r4, r0
   145b4:	add	r3, sp, #8
   145b8:	ldr	r0, [r7]
   145bc:	ldr	r1, [r7, #40]	; 0x28
   145c0:	ldr	r2, [r7, #44]	; 0x2c
   145c4:	stm	sp, {r0, r8}
   145c8:	ldr	r0, [sp, #20]
   145cc:	stm	r3, {r0, r1, r2}
   145d0:	mov	r0, r4
   145d4:	mov	r1, r6
   145d8:	ldr	r2, [sp, #32]
   145dc:	ldr	r3, [sp, #36]	; 0x24
   145e0:	bl	12ecc <__mempcpy_chk@plt+0x1e90>
   145e4:	ldr	r1, [sp, #24]
   145e8:	ldr	r0, [sp, #28]
   145ec:	str	r1, [r0]
   145f0:	mov	r0, r4
   145f4:	sub	sp, fp, #28
   145f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145fc:	bl	11030 <abort@plt>
   14600:	movw	r3, #33120	; 0x8160
   14604:	movt	r3, #2
   14608:	b	14474 <__mempcpy_chk@plt+0x3438>
   1460c:	movw	r3, #33120	; 0x8160
   14610:	mov	r1, r0
   14614:	mov	r0, #0
   14618:	mvn	r2, #0
   1461c:	movt	r3, #2
   14620:	b	14474 <__mempcpy_chk@plt+0x3438>
   14624:	movw	r3, #33120	; 0x8160
   14628:	mov	r2, r1
   1462c:	mov	r1, r0
   14630:	mov	r0, #0
   14634:	movt	r3, #2
   14638:	b	14474 <__mempcpy_chk@plt+0x3438>
   1463c:	push	{fp, lr}
   14640:	mov	fp, sp
   14644:	sub	sp, sp, #48	; 0x30
   14648:	vmov.i32	q8, #0	; 0x00000000
   1464c:	mov	ip, #32
   14650:	mov	r3, sp
   14654:	mov	lr, r2
   14658:	cmp	r1, #10
   1465c:	add	r2, r3, #16
   14660:	vst1.64	{d16-d17}, [r3], ip
   14664:	vst1.64	{d16-d17}, [r3]
   14668:	vst1.64	{d16-d17}, [r2]
   1466c:	beq	1468c <__mempcpy_chk@plt+0x3650>
   14670:	str	r1, [sp]
   14674:	mov	r3, sp
   14678:	mov	r1, lr
   1467c:	mvn	r2, #0
   14680:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14684:	mov	sp, fp
   14688:	pop	{fp, pc}
   1468c:	bl	11030 <abort@plt>
   14690:	push	{r4, sl, fp, lr}
   14694:	add	fp, sp, #8
   14698:	sub	sp, sp, #48	; 0x30
   1469c:	mov	ip, r3
   146a0:	mov	r3, sp
   146a4:	vmov.i32	q8, #0	; 0x00000000
   146a8:	mov	lr, #32
   146ac:	cmp	r1, #10
   146b0:	add	r4, r3, #16
   146b4:	vst1.64	{d16-d17}, [r3], lr
   146b8:	vst1.64	{d16-d17}, [r3]
   146bc:	vst1.64	{d16-d17}, [r4]
   146c0:	beq	146e0 <__mempcpy_chk@plt+0x36a4>
   146c4:	str	r1, [sp]
   146c8:	mov	r1, r2
   146cc:	mov	r3, sp
   146d0:	mov	r2, ip
   146d4:	bl	14474 <__mempcpy_chk@plt+0x3438>
   146d8:	sub	sp, fp, #8
   146dc:	pop	{r4, sl, fp, pc}
   146e0:	bl	11030 <abort@plt>
   146e4:	push	{fp, lr}
   146e8:	mov	fp, sp
   146ec:	sub	sp, sp, #48	; 0x30
   146f0:	mov	r3, sp
   146f4:	vmov.i32	q8, #0	; 0x00000000
   146f8:	mov	ip, #32
   146fc:	cmp	r0, #10
   14700:	add	r2, r3, #16
   14704:	vst1.64	{d16-d17}, [r3], ip
   14708:	vst1.64	{d16-d17}, [r3]
   1470c:	vst1.64	{d16-d17}, [r2]
   14710:	beq	14730 <__mempcpy_chk@plt+0x36f4>
   14714:	str	r0, [sp]
   14718:	mov	r3, sp
   1471c:	mov	r0, #0
   14720:	mvn	r2, #0
   14724:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14728:	mov	sp, fp
   1472c:	pop	{fp, pc}
   14730:	bl	11030 <abort@plt>
   14734:	push	{fp, lr}
   14738:	mov	fp, sp
   1473c:	sub	sp, sp, #48	; 0x30
   14740:	mov	r3, sp
   14744:	vmov.i32	q8, #0	; 0x00000000
   14748:	mov	ip, #32
   1474c:	cmp	r0, #10
   14750:	add	lr, r3, #16
   14754:	vst1.64	{d16-d17}, [r3], ip
   14758:	vst1.64	{d16-d17}, [r3]
   1475c:	vst1.64	{d16-d17}, [lr]
   14760:	beq	1477c <__mempcpy_chk@plt+0x3740>
   14764:	str	r0, [sp]
   14768:	mov	r3, sp
   1476c:	mov	r0, #0
   14770:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14774:	mov	sp, fp
   14778:	pop	{fp, pc}
   1477c:	bl	11030 <abort@plt>
   14780:	push	{r4, sl, fp, lr}
   14784:	add	fp, sp, #8
   14788:	sub	sp, sp, #48	; 0x30
   1478c:	mov	lr, r0
   14790:	movw	r0, #33120	; 0x8160
   14794:	mov	r3, #32
   14798:	mov	ip, r1
   1479c:	mov	r4, #1
   147a0:	movt	r0, #2
   147a4:	add	r1, r0, #16
   147a8:	vld1.64	{d16-d17}, [r0], r3
   147ac:	mov	r3, sp
   147b0:	vld1.64	{d18-d19}, [r1]
   147b4:	add	r1, r3, #16
   147b8:	vld1.64	{d20-d21}, [r0]
   147bc:	add	r0, r3, #32
   147c0:	vst1.64	{d18-d19}, [r1]
   147c4:	mov	r1, r3
   147c8:	vst1.64	{d20-d21}, [r0]
   147cc:	mov	r0, #28
   147d0:	and	r0, r0, r2, lsr #3
   147d4:	and	r2, r2, #31
   147d8:	vst1.64	{d16-d17}, [r1], r0
   147dc:	ldr	r0, [r1, #8]
   147e0:	bic	r4, r4, r0, lsr r2
   147e4:	eor	r0, r0, r4, lsl r2
   147e8:	mov	r2, ip
   147ec:	str	r0, [r1, #8]
   147f0:	mov	r0, #0
   147f4:	mov	r1, lr
   147f8:	bl	14474 <__mempcpy_chk@plt+0x3438>
   147fc:	sub	sp, fp, #8
   14800:	pop	{r4, sl, fp, pc}
   14804:	push	{fp, lr}
   14808:	mov	fp, sp
   1480c:	sub	sp, sp, #48	; 0x30
   14810:	mov	ip, r0
   14814:	movw	r0, #33120	; 0x8160
   14818:	mov	r3, #32
   1481c:	movt	r0, #2
   14820:	add	r2, r0, #16
   14824:	vld1.64	{d16-d17}, [r0], r3
   14828:	mov	r3, sp
   1482c:	vld1.64	{d18-d19}, [r2]
   14830:	add	r2, r3, #16
   14834:	vld1.64	{d20-d21}, [r0]
   14838:	add	r0, r3, #32
   1483c:	vst1.64	{d18-d19}, [r2]
   14840:	mov	r2, r3
   14844:	vst1.64	{d20-d21}, [r0]
   14848:	mov	r0, #28
   1484c:	and	r0, r0, r1, lsr #3
   14850:	and	r1, r1, #31
   14854:	vst1.64	{d16-d17}, [r2], r0
   14858:	mov	r0, #1
   1485c:	ldr	lr, [r2, #8]
   14860:	bic	r0, r0, lr, lsr r1
   14864:	eor	r0, lr, r0, lsl r1
   14868:	mov	r1, ip
   1486c:	str	r0, [r2, #8]
   14870:	mov	r0, #0
   14874:	mvn	r2, #0
   14878:	bl	14474 <__mempcpy_chk@plt+0x3438>
   1487c:	mov	sp, fp
   14880:	pop	{fp, pc}
   14884:	push	{fp, lr}
   14888:	mov	fp, sp
   1488c:	sub	sp, sp, #48	; 0x30
   14890:	movw	r2, #33120	; 0x8160
   14894:	mov	r3, #32
   14898:	mov	r1, r0
   1489c:	movt	r2, #2
   148a0:	add	r0, r2, #16
   148a4:	vld1.64	{d16-d17}, [r2], r3
   148a8:	mov	r3, sp
   148ac:	vld1.64	{d18-d19}, [r0]
   148b0:	add	r0, r3, #16
   148b4:	vld1.64	{d20-d21}, [r2]
   148b8:	mov	r2, r3
   148bc:	vst1.64	{d18-d19}, [r0]
   148c0:	add	r0, r3, #32
   148c4:	vst1.64	{d20-d21}, [r0]
   148c8:	mov	r0, #12
   148cc:	vst1.64	{d16-d17}, [r2], r0
   148d0:	ldr	r0, [r2]
   148d4:	orr	r0, r0, #67108864	; 0x4000000
   148d8:	str	r0, [r2]
   148dc:	mov	r0, #0
   148e0:	mvn	r2, #0
   148e4:	bl	14474 <__mempcpy_chk@plt+0x3438>
   148e8:	mov	sp, fp
   148ec:	pop	{fp, pc}
   148f0:	push	{fp, lr}
   148f4:	mov	fp, sp
   148f8:	sub	sp, sp, #48	; 0x30
   148fc:	mov	ip, r1
   14900:	mov	r1, r0
   14904:	movw	r0, #33120	; 0x8160
   14908:	mov	r3, #32
   1490c:	movt	r0, #2
   14910:	add	r2, r0, #16
   14914:	vld1.64	{d16-d17}, [r0], r3
   14918:	mov	r3, sp
   1491c:	vld1.64	{d18-d19}, [r2]
   14920:	add	r2, r3, #16
   14924:	vld1.64	{d20-d21}, [r0]
   14928:	add	r0, r3, #32
   1492c:	vst1.64	{d18-d19}, [r2]
   14930:	mov	r2, r3
   14934:	vst1.64	{d20-d21}, [r0]
   14938:	mov	r0, #12
   1493c:	vst1.64	{d16-d17}, [r2], r0
   14940:	ldr	r0, [r2]
   14944:	orr	r0, r0, #67108864	; 0x4000000
   14948:	str	r0, [r2]
   1494c:	mov	r0, #0
   14950:	mov	r2, ip
   14954:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14958:	mov	sp, fp
   1495c:	pop	{fp, pc}
   14960:	push	{r4, sl, fp, lr}
   14964:	add	fp, sp, #8
   14968:	sub	sp, sp, #96	; 0x60
   1496c:	mov	ip, r2
   14970:	mov	r2, sp
   14974:	vmov.i32	q8, #0	; 0x00000000
   14978:	mov	r4, #28
   1497c:	cmp	r1, #10
   14980:	mov	r3, r2
   14984:	add	lr, r2, #16
   14988:	vst1.64	{d16-d17}, [r3], r4
   1498c:	vst1.64	{d16-d17}, [lr]
   14990:	vst1.32	{d16-d17}, [r3]
   14994:	beq	149e4 <__mempcpy_chk@plt+0x39a8>
   14998:	vld1.64	{d16-d17}, [r2], r4
   1499c:	vld1.64	{d18-d19}, [lr]
   149a0:	add	r3, sp, #48	; 0x30
   149a4:	add	r4, r3, #4
   149a8:	vld1.32	{d20-d21}, [r2]
   149ac:	add	r2, r3, #20
   149b0:	vst1.32	{d16-d17}, [r4]
   149b4:	vst1.32	{d18-d19}, [r2]
   149b8:	add	r2, r3, #32
   149bc:	vst1.32	{d20-d21}, [r2]
   149c0:	str	r1, [sp, #48]	; 0x30
   149c4:	mvn	r2, #0
   149c8:	ldr	r1, [sp, #60]	; 0x3c
   149cc:	orr	r1, r1, #67108864	; 0x4000000
   149d0:	str	r1, [sp, #60]	; 0x3c
   149d4:	mov	r1, ip
   149d8:	bl	14474 <__mempcpy_chk@plt+0x3438>
   149dc:	sub	sp, fp, #8
   149e0:	pop	{r4, sl, fp, pc}
   149e4:	bl	11030 <abort@plt>
   149e8:	push	{r4, r5, fp, lr}
   149ec:	add	fp, sp, #8
   149f0:	sub	sp, sp, #48	; 0x30
   149f4:	mov	ip, r3
   149f8:	movw	r3, #33120	; 0x8160
   149fc:	mov	lr, #32
   14a00:	cmp	r1, #0
   14a04:	mov	r5, sp
   14a08:	movt	r3, #2
   14a0c:	cmpne	r2, #0
   14a10:	add	r4, r3, #16
   14a14:	vld1.64	{d16-d17}, [r3], lr
   14a18:	vld1.64	{d18-d19}, [r4]
   14a1c:	add	r4, r5, #16
   14a20:	vld1.64	{d20-d21}, [r3]
   14a24:	vst1.64	{d16-d17}, [r5], lr
   14a28:	mov	r3, #10
   14a2c:	vst1.64	{d18-d19}, [r4]
   14a30:	vst1.64	{d20-d21}, [r5]
   14a34:	str	r3, [sp]
   14a38:	bne	14a40 <__mempcpy_chk@plt+0x3a04>
   14a3c:	bl	11030 <abort@plt>
   14a40:	str	r2, [sp, #44]	; 0x2c
   14a44:	str	r1, [sp, #40]	; 0x28
   14a48:	mov	r3, sp
   14a4c:	mov	r1, ip
   14a50:	mvn	r2, #0
   14a54:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14a58:	sub	sp, fp, #8
   14a5c:	pop	{r4, r5, fp, pc}
   14a60:	push	{r4, r5, fp, lr}
   14a64:	add	fp, sp, #8
   14a68:	sub	sp, sp, #48	; 0x30
   14a6c:	mov	lr, r3
   14a70:	movw	r3, #33120	; 0x8160
   14a74:	mov	ip, #32
   14a78:	cmp	r1, #0
   14a7c:	mov	r5, sp
   14a80:	movt	r3, #2
   14a84:	cmpne	r2, #0
   14a88:	add	r4, r3, #16
   14a8c:	vld1.64	{d16-d17}, [r3], ip
   14a90:	vld1.64	{d18-d19}, [r4]
   14a94:	add	r4, r5, #16
   14a98:	vld1.64	{d20-d21}, [r3]
   14a9c:	vst1.64	{d16-d17}, [r5], ip
   14aa0:	mov	r3, #10
   14aa4:	vst1.64	{d18-d19}, [r4]
   14aa8:	vst1.64	{d20-d21}, [r5]
   14aac:	str	r3, [sp]
   14ab0:	bne	14ab8 <__mempcpy_chk@plt+0x3a7c>
   14ab4:	bl	11030 <abort@plt>
   14ab8:	ldr	ip, [fp, #8]
   14abc:	str	r2, [sp, #44]	; 0x2c
   14ac0:	str	r1, [sp, #40]	; 0x28
   14ac4:	mov	r3, sp
   14ac8:	mov	r1, lr
   14acc:	mov	r2, ip
   14ad0:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14ad4:	sub	sp, fp, #8
   14ad8:	pop	{r4, r5, fp, pc}
   14adc:	push	{r4, sl, fp, lr}
   14ae0:	add	fp, sp, #8
   14ae4:	sub	sp, sp, #48	; 0x30
   14ae8:	mov	ip, r2
   14aec:	movw	r2, #33120	; 0x8160
   14af0:	mov	lr, #32
   14af4:	cmp	r0, #0
   14af8:	mov	r4, sp
   14afc:	movt	r2, #2
   14b00:	cmpne	r1, #0
   14b04:	add	r3, r2, #16
   14b08:	vld1.64	{d16-d17}, [r2], lr
   14b0c:	vld1.64	{d18-d19}, [r3]
   14b10:	add	r3, r4, #16
   14b14:	vld1.64	{d20-d21}, [r2]
   14b18:	vst1.64	{d16-d17}, [r4], lr
   14b1c:	mov	r2, #10
   14b20:	vst1.64	{d18-d19}, [r3]
   14b24:	vst1.64	{d20-d21}, [r4]
   14b28:	str	r2, [sp]
   14b2c:	bne	14b34 <__mempcpy_chk@plt+0x3af8>
   14b30:	bl	11030 <abort@plt>
   14b34:	str	r1, [sp, #44]	; 0x2c
   14b38:	str	r0, [sp, #40]	; 0x28
   14b3c:	mov	r3, sp
   14b40:	mov	r0, #0
   14b44:	mov	r1, ip
   14b48:	mvn	r2, #0
   14b4c:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14b50:	sub	sp, fp, #8
   14b54:	pop	{r4, sl, fp, pc}
   14b58:	push	{r4, r5, fp, lr}
   14b5c:	add	fp, sp, #8
   14b60:	sub	sp, sp, #48	; 0x30
   14b64:	mov	lr, r2
   14b68:	movw	r2, #33120	; 0x8160
   14b6c:	mov	ip, r3
   14b70:	mov	r3, #32
   14b74:	cmp	r0, #0
   14b78:	mov	r5, sp
   14b7c:	movt	r2, #2
   14b80:	cmpne	r1, #0
   14b84:	add	r4, r2, #16
   14b88:	vld1.64	{d16-d17}, [r2], r3
   14b8c:	vld1.64	{d18-d19}, [r4]
   14b90:	add	r4, r5, #16
   14b94:	vld1.64	{d20-d21}, [r2]
   14b98:	vst1.64	{d16-d17}, [r5], r3
   14b9c:	mov	r2, #10
   14ba0:	vst1.64	{d18-d19}, [r4]
   14ba4:	vst1.64	{d20-d21}, [r5]
   14ba8:	str	r2, [sp]
   14bac:	bne	14bb4 <__mempcpy_chk@plt+0x3b78>
   14bb0:	bl	11030 <abort@plt>
   14bb4:	str	r1, [sp, #44]	; 0x2c
   14bb8:	str	r0, [sp, #40]	; 0x28
   14bbc:	mov	r3, sp
   14bc0:	mov	r0, #0
   14bc4:	mov	r1, lr
   14bc8:	mov	r2, ip
   14bcc:	bl	14474 <__mempcpy_chk@plt+0x3438>
   14bd0:	sub	sp, fp, #8
   14bd4:	pop	{r4, r5, fp, pc}
   14bd8:	movw	r3, #33016	; 0x80f8
   14bdc:	movt	r3, #2
   14be0:	b	14474 <__mempcpy_chk@plt+0x3438>
   14be4:	movw	r3, #33016	; 0x80f8
   14be8:	mov	r2, r1
   14bec:	mov	r1, r0
   14bf0:	mov	r0, #0
   14bf4:	movt	r3, #2
   14bf8:	b	14474 <__mempcpy_chk@plt+0x3438>
   14bfc:	movw	r3, #33016	; 0x80f8
   14c00:	mvn	r2, #0
   14c04:	movt	r3, #2
   14c08:	b	14474 <__mempcpy_chk@plt+0x3438>
   14c0c:	movw	r3, #33016	; 0x80f8
   14c10:	mov	r1, r0
   14c14:	mov	r0, #0
   14c18:	mvn	r2, #0
   14c1c:	movt	r3, #2
   14c20:	b	14474 <__mempcpy_chk@plt+0x3438>
   14c24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c28:	add	fp, sp, #28
   14c2c:	sub	sp, sp, #52	; 0x34
   14c30:	movw	r5, #33424	; 0x8290
   14c34:	mov	r7, r0
   14c38:	mov	r4, r3
   14c3c:	mov	sl, r2
   14c40:	mov	r9, r1
   14c44:	movt	r5, #2
   14c48:	ldrb	r0, [r5]
   14c4c:	cmp	r0, #0
   14c50:	bne	14cb8 <__mempcpy_chk@plt+0x3c7c>
   14c54:	bl	16288 <__mempcpy_chk@plt+0x524c>
   14c58:	movw	r1, #28456	; 0x6f28
   14c5c:	mov	r6, r0
   14c60:	movt	r1, #1
   14c64:	bl	10dfc <strcmp@plt>
   14c68:	clz	r1, r0
   14c6c:	cmp	r0, #0
   14c70:	lsr	r1, r1, #5
   14c74:	str	r1, [r5, #4]
   14c78:	beq	14cb0 <__mempcpy_chk@plt+0x3c74>
   14c7c:	movw	r1, #28456	; 0x6f28
   14c80:	mov	r0, r6
   14c84:	movt	r1, #1
   14c88:	bl	10f04 <iconv_open@plt>
   14c8c:	cmn	r0, #1
   14c90:	str	r0, [r5, #8]
   14c94:	bne	14cb0 <__mempcpy_chk@plt+0x3c74>
   14c98:	movw	r0, #28462	; 0x6f2e
   14c9c:	movw	r1, #28456	; 0x6f28
   14ca0:	movt	r0, #1
   14ca4:	movt	r1, #1
   14ca8:	bl	10f04 <iconv_open@plt>
   14cac:	str	r0, [r5, #8]
   14cb0:	mov	r0, #1
   14cb4:	strb	r0, [r5]
   14cb8:	ldr	r0, [r5, #4]
   14cbc:	cmp	r0, #0
   14cc0:	ldreq	r1, [r5, #8]
   14cc4:	cmneq	r1, #1
   14cc8:	beq	14cf8 <__mempcpy_chk@plt+0x3cbc>
   14ccc:	cmp	r7, #127	; 0x7f
   14cd0:	bhi	14d04 <__mempcpy_chk@plt+0x3cc8>
   14cd4:	strb	r7, [fp, #-34]	; 0xffffffde
   14cd8:	mov	r1, #1
   14cdc:	cmp	r0, #0
   14ce0:	beq	14d2c <__mempcpy_chk@plt+0x3cf0>
   14ce4:	sub	r0, fp, #34	; 0x22
   14ce8:	mov	r2, r4
   14cec:	blx	r9
   14cf0:	sub	sp, fp, #28
   14cf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cf8:	movw	r1, #28468	; 0x6f34
   14cfc:	movt	r1, #1
   14d00:	b	14df4 <__mempcpy_chk@plt+0x3db8>
   14d04:	sub	r0, fp, #34	; 0x22
   14d08:	mov	r1, r7
   14d0c:	mov	r2, #6
   14d10:	bl	14f3c <__mempcpy_chk@plt+0x3f00>
   14d14:	cmp	r0, #0
   14d18:	blt	14dec <__mempcpy_chk@plt+0x3db0>
   14d1c:	mov	r1, r0
   14d20:	ldr	r0, [r5, #4]
   14d24:	cmp	r0, #0
   14d28:	bne	14ce4 <__mempcpy_chk@plt+0x3ca8>
   14d2c:	sub	r0, fp, #34	; 0x22
   14d30:	str	r1, [sp, #12]
   14d34:	add	r8, sp, #21
   14d38:	add	r6, sp, #4
   14d3c:	add	r1, sp, #16
   14d40:	add	r2, sp, #12
   14d44:	add	r3, sp, #8
   14d48:	str	r0, [sp, #16]
   14d4c:	mov	r0, #25
   14d50:	str	r8, [sp, #8]
   14d54:	str	r6, [sp]
   14d58:	str	r0, [sp, #4]
   14d5c:	ldr	r0, [r5, #8]
   14d60:	bl	10df0 <iconv@plt>
   14d64:	cmn	r0, #1
   14d68:	beq	14dd4 <__mempcpy_chk@plt+0x3d98>
   14d6c:	ldr	r1, [sp, #12]
   14d70:	cmp	r1, #0
   14d74:	bne	14dd4 <__mempcpy_chk@plt+0x3d98>
   14d78:	cmp	r0, #0
   14d7c:	beq	14d98 <__mempcpy_chk@plt+0x3d5c>
   14d80:	ldr	r0, [sp, #8]
   14d84:	sub	r0, r0, r8
   14d88:	cmp	r0, #1
   14d8c:	ldrbeq	r0, [sp, #21]
   14d90:	cmpeq	r0, #63	; 0x3f
   14d94:	beq	14dd4 <__mempcpy_chk@plt+0x3d98>
   14d98:	ldr	r0, [r5, #8]
   14d9c:	add	r3, sp, #8
   14da0:	mov	r1, #0
   14da4:	mov	r2, #0
   14da8:	str	r6, [sp]
   14dac:	bl	10df0 <iconv@plt>
   14db0:	cmn	r0, #1
   14db4:	beq	14dd4 <__mempcpy_chk@plt+0x3d98>
   14db8:	ldr	r0, [sp, #8]
   14dbc:	sub	r1, r0, r8
   14dc0:	mov	r0, r8
   14dc4:	mov	r2, r4
   14dc8:	blx	r9
   14dcc:	sub	sp, fp, #28
   14dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dd4:	mov	r0, r7
   14dd8:	mov	r1, #0
   14ddc:	mov	r2, r4
   14de0:	blx	sl
   14de4:	sub	sp, fp, #28
   14de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dec:	movw	r1, #28494	; 0x6f4e
   14df0:	movt	r1, #1
   14df4:	mov	r0, r7
   14df8:	mov	r2, r4
   14dfc:	blx	sl
   14e00:	sub	sp, fp, #28
   14e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e08:	push	{fp, lr}
   14e0c:	mov	fp, sp
   14e10:	mov	r3, r2
   14e14:	mov	r2, r1
   14e18:	mov	r1, #1
   14e1c:	bl	10ea4 <fwrite@plt>
   14e20:	mov	r0, #0
   14e24:	pop	{fp, pc}
   14e28:	push	{fp, lr}
   14e2c:	mov	fp, sp
   14e30:	movw	r3, #20076	; 0x4e6c
   14e34:	mov	ip, r0
   14e38:	movw	r0, #20216	; 0x4ef8
   14e3c:	cmp	r2, #0
   14e40:	mov	lr, r1
   14e44:	movw	r1, #19976	; 0x4e08
   14e48:	movt	r0, #1
   14e4c:	movt	r3, #1
   14e50:	movt	r1, #1
   14e54:	moveq	r3, r0
   14e58:	mov	r0, lr
   14e5c:	mov	r2, r3
   14e60:	mov	r3, ip
   14e64:	pop	{fp, lr}
   14e68:	b	14c24 <__mempcpy_chk@plt+0x3be8>
   14e6c:	push	{r4, r5, r6, sl, fp, lr}
   14e70:	add	fp, sp, #16
   14e74:	sub	sp, sp, #8
   14e78:	mov	r4, r0
   14e7c:	cmp	r1, #0
   14e80:	beq	14ec4 <__mempcpy_chk@plt+0x3e88>
   14e84:	mov	r5, r1
   14e88:	movw	r1, #28562	; 0x6f92
   14e8c:	mov	r0, #0
   14e90:	mov	r2, #5
   14e94:	movt	r1, #1
   14e98:	bl	10e74 <dcgettext@plt>
   14e9c:	mov	r6, r0
   14ea0:	mov	r0, #0
   14ea4:	mov	r1, r5
   14ea8:	mov	r2, #5
   14eac:	bl	10e74 <dcgettext@plt>
   14eb0:	str	r0, [sp]
   14eb4:	mov	r0, #1
   14eb8:	mov	r1, #0
   14ebc:	mov	r2, r6
   14ec0:	b	14ee4 <__mempcpy_chk@plt+0x3ea8>
   14ec4:	movw	r1, #28517	; 0x6f65
   14ec8:	mov	r0, #0
   14ecc:	mov	r2, #5
   14ed0:	movt	r1, #1
   14ed4:	bl	10e74 <dcgettext@plt>
   14ed8:	mov	r2, r0
   14edc:	mov	r0, #1
   14ee0:	mov	r1, #0
   14ee4:	mov	r3, r4
   14ee8:	bl	10ee0 <error@plt>
   14eec:	mvn	r0, #0
   14ef0:	sub	sp, fp, #16
   14ef4:	pop	{r4, r5, r6, sl, fp, pc}
   14ef8:	push	{fp, lr}
   14efc:	mov	fp, sp
   14f00:	mov	r3, r0
   14f04:	mov	r0, #0
   14f08:	mov	r1, r2
   14f0c:	cmp	r0, r3, lsr #16
   14f10:	bne	14f20 <__mempcpy_chk@plt+0x3ee4>
   14f14:	movw	r2, #28611	; 0x6fc3
   14f18:	movt	r2, #1
   14f1c:	b	14f28 <__mempcpy_chk@plt+0x3eec>
   14f20:	movw	r2, #28618	; 0x6fca
   14f24:	movt	r2, #1
   14f28:	mov	r0, r1
   14f2c:	mov	r1, #1
   14f30:	bl	10fa0 <__fprintf_chk@plt>
   14f34:	mvn	r0, #0
   14f38:	pop	{fp, pc}
   14f3c:	push	{fp, lr}
   14f40:	mov	fp, sp
   14f44:	mvn	r3, #1
   14f48:	cmp	r1, #128	; 0x80
   14f4c:	bcc	14ff8 <__mempcpy_chk@plt+0x3fbc>
   14f50:	mov	ip, #2
   14f54:	cmp	r1, #2048	; 0x800
   14f58:	bcs	14fd4 <__mempcpy_chk@plt+0x3f98>
   14f5c:	cmp	ip, r2
   14f60:	mvn	r3, #1
   14f64:	bgt	14ff8 <__mempcpy_chk@plt+0x3fbc>
   14f68:	cmp	ip, #2
   14f6c:	beq	14fb0 <__mempcpy_chk@plt+0x3f74>
   14f70:	cmp	ip, #3
   14f74:	beq	14f98 <__mempcpy_chk@plt+0x3f5c>
   14f78:	cmp	ip, #4
   14f7c:	bne	14fc8 <__mempcpy_chk@plt+0x3f8c>
   14f80:	mov	r2, #2
   14f84:	mov	r3, r1
   14f88:	bfi	r3, r2, #6, #26
   14f8c:	mov	r2, #65536	; 0x10000
   14f90:	orr	r1, r2, r1, lsr #6
   14f94:	strb	r3, [r0, #3]
   14f98:	mov	r2, #2
   14f9c:	mov	r3, r1
   14fa0:	bfi	r3, r2, #6, #26
   14fa4:	mov	r2, #2048	; 0x800
   14fa8:	orr	r1, r2, r1, lsr #6
   14fac:	strb	r3, [r0, #2]
   14fb0:	mov	r2, #192	; 0xc0
   14fb4:	orr	r2, r2, r1, lsr #6
   14fb8:	strb	r2, [r0]
   14fbc:	mov	r2, #2
   14fc0:	bfi	r1, r2, #6, #26
   14fc4:	strb	r1, [r0, #1]
   14fc8:	mov	r3, ip
   14fcc:	mov	r0, r3
   14fd0:	pop	{fp, pc}
   14fd4:	mov	r3, #0
   14fd8:	cmp	r3, r1, lsr #16
   14fdc:	bne	15000 <__mempcpy_chk@plt+0x3fc4>
   14fe0:	mov	lr, r1
   14fe4:	mov	ip, #3
   14fe8:	mvn	r3, #0
   14fec:	bfc	lr, #0, #11
   14ff0:	cmp	lr, #55296	; 0xd800
   14ff4:	bne	14f5c <__mempcpy_chk@plt+0x3f20>
   14ff8:	mov	r0, r3
   14ffc:	pop	{fp, pc}
   15000:	lsr	lr, r1, #16
   15004:	mvn	r3, #0
   15008:	mov	ip, #4
   1500c:	cmp	lr, #16
   15010:	bls	14f5c <__mempcpy_chk@plt+0x3f20>
   15014:	b	14ff8 <__mempcpy_chk@plt+0x3fbc>
   15018:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1501c:	add	fp, sp, #24
   15020:	sub	sp, sp, #32
   15024:	ldr	r6, [fp, #12]
   15028:	ldr	r7, [fp, #8]
   1502c:	mov	r4, r2
   15030:	mov	r8, r0
   15034:	cmp	r1, #0
   15038:	beq	15060 <__mempcpy_chk@plt+0x4024>
   1503c:	movw	r2, #28625	; 0x6fd1
   15040:	mov	r5, r1
   15044:	str	r3, [sp, #4]
   15048:	str	r4, [sp]
   1504c:	mov	r0, r8
   15050:	mov	r1, #1
   15054:	movt	r2, #1
   15058:	mov	r3, r5
   1505c:	b	15078 <__mempcpy_chk@plt+0x403c>
   15060:	movw	r2, #28637	; 0x6fdd
   15064:	str	r3, [sp]
   15068:	mov	r0, r8
   1506c:	mov	r1, #1
   15070:	mov	r3, r4
   15074:	movt	r2, #1
   15078:	bl	10fa0 <__fprintf_chk@plt>
   1507c:	movw	r1, #28644	; 0x6fe4
   15080:	mov	r0, #0
   15084:	mov	r2, #5
   15088:	movt	r1, #1
   1508c:	bl	10e74 <dcgettext@plt>
   15090:	movw	r2, #29362	; 0x72b2
   15094:	mov	r3, r0
   15098:	movw	r0, #2022	; 0x7e6
   1509c:	mov	r1, #1
   150a0:	str	r0, [sp]
   150a4:	movt	r2, #1
   150a8:	mov	r0, r8
   150ac:	bl	10fa0 <__fprintf_chk@plt>
   150b0:	movw	r4, #25995	; 0x658b
   150b4:	mov	r1, r8
   150b8:	movt	r4, #1
   150bc:	mov	r0, r4
   150c0:	bl	10dd8 <fputs_unlocked@plt>
   150c4:	movw	r1, #28648	; 0x6fe8
   150c8:	mov	r0, #0
   150cc:	mov	r2, #5
   150d0:	movt	r1, #1
   150d4:	bl	10e74 <dcgettext@plt>
   150d8:	movw	r3, #28819	; 0x7093
   150dc:	mov	r2, r0
   150e0:	mov	r0, r8
   150e4:	mov	r1, #1
   150e8:	movt	r3, #1
   150ec:	bl	10fa0 <__fprintf_chk@plt>
   150f0:	mov	r0, r4
   150f4:	mov	r1, r8
   150f8:	bl	10dd8 <fputs_unlocked@plt>
   150fc:	cmp	r6, #9
   15100:	bhi	1513c <__mempcpy_chk@plt+0x4100>
   15104:	add	r0, pc, #0
   15108:	ldr	pc, [r0, r6, lsl #2]
   1510c:	andeq	r5, r1, r4, lsr r1
   15110:	andeq	r5, r1, r8, asr #2
   15114:	andeq	r5, r1, r8, ror r1
   15118:	andeq	r5, r1, r0, lsr #3
   1511c:	andeq	r5, r1, r8, asr #3
   15120:	strdeq	r5, [r1], -r0
   15124:	andeq	r5, r1, r8, lsl r2
   15128:	andeq	r5, r1, r0, asr r2
   1512c:	strdeq	r5, [r1], -r8
   15130:	andeq	r5, r1, r0, lsr #5
   15134:	sub	sp, fp, #24
   15138:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1513c:	movw	r1, #29172	; 0x71f4
   15140:	movt	r1, #1
   15144:	b	152a8 <__mempcpy_chk@plt+0x426c>
   15148:	movw	r1, #28853	; 0x70b5
   1514c:	mov	r0, #0
   15150:	mov	r2, #5
   15154:	movt	r1, #1
   15158:	bl	10e74 <dcgettext@plt>
   1515c:	ldr	r3, [r7]
   15160:	mov	r2, r0
   15164:	mov	r0, r8
   15168:	mov	r1, #1
   1516c:	sub	sp, fp, #24
   15170:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15174:	b	10fa0 <__fprintf_chk@plt>
   15178:	movw	r1, #28869	; 0x70c5
   1517c:	mov	r0, #0
   15180:	mov	r2, #5
   15184:	movt	r1, #1
   15188:	bl	10e74 <dcgettext@plt>
   1518c:	mov	r2, r0
   15190:	ldr	r3, [r7]
   15194:	ldr	r0, [r7, #4]
   15198:	str	r0, [sp]
   1519c:	b	1528c <__mempcpy_chk@plt+0x4250>
   151a0:	movw	r1, #28892	; 0x70dc
   151a4:	mov	r0, #0
   151a8:	mov	r2, #5
   151ac:	movt	r1, #1
   151b0:	bl	10e74 <dcgettext@plt>
   151b4:	ldr	r3, [r7]
   151b8:	mov	r2, r0
   151bc:	ldmib	r7, {r0, r1}
   151c0:	stm	sp, {r0, r1}
   151c4:	b	1528c <__mempcpy_chk@plt+0x4250>
   151c8:	movw	r1, #28920	; 0x70f8
   151cc:	mov	r0, #0
   151d0:	mov	r2, #5
   151d4:	movt	r1, #1
   151d8:	bl	10e74 <dcgettext@plt>
   151dc:	ldr	r3, [r7]
   151e0:	mov	r2, r0
   151e4:	ldmib	r7, {r0, r1, r7}
   151e8:	stm	sp, {r0, r1, r7}
   151ec:	b	1528c <__mempcpy_chk@plt+0x4250>
   151f0:	movw	r1, #28952	; 0x7118
   151f4:	mov	r0, #0
   151f8:	mov	r2, #5
   151fc:	movt	r1, #1
   15200:	bl	10e74 <dcgettext@plt>
   15204:	ldr	r3, [r7]
   15208:	mov	r2, r0
   1520c:	ldmib	r7, {r0, r1, r6, r7}
   15210:	stm	sp, {r0, r1, r6, r7}
   15214:	b	1528c <__mempcpy_chk@plt+0x4250>
   15218:	movw	r1, #28988	; 0x713c
   1521c:	mov	r0, #0
   15220:	mov	r2, #5
   15224:	movt	r1, #1
   15228:	bl	10e74 <dcgettext@plt>
   1522c:	ldr	r3, [r7]
   15230:	mov	r2, r0
   15234:	ldmib	r7, {r0, r1, r6}
   15238:	ldr	r5, [r7, #16]
   1523c:	ldr	r7, [r7, #20]
   15240:	stm	sp, {r0, r1, r6}
   15244:	str	r5, [sp, #12]
   15248:	str	r7, [sp, #16]
   1524c:	b	1528c <__mempcpy_chk@plt+0x4250>
   15250:	movw	r1, #29028	; 0x7164
   15254:	mov	r0, #0
   15258:	mov	r2, #5
   1525c:	movt	r1, #1
   15260:	bl	10e74 <dcgettext@plt>
   15264:	ldr	r3, [r7]
   15268:	mov	r2, r0
   1526c:	ldmib	r7, {r0, r1, r6}
   15270:	ldr	r5, [r7, #16]
   15274:	ldr	r4, [r7, #20]
   15278:	ldr	r7, [r7, #24]
   1527c:	stm	sp, {r0, r1, r6}
   15280:	str	r5, [sp, #12]
   15284:	str	r4, [sp, #16]
   15288:	str	r7, [sp, #20]
   1528c:	mov	r0, r8
   15290:	mov	r1, #1
   15294:	bl	10fa0 <__fprintf_chk@plt>
   15298:	sub	sp, fp, #24
   1529c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152a0:	movw	r1, #29120	; 0x71c0
   152a4:	movt	r1, #1
   152a8:	mov	r0, #0
   152ac:	mov	r2, #5
   152b0:	bl	10e74 <dcgettext@plt>
   152b4:	mov	ip, r0
   152b8:	ldr	r3, [r7]
   152bc:	ldr	r0, [r7, #4]
   152c0:	ldr	r1, [r7, #8]
   152c4:	ldr	r6, [r7, #12]
   152c8:	ldr	r5, [r7, #16]
   152cc:	ldr	r4, [r7, #20]
   152d0:	ldr	r2, [r7, #24]
   152d4:	ldr	lr, [r7, #28]
   152d8:	ldr	r7, [r7, #32]
   152dc:	stm	sp, {r0, r1, r6}
   152e0:	str	r5, [sp, #12]
   152e4:	str	r4, [sp, #16]
   152e8:	str	r2, [sp, #20]
   152ec:	str	lr, [sp, #24]
   152f0:	str	r7, [sp, #28]
   152f4:	b	1533c <__mempcpy_chk@plt+0x4300>
   152f8:	movw	r1, #29072	; 0x7190
   152fc:	mov	r0, #0
   15300:	mov	r2, #5
   15304:	movt	r1, #1
   15308:	bl	10e74 <dcgettext@plt>
   1530c:	mov	ip, r0
   15310:	ldr	r3, [r7]
   15314:	ldmib	r7, {r0, r1, r6}
   15318:	ldr	r5, [r7, #16]
   1531c:	ldr	r4, [r7, #20]
   15320:	ldr	r2, [r7, #24]
   15324:	ldr	r7, [r7, #28]
   15328:	stm	sp, {r0, r1, r6}
   1532c:	str	r5, [sp, #12]
   15330:	str	r4, [sp, #16]
   15334:	str	r2, [sp, #20]
   15338:	str	r7, [sp, #24]
   1533c:	mov	r0, r8
   15340:	mov	r1, #1
   15344:	mov	r2, ip
   15348:	bl	10fa0 <__fprintf_chk@plt>
   1534c:	sub	sp, fp, #24
   15350:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15354:	push	{r4, sl, fp, lr}
   15358:	add	fp, sp, #8
   1535c:	sub	sp, sp, #8
   15360:	ldr	ip, [fp, #8]
   15364:	mov	lr, #0
   15368:	ldr	r4, [ip, lr, lsl #2]
   1536c:	add	lr, lr, #1
   15370:	cmp	r4, #0
   15374:	bne	15368 <__mempcpy_chk@plt+0x432c>
   15378:	sub	r4, lr, #1
   1537c:	str	ip, [sp]
   15380:	str	r4, [sp, #4]
   15384:	bl	15018 <__mempcpy_chk@plt+0x3fdc>
   15388:	sub	sp, fp, #8
   1538c:	pop	{r4, sl, fp, pc}
   15390:	push	{fp, lr}
   15394:	mov	fp, sp
   15398:	sub	sp, sp, #48	; 0x30
   1539c:	ldr	ip, [fp, #8]
   153a0:	ldr	lr, [ip]
   153a4:	cmp	lr, #0
   153a8:	str	lr, [sp, #8]
   153ac:	beq	15448 <__mempcpy_chk@plt+0x440c>
   153b0:	ldr	lr, [ip, #4]
   153b4:	cmp	lr, #0
   153b8:	str	lr, [sp, #12]
   153bc:	beq	15450 <__mempcpy_chk@plt+0x4414>
   153c0:	ldr	lr, [ip, #8]
   153c4:	cmp	lr, #0
   153c8:	str	lr, [sp, #16]
   153cc:	beq	15458 <__mempcpy_chk@plt+0x441c>
   153d0:	ldr	lr, [ip, #12]
   153d4:	cmp	lr, #0
   153d8:	str	lr, [sp, #20]
   153dc:	beq	15460 <__mempcpy_chk@plt+0x4424>
   153e0:	ldr	lr, [ip, #16]
   153e4:	cmp	lr, #0
   153e8:	str	lr, [sp, #24]
   153ec:	beq	15468 <__mempcpy_chk@plt+0x442c>
   153f0:	ldr	lr, [ip, #20]
   153f4:	cmp	lr, #0
   153f8:	str	lr, [sp, #28]
   153fc:	beq	15470 <__mempcpy_chk@plt+0x4434>
   15400:	ldr	lr, [ip, #24]
   15404:	cmp	lr, #0
   15408:	str	lr, [sp, #32]
   1540c:	beq	15478 <__mempcpy_chk@plt+0x443c>
   15410:	ldr	lr, [ip, #28]
   15414:	cmp	lr, #0
   15418:	str	lr, [sp, #36]	; 0x24
   1541c:	beq	15480 <__mempcpy_chk@plt+0x4444>
   15420:	ldr	lr, [ip, #32]
   15424:	cmp	lr, #0
   15428:	str	lr, [sp, #40]	; 0x28
   1542c:	beq	15488 <__mempcpy_chk@plt+0x444c>
   15430:	ldr	lr, [ip, #36]	; 0x24
   15434:	mov	ip, #10
   15438:	cmp	lr, #0
   1543c:	str	lr, [sp, #44]	; 0x2c
   15440:	movweq	ip, #9
   15444:	b	1548c <__mempcpy_chk@plt+0x4450>
   15448:	mov	ip, #0
   1544c:	b	1548c <__mempcpy_chk@plt+0x4450>
   15450:	mov	ip, #1
   15454:	b	1548c <__mempcpy_chk@plt+0x4450>
   15458:	mov	ip, #2
   1545c:	b	1548c <__mempcpy_chk@plt+0x4450>
   15460:	mov	ip, #3
   15464:	b	1548c <__mempcpy_chk@plt+0x4450>
   15468:	mov	ip, #4
   1546c:	b	1548c <__mempcpy_chk@plt+0x4450>
   15470:	mov	ip, #5
   15474:	b	1548c <__mempcpy_chk@plt+0x4450>
   15478:	mov	ip, #6
   1547c:	b	1548c <__mempcpy_chk@plt+0x4450>
   15480:	mov	ip, #7
   15484:	b	1548c <__mempcpy_chk@plt+0x4450>
   15488:	mov	ip, #8
   1548c:	add	lr, sp, #8
   15490:	str	ip, [sp, #4]
   15494:	str	lr, [sp]
   15498:	bl	15018 <__mempcpy_chk@plt+0x3fdc>
   1549c:	mov	sp, fp
   154a0:	pop	{fp, pc}
   154a4:	push	{fp, lr}
   154a8:	mov	fp, sp
   154ac:	sub	sp, sp, #56	; 0x38
   154b0:	add	ip, fp, #8
   154b4:	str	ip, [sp, #12]
   154b8:	ldr	lr, [fp, #8]
   154bc:	cmp	lr, #0
   154c0:	str	lr, [sp, #16]
   154c4:	beq	15560 <__mempcpy_chk@plt+0x4524>
   154c8:	ldr	lr, [ip, #4]
   154cc:	cmp	lr, #0
   154d0:	str	lr, [sp, #20]
   154d4:	beq	15568 <__mempcpy_chk@plt+0x452c>
   154d8:	ldr	lr, [ip, #8]
   154dc:	cmp	lr, #0
   154e0:	str	lr, [sp, #24]
   154e4:	beq	15570 <__mempcpy_chk@plt+0x4534>
   154e8:	ldr	lr, [ip, #12]
   154ec:	cmp	lr, #0
   154f0:	str	lr, [sp, #28]
   154f4:	beq	15578 <__mempcpy_chk@plt+0x453c>
   154f8:	ldr	lr, [ip, #16]
   154fc:	cmp	lr, #0
   15500:	str	lr, [sp, #32]
   15504:	beq	15580 <__mempcpy_chk@plt+0x4544>
   15508:	ldr	lr, [ip, #20]
   1550c:	cmp	lr, #0
   15510:	str	lr, [sp, #36]	; 0x24
   15514:	beq	15588 <__mempcpy_chk@plt+0x454c>
   15518:	ldr	lr, [ip, #24]
   1551c:	cmp	lr, #0
   15520:	str	lr, [sp, #40]	; 0x28
   15524:	beq	15590 <__mempcpy_chk@plt+0x4554>
   15528:	ldr	lr, [ip, #28]
   1552c:	cmp	lr, #0
   15530:	str	lr, [sp, #44]	; 0x2c
   15534:	beq	15598 <__mempcpy_chk@plt+0x455c>
   15538:	ldr	lr, [ip, #32]
   1553c:	cmp	lr, #0
   15540:	str	lr, [sp, #48]	; 0x30
   15544:	beq	155a0 <__mempcpy_chk@plt+0x4564>
   15548:	ldr	lr, [ip, #36]	; 0x24
   1554c:	mov	ip, #10
   15550:	cmp	lr, #0
   15554:	str	lr, [sp, #52]	; 0x34
   15558:	movweq	ip, #9
   1555c:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15560:	mov	ip, #0
   15564:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15568:	mov	ip, #1
   1556c:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15570:	mov	ip, #2
   15574:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15578:	mov	ip, #3
   1557c:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15580:	mov	ip, #4
   15584:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15588:	mov	ip, #5
   1558c:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15590:	mov	ip, #6
   15594:	b	155a4 <__mempcpy_chk@plt+0x4568>
   15598:	mov	ip, #7
   1559c:	b	155a4 <__mempcpy_chk@plt+0x4568>
   155a0:	mov	ip, #8
   155a4:	add	lr, sp, #16
   155a8:	str	ip, [sp, #4]
   155ac:	str	lr, [sp]
   155b0:	bl	15018 <__mempcpy_chk@plt+0x3fdc>
   155b4:	mov	sp, fp
   155b8:	pop	{fp, pc}
   155bc:	push	{fp, lr}
   155c0:	mov	fp, sp
   155c4:	movw	r0, #33092	; 0x8144
   155c8:	movt	r0, #2
   155cc:	ldr	r1, [r0]
   155d0:	movw	r0, #25995	; 0x658b
   155d4:	movt	r0, #1
   155d8:	bl	10dd8 <fputs_unlocked@plt>
   155dc:	movw	r1, #29232	; 0x7230
   155e0:	mov	r0, #0
   155e4:	mov	r2, #5
   155e8:	movt	r1, #1
   155ec:	bl	10e74 <dcgettext@plt>
   155f0:	movw	r2, #29252	; 0x7244
   155f4:	mov	r1, r0
   155f8:	mov	r0, #1
   155fc:	movt	r2, #1
   15600:	bl	10f88 <__printf_chk@plt>
   15604:	movw	r1, #29274	; 0x725a
   15608:	mov	r0, #0
   1560c:	mov	r2, #5
   15610:	movt	r1, #1
   15614:	bl	10e74 <dcgettext@plt>
   15618:	movw	r2, #27377	; 0x6af1
   1561c:	movw	r3, #27597	; 0x6bcd
   15620:	mov	r1, r0
   15624:	mov	r0, #1
   15628:	movt	r2, #1
   1562c:	movt	r3, #1
   15630:	bl	10f88 <__printf_chk@plt>
   15634:	movw	r1, #29294	; 0x726e
   15638:	mov	r0, #0
   1563c:	mov	r2, #5
   15640:	movt	r1, #1
   15644:	bl	10e74 <dcgettext@plt>
   15648:	movw	r2, #29333	; 0x7295
   1564c:	mov	r1, r0
   15650:	mov	r0, #1
   15654:	movt	r2, #1
   15658:	pop	{fp, lr}
   1565c:	b	10f88 <__printf_chk@plt>
   15660:	push	{r4, r5, r6, sl, fp, lr}
   15664:	add	fp, sp, #16
   15668:	mov	r4, r2
   1566c:	mov	r5, r1
   15670:	mov	r6, r0
   15674:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   15678:	cmp	r0, #0
   1567c:	popne	{r4, r5, r6, sl, fp, pc}
   15680:	cmp	r6, #0
   15684:	beq	15698 <__mempcpy_chk@plt+0x465c>
   15688:	cmp	r5, #0
   1568c:	cmpne	r4, #0
   15690:	bne	15698 <__mempcpy_chk@plt+0x465c>
   15694:	pop	{r4, r5, r6, sl, fp, pc}
   15698:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   1569c:	push	{r4, r5, r6, sl, fp, lr}
   156a0:	add	fp, sp, #16
   156a4:	mov	r4, r2
   156a8:	mov	r5, r1
   156ac:	mov	r6, r0
   156b0:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   156b4:	cmp	r0, #0
   156b8:	popne	{r4, r5, r6, sl, fp, pc}
   156bc:	cmp	r6, #0
   156c0:	beq	156d4 <__mempcpy_chk@plt+0x4698>
   156c4:	cmp	r5, #0
   156c8:	cmpne	r4, #0
   156cc:	bne	156d4 <__mempcpy_chk@plt+0x4698>
   156d0:	pop	{r4, r5, r6, sl, fp, pc}
   156d4:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   156d8:	push	{fp, lr}
   156dc:	mov	fp, sp
   156e0:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   156e4:	cmp	r0, #0
   156e8:	popne	{fp, pc}
   156ec:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   156f0:	push	{fp, lr}
   156f4:	mov	fp, sp
   156f8:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   156fc:	cmp	r0, #0
   15700:	popne	{fp, pc}
   15704:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15708:	push	{fp, lr}
   1570c:	mov	fp, sp
   15710:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   15714:	cmp	r0, #0
   15718:	popne	{fp, pc}
   1571c:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15720:	push	{r4, r5, fp, lr}
   15724:	add	fp, sp, #8
   15728:	mov	r4, r1
   1572c:	mov	r5, r0
   15730:	bl	15f48 <__mempcpy_chk@plt+0x4f0c>
   15734:	cmp	r0, #0
   15738:	popne	{r4, r5, fp, pc}
   1573c:	cmp	r5, #0
   15740:	beq	15750 <__mempcpy_chk@plt+0x4714>
   15744:	cmp	r4, #0
   15748:	bne	15750 <__mempcpy_chk@plt+0x4714>
   1574c:	pop	{r4, r5, fp, pc}
   15750:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15754:	push	{fp, lr}
   15758:	mov	fp, sp
   1575c:	cmp	r1, #0
   15760:	orreq	r1, r1, #1
   15764:	bl	15f48 <__mempcpy_chk@plt+0x4f0c>
   15768:	cmp	r0, #0
   1576c:	popne	{fp, pc}
   15770:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15774:	push	{fp, lr}
   15778:	mov	fp, sp
   1577c:	clz	r3, r2
   15780:	lsr	ip, r3, #5
   15784:	clz	r3, r1
   15788:	lsr	r3, r3, #5
   1578c:	orrs	r3, r3, ip
   15790:	movwne	r1, #1
   15794:	movwne	r2, #1
   15798:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   1579c:	cmp	r0, #0
   157a0:	popne	{fp, pc}
   157a4:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   157a8:	push	{fp, lr}
   157ac:	mov	fp, sp
   157b0:	mov	r2, r1
   157b4:	mov	r1, r0
   157b8:	mov	r0, #0
   157bc:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   157c0:	cmp	r0, #0
   157c4:	popne	{fp, pc}
   157c8:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   157cc:	push	{fp, lr}
   157d0:	mov	fp, sp
   157d4:	mov	r2, r1
   157d8:	mov	r1, r0
   157dc:	clz	r0, r2
   157e0:	clz	r3, r1
   157e4:	lsr	r0, r0, #5
   157e8:	lsr	r3, r3, #5
   157ec:	orrs	r0, r3, r0
   157f0:	movwne	r1, #1
   157f4:	movwne	r2, #1
   157f8:	mov	r0, #0
   157fc:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   15800:	cmp	r0, #0
   15804:	popne	{fp, pc}
   15808:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   1580c:	push	{r4, r5, r6, sl, fp, lr}
   15810:	add	fp, sp, #16
   15814:	ldr	r5, [r1]
   15818:	mov	r4, r1
   1581c:	mov	r6, r0
   15820:	cmp	r0, #0
   15824:	beq	1583c <__mempcpy_chk@plt+0x4800>
   15828:	mov	r0, #1
   1582c:	add	r0, r0, r5, lsr #1
   15830:	adds	r5, r5, r0
   15834:	bcc	15844 <__mempcpy_chk@plt+0x4808>
   15838:	b	15880 <__mempcpy_chk@plt+0x4844>
   1583c:	cmp	r5, #0
   15840:	movweq	r5, #64	; 0x40
   15844:	mov	r0, r6
   15848:	mov	r1, r5
   1584c:	mov	r2, #1
   15850:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   15854:	cmp	r5, #0
   15858:	mov	r1, r5
   1585c:	movwne	r1, #1
   15860:	cmp	r0, #0
   15864:	bne	15878 <__mempcpy_chk@plt+0x483c>
   15868:	clz	r2, r6
   1586c:	lsr	r2, r2, #5
   15870:	orrs	r1, r2, r1
   15874:	bne	15880 <__mempcpy_chk@plt+0x4844>
   15878:	str	r5, [r4]
   1587c:	pop	{r4, r5, r6, sl, fp, pc}
   15880:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15884:	push	{r4, r5, r6, r7, fp, lr}
   15888:	add	fp, sp, #16
   1588c:	ldr	r5, [r1]
   15890:	mov	r6, r2
   15894:	mov	r4, r1
   15898:	mov	r7, r0
   1589c:	cmp	r0, #0
   158a0:	beq	158b8 <__mempcpy_chk@plt+0x487c>
   158a4:	mov	r0, #1
   158a8:	add	r0, r0, r5, lsr #1
   158ac:	adds	r5, r5, r0
   158b0:	bcc	158d0 <__mempcpy_chk@plt+0x4894>
   158b4:	b	15904 <__mempcpy_chk@plt+0x48c8>
   158b8:	cmp	r5, #0
   158bc:	bne	158d0 <__mempcpy_chk@plt+0x4894>
   158c0:	mov	r0, #64	; 0x40
   158c4:	cmp	r6, #64	; 0x40
   158c8:	udiv	r5, r0, r6
   158cc:	addhi	r5, r5, #1
   158d0:	mov	r0, r7
   158d4:	mov	r1, r5
   158d8:	mov	r2, r6
   158dc:	bl	16320 <__mempcpy_chk@plt+0x52e4>
   158e0:	cmp	r0, #0
   158e4:	bne	158fc <__mempcpy_chk@plt+0x48c0>
   158e8:	cmp	r7, #0
   158ec:	beq	15904 <__mempcpy_chk@plt+0x48c8>
   158f0:	cmp	r6, #0
   158f4:	cmpne	r5, #0
   158f8:	bne	15904 <__mempcpy_chk@plt+0x48c8>
   158fc:	str	r5, [r4]
   15900:	pop	{r4, r5, r6, r7, fp, pc}
   15904:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15908:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1590c:	add	fp, sp, #24
   15910:	mov	r8, r1
   15914:	ldr	r1, [r1]
   15918:	mov	r5, r0
   1591c:	add	r0, r1, r1, asr #1
   15920:	cmp	r0, r1
   15924:	mvnvs	r0, #-2147483648	; 0x80000000
   15928:	cmp	r0, r3
   1592c:	mov	r7, r0
   15930:	movgt	r7, r3
   15934:	cmn	r3, #1
   15938:	movle	r7, r0
   1593c:	ldr	r0, [fp, #8]
   15940:	cmn	r0, #1
   15944:	ble	1596c <__mempcpy_chk@plt+0x4930>
   15948:	cmp	r0, #0
   1594c:	beq	159c0 <__mempcpy_chk@plt+0x4984>
   15950:	cmn	r7, #1
   15954:	ble	15994 <__mempcpy_chk@plt+0x4958>
   15958:	mvn	r4, #-2147483648	; 0x80000000
   1595c:	udiv	r6, r4, r0
   15960:	cmp	r6, r7
   15964:	bge	159c0 <__mempcpy_chk@plt+0x4984>
   15968:	b	159d0 <__mempcpy_chk@plt+0x4994>
   1596c:	cmn	r7, #1
   15970:	ble	159b0 <__mempcpy_chk@plt+0x4974>
   15974:	cmn	r0, #1
   15978:	beq	159c0 <__mempcpy_chk@plt+0x4984>
   1597c:	mov	r6, #-2147483648	; 0x80000000
   15980:	mvn	r4, #-2147483648	; 0x80000000
   15984:	sdiv	r6, r6, r0
   15988:	cmp	r6, r7
   1598c:	bge	159c0 <__mempcpy_chk@plt+0x4984>
   15990:	b	159d0 <__mempcpy_chk@plt+0x4994>
   15994:	beq	159c0 <__mempcpy_chk@plt+0x4984>
   15998:	mov	r6, #-2147483648	; 0x80000000
   1599c:	mvn	r4, #-2147483648	; 0x80000000
   159a0:	sdiv	r6, r6, r7
   159a4:	cmp	r6, r0
   159a8:	bge	159c0 <__mempcpy_chk@plt+0x4984>
   159ac:	b	159d0 <__mempcpy_chk@plt+0x4994>
   159b0:	mvn	r4, #-2147483648	; 0x80000000
   159b4:	sdiv	r6, r4, r0
   159b8:	cmp	r7, r6
   159bc:	blt	159d0 <__mempcpy_chk@plt+0x4994>
   159c0:	mul	r6, r7, r0
   159c4:	mov	r4, #64	; 0x40
   159c8:	cmp	r6, #63	; 0x3f
   159cc:	bgt	159d8 <__mempcpy_chk@plt+0x499c>
   159d0:	sdiv	r7, r4, r0
   159d4:	mul	r6, r7, r0
   159d8:	cmp	r5, #0
   159dc:	moveq	r4, #0
   159e0:	streq	r4, [r8]
   159e4:	sub	r4, r7, r1
   159e8:	cmp	r4, r2
   159ec:	bge	15a98 <__mempcpy_chk@plt+0x4a5c>
   159f0:	add	r7, r1, r2
   159f4:	mov	r6, #0
   159f8:	mov	r2, #0
   159fc:	cmp	r7, r3
   15a00:	movwgt	r6, #1
   15a04:	cmn	r3, #1
   15a08:	movwgt	r2, #1
   15a0c:	cmp	r7, r1
   15a10:	bvs	15acc <__mempcpy_chk@plt+0x4a90>
   15a14:	ands	r1, r2, r6
   15a18:	bne	15acc <__mempcpy_chk@plt+0x4a90>
   15a1c:	cmn	r0, #1
   15a20:	ble	15a48 <__mempcpy_chk@plt+0x4a0c>
   15a24:	cmp	r0, #0
   15a28:	beq	15a94 <__mempcpy_chk@plt+0x4a58>
   15a2c:	cmn	r7, #1
   15a30:	ble	15a6c <__mempcpy_chk@plt+0x4a30>
   15a34:	mvn	r1, #-2147483648	; 0x80000000
   15a38:	udiv	r1, r1, r0
   15a3c:	cmp	r1, r7
   15a40:	bge	15a94 <__mempcpy_chk@plt+0x4a58>
   15a44:	b	15acc <__mempcpy_chk@plt+0x4a90>
   15a48:	cmn	r7, #1
   15a4c:	ble	15a84 <__mempcpy_chk@plt+0x4a48>
   15a50:	cmn	r0, #1
   15a54:	beq	15a94 <__mempcpy_chk@plt+0x4a58>
   15a58:	mov	r1, #-2147483648	; 0x80000000
   15a5c:	sdiv	r1, r1, r0
   15a60:	cmp	r1, r7
   15a64:	bge	15a94 <__mempcpy_chk@plt+0x4a58>
   15a68:	b	15acc <__mempcpy_chk@plt+0x4a90>
   15a6c:	beq	15a94 <__mempcpy_chk@plt+0x4a58>
   15a70:	mov	r1, #-2147483648	; 0x80000000
   15a74:	sdiv	r1, r1, r7
   15a78:	cmp	r1, r0
   15a7c:	bge	15a94 <__mempcpy_chk@plt+0x4a58>
   15a80:	b	15acc <__mempcpy_chk@plt+0x4a90>
   15a84:	mvn	r1, #-2147483648	; 0x80000000
   15a88:	sdiv	r1, r1, r0
   15a8c:	cmp	r7, r1
   15a90:	blt	15acc <__mempcpy_chk@plt+0x4a90>
   15a94:	mul	r6, r7, r0
   15a98:	mov	r0, r5
   15a9c:	mov	r1, r6
   15aa0:	bl	15f48 <__mempcpy_chk@plt+0x4f0c>
   15aa4:	cmp	r6, #0
   15aa8:	movwne	r6, #1
   15aac:	cmp	r0, #0
   15ab0:	bne	15ac4 <__mempcpy_chk@plt+0x4a88>
   15ab4:	clz	r1, r5
   15ab8:	lsr	r1, r1, #5
   15abc:	orrs	r1, r1, r6
   15ac0:	bne	15acc <__mempcpy_chk@plt+0x4a90>
   15ac4:	str	r7, [r8]
   15ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15acc:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15ad0:	push	{fp, lr}
   15ad4:	mov	fp, sp
   15ad8:	mov	r1, #1
   15adc:	bl	15ec4 <__mempcpy_chk@plt+0x4e88>
   15ae0:	cmp	r0, #0
   15ae4:	popne	{fp, pc}
   15ae8:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15aec:	push	{fp, lr}
   15af0:	mov	fp, sp
   15af4:	bl	15ec4 <__mempcpy_chk@plt+0x4e88>
   15af8:	cmp	r0, #0
   15afc:	popne	{fp, pc}
   15b00:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15b04:	push	{fp, lr}
   15b08:	mov	fp, sp
   15b0c:	mov	r1, #1
   15b10:	bl	15ec4 <__mempcpy_chk@plt+0x4e88>
   15b14:	cmp	r0, #0
   15b18:	popne	{fp, pc}
   15b1c:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15b20:	push	{fp, lr}
   15b24:	mov	fp, sp
   15b28:	bl	15ec4 <__mempcpy_chk@plt+0x4e88>
   15b2c:	cmp	r0, #0
   15b30:	popne	{fp, pc}
   15b34:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15b38:	push	{r4, r5, r6, sl, fp, lr}
   15b3c:	add	fp, sp, #16
   15b40:	mov	r5, r0
   15b44:	mov	r0, r1
   15b48:	mov	r4, r1
   15b4c:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   15b50:	cmp	r0, #0
   15b54:	beq	15b70 <__mempcpy_chk@plt+0x4b34>
   15b58:	mov	r1, r5
   15b5c:	mov	r2, r4
   15b60:	mov	r6, r0
   15b64:	bl	10e38 <memcpy@plt>
   15b68:	mov	r0, r6
   15b6c:	pop	{r4, r5, r6, sl, fp, pc}
   15b70:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15b74:	push	{r4, r5, r6, sl, fp, lr}
   15b78:	add	fp, sp, #16
   15b7c:	mov	r5, r0
   15b80:	mov	r0, r1
   15b84:	mov	r4, r1
   15b88:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   15b8c:	cmp	r0, #0
   15b90:	beq	15bac <__mempcpy_chk@plt+0x4b70>
   15b94:	mov	r1, r5
   15b98:	mov	r2, r4
   15b9c:	mov	r6, r0
   15ba0:	bl	10e38 <memcpy@plt>
   15ba4:	mov	r0, r6
   15ba8:	pop	{r4, r5, r6, sl, fp, pc}
   15bac:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15bb0:	push	{r4, r5, r6, sl, fp, lr}
   15bb4:	add	fp, sp, #16
   15bb8:	mov	r5, r0
   15bbc:	add	r0, r1, #1
   15bc0:	mov	r4, r1
   15bc4:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   15bc8:	cmp	r0, #0
   15bcc:	beq	15bf4 <__mempcpy_chk@plt+0x4bb8>
   15bd0:	mov	r6, r0
   15bd4:	mov	r0, #0
   15bd8:	mov	r1, r5
   15bdc:	mov	r2, r4
   15be0:	strb	r0, [r6, r4]
   15be4:	mov	r0, r6
   15be8:	bl	10e38 <memcpy@plt>
   15bec:	mov	r0, r6
   15bf0:	pop	{r4, r5, r6, sl, fp, pc}
   15bf4:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15bf8:	push	{r4, r5, r6, sl, fp, lr}
   15bfc:	add	fp, sp, #16
   15c00:	mov	r4, r0
   15c04:	bl	10f58 <strlen@plt>
   15c08:	add	r5, r0, #1
   15c0c:	mov	r0, r5
   15c10:	bl	15f18 <__mempcpy_chk@plt+0x4edc>
   15c14:	cmp	r0, #0
   15c18:	beq	15c34 <__mempcpy_chk@plt+0x4bf8>
   15c1c:	mov	r1, r4
   15c20:	mov	r2, r5
   15c24:	mov	r6, r0
   15c28:	bl	10e38 <memcpy@plt>
   15c2c:	mov	r0, r6
   15c30:	pop	{r4, r5, r6, sl, fp, pc}
   15c34:	bl	15c38 <__mempcpy_chk@plt+0x4bfc>
   15c38:	push	{fp, lr}
   15c3c:	mov	fp, sp
   15c40:	movw	r0, #33012	; 0x80f4
   15c44:	movw	r1, #29409	; 0x72e1
   15c48:	mov	r2, #5
   15c4c:	movt	r0, #2
   15c50:	movt	r1, #1
   15c54:	ldr	r4, [r0]
   15c58:	mov	r0, #0
   15c5c:	bl	10e74 <dcgettext@plt>
   15c60:	movw	r2, #27811	; 0x6ca3
   15c64:	mov	r3, r0
   15c68:	mov	r0, r4
   15c6c:	mov	r1, #0
   15c70:	movt	r2, #1
   15c74:	bl	10ee0 <error@plt>
   15c78:	bl	11030 <abort@plt>
   15c7c:	sub	sp, sp, #12
   15c80:	push	{r4, r5, r6, sl, fp, lr}
   15c84:	add	fp, sp, #16
   15c88:	sub	sp, sp, #4
   15c8c:	movw	r5, #33092	; 0x8144
   15c90:	mov	r4, r0
   15c94:	add	r0, fp, #8
   15c98:	stm	r0, {r1, r2, r3}
   15c9c:	movt	r5, #2
   15ca0:	add	r3, fp, #8
   15ca4:	mov	r1, #1
   15ca8:	mov	r2, r4
   15cac:	ldr	r0, [r5]
   15cb0:	str	r3, [sp]
   15cb4:	bl	10f1c <__vfprintf_chk@plt>
   15cb8:	mov	r4, r0
   15cbc:	cmn	r0, #1
   15cc0:	bgt	15d0c <__mempcpy_chk@plt+0x4cd0>
   15cc4:	ldr	r0, [r5]
   15cc8:	bl	10e20 <ferror@plt>
   15ccc:	cmp	r0, #0
   15cd0:	bne	15d0c <__mempcpy_chk@plt+0x4cd0>
   15cd4:	movw	r0, #33012	; 0x80f4
   15cd8:	movt	r0, #2
   15cdc:	ldr	r5, [r0]
   15ce0:	bl	10f64 <__errno_location@plt>
   15ce4:	ldr	r6, [r0]
   15ce8:	movw	r1, #29426	; 0x72f2
   15cec:	mov	r0, #0
   15cf0:	mov	r2, #5
   15cf4:	movt	r1, #1
   15cf8:	bl	10e74 <dcgettext@plt>
   15cfc:	mov	r2, r0
   15d00:	mov	r0, r5
   15d04:	mov	r1, r6
   15d08:	bl	10ee0 <error@plt>
   15d0c:	mov	r0, r4
   15d10:	sub	sp, fp, #16
   15d14:	pop	{r4, r5, r6, sl, fp, lr}
   15d18:	add	sp, sp, #12
   15d1c:	bx	lr
   15d20:	push	{r4, r5, r6, sl, fp, lr}
   15d24:	add	fp, sp, #16
   15d28:	movw	r5, #33092	; 0x8144
   15d2c:	mov	r2, r0
   15d30:	mov	r3, r1
   15d34:	mov	r1, #1
   15d38:	movt	r5, #2
   15d3c:	ldr	r0, [r5]
   15d40:	bl	10f1c <__vfprintf_chk@plt>
   15d44:	mov	r4, r0
   15d48:	cmn	r0, #1
   15d4c:	bgt	15d60 <__mempcpy_chk@plt+0x4d24>
   15d50:	ldr	r0, [r5]
   15d54:	bl	10e20 <ferror@plt>
   15d58:	cmp	r0, #0
   15d5c:	beq	15d68 <__mempcpy_chk@plt+0x4d2c>
   15d60:	mov	r0, r4
   15d64:	pop	{r4, r5, r6, sl, fp, pc}
   15d68:	movw	r0, #33012	; 0x80f4
   15d6c:	movt	r0, #2
   15d70:	ldr	r5, [r0]
   15d74:	bl	10f64 <__errno_location@plt>
   15d78:	ldr	r6, [r0]
   15d7c:	movw	r1, #29426	; 0x72f2
   15d80:	mov	r0, #0
   15d84:	mov	r2, #5
   15d88:	movt	r1, #1
   15d8c:	bl	10e74 <dcgettext@plt>
   15d90:	mov	r2, r0
   15d94:	mov	r0, r5
   15d98:	mov	r1, r6
   15d9c:	bl	10ee0 <error@plt>
   15da0:	mov	r0, r4
   15da4:	pop	{r4, r5, r6, sl, fp, pc}
   15da8:	sub	sp, sp, #8
   15dac:	push	{r4, r5, r6, sl, fp, lr}
   15db0:	add	fp, sp, #16
   15db4:	sub	sp, sp, #8
   15db8:	mov	r4, r1
   15dbc:	str	r3, [fp, #12]
   15dc0:	str	r2, [fp, #8]
   15dc4:	add	r3, fp, #8
   15dc8:	mov	r1, #1
   15dcc:	mov	r5, r0
   15dd0:	mov	r2, r4
   15dd4:	str	r3, [sp, #4]
   15dd8:	bl	10f1c <__vfprintf_chk@plt>
   15ddc:	mov	r4, r0
   15de0:	cmn	r0, #1
   15de4:	bgt	15e30 <__mempcpy_chk@plt+0x4df4>
   15de8:	mov	r0, r5
   15dec:	bl	10e20 <ferror@plt>
   15df0:	cmp	r0, #0
   15df4:	bne	15e30 <__mempcpy_chk@plt+0x4df4>
   15df8:	movw	r0, #33012	; 0x80f4
   15dfc:	movt	r0, #2
   15e00:	ldr	r5, [r0]
   15e04:	bl	10f64 <__errno_location@plt>
   15e08:	ldr	r6, [r0]
   15e0c:	movw	r1, #29426	; 0x72f2
   15e10:	mov	r0, #0
   15e14:	mov	r2, #5
   15e18:	movt	r1, #1
   15e1c:	bl	10e74 <dcgettext@plt>
   15e20:	mov	r2, r0
   15e24:	mov	r0, r5
   15e28:	mov	r1, r6
   15e2c:	bl	10ee0 <error@plt>
   15e30:	mov	r0, r4
   15e34:	sub	sp, fp, #16
   15e38:	pop	{r4, r5, r6, sl, fp, lr}
   15e3c:	add	sp, sp, #8
   15e40:	bx	lr
   15e44:	push	{r4, r5, r6, sl, fp, lr}
   15e48:	add	fp, sp, #16
   15e4c:	mov	r3, r2
   15e50:	mov	r2, r1
   15e54:	mov	r1, #1
   15e58:	mov	r5, r0
   15e5c:	bl	10f1c <__vfprintf_chk@plt>
   15e60:	mov	r4, r0
   15e64:	cmn	r0, #1
   15e68:	bgt	15e7c <__mempcpy_chk@plt+0x4e40>
   15e6c:	mov	r0, r5
   15e70:	bl	10e20 <ferror@plt>
   15e74:	cmp	r0, #0
   15e78:	beq	15e84 <__mempcpy_chk@plt+0x4e48>
   15e7c:	mov	r0, r4
   15e80:	pop	{r4, r5, r6, sl, fp, pc}
   15e84:	movw	r0, #33012	; 0x80f4
   15e88:	movt	r0, #2
   15e8c:	ldr	r5, [r0]
   15e90:	bl	10f64 <__errno_location@plt>
   15e94:	ldr	r6, [r0]
   15e98:	movw	r1, #29426	; 0x72f2
   15e9c:	mov	r0, #0
   15ea0:	mov	r2, #5
   15ea4:	movt	r1, #1
   15ea8:	bl	10e74 <dcgettext@plt>
   15eac:	mov	r2, r0
   15eb0:	mov	r0, r5
   15eb4:	mov	r1, r6
   15eb8:	bl	10ee0 <error@plt>
   15ebc:	mov	r0, r4
   15ec0:	pop	{r4, r5, r6, sl, fp, pc}
   15ec4:	clz	r2, r1
   15ec8:	clz	r3, r0
   15ecc:	lsr	r2, r2, #5
   15ed0:	lsr	r3, r3, #5
   15ed4:	orrs	r2, r3, r2
   15ed8:	movwne	r1, #1
   15edc:	movwne	r0, #1
   15ee0:	cmp	r1, #0
   15ee4:	beq	15f14 <__mempcpy_chk@plt+0x4ed8>
   15ee8:	mvn	r2, #-2147483648	; 0x80000000
   15eec:	udiv	r2, r2, r1
   15ef0:	cmp	r2, r0
   15ef4:	bcs	15f14 <__mempcpy_chk@plt+0x4ed8>
   15ef8:	push	{fp, lr}
   15efc:	mov	fp, sp
   15f00:	bl	10f64 <__errno_location@plt>
   15f04:	mov	r1, #12
   15f08:	str	r1, [r0]
   15f0c:	mov	r0, #0
   15f10:	pop	{fp, pc}
   15f14:	b	10dcc <calloc@plt>
   15f18:	cmp	r0, #0
   15f1c:	movweq	r0, #1
   15f20:	cmn	r0, #1
   15f24:	ble	15f2c <__mempcpy_chk@plt+0x4ef0>
   15f28:	b	10ef8 <malloc@plt>
   15f2c:	push	{fp, lr}
   15f30:	mov	fp, sp
   15f34:	bl	10f64 <__errno_location@plt>
   15f38:	mov	r1, #12
   15f3c:	str	r1, [r0]
   15f40:	mov	r0, #0
   15f44:	pop	{fp, pc}
   15f48:	push	{fp, lr}
   15f4c:	mov	fp, sp
   15f50:	cmp	r0, #0
   15f54:	beq	15f70 <__mempcpy_chk@plt+0x4f34>
   15f58:	cmp	r1, #0
   15f5c:	beq	15f7c <__mempcpy_chk@plt+0x4f40>
   15f60:	cmn	r1, #1
   15f64:	ble	15f88 <__mempcpy_chk@plt+0x4f4c>
   15f68:	pop	{fp, lr}
   15f6c:	b	10e80 <realloc@plt>
   15f70:	mov	r0, r1
   15f74:	pop	{fp, lr}
   15f78:	b	15f18 <__mempcpy_chk@plt+0x4edc>
   15f7c:	bl	12c68 <__mempcpy_chk@plt+0x1c2c>
   15f80:	mov	r0, #0
   15f84:	pop	{fp, pc}
   15f88:	bl	10f64 <__errno_location@plt>
   15f8c:	mov	r1, #12
   15f90:	str	r1, [r0]
   15f94:	mov	r0, #0
   15f98:	pop	{fp, pc}
   15f9c:	push	{r4, r5, r6, sl, fp, lr}
   15fa0:	add	fp, sp, #16
   15fa4:	vpush	{d8}
   15fa8:	movw	r6, #33436	; 0x829c
   15fac:	mov	r5, r0
   15fb0:	mov	r4, r1
   15fb4:	movt	r6, #2
   15fb8:	ldr	r0, [r6]
   15fbc:	cmp	r0, #0
   15fc0:	beq	1601c <__mempcpy_chk@plt+0x4fe0>
   15fc4:	ldr	r0, [r6]
   15fc8:	cmp	r0, #0
   15fcc:	beq	16040 <__mempcpy_chk@plt+0x5004>
   15fd0:	bl	10de4 <uselocale@plt>
   15fd4:	cmp	r0, #0
   15fd8:	beq	16040 <__mempcpy_chk@plt+0x5004>
   15fdc:	mov	r6, r0
   15fe0:	mov	r0, r5
   15fe4:	mov	r1, r4
   15fe8:	bl	10e5c <strtold@plt>
   15fec:	vorr	d8, d0, d0
   15ff0:	bl	10f64 <__errno_location@plt>
   15ff4:	ldr	r5, [r0]
   15ff8:	mov	r4, r0
   15ffc:	mov	r0, r6
   16000:	bl	10de4 <uselocale@plt>
   16004:	cmp	r0, #0
   16008:	beq	16058 <__mempcpy_chk@plt+0x501c>
   1600c:	str	r5, [r4]
   16010:	vorr	d0, d8, d8
   16014:	vpop	{d8}
   16018:	pop	{r4, r5, r6, sl, fp, pc}
   1601c:	movw	r1, #29458	; 0x7312
   16020:	movw	r0, #8127	; 0x1fbf
   16024:	mov	r2, #0
   16028:	movt	r1, #1
   1602c:	bl	11000 <newlocale@plt>
   16030:	str	r0, [r6]
   16034:	ldr	r0, [r6]
   16038:	cmp	r0, #0
   1603c:	bne	15fd0 <__mempcpy_chk@plt+0x4f94>
   16040:	cmp	r4, #0
   16044:	vmov.i32	d8, #0	; 0x00000000
   16048:	strne	r5, [r4]
   1604c:	vorr	d0, d8, d8
   16050:	vpop	{d8}
   16054:	pop	{r4, r5, r6, sl, fp, pc}
   16058:	bl	11030 <abort@plt>
   1605c:	push	{r4, r5, r6, sl, fp, lr}
   16060:	add	fp, sp, #16
   16064:	mov	r4, r0
   16068:	bl	10ec8 <__fpending@plt>
   1606c:	ldr	r6, [r4]
   16070:	mov	r5, r0
   16074:	mov	r0, r4
   16078:	bl	160e0 <__mempcpy_chk@plt+0x50a4>
   1607c:	tst	r6, #32
   16080:	bne	160b8 <__mempcpy_chk@plt+0x507c>
   16084:	cmp	r0, #0
   16088:	mov	r4, r0
   1608c:	mvnne	r4, #0
   16090:	cmp	r5, #0
   16094:	bne	160c4 <__mempcpy_chk@plt+0x5088>
   16098:	cmp	r0, #0
   1609c:	beq	160c4 <__mempcpy_chk@plt+0x5088>
   160a0:	bl	10f64 <__errno_location@plt>
   160a4:	ldr	r0, [r0]
   160a8:	subs	r4, r0, #9
   160ac:	mvnne	r4, #0
   160b0:	mov	r0, r4
   160b4:	pop	{r4, r5, r6, sl, fp, pc}
   160b8:	mvn	r4, #0
   160bc:	cmp	r0, #0
   160c0:	beq	160cc <__mempcpy_chk@plt+0x5090>
   160c4:	mov	r0, r4
   160c8:	pop	{r4, r5, r6, sl, fp, pc}
   160cc:	bl	10f64 <__errno_location@plt>
   160d0:	mov	r1, #0
   160d4:	str	r1, [r0]
   160d8:	mov	r0, r4
   160dc:	pop	{r4, r5, r6, sl, fp, pc}
   160e0:	push	{r4, r5, r6, sl, fp, lr}
   160e4:	add	fp, sp, #16
   160e8:	sub	sp, sp, #8
   160ec:	mov	r4, r0
   160f0:	bl	10f94 <fileno@plt>
   160f4:	cmn	r0, #1
   160f8:	ble	1616c <__mempcpy_chk@plt+0x5130>
   160fc:	mov	r0, r4
   16100:	bl	10f28 <__freading@plt>
   16104:	cmp	r0, #0
   16108:	beq	16134 <__mempcpy_chk@plt+0x50f8>
   1610c:	mov	r0, r4
   16110:	bl	10f94 <fileno@plt>
   16114:	mov	r1, #1
   16118:	mov	r2, #0
   1611c:	mov	r3, #0
   16120:	str	r1, [sp]
   16124:	bl	10eb0 <lseek64@plt>
   16128:	and	r0, r0, r1
   1612c:	cmn	r0, #1
   16130:	beq	1616c <__mempcpy_chk@plt+0x5130>
   16134:	mov	r0, r4
   16138:	bl	1617c <__mempcpy_chk@plt+0x5140>
   1613c:	cmp	r0, #0
   16140:	beq	1616c <__mempcpy_chk@plt+0x5130>
   16144:	bl	10f64 <__errno_location@plt>
   16148:	ldr	r6, [r0]
   1614c:	mov	r5, r0
   16150:	mov	r0, r4
   16154:	bl	10fb8 <fclose@plt>
   16158:	cmp	r6, #0
   1615c:	strne	r6, [r5]
   16160:	mvnne	r0, #0
   16164:	sub	sp, fp, #16
   16168:	pop	{r4, r5, r6, sl, fp, pc}
   1616c:	mov	r0, r4
   16170:	sub	sp, fp, #16
   16174:	pop	{r4, r5, r6, sl, fp, lr}
   16178:	b	10fb8 <fclose@plt>
   1617c:	push	{r4, sl, fp, lr}
   16180:	add	fp, sp, #8
   16184:	sub	sp, sp, #8
   16188:	mov	r4, r0
   1618c:	cmp	r0, #0
   16190:	beq	161ac <__mempcpy_chk@plt+0x5170>
   16194:	mov	r0, r4
   16198:	bl	10f28 <__freading@plt>
   1619c:	cmp	r0, #0
   161a0:	ldrbne	r0, [r4, #1]
   161a4:	tstne	r0, #1
   161a8:	bne	161bc <__mempcpy_chk@plt+0x5180>
   161ac:	mov	r0, r4
   161b0:	sub	sp, fp, #8
   161b4:	pop	{r4, sl, fp, lr}
   161b8:	b	10e08 <fflush@plt>
   161bc:	mov	r0, #1
   161c0:	mov	r2, #0
   161c4:	mov	r3, #0
   161c8:	str	r0, [sp]
   161cc:	mov	r0, r4
   161d0:	bl	161e4 <__mempcpy_chk@plt+0x51a8>
   161d4:	mov	r0, r4
   161d8:	sub	sp, fp, #8
   161dc:	pop	{r4, sl, fp, lr}
   161e0:	b	10e08 <fflush@plt>
   161e4:	push	{r4, r5, r6, r7, fp, lr}
   161e8:	add	fp, sp, #16
   161ec:	sub	sp, sp, #8
   161f0:	mov	r4, r0
   161f4:	ldr	r0, [r0, #4]
   161f8:	mov	r5, r3
   161fc:	mov	r6, r2
   16200:	ldr	r1, [r4, #8]
   16204:	cmp	r1, r0
   16208:	bne	16224 <__mempcpy_chk@plt+0x51e8>
   1620c:	ldrd	r0, [r4, #16]
   16210:	cmp	r1, r0
   16214:	bne	16224 <__mempcpy_chk@plt+0x51e8>
   16218:	ldr	r0, [r4, #36]	; 0x24
   1621c:	cmp	r0, #0
   16220:	beq	1623c <__mempcpy_chk@plt+0x5200>
   16224:	mov	r0, r4
   16228:	mov	r2, r6
   1622c:	mov	r3, r5
   16230:	sub	sp, fp, #16
   16234:	pop	{r4, r5, r6, r7, fp, lr}
   16238:	b	10fc4 <fseeko64@plt>
   1623c:	ldr	r7, [fp, #8]
   16240:	mov	r0, r4
   16244:	bl	10f94 <fileno@plt>
   16248:	mov	r2, r6
   1624c:	mov	r3, r5
   16250:	str	r7, [sp]
   16254:	bl	10eb0 <lseek64@plt>
   16258:	and	r2, r0, r1
   1625c:	cmn	r2, #1
   16260:	mvneq	r0, #0
   16264:	subeq	sp, fp, #16
   16268:	popeq	{r4, r5, r6, r7, fp, pc}
   1626c:	strd	r0, [r4, #80]	; 0x50
   16270:	ldr	r0, [r4]
   16274:	bic	r0, r0, #16
   16278:	str	r0, [r4]
   1627c:	mov	r0, #0
   16280:	sub	sp, fp, #16
   16284:	pop	{r4, r5, r6, r7, fp, pc}
   16288:	push	{fp, lr}
   1628c:	mov	fp, sp
   16290:	mov	r0, #14
   16294:	bl	10ff4 <nl_langinfo@plt>
   16298:	movw	r1, #25996	; 0x658c
   1629c:	cmp	r0, #0
   162a0:	movt	r1, #1
   162a4:	movne	r1, r0
   162a8:	movw	r0, #28462	; 0x6f2e
   162ac:	ldrb	r2, [r1]
   162b0:	movt	r0, #1
   162b4:	cmp	r2, #0
   162b8:	movne	r0, r1
   162bc:	pop	{fp, pc}
   162c0:	push	{r4, r5, r6, r7, fp, lr}
   162c4:	add	fp, sp, #16
   162c8:	sub	sp, sp, #8
   162cc:	add	r5, sp, #4
   162d0:	cmp	r0, #0
   162d4:	mov	r7, r2
   162d8:	mov	r4, r1
   162dc:	movne	r5, r0
   162e0:	mov	r0, r5
   162e4:	bl	10ed4 <mbrtowc@plt>
   162e8:	mov	r6, r0
   162ec:	cmp	r7, #0
   162f0:	beq	16314 <__mempcpy_chk@plt+0x52d8>
   162f4:	cmn	r6, #2
   162f8:	bcc	16314 <__mempcpy_chk@plt+0x52d8>
   162fc:	mov	r0, #0
   16300:	bl	1635c <__mempcpy_chk@plt+0x5320>
   16304:	cmp	r0, #0
   16308:	ldrbeq	r0, [r4]
   1630c:	moveq	r6, #1
   16310:	streq	r0, [r5]
   16314:	mov	r0, r6
   16318:	sub	sp, fp, #16
   1631c:	pop	{r4, r5, r6, r7, fp, pc}
   16320:	cmp	r2, #0
   16324:	beq	16354 <__mempcpy_chk@plt+0x5318>
   16328:	mvn	r3, #0
   1632c:	udiv	r3, r3, r2
   16330:	cmp	r3, r1
   16334:	bcs	16354 <__mempcpy_chk@plt+0x5318>
   16338:	push	{fp, lr}
   1633c:	mov	fp, sp
   16340:	bl	10f64 <__errno_location@plt>
   16344:	mov	r1, #12
   16348:	str	r1, [r0]
   1634c:	mov	r0, #0
   16350:	pop	{fp, pc}
   16354:	mul	r1, r2, r1
   16358:	b	15f48 <__mempcpy_chk@plt+0x4f0c>
   1635c:	push	{r4, sl, fp, lr}
   16360:	add	fp, sp, #8
   16364:	sub	sp, sp, #264	; 0x108
   16368:	add	r1, sp, #7
   1636c:	movw	r2, #257	; 0x101
   16370:	bl	163c0 <__mempcpy_chk@plt+0x5384>
   16374:	mov	r4, #0
   16378:	cmp	r0, #0
   1637c:	bne	163b4 <__mempcpy_chk@plt+0x5378>
   16380:	movw	r1, #29458	; 0x7312
   16384:	add	r0, sp, #7
   16388:	movt	r1, #1
   1638c:	bl	10dfc <strcmp@plt>
   16390:	cmp	r0, #0
   16394:	beq	163b4 <__mempcpy_chk@plt+0x5378>
   16398:	movw	r1, #29460	; 0x7314
   1639c:	add	r0, sp, #7
   163a0:	movt	r1, #1
   163a4:	bl	10dfc <strcmp@plt>
   163a8:	mov	r4, r0
   163ac:	cmp	r0, #0
   163b0:	movwne	r4, #1
   163b4:	mov	r0, r4
   163b8:	sub	sp, fp, #8
   163bc:	pop	{r4, sl, fp, pc}
   163c0:	push	{r4, r5, r6, r7, fp, lr}
   163c4:	add	fp, sp, #16
   163c8:	mov	r4, r1
   163cc:	mov	r1, #0
   163d0:	mov	r6, r2
   163d4:	bl	10fdc <setlocale@plt>
   163d8:	cmp	r0, #0
   163dc:	beq	1640c <__mempcpy_chk@plt+0x53d0>
   163e0:	mov	r7, r0
   163e4:	bl	10f58 <strlen@plt>
   163e8:	cmp	r0, r6
   163ec:	bcs	1642c <__mempcpy_chk@plt+0x53f0>
   163f0:	add	r2, r0, #1
   163f4:	mov	r0, r4
   163f8:	mov	r1, r7
   163fc:	bl	10e38 <memcpy@plt>
   16400:	mov	r5, #0
   16404:	mov	r0, r5
   16408:	pop	{r4, r5, r6, r7, fp, pc}
   1640c:	cmp	r6, #0
   16410:	mov	r5, #22
   16414:	movne	r0, #0
   16418:	strbne	r0, [r4]
   1641c:	movne	r0, r5
   16420:	popne	{r4, r5, r6, r7, fp, pc}
   16424:	mov	r0, r5
   16428:	pop	{r4, r5, r6, r7, fp, pc}
   1642c:	mov	r5, #34	; 0x22
   16430:	cmp	r6, #0
   16434:	beq	16454 <__mempcpy_chk@plt+0x5418>
   16438:	sub	r6, r6, #1
   1643c:	mov	r0, r4
   16440:	mov	r1, r7
   16444:	mov	r2, r6
   16448:	bl	10e38 <memcpy@plt>
   1644c:	mov	r0, #0
   16450:	strb	r0, [r4, r6]
   16454:	mov	r0, r5
   16458:	pop	{r4, r5, r6, r7, fp, pc}
   1645c:	mov	r1, #0
   16460:	b	10fdc <setlocale@plt>
   16464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16468:	mov	r7, r0
   1646c:	ldr	r6, [pc, #72]	; 164bc <__mempcpy_chk@plt+0x5480>
   16470:	ldr	r5, [pc, #72]	; 164c0 <__mempcpy_chk@plt+0x5484>
   16474:	add	r6, pc, r6
   16478:	add	r5, pc, r5
   1647c:	sub	r6, r6, r5
   16480:	mov	r8, r1
   16484:	mov	r9, r2
   16488:	bl	10dac <calloc@plt-0x20>
   1648c:	asrs	r6, r6, #2
   16490:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16494:	mov	r4, #0
   16498:	add	r4, r4, #1
   1649c:	ldr	r3, [r5], #4
   164a0:	mov	r2, r9
   164a4:	mov	r1, r8
   164a8:	mov	r0, r7
   164ac:	blx	r3
   164b0:	cmp	r6, r4
   164b4:	bne	16498 <__mempcpy_chk@plt+0x545c>
   164b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   164bc:	muleq	r1, r0, sl
   164c0:	andeq	r1, r1, r8, lsl #21
   164c4:	bx	lr
   164c8:	ldr	r3, [pc, #12]	; 164dc <__mempcpy_chk@plt+0x54a0>
   164cc:	mov	r1, #0
   164d0:	add	r3, pc, r3
   164d4:	ldr	r2, [r3]
   164d8:	b	10f70 <__cxa_atexit@plt>
   164dc:	andeq	r1, r1, r4, lsl ip

Disassembly of section .fini:

000164e0 <.fini>:
   164e0:	push	{r3, lr}
   164e4:	pop	{r3, pc}
