
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

000111c8 <.init>:
   111c8:	push	{r3, lr}
   111cc:	bl	1156c <putchar_unlocked@plt+0x48>
   111d0:	pop	{r3, pc}

Disassembly of section .plt:

000111d4 <calloc@plt-0x14>:
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	ldr	lr, [pc, #4]	; 111e4 <calloc@plt-0x4>
   111dc:	add	lr, pc, lr
   111e0:	ldr	pc, [lr, #8]!
   111e4:	andeq	r6, r1, ip, lsl lr

000111e8 <calloc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3612]!	; 0xe1c

000111f4 <fputs_unlocked@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3604]!	; 0xe14

00011200 <raise@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3596]!	; 0xe0c

0001120c <gmtime_r@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3588]!	; 0xe04

00011218 <strcmp@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3580]!	; 0xdfc

00011224 <mktime@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011230 <fflush@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3564]!	; 0xdec

0001123c <utmpxname@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3556]!	; 0xde4

00011248 <free@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3548]!	; 0xddc

00011254 <_exit@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011260 <memcpy@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3532]!	; 0xdcc

0001126c <mbsinit@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3524]!	; 0xdc4

00011278 <time@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3516]!	; 0xdbc

00011284 <memcmp@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011290 <dcgettext@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3500]!	; 0xdac

0001129c <setutxent@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3492]!	; 0xda4

000112a8 <realloc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112b4 <localtime_r@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3476]!	; 0xd94

000112c0 <textdomain@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112cc <iswprint@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3460]!	; 0xd84

000112d8 <tzset@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3452]!	; 0xd7c

000112e4 <fwrite@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3444]!	; 0xd74

000112f0 <lseek64@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3436]!	; 0xd6c

000112fc <__ctype_get_mb_cur_max@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3428]!	; 0xd64

00011308 <__fpending@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3420]!	; 0xd5c

00011314 <ferror_unlocked@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3412]!	; 0xd54

00011320 <mbrtowc@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3404]!	; 0xd4c

0001132c <error@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3396]!	; 0xd44

00011338 <getenv@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3388]!	; 0xd3c

00011344 <malloc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3380]!	; 0xd34

00011350 <__libc_start_main@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3372]!	; 0xd2c

0001135c <strftime@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3364]!	; 0xd24

00011368 <__freading@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3356]!	; 0xd1c

00011374 <localtime@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3348]!	; 0xd14

00011380 <__ctype_tolower_loc@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3340]!	; 0xd0c

0001138c <__ctype_toupper_loc@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3332]!	; 0xd04

00011398 <__gmon_start__@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113a4 <getopt_long@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3316]!	; 0xcf4

000113b0 <kill@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3308]!	; 0xcec

000113bc <__ctype_b_loc@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3300]!	; 0xce4

000113c8 <exit@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3292]!	; 0xcdc

000113d4 <strlen@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3284]!	; 0xcd4

000113e0 <setenv@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3276]!	; 0xccc

000113ec <__errno_location@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f8 <__cxa_atexit@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3260]!	; 0xcbc

00011404 <memset@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011410 <strncpy@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3244]!	; 0xcac

0001141c <__printf_chk@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3236]!	; 0xca4

00011428 <fileno@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3228]!	; 0xc9c

00011434 <__fprintf_chk@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3220]!	; 0xc94

00011440 <fclose@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3212]!	; 0xc8c

0001144c <fseeko64@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3204]!	; 0xc84

00011458 <getloadavg@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3196]!	; 0xc7c

00011464 <strtod_l@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3188]!	; 0xc74

00011470 <endutxent@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3180]!	; 0xc6c

0001147c <setlocale@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3172]!	; 0xc64

00011488 <strrchr@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3164]!	; 0xc5c

00011494 <nl_langinfo@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3156]!	; 0xc54

000114a0 <fputc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3148]!	; 0xc4c

000114ac <newlocale@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3140]!	; 0xc44

000114b8 <timegm@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #90112	; 0x16000
   114c0:	ldr	pc, [ip, #3132]!	; 0xc3c

000114c4 <fopen64@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #90112	; 0x16000
   114cc:	ldr	pc, [ip, #3124]!	; 0xc34

000114d0 <fgets_unlocked@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #90112	; 0x16000
   114d8:	ldr	pc, [ip, #3116]!	; 0xc2c

000114dc <bindtextdomain@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #90112	; 0x16000
   114e4:	ldr	pc, [ip, #3108]!	; 0xc24

000114e8 <unsetenv@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #90112	; 0x16000
   114f0:	ldr	pc, [ip, #3100]!	; 0xc1c

000114f4 <strncmp@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #90112	; 0x16000
   114fc:	ldr	pc, [ip, #3092]!	; 0xc14

00011500 <abort@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #90112	; 0x16000
   11508:	ldr	pc, [ip, #3084]!	; 0xc0c

0001150c <getutxent@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #90112	; 0x16000
   11514:	ldr	pc, [ip, #3076]!	; 0xc04

00011518 <dcngettext@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #90112	; 0x16000
   11520:	ldr	pc, [ip, #3068]!	; 0xbfc

00011524 <putchar_unlocked@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #90112	; 0x16000
   1152c:	ldr	pc, [ip, #3060]!	; 0xbf4

Disassembly of section .text:

00011530 <.text>:
   11530:	mov	fp, #0
   11534:	mov	lr, #0
   11538:	pop	{r1}		; (ldr r1, [sp], #4)
   1153c:	mov	r2, sp
   11540:	push	{r2}		; (str r2, [sp, #-4]!)
   11544:	push	{r0}		; (str r0, [sp, #-4]!)
   11548:	ldr	ip, [pc, #16]	; 11560 <putchar_unlocked@plt+0x3c>
   1154c:	push	{ip}		; (str ip, [sp, #-4]!)
   11550:	ldr	r0, [pc, #12]	; 11564 <putchar_unlocked@plt+0x40>
   11554:	ldr	r3, [pc, #12]	; 11568 <putchar_unlocked@plt+0x44>
   11558:	bl	11350 <__libc_start_main@plt>
   1155c:	bl	11500 <abort@plt>
   11560:	andeq	r6, r1, r8, lsr #30
   11564:	andeq	r1, r1, r4, ror #17
   11568:	andeq	r6, r1, r8, asr #29
   1156c:	ldr	r3, [pc, #20]	; 11588 <putchar_unlocked@plt+0x64>
   11570:	ldr	r2, [pc, #20]	; 1158c <putchar_unlocked@plt+0x68>
   11574:	add	r3, pc, r3
   11578:	ldr	r2, [r3, r2]
   1157c:	cmp	r2, #0
   11580:	bxeq	lr
   11584:	b	11398 <__gmon_start__@plt>
   11588:	andeq	r6, r1, r4, lsl #21
   1158c:	andeq	r0, r0, r4, lsr #2
   11590:	ldr	r0, [pc, #24]	; 115b0 <putchar_unlocked@plt+0x8c>
   11594:	ldr	r3, [pc, #24]	; 115b4 <putchar_unlocked@plt+0x90>
   11598:	cmp	r3, r0
   1159c:	bxeq	lr
   115a0:	ldr	r3, [pc, #16]	; 115b8 <putchar_unlocked@plt+0x94>
   115a4:	cmp	r3, #0
   115a8:	bxeq	lr
   115ac:	bx	r3
   115b0:	andeq	r8, r2, r8, ror r1
   115b4:	andeq	r8, r2, r8, ror r1
   115b8:	andeq	r0, r0, r0
   115bc:	ldr	r0, [pc, #36]	; 115e8 <putchar_unlocked@plt+0xc4>
   115c0:	ldr	r1, [pc, #36]	; 115ec <putchar_unlocked@plt+0xc8>
   115c4:	sub	r1, r1, r0
   115c8:	asr	r1, r1, #2
   115cc:	add	r1, r1, r1, lsr #31
   115d0:	asrs	r1, r1, #1
   115d4:	bxeq	lr
   115d8:	ldr	r3, [pc, #16]	; 115f0 <putchar_unlocked@plt+0xcc>
   115dc:	cmp	r3, #0
   115e0:	bxeq	lr
   115e4:	bx	r3
   115e8:	andeq	r8, r2, r8, ror r1
   115ec:	andeq	r8, r2, r8, ror r1
   115f0:	andeq	r0, r0, r0
   115f4:	push	{r4, lr}
   115f8:	ldr	r4, [pc, #24]	; 11618 <putchar_unlocked@plt+0xf4>
   115fc:	ldrb	r3, [r4]
   11600:	cmp	r3, #0
   11604:	popne	{r4, pc}
   11608:	bl	11590 <putchar_unlocked@plt+0x6c>
   1160c:	mov	r3, #1
   11610:	strb	r3, [r4]
   11614:	pop	{r4, pc}
   11618:	muleq	r2, r4, r1
   1161c:	b	115bc <putchar_unlocked@plt+0x98>
   11620:	push	{fp, lr}
   11624:	mov	fp, sp
   11628:	mov	r4, r0
   1162c:	cmp	r0, #0
   11630:	bne	1171c <putchar_unlocked@plt+0x1f8>
   11634:	movw	r1, #28539	; 0x6f7b
   11638:	movt	r1, #1
   1163c:	mov	r0, #0
   11640:	mov	r2, #5
   11644:	bl	11290 <dcgettext@plt>
   11648:	mov	r1, r0
   1164c:	movw	r0, #33188	; 0x81a4
   11650:	movt	r0, #2
   11654:	ldr	r2, [r0]
   11658:	mov	r0, #1
   1165c:	bl	1141c <__printf_chk@plt>
   11660:	movw	r1, #28569	; 0x6f99
   11664:	movt	r1, #1
   11668:	mov	r0, #0
   1166c:	mov	r2, #5
   11670:	bl	11290 <dcgettext@plt>
   11674:	mov	r1, r0
   11678:	mov	r0, #1
   1167c:	bl	1141c <__printf_chk@plt>
   11680:	movw	r1, #28754	; 0x7052
   11684:	movt	r1, #1
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	bl	11290 <dcgettext@plt>
   11694:	mov	r1, r0
   11698:	mov	r0, #1
   1169c:	bl	1141c <__printf_chk@plt>
   116a0:	movw	r1, #28838	; 0x70a6
   116a4:	movt	r1, #1
   116a8:	mov	r0, #0
   116ac:	mov	r2, #5
   116b0:	bl	11290 <dcgettext@plt>
   116b4:	mov	r1, r0
   116b8:	movw	r2, #28897	; 0x70e1
   116bc:	movt	r2, #1
   116c0:	movw	r3, #28911	; 0x70ef
   116c4:	movt	r3, #1
   116c8:	mov	r0, #1
   116cc:	bl	1141c <__printf_chk@plt>
   116d0:	movw	r1, #28925	; 0x70fd
   116d4:	movt	r1, #1
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	bl	11290 <dcgettext@plt>
   116e4:	movw	r5, #33164	; 0x818c
   116e8:	movt	r5, #2
   116ec:	ldr	r1, [r5]
   116f0:	bl	111f4 <fputs_unlocked@plt>
   116f4:	movw	r1, #28970	; 0x712a
   116f8:	movt	r1, #1
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	bl	11290 <dcgettext@plt>
   11708:	ldr	r1, [r5]
   1170c:	bl	111f4 <fputs_unlocked@plt>
   11710:	bl	11760 <putchar_unlocked@plt+0x23c>
   11714:	mov	r0, r4
   11718:	bl	113c8 <exit@plt>
   1171c:	movw	r0, #33160	; 0x8188
   11720:	movt	r0, #2
   11724:	ldr	r5, [r0]
   11728:	movw	r1, #28500	; 0x6f54
   1172c:	movt	r1, #1
   11730:	mov	r0, #0
   11734:	mov	r2, #5
   11738:	bl	11290 <dcgettext@plt>
   1173c:	mov	r2, r0
   11740:	movw	r0, #33188	; 0x81a4
   11744:	movt	r0, #2
   11748:	ldr	r3, [r0]
   1174c:	mov	r0, r5
   11750:	mov	r1, #1
   11754:	bl	11434 <__fprintf_chk@plt>
   11758:	mov	r0, r4
   1175c:	bl	113c8 <exit@plt>
   11760:	push	{r4, r5, fp, lr}
   11764:	add	fp, sp, #8
   11768:	sub	sp, sp, #56	; 0x38
   1176c:	movw	r0, #29632	; 0x73c0
   11770:	movt	r0, #1
   11774:	add	r1, r0, #32
   11778:	mov	r5, sp
   1177c:	mov	r2, #48	; 0x30
   11780:	vld1.64	{d16-d17}, [r1]
   11784:	add	r1, r5, #32
   11788:	add	r3, r0, #16
   1178c:	vld1.64	{d18-d19}, [r0], r2
   11790:	vld1.64	{d20-d21}, [r3]
   11794:	vldr	d22, [r0]
   11798:	vst1.64	{d16-d17}, [r1]
   1179c:	add	r0, r5, #16
   117a0:	vst1.64	{d20-d21}, [r0]
   117a4:	mov	r0, r5
   117a8:	vst1.64	{d18-d19}, [r0], r2
   117ac:	vstr	d22, [r0]
   117b0:	ldr	r1, [sp]
   117b4:	cmp	r1, #0
   117b8:	beq	117e0 <putchar_unlocked@plt+0x2bc>
   117bc:	mov	r5, sp
   117c0:	movw	r4, #29441	; 0x7301
   117c4:	movt	r4, #1
   117c8:	mov	r0, r4
   117cc:	bl	11218 <strcmp@plt>
   117d0:	cmp	r0, #0
   117d4:	ldrne	r1, [r5, #8]!
   117d8:	cmpne	r1, #0
   117dc:	bne	117c8 <putchar_unlocked@plt+0x2a4>
   117e0:	ldr	r4, [r5, #4]
   117e4:	movw	r1, #29219	; 0x7223
   117e8:	movt	r1, #1
   117ec:	mov	r0, #0
   117f0:	mov	r2, #5
   117f4:	bl	11290 <dcgettext@plt>
   117f8:	mov	r1, r0
   117fc:	movw	r2, #29048	; 0x7178
   11800:	movt	r2, #1
   11804:	movw	r3, #29242	; 0x723a
   11808:	movt	r3, #1
   1180c:	mov	r0, #1
   11810:	bl	1141c <__printf_chk@plt>
   11814:	movw	r5, #29441	; 0x7301
   11818:	movt	r5, #1
   1181c:	cmp	r4, #0
   11820:	moveq	r4, r5
   11824:	mov	r0, #5
   11828:	mov	r1, #0
   1182c:	bl	1147c <setlocale@plt>
   11830:	cmp	r0, #0
   11834:	beq	11874 <putchar_unlocked@plt+0x350>
   11838:	movw	r1, #29282	; 0x7262
   1183c:	movt	r1, #1
   11840:	mov	r2, #3
   11844:	bl	114f4 <strncmp@plt>
   11848:	cmp	r0, #0
   1184c:	beq	11874 <putchar_unlocked@plt+0x350>
   11850:	movw	r1, #29286	; 0x7266
   11854:	movt	r1, #1
   11858:	mov	r0, #0
   1185c:	mov	r2, #5
   11860:	bl	11290 <dcgettext@plt>
   11864:	movw	r1, #33164	; 0x818c
   11868:	movt	r1, #2
   1186c:	ldr	r1, [r1]
   11870:	bl	111f4 <fputs_unlocked@plt>
   11874:	movw	r1, #29357	; 0x72ad
   11878:	movt	r1, #1
   1187c:	mov	r0, #0
   11880:	mov	r2, #5
   11884:	bl	11290 <dcgettext@plt>
   11888:	mov	r1, r0
   1188c:	movw	r2, #29242	; 0x723a
   11890:	movt	r2, #1
   11894:	mov	r0, #1
   11898:	mov	r3, r5
   1189c:	bl	1141c <__printf_chk@plt>
   118a0:	movw	r1, #29384	; 0x72c8
   118a4:	movt	r1, #1
   118a8:	mov	r0, #0
   118ac:	mov	r2, #5
   118b0:	bl	11290 <dcgettext@plt>
   118b4:	mov	r1, r0
   118b8:	movw	r0, #29152	; 0x71e0
   118bc:	movt	r0, #1
   118c0:	movw	r3, #28896	; 0x70e0
   118c4:	movt	r3, #1
   118c8:	cmp	r4, r5
   118cc:	moveq	r3, r0
   118d0:	mov	r0, #1
   118d4:	mov	r2, r4
   118d8:	bl	1141c <__printf_chk@plt>
   118dc:	sub	sp, fp, #8
   118e0:	pop	{r4, r5, fp, pc}
   118e4:	push	{r4, r5, r6, sl, fp, lr}
   118e8:	add	fp, sp, #16
   118ec:	sub	sp, sp, #32
   118f0:	mov	r4, r1
   118f4:	mov	r5, r0
   118f8:	ldr	r0, [r1]
   118fc:	bl	13b18 <putchar_unlocked@plt+0x25f4>
   11900:	movw	r1, #28896	; 0x70e0
   11904:	movt	r1, #1
   11908:	mov	r0, #6
   1190c:	bl	1147c <setlocale@plt>
   11910:	movw	r6, #29052	; 0x717c
   11914:	movt	r6, #1
   11918:	movw	r1, #29024	; 0x7160
   1191c:	movt	r1, #1
   11920:	mov	r0, r6
   11924:	bl	114dc <bindtextdomain@plt>
   11928:	mov	r0, r6
   1192c:	bl	112c0 <textdomain@plt>
   11930:	movw	r0, #7964	; 0x1f1c
   11934:	movt	r0, #1
   11938:	bl	16f2c <putchar_unlocked@plt+0x5a08>
   1193c:	movw	r0, #33072	; 0x8130
   11940:	movt	r0, #2
   11944:	ldr	r0, [r0]
   11948:	mov	ip, #0
   1194c:	movw	lr, #29095	; 0x71a7
   11950:	movt	lr, #1
   11954:	movw	r3, #29079	; 0x7197
   11958:	movt	r3, #1
   1195c:	movw	r6, #29062	; 0x7186
   11960:	movt	r6, #1
   11964:	movw	r1, #5664	; 0x1620
   11968:	movt	r1, #1
   1196c:	mov	r2, #1
   11970:	stm	sp, {r0, r2}
   11974:	str	r1, [sp, #8]
   11978:	str	r6, [sp, #12]
   1197c:	str	r3, [sp, #16]
   11980:	str	lr, [sp, #20]
   11984:	str	ip, [sp, #24]
   11988:	movw	r2, #29441	; 0x7301
   1198c:	movt	r2, #1
   11990:	movw	r3, #29048	; 0x7178
   11994:	movt	r3, #1
   11998:	mov	r0, r5
   1199c:	mov	r1, r4
   119a0:	bl	13a50 <putchar_unlocked@plt+0x252c>
   119a4:	movw	r6, #33152	; 0x8180
   119a8:	movt	r6, #2
   119ac:	ldr	r0, [r6]
   119b0:	sub	r1, r5, r0
   119b4:	cmp	r1, #1
   119b8:	beq	119d4 <putchar_unlocked@plt+0x4b0>
   119bc:	cmp	r1, #0
   119c0:	bne	119e0 <putchar_unlocked@plt+0x4bc>
   119c4:	movw	r0, #28897	; 0x70e1
   119c8:	movt	r0, #1
   119cc:	mov	r1, #1
   119d0:	bl	11a24 <putchar_unlocked@plt+0x500>
   119d4:	ldr	r0, [r4, r0, lsl #2]
   119d8:	mov	r1, #0
   119dc:	bl	11a24 <putchar_unlocked@plt+0x500>
   119e0:	movw	r1, #29107	; 0x71b3
   119e4:	movt	r1, #1
   119e8:	mov	r0, #0
   119ec:	mov	r2, #5
   119f0:	bl	11290 <dcgettext@plt>
   119f4:	mov	r5, r0
   119f8:	ldr	r0, [r6]
   119fc:	add	r0, r4, r0, lsl #2
   11a00:	ldr	r0, [r0, #4]
   11a04:	bl	15350 <putchar_unlocked@plt+0x3e2c>
   11a08:	mov	r3, r0
   11a0c:	mov	r0, #0
   11a10:	mov	r1, #0
   11a14:	mov	r2, r5
   11a18:	bl	1132c <error@plt>
   11a1c:	mov	r0, #1
   11a20:	bl	11620 <putchar_unlocked@plt+0xfc>
   11a24:	push	{fp, lr}
   11a28:	mov	fp, sp
   11a2c:	sub	sp, sp, #8
   11a30:	mov	r3, r1
   11a34:	mov	r4, r0
   11a38:	mov	r0, #0
   11a3c:	str	r0, [sp]
   11a40:	add	r1, sp, #4
   11a44:	mov	r2, sp
   11a48:	mov	r0, r4
   11a4c:	bl	157cc <putchar_unlocked@plt+0x42a8>
   11a50:	cmp	r0, #0
   11a54:	bne	11a6c <putchar_unlocked@plt+0x548>
   11a58:	ldr	r1, [sp]
   11a5c:	ldr	r0, [sp, #4]
   11a60:	bl	11aa0 <putchar_unlocked@plt+0x57c>
   11a64:	mov	r0, #0
   11a68:	bl	113c8 <exit@plt>
   11a6c:	bl	113ec <__errno_location@plt>
   11a70:	ldr	r5, [r0]
   11a74:	mov	r0, #0
   11a78:	mov	r1, #3
   11a7c:	mov	r2, r4
   11a80:	bl	15210 <putchar_unlocked@plt+0x3cec>
   11a84:	mov	r3, r0
   11a88:	movw	r2, #29721	; 0x7419
   11a8c:	movt	r2, #1
   11a90:	mov	r0, #1
   11a94:	mov	r1, r5
   11a98:	bl	1132c <error@plt>
   11a9c:	nop	{0}
   11aa0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11aa4:	add	fp, sp, #24
   11aa8:	sub	sp, sp, #16
   11aac:	sub	sp, sp, #8192	; 0x2000
   11ab0:	mov	r5, r1
   11ab4:	mov	r6, r0
   11ab8:	movw	r0, #29435	; 0x72fb
   11abc:	movt	r0, #1
   11ac0:	movw	r1, #29586	; 0x7392
   11ac4:	movt	r1, #1
   11ac8:	bl	114c4 <fopen64@plt>
   11acc:	mov	r7, #0
   11ad0:	cmp	r0, #0
   11ad4:	mov	r9, #0
   11ad8:	beq	11b50 <putchar_unlocked@plt+0x62c>
   11adc:	mov	r4, r0
   11ae0:	add	r8, sp, #8
   11ae4:	mov	r0, r8
   11ae8:	mov	r1, #8192	; 0x2000
   11aec:	mov	r2, r4
   11af0:	bl	114d0 <fgets_unlocked@plt>
   11af4:	mov	r9, #0
   11af8:	cmp	r0, r8
   11afc:	bne	11b48 <putchar_unlocked@plt+0x624>
   11b00:	sub	r1, fp, #32
   11b04:	mov	r0, r8
   11b08:	bl	11e78 <putchar_unlocked@plt+0x954>
   11b0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b10:	cmp	r8, r0
   11b14:	beq	11b44 <putchar_unlocked@plt+0x620>
   11b18:	vldr	d16, [pc, #800]	; 11e40 <putchar_unlocked@plt+0x91c>
   11b1c:	vcvt.s32.f64	s2, d0
   11b20:	vmov	r9, s2
   11b24:	mvn	r0, #0
   11b28:	vcmpe.f64	d0, d16
   11b2c:	vmrs	APSR_nzcv, fpscr
   11b30:	movpl	r9, r0
   11b34:	vcmpe.f64	d0, #0.0
   11b38:	vmrs	APSR_nzcv, fpscr
   11b3c:	movlt	r9, r0
   11b40:	b	11b48 <putchar_unlocked@plt+0x624>
   11b44:	mov	r9, #0
   11b48:	mov	r0, r4
   11b4c:	bl	12004 <putchar_unlocked@plt+0xae0>
   11b50:	cmp	r6, #0
   11b54:	mov	r4, #0
   11b58:	beq	11ba0 <putchar_unlocked@plt+0x67c>
   11b5c:	mov	r4, #0
   11b60:	mov	r7, #0
   11b64:	ldrb	r0, [r5, #44]	; 0x2c
   11b68:	cmp	r0, #0
   11b6c:	mov	r0, #0
   11b70:	ldrhne	r0, [r5]
   11b74:	subne	r0, r0, #7
   11b78:	clzne	r0, r0
   11b7c:	lsrne	r0, r0, #5
   11b80:	sub	r6, r6, #1
   11b84:	ldrh	r1, [r5]
   11b88:	cmp	r1, #2
   11b8c:	ldreq	r7, [r5, #340]	; 0x154
   11b90:	add	r4, r0, r4
   11b94:	add	r5, r5, #384	; 0x180
   11b98:	cmp	r6, #0
   11b9c:	bne	11b64 <putchar_unlocked@plt+0x640>
   11ba0:	mov	r0, #0
   11ba4:	bl	11278 <time@plt>
   11ba8:	str	r0, [fp, #-32]	; 0xffffffe0
   11bac:	cmp	r9, #0
   11bb0:	bne	11bc0 <putchar_unlocked@plt+0x69c>
   11bb4:	cmp	r7, #0
   11bb8:	beq	11e10 <putchar_unlocked@plt+0x8ec>
   11bbc:	sub	r9, r0, r7
   11bc0:	sub	r0, fp, #32
   11bc4:	bl	11374 <localtime@plt>
   11bc8:	cmp	r0, #0
   11bcc:	beq	11cc4 <putchar_unlocked@plt+0x7a0>
   11bd0:	mov	r5, r0
   11bd4:	movw	r0, #33164	; 0x818c
   11bd8:	movt	r0, #2
   11bdc:	ldr	r6, [r0]
   11be0:	mov	r7, #0
   11be4:	movw	r1, #29471	; 0x731f
   11be8:	movt	r1, #1
   11bec:	mov	r0, #0
   11bf0:	mov	r2, #5
   11bf4:	bl	11290 <dcgettext@plt>
   11bf8:	mov	r1, r0
   11bfc:	str	r7, [sp]
   11c00:	mov	r0, r6
   11c04:	mov	r2, r5
   11c08:	mov	r3, #0
   11c0c:	bl	1210c <putchar_unlocked@plt+0xbe8>
   11c10:	cmn	r9, #1
   11c14:	beq	11cec <putchar_unlocked@plt+0x7c8>
   11c18:	movw	r0, #17671	; 0x4507
   11c1c:	movt	r0, #49710	; 0xc22e
   11c20:	smmla	r0, r9, r0, r9
   11c24:	asr	r1, r0, #16
   11c28:	add	r6, r1, r0, lsr #31
   11c2c:	movw	r0, #44672	; 0xae80
   11c30:	movt	r0, #65534	; 0xfffe
   11c34:	mla	r0, r6, r0, r9
   11c38:	movw	r1, #46021	; 0xb3c5
   11c3c:	movt	r1, #37282	; 0x91a2
   11c40:	smmla	r1, r0, r1, r0
   11c44:	asr	r2, r1, #11
   11c48:	add	r5, r2, r1, lsr #31
   11c4c:	movw	r1, #61936	; 0xf1f0
   11c50:	movt	r1, #65535	; 0xffff
   11c54:	mla	r0, r5, r1, r0
   11c58:	movw	r1, #34953	; 0x8889
   11c5c:	movt	r1, #34952	; 0x8888
   11c60:	smmla	r0, r0, r1, r0
   11c64:	asr	r1, r0, #5
   11c68:	add	r8, r1, r0, lsr #31
   11c6c:	movw	r0, #20864	; 0x5180
   11c70:	movt	r0, #1
   11c74:	cmp	r9, r0
   11c78:	blt	11d10 <putchar_unlocked@plt+0x7ec>
   11c7c:	asr	r1, r6, #31
   11c80:	mov	r0, r6
   11c84:	bl	11e48 <putchar_unlocked@plt+0x924>
   11c88:	mov	r3, r0
   11c8c:	mov	r0, #5
   11c90:	str	r0, [sp]
   11c94:	movw	r1, #29516	; 0x734c
   11c98:	movt	r1, #1
   11c9c:	movw	r2, #29539	; 0x7363
   11ca0:	movt	r2, #1
   11ca4:	mov	r0, #0
   11ca8:	bl	11518 <dcngettext@plt>
   11cac:	mov	r1, r0
   11cb0:	str	r8, [sp]
   11cb4:	mov	r0, #1
   11cb8:	mov	r2, r6
   11cbc:	mov	r3, r5
   11cc0:	b	11d34 <putchar_unlocked@plt+0x810>
   11cc4:	movw	r1, #29483	; 0x732b
   11cc8:	movt	r1, #1
   11ccc:	mov	r0, #0
   11cd0:	mov	r2, #5
   11cd4:	bl	11290 <dcgettext@plt>
   11cd8:	mov	r1, r0
   11cdc:	mov	r0, #1
   11ce0:	bl	1141c <__printf_chk@plt>
   11ce4:	cmn	r9, #1
   11ce8:	bne	11c18 <putchar_unlocked@plt+0x6f4>
   11cec:	movw	r1, #29494	; 0x7336
   11cf0:	movt	r1, #1
   11cf4:	mov	r0, #0
   11cf8:	mov	r2, #5
   11cfc:	bl	11290 <dcgettext@plt>
   11d00:	mov	r1, r0
   11d04:	mov	r0, #1
   11d08:	bl	1141c <__printf_chk@plt>
   11d0c:	b	11d38 <putchar_unlocked@plt+0x814>
   11d10:	movw	r1, #29563	; 0x737b
   11d14:	movt	r1, #1
   11d18:	mov	r0, #0
   11d1c:	mov	r2, #5
   11d20:	bl	11290 <dcgettext@plt>
   11d24:	mov	r1, r0
   11d28:	mov	r0, #1
   11d2c:	mov	r2, r5
   11d30:	mov	r3, r8
   11d34:	bl	1141c <__printf_chk@plt>
   11d38:	mov	r0, r4
   11d3c:	mov	r1, #0
   11d40:	bl	11e48 <putchar_unlocked@plt+0x924>
   11d44:	mov	r3, r0
   11d48:	mov	r0, #5
   11d4c:	str	r0, [sp]
   11d50:	movw	r1, #29579	; 0x738b
   11d54:	movt	r1, #1
   11d58:	movw	r2, #29588	; 0x7394
   11d5c:	movt	r2, #1
   11d60:	mov	r0, #0
   11d64:	bl	11518 <dcngettext@plt>
   11d68:	mov	r1, r0
   11d6c:	mov	r0, #1
   11d70:	mov	r2, r4
   11d74:	bl	1141c <__printf_chk@plt>
   11d78:	add	r0, sp, #8
   11d7c:	mov	r1, #3
   11d80:	bl	11458 <getloadavg@plt>
   11d84:	cmn	r0, #1
   11d88:	beq	11e00 <putchar_unlocked@plt+0x8dc>
   11d8c:	mov	r4, r0
   11d90:	cmp	r0, #1
   11d94:	blt	11e08 <putchar_unlocked@plt+0x8e4>
   11d98:	movw	r1, #29598	; 0x739e
   11d9c:	movt	r1, #1
   11da0:	mov	r0, #0
   11da4:	mov	r2, #5
   11da8:	bl	11290 <dcgettext@plt>
   11dac:	mov	r1, r0
   11db0:	vldr	d16, [sp, #8]
   11db4:	vmov	r2, r3, d16
   11db8:	mov	r0, #1
   11dbc:	bl	1141c <__printf_chk@plt>
   11dc0:	cmp	r4, #1
   11dc4:	beq	11e00 <putchar_unlocked@plt+0x8dc>
   11dc8:	vldr	d16, [sp, #16]
   11dcc:	vmov	r2, r3, d16
   11dd0:	movw	r1, #29620	; 0x73b4
   11dd4:	movt	r1, #1
   11dd8:	mov	r0, #1
   11ddc:	bl	1141c <__printf_chk@plt>
   11de0:	cmp	r4, #3
   11de4:	blt	11e00 <putchar_unlocked@plt+0x8dc>
   11de8:	vldr	d16, [sp, #24]
   11dec:	vmov	r2, r3, d16
   11df0:	movw	r1, #29620	; 0x73b4
   11df4:	movt	r1, #1
   11df8:	mov	r0, #1
   11dfc:	bl	1141c <__printf_chk@plt>
   11e00:	mov	r0, #10
   11e04:	bl	11524 <putchar_unlocked@plt>
   11e08:	sub	sp, fp, #24
   11e0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e10:	bl	113ec <__errno_location@plt>
   11e14:	ldr	r4, [r0]
   11e18:	movw	r1, #29448	; 0x7308
   11e1c:	movt	r1, #1
   11e20:	mov	r0, #0
   11e24:	mov	r2, #5
   11e28:	bl	11290 <dcgettext@plt>
   11e2c:	mov	r2, r0
   11e30:	mov	r0, #1
   11e34:	mov	r1, r4
   11e38:	bl	1132c <error@plt>
   11e3c:	nop	{0}
   11e40:			; <UNDEFINED> instruction: 0xffc00000
   11e44:	ldrshmi	pc, [pc, #255]	; 11f4b <putchar_unlocked@plt+0xa27>	; <UNPREDICTABLE>
   11e48:	cmp	r1, #0
   11e4c:	bxeq	lr
   11e50:	push	{r4, sl, fp, lr}
   11e54:	add	fp, sp, #8
   11e58:	movw	r4, #16960	; 0x4240
   11e5c:	movt	r4, #15
   11e60:	mov	r2, r4
   11e64:	mov	r3, #0
   11e68:	bl	16d54 <putchar_unlocked@plt+0x5830>
   11e6c:	add	r0, r2, r4
   11e70:	pop	{r4, sl, fp, lr}
   11e74:	bx	lr
   11e78:	push	{r4, r5, fp, lr}
   11e7c:	add	fp, sp, #8
   11e80:	mov	r4, r1
   11e84:	mov	r5, r0
   11e88:	bl	11eb8 <putchar_unlocked@plt+0x994>
   11e8c:	cmp	r0, #0
   11e90:	beq	11ea8 <putchar_unlocked@plt+0x984>
   11e94:	mov	r2, r0
   11e98:	mov	r0, r5
   11e9c:	mov	r1, r4
   11ea0:	pop	{r4, r5, fp, lr}
   11ea4:	b	11464 <strtod_l@plt>
   11ea8:	cmp	r4, #0
   11eac:	strne	r5, [r4]
   11eb0:	vmov.i32	d0, #0	; 0x00000000
   11eb4:	pop	{r4, r5, fp, pc}
   11eb8:	push	{r4, sl, fp, lr}
   11ebc:	add	fp, sp, #8
   11ec0:	movw	r4, #33176	; 0x8198
   11ec4:	movt	r4, #2
   11ec8:	ldr	r0, [r4]
   11ecc:	cmp	r0, #0
   11ed0:	beq	11edc <putchar_unlocked@plt+0x9b8>
   11ed4:	ldr	r0, [r4]
   11ed8:	pop	{r4, sl, fp, pc}
   11edc:	movw	r1, #29703	; 0x7407
   11ee0:	movt	r1, #1
   11ee4:	movw	r0, #8127	; 0x1fbf
   11ee8:	mov	r2, #0
   11eec:	bl	114ac <newlocale@plt>
   11ef0:	str	r0, [r4]
   11ef4:	ldr	r0, [r4]
   11ef8:	pop	{r4, sl, fp, pc}
   11efc:	movw	r1, #33180	; 0x819c
   11f00:	movt	r1, #2
   11f04:	str	r0, [r1]
   11f08:	bx	lr
   11f0c:	movw	r1, #33184	; 0x81a0
   11f10:	movt	r1, #2
   11f14:	strb	r0, [r1]
   11f18:	bx	lr
   11f1c:	push	{r4, r5, r6, sl, fp, lr}
   11f20:	add	fp, sp, #16
   11f24:	sub	sp, sp, #8
   11f28:	movw	r0, #33164	; 0x818c
   11f2c:	movt	r0, #2
   11f30:	ldr	r0, [r0]
   11f34:	bl	16a74 <putchar_unlocked@plt+0x5550>
   11f38:	cmp	r0, #0
   11f3c:	beq	11f64 <putchar_unlocked@plt+0xa40>
   11f40:	movw	r0, #33184	; 0x81a0
   11f44:	movt	r0, #2
   11f48:	ldrb	r0, [r0]
   11f4c:	cmp	r0, #0
   11f50:	beq	11f84 <putchar_unlocked@plt+0xa60>
   11f54:	bl	113ec <__errno_location@plt>
   11f58:	ldr	r0, [r0]
   11f5c:	cmp	r0, #32
   11f60:	bne	11f84 <putchar_unlocked@plt+0xa60>
   11f64:	movw	r0, #33160	; 0x8188
   11f68:	movt	r0, #2
   11f6c:	ldr	r0, [r0]
   11f70:	bl	16a74 <putchar_unlocked@plt+0x5550>
   11f74:	cmp	r0, #0
   11f78:	subeq	sp, fp, #16
   11f7c:	popeq	{r4, r5, r6, sl, fp, pc}
   11f80:	b	11ff4 <putchar_unlocked@plt+0xad0>
   11f84:	movw	r1, #29705	; 0x7409
   11f88:	movt	r1, #1
   11f8c:	mov	r0, #0
   11f90:	mov	r2, #5
   11f94:	bl	11290 <dcgettext@plt>
   11f98:	mov	r4, r0
   11f9c:	movw	r0, #33180	; 0x819c
   11fa0:	movt	r0, #2
   11fa4:	ldr	r6, [r0]
   11fa8:	bl	113ec <__errno_location@plt>
   11fac:	ldr	r5, [r0]
   11fb0:	cmp	r6, #0
   11fb4:	bne	11fd0 <putchar_unlocked@plt+0xaac>
   11fb8:	movw	r2, #29721	; 0x7419
   11fbc:	movt	r2, #1
   11fc0:	mov	r0, #0
   11fc4:	mov	r1, r5
   11fc8:	mov	r3, r4
   11fcc:	b	11ff0 <putchar_unlocked@plt+0xacc>
   11fd0:	mov	r0, r6
   11fd4:	bl	15200 <putchar_unlocked@plt+0x3cdc>
   11fd8:	mov	r3, r0
   11fdc:	str	r4, [sp]
   11fe0:	movw	r2, #29717	; 0x7415
   11fe4:	movt	r2, #1
   11fe8:	mov	r0, #0
   11fec:	mov	r1, r5
   11ff0:	bl	1132c <error@plt>
   11ff4:	movw	r0, #33076	; 0x8134
   11ff8:	movt	r0, #2
   11ffc:	ldr	r0, [r0]
   12000:	bl	11254 <_exit@plt>
   12004:	push	{r4, r5, fp, lr}
   12008:	add	fp, sp, #8
   1200c:	sub	sp, sp, #8
   12010:	mov	r4, r0
   12014:	bl	11428 <fileno@plt>
   12018:	cmn	r0, #1
   1201c:	ble	12094 <putchar_unlocked@plt+0xb70>
   12020:	mov	r0, r4
   12024:	bl	11368 <__freading@plt>
   12028:	cmp	r0, #0
   1202c:	beq	12058 <putchar_unlocked@plt+0xb34>
   12030:	mov	r0, r4
   12034:	bl	11428 <fileno@plt>
   12038:	mov	r1, #1
   1203c:	str	r1, [sp]
   12040:	mov	r2, #0
   12044:	mov	r3, #0
   12048:	bl	112f0 <lseek64@plt>
   1204c:	and	r0, r0, r1
   12050:	cmn	r0, #1
   12054:	beq	12094 <putchar_unlocked@plt+0xb70>
   12058:	mov	r0, r4
   1205c:	bl	120a4 <putchar_unlocked@plt+0xb80>
   12060:	cmp	r0, #0
   12064:	beq	12094 <putchar_unlocked@plt+0xb70>
   12068:	bl	113ec <__errno_location@plt>
   1206c:	ldr	r5, [r0]
   12070:	mov	r0, r4
   12074:	bl	11440 <fclose@plt>
   12078:	cmp	r5, #0
   1207c:	beq	1208c <putchar_unlocked@plt+0xb68>
   12080:	bl	113ec <__errno_location@plt>
   12084:	str	r5, [r0]
   12088:	mvn	r0, #0
   1208c:	sub	sp, fp, #8
   12090:	pop	{r4, r5, fp, pc}
   12094:	mov	r0, r4
   12098:	sub	sp, fp, #8
   1209c:	pop	{r4, r5, fp, lr}
   120a0:	b	11440 <fclose@plt>
   120a4:	push	{r4, sl, fp, lr}
   120a8:	add	fp, sp, #8
   120ac:	mov	r4, r0
   120b0:	cmp	r0, #0
   120b4:	beq	120cc <putchar_unlocked@plt+0xba8>
   120b8:	mov	r0, r4
   120bc:	bl	11368 <__freading@plt>
   120c0:	cmp	r0, #0
   120c4:	movne	r0, r4
   120c8:	blne	120d8 <putchar_unlocked@plt+0xbb4>
   120cc:	mov	r0, r4
   120d0:	pop	{r4, sl, fp, lr}
   120d4:	b	11230 <fflush@plt>
   120d8:	ldrb	r1, [r0, #1]
   120dc:	tst	r1, #1
   120e0:	bxeq	lr
   120e4:	push	{fp, lr}
   120e8:	mov	fp, sp
   120ec:	sub	sp, sp, #8
   120f0:	mov	r1, #1
   120f4:	str	r1, [sp]
   120f8:	mov	r2, #0
   120fc:	mov	r3, #0
   12100:	bl	13900 <putchar_unlocked@plt+0x23dc>
   12104:	mov	sp, fp
   12108:	pop	{fp, pc}
   1210c:	push	{fp, lr}
   12110:	mov	fp, sp
   12114:	sub	sp, sp, #16
   12118:	str	r3, [sp, #8]
   1211c:	mvn	r3, #0
   12120:	str	r3, [sp, #4]
   12124:	mov	r3, #0
   12128:	str	r3, [sp]
   1212c:	ldr	r3, [fp, #8]
   12130:	str	r3, [sp, #12]
   12134:	mov	r3, #0
   12138:	bl	12144 <putchar_unlocked@plt+0xc20>
   1213c:	mov	sp, fp
   12140:	pop	{fp, pc}
   12144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12148:	add	fp, sp, #28
   1214c:	sub	sp, sp, #124	; 0x7c
   12150:	sub	sp, sp, #1024	; 0x400
   12154:	str	r3, [sp, #80]	; 0x50
   12158:	mov	r4, r2
   1215c:	mov	sl, r1
   12160:	mov	r5, r0
   12164:	bl	113ec <__errno_location@plt>
   12168:	mov	r2, r4
   1216c:	ldr	r1, [r2, #8]!
   12170:	cmp	r1, #0
   12174:	mov	r3, r1
   12178:	movweq	r3, #12
   1217c:	cmp	r1, #12
   12180:	subgt	r3, r1, #12
   12184:	ldr	r1, [r2, #32]
   12188:	movw	r6, #28896	; 0x70e0
   1218c:	movt	r6, #1
   12190:	cmp	r1, #0
   12194:	movne	r6, r1
   12198:	ldr	r7, [r0]
   1219c:	ldrb	r1, [sl]
   121a0:	cmp	r1, #0
   121a4:	str	r0, [sp, #60]	; 0x3c
   121a8:	str	r7, [sp, #56]	; 0x38
   121ac:	beq	12218 <putchar_unlocked@plt+0xcf4>
   121b0:	str	r6, [sp, #40]	; 0x28
   121b4:	str	r3, [sp, #32]
   121b8:	str	r2, [sp, #36]	; 0x24
   121bc:	str	r5, [sp, #92]	; 0x5c
   121c0:	ldr	r7, [fp, #12]
   121c4:	sub	r1, fp, #46	; 0x2e
   121c8:	add	r0, r1, #13
   121cc:	str	r0, [sp, #24]
   121d0:	add	r0, sp, #96	; 0x60
   121d4:	add	r0, r0, #1
   121d8:	str	r0, [sp, #44]	; 0x2c
   121dc:	str	r4, [sp, #76]	; 0x4c
   121e0:	add	r0, r4, #12
   121e4:	str	r0, [sp, #28]
   121e8:	add	r0, r1, #14
   121ec:	str	r0, [sp, #64]	; 0x40
   121f0:	sub	r0, fp, #51	; 0x33
   121f4:	add	r1, r0, #3
   121f8:	str	r1, [sp, #52]	; 0x34
   121fc:	add	r0, r0, #2
   12200:	str	r0, [sp, #68]	; 0x44
   12204:	mov	r9, #0
   12208:	mov	lr, #-2147483648	; 0x80000000
   1220c:	movw	r2, #52428	; 0xcccc
   12210:	movt	r2, #3276	; 0xccc
   12214:	b	12470 <putchar_unlocked@plt+0xf4c>
   12218:	mov	r9, #0
   1221c:	b	13810 <putchar_unlocked@plt+0x22ec>
   12220:	sub	r0, r7, #6
   12224:	bic	r1, r0, r0, asr #31
   12228:	b	12b58 <putchar_unlocked@plt+0x1634>
   1222c:	movw	r3, #63636	; 0xf894
   12230:	movt	r3, #65535	; 0xffff
   12234:	sub	r3, r3, r0
   12238:	add	r0, r2, #100	; 0x64
   1223c:	cmp	r5, r3
   12240:	rsblt	r0, r2, #0
   12244:	ldr	r3, [sp, #84]	; 0x54
   12248:	ldr	ip, [sp, #48]	; 0x30
   1224c:	b	1226c <putchar_unlocked@plt+0xd48>
   12250:	add	r0, r3, #100	; 0x64
   12254:	movw	r6, #63636	; 0xf894
   12258:	movt	r6, #65535	; 0xffff
   1225c:	cmp	r2, r6
   12260:	mov	r8, #2
   12264:	rsblt	r0, r3, #0
   12268:	mov	r3, r5
   1226c:	cmp	r4, #0
   12270:	ldr	r2, [fp, #8]
   12274:	moveq	r4, r2
   12278:	mov	r2, #0
   1227c:	cmp	r4, #43	; 0x2b
   12280:	mov	r5, #0
   12284:	str	r5, [sp, #72]	; 0x48
   12288:	bne	13320 <putchar_unlocked@plt+0x1dfc>
   1228c:	str	r3, [sp, #84]	; 0x54
   12290:	mov	r3, #0
   12294:	cmp	r8, r7
   12298:	str	ip, [sp, #48]	; 0x30
   1229c:	mov	r6, #0
   122a0:	movwlt	r6, #1
   122a4:	movw	r5, #9999	; 0x270f
   122a8:	cmp	r8, #2
   122ac:	movweq	r5, #99	; 0x63
   122b0:	cmp	r5, r0
   122b4:	movwcc	r3, #1
   122b8:	orr	r3, r6, r3
   122bc:	str	r3, [sp, #72]	; 0x48
   122c0:	ldr	ip, [sp, #48]	; 0x30
   122c4:	ldr	r3, [sp, #84]	; 0x54
   122c8:	b	13320 <putchar_unlocked@plt+0x1dfc>
   122cc:	cmp	r2, #0
   122d0:	beq	12428 <putchar_unlocked@plt+0xf04>
   122d4:	movw	r6, #10000	; 0x2710
   122d8:	mla	r0, r0, r6, r2
   122dc:	mov	r2, #100	; 0x64
   122e0:	mla	r0, ip, r2, r0
   122e4:	mov	r2, #1
   122e8:	str	r2, [sp, #72]	; 0x48
   122ec:	mov	r2, #20
   122f0:	ldr	r3, [sp, #84]	; 0x54
   122f4:	mov	ip, r8
   122f8:	mov	r8, #9
   122fc:	b	13320 <putchar_unlocked@plt+0x1dfc>
   12300:	sub	r0, fp, #46	; 0x2e
   12304:	mov	r1, r2
   12308:	mov	r2, #1
   1230c:	ldr	r3, [sp, #92]	; 0x5c
   12310:	bl	112e4 <fwrite@plt>
   12314:	mov	r6, #0
   12318:	cmp	r4, #45	; 0x2d
   1231c:	subne	r0, r7, #9
   12320:	subne	r0, r0, r8
   12324:	bicne	r6, r0, r0, asr #31
   12328:	mvn	r0, #9
   1232c:	sub	r0, r0, r9
   12330:	sub	r0, r0, r8
   12334:	cmp	r6, r0
   12338:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   1233c:	ldr	r5, [sp, #92]	; 0x5c
   12340:	cmp	r5, #0
   12344:	cmpne	r6, #0
   12348:	bne	1235c <putchar_unlocked@plt+0xe38>
   1234c:	add	r0, r6, r9
   12350:	add	r0, r0, r8
   12354:	add	r9, r0, #9
   12358:	b	137f4 <putchar_unlocked@plt+0x22d0>
   1235c:	uxtb	r0, r4
   12360:	cmp	r0, #43	; 0x2b
   12364:	beq	12374 <putchar_unlocked@plt+0xe50>
   12368:	cmp	r0, #48	; 0x30
   1236c:	mov	r4, r6
   12370:	bne	12390 <putchar_unlocked@plt+0xe6c>
   12374:	mov	r4, r6
   12378:	mov	r0, #48	; 0x30
   1237c:	mov	r1, r5
   12380:	bl	114a0 <fputc@plt>
   12384:	subs	r4, r4, #1
   12388:	bne	12378 <putchar_unlocked@plt+0xe54>
   1238c:	b	1234c <putchar_unlocked@plt+0xe28>
   12390:	mov	r0, #32
   12394:	mov	r1, r5
   12398:	bl	114a0 <fputc@plt>
   1239c:	subs	r4, r4, #1
   123a0:	bne	12390 <putchar_unlocked@plt+0xe6c>
   123a4:	b	1234c <putchar_unlocked@plt+0xe28>
   123a8:	cmp	r7, #0
   123ac:	ldr	r4, [sp, #92]	; 0x5c
   123b0:	beq	123c8 <putchar_unlocked@plt+0xea4>
   123b4:	mov	r0, #32
   123b8:	mov	r1, r4
   123bc:	bl	114a0 <fputc@plt>
   123c0:	subs	r7, r7, #1
   123c4:	bne	123b4 <putchar_unlocked@plt+0xe90>
   123c8:	tst	r6, #1
   123cc:	beq	123e4 <putchar_unlocked@plt+0xec0>
   123d0:	ldr	r0, [sp, #92]	; 0x5c
   123d4:	ldr	r1, [sp, #40]	; 0x28
   123d8:	ldr	r2, [sp, #72]	; 0x48
   123dc:	bl	13844 <putchar_unlocked@plt+0x2320>
   123e0:	b	12420 <putchar_unlocked@plt+0xefc>
   123e4:	eor	r0, r6, #1
   123e8:	ldr	r1, [sp, #84]	; 0x54
   123ec:	and	r0, r1, r0
   123f0:	tst	r0, #1
   123f4:	beq	1240c <putchar_unlocked@plt+0xee8>
   123f8:	ldr	r0, [sp, #92]	; 0x5c
   123fc:	ldr	r1, [sp, #40]	; 0x28
   12400:	ldr	r2, [sp, #72]	; 0x48
   12404:	bl	13888 <putchar_unlocked@plt+0x2364>
   12408:	b	12420 <putchar_unlocked@plt+0xefc>
   1240c:	ldr	r0, [sp, #40]	; 0x28
   12410:	ldr	r1, [sp, #72]	; 0x48
   12414:	mov	r2, #1
   12418:	ldr	r3, [sp, #92]	; 0x5c
   1241c:	bl	112e4 <fwrite@plt>
   12420:	add	r9, r8, r9
   12424:	b	137f4 <putchar_unlocked@plt+0x22d0>
   12428:	cmp	ip, #0
   1242c:	beq	12454 <putchar_unlocked@plt+0xf30>
   12430:	mov	r2, #100	; 0x64
   12434:	mla	r0, r0, r2, ip
   12438:	mov	r2, #1
   1243c:	str	r2, [sp, #72]	; 0x48
   12440:	mov	r2, #4
   12444:	ldr	r3, [sp, #84]	; 0x54
   12448:	mov	ip, r8
   1244c:	mov	r8, #6
   12450:	b	13320 <putchar_unlocked@plt+0x1dfc>
   12454:	mov	r2, #1
   12458:	str	r2, [sp, #72]	; 0x48
   1245c:	mov	r2, #0
   12460:	ldr	r3, [sp, #84]	; 0x54
   12464:	mov	ip, r8
   12468:	mov	r8, #3
   1246c:	b	13320 <putchar_unlocked@plt+0x1dfc>
   12470:	mov	r8, sl
   12474:	ldrb	r0, [sl]
   12478:	cmp	r0, #37	; 0x25
   1247c:	bne	1251c <putchar_unlocked@plt+0xff8>
   12480:	str	r9, [sp, #88]	; 0x58
   12484:	mov	r6, #0
   12488:	ldr	r3, [sp, #80]	; 0x50
   1248c:	mov	r4, #0
   12490:	mov	sl, r8
   12494:	add	sl, r8, #1
   12498:	b	124a4 <putchar_unlocked@plt+0xf80>
   1249c:	add	sl, sl, #1
   124a0:	mov	r4, r9
   124a4:	ldrb	r9, [sl]
   124a8:	sub	r0, r9, #35	; 0x23
   124ac:	cmp	r0, #13
   124b0:	bhi	12500 <putchar_unlocked@plt+0xfdc>
   124b4:	add	r1, pc, #0
   124b8:	ldr	pc, [r1, r0, lsl #2]
   124bc:	strdeq	r2, [r1], -r4
   124c0:	muleq	r1, r0, r5
   124c4:	muleq	r1, r0, r5
   124c8:	muleq	r1, r0, r5
   124cc:	muleq	r1, r0, r5
   124d0:	muleq	r1, r0, r5
   124d4:	muleq	r1, r0, r5
   124d8:	muleq	r1, r0, r5
   124dc:	muleq	r1, ip, r4
   124e0:	muleq	r1, r0, r5
   124e4:	muleq	r1, ip, r4
   124e8:	muleq	r1, r0, r5
   124ec:	muleq	r1, r0, r5
   124f0:	muleq	r1, ip, r4
   124f4:	mov	r6, #1
   124f8:	add	sl, sl, #1
   124fc:	b	124a4 <putchar_unlocked@plt+0xf80>
   12500:	cmp	r9, #95	; 0x5f
   12504:	beq	1249c <putchar_unlocked@plt+0xf78>
   12508:	cmp	r9, #94	; 0x5e
   1250c:	bne	12590 <putchar_unlocked@plt+0x106c>
   12510:	mov	r3, #1
   12514:	add	sl, sl, #1
   12518:	b	124a4 <putchar_unlocked@plt+0xf80>
   1251c:	bic	r0, r7, r7, asr #31
   12520:	cmp	r0, #1
   12524:	mov	r4, #1
   12528:	movhi	r4, r0
   1252c:	mvn	r1, r9
   12530:	cmp	r4, r1
   12534:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12538:	ldr	r7, [sp, #92]	; 0x5c
   1253c:	cmp	r7, #0
   12540:	beq	12584 <putchar_unlocked@plt+0x1060>
   12544:	cmp	r0, #2
   12548:	bcc	1256c <putchar_unlocked@plt+0x1048>
   1254c:	sub	r5, r0, #1
   12550:	mov	r6, #0
   12554:	mov	r0, #32
   12558:	mov	r1, r7
   1255c:	bl	114a0 <fputc@plt>
   12560:	add	r6, r6, #1
   12564:	cmp	r6, r5
   12568:	bcc	12554 <putchar_unlocked@plt+0x1030>
   1256c:	ldrb	r0, [r8]
   12570:	mov	r1, r7
   12574:	bl	114a0 <fputc@plt>
   12578:	mov	lr, #-2147483648	; 0x80000000
   1257c:	movw	r2, #52428	; 0xcccc
   12580:	movt	r2, #3276	; 0xccc
   12584:	add	r9, r4, r9
   12588:	mov	sl, r8
   1258c:	b	13800 <putchar_unlocked@plt+0x22dc>
   12590:	sub	r0, r9, #48	; 0x30
   12594:	cmp	r0, #9
   12598:	bhi	125f4 <putchar_unlocked@plt+0x10d0>
   1259c:	mov	r7, #0
   125a0:	cmn	r7, #1
   125a4:	ble	125b4 <putchar_unlocked@plt+0x1090>
   125a8:	cmp	r7, r2
   125ac:	bgt	125c4 <putchar_unlocked@plt+0x10a0>
   125b0:	b	125cc <putchar_unlocked@plt+0x10a8>
   125b4:	beq	125cc <putchar_unlocked@plt+0x10a8>
   125b8:	sdiv	r0, lr, r7
   125bc:	cmp	r0, #10
   125c0:	bge	125cc <putchar_unlocked@plt+0x10a8>
   125c4:	mvn	r7, #-2147483648	; 0x80000000
   125c8:	b	125e4 <putchar_unlocked@plt+0x10c0>
   125cc:	ldrb	r0, [sl]
   125d0:	add	r1, r7, r7, lsl #2
   125d4:	add	r0, r0, r1, lsl #1
   125d8:	sub	r7, r0, #48	; 0x30
   125dc:	cmp	r7, r1, lsl #1
   125e0:	mvnvs	r7, #-2147483648	; 0x80000000
   125e4:	ldrb	r9, [sl, #1]!
   125e8:	sub	r0, r9, #48	; 0x30
   125ec:	cmp	r0, #10
   125f0:	bcc	125a0 <putchar_unlocked@plt+0x107c>
   125f4:	cmp	r9, #79	; 0x4f
   125f8:	cmpne	r9, #69	; 0x45
   125fc:	bne	12608 <putchar_unlocked@plt+0x10e4>
   12600:	add	sl, sl, #1
   12604:	b	1260c <putchar_unlocked@plt+0x10e8>
   12608:	mov	r9, #0
   1260c:	ldrb	ip, [sl]
   12610:	cmp	ip, #122	; 0x7a
   12614:	bhi	13054 <putchar_unlocked@plt+0x1b30>
   12618:	mov	r2, #0
   1261c:	mvn	r1, #0
   12620:	add	r0, pc, #8
   12624:	movw	r5, #29742	; 0x742e
   12628:	movt	r5, #1
   1262c:	ldr	pc, [r0, ip, lsl #2]
   12630:	strdeq	r2, [r1], -r4
   12634:	andeq	r3, r1, r4, asr r0
   12638:	andeq	r3, r1, r4, asr r0
   1263c:	andeq	r3, r1, r4, asr r0
   12640:	andeq	r3, r1, r4, asr r0
   12644:	andeq	r3, r1, r4, asr r0
   12648:	andeq	r3, r1, r4, asr r0
   1264c:	andeq	r3, r1, r4, asr r0
   12650:	andeq	r3, r1, r4, asr r0
   12654:	andeq	r3, r1, r4, asr r0
   12658:	andeq	r3, r1, r4, asr r0
   1265c:	andeq	r3, r1, r4, asr r0
   12660:	andeq	r3, r1, r4, asr r0
   12664:	andeq	r3, r1, r4, asr r0
   12668:	andeq	r3, r1, r4, asr r0
   1266c:	andeq	r3, r1, r4, asr r0
   12670:	andeq	r3, r1, r4, asr r0
   12674:	andeq	r3, r1, r4, asr r0
   12678:	andeq	r3, r1, r4, asr r0
   1267c:	andeq	r3, r1, r4, asr r0
   12680:	andeq	r3, r1, r4, asr r0
   12684:	andeq	r3, r1, r4, asr r0
   12688:	andeq	r3, r1, r4, asr r0
   1268c:	andeq	r3, r1, r4, asr r0
   12690:	andeq	r3, r1, r4, asr r0
   12694:	andeq	r3, r1, r4, asr r0
   12698:	andeq	r3, r1, r4, asr r0
   1269c:	andeq	r3, r1, r4, asr r0
   126a0:	andeq	r3, r1, r4, asr r0
   126a4:	andeq	r3, r1, r4, asr r0
   126a8:	andeq	r3, r1, r4, asr r0
   126ac:	andeq	r3, r1, r4, asr r0
   126b0:	andeq	r3, r1, r4, asr r0
   126b4:	andeq	r3, r1, r4, asr r0
   126b8:	andeq	r3, r1, r4, asr r0
   126bc:	andeq	r3, r1, r4, asr r0
   126c0:	andeq	r3, r1, r4, asr r0
   126c4:	andeq	r2, r1, r8, ror #17
   126c8:	andeq	r3, r1, r4, asr r0
   126cc:	andeq	r3, r1, r4, asr r0
   126d0:	andeq	r3, r1, r4, asr r0
   126d4:	andeq	r3, r1, r4, asr r0
   126d8:	andeq	r3, r1, r4, asr r0
   126dc:	andeq	r3, r1, r4, asr r0
   126e0:	andeq	r3, r1, r4, asr r0
   126e4:	andeq	r3, r1, r4, asr r0
   126e8:	andeq	r3, r1, r4, asr r0
   126ec:	andeq	r3, r1, r4, asr r0
   126f0:	andeq	r3, r1, r4, asr r0
   126f4:	andeq	r3, r1, r4, asr r0
   126f8:	andeq	r3, r1, r4, asr r0
   126fc:	andeq	r3, r1, r4, asr r0
   12700:	andeq	r3, r1, r4, asr r0
   12704:	andeq	r3, r1, r4, asr r0
   12708:	andeq	r3, r1, r4, asr r0
   1270c:	andeq	r3, r1, r4, asr r0
   12710:	andeq	r3, r1, r4, asr r0
   12714:	andeq	r3, r1, r4, asr r0
   12718:	strdeq	r2, [r1], -ip
   1271c:	andeq	r3, r1, r4, asr r0
   12720:	andeq	r3, r1, r4, asr r0
   12724:	andeq	r3, r1, r4, asr r0
   12728:	andeq	r3, r1, r4, asr r0
   1272c:	andeq	r3, r1, r4, asr r0
   12730:	andeq	r3, r1, r4, asr r0
   12734:	andeq	r2, r1, r4, ror r9
   12738:	andeq	r2, r1, ip, lsl #19
   1273c:	andeq	r2, r1, r4, lsr #19
   12740:			; <UNDEFINED> instruction: 0x000129b8
   12744:	andeq	r3, r1, r4, asr r0
   12748:	andeq	r2, r1, ip, asr #19
   1274c:	andeq	r2, r1, ip, lsl r8
   12750:	strdeq	r2, [r1], -r8
   12754:	andeq	r2, r1, ip, lsl #20
   12758:	andeq	r3, r1, r4, asr r0
   1275c:	andeq	r3, r1, r4, asr r0
   12760:	andeq	r3, r1, r4, asr r0
   12764:	andeq	r2, r1, ip, lsl sl
   12768:	andeq	r2, r1, r0, lsr sl
   1276c:	andeq	r3, r1, r4, asr r0
   12770:	andeq	r2, r1, r4, lsr #22
   12774:	andeq	r3, r1, r4, asr r0
   12778:	andeq	r2, r1, r8, asr fp
   1277c:	andeq	r2, r1, ip, lsr fp
   12780:	andeq	r2, r1, r0, asr fp
   12784:	andeq	r2, r1, r8, lsl #24
   12788:	andeq	r2, r1, ip, lsl r8
   1278c:	andeq	r2, r1, r4, lsr ip
   12790:	andeq	r2, r1, r8, lsl #25
   12794:	muleq	r1, ip, ip
   12798:	andeq	r2, r1, ip, asr #25
   1279c:	andeq	r3, r1, r4, asr r0
   127a0:	andeq	r3, r1, r4, asr r0
   127a4:	andeq	r3, r1, r4, asr r0
   127a8:	andeq	r3, r1, r4, asr r0
   127ac:	andeq	r3, r1, r4, asr r0
   127b0:	andeq	r3, r1, r4, asr r0
   127b4:	andeq	r2, r1, r4, asr sp
   127b8:	ldrdeq	r2, [r1], -r4
   127bc:	andeq	r2, r1, ip, ror #26
   127c0:	andeq	r2, r1, r0, lsl #27
   127c4:	muleq	r1, r4, sp
   127c8:	andeq	r3, r1, r4, asr r0
   127cc:	andeq	r2, r1, ip, lsl r8
   127d0:	ldrdeq	r2, [r1], -r4
   127d4:	andeq	r3, r1, r4, asr r0
   127d8:	andeq	r2, r1, r4, lsr #27
   127dc:	andeq	r2, r1, ip, asr #27
   127e0:	andeq	r2, r1, r0, ror #27
   127e4:	strdeq	r2, [r1], -r8
   127e8:	andeq	r2, r1, r0, lsr #28
   127ec:	andeq	r3, r1, r4, asr r0
   127f0:	andeq	r2, r1, r8, lsr #22
   127f4:	andeq	r2, r1, r0, lsr #29
   127f8:	andeq	r3, r1, r0, asr #8
   127fc:	andeq	r2, r1, r0, asr #29
   12800:	andeq	r2, r1, r0, lsl #31
   12804:	andeq	r3, r1, r0
   12808:	andeq	r3, r1, r4, asr r0
   1280c:	andeq	r3, r1, r4, lsr r0
   12810:	andeq	r3, r1, ip, asr #32
   12814:	andeq	r3, r1, r0, lsr r1
   12818:	andeq	r2, r1, r0, lsr #18
   1281c:	cmp	r9, #69	; 0x45
   12820:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12824:	str	ip, [sp, #48]	; 0x30
   12828:	str	r3, [sp, #84]	; 0x54
   1282c:	ldr	r0, [sp, #76]	; 0x4c
   12830:	ldr	r2, [r0, #20]
   12834:	ldr	r1, [r0, #24]
   12838:	ldr	r8, [r0, #28]
   1283c:	mvn	r0, #99	; 0x63
   12840:	cmp	r2, #0
   12844:	movwlt	r0, #300	; 0x12c
   12848:	str	r2, [sp, #20]
   1284c:	add	r6, r0, r2
   12850:	mov	r0, r8
   12854:	str	r1, [sp, #72]	; 0x48
   12858:	bl	138cc <putchar_unlocked@plt+0x23a8>
   1285c:	cmn	r0, #1
   12860:	ble	13144 <putchar_unlocked@plt+0x1c20>
   12864:	mov	r5, r0
   12868:	movw	r0, #365	; 0x16d
   1286c:	tst	r6, #3
   12870:	bne	128b4 <putchar_unlocked@plt+0x1390>
   12874:	movw	r0, #34079	; 0x851f
   12878:	movt	r0, #20971	; 0x51eb
   1287c:	smmul	r0, r6, r0
   12880:	asr	r1, r0, #5
   12884:	add	r1, r1, r0, lsr #31
   12888:	mov	r2, #100	; 0x64
   1288c:	mls	r1, r1, r2, r6
   12890:	asr	r2, r0, #7
   12894:	add	r0, r2, r0, lsr #31
   12898:	mov	r2, #400	; 0x190
   1289c:	mls	r2, r0, r2, r6
   128a0:	movw	r0, #365	; 0x16d
   128a4:	cmp	r2, #0
   128a8:	movweq	r0, #366	; 0x16e
   128ac:	cmp	r1, #0
   128b0:	movwne	r0, #366	; 0x16e
   128b4:	sub	r0, r8, r0
   128b8:	ldr	r1, [sp, #72]	; 0x48
   128bc:	bl	138cc <putchar_unlocked@plt+0x23a8>
   128c0:	cmn	r0, #1
   128c4:	movgt	r5, r0
   128c8:	mov	r1, #1
   128cc:	eor	r0, r1, r0, lsr #31
   128d0:	b	131a8 <putchar_unlocked@plt+0x1c84>
   128d4:	orr	r3, r6, r3
   128d8:	mov	r2, #0
   128dc:	cmp	r9, #69	; 0x45
   128e0:	beq	13054 <putchar_unlocked@plt+0x1b30>
   128e4:	b	13440 <putchar_unlocked@plt+0x1f1c>
   128e8:	sub	r0, sl, #1
   128ec:	cmp	r0, r8
   128f0:	beq	13670 <putchar_unlocked@plt+0x214c>
   128f4:	sub	sl, sl, #1
   128f8:	b	13054 <putchar_unlocked@plt+0x1b30>
   128fc:	mov	r2, #1
   12900:	b	12908 <putchar_unlocked@plt+0x13e4>
   12904:	add	r2, r2, #1
   12908:	ldrb	r0, [sl, r2]
   1290c:	cmp	r0, #58	; 0x3a
   12910:	beq	12904 <putchar_unlocked@plt+0x13e0>
   12914:	cmp	r0, #122	; 0x7a
   12918:	bne	13054 <putchar_unlocked@plt+0x1b30>
   1291c:	add	sl, sl, r2
   12920:	ldr	r1, [sp, #76]	; 0x4c
   12924:	ldr	r0, [r1, #32]
   12928:	cmp	r0, #0
   1292c:	blt	13210 <putchar_unlocked@plt+0x1cec>
   12930:	mov	r5, r2
   12934:	ldr	r2, [r1, #36]	; 0x24
   12938:	cmp	r2, #0
   1293c:	str	r3, [sp, #84]	; 0x54
   12940:	blt	13700 <putchar_unlocked@plt+0x21dc>
   12944:	mov	r1, #0
   12948:	bne	13704 <putchar_unlocked@plt+0x21e0>
   1294c:	ldr	r0, [sp, #40]	; 0x28
   12950:	ldrb	r0, [r0]
   12954:	sub	r0, r0, #45	; 0x2d
   12958:	clz	r0, r0
   1295c:	lsr	r1, r0, #5
   12960:	cmp	r5, #3
   12964:	bls	1370c <putchar_unlocked@plt+0x21e8>
   12968:	ldr	r9, [sp, #88]	; 0x58
   1296c:	ldr	r3, [sp, #84]	; 0x54
   12970:	b	13058 <putchar_unlocked@plt+0x1b34>
   12974:	cmp	r9, #0
   12978:	bne	13054 <putchar_unlocked@plt+0x1b30>
   1297c:	orr	r3, r6, r3
   12980:	mov	r2, #0
   12984:	mov	ip, #65	; 0x41
   12988:	b	13440 <putchar_unlocked@plt+0x1f1c>
   1298c:	cmp	r9, #69	; 0x45
   12990:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12994:	orr	r3, r6, r3
   12998:	mov	r2, #0
   1299c:	mov	ip, #66	; 0x42
   129a0:	b	13440 <putchar_unlocked@plt+0x1f1c>
   129a4:	cmp	r9, #69	; 0x45
   129a8:	bne	13218 <putchar_unlocked@plt+0x1cf4>
   129ac:	mov	r2, #0
   129b0:	mov	ip, #67	; 0x43
   129b4:	b	13440 <putchar_unlocked@plt+0x1f1c>
   129b8:	cmp	r9, #0
   129bc:	bne	13054 <putchar_unlocked@plt+0x1b30>
   129c0:	movw	r5, #29724	; 0x741c
   129c4:	movt	r5, #1
   129c8:	b	12b58 <putchar_unlocked@plt+0x1634>
   129cc:	cmp	r9, #0
   129d0:	bne	13054 <putchar_unlocked@plt+0x1b30>
   129d4:	movw	r5, #29733	; 0x7425
   129d8:	movt	r5, #1
   129dc:	cmp	r4, #0
   129e0:	bne	12220 <putchar_unlocked@plt+0xcfc>
   129e4:	cmp	r7, #0
   129e8:	bge	12220 <putchar_unlocked@plt+0xcfc>
   129ec:	mov	r4, #43	; 0x2b
   129f0:	mov	r1, #4
   129f4:	b	12b58 <putchar_unlocked@plt+0x1634>
   129f8:	cmp	r9, #69	; 0x45
   129fc:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12a00:	ldr	r0, [sp, #36]	; 0x24
   12a04:	ldr	r0, [r0]
   12a08:	b	13304 <putchar_unlocked@plt+0x1de0>
   12a0c:	cmp	r9, #69	; 0x45
   12a10:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12a14:	ldr	r0, [sp, #32]
   12a18:	b	13304 <putchar_unlocked@plt+0x1de0>
   12a1c:	cmp	r9, #69	; 0x45
   12a20:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12a24:	ldr	r0, [sp, #76]	; 0x4c
   12a28:	ldr	r0, [r0, #4]
   12a2c:	b	13304 <putchar_unlocked@plt+0x1de0>
   12a30:	cmp	r9, #69	; 0x45
   12a34:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12a38:	mov	lr, r3
   12a3c:	cmp	r7, #1
   12a40:	movwlt	r7, #9
   12a44:	mov	r8, #0
   12a48:	mov	r0, #8
   12a4c:	ldr	r1, [fp, #20]
   12a50:	ldr	r9, [sp, #88]	; 0x58
   12a54:	sub	ip, fp, #46	; 0x2e
   12a58:	b	12a78 <putchar_unlocked@plt+0x1554>
   12a5c:	movw	r2, #26215	; 0x6667
   12a60:	movt	r2, #26214	; 0x6666
   12a64:	smmul	r1, r1, r2
   12a68:	asr	r2, r1, #2
   12a6c:	add	r1, r2, r1, lsr #31
   12a70:	sub	r0, r0, #1
   12a74:	sub	r8, r8, #1
   12a78:	add	r2, r8, #9
   12a7c:	cmp	r7, r2
   12a80:	blt	12a5c <putchar_unlocked@plt+0x1538>
   12a84:	movw	r3, #26215	; 0x6667
   12a88:	movt	r3, #26214	; 0x6666
   12a8c:	cmp	r2, #2
   12a90:	blt	12ab0 <putchar_unlocked@plt+0x158c>
   12a94:	smmul	r6, r1, r3
   12a98:	asr	r5, r6, #2
   12a9c:	add	r6, r5, r6, lsr #31
   12aa0:	add	r6, r6, r6, lsl #2
   12aa4:	sub	r6, r1, r6, lsl #1
   12aa8:	cmp	r6, #0
   12aac:	beq	12a5c <putchar_unlocked@plt+0x1538>
   12ab0:	cmp	r2, #1
   12ab4:	blt	12aec <putchar_unlocked@plt+0x15c8>
   12ab8:	smmul	r6, r1, r3
   12abc:	asr	r5, r6, #2
   12ac0:	add	r6, r5, r6, lsr #31
   12ac4:	add	r5, r6, r6, lsl #2
   12ac8:	sub	r1, r1, r5, lsl #1
   12acc:	add	r1, r1, #48	; 0x30
   12ad0:	strb	r1, [ip, r0]
   12ad4:	sub	r1, r0, #1
   12ad8:	add	r0, r0, #1
   12adc:	cmp	r0, #1
   12ae0:	mov	r0, r1
   12ae4:	mov	r1, r6
   12ae8:	bgt	12ab8 <putchar_unlocked@plt+0x1594>
   12aec:	cmp	r4, #0
   12af0:	movweq	r4, #48	; 0x30
   12af4:	mvn	r0, r9
   12af8:	cmp	r2, r0
   12afc:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12b00:	ldr	r0, [sp, #92]	; 0x5c
   12b04:	cmp	r0, #0
   12b08:	beq	12314 <putchar_unlocked@plt+0xdf0>
   12b0c:	tst	lr, #1
   12b10:	beq	12300 <putchar_unlocked@plt+0xddc>
   12b14:	sub	r1, fp, #46	; 0x2e
   12b18:	ldr	r0, [sp, #92]	; 0x5c
   12b1c:	bl	13888 <putchar_unlocked@plt+0x2364>
   12b20:	b	12314 <putchar_unlocked@plt+0xdf0>
   12b24:	mov	r2, #1
   12b28:	orr	r2, r6, r2
   12b2c:	eor	r0, r6, #1
   12b30:	and	r3, r3, r0
   12b34:	mov	ip, #112	; 0x70
   12b38:	b	13440 <putchar_unlocked@plt+0x1f1c>
   12b3c:	cmp	r9, #69	; 0x45
   12b40:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12b44:	ldr	r0, [sp, #76]	; 0x4c
   12b48:	ldr	r0, [r0]
   12b4c:	b	13304 <putchar_unlocked@plt+0x1de0>
   12b50:	movw	r5, #29748	; 0x7434
   12b54:	movt	r5, #1
   12b58:	str	r4, [sp]
   12b5c:	str	r1, [sp, #84]	; 0x54
   12b60:	str	r1, [sp, #4]
   12b64:	ldr	r0, [fp, #16]
   12b68:	str	r0, [sp, #8]
   12b6c:	ldr	r0, [fp, #20]
   12b70:	str	r0, [sp, #12]
   12b74:	and	r6, r3, #1
   12b78:	mov	r0, #0
   12b7c:	mov	r1, r5
   12b80:	ldr	r2, [sp, #76]	; 0x4c
   12b84:	mov	r3, r6
   12b88:	bl	12144 <putchar_unlocked@plt+0xc20>
   12b8c:	subs	r1, r4, #45	; 0x2d
   12b90:	movne	r1, r7
   12b94:	cmp	r7, #0
   12b98:	movwlt	r1, #0
   12b9c:	cmp	r1, r0
   12ba0:	mov	r7, r0
   12ba4:	movhi	r7, r1
   12ba8:	ldr	r9, [sp, #88]	; 0x58
   12bac:	mvn	r2, r9
   12bb0:	cmp	r7, r2
   12bb4:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12bb8:	ldr	r2, [sp, #92]	; 0x5c
   12bbc:	cmp	r2, #0
   12bc0:	beq	137f0 <putchar_unlocked@plt+0x22cc>
   12bc4:	str	r6, [sp, #72]	; 0x48
   12bc8:	cmp	r1, r0
   12bcc:	ldr	r8, [sp, #92]	; 0x5c
   12bd0:	bls	137c0 <putchar_unlocked@plt+0x229c>
   12bd4:	sub	r6, r1, r0
   12bd8:	cmp	r4, #43	; 0x2b
   12bdc:	cmpne	r4, #48	; 0x30
   12be0:	bne	137a0 <putchar_unlocked@plt+0x227c>
   12be4:	cmp	r6, #0
   12be8:	ldr	r8, [sp, #92]	; 0x5c
   12bec:	beq	137c0 <putchar_unlocked@plt+0x229c>
   12bf0:	mov	r0, #48	; 0x30
   12bf4:	mov	r1, r8
   12bf8:	bl	114a0 <fputc@plt>
   12bfc:	subs	r6, r6, #1
   12c00:	bne	12bf0 <putchar_unlocked@plt+0x16cc>
   12c04:	b	137c0 <putchar_unlocked@plt+0x229c>
   12c08:	cmp	r9, #69	; 0x45
   12c0c:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12c10:	ldr	r1, [sp, #76]	; 0x4c
   12c14:	ldr	r0, [r1, #24]
   12c18:	ldr	r1, [r1, #28]
   12c1c:	add	r1, r1, #7
   12c20:	sub	r0, r1, r0
   12c24:	movw	r1, #9363	; 0x2493
   12c28:	movt	r1, #37449	; 0x9249
   12c2c:	smmla	r0, r0, r1, r0
   12c30:	b	12c7c <putchar_unlocked@plt+0x1758>
   12c34:	cmp	r9, #69	; 0x45
   12c38:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12c3c:	ldr	r1, [sp, #76]	; 0x4c
   12c40:	ldr	r0, [r1, #24]
   12c44:	ldr	r1, [r1, #28]
   12c48:	add	r0, r0, #6
   12c4c:	movw	r8, #9363	; 0x2493
   12c50:	movt	r8, #37449	; 0x9249
   12c54:	mov	r5, r3
   12c58:	smmla	r3, r0, r8, r0
   12c5c:	asr	r6, r3, #2
   12c60:	add	r3, r6, r3, lsr #31
   12c64:	rsb	r3, r3, r3, lsl #3
   12c68:	sub	r0, r3, r0
   12c6c:	mov	r3, r5
   12c70:	add	r0, r1, r0
   12c74:	add	r0, r0, #7
   12c78:	smmla	r0, r0, r8, r0
   12c7c:	asr	r1, r0, #2
   12c80:	add	r0, r1, r0, lsr #31
   12c84:	b	13304 <putchar_unlocked@plt+0x1de0>
   12c88:	cmp	r9, #79	; 0x4f
   12c8c:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12c90:	mov	r2, #0
   12c94:	mov	ip, #88	; 0x58
   12c98:	b	13440 <putchar_unlocked@plt+0x1f1c>
   12c9c:	cmp	r9, #69	; 0x45
   12ca0:	beq	13794 <putchar_unlocked@plt+0x2270>
   12ca4:	cmp	r9, #79	; 0x4f
   12ca8:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12cac:	ldr	r0, [sp, #76]	; 0x4c
   12cb0:	ldr	r0, [r0, #20]
   12cb4:	movw	r2, #63636	; 0xf894
   12cb8:	movt	r2, #65535	; 0xffff
   12cbc:	mov	r1, #0
   12cc0:	cmp	r0, r2
   12cc4:	movwlt	r1, #1
   12cc8:	b	132dc <putchar_unlocked@plt+0x1db8>
   12ccc:	str	r3, [sp, #84]	; 0x54
   12cd0:	subs	r5, r4, #45	; 0x2d
   12cd4:	bicne	r5, r7, r7, asr #31
   12cd8:	ldr	r0, [sp, #40]	; 0x28
   12cdc:	bl	113d4 <strlen@plt>
   12ce0:	mov	r1, r0
   12ce4:	cmp	r5, r0
   12ce8:	mov	r8, r0
   12cec:	movhi	r8, r5
   12cf0:	ldr	r9, [sp, #88]	; 0x58
   12cf4:	mvn	r0, r9
   12cf8:	cmp	r8, r0
   12cfc:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12d00:	ldr	r0, [sp, #92]	; 0x5c
   12d04:	cmp	r0, #0
   12d08:	beq	12420 <putchar_unlocked@plt+0xefc>
   12d0c:	str	r1, [sp, #72]	; 0x48
   12d10:	cmp	r5, r1
   12d14:	bls	123c8 <putchar_unlocked@plt+0xea4>
   12d18:	ldr	r0, [sp, #72]	; 0x48
   12d1c:	sub	r7, r5, r0
   12d20:	uxtb	r0, r4
   12d24:	cmp	r0, #43	; 0x2b
   12d28:	cmpne	r0, #48	; 0x30
   12d2c:	bne	123a8 <putchar_unlocked@plt+0xe84>
   12d30:	cmp	r7, #0
   12d34:	ldr	r4, [sp, #92]	; 0x5c
   12d38:	beq	123c8 <putchar_unlocked@plt+0xea4>
   12d3c:	mov	r0, #48	; 0x30
   12d40:	mov	r1, r4
   12d44:	bl	114a0 <fputc@plt>
   12d48:	subs	r7, r7, #1
   12d4c:	bne	12d3c <putchar_unlocked@plt+0x1818>
   12d50:	b	123c8 <putchar_unlocked@plt+0xea4>
   12d54:	cmp	r9, #0
   12d58:	bne	13054 <putchar_unlocked@plt+0x1b30>
   12d5c:	orr	r3, r6, r3
   12d60:	mov	r2, #0
   12d64:	mov	ip, #97	; 0x61
   12d68:	b	13440 <putchar_unlocked@plt+0x1f1c>
   12d6c:	cmp	r9, #79	; 0x4f
   12d70:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12d74:	mov	r2, #0
   12d78:	mov	ip, #99	; 0x63
   12d7c:	b	13440 <putchar_unlocked@plt+0x1f1c>
   12d80:	cmp	r9, #69	; 0x45
   12d84:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12d88:	ldr	r0, [sp, #76]	; 0x4c
   12d8c:	ldr	r0, [r0, #12]
   12d90:	b	13304 <putchar_unlocked@plt+0x1de0>
   12d94:	cmp	r9, #69	; 0x45
   12d98:	ldr	r0, [sp, #28]
   12d9c:	bne	12dd8 <putchar_unlocked@plt+0x18b4>
   12da0:	b	13054 <putchar_unlocked@plt+0x1b30>
   12da4:	cmp	r9, #69	; 0x45
   12da8:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12dac:	ldr	r0, [sp, #76]	; 0x4c
   12db0:	ldr	r0, [r0, #28]
   12db4:	mov	r1, #0
   12db8:	cmn	r0, #1
   12dbc:	movwlt	r1, #1
   12dc0:	add	r0, r0, #1
   12dc4:	mov	r8, #3
   12dc8:	b	1330c <putchar_unlocked@plt+0x1de8>
   12dcc:	cmp	r9, #69	; 0x45
   12dd0:	ldr	r0, [sp, #36]	; 0x24
   12dd4:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12dd8:	ldr	r0, [r0]
   12ddc:	b	12dec <putchar_unlocked@plt+0x18c8>
   12de0:	cmp	r9, #69	; 0x45
   12de4:	ldr	r0, [sp, #32]
   12de8:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12dec:	cmp	r4, #0
   12df0:	movweq	r4, #95	; 0x5f
   12df4:	b	13304 <putchar_unlocked@plt+0x1de0>
   12df8:	cmp	r9, #69	; 0x45
   12dfc:	beq	13054 <putchar_unlocked@plt+0x1b30>
   12e00:	ldr	r0, [sp, #76]	; 0x4c
   12e04:	ldr	r0, [r0, #16]
   12e08:	mov	r1, #0
   12e0c:	cmn	r0, #1
   12e10:	movwlt	r1, #1
   12e14:	add	r0, r0, #1
   12e18:	mov	r8, #2
   12e1c:	b	1330c <putchar_unlocked@plt+0x1de8>
   12e20:	subs	r0, r4, #45	; 0x2d
   12e24:	bicne	r0, r7, r7, asr #31
   12e28:	cmp	r0, #1
   12e2c:	mov	r5, r0
   12e30:	movls	r5, #1
   12e34:	ldr	r9, [sp, #88]	; 0x58
   12e38:	mvn	r1, r9
   12e3c:	cmp	r5, r1
   12e40:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12e44:	ldr	r6, [sp, #92]	; 0x5c
   12e48:	cmp	r6, #0
   12e4c:	beq	136f8 <putchar_unlocked@plt+0x21d4>
   12e50:	cmp	r0, #2
   12e54:	bcc	12e98 <putchar_unlocked@plt+0x1974>
   12e58:	uxtb	r1, r4
   12e5c:	sub	r4, r0, #1
   12e60:	cmp	r1, #43	; 0x2b
   12e64:	cmpne	r1, #48	; 0x30
   12e68:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12e6c:	mov	r0, #48	; 0x30
   12e70:	mov	r1, r6
   12e74:	bl	114a0 <fputc@plt>
   12e78:	subs	r4, r4, #1
   12e7c:	bne	12e6c <putchar_unlocked@plt+0x1948>
   12e80:	b	12e98 <putchar_unlocked@plt+0x1974>
   12e84:	mov	r0, #32
   12e88:	mov	r1, r6
   12e8c:	bl	114a0 <fputc@plt>
   12e90:	subs	r4, r4, #1
   12e94:	bne	12e84 <putchar_unlocked@plt+0x1960>
   12e98:	mov	r0, #10
   12e9c:	b	136ec <putchar_unlocked@plt+0x21c8>
   12ea0:	ldr	r0, [sp, #76]	; 0x4c
   12ea4:	ldr	r0, [r0, #16]
   12ea8:	mov	r1, #11
   12eac:	mul	r0, r0, r1
   12eb0:	mov	r8, #1
   12eb4:	add	r0, r8, r0, asr #5
   12eb8:	mov	r1, #0
   12ebc:	b	1330c <putchar_unlocked@plt+0x1de8>
   12ec0:	str	r3, [sp, #84]	; 0x54
   12ec4:	mov	r0, #28
   12ec8:	ldr	r2, [sp, #76]	; 0x4c
   12ecc:	mov	r3, r2
   12ed0:	vld1.32	{d16-d17}, [r3], r0
   12ed4:	add	r2, r2, #16
   12ed8:	vld1.32	{d18-d19}, [r2]
   12edc:	add	r1, sp, #96	; 0x60
   12ee0:	add	r2, r1, #16
   12ee4:	vld1.32	{d20-d21}, [r3]
   12ee8:	vst1.64	{d18-d19}, [r2]
   12eec:	mov	r5, r1
   12ef0:	vst1.64	{d16-d17}, [r5], r0
   12ef4:	vst1.32	{d20-d21}, [r5]
   12ef8:	mvn	r0, #0
   12efc:	str	r0, [r5]
   12f00:	ldr	r0, [fp, #16]
   12f04:	bl	15c7c <putchar_unlocked@plt+0x4758>
   12f08:	ldr	r1, [r5]
   12f0c:	cmp	r1, #0
   12f10:	blt	1383c <putchar_unlocked@plt+0x2318>
   12f14:	lsr	r1, r0, #31
   12f18:	ldr	r2, [sp, #24]
   12f1c:	mov	r3, r0
   12f20:	movw	r6, #26215	; 0x6667
   12f24:	movt	r6, #26214	; 0x6666
   12f28:	smmul	r6, r3, r6
   12f2c:	asr	r5, r6, #2
   12f30:	add	r6, r5, r6, lsr #31
   12f34:	add	r5, r6, r6, lsl #2
   12f38:	sub	r5, r3, r5, lsl #1
   12f3c:	cmp	r0, #0
   12f40:	rsblt	r5, r5, #0
   12f44:	add	r5, r5, #48	; 0x30
   12f48:	strb	r5, [r2], #-1
   12f4c:	add	r3, r3, #9
   12f50:	cmp	r3, #18
   12f54:	mov	r3, r6
   12f58:	bhi	12f20 <putchar_unlocked@plt+0x19fc>
   12f5c:	add	r6, r2, #1
   12f60:	cmp	r7, #0
   12f64:	movwlt	r7, #1
   12f68:	cmp	r4, #0
   12f6c:	movweq	r4, #48	; 0x30
   12f70:	mov	r0, #0
   12f74:	mov	r8, r7
   12f78:	mov	lr, #-2147483648	; 0x80000000
   12f7c:	b	133a0 <putchar_unlocked@plt+0x1e7c>
   12f80:	subs	r0, r4, #45	; 0x2d
   12f84:	bicne	r0, r7, r7, asr #31
   12f88:	cmp	r0, #1
   12f8c:	mov	r5, r0
   12f90:	movls	r5, #1
   12f94:	ldr	r9, [sp, #88]	; 0x58
   12f98:	mvn	r1, r9
   12f9c:	cmp	r5, r1
   12fa0:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   12fa4:	ldr	r6, [sp, #92]	; 0x5c
   12fa8:	cmp	r6, #0
   12fac:	beq	136f8 <putchar_unlocked@plt+0x21d4>
   12fb0:	cmp	r0, #2
   12fb4:	bcc	12ff8 <putchar_unlocked@plt+0x1ad4>
   12fb8:	uxtb	r1, r4
   12fbc:	sub	r4, r0, #1
   12fc0:	cmp	r1, #43	; 0x2b
   12fc4:	cmpne	r1, #48	; 0x30
   12fc8:	bne	12fe4 <putchar_unlocked@plt+0x1ac0>
   12fcc:	mov	r0, #48	; 0x30
   12fd0:	mov	r1, r6
   12fd4:	bl	114a0 <fputc@plt>
   12fd8:	subs	r4, r4, #1
   12fdc:	bne	12fcc <putchar_unlocked@plt+0x1aa8>
   12fe0:	b	12ff8 <putchar_unlocked@plt+0x1ad4>
   12fe4:	mov	r0, #32
   12fe8:	mov	r1, r6
   12fec:	bl	114a0 <fputc@plt>
   12ff0:	subs	r4, r4, #1
   12ff4:	bne	12fe4 <putchar_unlocked@plt+0x1ac0>
   12ff8:	mov	r0, #9
   12ffc:	b	136ec <putchar_unlocked@plt+0x21c8>
   13000:	ldr	r0, [sp, #76]	; 0x4c
   13004:	ldr	r0, [r0, #24]
   13008:	add	r0, r0, #6
   1300c:	movw	r1, #9363	; 0x2493
   13010:	movt	r1, #37449	; 0x9249
   13014:	smmla	r1, r0, r1, r0
   13018:	asr	r2, r1, #2
   1301c:	add	r1, r2, r1, lsr #31
   13020:	rsb	r1, r1, r1, lsl #3
   13024:	sub	r0, r0, r1
   13028:	add	r0, r0, #1
   1302c:	mov	r8, #1
   13030:	b	13308 <putchar_unlocked@plt+0x1de4>
   13034:	cmp	r9, #69	; 0x45
   13038:	beq	13054 <putchar_unlocked@plt+0x1b30>
   1303c:	ldr	r0, [sp, #76]	; 0x4c
   13040:	ldr	r0, [r0, #24]
   13044:	mov	r8, #1
   13048:	b	13308 <putchar_unlocked@plt+0x1de4>
   1304c:	cmp	r9, #79	; 0x4f
   13050:	bne	13270 <putchar_unlocked@plt+0x1d4c>
   13054:	ldr	r9, [sp, #88]	; 0x58
   13058:	subs	r0, r4, #45	; 0x2d
   1305c:	bicne	r0, r7, r7, asr #31
   13060:	sub	r1, sl, r8
   13064:	add	r5, r1, #1
   13068:	cmp	r0, r5
   1306c:	mov	r6, r5
   13070:	movhi	r6, r0
   13074:	mvn	r1, r9
   13078:	cmp	r6, r1
   1307c:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   13080:	ldr	r1, [sp, #92]	; 0x5c
   13084:	cmp	r1, #0
   13088:	beq	13128 <putchar_unlocked@plt+0x1c04>
   1308c:	str	r3, [sp, #84]	; 0x54
   13090:	cmp	r0, r5
   13094:	bls	130f0 <putchar_unlocked@plt+0x1bcc>
   13098:	sub	r7, r0, r5
   1309c:	uxtb	r0, r4
   130a0:	cmp	r0, #43	; 0x2b
   130a4:	cmpne	r0, #48	; 0x30
   130a8:	bne	130d0 <putchar_unlocked@plt+0x1bac>
   130ac:	cmp	r7, #0
   130b0:	ldr	r4, [sp, #92]	; 0x5c
   130b4:	beq	130f0 <putchar_unlocked@plt+0x1bcc>
   130b8:	mov	r0, #48	; 0x30
   130bc:	mov	r1, r4
   130c0:	bl	114a0 <fputc@plt>
   130c4:	subs	r7, r7, #1
   130c8:	bne	130b8 <putchar_unlocked@plt+0x1b94>
   130cc:	b	130f0 <putchar_unlocked@plt+0x1bcc>
   130d0:	cmp	r7, #0
   130d4:	ldr	r4, [sp, #92]	; 0x5c
   130d8:	beq	130f0 <putchar_unlocked@plt+0x1bcc>
   130dc:	mov	r0, #32
   130e0:	mov	r1, r4
   130e4:	bl	114a0 <fputc@plt>
   130e8:	subs	r7, r7, #1
   130ec:	bne	130dc <putchar_unlocked@plt+0x1bb8>
   130f0:	ldr	r0, [sp, #84]	; 0x54
   130f4:	tst	r0, #1
   130f8:	beq	13110 <putchar_unlocked@plt+0x1bec>
   130fc:	ldr	r0, [sp, #92]	; 0x5c
   13100:	mov	r1, r8
   13104:	mov	r2, r5
   13108:	bl	13888 <putchar_unlocked@plt+0x2364>
   1310c:	b	13124 <putchar_unlocked@plt+0x1c00>
   13110:	mov	r0, r8
   13114:	mov	r1, r5
   13118:	mov	r2, #1
   1311c:	ldr	r3, [sp, #92]	; 0x5c
   13120:	bl	112e4 <fwrite@plt>
   13124:	mov	lr, #-2147483648	; 0x80000000
   13128:	add	r9, r6, r9
   1312c:	b	137f8 <putchar_unlocked@plt+0x22d4>
   13130:	cmp	r9, #69	; 0x45
   13134:	bne	1327c <putchar_unlocked@plt+0x1d58>
   13138:	mov	r2, #0
   1313c:	mov	ip, #121	; 0x79
   13140:	b	13440 <putchar_unlocked@plt+0x1f1c>
   13144:	sub	r0, r6, #1
   13148:	movw	r1, #365	; 0x16d
   1314c:	tst	r0, #3
   13150:	bne	13194 <putchar_unlocked@plt+0x1c70>
   13154:	movw	r1, #34079	; 0x851f
   13158:	movt	r1, #20971	; 0x51eb
   1315c:	smmul	r1, r0, r1
   13160:	asr	r2, r1, #5
   13164:	add	r2, r2, r1, lsr #31
   13168:	mov	r3, #100	; 0x64
   1316c:	mls	r2, r2, r3, r0
   13170:	asr	r3, r1, #7
   13174:	add	r1, r3, r1, lsr #31
   13178:	mov	r3, #400	; 0x190
   1317c:	mls	r0, r1, r3, r0
   13180:	movw	r1, #365	; 0x16d
   13184:	cmp	r0, #0
   13188:	movweq	r1, #366	; 0x16e
   1318c:	cmp	r2, #0
   13190:	movwne	r1, #366	; 0x16e
   13194:	add	r0, r1, r8
   13198:	ldr	r1, [sp, #72]	; 0x48
   1319c:	bl	138cc <putchar_unlocked@plt+0x23a8>
   131a0:	mov	r5, r0
   131a4:	mvn	r0, #0
   131a8:	mov	lr, #-2147483648	; 0x80000000
   131ac:	ldr	r3, [sp, #84]	; 0x54
   131b0:	ldr	ip, [sp, #48]	; 0x30
   131b4:	cmp	ip, #71	; 0x47
   131b8:	beq	132bc <putchar_unlocked@plt+0x1d98>
   131bc:	cmp	ip, #103	; 0x67
   131c0:	bne	132ec <putchar_unlocked@plt+0x1dc8>
   131c4:	movw	r1, #34079	; 0x851f
   131c8:	movt	r1, #20971	; 0x51eb
   131cc:	ldr	r5, [sp, #20]
   131d0:	smmul	r2, r5, r1
   131d4:	asr	r3, r2, #5
   131d8:	add	r2, r3, r2, lsr #31
   131dc:	mov	r3, #100	; 0x64
   131e0:	mls	r2, r2, r3, r5
   131e4:	add	r2, r0, r2
   131e8:	smmul	r1, r2, r1
   131ec:	asr	r6, r1, #5
   131f0:	add	r1, r6, r1, lsr #31
   131f4:	mls	r2, r1, r3, r2
   131f8:	mov	r8, #2
   131fc:	mov	r1, #0
   13200:	cmn	r2, #1
   13204:	ble	1222c <putchar_unlocked@plt+0xd08>
   13208:	mov	r0, r2
   1320c:	b	12244 <putchar_unlocked@plt+0xd20>
   13210:	ldr	r9, [sp, #88]	; 0x58
   13214:	b	137f8 <putchar_unlocked@plt+0x22d4>
   13218:	ldr	r0, [sp, #76]	; 0x4c
   1321c:	ldr	r2, [r0, #20]
   13220:	mov	r5, r3
   13224:	movw	r8, #63636	; 0xf894
   13228:	movt	r8, #65535	; 0xffff
   1322c:	mov	r1, #0
   13230:	cmp	r2, r8
   13234:	mov	r0, #0
   13238:	movwge	r0, #1
   1323c:	and	r0, r0, r2, lsr #31
   13240:	mvn	r6, #98	; 0x62
   13244:	smlabb	r0, r0, r6, r2
   13248:	movw	r6, #34079	; 0x851f
   1324c:	movt	r6, #20971	; 0x51eb
   13250:	smmul	r0, r0, r6
   13254:	asr	r6, r0, #5
   13258:	add	r0, r6, r0, lsr #31
   1325c:	add	r0, r0, #19
   13260:	cmp	r2, r8
   13264:	movwlt	r1, #1
   13268:	mov	r8, #2
   1326c:	b	1226c <putchar_unlocked@plt+0xd48>
   13270:	mov	r2, #0
   13274:	mov	ip, #120	; 0x78
   13278:	b	13440 <putchar_unlocked@plt+0x1f1c>
   1327c:	mov	r5, r3
   13280:	ldr	r0, [sp, #76]	; 0x4c
   13284:	ldr	r2, [r0, #20]
   13288:	movw	r0, #34079	; 0x851f
   1328c:	movt	r0, #20971	; 0x51eb
   13290:	smmul	r0, r2, r0
   13294:	asr	r1, r0, #5
   13298:	add	r0, r1, r0, lsr #31
   1329c:	mov	r1, #100	; 0x64
   132a0:	mls	r3, r0, r1, r2
   132a4:	mov	r8, #2
   132a8:	mov	r1, #0
   132ac:	cmn	r3, #1
   132b0:	ble	12250 <putchar_unlocked@plt+0xd2c>
   132b4:	mov	r0, r3
   132b8:	b	12268 <putchar_unlocked@plt+0xd44>
   132bc:	movw	r1, #63636	; 0xf894
   132c0:	movt	r1, #65535	; 0xffff
   132c4:	sub	r2, r1, r0
   132c8:	mov	r1, #0
   132cc:	ldr	r5, [sp, #20]
   132d0:	cmp	r5, r2
   132d4:	movwlt	r1, #1
   132d8:	add	r0, r5, r0
   132dc:	movw	r2, #1900	; 0x76c
   132e0:	add	r0, r0, r2
   132e4:	mov	r8, #4
   132e8:	b	1226c <putchar_unlocked@plt+0xd48>
   132ec:	movw	r0, #9363	; 0x2493
   132f0:	movt	r0, #37449	; 0x9249
   132f4:	smmla	r0, r5, r0, r5
   132f8:	asr	r1, r0, #2
   132fc:	add	r0, r1, r0, lsr #31
   13300:	add	r0, r0, #1
   13304:	mov	r8, #2
   13308:	lsr	r1, r0, #31
   1330c:	cmp	r1, #0
   13310:	movwne	r1, #1
   13314:	mov	r2, #0
   13318:	mov	r5, #0
   1331c:	str	r5, [sp, #72]	; 0x48
   13320:	cmp	r9, #79	; 0x4f
   13324:	cmpeq	r1, #0
   13328:	beq	1343c <putchar_unlocked@plt+0x1f18>
   1332c:	str	r3, [sp, #84]	; 0x54
   13330:	cmp	r1, #0
   13334:	rsbne	r0, r0, #0
   13338:	ldr	r6, [sp, #64]	; 0x40
   1333c:	tst	r2, #1
   13340:	movne	r3, #58	; 0x3a
   13344:	strbne	r3, [r6, #-1]!
   13348:	movw	r3, #52429	; 0xcccd
   1334c:	movt	r3, #52428	; 0xcccc
   13350:	umull	r3, r5, r0, r3
   13354:	lsr	r3, r5, #3
   13358:	add	r5, r3, r3, lsl #2
   1335c:	sub	r5, r0, r5, lsl #1
   13360:	orr	r5, r5, #48	; 0x30
   13364:	strb	r5, [r6, #-1]!
   13368:	asr	r2, r2, #1
   1336c:	cmp	r0, #9
   13370:	mov	r0, r3
   13374:	bhi	1333c <putchar_unlocked@plt+0x1e18>
   13378:	cmp	r2, #0
   1337c:	mov	r0, r3
   13380:	bne	1333c <putchar_unlocked@plt+0x1e18>
   13384:	cmp	r7, #0
   13388:	movge	r8, r7
   1338c:	ldr	r0, [sp, #72]	; 0x48
   13390:	cmp	r0, #0
   13394:	movwne	r0, #43	; 0x2b
   13398:	cmp	r4, #0
   1339c:	movweq	r4, #48	; 0x30
   133a0:	cmp	r1, #0
   133a4:	movwne	r0, #45	; 0x2d
   133a8:	cmp	r0, #0
   133ac:	mov	r2, r8
   133b0:	subne	r2, r2, #1
   133b4:	ldr	r1, [sp, #64]	; 0x40
   133b8:	sub	r1, r1, r6
   133bc:	str	r1, [sp, #48]	; 0x30
   133c0:	sub	r9, r2, r1
   133c4:	cmp	r9, #1
   133c8:	movwlt	r9, #0
   133cc:	subs	r7, r4, #45	; 0x2d
   133d0:	moveq	r9, r7
   133d4:	cmp	r0, #0
   133d8:	beq	13508 <putchar_unlocked@plt+0x1fe4>
   133dc:	cmp	r4, #95	; 0x5f
   133e0:	bne	13510 <putchar_unlocked@plt+0x1fec>
   133e4:	str	r0, [sp, #72]	; 0x48
   133e8:	str	r8, [sp, #20]
   133ec:	ldr	r8, [sp, #92]	; 0x5c
   133f0:	cmp	r8, #0
   133f4:	cmpne	r9, #0
   133f8:	beq	13414 <putchar_unlocked@plt+0x1ef0>
   133fc:	mov	r5, r9
   13400:	mov	r0, #32
   13404:	mov	r1, r8
   13408:	bl	114a0 <fputc@plt>
   1340c:	subs	r5, r5, #1
   13410:	bne	13400 <putchar_unlocked@plt+0x1edc>
   13414:	ldr	r8, [sp, #20]
   13418:	sub	r8, r8, r9
   1341c:	ldr	r0, [sp, #88]	; 0x58
   13420:	add	r0, r9, r0
   13424:	mov	r9, r0
   13428:	mov	lr, #-2147483648	; 0x80000000
   1342c:	ldr	r0, [sp, #72]	; 0x48
   13430:	cmn	r9, #3
   13434:	bls	1351c <putchar_unlocked@plt+0x1ff8>
   13438:	b	13820 <putchar_unlocked@plt+0x22fc>
   1343c:	mov	r2, #0
   13440:	str	r3, [sp, #84]	; 0x54
   13444:	mov	r8, r2
   13448:	movw	r0, #9504	; 0x2520
   1344c:	strh	r0, [fp, #-51]	; 0xffffffcd
   13450:	cmp	r9, #0
   13454:	ldr	r0, [sp, #68]	; 0x44
   13458:	strbne	r9, [fp, #-49]	; 0xffffffcf
   1345c:	ldrne	r0, [sp, #52]	; 0x34
   13460:	mov	r1, #0
   13464:	strb	r1, [r0, #1]
   13468:	strb	ip, [r0]
   1346c:	add	r0, sp, #96	; 0x60
   13470:	sub	r2, fp, #51	; 0x33
   13474:	mov	r1, #1024	; 0x400
   13478:	ldr	r3, [sp, #76]	; 0x4c
   1347c:	bl	1135c <strftime@plt>
   13480:	cmp	r0, #0
   13484:	beq	13500 <putchar_unlocked@plt+0x1fdc>
   13488:	subs	r1, r4, #45	; 0x2d
   1348c:	movne	r1, r7
   13490:	cmp	r7, #0
   13494:	movwlt	r1, #0
   13498:	sub	r5, r0, #1
   1349c:	cmp	r1, r5
   134a0:	mov	r7, r5
   134a4:	movhi	r7, r1
   134a8:	ldr	r9, [sp, #88]	; 0x58
   134ac:	mvn	r0, r9
   134b0:	cmp	r7, r0
   134b4:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   134b8:	ldr	r0, [sp, #92]	; 0x5c
   134bc:	cmp	r0, #0
   134c0:	beq	137f0 <putchar_unlocked@plt+0x22cc>
   134c4:	cmp	r1, r5
   134c8:	bls	135c4 <putchar_unlocked@plt+0x20a0>
   134cc:	sub	r6, r1, r5
   134d0:	cmp	r4, #43	; 0x2b
   134d4:	cmpne	r4, #48	; 0x30
   134d8:	bne	135a4 <putchar_unlocked@plt+0x2080>
   134dc:	cmp	r6, #0
   134e0:	ldr	r4, [sp, #92]	; 0x5c
   134e4:	beq	135c4 <putchar_unlocked@plt+0x20a0>
   134e8:	mov	r0, #48	; 0x30
   134ec:	mov	r1, r4
   134f0:	bl	114a0 <fputc@plt>
   134f4:	subs	r6, r6, #1
   134f8:	bne	134e8 <putchar_unlocked@plt+0x1fc4>
   134fc:	b	135c4 <putchar_unlocked@plt+0x20a0>
   13500:	ldr	r9, [sp, #88]	; 0x58
   13504:	b	137f4 <putchar_unlocked@plt+0x22d0>
   13508:	ldr	r9, [sp, #88]	; 0x58
   1350c:	b	13538 <putchar_unlocked@plt+0x2014>
   13510:	ldr	r9, [sp, #88]	; 0x58
   13514:	cmn	r9, #3
   13518:	bhi	13820 <putchar_unlocked@plt+0x22fc>
   1351c:	ldr	r1, [sp, #92]	; 0x5c
   13520:	cmp	r1, #0
   13524:	beq	13530 <putchar_unlocked@plt+0x200c>
   13528:	bl	114a0 <fputc@plt>
   1352c:	mov	lr, #-2147483648	; 0x80000000
   13530:	sub	r8, r8, #1
   13534:	add	r9, r9, #1
   13538:	cmp	r4, #45	; 0x2d
   1353c:	bicne	r7, r8, r8, asr #31
   13540:	ldr	r8, [sp, #48]	; 0x30
   13544:	cmp	r7, r8
   13548:	mov	r5, r8
   1354c:	movhi	r5, r7
   13550:	mvn	r0, r9
   13554:	cmp	r5, r0
   13558:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   1355c:	ldr	r0, [sp, #92]	; 0x5c
   13560:	cmp	r0, #0
   13564:	beq	136f8 <putchar_unlocked@plt+0x21d4>
   13568:	cmp	r7, r8
   1356c:	bls	13638 <putchar_unlocked@plt+0x2114>
   13570:	sub	r7, r7, r8
   13574:	cmp	r4, #43	; 0x2b
   13578:	cmpne	r4, #48	; 0x30
   1357c:	bne	13618 <putchar_unlocked@plt+0x20f4>
   13580:	cmp	r7, #0
   13584:	ldr	r4, [sp, #92]	; 0x5c
   13588:	beq	13638 <putchar_unlocked@plt+0x2114>
   1358c:	mov	r0, #48	; 0x30
   13590:	mov	r1, r4
   13594:	bl	114a0 <fputc@plt>
   13598:	subs	r7, r7, #1
   1359c:	bne	1358c <putchar_unlocked@plt+0x2068>
   135a0:	b	13638 <putchar_unlocked@plt+0x2114>
   135a4:	cmp	r6, #0
   135a8:	ldr	r4, [sp, #92]	; 0x5c
   135ac:	beq	135c4 <putchar_unlocked@plt+0x20a0>
   135b0:	mov	r0, #32
   135b4:	mov	r1, r4
   135b8:	bl	114a0 <fputc@plt>
   135bc:	subs	r6, r6, #1
   135c0:	bne	135b0 <putchar_unlocked@plt+0x208c>
   135c4:	tst	r8, #1
   135c8:	beq	135e0 <putchar_unlocked@plt+0x20bc>
   135cc:	ldr	r0, [sp, #92]	; 0x5c
   135d0:	ldr	r1, [sp, #44]	; 0x2c
   135d4:	mov	r2, r5
   135d8:	bl	13844 <putchar_unlocked@plt+0x2320>
   135dc:	b	137f0 <putchar_unlocked@plt+0x22cc>
   135e0:	ldr	r0, [sp, #84]	; 0x54
   135e4:	tst	r0, #1
   135e8:	beq	13600 <putchar_unlocked@plt+0x20dc>
   135ec:	ldr	r0, [sp, #92]	; 0x5c
   135f0:	ldr	r1, [sp, #44]	; 0x2c
   135f4:	mov	r2, r5
   135f8:	bl	13888 <putchar_unlocked@plt+0x2364>
   135fc:	b	137f0 <putchar_unlocked@plt+0x22cc>
   13600:	ldr	r0, [sp, #44]	; 0x2c
   13604:	mov	r1, r5
   13608:	mov	r2, #1
   1360c:	ldr	r3, [sp, #92]	; 0x5c
   13610:	bl	112e4 <fwrite@plt>
   13614:	b	137f0 <putchar_unlocked@plt+0x22cc>
   13618:	cmp	r7, #0
   1361c:	ldr	r4, [sp, #92]	; 0x5c
   13620:	beq	13638 <putchar_unlocked@plt+0x2114>
   13624:	mov	r0, #32
   13628:	mov	r1, r4
   1362c:	bl	114a0 <fputc@plt>
   13630:	subs	r7, r7, #1
   13634:	bne	13624 <putchar_unlocked@plt+0x2100>
   13638:	ldr	r0, [sp, #84]	; 0x54
   1363c:	tst	r0, #1
   13640:	beq	13658 <putchar_unlocked@plt+0x2134>
   13644:	ldr	r0, [sp, #92]	; 0x5c
   13648:	mov	r1, r6
   1364c:	mov	r2, r8
   13650:	bl	13888 <putchar_unlocked@plt+0x2364>
   13654:	b	136f4 <putchar_unlocked@plt+0x21d0>
   13658:	mov	r0, r6
   1365c:	mov	r1, r8
   13660:	mov	r2, #1
   13664:	ldr	r3, [sp, #92]	; 0x5c
   13668:	bl	112e4 <fwrite@plt>
   1366c:	b	136f4 <putchar_unlocked@plt+0x21d0>
   13670:	subs	r0, r4, #45	; 0x2d
   13674:	bicne	r0, r7, r7, asr #31
   13678:	cmp	r0, #1
   1367c:	mov	r5, r0
   13680:	movls	r5, #1
   13684:	ldr	r9, [sp, #88]	; 0x58
   13688:	mvn	r1, r9
   1368c:	cmp	r5, r1
   13690:	bcs	13820 <putchar_unlocked@plt+0x22fc>
   13694:	ldr	r6, [sp, #92]	; 0x5c
   13698:	cmp	r6, #0
   1369c:	beq	136f8 <putchar_unlocked@plt+0x21d4>
   136a0:	cmp	r0, #2
   136a4:	bcc	136e8 <putchar_unlocked@plt+0x21c4>
   136a8:	uxtb	r1, r4
   136ac:	sub	r4, r0, #1
   136b0:	cmp	r1, #43	; 0x2b
   136b4:	cmpne	r1, #48	; 0x30
   136b8:	bne	136d4 <putchar_unlocked@plt+0x21b0>
   136bc:	mov	r0, #48	; 0x30
   136c0:	mov	r1, r6
   136c4:	bl	114a0 <fputc@plt>
   136c8:	subs	r4, r4, #1
   136cc:	bne	136bc <putchar_unlocked@plt+0x2198>
   136d0:	b	136e8 <putchar_unlocked@plt+0x21c4>
   136d4:	mov	r0, #32
   136d8:	mov	r1, r6
   136dc:	bl	114a0 <fputc@plt>
   136e0:	subs	r4, r4, #1
   136e4:	bne	136d4 <putchar_unlocked@plt+0x21b0>
   136e8:	ldrb	r0, [sl]
   136ec:	mov	r1, r6
   136f0:	bl	114a0 <fputc@plt>
   136f4:	mov	lr, #-2147483648	; 0x80000000
   136f8:	add	r9, r5, r9
   136fc:	b	137f8 <putchar_unlocked@plt+0x22d4>
   13700:	mov	r1, #1
   13704:	cmp	r5, #3
   13708:	bhi	12968 <putchar_unlocked@plt+0x1444>
   1370c:	mov	r8, ip
   13710:	movw	r0, #34953	; 0x8889
   13714:	movt	r0, #34952	; 0x8888
   13718:	smmla	r3, r2, r0, r2
   1371c:	asr	r6, r3, #5
   13720:	add	r6, r6, r3, lsr #31
   13724:	smmla	r0, r6, r0, r6
   13728:	asr	r3, r0, #5
   1372c:	add	r0, r3, r0, lsr #31
   13730:	rsb	r0, r0, r0, lsl #4
   13734:	sub	ip, r6, r0, lsl #2
   13738:	movw	r0, #46021	; 0xb3c5
   1373c:	movt	r0, #37282	; 0x91a2
   13740:	smmla	r0, r2, r0, r2
   13744:	mov	r3, r5
   13748:	asr	r5, r0, #11
   1374c:	add	r0, r5, r0, lsr #31
   13750:	rsb	r6, r6, r6, lsl #4
   13754:	sub	r2, r2, r6, lsl #2
   13758:	add	r6, pc, #0
   1375c:	ldr	pc, [r6, r3, lsl #2]
   13760:	andeq	r3, r1, r0, ror r7
   13764:	andeq	r2, r1, r0, lsr r4
   13768:	ldrdeq	r2, [r1], -r4
   1376c:	andeq	r2, r1, ip, asr #5
   13770:	mov	r2, #100	; 0x64
   13774:	mla	r0, r0, r2, ip
   13778:	mov	r2, #1
   1377c:	str	r2, [sp, #72]	; 0x48
   13780:	mov	r2, #0
   13784:	ldr	r3, [sp, #84]	; 0x54
   13788:	mov	ip, r8
   1378c:	mov	r8, #5
   13790:	b	13320 <putchar_unlocked@plt+0x1dfc>
   13794:	mov	r2, #0
   13798:	mov	ip, #89	; 0x59
   1379c:	b	13440 <putchar_unlocked@plt+0x1f1c>
   137a0:	cmp	r6, #0
   137a4:	ldr	r8, [sp, #92]	; 0x5c
   137a8:	beq	137c0 <putchar_unlocked@plt+0x229c>
   137ac:	mov	r0, #32
   137b0:	mov	r1, r8
   137b4:	bl	114a0 <fputc@plt>
   137b8:	subs	r6, r6, #1
   137bc:	bne	137ac <putchar_unlocked@plt+0x2288>
   137c0:	str	r4, [sp]
   137c4:	ldr	r0, [sp, #84]	; 0x54
   137c8:	str	r0, [sp, #4]
   137cc:	ldr	r0, [fp, #16]
   137d0:	str	r0, [sp, #8]
   137d4:	ldr	r0, [fp, #20]
   137d8:	str	r0, [sp, #12]
   137dc:	mov	r0, r8
   137e0:	mov	r1, r5
   137e4:	ldr	r2, [sp, #76]	; 0x4c
   137e8:	ldr	r3, [sp, #72]	; 0x48
   137ec:	bl	12144 <putchar_unlocked@plt+0xc20>
   137f0:	add	r9, r7, r9
   137f4:	mov	lr, #-2147483648	; 0x80000000
   137f8:	movw	r2, #52428	; 0xcccc
   137fc:	movt	r2, #3276	; 0xccc
   13800:	ldrb	r0, [sl, #1]!
   13804:	mvn	r7, #0
   13808:	cmp	r0, #0
   1380c:	bne	12470 <putchar_unlocked@plt+0xf4c>
   13810:	ldr	r0, [sp, #60]	; 0x3c
   13814:	ldr	r1, [sp, #56]	; 0x38
   13818:	str	r1, [r0]
   1381c:	b	13830 <putchar_unlocked@plt+0x230c>
   13820:	mov	r0, #34	; 0x22
   13824:	ldr	r1, [sp, #60]	; 0x3c
   13828:	str	r0, [r1]
   1382c:	mov	r9, #0
   13830:	mov	r0, r9
   13834:	sub	sp, fp, #28
   13838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1383c:	mov	r0, #75	; 0x4b
   13840:	b	13824 <putchar_unlocked@plt+0x2300>
   13844:	push	{r4, r5, r6, r7, fp, lr}
   13848:	add	fp, sp, #16
   1384c:	cmp	r2, #0
   13850:	popeq	{r4, r5, r6, r7, fp, pc}
   13854:	mov	r4, r2
   13858:	mov	r5, r1
   1385c:	mov	r6, r0
   13860:	bl	11380 <__ctype_tolower_loc@plt>
   13864:	mov	r7, r0
   13868:	ldrb	r0, [r5], #1
   1386c:	ldr	r1, [r7]
   13870:	ldr	r0, [r1, r0, lsl #2]
   13874:	mov	r1, r6
   13878:	bl	114a0 <fputc@plt>
   1387c:	subs	r4, r4, #1
   13880:	bne	13868 <putchar_unlocked@plt+0x2344>
   13884:	pop	{r4, r5, r6, r7, fp, pc}
   13888:	push	{r4, r5, r6, r7, fp, lr}
   1388c:	add	fp, sp, #16
   13890:	cmp	r2, #0
   13894:	popeq	{r4, r5, r6, r7, fp, pc}
   13898:	mov	r4, r2
   1389c:	mov	r5, r1
   138a0:	mov	r6, r0
   138a4:	bl	1138c <__ctype_toupper_loc@plt>
   138a8:	mov	r7, r0
   138ac:	ldrb	r0, [r5], #1
   138b0:	ldr	r1, [r7]
   138b4:	ldr	r0, [r1, r0, lsl #2]
   138b8:	mov	r1, r6
   138bc:	bl	114a0 <fputc@plt>
   138c0:	subs	r4, r4, #1
   138c4:	bne	138ac <putchar_unlocked@plt+0x2388>
   138c8:	pop	{r4, r5, r6, r7, fp, pc}
   138cc:	movw	r2, #382	; 0x17e
   138d0:	add	r2, r0, r2
   138d4:	sub	r1, r2, r1
   138d8:	movw	r2, #9363	; 0x2493
   138dc:	movt	r2, #37449	; 0x9249
   138e0:	smmla	r2, r1, r2, r1
   138e4:	asr	r3, r2, #2
   138e8:	add	r2, r3, r2, lsr #31
   138ec:	rsb	r2, r2, r2, lsl #3
   138f0:	sub	r1, r2, r1
   138f4:	add	r0, r0, r1
   138f8:	add	r0, r0, #3
   138fc:	bx	lr
   13900:	push	{r4, r5, r6, r7, fp, lr}
   13904:	add	fp, sp, #16
   13908:	sub	sp, sp, #8
   1390c:	mov	r5, r3
   13910:	mov	r6, r2
   13914:	mov	r4, r0
   13918:	ldr	r0, [r0, #4]
   1391c:	ldr	r1, [r4, #8]
   13920:	cmp	r1, r0
   13924:	bne	13940 <putchar_unlocked@plt+0x241c>
   13928:	ldrd	r0, [r4, #16]
   1392c:	cmp	r1, r0
   13930:	bne	13940 <putchar_unlocked@plt+0x241c>
   13934:	ldr	r0, [r4, #36]	; 0x24
   13938:	cmp	r0, #0
   1393c:	beq	13958 <putchar_unlocked@plt+0x2434>
   13940:	mov	r0, r4
   13944:	mov	r2, r6
   13948:	mov	r3, r5
   1394c:	sub	sp, fp, #16
   13950:	pop	{r4, r5, r6, r7, fp, lr}
   13954:	b	1144c <fseeko64@plt>
   13958:	ldr	r7, [fp, #8]
   1395c:	mov	r0, r4
   13960:	bl	11428 <fileno@plt>
   13964:	str	r7, [sp]
   13968:	mov	r2, r6
   1396c:	mov	r3, r5
   13970:	bl	112f0 <lseek64@plt>
   13974:	and	r2, r0, r1
   13978:	cmn	r2, #1
   1397c:	mvneq	r0, #0
   13980:	subeq	sp, fp, #16
   13984:	popeq	{r4, r5, r6, r7, fp, pc}
   13988:	strd	r0, [r4, #80]	; 0x50
   1398c:	ldr	r0, [r4]
   13990:	bic	r0, r0, #16
   13994:	str	r0, [r4]
   13998:	mov	r0, #0
   1399c:	sub	sp, fp, #16
   139a0:	pop	{r4, r5, r6, r7, fp, pc}
   139a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139a8:	add	fp, sp, #24
   139ac:	sub	sp, sp, #8
   139b0:	movw	r6, #33168	; 0x8190
   139b4:	movt	r6, #2
   139b8:	ldr	r7, [r6]
   139bc:	mov	r4, #0
   139c0:	str	r4, [r6]
   139c4:	cmp	r0, #2
   139c8:	bne	13a38 <putchar_unlocked@plt+0x2514>
   139cc:	mov	r8, r3
   139d0:	mov	r5, r2
   139d4:	str	r4, [sp]
   139d8:	movw	r2, #29757	; 0x743d
   139dc:	movt	r2, #1
   139e0:	movw	r3, #29772	; 0x744c
   139e4:	movt	r3, #1
   139e8:	bl	113a4 <getopt_long@plt>
   139ec:	cmp	r0, #104	; 0x68
   139f0:	beq	13a2c <putchar_unlocked@plt+0x2508>
   139f4:	cmp	r0, #118	; 0x76
   139f8:	bne	13a38 <putchar_unlocked@plt+0x2514>
   139fc:	ldr	r3, [fp, #8]
   13a00:	add	r1, fp, #16
   13a04:	str	r1, [sp, #4]
   13a08:	movw	r0, #33164	; 0x818c
   13a0c:	movt	r0, #2
   13a10:	ldr	r0, [r0]
   13a14:	str	r1, [sp]
   13a18:	mov	r1, r5
   13a1c:	mov	r2, r8
   13a20:	bl	16130 <putchar_unlocked@plt+0x4c0c>
   13a24:	mov	r0, #0
   13a28:	bl	113c8 <exit@plt>
   13a2c:	ldr	r1, [fp, #12]
   13a30:	mov	r0, #0
   13a34:	blx	r1
   13a38:	movw	r0, #33152	; 0x8180
   13a3c:	movt	r0, #2
   13a40:	str	r4, [r0]
   13a44:	str	r7, [r6]
   13a48:	sub	sp, fp, #24
   13a4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a54:	add	fp, sp, #24
   13a58:	sub	sp, sp, #8
   13a5c:	mov	r8, r3
   13a60:	mov	r5, r2
   13a64:	movw	r6, #33168	; 0x8190
   13a68:	movt	r6, #2
   13a6c:	ldr	r7, [r6]
   13a70:	mov	r2, #1
   13a74:	str	r2, [r6]
   13a78:	mov	r2, #0
   13a7c:	str	r2, [sp]
   13a80:	ldr	r3, [fp, #12]
   13a84:	movw	r4, #28896	; 0x70e0
   13a88:	movt	r4, #1
   13a8c:	movw	r2, #29757	; 0x743d
   13a90:	movt	r2, #1
   13a94:	cmp	r3, #0
   13a98:	movne	r2, r4
   13a9c:	movw	r3, #29772	; 0x744c
   13aa0:	movt	r3, #1
   13aa4:	bl	113a4 <getopt_long@plt>
   13aa8:	cmn	r0, #1
   13aac:	beq	13adc <putchar_unlocked@plt+0x25b8>
   13ab0:	ldr	r1, [fp, #16]
   13ab4:	cmp	r0, #104	; 0x68
   13ab8:	beq	13ad4 <putchar_unlocked@plt+0x25b0>
   13abc:	cmp	r0, #118	; 0x76
   13ac0:	beq	13ae8 <putchar_unlocked@plt+0x25c4>
   13ac4:	movw	r0, #33076	; 0x8134
   13ac8:	movt	r0, #2
   13acc:	ldr	r0, [r0]
   13ad0:	b	13ad8 <putchar_unlocked@plt+0x25b4>
   13ad4:	mov	r0, #0
   13ad8:	blx	r1
   13adc:	str	r7, [r6]
   13ae0:	sub	sp, fp, #24
   13ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ae8:	ldr	r3, [fp, #8]
   13aec:	add	r1, fp, #20
   13af0:	str	r1, [sp, #4]
   13af4:	movw	r0, #33164	; 0x818c
   13af8:	movt	r0, #2
   13afc:	ldr	r0, [r0]
   13b00:	str	r1, [sp]
   13b04:	mov	r1, r5
   13b08:	mov	r2, r8
   13b0c:	bl	16130 <putchar_unlocked@plt+0x4c0c>
   13b10:	mov	r0, #0
   13b14:	bl	113c8 <exit@plt>
   13b18:	push	{r4, r5, fp, lr}
   13b1c:	add	fp, sp, #8
   13b20:	cmp	r0, #0
   13b24:	beq	13bb8 <putchar_unlocked@plt+0x2694>
   13b28:	mov	r4, r0
   13b2c:	mov	r1, #47	; 0x2f
   13b30:	bl	11488 <strrchr@plt>
   13b34:	cmp	r0, #0
   13b38:	mov	r5, r4
   13b3c:	addne	r5, r0, #1
   13b40:	sub	r0, r5, r4
   13b44:	cmp	r0, #7
   13b48:	blt	13b9c <putchar_unlocked@plt+0x2678>
   13b4c:	sub	r0, r5, #7
   13b50:	movw	r1, #29876	; 0x74b4
   13b54:	movt	r1, #1
   13b58:	mov	r2, #7
   13b5c:	bl	114f4 <strncmp@plt>
   13b60:	cmp	r0, #0
   13b64:	bne	13b9c <putchar_unlocked@plt+0x2678>
   13b68:	movw	r1, #29884	; 0x74bc
   13b6c:	movt	r1, #1
   13b70:	mov	r0, r5
   13b74:	mov	r2, #3
   13b78:	bl	114f4 <strncmp@plt>
   13b7c:	cmp	r0, #0
   13b80:	beq	13b8c <putchar_unlocked@plt+0x2668>
   13b84:	mov	r4, r5
   13b88:	b	13b9c <putchar_unlocked@plt+0x2678>
   13b8c:	add	r4, r5, #3
   13b90:	movw	r0, #33144	; 0x8178
   13b94:	movt	r0, #2
   13b98:	str	r4, [r0]
   13b9c:	movw	r0, #33148	; 0x817c
   13ba0:	movt	r0, #2
   13ba4:	str	r4, [r0]
   13ba8:	movw	r0, #33188	; 0x81a4
   13bac:	movt	r0, #2
   13bb0:	str	r4, [r0]
   13bb4:	pop	{r4, r5, fp, pc}
   13bb8:	movw	r0, #33160	; 0x8188
   13bbc:	movt	r0, #2
   13bc0:	ldr	r3, [r0]
   13bc4:	movw	r0, #29820	; 0x747c
   13bc8:	movt	r0, #1
   13bcc:	mov	r1, #55	; 0x37
   13bd0:	mov	r2, #1
   13bd4:	bl	112e4 <fwrite@plt>
   13bd8:	bl	11500 <abort@plt>
   13bdc:	push	{r4, r5, r6, sl, fp, lr}
   13be0:	add	fp, sp, #16
   13be4:	mov	r4, r0
   13be8:	movw	r0, #33192	; 0x81a8
   13bec:	movt	r0, #2
   13bf0:	cmp	r4, #0
   13bf4:	moveq	r4, r0
   13bf8:	bl	113ec <__errno_location@plt>
   13bfc:	mov	r5, r0
   13c00:	ldr	r6, [r0]
   13c04:	mov	r0, r4
   13c08:	mov	r1, #48	; 0x30
   13c0c:	bl	16578 <putchar_unlocked@plt+0x5054>
   13c10:	str	r6, [r5]
   13c14:	pop	{r4, r5, r6, sl, fp, pc}
   13c18:	movw	r1, #33192	; 0x81a8
   13c1c:	movt	r1, #2
   13c20:	cmp	r0, #0
   13c24:	movne	r1, r0
   13c28:	ldr	r0, [r1]
   13c2c:	bx	lr
   13c30:	movw	r2, #33192	; 0x81a8
   13c34:	movt	r2, #2
   13c38:	cmp	r0, #0
   13c3c:	movne	r2, r0
   13c40:	str	r1, [r2]
   13c44:	bx	lr
   13c48:	movw	r3, #33192	; 0x81a8
   13c4c:	movt	r3, #2
   13c50:	cmp	r0, #0
   13c54:	movne	r3, r0
   13c58:	ubfx	r0, r1, #5, #3
   13c5c:	add	r0, r3, r0, lsl #2
   13c60:	ldr	r3, [r0, #8]
   13c64:	and	r1, r1, #31
   13c68:	eor	r2, r2, r3, lsr r1
   13c6c:	and	r2, r2, #1
   13c70:	eor	r2, r3, r2, lsl r1
   13c74:	str	r2, [r0, #8]
   13c78:	mov	r0, #1
   13c7c:	and	r0, r0, r3, lsr r1
   13c80:	bx	lr
   13c84:	movw	r2, #33192	; 0x81a8
   13c88:	movt	r2, #2
   13c8c:	cmp	r0, #0
   13c90:	movne	r2, r0
   13c94:	ldr	r0, [r2, #4]
   13c98:	str	r1, [r2, #4]
   13c9c:	bx	lr
   13ca0:	movw	r3, #33192	; 0x81a8
   13ca4:	movt	r3, #2
   13ca8:	cmp	r0, #0
   13cac:	movne	r3, r0
   13cb0:	mov	r0, #10
   13cb4:	str	r0, [r3]
   13cb8:	cmp	r1, #0
   13cbc:	cmpne	r2, #0
   13cc0:	bne	13cd0 <putchar_unlocked@plt+0x27ac>
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	bl	11500 <abort@plt>
   13cd0:	str	r1, [r3, #40]	; 0x28
   13cd4:	str	r2, [r3, #44]	; 0x2c
   13cd8:	bx	lr
   13cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce0:	add	fp, sp, #28
   13ce4:	sub	sp, sp, #20
   13ce8:	mov	r8, r3
   13cec:	mov	r9, r2
   13cf0:	mov	sl, r1
   13cf4:	mov	r7, r0
   13cf8:	ldr	r0, [fp, #8]
   13cfc:	movw	r5, #33192	; 0x81a8
   13d00:	movt	r5, #2
   13d04:	cmp	r0, #0
   13d08:	movne	r5, r0
   13d0c:	bl	113ec <__errno_location@plt>
   13d10:	mov	r4, r0
   13d14:	ldm	r5, {r0, r1}
   13d18:	ldr	r2, [r5, #40]	; 0x28
   13d1c:	ldr	r3, [r5, #44]	; 0x2c
   13d20:	ldr	r6, [r4]
   13d24:	add	r5, r5, #8
   13d28:	stm	sp, {r0, r1, r5}
   13d2c:	str	r2, [sp, #12]
   13d30:	str	r3, [sp, #16]
   13d34:	mov	r0, r7
   13d38:	mov	r1, sl
   13d3c:	mov	r2, r9
   13d40:	mov	r3, r8
   13d44:	bl	13d54 <putchar_unlocked@plt+0x2830>
   13d48:	str	r6, [r4]
   13d4c:	sub	sp, fp, #28
   13d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d58:	add	fp, sp, #28
   13d5c:	sub	sp, sp, #156	; 0x9c
   13d60:	mov	r9, r3
   13d64:	str	r2, [fp, #-84]	; 0xffffffac
   13d68:	mov	r6, r1
   13d6c:	mov	r7, r0
   13d70:	ldr	r0, [fp, #12]
   13d74:	and	r1, r0, #4
   13d78:	str	r1, [sp, #32]
   13d7c:	and	r1, r0, #1
   13d80:	str	r1, [sp, #36]	; 0x24
   13d84:	ubfx	sl, r0, #1, #1
   13d88:	bl	112fc <__ctype_get_mb_cur_max@plt>
   13d8c:	str	r0, [sp, #40]	; 0x28
   13d90:	ldr	r0, [fp, #24]
   13d94:	str	r0, [sp, #76]	; 0x4c
   13d98:	ldr	r0, [fp, #20]
   13d9c:	str	r0, [sp, #68]	; 0x44
   13da0:	ldr	r0, [fp, #8]
   13da4:	str	r0, [fp, #-60]	; 0xffffffc4
   13da8:	mov	r0, #0
   13dac:	str	r0, [sp, #72]	; 0x48
   13db0:	mov	r0, #0
   13db4:	str	r0, [sp, #92]	; 0x5c
   13db8:	mov	r0, #0
   13dbc:	str	r0, [fp, #-72]	; 0xffffffb8
   13dc0:	mov	r0, #0
   13dc4:	mov	r1, #0
   13dc8:	str	r1, [fp, #-56]	; 0xffffffc8
   13dcc:	mov	r1, #0
   13dd0:	str	r1, [sp, #56]	; 0x38
   13dd4:	mov	r5, #1
   13dd8:	str	r7, [sp, #80]	; 0x50
   13ddc:	mov	r4, r6
   13de0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13de4:	cmp	r6, #10
   13de8:	bhi	14d50 <putchar_unlocked@plt+0x382c>
   13dec:	add	r1, pc, #20
   13df0:	mov	r8, #0
   13df4:	mov	r2, #1
   13df8:	mov	r3, #0
   13dfc:	ldr	ip, [fp, #-84]	; 0xffffffac
   13e00:	mov	lr, r9
   13e04:	ldr	pc, [r1, r6, lsl #2]
   13e08:	andeq	r3, r1, r0, ror #29
   13e0c:	andeq	r3, r1, r0, lsl pc
   13e10:	ldrdeq	r3, [r1], -r0
   13e14:	andeq	r3, r1, r8, asr #29
   13e18:	andeq	r3, r1, r4, lsl #30
   13e1c:	andeq	r3, r1, r4, ror #30
   13e20:	strdeq	r3, [r1], -r0
   13e24:	andeq	r3, r1, r0, asr #31
   13e28:	andeq	r3, r1, r4, lsr lr
   13e2c:	andeq	r3, r1, r4, lsr lr
   13e30:	andeq	r3, r1, ip, asr lr
   13e34:	movw	r0, #29968	; 0x7510
   13e38:	movt	r0, #1
   13e3c:	mov	r1, r6
   13e40:	bl	1535c <putchar_unlocked@plt+0x3e38>
   13e44:	str	r0, [sp, #68]	; 0x44
   13e48:	movw	r0, #29970	; 0x7512
   13e4c:	movt	r0, #1
   13e50:	mov	r1, r6
   13e54:	bl	1535c <putchar_unlocked@plt+0x3e38>
   13e58:	str	r0, [sp, #76]	; 0x4c
   13e5c:	mov	r8, #0
   13e60:	tst	sl, #1
   13e64:	bne	13e9c <putchar_unlocked@plt+0x2978>
   13e68:	ldr	r0, [sp, #68]	; 0x44
   13e6c:	ldrb	r0, [r0]
   13e70:	cmp	r0, #0
   13e74:	beq	13e9c <putchar_unlocked@plt+0x2978>
   13e78:	ldr	r1, [sp, #68]	; 0x44
   13e7c:	add	r1, r1, #1
   13e80:	mov	r8, #0
   13e84:	cmp	r8, r4
   13e88:	strbcc	r0, [r7, r8]
   13e8c:	ldrb	r0, [r1, r8]
   13e90:	add	r8, r8, #1
   13e94:	cmp	r0, #0
   13e98:	bne	13e84 <putchar_unlocked@plt+0x2960>
   13e9c:	ldr	r6, [sp, #76]	; 0x4c
   13ea0:	mov	r0, r6
   13ea4:	bl	113d4 <strlen@plt>
   13ea8:	str	r0, [fp, #-72]	; 0xffffffb8
   13eac:	str	r6, [sp, #92]	; 0x5c
   13eb0:	mov	r2, #1
   13eb4:	mov	r3, sl
   13eb8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ebc:	mov	lr, r9
   13ec0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13ec4:	b	13fc0 <putchar_unlocked@plt+0x2a9c>
   13ec8:	mov	r0, #1
   13ecc:	b	13f10 <putchar_unlocked@plt+0x29ec>
   13ed0:	tst	sl, #1
   13ed4:	bne	13f10 <putchar_unlocked@plt+0x29ec>
   13ed8:	mov	r2, r0
   13edc:	b	13f38 <putchar_unlocked@plt+0x2a14>
   13ee0:	mov	r6, #0
   13ee4:	mov	r8, #0
   13ee8:	mov	r2, r0
   13eec:	b	13fbc <putchar_unlocked@plt+0x2a98>
   13ef0:	mov	r0, #1
   13ef4:	str	r0, [fp, #-72]	; 0xffffffb8
   13ef8:	mov	r8, #0
   13efc:	mov	r6, #5
   13f00:	b	13f7c <putchar_unlocked@plt+0x2a58>
   13f04:	mov	r2, #1
   13f08:	tst	sl, #1
   13f0c:	beq	13f38 <putchar_unlocked@plt+0x2a14>
   13f10:	mov	r1, #1
   13f14:	str	r1, [fp, #-72]	; 0xffffffb8
   13f18:	mov	r8, #0
   13f1c:	mov	r6, #2
   13f20:	movw	r1, #29970	; 0x7512
   13f24:	movt	r1, #1
   13f28:	str	r1, [sp, #92]	; 0x5c
   13f2c:	mov	r2, r0
   13f30:	mov	r3, #1
   13f34:	b	13fc0 <putchar_unlocked@plt+0x2a9c>
   13f38:	mov	r8, #1
   13f3c:	mov	r6, #2
   13f40:	cmp	r4, #0
   13f44:	movne	r0, #39	; 0x27
   13f48:	strbne	r0, [r7]
   13f4c:	movw	r0, #29970	; 0x7512
   13f50:	movt	r0, #1
   13f54:	str	r0, [sp, #92]	; 0x5c
   13f58:	mov	r0, #1
   13f5c:	str	r0, [fp, #-72]	; 0xffffffb8
   13f60:	b	13fbc <putchar_unlocked@plt+0x2a98>
   13f64:	mov	r6, #5
   13f68:	tst	sl, #1
   13f6c:	beq	13f94 <putchar_unlocked@plt+0x2a70>
   13f70:	mov	r0, #1
   13f74:	str	r0, [fp, #-72]	; 0xffffffb8
   13f78:	mov	r8, #0
   13f7c:	movw	r0, #29966	; 0x750e
   13f80:	movt	r0, #1
   13f84:	str	r0, [sp, #92]	; 0x5c
   13f88:	mov	r2, #1
   13f8c:	mov	r3, #1
   13f90:	b	13fc0 <putchar_unlocked@plt+0x2a9c>
   13f94:	cmp	r4, #0
   13f98:	movne	r0, #34	; 0x22
   13f9c:	strbne	r0, [r7]
   13fa0:	mov	r8, #1
   13fa4:	movw	r0, #29966	; 0x750e
   13fa8:	movt	r0, #1
   13fac:	str	r0, [sp, #92]	; 0x5c
   13fb0:	mov	r0, #1
   13fb4:	str	r0, [fp, #-72]	; 0xffffffb8
   13fb8:	mov	r2, #1
   13fbc:	mov	r3, #0
   13fc0:	ldr	r0, [fp, #16]
   13fc4:	cmp	r0, #0
   13fc8:	movwne	r0, #1
   13fcc:	and	r0, r0, r3
   13fd0:	str	r0, [fp, #-88]	; 0xffffffa8
   13fd4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13fd8:	cmp	r0, #0
   13fdc:	movwne	r0, #1
   13fe0:	and	r1, r0, r3
   13fe4:	and	r1, r2, r1
   13fe8:	str	r1, [sp, #48]	; 0x30
   13fec:	str	r6, [fp, #-60]	; 0xffffffc4
   13ff0:	subs	r6, r6, #2
   13ff4:	clz	r1, r6
   13ff8:	lsr	r1, r1, #5
   13ffc:	and	r1, r1, r3
   14000:	str	r1, [sp, #60]	; 0x3c
   14004:	str	r6, [fp, #-80]	; 0xffffffb0
   14008:	mov	r1, r6
   1400c:	movwne	r1, #1
   14010:	str	r3, [fp, #-76]	; 0xffffffb4
   14014:	eor	r3, r3, #1
   14018:	str	r3, [sp, #88]	; 0x58
   1401c:	orr	r3, r1, r3
   14020:	str	r3, [sp, #64]	; 0x40
   14024:	and	r1, r1, r2
   14028:	str	r1, [fp, #-68]	; 0xffffffbc
   1402c:	and	r0, r0, r1
   14030:	str	r0, [fp, #-64]	; 0xffffffc0
   14034:	str	r2, [sp, #84]	; 0x54
   14038:	eor	r0, r2, #1
   1403c:	str	r0, [sp, #52]	; 0x34
   14040:	mov	r6, #0
   14044:	cmn	lr, #1
   14048:	beq	14058 <putchar_unlocked@plt+0x2b34>
   1404c:	cmp	r6, lr
   14050:	bne	14064 <putchar_unlocked@plt+0x2b40>
   14054:	b	14bd0 <putchar_unlocked@plt+0x36ac>
   14058:	ldrb	r0, [ip, r6]
   1405c:	cmp	r0, #0
   14060:	beq	14bd0 <putchar_unlocked@plt+0x36ac>
   14064:	str	r5, [fp, #-48]	; 0xffffffd0
   14068:	mov	sl, #0
   1406c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14070:	cmp	r0, #0
   14074:	beq	140a8 <putchar_unlocked@plt+0x2b84>
   14078:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1407c:	add	r5, r6, r0
   14080:	cmp	r0, #2
   14084:	bcc	140a0 <putchar_unlocked@plt+0x2b7c>
   14088:	cmn	lr, #1
   1408c:	bne	140a0 <putchar_unlocked@plt+0x2b7c>
   14090:	mov	r0, ip
   14094:	bl	113d4 <strlen@plt>
   14098:	ldr	ip, [fp, #-84]	; 0xffffffac
   1409c:	mov	lr, r0
   140a0:	cmp	r5, lr
   140a4:	bls	140b4 <putchar_unlocked@plt+0x2b90>
   140a8:	mov	r0, #0
   140ac:	str	r0, [fp, #-52]	; 0xffffffcc
   140b0:	b	14100 <putchar_unlocked@plt+0x2bdc>
   140b4:	mov	r5, r4
   140b8:	mov	r4, lr
   140bc:	add	r0, ip, r6
   140c0:	ldr	r1, [sp, #92]	; 0x5c
   140c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   140c8:	bl	11284 <memcmp@plt>
   140cc:	cmp	r0, #0
   140d0:	mov	r1, r0
   140d4:	movwne	r1, #1
   140d8:	ldr	r2, [sp, #88]	; 0x58
   140dc:	orr	r1, r1, r2
   140e0:	tst	r1, #1
   140e4:	beq	14c94 <putchar_unlocked@plt+0x3770>
   140e8:	clz	r0, r0
   140ec:	lsr	r0, r0, #5
   140f0:	str	r0, [fp, #-52]	; 0xffffffcc
   140f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   140f8:	mov	lr, r4
   140fc:	mov	r4, r5
   14100:	ldrb	r5, [ip, r6]
   14104:	cmp	r5, #126	; 0x7e
   14108:	bhi	144c4 <putchar_unlocked@plt+0x2fa0>
   1410c:	mov	r9, #1
   14110:	mov	r2, #110	; 0x6e
   14114:	mov	r0, #97	; 0x61
   14118:	add	r3, pc, #4
   1411c:	mov	r1, #0
   14120:	ldr	pc, [r3, r5, lsl #2]
   14124:			; <UNDEFINED> instruction: 0x000143bc
   14128:	andeq	r4, r1, r4, asr #9
   1412c:	andeq	r4, r1, r4, asr #9
   14130:	andeq	r4, r1, r4, asr #9
   14134:	andeq	r4, r1, r4, asr #9
   14138:	andeq	r4, r1, r4, asr #9
   1413c:	andeq	r4, r1, r4, asr #9
   14140:	andeq	r4, r1, r8, lsl #11
   14144:	muleq	r1, ip, r3
   14148:	muleq	r1, r4, r3
   1414c:	andeq	r4, r1, r8, lsr #7
   14150:	andeq	r4, r1, ip, lsr #8
   14154:	andeq	r4, r1, ip, lsl #7
   14158:	andeq	r4, r1, r4, lsr #7
   1415c:	andeq	r4, r1, r4, asr #9
   14160:	andeq	r4, r1, r4, asr #9
   14164:	andeq	r4, r1, r4, asr #9
   14168:	andeq	r4, r1, r4, asr #9
   1416c:	andeq	r4, r1, r4, asr #9
   14170:	andeq	r4, r1, r4, asr #9
   14174:	andeq	r4, r1, r4, asr #9
   14178:	andeq	r4, r1, r4, asr #9
   1417c:	andeq	r4, r1, r4, asr #9
   14180:	andeq	r4, r1, r4, asr #9
   14184:	andeq	r4, r1, r4, asr #9
   14188:	andeq	r4, r1, r4, asr #9
   1418c:	andeq	r4, r1, r4, asr #9
   14190:	andeq	r4, r1, r4, asr #9
   14194:	andeq	r4, r1, r4, asr #9
   14198:	andeq	r4, r1, r4, asr #9
   1419c:	andeq	r4, r1, r4, asr #9
   141a0:	andeq	r4, r1, r4, asr #9
   141a4:	andeq	r4, r1, r8, lsr r5
   141a8:	andeq	r4, r1, ip, lsr r5
   141ac:	andeq	r4, r1, ip, lsr r5
   141b0:	andeq	r4, r1, r4, lsr r3
   141b4:	andeq	r4, r1, ip, lsr r5
   141b8:	andeq	r4, r1, r0, lsr #6
   141bc:	andeq	r4, r1, ip, lsr r5
   141c0:	andeq	r4, r1, r4, lsr r4
   141c4:	andeq	r4, r1, ip, lsr r5
   141c8:	andeq	r4, r1, ip, lsr r5
   141cc:	andeq	r4, r1, ip, lsr r5
   141d0:	andeq	r4, r1, r0, lsr #6
   141d4:	andeq	r4, r1, r0, lsr #6
   141d8:	andeq	r4, r1, r0, lsr #6
   141dc:	andeq	r4, r1, r0, lsr #6
   141e0:	andeq	r4, r1, r0, lsr #6
   141e4:	andeq	r4, r1, r0, lsr #6
   141e8:	andeq	r4, r1, r0, lsr #6
   141ec:	andeq	r4, r1, r0, lsr #6
   141f0:	andeq	r4, r1, r0, lsr #6
   141f4:	andeq	r4, r1, r0, lsr #6
   141f8:	andeq	r4, r1, r0, lsr #6
   141fc:	andeq	r4, r1, r0, lsr #6
   14200:	andeq	r4, r1, r0, lsr #6
   14204:	andeq	r4, r1, r0, lsr #6
   14208:	andeq	r4, r1, r0, lsr #6
   1420c:	andeq	r4, r1, r0, lsr #6
   14210:	andeq	r4, r1, ip, lsr r5
   14214:	andeq	r4, r1, ip, lsr r5
   14218:	andeq	r4, r1, ip, lsr r5
   1421c:	andeq	r4, r1, ip, lsr r5
   14220:	strdeq	r4, [r1], -ip
   14224:	andeq	r4, r1, r4, asr #9
   14228:	andeq	r4, r1, r0, lsr #6
   1422c:	andeq	r4, r1, r0, lsr #6
   14230:	andeq	r4, r1, r0, lsr #6
   14234:	andeq	r4, r1, r0, lsr #6
   14238:	andeq	r4, r1, r0, lsr #6
   1423c:	andeq	r4, r1, r0, lsr #6
   14240:	andeq	r4, r1, r0, lsr #6
   14244:	andeq	r4, r1, r0, lsr #6
   14248:	andeq	r4, r1, r0, lsr #6
   1424c:	andeq	r4, r1, r0, lsr #6
   14250:	andeq	r4, r1, r0, lsr #6
   14254:	andeq	r4, r1, r0, lsr #6
   14258:	andeq	r4, r1, r0, lsr #6
   1425c:	andeq	r4, r1, r0, lsr #6
   14260:	andeq	r4, r1, r0, lsr #6
   14264:	andeq	r4, r1, r0, lsr #6
   14268:	andeq	r4, r1, r0, lsr #6
   1426c:	andeq	r4, r1, r0, lsr #6
   14270:	andeq	r4, r1, r0, lsr #6
   14274:	andeq	r4, r1, r0, lsr #6
   14278:	andeq	r4, r1, r0, lsr #6
   1427c:	andeq	r4, r1, r0, lsr #6
   14280:	andeq	r4, r1, r0, lsr #6
   14284:	andeq	r4, r1, r0, lsr #6
   14288:	andeq	r4, r1, r0, lsr #6
   1428c:	andeq	r4, r1, r0, lsr #6
   14290:	andeq	r4, r1, ip, lsr r5
   14294:	andeq	r4, r1, r8, ror #6
   14298:	andeq	r4, r1, r0, lsr #6
   1429c:	andeq	r4, r1, ip, lsr r5
   142a0:	andeq	r4, r1, r0, lsr #6
   142a4:	andeq	r4, r1, ip, lsr r5
   142a8:	andeq	r4, r1, r0, lsr #6
   142ac:	andeq	r4, r1, r0, lsr #6
   142b0:	andeq	r4, r1, r0, lsr #6
   142b4:	andeq	r4, r1, r0, lsr #6
   142b8:	andeq	r4, r1, r0, lsr #6
   142bc:	andeq	r4, r1, r0, lsr #6
   142c0:	andeq	r4, r1, r0, lsr #6
   142c4:	andeq	r4, r1, r0, lsr #6
   142c8:	andeq	r4, r1, r0, lsr #6
   142cc:	andeq	r4, r1, r0, lsr #6
   142d0:	andeq	r4, r1, r0, lsr #6
   142d4:	andeq	r4, r1, r0, lsr #6
   142d8:	andeq	r4, r1, r0, lsr #6
   142dc:	andeq	r4, r1, r0, lsr #6
   142e0:	andeq	r4, r1, r0, lsr #6
   142e4:	andeq	r4, r1, r0, lsr #6
   142e8:	andeq	r4, r1, r0, lsr #6
   142ec:	andeq	r4, r1, r0, lsr #6
   142f0:	andeq	r4, r1, r0, lsr #6
   142f4:	andeq	r4, r1, r0, lsr #6
   142f8:	andeq	r4, r1, r0, lsr #6
   142fc:	andeq	r4, r1, r0, lsr #6
   14300:	andeq	r4, r1, r0, lsr #6
   14304:	andeq	r4, r1, r0, lsr #6
   14308:	andeq	r4, r1, r0, lsr #6
   1430c:	andeq	r4, r1, r0, lsr #6
   14310:	andeq	r4, r1, r8, asr #6
   14314:	andeq	r4, r1, ip, lsr r5
   14318:	andeq	r4, r1, r8, asr #6
   1431c:	andeq	r4, r1, r4, lsr r3
   14320:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14324:	cmp	r0, #0
   14328:	beq	1459c <putchar_unlocked@plt+0x3078>
   1432c:	ldr	r0, [fp, #16]
   14330:	b	145a0 <putchar_unlocked@plt+0x307c>
   14334:	mov	r9, #0
   14338:	cmp	r6, #0
   1433c:	beq	14538 <putchar_unlocked@plt+0x3014>
   14340:	mov	sl, #0
   14344:	b	14320 <putchar_unlocked@plt+0x2dfc>
   14348:	mov	r9, #0
   1434c:	cmn	lr, #1
   14350:	beq	1451c <putchar_unlocked@plt+0x2ff8>
   14354:	cmp	r6, #0
   14358:	bne	14340 <putchar_unlocked@plt+0x2e1c>
   1435c:	cmp	lr, #1
   14360:	beq	14538 <putchar_unlocked@plt+0x3014>
   14364:	b	14340 <putchar_unlocked@plt+0x2e1c>
   14368:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1436c:	cmp	r0, #2
   14370:	bne	14564 <putchar_unlocked@plt+0x3040>
   14374:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14378:	tst	r0, #1
   1437c:	bne	14cac <putchar_unlocked@plt+0x3788>
   14380:	mov	sl, #0
   14384:	mov	r0, #92	; 0x5c
   14388:	b	14578 <putchar_unlocked@plt+0x3054>
   1438c:	mov	r0, #102	; 0x66
   14390:	b	14588 <putchar_unlocked@plt+0x3064>
   14394:	mov	r2, #116	; 0x74
   14398:	b	143a8 <putchar_unlocked@plt+0x2e84>
   1439c:	mov	r0, #98	; 0x62
   143a0:	b	14588 <putchar_unlocked@plt+0x3064>
   143a4:	mov	r2, #114	; 0x72
   143a8:	ldr	r0, [sp, #64]	; 0x40
   143ac:	tst	r0, #1
   143b0:	mov	r0, r2
   143b4:	bne	14588 <putchar_unlocked@plt+0x3064>
   143b8:	b	14cac <putchar_unlocked@plt+0x3788>
   143bc:	ldr	r0, [sp, #84]	; 0x54
   143c0:	tst	r0, #1
   143c4:	beq	14678 <putchar_unlocked@plt+0x3154>
   143c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143cc:	tst	r0, #1
   143d0:	bne	14cac <putchar_unlocked@plt+0x3788>
   143d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   143d8:	cmp	r0, #2
   143dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   143e0:	movwne	r0, #1
   143e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   143e8:	orr	r0, r0, r2
   143ec:	tst	r0, #1
   143f0:	beq	14a6c <putchar_unlocked@plt+0x3548>
   143f4:	mov	r0, r8
   143f8:	b	14aa0 <putchar_unlocked@plt+0x357c>
   143fc:	mov	sl, #0
   14400:	mov	r5, #63	; 0x3f
   14404:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14408:	cmp	r0, #5
   1440c:	beq	1482c <putchar_unlocked@plt+0x3308>
   14410:	cmp	r0, #2
   14414:	bne	148cc <putchar_unlocked@plt+0x33a8>
   14418:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1441c:	tst	r0, #1
   14420:	mov	r9, #0
   14424:	beq	14320 <putchar_unlocked@plt+0x2dfc>
   14428:	b	14cac <putchar_unlocked@plt+0x3788>
   1442c:	mov	r0, #118	; 0x76
   14430:	b	14588 <putchar_unlocked@plt+0x3064>
   14434:	mov	r5, #39	; 0x27
   14438:	mov	r0, #1
   1443c:	str	r0, [sp, #56]	; 0x38
   14440:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14444:	cmp	r0, #2
   14448:	bne	14698 <putchar_unlocked@plt+0x3174>
   1444c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14450:	tst	r0, #1
   14454:	bne	14cac <putchar_unlocked@plt+0x3788>
   14458:	ldr	r2, [sp, #72]	; 0x48
   1445c:	cmp	r2, #0
   14460:	mov	r0, r2
   14464:	movwne	r0, #1
   14468:	clz	r1, r4
   1446c:	lsr	r1, r1, #5
   14470:	orrs	r0, r0, r1
   14474:	moveq	r2, r4
   14478:	str	r2, [sp, #72]	; 0x48
   1447c:	moveq	r4, r0
   14480:	cmp	r8, r4
   14484:	movcc	r0, #39	; 0x27
   14488:	strbcc	r0, [r7, r8]
   1448c:	add	r0, r8, #1
   14490:	cmp	r0, r4
   14494:	movcc	r1, #92	; 0x5c
   14498:	strbcc	r1, [r7, r0]
   1449c:	add	r0, r8, #2
   144a0:	cmp	r0, r4
   144a4:	movcc	r1, #39	; 0x27
   144a8:	strbcc	r1, [r7, r0]
   144ac:	add	r8, r8, #3
   144b0:	mov	r0, #0
   144b4:	str	r0, [fp, #-56]	; 0xffffffc8
   144b8:	mov	sl, #0
   144bc:	mov	r9, #1
   144c0:	b	14320 <putchar_unlocked@plt+0x2dfc>
   144c4:	str	r4, [sp, #24]
   144c8:	ldr	r0, [sp, #40]	; 0x28
   144cc:	cmp	r0, #1
   144d0:	bne	146a0 <putchar_unlocked@plt+0x317c>
   144d4:	str	lr, [sp, #28]
   144d8:	bl	113bc <__ctype_b_loc@plt>
   144dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   144e0:	ldr	r0, [r0]
   144e4:	add	r0, r0, r5, lsl #1
   144e8:	ldrb	r0, [r0, #1]
   144ec:	ubfx	r9, r0, #6, #1
   144f0:	mov	r1, #1
   144f4:	ldr	r4, [sp, #24]
   144f8:	ldr	r0, [sp, #52]	; 0x34
   144fc:	orr	r0, r9, r0
   14500:	mov	r2, r1
   14504:	cmp	r1, #1
   14508:	bhi	148d4 <putchar_unlocked@plt+0x33b0>
   1450c:	tst	r0, #1
   14510:	beq	148d4 <putchar_unlocked@plt+0x33b0>
   14514:	ldr	lr, [sp, #28]
   14518:	b	14320 <putchar_unlocked@plt+0x2dfc>
   1451c:	cmp	r6, #0
   14520:	ldrbeq	r0, [ip, #1]
   14524:	cmpeq	r0, #0
   14528:	beq	14538 <putchar_unlocked@plt+0x3014>
   1452c:	mvn	lr, #0
   14530:	mov	sl, #0
   14534:	b	14320 <putchar_unlocked@plt+0x2dfc>
   14538:	mov	r1, #1
   1453c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14540:	cmp	r0, #2
   14544:	bne	1455c <putchar_unlocked@plt+0x3038>
   14548:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1454c:	tst	r0, #1
   14550:	mov	r9, r1
   14554:	beq	14320 <putchar_unlocked@plt+0x2dfc>
   14558:	b	14cac <putchar_unlocked@plt+0x3788>
   1455c:	mov	r9, r1
   14560:	b	14320 <putchar_unlocked@plt+0x2dfc>
   14564:	mov	sl, #0
   14568:	mov	r0, #92	; 0x5c
   1456c:	ldr	r1, [sp, #48]	; 0x30
   14570:	cmp	r1, #0
   14574:	beq	14588 <putchar_unlocked@plt+0x3064>
   14578:	mov	r9, #0
   1457c:	cmp	sl, #0
   14580:	beq	14b38 <putchar_unlocked@plt+0x3614>
   14584:	b	14b74 <putchar_unlocked@plt+0x3650>
   14588:	mov	r9, #0
   1458c:	ldr	r1, [sp, #84]	; 0x54
   14590:	tst	r1, #1
   14594:	mov	sl, #0
   14598:	bne	145d8 <putchar_unlocked@plt+0x30b4>
   1459c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   145a0:	cmp	r0, #0
   145a4:	mov	r0, r5
   145a8:	beq	145cc <putchar_unlocked@plt+0x30a8>
   145ac:	ubfx	r0, r5, #5, #3
   145b0:	ldr	r1, [fp, #16]
   145b4:	ldr	r0, [r1, r0, lsl #2]
   145b8:	and	r1, r5, #31
   145bc:	mov	r2, #1
   145c0:	tst	r0, r2, lsl r1
   145c4:	mov	r0, r5
   145c8:	bne	145d8 <putchar_unlocked@plt+0x30b4>
   145cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145d0:	cmp	r1, #0
   145d4:	beq	14b30 <putchar_unlocked@plt+0x360c>
   145d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   145dc:	tst	r1, #1
   145e0:	bne	14cac <putchar_unlocked@plt+0x3788>
   145e4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   145e8:	cmp	r1, #2
   145ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   145f0:	movwne	r1, #1
   145f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   145f8:	orr	r1, r1, r2
   145fc:	tst	r1, #1
   14600:	beq	1460c <putchar_unlocked@plt+0x30e8>
   14604:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14608:	b	14648 <putchar_unlocked@plt+0x3124>
   1460c:	cmp	r8, r4
   14610:	movcc	r1, #39	; 0x27
   14614:	strbcc	r1, [r7, r8]
   14618:	add	r1, r8, #1
   1461c:	cmp	r1, r4
   14620:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14624:	movcc	r2, #36	; 0x24
   14628:	strbcc	r2, [r7, r1]
   1462c:	add	r1, r8, #2
   14630:	cmp	r1, r4
   14634:	movcc	r2, #39	; 0x27
   14638:	strbcc	r2, [r7, r1]
   1463c:	add	r8, r8, #3
   14640:	mov	r1, #1
   14644:	str	r1, [fp, #-56]	; 0xffffffc8
   14648:	cmp	r8, r4
   1464c:	movcc	r1, #92	; 0x5c
   14650:	strbcc	r1, [r7, r8]
   14654:	add	r8, r8, #1
   14658:	cmp	r8, r4
   1465c:	strbcc	r0, [r7, r8]
   14660:	and	r5, r5, r9
   14664:	add	r8, r8, #1
   14668:	add	r6, r6, #1
   1466c:	cmn	lr, #1
   14670:	bne	1404c <putchar_unlocked@plt+0x2b28>
   14674:	b	14058 <putchar_unlocked@plt+0x2b34>
   14678:	mov	r9, #0
   1467c:	ldr	r0, [sp, #36]	; 0x24
   14680:	cmp	r0, #0
   14684:	mov	sl, #0
   14688:	mov	r5, #0
   1468c:	beq	1459c <putchar_unlocked@plt+0x3078>
   14690:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14694:	b	14668 <putchar_unlocked@plt+0x3144>
   14698:	mov	r9, #1
   1469c:	b	14320 <putchar_unlocked@plt+0x2dfc>
   146a0:	mov	r0, #0
   146a4:	str	r0, [fp, #-36]	; 0xffffffdc
   146a8:	str	r0, [fp, #-40]	; 0xffffffd8
   146ac:	cmn	lr, #1
   146b0:	bne	146c4 <putchar_unlocked@plt+0x31a0>
   146b4:	mov	r0, ip
   146b8:	bl	113d4 <strlen@plt>
   146bc:	ldr	ip, [fp, #-84]	; 0xffffffac
   146c0:	mov	lr, r0
   146c4:	add	r0, ip, r6
   146c8:	str	r0, [sp, #20]
   146cc:	mov	r9, #1
   146d0:	mov	r7, #0
   146d4:	sub	r4, fp, #40	; 0x28
   146d8:	str	lr, [sp, #28]
   146dc:	str	r7, [sp, #44]	; 0x2c
   146e0:	add	r7, r7, r6
   146e4:	add	r1, ip, r7
   146e8:	sub	r2, lr, r7
   146ec:	sub	r0, fp, #44	; 0x2c
   146f0:	mov	r3, r4
   146f4:	bl	16bac <putchar_unlocked@plt+0x5688>
   146f8:	cmp	r0, #0
   146fc:	beq	14bbc <putchar_unlocked@plt+0x3698>
   14700:	cmn	r0, #1
   14704:	beq	14b7c <putchar_unlocked@plt+0x3658>
   14708:	cmn	r0, #2
   1470c:	ldr	lr, [sp, #28]
   14710:	beq	14b84 <putchar_unlocked@plt+0x3660>
   14714:	cmp	r0, #2
   14718:	mov	r1, #0
   1471c:	movwcc	r1, #1
   14720:	ldr	r2, [sp, #60]	; 0x3c
   14724:	eor	r2, r2, #1
   14728:	orrs	r1, r2, r1
   1472c:	ldr	r4, [sp, #24]
   14730:	bne	147f0 <putchar_unlocked@plt+0x32cc>
   14734:	ldr	r1, [sp, #44]	; 0x2c
   14738:	ldr	r2, [sp, #20]
   1473c:	add	r1, r2, r1
   14740:	mov	r2, #1
   14744:	ldrb	r3, [r1, r2]
   14748:	sub	r3, r3, #91	; 0x5b
   1474c:	cmp	r3, #33	; 0x21
   14750:	bhi	147e4 <putchar_unlocked@plt+0x32c0>
   14754:	add	r7, pc, #0
   14758:	ldr	pc, [r7, r3, lsl #2]
   1475c:	andeq	r4, r1, r4, lsr #25
   14760:	andeq	r4, r1, r4, lsr #25
   14764:	andeq	r4, r1, r4, ror #15
   14768:	andeq	r4, r1, r4, lsr #25
   1476c:	andeq	r4, r1, r4, ror #15
   14770:	andeq	r4, r1, r4, lsr #25
   14774:	andeq	r4, r1, r4, ror #15
   14778:	andeq	r4, r1, r4, ror #15
   1477c:	andeq	r4, r1, r4, ror #15
   14780:	andeq	r4, r1, r4, ror #15
   14784:	andeq	r4, r1, r4, ror #15
   14788:	andeq	r4, r1, r4, ror #15
   1478c:	andeq	r4, r1, r4, ror #15
   14790:	andeq	r4, r1, r4, ror #15
   14794:	andeq	r4, r1, r4, ror #15
   14798:	andeq	r4, r1, r4, ror #15
   1479c:	andeq	r4, r1, r4, ror #15
   147a0:	andeq	r4, r1, r4, ror #15
   147a4:	andeq	r4, r1, r4, ror #15
   147a8:	andeq	r4, r1, r4, ror #15
   147ac:	andeq	r4, r1, r4, ror #15
   147b0:	andeq	r4, r1, r4, ror #15
   147b4:	andeq	r4, r1, r4, ror #15
   147b8:	andeq	r4, r1, r4, ror #15
   147bc:	andeq	r4, r1, r4, ror #15
   147c0:	andeq	r4, r1, r4, ror #15
   147c4:	andeq	r4, r1, r4, ror #15
   147c8:	andeq	r4, r1, r4, ror #15
   147cc:	andeq	r4, r1, r4, ror #15
   147d0:	andeq	r4, r1, r4, ror #15
   147d4:	andeq	r4, r1, r4, ror #15
   147d8:	andeq	r4, r1, r4, ror #15
   147dc:	andeq	r4, r1, r4, ror #15
   147e0:	andeq	r4, r1, r4, lsr #25
   147e4:	add	r2, r2, #1
   147e8:	cmp	r2, r0
   147ec:	bcc	14744 <putchar_unlocked@plt+0x3220>
   147f0:	ldr	r7, [sp, #44]	; 0x2c
   147f4:	add	r7, r0, r7
   147f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147fc:	bl	112cc <iswprint@plt>
   14800:	cmp	r0, #0
   14804:	movwne	r0, #1
   14808:	and	r9, r9, r0
   1480c:	sub	r4, fp, #40	; 0x28
   14810:	mov	r0, r4
   14814:	bl	1126c <mbsinit@plt>
   14818:	ldr	lr, [sp, #28]
   1481c:	cmp	r0, #0
   14820:	ldr	ip, [fp, #-84]	; 0xffffffac
   14824:	beq	146dc <putchar_unlocked@plt+0x31b8>
   14828:	b	14bc4 <putchar_unlocked@plt+0x36a0>
   1482c:	ldr	r0, [sp, #32]
   14830:	cmp	r0, #0
   14834:	beq	148cc <putchar_unlocked@plt+0x33a8>
   14838:	add	r0, r6, #2
   1483c:	cmp	r0, lr
   14840:	bcs	148cc <putchar_unlocked@plt+0x33a8>
   14844:	add	r1, ip, r6
   14848:	ldrb	r1, [r1, #1]
   1484c:	cmp	r1, #63	; 0x3f
   14850:	bne	148cc <putchar_unlocked@plt+0x33a8>
   14854:	ldrb	r9, [ip, r0]
   14858:	sub	r2, r9, #33	; 0x21
   1485c:	cmp	r2, #29
   14860:	bhi	148cc <putchar_unlocked@plt+0x33a8>
   14864:	mov	r3, #1
   14868:	movw	r1, #20929	; 0x51c1
   1486c:	movt	r1, #14336	; 0x3800
   14870:	tst	r1, r3, lsl r2
   14874:	beq	148cc <putchar_unlocked@plt+0x33a8>
   14878:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1487c:	tst	r1, #1
   14880:	bne	14cac <putchar_unlocked@plt+0x3788>
   14884:	cmp	r8, r4
   14888:	movcc	r1, #63	; 0x3f
   1488c:	strbcc	r1, [r7, r8]
   14890:	add	r2, r8, #1
   14894:	cmp	r2, r4
   14898:	movcc	r1, #34	; 0x22
   1489c:	strbcc	r1, [r7, r2]
   148a0:	add	r2, r8, #2
   148a4:	cmp	r2, r4
   148a8:	movcc	r1, #34	; 0x22
   148ac:	strbcc	r1, [r7, r2]
   148b0:	add	r2, r8, #3
   148b4:	cmp	r2, r4
   148b8:	movcc	r1, #63	; 0x3f
   148bc:	strbcc	r1, [r7, r2]
   148c0:	add	r8, r8, #4
   148c4:	mov	r6, r0
   148c8:	mov	r5, r9
   148cc:	mov	r9, #0
   148d0:	b	14320 <putchar_unlocked@plt+0x2dfc>
   148d4:	add	r1, r2, r6
   148d8:	str	r1, [sp, #44]	; 0x2c
   148dc:	add	r1, r6, #1
   148e0:	mov	r3, #0
   148e4:	ldr	lr, [sp, #28]
   148e8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   148ec:	tst	r0, #1
   148f0:	bne	149e4 <putchar_unlocked@plt+0x34c0>
   148f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   148f8:	tst	r2, #1
   148fc:	bne	14cac <putchar_unlocked@plt+0x3788>
   14900:	cmp	r6, #2
   14904:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14908:	movwne	r3, #1
   1490c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14910:	orr	r3, r3, r2
   14914:	tst	r3, #1
   14918:	bne	14954 <putchar_unlocked@plt+0x3430>
   1491c:	cmp	r8, r4
   14920:	movcc	r2, #39	; 0x27
   14924:	strbcc	r2, [r7, r8]
   14928:	add	r3, r8, #1
   1492c:	cmp	r3, r4
   14930:	movcc	r2, #36	; 0x24
   14934:	strbcc	r2, [r7, r3]
   14938:	add	r3, r8, #2
   1493c:	cmp	r3, r4
   14940:	movcc	r2, #39	; 0x27
   14944:	strbcc	r2, [r7, r3]
   14948:	add	r8, r8, #3
   1494c:	mov	r2, #1
   14950:	str	r2, [fp, #-56]	; 0xffffffc8
   14954:	cmp	r8, r4
   14958:	movcc	r2, #92	; 0x5c
   1495c:	strbcc	r2, [r7, r8]
   14960:	add	r3, r8, #1
   14964:	cmp	r3, r4
   14968:	bcs	14988 <putchar_unlocked@plt+0x3464>
   1496c:	and	r7, r5, #192	; 0xc0
   14970:	mov	r2, #48	; 0x30
   14974:	orr	r7, r2, r7, lsr #6
   14978:	ldr	r6, [sp, #80]	; 0x50
   1497c:	strb	r7, [r6, r3]
   14980:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14984:	ldr	r7, [sp, #80]	; 0x50
   14988:	add	r3, r8, #2
   1498c:	cmp	r3, r4
   14990:	bcs	149b0 <putchar_unlocked@plt+0x348c>
   14994:	lsr	r7, r5, #3
   14998:	mov	r2, #6
   1499c:	bfi	r7, r2, #3, #29
   149a0:	ldr	r6, [sp, #80]	; 0x50
   149a4:	strb	r7, [r6, r3]
   149a8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   149ac:	ldr	r7, [sp, #80]	; 0x50
   149b0:	mov	r2, #6
   149b4:	bfi	r5, r2, #3, #29
   149b8:	add	r8, r8, #3
   149bc:	mov	r3, #1
   149c0:	b	14a08 <putchar_unlocked@plt+0x34e4>
   149c4:	ldr	r7, [sp, #80]	; 0x50
   149c8:	cmp	r8, r4
   149cc:	strbcc	r5, [r7, r8]
   149d0:	ldrb	r5, [ip, r1]
   149d4:	add	r1, r1, #1
   149d8:	add	r8, r8, #1
   149dc:	tst	r0, #1
   149e0:	beq	148f4 <putchar_unlocked@plt+0x33d0>
   149e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   149e8:	tst	r2, #1
   149ec:	beq	14a00 <putchar_unlocked@plt+0x34dc>
   149f0:	cmp	r8, r4
   149f4:	movcc	r2, #92	; 0x5c
   149f8:	strbcc	r2, [r7, r8]
   149fc:	add	r8, r8, #1
   14a00:	mov	r2, #0
   14a04:	str	r2, [fp, #-52]	; 0xffffffcc
   14a08:	and	sl, r3, #1
   14a0c:	ldr	r2, [sp, #44]	; 0x2c
   14a10:	cmp	r2, r1
   14a14:	bls	14b20 <putchar_unlocked@plt+0x35fc>
   14a18:	cmp	sl, #0
   14a1c:	movwne	sl, #1
   14a20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14a24:	mvn	r7, r2
   14a28:	orr	r7, r7, sl
   14a2c:	tst	r7, #1
   14a30:	bne	149c4 <putchar_unlocked@plt+0x34a0>
   14a34:	cmp	r8, r4
   14a38:	ldrcc	r7, [sp, #80]	; 0x50
   14a3c:	movcc	r2, #39	; 0x27
   14a40:	strbcc	r2, [r7, r8]
   14a44:	add	r7, r8, #1
   14a48:	cmp	r7, r4
   14a4c:	ldrcc	r6, [sp, #80]	; 0x50
   14a50:	movcc	r2, #39	; 0x27
   14a54:	strbcc	r2, [r6, r7]
   14a58:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   14a5c:	add	r8, r8, #2
   14a60:	mov	r2, #0
   14a64:	str	r2, [fp, #-56]	; 0xffffffc8
   14a68:	b	149c4 <putchar_unlocked@plt+0x34a0>
   14a6c:	cmp	r8, r4
   14a70:	movcc	r0, #39	; 0x27
   14a74:	strbcc	r0, [r7, r8]
   14a78:	add	r0, r8, #1
   14a7c:	cmp	r0, r4
   14a80:	movcc	r1, #36	; 0x24
   14a84:	strbcc	r1, [r7, r0]
   14a88:	add	r0, r8, #2
   14a8c:	cmp	r0, r4
   14a90:	movcc	r1, #39	; 0x27
   14a94:	strbcc	r1, [r7, r0]
   14a98:	add	r0, r8, #3
   14a9c:	mov	r2, #1
   14aa0:	cmp	r0, r4
   14aa4:	movcc	r1, #92	; 0x5c
   14aa8:	strbcc	r1, [r7, r0]
   14aac:	str	r2, [fp, #-56]	; 0xffffffc8
   14ab0:	add	r8, r0, #1
   14ab4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ab8:	cmp	r1, #2
   14abc:	beq	14b10 <putchar_unlocked@plt+0x35ec>
   14ac0:	add	r1, r6, #1
   14ac4:	mov	r9, #0
   14ac8:	mov	sl, #1
   14acc:	mov	r5, #48	; 0x30
   14ad0:	cmp	r1, lr
   14ad4:	bcs	14320 <putchar_unlocked@plt+0x2dfc>
   14ad8:	ldrb	r1, [ip, r1]
   14adc:	sub	r1, r1, #48	; 0x30
   14ae0:	uxtb	r1, r1
   14ae4:	cmp	r1, #9
   14ae8:	bhi	14320 <putchar_unlocked@plt+0x2dfc>
   14aec:	cmp	r8, r4
   14af0:	movcc	r1, #48	; 0x30
   14af4:	strbcc	r1, [r7, r8]
   14af8:	add	r1, r0, #2
   14afc:	cmp	r1, r4
   14b00:	movcc	r2, #48	; 0x30
   14b04:	strbcc	r2, [r7, r1]
   14b08:	add	r8, r0, #3
   14b0c:	b	14320 <putchar_unlocked@plt+0x2dfc>
   14b10:	mov	r0, #48	; 0x30
   14b14:	mov	sl, #1
   14b18:	mov	r9, #0
   14b1c:	b	145cc <putchar_unlocked@plt+0x30a8>
   14b20:	sub	r6, r1, #1
   14b24:	cmp	sl, #0
   14b28:	movwne	sl, #1
   14b2c:	mov	r0, r5
   14b30:	cmp	sl, #0
   14b34:	bne	14b74 <putchar_unlocked@plt+0x3650>
   14b38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14b3c:	tst	r1, #1
   14b40:	beq	14b74 <putchar_unlocked@plt+0x3650>
   14b44:	cmp	r8, r4
   14b48:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b4c:	movcc	r1, #39	; 0x27
   14b50:	strbcc	r1, [r7, r8]
   14b54:	add	r1, r8, #1
   14b58:	cmp	r1, r4
   14b5c:	movcc	r2, #39	; 0x27
   14b60:	strbcc	r2, [r7, r1]
   14b64:	add	r8, r8, #2
   14b68:	mov	r1, #0
   14b6c:	str	r1, [fp, #-56]	; 0xffffffc8
   14b70:	b	14658 <putchar_unlocked@plt+0x3134>
   14b74:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b78:	b	14658 <putchar_unlocked@plt+0x3134>
   14b7c:	mov	r9, #0
   14b80:	b	14bbc <putchar_unlocked@plt+0x3698>
   14b84:	mov	r9, #0
   14b88:	cmp	r7, lr
   14b8c:	bcs	14bbc <putchar_unlocked@plt+0x3698>
   14b90:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b94:	ldr	r7, [sp, #44]	; 0x2c
   14b98:	ldr	r0, [sp, #20]
   14b9c:	ldrb	r0, [r0, r7]
   14ba0:	cmp	r0, #0
   14ba4:	beq	14bc4 <putchar_unlocked@plt+0x36a0>
   14ba8:	add	r7, r7, #1
   14bac:	add	r0, r6, r7
   14bb0:	cmp	r0, lr
   14bb4:	bcc	14b98 <putchar_unlocked@plt+0x3674>
   14bb8:	b	14bc4 <putchar_unlocked@plt+0x36a0>
   14bbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14bc0:	ldr	r7, [sp, #44]	; 0x2c
   14bc4:	mov	r1, r7
   14bc8:	ldr	r7, [sp, #80]	; 0x50
   14bcc:	b	144f4 <putchar_unlocked@plt+0x2fd0>
   14bd0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14bd4:	eor	r0, r1, #2
   14bd8:	orr	r0, r0, r8
   14bdc:	clz	r0, r0
   14be0:	lsr	r0, r0, #5
   14be4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14be8:	tst	r2, r0
   14bec:	bne	14cac <putchar_unlocked@plt+0x3788>
   14bf0:	cmp	r1, #2
   14bf4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14bf8:	movwne	r0, #1
   14bfc:	orr	r0, r2, r0
   14c00:	tst	r0, #1
   14c04:	ldreq	r0, [sp, #56]	; 0x38
   14c08:	eoreq	r0, r0, #1
   14c0c:	tsteq	r0, #1
   14c10:	bne	14c44 <putchar_unlocked@plt+0x3720>
   14c14:	mov	r9, lr
   14c18:	tst	r5, #1
   14c1c:	bne	14d14 <putchar_unlocked@plt+0x37f0>
   14c20:	ldr	r0, [sp, #72]	; 0x48
   14c24:	cmp	r0, #0
   14c28:	beq	14c44 <putchar_unlocked@plt+0x3720>
   14c2c:	mov	r5, #0
   14c30:	cmp	r4, #0
   14c34:	ldr	r0, [sp, #84]	; 0x54
   14c38:	mov	sl, r2
   14c3c:	ldr	r6, [sp, #72]	; 0x48
   14c40:	beq	13ddc <putchar_unlocked@plt+0x28b8>
   14c44:	ldr	r1, [sp, #92]	; 0x5c
   14c48:	clz	r0, r1
   14c4c:	lsr	r0, r0, #5
   14c50:	orr	r0, r0, r2
   14c54:	tst	r0, #1
   14c58:	bne	14c84 <putchar_unlocked@plt+0x3760>
   14c5c:	ldrb	r0, [r1]
   14c60:	cmp	r0, #0
   14c64:	beq	14c84 <putchar_unlocked@plt+0x3760>
   14c68:	add	r1, r1, #1
   14c6c:	cmp	r8, r4
   14c70:	strbcc	r0, [r7, r8]
   14c74:	add	r8, r8, #1
   14c78:	ldrb	r0, [r1], #1
   14c7c:	cmp	r0, #0
   14c80:	bne	14c6c <putchar_unlocked@plt+0x3748>
   14c84:	cmp	r8, r4
   14c88:	movcc	r0, #0
   14c8c:	strbcc	r0, [r7, r8]
   14c90:	b	14d08 <putchar_unlocked@plt+0x37e4>
   14c94:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c98:	mov	lr, r4
   14c9c:	mov	r4, r5
   14ca0:	b	14cac <putchar_unlocked@plt+0x3788>
   14ca4:	ldr	r7, [sp, #80]	; 0x50
   14ca8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14cac:	mov	r0, #0
   14cb0:	ldr	r1, [fp, #12]
   14cb4:	bic	r1, r1, #2
   14cb8:	ldr	r2, [sp, #84]	; 0x54
   14cbc:	tst	r2, #1
   14cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14cc4:	mov	r2, r3
   14cc8:	movwne	r2, #4
   14ccc:	cmp	r3, #2
   14cd0:	movne	r2, r3
   14cd4:	str	r2, [sp]
   14cd8:	str	r1, [sp, #4]
   14cdc:	str	r0, [sp, #8]
   14ce0:	ldr	r0, [sp, #68]	; 0x44
   14ce4:	str	r0, [sp, #12]
   14ce8:	ldr	r0, [sp, #76]	; 0x4c
   14cec:	str	r0, [sp, #16]
   14cf0:	mov	r0, r7
   14cf4:	mov	r1, r4
   14cf8:	mov	r2, ip
   14cfc:	mov	r3, lr
   14d00:	bl	13d54 <putchar_unlocked@plt+0x2830>
   14d04:	mov	r8, r0
   14d08:	mov	r0, r8
   14d0c:	sub	sp, fp, #28
   14d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d14:	mov	r0, #5
   14d18:	str	r0, [sp]
   14d1c:	ldr	r0, [fp, #12]
   14d20:	str	r0, [sp, #4]
   14d24:	ldr	r0, [fp, #16]
   14d28:	str	r0, [sp, #8]
   14d2c:	ldr	r0, [sp, #68]	; 0x44
   14d30:	str	r0, [sp, #12]
   14d34:	ldr	r0, [sp, #76]	; 0x4c
   14d38:	str	r0, [sp, #16]
   14d3c:	mov	r0, r7
   14d40:	ldr	r1, [sp, #72]	; 0x48
   14d44:	ldr	r2, [fp, #-84]	; 0xffffffac
   14d48:	mov	r3, r9
   14d4c:	b	14d00 <putchar_unlocked@plt+0x37dc>
   14d50:	bl	11500 <abort@plt>
   14d54:	mov	r3, r2
   14d58:	mov	r2, #0
   14d5c:	b	14d60 <putchar_unlocked@plt+0x383c>
   14d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d64:	add	fp, sp, #28
   14d68:	sub	sp, sp, #36	; 0x24
   14d6c:	mov	r4, r2
   14d70:	str	r2, [sp, #24]
   14d74:	mov	r5, r1
   14d78:	mov	r6, r0
   14d7c:	str	r0, [sp, #20]
   14d80:	movw	r8, #33192	; 0x81a8
   14d84:	movt	r8, #2
   14d88:	cmp	r3, #0
   14d8c:	movne	r8, r3
   14d90:	bl	113ec <__errno_location@plt>
   14d94:	str	r0, [sp, #28]
   14d98:	ldm	r8, {r3, r9}
   14d9c:	ldr	r1, [r8, #40]	; 0x28
   14da0:	ldr	r2, [r8, #44]	; 0x2c
   14da4:	ldr	r7, [r0]
   14da8:	str	r7, [sp, #32]
   14dac:	add	sl, r8, #8
   14db0:	cmp	r4, #0
   14db4:	orreq	r9, r9, #1
   14db8:	stm	sp, {r3, r9, sl}
   14dbc:	str	r1, [sp, #12]
   14dc0:	str	r2, [sp, #16]
   14dc4:	mov	r0, #0
   14dc8:	mov	r1, #0
   14dcc:	mov	r2, r6
   14dd0:	mov	r3, r5
   14dd4:	mov	r7, r5
   14dd8:	bl	13d54 <putchar_unlocked@plt+0x2830>
   14ddc:	mov	r5, r0
   14de0:	add	r4, r0, #1
   14de4:	mov	r0, r4
   14de8:	bl	162c0 <putchar_unlocked@plt+0x4d9c>
   14dec:	mov	r6, r0
   14df0:	ldr	r0, [r8]
   14df4:	ldr	r1, [r8, #40]	; 0x28
   14df8:	ldr	r2, [r8, #44]	; 0x2c
   14dfc:	stm	sp, {r0, r9, sl}
   14e00:	str	r1, [sp, #12]
   14e04:	str	r2, [sp, #16]
   14e08:	mov	r0, r6
   14e0c:	mov	r1, r4
   14e10:	ldr	r2, [sp, #20]
   14e14:	mov	r3, r7
   14e18:	bl	13d54 <putchar_unlocked@plt+0x2830>
   14e1c:	ldr	r0, [sp, #24]
   14e20:	ldr	r1, [sp, #32]
   14e24:	ldr	r2, [sp, #28]
   14e28:	str	r1, [r2]
   14e2c:	cmp	r0, #0
   14e30:	strne	r5, [r0]
   14e34:	mov	r0, r6
   14e38:	sub	sp, fp, #28
   14e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e44:	add	fp, sp, #24
   14e48:	movw	r8, #33080	; 0x8138
   14e4c:	movt	r8, #2
   14e50:	ldr	r4, [r8]
   14e54:	movw	r5, #33084	; 0x813c
   14e58:	movt	r5, #2
   14e5c:	ldr	r0, [r5]
   14e60:	cmp	r0, #2
   14e64:	blt	14e90 <putchar_unlocked@plt+0x396c>
   14e68:	add	r7, r4, #12
   14e6c:	mov	r6, #0
   14e70:	ldr	r0, [r7, r6, lsl #3]
   14e74:	bl	16afc <putchar_unlocked@plt+0x55d8>
   14e78:	add	r0, r6, #1
   14e7c:	ldr	r1, [r5]
   14e80:	add	r2, r6, #2
   14e84:	cmp	r2, r1
   14e88:	mov	r6, r0
   14e8c:	blt	14e70 <putchar_unlocked@plt+0x394c>
   14e90:	ldr	r0, [r4, #4]
   14e94:	movw	r7, #33240	; 0x81d8
   14e98:	movt	r7, #2
   14e9c:	cmp	r0, r7
   14ea0:	beq	14eb8 <putchar_unlocked@plt+0x3994>
   14ea4:	bl	16afc <putchar_unlocked@plt+0x55d8>
   14ea8:	movw	r0, #33088	; 0x8140
   14eac:	movt	r0, #2
   14eb0:	mov	r6, #256	; 0x100
   14eb4:	strd	r6, [r0]
   14eb8:	movw	r6, #33088	; 0x8140
   14ebc:	movt	r6, #2
   14ec0:	cmp	r4, r6
   14ec4:	beq	14ed4 <putchar_unlocked@plt+0x39b0>
   14ec8:	mov	r0, r4
   14ecc:	bl	16afc <putchar_unlocked@plt+0x55d8>
   14ed0:	str	r6, [r8]
   14ed4:	mov	r0, #1
   14ed8:	str	r0, [r5]
   14edc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ee0:	movw	r3, #33192	; 0x81a8
   14ee4:	movt	r3, #2
   14ee8:	mvn	r2, #0
   14eec:	b	14ef0 <putchar_unlocked@plt+0x39cc>
   14ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ef4:	add	fp, sp, #28
   14ef8:	sub	sp, sp, #44	; 0x2c
   14efc:	mov	r7, r3
   14f00:	str	r2, [sp, #36]	; 0x24
   14f04:	str	r1, [sp, #32]
   14f08:	mov	r5, r0
   14f0c:	bl	113ec <__errno_location@plt>
   14f10:	cmp	r5, #0
   14f14:	blt	15080 <putchar_unlocked@plt+0x3b5c>
   14f18:	cmn	r5, #-2147483647	; 0x80000001
   14f1c:	beq	15080 <putchar_unlocked@plt+0x3b5c>
   14f20:	movw	r4, #33080	; 0x8138
   14f24:	movt	r4, #2
   14f28:	ldr	r6, [r4]
   14f2c:	str	r0, [sp, #28]
   14f30:	ldr	r0, [r0]
   14f34:	str	r0, [sp, #24]
   14f38:	movw	r8, #33084	; 0x813c
   14f3c:	movt	r8, #2
   14f40:	ldr	r1, [r8]
   14f44:	cmp	r1, r5
   14f48:	ble	14f54 <putchar_unlocked@plt+0x3a30>
   14f4c:	mov	sl, r6
   14f50:	b	14fbc <putchar_unlocked@plt+0x3a98>
   14f54:	str	r1, [fp, #-32]	; 0xffffffe0
   14f58:	mov	r0, #8
   14f5c:	str	r0, [sp]
   14f60:	movw	r9, #33088	; 0x8140
   14f64:	movt	r9, #2
   14f68:	subs	r0, r6, r9
   14f6c:	movne	r0, r6
   14f70:	add	r2, r5, #1
   14f74:	sub	r2, r2, r1
   14f78:	sub	r1, fp, #32
   14f7c:	mvn	r3, #-2147483648	; 0x80000000
   14f80:	bl	163a8 <putchar_unlocked@plt+0x4e84>
   14f84:	mov	sl, r0
   14f88:	str	r0, [r4]
   14f8c:	cmp	r6, r9
   14f90:	ldrdeq	r0, [r9]
   14f94:	stmeq	sl, {r0, r1}
   14f98:	ldr	r1, [r8]
   14f9c:	add	r0, sl, r1, lsl #3
   14fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fa4:	sub	r1, r2, r1
   14fa8:	lsl	r2, r1, #3
   14fac:	mov	r1, #0
   14fb0:	bl	11404 <memset@plt>
   14fb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14fb8:	str	r0, [r8]
   14fbc:	mov	r9, sl
   14fc0:	ldr	r6, [r9, r5, lsl #3]!
   14fc4:	ldr	r4, [r9, #4]!
   14fc8:	ldm	r7, {r0, r1}
   14fcc:	ldr	r2, [r7, #40]	; 0x28
   14fd0:	ldr	r3, [r7, #44]	; 0x2c
   14fd4:	orr	r8, r1, #1
   14fd8:	add	r1, r7, #8
   14fdc:	stm	sp, {r0, r8}
   14fe0:	str	r1, [sp, #20]
   14fe4:	add	r0, sp, #8
   14fe8:	stm	r0, {r1, r2, r3}
   14fec:	mov	r0, r4
   14ff0:	mov	r1, r6
   14ff4:	ldr	r2, [sp, #32]
   14ff8:	ldr	r3, [sp, #36]	; 0x24
   14ffc:	bl	13d54 <putchar_unlocked@plt+0x2830>
   15000:	cmp	r6, r0
   15004:	bhi	15068 <putchar_unlocked@plt+0x3b44>
   15008:	add	r6, r0, #1
   1500c:	str	r6, [sl, r5, lsl #3]
   15010:	movw	r0, #33240	; 0x81d8
   15014:	movt	r0, #2
   15018:	cmp	r4, r0
   1501c:	beq	15028 <putchar_unlocked@plt+0x3b04>
   15020:	mov	r0, r4
   15024:	bl	16afc <putchar_unlocked@plt+0x55d8>
   15028:	mov	r0, r6
   1502c:	bl	162c0 <putchar_unlocked@plt+0x4d9c>
   15030:	mov	r4, r0
   15034:	str	r0, [r9]
   15038:	ldr	r0, [r7]
   1503c:	ldr	r1, [r7, #40]	; 0x28
   15040:	ldr	r2, [r7, #44]	; 0x2c
   15044:	stm	sp, {r0, r8}
   15048:	ldr	r0, [sp, #20]
   1504c:	add	r3, sp, #8
   15050:	stm	r3, {r0, r1, r2}
   15054:	mov	r0, r4
   15058:	mov	r1, r6
   1505c:	ldr	r2, [sp, #32]
   15060:	ldr	r3, [sp, #36]	; 0x24
   15064:	bl	13d54 <putchar_unlocked@plt+0x2830>
   15068:	ldr	r0, [sp, #28]
   1506c:	ldr	r1, [sp, #24]
   15070:	str	r1, [r0]
   15074:	mov	r0, r4
   15078:	sub	sp, fp, #28
   1507c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15080:	bl	11500 <abort@plt>
   15084:	movw	r3, #33192	; 0x81a8
   15088:	movt	r3, #2
   1508c:	b	14ef0 <putchar_unlocked@plt+0x39cc>
   15090:	mov	r1, r0
   15094:	mov	r0, #0
   15098:	b	14ee0 <putchar_unlocked@plt+0x39bc>
   1509c:	mov	r2, r1
   150a0:	mov	r1, r0
   150a4:	mov	r0, #0
   150a8:	b	15084 <putchar_unlocked@plt+0x3b60>
   150ac:	push	{r4, r5, r6, sl, fp, lr}
   150b0:	add	fp, sp, #16
   150b4:	sub	sp, sp, #48	; 0x30
   150b8:	mov	r4, r2
   150bc:	mov	r5, r0
   150c0:	mov	r6, sp
   150c4:	mov	r0, r6
   150c8:	bl	150e8 <putchar_unlocked@plt+0x3bc4>
   150cc:	mov	r0, r5
   150d0:	mov	r1, r4
   150d4:	mvn	r2, #0
   150d8:	mov	r3, r6
   150dc:	bl	14ef0 <putchar_unlocked@plt+0x39cc>
   150e0:	sub	sp, fp, #16
   150e4:	pop	{r4, r5, r6, sl, fp, pc}
   150e8:	vmov.i32	q8, #0	; 0x00000000
   150ec:	mov	r2, #32
   150f0:	mov	r3, r0
   150f4:	vst1.32	{d16-d17}, [r3], r2
   150f8:	vst1.32	{d16-d17}, [r3]
   150fc:	add	r2, r0, #16
   15100:	vst1.32	{d16-d17}, [r2]
   15104:	cmp	r1, #10
   15108:	strne	r1, [r0]
   1510c:	bxne	lr
   15110:	push	{fp, lr}
   15114:	mov	fp, sp
   15118:	bl	11500 <abort@plt>
   1511c:	push	{r4, r5, r6, r7, fp, lr}
   15120:	add	fp, sp, #16
   15124:	sub	sp, sp, #48	; 0x30
   15128:	mov	r4, r3
   1512c:	mov	r5, r2
   15130:	mov	r6, r0
   15134:	mov	r7, sp
   15138:	mov	r0, r7
   1513c:	bl	150e8 <putchar_unlocked@plt+0x3bc4>
   15140:	mov	r0, r6
   15144:	mov	r1, r5
   15148:	mov	r2, r4
   1514c:	mov	r3, r7
   15150:	bl	14ef0 <putchar_unlocked@plt+0x39cc>
   15154:	sub	sp, fp, #16
   15158:	pop	{r4, r5, r6, r7, fp, pc}
   1515c:	mov	r2, r1
   15160:	mov	r1, r0
   15164:	mov	r0, #0
   15168:	b	150ac <putchar_unlocked@plt+0x3b88>
   1516c:	mov	r3, r2
   15170:	mov	r2, r1
   15174:	mov	r1, r0
   15178:	mov	r0, #0
   1517c:	b	1511c <putchar_unlocked@plt+0x3bf8>
   15180:	push	{r4, r5, r6, sl, fp, lr}
   15184:	add	fp, sp, #16
   15188:	sub	sp, sp, #48	; 0x30
   1518c:	mov	r4, r1
   15190:	mov	r5, r0
   15194:	mov	r0, #32
   15198:	movw	r1, #33192	; 0x81a8
   1519c:	movt	r1, #2
   151a0:	add	r3, r1, #16
   151a4:	vld1.64	{d16-d17}, [r1], r0
   151a8:	mov	r6, sp
   151ac:	vld1.64	{d18-d19}, [r3]
   151b0:	add	r3, r6, #16
   151b4:	vld1.64	{d20-d21}, [r1]
   151b8:	vst1.64	{d18-d19}, [r3]
   151bc:	mov	r1, r6
   151c0:	vst1.64	{d16-d17}, [r1], r0
   151c4:	vst1.64	{d20-d21}, [r1]
   151c8:	mov	r0, r6
   151cc:	mov	r1, r2
   151d0:	mov	r2, #1
   151d4:	bl	13c48 <putchar_unlocked@plt+0x2724>
   151d8:	mov	r0, #0
   151dc:	mov	r1, r5
   151e0:	mov	r2, r4
   151e4:	mov	r3, r6
   151e8:	bl	14ef0 <putchar_unlocked@plt+0x39cc>
   151ec:	sub	sp, fp, #16
   151f0:	pop	{r4, r5, r6, sl, fp, pc}
   151f4:	mov	r2, r1
   151f8:	mvn	r1, #0
   151fc:	b	15180 <putchar_unlocked@plt+0x3c5c>
   15200:	mov	r1, #58	; 0x3a
   15204:	b	151f4 <putchar_unlocked@plt+0x3cd0>
   15208:	mov	r2, #58	; 0x3a
   1520c:	b	15180 <putchar_unlocked@plt+0x3c5c>
   15210:	push	{r4, r5, r6, sl, fp, lr}
   15214:	add	fp, sp, #16
   15218:	sub	sp, sp, #48	; 0x30
   1521c:	mov	r4, r2
   15220:	mov	r5, r0
   15224:	mov	r6, sp
   15228:	mov	r0, r6
   1522c:	bl	150e8 <putchar_unlocked@plt+0x3bc4>
   15230:	mov	r0, r6
   15234:	mov	r1, #58	; 0x3a
   15238:	mov	r2, #1
   1523c:	bl	13c48 <putchar_unlocked@plt+0x2724>
   15240:	mov	r0, r5
   15244:	mov	r1, r4
   15248:	mvn	r2, #0
   1524c:	mov	r3, r6
   15250:	bl	14ef0 <putchar_unlocked@plt+0x39cc>
   15254:	sub	sp, fp, #16
   15258:	pop	{r4, r5, r6, sl, fp, pc}
   1525c:	push	{fp, lr}
   15260:	mov	fp, sp
   15264:	sub	sp, sp, #8
   15268:	mvn	ip, #0
   1526c:	str	ip, [sp]
   15270:	bl	1527c <putchar_unlocked@plt+0x3d58>
   15274:	mov	sp, fp
   15278:	pop	{fp, pc}
   1527c:	push	{r4, r5, r6, r7, fp, lr}
   15280:	add	fp, sp, #16
   15284:	sub	sp, sp, #48	; 0x30
   15288:	mov	r7, r3
   1528c:	mov	r5, r0
   15290:	mov	r0, #32
   15294:	movw	r3, #33192	; 0x81a8
   15298:	movt	r3, #2
   1529c:	add	r4, r3, #16
   152a0:	vld1.64	{d16-d17}, [r3], r0
   152a4:	mov	r6, sp
   152a8:	vld1.64	{d18-d19}, [r4]
   152ac:	add	r4, r6, #16
   152b0:	vld1.64	{d20-d21}, [r3]
   152b4:	vst1.64	{d18-d19}, [r4]
   152b8:	mov	r3, r6
   152bc:	vst1.64	{d16-d17}, [r3], r0
   152c0:	vst1.64	{d20-d21}, [r3]
   152c4:	mov	r0, r6
   152c8:	bl	13ca0 <putchar_unlocked@plt+0x277c>
   152cc:	ldr	r2, [fp, #8]
   152d0:	mov	r0, r5
   152d4:	mov	r1, r7
   152d8:	mov	r3, r6
   152dc:	bl	14ef0 <putchar_unlocked@plt+0x39cc>
   152e0:	sub	sp, fp, #16
   152e4:	pop	{r4, r5, r6, r7, fp, pc}
   152e8:	mov	r3, r2
   152ec:	mov	r2, r1
   152f0:	mov	r1, r0
   152f4:	mov	r0, #0
   152f8:	b	1525c <putchar_unlocked@plt+0x3d38>
   152fc:	push	{fp, lr}
   15300:	mov	fp, sp
   15304:	sub	sp, sp, #8
   15308:	mov	ip, r2
   1530c:	mov	r2, r1
   15310:	mov	r1, r0
   15314:	str	r3, [sp]
   15318:	mov	r0, #0
   1531c:	mov	r3, ip
   15320:	bl	1527c <putchar_unlocked@plt+0x3d58>
   15324:	mov	sp, fp
   15328:	pop	{fp, pc}
   1532c:	movw	r3, #33096	; 0x8148
   15330:	movt	r3, #2
   15334:	b	14ef0 <putchar_unlocked@plt+0x39cc>
   15338:	mov	r2, r1
   1533c:	mov	r1, r0
   15340:	mov	r0, #0
   15344:	b	1532c <putchar_unlocked@plt+0x3e08>
   15348:	mvn	r2, #0
   1534c:	b	1532c <putchar_unlocked@plt+0x3e08>
   15350:	mov	r1, r0
   15354:	mov	r0, #0
   15358:	b	15348 <putchar_unlocked@plt+0x3e24>
   1535c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15360:	add	fp, sp, #24
   15364:	sub	sp, sp, #16
   15368:	mov	r4, r1
   1536c:	mov	r5, r0
   15370:	mov	r7, #0
   15374:	mov	r0, #0
   15378:	mov	r1, r5
   1537c:	mov	r2, #5
   15380:	bl	11290 <dcgettext@plt>
   15384:	cmp	r0, r5
   15388:	beq	15394 <putchar_unlocked@plt+0x3e70>
   1538c:	sub	sp, fp, #24
   15390:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15394:	bl	16b74 <putchar_unlocked@plt+0x5650>
   15398:	mov	r6, r0
   1539c:	mov	r8, #56	; 0x38
   153a0:	mov	r0, #45	; 0x2d
   153a4:	stm	sp, {r0, r8}
   153a8:	str	r7, [sp, #8]
   153ac:	str	r7, [sp, #12]
   153b0:	mov	r0, r6
   153b4:	mov	r1, #85	; 0x55
   153b8:	mov	r2, #84	; 0x54
   153bc:	mov	r3, #70	; 0x46
   153c0:	bl	15458 <putchar_unlocked@plt+0x3f34>
   153c4:	cmp	r0, #0
   153c8:	beq	153e4 <putchar_unlocked@plt+0x3ec0>
   153cc:	ldrb	r1, [r5]
   153d0:	movw	r2, #29972	; 0x7514
   153d4:	movt	r2, #1
   153d8:	movw	r0, #29976	; 0x7518
   153dc:	movt	r0, #1
   153e0:	b	15428 <putchar_unlocked@plt+0x3f04>
   153e4:	mov	r0, #48	; 0x30
   153e8:	mov	r1, #51	; 0x33
   153ec:	str	r8, [sp]
   153f0:	stmib	sp, {r0, r1}
   153f4:	str	r0, [sp, #12]
   153f8:	mov	r0, r6
   153fc:	mov	r1, #71	; 0x47
   15400:	mov	r2, #66	; 0x42
   15404:	mov	r3, #49	; 0x31
   15408:	bl	15458 <putchar_unlocked@plt+0x3f34>
   1540c:	cmp	r0, #0
   15410:	beq	15438 <putchar_unlocked@plt+0x3f14>
   15414:	ldrb	r1, [r5]
   15418:	movw	r2, #29980	; 0x751c
   1541c:	movt	r2, #1
   15420:	movw	r0, #29984	; 0x7520
   15424:	movt	r0, #1
   15428:	cmp	r1, #96	; 0x60
   1542c:	moveq	r0, r2
   15430:	sub	sp, fp, #24
   15434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15438:	movw	r1, #29966	; 0x750e
   1543c:	movt	r1, #1
   15440:	movw	r0, #29970	; 0x7512
   15444:	movt	r0, #1
   15448:	cmp	r4, #9
   1544c:	moveq	r0, r1
   15450:	sub	sp, fp, #24
   15454:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15458:	push	{r4, r5, r6, r7, fp, lr}
   1545c:	add	fp, sp, #16
   15460:	sub	sp, sp, #16
   15464:	mov	r4, r3
   15468:	mov	r5, r2
   1546c:	mov	r7, r1
   15470:	mov	r6, r0
   15474:	mov	r0, r1
   15478:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   1547c:	ldrb	r1, [r6]
   15480:	cmp	r0, #0
   15484:	andne	r1, r1, #223	; 0xdf
   15488:	mov	r0, #0
   1548c:	cmp	r1, r7
   15490:	bne	154d0 <putchar_unlocked@plt+0x3fac>
   15494:	cmp	r7, #0
   15498:	moveq	r0, #1
   1549c:	subeq	sp, fp, #16
   154a0:	popeq	{r4, r5, r6, r7, fp, pc}
   154a4:	ldr	r0, [fp, #20]
   154a8:	ldr	r1, [fp, #16]
   154ac:	ldr	r2, [fp, #12]
   154b0:	ldr	r3, [fp, #8]
   154b4:	str	r2, [sp]
   154b8:	str	r1, [sp, #4]
   154bc:	str	r0, [sp, #8]
   154c0:	mov	r0, r6
   154c4:	mov	r1, r5
   154c8:	mov	r2, r4
   154cc:	bl	154d8 <putchar_unlocked@plt+0x3fb4>
   154d0:	sub	sp, fp, #16
   154d4:	pop	{r4, r5, r6, r7, fp, pc}
   154d8:	push	{r4, r5, r6, r7, fp, lr}
   154dc:	add	fp, sp, #16
   154e0:	sub	sp, sp, #8
   154e4:	mov	r4, r3
   154e8:	mov	r5, r2
   154ec:	mov	r7, r1
   154f0:	mov	r6, r0
   154f4:	mov	r0, r1
   154f8:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   154fc:	ldrb	r1, [r6, #1]
   15500:	cmp	r0, #0
   15504:	andne	r1, r1, #223	; 0xdf
   15508:	mov	r0, #0
   1550c:	cmp	r1, r7
   15510:	bne	15548 <putchar_unlocked@plt+0x4024>
   15514:	cmp	r7, #0
   15518:	moveq	r0, #1
   1551c:	subeq	sp, fp, #16
   15520:	popeq	{r4, r5, r6, r7, fp, pc}
   15524:	ldr	r0, [fp, #16]
   15528:	ldr	r1, [fp, #12]
   1552c:	ldr	r3, [fp, #8]
   15530:	str	r1, [sp]
   15534:	str	r0, [sp, #4]
   15538:	mov	r0, r6
   1553c:	mov	r1, r5
   15540:	mov	r2, r4
   15544:	bl	15550 <putchar_unlocked@plt+0x402c>
   15548:	sub	sp, fp, #16
   1554c:	pop	{r4, r5, r6, r7, fp, pc}
   15550:	push	{r4, r5, r6, r7, fp, lr}
   15554:	add	fp, sp, #16
   15558:	sub	sp, sp, #8
   1555c:	mov	r4, r3
   15560:	mov	r5, r2
   15564:	mov	r7, r1
   15568:	mov	r6, r0
   1556c:	mov	r0, r1
   15570:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   15574:	ldrb	r1, [r6, #2]
   15578:	cmp	r0, #0
   1557c:	andne	r1, r1, #223	; 0xdf
   15580:	mov	r0, #0
   15584:	cmp	r1, r7
   15588:	bne	155b8 <putchar_unlocked@plt+0x4094>
   1558c:	cmp	r7, #0
   15590:	moveq	r0, #1
   15594:	subeq	sp, fp, #16
   15598:	popeq	{r4, r5, r6, r7, fp, pc}
   1559c:	ldr	r0, [fp, #12]
   155a0:	ldr	r3, [fp, #8]
   155a4:	str	r0, [sp]
   155a8:	mov	r0, r6
   155ac:	mov	r1, r5
   155b0:	mov	r2, r4
   155b4:	bl	155c0 <putchar_unlocked@plt+0x409c>
   155b8:	sub	sp, fp, #16
   155bc:	pop	{r4, r5, r6, r7, fp, pc}
   155c0:	push	{r4, r5, r6, r7, fp, lr}
   155c4:	add	fp, sp, #16
   155c8:	mov	r4, r3
   155cc:	mov	r5, r2
   155d0:	mov	r7, r1
   155d4:	mov	r6, r0
   155d8:	mov	r0, r1
   155dc:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   155e0:	ldrb	r1, [r6, #3]
   155e4:	ldr	r3, [fp, #8]
   155e8:	cmp	r0, #0
   155ec:	andne	r1, r1, #223	; 0xdf
   155f0:	mov	r0, #0
   155f4:	cmp	r1, r7
   155f8:	popne	{r4, r5, r6, r7, fp, pc}
   155fc:	cmp	r7, #0
   15600:	beq	15618 <putchar_unlocked@plt+0x40f4>
   15604:	mov	r0, r6
   15608:	mov	r1, r5
   1560c:	mov	r2, r4
   15610:	pop	{r4, r5, r6, r7, fp, lr}
   15614:	b	15620 <putchar_unlocked@plt+0x40fc>
   15618:	mov	r0, #1
   1561c:	pop	{r4, r5, r6, r7, fp, pc}
   15620:	push	{r4, r5, r6, r7, fp, lr}
   15624:	add	fp, sp, #16
   15628:	mov	r4, r3
   1562c:	mov	r5, r2
   15630:	mov	r7, r1
   15634:	mov	r6, r0
   15638:	mov	r0, r1
   1563c:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   15640:	ldrb	r1, [r6, #4]
   15644:	cmp	r0, #0
   15648:	andne	r1, r1, #223	; 0xdf
   1564c:	mov	r0, #0
   15650:	cmp	r1, r7
   15654:	popne	{r4, r5, r6, r7, fp, pc}
   15658:	cmp	r7, #0
   1565c:	beq	15674 <putchar_unlocked@plt+0x4150>
   15660:	mov	r0, r6
   15664:	mov	r1, r5
   15668:	mov	r2, r4
   1566c:	pop	{r4, r5, r6, r7, fp, lr}
   15670:	b	1567c <putchar_unlocked@plt+0x4158>
   15674:	mov	r0, #1
   15678:	pop	{r4, r5, r6, r7, fp, pc}
   1567c:	push	{r4, r5, r6, sl, fp, lr}
   15680:	add	fp, sp, #16
   15684:	mov	r4, r2
   15688:	mov	r6, r1
   1568c:	mov	r5, r0
   15690:	mov	r0, r1
   15694:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   15698:	ldrb	r1, [r5, #5]
   1569c:	cmp	r0, #0
   156a0:	andne	r1, r1, #223	; 0xdf
   156a4:	mov	r0, #0
   156a8:	cmp	r1, r6
   156ac:	popne	{r4, r5, r6, sl, fp, pc}
   156b0:	cmp	r6, #0
   156b4:	beq	156c8 <putchar_unlocked@plt+0x41a4>
   156b8:	mov	r0, r5
   156bc:	mov	r1, r4
   156c0:	pop	{r4, r5, r6, sl, fp, lr}
   156c4:	b	156d0 <putchar_unlocked@plt+0x41ac>
   156c8:	mov	r0, #1
   156cc:	pop	{r4, r5, r6, sl, fp, pc}
   156d0:	push	{r4, r5, fp, lr}
   156d4:	add	fp, sp, #8
   156d8:	mov	r5, r1
   156dc:	mov	r4, r0
   156e0:	mov	r0, r1
   156e4:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   156e8:	ldrb	r1, [r4, #6]
   156ec:	cmp	r0, #0
   156f0:	andne	r1, r1, #223	; 0xdf
   156f4:	mov	r0, #0
   156f8:	cmp	r1, r5
   156fc:	popne	{r4, r5, fp, pc}
   15700:	cmp	r5, #0
   15704:	beq	15714 <putchar_unlocked@plt+0x41f0>
   15708:	mov	r0, r4
   1570c:	pop	{r4, r5, fp, lr}
   15710:	b	1571c <putchar_unlocked@plt+0x41f8>
   15714:	mov	r0, #1
   15718:	pop	{r4, r5, fp, pc}
   1571c:	push	{r4, sl, fp, lr}
   15720:	add	fp, sp, #8
   15724:	mov	r4, r0
   15728:	mov	r0, #0
   1572c:	bl	16a04 <putchar_unlocked@plt+0x54e0>
   15730:	ldrb	r1, [r4, #7]
   15734:	cmp	r0, #0
   15738:	beq	15750 <putchar_unlocked@plt+0x422c>
   1573c:	tst	r1, #223	; 0xdf
   15740:	moveq	r0, #1
   15744:	popeq	{r4, sl, fp, pc}
   15748:	mov	r0, #0
   1574c:	pop	{r4, sl, fp, pc}
   15750:	cmp	r1, #0
   15754:	moveq	r0, #1
   15758:	popeq	{r4, sl, fp, pc}
   1575c:	mov	r0, #0
   15760:	pop	{r4, sl, fp, pc}
   15764:	push	{r4, r5, fp, lr}
   15768:	add	fp, sp, #8
   1576c:	mov	r5, r0
   15770:	mov	r0, #33	; 0x21
   15774:	bl	16284 <putchar_unlocked@plt+0x4d60>
   15778:	mov	r4, r0
   1577c:	add	r1, r5, #44	; 0x2c
   15780:	mov	r2, #32
   15784:	bl	11410 <strncpy@plt>
   15788:	mov	r5, #0
   1578c:	strb	r5, [r4, #32]
   15790:	mov	r0, r4
   15794:	bl	113d4 <strlen@plt>
   15798:	cmp	r0, #1
   1579c:	blt	157c4 <putchar_unlocked@plt+0x42a0>
   157a0:	add	r1, r4, r0
   157a4:	mov	r0, r1
   157a8:	ldrb	r2, [r0, #-1]!
   157ac:	cmp	r2, #32
   157b0:	bne	157c4 <putchar_unlocked@plt+0x42a0>
   157b4:	strb	r5, [r1, #-1]
   157b8:	cmp	r4, r0
   157bc:	mov	r1, r0
   157c0:	bcc	157a8 <putchar_unlocked@plt+0x4284>
   157c4:	mov	r0, r4
   157c8:	pop	{r4, r5, fp, pc}
   157cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157d0:	add	fp, sp, #28
   157d4:	sub	sp, sp, #12
   157d8:	mov	r6, r3
   157dc:	str	r2, [sp, #4]
   157e0:	mov	r9, r1
   157e4:	mov	r7, #0
   157e8:	str	r7, [sp, #8]
   157ec:	bl	1123c <utmpxname@plt>
   157f0:	bl	1129c <setutxent@plt>
   157f4:	bl	1150c <getutxent@plt>
   157f8:	cmp	r0, #0
   157fc:	beq	1587c <putchar_unlocked@plt+0x4358>
   15800:	mov	r5, r0
   15804:	mov	r4, #0
   15808:	mov	r8, #384	; 0x180
   1580c:	add	sl, sp, #8
   15810:	mov	r7, #0
   15814:	mov	r0, r5
   15818:	mov	r1, r6
   1581c:	bl	1589c <putchar_unlocked@plt+0x4378>
   15820:	cmp	r0, #0
   15824:	beq	15868 <putchar_unlocked@plt+0x4344>
   15828:	ldr	r0, [sp, #8]
   1582c:	cmp	r4, r0
   15830:	bne	15850 <putchar_unlocked@plt+0x432c>
   15834:	str	r8, [sp]
   15838:	mov	r0, r7
   1583c:	mov	r1, sl
   15840:	mov	r2, #1
   15844:	mvn	r3, #0
   15848:	bl	163a8 <putchar_unlocked@plt+0x4e84>
   1584c:	mov	r7, r0
   15850:	add	r0, r4, r4, lsl #1
   15854:	add	r0, r7, r0, lsl #7
   15858:	mov	r1, r5
   1585c:	mov	r2, #384	; 0x180
   15860:	bl	11260 <memcpy@plt>
   15864:	add	r4, r4, #1
   15868:	bl	1150c <getutxent@plt>
   1586c:	mov	r5, r0
   15870:	cmp	r0, #0
   15874:	bne	15814 <putchar_unlocked@plt+0x42f0>
   15878:	b	15880 <putchar_unlocked@plt+0x435c>
   1587c:	mov	r4, #0
   15880:	bl	11470 <endutxent@plt>
   15884:	str	r4, [r9]
   15888:	ldr	r0, [sp, #4]
   1588c:	str	r7, [r0]
   15890:	mov	r0, #0
   15894:	sub	sp, fp, #28
   15898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1589c:	push	{r4, sl, fp, lr}
   158a0:	add	fp, sp, #8
   158a4:	ldrb	r2, [r0, #44]	; 0x2c
   158a8:	mov	r4, #0
   158ac:	cmp	r2, #0
   158b0:	mov	r2, #0
   158b4:	ldrhne	r2, [r0]
   158b8:	subne	r2, r2, #7
   158bc:	clzne	r2, r2
   158c0:	lsrne	r2, r2, #5
   158c4:	tst	r1, #2
   158c8:	beq	158dc <putchar_unlocked@plt+0x43b8>
   158cc:	cmp	r2, #0
   158d0:	bne	158dc <putchar_unlocked@plt+0x43b8>
   158d4:	mov	r0, r4
   158d8:	pop	{r4, sl, fp, pc}
   158dc:	tst	r1, #1
   158e0:	beq	1590c <putchar_unlocked@plt+0x43e8>
   158e4:	eors	r1, r2, #1
   158e8:	bne	1590c <putchar_unlocked@plt+0x43e8>
   158ec:	ldr	r0, [r0, #4]
   158f0:	cmp	r0, #1
   158f4:	blt	1590c <putchar_unlocked@plt+0x43e8>
   158f8:	mov	r4, #0
   158fc:	mov	r1, #0
   15900:	bl	113b0 <kill@plt>
   15904:	cmn	r0, #1
   15908:	ble	15918 <putchar_unlocked@plt+0x43f4>
   1590c:	mov	r4, #1
   15910:	mov	r0, r4
   15914:	pop	{r4, sl, fp, pc}
   15918:	bl	113ec <__errno_location@plt>
   1591c:	ldr	r0, [r0]
   15920:	cmp	r0, #3
   15924:	movne	r4, #1
   15928:	mov	r0, r4
   1592c:	pop	{r4, sl, fp, pc}
   15930:	push	{r4, r5, r6, sl, fp, lr}
   15934:	add	fp, sp, #16
   15938:	mov	r4, r0
   1593c:	cmp	r0, #0
   15940:	beq	15964 <putchar_unlocked@plt+0x4440>
   15944:	mov	r0, r4
   15948:	bl	113d4 <strlen@plt>
   1594c:	add	r5, r0, #1
   15950:	cmp	r5, #58	; 0x3a
   15954:	bls	15968 <putchar_unlocked@plt+0x4444>
   15958:	add	r0, r0, #10
   1595c:	bic	r0, r0, #3
   15960:	b	1596c <putchar_unlocked@plt+0x4448>
   15964:	mov	r5, #0
   15968:	mov	r0, #64	; 0x40
   1596c:	bl	166cc <putchar_unlocked@plt+0x51a8>
   15970:	mov	r6, r0
   15974:	cmp	r0, #0
   15978:	beq	159ac <putchar_unlocked@plt+0x4488>
   1597c:	mov	r1, #0
   15980:	str	r1, [r6]
   15984:	cmp	r4, #0
   15988:	mov	r0, r4
   1598c:	movwne	r0, #1
   15990:	strb	r0, [r6, #4]
   15994:	mov	r0, r6
   15998:	strb	r1, [r0, #5]!
   1599c:	beq	159ac <putchar_unlocked@plt+0x4488>
   159a0:	mov	r1, r4
   159a4:	mov	r2, r5
   159a8:	bl	159b4 <putchar_unlocked@plt+0x4490>
   159ac:	mov	r0, r6
   159b0:	pop	{r4, r5, r6, sl, fp, pc}
   159b4:	push	{r4, r5, fp, lr}
   159b8:	add	fp, sp, #8
   159bc:	mov	r4, r2
   159c0:	mov	r5, r0
   159c4:	bl	11260 <memcpy@plt>
   159c8:	mov	r0, #0
   159cc:	strb	r0, [r5, r4]
   159d0:	pop	{r4, r5, fp, pc}
   159d4:	push	{r4, sl, fp, lr}
   159d8:	add	fp, sp, #8
   159dc:	cmp	r0, #2
   159e0:	popcc	{r4, sl, fp, pc}
   159e4:	ldr	r4, [r0]
   159e8:	bl	16afc <putchar_unlocked@plt+0x55d8>
   159ec:	cmp	r4, #0
   159f0:	mov	r0, r4
   159f4:	bne	159e4 <putchar_unlocked@plt+0x44c0>
   159f8:	pop	{r4, sl, fp, pc}
   159fc:	push	{r4, r5, r6, r7, fp, lr}
   15a00:	add	fp, sp, #16
   15a04:	mov	r4, r2
   15a08:	mov	r7, r1
   15a0c:	cmp	r0, #0
   15a10:	beq	15a54 <putchar_unlocked@plt+0x4530>
   15a14:	mov	r6, r0
   15a18:	bl	15a84 <putchar_unlocked@plt+0x4560>
   15a1c:	cmp	r0, #0
   15a20:	moveq	r0, #0
   15a24:	popeq	{r4, r5, r6, r7, fp, pc}
   15a28:	mov	r5, r0
   15a2c:	mov	r0, r7
   15a30:	mov	r1, r4
   15a34:	bl	112b4 <localtime_r@plt>
   15a38:	cmp	r0, #0
   15a3c:	beq	15a64 <putchar_unlocked@plt+0x4540>
   15a40:	mov	r0, r6
   15a44:	mov	r1, r4
   15a48:	bl	15b14 <putchar_unlocked@plt+0x45f0>
   15a4c:	eor	r6, r0, #1
   15a50:	b	15a68 <putchar_unlocked@plt+0x4544>
   15a54:	mov	r0, r7
   15a58:	mov	r1, r4
   15a5c:	pop	{r4, r5, r6, r7, fp, lr}
   15a60:	b	1120c <gmtime_r@plt>
   15a64:	mov	r6, #1
   15a68:	mov	r0, r5
   15a6c:	bl	15c2c <putchar_unlocked@plt+0x4708>
   15a70:	cmp	r0, #0
   15a74:	movne	r0, r4
   15a78:	cmp	r6, #0
   15a7c:	movwne	r0, #0
   15a80:	pop	{r4, r5, r6, r7, fp, pc}
   15a84:	push	{r4, r5, r6, r7, fp, lr}
   15a88:	add	fp, sp, #16
   15a8c:	mov	r4, r0
   15a90:	bl	15d54 <putchar_unlocked@plt+0x4830>
   15a94:	mov	r5, r0
   15a98:	ldrb	r0, [r4, #4]
   15a9c:	cmp	r5, #0
   15aa0:	beq	15ab8 <putchar_unlocked@plt+0x4594>
   15aa4:	cmp	r0, #0
   15aa8:	beq	15ac8 <putchar_unlocked@plt+0x45a4>
   15aac:	add	r0, r4, #5
   15ab0:	mov	r1, r5
   15ab4:	bl	11218 <strcmp@plt>
   15ab8:	cmp	r0, #0
   15abc:	moveq	r5, #1
   15ac0:	moveq	r0, r5
   15ac4:	popeq	{r4, r5, r6, r7, fp, pc}
   15ac8:	mov	r0, r5
   15acc:	bl	15930 <putchar_unlocked@plt+0x440c>
   15ad0:	mov	r5, #0
   15ad4:	cmp	r0, #0
   15ad8:	beq	15b0c <putchar_unlocked@plt+0x45e8>
   15adc:	mov	r6, r0
   15ae0:	mov	r0, r4
   15ae4:	bl	15d60 <putchar_unlocked@plt+0x483c>
   15ae8:	cmp	r0, #0
   15aec:	movne	r0, r6
   15af0:	popne	{r4, r5, r6, r7, fp, pc}
   15af4:	bl	113ec <__errno_location@plt>
   15af8:	mov	r4, r0
   15afc:	ldr	r7, [r0]
   15b00:	mov	r0, r6
   15b04:	bl	159d4 <putchar_unlocked@plt+0x44b0>
   15b08:	str	r7, [r4]
   15b0c:	mov	r0, r5
   15b10:	pop	{r4, r5, r6, r7, fp, pc}
   15b14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b18:	add	fp, sp, #24
   15b1c:	ldr	r7, [r1, #40]	; 0x28
   15b20:	mov	r8, #1
   15b24:	cmp	r7, #0
   15b28:	beq	15bcc <putchar_unlocked@plt+0x46a8>
   15b2c:	mov	r5, r1
   15b30:	mov	r6, r0
   15b34:	cmp	r7, r1
   15b38:	bcc	15b48 <putchar_unlocked@plt+0x4624>
   15b3c:	add	r0, r5, #44	; 0x2c
   15b40:	cmp	r7, r0
   15b44:	bcc	15bcc <putchar_unlocked@plt+0x46a8>
   15b48:	ldrb	r0, [r7]
   15b4c:	cmp	r0, #0
   15b50:	beq	15bc0 <putchar_unlocked@plt+0x469c>
   15b54:	add	r4, r6, #5
   15b58:	b	15b6c <putchar_unlocked@plt+0x4648>
   15b5c:	ldr	r0, [r6]
   15b60:	cmp	r0, #0
   15b64:	addne	r4, r0, #5
   15b68:	movne	r6, r0
   15b6c:	mov	r0, r4
   15b70:	mov	r1, r7
   15b74:	bl	11218 <strcmp@plt>
   15b78:	cmp	r0, #0
   15b7c:	beq	15bc8 <putchar_unlocked@plt+0x46a4>
   15b80:	ldrb	r0, [r4]
   15b84:	cmp	r0, #0
   15b88:	bne	15ba4 <putchar_unlocked@plt+0x4680>
   15b8c:	add	r0, r6, #5
   15b90:	cmp	r4, r0
   15b94:	bne	15bd4 <putchar_unlocked@plt+0x46b0>
   15b98:	ldrb	r0, [r6, #4]
   15b9c:	cmp	r0, #0
   15ba0:	beq	15bd4 <putchar_unlocked@plt+0x46b0>
   15ba4:	mov	r0, r4
   15ba8:	bl	113d4 <strlen@plt>
   15bac:	add	r4, r4, r0
   15bb0:	ldrb	r0, [r4, #1]!
   15bb4:	cmp	r0, #0
   15bb8:	bne	15b6c <putchar_unlocked@plt+0x4648>
   15bbc:	b	15b5c <putchar_unlocked@plt+0x4638>
   15bc0:	movw	r4, #28896	; 0x70e0
   15bc4:	movt	r4, #1
   15bc8:	str	r4, [r5, #40]	; 0x28
   15bcc:	mov	r0, r8
   15bd0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15bd4:	add	r0, r6, #64	; 0x40
   15bd8:	sub	r9, r0, r4
   15bdc:	mov	r0, r7
   15be0:	bl	113d4 <strlen@plt>
   15be4:	add	r2, r0, #1
   15be8:	cmp	r2, r9
   15bec:	bge	15c00 <putchar_unlocked@plt+0x46dc>
   15bf0:	mov	r0, r4
   15bf4:	mov	r1, r7
   15bf8:	bl	159b4 <putchar_unlocked@plt+0x4490>
   15bfc:	b	15bc8 <putchar_unlocked@plt+0x46a4>
   15c00:	mov	r0, r7
   15c04:	bl	15930 <putchar_unlocked@plt+0x440c>
   15c08:	str	r0, [r6]
   15c0c:	cmp	r0, #0
   15c10:	moveq	r8, #0
   15c14:	moveq	r0, r8
   15c18:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   15c1c:	mov	r1, #0
   15c20:	strb	r1, [r0, #4]
   15c24:	add	r4, r0, #5
   15c28:	b	15bc8 <putchar_unlocked@plt+0x46a4>
   15c2c:	push	{r4, r5, r6, r7, fp, lr}
   15c30:	add	fp, sp, #16
   15c34:	cmp	r0, #1
   15c38:	moveq	r5, #1
   15c3c:	moveq	r0, r5
   15c40:	popeq	{r4, r5, r6, r7, fp, pc}
   15c44:	mov	r4, r0
   15c48:	bl	113ec <__errno_location@plt>
   15c4c:	mov	r6, r0
   15c50:	ldr	r7, [r0]
   15c54:	mov	r0, r4
   15c58:	bl	15d60 <putchar_unlocked@plt+0x483c>
   15c5c:	mov	r5, r0
   15c60:	cmp	r0, #0
   15c64:	ldreq	r7, [r6]
   15c68:	mov	r0, r4
   15c6c:	bl	159d4 <putchar_unlocked@plt+0x44b0>
   15c70:	str	r7, [r6]
   15c74:	mov	r0, r5
   15c78:	pop	{r4, r5, r6, r7, fp, pc}
   15c7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15c80:	add	fp, sp, #24
   15c84:	sub	sp, sp, #48	; 0x30
   15c88:	mov	r4, r1
   15c8c:	cmp	r0, #0
   15c90:	beq	15d2c <putchar_unlocked@plt+0x4808>
   15c94:	mov	r6, r0
   15c98:	bl	15a84 <putchar_unlocked@plt+0x4560>
   15c9c:	cmp	r0, #0
   15ca0:	beq	15d44 <putchar_unlocked@plt+0x4820>
   15ca4:	mov	r7, r0
   15ca8:	ldm	r4, {r0, r1, r2, r3, r5, ip}
   15cac:	stm	sp, {r0, r1, r2, r3, r5}
   15cb0:	mvn	r0, #0
   15cb4:	str	r0, [sp, #28]
   15cb8:	str	ip, [sp, #20]
   15cbc:	ldr	r0, [r4, #32]
   15cc0:	str	r0, [sp, #32]
   15cc4:	mov	r0, sp
   15cc8:	bl	11224 <mktime@plt>
   15ccc:	mov	r5, r0
   15cd0:	ldr	r0, [sp, #28]
   15cd4:	cmn	r0, #1
   15cd8:	ble	15d3c <putchar_unlocked@plt+0x4818>
   15cdc:	mov	r8, sp
   15ce0:	mov	r0, r6
   15ce4:	mov	r1, r8
   15ce8:	bl	15b14 <putchar_unlocked@plt+0x45f0>
   15cec:	mov	r6, r0
   15cf0:	mov	r0, r7
   15cf4:	bl	15c2c <putchar_unlocked@plt+0x4708>
   15cf8:	cmp	r6, #0
   15cfc:	cmpne	r0, #0
   15d00:	beq	15d44 <putchar_unlocked@plt+0x4820>
   15d04:	mov	r0, #28
   15d08:	add	r1, r8, #16
   15d0c:	vld1.32	{d16-d17}, [r8], r0
   15d10:	vld1.64	{d18-d19}, [r1]
   15d14:	add	r1, r4, #16
   15d18:	vld1.32	{d20-d21}, [r8]
   15d1c:	vst1.32	{d18-d19}, [r1]
   15d20:	vst1.32	{d16-d17}, [r4], r0
   15d24:	vst1.32	{d20-d21}, [r4]
   15d28:	b	15d48 <putchar_unlocked@plt+0x4824>
   15d2c:	mov	r0, r4
   15d30:	sub	sp, fp, #24
   15d34:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15d38:	b	114b8 <timegm@plt>
   15d3c:	mov	r0, r7
   15d40:	bl	15c2c <putchar_unlocked@plt+0x4708>
   15d44:	mvn	r5, #0
   15d48:	mov	r0, r5
   15d4c:	sub	sp, fp, #24
   15d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15d54:	movw	r0, #30072	; 0x7578
   15d58:	movt	r0, #1
   15d5c:	b	11338 <getenv@plt>
   15d60:	push	{fp, lr}
   15d64:	mov	fp, sp
   15d68:	ldrb	r1, [r0, #4]
   15d6c:	cmp	r1, #0
   15d70:	addne	r1, r0, #5
   15d74:	mov	r0, r1
   15d78:	bl	15d98 <putchar_unlocked@plt+0x4874>
   15d7c:	mov	r1, r0
   15d80:	mov	r0, #0
   15d84:	cmp	r1, #0
   15d88:	popne	{fp, pc}
   15d8c:	bl	112d8 <tzset@plt>
   15d90:	mov	r0, #1
   15d94:	pop	{fp, pc}
   15d98:	cmp	r0, #0
   15d9c:	beq	15db4 <putchar_unlocked@plt+0x4890>
   15da0:	mov	r1, r0
   15da4:	movw	r0, #30072	; 0x7578
   15da8:	movt	r0, #1
   15dac:	mov	r2, #1
   15db0:	b	113e0 <setenv@plt>
   15db4:	movw	r0, #30072	; 0x7578
   15db8:	movt	r0, #1
   15dbc:	b	114e8 <unsetenv@plt>
   15dc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15dc4:	add	fp, sp, #24
   15dc8:	sub	sp, sp, #32
   15dcc:	mov	r4, r2
   15dd0:	mov	r8, r0
   15dd4:	ldr	r6, [fp, #12]
   15dd8:	ldr	r7, [fp, #8]
   15ddc:	cmp	r1, #0
   15de0:	beq	15e08 <putchar_unlocked@plt+0x48e4>
   15de4:	mov	r5, r1
   15de8:	str	r4, [sp]
   15dec:	str	r3, [sp, #4]
   15df0:	movw	r2, #30075	; 0x757b
   15df4:	movt	r2, #1
   15df8:	mov	r0, r8
   15dfc:	mov	r1, #1
   15e00:	mov	r3, r5
   15e04:	b	15e20 <putchar_unlocked@plt+0x48fc>
   15e08:	str	r3, [sp]
   15e0c:	movw	r2, #30087	; 0x7587
   15e10:	movt	r2, #1
   15e14:	mov	r0, r8
   15e18:	mov	r1, #1
   15e1c:	mov	r3, r4
   15e20:	bl	11434 <__fprintf_chk@plt>
   15e24:	movw	r1, #30094	; 0x758e
   15e28:	movt	r1, #1
   15e2c:	mov	r0, #0
   15e30:	mov	r2, #5
   15e34:	bl	11290 <dcgettext@plt>
   15e38:	mov	r3, r0
   15e3c:	movw	r0, #2022	; 0x7e6
   15e40:	str	r0, [sp]
   15e44:	movw	r2, #30812	; 0x785c
   15e48:	movt	r2, #1
   15e4c:	mov	r0, r8
   15e50:	mov	r1, #1
   15e54:	bl	11434 <__fprintf_chk@plt>
   15e58:	movw	r4, #28895	; 0x70df
   15e5c:	movt	r4, #1
   15e60:	mov	r0, r4
   15e64:	mov	r1, r8
   15e68:	bl	111f4 <fputs_unlocked@plt>
   15e6c:	movw	r1, #30098	; 0x7592
   15e70:	movt	r1, #1
   15e74:	mov	r0, #0
   15e78:	mov	r2, #5
   15e7c:	bl	11290 <dcgettext@plt>
   15e80:	mov	r2, r0
   15e84:	movw	r3, #30269	; 0x763d
   15e88:	movt	r3, #1
   15e8c:	mov	r0, r8
   15e90:	mov	r1, #1
   15e94:	bl	11434 <__fprintf_chk@plt>
   15e98:	mov	r0, r4
   15e9c:	mov	r1, r8
   15ea0:	bl	111f4 <fputs_unlocked@plt>
   15ea4:	cmp	r6, #9
   15ea8:	bhi	15ee4 <putchar_unlocked@plt+0x49c0>
   15eac:	add	r0, pc, #0
   15eb0:	ldr	pc, [r0, r6, lsl #2]
   15eb4:	ldrdeq	r5, [r1], -ip
   15eb8:	strdeq	r5, [r1], -r0
   15ebc:	andeq	r5, r1, r0, lsr #30
   15ec0:	andeq	r5, r1, r8, asr #30
   15ec4:	andeq	r5, r1, r0, ror pc
   15ec8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   15ecc:	andeq	r5, r1, r0, asr #31
   15ed0:	strdeq	r5, [r1], -r8
   15ed4:	muleq	r1, r8, r0
   15ed8:	andeq	r6, r1, r0, asr #32
   15edc:	sub	sp, fp, #24
   15ee0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ee4:	movw	r1, #30622	; 0x779e
   15ee8:	movt	r1, #1
   15eec:	b	16048 <putchar_unlocked@plt+0x4b24>
   15ef0:	movw	r1, #30303	; 0x765f
   15ef4:	movt	r1, #1
   15ef8:	mov	r0, #0
   15efc:	mov	r2, #5
   15f00:	bl	11290 <dcgettext@plt>
   15f04:	mov	r2, r0
   15f08:	ldr	r3, [r7]
   15f0c:	mov	r0, r8
   15f10:	mov	r1, #1
   15f14:	sub	sp, fp, #24
   15f18:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f1c:	b	11434 <__fprintf_chk@plt>
   15f20:	movw	r1, #30319	; 0x766f
   15f24:	movt	r1, #1
   15f28:	mov	r0, #0
   15f2c:	mov	r2, #5
   15f30:	bl	11290 <dcgettext@plt>
   15f34:	mov	r2, r0
   15f38:	ldr	r3, [r7]
   15f3c:	ldr	r0, [r7, #4]
   15f40:	str	r0, [sp]
   15f44:	b	16034 <putchar_unlocked@plt+0x4b10>
   15f48:	movw	r1, #30342	; 0x7686
   15f4c:	movt	r1, #1
   15f50:	mov	r0, #0
   15f54:	mov	r2, #5
   15f58:	bl	11290 <dcgettext@plt>
   15f5c:	mov	r2, r0
   15f60:	ldr	r3, [r7]
   15f64:	ldmib	r7, {r0, r1}
   15f68:	stm	sp, {r0, r1}
   15f6c:	b	16034 <putchar_unlocked@plt+0x4b10>
   15f70:	movw	r1, #30370	; 0x76a2
   15f74:	movt	r1, #1
   15f78:	mov	r0, #0
   15f7c:	mov	r2, #5
   15f80:	bl	11290 <dcgettext@plt>
   15f84:	mov	r2, r0
   15f88:	ldr	r3, [r7]
   15f8c:	ldmib	r7, {r0, r1, r7}
   15f90:	stm	sp, {r0, r1, r7}
   15f94:	b	16034 <putchar_unlocked@plt+0x4b10>
   15f98:	movw	r1, #30402	; 0x76c2
   15f9c:	movt	r1, #1
   15fa0:	mov	r0, #0
   15fa4:	mov	r2, #5
   15fa8:	bl	11290 <dcgettext@plt>
   15fac:	mov	r2, r0
   15fb0:	ldr	r3, [r7]
   15fb4:	ldmib	r7, {r0, r1, r6, r7}
   15fb8:	stm	sp, {r0, r1, r6, r7}
   15fbc:	b	16034 <putchar_unlocked@plt+0x4b10>
   15fc0:	movw	r1, #30438	; 0x76e6
   15fc4:	movt	r1, #1
   15fc8:	mov	r0, #0
   15fcc:	mov	r2, #5
   15fd0:	bl	11290 <dcgettext@plt>
   15fd4:	mov	r2, r0
   15fd8:	ldr	r3, [r7]
   15fdc:	ldmib	r7, {r0, r1, r6}
   15fe0:	ldr	r5, [r7, #16]
   15fe4:	ldr	r7, [r7, #20]
   15fe8:	stm	sp, {r0, r1, r6}
   15fec:	str	r5, [sp, #12]
   15ff0:	str	r7, [sp, #16]
   15ff4:	b	16034 <putchar_unlocked@plt+0x4b10>
   15ff8:	movw	r1, #30478	; 0x770e
   15ffc:	movt	r1, #1
   16000:	mov	r0, #0
   16004:	mov	r2, #5
   16008:	bl	11290 <dcgettext@plt>
   1600c:	mov	r2, r0
   16010:	ldr	r3, [r7]
   16014:	ldmib	r7, {r0, r1, r6}
   16018:	ldr	r5, [r7, #16]
   1601c:	ldr	r4, [r7, #20]
   16020:	ldr	r7, [r7, #24]
   16024:	stm	sp, {r0, r1, r6}
   16028:	str	r5, [sp, #12]
   1602c:	str	r4, [sp, #16]
   16030:	str	r7, [sp, #20]
   16034:	mov	r0, r8
   16038:	mov	r1, #1
   1603c:	b	160e8 <putchar_unlocked@plt+0x4bc4>
   16040:	movw	r1, #30570	; 0x776a
   16044:	movt	r1, #1
   16048:	mov	r0, #0
   1604c:	mov	r2, #5
   16050:	bl	11290 <dcgettext@plt>
   16054:	mov	ip, r0
   16058:	ldr	r3, [r7]
   1605c:	ldr	r0, [r7, #4]
   16060:	ldr	r1, [r7, #8]
   16064:	ldr	r6, [r7, #12]
   16068:	ldr	r5, [r7, #16]
   1606c:	ldr	r4, [r7, #20]
   16070:	ldr	r2, [r7, #24]
   16074:	ldr	lr, [r7, #28]
   16078:	ldr	r7, [r7, #32]
   1607c:	stm	sp, {r0, r1, r6}
   16080:	str	r5, [sp, #12]
   16084:	str	r4, [sp, #16]
   16088:	str	r2, [sp, #20]
   1608c:	str	lr, [sp, #24]
   16090:	str	r7, [sp, #28]
   16094:	b	160dc <putchar_unlocked@plt+0x4bb8>
   16098:	movw	r1, #30522	; 0x773a
   1609c:	movt	r1, #1
   160a0:	mov	r0, #0
   160a4:	mov	r2, #5
   160a8:	bl	11290 <dcgettext@plt>
   160ac:	mov	ip, r0
   160b0:	ldr	r3, [r7]
   160b4:	ldmib	r7, {r0, r1, r6}
   160b8:	ldr	r5, [r7, #16]
   160bc:	ldr	r4, [r7, #20]
   160c0:	ldr	r2, [r7, #24]
   160c4:	ldr	r7, [r7, #28]
   160c8:	stm	sp, {r0, r1, r6}
   160cc:	str	r5, [sp, #12]
   160d0:	str	r4, [sp, #16]
   160d4:	str	r2, [sp, #20]
   160d8:	str	r7, [sp, #24]
   160dc:	mov	r0, r8
   160e0:	mov	r1, #1
   160e4:	mov	r2, ip
   160e8:	bl	11434 <__fprintf_chk@plt>
   160ec:	sub	sp, fp, #24
   160f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   160f4:	push	{r4, sl, fp, lr}
   160f8:	add	fp, sp, #8
   160fc:	sub	sp, sp, #8
   16100:	mov	lr, #0
   16104:	ldr	ip, [fp, #8]
   16108:	ldr	r4, [ip, lr, lsl #2]
   1610c:	add	lr, lr, #1
   16110:	cmp	r4, #0
   16114:	bne	16108 <putchar_unlocked@plt+0x4be4>
   16118:	sub	r4, lr, #1
   1611c:	str	ip, [sp]
   16120:	str	r4, [sp, #4]
   16124:	bl	15dc0 <putchar_unlocked@plt+0x489c>
   16128:	sub	sp, fp, #8
   1612c:	pop	{r4, sl, fp, pc}
   16130:	push	{r4, r5, fp, lr}
   16134:	add	fp, sp, #8
   16138:	sub	sp, sp, #48	; 0x30
   1613c:	mov	ip, #0
   16140:	ldr	r4, [fp, #8]
   16144:	add	lr, sp, #8
   16148:	ldr	r5, [r4]
   1614c:	str	r5, [lr, ip, lsl #2]
   16150:	cmp	r5, #0
   16154:	beq	16168 <putchar_unlocked@plt+0x4c44>
   16158:	add	ip, ip, #1
   1615c:	add	r4, r4, #4
   16160:	cmp	ip, #10
   16164:	bcc	16148 <putchar_unlocked@plt+0x4c24>
   16168:	str	lr, [sp]
   1616c:	str	ip, [sp, #4]
   16170:	bl	15dc0 <putchar_unlocked@plt+0x489c>
   16174:	sub	sp, fp, #8
   16178:	pop	{r4, r5, fp, pc}
   1617c:	push	{fp, lr}
   16180:	mov	fp, sp
   16184:	sub	sp, sp, #8
   16188:	add	ip, fp, #8
   1618c:	str	ip, [sp, #4]
   16190:	str	ip, [sp]
   16194:	bl	16130 <putchar_unlocked@plt+0x4c0c>
   16198:	mov	sp, fp
   1619c:	pop	{fp, pc}
   161a0:	push	{fp, lr}
   161a4:	mov	fp, sp
   161a8:	movw	r0, #33164	; 0x818c
   161ac:	movt	r0, #2
   161b0:	ldr	r1, [r0]
   161b4:	movw	r0, #28895	; 0x70df
   161b8:	movt	r0, #1
   161bc:	bl	111f4 <fputs_unlocked@plt>
   161c0:	movw	r1, #30682	; 0x77da
   161c4:	movt	r1, #1
   161c8:	mov	r0, #0
   161cc:	mov	r2, #5
   161d0:	bl	11290 <dcgettext@plt>
   161d4:	mov	r1, r0
   161d8:	movw	r2, #30702	; 0x77ee
   161dc:	movt	r2, #1
   161e0:	mov	r0, #1
   161e4:	bl	1141c <__printf_chk@plt>
   161e8:	movw	r1, #30724	; 0x7804
   161ec:	movt	r1, #1
   161f0:	mov	r0, #0
   161f4:	mov	r2, #5
   161f8:	bl	11290 <dcgettext@plt>
   161fc:	mov	r1, r0
   16200:	movw	r2, #29048	; 0x7178
   16204:	movt	r2, #1
   16208:	movw	r3, #29242	; 0x723a
   1620c:	movt	r3, #1
   16210:	mov	r0, #1
   16214:	bl	1141c <__printf_chk@plt>
   16218:	movw	r1, #30744	; 0x7818
   1621c:	movt	r1, #1
   16220:	mov	r0, #0
   16224:	mov	r2, #5
   16228:	bl	11290 <dcgettext@plt>
   1622c:	mov	r1, r0
   16230:	movw	r2, #30783	; 0x783f
   16234:	movt	r2, #1
   16238:	mov	r0, #1
   1623c:	pop	{fp, lr}
   16240:	b	1141c <__printf_chk@plt>
   16244:	b	16248 <putchar_unlocked@plt+0x4d24>
   16248:	push	{r4, r5, r6, sl, fp, lr}
   1624c:	add	fp, sp, #16
   16250:	mov	r4, r2
   16254:	mov	r5, r1
   16258:	mov	r6, r0
   1625c:	bl	16c0c <putchar_unlocked@plt+0x56e8>
   16260:	cmp	r0, #0
   16264:	popne	{r4, r5, r6, sl, fp, pc}
   16268:	cmp	r6, #0
   1626c:	beq	16280 <putchar_unlocked@plt+0x4d5c>
   16270:	cmp	r5, #0
   16274:	cmpne	r4, #0
   16278:	bne	16280 <putchar_unlocked@plt+0x4d5c>
   1627c:	pop	{r4, r5, r6, sl, fp, pc}
   16280:	bl	16634 <putchar_unlocked@plt+0x5110>
   16284:	push	{fp, lr}
   16288:	mov	fp, sp
   1628c:	bl	166cc <putchar_unlocked@plt+0x51a8>
   16290:	bl	16298 <putchar_unlocked@plt+0x4d74>
   16294:	pop	{fp, pc}
   16298:	cmp	r0, #0
   1629c:	bxne	lr
   162a0:	push	{fp, lr}
   162a4:	mov	fp, sp
   162a8:	bl	16634 <putchar_unlocked@plt+0x5110>
   162ac:	push	{fp, lr}
   162b0:	mov	fp, sp
   162b4:	bl	16b40 <putchar_unlocked@plt+0x561c>
   162b8:	bl	16298 <putchar_unlocked@plt+0x4d74>
   162bc:	pop	{fp, pc}
   162c0:	b	16284 <putchar_unlocked@plt+0x4d60>
   162c4:	push	{r4, r5, fp, lr}
   162c8:	add	fp, sp, #8
   162cc:	mov	r4, r1
   162d0:	mov	r5, r0
   162d4:	bl	166fc <putchar_unlocked@plt+0x51d8>
   162d8:	cmp	r0, #0
   162dc:	popne	{r4, r5, fp, pc}
   162e0:	cmp	r5, #0
   162e4:	beq	162f4 <putchar_unlocked@plt+0x4dd0>
   162e8:	cmp	r4, #0
   162ec:	bne	162f4 <putchar_unlocked@plt+0x4dd0>
   162f0:	pop	{r4, r5, fp, pc}
   162f4:	bl	16634 <putchar_unlocked@plt+0x5110>
   162f8:	push	{fp, lr}
   162fc:	mov	fp, sp
   16300:	bl	16b44 <putchar_unlocked@plt+0x5620>
   16304:	bl	16298 <putchar_unlocked@plt+0x4d74>
   16308:	pop	{fp, pc}
   1630c:	push	{fp, lr}
   16310:	mov	fp, sp
   16314:	bl	16b54 <putchar_unlocked@plt+0x5630>
   16318:	bl	16298 <putchar_unlocked@plt+0x4d74>
   1631c:	pop	{fp, pc}
   16320:	push	{fp, lr}
   16324:	mov	fp, sp
   16328:	mov	r2, r1
   1632c:	mov	r1, r0
   16330:	mov	r0, #0
   16334:	bl	16248 <putchar_unlocked@plt+0x4d24>
   16338:	pop	{fp, pc}
   1633c:	mov	r2, r1
   16340:	mov	r1, r0
   16344:	mov	r0, #0
   16348:	b	1630c <putchar_unlocked@plt+0x4de8>
   1634c:	mov	r2, #1
   16350:	b	16354 <putchar_unlocked@plt+0x4e30>
   16354:	push	{r4, r5, fp, lr}
   16358:	add	fp, sp, #8
   1635c:	mov	r4, r1
   16360:	ldr	r5, [r1]
   16364:	cmp	r0, #0
   16368:	beq	16380 <putchar_unlocked@plt+0x4e5c>
   1636c:	mov	r1, #1
   16370:	add	r1, r1, r5, lsr #1
   16374:	adds	r5, r5, r1
   16378:	bcc	16398 <putchar_unlocked@plt+0x4e74>
   1637c:	bl	16634 <putchar_unlocked@plt+0x5110>
   16380:	cmp	r5, #0
   16384:	bne	16398 <putchar_unlocked@plt+0x4e74>
   16388:	mov	r1, #64	; 0x40
   1638c:	udiv	r5, r1, r2
   16390:	cmp	r2, #64	; 0x40
   16394:	addhi	r5, r5, #1
   16398:	mov	r1, r5
   1639c:	bl	16248 <putchar_unlocked@plt+0x4d24>
   163a0:	str	r5, [r4]
   163a4:	pop	{r4, r5, fp, pc}
   163a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   163ac:	add	fp, sp, #24
   163b0:	mov	r8, r1
   163b4:	ldr	r6, [r1]
   163b8:	add	r1, r6, r6, asr #1
   163bc:	cmp	r1, r6
   163c0:	mvnvs	r1, #-2147483648	; 0x80000000
   163c4:	cmp	r1, r3
   163c8:	mov	r5, r1
   163cc:	movgt	r5, r3
   163d0:	cmn	r3, #1
   163d4:	movle	r5, r1
   163d8:	ldr	r4, [fp, #8]
   163dc:	cmn	r4, #1
   163e0:	ble	16408 <putchar_unlocked@plt+0x4ee4>
   163e4:	cmp	r4, #0
   163e8:	beq	1645c <putchar_unlocked@plt+0x4f38>
   163ec:	cmn	r5, #1
   163f0:	ble	16430 <putchar_unlocked@plt+0x4f0c>
   163f4:	mvn	r7, #-2147483648	; 0x80000000
   163f8:	udiv	r1, r7, r4
   163fc:	cmp	r1, r5
   16400:	bge	1645c <putchar_unlocked@plt+0x4f38>
   16404:	b	1646c <putchar_unlocked@plt+0x4f48>
   16408:	cmn	r5, #1
   1640c:	ble	1644c <putchar_unlocked@plt+0x4f28>
   16410:	cmn	r4, #1
   16414:	beq	1645c <putchar_unlocked@plt+0x4f38>
   16418:	mov	r1, #-2147483648	; 0x80000000
   1641c:	sdiv	r1, r1, r4
   16420:	mvn	r7, #-2147483648	; 0x80000000
   16424:	cmp	r1, r5
   16428:	bge	1645c <putchar_unlocked@plt+0x4f38>
   1642c:	b	1646c <putchar_unlocked@plt+0x4f48>
   16430:	beq	1645c <putchar_unlocked@plt+0x4f38>
   16434:	mov	r1, #-2147483648	; 0x80000000
   16438:	sdiv	r1, r1, r5
   1643c:	mvn	r7, #-2147483648	; 0x80000000
   16440:	cmp	r1, r4
   16444:	bge	1645c <putchar_unlocked@plt+0x4f38>
   16448:	b	1646c <putchar_unlocked@plt+0x4f48>
   1644c:	mvn	r7, #-2147483648	; 0x80000000
   16450:	sdiv	r1, r7, r4
   16454:	cmp	r5, r1
   16458:	blt	1646c <putchar_unlocked@plt+0x4f48>
   1645c:	mul	r1, r5, r4
   16460:	mov	r7, #64	; 0x40
   16464:	cmp	r1, #63	; 0x3f
   16468:	bgt	16474 <putchar_unlocked@plt+0x4f50>
   1646c:	sdiv	r5, r7, r4
   16470:	mul	r1, r5, r4
   16474:	cmp	r0, #0
   16478:	moveq	r7, #0
   1647c:	streq	r7, [r8]
   16480:	sub	r7, r5, r6
   16484:	cmp	r7, r2
   16488:	bge	16534 <putchar_unlocked@plt+0x5010>
   1648c:	add	r5, r6, r2
   16490:	mov	r1, #0
   16494:	cmp	r5, r3
   16498:	mov	r2, #0
   1649c:	movwgt	r2, #1
   164a0:	cmn	r3, #1
   164a4:	movwgt	r1, #1
   164a8:	cmp	r5, r6
   164ac:	bvs	1651c <putchar_unlocked@plt+0x4ff8>
   164b0:	ands	r1, r1, r2
   164b4:	bne	1651c <putchar_unlocked@plt+0x4ff8>
   164b8:	cmn	r4, #1
   164bc:	ble	164e4 <putchar_unlocked@plt+0x4fc0>
   164c0:	cmp	r4, #0
   164c4:	beq	16530 <putchar_unlocked@plt+0x500c>
   164c8:	cmn	r5, #1
   164cc:	ble	16508 <putchar_unlocked@plt+0x4fe4>
   164d0:	mvn	r1, #-2147483648	; 0x80000000
   164d4:	udiv	r1, r1, r4
   164d8:	cmp	r1, r5
   164dc:	bge	16530 <putchar_unlocked@plt+0x500c>
   164e0:	b	1651c <putchar_unlocked@plt+0x4ff8>
   164e4:	cmn	r5, #1
   164e8:	ble	16520 <putchar_unlocked@plt+0x4ffc>
   164ec:	cmn	r4, #1
   164f0:	beq	16530 <putchar_unlocked@plt+0x500c>
   164f4:	mov	r1, #-2147483648	; 0x80000000
   164f8:	sdiv	r1, r1, r4
   164fc:	cmp	r1, r5
   16500:	bge	16530 <putchar_unlocked@plt+0x500c>
   16504:	b	1651c <putchar_unlocked@plt+0x4ff8>
   16508:	beq	16530 <putchar_unlocked@plt+0x500c>
   1650c:	mov	r1, #-2147483648	; 0x80000000
   16510:	sdiv	r1, r1, r5
   16514:	cmp	r1, r4
   16518:	bge	16530 <putchar_unlocked@plt+0x500c>
   1651c:	bl	16634 <putchar_unlocked@plt+0x5110>
   16520:	mvn	r1, #-2147483648	; 0x80000000
   16524:	sdiv	r1, r1, r4
   16528:	cmp	r5, r1
   1652c:	blt	1651c <putchar_unlocked@plt+0x4ff8>
   16530:	mul	r1, r5, r4
   16534:	bl	162c4 <putchar_unlocked@plt+0x4da0>
   16538:	str	r5, [r8]
   1653c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16540:	mov	r1, #1
   16544:	b	16548 <putchar_unlocked@plt+0x5024>
   16548:	push	{fp, lr}
   1654c:	mov	fp, sp
   16550:	bl	16678 <putchar_unlocked@plt+0x5154>
   16554:	bl	16298 <putchar_unlocked@plt+0x4d74>
   16558:	pop	{fp, pc}
   1655c:	mov	r1, #1
   16560:	b	16564 <putchar_unlocked@plt+0x5040>
   16564:	push	{fp, lr}
   16568:	mov	fp, sp
   1656c:	bl	16b50 <putchar_unlocked@plt+0x562c>
   16570:	bl	16298 <putchar_unlocked@plt+0x4d74>
   16574:	pop	{fp, pc}
   16578:	push	{r4, r5, r6, sl, fp, lr}
   1657c:	add	fp, sp, #16
   16580:	mov	r4, r1
   16584:	mov	r5, r0
   16588:	mov	r0, r1
   1658c:	bl	16284 <putchar_unlocked@plt+0x4d60>
   16590:	mov	r6, r0
   16594:	mov	r1, r5
   16598:	mov	r2, r4
   1659c:	bl	11260 <memcpy@plt>
   165a0:	mov	r0, r6
   165a4:	pop	{r4, r5, r6, sl, fp, pc}
   165a8:	push	{r4, r5, r6, sl, fp, lr}
   165ac:	add	fp, sp, #16
   165b0:	mov	r4, r1
   165b4:	mov	r5, r0
   165b8:	mov	r0, r1
   165bc:	bl	162ac <putchar_unlocked@plt+0x4d88>
   165c0:	mov	r6, r0
   165c4:	mov	r1, r5
   165c8:	mov	r2, r4
   165cc:	bl	11260 <memcpy@plt>
   165d0:	mov	r0, r6
   165d4:	pop	{r4, r5, r6, sl, fp, pc}
   165d8:	push	{r4, r5, r6, sl, fp, lr}
   165dc:	add	fp, sp, #16
   165e0:	mov	r4, r1
   165e4:	mov	r5, r0
   165e8:	add	r0, r1, #1
   165ec:	bl	162ac <putchar_unlocked@plt+0x4d88>
   165f0:	mov	r6, r0
   165f4:	mov	r0, #0
   165f8:	strb	r0, [r6, r4]
   165fc:	mov	r0, r6
   16600:	mov	r1, r5
   16604:	mov	r2, r4
   16608:	bl	11260 <memcpy@plt>
   1660c:	mov	r0, r6
   16610:	pop	{r4, r5, r6, sl, fp, pc}
   16614:	push	{r4, sl, fp, lr}
   16618:	add	fp, sp, #8
   1661c:	mov	r4, r0
   16620:	bl	113d4 <strlen@plt>
   16624:	add	r1, r0, #1
   16628:	mov	r0, r4
   1662c:	pop	{r4, sl, fp, lr}
   16630:	b	16578 <putchar_unlocked@plt+0x5054>
   16634:	push	{fp, lr}
   16638:	mov	fp, sp
   1663c:	movw	r0, #33076	; 0x8134
   16640:	movt	r0, #2
   16644:	ldr	r4, [r0]
   16648:	movw	r1, #30859	; 0x788b
   1664c:	movt	r1, #1
   16650:	mov	r0, #0
   16654:	mov	r2, #5
   16658:	bl	11290 <dcgettext@plt>
   1665c:	mov	r3, r0
   16660:	movw	r2, #29721	; 0x7419
   16664:	movt	r2, #1
   16668:	mov	r0, r4
   1666c:	mov	r1, #0
   16670:	bl	1132c <error@plt>
   16674:	bl	11500 <abort@plt>
   16678:	clz	r2, r1
   1667c:	lsr	r2, r2, #5
   16680:	clz	r3, r0
   16684:	lsr	r3, r3, #5
   16688:	orrs	r2, r3, r2
   1668c:	movwne	r1, #1
   16690:	movwne	r0, #1
   16694:	cmp	r1, #0
   16698:	beq	166c8 <putchar_unlocked@plt+0x51a4>
   1669c:	mvn	r2, #-2147483648	; 0x80000000
   166a0:	udiv	r2, r2, r1
   166a4:	cmp	r2, r0
   166a8:	bcs	166c8 <putchar_unlocked@plt+0x51a4>
   166ac:	push	{fp, lr}
   166b0:	mov	fp, sp
   166b4:	bl	113ec <__errno_location@plt>
   166b8:	mov	r1, #12
   166bc:	str	r1, [r0]
   166c0:	mov	r0, #0
   166c4:	pop	{fp, pc}
   166c8:	b	111e8 <calloc@plt>
   166cc:	cmp	r0, #0
   166d0:	movweq	r0, #1
   166d4:	cmn	r0, #1
   166d8:	ble	166e0 <putchar_unlocked@plt+0x51bc>
   166dc:	b	11344 <malloc@plt>
   166e0:	push	{fp, lr}
   166e4:	mov	fp, sp
   166e8:	bl	113ec <__errno_location@plt>
   166ec:	mov	r1, #12
   166f0:	str	r1, [r0]
   166f4:	mov	r0, #0
   166f8:	pop	{fp, pc}
   166fc:	push	{fp, lr}
   16700:	mov	fp, sp
   16704:	cmp	r0, #0
   16708:	beq	16724 <putchar_unlocked@plt+0x5200>
   1670c:	cmp	r1, #0
   16710:	beq	16730 <putchar_unlocked@plt+0x520c>
   16714:	cmn	r1, #1
   16718:	ble	1673c <putchar_unlocked@plt+0x5218>
   1671c:	pop	{fp, lr}
   16720:	b	112a8 <realloc@plt>
   16724:	mov	r0, r1
   16728:	pop	{fp, lr}
   1672c:	b	166cc <putchar_unlocked@plt+0x51a8>
   16730:	bl	16afc <putchar_unlocked@plt+0x55d8>
   16734:	mov	r0, #0
   16738:	pop	{fp, pc}
   1673c:	bl	113ec <__errno_location@plt>
   16740:	mov	r1, #12
   16744:	str	r1, [r0]
   16748:	mov	r0, #0
   1674c:	pop	{fp, pc}
   16750:	mov	r1, r0
   16754:	sub	r2, r0, #65	; 0x41
   16758:	mov	r0, #1
   1675c:	cmp	r2, #26
   16760:	subcs	r2, r1, #97	; 0x61
   16764:	cmpcs	r2, #26
   16768:	bcs	16770 <putchar_unlocked@plt+0x524c>
   1676c:	bx	lr
   16770:	sub	r1, r1, #48	; 0x30
   16774:	cmp	r1, #10
   16778:	movcs	r0, #0
   1677c:	bx	lr
   16780:	mov	r1, r0
   16784:	sub	r2, r0, #65	; 0x41
   16788:	mov	r0, #1
   1678c:	cmp	r2, #26
   16790:	subcs	r1, r1, #97	; 0x61
   16794:	cmpcs	r1, #26
   16798:	movcs	r0, #0
   1679c:	bx	lr
   167a0:	mov	r1, #0
   167a4:	cmp	r0, #128	; 0x80
   167a8:	movwcc	r1, #1
   167ac:	mov	r0, r1
   167b0:	bx	lr
   167b4:	sub	r1, r0, #9
   167b8:	clz	r1, r1
   167bc:	lsr	r1, r1, #5
   167c0:	sub	r0, r0, #32
   167c4:	clz	r0, r0
   167c8:	lsr	r0, r0, #5
   167cc:	orr	r0, r0, r1
   167d0:	bx	lr
   167d4:	mov	r1, r0
   167d8:	mov	r0, #1
   167dc:	cmp	r1, #32
   167e0:	bxcc	lr
   167e4:	cmp	r1, #127	; 0x7f
   167e8:	movne	r0, #0
   167ec:	bx	lr
   167f0:	sub	r1, r0, #48	; 0x30
   167f4:	mov	r0, #0
   167f8:	cmp	r1, #10
   167fc:	movwcc	r0, #1
   16800:	bx	lr
   16804:	sub	r1, r0, #33	; 0x21
   16808:	mov	r0, #0
   1680c:	cmp	r1, #94	; 0x5e
   16810:	movwcc	r0, #1
   16814:	bx	lr
   16818:	sub	r1, r0, #97	; 0x61
   1681c:	mov	r0, #0
   16820:	cmp	r1, #26
   16824:	movwcc	r0, #1
   16828:	bx	lr
   1682c:	sub	r1, r0, #32
   16830:	mov	r0, #0
   16834:	cmp	r1, #95	; 0x5f
   16838:	movwcc	r0, #1
   1683c:	bx	lr
   16840:	sub	r1, r0, #33	; 0x21
   16844:	cmp	r1, #93	; 0x5d
   16848:	bhi	169d4 <putchar_unlocked@plt+0x54b0>
   1684c:	mov	r0, #1
   16850:	add	r2, pc, #0
   16854:	ldr	pc, [r2, r1, lsl #2]
   16858:	ldrdeq	r6, [r1], -r0
   1685c:	ldrdeq	r6, [r1], -r0
   16860:	ldrdeq	r6, [r1], -r0
   16864:	ldrdeq	r6, [r1], -r0
   16868:	ldrdeq	r6, [r1], -r0
   1686c:	ldrdeq	r6, [r1], -r0
   16870:	ldrdeq	r6, [r1], -r0
   16874:	ldrdeq	r6, [r1], -r0
   16878:	ldrdeq	r6, [r1], -r0
   1687c:	ldrdeq	r6, [r1], -r0
   16880:	ldrdeq	r6, [r1], -r0
   16884:	ldrdeq	r6, [r1], -r0
   16888:	ldrdeq	r6, [r1], -r0
   1688c:	ldrdeq	r6, [r1], -r0
   16890:	ldrdeq	r6, [r1], -r0
   16894:	ldrdeq	r6, [r1], -r4
   16898:	ldrdeq	r6, [r1], -r4
   1689c:	ldrdeq	r6, [r1], -r4
   168a0:	ldrdeq	r6, [r1], -r4
   168a4:	ldrdeq	r6, [r1], -r4
   168a8:	ldrdeq	r6, [r1], -r4
   168ac:	ldrdeq	r6, [r1], -r4
   168b0:	ldrdeq	r6, [r1], -r4
   168b4:	ldrdeq	r6, [r1], -r4
   168b8:	ldrdeq	r6, [r1], -r4
   168bc:	ldrdeq	r6, [r1], -r0
   168c0:	ldrdeq	r6, [r1], -r0
   168c4:	ldrdeq	r6, [r1], -r0
   168c8:	ldrdeq	r6, [r1], -r0
   168cc:	ldrdeq	r6, [r1], -r0
   168d0:	ldrdeq	r6, [r1], -r0
   168d4:	ldrdeq	r6, [r1], -r0
   168d8:	ldrdeq	r6, [r1], -r4
   168dc:	ldrdeq	r6, [r1], -r4
   168e0:	ldrdeq	r6, [r1], -r4
   168e4:	ldrdeq	r6, [r1], -r4
   168e8:	ldrdeq	r6, [r1], -r4
   168ec:	ldrdeq	r6, [r1], -r4
   168f0:	ldrdeq	r6, [r1], -r4
   168f4:	ldrdeq	r6, [r1], -r4
   168f8:	ldrdeq	r6, [r1], -r4
   168fc:	ldrdeq	r6, [r1], -r4
   16900:	ldrdeq	r6, [r1], -r4
   16904:	ldrdeq	r6, [r1], -r4
   16908:	ldrdeq	r6, [r1], -r4
   1690c:	ldrdeq	r6, [r1], -r4
   16910:	ldrdeq	r6, [r1], -r4
   16914:	ldrdeq	r6, [r1], -r4
   16918:	ldrdeq	r6, [r1], -r4
   1691c:	ldrdeq	r6, [r1], -r4
   16920:	ldrdeq	r6, [r1], -r4
   16924:	ldrdeq	r6, [r1], -r4
   16928:	ldrdeq	r6, [r1], -r4
   1692c:	ldrdeq	r6, [r1], -r4
   16930:	ldrdeq	r6, [r1], -r4
   16934:	ldrdeq	r6, [r1], -r4
   16938:	ldrdeq	r6, [r1], -r4
   1693c:	ldrdeq	r6, [r1], -r4
   16940:	ldrdeq	r6, [r1], -r0
   16944:	ldrdeq	r6, [r1], -r0
   16948:	ldrdeq	r6, [r1], -r0
   1694c:	ldrdeq	r6, [r1], -r0
   16950:	ldrdeq	r6, [r1], -r0
   16954:	ldrdeq	r6, [r1], -r0
   16958:	ldrdeq	r6, [r1], -r4
   1695c:	ldrdeq	r6, [r1], -r4
   16960:	ldrdeq	r6, [r1], -r4
   16964:	ldrdeq	r6, [r1], -r4
   16968:	ldrdeq	r6, [r1], -r4
   1696c:	ldrdeq	r6, [r1], -r4
   16970:	ldrdeq	r6, [r1], -r4
   16974:	ldrdeq	r6, [r1], -r4
   16978:	ldrdeq	r6, [r1], -r4
   1697c:	ldrdeq	r6, [r1], -r4
   16980:	ldrdeq	r6, [r1], -r4
   16984:	ldrdeq	r6, [r1], -r4
   16988:	ldrdeq	r6, [r1], -r4
   1698c:	ldrdeq	r6, [r1], -r4
   16990:	ldrdeq	r6, [r1], -r4
   16994:	ldrdeq	r6, [r1], -r4
   16998:	ldrdeq	r6, [r1], -r4
   1699c:	ldrdeq	r6, [r1], -r4
   169a0:	ldrdeq	r6, [r1], -r4
   169a4:	ldrdeq	r6, [r1], -r4
   169a8:	ldrdeq	r6, [r1], -r4
   169ac:	ldrdeq	r6, [r1], -r4
   169b0:	ldrdeq	r6, [r1], -r4
   169b4:	ldrdeq	r6, [r1], -r4
   169b8:	ldrdeq	r6, [r1], -r4
   169bc:	ldrdeq	r6, [r1], -r4
   169c0:	ldrdeq	r6, [r1], -r0
   169c4:	ldrdeq	r6, [r1], -r0
   169c8:	ldrdeq	r6, [r1], -r0
   169cc:	ldrdeq	r6, [r1], -r0
   169d0:	bx	lr
   169d4:	mov	r0, #0
   169d8:	bx	lr
   169dc:	sub	r0, r0, #9
   169e0:	cmp	r0, #23
   169e4:	movhi	r0, #0
   169e8:	bxhi	lr
   169ec:	bic	r0, r0, #-16777216	; 0xff000000
   169f0:	movw	r1, #31
   169f4:	movt	r1, #128	; 0x80
   169f8:	mov	r2, #1
   169fc:	and	r0, r2, r1, lsr r0
   16a00:	bx	lr
   16a04:	sub	r1, r0, #65	; 0x41
   16a08:	mov	r0, #0
   16a0c:	cmp	r1, #26
   16a10:	movwcc	r0, #1
   16a14:	bx	lr
   16a18:	mov	r1, r0
   16a1c:	sub	r2, r0, #48	; 0x30
   16a20:	mov	r0, #1
   16a24:	cmp	r2, #22
   16a28:	bhi	16a40 <putchar_unlocked@plt+0x551c>
   16a2c:	mov	ip, #1
   16a30:	movw	r3, #1023	; 0x3ff
   16a34:	movt	r3, #126	; 0x7e
   16a38:	tst	r3, ip, lsl r2
   16a3c:	bxne	lr
   16a40:	sub	r1, r1, #97	; 0x61
   16a44:	cmp	r1, #6
   16a48:	movcs	r0, #0
   16a4c:	bxcs	lr
   16a50:	bx	lr
   16a54:	sub	r1, r0, #65	; 0x41
   16a58:	cmp	r1, #26
   16a5c:	addcc	r0, r0, #32
   16a60:	bx	lr
   16a64:	sub	r1, r0, #97	; 0x61
   16a68:	cmp	r1, #26
   16a6c:	subcc	r0, r0, #32
   16a70:	bx	lr
   16a74:	push	{r4, r5, r6, sl, fp, lr}
   16a78:	add	fp, sp, #16
   16a7c:	mov	r4, r0
   16a80:	bl	11308 <__fpending@plt>
   16a84:	mov	r5, r0
   16a88:	mov	r0, r4
   16a8c:	bl	11314 <ferror_unlocked@plt>
   16a90:	mov	r6, r0
   16a94:	mov	r0, r4
   16a98:	bl	12004 <putchar_unlocked@plt+0xae0>
   16a9c:	cmp	r6, #0
   16aa0:	beq	16ac0 <putchar_unlocked@plt+0x559c>
   16aa4:	mvn	r4, #0
   16aa8:	cmp	r0, #0
   16aac:	bne	16af4 <putchar_unlocked@plt+0x55d0>
   16ab0:	bl	113ec <__errno_location@plt>
   16ab4:	mov	r1, #0
   16ab8:	str	r1, [r0]
   16abc:	b	16af4 <putchar_unlocked@plt+0x55d0>
   16ac0:	cmp	r0, #0
   16ac4:	mov	r4, r0
   16ac8:	mvnne	r4, #0
   16acc:	cmp	r5, #0
   16ad0:	bne	16af4 <putchar_unlocked@plt+0x55d0>
   16ad4:	cmp	r0, #0
   16ad8:	beq	16af4 <putchar_unlocked@plt+0x55d0>
   16adc:	bl	113ec <__errno_location@plt>
   16ae0:	ldr	r0, [r0]
   16ae4:	subs	r4, r0, #9
   16ae8:	mvnne	r4, #0
   16aec:	mov	r0, r4
   16af0:	pop	{r4, r5, r6, sl, fp, pc}
   16af4:	mov	r0, r4
   16af8:	pop	{r4, r5, r6, sl, fp, pc}
   16afc:	push	{r4, r5, r6, sl, fp, lr}
   16b00:	add	fp, sp, #16
   16b04:	mov	r4, r0
   16b08:	bl	113ec <__errno_location@plt>
   16b0c:	mov	r5, r0
   16b10:	ldr	r6, [r0]
   16b14:	mov	r0, r4
   16b18:	bl	11248 <free@plt>
   16b1c:	str	r6, [r5]
   16b20:	pop	{r4, r5, r6, sl, fp, pc}
   16b24:	push	{fp, lr}
   16b28:	mov	fp, sp
   16b2c:	bl	113ec <__errno_location@plt>
   16b30:	mov	r1, #12
   16b34:	str	r1, [r0]
   16b38:	mov	r0, #0
   16b3c:	pop	{fp, pc}
   16b40:	b	166cc <putchar_unlocked@plt+0x51a8>
   16b44:	cmp	r1, #0
   16b48:	orreq	r1, r1, #1
   16b4c:	b	166fc <putchar_unlocked@plt+0x51d8>
   16b50:	b	16678 <putchar_unlocked@plt+0x5154>
   16b54:	clz	r3, r2
   16b58:	lsr	ip, r3, #5
   16b5c:	clz	r3, r1
   16b60:	lsr	r3, r3, #5
   16b64:	orrs	r3, r3, ip
   16b68:	movwne	r1, #1
   16b6c:	movwne	r2, #1
   16b70:	b	16c0c <putchar_unlocked@plt+0x56e8>
   16b74:	push	{fp, lr}
   16b78:	mov	fp, sp
   16b7c:	mov	r0, #14
   16b80:	bl	11494 <nl_langinfo@plt>
   16b84:	movw	r1, #28896	; 0x70e0
   16b88:	movt	r1, #1
   16b8c:	cmp	r0, #0
   16b90:	movne	r1, r0
   16b94:	ldrb	r2, [r1]
   16b98:	movw	r0, #30876	; 0x789c
   16b9c:	movt	r0, #1
   16ba0:	cmp	r2, #0
   16ba4:	movne	r0, r1
   16ba8:	pop	{fp, pc}
   16bac:	push	{r4, r5, r6, r7, fp, lr}
   16bb0:	add	fp, sp, #16
   16bb4:	sub	sp, sp, #8
   16bb8:	mov	r7, r2
   16bbc:	mov	r4, r1
   16bc0:	add	r5, sp, #4
   16bc4:	cmp	r0, #0
   16bc8:	movne	r5, r0
   16bcc:	mov	r0, r5
   16bd0:	bl	11320 <mbrtowc@plt>
   16bd4:	mov	r6, r0
   16bd8:	cmp	r7, #0
   16bdc:	beq	16c00 <putchar_unlocked@plt+0x56dc>
   16be0:	cmn	r6, #2
   16be4:	bcc	16c00 <putchar_unlocked@plt+0x56dc>
   16be8:	mov	r0, #0
   16bec:	bl	16c48 <putchar_unlocked@plt+0x5724>
   16bf0:	cmp	r0, #0
   16bf4:	ldrbeq	r0, [r4]
   16bf8:	streq	r0, [r5]
   16bfc:	moveq	r6, #1
   16c00:	mov	r0, r6
   16c04:	sub	sp, fp, #16
   16c08:	pop	{r4, r5, r6, r7, fp, pc}
   16c0c:	cmp	r2, #0
   16c10:	beq	16c40 <putchar_unlocked@plt+0x571c>
   16c14:	mvn	r3, #0
   16c18:	udiv	r3, r3, r2
   16c1c:	cmp	r3, r1
   16c20:	bcs	16c40 <putchar_unlocked@plt+0x571c>
   16c24:	push	{fp, lr}
   16c28:	mov	fp, sp
   16c2c:	bl	113ec <__errno_location@plt>
   16c30:	mov	r1, #12
   16c34:	str	r1, [r0]
   16c38:	mov	r0, #0
   16c3c:	pop	{fp, pc}
   16c40:	mul	r1, r2, r1
   16c44:	b	166fc <putchar_unlocked@plt+0x51d8>
   16c48:	push	{r4, sl, fp, lr}
   16c4c:	add	fp, sp, #8
   16c50:	sub	sp, sp, #264	; 0x108
   16c54:	add	r1, sp, #7
   16c58:	movw	r2, #257	; 0x101
   16c5c:	bl	16cac <putchar_unlocked@plt+0x5788>
   16c60:	mov	r4, #0
   16c64:	cmp	r0, #0
   16c68:	bne	16ca0 <putchar_unlocked@plt+0x577c>
   16c6c:	add	r0, sp, #7
   16c70:	movw	r1, #29703	; 0x7407
   16c74:	movt	r1, #1
   16c78:	bl	11218 <strcmp@plt>
   16c7c:	cmp	r0, #0
   16c80:	beq	16ca0 <putchar_unlocked@plt+0x577c>
   16c84:	add	r0, sp, #7
   16c88:	movw	r1, #30882	; 0x78a2
   16c8c:	movt	r1, #1
   16c90:	bl	11218 <strcmp@plt>
   16c94:	mov	r4, r0
   16c98:	cmp	r0, #0
   16c9c:	movwne	r4, #1
   16ca0:	mov	r0, r4
   16ca4:	sub	sp, fp, #8
   16ca8:	pop	{r4, sl, fp, pc}
   16cac:	b	16cb0 <putchar_unlocked@plt+0x578c>
   16cb0:	push	{r4, r5, r6, r7, fp, lr}
   16cb4:	add	fp, sp, #16
   16cb8:	mov	r6, r2
   16cbc:	mov	r4, r1
   16cc0:	bl	16d4c <putchar_unlocked@plt+0x5828>
   16cc4:	cmp	r0, #0
   16cc8:	beq	16cf8 <putchar_unlocked@plt+0x57d4>
   16ccc:	mov	r7, r0
   16cd0:	bl	113d4 <strlen@plt>
   16cd4:	cmp	r0, r6
   16cd8:	bcs	16d18 <putchar_unlocked@plt+0x57f4>
   16cdc:	add	r2, r0, #1
   16ce0:	mov	r0, r4
   16ce4:	mov	r1, r7
   16ce8:	bl	11260 <memcpy@plt>
   16cec:	mov	r5, #0
   16cf0:	mov	r0, r5
   16cf4:	pop	{r4, r5, r6, r7, fp, pc}
   16cf8:	mov	r5, #22
   16cfc:	cmp	r6, #0
   16d00:	movne	r0, #0
   16d04:	strbne	r0, [r4]
   16d08:	movne	r0, r5
   16d0c:	popne	{r4, r5, r6, r7, fp, pc}
   16d10:	mov	r0, r5
   16d14:	pop	{r4, r5, r6, r7, fp, pc}
   16d18:	mov	r5, #34	; 0x22
   16d1c:	cmp	r6, #0
   16d20:	beq	16d40 <putchar_unlocked@plt+0x581c>
   16d24:	sub	r6, r6, #1
   16d28:	mov	r0, r4
   16d2c:	mov	r1, r7
   16d30:	mov	r2, r6
   16d34:	bl	11260 <memcpy@plt>
   16d38:	mov	r0, #0
   16d3c:	strb	r0, [r4, r6]
   16d40:	mov	r0, r5
   16d44:	pop	{r4, r5, r6, r7, fp, pc}
   16d48:	b	16d4c <putchar_unlocked@plt+0x5828>
   16d4c:	mov	r1, #0
   16d50:	b	1147c <setlocale@plt>
   16d54:	cmp	r3, #0
   16d58:	cmpeq	r2, #0
   16d5c:	bne	16d74 <putchar_unlocked@plt+0x5850>
   16d60:	cmp	r1, #0
   16d64:	cmpeq	r0, #0
   16d68:	mvnne	r1, #0
   16d6c:	mvnne	r0, #0
   16d70:	b	16d90 <putchar_unlocked@plt+0x586c>
   16d74:	sub	sp, sp, #8
   16d78:	push	{sp, lr}
   16d7c:	bl	16da0 <putchar_unlocked@plt+0x587c>
   16d80:	ldr	lr, [sp, #4]
   16d84:	add	sp, sp, #8
   16d88:	pop	{r2, r3}
   16d8c:	bx	lr
   16d90:	push	{r1, lr}
   16d94:	mov	r0, #8
   16d98:	bl	11200 <raise@plt>
   16d9c:	pop	{r1, pc}
   16da0:	cmp	r1, r3
   16da4:	cmpeq	r0, r2
   16da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dac:	mov	r4, r0
   16db0:	movcc	r0, #0
   16db4:	mov	r5, r1
   16db8:	ldr	lr, [sp, #36]	; 0x24
   16dbc:	movcc	r1, r0
   16dc0:	bcc	16ebc <putchar_unlocked@plt+0x5998>
   16dc4:	cmp	r3, #0
   16dc8:	clzeq	ip, r2
   16dcc:	clzne	ip, r3
   16dd0:	addeq	ip, ip, #32
   16dd4:	cmp	r5, #0
   16dd8:	clzeq	r1, r4
   16ddc:	addeq	r1, r1, #32
   16de0:	clzne	r1, r5
   16de4:	sub	ip, ip, r1
   16de8:	sub	sl, ip, #32
   16dec:	lsl	r9, r3, ip
   16df0:	rsb	fp, ip, #32
   16df4:	orr	r9, r9, r2, lsl sl
   16df8:	orr	r9, r9, r2, lsr fp
   16dfc:	lsl	r8, r2, ip
   16e00:	cmp	r5, r9
   16e04:	cmpeq	r4, r8
   16e08:	movcc	r0, #0
   16e0c:	movcc	r1, r0
   16e10:	bcc	16e2c <putchar_unlocked@plt+0x5908>
   16e14:	mov	r0, #1
   16e18:	subs	r4, r4, r8
   16e1c:	lsl	r1, r0, sl
   16e20:	orr	r1, r1, r0, lsr fp
   16e24:	lsl	r0, r0, ip
   16e28:	sbc	r5, r5, r9
   16e2c:	cmp	ip, #0
   16e30:	beq	16ebc <putchar_unlocked@plt+0x5998>
   16e34:	lsr	r6, r8, #1
   16e38:	orr	r6, r6, r9, lsl #31
   16e3c:	lsr	r7, r9, #1
   16e40:	mov	r2, ip
   16e44:	b	16e68 <putchar_unlocked@plt+0x5944>
   16e48:	subs	r3, r4, r6
   16e4c:	sbc	r8, r5, r7
   16e50:	adds	r3, r3, r3
   16e54:	adc	r8, r8, r8
   16e58:	adds	r4, r3, #1
   16e5c:	adc	r5, r8, #0
   16e60:	subs	r2, r2, #1
   16e64:	beq	16e84 <putchar_unlocked@plt+0x5960>
   16e68:	cmp	r5, r7
   16e6c:	cmpeq	r4, r6
   16e70:	bcs	16e48 <putchar_unlocked@plt+0x5924>
   16e74:	adds	r4, r4, r4
   16e78:	adc	r5, r5, r5
   16e7c:	subs	r2, r2, #1
   16e80:	bne	16e68 <putchar_unlocked@plt+0x5944>
   16e84:	lsr	r3, r4, ip
   16e88:	orr	r3, r3, r5, lsl fp
   16e8c:	lsr	r2, r5, ip
   16e90:	orr	r3, r3, r5, lsr sl
   16e94:	adds	r0, r0, r4
   16e98:	mov	r4, r3
   16e9c:	lsl	r3, r2, ip
   16ea0:	orr	r3, r3, r4, lsl sl
   16ea4:	lsl	ip, r4, ip
   16ea8:	orr	r3, r3, r4, lsr fp
   16eac:	adc	r1, r1, r5
   16eb0:	subs	r0, r0, ip
   16eb4:	mov	r5, r2
   16eb8:	sbc	r1, r1, r3
   16ebc:	cmp	lr, #0
   16ec0:	strdne	r4, [lr]
   16ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ecc:	mov	r7, r0
   16ed0:	ldr	r6, [pc, #72]	; 16f20 <putchar_unlocked@plt+0x59fc>
   16ed4:	ldr	r5, [pc, #72]	; 16f24 <putchar_unlocked@plt+0x5a00>
   16ed8:	add	r6, pc, r6
   16edc:	add	r5, pc, r5
   16ee0:	sub	r6, r6, r5
   16ee4:	mov	r8, r1
   16ee8:	mov	r9, r2
   16eec:	bl	111c8 <calloc@plt-0x20>
   16ef0:	asrs	r6, r6, #2
   16ef4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ef8:	mov	r4, #0
   16efc:	add	r4, r4, #1
   16f00:	ldr	r3, [r5], #4
   16f04:	mov	r2, r9
   16f08:	mov	r1, r8
   16f0c:	mov	r0, r7
   16f10:	blx	r3
   16f14:	cmp	r6, r4
   16f18:	bne	16efc <putchar_unlocked@plt+0x59d8>
   16f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16f20:	andeq	r1, r1, ip, lsr #32
   16f24:	andeq	r1, r1, r4, lsr #32
   16f28:	bx	lr
   16f2c:	ldr	r3, [pc, #12]	; 16f40 <putchar_unlocked@plt+0x5a1c>
   16f30:	mov	r1, #0
   16f34:	add	r3, pc, r3
   16f38:	ldr	r2, [r3]
   16f3c:	b	113f8 <__cxa_atexit@plt>
   16f40:	strdeq	r1, [r1], -r0

Disassembly of section .fini:

00016f44 <.fini>:
   16f44:	push	{r3, lr}
   16f48:	pop	{r3, pc}
