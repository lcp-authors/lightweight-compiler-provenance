
../repos/charybdis/modules/.libs/m_time.so:     file format elf32-littlearm


Disassembly of section .init:

0000057c <_init>:
 57c:	push	{r3, lr}
 580:	bl	608 <call_weak_fn>
 584:	pop	{r3, pc}

Disassembly of section .plt:

00000588 <.plt>:
 588:	push	{lr}		; (str lr, [sp, #-4]!)
 58c:	ldr	lr, [pc, #4]	; 598 <.plt+0x10>
 590:	add	lr, pc, lr
 594:	ldr	pc, [lr, #8]!
 598:	.word	0x00010a68

0000059c <rb_current_time@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2664]!	; 0xa68

000005a8 <__cxa_finalize@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2656]!	; 0xa60

000005b4 <localtime@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #16, 20	; 0x10000
 5bc:	ldr	pc, [ip, #2648]!	; 0xa58

000005c0 <hunt_server@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #16, 20	; 0x10000
 5c8:	ldr	pc, [ip, #2640]!	; 0xa50

000005cc <__gmon_start__@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #16, 20	; 0x10000
 5d4:	ldr	pc, [ip, #2632]!	; 0xa48

000005d8 <sendto_one_numeric@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #16, 20	; 0x10000
 5e0:	ldr	pc, [ip, #2624]!	; 0xa40

000005e4 <gmtime@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #16, 20	; 0x10000
 5ec:	ldr	pc, [ip, #2616]!	; 0xa38

000005f0 <sprintf@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #16, 20	; 0x10000
 5f8:	ldr	pc, [ip, #2608]!	; 0xa30

000005fc <flood_endgrace@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #16, 20	; 0x10000
 604:	ldr	pc, [ip, #2600]!	; 0xa28

Disassembly of section .text:

00000608 <call_weak_fn>:
 608:	ldr	r3, [pc, #20]	; 624 <call_weak_fn+0x1c>
 60c:	ldr	r2, [pc, #20]	; 628 <call_weak_fn+0x20>
 610:	add	r3, pc, r3
 614:	ldr	r2, [r3, r2]
 618:	cmp	r2, #0
 61c:	bxeq	lr
 620:	b	5cc <__gmon_start__@plt>
 624:	.word	0x000109e8
 628:	.word	0x00000038

0000062c <deregister_tm_clones>:
 62c:	ldr	r3, [pc, #52]	; 668 <deregister_tm_clones+0x3c>
 630:	ldr	r0, [pc, #52]	; 66c <deregister_tm_clones+0x40>
 634:	add	r3, pc, r3
 638:	add	r0, pc, r0
 63c:	add	r3, r3, #3
 640:	sub	r3, r3, r0
 644:	cmp	r3, #6
 648:	ldr	r3, [pc, #32]	; 670 <deregister_tm_clones+0x44>
 64c:	add	r3, pc, r3
 650:	bxls	lr
 654:	ldr	r2, [pc, #24]	; 674 <deregister_tm_clones+0x48>
 658:	ldr	r3, [r3, r2]
 65c:	cmp	r3, #0
 660:	bxeq	lr
 664:	bx	r3
 668:	.word	0x00010a84
 66c:	.word	0x00010a80
 670:	.word	0x000109ac
 674:	.word	0x00000034

00000678 <register_tm_clones>:
 678:	ldr	r1, [pc, #56]	; 6b8 <register_tm_clones+0x40>
 67c:	ldr	r0, [pc, #56]	; 6bc <register_tm_clones+0x44>
 680:	add	r1, pc, r1
 684:	add	r0, pc, r0
 688:	sub	r1, r1, r0
 68c:	ldr	r3, [pc, #44]	; 6c0 <register_tm_clones+0x48>
 690:	asr	r1, r1, #2
 694:	add	r3, pc, r3
 698:	add	r1, r1, r1, lsr #31
 69c:	asrs	r1, r1, #1
 6a0:	bxeq	lr
 6a4:	ldr	r2, [pc, #24]	; 6c4 <register_tm_clones+0x4c>
 6a8:	ldr	r3, [r3, r2]
 6ac:	cmp	r3, #0
 6b0:	bxeq	lr
 6b4:	bx	r3
 6b8:	.word	0x00010a38
 6bc:	.word	0x00010a34
 6c0:	.word	0x00010964
 6c4:	.word	0x00000040

000006c8 <__do_global_dtors_aux>:
 6c8:	ldr	r3, [pc, #76]	; 71c <__do_global_dtors_aux+0x54>
 6cc:	ldr	r2, [pc, #76]	; 720 <__do_global_dtors_aux+0x58>
 6d0:	add	r3, pc, r3
 6d4:	add	r2, pc, r2
 6d8:	ldrb	r3, [r3]
 6dc:	cmp	r3, #0
 6e0:	bxne	lr
 6e4:	ldr	r3, [pc, #56]	; 724 <__do_global_dtors_aux+0x5c>
 6e8:	push	{r4, lr}
 6ec:	ldr	r3, [r2, r3]
 6f0:	cmp	r3, #0
 6f4:	beq	704 <__do_global_dtors_aux+0x3c>
 6f8:	ldr	r3, [pc, #40]	; 728 <__do_global_dtors_aux+0x60>
 6fc:	ldr	r0, [pc, r3]
 700:	bl	5a8 <__cxa_finalize@plt>
 704:	bl	62c <deregister_tm_clones>
 708:	ldr	r3, [pc, #28]	; 72c <__do_global_dtors_aux+0x64>
 70c:	mov	r2, #1
 710:	add	r3, pc, r3
 714:	strb	r2, [r3]
 718:	pop	{r4, pc}
 71c:	.word	0x000109e8
 720:	.word	0x00010924
 724:	.word	0x00000030
 728:	.word	0x00010944
 72c:	.word	0x000109a8

00000730 <frame_dummy>:
 730:	ldr	r0, [pc, #56]	; 770 <frame_dummy+0x40>
 734:	ldr	r3, [pc, #56]	; 774 <frame_dummy+0x44>
 738:	add	r0, pc, r0
 73c:	ldr	r2, [r0]
 740:	add	r3, pc, r3
 744:	cmp	r2, #0
 748:	bne	750 <frame_dummy+0x20>
 74c:	b	678 <register_tm_clones>
 750:	ldr	r2, [pc, #32]	; 778 <frame_dummy+0x48>
 754:	ldr	r3, [r3, r2]
 758:	cmp	r3, #0
 75c:	beq	74c <frame_dummy+0x1c>
 760:	push	{r4, lr}
 764:	blx	r3
 768:	pop	{r4, lr}
 76c:	b	678 <register_tm_clones>
 770:	.word	0x00010770
 774:	.word	0x000108b8
 778:	.word	0x0000003c

0000077c <m_time>:
 77c:	push	{r4, r5, r6, r7, lr}
 780:	sub	sp, sp, #84	; 0x54
 784:	mov	r6, r1
 788:	mov	r4, r2
 78c:	mov	r7, r3
 790:	ldr	r5, [pc, #532]	; 9ac <m_time+0x230>
 794:	add	r5, pc, r5
 798:	ldrd	r2, [r2, #64]	; 0x40
 79c:	and	r0, r2, #8192	; 0x2000
 7a0:	mov	r1, #0
 7a4:	orrs	r1, r0, r1
 7a8:	beq	7b8 <m_time+0x3c>
 7ac:	ldrh	r1, [r4, #80]	; 0x50
 7b0:	cmp	r1, #64	; 0x40
 7b4:	beq	7ec <m_time+0x70>
 7b8:	ldr	r3, [sp, #104]	; 0x68
 7bc:	str	r3, [sp, #4]
 7c0:	str	r7, [sp]
 7c4:	mov	r3, #1
 7c8:	ldr	r2, [pc, #480]	; 9b0 <m_time+0x234>
 7cc:	add	r2, pc, r2
 7d0:	mov	r1, r4
 7d4:	mov	r0, r6
 7d8:	bl	5c0 <hunt_server@plt>
 7dc:	cmp	r0, #0
 7e0:	beq	808 <m_time+0x8c>
 7e4:	add	sp, sp, #84	; 0x54
 7e8:	pop	{r4, r5, r6, r7, pc}
 7ec:	and	r2, r2, #256	; 0x100
 7f0:	mov	r3, #0
 7f4:	orrs	r3, r2, r3
 7f8:	bne	7b8 <m_time+0x3c>
 7fc:	mov	r0, r4
 800:	bl	5fc <flood_endgrace@plt>
 804:	b	7b8 <m_time+0x3c>
 808:	bl	59c <rb_current_time@plt>
 80c:	add	r3, sp, #80	; 0x50
 810:	str	r0, [r3, #-48]!	; 0xffffffd0
 814:	mov	r0, r3
 818:	bl	5e4 <gmtime@plt>
 81c:	mov	ip, r0
 820:	add	r6, sp, #36	; 0x24
 824:	add	r7, r0, #32
 828:	mov	lr, r6
 82c:	ldr	r0, [ip]
 830:	ldr	r1, [ip, #4]
 834:	ldr	r2, [ip, #8]
 838:	ldr	r3, [ip, #12]
 83c:	stmia	lr!, {r0, r1, r2, r3}
 840:	add	ip, ip, #16
 844:	mov	r6, lr
 848:	cmp	ip, r7
 84c:	bne	828 <m_time+0xac>
 850:	ldr	r0, [ip]
 854:	ldr	r1, [ip, #4]
 858:	ldr	r2, [ip, #8]
 85c:	stmia	r6!, {r0, r1, r2}
 860:	add	r0, sp, #32
 864:	bl	5b4 <localtime@plt>
 868:	ldr	r2, [r0, #28]
 86c:	ldr	r3, [sp, #64]	; 0x40
 870:	cmp	r2, r3
 874:	beq	96c <m_time+0x1f0>
 878:	cmp	r2, r3
 87c:	ble	890 <m_time+0x114>
 880:	ldr	r2, [r0, #20]
 884:	ldr	r3, [sp, #56]	; 0x38
 888:	cmp	r2, r3
 88c:	beq	990 <m_time+0x214>
 890:	ldr	r1, [sp, #44]	; 0x2c
 894:	add	r1, r1, #24
 898:	ldr	r3, [r0, #8]
 89c:	sub	r1, r1, r3
 8a0:	rsb	r1, r1, r1, lsl #4
 8a4:	lsl	r1, r1, #2
 8a8:	cmp	r1, #0
 8ac:	movgt	r6, #45	; 0x2d
 8b0:	movle	r6, #43	; 0x2b
 8b4:	cmp	r1, #0
 8b8:	rsblt	r1, r1, #0
 8bc:	ldr	r2, [pc, #240]	; 9b4 <m_time+0x238>
 8c0:	add	r2, pc, r2
 8c4:	ldr	r3, [r0, #16]
 8c8:	ldr	r3, [r2, r3, lsl #2]
 8cc:	ldr	ip, [r0, #24]
 8d0:	add	r2, r2, ip, lsl #2
 8d4:	ldr	r2, [r2, #48]	; 0x30
 8d8:	ldr	lr, [pc, #216]	; 9b8 <m_time+0x23c>
 8dc:	add	lr, pc, lr
 8e0:	ldr	ip, [pc, #212]	; 9bc <m_time+0x240>
 8e4:	umull	r7, ip, ip, r1
 8e8:	lsr	ip, ip, #5
 8ec:	rsb	r7, ip, ip, lsl #4
 8f0:	sub	r1, r1, r7, lsl #2
 8f4:	str	r1, [sp, #28]
 8f8:	str	ip, [sp, #24]
 8fc:	str	r6, [sp, #20]
 900:	ldr	r1, [r0]
 904:	str	r1, [sp, #16]
 908:	ldr	r1, [r0, #4]
 90c:	str	r1, [sp, #12]
 910:	ldr	r1, [r0, #8]
 914:	str	r1, [sp, #8]
 918:	ldr	r1, [r0, #20]
 91c:	add	r1, r1, #1888	; 0x760
 920:	add	r1, r1, #12
 924:	str	r1, [sp, #4]
 928:	ldr	r1, [r0, #12]
 92c:	str	r1, [sp]
 930:	ldr	r1, [pc, #136]	; 9c0 <m_time+0x244>
 934:	add	r1, pc, r1
 938:	mov	r6, lr
 93c:	mov	r0, lr
 940:	bl	5f0 <sprintf@plt>
 944:	ldr	r3, [pc, #120]	; 9c4 <m_time+0x248>
 948:	ldr	r3, [r5, r3]
 94c:	str	r6, [sp]
 950:	add	r3, r3, #88	; 0x58
 954:	ldr	r2, [pc, #108]	; 9c8 <m_time+0x24c>
 958:	add	r2, pc, r2
 95c:	ldr	r1, [pc, #104]	; 9cc <m_time+0x250>
 960:	mov	r0, r4
 964:	bl	5d8 <sendto_one_numeric@plt>
 968:	b	7e4 <m_time+0x68>
 96c:	ldr	r3, [r0, #8]
 970:	ldr	r1, [sp, #44]	; 0x2c
 974:	sub	r1, r1, r3
 978:	rsb	r3, r1, r1, lsl #4
 97c:	ldr	r2, [r0, #4]
 980:	ldr	r1, [sp, #40]	; 0x28
 984:	sub	r1, r1, r2
 988:	add	r1, r1, r3, lsl #2
 98c:	b	8a8 <m_time+0x12c>
 990:	ldr	r1, [r0, #8]
 994:	add	r3, r1, #24
 998:	ldr	r1, [sp, #44]	; 0x2c
 99c:	sub	r1, r1, r3
 9a0:	rsb	r1, r1, r1, lsl #4
 9a4:	lsl	r1, r1, #2
 9a8:	b	8a8 <m_time+0x12c>
 9ac:	.word	0x00010864
 9b0:	.word	0x00000240
 9b4:	.word	0x000105ec
 9b8:	.word	0x000107e0
 9bc:	.word	0x88888889
 9c0:	.word	0x000000e8
 9c4:	.word	0x00000044
 9c8:	.word	0x000000f0
 9cc:	.word	0x00000187

Disassembly of section .fini:

000009d0 <_fini>:
 9d0:	push	{r3, lr}
 9d4:	pop	{r3, pc}
