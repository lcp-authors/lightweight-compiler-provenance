
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

000117c4 <.init>:
   117c4:	push	{r3, lr}
   117c8:	bl	11c7c <__assert_fail@plt+0x48>
   117cc:	pop	{r3, pc}

Disassembly of section .plt:

000117d0 <fstatfs64@plt-0x14>:
   117d0:	push	{lr}		; (str lr, [sp, #-4]!)
   117d4:	ldr	lr, [pc, #4]	; 117e0 <fstatfs64@plt-0x4>
   117d8:	add	lr, pc, lr
   117dc:	ldr	pc, [lr, #8]!
   117e0:	andeq	sl, r1, r0, lsr #16

000117e4 <fstatfs64@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #106496	; 0x1a000
   117ec:	ldr	pc, [ip, #2080]!	; 0x820

000117f0 <selabel_lookup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #106496	; 0x1a000
   117f8:	ldr	pc, [ip, #2072]!	; 0x818

000117fc <calloc@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #106496	; 0x1a000
   11804:	ldr	pc, [ip, #2064]!	; 0x810

00011808 <fputs_unlocked@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #106496	; 0x1a000
   11810:	ldr	pc, [ip, #2056]!	; 0x808

00011814 <raise@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #106496	; 0x1a000
   1181c:	ldr	pc, [ip, #2048]!	; 0x800

00011820 <is_selinux_enabled@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #106496	; 0x1a000
   11828:	ldr	pc, [ip, #2040]!	; 0x7f8

0001182c <strcmp@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #106496	; 0x1a000
   11834:	ldr	pc, [ip, #2032]!	; 0x7f0

00011838 <gnu_dev_makedev@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #106496	; 0x1a000
   11840:	ldr	pc, [ip, #2024]!	; 0x7e8

00011844 <context_type_get@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #106496	; 0x1a000
   1184c:	ldr	pc, [ip, #2016]!	; 0x7e0

00011850 <fflush@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #106496	; 0x1a000
   11858:	ldr	pc, [ip, #2008]!	; 0x7d8

0001185c <lsetfilecon@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #106496	; 0x1a000
   11864:	ldr	pc, [ip, #2000]!	; 0x7d0

00011868 <memmove@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #106496	; 0x1a000
   11870:	ldr	pc, [ip, #1992]!	; 0x7c8

00011874 <free@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #106496	; 0x1a000
   1187c:	ldr	pc, [ip, #1984]!	; 0x7c0

00011880 <faccessat@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #106496	; 0x1a000
   11888:	ldr	pc, [ip, #1976]!	; 0x7b8

0001188c <_exit@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #106496	; 0x1a000
   11894:	ldr	pc, [ip, #1968]!	; 0x7b0

00011898 <memcpy@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #106496	; 0x1a000
   118a0:	ldr	pc, [ip, #1960]!	; 0x7a8

000118a4 <mbsinit@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #106496	; 0x1a000
   118ac:	ldr	pc, [ip, #1952]!	; 0x7a0

000118b0 <context_new@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #106496	; 0x1a000
   118b8:	ldr	pc, [ip, #1944]!	; 0x798

000118bc <memcmp@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #106496	; 0x1a000
   118c4:	ldr	pc, [ip, #1936]!	; 0x790

000118c8 <dcgettext@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #106496	; 0x1a000
   118d0:	ldr	pc, [ip, #1928]!	; 0x788

000118d4 <context_type_set@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #106496	; 0x1a000
   118dc:	ldr	pc, [ip, #1920]!	; 0x780

000118e0 <realloc@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #106496	; 0x1a000
   118e8:	ldr	pc, [ip, #1912]!	; 0x778

000118ec <fgetfilecon@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #106496	; 0x1a000
   118f4:	ldr	pc, [ip, #1904]!	; 0x770

000118f8 <textdomain@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #106496	; 0x1a000
   11900:	ldr	pc, [ip, #1896]!	; 0x768

00011904 <rawmemchr@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #106496	; 0x1a000
   1190c:	ldr	pc, [ip, #1888]!	; 0x760

00011910 <__fxstatat64@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #106496	; 0x1a000
   11918:	ldr	pc, [ip, #1880]!	; 0x758

0001191c <iswprint@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #106496	; 0x1a000
   11924:	ldr	pc, [ip, #1872]!	; 0x750

00011928 <__fxstat64@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #106496	; 0x1a000
   11930:	ldr	pc, [ip, #1864]!	; 0x748

00011934 <readlink@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #106496	; 0x1a000
   1193c:	ldr	pc, [ip, #1856]!	; 0x740

00011940 <lseek64@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #106496	; 0x1a000
   11948:	ldr	pc, [ip, #1848]!	; 0x738

0001194c <__ctype_get_mb_cur_max@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #106496	; 0x1a000
   11954:	ldr	pc, [ip, #1840]!	; 0x730

00011958 <getcon@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #106496	; 0x1a000
   11960:	ldr	pc, [ip, #1832]!	; 0x728

00011964 <__fpending@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #106496	; 0x1a000
   1196c:	ldr	pc, [ip, #1824]!	; 0x720

00011970 <ferror_unlocked@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #106496	; 0x1a000
   11978:	ldr	pc, [ip, #1816]!	; 0x718

0001197c <mbrtowc@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #106496	; 0x1a000
   11984:	ldr	pc, [ip, #1808]!	; 0x710

00011988 <error@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #106496	; 0x1a000
   11990:	ldr	pc, [ip, #1800]!	; 0x708

00011994 <open64@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #106496	; 0x1a000
   1199c:	ldr	pc, [ip, #1792]!	; 0x700

000119a0 <lgetfilecon@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #106496	; 0x1a000
   119a8:	ldr	pc, [ip, #1784]!	; 0x6f8

000119ac <malloc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #106496	; 0x1a000
   119b4:	ldr	pc, [ip, #1776]!	; 0x6f0

000119b8 <__libc_start_main@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #106496	; 0x1a000
   119c0:	ldr	pc, [ip, #1768]!	; 0x6e8

000119c4 <__freading@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #106496	; 0x1a000
   119cc:	ldr	pc, [ip, #1760]!	; 0x6e0

000119d0 <__gmon_start__@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #106496	; 0x1a000
   119d8:	ldr	pc, [ip, #1752]!	; 0x6d8

000119dc <context_free@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #106496	; 0x1a000
   119e4:	ldr	pc, [ip, #1744]!	; 0x6d0

000119e8 <getopt_long@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #106496	; 0x1a000
   119f0:	ldr	pc, [ip, #1736]!	; 0x6c8

000119f4 <__ctype_b_loc@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #106496	; 0x1a000
   119fc:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a00 <getcwd@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #106496	; 0x1a000
   11a08:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a0c <exit@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #106496	; 0x1a000
   11a14:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a18 <getfilecon@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #106496	; 0x1a000
   11a20:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a24 <strlen@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #106496	; 0x1a000
   11a2c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a30 <selabel_open@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #106496	; 0x1a000
   11a38:	ldr	pc, [ip, #1688]!	; 0x698

00011a3c <strchr@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #106496	; 0x1a000
   11a44:	ldr	pc, [ip, #1680]!	; 0x690

00011a48 <openat64@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #106496	; 0x1a000
   11a50:	ldr	pc, [ip, #1672]!	; 0x688

00011a54 <setfscreatecon@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #106496	; 0x1a000
   11a5c:	ldr	pc, [ip, #1664]!	; 0x680

00011a60 <__errno_location@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #106496	; 0x1a000
   11a68:	ldr	pc, [ip, #1656]!	; 0x678

00011a6c <__sprintf_chk@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #106496	; 0x1a000
   11a74:	ldr	pc, [ip, #1648]!	; 0x670

00011a78 <__cxa_atexit@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #106496	; 0x1a000
   11a80:	ldr	pc, [ip, #1640]!	; 0x668

00011a84 <memset@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #106496	; 0x1a000
   11a8c:	ldr	pc, [ip, #1632]!	; 0x660

00011a90 <__printf_chk@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #106496	; 0x1a000
   11a98:	ldr	pc, [ip, #1624]!	; 0x658

00011a9c <fileno@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #106496	; 0x1a000
   11aa4:	ldr	pc, [ip, #1616]!	; 0x650

00011aa8 <strtoumax@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #106496	; 0x1a000
   11ab0:	ldr	pc, [ip, #1608]!	; 0x648

00011ab4 <__fprintf_chk@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #106496	; 0x1a000
   11abc:	ldr	pc, [ip, #1600]!	; 0x640

00011ac0 <fclose@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #106496	; 0x1a000
   11ac8:	ldr	pc, [ip, #1592]!	; 0x638

00011acc <fseeko64@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #106496	; 0x1a000
   11ad4:	ldr	pc, [ip, #1584]!	; 0x630

00011ad8 <fcntl64@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #106496	; 0x1a000
   11ae0:	ldr	pc, [ip, #1576]!	; 0x628

00011ae4 <setlocale@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #106496	; 0x1a000
   11aec:	ldr	pc, [ip, #1568]!	; 0x620

00011af0 <fsetfilecon@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #106496	; 0x1a000
   11af8:	ldr	pc, [ip, #1560]!	; 0x618

00011afc <strrchr@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #106496	; 0x1a000
   11b04:	ldr	pc, [ip, #1552]!	; 0x610

00011b08 <nl_langinfo@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #106496	; 0x1a000
   11b10:	ldr	pc, [ip, #1544]!	; 0x608

00011b14 <readdir64@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #106496	; 0x1a000
   11b1c:	ldr	pc, [ip, #1536]!	; 0x600

00011b20 <fdopendir@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #106496	; 0x1a000
   11b28:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b2c <security_compute_create@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #106496	; 0x1a000
   11b34:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b38 <dirfd@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #106496	; 0x1a000
   11b40:	ldr	pc, [ip, #1512]!	; 0x5e8

00011b44 <fchdir@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #106496	; 0x1a000
   11b4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00011b50 <qsort@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #106496	; 0x1a000
   11b58:	ldr	pc, [ip, #1496]!	; 0x5d8

00011b5c <freecon@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #106496	; 0x1a000
   11b64:	ldr	pc, [ip, #1488]!	; 0x5d0

00011b68 <bindtextdomain@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #106496	; 0x1a000
   11b70:	ldr	pc, [ip, #1480]!	; 0x5c8

00011b74 <getfscreatecon@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #106496	; 0x1a000
   11b7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00011b80 <umask@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #106496	; 0x1a000
   11b88:	ldr	pc, [ip, #1464]!	; 0x5b8

00011b8c <context_str@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #106496	; 0x1a000
   11b94:	ldr	pc, [ip, #1456]!	; 0x5b0

00011b98 <chmod@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #106496	; 0x1a000
   11ba0:	ldr	pc, [ip, #1448]!	; 0x5a8

00011ba4 <__xstat64@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #106496	; 0x1a000
   11bac:	ldr	pc, [ip, #1440]!	; 0x5a0

00011bb0 <__xmknod@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #106496	; 0x1a000
   11bb8:	ldr	pc, [ip, #1432]!	; 0x598

00011bbc <fputs@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #106496	; 0x1a000
   11bc4:	ldr	pc, [ip, #1424]!	; 0x590

00011bc8 <strncmp@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #106496	; 0x1a000
   11bd0:	ldr	pc, [ip, #1416]!	; 0x588

00011bd4 <abort@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #106496	; 0x1a000
   11bdc:	ldr	pc, [ip, #1408]!	; 0x580

00011be0 <close@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #106496	; 0x1a000
   11be8:	ldr	pc, [ip, #1400]!	; 0x578

00011bec <__lxstat64@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #106496	; 0x1a000
   11bf4:	ldr	pc, [ip, #1392]!	; 0x570

00011bf8 <mkfifo@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #106496	; 0x1a000
   11c00:	ldr	pc, [ip, #1384]!	; 0x568

00011c04 <mode_to_security_class@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #106496	; 0x1a000
   11c0c:	ldr	pc, [ip, #1376]!	; 0x560

00011c10 <closedir@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #106496	; 0x1a000
   11c18:	ldr	pc, [ip, #1368]!	; 0x558

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #106496	; 0x1a000
   11c24:	ldr	pc, [ip, #1360]!	; 0x550

00011c28 <__mempcpy_chk@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #106496	; 0x1a000
   11c30:	ldr	pc, [ip, #1352]!	; 0x548

00011c34 <__assert_fail@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #106496	; 0x1a000
   11c3c:	ldr	pc, [ip, #1344]!	; 0x540

Disassembly of section .text:

00011c40 <lchmod@@Base-0x4ab8>:
   11c40:	mov	fp, #0
   11c44:	mov	lr, #0
   11c48:	pop	{r1}		; (ldr r1, [sp], #4)
   11c4c:	mov	r2, sp
   11c50:	push	{r2}		; (str r2, [sp, #-4]!)
   11c54:	push	{r0}		; (str r0, [sp, #-4]!)
   11c58:	ldr	ip, [pc, #16]	; 11c70 <__assert_fail@plt+0x3c>
   11c5c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c60:	ldr	r0, [pc, #12]	; 11c74 <__assert_fail@plt+0x40>
   11c64:	ldr	r3, [pc, #12]	; 11c78 <__assert_fail@plt+0x44>
   11c68:	bl	119b8 <__libc_start_main@plt>
   11c6c:	bl	11bd4 <abort@plt>
   11c70:	strdeq	sl, [r1], -r8
   11c74:	andeq	r2, r1, r4
   11c78:	muleq	r1, r8, r5
   11c7c:	ldr	r3, [pc, #20]	; 11c98 <__assert_fail@plt+0x64>
   11c80:	ldr	r2, [pc, #20]	; 11c9c <__assert_fail@plt+0x68>
   11c84:	add	r3, pc, r3
   11c88:	ldr	r2, [r3, r2]
   11c8c:	cmp	r2, #0
   11c90:	bxeq	lr
   11c94:	b	119d0 <__gmon_start__@plt>
   11c98:	andeq	sl, r1, r4, ror r3
   11c9c:	andeq	r0, r0, r0, lsl #3
   11ca0:	ldr	r0, [pc, #24]	; 11cc0 <__assert_fail@plt+0x8c>
   11ca4:	ldr	r3, [pc, #24]	; 11cc4 <__assert_fail@plt+0x90>
   11ca8:	cmp	r3, r0
   11cac:	bxeq	lr
   11cb0:	ldr	r3, [pc, #16]	; 11cc8 <__assert_fail@plt+0x94>
   11cb4:	cmp	r3, #0
   11cb8:	bxeq	lr
   11cbc:	bx	r3
   11cc0:	ldrdeq	ip, [r2], -r8
   11cc4:	ldrdeq	ip, [r2], -r8
   11cc8:	andeq	r0, r0, r0
   11ccc:	ldr	r0, [pc, #36]	; 11cf8 <__assert_fail@plt+0xc4>
   11cd0:	ldr	r1, [pc, #36]	; 11cfc <__assert_fail@plt+0xc8>
   11cd4:	sub	r1, r1, r0
   11cd8:	asr	r1, r1, #2
   11cdc:	add	r1, r1, r1, lsr #31
   11ce0:	asrs	r1, r1, #1
   11ce4:	bxeq	lr
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <__assert_fail@plt+0xcc>
   11cec:	cmp	r3, #0
   11cf0:	bxeq	lr
   11cf4:	bx	r3
   11cf8:	ldrdeq	ip, [r2], -r8
   11cfc:	ldrdeq	ip, [r2], -r8
   11d00:	andeq	r0, r0, r0
   11d04:	push	{r4, lr}
   11d08:	ldr	r4, [pc, #24]	; 11d28 <__assert_fail@plt+0xf4>
   11d0c:	ldrb	r3, [r4]
   11d10:	cmp	r3, #0
   11d14:	popne	{r4, pc}
   11d18:	bl	11ca0 <__assert_fail@plt+0x6c>
   11d1c:	mov	r3, #1
   11d20:	strb	r3, [r4]
   11d24:	pop	{r4, pc}
   11d28:	strdeq	ip, [r2], -r4
   11d2c:	b	11ccc <__assert_fail@plt+0x98>
   11d30:	push	{fp, lr}
   11d34:	mov	fp, sp
   11d38:	sub	sp, sp, #56	; 0x38
   11d3c:	mov	r8, r0
   11d40:	cmp	r0, #0
   11d44:	bne	11fc4 <__assert_fail@plt+0x390>
   11d48:	movw	r1, #42699	; 0xa6cb
   11d4c:	mov	r0, #0
   11d50:	mov	r2, #5
   11d54:	movt	r1, #1
   11d58:	bl	118c8 <dcgettext@plt>
   11d5c:	mov	r1, r0
   11d60:	movw	r0, #49664	; 0xc200
   11d64:	movt	r0, #2
   11d68:	ldr	r2, [r0]
   11d6c:	mov	r0, #1
   11d70:	bl	11a90 <__printf_chk@plt>
   11d74:	movw	r1, #42746	; 0xa6fa
   11d78:	mov	r0, #0
   11d7c:	mov	r2, #5
   11d80:	movt	r1, #1
   11d84:	bl	118c8 <dcgettext@plt>
   11d88:	movw	r9, #49644	; 0xc1ec
   11d8c:	movt	r9, #2
   11d90:	ldr	r1, [r9]
   11d94:	bl	11808 <fputs_unlocked@plt>
   11d98:	movw	r1, #44322	; 0xad22
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	118c8 <dcgettext@plt>
   11dac:	ldr	r1, [r9]
   11db0:	bl	11808 <fputs_unlocked@plt>
   11db4:	movw	r1, #42795	; 0xa72b
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	118c8 <dcgettext@plt>
   11dc8:	ldr	r1, [r9]
   11dcc:	bl	11808 <fputs_unlocked@plt>
   11dd0:	movw	r1, #42868	; 0xa774
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	118c8 <dcgettext@plt>
   11de4:	ldr	r1, [r9]
   11de8:	bl	11808 <fputs_unlocked@plt>
   11dec:	movw	r1, #43075	; 0xa843
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	118c8 <dcgettext@plt>
   11e00:	ldr	r1, [r9]
   11e04:	bl	11808 <fputs_unlocked@plt>
   11e08:	movw	r1, #43120	; 0xa870
   11e0c:	mov	r0, #0
   11e10:	mov	r2, #5
   11e14:	movt	r1, #1
   11e18:	bl	118c8 <dcgettext@plt>
   11e1c:	ldr	r1, [r9]
   11e20:	bl	11808 <fputs_unlocked@plt>
   11e24:	movw	r1, #43174	; 0xa8a6
   11e28:	mov	r0, #0
   11e2c:	mov	r2, #5
   11e30:	movt	r1, #1
   11e34:	bl	118c8 <dcgettext@plt>
   11e38:	ldr	r1, [r9]
   11e3c:	bl	11808 <fputs_unlocked@plt>
   11e40:	movw	r1, #43435	; 0xa9ab
   11e44:	mov	r0, #0
   11e48:	mov	r2, #5
   11e4c:	movt	r1, #1
   11e50:	bl	118c8 <dcgettext@plt>
   11e54:	ldr	r1, [r9]
   11e58:	bl	11808 <fputs_unlocked@plt>
   11e5c:	movw	r1, #43562	; 0xaa2a
   11e60:	mov	r0, #0
   11e64:	mov	r2, #5
   11e68:	movt	r1, #1
   11e6c:	bl	118c8 <dcgettext@plt>
   11e70:	movw	r5, #43753	; 0xaae9
   11e74:	mov	r1, r0
   11e78:	mov	r0, #1
   11e7c:	movt	r5, #1
   11e80:	mov	r2, r5
   11e84:	bl	11a90 <__printf_chk@plt>
   11e88:	movw	ip, #44808	; 0xaf08
   11e8c:	mov	r6, sp
   11e90:	movt	ip, #1
   11e94:	mov	r1, r6
   11e98:	ldm	ip!, {r2, r3, r4, r7}
   11e9c:	stmia	r1!, {r2, r3, r4, r7}
   11ea0:	ldm	ip!, {r0, r2, r3, r4, r7}
   11ea4:	stmia	r1!, {r0, r2, r3, r4, r7}
   11ea8:	ldm	ip, {r0, r2, r3, r4, r7}
   11eac:	stm	r1, {r0, r2, r3, r4, r7}
   11eb0:	movw	r1, #44397	; 0xad6d
   11eb4:	movt	r1, #1
   11eb8:	mov	r0, r5
   11ebc:	bl	1182c <strcmp@plt>
   11ec0:	cmp	r0, #0
   11ec4:	ldrne	r1, [r6, #8]!
   11ec8:	cmpne	r1, #0
   11ecc:	bne	11eb8 <__assert_fail@plt+0x284>
   11ed0:	ldr	r6, [r6, #4]
   11ed4:	movw	r1, #44492	; 0xadcc
   11ed8:	mov	r0, #0
   11edc:	mov	r2, #5
   11ee0:	movt	r1, #1
   11ee4:	bl	118c8 <dcgettext@plt>
   11ee8:	movw	r2, #43888	; 0xab70
   11eec:	movw	r3, #44515	; 0xade3
   11ef0:	mov	r1, r0
   11ef4:	mov	r0, #1
   11ef8:	movt	r2, #1
   11efc:	movt	r3, #1
   11f00:	bl	11a90 <__printf_chk@plt>
   11f04:	cmp	r6, #0
   11f08:	mov	r0, #5
   11f0c:	mov	r1, #0
   11f10:	moveq	r6, r5
   11f14:	bl	11ae4 <setlocale@plt>
   11f18:	cmp	r0, #0
   11f1c:	beq	11f54 <__assert_fail@plt+0x320>
   11f20:	movw	r1, #44555	; 0xae0b
   11f24:	mov	r2, #3
   11f28:	movt	r1, #1
   11f2c:	bl	11bc8 <strncmp@plt>
   11f30:	cmp	r0, #0
   11f34:	beq	11f54 <__assert_fail@plt+0x320>
   11f38:	movw	r1, #44559	; 0xae0f
   11f3c:	mov	r0, #0
   11f40:	mov	r2, #5
   11f44:	movt	r1, #1
   11f48:	bl	118c8 <dcgettext@plt>
   11f4c:	ldr	r1, [r9]
   11f50:	bl	11808 <fputs_unlocked@plt>
   11f54:	movw	r1, #44630	; 0xae56
   11f58:	mov	r0, #0
   11f5c:	mov	r2, #5
   11f60:	movt	r1, #1
   11f64:	bl	118c8 <dcgettext@plt>
   11f68:	movw	r2, #44515	; 0xade3
   11f6c:	mov	r1, r0
   11f70:	mov	r0, #1
   11f74:	mov	r3, r5
   11f78:	movt	r2, #1
   11f7c:	bl	11a90 <__printf_chk@plt>
   11f80:	movw	r1, #44657	; 0xae71
   11f84:	mov	r0, #0
   11f88:	mov	r2, #5
   11f8c:	movt	r1, #1
   11f90:	bl	118c8 <dcgettext@plt>
   11f94:	movw	r3, #44707	; 0xaea3
   11f98:	mov	r1, r0
   11f9c:	movw	r0, #44425	; 0xad89
   11fa0:	cmp	r6, r5
   11fa4:	mov	r2, r6
   11fa8:	movt	r0, #1
   11fac:	movt	r3, #1
   11fb0:	moveq	r3, r0
   11fb4:	mov	r0, #1
   11fb8:	bl	11a90 <__printf_chk@plt>
   11fbc:	mov	r0, r8
   11fc0:	bl	11a0c <exit@plt>
   11fc4:	movw	r0, #49640	; 0xc1e8
   11fc8:	movw	r1, #42660	; 0xa6a4
   11fcc:	mov	r2, #5
   11fd0:	movt	r0, #2
   11fd4:	movt	r1, #1
   11fd8:	ldr	r5, [r0]
   11fdc:	mov	r0, #0
   11fe0:	bl	118c8 <dcgettext@plt>
   11fe4:	mov	r2, r0
   11fe8:	movw	r0, #49664	; 0xc200
   11fec:	mov	r1, #1
   11ff0:	movt	r0, #2
   11ff4:	ldr	r3, [r0]
   11ff8:	mov	r0, r5
   11ffc:	bl	11ab4 <__fprintf_chk@plt>
   12000:	b	11fbc <__assert_fail@plt+0x388>
   12004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12008:	add	fp, sp, #28
   1200c:	sub	sp, sp, #44	; 0x2c
   12010:	mov	r6, r0
   12014:	ldr	r0, [r1]
   12018:	mov	sl, r1
   1201c:	bl	16d5c <lchmod@@Base+0x664>
   12020:	movw	r1, #44707	; 0xaea3
   12024:	mov	r0, #6
   12028:	movt	r1, #1
   1202c:	bl	11ae4 <setlocale@plt>
   12030:	movw	r5, #43892	; 0xab74
   12034:	movw	r1, #43759	; 0xaaef
   12038:	movt	r5, #1
   1203c:	movt	r1, #1
   12040:	mov	r0, r5
   12044:	bl	11b68 <bindtextdomain@plt>
   12048:	mov	r0, r5
   1204c:	bl	118f8 <textdomain@plt>
   12050:	movw	r0, #13116	; 0x333c
   12054:	movt	r0, #1
   12058:	bl	1a5fc <lchmod@@Base+0x3f04>
   1205c:	movw	r7, #43783	; 0xab07
   12060:	movw	r8, #44728	; 0xaeb8
   12064:	movw	r4, #49648	; 0xc1f0
   12068:	mov	r0, #0
   1206c:	mov	r5, #0
   12070:	mov	r1, #0
   12074:	str	r0, [sp, #16]
   12078:	mov	r0, #0
   1207c:	movt	r7, #1
   12080:	movt	r8, #1
   12084:	movt	r4, #2
   12088:	str	r0, [sp, #20]
   1208c:	mov	r9, r1
   12090:	b	120d4 <__assert_fail@plt+0x4a0>
   12094:	cmp	r1, #0
   12098:	beq	120d4 <__assert_fail@plt+0x4a0>
   1209c:	movw	r1, #43815	; 0xab27
   120a0:	mov	r0, #0
   120a4:	mov	r2, #5
   120a8:	movt	r1, #1
   120ac:	bl	118c8 <dcgettext@plt>
   120b0:	mov	r2, r0
   120b4:	mov	r0, #0
   120b8:	mov	r1, #0
   120bc:	bl	11988 <error@plt>
   120c0:	b	120d4 <__assert_fail@plt+0x4a0>
   120c4:	cmp	r0, #109	; 0x6d
   120c8:	bne	12648 <__assert_fail@plt+0xa14>
   120cc:	ldr	r0, [r4]
   120d0:	str	r0, [sp, #20]
   120d4:	mov	r0, r6
   120d8:	mov	r1, sl
   120dc:	mov	r2, r7
   120e0:	mov	r3, r8
   120e4:	str	r5, [sp]
   120e8:	bl	119e8 <getopt_long@plt>
   120ec:	cmp	r0, #89	; 0x59
   120f0:	ble	12174 <__assert_fail@plt+0x540>
   120f4:	cmp	r0, #90	; 0x5a
   120f8:	bne	120c4 <__assert_fail@plt+0x490>
   120fc:	bl	11820 <is_selinux_enabled@plt>
   12100:	ldr	r1, [r4]
   12104:	cmp	r0, #1
   12108:	blt	12094 <__assert_fail@plt+0x460>
   1210c:	cmp	r1, #0
   12110:	bne	1208c <__assert_fail@plt+0x458>
   12114:	mov	r0, #0
   12118:	mov	r1, #0
   1211c:	mov	r2, #0
   12120:	bl	11a30 <selabel_open@plt>
   12124:	cmp	r0, #0
   12128:	mov	r1, r9
   1212c:	str	r0, [sp, #16]
   12130:	bne	1208c <__assert_fail@plt+0x458>
   12134:	bl	11a60 <__errno_location@plt>
   12138:	ldr	r0, [r0]
   1213c:	movw	r1, #43787	; 0xab0b
   12140:	mov	r2, #5
   12144:	movt	r1, #1
   12148:	str	r0, [sp, #12]
   1214c:	mov	r0, #0
   12150:	str	r0, [sp, #16]
   12154:	mov	r0, #0
   12158:	bl	118c8 <dcgettext@plt>
   1215c:	ldr	r1, [sp, #12]
   12160:	mov	r2, r0
   12164:	mov	r0, #0
   12168:	bl	11988 <error@plt>
   1216c:	mov	r1, r9
   12170:	b	1208c <__assert_fail@plt+0x458>
   12174:	cmn	r0, #1
   12178:	bne	12464 <__assert_fail@plt+0x830>
   1217c:	ldr	r0, [sp, #20]
   12180:	cmp	r0, #0
   12184:	beq	121e4 <__assert_fail@plt+0x5b0>
   12188:	bl	16814 <lchmod@@Base+0x11c>
   1218c:	cmp	r0, #0
   12190:	beq	12574 <__assert_fail@plt+0x940>
   12194:	mov	r5, r0
   12198:	mov	r0, #0
   1219c:	mov	r4, #0
   121a0:	bl	11b80 <umask@plt>
   121a4:	mov	r7, r0
   121a8:	bl	11b80 <umask@plt>
   121ac:	movw	r0, #438	; 0x1b6
   121b0:	mov	r1, #0
   121b4:	mov	r2, r7
   121b8:	mov	r3, r5
   121bc:	str	r4, [sp]
   121c0:	bl	16bb4 <lchmod@@Base+0x4bc>
   121c4:	mov	r8, r0
   121c8:	mov	r0, r5
   121cc:	bl	135e0 <__assert_fail@plt+0x19ac>
   121d0:	cmp	r8, #512	; 0x200
   121d4:	bcc	121e8 <__assert_fail@plt+0x5b4>
   121d8:	movw	r1, #43931	; 0xab9b
   121dc:	movt	r1, #1
   121e0:	b	1257c <__assert_fail@plt+0x948>
   121e4:	movw	r8, #438	; 0x1b6
   121e8:	movw	r4, #49632	; 0xc1e0
   121ec:	movt	r4, #2
   121f0:	ldr	r3, [r4]
   121f4:	cmp	r3, r6
   121f8:	bge	12220 <__assert_fail@plt+0x5ec>
   121fc:	add	r1, r3, #1
   12200:	mov	r5, #4
   12204:	mov	r7, #0
   12208:	cmp	r1, r6
   1220c:	bge	12228 <__assert_fail@plt+0x5f4>
   12210:	ldr	r1, [sl, r1, lsl #2]
   12214:	ldrb	r1, [r1]
   12218:	cmp	r1, #112	; 0x70
   1221c:	bne	12228 <__assert_fail@plt+0x5f4>
   12220:	mov	r5, #2
   12224:	mov	r7, #1
   12228:	sub	r1, r6, r3
   1222c:	cmp	r1, r5
   12230:	bcc	124c4 <__assert_fail@plt+0x890>
   12234:	cmp	r5, r1
   12238:	bcc	12508 <__assert_fail@plt+0x8d4>
   1223c:	cmp	r9, #0
   12240:	beq	12258 <__assert_fail@plt+0x624>
   12244:	mov	r0, r9
   12248:	bl	11a54 <setfscreatecon@plt>
   1224c:	cmp	r0, #0
   12250:	blt	12598 <__assert_fail@plt+0x964>
   12254:	ldr	r3, [r4]
   12258:	add	r1, sl, r3, lsl #2
   1225c:	ldr	r2, [r1, #4]
   12260:	ldrb	r2, [r2]
   12264:	cmp	r2, #111	; 0x6f
   12268:	bgt	122c8 <__assert_fail@plt+0x694>
   1226c:	movw	r6, #44707	; 0xaea3
   12270:	mov	r5, #24576	; 0x6000
   12274:	cmp	r2, #98	; 0x62
   12278:	movt	r6, #1
   1227c:	beq	12310 <__assert_fail@plt+0x6dc>
   12280:	cmp	r2, #99	; 0x63
   12284:	beq	1230c <__assert_fail@plt+0x6d8>
   12288:	movw	r1, #44270	; 0xacee
   1228c:	mov	r0, #0
   12290:	mov	r2, #5
   12294:	movt	r1, #1
   12298:	bl	118c8 <dcgettext@plt>
   1229c:	mov	r5, r0
   122a0:	ldr	r0, [r4]
   122a4:	add	r0, sl, r0, lsl #2
   122a8:	ldr	r0, [r0, #4]
   122ac:	bl	18760 <lchmod@@Base+0x2068>
   122b0:	mov	r3, r0
   122b4:	mov	r0, #0
   122b8:	mov	r1, #0
   122bc:	mov	r2, r5
   122c0:	bl	11988 <error@plt>
   122c4:	b	12648 <__assert_fail@plt+0xa14>
   122c8:	movw	r6, #44707	; 0xaea3
   122cc:	cmp	r2, #112	; 0x70
   122d0:	movt	r6, #1
   122d4:	bne	12304 <__assert_fail@plt+0x6d0>
   122d8:	ldr	r0, [sp, #16]
   122dc:	cmp	r0, #0
   122e0:	beq	122f4 <__assert_fail@plt+0x6c0>
   122e4:	ldr	r1, [sl, r3, lsl #2]
   122e8:	mov	r2, #4096	; 0x1000
   122ec:	bl	126f4 <__assert_fail@plt+0xac0>
   122f0:	ldr	r3, [r4]
   122f4:	ldr	r0, [sl, r3, lsl #2]
   122f8:	mov	r1, r8
   122fc:	bl	11bf8 <mkfifo@plt>
   12300:	b	1242c <__assert_fail@plt+0x7f8>
   12304:	cmp	r2, #117	; 0x75
   12308:	bne	12288 <__assert_fail@plt+0x654>
   1230c:	mov	r5, #8192	; 0x2000
   12310:	ldr	r4, [r1, #8]
   12314:	ldr	r7, [r1, #12]
   12318:	add	r3, sp, #32
   1231c:	mov	r1, #0
   12320:	mov	r2, #0
   12324:	str	r6, [sp]
   12328:	mov	r0, r4
   1232c:	bl	194dc <lchmod@@Base+0x2de4>
   12330:	cmp	r0, #0
   12334:	ldreq	r0, [sp, #36]	; 0x24
   12338:	cmpeq	r0, #0
   1233c:	beq	12374 <__assert_fail@plt+0x740>
   12340:	movw	r1, #44187	; 0xac9b
   12344:	mov	r0, #0
   12348:	mov	r2, #5
   1234c:	movt	r1, #1
   12350:	bl	118c8 <dcgettext@plt>
   12354:	mov	r5, r0
   12358:	mov	r0, r4
   1235c:	bl	18760 <lchmod@@Base+0x2068>
   12360:	mov	r3, r0
   12364:	mov	r0, #1
   12368:	mov	r1, #0
   1236c:	mov	r2, r5
   12370:	bl	11988 <error@plt>
   12374:	add	r3, sp, #24
   12378:	mov	r0, r7
   1237c:	mov	r1, #0
   12380:	mov	r2, #0
   12384:	str	r6, [sp]
   12388:	bl	194dc <lchmod@@Base+0x2de4>
   1238c:	cmp	r0, #0
   12390:	ldreq	r0, [sp, #28]
   12394:	cmpeq	r0, #0
   12398:	beq	123d0 <__assert_fail@plt+0x79c>
   1239c:	movw	r1, #44218	; 0xacba
   123a0:	mov	r0, #0
   123a4:	mov	r2, #5
   123a8:	movt	r1, #1
   123ac:	bl	118c8 <dcgettext@plt>
   123b0:	mov	r4, r0
   123b4:	mov	r0, r7
   123b8:	bl	18760 <lchmod@@Base+0x2068>
   123bc:	mov	r3, r0
   123c0:	mov	r0, #1
   123c4:	mov	r1, #0
   123c8:	mov	r2, r4
   123cc:	bl	11988 <error@plt>
   123d0:	ldr	r1, [sp, #24]
   123d4:	ldr	r0, [sp, #32]
   123d8:	bl	11838 <gnu_dev_makedev@plt>
   123dc:	mov	r6, r0
   123e0:	and	r0, r0, r1
   123e4:	cmn	r0, #1
   123e8:	beq	126c8 <__assert_fail@plt+0xa94>
   123ec:	ldr	r0, [sp, #16]
   123f0:	movw	r4, #49632	; 0xc1e0
   123f4:	mov	r9, r1
   123f8:	movt	r4, #2
   123fc:	cmp	r0, #0
   12400:	beq	12414 <__assert_fail@plt+0x7e0>
   12404:	ldr	r1, [r4]
   12408:	mov	r2, r5
   1240c:	ldr	r1, [sl, r1, lsl #2]
   12410:	bl	126f4 <__assert_fail@plt+0xac0>
   12414:	ldr	r0, [r4]
   12418:	orr	r1, r5, r8
   1241c:	mov	r2, r6
   12420:	mov	r3, r9
   12424:	ldr	r0, [sl, r0, lsl #2]
   12428:	bl	1a66c <lchmod@@Base+0x3f74>
   1242c:	cmp	r0, #0
   12430:	bne	12650 <__assert_fail@plt+0xa1c>
   12434:	ldr	r0, [sp, #20]
   12438:	cmp	r0, #0
   1243c:	beq	12458 <__assert_fail@plt+0x824>
   12440:	ldr	r0, [r4]
   12444:	mov	r1, r8
   12448:	ldr	r0, [sl, r0, lsl #2]
   1244c:	bl	166f8 <lchmod@@Base>
   12450:	cmp	r0, #0
   12454:	bne	12684 <__assert_fail@plt+0xa50>
   12458:	mov	r0, #0
   1245c:	sub	sp, fp, #28
   12460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12464:	cmn	r0, #3
   12468:	bne	124b4 <__assert_fail@plt+0x880>
   1246c:	movw	r0, #49552	; 0xc190
   12470:	movw	r2, #43902	; 0xab7e
   12474:	mov	r1, #0
   12478:	movt	r0, #2
   1247c:	movt	r2, #1
   12480:	str	r1, [sp, #4]
   12484:	movw	r1, #43753	; 0xaae9
   12488:	ldr	r3, [r0]
   1248c:	movw	r0, #49644	; 0xc1ec
   12490:	str	r2, [sp]
   12494:	movw	r2, #43888	; 0xab70
   12498:	movt	r1, #1
   1249c:	movt	r0, #2
   124a0:	movt	r2, #1
   124a4:	ldr	r0, [r0]
   124a8:	bl	18ec4 <lchmod@@Base+0x27cc>
   124ac:	mov	r0, #0
   124b0:	bl	11a0c <exit@plt>
   124b4:	cmn	r0, #2
   124b8:	bne	12648 <__assert_fail@plt+0xa14>
   124bc:	mov	r0, #0
   124c0:	bl	11d30 <__assert_fail@plt+0xfc>
   124c4:	cmp	r3, r6
   124c8:	bge	125d4 <__assert_fail@plt+0x9a0>
   124cc:	movw	r1, #43991	; 0xabd7
   124d0:	mov	r0, #0
   124d4:	mov	r2, #5
   124d8:	movt	r1, #1
   124dc:	bl	118c8 <dcgettext@plt>
   124e0:	mov	r5, r0
   124e4:	add	r0, sl, r6, lsl #2
   124e8:	ldr	r0, [r0, #-4]
   124ec:	bl	18760 <lchmod@@Base+0x2068>
   124f0:	mov	r3, r0
   124f4:	mov	r0, #0
   124f8:	mov	r1, #0
   124fc:	mov	r2, r5
   12500:	bl	11988 <error@plt>
   12504:	b	125f8 <__assert_fail@plt+0x9c4>
   12508:	movw	r1, #44070	; 0xac26
   1250c:	mov	r0, #0
   12510:	mov	r2, #5
   12514:	movt	r1, #1
   12518:	bl	118c8 <dcgettext@plt>
   1251c:	mov	r8, r0
   12520:	ldr	r0, [r4]
   12524:	mov	r9, r4
   12528:	add	r0, r0, r5
   1252c:	ldr	r0, [sl, r0, lsl #2]
   12530:	bl	18760 <lchmod@@Base+0x2068>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	mov	r1, #0
   12540:	mov	r2, r8
   12544:	bl	11988 <error@plt>
   12548:	cmp	r7, #0
   1254c:	beq	12648 <__assert_fail@plt+0xa14>
   12550:	ldr	r0, [r9]
   12554:	sub	r0, r6, r0
   12558:	cmp	r0, #4
   1255c:	bne	12648 <__assert_fail@plt+0xa14>
   12560:	movw	r0, #49640	; 0xc1e8
   12564:	movw	r1, #44087	; 0xac37
   12568:	movt	r0, #2
   1256c:	movt	r1, #1
   12570:	b	12620 <__assert_fail@plt+0x9ec>
   12574:	movw	r1, #43918	; 0xab8e
   12578:	movt	r1, #1
   1257c:	mov	r0, #0
   12580:	mov	r2, #5
   12584:	bl	118c8 <dcgettext@plt>
   12588:	mov	r2, r0
   1258c:	mov	r0, #1
   12590:	mov	r1, #0
   12594:	bl	11988 <error@plt>
   12598:	bl	11a60 <__errno_location@plt>
   1259c:	ldr	r4, [r0]
   125a0:	movw	r1, #44137	; 0xac69
   125a4:	mov	r0, #0
   125a8:	mov	r2, #5
   125ac:	movt	r1, #1
   125b0:	bl	118c8 <dcgettext@plt>
   125b4:	mov	r5, r0
   125b8:	mov	r0, r9
   125bc:	bl	18760 <lchmod@@Base+0x2068>
   125c0:	mov	r3, r0
   125c4:	mov	r0, #1
   125c8:	mov	r1, r4
   125cc:	mov	r2, r5
   125d0:	bl	11988 <error@plt>
   125d4:	movw	r1, #43975	; 0xabc7
   125d8:	mov	r0, #0
   125dc:	mov	r2, #5
   125e0:	movt	r1, #1
   125e4:	bl	118c8 <dcgettext@plt>
   125e8:	mov	r2, r0
   125ec:	mov	r0, #0
   125f0:	mov	r1, #0
   125f4:	bl	11988 <error@plt>
   125f8:	cmp	r7, #0
   125fc:	bne	12648 <__assert_fail@plt+0xa14>
   12600:	ldr	r0, [r4]
   12604:	sub	r0, r6, r0
   12608:	cmp	r0, #2
   1260c:	bne	12648 <__assert_fail@plt+0xa14>
   12610:	movw	r0, #49640	; 0xc1e8
   12614:	movw	r1, #44016	; 0xabf0
   12618:	movt	r0, #2
   1261c:	movt	r1, #1
   12620:	ldr	r4, [r0]
   12624:	mov	r0, #0
   12628:	mov	r2, #5
   1262c:	bl	118c8 <dcgettext@plt>
   12630:	movw	r2, #45378	; 0xb142
   12634:	mov	r3, r0
   12638:	mov	r0, r4
   1263c:	mov	r1, #1
   12640:	movt	r2, #1
   12644:	bl	11ab4 <__fprintf_chk@plt>
   12648:	mov	r0, #1
   1264c:	bl	11d30 <__assert_fail@plt+0xfc>
   12650:	bl	11a60 <__errno_location@plt>
   12654:	ldr	r1, [r4]
   12658:	ldr	r4, [r0]
   1265c:	mov	r0, #0
   12660:	ldr	r2, [sl, r1, lsl #2]
   12664:	mov	r1, #3
   12668:	bl	185cc <lchmod@@Base+0x1ed4>
   1266c:	movw	r2, #44895	; 0xaf5f
   12670:	mov	r3, r0
   12674:	mov	r0, #1
   12678:	mov	r1, r4
   1267c:	movt	r2, #1
   12680:	bl	11988 <error@plt>
   12684:	bl	11a60 <__errno_location@plt>
   12688:	ldr	r5, [r0]
   1268c:	movw	r1, #44293	; 0xad05
   12690:	mov	r0, #0
   12694:	mov	r2, #5
   12698:	movt	r1, #1
   1269c:	bl	118c8 <dcgettext@plt>
   126a0:	mov	r6, r0
   126a4:	ldr	r0, [r4]
   126a8:	ldr	r1, [sl, r0, lsl #2]
   126ac:	mov	r0, #4
   126b0:	bl	18428 <lchmod@@Base+0x1d30>
   126b4:	mov	r3, r0
   126b8:	mov	r0, #1
   126bc:	mov	r1, r5
   126c0:	mov	r2, r6
   126c4:	bl	11988 <error@plt>
   126c8:	movw	r1, #44249	; 0xacd9
   126cc:	mov	r0, #0
   126d0:	mov	r2, #5
   126d4:	movt	r1, #1
   126d8:	bl	118c8 <dcgettext@plt>
   126dc:	mov	r2, r0
   126e0:	mov	r0, #1
   126e4:	mov	r1, #0
   126e8:	mov	r3, r4
   126ec:	str	r7, [sp]
   126f0:	bl	11988 <error@plt>
   126f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126f8:	add	fp, sp, #24
   126fc:	sub	sp, sp, #16
   12700:	mov	r4, #0
   12704:	mov	r7, r0
   12708:	mov	r5, r2
   1270c:	mov	r6, r1
   12710:	str	r4, [sp, #4]
   12714:	str	r4, [sp]
   12718:	ldrb	r0, [r1]
   1271c:	cmp	r0, #47	; 0x2f
   12720:	beq	12740 <__assert_fail@plt+0xb0c>
   12724:	mov	r0, r6
   12728:	mov	r1, #2
   1272c:	bl	12c50 <__assert_fail@plt+0x101c>
   12730:	mov	r4, r0
   12734:	cmp	r0, #0
   12738:	mov	r6, r0
   1273c:	beq	12890 <__assert_fail@plt+0xc5c>
   12740:	add	r1, sp, #4
   12744:	mov	r0, r7
   12748:	mov	r2, r6
   1274c:	mov	r3, r5
   12750:	bl	117f0 <selabel_lookup@plt>
   12754:	cmn	r0, #1
   12758:	ble	12868 <__assert_fail@plt+0xc34>
   1275c:	mov	r0, #0
   12760:	str	r0, [sp, #12]
   12764:	str	r0, [sp, #8]
   12768:	mov	r0, r6
   1276c:	bl	13424 <__assert_fail@plt+0x17f0>
   12770:	mov	r6, r0
   12774:	add	r0, sp, #12
   12778:	bl	11958 <getcon@plt>
   1277c:	mov	r9, #1
   12780:	cmp	r0, #0
   12784:	blt	127c4 <__assert_fail@plt+0xb90>
   12788:	add	r1, sp, #8
   1278c:	mov	r0, r6
   12790:	bl	18a08 <lchmod@@Base+0x2310>
   12794:	cmp	r0, #0
   12798:	blt	127c4 <__assert_fail@plt+0xb90>
   1279c:	mov	r0, r5
   127a0:	bl	11c04 <mode_to_security_class@plt>
   127a4:	cmp	r0, #0
   127a8:	beq	127c4 <__assert_fail@plt+0xb90>
   127ac:	mov	r2, r0
   127b0:	ldr	r1, [sp, #8]
   127b4:	ldr	r0, [sp, #12]
   127b8:	mov	r3, sp
   127bc:	bl	11b2c <security_compute_create@plt>
   127c0:	lsr	r9, r0, #31
   127c4:	bl	11a60 <__errno_location@plt>
   127c8:	ldr	r7, [r0]
   127cc:	mov	r5, r0
   127d0:	mov	r0, r6
   127d4:	bl	135e0 <__assert_fail@plt+0x19ac>
   127d8:	ldr	r0, [sp, #12]
   127dc:	bl	11b5c <freecon@plt>
   127e0:	ldr	r0, [sp, #8]
   127e4:	bl	11b5c <freecon@plt>
   127e8:	mvn	r8, #0
   127ec:	cmp	r9, #0
   127f0:	str	r7, [r5]
   127f4:	bne	12860 <__assert_fail@plt+0xc2c>
   127f8:	ldr	r0, [sp, #4]
   127fc:	bl	118b0 <context_new@plt>
   12800:	cmp	r0, #0
   12804:	beq	12860 <__assert_fail@plt+0xc2c>
   12808:	mov	r6, r0
   1280c:	ldr	r0, [sp]
   12810:	bl	118b0 <context_new@plt>
   12814:	cmp	r0, #0
   12818:	beq	128ac <__assert_fail@plt+0xc78>
   1281c:	mov	r9, r0
   12820:	mov	r0, r6
   12824:	bl	11844 <context_type_get@plt>
   12828:	cmp	r0, #0
   1282c:	beq	128b0 <__assert_fail@plt+0xc7c>
   12830:	mov	r1, r0
   12834:	mov	r0, r9
   12838:	bl	118d4 <context_type_set@plt>
   1283c:	cmp	r0, #0
   12840:	bne	128b0 <__assert_fail@plt+0xc7c>
   12844:	mov	r0, r9
   12848:	bl	11b8c <context_str@plt>
   1284c:	cmp	r0, #0
   12850:	beq	128b0 <__assert_fail@plt+0xc7c>
   12854:	bl	11a54 <setfscreatecon@plt>
   12858:	mov	r8, r0
   1285c:	b	128b0 <__assert_fail@plt+0xc7c>
   12860:	mov	r9, #0
   12864:	b	12888 <__assert_fail@plt+0xc54>
   12868:	bl	11a60 <__errno_location@plt>
   1286c:	mov	r5, r0
   12870:	ldr	r0, [r0]
   12874:	mvn	r8, #0
   12878:	mov	r9, #0
   1287c:	cmp	r0, #2
   12880:	moveq	r0, #61	; 0x3d
   12884:	streq	r0, [r5]
   12888:	mov	r6, #0
   1288c:	b	128b0 <__assert_fail@plt+0xc7c>
   12890:	mov	r9, #0
   12894:	mvn	r8, #0
   12898:	bl	11a60 <__errno_location@plt>
   1289c:	mov	r5, r0
   128a0:	mov	r6, #0
   128a4:	mov	r4, #0
   128a8:	b	128b0 <__assert_fail@plt+0xc7c>
   128ac:	mov	r9, #0
   128b0:	ldr	r7, [r5]
   128b4:	mov	r0, r6
   128b8:	bl	119dc <context_free@plt>
   128bc:	mov	r0, r9
   128c0:	bl	119dc <context_free@plt>
   128c4:	ldr	r0, [sp, #4]
   128c8:	bl	11b5c <freecon@plt>
   128cc:	ldr	r0, [sp]
   128d0:	bl	11b5c <freecon@plt>
   128d4:	mov	r0, r4
   128d8:	bl	135e0 <__assert_fail@plt+0x19ac>
   128dc:	str	r7, [r5]
   128e0:	mov	r0, r8
   128e4:	sub	sp, fp, #24
   128e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   128ec:	push	{r4, r5, r6, r7, fp, lr}
   128f0:	add	fp, sp, #16
   128f4:	sub	sp, sp, #8
   128f8:	mov	r5, r0
   128fc:	ldrb	r0, [r1]
   12900:	mov	r6, r2
   12904:	mov	r4, #0
   12908:	cmp	r0, #47	; 0x2f
   1290c:	beq	1292c <__assert_fail@plt+0xcf8>
   12910:	mov	r0, r1
   12914:	mov	r1, #2
   12918:	bl	12c50 <__assert_fail@plt+0x101c>
   1291c:	mov	r4, r0
   12920:	cmp	r0, #0
   12924:	mov	r1, r0
   12928:	beq	129f8 <__assert_fail@plt+0xdc4>
   1292c:	cmp	r6, #0
   12930:	beq	129c4 <__assert_fail@plt+0xd90>
   12934:	mov	r7, #0
   12938:	mov	r0, sp
   1293c:	mov	r2, #0
   12940:	stm	sp, {r1, r7}
   12944:	mov	r1, #16
   12948:	bl	19460 <lchmod@@Base+0x2d68>
   1294c:	mov	r6, r0
   12950:	bl	13ec0 <__assert_fail@plt+0x228c>
   12954:	cmp	r0, #0
   12958:	beq	1298c <__assert_fail@plt+0xd58>
   1295c:	mov	r7, #0
   12960:	ldr	r1, [r6, #24]
   12964:	mov	r0, r5
   12968:	bl	12a04 <__assert_fail@plt+0xdd0>
   1296c:	cmn	r0, #1
   12970:	bgt	1297c <__assert_fail@plt+0xd48>
   12974:	bl	11a60 <__errno_location@plt>
   12978:	ldr	r7, [r0]
   1297c:	mov	r0, r6
   12980:	bl	13ec0 <__assert_fail@plt+0x228c>
   12984:	cmp	r0, #0
   12988:	bne	12960 <__assert_fail@plt+0xd2c>
   1298c:	bl	11a60 <__errno_location@plt>
   12990:	mov	r5, r0
   12994:	ldr	r0, [r0]
   12998:	cmp	r0, #0
   1299c:	movne	r7, r0
   129a0:	mov	r0, r6
   129a4:	bl	13d40 <__assert_fail@plt+0x210c>
   129a8:	cmp	r0, #0
   129ac:	mov	r0, r4
   129b0:	ldrne	r7, [r5]
   129b4:	bl	135e0 <__assert_fail@plt+0x19ac>
   129b8:	clz	r0, r7
   129bc:	lsr	r0, r0, #5
   129c0:	b	129fc <__assert_fail@plt+0xdc8>
   129c4:	mov	r0, r5
   129c8:	bl	12a04 <__assert_fail@plt+0xdd0>
   129cc:	mov	r5, r0
   129d0:	bl	11a60 <__errno_location@plt>
   129d4:	ldr	r7, [r0]
   129d8:	mov	r6, r0
   129dc:	mov	r0, r4
   129e0:	bl	135e0 <__assert_fail@plt+0x19ac>
   129e4:	add	r0, r5, #1
   129e8:	cmn	r5, #1
   129ec:	str	r7, [r6]
   129f0:	movwne	r0, #1
   129f4:	b	129fc <__assert_fail@plt+0xdc8>
   129f8:	mov	r0, #0
   129fc:	sub	sp, fp, #16
   12a00:	pop	{r4, r5, r6, r7, fp, pc}
   12a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a08:	add	fp, sp, #28
   12a0c:	sub	sp, sp, #116	; 0x74
   12a10:	mov	r6, r0
   12a14:	mov	r0, #0
   12a18:	mov	r7, r1
   12a1c:	cmp	r6, #0
   12a20:	str	r0, [sp, #4]
   12a24:	str	r0, [sp]
   12a28:	beq	12a78 <__assert_fail@plt+0xe44>
   12a2c:	mov	r0, r7
   12a30:	mov	r1, #32768	; 0x8000
   12a34:	bl	11994 <open64@plt>
   12a38:	mov	sl, r0
   12a3c:	cmn	r0, #1
   12a40:	beq	12ab4 <__assert_fail@plt+0xe80>
   12a44:	add	r1, sp, #8
   12a48:	mov	r0, sl
   12a4c:	bl	1a624 <lchmod@@Base+0x3f2c>
   12a50:	mov	r5, #1
   12a54:	cmn	r0, #1
   12a58:	bgt	12ae8 <__assert_fail@plt+0xeb4>
   12a5c:	bl	11a60 <__errno_location@plt>
   12a60:	ldr	r5, [r0]
   12a64:	mov	r4, r0
   12a68:	mov	r8, #0
   12a6c:	mvn	r9, #0
   12a70:	mov	r6, #0
   12a74:	b	12bf8 <__assert_fail@plt+0xfc4>
   12a78:	mov	r0, sp
   12a7c:	bl	11b74 <getfscreatecon@plt>
   12a80:	mvn	r9, #0
   12a84:	cmp	r0, #0
   12a88:	blt	12c34 <__assert_fail@plt+0x1000>
   12a8c:	ldr	r1, [sp]
   12a90:	cmp	r1, #0
   12a94:	beq	12b54 <__assert_fail@plt+0xf20>
   12a98:	mov	r0, r7
   12a9c:	bl	1185c <lsetfilecon@plt>
   12aa0:	mov	r9, r0
   12aa4:	bl	11a60 <__errno_location@plt>
   12aa8:	ldr	r5, [r0]
   12aac:	mov	r4, r0
   12ab0:	b	12c28 <__assert_fail@plt+0xff4>
   12ab4:	bl	11a60 <__errno_location@plt>
   12ab8:	ldr	r5, [r0]
   12abc:	mov	r4, r0
   12ac0:	mov	r8, #0
   12ac4:	mvn	r9, #0
   12ac8:	cmp	r5, #40	; 0x28
   12acc:	bne	12c0c <__assert_fail@plt+0xfd8>
   12ad0:	add	r1, sp, #8
   12ad4:	mov	r0, r7
   12ad8:	bl	1a634 <lchmod@@Base+0x3f3c>
   12adc:	mov	r5, #0
   12ae0:	cmn	r0, #1
   12ae4:	ble	12c04 <__assert_fail@plt+0xfd0>
   12ae8:	ldr	r3, [sp, #24]
   12aec:	add	r1, sp, #4
   12af0:	mov	r0, r6
   12af4:	mov	r2, r7
   12af8:	bl	117f0 <selabel_lookup@plt>
   12afc:	cmn	r0, #1
   12b00:	ble	12b34 <__assert_fail@plt+0xf00>
   12b04:	ldr	r0, [sp, #4]
   12b08:	bl	118b0 <context_new@plt>
   12b0c:	mvn	r9, #0
   12b10:	cmp	r0, #0
   12b14:	beq	12b64 <__assert_fail@plt+0xf30>
   12b18:	mov	r8, r0
   12b1c:	mov	r1, sp
   12b20:	cmp	r5, #0
   12b24:	beq	12b70 <__assert_fail@plt+0xf3c>
   12b28:	mov	r0, sl
   12b2c:	bl	18ab0 <lchmod@@Base+0x23b8>
   12b30:	b	12b78 <__assert_fail@plt+0xf44>
   12b34:	bl	11a60 <__errno_location@plt>
   12b38:	ldr	r1, [r0]
   12b3c:	mvn	r9, #0
   12b40:	mov	r6, #0
   12b44:	cmp	r1, #2
   12b48:	moveq	r1, #61	; 0x3d
   12b4c:	streq	r1, [r0]
   12b50:	b	12b68 <__assert_fail@plt+0xf34>
   12b54:	bl	11a60 <__errno_location@plt>
   12b58:	mov	r1, #61	; 0x3d
   12b5c:	str	r1, [r0]
   12b60:	b	12c34 <__assert_fail@plt+0x1000>
   12b64:	mov	r6, #0
   12b68:	mov	r8, #0
   12b6c:	b	12be4 <__assert_fail@plt+0xfb0>
   12b70:	mov	r0, r7
   12b74:	bl	18a94 <lchmod@@Base+0x239c>
   12b78:	cmp	r0, #0
   12b7c:	blt	12be0 <__assert_fail@plt+0xfac>
   12b80:	ldr	r0, [sp]
   12b84:	bl	118b0 <context_new@plt>
   12b88:	cmp	r0, #0
   12b8c:	beq	12be0 <__assert_fail@plt+0xfac>
   12b90:	mov	r6, r0
   12b94:	mov	r0, r8
   12b98:	bl	11844 <context_type_get@plt>
   12b9c:	cmp	r0, #0
   12ba0:	beq	12be4 <__assert_fail@plt+0xfb0>
   12ba4:	mov	r1, r0
   12ba8:	mov	r0, r6
   12bac:	bl	118d4 <context_type_set@plt>
   12bb0:	cmp	r0, #0
   12bb4:	bne	12be4 <__assert_fail@plt+0xfb0>
   12bb8:	mov	r0, r6
   12bbc:	bl	11b8c <context_str@plt>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12be4 <__assert_fail@plt+0xfb0>
   12bc8:	mov	r1, r0
   12bcc:	cmp	r5, #0
   12bd0:	beq	12c40 <__assert_fail@plt+0x100c>
   12bd4:	mov	r0, sl
   12bd8:	bl	11af0 <fsetfilecon@plt>
   12bdc:	b	12c48 <__assert_fail@plt+0x1014>
   12be0:	mov	r6, #0
   12be4:	bl	11a60 <__errno_location@plt>
   12be8:	ldr	r5, [r0]
   12bec:	mov	r4, r0
   12bf0:	cmn	sl, #1
   12bf4:	beq	12c10 <__assert_fail@plt+0xfdc>
   12bf8:	mov	r0, sl
   12bfc:	bl	11be0 <close@plt>
   12c00:	b	12c10 <__assert_fail@plt+0xfdc>
   12c04:	ldr	r5, [r4]
   12c08:	mov	r8, #0
   12c0c:	mov	r6, #0
   12c10:	mov	r0, r8
   12c14:	bl	119dc <context_free@plt>
   12c18:	mov	r0, r6
   12c1c:	bl	119dc <context_free@plt>
   12c20:	ldr	r0, [sp, #4]
   12c24:	bl	11b5c <freecon@plt>
   12c28:	ldr	r0, [sp]
   12c2c:	bl	11b5c <freecon@plt>
   12c30:	str	r5, [r4]
   12c34:	mov	r0, r9
   12c38:	sub	sp, fp, #28
   12c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c40:	mov	r0, r7
   12c44:	bl	1185c <lsetfilecon@plt>
   12c48:	mov	r9, r0
   12c4c:	b	12be4 <__assert_fail@plt+0xfb0>
   12c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c54:	add	fp, sp, #28
   12c58:	sub	sp, sp, #180	; 0xb4
   12c5c:	sub	sp, sp, #3072	; 0xc00
   12c60:	mov	r8, r0
   12c64:	and	r7, r1, #3
   12c68:	sub	r0, r1, #1
   12c6c:	tst	r0, r7
   12c70:	beq	12c90 <__assert_fail@plt+0x105c>
   12c74:	bl	11a60 <__errno_location@plt>
   12c78:	mov	r1, #22
   12c7c:	mov	r4, #0
   12c80:	str	r1, [r0]
   12c84:	mov	r0, r4
   12c88:	sub	sp, fp, #28
   12c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c90:	cmp	r8, #0
   12c94:	beq	12c74 <__assert_fail@plt+0x1040>
   12c98:	ldrb	r0, [r8]
   12c9c:	cmp	r0, #0
   12ca0:	beq	12d18 <__assert_fail@plt+0x10e4>
   12ca4:	sub	lr, fp, #1024	; 0x400
   12ca8:	mov	r4, r1
   12cac:	mov	r1, #1024	; 0x400
   12cb0:	cmp	r0, #47	; 0x2f
   12cb4:	sub	r2, lr, #40	; 0x28
   12cb8:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12cbc:	add	r2, r2, #8
   12cc0:	str	r2, [sp, #12]
   12cc4:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12cc8:	add	r2, sp, #1184	; 0x4a0
   12ccc:	add	r2, r2, #8
   12cd0:	str	r2, [sp, #1184]	; 0x4a0
   12cd4:	str	r2, [sp, #16]
   12cd8:	add	r2, sp, #48	; 0x30
   12cdc:	str	r1, [sp, #1188]	; 0x4a4
   12ce0:	add	r5, r2, #8
   12ce4:	mov	r0, r5
   12ce8:	str	r5, [sp, #48]	; 0x30
   12cec:	str	r1, [sp, #52]	; 0x34
   12cf0:	str	r5, [sp, #8]
   12cf4:	bne	12d24 <__assert_fail@plt+0x10f0>
   12cf8:	mov	r1, r8
   12cfc:	mov	r2, #0
   12d00:	mov	r3, #1024	; 0x400
   12d04:	bl	11c28 <__mempcpy_chk@plt>
   12d08:	mov	r6, r0
   12d0c:	mov	r0, #47	; 0x2f
   12d10:	strb	r0, [r6], #1
   12d14:	b	12d44 <__assert_fail@plt+0x1110>
   12d18:	bl	11a60 <__errno_location@plt>
   12d1c:	mov	r1, #2
   12d20:	b	12c7c <__assert_fail@plt+0x1048>
   12d24:	mov	r1, #1024	; 0x400
   12d28:	bl	11a00 <getcwd@plt>
   12d2c:	cmp	r0, #0
   12d30:	beq	13240 <__assert_fail@plt+0x160c>
   12d34:	mov	r0, r5
   12d38:	mov	r1, #0
   12d3c:	bl	11904 <rawmemchr@plt>
   12d40:	mov	r6, r0
   12d44:	ldrb	r0, [r8]
   12d48:	cmp	r0, #0
   12d4c:	beq	13204 <__assert_fail@plt+0x15d0>
   12d50:	and	r1, r4, #4
   12d54:	add	r9, sp, #48	; 0x30
   12d58:	str	r7, [sp, #32]
   12d5c:	str	r1, [sp, #40]	; 0x28
   12d60:	mov	r1, #0
   12d64:	str	r1, [sp, #24]
   12d68:	mov	r1, #0
   12d6c:	str	r1, [sp, #36]	; 0x24
   12d70:	mov	r1, #0
   12d74:	str	r1, [sp, #20]
   12d78:	b	131ac <__assert_fail@plt+0x1578>
   12d7c:	uxtb	r0, r0
   12d80:	cmp	r0, #46	; 0x2e
   12d84:	ldrbeq	r0, [r8, #1]
   12d88:	cmpeq	r0, #46	; 0x2e
   12d8c:	bne	12dcc <__assert_fail@plt+0x1198>
   12d90:	add	r0, r5, #1
   12d94:	cmp	r6, r0
   12d98:	bls	12ec0 <__assert_fail@plt+0x128c>
   12d9c:	sub	r0, r6, #1
   12da0:	mov	r6, r0
   12da4:	cmp	r0, r5
   12da8:	bls	12ec0 <__assert_fail@plt+0x128c>
   12dac:	mov	r0, r6
   12db0:	ldrb	r1, [r0, #-1]!
   12db4:	cmp	r1, #47	; 0x2f
   12db8:	bne	12da0 <__assert_fail@plt+0x116c>
   12dbc:	b	12ec0 <__assert_fail@plt+0x128c>
   12dc0:	uxtb	r0, r0
   12dc4:	cmp	r0, #46	; 0x2e
   12dc8:	beq	12ec0 <__assert_fail@plt+0x128c>
   12dcc:	ldrb	r0, [r6, #-1]
   12dd0:	add	r4, r2, #2
   12dd4:	str	r2, [sp, #44]	; 0x2c
   12dd8:	cmp	r0, #47	; 0x2f
   12ddc:	movne	r0, #47	; 0x2f
   12de0:	strbne	r0, [r6], #1
   12de4:	ldr	r0, [sp, #52]	; 0x34
   12de8:	add	r0, r5, r0
   12dec:	sub	r0, r0, r6
   12df0:	cmp	r0, r4
   12df4:	bcs	12e2c <__assert_fail@plt+0x11f8>
   12df8:	mov	r0, r9
   12dfc:	bl	18968 <lchmod@@Base+0x2270>
   12e00:	cmp	r0, #0
   12e04:	beq	13304 <__assert_fail@plt+0x16d0>
   12e08:	sub	r0, r6, r5
   12e0c:	ldr	r5, [sp, #48]	; 0x30
   12e10:	ldr	r1, [sp, #52]	; 0x34
   12e14:	add	r6, r5, r0
   12e18:	add	r0, r5, r1
   12e1c:	sub	r0, r0, r6
   12e20:	cmp	r0, r4
   12e24:	bcc	12df8 <__assert_fail@plt+0x11c4>
   12e28:	ldr	r2, [sp, #44]	; 0x2c
   12e2c:	mov	r0, r6
   12e30:	mov	r1, r8
   12e34:	mvn	r3, #0
   12e38:	bl	11c28 <__mempcpy_chk@plt>
   12e3c:	mov	r6, r0
   12e40:	mov	r0, #0
   12e44:	strb	r0, [r6]
   12e48:	ldr	r0, [sp, #40]	; 0x28
   12e4c:	cmp	r0, #0
   12e50:	bne	12eb4 <__assert_fail@plt+0x1280>
   12e54:	ldr	r0, [sp, #1188]	; 0x4a4
   12e58:	ldr	r7, [sp, #1184]	; 0x4a0
   12e5c:	sub	r9, r0, #1
   12e60:	mov	r0, r5
   12e64:	mov	r1, r7
   12e68:	mov	r2, r9
   12e6c:	bl	11934 <readlink@plt>
   12e70:	cmp	r0, r9
   12e74:	blt	12e8c <__assert_fail@plt+0x1258>
   12e78:	add	r0, sp, #1184	; 0x4a0
   12e7c:	bl	188fc <lchmod@@Base+0x2204>
   12e80:	cmp	r0, #0
   12e84:	bne	12e54 <__assert_fail@plt+0x1220>
   12e88:	b	13304 <__assert_fail@plt+0x16d0>
   12e8c:	mov	r4, r0
   12e90:	cmp	r0, #0
   12e94:	add	r9, sp, #48	; 0x30
   12e98:	blt	12eb4 <__assert_fail@plt+0x1280>
   12e9c:	ldr	r0, [sp, #24]
   12ea0:	cmp	r0, #19
   12ea4:	bgt	12f38 <__assert_fail@plt+0x1304>
   12ea8:	add	r0, r0, #1
   12eac:	str	r0, [sp, #24]
   12eb0:	b	1309c <__assert_fail@plt+0x1468>
   12eb4:	ldr	r7, [sp, #32]
   12eb8:	cmp	r7, #2
   12ebc:	bne	12ed4 <__assert_fail@plt+0x12a0>
   12ec0:	mov	r8, sl
   12ec4:	ldrb	r0, [r8]
   12ec8:	cmp	r0, #0
   12ecc:	bne	131ac <__assert_fail@plt+0x1578>
   12ed0:	b	1320c <__assert_fail@plt+0x15d8>
   12ed4:	ldrb	r0, [sl]
   12ed8:	cmp	r0, #47	; 0x2f
   12edc:	bne	13004 <__assert_fail@plt+0x13d0>
   12ee0:	mov	r2, sl
   12ee4:	mov	r1, r2
   12ee8:	ldrb	r3, [r2, #1]!
   12eec:	cmp	r3, #47	; 0x2f
   12ef0:	beq	12ee4 <__assert_fail@plt+0x12b0>
   12ef4:	cmp	r3, #46	; 0x2e
   12ef8:	bne	12ffc <__assert_fail@plt+0x13c8>
   12efc:	add	r2, r1, #2
   12f00:	ldrb	r3, [r2]
   12f04:	cmp	r3, #47	; 0x2f
   12f08:	beq	12ee4 <__assert_fail@plt+0x12b0>
   12f0c:	cmp	r3, #0
   12f10:	beq	12f2c <__assert_fail@plt+0x12f8>
   12f14:	cmp	r3, #46	; 0x2e
   12f18:	bne	13004 <__assert_fail@plt+0x13d0>
   12f1c:	ldrb	r1, [r1, #3]
   12f20:	cmp	r1, #47	; 0x2f
   12f24:	cmpne	r1, #0
   12f28:	bne	13004 <__assert_fail@plt+0x13d0>
   12f2c:	mov	r0, #47	; 0x2f
   12f30:	strh	r0, [r6]
   12f34:	b	13018 <__assert_fail@plt+0x13e4>
   12f38:	ldrb	r0, [r8]
   12f3c:	cmp	r0, #0
   12f40:	beq	1309c <__assert_fail@plt+0x1468>
   12f44:	ldr	r9, [sp, #44]	; 0x2c
   12f48:	mov	r0, #0
   12f4c:	movw	r1, #44899	; 0xaf63
   12f50:	add	lr, sp, #1024	; 0x400
   12f54:	movt	r1, #1
   12f58:	strb	r0, [r6, -r9]
   12f5c:	ldrb	r0, [r5]
   12f60:	cmp	r0, #0
   12f64:	mov	r0, r5
   12f68:	moveq	r0, r1
   12f6c:	add	r1, lr, #56	; 0x38
   12f70:	bl	1a614 <lchmod@@Base+0x3f1c>
   12f74:	cmp	r0, #0
   12f78:	bne	13314 <__assert_fail@plt+0x16e0>
   12f7c:	rsb	r0, r9, #0
   12f80:	ldr	r9, [sp, #20]
   12f84:	ldrb	r1, [r8]
   12f88:	cmp	r9, #0
   12f8c:	strb	r1, [r6, r0]
   12f90:	bne	12fc8 <__assert_fail@plt+0x1394>
   12f94:	movw	r0, #26104	; 0x65f8
   12f98:	movw	r2, #25960	; 0x6568
   12f9c:	movw	r3, #26016	; 0x65a0
   12fa0:	mov	r1, #0
   12fa4:	movt	r0, #1
   12fa8:	movt	r2, #1
   12fac:	movt	r3, #1
   12fb0:	str	r0, [sp]
   12fb4:	mov	r0, #7
   12fb8:	bl	15a90 <__assert_fail@plt+0x3e5c>
   12fbc:	mov	r9, r0
   12fc0:	cmp	r0, #0
   12fc4:	beq	13304 <__assert_fail@plt+0x16d0>
   12fc8:	add	lr, sp, #1024	; 0x400
   12fcc:	mov	r0, r9
   12fd0:	mov	r1, r8
   12fd4:	add	r2, lr, #56	; 0x38
   12fd8:	bl	13594 <__assert_fail@plt+0x1960>
   12fdc:	cmp	r0, #0
   12fe0:	str	r9, [sp, #20]
   12fe4:	beq	13088 <__assert_fail@plt+0x1454>
   12fe8:	ldr	r7, [sp, #32]
   12fec:	cmp	r7, #2
   12ff0:	bne	13308 <__assert_fail@plt+0x16d4>
   12ff4:	mov	r8, sl
   12ff8:	b	13168 <__assert_fail@plt+0x1534>
   12ffc:	cmp	r3, #0
   13000:	beq	12f2c <__assert_fail@plt+0x12f8>
   13004:	ldr	r1, [sp, #40]	; 0x28
   13008:	cmp	r1, #0
   1300c:	beq	13038 <__assert_fail@plt+0x1404>
   13010:	cmp	r0, #0
   13014:	bne	12ec0 <__assert_fail@plt+0x128c>
   13018:	mvn	r0, #99	; 0x63
   1301c:	mov	r1, r5
   13020:	mov	r2, #0
   13024:	mov	r3, #512	; 0x200
   13028:	bl	11880 <faccessat@plt>
   1302c:	cmp	r0, #0
   13030:	bne	13048 <__assert_fail@plt+0x1414>
   13034:	b	12ec0 <__assert_fail@plt+0x128c>
   13038:	bl	11a60 <__errno_location@plt>
   1303c:	ldr	r0, [r0]
   13040:	cmp	r0, #22
   13044:	beq	12ec0 <__assert_fail@plt+0x128c>
   13048:	mov	r4, #1
   1304c:	cmp	r7, #1
   13050:	bne	1322c <__assert_fail@plt+0x15f8>
   13054:	bl	11a60 <__errno_location@plt>
   13058:	ldr	r0, [r0]
   1305c:	cmp	r0, #2
   13060:	bne	1322c <__assert_fail@plt+0x15f8>
   13064:	movw	r1, #46105	; 0xb419
   13068:	mov	r0, sl
   1306c:	movt	r1, #1
   13070:	bl	11c1c <strspn@plt>
   13074:	ldrb	r0, [sl, r0]
   13078:	mov	r8, sl
   1307c:	cmp	r0, #0
   13080:	beq	12ec4 <__assert_fail@plt+0x1290>
   13084:	b	1322c <__assert_fail@plt+0x15f8>
   13088:	add	lr, sp, #1024	; 0x400
   1308c:	mov	r0, r9
   13090:	mov	r1, r8
   13094:	add	r2, lr, #56	; 0x38
   13098:	bl	13518 <__assert_fail@plt+0x18e4>
   1309c:	mov	r0, #0
   130a0:	strb	r0, [r7, r4]
   130a4:	ldr	r0, [sp, #36]	; 0x24
   130a8:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   130ac:	tst	r0, #1
   130b0:	ldr	r0, [sp, #28]
   130b4:	subne	r0, sl, r8
   130b8:	str	r0, [sp, #28]
   130bc:	mov	r0, sl
   130c0:	bl	11a24 <strlen@plt>
   130c4:	adds	r9, r0, r4
   130c8:	str	r0, [sp, #44]	; 0x2c
   130cc:	bcs	13304 <__assert_fail@plt+0x16d0>
   130d0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   130d4:	cmp	r0, r9
   130d8:	bhi	13100 <__assert_fail@plt+0x14cc>
   130dc:	sub	lr, fp, #1024	; 0x400
   130e0:	sub	r0, lr, #40	; 0x28
   130e4:	bl	18968 <lchmod@@Base+0x2270>
   130e8:	cmp	r0, #0
   130ec:	beq	13304 <__assert_fail@plt+0x16d0>
   130f0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   130f4:	cmp	r0, r9
   130f8:	bls	130dc <__assert_fail@plt+0x14a8>
   130fc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   13100:	ldr	r0, [sp, #36]	; 0x24
   13104:	ldr	r1, [sp, #44]	; 0x2c
   13108:	tst	r0, #1
   1310c:	ldr	r0, [sp, #28]
   13110:	add	r2, r1, #1
   13114:	addne	sl, r8, r0
   13118:	add	r0, r8, r4
   1311c:	mov	r1, sl
   13120:	bl	11868 <memmove@plt>
   13124:	mov	r0, r8
   13128:	mov	r1, r7
   1312c:	mov	r2, r4
   13130:	bl	11898 <memcpy@plt>
   13134:	ldrb	r0, [r7]
   13138:	cmp	r0, #47	; 0x2f
   1313c:	bne	13170 <__assert_fail@plt+0x153c>
   13140:	mov	r0, r5
   13144:	mov	r1, r7
   13148:	mov	r2, #0
   1314c:	mvn	r3, #0
   13150:	bl	11c28 <__mempcpy_chk@plt>
   13154:	mov	r6, r0
   13158:	mov	r0, #47	; 0x2f
   1315c:	strb	r0, [r6], #1
   13160:	mov	r0, #1
   13164:	str	r0, [sp, #36]	; 0x24
   13168:	add	r9, sp, #48	; 0x30
   1316c:	b	12ec4 <__assert_fail@plt+0x1290>
   13170:	add	r0, r5, #1
   13174:	mov	r1, #1
   13178:	add	r9, sp, #48	; 0x30
   1317c:	cmp	r6, r0
   13180:	str	r1, [sp, #36]	; 0x24
   13184:	bls	12ec4 <__assert_fail@plt+0x1290>
   13188:	sub	r0, r6, #1
   1318c:	mov	r6, r0
   13190:	cmp	r0, r5
   13194:	bls	12ec4 <__assert_fail@plt+0x1290>
   13198:	mov	r0, r6
   1319c:	ldrb	r1, [r0, #-1]!
   131a0:	cmp	r1, #47	; 0x2f
   131a4:	bne	1318c <__assert_fail@plt+0x1558>
   131a8:	b	12ec4 <__assert_fail@plt+0x1290>
   131ac:	uxtb	r1, r0
   131b0:	cmp	r1, #47	; 0x2f
   131b4:	bne	131c4 <__assert_fail@plt+0x1590>
   131b8:	ldrb	r0, [r8, #1]!
   131bc:	cmp	r0, #47	; 0x2f
   131c0:	beq	131b8 <__assert_fail@plt+0x1584>
   131c4:	mov	r1, r0
   131c8:	mov	sl, r8
   131cc:	b	131d4 <__assert_fail@plt+0x15a0>
   131d0:	ldrb	r1, [sl, #1]!
   131d4:	uxtb	r1, r1
   131d8:	cmp	r1, #0
   131dc:	cmpne	r1, #47	; 0x2f
   131e0:	bne	131d0 <__assert_fail@plt+0x159c>
   131e4:	sub	r2, sl, r8
   131e8:	cmp	r2, #1
   131ec:	beq	12dc0 <__assert_fail@plt+0x118c>
   131f0:	cmp	r2, #2
   131f4:	beq	12d7c <__assert_fail@plt+0x1148>
   131f8:	cmp	r2, #0
   131fc:	bne	12dcc <__assert_fail@plt+0x1198>
   13200:	b	1320c <__assert_fail@plt+0x15d8>
   13204:	mov	r0, #0
   13208:	str	r0, [sp, #20]
   1320c:	add	r0, r5, #1
   13210:	cmp	r6, r0
   13214:	bls	13228 <__assert_fail@plt+0x15f4>
   13218:	mov	r0, r6
   1321c:	ldrb	r1, [r0, #-1]!
   13220:	cmp	r1, #47	; 0x2f
   13224:	moveq	r6, r0
   13228:	mov	r4, #0
   1322c:	ldr	r0, [sp, #20]
   13230:	cmp	r0, #0
   13234:	beq	13298 <__assert_fail@plt+0x1664>
   13238:	bl	15dbc <__assert_fail@plt+0x4188>
   1323c:	b	13298 <__assert_fail@plt+0x1664>
   13240:	bl	11a60 <__errno_location@plt>
   13244:	ldr	r5, [sp, #8]
   13248:	mov	r6, r0
   1324c:	add	r9, sp, #48	; 0x30
   13250:	ldr	r0, [r6]
   13254:	cmp	r0, #34	; 0x22
   13258:	bne	13288 <__assert_fail@plt+0x1654>
   1325c:	mov	r0, r9
   13260:	bl	188fc <lchmod@@Base+0x2204>
   13264:	cmp	r0, #0
   13268:	beq	13304 <__assert_fail@plt+0x16d0>
   1326c:	ldr	r5, [sp, #48]	; 0x30
   13270:	ldr	r1, [sp, #52]	; 0x34
   13274:	mov	r0, r5
   13278:	bl	11a00 <getcwd@plt>
   1327c:	cmp	r0, #0
   13280:	beq	13250 <__assert_fail@plt+0x161c>
   13284:	b	12d34 <__assert_fail@plt+0x1100>
   13288:	cmp	r0, #12
   1328c:	beq	13304 <__assert_fail@plt+0x16d0>
   13290:	mov	r4, #1
   13294:	mov	r6, r5
   13298:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   1329c:	ldr	r1, [sp, #12]
   132a0:	cmp	r0, r1
   132a4:	beq	132ac <__assert_fail@plt+0x1678>
   132a8:	bl	135e0 <__assert_fail@plt+0x19ac>
   132ac:	ldr	r0, [sp, #1184]	; 0x4a0
   132b0:	ldr	r1, [sp, #16]
   132b4:	cmp	r0, r1
   132b8:	beq	132c0 <__assert_fail@plt+0x168c>
   132bc:	bl	135e0 <__assert_fail@plt+0x19ac>
   132c0:	cmp	r4, #0
   132c4:	beq	132e4 <__assert_fail@plt+0x16b0>
   132c8:	ldr	r0, [sp, #48]	; 0x30
   132cc:	ldr	r1, [sp, #8]
   132d0:	mov	r4, #0
   132d4:	cmp	r0, r1
   132d8:	beq	12c84 <__assert_fail@plt+0x1050>
   132dc:	bl	135e0 <__assert_fail@plt+0x19ac>
   132e0:	b	12c84 <__assert_fail@plt+0x1050>
   132e4:	mov	r0, #0
   132e8:	strb	r0, [r6], #1
   132ec:	add	r0, sp, #48	; 0x30
   132f0:	sub	r1, r6, r5
   132f4:	bl	18898 <lchmod@@Base+0x21a0>
   132f8:	mov	r4, r0
   132fc:	cmp	r0, #0
   13300:	bne	12c84 <__assert_fail@plt+0x1050>
   13304:	bl	1941c <lchmod@@Base+0x2d24>
   13308:	bl	11a60 <__errno_location@plt>
   1330c:	mov	r1, #40	; 0x28
   13310:	str	r1, [r0]
   13314:	mov	r4, #1
   13318:	b	1322c <__assert_fail@plt+0x15f8>
   1331c:	movw	r1, #49656	; 0xc1f8
   13320:	movt	r1, #2
   13324:	str	r0, [r1]
   13328:	bx	lr
   1332c:	movw	r1, #49660	; 0xc1fc
   13330:	movt	r1, #2
   13334:	strb	r0, [r1]
   13338:	bx	lr
   1333c:	push	{r4, r5, r6, sl, fp, lr}
   13340:	add	fp, sp, #16
   13344:	sub	sp, sp, #8
   13348:	movw	r0, #49644	; 0xc1ec
   1334c:	movt	r0, #2
   13350:	ldr	r0, [r0]
   13354:	bl	19ce8 <lchmod@@Base+0x35f0>
   13358:	cmp	r0, #0
   1335c:	beq	13384 <__assert_fail@plt+0x1750>
   13360:	movw	r0, #49660	; 0xc1fc
   13364:	movt	r0, #2
   13368:	ldrb	r0, [r0]
   1336c:	cmp	r0, #0
   13370:	beq	133a4 <__assert_fail@plt+0x1770>
   13374:	bl	11a60 <__errno_location@plt>
   13378:	ldr	r0, [r0]
   1337c:	cmp	r0, #32
   13380:	bne	133a4 <__assert_fail@plt+0x1770>
   13384:	movw	r0, #49640	; 0xc1e8
   13388:	movt	r0, #2
   1338c:	ldr	r0, [r0]
   13390:	bl	19ce8 <lchmod@@Base+0x35f0>
   13394:	cmp	r0, #0
   13398:	subeq	sp, fp, #16
   1339c:	popeq	{r4, r5, r6, sl, fp, pc}
   133a0:	b	13414 <__assert_fail@plt+0x17e0>
   133a4:	movw	r1, #44879	; 0xaf4f
   133a8:	mov	r0, #0
   133ac:	mov	r2, #5
   133b0:	movt	r1, #1
   133b4:	bl	118c8 <dcgettext@plt>
   133b8:	mov	r4, r0
   133bc:	movw	r0, #49656	; 0xc1f8
   133c0:	movt	r0, #2
   133c4:	ldr	r6, [r0]
   133c8:	bl	11a60 <__errno_location@plt>
   133cc:	ldr	r5, [r0]
   133d0:	cmp	r6, #0
   133d4:	bne	133f0 <__assert_fail@plt+0x17bc>
   133d8:	movw	r2, #44895	; 0xaf5f
   133dc:	mov	r0, #0
   133e0:	mov	r1, r5
   133e4:	mov	r3, r4
   133e8:	movt	r2, #1
   133ec:	b	13410 <__assert_fail@plt+0x17dc>
   133f0:	mov	r0, r6
   133f4:	bl	18520 <lchmod@@Base+0x1e28>
   133f8:	movw	r2, #44891	; 0xaf5b
   133fc:	mov	r3, r0
   13400:	str	r4, [sp]
   13404:	mov	r0, #0
   13408:	mov	r1, r5
   1340c:	movt	r2, #1
   13410:	bl	11988 <error@plt>
   13414:	movw	r0, #49556	; 0xc194
   13418:	movt	r0, #2
   1341c:	ldr	r0, [r0]
   13420:	bl	1188c <_exit@plt>
   13424:	push	{fp, lr}
   13428:	mov	fp, sp
   1342c:	bl	13484 <__assert_fail@plt+0x1850>
   13430:	cmp	r0, #0
   13434:	popne	{fp, pc}
   13438:	bl	1941c <lchmod@@Base+0x2d24>
   1343c:	push	{r4, r5, r6, sl, fp, lr}
   13440:	add	fp, sp, #16
   13444:	mov	r5, r0
   13448:	mov	r4, r0
   1344c:	ldrb	r6, [r5], #-1
   13450:	bl	19c68 <lchmod@@Base+0x3570>
   13454:	sub	r2, r0, r4
   13458:	sub	r0, r6, #47	; 0x2f
   1345c:	clz	r0, r0
   13460:	lsr	r1, r0, #5
   13464:	mov	r0, r2
   13468:	cmp	r2, r1
   1346c:	popls	{r4, r5, r6, sl, fp, pc}
   13470:	ldrb	r3, [r5, r0]
   13474:	sub	r2, r0, #1
   13478:	cmp	r3, #47	; 0x2f
   1347c:	beq	13464 <__assert_fail@plt+0x1830>
   13480:	pop	{r4, r5, r6, sl, fp, pc}
   13484:	push	{r4, r5, r6, sl, fp, lr}
   13488:	add	fp, sp, #16
   1348c:	mov	r6, r0
   13490:	mov	r4, r0
   13494:	ldrb	r5, [r6], #-1
   13498:	bl	19c68 <lchmod@@Base+0x3570>
   1349c:	sub	r1, r0, r4
   134a0:	sub	r0, r5, #47	; 0x2f
   134a4:	clz	r0, r0
   134a8:	lsr	r0, r0, #5
   134ac:	mov	r5, r1
   134b0:	cmp	r1, r0
   134b4:	bls	134c8 <__assert_fail@plt+0x1894>
   134b8:	ldrb	r2, [r6, r5]
   134bc:	sub	r1, r5, #1
   134c0:	cmp	r2, #47	; 0x2f
   134c4:	beq	134ac <__assert_fail@plt+0x1878>
   134c8:	cmp	r5, #0
   134cc:	mov	r0, r5
   134d0:	addeq	r0, r0, #1
   134d4:	add	r0, r0, #1
   134d8:	bl	19be8 <lchmod@@Base+0x34f0>
   134dc:	mov	r6, r0
   134e0:	cmp	r0, #0
   134e4:	beq	13510 <__assert_fail@plt+0x18dc>
   134e8:	mov	r0, r6
   134ec:	mov	r1, r4
   134f0:	mov	r2, r5
   134f4:	bl	11898 <memcpy@plt>
   134f8:	cmp	r5, #0
   134fc:	moveq	r0, #46	; 0x2e
   13500:	moveq	r5, #1
   13504:	strbeq	r0, [r6]
   13508:	mov	r0, #0
   1350c:	strb	r0, [r6, r5]
   13510:	mov	r0, r6
   13514:	pop	{r4, r5, r6, sl, fp, pc}
   13518:	push	{r4, r5, r6, r7, fp, lr}
   1351c:	add	fp, sp, #16
   13520:	cmp	r0, #0
   13524:	popeq	{r4, r5, r6, r7, fp, pc}
   13528:	mov	r5, r0
   1352c:	mov	r0, #24
   13530:	mov	r6, r2
   13534:	mov	r7, r1
   13538:	bl	18fcc <lchmod@@Base+0x28d4>
   1353c:	mov	r4, r0
   13540:	mov	r0, r7
   13544:	bl	193dc <lchmod@@Base+0x2ce4>
   13548:	str	r0, [r4]
   1354c:	ldrd	r0, [r6, #96]	; 0x60
   13550:	str	r1, [r4, #12]
   13554:	str	r0, [r4, #8]
   13558:	ldrd	r0, [r6]
   1355c:	str	r1, [r4, #20]
   13560:	str	r0, [r4, #16]
   13564:	mov	r0, r5
   13568:	mov	r1, r4
   1356c:	bl	16418 <__assert_fail@plt+0x47e4>
   13570:	cmp	r0, #0
   13574:	beq	13590 <__assert_fail@plt+0x195c>
   13578:	cmp	r0, r4
   1357c:	beq	1358c <__assert_fail@plt+0x1958>
   13580:	mov	r0, r4
   13584:	pop	{r4, r5, r6, r7, fp, lr}
   13588:	b	165f8 <__assert_fail@plt+0x49c4>
   1358c:	pop	{r4, r5, r6, r7, fp, pc}
   13590:	bl	1941c <lchmod@@Base+0x2d24>
   13594:	cmp	r0, #0
   13598:	moveq	r0, #0
   1359c:	bxeq	lr
   135a0:	push	{r4, r5, fp, lr}
   135a4:	add	fp, sp, #8
   135a8:	sub	sp, sp, #24
   135ac:	str	r1, [sp]
   135b0:	mov	r1, sp
   135b4:	ldrd	r4, [r2, #96]	; 0x60
   135b8:	str	r5, [sp, #12]
   135bc:	str	r4, [sp, #8]
   135c0:	ldrd	r2, [r2]
   135c4:	str	r3, [sp, #20]
   135c8:	str	r2, [sp, #16]
   135cc:	bl	157f0 <__assert_fail@plt+0x3bbc>
   135d0:	cmp	r0, #0
   135d4:	movwne	r0, #1
   135d8:	sub	sp, fp, #8
   135dc:	pop	{r4, r5, fp, pc}
   135e0:	push	{r4, r5, r6, sl, fp, lr}
   135e4:	add	fp, sp, #16
   135e8:	mov	r4, r0
   135ec:	bl	11a60 <__errno_location@plt>
   135f0:	ldr	r6, [r0]
   135f4:	mov	r5, r0
   135f8:	mov	r0, r4
   135fc:	bl	11874 <free@plt>
   13600:	str	r6, [r5]
   13604:	pop	{r4, r5, r6, sl, fp, pc}
   13608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1360c:	add	fp, sp, #28
   13610:	sub	sp, sp, #12
   13614:	cmp	r1, #4096	; 0x1000
   13618:	bcs	13634 <__assert_fail@plt+0x1a00>
   1361c:	mov	r6, r0
   13620:	and	r0, r1, #516	; 0x204
   13624:	mov	r5, r1
   13628:	cmp	r0, #516	; 0x204
   1362c:	tstne	r5, #18
   13630:	bne	13650 <__assert_fail@plt+0x1a1c>
   13634:	bl	11a60 <__errno_location@plt>
   13638:	mov	r1, #22
   1363c:	str	r1, [r0]
   13640:	mov	r8, #0
   13644:	mov	r0, r8
   13648:	sub	sp, fp, #28
   1364c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13650:	mov	r0, #1
   13654:	mov	r1, #96	; 0x60
   13658:	mov	r9, r2
   1365c:	bl	19b94 <lchmod@@Base+0x349c>
   13660:	cmp	r0, #0
   13664:	beq	13640 <__assert_fail@plt+0x1a0c>
   13668:	mov	r8, r0
   1366c:	mvn	r0, #99	; 0x63
   13670:	tst	r5, #2
   13674:	mov	r1, r5
   13678:	str	r0, [r8, #32]
   1367c:	bic	r0, r5, #516	; 0x204
   13680:	str	r9, [r8, #44]	; 0x2c
   13684:	orrne	r1, r0, #4
   13688:	str	r1, [r8, #48]	; 0x30
   1368c:	ldr	r0, [r6]
   13690:	cmp	r0, #0
   13694:	beq	136c8 <__assert_fail@plt+0x1a94>
   13698:	add	r4, r6, #4
   1369c:	mov	r7, #0
   136a0:	bl	11a24 <strlen@plt>
   136a4:	cmp	r0, r7
   136a8:	movhi	r7, r0
   136ac:	ldr	r0, [r4], #4
   136b0:	cmp	r0, #0
   136b4:	bne	136a0 <__assert_fail@plt+0x1a6c>
   136b8:	add	r1, r7, #1
   136bc:	cmp	r1, #4096	; 0x1000
   136c0:	movls	r1, #4096	; 0x1000
   136c4:	b	136cc <__assert_fail@plt+0x1a98>
   136c8:	mov	r1, #4096	; 0x1000
   136cc:	mov	r0, r8
   136d0:	bl	13924 <__assert_fail@plt+0x1cf0>
   136d4:	cmp	r0, #0
   136d8:	beq	13918 <__assert_fail@plt+0x1ce4>
   136dc:	ldr	r0, [r6]
   136e0:	cmp	r0, #0
   136e4:	beq	13714 <__assert_fail@plt+0x1ae0>
   136e8:	movw	r1, #44707	; 0xaea3
   136ec:	mov	r0, r8
   136f0:	mov	r2, #0
   136f4:	movt	r1, #1
   136f8:	bl	13998 <__assert_fail@plt+0x1d64>
   136fc:	cmp	r0, #0
   13700:	beq	13910 <__assert_fail@plt+0x1cdc>
   13704:	mov	r4, r0
   13708:	mvn	r0, #0
   1370c:	str	r0, [r4, #48]	; 0x30
   13710:	b	13718 <__assert_fail@plt+0x1ae4>
   13714:	mov	r4, #0
   13718:	cmp	r9, #0
   1371c:	ldrbne	r0, [r8, #49]	; 0x31
   13720:	ubfxne	r0, r0, #2, #1
   13724:	ldr	r7, [r6]
   13728:	moveq	r0, #1
   1372c:	cmp	r7, #0
   13730:	beq	13850 <__assert_fail@plt+0x1c1c>
   13734:	eor	r0, r0, #1
   13738:	and	r1, r5, #2048	; 0x800
   1373c:	mov	sl, #0
   13740:	mov	r5, #0
   13744:	str	r0, [sp, #4]
   13748:	mov	r0, #0
   1374c:	str	r1, [sp, #8]
   13750:	str	r0, [sp]
   13754:	mov	r0, r7
   13758:	bl	11a24 <strlen@plt>
   1375c:	mov	r2, r0
   13760:	ldr	r0, [sp, #8]
   13764:	cmp	r0, #0
   13768:	bne	137a0 <__assert_fail@plt+0x1b6c>
   1376c:	cmp	r2, #3
   13770:	bcc	137a0 <__assert_fail@plt+0x1b6c>
   13774:	add	r0, r7, r2
   13778:	ldrb	r0, [r0, #-1]
   1377c:	cmp	r0, #47	; 0x2f
   13780:	bne	137a0 <__assert_fail@plt+0x1b6c>
   13784:	sub	r0, r7, #2
   13788:	ldrb	r1, [r0, r2]
   1378c:	cmp	r1, #47	; 0x2f
   13790:	bne	137a0 <__assert_fail@plt+0x1b6c>
   13794:	sub	r2, r2, #1
   13798:	cmp	r2, #1
   1379c:	bhi	13788 <__assert_fail@plt+0x1b54>
   137a0:	mov	r0, r8
   137a4:	mov	r1, r7
   137a8:	bl	13998 <__assert_fail@plt+0x1d64>
   137ac:	cmp	r0, #0
   137b0:	beq	13900 <__assert_fail@plt+0x1ccc>
   137b4:	mov	r1, #0
   137b8:	ldr	r2, [sp, #4]
   137bc:	str	r4, [r0, #4]
   137c0:	mov	r7, r0
   137c4:	str	r1, [r0, #48]	; 0x30
   137c8:	add	r0, r0, #168	; 0xa8
   137cc:	str	r0, [r7, #24]
   137d0:	clz	r0, sl
   137d4:	lsr	r0, r0, #5
   137d8:	orrs	r0, r2, r0
   137dc:	bne	137f0 <__assert_fail@plt+0x1bbc>
   137e0:	mov	r0, #2
   137e4:	strd	r0, [r7, #112]	; 0x70
   137e8:	mov	r0, #11
   137ec:	b	13804 <__assert_fail@plt+0x1bd0>
   137f0:	mov	r0, r8
   137f4:	mov	r1, r7
   137f8:	mov	r2, #0
   137fc:	bl	13a18 <__assert_fail@plt+0x1de4>
   13800:	mov	r1, #0
   13804:	cmp	r9, #0
   13808:	strh	r0, [r7, #56]	; 0x38
   1380c:	beq	1381c <__assert_fail@plt+0x1be8>
   13810:	str	sl, [r7, #8]
   13814:	mov	sl, r7
   13818:	b	13834 <__assert_fail@plt+0x1c00>
   1381c:	cmp	sl, #0
   13820:	str	r1, [r7, #8]
   13824:	beq	13848 <__assert_fail@plt+0x1c14>
   13828:	ldr	r0, [sp]
   1382c:	str	r7, [sp]
   13830:	str	r7, [r0, #8]
   13834:	ldr	r7, [r6, #4]!
   13838:	add	r5, r5, #1
   1383c:	cmp	r7, #0
   13840:	bne	13754 <__assert_fail@plt+0x1b20>
   13844:	b	13858 <__assert_fail@plt+0x1c24>
   13848:	str	r7, [sp]
   1384c:	b	13814 <__assert_fail@plt+0x1be0>
   13850:	mov	sl, #0
   13854:	b	1387c <__assert_fail@plt+0x1c48>
   13858:	cmp	r9, #0
   1385c:	beq	1387c <__assert_fail@plt+0x1c48>
   13860:	cmp	r5, #2
   13864:	bcc	1387c <__assert_fail@plt+0x1c48>
   13868:	mov	r0, r8
   1386c:	mov	r1, sl
   13870:	mov	r2, r5
   13874:	bl	13b4c <__assert_fail@plt+0x1f18>
   13878:	mov	sl, r0
   1387c:	movw	r1, #44707	; 0xaea3
   13880:	mov	r0, r8
   13884:	mov	r2, #0
   13888:	movt	r1, #1
   1388c:	bl	13998 <__assert_fail@plt+0x1d64>
   13890:	cmp	r0, #0
   13894:	str	r0, [r8]
   13898:	beq	13900 <__assert_fail@plt+0x1ccc>
   1389c:	mov	r1, #9
   138a0:	strh	r1, [r0, #56]	; 0x38
   138a4:	mov	r1, #1
   138a8:	str	sl, [r0, #8]
   138ac:	str	r1, [r0, #48]	; 0x30
   138b0:	mov	r0, r8
   138b4:	bl	13c44 <__assert_fail@plt+0x2010>
   138b8:	cmp	r0, #0
   138bc:	beq	13900 <__assert_fail@plt+0x1ccc>
   138c0:	ldrh	r0, [r8, #48]	; 0x30
   138c4:	tst	r0, #516	; 0x204
   138c8:	bne	138f0 <__assert_fail@plt+0x1cbc>
   138cc:	movw	r1, #44899	; 0xaf63
   138d0:	mov	r0, r8
   138d4:	movt	r1, #1
   138d8:	bl	13cd0 <__assert_fail@plt+0x209c>
   138dc:	str	r0, [r8, #28]
   138e0:	cmn	r0, #1
   138e4:	ldrle	r0, [r8, #48]	; 0x30
   138e8:	orrle	r0, r0, #4
   138ec:	strle	r0, [r8, #48]	; 0x30
   138f0:	add	r0, r8, #60	; 0x3c
   138f4:	mvn	r1, #0
   138f8:	bl	16618 <__assert_fail@plt+0x49e4>
   138fc:	b	13644 <__assert_fail@plt+0x1a10>
   13900:	mov	r0, sl
   13904:	bl	13d00 <__assert_fail@plt+0x20cc>
   13908:	mov	r0, r4
   1390c:	bl	135e0 <__assert_fail@plt+0x19ac>
   13910:	ldr	r0, [r8, #24]
   13914:	bl	135e0 <__assert_fail@plt+0x19ac>
   13918:	mov	r0, r8
   1391c:	bl	135e0 <__assert_fail@plt+0x19ac>
   13920:	b	13640 <__assert_fail@plt+0x1a0c>
   13924:	push	{r4, r5, fp, lr}
   13928:	add	fp, sp, #8
   1392c:	mov	r4, r0
   13930:	ldr	r0, [r0, #36]	; 0x24
   13934:	add	r1, r1, #256	; 0x100
   13938:	adds	r1, r1, r0
   1393c:	bcc	13960 <__assert_fail@plt+0x1d2c>
   13940:	ldr	r0, [r4, #24]
   13944:	bl	135e0 <__assert_fail@plt+0x19ac>
   13948:	mov	r5, #0
   1394c:	str	r5, [r4, #24]
   13950:	bl	11a60 <__errno_location@plt>
   13954:	mov	r1, #36	; 0x24
   13958:	str	r1, [r0]
   1395c:	b	13990 <__assert_fail@plt+0x1d5c>
   13960:	str	r1, [r4, #36]	; 0x24
   13964:	ldr	r0, [r4, #24]
   13968:	bl	19c18 <lchmod@@Base+0x3520>
   1396c:	cmp	r0, #0
   13970:	beq	13980 <__assert_fail@plt+0x1d4c>
   13974:	mov	r5, #1
   13978:	str	r0, [r4, #24]
   1397c:	b	13990 <__assert_fail@plt+0x1d5c>
   13980:	ldr	r0, [r4, #24]
   13984:	bl	135e0 <__assert_fail@plt+0x19ac>
   13988:	mov	r5, #0
   1398c:	str	r5, [r4, #24]
   13990:	mov	r0, r5
   13994:	pop	{r4, r5, fp, pc}
   13998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1399c:	add	fp, sp, #24
   139a0:	mov	r5, r0
   139a4:	add	r0, r2, #176	; 0xb0
   139a8:	mov	r6, r2
   139ac:	mov	r8, r1
   139b0:	bic	r0, r0, #7
   139b4:	bl	19be8 <lchmod@@Base+0x34f0>
   139b8:	cmp	r0, #0
   139bc:	beq	13a0c <__assert_fail@plt+0x1dd8>
   139c0:	add	r7, r0, #168	; 0xa8
   139c4:	mov	r4, r0
   139c8:	mov	r1, r8
   139cc:	mov	r2, r6
   139d0:	mov	r0, r7
   139d4:	bl	11898 <memcpy@plt>
   139d8:	mov	r0, #0
   139dc:	mov	r2, #196608	; 0x30000
   139e0:	strb	r0, [r7, r6]
   139e4:	str	r6, [r4, #52]	; 0x34
   139e8:	str	r5, [r4, #44]	; 0x2c
   139ec:	ldr	r1, [r5, #24]
   139f0:	str	r2, [r4, #58]	; 0x3a
   139f4:	str	r0, [r4, #12]
   139f8:	str	r0, [r4, #16]
   139fc:	str	r0, [r4, #20]
   13a00:	str	r1, [r4, #28]
   13a04:	str	r0, [r4, #32]
   13a08:	b	13a10 <__assert_fail@plt+0x1ddc>
   13a0c:	mov	r4, #0
   13a10:	mov	r0, r4
   13a14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a18:	push	{r4, r5, r6, sl, fp, lr}
   13a1c:	add	fp, sp, #16
   13a20:	mov	r4, r1
   13a24:	ldr	r1, [r0, #48]	; 0x30
   13a28:	ldr	r3, [r4, #48]	; 0x30
   13a2c:	add	r5, r4, #64	; 0x40
   13a30:	cmp	r3, #0
   13a34:	andeq	r3, r1, #1
   13a38:	orreq	r2, r3, r2
   13a3c:	cmp	r2, #0
   13a40:	andseq	r1, r1, #2
   13a44:	beq	13a94 <__assert_fail@plt+0x1e60>
   13a48:	ldr	r0, [r4, #24]
   13a4c:	mov	r1, r5
   13a50:	bl	1a614 <lchmod@@Base+0x3f1c>
   13a54:	cmp	r0, #0
   13a58:	beq	13ad8 <__assert_fail@plt+0x1ea4>
   13a5c:	bl	11a60 <__errno_location@plt>
   13a60:	mov	r6, r0
   13a64:	ldr	r0, [r0]
   13a68:	cmp	r0, #2
   13a6c:	bne	13abc <__assert_fail@plt+0x1e88>
   13a70:	ldr	r0, [r4, #24]
   13a74:	mov	r1, r5
   13a78:	bl	1a634 <lchmod@@Base+0x3f3c>
   13a7c:	cmp	r0, #0
   13a80:	bne	13ab8 <__assert_fail@plt+0x1e84>
   13a84:	mov	r0, #0
   13a88:	str	r0, [r6]
   13a8c:	mov	r0, #13
   13a90:	pop	{r4, r5, r6, sl, fp, pc}
   13a94:	ldr	r1, [r4, #24]
   13a98:	ldr	r0, [r0, #32]
   13a9c:	mov	r2, r5
   13aa0:	mov	r3, #256	; 0x100
   13aa4:	bl	1a644 <lchmod@@Base+0x3f4c>
   13aa8:	cmp	r0, #0
   13aac:	beq	13ad8 <__assert_fail@plt+0x1ea4>
   13ab0:	bl	11a60 <__errno_location@plt>
   13ab4:	mov	r6, r0
   13ab8:	ldr	r0, [r6]
   13abc:	str	r0, [r4, #32]
   13ac0:	mov	r0, r5
   13ac4:	mov	r1, #0
   13ac8:	mov	r2, #104	; 0x68
   13acc:	bl	11a84 <memset@plt>
   13ad0:	mov	r0, #10
   13ad4:	pop	{r4, r5, r6, sl, fp, pc}
   13ad8:	ldr	r0, [r4, #80]	; 0x50
   13adc:	and	r0, r0, #61440	; 0xf000
   13ae0:	cmp	r0, #40960	; 0xa000
   13ae4:	moveq	r0, #12
   13ae8:	popeq	{r4, r5, r6, sl, fp, pc}
   13aec:	cmp	r0, #32768	; 0x8000
   13af0:	moveq	r0, #8
   13af4:	popeq	{r4, r5, r6, sl, fp, pc}
   13af8:	cmp	r0, #16384	; 0x4000
   13afc:	bne	13b30 <__assert_fail@plt+0x1efc>
   13b00:	ldrb	r1, [r4, #168]	; 0xa8
   13b04:	mov	r0, #1
   13b08:	cmp	r1, #46	; 0x2e
   13b0c:	popne	{r4, r5, r6, sl, fp, pc}
   13b10:	ldrb	r1, [r4, #169]	; 0xa9
   13b14:	cmp	r1, #0
   13b18:	beq	13b38 <__assert_fail@plt+0x1f04>
   13b1c:	cmp	r1, #46	; 0x2e
   13b20:	ldrbeq	r1, [r4, #170]	; 0xaa
   13b24:	cmpeq	r1, #0
   13b28:	beq	13b38 <__assert_fail@plt+0x1f04>
   13b2c:	pop	{r4, r5, r6, sl, fp, pc}
   13b30:	mov	r0, #3
   13b34:	pop	{r4, r5, r6, sl, fp, pc}
   13b38:	ldr	r1, [r4, #48]	; 0x30
   13b3c:	mov	r0, #5
   13b40:	cmp	r1, #0
   13b44:	movweq	r0, #1
   13b48:	pop	{r4, r5, r6, sl, fp, pc}
   13b4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b50:	add	fp, sp, #24
   13b54:	ldrd	r8, [r0, #40]	; 0x28
   13b58:	mov	r5, r2
   13b5c:	mov	r4, r1
   13b60:	mov	r6, r0
   13b64:	cmp	r8, r2
   13b68:	bcs	13ba0 <__assert_fail@plt+0x1f6c>
   13b6c:	add	r1, r5, #40	; 0x28
   13b70:	cmn	r1, #-1073741823	; 0xc0000001
   13b74:	str	r1, [r6, #40]	; 0x28
   13b78:	bhi	13c28 <__assert_fail@plt+0x1ff4>
   13b7c:	add	r7, r6, #8
   13b80:	lsl	r1, r1, #2
   13b84:	ldr	r0, [r7]
   13b88:	bl	19c18 <lchmod@@Base+0x3520>
   13b8c:	cmp	r0, #0
   13b90:	beq	13c28 <__assert_fail@plt+0x1ff4>
   13b94:	mov	r6, r7
   13b98:	str	r0, [r7]
   13b9c:	b	13ba4 <__assert_fail@plt+0x1f70>
   13ba0:	ldr	r0, [r6, #8]!
   13ba4:	cmp	r4, #0
   13ba8:	beq	13bc0 <__assert_fail@plt+0x1f8c>
   13bac:	str	r4, [r0], #4
   13bb0:	ldr	r4, [r4, #8]
   13bb4:	cmp	r4, #0
   13bb8:	bne	13bac <__assert_fail@plt+0x1f78>
   13bbc:	ldr	r0, [r6]
   13bc0:	mov	r1, r5
   13bc4:	mov	r2, #4
   13bc8:	mov	r3, r9
   13bcc:	bl	11b50 <qsort@plt>
   13bd0:	ldr	r7, [r6]
   13bd4:	subs	r0, r5, #1
   13bd8:	ldr	r4, [r7]
   13bdc:	mov	r1, r4
   13be0:	beq	13c1c <__assert_fail@plt+0x1fe8>
   13be4:	mov	r1, r7
   13be8:	cmp	r5, #2
   13bec:	ldr	r2, [r1, #4]!
   13bf0:	str	r2, [r4, #8]
   13bf4:	beq	13c18 <__assert_fail@plt+0x1fe4>
   13bf8:	rsb	r3, r5, #2
   13bfc:	mov	r2, r1
   13c00:	ldr	r6, [r2, #4]!
   13c04:	ldr	r1, [r1]
   13c08:	adds	r3, r3, #1
   13c0c:	str	r6, [r1, #8]
   13c10:	mov	r1, r2
   13c14:	bne	13c00 <__assert_fail@plt+0x1fcc>
   13c18:	ldr	r1, [r7, r0, lsl #2]
   13c1c:	mov	r0, #0
   13c20:	str	r0, [r1, #8]
   13c24:	b	13c3c <__assert_fail@plt+0x2008>
   13c28:	ldr	r0, [r6, #8]
   13c2c:	bl	135e0 <__assert_fail@plt+0x19ac>
   13c30:	mov	r0, #0
   13c34:	str	r0, [r6, #40]	; 0x28
   13c38:	str	r0, [r6, #8]
   13c3c:	mov	r0, r4
   13c40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c44:	push	{r4, r5, fp, lr}
   13c48:	add	fp, sp, #8
   13c4c:	sub	sp, sp, #8
   13c50:	mov	r4, r0
   13c54:	ldrh	r0, [r0, #48]	; 0x30
   13c58:	movw	r1, #258	; 0x102
   13c5c:	tst	r0, r1
   13c60:	beq	13ca0 <__assert_fail@plt+0x206c>
   13c64:	movw	r0, #13792	; 0x35e0
   13c68:	movw	r2, #21524	; 0x5414
   13c6c:	movw	r3, #21556	; 0x5434
   13c70:	mov	r1, #0
   13c74:	mov	r5, #0
   13c78:	movt	r0, #1
   13c7c:	movt	r2, #1
   13c80:	movt	r3, #1
   13c84:	str	r0, [sp]
   13c88:	mov	r0, #31
   13c8c:	bl	15a90 <__assert_fail@plt+0x3e5c>
   13c90:	cmp	r0, #0
   13c94:	str	r0, [r4, #56]	; 0x38
   13c98:	movne	r5, #1
   13c9c:	b	13cc4 <__assert_fail@plt+0x2090>
   13ca0:	mov	r0, #32
   13ca4:	bl	19be8 <lchmod@@Base+0x34f0>
   13ca8:	cmp	r0, #0
   13cac:	str	r0, [r4, #56]	; 0x38
   13cb0:	beq	13cc0 <__assert_fail@plt+0x208c>
   13cb4:	bl	19d68 <lchmod@@Base+0x3670>
   13cb8:	mov	r5, #1
   13cbc:	b	13cc4 <__assert_fail@plt+0x2090>
   13cc0:	mov	r5, #0
   13cc4:	mov	r0, r5
   13cc8:	sub	sp, fp, #8
   13ccc:	pop	{r4, r5, fp, pc}
   13cd0:	ldr	r3, [r0, #48]	; 0x30
   13cd4:	mov	r2, #32768	; 0x8000
   13cd8:	and	r2, r2, r3, lsl #11
   13cdc:	tst	r3, #512	; 0x200
   13ce0:	orr	r2, r2, #18688	; 0x4900
   13ce4:	orr	r2, r2, #524288	; 0x80000
   13ce8:	bne	13cf8 <__assert_fail@plt+0x20c4>
   13cec:	mov	r0, r1
   13cf0:	mov	r1, r2
   13cf4:	b	1a0c8 <lchmod@@Base+0x39d0>
   13cf8:	ldr	r0, [r0, #32]
   13cfc:	b	16cbc <lchmod@@Base+0x5c4>
   13d00:	push	{r4, r6, r7, sl, fp, lr}
   13d04:	add	fp, sp, #16
   13d08:	cmp	r0, #0
   13d0c:	popeq	{r4, r6, r7, sl, fp, pc}
   13d10:	mov	r4, r0
   13d14:	ldrd	r6, [r4, #8]
   13d18:	cmp	r7, #0
   13d1c:	beq	13d28 <__assert_fail@plt+0x20f4>
   13d20:	mov	r0, r7
   13d24:	bl	11c10 <closedir@plt>
   13d28:	mov	r0, r4
   13d2c:	bl	135e0 <__assert_fail@plt+0x19ac>
   13d30:	cmp	r6, #0
   13d34:	mov	r4, r6
   13d38:	bne	13d14 <__assert_fail@plt+0x20e0>
   13d3c:	pop	{r4, r6, r7, sl, fp, pc}
   13d40:	push	{r4, r5, fp, lr}
   13d44:	add	fp, sp, #8
   13d48:	mov	r4, r0
   13d4c:	ldr	r0, [r0]
   13d50:	cmp	r0, #0
   13d54:	beq	13d94 <__assert_fail@plt+0x2160>
   13d58:	ldr	r1, [r0, #48]	; 0x30
   13d5c:	cmp	r1, #0
   13d60:	blt	13d88 <__assert_fail@plt+0x2154>
   13d64:	ldr	r5, [r0, #8]
   13d68:	cmp	r5, #0
   13d6c:	ldreq	r5, [r0, #4]
   13d70:	bl	135e0 <__assert_fail@plt+0x19ac>
   13d74:	ldr	r0, [r5, #48]	; 0x30
   13d78:	cmn	r0, #1
   13d7c:	mov	r0, r5
   13d80:	bgt	13d64 <__assert_fail@plt+0x2130>
   13d84:	b	13d8c <__assert_fail@plt+0x2158>
   13d88:	mov	r5, r0
   13d8c:	mov	r0, r5
   13d90:	bl	135e0 <__assert_fail@plt+0x19ac>
   13d94:	ldr	r0, [r4, #4]
   13d98:	cmp	r0, #0
   13d9c:	blne	13d00 <__assert_fail@plt+0x20cc>
   13da0:	ldr	r0, [r4, #8]
   13da4:	bl	135e0 <__assert_fail@plt+0x19ac>
   13da8:	ldr	r0, [r4, #24]
   13dac:	bl	135e0 <__assert_fail@plt+0x19ac>
   13db0:	ldr	r0, [r4, #48]	; 0x30
   13db4:	tst	r0, #512	; 0x200
   13db8:	bne	13de4 <__assert_fail@plt+0x21b0>
   13dbc:	mov	r5, #0
   13dc0:	tst	r0, #4
   13dc4:	bne	13e20 <__assert_fail@plt+0x21ec>
   13dc8:	ldr	r0, [r4, #28]
   13dcc:	bl	11b44 <fchdir@plt>
   13dd0:	cmp	r0, #0
   13dd4:	beq	13dfc <__assert_fail@plt+0x21c8>
   13dd8:	bl	11a60 <__errno_location@plt>
   13ddc:	ldr	r5, [r0]
   13de0:	b	13e00 <__assert_fail@plt+0x21cc>
   13de4:	ldr	r0, [r4, #32]
   13de8:	mov	r5, #0
   13dec:	cmp	r0, #0
   13df0:	blt	13e20 <__assert_fail@plt+0x21ec>
   13df4:	bl	11be0 <close@plt>
   13df8:	b	13e10 <__assert_fail@plt+0x21dc>
   13dfc:	mov	r5, #0
   13e00:	ldr	r0, [r4, #28]
   13e04:	bl	11be0 <close@plt>
   13e08:	cmp	r5, #0
   13e0c:	bne	13e20 <__assert_fail@plt+0x21ec>
   13e10:	cmp	r0, #0
   13e14:	beq	13e20 <__assert_fail@plt+0x21ec>
   13e18:	bl	11a60 <__errno_location@plt>
   13e1c:	ldr	r5, [r0]
   13e20:	add	r0, r4, #60	; 0x3c
   13e24:	bl	13e64 <__assert_fail@plt+0x2230>
   13e28:	ldr	r0, [r4, #52]	; 0x34
   13e2c:	cmp	r0, #0
   13e30:	beq	13e38 <__assert_fail@plt+0x2204>
   13e34:	bl	15dbc <__assert_fail@plt+0x4188>
   13e38:	mov	r0, r4
   13e3c:	bl	13e98 <__assert_fail@plt+0x2264>
   13e40:	mov	r0, r4
   13e44:	bl	135e0 <__assert_fail@plt+0x19ac>
   13e48:	cmp	r5, #0
   13e4c:	moveq	r0, #0
   13e50:	popeq	{r4, r5, fp, pc}
   13e54:	bl	11a60 <__errno_location@plt>
   13e58:	str	r5, [r0]
   13e5c:	mvn	r0, #0
   13e60:	pop	{r4, r5, fp, pc}
   13e64:	push	{r4, sl, fp, lr}
   13e68:	add	fp, sp, #8
   13e6c:	mov	r4, r0
   13e70:	bl	1664c <__assert_fail@plt+0x4a18>
   13e74:	cmp	r0, #0
   13e78:	popne	{r4, sl, fp, pc}
   13e7c:	mov	r0, r4
   13e80:	bl	166a0 <__assert_fail@plt+0x4a6c>
   13e84:	cmp	r0, #0
   13e88:	blt	13e90 <__assert_fail@plt+0x225c>
   13e8c:	bl	11be0 <close@plt>
   13e90:	mov	r0, r4
   13e94:	b	13e70 <__assert_fail@plt+0x223c>
   13e98:	ldrh	r1, [r0, #48]	; 0x30
   13e9c:	movw	r2, #258	; 0x102
   13ea0:	tst	r1, r2
   13ea4:	beq	13eb8 <__assert_fail@plt+0x2284>
   13ea8:	ldr	r0, [r0, #56]	; 0x38
   13eac:	cmp	r0, #0
   13eb0:	bxeq	lr
   13eb4:	b	15dbc <__assert_fail@plt+0x4188>
   13eb8:	ldr	r0, [r0, #56]	; 0x38
   13ebc:	b	135e0 <__assert_fail@plt+0x19ac>
   13ec0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ec4:	add	fp, sp, #24
   13ec8:	ldr	r6, [r0]
   13ecc:	mov	r5, #0
   13ed0:	cmp	r6, #0
   13ed4:	beq	144c8 <__assert_fail@plt+0x2894>
   13ed8:	ldr	r1, [r0, #48]	; 0x30
   13edc:	mov	r4, r0
   13ee0:	tst	r1, #8192	; 0x2000
   13ee4:	bne	144c8 <__assert_fail@plt+0x2894>
   13ee8:	ldrh	r0, [r6, #60]	; 0x3c
   13eec:	mov	r2, #3
   13ef0:	strh	r2, [r6, #60]	; 0x3c
   13ef4:	cmp	r0, #1
   13ef8:	beq	13f48 <__assert_fail@plt+0x2314>
   13efc:	mov	r7, r6
   13f00:	cmp	r0, #2
   13f04:	bne	13f60 <__assert_fail@plt+0x232c>
   13f08:	ldrh	r2, [r7, #56]!	; 0x38
   13f0c:	movw	r3, #65534	; 0xfffe
   13f10:	and	r3, r2, r3
   13f14:	cmp	r3, #12
   13f18:	bne	13f64 <__assert_fail@plt+0x2330>
   13f1c:	mov	r0, r4
   13f20:	mov	r1, r6
   13f24:	mov	r2, #1
   13f28:	bl	13a18 <__assert_fail@plt+0x1de4>
   13f2c:	strh	r0, [r6, #56]	; 0x38
   13f30:	cmp	r0, #1
   13f34:	ldrbeq	r0, [r4, #48]	; 0x30
   13f38:	tsteq	r0, #4
   13f3c:	beq	14130 <__assert_fail@plt+0x24fc>
   13f40:	mov	r5, r6
   13f44:	b	14258 <__assert_fail@plt+0x2624>
   13f48:	mov	r0, r4
   13f4c:	mov	r1, r6
   13f50:	mov	r2, #0
   13f54:	bl	13a18 <__assert_fail@plt+0x1de4>
   13f58:	strh	r0, [r6, #56]	; 0x38
   13f5c:	b	13fb4 <__assert_fail@plt+0x2380>
   13f60:	ldrh	r2, [r7, #56]!	; 0x38
   13f64:	cmp	r2, #1
   13f68:	bne	13fbc <__assert_fail@plt+0x2388>
   13f6c:	cmp	r0, #4
   13f70:	bne	14028 <__assert_fail@plt+0x23f4>
   13f74:	ldrb	r0, [r6, #58]	; 0x3a
   13f78:	tst	r0, #2
   13f7c:	beq	13f88 <__assert_fail@plt+0x2354>
   13f80:	ldr	r0, [r6, #36]	; 0x24
   13f84:	bl	11be0 <close@plt>
   13f88:	ldr	r0, [r4, #4]
   13f8c:	cmp	r0, #0
   13f90:	beq	13fa0 <__assert_fail@plt+0x236c>
   13f94:	bl	13d00 <__assert_fail@plt+0x20cc>
   13f98:	mov	r0, #0
   13f9c:	str	r0, [r4, #4]
   13fa0:	mov	r0, #6
   13fa4:	strh	r0, [r6, #56]	; 0x38
   13fa8:	mov	r0, r4
   13fac:	mov	r1, r6
   13fb0:	bl	144d4 <__assert_fail@plt+0x28a0>
   13fb4:	mov	r5, r6
   13fb8:	b	144c8 <__assert_fail@plt+0x2894>
   13fbc:	ldr	r5, [r6, #8]
   13fc0:	cmp	r5, #0
   13fc4:	beq	140c0 <__assert_fail@plt+0x248c>
   13fc8:	mov	r0, r6
   13fcc:	str	r5, [r4]
   13fd0:	bl	135e0 <__assert_fail@plt+0x19ac>
   13fd4:	ldr	r0, [r5, #48]	; 0x30
   13fd8:	cmp	r0, #0
   13fdc:	beq	1410c <__assert_fail@plt+0x24d8>
   13fe0:	ldrh	r0, [r5, #60]	; 0x3c
   13fe4:	mov	r6, r5
   13fe8:	cmp	r0, #4
   13fec:	beq	13fbc <__assert_fail@plt+0x2388>
   13ff0:	cmp	r0, #2
   13ff4:	bne	1421c <__assert_fail@plt+0x25e8>
   13ff8:	mov	r0, r4
   13ffc:	mov	r1, r5
   14000:	mov	r2, #1
   14004:	bl	13a18 <__assert_fail@plt+0x1de4>
   14008:	strh	r0, [r5, #56]	; 0x38
   1400c:	cmp	r0, #1
   14010:	ldrbeq	r0, [r4, #48]	; 0x30
   14014:	tsteq	r0, #4
   14018:	beq	1442c <__assert_fail@plt+0x27f8>
   1401c:	mov	r0, #3
   14020:	strh	r0, [r5, #60]	; 0x3c
   14024:	b	1421c <__assert_fail@plt+0x25e8>
   14028:	tst	r1, #64	; 0x40
   1402c:	beq	14050 <__assert_fail@plt+0x241c>
   14030:	ldr	r0, [r4, #16]
   14034:	ldr	r3, [r4, #20]
   14038:	ldr	r2, [r6, #64]	; 0x40
   1403c:	ldr	r5, [r6, #68]	; 0x44
   14040:	eor	r3, r5, r3
   14044:	eor	r0, r2, r0
   14048:	orrs	r0, r0, r3
   1404c:	bne	13f74 <__assert_fail@plt+0x2340>
   14050:	ldr	r0, [r4, #4]
   14054:	cmp	r0, #0
   14058:	beq	141f8 <__assert_fail@plt+0x25c4>
   1405c:	tst	r1, #4096	; 0x1000
   14060:	bne	141e4 <__assert_fail@plt+0x25b0>
   14064:	ldr	r3, [r6, #24]
   14068:	mov	r0, r4
   1406c:	mov	r1, r6
   14070:	mvn	r2, #0
   14074:	bl	145a0 <__assert_fail@plt+0x296c>
   14078:	cmp	r0, #0
   1407c:	beq	14210 <__assert_fail@plt+0x25dc>
   14080:	bl	11a60 <__errno_location@plt>
   14084:	ldr	r0, [r0]
   14088:	str	r0, [r6, #32]
   1408c:	ldrh	r0, [r6, #58]	; 0x3a
   14090:	orr	r0, r0, #1
   14094:	strh	r0, [r6, #58]	; 0x3a
   14098:	ldr	r0, [r4, #4]
   1409c:	cmp	r0, #0
   140a0:	beq	14210 <__assert_fail@plt+0x25dc>
   140a4:	ldmib	r0, {r1, r2}
   140a8:	ldr	r1, [r1, #24]
   140ac:	cmp	r2, #0
   140b0:	str	r1, [r0, #24]
   140b4:	mov	r0, r2
   140b8:	bne	140a4 <__assert_fail@plt+0x2470>
   140bc:	b	14210 <__assert_fail@plt+0x25dc>
   140c0:	ldr	r5, [r6, #4]
   140c4:	ldr	r0, [r5, #12]
   140c8:	cmp	r0, #0
   140cc:	beq	14314 <__assert_fail@plt+0x26e0>
   140d0:	str	r5, [r4]
   140d4:	ldr	r1, [r5, #40]	; 0x28
   140d8:	ldr	r0, [r4, #24]
   140dc:	mov	r5, #0
   140e0:	strb	r5, [r0, r1]
   140e4:	mov	r0, r4
   140e8:	mov	r1, #3
   140ec:	bl	14778 <__assert_fail@plt+0x2b44>
   140f0:	cmp	r0, #0
   140f4:	beq	14304 <__assert_fail@plt+0x26d0>
   140f8:	mov	r7, r0
   140fc:	mov	r0, r6
   14100:	bl	135e0 <__assert_fail@plt+0x19ac>
   14104:	mov	r5, r7
   14108:	b	1421c <__assert_fail@plt+0x25e8>
   1410c:	mov	r0, r4
   14110:	bl	1510c <__assert_fail@plt+0x34d8>
   14114:	cmp	r0, #0
   14118:	beq	1415c <__assert_fail@plt+0x2528>
   1411c:	ldr	r0, [r4, #48]	; 0x30
   14120:	mov	r5, #0
   14124:	orr	r0, r0, #8192	; 0x2000
   14128:	str	r0, [r4, #48]	; 0x30
   1412c:	b	144c8 <__assert_fail@plt+0x2894>
   14130:	movw	r1, #44899	; 0xaf63
   14134:	mov	r0, r4
   14138:	movt	r1, #1
   1413c:	bl	13cd0 <__assert_fail@plt+0x209c>
   14140:	cmn	r0, #1
   14144:	str	r0, [r6, #36]	; 0x24
   14148:	ble	143a0 <__assert_fail@plt+0x276c>
   1414c:	ldrh	r0, [r6, #58]	; 0x3a
   14150:	orr	r0, r0, #2
   14154:	strh	r0, [r6, #58]	; 0x3a
   14158:	b	13f40 <__assert_fail@plt+0x230c>
   1415c:	mov	r0, r4
   14160:	bl	13e98 <__assert_fail@plt+0x2264>
   14164:	ldr	r1, [r5, #52]	; 0x34
   14168:	add	r6, r5, #168	; 0xa8
   1416c:	str	r1, [r5, #40]	; 0x28
   14170:	add	r2, r1, #1
   14174:	mov	r1, r6
   14178:	ldr	r0, [r4, #24]
   1417c:	bl	11868 <memmove@plt>
   14180:	mov	r0, r6
   14184:	mov	r1, #47	; 0x2f
   14188:	bl	11afc <strrchr@plt>
   1418c:	cmp	r0, #0
   14190:	beq	141cc <__assert_fail@plt+0x2598>
   14194:	cmp	r0, r6
   14198:	bne	141a8 <__assert_fail@plt+0x2574>
   1419c:	ldrb	r1, [r5, #169]	; 0xa9
   141a0:	cmp	r1, #0
   141a4:	beq	141cc <__assert_fail@plt+0x2598>
   141a8:	add	r7, r0, #1
   141ac:	mov	r0, r7
   141b0:	bl	11a24 <strlen@plt>
   141b4:	mov	r8, r0
   141b8:	add	r2, r0, #1
   141bc:	mov	r0, r6
   141c0:	mov	r1, r7
   141c4:	bl	11868 <memmove@plt>
   141c8:	str	r8, [r5, #52]	; 0x34
   141cc:	ldr	r0, [r4, #24]
   141d0:	str	r0, [r5, #24]
   141d4:	str	r0, [r5, #28]
   141d8:	mov	r0, r4
   141dc:	bl	13c44 <__assert_fail@plt+0x2010>
   141e0:	b	14258 <__assert_fail@plt+0x2624>
   141e4:	bic	r1, r1, #4096	; 0x1000
   141e8:	str	r1, [r4, #48]	; 0x30
   141ec:	bl	13d00 <__assert_fail@plt+0x20cc>
   141f0:	mov	r0, #0
   141f4:	str	r0, [r4, #4]
   141f8:	mov	r0, r4
   141fc:	mov	r1, #3
   14200:	bl	14778 <__assert_fail@plt+0x2b44>
   14204:	cmp	r0, #0
   14208:	str	r0, [r4, #4]
   1420c:	beq	142d8 <__assert_fail@plt+0x26a4>
   14210:	ldr	r5, [r4, #4]
   14214:	mov	r0, #0
   14218:	str	r0, [r4, #4]
   1421c:	ldr	r0, [r5, #4]
   14220:	ldr	r1, [r0, #28]
   14224:	ldr	r0, [r0, #40]	; 0x28
   14228:	sub	r2, r0, #1
   1422c:	ldrb	r1, [r1, r2]
   14230:	cmp	r1, #47	; 0x2f
   14234:	ldr	r1, [r4, #24]
   14238:	moveq	r0, r2
   1423c:	mov	r2, #47	; 0x2f
   14240:	strb	r2, [r1, r0]!
   14244:	ldr	r2, [r5, #52]	; 0x34
   14248:	add	r0, r1, #1
   1424c:	add	r1, r5, #168	; 0xa8
   14250:	add	r2, r2, #1
   14254:	bl	11868 <memmove@plt>
   14258:	str	r5, [r4]
   1425c:	ldrh	r0, [r5, #56]	; 0x38
   14260:	cmp	r0, #11
   14264:	bne	14298 <__assert_fail@plt+0x2664>
   14268:	ldrd	r0, [r5, #112]	; 0x70
   1426c:	eor	r2, r0, #1
   14270:	orrs	r2, r2, r1
   14274:	beq	144c8 <__assert_fail@plt+0x2894>
   14278:	eor	r0, r0, #2
   1427c:	orrs	r0, r0, r1
   14280:	bne	144d0 <__assert_fail@plt+0x289c>
   14284:	mov	r0, r4
   14288:	mov	r1, r5
   1428c:	mov	r2, #0
   14290:	bl	13a18 <__assert_fail@plt+0x1de4>
   14294:	strh	r0, [r5, #56]	; 0x38
   14298:	cmp	r0, #1
   1429c:	bne	144c8 <__assert_fail@plt+0x2894>
   142a0:	ldr	r0, [r5, #48]	; 0x30
   142a4:	cmp	r0, #0
   142a8:	ldrdeq	r0, [r5, #64]	; 0x40
   142ac:	strdeq	r0, [r4, #16]
   142b0:	mov	r0, r4
   142b4:	mov	r1, r5
   142b8:	bl	15168 <__assert_fail@plt+0x3534>
   142bc:	cmp	r0, #0
   142c0:	bne	144c8 <__assert_fail@plt+0x2894>
   142c4:	bl	11a60 <__errno_location@plt>
   142c8:	mov	r1, #12
   142cc:	mov	r5, #0
   142d0:	str	r1, [r0]
   142d4:	b	144c8 <__assert_fail@plt+0x2894>
   142d8:	ldrb	r0, [r4, #49]	; 0x31
   142dc:	mov	r5, #0
   142e0:	tst	r0, #32
   142e4:	bne	144c8 <__assert_fail@plt+0x2894>
   142e8:	ldr	r0, [r6, #32]
   142ec:	cmp	r0, #0
   142f0:	ldrhne	r0, [r7]
   142f4:	cmpne	r0, #4
   142f8:	movne	r0, #7
   142fc:	strhne	r0, [r7]
   14300:	b	13fa8 <__assert_fail@plt+0x2374>
   14304:	ldrb	r0, [r4, #49]	; 0x31
   14308:	tst	r0, #32
   1430c:	bne	144c8 <__assert_fail@plt+0x2894>
   14310:	ldr	r5, [r6, #4]
   14314:	mov	r0, r6
   14318:	str	r5, [r4]
   1431c:	bl	135e0 <__assert_fail@plt+0x19ac>
   14320:	ldr	r0, [r5, #48]	; 0x30
   14324:	cmn	r0, #1
   14328:	beq	14384 <__assert_fail@plt+0x2750>
   1432c:	ldrh	r0, [r5, #56]	; 0x38
   14330:	cmp	r0, #11
   14334:	beq	144d0 <__assert_fail@plt+0x289c>
   14338:	ldr	r0, [r5, #40]	; 0x28
   1433c:	ldr	r1, [r4, #24]
   14340:	mov	r2, #0
   14344:	strb	r2, [r1, r0]
   14348:	ldr	r0, [r5, #48]	; 0x30
   1434c:	cmp	r0, #0
   14350:	beq	143b8 <__assert_fail@plt+0x2784>
   14354:	ldrh	r0, [r5, #58]	; 0x3a
   14358:	tst	r0, #2
   1435c:	bne	143e4 <__assert_fail@plt+0x27b0>
   14360:	tst	r0, #1
   14364:	bne	1448c <__assert_fail@plt+0x2858>
   14368:	ldr	r1, [r5, #4]
   1436c:	movw	r3, #44898	; 0xaf62
   14370:	mov	r0, r4
   14374:	mvn	r2, #0
   14378:	movt	r3, #1
   1437c:	bl	145a0 <__assert_fail@plt+0x296c>
   14380:	b	143c0 <__assert_fail@plt+0x278c>
   14384:	mov	r0, r5
   14388:	bl	135e0 <__assert_fail@plt+0x19ac>
   1438c:	bl	11a60 <__errno_location@plt>
   14390:	mov	r5, #0
   14394:	str	r5, [r0]
   14398:	str	r5, [r4]
   1439c:	b	144c8 <__assert_fail@plt+0x2894>
   143a0:	bl	11a60 <__errno_location@plt>
   143a4:	ldr	r0, [r0]
   143a8:	mov	r1, #7
   143ac:	strh	r1, [r6, #56]	; 0x38
   143b0:	str	r0, [r6, #32]
   143b4:	b	13f40 <__assert_fail@plt+0x230c>
   143b8:	mov	r0, r4
   143bc:	bl	1510c <__assert_fail@plt+0x34d8>
   143c0:	cmp	r0, #0
   143c4:	beq	1448c <__assert_fail@plt+0x2858>
   143c8:	bl	11a60 <__errno_location@plt>
   143cc:	ldr	r0, [r0]
   143d0:	str	r0, [r5, #32]
   143d4:	ldr	r0, [r4, #48]	; 0x30
   143d8:	orr	r0, r0, #8192	; 0x2000
   143dc:	str	r0, [r4, #48]	; 0x30
   143e0:	b	1448c <__assert_fail@plt+0x2858>
   143e4:	ldr	r0, [r4, #48]	; 0x30
   143e8:	tst	r0, #4
   143ec:	bne	14458 <__assert_fail@plt+0x2824>
   143f0:	mov	r6, r5
   143f4:	tst	r0, #512	; 0x200
   143f8:	ldr	r1, [r6, #36]!	; 0x24
   143fc:	bne	14478 <__assert_fail@plt+0x2844>
   14400:	mov	r0, r1
   14404:	bl	11b44 <fchdir@plt>
   14408:	cmp	r0, #0
   1440c:	beq	14484 <__assert_fail@plt+0x2850>
   14410:	bl	11a60 <__errno_location@plt>
   14414:	ldr	r0, [r0]
   14418:	str	r0, [r5, #32]
   1441c:	ldr	r0, [r4, #48]	; 0x30
   14420:	orr	r0, r0, #8192	; 0x2000
   14424:	str	r0, [r4, #48]	; 0x30
   14428:	b	14484 <__assert_fail@plt+0x2850>
   1442c:	movw	r1, #44899	; 0xaf63
   14430:	mov	r0, r4
   14434:	movt	r1, #1
   14438:	bl	13cd0 <__assert_fail@plt+0x209c>
   1443c:	cmn	r0, #1
   14440:	str	r0, [r5, #36]	; 0x24
   14444:	ble	14460 <__assert_fail@plt+0x282c>
   14448:	ldrh	r0, [r5, #58]	; 0x3a
   1444c:	orr	r0, r0, #2
   14450:	strh	r0, [r5, #58]	; 0x3a
   14454:	b	1401c <__assert_fail@plt+0x23e8>
   14458:	add	r6, r5, #36	; 0x24
   1445c:	b	14484 <__assert_fail@plt+0x2850>
   14460:	bl	11a60 <__errno_location@plt>
   14464:	ldr	r0, [r0]
   14468:	mov	r1, #7
   1446c:	strh	r1, [r5, #56]	; 0x38
   14470:	str	r0, [r5, #32]
   14474:	b	1401c <__assert_fail@plt+0x23e8>
   14478:	mov	r0, r4
   1447c:	mov	r2, #1
   14480:	bl	1521c <__assert_fail@plt+0x35e8>
   14484:	ldr	r0, [r6]
   14488:	bl	11be0 <close@plt>
   1448c:	ldrh	r0, [r5, #56]	; 0x38
   14490:	cmp	r0, #2
   14494:	beq	144bc <__assert_fail@plt+0x2888>
   14498:	ldr	r0, [r5, #32]
   1449c:	mov	r1, #7
   144a0:	cmp	r0, #0
   144a4:	movweq	r1, #6
   144a8:	strh	r1, [r5, #56]	; 0x38
   144ac:	bne	144bc <__assert_fail@plt+0x2888>
   144b0:	mov	r0, r4
   144b4:	mov	r1, r5
   144b8:	bl	144d4 <__assert_fail@plt+0x28a0>
   144bc:	ldrb	r0, [r4, #49]	; 0x31
   144c0:	tst	r0, #32
   144c4:	movne	r5, #0
   144c8:	mov	r0, r5
   144cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144d0:	bl	11bd4 <abort@plt>
   144d4:	push	{r4, r5, r6, r7, fp, lr}
   144d8:	add	fp, sp, #16
   144dc:	sub	sp, sp, #24
   144e0:	ldrh	r2, [r0, #48]	; 0x30
   144e4:	movw	r3, #258	; 0x102
   144e8:	add	lr, r1, #64	; 0x40
   144ec:	tst	r2, r3
   144f0:	beq	14528 <__assert_fail@plt+0x28f4>
   144f4:	ldrd	r2, [lr]
   144f8:	stm	sp, {r2, r3}
   144fc:	ldrd	r2, [r1, #160]	; 0xa0
   14500:	mov	r1, sp
   14504:	str	r3, [sp, #12]
   14508:	str	r2, [sp, #8]
   1450c:	ldr	r0, [r0, #56]	; 0x38
   14510:	bl	16458 <__assert_fail@plt+0x4824>
   14514:	cmp	r0, #0
   14518:	beq	1459c <__assert_fail@plt+0x2968>
   1451c:	bl	135e0 <__assert_fail@plt+0x19ac>
   14520:	sub	sp, fp, #16
   14524:	pop	{r4, r5, r6, r7, fp, pc}
   14528:	ldr	r2, [r1, #4]
   1452c:	cmp	r2, #0
   14530:	beq	14520 <__assert_fail@plt+0x28ec>
   14534:	ldr	r3, [r2, #48]	; 0x30
   14538:	cmp	r3, #0
   1453c:	blt	14520 <__assert_fail@plt+0x28ec>
   14540:	ldr	ip, [r0, #56]	; 0x38
   14544:	ldrd	r4, [ip, #16]
   14548:	orrs	r3, r4, r5
   1454c:	beq	1459c <__assert_fail@plt+0x2968>
   14550:	ldrd	r4, [r1, #160]	; 0xa0
   14554:	ldrd	r6, [ip]
   14558:	eor	r1, r7, r5
   1455c:	eor	r3, r6, r4
   14560:	orrs	r1, r3, r1
   14564:	bne	14520 <__assert_fail@plt+0x28ec>
   14568:	ldr	r1, [ip, #8]!
   1456c:	ldrd	r4, [lr]
   14570:	ldr	r3, [ip, #4]
   14574:	eor	r1, r1, r4
   14578:	eor	r3, r3, r5
   1457c:	orrs	r1, r1, r3
   14580:	bne	14520 <__assert_fail@plt+0x28ec>
   14584:	ldrd	r4, [r2, #64]	; 0x40
   14588:	strd	r4, [ip]
   1458c:	ldr	r0, [r0, #56]	; 0x38
   14590:	ldrd	r2, [r2, #160]	; 0xa0
   14594:	strd	r2, [r0]
   14598:	b	14520 <__assert_fail@plt+0x28ec>
   1459c:	bl	11bd4 <abort@plt>
   145a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a4:	add	fp, sp, #28
   145a8:	sub	sp, sp, #108	; 0x6c
   145ac:	mov	r7, r3
   145b0:	mov	r4, r2
   145b4:	mov	r8, r1
   145b8:	mov	sl, r0
   145bc:	cmp	r3, #0
   145c0:	beq	145e4 <__assert_fail@plt+0x29b0>
   145c4:	movw	r1, #44898	; 0xaf62
   145c8:	mov	r0, r7
   145cc:	movt	r1, #1
   145d0:	bl	1182c <strcmp@plt>
   145d4:	mov	r6, r0
   145d8:	cmp	r0, #0
   145dc:	movwne	r6, #1
   145e0:	b	145e8 <__assert_fail@plt+0x29b4>
   145e4:	mov	r6, #1
   145e8:	ldr	r0, [sl, #48]	; 0x30
   145ec:	tst	r0, #4
   145f0:	bne	14648 <__assert_fail@plt+0x2a14>
   145f4:	cmn	r4, #1
   145f8:	mov	r1, #0
   145fc:	mov	r9, #0
   14600:	movwgt	r1, #1
   14604:	orrs	r1, r1, r6
   14608:	bne	14668 <__assert_fail@plt+0x2a34>
   1460c:	ands	r0, r0, #512	; 0x200
   14610:	beq	14668 <__assert_fail@plt+0x2a34>
   14614:	add	r4, sl, #60	; 0x3c
   14618:	mov	r0, r4
   1461c:	bl	1664c <__assert_fail@plt+0x4a18>
   14620:	cmp	r0, #0
   14624:	bne	14670 <__assert_fail@plt+0x2a3c>
   14628:	mov	r0, r4
   1462c:	bl	166a0 <__assert_fail@plt+0x4a6c>
   14630:	cmn	r0, #1
   14634:	ble	14670 <__assert_fail@plt+0x2a3c>
   14638:	mov	r4, r0
   1463c:	mov	r9, #0
   14640:	mov	r7, #0
   14644:	b	1468c <__assert_fail@plt+0x2a58>
   14648:	mov	r5, #0
   1464c:	cmp	r4, #0
   14650:	blt	1476c <__assert_fail@plt+0x2b38>
   14654:	ands	r0, r0, #512	; 0x200
   14658:	beq	1476c <__assert_fail@plt+0x2b38>
   1465c:	mov	r0, r4
   14660:	bl	11be0 <close@plt>
   14664:	b	1476c <__assert_fail@plt+0x2b38>
   14668:	cmn	r4, #1
   1466c:	bgt	1468c <__assert_fail@plt+0x2a58>
   14670:	mov	r0, sl
   14674:	mov	r1, r7
   14678:	bl	13cd0 <__assert_fail@plt+0x209c>
   1467c:	cmp	r0, #0
   14680:	blt	1471c <__assert_fail@plt+0x2ae8>
   14684:	mov	r4, r0
   14688:	mov	r9, #1
   1468c:	ldr	r5, [sl, #48]	; 0x30
   14690:	tst	r5, #2
   14694:	bne	146b8 <__assert_fail@plt+0x2a84>
   14698:	cmp	r7, #0
   1469c:	beq	14704 <__assert_fail@plt+0x2ad0>
   146a0:	movw	r1, #44898	; 0xaf62
   146a4:	mov	r0, r7
   146a8:	movt	r1, #1
   146ac:	bl	1182c <strcmp@plt>
   146b0:	cmp	r0, #0
   146b4:	bne	14704 <__assert_fail@plt+0x2ad0>
   146b8:	mov	r1, sp
   146bc:	mov	r0, r4
   146c0:	bl	1a624 <lchmod@@Base+0x3f2c>
   146c4:	cmp	r0, #0
   146c8:	bne	14748 <__assert_fail@plt+0x2b14>
   146cc:	ldrd	r0, [r8, #64]	; 0x40
   146d0:	ldm	sp, {r2, r3}
   146d4:	eor	r1, r1, r3
   146d8:	eor	r0, r0, r2
   146dc:	orrs	r0, r0, r1
   146e0:	bne	1473c <__assert_fail@plt+0x2b08>
   146e4:	ldrd	r0, [r8, #160]	; 0xa0
   146e8:	ldr	r2, [sp, #96]	; 0x60
   146ec:	ldr	r3, [sp, #100]	; 0x64
   146f0:	eor	r1, r1, r3
   146f4:	eor	r0, r0, r2
   146f8:	orrs	r0, r0, r1
   146fc:	bne	1473c <__assert_fail@plt+0x2b08>
   14700:	ldr	r5, [sl, #48]	; 0x30
   14704:	tst	r5, #512	; 0x200
   14708:	bne	14724 <__assert_fail@plt+0x2af0>
   1470c:	mov	r0, r4
   14710:	bl	11b44 <fchdir@plt>
   14714:	mov	r5, r0
   14718:	b	1474c <__assert_fail@plt+0x2b18>
   1471c:	mvn	r5, #0
   14720:	b	1476c <__assert_fail@plt+0x2b38>
   14724:	mov	r0, sl
   14728:	mov	r1, r4
   1472c:	mov	r2, r6
   14730:	bl	1521c <__assert_fail@plt+0x35e8>
   14734:	mov	r5, #0
   14738:	b	1476c <__assert_fail@plt+0x2b38>
   1473c:	bl	11a60 <__errno_location@plt>
   14740:	mov	r1, #2
   14744:	str	r1, [r0]
   14748:	mvn	r5, #0
   1474c:	cmp	r9, #0
   14750:	beq	1476c <__assert_fail@plt+0x2b38>
   14754:	bl	11a60 <__errno_location@plt>
   14758:	ldr	r7, [r0]
   1475c:	mov	r6, r0
   14760:	mov	r0, r4
   14764:	bl	11be0 <close@plt>
   14768:	str	r7, [r6]
   1476c:	mov	r0, r5
   14770:	sub	sp, fp, #28
   14774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1477c:	add	fp, sp, #28
   14780:	sub	sp, sp, #68	; 0x44
   14784:	ldr	r8, [r0]
   14788:	mov	r4, r1
   1478c:	mov	r6, r0
   14790:	str	r0, [fp, #-40]	; 0xffffffd8
   14794:	ldr	r5, [r8, #12]
   14798:	cmp	r5, #0
   1479c:	beq	147e0 <__assert_fail@plt+0x2bac>
   147a0:	mov	r0, r5
   147a4:	bl	11b38 <dirfd@plt>
   147a8:	cmn	r0, #1
   147ac:	str	r0, [fp, #-32]	; 0xffffffe0
   147b0:	ble	1481c <__assert_fail@plt+0x2be8>
   147b4:	ldr	r0, [r6, #44]!	; 0x2c
   147b8:	mvn	r2, #0
   147bc:	str	r5, [sp, #12]
   147c0:	cmp	r0, #0
   147c4:	str	r6, [sp, #44]	; 0x2c
   147c8:	add	r9, r6, #4
   147cc:	mov	r6, #0
   147d0:	movweq	r2, #34464	; 0x86a0
   147d4:	movteq	r2, #1
   147d8:	str	r2, [sp, #24]
   147dc:	b	14a10 <__assert_fail@plt+0x2ddc>
   147e0:	mov	r9, r6
   147e4:	mvn	r0, #99	; 0x63
   147e8:	mov	r2, #0
   147ec:	str	r5, [sp, #12]
   147f0:	ldr	r3, [r9, #48]!	; 0x30
   147f4:	and	r1, r3, #516	; 0x204
   147f8:	cmp	r1, #512	; 0x200
   147fc:	ldr	r1, [r8, #24]
   14800:	ldreq	r0, [r6, #32]
   14804:	tst	r3, #16
   14808:	beq	1483c <__assert_fail@plt+0x2c08>
   1480c:	tst	r3, #1
   14810:	bne	14830 <__assert_fail@plt+0x2bfc>
   14814:	mov	r2, #32768	; 0x8000
   14818:	b	1483c <__assert_fail@plt+0x2c08>
   1481c:	ldr	r0, [r8, #12]
   14820:	bl	11c10 <closedir@plt>
   14824:	mov	r5, #0
   14828:	str	r5, [r8, #12]
   1482c:	b	14878 <__assert_fail@plt+0x2c44>
   14830:	ldr	r3, [r8, #48]	; 0x30
   14834:	cmp	r3, #0
   14838:	movne	r2, #32768	; 0x8000
   1483c:	sub	r3, fp, #32
   14840:	bl	16d00 <lchmod@@Base+0x608>
   14844:	cmp	r0, #0
   14848:	str	r0, [r8, #12]
   1484c:	beq	14874 <__assert_fail@plt+0x2c40>
   14850:	ldrh	r0, [r8, #56]	; 0x38
   14854:	cmp	r0, #11
   14858:	bne	14898 <__assert_fail@plt+0x2c64>
   1485c:	mov	r0, r6
   14860:	mov	r1, r8
   14864:	mov	r2, #0
   14868:	bl	13a18 <__assert_fail@plt+0x1de4>
   1486c:	strh	r0, [r8, #56]	; 0x38
   14870:	b	148d8 <__assert_fail@plt+0x2ca4>
   14874:	mov	r5, #0
   14878:	cmp	r4, #3
   1487c:	bne	150a8 <__assert_fail@plt+0x3474>
   14880:	mov	r0, #4
   14884:	strh	r0, [r8, #56]	; 0x38
   14888:	bl	11a60 <__errno_location@plt>
   1488c:	ldr	r0, [r0]
   14890:	str	r0, [r8, #32]
   14894:	b	150a8 <__assert_fail@plt+0x3474>
   14898:	ldrb	r0, [r9, #1]
   1489c:	tst	r0, #1
   148a0:	beq	148d8 <__assert_fail@plt+0x2ca4>
   148a4:	mov	r0, r6
   148a8:	mov	r1, r8
   148ac:	bl	144d4 <__assert_fail@plt+0x28a0>
   148b0:	mov	r0, r6
   148b4:	mov	r1, r8
   148b8:	mov	r2, #0
   148bc:	mov	r5, #0
   148c0:	bl	13a18 <__assert_fail@plt+0x1de4>
   148c4:	mov	r0, r6
   148c8:	mov	r1, r8
   148cc:	bl	15168 <__assert_fail@plt+0x3534>
   148d0:	cmp	r0, #0
   148d4:	beq	14ebc <__assert_fail@plt+0x3288>
   148d8:	mov	r1, r6
   148dc:	mov	sl, r6
   148e0:	ldr	r0, [r1, #44]!	; 0x2c
   148e4:	str	r1, [sp, #44]	; 0x2c
   148e8:	mvn	r1, #0
   148ec:	cmp	r0, #0
   148f0:	movweq	r1, #34464	; 0x86a0
   148f4:	movteq	r1, #1
   148f8:	cmp	r4, #2
   148fc:	str	r1, [sp, #24]
   14900:	bne	14924 <__assert_fail@plt+0x2cf0>
   14904:	mov	r6, #1
   14908:	cmp	r4, #3
   1490c:	bne	14a10 <__assert_fail@plt+0x2ddc>
   14910:	sub	r0, r4, #3
   14914:	mov	r7, r8
   14918:	mov	r8, r4
   1491c:	mov	r5, #0
   14920:	b	1494c <__assert_fail@plt+0x2d18>
   14924:	ldr	r0, [r9]
   14928:	and	r0, r0, #56	; 0x38
   1492c:	cmp	r0, #24
   14930:	ldreq	r0, [r8, #84]	; 0x54
   14934:	cmpeq	r0, #2
   14938:	beq	150b4 <__assert_fail@plt+0x3480>
   1493c:	sub	r0, r4, #3
   14940:	mov	r7, r8
   14944:	mov	r8, r4
   14948:	mov	r5, #1
   1494c:	clz	r0, r0
   14950:	lsr	r4, r0, #5
   14954:	ldrb	r0, [r9, #1]
   14958:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1495c:	tst	r0, #2
   14960:	beq	1497c <__assert_fail@plt+0x2d48>
   14964:	mov	r0, r2
   14968:	movw	r1, #1030	; 0x406
   1496c:	mov	r2, #3
   14970:	bl	19ef0 <lchmod@@Base+0x37f8>
   14974:	mov	r2, r0
   14978:	str	r0, [fp, #-32]	; 0xffffffe0
   1497c:	cmp	r2, #0
   14980:	blt	1499c <__assert_fail@plt+0x2d68>
   14984:	mov	r0, sl
   14988:	mov	r1, r7
   1498c:	mov	r3, #0
   14990:	bl	145a0 <__assert_fail@plt+0x296c>
   14994:	cmp	r0, #0
   14998:	beq	14a04 <__assert_fail@plt+0x2dd0>
   1499c:	and	r0, r4, r5
   149a0:	cmp	r0, #1
   149a4:	bne	149b4 <__assert_fail@plt+0x2d80>
   149a8:	bl	11a60 <__errno_location@plt>
   149ac:	ldr	r0, [r0]
   149b0:	str	r0, [r7, #32]
   149b4:	ldrh	r0, [r7, #58]	; 0x3a
   149b8:	orr	r0, r0, #1
   149bc:	strh	r0, [r7, #58]	; 0x3a
   149c0:	ldr	r0, [r7, #12]
   149c4:	bl	11c10 <closedir@plt>
   149c8:	mov	r4, #0
   149cc:	mov	r5, r7
   149d0:	str	r4, [r7, #12]
   149d4:	ldr	r0, [r9]
   149d8:	tst	r0, #512	; 0x200
   149dc:	beq	149f0 <__assert_fail@plt+0x2dbc>
   149e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   149e4:	cmp	r0, #0
   149e8:	blt	149f0 <__assert_fail@plt+0x2dbc>
   149ec:	bl	11be0 <close@plt>
   149f0:	str	r4, [r5, #12]
   149f4:	mov	r4, r8
   149f8:	mov	r6, #1
   149fc:	mov	r8, r5
   14a00:	b	14a10 <__assert_fail@plt+0x2ddc>
   14a04:	mov	r4, r8
   14a08:	mov	r6, #0
   14a0c:	mov	r8, r7
   14a10:	ldr	r0, [r8, #40]	; 0x28
   14a14:	ldr	r1, [r8, #28]
   14a18:	mov	r5, #0
   14a1c:	str	r4, [sp, #4]
   14a20:	sub	r2, r0, #1
   14a24:	ldrb	r1, [r1, r2]
   14a28:	cmp	r1, #47	; 0x2f
   14a2c:	ldrb	r1, [r9]
   14a30:	moveq	r0, r2
   14a34:	tst	r1, #4
   14a38:	mov	r1, #0
   14a3c:	str	r1, [sp, #36]	; 0x24
   14a40:	beq	14a5c <__assert_fail@plt+0x2e28>
   14a44:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a48:	mov	r2, #47	; 0x2f
   14a4c:	ldr	r1, [r1, #24]
   14a50:	strb	r2, [r1, r0]!
   14a54:	add	r1, r1, #1
   14a58:	str	r1, [sp, #36]	; 0x24
   14a5c:	ldr	r4, [r8, #12]
   14a60:	add	r0, r0, #1
   14a64:	str	r0, [sp, #48]	; 0x30
   14a68:	cmp	r4, #0
   14a6c:	beq	14d94 <__assert_fail@plt+0x3160>
   14a70:	mov	r1, r0
   14a74:	ldr	r0, [r8, #48]	; 0x30
   14a78:	str	r6, [sp]
   14a7c:	mov	r6, #0
   14a80:	add	r0, r0, #1
   14a84:	str	r0, [sp, #20]
   14a88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a8c:	ldr	r0, [r0, #36]	; 0x24
   14a90:	sub	r0, r0, r1
   14a94:	str	r0, [fp, #-44]	; 0xffffffd4
   14a98:	bl	11a60 <__errno_location@plt>
   14a9c:	str	r0, [sp, #28]
   14aa0:	mov	r0, #0
   14aa4:	mov	r5, #0
   14aa8:	mov	r7, #0
   14aac:	str	r8, [sp, #32]
   14ab0:	str	r9, [fp, #-36]	; 0xffffffdc
   14ab4:	str	r0, [sp, #40]	; 0x28
   14ab8:	mov	r0, #0
   14abc:	str	r0, [sp, #16]
   14ac0:	mov	r0, #0
   14ac4:	str	r0, [sp, #8]
   14ac8:	ldr	r0, [sp, #28]
   14acc:	str	r6, [r0]
   14ad0:	mov	r0, r4
   14ad4:	bl	11b14 <readdir64@plt>
   14ad8:	cmp	r0, #0
   14adc:	beq	14df4 <__assert_fail@plt+0x31c0>
   14ae0:	mov	sl, r0
   14ae4:	ldrb	r0, [r9]
   14ae8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   14aec:	add	r4, sl, #19
   14af0:	tst	r0, #32
   14af4:	ldrbeq	r0, [r4]
   14af8:	cmpeq	r0, #46	; 0x2e
   14afc:	beq	14b9c <__assert_fail@plt+0x2f68>
   14b00:	mov	r0, r4
   14b04:	bl	11a24 <strlen@plt>
   14b08:	mov	r8, r0
   14b0c:	mov	r0, r6
   14b10:	mov	r1, r4
   14b14:	mov	r2, r8
   14b18:	bl	13998 <__assert_fail@plt+0x1d64>
   14b1c:	mov	r9, r0
   14b20:	cmp	r0, #0
   14b24:	beq	14da8 <__assert_fail@plt+0x3174>
   14b28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b2c:	cmp	r8, r1
   14b30:	bcs	14b44 <__assert_fail@plt+0x2f10>
   14b34:	ldr	r2, [sp, #48]	; 0x30
   14b38:	add	r4, r8, r2
   14b3c:	mov	r8, r6
   14b40:	b	14bd0 <__assert_fail@plt+0x2f9c>
   14b44:	ldr	r1, [sp, #48]	; 0x30
   14b48:	add	r4, r8, r1
   14b4c:	mov	r8, r6
   14b50:	ldr	r6, [r6, #24]
   14b54:	add	r1, r4, #1
   14b58:	mov	r0, r8
   14b5c:	bl	13924 <__assert_fail@plt+0x1cf0>
   14b60:	cmp	r0, #0
   14b64:	beq	14da8 <__assert_fail@plt+0x3174>
   14b68:	ldr	r0, [r8, #24]
   14b6c:	cmp	r6, r0
   14b70:	beq	14bc4 <__assert_fail@plt+0x2f90>
   14b74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14b78:	ldr	r2, [sp, #48]	; 0x30
   14b7c:	ldrb	r1, [r1]
   14b80:	tst	r1, #4
   14b84:	ldr	r1, [sp, #36]	; 0x24
   14b88:	addne	r1, r0, r2
   14b8c:	mov	r0, #1
   14b90:	str	r1, [sp, #36]	; 0x24
   14b94:	str	r0, [sp, #8]
   14b98:	b	14bc8 <__assert_fail@plt+0x2f94>
   14b9c:	ldrb	r0, [sl, #20]
   14ba0:	cmp	r0, #0
   14ba4:	beq	14bb8 <__assert_fail@plt+0x2f84>
   14ba8:	cmp	r0, #46	; 0x2e
   14bac:	ldrbeq	r0, [sl, #21]
   14bb0:	cmpeq	r0, #0
   14bb4:	bne	14b00 <__assert_fail@plt+0x2ecc>
   14bb8:	ldr	r8, [sp, #32]
   14bbc:	mov	r6, #0
   14bc0:	b	14d7c <__assert_fail@plt+0x3148>
   14bc4:	ldr	r2, [sp, #48]	; 0x30
   14bc8:	ldr	r0, [r8, #36]	; 0x24
   14bcc:	sub	r1, r0, r2
   14bd0:	cmp	r4, r2
   14bd4:	bcc	14e4c <__assert_fail@plt+0x3218>
   14bd8:	ldr	r0, [sp, #20]
   14bdc:	str	r1, [fp, #-44]	; 0xffffffd4
   14be0:	str	r0, [r9, #48]	; 0x30
   14be4:	ldr	r0, [r8]
   14be8:	str	r4, [r9, #40]	; 0x28
   14bec:	str	r0, [r9, #4]
   14bf0:	ldrd	r0, [sl]
   14bf4:	strd	r0, [r9, #160]	; 0xa0
   14bf8:	ldrb	r0, [r8, #48]	; 0x30
   14bfc:	tst	r0, #4
   14c00:	bne	14c10 <__assert_fail@plt+0x2fdc>
   14c04:	add	r0, r9, #168	; 0xa8
   14c08:	str	r0, [r9, #24]
   14c0c:	b	14c2c <__assert_fail@plt+0x2ff8>
   14c10:	ldr	r0, [r9, #28]
   14c14:	ldr	r2, [r9, #52]	; 0x34
   14c18:	add	r1, r9, #168	; 0xa8
   14c1c:	str	r0, [r9, #24]
   14c20:	ldr	r0, [sp, #36]	; 0x24
   14c24:	add	r2, r2, #1
   14c28:	bl	11868 <memmove@plt>
   14c2c:	ldr	r0, [sp, #44]	; 0x2c
   14c30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c34:	ldr	r0, [r0]
   14c38:	ldr	r2, [r1]
   14c3c:	cmp	r0, #0
   14c40:	beq	14c68 <__assert_fail@plt+0x3034>
   14c44:	ands	r0, r2, #1024	; 0x400
   14c48:	bne	14c68 <__assert_fail@plt+0x3034>
   14c4c:	mov	r0, r8
   14c50:	mov	r1, r9
   14c54:	mov	r2, #0
   14c58:	bl	13a18 <__assert_fail@plt+0x1de4>
   14c5c:	mov	r6, #0
   14c60:	strh	r0, [r9, #56]	; 0x38
   14c64:	b	14cdc <__assert_fail@plt+0x30a8>
   14c68:	ldrb	r3, [sl, #18]
   14c6c:	mov	r0, #0
   14c70:	tst	r2, #8
   14c74:	mov	r1, #0
   14c78:	beq	14c9c <__assert_fail@plt+0x3068>
   14c7c:	orr	r1, r3, #4
   14c80:	cmp	r1, #4
   14c84:	mov	r1, #0
   14c88:	beq	14c9c <__assert_fail@plt+0x3068>
   14c8c:	eor	r1, r3, #10
   14c90:	and	r2, r2, #16
   14c94:	orrs	r1, r2, r1
   14c98:	movwne	r1, #1
   14c9c:	mov	r2, #11
   14ca0:	mov	r6, #0
   14ca4:	strh	r2, [r9, #56]	; 0x38
   14ca8:	sub	r2, r3, #1
   14cac:	uxtb	r3, r2
   14cb0:	cmp	r3, #11
   14cb4:	sxtbls	r0, r2
   14cb8:	movwls	r2, #44912	; 0xaf70
   14cbc:	movtls	r2, #1
   14cc0:	ldrls	r0, [r2, r0, lsl #2]
   14cc4:	cmp	r1, #0
   14cc8:	str	r0, [r9, #80]	; 0x50
   14ccc:	mov	r0, #2
   14cd0:	movwne	r0, #1
   14cd4:	str	r0, [r9, #112]	; 0x70
   14cd8:	str	r6, [r9, #116]	; 0x74
   14cdc:	cmp	r5, #0
   14ce0:	mov	r4, r9
   14ce4:	str	r6, [r9, #8]
   14ce8:	ldrne	r0, [sp, #40]	; 0x28
   14cec:	movne	r4, r5
   14cf0:	strne	r9, [r0, #8]
   14cf4:	movw	r0, #10000	; 0x2710
   14cf8:	cmp	r7, r0
   14cfc:	bne	14d50 <__assert_fail@plt+0x311c>
   14d00:	ldr	r0, [sp, #44]	; 0x2c
   14d04:	ldr	r0, [r0]
   14d08:	cmp	r0, #0
   14d0c:	bne	14d50 <__assert_fail@plt+0x311c>
   14d10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14d14:	ldr	r0, [sp, #32]
   14d18:	bl	154b4 <__assert_fail@plt+0x3880>
   14d1c:	mov	r1, #0
   14d20:	str	r1, [sp, #16]
   14d24:	movw	r1, #19778	; 0x4d42
   14d28:	movt	r1, #65363	; 0xff53
   14d2c:	cmp	r0, r1
   14d30:	movwne	r1, #26985	; 0x6969
   14d34:	cmpne	r0, r1
   14d38:	beq	14d50 <__assert_fail@plt+0x311c>
   14d3c:	movw	r1, #6548	; 0x1994
   14d40:	movt	r1, #258	; 0x102
   14d44:	cmp	r0, r1
   14d48:	movne	r0, #1
   14d4c:	strne	r0, [sp, #16]
   14d50:	ldr	r0, [sp, #24]
   14d54:	add	r7, r7, #1
   14d58:	cmp	r0, r7
   14d5c:	mov	r0, #0
   14d60:	movwls	r0, #15
   14d64:	cmp	r0, #0
   14d68:	bne	14e98 <__assert_fail@plt+0x3264>
   14d6c:	str	r9, [sp, #40]	; 0x28
   14d70:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14d74:	ldr	r8, [sp, #32]
   14d78:	mov	r5, r4
   14d7c:	ldr	r4, [r8, #12]
   14d80:	cmp	r4, #0
   14d84:	bne	14ac8 <__assert_fail@plt+0x2e94>
   14d88:	ldr	r0, [sp, #8]
   14d8c:	ldr	r4, [sp, #4]
   14d90:	b	14e3c <__assert_fail@plt+0x3208>
   14d94:	ldr	r4, [sp, #4]
   14d98:	mov	r7, #0
   14d9c:	mov	r0, #0
   14da0:	str	r0, [sp, #16]
   14da4:	b	14f64 <__assert_fail@plt+0x3330>
   14da8:	ldr	r4, [sp, #28]
   14dac:	mov	r0, r9
   14db0:	ldr	r8, [r4]
   14db4:	bl	135e0 <__assert_fail@plt+0x19ac>
   14db8:	mov	r0, r5
   14dbc:	bl	13d00 <__assert_fail@plt+0x20cc>
   14dc0:	ldr	r6, [sp, #32]
   14dc4:	ldr	r0, [r6, #12]
   14dc8:	bl	11c10 <closedir@plt>
   14dcc:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14dd0:	mov	r5, #0
   14dd4:	mov	r0, #7
   14dd8:	str	r5, [r6, #12]
   14ddc:	strh	r0, [r6, #56]	; 0x38
   14de0:	ldr	r0, [r7]
   14de4:	orr	r0, r0, #8192	; 0x2000
   14de8:	str	r0, [r7]
   14dec:	str	r8, [r4]
   14df0:	b	150a8 <__assert_fail@plt+0x3474>
   14df4:	ldr	r0, [sp, #28]
   14df8:	ldr	r0, [r0]
   14dfc:	cmp	r0, #0
   14e00:	beq	14e1c <__assert_fail@plt+0x31e8>
   14e04:	str	r0, [r8, #32]
   14e08:	ldr	r0, [sp, #12]
   14e0c:	orrs	r0, r0, r7
   14e10:	mov	r0, #4
   14e14:	movwne	r0, #7
   14e18:	strh	r0, [r8, #56]	; 0x38
   14e1c:	ldr	r0, [r8, #12]
   14e20:	ldr	r4, [sp, #4]
   14e24:	cmp	r0, #0
   14e28:	beq	14ecc <__assert_fail@plt+0x3298>
   14e2c:	bl	11c10 <closedir@plt>
   14e30:	mov	r0, #0
   14e34:	str	r0, [r8, #12]
   14e38:	ldr	r0, [sp, #8]
   14e3c:	tst	r0, #1
   14e40:	ldr	r6, [sp]
   14e44:	bne	14edc <__assert_fail@plt+0x32a8>
   14e48:	b	14f64 <__assert_fail@plt+0x3330>
   14e4c:	mov	r0, r9
   14e50:	bl	135e0 <__assert_fail@plt+0x19ac>
   14e54:	mov	r0, r5
   14e58:	bl	13d00 <__assert_fail@plt+0x20cc>
   14e5c:	ldr	r4, [sp, #32]
   14e60:	ldr	r0, [r4, #12]
   14e64:	bl	11c10 <closedir@plt>
   14e68:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14e6c:	mov	r5, #0
   14e70:	mov	r0, #7
   14e74:	ldr	r1, [sp, #28]
   14e78:	str	r5, [r4, #12]
   14e7c:	strh	r0, [r4, #56]	; 0x38
   14e80:	ldr	r0, [r7]
   14e84:	orr	r0, r0, #8192	; 0x2000
   14e88:	str	r0, [r7]
   14e8c:	mov	r0, #36	; 0x24
   14e90:	str	r0, [r1]
   14e94:	b	150a8 <__assert_fail@plt+0x3474>
   14e98:	ldr	r6, [sp]
   14e9c:	cmp	r0, #15
   14ea0:	bne	150a4 <__assert_fail@plt+0x3470>
   14ea4:	mov	r5, r4
   14ea8:	ldr	r9, [fp, #-36]	; 0xffffffdc
   14eac:	ldr	r4, [sp, #4]
   14eb0:	ldr	r0, [sp, #8]
   14eb4:	ldr	r8, [sp, #32]
   14eb8:	b	14ed4 <__assert_fail@plt+0x32a0>
   14ebc:	bl	11a60 <__errno_location@plt>
   14ec0:	mov	r1, #12
   14ec4:	str	r1, [r0]
   14ec8:	b	150a8 <__assert_fail@plt+0x3474>
   14ecc:	ldr	r6, [sp]
   14ed0:	ldr	r0, [sp, #8]
   14ed4:	tst	r0, #1
   14ed8:	beq	14f64 <__assert_fail@plt+0x3330>
   14edc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ee0:	ldr	r1, [r0, #4]
   14ee4:	ldr	r0, [r0, #24]
   14ee8:	b	14f10 <__assert_fail@plt+0x32dc>
   14eec:	ldr	r2, [r1, #24]
   14ef0:	add	r3, r1, #168	; 0xa8
   14ef4:	cmp	r2, r3
   14ef8:	ldrne	r3, [r1, #28]
   14efc:	subne	r2, r2, r3
   14f00:	addne	r2, r0, r2
   14f04:	strne	r2, [r1, #24]
   14f08:	str	r0, [r1, #28]
   14f0c:	ldr	r1, [r1, #8]
   14f10:	cmp	r1, #0
   14f14:	bne	14eec <__assert_fail@plt+0x32b8>
   14f18:	ldr	r1, [r5, #48]	; 0x30
   14f1c:	cmp	r1, #0
   14f20:	blt	14f64 <__assert_fail@plt+0x3330>
   14f24:	mov	r1, r5
   14f28:	ldr	r2, [r1, #24]
   14f2c:	add	r3, r1, #168	; 0xa8
   14f30:	cmp	r2, r3
   14f34:	ldrne	r3, [r1, #28]
   14f38:	subne	r2, r2, r3
   14f3c:	addne	r2, r0, r2
   14f40:	strne	r2, [r1, #24]
   14f44:	str	r0, [r1, #28]
   14f48:	ldr	r2, [r1, #8]
   14f4c:	cmp	r2, #0
   14f50:	ldreq	r2, [r1, #4]
   14f54:	ldr	r1, [r2, #48]	; 0x30
   14f58:	cmn	r1, #1
   14f5c:	mov	r1, r2
   14f60:	bgt	14f28 <__assert_fail@plt+0x32f4>
   14f64:	ldrb	r0, [r9]
   14f68:	tst	r0, #4
   14f6c:	beq	14f9c <__assert_fail@plt+0x3368>
   14f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14f74:	ldr	r2, [sp, #36]	; 0x24
   14f78:	ldr	r3, [sp, #48]	; 0x30
   14f7c:	ldr	r0, [r0, #36]	; 0x24
   14f80:	sub	r1, r2, #1
   14f84:	cmp	r3, r0
   14f88:	mov	r0, #0
   14f8c:	moveq	r2, r1
   14f90:	cmp	r7, #0
   14f94:	moveq	r2, r1
   14f98:	strb	r0, [r2]
   14f9c:	ldr	r0, [sp, #12]
   14fa0:	cmp	r0, #0
   14fa4:	movwne	r0, #1
   14fa8:	orrs	r0, r0, r6
   14fac:	beq	14fd8 <__assert_fail@plt+0x33a4>
   14fb0:	cmp	r7, #0
   14fb4:	bne	1500c <__assert_fail@plt+0x33d8>
   14fb8:	cmp	r4, #3
   14fbc:	bne	1509c <__assert_fail@plt+0x3468>
   14fc0:	ldrh	r0, [r8, #56]	; 0x38
   14fc4:	cmp	r0, #4
   14fc8:	cmpne	r0, #7
   14fcc:	movne	r0, #6
   14fd0:	strhne	r0, [r8, #56]	; 0x38
   14fd4:	b	1509c <__assert_fail@plt+0x3468>
   14fd8:	cmp	r4, #1
   14fdc:	cmpne	r7, #0
   14fe0:	bne	1500c <__assert_fail@plt+0x33d8>
   14fe4:	ldr	r0, [r8, #48]	; 0x30
   14fe8:	cmp	r0, #0
   14fec:	beq	15078 <__assert_fail@plt+0x3444>
   14ff0:	ldr	r1, [r8, #4]
   14ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ff8:	movw	r3, #44898	; 0xaf62
   14ffc:	mvn	r2, #0
   15000:	movt	r3, #1
   15004:	bl	145a0 <__assert_fail@plt+0x296c>
   15008:	b	15080 <__assert_fail@plt+0x344c>
   1500c:	ldr	r0, [sp, #16]
   15010:	tst	r0, #1
   15014:	beq	15048 <__assert_fail@plt+0x3414>
   15018:	ldr	r4, [fp, #-40]	; 0xffffffd8
   1501c:	movw	r0, #21628	; 0x547c
   15020:	mov	r1, r5
   15024:	mov	r2, r7
   15028:	movt	r0, #1
   1502c:	str	r0, [r4, #44]	; 0x2c
   15030:	mov	r0, r4
   15034:	bl	13b4c <__assert_fail@plt+0x1f18>
   15038:	mov	r5, r0
   1503c:	mov	r0, #0
   15040:	str	r0, [r4, #44]	; 0x2c
   15044:	b	150a8 <__assert_fail@plt+0x3474>
   15048:	cmp	r7, #2
   1504c:	bcc	150a8 <__assert_fail@plt+0x3474>
   15050:	ldr	r0, [sp, #44]	; 0x2c
   15054:	ldr	r0, [r0]
   15058:	cmp	r0, #0
   1505c:	beq	150a8 <__assert_fail@plt+0x3474>
   15060:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15064:	mov	r1, r5
   15068:	mov	r2, r7
   1506c:	bl	13b4c <__assert_fail@plt+0x1f18>
   15070:	mov	r5, r0
   15074:	b	150a8 <__assert_fail@plt+0x3474>
   15078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1507c:	bl	1510c <__assert_fail@plt+0x34d8>
   15080:	cmp	r0, #0
   15084:	beq	14fb0 <__assert_fail@plt+0x337c>
   15088:	mov	r0, #7
   1508c:	strh	r0, [r8, #56]	; 0x38
   15090:	ldr	r0, [r9]
   15094:	orr	r0, r0, #8192	; 0x2000
   15098:	str	r0, [r9]
   1509c:	mov	r0, r5
   150a0:	bl	13d00 <__assert_fail@plt+0x20cc>
   150a4:	mov	r5, #0
   150a8:	mov	r0, r5
   150ac:	sub	sp, fp, #28
   150b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   150b8:	mov	r0, r8
   150bc:	bl	154b4 <__assert_fail@plt+0x3880>
   150c0:	movw	r1, #26984	; 0x6968
   150c4:	cmp	r0, r1
   150c8:	ble	150f4 <__assert_fail@plt+0x34c0>
   150cc:	movw	r1, #26985	; 0x6969
   150d0:	cmp	r0, r1
   150d4:	movwne	r1, #16719	; 0x414f
   150d8:	movtne	r1, #21318	; 0x5346
   150dc:	cmpne	r0, r1
   150e0:	beq	1493c <__assert_fail@plt+0x2d08>
   150e4:	movw	r1, #40864	; 0x9fa0
   150e8:	cmp	r0, r1
   150ec:	beq	1493c <__assert_fail@plt+0x2d08>
   150f0:	b	14904 <__assert_fail@plt+0x2cd0>
   150f4:	movw	r1, #19778	; 0x4d42
   150f8:	movt	r1, #65363	; 0xff53
   150fc:	cmp	r0, r1
   15100:	cmpne	r0, #0
   15104:	beq	1493c <__assert_fail@plt+0x2d08>
   15108:	b	14904 <__assert_fail@plt+0x2cd0>
   1510c:	push	{r4, r5, fp, lr}
   15110:	add	fp, sp, #8
   15114:	mov	r4, r0
   15118:	ldr	r0, [r0, #48]	; 0x30
   1511c:	mov	r5, #0
   15120:	tst	r0, #4
   15124:	bne	15158 <__assert_fail@plt+0x3524>
   15128:	tst	r0, #512	; 0x200
   1512c:	bne	15148 <__assert_fail@plt+0x3514>
   15130:	ldr	r0, [r4, #28]
   15134:	bl	11b44 <fchdir@plt>
   15138:	mov	r5, r0
   1513c:	cmp	r0, #0
   15140:	movwne	r5, #1
   15144:	b	15158 <__assert_fail@plt+0x3524>
   15148:	mov	r0, r4
   1514c:	mvn	r1, #99	; 0x63
   15150:	mov	r2, #1
   15154:	bl	1521c <__assert_fail@plt+0x35e8>
   15158:	add	r0, r4, #60	; 0x3c
   1515c:	bl	13e64 <__assert_fail@plt+0x2230>
   15160:	mov	r0, r5
   15164:	pop	{r4, r5, fp, pc}
   15168:	push	{r4, r5, r6, r7, fp, lr}
   1516c:	add	fp, sp, #16
   15170:	mov	r6, r0
   15174:	ldrh	r0, [r0, #48]	; 0x30
   15178:	mov	r4, r1
   1517c:	movw	r1, #258	; 0x102
   15180:	tst	r0, r1
   15184:	beq	151f4 <__assert_fail@plt+0x35c0>
   15188:	mov	r0, #24
   1518c:	bl	19be8 <lchmod@@Base+0x34f0>
   15190:	mov	r5, #0
   15194:	cmp	r0, #0
   15198:	beq	15214 <__assert_fail@plt+0x35e0>
   1519c:	mov	r7, r0
   151a0:	ldrd	r0, [r4, #64]	; 0x40
   151a4:	add	r2, r7, #8
   151a8:	stm	r7, {r0, r1}
   151ac:	ldrd	r0, [r4, #160]	; 0xa0
   151b0:	stm	r2, {r0, r1, r4}
   151b4:	mov	r1, r7
   151b8:	ldr	r0, [r6, #56]	; 0x38
   151bc:	bl	16418 <__assert_fail@plt+0x47e4>
   151c0:	cmp	r0, r7
   151c4:	beq	151ec <__assert_fail@plt+0x35b8>
   151c8:	mov	r6, r0
   151cc:	mov	r0, r7
   151d0:	bl	135e0 <__assert_fail@plt+0x19ac>
   151d4:	cmp	r6, #0
   151d8:	beq	15214 <__assert_fail@plt+0x35e0>
   151dc:	ldr	r0, [r6, #16]
   151e0:	mov	r1, #2
   151e4:	strh	r1, [r4, #56]	; 0x38
   151e8:	str	r0, [r4]
   151ec:	mov	r5, #1
   151f0:	b	15214 <__assert_fail@plt+0x35e0>
   151f4:	ldr	r0, [r6, #56]	; 0x38
   151f8:	add	r1, r4, #64	; 0x40
   151fc:	bl	19d84 <lchmod@@Base+0x368c>
   15200:	cmp	r0, #0
   15204:	mov	r5, #1
   15208:	movne	r0, #2
   1520c:	strhne	r0, [r4, #56]	; 0x38
   15210:	strne	r4, [r4]
   15214:	mov	r0, r5
   15218:	pop	{r4, r5, r6, r7, fp, pc}
   1521c:	push	{r4, r5, fp, lr}
   15220:	add	fp, sp, #8
   15224:	mov	r4, r1
   15228:	ldr	r1, [r0, #32]
   1522c:	mov	r5, r0
   15230:	cmp	r1, r4
   15234:	bne	15240 <__assert_fail@plt+0x360c>
   15238:	cmn	r1, #100	; 0x64
   1523c:	bne	15280 <__assert_fail@plt+0x364c>
   15240:	cmp	r2, #0
   15244:	beq	1525c <__assert_fail@plt+0x3628>
   15248:	add	r0, r5, #60	; 0x3c
   1524c:	bl	16654 <__assert_fail@plt+0x4a20>
   15250:	cmp	r0, #0
   15254:	bge	15274 <__assert_fail@plt+0x3640>
   15258:	b	15278 <__assert_fail@plt+0x3644>
   1525c:	cmp	r1, #0
   15260:	blt	15278 <__assert_fail@plt+0x3644>
   15264:	ldr	r0, [r5, #48]	; 0x30
   15268:	ands	r0, r0, #4
   1526c:	bne	15278 <__assert_fail@plt+0x3644>
   15270:	mov	r0, r1
   15274:	bl	11be0 <close@plt>
   15278:	str	r4, [r5, #32]
   1527c:	pop	{r4, r5, fp, pc}
   15280:	bl	11bd4 <abort@plt>
   15284:	cmp	r2, #5
   15288:	movcc	r0, #0
   1528c:	strhcc	r2, [r1, #60]	; 0x3c
   15290:	bxcc	lr
   15294:	push	{fp, lr}
   15298:	mov	fp, sp
   1529c:	bl	11a60 <__errno_location@plt>
   152a0:	mov	r1, #22
   152a4:	str	r1, [r0]
   152a8:	mov	r0, #1
   152ac:	pop	{fp, pc}
   152b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152b4:	add	fp, sp, #28
   152b8:	sub	sp, sp, #4
   152bc:	mov	r5, r0
   152c0:	orr	r0, r1, #4096	; 0x1000
   152c4:	cmp	r0, #4096	; 0x1000
   152c8:	bne	15308 <__assert_fail@plt+0x36d4>
   152cc:	ldr	r6, [r5]
   152d0:	mov	r7, r1
   152d4:	bl	11a60 <__errno_location@plt>
   152d8:	mov	r4, #0
   152dc:	mov	sl, r0
   152e0:	str	r4, [r0]
   152e4:	ldrb	r0, [r5, #49]	; 0x31
   152e8:	tst	r0, #32
   152ec:	bne	15318 <__assert_fail@plt+0x36e4>
   152f0:	ldrh	r0, [r6, #56]	; 0x38
   152f4:	cmp	r0, #1
   152f8:	beq	15324 <__assert_fail@plt+0x36f0>
   152fc:	cmp	r0, #9
   15300:	ldreq	r4, [r6, #8]
   15304:	b	15318 <__assert_fail@plt+0x36e4>
   15308:	bl	11a60 <__errno_location@plt>
   1530c:	mov	r1, #22
   15310:	mov	r4, #0
   15314:	str	r1, [r0]
   15318:	mov	r0, r4
   1531c:	sub	sp, fp, #28
   15320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15324:	ldr	r0, [r5, #4]
   15328:	cmp	r0, #0
   1532c:	blne	13d00 <__assert_fail@plt+0x20cc>
   15330:	cmp	r7, #4096	; 0x1000
   15334:	mov	r9, #1
   15338:	ldreq	r0, [r5, #48]	; 0x30
   1533c:	moveq	r9, #2
   15340:	orreq	r0, r0, #4096	; 0x1000
   15344:	streq	r0, [r5, #48]	; 0x30
   15348:	ldr	r0, [r6, #48]	; 0x30
   1534c:	cmp	r0, #0
   15350:	bne	153cc <__assert_fail@plt+0x3798>
   15354:	ldr	r0, [r6, #24]
   15358:	ldrb	r0, [r0]
   1535c:	cmp	r0, #47	; 0x2f
   15360:	beq	153cc <__assert_fail@plt+0x3798>
   15364:	ldrb	r0, [r5, #48]	; 0x30
   15368:	tst	r0, #4
   1536c:	bne	153cc <__assert_fail@plt+0x3798>
   15370:	movw	r1, #44899	; 0xaf63
   15374:	mov	r0, r5
   15378:	movt	r1, #1
   1537c:	bl	13cd0 <__assert_fail@plt+0x209c>
   15380:	cmn	r0, #1
   15384:	ble	153e4 <__assert_fail@plt+0x37b0>
   15388:	mov	r8, r0
   1538c:	mov	r0, r5
   15390:	mov	r1, r9
   15394:	bl	14778 <__assert_fail@plt+0x2b44>
   15398:	str	r0, [r5, #4]
   1539c:	ldrb	r0, [r5, #49]	; 0x31
   153a0:	tst	r0, #2
   153a4:	bne	153f0 <__assert_fail@plt+0x37bc>
   153a8:	mov	r0, r8
   153ac:	bl	11b44 <fchdir@plt>
   153b0:	cmp	r0, #0
   153b4:	beq	15404 <__assert_fail@plt+0x37d0>
   153b8:	ldr	r5, [sl]
   153bc:	mov	r0, r8
   153c0:	bl	11be0 <close@plt>
   153c4:	str	r5, [sl]
   153c8:	b	15318 <__assert_fail@plt+0x36e4>
   153cc:	mov	r0, r5
   153d0:	mov	r1, r9
   153d4:	bl	14778 <__assert_fail@plt+0x2b44>
   153d8:	mov	r4, r0
   153dc:	str	r0, [r5, #4]
   153e0:	b	15318 <__assert_fail@plt+0x36e4>
   153e4:	mov	r4, #0
   153e8:	str	r4, [r5, #4]
   153ec:	b	15318 <__assert_fail@plt+0x36e4>
   153f0:	mov	r0, r5
   153f4:	mov	r1, r8
   153f8:	mov	r2, #1
   153fc:	bl	1521c <__assert_fail@plt+0x35e8>
   15400:	b	1540c <__assert_fail@plt+0x37d8>
   15404:	mov	r0, r8
   15408:	bl	11be0 <close@plt>
   1540c:	ldr	r4, [r5, #4]
   15410:	b	15318 <__assert_fail@plt+0x36e4>
   15414:	push	{fp, lr}
   15418:	mov	fp, sp
   1541c:	mov	r2, r1
   15420:	ldrd	r0, [r0, #8]
   15424:	mov	r3, #0
   15428:	bl	1a424 <lchmod@@Base+0x3d2c>
   1542c:	mov	r0, r2
   15430:	pop	{fp, pc}
   15434:	push	{r4, r5, fp, lr}
   15438:	add	fp, sp, #8
   1543c:	ldrd	r2, [r1, #8]
   15440:	ldrd	r4, [r0, #8]
   15444:	eor	r3, r5, r3
   15448:	eor	r2, r4, r2
   1544c:	orrs	r2, r2, r3
   15450:	mov	r2, #0
   15454:	bne	15474 <__assert_fail@plt+0x3840>
   15458:	ldrd	r2, [r1]
   1545c:	ldrd	r0, [r0]
   15460:	eor	r1, r1, r3
   15464:	eor	r0, r0, r2
   15468:	orr	r0, r0, r1
   1546c:	clz	r0, r0
   15470:	lsr	r2, r0, #5
   15474:	mov	r0, r2
   15478:	pop	{r4, r5, fp, pc}
   1547c:	push	{r4, r5, fp, lr}
   15480:	add	fp, sp, #8
   15484:	ldr	r0, [r0]
   15488:	ldrd	r2, [r0, #160]	; 0xa0
   1548c:	ldr	r0, [r1]
   15490:	ldrd	r4, [r0, #160]	; 0xa0
   15494:	mov	r0, #0
   15498:	subs	r1, r4, r2
   1549c:	sbcs	r1, r5, r3
   154a0:	movwcc	r0, #1
   154a4:	subs	r1, r2, r4
   154a8:	sbcs	r1, r3, r5
   154ac:	subcc	r0, r0, #1
   154b0:	pop	{r4, r5, fp, pc}
   154b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154b8:	add	fp, sp, #24
   154bc:	sub	sp, sp, #96	; 0x60
   154c0:	ldr	r7, [r0, #44]	; 0x2c
   154c4:	mov	r4, r0
   154c8:	mov	r5, #0
   154cc:	ldrb	r0, [r7, #49]	; 0x31
   154d0:	tst	r0, #2
   154d4:	beq	155c8 <__assert_fail@plt+0x3994>
   154d8:	ldr	r6, [r7, #52]	; 0x34
   154dc:	mov	r9, r1
   154e0:	cmp	r6, #0
   154e4:	bne	15524 <__assert_fail@plt+0x38f0>
   154e8:	movw	r0, #13792	; 0x35e0
   154ec:	movw	r2, #21972	; 0x55d4
   154f0:	movw	r3, #22004	; 0x55f4
   154f4:	mov	r1, #0
   154f8:	mov	r8, #0
   154fc:	movt	r0, #1
   15500:	movt	r2, #1
   15504:	movt	r3, #1
   15508:	str	r0, [sp]
   1550c:	mov	r0, #13
   15510:	bl	15a90 <__assert_fail@plt+0x3e5c>
   15514:	mov	r6, r0
   15518:	cmp	r0, #0
   1551c:	str	r0, [r7, #52]	; 0x34
   15520:	beq	15554 <__assert_fail@plt+0x3920>
   15524:	ldrd	r0, [r4, #64]	; 0x40
   15528:	str	r1, [sp, #12]
   1552c:	str	r0, [sp, #8]
   15530:	add	r1, sp, #8
   15534:	mov	r0, r6
   15538:	bl	157f0 <__assert_fail@plt+0x3bbc>
   1553c:	cmp	r0, #0
   15540:	beq	1554c <__assert_fail@plt+0x3918>
   15544:	ldr	r5, [r0, #8]
   15548:	b	155c8 <__assert_fail@plt+0x3994>
   1554c:	mov	r8, #1
   15550:	b	15558 <__assert_fail@plt+0x3924>
   15554:	mov	r6, #0
   15558:	cmp	r9, #0
   1555c:	blt	155c8 <__assert_fail@plt+0x3994>
   15560:	add	r1, sp, #8
   15564:	mov	r0, r9
   15568:	bl	117e4 <fstatfs64@plt>
   1556c:	cmp	r0, #0
   15570:	bne	155c8 <__assert_fail@plt+0x3994>
   15574:	cmp	r8, #0
   15578:	beq	155c4 <__assert_fail@plt+0x3990>
   1557c:	mov	r0, #16
   15580:	bl	19be8 <lchmod@@Base+0x34f0>
   15584:	cmp	r0, #0
   15588:	beq	155c4 <__assert_fail@plt+0x3990>
   1558c:	mov	r5, r0
   15590:	ldrd	r0, [r4, #64]	; 0x40
   15594:	ldr	r2, [sp, #8]
   15598:	stm	r5, {r0, r1, r2}
   1559c:	mov	r0, r6
   155a0:	mov	r1, r5
   155a4:	bl	16418 <__assert_fail@plt+0x47e4>
   155a8:	cmp	r0, #0
   155ac:	beq	155bc <__assert_fail@plt+0x3988>
   155b0:	cmp	r0, r5
   155b4:	beq	155c4 <__assert_fail@plt+0x3990>
   155b8:	bl	11bd4 <abort@plt>
   155bc:	mov	r0, r5
   155c0:	bl	135e0 <__assert_fail@plt+0x19ac>
   155c4:	ldr	r5, [sp, #8]
   155c8:	mov	r0, r5
   155cc:	sub	sp, fp, #24
   155d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   155d4:	push	{fp, lr}
   155d8:	mov	fp, sp
   155dc:	mov	r2, r1
   155e0:	ldrd	r0, [r0]
   155e4:	mov	r3, #0
   155e8:	bl	1a424 <lchmod@@Base+0x3d2c>
   155ec:	mov	r0, r2
   155f0:	pop	{fp, pc}
   155f4:	ldrd	r2, [r1]
   155f8:	ldrd	r0, [r0]
   155fc:	eor	r1, r1, r3
   15600:	eor	r0, r0, r2
   15604:	orr	r0, r0, r1
   15608:	clz	r0, r0
   1560c:	lsr	r0, r0, #5
   15610:	bx	lr
   15614:	andeq	r0, r0, r0
   15618:	ldr	r0, [r0, #8]
   1561c:	bx	lr
   15620:	ldr	r0, [r0, #12]
   15624:	bx	lr
   15628:	ldr	r0, [r0, #16]
   1562c:	bx	lr
   15630:	ldm	r0, {r2, ip}
   15634:	mov	r0, #0
   15638:	cmp	r2, ip
   1563c:	bxcs	lr
   15640:	mov	r0, #0
   15644:	ldr	r1, [r2]
   15648:	cmp	r1, #0
   1564c:	beq	15670 <__assert_fail@plt+0x3a3c>
   15650:	mov	r3, #0
   15654:	mov	r1, r2
   15658:	ldr	r1, [r1, #4]
   1565c:	add	r3, r3, #1
   15660:	cmp	r1, #0
   15664:	bne	15658 <__assert_fail@plt+0x3a24>
   15668:	cmp	r3, r0
   1566c:	movhi	r0, r3
   15670:	add	r2, r2, #8
   15674:	cmp	r2, ip
   15678:	bcc	15644 <__assert_fail@plt+0x3a10>
   1567c:	bx	lr
   15680:	push	{fp, lr}
   15684:	mov	fp, sp
   15688:	ldm	r0, {r3, ip}
   1568c:	mov	lr, #0
   15690:	mov	r1, #0
   15694:	cmp	r3, ip
   15698:	bcs	156d4 <__assert_fail@plt+0x3aa0>
   1569c:	mov	r1, #0
   156a0:	mov	lr, #0
   156a4:	ldr	r2, [r3]
   156a8:	cmp	r2, #0
   156ac:	beq	156c8 <__assert_fail@plt+0x3a94>
   156b0:	mov	r2, r3
   156b4:	ldr	r2, [r2, #4]
   156b8:	add	r1, r1, #1
   156bc:	cmp	r2, #0
   156c0:	bne	156b4 <__assert_fail@plt+0x3a80>
   156c4:	add	lr, lr, #1
   156c8:	add	r3, r3, #8
   156cc:	cmp	r3, ip
   156d0:	bcc	156a4 <__assert_fail@plt+0x3a70>
   156d4:	ldr	r2, [r0, #12]
   156d8:	cmp	lr, r2
   156dc:	bne	156f4 <__assert_fail@plt+0x3ac0>
   156e0:	ldr	r2, [r0, #16]
   156e4:	mov	r0, #1
   156e8:	cmp	r1, r2
   156ec:	movne	r0, #0
   156f0:	pop	{fp, pc}
   156f4:	mov	r0, #0
   156f8:	pop	{fp, pc}
   156fc:	nop	{0}
   15700:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15704:	add	fp, sp, #24
   15708:	sub	sp, sp, #8
   1570c:	ldr	r6, [r0]
   15710:	ldmib	r0, {r2, r7, r8}
   15714:	ldr	r3, [r0, #16]
   15718:	mov	r4, r1
   1571c:	mov	r5, #0
   15720:	cmp	r6, r2
   15724:	bcs	15764 <__assert_fail@plt+0x3b30>
   15728:	mov	r5, #0
   1572c:	ldr	r0, [r6]
   15730:	cmp	r0, #0
   15734:	beq	15758 <__assert_fail@plt+0x3b24>
   15738:	mov	r0, #0
   1573c:	mov	r1, r6
   15740:	ldr	r1, [r1, #4]
   15744:	add	r0, r0, #1
   15748:	cmp	r1, #0
   1574c:	bne	15740 <__assert_fail@plt+0x3b0c>
   15750:	cmp	r0, r5
   15754:	movhi	r5, r0
   15758:	add	r6, r6, #8
   1575c:	cmp	r6, r2
   15760:	bcc	1572c <__assert_fail@plt+0x3af8>
   15764:	movw	r2, #44960	; 0xafa0
   15768:	mov	r0, r4
   1576c:	mov	r1, #1
   15770:	movt	r2, #1
   15774:	bl	11ab4 <__fprintf_chk@plt>
   15778:	movw	r2, #44984	; 0xafb8
   1577c:	mov	r0, r4
   15780:	mov	r1, #1
   15784:	mov	r3, r7
   15788:	movt	r2, #1
   1578c:	bl	11ab4 <__fprintf_chk@plt>
   15790:	vldr	d16, [pc, #80]	; 157e8 <__assert_fail@plt+0x3bb4>
   15794:	vmov	s0, r8
   15798:	movw	r2, #45008	; 0xafd0
   1579c:	mov	r0, r4
   157a0:	mov	r1, #1
   157a4:	mov	r3, r8
   157a8:	vcvt.f64.u32	d17, s0
   157ac:	vmov	s0, r7
   157b0:	movt	r2, #1
   157b4:	vcvt.f64.u32	d18, s0
   157b8:	vmul.f64	d16, d17, d16
   157bc:	vdiv.f64	d16, d16, d18
   157c0:	vstr	d16, [sp]
   157c4:	bl	11ab4 <__fprintf_chk@plt>
   157c8:	movw	r2, #45041	; 0xaff1
   157cc:	mov	r0, r4
   157d0:	mov	r1, #1
   157d4:	mov	r3, r5
   157d8:	movt	r2, #1
   157dc:	sub	sp, fp, #24
   157e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   157e4:	b	11ab4 <__fprintf_chk@plt>
   157e8:	andeq	r0, r0, r0
   157ec:	subsmi	r0, r9, r0
   157f0:	push	{r4, r5, r6, r7, fp, lr}
   157f4:	add	fp, sp, #16
   157f8:	mov	r4, r1
   157fc:	ldr	r1, [r0, #8]
   15800:	ldr	r2, [r0, #24]
   15804:	mov	r5, r0
   15808:	mov	r0, r4
   1580c:	blx	r2
   15810:	ldr	r1, [r5, #8]
   15814:	cmp	r0, r1
   15818:	bcs	15878 <__assert_fail@plt+0x3c44>
   1581c:	ldr	r7, [r5]
   15820:	mov	r6, #0
   15824:	ldr	r1, [r7, r0, lsl #3]!
   15828:	cmp	r1, #0
   1582c:	cmpne	r7, #0
   15830:	bne	15860 <__assert_fail@plt+0x3c2c>
   15834:	mov	r0, r6
   15838:	pop	{r4, r5, r6, r7, fp, pc}
   1583c:	ldr	r2, [r5, #28]
   15840:	mov	r0, r4
   15844:	blx	r2
   15848:	cmp	r0, #0
   1584c:	bne	15870 <__assert_fail@plt+0x3c3c>
   15850:	ldr	r7, [r7, #4]
   15854:	cmp	r7, #0
   15858:	beq	15834 <__assert_fail@plt+0x3c00>
   1585c:	ldr	r1, [r7]
   15860:	cmp	r1, r4
   15864:	bne	1583c <__assert_fail@plt+0x3c08>
   15868:	mov	r6, r4
   1586c:	b	15834 <__assert_fail@plt+0x3c00>
   15870:	ldr	r6, [r7]
   15874:	b	15834 <__assert_fail@plt+0x3c00>
   15878:	bl	11bd4 <abort@plt>
   1587c:	ldr	r1, [r0, #16]
   15880:	cmp	r1, #0
   15884:	moveq	r0, #0
   15888:	bxeq	lr
   1588c:	ldm	r0, {r1, r2}
   15890:	b	158a0 <__assert_fail@plt+0x3c6c>
   15894:	ldr	r0, [r1], #8
   15898:	cmp	r0, #0
   1589c:	bxne	lr
   158a0:	cmp	r1, r2
   158a4:	bcc	15894 <__assert_fail@plt+0x3c60>
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	bl	11bd4 <abort@plt>
   158b4:	push	{r4, r5, fp, lr}
   158b8:	add	fp, sp, #8
   158bc:	mov	r5, r1
   158c0:	ldr	r1, [r0, #8]
   158c4:	ldr	r2, [r0, #24]
   158c8:	mov	r4, r0
   158cc:	mov	r0, r5
   158d0:	blx	r2
   158d4:	ldr	r1, [r4, #8]
   158d8:	cmp	r0, r1
   158dc:	bcs	15938 <__assert_fail@plt+0x3d04>
   158e0:	ldr	r1, [r4]
   158e4:	add	r2, r1, r0, lsl #3
   158e8:	ldr	r3, [r2]
   158ec:	ldr	r2, [r2, #4]
   158f0:	cmp	r3, r5
   158f4:	beq	15904 <__assert_fail@plt+0x3cd0>
   158f8:	cmp	r2, #0
   158fc:	bne	158e8 <__assert_fail@plt+0x3cb4>
   15900:	b	15910 <__assert_fail@plt+0x3cdc>
   15904:	cmp	r2, #0
   15908:	ldrne	r0, [r2]
   1590c:	popne	{r4, r5, fp, pc}
   15910:	ldr	r2, [r4, #4]
   15914:	add	r0, r1, r0, lsl #3
   15918:	add	r1, r0, #8
   1591c:	cmp	r1, r2
   15920:	movcs	r0, #0
   15924:	popcs	{r4, r5, fp, pc}
   15928:	ldr	r0, [r1], #8
   1592c:	cmp	r0, #0
   15930:	popne	{r4, r5, fp, pc}
   15934:	b	1591c <__assert_fail@plt+0x3ce8>
   15938:	bl	11bd4 <abort@plt>
   1593c:	push	{r4, r5, fp, lr}
   15940:	add	fp, sp, #8
   15944:	ldm	r0, {r5, lr}
   15948:	mov	ip, r0
   1594c:	mov	r0, #0
   15950:	cmp	r5, lr
   15954:	bcs	159a0 <__assert_fail@plt+0x3d6c>
   15958:	mov	r0, #0
   1595c:	ldr	r3, [r5]
   15960:	cmp	r3, #0
   15964:	cmpne	r5, #0
   15968:	beq	15994 <__assert_fail@plt+0x3d60>
   1596c:	mov	r3, r5
   15970:	cmp	r0, r2
   15974:	popcs	{r4, r5, fp, pc}
   15978:	ldr	r4, [r3]
   1597c:	str	r4, [r1, r0, lsl #2]
   15980:	add	r0, r0, #1
   15984:	ldr	r3, [r3, #4]
   15988:	cmp	r3, #0
   1598c:	bne	15970 <__assert_fail@plt+0x3d3c>
   15990:	ldr	lr, [ip, #4]
   15994:	add	r5, r5, #8
   15998:	cmp	r5, lr
   1599c:	bcc	1595c <__assert_fail@plt+0x3d28>
   159a0:	pop	{r4, r5, fp, pc}
   159a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   159a8:	add	fp, sp, #24
   159ac:	mov	r5, r1
   159b0:	ldr	r4, [r0]
   159b4:	ldr	r1, [r0, #4]
   159b8:	mov	r6, #0
   159bc:	cmp	r4, r1
   159c0:	bcs	15a34 <__assert_fail@plt+0x3e00>
   159c4:	mov	r9, r2
   159c8:	mov	r8, r0
   159cc:	mov	r6, #0
   159d0:	b	15a18 <__assert_fail@plt+0x3de4>
   159d4:	mov	r1, r9
   159d8:	blx	r5
   159dc:	cmp	r0, #0
   159e0:	beq	15a34 <__assert_fail@plt+0x3e00>
   159e4:	mov	r7, r4
   159e8:	ldr	r7, [r7, #4]
   159ec:	add	r6, r6, #1
   159f0:	cmp	r7, #0
   159f4:	beq	15a10 <__assert_fail@plt+0x3ddc>
   159f8:	ldr	r0, [r7]
   159fc:	mov	r1, r9
   15a00:	blx	r5
   15a04:	cmp	r0, #0
   15a08:	bne	159e8 <__assert_fail@plt+0x3db4>
   15a0c:	b	15a34 <__assert_fail@plt+0x3e00>
   15a10:	ldr	r1, [r8, #4]
   15a14:	b	15a28 <__assert_fail@plt+0x3df4>
   15a18:	ldr	r0, [r4]
   15a1c:	cmp	r0, #0
   15a20:	cmpne	r4, #0
   15a24:	bne	159d4 <__assert_fail@plt+0x3da0>
   15a28:	add	r4, r4, #8
   15a2c:	cmp	r4, r1
   15a30:	bcc	15a18 <__assert_fail@plt+0x3de4>
   15a34:	mov	r0, r6
   15a38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a3c:	ldrb	r2, [r0]
   15a40:	cmp	r2, #0
   15a44:	moveq	r0, #0
   15a48:	bxeq	lr
   15a4c:	add	r3, r0, #1
   15a50:	mov	r0, #0
   15a54:	rsb	r0, r0, r0, lsl #5
   15a58:	uxtab	r0, r0, r2
   15a5c:	udiv	r2, r0, r1
   15a60:	mls	r0, r2, r1, r0
   15a64:	ldrb	r2, [r3], #1
   15a68:	cmp	r2, #0
   15a6c:	bne	15a54 <__assert_fail@plt+0x3e20>
   15a70:	bx	lr
   15a74:	movw	r1, #45072	; 0xb010
   15a78:	movt	r1, #1
   15a7c:	vld1.32	{d16-d17}, [r1]!
   15a80:	ldr	r1, [r1]
   15a84:	vst1.32	{d16-d17}, [r0]!
   15a88:	str	r1, [r0]
   15a8c:	bx	lr
   15a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a94:	add	fp, sp, #28
   15a98:	sub	sp, sp, #4
   15a9c:	movw	sl, #23428	; 0x5b84
   15aa0:	movw	r5, #23408	; 0x5b70
   15aa4:	cmp	r3, #0
   15aa8:	mov	r8, r0
   15aac:	mov	r0, #40	; 0x28
   15ab0:	mov	r7, r1
   15ab4:	movt	sl, #1
   15ab8:	movt	r5, #1
   15abc:	movne	sl, r3
   15ac0:	cmp	r2, #0
   15ac4:	movne	r5, r2
   15ac8:	bl	19be8 <lchmod@@Base+0x34f0>
   15acc:	mov	r9, #0
   15ad0:	cmp	r0, #0
   15ad4:	beq	15b64 <__assert_fail@plt+0x3f30>
   15ad8:	movw	r6, #45072	; 0xb010
   15adc:	cmp	r7, #0
   15ae0:	mov	r4, r0
   15ae4:	movt	r6, #1
   15ae8:	movne	r6, r7
   15aec:	str	r6, [r0, #20]
   15af0:	bl	15b94 <__assert_fail@plt+0x3f60>
   15af4:	cmp	r0, #0
   15af8:	beq	15b5c <__assert_fail@plt+0x3f28>
   15afc:	mov	r0, r8
   15b00:	mov	r1, r6
   15b04:	bl	15c40 <__assert_fail@plt+0x400c>
   15b08:	cmp	r0, #0
   15b0c:	str	r0, [r4, #8]
   15b10:	beq	15b5c <__assert_fail@plt+0x3f28>
   15b14:	mov	r1, #8
   15b18:	bl	19b94 <lchmod@@Base+0x349c>
   15b1c:	cmp	r0, #0
   15b20:	str	r0, [r4]
   15b24:	beq	15b5c <__assert_fail@plt+0x3f28>
   15b28:	ldr	r1, [fp, #8]
   15b2c:	mov	r2, #0
   15b30:	mov	r9, r4
   15b34:	str	r2, [r4, #12]
   15b38:	str	r2, [r4, #16]
   15b3c:	str	r5, [r4, #24]
   15b40:	str	sl, [r4, #28]
   15b44:	str	r1, [r4, #32]
   15b48:	str	r2, [r4, #36]	; 0x24
   15b4c:	ldr	r1, [r4, #8]
   15b50:	add	r0, r0, r1, lsl #3
   15b54:	str	r0, [r4, #4]
   15b58:	b	15b64 <__assert_fail@plt+0x3f30>
   15b5c:	mov	r0, r4
   15b60:	bl	135e0 <__assert_fail@plt+0x19ac>
   15b64:	mov	r0, r9
   15b68:	sub	sp, fp, #28
   15b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b70:	ror	r2, r0, #3
   15b74:	udiv	r2, r2, r1
   15b78:	mul	r1, r2, r1
   15b7c:	rsb	r0, r1, r0, ror #3
   15b80:	bx	lr
   15b84:	sub	r0, r0, r1
   15b88:	clz	r0, r0
   15b8c:	lsr	r0, r0, #5
   15b90:	bx	lr
   15b94:	ldr	r3, [r0, #20]
   15b98:	movw	r2, #45072	; 0xb010
   15b9c:	mov	r1, r0
   15ba0:	mov	r0, #1
   15ba4:	movt	r2, #1
   15ba8:	cmp	r3, r2
   15bac:	beq	15c30 <__assert_fail@plt+0x3ffc>
   15bb0:	vldr	s2, [pc, #124]	; 15c34 <__assert_fail@plt+0x4000>
   15bb4:	vldr	s0, [r3, #8]
   15bb8:	vcmpe.f32	s0, s2
   15bbc:	vmrs	APSR_nzcv, fpscr
   15bc0:	ble	15c28 <__assert_fail@plt+0x3ff4>
   15bc4:	vldr	s4, [pc, #108]	; 15c38 <__assert_fail@plt+0x4004>
   15bc8:	vcmpe.f32	s0, s4
   15bcc:	vmrs	APSR_nzcv, fpscr
   15bd0:	bpl	15c28 <__assert_fail@plt+0x3ff4>
   15bd4:	vldr	s4, [pc, #96]	; 15c3c <__assert_fail@plt+0x4008>
   15bd8:	vldr	s6, [r3, #12]
   15bdc:	vcmpe.f32	s6, s4
   15be0:	vmrs	APSR_nzcv, fpscr
   15be4:	ble	15c28 <__assert_fail@plt+0x3ff4>
   15be8:	vldr	s4, [r3]
   15bec:	vcmpe.f32	s4, #0.0
   15bf0:	vmrs	APSR_nzcv, fpscr
   15bf4:	blt	15c28 <__assert_fail@plt+0x3ff4>
   15bf8:	vadd.f32	s2, s4, s2
   15bfc:	vcmpe.f32	s2, s0
   15c00:	vmrs	APSR_nzcv, fpscr
   15c04:	bpl	15c28 <__assert_fail@plt+0x3ff4>
   15c08:	vldr	s0, [r3, #4]
   15c0c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   15c10:	vcmpe.f32	s0, s4
   15c14:	vmrs	APSR_nzcv, fpscr
   15c18:	bhi	15c28 <__assert_fail@plt+0x3ff4>
   15c1c:	vcmpe.f32	s2, s0
   15c20:	vmrs	APSR_nzcv, fpscr
   15c24:	bxmi	lr
   15c28:	mov	r0, #0
   15c2c:	str	r2, [r1, #20]
   15c30:	bx	lr
   15c34:	stclcc	12, cr12, [ip, #820]	; 0x334
   15c38:	svccc	0x00666666
   15c3c:	svccc	0x008ccccd
   15c40:	ldrb	r2, [r1, #16]
   15c44:	cmp	r2, #0
   15c48:	bne	15c78 <__assert_fail@plt+0x4044>
   15c4c:	vldr	s0, [r1, #8]
   15c50:	vldr	s4, [pc, #160]	; 15cf8 <__assert_fail@plt+0x40c4>
   15c54:	vmov	s2, r0
   15c58:	mov	r0, #0
   15c5c:	vcvt.f32.u32	s2, s2
   15c60:	vdiv.f32	s2, s2, s0
   15c64:	vcmpe.f32	s2, s4
   15c68:	vcvt.u32.f32	s0, s2
   15c6c:	vmrs	APSR_nzcv, fpscr
   15c70:	bxge	lr
   15c74:	vmov	r0, s0
   15c78:	cmp	r0, #10
   15c7c:	movls	r0, #10
   15c80:	orr	r0, r0, #1
   15c84:	b	15cdc <__assert_fail@plt+0x40a8>
   15c88:	mov	r1, #3
   15c8c:	cmp	r0, #10
   15c90:	bcc	15cc8 <__assert_fail@plt+0x4094>
   15c94:	mov	r1, #3
   15c98:	mov	ip, #9
   15c9c:	mov	r2, #12
   15ca0:	udiv	r3, r0, r1
   15ca4:	mls	r3, r3, r1, r0
   15ca8:	cmp	r3, #0
   15cac:	beq	15cc8 <__assert_fail@plt+0x4094>
   15cb0:	add	r3, ip, r2
   15cb4:	add	r2, r2, #8
   15cb8:	add	r1, r1, #2
   15cbc:	add	ip, r3, #4
   15cc0:	cmp	ip, r0
   15cc4:	bcc	15ca0 <__assert_fail@plt+0x406c>
   15cc8:	udiv	r2, r0, r1
   15ccc:	mls	r1, r2, r1, r0
   15cd0:	cmp	r1, #0
   15cd4:	bne	15cec <__assert_fail@plt+0x40b8>
   15cd8:	add	r0, r0, #2
   15cdc:	cmn	r0, #1
   15ce0:	bne	15c88 <__assert_fail@plt+0x4054>
   15ce4:	mov	r0, #0
   15ce8:	bx	lr
   15cec:	cmp	r0, #536870912	; 0x20000000
   15cf0:	movcs	r0, #0
   15cf4:	bx	lr
   15cf8:	svcmi	0x00800000
   15cfc:	push	{r4, r5, r6, r7, fp, lr}
   15d00:	add	fp, sp, #16
   15d04:	mov	r4, r0
   15d08:	ldr	r5, [r0]
   15d0c:	ldr	r0, [r0, #4]
   15d10:	cmp	r5, r0
   15d14:	bcs	15dac <__assert_fail@plt+0x4178>
   15d18:	mov	r6, #0
   15d1c:	ldr	r1, [r5]
   15d20:	cmp	r1, #0
   15d24:	beq	15da0 <__assert_fail@plt+0x416c>
   15d28:	ldr	r1, [r4, #32]
   15d2c:	ldr	r7, [r5, #4]
   15d30:	cmp	r1, #0
   15d34:	mov	r0, r1
   15d38:	movwne	r0, #1
   15d3c:	cmp	r7, #0
   15d40:	beq	15d84 <__assert_fail@plt+0x4150>
   15d44:	tst	r0, #1
   15d48:	beq	15d58 <__assert_fail@plt+0x4124>
   15d4c:	ldr	r0, [r7]
   15d50:	blx	r1
   15d54:	ldr	r1, [r4, #32]
   15d58:	str	r6, [r7]
   15d5c:	cmp	r1, #0
   15d60:	ldr	r0, [r4, #36]	; 0x24
   15d64:	ldr	r2, [r7, #4]
   15d68:	str	r0, [r7, #4]
   15d6c:	mov	r0, r1
   15d70:	str	r7, [r4, #36]	; 0x24
   15d74:	mov	r7, r2
   15d78:	movwne	r0, #1
   15d7c:	cmp	r2, #0
   15d80:	bne	15d44 <__assert_fail@plt+0x4110>
   15d84:	cmp	r0, #0
   15d88:	beq	15d94 <__assert_fail@plt+0x4160>
   15d8c:	ldr	r0, [r5]
   15d90:	blx	r1
   15d94:	str	r6, [r5]
   15d98:	str	r6, [r5, #4]
   15d9c:	ldr	r0, [r4, #4]
   15da0:	add	r5, r5, #8
   15da4:	cmp	r5, r0
   15da8:	bcc	15d1c <__assert_fail@plt+0x40e8>
   15dac:	mov	r0, #0
   15db0:	str	r0, [r4, #12]
   15db4:	str	r0, [r4, #16]
   15db8:	pop	{r4, r5, r6, r7, fp, pc}
   15dbc:	push	{r4, r5, r6, sl, fp, lr}
   15dc0:	add	fp, sp, #16
   15dc4:	mov	r4, r0
   15dc8:	ldr	r0, [r0, #32]
   15dcc:	cmp	r0, #0
   15dd0:	ldrne	r0, [r4, #16]
   15dd4:	cmpne	r0, #0
   15dd8:	beq	15e30 <__assert_fail@plt+0x41fc>
   15ddc:	ldr	r5, [r4]
   15de0:	ldr	r1, [r4, #4]
   15de4:	b	15e28 <__assert_fail@plt+0x41f4>
   15de8:	ldr	r0, [r5]
   15dec:	cmp	r0, #0
   15df0:	cmpne	r5, #0
   15df4:	beq	15e24 <__assert_fail@plt+0x41f0>
   15df8:	ldr	r1, [r4, #32]
   15dfc:	blx	r1
   15e00:	ldr	r6, [r5, #4]
   15e04:	b	15e18 <__assert_fail@plt+0x41e4>
   15e08:	ldr	r1, [r4, #32]
   15e0c:	ldr	r0, [r6]
   15e10:	blx	r1
   15e14:	ldr	r6, [r6, #4]
   15e18:	cmp	r6, #0
   15e1c:	bne	15e08 <__assert_fail@plt+0x41d4>
   15e20:	ldr	r1, [r4, #4]
   15e24:	add	r5, r5, #8
   15e28:	cmp	r5, r1
   15e2c:	bcc	15de8 <__assert_fail@plt+0x41b4>
   15e30:	ldr	r5, [r4]
   15e34:	ldr	r1, [r4, #4]
   15e38:	b	15e64 <__assert_fail@plt+0x4230>
   15e3c:	ldr	r0, [r5, #4]
   15e40:	cmp	r0, #0
   15e44:	beq	15e60 <__assert_fail@plt+0x422c>
   15e48:	ldr	r6, [r0, #4]
   15e4c:	bl	135e0 <__assert_fail@plt+0x19ac>
   15e50:	cmp	r6, #0
   15e54:	mov	r0, r6
   15e58:	bne	15e48 <__assert_fail@plt+0x4214>
   15e5c:	ldr	r1, [r4, #4]
   15e60:	add	r5, r5, #8
   15e64:	cmp	r5, r1
   15e68:	bcc	15e3c <__assert_fail@plt+0x4208>
   15e6c:	ldr	r0, [r4, #36]	; 0x24
   15e70:	cmp	r0, #0
   15e74:	beq	15e8c <__assert_fail@plt+0x4258>
   15e78:	ldr	r5, [r0, #4]
   15e7c:	bl	135e0 <__assert_fail@plt+0x19ac>
   15e80:	cmp	r5, #0
   15e84:	mov	r0, r5
   15e88:	bne	15e78 <__assert_fail@plt+0x4244>
   15e8c:	ldr	r0, [r4]
   15e90:	bl	135e0 <__assert_fail@plt+0x19ac>
   15e94:	mov	r0, r4
   15e98:	pop	{r4, r5, r6, sl, fp, lr}
   15e9c:	b	135e0 <__assert_fail@plt+0x19ac>
   15ea0:	push	{r4, r5, r6, r7, fp, lr}
   15ea4:	add	fp, sp, #16
   15ea8:	sub	sp, sp, #40	; 0x28
   15eac:	mov	r7, r0
   15eb0:	mov	r2, r1
   15eb4:	mov	r4, r0
   15eb8:	ldr	r1, [r7, #20]!
   15ebc:	mov	r0, r2
   15ec0:	bl	15c40 <__assert_fail@plt+0x400c>
   15ec4:	mov	r5, #0
   15ec8:	cmp	r0, #0
   15ecc:	beq	15f60 <__assert_fail@plt+0x432c>
   15ed0:	mov	r6, r0
   15ed4:	ldr	r0, [r4, #8]
   15ed8:	cmp	r6, r0
   15edc:	beq	15f5c <__assert_fail@plt+0x4328>
   15ee0:	mov	r0, r6
   15ee4:	mov	r1, #8
   15ee8:	bl	19b94 <lchmod@@Base+0x349c>
   15eec:	cmp	r0, #0
   15ef0:	str	r0, [sp]
   15ef4:	beq	15f60 <__assert_fail@plt+0x432c>
   15ef8:	mov	r1, #0
   15efc:	add	r0, r0, r6, lsl #3
   15f00:	str	r6, [sp, #8]
   15f04:	mov	r5, sp
   15f08:	mov	r2, #0
   15f0c:	str	r1, [sp, #12]
   15f10:	str	r1, [sp, #16]
   15f14:	str	r0, [sp, #4]
   15f18:	add	r0, r5, #20
   15f1c:	mov	r1, r4
   15f20:	vld1.32	{d16-d17}, [r7]
   15f24:	vst1.32	{d16-d17}, [r0]
   15f28:	ldr	r0, [r4, #36]	; 0x24
   15f2c:	str	r0, [sp, #36]	; 0x24
   15f30:	mov	r0, r5
   15f34:	bl	15fb8 <__assert_fail@plt+0x4384>
   15f38:	cmp	r0, #0
   15f3c:	beq	15f6c <__assert_fail@plt+0x4338>
   15f40:	ldr	r0, [r4]
   15f44:	bl	135e0 <__assert_fail@plt+0x19ac>
   15f48:	mov	r0, #36	; 0x24
   15f4c:	vld1.32	{d16-d17}, [r5], r0
   15f50:	vst1.32	{d16-d17}, [r4], r0
   15f54:	ldr	r0, [r5]
   15f58:	str	r0, [r4]
   15f5c:	mov	r5, #1
   15f60:	mov	r0, r5
   15f64:	sub	sp, fp, #16
   15f68:	pop	{r4, r5, r6, r7, fp, pc}
   15f6c:	ldr	r0, [sp, #36]	; 0x24
   15f70:	mov	r1, sp
   15f74:	mov	r2, #1
   15f78:	str	r0, [r4, #36]	; 0x24
   15f7c:	mov	r0, r4
   15f80:	bl	15fb8 <__assert_fail@plt+0x4384>
   15f84:	cmp	r0, #0
   15f88:	beq	15fb4 <__assert_fail@plt+0x4380>
   15f8c:	mov	r1, sp
   15f90:	mov	r0, r4
   15f94:	mov	r2, #0
   15f98:	mov	r5, #0
   15f9c:	bl	15fb8 <__assert_fail@plt+0x4384>
   15fa0:	cmp	r0, #0
   15fa4:	beq	15fb4 <__assert_fail@plt+0x4380>
   15fa8:	ldr	r0, [sp]
   15fac:	bl	135e0 <__assert_fail@plt+0x19ac>
   15fb0:	b	15f60 <__assert_fail@plt+0x432c>
   15fb4:	bl	11bd4 <abort@plt>
   15fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fbc:	add	fp, sp, #28
   15fc0:	sub	sp, sp, #12
   15fc4:	ldr	sl, [r1]
   15fc8:	str	r1, [sp, #8]
   15fcc:	ldr	r1, [r1, #4]
   15fd0:	mov	r7, r0
   15fd4:	mov	r0, #1
   15fd8:	str	r2, [sp, #4]
   15fdc:	cmp	sl, r1
   15fe0:	bcs	1613c <__assert_fail@plt+0x4508>
   15fe4:	add	r8, r7, #36	; 0x24
   15fe8:	mov	r9, #0
   15fec:	ldr	r4, [sl]
   15ff0:	cmp	r4, #0
   15ff4:	beq	16124 <__assert_fail@plt+0x44f0>
   15ff8:	ldr	r5, [sl, #4]
   15ffc:	cmp	r5, #0
   16000:	beq	16078 <__assert_fail@plt+0x4444>
   16004:	ldr	r1, [r7, #8]
   16008:	ldr	r4, [r5]
   1600c:	ldr	r2, [r7, #24]
   16010:	mov	r0, r4
   16014:	blx	r2
   16018:	ldr	r1, [r7, #8]
   1601c:	cmp	r0, r1
   16020:	bcs	1614c <__assert_fail@plt+0x4518>
   16024:	ldr	r3, [r7]
   16028:	ldr	r2, [r5, #4]
   1602c:	ldr	r6, [r3, r0, lsl #3]
   16030:	cmp	r6, #0
   16034:	beq	16044 <__assert_fail@plt+0x4410>
   16038:	add	r0, r3, r0, lsl #3
   1603c:	add	r0, r0, #4
   16040:	b	1605c <__assert_fail@plt+0x4428>
   16044:	str	r4, [r3, r0, lsl #3]
   16048:	ldr	r0, [r7, #12]
   1604c:	add	r0, r0, #1
   16050:	str	r0, [r7, #12]
   16054:	mov	r0, r8
   16058:	str	r9, [r5]
   1605c:	ldr	r3, [r0]
   16060:	cmp	r2, #0
   16064:	str	r3, [r5, #4]
   16068:	str	r5, [r0]
   1606c:	mov	r5, r2
   16070:	bne	16008 <__assert_fail@plt+0x43d4>
   16074:	ldr	r4, [sl]
   16078:	ldr	r0, [sp, #4]
   1607c:	str	r9, [sl, #4]
   16080:	cmp	r0, #0
   16084:	bne	16124 <__assert_fail@plt+0x44f0>
   16088:	ldr	r1, [r7, #8]
   1608c:	ldr	r2, [r7, #24]
   16090:	mov	r0, r4
   16094:	blx	r2
   16098:	mov	r5, r0
   1609c:	ldr	r0, [r7, #8]
   160a0:	cmp	r5, r0
   160a4:	bcs	1614c <__assert_fail@plt+0x4518>
   160a8:	ldr	r6, [r7]
   160ac:	ldr	r0, [r6, r5, lsl #3]
   160b0:	cmp	r0, #0
   160b4:	beq	160d4 <__assert_fail@plt+0x44a0>
   160b8:	ldr	r0, [r8]
   160bc:	cmp	r0, #0
   160c0:	beq	160e8 <__assert_fail@plt+0x44b4>
   160c4:	mov	r1, r0
   160c8:	ldr	r2, [r1, #4]!
   160cc:	str	r2, [r8]
   160d0:	b	160fc <__assert_fail@plt+0x44c8>
   160d4:	str	r4, [r6, r5, lsl #3]
   160d8:	ldr	r0, [r7, #12]
   160dc:	add	r0, r0, #1
   160e0:	str	r0, [r7, #12]
   160e4:	b	16110 <__assert_fail@plt+0x44dc>
   160e8:	mov	r0, #8
   160ec:	bl	19be8 <lchmod@@Base+0x34f0>
   160f0:	cmp	r0, #0
   160f4:	beq	16144 <__assert_fail@plt+0x4510>
   160f8:	add	r1, r0, #4
   160fc:	str	r4, [r0]
   16100:	add	r2, r6, r5, lsl #3
   16104:	ldr	r3, [r2, #4]
   16108:	str	r3, [r1]
   1610c:	str	r0, [r2, #4]
   16110:	ldr	r1, [sp, #8]
   16114:	str	r9, [sl]
   16118:	ldr	r0, [r1, #12]
   1611c:	sub	r0, r0, #1
   16120:	str	r0, [r1, #12]
   16124:	ldr	r0, [sp, #8]
   16128:	add	sl, sl, #8
   1612c:	ldr	r0, [r0, #4]
   16130:	cmp	sl, r0
   16134:	bcc	15fec <__assert_fail@plt+0x43b8>
   16138:	mov	r0, #1
   1613c:	sub	sp, fp, #28
   16140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16144:	mov	r0, #0
   16148:	b	1613c <__assert_fail@plt+0x4508>
   1614c:	bl	11bd4 <abort@plt>
   16150:	push	{r4, r5, r6, r7, fp, lr}
   16154:	add	fp, sp, #16
   16158:	sub	sp, sp, #8
   1615c:	cmp	r1, #0
   16160:	beq	162e0 <__assert_fail@plt+0x46ac>
   16164:	mov	r7, r2
   16168:	add	r2, sp, #4
   1616c:	mov	r3, #0
   16170:	mov	r5, r1
   16174:	mov	r4, r0
   16178:	mov	r6, #0
   1617c:	bl	162e8 <__assert_fail@plt+0x46b4>
   16180:	cmp	r0, #0
   16184:	beq	16194 <__assert_fail@plt+0x4560>
   16188:	cmp	r7, #0
   1618c:	strne	r0, [r7]
   16190:	b	162cc <__assert_fail@plt+0x4698>
   16194:	ldr	r0, [r4, #20]
   16198:	vldr	s0, [r4, #8]
   1619c:	vldr	s2, [r4, #12]
   161a0:	vldr	s4, [r0, #8]
   161a4:	vcvt.f32.u32	s0, s0
   161a8:	vcvt.f32.u32	s2, s2
   161ac:	vmul.f32	s0, s4, s0
   161b0:	vcmpe.f32	s0, s2
   161b4:	vmrs	APSR_nzcv, fpscr
   161b8:	bpl	1624c <__assert_fail@plt+0x4618>
   161bc:	mov	r0, r4
   161c0:	bl	15b94 <__assert_fail@plt+0x3f60>
   161c4:	vldr	s0, [r4, #8]
   161c8:	ldr	r0, [r4, #20]
   161cc:	vldr	s4, [r4, #12]
   161d0:	vcvt.f32.u32	s2, s0
   161d4:	vldr	s0, [r0, #8]
   161d8:	vcvt.f32.u32	s4, s4
   161dc:	vmul.f32	s6, s0, s2
   161e0:	vcmpe.f32	s6, s4
   161e4:	vmrs	APSR_nzcv, fpscr
   161e8:	bpl	1624c <__assert_fail@plt+0x4618>
   161ec:	vldr	s4, [r0, #12]
   161f0:	ldrb	r0, [r0, #16]
   161f4:	mvn	r6, #0
   161f8:	vmul.f32	s2, s4, s2
   161fc:	vldr	s4, [pc, #224]	; 162e4 <__assert_fail@plt+0x46b0>
   16200:	cmp	r0, #0
   16204:	vmul.f32	s0, s0, s2
   16208:	vseleq.f32	s0, s0, s2
   1620c:	vcmpe.f32	s0, s4
   16210:	vmrs	APSR_nzcv, fpscr
   16214:	bge	162cc <__assert_fail@plt+0x4698>
   16218:	vcvt.u32.f32	s0, s0
   1621c:	mov	r0, r4
   16220:	vmov	r1, s0
   16224:	bl	15ea0 <__assert_fail@plt+0x426c>
   16228:	cmp	r0, #0
   1622c:	beq	162cc <__assert_fail@plt+0x4698>
   16230:	add	r2, sp, #4
   16234:	mov	r0, r4
   16238:	mov	r1, r5
   1623c:	mov	r3, #0
   16240:	bl	162e8 <__assert_fail@plt+0x46b4>
   16244:	cmp	r0, #0
   16248:	bne	162e0 <__assert_fail@plt+0x46ac>
   1624c:	ldr	r6, [sp, #4]
   16250:	ldr	r0, [r6]
   16254:	cmp	r0, #0
   16258:	beq	16278 <__assert_fail@plt+0x4644>
   1625c:	ldr	r0, [r4, #36]	; 0x24
   16260:	cmp	r0, #0
   16264:	beq	16298 <__assert_fail@plt+0x4664>
   16268:	mov	r1, r0
   1626c:	ldr	r2, [r1, #4]!
   16270:	str	r2, [r4, #36]	; 0x24
   16274:	b	162ac <__assert_fail@plt+0x4678>
   16278:	str	r5, [r6]
   1627c:	ldr	r0, [r4, #12]
   16280:	ldr	r1, [r4, #16]
   16284:	add	r0, r0, #1
   16288:	add	r1, r1, #1
   1628c:	str	r0, [r4, #12]
   16290:	str	r1, [r4, #16]
   16294:	b	162c8 <__assert_fail@plt+0x4694>
   16298:	mov	r0, #8
   1629c:	bl	19be8 <lchmod@@Base+0x34f0>
   162a0:	cmp	r0, #0
   162a4:	beq	162d8 <__assert_fail@plt+0x46a4>
   162a8:	add	r1, r0, #4
   162ac:	str	r5, [r0]
   162b0:	ldr	r2, [r6, #4]
   162b4:	str	r2, [r1]
   162b8:	str	r0, [r6, #4]
   162bc:	ldr	r0, [r4, #16]
   162c0:	add	r0, r0, #1
   162c4:	str	r0, [r4, #16]
   162c8:	mov	r6, #1
   162cc:	mov	r0, r6
   162d0:	sub	sp, fp, #16
   162d4:	pop	{r4, r5, r6, r7, fp, pc}
   162d8:	mvn	r6, #0
   162dc:	b	162cc <__assert_fail@plt+0x4698>
   162e0:	bl	11bd4 <abort@plt>
   162e4:	svcmi	0x00800000
   162e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162ec:	add	fp, sp, #24
   162f0:	mov	r7, r2
   162f4:	mov	r4, r1
   162f8:	ldr	r1, [r0, #8]
   162fc:	ldr	r2, [r0, #24]
   16300:	mov	r5, r0
   16304:	mov	r8, r3
   16308:	mov	r0, r4
   1630c:	blx	r2
   16310:	ldr	r1, [r5, #8]
   16314:	cmp	r0, r1
   16318:	bcs	16414 <__assert_fail@plt+0x47e0>
   1631c:	ldr	r1, [r5]
   16320:	add	r6, r1, r0, lsl #3
   16324:	str	r6, [r7]
   16328:	ldr	r1, [r1, r0, lsl #3]
   1632c:	cmp	r1, #0
   16330:	beq	163c8 <__assert_fail@plt+0x4794>
   16334:	cmp	r1, r4
   16338:	beq	16354 <__assert_fail@plt+0x4720>
   1633c:	ldr	r2, [r5, #28]
   16340:	mov	r0, r4
   16344:	blx	r2
   16348:	cmp	r0, #0
   1634c:	beq	16388 <__assert_fail@plt+0x4754>
   16350:	ldr	r4, [r6]
   16354:	cmp	r8, #0
   16358:	beq	163cc <__assert_fail@plt+0x4798>
   1635c:	ldr	r0, [r6, #4]
   16360:	cmp	r0, #0
   16364:	beq	163d4 <__assert_fail@plt+0x47a0>
   16368:	ldm	r0, {r1, r2}
   1636c:	stm	r6, {r1, r2}
   16370:	mov	r1, #0
   16374:	str	r1, [r0]
   16378:	ldr	r1, [r5, #36]	; 0x24
   1637c:	str	r1, [r0, #4]
   16380:	str	r0, [r5, #36]	; 0x24
   16384:	b	163cc <__assert_fail@plt+0x4798>
   16388:	ldr	r0, [r6, #4]!
   1638c:	cmp	r0, #0
   16390:	beq	163c8 <__assert_fail@plt+0x4794>
   16394:	ldr	r1, [r0]
   16398:	cmp	r1, r4
   1639c:	beq	163e0 <__assert_fail@plt+0x47ac>
   163a0:	ldr	r2, [r5, #28]
   163a4:	mov	r0, r4
   163a8:	blx	r2
   163ac:	ldr	r1, [r6]
   163b0:	cmp	r0, #0
   163b4:	bne	163e8 <__assert_fail@plt+0x47b4>
   163b8:	ldr	r0, [r1, #4]!
   163bc:	cmp	r0, #0
   163c0:	mov	r6, r1
   163c4:	bne	16394 <__assert_fail@plt+0x4760>
   163c8:	mov	r4, #0
   163cc:	mov	r0, r4
   163d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163d4:	mov	r0, #0
   163d8:	str	r0, [r6]
   163dc:	b	163cc <__assert_fail@plt+0x4798>
   163e0:	mov	r1, r0
   163e4:	b	163ec <__assert_fail@plt+0x47b8>
   163e8:	ldr	r4, [r1]
   163ec:	cmp	r8, #0
   163f0:	beq	163cc <__assert_fail@plt+0x4798>
   163f4:	ldr	r0, [r1, #4]
   163f8:	str	r0, [r6]
   163fc:	mov	r0, #0
   16400:	str	r0, [r1]
   16404:	ldr	r0, [r5, #36]	; 0x24
   16408:	str	r0, [r1, #4]
   1640c:	str	r1, [r5, #36]	; 0x24
   16410:	b	163cc <__assert_fail@plt+0x4798>
   16414:	bl	11bd4 <abort@plt>
   16418:	push	{r4, sl, fp, lr}
   1641c:	add	fp, sp, #8
   16420:	sub	sp, sp, #8
   16424:	add	r2, sp, #4
   16428:	mov	r4, r1
   1642c:	bl	16150 <__assert_fail@plt+0x451c>
   16430:	cmn	r0, #1
   16434:	beq	16448 <__assert_fail@plt+0x4814>
   16438:	ldr	r1, [sp, #4]
   1643c:	cmp	r0, #0
   16440:	moveq	r4, r1
   16444:	b	1644c <__assert_fail@plt+0x4818>
   16448:	mov	r4, #0
   1644c:	mov	r0, r4
   16450:	sub	sp, fp, #8
   16454:	pop	{r4, sl, fp, pc}
   16458:	push	{r4, r5, r6, sl, fp, lr}
   1645c:	add	fp, sp, #16
   16460:	sub	sp, sp, #8
   16464:	add	r2, sp, #4
   16468:	mov	r3, #1
   1646c:	mov	r4, r0
   16470:	bl	162e8 <__assert_fail@plt+0x46b4>
   16474:	mov	r5, r0
   16478:	cmp	r0, #0
   1647c:	beq	16558 <__assert_fail@plt+0x4924>
   16480:	ldr	r0, [r4, #16]
   16484:	sub	r0, r0, #1
   16488:	str	r0, [r4, #16]
   1648c:	ldr	r0, [sp, #4]
   16490:	ldr	r0, [r0]
   16494:	cmp	r0, #0
   16498:	bne	16558 <__assert_fail@plt+0x4924>
   1649c:	ldr	r0, [r4, #12]
   164a0:	vldr	s0, [r4, #8]
   164a4:	sub	r0, r0, #1
   164a8:	str	r0, [r4, #12]
   164ac:	vmov	s4, r0
   164b0:	ldr	r1, [r4, #20]
   164b4:	vldr	s2, [r1]
   164b8:	vcvt.f32.u32	s0, s0
   164bc:	vcvt.f32.u32	s4, s4
   164c0:	vmul.f32	s0, s2, s0
   164c4:	vcmpe.f32	s0, s4
   164c8:	vmrs	APSR_nzcv, fpscr
   164cc:	ble	16558 <__assert_fail@plt+0x4924>
   164d0:	mov	r0, r4
   164d4:	bl	15b94 <__assert_fail@plt+0x3f60>
   164d8:	vldr	s0, [r4, #8]
   164dc:	ldr	r0, [r4, #20]
   164e0:	vldr	s2, [r4, #12]
   164e4:	vcvt.f32.u32	s0, s0
   164e8:	vldr	s4, [r0]
   164ec:	vcvt.f32.u32	s2, s2
   164f0:	vmul.f32	s4, s4, s0
   164f4:	vcmpe.f32	s4, s2
   164f8:	vmrs	APSR_nzcv, fpscr
   164fc:	ble	16558 <__assert_fail@plt+0x4924>
   16500:	ldrb	r1, [r0, #16]
   16504:	vldr	s2, [r0, #4]
   16508:	cmp	r1, #0
   1650c:	vmul.f32	s0, s2, s0
   16510:	vldreq	s2, [r0, #8]
   16514:	mov	r0, r4
   16518:	vmuleq.f32	s0, s0, s2
   1651c:	vcvt.u32.f32	s0, s0
   16520:	vmov	r1, s0
   16524:	bl	15ea0 <__assert_fail@plt+0x426c>
   16528:	cmp	r0, #0
   1652c:	bne	16558 <__assert_fail@plt+0x4924>
   16530:	ldr	r0, [r4, #36]	; 0x24
   16534:	cmp	r0, #0
   16538:	beq	16550 <__assert_fail@plt+0x491c>
   1653c:	ldr	r6, [r0, #4]
   16540:	bl	135e0 <__assert_fail@plt+0x19ac>
   16544:	cmp	r6, #0
   16548:	mov	r0, r6
   1654c:	bne	1653c <__assert_fail@plt+0x4908>
   16550:	mov	r0, #0
   16554:	str	r0, [r4, #36]	; 0x24
   16558:	mov	r0, r5
   1655c:	sub	sp, fp, #16
   16560:	pop	{r4, r5, r6, sl, fp, pc}
   16564:	b	16458 <__assert_fail@plt+0x4824>
   16568:	push	{r4, r5, fp, lr}
   1656c:	add	fp, sp, #8
   16570:	mov	r5, r0
   16574:	ldr	r0, [r0]
   16578:	mov	r4, r1
   1657c:	bl	1a210 <lchmod@@Base+0x3b18>
   16580:	ldrd	r2, [r5, #8]
   16584:	eor	r0, r2, r0
   16588:	mov	r1, r3
   1658c:	mov	r2, r4
   16590:	mov	r3, #0
   16594:	bl	1a424 <lchmod@@Base+0x3d2c>
   16598:	mov	r0, r2
   1659c:	pop	{r4, r5, fp, pc}
   165a0:	push	{r4, r5, r6, r7, fp, lr}
   165a4:	add	fp, sp, #16
   165a8:	ldrd	r2, [r1, #8]
   165ac:	ldrd	r4, [r0, #8]
   165b0:	eor	r3, r5, r3
   165b4:	eor	r2, r4, r2
   165b8:	orrs	r2, r2, r3
   165bc:	mov	r2, #0
   165c0:	bne	165f0 <__assert_fail@plt+0x49bc>
   165c4:	ldrd	r4, [r1, #16]
   165c8:	ldrd	r6, [r0, #16]
   165cc:	eor	r3, r7, r5
   165d0:	eor	r7, r6, r4
   165d4:	orrs	r3, r7, r3
   165d8:	bne	165f0 <__assert_fail@plt+0x49bc>
   165dc:	ldr	r1, [r1]
   165e0:	ldr	r0, [r0]
   165e4:	bl	1182c <strcmp@plt>
   165e8:	clz	r0, r0
   165ec:	lsr	r2, r0, #5
   165f0:	mov	r0, r2
   165f4:	pop	{r4, r5, r6, r7, fp, pc}
   165f8:	push	{r4, sl, fp, lr}
   165fc:	add	fp, sp, #8
   16600:	mov	r4, r0
   16604:	ldr	r0, [r0]
   16608:	bl	135e0 <__assert_fail@plt+0x19ac>
   1660c:	mov	r0, r4
   16610:	pop	{r4, sl, fp, lr}
   16614:	b	135e0 <__assert_fail@plt+0x19ac>
   16618:	mov	r3, #1
   1661c:	mov	r2, #0
   16620:	vdup.32	q8, r1
   16624:	strb	r3, [r0, #28]
   16628:	str	r2, [r0, #20]
   1662c:	str	r2, [r0, #24]
   16630:	add	r3, r0, r2
   16634:	add	r2, r2, #16
   16638:	cmp	r2, #16
   1663c:	vst1.32	{d16-d17}, [r3]
   16640:	bne	16630 <__assert_fail@plt+0x49fc>
   16644:	str	r1, [r0, #16]
   16648:	bx	lr
   1664c:	ldrb	r0, [r0, #28]
   16650:	bx	lr
   16654:	push	{fp, lr}
   16658:	mov	fp, sp
   1665c:	ldrb	r3, [r0, #28]
   16660:	ldr	r2, [r0, #20]
   16664:	eor	lr, r3, #1
   16668:	add	r2, r2, lr
   1666c:	and	r3, r2, #3
   16670:	ldr	ip, [r0, r3, lsl #2]
   16674:	str	r1, [r0, r3, lsl #2]
   16678:	str	r3, [r0, #20]
   1667c:	ldr	r1, [r0, #24]
   16680:	cmp	r3, r1
   16684:	addeq	r1, r2, lr
   16688:	andeq	r1, r1, #3
   1668c:	streq	r1, [r0, #24]
   16690:	mov	r1, #0
   16694:	strb	r1, [r0, #28]
   16698:	mov	r0, ip
   1669c:	pop	{fp, pc}
   166a0:	ldrb	r1, [r0, #28]
   166a4:	cmp	r1, #0
   166a8:	bne	166ec <__assert_fail@plt+0x4ab8>
   166ac:	ldr	r3, [r0, #20]
   166b0:	ldr	r2, [r0, #16]
   166b4:	ldr	r1, [r0, r3, lsl #2]
   166b8:	str	r2, [r0, r3, lsl #2]
   166bc:	ldr	r2, [r0, #20]
   166c0:	ldr	r3, [r0, #24]
   166c4:	cmp	r2, r3
   166c8:	bne	166d8 <__assert_fail@plt+0x4aa4>
   166cc:	mov	r2, #1
   166d0:	strb	r2, [r0, #28]
   166d4:	b	166e4 <__assert_fail@plt+0x4ab0>
   166d8:	sub	r2, r2, #1
   166dc:	and	r2, r2, #3
   166e0:	str	r2, [r0, #20]
   166e4:	mov	r0, r1
   166e8:	bx	lr
   166ec:	push	{fp, lr}
   166f0:	mov	fp, sp
   166f4:	bl	11bd4 <abort@plt>

000166f8 <lchmod@@Base>:
   166f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   166fc:	add	fp, sp, #24
   16700:	sub	sp, sp, #136	; 0x88
   16704:	mov	r4, r1
   16708:	mov	r1, #2654208	; 0x288000
   1670c:	mov	r5, r0
   16710:	bl	11994 <open64@plt>
   16714:	mov	r6, r0
   16718:	cmp	r0, #0
   1671c:	blt	16760 <lchmod@@Base+0x68>
   16720:	movw	r1, #44707	; 0xaea3
   16724:	add	r2, sp, #32
   16728:	mov	r0, r6
   1672c:	mov	r3, #4096	; 0x1000
   16730:	movt	r1, #1
   16734:	bl	1a644 <lchmod@@Base+0x3f4c>
   16738:	cmp	r0, #0
   1673c:	beq	16768 <lchmod@@Base+0x70>
   16740:	bl	11a60 <__errno_location@plt>
   16744:	ldr	r5, [r0]
   16748:	mov	r4, r0
   1674c:	mov	r0, r6
   16750:	bl	11be0 <close@plt>
   16754:	str	r5, [r4]
   16758:	mvn	r7, #0
   1675c:	b	16808 <lchmod@@Base+0x110>
   16760:	mov	r7, r6
   16764:	b	16808 <lchmod@@Base+0x110>
   16768:	ldr	r0, [sp, #48]	; 0x30
   1676c:	and	r0, r0, #61440	; 0xf000
   16770:	cmp	r0, #40960	; 0xa000
   16774:	bne	16794 <lchmod@@Base+0x9c>
   16778:	mov	r0, r6
   1677c:	bl	11be0 <close@plt>
   16780:	bl	11a60 <__errno_location@plt>
   16784:	mov	r1, #95	; 0x5f
   16788:	mvn	r7, #0
   1678c:	str	r1, [r0]
   16790:	b	16808 <lchmod@@Base+0x110>
   16794:	movw	r3, #45092	; 0xb024
   16798:	add	r7, sp, #6
   1679c:	mov	r1, #1
   167a0:	mov	r2, #26
   167a4:	str	r6, [sp]
   167a8:	movt	r3, #1
   167ac:	mov	r0, r7
   167b0:	bl	11a6c <__sprintf_chk@plt>
   167b4:	mov	r0, r7
   167b8:	mov	r1, r4
   167bc:	bl	11b98 <chmod@plt>
   167c0:	mov	r7, r0
   167c4:	bl	11a60 <__errno_location@plt>
   167c8:	ldr	r9, [r0]
   167cc:	mov	r8, r0
   167d0:	mov	r0, r6
   167d4:	bl	11be0 <close@plt>
   167d8:	cmp	r7, #0
   167dc:	beq	167fc <lchmod@@Base+0x104>
   167e0:	cmp	r9, #2
   167e4:	bne	16804 <lchmod@@Base+0x10c>
   167e8:	mov	r0, r5
   167ec:	mov	r1, r4
   167f0:	bl	11b98 <chmod@plt>
   167f4:	mov	r7, r0
   167f8:	b	16808 <lchmod@@Base+0x110>
   167fc:	mov	r7, #0
   16800:	b	16808 <lchmod@@Base+0x110>
   16804:	str	r9, [r8]
   16808:	mov	r0, r7
   1680c:	sub	sp, fp, #24
   16810:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16818:	add	fp, sp, #28
   1681c:	sub	sp, sp, #4
   16820:	ldrb	r1, [r0]
   16824:	mov	r4, r0
   16828:	and	r0, r1, #248	; 0xf8
   1682c:	cmp	r0, #48	; 0x30
   16830:	bne	168b4 <lchmod@@Base+0x1bc>
   16834:	mov	r0, #0
   16838:	mov	r5, #0
   1683c:	mov	r2, r4
   16840:	lsl	r3, r5, #3
   16844:	uxtab	r1, r3, r1
   16848:	sub	r5, r1, #48	; 0x30
   1684c:	cmp	r0, r5, lsr #12
   16850:	bne	16b48 <lchmod@@Base+0x450>
   16854:	ldrb	r1, [r2, #1]
   16858:	add	r6, r2, #1
   1685c:	and	r2, r1, #248	; 0xf8
   16860:	cmp	r2, #48	; 0x30
   16864:	mov	r2, r6
   16868:	beq	16840 <lchmod@@Base+0x148>
   1686c:	cmp	r1, #0
   16870:	bne	16b48 <lchmod@@Base+0x450>
   16874:	mov	r0, #32
   16878:	bl	18fcc <lchmod@@Base+0x28d4>
   1687c:	movw	r1, #317	; 0x13d
   16880:	mov	r2, #0
   16884:	and	r3, r5, #3072	; 0xc00
   16888:	movw	r7, #1023	; 0x3ff
   1688c:	strh	r1, [r0]
   16890:	strb	r2, [r0, #17]
   16894:	sub	r2, r6, r4
   16898:	movw	r1, #4095	; 0xfff
   1689c:	cmp	r2, #5
   168a0:	str	r1, [r0, #4]
   168a4:	str	r5, [r0, #8]
   168a8:	orrlt	r1, r3, r7
   168ac:	str	r1, [r0, #12]
   168b0:	b	16b48 <lchmod@@Base+0x450>
   168b4:	movw	r5, #5
   168b8:	mov	r2, #1
   168bc:	mvn	r3, #42	; 0x2a
   168c0:	mov	r7, #1
   168c4:	mov	r0, #1
   168c8:	movt	r5, #4
   168cc:	b	168e0 <lchmod@@Base+0x1e8>
   168d0:	mov	r6, #0
   168d4:	ldrb	r1, [r4, r7]
   168d8:	add	r0, r6, r0
   168dc:	add	r7, r7, #1
   168e0:	uxtab	r6, r3, r1
   168e4:	uxtb	r1, r1
   168e8:	cmp	r6, #18
   168ec:	bhi	168fc <lchmod@@Base+0x204>
   168f0:	tst	r5, r2, lsl r6
   168f4:	mov	r6, #1
   168f8:	bne	168d4 <lchmod@@Base+0x1dc>
   168fc:	cmp	r1, #0
   16900:	bne	168d0 <lchmod@@Base+0x1d8>
   16904:	mov	r1, #16
   16908:	bl	1909c <lchmod@@Base+0x29a4>
   1690c:	mov	sl, #0
   16910:	mov	ip, #1
   16914:	mvn	lr, #113	; 0x71
   16918:	mov	r9, #0
   1691c:	b	16adc <lchmod@@Base+0x3e4>
   16920:	tst	r5, ip, lsl r1
   16924:	beq	16b40 <lchmod@@Base+0x448>
   16928:	ldrb	r3, [r4, #1]
   1692c:	add	r4, r4, #2
   16930:	sub	r1, r3, #48	; 0x30
   16934:	cmp	r1, #8
   16938:	bcs	16990 <lchmod@@Base+0x298>
   1693c:	mov	r7, #0
   16940:	lsl	r1, r7, #3
   16944:	uxtab	r1, r1, r3
   16948:	sub	r7, r1, #48	; 0x30
   1694c:	cmp	sl, r7, lsr #12
   16950:	bne	16b40 <lchmod@@Base+0x448>
   16954:	ldrb	r3, [r4], #1
   16958:	and	r1, r3, #248	; 0xf8
   1695c:	cmp	r1, #48	; 0x30
   16960:	beq	16940 <lchmod@@Base+0x248>
   16964:	cmp	r2, #0
   16968:	bne	16b40 <lchmod@@Base+0x448>
   1696c:	sub	r4, r4, #1
   16970:	mov	r8, #1
   16974:	movw	r2, #4095	; 0xfff
   16978:	cmp	r3, #0
   1697c:	beq	169b8 <lchmod@@Base+0x2c0>
   16980:	cmp	r3, #44	; 0x2c
   16984:	movw	r3, #4095	; 0xfff
   16988:	beq	16a60 <lchmod@@Base+0x368>
   1698c:	b	16b40 <lchmod@@Base+0x448>
   16990:	cmp	r3, #103	; 0x67
   16994:	beq	169c0 <lchmod@@Base+0x2c8>
   16998:	cmp	r3, #111	; 0x6f
   1699c:	beq	169d0 <lchmod@@Base+0x2d8>
   169a0:	cmp	r3, #117	; 0x75
   169a4:	bne	169e0 <lchmod@@Base+0x2e8>
   169a8:	mov	r8, #3
   169ac:	mov	r3, #0
   169b0:	mov	r7, #448	; 0x1c0
   169b4:	b	16a60 <lchmod@@Base+0x368>
   169b8:	movw	r3, #4095	; 0xfff
   169bc:	b	16a60 <lchmod@@Base+0x368>
   169c0:	mov	r8, #3
   169c4:	mov	r3, #0
   169c8:	mov	r7, #56	; 0x38
   169cc:	b	16a60 <lchmod@@Base+0x368>
   169d0:	mov	r8, #3
   169d4:	mov	r3, #0
   169d8:	mov	r7, #7
   169dc:	b	16a60 <lchmod@@Base+0x368>
   169e0:	mov	r8, #1
   169e4:	mov	r7, #0
   169e8:	b	16a14 <lchmod@@Base+0x31c>
   169ec:	mov	r8, #2
   169f0:	b	16a10 <lchmod@@Base+0x318>
   169f4:	orr	r7, r7, #3072	; 0xc00
   169f8:	b	16a10 <lchmod@@Base+0x318>
   169fc:	orr	r7, r7, #512	; 0x200
   16a00:	b	16a10 <lchmod@@Base+0x318>
   16a04:	orr	r7, r7, #146	; 0x92
   16a08:	b	16a10 <lchmod@@Base+0x318>
   16a0c:	orr	r7, r7, #73	; 0x49
   16a10:	ldrb	r3, [r4], #1
   16a14:	uxtab	r1, lr, r3
   16a18:	cmp	r1, #6
   16a1c:	bhi	16a4c <lchmod@@Base+0x354>
   16a20:	add	r3, pc, #0
   16a24:	ldr	pc, [r3, r1, lsl #2]
   16a28:	andeq	r6, r1, r4, asr #20
   16a2c:	strdeq	r6, [r1], -r4
   16a30:	strdeq	r6, [r1], -ip
   16a34:	andeq	r6, r1, r8, asr sl
   16a38:	andeq	r6, r1, r8, asr sl
   16a3c:	andeq	r6, r1, r4, lsl #20
   16a40:	andeq	r6, r1, ip, lsl #20
   16a44:	orr	r7, r7, #292	; 0x124
   16a48:	b	16a10 <lchmod@@Base+0x318>
   16a4c:	uxtb	r1, r3
   16a50:	cmp	r1, #88	; 0x58
   16a54:	beq	169ec <lchmod@@Base+0x2f4>
   16a58:	sub	r4, r4, #1
   16a5c:	mov	r3, #0
   16a60:	mov	r1, r0
   16a64:	cmp	r3, #0
   16a68:	strb	r6, [r1, r9, lsl #4]!
   16a6c:	strb	r8, [r1, #1]
   16a70:	stmib	r1, {r2, r7}
   16a74:	bne	16a84 <lchmod@@Base+0x38c>
   16a78:	cmp	r2, #0
   16a7c:	andne	r7, r7, r2
   16a80:	mov	r3, r7
   16a84:	add	r1, r0, r9, lsl #4
   16a88:	add	r7, r9, #1
   16a8c:	str	r3, [r1, #12]
   16a90:	ldrb	r6, [r4]
   16a94:	cmp	r6, #44	; 0x2c
   16a98:	ble	16ab8 <lchmod@@Base+0x3c0>
   16a9c:	cmp	r6, #45	; 0x2d
   16aa0:	mov	r9, r7
   16aa4:	beq	16928 <lchmod@@Base+0x230>
   16aa8:	cmp	r6, #61	; 0x3d
   16aac:	mov	r9, r7
   16ab0:	beq	16928 <lchmod@@Base+0x230>
   16ab4:	b	16b40 <lchmod@@Base+0x448>
   16ab8:	cmp	r6, #43	; 0x2b
   16abc:	mov	r9, r7
   16ac0:	beq	16928 <lchmod@@Base+0x230>
   16ac4:	cmp	r6, #0
   16ac8:	beq	16b50 <lchmod@@Base+0x458>
   16acc:	cmp	r6, #44	; 0x2c
   16ad0:	bne	16b40 <lchmod@@Base+0x448>
   16ad4:	add	r4, r4, #1
   16ad8:	mov	r9, r7
   16adc:	mov	r2, #0
   16ae0:	b	16b18 <lchmod@@Base+0x420>
   16ae4:	movw	r3, #1080	; 0x438
   16ae8:	b	16b10 <lchmod@@Base+0x418>
   16aec:	cmp	r6, #111	; 0x6f
   16af0:	beq	16b0c <lchmod@@Base+0x414>
   16af4:	mov	r3, #2496	; 0x9c0
   16af8:	cmp	r6, #117	; 0x75
   16afc:	beq	16b10 <lchmod@@Base+0x418>
   16b00:	b	16b40 <lchmod@@Base+0x448>
   16b04:	movw	r3, #4095	; 0xfff
   16b08:	b	16b10 <lchmod@@Base+0x418>
   16b0c:	movw	r3, #519	; 0x207
   16b10:	orr	r2, r2, r3
   16b14:	add	r4, r4, #1
   16b18:	ldrb	r6, [r4]
   16b1c:	cmp	r6, #110	; 0x6e
   16b20:	bgt	16aec <lchmod@@Base+0x3f4>
   16b24:	cmp	r6, #97	; 0x61
   16b28:	beq	16b04 <lchmod@@Base+0x40c>
   16b2c:	cmp	r6, #103	; 0x67
   16b30:	beq	16ae4 <lchmod@@Base+0x3ec>
   16b34:	sub	r1, r6, #43	; 0x2b
   16b38:	cmp	r1, #18
   16b3c:	bls	16920 <lchmod@@Base+0x228>
   16b40:	bl	135e0 <__assert_fail@plt+0x19ac>
   16b44:	mov	r0, #0
   16b48:	sub	sp, fp, #28
   16b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b50:	add	r1, r0, r7, lsl #4
   16b54:	mov	r2, #0
   16b58:	strb	r2, [r1, #1]
   16b5c:	b	16b48 <lchmod@@Base+0x450>
   16b60:	push	{r4, sl, fp, lr}
   16b64:	add	fp, sp, #8
   16b68:	sub	sp, sp, #104	; 0x68
   16b6c:	mov	r1, sp
   16b70:	bl	1a614 <lchmod@@Base+0x3f1c>
   16b74:	mov	r1, r0
   16b78:	mov	r0, #0
   16b7c:	cmp	r1, #0
   16b80:	bne	16bac <lchmod@@Base+0x4b4>
   16b84:	ldr	r4, [sp, #16]
   16b88:	mov	r0, #32
   16b8c:	bl	18fcc <lchmod@@Base+0x28d4>
   16b90:	movw	r1, #317	; 0x13d
   16b94:	strh	r1, [r0]
   16b98:	movw	r1, #4095	; 0xfff
   16b9c:	stmib	r0, {r1, r4}
   16ba0:	str	r1, [r0, #12]
   16ba4:	mov	r1, #0
   16ba8:	strb	r1, [r0, #17]
   16bac:	sub	sp, fp, #8
   16bb0:	pop	{r4, sl, fp, pc}
   16bb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16bb8:	add	fp, sp, #24
   16bbc:	ldrb	r4, [r3, #1]
   16bc0:	ldr	ip, [fp, #8]
   16bc4:	bfc	r0, #12, #20
   16bc8:	cmp	r4, #0
   16bcc:	beq	16cac <lchmod@@Base+0x5b4>
   16bd0:	cmp	r1, #0
   16bd4:	mov	lr, r1
   16bd8:	add	r3, r3, #8
   16bdc:	mov	r9, #0
   16be0:	movw	r8, #4095	; 0xfff
   16be4:	movwne	lr, #3072	; 0xc00
   16be8:	mov	r5, r3
   16bec:	ldr	r7, [r3, #-4]
   16bf0:	ldr	r3, [r3]
   16bf4:	uxtb	r4, r4
   16bf8:	ldr	r6, [r5, #4]
   16bfc:	cmp	r4, #2
   16c00:	bic	r6, lr, r6
   16c04:	beq	16c30 <lchmod@@Base+0x538>
   16c08:	cmp	r4, #3
   16c0c:	bne	16c3c <lchmod@@Base+0x544>
   16c10:	and	r4, r3, r0
   16c14:	tst	r4, #146	; 0x92
   16c18:	mov	r3, r4
   16c1c:	orrne	r3, r3, #146	; 0x92
   16c20:	tst	r4, #292	; 0x124
   16c24:	orrne	r3, r3, #292	; 0x124
   16c28:	tst	r4, #73	; 0x49
   16c2c:	b	16c38 <lchmod@@Base+0x540>
   16c30:	and	r4, r0, #73	; 0x49
   16c34:	orrs	r4, r4, r1
   16c38:	orrne	r3, r3, #73	; 0x49
   16c3c:	cmp	r7, #0
   16c40:	mov	r4, r7
   16c44:	mvneq	r4, r2
   16c48:	bic	r4, r4, r6
   16c4c:	and	r3, r4, r3
   16c50:	ldrb	r4, [r5, #-8]
   16c54:	cmp	r4, #43	; 0x2b
   16c58:	beq	16c88 <lchmod@@Base+0x590>
   16c5c:	cmp	r4, #45	; 0x2d
   16c60:	beq	16c90 <lchmod@@Base+0x598>
   16c64:	cmp	r4, #61	; 0x3d
   16c68:	bne	16c98 <lchmod@@Base+0x5a0>
   16c6c:	mvn	r4, r7
   16c70:	cmp	r7, #0
   16c74:	orrne	r6, r6, r4
   16c78:	and	r0, r6, r0
   16c7c:	orr	r0, r3, r0
   16c80:	bic	r3, r8, r6
   16c84:	b	16c94 <lchmod@@Base+0x59c>
   16c88:	orr	r0, r3, r0
   16c8c:	b	16c94 <lchmod@@Base+0x59c>
   16c90:	bic	r0, r0, r3
   16c94:	orr	r9, r3, r9
   16c98:	ldrb	r4, [r5, #9]
   16c9c:	add	r3, r5, #16
   16ca0:	cmp	r4, #0
   16ca4:	bne	16be8 <lchmod@@Base+0x4f0>
   16ca8:	b	16cb0 <lchmod@@Base+0x5b8>
   16cac:	mov	r9, #0
   16cb0:	cmp	ip, #0
   16cb4:	strne	r9, [ip]
   16cb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16cbc:	sub	sp, sp, #4
   16cc0:	push	{fp, lr}
   16cc4:	mov	fp, sp
   16cc8:	sub	sp, sp, #4
   16ccc:	str	r3, [fp, #8]
   16cd0:	mov	r3, #0
   16cd4:	tst	r2, #64	; 0x40
   16cd8:	addne	r3, fp, #8
   16cdc:	addne	r3, r3, #4
   16ce0:	strne	r3, [sp]
   16ce4:	ldrne	r3, [fp, #8]
   16ce8:	bl	11a48 <openat64@plt>
   16cec:	bl	18acc <lchmod@@Base+0x23d4>
   16cf0:	mov	sp, fp
   16cf4:	pop	{fp, lr}
   16cf8:	add	sp, sp, #4
   16cfc:	bx	lr
   16d00:	push	{r4, r5, r6, sl, fp, lr}
   16d04:	add	fp, sp, #16
   16d08:	orr	r2, r2, #18688	; 0x4900
   16d0c:	mov	r4, r3
   16d10:	orr	r2, r2, #524288	; 0x80000
   16d14:	bl	16cbc <lchmod@@Base+0x5c4>
   16d18:	mov	r5, r0
   16d1c:	mov	r0, #0
   16d20:	cmp	r5, #0
   16d24:	poplt	{r4, r5, r6, sl, fp, pc}
   16d28:	mov	r0, r5
   16d2c:	bl	11b20 <fdopendir@plt>
   16d30:	cmp	r0, #0
   16d34:	strne	r5, [r4]
   16d38:	popne	{r4, r5, r6, sl, fp, pc}
   16d3c:	bl	11a60 <__errno_location@plt>
   16d40:	ldr	r6, [r0]
   16d44:	mov	r4, r0
   16d48:	mov	r0, r5
   16d4c:	bl	11be0 <close@plt>
   16d50:	mov	r0, #0
   16d54:	str	r6, [r4]
   16d58:	pop	{r4, r5, r6, sl, fp, pc}
   16d5c:	push	{r4, r5, fp, lr}
   16d60:	add	fp, sp, #8
   16d64:	cmp	r0, #0
   16d68:	beq	16dfc <lchmod@@Base+0x704>
   16d6c:	mov	r1, #47	; 0x2f
   16d70:	mov	r4, r0
   16d74:	bl	11afc <strrchr@plt>
   16d78:	cmp	r0, #0
   16d7c:	mov	r5, r4
   16d80:	addne	r5, r0, #1
   16d84:	sub	r0, r5, r4
   16d88:	cmp	r0, #7
   16d8c:	blt	16de0 <lchmod@@Base+0x6e8>
   16d90:	movw	r1, #45165	; 0xb06d
   16d94:	sub	r0, r5, #7
   16d98:	mov	r2, #7
   16d9c:	movt	r1, #1
   16da0:	bl	11bc8 <strncmp@plt>
   16da4:	cmp	r0, #0
   16da8:	bne	16de0 <lchmod@@Base+0x6e8>
   16dac:	movw	r1, #45173	; 0xb075
   16db0:	mov	r0, r5
   16db4:	mov	r2, #3
   16db8:	movt	r1, #1
   16dbc:	bl	11bc8 <strncmp@plt>
   16dc0:	cmp	r0, #0
   16dc4:	beq	16dd0 <lchmod@@Base+0x6d8>
   16dc8:	mov	r4, r5
   16dcc:	b	16de0 <lchmod@@Base+0x6e8>
   16dd0:	movw	r0, #49624	; 0xc1d8
   16dd4:	add	r4, r5, #3
   16dd8:	movt	r0, #2
   16ddc:	str	r4, [r0]
   16de0:	movw	r0, #49628	; 0xc1dc
   16de4:	movt	r0, #2
   16de8:	str	r4, [r0]
   16dec:	movw	r0, #49664	; 0xc200
   16df0:	movt	r0, #2
   16df4:	str	r4, [r0]
   16df8:	pop	{r4, r5, fp, pc}
   16dfc:	movw	r0, #49640	; 0xc1e8
   16e00:	movt	r0, #2
   16e04:	ldr	r1, [r0]
   16e08:	movw	r0, #45109	; 0xb035
   16e0c:	movt	r0, #1
   16e10:	bl	11bbc <fputs@plt>
   16e14:	bl	11bd4 <abort@plt>
   16e18:	push	{r4, r5, r6, sl, fp, lr}
   16e1c:	add	fp, sp, #16
   16e20:	mov	r4, r0
   16e24:	movw	r0, #49672	; 0xc208
   16e28:	movt	r0, #2
   16e2c:	cmp	r4, #0
   16e30:	moveq	r4, r0
   16e34:	bl	11a60 <__errno_location@plt>
   16e38:	ldr	r6, [r0]
   16e3c:	mov	r5, r0
   16e40:	mov	r0, r4
   16e44:	mov	r1, #48	; 0x30
   16e48:	bl	1931c <lchmod@@Base+0x2c24>
   16e4c:	str	r6, [r5]
   16e50:	pop	{r4, r5, r6, sl, fp, pc}
   16e54:	movw	r1, #49672	; 0xc208
   16e58:	cmp	r0, #0
   16e5c:	movt	r1, #2
   16e60:	movne	r1, r0
   16e64:	ldr	r0, [r1]
   16e68:	bx	lr
   16e6c:	movw	r2, #49672	; 0xc208
   16e70:	cmp	r0, #0
   16e74:	movt	r2, #2
   16e78:	movne	r2, r0
   16e7c:	str	r1, [r2]
   16e80:	bx	lr
   16e84:	movw	r3, #49672	; 0xc208
   16e88:	cmp	r0, #0
   16e8c:	movt	r3, #2
   16e90:	movne	r3, r0
   16e94:	ubfx	r0, r1, #5, #3
   16e98:	and	r1, r1, #31
   16e9c:	add	r0, r3, r0, lsl #2
   16ea0:	ldr	r3, [r0, #8]
   16ea4:	eor	r2, r2, r3, lsr r1
   16ea8:	and	r2, r2, #1
   16eac:	eor	r2, r3, r2, lsl r1
   16eb0:	str	r2, [r0, #8]
   16eb4:	mov	r0, #1
   16eb8:	and	r0, r0, r3, lsr r1
   16ebc:	bx	lr
   16ec0:	movw	r2, #49672	; 0xc208
   16ec4:	cmp	r0, #0
   16ec8:	movt	r2, #2
   16ecc:	movne	r2, r0
   16ed0:	ldr	r0, [r2, #4]
   16ed4:	str	r1, [r2, #4]
   16ed8:	bx	lr
   16edc:	movw	r3, #49672	; 0xc208
   16ee0:	cmp	r0, #0
   16ee4:	movt	r3, #2
   16ee8:	movne	r3, r0
   16eec:	cmp	r1, #0
   16ef0:	mov	r0, #10
   16ef4:	cmpne	r2, #0
   16ef8:	str	r0, [r3]
   16efc:	bne	16f0c <lchmod@@Base+0x814>
   16f00:	push	{fp, lr}
   16f04:	mov	fp, sp
   16f08:	bl	11bd4 <abort@plt>
   16f0c:	str	r1, [r3, #40]	; 0x28
   16f10:	str	r2, [r3, #44]	; 0x2c
   16f14:	bx	lr
   16f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f1c:	add	fp, sp, #28
   16f20:	sub	sp, sp, #20
   16f24:	mov	r7, r0
   16f28:	ldr	r0, [fp, #8]
   16f2c:	movw	r5, #49672	; 0xc208
   16f30:	mov	r8, r3
   16f34:	mov	r9, r2
   16f38:	mov	sl, r1
   16f3c:	movt	r5, #2
   16f40:	cmp	r0, #0
   16f44:	movne	r5, r0
   16f48:	bl	11a60 <__errno_location@plt>
   16f4c:	mov	r4, r0
   16f50:	ldm	r5, {r0, r1}
   16f54:	ldr	r2, [r5, #40]	; 0x28
   16f58:	ldr	r3, [r5, #44]	; 0x2c
   16f5c:	add	r5, r5, #8
   16f60:	ldr	r6, [r4]
   16f64:	stm	sp, {r0, r1, r5}
   16f68:	str	r2, [sp, #12]
   16f6c:	str	r3, [sp, #16]
   16f70:	mov	r0, r7
   16f74:	mov	r1, sl
   16f78:	mov	r2, r9
   16f7c:	mov	r3, r8
   16f80:	bl	16f90 <lchmod@@Base+0x898>
   16f84:	str	r6, [r4]
   16f88:	sub	sp, fp, #28
   16f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f94:	add	fp, sp, #28
   16f98:	sub	sp, sp, #156	; 0x9c
   16f9c:	str	r0, [fp, #-56]	; 0xffffffc8
   16fa0:	ldr	r0, [fp, #12]
   16fa4:	mov	r4, r1
   16fa8:	str	r3, [sp, #80]	; 0x50
   16fac:	str	r2, [fp, #-84]	; 0xffffffac
   16fb0:	and	r1, r0, #4
   16fb4:	str	r1, [sp, #24]
   16fb8:	and	r1, r0, #1
   16fbc:	str	r1, [sp, #28]
   16fc0:	ubfx	r7, r0, #1, #1
   16fc4:	bl	1194c <__ctype_get_mb_cur_max@plt>
   16fc8:	str	r0, [sp, #32]
   16fcc:	ldr	r0, [fp, #24]
   16fd0:	ldr	r9, [fp, #8]
   16fd4:	mov	r2, #0
   16fd8:	mov	r1, #0
   16fdc:	mov	r5, #0
   16fe0:	str	r2, [sp, #52]	; 0x34
   16fe4:	mov	r2, #1
   16fe8:	str	r0, [sp, #72]	; 0x48
   16fec:	ldr	r0, [fp, #20]
   16ff0:	str	r0, [sp, #64]	; 0x40
   16ff4:	mov	r0, #0
   16ff8:	str	r0, [sp, #92]	; 0x5c
   16ffc:	mov	r0, #0
   17000:	str	r0, [fp, #-76]	; 0xffffffb4
   17004:	mov	r0, #0
   17008:	cmp	r9, #10
   1700c:	str	r1, [sp, #68]	; 0x44
   17010:	bhi	18010 <lchmod@@Base+0x1918>
   17014:	add	r1, pc, #28
   17018:	ldr	ip, [fp, #-84]	; 0xffffffac
   1701c:	ldr	lr, [sp, #80]	; 0x50
   17020:	mov	r6, r4
   17024:	mov	r8, #0
   17028:	mov	r3, #1
   1702c:	mov	sl, #0
   17030:	mov	r4, r2
   17034:	ldr	pc, [r1, r9, lsl #2]
   17038:	andeq	r7, r1, r8, lsl #2
   1703c:	andeq	r7, r1, r4, asr #2
   17040:	andeq	r7, r1, r8, lsl r1
   17044:	andeq	r7, r1, r0, lsl #2
   17048:	andeq	r7, r1, r8, lsr r1
   1704c:	muleq	r1, r0, r1
   17050:	andeq	r7, r1, r8, lsr #2
   17054:	strdeq	r7, [r1], -r0
   17058:	andeq	r7, r1, r4, rrx
   1705c:	andeq	r7, r1, r4, rrx
   17060:	andeq	r7, r1, ip, lsl #1
   17064:	movw	r0, #45255	; 0xb0c7
   17068:	mov	r1, r9
   1706c:	movt	r0, #1
   17070:	bl	18778 <lchmod@@Base+0x2080>
   17074:	str	r0, [sp, #64]	; 0x40
   17078:	movw	r0, #45257	; 0xb0c9
   1707c:	mov	r1, r9
   17080:	movt	r0, #1
   17084:	bl	18778 <lchmod@@Base+0x2080>
   17088:	str	r0, [sp, #72]	; 0x48
   1708c:	mov	r8, #0
   17090:	mov	sl, r7
   17094:	tst	r7, #1
   17098:	str	r5, [fp, #-48]	; 0xffffffd0
   1709c:	bne	170d8 <lchmod@@Base+0x9e0>
   170a0:	ldr	r0, [sp, #64]	; 0x40
   170a4:	ldrb	r0, [r0]
   170a8:	cmp	r0, #0
   170ac:	beq	170d8 <lchmod@@Base+0x9e0>
   170b0:	ldr	r1, [sp, #64]	; 0x40
   170b4:	mov	r8, #0
   170b8:	add	r1, r1, #1
   170bc:	cmp	r8, r6
   170c0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   170c4:	strbcc	r0, [r2, r8]
   170c8:	ldrb	r0, [r1, r8]
   170cc:	add	r8, r8, #1
   170d0:	cmp	r0, #0
   170d4:	bne	170bc <lchmod@@Base+0x9c4>
   170d8:	ldr	r7, [sp, #72]	; 0x48
   170dc:	mov	r0, r7
   170e0:	bl	11a24 <strlen@plt>
   170e4:	ldr	ip, [fp, #-84]	; 0xffffffac
   170e8:	ldr	lr, [sp, #80]	; 0x50
   170ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   170f0:	str	r0, [fp, #-76]	; 0xffffffb4
   170f4:	str	r7, [sp, #92]	; 0x5c
   170f8:	mov	r3, #1
   170fc:	b	171f0 <lchmod@@Base+0xaf8>
   17100:	mov	r0, #1
   17104:	b	17144 <lchmod@@Base+0xa4c>
   17108:	mov	r9, #0
   1710c:	mov	r8, #0
   17110:	mov	r3, r0
   17114:	b	171ec <lchmod@@Base+0xaf4>
   17118:	tst	r7, #1
   1711c:	bne	17144 <lchmod@@Base+0xa4c>
   17120:	mov	r3, r0
   17124:	b	1716c <lchmod@@Base+0xa74>
   17128:	mov	r0, #1
   1712c:	mov	r8, #0
   17130:	mov	r9, #5
   17134:	b	171a4 <lchmod@@Base+0xaac>
   17138:	mov	r3, #1
   1713c:	tst	r7, #1
   17140:	beq	1716c <lchmod@@Base+0xa74>
   17144:	mov	r1, #1
   17148:	mov	r8, #0
   1714c:	mov	r9, #2
   17150:	mov	r3, r0
   17154:	mov	sl, #1
   17158:	str	r1, [fp, #-76]	; 0xffffffb4
   1715c:	movw	r1, #45257	; 0xb0c9
   17160:	movt	r1, #1
   17164:	str	r1, [sp, #92]	; 0x5c
   17168:	b	171f0 <lchmod@@Base+0xaf8>
   1716c:	cmp	r6, #0
   17170:	mov	r8, #1
   17174:	mov	r9, #2
   17178:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   1717c:	movne	r0, #39	; 0x27
   17180:	strbne	r0, [r1]
   17184:	movw	r0, #45257	; 0xb0c9
   17188:	movt	r0, #1
   1718c:	b	171e0 <lchmod@@Base+0xae8>
   17190:	mov	r9, #5
   17194:	tst	r7, #1
   17198:	beq	171c0 <lchmod@@Base+0xac8>
   1719c:	mov	r0, #1
   171a0:	mov	r8, #0
   171a4:	str	r0, [fp, #-76]	; 0xffffffb4
   171a8:	movw	r0, #45253	; 0xb0c5
   171ac:	mov	r3, #1
   171b0:	mov	sl, #1
   171b4:	movt	r0, #1
   171b8:	str	r0, [sp, #92]	; 0x5c
   171bc:	b	171f0 <lchmod@@Base+0xaf8>
   171c0:	cmp	r6, #0
   171c4:	mov	r8, #1
   171c8:	mov	r3, #1
   171cc:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   171d0:	movne	r0, #34	; 0x22
   171d4:	strbne	r0, [r1]
   171d8:	movw	r0, #45253	; 0xb0c5
   171dc:	movt	r0, #1
   171e0:	str	r0, [sp, #92]	; 0x5c
   171e4:	mov	r0, #1
   171e8:	str	r0, [fp, #-76]	; 0xffffffb4
   171ec:	mov	sl, #0
   171f0:	ldr	r0, [fp, #16]
   171f4:	mov	r7, #0
   171f8:	str	r9, [fp, #-64]	; 0xffffffc0
   171fc:	str	sl, [fp, #-72]	; 0xffffffb8
   17200:	str	r3, [sp, #84]	; 0x54
   17204:	cmp	r0, #0
   17208:	movwne	r0, #1
   1720c:	and	r0, r0, sl
   17210:	str	r0, [fp, #-88]	; 0xffffffa8
   17214:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17218:	cmp	r0, #0
   1721c:	movwne	r0, #1
   17220:	subs	r2, r9, #2
   17224:	and	r1, r0, sl
   17228:	str	r2, [fp, #-80]	; 0xffffffb0
   1722c:	and	r1, r3, r1
   17230:	str	r1, [sp, #44]	; 0x2c
   17234:	clz	r1, r2
   17238:	lsr	r1, r1, #5
   1723c:	and	r1, r1, sl
   17240:	str	r1, [sp, #56]	; 0x38
   17244:	mov	r1, r2
   17248:	eor	r2, sl, #1
   1724c:	movwne	r1, #1
   17250:	str	r2, [sp, #88]	; 0x58
   17254:	orr	r2, r1, r2
   17258:	and	r1, r1, r3
   1725c:	and	r0, r0, r1
   17260:	str	r2, [sp, #60]	; 0x3c
   17264:	str	r1, [fp, #-68]	; 0xffffffbc
   17268:	str	r0, [fp, #-60]	; 0xffffffc4
   1726c:	eor	r0, r3, #1
   17270:	str	r0, [sp, #48]	; 0x30
   17274:	cmn	lr, #1
   17278:	beq	17288 <lchmod@@Base+0xb90>
   1727c:	cmp	r7, lr
   17280:	bne	17294 <lchmod@@Base+0xb9c>
   17284:	b	17e40 <lchmod@@Base+0x1748>
   17288:	ldrb	r0, [ip, r7]
   1728c:	cmp	r0, #0
   17290:	beq	17e48 <lchmod@@Base+0x1750>
   17294:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17298:	mov	r9, #0
   1729c:	str	r5, [fp, #-48]	; 0xffffffd0
   172a0:	str	r6, [fp, #-52]	; 0xffffffcc
   172a4:	cmp	r0, #0
   172a8:	beq	172e8 <lchmod@@Base+0xbf0>
   172ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   172b0:	mov	r5, r4
   172b4:	add	r4, r7, r0
   172b8:	cmp	r0, #2
   172bc:	bcc	172d8 <lchmod@@Base+0xbe0>
   172c0:	cmn	lr, #1
   172c4:	bne	172d8 <lchmod@@Base+0xbe0>
   172c8:	mov	r0, ip
   172cc:	bl	11a24 <strlen@plt>
   172d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   172d4:	mov	lr, r0
   172d8:	cmp	r4, lr
   172dc:	bls	172f0 <lchmod@@Base+0xbf8>
   172e0:	mov	r6, #0
   172e4:	b	17330 <lchmod@@Base+0xc38>
   172e8:	mov	r6, #0
   172ec:	b	17334 <lchmod@@Base+0xc3c>
   172f0:	ldr	r1, [sp, #92]	; 0x5c
   172f4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   172f8:	add	r0, ip, r7
   172fc:	mov	r4, lr
   17300:	bl	118bc <memcmp@plt>
   17304:	ldr	r2, [sp, #88]	; 0x58
   17308:	cmp	r0, #0
   1730c:	mov	r1, r0
   17310:	movwne	r1, #1
   17314:	orr	r1, r1, r2
   17318:	tst	r1, #1
   1731c:	beq	17edc <lchmod@@Base+0x17e4>
   17320:	ldr	ip, [fp, #-84]	; 0xffffffac
   17324:	clz	r0, r0
   17328:	mov	lr, r4
   1732c:	lsr	r6, r0, #5
   17330:	mov	r4, r5
   17334:	ldrb	r5, [ip, r7]
   17338:	cmp	r5, #126	; 0x7e
   1733c:	bhi	17704 <lchmod@@Base+0x100c>
   17340:	add	r3, pc, #16
   17344:	mov	sl, #1
   17348:	mov	r2, #110	; 0x6e
   1734c:	mov	r0, #97	; 0x61
   17350:	mov	r1, #0
   17354:	ldr	pc, [r3, r5, lsl #2]
   17358:	andeq	r7, r1, r8, ror #11
   1735c:	andeq	r7, r1, r4, lsl #14
   17360:	andeq	r7, r1, r4, lsl #14
   17364:	andeq	r7, r1, r4, lsl #14
   17368:	andeq	r7, r1, r4, lsl #14
   1736c:	andeq	r7, r1, r4, lsl #14
   17370:	andeq	r7, r1, r4, lsl #14
   17374:	andeq	r7, r1, r8, lsr #15
   17378:	andeq	r7, r1, r8, asr #11
   1737c:	andeq	r7, r1, r0, asr #11
   17380:	ldrdeq	r7, [r1], -r4
   17384:	andeq	r7, r1, r8, asr r6
   17388:			; <UNDEFINED> instruction: 0x000175b8
   1738c:	ldrdeq	r7, [r1], -r0
   17390:	andeq	r7, r1, r4, lsl #14
   17394:	andeq	r7, r1, r4, lsl #14
   17398:	andeq	r7, r1, r4, lsl #14
   1739c:	andeq	r7, r1, r4, lsl #14
   173a0:	andeq	r7, r1, r4, lsl #14
   173a4:	andeq	r7, r1, r4, lsl #14
   173a8:	andeq	r7, r1, r4, lsl #14
   173ac:	andeq	r7, r1, r4, lsl #14
   173b0:	andeq	r7, r1, r4, lsl #14
   173b4:	andeq	r7, r1, r4, lsl #14
   173b8:	andeq	r7, r1, r4, lsl #14
   173bc:	andeq	r7, r1, r4, lsl #14
   173c0:	andeq	r7, r1, r4, lsl #14
   173c4:	andeq	r7, r1, r4, lsl #14
   173c8:	andeq	r7, r1, r4, lsl #14
   173cc:	andeq	r7, r1, r4, lsl #14
   173d0:	andeq	r7, r1, r4, lsl #14
   173d4:	andeq	r7, r1, r4, lsl #14
   173d8:	andeq	r7, r1, r8, ror #14
   173dc:	andeq	r7, r1, ip, ror #14
   173e0:	andeq	r7, r1, ip, ror #14
   173e4:	andeq	r7, r1, r8, ror #10
   173e8:	andeq	r7, r1, ip, ror #14
   173ec:	andeq	r7, r1, r4, asr r5
   173f0:	andeq	r7, r1, ip, ror #14
   173f4:	andeq	r7, r1, r0, ror #12
   173f8:	andeq	r7, r1, ip, ror #14
   173fc:	andeq	r7, r1, ip, ror #14
   17400:	andeq	r7, r1, ip, ror #14
   17404:	andeq	r7, r1, r4, asr r5
   17408:	andeq	r7, r1, r4, asr r5
   1740c:	andeq	r7, r1, r4, asr r5
   17410:	andeq	r7, r1, r4, asr r5
   17414:	andeq	r7, r1, r4, asr r5
   17418:	andeq	r7, r1, r4, asr r5
   1741c:	andeq	r7, r1, r4, asr r5
   17420:	andeq	r7, r1, r4, asr r5
   17424:	andeq	r7, r1, r4, asr r5
   17428:	andeq	r7, r1, r4, asr r5
   1742c:	andeq	r7, r1, r4, asr r5
   17430:	andeq	r7, r1, r4, asr r5
   17434:	andeq	r7, r1, r4, asr r5
   17438:	andeq	r7, r1, r4, asr r5
   1743c:	andeq	r7, r1, r4, asr r5
   17440:	andeq	r7, r1, r4, asr r5
   17444:	andeq	r7, r1, ip, ror #14
   17448:	andeq	r7, r1, ip, ror #14
   1744c:	andeq	r7, r1, ip, ror #14
   17450:	andeq	r7, r1, ip, ror #14
   17454:	andeq	r7, r1, ip, lsr #12
   17458:	andeq	r7, r1, r4, lsl #14
   1745c:	andeq	r7, r1, r4, asr r5
   17460:	andeq	r7, r1, r4, asr r5
   17464:	andeq	r7, r1, r4, asr r5
   17468:	andeq	r7, r1, r4, asr r5
   1746c:	andeq	r7, r1, r4, asr r5
   17470:	andeq	r7, r1, r4, asr r5
   17474:	andeq	r7, r1, r4, asr r5
   17478:	andeq	r7, r1, r4, asr r5
   1747c:	andeq	r7, r1, r4, asr r5
   17480:	andeq	r7, r1, r4, asr r5
   17484:	andeq	r7, r1, r4, asr r5
   17488:	andeq	r7, r1, r4, asr r5
   1748c:	andeq	r7, r1, r4, asr r5
   17490:	andeq	r7, r1, r4, asr r5
   17494:	andeq	r7, r1, r4, asr r5
   17498:	andeq	r7, r1, r4, asr r5
   1749c:	andeq	r7, r1, r4, asr r5
   174a0:	andeq	r7, r1, r4, asr r5
   174a4:	andeq	r7, r1, r4, asr r5
   174a8:	andeq	r7, r1, r4, asr r5
   174ac:	andeq	r7, r1, r4, asr r5
   174b0:	andeq	r7, r1, r4, asr r5
   174b4:	andeq	r7, r1, r4, asr r5
   174b8:	andeq	r7, r1, r4, asr r5
   174bc:	andeq	r7, r1, r4, asr r5
   174c0:	andeq	r7, r1, r4, asr r5
   174c4:	andeq	r7, r1, ip, ror #14
   174c8:	muleq	r1, r4, r5
   174cc:	andeq	r7, r1, r4, asr r5
   174d0:	andeq	r7, r1, ip, ror #14
   174d4:	andeq	r7, r1, r4, asr r5
   174d8:	andeq	r7, r1, ip, ror #14
   174dc:	andeq	r7, r1, r4, asr r5
   174e0:	andeq	r7, r1, r4, asr r5
   174e4:	andeq	r7, r1, r4, asr r5
   174e8:	andeq	r7, r1, r4, asr r5
   174ec:	andeq	r7, r1, r4, asr r5
   174f0:	andeq	r7, r1, r4, asr r5
   174f4:	andeq	r7, r1, r4, asr r5
   174f8:	andeq	r7, r1, r4, asr r5
   174fc:	andeq	r7, r1, r4, asr r5
   17500:	andeq	r7, r1, r4, asr r5
   17504:	andeq	r7, r1, r4, asr r5
   17508:	andeq	r7, r1, r4, asr r5
   1750c:	andeq	r7, r1, r4, asr r5
   17510:	andeq	r7, r1, r4, asr r5
   17514:	andeq	r7, r1, r4, asr r5
   17518:	andeq	r7, r1, r4, asr r5
   1751c:	andeq	r7, r1, r4, asr r5
   17520:	andeq	r7, r1, r4, asr r5
   17524:	andeq	r7, r1, r4, asr r5
   17528:	andeq	r7, r1, r4, asr r5
   1752c:	andeq	r7, r1, r4, asr r5
   17530:	andeq	r7, r1, r4, asr r5
   17534:	andeq	r7, r1, r4, asr r5
   17538:	andeq	r7, r1, r4, asr r5
   1753c:	andeq	r7, r1, r4, asr r5
   17540:	andeq	r7, r1, r4, asr r5
   17544:	andeq	r7, r1, r8, ror r5
   17548:	andeq	r7, r1, ip, ror #14
   1754c:	andeq	r7, r1, r8, ror r5
   17550:	andeq	r7, r1, r8, ror #10
   17554:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17558:	cmp	r0, #0
   1755c:	beq	177bc <lchmod@@Base+0x10c4>
   17560:	ldr	r0, [fp, #16]
   17564:	b	177c0 <lchmod@@Base+0x10c8>
   17568:	mov	sl, #0
   1756c:	cmp	r7, #0
   17570:	bne	179d8 <lchmod@@Base+0x12e0>
   17574:	b	17768 <lchmod@@Base+0x1070>
   17578:	mov	sl, #0
   1757c:	cmn	lr, #1
   17580:	beq	17754 <lchmod@@Base+0x105c>
   17584:	cmp	r7, #0
   17588:	cmpeq	lr, #1
   1758c:	bne	179d8 <lchmod@@Base+0x12e0>
   17590:	b	17768 <lchmod@@Base+0x1070>
   17594:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17598:	cmp	r0, #2
   1759c:	bne	1778c <lchmod@@Base+0x1094>
   175a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   175a4:	tst	r0, #1
   175a8:	bne	17ef8 <lchmod@@Base+0x1800>
   175ac:	mov	r9, #0
   175b0:	mov	r0, #92	; 0x5c
   175b4:	b	177a0 <lchmod@@Base+0x10a8>
   175b8:	mov	r0, #102	; 0x66
   175bc:	b	177a8 <lchmod@@Base+0x10b0>
   175c0:	mov	r2, #116	; 0x74
   175c4:	b	175d4 <lchmod@@Base+0xedc>
   175c8:	mov	r0, #98	; 0x62
   175cc:	b	177a8 <lchmod@@Base+0x10b0>
   175d0:	mov	r2, #114	; 0x72
   175d4:	ldr	r0, [sp, #60]	; 0x3c
   175d8:	tst	r0, #1
   175dc:	mov	r0, r2
   175e0:	bne	177a8 <lchmod@@Base+0x10b0>
   175e4:	b	17ef8 <lchmod@@Base+0x1800>
   175e8:	ldr	r0, [sp, #84]	; 0x54
   175ec:	tst	r0, #1
   175f0:	beq	17894 <lchmod@@Base+0x119c>
   175f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   175f8:	tst	r0, #1
   175fc:	bne	18000 <lchmod@@Base+0x1908>
   17600:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17604:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17608:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1760c:	cmp	r0, #2
   17610:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17614:	movwne	r0, #1
   17618:	orr	r0, r0, r3
   1761c:	tst	r0, #1
   17620:	beq	17d14 <lchmod@@Base+0x161c>
   17624:	mov	r0, r8
   17628:	b	17d54 <lchmod@@Base+0x165c>
   1762c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17630:	mov	r9, #0
   17634:	mov	r5, #63	; 0x3f
   17638:	cmp	r0, #5
   1763c:	beq	179e0 <lchmod@@Base+0x12e8>
   17640:	cmp	r0, #2
   17644:	bne	17aa0 <lchmod@@Base+0x13a8>
   17648:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1764c:	tst	r0, #1
   17650:	beq	17aa4 <lchmod@@Base+0x13ac>
   17654:	b	17ef8 <lchmod@@Base+0x1800>
   17658:	mov	r0, #118	; 0x76
   1765c:	b	177a8 <lchmod@@Base+0x10b0>
   17660:	mov	r0, #1
   17664:	mov	r5, #39	; 0x27
   17668:	str	r0, [sp, #52]	; 0x34
   1766c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17670:	cmp	r0, #2
   17674:	bne	176fc <lchmod@@Base+0x1004>
   17678:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1767c:	tst	r0, #1
   17680:	bne	17ef8 <lchmod@@Base+0x1800>
   17684:	ldr	r3, [sp, #68]	; 0x44
   17688:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1768c:	mov	r9, #0
   17690:	clz	r1, r2
   17694:	cmp	r3, #0
   17698:	mov	r0, r3
   1769c:	movwne	r0, #1
   176a0:	lsr	r1, r1, #5
   176a4:	orrs	r0, r0, r1
   176a8:	moveq	r3, r2
   176ac:	moveq	r2, r0
   176b0:	cmp	r8, r2
   176b4:	str	r3, [sp, #68]	; 0x44
   176b8:	str	r2, [fp, #-52]	; 0xffffffcc
   176bc:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   176c0:	movcc	r0, #39	; 0x27
   176c4:	strbcc	r0, [r1, r8]
   176c8:	add	r0, r8, #1
   176cc:	cmp	r0, r2
   176d0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   176d4:	movcc	r1, #92	; 0x5c
   176d8:	strbcc	r1, [r3, r0]
   176dc:	add	r0, r8, #2
   176e0:	add	r8, r8, #3
   176e4:	cmp	r0, r2
   176e8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   176ec:	movcc	r1, #39	; 0x27
   176f0:	strbcc	r1, [r2, r0]
   176f4:	mov	r0, #0
   176f8:	str	r0, [fp, #-48]	; 0xffffffd0
   176fc:	mov	sl, #1
   17700:	b	17554 <lchmod@@Base+0xe5c>
   17704:	ldr	r0, [sp, #32]
   17708:	cmp	r0, #1
   1770c:	bne	178b8 <lchmod@@Base+0x11c0>
   17710:	str	lr, [sp, #80]	; 0x50
   17714:	bl	119f4 <__ctype_b_loc@plt>
   17718:	ldr	r0, [r0]
   1771c:	ldr	ip, [fp, #-84]	; 0xffffffac
   17720:	mov	r1, #1
   17724:	add	r0, r0, r5, lsl #1
   17728:	ldrb	r0, [r0, #1]
   1772c:	ubfx	sl, r0, #6, #1
   17730:	ldr	r0, [sp, #48]	; 0x30
   17734:	mov	r2, r1
   17738:	cmp	r1, #1
   1773c:	orr	r0, sl, r0
   17740:	bhi	17aac <lchmod@@Base+0x13b4>
   17744:	tst	r0, #1
   17748:	beq	17aac <lchmod@@Base+0x13b4>
   1774c:	ldr	lr, [sp, #80]	; 0x50
   17750:	b	17554 <lchmod@@Base+0xe5c>
   17754:	cmp	r7, #0
   17758:	bne	179d4 <lchmod@@Base+0x12dc>
   1775c:	ldrb	r0, [ip, #1]
   17760:	cmp	r0, #0
   17764:	bne	179d4 <lchmod@@Base+0x12dc>
   17768:	mov	r1, #1
   1776c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17770:	cmp	r0, #2
   17774:	bne	17784 <lchmod@@Base+0x108c>
   17778:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1777c:	tst	r0, #1
   17780:	bne	17ef8 <lchmod@@Base+0x1800>
   17784:	mov	sl, r1
   17788:	b	17554 <lchmod@@Base+0xe5c>
   1778c:	ldr	r1, [sp, #44]	; 0x2c
   17790:	mov	r9, #0
   17794:	mov	r0, #92	; 0x5c
   17798:	cmp	r1, #0
   1779c:	beq	177a8 <lchmod@@Base+0x10b0>
   177a0:	mov	sl, #0
   177a4:	b	17cc0 <lchmod@@Base+0x15c8>
   177a8:	ldr	r1, [sp, #84]	; 0x54
   177ac:	mov	sl, #0
   177b0:	mov	r9, #0
   177b4:	tst	r1, #1
   177b8:	bne	177f4 <lchmod@@Base+0x10fc>
   177bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   177c0:	cmp	r0, #0
   177c4:	mov	r0, r5
   177c8:	beq	177ec <lchmod@@Base+0x10f4>
   177cc:	ldr	r1, [fp, #16]
   177d0:	ubfx	r0, r5, #5, #3
   177d4:	mov	r2, #1
   177d8:	ldr	r0, [r1, r0, lsl #2]
   177dc:	and	r1, r5, #31
   177e0:	tst	r0, r2, lsl r1
   177e4:	mov	r0, r5
   177e8:	bne	177f4 <lchmod@@Base+0x10fc>
   177ec:	cmp	r6, #0
   177f0:	beq	17cc0 <lchmod@@Base+0x15c8>
   177f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   177f8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   177fc:	tst	r1, #1
   17800:	bne	17ed4 <lchmod@@Base+0x17dc>
   17804:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17808:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1780c:	cmp	r1, #2
   17810:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17814:	movwne	r1, #1
   17818:	orr	r1, r1, r5
   1781c:	tst	r1, #1
   17820:	bne	17864 <lchmod@@Base+0x116c>
   17824:	cmp	r8, r6
   17828:	mov	r5, #1
   1782c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17830:	movcc	r1, #39	; 0x27
   17834:	strbcc	r1, [r2, r8]
   17838:	add	r1, r8, #1
   1783c:	cmp	r1, r6
   17840:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17844:	movcc	r2, #36	; 0x24
   17848:	strbcc	r2, [r3, r1]
   1784c:	add	r1, r8, #2
   17850:	add	r8, r8, #3
   17854:	cmp	r1, r6
   17858:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1785c:	movcc	r2, #39	; 0x27
   17860:	strbcc	r2, [r3, r1]
   17864:	cmp	r8, r6
   17868:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1786c:	movcc	r1, #92	; 0x5c
   17870:	strbcc	r1, [r2, r8]
   17874:	add	r8, r8, #1
   17878:	cmp	r8, r6
   1787c:	and	r4, r4, sl
   17880:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   17884:	strbcc	r0, [r1, r8]
   17888:	add	r8, r8, #1
   1788c:	add	r7, r7, #1
   17890:	b	17274 <lchmod@@Base+0xb7c>
   17894:	ldr	r0, [sp, #28]
   17898:	mov	sl, #0
   1789c:	mov	r9, #0
   178a0:	mov	r5, #0
   178a4:	cmp	r0, #0
   178a8:	beq	177bc <lchmod@@Base+0x10c4>
   178ac:	ldr	r6, [fp, #-52]	; 0xffffffcc
   178b0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   178b4:	b	1788c <lchmod@@Base+0x1194>
   178b8:	mov	r0, #0
   178bc:	cmn	lr, #1
   178c0:	str	r6, [sp, #76]	; 0x4c
   178c4:	str	r4, [sp, #20]
   178c8:	str	r0, [fp, #-36]	; 0xffffffdc
   178cc:	str	r0, [fp, #-40]	; 0xffffffd8
   178d0:	bne	178e4 <lchmod@@Base+0x11ec>
   178d4:	mov	r0, ip
   178d8:	bl	11a24 <strlen@plt>
   178dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   178e0:	mov	lr, r0
   178e4:	add	r0, ip, r7
   178e8:	mov	sl, #1
   178ec:	mov	r6, #0
   178f0:	sub	r4, fp, #40	; 0x28
   178f4:	str	lr, [sp, #80]	; 0x50
   178f8:	str	r0, [sp, #36]	; 0x24
   178fc:	str	r6, [sp, #40]	; 0x28
   17900:	add	r6, r6, r7
   17904:	sub	r0, fp, #44	; 0x2c
   17908:	mov	r3, r4
   1790c:	add	r1, ip, r6
   17910:	sub	r2, lr, r6
   17914:	bl	1a284 <lchmod@@Base+0x3b8c>
   17918:	cmp	r0, #0
   1791c:	beq	17e28 <lchmod@@Base+0x1730>
   17920:	cmn	r0, #1
   17924:	beq	17de8 <lchmod@@Base+0x16f0>
   17928:	ldr	lr, [sp, #80]	; 0x50
   1792c:	cmn	r0, #2
   17930:	beq	17df0 <lchmod@@Base+0x16f8>
   17934:	ldr	r2, [sp, #56]	; 0x38
   17938:	cmp	r0, #2
   1793c:	mov	r1, #0
   17940:	movwcc	r1, #1
   17944:	eor	r2, r2, #1
   17948:	orrs	r1, r2, r1
   1794c:	bne	17998 <lchmod@@Base+0x12a0>
   17950:	ldr	r1, [sp, #40]	; 0x28
   17954:	ldr	r2, [sp, #36]	; 0x24
   17958:	add	ip, r2, r1
   1795c:	mov	r2, #1
   17960:	ldrb	r3, [ip, r2]
   17964:	sub	r6, r3, #94	; 0x5e
   17968:	cmp	r6, #30
   1796c:	bhi	17980 <lchmod@@Base+0x1288>
   17970:	mov	r4, #1
   17974:	mov	r1, #1073741829	; 0x40000005
   17978:	tst	r1, r4, lsl r6
   1797c:	bne	17ef4 <lchmod@@Base+0x17fc>
   17980:	sub	r3, r3, #91	; 0x5b
   17984:	cmp	r3, #2
   17988:	bcc	17ef4 <lchmod@@Base+0x17fc>
   1798c:	add	r2, r2, #1
   17990:	cmp	r2, r0
   17994:	bcc	17960 <lchmod@@Base+0x1268>
   17998:	ldr	r6, [sp, #40]	; 0x28
   1799c:	add	r6, r0, r6
   179a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179a4:	bl	1191c <iswprint@plt>
   179a8:	cmp	r0, #0
   179ac:	sub	r4, fp, #40	; 0x28
   179b0:	movwne	r0, #1
   179b4:	and	sl, sl, r0
   179b8:	mov	r0, r4
   179bc:	bl	118a4 <mbsinit@plt>
   179c0:	ldr	lr, [sp, #80]	; 0x50
   179c4:	ldr	ip, [fp, #-84]	; 0xffffffac
   179c8:	cmp	r0, #0
   179cc:	beq	178fc <lchmod@@Base+0x1204>
   179d0:	b	17e30 <lchmod@@Base+0x1738>
   179d4:	mvn	lr, #0
   179d8:	mov	r9, #0
   179dc:	b	17554 <lchmod@@Base+0xe5c>
   179e0:	ldr	r0, [sp, #24]
   179e4:	cmp	r0, #0
   179e8:	beq	17aa0 <lchmod@@Base+0x13a8>
   179ec:	add	r0, r7, #2
   179f0:	cmp	r0, lr
   179f4:	bcs	17aa0 <lchmod@@Base+0x13a8>
   179f8:	add	r1, ip, r7
   179fc:	ldrb	r1, [r1, #1]
   17a00:	cmp	r1, #63	; 0x3f
   17a04:	bne	17aa0 <lchmod@@Base+0x13a8>
   17a08:	ldrb	r5, [ip, r0]
   17a0c:	sub	r1, r5, #33	; 0x21
   17a10:	cmp	r1, #29
   17a14:	bhi	17aa0 <lchmod@@Base+0x13a8>
   17a18:	movw	r3, #20929	; 0x51c1
   17a1c:	mov	r2, #1
   17a20:	movt	r3, #14336	; 0x3800
   17a24:	tst	r3, r2, lsl r1
   17a28:	beq	17aa0 <lchmod@@Base+0x13a8>
   17a2c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17a30:	tst	r1, #1
   17a34:	bne	18008 <lchmod@@Base+0x1910>
   17a38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a3c:	mov	r7, r0
   17a40:	cmp	r8, r1
   17a44:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17a48:	movcc	r1, #63	; 0x3f
   17a4c:	strbcc	r1, [r2, r8]
   17a50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a54:	add	r1, r8, #1
   17a58:	cmp	r1, r2
   17a5c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17a60:	movcc	r2, #34	; 0x22
   17a64:	strbcc	r2, [r3, r1]
   17a68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a6c:	add	r1, r8, #2
   17a70:	cmp	r1, r2
   17a74:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17a78:	movcc	r2, #34	; 0x22
   17a7c:	strbcc	r2, [r3, r1]
   17a80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a84:	add	r1, r8, #3
   17a88:	add	r8, r8, #4
   17a8c:	cmp	r1, r2
   17a90:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17a94:	movcc	r2, #63	; 0x3f
   17a98:	strbcc	r2, [r3, r1]
   17a9c:	b	17aa4 <lchmod@@Base+0x13ac>
   17aa0:	mov	r5, #63	; 0x3f
   17aa4:	mov	sl, #0
   17aa8:	b	17554 <lchmod@@Base+0xe5c>
   17aac:	str	r0, [sp, #40]	; 0x28
   17ab0:	add	r0, r2, r7
   17ab4:	str	r6, [sp, #76]	; 0x4c
   17ab8:	add	r1, r7, #1
   17abc:	ldr	lr, [sp, #80]	; 0x50
   17ac0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17ac4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17ac8:	mov	r3, #0
   17acc:	str	r0, [sp, #36]	; 0x24
   17ad0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17ad4:	b	17b68 <lchmod@@Base+0x1470>
   17ad8:	str	r0, [sp, #76]	; 0x4c
   17adc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17ae0:	cmp	r9, #0
   17ae4:	movwne	r9, #1
   17ae8:	mvn	r7, r0
   17aec:	orr	r7, r7, r9
   17af0:	tst	r7, #1
   17af4:	bne	17b44 <lchmod@@Base+0x144c>
   17af8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17afc:	cmp	r8, r6
   17b00:	bcs	17b18 <lchmod@@Base+0x1420>
   17b04:	ldr	r7, [fp, #-56]	; 0xffffffc8
   17b08:	mov	r2, r4
   17b0c:	mov	r4, #39	; 0x27
   17b10:	strb	r4, [r7, r8]
   17b14:	mov	r4, r2
   17b18:	add	r7, r8, #1
   17b1c:	cmp	r7, r6
   17b20:	bcs	17b38 <lchmod@@Base+0x1440>
   17b24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17b28:	mov	r2, r4
   17b2c:	mov	r4, #39	; 0x27
   17b30:	strb	r4, [r0, r7]
   17b34:	mov	r4, r2
   17b38:	add	r8, r8, #2
   17b3c:	mov	r0, #0
   17b40:	b	17b4c <lchmod@@Base+0x1454>
   17b44:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17b4c:	cmp	r8, r6
   17b50:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17b54:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17b58:	strbcc	r5, [r2, r8]
   17b5c:	add	r8, r8, #1
   17b60:	ldrb	r5, [ip, r1]
   17b64:	add	r1, r1, #1
   17b68:	ldr	r2, [sp, #40]	; 0x28
   17b6c:	tst	r2, #1
   17b70:	beq	17bac <lchmod@@Base+0x14b4>
   17b74:	ldr	r2, [sp, #76]	; 0x4c
   17b78:	str	r0, [fp, #-48]	; 0xffffffd0
   17b7c:	tst	r2, #1
   17b80:	beq	17ba4 <lchmod@@Base+0x14ac>
   17b84:	cmp	r8, r6
   17b88:	bcs	17ba0 <lchmod@@Base+0x14a8>
   17b8c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   17b90:	mov	r2, r4
   17b94:	mov	r4, #92	; 0x5c
   17b98:	strb	r4, [r6, r8]
   17b9c:	mov	r4, r2
   17ba0:	add	r8, r8, #1
   17ba4:	mov	r0, #0
   17ba8:	b	17ca0 <lchmod@@Base+0x15a8>
   17bac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17bb0:	tst	r2, #1
   17bb4:	bne	17f00 <lchmod@@Base+0x1808>
   17bb8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17bbc:	cmp	r7, #2
   17bc0:	movwne	r3, #1
   17bc4:	orr	r3, r3, r0
   17bc8:	tst	r3, #1
   17bcc:	bne	17c28 <lchmod@@Base+0x1530>
   17bd0:	cmp	r8, r6
   17bd4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17bd8:	movcc	r3, #39	; 0x27
   17bdc:	strbcc	r3, [r2, r8]
   17be0:	add	r3, r8, #1
   17be4:	cmp	r3, r6
   17be8:	bcs	17c00 <lchmod@@Base+0x1508>
   17bec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17bf0:	mov	r7, r4
   17bf4:	mov	r4, #36	; 0x24
   17bf8:	strb	r4, [r2, r3]
   17bfc:	mov	r4, r7
   17c00:	add	r3, r8, #2
   17c04:	cmp	r3, r6
   17c08:	bcs	17c20 <lchmod@@Base+0x1528>
   17c0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17c10:	mov	r7, r4
   17c14:	mov	r4, #39	; 0x27
   17c18:	strb	r4, [r2, r3]
   17c1c:	mov	r4, r7
   17c20:	add	r8, r8, #3
   17c24:	mov	r0, #1
   17c28:	cmp	r8, r6
   17c2c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17c30:	movcc	r3, #92	; 0x5c
   17c34:	strbcc	r3, [r2, r8]
   17c38:	add	r3, r8, #1
   17c3c:	cmp	r3, r6
   17c40:	bcs	17c60 <lchmod@@Base+0x1568>
   17c44:	mov	r2, r4
   17c48:	and	r7, r5, #192	; 0xc0
   17c4c:	mov	r4, #48	; 0x30
   17c50:	orr	r7, r4, r7, lsr #6
   17c54:	mov	r4, r2
   17c58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17c5c:	strb	r7, [r2, r3]
   17c60:	add	r3, r8, #2
   17c64:	cmp	r3, r6
   17c68:	bcs	17c88 <lchmod@@Base+0x1590>
   17c6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17c70:	mov	r6, r4
   17c74:	lsr	r7, r5, #3
   17c78:	mov	r4, #6
   17c7c:	bfi	r7, r4, #3, #29
   17c80:	mov	r4, r6
   17c84:	strb	r7, [r2, r3]
   17c88:	str	r0, [fp, #-48]	; 0xffffffd0
   17c8c:	ldr	r0, [sp, #76]	; 0x4c
   17c90:	mov	r3, #6
   17c94:	add	r8, r8, #3
   17c98:	bfi	r5, r3, #3, #29
   17c9c:	mov	r3, #1
   17ca0:	ldr	r2, [sp, #36]	; 0x24
   17ca4:	and	r9, r3, #1
   17ca8:	cmp	r2, r1
   17cac:	bhi	17ad8 <lchmod@@Base+0x13e0>
   17cb0:	cmp	r9, #0
   17cb4:	sub	r7, r1, #1
   17cb8:	mov	r0, r5
   17cbc:	movwne	r9, #1
   17cc0:	cmp	r9, #0
   17cc4:	bne	17d08 <lchmod@@Base+0x1610>
   17cc8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   17ccc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17cd0:	tst	r5, #1
   17cd4:	beq	17878 <lchmod@@Base+0x1180>
   17cd8:	cmp	r8, r6
   17cdc:	mov	r5, #0
   17ce0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17ce4:	movcc	r1, #39	; 0x27
   17ce8:	strbcc	r1, [r2, r8]
   17cec:	add	r1, r8, #1
   17cf0:	add	r8, r8, #2
   17cf4:	cmp	r1, r6
   17cf8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17cfc:	movcc	r2, #39	; 0x27
   17d00:	strbcc	r2, [r3, r1]
   17d04:	b	17878 <lchmod@@Base+0x1180>
   17d08:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17d0c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   17d10:	b	17878 <lchmod@@Base+0x1180>
   17d14:	cmp	r8, r1
   17d18:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17d1c:	movcc	r0, #39	; 0x27
   17d20:	strbcc	r0, [r2, r8]
   17d24:	add	r0, r8, #1
   17d28:	cmp	r0, r1
   17d2c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17d30:	movcc	r2, #36	; 0x24
   17d34:	strbcc	r2, [r3, r0]
   17d38:	add	r0, r8, #2
   17d3c:	cmp	r0, r1
   17d40:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17d44:	movcc	r2, #39	; 0x27
   17d48:	strbcc	r2, [r3, r0]
   17d4c:	add	r0, r8, #3
   17d50:	mov	r3, #1
   17d54:	cmp	r0, r1
   17d58:	add	r8, r0, #1
   17d5c:	str	r3, [fp, #-48]	; 0xffffffd0
   17d60:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17d64:	movcc	r1, #92	; 0x5c
   17d68:	strbcc	r1, [r2, r0]
   17d6c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   17d70:	cmp	r1, #2
   17d74:	beq	17dd8 <lchmod@@Base+0x16e0>
   17d78:	add	r1, r7, #1
   17d7c:	mov	sl, #0
   17d80:	mov	r9, #1
   17d84:	mov	r5, #48	; 0x30
   17d88:	cmp	r1, lr
   17d8c:	bcs	17554 <lchmod@@Base+0xe5c>
   17d90:	ldrb	r1, [ip, r1]
   17d94:	sub	r1, r1, #48	; 0x30
   17d98:	uxtb	r1, r1
   17d9c:	cmp	r1, #9
   17da0:	bhi	17554 <lchmod@@Base+0xe5c>
   17da4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17da8:	cmp	r8, r1
   17dac:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   17db0:	movcc	r1, #48	; 0x30
   17db4:	strbcc	r1, [r2, r8]
   17db8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17dbc:	add	r1, r0, #2
   17dc0:	add	r8, r0, #3
   17dc4:	cmp	r1, r2
   17dc8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   17dcc:	movcc	r2, #48	; 0x30
   17dd0:	strbcc	r2, [r3, r1]
   17dd4:	b	17554 <lchmod@@Base+0xe5c>
   17dd8:	mov	r0, #48	; 0x30
   17ddc:	mov	r9, #1
   17de0:	mov	sl, #0
   17de4:	b	177ec <lchmod@@Base+0x10f4>
   17de8:	mov	sl, #0
   17dec:	b	17e28 <lchmod@@Base+0x1730>
   17df0:	mov	sl, #0
   17df4:	cmp	lr, r6
   17df8:	bls	17e28 <lchmod@@Base+0x1730>
   17dfc:	ldr	ip, [fp, #-84]	; 0xffffffac
   17e00:	ldr	r6, [sp, #40]	; 0x28
   17e04:	ldr	r0, [sp, #36]	; 0x24
   17e08:	ldrb	r0, [r0, r6]
   17e0c:	cmp	r0, #0
   17e10:	beq	17e30 <lchmod@@Base+0x1738>
   17e14:	add	r6, r6, #1
   17e18:	add	r0, r7, r6
   17e1c:	cmp	r0, lr
   17e20:	bcc	17e04 <lchmod@@Base+0x170c>
   17e24:	b	17e30 <lchmod@@Base+0x1738>
   17e28:	ldr	ip, [fp, #-84]	; 0xffffffac
   17e2c:	ldr	r6, [sp, #40]	; 0x28
   17e30:	mov	r1, r6
   17e34:	ldr	r4, [sp, #20]
   17e38:	ldr	r6, [sp, #76]	; 0x4c
   17e3c:	b	17730 <lchmod@@Base+0x1038>
   17e40:	mov	lr, r7
   17e44:	b	17e4c <lchmod@@Base+0x1754>
   17e48:	mvn	lr, #0
   17e4c:	ldr	r9, [fp, #-64]	; 0xffffffc0
   17e50:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17e54:	eor	r0, r9, #2
   17e58:	orr	r0, r0, r8
   17e5c:	clz	r0, r0
   17e60:	lsr	r0, r0, #5
   17e64:	tst	r1, r0
   17e68:	bne	17f64 <lchmod@@Base+0x186c>
   17e6c:	mov	r0, r1
   17e70:	ldr	r1, [fp, #-80]	; 0xffffffb0
   17e74:	cmp	r9, #2
   17e78:	movwne	r1, #1
   17e7c:	orr	r0, r0, r1
   17e80:	tst	r0, #1
   17e84:	bne	17fa4 <lchmod@@Base+0x18ac>
   17e88:	ldr	r0, [sp, #52]	; 0x34
   17e8c:	ldr	r1, [sp, #68]	; 0x44
   17e90:	str	lr, [sp, #80]	; 0x50
   17e94:	eor	r0, r0, #1
   17e98:	tst	r0, #1
   17e9c:	bne	17fa4 <lchmod@@Base+0x18ac>
   17ea0:	tst	r4, #1
   17ea4:	bne	17f6c <lchmod@@Base+0x1874>
   17ea8:	mov	r7, #0
   17eac:	cmp	r1, #0
   17eb0:	beq	17f9c <lchmod@@Base+0x18a4>
   17eb4:	ldr	r0, [sp, #84]	; 0x54
   17eb8:	mov	r3, #0
   17ebc:	cmp	r6, #0
   17ec0:	mov	r2, #0
   17ec4:	mov	r4, r1
   17ec8:	str	r3, [fp, #-72]	; 0xffffffb8
   17ecc:	beq	17008 <lchmod@@Base+0x910>
   17ed0:	b	17fa4 <lchmod@@Base+0x18ac>
   17ed4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17ed8:	b	17f00 <lchmod@@Base+0x1808>
   17edc:	ldr	ip, [fp, #-84]	; 0xffffffac
   17ee0:	mov	r2, #1
   17ee4:	mov	lr, r4
   17ee8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17eec:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17ef0:	b	17f04 <lchmod@@Base+0x180c>
   17ef4:	ldr	ip, [fp, #-84]	; 0xffffffac
   17ef8:	mov	r7, #2
   17efc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   17f00:	ldr	r2, [sp, #84]	; 0x54
   17f04:	mov	r0, #0
   17f08:	ldr	r1, [fp, #12]
   17f0c:	tst	r2, #1
   17f10:	mov	r2, r7
   17f14:	mov	r3, lr
   17f18:	str	r0, [sp, #8]
   17f1c:	ldr	r0, [sp, #64]	; 0x40
   17f20:	movwne	r2, #4
   17f24:	cmp	r7, #2
   17f28:	movne	r2, r7
   17f2c:	str	r2, [sp]
   17f30:	mov	r2, ip
   17f34:	bic	r1, r1, #2
   17f38:	str	r0, [sp, #12]
   17f3c:	ldr	r0, [sp, #72]	; 0x48
   17f40:	str	r1, [sp, #4]
   17f44:	mov	r1, r6
   17f48:	str	r0, [sp, #16]
   17f4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f50:	bl	16f90 <lchmod@@Base+0x898>
   17f54:	mov	r8, r0
   17f58:	mov	r0, r8
   17f5c:	sub	sp, fp, #28
   17f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f64:	mov	r7, #2
   17f68:	b	17f00 <lchmod@@Base+0x1808>
   17f6c:	mov	r0, #5
   17f70:	ldr	r2, [fp, #-84]	; 0xffffffac
   17f74:	ldr	r3, [sp, #80]	; 0x50
   17f78:	str	r0, [sp]
   17f7c:	ldr	r0, [fp, #12]
   17f80:	str	r0, [sp, #4]
   17f84:	ldr	r0, [fp, #16]
   17f88:	str	r0, [sp, #8]
   17f8c:	ldr	r0, [sp, #64]	; 0x40
   17f90:	str	r0, [sp, #12]
   17f94:	ldr	r0, [sp, #72]	; 0x48
   17f98:	b	17f48 <lchmod@@Base+0x1850>
   17f9c:	mov	r0, #0
   17fa0:	str	r0, [fp, #-72]	; 0xffffffb8
   17fa4:	ldr	r1, [sp, #92]	; 0x5c
   17fa8:	cmp	r1, #0
   17fac:	beq	17fec <lchmod@@Base+0x18f4>
   17fb0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17fb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17fb8:	tst	r0, #1
   17fbc:	bne	17ff0 <lchmod@@Base+0x18f8>
   17fc0:	ldrb	r0, [r1]
   17fc4:	cmp	r0, #0
   17fc8:	beq	17ff0 <lchmod@@Base+0x18f8>
   17fcc:	add	r1, r1, #1
   17fd0:	cmp	r8, r6
   17fd4:	strbcc	r0, [r2, r8]
   17fd8:	add	r8, r8, #1
   17fdc:	ldrb	r0, [r1], #1
   17fe0:	cmp	r0, #0
   17fe4:	bne	17fd0 <lchmod@@Base+0x18d8>
   17fe8:	b	17ff0 <lchmod@@Base+0x18f8>
   17fec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ff0:	cmp	r8, r6
   17ff4:	movcc	r0, #0
   17ff8:	strbcc	r0, [r2, r8]
   17ffc:	b	17f58 <lchmod@@Base+0x1860>
   18000:	mov	r2, #1
   18004:	b	17ee8 <lchmod@@Base+0x17f0>
   18008:	mov	r7, #5
   1800c:	b	17efc <lchmod@@Base+0x1804>
   18010:	bl	11bd4 <abort@plt>
   18014:	mov	r3, r2
   18018:	mov	r2, #0
   1801c:	b	18020 <lchmod@@Base+0x1928>
   18020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18024:	add	fp, sp, #28
   18028:	sub	sp, sp, #36	; 0x24
   1802c:	movw	r8, #49672	; 0xc208
   18030:	cmp	r3, #0
   18034:	mov	r4, r2
   18038:	str	r2, [sp, #24]
   1803c:	mov	r5, r1
   18040:	mov	r6, r0
   18044:	str	r0, [sp, #20]
   18048:	movt	r8, #2
   1804c:	movne	r8, r3
   18050:	bl	11a60 <__errno_location@plt>
   18054:	str	r0, [sp, #28]
   18058:	cmp	r4, #0
   1805c:	add	sl, r8, #8
   18060:	ldm	r8, {r3, r9}
   18064:	ldr	r7, [r0]
   18068:	ldr	r1, [r8, #40]	; 0x28
   1806c:	ldr	r2, [r8, #44]	; 0x2c
   18070:	mov	r0, #0
   18074:	orreq	r9, r9, #1
   18078:	str	r7, [sp, #32]
   1807c:	mov	r7, r5
   18080:	stm	sp, {r3, r9, sl}
   18084:	str	r1, [sp, #12]
   18088:	str	r2, [sp, #16]
   1808c:	mov	r1, #0
   18090:	mov	r2, r6
   18094:	mov	r3, r5
   18098:	bl	16f90 <lchmod@@Base+0x898>
   1809c:	add	r4, r0, #1
   180a0:	mov	r5, r0
   180a4:	mov	r0, r4
   180a8:	bl	18ffc <lchmod@@Base+0x2904>
   180ac:	mov	r6, r0
   180b0:	ldr	r0, [r8]
   180b4:	ldr	r2, [r8, #44]	; 0x2c
   180b8:	ldr	r1, [r8, #40]	; 0x28
   180bc:	mov	r3, r7
   180c0:	stm	sp, {r0, r9, sl}
   180c4:	str	r2, [sp, #16]
   180c8:	str	r1, [sp, #12]
   180cc:	mov	r0, r6
   180d0:	mov	r1, r4
   180d4:	ldr	r2, [sp, #20]
   180d8:	bl	16f90 <lchmod@@Base+0x898>
   180dc:	ldr	r0, [sp, #24]
   180e0:	ldr	r1, [sp, #32]
   180e4:	ldr	r2, [sp, #28]
   180e8:	cmp	r0, #0
   180ec:	str	r1, [r2]
   180f0:	strne	r5, [r0]
   180f4:	mov	r0, r6
   180f8:	sub	sp, fp, #28
   180fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18100:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18104:	add	fp, sp, #24
   18108:	movw	r5, #49564	; 0xc19c
   1810c:	movw	r8, #49560	; 0xc198
   18110:	movt	r5, #2
   18114:	movt	r8, #2
   18118:	ldr	r0, [r5]
   1811c:	ldr	r4, [r8]
   18120:	cmp	r0, #2
   18124:	blt	18150 <lchmod@@Base+0x1a58>
   18128:	add	r7, r4, #12
   1812c:	mov	r6, #0
   18130:	ldr	r0, [r7, r6, lsl #3]
   18134:	bl	135e0 <__assert_fail@plt+0x19ac>
   18138:	ldr	r1, [r5]
   1813c:	add	r2, r6, #2
   18140:	add	r0, r6, #1
   18144:	mov	r6, r0
   18148:	cmp	r2, r1
   1814c:	blt	18130 <lchmod@@Base+0x1a38>
   18150:	ldr	r0, [r4, #4]
   18154:	movw	r7, #49720	; 0xc238
   18158:	movt	r7, #2
   1815c:	cmp	r0, r7
   18160:	beq	18178 <lchmod@@Base+0x1a80>
   18164:	bl	135e0 <__assert_fail@plt+0x19ac>
   18168:	movw	r0, #49568	; 0xc1a0
   1816c:	mov	r6, #256	; 0x100
   18170:	movt	r0, #2
   18174:	strd	r6, [r0]
   18178:	movw	r6, #49568	; 0xc1a0
   1817c:	movt	r6, #2
   18180:	cmp	r4, r6
   18184:	beq	18194 <lchmod@@Base+0x1a9c>
   18188:	mov	r0, r4
   1818c:	bl	135e0 <__assert_fail@plt+0x19ac>
   18190:	str	r6, [r8]
   18194:	mov	r0, #1
   18198:	str	r0, [r5]
   1819c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   181a0:	movw	r3, #49672	; 0xc208
   181a4:	mvn	r2, #0
   181a8:	movt	r3, #2
   181ac:	b	181b0 <lchmod@@Base+0x1ab8>
   181b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181b4:	add	fp, sp, #28
   181b8:	sub	sp, sp, #44	; 0x2c
   181bc:	mov	r7, r3
   181c0:	str	r2, [sp, #36]	; 0x24
   181c4:	str	r1, [sp, #32]
   181c8:	mov	r5, r0
   181cc:	bl	11a60 <__errno_location@plt>
   181d0:	cmp	r5, #0
   181d4:	blt	18340 <lchmod@@Base+0x1c48>
   181d8:	cmn	r5, #-2147483647	; 0x80000001
   181dc:	beq	18340 <lchmod@@Base+0x1c48>
   181e0:	movw	r8, #49564	; 0xc19c
   181e4:	movw	r4, #49560	; 0xc198
   181e8:	str	r0, [sp, #28]
   181ec:	ldr	r0, [r0]
   181f0:	movt	r8, #2
   181f4:	movt	r4, #2
   181f8:	ldr	r1, [r8]
   181fc:	ldr	r6, [r4]
   18200:	str	r0, [sp, #24]
   18204:	cmp	r1, r5
   18208:	ble	18214 <lchmod@@Base+0x1b1c>
   1820c:	mov	sl, r6
   18210:	b	1827c <lchmod@@Base+0x1b84>
   18214:	movw	r9, #49568	; 0xc1a0
   18218:	mov	r0, #8
   1821c:	add	r2, r5, #1
   18220:	str	r1, [fp, #-32]	; 0xffffffe0
   18224:	mvn	r3, #-2147483648	; 0x80000000
   18228:	movt	r9, #2
   1822c:	str	r0, [sp]
   18230:	sub	r2, r2, r1
   18234:	sub	r1, fp, #32
   18238:	subs	r0, r6, r9
   1823c:	movne	r0, r6
   18240:	bl	1912c <lchmod@@Base+0x2a34>
   18244:	cmp	r6, r9
   18248:	mov	sl, r0
   1824c:	str	r0, [r4]
   18250:	ldrdeq	r0, [r9]
   18254:	stmeq	sl, {r0, r1}
   18258:	ldr	r1, [r8]
   1825c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18260:	add	r0, sl, r1, lsl #3
   18264:	sub	r1, r2, r1
   18268:	lsl	r2, r1, #3
   1826c:	mov	r1, #0
   18270:	bl	11a84 <memset@plt>
   18274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18278:	str	r0, [r8]
   1827c:	mov	r9, sl
   18280:	ldr	r6, [r9, r5, lsl #3]!
   18284:	ldr	r4, [r9, #4]!
   18288:	ldm	r7, {r0, r1}
   1828c:	ldr	r2, [r7, #40]	; 0x28
   18290:	ldr	r3, [r7, #44]	; 0x2c
   18294:	orr	r8, r1, #1
   18298:	add	r1, r7, #8
   1829c:	stm	sp, {r0, r8}
   182a0:	add	r0, sp, #8
   182a4:	str	r1, [sp, #20]
   182a8:	stm	r0, {r1, r2, r3}
   182ac:	mov	r0, r4
   182b0:	mov	r1, r6
   182b4:	ldr	r2, [sp, #32]
   182b8:	ldr	r3, [sp, #36]	; 0x24
   182bc:	bl	16f90 <lchmod@@Base+0x898>
   182c0:	cmp	r6, r0
   182c4:	bhi	18328 <lchmod@@Base+0x1c30>
   182c8:	add	r6, r0, #1
   182cc:	movw	r0, #49720	; 0xc238
   182d0:	movt	r0, #2
   182d4:	str	r6, [sl, r5, lsl #3]
   182d8:	cmp	r4, r0
   182dc:	beq	182e8 <lchmod@@Base+0x1bf0>
   182e0:	mov	r0, r4
   182e4:	bl	135e0 <__assert_fail@plt+0x19ac>
   182e8:	mov	r0, r6
   182ec:	bl	18ffc <lchmod@@Base+0x2904>
   182f0:	str	r0, [r9]
   182f4:	mov	r4, r0
   182f8:	add	r3, sp, #8
   182fc:	ldr	r0, [r7]
   18300:	ldr	r1, [r7, #40]	; 0x28
   18304:	ldr	r2, [r7, #44]	; 0x2c
   18308:	stm	sp, {r0, r8}
   1830c:	ldr	r0, [sp, #20]
   18310:	stm	r3, {r0, r1, r2}
   18314:	mov	r0, r4
   18318:	mov	r1, r6
   1831c:	ldr	r2, [sp, #32]
   18320:	ldr	r3, [sp, #36]	; 0x24
   18324:	bl	16f90 <lchmod@@Base+0x898>
   18328:	ldr	r0, [sp, #28]
   1832c:	ldr	r1, [sp, #24]
   18330:	str	r1, [r0]
   18334:	mov	r0, r4
   18338:	sub	sp, fp, #28
   1833c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18340:	bl	11bd4 <abort@plt>
   18344:	movw	r3, #49672	; 0xc208
   18348:	movt	r3, #2
   1834c:	b	181b0 <lchmod@@Base+0x1ab8>
   18350:	movw	r3, #49672	; 0xc208
   18354:	mov	r1, r0
   18358:	mov	r0, #0
   1835c:	mvn	r2, #0
   18360:	movt	r3, #2
   18364:	b	181b0 <lchmod@@Base+0x1ab8>
   18368:	movw	r3, #49672	; 0xc208
   1836c:	mov	r2, r1
   18370:	mov	r1, r0
   18374:	mov	r0, #0
   18378:	movt	r3, #2
   1837c:	b	181b0 <lchmod@@Base+0x1ab8>
   18380:	push	{fp, lr}
   18384:	mov	fp, sp
   18388:	sub	sp, sp, #48	; 0x30
   1838c:	vmov.i32	q8, #0	; 0x00000000
   18390:	mov	ip, #32
   18394:	mov	r3, sp
   18398:	mov	lr, r2
   1839c:	cmp	r1, #10
   183a0:	add	r2, r3, #16
   183a4:	vst1.64	{d16-d17}, [r3], ip
   183a8:	vst1.64	{d16-d17}, [r3]
   183ac:	vst1.64	{d16-d17}, [r2]
   183b0:	beq	183d0 <lchmod@@Base+0x1cd8>
   183b4:	str	r1, [sp]
   183b8:	mov	r3, sp
   183bc:	mov	r1, lr
   183c0:	mvn	r2, #0
   183c4:	bl	181b0 <lchmod@@Base+0x1ab8>
   183c8:	mov	sp, fp
   183cc:	pop	{fp, pc}
   183d0:	bl	11bd4 <abort@plt>
   183d4:	push	{r4, sl, fp, lr}
   183d8:	add	fp, sp, #8
   183dc:	sub	sp, sp, #48	; 0x30
   183e0:	mov	ip, r3
   183e4:	mov	r3, sp
   183e8:	vmov.i32	q8, #0	; 0x00000000
   183ec:	mov	lr, #32
   183f0:	cmp	r1, #10
   183f4:	add	r4, r3, #16
   183f8:	vst1.64	{d16-d17}, [r3], lr
   183fc:	vst1.64	{d16-d17}, [r3]
   18400:	vst1.64	{d16-d17}, [r4]
   18404:	beq	18424 <lchmod@@Base+0x1d2c>
   18408:	str	r1, [sp]
   1840c:	mov	r1, r2
   18410:	mov	r3, sp
   18414:	mov	r2, ip
   18418:	bl	181b0 <lchmod@@Base+0x1ab8>
   1841c:	sub	sp, fp, #8
   18420:	pop	{r4, sl, fp, pc}
   18424:	bl	11bd4 <abort@plt>
   18428:	mov	r2, r1
   1842c:	mov	r1, r0
   18430:	mov	r0, #0
   18434:	b	18380 <lchmod@@Base+0x1c88>
   18438:	mov	r3, r2
   1843c:	mov	r2, r1
   18440:	mov	r1, r0
   18444:	mov	r0, #0
   18448:	b	183d4 <lchmod@@Base+0x1cdc>
   1844c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18450:	add	fp, sp, #24
   18454:	sub	sp, sp, #48	; 0x30
   18458:	movw	r8, #49672	; 0xc208
   1845c:	mov	lr, r0
   18460:	mov	r3, sp
   18464:	mov	ip, r1
   18468:	movt	r8, #2
   1846c:	mov	r1, r3
   18470:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   18474:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   18478:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1847c:	stm	r1, {r0, r4, r5, r6, r7, r9}
   18480:	ubfx	r0, r2, #5, #3
   18484:	and	r2, r2, #31
   18488:	mov	r4, #1
   1848c:	add	r0, r3, r0, lsl #2
   18490:	ldr	r1, [r0, #8]
   18494:	bic	r4, r4, r1, lsr r2
   18498:	eor	r1, r1, r4, lsl r2
   1849c:	mov	r2, ip
   184a0:	str	r1, [r0, #8]
   184a4:	mov	r0, #0
   184a8:	mov	r1, lr
   184ac:	bl	181b0 <lchmod@@Base+0x1ab8>
   184b0:	sub	sp, fp, #24
   184b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   184b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   184bc:	add	fp, sp, #24
   184c0:	sub	sp, sp, #48	; 0x30
   184c4:	movw	lr, #49672	; 0xc208
   184c8:	mov	ip, r0
   184cc:	mov	r3, sp
   184d0:	movt	lr, #2
   184d4:	mov	r2, r3
   184d8:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   184dc:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   184e0:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   184e4:	stm	r2, {r0, r4, r5, r6, r7, r8}
   184e8:	ubfx	r0, r1, #5, #3
   184ec:	and	r1, r1, #31
   184f0:	mov	r7, #1
   184f4:	add	r0, r3, r0, lsl #2
   184f8:	ldr	r2, [r0, #8]
   184fc:	bic	r7, r7, r2, lsr r1
   18500:	eor	r1, r2, r7, lsl r1
   18504:	mvn	r2, #0
   18508:	str	r1, [r0, #8]
   1850c:	mov	r0, #0
   18510:	mov	r1, ip
   18514:	bl	181b0 <lchmod@@Base+0x1ab8>
   18518:	sub	sp, fp, #24
   1851c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18520:	push	{r4, r5, r6, r7, fp, lr}
   18524:	add	fp, sp, #16
   18528:	sub	sp, sp, #48	; 0x30
   1852c:	movw	lr, #49672	; 0xc208
   18530:	mov	ip, r0
   18534:	mov	r3, sp
   18538:	movt	lr, #2
   1853c:	mov	r2, r3
   18540:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   18544:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   18548:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1854c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   18550:	mov	r1, ip
   18554:	mvn	r2, #0
   18558:	ldr	r0, [sp, #12]
   1855c:	orr	r0, r0, #67108864	; 0x4000000
   18560:	str	r0, [sp, #12]
   18564:	mov	r0, #0
   18568:	bl	181b0 <lchmod@@Base+0x1ab8>
   1856c:	sub	sp, fp, #16
   18570:	pop	{r4, r5, r6, r7, fp, pc}
   18574:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18578:	add	fp, sp, #24
   1857c:	sub	sp, sp, #48	; 0x30
   18580:	movw	r8, #49672	; 0xc208
   18584:	mov	ip, r1
   18588:	mov	lr, r0
   1858c:	mov	r3, sp
   18590:	movt	r8, #2
   18594:	mov	r2, r3
   18598:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   1859c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   185a0:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   185a4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   185a8:	mov	r1, lr
   185ac:	mov	r2, ip
   185b0:	ldr	r0, [sp, #12]
   185b4:	orr	r0, r0, #67108864	; 0x4000000
   185b8:	str	r0, [sp, #12]
   185bc:	mov	r0, #0
   185c0:	bl	181b0 <lchmod@@Base+0x1ab8>
   185c4:	sub	sp, fp, #24
   185c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   185d0:	add	fp, sp, #24
   185d4:	sub	sp, sp, #96	; 0x60
   185d8:	mov	lr, sp
   185dc:	vmov.i32	q8, #0	; 0x00000000
   185e0:	mov	ip, r2
   185e4:	cmp	r1, #10
   185e8:	add	r3, lr, #16
   185ec:	mov	r2, lr
   185f0:	vst1.64	{d16-d17}, [r3]
   185f4:	mov	r3, #28
   185f8:	vst1.64	{d16-d17}, [r2], r3
   185fc:	vst1.32	{d16-d17}, [r2]
   18600:	beq	18640 <lchmod@@Base+0x1f48>
   18604:	str	r1, [sp, #48]	; 0x30
   18608:	add	r3, sp, #48	; 0x30
   1860c:	ldm	lr!, {r2, r4, r5, r6, r7}
   18610:	add	r1, r3, #4
   18614:	stmia	r1!, {r2, r4, r5, r6, r7}
   18618:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1861c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   18620:	mvn	r2, #0
   18624:	ldr	r1, [sp, #60]	; 0x3c
   18628:	orr	r1, r1, #67108864	; 0x4000000
   1862c:	str	r1, [sp, #60]	; 0x3c
   18630:	mov	r1, ip
   18634:	bl	181b0 <lchmod@@Base+0x1ab8>
   18638:	sub	sp, fp, #24
   1863c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18640:	bl	11bd4 <abort@plt>
   18644:	push	{fp, lr}
   18648:	mov	fp, sp
   1864c:	sub	sp, sp, #8
   18650:	mvn	ip, #0
   18654:	str	ip, [sp]
   18658:	bl	18664 <lchmod@@Base+0x1f6c>
   1865c:	mov	sp, fp
   18660:	pop	{fp, pc}
   18664:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18668:	add	fp, sp, #24
   1866c:	sub	sp, sp, #48	; 0x30
   18670:	movw	ip, #49672	; 0xc208
   18674:	mov	lr, r3
   18678:	mov	r3, sp
   1867c:	cmp	r1, #0
   18680:	movt	ip, #2
   18684:	cmpne	r2, #0
   18688:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1868c:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   18690:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   18694:	stm	r3, {r4, r5, r6, r7, r8, r9}
   18698:	mov	r3, #10
   1869c:	str	r3, [sp]
   186a0:	bne	186a8 <lchmod@@Base+0x1fb0>
   186a4:	bl	11bd4 <abort@plt>
   186a8:	ldr	ip, [fp, #8]
   186ac:	str	r2, [sp, #44]	; 0x2c
   186b0:	str	r1, [sp, #40]	; 0x28
   186b4:	mov	r3, sp
   186b8:	mov	r1, lr
   186bc:	mov	r2, ip
   186c0:	bl	181b0 <lchmod@@Base+0x1ab8>
   186c4:	sub	sp, fp, #24
   186c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   186cc:	push	{fp, lr}
   186d0:	mov	fp, sp
   186d4:	sub	sp, sp, #8
   186d8:	mov	r3, r2
   186dc:	mov	r2, r1
   186e0:	mov	r1, r0
   186e4:	mvn	r0, #0
   186e8:	str	r0, [sp]
   186ec:	mov	r0, #0
   186f0:	bl	18664 <lchmod@@Base+0x1f6c>
   186f4:	mov	sp, fp
   186f8:	pop	{fp, pc}
   186fc:	push	{fp, lr}
   18700:	mov	fp, sp
   18704:	sub	sp, sp, #8
   18708:	mov	ip, r2
   1870c:	mov	r2, r1
   18710:	mov	r1, r0
   18714:	str	r3, [sp]
   18718:	mov	r0, #0
   1871c:	mov	r3, ip
   18720:	bl	18664 <lchmod@@Base+0x1f6c>
   18724:	mov	sp, fp
   18728:	pop	{fp, pc}
   1872c:	movw	r3, #49576	; 0xc1a8
   18730:	movt	r3, #2
   18734:	b	181b0 <lchmod@@Base+0x1ab8>
   18738:	movw	r3, #49576	; 0xc1a8
   1873c:	mov	r2, r1
   18740:	mov	r1, r0
   18744:	mov	r0, #0
   18748:	movt	r3, #2
   1874c:	b	181b0 <lchmod@@Base+0x1ab8>
   18750:	movw	r3, #49576	; 0xc1a8
   18754:	mvn	r2, #0
   18758:	movt	r3, #2
   1875c:	b	181b0 <lchmod@@Base+0x1ab8>
   18760:	movw	r3, #49576	; 0xc1a8
   18764:	mov	r1, r0
   18768:	mov	r0, #0
   1876c:	mvn	r2, #0
   18770:	movt	r3, #2
   18774:	b	181b0 <lchmod@@Base+0x1ab8>
   18778:	push	{r4, r5, fp, lr}
   1877c:	add	fp, sp, #8
   18780:	mov	r5, r0
   18784:	mov	r4, r1
   18788:	mov	r0, #0
   1878c:	mov	r2, #5
   18790:	mov	r1, r5
   18794:	bl	118c8 <dcgettext@plt>
   18798:	cmp	r0, r5
   1879c:	popne	{r4, r5, fp, pc}
   187a0:	bl	1a24c <lchmod@@Base+0x3b54>
   187a4:	ldrb	r1, [r0]
   187a8:	and	r1, r1, #223	; 0xdf
   187ac:	cmp	r1, #71	; 0x47
   187b0:	beq	18818 <lchmod@@Base+0x2120>
   187b4:	cmp	r1, #85	; 0x55
   187b8:	bne	1883c <lchmod@@Base+0x2144>
   187bc:	ldrb	r1, [r0, #1]
   187c0:	and	r1, r1, #223	; 0xdf
   187c4:	cmp	r1, #84	; 0x54
   187c8:	bne	1883c <lchmod@@Base+0x2144>
   187cc:	ldrb	r1, [r0, #2]
   187d0:	and	r1, r1, #223	; 0xdf
   187d4:	cmp	r1, #70	; 0x46
   187d8:	ldrbeq	r1, [r0, #3]
   187dc:	cmpeq	r1, #45	; 0x2d
   187e0:	bne	1883c <lchmod@@Base+0x2144>
   187e4:	ldrb	r1, [r0, #4]
   187e8:	cmp	r1, #56	; 0x38
   187ec:	ldrbeq	r0, [r0, #5]
   187f0:	cmpeq	r0, #0
   187f4:	bne	1883c <lchmod@@Base+0x2144>
   187f8:	ldrb	r1, [r5]
   187fc:	movw	r2, #45259	; 0xb0cb
   18800:	movw	r0, #45263	; 0xb0cf
   18804:	movt	r2, #1
   18808:	movt	r0, #1
   1880c:	cmp	r1, #96	; 0x60
   18810:	moveq	r0, r2
   18814:	pop	{r4, r5, fp, pc}
   18818:	ldrb	r1, [r0, #1]
   1881c:	and	r1, r1, #223	; 0xdf
   18820:	cmp	r1, #66	; 0x42
   18824:	bne	1883c <lchmod@@Base+0x2144>
   18828:	ldrb	r1, [r0, #2]
   1882c:	cmp	r1, #49	; 0x31
   18830:	ldrbeq	r1, [r0, #3]
   18834:	cmpeq	r1, #56	; 0x38
   18838:	beq	18858 <lchmod@@Base+0x2160>
   1883c:	movw	r1, #45253	; 0xb0c5
   18840:	movw	r0, #45257	; 0xb0c9
   18844:	cmp	r4, #9
   18848:	movt	r1, #1
   1884c:	movt	r0, #1
   18850:	moveq	r0, r1
   18854:	pop	{r4, r5, fp, pc}
   18858:	ldrb	r1, [r0, #4]
   1885c:	cmp	r1, #48	; 0x30
   18860:	ldrbeq	r1, [r0, #5]
   18864:	cmpeq	r1, #51	; 0x33
   18868:	bne	1883c <lchmod@@Base+0x2144>
   1886c:	ldrb	r1, [r0, #6]
   18870:	cmp	r1, #48	; 0x30
   18874:	ldrbeq	r0, [r0, #7]
   18878:	cmpeq	r0, #0
   1887c:	bne	1883c <lchmod@@Base+0x2144>
   18880:	ldrb	r1, [r5]
   18884:	movw	r2, #45267	; 0xb0d3
   18888:	movw	r0, #45271	; 0xb0d7
   1888c:	movt	r2, #1
   18890:	movt	r0, #1
   18894:	b	1880c <lchmod@@Base+0x2114>
   18898:	push	{r4, r5, r6, sl, fp, lr}
   1889c:	add	fp, sp, #16
   188a0:	ldr	r4, [r0], #8
   188a4:	mov	r5, r1
   188a8:	cmp	r4, r0
   188ac:	beq	188cc <lchmod@@Base+0x21d4>
   188b0:	mov	r0, r4
   188b4:	mov	r1, r5
   188b8:	bl	19c18 <lchmod@@Base+0x3520>
   188bc:	mov	r6, r0
   188c0:	cmp	r0, #0
   188c4:	moveq	r6, r4
   188c8:	b	188f4 <lchmod@@Base+0x21fc>
   188cc:	mov	r0, r5
   188d0:	bl	19be8 <lchmod@@Base+0x34f0>
   188d4:	cmp	r0, #0
   188d8:	beq	188f0 <lchmod@@Base+0x21f8>
   188dc:	mov	r1, r4
   188e0:	mov	r2, r5
   188e4:	mov	r6, r0
   188e8:	bl	11898 <memcpy@plt>
   188ec:	b	188f4 <lchmod@@Base+0x21fc>
   188f0:	mov	r6, #0
   188f4:	mov	r0, r6
   188f8:	pop	{r4, r5, r6, sl, fp, pc}
   188fc:	push	{r4, r5, r6, sl, fp, lr}
   18900:	add	fp, sp, #16
   18904:	mov	r4, r0
   18908:	add	r6, r0, #8
   1890c:	ldrd	r0, [r0]
   18910:	lsl	r5, r1, #1
   18914:	cmp	r0, r6
   18918:	beq	18924 <lchmod@@Base+0x222c>
   1891c:	bl	135e0 <__assert_fail@plt+0x19ac>
   18920:	ldr	r1, [r4, #4]
   18924:	cmp	r5, r1
   18928:	bcc	1894c <lchmod@@Base+0x2254>
   1892c:	mov	r0, r5
   18930:	bl	19be8 <lchmod@@Base+0x34f0>
   18934:	cmp	r0, #0
   18938:	beq	18958 <lchmod@@Base+0x2260>
   1893c:	str	r0, [r4]
   18940:	mov	r0, #1
   18944:	str	r5, [r4, #4]
   18948:	pop	{r4, r5, r6, sl, fp, pc}
   1894c:	bl	11a60 <__errno_location@plt>
   18950:	mov	r1, #12
   18954:	str	r1, [r0]
   18958:	str	r6, [r4]
   1895c:	mov	r0, #0
   18960:	mov	r5, #1024	; 0x400
   18964:	b	18944 <lchmod@@Base+0x224c>
   18968:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1896c:	add	fp, sp, #24
   18970:	ldrd	r8, [r0]
   18974:	add	r7, r0, #8
   18978:	mov	r4, r0
   1897c:	lsl	r5, r9, #1
   18980:	cmp	r8, r7
   18984:	beq	189b0 <lchmod@@Base+0x22b8>
   18988:	cmp	r5, r9
   1898c:	bcc	189e4 <lchmod@@Base+0x22ec>
   18990:	mov	r0, r8
   18994:	mov	r1, r5
   18998:	bl	19c18 <lchmod@@Base+0x3520>
   1899c:	mov	r6, r0
   189a0:	cmp	r0, #0
   189a4:	bne	189d4 <lchmod@@Base+0x22dc>
   189a8:	ldr	r8, [r4]
   189ac:	b	189f0 <lchmod@@Base+0x22f8>
   189b0:	mov	r0, r5
   189b4:	bl	19be8 <lchmod@@Base+0x34f0>
   189b8:	cmp	r0, #0
   189bc:	moveq	r0, #0
   189c0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   189c4:	ldr	r2, [r4, #4]
   189c8:	mov	r1, r8
   189cc:	mov	r6, r0
   189d0:	bl	11898 <memcpy@plt>
   189d4:	str	r6, [r4]
   189d8:	mov	r0, #1
   189dc:	str	r5, [r4, #4]
   189e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   189e4:	bl	11a60 <__errno_location@plt>
   189e8:	mov	r1, #12
   189ec:	str	r1, [r0]
   189f0:	mov	r0, r8
   189f4:	bl	135e0 <__assert_fail@plt+0x19ac>
   189f8:	mov	r0, #0
   189fc:	mov	r5, #1024	; 0x400
   18a00:	str	r7, [r4]
   18a04:	b	189dc <lchmod@@Base+0x22e4>
   18a08:	push	{r4, sl, fp, lr}
   18a0c:	add	fp, sp, #8
   18a10:	mov	r4, r1
   18a14:	bl	11a18 <getfilecon@plt>
   18a18:	mov	r1, r4
   18a1c:	pop	{r4, sl, fp, lr}
   18a20:	b	18a24 <lchmod@@Base+0x232c>
   18a24:	push	{r4, r5, fp, lr}
   18a28:	add	fp, sp, #8
   18a2c:	cmp	r0, #10
   18a30:	beq	18a48 <lchmod@@Base+0x2350>
   18a34:	cmp	r0, #0
   18a38:	bne	18a90 <lchmod@@Base+0x2398>
   18a3c:	bl	11a60 <__errno_location@plt>
   18a40:	mov	r1, #95	; 0x5f
   18a44:	b	18a88 <lchmod@@Base+0x2390>
   18a48:	ldr	r5, [r1]
   18a4c:	mov	r4, r1
   18a50:	movw	r1, #45360	; 0xb130
   18a54:	movt	r1, #1
   18a58:	mov	r0, r5
   18a5c:	bl	1182c <strcmp@plt>
   18a60:	mov	r1, r0
   18a64:	mov	r0, #10
   18a68:	cmp	r1, #0
   18a6c:	popne	{r4, r5, fp, pc}
   18a70:	mov	r0, r5
   18a74:	bl	11b5c <freecon@plt>
   18a78:	mov	r0, #0
   18a7c:	str	r0, [r4]
   18a80:	bl	11a60 <__errno_location@plt>
   18a84:	mov	r1, #61	; 0x3d
   18a88:	str	r1, [r0]
   18a8c:	mvn	r0, #0
   18a90:	pop	{r4, r5, fp, pc}
   18a94:	push	{r4, sl, fp, lr}
   18a98:	add	fp, sp, #8
   18a9c:	mov	r4, r1
   18aa0:	bl	119a0 <lgetfilecon@plt>
   18aa4:	mov	r1, r4
   18aa8:	pop	{r4, sl, fp, lr}
   18aac:	b	18a24 <lchmod@@Base+0x232c>
   18ab0:	push	{r4, sl, fp, lr}
   18ab4:	add	fp, sp, #8
   18ab8:	mov	r4, r1
   18abc:	bl	118ec <fgetfilecon@plt>
   18ac0:	mov	r1, r4
   18ac4:	pop	{r4, sl, fp, lr}
   18ac8:	b	18a24 <lchmod@@Base+0x232c>
   18acc:	push	{r4, r5, r6, r7, fp, lr}
   18ad0:	add	fp, sp, #16
   18ad4:	mov	r4, r0
   18ad8:	cmp	r0, #2
   18adc:	movhi	r0, r4
   18ae0:	pophi	{r4, r5, r6, r7, fp, pc}
   18ae4:	mov	r0, r4
   18ae8:	bl	1a320 <lchmod@@Base+0x3c28>
   18aec:	mov	r5, r0
   18af0:	bl	11a60 <__errno_location@plt>
   18af4:	ldr	r7, [r0]
   18af8:	mov	r6, r0
   18afc:	mov	r0, r4
   18b00:	bl	11be0 <close@plt>
   18b04:	mov	r0, r5
   18b08:	str	r7, [r6]
   18b0c:	pop	{r4, r5, r6, r7, fp, pc}
   18b10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18b14:	add	fp, sp, #24
   18b18:	sub	sp, sp, #32
   18b1c:	ldr	r6, [fp, #12]
   18b20:	ldr	r7, [fp, #8]
   18b24:	mov	r4, r2
   18b28:	mov	r8, r0
   18b2c:	cmp	r1, #0
   18b30:	beq	18b58 <lchmod@@Base+0x2460>
   18b34:	movw	r2, #45370	; 0xb13a
   18b38:	mov	r5, r1
   18b3c:	str	r3, [sp, #4]
   18b40:	str	r4, [sp]
   18b44:	mov	r0, r8
   18b48:	mov	r1, #1
   18b4c:	movt	r2, #1
   18b50:	mov	r3, r5
   18b54:	b	18b70 <lchmod@@Base+0x2478>
   18b58:	movw	r2, #45382	; 0xb146
   18b5c:	str	r3, [sp]
   18b60:	mov	r0, r8
   18b64:	mov	r1, #1
   18b68:	mov	r3, r4
   18b6c:	movt	r2, #1
   18b70:	bl	11ab4 <__fprintf_chk@plt>
   18b74:	movw	r1, #45389	; 0xb14d
   18b78:	mov	r0, #0
   18b7c:	mov	r2, #5
   18b80:	movt	r1, #1
   18b84:	bl	118c8 <dcgettext@plt>
   18b88:	movw	r2, #46107	; 0xb41b
   18b8c:	mov	r3, r0
   18b90:	movw	r0, #2022	; 0x7e6
   18b94:	mov	r1, #1
   18b98:	str	r0, [sp]
   18b9c:	movt	r2, #1
   18ba0:	mov	r0, r8
   18ba4:	bl	11ab4 <__fprintf_chk@plt>
   18ba8:	movw	r4, #44706	; 0xaea2
   18bac:	mov	r1, r8
   18bb0:	movt	r4, #1
   18bb4:	mov	r0, r4
   18bb8:	bl	11808 <fputs_unlocked@plt>
   18bbc:	movw	r1, #45393	; 0xb151
   18bc0:	mov	r0, #0
   18bc4:	mov	r2, #5
   18bc8:	movt	r1, #1
   18bcc:	bl	118c8 <dcgettext@plt>
   18bd0:	movw	r3, #45564	; 0xb1fc
   18bd4:	mov	r2, r0
   18bd8:	mov	r0, r8
   18bdc:	mov	r1, #1
   18be0:	movt	r3, #1
   18be4:	bl	11ab4 <__fprintf_chk@plt>
   18be8:	mov	r0, r4
   18bec:	mov	r1, r8
   18bf0:	bl	11808 <fputs_unlocked@plt>
   18bf4:	cmp	r6, #9
   18bf8:	bhi	18c5c <lchmod@@Base+0x2564>
   18bfc:	add	r0, pc, #0
   18c00:	ldr	pc, [r0, r6, lsl #2]
   18c04:	andeq	r8, r1, r4, lsr lr
   18c08:	andeq	r8, r1, ip, lsr #24
   18c0c:	andeq	r8, r1, r8, ror #24
   18c10:	muleq	r1, r0, ip
   18c14:			; <UNDEFINED> instruction: 0x00018cb8
   18c18:	andeq	r8, r1, r0, ror #25
   18c1c:	andeq	r8, r1, r8, lsl #26
   18c20:	andeq	r8, r1, r0, asr #26
   18c24:	andeq	r8, r1, r0, ror #27
   18c28:	andeq	r8, r1, r8, lsl #27
   18c2c:	movw	r1, #45598	; 0xb21e
   18c30:	mov	r0, #0
   18c34:	mov	r2, #5
   18c38:	movt	r1, #1
   18c3c:	bl	118c8 <dcgettext@plt>
   18c40:	ldr	r3, [r7]
   18c44:	mov	r2, r0
   18c48:	mov	r0, r8
   18c4c:	mov	r1, #1
   18c50:	sub	sp, fp, #24
   18c54:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18c58:	b	11ab4 <__fprintf_chk@plt>
   18c5c:	movw	r1, #45917	; 0xb35d
   18c60:	movt	r1, #1
   18c64:	b	18d90 <lchmod@@Base+0x2698>
   18c68:	movw	r1, #45614	; 0xb22e
   18c6c:	mov	r0, #0
   18c70:	mov	r2, #5
   18c74:	movt	r1, #1
   18c78:	bl	118c8 <dcgettext@plt>
   18c7c:	mov	r2, r0
   18c80:	ldr	r3, [r7]
   18c84:	ldr	r0, [r7, #4]
   18c88:	str	r0, [sp]
   18c8c:	b	18d7c <lchmod@@Base+0x2684>
   18c90:	movw	r1, #45637	; 0xb245
   18c94:	mov	r0, #0
   18c98:	mov	r2, #5
   18c9c:	movt	r1, #1
   18ca0:	bl	118c8 <dcgettext@plt>
   18ca4:	ldr	r3, [r7]
   18ca8:	mov	r2, r0
   18cac:	ldmib	r7, {r0, r1}
   18cb0:	stm	sp, {r0, r1}
   18cb4:	b	18d7c <lchmod@@Base+0x2684>
   18cb8:	movw	r1, #45665	; 0xb261
   18cbc:	mov	r0, #0
   18cc0:	mov	r2, #5
   18cc4:	movt	r1, #1
   18cc8:	bl	118c8 <dcgettext@plt>
   18ccc:	ldr	r3, [r7]
   18cd0:	mov	r2, r0
   18cd4:	ldmib	r7, {r0, r1, r7}
   18cd8:	stm	sp, {r0, r1, r7}
   18cdc:	b	18d7c <lchmod@@Base+0x2684>
   18ce0:	movw	r1, #45697	; 0xb281
   18ce4:	mov	r0, #0
   18ce8:	mov	r2, #5
   18cec:	movt	r1, #1
   18cf0:	bl	118c8 <dcgettext@plt>
   18cf4:	ldr	r3, [r7]
   18cf8:	mov	r2, r0
   18cfc:	ldmib	r7, {r0, r1, r6, r7}
   18d00:	stm	sp, {r0, r1, r6, r7}
   18d04:	b	18d7c <lchmod@@Base+0x2684>
   18d08:	movw	r1, #45733	; 0xb2a5
   18d0c:	mov	r0, #0
   18d10:	mov	r2, #5
   18d14:	movt	r1, #1
   18d18:	bl	118c8 <dcgettext@plt>
   18d1c:	ldr	r3, [r7]
   18d20:	mov	r2, r0
   18d24:	ldmib	r7, {r0, r1, r6}
   18d28:	ldr	r5, [r7, #16]
   18d2c:	ldr	r7, [r7, #20]
   18d30:	stm	sp, {r0, r1, r6}
   18d34:	str	r5, [sp, #12]
   18d38:	str	r7, [sp, #16]
   18d3c:	b	18d7c <lchmod@@Base+0x2684>
   18d40:	movw	r1, #45773	; 0xb2cd
   18d44:	mov	r0, #0
   18d48:	mov	r2, #5
   18d4c:	movt	r1, #1
   18d50:	bl	118c8 <dcgettext@plt>
   18d54:	ldr	r3, [r7]
   18d58:	mov	r2, r0
   18d5c:	ldmib	r7, {r0, r1, r6}
   18d60:	ldr	r5, [r7, #16]
   18d64:	ldr	r4, [r7, #20]
   18d68:	ldr	r7, [r7, #24]
   18d6c:	stm	sp, {r0, r1, r6}
   18d70:	str	r5, [sp, #12]
   18d74:	str	r4, [sp, #16]
   18d78:	str	r7, [sp, #20]
   18d7c:	mov	r0, r8
   18d80:	mov	r1, #1
   18d84:	b	18e30 <lchmod@@Base+0x2738>
   18d88:	movw	r1, #45865	; 0xb329
   18d8c:	movt	r1, #1
   18d90:	mov	r0, #0
   18d94:	mov	r2, #5
   18d98:	bl	118c8 <dcgettext@plt>
   18d9c:	mov	ip, r0
   18da0:	ldr	r3, [r7]
   18da4:	ldr	r0, [r7, #4]
   18da8:	ldr	r1, [r7, #8]
   18dac:	ldr	r6, [r7, #12]
   18db0:	ldr	r5, [r7, #16]
   18db4:	ldr	r4, [r7, #20]
   18db8:	ldr	r2, [r7, #24]
   18dbc:	ldr	lr, [r7, #28]
   18dc0:	ldr	r7, [r7, #32]
   18dc4:	stm	sp, {r0, r1, r6}
   18dc8:	str	r5, [sp, #12]
   18dcc:	str	r4, [sp, #16]
   18dd0:	str	r2, [sp, #20]
   18dd4:	str	lr, [sp, #24]
   18dd8:	str	r7, [sp, #28]
   18ddc:	b	18e24 <lchmod@@Base+0x272c>
   18de0:	movw	r1, #45817	; 0xb2f9
   18de4:	mov	r0, #0
   18de8:	mov	r2, #5
   18dec:	movt	r1, #1
   18df0:	bl	118c8 <dcgettext@plt>
   18df4:	mov	ip, r0
   18df8:	ldr	r3, [r7]
   18dfc:	ldmib	r7, {r0, r1, r6}
   18e00:	ldr	r5, [r7, #16]
   18e04:	ldr	r4, [r7, #20]
   18e08:	ldr	r2, [r7, #24]
   18e0c:	ldr	r7, [r7, #28]
   18e10:	stm	sp, {r0, r1, r6}
   18e14:	str	r5, [sp, #12]
   18e18:	str	r4, [sp, #16]
   18e1c:	str	r2, [sp, #20]
   18e20:	str	r7, [sp, #24]
   18e24:	mov	r0, r8
   18e28:	mov	r1, #1
   18e2c:	mov	r2, ip
   18e30:	bl	11ab4 <__fprintf_chk@plt>
   18e34:	sub	sp, fp, #24
   18e38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e3c:	push	{r4, sl, fp, lr}
   18e40:	add	fp, sp, #8
   18e44:	sub	sp, sp, #8
   18e48:	ldr	ip, [fp, #8]
   18e4c:	mov	lr, #0
   18e50:	ldr	r4, [ip, lr, lsl #2]
   18e54:	add	lr, lr, #1
   18e58:	cmp	r4, #0
   18e5c:	bne	18e50 <lchmod@@Base+0x2758>
   18e60:	sub	r4, lr, #1
   18e64:	str	ip, [sp]
   18e68:	str	r4, [sp, #4]
   18e6c:	bl	18b10 <lchmod@@Base+0x2418>
   18e70:	sub	sp, fp, #8
   18e74:	pop	{r4, sl, fp, pc}
   18e78:	push	{r4, r5, fp, lr}
   18e7c:	add	fp, sp, #8
   18e80:	sub	sp, sp, #48	; 0x30
   18e84:	ldr	r4, [fp, #8]
   18e88:	mov	ip, #0
   18e8c:	add	lr, sp, #8
   18e90:	ldr	r5, [r4]
   18e94:	cmp	r5, #0
   18e98:	str	r5, [lr, ip, lsl #2]
   18e9c:	beq	18eb0 <lchmod@@Base+0x27b8>
   18ea0:	add	ip, ip, #1
   18ea4:	add	r4, r4, #4
   18ea8:	cmp	ip, #10
   18eac:	bcc	18e90 <lchmod@@Base+0x2798>
   18eb0:	str	lr, [sp]
   18eb4:	str	ip, [sp, #4]
   18eb8:	bl	18b10 <lchmod@@Base+0x2418>
   18ebc:	sub	sp, fp, #8
   18ec0:	pop	{r4, r5, fp, pc}
   18ec4:	push	{fp, lr}
   18ec8:	mov	fp, sp
   18ecc:	sub	sp, sp, #8
   18ed0:	add	ip, fp, #8
   18ed4:	str	ip, [sp, #4]
   18ed8:	str	ip, [sp]
   18edc:	bl	18e78 <lchmod@@Base+0x2780>
   18ee0:	mov	sp, fp
   18ee4:	pop	{fp, pc}
   18ee8:	push	{fp, lr}
   18eec:	mov	fp, sp
   18ef0:	movw	r0, #49644	; 0xc1ec
   18ef4:	movt	r0, #2
   18ef8:	ldr	r1, [r0]
   18efc:	movw	r0, #44706	; 0xaea2
   18f00:	movt	r0, #1
   18f04:	bl	11808 <fputs_unlocked@plt>
   18f08:	movw	r1, #45977	; 0xb399
   18f0c:	mov	r0, #0
   18f10:	mov	r2, #5
   18f14:	movt	r1, #1
   18f18:	bl	118c8 <dcgettext@plt>
   18f1c:	movw	r2, #45997	; 0xb3ad
   18f20:	mov	r1, r0
   18f24:	mov	r0, #1
   18f28:	movt	r2, #1
   18f2c:	bl	11a90 <__printf_chk@plt>
   18f30:	movw	r1, #46019	; 0xb3c3
   18f34:	mov	r0, #0
   18f38:	mov	r2, #5
   18f3c:	movt	r1, #1
   18f40:	bl	118c8 <dcgettext@plt>
   18f44:	movw	r2, #43888	; 0xab70
   18f48:	movw	r3, #44515	; 0xade3
   18f4c:	mov	r1, r0
   18f50:	mov	r0, #1
   18f54:	movt	r2, #1
   18f58:	movt	r3, #1
   18f5c:	bl	11a90 <__printf_chk@plt>
   18f60:	movw	r1, #46039	; 0xb3d7
   18f64:	mov	r0, #0
   18f68:	mov	r2, #5
   18f6c:	movt	r1, #1
   18f70:	bl	118c8 <dcgettext@plt>
   18f74:	movw	r2, #46078	; 0xb3fe
   18f78:	mov	r1, r0
   18f7c:	mov	r0, #1
   18f80:	movt	r2, #1
   18f84:	pop	{fp, lr}
   18f88:	b	11a90 <__printf_chk@plt>
   18f8c:	b	18f90 <lchmod@@Base+0x2898>
   18f90:	push	{r4, r5, r6, sl, fp, lr}
   18f94:	add	fp, sp, #16
   18f98:	mov	r4, r2
   18f9c:	mov	r5, r1
   18fa0:	mov	r6, r0
   18fa4:	bl	1a2e4 <lchmod@@Base+0x3bec>
   18fa8:	cmp	r0, #0
   18fac:	popne	{r4, r5, r6, sl, fp, pc}
   18fb0:	cmp	r6, #0
   18fb4:	beq	18fc8 <lchmod@@Base+0x28d0>
   18fb8:	cmp	r5, #0
   18fbc:	cmpne	r4, #0
   18fc0:	bne	18fc8 <lchmod@@Base+0x28d0>
   18fc4:	pop	{r4, r5, r6, sl, fp, pc}
   18fc8:	bl	1941c <lchmod@@Base+0x2d24>
   18fcc:	push	{fp, lr}
   18fd0:	mov	fp, sp
   18fd4:	bl	19be8 <lchmod@@Base+0x34f0>
   18fd8:	cmp	r0, #0
   18fdc:	popne	{fp, pc}
   18fe0:	bl	1941c <lchmod@@Base+0x2d24>
   18fe4:	push	{fp, lr}
   18fe8:	mov	fp, sp
   18fec:	bl	19be8 <lchmod@@Base+0x34f0>
   18ff0:	cmp	r0, #0
   18ff4:	popne	{fp, pc}
   18ff8:	bl	1941c <lchmod@@Base+0x2d24>
   18ffc:	push	{fp, lr}
   19000:	mov	fp, sp
   19004:	bl	19be8 <lchmod@@Base+0x34f0>
   19008:	cmp	r0, #0
   1900c:	popne	{fp, pc}
   19010:	bl	1941c <lchmod@@Base+0x2d24>
   19014:	push	{r4, r5, fp, lr}
   19018:	add	fp, sp, #8
   1901c:	mov	r4, r1
   19020:	mov	r5, r0
   19024:	bl	19c18 <lchmod@@Base+0x3520>
   19028:	cmp	r0, #0
   1902c:	popne	{r4, r5, fp, pc}
   19030:	cmp	r5, #0
   19034:	beq	19044 <lchmod@@Base+0x294c>
   19038:	cmp	r4, #0
   1903c:	bne	19044 <lchmod@@Base+0x294c>
   19040:	pop	{r4, r5, fp, pc}
   19044:	bl	1941c <lchmod@@Base+0x2d24>
   19048:	push	{fp, lr}
   1904c:	mov	fp, sp
   19050:	cmp	r1, #0
   19054:	orreq	r1, r1, #1
   19058:	bl	19c18 <lchmod@@Base+0x3520>
   1905c:	cmp	r0, #0
   19060:	popne	{fp, pc}
   19064:	bl	1941c <lchmod@@Base+0x2d24>
   19068:	push	{fp, lr}
   1906c:	mov	fp, sp
   19070:	clz	r3, r2
   19074:	lsr	ip, r3, #5
   19078:	clz	r3, r1
   1907c:	lsr	r3, r3, #5
   19080:	orrs	r3, r3, ip
   19084:	movwne	r1, #1
   19088:	movwne	r2, #1
   1908c:	bl	1a2e4 <lchmod@@Base+0x3bec>
   19090:	cmp	r0, #0
   19094:	popne	{fp, pc}
   19098:	bl	1941c <lchmod@@Base+0x2d24>
   1909c:	push	{fp, lr}
   190a0:	mov	fp, sp
   190a4:	mov	r2, r1
   190a8:	mov	r1, r0
   190ac:	mov	r0, #0
   190b0:	bl	1a2e4 <lchmod@@Base+0x3bec>
   190b4:	cmp	r0, #0
   190b8:	popne	{fp, pc}
   190bc:	bl	1941c <lchmod@@Base+0x2d24>
   190c0:	mov	r2, r1
   190c4:	mov	r1, r0
   190c8:	mov	r0, #0
   190cc:	b	19068 <lchmod@@Base+0x2970>
   190d0:	mov	r2, #1
   190d4:	b	190d8 <lchmod@@Base+0x29e0>
   190d8:	push	{r4, r5, fp, lr}
   190dc:	add	fp, sp, #8
   190e0:	ldr	r5, [r1]
   190e4:	mov	r4, r1
   190e8:	cmp	r0, #0
   190ec:	beq	19104 <lchmod@@Base+0x2a0c>
   190f0:	mov	r1, #1
   190f4:	add	r1, r1, r5, lsr #1
   190f8:	adds	r5, r5, r1
   190fc:	bcc	1911c <lchmod@@Base+0x2a24>
   19100:	bl	1941c <lchmod@@Base+0x2d24>
   19104:	cmp	r5, #0
   19108:	bne	1911c <lchmod@@Base+0x2a24>
   1910c:	mov	r1, #64	; 0x40
   19110:	cmp	r2, #64	; 0x40
   19114:	udiv	r5, r1, r2
   19118:	addhi	r5, r5, #1
   1911c:	mov	r1, r5
   19120:	bl	18f90 <lchmod@@Base+0x2898>
   19124:	str	r5, [r4]
   19128:	pop	{r4, r5, fp, pc}
   1912c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19130:	add	fp, sp, #24
   19134:	ldr	r6, [r1]
   19138:	mov	r8, r1
   1913c:	ldr	r4, [fp, #8]
   19140:	add	r1, r6, r6, asr #1
   19144:	cmp	r1, r6
   19148:	mvnvs	r1, #-2147483648	; 0x80000000
   1914c:	cmp	r1, r3
   19150:	mov	r5, r1
   19154:	movgt	r5, r3
   19158:	cmn	r3, #1
   1915c:	movle	r5, r1
   19160:	cmn	r4, #1
   19164:	ble	19184 <lchmod@@Base+0x2a8c>
   19168:	cmp	r4, #0
   1916c:	beq	191d8 <lchmod@@Base+0x2ae0>
   19170:	cmn	r5, #1
   19174:	ble	191ac <lchmod@@Base+0x2ab4>
   19178:	mvn	r7, #-2147483648	; 0x80000000
   1917c:	udiv	r1, r7, r4
   19180:	b	191a0 <lchmod@@Base+0x2aa8>
   19184:	cmn	r5, #1
   19188:	ble	191c8 <lchmod@@Base+0x2ad0>
   1918c:	cmn	r4, #1
   19190:	beq	191d8 <lchmod@@Base+0x2ae0>
   19194:	mov	r1, #-2147483648	; 0x80000000
   19198:	mvn	r7, #-2147483648	; 0x80000000
   1919c:	sdiv	r1, r1, r4
   191a0:	cmp	r1, r5
   191a4:	bge	191d8 <lchmod@@Base+0x2ae0>
   191a8:	b	191e8 <lchmod@@Base+0x2af0>
   191ac:	beq	191d8 <lchmod@@Base+0x2ae0>
   191b0:	mov	r1, #-2147483648	; 0x80000000
   191b4:	mvn	r7, #-2147483648	; 0x80000000
   191b8:	sdiv	r1, r1, r5
   191bc:	cmp	r1, r4
   191c0:	bge	191d8 <lchmod@@Base+0x2ae0>
   191c4:	b	191e8 <lchmod@@Base+0x2af0>
   191c8:	mvn	r7, #-2147483648	; 0x80000000
   191cc:	sdiv	r1, r7, r4
   191d0:	cmp	r5, r1
   191d4:	blt	191e8 <lchmod@@Base+0x2af0>
   191d8:	mul	r1, r5, r4
   191dc:	mov	r7, #64	; 0x40
   191e0:	cmp	r1, #63	; 0x3f
   191e4:	bgt	191f0 <lchmod@@Base+0x2af8>
   191e8:	sdiv	r5, r7, r4
   191ec:	mul	r1, r5, r4
   191f0:	cmp	r0, #0
   191f4:	moveq	r7, #0
   191f8:	streq	r7, [r8]
   191fc:	sub	r7, r5, r6
   19200:	cmp	r7, r2
   19204:	bge	192a8 <lchmod@@Base+0x2bb0>
   19208:	add	r5, r6, r2
   1920c:	mov	r2, #0
   19210:	mov	r1, #0
   19214:	cmp	r5, r3
   19218:	movwgt	r2, #1
   1921c:	cmn	r3, #1
   19220:	movwgt	r1, #1
   19224:	cmp	r5, r6
   19228:	bvs	19290 <lchmod@@Base+0x2b98>
   1922c:	ands	r1, r1, r2
   19230:	bne	19290 <lchmod@@Base+0x2b98>
   19234:	cmn	r4, #1
   19238:	ble	19258 <lchmod@@Base+0x2b60>
   1923c:	cmp	r4, #0
   19240:	beq	192a4 <lchmod@@Base+0x2bac>
   19244:	cmn	r5, #1
   19248:	ble	1927c <lchmod@@Base+0x2b84>
   1924c:	mvn	r1, #-2147483648	; 0x80000000
   19250:	udiv	r1, r1, r4
   19254:	b	19270 <lchmod@@Base+0x2b78>
   19258:	cmn	r5, #1
   1925c:	ble	19294 <lchmod@@Base+0x2b9c>
   19260:	cmn	r4, #1
   19264:	beq	192a4 <lchmod@@Base+0x2bac>
   19268:	mov	r1, #-2147483648	; 0x80000000
   1926c:	sdiv	r1, r1, r4
   19270:	cmp	r1, r5
   19274:	bge	192a4 <lchmod@@Base+0x2bac>
   19278:	b	19290 <lchmod@@Base+0x2b98>
   1927c:	beq	192a4 <lchmod@@Base+0x2bac>
   19280:	mov	r1, #-2147483648	; 0x80000000
   19284:	sdiv	r1, r1, r5
   19288:	cmp	r1, r4
   1928c:	bge	192a4 <lchmod@@Base+0x2bac>
   19290:	bl	1941c <lchmod@@Base+0x2d24>
   19294:	mvn	r1, #-2147483648	; 0x80000000
   19298:	sdiv	r1, r1, r4
   1929c:	cmp	r5, r1
   192a0:	blt	19290 <lchmod@@Base+0x2b98>
   192a4:	mul	r1, r5, r4
   192a8:	bl	19014 <lchmod@@Base+0x291c>
   192ac:	str	r5, [r8]
   192b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   192b4:	push	{fp, lr}
   192b8:	mov	fp, sp
   192bc:	mov	r1, #1
   192c0:	bl	19b94 <lchmod@@Base+0x349c>
   192c4:	cmp	r0, #0
   192c8:	popne	{fp, pc}
   192cc:	bl	1941c <lchmod@@Base+0x2d24>
   192d0:	push	{fp, lr}
   192d4:	mov	fp, sp
   192d8:	bl	19b94 <lchmod@@Base+0x349c>
   192dc:	cmp	r0, #0
   192e0:	popne	{fp, pc}
   192e4:	bl	1941c <lchmod@@Base+0x2d24>
   192e8:	push	{fp, lr}
   192ec:	mov	fp, sp
   192f0:	mov	r1, #1
   192f4:	bl	19b94 <lchmod@@Base+0x349c>
   192f8:	cmp	r0, #0
   192fc:	popne	{fp, pc}
   19300:	bl	1941c <lchmod@@Base+0x2d24>
   19304:	push	{fp, lr}
   19308:	mov	fp, sp
   1930c:	bl	19b94 <lchmod@@Base+0x349c>
   19310:	cmp	r0, #0
   19314:	popne	{fp, pc}
   19318:	bl	1941c <lchmod@@Base+0x2d24>
   1931c:	push	{r4, r5, r6, sl, fp, lr}
   19320:	add	fp, sp, #16
   19324:	mov	r5, r0
   19328:	mov	r0, r1
   1932c:	mov	r4, r1
   19330:	bl	19be8 <lchmod@@Base+0x34f0>
   19334:	cmp	r0, #0
   19338:	beq	19354 <lchmod@@Base+0x2c5c>
   1933c:	mov	r1, r5
   19340:	mov	r2, r4
   19344:	mov	r6, r0
   19348:	bl	11898 <memcpy@plt>
   1934c:	mov	r0, r6
   19350:	pop	{r4, r5, r6, sl, fp, pc}
   19354:	bl	1941c <lchmod@@Base+0x2d24>
   19358:	push	{r4, r5, r6, sl, fp, lr}
   1935c:	add	fp, sp, #16
   19360:	mov	r5, r0
   19364:	mov	r0, r1
   19368:	mov	r4, r1
   1936c:	bl	19be8 <lchmod@@Base+0x34f0>
   19370:	cmp	r0, #0
   19374:	beq	19390 <lchmod@@Base+0x2c98>
   19378:	mov	r1, r5
   1937c:	mov	r2, r4
   19380:	mov	r6, r0
   19384:	bl	11898 <memcpy@plt>
   19388:	mov	r0, r6
   1938c:	pop	{r4, r5, r6, sl, fp, pc}
   19390:	bl	1941c <lchmod@@Base+0x2d24>
   19394:	push	{r4, r5, r6, sl, fp, lr}
   19398:	add	fp, sp, #16
   1939c:	mov	r5, r0
   193a0:	add	r0, r1, #1
   193a4:	mov	r4, r1
   193a8:	bl	19be8 <lchmod@@Base+0x34f0>
   193ac:	cmp	r0, #0
   193b0:	beq	193d8 <lchmod@@Base+0x2ce0>
   193b4:	mov	r6, r0
   193b8:	mov	r0, #0
   193bc:	mov	r1, r5
   193c0:	mov	r2, r4
   193c4:	strb	r0, [r6, r4]
   193c8:	mov	r0, r6
   193cc:	bl	11898 <memcpy@plt>
   193d0:	mov	r0, r6
   193d4:	pop	{r4, r5, r6, sl, fp, pc}
   193d8:	bl	1941c <lchmod@@Base+0x2d24>
   193dc:	push	{r4, r5, r6, sl, fp, lr}
   193e0:	add	fp, sp, #16
   193e4:	mov	r4, r0
   193e8:	bl	11a24 <strlen@plt>
   193ec:	add	r5, r0, #1
   193f0:	mov	r0, r5
   193f4:	bl	19be8 <lchmod@@Base+0x34f0>
   193f8:	cmp	r0, #0
   193fc:	beq	19418 <lchmod@@Base+0x2d20>
   19400:	mov	r1, r4
   19404:	mov	r2, r5
   19408:	mov	r6, r0
   1940c:	bl	11898 <memcpy@plt>
   19410:	mov	r0, r6
   19414:	pop	{r4, r5, r6, sl, fp, pc}
   19418:	bl	1941c <lchmod@@Base+0x2d24>
   1941c:	push	{fp, lr}
   19420:	mov	fp, sp
   19424:	movw	r0, #49556	; 0xc194
   19428:	movw	r1, #46154	; 0xb44a
   1942c:	mov	r2, #5
   19430:	movt	r0, #2
   19434:	movt	r1, #1
   19438:	ldr	r4, [r0]
   1943c:	mov	r0, #0
   19440:	bl	118c8 <dcgettext@plt>
   19444:	movw	r2, #44895	; 0xaf5f
   19448:	mov	r3, r0
   1944c:	mov	r0, r4
   19450:	mov	r1, #0
   19454:	movt	r2, #1
   19458:	bl	11988 <error@plt>
   1945c:	bl	11bd4 <abort@plt>
   19460:	push	{fp, lr}
   19464:	mov	fp, sp
   19468:	orr	r1, r1, #512	; 0x200
   1946c:	bl	13608 <__assert_fail@plt+0x19d4>
   19470:	cmp	r0, #0
   19474:	popne	{fp, pc}
   19478:	bl	11a60 <__errno_location@plt>
   1947c:	ldr	r0, [r0]
   19480:	cmp	r0, #22
   19484:	bne	194a8 <lchmod@@Base+0x2db0>
   19488:	movw	r0, #46171	; 0xb45b
   1948c:	movw	r1, #46187	; 0xb46b
   19490:	movw	r3, #46198	; 0xb476
   19494:	mov	r2, #41	; 0x29
   19498:	movt	r0, #1
   1949c:	movt	r1, #1
   194a0:	movt	r3, #1
   194a4:	bl	11c34 <__assert_fail@plt>
   194a8:	bl	1941c <lchmod@@Base+0x2d24>
   194ac:	ldr	r0, [r0, #48]	; 0x30
   194b0:	and	r0, r0, #17
   194b4:	cmp	r0, #16
   194b8:	moveq	r0, #1
   194bc:	bxeq	lr
   194c0:	cmp	r0, #17
   194c4:	movne	r0, #0
   194c8:	bxne	lr
   194cc:	ldr	r0, [r1, #48]	; 0x30
   194d0:	cmp	r0, #0
   194d4:	movwne	r0, #1
   194d8:	bx	lr
   194dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194e0:	add	fp, sp, #28
   194e4:	sub	sp, sp, #20
   194e8:	cmp	r2, #37	; 0x25
   194ec:	bcs	19b74 <lchmod@@Base+0x347c>
   194f0:	mov	r8, r3
   194f4:	mov	r5, r2
   194f8:	mov	r6, r1
   194fc:	mov	r4, r0
   19500:	bl	11a60 <__errno_location@plt>
   19504:	mov	r7, r0
   19508:	mov	r0, #0
   1950c:	str	r0, [r7]
   19510:	bl	119f4 <__ctype_b_loc@plt>
   19514:	ldr	r1, [r0]
   19518:	mov	r2, r4
   1951c:	ldrb	r0, [r2], #1
   19520:	add	r3, r1, r0, lsl #1
   19524:	ldrb	r3, [r3, #1]
   19528:	tst	r3, #32
   1952c:	bne	1951c <lchmod@@Base+0x2e24>
   19530:	add	sl, sp, #16
   19534:	cmp	r6, #0
   19538:	movne	sl, r6
   1953c:	mov	r6, #4
   19540:	cmp	r0, #45	; 0x2d
   19544:	beq	19b68 <lchmod@@Base+0x3470>
   19548:	mov	r0, r4
   1954c:	mov	r1, sl
   19550:	mov	r2, r5
   19554:	str	r8, [sp, #12]
   19558:	bl	11aa8 <strtoumax@plt>
   1955c:	ldr	r5, [sl]
   19560:	cmp	r5, r4
   19564:	beq	1958c <lchmod@@Base+0x2e94>
   19568:	mov	r8, r0
   1956c:	ldr	r0, [r7]
   19570:	mov	r9, r1
   19574:	cmp	r0, #0
   19578:	beq	195bc <lchmod@@Base+0x2ec4>
   1957c:	cmp	r0, #34	; 0x22
   19580:	bne	19b68 <lchmod@@Base+0x3470>
   19584:	mov	r6, #1
   19588:	b	195c0 <lchmod@@Base+0x2ec8>
   1958c:	ldr	r0, [fp, #8]
   19590:	cmp	r0, #0
   19594:	ldrbne	r1, [r4]
   19598:	cmpne	r1, #0
   1959c:	beq	19b68 <lchmod@@Base+0x3470>
   195a0:	bl	11a3c <strchr@plt>
   195a4:	cmp	r0, #0
   195a8:	beq	19b68 <lchmod@@Base+0x3470>
   195ac:	mov	r6, #0
   195b0:	mov	r8, #1
   195b4:	mov	r9, #0
   195b8:	b	195cc <lchmod@@Base+0x2ed4>
   195bc:	mov	r6, r0
   195c0:	ldr	r0, [fp, #8]
   195c4:	cmp	r0, #0
   195c8:	beq	19b60 <lchmod@@Base+0x3468>
   195cc:	ldrb	r7, [r5]
   195d0:	cmp	r7, #0
   195d4:	beq	19b60 <lchmod@@Base+0x3468>
   195d8:	ldr	r0, [fp, #8]
   195dc:	mov	r1, r7
   195e0:	bl	11a3c <strchr@plt>
   195e4:	cmp	r0, #0
   195e8:	beq	196f0 <lchmod@@Base+0x2ff8>
   195ec:	sub	r0, r7, #69	; 0x45
   195f0:	mov	r1, #1
   195f4:	mov	r3, #0
   195f8:	mov	r4, #1024	; 0x400
   195fc:	cmp	r0, #21
   19600:	str	r1, [sp, #8]
   19604:	bhi	1961c <lchmod@@Base+0x2f24>
   19608:	movw	r2, #35141	; 0x8945
   1960c:	mov	r1, #1
   19610:	movt	r2, #48	; 0x30
   19614:	tst	r2, r1, lsl r0
   19618:	bne	19638 <lchmod@@Base+0x2f40>
   1961c:	sub	r0, r7, #103	; 0x67
   19620:	cmp	r0, #13
   19624:	bhi	1966c <lchmod@@Base+0x2f74>
   19628:	mov	r1, #1
   1962c:	movw	r2, #8273	; 0x2051
   19630:	tst	r2, r1, lsl r0
   19634:	beq	1966c <lchmod@@Base+0x2f74>
   19638:	ldr	r0, [fp, #8]
   1963c:	mov	r1, #48	; 0x30
   19640:	bl	11a3c <strchr@plt>
   19644:	cmp	r0, #0
   19648:	beq	19668 <lchmod@@Base+0x2f70>
   1964c:	ldrb	r0, [r5, #1]
   19650:	cmp	r0, #66	; 0x42
   19654:	cmpne	r0, #68	; 0x44
   19658:	bne	19780 <lchmod@@Base+0x3088>
   1965c:	mov	r4, #1000	; 0x3e8
   19660:	mov	r0, #2
   19664:	str	r0, [sp, #8]
   19668:	mov	r3, #0
   1966c:	cmp	r7, #89	; 0x59
   19670:	stm	sp, {r5, r6}
   19674:	bgt	196fc <lchmod@@Base+0x3004>
   19678:	sub	r0, r7, #66	; 0x42
   1967c:	cmp	r0, #14
   19680:	bhi	197a4 <lchmod@@Base+0x30ac>
   19684:	add	r1, pc, #0
   19688:	ldr	pc, [r1, r0, lsl #2]
   1968c:	andeq	r9, r1, r8, asr #13
   19690:	andeq	r9, r1, r4, asr sl
   19694:	andeq	r9, r1, r4, asr sl
   19698:	andeq	r9, r1, r8, ror #20
   1969c:	andeq	r9, r1, r4, asr sl
   196a0:	andeq	r9, r1, r8, asr r8
   196a4:	andeq	r9, r1, r4, asr sl
   196a8:	andeq	r9, r1, r4, asr sl
   196ac:	andeq	r9, r1, r4, asr sl
   196b0:	andeq	r9, r1, r4, asr #17
   196b4:	andeq	r9, r1, r4, asr sl
   196b8:	andeq	r9, r1, r8, lsl #18
   196bc:	andeq	r9, r1, r4, asr sl
   196c0:	andeq	r9, r1, r4, asr sl
   196c4:	ldrdeq	r9, [r1], -r4
   196c8:	mov	r1, #0
   196cc:	lsl	r3, r9, #10
   196d0:	lsl	r0, r8, #10
   196d4:	lsr	r2, r9, #22
   196d8:	cmp	r1, r9, lsr #22
   196dc:	orr	r3, r3, r8, lsr #22
   196e0:	mvnne	r0, #0
   196e4:	movwne	r2, #1
   196e8:	cmp	r1, r9, lsr #22
   196ec:	b	19770 <lchmod@@Base+0x3078>
   196f0:	ldr	r0, [sp, #12]
   196f4:	orr	r6, r6, #2
   196f8:	b	19b64 <lchmod@@Base+0x346c>
   196fc:	cmp	r7, #115	; 0x73
   19700:	bgt	19820 <lchmod@@Base+0x3128>
   19704:	sub	r0, r7, #98	; 0x62
   19708:	cmp	r0, #11
   1970c:	bhi	199e0 <lchmod@@Base+0x32e8>
   19710:	add	r1, pc, #4
   19714:	mov	r2, #0
   19718:	ldr	pc, [r1, r0, lsl #2]
   1971c:	andeq	r9, r1, ip, asr #14
   19720:	andeq	r9, r1, ip, lsr fp
   19724:	andeq	r9, r1, r4, asr sl
   19728:	andeq	r9, r1, r4, asr sl
   1972c:	andeq	r9, r1, r4, asr sl
   19730:	andeq	r9, r1, r8, asr r8
   19734:	andeq	r9, r1, r4, asr sl
   19738:	andeq	r9, r1, r4, asr sl
   1973c:	andeq	r9, r1, r4, asr sl
   19740:	andeq	r9, r1, r4, asr #17
   19744:	andeq	r9, r1, r4, asr sl
   19748:	andeq	r9, r1, r8, lsl #18
   1974c:	mov	r1, #0
   19750:	lsl	r3, r9, #9
   19754:	lsl	r0, r8, #9
   19758:	lsr	r2, r9, #23
   1975c:	cmp	r1, r9, lsr #23
   19760:	orr	r3, r3, r8, lsr #23
   19764:	mvnne	r0, #0
   19768:	movwne	r2, #1
   1976c:	cmp	r1, r9, lsr #23
   19770:	mvnne	r3, #0
   19774:	mov	r8, r0
   19778:	mov	r9, r3
   1977c:	b	19b3c <lchmod@@Base+0x3444>
   19780:	cmp	r0, #105	; 0x69
   19784:	mov	r3, #0
   19788:	bne	1966c <lchmod@@Base+0x2f74>
   1978c:	ldrb	r0, [r5, #2]
   19790:	mov	r1, #1
   19794:	cmp	r0, #66	; 0x42
   19798:	movweq	r1, #3
   1979c:	str	r1, [sp, #8]
   197a0:	b	1966c <lchmod@@Base+0x2f74>
   197a4:	cmp	r7, #84	; 0x54
   197a8:	beq	19974 <lchmod@@Base+0x327c>
   197ac:	cmp	r7, #89	; 0x59
   197b0:	bne	19a54 <lchmod@@Base+0x335c>
   197b4:	mvn	r0, #0
   197b8:	mvn	r1, #0
   197bc:	mov	r2, r4
   197c0:	mov	r5, r3
   197c4:	bl	1a424 <lchmod@@Base+0x3d2c>
   197c8:	mov	ip, r5
   197cc:	mvn	lr, #0
   197d0:	mov	r2, #0
   197d4:	mvn	r3, #7
   197d8:	mov	r5, r8
   197dc:	mov	r7, r9
   197e0:	umull	r8, r6, r5, r4
   197e4:	mvn	r9, #0
   197e8:	mla	r6, r5, ip, r6
   197ec:	subs	r5, r0, r5
   197f0:	sbcs	r5, r1, r7
   197f4:	mov	r5, #0
   197f8:	movwcc	r5, #1
   197fc:	cmp	r5, #0
   19800:	mlaeq	r9, r7, r4, r6
   19804:	movne	r8, lr
   19808:	orrne	r2, r2, #1
   1980c:	adds	r3, r3, #1
   19810:	mov	r5, r8
   19814:	mov	r7, r9
   19818:	bne	197e0 <lchmod@@Base+0x30e8>
   1981c:	b	19b3c <lchmod@@Base+0x3444>
   19820:	cmp	r7, #116	; 0x74
   19824:	beq	19974 <lchmod@@Base+0x327c>
   19828:	cmp	r7, #119	; 0x77
   1982c:	bne	19a54 <lchmod@@Base+0x335c>
   19830:	lsl	r1, r9, #1
   19834:	lsl	r0, r8, #1
   19838:	cmp	r9, #0
   1983c:	lsr	r2, r9, #31
   19840:	orr	r1, r1, r8, lsr #31
   19844:	mvnlt	r0, #0
   19848:	mvnlt	r1, #0
   1984c:	mov	r8, r0
   19850:	mov	r9, r1
   19854:	b	19b3c <lchmod@@Base+0x3444>
   19858:	mvn	r0, #0
   1985c:	mvn	r1, #0
   19860:	mov	r2, r4
   19864:	mov	r5, r3
   19868:	bl	1a424 <lchmod@@Base+0x3d2c>
   1986c:	mov	ip, r5
   19870:	mvn	lr, #0
   19874:	mov	r2, #0
   19878:	mvn	r3, #2
   1987c:	mov	r6, r8
   19880:	mov	r5, r9
   19884:	umull	r8, r7, r6, r4
   19888:	mvn	r9, #0
   1988c:	mla	r7, r6, ip, r7
   19890:	subs	r6, r0, r6
   19894:	sbcs	r6, r1, r5
   19898:	mov	r6, #0
   1989c:	movwcc	r6, #1
   198a0:	cmp	r6, #0
   198a4:	mlaeq	r9, r5, r4, r7
   198a8:	movne	r8, lr
   198ac:	orrne	r2, r2, #1
   198b0:	adds	r3, r3, #1
   198b4:	mov	r6, r8
   198b8:	mov	r5, r9
   198bc:	bne	19884 <lchmod@@Base+0x318c>
   198c0:	b	19b3c <lchmod@@Base+0x3444>
   198c4:	mvn	r0, #0
   198c8:	mvn	r1, #0
   198cc:	mov	r2, r4
   198d0:	mov	r5, r3
   198d4:	bl	1a424 <lchmod@@Base+0x3d2c>
   198d8:	subs	r0, r0, r8
   198dc:	mov	r2, #0
   198e0:	sbcs	r0, r1, r9
   198e4:	movwcc	r2, #1
   198e8:	umull	r0, r1, r8, r4
   198ec:	mla	r1, r8, r5, r1
   198f0:	cmp	r2, #0
   198f4:	mla	r9, r9, r4, r1
   198f8:	mvnne	r0, #0
   198fc:	mvnne	r9, #0
   19900:	mov	r8, r0
   19904:	b	19b3c <lchmod@@Base+0x3444>
   19908:	mvn	r0, #0
   1990c:	mvn	r1, #0
   19910:	mov	r2, r4
   19914:	mov	r5, r3
   19918:	bl	1a424 <lchmod@@Base+0x3d2c>
   1991c:	mov	ip, r5
   19920:	mvn	lr, #0
   19924:	mov	r2, #0
   19928:	mvn	r3, #1
   1992c:	mov	r6, r8
   19930:	mov	r5, r9
   19934:	umull	r8, r7, r6, r4
   19938:	mvn	r9, #0
   1993c:	mla	r7, r6, ip, r7
   19940:	subs	r6, r0, r6
   19944:	sbcs	r6, r1, r5
   19948:	mov	r6, #0
   1994c:	movwcc	r6, #1
   19950:	cmp	r6, #0
   19954:	mlaeq	r9, r5, r4, r7
   19958:	movne	r8, lr
   1995c:	orrne	r2, r2, #1
   19960:	adds	r3, r3, #1
   19964:	mov	r6, r8
   19968:	mov	r5, r9
   1996c:	bne	19934 <lchmod@@Base+0x323c>
   19970:	b	19b3c <lchmod@@Base+0x3444>
   19974:	mvn	r0, #0
   19978:	mvn	r1, #0
   1997c:	mov	r2, r4
   19980:	mov	r5, r3
   19984:	bl	1a424 <lchmod@@Base+0x3d2c>
   19988:	mov	ip, r5
   1998c:	mvn	lr, #0
   19990:	mov	r2, #0
   19994:	mvn	r3, #3
   19998:	mov	r6, r8
   1999c:	mov	r5, r9
   199a0:	umull	r8, r7, r6, r4
   199a4:	mvn	r9, #0
   199a8:	mla	r7, r6, ip, r7
   199ac:	subs	r6, r0, r6
   199b0:	sbcs	r6, r1, r5
   199b4:	mov	r6, #0
   199b8:	movwcc	r6, #1
   199bc:	cmp	r6, #0
   199c0:	mlaeq	r9, r5, r4, r7
   199c4:	movne	r8, lr
   199c8:	orrne	r2, r2, #1
   199cc:	adds	r3, r3, #1
   199d0:	mov	r6, r8
   199d4:	mov	r5, r9
   199d8:	bne	199a0 <lchmod@@Base+0x32a8>
   199dc:	b	19b3c <lchmod@@Base+0x3444>
   199e0:	cmp	r7, #90	; 0x5a
   199e4:	bne	19a54 <lchmod@@Base+0x335c>
   199e8:	mvn	r0, #0
   199ec:	mvn	r1, #0
   199f0:	mov	r2, r4
   199f4:	mov	r5, r3
   199f8:	bl	1a424 <lchmod@@Base+0x3d2c>
   199fc:	mov	ip, r5
   19a00:	mvn	lr, #0
   19a04:	mov	r2, #0
   19a08:	mvn	r3, #6
   19a0c:	mov	r5, r8
   19a10:	mov	r7, r9
   19a14:	umull	r8, r6, r5, r4
   19a18:	mvn	r9, #0
   19a1c:	mla	r6, r5, ip, r6
   19a20:	subs	r5, r0, r5
   19a24:	sbcs	r5, r1, r7
   19a28:	mov	r5, #0
   19a2c:	movwcc	r5, #1
   19a30:	cmp	r5, #0
   19a34:	mlaeq	r9, r7, r4, r6
   19a38:	movne	r8, lr
   19a3c:	orrne	r2, r2, #1
   19a40:	adds	r3, r3, #1
   19a44:	mov	r5, r8
   19a48:	mov	r7, r9
   19a4c:	bne	19a14 <lchmod@@Base+0x331c>
   19a50:	b	19b3c <lchmod@@Base+0x3444>
   19a54:	ldr	r0, [sp, #12]
   19a58:	strd	r8, [r0]
   19a5c:	ldr	r6, [sp, #4]
   19a60:	orr	r6, r6, #2
   19a64:	b	19b68 <lchmod@@Base+0x3470>
   19a68:	mvn	r0, #0
   19a6c:	mvn	r1, #0
   19a70:	mov	r2, r4
   19a74:	mov	r5, r3
   19a78:	bl	1a424 <lchmod@@Base+0x3d2c>
   19a7c:	mov	ip, r5
   19a80:	mvn	lr, #0
   19a84:	mov	r2, #0
   19a88:	mvn	r3, #5
   19a8c:	mov	r5, r8
   19a90:	mov	r7, r9
   19a94:	umull	r8, r6, r5, r4
   19a98:	mvn	r9, #0
   19a9c:	mla	r6, r5, ip, r6
   19aa0:	subs	r5, r0, r5
   19aa4:	sbcs	r5, r1, r7
   19aa8:	mov	r5, #0
   19aac:	movwcc	r5, #1
   19ab0:	cmp	r5, #0
   19ab4:	mlaeq	r9, r7, r4, r6
   19ab8:	movne	r8, lr
   19abc:	orrne	r2, r2, #1
   19ac0:	adds	r3, r3, #1
   19ac4:	mov	r5, r8
   19ac8:	mov	r7, r9
   19acc:	bne	19a94 <lchmod@@Base+0x339c>
   19ad0:	b	19b3c <lchmod@@Base+0x3444>
   19ad4:	mvn	r0, #0
   19ad8:	mvn	r1, #0
   19adc:	mov	r2, r4
   19ae0:	mov	r5, r3
   19ae4:	bl	1a424 <lchmod@@Base+0x3d2c>
   19ae8:	mov	ip, r5
   19aec:	mvn	lr, #0
   19af0:	mov	r2, #0
   19af4:	mvn	r3, #4
   19af8:	mov	r5, r8
   19afc:	mov	r7, r9
   19b00:	umull	r8, r6, r5, r4
   19b04:	mvn	r9, #0
   19b08:	mla	r6, r5, ip, r6
   19b0c:	subs	r5, r0, r5
   19b10:	sbcs	r5, r1, r7
   19b14:	mov	r5, #0
   19b18:	movwcc	r5, #1
   19b1c:	cmp	r5, #0
   19b20:	mlaeq	r9, r7, r4, r6
   19b24:	movne	r8, lr
   19b28:	orrne	r2, r2, #1
   19b2c:	adds	r3, r3, #1
   19b30:	mov	r5, r8
   19b34:	mov	r7, r9
   19b38:	bne	19b00 <lchmod@@Base+0x3408>
   19b3c:	ldr	r1, [sp]
   19b40:	ldr	r3, [sp, #8]
   19b44:	ldr	r6, [sp, #4]
   19b48:	add	r0, r1, r3
   19b4c:	orr	r6, r2, r6
   19b50:	str	r0, [sl]
   19b54:	ldrb	r0, [r1, r3]
   19b58:	cmp	r0, #0
   19b5c:	orrne	r6, r6, #2
   19b60:	ldr	r0, [sp, #12]
   19b64:	strd	r8, [r0]
   19b68:	mov	r0, r6
   19b6c:	sub	sp, fp, #28
   19b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b74:	movw	r0, #46276	; 0xb4c4
   19b78:	movw	r1, #46314	; 0xb4ea
   19b7c:	movw	r3, #46330	; 0xb4fa
   19b80:	mov	r2, #85	; 0x55
   19b84:	movt	r0, #1
   19b88:	movt	r1, #1
   19b8c:	movt	r3, #1
   19b90:	bl	11c34 <__assert_fail@plt>
   19b94:	clz	r2, r1
   19b98:	clz	r3, r0
   19b9c:	lsr	r2, r2, #5
   19ba0:	lsr	r3, r3, #5
   19ba4:	orrs	r2, r3, r2
   19ba8:	movwne	r1, #1
   19bac:	movwne	r0, #1
   19bb0:	cmp	r1, #0
   19bb4:	beq	19be4 <lchmod@@Base+0x34ec>
   19bb8:	mvn	r2, #-2147483648	; 0x80000000
   19bbc:	udiv	r2, r2, r1
   19bc0:	cmp	r2, r0
   19bc4:	bcs	19be4 <lchmod@@Base+0x34ec>
   19bc8:	push	{fp, lr}
   19bcc:	mov	fp, sp
   19bd0:	bl	11a60 <__errno_location@plt>
   19bd4:	mov	r1, #12
   19bd8:	str	r1, [r0]
   19bdc:	mov	r0, #0
   19be0:	pop	{fp, pc}
   19be4:	b	117fc <calloc@plt>
   19be8:	cmp	r0, #0
   19bec:	movweq	r0, #1
   19bf0:	cmn	r0, #1
   19bf4:	ble	19bfc <lchmod@@Base+0x3504>
   19bf8:	b	119ac <malloc@plt>
   19bfc:	push	{fp, lr}
   19c00:	mov	fp, sp
   19c04:	bl	11a60 <__errno_location@plt>
   19c08:	mov	r1, #12
   19c0c:	str	r1, [r0]
   19c10:	mov	r0, #0
   19c14:	pop	{fp, pc}
   19c18:	push	{fp, lr}
   19c1c:	mov	fp, sp
   19c20:	cmp	r0, #0
   19c24:	beq	19c40 <lchmod@@Base+0x3548>
   19c28:	cmp	r1, #0
   19c2c:	beq	19c4c <lchmod@@Base+0x3554>
   19c30:	cmn	r1, #1
   19c34:	ble	19c54 <lchmod@@Base+0x355c>
   19c38:	pop	{fp, lr}
   19c3c:	b	118e0 <realloc@plt>
   19c40:	mov	r0, r1
   19c44:	pop	{fp, lr}
   19c48:	b	19be8 <lchmod@@Base+0x34f0>
   19c4c:	bl	135e0 <__assert_fail@plt+0x19ac>
   19c50:	b	19c60 <lchmod@@Base+0x3568>
   19c54:	bl	11a60 <__errno_location@plt>
   19c58:	mov	r1, #12
   19c5c:	str	r1, [r0]
   19c60:	mov	r0, #0
   19c64:	pop	{fp, pc}
   19c68:	sub	r0, r0, #1
   19c6c:	ldrb	r3, [r0, #1]!
   19c70:	cmp	r3, #47	; 0x2f
   19c74:	beq	19c6c <lchmod@@Base+0x3574>
   19c78:	mov	r2, #0
   19c7c:	mov	r1, r0
   19c80:	uxtb	r3, r3
   19c84:	cmp	r3, #47	; 0x2f
   19c88:	beq	19ca4 <lchmod@@Base+0x35ac>
   19c8c:	cmp	r3, #0
   19c90:	bxeq	lr
   19c94:	tst	r2, #1
   19c98:	mov	r2, #0
   19c9c:	movne	r0, r1
   19ca0:	b	19ca8 <lchmod@@Base+0x35b0>
   19ca4:	mov	r2, #1
   19ca8:	ldrb	r3, [r1, #1]!
   19cac:	b	19c80 <lchmod@@Base+0x3588>
   19cb0:	push	{r4, sl, fp, lr}
   19cb4:	add	fp, sp, #8
   19cb8:	mov	r4, r0
   19cbc:	bl	11a24 <strlen@plt>
   19cc0:	mov	r1, r0
   19cc4:	sub	r2, r4, #1
   19cc8:	mov	r0, r1
   19ccc:	cmp	r1, #2
   19cd0:	popcc	{r4, sl, fp, pc}
   19cd4:	ldrb	r3, [r2, r0]
   19cd8:	sub	r1, r0, #1
   19cdc:	cmp	r3, #47	; 0x2f
   19ce0:	beq	19cc8 <lchmod@@Base+0x35d0>
   19ce4:	pop	{r4, sl, fp, pc}
   19ce8:	push	{r4, r5, r6, sl, fp, lr}
   19cec:	add	fp, sp, #16
   19cf0:	mov	r4, r0
   19cf4:	bl	11964 <__fpending@plt>
   19cf8:	mov	r5, r0
   19cfc:	mov	r0, r4
   19d00:	bl	11970 <ferror_unlocked@plt>
   19d04:	mov	r6, r0
   19d08:	mov	r0, r4
   19d0c:	bl	19e54 <lchmod@@Base+0x375c>
   19d10:	cmp	r6, #0
   19d14:	beq	19d34 <lchmod@@Base+0x363c>
   19d18:	mvn	r4, #0
   19d1c:	cmp	r0, #0
   19d20:	bne	19d60 <lchmod@@Base+0x3668>
   19d24:	bl	11a60 <__errno_location@plt>
   19d28:	mov	r1, #0
   19d2c:	str	r1, [r0]
   19d30:	b	19d60 <lchmod@@Base+0x3668>
   19d34:	cmp	r0, #0
   19d38:	mov	r4, r0
   19d3c:	mvnne	r4, #0
   19d40:	cmp	r5, #0
   19d44:	bne	19d60 <lchmod@@Base+0x3668>
   19d48:	cmp	r0, #0
   19d4c:	beq	19d60 <lchmod@@Base+0x3668>
   19d50:	bl	11a60 <__errno_location@plt>
   19d54:	ldr	r0, [r0]
   19d58:	subs	r4, r0, #9
   19d5c:	mvnne	r4, #0
   19d60:	mov	r0, r4
   19d64:	pop	{r4, r5, r6, sl, fp, pc}
   19d68:	movw	r2, #62998	; 0xf616
   19d6c:	mov	r1, #0
   19d70:	movt	r2, #149	; 0x95
   19d74:	str	r1, [r0, #16]
   19d78:	str	r1, [r0, #20]
   19d7c:	str	r2, [r0, #24]
   19d80:	bx	lr
   19d84:	push	{r4, r5, r6, r7, fp, lr}
   19d88:	add	fp, sp, #16
   19d8c:	ldr	r2, [r0, #24]
   19d90:	movw	r3, #62998	; 0xf616
   19d94:	movt	r3, #149	; 0x95
   19d98:	cmp	r2, r3
   19d9c:	bne	19e34 <lchmod@@Base+0x373c>
   19da0:	mov	r3, r0
   19da4:	ldr	r2, [r3, #16]!
   19da8:	ldr	lr, [r3, #4]
   19dac:	orrs	r5, r2, lr
   19db0:	beq	19de8 <lchmod@@Base+0x36f0>
   19db4:	ldrd	r4, [r0]
   19db8:	ldrd	r6, [r1, #96]	; 0x60
   19dbc:	eor	r7, r7, r5
   19dc0:	eor	r6, r6, r4
   19dc4:	orrs	r7, r6, r7
   19dc8:	bne	19de8 <lchmod@@Base+0x36f0>
   19dcc:	ldrd	r4, [r0, #8]
   19dd0:	ldrd	r6, [r1]
   19dd4:	mov	ip, #1
   19dd8:	eor	r7, r7, r5
   19ddc:	eor	r6, r6, r4
   19de0:	orrs	r7, r6, r7
   19de4:	beq	19e2c <lchmod@@Base+0x3734>
   19de8:	adds	r4, r2, #1
   19dec:	mov	ip, #0
   19df0:	adc	r5, lr, #0
   19df4:	and	r2, r4, r2
   19df8:	strd	r4, [r3]
   19dfc:	and	r3, r5, lr
   19e00:	orrs	r2, r2, r3
   19e04:	bne	19e2c <lchmod@@Base+0x3734>
   19e08:	orrs	r2, r4, r5
   19e0c:	beq	19e28 <lchmod@@Base+0x3730>
   19e10:	ldrd	r2, [r1]
   19e14:	str	r3, [r0, #12]
   19e18:	str	r2, [r0, #8]
   19e1c:	ldrd	r2, [r1, #96]	; 0x60
   19e20:	stm	r0, {r2, r3}
   19e24:	b	19e2c <lchmod@@Base+0x3734>
   19e28:	mov	ip, #1
   19e2c:	mov	r0, ip
   19e30:	pop	{r4, r5, r6, r7, fp, pc}
   19e34:	movw	r0, #46409	; 0xb549
   19e38:	movw	r1, #46433	; 0xb561
   19e3c:	movw	r3, #46451	; 0xb573
   19e40:	mov	r2, #60	; 0x3c
   19e44:	movt	r0, #1
   19e48:	movt	r1, #1
   19e4c:	movt	r3, #1
   19e50:	bl	11c34 <__assert_fail@plt>
   19e54:	push	{r4, r5, r6, sl, fp, lr}
   19e58:	add	fp, sp, #16
   19e5c:	sub	sp, sp, #8
   19e60:	mov	r4, r0
   19e64:	bl	11a9c <fileno@plt>
   19e68:	cmn	r0, #1
   19e6c:	ble	19ee0 <lchmod@@Base+0x37e8>
   19e70:	mov	r0, r4
   19e74:	bl	119c4 <__freading@plt>
   19e78:	cmp	r0, #0
   19e7c:	beq	19ea8 <lchmod@@Base+0x37b0>
   19e80:	mov	r0, r4
   19e84:	bl	11a9c <fileno@plt>
   19e88:	mov	r1, #1
   19e8c:	mov	r2, #0
   19e90:	mov	r3, #0
   19e94:	str	r1, [sp]
   19e98:	bl	11940 <lseek64@plt>
   19e9c:	and	r0, r0, r1
   19ea0:	cmn	r0, #1
   19ea4:	beq	19ee0 <lchmod@@Base+0x37e8>
   19ea8:	mov	r0, r4
   19eac:	bl	1a110 <lchmod@@Base+0x3a18>
   19eb0:	cmp	r0, #0
   19eb4:	beq	19ee0 <lchmod@@Base+0x37e8>
   19eb8:	bl	11a60 <__errno_location@plt>
   19ebc:	ldr	r6, [r0]
   19ec0:	mov	r5, r0
   19ec4:	mov	r0, r4
   19ec8:	bl	11ac0 <fclose@plt>
   19ecc:	cmp	r6, #0
   19ed0:	strne	r6, [r5]
   19ed4:	mvnne	r0, #0
   19ed8:	sub	sp, fp, #16
   19edc:	pop	{r4, r5, r6, sl, fp, pc}
   19ee0:	mov	r0, r4
   19ee4:	sub	sp, fp, #16
   19ee8:	pop	{r4, r5, r6, sl, fp, lr}
   19eec:	b	11ac0 <fclose@plt>
   19ef0:	sub	sp, sp, #8
   19ef4:	push	{r4, r5, r6, r7, fp, lr}
   19ef8:	add	fp, sp, #16
   19efc:	sub	sp, sp, #8
   19f00:	mov	r5, r0
   19f04:	add	r0, fp, #8
   19f08:	cmp	r1, #11
   19f0c:	str	r3, [fp, #12]
   19f10:	str	r2, [fp, #8]
   19f14:	str	r0, [sp, #4]
   19f18:	bhi	19f54 <lchmod@@Base+0x385c>
   19f1c:	mov	r0, #1
   19f20:	movw	r2, #1300	; 0x514
   19f24:	tst	r2, r0, lsl r1
   19f28:	bne	1a00c <lchmod@@Base+0x3914>
   19f2c:	movw	r2, #2570	; 0xa0a
   19f30:	tst	r2, r0, lsl r1
   19f34:	bne	19f7c <lchmod@@Base+0x3884>
   19f38:	cmp	r1, #0
   19f3c:	bne	19f54 <lchmod@@Base+0x385c>
   19f40:	ldr	r0, [sp, #4]
   19f44:	add	r1, r0, #4
   19f48:	str	r1, [sp, #4]
   19f4c:	mov	r1, #0
   19f50:	b	1a018 <lchmod@@Base+0x3920>
   19f54:	sub	r0, r1, #1024	; 0x400
   19f58:	cmp	r0, #10
   19f5c:	bhi	1a00c <lchmod@@Base+0x3914>
   19f60:	mov	r2, #1
   19f64:	movw	r3, #645	; 0x285
   19f68:	tst	r3, r2, lsl r0
   19f6c:	bne	1a00c <lchmod@@Base+0x3914>
   19f70:	movw	r3, #1282	; 0x502
   19f74:	tst	r3, r2, lsl r0
   19f78:	beq	19f88 <lchmod@@Base+0x3890>
   19f7c:	mov	r0, r5
   19f80:	bl	11ad8 <fcntl64@plt>
   19f84:	b	1a024 <lchmod@@Base+0x392c>
   19f88:	cmp	r0, #6
   19f8c:	bne	1a00c <lchmod@@Base+0x3914>
   19f90:	ldr	r0, [sp, #4]
   19f94:	movw	r7, #49976	; 0xc338
   19f98:	movt	r7, #2
   19f9c:	add	r1, r0, #4
   19fa0:	str	r1, [sp, #4]
   19fa4:	ldr	r6, [r0]
   19fa8:	ldr	r0, [r7]
   19fac:	cmp	r0, #0
   19fb0:	blt	1a048 <lchmod@@Base+0x3950>
   19fb4:	mov	r0, r5
   19fb8:	movw	r1, #1030	; 0x406
   19fbc:	mov	r2, r6
   19fc0:	bl	11ad8 <fcntl64@plt>
   19fc4:	mov	r4, r0
   19fc8:	cmn	r0, #1
   19fcc:	bgt	1a03c <lchmod@@Base+0x3944>
   19fd0:	bl	11a60 <__errno_location@plt>
   19fd4:	ldr	r0, [r0]
   19fd8:	cmp	r0, #22
   19fdc:	bne	1a03c <lchmod@@Base+0x3944>
   19fe0:	mov	r0, r5
   19fe4:	mov	r1, #0
   19fe8:	mov	r2, r6
   19fec:	bl	11ad8 <fcntl64@plt>
   19ff0:	mov	r4, r0
   19ff4:	cmp	r0, #0
   19ff8:	blt	1a028 <lchmod@@Base+0x3930>
   19ffc:	mvn	r0, #0
   1a000:	str	r0, [r7]
   1a004:	mov	r0, #1
   1a008:	b	1a06c <lchmod@@Base+0x3974>
   1a00c:	ldr	r0, [sp, #4]
   1a010:	add	r2, r0, #4
   1a014:	str	r2, [sp, #4]
   1a018:	ldr	r2, [r0]
   1a01c:	mov	r0, r5
   1a020:	bl	11ad8 <fcntl64@plt>
   1a024:	mov	r4, r0
   1a028:	mov	r0, r4
   1a02c:	sub	sp, fp, #16
   1a030:	pop	{r4, r5, r6, r7, fp, lr}
   1a034:	add	sp, sp, #8
   1a038:	bx	lr
   1a03c:	mov	r0, #1
   1a040:	str	r0, [r7]
   1a044:	b	1a028 <lchmod@@Base+0x3930>
   1a048:	mov	r0, r5
   1a04c:	mov	r1, #0
   1a050:	mov	r2, r6
   1a054:	bl	11ad8 <fcntl64@plt>
   1a058:	mov	r4, r0
   1a05c:	ldr	r0, [r7]
   1a060:	add	r0, r0, #1
   1a064:	clz	r0, r0
   1a068:	lsr	r0, r0, #5
   1a06c:	cmp	r0, #0
   1a070:	beq	1a028 <lchmod@@Base+0x3930>
   1a074:	cmp	r4, #0
   1a078:	blt	1a028 <lchmod@@Base+0x3930>
   1a07c:	mov	r0, r4
   1a080:	mov	r1, #1
   1a084:	bl	11ad8 <fcntl64@plt>
   1a088:	cmp	r0, #0
   1a08c:	blt	1a0a8 <lchmod@@Base+0x39b0>
   1a090:	orr	r2, r0, #1
   1a094:	mov	r0, r4
   1a098:	mov	r1, #2
   1a09c:	bl	11ad8 <fcntl64@plt>
   1a0a0:	cmn	r0, #1
   1a0a4:	bne	1a028 <lchmod@@Base+0x3930>
   1a0a8:	bl	11a60 <__errno_location@plt>
   1a0ac:	ldr	r6, [r0]
   1a0b0:	mov	r5, r0
   1a0b4:	mov	r0, r4
   1a0b8:	bl	11be0 <close@plt>
   1a0bc:	str	r6, [r5]
   1a0c0:	mvn	r4, #0
   1a0c4:	b	1a028 <lchmod@@Base+0x3930>
   1a0c8:	sub	sp, sp, #8
   1a0cc:	push	{fp, lr}
   1a0d0:	mov	fp, sp
   1a0d4:	sub	sp, sp, #8
   1a0d8:	str	r2, [fp, #8]
   1a0dc:	mov	r2, #0
   1a0e0:	tst	r1, #64	; 0x40
   1a0e4:	str	r3, [fp, #12]
   1a0e8:	addne	r2, fp, #8
   1a0ec:	orrne	r2, r2, #4
   1a0f0:	strne	r2, [sp, #4]
   1a0f4:	ldrne	r2, [fp, #8]
   1a0f8:	bl	11994 <open64@plt>
   1a0fc:	bl	18acc <lchmod@@Base+0x23d4>
   1a100:	mov	sp, fp
   1a104:	pop	{fp, lr}
   1a108:	add	sp, sp, #8
   1a10c:	bx	lr
   1a110:	push	{r4, sl, fp, lr}
   1a114:	add	fp, sp, #8
   1a118:	sub	sp, sp, #8
   1a11c:	mov	r4, r0
   1a120:	cmp	r0, #0
   1a124:	beq	1a140 <lchmod@@Base+0x3a48>
   1a128:	mov	r0, r4
   1a12c:	bl	119c4 <__freading@plt>
   1a130:	cmp	r0, #0
   1a134:	ldrbne	r0, [r4, #1]
   1a138:	tstne	r0, #1
   1a13c:	bne	1a150 <lchmod@@Base+0x3a58>
   1a140:	mov	r0, r4
   1a144:	sub	sp, fp, #8
   1a148:	pop	{r4, sl, fp, lr}
   1a14c:	b	11850 <fflush@plt>
   1a150:	mov	r0, #1
   1a154:	mov	r2, #0
   1a158:	mov	r3, #0
   1a15c:	str	r0, [sp]
   1a160:	mov	r0, r4
   1a164:	bl	1a16c <lchmod@@Base+0x3a74>
   1a168:	b	1a140 <lchmod@@Base+0x3a48>
   1a16c:	push	{r4, r5, r6, r7, fp, lr}
   1a170:	add	fp, sp, #16
   1a174:	sub	sp, sp, #8
   1a178:	mov	r4, r0
   1a17c:	ldr	r0, [r0, #4]
   1a180:	mov	r5, r3
   1a184:	mov	r6, r2
   1a188:	ldr	r1, [r4, #8]
   1a18c:	cmp	r1, r0
   1a190:	bne	1a1ac <lchmod@@Base+0x3ab4>
   1a194:	ldrd	r0, [r4, #16]
   1a198:	cmp	r1, r0
   1a19c:	bne	1a1ac <lchmod@@Base+0x3ab4>
   1a1a0:	ldr	r0, [r4, #36]	; 0x24
   1a1a4:	cmp	r0, #0
   1a1a8:	beq	1a1c4 <lchmod@@Base+0x3acc>
   1a1ac:	mov	r0, r4
   1a1b0:	mov	r2, r6
   1a1b4:	mov	r3, r5
   1a1b8:	sub	sp, fp, #16
   1a1bc:	pop	{r4, r5, r6, r7, fp, lr}
   1a1c0:	b	11acc <fseeko64@plt>
   1a1c4:	ldr	r7, [fp, #8]
   1a1c8:	mov	r0, r4
   1a1cc:	bl	11a9c <fileno@plt>
   1a1d0:	mov	r2, r6
   1a1d4:	mov	r3, r5
   1a1d8:	str	r7, [sp]
   1a1dc:	bl	11940 <lseek64@plt>
   1a1e0:	and	r2, r0, r1
   1a1e4:	cmn	r2, #1
   1a1e8:	beq	1a204 <lchmod@@Base+0x3b0c>
   1a1ec:	strd	r0, [r4, #80]	; 0x50
   1a1f0:	ldr	r0, [r4]
   1a1f4:	bic	r0, r0, #16
   1a1f8:	str	r0, [r4]
   1a1fc:	mov	r0, #0
   1a200:	b	1a208 <lchmod@@Base+0x3b10>
   1a204:	mvn	r0, #0
   1a208:	sub	sp, fp, #16
   1a20c:	pop	{r4, r5, r6, r7, fp, pc}
   1a210:	ldrb	r2, [r0]
   1a214:	cmp	r2, #0
   1a218:	beq	1a23c <lchmod@@Base+0x3b44>
   1a21c:	add	r3, r0, #1
   1a220:	mov	r0, #0
   1a224:	ror	r0, r0, #23
   1a228:	uxtab	r0, r0, r2
   1a22c:	ldrb	r2, [r3], #1
   1a230:	cmp	r2, #0
   1a234:	bne	1a224 <lchmod@@Base+0x3b2c>
   1a238:	b	1a240 <lchmod@@Base+0x3b48>
   1a23c:	mov	r0, #0
   1a240:	udiv	r2, r0, r1
   1a244:	mls	r0, r2, r1, r0
   1a248:	bx	lr
   1a24c:	push	{fp, lr}
   1a250:	mov	fp, sp
   1a254:	mov	r0, #14
   1a258:	bl	11b08 <nl_langinfo@plt>
   1a25c:	movw	r1, #44707	; 0xaea3
   1a260:	cmp	r0, #0
   1a264:	movt	r1, #1
   1a268:	movne	r1, r0
   1a26c:	movw	r0, #46518	; 0xb5b6
   1a270:	ldrb	r2, [r1]
   1a274:	movt	r0, #1
   1a278:	cmp	r2, #0
   1a27c:	movne	r0, r1
   1a280:	pop	{fp, pc}
   1a284:	push	{r4, r5, r6, r7, fp, lr}
   1a288:	add	fp, sp, #16
   1a28c:	sub	sp, sp, #8
   1a290:	add	r5, sp, #4
   1a294:	cmp	r0, #0
   1a298:	mov	r7, r2
   1a29c:	mov	r4, r1
   1a2a0:	movne	r5, r0
   1a2a4:	mov	r0, r5
   1a2a8:	bl	1197c <mbrtowc@plt>
   1a2ac:	mov	r6, r0
   1a2b0:	cmp	r7, #0
   1a2b4:	beq	1a2d8 <lchmod@@Base+0x3be0>
   1a2b8:	cmn	r6, #2
   1a2bc:	bcc	1a2d8 <lchmod@@Base+0x3be0>
   1a2c0:	mov	r0, #0
   1a2c4:	bl	1a32c <lchmod@@Base+0x3c34>
   1a2c8:	cmp	r0, #0
   1a2cc:	ldrbeq	r0, [r4]
   1a2d0:	moveq	r6, #1
   1a2d4:	streq	r0, [r5]
   1a2d8:	mov	r0, r6
   1a2dc:	sub	sp, fp, #16
   1a2e0:	pop	{r4, r5, r6, r7, fp, pc}
   1a2e4:	cmp	r2, #0
   1a2e8:	beq	1a318 <lchmod@@Base+0x3c20>
   1a2ec:	mvn	r3, #0
   1a2f0:	udiv	r3, r3, r2
   1a2f4:	cmp	r3, r1
   1a2f8:	bcs	1a318 <lchmod@@Base+0x3c20>
   1a2fc:	push	{fp, lr}
   1a300:	mov	fp, sp
   1a304:	bl	11a60 <__errno_location@plt>
   1a308:	mov	r1, #12
   1a30c:	str	r1, [r0]
   1a310:	mov	r0, #0
   1a314:	pop	{fp, pc}
   1a318:	mul	r1, r2, r1
   1a31c:	b	19c18 <lchmod@@Base+0x3520>
   1a320:	mov	r1, #0
   1a324:	mov	r2, #3
   1a328:	b	19ef0 <lchmod@@Base+0x37f8>
   1a32c:	push	{r4, sl, fp, lr}
   1a330:	add	fp, sp, #8
   1a334:	sub	sp, sp, #264	; 0x108
   1a338:	add	r1, sp, #7
   1a33c:	movw	r2, #257	; 0x101
   1a340:	bl	1a390 <lchmod@@Base+0x3c98>
   1a344:	mov	r4, #0
   1a348:	cmp	r0, #0
   1a34c:	bne	1a384 <lchmod@@Base+0x3c8c>
   1a350:	movw	r1, #46524	; 0xb5bc
   1a354:	add	r0, sp, #7
   1a358:	movt	r1, #1
   1a35c:	bl	1182c <strcmp@plt>
   1a360:	cmp	r0, #0
   1a364:	beq	1a384 <lchmod@@Base+0x3c8c>
   1a368:	movw	r1, #46526	; 0xb5be
   1a36c:	add	r0, sp, #7
   1a370:	movt	r1, #1
   1a374:	bl	1182c <strcmp@plt>
   1a378:	mov	r4, r0
   1a37c:	cmp	r0, #0
   1a380:	movwne	r4, #1
   1a384:	mov	r0, r4
   1a388:	sub	sp, fp, #8
   1a38c:	pop	{r4, sl, fp, pc}
   1a390:	push	{r4, r5, r6, r7, fp, lr}
   1a394:	add	fp, sp, #16
   1a398:	mov	r4, r1
   1a39c:	mov	r1, #0
   1a3a0:	mov	r6, r2
   1a3a4:	bl	11ae4 <setlocale@plt>
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a3d8 <lchmod@@Base+0x3ce0>
   1a3b0:	mov	r7, r0
   1a3b4:	bl	11a24 <strlen@plt>
   1a3b8:	cmp	r0, r6
   1a3bc:	bcs	1a3ec <lchmod@@Base+0x3cf4>
   1a3c0:	add	r2, r0, #1
   1a3c4:	mov	r0, r4
   1a3c8:	mov	r1, r7
   1a3cc:	bl	11898 <memcpy@plt>
   1a3d0:	mov	r5, #0
   1a3d4:	b	1a414 <lchmod@@Base+0x3d1c>
   1a3d8:	cmp	r6, #0
   1a3dc:	mov	r5, #22
   1a3e0:	movne	r0, #0
   1a3e4:	strbne	r0, [r4]
   1a3e8:	b	1a414 <lchmod@@Base+0x3d1c>
   1a3ec:	mov	r5, #34	; 0x22
   1a3f0:	cmp	r6, #0
   1a3f4:	beq	1a414 <lchmod@@Base+0x3d1c>
   1a3f8:	sub	r6, r6, #1
   1a3fc:	mov	r0, r4
   1a400:	mov	r1, r7
   1a404:	mov	r2, r6
   1a408:	bl	11898 <memcpy@plt>
   1a40c:	mov	r0, #0
   1a410:	strb	r0, [r4, r6]
   1a414:	mov	r0, r5
   1a418:	pop	{r4, r5, r6, r7, fp, pc}
   1a41c:	mov	r1, #0
   1a420:	b	11ae4 <setlocale@plt>
   1a424:	cmp	r3, #0
   1a428:	cmpeq	r2, #0
   1a42c:	bne	1a444 <lchmod@@Base+0x3d4c>
   1a430:	cmp	r1, #0
   1a434:	cmpeq	r0, #0
   1a438:	mvnne	r1, #0
   1a43c:	mvnne	r0, #0
   1a440:	b	1a460 <lchmod@@Base+0x3d68>
   1a444:	sub	sp, sp, #8
   1a448:	push	{sp, lr}
   1a44c:	bl	1a470 <lchmod@@Base+0x3d78>
   1a450:	ldr	lr, [sp, #4]
   1a454:	add	sp, sp, #8
   1a458:	pop	{r2, r3}
   1a45c:	bx	lr
   1a460:	push	{r1, lr}
   1a464:	mov	r0, #8
   1a468:	bl	11814 <raise@plt>
   1a46c:	pop	{r1, pc}
   1a470:	cmp	r1, r3
   1a474:	cmpeq	r0, r2
   1a478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a47c:	mov	r4, r0
   1a480:	movcc	r0, #0
   1a484:	mov	r5, r1
   1a488:	ldr	lr, [sp, #36]	; 0x24
   1a48c:	movcc	r1, r0
   1a490:	bcc	1a58c <lchmod@@Base+0x3e94>
   1a494:	cmp	r3, #0
   1a498:	clzeq	ip, r2
   1a49c:	clzne	ip, r3
   1a4a0:	addeq	ip, ip, #32
   1a4a4:	cmp	r5, #0
   1a4a8:	clzeq	r1, r4
   1a4ac:	addeq	r1, r1, #32
   1a4b0:	clzne	r1, r5
   1a4b4:	sub	ip, ip, r1
   1a4b8:	sub	sl, ip, #32
   1a4bc:	lsl	r9, r3, ip
   1a4c0:	rsb	fp, ip, #32
   1a4c4:	orr	r9, r9, r2, lsl sl
   1a4c8:	orr	r9, r9, r2, lsr fp
   1a4cc:	lsl	r8, r2, ip
   1a4d0:	cmp	r5, r9
   1a4d4:	cmpeq	r4, r8
   1a4d8:	movcc	r0, #0
   1a4dc:	movcc	r1, r0
   1a4e0:	bcc	1a4fc <lchmod@@Base+0x3e04>
   1a4e4:	mov	r0, #1
   1a4e8:	subs	r4, r4, r8
   1a4ec:	lsl	r1, r0, sl
   1a4f0:	orr	r1, r1, r0, lsr fp
   1a4f4:	lsl	r0, r0, ip
   1a4f8:	sbc	r5, r5, r9
   1a4fc:	cmp	ip, #0
   1a500:	beq	1a58c <lchmod@@Base+0x3e94>
   1a504:	lsr	r6, r8, #1
   1a508:	orr	r6, r6, r9, lsl #31
   1a50c:	lsr	r7, r9, #1
   1a510:	mov	r2, ip
   1a514:	b	1a538 <lchmod@@Base+0x3e40>
   1a518:	subs	r3, r4, r6
   1a51c:	sbc	r8, r5, r7
   1a520:	adds	r3, r3, r3
   1a524:	adc	r8, r8, r8
   1a528:	adds	r4, r3, #1
   1a52c:	adc	r5, r8, #0
   1a530:	subs	r2, r2, #1
   1a534:	beq	1a554 <lchmod@@Base+0x3e5c>
   1a538:	cmp	r5, r7
   1a53c:	cmpeq	r4, r6
   1a540:	bcs	1a518 <lchmod@@Base+0x3e20>
   1a544:	adds	r4, r4, r4
   1a548:	adc	r5, r5, r5
   1a54c:	subs	r2, r2, #1
   1a550:	bne	1a538 <lchmod@@Base+0x3e40>
   1a554:	lsr	r3, r4, ip
   1a558:	orr	r3, r3, r5, lsl fp
   1a55c:	lsr	r2, r5, ip
   1a560:	orr	r3, r3, r5, lsr sl
   1a564:	adds	r0, r0, r4
   1a568:	mov	r4, r3
   1a56c:	lsl	r3, r2, ip
   1a570:	orr	r3, r3, r4, lsl sl
   1a574:	lsl	ip, r4, ip
   1a578:	orr	r3, r3, r4, lsr fp
   1a57c:	adc	r1, r1, r5
   1a580:	subs	r0, r0, ip
   1a584:	mov	r5, r2
   1a588:	sbc	r1, r1, r3
   1a58c:	cmp	lr, #0
   1a590:	strdne	r4, [lr]
   1a594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a598:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a59c:	mov	r7, r0
   1a5a0:	ldr	r6, [pc, #72]	; 1a5f0 <lchmod@@Base+0x3ef8>
   1a5a4:	ldr	r5, [pc, #72]	; 1a5f4 <lchmod@@Base+0x3efc>
   1a5a8:	add	r6, pc, r6
   1a5ac:	add	r5, pc, r5
   1a5b0:	sub	r6, r6, r5
   1a5b4:	mov	r8, r1
   1a5b8:	mov	r9, r2
   1a5bc:	bl	117c4 <fstatfs64@plt-0x20>
   1a5c0:	asrs	r6, r6, #2
   1a5c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a5c8:	mov	r4, #0
   1a5cc:	add	r4, r4, #1
   1a5d0:	ldr	r3, [r5], #4
   1a5d4:	mov	r2, r9
   1a5d8:	mov	r1, r8
   1a5dc:	mov	r0, r7
   1a5e0:	blx	r3
   1a5e4:	cmp	r6, r4
   1a5e8:	bne	1a5cc <lchmod@@Base+0x3ed4>
   1a5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a5f0:	andeq	r1, r1, r4, asr r9
   1a5f4:	andeq	r1, r1, ip, asr #18
   1a5f8:	bx	lr
   1a5fc:	ldr	r3, [pc, #12]	; 1a610 <lchmod@@Base+0x3f18>
   1a600:	mov	r1, #0
   1a604:	add	r3, pc, r3
   1a608:	ldr	r2, [r3]
   1a60c:	b	11a78 <__cxa_atexit@plt>
   1a610:	andeq	r1, r1, r0, lsl #23
   1a614:	mov	r2, r1
   1a618:	mov	r1, r0
   1a61c:	mov	r0, #3
   1a620:	b	11ba4 <__xstat64@plt>
   1a624:	mov	r2, r1
   1a628:	mov	r1, r0
   1a62c:	mov	r0, #3
   1a630:	b	11928 <__fxstat64@plt>
   1a634:	mov	r2, r1
   1a638:	mov	r1, r0
   1a63c:	mov	r0, #3
   1a640:	b	11bec <__lxstat64@plt>
   1a644:	push	{lr}		; (str lr, [sp, #-4]!)
   1a648:	sub	sp, sp, #12
   1a64c:	str	r3, [sp]
   1a650:	mov	r3, r2
   1a654:	mov	r2, r1
   1a658:	mov	r1, r0
   1a65c:	mov	r0, #3
   1a660:	bl	11910 <__fxstatat64@plt>
   1a664:	add	sp, sp, #12
   1a668:	pop	{pc}		; (ldr pc, [sp], #4)
   1a66c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a670:	sub	sp, sp, #12
   1a674:	strd	r2, [sp]
   1a678:	mov	r2, r1
   1a67c:	mov	r3, sp
   1a680:	mov	r1, r0
   1a684:	mov	r0, #1
   1a688:	bl	11bb0 <__xmknod@plt>
   1a68c:	add	sp, sp, #12
   1a690:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0001a694 <.fini>:
   1a694:	push	{r3, lr}
   1a698:	pop	{r3, pc}
