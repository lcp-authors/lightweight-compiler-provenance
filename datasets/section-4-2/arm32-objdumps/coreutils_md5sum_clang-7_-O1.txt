
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010ed4 <.init>:
   10ed4:	push	{r3, lr}
   10ed8:	bl	111dc <putchar_unlocked@plt+0x48>
   10edc:	pop	{r3, pc}

Disassembly of section .plt:

00010ee0 <fdopen@plt-0x14>:
   10ee0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ee4:	ldr	lr, [pc, #4]	; 10ef0 <fdopen@plt-0x4>
   10ee8:	add	lr, pc, lr
   10eec:	ldr	pc, [lr, #8]!
   10ef0:	andeq	r8, r1, r0, lsl r1

00010ef4 <fdopen@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #24, 20	; 0x18000
   10efc:	ldr	pc, [ip, #272]!	; 0x110

00010f00 <calloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #24, 20	; 0x18000
   10f08:	ldr	pc, [ip, #264]!	; 0x108

00010f0c <fputs_unlocked@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #24, 20	; 0x18000
   10f14:	ldr	pc, [ip, #256]!	; 0x100

00010f18 <raise@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #24, 20	; 0x18000
   10f20:	ldr	pc, [ip, #248]!	; 0xf8

00010f24 <strcmp@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #24, 20	; 0x18000
   10f2c:	ldr	pc, [ip, #240]!	; 0xf0

00010f30 <posix_fadvise64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #24, 20	; 0x18000
   10f38:	ldr	pc, [ip, #232]!	; 0xe8

00010f3c <fflush@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #24, 20	; 0x18000
   10f44:	ldr	pc, [ip, #224]!	; 0xe0

00010f48 <free@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #24, 20	; 0x18000
   10f50:	ldr	pc, [ip, #216]!	; 0xd8

00010f54 <_exit@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #24, 20	; 0x18000
   10f5c:	ldr	pc, [ip, #208]!	; 0xd0

00010f60 <memcpy@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #24, 20	; 0x18000
   10f68:	ldr	pc, [ip, #200]!	; 0xc8

00010f6c <mbsinit@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #24, 20	; 0x18000
   10f74:	ldr	pc, [ip, #192]!	; 0xc0

00010f78 <memcmp@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #24, 20	; 0x18000
   10f80:	ldr	pc, [ip, #184]!	; 0xb8

00010f84 <dcgettext@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #24, 20	; 0x18000
   10f8c:	ldr	pc, [ip, #176]!	; 0xb0

00010f90 <realloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #168]!	; 0xa8

00010f9c <textdomain@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #160]!	; 0xa0

00010fa8 <iswprint@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #152]!	; 0x98

00010fb4 <fwrite@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #144]!	; 0x90

00010fc0 <lseek64@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #136]!	; 0x88

00010fcc <__ctype_get_mb_cur_max@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #128]!	; 0x80

00010fd8 <__fpending@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #120]!	; 0x78

00010fe4 <ferror_unlocked@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #112]!	; 0x70

00010ff0 <mbrtowc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #104]!	; 0x68

00010ffc <error@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #24, 20	; 0x18000
   11004:	ldr	pc, [ip, #96]!	; 0x60

00011008 <malloc@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #24, 20	; 0x18000
   11010:	ldr	pc, [ip, #88]!	; 0x58

00011014 <__libc_start_main@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #24, 20	; 0x18000
   1101c:	ldr	pc, [ip, #80]!	; 0x50

00011020 <__freading@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #24, 20	; 0x18000
   11028:	ldr	pc, [ip, #72]!	; 0x48

0001102c <__ctype_tolower_loc@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #24, 20	; 0x18000
   11034:	ldr	pc, [ip, #64]!	; 0x40

00011038 <__gmon_start__@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #24, 20	; 0x18000
   11040:	ldr	pc, [ip, #56]!	; 0x38

00011044 <getopt_long@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #24, 20	; 0x18000
   1104c:	ldr	pc, [ip, #48]!	; 0x30

00011050 <__ctype_b_loc@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #24, 20	; 0x18000
   11058:	ldr	pc, [ip, #40]!	; 0x28

0001105c <exit@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #24, 20	; 0x18000
   11064:	ldr	pc, [ip, #32]!

00011068 <strlen@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #24, 20	; 0x18000
   11070:	ldr	pc, [ip, #24]!

00011074 <strchr@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #24, 20	; 0x18000
   1107c:	ldr	pc, [ip, #16]!

00011080 <__errno_location@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #24, 20	; 0x18000
   11088:	ldr	pc, [ip, #8]!

0001108c <__cxa_atexit@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #24, 20	; 0x18000
   11094:	ldr	pc, [ip, #0]!

00011098 <setvbuf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #4088]!	; 0xff8

000110a4 <memset@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #4080]!	; 0xff0

000110b0 <__printf_chk@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #4072]!	; 0xfe8

000110bc <fileno@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #4064]!	; 0xfe0

000110c8 <__fprintf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #4056]!	; 0xfd8

000110d4 <fclose@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e0 <fseeko64@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #4040]!	; 0xfc8

000110ec <fcntl64@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #94208	; 0x17000
   110f4:	ldr	pc, [ip, #4032]!	; 0xfc0

000110f8 <setlocale@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #94208	; 0x17000
   11100:	ldr	pc, [ip, #4024]!	; 0xfb8

00011104 <strrchr@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #4016]!	; 0xfb0

00011110 <nl_langinfo@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #4008]!	; 0xfa8

0001111c <clearerr_unlocked@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #4000]!	; 0xfa0

00011128 <fopen64@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3992]!	; 0xf98

00011134 <bindtextdomain@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3984]!	; 0xf90

00011140 <fread_unlocked@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3976]!	; 0xf88

0001114c <getline@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3968]!	; 0xf80

00011158 <strncmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3960]!	; 0xf78

00011164 <abort@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3952]!	; 0xf70

00011170 <feof_unlocked@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3944]!	; 0xf68

0001117c <close@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3936]!	; 0xf60

00011188 <dcngettext@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3928]!	; 0xf58

00011194 <putchar_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3920]!	; 0xf50

Disassembly of section .text:

000111a0 <.text>:
   111a0:	mov	fp, #0
   111a4:	mov	lr, #0
   111a8:	pop	{r1}		; (ldr r1, [sp], #4)
   111ac:	mov	r2, sp
   111b0:	push	{r2}		; (str r2, [sp, #-4]!)
   111b4:	push	{r0}		; (str r0, [sp, #-4]!)
   111b8:	ldr	ip, [pc, #16]	; 111d0 <putchar_unlocked@plt+0x3c>
   111bc:	push	{ip}		; (str ip, [sp, #-4]!)
   111c0:	ldr	r0, [pc, #12]	; 111d4 <putchar_unlocked@plt+0x40>
   111c4:	ldr	r3, [pc, #12]	; 111d8 <putchar_unlocked@plt+0x44>
   111c8:	bl	11014 <__libc_start_main@plt>
   111cc:	bl	11164 <abort@plt>
   111d0:	andeq	r6, r1, r8, lsr #27
   111d4:	andeq	r1, r1, r0, lsr r6
   111d8:	andeq	r6, r1, r8, asr #26
   111dc:	ldr	r3, [pc, #20]	; 111f8 <putchar_unlocked@plt+0x64>
   111e0:	ldr	r2, [pc, #20]	; 111fc <putchar_unlocked@plt+0x68>
   111e4:	add	r3, pc, r3
   111e8:	ldr	r2, [r3, r2]
   111ec:	cmp	r2, #0
   111f0:	bxeq	lr
   111f4:	b	11038 <__gmon_start__@plt>
   111f8:	andeq	r7, r1, r4, lsl lr
   111fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11200:	ldr	r0, [pc, #24]	; 11220 <putchar_unlocked@plt+0x8c>
   11204:	ldr	r3, [pc, #24]	; 11224 <putchar_unlocked@plt+0x90>
   11208:	cmp	r3, r0
   1120c:	bxeq	lr
   11210:	ldr	r3, [pc, #16]	; 11228 <putchar_unlocked@plt+0x94>
   11214:	cmp	r3, #0
   11218:	bxeq	lr
   1121c:	bx	r3
   11220:	andeq	r9, r2, r0, asr r1
   11224:	andeq	r9, r2, r0, asr r1
   11228:	andeq	r0, r0, r0
   1122c:	ldr	r0, [pc, #36]	; 11258 <putchar_unlocked@plt+0xc4>
   11230:	ldr	r1, [pc, #36]	; 1125c <putchar_unlocked@plt+0xc8>
   11234:	sub	r1, r1, r0
   11238:	asr	r1, r1, #2
   1123c:	add	r1, r1, r1, lsr #31
   11240:	asrs	r1, r1, #1
   11244:	bxeq	lr
   11248:	ldr	r3, [pc, #16]	; 11260 <putchar_unlocked@plt+0xcc>
   1124c:	cmp	r3, #0
   11250:	bxeq	lr
   11254:	bx	r3
   11258:	andeq	r9, r2, r0, asr r1
   1125c:	andeq	r9, r2, r0, asr r1
   11260:	andeq	r0, r0, r0
   11264:	push	{r4, lr}
   11268:	ldr	r4, [pc, #24]	; 11288 <putchar_unlocked@plt+0xf4>
   1126c:	ldrb	r3, [r4]
   11270:	cmp	r3, #0
   11274:	popne	{r4, pc}
   11278:	bl	11200 <putchar_unlocked@plt+0x6c>
   1127c:	mov	r3, #1
   11280:	strb	r3, [r4]
   11284:	pop	{r4, pc}
   11288:	andeq	r9, r2, r0, ror r1
   1128c:	b	1122c <putchar_unlocked@plt+0x98>
   11290:	push	{fp, lr}
   11294:	mov	fp, sp
   11298:	mov	r4, r0
   1129c:	cmp	r0, #0
   112a0:	bne	11438 <putchar_unlocked@plt+0x2a4>
   112a4:	movw	r1, #28155	; 0x6dfb
   112a8:	movt	r1, #1
   112ac:	mov	r0, #0
   112b0:	mov	r2, #5
   112b4:	bl	10f84 <dcgettext@plt>
   112b8:	mov	r1, r0
   112bc:	movw	r0, #37260	; 0x918c
   112c0:	movt	r0, #2
   112c4:	ldr	r2, [r0]
   112c8:	mov	r0, #1
   112cc:	bl	110b0 <__printf_chk@plt>
   112d0:	movw	r1, #28188	; 0x6e1c
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	bl	10f84 <dcgettext@plt>
   112e4:	mov	r1, r0
   112e8:	movw	r2, #28227	; 0x6e43
   112ec:	movt	r2, #1
   112f0:	mov	r0, #1
   112f4:	mov	r3, #128	; 0x80
   112f8:	bl	110b0 <__printf_chk@plt>
   112fc:	bl	1147c <putchar_unlocked@plt+0x2e8>
   11300:	movw	r1, #28231	; 0x6e47
   11304:	movt	r1, #1
   11308:	mov	r0, #0
   1130c:	mov	r2, #5
   11310:	bl	10f84 <dcgettext@plt>
   11314:	movw	r5, #37228	; 0x916c
   11318:	movt	r5, #2
   1131c:	ldr	r1, [r5]
   11320:	bl	10f0c <fputs_unlocked@plt>
   11324:	movw	r1, #28276	; 0x6e74
   11328:	movt	r1, #1
   1132c:	mov	r0, #0
   11330:	mov	r2, #5
   11334:	bl	10f84 <dcgettext@plt>
   11338:	ldr	r1, [r5]
   1133c:	bl	10f0c <fputs_unlocked@plt>
   11340:	movw	r1, #28346	; 0x6eba
   11344:	movt	r1, #1
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	bl	10f84 <dcgettext@plt>
   11354:	ldr	r1, [r5]
   11358:	bl	10f0c <fputs_unlocked@plt>
   1135c:	movw	r1, #28399	; 0x6eef
   11360:	movt	r1, #1
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	bl	10f84 <dcgettext@plt>
   11370:	ldr	r1, [r5]
   11374:	bl	10f0c <fputs_unlocked@plt>
   11378:	movw	r1, #28452	; 0x6f24
   1137c:	movt	r1, #1
   11380:	mov	r0, #0
   11384:	mov	r2, #5
   11388:	bl	10f84 <dcgettext@plt>
   1138c:	ldr	r1, [r5]
   11390:	bl	10f0c <fputs_unlocked@plt>
   11394:	movw	r1, #28578	; 0x6fa2
   11398:	movt	r1, #1
   1139c:	mov	r0, #0
   113a0:	mov	r2, #5
   113a4:	bl	10f84 <dcgettext@plt>
   113a8:	ldr	r1, [r5]
   113ac:	bl	10f0c <fputs_unlocked@plt>
   113b0:	movw	r1, #29017	; 0x7159
   113b4:	movt	r1, #1
   113b8:	mov	r0, #0
   113bc:	mov	r2, #5
   113c0:	bl	10f84 <dcgettext@plt>
   113c4:	ldr	r1, [r5]
   113c8:	bl	10f0c <fputs_unlocked@plt>
   113cc:	movw	r1, #29062	; 0x7186
   113d0:	movt	r1, #1
   113d4:	mov	r0, #0
   113d8:	mov	r2, #5
   113dc:	bl	10f84 <dcgettext@plt>
   113e0:	ldr	r1, [r5]
   113e4:	bl	10f0c <fputs_unlocked@plt>
   113e8:	movw	r1, #29116	; 0x71bc
   113ec:	movt	r1, #1
   113f0:	mov	r0, #0
   113f4:	mov	r2, #5
   113f8:	bl	10f84 <dcgettext@plt>
   113fc:	mov	r1, r0
   11400:	movw	r2, #29160	; 0x71e8
   11404:	movt	r2, #1
   11408:	mov	r0, #1
   1140c:	bl	110b0 <__printf_chk@plt>
   11410:	movw	r1, #29169	; 0x71f1
   11414:	movt	r1, #1
   11418:	mov	r0, #0
   1141c:	mov	r2, #5
   11420:	bl	10f84 <dcgettext@plt>
   11424:	ldr	r1, [r5]
   11428:	bl	10f0c <fputs_unlocked@plt>
   1142c:	bl	114ac <putchar_unlocked@plt+0x318>
   11430:	mov	r0, r4
   11434:	bl	1105c <exit@plt>
   11438:	movw	r0, #37216	; 0x9160
   1143c:	movt	r0, #2
   11440:	ldr	r5, [r0]
   11444:	movw	r1, #28116	; 0x6dd4
   11448:	movt	r1, #1
   1144c:	mov	r0, #0
   11450:	mov	r2, #5
   11454:	bl	10f84 <dcgettext@plt>
   11458:	mov	r2, r0
   1145c:	movw	r0, #37260	; 0x918c
   11460:	movt	r0, #2
   11464:	ldr	r3, [r0]
   11468:	mov	r0, r5
   1146c:	mov	r1, #1
   11470:	bl	110c8 <__fprintf_chk@plt>
   11474:	mov	r0, r4
   11478:	bl	1105c <exit@plt>
   1147c:	push	{fp, lr}
   11480:	mov	fp, sp
   11484:	movw	r1, #30159	; 0x75cf
   11488:	movt	r1, #1
   1148c:	mov	r0, #0
   11490:	mov	r2, #5
   11494:	bl	10f84 <dcgettext@plt>
   11498:	movw	r1, #37228	; 0x916c
   1149c:	movt	r1, #2
   114a0:	ldr	r1, [r1]
   114a4:	pop	{fp, lr}
   114a8:	b	10f0c <fputs_unlocked@plt>
   114ac:	push	{r4, r5, fp, lr}
   114b0:	add	fp, sp, #8
   114b4:	sub	sp, sp, #56	; 0x38
   114b8:	movw	r0, #31304	; 0x7a48
   114bc:	movt	r0, #1
   114c0:	add	r1, r0, #32
   114c4:	mov	r5, sp
   114c8:	mov	r2, #48	; 0x30
   114cc:	vld1.64	{d16-d17}, [r1]
   114d0:	add	r1, r5, #32
   114d4:	add	r3, r0, #16
   114d8:	vld1.64	{d18-d19}, [r0], r2
   114dc:	vld1.64	{d20-d21}, [r3]
   114e0:	vldr	d22, [r0]
   114e4:	vst1.64	{d16-d17}, [r1]
   114e8:	add	r0, r5, #16
   114ec:	vst1.64	{d20-d21}, [r0]
   114f0:	mov	r0, r5
   114f4:	vst1.64	{d18-d19}, [r0], r2
   114f8:	vstr	d22, [r0]
   114fc:	ldr	r1, [sp]
   11500:	cmp	r1, #0
   11504:	beq	1152c <putchar_unlocked@plt+0x398>
   11508:	mov	r5, sp
   1150c:	movw	r4, #29502	; 0x733e
   11510:	movt	r4, #1
   11514:	mov	r0, r4
   11518:	bl	10f24 <strcmp@plt>
   1151c:	cmp	r0, #0
   11520:	ldrne	r1, [r5, #8]!
   11524:	cmpne	r1, #0
   11528:	bne	11514 <putchar_unlocked@plt+0x380>
   1152c:	ldr	r4, [r5, #4]
   11530:	movw	r1, #30310	; 0x7666
   11534:	movt	r1, #1
   11538:	mov	r0, #0
   1153c:	mov	r2, #5
   11540:	bl	10f84 <dcgettext@plt>
   11544:	mov	r1, r0
   11548:	movw	r2, #29539	; 0x7363
   1154c:	movt	r2, #1
   11550:	movw	r3, #30333	; 0x767d
   11554:	movt	r3, #1
   11558:	mov	r0, #1
   1155c:	bl	110b0 <__printf_chk@plt>
   11560:	movw	r5, #29502	; 0x733e
   11564:	movt	r5, #1
   11568:	cmp	r4, #0
   1156c:	moveq	r4, r5
   11570:	mov	r0, #5
   11574:	mov	r1, #0
   11578:	bl	110f8 <setlocale@plt>
   1157c:	cmp	r0, #0
   11580:	beq	115c0 <putchar_unlocked@plt+0x42c>
   11584:	movw	r1, #30373	; 0x76a5
   11588:	movt	r1, #1
   1158c:	mov	r2, #3
   11590:	bl	11158 <strncmp@plt>
   11594:	cmp	r0, #0
   11598:	beq	115c0 <putchar_unlocked@plt+0x42c>
   1159c:	movw	r1, #30377	; 0x76a9
   115a0:	movt	r1, #1
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	bl	10f84 <dcgettext@plt>
   115b0:	movw	r1, #37228	; 0x916c
   115b4:	movt	r1, #2
   115b8:	ldr	r1, [r1]
   115bc:	bl	10f0c <fputs_unlocked@plt>
   115c0:	movw	r1, #30448	; 0x76f0
   115c4:	movt	r1, #1
   115c8:	mov	r0, #0
   115cc:	mov	r2, #5
   115d0:	bl	10f84 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r2, #30333	; 0x767d
   115dc:	movt	r2, #1
   115e0:	mov	r0, #1
   115e4:	mov	r3, r5
   115e8:	bl	110b0 <__printf_chk@plt>
   115ec:	movw	r1, #30475	; 0x770b
   115f0:	movt	r1, #1
   115f4:	mov	r0, #0
   115f8:	mov	r2, #5
   115fc:	bl	10f84 <dcgettext@plt>
   11600:	mov	r1, r0
   11604:	movw	r0, #30243	; 0x7623
   11608:	movt	r0, #1
   1160c:	movw	r3, #29016	; 0x7158
   11610:	movt	r3, #1
   11614:	cmp	r4, r5
   11618:	moveq	r3, r0
   1161c:	mov	r0, #1
   11620:	mov	r2, r4
   11624:	bl	110b0 <__printf_chk@plt>
   11628:	sub	sp, fp, #8
   1162c:	pop	{r4, r5, fp, pc}
   11630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11634:	add	fp, sp, #28
   11638:	sub	sp, sp, #52	; 0x34
   1163c:	mov	r6, r1
   11640:	mov	r8, r0
   11644:	add	r0, sp, #32
   11648:	bl	11bdc <putchar_unlocked@plt+0xa48>
   1164c:	str	r0, [sp, #24]
   11650:	ldr	r0, [r6]
   11654:	bl	13e2c <putchar_unlocked@plt+0x2c98>
   11658:	movw	r1, #29016	; 0x7158
   1165c:	movt	r1, #1
   11660:	mov	r0, #6
   11664:	bl	110f8 <setlocale@plt>
   11668:	movw	r5, #29543	; 0x7367
   1166c:	movt	r5, #1
   11670:	movw	r1, #29509	; 0x7345
   11674:	movt	r1, #1
   11678:	mov	r0, r5
   1167c:	bl	11134 <bindtextdomain@plt>
   11680:	mov	r0, r5
   11684:	bl	10f9c <textdomain@plt>
   11688:	movw	r0, #11244	; 0x2bec
   1168c:	movt	r0, #1
   11690:	bl	16dac <putchar_unlocked@plt+0x5c18>
   11694:	movw	r0, #37228	; 0x916c
   11698:	movt	r0, #2
   1169c:	ldr	r0, [r0]
   116a0:	mov	r9, #0
   116a4:	mov	r1, #0
   116a8:	mov	r2, #1
   116ac:	mov	r3, #0
   116b0:	bl	11098 <setvbuf@plt>
   116b4:	mvn	r0, #0
   116b8:	str	r0, [sp, #20]
   116bc:	movw	r2, #29533	; 0x735d
   116c0:	movt	r2, #1
   116c4:	movw	r3, #31096	; 0x7978
   116c8:	movt	r3, #1
   116cc:	mov	r7, #0
   116d0:	mov	r0, #0
   116d4:	b	116e4 <putchar_unlocked@plt+0x550>
   116d8:	mov	r1, #1
   116dc:	strb	r1, [r0]
   116e0:	mov	r0, sl
   116e4:	mov	sl, r0
   116e8:	str	r9, [sp]
   116ec:	mov	r5, r8
   116f0:	mov	r0, r8
   116f4:	mov	r4, r6
   116f8:	mov	r1, r6
   116fc:	mov	r9, r2
   11700:	mov	r8, r3
   11704:	bl	11044 <getopt_long@plt>
   11708:	cmp	r0, #97	; 0x61
   1170c:	ble	118ac <putchar_unlocked@plt+0x718>
   11710:	sub	r1, r0, #98	; 0x62
   11714:	cmp	r1, #24
   11718:	bls	11764 <putchar_unlocked@plt+0x5d0>
   1171c:	sub	r0, r0, #256	; 0x100
   11720:	cmp	r0, #4
   11724:	mov	r2, r9
   11728:	mov	r9, #0
   1172c:	bhi	11b1c <putchar_unlocked@plt+0x988>
   11730:	mov	r3, r8
   11734:	mov	r8, r5
   11738:	mov	r6, r4
   1173c:	add	r1, pc, #0
   11740:	ldr	pc, [r1, r0, lsl #2]
   11744:	andeq	r1, r1, r8, asr r7
   11748:	andeq	r1, r1, ip, ror r8
   1174c:	andeq	r1, r1, r0, lsr #16
   11750:	andeq	r1, r1, r4, asr #16
   11754:	strdeq	r1, [r1], -r0
   11758:	movw	r0, #37239	; 0x9177
   1175c:	movt	r0, #2
   11760:	b	116d8 <putchar_unlocked@plt+0x544>
   11764:	add	ip, pc, #24
   11768:	mov	r0, #1
   1176c:	mov	r2, r9
   11770:	mov	r3, r8
   11774:	mov	r9, #0
   11778:	mov	r8, r5
   1177c:	mov	r6, r4
   11780:	ldr	pc, [ip, r1, lsl #2]
   11784:	andeq	r1, r1, r8, ror #15
   11788:	andeq	r1, r1, r4, ror #13
   1178c:	andeq	r1, r1, ip, lsl fp
   11790:	andeq	r1, r1, ip, lsl fp
   11794:	andeq	r1, r1, ip, lsl fp
   11798:	andeq	r1, r1, ip, lsl fp
   1179c:	andeq	r1, r1, ip, lsl fp
   117a0:	andeq	r1, r1, ip, lsl fp
   117a4:	andeq	r1, r1, ip, lsl fp
   117a8:	andeq	r1, r1, ip, lsl fp
   117ac:	andeq	r1, r1, ip, lsl fp
   117b0:	andeq	r1, r1, ip, lsl fp
   117b4:	andeq	r1, r1, ip, lsl fp
   117b8:	andeq	r1, r1, ip, lsl fp
   117bc:	andeq	r1, r1, ip, lsl fp
   117c0:	andeq	r1, r1, ip, lsl fp
   117c4:	andeq	r1, r1, ip, lsl fp
   117c8:	andeq	r1, r1, ip, lsl fp
   117cc:	andeq	r1, r1, r0, lsl r8
   117d0:	andeq	r1, r1, ip, lsl fp
   117d4:	andeq	r1, r1, ip, lsl fp
   117d8:	andeq	r1, r1, ip, asr r8
   117dc:	andeq	r1, r1, ip, lsl fp
   117e0:	andeq	r1, r1, ip, lsl fp
   117e4:	andeq	r1, r1, r4, lsl #16
   117e8:	mov	r0, #1
   117ec:	b	11814 <putchar_unlocked@plt+0x680>
   117f0:	mov	r0, #1
   117f4:	str	r0, [sp, #20]
   117f8:	mov	r7, #1
   117fc:	mov	r0, sl
   11800:	b	116e4 <putchar_unlocked@plt+0x550>
   11804:	movw	r0, #37241	; 0x9179
   11808:	movt	r0, #2
   1180c:	b	116d8 <putchar_unlocked@plt+0x544>
   11810:	mov	r0, #0
   11814:	str	r0, [sp, #20]
   11818:	mov	r0, sl
   1181c:	b	116e4 <putchar_unlocked@plt+0x550>
   11820:	movw	r0, #37237	; 0x9175
   11824:	movt	r0, #2
   11828:	strb	r9, [r0]
   1182c:	movw	r0, #37236	; 0x9174
   11830:	movt	r0, #2
   11834:	strb	r9, [r0]
   11838:	movw	r0, #37238	; 0x9176
   1183c:	movt	r0, #2
   11840:	b	116d8 <putchar_unlocked@plt+0x544>
   11844:	mov	r0, #1
   11848:	movw	r1, #37240	; 0x9178
   1184c:	movt	r1, #2
   11850:	strb	r0, [r1]
   11854:	mov	r0, sl
   11858:	b	116e4 <putchar_unlocked@plt+0x550>
   1185c:	movw	r0, #37237	; 0x9175
   11860:	movt	r0, #2
   11864:	mov	r1, #1
   11868:	strb	r1, [r0]
   1186c:	movw	r0, #37236	; 0x9174
   11870:	movt	r0, #2
   11874:	strb	r9, [r0]
   11878:	b	11898 <putchar_unlocked@plt+0x704>
   1187c:	movw	r0, #37237	; 0x9175
   11880:	movt	r0, #2
   11884:	strb	r9, [r0]
   11888:	movw	r0, #37236	; 0x9174
   1188c:	movt	r0, #2
   11890:	mov	r1, #1
   11894:	strb	r1, [r0]
   11898:	movw	r0, #37238	; 0x9176
   1189c:	movt	r0, #2
   118a0:	strb	r9, [r0]
   118a4:	mov	r0, sl
   118a8:	b	116e4 <putchar_unlocked@plt+0x550>
   118ac:	cmn	r0, #1
   118b0:	bne	11aa8 <putchar_unlocked@plt+0x914>
   118b4:	movw	r0, #37248	; 0x9180
   118b8:	movt	r0, #2
   118bc:	mov	r1, #1
   118c0:	strb	r1, [r0]
   118c4:	movw	r0, #37244	; 0x917c
   118c8:	movt	r0, #2
   118cc:	strb	r1, [r0]
   118d0:	eor	r1, r7, #1
   118d4:	ldr	r3, [sp, #20]
   118d8:	cmp	r3, #0
   118dc:	mov	r6, r5
   118e0:	tsteq	r1, #1
   118e4:	beq	11b24 <putchar_unlocked@plt+0x990>
   118e8:	eor	r0, sl, #1
   118ec:	tst	r0, #1
   118f0:	bne	11908 <putchar_unlocked@plt+0x774>
   118f4:	movw	r2, #37241	; 0x9179
   118f8:	movt	r2, #2
   118fc:	ldrb	r2, [r2]
   11900:	cmp	r2, #0
   11904:	bne	11b30 <putchar_unlocked@plt+0x99c>
   11908:	orr	r1, r1, r0
   1190c:	tst	r1, #1
   11910:	beq	11b3c <putchar_unlocked@plt+0x9a8>
   11914:	mov	r1, #0
   11918:	cmp	r3, #0
   1191c:	movwlt	r1, #1
   11920:	orr	r1, r1, r0
   11924:	tst	r1, #1
   11928:	beq	11b48 <putchar_unlocked@plt+0x9b4>
   1192c:	movw	r1, #37239	; 0x9177
   11930:	movt	r1, #2
   11934:	ldrb	r1, [r1]
   11938:	mvn	r1, r1
   1193c:	orr	r1, sl, r1
   11940:	tst	r1, #1
   11944:	beq	11b54 <putchar_unlocked@plt+0x9c0>
   11948:	movw	r1, #37236	; 0x9174
   1194c:	movt	r1, #2
   11950:	ldrb	r1, [r1]
   11954:	mvn	r1, r1
   11958:	orr	r1, sl, r1
   1195c:	tst	r1, #1
   11960:	beq	11b60 <putchar_unlocked@plt+0x9cc>
   11964:	movw	r1, #37237	; 0x9175
   11968:	movt	r1, #2
   1196c:	ldrb	r1, [r1]
   11970:	mvn	r1, r1
   11974:	orr	r1, sl, r1
   11978:	tst	r1, #1
   1197c:	beq	11b6c <putchar_unlocked@plt+0x9d8>
   11980:	movw	r1, #37238	; 0x9176
   11984:	movt	r1, #2
   11988:	ldrb	r1, [r1]
   1198c:	mvn	r1, r1
   11990:	orr	r1, sl, r1
   11994:	tst	r1, #1
   11998:	beq	11b78 <putchar_unlocked@plt+0x9e4>
   1199c:	movw	r1, #37240	; 0x9178
   119a0:	movt	r1, #2
   119a4:	ldrb	r1, [r1]
   119a8:	and	r0, r1, r0
   119ac:	tst	r0, #1
   119b0:	bne	11b84 <putchar_unlocked@plt+0x9f0>
   119b4:	add	r8, r4, r6, lsl #2
   119b8:	movw	r0, #37208	; 0x9158
   119bc:	movt	r0, #2
   119c0:	ldr	r0, [r0]
   119c4:	cmp	r0, r6
   119c8:	movweq	r1, #31546	; 0x7b3a
   119cc:	movteq	r1, #1
   119d0:	streq	r1, [r8], #4
   119d4:	add	r6, r4, r0, lsl #2
   119d8:	mov	r9, #1
   119dc:	cmp	r6, r8
   119e0:	bcs	11a6c <putchar_unlocked@plt+0x8d8>
   119e4:	bic	r5, r3, r3, asr #31
   119e8:	mov	r9, #1
   119ec:	and	r7, r7, #1
   119f0:	ldr	r4, [r6]
   119f4:	tst	sl, #1
   119f8:	beq	11a0c <putchar_unlocked@plt+0x878>
   119fc:	mov	r0, r4
   11a00:	bl	11bec <putchar_unlocked@plt+0xa58>
   11a04:	and	r9, r9, r0
   11a08:	b	11a60 <putchar_unlocked@plt+0x8cc>
   11a0c:	mov	r0, r4
   11a10:	ldr	r1, [sp, #24]
   11a14:	add	r2, sp, #31
   11a18:	bl	12478 <putchar_unlocked@plt+0x12e4>
   11a1c:	mov	r1, #0
   11a20:	cmp	r0, #0
   11a24:	beq	11a5c <putchar_unlocked@plt+0x8c8>
   11a28:	movw	r0, #37241	; 0x9179
   11a2c:	movt	r0, #2
   11a30:	ldrb	r0, [r0]
   11a34:	cmp	r0, #0
   11a38:	mov	r0, #10
   11a3c:	movwne	r0, #0
   11a40:	str	r0, [sp]
   11a44:	mov	r0, r4
   11a48:	mov	r1, r5
   11a4c:	ldr	r2, [sp, #24]
   11a50:	mov	r3, r7
   11a54:	bl	125ec <putchar_unlocked@plt+0x1458>
   11a58:	mov	r1, r9
   11a5c:	mov	r9, r1
   11a60:	add	r6, r6, #4
   11a64:	cmp	r6, r8
   11a68:	bcc	119f0 <putchar_unlocked@plt+0x85c>
   11a6c:	movw	r0, #37249	; 0x9181
   11a70:	movt	r0, #2
   11a74:	ldrb	r0, [r0]
   11a78:	cmp	r0, #0
   11a7c:	beq	11a98 <putchar_unlocked@plt+0x904>
   11a80:	movw	r0, #37224	; 0x9168
   11a84:	movt	r0, #2
   11a88:	ldr	r0, [r0]
   11a8c:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   11a90:	cmn	r0, #1
   11a94:	beq	11bb0 <putchar_unlocked@plt+0xa1c>
   11a98:	mov	r0, #1
   11a9c:	bic	r0, r0, r9
   11aa0:	sub	sp, fp, #28
   11aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11aa8:	cmn	r0, #3
   11aac:	bne	11b0c <putchar_unlocked@plt+0x978>
   11ab0:	movw	r0, #37124	; 0x9104
   11ab4:	movt	r0, #2
   11ab8:	ldr	r3, [r0]
   11abc:	movw	r0, #37228	; 0x916c
   11ac0:	movt	r0, #2
   11ac4:	ldr	r0, [r0]
   11ac8:	mov	r1, #0
   11acc:	movw	r2, #29581	; 0x738d
   11ad0:	movt	r2, #1
   11ad4:	movw	r7, #29568	; 0x7380
   11ad8:	movt	r7, #1
   11adc:	movw	r6, #29553	; 0x7371
   11ae0:	movt	r6, #1
   11ae4:	stm	sp, {r6, r7}
   11ae8:	str	r2, [sp, #8]
   11aec:	str	r1, [sp, #12]
   11af0:	movw	r1, #29502	; 0x733e
   11af4:	movt	r1, #1
   11af8:	movw	r2, #29539	; 0x7363
   11afc:	movt	r2, #1
   11b00:	bl	15e40 <putchar_unlocked@plt+0x4cac>
   11b04:	mov	r0, #0
   11b08:	bl	1105c <exit@plt>
   11b0c:	cmn	r0, #2
   11b10:	bne	11b1c <putchar_unlocked@plt+0x988>
   11b14:	mov	r0, #0
   11b18:	bl	11290 <putchar_unlocked@plt+0xfc>
   11b1c:	mov	r0, #1
   11b20:	bl	11290 <putchar_unlocked@plt+0xfc>
   11b24:	movw	r1, #29594	; 0x739a
   11b28:	movt	r1, #1
   11b2c:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b30:	movw	r1, #29629	; 0x73bd
   11b34:	movt	r1, #1
   11b38:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b3c:	movw	r1, #29689	; 0x73f9
   11b40:	movt	r1, #1
   11b44:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b48:	movw	r1, #29746	; 0x7432
   11b4c:	movt	r1, #1
   11b50:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b54:	movw	r1, #29819	; 0x747b
   11b58:	movt	r1, #1
   11b5c:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b60:	movw	r1, #29891	; 0x74c3
   11b64:	movt	r1, #1
   11b68:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b6c:	movw	r1, #29955	; 0x7503
   11b70:	movt	r1, #1
   11b74:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b78:	movw	r1, #30017	; 0x7541
   11b7c:	movt	r1, #1
   11b80:	b	11b8c <putchar_unlocked@plt+0x9f8>
   11b84:	movw	r1, #30080	; 0x7580
   11b88:	movt	r1, #1
   11b8c:	mov	r0, #0
   11b90:	mov	r2, #5
   11b94:	bl	10f84 <dcgettext@plt>
   11b98:	mov	r2, r0
   11b9c:	mov	r0, #0
   11ba0:	mov	r1, #0
   11ba4:	bl	10ffc <error@plt>
   11ba8:	mov	r0, #1
   11bac:	bl	11290 <putchar_unlocked@plt+0xfc>
   11bb0:	bl	11080 <__errno_location@plt>
   11bb4:	ldr	r4, [r0]
   11bb8:	movw	r1, #30144	; 0x75c0
   11bbc:	movt	r1, #1
   11bc0:	mov	r0, #0
   11bc4:	mov	r2, #5
   11bc8:	bl	10f84 <dcgettext@plt>
   11bcc:	mov	r2, r0
   11bd0:	mov	r0, #1
   11bd4:	mov	r1, r4
   11bd8:	bl	10ffc <error@plt>
   11bdc:	add	r0, r0, #3
   11be0:	and	r1, r0, #3
   11be4:	sub	r0, r0, r1
   11be8:	bx	lr
   11bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf0:	add	fp, sp, #28
   11bf4:	sub	sp, sp, #124	; 0x7c
   11bf8:	mov	sl, r0
   11bfc:	sub	r0, fp, #48	; 0x30
   11c00:	bl	11bdc <putchar_unlocked@plt+0xa48>
   11c04:	str	r0, [sp, #64]	; 0x40
   11c08:	movw	r1, #31546	; 0x7b3a
   11c0c:	movt	r1, #1
   11c10:	mov	r0, sl
   11c14:	bl	10f24 <strcmp@plt>
   11c18:	str	r0, [sp, #60]	; 0x3c
   11c1c:	cmp	r0, #0
   11c20:	beq	11c44 <putchar_unlocked@plt+0xab0>
   11c24:	movw	r1, #31073	; 0x7961
   11c28:	movt	r1, #1
   11c2c:	mov	r0, sl
   11c30:	bl	13cac <putchar_unlocked@plt+0x2b18>
   11c34:	cmp	r0, #0
   11c38:	beq	1237c <putchar_unlocked@plt+0x11e8>
   11c3c:	mov	r9, r0
   11c40:	b	11c78 <putchar_unlocked@plt+0xae4>
   11c44:	movw	r0, #37249	; 0x9181
   11c48:	movt	r0, #2
   11c4c:	mov	r1, #1
   11c50:	strb	r1, [r0]
   11c54:	movw	r1, #30144	; 0x75c0
   11c58:	movt	r1, #1
   11c5c:	mov	r0, #0
   11c60:	mov	r2, #5
   11c64:	bl	10f84 <dcgettext@plt>
   11c68:	mov	sl, r0
   11c6c:	movw	r0, #37224	; 0x9168
   11c70:	movt	r0, #2
   11c74:	ldr	r9, [r0]
   11c78:	mov	r0, #0
   11c7c:	str	r0, [fp, #-56]	; 0xffffffc8
   11c80:	str	r0, [fp, #-52]	; 0xffffffcc
   11c84:	sub	r6, fp, #52	; 0x34
   11c88:	sub	r4, fp, #56	; 0x38
   11c8c:	mov	r0, #0
   11c90:	str	r0, [sp, #36]	; 0x24
   11c94:	mov	r8, #0
   11c98:	mov	r7, #0
   11c9c:	mov	r0, #0
   11ca0:	str	r0, [sp, #48]	; 0x30
   11ca4:	mov	r0, #0
   11ca8:	str	r0, [sp, #56]	; 0x38
   11cac:	mov	r0, #0
   11cb0:	str	r0, [sp, #52]	; 0x34
   11cb4:	mov	r0, #0
   11cb8:	str	r0, [sp, #44]	; 0x2c
   11cbc:	mov	r0, #0
   11cc0:	str	r0, [sp, #40]	; 0x28
   11cc4:	mov	r0, #0
   11cc8:	str	r0, [sp, #72]	; 0x48
   11ccc:	mov	r5, #0
   11cd0:	mov	r0, #0
   11cd4:	str	r0, [sp, #68]	; 0x44
   11cd8:	mov	r0, #0
   11cdc:	str	r0, [sp, #76]	; 0x4c
   11ce0:	adds	r8, r8, #1
   11ce4:	adc	r7, r7, #0
   11ce8:	orrs	r0, r8, r7
   11cec:	beq	1243c <putchar_unlocked@plt+0x12a8>
   11cf0:	mov	r0, r6
   11cf4:	mov	r1, r4
   11cf8:	mov	r2, r9
   11cfc:	bl	1114c <getline@plt>
   11d00:	cmp	r0, #1
   11d04:	blt	1211c <putchar_unlocked@plt+0xf88>
   11d08:	mov	r1, r0
   11d0c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11d10:	ldrb	r2, [r0]
   11d14:	cmp	r2, #35	; 0x23
   11d18:	beq	1209c <putchar_unlocked@plt+0xf08>
   11d1c:	sub	r2, r1, #1
   11d20:	ldrb	r3, [r0, r2]
   11d24:	cmp	r3, #10
   11d28:	moveq	r1, r2
   11d2c:	sub	r2, r1, #1
   11d30:	cmp	r1, #0
   11d34:	mov	r3, r1
   11d38:	movgt	r3, r2
   11d3c:	ldrb	r3, [r0, r3]
   11d40:	cmp	r3, #13
   11d44:	moveq	r1, r2
   11d48:	cmp	r1, #0
   11d4c:	beq	1209c <putchar_unlocked@plt+0xf08>
   11d50:	mov	r2, #0
   11d54:	strb	r2, [r0, r1]
   11d58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11d5c:	sub	r2, fp, #60	; 0x3c
   11d60:	str	r2, [sp]
   11d64:	sub	r2, fp, #68	; 0x44
   11d68:	sub	r3, fp, #64	; 0x40
   11d6c:	bl	12738 <putchar_unlocked@plt+0x15a4>
   11d70:	cmp	r0, #0
   11d74:	beq	11ee0 <putchar_unlocked@plt+0xd4c>
   11d78:	ldr	r0, [sp, #60]	; 0x3c
   11d7c:	cmp	r0, #0
   11d80:	bne	11d9c <putchar_unlocked@plt+0xc08>
   11d84:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11d88:	movw	r1, #31546	; 0x7b3a
   11d8c:	movt	r1, #1
   11d90:	bl	10f24 <strcmp@plt>
   11d94:	cmp	r0, #0
   11d98:	beq	11ee0 <putchar_unlocked@plt+0xd4c>
   11d9c:	movw	r0, #37236	; 0x9174
   11da0:	movt	r0, #2
   11da4:	ldrb	r0, [r0]
   11da8:	mov	r6, #0
   11dac:	cmp	r0, #0
   11db0:	bne	11dcc <putchar_unlocked@plt+0xc38>
   11db4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11db8:	mov	r1, #10
   11dbc:	bl	11074 <strchr@plt>
   11dc0:	mov	r6, r0
   11dc4:	cmp	r0, #0
   11dc8:	movwne	r6, #1
   11dcc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11dd0:	str	r0, [sp, #48]	; 0x30
   11dd4:	ldr	r1, [sp, #64]	; 0x40
   11dd8:	sub	r2, fp, #69	; 0x45
   11ddc:	bl	12478 <putchar_unlocked@plt+0x12e4>
   11de0:	cmp	r0, #0
   11de4:	beq	11f7c <putchar_unlocked@plt+0xde8>
   11de8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   11dec:	cmp	r0, #0
   11df0:	movwne	r0, #37239	; 0x9177
   11df4:	movtne	r0, #2
   11df8:	ldrbne	r0, [r0]
   11dfc:	cmpne	r0, #0
   11e00:	bne	11fec <putchar_unlocked@plt+0xe58>
   11e04:	str	r6, [sp, #24]
   11e08:	str	r5, [sp, #28]
   11e0c:	str	sl, [sp, #32]
   11e10:	movw	r0, #37248	; 0x9180
   11e14:	movt	r0, #2
   11e18:	ldrb	sl, [r0]
   11e1c:	cmp	sl, #0
   11e20:	movwne	sl, #16
   11e24:	mov	r4, #0
   11e28:	beq	11e84 <putchar_unlocked@plt+0xcf0>
   11e2c:	bl	1102c <__ctype_tolower_loc@plt>
   11e30:	movw	r6, #31360	; 0x7a80
   11e34:	movt	r6, #1
   11e38:	ldr	r0, [r0]
   11e3c:	mov	r4, #0
   11e40:	ldr	r1, [fp, #-68]	; 0xffffffbc
   11e44:	ldr	r2, [sp, #64]	; 0x40
   11e48:	ldrb	r2, [r2, r4]
   11e4c:	ldrb	r3, [r6, r2, lsr #4]
   11e50:	ldrb	r5, [r1, r4, lsl #1]
   11e54:	ldr	r5, [r0, r5, lsl #2]
   11e58:	cmp	r5, r3
   11e5c:	andeq	r2, r2, #15
   11e60:	ldrbeq	r2, [r6, r2]
   11e64:	addeq	r3, r1, r4, lsl #1
   11e68:	ldrbeq	r3, [r3, #1]
   11e6c:	ldreq	r3, [r0, r3, lsl #2]
   11e70:	cmpeq	r3, r2
   11e74:	bne	11e84 <putchar_unlocked@plt+0xcf0>
   11e78:	add	r4, r4, #1
   11e7c:	cmp	r4, sl
   11e80:	bcc	11e44 <putchar_unlocked@plt+0xcb0>
   11e84:	ldr	r0, [sp, #44]	; 0x2c
   11e88:	adds	r3, r0, #1
   11e8c:	ldr	r1, [sp, #40]	; 0x28
   11e90:	adc	r6, r1, #0
   11e94:	cmp	r4, sl
   11e98:	movne	r0, r3
   11e9c:	movne	r1, r6
   11ea0:	movw	r2, #37236	; 0x9174
   11ea4:	movt	r2, #2
   11ea8:	ldrb	r2, [r2]
   11eac:	cmp	r2, #0
   11eb0:	beq	11ff4 <putchar_unlocked@plt+0xe60>
   11eb4:	sub	r2, r4, sl
   11eb8:	clz	r2, r2
   11ebc:	lsr	r2, r2, #5
   11ec0:	ldr	r3, [sp, #36]	; 0x24
   11ec4:	orr	r3, r3, r2
   11ec8:	str	r3, [sp, #36]	; 0x24
   11ecc:	str	r0, [sp, #44]	; 0x2c
   11ed0:	str	r1, [sp, #40]	; 0x28
   11ed4:	ldr	sl, [sp, #32]
   11ed8:	ldr	r5, [sp, #28]
   11edc:	b	1208c <putchar_unlocked@plt+0xef8>
   11ee0:	ldr	r0, [sp, #68]	; 0x44
   11ee4:	adds	r0, r0, #1
   11ee8:	str	r0, [sp, #68]	; 0x44
   11eec:	ldr	r0, [sp, #76]	; 0x4c
   11ef0:	adc	r0, r0, #0
   11ef4:	str	r0, [sp, #76]	; 0x4c
   11ef8:	movw	r0, #37237	; 0x9175
   11efc:	movt	r0, #2
   11f00:	ldrb	r0, [r0]
   11f04:	cmp	r0, #1
   11f08:	bne	11f68 <putchar_unlocked@plt+0xdd4>
   11f0c:	mov	r0, #0
   11f10:	movw	r1, #30634	; 0x77aa
   11f14:	movt	r1, #1
   11f18:	mov	r2, #5
   11f1c:	bl	10f84 <dcgettext@plt>
   11f20:	mov	r6, r5
   11f24:	mov	r5, r0
   11f28:	mov	r0, #0
   11f2c:	mov	r1, #3
   11f30:	mov	r2, sl
   11f34:	bl	15524 <putchar_unlocked@plt+0x4390>
   11f38:	mov	r3, r0
   11f3c:	str	r8, [sp]
   11f40:	str	r7, [sp, #4]
   11f44:	movw	r0, #28227	; 0x6e43
   11f48:	movt	r0, #1
   11f4c:	str	r0, [sp, #8]
   11f50:	mov	r0, #0
   11f54:	mov	r1, #0
   11f58:	mov	r2, r5
   11f5c:	mov	r5, r6
   11f60:	sub	r6, fp, #52	; 0x34
   11f64:	bl	10ffc <error@plt>
   11f68:	ldr	r0, [sp, #72]	; 0x48
   11f6c:	adds	r0, r0, #1
   11f70:	str	r0, [sp, #72]	; 0x48
   11f74:	adc	r5, r5, #0
   11f78:	b	1209c <putchar_unlocked@plt+0xf08>
   11f7c:	ldr	r0, [sp, #56]	; 0x38
   11f80:	adds	r0, r0, #1
   11f84:	str	r0, [sp, #56]	; 0x38
   11f88:	ldr	r0, [sp, #52]	; 0x34
   11f8c:	adc	r0, r0, #0
   11f90:	str	r0, [sp, #52]	; 0x34
   11f94:	movw	r0, #37236	; 0x9174
   11f98:	movt	r0, #2
   11f9c:	ldrb	r0, [r0]
   11fa0:	cmp	r0, #0
   11fa4:	bne	11fec <putchar_unlocked@plt+0xe58>
   11fa8:	cmp	r6, #0
   11fac:	beq	11fb8 <putchar_unlocked@plt+0xe24>
   11fb0:	mov	r0, #92	; 0x5c
   11fb4:	bl	11194 <putchar_unlocked@plt>
   11fb8:	ldr	r0, [sp, #48]	; 0x30
   11fbc:	mov	r1, r6
   11fc0:	bl	12914 <putchar_unlocked@plt+0x1780>
   11fc4:	mov	r0, #0
   11fc8:	movw	r1, #30682	; 0x77da
   11fcc:	movt	r1, #1
   11fd0:	mov	r2, #5
   11fd4:	bl	10f84 <dcgettext@plt>
   11fd8:	mov	r2, r0
   11fdc:	mov	r0, #1
   11fe0:	movw	r1, #32353	; 0x7e61
   11fe4:	movt	r1, #1
   11fe8:	bl	110b0 <__printf_chk@plt>
   11fec:	sub	r6, fp, #52	; 0x34
   11ff0:	b	12094 <putchar_unlocked@plt+0xf00>
   11ff4:	cmp	r4, sl
   11ff8:	ldr	r5, [sp, #28]
   11ffc:	bne	12020 <putchar_unlocked@plt+0xe8c>
   12000:	movw	r0, #37238	; 0x9176
   12004:	movt	r0, #2
   12008:	ldrb	r0, [r0]
   1200c:	cmp	r0, #0
   12010:	beq	12020 <putchar_unlocked@plt+0xe8c>
   12014:	mov	r0, #1
   12018:	str	r0, [sp, #36]	; 0x24
   1201c:	b	12088 <putchar_unlocked@plt+0xef4>
   12020:	str	r6, [sp, #16]
   12024:	str	r3, [sp, #20]
   12028:	ldr	r6, [sp, #24]
   1202c:	cmp	r6, #0
   12030:	beq	1203c <putchar_unlocked@plt+0xea8>
   12034:	mov	r0, #92	; 0x5c
   12038:	bl	11194 <putchar_unlocked@plt>
   1203c:	ldr	r0, [sp, #48]	; 0x30
   12040:	mov	r1, r6
   12044:	bl	12914 <putchar_unlocked@plt+0x1780>
   12048:	cmp	r4, sl
   1204c:	beq	120c0 <putchar_unlocked@plt+0xf2c>
   12050:	mov	r0, #0
   12054:	movw	r1, #30702	; 0x77ee
   12058:	movt	r1, #1
   1205c:	mov	r2, #5
   12060:	bl	10f84 <dcgettext@plt>
   12064:	mov	r2, r0
   12068:	mov	r0, #1
   1206c:	movw	r1, #32353	; 0x7e61
   12070:	movt	r1, #1
   12074:	bl	110b0 <__printf_chk@plt>
   12078:	ldr	r0, [sp, #20]
   1207c:	str	r0, [sp, #44]	; 0x2c
   12080:	ldr	r0, [sp, #16]
   12084:	str	r0, [sp, #40]	; 0x28
   12088:	ldr	sl, [sp, #32]
   1208c:	sub	r6, fp, #52	; 0x34
   12090:	sub	r4, fp, #56	; 0x38
   12094:	mov	r0, #1
   12098:	str	r0, [sp, #48]	; 0x30
   1209c:	mov	r0, r9
   120a0:	bl	11170 <feof_unlocked@plt>
   120a4:	cmp	r0, #0
   120a8:	bne	1211c <putchar_unlocked@plt+0xf88>
   120ac:	mov	r0, r9
   120b0:	bl	10fe4 <ferror_unlocked@plt>
   120b4:	cmp	r0, #0
   120b8:	beq	11ce0 <putchar_unlocked@plt+0xb4c>
   120bc:	b	1211c <putchar_unlocked@plt+0xf88>
   120c0:	movw	r0, #37238	; 0x9176
   120c4:	movt	r0, #2
   120c8:	ldrb	r0, [r0]
   120cc:	mov	r1, #1
   120d0:	str	r1, [sp, #36]	; 0x24
   120d4:	cmp	r0, #0
   120d8:	ldr	sl, [sp, #32]
   120dc:	sub	r6, fp, #52	; 0x34
   120e0:	sub	r4, fp, #56	; 0x38
   120e4:	bne	12094 <putchar_unlocked@plt+0xf00>
   120e8:	mov	r0, #0
   120ec:	movw	r1, #30709	; 0x77f5
   120f0:	movt	r1, #1
   120f4:	mov	r2, #5
   120f8:	bl	10f84 <dcgettext@plt>
   120fc:	mov	r2, r0
   12100:	mov	r0, #1
   12104:	str	r0, [sp, #36]	; 0x24
   12108:	mov	r0, #1
   1210c:	movw	r1, #32353	; 0x7e61
   12110:	movt	r1, #1
   12114:	bl	110b0 <__printf_chk@plt>
   12118:	b	12094 <putchar_unlocked@plt+0xf00>
   1211c:	mov	r8, r5
   12120:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12124:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   12128:	mov	r0, r9
   1212c:	bl	10fe4 <ferror_unlocked@plt>
   12130:	mov	r5, r0
   12134:	mov	r4, #0
   12138:	cmp	r0, #0
   1213c:	mvneq	r4, #0
   12140:	ldr	r0, [sp, #60]	; 0x3c
   12144:	cmp	r0, #0
   12148:	beq	12190 <putchar_unlocked@plt+0xffc>
   1214c:	mov	r0, r9
   12150:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   12154:	cmp	r5, #0
   12158:	bne	12198 <putchar_unlocked@plt+0x1004>
   1215c:	cmp	r0, #0
   12160:	ldr	r6, [sp, #56]	; 0x38
   12164:	ldr	r7, [sp, #52]	; 0x34
   12168:	ldr	r5, [sp, #76]	; 0x4c
   1216c:	beq	12178 <putchar_unlocked@plt+0xfe4>
   12170:	bl	11080 <__errno_location@plt>
   12174:	ldr	r4, [r0]
   12178:	cmp	r4, #0
   1217c:	blt	121ac <putchar_unlocked@plt+0x1018>
   12180:	beq	123b0 <putchar_unlocked@plt+0x121c>
   12184:	movw	r5, #31407	; 0x7aaf
   12188:	movt	r5, #1
   1218c:	b	123c8 <putchar_unlocked@plt+0x1234>
   12190:	mov	r0, r9
   12194:	bl	1111c <clearerr_unlocked@plt>
   12198:	ldr	r6, [sp, #56]	; 0x38
   1219c:	ldr	r7, [sp, #52]	; 0x34
   121a0:	ldr	r5, [sp, #76]	; 0x4c
   121a4:	cmp	r4, #0
   121a8:	bge	12180 <putchar_unlocked@plt+0xfec>
   121ac:	ldr	r0, [sp, #48]	; 0x30
   121b0:	tst	r0, #1
   121b4:	beq	123f0 <putchar_unlocked@plt+0x125c>
   121b8:	movw	r0, #37236	; 0x9174
   121bc:	movt	r0, #2
   121c0:	ldrb	r0, [r0]
   121c4:	cmp	r0, #0
   121c8:	ldr	r4, [sp, #72]	; 0x48
   121cc:	bne	12328 <putchar_unlocked@plt+0x1194>
   121d0:	str	r4, [sp, #72]	; 0x48
   121d4:	ldr	r4, [sp, #68]	; 0x44
   121d8:	orrs	r0, r4, r5
   121dc:	beq	12224 <putchar_unlocked@plt+0x1090>
   121e0:	mov	r0, r4
   121e4:	mov	r1, r5
   121e8:	bl	129c8 <putchar_unlocked@plt+0x1834>
   121ec:	mov	r3, r0
   121f0:	mov	r0, #5
   121f4:	str	r0, [sp]
   121f8:	movw	r1, #30774	; 0x7836
   121fc:	movt	r1, #1
   12200:	movw	r2, #30817	; 0x7861
   12204:	movt	r2, #1
   12208:	mov	r0, #0
   1220c:	bl	11188 <dcngettext@plt>
   12210:	mov	r2, r0
   12214:	stm	sp, {r4, r5}
   12218:	mov	r0, #0
   1221c:	mov	r1, #0
   12220:	bl	10ffc <error@plt>
   12224:	orrs	r0, r6, r7
   12228:	beq	12270 <putchar_unlocked@plt+0x10dc>
   1222c:	mov	r0, r6
   12230:	mov	r1, r7
   12234:	bl	129c8 <putchar_unlocked@plt+0x1834>
   12238:	mov	r3, r0
   1223c:	mov	r0, #5
   12240:	str	r0, [sp]
   12244:	movw	r1, #30862	; 0x788e
   12248:	movt	r1, #1
   1224c:	movw	r2, #30906	; 0x78ba
   12250:	movt	r2, #1
   12254:	mov	r0, #0
   12258:	bl	11188 <dcngettext@plt>
   1225c:	mov	r2, r0
   12260:	stm	sp, {r6, r7}
   12264:	mov	r0, #0
   12268:	mov	r1, #0
   1226c:	bl	10ffc <error@plt>
   12270:	ldr	r4, [sp, #44]	; 0x2c
   12274:	ldr	r9, [sp, #40]	; 0x28
   12278:	orrs	r0, r4, r9
   1227c:	beq	122c4 <putchar_unlocked@plt+0x1130>
   12280:	mov	r0, r4
   12284:	mov	r1, r9
   12288:	bl	129c8 <putchar_unlocked@plt+0x1834>
   1228c:	mov	r3, r0
   12290:	mov	r0, #5
   12294:	str	r0, [sp]
   12298:	movw	r1, #30951	; 0x78e7
   1229c:	movt	r1, #1
   122a0:	movw	r2, #30997	; 0x7915
   122a4:	movt	r2, #1
   122a8:	mov	r0, #0
   122ac:	bl	11188 <dcngettext@plt>
   122b0:	mov	r2, r0
   122b4:	stm	sp, {r4, r9}
   122b8:	mov	r0, #0
   122bc:	mov	r1, #0
   122c0:	bl	10ffc <error@plt>
   122c4:	movw	r0, #37239	; 0x9177
   122c8:	movt	r0, #2
   122cc:	ldrb	r0, [r0]
   122d0:	mvn	r0, r0
   122d4:	ldr	r1, [sp, #36]	; 0x24
   122d8:	orr	r0, r1, r0
   122dc:	tst	r0, #1
   122e0:	ldr	r4, [sp, #72]	; 0x48
   122e4:	bne	12328 <putchar_unlocked@plt+0x1194>
   122e8:	movw	r1, #31044	; 0x7944
   122ec:	movt	r1, #1
   122f0:	mov	r0, #0
   122f4:	mov	r2, #5
   122f8:	bl	10f84 <dcgettext@plt>
   122fc:	mov	r4, r0
   12300:	mov	r0, #0
   12304:	mov	r1, #3
   12308:	mov	r2, sl
   1230c:	bl	15524 <putchar_unlocked@plt+0x4390>
   12310:	mov	r3, r0
   12314:	mov	r0, #0
   12318:	mov	r1, #0
   1231c:	mov	r2, r4
   12320:	ldr	r4, [sp, #72]	; 0x48
   12324:	bl	10ffc <error@plt>
   12328:	ldr	r0, [sp, #44]	; 0x2c
   1232c:	orr	r0, r6, r0
   12330:	ldr	r1, [sp, #40]	; 0x28
   12334:	orr	r1, r7, r1
   12338:	orrs	r0, r0, r1
   1233c:	movwne	r0, #1
   12340:	ldr	r1, [sp, #36]	; 0x24
   12344:	mvn	r1, r1
   12348:	orr	r0, r1, r0
   1234c:	mov	r6, #0
   12350:	tst	r0, #1
   12354:	bne	12430 <putchar_unlocked@plt+0x129c>
   12358:	orr	r0, r4, r8
   1235c:	clz	r0, r0
   12360:	lsr	r0, r0, #5
   12364:	movw	r1, #37240	; 0x9178
   12368:	movt	r1, #2
   1236c:	ldrb	r1, [r1]
   12370:	eor	r1, r1, #1
   12374:	orr	r6, r0, r1
   12378:	b	12430 <putchar_unlocked@plt+0x129c>
   1237c:	bl	11080 <__errno_location@plt>
   12380:	ldr	r4, [r0]
   12384:	mov	r6, #0
   12388:	mov	r0, #0
   1238c:	mov	r1, #3
   12390:	mov	r2, sl
   12394:	bl	15524 <putchar_unlocked@plt+0x4390>
   12398:	mov	r3, r0
   1239c:	movw	r2, #31407	; 0x7aaf
   123a0:	movt	r2, #1
   123a4:	mov	r0, #0
   123a8:	mov	r1, r4
   123ac:	b	1242c <putchar_unlocked@plt+0x1298>
   123b0:	movw	r1, #30712	; 0x77f8
   123b4:	movt	r1, #1
   123b8:	mov	r0, #0
   123bc:	mov	r2, #5
   123c0:	bl	10f84 <dcgettext@plt>
   123c4:	mov	r5, r0
   123c8:	mov	r6, #0
   123cc:	mov	r0, #0
   123d0:	mov	r1, #3
   123d4:	mov	r2, sl
   123d8:	bl	15524 <putchar_unlocked@plt+0x4390>
   123dc:	mov	r3, r0
   123e0:	mov	r0, #0
   123e4:	mov	r1, r4
   123e8:	mov	r2, r5
   123ec:	b	1242c <putchar_unlocked@plt+0x1298>
   123f0:	mov	r6, #0
   123f4:	movw	r1, #30727	; 0x7807
   123f8:	movt	r1, #1
   123fc:	mov	r0, #0
   12400:	mov	r2, #5
   12404:	bl	10f84 <dcgettext@plt>
   12408:	mov	r4, r0
   1240c:	mov	r0, #0
   12410:	mov	r1, #3
   12414:	mov	r2, sl
   12418:	bl	15524 <putchar_unlocked@plt+0x4390>
   1241c:	mov	r3, r0
   12420:	mov	r0, #0
   12424:	mov	r1, #0
   12428:	mov	r2, r4
   1242c:	bl	10ffc <error@plt>
   12430:	and	r0, r6, #1
   12434:	sub	sp, fp, #28
   12438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1243c:	movw	r1, #30606	; 0x778e
   12440:	movt	r1, #1
   12444:	mov	r0, #0
   12448:	mov	r2, #5
   1244c:	bl	10f84 <dcgettext@plt>
   12450:	mov	r4, r0
   12454:	mov	r0, #0
   12458:	mov	r1, #3
   1245c:	mov	r2, sl
   12460:	bl	15524 <putchar_unlocked@plt+0x4390>
   12464:	mov	r3, r0
   12468:	mov	r0, #1
   1246c:	mov	r1, #0
   12470:	mov	r2, r4
   12474:	bl	10ffc <error@plt>
   12478:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1247c:	add	fp, sp, #24
   12480:	mov	r7, r2
   12484:	mov	r6, r1
   12488:	mov	r8, r0
   1248c:	movw	r1, #31546	; 0x7b3a
   12490:	movt	r1, #1
   12494:	bl	10f24 <strcmp@plt>
   12498:	mov	r5, r0
   1249c:	mov	r0, #0
   124a0:	strb	r0, [r7]
   124a4:	cmp	r5, #0
   124a8:	beq	1252c <putchar_unlocked@plt+0x1398>
   124ac:	movw	r1, #31073	; 0x7961
   124b0:	movt	r1, #1
   124b4:	mov	r0, r8
   124b8:	bl	13cac <putchar_unlocked@plt+0x2b18>
   124bc:	mov	r4, r0
   124c0:	cmp	r0, #0
   124c4:	bne	12548 <putchar_unlocked@plt+0x13b4>
   124c8:	movw	r0, #37239	; 0x9177
   124cc:	movt	r0, #2
   124d0:	ldrb	r0, [r0]
   124d4:	cmp	r0, #1
   124d8:	bne	124f8 <putchar_unlocked@plt+0x1364>
   124dc:	bl	11080 <__errno_location@plt>
   124e0:	ldr	r0, [r0]
   124e4:	cmp	r0, #2
   124e8:	moveq	r4, #1
   124ec:	strbeq	r4, [r7]
   124f0:	moveq	r0, r4
   124f4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   124f8:	bl	11080 <__errno_location@plt>
   124fc:	ldr	r5, [r0]
   12500:	mov	r4, #0
   12504:	mov	r0, #0
   12508:	mov	r1, #3
   1250c:	mov	r2, r8
   12510:	bl	15524 <putchar_unlocked@plt+0x4390>
   12514:	mov	r3, r0
   12518:	movw	r2, #31407	; 0x7aaf
   1251c:	movt	r2, #1
   12520:	mov	r0, #0
   12524:	mov	r1, r5
   12528:	b	125e0 <putchar_unlocked@plt+0x144c>
   1252c:	movw	r0, #37249	; 0x9181
   12530:	movt	r0, #2
   12534:	mov	r1, #1
   12538:	strb	r1, [r0]
   1253c:	movw	r0, #37224	; 0x9168
   12540:	movt	r0, #2
   12544:	ldr	r4, [r0]
   12548:	mov	r0, r4
   1254c:	mov	r1, #2
   12550:	bl	13b68 <putchar_unlocked@plt+0x29d4>
   12554:	mov	r0, r4
   12558:	mov	r1, r6
   1255c:	bl	12cd4 <putchar_unlocked@plt+0x1b40>
   12560:	cmp	r0, #0
   12564:	beq	12574 <putchar_unlocked@plt+0x13e0>
   12568:	bl	11080 <__errno_location@plt>
   1256c:	ldr	r6, [r0]
   12570:	b	12578 <putchar_unlocked@plt+0x13e4>
   12574:	mov	r6, #0
   12578:	mov	r0, r4
   1257c:	cmp	r5, #0
   12580:	beq	125a4 <putchar_unlocked@plt+0x1410>
   12584:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   12588:	cmp	r6, #0
   1258c:	bne	125a8 <putchar_unlocked@plt+0x1414>
   12590:	cmp	r0, #0
   12594:	beq	125a8 <putchar_unlocked@plt+0x1414>
   12598:	bl	11080 <__errno_location@plt>
   1259c:	ldr	r6, [r0]
   125a0:	b	125a8 <putchar_unlocked@plt+0x1414>
   125a4:	bl	1111c <clearerr_unlocked@plt>
   125a8:	cmp	r6, #0
   125ac:	moveq	r4, #1
   125b0:	moveq	r0, r4
   125b4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   125b8:	mov	r4, #0
   125bc:	mov	r0, #0
   125c0:	mov	r1, #3
   125c4:	mov	r2, r8
   125c8:	bl	15524 <putchar_unlocked@plt+0x4390>
   125cc:	mov	r3, r0
   125d0:	movw	r2, #31407	; 0x7aaf
   125d4:	movt	r2, #1
   125d8:	mov	r0, #0
   125dc:	mov	r1, r6
   125e0:	bl	10ffc <error@plt>
   125e4:	mov	r0, r4
   125e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125f0:	add	fp, sp, #28
   125f4:	sub	sp, sp, #12
   125f8:	mov	sl, r3
   125fc:	mov	r6, r2
   12600:	mov	r7, r0
   12604:	mov	r4, #0
   12608:	ldr	r0, [fp, #8]
   1260c:	cmp	r0, #10
   12610:	str	r0, [sp, #8]
   12614:	str	r1, [sp, #4]
   12618:	bne	12664 <putchar_unlocked@plt+0x14d0>
   1261c:	mov	r0, r7
   12620:	mov	r1, #92	; 0x5c
   12624:	bl	11074 <strchr@plt>
   12628:	cmp	r0, #0
   1262c:	bne	12658 <putchar_unlocked@plt+0x14c4>
   12630:	mov	r0, r7
   12634:	mov	r1, #10
   12638:	bl	11074 <strchr@plt>
   1263c:	cmp	r0, #0
   12640:	bne	12658 <putchar_unlocked@plt+0x14c4>
   12644:	mov	r0, r7
   12648:	mov	r1, #13
   1264c:	bl	11074 <strchr@plt>
   12650:	cmp	r0, #0
   12654:	beq	12664 <putchar_unlocked@plt+0x14d0>
   12658:	mov	r0, #92	; 0x5c
   1265c:	bl	11194 <putchar_unlocked@plt>
   12660:	mov	r4, #1
   12664:	cmp	sl, #0
   12668:	beq	126b0 <putchar_unlocked@plt+0x151c>
   1266c:	movw	r5, #37228	; 0x916c
   12670:	movt	r5, #2
   12674:	ldr	r1, [r5]
   12678:	movw	r0, #28227	; 0x6e43
   1267c:	movt	r0, #1
   12680:	bl	10f0c <fputs_unlocked@plt>
   12684:	ldr	r1, [r5]
   12688:	movw	r0, #31078	; 0x7966
   1268c:	movt	r0, #1
   12690:	bl	10f0c <fputs_unlocked@plt>
   12694:	mov	r0, r7
   12698:	mov	r1, r4
   1269c:	bl	12914 <putchar_unlocked@plt+0x1780>
   126a0:	ldr	r1, [r5]
   126a4:	movw	r0, #31081	; 0x7969
   126a8:	movt	r0, #1
   126ac:	bl	10f0c <fputs_unlocked@plt>
   126b0:	movw	r8, #37248	; 0x9180
   126b4:	movt	r8, #2
   126b8:	ldrb	r0, [r8]
   126bc:	cmp	r0, #1
   126c0:	bne	126f8 <putchar_unlocked@plt+0x1564>
   126c4:	mov	r9, #0
   126c8:	movw	r5, #31086	; 0x796e
   126cc:	movt	r5, #1
   126d0:	ldrb	r2, [r6, r9]
   126d4:	mov	r0, #1
   126d8:	mov	r1, r5
   126dc:	bl	110b0 <__printf_chk@plt>
   126e0:	add	r9, r9, #1
   126e4:	ldrb	r0, [r8]
   126e8:	cmp	r0, #0
   126ec:	movwne	r0, #16
   126f0:	cmp	r9, r0
   126f4:	bcc	126d0 <putchar_unlocked@plt+0x153c>
   126f8:	cmp	sl, #0
   126fc:	bne	12728 <putchar_unlocked@plt+0x1594>
   12700:	mov	r0, #32
   12704:	bl	11194 <putchar_unlocked@plt>
   12708:	mov	r0, #42	; 0x2a
   1270c:	ldr	r1, [sp, #4]
   12710:	cmp	r1, #0
   12714:	movweq	r0, #32
   12718:	bl	11194 <putchar_unlocked@plt>
   1271c:	mov	r0, r7
   12720:	mov	r1, r4
   12724:	bl	12914 <putchar_unlocked@plt+0x1780>
   12728:	ldr	r0, [sp, #8]
   1272c:	sub	sp, fp, #28
   12730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12734:	b	11194 <putchar_unlocked@plt>
   12738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1273c:	add	fp, sp, #28
   12740:	sub	sp, sp, #12
   12744:	str	r3, [sp, #8]
   12748:	mov	r5, r2
   1274c:	mov	sl, r1
   12750:	mov	r6, r0
   12754:	mov	r9, #0
   12758:	ldr	r7, [fp, #8]
   1275c:	b	12764 <putchar_unlocked@plt+0x15d0>
   12760:	add	r9, r9, #1
   12764:	ldrb	r0, [r6, r9]
   12768:	cmp	r0, #9
   1276c:	cmpne	r0, #32
   12770:	beq	12760 <putchar_unlocked@plt+0x15cc>
   12774:	cmp	r0, #92	; 0x5c
   12778:	movne	r8, #0
   1277c:	addeq	r9, r9, #1
   12780:	moveq	r8, #1
   12784:	add	r4, r6, r9
   12788:	movw	r1, #28227	; 0x6e43
   1278c:	movt	r1, #1
   12790:	mov	r0, r4
   12794:	mov	r2, #3
   12798:	bl	11158 <strncmp@plt>
   1279c:	cmp	r0, #0
   127a0:	beq	12870 <putchar_unlocked@plt+0x16dc>
   127a4:	sub	r0, sl, r9
   127a8:	movw	r1, #37244	; 0x917c
   127ac:	movt	r1, #2
   127b0:	ldrb	r1, [r1]
   127b4:	ldrb	r2, [r4]
   127b8:	sub	r2, r2, #92	; 0x5c
   127bc:	clz	r2, r2
   127c0:	lsr	r2, r2, #5
   127c4:	bfi	r2, r1, #1, #1
   127c8:	bfi	r2, r1, #5, #1
   127cc:	mov	r7, #0
   127d0:	cmp	r0, r2
   127d4:	bcc	12908 <putchar_unlocked@plt+0x1774>
   127d8:	str	r4, [r5]
   127dc:	movw	r0, #37248	; 0x9180
   127e0:	movt	r0, #2
   127e4:	ldrb	r0, [r0]
   127e8:	cmp	r0, #0
   127ec:	addne	r9, r9, #32
   127f0:	ldrb	r0, [r6, r9]
   127f4:	cmp	r0, #32
   127f8:	cmpne	r0, #9
   127fc:	bne	12908 <putchar_unlocked@plt+0x1774>
   12800:	mov	r7, #0
   12804:	strb	r7, [r6, r9]
   12808:	ldr	r0, [r5]
   1280c:	bl	12abc <putchar_unlocked@plt+0x1928>
   12810:	cmp	r0, #0
   12814:	beq	12908 <putchar_unlocked@plt+0x1774>
   12818:	add	r1, r9, #1
   1281c:	sub	r0, sl, r1
   12820:	cmp	r0, #1
   12824:	beq	128c0 <putchar_unlocked@plt+0x172c>
   12828:	ldrb	r0, [r6, r1]
   1282c:	cmp	r0, #32
   12830:	cmpne	r0, #42	; 0x2a
   12834:	bne	128c0 <putchar_unlocked@plt+0x172c>
   12838:	movw	r2, #37120	; 0x9100
   1283c:	movt	r2, #2
   12840:	ldr	r3, [r2]
   12844:	cmp	r3, #1
   12848:	beq	128dc <putchar_unlocked@plt+0x1748>
   1284c:	mov	r1, #0
   12850:	str	r1, [r2]
   12854:	sub	r0, r0, #42	; 0x2a
   12858:	clz	r0, r0
   1285c:	lsr	r0, r0, #5
   12860:	ldr	r1, [sp, #8]
   12864:	str	r0, [r1]
   12868:	add	r1, r9, #2
   1286c:	b	128dc <putchar_unlocked@plt+0x1748>
   12870:	mov	r3, r7
   12874:	add	r0, r9, #3
   12878:	ldrb	r1, [r6, r0]
   1287c:	cmp	r1, #32
   12880:	addeq	r0, r9, #4
   12884:	ldrb	r1, [r6, r0]
   12888:	mov	r7, #0
   1288c:	cmp	r1, #40	; 0x28
   12890:	bne	12908 <putchar_unlocked@plt+0x1774>
   12894:	mov	r1, #0
   12898:	ldr	r2, [sp, #8]
   1289c:	str	r1, [r2]
   128a0:	str	r8, [sp]
   128a4:	add	r1, r0, #1
   128a8:	add	r0, r6, r1
   128ac:	sub	r1, sl, r1
   128b0:	mov	r2, r5
   128b4:	bl	129f8 <putchar_unlocked@plt+0x1864>
   128b8:	sub	sp, fp, #28
   128bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128c0:	movw	r0, #37120	; 0x9100
   128c4:	movt	r0, #2
   128c8:	ldr	r2, [r0]
   128cc:	cmp	r2, #0
   128d0:	beq	12908 <putchar_unlocked@plt+0x1774>
   128d4:	mov	r2, #1
   128d8:	str	r2, [r0]
   128dc:	add	r0, r6, r1
   128e0:	ldr	r2, [fp, #8]
   128e4:	str	r0, [r2]
   128e8:	mov	r7, #1
   128ec:	cmp	r8, #0
   128f0:	beq	12908 <putchar_unlocked@plt+0x1774>
   128f4:	sub	r1, sl, r1
   128f8:	bl	12b2c <putchar_unlocked@plt+0x1998>
   128fc:	mov	r7, r0
   12900:	cmp	r0, #0
   12904:	movwne	r7, #1
   12908:	mov	r0, r7
   1290c:	sub	sp, fp, #28
   12910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12914:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12918:	add	fp, sp, #24
   1291c:	mov	r4, r0
   12920:	cmp	r1, #0
   12924:	beq	129b0 <putchar_unlocked@plt+0x181c>
   12928:	movw	r5, #37228	; 0x916c
   1292c:	movt	r5, #2
   12930:	movw	r8, #31069	; 0x795d
   12934:	movt	r8, #1
   12938:	movw	r6, #31072	; 0x7960
   1293c:	movt	r6, #1
   12940:	movw	r7, #31075	; 0x7963
   12944:	movt	r7, #1
   12948:	b	12954 <putchar_unlocked@plt+0x17c0>
   1294c:	bl	10f0c <fputs_unlocked@plt>
   12950:	add	r4, r4, #1
   12954:	ldrb	r0, [r4]
   12958:	cmp	r0, #12
   1295c:	ble	1297c <putchar_unlocked@plt+0x17e8>
   12960:	cmp	r0, #13
   12964:	beq	12990 <putchar_unlocked@plt+0x17fc>
   12968:	cmp	r0, #92	; 0x5c
   1296c:	bne	129a4 <putchar_unlocked@plt+0x1810>
   12970:	ldr	r1, [r5]
   12974:	mov	r0, r7
   12978:	b	1294c <putchar_unlocked@plt+0x17b8>
   1297c:	cmp	r0, #10
   12980:	bne	1299c <putchar_unlocked@plt+0x1808>
   12984:	ldr	r1, [r5]
   12988:	mov	r0, r8
   1298c:	b	1294c <putchar_unlocked@plt+0x17b8>
   12990:	ldr	r1, [r5]
   12994:	mov	r0, r6
   12998:	b	1294c <putchar_unlocked@plt+0x17b8>
   1299c:	cmp	r0, #0
   129a0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   129a4:	bl	11194 <putchar_unlocked@plt>
   129a8:	add	r4, r4, #1
   129ac:	b	12954 <putchar_unlocked@plt+0x17c0>
   129b0:	movw	r0, #37228	; 0x916c
   129b4:	movt	r0, #2
   129b8:	ldr	r1, [r0]
   129bc:	mov	r0, r4
   129c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   129c4:	b	10f0c <fputs_unlocked@plt>
   129c8:	cmp	r1, #0
   129cc:	bxeq	lr
   129d0:	push	{r4, sl, fp, lr}
   129d4:	add	fp, sp, #8
   129d8:	movw	r4, #16960	; 0x4240
   129dc:	movt	r4, #15
   129e0:	mov	r2, r4
   129e4:	mov	r3, #0
   129e8:	bl	16bd4 <putchar_unlocked@plt+0x5a40>
   129ec:	add	r0, r2, r4
   129f0:	pop	{r4, sl, fp, lr}
   129f4:	bx	lr
   129f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   129fc:	add	fp, sp, #24
   12a00:	cmp	r1, #0
   12a04:	beq	12a94 <putchar_unlocked@plt+0x1900>
   12a08:	mov	r8, r2
   12a0c:	ldr	ip, [fp, #8]
   12a10:	mov	r4, #1
   12a14:	mov	r7, r0
   12a18:	mov	r6, r7
   12a1c:	mov	r5, r4
   12a20:	cmp	r1, r4
   12a24:	addne	r7, r6, r1
   12a28:	ldrbne	r2, [r7, #-1]
   12a2c:	addne	r4, r5, #1
   12a30:	subne	r7, r6, #1
   12a34:	cmpne	r2, #41	; 0x29
   12a38:	bne	12a18 <putchar_unlocked@plt+0x1884>
   12a3c:	add	r6, r6, r1
   12a40:	ldrb	r2, [r6, #-1]
   12a44:	cmp	r2, #41	; 0x29
   12a48:	bne	12a94 <putchar_unlocked@plt+0x1900>
   12a4c:	str	r0, [r3]
   12a50:	cmp	ip, #0
   12a54:	beq	12a68 <putchar_unlocked@plt+0x18d4>
   12a58:	sub	r1, r1, r5
   12a5c:	bl	12b2c <putchar_unlocked@plt+0x1998>
   12a60:	cmp	r0, #0
   12a64:	beq	12a94 <putchar_unlocked@plt+0x1900>
   12a68:	add	r0, r6, #1
   12a6c:	mov	r1, #0
   12a70:	strb	r1, [r6, #-1]
   12a74:	b	12a7c <putchar_unlocked@plt+0x18e8>
   12a78:	add	r0, r0, #1
   12a7c:	ldrb	r1, [r0, #-1]
   12a80:	cmp	r1, #9
   12a84:	cmpne	r1, #32
   12a88:	beq	12a78 <putchar_unlocked@plt+0x18e4>
   12a8c:	cmp	r1, #61	; 0x3d
   12a90:	beq	12aa0 <putchar_unlocked@plt+0x190c>
   12a94:	mov	r0, #0
   12a98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a9c:	add	r0, r0, #1
   12aa0:	ldrb	r1, [r0]
   12aa4:	cmp	r1, #32
   12aa8:	cmpne	r1, #9
   12aac:	beq	12a9c <putchar_unlocked@plt+0x1908>
   12ab0:	str	r0, [r8]
   12ab4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ab8:	b	12abc <putchar_unlocked@plt+0x1928>
   12abc:	push	{r4, r5, fp, lr}
   12ac0:	add	fp, sp, #8
   12ac4:	mov	r4, r0
   12ac8:	movw	r5, #37248	; 0x9180
   12acc:	movt	r5, #2
   12ad0:	ldrb	r0, [r5]
   12ad4:	cmp	r0, #1
   12ad8:	bne	12b1c <putchar_unlocked@plt+0x1988>
   12adc:	bl	11050 <__ctype_b_loc@plt>
   12ae0:	ldr	r1, [r0]
   12ae4:	ldrb	r2, [r5]
   12ae8:	cmp	r2, #0
   12aec:	movwne	r2, #32
   12af0:	mov	r0, #0
   12af4:	mov	r3, #0
   12af8:	ldrb	r5, [r4, r3]
   12afc:	add	r5, r1, r5, lsl #1
   12b00:	ldrb	r5, [r5, #1]
   12b04:	tst	r5, #16
   12b08:	popeq	{r4, r5, fp, pc}
   12b0c:	add	r3, r3, #1
   12b10:	cmp	r3, r2
   12b14:	bcc	12af8 <putchar_unlocked@plt+0x1964>
   12b18:	add	r4, r4, r3
   12b1c:	ldrb	r0, [r4]
   12b20:	clz	r0, r0
   12b24:	lsr	r0, r0, #5
   12b28:	pop	{r4, r5, fp, pc}
   12b2c:	push	{r4, sl, fp, lr}
   12b30:	add	fp, sp, #8
   12b34:	cmp	r1, #0
   12b38:	mov	lr, r0
   12b3c:	beq	12bb0 <putchar_unlocked@plt+0x1a1c>
   12b40:	sub	ip, r1, #1
   12b44:	mov	r3, #0
   12b48:	mov	lr, r0
   12b4c:	ldrb	r2, [r0, r3]
   12b50:	cmp	r2, #92	; 0x5c
   12b54:	beq	12b68 <putchar_unlocked@plt+0x19d4>
   12b58:	cmp	r2, #0
   12b5c:	moveq	r0, #0
   12b60:	popeq	{r4, sl, fp, pc}
   12b64:	b	12ba0 <putchar_unlocked@plt+0x1a0c>
   12b68:	cmp	r3, ip
   12b6c:	beq	12bc4 <putchar_unlocked@plt+0x1a30>
   12b70:	add	r3, r3, #1
   12b74:	ldrb	r4, [r0, r3]
   12b78:	cmp	r4, #92	; 0x5c
   12b7c:	beq	12b9c <putchar_unlocked@plt+0x1a08>
   12b80:	mov	r2, #10
   12b84:	cmp	r4, #110	; 0x6e
   12b88:	beq	12ba0 <putchar_unlocked@plt+0x1a0c>
   12b8c:	cmp	r4, #114	; 0x72
   12b90:	bne	12bc4 <putchar_unlocked@plt+0x1a30>
   12b94:	mov	r2, #13
   12b98:	b	12ba0 <putchar_unlocked@plt+0x1a0c>
   12b9c:	mov	r2, #92	; 0x5c
   12ba0:	strb	r2, [lr], #1
   12ba4:	add	r3, r3, #1
   12ba8:	cmp	r3, r1
   12bac:	bcc	12b4c <putchar_unlocked@plt+0x19b8>
   12bb0:	add	r1, r0, r1
   12bb4:	cmp	lr, r1
   12bb8:	movcc	r1, #0
   12bbc:	strbcc	r1, [lr]
   12bc0:	pop	{r4, sl, fp, pc}
   12bc4:	mov	r0, #0
   12bc8:	pop	{r4, sl, fp, pc}
   12bcc:	movw	r1, #37252	; 0x9184
   12bd0:	movt	r1, #2
   12bd4:	str	r0, [r1]
   12bd8:	bx	lr
   12bdc:	movw	r1, #37256	; 0x9188
   12be0:	movt	r1, #2
   12be4:	strb	r0, [r1]
   12be8:	bx	lr
   12bec:	push	{r4, r5, r6, sl, fp, lr}
   12bf0:	add	fp, sp, #16
   12bf4:	sub	sp, sp, #8
   12bf8:	movw	r0, #37228	; 0x916c
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	bl	16738 <putchar_unlocked@plt+0x55a4>
   12c08:	cmp	r0, #0
   12c0c:	beq	12c34 <putchar_unlocked@plt+0x1aa0>
   12c10:	movw	r0, #37256	; 0x9188
   12c14:	movt	r0, #2
   12c18:	ldrb	r0, [r0]
   12c1c:	cmp	r0, #0
   12c20:	beq	12c54 <putchar_unlocked@plt+0x1ac0>
   12c24:	bl	11080 <__errno_location@plt>
   12c28:	ldr	r0, [r0]
   12c2c:	cmp	r0, #32
   12c30:	bne	12c54 <putchar_unlocked@plt+0x1ac0>
   12c34:	movw	r0, #37216	; 0x9160
   12c38:	movt	r0, #2
   12c3c:	ldr	r0, [r0]
   12c40:	bl	16738 <putchar_unlocked@plt+0x55a4>
   12c44:	cmp	r0, #0
   12c48:	subeq	sp, fp, #16
   12c4c:	popeq	{r4, r5, r6, sl, fp, pc}
   12c50:	b	12cc4 <putchar_unlocked@plt+0x1b30>
   12c54:	movw	r1, #31391	; 0x7a9f
   12c58:	movt	r1, #1
   12c5c:	mov	r0, #0
   12c60:	mov	r2, #5
   12c64:	bl	10f84 <dcgettext@plt>
   12c68:	mov	r4, r0
   12c6c:	movw	r0, #37252	; 0x9184
   12c70:	movt	r0, #2
   12c74:	ldr	r6, [r0]
   12c78:	bl	11080 <__errno_location@plt>
   12c7c:	ldr	r5, [r0]
   12c80:	cmp	r6, #0
   12c84:	bne	12ca0 <putchar_unlocked@plt+0x1b0c>
   12c88:	movw	r2, #31407	; 0x7aaf
   12c8c:	movt	r2, #1
   12c90:	mov	r0, #0
   12c94:	mov	r1, r5
   12c98:	mov	r3, r4
   12c9c:	b	12cc0 <putchar_unlocked@plt+0x1b2c>
   12ca0:	mov	r0, r6
   12ca4:	bl	15514 <putchar_unlocked@plt+0x4380>
   12ca8:	mov	r3, r0
   12cac:	str	r4, [sp]
   12cb0:	movw	r2, #31403	; 0x7aab
   12cb4:	movt	r2, #1
   12cb8:	mov	r0, #0
   12cbc:	mov	r1, r5
   12cc0:	bl	10ffc <error@plt>
   12cc4:	movw	r0, #37128	; 0x9108
   12cc8:	movt	r0, #2
   12ccc:	ldr	r0, [r0]
   12cd0:	bl	10f54 <_exit@plt>
   12cd4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cd8:	add	fp, sp, #24
   12cdc:	sub	sp, sp, #160	; 0xa0
   12ce0:	mov	r8, r1
   12ce4:	mov	r6, r0
   12ce8:	movw	r0, #32840	; 0x8048
   12cec:	bl	16390 <putchar_unlocked@plt+0x51fc>
   12cf0:	cmp	r0, #0
   12cf4:	beq	12d70 <putchar_unlocked@plt+0x1bdc>
   12cf8:	mov	r5, r0
   12cfc:	add	r4, sp, #4
   12d00:	mov	r0, r4
   12d04:	bl	12db4 <putchar_unlocked@plt+0x1c20>
   12d08:	b	12d1c <putchar_unlocked@plt+0x1b88>
   12d0c:	mov	r0, r5
   12d10:	mov	r1, #32768	; 0x8000
   12d14:	mov	r2, r4
   12d18:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   12d1c:	mov	r7, #0
   12d20:	mov	r0, r6
   12d24:	bl	11170 <feof_unlocked@plt>
   12d28:	cmp	r0, #0
   12d2c:	bne	12d7c <putchar_unlocked@plt+0x1be8>
   12d30:	add	r0, r5, r7
   12d34:	rsb	r2, r7, #32768	; 0x8000
   12d38:	mov	r1, #1
   12d3c:	mov	r3, r6
   12d40:	bl	11140 <fread_unlocked@plt>
   12d44:	add	r7, r0, r7
   12d48:	cmp	r7, #32768	; 0x8000
   12d4c:	beq	12d0c <putchar_unlocked@plt+0x1b78>
   12d50:	cmp	r0, #0
   12d54:	bne	12d20 <putchar_unlocked@plt+0x1b8c>
   12d58:	mov	r0, r6
   12d5c:	bl	10fe4 <ferror_unlocked@plt>
   12d60:	cmp	r0, #0
   12d64:	beq	12d7c <putchar_unlocked@plt+0x1be8>
   12d68:	mov	r0, r5
   12d6c:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   12d70:	mov	r0, #1
   12d74:	sub	sp, fp, #24
   12d78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d7c:	cmp	r7, #0
   12d80:	beq	12d94 <putchar_unlocked@plt+0x1c00>
   12d84:	add	r2, sp, #4
   12d88:	mov	r0, r5
   12d8c:	mov	r1, r7
   12d90:	bl	13990 <putchar_unlocked@plt+0x27fc>
   12d94:	add	r0, sp, #4
   12d98:	mov	r1, r8
   12d9c:	bl	12e4c <putchar_unlocked@plt+0x1cb8>
   12da0:	mov	r0, r5
   12da4:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   12da8:	mov	r0, #0
   12dac:	sub	sp, fp, #24
   12db0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12db4:	push	{fp, lr}
   12db8:	mov	fp, sp
   12dbc:	movw	ip, #43913	; 0xab89
   12dc0:	movt	ip, #61389	; 0xefcd
   12dc4:	movw	r2, #8961	; 0x2301
   12dc8:	movt	r2, #26437	; 0x6745
   12dcc:	movw	r3, #56574	; 0xdcfe
   12dd0:	movt	r3, #39098	; 0x98ba
   12dd4:	movw	lr, #21622	; 0x5476
   12dd8:	movt	lr, #4146	; 0x1032
   12ddc:	mov	r1, #0
   12de0:	stm	r0, {r2, ip}
   12de4:	str	r3, [r0, #8]
   12de8:	str	lr, [r0, #12]
   12dec:	str	r1, [r0, #16]
   12df0:	str	r1, [r0, #20]
   12df4:	str	r1, [r0, #24]
   12df8:	pop	{fp, pc}
   12dfc:	push	{r4, r5, fp, lr}
   12e00:	add	fp, sp, #8
   12e04:	mov	r4, r1
   12e08:	mov	r5, r0
   12e0c:	ldr	r1, [r0]
   12e10:	mov	r0, r4
   12e14:	bl	12e44 <putchar_unlocked@plt+0x1cb0>
   12e18:	ldr	r1, [r5, #4]
   12e1c:	add	r0, r4, #4
   12e20:	bl	12e44 <putchar_unlocked@plt+0x1cb0>
   12e24:	ldr	r1, [r5, #8]
   12e28:	add	r0, r4, #8
   12e2c:	bl	12e44 <putchar_unlocked@plt+0x1cb0>
   12e30:	ldr	r1, [r5, #12]
   12e34:	add	r0, r4, #12
   12e38:	bl	12e44 <putchar_unlocked@plt+0x1cb0>
   12e3c:	mov	r0, r4
   12e40:	pop	{r4, r5, fp, pc}
   12e44:	str	r1, [r0]
   12e48:	bx	lr
   12e4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e50:	add	fp, sp, #24
   12e54:	mov	r8, r1
   12e58:	mov	r5, r0
   12e5c:	ldr	r2, [r0, #16]
   12e60:	ldr	r1, [r0, #24]
   12e64:	add	r0, r2, r1
   12e68:	str	r0, [r5, #16]
   12e6c:	mov	r7, #32
   12e70:	cmp	r1, #56	; 0x38
   12e74:	movwcc	r7, #16
   12e78:	cmp	r0, r2
   12e7c:	ldrcc	r2, [r5, #20]
   12e80:	addcc	r2, r2, #1
   12e84:	strcc	r2, [r5, #20]
   12e88:	mvn	r2, #7
   12e8c:	add	r2, r2, r7, lsl #2
   12e90:	add	r6, r5, #28
   12e94:	lsl	r3, r0, #3
   12e98:	str	r3, [r6, r2]
   12e9c:	add	r3, r6, r7, lsl #2
   12ea0:	ldr	r4, [r5, #20]
   12ea4:	lsl	r4, r4, #3
   12ea8:	orr	r0, r4, r0, lsr #29
   12eac:	str	r0, [r3, #-4]
   12eb0:	add	r0, r6, r1
   12eb4:	sub	r2, r2, r1
   12eb8:	movw	r1, #31416	; 0x7ab8
   12ebc:	movt	r1, #1
   12ec0:	bl	10f60 <memcpy@plt>
   12ec4:	lsl	r1, r7, #2
   12ec8:	mov	r0, r6
   12ecc:	mov	r2, r5
   12ed0:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   12ed4:	mov	r0, r5
   12ed8:	mov	r1, r8
   12edc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ee0:	b	12dfc <putchar_unlocked@plt+0x1c68>
   12ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ee8:	add	fp, sp, #28
   12eec:	sub	sp, sp, #88	; 0x58
   12ef0:	ldr	r3, [r2, #16]
   12ef4:	adds	r3, r3, r1
   12ef8:	str	r3, [r2, #16]
   12efc:	ldr	r3, [r2, #20]
   12f00:	adc	r3, r3, #0
   12f04:	str	r3, [r2, #20]
   12f08:	bic	r1, r1, #3
   12f0c:	add	lr, r0, r1
   12f10:	ldm	r2, {r3, r4, ip}
   12f14:	str	r2, [sp]
   12f18:	ldr	r1, [r2, #12]
   12f1c:	cmp	lr, r0
   12f20:	bls	13934 <putchar_unlocked@plt+0x27a0>
   12f24:	mov	sl, r0
   12f28:	str	lr, [sp, #4]
   12f2c:	str	ip, [fp, #-40]	; 0xffffffd8
   12f30:	str	r3, [sp, #24]
   12f34:	str	r1, [sp, #28]
   12f38:	eor	r2, ip, r1
   12f3c:	and	r2, r4, r2
   12f40:	eor	r2, r2, r1
   12f44:	add	r2, r3, r2
   12f48:	ldr	r0, [sl]
   12f4c:	str	r0, [fp, #-44]	; 0xffffffd4
   12f50:	mov	r6, r4
   12f54:	ldr	r4, [sl, #4]
   12f58:	str	r4, [fp, #-32]	; 0xffffffe0
   12f5c:	ldr	r5, [sl, #8]
   12f60:	str	r5, [fp, #-36]	; 0xffffffdc
   12f64:	ldr	lr, [sl, #12]
   12f68:	str	lr, [fp, #-52]	; 0xffffffcc
   12f6c:	add	r2, r2, r0
   12f70:	movw	r3, #42104	; 0xa478
   12f74:	movt	r3, #55146	; 0xd76a
   12f78:	add	r2, r2, r3
   12f7c:	mov	r3, r6
   12f80:	add	r2, r6, r2, ror #25
   12f84:	eor	r7, r6, ip
   12f88:	and	r7, r2, r7
   12f8c:	eor	r7, r7, ip
   12f90:	add	r6, r1, r4
   12f94:	add	r7, r6, r7
   12f98:	movw	r1, #46934	; 0xb756
   12f9c:	movt	r1, #59591	; 0xe8c7
   12fa0:	add	r7, r7, r1
   12fa4:	add	r7, r2, r7, ror #20
   12fa8:	eor	r6, r2, r3
   12fac:	and	r6, r7, r6
   12fb0:	eor	r6, r6, r3
   12fb4:	str	r3, [sp, #20]
   12fb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12fbc:	add	r4, r1, r5
   12fc0:	add	r6, r4, r6
   12fc4:	movw	r1, #28891	; 0x70db
   12fc8:	movt	r1, #9248	; 0x2420
   12fcc:	add	r6, r6, r1
   12fd0:	add	r4, r7, r6, ror #15
   12fd4:	eor	r6, r7, r2
   12fd8:	and	r6, r4, r6
   12fdc:	eor	r6, r6, r2
   12fe0:	add	r5, r3, lr
   12fe4:	add	r6, r5, r6
   12fe8:	movw	r1, #52974	; 0xceee
   12fec:	movt	r1, #49597	; 0xc1bd
   12ff0:	add	r6, r6, r1
   12ff4:	add	r5, r4, r6, ror #10
   12ff8:	eor	r6, r4, r7
   12ffc:	and	r6, r5, r6
   13000:	eor	r6, r6, r7
   13004:	ldr	r0, [sl, #16]
   13008:	str	r0, [sp, #44]	; 0x2c
   1300c:	add	r2, r0, r2
   13010:	add	r2, r2, r6
   13014:	movw	r1, #4015	; 0xfaf
   13018:	movt	r1, #62844	; 0xf57c
   1301c:	add	r2, r2, r1
   13020:	add	r3, r5, r2, ror #25
   13024:	eor	r2, r5, r4
   13028:	and	r2, r3, r2
   1302c:	eor	r2, r2, r4
   13030:	ldr	r0, [sl, #20]
   13034:	str	r0, [sp, #32]
   13038:	add	r7, r0, r7
   1303c:	add	r2, r7, r2
   13040:	movw	r1, #50730	; 0xc62a
   13044:	movt	r1, #18311	; 0x4787
   13048:	add	r2, r2, r1
   1304c:	add	r7, r3, r2, ror #20
   13050:	eor	r2, r3, r5
   13054:	and	r2, r7, r2
   13058:	eor	r2, r2, r5
   1305c:	ldr	ip, [sl, #24]
   13060:	add	r4, ip, r4
   13064:	str	ip, [sp, #48]	; 0x30
   13068:	add	r2, r4, r2
   1306c:	movw	r1, #17939	; 0x4613
   13070:	movt	r1, #43056	; 0xa830
   13074:	add	r2, r2, r1
   13078:	add	r4, r7, r2, ror #15
   1307c:	eor	r2, r7, r3
   13080:	and	r2, r4, r2
   13084:	eor	r1, r2, r3
   13088:	ldr	r0, [sl, #28]
   1308c:	str	r0, [sp, #16]
   13090:	add	r5, r0, r5
   13094:	add	r1, r5, r1
   13098:	movw	r6, #38145	; 0x9501
   1309c:	movt	r6, #64838	; 0xfd46
   130a0:	add	r1, r1, r6
   130a4:	add	r1, r4, r1, ror #10
   130a8:	eor	r5, r4, r7
   130ac:	and	r5, r1, r5
   130b0:	eor	lr, r5, r7
   130b4:	ldr	r0, [sl, #32]
   130b8:	str	r0, [sp, #40]	; 0x28
   130bc:	add	r3, r0, r3
   130c0:	add	r3, r3, lr
   130c4:	movw	r6, #39128	; 0x98d8
   130c8:	movt	r6, #27008	; 0x6980
   130cc:	add	r3, r3, r6
   130d0:	add	lr, r1, r3, ror #25
   130d4:	eor	r3, r1, r4
   130d8:	and	r3, lr, r3
   130dc:	eor	r3, r3, r4
   130e0:	ldr	r8, [sl, #36]	; 0x24
   130e4:	add	r7, r8, r7
   130e8:	str	r8, [fp, #-56]	; 0xffffffc8
   130ec:	add	r3, r7, r3
   130f0:	movw	r5, #63407	; 0xf7af
   130f4:	movt	r5, #35652	; 0x8b44
   130f8:	add	r3, r3, r5
   130fc:	add	r7, lr, r3, ror #20
   13100:	eor	r3, lr, r1
   13104:	and	r3, r7, r3
   13108:	eor	r9, r3, r1
   1310c:	ldr	r0, [sl, #40]	; 0x28
   13110:	add	r4, r0, r4
   13114:	str	r0, [sp, #52]	; 0x34
   13118:	add	r4, r4, r9
   1311c:	movw	r3, #42063	; 0xa44f
   13120:	sub	r4, r4, r3
   13124:	add	r4, r7, r4, ror #15
   13128:	eor	r5, r7, lr
   1312c:	and	r5, r4, r5
   13130:	eor	r5, r5, lr
   13134:	ldr	r2, [sl, #44]	; 0x2c
   13138:	add	r1, r2, r1
   1313c:	str	r2, [fp, #-48]	; 0xffffffd0
   13140:	add	r1, r1, r5
   13144:	movw	r3, #55230	; 0xd7be
   13148:	movt	r3, #35164	; 0x895c
   1314c:	add	r1, r1, r3
   13150:	add	r5, r4, r1, ror #10
   13154:	eor	r1, r4, r7
   13158:	and	r1, r5, r1
   1315c:	eor	r1, r1, r7
   13160:	ldr	r3, [sl, #48]	; 0x30
   13164:	str	r3, [sp, #56]	; 0x38
   13168:	add	r6, r3, lr
   1316c:	add	r1, r6, r1
   13170:	movw	r3, #4386	; 0x1122
   13174:	movt	r3, #27536	; 0x6b90
   13178:	add	r1, r1, r3
   1317c:	add	r6, r5, r1, ror #25
   13180:	eor	r1, r5, r4
   13184:	and	r1, r6, r1
   13188:	eor	lr, r1, r4
   1318c:	ldr	r1, [sl, #52]	; 0x34
   13190:	str	r1, [sp, #36]	; 0x24
   13194:	add	r7, r1, r7
   13198:	add	r7, r7, lr
   1319c:	movw	r1, #29075	; 0x7193
   131a0:	movt	r1, #64920	; 0xfd98
   131a4:	add	r7, r7, r1
   131a8:	add	r7, r6, r7, ror #20
   131ac:	eor	r1, r6, r5
   131b0:	and	r1, r7, r1
   131b4:	eor	r1, r1, r5
   131b8:	ldr	r3, [sl, #56]	; 0x38
   131bc:	add	r4, r3, r4
   131c0:	mov	r9, r3
   131c4:	str	r3, [sp, #8]
   131c8:	add	r1, r4, r1
   131cc:	movw	r3, #17294	; 0x438e
   131d0:	movt	r3, #42617	; 0xa679
   131d4:	add	r1, r1, r3
   131d8:	add	r1, r7, r1, ror #15
   131dc:	eor	r4, r7, r6
   131e0:	and	r4, r1, r4
   131e4:	eor	r4, r4, r6
   131e8:	ldr	r3, [sl, #60]	; 0x3c
   131ec:	add	r5, r3, r5
   131f0:	mov	lr, r3
   131f4:	str	r3, [sp, #12]
   131f8:	add	r4, r5, r4
   131fc:	movw	r3, #2081	; 0x821
   13200:	movt	r3, #18868	; 0x49b4
   13204:	add	r4, r4, r3
   13208:	add	r4, r1, r4, ror #10
   1320c:	eor	r5, r4, r1
   13210:	and	r5, r5, r7
   13214:	eor	r5, r5, r1
   13218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1321c:	add	r6, r3, r6
   13220:	add	r5, r6, r5
   13224:	movw	r3, #9570	; 0x2562
   13228:	movt	r3, #63006	; 0xf61e
   1322c:	add	r5, r5, r3
   13230:	add	r5, r4, r5, ror #27
   13234:	eor	r6, r5, r4
   13238:	and	r6, r6, r1
   1323c:	eor	r6, r6, r4
   13240:	add	r7, ip, r7
   13244:	add	r6, r7, r6
   13248:	movw	r3, #45888	; 0xb340
   1324c:	movt	r3, #49216	; 0xc040
   13250:	add	r6, r6, r3
   13254:	add	r6, r5, r6, ror #23
   13258:	eor	r7, r6, r5
   1325c:	and	r7, r7, r4
   13260:	eor	r7, r7, r5
   13264:	add	r1, r2, r1
   13268:	add	r1, r1, r7
   1326c:	movw	r3, #23121	; 0x5a51
   13270:	movt	r3, #9822	; 0x265e
   13274:	add	r1, r1, r3
   13278:	add	r1, r6, r1, ror #18
   1327c:	eor	r7, r1, r6
   13280:	and	r7, r7, r5
   13284:	eor	r7, r7, r6
   13288:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1328c:	add	r4, r2, r4
   13290:	add	r4, r4, r7
   13294:	movw	r3, #51114	; 0xc7aa
   13298:	movt	r3, #59830	; 0xe9b6
   1329c:	add	r4, r4, r3
   132a0:	add	r4, r1, r4, ror #12
   132a4:	eor	r7, r4, r1
   132a8:	and	r7, r7, r6
   132ac:	eor	r7, r7, r1
   132b0:	ldr	ip, [sp, #32]
   132b4:	add	r5, ip, r5
   132b8:	add	r5, r5, r7
   132bc:	movw	r3, #4189	; 0x105d
   132c0:	movt	r3, #54831	; 0xd62f
   132c4:	add	r5, r5, r3
   132c8:	add	r5, r4, r5, ror #27
   132cc:	eor	r7, r5, r4
   132d0:	and	r7, r7, r1
   132d4:	eor	r7, r7, r4
   132d8:	add	r6, r0, r6
   132dc:	add	r6, r6, r7
   132e0:	movw	r3, #5203	; 0x1453
   132e4:	movt	r3, #580	; 0x244
   132e8:	add	r6, r6, r3
   132ec:	add	r6, r5, r6, ror #23
   132f0:	eor	r7, r6, r5
   132f4:	and	r7, r7, r4
   132f8:	eor	r7, r7, r5
   132fc:	add	r1, lr, r1
   13300:	add	r1, r1, r7
   13304:	movw	r3, #59009	; 0xe681
   13308:	movt	r3, #55457	; 0xd8a1
   1330c:	add	r1, r1, r3
   13310:	add	r1, r6, r1, ror #18
   13314:	eor	r7, r1, r6
   13318:	and	r7, r7, r5
   1331c:	eor	r7, r7, r6
   13320:	ldr	lr, [sp, #44]	; 0x2c
   13324:	add	r4, lr, r4
   13328:	add	r4, r4, r7
   1332c:	movw	r3, #64456	; 0xfbc8
   13330:	movt	r3, #59347	; 0xe7d3
   13334:	add	r4, r4, r3
   13338:	add	r4, r1, r4, ror #12
   1333c:	eor	r7, r4, r1
   13340:	and	r7, r7, r6
   13344:	eor	r7, r7, r1
   13348:	add	r5, r8, r5
   1334c:	add	r5, r5, r7
   13350:	movw	r3, #52710	; 0xcde6
   13354:	movt	r3, #8673	; 0x21e1
   13358:	add	r5, r5, r3
   1335c:	add	r5, r4, r5, ror #27
   13360:	eor	r7, r5, r4
   13364:	and	r7, r7, r1
   13368:	eor	r7, r7, r4
   1336c:	add	r6, r9, r6
   13370:	add	r6, r6, r7
   13374:	movw	r3, #2006	; 0x7d6
   13378:	movt	r3, #49975	; 0xc337
   1337c:	add	r6, r6, r3
   13380:	add	r6, r5, r6, ror #23
   13384:	eor	r7, r6, r5
   13388:	and	r7, r7, r4
   1338c:	eor	r7, r7, r5
   13390:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13394:	add	r1, r0, r1
   13398:	add	r1, r1, r7
   1339c:	movw	r3, #3463	; 0xd87
   133a0:	movt	r3, #62677	; 0xf4d5
   133a4:	add	r1, r1, r3
   133a8:	add	r1, r6, r1, ror #18
   133ac:	eor	r7, r1, r6
   133b0:	and	r7, r7, r5
   133b4:	eor	r7, r7, r6
   133b8:	ldr	r0, [sp, #40]	; 0x28
   133bc:	add	r4, r0, r4
   133c0:	add	r4, r4, r7
   133c4:	movw	r3, #5357	; 0x14ed
   133c8:	movt	r3, #17754	; 0x455a
   133cc:	add	r4, r4, r3
   133d0:	add	r4, r1, r4, ror #12
   133d4:	eor	r7, r4, r1
   133d8:	and	r7, r7, r6
   133dc:	eor	r7, r7, r1
   133e0:	ldr	r8, [sp, #36]	; 0x24
   133e4:	add	r5, r8, r5
   133e8:	add	r5, r5, r7
   133ec:	movw	r3, #59653	; 0xe905
   133f0:	movt	r3, #43491	; 0xa9e3
   133f4:	add	r5, r5, r3
   133f8:	add	r5, r4, r5, ror #27
   133fc:	eor	r7, r5, r4
   13400:	and	r7, r7, r1
   13404:	eor	r7, r7, r4
   13408:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1340c:	add	r6, r2, r6
   13410:	add	r6, r6, r7
   13414:	movw	r3, #41976	; 0xa3f8
   13418:	movt	r3, #64751	; 0xfcef
   1341c:	add	r6, r6, r3
   13420:	add	r6, r5, r6, ror #23
   13424:	eor	r7, r6, r5
   13428:	and	r7, r7, r4
   1342c:	eor	r7, r7, r5
   13430:	ldr	r2, [sp, #16]
   13434:	add	r1, r2, r1
   13438:	add	r1, r1, r7
   1343c:	movw	r3, #729	; 0x2d9
   13440:	movt	r3, #26479	; 0x676f
   13444:	add	r1, r1, r3
   13448:	add	r1, r6, r1, ror #18
   1344c:	eor	r7, r1, r6
   13450:	and	r3, r7, r5
   13454:	eor	r3, r3, r6
   13458:	ldr	r9, [sp, #56]	; 0x38
   1345c:	add	r4, r9, r4
   13460:	add	r3, r4, r3
   13464:	movw	r4, #19594	; 0x4c8a
   13468:	movt	r4, #36138	; 0x8d2a
   1346c:	add	r3, r3, r4
   13470:	add	r3, r1, r3, ror #12
   13474:	eor	r4, r7, r3
   13478:	add	r5, ip, r5
   1347c:	add	r4, r5, r4
   13480:	movw	r5, #14658	; 0x3942
   13484:	movt	r5, #65530	; 0xfffa
   13488:	add	r4, r4, r5
   1348c:	add	r4, r3, r4, ror #28
   13490:	eor	r5, r3, r1
   13494:	eor	r5, r5, r4
   13498:	add	r6, r0, r6
   1349c:	add	r5, r6, r5
   134a0:	movw	r6, #63105	; 0xf681
   134a4:	movt	r6, #34673	; 0x8771
   134a8:	add	r5, r5, r6
   134ac:	add	r5, r4, r5, ror #21
   134b0:	eor	r6, r4, r3
   134b4:	eor	r6, r6, r5
   134b8:	ldr	r7, [fp, #-48]	; 0xffffffd0
   134bc:	add	r1, r7, r1
   134c0:	add	r1, r1, r6
   134c4:	movw	r6, #24866	; 0x6122
   134c8:	movt	r6, #28061	; 0x6d9d
   134cc:	add	r1, r1, r6
   134d0:	add	r1, r5, r1, ror #16
   134d4:	eor	r6, r5, r4
   134d8:	eor	r6, r6, r1
   134dc:	ldr	ip, [sp, #8]
   134e0:	add	r3, ip, r3
   134e4:	add	r3, r3, r6
   134e8:	movw	r6, #14348	; 0x380c
   134ec:	movt	r6, #64997	; 0xfde5
   134f0:	add	r3, r3, r6
   134f4:	add	r3, r1, r3, ror #9
   134f8:	eor	r6, r1, r5
   134fc:	eor	r6, r6, r3
   13500:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13504:	add	r4, r7, r4
   13508:	add	r4, r4, r6
   1350c:	movw	r6, #59972	; 0xea44
   13510:	movt	r6, #42174	; 0xa4be
   13514:	add	r4, r4, r6
   13518:	add	r4, r3, r4, ror #28
   1351c:	eor	r6, r3, r1
   13520:	eor	r6, r6, r4
   13524:	add	r5, lr, r5
   13528:	add	r5, r5, r6
   1352c:	movw	r6, #53161	; 0xcfa9
   13530:	movt	r6, #19422	; 0x4bde
   13534:	add	r5, r5, r6
   13538:	add	r5, r4, r5, ror #21
   1353c:	eor	r6, r4, r3
   13540:	eor	r6, r6, r5
   13544:	add	r1, r2, r1
   13548:	add	r1, r1, r6
   1354c:	movw	r6, #19296	; 0x4b60
   13550:	movt	r6, #63163	; 0xf6bb
   13554:	add	r1, r1, r6
   13558:	add	r1, r5, r1, ror #16
   1355c:	eor	r6, r5, r4
   13560:	eor	r6, r6, r1
   13564:	ldr	r7, [sp, #52]	; 0x34
   13568:	add	r3, r7, r3
   1356c:	add	r3, r3, r6
   13570:	movw	r6, #48240	; 0xbc70
   13574:	movt	r6, #48831	; 0xbebf
   13578:	add	r3, r3, r6
   1357c:	add	r3, r1, r3, ror #9
   13580:	eor	r6, r1, r5
   13584:	eor	r6, r6, r3
   13588:	add	r4, r8, r4
   1358c:	add	r4, r4, r6
   13590:	movw	r6, #32454	; 0x7ec6
   13594:	movt	r6, #10395	; 0x289b
   13598:	add	r4, r4, r6
   1359c:	add	r4, r3, r4, ror #28
   135a0:	eor	r6, r3, r1
   135a4:	eor	r6, r6, r4
   135a8:	ldr	r8, [fp, #-44]	; 0xffffffd4
   135ac:	add	r5, r8, r5
   135b0:	add	r5, r5, r6
   135b4:	movw	r6, #10234	; 0x27fa
   135b8:	movt	r6, #60065	; 0xeaa1
   135bc:	add	r5, r5, r6
   135c0:	add	r5, r4, r5, ror #21
   135c4:	eor	r6, r4, r3
   135c8:	eor	r6, r6, r5
   135cc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   135d0:	add	r1, r9, r1
   135d4:	add	r1, r1, r6
   135d8:	movw	r6, #12421	; 0x3085
   135dc:	movt	r6, #54511	; 0xd4ef
   135e0:	add	r1, r1, r6
   135e4:	add	r1, r5, r1, ror #16
   135e8:	eor	r6, r5, r4
   135ec:	eor	r6, r6, r1
   135f0:	ldr	r0, [sp, #48]	; 0x30
   135f4:	add	r3, r0, r3
   135f8:	add	r3, r3, r6
   135fc:	movw	r6, #7429	; 0x1d05
   13600:	movt	r6, #1160	; 0x488
   13604:	add	r3, r3, r6
   13608:	add	r3, r1, r3, ror #9
   1360c:	eor	r6, r1, r5
   13610:	eor	r6, r6, r3
   13614:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13618:	add	r4, r0, r4
   1361c:	add	r4, r4, r6
   13620:	movw	r6, #53305	; 0xd039
   13624:	movt	r6, #55764	; 0xd9d4
   13628:	add	r4, r4, r6
   1362c:	add	r4, r3, r4, ror #28
   13630:	eor	r6, r3, r1
   13634:	eor	r6, r6, r4
   13638:	ldr	r0, [sp, #56]	; 0x38
   1363c:	add	r5, r0, r5
   13640:	add	r5, r5, r6
   13644:	movw	r6, #39397	; 0x99e5
   13648:	movt	r6, #59099	; 0xe6db
   1364c:	add	r5, r5, r6
   13650:	add	r5, r4, r5, ror #21
   13654:	eor	r6, r4, r3
   13658:	eor	r6, r6, r5
   1365c:	ldr	lr, [sp, #12]
   13660:	add	r1, lr, r1
   13664:	add	r1, r1, r6
   13668:	movw	r6, #31992	; 0x7cf8
   1366c:	movt	r6, #8098	; 0x1fa2
   13670:	add	r1, r1, r6
   13674:	add	r1, r5, r1, ror #16
   13678:	eor	r6, r5, r4
   1367c:	eor	r6, r6, r1
   13680:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13684:	add	r3, r7, r3
   13688:	add	r3, r3, r6
   1368c:	movw	r6, #22117	; 0x5665
   13690:	movt	r6, #50348	; 0xc4ac
   13694:	add	r3, r3, r6
   13698:	add	r3, r1, r3, ror #9
   1369c:	mvn	r6, r5
   136a0:	orr	r6, r3, r6
   136a4:	eor	r6, r6, r1
   136a8:	add	r4, r8, r4
   136ac:	add	r4, r4, r6
   136b0:	movw	r6, #8772	; 0x2244
   136b4:	movt	r6, #62505	; 0xf429
   136b8:	add	r4, r4, r6
   136bc:	add	r4, r3, r4, ror #26
   136c0:	mvn	r6, r1
   136c4:	orr	r6, r4, r6
   136c8:	eor	r6, r6, r3
   136cc:	add	r2, r2, r5
   136d0:	add	r2, r2, r6
   136d4:	movw	r5, #65431	; 0xff97
   136d8:	movt	r5, #17194	; 0x432a
   136dc:	add	r2, r2, r5
   136e0:	add	r2, r4, r2, ror #22
   136e4:	mvn	r5, r3
   136e8:	orr	r5, r2, r5
   136ec:	eor	r5, r5, r4
   136f0:	add	r1, ip, r1
   136f4:	add	r1, r1, r5
   136f8:	movw	r5, #9127	; 0x23a7
   136fc:	movt	r5, #43924	; 0xab94
   13700:	add	r1, r1, r5
   13704:	add	r1, r2, r1, ror #17
   13708:	mvn	r5, r4
   1370c:	orr	r5, r1, r5
   13710:	eor	r5, r5, r2
   13714:	ldr	r7, [sp, #32]
   13718:	add	r3, r7, r3
   1371c:	add	r3, r3, r5
   13720:	movw	r5, #41017	; 0xa039
   13724:	movt	r5, #64659	; 0xfc93
   13728:	add	r3, r3, r5
   1372c:	add	r3, r1, r3, ror #11
   13730:	mvn	r5, r2
   13734:	orr	r5, r3, r5
   13738:	eor	r5, r5, r1
   1373c:	add	r4, r0, r4
   13740:	add	r4, r4, r5
   13744:	movw	r5, #22979	; 0x59c3
   13748:	movt	r5, #25947	; 0x655b
   1374c:	add	r4, r4, r5
   13750:	add	r4, r3, r4, ror #26
   13754:	mvn	r5, r1
   13758:	orr	r5, r4, r5
   1375c:	eor	r5, r5, r3
   13760:	add	r2, r9, r2
   13764:	add	r2, r2, r5
   13768:	movw	r5, #52370	; 0xcc92
   1376c:	movt	r5, #36620	; 0x8f0c
   13770:	add	r2, r2, r5
   13774:	add	r2, r4, r2, ror #22
   13778:	mvn	r5, r3
   1377c:	orr	r5, r2, r5
   13780:	eor	r5, r5, r4
   13784:	ldr	r0, [sp, #52]	; 0x34
   13788:	add	r1, r0, r1
   1378c:	add	r1, r1, r5
   13790:	movw	r5, #62589	; 0xf47d
   13794:	movt	r5, #65519	; 0xffef
   13798:	add	r1, r1, r5
   1379c:	add	r1, r2, r1, ror #17
   137a0:	mvn	r5, r4
   137a4:	orr	r5, r1, r5
   137a8:	eor	r5, r5, r2
   137ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   137b0:	add	r3, r0, r3
   137b4:	add	r3, r3, r5
   137b8:	movw	r5, #24017	; 0x5dd1
   137bc:	movt	r5, #34180	; 0x8584
   137c0:	add	r3, r3, r5
   137c4:	add	r3, r1, r3, ror #11
   137c8:	mvn	r5, r2
   137cc:	orr	r5, r3, r5
   137d0:	eor	r5, r5, r1
   137d4:	ldr	r0, [sp, #40]	; 0x28
   137d8:	add	r4, r0, r4
   137dc:	add	r4, r4, r5
   137e0:	movw	r5, #32335	; 0x7e4f
   137e4:	movt	r5, #28584	; 0x6fa8
   137e8:	add	r4, r4, r5
   137ec:	add	r4, r3, r4, ror #26
   137f0:	mvn	r5, r1
   137f4:	orr	r5, r4, r5
   137f8:	eor	r5, r5, r3
   137fc:	add	r2, lr, r2
   13800:	ldr	lr, [sp, #4]
   13804:	add	r2, r2, r5
   13808:	movw	r5, #59104	; 0xe6e0
   1380c:	movt	r5, #65068	; 0xfe2c
   13810:	add	r2, r2, r5
   13814:	add	r2, r4, r2, ror #22
   13818:	mvn	r7, r3
   1381c:	orr	r7, r2, r7
   13820:	eor	r7, r7, r4
   13824:	ldr	r0, [sp, #48]	; 0x30
   13828:	add	r1, r0, r1
   1382c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13830:	add	r1, r1, r7
   13834:	movw	r5, #17172	; 0x4314
   13838:	movt	r5, #41729	; 0xa301
   1383c:	add	r1, r1, r5
   13840:	add	r1, r2, r1, ror #17
   13844:	mvn	r7, r4
   13848:	orr	r7, r1, r7
   1384c:	eor	r7, r7, r2
   13850:	ldr	r0, [sp, #36]	; 0x24
   13854:	add	r3, r0, r3
   13858:	add	r3, r3, r7
   1385c:	movw	r5, #4513	; 0x11a1
   13860:	movt	r5, #19976	; 0x4e08
   13864:	add	r3, r3, r5
   13868:	add	r3, r1, r3, ror #11
   1386c:	mvn	r7, r2
   13870:	orr	r7, r3, r7
   13874:	eor	r7, r7, r1
   13878:	ldr	r0, [sp, #44]	; 0x2c
   1387c:	add	r6, r0, r4
   13880:	add	r7, r6, r7
   13884:	movw	r4, #32386	; 0x7e82
   13888:	movt	r4, #63315	; 0xf753
   1388c:	add	r7, r7, r4
   13890:	add	r7, r3, r7, ror #26
   13894:	mvn	r6, r1
   13898:	orr	r6, r7, r6
   1389c:	eor	r6, r6, r3
   138a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138a4:	add	r2, r0, r2
   138a8:	add	r2, r2, r6
   138ac:	movw	r4, #62005	; 0xf235
   138b0:	movt	r4, #48442	; 0xbd3a
   138b4:	add	r2, r2, r4
   138b8:	add	r2, r7, r2, ror #22
   138bc:	mvn	r6, r3
   138c0:	orr	r6, r2, r6
   138c4:	eor	r6, r6, r7
   138c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   138cc:	add	r1, r0, r1
   138d0:	add	r1, r1, r6
   138d4:	movw	r4, #53947	; 0xd2bb
   138d8:	movt	r4, #10967	; 0x2ad7
   138dc:	add	r1, r1, r4
   138e0:	add	r1, r2, r1, ror #17
   138e4:	ldr	r4, [sp, #20]
   138e8:	add	r6, r1, r4
   138ec:	mvn	r5, r7
   138f0:	orr	r5, r1, r5
   138f4:	eor	r5, r5, r2
   138f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   138fc:	add	r3, r0, r3
   13900:	add	r3, r3, r5
   13904:	movw	r4, #54161	; 0xd391
   13908:	movt	r4, #60294	; 0xeb86
   1390c:	add	r3, r3, r4
   13910:	add	r4, r6, r3, ror #11
   13914:	ldr	r3, [sp, #24]
   13918:	add	ip, r1, ip
   1391c:	ldr	r1, [sp, #28]
   13920:	add	r1, r2, r1
   13924:	add	r3, r7, r3
   13928:	add	sl, sl, #64	; 0x40
   1392c:	cmp	sl, lr
   13930:	bcc	12f2c <putchar_unlocked@plt+0x1d98>
   13934:	ldr	r0, [sp]
   13938:	stm	r0, {r3, r4, ip}
   1393c:	str	r1, [r0, #12]
   13940:	sub	sp, fp, #28
   13944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13948:	push	{r4, r5, r6, r7, fp, lr}
   1394c:	add	fp, sp, #16
   13950:	sub	sp, sp, #160	; 0xa0
   13954:	mov	r4, r2
   13958:	mov	r5, r1
   1395c:	mov	r6, r0
   13960:	add	r7, sp, #4
   13964:	mov	r0, r7
   13968:	bl	12db4 <putchar_unlocked@plt+0x1c20>
   1396c:	mov	r0, r6
   13970:	mov	r1, r5
   13974:	mov	r2, r7
   13978:	bl	13990 <putchar_unlocked@plt+0x27fc>
   1397c:	mov	r0, r7
   13980:	mov	r1, r4
   13984:	bl	12e4c <putchar_unlocked@plt+0x1cb8>
   13988:	sub	sp, fp, #16
   1398c:	pop	{r4, r5, r6, r7, fp, pc}
   13990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13994:	add	fp, sp, #28
   13998:	sub	sp, sp, #20
   1399c:	mov	r4, r2
   139a0:	mov	r5, r1
   139a4:	mov	r8, r0
   139a8:	ldr	r6, [r2, #24]
   139ac:	cmp	r6, #0
   139b0:	beq	13a20 <putchar_unlocked@plt+0x288c>
   139b4:	add	r9, r4, #28
   139b8:	add	r0, r9, r6
   139bc:	rsb	r7, r6, #128	; 0x80
   139c0:	cmp	r7, r5
   139c4:	movhi	r7, r5
   139c8:	mov	r1, r8
   139cc:	mov	r2, r7
   139d0:	bl	10f60 <memcpy@plt>
   139d4:	ldr	r0, [r4, #24]
   139d8:	add	r0, r0, r7
   139dc:	str	r0, [r4, #24]
   139e0:	cmp	r0, #65	; 0x41
   139e4:	bcc	13a18 <putchar_unlocked@plt+0x2884>
   139e8:	bic	r1, r0, #63	; 0x3f
   139ec:	mov	r0, r9
   139f0:	mov	r2, r4
   139f4:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   139f8:	ldr	r0, [r4, #24]
   139fc:	and	r2, r0, #63	; 0x3f
   13a00:	str	r2, [r4, #24]
   13a04:	add	r0, r7, r6
   13a08:	bic	r0, r0, #63	; 0x3f
   13a0c:	add	r1, r9, r0
   13a10:	mov	r0, r9
   13a14:	bl	10f60 <memcpy@plt>
   13a18:	sub	r5, r5, r7
   13a1c:	add	r8, r8, r7
   13a20:	cmp	r5, #64	; 0x40
   13a24:	bcc	13afc <putchar_unlocked@plt+0x2968>
   13a28:	tst	r8, #3
   13a2c:	beq	13ae0 <putchar_unlocked@plt+0x294c>
   13a30:	cmp	r5, #65	; 0x41
   13a34:	bcc	13b0c <putchar_unlocked@plt+0x2978>
   13a38:	sub	r0, r5, #64	; 0x40
   13a3c:	str	r0, [sp, #12]
   13a40:	add	r7, r4, #28
   13a44:	sub	r0, r5, #65	; 0x41
   13a48:	bic	r0, r0, #63	; 0x3f
   13a4c:	str	r0, [sp, #8]
   13a50:	add	r0, r0, #64	; 0x40
   13a54:	str	r0, [sp, #4]
   13a58:	mov	sl, #48	; 0x30
   13a5c:	add	r6, r7, #32
   13a60:	mov	r0, r8
   13a64:	add	r8, r7, #16
   13a68:	str	r0, [sp, #16]
   13a6c:	mov	r9, r0
   13a70:	mov	r1, #64	; 0x40
   13a74:	vld1.8	{d16-d17}, [r9], r1
   13a78:	add	r1, r0, #32
   13a7c:	add	r2, r0, #48	; 0x30
   13a80:	vld1.8	{d18-d19}, [r2]
   13a84:	vld1.8	{d20-d21}, [r1]
   13a88:	mov	r1, r7
   13a8c:	vst1.8	{d16-d17}, [r1], sl
   13a90:	add	r0, r0, #16
   13a94:	vld1.8	{d16-d17}, [r0]
   13a98:	vst1.8	{d18-d19}, [r1]
   13a9c:	vst1.8	{d20-d21}, [r6]
   13aa0:	vst1.8	{d16-d17}, [r8]
   13aa4:	mov	r0, r7
   13aa8:	mov	r1, #64	; 0x40
   13aac:	mov	r2, r4
   13ab0:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   13ab4:	sub	r5, r5, #64	; 0x40
   13ab8:	cmp	r5, #64	; 0x40
   13abc:	mov	r0, r9
   13ac0:	bhi	13a70 <putchar_unlocked@plt+0x28dc>
   13ac4:	ldr	r0, [sp, #12]
   13ac8:	ldr	r1, [sp, #8]
   13acc:	sub	r5, r0, r1
   13ad0:	ldr	r8, [sp, #16]
   13ad4:	ldr	r0, [sp, #4]
   13ad8:	add	r8, r8, r0
   13adc:	b	13b10 <putchar_unlocked@plt+0x297c>
   13ae0:	bic	r6, r5, #63	; 0x3f
   13ae4:	mov	r0, r8
   13ae8:	mov	r1, r6
   13aec:	mov	r2, r4
   13af0:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   13af4:	add	r8, r8, r6
   13af8:	and	r5, r5, #63	; 0x3f
   13afc:	cmp	r5, #0
   13b00:	bne	13b10 <putchar_unlocked@plt+0x297c>
   13b04:	sub	sp, fp, #28
   13b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b0c:	mov	r5, #64	; 0x40
   13b10:	ldr	r7, [r4, #24]
   13b14:	add	r6, r4, #28
   13b18:	add	r0, r6, r7
   13b1c:	mov	r1, r8
   13b20:	mov	r2, r5
   13b24:	bl	10f60 <memcpy@plt>
   13b28:	add	r5, r7, r5
   13b2c:	cmp	r5, #64	; 0x40
   13b30:	bcc	13b58 <putchar_unlocked@plt+0x29c4>
   13b34:	mov	r0, r6
   13b38:	mov	r1, #64	; 0x40
   13b3c:	mov	r2, r4
   13b40:	bl	12ee4 <putchar_unlocked@plt+0x1d50>
   13b44:	add	r1, r4, #92	; 0x5c
   13b48:	sub	r5, r5, #64	; 0x40
   13b4c:	mov	r0, r6
   13b50:	mov	r2, r5
   13b54:	bl	10f60 <memcpy@plt>
   13b58:	str	r5, [r4, #24]
   13b5c:	sub	sp, fp, #28
   13b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b64:	b	10f30 <posix_fadvise64@plt>
   13b68:	cmp	r0, #0
   13b6c:	bxeq	lr
   13b70:	push	{r4, sl, fp, lr}
   13b74:	add	fp, sp, #8
   13b78:	sub	sp, sp, #16
   13b7c:	mov	r4, r1
   13b80:	bl	110bc <fileno@plt>
   13b84:	mov	r1, #0
   13b88:	str	r1, [sp]
   13b8c:	stmib	sp, {r1, r4}
   13b90:	mov	r2, #0
   13b94:	mov	r3, #0
   13b98:	bl	13b64 <putchar_unlocked@plt+0x29d0>
   13b9c:	sub	sp, fp, #8
   13ba0:	pop	{r4, sl, fp, pc}
   13ba4:	push	{r4, r5, fp, lr}
   13ba8:	add	fp, sp, #8
   13bac:	sub	sp, sp, #8
   13bb0:	mov	r4, r0
   13bb4:	bl	110bc <fileno@plt>
   13bb8:	cmn	r0, #1
   13bbc:	ble	13c34 <putchar_unlocked@plt+0x2aa0>
   13bc0:	mov	r0, r4
   13bc4:	bl	11020 <__freading@plt>
   13bc8:	cmp	r0, #0
   13bcc:	beq	13bf8 <putchar_unlocked@plt+0x2a64>
   13bd0:	mov	r0, r4
   13bd4:	bl	110bc <fileno@plt>
   13bd8:	mov	r1, #1
   13bdc:	str	r1, [sp]
   13be0:	mov	r2, #0
   13be4:	mov	r3, #0
   13be8:	bl	10fc0 <lseek64@plt>
   13bec:	and	r0, r0, r1
   13bf0:	cmn	r0, #1
   13bf4:	beq	13c34 <putchar_unlocked@plt+0x2aa0>
   13bf8:	mov	r0, r4
   13bfc:	bl	13c44 <putchar_unlocked@plt+0x2ab0>
   13c00:	cmp	r0, #0
   13c04:	beq	13c34 <putchar_unlocked@plt+0x2aa0>
   13c08:	bl	11080 <__errno_location@plt>
   13c0c:	ldr	r5, [r0]
   13c10:	mov	r0, r4
   13c14:	bl	110d4 <fclose@plt>
   13c18:	cmp	r5, #0
   13c1c:	beq	13c2c <putchar_unlocked@plt+0x2a98>
   13c20:	bl	11080 <__errno_location@plt>
   13c24:	str	r5, [r0]
   13c28:	mvn	r0, #0
   13c2c:	sub	sp, fp, #8
   13c30:	pop	{r4, r5, fp, pc}
   13c34:	mov	r0, r4
   13c38:	sub	sp, fp, #8
   13c3c:	pop	{r4, r5, fp, lr}
   13c40:	b	110d4 <fclose@plt>
   13c44:	push	{r4, sl, fp, lr}
   13c48:	add	fp, sp, #8
   13c4c:	mov	r4, r0
   13c50:	cmp	r0, #0
   13c54:	beq	13c6c <putchar_unlocked@plt+0x2ad8>
   13c58:	mov	r0, r4
   13c5c:	bl	11020 <__freading@plt>
   13c60:	cmp	r0, #0
   13c64:	movne	r0, r4
   13c68:	blne	13c78 <putchar_unlocked@plt+0x2ae4>
   13c6c:	mov	r0, r4
   13c70:	pop	{r4, sl, fp, lr}
   13c74:	b	10f3c <fflush@plt>
   13c78:	ldrb	r1, [r0, #1]
   13c7c:	tst	r1, #1
   13c80:	bxeq	lr
   13c84:	push	{fp, lr}
   13c88:	mov	fp, sp
   13c8c:	sub	sp, sp, #8
   13c90:	mov	r1, #1
   13c94:	str	r1, [sp]
   13c98:	mov	r2, #0
   13c9c:	mov	r3, #0
   13ca0:	bl	13d88 <putchar_unlocked@plt+0x2bf4>
   13ca4:	mov	sp, fp
   13ca8:	pop	{fp, pc}
   13cac:	push	{r4, r5, r6, r7, fp, lr}
   13cb0:	add	fp, sp, #16
   13cb4:	mov	r5, r1
   13cb8:	bl	11128 <fopen64@plt>
   13cbc:	mov	r4, #0
   13cc0:	cmp	r0, #0
   13cc4:	beq	13d14 <putchar_unlocked@plt+0x2b80>
   13cc8:	mov	r6, r0
   13ccc:	bl	110bc <fileno@plt>
   13cd0:	cmp	r0, #2
   13cd4:	movhi	r0, r6
   13cd8:	pophi	{r4, r5, r6, r7, fp, pc}
   13cdc:	bl	15a78 <putchar_unlocked@plt+0x48e4>
   13ce0:	cmn	r0, #1
   13ce4:	ble	13d40 <putchar_unlocked@plt+0x2bac>
   13ce8:	mov	r7, r0
   13cec:	mov	r0, r6
   13cf0:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   13cf4:	cmp	r0, #0
   13cf8:	bne	13d1c <putchar_unlocked@plt+0x2b88>
   13cfc:	mov	r0, r7
   13d00:	mov	r1, r5
   13d04:	bl	10ef4 <fdopen@plt>
   13d08:	mov	r4, r0
   13d0c:	cmp	r0, #0
   13d10:	beq	13d1c <putchar_unlocked@plt+0x2b88>
   13d14:	mov	r0, r4
   13d18:	pop	{r4, r5, r6, r7, fp, pc}
   13d1c:	bl	11080 <__errno_location@plt>
   13d20:	mov	r4, r0
   13d24:	ldr	r5, [r0]
   13d28:	mov	r0, r7
   13d2c:	bl	1117c <close@plt>
   13d30:	str	r5, [r4]
   13d34:	mov	r4, #0
   13d38:	mov	r0, r4
   13d3c:	pop	{r4, r5, r6, r7, fp, pc}
   13d40:	bl	11080 <__errno_location@plt>
   13d44:	mov	r5, r0
   13d48:	ldr	r7, [r0]
   13d4c:	mov	r0, r6
   13d50:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   13d54:	str	r7, [r5]
   13d58:	mov	r0, r4
   13d5c:	pop	{r4, r5, r6, r7, fp, pc}
   13d60:	push	{r4, r5, r6, sl, fp, lr}
   13d64:	add	fp, sp, #16
   13d68:	mov	r4, r0
   13d6c:	bl	11080 <__errno_location@plt>
   13d70:	mov	r5, r0
   13d74:	ldr	r6, [r0]
   13d78:	mov	r0, r4
   13d7c:	bl	10f48 <free@plt>
   13d80:	str	r6, [r5]
   13d84:	pop	{r4, r5, r6, sl, fp, pc}
   13d88:	push	{r4, r5, r6, r7, fp, lr}
   13d8c:	add	fp, sp, #16
   13d90:	sub	sp, sp, #8
   13d94:	mov	r5, r3
   13d98:	mov	r6, r2
   13d9c:	mov	r4, r0
   13da0:	ldr	r0, [r0, #4]
   13da4:	ldr	r1, [r4, #8]
   13da8:	cmp	r1, r0
   13dac:	bne	13dc8 <putchar_unlocked@plt+0x2c34>
   13db0:	ldrd	r0, [r4, #16]
   13db4:	cmp	r1, r0
   13db8:	bne	13dc8 <putchar_unlocked@plt+0x2c34>
   13dbc:	ldr	r0, [r4, #36]	; 0x24
   13dc0:	cmp	r0, #0
   13dc4:	beq	13de0 <putchar_unlocked@plt+0x2c4c>
   13dc8:	mov	r0, r4
   13dcc:	mov	r2, r6
   13dd0:	mov	r3, r5
   13dd4:	sub	sp, fp, #16
   13dd8:	pop	{r4, r5, r6, r7, fp, lr}
   13ddc:	b	110e0 <fseeko64@plt>
   13de0:	ldr	r7, [fp, #8]
   13de4:	mov	r0, r4
   13de8:	bl	110bc <fileno@plt>
   13dec:	str	r7, [sp]
   13df0:	mov	r2, r6
   13df4:	mov	r3, r5
   13df8:	bl	10fc0 <lseek64@plt>
   13dfc:	and	r2, r0, r1
   13e00:	cmn	r2, #1
   13e04:	mvneq	r0, #0
   13e08:	subeq	sp, fp, #16
   13e0c:	popeq	{r4, r5, r6, r7, fp, pc}
   13e10:	strd	r0, [r4, #80]	; 0x50
   13e14:	ldr	r0, [r4]
   13e18:	bic	r0, r0, #16
   13e1c:	str	r0, [r4]
   13e20:	mov	r0, #0
   13e24:	sub	sp, fp, #16
   13e28:	pop	{r4, r5, r6, r7, fp, pc}
   13e2c:	push	{r4, r5, fp, lr}
   13e30:	add	fp, sp, #8
   13e34:	cmp	r0, #0
   13e38:	beq	13ecc <putchar_unlocked@plt+0x2d38>
   13e3c:	mov	r4, r0
   13e40:	mov	r1, #47	; 0x2f
   13e44:	bl	11104 <strrchr@plt>
   13e48:	cmp	r0, #0
   13e4c:	mov	r5, r4
   13e50:	addne	r5, r0, #1
   13e54:	sub	r0, r5, r4
   13e58:	cmp	r0, #7
   13e5c:	blt	13eb0 <putchar_unlocked@plt+0x2d1c>
   13e60:	sub	r0, r5, #7
   13e64:	movw	r1, #31536	; 0x7b30
   13e68:	movt	r1, #1
   13e6c:	mov	r2, #7
   13e70:	bl	11158 <strncmp@plt>
   13e74:	cmp	r0, #0
   13e78:	bne	13eb0 <putchar_unlocked@plt+0x2d1c>
   13e7c:	movw	r1, #31544	; 0x7b38
   13e80:	movt	r1, #1
   13e84:	mov	r0, r5
   13e88:	mov	r2, #3
   13e8c:	bl	11158 <strncmp@plt>
   13e90:	cmp	r0, #0
   13e94:	beq	13ea0 <putchar_unlocked@plt+0x2d0c>
   13e98:	mov	r4, r5
   13e9c:	b	13eb0 <putchar_unlocked@plt+0x2d1c>
   13ea0:	add	r4, r5, #3
   13ea4:	movw	r0, #37200	; 0x9150
   13ea8:	movt	r0, #2
   13eac:	str	r4, [r0]
   13eb0:	movw	r0, #37204	; 0x9154
   13eb4:	movt	r0, #2
   13eb8:	str	r4, [r0]
   13ebc:	movw	r0, #37260	; 0x918c
   13ec0:	movt	r0, #2
   13ec4:	str	r4, [r0]
   13ec8:	pop	{r4, r5, fp, pc}
   13ecc:	movw	r0, #37216	; 0x9160
   13ed0:	movt	r0, #2
   13ed4:	ldr	r3, [r0]
   13ed8:	movw	r0, #31480	; 0x7af8
   13edc:	movt	r0, #1
   13ee0:	mov	r1, #55	; 0x37
   13ee4:	mov	r2, #1
   13ee8:	bl	10fb4 <fwrite@plt>
   13eec:	bl	11164 <abort@plt>
   13ef0:	push	{r4, r5, r6, sl, fp, lr}
   13ef4:	add	fp, sp, #16
   13ef8:	mov	r4, r0
   13efc:	movw	r0, #37264	; 0x9190
   13f00:	movt	r0, #2
   13f04:	cmp	r4, #0
   13f08:	moveq	r4, r0
   13f0c:	bl	11080 <__errno_location@plt>
   13f10:	mov	r5, r0
   13f14:	ldr	r6, [r0]
   13f18:	mov	r0, r4
   13f1c:	mov	r1, #48	; 0x30
   13f20:	bl	1623c <putchar_unlocked@plt+0x50a8>
   13f24:	str	r6, [r5]
   13f28:	pop	{r4, r5, r6, sl, fp, pc}
   13f2c:	movw	r1, #37264	; 0x9190
   13f30:	movt	r1, #2
   13f34:	cmp	r0, #0
   13f38:	movne	r1, r0
   13f3c:	ldr	r0, [r1]
   13f40:	bx	lr
   13f44:	movw	r2, #37264	; 0x9190
   13f48:	movt	r2, #2
   13f4c:	cmp	r0, #0
   13f50:	movne	r2, r0
   13f54:	str	r1, [r2]
   13f58:	bx	lr
   13f5c:	movw	r3, #37264	; 0x9190
   13f60:	movt	r3, #2
   13f64:	cmp	r0, #0
   13f68:	movne	r3, r0
   13f6c:	ubfx	r0, r1, #5, #3
   13f70:	add	r0, r3, r0, lsl #2
   13f74:	ldr	r3, [r0, #8]
   13f78:	and	r1, r1, #31
   13f7c:	eor	r2, r2, r3, lsr r1
   13f80:	and	r2, r2, #1
   13f84:	eor	r2, r3, r2, lsl r1
   13f88:	str	r2, [r0, #8]
   13f8c:	mov	r0, #1
   13f90:	and	r0, r0, r3, lsr r1
   13f94:	bx	lr
   13f98:	movw	r2, #37264	; 0x9190
   13f9c:	movt	r2, #2
   13fa0:	cmp	r0, #0
   13fa4:	movne	r2, r0
   13fa8:	ldr	r0, [r2, #4]
   13fac:	str	r1, [r2, #4]
   13fb0:	bx	lr
   13fb4:	movw	r3, #37264	; 0x9190
   13fb8:	movt	r3, #2
   13fbc:	cmp	r0, #0
   13fc0:	movne	r3, r0
   13fc4:	mov	r0, #10
   13fc8:	str	r0, [r3]
   13fcc:	cmp	r1, #0
   13fd0:	cmpne	r2, #0
   13fd4:	bne	13fe4 <putchar_unlocked@plt+0x2e50>
   13fd8:	push	{fp, lr}
   13fdc:	mov	fp, sp
   13fe0:	bl	11164 <abort@plt>
   13fe4:	str	r1, [r3, #40]	; 0x28
   13fe8:	str	r2, [r3, #44]	; 0x2c
   13fec:	bx	lr
   13ff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ff4:	add	fp, sp, #28
   13ff8:	sub	sp, sp, #20
   13ffc:	mov	r8, r3
   14000:	mov	r9, r2
   14004:	mov	sl, r1
   14008:	mov	r7, r0
   1400c:	ldr	r0, [fp, #8]
   14010:	movw	r5, #37264	; 0x9190
   14014:	movt	r5, #2
   14018:	cmp	r0, #0
   1401c:	movne	r5, r0
   14020:	bl	11080 <__errno_location@plt>
   14024:	mov	r4, r0
   14028:	ldm	r5, {r0, r1}
   1402c:	ldr	r2, [r5, #40]	; 0x28
   14030:	ldr	r3, [r5, #44]	; 0x2c
   14034:	ldr	r6, [r4]
   14038:	add	r5, r5, #8
   1403c:	stm	sp, {r0, r1, r5}
   14040:	str	r2, [sp, #12]
   14044:	str	r3, [sp, #16]
   14048:	mov	r0, r7
   1404c:	mov	r1, sl
   14050:	mov	r2, r9
   14054:	mov	r3, r8
   14058:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   1405c:	str	r6, [r4]
   14060:	sub	sp, fp, #28
   14064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14068:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1406c:	add	fp, sp, #28
   14070:	sub	sp, sp, #156	; 0x9c
   14074:	mov	r9, r3
   14078:	str	r2, [fp, #-84]	; 0xffffffac
   1407c:	mov	r6, r1
   14080:	mov	r7, r0
   14084:	ldr	r0, [fp, #12]
   14088:	and	r1, r0, #4
   1408c:	str	r1, [sp, #32]
   14090:	and	r1, r0, #1
   14094:	str	r1, [sp, #36]	; 0x24
   14098:	ubfx	sl, r0, #1, #1
   1409c:	bl	10fcc <__ctype_get_mb_cur_max@plt>
   140a0:	str	r0, [sp, #40]	; 0x28
   140a4:	ldr	r0, [fp, #24]
   140a8:	str	r0, [sp, #76]	; 0x4c
   140ac:	ldr	r0, [fp, #20]
   140b0:	str	r0, [sp, #68]	; 0x44
   140b4:	ldr	r0, [fp, #8]
   140b8:	str	r0, [fp, #-60]	; 0xffffffc4
   140bc:	mov	r0, #0
   140c0:	str	r0, [sp, #72]	; 0x48
   140c4:	mov	r0, #0
   140c8:	str	r0, [sp, #92]	; 0x5c
   140cc:	mov	r0, #0
   140d0:	str	r0, [fp, #-72]	; 0xffffffb8
   140d4:	mov	r0, #0
   140d8:	mov	r1, #0
   140dc:	str	r1, [fp, #-56]	; 0xffffffc8
   140e0:	mov	r1, #0
   140e4:	str	r1, [sp, #56]	; 0x38
   140e8:	mov	r5, #1
   140ec:	str	r7, [sp, #80]	; 0x50
   140f0:	mov	r4, r6
   140f4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   140f8:	cmp	r6, #10
   140fc:	bhi	15064 <putchar_unlocked@plt+0x3ed0>
   14100:	add	r1, pc, #20
   14104:	mov	r8, #0
   14108:	mov	r2, #1
   1410c:	mov	r3, #0
   14110:	ldr	ip, [fp, #-84]	; 0xffffffac
   14114:	mov	lr, r9
   14118:	ldr	pc, [r1, r6, lsl #2]
   1411c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14120:	andeq	r4, r1, r4, lsr #4
   14124:	andeq	r4, r1, r4, ror #3
   14128:	ldrdeq	r4, [r1], -ip
   1412c:	andeq	r4, r1, r8, lsl r2
   14130:	andeq	r4, r1, r8, ror r2
   14134:	andeq	r4, r1, r4, lsl #4
   14138:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1413c:	andeq	r4, r1, r8, asr #2
   14140:	andeq	r4, r1, r8, asr #2
   14144:	andeq	r4, r1, r0, ror r1
   14148:	movw	r0, #31628	; 0x7b8c
   1414c:	movt	r0, #1
   14150:	mov	r1, r6
   14154:	bl	15670 <putchar_unlocked@plt+0x44dc>
   14158:	str	r0, [sp, #68]	; 0x44
   1415c:	movw	r0, #31630	; 0x7b8e
   14160:	movt	r0, #1
   14164:	mov	r1, r6
   14168:	bl	15670 <putchar_unlocked@plt+0x44dc>
   1416c:	str	r0, [sp, #76]	; 0x4c
   14170:	mov	r8, #0
   14174:	tst	sl, #1
   14178:	bne	141b0 <putchar_unlocked@plt+0x301c>
   1417c:	ldr	r0, [sp, #68]	; 0x44
   14180:	ldrb	r0, [r0]
   14184:	cmp	r0, #0
   14188:	beq	141b0 <putchar_unlocked@plt+0x301c>
   1418c:	ldr	r1, [sp, #68]	; 0x44
   14190:	add	r1, r1, #1
   14194:	mov	r8, #0
   14198:	cmp	r8, r4
   1419c:	strbcc	r0, [r7, r8]
   141a0:	ldrb	r0, [r1, r8]
   141a4:	add	r8, r8, #1
   141a8:	cmp	r0, #0
   141ac:	bne	14198 <putchar_unlocked@plt+0x3004>
   141b0:	ldr	r6, [sp, #76]	; 0x4c
   141b4:	mov	r0, r6
   141b8:	bl	11068 <strlen@plt>
   141bc:	str	r0, [fp, #-72]	; 0xffffffb8
   141c0:	str	r6, [sp, #92]	; 0x5c
   141c4:	mov	r2, #1
   141c8:	mov	r3, sl
   141cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   141d0:	mov	lr, r9
   141d4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   141d8:	b	142d4 <putchar_unlocked@plt+0x3140>
   141dc:	mov	r0, #1
   141e0:	b	14224 <putchar_unlocked@plt+0x3090>
   141e4:	tst	sl, #1
   141e8:	bne	14224 <putchar_unlocked@plt+0x3090>
   141ec:	mov	r2, r0
   141f0:	b	1424c <putchar_unlocked@plt+0x30b8>
   141f4:	mov	r6, #0
   141f8:	mov	r8, #0
   141fc:	mov	r2, r0
   14200:	b	142d0 <putchar_unlocked@plt+0x313c>
   14204:	mov	r0, #1
   14208:	str	r0, [fp, #-72]	; 0xffffffb8
   1420c:	mov	r8, #0
   14210:	mov	r6, #5
   14214:	b	14290 <putchar_unlocked@plt+0x30fc>
   14218:	mov	r2, #1
   1421c:	tst	sl, #1
   14220:	beq	1424c <putchar_unlocked@plt+0x30b8>
   14224:	mov	r1, #1
   14228:	str	r1, [fp, #-72]	; 0xffffffb8
   1422c:	mov	r8, #0
   14230:	mov	r6, #2
   14234:	movw	r1, #31630	; 0x7b8e
   14238:	movt	r1, #1
   1423c:	str	r1, [sp, #92]	; 0x5c
   14240:	mov	r2, r0
   14244:	mov	r3, #1
   14248:	b	142d4 <putchar_unlocked@plt+0x3140>
   1424c:	mov	r8, #1
   14250:	mov	r6, #2
   14254:	cmp	r4, #0
   14258:	movne	r0, #39	; 0x27
   1425c:	strbne	r0, [r7]
   14260:	movw	r0, #31630	; 0x7b8e
   14264:	movt	r0, #1
   14268:	str	r0, [sp, #92]	; 0x5c
   1426c:	mov	r0, #1
   14270:	str	r0, [fp, #-72]	; 0xffffffb8
   14274:	b	142d0 <putchar_unlocked@plt+0x313c>
   14278:	mov	r6, #5
   1427c:	tst	sl, #1
   14280:	beq	142a8 <putchar_unlocked@plt+0x3114>
   14284:	mov	r0, #1
   14288:	str	r0, [fp, #-72]	; 0xffffffb8
   1428c:	mov	r8, #0
   14290:	movw	r0, #31626	; 0x7b8a
   14294:	movt	r0, #1
   14298:	str	r0, [sp, #92]	; 0x5c
   1429c:	mov	r2, #1
   142a0:	mov	r3, #1
   142a4:	b	142d4 <putchar_unlocked@plt+0x3140>
   142a8:	cmp	r4, #0
   142ac:	movne	r0, #34	; 0x22
   142b0:	strbne	r0, [r7]
   142b4:	mov	r8, #1
   142b8:	movw	r0, #31626	; 0x7b8a
   142bc:	movt	r0, #1
   142c0:	str	r0, [sp, #92]	; 0x5c
   142c4:	mov	r0, #1
   142c8:	str	r0, [fp, #-72]	; 0xffffffb8
   142cc:	mov	r2, #1
   142d0:	mov	r3, #0
   142d4:	ldr	r0, [fp, #16]
   142d8:	cmp	r0, #0
   142dc:	movwne	r0, #1
   142e0:	and	r0, r0, r3
   142e4:	str	r0, [fp, #-88]	; 0xffffffa8
   142e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   142ec:	cmp	r0, #0
   142f0:	movwne	r0, #1
   142f4:	and	r1, r0, r3
   142f8:	and	r1, r2, r1
   142fc:	str	r1, [sp, #48]	; 0x30
   14300:	str	r6, [fp, #-60]	; 0xffffffc4
   14304:	subs	r6, r6, #2
   14308:	clz	r1, r6
   1430c:	lsr	r1, r1, #5
   14310:	and	r1, r1, r3
   14314:	str	r1, [sp, #60]	; 0x3c
   14318:	str	r6, [fp, #-80]	; 0xffffffb0
   1431c:	mov	r1, r6
   14320:	movwne	r1, #1
   14324:	str	r3, [fp, #-76]	; 0xffffffb4
   14328:	eor	r3, r3, #1
   1432c:	str	r3, [sp, #88]	; 0x58
   14330:	orr	r3, r1, r3
   14334:	str	r3, [sp, #64]	; 0x40
   14338:	and	r1, r1, r2
   1433c:	str	r1, [fp, #-68]	; 0xffffffbc
   14340:	and	r0, r0, r1
   14344:	str	r0, [fp, #-64]	; 0xffffffc0
   14348:	str	r2, [sp, #84]	; 0x54
   1434c:	eor	r0, r2, #1
   14350:	str	r0, [sp, #52]	; 0x34
   14354:	mov	r6, #0
   14358:	cmn	lr, #1
   1435c:	beq	1436c <putchar_unlocked@plt+0x31d8>
   14360:	cmp	r6, lr
   14364:	bne	14378 <putchar_unlocked@plt+0x31e4>
   14368:	b	14ee4 <putchar_unlocked@plt+0x3d50>
   1436c:	ldrb	r0, [ip, r6]
   14370:	cmp	r0, #0
   14374:	beq	14ee4 <putchar_unlocked@plt+0x3d50>
   14378:	str	r5, [fp, #-48]	; 0xffffffd0
   1437c:	mov	sl, #0
   14380:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14384:	cmp	r0, #0
   14388:	beq	143bc <putchar_unlocked@plt+0x3228>
   1438c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14390:	add	r5, r6, r0
   14394:	cmp	r0, #2
   14398:	bcc	143b4 <putchar_unlocked@plt+0x3220>
   1439c:	cmn	lr, #1
   143a0:	bne	143b4 <putchar_unlocked@plt+0x3220>
   143a4:	mov	r0, ip
   143a8:	bl	11068 <strlen@plt>
   143ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   143b0:	mov	lr, r0
   143b4:	cmp	r5, lr
   143b8:	bls	143c8 <putchar_unlocked@plt+0x3234>
   143bc:	mov	r0, #0
   143c0:	str	r0, [fp, #-52]	; 0xffffffcc
   143c4:	b	14414 <putchar_unlocked@plt+0x3280>
   143c8:	mov	r5, r4
   143cc:	mov	r4, lr
   143d0:	add	r0, ip, r6
   143d4:	ldr	r1, [sp, #92]	; 0x5c
   143d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143dc:	bl	10f78 <memcmp@plt>
   143e0:	cmp	r0, #0
   143e4:	mov	r1, r0
   143e8:	movwne	r1, #1
   143ec:	ldr	r2, [sp, #88]	; 0x58
   143f0:	orr	r1, r1, r2
   143f4:	tst	r1, #1
   143f8:	beq	14fa8 <putchar_unlocked@plt+0x3e14>
   143fc:	clz	r0, r0
   14400:	lsr	r0, r0, #5
   14404:	str	r0, [fp, #-52]	; 0xffffffcc
   14408:	ldr	ip, [fp, #-84]	; 0xffffffac
   1440c:	mov	lr, r4
   14410:	mov	r4, r5
   14414:	ldrb	r5, [ip, r6]
   14418:	cmp	r5, #126	; 0x7e
   1441c:	bhi	147d8 <putchar_unlocked@plt+0x3644>
   14420:	mov	r9, #1
   14424:	mov	r2, #110	; 0x6e
   14428:	mov	r0, #97	; 0x61
   1442c:	add	r3, pc, #4
   14430:	mov	r1, #0
   14434:	ldr	pc, [r3, r5, lsl #2]
   14438:	ldrdeq	r4, [r1], -r0
   1443c:	ldrdeq	r4, [r1], -r8
   14440:	ldrdeq	r4, [r1], -r8
   14444:	ldrdeq	r4, [r1], -r8
   14448:	ldrdeq	r4, [r1], -r8
   1444c:	ldrdeq	r4, [r1], -r8
   14450:	ldrdeq	r4, [r1], -r8
   14454:	muleq	r1, ip, r8
   14458:			; <UNDEFINED> instruction: 0x000146b0
   1445c:	andeq	r4, r1, r8, lsr #13
   14460:			; <UNDEFINED> instruction: 0x000146bc
   14464:	andeq	r4, r1, r0, asr #14
   14468:	andeq	r4, r1, r0, lsr #13
   1446c:			; <UNDEFINED> instruction: 0x000146b8
   14470:	ldrdeq	r4, [r1], -r8
   14474:	ldrdeq	r4, [r1], -r8
   14478:	ldrdeq	r4, [r1], -r8
   1447c:	ldrdeq	r4, [r1], -r8
   14480:	ldrdeq	r4, [r1], -r8
   14484:	ldrdeq	r4, [r1], -r8
   14488:	ldrdeq	r4, [r1], -r8
   1448c:	ldrdeq	r4, [r1], -r8
   14490:	ldrdeq	r4, [r1], -r8
   14494:	ldrdeq	r4, [r1], -r8
   14498:	ldrdeq	r4, [r1], -r8
   1449c:	ldrdeq	r4, [r1], -r8
   144a0:	ldrdeq	r4, [r1], -r8
   144a4:	ldrdeq	r4, [r1], -r8
   144a8:	ldrdeq	r4, [r1], -r8
   144ac:	ldrdeq	r4, [r1], -r8
   144b0:	ldrdeq	r4, [r1], -r8
   144b4:	ldrdeq	r4, [r1], -r8
   144b8:	andeq	r4, r1, ip, asr #16
   144bc:	andeq	r4, r1, r0, asr r8
   144c0:	andeq	r4, r1, r0, asr r8
   144c4:	andeq	r4, r1, r8, asr #12
   144c8:	andeq	r4, r1, r0, asr r8
   144cc:	andeq	r4, r1, r4, lsr r6
   144d0:	andeq	r4, r1, r0, asr r8
   144d4:	andeq	r4, r1, r8, asr #14
   144d8:	andeq	r4, r1, r0, asr r8
   144dc:	andeq	r4, r1, r0, asr r8
   144e0:	andeq	r4, r1, r0, asr r8
   144e4:	andeq	r4, r1, r4, lsr r6
   144e8:	andeq	r4, r1, r4, lsr r6
   144ec:	andeq	r4, r1, r4, lsr r6
   144f0:	andeq	r4, r1, r4, lsr r6
   144f4:	andeq	r4, r1, r4, lsr r6
   144f8:	andeq	r4, r1, r4, lsr r6
   144fc:	andeq	r4, r1, r4, lsr r6
   14500:	andeq	r4, r1, r4, lsr r6
   14504:	andeq	r4, r1, r4, lsr r6
   14508:	andeq	r4, r1, r4, lsr r6
   1450c:	andeq	r4, r1, r4, lsr r6
   14510:	andeq	r4, r1, r4, lsr r6
   14514:	andeq	r4, r1, r4, lsr r6
   14518:	andeq	r4, r1, r4, lsr r6
   1451c:	andeq	r4, r1, r4, lsr r6
   14520:	andeq	r4, r1, r4, lsr r6
   14524:	andeq	r4, r1, r0, asr r8
   14528:	andeq	r4, r1, r0, asr r8
   1452c:	andeq	r4, r1, r0, asr r8
   14530:	andeq	r4, r1, r0, asr r8
   14534:	andeq	r4, r1, r0, lsl r7
   14538:	ldrdeq	r4, [r1], -r8
   1453c:	andeq	r4, r1, r4, lsr r6
   14540:	andeq	r4, r1, r4, lsr r6
   14544:	andeq	r4, r1, r4, lsr r6
   14548:	andeq	r4, r1, r4, lsr r6
   1454c:	andeq	r4, r1, r4, lsr r6
   14550:	andeq	r4, r1, r4, lsr r6
   14554:	andeq	r4, r1, r4, lsr r6
   14558:	andeq	r4, r1, r4, lsr r6
   1455c:	andeq	r4, r1, r4, lsr r6
   14560:	andeq	r4, r1, r4, lsr r6
   14564:	andeq	r4, r1, r4, lsr r6
   14568:	andeq	r4, r1, r4, lsr r6
   1456c:	andeq	r4, r1, r4, lsr r6
   14570:	andeq	r4, r1, r4, lsr r6
   14574:	andeq	r4, r1, r4, lsr r6
   14578:	andeq	r4, r1, r4, lsr r6
   1457c:	andeq	r4, r1, r4, lsr r6
   14580:	andeq	r4, r1, r4, lsr r6
   14584:	andeq	r4, r1, r4, lsr r6
   14588:	andeq	r4, r1, r4, lsr r6
   1458c:	andeq	r4, r1, r4, lsr r6
   14590:	andeq	r4, r1, r4, lsr r6
   14594:	andeq	r4, r1, r4, lsr r6
   14598:	andeq	r4, r1, r4, lsr r6
   1459c:	andeq	r4, r1, r4, lsr r6
   145a0:	andeq	r4, r1, r4, lsr r6
   145a4:	andeq	r4, r1, r0, asr r8
   145a8:	andeq	r4, r1, ip, ror r6
   145ac:	andeq	r4, r1, r4, lsr r6
   145b0:	andeq	r4, r1, r0, asr r8
   145b4:	andeq	r4, r1, r4, lsr r6
   145b8:	andeq	r4, r1, r0, asr r8
   145bc:	andeq	r4, r1, r4, lsr r6
   145c0:	andeq	r4, r1, r4, lsr r6
   145c4:	andeq	r4, r1, r4, lsr r6
   145c8:	andeq	r4, r1, r4, lsr r6
   145cc:	andeq	r4, r1, r4, lsr r6
   145d0:	andeq	r4, r1, r4, lsr r6
   145d4:	andeq	r4, r1, r4, lsr r6
   145d8:	andeq	r4, r1, r4, lsr r6
   145dc:	andeq	r4, r1, r4, lsr r6
   145e0:	andeq	r4, r1, r4, lsr r6
   145e4:	andeq	r4, r1, r4, lsr r6
   145e8:	andeq	r4, r1, r4, lsr r6
   145ec:	andeq	r4, r1, r4, lsr r6
   145f0:	andeq	r4, r1, r4, lsr r6
   145f4:	andeq	r4, r1, r4, lsr r6
   145f8:	andeq	r4, r1, r4, lsr r6
   145fc:	andeq	r4, r1, r4, lsr r6
   14600:	andeq	r4, r1, r4, lsr r6
   14604:	andeq	r4, r1, r4, lsr r6
   14608:	andeq	r4, r1, r4, lsr r6
   1460c:	andeq	r4, r1, r4, lsr r6
   14610:	andeq	r4, r1, r4, lsr r6
   14614:	andeq	r4, r1, r4, lsr r6
   14618:	andeq	r4, r1, r4, lsr r6
   1461c:	andeq	r4, r1, r4, lsr r6
   14620:	andeq	r4, r1, r4, lsr r6
   14624:	andeq	r4, r1, ip, asr r6
   14628:	andeq	r4, r1, r0, asr r8
   1462c:	andeq	r4, r1, ip, asr r6
   14630:	andeq	r4, r1, r8, asr #12
   14634:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14638:	cmp	r0, #0
   1463c:	beq	148b0 <putchar_unlocked@plt+0x371c>
   14640:	ldr	r0, [fp, #16]
   14644:	b	148b4 <putchar_unlocked@plt+0x3720>
   14648:	mov	r9, #0
   1464c:	cmp	r6, #0
   14650:	beq	1484c <putchar_unlocked@plt+0x36b8>
   14654:	mov	sl, #0
   14658:	b	14634 <putchar_unlocked@plt+0x34a0>
   1465c:	mov	r9, #0
   14660:	cmn	lr, #1
   14664:	beq	14830 <putchar_unlocked@plt+0x369c>
   14668:	cmp	r6, #0
   1466c:	bne	14654 <putchar_unlocked@plt+0x34c0>
   14670:	cmp	lr, #1
   14674:	beq	1484c <putchar_unlocked@plt+0x36b8>
   14678:	b	14654 <putchar_unlocked@plt+0x34c0>
   1467c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14680:	cmp	r0, #2
   14684:	bne	14878 <putchar_unlocked@plt+0x36e4>
   14688:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1468c:	tst	r0, #1
   14690:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   14694:	mov	sl, #0
   14698:	mov	r0, #92	; 0x5c
   1469c:	b	1488c <putchar_unlocked@plt+0x36f8>
   146a0:	mov	r0, #102	; 0x66
   146a4:	b	1489c <putchar_unlocked@plt+0x3708>
   146a8:	mov	r2, #116	; 0x74
   146ac:	b	146bc <putchar_unlocked@plt+0x3528>
   146b0:	mov	r0, #98	; 0x62
   146b4:	b	1489c <putchar_unlocked@plt+0x3708>
   146b8:	mov	r2, #114	; 0x72
   146bc:	ldr	r0, [sp, #64]	; 0x40
   146c0:	tst	r0, #1
   146c4:	mov	r0, r2
   146c8:	bne	1489c <putchar_unlocked@plt+0x3708>
   146cc:	b	14fc0 <putchar_unlocked@plt+0x3e2c>
   146d0:	ldr	r0, [sp, #84]	; 0x54
   146d4:	tst	r0, #1
   146d8:	beq	1498c <putchar_unlocked@plt+0x37f8>
   146dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   146e0:	tst	r0, #1
   146e4:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   146e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   146ec:	cmp	r0, #2
   146f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   146f4:	movwne	r0, #1
   146f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   146fc:	orr	r0, r0, r2
   14700:	tst	r0, #1
   14704:	beq	14d80 <putchar_unlocked@plt+0x3bec>
   14708:	mov	r0, r8
   1470c:	b	14db4 <putchar_unlocked@plt+0x3c20>
   14710:	mov	sl, #0
   14714:	mov	r5, #63	; 0x3f
   14718:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1471c:	cmp	r0, #5
   14720:	beq	14b40 <putchar_unlocked@plt+0x39ac>
   14724:	cmp	r0, #2
   14728:	bne	14be0 <putchar_unlocked@plt+0x3a4c>
   1472c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14730:	tst	r0, #1
   14734:	mov	r9, #0
   14738:	beq	14634 <putchar_unlocked@plt+0x34a0>
   1473c:	b	14fc0 <putchar_unlocked@plt+0x3e2c>
   14740:	mov	r0, #118	; 0x76
   14744:	b	1489c <putchar_unlocked@plt+0x3708>
   14748:	mov	r5, #39	; 0x27
   1474c:	mov	r0, #1
   14750:	str	r0, [sp, #56]	; 0x38
   14754:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14758:	cmp	r0, #2
   1475c:	bne	149ac <putchar_unlocked@plt+0x3818>
   14760:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14764:	tst	r0, #1
   14768:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   1476c:	ldr	r2, [sp, #72]	; 0x48
   14770:	cmp	r2, #0
   14774:	mov	r0, r2
   14778:	movwne	r0, #1
   1477c:	clz	r1, r4
   14780:	lsr	r1, r1, #5
   14784:	orrs	r0, r0, r1
   14788:	moveq	r2, r4
   1478c:	str	r2, [sp, #72]	; 0x48
   14790:	moveq	r4, r0
   14794:	cmp	r8, r4
   14798:	movcc	r0, #39	; 0x27
   1479c:	strbcc	r0, [r7, r8]
   147a0:	add	r0, r8, #1
   147a4:	cmp	r0, r4
   147a8:	movcc	r1, #92	; 0x5c
   147ac:	strbcc	r1, [r7, r0]
   147b0:	add	r0, r8, #2
   147b4:	cmp	r0, r4
   147b8:	movcc	r1, #39	; 0x27
   147bc:	strbcc	r1, [r7, r0]
   147c0:	add	r8, r8, #3
   147c4:	mov	r0, #0
   147c8:	str	r0, [fp, #-56]	; 0xffffffc8
   147cc:	mov	sl, #0
   147d0:	mov	r9, #1
   147d4:	b	14634 <putchar_unlocked@plt+0x34a0>
   147d8:	str	r4, [sp, #24]
   147dc:	ldr	r0, [sp, #40]	; 0x28
   147e0:	cmp	r0, #1
   147e4:	bne	149b4 <putchar_unlocked@plt+0x3820>
   147e8:	str	lr, [sp, #28]
   147ec:	bl	11050 <__ctype_b_loc@plt>
   147f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   147f4:	ldr	r0, [r0]
   147f8:	add	r0, r0, r5, lsl #1
   147fc:	ldrb	r0, [r0, #1]
   14800:	ubfx	r9, r0, #6, #1
   14804:	mov	r1, #1
   14808:	ldr	r4, [sp, #24]
   1480c:	ldr	r0, [sp, #52]	; 0x34
   14810:	orr	r0, r9, r0
   14814:	mov	r2, r1
   14818:	cmp	r1, #1
   1481c:	bhi	14be8 <putchar_unlocked@plt+0x3a54>
   14820:	tst	r0, #1
   14824:	beq	14be8 <putchar_unlocked@plt+0x3a54>
   14828:	ldr	lr, [sp, #28]
   1482c:	b	14634 <putchar_unlocked@plt+0x34a0>
   14830:	cmp	r6, #0
   14834:	ldrbeq	r0, [ip, #1]
   14838:	cmpeq	r0, #0
   1483c:	beq	1484c <putchar_unlocked@plt+0x36b8>
   14840:	mvn	lr, #0
   14844:	mov	sl, #0
   14848:	b	14634 <putchar_unlocked@plt+0x34a0>
   1484c:	mov	r1, #1
   14850:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14854:	cmp	r0, #2
   14858:	bne	14870 <putchar_unlocked@plt+0x36dc>
   1485c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14860:	tst	r0, #1
   14864:	mov	r9, r1
   14868:	beq	14634 <putchar_unlocked@plt+0x34a0>
   1486c:	b	14fc0 <putchar_unlocked@plt+0x3e2c>
   14870:	mov	r9, r1
   14874:	b	14634 <putchar_unlocked@plt+0x34a0>
   14878:	mov	sl, #0
   1487c:	mov	r0, #92	; 0x5c
   14880:	ldr	r1, [sp, #48]	; 0x30
   14884:	cmp	r1, #0
   14888:	beq	1489c <putchar_unlocked@plt+0x3708>
   1488c:	mov	r9, #0
   14890:	cmp	sl, #0
   14894:	beq	14e4c <putchar_unlocked@plt+0x3cb8>
   14898:	b	14e88 <putchar_unlocked@plt+0x3cf4>
   1489c:	mov	r9, #0
   148a0:	ldr	r1, [sp, #84]	; 0x54
   148a4:	tst	r1, #1
   148a8:	mov	sl, #0
   148ac:	bne	148ec <putchar_unlocked@plt+0x3758>
   148b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   148b4:	cmp	r0, #0
   148b8:	mov	r0, r5
   148bc:	beq	148e0 <putchar_unlocked@plt+0x374c>
   148c0:	ubfx	r0, r5, #5, #3
   148c4:	ldr	r1, [fp, #16]
   148c8:	ldr	r0, [r1, r0, lsl #2]
   148cc:	and	r1, r5, #31
   148d0:	mov	r2, #1
   148d4:	tst	r0, r2, lsl r1
   148d8:	mov	r0, r5
   148dc:	bne	148ec <putchar_unlocked@plt+0x3758>
   148e0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   148e4:	cmp	r1, #0
   148e8:	beq	14e44 <putchar_unlocked@plt+0x3cb0>
   148ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   148f0:	tst	r1, #1
   148f4:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   148f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   148fc:	cmp	r1, #2
   14900:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14904:	movwne	r1, #1
   14908:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1490c:	orr	r1, r1, r2
   14910:	tst	r1, #1
   14914:	beq	14920 <putchar_unlocked@plt+0x378c>
   14918:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1491c:	b	1495c <putchar_unlocked@plt+0x37c8>
   14920:	cmp	r8, r4
   14924:	movcc	r1, #39	; 0x27
   14928:	strbcc	r1, [r7, r8]
   1492c:	add	r1, r8, #1
   14930:	cmp	r1, r4
   14934:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14938:	movcc	r2, #36	; 0x24
   1493c:	strbcc	r2, [r7, r1]
   14940:	add	r1, r8, #2
   14944:	cmp	r1, r4
   14948:	movcc	r2, #39	; 0x27
   1494c:	strbcc	r2, [r7, r1]
   14950:	add	r8, r8, #3
   14954:	mov	r1, #1
   14958:	str	r1, [fp, #-56]	; 0xffffffc8
   1495c:	cmp	r8, r4
   14960:	movcc	r1, #92	; 0x5c
   14964:	strbcc	r1, [r7, r8]
   14968:	add	r8, r8, #1
   1496c:	cmp	r8, r4
   14970:	strbcc	r0, [r7, r8]
   14974:	and	r5, r5, r9
   14978:	add	r8, r8, #1
   1497c:	add	r6, r6, #1
   14980:	cmn	lr, #1
   14984:	bne	14360 <putchar_unlocked@plt+0x31cc>
   14988:	b	1436c <putchar_unlocked@plt+0x31d8>
   1498c:	mov	r9, #0
   14990:	ldr	r0, [sp, #36]	; 0x24
   14994:	cmp	r0, #0
   14998:	mov	sl, #0
   1499c:	mov	r5, #0
   149a0:	beq	148b0 <putchar_unlocked@plt+0x371c>
   149a4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   149a8:	b	1497c <putchar_unlocked@plt+0x37e8>
   149ac:	mov	r9, #1
   149b0:	b	14634 <putchar_unlocked@plt+0x34a0>
   149b4:	mov	r0, #0
   149b8:	str	r0, [fp, #-36]	; 0xffffffdc
   149bc:	str	r0, [fp, #-40]	; 0xffffffd8
   149c0:	cmn	lr, #1
   149c4:	bne	149d8 <putchar_unlocked@plt+0x3844>
   149c8:	mov	r0, ip
   149cc:	bl	11068 <strlen@plt>
   149d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   149d4:	mov	lr, r0
   149d8:	add	r0, ip, r6
   149dc:	str	r0, [sp, #20]
   149e0:	mov	r9, #1
   149e4:	mov	r7, #0
   149e8:	sub	r4, fp, #40	; 0x28
   149ec:	str	lr, [sp, #28]
   149f0:	str	r7, [sp, #44]	; 0x2c
   149f4:	add	r7, r7, r6
   149f8:	add	r1, ip, r7
   149fc:	sub	r2, lr, r7
   14a00:	sub	r0, fp, #44	; 0x2c
   14a04:	mov	r3, r4
   14a08:	bl	16a2c <putchar_unlocked@plt+0x5898>
   14a0c:	cmp	r0, #0
   14a10:	beq	14ed0 <putchar_unlocked@plt+0x3d3c>
   14a14:	cmn	r0, #1
   14a18:	beq	14e90 <putchar_unlocked@plt+0x3cfc>
   14a1c:	cmn	r0, #2
   14a20:	ldr	lr, [sp, #28]
   14a24:	beq	14e98 <putchar_unlocked@plt+0x3d04>
   14a28:	cmp	r0, #2
   14a2c:	mov	r1, #0
   14a30:	movwcc	r1, #1
   14a34:	ldr	r2, [sp, #60]	; 0x3c
   14a38:	eor	r2, r2, #1
   14a3c:	orrs	r1, r2, r1
   14a40:	ldr	r4, [sp, #24]
   14a44:	bne	14b04 <putchar_unlocked@plt+0x3970>
   14a48:	ldr	r1, [sp, #44]	; 0x2c
   14a4c:	ldr	r2, [sp, #20]
   14a50:	add	r1, r2, r1
   14a54:	mov	r2, #1
   14a58:	ldrb	r3, [r1, r2]
   14a5c:	sub	r3, r3, #91	; 0x5b
   14a60:	cmp	r3, #33	; 0x21
   14a64:	bhi	14af8 <putchar_unlocked@plt+0x3964>
   14a68:	add	r7, pc, #0
   14a6c:	ldr	pc, [r7, r3, lsl #2]
   14a70:			; <UNDEFINED> instruction: 0x00014fb8
   14a74:			; <UNDEFINED> instruction: 0x00014fb8
   14a78:	strdeq	r4, [r1], -r8
   14a7c:			; <UNDEFINED> instruction: 0x00014fb8
   14a80:	strdeq	r4, [r1], -r8
   14a84:			; <UNDEFINED> instruction: 0x00014fb8
   14a88:	strdeq	r4, [r1], -r8
   14a8c:	strdeq	r4, [r1], -r8
   14a90:	strdeq	r4, [r1], -r8
   14a94:	strdeq	r4, [r1], -r8
   14a98:	strdeq	r4, [r1], -r8
   14a9c:	strdeq	r4, [r1], -r8
   14aa0:	strdeq	r4, [r1], -r8
   14aa4:	strdeq	r4, [r1], -r8
   14aa8:	strdeq	r4, [r1], -r8
   14aac:	strdeq	r4, [r1], -r8
   14ab0:	strdeq	r4, [r1], -r8
   14ab4:	strdeq	r4, [r1], -r8
   14ab8:	strdeq	r4, [r1], -r8
   14abc:	strdeq	r4, [r1], -r8
   14ac0:	strdeq	r4, [r1], -r8
   14ac4:	strdeq	r4, [r1], -r8
   14ac8:	strdeq	r4, [r1], -r8
   14acc:	strdeq	r4, [r1], -r8
   14ad0:	strdeq	r4, [r1], -r8
   14ad4:	strdeq	r4, [r1], -r8
   14ad8:	strdeq	r4, [r1], -r8
   14adc:	strdeq	r4, [r1], -r8
   14ae0:	strdeq	r4, [r1], -r8
   14ae4:	strdeq	r4, [r1], -r8
   14ae8:	strdeq	r4, [r1], -r8
   14aec:	strdeq	r4, [r1], -r8
   14af0:	strdeq	r4, [r1], -r8
   14af4:			; <UNDEFINED> instruction: 0x00014fb8
   14af8:	add	r2, r2, #1
   14afc:	cmp	r2, r0
   14b00:	bcc	14a58 <putchar_unlocked@plt+0x38c4>
   14b04:	ldr	r7, [sp, #44]	; 0x2c
   14b08:	add	r7, r0, r7
   14b0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b10:	bl	10fa8 <iswprint@plt>
   14b14:	cmp	r0, #0
   14b18:	movwne	r0, #1
   14b1c:	and	r9, r9, r0
   14b20:	sub	r4, fp, #40	; 0x28
   14b24:	mov	r0, r4
   14b28:	bl	10f6c <mbsinit@plt>
   14b2c:	ldr	lr, [sp, #28]
   14b30:	cmp	r0, #0
   14b34:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b38:	beq	149f0 <putchar_unlocked@plt+0x385c>
   14b3c:	b	14ed8 <putchar_unlocked@plt+0x3d44>
   14b40:	ldr	r0, [sp, #32]
   14b44:	cmp	r0, #0
   14b48:	beq	14be0 <putchar_unlocked@plt+0x3a4c>
   14b4c:	add	r0, r6, #2
   14b50:	cmp	r0, lr
   14b54:	bcs	14be0 <putchar_unlocked@plt+0x3a4c>
   14b58:	add	r1, ip, r6
   14b5c:	ldrb	r1, [r1, #1]
   14b60:	cmp	r1, #63	; 0x3f
   14b64:	bne	14be0 <putchar_unlocked@plt+0x3a4c>
   14b68:	ldrb	r9, [ip, r0]
   14b6c:	sub	r2, r9, #33	; 0x21
   14b70:	cmp	r2, #29
   14b74:	bhi	14be0 <putchar_unlocked@plt+0x3a4c>
   14b78:	mov	r3, #1
   14b7c:	movw	r1, #20929	; 0x51c1
   14b80:	movt	r1, #14336	; 0x3800
   14b84:	tst	r1, r3, lsl r2
   14b88:	beq	14be0 <putchar_unlocked@plt+0x3a4c>
   14b8c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14b90:	tst	r1, #1
   14b94:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   14b98:	cmp	r8, r4
   14b9c:	movcc	r1, #63	; 0x3f
   14ba0:	strbcc	r1, [r7, r8]
   14ba4:	add	r2, r8, #1
   14ba8:	cmp	r2, r4
   14bac:	movcc	r1, #34	; 0x22
   14bb0:	strbcc	r1, [r7, r2]
   14bb4:	add	r2, r8, #2
   14bb8:	cmp	r2, r4
   14bbc:	movcc	r1, #34	; 0x22
   14bc0:	strbcc	r1, [r7, r2]
   14bc4:	add	r2, r8, #3
   14bc8:	cmp	r2, r4
   14bcc:	movcc	r1, #63	; 0x3f
   14bd0:	strbcc	r1, [r7, r2]
   14bd4:	add	r8, r8, #4
   14bd8:	mov	r6, r0
   14bdc:	mov	r5, r9
   14be0:	mov	r9, #0
   14be4:	b	14634 <putchar_unlocked@plt+0x34a0>
   14be8:	add	r1, r2, r6
   14bec:	str	r1, [sp, #44]	; 0x2c
   14bf0:	add	r1, r6, #1
   14bf4:	mov	r3, #0
   14bf8:	ldr	lr, [sp, #28]
   14bfc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14c00:	tst	r0, #1
   14c04:	bne	14cf8 <putchar_unlocked@plt+0x3b64>
   14c08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14c0c:	tst	r2, #1
   14c10:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   14c14:	cmp	r6, #2
   14c18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14c1c:	movwne	r3, #1
   14c20:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14c24:	orr	r3, r3, r2
   14c28:	tst	r3, #1
   14c2c:	bne	14c68 <putchar_unlocked@plt+0x3ad4>
   14c30:	cmp	r8, r4
   14c34:	movcc	r2, #39	; 0x27
   14c38:	strbcc	r2, [r7, r8]
   14c3c:	add	r3, r8, #1
   14c40:	cmp	r3, r4
   14c44:	movcc	r2, #36	; 0x24
   14c48:	strbcc	r2, [r7, r3]
   14c4c:	add	r3, r8, #2
   14c50:	cmp	r3, r4
   14c54:	movcc	r2, #39	; 0x27
   14c58:	strbcc	r2, [r7, r3]
   14c5c:	add	r8, r8, #3
   14c60:	mov	r2, #1
   14c64:	str	r2, [fp, #-56]	; 0xffffffc8
   14c68:	cmp	r8, r4
   14c6c:	movcc	r2, #92	; 0x5c
   14c70:	strbcc	r2, [r7, r8]
   14c74:	add	r3, r8, #1
   14c78:	cmp	r3, r4
   14c7c:	bcs	14c9c <putchar_unlocked@plt+0x3b08>
   14c80:	and	r7, r5, #192	; 0xc0
   14c84:	mov	r2, #48	; 0x30
   14c88:	orr	r7, r2, r7, lsr #6
   14c8c:	ldr	r6, [sp, #80]	; 0x50
   14c90:	strb	r7, [r6, r3]
   14c94:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14c98:	ldr	r7, [sp, #80]	; 0x50
   14c9c:	add	r3, r8, #2
   14ca0:	cmp	r3, r4
   14ca4:	bcs	14cc4 <putchar_unlocked@plt+0x3b30>
   14ca8:	lsr	r7, r5, #3
   14cac:	mov	r2, #6
   14cb0:	bfi	r7, r2, #3, #29
   14cb4:	ldr	r6, [sp, #80]	; 0x50
   14cb8:	strb	r7, [r6, r3]
   14cbc:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14cc0:	ldr	r7, [sp, #80]	; 0x50
   14cc4:	mov	r2, #6
   14cc8:	bfi	r5, r2, #3, #29
   14ccc:	add	r8, r8, #3
   14cd0:	mov	r3, #1
   14cd4:	b	14d1c <putchar_unlocked@plt+0x3b88>
   14cd8:	ldr	r7, [sp, #80]	; 0x50
   14cdc:	cmp	r8, r4
   14ce0:	strbcc	r5, [r7, r8]
   14ce4:	ldrb	r5, [ip, r1]
   14ce8:	add	r1, r1, #1
   14cec:	add	r8, r8, #1
   14cf0:	tst	r0, #1
   14cf4:	beq	14c08 <putchar_unlocked@plt+0x3a74>
   14cf8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14cfc:	tst	r2, #1
   14d00:	beq	14d14 <putchar_unlocked@plt+0x3b80>
   14d04:	cmp	r8, r4
   14d08:	movcc	r2, #92	; 0x5c
   14d0c:	strbcc	r2, [r7, r8]
   14d10:	add	r8, r8, #1
   14d14:	mov	r2, #0
   14d18:	str	r2, [fp, #-52]	; 0xffffffcc
   14d1c:	and	sl, r3, #1
   14d20:	ldr	r2, [sp, #44]	; 0x2c
   14d24:	cmp	r2, r1
   14d28:	bls	14e34 <putchar_unlocked@plt+0x3ca0>
   14d2c:	cmp	sl, #0
   14d30:	movwne	sl, #1
   14d34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14d38:	mvn	r7, r2
   14d3c:	orr	r7, r7, sl
   14d40:	tst	r7, #1
   14d44:	bne	14cd8 <putchar_unlocked@plt+0x3b44>
   14d48:	cmp	r8, r4
   14d4c:	ldrcc	r7, [sp, #80]	; 0x50
   14d50:	movcc	r2, #39	; 0x27
   14d54:	strbcc	r2, [r7, r8]
   14d58:	add	r7, r8, #1
   14d5c:	cmp	r7, r4
   14d60:	ldrcc	r6, [sp, #80]	; 0x50
   14d64:	movcc	r2, #39	; 0x27
   14d68:	strbcc	r2, [r6, r7]
   14d6c:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   14d70:	add	r8, r8, #2
   14d74:	mov	r2, #0
   14d78:	str	r2, [fp, #-56]	; 0xffffffc8
   14d7c:	b	14cd8 <putchar_unlocked@plt+0x3b44>
   14d80:	cmp	r8, r4
   14d84:	movcc	r0, #39	; 0x27
   14d88:	strbcc	r0, [r7, r8]
   14d8c:	add	r0, r8, #1
   14d90:	cmp	r0, r4
   14d94:	movcc	r1, #36	; 0x24
   14d98:	strbcc	r1, [r7, r0]
   14d9c:	add	r0, r8, #2
   14da0:	cmp	r0, r4
   14da4:	movcc	r1, #39	; 0x27
   14da8:	strbcc	r1, [r7, r0]
   14dac:	add	r0, r8, #3
   14db0:	mov	r2, #1
   14db4:	cmp	r0, r4
   14db8:	movcc	r1, #92	; 0x5c
   14dbc:	strbcc	r1, [r7, r0]
   14dc0:	str	r2, [fp, #-56]	; 0xffffffc8
   14dc4:	add	r8, r0, #1
   14dc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14dcc:	cmp	r1, #2
   14dd0:	beq	14e24 <putchar_unlocked@plt+0x3c90>
   14dd4:	add	r1, r6, #1
   14dd8:	mov	r9, #0
   14ddc:	mov	sl, #1
   14de0:	mov	r5, #48	; 0x30
   14de4:	cmp	r1, lr
   14de8:	bcs	14634 <putchar_unlocked@plt+0x34a0>
   14dec:	ldrb	r1, [ip, r1]
   14df0:	sub	r1, r1, #48	; 0x30
   14df4:	uxtb	r1, r1
   14df8:	cmp	r1, #9
   14dfc:	bhi	14634 <putchar_unlocked@plt+0x34a0>
   14e00:	cmp	r8, r4
   14e04:	movcc	r1, #48	; 0x30
   14e08:	strbcc	r1, [r7, r8]
   14e0c:	add	r1, r0, #2
   14e10:	cmp	r1, r4
   14e14:	movcc	r2, #48	; 0x30
   14e18:	strbcc	r2, [r7, r1]
   14e1c:	add	r8, r0, #3
   14e20:	b	14634 <putchar_unlocked@plt+0x34a0>
   14e24:	mov	r0, #48	; 0x30
   14e28:	mov	sl, #1
   14e2c:	mov	r9, #0
   14e30:	b	148e0 <putchar_unlocked@plt+0x374c>
   14e34:	sub	r6, r1, #1
   14e38:	cmp	sl, #0
   14e3c:	movwne	sl, #1
   14e40:	mov	r0, r5
   14e44:	cmp	sl, #0
   14e48:	bne	14e88 <putchar_unlocked@plt+0x3cf4>
   14e4c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14e50:	tst	r1, #1
   14e54:	beq	14e88 <putchar_unlocked@plt+0x3cf4>
   14e58:	cmp	r8, r4
   14e5c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14e60:	movcc	r1, #39	; 0x27
   14e64:	strbcc	r1, [r7, r8]
   14e68:	add	r1, r8, #1
   14e6c:	cmp	r1, r4
   14e70:	movcc	r2, #39	; 0x27
   14e74:	strbcc	r2, [r7, r1]
   14e78:	add	r8, r8, #2
   14e7c:	mov	r1, #0
   14e80:	str	r1, [fp, #-56]	; 0xffffffc8
   14e84:	b	1496c <putchar_unlocked@plt+0x37d8>
   14e88:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14e8c:	b	1496c <putchar_unlocked@plt+0x37d8>
   14e90:	mov	r9, #0
   14e94:	b	14ed0 <putchar_unlocked@plt+0x3d3c>
   14e98:	mov	r9, #0
   14e9c:	cmp	r7, lr
   14ea0:	bcs	14ed0 <putchar_unlocked@plt+0x3d3c>
   14ea4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ea8:	ldr	r7, [sp, #44]	; 0x2c
   14eac:	ldr	r0, [sp, #20]
   14eb0:	ldrb	r0, [r0, r7]
   14eb4:	cmp	r0, #0
   14eb8:	beq	14ed8 <putchar_unlocked@plt+0x3d44>
   14ebc:	add	r7, r7, #1
   14ec0:	add	r0, r6, r7
   14ec4:	cmp	r0, lr
   14ec8:	bcc	14eac <putchar_unlocked@plt+0x3d18>
   14ecc:	b	14ed8 <putchar_unlocked@plt+0x3d44>
   14ed0:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ed4:	ldr	r7, [sp, #44]	; 0x2c
   14ed8:	mov	r1, r7
   14edc:	ldr	r7, [sp, #80]	; 0x50
   14ee0:	b	14808 <putchar_unlocked@plt+0x3674>
   14ee4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ee8:	eor	r0, r1, #2
   14eec:	orr	r0, r0, r8
   14ef0:	clz	r0, r0
   14ef4:	lsr	r0, r0, #5
   14ef8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14efc:	tst	r2, r0
   14f00:	bne	14fc0 <putchar_unlocked@plt+0x3e2c>
   14f04:	cmp	r1, #2
   14f08:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14f0c:	movwne	r0, #1
   14f10:	orr	r0, r2, r0
   14f14:	tst	r0, #1
   14f18:	ldreq	r0, [sp, #56]	; 0x38
   14f1c:	eoreq	r0, r0, #1
   14f20:	tsteq	r0, #1
   14f24:	bne	14f58 <putchar_unlocked@plt+0x3dc4>
   14f28:	mov	r9, lr
   14f2c:	tst	r5, #1
   14f30:	bne	15028 <putchar_unlocked@plt+0x3e94>
   14f34:	ldr	r0, [sp, #72]	; 0x48
   14f38:	cmp	r0, #0
   14f3c:	beq	14f58 <putchar_unlocked@plt+0x3dc4>
   14f40:	mov	r5, #0
   14f44:	cmp	r4, #0
   14f48:	ldr	r0, [sp, #84]	; 0x54
   14f4c:	mov	sl, r2
   14f50:	ldr	r6, [sp, #72]	; 0x48
   14f54:	beq	140f0 <putchar_unlocked@plt+0x2f5c>
   14f58:	ldr	r1, [sp, #92]	; 0x5c
   14f5c:	clz	r0, r1
   14f60:	lsr	r0, r0, #5
   14f64:	orr	r0, r0, r2
   14f68:	tst	r0, #1
   14f6c:	bne	14f98 <putchar_unlocked@plt+0x3e04>
   14f70:	ldrb	r0, [r1]
   14f74:	cmp	r0, #0
   14f78:	beq	14f98 <putchar_unlocked@plt+0x3e04>
   14f7c:	add	r1, r1, #1
   14f80:	cmp	r8, r4
   14f84:	strbcc	r0, [r7, r8]
   14f88:	add	r8, r8, #1
   14f8c:	ldrb	r0, [r1], #1
   14f90:	cmp	r0, #0
   14f94:	bne	14f80 <putchar_unlocked@plt+0x3dec>
   14f98:	cmp	r8, r4
   14f9c:	movcc	r0, #0
   14fa0:	strbcc	r0, [r7, r8]
   14fa4:	b	1501c <putchar_unlocked@plt+0x3e88>
   14fa8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14fac:	mov	lr, r4
   14fb0:	mov	r4, r5
   14fb4:	b	14fc0 <putchar_unlocked@plt+0x3e2c>
   14fb8:	ldr	r7, [sp, #80]	; 0x50
   14fbc:	ldr	ip, [fp, #-84]	; 0xffffffac
   14fc0:	mov	r0, #0
   14fc4:	ldr	r1, [fp, #12]
   14fc8:	bic	r1, r1, #2
   14fcc:	ldr	r2, [sp, #84]	; 0x54
   14fd0:	tst	r2, #1
   14fd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14fd8:	mov	r2, r3
   14fdc:	movwne	r2, #4
   14fe0:	cmp	r3, #2
   14fe4:	movne	r2, r3
   14fe8:	str	r2, [sp]
   14fec:	str	r1, [sp, #4]
   14ff0:	str	r0, [sp, #8]
   14ff4:	ldr	r0, [sp, #68]	; 0x44
   14ff8:	str	r0, [sp, #12]
   14ffc:	ldr	r0, [sp, #76]	; 0x4c
   15000:	str	r0, [sp, #16]
   15004:	mov	r0, r7
   15008:	mov	r1, r4
   1500c:	mov	r2, ip
   15010:	mov	r3, lr
   15014:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   15018:	mov	r8, r0
   1501c:	mov	r0, r8
   15020:	sub	sp, fp, #28
   15024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15028:	mov	r0, #5
   1502c:	str	r0, [sp]
   15030:	ldr	r0, [fp, #12]
   15034:	str	r0, [sp, #4]
   15038:	ldr	r0, [fp, #16]
   1503c:	str	r0, [sp, #8]
   15040:	ldr	r0, [sp, #68]	; 0x44
   15044:	str	r0, [sp, #12]
   15048:	ldr	r0, [sp, #76]	; 0x4c
   1504c:	str	r0, [sp, #16]
   15050:	mov	r0, r7
   15054:	ldr	r1, [sp, #72]	; 0x48
   15058:	ldr	r2, [fp, #-84]	; 0xffffffac
   1505c:	mov	r3, r9
   15060:	b	15014 <putchar_unlocked@plt+0x3e80>
   15064:	bl	11164 <abort@plt>
   15068:	mov	r3, r2
   1506c:	mov	r2, #0
   15070:	b	15074 <putchar_unlocked@plt+0x3ee0>
   15074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15078:	add	fp, sp, #28
   1507c:	sub	sp, sp, #36	; 0x24
   15080:	mov	r4, r2
   15084:	str	r2, [sp, #24]
   15088:	mov	r5, r1
   1508c:	mov	r6, r0
   15090:	str	r0, [sp, #20]
   15094:	movw	r8, #37264	; 0x9190
   15098:	movt	r8, #2
   1509c:	cmp	r3, #0
   150a0:	movne	r8, r3
   150a4:	bl	11080 <__errno_location@plt>
   150a8:	str	r0, [sp, #28]
   150ac:	ldm	r8, {r3, r9}
   150b0:	ldr	r1, [r8, #40]	; 0x28
   150b4:	ldr	r2, [r8, #44]	; 0x2c
   150b8:	ldr	r7, [r0]
   150bc:	str	r7, [sp, #32]
   150c0:	add	sl, r8, #8
   150c4:	cmp	r4, #0
   150c8:	orreq	r9, r9, #1
   150cc:	stm	sp, {r3, r9, sl}
   150d0:	str	r1, [sp, #12]
   150d4:	str	r2, [sp, #16]
   150d8:	mov	r0, #0
   150dc:	mov	r1, #0
   150e0:	mov	r2, r6
   150e4:	mov	r3, r5
   150e8:	mov	r7, r5
   150ec:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   150f0:	mov	r5, r0
   150f4:	add	r4, r0, #1
   150f8:	mov	r0, r4
   150fc:	bl	15f84 <putchar_unlocked@plt+0x4df0>
   15100:	mov	r6, r0
   15104:	ldr	r0, [r8]
   15108:	ldr	r1, [r8, #40]	; 0x28
   1510c:	ldr	r2, [r8, #44]	; 0x2c
   15110:	stm	sp, {r0, r9, sl}
   15114:	str	r1, [sp, #12]
   15118:	str	r2, [sp, #16]
   1511c:	mov	r0, r6
   15120:	mov	r1, r4
   15124:	ldr	r2, [sp, #20]
   15128:	mov	r3, r7
   1512c:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   15130:	ldr	r0, [sp, #24]
   15134:	ldr	r1, [sp, #32]
   15138:	ldr	r2, [sp, #28]
   1513c:	str	r1, [r2]
   15140:	cmp	r0, #0
   15144:	strne	r5, [r0]
   15148:	mov	r0, r6
   1514c:	sub	sp, fp, #28
   15150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15154:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15158:	add	fp, sp, #24
   1515c:	movw	r8, #37136	; 0x9110
   15160:	movt	r8, #2
   15164:	ldr	r4, [r8]
   15168:	movw	r5, #37140	; 0x9114
   1516c:	movt	r5, #2
   15170:	ldr	r0, [r5]
   15174:	cmp	r0, #2
   15178:	blt	151a4 <putchar_unlocked@plt+0x4010>
   1517c:	add	r7, r4, #12
   15180:	mov	r6, #0
   15184:	ldr	r0, [r7, r6, lsl #3]
   15188:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   1518c:	add	r0, r6, #1
   15190:	ldr	r1, [r5]
   15194:	add	r2, r6, #2
   15198:	cmp	r2, r1
   1519c:	mov	r6, r0
   151a0:	blt	15184 <putchar_unlocked@plt+0x3ff0>
   151a4:	ldr	r0, [r4, #4]
   151a8:	movw	r7, #37312	; 0x91c0
   151ac:	movt	r7, #2
   151b0:	cmp	r0, r7
   151b4:	beq	151cc <putchar_unlocked@plt+0x4038>
   151b8:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   151bc:	movw	r0, #37144	; 0x9118
   151c0:	movt	r0, #2
   151c4:	mov	r6, #256	; 0x100
   151c8:	strd	r6, [r0]
   151cc:	movw	r6, #37144	; 0x9118
   151d0:	movt	r6, #2
   151d4:	cmp	r4, r6
   151d8:	beq	151e8 <putchar_unlocked@plt+0x4054>
   151dc:	mov	r0, r4
   151e0:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   151e4:	str	r6, [r8]
   151e8:	mov	r0, #1
   151ec:	str	r0, [r5]
   151f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   151f4:	movw	r3, #37264	; 0x9190
   151f8:	movt	r3, #2
   151fc:	mvn	r2, #0
   15200:	b	15204 <putchar_unlocked@plt+0x4070>
   15204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15208:	add	fp, sp, #28
   1520c:	sub	sp, sp, #44	; 0x2c
   15210:	mov	r7, r3
   15214:	str	r2, [sp, #36]	; 0x24
   15218:	str	r1, [sp, #32]
   1521c:	mov	r5, r0
   15220:	bl	11080 <__errno_location@plt>
   15224:	cmp	r5, #0
   15228:	blt	15394 <putchar_unlocked@plt+0x4200>
   1522c:	cmn	r5, #-2147483647	; 0x80000001
   15230:	beq	15394 <putchar_unlocked@plt+0x4200>
   15234:	movw	r4, #37136	; 0x9110
   15238:	movt	r4, #2
   1523c:	ldr	r6, [r4]
   15240:	str	r0, [sp, #28]
   15244:	ldr	r0, [r0]
   15248:	str	r0, [sp, #24]
   1524c:	movw	r8, #37140	; 0x9114
   15250:	movt	r8, #2
   15254:	ldr	r1, [r8]
   15258:	cmp	r1, r5
   1525c:	ble	15268 <putchar_unlocked@plt+0x40d4>
   15260:	mov	sl, r6
   15264:	b	152d0 <putchar_unlocked@plt+0x413c>
   15268:	str	r1, [fp, #-32]	; 0xffffffe0
   1526c:	mov	r0, #8
   15270:	str	r0, [sp]
   15274:	movw	r9, #37144	; 0x9118
   15278:	movt	r9, #2
   1527c:	subs	r0, r6, r9
   15280:	movne	r0, r6
   15284:	add	r2, r5, #1
   15288:	sub	r2, r2, r1
   1528c:	sub	r1, fp, #32
   15290:	mvn	r3, #-2147483648	; 0x80000000
   15294:	bl	1606c <putchar_unlocked@plt+0x4ed8>
   15298:	mov	sl, r0
   1529c:	str	r0, [r4]
   152a0:	cmp	r6, r9
   152a4:	ldrdeq	r0, [r9]
   152a8:	stmeq	sl, {r0, r1}
   152ac:	ldr	r1, [r8]
   152b0:	add	r0, sl, r1, lsl #3
   152b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   152b8:	sub	r1, r2, r1
   152bc:	lsl	r2, r1, #3
   152c0:	mov	r1, #0
   152c4:	bl	110a4 <memset@plt>
   152c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   152cc:	str	r0, [r8]
   152d0:	mov	r9, sl
   152d4:	ldr	r6, [r9, r5, lsl #3]!
   152d8:	ldr	r4, [r9, #4]!
   152dc:	ldm	r7, {r0, r1}
   152e0:	ldr	r2, [r7, #40]	; 0x28
   152e4:	ldr	r3, [r7, #44]	; 0x2c
   152e8:	orr	r8, r1, #1
   152ec:	add	r1, r7, #8
   152f0:	stm	sp, {r0, r8}
   152f4:	str	r1, [sp, #20]
   152f8:	add	r0, sp, #8
   152fc:	stm	r0, {r1, r2, r3}
   15300:	mov	r0, r4
   15304:	mov	r1, r6
   15308:	ldr	r2, [sp, #32]
   1530c:	ldr	r3, [sp, #36]	; 0x24
   15310:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   15314:	cmp	r6, r0
   15318:	bhi	1537c <putchar_unlocked@plt+0x41e8>
   1531c:	add	r6, r0, #1
   15320:	str	r6, [sl, r5, lsl #3]
   15324:	movw	r0, #37312	; 0x91c0
   15328:	movt	r0, #2
   1532c:	cmp	r4, r0
   15330:	beq	1533c <putchar_unlocked@plt+0x41a8>
   15334:	mov	r0, r4
   15338:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   1533c:	mov	r0, r6
   15340:	bl	15f84 <putchar_unlocked@plt+0x4df0>
   15344:	mov	r4, r0
   15348:	str	r0, [r9]
   1534c:	ldr	r0, [r7]
   15350:	ldr	r1, [r7, #40]	; 0x28
   15354:	ldr	r2, [r7, #44]	; 0x2c
   15358:	stm	sp, {r0, r8}
   1535c:	ldr	r0, [sp, #20]
   15360:	add	r3, sp, #8
   15364:	stm	r3, {r0, r1, r2}
   15368:	mov	r0, r4
   1536c:	mov	r1, r6
   15370:	ldr	r2, [sp, #32]
   15374:	ldr	r3, [sp, #36]	; 0x24
   15378:	bl	14068 <putchar_unlocked@plt+0x2ed4>
   1537c:	ldr	r0, [sp, #28]
   15380:	ldr	r1, [sp, #24]
   15384:	str	r1, [r0]
   15388:	mov	r0, r4
   1538c:	sub	sp, fp, #28
   15390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15394:	bl	11164 <abort@plt>
   15398:	movw	r3, #37264	; 0x9190
   1539c:	movt	r3, #2
   153a0:	b	15204 <putchar_unlocked@plt+0x4070>
   153a4:	mov	r1, r0
   153a8:	mov	r0, #0
   153ac:	b	151f4 <putchar_unlocked@plt+0x4060>
   153b0:	mov	r2, r1
   153b4:	mov	r1, r0
   153b8:	mov	r0, #0
   153bc:	b	15398 <putchar_unlocked@plt+0x4204>
   153c0:	push	{r4, r5, r6, sl, fp, lr}
   153c4:	add	fp, sp, #16
   153c8:	sub	sp, sp, #48	; 0x30
   153cc:	mov	r4, r2
   153d0:	mov	r5, r0
   153d4:	mov	r6, sp
   153d8:	mov	r0, r6
   153dc:	bl	153fc <putchar_unlocked@plt+0x4268>
   153e0:	mov	r0, r5
   153e4:	mov	r1, r4
   153e8:	mvn	r2, #0
   153ec:	mov	r3, r6
   153f0:	bl	15204 <putchar_unlocked@plt+0x4070>
   153f4:	sub	sp, fp, #16
   153f8:	pop	{r4, r5, r6, sl, fp, pc}
   153fc:	vmov.i32	q8, #0	; 0x00000000
   15400:	mov	r2, #32
   15404:	mov	r3, r0
   15408:	vst1.32	{d16-d17}, [r3], r2
   1540c:	vst1.32	{d16-d17}, [r3]
   15410:	add	r2, r0, #16
   15414:	vst1.32	{d16-d17}, [r2]
   15418:	cmp	r1, #10
   1541c:	strne	r1, [r0]
   15420:	bxne	lr
   15424:	push	{fp, lr}
   15428:	mov	fp, sp
   1542c:	bl	11164 <abort@plt>
   15430:	push	{r4, r5, r6, r7, fp, lr}
   15434:	add	fp, sp, #16
   15438:	sub	sp, sp, #48	; 0x30
   1543c:	mov	r4, r3
   15440:	mov	r5, r2
   15444:	mov	r6, r0
   15448:	mov	r7, sp
   1544c:	mov	r0, r7
   15450:	bl	153fc <putchar_unlocked@plt+0x4268>
   15454:	mov	r0, r6
   15458:	mov	r1, r5
   1545c:	mov	r2, r4
   15460:	mov	r3, r7
   15464:	bl	15204 <putchar_unlocked@plt+0x4070>
   15468:	sub	sp, fp, #16
   1546c:	pop	{r4, r5, r6, r7, fp, pc}
   15470:	mov	r2, r1
   15474:	mov	r1, r0
   15478:	mov	r0, #0
   1547c:	b	153c0 <putchar_unlocked@plt+0x422c>
   15480:	mov	r3, r2
   15484:	mov	r2, r1
   15488:	mov	r1, r0
   1548c:	mov	r0, #0
   15490:	b	15430 <putchar_unlocked@plt+0x429c>
   15494:	push	{r4, r5, r6, sl, fp, lr}
   15498:	add	fp, sp, #16
   1549c:	sub	sp, sp, #48	; 0x30
   154a0:	mov	r4, r1
   154a4:	mov	r5, r0
   154a8:	mov	r0, #32
   154ac:	movw	r1, #37264	; 0x9190
   154b0:	movt	r1, #2
   154b4:	add	r3, r1, #16
   154b8:	vld1.64	{d16-d17}, [r1], r0
   154bc:	mov	r6, sp
   154c0:	vld1.64	{d18-d19}, [r3]
   154c4:	add	r3, r6, #16
   154c8:	vld1.64	{d20-d21}, [r1]
   154cc:	vst1.64	{d18-d19}, [r3]
   154d0:	mov	r1, r6
   154d4:	vst1.64	{d16-d17}, [r1], r0
   154d8:	vst1.64	{d20-d21}, [r1]
   154dc:	mov	r0, r6
   154e0:	mov	r1, r2
   154e4:	mov	r2, #1
   154e8:	bl	13f5c <putchar_unlocked@plt+0x2dc8>
   154ec:	mov	r0, #0
   154f0:	mov	r1, r5
   154f4:	mov	r2, r4
   154f8:	mov	r3, r6
   154fc:	bl	15204 <putchar_unlocked@plt+0x4070>
   15500:	sub	sp, fp, #16
   15504:	pop	{r4, r5, r6, sl, fp, pc}
   15508:	mov	r2, r1
   1550c:	mvn	r1, #0
   15510:	b	15494 <putchar_unlocked@plt+0x4300>
   15514:	mov	r1, #58	; 0x3a
   15518:	b	15508 <putchar_unlocked@plt+0x4374>
   1551c:	mov	r2, #58	; 0x3a
   15520:	b	15494 <putchar_unlocked@plt+0x4300>
   15524:	push	{r4, r5, r6, sl, fp, lr}
   15528:	add	fp, sp, #16
   1552c:	sub	sp, sp, #48	; 0x30
   15530:	mov	r4, r2
   15534:	mov	r5, r0
   15538:	mov	r6, sp
   1553c:	mov	r0, r6
   15540:	bl	153fc <putchar_unlocked@plt+0x4268>
   15544:	mov	r0, r6
   15548:	mov	r1, #58	; 0x3a
   1554c:	mov	r2, #1
   15550:	bl	13f5c <putchar_unlocked@plt+0x2dc8>
   15554:	mov	r0, r5
   15558:	mov	r1, r4
   1555c:	mvn	r2, #0
   15560:	mov	r3, r6
   15564:	bl	15204 <putchar_unlocked@plt+0x4070>
   15568:	sub	sp, fp, #16
   1556c:	pop	{r4, r5, r6, sl, fp, pc}
   15570:	push	{fp, lr}
   15574:	mov	fp, sp
   15578:	sub	sp, sp, #8
   1557c:	mvn	ip, #0
   15580:	str	ip, [sp]
   15584:	bl	15590 <putchar_unlocked@plt+0x43fc>
   15588:	mov	sp, fp
   1558c:	pop	{fp, pc}
   15590:	push	{r4, r5, r6, r7, fp, lr}
   15594:	add	fp, sp, #16
   15598:	sub	sp, sp, #48	; 0x30
   1559c:	mov	r7, r3
   155a0:	mov	r5, r0
   155a4:	mov	r0, #32
   155a8:	movw	r3, #37264	; 0x9190
   155ac:	movt	r3, #2
   155b0:	add	r4, r3, #16
   155b4:	vld1.64	{d16-d17}, [r3], r0
   155b8:	mov	r6, sp
   155bc:	vld1.64	{d18-d19}, [r4]
   155c0:	add	r4, r6, #16
   155c4:	vld1.64	{d20-d21}, [r3]
   155c8:	vst1.64	{d18-d19}, [r4]
   155cc:	mov	r3, r6
   155d0:	vst1.64	{d16-d17}, [r3], r0
   155d4:	vst1.64	{d20-d21}, [r3]
   155d8:	mov	r0, r6
   155dc:	bl	13fb4 <putchar_unlocked@plt+0x2e20>
   155e0:	ldr	r2, [fp, #8]
   155e4:	mov	r0, r5
   155e8:	mov	r1, r7
   155ec:	mov	r3, r6
   155f0:	bl	15204 <putchar_unlocked@plt+0x4070>
   155f4:	sub	sp, fp, #16
   155f8:	pop	{r4, r5, r6, r7, fp, pc}
   155fc:	mov	r3, r2
   15600:	mov	r2, r1
   15604:	mov	r1, r0
   15608:	mov	r0, #0
   1560c:	b	15570 <putchar_unlocked@plt+0x43dc>
   15610:	push	{fp, lr}
   15614:	mov	fp, sp
   15618:	sub	sp, sp, #8
   1561c:	mov	ip, r2
   15620:	mov	r2, r1
   15624:	mov	r1, r0
   15628:	str	r3, [sp]
   1562c:	mov	r0, #0
   15630:	mov	r3, ip
   15634:	bl	15590 <putchar_unlocked@plt+0x43fc>
   15638:	mov	sp, fp
   1563c:	pop	{fp, pc}
   15640:	movw	r3, #37152	; 0x9120
   15644:	movt	r3, #2
   15648:	b	15204 <putchar_unlocked@plt+0x4070>
   1564c:	mov	r2, r1
   15650:	mov	r1, r0
   15654:	mov	r0, #0
   15658:	b	15640 <putchar_unlocked@plt+0x44ac>
   1565c:	mvn	r2, #0
   15660:	b	15640 <putchar_unlocked@plt+0x44ac>
   15664:	mov	r1, r0
   15668:	mov	r0, #0
   1566c:	b	1565c <putchar_unlocked@plt+0x44c8>
   15670:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15674:	add	fp, sp, #24
   15678:	sub	sp, sp, #16
   1567c:	mov	r4, r1
   15680:	mov	r5, r0
   15684:	mov	r7, #0
   15688:	mov	r0, #0
   1568c:	mov	r1, r5
   15690:	mov	r2, #5
   15694:	bl	10f84 <dcgettext@plt>
   15698:	cmp	r0, r5
   1569c:	beq	156a8 <putchar_unlocked@plt+0x4514>
   156a0:	sub	sp, fp, #24
   156a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156a8:	bl	169f4 <putchar_unlocked@plt+0x5860>
   156ac:	mov	r6, r0
   156b0:	mov	r8, #56	; 0x38
   156b4:	mov	r0, #45	; 0x2d
   156b8:	stm	sp, {r0, r8}
   156bc:	str	r7, [sp, #8]
   156c0:	str	r7, [sp, #12]
   156c4:	mov	r0, r6
   156c8:	mov	r1, #85	; 0x55
   156cc:	mov	r2, #84	; 0x54
   156d0:	mov	r3, #70	; 0x46
   156d4:	bl	1576c <putchar_unlocked@plt+0x45d8>
   156d8:	cmp	r0, #0
   156dc:	beq	156f8 <putchar_unlocked@plt+0x4564>
   156e0:	ldrb	r1, [r5]
   156e4:	movw	r2, #31632	; 0x7b90
   156e8:	movt	r2, #1
   156ec:	movw	r0, #31636	; 0x7b94
   156f0:	movt	r0, #1
   156f4:	b	1573c <putchar_unlocked@plt+0x45a8>
   156f8:	mov	r0, #48	; 0x30
   156fc:	mov	r1, #51	; 0x33
   15700:	str	r8, [sp]
   15704:	stmib	sp, {r0, r1}
   15708:	str	r0, [sp, #12]
   1570c:	mov	r0, r6
   15710:	mov	r1, #71	; 0x47
   15714:	mov	r2, #66	; 0x42
   15718:	mov	r3, #49	; 0x31
   1571c:	bl	1576c <putchar_unlocked@plt+0x45d8>
   15720:	cmp	r0, #0
   15724:	beq	1574c <putchar_unlocked@plt+0x45b8>
   15728:	ldrb	r1, [r5]
   1572c:	movw	r2, #31640	; 0x7b98
   15730:	movt	r2, #1
   15734:	movw	r0, #31644	; 0x7b9c
   15738:	movt	r0, #1
   1573c:	cmp	r1, #96	; 0x60
   15740:	moveq	r0, r2
   15744:	sub	sp, fp, #24
   15748:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1574c:	movw	r1, #31626	; 0x7b8a
   15750:	movt	r1, #1
   15754:	movw	r0, #31630	; 0x7b8e
   15758:	movt	r0, #1
   1575c:	cmp	r4, #9
   15760:	moveq	r0, r1
   15764:	sub	sp, fp, #24
   15768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1576c:	push	{r4, r5, r6, r7, fp, lr}
   15770:	add	fp, sp, #16
   15774:	sub	sp, sp, #16
   15778:	mov	r4, r3
   1577c:	mov	r5, r2
   15780:	mov	r7, r1
   15784:	mov	r6, r0
   15788:	mov	r0, r1
   1578c:	bl	166c8 <putchar_unlocked@plt+0x5534>
   15790:	ldrb	r1, [r6]
   15794:	cmp	r0, #0
   15798:	andne	r1, r1, #223	; 0xdf
   1579c:	mov	r0, #0
   157a0:	cmp	r1, r7
   157a4:	bne	157e4 <putchar_unlocked@plt+0x4650>
   157a8:	cmp	r7, #0
   157ac:	moveq	r0, #1
   157b0:	subeq	sp, fp, #16
   157b4:	popeq	{r4, r5, r6, r7, fp, pc}
   157b8:	ldr	r0, [fp, #20]
   157bc:	ldr	r1, [fp, #16]
   157c0:	ldr	r2, [fp, #12]
   157c4:	ldr	r3, [fp, #8]
   157c8:	str	r2, [sp]
   157cc:	str	r1, [sp, #4]
   157d0:	str	r0, [sp, #8]
   157d4:	mov	r0, r6
   157d8:	mov	r1, r5
   157dc:	mov	r2, r4
   157e0:	bl	157ec <putchar_unlocked@plt+0x4658>
   157e4:	sub	sp, fp, #16
   157e8:	pop	{r4, r5, r6, r7, fp, pc}
   157ec:	push	{r4, r5, r6, r7, fp, lr}
   157f0:	add	fp, sp, #16
   157f4:	sub	sp, sp, #8
   157f8:	mov	r4, r3
   157fc:	mov	r5, r2
   15800:	mov	r7, r1
   15804:	mov	r6, r0
   15808:	mov	r0, r1
   1580c:	bl	166c8 <putchar_unlocked@plt+0x5534>
   15810:	ldrb	r1, [r6, #1]
   15814:	cmp	r0, #0
   15818:	andne	r1, r1, #223	; 0xdf
   1581c:	mov	r0, #0
   15820:	cmp	r1, r7
   15824:	bne	1585c <putchar_unlocked@plt+0x46c8>
   15828:	cmp	r7, #0
   1582c:	moveq	r0, #1
   15830:	subeq	sp, fp, #16
   15834:	popeq	{r4, r5, r6, r7, fp, pc}
   15838:	ldr	r0, [fp, #16]
   1583c:	ldr	r1, [fp, #12]
   15840:	ldr	r3, [fp, #8]
   15844:	str	r1, [sp]
   15848:	str	r0, [sp, #4]
   1584c:	mov	r0, r6
   15850:	mov	r1, r5
   15854:	mov	r2, r4
   15858:	bl	15864 <putchar_unlocked@plt+0x46d0>
   1585c:	sub	sp, fp, #16
   15860:	pop	{r4, r5, r6, r7, fp, pc}
   15864:	push	{r4, r5, r6, r7, fp, lr}
   15868:	add	fp, sp, #16
   1586c:	sub	sp, sp, #8
   15870:	mov	r4, r3
   15874:	mov	r5, r2
   15878:	mov	r7, r1
   1587c:	mov	r6, r0
   15880:	mov	r0, r1
   15884:	bl	166c8 <putchar_unlocked@plt+0x5534>
   15888:	ldrb	r1, [r6, #2]
   1588c:	cmp	r0, #0
   15890:	andne	r1, r1, #223	; 0xdf
   15894:	mov	r0, #0
   15898:	cmp	r1, r7
   1589c:	bne	158cc <putchar_unlocked@plt+0x4738>
   158a0:	cmp	r7, #0
   158a4:	moveq	r0, #1
   158a8:	subeq	sp, fp, #16
   158ac:	popeq	{r4, r5, r6, r7, fp, pc}
   158b0:	ldr	r0, [fp, #12]
   158b4:	ldr	r3, [fp, #8]
   158b8:	str	r0, [sp]
   158bc:	mov	r0, r6
   158c0:	mov	r1, r5
   158c4:	mov	r2, r4
   158c8:	bl	158d4 <putchar_unlocked@plt+0x4740>
   158cc:	sub	sp, fp, #16
   158d0:	pop	{r4, r5, r6, r7, fp, pc}
   158d4:	push	{r4, r5, r6, r7, fp, lr}
   158d8:	add	fp, sp, #16
   158dc:	mov	r4, r3
   158e0:	mov	r5, r2
   158e4:	mov	r7, r1
   158e8:	mov	r6, r0
   158ec:	mov	r0, r1
   158f0:	bl	166c8 <putchar_unlocked@plt+0x5534>
   158f4:	ldrb	r1, [r6, #3]
   158f8:	ldr	r3, [fp, #8]
   158fc:	cmp	r0, #0
   15900:	andne	r1, r1, #223	; 0xdf
   15904:	mov	r0, #0
   15908:	cmp	r1, r7
   1590c:	popne	{r4, r5, r6, r7, fp, pc}
   15910:	cmp	r7, #0
   15914:	beq	1592c <putchar_unlocked@plt+0x4798>
   15918:	mov	r0, r6
   1591c:	mov	r1, r5
   15920:	mov	r2, r4
   15924:	pop	{r4, r5, r6, r7, fp, lr}
   15928:	b	15934 <putchar_unlocked@plt+0x47a0>
   1592c:	mov	r0, #1
   15930:	pop	{r4, r5, r6, r7, fp, pc}
   15934:	push	{r4, r5, r6, r7, fp, lr}
   15938:	add	fp, sp, #16
   1593c:	mov	r4, r3
   15940:	mov	r5, r2
   15944:	mov	r7, r1
   15948:	mov	r6, r0
   1594c:	mov	r0, r1
   15950:	bl	166c8 <putchar_unlocked@plt+0x5534>
   15954:	ldrb	r1, [r6, #4]
   15958:	cmp	r0, #0
   1595c:	andne	r1, r1, #223	; 0xdf
   15960:	mov	r0, #0
   15964:	cmp	r1, r7
   15968:	popne	{r4, r5, r6, r7, fp, pc}
   1596c:	cmp	r7, #0
   15970:	beq	15988 <putchar_unlocked@plt+0x47f4>
   15974:	mov	r0, r6
   15978:	mov	r1, r5
   1597c:	mov	r2, r4
   15980:	pop	{r4, r5, r6, r7, fp, lr}
   15984:	b	15990 <putchar_unlocked@plt+0x47fc>
   15988:	mov	r0, #1
   1598c:	pop	{r4, r5, r6, r7, fp, pc}
   15990:	push	{r4, r5, r6, sl, fp, lr}
   15994:	add	fp, sp, #16
   15998:	mov	r4, r2
   1599c:	mov	r6, r1
   159a0:	mov	r5, r0
   159a4:	mov	r0, r1
   159a8:	bl	166c8 <putchar_unlocked@plt+0x5534>
   159ac:	ldrb	r1, [r5, #5]
   159b0:	cmp	r0, #0
   159b4:	andne	r1, r1, #223	; 0xdf
   159b8:	mov	r0, #0
   159bc:	cmp	r1, r6
   159c0:	popne	{r4, r5, r6, sl, fp, pc}
   159c4:	cmp	r6, #0
   159c8:	beq	159dc <putchar_unlocked@plt+0x4848>
   159cc:	mov	r0, r5
   159d0:	mov	r1, r4
   159d4:	pop	{r4, r5, r6, sl, fp, lr}
   159d8:	b	159e4 <putchar_unlocked@plt+0x4850>
   159dc:	mov	r0, #1
   159e0:	pop	{r4, r5, r6, sl, fp, pc}
   159e4:	push	{r4, r5, fp, lr}
   159e8:	add	fp, sp, #8
   159ec:	mov	r5, r1
   159f0:	mov	r4, r0
   159f4:	mov	r0, r1
   159f8:	bl	166c8 <putchar_unlocked@plt+0x5534>
   159fc:	ldrb	r1, [r4, #6]
   15a00:	cmp	r0, #0
   15a04:	andne	r1, r1, #223	; 0xdf
   15a08:	mov	r0, #0
   15a0c:	cmp	r1, r5
   15a10:	popne	{r4, r5, fp, pc}
   15a14:	cmp	r5, #0
   15a18:	beq	15a28 <putchar_unlocked@plt+0x4894>
   15a1c:	mov	r0, r4
   15a20:	pop	{r4, r5, fp, lr}
   15a24:	b	15a30 <putchar_unlocked@plt+0x489c>
   15a28:	mov	r0, #1
   15a2c:	pop	{r4, r5, fp, pc}
   15a30:	push	{r4, sl, fp, lr}
   15a34:	add	fp, sp, #8
   15a38:	mov	r4, r0
   15a3c:	mov	r0, #0
   15a40:	bl	166c8 <putchar_unlocked@plt+0x5534>
   15a44:	ldrb	r1, [r4, #7]
   15a48:	cmp	r0, #0
   15a4c:	beq	15a64 <putchar_unlocked@plt+0x48d0>
   15a50:	tst	r1, #223	; 0xdf
   15a54:	moveq	r0, #1
   15a58:	popeq	{r4, sl, fp, pc}
   15a5c:	mov	r0, #0
   15a60:	pop	{r4, sl, fp, pc}
   15a64:	cmp	r1, #0
   15a68:	moveq	r0, #1
   15a6c:	popeq	{r4, sl, fp, pc}
   15a70:	mov	r0, #0
   15a74:	pop	{r4, sl, fp, pc}
   15a78:	mov	r1, #0
   15a7c:	mov	r2, #3
   15a80:	b	167c0 <putchar_unlocked@plt+0x562c>
   15a84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a88:	add	fp, sp, #24
   15a8c:	sub	sp, sp, #32
   15a90:	mov	r4, r2
   15a94:	mov	r8, r0
   15a98:	ldr	r6, [fp, #12]
   15a9c:	ldr	r7, [fp, #8]
   15aa0:	cmp	r1, #0
   15aa4:	beq	15acc <putchar_unlocked@plt+0x4938>
   15aa8:	mov	r5, r1
   15aac:	str	r4, [sp]
   15ab0:	str	r3, [sp, #4]
   15ab4:	movw	r2, #31732	; 0x7bf4
   15ab8:	movt	r2, #1
   15abc:	mov	r0, r8
   15ac0:	mov	r1, #1
   15ac4:	mov	r3, r5
   15ac8:	b	15ae4 <putchar_unlocked@plt+0x4950>
   15acc:	str	r3, [sp]
   15ad0:	movw	r2, #31744	; 0x7c00
   15ad4:	movt	r2, #1
   15ad8:	mov	r0, r8
   15adc:	mov	r1, #1
   15ae0:	mov	r3, r4
   15ae4:	bl	110c8 <__fprintf_chk@plt>
   15ae8:	movw	r1, #31751	; 0x7c07
   15aec:	movt	r1, #1
   15af0:	mov	r0, #0
   15af4:	mov	r2, #5
   15af8:	bl	10f84 <dcgettext@plt>
   15afc:	mov	r3, r0
   15b00:	movw	r0, #2022	; 0x7e6
   15b04:	str	r0, [sp]
   15b08:	movw	r2, #32469	; 0x7ed5
   15b0c:	movt	r2, #1
   15b10:	mov	r0, r8
   15b14:	mov	r1, #1
   15b18:	bl	110c8 <__fprintf_chk@plt>
   15b1c:	movw	r4, #29015	; 0x7157
   15b20:	movt	r4, #1
   15b24:	mov	r0, r4
   15b28:	mov	r1, r8
   15b2c:	bl	10f0c <fputs_unlocked@plt>
   15b30:	movw	r1, #31755	; 0x7c0b
   15b34:	movt	r1, #1
   15b38:	mov	r0, #0
   15b3c:	mov	r2, #5
   15b40:	bl	10f84 <dcgettext@plt>
   15b44:	mov	r2, r0
   15b48:	movw	r3, #31926	; 0x7cb6
   15b4c:	movt	r3, #1
   15b50:	mov	r0, r8
   15b54:	mov	r1, #1
   15b58:	bl	110c8 <__fprintf_chk@plt>
   15b5c:	mov	r0, r4
   15b60:	mov	r1, r8
   15b64:	bl	10f0c <fputs_unlocked@plt>
   15b68:	cmp	r6, #9
   15b6c:	bhi	15ba8 <putchar_unlocked@plt+0x4a14>
   15b70:	add	r0, pc, #0
   15b74:	ldr	pc, [r0, r6, lsl #2]
   15b78:	andeq	r5, r1, r0, lsr #23
   15b7c:			; <UNDEFINED> instruction: 0x00015bb4
   15b80:	andeq	r5, r1, r4, ror #23
   15b84:	andeq	r5, r1, ip, lsl #24
   15b88:	andeq	r5, r1, r4, lsr ip
   15b8c:	andeq	r5, r1, ip, asr ip
   15b90:	andeq	r5, r1, r4, lsl #25
   15b94:			; <UNDEFINED> instruction: 0x00015cbc
   15b98:	andeq	r5, r1, ip, asr sp
   15b9c:	andeq	r5, r1, r4, lsl #26
   15ba0:	sub	sp, fp, #24
   15ba4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ba8:	movw	r1, #32279	; 0x7e17
   15bac:	movt	r1, #1
   15bb0:	b	15d0c <putchar_unlocked@plt+0x4b78>
   15bb4:	movw	r1, #31960	; 0x7cd8
   15bb8:	movt	r1, #1
   15bbc:	mov	r0, #0
   15bc0:	mov	r2, #5
   15bc4:	bl	10f84 <dcgettext@plt>
   15bc8:	mov	r2, r0
   15bcc:	ldr	r3, [r7]
   15bd0:	mov	r0, r8
   15bd4:	mov	r1, #1
   15bd8:	sub	sp, fp, #24
   15bdc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15be0:	b	110c8 <__fprintf_chk@plt>
   15be4:	movw	r1, #31976	; 0x7ce8
   15be8:	movt	r1, #1
   15bec:	mov	r0, #0
   15bf0:	mov	r2, #5
   15bf4:	bl	10f84 <dcgettext@plt>
   15bf8:	mov	r2, r0
   15bfc:	ldr	r3, [r7]
   15c00:	ldr	r0, [r7, #4]
   15c04:	str	r0, [sp]
   15c08:	b	15cf8 <putchar_unlocked@plt+0x4b64>
   15c0c:	movw	r1, #31999	; 0x7cff
   15c10:	movt	r1, #1
   15c14:	mov	r0, #0
   15c18:	mov	r2, #5
   15c1c:	bl	10f84 <dcgettext@plt>
   15c20:	mov	r2, r0
   15c24:	ldr	r3, [r7]
   15c28:	ldmib	r7, {r0, r1}
   15c2c:	stm	sp, {r0, r1}
   15c30:	b	15cf8 <putchar_unlocked@plt+0x4b64>
   15c34:	movw	r1, #32027	; 0x7d1b
   15c38:	movt	r1, #1
   15c3c:	mov	r0, #0
   15c40:	mov	r2, #5
   15c44:	bl	10f84 <dcgettext@plt>
   15c48:	mov	r2, r0
   15c4c:	ldr	r3, [r7]
   15c50:	ldmib	r7, {r0, r1, r7}
   15c54:	stm	sp, {r0, r1, r7}
   15c58:	b	15cf8 <putchar_unlocked@plt+0x4b64>
   15c5c:	movw	r1, #32059	; 0x7d3b
   15c60:	movt	r1, #1
   15c64:	mov	r0, #0
   15c68:	mov	r2, #5
   15c6c:	bl	10f84 <dcgettext@plt>
   15c70:	mov	r2, r0
   15c74:	ldr	r3, [r7]
   15c78:	ldmib	r7, {r0, r1, r6, r7}
   15c7c:	stm	sp, {r0, r1, r6, r7}
   15c80:	b	15cf8 <putchar_unlocked@plt+0x4b64>
   15c84:	movw	r1, #32095	; 0x7d5f
   15c88:	movt	r1, #1
   15c8c:	mov	r0, #0
   15c90:	mov	r2, #5
   15c94:	bl	10f84 <dcgettext@plt>
   15c98:	mov	r2, r0
   15c9c:	ldr	r3, [r7]
   15ca0:	ldmib	r7, {r0, r1, r6}
   15ca4:	ldr	r5, [r7, #16]
   15ca8:	ldr	r7, [r7, #20]
   15cac:	stm	sp, {r0, r1, r6}
   15cb0:	str	r5, [sp, #12]
   15cb4:	str	r7, [sp, #16]
   15cb8:	b	15cf8 <putchar_unlocked@plt+0x4b64>
   15cbc:	movw	r1, #32135	; 0x7d87
   15cc0:	movt	r1, #1
   15cc4:	mov	r0, #0
   15cc8:	mov	r2, #5
   15ccc:	bl	10f84 <dcgettext@plt>
   15cd0:	mov	r2, r0
   15cd4:	ldr	r3, [r7]
   15cd8:	ldmib	r7, {r0, r1, r6}
   15cdc:	ldr	r5, [r7, #16]
   15ce0:	ldr	r4, [r7, #20]
   15ce4:	ldr	r7, [r7, #24]
   15ce8:	stm	sp, {r0, r1, r6}
   15cec:	str	r5, [sp, #12]
   15cf0:	str	r4, [sp, #16]
   15cf4:	str	r7, [sp, #20]
   15cf8:	mov	r0, r8
   15cfc:	mov	r1, #1
   15d00:	b	15dac <putchar_unlocked@plt+0x4c18>
   15d04:	movw	r1, #32227	; 0x7de3
   15d08:	movt	r1, #1
   15d0c:	mov	r0, #0
   15d10:	mov	r2, #5
   15d14:	bl	10f84 <dcgettext@plt>
   15d18:	mov	ip, r0
   15d1c:	ldr	r3, [r7]
   15d20:	ldr	r0, [r7, #4]
   15d24:	ldr	r1, [r7, #8]
   15d28:	ldr	r6, [r7, #12]
   15d2c:	ldr	r5, [r7, #16]
   15d30:	ldr	r4, [r7, #20]
   15d34:	ldr	r2, [r7, #24]
   15d38:	ldr	lr, [r7, #28]
   15d3c:	ldr	r7, [r7, #32]
   15d40:	stm	sp, {r0, r1, r6}
   15d44:	str	r5, [sp, #12]
   15d48:	str	r4, [sp, #16]
   15d4c:	str	r2, [sp, #20]
   15d50:	str	lr, [sp, #24]
   15d54:	str	r7, [sp, #28]
   15d58:	b	15da0 <putchar_unlocked@plt+0x4c0c>
   15d5c:	movw	r1, #32179	; 0x7db3
   15d60:	movt	r1, #1
   15d64:	mov	r0, #0
   15d68:	mov	r2, #5
   15d6c:	bl	10f84 <dcgettext@plt>
   15d70:	mov	ip, r0
   15d74:	ldr	r3, [r7]
   15d78:	ldmib	r7, {r0, r1, r6}
   15d7c:	ldr	r5, [r7, #16]
   15d80:	ldr	r4, [r7, #20]
   15d84:	ldr	r2, [r7, #24]
   15d88:	ldr	r7, [r7, #28]
   15d8c:	stm	sp, {r0, r1, r6}
   15d90:	str	r5, [sp, #12]
   15d94:	str	r4, [sp, #16]
   15d98:	str	r2, [sp, #20]
   15d9c:	str	r7, [sp, #24]
   15da0:	mov	r0, r8
   15da4:	mov	r1, #1
   15da8:	mov	r2, ip
   15dac:	bl	110c8 <__fprintf_chk@plt>
   15db0:	sub	sp, fp, #24
   15db4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15db8:	push	{r4, sl, fp, lr}
   15dbc:	add	fp, sp, #8
   15dc0:	sub	sp, sp, #8
   15dc4:	mov	lr, #0
   15dc8:	ldr	ip, [fp, #8]
   15dcc:	ldr	r4, [ip, lr, lsl #2]
   15dd0:	add	lr, lr, #1
   15dd4:	cmp	r4, #0
   15dd8:	bne	15dcc <putchar_unlocked@plt+0x4c38>
   15ddc:	sub	r4, lr, #1
   15de0:	str	ip, [sp]
   15de4:	str	r4, [sp, #4]
   15de8:	bl	15a84 <putchar_unlocked@plt+0x48f0>
   15dec:	sub	sp, fp, #8
   15df0:	pop	{r4, sl, fp, pc}
   15df4:	push	{r4, r5, fp, lr}
   15df8:	add	fp, sp, #8
   15dfc:	sub	sp, sp, #48	; 0x30
   15e00:	mov	ip, #0
   15e04:	ldr	r4, [fp, #8]
   15e08:	add	lr, sp, #8
   15e0c:	ldr	r5, [r4]
   15e10:	str	r5, [lr, ip, lsl #2]
   15e14:	cmp	r5, #0
   15e18:	beq	15e2c <putchar_unlocked@plt+0x4c98>
   15e1c:	add	ip, ip, #1
   15e20:	add	r4, r4, #4
   15e24:	cmp	ip, #10
   15e28:	bcc	15e0c <putchar_unlocked@plt+0x4c78>
   15e2c:	str	lr, [sp]
   15e30:	str	ip, [sp, #4]
   15e34:	bl	15a84 <putchar_unlocked@plt+0x48f0>
   15e38:	sub	sp, fp, #8
   15e3c:	pop	{r4, r5, fp, pc}
   15e40:	push	{fp, lr}
   15e44:	mov	fp, sp
   15e48:	sub	sp, sp, #8
   15e4c:	add	ip, fp, #8
   15e50:	str	ip, [sp, #4]
   15e54:	str	ip, [sp]
   15e58:	bl	15df4 <putchar_unlocked@plt+0x4c60>
   15e5c:	mov	sp, fp
   15e60:	pop	{fp, pc}
   15e64:	push	{fp, lr}
   15e68:	mov	fp, sp
   15e6c:	movw	r0, #37228	; 0x916c
   15e70:	movt	r0, #2
   15e74:	ldr	r1, [r0]
   15e78:	movw	r0, #29015	; 0x7157
   15e7c:	movt	r0, #1
   15e80:	bl	10f0c <fputs_unlocked@plt>
   15e84:	movw	r1, #32339	; 0x7e53
   15e88:	movt	r1, #1
   15e8c:	mov	r0, #0
   15e90:	mov	r2, #5
   15e94:	bl	10f84 <dcgettext@plt>
   15e98:	mov	r1, r0
   15e9c:	movw	r2, #32359	; 0x7e67
   15ea0:	movt	r2, #1
   15ea4:	mov	r0, #1
   15ea8:	bl	110b0 <__printf_chk@plt>
   15eac:	movw	r1, #32381	; 0x7e7d
   15eb0:	movt	r1, #1
   15eb4:	mov	r0, #0
   15eb8:	mov	r2, #5
   15ebc:	bl	10f84 <dcgettext@plt>
   15ec0:	mov	r1, r0
   15ec4:	movw	r2, #29539	; 0x7363
   15ec8:	movt	r2, #1
   15ecc:	movw	r3, #30333	; 0x767d
   15ed0:	movt	r3, #1
   15ed4:	mov	r0, #1
   15ed8:	bl	110b0 <__printf_chk@plt>
   15edc:	movw	r1, #32401	; 0x7e91
   15ee0:	movt	r1, #1
   15ee4:	mov	r0, #0
   15ee8:	mov	r2, #5
   15eec:	bl	10f84 <dcgettext@plt>
   15ef0:	mov	r1, r0
   15ef4:	movw	r2, #32440	; 0x7eb8
   15ef8:	movt	r2, #1
   15efc:	mov	r0, #1
   15f00:	pop	{fp, lr}
   15f04:	b	110b0 <__printf_chk@plt>
   15f08:	b	15f0c <putchar_unlocked@plt+0x4d78>
   15f0c:	push	{r4, r5, r6, sl, fp, lr}
   15f10:	add	fp, sp, #16
   15f14:	mov	r4, r2
   15f18:	mov	r5, r1
   15f1c:	mov	r6, r0
   15f20:	bl	16a8c <putchar_unlocked@plt+0x58f8>
   15f24:	cmp	r0, #0
   15f28:	popne	{r4, r5, r6, sl, fp, pc}
   15f2c:	cmp	r6, #0
   15f30:	beq	15f44 <putchar_unlocked@plt+0x4db0>
   15f34:	cmp	r5, #0
   15f38:	cmpne	r4, #0
   15f3c:	bne	15f44 <putchar_unlocked@plt+0x4db0>
   15f40:	pop	{r4, r5, r6, sl, fp, pc}
   15f44:	bl	162f8 <putchar_unlocked@plt+0x5164>
   15f48:	push	{fp, lr}
   15f4c:	mov	fp, sp
   15f50:	bl	16390 <putchar_unlocked@plt+0x51fc>
   15f54:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   15f58:	pop	{fp, pc}
   15f5c:	cmp	r0, #0
   15f60:	bxne	lr
   15f64:	push	{fp, lr}
   15f68:	mov	fp, sp
   15f6c:	bl	162f8 <putchar_unlocked@plt+0x5164>
   15f70:	push	{fp, lr}
   15f74:	mov	fp, sp
   15f78:	bl	169c0 <putchar_unlocked@plt+0x582c>
   15f7c:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   15f80:	pop	{fp, pc}
   15f84:	b	15f48 <putchar_unlocked@plt+0x4db4>
   15f88:	push	{r4, r5, fp, lr}
   15f8c:	add	fp, sp, #8
   15f90:	mov	r4, r1
   15f94:	mov	r5, r0
   15f98:	bl	163c0 <putchar_unlocked@plt+0x522c>
   15f9c:	cmp	r0, #0
   15fa0:	popne	{r4, r5, fp, pc}
   15fa4:	cmp	r5, #0
   15fa8:	beq	15fb8 <putchar_unlocked@plt+0x4e24>
   15fac:	cmp	r4, #0
   15fb0:	bne	15fb8 <putchar_unlocked@plt+0x4e24>
   15fb4:	pop	{r4, r5, fp, pc}
   15fb8:	bl	162f8 <putchar_unlocked@plt+0x5164>
   15fbc:	push	{fp, lr}
   15fc0:	mov	fp, sp
   15fc4:	bl	169c4 <putchar_unlocked@plt+0x5830>
   15fc8:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   15fcc:	pop	{fp, pc}
   15fd0:	push	{fp, lr}
   15fd4:	mov	fp, sp
   15fd8:	bl	169d4 <putchar_unlocked@plt+0x5840>
   15fdc:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   15fe0:	pop	{fp, pc}
   15fe4:	push	{fp, lr}
   15fe8:	mov	fp, sp
   15fec:	mov	r2, r1
   15ff0:	mov	r1, r0
   15ff4:	mov	r0, #0
   15ff8:	bl	15f0c <putchar_unlocked@plt+0x4d78>
   15ffc:	pop	{fp, pc}
   16000:	mov	r2, r1
   16004:	mov	r1, r0
   16008:	mov	r0, #0
   1600c:	b	15fd0 <putchar_unlocked@plt+0x4e3c>
   16010:	mov	r2, #1
   16014:	b	16018 <putchar_unlocked@plt+0x4e84>
   16018:	push	{r4, r5, fp, lr}
   1601c:	add	fp, sp, #8
   16020:	mov	r4, r1
   16024:	ldr	r5, [r1]
   16028:	cmp	r0, #0
   1602c:	beq	16044 <putchar_unlocked@plt+0x4eb0>
   16030:	mov	r1, #1
   16034:	add	r1, r1, r5, lsr #1
   16038:	adds	r5, r5, r1
   1603c:	bcc	1605c <putchar_unlocked@plt+0x4ec8>
   16040:	bl	162f8 <putchar_unlocked@plt+0x5164>
   16044:	cmp	r5, #0
   16048:	bne	1605c <putchar_unlocked@plt+0x4ec8>
   1604c:	mov	r1, #64	; 0x40
   16050:	udiv	r5, r1, r2
   16054:	cmp	r2, #64	; 0x40
   16058:	addhi	r5, r5, #1
   1605c:	mov	r1, r5
   16060:	bl	15f0c <putchar_unlocked@plt+0x4d78>
   16064:	str	r5, [r4]
   16068:	pop	{r4, r5, fp, pc}
   1606c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16070:	add	fp, sp, #24
   16074:	mov	r8, r1
   16078:	ldr	r6, [r1]
   1607c:	add	r1, r6, r6, asr #1
   16080:	cmp	r1, r6
   16084:	mvnvs	r1, #-2147483648	; 0x80000000
   16088:	cmp	r1, r3
   1608c:	mov	r5, r1
   16090:	movgt	r5, r3
   16094:	cmn	r3, #1
   16098:	movle	r5, r1
   1609c:	ldr	r4, [fp, #8]
   160a0:	cmn	r4, #1
   160a4:	ble	160cc <putchar_unlocked@plt+0x4f38>
   160a8:	cmp	r4, #0
   160ac:	beq	16120 <putchar_unlocked@plt+0x4f8c>
   160b0:	cmn	r5, #1
   160b4:	ble	160f4 <putchar_unlocked@plt+0x4f60>
   160b8:	mvn	r7, #-2147483648	; 0x80000000
   160bc:	udiv	r1, r7, r4
   160c0:	cmp	r1, r5
   160c4:	bge	16120 <putchar_unlocked@plt+0x4f8c>
   160c8:	b	16130 <putchar_unlocked@plt+0x4f9c>
   160cc:	cmn	r5, #1
   160d0:	ble	16110 <putchar_unlocked@plt+0x4f7c>
   160d4:	cmn	r4, #1
   160d8:	beq	16120 <putchar_unlocked@plt+0x4f8c>
   160dc:	mov	r1, #-2147483648	; 0x80000000
   160e0:	sdiv	r1, r1, r4
   160e4:	mvn	r7, #-2147483648	; 0x80000000
   160e8:	cmp	r1, r5
   160ec:	bge	16120 <putchar_unlocked@plt+0x4f8c>
   160f0:	b	16130 <putchar_unlocked@plt+0x4f9c>
   160f4:	beq	16120 <putchar_unlocked@plt+0x4f8c>
   160f8:	mov	r1, #-2147483648	; 0x80000000
   160fc:	sdiv	r1, r1, r5
   16100:	mvn	r7, #-2147483648	; 0x80000000
   16104:	cmp	r1, r4
   16108:	bge	16120 <putchar_unlocked@plt+0x4f8c>
   1610c:	b	16130 <putchar_unlocked@plt+0x4f9c>
   16110:	mvn	r7, #-2147483648	; 0x80000000
   16114:	sdiv	r1, r7, r4
   16118:	cmp	r5, r1
   1611c:	blt	16130 <putchar_unlocked@plt+0x4f9c>
   16120:	mul	r1, r5, r4
   16124:	mov	r7, #64	; 0x40
   16128:	cmp	r1, #63	; 0x3f
   1612c:	bgt	16138 <putchar_unlocked@plt+0x4fa4>
   16130:	sdiv	r5, r7, r4
   16134:	mul	r1, r5, r4
   16138:	cmp	r0, #0
   1613c:	moveq	r7, #0
   16140:	streq	r7, [r8]
   16144:	sub	r7, r5, r6
   16148:	cmp	r7, r2
   1614c:	bge	161f8 <putchar_unlocked@plt+0x5064>
   16150:	add	r5, r6, r2
   16154:	mov	r1, #0
   16158:	cmp	r5, r3
   1615c:	mov	r2, #0
   16160:	movwgt	r2, #1
   16164:	cmn	r3, #1
   16168:	movwgt	r1, #1
   1616c:	cmp	r5, r6
   16170:	bvs	161e0 <putchar_unlocked@plt+0x504c>
   16174:	ands	r1, r1, r2
   16178:	bne	161e0 <putchar_unlocked@plt+0x504c>
   1617c:	cmn	r4, #1
   16180:	ble	161a8 <putchar_unlocked@plt+0x5014>
   16184:	cmp	r4, #0
   16188:	beq	161f4 <putchar_unlocked@plt+0x5060>
   1618c:	cmn	r5, #1
   16190:	ble	161cc <putchar_unlocked@plt+0x5038>
   16194:	mvn	r1, #-2147483648	; 0x80000000
   16198:	udiv	r1, r1, r4
   1619c:	cmp	r1, r5
   161a0:	bge	161f4 <putchar_unlocked@plt+0x5060>
   161a4:	b	161e0 <putchar_unlocked@plt+0x504c>
   161a8:	cmn	r5, #1
   161ac:	ble	161e4 <putchar_unlocked@plt+0x5050>
   161b0:	cmn	r4, #1
   161b4:	beq	161f4 <putchar_unlocked@plt+0x5060>
   161b8:	mov	r1, #-2147483648	; 0x80000000
   161bc:	sdiv	r1, r1, r4
   161c0:	cmp	r1, r5
   161c4:	bge	161f4 <putchar_unlocked@plt+0x5060>
   161c8:	b	161e0 <putchar_unlocked@plt+0x504c>
   161cc:	beq	161f4 <putchar_unlocked@plt+0x5060>
   161d0:	mov	r1, #-2147483648	; 0x80000000
   161d4:	sdiv	r1, r1, r5
   161d8:	cmp	r1, r4
   161dc:	bge	161f4 <putchar_unlocked@plt+0x5060>
   161e0:	bl	162f8 <putchar_unlocked@plt+0x5164>
   161e4:	mvn	r1, #-2147483648	; 0x80000000
   161e8:	sdiv	r1, r1, r4
   161ec:	cmp	r5, r1
   161f0:	blt	161e0 <putchar_unlocked@plt+0x504c>
   161f4:	mul	r1, r5, r4
   161f8:	bl	15f88 <putchar_unlocked@plt+0x4df4>
   161fc:	str	r5, [r8]
   16200:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16204:	mov	r1, #1
   16208:	b	1620c <putchar_unlocked@plt+0x5078>
   1620c:	push	{fp, lr}
   16210:	mov	fp, sp
   16214:	bl	1633c <putchar_unlocked@plt+0x51a8>
   16218:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   1621c:	pop	{fp, pc}
   16220:	mov	r1, #1
   16224:	b	16228 <putchar_unlocked@plt+0x5094>
   16228:	push	{fp, lr}
   1622c:	mov	fp, sp
   16230:	bl	169d0 <putchar_unlocked@plt+0x583c>
   16234:	bl	15f5c <putchar_unlocked@plt+0x4dc8>
   16238:	pop	{fp, pc}
   1623c:	push	{r4, r5, r6, sl, fp, lr}
   16240:	add	fp, sp, #16
   16244:	mov	r4, r1
   16248:	mov	r5, r0
   1624c:	mov	r0, r1
   16250:	bl	15f48 <putchar_unlocked@plt+0x4db4>
   16254:	mov	r6, r0
   16258:	mov	r1, r5
   1625c:	mov	r2, r4
   16260:	bl	10f60 <memcpy@plt>
   16264:	mov	r0, r6
   16268:	pop	{r4, r5, r6, sl, fp, pc}
   1626c:	push	{r4, r5, r6, sl, fp, lr}
   16270:	add	fp, sp, #16
   16274:	mov	r4, r1
   16278:	mov	r5, r0
   1627c:	mov	r0, r1
   16280:	bl	15f70 <putchar_unlocked@plt+0x4ddc>
   16284:	mov	r6, r0
   16288:	mov	r1, r5
   1628c:	mov	r2, r4
   16290:	bl	10f60 <memcpy@plt>
   16294:	mov	r0, r6
   16298:	pop	{r4, r5, r6, sl, fp, pc}
   1629c:	push	{r4, r5, r6, sl, fp, lr}
   162a0:	add	fp, sp, #16
   162a4:	mov	r4, r1
   162a8:	mov	r5, r0
   162ac:	add	r0, r1, #1
   162b0:	bl	15f70 <putchar_unlocked@plt+0x4ddc>
   162b4:	mov	r6, r0
   162b8:	mov	r0, #0
   162bc:	strb	r0, [r6, r4]
   162c0:	mov	r0, r6
   162c4:	mov	r1, r5
   162c8:	mov	r2, r4
   162cc:	bl	10f60 <memcpy@plt>
   162d0:	mov	r0, r6
   162d4:	pop	{r4, r5, r6, sl, fp, pc}
   162d8:	push	{r4, sl, fp, lr}
   162dc:	add	fp, sp, #8
   162e0:	mov	r4, r0
   162e4:	bl	11068 <strlen@plt>
   162e8:	add	r1, r0, #1
   162ec:	mov	r0, r4
   162f0:	pop	{r4, sl, fp, lr}
   162f4:	b	1623c <putchar_unlocked@plt+0x50a8>
   162f8:	push	{fp, lr}
   162fc:	mov	fp, sp
   16300:	movw	r0, #37128	; 0x9108
   16304:	movt	r0, #2
   16308:	ldr	r4, [r0]
   1630c:	movw	r1, #32516	; 0x7f04
   16310:	movt	r1, #1
   16314:	mov	r0, #0
   16318:	mov	r2, #5
   1631c:	bl	10f84 <dcgettext@plt>
   16320:	mov	r3, r0
   16324:	movw	r2, #31407	; 0x7aaf
   16328:	movt	r2, #1
   1632c:	mov	r0, r4
   16330:	mov	r1, #0
   16334:	bl	10ffc <error@plt>
   16338:	bl	11164 <abort@plt>
   1633c:	clz	r2, r1
   16340:	lsr	r2, r2, #5
   16344:	clz	r3, r0
   16348:	lsr	r3, r3, #5
   1634c:	orrs	r2, r3, r2
   16350:	movwne	r1, #1
   16354:	movwne	r0, #1
   16358:	cmp	r1, #0
   1635c:	beq	1638c <putchar_unlocked@plt+0x51f8>
   16360:	mvn	r2, #-2147483648	; 0x80000000
   16364:	udiv	r2, r2, r1
   16368:	cmp	r2, r0
   1636c:	bcs	1638c <putchar_unlocked@plt+0x51f8>
   16370:	push	{fp, lr}
   16374:	mov	fp, sp
   16378:	bl	11080 <__errno_location@plt>
   1637c:	mov	r1, #12
   16380:	str	r1, [r0]
   16384:	mov	r0, #0
   16388:	pop	{fp, pc}
   1638c:	b	10f00 <calloc@plt>
   16390:	cmp	r0, #0
   16394:	movweq	r0, #1
   16398:	cmn	r0, #1
   1639c:	ble	163a4 <putchar_unlocked@plt+0x5210>
   163a0:	b	11008 <malloc@plt>
   163a4:	push	{fp, lr}
   163a8:	mov	fp, sp
   163ac:	bl	11080 <__errno_location@plt>
   163b0:	mov	r1, #12
   163b4:	str	r1, [r0]
   163b8:	mov	r0, #0
   163bc:	pop	{fp, pc}
   163c0:	push	{fp, lr}
   163c4:	mov	fp, sp
   163c8:	cmp	r0, #0
   163cc:	beq	163e8 <putchar_unlocked@plt+0x5254>
   163d0:	cmp	r1, #0
   163d4:	beq	163f4 <putchar_unlocked@plt+0x5260>
   163d8:	cmn	r1, #1
   163dc:	ble	16400 <putchar_unlocked@plt+0x526c>
   163e0:	pop	{fp, lr}
   163e4:	b	10f90 <realloc@plt>
   163e8:	mov	r0, r1
   163ec:	pop	{fp, lr}
   163f0:	b	16390 <putchar_unlocked@plt+0x51fc>
   163f4:	bl	13d60 <putchar_unlocked@plt+0x2bcc>
   163f8:	mov	r0, #0
   163fc:	pop	{fp, pc}
   16400:	bl	11080 <__errno_location@plt>
   16404:	mov	r1, #12
   16408:	str	r1, [r0]
   1640c:	mov	r0, #0
   16410:	pop	{fp, pc}
   16414:	mov	r1, r0
   16418:	sub	r2, r0, #65	; 0x41
   1641c:	mov	r0, #1
   16420:	cmp	r2, #26
   16424:	subcs	r2, r1, #97	; 0x61
   16428:	cmpcs	r2, #26
   1642c:	bcs	16434 <putchar_unlocked@plt+0x52a0>
   16430:	bx	lr
   16434:	sub	r1, r1, #48	; 0x30
   16438:	cmp	r1, #10
   1643c:	movcs	r0, #0
   16440:	bx	lr
   16444:	mov	r1, r0
   16448:	sub	r2, r0, #65	; 0x41
   1644c:	mov	r0, #1
   16450:	cmp	r2, #26
   16454:	subcs	r1, r1, #97	; 0x61
   16458:	cmpcs	r1, #26
   1645c:	movcs	r0, #0
   16460:	bx	lr
   16464:	mov	r1, #0
   16468:	cmp	r0, #128	; 0x80
   1646c:	movwcc	r1, #1
   16470:	mov	r0, r1
   16474:	bx	lr
   16478:	sub	r1, r0, #9
   1647c:	clz	r1, r1
   16480:	lsr	r1, r1, #5
   16484:	sub	r0, r0, #32
   16488:	clz	r0, r0
   1648c:	lsr	r0, r0, #5
   16490:	orr	r0, r0, r1
   16494:	bx	lr
   16498:	mov	r1, r0
   1649c:	mov	r0, #1
   164a0:	cmp	r1, #32
   164a4:	bxcc	lr
   164a8:	cmp	r1, #127	; 0x7f
   164ac:	movne	r0, #0
   164b0:	bx	lr
   164b4:	sub	r1, r0, #48	; 0x30
   164b8:	mov	r0, #0
   164bc:	cmp	r1, #10
   164c0:	movwcc	r0, #1
   164c4:	bx	lr
   164c8:	sub	r1, r0, #33	; 0x21
   164cc:	mov	r0, #0
   164d0:	cmp	r1, #94	; 0x5e
   164d4:	movwcc	r0, #1
   164d8:	bx	lr
   164dc:	sub	r1, r0, #97	; 0x61
   164e0:	mov	r0, #0
   164e4:	cmp	r1, #26
   164e8:	movwcc	r0, #1
   164ec:	bx	lr
   164f0:	sub	r1, r0, #32
   164f4:	mov	r0, #0
   164f8:	cmp	r1, #95	; 0x5f
   164fc:	movwcc	r0, #1
   16500:	bx	lr
   16504:	sub	r1, r0, #33	; 0x21
   16508:	cmp	r1, #93	; 0x5d
   1650c:	bhi	16698 <putchar_unlocked@plt+0x5504>
   16510:	mov	r0, #1
   16514:	add	r2, pc, #0
   16518:	ldr	pc, [r2, r1, lsl #2]
   1651c:	muleq	r1, r4, r6
   16520:	muleq	r1, r4, r6
   16524:	muleq	r1, r4, r6
   16528:	muleq	r1, r4, r6
   1652c:	muleq	r1, r4, r6
   16530:	muleq	r1, r4, r6
   16534:	muleq	r1, r4, r6
   16538:	muleq	r1, r4, r6
   1653c:	muleq	r1, r4, r6
   16540:	muleq	r1, r4, r6
   16544:	muleq	r1, r4, r6
   16548:	muleq	r1, r4, r6
   1654c:	muleq	r1, r4, r6
   16550:	muleq	r1, r4, r6
   16554:	muleq	r1, r4, r6
   16558:	muleq	r1, r8, r6
   1655c:	muleq	r1, r8, r6
   16560:	muleq	r1, r8, r6
   16564:	muleq	r1, r8, r6
   16568:	muleq	r1, r8, r6
   1656c:	muleq	r1, r8, r6
   16570:	muleq	r1, r8, r6
   16574:	muleq	r1, r8, r6
   16578:	muleq	r1, r8, r6
   1657c:	muleq	r1, r8, r6
   16580:	muleq	r1, r4, r6
   16584:	muleq	r1, r4, r6
   16588:	muleq	r1, r4, r6
   1658c:	muleq	r1, r4, r6
   16590:	muleq	r1, r4, r6
   16594:	muleq	r1, r4, r6
   16598:	muleq	r1, r4, r6
   1659c:	muleq	r1, r8, r6
   165a0:	muleq	r1, r8, r6
   165a4:	muleq	r1, r8, r6
   165a8:	muleq	r1, r8, r6
   165ac:	muleq	r1, r8, r6
   165b0:	muleq	r1, r8, r6
   165b4:	muleq	r1, r8, r6
   165b8:	muleq	r1, r8, r6
   165bc:	muleq	r1, r8, r6
   165c0:	muleq	r1, r8, r6
   165c4:	muleq	r1, r8, r6
   165c8:	muleq	r1, r8, r6
   165cc:	muleq	r1, r8, r6
   165d0:	muleq	r1, r8, r6
   165d4:	muleq	r1, r8, r6
   165d8:	muleq	r1, r8, r6
   165dc:	muleq	r1, r8, r6
   165e0:	muleq	r1, r8, r6
   165e4:	muleq	r1, r8, r6
   165e8:	muleq	r1, r8, r6
   165ec:	muleq	r1, r8, r6
   165f0:	muleq	r1, r8, r6
   165f4:	muleq	r1, r8, r6
   165f8:	muleq	r1, r8, r6
   165fc:	muleq	r1, r8, r6
   16600:	muleq	r1, r8, r6
   16604:	muleq	r1, r4, r6
   16608:	muleq	r1, r4, r6
   1660c:	muleq	r1, r4, r6
   16610:	muleq	r1, r4, r6
   16614:	muleq	r1, r4, r6
   16618:	muleq	r1, r4, r6
   1661c:	muleq	r1, r8, r6
   16620:	muleq	r1, r8, r6
   16624:	muleq	r1, r8, r6
   16628:	muleq	r1, r8, r6
   1662c:	muleq	r1, r8, r6
   16630:	muleq	r1, r8, r6
   16634:	muleq	r1, r8, r6
   16638:	muleq	r1, r8, r6
   1663c:	muleq	r1, r8, r6
   16640:	muleq	r1, r8, r6
   16644:	muleq	r1, r8, r6
   16648:	muleq	r1, r8, r6
   1664c:	muleq	r1, r8, r6
   16650:	muleq	r1, r8, r6
   16654:	muleq	r1, r8, r6
   16658:	muleq	r1, r8, r6
   1665c:	muleq	r1, r8, r6
   16660:	muleq	r1, r8, r6
   16664:	muleq	r1, r8, r6
   16668:	muleq	r1, r8, r6
   1666c:	muleq	r1, r8, r6
   16670:	muleq	r1, r8, r6
   16674:	muleq	r1, r8, r6
   16678:	muleq	r1, r8, r6
   1667c:	muleq	r1, r8, r6
   16680:	muleq	r1, r8, r6
   16684:	muleq	r1, r4, r6
   16688:	muleq	r1, r4, r6
   1668c:	muleq	r1, r4, r6
   16690:	muleq	r1, r4, r6
   16694:	bx	lr
   16698:	mov	r0, #0
   1669c:	bx	lr
   166a0:	sub	r0, r0, #9
   166a4:	cmp	r0, #23
   166a8:	movhi	r0, #0
   166ac:	bxhi	lr
   166b0:	bic	r0, r0, #-16777216	; 0xff000000
   166b4:	movw	r1, #31
   166b8:	movt	r1, #128	; 0x80
   166bc:	mov	r2, #1
   166c0:	and	r0, r2, r1, lsr r0
   166c4:	bx	lr
   166c8:	sub	r1, r0, #65	; 0x41
   166cc:	mov	r0, #0
   166d0:	cmp	r1, #26
   166d4:	movwcc	r0, #1
   166d8:	bx	lr
   166dc:	mov	r1, r0
   166e0:	sub	r2, r0, #48	; 0x30
   166e4:	mov	r0, #1
   166e8:	cmp	r2, #22
   166ec:	bhi	16704 <putchar_unlocked@plt+0x5570>
   166f0:	mov	ip, #1
   166f4:	movw	r3, #1023	; 0x3ff
   166f8:	movt	r3, #126	; 0x7e
   166fc:	tst	r3, ip, lsl r2
   16700:	bxne	lr
   16704:	sub	r1, r1, #97	; 0x61
   16708:	cmp	r1, #6
   1670c:	movcs	r0, #0
   16710:	bxcs	lr
   16714:	bx	lr
   16718:	sub	r1, r0, #65	; 0x41
   1671c:	cmp	r1, #26
   16720:	addcc	r0, r0, #32
   16724:	bx	lr
   16728:	sub	r1, r0, #97	; 0x61
   1672c:	cmp	r1, #26
   16730:	subcc	r0, r0, #32
   16734:	bx	lr
   16738:	push	{r4, r5, r6, sl, fp, lr}
   1673c:	add	fp, sp, #16
   16740:	mov	r4, r0
   16744:	bl	10fd8 <__fpending@plt>
   16748:	mov	r5, r0
   1674c:	mov	r0, r4
   16750:	bl	10fe4 <ferror_unlocked@plt>
   16754:	mov	r6, r0
   16758:	mov	r0, r4
   1675c:	bl	13ba4 <putchar_unlocked@plt+0x2a10>
   16760:	cmp	r6, #0
   16764:	beq	16784 <putchar_unlocked@plt+0x55f0>
   16768:	mvn	r4, #0
   1676c:	cmp	r0, #0
   16770:	bne	167b8 <putchar_unlocked@plt+0x5624>
   16774:	bl	11080 <__errno_location@plt>
   16778:	mov	r1, #0
   1677c:	str	r1, [r0]
   16780:	b	167b8 <putchar_unlocked@plt+0x5624>
   16784:	cmp	r0, #0
   16788:	mov	r4, r0
   1678c:	mvnne	r4, #0
   16790:	cmp	r5, #0
   16794:	bne	167b8 <putchar_unlocked@plt+0x5624>
   16798:	cmp	r0, #0
   1679c:	beq	167b8 <putchar_unlocked@plt+0x5624>
   167a0:	bl	11080 <__errno_location@plt>
   167a4:	ldr	r0, [r0]
   167a8:	subs	r4, r0, #9
   167ac:	mvnne	r4, #0
   167b0:	mov	r0, r4
   167b4:	pop	{r4, r5, r6, sl, fp, pc}
   167b8:	mov	r0, r4
   167bc:	pop	{r4, r5, r6, sl, fp, pc}
   167c0:	sub	sp, sp, #8
   167c4:	push	{fp, lr}
   167c8:	mov	fp, sp
   167cc:	sub	sp, sp, #8
   167d0:	str	r3, [fp, #12]
   167d4:	str	r2, [fp, #8]
   167d8:	add	r2, fp, #8
   167dc:	str	r2, [sp, #4]
   167e0:	cmp	r1, #11
   167e4:	bhi	16824 <putchar_unlocked@plt+0x5690>
   167e8:	mov	r2, #1
   167ec:	movw	r3, #1300	; 0x514
   167f0:	tst	r3, r2, lsl r1
   167f4:	bne	16874 <putchar_unlocked@plt+0x56e0>
   167f8:	movw	r3, #2570	; 0xa0a
   167fc:	tst	r3, r2, lsl r1
   16800:	bne	1684c <putchar_unlocked@plt+0x56b8>
   16804:	cmp	r1, #0
   16808:	bne	16824 <putchar_unlocked@plt+0x5690>
   1680c:	ldr	r1, [sp, #4]
   16810:	add	r2, r1, #4
   16814:	str	r2, [sp, #4]
   16818:	ldr	r1, [r1]
   1681c:	bl	16898 <putchar_unlocked@plt+0x5704>
   16820:	b	16888 <putchar_unlocked@plt+0x56f4>
   16824:	sub	r2, r1, #1024	; 0x400
   16828:	cmp	r2, #10
   1682c:	bhi	16874 <putchar_unlocked@plt+0x56e0>
   16830:	mov	ip, #1
   16834:	movw	r3, #645	; 0x285
   16838:	tst	r3, ip, lsl r2
   1683c:	bne	16874 <putchar_unlocked@plt+0x56e0>
   16840:	movw	r3, #1282	; 0x502
   16844:	tst	r3, ip, lsl r2
   16848:	beq	16854 <putchar_unlocked@plt+0x56c0>
   1684c:	bl	110ec <fcntl64@plt>
   16850:	b	16888 <putchar_unlocked@plt+0x56f4>
   16854:	cmp	r2, #6
   16858:	bne	16874 <putchar_unlocked@plt+0x56e0>
   1685c:	ldr	r1, [sp, #4]
   16860:	add	r2, r1, #4
   16864:	str	r2, [sp, #4]
   16868:	ldr	r1, [r1]
   1686c:	bl	168a4 <putchar_unlocked@plt+0x5710>
   16870:	b	16888 <putchar_unlocked@plt+0x56f4>
   16874:	ldr	r2, [sp, #4]
   16878:	add	r3, r2, #4
   1687c:	str	r3, [sp, #4]
   16880:	ldr	r2, [r2]
   16884:	bl	110ec <fcntl64@plt>
   16888:	mov	sp, fp
   1688c:	pop	{fp, lr}
   16890:	add	sp, sp, #8
   16894:	bx	lr
   16898:	mov	r2, r1
   1689c:	mov	r1, #0
   168a0:	b	110ec <fcntl64@plt>
   168a4:	push	{r4, r5, r6, r7, fp, lr}
   168a8:	add	fp, sp, #16
   168ac:	mov	r5, r1
   168b0:	mov	r6, r0
   168b4:	movw	r7, #37568	; 0x92c0
   168b8:	movt	r7, #2
   168bc:	ldr	r0, [r7]
   168c0:	cmp	r0, #0
   168c4:	blt	16928 <putchar_unlocked@plt+0x5794>
   168c8:	mov	r0, r6
   168cc:	movw	r1, #1030	; 0x406
   168d0:	mov	r2, r5
   168d4:	bl	110ec <fcntl64@plt>
   168d8:	mov	r4, r0
   168dc:	cmn	r0, #1
   168e0:	bgt	16914 <putchar_unlocked@plt+0x5780>
   168e4:	bl	11080 <__errno_location@plt>
   168e8:	ldr	r0, [r0]
   168ec:	cmp	r0, #22
   168f0:	bne	16914 <putchar_unlocked@plt+0x5780>
   168f4:	mov	r0, r6
   168f8:	mov	r1, r5
   168fc:	bl	16898 <putchar_unlocked@plt+0x5704>
   16900:	mov	r4, r0
   16904:	cmp	r0, #0
   16908:	blt	16978 <putchar_unlocked@plt+0x57e4>
   1690c:	mvn	r0, #0
   16910:	b	16918 <putchar_unlocked@plt+0x5784>
   16914:	mov	r0, #1
   16918:	str	r0, [r7]
   1691c:	cmp	r4, #0
   16920:	bge	16940 <putchar_unlocked@plt+0x57ac>
   16924:	b	16978 <putchar_unlocked@plt+0x57e4>
   16928:	mov	r0, r6
   1692c:	mov	r1, r5
   16930:	bl	16898 <putchar_unlocked@plt+0x5704>
   16934:	mov	r4, r0
   16938:	cmp	r4, #0
   1693c:	blt	16978 <putchar_unlocked@plt+0x57e4>
   16940:	ldr	r0, [r7]
   16944:	cmn	r0, #1
   16948:	bne	16978 <putchar_unlocked@plt+0x57e4>
   1694c:	mov	r0, r4
   16950:	mov	r1, #1
   16954:	bl	110ec <fcntl64@plt>
   16958:	cmp	r0, #0
   1695c:	blt	16980 <putchar_unlocked@plt+0x57ec>
   16960:	orr	r2, r0, #1
   16964:	mov	r0, r4
   16968:	mov	r1, #2
   1696c:	bl	110ec <fcntl64@plt>
   16970:	cmn	r0, #1
   16974:	beq	16980 <putchar_unlocked@plt+0x57ec>
   16978:	mov	r0, r4
   1697c:	pop	{r4, r5, r6, r7, fp, pc}
   16980:	bl	11080 <__errno_location@plt>
   16984:	mov	r5, r0
   16988:	ldr	r6, [r0]
   1698c:	mov	r0, r4
   16990:	bl	1117c <close@plt>
   16994:	str	r6, [r5]
   16998:	mvn	r4, #0
   1699c:	mov	r0, r4
   169a0:	pop	{r4, r5, r6, r7, fp, pc}
   169a4:	push	{fp, lr}
   169a8:	mov	fp, sp
   169ac:	bl	11080 <__errno_location@plt>
   169b0:	mov	r1, #12
   169b4:	str	r1, [r0]
   169b8:	mov	r0, #0
   169bc:	pop	{fp, pc}
   169c0:	b	16390 <putchar_unlocked@plt+0x51fc>
   169c4:	cmp	r1, #0
   169c8:	orreq	r1, r1, #1
   169cc:	b	163c0 <putchar_unlocked@plt+0x522c>
   169d0:	b	1633c <putchar_unlocked@plt+0x51a8>
   169d4:	clz	r3, r2
   169d8:	lsr	ip, r3, #5
   169dc:	clz	r3, r1
   169e0:	lsr	r3, r3, #5
   169e4:	orrs	r3, r3, ip
   169e8:	movwne	r1, #1
   169ec:	movwne	r2, #1
   169f0:	b	16a8c <putchar_unlocked@plt+0x58f8>
   169f4:	push	{fp, lr}
   169f8:	mov	fp, sp
   169fc:	mov	r0, #14
   16a00:	bl	11110 <nl_langinfo@plt>
   16a04:	movw	r1, #29016	; 0x7158
   16a08:	movt	r1, #1
   16a0c:	cmp	r0, #0
   16a10:	movne	r1, r0
   16a14:	ldrb	r2, [r1]
   16a18:	movw	r0, #32533	; 0x7f15
   16a1c:	movt	r0, #1
   16a20:	cmp	r2, #0
   16a24:	movne	r0, r1
   16a28:	pop	{fp, pc}
   16a2c:	push	{r4, r5, r6, r7, fp, lr}
   16a30:	add	fp, sp, #16
   16a34:	sub	sp, sp, #8
   16a38:	mov	r7, r2
   16a3c:	mov	r4, r1
   16a40:	add	r5, sp, #4
   16a44:	cmp	r0, #0
   16a48:	movne	r5, r0
   16a4c:	mov	r0, r5
   16a50:	bl	10ff0 <mbrtowc@plt>
   16a54:	mov	r6, r0
   16a58:	cmp	r7, #0
   16a5c:	beq	16a80 <putchar_unlocked@plt+0x58ec>
   16a60:	cmn	r6, #2
   16a64:	bcc	16a80 <putchar_unlocked@plt+0x58ec>
   16a68:	mov	r0, #0
   16a6c:	bl	16ac8 <putchar_unlocked@plt+0x5934>
   16a70:	cmp	r0, #0
   16a74:	ldrbeq	r0, [r4]
   16a78:	streq	r0, [r5]
   16a7c:	moveq	r6, #1
   16a80:	mov	r0, r6
   16a84:	sub	sp, fp, #16
   16a88:	pop	{r4, r5, r6, r7, fp, pc}
   16a8c:	cmp	r2, #0
   16a90:	beq	16ac0 <putchar_unlocked@plt+0x592c>
   16a94:	mvn	r3, #0
   16a98:	udiv	r3, r3, r2
   16a9c:	cmp	r3, r1
   16aa0:	bcs	16ac0 <putchar_unlocked@plt+0x592c>
   16aa4:	push	{fp, lr}
   16aa8:	mov	fp, sp
   16aac:	bl	11080 <__errno_location@plt>
   16ab0:	mov	r1, #12
   16ab4:	str	r1, [r0]
   16ab8:	mov	r0, #0
   16abc:	pop	{fp, pc}
   16ac0:	mul	r1, r2, r1
   16ac4:	b	163c0 <putchar_unlocked@plt+0x522c>
   16ac8:	push	{r4, sl, fp, lr}
   16acc:	add	fp, sp, #8
   16ad0:	sub	sp, sp, #264	; 0x108
   16ad4:	add	r1, sp, #7
   16ad8:	movw	r2, #257	; 0x101
   16adc:	bl	16b2c <putchar_unlocked@plt+0x5998>
   16ae0:	mov	r4, #0
   16ae4:	cmp	r0, #0
   16ae8:	bne	16b20 <putchar_unlocked@plt+0x598c>
   16aec:	add	r0, sp, #7
   16af0:	movw	r1, #32539	; 0x7f1b
   16af4:	movt	r1, #1
   16af8:	bl	10f24 <strcmp@plt>
   16afc:	cmp	r0, #0
   16b00:	beq	16b20 <putchar_unlocked@plt+0x598c>
   16b04:	add	r0, sp, #7
   16b08:	movw	r1, #32541	; 0x7f1d
   16b0c:	movt	r1, #1
   16b10:	bl	10f24 <strcmp@plt>
   16b14:	mov	r4, r0
   16b18:	cmp	r0, #0
   16b1c:	movwne	r4, #1
   16b20:	mov	r0, r4
   16b24:	sub	sp, fp, #8
   16b28:	pop	{r4, sl, fp, pc}
   16b2c:	b	16b30 <putchar_unlocked@plt+0x599c>
   16b30:	push	{r4, r5, r6, r7, fp, lr}
   16b34:	add	fp, sp, #16
   16b38:	mov	r6, r2
   16b3c:	mov	r4, r1
   16b40:	bl	16bcc <putchar_unlocked@plt+0x5a38>
   16b44:	cmp	r0, #0
   16b48:	beq	16b78 <putchar_unlocked@plt+0x59e4>
   16b4c:	mov	r7, r0
   16b50:	bl	11068 <strlen@plt>
   16b54:	cmp	r0, r6
   16b58:	bcs	16b98 <putchar_unlocked@plt+0x5a04>
   16b5c:	add	r2, r0, #1
   16b60:	mov	r0, r4
   16b64:	mov	r1, r7
   16b68:	bl	10f60 <memcpy@plt>
   16b6c:	mov	r5, #0
   16b70:	mov	r0, r5
   16b74:	pop	{r4, r5, r6, r7, fp, pc}
   16b78:	mov	r5, #22
   16b7c:	cmp	r6, #0
   16b80:	movne	r0, #0
   16b84:	strbne	r0, [r4]
   16b88:	movne	r0, r5
   16b8c:	popne	{r4, r5, r6, r7, fp, pc}
   16b90:	mov	r0, r5
   16b94:	pop	{r4, r5, r6, r7, fp, pc}
   16b98:	mov	r5, #34	; 0x22
   16b9c:	cmp	r6, #0
   16ba0:	beq	16bc0 <putchar_unlocked@plt+0x5a2c>
   16ba4:	sub	r6, r6, #1
   16ba8:	mov	r0, r4
   16bac:	mov	r1, r7
   16bb0:	mov	r2, r6
   16bb4:	bl	10f60 <memcpy@plt>
   16bb8:	mov	r0, #0
   16bbc:	strb	r0, [r4, r6]
   16bc0:	mov	r0, r5
   16bc4:	pop	{r4, r5, r6, r7, fp, pc}
   16bc8:	b	16bcc <putchar_unlocked@plt+0x5a38>
   16bcc:	mov	r1, #0
   16bd0:	b	110f8 <setlocale@plt>
   16bd4:	cmp	r3, #0
   16bd8:	cmpeq	r2, #0
   16bdc:	bne	16bf4 <putchar_unlocked@plt+0x5a60>
   16be0:	cmp	r1, #0
   16be4:	cmpeq	r0, #0
   16be8:	mvnne	r1, #0
   16bec:	mvnne	r0, #0
   16bf0:	b	16c10 <putchar_unlocked@plt+0x5a7c>
   16bf4:	sub	sp, sp, #8
   16bf8:	push	{sp, lr}
   16bfc:	bl	16c20 <putchar_unlocked@plt+0x5a8c>
   16c00:	ldr	lr, [sp, #4]
   16c04:	add	sp, sp, #8
   16c08:	pop	{r2, r3}
   16c0c:	bx	lr
   16c10:	push	{r1, lr}
   16c14:	mov	r0, #8
   16c18:	bl	10f18 <raise@plt>
   16c1c:	pop	{r1, pc}
   16c20:	cmp	r1, r3
   16c24:	cmpeq	r0, r2
   16c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c2c:	mov	r4, r0
   16c30:	movcc	r0, #0
   16c34:	mov	r5, r1
   16c38:	ldr	lr, [sp, #36]	; 0x24
   16c3c:	movcc	r1, r0
   16c40:	bcc	16d3c <putchar_unlocked@plt+0x5ba8>
   16c44:	cmp	r3, #0
   16c48:	clzeq	ip, r2
   16c4c:	clzne	ip, r3
   16c50:	addeq	ip, ip, #32
   16c54:	cmp	r5, #0
   16c58:	clzeq	r1, r4
   16c5c:	addeq	r1, r1, #32
   16c60:	clzne	r1, r5
   16c64:	sub	ip, ip, r1
   16c68:	sub	sl, ip, #32
   16c6c:	lsl	r9, r3, ip
   16c70:	rsb	fp, ip, #32
   16c74:	orr	r9, r9, r2, lsl sl
   16c78:	orr	r9, r9, r2, lsr fp
   16c7c:	lsl	r8, r2, ip
   16c80:	cmp	r5, r9
   16c84:	cmpeq	r4, r8
   16c88:	movcc	r0, #0
   16c8c:	movcc	r1, r0
   16c90:	bcc	16cac <putchar_unlocked@plt+0x5b18>
   16c94:	mov	r0, #1
   16c98:	subs	r4, r4, r8
   16c9c:	lsl	r1, r0, sl
   16ca0:	orr	r1, r1, r0, lsr fp
   16ca4:	lsl	r0, r0, ip
   16ca8:	sbc	r5, r5, r9
   16cac:	cmp	ip, #0
   16cb0:	beq	16d3c <putchar_unlocked@plt+0x5ba8>
   16cb4:	lsr	r6, r8, #1
   16cb8:	orr	r6, r6, r9, lsl #31
   16cbc:	lsr	r7, r9, #1
   16cc0:	mov	r2, ip
   16cc4:	b	16ce8 <putchar_unlocked@plt+0x5b54>
   16cc8:	subs	r3, r4, r6
   16ccc:	sbc	r8, r5, r7
   16cd0:	adds	r3, r3, r3
   16cd4:	adc	r8, r8, r8
   16cd8:	adds	r4, r3, #1
   16cdc:	adc	r5, r8, #0
   16ce0:	subs	r2, r2, #1
   16ce4:	beq	16d04 <putchar_unlocked@plt+0x5b70>
   16ce8:	cmp	r5, r7
   16cec:	cmpeq	r4, r6
   16cf0:	bcs	16cc8 <putchar_unlocked@plt+0x5b34>
   16cf4:	adds	r4, r4, r4
   16cf8:	adc	r5, r5, r5
   16cfc:	subs	r2, r2, #1
   16d00:	bne	16ce8 <putchar_unlocked@plt+0x5b54>
   16d04:	lsr	r3, r4, ip
   16d08:	orr	r3, r3, r5, lsl fp
   16d0c:	lsr	r2, r5, ip
   16d10:	orr	r3, r3, r5, lsr sl
   16d14:	adds	r0, r0, r4
   16d18:	mov	r4, r3
   16d1c:	lsl	r3, r2, ip
   16d20:	orr	r3, r3, r4, lsl sl
   16d24:	lsl	ip, r4, ip
   16d28:	orr	r3, r3, r4, lsr fp
   16d2c:	adc	r1, r1, r5
   16d30:	subs	r0, r0, ip
   16d34:	mov	r5, r2
   16d38:	sbc	r1, r1, r3
   16d3c:	cmp	lr, #0
   16d40:	strdne	r4, [lr]
   16d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16d4c:	mov	r7, r0
   16d50:	ldr	r6, [pc, #72]	; 16da0 <putchar_unlocked@plt+0x5c0c>
   16d54:	ldr	r5, [pc, #72]	; 16da4 <putchar_unlocked@plt+0x5c10>
   16d58:	add	r6, pc, r6
   16d5c:	add	r5, pc, r5
   16d60:	sub	r6, r6, r5
   16d64:	mov	r8, r1
   16d68:	mov	r9, r2
   16d6c:	bl	10ed4 <fdopen@plt-0x20>
   16d70:	asrs	r6, r6, #2
   16d74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16d78:	mov	r4, #0
   16d7c:	add	r4, r4, #1
   16d80:	ldr	r3, [r5], #4
   16d84:	mov	r2, r9
   16d88:	mov	r1, r8
   16d8c:	mov	r0, r7
   16d90:	blx	r3
   16d94:	cmp	r6, r4
   16d98:	bne	16d7c <putchar_unlocked@plt+0x5be8>
   16d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16da0:	andeq	r2, r1, ip, lsr #3
   16da4:	andeq	r2, r1, r4, lsr #3
   16da8:	bx	lr
   16dac:	ldr	r3, [pc, #12]	; 16dc0 <putchar_unlocked@plt+0x5c2c>
   16db0:	mov	r1, #0
   16db4:	add	r3, pc, r3
   16db8:	ldr	r2, [r3]
   16dbc:	b	1108c <__cxa_atexit@plt>
   16dc0:	andeq	r2, r1, r0, asr #6

Disassembly of section .fini:

00016dc4 <.fini>:
   16dc4:	push	{r3, lr}
   16dc8:	pop	{r3, pc}
