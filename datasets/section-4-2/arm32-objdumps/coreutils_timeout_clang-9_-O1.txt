
../repos/coreutils/src/timeout:     file format elf32-littlearm


Disassembly of section .init:

00011270 <.init>:
   11270:	push	{r3, lr}
   11274:	bl	1160c <__snprintf_chk@plt+0x4c>
   11278:	pop	{r3, pc}

Disassembly of section .plt:

0001127c <calloc@plt-0x14>:
   1127c:	push	{lr}		; (str lr, [sp, #-4]!)
   11280:	ldr	lr, [pc, #4]	; 1128c <calloc@plt-0x4>
   11284:	add	lr, pc, lr
   11288:	ldr	pc, [lr, #8]!
   1128c:	andeq	r5, r1, r4, ror sp

00011290 <calloc@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #86016	; 0x15000
   11298:	ldr	pc, [ip, #3444]!	; 0xd74

0001129c <fputs_unlocked@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #86016	; 0x15000
   112a4:	ldr	pc, [ip, #3436]!	; 0xd6c

000112a8 <raise@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #86016	; 0x15000
   112b0:	ldr	pc, [ip, #3428]!	; 0xd64

000112b4 <strcmp@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #86016	; 0x15000
   112bc:	ldr	pc, [ip, #3420]!	; 0xd5c

000112c0 <strtol@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #86016	; 0x15000
   112c8:	ldr	pc, [ip, #3412]!	; 0xd54

000112cc <fflush@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #86016	; 0x15000
   112d4:	ldr	pc, [ip, #3404]!	; 0xd4c

000112d8 <sigprocmask@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #86016	; 0x15000
   112e0:	ldr	pc, [ip, #3396]!	; 0xd44

000112e4 <free@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #86016	; 0x15000
   112ec:	ldr	pc, [ip, #3388]!	; 0xd3c

000112f0 <_exit@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #86016	; 0x15000
   112f8:	ldr	pc, [ip, #3380]!	; 0xd34

000112fc <memcpy@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #86016	; 0x15000
   11304:	ldr	pc, [ip, #3372]!	; 0xd2c

00011308 <execvp@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #86016	; 0x15000
   11310:	ldr	pc, [ip, #3364]!	; 0xd24

00011314 <mbsinit@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #86016	; 0x15000
   1131c:	ldr	pc, [ip, #3356]!	; 0xd1c

00011320 <signal@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #86016	; 0x15000
   11328:	ldr	pc, [ip, #3348]!	; 0xd14

0001132c <dcgettext@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #86016	; 0x15000
   11334:	ldr	pc, [ip, #3340]!	; 0xd0c

00011338 <alarm@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #86016	; 0x15000
   11340:	ldr	pc, [ip, #3332]!	; 0xd04

00011344 <realloc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #86016	; 0x15000
   1134c:	ldr	pc, [ip, #3324]!	; 0xcfc

00011350 <timer_create@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #86016	; 0x15000
   11358:	ldr	pc, [ip, #3316]!	; 0xcf4

0001135c <textdomain@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #86016	; 0x15000
   11364:	ldr	pc, [ip, #3308]!	; 0xcec

00011368 <iswprint@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #86016	; 0x15000
   11370:	ldr	pc, [ip, #3300]!	; 0xce4

00011374 <timer_settime@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #86016	; 0x15000
   1137c:	ldr	pc, [ip, #3292]!	; 0xcdc

00011380 <sigaction@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #86016	; 0x15000
   11388:	ldr	pc, [ip, #3284]!	; 0xcd4

0001138c <fwrite@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #86016	; 0x15000
   11394:	ldr	pc, [ip, #3276]!	; 0xccc

00011398 <lseek64@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #86016	; 0x15000
   113a0:	ldr	pc, [ip, #3268]!	; 0xcc4

000113a4 <waitpid@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #86016	; 0x15000
   113ac:	ldr	pc, [ip, #3260]!	; 0xcbc

000113b0 <__ctype_get_mb_cur_max@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #86016	; 0x15000
   113b8:	ldr	pc, [ip, #3252]!	; 0xcb4

000113bc <strcpy@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #86016	; 0x15000
   113c4:	ldr	pc, [ip, #3244]!	; 0xcac

000113c8 <__fpending@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #86016	; 0x15000
   113d0:	ldr	pc, [ip, #3236]!	; 0xca4

000113d4 <ferror_unlocked@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #86016	; 0x15000
   113dc:	ldr	pc, [ip, #3228]!	; 0xc9c

000113e0 <mbrtowc@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #86016	; 0x15000
   113e8:	ldr	pc, [ip, #3220]!	; 0xc94

000113ec <error@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #86016	; 0x15000
   113f4:	ldr	pc, [ip, #3212]!	; 0xc8c

000113f8 <timer_delete@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #86016	; 0x15000
   11400:	ldr	pc, [ip, #3204]!	; 0xc84

00011404 <malloc@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #86016	; 0x15000
   1140c:	ldr	pc, [ip, #3196]!	; 0xc7c

00011410 <sigaddset@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #86016	; 0x15000
   11418:	ldr	pc, [ip, #3188]!	; 0xc74

0001141c <__libc_start_main@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #86016	; 0x15000
   11424:	ldr	pc, [ip, #3180]!	; 0xc6c

00011428 <__freading@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #86016	; 0x15000
   11430:	ldr	pc, [ip, #3172]!	; 0xc64

00011434 <__gmon_start__@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #86016	; 0x15000
   1143c:	ldr	pc, [ip, #3164]!	; 0xc5c

00011440 <getopt_long@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #86016	; 0x15000
   11448:	ldr	pc, [ip, #3156]!	; 0xc54

0001144c <kill@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #86016	; 0x15000
   11454:	ldr	pc, [ip, #3148]!	; 0xc4c

00011458 <__ctype_b_loc@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #86016	; 0x15000
   11460:	ldr	pc, [ip, #3140]!	; 0xc44

00011464 <exit@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #86016	; 0x15000
   1146c:	ldr	pc, [ip, #3132]!	; 0xc3c

00011470 <bcmp@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #86016	; 0x15000
   11478:	ldr	pc, [ip, #3124]!	; 0xc34

0001147c <strlen@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #86016	; 0x15000
   11484:	ldr	pc, [ip, #3116]!	; 0xc2c

00011488 <__libc_current_sigrtmax@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #86016	; 0x15000
   11490:	ldr	pc, [ip, #3108]!	; 0xc24

00011494 <__errno_location@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #86016	; 0x15000
   1149c:	ldr	pc, [ip, #3100]!	; 0xc1c

000114a0 <__sprintf_chk@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #86016	; 0x15000
   114a8:	ldr	pc, [ip, #3092]!	; 0xc14

000114ac <__cxa_atexit@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #86016	; 0x15000
   114b4:	ldr	pc, [ip, #3084]!	; 0xc0c

000114b8 <memset@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #86016	; 0x15000
   114c0:	ldr	pc, [ip, #3076]!	; 0xc04

000114c4 <sigsuspend@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #86016	; 0x15000
   114cc:	ldr	pc, [ip, #3068]!	; 0xbfc

000114d0 <__printf_chk@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #86016	; 0x15000
   114d8:	ldr	pc, [ip, #3060]!	; 0xbf4

000114dc <prctl@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #86016	; 0x15000
   114e4:	ldr	pc, [ip, #3052]!	; 0xbec

000114e8 <strtod@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #86016	; 0x15000
   114f0:	ldr	pc, [ip, #3044]!	; 0xbe4

000114f4 <fileno@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #86016	; 0x15000
   114fc:	ldr	pc, [ip, #3036]!	; 0xbdc

00011500 <__fprintf_chk@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #86016	; 0x15000
   11508:	ldr	pc, [ip, #3028]!	; 0xbd4

0001150c <memchr@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #86016	; 0x15000
   11514:	ldr	pc, [ip, #3020]!	; 0xbcc

00011518 <fclose@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #86016	; 0x15000
   11520:	ldr	pc, [ip, #3012]!	; 0xbc4

00011524 <fseeko64@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #86016	; 0x15000
   1152c:	ldr	pc, [ip, #3004]!	; 0xbbc

00011530 <strtod_l@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #86016	; 0x15000
   11538:	ldr	pc, [ip, #2996]!	; 0xbb4

0001153c <setlocale@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #86016	; 0x15000
   11544:	ldr	pc, [ip, #2988]!	; 0xbac

00011548 <sigemptyset@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #86016	; 0x15000
   11550:	ldr	pc, [ip, #2980]!	; 0xba4

00011554 <fork@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #86016	; 0x15000
   1155c:	ldr	pc, [ip, #2972]!	; 0xb9c

00011560 <strrchr@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #86016	; 0x15000
   11568:	ldr	pc, [ip, #2964]!	; 0xb94

0001156c <nl_langinfo@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #86016	; 0x15000
   11574:	ldr	pc, [ip, #2956]!	; 0xb8c

00011578 <newlocale@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #86016	; 0x15000
   11580:	ldr	pc, [ip, #2948]!	; 0xb84

00011584 <setpgid@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #86016	; 0x15000
   1158c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011590 <bindtextdomain@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #86016	; 0x15000
   11598:	ldr	pc, [ip, #2932]!	; 0xb74

0001159c <__libc_current_sigrtmin@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #86016	; 0x15000
   115a4:	ldr	pc, [ip, #2924]!	; 0xb6c

000115a8 <strncmp@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #86016	; 0x15000
   115b0:	ldr	pc, [ip, #2916]!	; 0xb64

000115b4 <abort@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #86016	; 0x15000
   115bc:	ldr	pc, [ip, #2908]!	; 0xb5c

000115c0 <__snprintf_chk@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #86016	; 0x15000
   115c8:	ldr	pc, [ip, #2900]!	; 0xb54

Disassembly of section .text:

000115d0 <.text>:
   115d0:	mov	fp, #0
   115d4:	mov	lr, #0
   115d8:	pop	{r1}		; (ldr r1, [sp], #4)
   115dc:	mov	r2, sp
   115e0:	push	{r2}		; (str r2, [sp, #-4]!)
   115e4:	push	{r0}		; (str r0, [sp, #-4]!)
   115e8:	ldr	ip, [pc, #16]	; 11600 <__snprintf_chk@plt+0x40>
   115ec:	push	{ip}		; (str ip, [sp, #-4]!)
   115f0:	ldr	r0, [pc, #12]	; 11604 <__snprintf_chk@plt+0x44>
   115f4:	ldr	r3, [pc, #12]	; 11608 <__snprintf_chk@plt+0x48>
   115f8:	bl	1141c <__libc_start_main@plt>
   115fc:	bl	115b4 <abort@plt>
   11600:	andeq	r5, r1, r4, asr #22
   11604:	strdeq	r1, [r1], -r8
   11608:	andeq	r5, r1, r4, ror #21
   1160c:	ldr	r3, [pc, #20]	; 11628 <__snprintf_chk@plt+0x68>
   11610:	ldr	r2, [pc, #20]	; 1162c <__snprintf_chk@plt+0x6c>
   11614:	add	r3, pc, r3
   11618:	ldr	r2, [r3, r2]
   1161c:	cmp	r2, #0
   11620:	bxeq	lr
   11624:	b	11434 <__gmon_start__@plt>
   11628:	andeq	r5, r1, r4, ror #19
   1162c:	andeq	r0, r0, r0, lsr #2
   11630:	ldr	r0, [pc, #24]	; 11650 <__snprintf_chk@plt+0x90>
   11634:	ldr	r3, [pc, #24]	; 11654 <__snprintf_chk@plt+0x94>
   11638:	cmp	r3, r0
   1163c:	bxeq	lr
   11640:	ldr	r3, [pc, #16]	; 11658 <__snprintf_chk@plt+0x98>
   11644:	cmp	r3, #0
   11648:	bxeq	lr
   1164c:	bx	r3
   11650:	andeq	r7, r2, r4, lsr #6
   11654:	andeq	r7, r2, r4, lsr #6
   11658:	andeq	r0, r0, r0
   1165c:	ldr	r0, [pc, #36]	; 11688 <__snprintf_chk@plt+0xc8>
   11660:	ldr	r1, [pc, #36]	; 1168c <__snprintf_chk@plt+0xcc>
   11664:	sub	r1, r1, r0
   11668:	asr	r1, r1, #2
   1166c:	add	r1, r1, r1, lsr #31
   11670:	asrs	r1, r1, #1
   11674:	bxeq	lr
   11678:	ldr	r3, [pc, #16]	; 11690 <__snprintf_chk@plt+0xd0>
   1167c:	cmp	r3, #0
   11680:	bxeq	lr
   11684:	bx	r3
   11688:	andeq	r7, r2, r4, lsr #6
   1168c:	andeq	r7, r2, r4, lsr #6
   11690:	andeq	r0, r0, r0
   11694:	push	{r4, lr}
   11698:	ldr	r4, [pc, #24]	; 116b8 <__snprintf_chk@plt+0xf8>
   1169c:	ldrb	r3, [r4]
   116a0:	cmp	r3, #0
   116a4:	popne	{r4, pc}
   116a8:	bl	11630 <__snprintf_chk@plt+0x70>
   116ac:	mov	r3, #1
   116b0:	strb	r3, [r4]
   116b4:	pop	{r4, pc}
   116b8:	andeq	r7, r2, r4, asr #6
   116bc:	b	1165c <__snprintf_chk@plt+0x9c>
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	mov	r4, r0
   116cc:	cmp	r0, #0
   116d0:	bne	117fc <__snprintf_chk@plt+0x23c>
   116d4:	movw	r1, #23443	; 0x5b93
   116d8:	movt	r1, #1
   116dc:	mov	r0, #0
   116e0:	mov	r2, #5
   116e4:	bl	1132c <dcgettext@plt>
   116e8:	mov	r1, r0
   116ec:	movw	r0, #29544	; 0x7368
   116f0:	movt	r0, #2
   116f4:	ldr	r2, [r0]
   116f8:	mov	r0, #1
   116fc:	mov	r3, r2
   11700:	bl	114d0 <__printf_chk@plt>
   11704:	movw	r1, #23508	; 0x5bd4
   11708:	movt	r1, #1
   1170c:	mov	r0, #0
   11710:	mov	r2, #5
   11714:	bl	1132c <dcgettext@plt>
   11718:	movw	r5, #29500	; 0x733c
   1171c:	movt	r5, #2
   11720:	ldr	r1, [r5]
   11724:	bl	1129c <fputs_unlocked@plt>
   11728:	bl	11840 <__snprintf_chk@plt+0x280>
   1172c:	movw	r1, #23569	; 0x5c11
   11730:	movt	r1, #1
   11734:	mov	r0, #0
   11738:	mov	r2, #5
   1173c:	bl	1132c <dcgettext@plt>
   11740:	ldr	r1, [r5]
   11744:	bl	1129c <fputs_unlocked@plt>
   11748:	movw	r1, #24301	; 0x5eed
   1174c:	movt	r1, #1
   11750:	mov	r0, #0
   11754:	mov	r2, #5
   11758:	bl	1132c <dcgettext@plt>
   1175c:	ldr	r1, [r5]
   11760:	bl	1129c <fputs_unlocked@plt>
   11764:	movw	r1, #24367	; 0x5f2f
   11768:	movt	r1, #1
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	bl	1132c <dcgettext@plt>
   11778:	ldr	r1, [r5]
   1177c:	bl	1129c <fputs_unlocked@plt>
   11780:	movw	r1, #24412	; 0x5f5c
   11784:	movt	r1, #1
   11788:	mov	r0, #0
   1178c:	mov	r2, #5
   11790:	bl	1132c <dcgettext@plt>
   11794:	ldr	r1, [r5]
   11798:	bl	1129c <fputs_unlocked@plt>
   1179c:	movw	r1, #24466	; 0x5f92
   117a0:	movt	r1, #1
   117a4:	mov	r0, #0
   117a8:	mov	r2, #5
   117ac:	bl	1132c <dcgettext@plt>
   117b0:	ldr	r1, [r5]
   117b4:	bl	1129c <fputs_unlocked@plt>
   117b8:	movw	r1, #24657	; 0x6051
   117bc:	movt	r1, #1
   117c0:	mov	r0, #0
   117c4:	mov	r2, #5
   117c8:	bl	1132c <dcgettext@plt>
   117cc:	ldr	r1, [r5]
   117d0:	bl	1129c <fputs_unlocked@plt>
   117d4:	movw	r1, #24891	; 0x613b
   117d8:	movt	r1, #1
   117dc:	mov	r0, #0
   117e0:	mov	r2, #5
   117e4:	bl	1132c <dcgettext@plt>
   117e8:	ldr	r1, [r5]
   117ec:	bl	1129c <fputs_unlocked@plt>
   117f0:	bl	11870 <__snprintf_chk@plt+0x2b0>
   117f4:	mov	r0, r4
   117f8:	bl	11464 <exit@plt>
   117fc:	movw	r0, #29496	; 0x7338
   11800:	movt	r0, #2
   11804:	ldr	r5, [r0]
   11808:	movw	r1, #23404	; 0x5b6c
   1180c:	movt	r1, #1
   11810:	mov	r0, #0
   11814:	mov	r2, #5
   11818:	bl	1132c <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #29544	; 0x7368
   11824:	movt	r0, #2
   11828:	ldr	r3, [r0]
   1182c:	mov	r0, r5
   11830:	mov	r1, #1
   11834:	bl	11500 <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11464 <exit@plt>
   11840:	push	{fp, lr}
   11844:	mov	fp, sp
   11848:	movw	r1, #25427	; 0x6353
   1184c:	movt	r1, #1
   11850:	mov	r0, #0
   11854:	mov	r2, #5
   11858:	bl	1132c <dcgettext@plt>
   1185c:	movw	r1, #29500	; 0x733c
   11860:	movt	r1, #2
   11864:	ldr	r1, [r1]
   11868:	pop	{fp, lr}
   1186c:	b	1129c <fputs_unlocked@plt>
   11870:	push	{r4, r5, r6, sl, fp, lr}
   11874:	add	fp, sp, #16
   11878:	sub	sp, sp, #56	; 0x38
   1187c:	movw	r0, #26168	; 0x6638
   11880:	movt	r0, #1
   11884:	add	r1, r0, #32
   11888:	mov	r2, #48	; 0x30
   1188c:	vld1.64	{d16-d17}, [r1]
   11890:	mov	r6, sp
   11894:	add	r1, r6, #32
   11898:	add	r3, r0, #16
   1189c:	vld1.64	{d18-d19}, [r0], r2
   118a0:	vld1.64	{d20-d21}, [r3]
   118a4:	vldr	d22, [r0]
   118a8:	vst1.64	{d16-d17}, [r1]
   118ac:	add	r0, r6, #16
   118b0:	vst1.64	{d20-d21}, [r0]
   118b4:	mov	r0, r6
   118b8:	vst1.64	{d18-d19}, [r0], r2
   118bc:	vstr	d22, [r0]
   118c0:	ldr	r1, [sp]
   118c4:	cmp	r1, #0
   118c8:	movw	r4, #25218	; 0x6282
   118cc:	movt	r4, #1
   118d0:	beq	118f8 <__snprintf_chk@plt+0x338>
   118d4:	mov	r6, sp
   118d8:	movw	r5, #25218	; 0x6282
   118dc:	movt	r5, #1
   118e0:	mov	r0, r5
   118e4:	bl	112b4 <strcmp@plt>
   118e8:	cmp	r0, #0
   118ec:	ldrne	r1, [r6, #8]!
   118f0:	cmpne	r1, #0
   118f4:	bne	118e0 <__snprintf_chk@plt+0x320>
   118f8:	ldr	r5, [r6, #4]
   118fc:	movw	r1, #25597	; 0x63fd
   11900:	movt	r1, #1
   11904:	mov	r0, #0
   11908:	mov	r2, #5
   1190c:	bl	1132c <dcgettext@plt>
   11910:	mov	r1, r0
   11914:	movw	r2, #25257	; 0x62a9
   11918:	movt	r2, #1
   1191c:	movw	r3, #25620	; 0x6414
   11920:	movt	r3, #1
   11924:	mov	r0, #1
   11928:	bl	114d0 <__printf_chk@plt>
   1192c:	cmp	r5, #0
   11930:	moveq	r5, r4
   11934:	mov	r0, #5
   11938:	mov	r1, #0
   1193c:	bl	1153c <setlocale@plt>
   11940:	cmp	r0, #0
   11944:	beq	11984 <__snprintf_chk@plt+0x3c4>
   11948:	movw	r1, #25660	; 0x643c
   1194c:	movt	r1, #1
   11950:	mov	r2, #3
   11954:	bl	115a8 <strncmp@plt>
   11958:	cmp	r0, #0
   1195c:	beq	11984 <__snprintf_chk@plt+0x3c4>
   11960:	movw	r1, #25664	; 0x6440
   11964:	movt	r1, #1
   11968:	mov	r0, #0
   1196c:	mov	r2, #5
   11970:	bl	1132c <dcgettext@plt>
   11974:	movw	r1, #29500	; 0x733c
   11978:	movt	r1, #2
   1197c:	ldr	r1, [r1]
   11980:	bl	1129c <fputs_unlocked@plt>
   11984:	movw	r1, #25735	; 0x6487
   11988:	movt	r1, #1
   1198c:	mov	r0, #0
   11990:	mov	r2, #5
   11994:	bl	1132c <dcgettext@plt>
   11998:	mov	r1, r0
   1199c:	movw	r2, #25620	; 0x6414
   119a0:	movt	r2, #1
   119a4:	mov	r0, #1
   119a8:	mov	r3, r4
   119ac:	bl	114d0 <__printf_chk@plt>
   119b0:	movw	r0, #25530	; 0x63ba
   119b4:	movt	r0, #1
   119b8:	movw	r6, #25812	; 0x64d4
   119bc:	movt	r6, #1
   119c0:	cmp	r5, r4
   119c4:	moveq	r6, r0
   119c8:	movw	r1, #25762	; 0x64a2
   119cc:	movt	r1, #1
   119d0:	mov	r0, #0
   119d4:	mov	r2, #5
   119d8:	bl	1132c <dcgettext@plt>
   119dc:	mov	r1, r0
   119e0:	mov	r0, #1
   119e4:	mov	r2, r5
   119e8:	mov	r3, r6
   119ec:	sub	sp, fp, #16
   119f0:	pop	{r4, r5, r6, sl, fp, lr}
   119f4:	b	114d0 <__printf_chk@plt>
   119f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119fc:	add	fp, sp, #28
   11a00:	sub	sp, sp, #4
   11a04:	vpush	{d8}
   11a08:	sub	sp, sp, #160	; 0xa0
   11a0c:	mov	r4, r1
   11a10:	mov	r5, r0
   11a14:	ldr	r0, [r1]
   11a18:	bl	129c8 <__snprintf_chk@plt+0x1408>
   11a1c:	movw	r1, #25812	; 0x64d4
   11a20:	movt	r1, #1
   11a24:	mov	r0, #6
   11a28:	bl	1153c <setlocale@plt>
   11a2c:	movw	r6, #25261	; 0x62ad
   11a30:	movt	r6, #1
   11a34:	movw	r1, #25226	; 0x628a
   11a38:	movt	r1, #1
   11a3c:	mov	r0, r6
   11a40:	bl	11590 <bindtextdomain@plt>
   11a44:	mov	r0, r6
   11a48:	bl	1135c <textdomain@plt>
   11a4c:	bl	11ebc <__snprintf_chk@plt+0x8fc>
   11a50:	movw	r0, #10220	; 0x27ec
   11a54:	movt	r0, #1
   11a58:	bl	15b48 <__snprintf_chk@plt+0x4588>
   11a5c:	mov	sl, #0
   11a60:	movw	r6, #25250	; 0x62a2
   11a64:	movt	r6, #1
   11a68:	movw	r7, #26040	; 0x65b8
   11a6c:	movt	r7, #1
   11a70:	movw	r8, #29504	; 0x7340
   11a74:	movt	r8, #2
   11a78:	mov	r9, #1
   11a7c:	str	sl, [sp]
   11a80:	mov	r0, r5
   11a84:	mov	r1, r4
   11a88:	mov	r2, r6
   11a8c:	mov	r3, r7
   11a90:	bl	11440 <getopt_long@plt>
   11a94:	cmp	r0, #117	; 0x75
   11a98:	bgt	11ac4 <__snprintf_chk@plt+0x504>
   11a9c:	cmp	r0, #106	; 0x6a
   11aa0:	ble	11b3c <__snprintf_chk@plt+0x57c>
   11aa4:	cmp	r0, #107	; 0x6b
   11aa8:	bne	11af4 <__snprintf_chk@plt+0x534>
   11aac:	ldr	r0, [r8]
   11ab0:	bl	11ed0 <__snprintf_chk@plt+0x910>
   11ab4:	movw	r0, #29512	; 0x7348
   11ab8:	movt	r0, #2
   11abc:	vstr	d0, [r0]
   11ac0:	b	11a7c <__snprintf_chk@plt+0x4bc>
   11ac4:	cmp	r0, #118	; 0x76
   11ac8:	beq	11ae4 <__snprintf_chk@plt+0x524>
   11acc:	cmp	r0, #256	; 0x100
   11ad0:	bne	11b20 <__snprintf_chk@plt+0x560>
   11ad4:	movw	r0, #29521	; 0x7351
   11ad8:	movt	r0, #2
   11adc:	strb	r9, [r0]
   11ae0:	b	11a7c <__snprintf_chk@plt+0x4bc>
   11ae4:	movw	r0, #29520	; 0x7350
   11ae8:	movt	r0, #2
   11aec:	strb	r9, [r0]
   11af0:	b	11a7c <__snprintf_chk@plt+0x4bc>
   11af4:	cmp	r0, #115	; 0x73
   11af8:	bne	11eb4 <__snprintf_chk@plt+0x8f4>
   11afc:	ldr	r0, [r8]
   11b00:	sub	r1, fp, #59	; 0x3b
   11b04:	bl	125a4 <__snprintf_chk@plt+0xfe4>
   11b08:	movw	r1, #28976	; 0x7130
   11b0c:	movt	r1, #2
   11b10:	str	r0, [r1]
   11b14:	cmn	r0, #1
   11b18:	bne	11a7c <__snprintf_chk@plt+0x4bc>
   11b1c:	b	11eb4 <__snprintf_chk@plt+0x8f4>
   11b20:	movw	r1, #257	; 0x101
   11b24:	cmp	r0, r1
   11b28:	bne	11eb4 <__snprintf_chk@plt+0x8f4>
   11b2c:	movw	r0, #29522	; 0x7352
   11b30:	movt	r0, #2
   11b34:	strb	r9, [r0]
   11b38:	b	11a7c <__snprintf_chk@plt+0x4bc>
   11b3c:	cmn	r0, #1
   11b40:	bne	11e54 <__snprintf_chk@plt+0x894>
   11b44:	movw	r6, #29488	; 0x7330
   11b48:	movt	r6, #2
   11b4c:	ldr	r0, [r6]
   11b50:	sub	r1, r5, r0
   11b54:	cmp	r1, #1
   11b58:	ble	11eb4 <__snprintf_chk@plt+0x8f4>
   11b5c:	add	r1, r0, #1
   11b60:	str	r1, [r6]
   11b64:	ldr	r0, [r4, r0, lsl #2]
   11b68:	bl	11ed0 <__snprintf_chk@plt+0x910>
   11b6c:	vorr	d8, d0, d0
   11b70:	ldr	r0, [r6]
   11b74:	ldr	r0, [r4, r0, lsl #2]!
   11b78:	movw	r6, #29524	; 0x7354
   11b7c:	movt	r6, #2
   11b80:	str	r0, [r6]
   11b84:	movw	r0, #29521	; 0x7351
   11b88:	movt	r0, #2
   11b8c:	ldrb	r0, [r0]
   11b90:	cmp	r0, #0
   11b94:	bne	11ba4 <__snprintf_chk@plt+0x5e4>
   11b98:	mov	r0, #0
   11b9c:	mov	r1, #0
   11ba0:	bl	11584 <setpgid@plt>
   11ba4:	movw	r0, #28976	; 0x7130
   11ba8:	movt	r0, #2
   11bac:	ldr	r0, [r0]
   11bb0:	bl	11f8c <__snprintf_chk@plt+0x9cc>
   11bb4:	mov	r0, #21
   11bb8:	mov	r1, #1
   11bbc:	bl	11320 <signal@plt>
   11bc0:	mov	r0, #22
   11bc4:	mov	r1, #1
   11bc8:	bl	11320 <signal@plt>
   11bcc:	bl	12024 <__snprintf_chk@plt+0xa64>
   11bd0:	bl	11554 <fork@plt>
   11bd4:	movw	r7, #29528	; 0x7358
   11bd8:	movt	r7, #2
   11bdc:	str	r0, [r7]
   11be0:	cmp	r0, #0
   11be4:	beq	11c24 <__snprintf_chk@plt+0x664>
   11be8:	cmn	r0, #1
   11bec:	bne	11c94 <__snprintf_chk@plt+0x6d4>
   11bf0:	bl	11494 <__errno_location@plt>
   11bf4:	ldr	r4, [r0]
   11bf8:	movw	r1, #25285	; 0x62c5
   11bfc:	movt	r1, #1
   11c00:	mov	r0, #0
   11c04:	mov	r2, #5
   11c08:	bl	1132c <dcgettext@plt>
   11c0c:	mov	r2, r0
   11c10:	mov	r0, #0
   11c14:	mov	r1, r4
   11c18:	bl	113ec <error@plt>
   11c1c:	mov	r0, #125	; 0x7d
   11c20:	b	11e44 <__snprintf_chk@plt+0x884>
   11c24:	mov	r0, #21
   11c28:	mov	r1, #0
   11c2c:	bl	11320 <signal@plt>
   11c30:	mov	r0, #22
   11c34:	mov	r1, #0
   11c38:	bl	11320 <signal@plt>
   11c3c:	ldr	r0, [r4]
   11c40:	mov	r1, r4
   11c44:	bl	11308 <execvp@plt>
   11c48:	bl	11494 <__errno_location@plt>
   11c4c:	ldr	r4, [r0]
   11c50:	movw	r1, #25309	; 0x62dd
   11c54:	movt	r1, #1
   11c58:	mov	r0, #0
   11c5c:	mov	r2, #5
   11c60:	bl	1132c <dcgettext@plt>
   11c64:	mov	r5, r0
   11c68:	ldr	r0, [r6]
   11c6c:	bl	141bc <__snprintf_chk@plt+0x2bfc>
   11c70:	mov	r3, r0
   11c74:	mov	r0, #0
   11c78:	mov	r1, r4
   11c7c:	mov	r2, r5
   11c80:	bl	113ec <error@plt>
   11c84:	mov	r0, #126	; 0x7e
   11c88:	cmp	r4, #2
   11c8c:	movweq	r0, #127	; 0x7f
   11c90:	b	11e44 <__snprintf_chk@plt+0x884>
   11c94:	mov	r0, #14
   11c98:	bl	12070 <__snprintf_chk@plt+0xab0>
   11c9c:	vorr	d0, d8, d8
   11ca0:	mov	r0, #1
   11ca4:	bl	120e8 <__snprintf_chk@plt+0xb28>
   11ca8:	movw	r0, #28976	; 0x7130
   11cac:	movt	r0, #2
   11cb0:	ldr	r0, [r0]
   11cb4:	add	r1, sp, #8
   11cb8:	bl	12218 <__snprintf_chk@plt+0xc58>
   11cbc:	ldr	r0, [r7]
   11cc0:	sub	r1, fp, #64	; 0x40
   11cc4:	mov	r2, #1
   11cc8:	bl	113a4 <waitpid@plt>
   11ccc:	cmp	r0, #0
   11cd0:	bne	11cfc <__snprintf_chk@plt+0x73c>
   11cd4:	add	r4, sp, #8
   11cd8:	sub	r5, fp, #64	; 0x40
   11cdc:	mov	r0, r4
   11ce0:	bl	114c4 <sigsuspend@plt>
   11ce4:	ldr	r0, [r7]
   11ce8:	mov	r1, r5
   11cec:	mov	r2, #1
   11cf0:	bl	113a4 <waitpid@plt>
   11cf4:	cmp	r0, #0
   11cf8:	beq	11cdc <__snprintf_chk@plt+0x71c>
   11cfc:	cmn	r0, #1
   11d00:	movw	r5, #29532	; 0x735c
   11d04:	movt	r5, #2
   11d08:	ble	11db0 <__snprintf_chk@plt+0x7f0>
   11d0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11d10:	ands	r4, r0, #127	; 0x7f
   11d14:	beq	11de4 <__snprintf_chk@plt+0x824>
   11d18:	mov	r1, #16777216	; 0x1000000
   11d1c:	add	r1, r1, r4, lsl #24
   11d20:	cmp	r1, #33554432	; 0x2000000
   11d24:	blt	11dec <__snprintf_chk@plt+0x82c>
   11d28:	tst	r0, #128	; 0x80
   11d2c:	beq	11d54 <__snprintf_chk@plt+0x794>
   11d30:	movw	r1, #25360	; 0x6310
   11d34:	movt	r1, #1
   11d38:	mov	r0, #0
   11d3c:	mov	r2, #5
   11d40:	bl	1132c <dcgettext@plt>
   11d44:	mov	r2, r0
   11d48:	mov	r0, #0
   11d4c:	mov	r1, #0
   11d50:	bl	113ec <error@plt>
   11d54:	ldrb	r0, [r5]
   11d58:	cmp	r0, #0
   11d5c:	bne	11d88 <__snprintf_chk@plt+0x7c8>
   11d60:	bl	122d8 <__snprintf_chk@plt+0xd18>
   11d64:	cmp	r0, #0
   11d68:	beq	11d88 <__snprintf_chk@plt+0x7c8>
   11d6c:	mov	r0, r4
   11d70:	mov	r1, #0
   11d74:	bl	11320 <signal@plt>
   11d78:	mov	r0, r4
   11d7c:	bl	12070 <__snprintf_chk@plt+0xab0>
   11d80:	mov	r0, r4
   11d84:	bl	112a8 <raise@plt>
   11d88:	cmp	r4, #9
   11d8c:	bne	11da8 <__snprintf_chk@plt+0x7e8>
   11d90:	ldrb	r0, [r5]
   11d94:	cmp	r0, #0
   11d98:	movne	r0, #1
   11d9c:	movwne	r1, #29522	; 0x7352
   11da0:	movtne	r1, #2
   11da4:	strbne	r0, [r1]
   11da8:	orr	r0, r4, #128	; 0x80
   11dac:	b	11e18 <__snprintf_chk@plt+0x858>
   11db0:	bl	11494 <__errno_location@plt>
   11db4:	ldr	r4, [r0]
   11db8:	movw	r1, #25334	; 0x62f6
   11dbc:	movt	r1, #1
   11dc0:	mov	r0, #0
   11dc4:	mov	r2, #5
   11dc8:	bl	1132c <dcgettext@plt>
   11dcc:	mov	r2, r0
   11dd0:	mov	r0, #0
   11dd4:	mov	r1, r4
   11dd8:	bl	113ec <error@plt>
   11ddc:	mov	r0, #125	; 0x7d
   11de0:	b	11e18 <__snprintf_chk@plt+0x858>
   11de4:	ubfx	r0, r0, #8, #8
   11de8:	b	11e18 <__snprintf_chk@plt+0x858>
   11dec:	movw	r1, #25394	; 0x6332
   11df0:	movt	r1, #1
   11df4:	mov	r0, #0
   11df8:	mov	r2, #5
   11dfc:	bl	1132c <dcgettext@plt>
   11e00:	mov	r2, r0
   11e04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e08:	mov	r0, #0
   11e0c:	mov	r1, #0
   11e10:	bl	113ec <error@plt>
   11e14:	mov	r0, #1
   11e18:	str	r0, [fp, #-64]	; 0xffffffc0
   11e1c:	ldrb	r0, [r5]
   11e20:	cmp	r0, #1
   11e24:	bne	11e40 <__snprintf_chk@plt+0x880>
   11e28:	movw	r0, #29522	; 0x7352
   11e2c:	movt	r0, #2
   11e30:	ldrb	r0, [r0]
   11e34:	cmp	r0, #0
   11e38:	moveq	r0, #124	; 0x7c
   11e3c:	streq	r0, [fp, #-64]	; 0xffffffc0
   11e40:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11e44:	sub	sp, fp, #40	; 0x28
   11e48:	vpop	{d8}
   11e4c:	add	sp, sp, #4
   11e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e54:	cmn	r0, #3
   11e58:	bne	11ea4 <__snprintf_chk@plt+0x8e4>
   11e5c:	movw	r0, #28980	; 0x7134
   11e60:	movt	r0, #2
   11e64:	ldr	r3, [r0]
   11e68:	movw	r0, #29500	; 0x733c
   11e6c:	movt	r0, #2
   11e70:	ldr	r0, [r0]
   11e74:	mov	r1, #0
   11e78:	movw	r2, #25271	; 0x62b7
   11e7c:	movt	r2, #1
   11e80:	str	r2, [sp]
   11e84:	str	r1, [sp, #4]
   11e88:	movw	r1, #25218	; 0x6282
   11e8c:	movt	r1, #1
   11e90:	movw	r2, #25257	; 0x62a9
   11e94:	movt	r2, #1
   11e98:	bl	14c88 <__snprintf_chk@plt+0x36c8>
   11e9c:	mov	r0, #0
   11ea0:	bl	11464 <exit@plt>
   11ea4:	cmn	r0, #2
   11ea8:	bne	11eb4 <__snprintf_chk@plt+0x8f4>
   11eac:	mov	r0, #0
   11eb0:	bl	116c0 <__snprintf_chk@plt+0x100>
   11eb4:	mov	r0, #125	; 0x7d
   11eb8:	bl	116c0 <__snprintf_chk@plt+0x100>
   11ebc:	movw	r0, #28984	; 0x7138
   11ec0:	movt	r0, #2
   11ec4:	mov	r1, #125	; 0x7d
   11ec8:	str	r1, [r0]
   11ecc:	bx	lr
   11ed0:	push	{r4, r5, fp, lr}
   11ed4:	add	fp, sp, #8
   11ed8:	sub	sp, sp, #16
   11edc:	mov	r4, r0
   11ee0:	add	r1, sp, #4
   11ee4:	add	r2, sp, #8
   11ee8:	movw	r3, #10060	; 0x274c
   11eec:	movt	r3, #1
   11ef0:	bl	1515c <__snprintf_chk@plt+0x3b9c>
   11ef4:	cmp	r0, #0
   11ef8:	bne	11f0c <__snprintf_chk@plt+0x94c>
   11efc:	bl	11494 <__errno_location@plt>
   11f00:	ldr	r0, [r0]
   11f04:	cmp	r0, #34	; 0x22
   11f08:	bne	11f50 <__snprintf_chk@plt+0x990>
   11f0c:	vldr	d16, [sp, #8]
   11f10:	vcmpe.f64	d16, #0.0
   11f14:	vmrs	APSR_nzcv, fpscr
   11f18:	blt	11f50 <__snprintf_chk@plt+0x990>
   11f1c:	ldr	r0, [sp, #4]
   11f20:	ldrb	r1, [r0]
   11f24:	cmp	r1, #0
   11f28:	beq	11f38 <__snprintf_chk@plt+0x978>
   11f2c:	ldrb	r0, [r0, #1]
   11f30:	cmp	r0, #0
   11f34:	bne	11f50 <__snprintf_chk@plt+0x990>
   11f38:	add	r0, sp, #8
   11f3c:	bl	12338 <__snprintf_chk@plt+0xd78>
   11f40:	cmp	r0, #0
   11f44:	vldrne	d0, [sp, #8]
   11f48:	subne	sp, fp, #8
   11f4c:	popne	{r4, r5, fp, pc}
   11f50:	movw	r1, #25872	; 0x6510
   11f54:	movt	r1, #1
   11f58:	mov	r0, #0
   11f5c:	mov	r2, #5
   11f60:	bl	1132c <dcgettext@plt>
   11f64:	mov	r5, r0
   11f68:	mov	r0, r4
   11f6c:	bl	141bc <__snprintf_chk@plt+0x2bfc>
   11f70:	mov	r3, r0
   11f74:	mov	r0, #0
   11f78:	mov	r1, #0
   11f7c:	mov	r2, r5
   11f80:	bl	113ec <error@plt>
   11f84:	mov	r0, #125	; 0x7d
   11f88:	bl	116c0 <__snprintf_chk@plt+0x100>
   11f8c:	push	{r4, r5, fp, lr}
   11f90:	add	fp, sp, #8
   11f94:	sub	sp, sp, #144	; 0x90
   11f98:	mov	r4, r0
   11f9c:	add	r5, sp, #4
   11fa0:	add	r0, r5, #4
   11fa4:	bl	11548 <sigemptyset@plt>
   11fa8:	mov	r0, #268435456	; 0x10000000
   11fac:	str	r0, [sp, #136]	; 0x88
   11fb0:	movw	r0, #9192	; 0x23e8
   11fb4:	movt	r0, #1
   11fb8:	str	r0, [sp, #4]
   11fbc:	mov	r0, #14
   11fc0:	mov	r1, r5
   11fc4:	mov	r2, #0
   11fc8:	bl	11380 <sigaction@plt>
   11fcc:	mov	r0, #2
   11fd0:	mov	r1, r5
   11fd4:	mov	r2, #0
   11fd8:	bl	11380 <sigaction@plt>
   11fdc:	mov	r0, #3
   11fe0:	mov	r1, r5
   11fe4:	mov	r2, #0
   11fe8:	bl	11380 <sigaction@plt>
   11fec:	mov	r0, #1
   11ff0:	mov	r1, r5
   11ff4:	mov	r2, #0
   11ff8:	bl	11380 <sigaction@plt>
   11ffc:	mov	r0, #15
   12000:	mov	r1, r5
   12004:	mov	r2, #0
   12008:	bl	11380 <sigaction@plt>
   1200c:	mov	r0, r4
   12010:	mov	r1, r5
   12014:	mov	r2, #0
   12018:	bl	11380 <sigaction@plt>
   1201c:	sub	sp, fp, #8
   12020:	pop	{r4, r5, fp, pc}
   12024:	push	{r4, sl, fp, lr}
   12028:	add	fp, sp, #8
   1202c:	sub	sp, sp, #144	; 0x90
   12030:	add	r4, sp, #4
   12034:	add	r0, r4, #4
   12038:	bl	11548 <sigemptyset@plt>
   1203c:	mov	r0, #268435456	; 0x10000000
   12040:	str	r0, [sp, #136]	; 0x88
   12044:	movw	r0, #9632	; 0x25a0
   12048:	movt	r0, #1
   1204c:	str	r0, [sp, #4]
   12050:	mov	r0, #17
   12054:	mov	r1, r4
   12058:	mov	r2, #0
   1205c:	bl	11380 <sigaction@plt>
   12060:	mov	r0, #17
   12064:	bl	12070 <__snprintf_chk@plt+0xab0>
   12068:	sub	sp, fp, #8
   1206c:	pop	{r4, sl, fp, pc}
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	sub	sp, sp, #128	; 0x80
   1207c:	mov	r4, r0
   12080:	mov	r5, sp
   12084:	mov	r0, r5
   12088:	bl	11548 <sigemptyset@plt>
   1208c:	mov	r0, r5
   12090:	mov	r1, r4
   12094:	bl	11410 <sigaddset@plt>
   12098:	mov	r0, #1
   1209c:	mov	r1, r5
   120a0:	mov	r2, #0
   120a4:	bl	112d8 <sigprocmask@plt>
   120a8:	cmp	r0, #0
   120ac:	beq	120dc <__snprintf_chk@plt+0xb1c>
   120b0:	bl	11494 <__errno_location@plt>
   120b4:	ldr	r4, [r0]
   120b8:	movw	r1, #25932	; 0x654c
   120bc:	movt	r1, #1
   120c0:	mov	r0, #0
   120c4:	mov	r2, #5
   120c8:	bl	1132c <dcgettext@plt>
   120cc:	mov	r2, r0
   120d0:	mov	r0, #0
   120d4:	mov	r1, r4
   120d8:	bl	113ec <error@plt>
   120dc:	sub	sp, fp, #8
   120e0:	pop	{r4, r5, fp, pc}
   120e4:	nop	{0}
   120e8:	push	{r4, sl, fp, lr}
   120ec:	add	fp, sp, #8
   120f0:	vpush	{d8}
   120f4:	sub	sp, sp, #32
   120f8:	mov	r4, r0
   120fc:	vmov.f64	d8, d0
   12100:	add	r0, sp, #24
   12104:	bl	128d8 <__snprintf_chk@plt+0x1318>
   12108:	mov	r0, #0
   1210c:	str	r0, [sp, #12]
   12110:	str	r0, [sp, #8]
   12114:	ldr	r0, [sp, #24]
   12118:	ldr	r1, [sp, #28]
   1211c:	str	r1, [sp, #20]
   12120:	str	r0, [sp, #16]
   12124:	add	r2, sp, #4
   12128:	mov	r0, #0
   1212c:	mov	r1, #0
   12130:	bl	11350 <timer_create@plt>
   12134:	cmp	r0, #0
   12138:	beq	1217c <__snprintf_chk@plt+0xbbc>
   1213c:	cmp	r4, #0
   12140:	beq	121d4 <__snprintf_chk@plt+0xc14>
   12144:	bl	11494 <__errno_location@plt>
   12148:	ldr	r4, [r0]
   1214c:	cmp	r4, #38	; 0x26
   12150:	beq	121d4 <__snprintf_chk@plt+0xc14>
   12154:	movw	r1, #25976	; 0x6578
   12158:	movt	r1, #1
   1215c:	mov	r0, #0
   12160:	mov	r2, #5
   12164:	bl	1132c <dcgettext@plt>
   12168:	mov	r2, r0
   1216c:	mov	r0, #0
   12170:	mov	r1, r4
   12174:	bl	113ec <error@plt>
   12178:	b	121d4 <__snprintf_chk@plt+0xc14>
   1217c:	ldr	r0, [sp, #4]
   12180:	add	r2, sp, #8
   12184:	mov	r1, #0
   12188:	mov	r3, #0
   1218c:	bl	11374 <timer_settime@plt>
   12190:	cmp	r0, #0
   12194:	beq	12204 <__snprintf_chk@plt+0xc44>
   12198:	cmp	r4, #0
   1219c:	beq	121cc <__snprintf_chk@plt+0xc0c>
   121a0:	bl	11494 <__errno_location@plt>
   121a4:	ldr	r4, [r0]
   121a8:	movw	r1, #25953	; 0x6561
   121ac:	movt	r1, #1
   121b0:	mov	r0, #0
   121b4:	mov	r2, #5
   121b8:	bl	1132c <dcgettext@plt>
   121bc:	mov	r2, r0
   121c0:	mov	r0, #0
   121c4:	mov	r1, r4
   121c8:	bl	113ec <error@plt>
   121cc:	ldr	r0, [sp, #4]
   121d0:	bl	113f8 <timer_delete@plt>
   121d4:	vldr	d16, [pc, #52]	; 12210 <__snprintf_chk@plt+0xc50>
   121d8:	mvn	r0, #0
   121dc:	vcmpe.f64	d8, d16
   121e0:	vmrs	APSR_nzcv, fpscr
   121e4:	bge	12200 <__snprintf_chk@plt+0xc40>
   121e8:	vcvt.u32.f64	s0, d8
   121ec:	vmov	r0, s0
   121f0:	vcvt.f64.u32	d16, s0
   121f4:	vcmpe.f64	d16, d8
   121f8:	vmrs	APSR_nzcv, fpscr
   121fc:	addmi	r0, r0, #1
   12200:	bl	11338 <alarm@plt>
   12204:	sub	sp, fp, #16
   12208:	vpop	{d8}
   1220c:	pop	{r4, sl, fp, pc}
   12210:			; <UNDEFINED> instruction: 0xffe00000
   12214:	strdmi	pc, [pc, #255]	; 1231b <__snprintf_chk@plt+0xd5b>
   12218:	push	{r4, r5, r6, sl, fp, lr}
   1221c:	add	fp, sp, #16
   12220:	sub	sp, sp, #128	; 0x80
   12224:	mov	r4, r1
   12228:	mov	r6, r0
   1222c:	mov	r5, sp
   12230:	mov	r0, r5
   12234:	bl	11548 <sigemptyset@plt>
   12238:	mov	r0, r5
   1223c:	mov	r1, #14
   12240:	bl	11410 <sigaddset@plt>
   12244:	mov	r0, r5
   12248:	mov	r1, #2
   1224c:	bl	11410 <sigaddset@plt>
   12250:	mov	r0, r5
   12254:	mov	r1, #3
   12258:	bl	11410 <sigaddset@plt>
   1225c:	mov	r0, r5
   12260:	mov	r1, #1
   12264:	bl	11410 <sigaddset@plt>
   12268:	mov	r0, r5
   1226c:	mov	r1, #15
   12270:	bl	11410 <sigaddset@plt>
   12274:	mov	r0, r5
   12278:	mov	r1, r6
   1227c:	bl	11410 <sigaddset@plt>
   12280:	mov	r0, r5
   12284:	mov	r1, #17
   12288:	bl	11410 <sigaddset@plt>
   1228c:	mov	r0, #0
   12290:	mov	r1, r5
   12294:	mov	r2, r4
   12298:	bl	112d8 <sigprocmask@plt>
   1229c:	cmp	r0, #0
   122a0:	beq	122d0 <__snprintf_chk@plt+0xd10>
   122a4:	bl	11494 <__errno_location@plt>
   122a8:	ldr	r4, [r0]
   122ac:	movw	r1, #25932	; 0x654c
   122b0:	movt	r1, #1
   122b4:	mov	r0, #0
   122b8:	mov	r2, #5
   122bc:	bl	1132c <dcgettext@plt>
   122c0:	mov	r2, r0
   122c4:	mov	r0, #0
   122c8:	mov	r1, r4
   122cc:	bl	113ec <error@plt>
   122d0:	sub	sp, fp, #16
   122d4:	pop	{r4, r5, r6, sl, fp, pc}
   122d8:	push	{r4, r5, fp, lr}
   122dc:	add	fp, sp, #8
   122e0:	mov	r4, #0
   122e4:	mov	r0, #4
   122e8:	mov	r1, #0
   122ec:	bl	114dc <prctl@plt>
   122f0:	cmp	r0, #0
   122f4:	beq	1232c <__snprintf_chk@plt+0xd6c>
   122f8:	bl	11494 <__errno_location@plt>
   122fc:	ldr	r5, [r0]
   12300:	movw	r1, #25998	; 0x658e
   12304:	movt	r1, #1
   12308:	mov	r0, #0
   1230c:	mov	r2, #5
   12310:	bl	1132c <dcgettext@plt>
   12314:	mov	r2, r0
   12318:	mov	r0, #0
   1231c:	mov	r1, r5
   12320:	bl	113ec <error@plt>
   12324:	mov	r0, r4
   12328:	pop	{r4, r5, fp, pc}
   1232c:	mov	r4, #1
   12330:	mov	r0, r4
   12334:	pop	{r4, r5, fp, pc}
   12338:	vmov.f64	d16, #112	; 0x3f800000  1.0
   1233c:	sub	r3, r1, #100	; 0x64
   12340:	mov	r2, #0
   12344:	cmp	r3, #15
   12348:	bhi	1239c <__snprintf_chk@plt+0xddc>
   1234c:	add	r1, pc, #0
   12350:	ldr	pc, [r1, r3, lsl #2]
   12354:	muleq	r1, r4, r3
   12358:	andeq	r2, r1, r4, lsr #7
   1235c:	andeq	r2, r1, r4, lsr #7
   12360:	andeq	r2, r1, r4, lsr #7
   12364:	andeq	r2, r1, ip, lsr #7
   12368:	andeq	r2, r1, r4, lsr #7
   1236c:	andeq	r2, r1, r4, lsr #7
   12370:	andeq	r2, r1, r4, lsr #7
   12374:	andeq	r2, r1, r4, lsr #7
   12378:			; <UNDEFINED> instruction: 0x000123b4
   1237c:	andeq	r2, r1, r4, lsr #7
   12380:	andeq	r2, r1, r4, lsr #7
   12384:	andeq	r2, r1, r4, lsr #7
   12388:	andeq	r2, r1, r4, lsr #7
   1238c:	andeq	r2, r1, r4, lsr #7
   12390:			; <UNDEFINED> instruction: 0x000123b8
   12394:	vldr	d16, [pc, #52]	; 123d0 <__snprintf_chk@plt+0xe10>
   12398:	b	123b8 <__snprintf_chk@plt+0xdf8>
   1239c:	cmp	r1, #0
   123a0:	beq	123b8 <__snprintf_chk@plt+0xdf8>
   123a4:	mov	r0, r2
   123a8:	bx	lr
   123ac:	vldr	d16, [pc, #36]	; 123d8 <__snprintf_chk@plt+0xe18>
   123b0:	b	123b8 <__snprintf_chk@plt+0xdf8>
   123b4:	vldr	d16, [pc, #36]	; 123e0 <__snprintf_chk@plt+0xe20>
   123b8:	vldr	d17, [r0]
   123bc:	vmul.f64	d16, d16, d17
   123c0:	vstr	d16, [r0]
   123c4:	mov	r2, #1
   123c8:	mov	r0, r2
   123cc:	bx	lr
   123d0:	andeq	r0, r0, r0
   123d4:	rscsmi	r1, r5, r0, lsl #16
   123d8:	andeq	r0, r0, r0
   123dc:	adcmi	r2, ip, r0
   123e0:	andeq	r0, r0, r0
   123e4:	submi	r0, lr, r0
   123e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   123ec:	add	fp, sp, #24
   123f0:	vpush	{d8}
   123f4:	sub	sp, sp, #32
   123f8:	mov	r4, r0
   123fc:	cmp	r0, #14
   12400:	movw	r9, #28976	; 0x7130
   12404:	movt	r9, #2
   12408:	bne	12420 <__snprintf_chk@plt+0xe60>
   1240c:	movw	r0, #29532	; 0x735c
   12410:	movt	r0, #2
   12414:	mov	r1, #1
   12418:	strb	r1, [r0]
   1241c:	ldr	r4, [r9]
   12420:	movw	r8, #29528	; 0x7358
   12424:	movt	r8, #2
   12428:	ldr	r0, [r8]
   1242c:	cmp	r0, #0
   12430:	beq	12564 <__snprintf_chk@plt+0xfa4>
   12434:	movw	r6, #29512	; 0x7348
   12438:	movt	r6, #2
   1243c:	vldr	d8, [r6]
   12440:	vcmp.f64	d8, #0.0
   12444:	vmrs	APSR_nzcv, fpscr
   12448:	beq	1247c <__snprintf_chk@plt+0xebc>
   1244c:	bl	11494 <__errno_location@plt>
   12450:	mov	r5, r0
   12454:	ldr	r7, [r0]
   12458:	mov	r0, #9
   1245c:	str	r0, [r9]
   12460:	mov	r9, #0
   12464:	vmov.f64	d0, d8
   12468:	mov	r0, #0
   1246c:	bl	120e8 <__snprintf_chk@plt+0xb28>
   12470:	str	r9, [r6]
   12474:	str	r9, [r6, #4]
   12478:	str	r7, [r5]
   1247c:	movw	r0, #29520	; 0x7350
   12480:	movt	r0, #2
   12484:	ldrb	r0, [r0]
   12488:	cmp	r0, #1
   1248c:	bne	12504 <__snprintf_chk@plt+0xf44>
   12490:	add	r1, sp, #13
   12494:	mov	r0, r4
   12498:	bl	14758 <__snprintf_chk@plt+0x3198>
   1249c:	cmp	r0, #0
   124a0:	beq	124c4 <__snprintf_chk@plt+0xf04>
   124a4:	movw	r0, #25897	; 0x6529
   124a8:	movt	r0, #1
   124ac:	stm	sp, {r0, r4}
   124b0:	add	r0, sp, #13
   124b4:	mov	r1, #19
   124b8:	mov	r2, #1
   124bc:	mov	r3, #19
   124c0:	bl	115c0 <__snprintf_chk@plt>
   124c4:	movw	r1, #25900	; 0x652c
   124c8:	movt	r1, #1
   124cc:	mov	r0, #0
   124d0:	mov	r2, #5
   124d4:	bl	1132c <dcgettext@plt>
   124d8:	mov	r5, r0
   124dc:	movw	r0, #29524	; 0x7354
   124e0:	movt	r0, #2
   124e4:	ldr	r0, [r0]
   124e8:	bl	141bc <__snprintf_chk@plt+0x2bfc>
   124ec:	str	r0, [sp]
   124f0:	add	r3, sp, #13
   124f4:	mov	r0, #0
   124f8:	mov	r1, #0
   124fc:	mov	r2, r5
   12500:	bl	113ec <error@plt>
   12504:	ldr	r0, [r8]
   12508:	mov	r1, r4
   1250c:	bl	1256c <__snprintf_chk@plt+0xfac>
   12510:	movw	r0, #29521	; 0x7351
   12514:	movt	r0, #2
   12518:	ldrb	r0, [r0]
   1251c:	cmp	r0, #0
   12520:	bne	1253c <__snprintf_chk@plt+0xf7c>
   12524:	mov	r0, #0
   12528:	mov	r1, r4
   1252c:	bl	1256c <__snprintf_chk@plt+0xfac>
   12530:	cmp	r4, #9
   12534:	cmpne	r4, #18
   12538:	bne	12548 <__snprintf_chk@plt+0xf88>
   1253c:	sub	sp, fp, #32
   12540:	vpop	{d8}
   12544:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12548:	ldr	r0, [r8]
   1254c:	mov	r1, #18
   12550:	bl	1256c <__snprintf_chk@plt+0xfac>
   12554:	mov	r0, #0
   12558:	mov	r1, #18
   1255c:	bl	1256c <__snprintf_chk@plt+0xfac>
   12560:	b	1253c <__snprintf_chk@plt+0xf7c>
   12564:	add	r0, r4, #128	; 0x80
   12568:	bl	112f0 <_exit@plt>
   1256c:	push	{r4, r5, fp, lr}
   12570:	add	fp, sp, #8
   12574:	mov	r4, r1
   12578:	mov	r5, r0
   1257c:	cmp	r0, #0
   12580:	bne	12590 <__snprintf_chk@plt+0xfd0>
   12584:	mov	r0, r4
   12588:	mov	r1, #1
   1258c:	bl	11320 <signal@plt>
   12590:	mov	r0, r5
   12594:	mov	r1, r4
   12598:	pop	{r4, r5, fp, lr}
   1259c:	b	1144c <kill@plt>
   125a0:	bx	lr
   125a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125a8:	add	fp, sp, #24
   125ac:	sub	sp, sp, #8
   125b0:	mov	r8, r1
   125b4:	mov	r9, r0
   125b8:	ldrb	r0, [r0]
   125bc:	sub	r0, r0, #48	; 0x30
   125c0:	cmp	r0, #9
   125c4:	bhi	1263c <__snprintf_chk@plt+0x107c>
   125c8:	bl	11494 <__errno_location@plt>
   125cc:	mov	r6, r0
   125d0:	mov	r0, #0
   125d4:	str	r0, [r6]
   125d8:	mov	r1, sp
   125dc:	mov	r0, r9
   125e0:	mov	r2, #10
   125e4:	bl	112c0 <strtol@plt>
   125e8:	mov	r1, r0
   125ec:	mvn	r0, #0
   125f0:	ldr	r2, [sp]
   125f4:	cmp	r2, r9
   125f8:	beq	1262c <__snprintf_chk@plt+0x106c>
   125fc:	ldrb	r2, [r2]
   12600:	cmp	r2, #0
   12604:	bne	1262c <__snprintf_chk@plt+0x106c>
   12608:	cmn	r1, #1
   1260c:	beq	1262c <__snprintf_chk@plt+0x106c>
   12610:	ldr	r2, [r6]
   12614:	cmp	r2, #0
   12618:	bne	1262c <__snprintf_chk@plt+0x106c>
   1261c:	mov	r0, #127	; 0x7f
   12620:	cmp	r1, #254	; 0xfe
   12624:	movwgt	r0, #255	; 0xff
   12628:	and	r0, r0, r1
   1262c:	str	r0, [sp, #4]
   12630:	cmp	r0, #0
   12634:	bpl	126f0 <__snprintf_chk@plt+0x1130>
   12638:	b	12700 <__snprintf_chk@plt+0x1140>
   1263c:	mov	r0, r9
   12640:	bl	150f8 <__snprintf_chk@plt+0x3b38>
   12644:	mov	r6, r0
   12648:	ldrb	r5, [r0]
   1264c:	cmp	r5, #0
   12650:	beq	12688 <__snprintf_chk@plt+0x10c8>
   12654:	add	r4, r6, #1
   12658:	movw	r7, #26224	; 0x6670
   1265c:	movt	r7, #1
   12660:	uxtb	r1, r5
   12664:	mov	r0, r7
   12668:	mov	r2, #27
   1266c:	bl	1150c <memchr@plt>
   12670:	cmp	r0, #0
   12674:	subne	r0, r5, #32
   12678:	strbne	r0, [r4, #-1]
   1267c:	ldrb	r5, [r4], #1
   12680:	cmp	r5, #0
   12684:	bne	12660 <__snprintf_chk@plt+0x10a0>
   12688:	add	r1, sp, #4
   1268c:	mov	r0, r6
   12690:	bl	145d4 <__snprintf_chk@plt+0x3014>
   12694:	cmp	r0, #0
   12698:	beq	126dc <__snprintf_chk@plt+0x111c>
   1269c:	ldrb	r0, [r6]
   126a0:	cmp	r0, #83	; 0x53
   126a4:	bne	126d4 <__snprintf_chk@plt+0x1114>
   126a8:	ldrb	r0, [r6, #1]
   126ac:	cmp	r0, #73	; 0x49
   126b0:	bne	126d4 <__snprintf_chk@plt+0x1114>
   126b4:	ldrb	r0, [r6, #2]
   126b8:	cmp	r0, #71	; 0x47
   126bc:	bne	126d4 <__snprintf_chk@plt+0x1114>
   126c0:	add	r0, r6, #3
   126c4:	add	r1, sp, #4
   126c8:	bl	145d4 <__snprintf_chk@plt+0x3014>
   126cc:	cmp	r0, #0
   126d0:	beq	126dc <__snprintf_chk@plt+0x111c>
   126d4:	mvn	r0, #0
   126d8:	str	r0, [sp, #4]
   126dc:	mov	r0, r6
   126e0:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   126e4:	ldr	r0, [sp, #4]
   126e8:	cmp	r0, #0
   126ec:	bmi	12700 <__snprintf_chk@plt+0x1140>
   126f0:	mov	r1, r8
   126f4:	bl	14758 <__snprintf_chk@plt+0x3198>
   126f8:	cmp	r0, #0
   126fc:	beq	12740 <__snprintf_chk@plt+0x1180>
   12700:	movw	r1, #26251	; 0x668b
   12704:	movt	r1, #1
   12708:	mov	r0, #0
   1270c:	mov	r2, #5
   12710:	bl	1132c <dcgettext@plt>
   12714:	mov	r5, r0
   12718:	mov	r0, r9
   1271c:	bl	141bc <__snprintf_chk@plt+0x2bfc>
   12720:	mov	r3, r0
   12724:	mov	r0, #0
   12728:	mov	r1, #0
   1272c:	mov	r2, r5
   12730:	bl	113ec <error@plt>
   12734:	mvn	r0, #0
   12738:	sub	sp, fp, #24
   1273c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12740:	ldr	r0, [sp, #4]
   12744:	sub	sp, fp, #24
   12748:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1274c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12750:	add	fp, sp, #24
   12754:	vpush	{d8}
   12758:	sub	sp, sp, #8
   1275c:	mov	r4, r1
   12760:	mov	r5, r0
   12764:	add	r1, sp, #4
   12768:	bl	114e8 <strtod@plt>
   1276c:	vmov.f64	d8, d0
   12770:	ldr	r7, [sp, #4]
   12774:	ldrb	r0, [r7]
   12778:	cmp	r0, #0
   1277c:	beq	127b0 <__snprintf_chk@plt+0x11f0>
   12780:	bl	11494 <__errno_location@plt>
   12784:	mov	r6, r0
   12788:	ldr	r8, [r0]
   1278c:	mov	r1, sp
   12790:	mov	r0, r5
   12794:	bl	155f4 <__snprintf_chk@plt+0x4034>
   12798:	ldr	r0, [sp]
   1279c:	cmp	r7, r0
   127a0:	bcs	127ac <__snprintf_chk@plt+0x11ec>
   127a4:	str	r0, [sp, #4]
   127a8:	b	127b4 <__snprintf_chk@plt+0x11f4>
   127ac:	str	r8, [r6]
   127b0:	vmov.f64	d0, d8
   127b4:	cmp	r4, #0
   127b8:	ldrne	r0, [sp, #4]
   127bc:	strne	r0, [r4]
   127c0:	sub	sp, fp, #32
   127c4:	vpop	{d8}
   127c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127cc:	movw	r1, #29536	; 0x7360
   127d0:	movt	r1, #2
   127d4:	str	r0, [r1]
   127d8:	bx	lr
   127dc:	movw	r1, #29540	; 0x7364
   127e0:	movt	r1, #2
   127e4:	strb	r0, [r1]
   127e8:	bx	lr
   127ec:	push	{r4, r5, r6, sl, fp, lr}
   127f0:	add	fp, sp, #16
   127f4:	sub	sp, sp, #8
   127f8:	movw	r0, #29500	; 0x733c
   127fc:	movt	r0, #2
   12800:	ldr	r0, [r0]
   12804:	bl	15678 <__snprintf_chk@plt+0x40b8>
   12808:	cmp	r0, #0
   1280c:	beq	12834 <__snprintf_chk@plt+0x1274>
   12810:	movw	r0, #29540	; 0x7364
   12814:	movt	r0, #2
   12818:	ldrb	r0, [r0]
   1281c:	cmp	r0, #0
   12820:	beq	12854 <__snprintf_chk@plt+0x1294>
   12824:	bl	11494 <__errno_location@plt>
   12828:	ldr	r0, [r0]
   1282c:	cmp	r0, #32
   12830:	bne	12854 <__snprintf_chk@plt+0x1294>
   12834:	movw	r0, #29496	; 0x7338
   12838:	movt	r0, #2
   1283c:	ldr	r0, [r0]
   12840:	bl	15678 <__snprintf_chk@plt+0x40b8>
   12844:	cmp	r0, #0
   12848:	subeq	sp, fp, #16
   1284c:	popeq	{r4, r5, r6, sl, fp, pc}
   12850:	b	128c4 <__snprintf_chk@plt+0x1304>
   12854:	movw	r1, #26285	; 0x66ad
   12858:	movt	r1, #1
   1285c:	mov	r0, #0
   12860:	mov	r2, #5
   12864:	bl	1132c <dcgettext@plt>
   12868:	mov	r4, r0
   1286c:	movw	r0, #29536	; 0x7360
   12870:	movt	r0, #2
   12874:	ldr	r6, [r0]
   12878:	bl	11494 <__errno_location@plt>
   1287c:	ldr	r5, [r0]
   12880:	cmp	r6, #0
   12884:	bne	128a0 <__snprintf_chk@plt+0x12e0>
   12888:	movw	r2, #26301	; 0x66bd
   1288c:	movt	r2, #1
   12890:	mov	r0, #0
   12894:	mov	r1, r5
   12898:	mov	r3, r4
   1289c:	b	128c0 <__snprintf_chk@plt+0x1300>
   128a0:	mov	r0, r6
   128a4:	bl	1406c <__snprintf_chk@plt+0x2aac>
   128a8:	mov	r3, r0
   128ac:	str	r4, [sp]
   128b0:	movw	r2, #26297	; 0x66b9
   128b4:	movt	r2, #1
   128b8:	mov	r0, #0
   128bc:	mov	r1, r5
   128c0:	bl	113ec <error@plt>
   128c4:	movw	r0, #28984	; 0x7138
   128c8:	movt	r0, #2
   128cc:	ldr	r0, [r0]
   128d0:	bl	112f0 <_exit@plt>
   128d4:	andeq	r0, r0, r0
   128d8:	push	{fp, lr}
   128dc:	mov	fp, sp
   128e0:	vldr	d16, [pc, #160]	; 12988 <__snprintf_chk@plt+0x13c8>
   128e4:	vcmpe.f64	d0, d16
   128e8:	vmrs	APSR_nzcv, fpscr
   128ec:	ble	12968 <__snprintf_chk@plt+0x13a8>
   128f0:	vldr	d16, [pc, #152]	; 12990 <__snprintf_chk@plt+0x13d0>
   128f4:	movw	ip, #51712	; 0xca00
   128f8:	movt	ip, #15258	; 0x3b9a
   128fc:	vcmpe.f64	d0, d16
   12900:	vmrs	APSR_nzcv, fpscr
   12904:	bpl	12978 <__snprintf_chk@plt+0x13b8>
   12908:	vcvt.s32.f64	s2, d0
   1290c:	vldr	d16, [pc, #132]	; 12998 <__snprintf_chk@plt+0x13d8>
   12910:	vmov	lr, s2
   12914:	vcvt.f64.s32	d17, s2
   12918:	vsub.f64	d17, d0, d17
   1291c:	vmul.f64	d16, d17, d16
   12920:	vcvt.s32.f64	s0, d16
   12924:	vmov	r2, s0
   12928:	vcvt.f64.s32	d17, s0
   1292c:	vcmpe.f64	d16, d17
   12930:	vmrs	APSR_nzcv, fpscr
   12934:	addgt	r2, r2, #1
   12938:	movw	r3, #12193	; 0x2fa1
   1293c:	movt	r3, #17592	; 0x44b8
   12940:	smmul	r3, r2, r3
   12944:	asr	r1, r3, #28
   12948:	add	r1, r1, r3, lsr #31
   1294c:	mls	r2, r1, ip, r2
   12950:	add	r1, r1, lr
   12954:	add	r1, r1, r2, asr #31
   12958:	cmp	r2, #0
   1295c:	addmi	r2, r2, ip
   12960:	bl	14840 <__snprintf_chk@plt+0x3280>
   12964:	pop	{fp, pc}
   12968:	mov	r1, #-2147483648	; 0x80000000
   1296c:	mov	r2, #0
   12970:	bl	14840 <__snprintf_chk@plt+0x3280>
   12974:	pop	{fp, pc}
   12978:	sub	r2, ip, #1
   1297c:	mvn	r1, #-2147483648	; 0x80000000
   12980:	bl	14840 <__snprintf_chk@plt+0x3280>
   12984:	pop	{fp, pc}
   12988:	andeq	r0, r0, r0
   1298c:	mvngt	r0, r0
   12990:	andeq	r0, r0, r0
   12994:	mvnmi	r0, r0
   12998:	andeq	r0, r0, r0
   1299c:	bicmi	ip, sp, r5, ror #26
   129a0:	push	{r4, r5, r6, sl, fp, lr}
   129a4:	add	fp, sp, #16
   129a8:	mov	r4, r0
   129ac:	bl	11494 <__errno_location@plt>
   129b0:	mov	r5, r0
   129b4:	ldr	r6, [r0]
   129b8:	mov	r0, r4
   129bc:	bl	112e4 <free@plt>
   129c0:	str	r6, [r5]
   129c4:	pop	{r4, r5, r6, sl, fp, pc}
   129c8:	push	{r4, r5, fp, lr}
   129cc:	add	fp, sp, #8
   129d0:	cmp	r0, #0
   129d4:	beq	12a68 <__snprintf_chk@plt+0x14a8>
   129d8:	mov	r4, r0
   129dc:	mov	r1, #47	; 0x2f
   129e0:	bl	11560 <strrchr@plt>
   129e4:	cmp	r0, #0
   129e8:	mov	r5, r4
   129ec:	addne	r5, r0, #1
   129f0:	sub	r0, r5, r4
   129f4:	cmp	r0, #7
   129f8:	blt	12a4c <__snprintf_chk@plt+0x148c>
   129fc:	sub	r0, r5, #7
   12a00:	movw	r1, #26360	; 0x66f8
   12a04:	movt	r1, #1
   12a08:	mov	r2, #7
   12a0c:	bl	115a8 <strncmp@plt>
   12a10:	cmp	r0, #0
   12a14:	bne	12a4c <__snprintf_chk@plt+0x148c>
   12a18:	movw	r1, #26368	; 0x6700
   12a1c:	movt	r1, #1
   12a20:	mov	r0, r5
   12a24:	mov	r2, #3
   12a28:	bl	115a8 <strncmp@plt>
   12a2c:	cmp	r0, #0
   12a30:	beq	12a3c <__snprintf_chk@plt+0x147c>
   12a34:	mov	r4, r5
   12a38:	b	12a4c <__snprintf_chk@plt+0x148c>
   12a3c:	add	r4, r5, #3
   12a40:	movw	r0, #29480	; 0x7328
   12a44:	movt	r0, #2
   12a48:	str	r4, [r0]
   12a4c:	movw	r0, #29484	; 0x732c
   12a50:	movt	r0, #2
   12a54:	str	r4, [r0]
   12a58:	movw	r0, #29544	; 0x7368
   12a5c:	movt	r0, #2
   12a60:	str	r4, [r0]
   12a64:	pop	{r4, r5, fp, pc}
   12a68:	movw	r0, #29496	; 0x7338
   12a6c:	movt	r0, #2
   12a70:	ldr	r3, [r0]
   12a74:	movw	r0, #26304	; 0x66c0
   12a78:	movt	r0, #1
   12a7c:	mov	r1, #55	; 0x37
   12a80:	mov	r2, #1
   12a84:	bl	1138c <fwrite@plt>
   12a88:	bl	115b4 <abort@plt>
   12a8c:	push	{r4, r5, r6, sl, fp, lr}
   12a90:	add	fp, sp, #16
   12a94:	mov	r4, r0
   12a98:	movw	r0, #29552	; 0x7370
   12a9c:	movt	r0, #2
   12aa0:	cmp	r4, #0
   12aa4:	moveq	r4, r0
   12aa8:	bl	11494 <__errno_location@plt>
   12aac:	mov	r5, r0
   12ab0:	ldr	r6, [r0]
   12ab4:	mov	r0, r4
   12ab8:	mov	r1, #48	; 0x30
   12abc:	bl	15078 <__snprintf_chk@plt+0x3ab8>
   12ac0:	str	r6, [r5]
   12ac4:	pop	{r4, r5, r6, sl, fp, pc}
   12ac8:	movw	r1, #29552	; 0x7370
   12acc:	movt	r1, #2
   12ad0:	cmp	r0, #0
   12ad4:	movne	r1, r0
   12ad8:	ldr	r0, [r1]
   12adc:	bx	lr
   12ae0:	movw	r2, #29552	; 0x7370
   12ae4:	movt	r2, #2
   12ae8:	cmp	r0, #0
   12aec:	movne	r2, r0
   12af0:	str	r1, [r2]
   12af4:	bx	lr
   12af8:	movw	r3, #29552	; 0x7370
   12afc:	movt	r3, #2
   12b00:	cmp	r0, #0
   12b04:	movne	r3, r0
   12b08:	ubfx	r0, r1, #5, #3
   12b0c:	add	ip, r3, r0, lsl #2
   12b10:	ldr	r3, [ip, #8]
   12b14:	and	r1, r1, #31
   12b18:	mov	r0, #1
   12b1c:	and	r0, r0, r3, lsr r1
   12b20:	and	r2, r2, #1
   12b24:	eor	r2, r0, r2
   12b28:	eor	r1, r3, r2, lsl r1
   12b2c:	str	r1, [ip, #8]
   12b30:	bx	lr
   12b34:	movw	r2, #29552	; 0x7370
   12b38:	movt	r2, #2
   12b3c:	cmp	r0, #0
   12b40:	movne	r2, r0
   12b44:	ldr	r0, [r2, #4]
   12b48:	str	r1, [r2, #4]
   12b4c:	bx	lr
   12b50:	push	{fp, lr}
   12b54:	mov	fp, sp
   12b58:	movw	r3, #29552	; 0x7370
   12b5c:	movt	r3, #2
   12b60:	cmp	r0, #0
   12b64:	movne	r3, r0
   12b68:	mov	r0, #10
   12b6c:	str	r0, [r3]
   12b70:	cmp	r1, #0
   12b74:	cmpne	r2, #0
   12b78:	bne	12b80 <__snprintf_chk@plt+0x15c0>
   12b7c:	bl	115b4 <abort@plt>
   12b80:	str	r1, [r3, #40]	; 0x28
   12b84:	str	r2, [r3, #44]	; 0x2c
   12b88:	pop	{fp, pc}
   12b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b90:	add	fp, sp, #28
   12b94:	sub	sp, sp, #20
   12b98:	mov	r8, r3
   12b9c:	mov	r9, r2
   12ba0:	mov	sl, r1
   12ba4:	mov	r7, r0
   12ba8:	ldr	r0, [fp, #8]
   12bac:	movw	r5, #29552	; 0x7370
   12bb0:	movt	r5, #2
   12bb4:	cmp	r0, #0
   12bb8:	movne	r5, r0
   12bbc:	bl	11494 <__errno_location@plt>
   12bc0:	mov	r4, r0
   12bc4:	ldm	r5, {r0, r1}
   12bc8:	ldr	r2, [r5, #40]	; 0x28
   12bcc:	ldr	r3, [r5, #44]	; 0x2c
   12bd0:	ldr	r6, [r4]
   12bd4:	add	r5, r5, #8
   12bd8:	stm	sp, {r0, r1, r5}
   12bdc:	str	r2, [sp, #12]
   12be0:	str	r3, [sp, #16]
   12be4:	mov	r0, r7
   12be8:	mov	r1, sl
   12bec:	mov	r2, r9
   12bf0:	mov	r3, r8
   12bf4:	bl	12c04 <__snprintf_chk@plt+0x1644>
   12bf8:	str	r6, [r4]
   12bfc:	sub	sp, fp, #28
   12c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c08:	add	fp, sp, #28
   12c0c:	sub	sp, sp, #156	; 0x9c
   12c10:	mov	r9, r3
   12c14:	mov	r7, r1
   12c18:	mov	r6, r0
   12c1c:	str	r2, [fp, #-80]	; 0xffffffb0
   12c20:	add	r0, r2, #1
   12c24:	str	r0, [sp, #76]	; 0x4c
   12c28:	ldr	r0, [fp, #12]
   12c2c:	and	r1, r0, #1
   12c30:	str	r1, [sp, #40]	; 0x28
   12c34:	and	r1, r0, #4
   12c38:	str	r1, [sp, #36]	; 0x24
   12c3c:	ubfx	r4, r0, #1, #1
   12c40:	bl	113b0 <__ctype_get_mb_cur_max@plt>
   12c44:	str	r0, [sp, #44]	; 0x2c
   12c48:	ldr	r0, [fp, #24]
   12c4c:	str	r0, [sp, #88]	; 0x58
   12c50:	ldr	r0, [fp, #20]
   12c54:	str	r0, [sp, #80]	; 0x50
   12c58:	ldr	r1, [fp, #8]
   12c5c:	mov	r0, #0
   12c60:	str	r0, [sp, #84]	; 0x54
   12c64:	mov	r0, #0
   12c68:	str	r0, [fp, #-84]	; 0xffffffac
   12c6c:	mov	r0, #0
   12c70:	str	r0, [fp, #-72]	; 0xffffffb8
   12c74:	mov	r0, #0
   12c78:	mov	r2, #0
   12c7c:	str	r2, [fp, #-56]	; 0xffffffc8
   12c80:	mov	r2, #0
   12c84:	str	r2, [sp, #64]	; 0x40
   12c88:	mov	r2, #1
   12c8c:	str	r2, [fp, #-48]	; 0xffffffd0
   12c90:	cmp	r1, #10
   12c94:	bhi	13bc0 <__snprintf_chk@plt+0x2600>
   12c98:	mov	sl, r7
   12c9c:	mov	r7, r1
   12ca0:	add	r1, pc, #24
   12ca4:	mov	r8, #0
   12ca8:	mov	r2, #1
   12cac:	mov	r3, #0
   12cb0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12cb4:	mov	lr, r9
   12cb8:	mov	r5, r6
   12cbc:	ldr	pc, [r1, r7, lsl #2]
   12cc0:	muleq	r1, r4, sp
   12cc4:	ldrdeq	r2, [r1], -r4
   12cc8:	andeq	r2, r1, r4, lsr #27
   12ccc:	andeq	r2, r1, ip, lsl #27
   12cd0:	andeq	r2, r1, r8, asr #27
   12cd4:	andeq	r2, r1, r8, lsr #28
   12cd8:			; <UNDEFINED> instruction: 0x00012db4
   12cdc:	andeq	r2, r1, r4, lsl #29
   12ce0:	andeq	r2, r1, ip, ror #25
   12ce4:	andeq	r2, r1, ip, ror #25
   12ce8:	andeq	r2, r1, r8, lsl sp
   12cec:	movw	r0, #26452	; 0x6754
   12cf0:	movt	r0, #1
   12cf4:	mov	r1, r7
   12cf8:	bl	141c8 <__snprintf_chk@plt+0x2c08>
   12cfc:	str	r0, [sp, #80]	; 0x50
   12d00:	movw	r0, #26454	; 0x6756
   12d04:	movt	r0, #1
   12d08:	mov	r1, r7
   12d0c:	bl	141c8 <__snprintf_chk@plt+0x2c08>
   12d10:	mov	r5, r6
   12d14:	str	r0, [sp, #88]	; 0x58
   12d18:	mov	r8, #0
   12d1c:	tst	r4, #1
   12d20:	str	r7, [fp, #-64]	; 0xffffffc0
   12d24:	bne	12d5c <__snprintf_chk@plt+0x179c>
   12d28:	ldr	r0, [sp, #80]	; 0x50
   12d2c:	ldrb	r0, [r0]
   12d30:	cmp	r0, #0
   12d34:	beq	12d5c <__snprintf_chk@plt+0x179c>
   12d38:	ldr	r1, [sp, #80]	; 0x50
   12d3c:	add	r1, r1, #1
   12d40:	mov	r8, #0
   12d44:	cmp	r8, sl
   12d48:	strbcc	r0, [r5, r8]
   12d4c:	ldrb	r0, [r1, r8]
   12d50:	add	r8, r8, #1
   12d54:	cmp	r0, #0
   12d58:	bne	12d44 <__snprintf_chk@plt+0x1784>
   12d5c:	ldr	r7, [sp, #88]	; 0x58
   12d60:	mov	r0, r7
   12d64:	bl	1147c <strlen@plt>
   12d68:	mov	r5, r6
   12d6c:	str	r0, [fp, #-72]	; 0xffffffb8
   12d70:	str	r7, [fp, #-84]	; 0xffffffac
   12d74:	mov	r2, #1
   12d78:	mov	r3, r4
   12d7c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12d80:	mov	lr, r9
   12d84:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12d88:	b	12e84 <__snprintf_chk@plt+0x18c4>
   12d8c:	mov	r0, #1
   12d90:	b	12dd4 <__snprintf_chk@plt+0x1814>
   12d94:	mov	r7, #0
   12d98:	mov	r8, #0
   12d9c:	mov	r2, r0
   12da0:	b	12e80 <__snprintf_chk@plt+0x18c0>
   12da4:	tst	r4, #1
   12da8:	bne	12dd4 <__snprintf_chk@plt+0x1814>
   12dac:	mov	r2, r0
   12db0:	b	12dfc <__snprintf_chk@plt+0x183c>
   12db4:	mov	r0, #1
   12db8:	str	r0, [fp, #-72]	; 0xffffffb8
   12dbc:	mov	r8, #0
   12dc0:	mov	r7, #5
   12dc4:	b	12e40 <__snprintf_chk@plt+0x1880>
   12dc8:	mov	r2, #1
   12dcc:	tst	r4, #1
   12dd0:	beq	12dfc <__snprintf_chk@plt+0x183c>
   12dd4:	mov	r1, #1
   12dd8:	str	r1, [fp, #-72]	; 0xffffffb8
   12ddc:	mov	r8, #0
   12de0:	mov	r7, #2
   12de4:	movw	r1, #26454	; 0x6756
   12de8:	movt	r1, #1
   12dec:	str	r1, [fp, #-84]	; 0xffffffac
   12df0:	mov	r2, r0
   12df4:	mov	r3, #1
   12df8:	b	12e84 <__snprintf_chk@plt+0x18c4>
   12dfc:	mov	r8, #1
   12e00:	mov	r7, #2
   12e04:	cmp	sl, #0
   12e08:	movne	r0, #39	; 0x27
   12e0c:	strbne	r0, [r5]
   12e10:	movw	r0, #26454	; 0x6756
   12e14:	movt	r0, #1
   12e18:	str	r0, [fp, #-84]	; 0xffffffac
   12e1c:	mov	r0, #1
   12e20:	str	r0, [fp, #-72]	; 0xffffffb8
   12e24:	b	12e80 <__snprintf_chk@plt+0x18c0>
   12e28:	mov	r7, #5
   12e2c:	tst	r4, #1
   12e30:	beq	12e58 <__snprintf_chk@plt+0x1898>
   12e34:	mov	r0, #1
   12e38:	str	r0, [fp, #-72]	; 0xffffffb8
   12e3c:	mov	r8, #0
   12e40:	movw	r0, #26450	; 0x6752
   12e44:	movt	r0, #1
   12e48:	str	r0, [fp, #-84]	; 0xffffffac
   12e4c:	mov	r2, #1
   12e50:	mov	r3, #1
   12e54:	b	12e84 <__snprintf_chk@plt+0x18c4>
   12e58:	cmp	sl, #0
   12e5c:	movne	r0, #34	; 0x22
   12e60:	strbne	r0, [r5]
   12e64:	mov	r8, #1
   12e68:	movw	r0, #26450	; 0x6752
   12e6c:	movt	r0, #1
   12e70:	str	r0, [fp, #-84]	; 0xffffffac
   12e74:	mov	r0, #1
   12e78:	str	r0, [fp, #-72]	; 0xffffffb8
   12e7c:	mov	r2, #1
   12e80:	mov	r3, #0
   12e84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12e88:	cmp	r0, #0
   12e8c:	movwne	r0, #1
   12e90:	and	r1, r0, r3
   12e94:	and	r1, r2, r1
   12e98:	str	r1, [sp, #56]	; 0x38
   12e9c:	sub	r1, r7, #2
   12ea0:	clz	r1, r1
   12ea4:	lsr	r1, r1, #5
   12ea8:	and	r1, r1, r3
   12eac:	str	r1, [sp, #68]	; 0x44
   12eb0:	str	r7, [fp, #-64]	; 0xffffffc0
   12eb4:	subs	r1, r7, #2
   12eb8:	movwne	r1, #1
   12ebc:	eor	r4, r3, #1
   12ec0:	str	r4, [fp, #-88]	; 0xffffffa8
   12ec4:	orr	r4, r1, r4
   12ec8:	str	r4, [sp, #72]	; 0x48
   12ecc:	and	r1, r1, r2
   12ed0:	and	r0, r0, r1
   12ed4:	str	r0, [fp, #-60]	; 0xffffffc4
   12ed8:	str	r3, [fp, #-76]	; 0xffffffb4
   12edc:	orr	r0, r1, r3
   12ee0:	eor	r0, r0, #1
   12ee4:	ldr	r1, [fp, #16]
   12ee8:	clz	r1, r1
   12eec:	lsr	r1, r1, #5
   12ef0:	orr	r0, r1, r0
   12ef4:	str	r0, [fp, #-68]	; 0xffffffbc
   12ef8:	str	r2, [sp, #92]	; 0x5c
   12efc:	eor	r0, r2, #1
   12f00:	str	r0, [sp, #60]	; 0x3c
   12f04:	mov	r7, #0
   12f08:	cmn	lr, #1
   12f0c:	beq	12f1c <__snprintf_chk@plt+0x195c>
   12f10:	cmp	r7, lr
   12f14:	bne	12f28 <__snprintf_chk@plt+0x1968>
   12f18:	b	13a34 <__snprintf_chk@plt+0x2474>
   12f1c:	ldrb	r0, [ip, r7]
   12f20:	cmp	r0, #0
   12f24:	beq	13a34 <__snprintf_chk@plt+0x2474>
   12f28:	mov	r9, #0
   12f2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f30:	cmp	r0, #0
   12f34:	beq	12f68 <__snprintf_chk@plt+0x19a8>
   12f38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12f3c:	add	r4, r7, r0
   12f40:	cmp	r0, #2
   12f44:	bcc	12f60 <__snprintf_chk@plt+0x19a0>
   12f48:	cmn	lr, #1
   12f4c:	bne	12f60 <__snprintf_chk@plt+0x19a0>
   12f50:	mov	r0, ip
   12f54:	bl	1147c <strlen@plt>
   12f58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f5c:	mov	lr, r0
   12f60:	cmp	r4, lr
   12f64:	bls	12f74 <__snprintf_chk@plt+0x19b4>
   12f68:	mov	r0, #0
   12f6c:	str	r0, [fp, #-52]	; 0xffffffcc
   12f70:	b	12fb8 <__snprintf_chk@plt+0x19f8>
   12f74:	mov	r4, lr
   12f78:	add	r0, ip, r7
   12f7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   12f80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12f84:	bl	11470 <bcmp@plt>
   12f88:	cmp	r0, #0
   12f8c:	mov	r1, r0
   12f90:	movwne	r1, #1
   12f94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f98:	orr	r1, r1, r2
   12f9c:	tst	r1, #1
   12fa0:	beq	13b08 <__snprintf_chk@plt+0x2548>
   12fa4:	clz	r0, r0
   12fa8:	lsr	r0, r0, #5
   12fac:	str	r0, [fp, #-52]	; 0xffffffcc
   12fb0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12fb4:	mov	lr, r4
   12fb8:	ldrb	r4, [ip, r7]
   12fbc:	cmp	r4, #126	; 0x7e
   12fc0:	bhi	134f0 <__snprintf_chk@plt+0x1f30>
   12fc4:	mov	r6, #1
   12fc8:	mov	r2, #110	; 0x6e
   12fcc:	mov	r0, #97	; 0x61
   12fd0:	add	r3, pc, #4
   12fd4:	mov	r1, #0
   12fd8:	ldr	pc, [r3, r4, lsl #2]
   12fdc:	andeq	r3, r1, r0, asr r3
   12fe0:	strdeq	r3, [r1], -r0
   12fe4:	strdeq	r3, [r1], -r0
   12fe8:	strdeq	r3, [r1], -r0
   12fec:	strdeq	r3, [r1], -r0
   12ff0:	strdeq	r3, [r1], -r0
   12ff4:	strdeq	r3, [r1], -r0
   12ff8:	andeq	r3, r1, r4, asr #11
   12ffc:	andeq	r3, r1, r0, lsr r3
   13000:	andeq	r3, r1, r8, lsr #6
   13004:	andeq	r3, r1, ip, lsr r3
   13008:	andeq	r3, r1, r8, asr r4
   1300c:	andeq	r3, r1, r0, lsr #6
   13010:	andeq	r3, r1, r8, lsr r3
   13014:	strdeq	r3, [r1], -r0
   13018:	strdeq	r3, [r1], -r0
   1301c:	strdeq	r3, [r1], -r0
   13020:	strdeq	r3, [r1], -r0
   13024:	strdeq	r3, [r1], -r0
   13028:	strdeq	r3, [r1], -r0
   1302c:	strdeq	r3, [r1], -r0
   13030:	strdeq	r3, [r1], -r0
   13034:	strdeq	r3, [r1], -r0
   13038:	strdeq	r3, [r1], -r0
   1303c:	strdeq	r3, [r1], -r0
   13040:	strdeq	r3, [r1], -r0
   13044:	strdeq	r3, [r1], -r0
   13048:	strdeq	r3, [r1], -r0
   1304c:	strdeq	r3, [r1], -r0
   13050:	strdeq	r3, [r1], -r0
   13054:	strdeq	r3, [r1], -r0
   13058:	strdeq	r3, [r1], -r0
   1305c:	ldrdeq	r3, [r1], -r4
   13060:	ldrdeq	r3, [r1], -r8
   13064:	ldrdeq	r3, [r1], -r8
   13068:	andeq	r3, r1, r0, asr #5
   1306c:	ldrdeq	r3, [r1], -r8
   13070:	ldrdeq	r3, [r1], -r8
   13074:	ldrdeq	r3, [r1], -r8
   13078:	andeq	r3, r1, r0, ror #8
   1307c:	ldrdeq	r3, [r1], -r8
   13080:	ldrdeq	r3, [r1], -r8
   13084:	ldrdeq	r3, [r1], -r8
   13088:	ldrdeq	r3, [r1], -r8
   1308c:	ldrdeq	r3, [r1], -r8
   13090:	ldrdeq	r3, [r1], -r8
   13094:	ldrdeq	r3, [r1], -r8
   13098:	ldrdeq	r3, [r1], -r8
   1309c:	ldrdeq	r3, [r1], -r8
   130a0:	ldrdeq	r3, [r1], -r8
   130a4:	ldrdeq	r3, [r1], -r8
   130a8:	ldrdeq	r3, [r1], -r8
   130ac:	ldrdeq	r3, [r1], -r8
   130b0:	ldrdeq	r3, [r1], -r8
   130b4:	ldrdeq	r3, [r1], -r8
   130b8:	ldrdeq	r3, [r1], -r8
   130bc:	ldrdeq	r3, [r1], -r8
   130c0:	ldrdeq	r3, [r1], -r8
   130c4:	ldrdeq	r3, [r1], -r8
   130c8:	ldrdeq	r3, [r1], -r8
   130cc:	ldrdeq	r3, [r1], -r8
   130d0:	ldrdeq	r3, [r1], -r8
   130d4:	ldrdeq	r3, [r1], -r8
   130d8:	andeq	r3, r1, r8, lsr #8
   130dc:	strdeq	r3, [r1], -r0
   130e0:	ldrdeq	r3, [r1], -r8
   130e4:	ldrdeq	r3, [r1], -r8
   130e8:	ldrdeq	r3, [r1], -r8
   130ec:	ldrdeq	r3, [r1], -r8
   130f0:	ldrdeq	r3, [r1], -r8
   130f4:	ldrdeq	r3, [r1], -r8
   130f8:	ldrdeq	r3, [r1], -r8
   130fc:	ldrdeq	r3, [r1], -r8
   13100:	ldrdeq	r3, [r1], -r8
   13104:	ldrdeq	r3, [r1], -r8
   13108:	ldrdeq	r3, [r1], -r8
   1310c:	ldrdeq	r3, [r1], -r8
   13110:	ldrdeq	r3, [r1], -r8
   13114:	ldrdeq	r3, [r1], -r8
   13118:	ldrdeq	r3, [r1], -r8
   1311c:	ldrdeq	r3, [r1], -r8
   13120:	ldrdeq	r3, [r1], -r8
   13124:	ldrdeq	r3, [r1], -r8
   13128:	ldrdeq	r3, [r1], -r8
   1312c:	ldrdeq	r3, [r1], -r8
   13130:	ldrdeq	r3, [r1], -r8
   13134:	ldrdeq	r3, [r1], -r8
   13138:	ldrdeq	r3, [r1], -r8
   1313c:	ldrdeq	r3, [r1], -r8
   13140:	ldrdeq	r3, [r1], -r8
   13144:	ldrdeq	r3, [r1], -r8
   13148:	ldrdeq	r3, [r1], -r8
   1314c:	andeq	r3, r1, r0, lsl #6
   13150:	ldrdeq	r3, [r1], -r8
   13154:	ldrdeq	r3, [r1], -r8
   13158:	ldrdeq	r3, [r1], -r8
   1315c:	ldrdeq	r3, [r1], -r8
   13160:	ldrdeq	r3, [r1], -r8
   13164:	ldrdeq	r3, [r1], -r8
   13168:	ldrdeq	r3, [r1], -r8
   1316c:	ldrdeq	r3, [r1], -r8
   13170:	ldrdeq	r3, [r1], -r8
   13174:	ldrdeq	r3, [r1], -r8
   13178:	ldrdeq	r3, [r1], -r8
   1317c:	ldrdeq	r3, [r1], -r8
   13180:	ldrdeq	r3, [r1], -r8
   13184:	ldrdeq	r3, [r1], -r8
   13188:	ldrdeq	r3, [r1], -r8
   1318c:	ldrdeq	r3, [r1], -r8
   13190:	ldrdeq	r3, [r1], -r8
   13194:	ldrdeq	r3, [r1], -r8
   13198:	ldrdeq	r3, [r1], -r8
   1319c:	ldrdeq	r3, [r1], -r8
   131a0:	ldrdeq	r3, [r1], -r8
   131a4:	ldrdeq	r3, [r1], -r8
   131a8:	ldrdeq	r3, [r1], -r8
   131ac:	ldrdeq	r3, [r1], -r8
   131b0:	ldrdeq	r3, [r1], -r8
   131b4:	ldrdeq	r3, [r1], -r8
   131b8:	ldrdeq	r3, [r1], -r8
   131bc:	ldrdeq	r3, [r1], -r8
   131c0:	ldrdeq	r3, [r1], -r8
   131c4:	ldrdeq	r3, [r1], -r8
   131c8:	muleq	r1, r4, r2
   131cc:	ldrdeq	r3, [r1], -r8
   131d0:	muleq	r1, r4, r2
   131d4:	andeq	r3, r1, r0, asr #5
   131d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   131dc:	tst	r0, #1
   131e0:	bne	1320c <__snprintf_chk@plt+0x1c4c>
   131e4:	ubfx	r0, r4, #5, #3
   131e8:	ldr	r1, [fp, #16]
   131ec:	ldr	r0, [r1, r0, lsl #2]
   131f0:	and	r1, r4, #31
   131f4:	mov	r2, #1
   131f8:	tst	r0, r2, lsl r1
   131fc:	beq	1320c <__snprintf_chk@plt+0x1c4c>
   13200:	mov	r0, r4
   13204:	mov	r1, r6
   13208:	b	13220 <__snprintf_chk@plt+0x1c60>
   1320c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13210:	cmp	r0, #0
   13214:	mov	r0, r4
   13218:	mov	r1, r6
   1321c:	beq	13558 <__snprintf_chk@plt+0x1f98>
   13220:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13224:	tst	r2, #1
   13228:	bne	13b1c <__snprintf_chk@plt+0x255c>
   1322c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13230:	subs	r2, r2, #2
   13234:	movwne	r2, #1
   13238:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1323c:	orr	r2, r2, r3
   13240:	tst	r2, #1
   13244:	bne	13280 <__snprintf_chk@plt+0x1cc0>
   13248:	cmp	r8, sl
   1324c:	movcc	r2, #39	; 0x27
   13250:	strbcc	r2, [r5, r8]
   13254:	add	r2, r8, #1
   13258:	cmp	r2, sl
   1325c:	movcc	r3, #36	; 0x24
   13260:	strbcc	r3, [r5, r2]
   13264:	add	r2, r8, #2
   13268:	cmp	r2, sl
   1326c:	movcc	r3, #39	; 0x27
   13270:	strbcc	r3, [r5, r2]
   13274:	add	r8, r8, #3
   13278:	mov	r2, #1
   1327c:	str	r2, [fp, #-56]	; 0xffffffc8
   13280:	cmp	r8, sl
   13284:	movcc	r2, #92	; 0x5c
   13288:	strbcc	r2, [r5, r8]
   1328c:	add	r8, r8, #1
   13290:	b	1359c <__snprintf_chk@plt+0x1fdc>
   13294:	cmp	lr, #1
   13298:	beq	132c0 <__snprintf_chk@plt+0x1d00>
   1329c:	mov	r6, #0
   132a0:	cmn	lr, #1
   132a4:	bne	132cc <__snprintf_chk@plt+0x1d0c>
   132a8:	ldrb	r0, [ip, #1]
   132ac:	cmp	r0, #0
   132b0:	beq	132c0 <__snprintf_chk@plt+0x1d00>
   132b4:	mvn	lr, #0
   132b8:	mov	r9, #0
   132bc:	b	131d8 <__snprintf_chk@plt+0x1c18>
   132c0:	mov	r6, #0
   132c4:	cmp	r7, #0
   132c8:	beq	132d4 <__snprintf_chk@plt+0x1d14>
   132cc:	mov	r9, #0
   132d0:	b	131d8 <__snprintf_chk@plt+0x1c18>
   132d4:	mov	r1, #1
   132d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132dc:	cmp	r0, #2
   132e0:	bne	132f8 <__snprintf_chk@plt+0x1d38>
   132e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   132e8:	tst	r0, #1
   132ec:	mov	r6, r1
   132f0:	beq	131d8 <__snprintf_chk@plt+0x1c18>
   132f4:	b	13b1c <__snprintf_chk@plt+0x255c>
   132f8:	mov	r6, r1
   132fc:	b	131d8 <__snprintf_chk@plt+0x1c18>
   13300:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13304:	cmp	r0, #2
   13308:	bne	1353c <__snprintf_chk@plt+0x1f7c>
   1330c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13310:	tst	r0, #1
   13314:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13318:	mov	r9, #0
   1331c:	b	13550 <__snprintf_chk@plt+0x1f90>
   13320:	mov	r0, #102	; 0x66
   13324:	b	135c4 <__snprintf_chk@plt+0x2004>
   13328:	mov	r2, #116	; 0x74
   1332c:	b	1333c <__snprintf_chk@plt+0x1d7c>
   13330:	mov	r0, #98	; 0x62
   13334:	b	135c4 <__snprintf_chk@plt+0x2004>
   13338:	mov	r2, #114	; 0x72
   1333c:	ldr	r0, [sp, #72]	; 0x48
   13340:	tst	r0, #1
   13344:	mov	r0, r2
   13348:	bne	135c4 <__snprintf_chk@plt+0x2004>
   1334c:	b	13b1c <__snprintf_chk@plt+0x255c>
   13350:	ldr	r0, [sp, #92]	; 0x5c
   13354:	tst	r0, #1
   13358:	beq	135e0 <__snprintf_chk@plt+0x2020>
   1335c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13360:	tst	r0, #1
   13364:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13368:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1336c:	subs	r0, r0, #2
   13370:	movwne	r0, #1
   13374:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13378:	orr	r0, r0, r1
   1337c:	tst	r0, #1
   13380:	bne	133bc <__snprintf_chk@plt+0x1dfc>
   13384:	cmp	r8, sl
   13388:	movcc	r0, #39	; 0x27
   1338c:	strbcc	r0, [r5, r8]
   13390:	add	r0, r8, #1
   13394:	cmp	r0, sl
   13398:	movcc	r1, #36	; 0x24
   1339c:	strbcc	r1, [r5, r0]
   133a0:	add	r0, r8, #2
   133a4:	cmp	r0, sl
   133a8:	movcc	r1, #39	; 0x27
   133ac:	strbcc	r1, [r5, r0]
   133b0:	add	r8, r8, #3
   133b4:	mov	r0, #1
   133b8:	str	r0, [fp, #-56]	; 0xffffffc8
   133bc:	cmp	r8, sl
   133c0:	movcc	r0, #92	; 0x5c
   133c4:	strbcc	r0, [r5, r8]
   133c8:	add	r0, r8, #1
   133cc:	mov	r6, #0
   133d0:	mov	r9, #1
   133d4:	mov	r4, #48	; 0x30
   133d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   133dc:	cmp	r1, #2
   133e0:	beq	137a4 <__snprintf_chk@plt+0x21e4>
   133e4:	add	r1, r7, #1
   133e8:	cmp	r1, lr
   133ec:	bcs	137a4 <__snprintf_chk@plt+0x21e4>
   133f0:	ldrb	r1, [ip, r1]
   133f4:	sub	r1, r1, #48	; 0x30
   133f8:	uxtb	r1, r1
   133fc:	cmp	r1, #9
   13400:	bhi	137a4 <__snprintf_chk@plt+0x21e4>
   13404:	cmp	r0, sl
   13408:	movcc	r1, #48	; 0x30
   1340c:	strbcc	r1, [r5, r0]
   13410:	add	r0, r8, #2
   13414:	cmp	r0, sl
   13418:	movcc	r1, #48	; 0x30
   1341c:	strbcc	r1, [r5, r0]
   13420:	add	r8, r8, #3
   13424:	b	131d8 <__snprintf_chk@plt+0x1c18>
   13428:	mov	r9, #0
   1342c:	mov	r4, #63	; 0x3f
   13430:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13434:	cmp	r0, #5
   13438:	beq	137ac <__snprintf_chk@plt+0x21ec>
   1343c:	cmp	r0, #2
   13440:	bne	13854 <__snprintf_chk@plt+0x2294>
   13444:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13448:	tst	r0, #1
   1344c:	mov	r6, #0
   13450:	beq	131d8 <__snprintf_chk@plt+0x1c18>
   13454:	b	13b1c <__snprintf_chk@plt+0x255c>
   13458:	mov	r0, #118	; 0x76
   1345c:	b	135c4 <__snprintf_chk@plt+0x2004>
   13460:	mov	r4, #39	; 0x27
   13464:	mov	r0, #1
   13468:	str	r0, [sp, #64]	; 0x40
   1346c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13470:	cmp	r0, #2
   13474:	bne	135fc <__snprintf_chk@plt+0x203c>
   13478:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1347c:	tst	r0, #1
   13480:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13484:	ldr	r2, [sp, #84]	; 0x54
   13488:	cmp	r2, #0
   1348c:	mov	r0, r2
   13490:	movwne	r0, #1
   13494:	clz	r1, sl
   13498:	lsr	r1, r1, #5
   1349c:	orrs	r0, r0, r1
   134a0:	moveq	r2, sl
   134a4:	str	r2, [sp, #84]	; 0x54
   134a8:	moveq	sl, r0
   134ac:	cmp	r8, sl
   134b0:	movcc	r0, #39	; 0x27
   134b4:	strbcc	r0, [r5, r8]
   134b8:	add	r0, r8, #1
   134bc:	cmp	r0, sl
   134c0:	movcc	r1, #92	; 0x5c
   134c4:	strbcc	r1, [r5, r0]
   134c8:	add	r0, r8, #2
   134cc:	cmp	r0, sl
   134d0:	movcc	r1, #39	; 0x27
   134d4:	strbcc	r1, [r5, r0]
   134d8:	add	r8, r8, #3
   134dc:	mov	r0, #0
   134e0:	str	r0, [fp, #-56]	; 0xffffffc8
   134e4:	mov	r9, #0
   134e8:	mov	r6, #1
   134ec:	b	131d8 <__snprintf_chk@plt+0x1c18>
   134f0:	ldr	r0, [sp, #44]	; 0x2c
   134f4:	cmp	r0, #1
   134f8:	bne	13604 <__snprintf_chk@plt+0x2044>
   134fc:	str	lr, [sp, #32]
   13500:	bl	11458 <__ctype_b_loc@plt>
   13504:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13508:	ldr	r0, [r0]
   1350c:	add	r0, r0, r4, lsl #1
   13510:	ldrb	r0, [r0, #1]
   13514:	ubfx	r6, r0, #6, #1
   13518:	mov	r2, #1
   1351c:	ldr	r0, [sp, #60]	; 0x3c
   13520:	orr	r1, r6, r0
   13524:	cmp	r2, #1
   13528:	bhi	1385c <__snprintf_chk@plt+0x229c>
   1352c:	tst	r1, #1
   13530:	beq	1385c <__snprintf_chk@plt+0x229c>
   13534:	ldr	lr, [sp, #32]
   13538:	b	131d8 <__snprintf_chk@plt+0x1c18>
   1353c:	mov	r9, #0
   13540:	mov	r0, #92	; 0x5c
   13544:	ldr	r1, [sp, #56]	; 0x38
   13548:	cmp	r1, #0
   1354c:	beq	135c4 <__snprintf_chk@plt+0x2004>
   13550:	mov	r4, #92	; 0x5c
   13554:	mov	r6, #0
   13558:	cmp	r9, #0
   1355c:	bne	13594 <__snprintf_chk@plt+0x1fd4>
   13560:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13564:	tst	r0, #1
   13568:	beq	13594 <__snprintf_chk@plt+0x1fd4>
   1356c:	cmp	r8, sl
   13570:	movcc	r0, #39	; 0x27
   13574:	strbcc	r0, [r5, r8]
   13578:	add	r0, r8, #1
   1357c:	cmp	r0, sl
   13580:	movcc	r1, #39	; 0x27
   13584:	strbcc	r1, [r5, r0]
   13588:	add	r8, r8, #2
   1358c:	mov	r0, #0
   13590:	str	r0, [fp, #-56]	; 0xffffffc8
   13594:	mov	r1, r6
   13598:	mov	r0, r4
   1359c:	cmp	r8, sl
   135a0:	strbcc	r0, [r5, r8]
   135a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   135a8:	and	r0, r0, r1
   135ac:	str	r0, [fp, #-48]	; 0xffffffd0
   135b0:	add	r8, r8, #1
   135b4:	add	r7, r7, #1
   135b8:	cmn	lr, #1
   135bc:	bne	12f10 <__snprintf_chk@plt+0x1950>
   135c0:	b	12f1c <__snprintf_chk@plt+0x195c>
   135c4:	mov	r9, #0
   135c8:	ldr	r1, [sp, #92]	; 0x5c
   135cc:	tst	r1, #1
   135d0:	mov	r6, #0
   135d4:	mov	r1, #0
   135d8:	beq	131d8 <__snprintf_chk@plt+0x1c18>
   135dc:	b	13220 <__snprintf_chk@plt+0x1c60>
   135e0:	mov	r4, #0
   135e4:	ldr	r0, [sp, #40]	; 0x28
   135e8:	cmp	r0, #0
   135ec:	mov	r9, #0
   135f0:	mov	r6, #0
   135f4:	beq	131d8 <__snprintf_chk@plt+0x1c18>
   135f8:	b	135b4 <__snprintf_chk@plt+0x1ff4>
   135fc:	mov	r6, #1
   13600:	b	131d8 <__snprintf_chk@plt+0x1c18>
   13604:	mov	r0, #0
   13608:	str	r0, [fp, #-36]	; 0xffffffdc
   1360c:	str	r0, [fp, #-40]	; 0xffffffd8
   13610:	cmn	lr, #1
   13614:	bne	13628 <__snprintf_chk@plt+0x2068>
   13618:	mov	r0, ip
   1361c:	bl	1147c <strlen@plt>
   13620:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13624:	mov	lr, r0
   13628:	ldr	r0, [sp, #76]	; 0x4c
   1362c:	add	r0, r0, r7
   13630:	str	r0, [sp, #24]
   13634:	mov	r6, #1
   13638:	mov	r2, #0
   1363c:	sub	r0, fp, #40	; 0x28
   13640:	mov	r3, r0
   13644:	str	r5, [sp, #28]
   13648:	str	lr, [sp, #32]
   1364c:	b	13690 <__snprintf_chk@plt+0x20d0>
   13650:	ldr	r5, [sp, #52]	; 0x34
   13654:	add	r5, r0, r5
   13658:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1365c:	bl	11368 <iswprint@plt>
   13660:	cmp	r0, #0
   13664:	movwne	r0, #1
   13668:	and	r6, r6, r0
   1366c:	sub	r0, fp, #40	; 0x28
   13670:	bl	11314 <mbsinit@plt>
   13674:	sub	r3, fp, #40	; 0x28
   13678:	mov	r2, r5
   1367c:	ldr	lr, [sp, #32]
   13680:	cmp	r0, #0
   13684:	ldr	r5, [sp, #28]
   13688:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1368c:	bne	1351c <__snprintf_chk@plt+0x1f5c>
   13690:	str	r2, [sp, #52]	; 0x34
   13694:	add	r0, r2, r7
   13698:	add	r1, ip, r0
   1369c:	str	r0, [sp, #48]	; 0x30
   136a0:	sub	r2, lr, r0
   136a4:	sub	r0, fp, #44	; 0x2c
   136a8:	bl	15934 <__snprintf_chk@plt+0x4374>
   136ac:	cmp	r0, #0
   136b0:	beq	13a28 <__snprintf_chk@plt+0x2468>
   136b4:	cmn	r0, #1
   136b8:	beq	139e4 <__snprintf_chk@plt+0x2424>
   136bc:	cmn	r0, #2
   136c0:	ldr	lr, [sp, #32]
   136c4:	beq	139ec <__snprintf_chk@plt+0x242c>
   136c8:	cmp	r0, #2
   136cc:	mov	r1, #0
   136d0:	movwcc	r1, #1
   136d4:	ldr	r2, [sp, #68]	; 0x44
   136d8:	eor	r2, r2, #1
   136dc:	orrs	r1, r2, r1
   136e0:	bne	13650 <__snprintf_chk@plt+0x2090>
   136e4:	ldr	r1, [sp, #52]	; 0x34
   136e8:	ldr	r2, [sp, #24]
   136ec:	add	r1, r2, r1
   136f0:	sub	r2, r0, #1
   136f4:	b	13704 <__snprintf_chk@plt+0x2144>
   136f8:	add	r1, r1, #1
   136fc:	subs	r2, r2, #1
   13700:	beq	13650 <__snprintf_chk@plt+0x2090>
   13704:	ldrb	r3, [r1]
   13708:	sub	r3, r3, #91	; 0x5b
   1370c:	cmp	r3, #33	; 0x21
   13710:	bhi	136f8 <__snprintf_chk@plt+0x2138>
   13714:	add	r5, pc, #0
   13718:	ldr	pc, [r5, r3, lsl #2]
   1371c:	andeq	r3, r1, r4, lsl fp
   13720:	andeq	r3, r1, r4, lsl fp
   13724:	strdeq	r3, [r1], -r8
   13728:	andeq	r3, r1, r4, lsl fp
   1372c:	strdeq	r3, [r1], -r8
   13730:	andeq	r3, r1, r4, lsl fp
   13734:	strdeq	r3, [r1], -r8
   13738:	strdeq	r3, [r1], -r8
   1373c:	strdeq	r3, [r1], -r8
   13740:	strdeq	r3, [r1], -r8
   13744:	strdeq	r3, [r1], -r8
   13748:	strdeq	r3, [r1], -r8
   1374c:	strdeq	r3, [r1], -r8
   13750:	strdeq	r3, [r1], -r8
   13754:	strdeq	r3, [r1], -r8
   13758:	strdeq	r3, [r1], -r8
   1375c:	strdeq	r3, [r1], -r8
   13760:	strdeq	r3, [r1], -r8
   13764:	strdeq	r3, [r1], -r8
   13768:	strdeq	r3, [r1], -r8
   1376c:	strdeq	r3, [r1], -r8
   13770:	strdeq	r3, [r1], -r8
   13774:	strdeq	r3, [r1], -r8
   13778:	strdeq	r3, [r1], -r8
   1377c:	strdeq	r3, [r1], -r8
   13780:	strdeq	r3, [r1], -r8
   13784:	strdeq	r3, [r1], -r8
   13788:	strdeq	r3, [r1], -r8
   1378c:	strdeq	r3, [r1], -r8
   13790:	strdeq	r3, [r1], -r8
   13794:	strdeq	r3, [r1], -r8
   13798:	strdeq	r3, [r1], -r8
   1379c:	strdeq	r3, [r1], -r8
   137a0:	andeq	r3, r1, r4, lsl fp
   137a4:	mov	r8, r0
   137a8:	b	131d8 <__snprintf_chk@plt+0x1c18>
   137ac:	ldr	r0, [sp, #36]	; 0x24
   137b0:	cmp	r0, #0
   137b4:	beq	13854 <__snprintf_chk@plt+0x2294>
   137b8:	add	r0, r7, #2
   137bc:	cmp	r0, lr
   137c0:	bcs	13854 <__snprintf_chk@plt+0x2294>
   137c4:	add	r1, r7, ip
   137c8:	ldrb	r1, [r1, #1]
   137cc:	cmp	r1, #63	; 0x3f
   137d0:	bne	13854 <__snprintf_chk@plt+0x2294>
   137d4:	ldrb	r1, [ip, r0]
   137d8:	sub	r2, r1, #33	; 0x21
   137dc:	cmp	r2, #29
   137e0:	bhi	13854 <__snprintf_chk@plt+0x2294>
   137e4:	mov	r3, #1
   137e8:	movw	r6, #20929	; 0x51c1
   137ec:	movt	r6, #14336	; 0x3800
   137f0:	tst	r6, r3, lsl r2
   137f4:	beq	13854 <__snprintf_chk@plt+0x2294>
   137f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   137fc:	tst	r2, #1
   13800:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13804:	cmp	r8, sl
   13808:	movcc	r2, #63	; 0x3f
   1380c:	strbcc	r2, [r5, r8]
   13810:	add	r2, r8, #1
   13814:	cmp	r2, sl
   13818:	movcc	r3, #34	; 0x22
   1381c:	strbcc	r3, [r5, r2]
   13820:	add	r2, r8, #2
   13824:	cmp	r2, sl
   13828:	movcc	r3, #34	; 0x22
   1382c:	strbcc	r3, [r5, r2]
   13830:	add	r2, r8, #3
   13834:	cmp	r2, sl
   13838:	movcc	r3, #63	; 0x3f
   1383c:	strbcc	r3, [r5, r2]
   13840:	add	r8, r8, #4
   13844:	mov	r7, r0
   13848:	mov	r4, r1
   1384c:	mov	r6, #0
   13850:	b	131d8 <__snprintf_chk@plt+0x1c18>
   13854:	mov	r6, #0
   13858:	b	131d8 <__snprintf_chk@plt+0x1c18>
   1385c:	add	r0, r2, r7
   13860:	str	r0, [sp, #52]	; 0x34
   13864:	mov	r2, #0
   13868:	ldr	lr, [sp, #32]
   1386c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13870:	str	r1, [sp, #48]	; 0x30
   13874:	tst	r1, #1
   13878:	bne	13954 <__snprintf_chk@plt+0x2394>
   1387c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13880:	tst	r1, #1
   13884:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13888:	mov	r3, r0
   1388c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13890:	subs	r1, r0, #2
   13894:	movwne	r1, #1
   13898:	orr	r1, r1, r3
   1389c:	tst	r1, #1
   138a0:	bne	138d8 <__snprintf_chk@plt+0x2318>
   138a4:	cmp	r8, sl
   138a8:	movcc	r0, #39	; 0x27
   138ac:	strbcc	r0, [r5, r8]
   138b0:	add	r2, r8, #1
   138b4:	cmp	r2, sl
   138b8:	movcc	r0, #36	; 0x24
   138bc:	strbcc	r0, [r5, r2]
   138c0:	add	r2, r8, #2
   138c4:	cmp	r2, sl
   138c8:	movcc	r0, #39	; 0x27
   138cc:	strbcc	r0, [r5, r2]
   138d0:	add	r8, r8, #3
   138d4:	mov	r3, #1
   138d8:	cmp	r8, sl
   138dc:	movcc	r1, #92	; 0x5c
   138e0:	strbcc	r1, [r5, r8]
   138e4:	add	r2, r8, #1
   138e8:	cmp	r2, sl
   138ec:	bcs	13900 <__snprintf_chk@plt+0x2340>
   138f0:	uxtb	r1, r4
   138f4:	mov	r0, #48	; 0x30
   138f8:	orr	r1, r0, r1, lsr #6
   138fc:	strb	r1, [r5, r2]
   13900:	add	r2, r8, #2
   13904:	cmp	r2, sl
   13908:	lsrcc	r1, r4, #3
   1390c:	movcc	r0, #6
   13910:	bficc	r1, r0, #3, #29
   13914:	strbcc	r1, [r5, r2]
   13918:	mov	r0, #6
   1391c:	bfi	r4, r0, #3, #29
   13920:	add	r8, r8, #3
   13924:	mov	r2, #1
   13928:	mov	r0, r3
   1392c:	b	13978 <__snprintf_chk@plt+0x23b8>
   13930:	cmp	r8, sl
   13934:	strbcc	r4, [r5, r8]
   13938:	ldr	r1, [sp, #76]	; 0x4c
   1393c:	ldrb	r4, [r1, r7]
   13940:	add	r8, r8, #1
   13944:	mov	r7, r3
   13948:	ldr	r1, [sp, #48]	; 0x30
   1394c:	tst	r1, #1
   13950:	beq	1387c <__snprintf_chk@plt+0x22bc>
   13954:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13958:	tst	r1, #1
   1395c:	beq	13970 <__snprintf_chk@plt+0x23b0>
   13960:	cmp	r8, sl
   13964:	movcc	r1, #92	; 0x5c
   13968:	strbcc	r1, [r5, r8]
   1396c:	add	r8, r8, #1
   13970:	mov	r1, #0
   13974:	str	r1, [fp, #-52]	; 0xffffffcc
   13978:	and	r9, r2, #1
   1397c:	add	r3, r7, #1
   13980:	ldr	r1, [sp, #52]	; 0x34
   13984:	cmp	r1, r3
   13988:	bls	139cc <__snprintf_chk@plt+0x240c>
   1398c:	cmp	r9, #0
   13990:	movwne	r9, #1
   13994:	mvn	r1, r0
   13998:	orr	r1, r1, r9
   1399c:	tst	r1, #1
   139a0:	bne	13930 <__snprintf_chk@plt+0x2370>
   139a4:	cmp	r8, sl
   139a8:	movcc	r1, #39	; 0x27
   139ac:	strbcc	r1, [r5, r8]
   139b0:	add	r1, r8, #1
   139b4:	cmp	r1, sl
   139b8:	movcc	r0, #39	; 0x27
   139bc:	strbcc	r0, [r5, r1]
   139c0:	add	r8, r8, #2
   139c4:	mov	r0, #0
   139c8:	b	13930 <__snprintf_chk@plt+0x2370>
   139cc:	str	r0, [fp, #-56]	; 0xffffffc8
   139d0:	cmp	r9, #0
   139d4:	movwne	r9, #1
   139d8:	cmp	r9, #0
   139dc:	beq	13560 <__snprintf_chk@plt+0x1fa0>
   139e0:	b	13594 <__snprintf_chk@plt+0x1fd4>
   139e4:	mov	r6, #0
   139e8:	b	13a28 <__snprintf_chk@plt+0x2468>
   139ec:	mov	r6, #0
   139f0:	ldr	r0, [sp, #48]	; 0x30
   139f4:	cmp	r0, lr
   139f8:	bcs	13a28 <__snprintf_chk@plt+0x2468>
   139fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13a00:	add	r0, ip, r7
   13a04:	ldr	r2, [sp, #52]	; 0x34
   13a08:	ldrb	r1, [r0, r2]
   13a0c:	cmp	r1, #0
   13a10:	beq	1351c <__snprintf_chk@plt+0x1f5c>
   13a14:	add	r2, r2, #1
   13a18:	add	r1, r7, r2
   13a1c:	cmp	r1, lr
   13a20:	bcc	13a08 <__snprintf_chk@plt+0x2448>
   13a24:	b	1351c <__snprintf_chk@plt+0x1f5c>
   13a28:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13a2c:	ldr	r2, [sp, #52]	; 0x34
   13a30:	b	1351c <__snprintf_chk@plt+0x1f5c>
   13a34:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13a38:	eor	r0, r1, #2
   13a3c:	orr	r0, r0, r8
   13a40:	clz	r0, r0
   13a44:	lsr	r0, r0, #5
   13a48:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13a4c:	tst	r3, r0
   13a50:	bne	13b1c <__snprintf_chk@plt+0x255c>
   13a54:	mov	r6, r5
   13a58:	subs	r0, r1, #2
   13a5c:	movwne	r0, #1
   13a60:	orr	r0, r3, r0
   13a64:	tst	r0, #1
   13a68:	ldr	r2, [sp, #92]	; 0x5c
   13a6c:	ldreq	r0, [sp, #64]	; 0x40
   13a70:	eoreq	r0, r0, #1
   13a74:	tsteq	r0, #1
   13a78:	bne	13ab8 <__snprintf_chk@plt+0x24f8>
   13a7c:	mov	r9, lr
   13a80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13a84:	tst	r0, #1
   13a88:	bne	13b84 <__snprintf_chk@plt+0x25c4>
   13a8c:	ldr	r0, [sp, #84]	; 0x54
   13a90:	cmp	r0, #0
   13a94:	beq	13ab8 <__snprintf_chk@plt+0x24f8>
   13a98:	mov	r0, #0
   13a9c:	str	r0, [fp, #-48]	; 0xffffffd0
   13aa0:	mov	r1, #2
   13aa4:	cmp	sl, #0
   13aa8:	mov	r0, r2
   13aac:	mov	r4, r3
   13ab0:	ldr	r7, [sp, #84]	; 0x54
   13ab4:	beq	12c90 <__snprintf_chk@plt+0x16d0>
   13ab8:	ldr	r1, [fp, #-84]	; 0xffffffac
   13abc:	clz	r0, r1
   13ac0:	lsr	r0, r0, #5
   13ac4:	orr	r0, r0, r3
   13ac8:	tst	r0, #1
   13acc:	bne	13af8 <__snprintf_chk@plt+0x2538>
   13ad0:	ldrb	r0, [r1]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13af8 <__snprintf_chk@plt+0x2538>
   13adc:	add	r1, r1, #1
   13ae0:	cmp	r8, sl
   13ae4:	strbcc	r0, [r6, r8]
   13ae8:	add	r8, r8, #1
   13aec:	ldrb	r0, [r1], #1
   13af0:	cmp	r0, #0
   13af4:	bne	13ae0 <__snprintf_chk@plt+0x2520>
   13af8:	cmp	r8, sl
   13afc:	movcc	r0, #0
   13b00:	strbcc	r0, [r6, r8]
   13b04:	b	13b78 <__snprintf_chk@plt+0x25b8>
   13b08:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b0c:	mov	lr, r4
   13b10:	b	13b1c <__snprintf_chk@plt+0x255c>
   13b14:	ldr	r5, [sp, #28]
   13b18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b1c:	mov	r0, #0
   13b20:	ldr	r1, [fp, #12]
   13b24:	bic	r1, r1, #2
   13b28:	mov	r2, #2
   13b2c:	ldr	r3, [sp, #92]	; 0x5c
   13b30:	tst	r3, #1
   13b34:	movwne	r2, #4
   13b38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13b3c:	cmp	r3, #2
   13b40:	movne	r2, r3
   13b44:	str	r2, [sp]
   13b48:	str	r1, [sp, #4]
   13b4c:	str	r0, [sp, #8]
   13b50:	ldr	r0, [sp, #80]	; 0x50
   13b54:	str	r0, [sp, #12]
   13b58:	ldr	r0, [sp, #88]	; 0x58
   13b5c:	str	r0, [sp, #16]
   13b60:	mov	r0, r5
   13b64:	mov	r1, sl
   13b68:	mov	r2, ip
   13b6c:	mov	r3, lr
   13b70:	bl	12c04 <__snprintf_chk@plt+0x1644>
   13b74:	mov	r8, r0
   13b78:	mov	r0, r8
   13b7c:	sub	sp, fp, #28
   13b80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b84:	mov	r0, #5
   13b88:	str	r0, [sp]
   13b8c:	ldr	r0, [fp, #12]
   13b90:	str	r0, [sp, #4]
   13b94:	ldr	r0, [fp, #16]
   13b98:	str	r0, [sp, #8]
   13b9c:	ldr	r0, [sp, #80]	; 0x50
   13ba0:	str	r0, [sp, #12]
   13ba4:	ldr	r0, [sp, #88]	; 0x58
   13ba8:	str	r0, [sp, #16]
   13bac:	mov	r0, r6
   13bb0:	ldr	r1, [sp, #84]	; 0x54
   13bb4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13bb8:	mov	r3, r9
   13bbc:	b	13b70 <__snprintf_chk@plt+0x25b0>
   13bc0:	bl	115b4 <abort@plt>
   13bc4:	mov	r3, r2
   13bc8:	mov	r2, #0
   13bcc:	b	13bd0 <__snprintf_chk@plt+0x2610>
   13bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bd4:	add	fp, sp, #28
   13bd8:	sub	sp, sp, #36	; 0x24
   13bdc:	mov	r4, r2
   13be0:	str	r2, [sp, #24]
   13be4:	mov	r5, r1
   13be8:	mov	r6, r0
   13bec:	str	r0, [sp, #20]
   13bf0:	movw	r8, #29552	; 0x7370
   13bf4:	movt	r8, #2
   13bf8:	cmp	r3, #0
   13bfc:	movne	r8, r3
   13c00:	bl	11494 <__errno_location@plt>
   13c04:	str	r0, [sp, #28]
   13c08:	ldm	r8, {r3, r9}
   13c0c:	ldr	r1, [r8, #40]	; 0x28
   13c10:	ldr	r2, [r8, #44]	; 0x2c
   13c14:	ldr	r7, [r0]
   13c18:	str	r7, [sp, #32]
   13c1c:	add	sl, r8, #8
   13c20:	cmp	r4, #0
   13c24:	orreq	r9, r9, #1
   13c28:	stm	sp, {r3, r9, sl}
   13c2c:	str	r1, [sp, #12]
   13c30:	str	r2, [sp, #16]
   13c34:	mov	r0, #0
   13c38:	mov	r1, #0
   13c3c:	mov	r2, r6
   13c40:	mov	r3, r5
   13c44:	mov	r7, r5
   13c48:	bl	12c04 <__snprintf_chk@plt+0x1644>
   13c4c:	mov	r5, r0
   13c50:	add	r4, r0, #1
   13c54:	mov	r0, r4
   13c58:	bl	14dcc <__snprintf_chk@plt+0x380c>
   13c5c:	mov	r6, r0
   13c60:	ldr	r0, [r8]
   13c64:	ldr	r1, [r8, #40]	; 0x28
   13c68:	ldr	r2, [r8, #44]	; 0x2c
   13c6c:	stm	sp, {r0, r9, sl}
   13c70:	str	r1, [sp, #12]
   13c74:	str	r2, [sp, #16]
   13c78:	mov	r0, r6
   13c7c:	mov	r1, r4
   13c80:	ldr	r2, [sp, #20]
   13c84:	mov	r3, r7
   13c88:	bl	12c04 <__snprintf_chk@plt+0x1644>
   13c8c:	ldr	r0, [sp, #24]
   13c90:	ldr	r1, [sp, #32]
   13c94:	ldr	r2, [sp, #28]
   13c98:	str	r1, [r2]
   13c9c:	cmp	r0, #0
   13ca0:	strne	r5, [r0]
   13ca4:	mov	r0, r6
   13ca8:	sub	sp, fp, #28
   13cac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cb4:	add	fp, sp, #24
   13cb8:	movw	r8, #28992	; 0x7140
   13cbc:	movt	r8, #2
   13cc0:	ldr	r4, [r8]
   13cc4:	movw	r5, #28996	; 0x7144
   13cc8:	movt	r5, #2
   13ccc:	ldr	r0, [r5]
   13cd0:	cmp	r0, #2
   13cd4:	blt	13d00 <__snprintf_chk@plt+0x2740>
   13cd8:	add	r7, r4, #12
   13cdc:	mov	r6, #0
   13ce0:	ldr	r0, [r7, r6, lsl #3]
   13ce4:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   13ce8:	add	r0, r6, #1
   13cec:	ldr	r1, [r5]
   13cf0:	add	r2, r6, #2
   13cf4:	cmp	r2, r1
   13cf8:	mov	r6, r0
   13cfc:	blt	13ce0 <__snprintf_chk@plt+0x2720>
   13d00:	ldr	r0, [r4, #4]
   13d04:	movw	r9, #29600	; 0x73a0
   13d08:	movt	r9, #2
   13d0c:	cmp	r0, r9
   13d10:	movw	r7, #29000	; 0x7148
   13d14:	movt	r7, #2
   13d18:	beq	13d28 <__snprintf_chk@plt+0x2768>
   13d1c:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   13d20:	mov	r0, #256	; 0x100
   13d24:	stm	r7, {r0, r9}
   13d28:	cmp	r4, r7
   13d2c:	beq	13d3c <__snprintf_chk@plt+0x277c>
   13d30:	mov	r0, r4
   13d34:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   13d38:	str	r7, [r8]
   13d3c:	mov	r0, #1
   13d40:	str	r0, [r5]
   13d44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d48:	movw	r3, #29552	; 0x7370
   13d4c:	movt	r3, #2
   13d50:	mvn	r2, #0
   13d54:	b	13d58 <__snprintf_chk@plt+0x2798>
   13d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d5c:	add	fp, sp, #28
   13d60:	sub	sp, sp, #44	; 0x2c
   13d64:	mov	r7, r3
   13d68:	str	r2, [sp, #36]	; 0x24
   13d6c:	str	r1, [sp, #32]
   13d70:	mov	r5, r0
   13d74:	bl	11494 <__errno_location@plt>
   13d78:	cmp	r5, #0
   13d7c:	bmi	13eec <__snprintf_chk@plt+0x292c>
   13d80:	cmn	r5, #-2147483647	; 0x80000001
   13d84:	beq	13eec <__snprintf_chk@plt+0x292c>
   13d88:	movw	r4, #28992	; 0x7140
   13d8c:	movt	r4, #2
   13d90:	ldr	r6, [r4]
   13d94:	str	r0, [sp, #28]
   13d98:	ldr	r0, [r0]
   13d9c:	str	r0, [sp, #24]
   13da0:	movw	r8, #28996	; 0x7144
   13da4:	movt	r8, #2
   13da8:	ldr	r1, [r8]
   13dac:	cmp	r1, r5
   13db0:	ble	13dbc <__snprintf_chk@plt+0x27fc>
   13db4:	mov	sl, r6
   13db8:	b	13e28 <__snprintf_chk@plt+0x2868>
   13dbc:	str	r1, [fp, #-32]	; 0xffffffe0
   13dc0:	mov	r0, #8
   13dc4:	str	r0, [sp]
   13dc8:	movw	r9, #29000	; 0x7148
   13dcc:	movt	r9, #2
   13dd0:	subs	r0, r6, r9
   13dd4:	movne	r0, r6
   13dd8:	sub	r1, r5, r1
   13ddc:	add	r2, r1, #1
   13de0:	sub	r1, fp, #32
   13de4:	mvn	r3, #-2147483648	; 0x80000000
   13de8:	bl	14ea8 <__snprintf_chk@plt+0x38e8>
   13dec:	mov	sl, r0
   13df0:	str	r0, [r4]
   13df4:	cmp	r6, r9
   13df8:	bne	13e04 <__snprintf_chk@plt+0x2844>
   13dfc:	ldrd	r0, [r9]
   13e00:	stm	sl, {r0, r1}
   13e04:	ldr	r1, [r8]
   13e08:	add	r0, sl, r1, lsl #3
   13e0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13e10:	sub	r1, r2, r1
   13e14:	lsl	r2, r1, #3
   13e18:	mov	r1, #0
   13e1c:	bl	114b8 <memset@plt>
   13e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e24:	str	r0, [r8]
   13e28:	mov	r9, sl
   13e2c:	ldr	r6, [r9, r5, lsl #3]!
   13e30:	ldr	r4, [r9, #4]!
   13e34:	ldm	r7, {r0, r1}
   13e38:	ldr	r2, [r7, #40]	; 0x28
   13e3c:	ldr	r3, [r7, #44]	; 0x2c
   13e40:	orr	r8, r1, #1
   13e44:	add	r1, r7, #8
   13e48:	stm	sp, {r0, r8}
   13e4c:	str	r1, [sp, #20]
   13e50:	add	r0, sp, #8
   13e54:	stm	r0, {r1, r2, r3}
   13e58:	mov	r0, r4
   13e5c:	mov	r1, r6
   13e60:	ldr	r2, [sp, #32]
   13e64:	ldr	r3, [sp, #36]	; 0x24
   13e68:	bl	12c04 <__snprintf_chk@plt+0x1644>
   13e6c:	cmp	r6, r0
   13e70:	bhi	13ed4 <__snprintf_chk@plt+0x2914>
   13e74:	add	r6, r0, #1
   13e78:	str	r6, [sl, r5, lsl #3]
   13e7c:	movw	r0, #29600	; 0x73a0
   13e80:	movt	r0, #2
   13e84:	cmp	r4, r0
   13e88:	beq	13e94 <__snprintf_chk@plt+0x28d4>
   13e8c:	mov	r0, r4
   13e90:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   13e94:	mov	r0, r6
   13e98:	bl	14dcc <__snprintf_chk@plt+0x380c>
   13e9c:	mov	r4, r0
   13ea0:	str	r0, [r9]
   13ea4:	ldr	r0, [r7]
   13ea8:	ldr	r1, [r7, #40]	; 0x28
   13eac:	ldr	r2, [r7, #44]	; 0x2c
   13eb0:	stm	sp, {r0, r8}
   13eb4:	ldr	r0, [sp, #20]
   13eb8:	add	r3, sp, #8
   13ebc:	stm	r3, {r0, r1, r2}
   13ec0:	mov	r0, r4
   13ec4:	mov	r1, r6
   13ec8:	ldr	r2, [sp, #32]
   13ecc:	ldr	r3, [sp, #36]	; 0x24
   13ed0:	bl	12c04 <__snprintf_chk@plt+0x1644>
   13ed4:	ldr	r0, [sp, #28]
   13ed8:	ldr	r1, [sp, #24]
   13edc:	str	r1, [r0]
   13ee0:	mov	r0, r4
   13ee4:	sub	sp, fp, #28
   13ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eec:	bl	115b4 <abort@plt>
   13ef0:	movw	r3, #29552	; 0x7370
   13ef4:	movt	r3, #2
   13ef8:	b	13d58 <__snprintf_chk@plt+0x2798>
   13efc:	mov	r1, r0
   13f00:	mov	r0, #0
   13f04:	b	13d48 <__snprintf_chk@plt+0x2788>
   13f08:	mov	r2, r1
   13f0c:	mov	r1, r0
   13f10:	mov	r0, #0
   13f14:	b	13ef0 <__snprintf_chk@plt+0x2930>
   13f18:	push	{r4, r5, r6, sl, fp, lr}
   13f1c:	add	fp, sp, #16
   13f20:	sub	sp, sp, #48	; 0x30
   13f24:	mov	r4, r2
   13f28:	mov	r5, r0
   13f2c:	mov	r6, sp
   13f30:	mov	r0, r6
   13f34:	bl	13f54 <__snprintf_chk@plt+0x2994>
   13f38:	mov	r0, r5
   13f3c:	mov	r1, r4
   13f40:	mvn	r2, #0
   13f44:	mov	r3, r6
   13f48:	bl	13d58 <__snprintf_chk@plt+0x2798>
   13f4c:	sub	sp, fp, #16
   13f50:	pop	{r4, r5, r6, sl, fp, pc}
   13f54:	push	{fp, lr}
   13f58:	mov	fp, sp
   13f5c:	vmov.i32	q8, #0	; 0x00000000
   13f60:	mov	r2, #32
   13f64:	mov	r3, r0
   13f68:	vst1.32	{d16-d17}, [r3], r2
   13f6c:	vst1.32	{d16-d17}, [r3]
   13f70:	add	r2, r0, #16
   13f74:	vst1.32	{d16-d17}, [r2]
   13f78:	cmp	r1, #10
   13f7c:	strne	r1, [r0]
   13f80:	popne	{fp, pc}
   13f84:	bl	115b4 <abort@plt>
   13f88:	push	{r4, r5, r6, r7, fp, lr}
   13f8c:	add	fp, sp, #16
   13f90:	sub	sp, sp, #48	; 0x30
   13f94:	mov	r4, r3
   13f98:	mov	r5, r2
   13f9c:	mov	r6, r0
   13fa0:	mov	r7, sp
   13fa4:	mov	r0, r7
   13fa8:	bl	13f54 <__snprintf_chk@plt+0x2994>
   13fac:	mov	r0, r6
   13fb0:	mov	r1, r5
   13fb4:	mov	r2, r4
   13fb8:	mov	r3, r7
   13fbc:	bl	13d58 <__snprintf_chk@plt+0x2798>
   13fc0:	sub	sp, fp, #16
   13fc4:	pop	{r4, r5, r6, r7, fp, pc}
   13fc8:	mov	r2, r1
   13fcc:	mov	r1, r0
   13fd0:	mov	r0, #0
   13fd4:	b	13f18 <__snprintf_chk@plt+0x2958>
   13fd8:	mov	r3, r2
   13fdc:	mov	r2, r1
   13fe0:	mov	r1, r0
   13fe4:	mov	r0, #0
   13fe8:	b	13f88 <__snprintf_chk@plt+0x29c8>
   13fec:	push	{r4, r5, r6, sl, fp, lr}
   13ff0:	add	fp, sp, #16
   13ff4:	sub	sp, sp, #48	; 0x30
   13ff8:	mov	r4, r1
   13ffc:	mov	r5, r0
   14000:	movw	r0, #29552	; 0x7370
   14004:	movt	r0, #2
   14008:	add	r1, r0, #16
   1400c:	mov	r3, #32
   14010:	vld1.64	{d16-d17}, [r0], r3
   14014:	vld1.64	{d18-d19}, [r1]
   14018:	mov	r6, sp
   1401c:	add	r1, r6, #16
   14020:	vld1.64	{d20-d21}, [r0]
   14024:	vst1.64	{d18-d19}, [r1]
   14028:	mov	r0, r6
   1402c:	vst1.64	{d16-d17}, [r0], r3
   14030:	vst1.64	{d20-d21}, [r0]
   14034:	mov	r0, r6
   14038:	mov	r1, r2
   1403c:	mov	r2, #1
   14040:	bl	12af8 <__snprintf_chk@plt+0x1538>
   14044:	mov	r0, #0
   14048:	mov	r1, r5
   1404c:	mov	r2, r4
   14050:	mov	r3, r6
   14054:	bl	13d58 <__snprintf_chk@plt+0x2798>
   14058:	sub	sp, fp, #16
   1405c:	pop	{r4, r5, r6, sl, fp, pc}
   14060:	mov	r2, r1
   14064:	mvn	r1, #0
   14068:	b	13fec <__snprintf_chk@plt+0x2a2c>
   1406c:	mov	r1, #58	; 0x3a
   14070:	b	14060 <__snprintf_chk@plt+0x2aa0>
   14074:	mov	r2, #58	; 0x3a
   14078:	b	13fec <__snprintf_chk@plt+0x2a2c>
   1407c:	push	{r4, r5, r6, sl, fp, lr}
   14080:	add	fp, sp, #16
   14084:	sub	sp, sp, #48	; 0x30
   14088:	mov	r4, r2
   1408c:	mov	r5, r0
   14090:	mov	r6, sp
   14094:	mov	r0, r6
   14098:	bl	13f54 <__snprintf_chk@plt+0x2994>
   1409c:	mov	r0, r6
   140a0:	mov	r1, #58	; 0x3a
   140a4:	mov	r2, #1
   140a8:	bl	12af8 <__snprintf_chk@plt+0x1538>
   140ac:	mov	r0, r5
   140b0:	mov	r1, r4
   140b4:	mvn	r2, #0
   140b8:	mov	r3, r6
   140bc:	bl	13d58 <__snprintf_chk@plt+0x2798>
   140c0:	sub	sp, fp, #16
   140c4:	pop	{r4, r5, r6, sl, fp, pc}
   140c8:	push	{fp, lr}
   140cc:	mov	fp, sp
   140d0:	sub	sp, sp, #8
   140d4:	mvn	ip, #0
   140d8:	str	ip, [sp]
   140dc:	bl	140e8 <__snprintf_chk@plt+0x2b28>
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}
   140e8:	push	{r4, r5, r6, r7, fp, lr}
   140ec:	add	fp, sp, #16
   140f0:	sub	sp, sp, #48	; 0x30
   140f4:	mov	r7, r3
   140f8:	mov	r5, r0
   140fc:	movw	r0, #29552	; 0x7370
   14100:	movt	r0, #2
   14104:	add	r3, r0, #16
   14108:	mov	r4, #32
   1410c:	vld1.64	{d16-d17}, [r0], r4
   14110:	vld1.64	{d18-d19}, [r3]
   14114:	mov	r6, sp
   14118:	add	r3, r6, #16
   1411c:	vld1.64	{d20-d21}, [r0]
   14120:	vst1.64	{d18-d19}, [r3]
   14124:	mov	r0, r6
   14128:	vst1.64	{d16-d17}, [r0], r4
   1412c:	vst1.64	{d20-d21}, [r0]
   14130:	mov	r0, r6
   14134:	bl	12b50 <__snprintf_chk@plt+0x1590>
   14138:	ldr	r2, [fp, #8]
   1413c:	mov	r0, r5
   14140:	mov	r1, r7
   14144:	mov	r3, r6
   14148:	bl	13d58 <__snprintf_chk@plt+0x2798>
   1414c:	sub	sp, fp, #16
   14150:	pop	{r4, r5, r6, r7, fp, pc}
   14154:	mov	r3, r2
   14158:	mov	r2, r1
   1415c:	mov	r1, r0
   14160:	mov	r0, #0
   14164:	b	140c8 <__snprintf_chk@plt+0x2b08>
   14168:	push	{fp, lr}
   1416c:	mov	fp, sp
   14170:	sub	sp, sp, #8
   14174:	mov	ip, r2
   14178:	mov	r2, r1
   1417c:	mov	r1, r0
   14180:	str	r3, [sp]
   14184:	mov	r0, #0
   14188:	mov	r3, ip
   1418c:	bl	140e8 <__snprintf_chk@plt+0x2b28>
   14190:	mov	sp, fp
   14194:	pop	{fp, pc}
   14198:	movw	r3, #29008	; 0x7150
   1419c:	movt	r3, #2
   141a0:	b	13d58 <__snprintf_chk@plt+0x2798>
   141a4:	mov	r2, r1
   141a8:	mov	r1, r0
   141ac:	mov	r0, #0
   141b0:	b	14198 <__snprintf_chk@plt+0x2bd8>
   141b4:	mvn	r2, #0
   141b8:	b	14198 <__snprintf_chk@plt+0x2bd8>
   141bc:	mov	r1, r0
   141c0:	mov	r0, #0
   141c4:	b	141b4 <__snprintf_chk@plt+0x2bf4>
   141c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141cc:	add	fp, sp, #24
   141d0:	sub	sp, sp, #16
   141d4:	mov	r4, r1
   141d8:	mov	r5, r0
   141dc:	mov	r7, #0
   141e0:	mov	r0, #0
   141e4:	mov	r1, r5
   141e8:	mov	r2, #5
   141ec:	bl	1132c <dcgettext@plt>
   141f0:	cmp	r0, r5
   141f4:	beq	14200 <__snprintf_chk@plt+0x2c40>
   141f8:	sub	sp, fp, #24
   141fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14200:	bl	158fc <__snprintf_chk@plt+0x433c>
   14204:	mov	r6, r0
   14208:	mov	r8, #56	; 0x38
   1420c:	mov	r0, #45	; 0x2d
   14210:	stm	sp, {r0, r8}
   14214:	str	r7, [sp, #8]
   14218:	str	r7, [sp, #12]
   1421c:	mov	r0, r6
   14220:	mov	r1, #85	; 0x55
   14224:	mov	r2, #84	; 0x54
   14228:	mov	r3, #70	; 0x46
   1422c:	bl	142c4 <__snprintf_chk@plt+0x2d04>
   14230:	cmp	r0, #0
   14234:	beq	14250 <__snprintf_chk@plt+0x2c90>
   14238:	ldrb	r1, [r5]
   1423c:	movw	r2, #26456	; 0x6758
   14240:	movt	r2, #1
   14244:	movw	r0, #26460	; 0x675c
   14248:	movt	r0, #1
   1424c:	b	14294 <__snprintf_chk@plt+0x2cd4>
   14250:	mov	r0, #48	; 0x30
   14254:	mov	r1, #51	; 0x33
   14258:	str	r8, [sp]
   1425c:	stmib	sp, {r0, r1}
   14260:	str	r0, [sp, #12]
   14264:	mov	r0, r6
   14268:	mov	r1, #71	; 0x47
   1426c:	mov	r2, #66	; 0x42
   14270:	mov	r3, #49	; 0x31
   14274:	bl	142c4 <__snprintf_chk@plt+0x2d04>
   14278:	cmp	r0, #0
   1427c:	beq	142a4 <__snprintf_chk@plt+0x2ce4>
   14280:	ldrb	r1, [r5]
   14284:	movw	r2, #26464	; 0x6760
   14288:	movt	r2, #1
   1428c:	movw	r0, #26468	; 0x6764
   14290:	movt	r0, #1
   14294:	cmp	r1, #96	; 0x60
   14298:	moveq	r0, r2
   1429c:	sub	sp, fp, #24
   142a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142a4:	movw	r1, #26450	; 0x6752
   142a8:	movt	r1, #1
   142ac:	movw	r0, #26454	; 0x6756
   142b0:	movt	r0, #1
   142b4:	cmp	r4, #9
   142b8:	moveq	r0, r1
   142bc:	sub	sp, fp, #24
   142c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142c4:	push	{r4, r5, r6, r7, fp, lr}
   142c8:	add	fp, sp, #16
   142cc:	sub	sp, sp, #16
   142d0:	mov	r4, r3
   142d4:	mov	r5, r2
   142d8:	mov	r7, r1
   142dc:	mov	r6, r0
   142e0:	mov	r0, r1
   142e4:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   142e8:	ldrb	r1, [r6]
   142ec:	cmp	r0, #0
   142f0:	andne	r1, r1, #223	; 0xdf
   142f4:	mov	r0, #0
   142f8:	cmp	r1, r7
   142fc:	bne	14334 <__snprintf_chk@plt+0x2d74>
   14300:	cmp	r7, #0
   14304:	beq	1433c <__snprintf_chk@plt+0x2d7c>
   14308:	ldr	r0, [fp, #20]
   1430c:	ldr	r1, [fp, #16]
   14310:	ldr	r2, [fp, #12]
   14314:	ldr	r3, [fp, #8]
   14318:	str	r2, [sp]
   1431c:	str	r1, [sp, #4]
   14320:	str	r0, [sp, #8]
   14324:	mov	r0, r6
   14328:	mov	r1, r5
   1432c:	mov	r2, r4
   14330:	bl	14348 <__snprintf_chk@plt+0x2d88>
   14334:	sub	sp, fp, #16
   14338:	pop	{r4, r5, r6, r7, fp, pc}
   1433c:	mov	r0, #1
   14340:	sub	sp, fp, #16
   14344:	pop	{r4, r5, r6, r7, fp, pc}
   14348:	push	{r4, r5, r6, r7, fp, lr}
   1434c:	add	fp, sp, #16
   14350:	sub	sp, sp, #8
   14354:	mov	r4, r3
   14358:	mov	r5, r2
   1435c:	mov	r7, r1
   14360:	mov	r6, r0
   14364:	mov	r0, r1
   14368:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   1436c:	ldrb	r1, [r6, #1]
   14370:	cmp	r0, #0
   14374:	andne	r1, r1, #223	; 0xdf
   14378:	mov	r0, #0
   1437c:	cmp	r1, r7
   14380:	bne	143b0 <__snprintf_chk@plt+0x2df0>
   14384:	cmp	r7, #0
   14388:	beq	143b8 <__snprintf_chk@plt+0x2df8>
   1438c:	ldr	r0, [fp, #16]
   14390:	ldr	r1, [fp, #12]
   14394:	ldr	r3, [fp, #8]
   14398:	str	r1, [sp]
   1439c:	str	r0, [sp, #4]
   143a0:	mov	r0, r6
   143a4:	mov	r1, r5
   143a8:	mov	r2, r4
   143ac:	bl	143c4 <__snprintf_chk@plt+0x2e04>
   143b0:	sub	sp, fp, #16
   143b4:	pop	{r4, r5, r6, r7, fp, pc}
   143b8:	mov	r0, #1
   143bc:	sub	sp, fp, #16
   143c0:	pop	{r4, r5, r6, r7, fp, pc}
   143c4:	push	{r4, r5, r6, r7, fp, lr}
   143c8:	add	fp, sp, #16
   143cc:	sub	sp, sp, #8
   143d0:	mov	r4, r3
   143d4:	mov	r5, r2
   143d8:	mov	r7, r1
   143dc:	mov	r6, r0
   143e0:	mov	r0, r1
   143e4:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   143e8:	ldrb	r1, [r6, #2]
   143ec:	cmp	r0, #0
   143f0:	andne	r1, r1, #223	; 0xdf
   143f4:	mov	r0, #0
   143f8:	cmp	r1, r7
   143fc:	bne	14424 <__snprintf_chk@plt+0x2e64>
   14400:	cmp	r7, #0
   14404:	beq	1442c <__snprintf_chk@plt+0x2e6c>
   14408:	ldr	r0, [fp, #12]
   1440c:	ldr	r3, [fp, #8]
   14410:	str	r0, [sp]
   14414:	mov	r0, r6
   14418:	mov	r1, r5
   1441c:	mov	r2, r4
   14420:	bl	14438 <__snprintf_chk@plt+0x2e78>
   14424:	sub	sp, fp, #16
   14428:	pop	{r4, r5, r6, r7, fp, pc}
   1442c:	mov	r0, #1
   14430:	sub	sp, fp, #16
   14434:	pop	{r4, r5, r6, r7, fp, pc}
   14438:	push	{r4, r5, r6, r7, fp, lr}
   1443c:	add	fp, sp, #16
   14440:	mov	r4, r3
   14444:	mov	r5, r2
   14448:	mov	r7, r1
   1444c:	mov	r6, r0
   14450:	mov	r0, r1
   14454:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   14458:	ldrb	r1, [r6, #3]
   1445c:	ldr	r3, [fp, #8]
   14460:	cmp	r0, #0
   14464:	andne	r1, r1, #223	; 0xdf
   14468:	mov	r0, #0
   1446c:	cmp	r1, r7
   14470:	bne	14494 <__snprintf_chk@plt+0x2ed4>
   14474:	cmp	r7, #0
   14478:	beq	14490 <__snprintf_chk@plt+0x2ed0>
   1447c:	mov	r0, r6
   14480:	mov	r1, r5
   14484:	mov	r2, r4
   14488:	pop	{r4, r5, r6, r7, fp, lr}
   1448c:	b	14498 <__snprintf_chk@plt+0x2ed8>
   14490:	mov	r0, #1
   14494:	pop	{r4, r5, r6, r7, fp, pc}
   14498:	push	{r4, r5, r6, r7, fp, lr}
   1449c:	add	fp, sp, #16
   144a0:	mov	r4, r3
   144a4:	mov	r5, r2
   144a8:	mov	r7, r1
   144ac:	mov	r6, r0
   144b0:	mov	r0, r1
   144b4:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   144b8:	ldrb	r1, [r6, #4]
   144bc:	cmp	r0, #0
   144c0:	andne	r1, r1, #223	; 0xdf
   144c4:	mov	r0, #0
   144c8:	cmp	r1, r7
   144cc:	bne	144f0 <__snprintf_chk@plt+0x2f30>
   144d0:	cmp	r7, #0
   144d4:	beq	144ec <__snprintf_chk@plt+0x2f2c>
   144d8:	mov	r0, r6
   144dc:	mov	r1, r5
   144e0:	mov	r2, r4
   144e4:	pop	{r4, r5, r6, r7, fp, lr}
   144e8:	b	144f4 <__snprintf_chk@plt+0x2f34>
   144ec:	mov	r0, #1
   144f0:	pop	{r4, r5, r6, r7, fp, pc}
   144f4:	push	{r4, r5, r6, sl, fp, lr}
   144f8:	add	fp, sp, #16
   144fc:	mov	r4, r2
   14500:	mov	r6, r1
   14504:	mov	r5, r0
   14508:	mov	r0, r1
   1450c:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   14510:	ldrb	r1, [r5, #5]
   14514:	cmp	r0, #0
   14518:	andne	r1, r1, #223	; 0xdf
   1451c:	mov	r0, #0
   14520:	cmp	r1, r6
   14524:	bne	14544 <__snprintf_chk@plt+0x2f84>
   14528:	cmp	r6, #0
   1452c:	beq	14540 <__snprintf_chk@plt+0x2f80>
   14530:	mov	r0, r5
   14534:	mov	r1, r4
   14538:	pop	{r4, r5, r6, sl, fp, lr}
   1453c:	b	14548 <__snprintf_chk@plt+0x2f88>
   14540:	mov	r0, #1
   14544:	pop	{r4, r5, r6, sl, fp, pc}
   14548:	push	{r4, r5, fp, lr}
   1454c:	add	fp, sp, #8
   14550:	mov	r5, r1
   14554:	mov	r4, r0
   14558:	mov	r0, r1
   1455c:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   14560:	ldrb	r1, [r4, #6]
   14564:	cmp	r0, #0
   14568:	andne	r1, r1, #223	; 0xdf
   1456c:	mov	r0, #0
   14570:	cmp	r1, r5
   14574:	popne	{r4, r5, fp, pc}
   14578:	cmp	r5, #0
   1457c:	beq	1458c <__snprintf_chk@plt+0x2fcc>
   14580:	mov	r0, r4
   14584:	pop	{r4, r5, fp, lr}
   14588:	b	14594 <__snprintf_chk@plt+0x2fd4>
   1458c:	mov	r0, #1
   14590:	pop	{r4, r5, fp, pc}
   14594:	push	{r4, sl, fp, lr}
   14598:	add	fp, sp, #8
   1459c:	mov	r4, r0
   145a0:	mov	r0, #0
   145a4:	bl	15584 <__snprintf_chk@plt+0x3fc4>
   145a8:	ldrb	r1, [r4, #7]
   145ac:	cmp	r0, #0
   145b0:	beq	145c4 <__snprintf_chk@plt+0x3004>
   145b4:	tst	r1, #223	; 0xdf
   145b8:	bne	145cc <__snprintf_chk@plt+0x300c>
   145bc:	mov	r0, #1
   145c0:	pop	{r4, sl, fp, pc}
   145c4:	cmp	r1, #0
   145c8:	beq	145bc <__snprintf_chk@plt+0x2ffc>
   145cc:	mov	r0, #0
   145d0:	pop	{r4, sl, fp, pc}
   145d4:	push	{r4, sl, fp, lr}
   145d8:	add	fp, sp, #8
   145dc:	mov	r4, r1
   145e0:	bl	145f0 <__snprintf_chk@plt+0x3030>
   145e4:	str	r0, [r4]
   145e8:	asr	r0, r0, #31
   145ec:	pop	{r4, sl, fp, pc}
   145f0:	push	{r4, r5, r6, sl, fp, lr}
   145f4:	add	fp, sp, #16
   145f8:	sub	sp, sp, #8
   145fc:	mov	r5, r0
   14600:	ldrb	r0, [r0]
   14604:	sub	r0, r0, #48	; 0x30
   14608:	cmp	r0, #10
   1460c:	bcs	14640 <__snprintf_chk@plt+0x3080>
   14610:	add	r1, sp, #4
   14614:	mov	r0, r5
   14618:	mov	r2, #10
   1461c:	bl	112c0 <strtol@plt>
   14620:	cmp	r0, #64	; 0x40
   14624:	bgt	1474c <__snprintf_chk@plt+0x318c>
   14628:	ldr	r1, [sp, #4]
   1462c:	ldrb	r1, [r1]
   14630:	cmp	r1, #0
   14634:	bne	1474c <__snprintf_chk@plt+0x318c>
   14638:	sub	sp, fp, #16
   1463c:	pop	{r4, r5, r6, sl, fp, pc}
   14640:	mov	r4, #0
   14644:	movw	r6, #29056	; 0x7180
   14648:	movt	r6, #2
   1464c:	add	r0, r6, r4
   14650:	add	r0, r0, #4
   14654:	mov	r1, r5
   14658:	bl	112b4 <strcmp@plt>
   1465c:	cmp	r0, #0
   14660:	beq	14704 <__snprintf_chk@plt+0x3144>
   14664:	add	r4, r4, #12
   14668:	cmp	r4, #420	; 0x1a4
   1466c:	bne	1464c <__snprintf_chk@plt+0x308c>
   14670:	bl	1159c <__libc_current_sigrtmin@plt>
   14674:	mov	r4, r0
   14678:	bl	11488 <__libc_current_sigrtmax@plt>
   1467c:	mov	r6, r0
   14680:	cmp	r4, #1
   14684:	blt	146a4 <__snprintf_chk@plt+0x30e4>
   14688:	movw	r1, #26556	; 0x67bc
   1468c:	movt	r1, #1
   14690:	mov	r0, r5
   14694:	mov	r2, #5
   14698:	bl	115a8 <strncmp@plt>
   1469c:	cmp	r0, #0
   146a0:	beq	14710 <__snprintf_chk@plt+0x3150>
   146a4:	cmp	r6, #1
   146a8:	blt	1474c <__snprintf_chk@plt+0x318c>
   146ac:	movw	r1, #26562	; 0x67c2
   146b0:	movt	r1, #1
   146b4:	mov	r0, r5
   146b8:	mov	r2, #5
   146bc:	bl	115a8 <strncmp@plt>
   146c0:	cmp	r0, #0
   146c4:	bne	1474c <__snprintf_chk@plt+0x318c>
   146c8:	add	r0, r5, #5
   146cc:	mov	r1, sp
   146d0:	mov	r2, #10
   146d4:	bl	112c0 <strtol@plt>
   146d8:	ldr	r1, [sp]
   146dc:	ldrb	r1, [r1]
   146e0:	cmp	r1, #0
   146e4:	bne	1474c <__snprintf_chk@plt+0x318c>
   146e8:	sub	r1, r4, r6
   146ec:	cmp	r1, r0
   146f0:	cmple	r0, #0
   146f4:	bgt	1474c <__snprintf_chk@plt+0x318c>
   146f8:	add	r0, r0, r6
   146fc:	sub	sp, fp, #16
   14700:	pop	{r4, r5, r6, sl, fp, pc}
   14704:	ldr	r0, [r6, r4]
   14708:	sub	sp, fp, #16
   1470c:	pop	{r4, r5, r6, sl, fp, pc}
   14710:	add	r0, r5, #5
   14714:	mov	r1, sp
   14718:	mov	r2, #10
   1471c:	bl	112c0 <strtol@plt>
   14720:	sub	r1, r6, r4
   14724:	cmp	r0, r1
   14728:	bgt	1474c <__snprintf_chk@plt+0x318c>
   1472c:	cmp	r0, #0
   14730:	bmi	1474c <__snprintf_chk@plt+0x318c>
   14734:	ldr	r1, [sp]
   14738:	ldrb	r1, [r1]
   1473c:	cmp	r1, #0
   14740:	addeq	r0, r0, r4
   14744:	subeq	sp, fp, #16
   14748:	popeq	{r4, r5, r6, sl, fp, pc}
   1474c:	mvn	r0, #0
   14750:	sub	sp, fp, #16
   14754:	pop	{r4, r5, r6, sl, fp, pc}
   14758:	push	{r4, r5, r6, r7, fp, lr}
   1475c:	add	fp, sp, #16
   14760:	sub	sp, sp, #8
   14764:	mov	r4, r1
   14768:	mov	r5, r0
   1476c:	mov	r0, #0
   14770:	movw	r1, #29056	; 0x7180
   14774:	movt	r1, #2
   14778:	ldr	r2, [r1, -r0]
   1477c:	cmp	r2, r5
   14780:	beq	147e0 <__snprintf_chk@plt+0x3220>
   14784:	sub	r0, r0, #12
   14788:	cmn	r0, #420	; 0x1a4
   1478c:	bne	14778 <__snprintf_chk@plt+0x31b8>
   14790:	bl	1159c <__libc_current_sigrtmin@plt>
   14794:	mov	r7, r0
   14798:	mvn	r6, #0
   1479c:	bl	11488 <__libc_current_sigrtmax@plt>
   147a0:	cmp	r7, r5
   147a4:	bgt	14834 <__snprintf_chk@plt+0x3274>
   147a8:	cmp	r0, r5
   147ac:	blt	14834 <__snprintf_chk@plt+0x3274>
   147b0:	sub	r1, r0, r7
   147b4:	add	r1, r1, r1, lsr #31
   147b8:	add	r1, r7, r1, asr #1
   147bc:	cmp	r1, r5
   147c0:	bge	147f8 <__snprintf_chk@plt+0x3238>
   147c4:	mov	r1, #88	; 0x58
   147c8:	strh	r1, [r4, #4]
   147cc:	movw	r1, #21586	; 0x5452
   147d0:	movt	r1, #16717	; 0x414d
   147d4:	str	r1, [r4]
   147d8:	mov	r7, r0
   147dc:	b	1480c <__snprintf_chk@plt+0x324c>
   147e0:	sub	r0, r1, r0
   147e4:	add	r1, r0, #4
   147e8:	mov	r0, r4
   147ec:	bl	113bc <strcpy@plt>
   147f0:	mov	r6, #0
   147f4:	b	14834 <__snprintf_chk@plt+0x3274>
   147f8:	mov	r0, #78	; 0x4e
   147fc:	strh	r0, [r4, #4]
   14800:	movw	r0, #21586	; 0x5452
   14804:	movt	r0, #18765	; 0x494d
   14808:	str	r0, [r4]
   1480c:	subs	r0, r5, r7
   14810:	mov	r6, #0
   14814:	beq	14834 <__snprintf_chk@plt+0x3274>
   14818:	str	r0, [sp]
   1481c:	add	r0, r4, #5
   14820:	movw	r3, #26568	; 0x67c8
   14824:	movt	r3, #1
   14828:	mov	r1, #1
   1482c:	mvn	r2, #0
   14830:	bl	114a0 <__sprintf_chk@plt>
   14834:	mov	r0, r6
   14838:	sub	sp, fp, #16
   1483c:	pop	{r4, r5, r6, r7, fp, pc}
   14840:	stm	r0, {r1, r2}
   14844:	bx	lr
   14848:	mov	ip, #0
   1484c:	cmp	r0, r2
   14850:	mov	r0, #0
   14854:	movwgt	r0, #1
   14858:	sublt	r0, r0, #1
   1485c:	cmp	r1, r3
   14860:	movwgt	ip, #1
   14864:	sublt	ip, ip, #1
   14868:	add	r0, ip, r0, lsl #1
   1486c:	bx	lr
   14870:	mov	r2, #1
   14874:	asr	r3, r0, #31
   14878:	cmp	r0, #0
   1487c:	addgt	r3, r2, r0, asr #31
   14880:	cmp	r1, #0
   14884:	movwne	r1, #1
   14888:	clz	r0, r0
   1488c:	lsr	r0, r0, #5
   14890:	and	r0, r0, r1
   14894:	add	r0, r3, r0
   14898:	bx	lr
   1489c:	nop	{0}
   148a0:	vldr	d16, [pc, #24]	; 148c0 <__snprintf_chk@plt+0x3300>
   148a4:	vmov	s0, r1
   148a8:	vcvt.f64.s32	d17, s0
   148ac:	vmov	s0, r0
   148b0:	vcvt.f64.s32	d18, s0
   148b4:	vdiv.f64	d16, d17, d16
   148b8:	vadd.f64	d0, d16, d18
   148bc:	bx	lr
   148c0:	andeq	r0, r0, r0
   148c4:	bicmi	ip, sp, r5, ror #26
   148c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148cc:	add	fp, sp, #24
   148d0:	sub	sp, sp, #32
   148d4:	mov	r4, r2
   148d8:	mov	r8, r0
   148dc:	ldr	r6, [fp, #12]
   148e0:	ldr	r7, [fp, #8]
   148e4:	cmp	r1, #0
   148e8:	beq	14910 <__snprintf_chk@plt+0x3350>
   148ec:	mov	r5, r1
   148f0:	str	r4, [sp]
   148f4:	str	r3, [sp, #4]
   148f8:	movw	r2, #26572	; 0x67cc
   148fc:	movt	r2, #1
   14900:	mov	r0, r8
   14904:	mov	r1, #1
   14908:	mov	r3, r5
   1490c:	b	14928 <__snprintf_chk@plt+0x3368>
   14910:	str	r3, [sp]
   14914:	movw	r2, #26584	; 0x67d8
   14918:	movt	r2, #1
   1491c:	mov	r0, r8
   14920:	mov	r1, #1
   14924:	mov	r3, r4
   14928:	bl	11500 <__fprintf_chk@plt>
   1492c:	movw	r1, #26591	; 0x67df
   14930:	movt	r1, #1
   14934:	mov	r0, #0
   14938:	mov	r2, #5
   1493c:	bl	1132c <dcgettext@plt>
   14940:	mov	r3, r0
   14944:	movw	r0, #2022	; 0x7e6
   14948:	str	r0, [sp]
   1494c:	movw	r2, #27309	; 0x6aad
   14950:	movt	r2, #1
   14954:	mov	r0, r8
   14958:	mov	r1, #1
   1495c:	bl	11500 <__fprintf_chk@plt>
   14960:	movw	r4, #25811	; 0x64d3
   14964:	movt	r4, #1
   14968:	mov	r0, r4
   1496c:	mov	r1, r8
   14970:	bl	1129c <fputs_unlocked@plt>
   14974:	movw	r1, #26595	; 0x67e3
   14978:	movt	r1, #1
   1497c:	mov	r0, #0
   14980:	mov	r2, #5
   14984:	bl	1132c <dcgettext@plt>
   14988:	mov	r2, r0
   1498c:	movw	r3, #26766	; 0x688e
   14990:	movt	r3, #1
   14994:	mov	r0, r8
   14998:	mov	r1, #1
   1499c:	bl	11500 <__fprintf_chk@plt>
   149a0:	mov	r0, r4
   149a4:	mov	r1, r8
   149a8:	bl	1129c <fputs_unlocked@plt>
   149ac:	cmp	r6, #9
   149b0:	bhi	149ec <__snprintf_chk@plt+0x342c>
   149b4:	add	r0, pc, #0
   149b8:	ldr	pc, [r0, r6, lsl #2]
   149bc:	andeq	r4, r1, r4, ror #19
   149c0:	strdeq	r4, [r1], -r8
   149c4:	andeq	r4, r1, r8, lsr #20
   149c8:	andeq	r4, r1, r0, asr sl
   149cc:	andeq	r4, r1, r8, ror sl
   149d0:	andeq	r4, r1, r0, lsr #21
   149d4:	andeq	r4, r1, r8, asr #21
   149d8:	andeq	r4, r1, r0, lsl #22
   149dc:	andeq	r4, r1, r0, lsr #23
   149e0:	andeq	r4, r1, r8, asr #22
   149e4:	sub	sp, fp, #24
   149e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149ec:	movw	r1, #27119	; 0x69ef
   149f0:	movt	r1, #1
   149f4:	b	14b50 <__snprintf_chk@plt+0x3590>
   149f8:	movw	r1, #26800	; 0x68b0
   149fc:	movt	r1, #1
   14a00:	mov	r0, #0
   14a04:	mov	r2, #5
   14a08:	bl	1132c <dcgettext@plt>
   14a0c:	mov	r2, r0
   14a10:	ldr	r3, [r7]
   14a14:	mov	r0, r8
   14a18:	mov	r1, #1
   14a1c:	sub	sp, fp, #24
   14a20:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a24:	b	11500 <__fprintf_chk@plt>
   14a28:	movw	r1, #26816	; 0x68c0
   14a2c:	movt	r1, #1
   14a30:	mov	r0, #0
   14a34:	mov	r2, #5
   14a38:	bl	1132c <dcgettext@plt>
   14a3c:	mov	r2, r0
   14a40:	ldr	r3, [r7]
   14a44:	ldr	r0, [r7, #4]
   14a48:	str	r0, [sp]
   14a4c:	b	14b3c <__snprintf_chk@plt+0x357c>
   14a50:	movw	r1, #26839	; 0x68d7
   14a54:	movt	r1, #1
   14a58:	mov	r0, #0
   14a5c:	mov	r2, #5
   14a60:	bl	1132c <dcgettext@plt>
   14a64:	mov	r2, r0
   14a68:	ldr	r3, [r7]
   14a6c:	ldmib	r7, {r0, r1}
   14a70:	stm	sp, {r0, r1}
   14a74:	b	14b3c <__snprintf_chk@plt+0x357c>
   14a78:	movw	r1, #26867	; 0x68f3
   14a7c:	movt	r1, #1
   14a80:	mov	r0, #0
   14a84:	mov	r2, #5
   14a88:	bl	1132c <dcgettext@plt>
   14a8c:	mov	r2, r0
   14a90:	ldr	r3, [r7]
   14a94:	ldmib	r7, {r0, r1, r7}
   14a98:	stm	sp, {r0, r1, r7}
   14a9c:	b	14b3c <__snprintf_chk@plt+0x357c>
   14aa0:	movw	r1, #26899	; 0x6913
   14aa4:	movt	r1, #1
   14aa8:	mov	r0, #0
   14aac:	mov	r2, #5
   14ab0:	bl	1132c <dcgettext@plt>
   14ab4:	mov	r2, r0
   14ab8:	ldr	r3, [r7]
   14abc:	ldmib	r7, {r0, r1, r6, r7}
   14ac0:	stm	sp, {r0, r1, r6, r7}
   14ac4:	b	14b3c <__snprintf_chk@plt+0x357c>
   14ac8:	movw	r1, #26935	; 0x6937
   14acc:	movt	r1, #1
   14ad0:	mov	r0, #0
   14ad4:	mov	r2, #5
   14ad8:	bl	1132c <dcgettext@plt>
   14adc:	mov	r2, r0
   14ae0:	ldr	r3, [r7]
   14ae4:	ldmib	r7, {r0, r1, r6}
   14ae8:	ldr	r5, [r7, #16]
   14aec:	ldr	r7, [r7, #20]
   14af0:	stm	sp, {r0, r1, r6}
   14af4:	str	r5, [sp, #12]
   14af8:	str	r7, [sp, #16]
   14afc:	b	14b3c <__snprintf_chk@plt+0x357c>
   14b00:	movw	r1, #26975	; 0x695f
   14b04:	movt	r1, #1
   14b08:	mov	r0, #0
   14b0c:	mov	r2, #5
   14b10:	bl	1132c <dcgettext@plt>
   14b14:	mov	r2, r0
   14b18:	ldr	r3, [r7]
   14b1c:	ldmib	r7, {r0, r1, r6}
   14b20:	ldr	r5, [r7, #16]
   14b24:	ldr	r4, [r7, #20]
   14b28:	ldr	r7, [r7, #24]
   14b2c:	stm	sp, {r0, r1, r6}
   14b30:	str	r5, [sp, #12]
   14b34:	str	r4, [sp, #16]
   14b38:	str	r7, [sp, #20]
   14b3c:	mov	r0, r8
   14b40:	mov	r1, #1
   14b44:	b	14bf0 <__snprintf_chk@plt+0x3630>
   14b48:	movw	r1, #27067	; 0x69bb
   14b4c:	movt	r1, #1
   14b50:	mov	r0, #0
   14b54:	mov	r2, #5
   14b58:	bl	1132c <dcgettext@plt>
   14b5c:	mov	ip, r0
   14b60:	ldr	r3, [r7]
   14b64:	ldr	r0, [r7, #4]
   14b68:	ldr	r1, [r7, #8]
   14b6c:	ldr	r6, [r7, #12]
   14b70:	ldr	r5, [r7, #16]
   14b74:	ldr	r4, [r7, #20]
   14b78:	ldr	r2, [r7, #24]
   14b7c:	ldr	lr, [r7, #28]
   14b80:	ldr	r7, [r7, #32]
   14b84:	stm	sp, {r0, r1, r6}
   14b88:	str	r5, [sp, #12]
   14b8c:	str	r4, [sp, #16]
   14b90:	str	r2, [sp, #20]
   14b94:	str	lr, [sp, #24]
   14b98:	str	r7, [sp, #28]
   14b9c:	b	14be4 <__snprintf_chk@plt+0x3624>
   14ba0:	movw	r1, #27019	; 0x698b
   14ba4:	movt	r1, #1
   14ba8:	mov	r0, #0
   14bac:	mov	r2, #5
   14bb0:	bl	1132c <dcgettext@plt>
   14bb4:	mov	ip, r0
   14bb8:	ldr	r3, [r7]
   14bbc:	ldmib	r7, {r0, r1, r6}
   14bc0:	ldr	r5, [r7, #16]
   14bc4:	ldr	r4, [r7, #20]
   14bc8:	ldr	r2, [r7, #24]
   14bcc:	ldr	r7, [r7, #28]
   14bd0:	stm	sp, {r0, r1, r6}
   14bd4:	str	r5, [sp, #12]
   14bd8:	str	r4, [sp, #16]
   14bdc:	str	r2, [sp, #20]
   14be0:	str	r7, [sp, #24]
   14be4:	mov	r0, r8
   14be8:	mov	r1, #1
   14bec:	mov	r2, ip
   14bf0:	bl	11500 <__fprintf_chk@plt>
   14bf4:	sub	sp, fp, #24
   14bf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14bfc:	push	{r4, sl, fp, lr}
   14c00:	add	fp, sp, #8
   14c04:	sub	sp, sp, #8
   14c08:	mov	lr, #0
   14c0c:	ldr	ip, [fp, #8]
   14c10:	ldr	r4, [ip, lr, lsl #2]
   14c14:	add	lr, lr, #1
   14c18:	cmp	r4, #0
   14c1c:	bne	14c10 <__snprintf_chk@plt+0x3650>
   14c20:	sub	r4, lr, #1
   14c24:	str	ip, [sp]
   14c28:	str	r4, [sp, #4]
   14c2c:	bl	148c8 <__snprintf_chk@plt+0x3308>
   14c30:	sub	sp, fp, #8
   14c34:	pop	{r4, sl, fp, pc}
   14c38:	push	{r4, r5, fp, lr}
   14c3c:	add	fp, sp, #8
   14c40:	sub	sp, sp, #48	; 0x30
   14c44:	mov	ip, #0
   14c48:	ldr	r4, [fp, #8]
   14c4c:	add	lr, sp, #8
   14c50:	ldr	r5, [r4]
   14c54:	str	r5, [lr, ip, lsl #2]
   14c58:	cmp	r5, #0
   14c5c:	beq	14c74 <__snprintf_chk@plt+0x36b4>
   14c60:	add	ip, ip, #1
   14c64:	add	r4, r4, #4
   14c68:	cmp	ip, #10
   14c6c:	bne	14c50 <__snprintf_chk@plt+0x3690>
   14c70:	mov	ip, #10
   14c74:	str	lr, [sp]
   14c78:	str	ip, [sp, #4]
   14c7c:	bl	148c8 <__snprintf_chk@plt+0x3308>
   14c80:	sub	sp, fp, #8
   14c84:	pop	{r4, r5, fp, pc}
   14c88:	push	{fp, lr}
   14c8c:	mov	fp, sp
   14c90:	sub	sp, sp, #8
   14c94:	add	ip, fp, #8
   14c98:	str	ip, [sp, #4]
   14c9c:	str	ip, [sp]
   14ca0:	bl	14c38 <__snprintf_chk@plt+0x3678>
   14ca4:	mov	sp, fp
   14ca8:	pop	{fp, pc}
   14cac:	push	{fp, lr}
   14cb0:	mov	fp, sp
   14cb4:	movw	r0, #29500	; 0x733c
   14cb8:	movt	r0, #2
   14cbc:	ldr	r1, [r0]
   14cc0:	movw	r0, #25811	; 0x64d3
   14cc4:	movt	r0, #1
   14cc8:	bl	1129c <fputs_unlocked@plt>
   14ccc:	movw	r1, #27179	; 0x6a2b
   14cd0:	movt	r1, #1
   14cd4:	mov	r0, #0
   14cd8:	mov	r2, #5
   14cdc:	bl	1132c <dcgettext@plt>
   14ce0:	mov	r1, r0
   14ce4:	movw	r2, #27199	; 0x6a3f
   14ce8:	movt	r2, #1
   14cec:	mov	r0, #1
   14cf0:	bl	114d0 <__printf_chk@plt>
   14cf4:	movw	r1, #27221	; 0x6a55
   14cf8:	movt	r1, #1
   14cfc:	mov	r0, #0
   14d00:	mov	r2, #5
   14d04:	bl	1132c <dcgettext@plt>
   14d08:	mov	r1, r0
   14d0c:	movw	r2, #25257	; 0x62a9
   14d10:	movt	r2, #1
   14d14:	movw	r3, #25620	; 0x6414
   14d18:	movt	r3, #1
   14d1c:	mov	r0, #1
   14d20:	bl	114d0 <__printf_chk@plt>
   14d24:	movw	r1, #27241	; 0x6a69
   14d28:	movt	r1, #1
   14d2c:	mov	r0, #0
   14d30:	mov	r2, #5
   14d34:	bl	1132c <dcgettext@plt>
   14d38:	mov	r1, r0
   14d3c:	movw	r2, #27280	; 0x6a90
   14d40:	movt	r2, #1
   14d44:	mov	r0, #1
   14d48:	pop	{fp, lr}
   14d4c:	b	114d0 <__printf_chk@plt>
   14d50:	b	14d54 <__snprintf_chk@plt+0x3794>
   14d54:	push	{r4, r5, r6, sl, fp, lr}
   14d58:	add	fp, sp, #16
   14d5c:	mov	r4, r2
   14d60:	mov	r5, r1
   14d64:	mov	r6, r0
   14d68:	bl	15998 <__snprintf_chk@plt+0x43d8>
   14d6c:	cmp	r0, #0
   14d70:	popne	{r4, r5, r6, sl, fp, pc}
   14d74:	cmp	r6, #0
   14d78:	beq	14d8c <__snprintf_chk@plt+0x37cc>
   14d7c:	cmp	r5, #0
   14d80:	cmpne	r4, #0
   14d84:	bne	14d8c <__snprintf_chk@plt+0x37cc>
   14d88:	pop	{r4, r5, r6, sl, fp, pc}
   14d8c:	bl	15118 <__snprintf_chk@plt+0x3b58>
   14d90:	push	{fp, lr}
   14d94:	mov	fp, sp
   14d98:	bl	1524c <__snprintf_chk@plt+0x3c8c>
   14d9c:	pop	{fp, lr}
   14da0:	b	14da4 <__snprintf_chk@plt+0x37e4>
   14da4:	cmp	r0, #0
   14da8:	bxne	lr
   14dac:	push	{fp, lr}
   14db0:	mov	fp, sp
   14db4:	bl	15118 <__snprintf_chk@plt+0x3b58>
   14db8:	push	{fp, lr}
   14dbc:	mov	fp, sp
   14dc0:	bl	158c8 <__snprintf_chk@plt+0x4308>
   14dc4:	pop	{fp, lr}
   14dc8:	b	14da4 <__snprintf_chk@plt+0x37e4>
   14dcc:	b	14d90 <__snprintf_chk@plt+0x37d0>
   14dd0:	push	{r4, r5, fp, lr}
   14dd4:	add	fp, sp, #8
   14dd8:	mov	r4, r1
   14ddc:	mov	r5, r0
   14de0:	bl	1527c <__snprintf_chk@plt+0x3cbc>
   14de4:	cmp	r0, #0
   14de8:	popne	{r4, r5, fp, pc}
   14dec:	cmp	r5, #0
   14df0:	beq	14e00 <__snprintf_chk@plt+0x3840>
   14df4:	cmp	r4, #0
   14df8:	bne	14e00 <__snprintf_chk@plt+0x3840>
   14dfc:	pop	{r4, r5, fp, pc}
   14e00:	bl	15118 <__snprintf_chk@plt+0x3b58>
   14e04:	push	{fp, lr}
   14e08:	mov	fp, sp
   14e0c:	bl	158cc <__snprintf_chk@plt+0x430c>
   14e10:	pop	{fp, lr}
   14e14:	b	14da4 <__snprintf_chk@plt+0x37e4>
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	bl	158dc <__snprintf_chk@plt+0x431c>
   14e24:	pop	{fp, lr}
   14e28:	b	14da4 <__snprintf_chk@plt+0x37e4>
   14e2c:	mov	r2, r1
   14e30:	mov	r1, r0
   14e34:	mov	r0, #0
   14e38:	b	14d54 <__snprintf_chk@plt+0x3794>
   14e3c:	mov	r2, r1
   14e40:	mov	r1, r0
   14e44:	mov	r0, #0
   14e48:	b	14e18 <__snprintf_chk@plt+0x3858>
   14e4c:	mov	r2, #1
   14e50:	b	14e54 <__snprintf_chk@plt+0x3894>
   14e54:	push	{r4, r5, fp, lr}
   14e58:	add	fp, sp, #8
   14e5c:	mov	r4, r1
   14e60:	ldr	r5, [r1]
   14e64:	cmp	r0, #0
   14e68:	beq	14e80 <__snprintf_chk@plt+0x38c0>
   14e6c:	mov	r1, #1
   14e70:	add	r1, r1, r5, lsr #1
   14e74:	adds	r5, r5, r1
   14e78:	bcc	14e98 <__snprintf_chk@plt+0x38d8>
   14e7c:	bl	15118 <__snprintf_chk@plt+0x3b58>
   14e80:	cmp	r5, #0
   14e84:	bne	14e98 <__snprintf_chk@plt+0x38d8>
   14e88:	mov	r1, #64	; 0x40
   14e8c:	udiv	r5, r1, r2
   14e90:	cmp	r2, #64	; 0x40
   14e94:	addhi	r5, r5, #1
   14e98:	mov	r1, r5
   14e9c:	bl	14d54 <__snprintf_chk@plt+0x3794>
   14ea0:	str	r5, [r4]
   14ea4:	pop	{r4, r5, fp, pc}
   14ea8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14eac:	add	fp, sp, #24
   14eb0:	mov	r8, r1
   14eb4:	ldr	r6, [r1]
   14eb8:	add	r1, r6, r6, asr #1
   14ebc:	cmp	r1, r6
   14ec0:	mvnvs	r1, #-2147483648	; 0x80000000
   14ec4:	cmp	r1, r3
   14ec8:	mov	r5, r1
   14ecc:	movgt	r5, r3
   14ed0:	cmn	r3, #1
   14ed4:	movle	r5, r1
   14ed8:	ldr	r4, [fp, #8]
   14edc:	cmn	r4, #1
   14ee0:	ble	14f08 <__snprintf_chk@plt+0x3948>
   14ee4:	cmp	r4, #0
   14ee8:	beq	14f5c <__snprintf_chk@plt+0x399c>
   14eec:	cmn	r5, #1
   14ef0:	ble	14f30 <__snprintf_chk@plt+0x3970>
   14ef4:	mvn	r7, #-2147483648	; 0x80000000
   14ef8:	udiv	r1, r7, r4
   14efc:	cmp	r1, r5
   14f00:	bge	14f5c <__snprintf_chk@plt+0x399c>
   14f04:	b	14f6c <__snprintf_chk@plt+0x39ac>
   14f08:	cmn	r5, #1
   14f0c:	ble	14f4c <__snprintf_chk@plt+0x398c>
   14f10:	cmn	r4, #1
   14f14:	beq	14f5c <__snprintf_chk@plt+0x399c>
   14f18:	mov	r1, #-2147483648	; 0x80000000
   14f1c:	sdiv	r1, r1, r4
   14f20:	mvn	r7, #-2147483648	; 0x80000000
   14f24:	cmp	r1, r5
   14f28:	bge	14f5c <__snprintf_chk@plt+0x399c>
   14f2c:	b	14f6c <__snprintf_chk@plt+0x39ac>
   14f30:	beq	14f5c <__snprintf_chk@plt+0x399c>
   14f34:	mov	r1, #-2147483648	; 0x80000000
   14f38:	sdiv	r1, r1, r5
   14f3c:	mvn	r7, #-2147483648	; 0x80000000
   14f40:	cmp	r1, r4
   14f44:	bge	14f5c <__snprintf_chk@plt+0x399c>
   14f48:	b	14f6c <__snprintf_chk@plt+0x39ac>
   14f4c:	mvn	r7, #-2147483648	; 0x80000000
   14f50:	sdiv	r1, r7, r4
   14f54:	cmp	r5, r1
   14f58:	blt	14f6c <__snprintf_chk@plt+0x39ac>
   14f5c:	mul	r1, r5, r4
   14f60:	mov	r7, #64	; 0x40
   14f64:	cmp	r1, #63	; 0x3f
   14f68:	bgt	14f74 <__snprintf_chk@plt+0x39b4>
   14f6c:	sdiv	r5, r7, r4
   14f70:	mul	r1, r5, r4
   14f74:	cmp	r0, #0
   14f78:	moveq	r7, #0
   14f7c:	streq	r7, [r8]
   14f80:	sub	r7, r5, r6
   14f84:	cmp	r7, r2
   14f88:	bge	15034 <__snprintf_chk@plt+0x3a74>
   14f8c:	add	r5, r6, r2
   14f90:	mov	r1, #0
   14f94:	cmp	r5, r3
   14f98:	mov	r2, #0
   14f9c:	movwgt	r2, #1
   14fa0:	cmn	r3, #1
   14fa4:	movwgt	r1, #1
   14fa8:	cmp	r5, r6
   14fac:	bvs	1501c <__snprintf_chk@plt+0x3a5c>
   14fb0:	ands	r1, r1, r2
   14fb4:	bne	1501c <__snprintf_chk@plt+0x3a5c>
   14fb8:	cmn	r4, #1
   14fbc:	ble	14fe4 <__snprintf_chk@plt+0x3a24>
   14fc0:	cmp	r4, #0
   14fc4:	beq	15030 <__snprintf_chk@plt+0x3a70>
   14fc8:	cmn	r5, #1
   14fcc:	ble	15008 <__snprintf_chk@plt+0x3a48>
   14fd0:	mvn	r1, #-2147483648	; 0x80000000
   14fd4:	udiv	r1, r1, r4
   14fd8:	cmp	r1, r5
   14fdc:	bge	15030 <__snprintf_chk@plt+0x3a70>
   14fe0:	b	1501c <__snprintf_chk@plt+0x3a5c>
   14fe4:	cmn	r5, #1
   14fe8:	ble	15020 <__snprintf_chk@plt+0x3a60>
   14fec:	cmn	r4, #1
   14ff0:	beq	15030 <__snprintf_chk@plt+0x3a70>
   14ff4:	mov	r1, #-2147483648	; 0x80000000
   14ff8:	sdiv	r1, r1, r4
   14ffc:	cmp	r1, r5
   15000:	bge	15030 <__snprintf_chk@plt+0x3a70>
   15004:	b	1501c <__snprintf_chk@plt+0x3a5c>
   15008:	beq	15030 <__snprintf_chk@plt+0x3a70>
   1500c:	mov	r1, #-2147483648	; 0x80000000
   15010:	sdiv	r1, r1, r5
   15014:	cmp	r1, r4
   15018:	bge	15030 <__snprintf_chk@plt+0x3a70>
   1501c:	bl	15118 <__snprintf_chk@plt+0x3b58>
   15020:	mvn	r1, #-2147483648	; 0x80000000
   15024:	sdiv	r1, r1, r4
   15028:	cmp	r5, r1
   1502c:	blt	1501c <__snprintf_chk@plt+0x3a5c>
   15030:	mul	r1, r5, r4
   15034:	bl	14dd0 <__snprintf_chk@plt+0x3810>
   15038:	str	r5, [r8]
   1503c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15040:	mov	r1, #1
   15044:	b	15048 <__snprintf_chk@plt+0x3a88>
   15048:	push	{fp, lr}
   1504c:	mov	fp, sp
   15050:	bl	151f8 <__snprintf_chk@plt+0x3c38>
   15054:	pop	{fp, lr}
   15058:	b	14da4 <__snprintf_chk@plt+0x37e4>
   1505c:	mov	r1, #1
   15060:	b	15064 <__snprintf_chk@plt+0x3aa4>
   15064:	push	{fp, lr}
   15068:	mov	fp, sp
   1506c:	bl	158d8 <__snprintf_chk@plt+0x4318>
   15070:	pop	{fp, lr}
   15074:	b	14da4 <__snprintf_chk@plt+0x37e4>
   15078:	push	{r4, r5, fp, lr}
   1507c:	add	fp, sp, #8
   15080:	mov	r4, r1
   15084:	mov	r5, r0
   15088:	mov	r0, r1
   1508c:	bl	14d90 <__snprintf_chk@plt+0x37d0>
   15090:	mov	r1, r5
   15094:	mov	r2, r4
   15098:	pop	{r4, r5, fp, lr}
   1509c:	b	112fc <memcpy@plt>
   150a0:	push	{r4, r5, fp, lr}
   150a4:	add	fp, sp, #8
   150a8:	mov	r4, r1
   150ac:	mov	r5, r0
   150b0:	mov	r0, r1
   150b4:	bl	14db8 <__snprintf_chk@plt+0x37f8>
   150b8:	mov	r1, r5
   150bc:	mov	r2, r4
   150c0:	pop	{r4, r5, fp, lr}
   150c4:	b	112fc <memcpy@plt>
   150c8:	push	{r4, r5, fp, lr}
   150cc:	add	fp, sp, #8
   150d0:	mov	r4, r1
   150d4:	mov	r5, r0
   150d8:	add	r0, r1, #1
   150dc:	bl	14db8 <__snprintf_chk@plt+0x37f8>
   150e0:	mov	r1, #0
   150e4:	strb	r1, [r0, r4]
   150e8:	mov	r1, r5
   150ec:	mov	r2, r4
   150f0:	pop	{r4, r5, fp, lr}
   150f4:	b	112fc <memcpy@plt>
   150f8:	push	{r4, sl, fp, lr}
   150fc:	add	fp, sp, #8
   15100:	mov	r4, r0
   15104:	bl	1147c <strlen@plt>
   15108:	add	r1, r0, #1
   1510c:	mov	r0, r4
   15110:	pop	{r4, sl, fp, lr}
   15114:	b	15078 <__snprintf_chk@plt+0x3ab8>
   15118:	push	{fp, lr}
   1511c:	mov	fp, sp
   15120:	movw	r0, #28984	; 0x7138
   15124:	movt	r0, #2
   15128:	ldr	r4, [r0]
   1512c:	movw	r1, #27356	; 0x6adc
   15130:	movt	r1, #1
   15134:	mov	r0, #0
   15138:	mov	r2, #5
   1513c:	bl	1132c <dcgettext@plt>
   15140:	mov	r3, r0
   15144:	movw	r2, #26301	; 0x66bd
   15148:	movt	r2, #1
   1514c:	mov	r0, r4
   15150:	mov	r1, #0
   15154:	bl	113ec <error@plt>
   15158:	bl	115b4 <abort@plt>
   1515c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15160:	add	fp, sp, #24
   15164:	sub	sp, sp, #8
   15168:	mov	r4, r3
   1516c:	mov	r8, r2
   15170:	mov	r9, r1
   15174:	mov	r5, r0
   15178:	bl	11494 <__errno_location@plt>
   1517c:	mov	r7, r0
   15180:	mov	r6, #0
   15184:	str	r6, [r0]
   15188:	add	r1, sp, #4
   1518c:	mov	r0, r5
   15190:	blx	r4
   15194:	ldr	r0, [sp, #4]
   15198:	cmp	r0, r5
   1519c:	beq	151dc <__snprintf_chk@plt+0x3c1c>
   151a0:	cmp	r9, #0
   151a4:	beq	151c4 <__snprintf_chk@plt+0x3c04>
   151a8:	vcmp.f64	d0, #0.0
   151ac:	vmrs	APSR_nzcv, fpscr
   151b0:	beq	151d8 <__snprintf_chk@plt+0x3c18>
   151b4:	ldr	r0, [r7]
   151b8:	subs	r6, r0, #34	; 0x22
   151bc:	movwne	r6, #1
   151c0:	b	151dc <__snprintf_chk@plt+0x3c1c>
   151c4:	ldrb	r0, [r0]
   151c8:	mov	r6, #0
   151cc:	cmp	r0, #0
   151d0:	bne	151e8 <__snprintf_chk@plt+0x3c28>
   151d4:	b	151a8 <__snprintf_chk@plt+0x3be8>
   151d8:	mov	r6, #1
   151dc:	cmp	r9, #0
   151e0:	ldrne	r0, [sp, #4]
   151e4:	strne	r0, [r9]
   151e8:	vstr	d0, [r8]
   151ec:	mov	r0, r6
   151f0:	sub	sp, fp, #24
   151f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151f8:	clz	r2, r1
   151fc:	lsr	r2, r2, #5
   15200:	clz	r3, r0
   15204:	lsr	r3, r3, #5
   15208:	orrs	r2, r3, r2
   1520c:	movwne	r1, #1
   15210:	movwne	r0, #1
   15214:	cmp	r1, #0
   15218:	beq	15248 <__snprintf_chk@plt+0x3c88>
   1521c:	mvn	r2, #-2147483648	; 0x80000000
   15220:	udiv	r2, r2, r1
   15224:	cmp	r2, r0
   15228:	bcs	15248 <__snprintf_chk@plt+0x3c88>
   1522c:	push	{fp, lr}
   15230:	mov	fp, sp
   15234:	bl	11494 <__errno_location@plt>
   15238:	mov	r1, #12
   1523c:	str	r1, [r0]
   15240:	mov	r0, #0
   15244:	pop	{fp, pc}
   15248:	b	11290 <calloc@plt>
   1524c:	cmp	r0, #0
   15250:	movweq	r0, #1
   15254:	cmn	r0, #1
   15258:	ble	15260 <__snprintf_chk@plt+0x3ca0>
   1525c:	b	11404 <malloc@plt>
   15260:	push	{fp, lr}
   15264:	mov	fp, sp
   15268:	bl	11494 <__errno_location@plt>
   1526c:	mov	r1, #12
   15270:	str	r1, [r0]
   15274:	mov	r0, #0
   15278:	pop	{fp, pc}
   1527c:	push	{fp, lr}
   15280:	mov	fp, sp
   15284:	cmp	r0, #0
   15288:	beq	152a4 <__snprintf_chk@plt+0x3ce4>
   1528c:	cmp	r1, #0
   15290:	beq	152b0 <__snprintf_chk@plt+0x3cf0>
   15294:	cmn	r1, #1
   15298:	ble	152bc <__snprintf_chk@plt+0x3cfc>
   1529c:	pop	{fp, lr}
   152a0:	b	11344 <realloc@plt>
   152a4:	mov	r0, r1
   152a8:	pop	{fp, lr}
   152ac:	b	1524c <__snprintf_chk@plt+0x3c8c>
   152b0:	bl	129a0 <__snprintf_chk@plt+0x13e0>
   152b4:	mov	r0, #0
   152b8:	pop	{fp, pc}
   152bc:	bl	11494 <__errno_location@plt>
   152c0:	mov	r1, #12
   152c4:	str	r1, [r0]
   152c8:	mov	r0, #0
   152cc:	pop	{fp, pc}
   152d0:	mov	r1, r0
   152d4:	sub	r2, r0, #65	; 0x41
   152d8:	mov	r0, #1
   152dc:	cmp	r2, #26
   152e0:	subcs	r2, r1, #97	; 0x61
   152e4:	cmpcs	r2, #26
   152e8:	bcs	152f0 <__snprintf_chk@plt+0x3d30>
   152ec:	bx	lr
   152f0:	sub	r1, r1, #48	; 0x30
   152f4:	cmp	r1, #10
   152f8:	movcs	r0, #0
   152fc:	bx	lr
   15300:	mov	r1, r0
   15304:	sub	r2, r0, #65	; 0x41
   15308:	mov	r0, #1
   1530c:	cmp	r2, #26
   15310:	subcs	r1, r1, #97	; 0x61
   15314:	cmpcs	r1, #26
   15318:	movcs	r0, #0
   1531c:	bx	lr
   15320:	mov	r1, #0
   15324:	cmp	r0, #128	; 0x80
   15328:	movwcc	r1, #1
   1532c:	mov	r0, r1
   15330:	bx	lr
   15334:	sub	r1, r0, #9
   15338:	clz	r1, r1
   1533c:	lsr	r1, r1, #5
   15340:	sub	r0, r0, #32
   15344:	clz	r0, r0
   15348:	lsr	r0, r0, #5
   1534c:	orr	r0, r0, r1
   15350:	bx	lr
   15354:	mov	r1, r0
   15358:	mov	r0, #1
   1535c:	cmp	r1, #32
   15360:	bxcc	lr
   15364:	cmp	r1, #127	; 0x7f
   15368:	movne	r0, #0
   1536c:	bx	lr
   15370:	sub	r1, r0, #48	; 0x30
   15374:	mov	r0, #0
   15378:	cmp	r1, #10
   1537c:	movwcc	r0, #1
   15380:	bx	lr
   15384:	sub	r1, r0, #33	; 0x21
   15388:	mov	r0, #0
   1538c:	cmp	r1, #94	; 0x5e
   15390:	movwcc	r0, #1
   15394:	bx	lr
   15398:	sub	r1, r0, #97	; 0x61
   1539c:	mov	r0, #0
   153a0:	cmp	r1, #26
   153a4:	movwcc	r0, #1
   153a8:	bx	lr
   153ac:	sub	r1, r0, #32
   153b0:	mov	r0, #0
   153b4:	cmp	r1, #95	; 0x5f
   153b8:	movwcc	r0, #1
   153bc:	bx	lr
   153c0:	sub	r1, r0, #33	; 0x21
   153c4:	cmp	r1, #93	; 0x5d
   153c8:	bhi	15554 <__snprintf_chk@plt+0x3f94>
   153cc:	mov	r0, #1
   153d0:	add	r2, pc, #0
   153d4:	ldr	pc, [r2, r1, lsl #2]
   153d8:	andeq	r5, r1, r0, asr r5
   153dc:	andeq	r5, r1, r0, asr r5
   153e0:	andeq	r5, r1, r0, asr r5
   153e4:	andeq	r5, r1, r0, asr r5
   153e8:	andeq	r5, r1, r0, asr r5
   153ec:	andeq	r5, r1, r0, asr r5
   153f0:	andeq	r5, r1, r0, asr r5
   153f4:	andeq	r5, r1, r0, asr r5
   153f8:	andeq	r5, r1, r0, asr r5
   153fc:	andeq	r5, r1, r0, asr r5
   15400:	andeq	r5, r1, r0, asr r5
   15404:	andeq	r5, r1, r0, asr r5
   15408:	andeq	r5, r1, r0, asr r5
   1540c:	andeq	r5, r1, r0, asr r5
   15410:	andeq	r5, r1, r0, asr r5
   15414:	andeq	r5, r1, r4, asr r5
   15418:	andeq	r5, r1, r4, asr r5
   1541c:	andeq	r5, r1, r4, asr r5
   15420:	andeq	r5, r1, r4, asr r5
   15424:	andeq	r5, r1, r4, asr r5
   15428:	andeq	r5, r1, r4, asr r5
   1542c:	andeq	r5, r1, r4, asr r5
   15430:	andeq	r5, r1, r4, asr r5
   15434:	andeq	r5, r1, r4, asr r5
   15438:	andeq	r5, r1, r4, asr r5
   1543c:	andeq	r5, r1, r0, asr r5
   15440:	andeq	r5, r1, r0, asr r5
   15444:	andeq	r5, r1, r0, asr r5
   15448:	andeq	r5, r1, r0, asr r5
   1544c:	andeq	r5, r1, r0, asr r5
   15450:	andeq	r5, r1, r0, asr r5
   15454:	andeq	r5, r1, r0, asr r5
   15458:	andeq	r5, r1, r4, asr r5
   1545c:	andeq	r5, r1, r4, asr r5
   15460:	andeq	r5, r1, r4, asr r5
   15464:	andeq	r5, r1, r4, asr r5
   15468:	andeq	r5, r1, r4, asr r5
   1546c:	andeq	r5, r1, r4, asr r5
   15470:	andeq	r5, r1, r4, asr r5
   15474:	andeq	r5, r1, r4, asr r5
   15478:	andeq	r5, r1, r4, asr r5
   1547c:	andeq	r5, r1, r4, asr r5
   15480:	andeq	r5, r1, r4, asr r5
   15484:	andeq	r5, r1, r4, asr r5
   15488:	andeq	r5, r1, r4, asr r5
   1548c:	andeq	r5, r1, r4, asr r5
   15490:	andeq	r5, r1, r4, asr r5
   15494:	andeq	r5, r1, r4, asr r5
   15498:	andeq	r5, r1, r4, asr r5
   1549c:	andeq	r5, r1, r4, asr r5
   154a0:	andeq	r5, r1, r4, asr r5
   154a4:	andeq	r5, r1, r4, asr r5
   154a8:	andeq	r5, r1, r4, asr r5
   154ac:	andeq	r5, r1, r4, asr r5
   154b0:	andeq	r5, r1, r4, asr r5
   154b4:	andeq	r5, r1, r4, asr r5
   154b8:	andeq	r5, r1, r4, asr r5
   154bc:	andeq	r5, r1, r4, asr r5
   154c0:	andeq	r5, r1, r0, asr r5
   154c4:	andeq	r5, r1, r0, asr r5
   154c8:	andeq	r5, r1, r0, asr r5
   154cc:	andeq	r5, r1, r0, asr r5
   154d0:	andeq	r5, r1, r0, asr r5
   154d4:	andeq	r5, r1, r0, asr r5
   154d8:	andeq	r5, r1, r4, asr r5
   154dc:	andeq	r5, r1, r4, asr r5
   154e0:	andeq	r5, r1, r4, asr r5
   154e4:	andeq	r5, r1, r4, asr r5
   154e8:	andeq	r5, r1, r4, asr r5
   154ec:	andeq	r5, r1, r4, asr r5
   154f0:	andeq	r5, r1, r4, asr r5
   154f4:	andeq	r5, r1, r4, asr r5
   154f8:	andeq	r5, r1, r4, asr r5
   154fc:	andeq	r5, r1, r4, asr r5
   15500:	andeq	r5, r1, r4, asr r5
   15504:	andeq	r5, r1, r4, asr r5
   15508:	andeq	r5, r1, r4, asr r5
   1550c:	andeq	r5, r1, r4, asr r5
   15510:	andeq	r5, r1, r4, asr r5
   15514:	andeq	r5, r1, r4, asr r5
   15518:	andeq	r5, r1, r4, asr r5
   1551c:	andeq	r5, r1, r4, asr r5
   15520:	andeq	r5, r1, r4, asr r5
   15524:	andeq	r5, r1, r4, asr r5
   15528:	andeq	r5, r1, r4, asr r5
   1552c:	andeq	r5, r1, r4, asr r5
   15530:	andeq	r5, r1, r4, asr r5
   15534:	andeq	r5, r1, r4, asr r5
   15538:	andeq	r5, r1, r4, asr r5
   1553c:	andeq	r5, r1, r4, asr r5
   15540:	andeq	r5, r1, r0, asr r5
   15544:	andeq	r5, r1, r0, asr r5
   15548:	andeq	r5, r1, r0, asr r5
   1554c:	andeq	r5, r1, r0, asr r5
   15550:	bx	lr
   15554:	mov	r0, #0
   15558:	bx	lr
   1555c:	sub	r0, r0, #9
   15560:	cmp	r0, #23
   15564:	movhi	r0, #0
   15568:	bxhi	lr
   1556c:	bic	r0, r0, #-16777216	; 0xff000000
   15570:	movw	r1, #31
   15574:	movt	r1, #128	; 0x80
   15578:	mov	r2, #1
   1557c:	and	r0, r2, r1, lsr r0
   15580:	bx	lr
   15584:	sub	r1, r0, #65	; 0x41
   15588:	mov	r0, #0
   1558c:	cmp	r1, #26
   15590:	movwcc	r0, #1
   15594:	bx	lr
   15598:	mov	r1, r0
   1559c:	sub	r2, r0, #48	; 0x30
   155a0:	mov	r0, #1
   155a4:	cmp	r2, #22
   155a8:	bhi	155c0 <__snprintf_chk@plt+0x4000>
   155ac:	mov	ip, #1
   155b0:	movw	r3, #1023	; 0x3ff
   155b4:	movt	r3, #126	; 0x7e
   155b8:	tst	r3, ip, lsl r2
   155bc:	bxne	lr
   155c0:	sub	r1, r1, #97	; 0x61
   155c4:	cmp	r1, #6
   155c8:	movcs	r0, #0
   155cc:	bxcs	lr
   155d0:	bx	lr
   155d4:	sub	r1, r0, #65	; 0x41
   155d8:	cmp	r1, #26
   155dc:	addcc	r0, r0, #32
   155e0:	bx	lr
   155e4:	sub	r1, r0, #97	; 0x61
   155e8:	cmp	r1, #26
   155ec:	subcc	r0, r0, #32
   155f0:	bx	lr
   155f4:	push	{r4, r5, fp, lr}
   155f8:	add	fp, sp, #8
   155fc:	mov	r4, r1
   15600:	mov	r5, r0
   15604:	bl	15634 <__snprintf_chk@plt+0x4074>
   15608:	cmp	r0, #0
   1560c:	beq	15624 <__snprintf_chk@plt+0x4064>
   15610:	mov	r2, r0
   15614:	mov	r0, r5
   15618:	mov	r1, r4
   1561c:	pop	{r4, r5, fp, lr}
   15620:	b	11530 <strtod_l@plt>
   15624:	cmp	r4, #0
   15628:	strne	r5, [r4]
   1562c:	vmov.i32	d0, #0	; 0x00000000
   15630:	pop	{r4, r5, fp, pc}
   15634:	push	{r4, sl, fp, lr}
   15638:	add	fp, sp, #8
   1563c:	movw	r4, #29856	; 0x74a0
   15640:	movt	r4, #2
   15644:	ldr	r0, [r4]
   15648:	cmp	r0, #0
   1564c:	beq	15658 <__snprintf_chk@plt+0x4098>
   15650:	ldr	r0, [r4]
   15654:	pop	{r4, sl, fp, pc}
   15658:	movw	r1, #27373	; 0x6aed
   1565c:	movt	r1, #1
   15660:	movw	r0, #8127	; 0x1fbf
   15664:	mov	r2, #0
   15668:	bl	11578 <newlocale@plt>
   1566c:	str	r0, [r4]
   15670:	ldr	r0, [r4]
   15674:	pop	{r4, sl, fp, pc}
   15678:	push	{r4, r5, r6, sl, fp, lr}
   1567c:	add	fp, sp, #16
   15680:	mov	r4, r0
   15684:	bl	113c8 <__fpending@plt>
   15688:	mov	r5, r0
   1568c:	mov	r0, r4
   15690:	bl	113d4 <ferror_unlocked@plt>
   15694:	mov	r6, r0
   15698:	mov	r0, r4
   1569c:	bl	156fc <__snprintf_chk@plt+0x413c>
   156a0:	cmp	r6, #0
   156a4:	beq	156c8 <__snprintf_chk@plt+0x4108>
   156a8:	mvn	r4, #0
   156ac:	cmp	r0, #0
   156b0:	bne	156f4 <__snprintf_chk@plt+0x4134>
   156b4:	bl	11494 <__errno_location@plt>
   156b8:	mov	r1, #0
   156bc:	str	r1, [r0]
   156c0:	mov	r0, r4
   156c4:	pop	{r4, r5, r6, sl, fp, pc}
   156c8:	cmp	r0, #0
   156cc:	mov	r4, r0
   156d0:	mvnne	r4, #0
   156d4:	cmp	r5, #0
   156d8:	bne	156f4 <__snprintf_chk@plt+0x4134>
   156dc:	cmp	r0, #0
   156e0:	beq	156f4 <__snprintf_chk@plt+0x4134>
   156e4:	bl	11494 <__errno_location@plt>
   156e8:	ldr	r0, [r0]
   156ec:	subs	r4, r0, #9
   156f0:	mvnne	r4, #0
   156f4:	mov	r0, r4
   156f8:	pop	{r4, r5, r6, sl, fp, pc}
   156fc:	push	{r4, r5, fp, lr}
   15700:	add	fp, sp, #8
   15704:	sub	sp, sp, #8
   15708:	mov	r4, r0
   1570c:	bl	114f4 <fileno@plt>
   15710:	cmn	r0, #1
   15714:	ble	1578c <__snprintf_chk@plt+0x41cc>
   15718:	mov	r0, r4
   1571c:	bl	11428 <__freading@plt>
   15720:	cmp	r0, #0
   15724:	beq	15750 <__snprintf_chk@plt+0x4190>
   15728:	mov	r0, r4
   1572c:	bl	114f4 <fileno@plt>
   15730:	mov	r1, #1
   15734:	str	r1, [sp]
   15738:	mov	r2, #0
   1573c:	mov	r3, #0
   15740:	bl	11398 <lseek64@plt>
   15744:	and	r0, r0, r1
   15748:	cmn	r0, #1
   1574c:	beq	1578c <__snprintf_chk@plt+0x41cc>
   15750:	mov	r0, r4
   15754:	bl	1579c <__snprintf_chk@plt+0x41dc>
   15758:	cmp	r0, #0
   1575c:	beq	1578c <__snprintf_chk@plt+0x41cc>
   15760:	bl	11494 <__errno_location@plt>
   15764:	ldr	r5, [r0]
   15768:	mov	r0, r4
   1576c:	bl	11518 <fclose@plt>
   15770:	cmp	r5, #0
   15774:	beq	15784 <__snprintf_chk@plt+0x41c4>
   15778:	bl	11494 <__errno_location@plt>
   1577c:	str	r5, [r0]
   15780:	mvn	r0, #0
   15784:	sub	sp, fp, #8
   15788:	pop	{r4, r5, fp, pc}
   1578c:	mov	r0, r4
   15790:	sub	sp, fp, #8
   15794:	pop	{r4, r5, fp, lr}
   15798:	b	11518 <fclose@plt>
   1579c:	push	{r4, sl, fp, lr}
   157a0:	add	fp, sp, #8
   157a4:	mov	r4, r0
   157a8:	cmp	r0, #0
   157ac:	beq	157c4 <__snprintf_chk@plt+0x4204>
   157b0:	mov	r0, r4
   157b4:	bl	11428 <__freading@plt>
   157b8:	cmp	r0, #0
   157bc:	movne	r0, r4
   157c0:	blne	157d0 <__snprintf_chk@plt+0x4210>
   157c4:	mov	r0, r4
   157c8:	pop	{r4, sl, fp, lr}
   157cc:	b	112cc <fflush@plt>
   157d0:	push	{fp, lr}
   157d4:	mov	fp, sp
   157d8:	sub	sp, sp, #8
   157dc:	ldrb	r1, [r0, #1]
   157e0:	tst	r1, #1
   157e4:	beq	157fc <__snprintf_chk@plt+0x423c>
   157e8:	mov	r1, #1
   157ec:	str	r1, [sp]
   157f0:	mov	r2, #0
   157f4:	mov	r3, #0
   157f8:	bl	15804 <__snprintf_chk@plt+0x4244>
   157fc:	mov	sp, fp
   15800:	pop	{fp, pc}
   15804:	push	{r4, r5, r6, r7, fp, lr}
   15808:	add	fp, sp, #16
   1580c:	sub	sp, sp, #8
   15810:	mov	r5, r3
   15814:	mov	r6, r2
   15818:	mov	r4, r0
   1581c:	ldr	r0, [r0, #4]
   15820:	ldr	r1, [r4, #8]
   15824:	cmp	r1, r0
   15828:	bne	15844 <__snprintf_chk@plt+0x4284>
   1582c:	ldrd	r0, [r4, #16]
   15830:	cmp	r1, r0
   15834:	bne	15844 <__snprintf_chk@plt+0x4284>
   15838:	ldr	r0, [r4, #36]	; 0x24
   1583c:	cmp	r0, #0
   15840:	beq	1585c <__snprintf_chk@plt+0x429c>
   15844:	mov	r0, r4
   15848:	mov	r2, r6
   1584c:	mov	r3, r5
   15850:	sub	sp, fp, #16
   15854:	pop	{r4, r5, r6, r7, fp, lr}
   15858:	b	11524 <fseeko64@plt>
   1585c:	ldr	r7, [fp, #8]
   15860:	mov	r0, r4
   15864:	bl	114f4 <fileno@plt>
   15868:	str	r7, [sp]
   1586c:	mov	r2, r6
   15870:	mov	r3, r5
   15874:	bl	11398 <lseek64@plt>
   15878:	and	r2, r0, r1
   1587c:	cmn	r2, #1
   15880:	beq	158a0 <__snprintf_chk@plt+0x42e0>
   15884:	strd	r0, [r4, #80]	; 0x50
   15888:	ldr	r0, [r4]
   1588c:	bic	r0, r0, #16
   15890:	str	r0, [r4]
   15894:	mov	r0, #0
   15898:	sub	sp, fp, #16
   1589c:	pop	{r4, r5, r6, r7, fp, pc}
   158a0:	mvn	r0, #0
   158a4:	sub	sp, fp, #16
   158a8:	pop	{r4, r5, r6, r7, fp, pc}
   158ac:	push	{fp, lr}
   158b0:	mov	fp, sp
   158b4:	bl	11494 <__errno_location@plt>
   158b8:	mov	r1, #12
   158bc:	str	r1, [r0]
   158c0:	mov	r0, #0
   158c4:	pop	{fp, pc}
   158c8:	b	1524c <__snprintf_chk@plt+0x3c8c>
   158cc:	cmp	r1, #0
   158d0:	orreq	r1, r1, #1
   158d4:	b	1527c <__snprintf_chk@plt+0x3cbc>
   158d8:	b	151f8 <__snprintf_chk@plt+0x3c38>
   158dc:	clz	r3, r2
   158e0:	lsr	ip, r3, #5
   158e4:	clz	r3, r1
   158e8:	lsr	r3, r3, #5
   158ec:	orrs	r3, r3, ip
   158f0:	movwne	r1, #1
   158f4:	movwne	r2, #1
   158f8:	b	15998 <__snprintf_chk@plt+0x43d8>
   158fc:	push	{fp, lr}
   15900:	mov	fp, sp
   15904:	mov	r0, #14
   15908:	bl	1156c <nl_langinfo@plt>
   1590c:	movw	r1, #25812	; 0x64d4
   15910:	movt	r1, #1
   15914:	cmp	r0, #0
   15918:	movne	r1, r0
   1591c:	ldrb	r2, [r1]
   15920:	movw	r0, #27375	; 0x6aef
   15924:	movt	r0, #1
   15928:	cmp	r2, #0
   1592c:	movne	r0, r1
   15930:	pop	{fp, pc}
   15934:	push	{r4, r5, r6, r7, fp, lr}
   15938:	add	fp, sp, #16
   1593c:	sub	sp, sp, #8
   15940:	mov	r7, r2
   15944:	mov	r4, r1
   15948:	add	r5, sp, #4
   1594c:	cmp	r0, #0
   15950:	movne	r5, r0
   15954:	mov	r0, r5
   15958:	bl	113e0 <mbrtowc@plt>
   1595c:	mov	r6, r0
   15960:	cmp	r7, #0
   15964:	beq	1598c <__snprintf_chk@plt+0x43cc>
   15968:	cmn	r6, #2
   1596c:	bcc	1598c <__snprintf_chk@plt+0x43cc>
   15970:	mov	r0, #0
   15974:	bl	159d4 <__snprintf_chk@plt+0x4414>
   15978:	cmp	r0, #0
   1597c:	bne	1598c <__snprintf_chk@plt+0x43cc>
   15980:	ldrb	r0, [r4]
   15984:	str	r0, [r5]
   15988:	mov	r6, #1
   1598c:	mov	r0, r6
   15990:	sub	sp, fp, #16
   15994:	pop	{r4, r5, r6, r7, fp, pc}
   15998:	cmp	r2, #0
   1599c:	beq	159cc <__snprintf_chk@plt+0x440c>
   159a0:	mvn	r3, #0
   159a4:	udiv	r3, r3, r2
   159a8:	cmp	r3, r1
   159ac:	bcs	159cc <__snprintf_chk@plt+0x440c>
   159b0:	push	{fp, lr}
   159b4:	mov	fp, sp
   159b8:	bl	11494 <__errno_location@plt>
   159bc:	mov	r1, #12
   159c0:	str	r1, [r0]
   159c4:	mov	r0, #0
   159c8:	pop	{fp, pc}
   159cc:	mul	r1, r2, r1
   159d0:	b	1527c <__snprintf_chk@plt+0x3cbc>
   159d4:	push	{r4, sl, fp, lr}
   159d8:	add	fp, sp, #8
   159dc:	sub	sp, sp, #264	; 0x108
   159e0:	add	r1, sp, #7
   159e4:	movw	r2, #257	; 0x101
   159e8:	bl	15a40 <__snprintf_chk@plt+0x4480>
   159ec:	mov	r4, #0
   159f0:	cmp	r0, #0
   159f4:	bne	15a34 <__snprintf_chk@plt+0x4474>
   159f8:	add	r0, sp, #7
   159fc:	movw	r1, #27373	; 0x6aed
   15a00:	movt	r1, #1
   15a04:	mov	r2, #2
   15a08:	bl	11470 <bcmp@plt>
   15a0c:	cmp	r0, #0
   15a10:	beq	15a34 <__snprintf_chk@plt+0x4474>
   15a14:	add	r0, sp, #7
   15a18:	movw	r1, #27381	; 0x6af5
   15a1c:	movt	r1, #1
   15a20:	mov	r2, #6
   15a24:	bl	11470 <bcmp@plt>
   15a28:	mov	r4, r0
   15a2c:	cmp	r0, #0
   15a30:	movwne	r4, #1
   15a34:	mov	r0, r4
   15a38:	sub	sp, fp, #8
   15a3c:	pop	{r4, sl, fp, pc}
   15a40:	b	15a44 <__snprintf_chk@plt+0x4484>
   15a44:	push	{r4, r5, r6, r7, fp, lr}
   15a48:	add	fp, sp, #16
   15a4c:	mov	r6, r2
   15a50:	mov	r4, r1
   15a54:	bl	15adc <__snprintf_chk@plt+0x451c>
   15a58:	cmp	r0, #0
   15a5c:	beq	15a8c <__snprintf_chk@plt+0x44cc>
   15a60:	mov	r7, r0
   15a64:	bl	1147c <strlen@plt>
   15a68:	cmp	r0, r6
   15a6c:	bcs	15aa8 <__snprintf_chk@plt+0x44e8>
   15a70:	add	r2, r0, #1
   15a74:	mov	r0, r4
   15a78:	mov	r1, r7
   15a7c:	bl	112fc <memcpy@plt>
   15a80:	mov	r5, #0
   15a84:	mov	r0, r5
   15a88:	pop	{r4, r5, r6, r7, fp, pc}
   15a8c:	mov	r5, #22
   15a90:	cmp	r6, #0
   15a94:	beq	15ad0 <__snprintf_chk@plt+0x4510>
   15a98:	mov	r0, #0
   15a9c:	strb	r0, [r4]
   15aa0:	mov	r0, r5
   15aa4:	pop	{r4, r5, r6, r7, fp, pc}
   15aa8:	mov	r5, #34	; 0x22
   15aac:	cmp	r6, #0
   15ab0:	beq	15ad0 <__snprintf_chk@plt+0x4510>
   15ab4:	sub	r6, r6, #1
   15ab8:	mov	r0, r4
   15abc:	mov	r1, r7
   15ac0:	mov	r2, r6
   15ac4:	bl	112fc <memcpy@plt>
   15ac8:	mov	r0, #0
   15acc:	strb	r0, [r4, r6]
   15ad0:	mov	r0, r5
   15ad4:	pop	{r4, r5, r6, r7, fp, pc}
   15ad8:	b	15adc <__snprintf_chk@plt+0x451c>
   15adc:	mov	r1, #0
   15ae0:	b	1153c <setlocale@plt>
   15ae4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ae8:	mov	r7, r0
   15aec:	ldr	r6, [pc, #72]	; 15b3c <__snprintf_chk@plt+0x457c>
   15af0:	ldr	r5, [pc, #72]	; 15b40 <__snprintf_chk@plt+0x4580>
   15af4:	add	r6, pc, r6
   15af8:	add	r5, pc, r5
   15afc:	sub	r6, r6, r5
   15b00:	mov	r8, r1
   15b04:	mov	r9, r2
   15b08:	bl	11270 <calloc@plt-0x20>
   15b0c:	asrs	r6, r6, #2
   15b10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b14:	mov	r4, #0
   15b18:	add	r4, r4, #1
   15b1c:	ldr	r3, [r5], #4
   15b20:	mov	r2, r9
   15b24:	mov	r1, r8
   15b28:	mov	r0, r7
   15b2c:	blx	r3
   15b30:	cmp	r6, r4
   15b34:	bne	15b18 <__snprintf_chk@plt+0x4558>
   15b38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b3c:	andeq	r1, r1, r0, lsl #8
   15b40:	strdeq	r1, [r1], -r8
   15b44:	bx	lr
   15b48:	ldr	r3, [pc, #12]	; 15b5c <__snprintf_chk@plt+0x459c>
   15b4c:	mov	r1, #0
   15b50:	add	r3, pc, r3
   15b54:	ldr	r2, [r3]
   15b58:	b	114ac <__cxa_atexit@plt>
   15b5c:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

00015b60 <.fini>:
   15b60:	push	{r3, lr}
   15b64:	pop	{r3, pc}
