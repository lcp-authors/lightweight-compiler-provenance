
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014de0 <.init>:
   14de0:	push	{r3, lr}
   14de4:	bl	14f54 <_start@@Base+0x3c>
   14de8:	pop	{r3, pc}

Disassembly of section .plt:

00014dec <raise@plt-0x14>:
   14dec:	push	{lr}		; (str lr, [sp, #-4]!)
   14df0:	ldr	lr, [pc, #4]	; 14dfc <raise@plt-0x4>
   14df4:	add	lr, pc, lr
   14df8:	ldr	pc, [lr, #8]!
   14dfc:	andeq	r8, r4, r4, lsl #4

00014e00 <raise@plt>:
   14e00:	add	ip, pc, #0, 12
   14e04:	add	ip, ip, #72, 20	; 0x48000
   14e08:	ldr	pc, [ip, #516]!	; 0x204

00014e0c <strcmp@plt>:
   14e0c:	add	ip, pc, #0, 12
   14e10:	add	ip, ip, #72, 20	; 0x48000
   14e14:	ldr	pc, [ip, #508]!	; 0x1fc

00014e18 <memmove@plt>:
   14e18:	add	ip, pc, #0, 12
   14e1c:	add	ip, ip, #72, 20	; 0x48000
   14e20:	ldr	pc, [ip, #500]!	; 0x1f4

00014e24 <free@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #72, 20	; 0x48000
   14e2c:	ldr	pc, [ip, #492]!	; 0x1ec

00014e30 <memcpy@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #72, 20	; 0x48000
   14e38:	ldr	pc, [ip, #484]!	; 0x1e4

00014e3c <memcmp@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #72, 20	; 0x48000
   14e44:	ldr	pc, [ip, #476]!	; 0x1dc

00014e48 <__isinff@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #72, 20	; 0x48000
   14e50:	ldr	pc, [ip, #468]!	; 0x1d4

00014e54 <__isinf@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #72, 20	; 0x48000
   14e5c:	ldr	pc, [ip, #460]!	; 0x1cc

00014e60 <realloc@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #72, 20	; 0x48000
   14e68:	ldr	pc, [ip, #452]!	; 0x1c4

00014e6c <fwrite@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #72, 20	; 0x48000
   14e74:	ldr	pc, [ip, #444]!	; 0x1bc

00014e78 <malloc@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #72, 20	; 0x48000
   14e80:	ldr	pc, [ip, #436]!	; 0x1b4

00014e84 <__libc_start_main@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #72, 20	; 0x48000
   14e8c:	ldr	pc, [ip, #428]!	; 0x1ac

00014e90 <__gmon_start__@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #72, 20	; 0x48000
   14e98:	ldr	pc, [ip, #420]!	; 0x1a4

00014e9c <strlen@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #72, 20	; 0x48000
   14ea4:	ldr	pc, [ip, #412]!	; 0x19c

00014ea8 <fprintf@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #72, 20	; 0x48000
   14eb0:	ldr	pc, [ip, #404]!	; 0x194

00014eb4 <posix_memalign@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #72, 20	; 0x48000
   14ebc:	ldr	pc, [ip, #396]!	; 0x18c

00014ec0 <memset@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #72, 20	; 0x48000
   14ec8:	ldr	pc, [ip, #388]!	; 0x184

00014ecc <strncpy@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #72, 20	; 0x48000
   14ed4:	ldr	pc, [ip, #380]!	; 0x17c

00014ed8 <strtod@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #72, 20	; 0x48000
   14ee0:	ldr	pc, [ip, #372]!	; 0x174

00014ee4 <memchr@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #72, 20	; 0x48000
   14eec:	ldr	pc, [ip, #364]!	; 0x16c

00014ef0 <sprintf@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #72, 20	; 0x48000
   14ef8:	ldr	pc, [ip, #356]!	; 0x164

00014efc <abort@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #72, 20	; 0x48000
   14f04:	ldr	pc, [ip, #348]!	; 0x15c

00014f08 <__assert_fail@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #72, 20	; 0x48000
   14f10:	ldr	pc, [ip, #340]!	; 0x154

Disassembly of section .text:

00014f18 <_start@@Base>:
   14f18:	mov	fp, #0
   14f1c:	mov	lr, #0
   14f20:	pop	{r1}		; (ldr r1, [sp], #4)
   14f24:	mov	r2, sp
   14f28:	push	{r2}		; (str r2, [sp, #-4]!)
   14f2c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f30:	ldr	ip, [pc, #16]	; 14f48 <_start@@Base+0x30>
   14f34:	push	{ip}		; (str ip, [sp, #-4]!)
   14f38:	ldr	r0, [pc, #12]	; 14f4c <_start@@Base+0x34>
   14f3c:	ldr	r3, [pc, #12]	; 14f50 <_start@@Base+0x38>
   14f40:	bl	14e84 <__libc_start_main@plt>
   14f44:	bl	14efc <abort@plt>
   14f48:	andeq	r6, r4, ip, lsl r4
   14f4c:	andeq	r6, r1, r8, ror #9
   14f50:			; <UNDEFINED> instruction: 0x000463bc
   14f54:	ldr	r3, [pc, #20]	; 14f70 <_start@@Base+0x58>
   14f58:	ldr	r2, [pc, #20]	; 14f74 <_start@@Base+0x5c>
   14f5c:	add	r3, pc, r3
   14f60:	ldr	r2, [r3, r2]
   14f64:	cmp	r2, #0
   14f68:	bxeq	lr
   14f6c:	b	14e90 <__gmon_start__@plt>
   14f70:	muleq	r4, ip, r0
   14f74:	andeq	r0, r0, r0, ror r0
   14f78:	ldr	r0, [pc, #24]	; 14f98 <_start@@Base+0x80>
   14f7c:	ldr	r3, [pc, #24]	; 14f9c <_start@@Base+0x84>
   14f80:	cmp	r3, r0
   14f84:	bxeq	lr
   14f88:	ldr	r3, [pc, #16]	; 14fa0 <_start@@Base+0x88>
   14f8c:	cmp	r3, #0
   14f90:	bxeq	lr
   14f94:	bx	r3
   14f98:	andeq	sp, r5, r8, asr #7
   14f9c:	andeq	sp, r5, r8, asr #7
   14fa0:	andeq	r0, r0, r0
   14fa4:	ldr	r0, [pc, #36]	; 14fd0 <_start@@Base+0xb8>
   14fa8:	ldr	r1, [pc, #36]	; 14fd4 <_start@@Base+0xbc>
   14fac:	sub	r1, r1, r0
   14fb0:	asr	r1, r1, #2
   14fb4:	add	r1, r1, r1, lsr #31
   14fb8:	asrs	r1, r1, #1
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0xc0>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	sp, r5, r8, asr #7
   14fd4:	andeq	sp, r5, r8, asr #7
   14fd8:	andeq	r0, r0, r0
   14fdc:	push	{r4, lr}
   14fe0:	ldr	r4, [pc, #24]	; 15000 <_start@@Base+0xe8>
   14fe4:	ldrb	r3, [r4]
   14fe8:	cmp	r3, #0
   14fec:	popne	{r4, pc}
   14ff0:	bl	14f78 <_start@@Base+0x60>
   14ff4:	mov	r3, #1
   14ff8:	strb	r3, [r4]
   14ffc:	pop	{r4, pc}
   15000:	andeq	sp, r5, r8, asr #7
   15004:	b	14fa4 <_start@@Base+0x8c>

00015008 <test_json@@Base>:
   15008:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1500c:	add	fp, sp, #24
   15010:	sub	sp, sp, #520	; 0x208
   15014:	ldr	ip, [fp, #16]
   15018:	ldr	lr, [fp, #12]
   1501c:	ldr	r4, [fp, #8]
   15020:	str	r0, [fp, #-28]	; 0xffffffe4
   15024:	str	r1, [fp, #-32]	; 0xffffffe0
   15028:	str	r2, [fp, #-36]	; 0xffffffdc
   1502c:	str	r3, [fp, #-40]	; 0xffffffd8
   15030:	mvn	r0, #0
   15034:	str	r0, [fp, #-44]	; 0xffffffd4
   15038:	movw	r0, #0
   1503c:	str	r0, [fp, #-52]	; 0xffffffcc
   15040:	str	r0, [fp, #-56]	; 0xffffffc8
   15044:	add	r0, sp, #248	; 0xf8
   15048:	str	r0, [sp, #244]	; 0xf4
   1504c:	ldr	r0, [sp, #244]	; 0xf4
   15050:	str	ip, [sp, #148]	; 0x94
   15054:	str	lr, [sp, #144]	; 0x90
   15058:	str	r4, [sp, #140]	; 0x8c
   1505c:	bl	29034 <flatcc_builder_init@@Base>
   15060:	add	r1, sp, #156	; 0x9c
   15064:	str	r0, [sp, #136]	; 0x88
   15068:	mov	r0, r1
   1506c:	movw	r1, #0
   15070:	bl	43c30 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15074:	ldr	r1, [fp, #12]
   15078:	add	r2, sp, #156	; 0x9c
   1507c:	str	r0, [sp, #132]	; 0x84
   15080:	mov	r0, r2
   15084:	bl	155ac <test_json@@Base+0x5a4>
   15088:	ldr	r0, [sp, #244]	; 0xf4
   1508c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15090:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15094:	str	r0, [sp, #128]	; 0x80
   15098:	mov	r0, r1
   1509c:	str	r2, [sp, #124]	; 0x7c
   150a0:	bl	14e9c <strlen@plt>
   150a4:	ldr	r1, [fp, #8]
   150a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150ac:	ldr	r2, [r2]
   150b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150b4:	ldr	r3, [r3, #4]
   150b8:	ldr	ip, [sp, #128]	; 0x80
   150bc:	str	r0, [sp, #120]	; 0x78
   150c0:	mov	r0, ip
   150c4:	add	lr, sp, #204	; 0xcc
   150c8:	str	r1, [sp, #116]	; 0x74
   150cc:	mov	r1, lr
   150d0:	ldr	lr, [sp, #124]	; 0x7c
   150d4:	str	r2, [sp, #112]	; 0x70
   150d8:	mov	r2, lr
   150dc:	ldr	r4, [sp, #120]	; 0x78
   150e0:	str	r3, [sp, #108]	; 0x6c
   150e4:	mov	r3, r4
   150e8:	ldr	r5, [sp, #116]	; 0x74
   150ec:	str	r5, [sp]
   150f0:	ldr	r6, [sp, #112]	; 0x70
   150f4:	str	r6, [sp, #4]
   150f8:	ldr	r7, [sp, #108]	; 0x6c
   150fc:	str	r7, [sp, #8]
   15100:	bl	37580 <flatcc_json_parser_table_as_root@@Base>
   15104:	str	r0, [fp, #-48]	; 0xffffffd0
   15108:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1510c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15110:	cmp	r0, r1
   15114:	beq	15318 <test_json@@Base+0x310>
   15118:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1511c:	cmp	r0, #0
   15120:	beq	1524c <test_json@@Base+0x244>
   15124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15128:	cmp	r0, #0
   1512c:	beq	151dc <test_json@@Base+0x1d4>
   15130:	ldr	r0, [pc, #1112]	; 15590 <test_json@@Base+0x588>
   15134:	ldr	r0, [pc, r0]
   15138:	ldr	r0, [r0]
   1513c:	ldr	r2, [fp, #16]
   15140:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15144:	str	r0, [sp, #104]	; 0x68
   15148:	mov	r0, r1
   1514c:	str	r2, [sp, #100]	; 0x64
   15150:	bl	32dcc <flatcc_json_parser_error_string@@Base>
   15154:	ldr	r1, [pc, #1072]	; 1558c <test_json@@Base+0x584>
   15158:	add	r1, pc, r1
   1515c:	ldr	r2, [sp, #104]	; 0x68
   15160:	str	r0, [sp, #96]	; 0x60
   15164:	mov	r0, r2
   15168:	ldr	r2, [sp, #100]	; 0x64
   1516c:	ldr	r3, [sp, #96]	; 0x60
   15170:	bl	14ea8 <fprintf@plt>
   15174:	ldr	r1, [pc, #1036]	; 15588 <test_json@@Base+0x580>
   15178:	ldr	r1, [pc, r1]
   1517c:	ldr	r1, [r1]
   15180:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15184:	str	r0, [sp, #92]	; 0x5c
   15188:	mov	r0, r2
   1518c:	str	r1, [sp, #88]	; 0x58
   15190:	bl	32dcc <flatcc_json_parser_error_string@@Base>
   15194:	ldr	r1, [pc, #1000]	; 15584 <test_json@@Base+0x57c>
   15198:	add	r1, pc, r1
   1519c:	ldr	r2, [sp, #88]	; 0x58
   151a0:	str	r0, [sp, #84]	; 0x54
   151a4:	mov	r0, r2
   151a8:	ldr	r2, [sp, #84]	; 0x54
   151ac:	bl	14ea8 <fprintf@plt>
   151b0:	ldr	r1, [pc, #964]	; 1557c <test_json@@Base+0x574>
   151b4:	add	r1, pc, r1
   151b8:	ldr	r2, [pc, #960]	; 15580 <test_json@@Base+0x578>
   151bc:	ldr	r2, [pc, r2]
   151c0:	ldr	r2, [r2]
   151c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   151c8:	str	r0, [sp, #80]	; 0x50
   151cc:	mov	r0, r2
   151d0:	mov	r2, r3
   151d4:	bl	14ea8 <fprintf@plt>
   151d8:	b	15248 <test_json@@Base+0x240>
   151dc:	ldr	r0, [pc, #916]	; 15578 <test_json@@Base+0x570>
   151e0:	ldr	r0, [pc, r0]
   151e4:	ldr	r0, [r0]
   151e8:	ldr	r2, [fp, #16]
   151ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151f0:	str	r0, [sp, #76]	; 0x4c
   151f4:	mov	r0, r1
   151f8:	str	r2, [sp, #72]	; 0x48
   151fc:	bl	32dcc <flatcc_json_parser_error_string@@Base>
   15200:	ldr	r1, [pc, #876]	; 15574 <test_json@@Base+0x56c>
   15204:	add	r1, pc, r1
   15208:	ldr	r2, [sp, #76]	; 0x4c
   1520c:	str	r0, [sp, #68]	; 0x44
   15210:	mov	r0, r2
   15214:	ldr	r2, [sp, #72]	; 0x48
   15218:	ldr	r3, [sp, #68]	; 0x44
   1521c:	bl	14ea8 <fprintf@plt>
   15220:	ldr	r1, [pc, #836]	; 1556c <test_json@@Base+0x564>
   15224:	add	r1, pc, r1
   15228:	ldr	r2, [pc, #832]	; 15570 <test_json@@Base+0x568>
   1522c:	ldr	r2, [pc, r2]
   15230:	ldr	r2, [r2]
   15234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15238:	str	r0, [sp, #64]	; 0x40
   1523c:	mov	r0, r2
   15240:	mov	r2, r3
   15244:	bl	14ea8 <fprintf@plt>
   15248:	b	152b8 <test_json@@Base+0x2b0>
   1524c:	ldr	r0, [pc, #788]	; 15568 <test_json@@Base+0x560>
   15250:	ldr	r0, [pc, r0]
   15254:	ldr	r0, [r0]
   15258:	ldr	r2, [fp, #16]
   1525c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15260:	str	r0, [sp, #60]	; 0x3c
   15264:	mov	r0, r1
   15268:	str	r2, [sp, #56]	; 0x38
   1526c:	bl	32dcc <flatcc_json_parser_error_string@@Base>
   15270:	ldr	r1, [pc, #748]	; 15564 <test_json@@Base+0x55c>
   15274:	add	r1, pc, r1
   15278:	ldr	r2, [sp, #60]	; 0x3c
   1527c:	str	r0, [sp, #52]	; 0x34
   15280:	mov	r0, r2
   15284:	ldr	r2, [sp, #56]	; 0x38
   15288:	ldr	r3, [sp, #52]	; 0x34
   1528c:	bl	14ea8 <fprintf@plt>
   15290:	ldr	r1, [pc, #708]	; 1555c <test_json@@Base+0x554>
   15294:	add	r1, pc, r1
   15298:	ldr	r2, [pc, #704]	; 15560 <test_json@@Base+0x558>
   1529c:	ldr	r2, [pc, r2]
   152a0:	ldr	r2, [r2]
   152a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152a8:	str	r0, [sp, #48]	; 0x30
   152ac:	mov	r0, r2
   152b0:	mov	r2, r3
   152b4:	bl	14ea8 <fprintf@plt>
   152b8:	movw	r0, #0
   152bc:	str	r0, [sp, #152]	; 0x98
   152c0:	ldr	r0, [sp, #152]	; 0x98
   152c4:	ldr	r1, [sp, #220]	; 0xdc
   152c8:	sub	r1, r1, #1
   152cc:	cmp	r0, r1
   152d0:	bge	152fc <test_json@@Base+0x2f4>
   152d4:	ldr	r0, [pc, #712]	; 155a4 <test_json@@Base+0x59c>
   152d8:	add	r1, pc, r0
   152dc:	ldr	r0, [pc, #708]	; 155a8 <test_json@@Base+0x5a0>
   152e0:	ldr	r0, [pc, r0]
   152e4:	ldr	r0, [r0]
   152e8:	bl	14ea8 <fprintf@plt>
   152ec:	ldr	r0, [sp, #152]	; 0x98
   152f0:	add	r0, r0, #1
   152f4:	str	r0, [sp, #152]	; 0x98
   152f8:	b	152c0 <test_json@@Base+0x2b8>
   152fc:	ldr	r0, [pc, #656]	; 15594 <test_json@@Base+0x58c>
   15300:	add	r1, pc, r0
   15304:	ldr	r0, [pc, #652]	; 15598 <test_json@@Base+0x590>
   15308:	ldr	r0, [pc, r0]
   1530c:	ldr	r0, [r0]
   15310:	bl	14ea8 <fprintf@plt>
   15314:	b	154e4 <test_json@@Base+0x4dc>
   15318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1531c:	cmp	r0, #0
   15320:	beq	15330 <test_json@@Base+0x328>
   15324:	movw	r0, #0
   15328:	str	r0, [fp, #-44]	; 0xffffffd4
   1532c:	b	154c0 <test_json@@Base+0x4b8>
   15330:	ldr	r0, [sp, #244]	; 0xf4
   15334:	sub	r1, fp, #60	; 0x3c
   15338:	bl	2e724 <flatcc_builder_finalize_aligned_buffer@@Base>
   1533c:	str	r0, [fp, #-52]	; 0xffffffcc
   15340:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15344:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15348:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1534c:	ldr	r2, [r2]
   15350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15354:	ldr	r3, [r3, #12]
   15358:	bl	3130c <flatcc_verify_table_as_root@@Base>
   1535c:	str	r0, [fp, #-44]	; 0xffffffd4
   15360:	cmp	r0, #0
   15364:	beq	153bc <test_json@@Base+0x3b4>
   15368:	ldr	r0, [pc, #488]	; 15558 <test_json@@Base+0x550>
   1536c:	ldr	r0, [pc, r0]
   15370:	ldr	r0, [r0]
   15374:	ldr	r3, [fp, #16]
   15378:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1537c:	str	r0, [sp, #44]	; 0x2c
   15380:	mov	r0, r1
   15384:	str	r3, [sp, #40]	; 0x28
   15388:	bl	2f794 <flatcc_verify_error_string@@Base>
   1538c:	ldr	r1, [pc, #444]	; 15550 <test_json@@Base+0x548>
   15390:	add	r1, pc, r1
   15394:	ldr	r2, [pc, #440]	; 15554 <test_json@@Base+0x54c>
   15398:	add	r2, pc, r2
   1539c:	ldr	r3, [sp, #44]	; 0x2c
   153a0:	str	r0, [sp, #36]	; 0x24
   153a4:	mov	r0, r3
   153a8:	ldr	r3, [sp, #40]	; 0x28
   153ac:	ldr	ip, [sp, #36]	; 0x24
   153b0:	str	ip, [sp]
   153b4:	bl	14ea8 <fprintf@plt>
   153b8:	b	154e4 <test_json@@Base+0x4dc>
   153bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   153c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   153c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153c8:	ldr	r3, [r0]
   153cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   153d0:	ldr	r0, [r0, #8]
   153d4:	add	ip, sp, #156	; 0x9c
   153d8:	str	r0, [sp, #32]
   153dc:	mov	r0, ip
   153e0:	ldr	ip, [sp, #32]
   153e4:	str	ip, [sp]
   153e8:	bl	43400 <flatcc_json_printer_table_as_root@@Base>
   153ec:	add	r1, sp, #156	; 0x9c
   153f0:	str	r0, [sp, #28]
   153f4:	mov	r0, r1
   153f8:	sub	r1, fp, #64	; 0x40
   153fc:	bl	43e70 <flatcc_json_printer_get_buffer@@Base>
   15400:	str	r0, [fp, #-56]	; 0xffffffc8
   15404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15408:	movw	r1, #0
   1540c:	cmp	r0, r1
   15410:	beq	15428 <test_json@@Base+0x420>
   15414:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15418:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1541c:	bl	14e0c <strcmp@plt>
   15420:	cmp	r0, #0
   15424:	beq	154b8 <test_json@@Base+0x4b0>
   15428:	ldr	r0, [pc, #280]	; 15548 <test_json@@Base+0x540>
   1542c:	add	r1, pc, r0
   15430:	ldr	r0, [pc, #276]	; 1554c <test_json@@Base+0x544>
   15434:	ldr	r0, [pc, r0]
   15438:	ldr	r0, [r0]
   1543c:	ldr	r2, [fp, #16]
   15440:	bl	14ea8 <fprintf@plt>
   15444:	ldr	r1, [pc, #244]	; 15540 <test_json@@Base+0x538>
   15448:	add	r1, pc, r1
   1544c:	ldr	r2, [pc, #240]	; 15544 <test_json@@Base+0x53c>
   15450:	ldr	r2, [pc, r2]
   15454:	ldr	r2, [r2]
   15458:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1545c:	str	r0, [sp, #24]
   15460:	mov	r0, r2
   15464:	mov	r2, r3
   15468:	bl	14ea8 <fprintf@plt>
   1546c:	ldr	r1, [pc, #196]	; 15538 <test_json@@Base+0x530>
   15470:	add	r1, pc, r1
   15474:	ldr	r2, [pc, #192]	; 1553c <test_json@@Base+0x534>
   15478:	ldr	r2, [pc, r2]
   1547c:	ldr	r2, [r2]
   15480:	str	r0, [sp, #20]
   15484:	mov	r0, r2
   15488:	bl	14ea8 <fprintf@plt>
   1548c:	ldr	r1, [pc, #156]	; 15530 <test_json@@Base+0x528>
   15490:	add	r1, pc, r1
   15494:	ldr	r2, [pc, #152]	; 15534 <test_json@@Base+0x52c>
   15498:	ldr	r2, [pc, r2]
   1549c:	ldr	r2, [r2]
   154a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154a4:	str	r0, [sp, #16]
   154a8:	mov	r0, r2
   154ac:	mov	r2, r3
   154b0:	bl	14ea8 <fprintf@plt>
   154b4:	b	154e4 <test_json@@Base+0x4dc>
   154b8:	movw	r0, #0
   154bc:	str	r0, [fp, #-44]	; 0xffffffd4
   154c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154c4:	bl	2e8cc <flatcc_builder_aligned_free@@Base>
   154c8:	ldr	r0, [sp, #244]	; 0xf4
   154cc:	bl	292e0 <flatcc_builder_clear@@Base>
   154d0:	add	r0, sp, #156	; 0x9c
   154d4:	bl	43f24 <flatcc_json_printer_clear@@Base>
   154d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154dc:	sub	sp, fp, #24
   154e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   154e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154e8:	movw	r1, #0
   154ec:	cmp	r0, r1
   154f0:	beq	15524 <test_json@@Base+0x51c>
   154f4:	ldr	r0, [pc, #160]	; 1559c <test_json@@Base+0x594>
   154f8:	add	r0, pc, r0
   154fc:	ldr	r1, [pc, #156]	; 155a0 <test_json@@Base+0x598>
   15500:	ldr	r1, [pc, r1]
   15504:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15508:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1550c:	ldr	r1, [r1]
   15510:	str	r1, [sp, #12]
   15514:	mov	r1, r2
   15518:	mov	r2, r3
   1551c:	ldr	r3, [sp, #12]
   15520:	bl	156a4 <test_json@@Base+0x69c>
   15524:	mvn	r0, #0
   15528:	str	r0, [fp, #-44]	; 0xffffffd4
   1552c:	b	154c0 <test_json@@Base+0x4b8>
   15530:	strdeq	r3, [r3], -r0
   15534:	andeq	r7, r4, ip, asr #23
   15538:	strdeq	r1, [r3], -ip
   1553c:	andeq	r7, r4, ip, ror #23
   15540:	andeq	r3, r3, r8, lsr fp
   15544:	andeq	r7, r4, r4, lsl ip
   15548:	andeq	r1, r3, fp, lsl #2
   1554c:	andeq	r7, r4, r0, lsr ip
   15550:	andeq	r1, r3, lr, lsl r1
   15554:	andeq	r1, r3, sp, lsr r1
   15558:	strdeq	r7, [r4], -r8
   1555c:	andeq	r3, r3, ip, ror #25
   15560:	andeq	r7, r4, r8, asr #27
   15564:	andeq	r1, r3, r6, lsl r2
   15568:	andeq	r7, r4, r4, lsl lr
   1556c:	andeq	r3, r3, ip, asr sp
   15570:	andeq	r7, r4, r8, lsr lr
   15574:	andeq	r1, r3, r6, asr #4
   15578:	andeq	r7, r4, r4, lsl #29
   1557c:	andeq	r3, r3, ip, asr #27
   15580:	andeq	r7, r4, r8, lsr #29
   15584:	ldrdeq	r1, [r3], -r3
   15588:	andeq	r7, r4, ip, ror #29
   1558c:	andeq	r1, r3, ip, asr #5
   15590:	andeq	r7, r4, r0, lsr pc
   15594:	andeq	r1, r3, fp, lsr #3
   15598:	andeq	r7, r4, ip, asr sp
   1559c:	andeq	r1, r3, pc, ror r0
   155a0:	andeq	r7, r4, r4, ror #22
   155a4:			; <UNDEFINED> instruction: 0x00033cbc
   155a8:	andeq	r7, r4, r4, lsl #27
   155ac:	push	{fp, lr}
   155b0:	mov	fp, sp
   155b4:	sub	sp, sp, #8
   155b8:	str	r0, [sp, #4]
   155bc:	str	r1, [sp]
   155c0:	ldr	r0, [sp]
   155c4:	and	r0, r0, #1
   155c8:	cmp	r0, #0
   155cc:	movw	r0, #0
   155d0:	movne	r0, #1
   155d4:	mvn	r1, #0
   155d8:	eor	r0, r0, r1
   155dc:	eor	r0, r0, r1
   155e0:	and	r0, r0, #1
   155e4:	ldr	r2, [sp, #4]
   155e8:	strb	r0, [r2, #26]
   155ec:	ldr	r0, [sp]
   155f0:	and	r0, r0, #2
   155f4:	cmp	r0, #0
   155f8:	movw	r0, #0
   155fc:	movne	r0, #1
   15600:	eor	r0, r0, r1
   15604:	eor	r0, r0, r1
   15608:	and	r0, r0, #1
   1560c:	ldr	r2, [sp, #4]
   15610:	strb	r0, [r2, #27]
   15614:	ldr	r0, [sp]
   15618:	and	r0, r0, #4
   1561c:	cmp	r0, #0
   15620:	movw	r0, #0
   15624:	movne	r0, #1
   15628:	eor	r0, r0, r1
   1562c:	eor	r0, r0, r1
   15630:	and	r0, r0, #1
   15634:	ldr	r2, [sp, #4]
   15638:	strb	r0, [r2, #28]
   1563c:	ldr	r0, [sp]
   15640:	and	r0, r0, #8
   15644:	cmp	r0, #0
   15648:	movw	r0, #0
   1564c:	movne	r0, #1
   15650:	eor	r0, r0, r1
   15654:	eor	r0, r0, r1
   15658:	and	r0, r0, #1
   1565c:	ldr	r1, [sp, #4]
   15660:	strb	r0, [r1, #29]
   15664:	ldr	r0, [sp]
   15668:	and	r0, r0, #16
   1566c:	cmp	r0, #0
   15670:	beq	15684 <test_json@@Base+0x67c>
   15674:	ldr	r0, [sp, #4]
   15678:	movw	r1, #2
   1567c:	and	r1, r1, #255	; 0xff
   15680:	bl	1707c <main@@Base+0xb94>
   15684:	ldr	r0, [sp]
   15688:	and	r0, r0, #32
   1568c:	cmp	r0, #0
   15690:	beq	1569c <test_json@@Base+0x694>
   15694:	ldr	r0, [sp, #4]
   15698:	bl	1709c <main@@Base+0xbb4>
   1569c:	mov	sp, fp
   156a0:	pop	{fp, pc}
   156a4:	push	{fp, lr}
   156a8:	mov	fp, sp
   156ac:	sub	sp, sp, #48	; 0x30
   156b0:	str	r0, [fp, #-4]
   156b4:	str	r1, [fp, #-8]
   156b8:	str	r2, [fp, #-12]
   156bc:	str	r3, [fp, #-16]
   156c0:	ldr	r0, [fp, #-8]
   156c4:	str	r0, [sp, #4]
   156c8:	ldr	r0, [fp, #-4]
   156cc:	movw	r1, #0
   156d0:	cmp	r0, r1
   156d4:	beq	156ec <test_json@@Base+0x6e4>
   156d8:	ldr	r0, [pc, #412]	; 1587c <test_json@@Base+0x874>
   156dc:	add	r1, pc, r0
   156e0:	ldr	r0, [fp, #-16]
   156e4:	ldr	r2, [fp, #-4]
   156e8:	bl	14ea8 <fprintf@plt>
   156ec:	movw	r0, #0
   156f0:	str	r0, [fp, #-20]	; 0xffffffec
   156f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   156f8:	ldr	r1, [fp, #-12]
   156fc:	cmp	r0, r1
   15700:	bcs	1582c <test_json@@Base+0x824>
   15704:	ldr	r0, [fp, #-20]	; 0xffffffec
   15708:	and	r0, r0, #15
   1570c:	cmp	r0, #0
   15710:	bne	1574c <test_json@@Base+0x744>
   15714:	ldr	r0, [fp, #-20]	; 0xffffffec
   15718:	cmp	r0, #0
   1571c:	beq	15734 <test_json@@Base+0x72c>
   15720:	ldr	r0, [pc, #356]	; 1588c <test_json@@Base+0x884>
   15724:	add	r1, pc, r0
   15728:	add	r2, sp, #11
   1572c:	ldr	r0, [fp, #-16]
   15730:	bl	14ea8 <fprintf@plt>
   15734:	ldr	r0, [pc, #340]	; 15890 <test_json@@Base+0x888>
   15738:	add	r1, pc, r0
   1573c:	ldr	r0, [fp, #-16]
   15740:	ldr	r2, [fp, #-20]	; 0xffffffec
   15744:	bl	14ea8 <fprintf@plt>
   15748:	b	15770 <test_json@@Base+0x768>
   1574c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15750:	and	r0, r0, #7
   15754:	cmp	r0, #0
   15758:	bne	1576c <test_json@@Base+0x764>
   1575c:	ldr	r0, [pc, #292]	; 15888 <test_json@@Base+0x880>
   15760:	add	r1, pc, r0
   15764:	ldr	r0, [fp, #-16]
   15768:	bl	14ea8 <fprintf@plt>
   1576c:	b	15770 <test_json@@Base+0x768>
   15770:	ldr	r0, [pc, #284]	; 15894 <test_json@@Base+0x88c>
   15774:	add	r1, pc, r0
   15778:	ldr	r0, [fp, #-16]
   1577c:	ldr	r2, [sp, #4]
   15780:	ldr	r3, [fp, #-20]	; 0xffffffec
   15784:	add	r2, r2, r3
   15788:	ldrb	r2, [r2]
   1578c:	bl	14ea8 <fprintf@plt>
   15790:	ldr	r1, [sp, #4]
   15794:	ldr	r2, [fp, #-20]	; 0xffffffec
   15798:	add	r1, r1, r2
   1579c:	ldrb	r1, [r1]
   157a0:	cmp	r1, #32
   157a4:	blt	157c0 <test_json@@Base+0x7b8>
   157a8:	ldr	r0, [sp, #4]
   157ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   157b0:	add	r0, r0, r1
   157b4:	ldrb	r0, [r0]
   157b8:	cmp	r0, #126	; 0x7e
   157bc:	ble	157dc <test_json@@Base+0x7d4>
   157c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   157c4:	and	r0, r0, #15
   157c8:	add	r1, sp, #11
   157cc:	add	r0, r1, r0
   157d0:	movw	r1, #46	; 0x2e
   157d4:	strb	r1, [r0]
   157d8:	b	15800 <test_json@@Base+0x7f8>
   157dc:	ldr	r0, [sp, #4]
   157e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   157e4:	add	r0, r0, r1
   157e8:	ldrb	r0, [r0]
   157ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   157f0:	and	r1, r1, #15
   157f4:	add	r2, sp, #11
   157f8:	add	r1, r2, r1
   157fc:	strb	r0, [r1]
   15800:	ldr	r0, [fp, #-20]	; 0xffffffec
   15804:	and	r0, r0, #15
   15808:	add	r0, r0, #1
   1580c:	add	r1, sp, #11
   15810:	add	r0, r1, r0
   15814:	movw	r1, #0
   15818:	strb	r1, [r0]
   1581c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15820:	add	r0, r0, #1
   15824:	str	r0, [fp, #-20]	; 0xffffffec
   15828:	b	156f4 <test_json@@Base+0x6ec>
   1582c:	b	15830 <test_json@@Base+0x828>
   15830:	ldr	r0, [fp, #-20]	; 0xffffffec
   15834:	and	r0, r0, #15
   15838:	cmp	r0, #0
   1583c:	beq	15860 <test_json@@Base+0x858>
   15840:	ldr	r0, [pc, #60]	; 15884 <test_json@@Base+0x87c>
   15844:	add	r1, pc, r0
   15848:	ldr	r0, [fp, #-16]
   1584c:	bl	14ea8 <fprintf@plt>
   15850:	ldr	r1, [fp, #-20]	; 0xffffffec
   15854:	add	r1, r1, #1
   15858:	str	r1, [fp, #-20]	; 0xffffffec
   1585c:	b	15830 <test_json@@Base+0x828>
   15860:	ldr	r0, [pc, #24]	; 15880 <test_json@@Base+0x878>
   15864:	add	r1, pc, r0
   15868:	add	r2, sp, #11
   1586c:	ldr	r0, [fp, #-16]
   15870:	bl	14ea8 <fprintf@plt>
   15874:	mov	sp, fp
   15878:	pop	{fp, pc}
   1587c:	muleq	r3, sp, r8
   15880:	andeq	r3, r3, sl, lsl r7
   15884:	andeq	r3, r3, lr, asr #14
   15888:	andeq	r3, r3, r4, lsr r8
   1588c:	andeq	r3, r3, sl, asr r8
   15890:	andeq	r3, r3, ip, asr #16
   15894:	andeq	r3, r3, r8, lsl r8

00015898 <edge_case_tests@@Base>:
   15898:	push	{fp, lr}
   1589c:	mov	fp, sp
   158a0:	sub	sp, sp, #48	; 0x30
   158a4:	ldr	r0, [pc, #680]	; 15b54 <edge_case_tests@@Base+0x2bc>
   158a8:	add	r1, pc, r0
   158ac:	ldr	r0, [pc, #676]	; 15b58 <edge_case_tests@@Base+0x2c0>
   158b0:	add	r2, pc, r0
   158b4:	ldr	r0, [pc, #672]	; 15b5c <edge_case_tests@@Base+0x2c4>
   158b8:	add	r0, pc, r0
   158bc:	movw	r3, #0
   158c0:	str	r3, [fp, #-4]
   158c4:	str	r0, [fp, #-8]
   158c8:	ldr	r0, [fp, #-8]
   158cc:	str	r3, [fp, #-12]
   158d0:	ldr	ip, [fp, #-12]
   158d4:	str	ip, [sp]
   158d8:	str	ip, [sp, #4]
   158dc:	movw	lr, #158	; 0x9e
   158e0:	str	lr, [sp, #8]
   158e4:	bl	15008 <test_json@@Base>
   158e8:	ldr	r1, [pc, #604]	; 15b4c <edge_case_tests@@Base+0x2b4>
   158ec:	add	r1, pc, r1
   158f0:	ldr	r2, [pc, #600]	; 15b50 <edge_case_tests@@Base+0x2b8>
   158f4:	add	r2, pc, r2
   158f8:	ldr	r3, [fp, #-4]
   158fc:	orr	r0, r3, r0
   15900:	str	r0, [fp, #-4]
   15904:	ldr	r0, [fp, #-8]
   15908:	movw	r3, #0
   1590c:	str	r3, [fp, #-16]
   15910:	movw	ip, #2
   15914:	str	ip, [sp]
   15918:	ldr	ip, [fp, #-16]
   1591c:	str	ip, [sp, #4]
   15920:	movw	lr, #168	; 0xa8
   15924:	str	lr, [sp, #8]
   15928:	bl	15008 <test_json@@Base>
   1592c:	ldr	r1, [pc, #528]	; 15b44 <edge_case_tests@@Base+0x2ac>
   15930:	add	r1, pc, r1
   15934:	ldr	r2, [pc, #524]	; 15b48 <edge_case_tests@@Base+0x2b0>
   15938:	add	r2, pc, r2
   1593c:	ldr	r3, [fp, #-4]
   15940:	orr	r0, r3, r0
   15944:	str	r0, [fp, #-4]
   15948:	ldr	r0, [fp, #-8]
   1594c:	movw	r3, #0
   15950:	str	r3, [fp, #-20]	; 0xffffffec
   15954:	ldr	ip, [fp, #-20]	; 0xffffffec
   15958:	str	ip, [sp]
   1595c:	movw	lr, #2
   15960:	str	lr, [sp, #4]
   15964:	movw	lr, #172	; 0xac
   15968:	str	lr, [sp, #8]
   1596c:	bl	15008 <test_json@@Base>
   15970:	ldr	r1, [pc, #452]	; 15b3c <edge_case_tests@@Base+0x2a4>
   15974:	add	r1, pc, r1
   15978:	ldr	r2, [pc, #448]	; 15b40 <edge_case_tests@@Base+0x2a8>
   1597c:	add	r2, pc, r2
   15980:	ldr	r3, [fp, #-4]
   15984:	orr	r0, r3, r0
   15988:	str	r0, [fp, #-4]
   1598c:	ldr	r0, [fp, #-8]
   15990:	movw	r3, #0
   15994:	movw	ip, #2
   15998:	str	ip, [sp]
   1599c:	movw	ip, #4
   159a0:	str	ip, [sp, #4]
   159a4:	movw	ip, #176	; 0xb0
   159a8:	str	ip, [sp, #8]
   159ac:	bl	15008 <test_json@@Base>
   159b0:	ldr	r1, [pc, #380]	; 15b34 <edge_case_tests@@Base+0x29c>
   159b4:	add	r1, pc, r1
   159b8:	ldr	r2, [pc, #376]	; 15b38 <edge_case_tests@@Base+0x2a0>
   159bc:	add	r2, pc, r2
   159c0:	ldr	r3, [fp, #-4]
   159c4:	orr	r0, r3, r0
   159c8:	str	r0, [fp, #-4]
   159cc:	ldr	r0, [fp, #-8]
   159d0:	movw	r3, #0
   159d4:	str	r3, [sp, #24]
   159d8:	ldr	ip, [sp, #24]
   159dc:	str	ip, [sp]
   159e0:	movw	lr, #8
   159e4:	str	lr, [sp, #4]
   159e8:	movw	lr, #180	; 0xb4
   159ec:	str	lr, [sp, #8]
   159f0:	bl	15008 <test_json@@Base>
   159f4:	ldr	r1, [pc, #304]	; 15b2c <edge_case_tests@@Base+0x294>
   159f8:	add	r1, pc, r1
   159fc:	ldr	r2, [pc, #300]	; 15b30 <edge_case_tests@@Base+0x298>
   15a00:	add	r2, pc, r2
   15a04:	ldr	r3, [fp, #-4]
   15a08:	orr	r0, r3, r0
   15a0c:	str	r0, [fp, #-4]
   15a10:	ldr	r0, [fp, #-8]
   15a14:	movw	r3, #0
   15a18:	str	r3, [sp, #20]
   15a1c:	movw	ip, #2
   15a20:	str	ip, [sp]
   15a24:	ldr	ip, [sp, #20]
   15a28:	str	ip, [sp, #4]
   15a2c:	movw	lr, #195	; 0xc3
   15a30:	str	lr, [sp, #8]
   15a34:	bl	15008 <test_json@@Base>
   15a38:	ldr	r1, [pc, #228]	; 15b24 <edge_case_tests@@Base+0x28c>
   15a3c:	add	r1, pc, r1
   15a40:	ldr	r2, [pc, #224]	; 15b28 <edge_case_tests@@Base+0x290>
   15a44:	add	r2, pc, r2
   15a48:	ldr	r3, [fp, #-4]
   15a4c:	orr	r0, r3, r0
   15a50:	str	r0, [fp, #-4]
   15a54:	ldr	r0, [fp, #-8]
   15a58:	movw	r3, #0
   15a5c:	str	r3, [sp, #16]
   15a60:	movw	ip, #1
   15a64:	str	ip, [sp]
   15a68:	ldr	ip, [sp, #16]
   15a6c:	str	ip, [sp, #4]
   15a70:	movw	lr, #199	; 0xc7
   15a74:	str	lr, [sp, #8]
   15a78:	bl	15008 <test_json@@Base>
   15a7c:	ldr	r1, [pc, #152]	; 15b1c <edge_case_tests@@Base+0x284>
   15a80:	add	r1, pc, r1
   15a84:	ldr	r2, [pc, #148]	; 15b20 <edge_case_tests@@Base+0x288>
   15a88:	add	r2, pc, r2
   15a8c:	ldr	r3, [fp, #-4]
   15a90:	orr	r0, r3, r0
   15a94:	str	r0, [fp, #-4]
   15a98:	ldr	r0, [fp, #-8]
   15a9c:	movw	r3, #0
   15aa0:	movw	ip, #1
   15aa4:	str	ip, [sp]
   15aa8:	str	ip, [sp, #4]
   15aac:	movw	ip, #203	; 0xcb
   15ab0:	str	ip, [sp, #8]
   15ab4:	bl	15008 <test_json@@Base>
   15ab8:	ldr	r1, [pc, #84]	; 15b14 <edge_case_tests@@Base+0x27c>
   15abc:	add	r1, pc, r1
   15ac0:	ldr	r2, [pc, #80]	; 15b18 <edge_case_tests@@Base+0x280>
   15ac4:	add	r2, pc, r2
   15ac8:	ldr	r3, [fp, #-4]
   15acc:	orr	r0, r3, r0
   15ad0:	str	r0, [fp, #-4]
   15ad4:	ldr	r0, [fp, #-8]
   15ad8:	movw	r3, #0
   15adc:	str	r3, [sp, #12]
   15ae0:	movw	ip, #1
   15ae4:	str	ip, [sp]
   15ae8:	ldr	ip, [sp, #12]
   15aec:	str	ip, [sp, #4]
   15af0:	movw	lr, #209	; 0xd1
   15af4:	str	lr, [sp, #8]
   15af8:	bl	15008 <test_json@@Base>
   15afc:	ldr	r1, [fp, #-4]
   15b00:	orr	r0, r1, r0
   15b04:	str	r0, [fp, #-4]
   15b08:	ldr	r0, [fp, #-4]
   15b0c:	mov	sp, fp
   15b10:	pop	{fp, pc}
   15b14:	andeq	r0, r3, r4, ror sp
   15b18:	andeq	r0, r3, sl, lsr sp
   15b1c:	andeq	r0, r3, ip, asr #26
   15b20:	muleq	r3, r1, sp
   15b24:	muleq	r3, r0, sp
   15b28:			; <UNDEFINED> instruction: 0x00030dba
   15b2c:	andeq	r0, r3, lr, lsr #27
   15b30:	strdeq	r0, [r3], -r9
   15b34:			; <UNDEFINED> instruction: 0x00030cbe
   15b38:	ldrdeq	r0, [r3], -r8
   15b3c:	andeq	r0, r3, r4, ror #24
   15b40:	andeq	r0, r3, r3, ror #25
   15b44:	andeq	r0, r3, fp, ror #25
   15b48:	andeq	r0, r3, sl, lsl #26
   15b4c:	andeq	r0, r3, ip, ror #25
   15b50:	andeq	r0, r3, r5, lsl #26
   15b54:	ldrdeq	r0, [r3], -sp
   15b58:	andeq	r0, r3, sl, lsl #26
   15b5c:	andeq	r7, r4, r0, lsr #12

00015b60 <error_case_tests@@Base>:
   15b60:	push	{fp, lr}
   15b64:	mov	fp, sp
   15b68:	sub	sp, sp, #72	; 0x48
   15b6c:	ldr	r0, [pc, #784]	; 15e84 <error_case_tests@@Base+0x324>
   15b70:	add	r1, pc, r0
   15b74:	ldr	r0, [pc, #780]	; 15e88 <error_case_tests@@Base+0x328>
   15b78:	add	r0, pc, r0
   15b7c:	movw	r2, #0
   15b80:	str	r2, [fp, #-4]
   15b84:	str	r0, [fp, #-8]
   15b88:	ldr	r0, [fp, #-8]
   15b8c:	str	r2, [fp, #-12]
   15b90:	movw	r3, #13
   15b94:	ldr	ip, [fp, #-12]
   15b98:	str	ip, [sp]
   15b9c:	str	ip, [sp, #4]
   15ba0:	movw	lr, #285	; 0x11d
   15ba4:	str	lr, [sp, #8]
   15ba8:	bl	15008 <test_json@@Base>
   15bac:	ldr	r1, [pc, #716]	; 15e80 <error_case_tests@@Base+0x320>
   15bb0:	add	r1, pc, r1
   15bb4:	ldr	r2, [fp, #-4]
   15bb8:	orr	r0, r2, r0
   15bbc:	str	r0, [fp, #-4]
   15bc0:	ldr	r0, [fp, #-8]
   15bc4:	movw	r2, #0
   15bc8:	str	r2, [fp, #-16]
   15bcc:	movw	r3, #13
   15bd0:	ldr	ip, [fp, #-16]
   15bd4:	str	ip, [sp]
   15bd8:	str	ip, [sp, #4]
   15bdc:	movw	lr, #287	; 0x11f
   15be0:	str	lr, [sp, #8]
   15be4:	bl	15008 <test_json@@Base>
   15be8:	ldr	r1, [pc, #652]	; 15e7c <error_case_tests@@Base+0x31c>
   15bec:	add	r1, pc, r1
   15bf0:	ldr	r2, [fp, #-4]
   15bf4:	orr	r0, r2, r0
   15bf8:	str	r0, [fp, #-4]
   15bfc:	ldr	r0, [fp, #-8]
   15c00:	movw	r2, #0
   15c04:	str	r2, [fp, #-20]	; 0xffffffec
   15c08:	movw	r3, #13
   15c0c:	ldr	ip, [fp, #-20]	; 0xffffffec
   15c10:	str	ip, [sp]
   15c14:	str	ip, [sp, #4]
   15c18:	movw	lr, #289	; 0x121
   15c1c:	str	lr, [sp, #8]
   15c20:	bl	15008 <test_json@@Base>
   15c24:	ldr	r1, [pc, #588]	; 15e78 <error_case_tests@@Base+0x318>
   15c28:	add	r1, pc, r1
   15c2c:	ldr	r2, [fp, #-4]
   15c30:	orr	r0, r2, r0
   15c34:	str	r0, [fp, #-4]
   15c38:	ldr	r0, [fp, #-8]
   15c3c:	movw	r2, #0
   15c40:	str	r2, [fp, #-24]	; 0xffffffe8
   15c44:	movw	r3, #13
   15c48:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15c4c:	str	ip, [sp]
   15c50:	str	ip, [sp, #4]
   15c54:	movw	lr, #291	; 0x123
   15c58:	str	lr, [sp, #8]
   15c5c:	bl	15008 <test_json@@Base>
   15c60:	ldr	r1, [pc, #524]	; 15e74 <error_case_tests@@Base+0x314>
   15c64:	add	r1, pc, r1
   15c68:	ldr	r2, [fp, #-4]
   15c6c:	orr	r0, r2, r0
   15c70:	str	r0, [fp, #-4]
   15c74:	ldr	r0, [fp, #-8]
   15c78:	movw	r2, #0
   15c7c:	str	r2, [fp, #-28]	; 0xffffffe4
   15c80:	movw	r3, #13
   15c84:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15c88:	str	ip, [sp]
   15c8c:	str	ip, [sp, #4]
   15c90:	movw	lr, #293	; 0x125
   15c94:	str	lr, [sp, #8]
   15c98:	bl	15008 <test_json@@Base>
   15c9c:	ldr	r1, [pc, #460]	; 15e70 <error_case_tests@@Base+0x310>
   15ca0:	add	r1, pc, r1
   15ca4:	ldr	r2, [fp, #-4]
   15ca8:	orr	r0, r2, r0
   15cac:	str	r0, [fp, #-4]
   15cb0:	ldr	r0, [fp, #-8]
   15cb4:	movw	r2, #0
   15cb8:	str	r2, [fp, #-32]	; 0xffffffe0
   15cbc:	movw	r3, #13
   15cc0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15cc4:	str	ip, [sp]
   15cc8:	str	ip, [sp, #4]
   15ccc:	movw	lr, #296	; 0x128
   15cd0:	str	lr, [sp, #8]
   15cd4:	bl	15008 <test_json@@Base>
   15cd8:	ldr	r1, [pc, #396]	; 15e6c <error_case_tests@@Base+0x30c>
   15cdc:	add	r1, pc, r1
   15ce0:	ldr	r2, [fp, #-4]
   15ce4:	orr	r0, r2, r0
   15ce8:	str	r0, [fp, #-4]
   15cec:	ldr	r0, [fp, #-8]
   15cf0:	movw	r2, #0
   15cf4:	str	r2, [sp, #36]	; 0x24
   15cf8:	movw	r3, #13
   15cfc:	ldr	ip, [sp, #36]	; 0x24
   15d00:	str	ip, [sp]
   15d04:	str	ip, [sp, #4]
   15d08:	movw	lr, #299	; 0x12b
   15d0c:	str	lr, [sp, #8]
   15d10:	bl	15008 <test_json@@Base>
   15d14:	ldr	r1, [pc, #332]	; 15e68 <error_case_tests@@Base+0x308>
   15d18:	add	r1, pc, r1
   15d1c:	ldr	r2, [fp, #-4]
   15d20:	orr	r0, r2, r0
   15d24:	str	r0, [fp, #-4]
   15d28:	ldr	r0, [fp, #-8]
   15d2c:	movw	r2, #0
   15d30:	str	r2, [sp, #32]
   15d34:	movw	r3, #13
   15d38:	ldr	ip, [sp, #32]
   15d3c:	str	ip, [sp]
   15d40:	str	ip, [sp, #4]
   15d44:	movw	lr, #303	; 0x12f
   15d48:	str	lr, [sp, #8]
   15d4c:	bl	15008 <test_json@@Base>
   15d50:	ldr	r1, [pc, #268]	; 15e64 <error_case_tests@@Base+0x304>
   15d54:	add	r1, pc, r1
   15d58:	ldr	r2, [fp, #-4]
   15d5c:	orr	r0, r2, r0
   15d60:	str	r0, [fp, #-4]
   15d64:	ldr	r0, [fp, #-8]
   15d68:	movw	r2, #0
   15d6c:	str	r2, [sp, #28]
   15d70:	movw	r3, #13
   15d74:	ldr	ip, [sp, #28]
   15d78:	str	ip, [sp]
   15d7c:	str	ip, [sp, #4]
   15d80:	movw	lr, #307	; 0x133
   15d84:	str	lr, [sp, #8]
   15d88:	bl	15008 <test_json@@Base>
   15d8c:	ldr	r1, [pc, #204]	; 15e60 <error_case_tests@@Base+0x300>
   15d90:	add	r1, pc, r1
   15d94:	ldr	r2, [fp, #-4]
   15d98:	orr	r0, r2, r0
   15d9c:	str	r0, [fp, #-4]
   15da0:	ldr	r0, [fp, #-8]
   15da4:	movw	r2, #0
   15da8:	str	r2, [sp, #24]
   15dac:	movw	r3, #5
   15db0:	ldr	ip, [sp, #24]
   15db4:	str	ip, [sp]
   15db8:	str	ip, [sp, #4]
   15dbc:	movw	lr, #311	; 0x137
   15dc0:	str	lr, [sp, #8]
   15dc4:	bl	15008 <test_json@@Base>
   15dc8:	ldr	r1, [pc, #140]	; 15e5c <error_case_tests@@Base+0x2fc>
   15dcc:	add	r1, pc, r1
   15dd0:	ldr	r2, [fp, #-4]
   15dd4:	orr	r0, r2, r0
   15dd8:	str	r0, [fp, #-4]
   15ddc:	ldr	r0, [fp, #-8]
   15de0:	movw	r2, #0
   15de4:	str	r2, [sp, #20]
   15de8:	movw	r3, #5
   15dec:	ldr	ip, [sp, #20]
   15df0:	str	ip, [sp]
   15df4:	str	ip, [sp, #4]
   15df8:	movw	lr, #314	; 0x13a
   15dfc:	str	lr, [sp, #8]
   15e00:	bl	15008 <test_json@@Base>
   15e04:	ldr	r1, [pc, #76]	; 15e58 <error_case_tests@@Base+0x2f8>
   15e08:	add	r1, pc, r1
   15e0c:	ldr	r2, [fp, #-4]
   15e10:	orr	r0, r2, r0
   15e14:	str	r0, [fp, #-4]
   15e18:	ldr	r0, [fp, #-8]
   15e1c:	movw	r2, #0
   15e20:	str	r2, [sp, #16]
   15e24:	movw	r3, #5
   15e28:	ldr	ip, [sp, #16]
   15e2c:	str	ip, [sp]
   15e30:	str	ip, [sp, #4]
   15e34:	movw	lr, #317	; 0x13d
   15e38:	str	lr, [sp, #8]
   15e3c:	bl	15008 <test_json@@Base>
   15e40:	ldr	r1, [fp, #-4]
   15e44:	orr	r0, r1, r0
   15e48:	str	r0, [fp, #-4]
   15e4c:	ldr	r0, [fp, #-4]
   15e50:	mov	sp, fp
   15e54:	pop	{fp, pc}
   15e58:	andeq	r0, r3, r4, lsr #30
   15e5c:	andeq	r0, r3, sl, lsr pc
   15e60:	andeq	r0, r3, lr, asr pc
   15e64:	ldrdeq	r0, [r3], -r3
   15e68:	andeq	r0, r3, r8, asr #28
   15e6c:	andeq	r0, r3, r9, ror #27
   15e70:	andeq	r0, r3, r7, lsl #27
   15e74:	andeq	r0, r3, lr, ror #26
   15e78:	andeq	r0, r3, r2, asr sp
   15e7c:	andeq	r0, r3, r0, lsr sp
   15e80:	andeq	r0, r3, fp, lsl #26
   15e84:	andeq	r0, r3, r1, lsr sp
   15e88:	andeq	r7, r4, r0, ror #6

00015e8c <base64_tests@@Base>:
   15e8c:	push	{fp, lr}
   15e90:	mov	fp, sp
   15e94:	sub	sp, sp, #56	; 0x38
   15e98:	ldr	r0, [pc, #572]	; 160dc <base64_tests@@Base+0x250>
   15e9c:	add	r1, pc, r0
   15ea0:	ldr	r0, [pc, #568]	; 160e0 <base64_tests@@Base+0x254>
   15ea4:	add	r2, pc, r0
   15ea8:	ldr	r0, [pc, #564]	; 160e4 <base64_tests@@Base+0x258>
   15eac:	add	r0, pc, r0
   15eb0:	movw	r3, #0
   15eb4:	str	r3, [fp, #-4]
   15eb8:	str	r0, [fp, #-8]
   15ebc:	ldr	r0, [fp, #-8]
   15ec0:	str	r3, [fp, #-12]
   15ec4:	ldr	ip, [fp, #-12]
   15ec8:	str	ip, [sp]
   15ecc:	str	ip, [sp, #4]
   15ed0:	movw	lr, #369	; 0x171
   15ed4:	str	lr, [sp, #8]
   15ed8:	bl	15008 <test_json@@Base>
   15edc:	ldr	r1, [pc, #496]	; 160d4 <base64_tests@@Base+0x248>
   15ee0:	add	r1, pc, r1
   15ee4:	ldr	r2, [pc, #492]	; 160d8 <base64_tests@@Base+0x24c>
   15ee8:	add	r2, pc, r2
   15eec:	ldr	r3, [fp, #-4]
   15ef0:	orr	r0, r3, r0
   15ef4:	str	r0, [fp, #-4]
   15ef8:	ldr	r0, [fp, #-8]
   15efc:	movw	r3, #0
   15f00:	str	r3, [fp, #-16]
   15f04:	ldr	ip, [fp, #-16]
   15f08:	str	ip, [sp]
   15f0c:	str	ip, [sp, #4]
   15f10:	movw	lr, #372	; 0x174
   15f14:	str	lr, [sp, #8]
   15f18:	bl	15008 <test_json@@Base>
   15f1c:	ldr	r1, [pc, #424]	; 160cc <base64_tests@@Base+0x240>
   15f20:	add	r1, pc, r1
   15f24:	ldr	r2, [pc, #420]	; 160d0 <base64_tests@@Base+0x244>
   15f28:	add	r2, pc, r2
   15f2c:	ldr	r3, [fp, #-4]
   15f30:	orr	r0, r3, r0
   15f34:	str	r0, [fp, #-4]
   15f38:	ldr	r0, [fp, #-8]
   15f3c:	movw	r3, #0
   15f40:	str	r3, [fp, #-20]	; 0xffffffec
   15f44:	ldr	ip, [fp, #-20]	; 0xffffffec
   15f48:	str	ip, [sp]
   15f4c:	str	ip, [sp, #4]
   15f50:	movw	lr, #376	; 0x178
   15f54:	str	lr, [sp, #8]
   15f58:	bl	15008 <test_json@@Base>
   15f5c:	ldr	r1, [pc, #352]	; 160c4 <base64_tests@@Base+0x238>
   15f60:	add	r1, pc, r1
   15f64:	ldr	r2, [pc, #348]	; 160c8 <base64_tests@@Base+0x23c>
   15f68:	add	r2, pc, r2
   15f6c:	ldr	r3, [fp, #-4]
   15f70:	orr	r0, r3, r0
   15f74:	str	r0, [fp, #-4]
   15f78:	ldr	r0, [fp, #-8]
   15f7c:	movw	r3, #0
   15f80:	str	r3, [fp, #-24]	; 0xffffffe8
   15f84:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15f88:	str	ip, [sp]
   15f8c:	str	ip, [sp, #4]
   15f90:	movw	lr, #379	; 0x17b
   15f94:	str	lr, [sp, #8]
   15f98:	bl	15008 <test_json@@Base>
   15f9c:	ldr	r1, [pc, #280]	; 160bc <base64_tests@@Base+0x230>
   15fa0:	add	r1, pc, r1
   15fa4:	ldr	r2, [pc, #276]	; 160c0 <base64_tests@@Base+0x234>
   15fa8:	add	r2, pc, r2
   15fac:	ldr	r3, [fp, #-4]
   15fb0:	orr	r0, r3, r0
   15fb4:	str	r0, [fp, #-4]
   15fb8:	ldr	r0, [fp, #-8]
   15fbc:	movw	r3, #0
   15fc0:	str	r3, [sp, #28]
   15fc4:	ldr	ip, [sp, #28]
   15fc8:	str	ip, [sp]
   15fcc:	str	ip, [sp, #4]
   15fd0:	movw	lr, #382	; 0x17e
   15fd4:	str	lr, [sp, #8]
   15fd8:	bl	15008 <test_json@@Base>
   15fdc:	ldr	r1, [pc, #208]	; 160b4 <base64_tests@@Base+0x228>
   15fe0:	add	r1, pc, r1
   15fe4:	ldr	r2, [pc, #204]	; 160b8 <base64_tests@@Base+0x22c>
   15fe8:	add	r2, pc, r2
   15fec:	ldr	r3, [fp, #-4]
   15ff0:	orr	r0, r3, r0
   15ff4:	str	r0, [fp, #-4]
   15ff8:	ldr	r0, [fp, #-8]
   15ffc:	movw	r3, #0
   16000:	str	r3, [sp, #24]
   16004:	ldr	ip, [sp, #24]
   16008:	str	ip, [sp]
   1600c:	str	ip, [sp, #4]
   16010:	movw	lr, #385	; 0x181
   16014:	str	lr, [sp, #8]
   16018:	bl	15008 <test_json@@Base>
   1601c:	ldr	r1, [pc, #140]	; 160b0 <base64_tests@@Base+0x224>
   16020:	add	r1, pc, r1
   16024:	ldr	r2, [fp, #-4]
   16028:	orr	r0, r2, r0
   1602c:	str	r0, [fp, #-4]
   16030:	ldr	r0, [fp, #-8]
   16034:	movw	r2, #0
   16038:	str	r2, [sp, #20]
   1603c:	movw	r3, #31
   16040:	ldr	ip, [sp, #20]
   16044:	str	ip, [sp]
   16048:	str	ip, [sp, #4]
   1604c:	movw	lr, #388	; 0x184
   16050:	str	lr, [sp, #8]
   16054:	bl	15008 <test_json@@Base>
   16058:	ldr	r1, [pc, #76]	; 160ac <base64_tests@@Base+0x220>
   1605c:	add	r1, pc, r1
   16060:	ldr	r2, [fp, #-4]
   16064:	orr	r0, r2, r0
   16068:	str	r0, [fp, #-4]
   1606c:	ldr	r0, [fp, #-8]
   16070:	movw	r2, #0
   16074:	str	r2, [sp, #16]
   16078:	movw	r3, #32
   1607c:	ldr	ip, [sp, #16]
   16080:	str	ip, [sp]
   16084:	str	ip, [sp, #4]
   16088:	movw	lr, #391	; 0x187
   1608c:	str	lr, [sp, #8]
   16090:	bl	15008 <test_json@@Base>
   16094:	ldr	r1, [fp, #-4]
   16098:	orr	r0, r1, r0
   1609c:	str	r0, [fp, #-4]
   160a0:	ldr	r0, [fp, #-4]
   160a4:	mov	sp, fp
   160a8:	pop	{fp, pc}
   160ac:	andeq	r1, r3, r2, ror r2
   160b0:	strdeq	r1, [r3], -r5
   160b4:	andeq	r1, r3, fp, ror r1
   160b8:	andeq	r1, r3, r5
   160bc:	andeq	r1, r3, r4, lsl #2
   160c0:	ldrdeq	r0, [r3], -r5
   160c4:	ldrdeq	r0, [r3], -r1
   160c8:	andeq	r1, r3, r5, lsl #1
   160cc:	andeq	r0, r3, r4, lsr #29
   160d0:	andeq	r0, r3, r5, asr pc
   160d4:	muleq	r3, sl, lr
   160d8:			; <UNDEFINED> instruction: 0x00030eb9
   160dc:	andeq	r0, r3, r8, asr #29
   160e0:			; <UNDEFINED> instruction: 0x000307bb
   160e4:	andeq	r7, r4, ip, lsr #32

000160e8 <mixed_type_union_tests@@Base>:
   160e8:	push	{fp, lr}
   160ec:	mov	fp, sp
   160f0:	sub	sp, sp, #48	; 0x30
   160f4:	ldr	r0, [pc, #516]	; 16300 <mixed_type_union_tests@@Base+0x218>
   160f8:	add	r1, pc, r0
   160fc:	ldr	r0, [pc, #512]	; 16304 <mixed_type_union_tests@@Base+0x21c>
   16100:	add	r2, pc, r0
   16104:	ldr	r0, [pc, #508]	; 16308 <mixed_type_union_tests@@Base+0x220>
   16108:	add	r0, pc, r0
   1610c:	movw	r3, #0
   16110:	str	r3, [fp, #-4]
   16114:	str	r0, [fp, #-8]
   16118:	ldr	r0, [fp, #-8]
   1611c:	str	r3, [fp, #-12]
   16120:	ldr	ip, [fp, #-12]
   16124:	str	ip, [sp]
   16128:	str	ip, [sp, #4]
   1612c:	movw	lr, #432	; 0x1b0
   16130:	str	lr, [sp, #8]
   16134:	bl	15008 <test_json@@Base>
   16138:	ldr	r1, [pc, #440]	; 162f8 <mixed_type_union_tests@@Base+0x210>
   1613c:	add	r1, pc, r1
   16140:	ldr	r2, [pc, #436]	; 162fc <mixed_type_union_tests@@Base+0x214>
   16144:	add	r2, pc, r2
   16148:	ldr	r3, [fp, #-4]
   1614c:	orr	r0, r3, r0
   16150:	str	r0, [fp, #-4]
   16154:	ldr	r0, [fp, #-8]
   16158:	movw	r3, #0
   1615c:	str	r3, [fp, #-16]
   16160:	ldr	ip, [fp, #-16]
   16164:	str	ip, [sp]
   16168:	str	ip, [sp, #4]
   1616c:	movw	lr, #437	; 0x1b5
   16170:	str	lr, [sp, #8]
   16174:	bl	15008 <test_json@@Base>
   16178:	ldr	r1, [pc, #368]	; 162f0 <mixed_type_union_tests@@Base+0x208>
   1617c:	add	r1, pc, r1
   16180:	ldr	r2, [pc, #364]	; 162f4 <mixed_type_union_tests@@Base+0x20c>
   16184:	add	r2, pc, r2
   16188:	ldr	r3, [fp, #-4]
   1618c:	orr	r0, r3, r0
   16190:	str	r0, [fp, #-4]
   16194:	ldr	r0, [fp, #-8]
   16198:	movw	r3, #0
   1619c:	str	r3, [fp, #-20]	; 0xffffffec
   161a0:	ldr	ip, [fp, #-20]	; 0xffffffec
   161a4:	str	ip, [sp]
   161a8:	str	ip, [sp, #4]
   161ac:	movw	lr, #442	; 0x1ba
   161b0:	str	lr, [sp, #8]
   161b4:	bl	15008 <test_json@@Base>
   161b8:	ldr	r1, [pc, #296]	; 162e8 <mixed_type_union_tests@@Base+0x200>
   161bc:	add	r1, pc, r1
   161c0:	ldr	r2, [pc, #292]	; 162ec <mixed_type_union_tests@@Base+0x204>
   161c4:	add	r2, pc, r2
   161c8:	ldr	r3, [fp, #-4]
   161cc:	orr	r0, r3, r0
   161d0:	str	r0, [fp, #-4]
   161d4:	ldr	r0, [fp, #-8]
   161d8:	movw	r3, #0
   161dc:	str	r3, [sp, #24]
   161e0:	ldr	ip, [sp, #24]
   161e4:	str	ip, [sp]
   161e8:	str	ip, [sp, #4]
   161ec:	movw	lr, #449	; 0x1c1
   161f0:	str	lr, [sp, #8]
   161f4:	bl	15008 <test_json@@Base>
   161f8:	ldr	r1, [pc, #224]	; 162e0 <mixed_type_union_tests@@Base+0x1f8>
   161fc:	add	r1, pc, r1
   16200:	ldr	r2, [pc, #220]	; 162e4 <mixed_type_union_tests@@Base+0x1fc>
   16204:	add	r2, pc, r2
   16208:	ldr	r3, [fp, #-4]
   1620c:	orr	r0, r3, r0
   16210:	str	r0, [fp, #-4]
   16214:	ldr	r0, [fp, #-8]
   16218:	movw	r3, #0
   1621c:	str	r3, [sp, #20]
   16220:	ldr	ip, [sp, #20]
   16224:	str	ip, [sp]
   16228:	str	ip, [sp, #4]
   1622c:	movw	lr, #458	; 0x1ca
   16230:	str	lr, [sp, #8]
   16234:	bl	15008 <test_json@@Base>
   16238:	ldr	r1, [pc, #152]	; 162d8 <mixed_type_union_tests@@Base+0x1f0>
   1623c:	add	r1, pc, r1
   16240:	ldr	r2, [pc, #148]	; 162dc <mixed_type_union_tests@@Base+0x1f4>
   16244:	add	r2, pc, r2
   16248:	ldr	r3, [fp, #-4]
   1624c:	orr	r0, r3, r0
   16250:	str	r0, [fp, #-4]
   16254:	ldr	r0, [fp, #-8]
   16258:	movw	r3, #0
   1625c:	str	r3, [sp, #16]
   16260:	ldr	ip, [sp, #16]
   16264:	str	ip, [sp]
   16268:	str	ip, [sp, #4]
   1626c:	movw	lr, #469	; 0x1d5
   16270:	str	lr, [sp, #8]
   16274:	bl	15008 <test_json@@Base>
   16278:	ldr	r1, [pc, #80]	; 162d0 <mixed_type_union_tests@@Base+0x1e8>
   1627c:	add	r1, pc, r1
   16280:	ldr	r2, [pc, #76]	; 162d4 <mixed_type_union_tests@@Base+0x1ec>
   16284:	add	r2, pc, r2
   16288:	ldr	r3, [fp, #-4]
   1628c:	orr	r0, r3, r0
   16290:	str	r0, [fp, #-4]
   16294:	ldr	r0, [fp, #-8]
   16298:	movw	r3, #0
   1629c:	str	r3, [sp, #12]
   162a0:	ldr	ip, [sp, #12]
   162a4:	str	ip, [sp]
   162a8:	str	ip, [sp, #4]
   162ac:	movw	lr, #474	; 0x1da
   162b0:	str	lr, [sp, #8]
   162b4:	bl	15008 <test_json@@Base>
   162b8:	ldr	r1, [fp, #-4]
   162bc:	orr	r0, r1, r0
   162c0:	str	r0, [fp, #-4]
   162c4:	ldr	r0, [fp, #-4]
   162c8:	mov	sp, fp
   162cc:	pop	{fp, pc}
   162d0:	andeq	r1, r3, r5, ror r9
   162d4:	andeq	r1, r3, pc, lsl r2
   162d8:	andeq	r1, r3, lr, ror #13
   162dc:	andeq	r1, r3, r7, ror #16
   162e0:	andeq	r1, r3, sl, asr #10
   162e4:	andeq	r1, r3, r8, asr #12
   162e8:	strdeq	r1, [r3], -r4
   162ec:	andeq	r1, r3, r9, asr #9
   162f0:	muleq	r3, lr, r3
   162f4:	andeq	r1, r3, pc, lsl r3
   162f8:	andeq	r1, r3, r4, ror #5
   162fc:	andeq	r1, r3, pc, asr r3
   16300:	muleq	r3, r2, r2
   16304:	ldrdeq	r1, [r3], -r9
   16308:	andeq	r6, r4, r0, ror #27

0001630c <union_vector_tests@@Base>:
   1630c:	push	{fp, lr}
   16310:	mov	fp, sp
   16314:	sub	sp, sp, #48	; 0x30
   16318:	ldr	r0, [pc, #444]	; 164dc <union_vector_tests@@Base+0x1d0>
   1631c:	add	r1, pc, r0
   16320:	ldr	r0, [pc, #440]	; 164e0 <union_vector_tests@@Base+0x1d4>
   16324:	add	r2, pc, r0
   16328:	ldr	r0, [pc, #436]	; 164e4 <union_vector_tests@@Base+0x1d8>
   1632c:	add	r0, pc, r0
   16330:	movw	r3, #0
   16334:	str	r3, [fp, #-4]
   16338:	str	r0, [fp, #-8]
   1633c:	ldr	r0, [fp, #-8]
   16340:	str	r3, [fp, #-12]
   16344:	ldr	ip, [fp, #-12]
   16348:	str	ip, [sp]
   1634c:	str	ip, [sp, #4]
   16350:	movw	lr, #485	; 0x1e5
   16354:	str	lr, [sp, #8]
   16358:	bl	15008 <test_json@@Base>
   1635c:	ldr	r1, [pc, #368]	; 164d4 <union_vector_tests@@Base+0x1c8>
   16360:	add	r1, pc, r1
   16364:	ldr	r2, [pc, #364]	; 164d8 <union_vector_tests@@Base+0x1cc>
   16368:	add	r2, pc, r2
   1636c:	ldr	r3, [fp, #-4]
   16370:	orr	r0, r3, r0
   16374:	str	r0, [fp, #-4]
   16378:	ldr	r0, [fp, #-8]
   1637c:	movw	r3, #0
   16380:	str	r3, [fp, #-16]
   16384:	ldr	ip, [fp, #-16]
   16388:	str	ip, [sp]
   1638c:	str	ip, [sp, #4]
   16390:	movw	lr, #488	; 0x1e8
   16394:	str	lr, [sp, #8]
   16398:	bl	15008 <test_json@@Base>
   1639c:	ldr	r1, [pc, #296]	; 164cc <union_vector_tests@@Base+0x1c0>
   163a0:	add	r1, pc, r1
   163a4:	ldr	r2, [pc, #292]	; 164d0 <union_vector_tests@@Base+0x1c4>
   163a8:	add	r2, pc, r2
   163ac:	ldr	r3, [fp, #-4]
   163b0:	orr	r0, r3, r0
   163b4:	str	r0, [fp, #-4]
   163b8:	ldr	r0, [fp, #-8]
   163bc:	movw	r3, #0
   163c0:	str	r3, [fp, #-20]	; 0xffffffec
   163c4:	ldr	ip, [fp, #-20]	; 0xffffffec
   163c8:	str	ip, [sp]
   163cc:	str	ip, [sp, #4]
   163d0:	movw	lr, #491	; 0x1eb
   163d4:	str	lr, [sp, #8]
   163d8:	bl	15008 <test_json@@Base>
   163dc:	ldr	r1, [pc, #224]	; 164c4 <union_vector_tests@@Base+0x1b8>
   163e0:	add	r1, pc, r1
   163e4:	ldr	r2, [pc, #220]	; 164c8 <union_vector_tests@@Base+0x1bc>
   163e8:	add	r2, pc, r2
   163ec:	ldr	r3, [fp, #-4]
   163f0:	orr	r0, r3, r0
   163f4:	str	r0, [fp, #-4]
   163f8:	ldr	r0, [fp, #-8]
   163fc:	movw	r3, #0
   16400:	str	r3, [sp, #24]
   16404:	ldr	ip, [sp, #24]
   16408:	str	ip, [sp]
   1640c:	str	ip, [sp, #4]
   16410:	movw	lr, #494	; 0x1ee
   16414:	str	lr, [sp, #8]
   16418:	bl	15008 <test_json@@Base>
   1641c:	ldr	r1, [pc, #152]	; 164bc <union_vector_tests@@Base+0x1b0>
   16420:	add	r1, pc, r1
   16424:	ldr	r2, [pc, #148]	; 164c0 <union_vector_tests@@Base+0x1b4>
   16428:	add	r2, pc, r2
   1642c:	ldr	r3, [fp, #-4]
   16430:	orr	r0, r3, r0
   16434:	str	r0, [fp, #-4]
   16438:	ldr	r0, [fp, #-8]
   1643c:	movw	r3, #0
   16440:	str	r3, [sp, #20]
   16444:	ldr	ip, [sp, #20]
   16448:	str	ip, [sp]
   1644c:	str	ip, [sp, #4]
   16450:	movw	lr, #497	; 0x1f1
   16454:	str	lr, [sp, #8]
   16458:	bl	15008 <test_json@@Base>
   1645c:	ldr	r1, [pc, #80]	; 164b4 <union_vector_tests@@Base+0x1a8>
   16460:	add	r1, pc, r1
   16464:	ldr	r2, [pc, #76]	; 164b8 <union_vector_tests@@Base+0x1ac>
   16468:	add	r2, pc, r2
   1646c:	ldr	r3, [fp, #-4]
   16470:	orr	r0, r3, r0
   16474:	str	r0, [fp, #-4]
   16478:	ldr	r0, [fp, #-8]
   1647c:	movw	r3, #0
   16480:	str	r3, [sp, #16]
   16484:	ldr	ip, [sp, #16]
   16488:	str	ip, [sp]
   1648c:	str	ip, [sp, #4]
   16490:	movw	lr, #500	; 0x1f4
   16494:	str	lr, [sp, #8]
   16498:	bl	15008 <test_json@@Base>
   1649c:	ldr	r1, [fp, #-4]
   164a0:	orr	r0, r1, r0
   164a4:	str	r0, [fp, #-4]
   164a8:	ldr	r0, [fp, #-4]
   164ac:	mov	sp, fp
   164b0:	pop	{fp, pc}
   164b4:	andeq	r1, r3, sp, lsr #21
   164b8:	andeq	r1, r3, fp, lsl #22
   164bc:	andeq	r1, r3, lr, lsr #21
   164c0:	muleq	r3, r6, r8
   164c4:	andeq	r1, r3, r5, lsl #20
   164c8:	andeq	r1, r3, sl, ror sl
   164cc:			; <UNDEFINED> instruction: 0x000319b4
   164d0:	strdeq	r1, [r3], -r9
   164d4:	muleq	r3, r6, r9
   164d8:	andeq	r1, r3, r1, asr #19
   164dc:	andeq	r1, r3, r2, ror #18
   164e0:	muleq	r3, sl, r9
   164e4:	andeq	r6, r4, ip, asr #23

000164e8 <main@@Base>:
   164e8:	push	{fp, lr}
   164ec:	mov	fp, sp
   164f0:	sub	sp, sp, #184	; 0xb8
   164f4:	ldr	r0, [pc, #2940]	; 17078 <main@@Base+0xb90>
   164f8:	add	r0, pc, r0
   164fc:	movw	r1, #0
   16500:	str	r1, [fp, #-4]
   16504:	str	r1, [fp, #-8]
   16508:	str	r0, [fp, #-12]
   1650c:	bl	15898 <edge_case_tests@@Base>
   16510:	ldr	r1, [fp, #-8]
   16514:	orr	r0, r1, r0
   16518:	str	r0, [fp, #-8]
   1651c:	bl	15b60 <error_case_tests@@Base>
   16520:	ldr	r1, [fp, #-8]
   16524:	orr	r0, r1, r0
   16528:	str	r0, [fp, #-8]
   1652c:	bl	1630c <union_vector_tests@@Base>
   16530:	ldr	r1, [fp, #-8]
   16534:	orr	r0, r1, r0
   16538:	str	r0, [fp, #-8]
   1653c:	bl	15e8c <base64_tests@@Base>
   16540:	ldr	r1, [fp, #-8]
   16544:	orr	r0, r1, r0
   16548:	str	r0, [fp, #-8]
   1654c:	bl	160e8 <mixed_type_union_tests@@Base>
   16550:	ldr	r1, [pc, #2840]	; 17070 <main@@Base+0xb88>
   16554:	add	r1, pc, r1
   16558:	ldr	r2, [pc, #2836]	; 17074 <main@@Base+0xb8c>
   1655c:	add	r2, pc, r2
   16560:	ldr	r3, [fp, #-8]
   16564:	orr	r0, r3, r0
   16568:	str	r0, [fp, #-8]
   1656c:	ldr	r0, [fp, #-12]
   16570:	movw	r3, #0
   16574:	str	r3, [fp, #-16]
   16578:	ldr	ip, [fp, #-16]
   1657c:	str	ip, [sp]
   16580:	str	ip, [sp, #4]
   16584:	movw	lr, #525	; 0x20d
   16588:	str	lr, [sp, #8]
   1658c:	bl	15008 <test_json@@Base>
   16590:	ldr	r1, [pc, #2768]	; 17068 <main@@Base+0xb80>
   16594:	add	r1, pc, r1
   16598:	ldr	r2, [pc, #2764]	; 1706c <main@@Base+0xb84>
   1659c:	add	r2, pc, r2
   165a0:	ldr	r3, [fp, #-8]
   165a4:	orr	r0, r3, r0
   165a8:	str	r0, [fp, #-8]
   165ac:	ldr	r0, [fp, #-12]
   165b0:	movw	r3, #0
   165b4:	str	r3, [fp, #-20]	; 0xffffffec
   165b8:	ldr	ip, [fp, #-20]	; 0xffffffec
   165bc:	str	ip, [sp]
   165c0:	str	ip, [sp, #4]
   165c4:	movw	lr, #528	; 0x210
   165c8:	str	lr, [sp, #8]
   165cc:	bl	15008 <test_json@@Base>
   165d0:	ldr	r1, [pc, #2696]	; 17060 <main@@Base+0xb78>
   165d4:	add	r1, pc, r1
   165d8:	ldr	r2, [pc, #2692]	; 17064 <main@@Base+0xb7c>
   165dc:	add	r2, pc, r2
   165e0:	ldr	r3, [fp, #-8]
   165e4:	orr	r0, r3, r0
   165e8:	str	r0, [fp, #-8]
   165ec:	ldr	r0, [fp, #-12]
   165f0:	movw	r3, #0
   165f4:	str	r3, [fp, #-24]	; 0xffffffe8
   165f8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   165fc:	str	ip, [sp]
   16600:	str	ip, [sp, #4]
   16604:	movw	lr, #531	; 0x213
   16608:	str	lr, [sp, #8]
   1660c:	bl	15008 <test_json@@Base>
   16610:	ldr	r1, [pc, #2624]	; 17058 <main@@Base+0xb70>
   16614:	add	r1, pc, r1
   16618:	ldr	r2, [pc, #2620]	; 1705c <main@@Base+0xb74>
   1661c:	add	r2, pc, r2
   16620:	ldr	r3, [fp, #-8]
   16624:	orr	r0, r3, r0
   16628:	str	r0, [fp, #-8]
   1662c:	ldr	r0, [fp, #-12]
   16630:	movw	r3, #0
   16634:	str	r3, [fp, #-28]	; 0xffffffe4
   16638:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1663c:	str	ip, [sp]
   16640:	str	ip, [sp, #4]
   16644:	movw	lr, #534	; 0x216
   16648:	str	lr, [sp, #8]
   1664c:	bl	15008 <test_json@@Base>
   16650:	ldr	r1, [pc, #2552]	; 17050 <main@@Base+0xb68>
   16654:	add	r1, pc, r1
   16658:	ldr	r2, [pc, #2548]	; 17054 <main@@Base+0xb6c>
   1665c:	add	r2, pc, r2
   16660:	ldr	r3, [fp, #-8]
   16664:	orr	r0, r3, r0
   16668:	str	r0, [fp, #-8]
   1666c:	ldr	r0, [fp, #-12]
   16670:	movw	r3, #0
   16674:	str	r3, [fp, #-32]	; 0xffffffe0
   16678:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1667c:	str	ip, [sp]
   16680:	str	ip, [sp, #4]
   16684:	movw	lr, #537	; 0x219
   16688:	str	lr, [sp, #8]
   1668c:	bl	15008 <test_json@@Base>
   16690:	ldr	r1, [pc, #2480]	; 17048 <main@@Base+0xb60>
   16694:	add	r1, pc, r1
   16698:	ldr	r2, [pc, #2476]	; 1704c <main@@Base+0xb64>
   1669c:	add	r2, pc, r2
   166a0:	ldr	r3, [fp, #-8]
   166a4:	orr	r0, r3, r0
   166a8:	str	r0, [fp, #-8]
   166ac:	ldr	r0, [fp, #-12]
   166b0:	movw	r3, #0
   166b4:	str	r3, [fp, #-36]	; 0xffffffdc
   166b8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   166bc:	str	ip, [sp]
   166c0:	str	ip, [sp, #4]
   166c4:	movw	lr, #540	; 0x21c
   166c8:	str	lr, [sp, #8]
   166cc:	bl	15008 <test_json@@Base>
   166d0:	ldr	r1, [pc, #2408]	; 17040 <main@@Base+0xb58>
   166d4:	add	r1, pc, r1
   166d8:	ldr	r2, [pc, #2404]	; 17044 <main@@Base+0xb5c>
   166dc:	add	r2, pc, r2
   166e0:	ldr	r3, [fp, #-8]
   166e4:	orr	r0, r3, r0
   166e8:	str	r0, [fp, #-8]
   166ec:	ldr	r0, [fp, #-12]
   166f0:	movw	r3, #0
   166f4:	str	r3, [fp, #-40]	; 0xffffffd8
   166f8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   166fc:	str	ip, [sp]
   16700:	str	ip, [sp, #4]
   16704:	movw	lr, #543	; 0x21f
   16708:	str	lr, [sp, #8]
   1670c:	bl	15008 <test_json@@Base>
   16710:	ldr	r1, [pc, #2336]	; 17038 <main@@Base+0xb50>
   16714:	add	r1, pc, r1
   16718:	ldr	r2, [pc, #2332]	; 1703c <main@@Base+0xb54>
   1671c:	add	r2, pc, r2
   16720:	ldr	r3, [fp, #-8]
   16724:	orr	r0, r3, r0
   16728:	str	r0, [fp, #-8]
   1672c:	ldr	r0, [fp, #-12]
   16730:	movw	r3, #0
   16734:	str	r3, [fp, #-44]	; 0xffffffd4
   16738:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1673c:	str	ip, [sp]
   16740:	str	ip, [sp, #4]
   16744:	movw	lr, #547	; 0x223
   16748:	str	lr, [sp, #8]
   1674c:	bl	15008 <test_json@@Base>
   16750:	ldr	r1, [pc, #2264]	; 17030 <main@@Base+0xb48>
   16754:	add	r1, pc, r1
   16758:	ldr	r2, [pc, #2260]	; 17034 <main@@Base+0xb4c>
   1675c:	add	r2, pc, r2
   16760:	ldr	r3, [fp, #-8]
   16764:	orr	r0, r3, r0
   16768:	str	r0, [fp, #-8]
   1676c:	ldr	r0, [fp, #-12]
   16770:	movw	r3, #0
   16774:	str	r3, [fp, #-48]	; 0xffffffd0
   16778:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1677c:	str	ip, [sp]
   16780:	str	ip, [sp, #4]
   16784:	movw	lr, #551	; 0x227
   16788:	str	lr, [sp, #8]
   1678c:	bl	15008 <test_json@@Base>
   16790:	ldr	r1, [pc, #2192]	; 17028 <main@@Base+0xb40>
   16794:	add	r1, pc, r1
   16798:	ldr	r2, [pc, #2188]	; 1702c <main@@Base+0xb44>
   1679c:	add	r2, pc, r2
   167a0:	ldr	r3, [fp, #-8]
   167a4:	orr	r0, r3, r0
   167a8:	str	r0, [fp, #-8]
   167ac:	ldr	r0, [fp, #-12]
   167b0:	movw	r3, #0
   167b4:	str	r3, [fp, #-52]	; 0xffffffcc
   167b8:	ldr	ip, [fp, #-52]	; 0xffffffcc
   167bc:	str	ip, [sp]
   167c0:	str	ip, [sp, #4]
   167c4:	movw	lr, #601	; 0x259
   167c8:	str	lr, [sp, #8]
   167cc:	bl	15008 <test_json@@Base>
   167d0:	ldr	r1, [pc, #2120]	; 17020 <main@@Base+0xb38>
   167d4:	add	r1, pc, r1
   167d8:	ldr	r2, [pc, #2116]	; 17024 <main@@Base+0xb3c>
   167dc:	add	r2, pc, r2
   167e0:	ldr	r3, [fp, #-8]
   167e4:	orr	r0, r3, r0
   167e8:	str	r0, [fp, #-8]
   167ec:	ldr	r0, [fp, #-12]
   167f0:	movw	r3, #0
   167f4:	str	r3, [fp, #-56]	; 0xffffffc8
   167f8:	ldr	ip, [fp, #-56]	; 0xffffffc8
   167fc:	str	ip, [sp]
   16800:	str	ip, [sp, #4]
   16804:	movw	lr, #604	; 0x25c
   16808:	str	lr, [sp, #8]
   1680c:	bl	15008 <test_json@@Base>
   16810:	ldr	r1, [pc, #2048]	; 17018 <main@@Base+0xb30>
   16814:	add	r1, pc, r1
   16818:	ldr	r2, [pc, #2044]	; 1701c <main@@Base+0xb34>
   1681c:	add	r2, pc, r2
   16820:	ldr	r3, [fp, #-8]
   16824:	orr	r0, r3, r0
   16828:	str	r0, [fp, #-8]
   1682c:	ldr	r0, [fp, #-12]
   16830:	movw	r3, #0
   16834:	str	r3, [fp, #-60]	; 0xffffffc4
   16838:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1683c:	str	ip, [sp]
   16840:	str	ip, [sp, #4]
   16844:	movw	lr, #607	; 0x25f
   16848:	str	lr, [sp, #8]
   1684c:	bl	15008 <test_json@@Base>
   16850:	ldr	r1, [pc, #1976]	; 17010 <main@@Base+0xb28>
   16854:	add	r1, pc, r1
   16858:	ldr	r2, [pc, #1972]	; 17014 <main@@Base+0xb2c>
   1685c:	add	r2, pc, r2
   16860:	ldr	r3, [fp, #-8]
   16864:	orr	r0, r3, r0
   16868:	str	r0, [fp, #-8]
   1686c:	ldr	r0, [fp, #-12]
   16870:	movw	r3, #0
   16874:	str	r3, [fp, #-64]	; 0xffffffc0
   16878:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1687c:	str	ip, [sp]
   16880:	str	ip, [sp, #4]
   16884:	movw	lr, #610	; 0x262
   16888:	str	lr, [sp, #8]
   1688c:	bl	15008 <test_json@@Base>
   16890:	ldr	r1, [pc, #1904]	; 17008 <main@@Base+0xb20>
   16894:	add	r1, pc, r1
   16898:	ldr	r2, [pc, #1900]	; 1700c <main@@Base+0xb24>
   1689c:	add	r2, pc, r2
   168a0:	ldr	r3, [fp, #-8]
   168a4:	orr	r0, r3, r0
   168a8:	str	r0, [fp, #-8]
   168ac:	ldr	r0, [fp, #-12]
   168b0:	movw	r3, #0
   168b4:	str	r3, [fp, #-68]	; 0xffffffbc
   168b8:	ldr	ip, [fp, #-68]	; 0xffffffbc
   168bc:	str	ip, [sp]
   168c0:	str	ip, [sp, #4]
   168c4:	movw	lr, #613	; 0x265
   168c8:	str	lr, [sp, #8]
   168cc:	bl	15008 <test_json@@Base>
   168d0:	ldr	r1, [pc, #1832]	; 17000 <main@@Base+0xb18>
   168d4:	add	r1, pc, r1
   168d8:	ldr	r2, [pc, #1828]	; 17004 <main@@Base+0xb1c>
   168dc:	add	r2, pc, r2
   168e0:	ldr	r3, [fp, #-8]
   168e4:	orr	r0, r3, r0
   168e8:	str	r0, [fp, #-8]
   168ec:	ldr	r0, [fp, #-12]
   168f0:	movw	r3, #0
   168f4:	str	r3, [fp, #-72]	; 0xffffffb8
   168f8:	ldr	ip, [fp, #-72]	; 0xffffffb8
   168fc:	str	ip, [sp]
   16900:	str	ip, [sp, #4]
   16904:	movw	lr, #616	; 0x268
   16908:	str	lr, [sp, #8]
   1690c:	bl	15008 <test_json@@Base>
   16910:	ldr	r1, [pc, #1760]	; 16ff8 <main@@Base+0xb10>
   16914:	add	r1, pc, r1
   16918:	ldr	r2, [pc, #1756]	; 16ffc <main@@Base+0xb14>
   1691c:	add	r2, pc, r2
   16920:	ldr	r3, [fp, #-8]
   16924:	orr	r0, r3, r0
   16928:	str	r0, [fp, #-8]
   1692c:	ldr	r0, [fp, #-12]
   16930:	movw	r3, #0
   16934:	str	r3, [fp, #-76]	; 0xffffffb4
   16938:	ldr	ip, [fp, #-76]	; 0xffffffb4
   1693c:	str	ip, [sp]
   16940:	str	ip, [sp, #4]
   16944:	movw	lr, #619	; 0x26b
   16948:	str	lr, [sp, #8]
   1694c:	bl	15008 <test_json@@Base>
   16950:	ldr	r1, [pc, #1688]	; 16ff0 <main@@Base+0xb08>
   16954:	add	r1, pc, r1
   16958:	ldr	r2, [pc, #1684]	; 16ff4 <main@@Base+0xb0c>
   1695c:	add	r2, pc, r2
   16960:	ldr	r3, [fp, #-8]
   16964:	orr	r0, r3, r0
   16968:	str	r0, [fp, #-8]
   1696c:	ldr	r0, [fp, #-12]
   16970:	movw	r3, #0
   16974:	str	r3, [fp, #-80]	; 0xffffffb0
   16978:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1697c:	str	ip, [sp]
   16980:	str	ip, [sp, #4]
   16984:	movw	lr, #622	; 0x26e
   16988:	str	lr, [sp, #8]
   1698c:	bl	15008 <test_json@@Base>
   16990:	ldr	r1, [pc, #1616]	; 16fe8 <main@@Base+0xb00>
   16994:	add	r1, pc, r1
   16998:	ldr	r2, [pc, #1612]	; 16fec <main@@Base+0xb04>
   1699c:	add	r2, pc, r2
   169a0:	ldr	r3, [fp, #-8]
   169a4:	orr	r0, r3, r0
   169a8:	str	r0, [fp, #-8]
   169ac:	ldr	r0, [fp, #-12]
   169b0:	movw	r3, #0
   169b4:	str	r3, [fp, #-84]	; 0xffffffac
   169b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   169bc:	str	ip, [sp]
   169c0:	str	ip, [sp, #4]
   169c4:	movw	lr, #625	; 0x271
   169c8:	str	lr, [sp, #8]
   169cc:	bl	15008 <test_json@@Base>
   169d0:	ldr	r1, [pc, #1544]	; 16fe0 <main@@Base+0xaf8>
   169d4:	add	r1, pc, r1
   169d8:	ldr	r2, [pc, #1540]	; 16fe4 <main@@Base+0xafc>
   169dc:	add	r2, pc, r2
   169e0:	ldr	r3, [fp, #-8]
   169e4:	orr	r0, r3, r0
   169e8:	str	r0, [fp, #-8]
   169ec:	ldr	r0, [fp, #-12]
   169f0:	movw	r3, #0
   169f4:	str	r3, [fp, #-88]	; 0xffffffa8
   169f8:	ldr	ip, [fp, #-88]	; 0xffffffa8
   169fc:	str	ip, [sp]
   16a00:	str	ip, [sp, #4]
   16a04:	movw	lr, #628	; 0x274
   16a08:	str	lr, [sp, #8]
   16a0c:	bl	15008 <test_json@@Base>
   16a10:	ldr	r1, [pc, #1472]	; 16fd8 <main@@Base+0xaf0>
   16a14:	add	r1, pc, r1
   16a18:	ldr	r2, [pc, #1468]	; 16fdc <main@@Base+0xaf4>
   16a1c:	add	r2, pc, r2
   16a20:	ldr	r3, [fp, #-8]
   16a24:	orr	r0, r3, r0
   16a28:	str	r0, [fp, #-8]
   16a2c:	ldr	r0, [fp, #-12]
   16a30:	movw	r3, #0
   16a34:	str	r3, [sp, #92]	; 0x5c
   16a38:	ldr	ip, [sp, #92]	; 0x5c
   16a3c:	str	ip, [sp]
   16a40:	str	ip, [sp, #4]
   16a44:	movw	lr, #631	; 0x277
   16a48:	str	lr, [sp, #8]
   16a4c:	bl	15008 <test_json@@Base>
   16a50:	ldr	r1, [pc, #1400]	; 16fd0 <main@@Base+0xae8>
   16a54:	add	r1, pc, r1
   16a58:	ldr	r2, [pc, #1396]	; 16fd4 <main@@Base+0xaec>
   16a5c:	add	r2, pc, r2
   16a60:	ldr	r3, [fp, #-8]
   16a64:	orr	r0, r3, r0
   16a68:	str	r0, [fp, #-8]
   16a6c:	ldr	r0, [fp, #-12]
   16a70:	movw	r3, #0
   16a74:	str	r3, [sp, #88]	; 0x58
   16a78:	ldr	ip, [sp, #88]	; 0x58
   16a7c:	str	ip, [sp]
   16a80:	str	ip, [sp, #4]
   16a84:	movw	lr, #634	; 0x27a
   16a88:	str	lr, [sp, #8]
   16a8c:	bl	15008 <test_json@@Base>
   16a90:	ldr	r1, [pc, #1328]	; 16fc8 <main@@Base+0xae0>
   16a94:	add	r1, pc, r1
   16a98:	ldr	r2, [pc, #1324]	; 16fcc <main@@Base+0xae4>
   16a9c:	add	r2, pc, r2
   16aa0:	ldr	r3, [fp, #-8]
   16aa4:	orr	r0, r3, r0
   16aa8:	str	r0, [fp, #-8]
   16aac:	ldr	r0, [fp, #-12]
   16ab0:	movw	r3, #0
   16ab4:	str	r3, [sp, #84]	; 0x54
   16ab8:	ldr	ip, [sp, #84]	; 0x54
   16abc:	str	ip, [sp]
   16ac0:	str	ip, [sp, #4]
   16ac4:	movw	lr, #638	; 0x27e
   16ac8:	str	lr, [sp, #8]
   16acc:	bl	15008 <test_json@@Base>
   16ad0:	ldr	r1, [pc, #1256]	; 16fc0 <main@@Base+0xad8>
   16ad4:	add	r1, pc, r1
   16ad8:	ldr	r2, [pc, #1252]	; 16fc4 <main@@Base+0xadc>
   16adc:	add	r2, pc, r2
   16ae0:	ldr	r3, [fp, #-8]
   16ae4:	orr	r0, r3, r0
   16ae8:	str	r0, [fp, #-8]
   16aec:	ldr	r0, [fp, #-12]
   16af0:	movw	r3, #0
   16af4:	str	r3, [sp, #80]	; 0x50
   16af8:	ldr	ip, [sp, #80]	; 0x50
   16afc:	str	ip, [sp]
   16b00:	str	ip, [sp, #4]
   16b04:	movw	lr, #642	; 0x282
   16b08:	str	lr, [sp, #8]
   16b0c:	bl	15008 <test_json@@Base>
   16b10:	ldr	r1, [pc, #1184]	; 16fb8 <main@@Base+0xad0>
   16b14:	add	r1, pc, r1
   16b18:	ldr	r2, [pc, #1180]	; 16fbc <main@@Base+0xad4>
   16b1c:	add	r2, pc, r2
   16b20:	ldr	r3, [fp, #-8]
   16b24:	orr	r0, r3, r0
   16b28:	str	r0, [fp, #-8]
   16b2c:	ldr	r0, [fp, #-12]
   16b30:	movw	r3, #0
   16b34:	str	r3, [sp, #76]	; 0x4c
   16b38:	ldr	ip, [sp, #76]	; 0x4c
   16b3c:	str	ip, [sp]
   16b40:	str	ip, [sp, #4]
   16b44:	movw	lr, #646	; 0x286
   16b48:	str	lr, [sp, #8]
   16b4c:	bl	15008 <test_json@@Base>
   16b50:	ldr	r1, [pc, #1112]	; 16fb0 <main@@Base+0xac8>
   16b54:	add	r1, pc, r1
   16b58:	ldr	r2, [pc, #1108]	; 16fb4 <main@@Base+0xacc>
   16b5c:	add	r2, pc, r2
   16b60:	ldr	r3, [fp, #-8]
   16b64:	orr	r0, r3, r0
   16b68:	str	r0, [fp, #-8]
   16b6c:	ldr	r0, [fp, #-12]
   16b70:	movw	r3, #0
   16b74:	str	r3, [sp, #72]	; 0x48
   16b78:	ldr	ip, [sp, #72]	; 0x48
   16b7c:	str	ip, [sp]
   16b80:	str	ip, [sp, #4]
   16b84:	movw	lr, #649	; 0x289
   16b88:	str	lr, [sp, #8]
   16b8c:	bl	15008 <test_json@@Base>
   16b90:	ldr	r1, [pc, #1040]	; 16fa8 <main@@Base+0xac0>
   16b94:	add	r1, pc, r1
   16b98:	ldr	r2, [pc, #1036]	; 16fac <main@@Base+0xac4>
   16b9c:	add	r2, pc, r2
   16ba0:	ldr	r3, [fp, #-8]
   16ba4:	orr	r0, r3, r0
   16ba8:	str	r0, [fp, #-8]
   16bac:	ldr	r0, [fp, #-12]
   16bb0:	movw	r3, #0
   16bb4:	str	r3, [sp, #68]	; 0x44
   16bb8:	ldr	ip, [sp, #68]	; 0x44
   16bbc:	str	ip, [sp]
   16bc0:	str	ip, [sp, #4]
   16bc4:	movw	lr, #716	; 0x2cc
   16bc8:	str	lr, [sp, #8]
   16bcc:	bl	15008 <test_json@@Base>
   16bd0:	ldr	r1, [pc, #968]	; 16fa0 <main@@Base+0xab8>
   16bd4:	add	r1, pc, r1
   16bd8:	ldr	r2, [pc, #964]	; 16fa4 <main@@Base+0xabc>
   16bdc:	add	r2, pc, r2
   16be0:	ldr	r3, [fp, #-8]
   16be4:	orr	r0, r3, r0
   16be8:	str	r0, [fp, #-8]
   16bec:	ldr	r0, [fp, #-12]
   16bf0:	movw	r3, #0
   16bf4:	str	r3, [sp, #64]	; 0x40
   16bf8:	ldr	ip, [sp, #64]	; 0x40
   16bfc:	str	ip, [sp]
   16c00:	str	ip, [sp, #4]
   16c04:	movw	lr, #731	; 0x2db
   16c08:	str	lr, [sp, #8]
   16c0c:	bl	15008 <test_json@@Base>
   16c10:	ldr	r1, [pc, #896]	; 16f98 <main@@Base+0xab0>
   16c14:	add	r1, pc, r1
   16c18:	ldr	r2, [pc, #892]	; 16f9c <main@@Base+0xab4>
   16c1c:	add	r2, pc, r2
   16c20:	ldr	r3, [fp, #-8]
   16c24:	orr	r0, r3, r0
   16c28:	str	r0, [fp, #-8]
   16c2c:	ldr	r0, [fp, #-12]
   16c30:	movw	r3, #0
   16c34:	str	r3, [sp, #60]	; 0x3c
   16c38:	ldr	ip, [sp, #60]	; 0x3c
   16c3c:	str	ip, [sp]
   16c40:	str	ip, [sp, #4]
   16c44:	movw	lr, #734	; 0x2de
   16c48:	str	lr, [sp, #8]
   16c4c:	bl	15008 <test_json@@Base>
   16c50:	ldr	r1, [pc, #824]	; 16f90 <main@@Base+0xaa8>
   16c54:	add	r1, pc, r1
   16c58:	ldr	r2, [pc, #820]	; 16f94 <main@@Base+0xaac>
   16c5c:	add	r2, pc, r2
   16c60:	ldr	r3, [fp, #-8]
   16c64:	orr	r0, r3, r0
   16c68:	str	r0, [fp, #-8]
   16c6c:	ldr	r0, [fp, #-12]
   16c70:	movw	r3, #0
   16c74:	str	r3, [sp, #56]	; 0x38
   16c78:	ldr	ip, [sp, #56]	; 0x38
   16c7c:	str	ip, [sp]
   16c80:	str	ip, [sp, #4]
   16c84:	movw	lr, #738	; 0x2e2
   16c88:	str	lr, [sp, #8]
   16c8c:	bl	15008 <test_json@@Base>
   16c90:	ldr	r1, [pc, #752]	; 16f88 <main@@Base+0xaa0>
   16c94:	add	r1, pc, r1
   16c98:	ldr	r2, [pc, #748]	; 16f8c <main@@Base+0xaa4>
   16c9c:	add	r2, pc, r2
   16ca0:	ldr	r3, [fp, #-8]
   16ca4:	orr	r0, r3, r0
   16ca8:	str	r0, [fp, #-8]
   16cac:	ldr	r0, [fp, #-12]
   16cb0:	movw	r3, #0
   16cb4:	str	r3, [sp, #52]	; 0x34
   16cb8:	ldr	ip, [sp, #52]	; 0x34
   16cbc:	str	ip, [sp]
   16cc0:	str	ip, [sp, #4]
   16cc4:	movw	lr, #750	; 0x2ee
   16cc8:	str	lr, [sp, #8]
   16ccc:	bl	15008 <test_json@@Base>
   16cd0:	ldr	r1, [pc, #680]	; 16f80 <main@@Base+0xa98>
   16cd4:	add	r1, pc, r1
   16cd8:	ldr	r2, [pc, #676]	; 16f84 <main@@Base+0xa9c>
   16cdc:	add	r2, pc, r2
   16ce0:	ldr	r3, [fp, #-8]
   16ce4:	orr	r0, r3, r0
   16ce8:	str	r0, [fp, #-8]
   16cec:	ldr	r0, [fp, #-12]
   16cf0:	movw	r3, #0
   16cf4:	str	r3, [sp, #48]	; 0x30
   16cf8:	ldr	ip, [sp, #48]	; 0x30
   16cfc:	str	ip, [sp]
   16d00:	str	ip, [sp, #4]
   16d04:	movw	lr, #766	; 0x2fe
   16d08:	str	lr, [sp, #8]
   16d0c:	bl	15008 <test_json@@Base>
   16d10:	ldr	r1, [pc, #608]	; 16f78 <main@@Base+0xa90>
   16d14:	add	r1, pc, r1
   16d18:	ldr	r2, [pc, #604]	; 16f7c <main@@Base+0xa94>
   16d1c:	add	r2, pc, r2
   16d20:	ldr	r3, [fp, #-8]
   16d24:	orr	r0, r3, r0
   16d28:	str	r0, [fp, #-8]
   16d2c:	ldr	r0, [fp, #-12]
   16d30:	movw	r3, #0
   16d34:	str	r3, [sp, #44]	; 0x2c
   16d38:	ldr	ip, [sp, #44]	; 0x2c
   16d3c:	str	ip, [sp]
   16d40:	str	ip, [sp, #4]
   16d44:	movw	lr, #770	; 0x302
   16d48:	str	lr, [sp, #8]
   16d4c:	bl	15008 <test_json@@Base>
   16d50:	ldr	r1, [pc, #536]	; 16f70 <main@@Base+0xa88>
   16d54:	add	r1, pc, r1
   16d58:	ldr	r2, [pc, #532]	; 16f74 <main@@Base+0xa8c>
   16d5c:	add	r2, pc, r2
   16d60:	ldr	r3, [fp, #-8]
   16d64:	orr	r0, r3, r0
   16d68:	str	r0, [fp, #-8]
   16d6c:	ldr	r0, [fp, #-12]
   16d70:	movw	r3, #0
   16d74:	str	r3, [sp, #40]	; 0x28
   16d78:	ldr	ip, [sp, #40]	; 0x28
   16d7c:	str	ip, [sp]
   16d80:	str	ip, [sp, #4]
   16d84:	movw	lr, #776	; 0x308
   16d88:	str	lr, [sp, #8]
   16d8c:	bl	15008 <test_json@@Base>
   16d90:	ldr	r1, [pc, #464]	; 16f68 <main@@Base+0xa80>
   16d94:	add	r1, pc, r1
   16d98:	ldr	r2, [pc, #460]	; 16f6c <main@@Base+0xa84>
   16d9c:	add	r2, pc, r2
   16da0:	ldr	r3, [fp, #-8]
   16da4:	orr	r0, r3, r0
   16da8:	str	r0, [fp, #-8]
   16dac:	ldr	r0, [fp, #-12]
   16db0:	movw	r3, #0
   16db4:	str	r3, [sp, #36]	; 0x24
   16db8:	ldr	ip, [sp, #36]	; 0x24
   16dbc:	str	ip, [sp]
   16dc0:	str	ip, [sp, #4]
   16dc4:	movw	lr, #781	; 0x30d
   16dc8:	str	lr, [sp, #8]
   16dcc:	bl	15008 <test_json@@Base>
   16dd0:	ldr	r1, [pc, #392]	; 16f60 <main@@Base+0xa78>
   16dd4:	add	r1, pc, r1
   16dd8:	ldr	r2, [pc, #388]	; 16f64 <main@@Base+0xa7c>
   16ddc:	add	r2, pc, r2
   16de0:	ldr	r3, [fp, #-8]
   16de4:	orr	r0, r3, r0
   16de8:	str	r0, [fp, #-8]
   16dec:	ldr	r0, [fp, #-12]
   16df0:	movw	r3, #0
   16df4:	str	r3, [sp, #32]
   16df8:	ldr	ip, [sp, #32]
   16dfc:	str	ip, [sp]
   16e00:	str	ip, [sp, #4]
   16e04:	movw	lr, #786	; 0x312
   16e08:	str	lr, [sp, #8]
   16e0c:	bl	15008 <test_json@@Base>
   16e10:	ldr	r1, [pc, #320]	; 16f58 <main@@Base+0xa70>
   16e14:	add	r1, pc, r1
   16e18:	ldr	r2, [pc, #316]	; 16f5c <main@@Base+0xa74>
   16e1c:	add	r2, pc, r2
   16e20:	ldr	r3, [fp, #-8]
   16e24:	orr	r0, r3, r0
   16e28:	str	r0, [fp, #-8]
   16e2c:	ldr	r0, [fp, #-12]
   16e30:	movw	r3, #0
   16e34:	str	r3, [sp, #28]
   16e38:	ldr	ip, [sp, #28]
   16e3c:	str	ip, [sp]
   16e40:	str	ip, [sp, #4]
   16e44:	movw	lr, #791	; 0x317
   16e48:	str	lr, [sp, #8]
   16e4c:	bl	15008 <test_json@@Base>
   16e50:	ldr	r1, [pc, #248]	; 16f50 <main@@Base+0xa68>
   16e54:	add	r1, pc, r1
   16e58:	ldr	r2, [pc, #244]	; 16f54 <main@@Base+0xa6c>
   16e5c:	add	r2, pc, r2
   16e60:	ldr	r3, [fp, #-8]
   16e64:	orr	r0, r3, r0
   16e68:	str	r0, [fp, #-8]
   16e6c:	ldr	r0, [fp, #-12]
   16e70:	movw	r3, #0
   16e74:	str	r3, [sp, #24]
   16e78:	ldr	ip, [sp, #24]
   16e7c:	str	ip, [sp]
   16e80:	str	ip, [sp, #4]
   16e84:	movw	lr, #796	; 0x31c
   16e88:	str	lr, [sp, #8]
   16e8c:	bl	15008 <test_json@@Base>
   16e90:	ldr	r1, [pc, #176]	; 16f48 <main@@Base+0xa60>
   16e94:	add	r1, pc, r1
   16e98:	ldr	r2, [pc, #172]	; 16f4c <main@@Base+0xa64>
   16e9c:	add	r2, pc, r2
   16ea0:	ldr	r3, [fp, #-8]
   16ea4:	orr	r0, r3, r0
   16ea8:	str	r0, [fp, #-8]
   16eac:	ldr	r0, [fp, #-12]
   16eb0:	movw	r3, #0
   16eb4:	str	r3, [sp, #20]
   16eb8:	ldr	ip, [sp, #20]
   16ebc:	str	ip, [sp]
   16ec0:	str	ip, [sp, #4]
   16ec4:	movw	lr, #801	; 0x321
   16ec8:	str	lr, [sp, #8]
   16ecc:	bl	15008 <test_json@@Base>
   16ed0:	ldr	r1, [pc, #104]	; 16f40 <main@@Base+0xa58>
   16ed4:	add	r1, pc, r1
   16ed8:	ldr	r2, [pc, #100]	; 16f44 <main@@Base+0xa5c>
   16edc:	add	r2, pc, r2
   16ee0:	ldr	r3, [fp, #-8]
   16ee4:	orr	r0, r3, r0
   16ee8:	str	r0, [fp, #-8]
   16eec:	ldr	r0, [fp, #-12]
   16ef0:	movw	r3, #0
   16ef4:	str	r3, [sp, #16]
   16ef8:	ldr	ip, [sp, #16]
   16efc:	str	ip, [sp]
   16f00:	str	ip, [sp, #4]
   16f04:	movw	lr, #806	; 0x326
   16f08:	str	lr, [sp, #8]
   16f0c:	bl	15008 <test_json@@Base>
   16f10:	ldr	r1, [fp, #-8]
   16f14:	orr	r0, r1, r0
   16f18:	str	r0, [fp, #-8]
   16f1c:	ldr	r0, [fp, #-8]
   16f20:	cmp	r0, #0
   16f24:	movw	r0, #0
   16f28:	movne	r0, #1
   16f2c:	tst	r0, #1
   16f30:	mvn	r0, #0
   16f34:	moveq	r0, #0
   16f38:	mov	sp, fp
   16f3c:	pop	{fp, pc}
   16f40:	muleq	r3, r2, pc	; <UNPREDICTABLE>
   16f44:	andeq	r2, r3, r9, lsl r0
   16f48:	andeq	r1, r3, r9, asr #29
   16f4c:	andeq	r1, r3, fp, asr #30
   16f50:	andeq	r1, r3, lr, lsl lr
   16f54:	muleq	r3, r1, lr
   16f58:	andeq	r1, r3, r5, asr sp
   16f5c:	ldrdeq	r1, [r3], -r8
   16f60:	andeq	r1, r3, ip, lsr #25
   16f64:	andeq	r1, r3, lr, lsl sp
   16f68:	andeq	r1, r3, r4, ror ip
   16f6c:	andeq	pc, r2, r3, asr #17
   16f70:	andeq	r1, r3, r9, asr #23
   16f74:	andeq	r1, r3, ip, lsr ip
   16f78:			; <UNDEFINED> instruction: 0x00031bb0
   16f7c:	ldrdeq	r1, [r3], -r7
   16f80:	andeq	r1, r3, r7, lsr #23
   16f84:	andeq	r1, r3, r6, asr #23
   16f88:	andeq	r1, r3, sl, asr #22
   16f8c:	andeq	r1, r3, r1, lsl #22
   16f90:	andeq	r1, r3, r1, lsl #22
   16f94:	andeq	r1, r3, r1, asr #22
   16f98:	andeq	r1, r3, r5, lsl fp
   16f9c:	andeq	r1, r3, r7, lsr #22
   16fa0:	andeq	r1, r3, r8, ror #21
   16fa4:	andeq	r1, r3, sp, lsl fp
   16fa8:	andeq	r1, r3, sp, asr sl
   16fac:	andeq	r1, r3, r2, asr #21
   16fb0:	andeq	r1, r3, r7, ror sl
   16fb4:	andeq	pc, r2, r3, lsl #22
   16fb8:	andeq	r1, r3, ip, lsl #21
   16fbc:	andeq	pc, r2, r3, asr #22
   16fc0:	strdeq	r1, [r3], -fp
   16fc4:	andeq	r1, r3, r2, ror #20
   16fc8:	muleq	r3, ip, r9
   16fcc:	andeq	r1, r3, r9, ror #19
   16fd0:	andeq	r1, r3, r4, asr #18
   16fd4:	andeq	r1, r3, sp, lsl #19
   16fd8:	andeq	r1, r3, r0, asr #18
   16fdc:	andeq	r1, r3, r2, ror #18
   16fe0:	andeq	r1, r3, r0, lsl #19
   16fe4:	andeq	r1, r3, r2, lsr #19
   16fe8:	andeq	r1, r3, r6, lsl #19
   16fec:	andeq	r1, r3, r1, ror r6
   16ff0:	muleq	r3, fp, r9
   16ff4:			; <UNDEFINED> instruction: 0x000316b1
   16ff8:	muleq	r3, sp, r9
   16ffc:			; <UNDEFINED> instruction: 0x000319b6
   17000:	muleq	r3, sp, r9
   17004:			; <UNDEFINED> instruction: 0x000319b7
   17008:	muleq	r3, sp, r9
   1700c:			; <UNDEFINED> instruction: 0x000319b7
   17010:			; <UNDEFINED> instruction: 0x000319bb
   17014:	andeq	r1, r3, lr, asr #16
   17018:			; <UNDEFINED> instruction: 0x000319b4
   1701c:	andeq	r1, r3, sp, asr #19
   17020:	ldrdeq	r1, [r3], -r3
   17024:	andeq	r1, r3, sl, ror r8
   17028:	strdeq	r1, [r3], -r2
   1702c:	andeq	r1, r3, r1, ror r8
   17030:	andeq	pc, r2, r4, lsl #29
   17034:	andeq	pc, r2, r3, lsl #30
   17038:	andeq	r1, r3, fp, asr #20
   1703c:	andeq	pc, r2, r3, asr #30
   17040:	andeq	r1, r3, r2, ror #20
   17044:	andeq	r1, r3, sl, ror r9
   17048:	andeq	r1, r3, ip, ror sl
   1704c:	andeq	r1, r3, r1, ror r9
   17050:	andeq	r1, r3, r2, lsl #21
   17054:	andeq	r1, r3, lr, asr #20
   17058:	andeq	r1, r3, r5, ror #20
   1705c:	andeq	r1, r3, lr, lsl #21
   17060:	andeq	r1, r3, sl, asr sl
   17064:	andeq	r1, r3, sl, ror sl
   17068:	andeq	r1, r3, r2, asr sl
   1706c:	andeq	r1, r3, r1, ror sl
   17070:	andeq	r1, r3, fp, ror sl
   17074:	andeq	r0, r3, r3, lsl #2
   17078:	andeq	r6, r4, r0, ror #19
   1707c:	sub	sp, sp, #8
   17080:	str	r0, [sp, #4]
   17084:	strb	r1, [sp, #3]
   17088:	ldrb	r0, [sp, #3]
   1708c:	ldr	r1, [sp, #4]
   17090:	strb	r0, [r1, #25]
   17094:	add	sp, sp, #8
   17098:	bx	lr
   1709c:	push	{fp, lr}
   170a0:	mov	fp, sp
   170a4:	sub	sp, sp, #8
   170a8:	str	r0, [sp, #4]
   170ac:	ldr	r0, [sp, #4]
   170b0:	movw	r1, #2
   170b4:	and	r1, r1, #255	; 0xff
   170b8:	bl	1707c <main@@Base+0xb94>
   170bc:	ldr	r0, [sp, #4]
   170c0:	movw	r1, #1
   170c4:	bl	170dc <main@@Base+0xbf4>
   170c8:	ldr	r0, [sp, #4]
   170cc:	movw	r1, #0
   170d0:	bl	17118 <main@@Base+0xc30>
   170d4:	mov	sp, fp
   170d8:	pop	{fp, pc}
   170dc:	sub	sp, sp, #8
   170e0:	str	r0, [sp, #4]
   170e4:	str	r1, [sp]
   170e8:	ldr	r0, [sp]
   170ec:	cmp	r0, #0
   170f0:	movw	r0, #0
   170f4:	movne	r0, #1
   170f8:	mvn	r1, #0
   170fc:	eor	r0, r0, r1
   17100:	eor	r0, r0, r1
   17104:	and	r0, r0, #1
   17108:	ldr	r1, [sp, #4]
   1710c:	strb	r0, [r1, #26]
   17110:	add	sp, sp, #8
   17114:	bx	lr
   17118:	sub	sp, sp, #8
   1711c:	str	r0, [sp, #4]
   17120:	str	r1, [sp]
   17124:	ldr	r0, [sp]
   17128:	cmp	r0, #0
   1712c:	movw	r0, #0
   17130:	movne	r0, #1
   17134:	mvn	r1, #0
   17138:	eor	r0, r0, r1
   1713c:	eor	r0, r0, r1
   17140:	and	r0, r0, #1
   17144:	ldr	r1, [sp, #4]
   17148:	strb	r0, [r1, #27]
   1714c:	add	sp, sp, #8
   17150:	bx	lr
   17154:	nop	{0}
   17158:	push	{fp, lr}
   1715c:	mov	fp, sp
   17160:	sub	sp, sp, #192	; 0xc0
   17164:	str	r0, [fp, #-8]
   17168:	str	r1, [fp, #-12]
   1716c:	str	r2, [fp, #-16]
   17170:	str	r3, [fp, #-20]	; 0xffffffec
   17174:	ldr	r0, [fp, #-20]	; 0xffffffec
   17178:	movw	r1, #0
   1717c:	str	r1, [r0]
   17180:	ldr	r0, [fp, #-8]
   17184:	ldr	r0, [r0]
   17188:	movw	r1, #36	; 0x24
   1718c:	bl	2b898 <flatcc_builder_start_table@@Base>
   17190:	cmp	r0, #0
   17194:	beq	1719c <main@@Base+0xcb4>
   17198:	b	1aafc <main@@Base+0x4614>
   1719c:	ldr	r0, [fp, #-16]
   171a0:	ldr	r1, [fp, #-8]
   171a4:	ldr	r2, [fp, #-12]
   171a8:	ldr	r3, [fp, #-16]
   171ac:	str	r0, [sp, #36]	; 0x24
   171b0:	mov	r0, r1
   171b4:	mov	r1, r2
   171b8:	mov	r2, r3
   171bc:	movw	r3, #1
   171c0:	sub	ip, fp, #52	; 0x34
   171c4:	str	ip, [sp]
   171c8:	bl	363dc <flatcc_json_parser_prepare_unions@@Base>
   171cc:	ldr	r1, [sp, #36]	; 0x24
   171d0:	cmp	r1, r0
   171d4:	bne	171dc <main@@Base+0xcf4>
   171d8:	b	1aafc <main@@Base+0x4614>
   171dc:	ldr	r0, [fp, #-8]
   171e0:	ldr	r1, [fp, #-12]
   171e4:	ldr	r2, [fp, #-16]
   171e8:	sub	r3, fp, #24
   171ec:	bl	1baf8 <main@@Base+0x5610>
   171f0:	str	r0, [fp, #-12]
   171f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f8:	cmp	r0, #0
   171fc:	beq	1aa64 <main@@Base+0x457c>
   17200:	ldr	r0, [fp, #-8]
   17204:	ldr	r1, [fp, #-12]
   17208:	ldr	r2, [fp, #-16]
   1720c:	bl	1bbdc <main@@Base+0x56f4>
   17210:	str	r0, [fp, #-12]
   17214:	ldr	r0, [fp, #-12]
   17218:	ldr	r1, [fp, #-16]
   1721c:	bl	1bc60 <main@@Base+0x5778>
   17220:	str	r1, [fp, #-44]	; 0xffffffd4
   17224:	str	r0, [fp, #-48]	; 0xffffffd0
   17228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1722c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17230:	movw	r2, #29280	; 0x7260
   17234:	movt	r2, #24946	; 0x6172
   17238:	subs	r0, r2, r0
   1723c:	movw	r2, #29556	; 0x7374
   17240:	movt	r2, #29797	; 0x7465
   17244:	sbcs	r1, r2, r1
   17248:	bcc	183cc <main@@Base+0x1ee4>
   1724c:	b	17250 <main@@Base+0xd68>
   17250:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17254:	movw	r1, #28004	; 0x6d64
   17258:	movt	r1, #28257	; 0x6e61
   1725c:	cmp	r0, r1
   17260:	bhi	17bc0 <main@@Base+0x16d8>
   17264:	b	17268 <main@@Base+0xd80>
   17268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1726c:	movw	r1, #25975	; 0x6577
   17270:	movt	r1, #26220	; 0x666c
   17274:	cmp	r0, r1
   17278:	bhi	174b0 <main@@Base+0xfc8>
   1727c:	b	17280 <main@@Base+0xd98>
   17280:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17284:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17288:	movw	r2, #25965	; 0x656d
   1728c:	movt	r2, #25966	; 0x656e
   17290:	eor	r1, r1, r2
   17294:	eor	r0, r0, #121	; 0x79
   17298:	orr	r0, r1, r0, lsl #24
   1729c:	cmp	r0, #0
   172a0:	bne	17344 <main@@Base+0xe5c>
   172a4:	b	172a8 <main@@Base+0xdc0>
   172a8:	ldr	r0, [fp, #-8]
   172ac:	ldr	r1, [fp, #-12]
   172b0:	str	r1, [fp, #-40]	; 0xffffffd8
   172b4:	ldr	r2, [fp, #-16]
   172b8:	movw	r3, #5
   172bc:	bl	1bc98 <main@@Base+0x57b0>
   172c0:	str	r0, [fp, #-12]
   172c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172c8:	ldr	r1, [fp, #-12]
   172cc:	cmp	r0, r1
   172d0:	beq	1732c <main@@Base+0xe44>
   172d4:	ldr	r0, [fp, #-8]
   172d8:	ldr	r1, [fp, #-12]
   172dc:	ldr	r2, [fp, #-16]
   172e0:	sub	r3, fp, #32
   172e4:	bl	17158 <main@@Base+0xc70>
   172e8:	str	r0, [fp, #-12]
   172ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   172f0:	cmp	r0, #0
   172f4:	beq	17318 <main@@Base+0xe30>
   172f8:	ldr	r0, [fp, #-8]
   172fc:	ldr	r0, [r0]
   17300:	movw	r1, #12
   17304:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   17308:	str	r0, [fp, #-36]	; 0xffffffdc
   1730c:	movw	r1, #0
   17310:	cmp	r0, r1
   17314:	bne	1731c <main@@Base+0xe34>
   17318:	b	1aafc <main@@Base+0x4614>
   1731c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17320:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17324:	str	r0, [r1]
   17328:	b	17340 <main@@Base+0xe58>
   1732c:	ldr	r0, [fp, #-8]
   17330:	ldr	r1, [fp, #-12]
   17334:	ldr	r2, [fp, #-16]
   17338:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1733c:	str	r0, [fp, #-12]
   17340:	b	174ac <main@@Base+0xfc4>
   17344:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17348:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1734c:	movw	r2, #27759	; 0x6c6f
   17350:	movt	r2, #25455	; 0x636f
   17354:	eor	r1, r1, r2
   17358:	eor	r0, r0, #114	; 0x72
   1735c:	orr	r0, r1, r0, lsl #24
   17360:	cmp	r0, #0
   17364:	bne	17494 <main@@Base+0xfac>
   17368:	b	1736c <main@@Base+0xe84>
   1736c:	ldr	r0, [fp, #-8]
   17370:	ldr	r1, [fp, #-12]
   17374:	str	r1, [fp, #-40]	; 0xffffffd8
   17378:	ldr	r2, [fp, #-16]
   1737c:	movw	r3, #5
   17380:	bl	1bc98 <main@@Base+0x57b0>
   17384:	str	r0, [fp, #-12]
   17388:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1738c:	ldr	r1, [fp, #-12]
   17390:	cmp	r0, r1
   17394:	beq	1747c <main@@Base+0xf94>
   17398:	movw	r0, #0
   1739c:	strb	r0, [fp, #-53]	; 0xffffffcb
   173a0:	ldr	r0, [fp, #-8]
   173a4:	ldr	r1, [fp, #-12]
   173a8:	str	r1, [fp, #-40]	; 0xffffffd8
   173ac:	ldr	r2, [fp, #-16]
   173b0:	sub	r3, fp, #53	; 0x35
   173b4:	bl	1d148 <main@@Base+0x6c60>
   173b8:	str	r0, [fp, #-12]
   173bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173c0:	ldr	r1, [fp, #-12]
   173c4:	cmp	r0, r1
   173c8:	bne	1741c <main@@Base+0xf34>
   173cc:	ldr	r0, [pc, #4084]	; 183c8 <main@@Base+0x1ee0>
   173d0:	add	r3, pc, r0
   173d4:	ldr	r0, [fp, #-8]
   173d8:	ldr	r1, [fp, #-12]
   173dc:	str	r1, [fp, #-40]	; 0xffffffd8
   173e0:	ldr	r2, [fp, #-16]
   173e4:	sub	ip, fp, #53	; 0x35
   173e8:	str	ip, [sp]
   173ec:	bl	1d224 <main@@Base+0x6d3c>
   173f0:	str	r0, [fp, #-12]
   173f4:	ldr	r0, [fp, #-12]
   173f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   173fc:	cmp	r0, r1
   17400:	beq	17414 <main@@Base+0xf2c>
   17404:	ldr	r0, [fp, #-12]
   17408:	ldr	r1, [fp, #-16]
   1740c:	cmp	r0, r1
   17410:	bne	17418 <main@@Base+0xf30>
   17414:	b	1aafc <main@@Base+0x4614>
   17418:	b	1741c <main@@Base+0xf34>
   1741c:	ldrsb	r0, [fp, #-53]	; 0xffffffcb
   17420:	cmp	r0, #8
   17424:	bne	1743c <main@@Base+0xf54>
   17428:	ldr	r0, [fp, #-8]
   1742c:	ldr	r0, [r0, #8]
   17430:	and	r0, r0, #2
   17434:	cmp	r0, #0
   17438:	beq	17478 <main@@Base+0xf90>
   1743c:	ldr	r0, [fp, #-8]
   17440:	ldr	r0, [r0]
   17444:	movw	r1, #6
   17448:	movw	r2, #1
   1744c:	movw	r3, #1
   17450:	uxth	r3, r3
   17454:	bl	2d13c <flatcc_builder_table_add@@Base>
   17458:	str	r0, [fp, #-28]	; 0xffffffe4
   1745c:	movw	r1, #0
   17460:	cmp	r0, r1
   17464:	bne	1746c <main@@Base+0xf84>
   17468:	b	1aafc <main@@Base+0x4614>
   1746c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17470:	ldrsb	r1, [fp, #-53]	; 0xffffffcb
   17474:	bl	1d408 <main@@Base+0x6f20>
   17478:	b	17490 <main@@Base+0xfa8>
   1747c:	ldr	r0, [fp, #-8]
   17480:	ldr	r1, [fp, #-12]
   17484:	ldr	r2, [fp, #-16]
   17488:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1748c:	str	r0, [fp, #-12]
   17490:	b	174a8 <main@@Base+0xfc0>
   17494:	ldr	r0, [fp, #-8]
   17498:	ldr	r1, [fp, #-12]
   1749c:	ldr	r2, [fp, #-16]
   174a0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   174a4:	str	r0, [fp, #-12]
   174a8:	b	174ac <main@@Base+0xfc4>
   174ac:	b	17bbc <main@@Base+0x16d4>
   174b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174b4:	movw	r1, #65535	; 0xffff
   174b8:	movt	r1, #26735	; 0x686f
   174bc:	cmp	r0, r1
   174c0:	bhi	176a8 <main@@Base+0x11c0>
   174c4:	b	174c8 <main@@Base+0xfe0>
   174c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174cc:	movw	r1, #25976	; 0x6578
   174d0:	movt	r1, #26220	; 0x666c
   174d4:	teq	r0, r1
   174d8:	bne	17690 <main@@Base+0x11a8>
   174dc:	b	174e0 <main@@Base+0xff8>
   174e0:	ldr	r0, [fp, #-8]
   174e4:	ldr	r1, [fp, #-12]
   174e8:	str	r1, [fp, #-40]	; 0xffffffd8
   174ec:	ldr	r2, [fp, #-16]
   174f0:	movw	r3, #4
   174f4:	bl	1bc98 <main@@Base+0x57b0>
   174f8:	str	r0, [fp, #-12]
   174fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17500:	ldr	r1, [fp, #-12]
   17504:	cmp	r0, r1
   17508:	beq	17678 <main@@Base+0x1190>
   1750c:	ldr	r0, [fp, #-8]
   17510:	ldr	r0, [r0]
   17514:	movw	r1, #1
   17518:	movw	r2, #1
   1751c:	uxth	r2, r2
   17520:	mvn	r3, #0
   17524:	bl	2b424 <flatcc_builder_start_vector@@Base>
   17528:	cmp	r0, #0
   1752c:	beq	17534 <main@@Base+0x104c>
   17530:	b	1aafc <main@@Base+0x4614>
   17534:	ldr	r0, [fp, #-8]
   17538:	ldr	r1, [fp, #-12]
   1753c:	ldr	r2, [fp, #-16]
   17540:	sub	r3, fp, #24
   17544:	bl	1d434 <main@@Base+0x6f4c>
   17548:	str	r0, [fp, #-12]
   1754c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17550:	cmp	r0, #0
   17554:	beq	17628 <main@@Base+0x1140>
   17558:	movw	r0, #0
   1755c:	strb	r0, [fp, #-54]	; 0xffffffca
   17560:	ldr	r0, [fp, #-8]
   17564:	ldr	r0, [r0]
   17568:	movw	r1, #1
   1756c:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   17570:	str	r0, [fp, #-28]	; 0xffffffe4
   17574:	movw	r1, #0
   17578:	cmp	r0, r1
   1757c:	bne	17584 <main@@Base+0x109c>
   17580:	b	1aafc <main@@Base+0x4614>
   17584:	ldr	r0, [fp, #-8]
   17588:	ldr	r1, [fp, #-12]
   1758c:	str	r1, [fp, #-40]	; 0xffffffd8
   17590:	ldr	r2, [fp, #-16]
   17594:	sub	r3, fp, #54	; 0x36
   17598:	bl	1d518 <main@@Base+0x7030>
   1759c:	str	r0, [fp, #-12]
   175a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175a4:	ldr	r1, [fp, #-12]
   175a8:	cmp	r0, r1
   175ac:	bne	17600 <main@@Base+0x1118>
   175b0:	ldr	r0, [pc, #3976]	; 18540 <main@@Base+0x2058>
   175b4:	add	r3, pc, r0
   175b8:	ldr	r0, [fp, #-8]
   175bc:	ldr	r1, [fp, #-12]
   175c0:	str	r1, [fp, #-40]	; 0xffffffd8
   175c4:	ldr	r2, [fp, #-16]
   175c8:	sub	ip, fp, #54	; 0x36
   175cc:	str	ip, [sp]
   175d0:	bl	1d5f4 <main@@Base+0x710c>
   175d4:	str	r0, [fp, #-12]
   175d8:	ldr	r0, [fp, #-12]
   175dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   175e0:	cmp	r0, r1
   175e4:	beq	175f8 <main@@Base+0x1110>
   175e8:	ldr	r0, [fp, #-12]
   175ec:	ldr	r1, [fp, #-16]
   175f0:	cmp	r0, r1
   175f4:	bne	175fc <main@@Base+0x1114>
   175f8:	b	1aafc <main@@Base+0x4614>
   175fc:	b	17600 <main@@Base+0x1118>
   17600:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17604:	ldrb	r1, [fp, #-54]	; 0xffffffca
   17608:	bl	1d7d8 <main@@Base+0x72f0>
   1760c:	ldr	r0, [fp, #-8]
   17610:	ldr	r1, [fp, #-12]
   17614:	ldr	r2, [fp, #-16]
   17618:	sub	r3, fp, #24
   1761c:	bl	1d804 <main@@Base+0x731c>
   17620:	str	r0, [fp, #-12]
   17624:	b	1754c <main@@Base+0x1064>
   17628:	ldr	r0, [fp, #-8]
   1762c:	ldr	r0, [r0]
   17630:	bl	2c904 <flatcc_builder_end_vector@@Base>
   17634:	str	r0, [fp, #-32]	; 0xffffffe0
   17638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1763c:	cmp	r0, #0
   17640:	beq	17664 <main@@Base+0x117c>
   17644:	ldr	r0, [fp, #-8]
   17648:	ldr	r0, [r0]
   1764c:	movw	r1, #30
   17650:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   17654:	str	r0, [fp, #-36]	; 0xffffffdc
   17658:	movw	r1, #0
   1765c:	cmp	r0, r1
   17660:	bne	17668 <main@@Base+0x1180>
   17664:	b	1aafc <main@@Base+0x4614>
   17668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1766c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17670:	str	r0, [r1]
   17674:	b	1768c <main@@Base+0x11a4>
   17678:	ldr	r0, [fp, #-8]
   1767c:	ldr	r1, [fp, #-12]
   17680:	ldr	r2, [fp, #-16]
   17684:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17688:	str	r0, [fp, #-12]
   1768c:	b	176a4 <main@@Base+0x11bc>
   17690:	ldr	r0, [fp, #-8]
   17694:	ldr	r1, [fp, #-12]
   17698:	ldr	r2, [fp, #-16]
   1769c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   176a0:	str	r0, [fp, #-12]
   176a4:	b	17bb8 <main@@Base+0x16d0>
   176a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   176ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   176b0:	movw	r2, #28529	; 0x6f71
   176b4:	movt	r2, #28276	; 0x6e74
   176b8:	subs	r0, r2, r0
   176bc:	movw	r2, #30309	; 0x7665
   176c0:	movt	r2, #26990	; 0x696e
   176c4:	sbcs	r1, r2, r1
   176c8:	bcc	1782c <main@@Base+0x1344>
   176cc:	b	176d0 <main@@Base+0x11e8>
   176d0:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   176d4:	movw	r1, #0
   176d8:	movt	r1, #26736	; 0x6870
   176dc:	teq	r1, r0, lsl #16
   176e0:	bne	17814 <main@@Base+0x132c>
   176e4:	b	176e8 <main@@Base+0x1200>
   176e8:	ldr	r0, [fp, #-8]
   176ec:	ldr	r1, [fp, #-12]
   176f0:	str	r1, [fp, #-40]	; 0xffffffd8
   176f4:	ldr	r2, [fp, #-16]
   176f8:	movw	r3, #2
   176fc:	bl	1bc98 <main@@Base+0x57b0>
   17700:	str	r0, [fp, #-12]
   17704:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17708:	ldr	r1, [fp, #-12]
   1770c:	cmp	r0, r1
   17710:	beq	177fc <main@@Base+0x1314>
   17714:	movw	r0, #0
   17718:	strh	r0, [fp, #-56]	; 0xffffffc8
   1771c:	ldr	r0, [fp, #-8]
   17720:	ldr	r1, [fp, #-12]
   17724:	str	r1, [fp, #-40]	; 0xffffffd8
   17728:	ldr	r2, [fp, #-16]
   1772c:	sub	r3, fp, #56	; 0x38
   17730:	bl	1d968 <main@@Base+0x7480>
   17734:	str	r0, [fp, #-12]
   17738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1773c:	ldr	r1, [fp, #-12]
   17740:	cmp	r0, r1
   17744:	bne	17798 <main@@Base+0x12b0>
   17748:	ldr	r0, [pc, #4052]	; 18724 <main@@Base+0x223c>
   1774c:	add	r3, pc, r0
   17750:	ldr	r0, [fp, #-8]
   17754:	ldr	r1, [fp, #-12]
   17758:	str	r1, [fp, #-40]	; 0xffffffd8
   1775c:	ldr	r2, [fp, #-16]
   17760:	sub	ip, fp, #56	; 0x38
   17764:	str	ip, [sp]
   17768:	bl	1da44 <main@@Base+0x755c>
   1776c:	str	r0, [fp, #-12]
   17770:	ldr	r0, [fp, #-12]
   17774:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17778:	cmp	r0, r1
   1777c:	beq	17790 <main@@Base+0x12a8>
   17780:	ldr	r0, [fp, #-12]
   17784:	ldr	r1, [fp, #-16]
   17788:	cmp	r0, r1
   1778c:	bne	17794 <main@@Base+0x12ac>
   17790:	b	1aafc <main@@Base+0x4614>
   17794:	b	17798 <main@@Base+0x12b0>
   17798:	ldrsh	r0, [fp, #-56]	; 0xffffffc8
   1779c:	cmp	r0, #100	; 0x64
   177a0:	bne	177b8 <main@@Base+0x12d0>
   177a4:	ldr	r0, [fp, #-8]
   177a8:	ldr	r0, [r0, #8]
   177ac:	and	r0, r0, #2
   177b0:	cmp	r0, #0
   177b4:	beq	177f8 <main@@Base+0x1310>
   177b8:	ldr	r0, [fp, #-8]
   177bc:	ldr	r0, [r0]
   177c0:	movw	r1, #2
   177c4:	str	r1, [sp, #32]
   177c8:	ldr	r2, [sp, #32]
   177cc:	movw	r3, #2
   177d0:	uxth	r3, r3
   177d4:	bl	2d13c <flatcc_builder_table_add@@Base>
   177d8:	str	r0, [fp, #-28]	; 0xffffffe4
   177dc:	movw	r1, #0
   177e0:	cmp	r0, r1
   177e4:	bne	177ec <main@@Base+0x1304>
   177e8:	b	1aafc <main@@Base+0x4614>
   177ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   177f0:	ldrsh	r1, [fp, #-56]	; 0xffffffc8
   177f4:	bl	1dc28 <main@@Base+0x7740>
   177f8:	b	17810 <main@@Base+0x1328>
   177fc:	ldr	r0, [fp, #-8]
   17800:	ldr	r1, [fp, #-12]
   17804:	ldr	r2, [fp, #-16]
   17808:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1780c:	str	r0, [fp, #-12]
   17810:	b	17828 <main@@Base+0x1340>
   17814:	ldr	r0, [fp, #-8]
   17818:	ldr	r1, [fp, #-12]
   1781c:	ldr	r2, [fp, #-16]
   17820:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17824:	str	r0, [fp, #-12]
   17828:	b	17bb4 <main@@Base+0x16cc>
   1782c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17830:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17834:	movw	r2, #30309	; 0x7665
   17838:	movt	r2, #26990	; 0x696e
   1783c:	eor	r1, r1, r2
   17840:	movw	r2, #28530	; 0x6f72
   17844:	movt	r2, #28276	; 0x6e74
   17848:	eor	r0, r0, r2
   1784c:	orr	r0, r0, r1
   17850:	cmp	r0, #0
   17854:	bne	17a58 <main@@Base+0x1570>
   17858:	b	1785c <main@@Base+0x1374>
   1785c:	ldr	r0, [fp, #-12]
   17860:	add	r0, r0, #8
   17864:	str	r0, [fp, #-12]
   17868:	ldr	r0, [fp, #-12]
   1786c:	ldr	r1, [fp, #-16]
   17870:	bl	1bc60 <main@@Base+0x5778>
   17874:	str	r1, [fp, #-44]	; 0xffffffd4
   17878:	str	r0, [fp, #-48]	; 0xffffffd0
   1787c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   17880:	mov	r1, #2030043136	; 0x79000000
   17884:	teq	r1, r0, lsl #24
   17888:	bne	17a40 <main@@Base+0x1558>
   1788c:	b	17890 <main@@Base+0x13a8>
   17890:	ldr	r0, [fp, #-8]
   17894:	ldr	r1, [fp, #-12]
   17898:	str	r1, [fp, #-40]	; 0xffffffd8
   1789c:	ldr	r2, [fp, #-16]
   178a0:	movw	r3, #1
   178a4:	bl	1bc98 <main@@Base+0x57b0>
   178a8:	str	r0, [fp, #-12]
   178ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   178b0:	ldr	r1, [fp, #-12]
   178b4:	cmp	r0, r1
   178b8:	beq	17a28 <main@@Base+0x1540>
   178bc:	ldr	r0, [fp, #-8]
   178c0:	ldr	r0, [r0]
   178c4:	movw	r1, #1
   178c8:	movw	r2, #1
   178cc:	uxth	r2, r2
   178d0:	mvn	r3, #0
   178d4:	bl	2b424 <flatcc_builder_start_vector@@Base>
   178d8:	cmp	r0, #0
   178dc:	beq	178e4 <main@@Base+0x13fc>
   178e0:	b	1aafc <main@@Base+0x4614>
   178e4:	ldr	r0, [fp, #-8]
   178e8:	ldr	r1, [fp, #-12]
   178ec:	ldr	r2, [fp, #-16]
   178f0:	sub	r3, fp, #24
   178f4:	bl	1d434 <main@@Base+0x6f4c>
   178f8:	str	r0, [fp, #-12]
   178fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17900:	cmp	r0, #0
   17904:	beq	179d8 <main@@Base+0x14f0>
   17908:	movw	r0, #0
   1790c:	strb	r0, [fp, #-57]	; 0xffffffc7
   17910:	ldr	r0, [fp, #-8]
   17914:	ldr	r0, [r0]
   17918:	movw	r1, #1
   1791c:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   17920:	str	r0, [fp, #-28]	; 0xffffffe4
   17924:	movw	r1, #0
   17928:	cmp	r0, r1
   1792c:	bne	17934 <main@@Base+0x144c>
   17930:	b	1aafc <main@@Base+0x4614>
   17934:	ldr	r0, [fp, #-8]
   17938:	ldr	r1, [fp, #-12]
   1793c:	str	r1, [fp, #-40]	; 0xffffffd8
   17940:	ldr	r2, [fp, #-16]
   17944:	sub	r3, fp, #57	; 0x39
   17948:	bl	1d518 <main@@Base+0x7030>
   1794c:	str	r0, [fp, #-12]
   17950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17954:	ldr	r1, [fp, #-12]
   17958:	cmp	r0, r1
   1795c:	bne	179b0 <main@@Base+0x14c8>
   17960:	ldr	r0, [pc, #4080]	; 18958 <main@@Base+0x2470>
   17964:	add	r3, pc, r0
   17968:	ldr	r0, [fp, #-8]
   1796c:	ldr	r1, [fp, #-12]
   17970:	str	r1, [fp, #-40]	; 0xffffffd8
   17974:	ldr	r2, [fp, #-16]
   17978:	sub	ip, fp, #57	; 0x39
   1797c:	str	ip, [sp]
   17980:	bl	1d5f4 <main@@Base+0x710c>
   17984:	str	r0, [fp, #-12]
   17988:	ldr	r0, [fp, #-12]
   1798c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17990:	cmp	r0, r1
   17994:	beq	179a8 <main@@Base+0x14c0>
   17998:	ldr	r0, [fp, #-12]
   1799c:	ldr	r1, [fp, #-16]
   179a0:	cmp	r0, r1
   179a4:	bne	179ac <main@@Base+0x14c4>
   179a8:	b	1aafc <main@@Base+0x4614>
   179ac:	b	179b0 <main@@Base+0x14c8>
   179b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   179b4:	ldrb	r1, [fp, #-57]	; 0xffffffc7
   179b8:	bl	1d7d8 <main@@Base+0x72f0>
   179bc:	ldr	r0, [fp, #-8]
   179c0:	ldr	r1, [fp, #-12]
   179c4:	ldr	r2, [fp, #-16]
   179c8:	sub	r3, fp, #24
   179cc:	bl	1d804 <main@@Base+0x731c>
   179d0:	str	r0, [fp, #-12]
   179d4:	b	178fc <main@@Base+0x1414>
   179d8:	ldr	r0, [fp, #-8]
   179dc:	ldr	r0, [r0]
   179e0:	bl	2c904 <flatcc_builder_end_vector@@Base>
   179e4:	str	r0, [fp, #-32]	; 0xffffffe0
   179e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179ec:	cmp	r0, #0
   179f0:	beq	17a14 <main@@Base+0x152c>
   179f4:	ldr	r0, [fp, #-8]
   179f8:	ldr	r0, [r0]
   179fc:	movw	r1, #5
   17a00:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   17a04:	str	r0, [fp, #-36]	; 0xffffffdc
   17a08:	movw	r1, #0
   17a0c:	cmp	r0, r1
   17a10:	bne	17a18 <main@@Base+0x1530>
   17a14:	b	1aafc <main@@Base+0x4614>
   17a18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17a20:	str	r0, [r1]
   17a24:	b	17a3c <main@@Base+0x1554>
   17a28:	ldr	r0, [fp, #-8]
   17a2c:	ldr	r1, [fp, #-12]
   17a30:	ldr	r2, [fp, #-16]
   17a34:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17a38:	str	r0, [fp, #-12]
   17a3c:	b	17a54 <main@@Base+0x156c>
   17a40:	ldr	r0, [fp, #-8]
   17a44:	ldr	r1, [fp, #-12]
   17a48:	ldr	r2, [fp, #-16]
   17a4c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17a50:	str	r0, [fp, #-12]
   17a54:	b	17bb0 <main@@Base+0x16c8>
   17a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a5c:	movw	r1, #28257	; 0x6e61
   17a60:	movt	r1, #28001	; 0x6d61
   17a64:	teq	r0, r1
   17a68:	bne	17b98 <main@@Base+0x16b0>
   17a6c:	b	17a70 <main@@Base+0x1588>
   17a70:	ldr	r0, [fp, #-8]
   17a74:	ldr	r1, [fp, #-12]
   17a78:	str	r1, [fp, #-40]	; 0xffffffd8
   17a7c:	ldr	r2, [fp, #-16]
   17a80:	movw	r3, #4
   17a84:	bl	1bc98 <main@@Base+0x57b0>
   17a88:	str	r0, [fp, #-12]
   17a8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a90:	ldr	r1, [fp, #-12]
   17a94:	cmp	r0, r1
   17a98:	beq	17b80 <main@@Base+0x1698>
   17a9c:	movw	r0, #0
   17aa0:	strh	r0, [fp, #-60]	; 0xffffffc4
   17aa4:	ldr	r0, [fp, #-8]
   17aa8:	ldr	r1, [fp, #-12]
   17aac:	str	r1, [fp, #-40]	; 0xffffffd8
   17ab0:	ldr	r2, [fp, #-16]
   17ab4:	sub	r3, fp, #60	; 0x3c
   17ab8:	bl	1d968 <main@@Base+0x7480>
   17abc:	str	r0, [fp, #-12]
   17ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ac4:	ldr	r1, [fp, #-12]
   17ac8:	cmp	r0, r1
   17acc:	bne	17b20 <main@@Base+0x1638>
   17ad0:	ldr	r0, [pc, #4056]	; 18ab0 <main@@Base+0x25c8>
   17ad4:	add	r3, pc, r0
   17ad8:	ldr	r0, [fp, #-8]
   17adc:	ldr	r1, [fp, #-12]
   17ae0:	str	r1, [fp, #-40]	; 0xffffffd8
   17ae4:	ldr	r2, [fp, #-16]
   17ae8:	sub	ip, fp, #60	; 0x3c
   17aec:	str	ip, [sp]
   17af0:	bl	1da44 <main@@Base+0x755c>
   17af4:	str	r0, [fp, #-12]
   17af8:	ldr	r0, [fp, #-12]
   17afc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b00:	cmp	r0, r1
   17b04:	beq	17b18 <main@@Base+0x1630>
   17b08:	ldr	r0, [fp, #-12]
   17b0c:	ldr	r1, [fp, #-16]
   17b10:	cmp	r0, r1
   17b14:	bne	17b1c <main@@Base+0x1634>
   17b18:	b	1aafc <main@@Base+0x4614>
   17b1c:	b	17b20 <main@@Base+0x1638>
   17b20:	ldrsh	r0, [fp, #-60]	; 0xffffffc4
   17b24:	cmp	r0, #150	; 0x96
   17b28:	bne	17b40 <main@@Base+0x1658>
   17b2c:	ldr	r0, [fp, #-8]
   17b30:	ldr	r0, [r0, #8]
   17b34:	and	r0, r0, #2
   17b38:	cmp	r0, #0
   17b3c:	beq	17b7c <main@@Base+0x1694>
   17b40:	ldr	r0, [fp, #-8]
   17b44:	ldr	r0, [r0]
   17b48:	movw	r1, #1
   17b4c:	movw	r2, #2
   17b50:	movw	r3, #2
   17b54:	uxth	r3, r3
   17b58:	bl	2d13c <flatcc_builder_table_add@@Base>
   17b5c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b60:	movw	r1, #0
   17b64:	cmp	r0, r1
   17b68:	bne	17b70 <main@@Base+0x1688>
   17b6c:	b	1aafc <main@@Base+0x4614>
   17b70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b74:	ldrsh	r1, [fp, #-60]	; 0xffffffc4
   17b78:	bl	1dc28 <main@@Base+0x7740>
   17b7c:	b	17b94 <main@@Base+0x16ac>
   17b80:	ldr	r0, [fp, #-8]
   17b84:	ldr	r1, [fp, #-12]
   17b88:	ldr	r2, [fp, #-16]
   17b8c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17b90:	str	r0, [fp, #-12]
   17b94:	b	17bac <main@@Base+0x16c4>
   17b98:	ldr	r0, [fp, #-8]
   17b9c:	ldr	r1, [fp, #-12]
   17ba0:	ldr	r2, [fp, #-16]
   17ba4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17ba8:	str	r0, [fp, #-12]
   17bac:	b	17bb0 <main@@Base+0x16c8>
   17bb0:	b	17bb4 <main@@Base+0x16cc>
   17bb4:	b	17bb8 <main@@Base+0x16d0>
   17bb8:	b	17bbc <main@@Base+0x16d4>
   17bbc:	b	183c4 <main@@Base+0x1edc>
   17bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17bc4:	movw	r1, #29555	; 0x7373
   17bc8:	movt	r1, #29797	; 0x7465
   17bcc:	cmp	r0, r1
   17bd0:	bhi	17f2c <main@@Base+0x1a44>
   17bd4:	b	17bd8 <main@@Base+0x16f0>
   17bd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17bdc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17be0:	movw	r2, #24429	; 0x5f6d
   17be4:	movt	r2, #28276	; 0x6e74
   17be8:	subs	r0, r2, r0
   17bec:	movw	r2, #29285	; 0x7265
   17bf0:	movt	r2, #28769	; 0x7061
   17bf4:	sbcs	r1, r2, r1
   17bf8:	bcc	17ccc <main@@Base+0x17e4>
   17bfc:	b	17c00 <main@@Base+0x1718>
   17c00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17c04:	movw	r1, #28005	; 0x6d65
   17c08:	movt	r1, #28257	; 0x6e61
   17c0c:	teq	r0, r1
   17c10:	bne	17cb4 <main@@Base+0x17cc>
   17c14:	b	17c18 <main@@Base+0x1730>
   17c18:	ldr	r0, [fp, #-8]
   17c1c:	ldr	r1, [fp, #-12]
   17c20:	str	r1, [fp, #-40]	; 0xffffffd8
   17c24:	ldr	r2, [fp, #-16]
   17c28:	movw	r3, #4
   17c2c:	bl	1bc98 <main@@Base+0x57b0>
   17c30:	str	r0, [fp, #-12]
   17c34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17c38:	ldr	r1, [fp, #-12]
   17c3c:	cmp	r0, r1
   17c40:	beq	17c9c <main@@Base+0x17b4>
   17c44:	ldr	r0, [fp, #-8]
   17c48:	ldr	r1, [fp, #-12]
   17c4c:	ldr	r2, [fp, #-16]
   17c50:	sub	r3, fp, #32
   17c54:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   17c58:	str	r0, [fp, #-12]
   17c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c60:	cmp	r0, #0
   17c64:	beq	17c88 <main@@Base+0x17a0>
   17c68:	ldr	r0, [fp, #-8]
   17c6c:	ldr	r0, [r0]
   17c70:	movw	r1, #3
   17c74:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   17c78:	str	r0, [fp, #-36]	; 0xffffffdc
   17c7c:	movw	r1, #0
   17c80:	cmp	r0, r1
   17c84:	bne	17c8c <main@@Base+0x17a4>
   17c88:	b	1aafc <main@@Base+0x4614>
   17c8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c94:	str	r0, [r1]
   17c98:	b	17cb0 <main@@Base+0x17c8>
   17c9c:	ldr	r0, [fp, #-8]
   17ca0:	ldr	r1, [fp, #-12]
   17ca4:	ldr	r2, [fp, #-16]
   17ca8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17cac:	str	r0, [fp, #-12]
   17cb0:	b	17cc8 <main@@Base+0x17e0>
   17cb4:	ldr	r0, [fp, #-8]
   17cb8:	ldr	r1, [fp, #-12]
   17cbc:	ldr	r2, [fp, #-16]
   17cc0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17cc4:	str	r0, [fp, #-12]
   17cc8:	b	17f28 <main@@Base+0x1a40>
   17ccc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17cd4:	movw	r2, #29285	; 0x7265
   17cd8:	movt	r2, #28769	; 0x7061
   17cdc:	eor	r1, r1, r2
   17ce0:	movw	r2, #24430	; 0x5f6e
   17ce4:	movt	r2, #28276	; 0x6e74
   17ce8:	eor	r0, r0, r2
   17cec:	orr	r0, r0, r1
   17cf0:	cmp	r0, #0
   17cf4:	bne	17e60 <main@@Base+0x1978>
   17cf8:	b	17cfc <main@@Base+0x1814>
   17cfc:	ldr	r0, [fp, #-12]
   17d00:	add	r0, r0, #8
   17d04:	str	r0, [fp, #-12]
   17d08:	ldr	r0, [fp, #-12]
   17d0c:	ldr	r1, [fp, #-16]
   17d10:	bl	1bc60 <main@@Base+0x5778>
   17d14:	str	r1, [fp, #-44]	; 0xffffffd4
   17d18:	str	r0, [fp, #-48]	; 0xffffffd0
   17d1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17d20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d24:	movw	r2, #25971	; 0x6573
   17d28:	movt	r2, #24941	; 0x616d
   17d2c:	eor	r1, r1, r2
   17d30:	movw	r2, #25445	; 0x6365
   17d34:	movt	r2, #28769	; 0x7061
   17d38:	eor	r0, r0, r2
   17d3c:	orr	r0, r0, r1
   17d40:	cmp	r0, #0
   17d44:	bne	17e48 <main@@Base+0x1960>
   17d48:	b	17d4c <main@@Base+0x1864>
   17d4c:	ldr	r0, [fp, #-12]
   17d50:	add	r0, r0, #8
   17d54:	str	r0, [fp, #-12]
   17d58:	ldr	r0, [fp, #-12]
   17d5c:	ldr	r1, [fp, #-16]
   17d60:	bl	1bc60 <main@@Base+0x5778>
   17d64:	str	r1, [fp, #-44]	; 0xffffffd4
   17d68:	str	r0, [fp, #-48]	; 0xffffffd0
   17d6c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17d70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d74:	movw	r2, #25971	; 0x6573
   17d78:	movt	r2, #24436	; 0x5f74
   17d7c:	eor	r1, r1, r2
   17d80:	eor	r0, r0, #116	; 0x74
   17d84:	orr	r0, r1, r0, lsl #24
   17d88:	cmp	r0, #0
   17d8c:	bne	17e30 <main@@Base+0x1948>
   17d90:	b	17d94 <main@@Base+0x18ac>
   17d94:	ldr	r0, [fp, #-8]
   17d98:	ldr	r1, [fp, #-12]
   17d9c:	str	r1, [fp, #-40]	; 0xffffffd8
   17da0:	ldr	r2, [fp, #-16]
   17da4:	movw	r3, #5
   17da8:	bl	1bc98 <main@@Base+0x57b0>
   17dac:	str	r0, [fp, #-12]
   17db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17db4:	ldr	r1, [fp, #-12]
   17db8:	cmp	r0, r1
   17dbc:	beq	17e18 <main@@Base+0x1930>
   17dc0:	ldr	r0, [fp, #-8]
   17dc4:	ldr	r1, [fp, #-12]
   17dc8:	ldr	r2, [fp, #-16]
   17dcc:	sub	r3, fp, #32
   17dd0:	bl	1dc54 <main@@Base+0x776c>
   17dd4:	str	r0, [fp, #-12]
   17dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ddc:	cmp	r0, #0
   17de0:	beq	17e04 <main@@Base+0x191c>
   17de4:	ldr	r0, [fp, #-8]
   17de8:	ldr	r0, [r0]
   17dec:	movw	r1, #34	; 0x22
   17df0:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   17df4:	str	r0, [fp, #-36]	; 0xffffffdc
   17df8:	movw	r1, #0
   17dfc:	cmp	r0, r1
   17e00:	bne	17e08 <main@@Base+0x1920>
   17e04:	b	1aafc <main@@Base+0x4614>
   17e08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e10:	str	r0, [r1]
   17e14:	b	17e2c <main@@Base+0x1944>
   17e18:	ldr	r0, [fp, #-8]
   17e1c:	ldr	r1, [fp, #-12]
   17e20:	ldr	r2, [fp, #-16]
   17e24:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17e28:	str	r0, [fp, #-12]
   17e2c:	b	17e44 <main@@Base+0x195c>
   17e30:	ldr	r0, [fp, #-8]
   17e34:	ldr	r1, [fp, #-12]
   17e38:	ldr	r2, [fp, #-16]
   17e3c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17e40:	str	r0, [fp, #-12]
   17e44:	b	17e5c <main@@Base+0x1974>
   17e48:	ldr	r0, [fp, #-8]
   17e4c:	ldr	r1, [fp, #-12]
   17e50:	ldr	r2, [fp, #-16]
   17e54:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17e58:	str	r0, [fp, #-12]
   17e5c:	b	17f24 <main@@Base+0x1a3c>
   17e60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17e64:	bic	r0, r0, #255	; 0xff
   17e68:	movw	r1, #29440	; 0x7300
   17e6c:	movt	r1, #28783	; 0x706f
   17e70:	teq	r0, r1
   17e74:	bne	17f0c <main@@Base+0x1a24>
   17e78:	b	17e7c <main@@Base+0x1994>
   17e7c:	ldr	r0, [fp, #-8]
   17e80:	ldr	r1, [fp, #-12]
   17e84:	str	r1, [fp, #-40]	; 0xffffffd8
   17e88:	ldr	r2, [fp, #-16]
   17e8c:	movw	r3, #3
   17e90:	bl	1bc98 <main@@Base+0x57b0>
   17e94:	str	r0, [fp, #-12]
   17e98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e9c:	ldr	r1, [fp, #-12]
   17ea0:	cmp	r0, r1
   17ea4:	beq	17ef4 <main@@Base+0x1a0c>
   17ea8:	ldr	r0, [fp, #-8]
   17eac:	ldr	r0, [r0]
   17eb0:	movw	r1, #0
   17eb4:	movw	r2, #32
   17eb8:	movw	r3, #16
   17ebc:	uxth	r3, r3
   17ec0:	bl	2d13c <flatcc_builder_table_add@@Base>
   17ec4:	str	r0, [fp, #-28]	; 0xffffffe4
   17ec8:	movw	r1, #0
   17ecc:	cmp	r0, r1
   17ed0:	bne	17ed8 <main@@Base+0x19f0>
   17ed4:	b	1aafc <main@@Base+0x4614>
   17ed8:	ldr	r0, [fp, #-8]
   17edc:	ldr	r1, [fp, #-12]
   17ee0:	ldr	r2, [fp, #-16]
   17ee4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17ee8:	bl	1dd60 <main@@Base+0x7878>
   17eec:	str	r0, [fp, #-12]
   17ef0:	b	17f08 <main@@Base+0x1a20>
   17ef4:	ldr	r0, [fp, #-8]
   17ef8:	ldr	r1, [fp, #-12]
   17efc:	ldr	r2, [fp, #-16]
   17f00:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17f04:	str	r0, [fp, #-12]
   17f08:	b	17f20 <main@@Base+0x1a38>
   17f0c:	ldr	r0, [fp, #-8]
   17f10:	ldr	r1, [fp, #-12]
   17f14:	ldr	r2, [fp, #-16]
   17f18:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   17f1c:	str	r0, [fp, #-12]
   17f20:	b	17f24 <main@@Base+0x1a3c>
   17f24:	b	17f28 <main@@Base+0x1a40>
   17f28:	b	183c0 <main@@Base+0x1ed8>
   17f2c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   17f30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17f34:	movw	r2, #29556	; 0x7374
   17f38:	movt	r2, #29797	; 0x7465
   17f3c:	eor	r1, r1, r2
   17f40:	eor	r0, r0, #52	; 0x34
   17f44:	orr	r0, r1, r0, lsl #24
   17f48:	cmp	r0, #0
   17f4c:	bne	1807c <main@@Base+0x1b94>
   17f50:	b	17f54 <main@@Base+0x1a6c>
   17f54:	ldr	r0, [fp, #-8]
   17f58:	ldr	r1, [fp, #-12]
   17f5c:	str	r1, [fp, #-40]	; 0xffffffd8
   17f60:	ldr	r2, [fp, #-16]
   17f64:	movw	r3, #5
   17f68:	bl	1bc98 <main@@Base+0x57b0>
   17f6c:	str	r0, [fp, #-12]
   17f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17f74:	ldr	r1, [fp, #-12]
   17f78:	cmp	r0, r1
   17f7c:	beq	18074 <main@@Base+0x1b8c>
   17f80:	ldr	r3, [pc, #4052]	; 18f5c <main@@Base+0x2a74>
   17f84:	ldr	r0, [fp, #-8]
   17f88:	ldr	r0, [r0]
   17f8c:	movw	r1, #4
   17f90:	movw	r2, #2
   17f94:	uxth	r2, r2
   17f98:	bl	2b424 <flatcc_builder_start_vector@@Base>
   17f9c:	cmp	r0, #0
   17fa0:	beq	17fa8 <main@@Base+0x1ac0>
   17fa4:	b	1aafc <main@@Base+0x4614>
   17fa8:	ldr	r0, [fp, #-8]
   17fac:	ldr	r1, [fp, #-12]
   17fb0:	ldr	r2, [fp, #-16]
   17fb4:	sub	r3, fp, #24
   17fb8:	bl	1d434 <main@@Base+0x6f4c>
   17fbc:	str	r0, [fp, #-12]
   17fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc4:	cmp	r0, #0
   17fc8:	beq	18024 <main@@Base+0x1b3c>
   17fcc:	ldr	r0, [fp, #-8]
   17fd0:	ldr	r0, [r0]
   17fd4:	movw	r1, #1
   17fd8:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   17fdc:	str	r0, [fp, #-28]	; 0xffffffe4
   17fe0:	movw	r1, #0
   17fe4:	cmp	r0, r1
   17fe8:	bne	17ff0 <main@@Base+0x1b08>
   17fec:	b	1aafc <main@@Base+0x4614>
   17ff0:	ldr	r0, [fp, #-8]
   17ff4:	ldr	r1, [fp, #-12]
   17ff8:	ldr	r2, [fp, #-16]
   17ffc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18000:	bl	1e47c <main@@Base+0x7f94>
   18004:	str	r0, [fp, #-12]
   18008:	ldr	r0, [fp, #-8]
   1800c:	ldr	r1, [fp, #-12]
   18010:	ldr	r2, [fp, #-16]
   18014:	sub	r3, fp, #24
   18018:	bl	1d804 <main@@Base+0x731c>
   1801c:	str	r0, [fp, #-12]
   18020:	b	17fc0 <main@@Base+0x1ad8>
   18024:	ldr	r0, [fp, #-8]
   18028:	ldr	r0, [r0]
   1802c:	bl	2c904 <flatcc_builder_end_vector@@Base>
   18030:	str	r0, [fp, #-32]	; 0xffffffe0
   18034:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18038:	cmp	r0, #0
   1803c:	beq	18060 <main@@Base+0x1b78>
   18040:	ldr	r0, [fp, #-8]
   18044:	ldr	r0, [r0]
   18048:	movw	r1, #9
   1804c:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18050:	str	r0, [fp, #-36]	; 0xffffffdc
   18054:	movw	r1, #0
   18058:	cmp	r0, r1
   1805c:	bne	18064 <main@@Base+0x1b7c>
   18060:	b	1aafc <main@@Base+0x4614>
   18064:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18068:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1806c:	str	r0, [r1]
   18070:	b	18078 <main@@Base+0x1b90>
   18074:	b	18124 <main@@Base+0x1c3c>
   18078:	b	18120 <main@@Base+0x1c38>
   1807c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18080:	movw	r1, #29556	; 0x7374
   18084:	movt	r1, #29797	; 0x7465
   18088:	teq	r0, r1
   1808c:	bne	18118 <main@@Base+0x1c30>
   18090:	b	18094 <main@@Base+0x1bac>
   18094:	ldr	r0, [fp, #-8]
   18098:	ldr	r1, [fp, #-12]
   1809c:	str	r1, [fp, #-40]	; 0xffffffd8
   180a0:	ldr	r2, [fp, #-16]
   180a4:	movw	r3, #4
   180a8:	bl	1bc98 <main@@Base+0x57b0>
   180ac:	str	r0, [fp, #-12]
   180b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   180b4:	ldr	r1, [fp, #-12]
   180b8:	cmp	r0, r1
   180bc:	beq	18110 <main@@Base+0x1c28>
   180c0:	ldr	r0, [pc, #4024]	; 19080 <main@@Base+0x2b98>
   180c4:	add	r0, pc, r0
   180c8:	ldr	r1, [fp, #-8]
   180cc:	ldr	r2, [fp, #-12]
   180d0:	ldr	r3, [fp, #-16]
   180d4:	ldr	ip, [fp, #-52]	; 0xffffffcc
   180d8:	str	r0, [sp, #28]
   180dc:	mov	r0, r1
   180e0:	mov	r1, r2
   180e4:	mov	r2, r3
   180e8:	movw	r3, #0
   180ec:	movw	lr, #8
   180f0:	uxth	lr, lr
   180f4:	str	lr, [sp]
   180f8:	str	ip, [sp, #4]
   180fc:	ldr	ip, [sp, #28]
   18100:	str	ip, [sp, #8]
   18104:	bl	36500 <flatcc_json_parser_union@@Base>
   18108:	str	r0, [fp, #-12]
   1810c:	b	18114 <main@@Base+0x1c2c>
   18110:	b	18124 <main@@Base+0x1c3c>
   18114:	b	1811c <main@@Base+0x1c34>
   18118:	b	18124 <main@@Base+0x1c3c>
   1811c:	b	18120 <main@@Base+0x1c38>
   18120:	b	183bc <main@@Base+0x1ed4>
   18124:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18128:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1812c:	movw	r2, #29556	; 0x7374
   18130:	movt	r2, #29797	; 0x7465
   18134:	eor	r1, r1, r2
   18138:	eor	r0, r0, #53	; 0x35
   1813c:	orr	r0, r1, r0, lsl #24
   18140:	cmp	r0, #0
   18144:	bne	18274 <main@@Base+0x1d8c>
   18148:	b	1814c <main@@Base+0x1c64>
   1814c:	ldr	r0, [fp, #-8]
   18150:	ldr	r1, [fp, #-12]
   18154:	str	r1, [fp, #-40]	; 0xffffffd8
   18158:	ldr	r2, [fp, #-16]
   1815c:	movw	r3, #5
   18160:	bl	1bc98 <main@@Base+0x57b0>
   18164:	str	r0, [fp, #-12]
   18168:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1816c:	ldr	r1, [fp, #-12]
   18170:	cmp	r0, r1
   18174:	beq	1826c <main@@Base+0x1d84>
   18178:	ldr	r3, [pc, #3548]	; 18f5c <main@@Base+0x2a74>
   1817c:	ldr	r0, [fp, #-8]
   18180:	ldr	r0, [r0]
   18184:	movw	r1, #4
   18188:	movw	r2, #2
   1818c:	uxth	r2, r2
   18190:	bl	2b424 <flatcc_builder_start_vector@@Base>
   18194:	cmp	r0, #0
   18198:	beq	181a0 <main@@Base+0x1cb8>
   1819c:	b	1aafc <main@@Base+0x4614>
   181a0:	ldr	r0, [fp, #-8]
   181a4:	ldr	r1, [fp, #-12]
   181a8:	ldr	r2, [fp, #-16]
   181ac:	sub	r3, fp, #24
   181b0:	bl	1d434 <main@@Base+0x6f4c>
   181b4:	str	r0, [fp, #-12]
   181b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181bc:	cmp	r0, #0
   181c0:	beq	1821c <main@@Base+0x1d34>
   181c4:	ldr	r0, [fp, #-8]
   181c8:	ldr	r0, [r0]
   181cc:	movw	r1, #1
   181d0:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   181d4:	str	r0, [fp, #-28]	; 0xffffffe4
   181d8:	movw	r1, #0
   181dc:	cmp	r0, r1
   181e0:	bne	181e8 <main@@Base+0x1d00>
   181e4:	b	1aafc <main@@Base+0x4614>
   181e8:	ldr	r0, [fp, #-8]
   181ec:	ldr	r1, [fp, #-12]
   181f0:	ldr	r2, [fp, #-16]
   181f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   181f8:	bl	1e47c <main@@Base+0x7f94>
   181fc:	str	r0, [fp, #-12]
   18200:	ldr	r0, [fp, #-8]
   18204:	ldr	r1, [fp, #-12]
   18208:	ldr	r2, [fp, #-16]
   1820c:	sub	r3, fp, #24
   18210:	bl	1d804 <main@@Base+0x731c>
   18214:	str	r0, [fp, #-12]
   18218:	b	181b8 <main@@Base+0x1cd0>
   1821c:	ldr	r0, [fp, #-8]
   18220:	ldr	r0, [r0]
   18224:	bl	2c904 <flatcc_builder_end_vector@@Base>
   18228:	str	r0, [fp, #-32]	; 0xffffffe0
   1822c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18230:	cmp	r0, #0
   18234:	beq	18258 <main@@Base+0x1d70>
   18238:	ldr	r0, [fp, #-8]
   1823c:	ldr	r0, [r0]
   18240:	movw	r1, #31
   18244:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18248:	str	r0, [fp, #-36]	; 0xffffffdc
   1824c:	movw	r1, #0
   18250:	cmp	r0, r1
   18254:	bne	1825c <main@@Base+0x1d74>
   18258:	b	1aafc <main@@Base+0x4614>
   1825c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18260:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18264:	str	r0, [r1]
   18268:	b	18270 <main@@Base+0x1d88>
   1826c:	b	1827c <main@@Base+0x1d94>
   18270:	b	18278 <main@@Base+0x1d90>
   18274:	b	1827c <main@@Base+0x1d94>
   18278:	b	183b8 <main@@Base+0x1ed0>
   1827c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18280:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18284:	movw	r2, #29556	; 0x7374
   18288:	movt	r2, #29797	; 0x7465
   1828c:	eor	r1, r1, r2
   18290:	movw	r2, #31088	; 0x7970
   18294:	movt	r2, #24436	; 0x5f74
   18298:	eor	r0, r0, r2
   1829c:	orr	r0, r0, r1
   182a0:	cmp	r0, #0
   182a4:	bne	183a0 <main@@Base+0x1eb8>
   182a8:	b	182ac <main@@Base+0x1dc4>
   182ac:	ldr	r0, [fp, #-12]
   182b0:	add	r0, r0, #8
   182b4:	str	r0, [fp, #-12]
   182b8:	ldr	r0, [fp, #-12]
   182bc:	ldr	r1, [fp, #-16]
   182c0:	bl	1bc60 <main@@Base+0x5778>
   182c4:	str	r1, [fp, #-44]	; 0xffffffd4
   182c8:	str	r0, [fp, #-48]	; 0xffffffd0
   182cc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   182d0:	mov	r1, #1694498816	; 0x65000000
   182d4:	teq	r1, r0, lsl #24
   182d8:	bne	18388 <main@@Base+0x1ea0>
   182dc:	b	182e0 <main@@Base+0x1df8>
   182e0:	ldr	r0, [fp, #-8]
   182e4:	ldr	r1, [fp, #-12]
   182e8:	str	r1, [fp, #-40]	; 0xffffffd8
   182ec:	ldr	r2, [fp, #-16]
   182f0:	movw	r3, #1
   182f4:	bl	1bc98 <main@@Base+0x57b0>
   182f8:	str	r0, [fp, #-12]
   182fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18300:	ldr	r1, [fp, #-12]
   18304:	cmp	r0, r1
   18308:	beq	18370 <main@@Base+0x1e88>
   1830c:	ldr	r0, [pc, #4040]	; 192dc <main@@Base+0x2df4>
   18310:	add	r0, pc, r0
   18314:	ldr	r1, [pc, #4036]	; 192e0 <main@@Base+0x2df8>
   18318:	add	r1, pc, r1
   1831c:	ldr	r2, [fp, #-8]
   18320:	ldr	r3, [fp, #-12]
   18324:	ldr	ip, [fp, #-16]
   18328:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1832c:	str	r0, [sp, #24]
   18330:	mov	r0, r2
   18334:	str	r1, [sp, #20]
   18338:	mov	r1, r3
   1833c:	mov	r2, ip
   18340:	movw	r3, #0
   18344:	movw	ip, #8
   18348:	uxth	ip, ip
   1834c:	str	ip, [sp]
   18350:	str	lr, [sp, #4]
   18354:	ldr	ip, [sp, #24]
   18358:	str	ip, [sp, #8]
   1835c:	ldr	lr, [sp, #20]
   18360:	str	lr, [sp, #12]
   18364:	bl	366ec <flatcc_json_parser_union_type@@Base>
   18368:	str	r0, [fp, #-12]
   1836c:	b	18384 <main@@Base+0x1e9c>
   18370:	ldr	r0, [fp, #-8]
   18374:	ldr	r1, [fp, #-12]
   18378:	ldr	r2, [fp, #-16]
   1837c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18380:	str	r0, [fp, #-12]
   18384:	b	1839c <main@@Base+0x1eb4>
   18388:	ldr	r0, [fp, #-8]
   1838c:	ldr	r1, [fp, #-12]
   18390:	ldr	r2, [fp, #-16]
   18394:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18398:	str	r0, [fp, #-12]
   1839c:	b	183b4 <main@@Base+0x1ecc>
   183a0:	ldr	r0, [fp, #-8]
   183a4:	ldr	r1, [fp, #-12]
   183a8:	ldr	r2, [fp, #-16]
   183ac:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   183b0:	str	r0, [fp, #-12]
   183b4:	b	183b8 <main@@Base+0x1ed0>
   183b8:	b	183bc <main@@Base+0x1ed4>
   183bc:	b	183c0 <main@@Base+0x1ed8>
   183c0:	b	183c4 <main@@Base+0x1edc>
   183c4:	b	1aa48 <main@@Base+0x4560>
   183c8:			; <UNDEFINED> instruction: 0x00045cb0
   183cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   183d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   183d4:	movw	r2, #65535	; 0xffff
   183d8:	movt	r2, #26162	; 0x6632
   183dc:	subs	r0, r2, r0
   183e0:	movw	r2, #29556	; 0x7374
   183e4:	movt	r2, #29797	; 0x7465
   183e8:	sbcs	r1, r2, r1
   183ec:	bcc	19440 <main@@Base+0x2f58>
   183f0:	b	183f4 <main@@Base+0x1f0c>
   183f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   183f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   183fc:	movw	r2, #29556	; 0x7374
   18400:	movt	r2, #29797	; 0x7465
   18404:	eor	r1, r1, r2
   18408:	movw	r2, #29281	; 0x7261
   1840c:	movt	r2, #24946	; 0x6172
   18410:	eor	r0, r0, r2
   18414:	orr	r0, r0, r1
   18418:	cmp	r0, #0
   1841c:	bne	18d3c <main@@Base+0x2854>
   18420:	b	18424 <main@@Base+0x1f3c>
   18424:	ldr	r0, [fp, #-12]
   18428:	add	r0, r0, #8
   1842c:	str	r0, [fp, #-12]
   18430:	ldr	r0, [fp, #-12]
   18434:	ldr	r1, [fp, #-16]
   18438:	bl	1bc60 <main@@Base+0x5778>
   1843c:	str	r1, [fp, #-44]	; 0xffffffd4
   18440:	str	r0, [fp, #-48]	; 0xffffffd0
   18444:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1844c:	movw	r2, #26989	; 0x696d
   18450:	movt	r2, #29810	; 0x7472
   18454:	subs	r0, r2, r0
   18458:	movw	r2, #26227	; 0x6673
   1845c:	movt	r2, #31087	; 0x796f
   18460:	sbcs	r1, r2, r1
   18464:	bcc	18840 <main@@Base+0x2358>
   18468:	b	1846c <main@@Base+0x1f84>
   1846c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18470:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18474:	movw	r2, #26210	; 0x6662
   18478:	movt	r2, #31087	; 0x796f
   1847c:	eor	r1, r1, r2
   18480:	movw	r2, #27763	; 0x6c73
   18484:	movt	r2, #28527	; 0x6f6f
   18488:	eor	r0, r0, r2
   1848c:	orr	r0, r0, r1
   18490:	cmp	r0, #0
   18494:	bne	18640 <main@@Base+0x2158>
   18498:	b	1849c <main@@Base+0x1fb4>
   1849c:	ldr	r0, [fp, #-8]
   184a0:	ldr	r1, [fp, #-12]
   184a4:	str	r1, [fp, #-40]	; 0xffffffd8
   184a8:	ldr	r2, [fp, #-16]
   184ac:	movw	r3, #8
   184b0:	bl	1bc98 <main@@Base+0x57b0>
   184b4:	str	r0, [fp, #-12]
   184b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   184bc:	ldr	r1, [fp, #-12]
   184c0:	cmp	r0, r1
   184c4:	beq	18638 <main@@Base+0x2150>
   184c8:	ldr	r0, [fp, #-8]
   184cc:	ldr	r0, [r0]
   184d0:	movw	r1, #1
   184d4:	movw	r2, #1
   184d8:	uxth	r2, r2
   184dc:	mvn	r3, #0
   184e0:	bl	2b424 <flatcc_builder_start_vector@@Base>
   184e4:	cmp	r0, #0
   184e8:	beq	184f0 <main@@Base+0x2008>
   184ec:	b	1aafc <main@@Base+0x4614>
   184f0:	ldr	r0, [fp, #-8]
   184f4:	ldr	r1, [fp, #-12]
   184f8:	ldr	r2, [fp, #-16]
   184fc:	sub	r3, fp, #24
   18500:	bl	1d434 <main@@Base+0x6f4c>
   18504:	str	r0, [fp, #-12]
   18508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1850c:	cmp	r0, #0
   18510:	beq	185e8 <main@@Base+0x2100>
   18514:	movw	r0, #0
   18518:	strb	r0, [fp, #-61]	; 0xffffffc3
   1851c:	ldr	r0, [fp, #-8]
   18520:	ldr	r0, [r0]
   18524:	movw	r1, #1
   18528:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   1852c:	str	r0, [fp, #-28]	; 0xffffffe4
   18530:	movw	r1, #0
   18534:	cmp	r0, r1
   18538:	bne	18544 <main@@Base+0x205c>
   1853c:	b	1aafc <main@@Base+0x4614>
   18540:	ldrdeq	r5, [r4], -ip
   18544:	ldr	r0, [fp, #-8]
   18548:	ldr	r1, [fp, #-12]
   1854c:	str	r1, [fp, #-40]	; 0xffffffd8
   18550:	ldr	r2, [fp, #-16]
   18554:	sub	r3, fp, #61	; 0x3d
   18558:	bl	1ed4c <main@@Base+0x8864>
   1855c:	str	r0, [fp, #-12]
   18560:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18564:	ldr	r1, [fp, #-12]
   18568:	cmp	r0, r1
   1856c:	bne	185c0 <main@@Base+0x20d8>
   18570:	ldr	r0, [pc, #4044]	; 19544 <main@@Base+0x305c>
   18574:	add	r3, pc, r0
   18578:	ldr	r0, [fp, #-8]
   1857c:	ldr	r1, [fp, #-12]
   18580:	str	r1, [fp, #-40]	; 0xffffffd8
   18584:	ldr	r2, [fp, #-16]
   18588:	sub	ip, fp, #61	; 0x3d
   1858c:	str	ip, [sp]
   18590:	bl	1ee68 <main@@Base+0x8980>
   18594:	str	r0, [fp, #-12]
   18598:	ldr	r0, [fp, #-12]
   1859c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   185a0:	cmp	r0, r1
   185a4:	beq	185b8 <main@@Base+0x20d0>
   185a8:	ldr	r0, [fp, #-12]
   185ac:	ldr	r1, [fp, #-16]
   185b0:	cmp	r0, r1
   185b4:	bne	185bc <main@@Base+0x20d4>
   185b8:	b	1aafc <main@@Base+0x4614>
   185bc:	b	185c0 <main@@Base+0x20d8>
   185c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   185c4:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   185c8:	bl	1f04c <main@@Base+0x8b64>
   185cc:	ldr	r0, [fp, #-8]
   185d0:	ldr	r1, [fp, #-12]
   185d4:	ldr	r2, [fp, #-16]
   185d8:	sub	r3, fp, #24
   185dc:	bl	1d804 <main@@Base+0x731c>
   185e0:	str	r0, [fp, #-12]
   185e4:	b	18508 <main@@Base+0x2020>
   185e8:	ldr	r0, [fp, #-8]
   185ec:	ldr	r0, [r0]
   185f0:	bl	2c904 <flatcc_builder_end_vector@@Base>
   185f4:	str	r0, [fp, #-32]	; 0xffffffe0
   185f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185fc:	cmp	r0, #0
   18600:	beq	18624 <main@@Base+0x213c>
   18604:	ldr	r0, [fp, #-8]
   18608:	ldr	r0, [r0]
   1860c:	movw	r1, #24
   18610:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18614:	str	r0, [fp, #-36]	; 0xffffffdc
   18618:	movw	r1, #0
   1861c:	cmp	r0, r1
   18620:	bne	18628 <main@@Base+0x2140>
   18624:	b	1aafc <main@@Base+0x4614>
   18628:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1862c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18630:	str	r0, [r1]
   18634:	b	1863c <main@@Base+0x2154>
   18638:	b	18648 <main@@Base+0x2160>
   1863c:	b	18644 <main@@Base+0x215c>
   18640:	b	18648 <main@@Base+0x2160>
   18644:	b	1883c <main@@Base+0x2354>
   18648:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1864c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18650:	movw	r2, #26227	; 0x6673
   18654:	movt	r2, #31087	; 0x796f
   18658:	eor	r1, r1, r2
   1865c:	movw	r2, #29797	; 0x7465
   18660:	movt	r2, #28530	; 0x6f72
   18664:	eor	r0, r0, r2
   18668:	orr	r0, r0, r1
   1866c:	cmp	r0, #0
   18670:	bne	18824 <main@@Base+0x233c>
   18674:	b	18678 <main@@Base+0x2190>
   18678:	ldr	r0, [fp, #-12]
   1867c:	add	r0, r0, #8
   18680:	str	r0, [fp, #-12]
   18684:	ldr	r0, [fp, #-12]
   18688:	ldr	r1, [fp, #-16]
   1868c:	bl	1bc60 <main@@Base+0x5778>
   18690:	str	r1, [fp, #-44]	; 0xffffffd4
   18694:	str	r0, [fp, #-48]	; 0xffffffd0
   18698:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1869c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   186a0:	movw	r2, #29556	; 0x7374
   186a4:	movt	r2, #100	; 0x64
   186a8:	eor	r2, r2, r1, lsr #8
   186ac:	lsr	r0, r0, #8
   186b0:	orr	r0, r0, r1, lsl #24
   186b4:	movw	r1, #25460	; 0x6374
   186b8:	movt	r1, #29301	; 0x7275
   186bc:	eor	r0, r0, r1
   186c0:	orr	r0, r0, r2
   186c4:	cmp	r0, #0
   186c8:	bne	1880c <main@@Base+0x2324>
   186cc:	b	186d0 <main@@Base+0x21e8>
   186d0:	ldr	r0, [fp, #-8]
   186d4:	ldr	r1, [fp, #-12]
   186d8:	str	r1, [fp, #-40]	; 0xffffffd8
   186dc:	ldr	r2, [fp, #-16]
   186e0:	movw	r3, #7
   186e4:	bl	1bc98 <main@@Base+0x57b0>
   186e8:	str	r0, [fp, #-12]
   186ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   186f0:	ldr	r1, [fp, #-12]
   186f4:	cmp	r0, r1
   186f8:	beq	187f4 <main@@Base+0x230c>
   186fc:	ldr	r3, [pc, #3980]	; 19690 <main@@Base+0x31a8>
   18700:	ldr	r0, [fp, #-8]
   18704:	ldr	r0, [r0]
   18708:	movw	r1, #8
   1870c:	movw	r2, #4
   18710:	uxth	r2, r2
   18714:	bl	2b424 <flatcc_builder_start_vector@@Base>
   18718:	cmp	r0, #0
   1871c:	beq	18728 <main@@Base+0x2240>
   18720:	b	1aafc <main@@Base+0x4614>
   18724:	andeq	r5, r4, r0, asr r9
   18728:	ldr	r0, [fp, #-8]
   1872c:	ldr	r1, [fp, #-12]
   18730:	ldr	r2, [fp, #-16]
   18734:	sub	r3, fp, #24
   18738:	bl	1d434 <main@@Base+0x6f4c>
   1873c:	str	r0, [fp, #-12]
   18740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18744:	cmp	r0, #0
   18748:	beq	187a4 <main@@Base+0x22bc>
   1874c:	ldr	r0, [fp, #-8]
   18750:	ldr	r0, [r0]
   18754:	movw	r1, #1
   18758:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   1875c:	str	r0, [fp, #-28]	; 0xffffffe4
   18760:	movw	r1, #0
   18764:	cmp	r0, r1
   18768:	bne	18770 <main@@Base+0x2288>
   1876c:	b	1aafc <main@@Base+0x4614>
   18770:	ldr	r0, [fp, #-8]
   18774:	ldr	r1, [fp, #-12]
   18778:	ldr	r2, [fp, #-16]
   1877c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18780:	bl	1f078 <main@@Base+0x8b90>
   18784:	str	r0, [fp, #-12]
   18788:	ldr	r0, [fp, #-8]
   1878c:	ldr	r1, [fp, #-12]
   18790:	ldr	r2, [fp, #-16]
   18794:	sub	r3, fp, #24
   18798:	bl	1d804 <main@@Base+0x731c>
   1879c:	str	r0, [fp, #-12]
   187a0:	b	18740 <main@@Base+0x2258>
   187a4:	ldr	r0, [fp, #-8]
   187a8:	ldr	r0, [r0]
   187ac:	bl	2c904 <flatcc_builder_end_vector@@Base>
   187b0:	str	r0, [fp, #-32]	; 0xffffffe0
   187b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187b8:	cmp	r0, #0
   187bc:	beq	187e0 <main@@Base+0x22f8>
   187c0:	ldr	r0, [fp, #-8]
   187c4:	ldr	r0, [r0]
   187c8:	movw	r1, #29
   187cc:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   187d0:	str	r0, [fp, #-36]	; 0xffffffdc
   187d4:	movw	r1, #0
   187d8:	cmp	r0, r1
   187dc:	bne	187e4 <main@@Base+0x22fc>
   187e0:	b	1aafc <main@@Base+0x4614>
   187e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   187ec:	str	r0, [r1]
   187f0:	b	18808 <main@@Base+0x2320>
   187f4:	ldr	r0, [fp, #-8]
   187f8:	ldr	r1, [fp, #-12]
   187fc:	ldr	r2, [fp, #-16]
   18800:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18804:	str	r0, [fp, #-12]
   18808:	b	18820 <main@@Base+0x2338>
   1880c:	ldr	r0, [fp, #-8]
   18810:	ldr	r1, [fp, #-12]
   18814:	ldr	r2, [fp, #-16]
   18818:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1881c:	str	r0, [fp, #-12]
   18820:	b	18838 <main@@Base+0x2350>
   18824:	ldr	r0, [fp, #-8]
   18828:	ldr	r1, [fp, #-12]
   1882c:	ldr	r2, [fp, #-16]
   18830:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18834:	str	r0, [fp, #-12]
   18838:	b	1883c <main@@Base+0x2354>
   1883c:	b	18d38 <main@@Base+0x2850>
   18840:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18844:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18848:	movw	r2, #26227	; 0x6673
   1884c:	movt	r2, #31087	; 0x796f
   18850:	eor	r1, r1, r2
   18854:	movw	r2, #26990	; 0x696e
   18858:	movt	r2, #29810	; 0x7472
   1885c:	eor	r0, r0, r2
   18860:	orr	r0, r0, r1
   18864:	cmp	r0, #0
   18868:	bne	18b60 <main@@Base+0x2678>
   1886c:	b	18870 <main@@Base+0x2388>
   18870:	ldr	r0, [fp, #-12]
   18874:	add	r0, r0, #8
   18878:	str	r0, [fp, #-12]
   1887c:	ldr	r0, [fp, #-12]
   18880:	ldr	r1, [fp, #-16]
   18884:	bl	1bc60 <main@@Base+0x5778>
   18888:	str	r1, [fp, #-44]	; 0xffffffd4
   1888c:	str	r0, [fp, #-48]	; 0xffffffd0
   18890:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   18894:	movw	r1, #0
   18898:	movt	r1, #26418	; 0x6732
   1889c:	teq	r1, r0, lsl #16
   188a0:	bne	189ec <main@@Base+0x2504>
   188a4:	b	188a8 <main@@Base+0x23c0>
   188a8:	ldr	r0, [fp, #-8]
   188ac:	ldr	r1, [fp, #-12]
   188b0:	str	r1, [fp, #-40]	; 0xffffffd8
   188b4:	ldr	r2, [fp, #-16]
   188b8:	movw	r3, #2
   188bc:	bl	1bc98 <main@@Base+0x57b0>
   188c0:	str	r0, [fp, #-12]
   188c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188c8:	ldr	r1, [fp, #-12]
   188cc:	cmp	r0, r1
   188d0:	beq	189d4 <main@@Base+0x24ec>
   188d4:	ldr	r0, [fp, #-8]
   188d8:	ldr	r0, [r0]
   188dc:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   188e0:	cmp	r0, #0
   188e4:	beq	188ec <main@@Base+0x2404>
   188e8:	b	1aafc <main@@Base+0x4614>
   188ec:	ldr	r0, [fp, #-8]
   188f0:	ldr	r1, [fp, #-12]
   188f4:	ldr	r2, [fp, #-16]
   188f8:	sub	r3, fp, #24
   188fc:	bl	1d434 <main@@Base+0x6f4c>
   18900:	str	r0, [fp, #-12]
   18904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18908:	cmp	r0, #0
   1890c:	beq	18984 <main@@Base+0x249c>
   18910:	ldr	r0, [fp, #-8]
   18914:	ldr	r1, [fp, #-12]
   18918:	ldr	r2, [fp, #-16]
   1891c:	sub	r3, fp, #32
   18920:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   18924:	str	r0, [fp, #-12]
   18928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1892c:	cmp	r0, #0
   18930:	beq	18954 <main@@Base+0x246c>
   18934:	ldr	r0, [fp, #-8]
   18938:	ldr	r0, [r0]
   1893c:	movw	r1, #1
   18940:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   18944:	str	r0, [fp, #-36]	; 0xffffffdc
   18948:	movw	r1, #0
   1894c:	cmp	r0, r1
   18950:	bne	1895c <main@@Base+0x2474>
   18954:	b	1aafc <main@@Base+0x4614>
   18958:	andeq	r5, r4, r4, asr #14
   1895c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18960:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18964:	str	r0, [r1]
   18968:	ldr	r0, [fp, #-8]
   1896c:	ldr	r1, [fp, #-12]
   18970:	ldr	r2, [fp, #-16]
   18974:	sub	r3, fp, #24
   18978:	bl	1d804 <main@@Base+0x731c>
   1897c:	str	r0, [fp, #-12]
   18980:	b	18904 <main@@Base+0x241c>
   18984:	ldr	r0, [fp, #-8]
   18988:	ldr	r0, [r0]
   1898c:	bl	2b610 <flatcc_builder_end_offset_vector@@Base>
   18990:	str	r0, [fp, #-32]	; 0xffffffe0
   18994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18998:	cmp	r0, #0
   1899c:	beq	189c0 <main@@Base+0x24d8>
   189a0:	ldr	r0, [fp, #-8]
   189a4:	ldr	r0, [r0]
   189a8:	movw	r1, #28
   189ac:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   189b0:	str	r0, [fp, #-36]	; 0xffffffdc
   189b4:	movw	r1, #0
   189b8:	cmp	r0, r1
   189bc:	bne	189c4 <main@@Base+0x24dc>
   189c0:	b	1aafc <main@@Base+0x4614>
   189c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   189cc:	str	r0, [r1]
   189d0:	b	189e8 <main@@Base+0x2500>
   189d4:	ldr	r0, [fp, #-8]
   189d8:	ldr	r1, [fp, #-12]
   189dc:	ldr	r2, [fp, #-16]
   189e0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   189e4:	str	r0, [fp, #-12]
   189e8:	b	18b5c <main@@Base+0x2674>
   189ec:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   189f0:	mov	r1, #1728053248	; 0x67000000
   189f4:	teq	r1, r0, lsl #24
   189f8:	bne	18b44 <main@@Base+0x265c>
   189fc:	b	18a00 <main@@Base+0x2518>
   18a00:	ldr	r0, [fp, #-8]
   18a04:	ldr	r1, [fp, #-12]
   18a08:	str	r1, [fp, #-40]	; 0xffffffd8
   18a0c:	ldr	r2, [fp, #-16]
   18a10:	movw	r3, #1
   18a14:	bl	1bc98 <main@@Base+0x57b0>
   18a18:	str	r0, [fp, #-12]
   18a1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18a20:	ldr	r1, [fp, #-12]
   18a24:	cmp	r0, r1
   18a28:	beq	18b2c <main@@Base+0x2644>
   18a2c:	ldr	r0, [fp, #-8]
   18a30:	ldr	r0, [r0]
   18a34:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   18a38:	cmp	r0, #0
   18a3c:	beq	18a44 <main@@Base+0x255c>
   18a40:	b	1aafc <main@@Base+0x4614>
   18a44:	ldr	r0, [fp, #-8]
   18a48:	ldr	r1, [fp, #-12]
   18a4c:	ldr	r2, [fp, #-16]
   18a50:	sub	r3, fp, #24
   18a54:	bl	1d434 <main@@Base+0x6f4c>
   18a58:	str	r0, [fp, #-12]
   18a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a60:	cmp	r0, #0
   18a64:	beq	18adc <main@@Base+0x25f4>
   18a68:	ldr	r0, [fp, #-8]
   18a6c:	ldr	r1, [fp, #-12]
   18a70:	ldr	r2, [fp, #-16]
   18a74:	sub	r3, fp, #32
   18a78:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   18a7c:	str	r0, [fp, #-12]
   18a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a84:	cmp	r0, #0
   18a88:	beq	18aac <main@@Base+0x25c4>
   18a8c:	ldr	r0, [fp, #-8]
   18a90:	ldr	r0, [r0]
   18a94:	movw	r1, #1
   18a98:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   18a9c:	str	r0, [fp, #-36]	; 0xffffffdc
   18aa0:	movw	r1, #0
   18aa4:	cmp	r0, r1
   18aa8:	bne	18ab4 <main@@Base+0x25cc>
   18aac:	b	1aafc <main@@Base+0x4614>
   18ab0:	andeq	r5, r4, r0, ror #11
   18ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18abc:	str	r0, [r1]
   18ac0:	ldr	r0, [fp, #-8]
   18ac4:	ldr	r1, [fp, #-12]
   18ac8:	ldr	r2, [fp, #-16]
   18acc:	sub	r3, fp, #24
   18ad0:	bl	1d804 <main@@Base+0x731c>
   18ad4:	str	r0, [fp, #-12]
   18ad8:	b	18a5c <main@@Base+0x2574>
   18adc:	ldr	r0, [fp, #-8]
   18ae0:	ldr	r0, [r0]
   18ae4:	bl	2b610 <flatcc_builder_end_offset_vector@@Base>
   18ae8:	str	r0, [fp, #-32]	; 0xffffffe0
   18aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18af0:	cmp	r0, #0
   18af4:	beq	18b18 <main@@Base+0x2630>
   18af8:	ldr	r0, [fp, #-8]
   18afc:	ldr	r0, [r0]
   18b00:	movw	r1, #10
   18b04:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18b08:	str	r0, [fp, #-36]	; 0xffffffdc
   18b0c:	movw	r1, #0
   18b10:	cmp	r0, r1
   18b14:	bne	18b1c <main@@Base+0x2634>
   18b18:	b	1aafc <main@@Base+0x4614>
   18b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18b24:	str	r0, [r1]
   18b28:	b	18b40 <main@@Base+0x2658>
   18b2c:	ldr	r0, [fp, #-8]
   18b30:	ldr	r1, [fp, #-12]
   18b34:	ldr	r2, [fp, #-16]
   18b38:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18b3c:	str	r0, [fp, #-12]
   18b40:	b	18b58 <main@@Base+0x2670>
   18b44:	ldr	r0, [fp, #-8]
   18b48:	ldr	r1, [fp, #-12]
   18b4c:	ldr	r2, [fp, #-16]
   18b50:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18b54:	str	r0, [fp, #-12]
   18b58:	b	18b5c <main@@Base+0x2674>
   18b5c:	b	18d34 <main@@Base+0x284c>
   18b60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18b68:	movw	r2, #26228	; 0x6674
   18b6c:	movt	r2, #31087	; 0x796f
   18b70:	eor	r1, r1, r2
   18b74:	movw	r2, #27749	; 0x6c65
   18b78:	movt	r2, #24930	; 0x6162
   18b7c:	eor	r0, r0, r2
   18b80:	orr	r0, r0, r1
   18b84:	cmp	r0, #0
   18b88:	bne	18d1c <main@@Base+0x2834>
   18b8c:	b	18b90 <main@@Base+0x26a8>
   18b90:	ldr	r0, [fp, #-12]
   18b94:	add	r0, r0, #8
   18b98:	str	r0, [fp, #-12]
   18b9c:	ldr	r0, [fp, #-12]
   18ba0:	ldr	r1, [fp, #-16]
   18ba4:	bl	1bc60 <main@@Base+0x5778>
   18ba8:	str	r1, [fp, #-44]	; 0xffffffd4
   18bac:	str	r0, [fp, #-48]	; 0xffffffd0
   18bb0:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   18bb4:	mov	r1, #1929379840	; 0x73000000
   18bb8:	teq	r1, r0, lsl #24
   18bbc:	bne	18d04 <main@@Base+0x281c>
   18bc0:	b	18bc4 <main@@Base+0x26dc>
   18bc4:	ldr	r0, [fp, #-8]
   18bc8:	ldr	r1, [fp, #-12]
   18bcc:	str	r1, [fp, #-40]	; 0xffffffd8
   18bd0:	ldr	r2, [fp, #-16]
   18bd4:	movw	r3, #1
   18bd8:	bl	1bc98 <main@@Base+0x57b0>
   18bdc:	str	r0, [fp, #-12]
   18be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18be4:	ldr	r1, [fp, #-12]
   18be8:	cmp	r0, r1
   18bec:	beq	18cec <main@@Base+0x2804>
   18bf0:	ldr	r0, [fp, #-8]
   18bf4:	ldr	r0, [r0]
   18bf8:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   18bfc:	cmp	r0, #0
   18c00:	beq	18c08 <main@@Base+0x2720>
   18c04:	b	1aafc <main@@Base+0x4614>
   18c08:	ldr	r0, [fp, #-8]
   18c0c:	ldr	r1, [fp, #-12]
   18c10:	ldr	r2, [fp, #-16]
   18c14:	sub	r3, fp, #24
   18c18:	bl	1d434 <main@@Base+0x6f4c>
   18c1c:	str	r0, [fp, #-12]
   18c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c24:	cmp	r0, #0
   18c28:	beq	18c9c <main@@Base+0x27b4>
   18c2c:	ldr	r0, [fp, #-8]
   18c30:	ldr	r1, [fp, #-12]
   18c34:	ldr	r2, [fp, #-16]
   18c38:	sub	r3, fp, #32
   18c3c:	bl	17158 <main@@Base+0xc70>
   18c40:	str	r0, [fp, #-12]
   18c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c48:	cmp	r0, #0
   18c4c:	beq	18c70 <main@@Base+0x2788>
   18c50:	ldr	r0, [fp, #-8]
   18c54:	ldr	r0, [r0]
   18c58:	movw	r1, #1
   18c5c:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   18c60:	str	r0, [fp, #-36]	; 0xffffffdc
   18c64:	movw	r1, #0
   18c68:	cmp	r0, r1
   18c6c:	bne	18c74 <main@@Base+0x278c>
   18c70:	b	1aafc <main@@Base+0x4614>
   18c74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c7c:	str	r0, [r1]
   18c80:	ldr	r0, [fp, #-8]
   18c84:	ldr	r1, [fp, #-12]
   18c88:	ldr	r2, [fp, #-16]
   18c8c:	sub	r3, fp, #24
   18c90:	bl	1d804 <main@@Base+0x731c>
   18c94:	str	r0, [fp, #-12]
   18c98:	b	18c20 <main@@Base+0x2738>
   18c9c:	ldr	r0, [fp, #-8]
   18ca0:	ldr	r0, [r0]
   18ca4:	bl	2b610 <flatcc_builder_end_offset_vector@@Base>
   18ca8:	str	r0, [fp, #-32]	; 0xffffffe0
   18cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cb0:	cmp	r0, #0
   18cb4:	beq	18cd8 <main@@Base+0x27f0>
   18cb8:	ldr	r0, [fp, #-8]
   18cbc:	ldr	r0, [r0]
   18cc0:	movw	r1, #11
   18cc4:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   18ccc:	movw	r1, #0
   18cd0:	cmp	r0, r1
   18cd4:	bne	18cdc <main@@Base+0x27f4>
   18cd8:	b	1aafc <main@@Base+0x4614>
   18cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ce0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18ce4:	str	r0, [r1]
   18ce8:	b	18d00 <main@@Base+0x2818>
   18cec:	ldr	r0, [fp, #-8]
   18cf0:	ldr	r1, [fp, #-12]
   18cf4:	ldr	r2, [fp, #-16]
   18cf8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18cfc:	str	r0, [fp, #-12]
   18d00:	b	18d18 <main@@Base+0x2830>
   18d04:	ldr	r0, [fp, #-8]
   18d08:	ldr	r1, [fp, #-12]
   18d0c:	ldr	r2, [fp, #-16]
   18d10:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18d14:	str	r0, [fp, #-12]
   18d18:	b	18d30 <main@@Base+0x2848>
   18d1c:	ldr	r0, [fp, #-8]
   18d20:	ldr	r1, [fp, #-12]
   18d24:	ldr	r2, [fp, #-16]
   18d28:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18d2c:	str	r0, [fp, #-12]
   18d30:	b	18d34 <main@@Base+0x284c>
   18d34:	b	18d38 <main@@Base+0x2850>
   18d38:	b	1943c <main@@Base+0x2f54>
   18d3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d44:	movw	r2, #28787	; 0x7073
   18d48:	movt	r2, #25965	; 0x656d
   18d4c:	subs	r0, r2, r0
   18d50:	movw	r2, #29556	; 0x7374
   18d54:	movt	r2, #29797	; 0x7465
   18d58:	sbcs	r1, r2, r1
   18d5c:	bcc	18ff8 <main@@Base+0x2b10>
   18d60:	b	18d64 <main@@Base+0x287c>
   18d64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18d68:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18d6c:	movw	r2, #29556	; 0x7374
   18d70:	movt	r2, #29797	; 0x7465
   18d74:	eor	r1, r1, r2
   18d78:	movw	r2, #29541	; 0x7365
   18d7c:	movt	r2, #25185	; 0x6261
   18d80:	eor	r0, r0, r2
   18d84:	orr	r0, r0, r1
   18d88:	cmp	r0, #0
   18d8c:	bne	18e80 <main@@Base+0x2998>
   18d90:	b	18d94 <main@@Base+0x28ac>
   18d94:	ldr	r0, [fp, #-12]
   18d98:	add	r0, r0, #8
   18d9c:	str	r0, [fp, #-12]
   18da0:	ldr	r0, [fp, #-12]
   18da4:	ldr	r1, [fp, #-16]
   18da8:	bl	1bc60 <main@@Base+0x5778>
   18dac:	str	r1, [fp, #-44]	; 0xffffffd4
   18db0:	str	r0, [fp, #-48]	; 0xffffffd0
   18db4:	ldrh	r0, [fp, #-42]	; 0xffffffd6
   18db8:	movw	r1, #0
   18dbc:	movt	r1, #13876	; 0x3634
   18dc0:	teq	r1, r0, lsl #16
   18dc4:	bne	18e68 <main@@Base+0x2980>
   18dc8:	b	18dcc <main@@Base+0x28e4>
   18dcc:	ldr	r0, [fp, #-8]
   18dd0:	ldr	r1, [fp, #-12]
   18dd4:	str	r1, [fp, #-40]	; 0xffffffd8
   18dd8:	ldr	r2, [fp, #-16]
   18ddc:	movw	r3, #2
   18de0:	bl	1bc98 <main@@Base+0x57b0>
   18de4:	str	r0, [fp, #-12]
   18de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18dec:	ldr	r1, [fp, #-12]
   18df0:	cmp	r0, r1
   18df4:	beq	18e50 <main@@Base+0x2968>
   18df8:	ldr	r0, [fp, #-8]
   18dfc:	ldr	r1, [fp, #-12]
   18e00:	ldr	r2, [fp, #-16]
   18e04:	sub	r3, fp, #32
   18e08:	bl	1f35c <main@@Base+0x8e74>
   18e0c:	str	r0, [fp, #-12]
   18e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e14:	cmp	r0, #0
   18e18:	beq	18e3c <main@@Base+0x2954>
   18e1c:	ldr	r0, [fp, #-8]
   18e20:	ldr	r0, [r0]
   18e24:	movw	r1, #35	; 0x23
   18e28:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   18e2c:	str	r0, [fp, #-36]	; 0xffffffdc
   18e30:	movw	r1, #0
   18e34:	cmp	r0, r1
   18e38:	bne	18e40 <main@@Base+0x2958>
   18e3c:	b	1aafc <main@@Base+0x4614>
   18e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e48:	str	r0, [r1]
   18e4c:	b	18e64 <main@@Base+0x297c>
   18e50:	ldr	r0, [fp, #-8]
   18e54:	ldr	r1, [fp, #-12]
   18e58:	ldr	r2, [fp, #-16]
   18e5c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18e60:	str	r0, [fp, #-12]
   18e64:	b	18e7c <main@@Base+0x2994>
   18e68:	ldr	r0, [fp, #-8]
   18e6c:	ldr	r1, [fp, #-12]
   18e70:	ldr	r2, [fp, #-16]
   18e74:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18e78:	str	r0, [fp, #-12]
   18e7c:	b	18ff4 <main@@Base+0x2b0c>
   18e80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18e88:	movw	r2, #29556	; 0x7374
   18e8c:	movt	r2, #29797	; 0x7465
   18e90:	eor	r1, r1, r2
   18e94:	movw	r2, #28524	; 0x6f6c
   18e98:	movt	r2, #25199	; 0x626f
   18e9c:	eor	r0, r0, r2
   18ea0:	orr	r0, r0, r1
   18ea4:	cmp	r0, #0
   18ea8:	bne	18fdc <main@@Base+0x2af4>
   18eac:	b	18eb0 <main@@Base+0x29c8>
   18eb0:	ldr	r0, [fp, #-8]
   18eb4:	ldr	r1, [fp, #-12]
   18eb8:	str	r1, [fp, #-40]	; 0xffffffd8
   18ebc:	ldr	r2, [fp, #-16]
   18ec0:	movw	r3, #8
   18ec4:	bl	1bc98 <main@@Base+0x57b0>
   18ec8:	str	r0, [fp, #-12]
   18ecc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ed0:	ldr	r1, [fp, #-12]
   18ed4:	cmp	r0, r1
   18ed8:	beq	18fc4 <main@@Base+0x2adc>
   18edc:	movw	r0, #0
   18ee0:	strb	r0, [fp, #-62]	; 0xffffffc2
   18ee4:	ldr	r0, [fp, #-8]
   18ee8:	ldr	r1, [fp, #-12]
   18eec:	str	r1, [fp, #-40]	; 0xffffffd8
   18ef0:	ldr	r2, [fp, #-16]
   18ef4:	sub	r3, fp, #62	; 0x3e
   18ef8:	bl	1ed4c <main@@Base+0x8864>
   18efc:	str	r0, [fp, #-12]
   18f00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f04:	ldr	r1, [fp, #-12]
   18f08:	cmp	r0, r1
   18f0c:	bne	18f64 <main@@Base+0x2a7c>
   18f10:	ldr	r0, [pc, #4064]	; 19ef8 <main@@Base+0x3a10>
   18f14:	add	r3, pc, r0
   18f18:	ldr	r0, [fp, #-8]
   18f1c:	ldr	r1, [fp, #-12]
   18f20:	str	r1, [fp, #-40]	; 0xffffffd8
   18f24:	ldr	r2, [fp, #-16]
   18f28:	sub	ip, fp, #62	; 0x3e
   18f2c:	str	ip, [sp]
   18f30:	bl	1ee68 <main@@Base+0x8980>
   18f34:	str	r0, [fp, #-12]
   18f38:	ldr	r0, [fp, #-12]
   18f3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f40:	cmp	r0, r1
   18f44:	beq	18f58 <main@@Base+0x2a70>
   18f48:	ldr	r0, [fp, #-12]
   18f4c:	ldr	r1, [fp, #-16]
   18f50:	cmp	r0, r1
   18f54:	bne	18f60 <main@@Base+0x2a78>
   18f58:	b	1aafc <main@@Base+0x4614>
   18f5c:	svccc	0x00ffffff
   18f60:	b	18f64 <main@@Base+0x2a7c>
   18f64:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   18f68:	cmp	r0, #1
   18f6c:	bne	18f84 <main@@Base+0x2a9c>
   18f70:	ldr	r0, [fp, #-8]
   18f74:	ldr	r0, [r0, #8]
   18f78:	and	r0, r0, #2
   18f7c:	cmp	r0, #0
   18f80:	beq	18fc0 <main@@Base+0x2ad8>
   18f84:	ldr	r0, [fp, #-8]
   18f88:	ldr	r0, [r0]
   18f8c:	movw	r1, #15
   18f90:	movw	r2, #1
   18f94:	movw	r3, #1
   18f98:	uxth	r3, r3
   18f9c:	bl	2d13c <flatcc_builder_table_add@@Base>
   18fa0:	str	r0, [fp, #-28]	; 0xffffffe4
   18fa4:	movw	r1, #0
   18fa8:	cmp	r0, r1
   18fac:	bne	18fb4 <main@@Base+0x2acc>
   18fb0:	b	1aafc <main@@Base+0x4614>
   18fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18fb8:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   18fbc:	bl	1f04c <main@@Base+0x8b64>
   18fc0:	b	18fd8 <main@@Base+0x2af0>
   18fc4:	ldr	r0, [fp, #-8]
   18fc8:	ldr	r1, [fp, #-12]
   18fcc:	ldr	r2, [fp, #-16]
   18fd0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18fd4:	str	r0, [fp, #-12]
   18fd8:	b	18ff0 <main@@Base+0x2b08>
   18fdc:	ldr	r0, [fp, #-8]
   18fe0:	ldr	r1, [fp, #-12]
   18fe4:	ldr	r2, [fp, #-16]
   18fe8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   18fec:	str	r0, [fp, #-12]
   18ff0:	b	18ff4 <main@@Base+0x2b0c>
   18ff4:	b	19438 <main@@Base+0x2f50>
   18ff8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19000:	mvn	r2, #-1711276032	; 0x9a000000
   19004:	subs	r0, r2, r0
   19008:	movw	r2, #29556	; 0x7374
   1900c:	movt	r2, #29797	; 0x7465
   19010:	sbcs	r1, r2, r1
   19014:	bcc	19150 <main@@Base+0x2c68>
   19018:	b	1901c <main@@Base+0x2b34>
   1901c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19020:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19024:	movw	r2, #29556	; 0x7374
   19028:	movt	r2, #29797	; 0x7465
   1902c:	eor	r1, r1, r2
   19030:	movw	r2, #28788	; 0x7074
   19034:	movt	r2, #25965	; 0x656d
   19038:	eor	r0, r0, r2
   1903c:	orr	r0, r0, r1
   19040:	cmp	r0, #0
   19044:	bne	19138 <main@@Base+0x2c50>
   19048:	b	1904c <main@@Base+0x2b64>
   1904c:	ldr	r0, [fp, #-12]
   19050:	add	r0, r0, #8
   19054:	str	r0, [fp, #-12]
   19058:	ldr	r0, [fp, #-12]
   1905c:	ldr	r1, [fp, #-16]
   19060:	bl	1bc60 <main@@Base+0x5778>
   19064:	str	r1, [fp, #-44]	; 0xffffffd4
   19068:	str	r0, [fp, #-48]	; 0xffffffd0
   1906c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   19070:	mov	r1, #2030043136	; 0x79000000
   19074:	teq	r1, r0, lsl #24
   19078:	bne	19120 <main@@Base+0x2c38>
   1907c:	b	19084 <main@@Base+0x2b9c>
   19080:	andeq	r6, r0, r4, ror r6
   19084:	ldr	r0, [fp, #-8]
   19088:	ldr	r1, [fp, #-12]
   1908c:	str	r1, [fp, #-40]	; 0xffffffd8
   19090:	ldr	r2, [fp, #-16]
   19094:	movw	r3, #1
   19098:	bl	1bc98 <main@@Base+0x57b0>
   1909c:	str	r0, [fp, #-12]
   190a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190a4:	ldr	r1, [fp, #-12]
   190a8:	cmp	r0, r1
   190ac:	beq	19108 <main@@Base+0x2c20>
   190b0:	ldr	r0, [fp, #-8]
   190b4:	ldr	r1, [fp, #-12]
   190b8:	ldr	r2, [fp, #-16]
   190bc:	sub	r3, fp, #32
   190c0:	bl	1f734 <main@@Base+0x924c>
   190c4:	str	r0, [fp, #-12]
   190c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   190cc:	cmp	r0, #0
   190d0:	beq	190f4 <main@@Base+0x2c0c>
   190d4:	ldr	r0, [fp, #-8]
   190d8:	ldr	r0, [r0]
   190dc:	movw	r1, #14
   190e0:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   190e4:	str	r0, [fp, #-36]	; 0xffffffdc
   190e8:	movw	r1, #0
   190ec:	cmp	r0, r1
   190f0:	bne	190f8 <main@@Base+0x2c10>
   190f4:	b	1aafc <main@@Base+0x4614>
   190f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   190fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19100:	str	r0, [r1]
   19104:	b	1911c <main@@Base+0x2c34>
   19108:	ldr	r0, [fp, #-8]
   1910c:	ldr	r1, [fp, #-12]
   19110:	ldr	r2, [fp, #-16]
   19114:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19118:	str	r0, [fp, #-12]
   1911c:	b	19134 <main@@Base+0x2c4c>
   19120:	ldr	r0, [fp, #-8]
   19124:	ldr	r1, [fp, #-12]
   19128:	ldr	r2, [fp, #-16]
   1912c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19130:	str	r0, [fp, #-12]
   19134:	b	1914c <main@@Base+0x2c64>
   19138:	ldr	r0, [fp, #-8]
   1913c:	ldr	r1, [fp, #-12]
   19140:	ldr	r2, [fp, #-16]
   19144:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19148:	str	r0, [fp, #-12]
   1914c:	b	19434 <main@@Base+0x2f4c>
   19150:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   19154:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19158:	movw	r2, #29797	; 0x7465
   1915c:	eor	r2, r2, r1, lsr #16
   19160:	orr	r0, r0, r1, lsl #16
   19164:	movw	r1, #26162	; 0x6632
   19168:	movt	r1, #29556	; 0x7374
   1916c:	eor	r0, r0, r1
   19170:	orr	r0, r0, r2
   19174:	cmp	r0, #0
   19178:	bne	192b4 <main@@Base+0x2dcc>
   1917c:	b	19180 <main@@Base+0x2c98>
   19180:	ldr	r0, [fp, #-8]
   19184:	ldr	r1, [fp, #-12]
   19188:	str	r1, [fp, #-40]	; 0xffffffd8
   1918c:	ldr	r2, [fp, #-16]
   19190:	movw	r3, #6
   19194:	bl	1bc98 <main@@Base+0x57b0>
   19198:	str	r0, [fp, #-12]
   1919c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191a0:	ldr	r1, [fp, #-12]
   191a4:	cmp	r0, r1
   191a8:	beq	1929c <main@@Base+0x2db4>
   191ac:	vldr	s0, [pc, #1008]	; 195a4 <main@@Base+0x30bc>
   191b0:	vstr	s0, [fp, #-68]	; 0xffffffbc
   191b4:	ldr	r0, [fp, #-8]
   191b8:	ldr	r1, [fp, #-12]
   191bc:	str	r1, [fp, #-40]	; 0xffffffd8
   191c0:	ldr	r2, [fp, #-16]
   191c4:	sub	r3, fp, #68	; 0x44
   191c8:	bl	34b58 <flatcc_json_parser_float@@Base>
   191cc:	str	r0, [fp, #-12]
   191d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   191d4:	ldr	r1, [fp, #-12]
   191d8:	cmp	r0, r1
   191dc:	bne	19230 <main@@Base+0x2d48>
   191e0:	ldr	r0, [pc, #4084]	; 1a1dc <main@@Base+0x3cf4>
   191e4:	add	r3, pc, r0
   191e8:	ldr	r0, [fp, #-8]
   191ec:	ldr	r1, [fp, #-12]
   191f0:	str	r1, [fp, #-40]	; 0xffffffd8
   191f4:	ldr	r2, [fp, #-16]
   191f8:	sub	ip, fp, #68	; 0x44
   191fc:	str	ip, [sp]
   19200:	bl	1fbf8 <main@@Base+0x9710>
   19204:	str	r0, [fp, #-12]
   19208:	ldr	r0, [fp, #-12]
   1920c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19210:	cmp	r0, r1
   19214:	beq	19228 <main@@Base+0x2d40>
   19218:	ldr	r0, [fp, #-12]
   1921c:	ldr	r1, [fp, #-16]
   19220:	cmp	r0, r1
   19224:	bne	1922c <main@@Base+0x2d44>
   19228:	b	1aafc <main@@Base+0x4614>
   1922c:	b	19230 <main@@Base+0x2d48>
   19230:	vldr	s0, [fp, #-68]	; 0xffffffbc
   19234:	vcvt.f64.f32	d16, s0
   19238:	vmov.f64	d17, #8	; 0x40400000  3.0
   1923c:	vcmp.f64	d16, d17
   19240:	vmrs	APSR_nzcv, fpscr
   19244:	bne	1925c <main@@Base+0x2d74>
   19248:	ldr	r0, [fp, #-8]
   1924c:	ldr	r0, [r0, #8]
   19250:	and	r0, r0, #2
   19254:	cmp	r0, #0
   19258:	beq	19298 <main@@Base+0x2db0>
   1925c:	ldr	r0, [fp, #-8]
   19260:	ldr	r0, [r0]
   19264:	movw	r1, #26
   19268:	movw	r2, #4
   1926c:	movw	r3, #4
   19270:	uxth	r3, r3
   19274:	bl	2d13c <flatcc_builder_table_add@@Base>
   19278:	str	r0, [fp, #-28]	; 0xffffffe4
   1927c:	movw	r1, #0
   19280:	cmp	r0, r1
   19284:	bne	1928c <main@@Base+0x2da4>
   19288:	b	1aafc <main@@Base+0x4614>
   1928c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19290:	vldr	s0, [fp, #-68]	; 0xffffffbc
   19294:	bl	1fde0 <main@@Base+0x98f8>
   19298:	b	192b0 <main@@Base+0x2dc8>
   1929c:	ldr	r0, [fp, #-8]
   192a0:	ldr	r1, [fp, #-12]
   192a4:	ldr	r2, [fp, #-16]
   192a8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   192ac:	str	r0, [fp, #-12]
   192b0:	b	19430 <main@@Base+0x2f48>
   192b4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   192b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   192bc:	movw	r2, #29556	; 0x7374
   192c0:	movt	r2, #29797	; 0x7465
   192c4:	eor	r1, r1, r2
   192c8:	eor	r0, r0, #102	; 0x66
   192cc:	orr	r0, r1, r0, lsl #24
   192d0:	cmp	r0, #0
   192d4:	bne	19418 <main@@Base+0x2f30>
   192d8:	b	192e4 <main@@Base+0x2dfc>
   192dc:			; <UNDEFINED> instruction: 0x00044db0
   192e0:	andeq	r6, r0, r0, lsr #8
   192e4:	ldr	r0, [fp, #-8]
   192e8:	ldr	r1, [fp, #-12]
   192ec:	str	r1, [fp, #-40]	; 0xffffffd8
   192f0:	ldr	r2, [fp, #-16]
   192f4:	movw	r3, #5
   192f8:	bl	1bc98 <main@@Base+0x57b0>
   192fc:	str	r0, [fp, #-12]
   19300:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19304:	ldr	r1, [fp, #-12]
   19308:	cmp	r0, r1
   1930c:	beq	19400 <main@@Base+0x2f18>
   19310:	vldr	s0, [pc, #652]	; 195a4 <main@@Base+0x30bc>
   19314:	vstr	s0, [fp, #-72]	; 0xffffffb8
   19318:	ldr	r0, [fp, #-8]
   1931c:	ldr	r1, [fp, #-12]
   19320:	str	r1, [fp, #-40]	; 0xffffffd8
   19324:	ldr	r2, [fp, #-16]
   19328:	sub	r3, fp, #72	; 0x48
   1932c:	bl	34b58 <flatcc_json_parser_float@@Base>
   19330:	str	r0, [fp, #-12]
   19334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19338:	ldr	r1, [fp, #-12]
   1933c:	cmp	r0, r1
   19340:	bne	19394 <main@@Base+0x2eac>
   19344:	ldr	r0, [pc, #4020]	; 1a300 <main@@Base+0x3e18>
   19348:	add	r3, pc, r0
   1934c:	ldr	r0, [fp, #-8]
   19350:	ldr	r1, [fp, #-12]
   19354:	str	r1, [fp, #-40]	; 0xffffffd8
   19358:	ldr	r2, [fp, #-16]
   1935c:	sub	ip, fp, #72	; 0x48
   19360:	str	ip, [sp]
   19364:	bl	1fbf8 <main@@Base+0x9710>
   19368:	str	r0, [fp, #-12]
   1936c:	ldr	r0, [fp, #-12]
   19370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19374:	cmp	r0, r1
   19378:	beq	1938c <main@@Base+0x2ea4>
   1937c:	ldr	r0, [fp, #-12]
   19380:	ldr	r1, [fp, #-16]
   19384:	cmp	r0, r1
   19388:	bne	19390 <main@@Base+0x2ea8>
   1938c:	b	1aafc <main@@Base+0x4614>
   19390:	b	19394 <main@@Base+0x2eac>
   19394:	vldr	d16, [pc, #932]	; 19740 <main@@Base+0x3258>
   19398:	vldr	s0, [fp, #-72]	; 0xffffffb8
   1939c:	vcvt.f64.f32	d17, s0
   193a0:	vcmp.f64	d17, d16
   193a4:	vmrs	APSR_nzcv, fpscr
   193a8:	bne	193c0 <main@@Base+0x2ed8>
   193ac:	ldr	r0, [fp, #-8]
   193b0:	ldr	r0, [r0, #8]
   193b4:	and	r0, r0, #2
   193b8:	cmp	r0, #0
   193bc:	beq	193fc <main@@Base+0x2f14>
   193c0:	ldr	r0, [fp, #-8]
   193c4:	ldr	r0, [r0]
   193c8:	movw	r1, #25
   193cc:	movw	r2, #4
   193d0:	movw	r3, #4
   193d4:	uxth	r3, r3
   193d8:	bl	2d13c <flatcc_builder_table_add@@Base>
   193dc:	str	r0, [fp, #-28]	; 0xffffffe4
   193e0:	movw	r1, #0
   193e4:	cmp	r0, r1
   193e8:	bne	193f0 <main@@Base+0x2f08>
   193ec:	b	1aafc <main@@Base+0x4614>
   193f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   193f4:	vldr	s0, [fp, #-72]	; 0xffffffb8
   193f8:	bl	1fde0 <main@@Base+0x98f8>
   193fc:	b	19414 <main@@Base+0x2f2c>
   19400:	ldr	r0, [fp, #-8]
   19404:	ldr	r1, [fp, #-12]
   19408:	ldr	r2, [fp, #-16]
   1940c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19410:	str	r0, [fp, #-12]
   19414:	b	1942c <main@@Base+0x2f44>
   19418:	ldr	r0, [fp, #-8]
   1941c:	ldr	r1, [fp, #-12]
   19420:	ldr	r2, [fp, #-16]
   19424:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19428:	str	r0, [fp, #-12]
   1942c:	b	19430 <main@@Base+0x2f48>
   19430:	b	19434 <main@@Base+0x2f4c>
   19434:	b	19438 <main@@Base+0x2f50>
   19438:	b	1943c <main@@Base+0x2f54>
   1943c:	b	1aa44 <main@@Base+0x455c>
   19440:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19444:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19448:	movw	r2, #29543	; 0x7367
   1944c:	movt	r2, #26721	; 0x6861
   19450:	subs	r0, r2, r0
   19454:	movw	r2, #29556	; 0x7374
   19458:	movt	r2, #29797	; 0x7465
   1945c:	sbcs	r1, r2, r1
   19460:	bcc	195e8 <main@@Base+0x3100>
   19464:	b	19468 <main@@Base+0x2f80>
   19468:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   1946c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19470:	movw	r2, #29797	; 0x7465
   19474:	eor	r2, r2, r1, lsr #16
   19478:	orr	r0, r0, r1, lsl #16
   1947c:	movw	r1, #26163	; 0x6633
   19480:	movt	r1, #29556	; 0x7374
   19484:	eor	r0, r0, r1
   19488:	orr	r0, r0, r2
   1948c:	cmp	r0, #0
   19490:	bne	195d0 <main@@Base+0x30e8>
   19494:	b	19498 <main@@Base+0x2fb0>
   19498:	ldr	r0, [fp, #-8]
   1949c:	ldr	r1, [fp, #-12]
   194a0:	str	r1, [fp, #-40]	; 0xffffffd8
   194a4:	ldr	r2, [fp, #-16]
   194a8:	movw	r3, #6
   194ac:	bl	1bc98 <main@@Base+0x57b0>
   194b0:	str	r0, [fp, #-12]
   194b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194b8:	ldr	r1, [fp, #-12]
   194bc:	cmp	r0, r1
   194c0:	beq	195b8 <main@@Base+0x30d0>
   194c4:	vldr	s0, [pc, #216]	; 195a4 <main@@Base+0x30bc>
   194c8:	vstr	s0, [fp, #-76]	; 0xffffffb4
   194cc:	ldr	r0, [fp, #-8]
   194d0:	ldr	r1, [fp, #-12]
   194d4:	str	r1, [fp, #-40]	; 0xffffffd8
   194d8:	ldr	r2, [fp, #-16]
   194dc:	sub	r3, fp, #76	; 0x4c
   194e0:	bl	34b58 <flatcc_json_parser_float@@Base>
   194e4:	str	r0, [fp, #-12]
   194e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   194ec:	ldr	r1, [fp, #-12]
   194f0:	cmp	r0, r1
   194f4:	bne	1954c <main@@Base+0x3064>
   194f8:	ldr	r0, [pc, #4052]	; 1a4d4 <main@@Base+0x3fec>
   194fc:	add	r3, pc, r0
   19500:	ldr	r0, [fp, #-8]
   19504:	ldr	r1, [fp, #-12]
   19508:	str	r1, [fp, #-40]	; 0xffffffd8
   1950c:	ldr	r2, [fp, #-16]
   19510:	sub	ip, fp, #76	; 0x4c
   19514:	str	ip, [sp]
   19518:	bl	1fbf8 <main@@Base+0x9710>
   1951c:	str	r0, [fp, #-12]
   19520:	ldr	r0, [fp, #-12]
   19524:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19528:	cmp	r0, r1
   1952c:	beq	19540 <main@@Base+0x3058>
   19530:	ldr	r0, [fp, #-12]
   19534:	ldr	r1, [fp, #-16]
   19538:	cmp	r0, r1
   1953c:	bne	19548 <main@@Base+0x3060>
   19540:	b	1aafc <main@@Base+0x4614>
   19544:	andeq	r4, r4, ip, asr fp
   19548:	b	1954c <main@@Base+0x3064>
   1954c:	vldr	s0, [fp, #-76]	; 0xffffffb4
   19550:	vcvt.f64.f32	d16, s0
   19554:	vcmp.f64	d16, #0.0
   19558:	vmrs	APSR_nzcv, fpscr
   1955c:	bne	19574 <main@@Base+0x308c>
   19560:	ldr	r0, [fp, #-8]
   19564:	ldr	r0, [r0, #8]
   19568:	and	r0, r0, #2
   1956c:	cmp	r0, #0
   19570:	beq	195b4 <main@@Base+0x30cc>
   19574:	ldr	r0, [fp, #-8]
   19578:	ldr	r0, [r0]
   1957c:	movw	r1, #27
   19580:	movw	r2, #4
   19584:	movw	r3, #4
   19588:	uxth	r3, r3
   1958c:	bl	2d13c <flatcc_builder_table_add@@Base>
   19590:	str	r0, [fp, #-28]	; 0xffffffe4
   19594:	movw	r1, #0
   19598:	cmp	r0, r1
   1959c:	bne	195a8 <main@@Base+0x30c0>
   195a0:	b	1aafc <main@@Base+0x4614>
   195a4:	andeq	r0, r0, r0
   195a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   195ac:	vldr	s0, [fp, #-76]	; 0xffffffb4
   195b0:	bl	1fde0 <main@@Base+0x98f8>
   195b4:	b	195cc <main@@Base+0x30e4>
   195b8:	ldr	r0, [fp, #-8]
   195bc:	ldr	r1, [fp, #-12]
   195c0:	ldr	r2, [fp, #-16]
   195c4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   195c8:	str	r0, [fp, #-12]
   195cc:	b	195e4 <main@@Base+0x30fc>
   195d0:	ldr	r0, [fp, #-8]
   195d4:	ldr	r1, [fp, #-12]
   195d8:	ldr	r2, [fp, #-16]
   195dc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   195e0:	str	r0, [fp, #-12]
   195e4:	b	1aa40 <main@@Base+0x4558>
   195e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   195ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   195f0:	movw	r2, #29556	; 0x7374
   195f4:	movt	r2, #29797	; 0x7465
   195f8:	eor	r1, r1, r2
   195fc:	movw	r2, #29544	; 0x7368
   19600:	movt	r2, #26721	; 0x6861
   19604:	eor	r0, r0, r2
   19608:	orr	r0, r0, r1
   1960c:	cmp	r0, #0
   19610:	bne	1a220 <main@@Base+0x3d38>
   19614:	b	19618 <main@@Base+0x3130>
   19618:	ldr	r0, [fp, #-12]
   1961c:	add	r0, r0, #8
   19620:	str	r0, [fp, #-12]
   19624:	ldr	r0, [fp, #-12]
   19628:	ldr	r1, [fp, #-16]
   1962c:	bl	1bc60 <main@@Base+0x5778>
   19630:	str	r1, [fp, #-44]	; 0xffffffd4
   19634:	str	r0, [fp, #-48]	; 0xffffffd0
   19638:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1963c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19640:	movw	r2, #30256	; 0x7630
   19644:	movt	r2, #26222	; 0x666e
   19648:	subs	r0, r2, r0
   1964c:	movw	r2, #13407	; 0x345f
   19650:	movt	r2, #29494	; 0x7336
   19654:	sbcs	r1, r2, r1
   19658:	bcc	1993c <main@@Base+0x3454>
   1965c:	b	19660 <main@@Base+0x3178>
   19660:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19664:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19668:	movw	r2, #12895	; 0x325f
   1966c:	movt	r2, #29491	; 0x7333
   19670:	eor	r1, r1, r2
   19674:	movw	r2, #30257	; 0x7631
   19678:	movt	r2, #26222	; 0x666e
   1967c:	eor	r0, r0, r2
   19680:	orr	r0, r0, r1
   19684:	cmp	r0, #0
   19688:	bne	19924 <main@@Base+0x343c>
   1968c:	b	19694 <main@@Base+0x31ac>
   19690:	svcne	0x00ffffff
   19694:	ldr	r0, [fp, #-8]
   19698:	ldr	r1, [fp, #-12]
   1969c:	str	r1, [fp, #-40]	; 0xffffffd8
   196a0:	ldr	r2, [fp, #-16]
   196a4:	movw	r3, #8
   196a8:	bl	1bc98 <main@@Base+0x57b0>
   196ac:	str	r0, [fp, #-12]
   196b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196b4:	ldr	r1, [fp, #-12]
   196b8:	cmp	r0, r1
   196bc:	beq	197ac <main@@Base+0x32c4>
   196c0:	movw	r0, #0
   196c4:	str	r0, [fp, #-80]	; 0xffffffb0
   196c8:	ldr	r0, [fp, #-8]
   196cc:	ldr	r1, [fp, #-12]
   196d0:	str	r1, [fp, #-40]	; 0xffffffd8
   196d4:	ldr	r2, [fp, #-16]
   196d8:	sub	r3, fp, #80	; 0x50
   196dc:	bl	1fe0c <main@@Base+0x9924>
   196e0:	str	r0, [fp, #-12]
   196e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196e8:	ldr	r1, [fp, #-12]
   196ec:	cmp	r0, r1
   196f0:	bne	1974c <main@@Base+0x3264>
   196f4:	ldr	r0, [pc, #4072]	; 1a6e4 <main@@Base+0x41fc>
   196f8:	add	r3, pc, r0
   196fc:	ldr	r0, [fp, #-8]
   19700:	ldr	r1, [fp, #-12]
   19704:	str	r1, [fp, #-40]	; 0xffffffd8
   19708:	ldr	r2, [fp, #-16]
   1970c:	sub	ip, fp, #80	; 0x50
   19710:	str	ip, [sp]
   19714:	bl	1fee4 <main@@Base+0x99fc>
   19718:	str	r0, [fp, #-12]
   1971c:	ldr	r0, [fp, #-12]
   19720:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19724:	cmp	r0, r1
   19728:	beq	1973c <main@@Base+0x3254>
   1972c:	ldr	r0, [fp, #-12]
   19730:	ldr	r1, [fp, #-16]
   19734:	cmp	r0, r1
   19738:	bne	19748 <main@@Base+0x3260>
   1973c:	b	1aafc <main@@Base+0x4614>
   19740:	andeq	r0, r0, r0
   19744:			; <UNDEFINED> instruction: 0x41132cbc
   19748:	b	1974c <main@@Base+0x3264>
   1974c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   19750:	cmp	r0, #0
   19754:	bne	1976c <main@@Base+0x3284>
   19758:	ldr	r0, [fp, #-8]
   1975c:	ldr	r0, [r0, #8]
   19760:	and	r0, r0, #2
   19764:	cmp	r0, #0
   19768:	beq	197a8 <main@@Base+0x32c0>
   1976c:	ldr	r0, [fp, #-8]
   19770:	ldr	r0, [r0]
   19774:	movw	r1, #16
   19778:	movw	r2, #4
   1977c:	movw	r3, #4
   19780:	uxth	r3, r3
   19784:	bl	2d13c <flatcc_builder_table_add@@Base>
   19788:	str	r0, [fp, #-28]	; 0xffffffe4
   1978c:	movw	r1, #0
   19790:	cmp	r0, r1
   19794:	bne	1979c <main@@Base+0x32b4>
   19798:	b	1aafc <main@@Base+0x4614>
   1979c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197a0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   197a4:	bl	200c8 <main@@Base+0x9be0>
   197a8:	b	19920 <main@@Base+0x3438>
   197ac:	ldr	r0, [fp, #-12]
   197b0:	add	r0, r0, #8
   197b4:	str	r0, [fp, #-12]
   197b8:	ldr	r0, [fp, #-12]
   197bc:	ldr	r1, [fp, #-16]
   197c0:	bl	1bc60 <main@@Base+0x5778>
   197c4:	str	r1, [fp, #-44]	; 0xffffffd4
   197c8:	str	r0, [fp, #-48]	; 0xffffffd0
   197cc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   197d0:	mov	r1, #1627389952	; 0x61000000
   197d4:	teq	r1, r0, lsl #24
   197d8:	bne	19908 <main@@Base+0x3420>
   197dc:	b	197e0 <main@@Base+0x32f8>
   197e0:	ldr	r0, [fp, #-8]
   197e4:	ldr	r1, [fp, #-12]
   197e8:	str	r1, [fp, #-40]	; 0xffffffd8
   197ec:	ldr	r2, [fp, #-16]
   197f0:	movw	r3, #1
   197f4:	bl	1bc98 <main@@Base+0x57b0>
   197f8:	str	r0, [fp, #-12]
   197fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19800:	ldr	r1, [fp, #-12]
   19804:	cmp	r0, r1
   19808:	beq	198f0 <main@@Base+0x3408>
   1980c:	movw	r0, #0
   19810:	str	r0, [fp, #-84]	; 0xffffffac
   19814:	ldr	r0, [fp, #-8]
   19818:	ldr	r1, [fp, #-12]
   1981c:	str	r1, [fp, #-40]	; 0xffffffd8
   19820:	ldr	r2, [fp, #-16]
   19824:	sub	r3, fp, #84	; 0x54
   19828:	bl	1fe0c <main@@Base+0x9924>
   1982c:	str	r0, [fp, #-12]
   19830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19834:	ldr	r1, [fp, #-12]
   19838:	cmp	r0, r1
   1983c:	bne	19890 <main@@Base+0x33a8>
   19840:	ldr	r0, [pc, #4092]	; 1a844 <main@@Base+0x435c>
   19844:	add	r3, pc, r0
   19848:	ldr	r0, [fp, #-8]
   1984c:	ldr	r1, [fp, #-12]
   19850:	str	r1, [fp, #-40]	; 0xffffffd8
   19854:	ldr	r2, [fp, #-16]
   19858:	sub	ip, fp, #84	; 0x54
   1985c:	str	ip, [sp]
   19860:	bl	1fee4 <main@@Base+0x99fc>
   19864:	str	r0, [fp, #-12]
   19868:	ldr	r0, [fp, #-12]
   1986c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19870:	cmp	r0, r1
   19874:	beq	19888 <main@@Base+0x33a0>
   19878:	ldr	r0, [fp, #-12]
   1987c:	ldr	r1, [fp, #-16]
   19880:	cmp	r0, r1
   19884:	bne	1988c <main@@Base+0x33a4>
   19888:	b	1aafc <main@@Base+0x4614>
   1988c:	b	19890 <main@@Base+0x33a8>
   19890:	ldr	r0, [fp, #-84]	; 0xffffffac
   19894:	cmp	r0, #0
   19898:	bne	198b0 <main@@Base+0x33c8>
   1989c:	ldr	r0, [fp, #-8]
   198a0:	ldr	r0, [r0, #8]
   198a4:	and	r0, r0, #2
   198a8:	cmp	r0, #0
   198ac:	beq	198ec <main@@Base+0x3404>
   198b0:	ldr	r0, [fp, #-8]
   198b4:	ldr	r0, [r0]
   198b8:	movw	r1, #20
   198bc:	movw	r2, #4
   198c0:	movw	r3, #4
   198c4:	uxth	r3, r3
   198c8:	bl	2d13c <flatcc_builder_table_add@@Base>
   198cc:	str	r0, [fp, #-28]	; 0xffffffe4
   198d0:	movw	r1, #0
   198d4:	cmp	r0, r1
   198d8:	bne	198e0 <main@@Base+0x33f8>
   198dc:	b	1aafc <main@@Base+0x4614>
   198e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   198e4:	ldr	r1, [fp, #-84]	; 0xffffffac
   198e8:	bl	200c8 <main@@Base+0x9be0>
   198ec:	b	19904 <main@@Base+0x341c>
   198f0:	ldr	r0, [fp, #-8]
   198f4:	ldr	r1, [fp, #-12]
   198f8:	ldr	r2, [fp, #-16]
   198fc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19900:	str	r0, [fp, #-12]
   19904:	b	1991c <main@@Base+0x3434>
   19908:	ldr	r0, [fp, #-8]
   1990c:	ldr	r1, [fp, #-12]
   19910:	ldr	r2, [fp, #-16]
   19914:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19918:	str	r0, [fp, #-12]
   1991c:	b	19920 <main@@Base+0x3438>
   19920:	b	19938 <main@@Base+0x3450>
   19924:	ldr	r0, [fp, #-8]
   19928:	ldr	r1, [fp, #-12]
   1992c:	ldr	r2, [fp, #-16]
   19930:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19934:	str	r0, [fp, #-12]
   19938:	b	1a21c <main@@Base+0x3d34>
   1993c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19944:	movw	r2, #30256	; 0x7630
   19948:	movt	r2, #26222	; 0x666e
   1994c:	subs	r0, r2, r0
   19950:	movw	r2, #12895	; 0x325f
   19954:	movt	r2, #30003	; 0x7533
   19958:	sbcs	r1, r2, r1
   1995c:	bcc	19c5c <main@@Base+0x3774>
   19960:	b	19964 <main@@Base+0x347c>
   19964:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19968:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1996c:	movw	r2, #13407	; 0x345f
   19970:	movt	r2, #29494	; 0x7336
   19974:	eor	r1, r1, r2
   19978:	movw	r2, #30257	; 0x7631
   1997c:	movt	r2, #26222	; 0x666e
   19980:	eor	r0, r0, r2
   19984:	orr	r0, r0, r1
   19988:	cmp	r0, #0
   1998c:	bne	19c44 <main@@Base+0x375c>
   19990:	b	19994 <main@@Base+0x34ac>
   19994:	ldr	r0, [fp, #-8]
   19998:	ldr	r1, [fp, #-12]
   1999c:	str	r1, [fp, #-40]	; 0xffffffd8
   199a0:	ldr	r2, [fp, #-16]
   199a4:	movw	r3, #8
   199a8:	bl	1bc98 <main@@Base+0x57b0>
   199ac:	str	r0, [fp, #-12]
   199b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199b4:	ldr	r1, [fp, #-12]
   199b8:	cmp	r0, r1
   199bc:	beq	19ab8 <main@@Base+0x35d0>
   199c0:	mov	r0, #0
   199c4:	str	r0, [sp, #100]	; 0x64
   199c8:	str	r0, [sp, #96]	; 0x60
   199cc:	ldr	r0, [fp, #-8]
   199d0:	ldr	r1, [fp, #-12]
   199d4:	str	r1, [fp, #-40]	; 0xffffffd8
   199d8:	ldr	r2, [fp, #-16]
   199dc:	add	r3, sp, #96	; 0x60
   199e0:	bl	200f4 <main@@Base+0x9c0c>
   199e4:	str	r0, [fp, #-12]
   199e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   199ec:	ldr	r1, [fp, #-12]
   199f0:	cmp	r0, r1
   199f4:	bne	19a48 <main@@Base+0x3560>
   199f8:	ldr	r0, [pc, #4072]	; 1a9e8 <main@@Base+0x4500>
   199fc:	add	r3, pc, r0
   19a00:	ldr	r0, [fp, #-8]
   19a04:	ldr	r1, [fp, #-12]
   19a08:	str	r1, [fp, #-40]	; 0xffffffd8
   19a0c:	ldr	r2, [fp, #-16]
   19a10:	add	ip, sp, #96	; 0x60
   19a14:	str	ip, [sp]
   19a18:	bl	201cc <main@@Base+0x9ce4>
   19a1c:	str	r0, [fp, #-12]
   19a20:	ldr	r0, [fp, #-12]
   19a24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a28:	cmp	r0, r1
   19a2c:	beq	19a40 <main@@Base+0x3558>
   19a30:	ldr	r0, [fp, #-12]
   19a34:	ldr	r1, [fp, #-16]
   19a38:	cmp	r0, r1
   19a3c:	bne	19a44 <main@@Base+0x355c>
   19a40:	b	1aafc <main@@Base+0x4614>
   19a44:	b	19a48 <main@@Base+0x3560>
   19a48:	ldr	r0, [sp, #96]	; 0x60
   19a4c:	ldr	r1, [sp, #100]	; 0x64
   19a50:	orr	r0, r0, r1
   19a54:	cmp	r0, #0
   19a58:	bne	19a74 <main@@Base+0x358c>
   19a5c:	b	19a60 <main@@Base+0x3578>
   19a60:	ldr	r0, [fp, #-8]
   19a64:	ldr	r0, [r0, #8]
   19a68:	and	r0, r0, #2
   19a6c:	cmp	r0, #0
   19a70:	beq	19ab4 <main@@Base+0x35cc>
   19a74:	ldr	r0, [fp, #-8]
   19a78:	ldr	r0, [r0]
   19a7c:	movw	r1, #18
   19a80:	movw	r2, #8
   19a84:	movw	r3, #8
   19a88:	uxth	r3, r3
   19a8c:	bl	2d13c <flatcc_builder_table_add@@Base>
   19a90:	str	r0, [fp, #-28]	; 0xffffffe4
   19a94:	movw	r1, #0
   19a98:	cmp	r0, r1
   19a9c:	bne	19aa4 <main@@Base+0x35bc>
   19aa0:	b	1aafc <main@@Base+0x4614>
   19aa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19aa8:	ldr	r2, [sp, #96]	; 0x60
   19aac:	ldr	r3, [sp, #100]	; 0x64
   19ab0:	bl	203c8 <main@@Base+0x9ee0>
   19ab4:	b	19c40 <main@@Base+0x3758>
   19ab8:	ldr	r0, [fp, #-12]
   19abc:	add	r0, r0, #8
   19ac0:	str	r0, [fp, #-12]
   19ac4:	ldr	r0, [fp, #-12]
   19ac8:	ldr	r1, [fp, #-16]
   19acc:	bl	1bc60 <main@@Base+0x5778>
   19ad0:	str	r1, [fp, #-44]	; 0xffffffd4
   19ad4:	str	r0, [fp, #-48]	; 0xffffffd0
   19ad8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   19adc:	mov	r1, #1627389952	; 0x61000000
   19ae0:	teq	r1, r0, lsl #24
   19ae4:	bne	19c28 <main@@Base+0x3740>
   19ae8:	b	19aec <main@@Base+0x3604>
   19aec:	ldr	r0, [fp, #-8]
   19af0:	ldr	r1, [fp, #-12]
   19af4:	str	r1, [fp, #-40]	; 0xffffffd8
   19af8:	ldr	r2, [fp, #-16]
   19afc:	movw	r3, #1
   19b00:	bl	1bc98 <main@@Base+0x57b0>
   19b04:	str	r0, [fp, #-12]
   19b08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b0c:	ldr	r1, [fp, #-12]
   19b10:	cmp	r0, r1
   19b14:	beq	19c10 <main@@Base+0x3728>
   19b18:	mov	r0, #0
   19b1c:	str	r0, [sp, #92]	; 0x5c
   19b20:	str	r0, [sp, #88]	; 0x58
   19b24:	ldr	r0, [fp, #-8]
   19b28:	ldr	r1, [fp, #-12]
   19b2c:	str	r1, [fp, #-40]	; 0xffffffd8
   19b30:	ldr	r2, [fp, #-16]
   19b34:	add	r3, sp, #88	; 0x58
   19b38:	bl	200f4 <main@@Base+0x9c0c>
   19b3c:	str	r0, [fp, #-12]
   19b40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b44:	ldr	r1, [fp, #-12]
   19b48:	cmp	r0, r1
   19b4c:	bne	19ba0 <main@@Base+0x36b8>
   19b50:	ldr	r0, [pc, #4072]	; 1ab40 <main@@Base+0x4658>
   19b54:	add	r3, pc, r0
   19b58:	ldr	r0, [fp, #-8]
   19b5c:	ldr	r1, [fp, #-12]
   19b60:	str	r1, [fp, #-40]	; 0xffffffd8
   19b64:	ldr	r2, [fp, #-16]
   19b68:	add	ip, sp, #88	; 0x58
   19b6c:	str	ip, [sp]
   19b70:	bl	201cc <main@@Base+0x9ce4>
   19b74:	str	r0, [fp, #-12]
   19b78:	ldr	r0, [fp, #-12]
   19b7c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b80:	cmp	r0, r1
   19b84:	beq	19b98 <main@@Base+0x36b0>
   19b88:	ldr	r0, [fp, #-12]
   19b8c:	ldr	r1, [fp, #-16]
   19b90:	cmp	r0, r1
   19b94:	bne	19b9c <main@@Base+0x36b4>
   19b98:	b	1aafc <main@@Base+0x4614>
   19b9c:	b	19ba0 <main@@Base+0x36b8>
   19ba0:	ldr	r0, [sp, #88]	; 0x58
   19ba4:	ldr	r1, [sp, #92]	; 0x5c
   19ba8:	orr	r0, r0, r1
   19bac:	cmp	r0, #0
   19bb0:	bne	19bcc <main@@Base+0x36e4>
   19bb4:	b	19bb8 <main@@Base+0x36d0>
   19bb8:	ldr	r0, [fp, #-8]
   19bbc:	ldr	r0, [r0, #8]
   19bc0:	and	r0, r0, #2
   19bc4:	cmp	r0, #0
   19bc8:	beq	19c0c <main@@Base+0x3724>
   19bcc:	ldr	r0, [fp, #-8]
   19bd0:	ldr	r0, [r0]
   19bd4:	movw	r1, #22
   19bd8:	movw	r2, #8
   19bdc:	movw	r3, #8
   19be0:	uxth	r3, r3
   19be4:	bl	2d13c <flatcc_builder_table_add@@Base>
   19be8:	str	r0, [fp, #-28]	; 0xffffffe4
   19bec:	movw	r1, #0
   19bf0:	cmp	r0, r1
   19bf4:	bne	19bfc <main@@Base+0x3714>
   19bf8:	b	1aafc <main@@Base+0x4614>
   19bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c00:	ldr	r2, [sp, #88]	; 0x58
   19c04:	ldr	r3, [sp, #92]	; 0x5c
   19c08:	bl	203c8 <main@@Base+0x9ee0>
   19c0c:	b	19c24 <main@@Base+0x373c>
   19c10:	ldr	r0, [fp, #-8]
   19c14:	ldr	r1, [fp, #-12]
   19c18:	ldr	r2, [fp, #-16]
   19c1c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19c20:	str	r0, [fp, #-12]
   19c24:	b	19c3c <main@@Base+0x3754>
   19c28:	ldr	r0, [fp, #-8]
   19c2c:	ldr	r1, [fp, #-12]
   19c30:	ldr	r2, [fp, #-16]
   19c34:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19c38:	str	r0, [fp, #-12]
   19c3c:	b	19c40 <main@@Base+0x3758>
   19c40:	b	19c58 <main@@Base+0x3770>
   19c44:	ldr	r0, [fp, #-8]
   19c48:	ldr	r1, [fp, #-12]
   19c4c:	ldr	r2, [fp, #-16]
   19c50:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19c54:	str	r0, [fp, #-12]
   19c58:	b	1a218 <main@@Base+0x3d30>
   19c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19c60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c64:	movw	r2, #12895	; 0x325f
   19c68:	movt	r2, #30003	; 0x7533
   19c6c:	eor	r1, r1, r2
   19c70:	movw	r2, #30257	; 0x7631
   19c74:	movt	r2, #26222	; 0x666e
   19c78:	eor	r0, r0, r2
   19c7c:	orr	r0, r0, r1
   19c80:	cmp	r0, #0
   19c84:	bne	19f18 <main@@Base+0x3a30>
   19c88:	b	19c8c <main@@Base+0x37a4>
   19c8c:	ldr	r0, [fp, #-8]
   19c90:	ldr	r1, [fp, #-12]
   19c94:	str	r1, [fp, #-40]	; 0xffffffd8
   19c98:	ldr	r2, [fp, #-16]
   19c9c:	movw	r3, #8
   19ca0:	bl	1bc98 <main@@Base+0x57b0>
   19ca4:	str	r0, [fp, #-12]
   19ca8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19cac:	ldr	r1, [fp, #-12]
   19cb0:	cmp	r0, r1
   19cb4:	beq	19d9c <main@@Base+0x38b4>
   19cb8:	movw	r0, #0
   19cbc:	str	r0, [sp, #84]	; 0x54
   19cc0:	ldr	r0, [fp, #-8]
   19cc4:	ldr	r1, [fp, #-12]
   19cc8:	str	r1, [fp, #-40]	; 0xffffffd8
   19ccc:	ldr	r2, [fp, #-16]
   19cd0:	add	r3, sp, #84	; 0x54
   19cd4:	bl	20400 <main@@Base+0x9f18>
   19cd8:	str	r0, [fp, #-12]
   19cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ce0:	ldr	r1, [fp, #-12]
   19ce4:	cmp	r0, r1
   19ce8:	bne	19d3c <main@@Base+0x3854>
   19cec:	ldr	r0, [pc, #3656]	; 1ab3c <main@@Base+0x4654>
   19cf0:	add	r3, pc, r0
   19cf4:	ldr	r0, [fp, #-8]
   19cf8:	ldr	r1, [fp, #-12]
   19cfc:	str	r1, [fp, #-40]	; 0xffffffd8
   19d00:	ldr	r2, [fp, #-16]
   19d04:	add	ip, sp, #84	; 0x54
   19d08:	str	ip, [sp]
   19d0c:	bl	204d8 <main@@Base+0x9ff0>
   19d10:	str	r0, [fp, #-12]
   19d14:	ldr	r0, [fp, #-12]
   19d18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19d1c:	cmp	r0, r1
   19d20:	beq	19d34 <main@@Base+0x384c>
   19d24:	ldr	r0, [fp, #-12]
   19d28:	ldr	r1, [fp, #-16]
   19d2c:	cmp	r0, r1
   19d30:	bne	19d38 <main@@Base+0x3850>
   19d34:	b	1aafc <main@@Base+0x4614>
   19d38:	b	19d3c <main@@Base+0x3854>
   19d3c:	ldr	r0, [sp, #84]	; 0x54
   19d40:	cmp	r0, #0
   19d44:	bne	19d5c <main@@Base+0x3874>
   19d48:	ldr	r0, [fp, #-8]
   19d4c:	ldr	r0, [r0, #8]
   19d50:	and	r0, r0, #2
   19d54:	cmp	r0, #0
   19d58:	beq	19d98 <main@@Base+0x38b0>
   19d5c:	ldr	r0, [fp, #-8]
   19d60:	ldr	r0, [r0]
   19d64:	movw	r1, #17
   19d68:	movw	r2, #4
   19d6c:	movw	r3, #4
   19d70:	uxth	r3, r3
   19d74:	bl	2d13c <flatcc_builder_table_add@@Base>
   19d78:	str	r0, [fp, #-28]	; 0xffffffe4
   19d7c:	movw	r1, #0
   19d80:	cmp	r0, r1
   19d84:	bne	19d8c <main@@Base+0x38a4>
   19d88:	b	1aafc <main@@Base+0x4614>
   19d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19d90:	ldr	r1, [sp, #84]	; 0x54
   19d94:	bl	206bc <main@@Base+0xa1d4>
   19d98:	b	19f14 <main@@Base+0x3a2c>
   19d9c:	ldr	r0, [fp, #-12]
   19da0:	add	r0, r0, #8
   19da4:	str	r0, [fp, #-12]
   19da8:	ldr	r0, [fp, #-12]
   19dac:	ldr	r1, [fp, #-16]
   19db0:	bl	1bc60 <main@@Base+0x5778>
   19db4:	str	r1, [fp, #-44]	; 0xffffffd4
   19db8:	str	r0, [fp, #-48]	; 0xffffffd0
   19dbc:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   19dc0:	mov	r1, #1627389952	; 0x61000000
   19dc4:	teq	r1, r0, lsl #24
   19dc8:	bne	19efc <main@@Base+0x3a14>
   19dcc:	b	19dd0 <main@@Base+0x38e8>
   19dd0:	ldr	r0, [fp, #-8]
   19dd4:	ldr	r1, [fp, #-12]
   19dd8:	str	r1, [fp, #-40]	; 0xffffffd8
   19ddc:	ldr	r2, [fp, #-16]
   19de0:	movw	r3, #1
   19de4:	bl	1bc98 <main@@Base+0x57b0>
   19de8:	str	r0, [fp, #-12]
   19dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19df0:	ldr	r1, [fp, #-12]
   19df4:	cmp	r0, r1
   19df8:	beq	19ee0 <main@@Base+0x39f8>
   19dfc:	movw	r0, #0
   19e00:	str	r0, [sp, #80]	; 0x50
   19e04:	ldr	r0, [fp, #-8]
   19e08:	ldr	r1, [fp, #-12]
   19e0c:	str	r1, [fp, #-40]	; 0xffffffd8
   19e10:	ldr	r2, [fp, #-16]
   19e14:	add	r3, sp, #80	; 0x50
   19e18:	bl	20400 <main@@Base+0x9f18>
   19e1c:	str	r0, [fp, #-12]
   19e20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e24:	ldr	r1, [fp, #-12]
   19e28:	cmp	r0, r1
   19e2c:	bne	19e80 <main@@Base+0x3998>
   19e30:	ldr	r0, [pc, #3328]	; 1ab38 <main@@Base+0x4650>
   19e34:	add	r3, pc, r0
   19e38:	ldr	r0, [fp, #-8]
   19e3c:	ldr	r1, [fp, #-12]
   19e40:	str	r1, [fp, #-40]	; 0xffffffd8
   19e44:	ldr	r2, [fp, #-16]
   19e48:	add	ip, sp, #80	; 0x50
   19e4c:	str	ip, [sp]
   19e50:	bl	204d8 <main@@Base+0x9ff0>
   19e54:	str	r0, [fp, #-12]
   19e58:	ldr	r0, [fp, #-12]
   19e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19e60:	cmp	r0, r1
   19e64:	beq	19e78 <main@@Base+0x3990>
   19e68:	ldr	r0, [fp, #-12]
   19e6c:	ldr	r1, [fp, #-16]
   19e70:	cmp	r0, r1
   19e74:	bne	19e7c <main@@Base+0x3994>
   19e78:	b	1aafc <main@@Base+0x4614>
   19e7c:	b	19e80 <main@@Base+0x3998>
   19e80:	ldr	r0, [sp, #80]	; 0x50
   19e84:	cmp	r0, #0
   19e88:	bne	19ea0 <main@@Base+0x39b8>
   19e8c:	ldr	r0, [fp, #-8]
   19e90:	ldr	r0, [r0, #8]
   19e94:	and	r0, r0, #2
   19e98:	cmp	r0, #0
   19e9c:	beq	19edc <main@@Base+0x39f4>
   19ea0:	ldr	r0, [fp, #-8]
   19ea4:	ldr	r0, [r0]
   19ea8:	movw	r1, #21
   19eac:	movw	r2, #4
   19eb0:	movw	r3, #4
   19eb4:	uxth	r3, r3
   19eb8:	bl	2d13c <flatcc_builder_table_add@@Base>
   19ebc:	str	r0, [fp, #-28]	; 0xffffffe4
   19ec0:	movw	r1, #0
   19ec4:	cmp	r0, r1
   19ec8:	bne	19ed0 <main@@Base+0x39e8>
   19ecc:	b	1aafc <main@@Base+0x4614>
   19ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ed4:	ldr	r1, [sp, #80]	; 0x50
   19ed8:	bl	206bc <main@@Base+0xa1d4>
   19edc:	b	19ef4 <main@@Base+0x3a0c>
   19ee0:	ldr	r0, [fp, #-8]
   19ee4:	ldr	r1, [fp, #-12]
   19ee8:	ldr	r2, [fp, #-16]
   19eec:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19ef0:	str	r0, [fp, #-12]
   19ef4:	b	19f10 <main@@Base+0x3a28>
   19ef8:	andeq	r4, r4, r8, asr #3
   19efc:	ldr	r0, [fp, #-8]
   19f00:	ldr	r1, [fp, #-12]
   19f04:	ldr	r2, [fp, #-16]
   19f08:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   19f0c:	str	r0, [fp, #-12]
   19f10:	b	19f14 <main@@Base+0x3a2c>
   19f14:	b	1a214 <main@@Base+0x3d2c>
   19f18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f20:	movw	r2, #13407	; 0x345f
   19f24:	movt	r2, #30006	; 0x7536
   19f28:	eor	r1, r1, r2
   19f2c:	movw	r2, #30257	; 0x7631
   19f30:	movt	r2, #26222	; 0x666e
   19f34:	eor	r0, r0, r2
   19f38:	orr	r0, r0, r1
   19f3c:	cmp	r0, #0
   19f40:	bne	1a1fc <main@@Base+0x3d14>
   19f44:	b	19f48 <main@@Base+0x3a60>
   19f48:	ldr	r0, [fp, #-8]
   19f4c:	ldr	r1, [fp, #-12]
   19f50:	str	r1, [fp, #-40]	; 0xffffffd8
   19f54:	ldr	r2, [fp, #-16]
   19f58:	movw	r3, #8
   19f5c:	bl	1bc98 <main@@Base+0x57b0>
   19f60:	str	r0, [fp, #-12]
   19f64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f68:	ldr	r1, [fp, #-12]
   19f6c:	cmp	r0, r1
   19f70:	beq	1a06c <main@@Base+0x3b84>
   19f74:	mov	r0, #0
   19f78:	str	r0, [sp, #76]	; 0x4c
   19f7c:	str	r0, [sp, #72]	; 0x48
   19f80:	ldr	r0, [fp, #-8]
   19f84:	ldr	r1, [fp, #-12]
   19f88:	str	r1, [fp, #-40]	; 0xffffffd8
   19f8c:	ldr	r2, [fp, #-16]
   19f90:	add	r3, sp, #72	; 0x48
   19f94:	bl	206e8 <main@@Base+0xa200>
   19f98:	str	r0, [fp, #-12]
   19f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19fa0:	ldr	r1, [fp, #-12]
   19fa4:	cmp	r0, r1
   19fa8:	bne	19ffc <main@@Base+0x3b14>
   19fac:	ldr	r0, [pc, #2944]	; 1ab34 <main@@Base+0x464c>
   19fb0:	add	r3, pc, r0
   19fb4:	ldr	r0, [fp, #-8]
   19fb8:	ldr	r1, [fp, #-12]
   19fbc:	str	r1, [fp, #-40]	; 0xffffffd8
   19fc0:	ldr	r2, [fp, #-16]
   19fc4:	add	ip, sp, #72	; 0x48
   19fc8:	str	ip, [sp]
   19fcc:	bl	207c0 <main@@Base+0xa2d8>
   19fd0:	str	r0, [fp, #-12]
   19fd4:	ldr	r0, [fp, #-12]
   19fd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fdc:	cmp	r0, r1
   19fe0:	beq	19ff4 <main@@Base+0x3b0c>
   19fe4:	ldr	r0, [fp, #-12]
   19fe8:	ldr	r1, [fp, #-16]
   19fec:	cmp	r0, r1
   19ff0:	bne	19ff8 <main@@Base+0x3b10>
   19ff4:	b	1aafc <main@@Base+0x4614>
   19ff8:	b	19ffc <main@@Base+0x3b14>
   19ffc:	ldr	r0, [sp, #72]	; 0x48
   1a000:	ldr	r1, [sp, #76]	; 0x4c
   1a004:	orr	r0, r0, r1
   1a008:	cmp	r0, #0
   1a00c:	bne	1a028 <main@@Base+0x3b40>
   1a010:	b	1a014 <main@@Base+0x3b2c>
   1a014:	ldr	r0, [fp, #-8]
   1a018:	ldr	r0, [r0, #8]
   1a01c:	and	r0, r0, #2
   1a020:	cmp	r0, #0
   1a024:	beq	1a068 <main@@Base+0x3b80>
   1a028:	ldr	r0, [fp, #-8]
   1a02c:	ldr	r0, [r0]
   1a030:	movw	r1, #19
   1a034:	movw	r2, #8
   1a038:	movw	r3, #8
   1a03c:	uxth	r3, r3
   1a040:	bl	2d13c <flatcc_builder_table_add@@Base>
   1a044:	str	r0, [fp, #-28]	; 0xffffffe4
   1a048:	movw	r1, #0
   1a04c:	cmp	r0, r1
   1a050:	bne	1a058 <main@@Base+0x3b70>
   1a054:	b	1aafc <main@@Base+0x4614>
   1a058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a05c:	ldr	r2, [sp, #72]	; 0x48
   1a060:	ldr	r3, [sp, #76]	; 0x4c
   1a064:	bl	209bc <main@@Base+0xa4d4>
   1a068:	b	1a1f8 <main@@Base+0x3d10>
   1a06c:	ldr	r0, [fp, #-12]
   1a070:	add	r0, r0, #8
   1a074:	str	r0, [fp, #-12]
   1a078:	ldr	r0, [fp, #-12]
   1a07c:	ldr	r1, [fp, #-16]
   1a080:	bl	1bc60 <main@@Base+0x5778>
   1a084:	str	r1, [fp, #-44]	; 0xffffffd4
   1a088:	str	r0, [fp, #-48]	; 0xffffffd0
   1a08c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1a090:	mov	r1, #1627389952	; 0x61000000
   1a094:	teq	r1, r0, lsl #24
   1a098:	bne	1a1e0 <main@@Base+0x3cf8>
   1a09c:	b	1a0a0 <main@@Base+0x3bb8>
   1a0a0:	ldr	r0, [fp, #-8]
   1a0a4:	ldr	r1, [fp, #-12]
   1a0a8:	str	r1, [fp, #-40]	; 0xffffffd8
   1a0ac:	ldr	r2, [fp, #-16]
   1a0b0:	movw	r3, #1
   1a0b4:	bl	1bc98 <main@@Base+0x57b0>
   1a0b8:	str	r0, [fp, #-12]
   1a0bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0c0:	ldr	r1, [fp, #-12]
   1a0c4:	cmp	r0, r1
   1a0c8:	beq	1a1c4 <main@@Base+0x3cdc>
   1a0cc:	mov	r0, #0
   1a0d0:	str	r0, [sp, #68]	; 0x44
   1a0d4:	str	r0, [sp, #64]	; 0x40
   1a0d8:	ldr	r0, [fp, #-8]
   1a0dc:	ldr	r1, [fp, #-12]
   1a0e0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a0e4:	ldr	r2, [fp, #-16]
   1a0e8:	add	r3, sp, #64	; 0x40
   1a0ec:	bl	206e8 <main@@Base+0xa200>
   1a0f0:	str	r0, [fp, #-12]
   1a0f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0f8:	ldr	r1, [fp, #-12]
   1a0fc:	cmp	r0, r1
   1a100:	bne	1a154 <main@@Base+0x3c6c>
   1a104:	ldr	r0, [pc, #2596]	; 1ab30 <main@@Base+0x4648>
   1a108:	add	r3, pc, r0
   1a10c:	ldr	r0, [fp, #-8]
   1a110:	ldr	r1, [fp, #-12]
   1a114:	str	r1, [fp, #-40]	; 0xffffffd8
   1a118:	ldr	r2, [fp, #-16]
   1a11c:	add	ip, sp, #64	; 0x40
   1a120:	str	ip, [sp]
   1a124:	bl	207c0 <main@@Base+0xa2d8>
   1a128:	str	r0, [fp, #-12]
   1a12c:	ldr	r0, [fp, #-12]
   1a130:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a134:	cmp	r0, r1
   1a138:	beq	1a14c <main@@Base+0x3c64>
   1a13c:	ldr	r0, [fp, #-12]
   1a140:	ldr	r1, [fp, #-16]
   1a144:	cmp	r0, r1
   1a148:	bne	1a150 <main@@Base+0x3c68>
   1a14c:	b	1aafc <main@@Base+0x4614>
   1a150:	b	1a154 <main@@Base+0x3c6c>
   1a154:	ldr	r0, [sp, #64]	; 0x40
   1a158:	ldr	r1, [sp, #68]	; 0x44
   1a15c:	orr	r0, r0, r1
   1a160:	cmp	r0, #0
   1a164:	bne	1a180 <main@@Base+0x3c98>
   1a168:	b	1a16c <main@@Base+0x3c84>
   1a16c:	ldr	r0, [fp, #-8]
   1a170:	ldr	r0, [r0, #8]
   1a174:	and	r0, r0, #2
   1a178:	cmp	r0, #0
   1a17c:	beq	1a1c0 <main@@Base+0x3cd8>
   1a180:	ldr	r0, [fp, #-8]
   1a184:	ldr	r0, [r0]
   1a188:	movw	r1, #23
   1a18c:	movw	r2, #8
   1a190:	movw	r3, #8
   1a194:	uxth	r3, r3
   1a198:	bl	2d13c <flatcc_builder_table_add@@Base>
   1a19c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a1a0:	movw	r1, #0
   1a1a4:	cmp	r0, r1
   1a1a8:	bne	1a1b0 <main@@Base+0x3cc8>
   1a1ac:	b	1aafc <main@@Base+0x4614>
   1a1b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a1b4:	ldr	r2, [sp, #64]	; 0x40
   1a1b8:	ldr	r3, [sp, #68]	; 0x44
   1a1bc:	bl	209bc <main@@Base+0xa4d4>
   1a1c0:	b	1a1d8 <main@@Base+0x3cf0>
   1a1c4:	ldr	r0, [fp, #-8]
   1a1c8:	ldr	r1, [fp, #-12]
   1a1cc:	ldr	r2, [fp, #-16]
   1a1d0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a1d4:	str	r0, [fp, #-12]
   1a1d8:	b	1a1f4 <main@@Base+0x3d0c>
   1a1dc:	andeq	r3, r4, r4, lsl #30
   1a1e0:	ldr	r0, [fp, #-8]
   1a1e4:	ldr	r1, [fp, #-12]
   1a1e8:	ldr	r2, [fp, #-16]
   1a1ec:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a1f0:	str	r0, [fp, #-12]
   1a1f4:	b	1a1f8 <main@@Base+0x3d10>
   1a1f8:	b	1a210 <main@@Base+0x3d28>
   1a1fc:	ldr	r0, [fp, #-8]
   1a200:	ldr	r1, [fp, #-12]
   1a204:	ldr	r2, [fp, #-16]
   1a208:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a20c:	str	r0, [fp, #-12]
   1a210:	b	1a214 <main@@Base+0x3d2c>
   1a214:	b	1a218 <main@@Base+0x3d30>
   1a218:	b	1a21c <main@@Base+0x3d34>
   1a21c:	b	1aa3c <main@@Base+0x4554>
   1a220:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a224:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a228:	movw	r2, #24430	; 0x5f6e
   1a22c:	movt	r2, #28530	; 0x6f72
   1a230:	subs	r0, r2, r0
   1a234:	movw	r2, #25460	; 0x6374
   1a238:	movt	r2, #30309	; 0x7665
   1a23c:	sbcs	r1, r2, r1
   1a240:	bcc	1a58c <main@@Base+0x40a4>
   1a244:	b	1a248 <main@@Base+0x3d60>
   1a248:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a24c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a250:	movw	r2, #29556	; 0x7374
   1a254:	movt	r2, #29797	; 0x7465
   1a258:	eor	r1, r1, r2
   1a25c:	movw	r2, #29556	; 0x7374
   1a260:	movt	r2, #28261	; 0x6e65
   1a264:	eor	r0, r0, r2
   1a268:	orr	r0, r0, r1
   1a26c:	cmp	r0, #0
   1a270:	bne	1a574 <main@@Base+0x408c>
   1a274:	b	1a278 <main@@Base+0x3d90>
   1a278:	ldr	r0, [fp, #-12]
   1a27c:	add	r0, r0, #8
   1a280:	str	r0, [fp, #-12]
   1a284:	ldr	r0, [fp, #-12]
   1a288:	ldr	r1, [fp, #-16]
   1a28c:	bl	1bc60 <main@@Base+0x5778>
   1a290:	str	r1, [fp, #-44]	; 0xffffffd4
   1a294:	str	r0, [fp, #-48]	; 0xffffffd0
   1a298:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a29c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2a0:	movw	r2, #26220	; 0x666c
   1a2a4:	movt	r2, #25956	; 0x6564
   1a2a8:	eor	r1, r1, r2
   1a2ac:	movw	r2, #25205	; 0x6275
   1a2b0:	movt	r2, #24948	; 0x6174
   1a2b4:	eor	r0, r0, r2
   1a2b8:	orr	r0, r0, r1
   1a2bc:	cmp	r0, #0
   1a2c0:	bne	1a55c <main@@Base+0x4074>
   1a2c4:	b	1a2c8 <main@@Base+0x3de0>
   1a2c8:	ldr	r0, [fp, #-12]
   1a2cc:	add	r0, r0, #8
   1a2d0:	str	r0, [fp, #-12]
   1a2d4:	ldr	r0, [fp, #-12]
   1a2d8:	ldr	r1, [fp, #-16]
   1a2dc:	bl	1bc60 <main@@Base+0x5778>
   1a2e0:	str	r1, [fp, #-44]	; 0xffffffd4
   1a2e4:	str	r0, [fp, #-48]	; 0xffffffd0
   1a2e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2ec:	movw	r1, #25970	; 0x6572
   1a2f0:	movt	r1, #26214	; 0x6666
   1a2f4:	teq	r0, r1
   1a2f8:	bne	1a544 <main@@Base+0x405c>
   1a2fc:	b	1a304 <main@@Base+0x3e1c>
   1a300:	andeq	r3, r4, ip, lsr #27
   1a304:	ldr	r0, [fp, #-8]
   1a308:	ldr	r1, [fp, #-12]
   1a30c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a310:	ldr	r2, [fp, #-16]
   1a314:	movw	r3, #4
   1a318:	bl	1bc98 <main@@Base+0x57b0>
   1a31c:	str	r0, [fp, #-12]
   1a320:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a324:	ldr	r1, [fp, #-12]
   1a328:	cmp	r0, r1
   1a32c:	beq	1a52c <main@@Base+0x4044>
   1a330:	ldr	r0, [fp, #-12]
   1a334:	ldr	r1, [fp, #-16]
   1a338:	cmp	r0, r1
   1a33c:	beq	1a480 <main@@Base+0x3f98>
   1a340:	ldr	r0, [fp, #-12]
   1a344:	ldrb	r0, [r0]
   1a348:	cmp	r0, #91	; 0x5b
   1a34c:	bne	1a480 <main@@Base+0x3f98>
   1a350:	ldr	r0, [fp, #-8]
   1a354:	ldr	r0, [r0]
   1a358:	movw	r1, #1
   1a35c:	movw	r2, #1
   1a360:	uxth	r2, r2
   1a364:	mvn	r3, #0
   1a368:	bl	2b424 <flatcc_builder_start_vector@@Base>
   1a36c:	cmp	r0, #0
   1a370:	beq	1a378 <main@@Base+0x3e90>
   1a374:	b	1aafc <main@@Base+0x4614>
   1a378:	ldr	r0, [fp, #-8]
   1a37c:	ldr	r1, [fp, #-12]
   1a380:	ldr	r2, [fp, #-16]
   1a384:	sub	r3, fp, #24
   1a388:	bl	1d434 <main@@Base+0x6f4c>
   1a38c:	str	r0, [fp, #-12]
   1a390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a394:	cmp	r0, #0
   1a398:	beq	1a46c <main@@Base+0x3f84>
   1a39c:	movw	r0, #0
   1a3a0:	strb	r0, [sp, #63]	; 0x3f
   1a3a4:	ldr	r0, [fp, #-8]
   1a3a8:	ldr	r0, [r0]
   1a3ac:	movw	r1, #1
   1a3b0:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   1a3b4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a3b8:	movw	r1, #0
   1a3bc:	cmp	r0, r1
   1a3c0:	bne	1a3c8 <main@@Base+0x3ee0>
   1a3c4:	b	1aafc <main@@Base+0x4614>
   1a3c8:	ldr	r0, [fp, #-8]
   1a3cc:	ldr	r1, [fp, #-12]
   1a3d0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a3d4:	ldr	r2, [fp, #-16]
   1a3d8:	add	r3, sp, #63	; 0x3f
   1a3dc:	bl	1d518 <main@@Base+0x7030>
   1a3e0:	str	r0, [fp, #-12]
   1a3e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3e8:	ldr	r1, [fp, #-12]
   1a3ec:	cmp	r0, r1
   1a3f0:	bne	1a444 <main@@Base+0x3f5c>
   1a3f4:	ldr	r0, [pc, #1840]	; 1ab2c <main@@Base+0x4644>
   1a3f8:	add	r3, pc, r0
   1a3fc:	ldr	r0, [fp, #-8]
   1a400:	ldr	r1, [fp, #-12]
   1a404:	str	r1, [fp, #-40]	; 0xffffffd8
   1a408:	ldr	r2, [fp, #-16]
   1a40c:	add	ip, sp, #63	; 0x3f
   1a410:	str	ip, [sp]
   1a414:	bl	1d5f4 <main@@Base+0x710c>
   1a418:	str	r0, [fp, #-12]
   1a41c:	ldr	r0, [fp, #-12]
   1a420:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a424:	cmp	r0, r1
   1a428:	beq	1a43c <main@@Base+0x3f54>
   1a42c:	ldr	r0, [fp, #-12]
   1a430:	ldr	r1, [fp, #-16]
   1a434:	cmp	r0, r1
   1a438:	bne	1a440 <main@@Base+0x3f58>
   1a43c:	b	1aafc <main@@Base+0x4614>
   1a440:	b	1a444 <main@@Base+0x3f5c>
   1a444:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a448:	ldrb	r1, [sp, #63]	; 0x3f
   1a44c:	bl	1d7d8 <main@@Base+0x72f0>
   1a450:	ldr	r0, [fp, #-8]
   1a454:	ldr	r1, [fp, #-12]
   1a458:	ldr	r2, [fp, #-16]
   1a45c:	sub	r3, fp, #24
   1a460:	bl	1d804 <main@@Base+0x731c>
   1a464:	str	r0, [fp, #-12]
   1a468:	b	1a390 <main@@Base+0x3ea8>
   1a46c:	ldr	r0, [fp, #-8]
   1a470:	ldr	r0, [r0]
   1a474:	bl	2c904 <flatcc_builder_end_vector@@Base>
   1a478:	str	r0, [fp, #-32]	; 0xffffffe0
   1a47c:	b	1a4ec <main@@Base+0x4004>
   1a480:	ldr	r0, [fp, #-8]
   1a484:	ldr	r0, [r0]
   1a488:	movw	r1, #0
   1a48c:	str	r1, [sp, #16]
   1a490:	movw	r2, #0
   1a494:	uxth	r2, r2
   1a498:	ldr	r3, [sp, #16]
   1a49c:	bl	2a170 <flatcc_builder_start_buffer@@Base>
   1a4a0:	cmp	r0, #0
   1a4a4:	beq	1a4ac <main@@Base+0x3fc4>
   1a4a8:	b	1aafc <main@@Base+0x4614>
   1a4ac:	ldr	r0, [fp, #-8]
   1a4b0:	ldr	r1, [fp, #-12]
   1a4b4:	ldr	r2, [fp, #-16]
   1a4b8:	sub	r3, fp, #32
   1a4bc:	bl	17158 <main@@Base+0xc70>
   1a4c0:	str	r0, [fp, #-12]
   1a4c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4c8:	cmp	r0, #0
   1a4cc:	bne	1a4d8 <main@@Base+0x3ff0>
   1a4d0:	b	1aafc <main@@Base+0x4614>
   1a4d4:	andeq	r3, r4, r4, lsl #24
   1a4d8:	ldr	r0, [fp, #-8]
   1a4dc:	ldr	r0, [r0]
   1a4e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a4e4:	bl	2a4b4 <flatcc_builder_end_buffer@@Base>
   1a4e8:	str	r0, [fp, #-32]	; 0xffffffe0
   1a4ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4f0:	cmp	r0, #0
   1a4f4:	beq	1a518 <main@@Base+0x4030>
   1a4f8:	ldr	r0, [fp, #-8]
   1a4fc:	ldr	r0, [r0]
   1a500:	movw	r1, #13
   1a504:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1a508:	str	r0, [fp, #-36]	; 0xffffffdc
   1a50c:	movw	r1, #0
   1a510:	cmp	r0, r1
   1a514:	bne	1a51c <main@@Base+0x4034>
   1a518:	b	1aafc <main@@Base+0x4614>
   1a51c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a520:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a524:	str	r0, [r1]
   1a528:	b	1a540 <main@@Base+0x4058>
   1a52c:	ldr	r0, [fp, #-8]
   1a530:	ldr	r1, [fp, #-12]
   1a534:	ldr	r2, [fp, #-16]
   1a538:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a53c:	str	r0, [fp, #-12]
   1a540:	b	1a558 <main@@Base+0x4070>
   1a544:	ldr	r0, [fp, #-8]
   1a548:	ldr	r1, [fp, #-12]
   1a54c:	ldr	r2, [fp, #-16]
   1a550:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a554:	str	r0, [fp, #-12]
   1a558:	b	1a570 <main@@Base+0x4088>
   1a55c:	ldr	r0, [fp, #-8]
   1a560:	ldr	r1, [fp, #-12]
   1a564:	ldr	r2, [fp, #-16]
   1a568:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a56c:	str	r0, [fp, #-12]
   1a570:	b	1a588 <main@@Base+0x40a0>
   1a574:	ldr	r0, [fp, #-8]
   1a578:	ldr	r1, [fp, #-12]
   1a57c:	ldr	r2, [fp, #-16]
   1a580:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a584:	str	r0, [fp, #-12]
   1a588:	b	1aa38 <main@@Base+0x4550>
   1a58c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a590:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a594:	movw	r2, #25460	; 0x6374
   1a598:	movt	r2, #30309	; 0x7665
   1a59c:	eor	r1, r1, r2
   1a5a0:	movw	r2, #24431	; 0x5f6f
   1a5a4:	movt	r2, #28530	; 0x6f72
   1a5a8:	eor	r0, r0, r2
   1a5ac:	orr	r0, r0, r1
   1a5b0:	cmp	r0, #0
   1a5b4:	bne	1aa20 <main@@Base+0x4538>
   1a5b8:	b	1a5bc <main@@Base+0x40d4>
   1a5bc:	ldr	r0, [fp, #-12]
   1a5c0:	add	r0, r0, #8
   1a5c4:	str	r0, [fp, #-12]
   1a5c8:	ldr	r0, [fp, #-12]
   1a5cc:	ldr	r1, [fp, #-16]
   1a5d0:	bl	1bc60 <main@@Base+0x5778>
   1a5d4:	str	r1, [fp, #-44]	; 0xffffffd4
   1a5d8:	str	r0, [fp, #-48]	; 0xffffffd0
   1a5dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a5e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a5e4:	movw	r2, #25711	; 0x646f
   1a5e8:	movt	r2, #26207	; 0x665f
   1a5ec:	eor	r1, r1, r2
   1a5f0:	movw	r2, #27749	; 0x6c65
   1a5f4:	movt	r2, #30050	; 0x7562
   1a5f8:	eor	r0, r0, r2
   1a5fc:	orr	r0, r0, r1
   1a600:	cmp	r0, #0
   1a604:	bne	1a80c <main@@Base+0x4324>
   1a608:	b	1a60c <main@@Base+0x4124>
   1a60c:	ldr	r0, [fp, #-12]
   1a610:	add	r0, r0, #8
   1a614:	str	r0, [fp, #-12]
   1a618:	ldr	r0, [fp, #-12]
   1a61c:	ldr	r1, [fp, #-16]
   1a620:	bl	1bc60 <main@@Base+0x5778>
   1a624:	str	r1, [fp, #-44]	; 0xffffffd4
   1a628:	str	r0, [fp, #-48]	; 0xffffffd0
   1a62c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1a630:	mov	r1, #1929379840	; 0x73000000
   1a634:	teq	r1, r0, lsl #24
   1a638:	bne	1a7f4 <main@@Base+0x430c>
   1a63c:	b	1a640 <main@@Base+0x4158>
   1a640:	ldr	r0, [fp, #-8]
   1a644:	ldr	r1, [fp, #-12]
   1a648:	str	r1, [fp, #-40]	; 0xffffffd8
   1a64c:	ldr	r2, [fp, #-16]
   1a650:	movw	r3, #1
   1a654:	bl	1bc98 <main@@Base+0x57b0>
   1a658:	str	r0, [fp, #-12]
   1a65c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a660:	ldr	r1, [fp, #-12]
   1a664:	cmp	r0, r1
   1a668:	beq	1a7dc <main@@Base+0x42f4>
   1a66c:	ldr	r3, [pc, #1196]	; 1ab20 <main@@Base+0x4638>
   1a670:	ldr	r0, [fp, #-8]
   1a674:	ldr	r0, [r0]
   1a678:	movw	r1, #8
   1a67c:	movw	r2, #8
   1a680:	uxth	r2, r2
   1a684:	bl	2b424 <flatcc_builder_start_vector@@Base>
   1a688:	cmp	r0, #0
   1a68c:	beq	1a694 <main@@Base+0x41ac>
   1a690:	b	1aafc <main@@Base+0x4614>
   1a694:	ldr	r0, [fp, #-8]
   1a698:	ldr	r1, [fp, #-12]
   1a69c:	ldr	r2, [fp, #-16]
   1a6a0:	sub	r3, fp, #24
   1a6a4:	bl	1d434 <main@@Base+0x6f4c>
   1a6a8:	str	r0, [fp, #-12]
   1a6ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6b0:	cmp	r0, #0
   1a6b4:	beq	1a78c <main@@Base+0x42a4>
   1a6b8:	vldr	d16, [pc, #1008]	; 1aab0 <main@@Base+0x45c8>
   1a6bc:	vstr	d16, [sp, #48]	; 0x30
   1a6c0:	ldr	r0, [fp, #-8]
   1a6c4:	ldr	r0, [r0]
   1a6c8:	movw	r1, #1
   1a6cc:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   1a6d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6d4:	movw	r1, #0
   1a6d8:	cmp	r0, r1
   1a6dc:	bne	1a6e8 <main@@Base+0x4200>
   1a6e0:	b	1aafc <main@@Base+0x4614>
   1a6e4:	andeq	r3, r4, r4, lsl sl
   1a6e8:	ldr	r0, [fp, #-8]
   1a6ec:	ldr	r1, [fp, #-12]
   1a6f0:	str	r1, [fp, #-40]	; 0xffffffd8
   1a6f4:	ldr	r2, [fp, #-16]
   1a6f8:	add	r3, sp, #48	; 0x30
   1a6fc:	bl	34998 <flatcc_json_parser_double@@Base>
   1a700:	str	r0, [fp, #-12]
   1a704:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a708:	ldr	r1, [fp, #-12]
   1a70c:	cmp	r0, r1
   1a710:	bne	1a764 <main@@Base+0x427c>
   1a714:	ldr	r0, [pc, #1036]	; 1ab28 <main@@Base+0x4640>
   1a718:	add	r3, pc, r0
   1a71c:	ldr	r0, [fp, #-8]
   1a720:	ldr	r1, [fp, #-12]
   1a724:	str	r1, [fp, #-40]	; 0xffffffd8
   1a728:	ldr	r2, [fp, #-16]
   1a72c:	add	ip, sp, #48	; 0x30
   1a730:	str	ip, [sp]
   1a734:	bl	209f8 <main@@Base+0xa510>
   1a738:	str	r0, [fp, #-12]
   1a73c:	ldr	r0, [fp, #-12]
   1a740:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a744:	cmp	r0, r1
   1a748:	beq	1a75c <main@@Base+0x4274>
   1a74c:	ldr	r0, [fp, #-12]
   1a750:	ldr	r1, [fp, #-16]
   1a754:	cmp	r0, r1
   1a758:	bne	1a760 <main@@Base+0x4278>
   1a75c:	b	1aafc <main@@Base+0x4614>
   1a760:	b	1a764 <main@@Base+0x427c>
   1a764:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a768:	vldr	d0, [sp, #48]	; 0x30
   1a76c:	bl	20be8 <main@@Base+0xa700>
   1a770:	ldr	r0, [fp, #-8]
   1a774:	ldr	r1, [fp, #-12]
   1a778:	ldr	r2, [fp, #-16]
   1a77c:	sub	r3, fp, #24
   1a780:	bl	1d804 <main@@Base+0x731c>
   1a784:	str	r0, [fp, #-12]
   1a788:	b	1a6ac <main@@Base+0x41c4>
   1a78c:	ldr	r0, [fp, #-8]
   1a790:	ldr	r0, [r0]
   1a794:	bl	2c904 <flatcc_builder_end_vector@@Base>
   1a798:	str	r0, [fp, #-32]	; 0xffffffe0
   1a79c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7a0:	cmp	r0, #0
   1a7a4:	beq	1a7c8 <main@@Base+0x42e0>
   1a7a8:	ldr	r0, [fp, #-8]
   1a7ac:	ldr	r0, [r0]
   1a7b0:	movw	r1, #33	; 0x21
   1a7b4:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1a7b8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a7bc:	movw	r1, #0
   1a7c0:	cmp	r0, r1
   1a7c4:	bne	1a7cc <main@@Base+0x42e4>
   1a7c8:	b	1aafc <main@@Base+0x4614>
   1a7cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a7d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a7d4:	str	r0, [r1]
   1a7d8:	b	1a7f0 <main@@Base+0x4308>
   1a7dc:	ldr	r0, [fp, #-8]
   1a7e0:	ldr	r1, [fp, #-12]
   1a7e4:	ldr	r2, [fp, #-16]
   1a7e8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a7ec:	str	r0, [fp, #-12]
   1a7f0:	b	1a808 <main@@Base+0x4320>
   1a7f4:	ldr	r0, [fp, #-8]
   1a7f8:	ldr	r1, [fp, #-12]
   1a7fc:	ldr	r2, [fp, #-16]
   1a800:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a804:	str	r0, [fp, #-12]
   1a808:	b	1aa1c <main@@Base+0x4534>
   1a80c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a810:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a814:	movw	r2, #24428	; 0x5f6c
   1a818:	movt	r2, #102	; 0x66
   1a81c:	eor	r2, r2, r1, lsr #8
   1a820:	lsr	r0, r0, #8
   1a824:	orr	r0, r0, r1, lsl #24
   1a828:	movw	r1, #26483	; 0x6773
   1a82c:	movt	r1, #28526	; 0x6f6e
   1a830:	eor	r0, r0, r1
   1a834:	orr	r0, r0, r2
   1a838:	cmp	r0, #0
   1a83c:	bne	1aa04 <main@@Base+0x451c>
   1a840:	b	1a848 <main@@Base+0x4360>
   1a844:	ldrdeq	r3, [r4], -r4
   1a848:	ldr	r0, [fp, #-8]
   1a84c:	ldr	r1, [fp, #-12]
   1a850:	str	r1, [fp, #-40]	; 0xffffffd8
   1a854:	ldr	r2, [fp, #-16]
   1a858:	movw	r3, #7
   1a85c:	bl	1bc98 <main@@Base+0x57b0>
   1a860:	str	r0, [fp, #-12]
   1a864:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a868:	ldr	r1, [fp, #-12]
   1a86c:	cmp	r0, r1
   1a870:	beq	1a9ec <main@@Base+0x4504>
   1a874:	ldr	r3, [pc, #676]	; 1ab20 <main@@Base+0x4638>
   1a878:	ldr	r0, [fp, #-8]
   1a87c:	ldr	r0, [r0]
   1a880:	movw	r1, #8
   1a884:	movw	r2, #8
   1a888:	uxth	r2, r2
   1a88c:	bl	2b424 <flatcc_builder_start_vector@@Base>
   1a890:	cmp	r0, #0
   1a894:	beq	1a89c <main@@Base+0x43b4>
   1a898:	b	1aafc <main@@Base+0x4614>
   1a89c:	ldr	r0, [fp, #-8]
   1a8a0:	ldr	r1, [fp, #-12]
   1a8a4:	ldr	r2, [fp, #-16]
   1a8a8:	sub	r3, fp, #24
   1a8ac:	bl	1d434 <main@@Base+0x6f4c>
   1a8b0:	str	r0, [fp, #-12]
   1a8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8b8:	cmp	r0, #0
   1a8bc:	beq	1a998 <main@@Base+0x44b0>
   1a8c0:	mov	r0, #0
   1a8c4:	str	r0, [sp, #44]	; 0x2c
   1a8c8:	str	r0, [sp, #40]	; 0x28
   1a8cc:	ldr	r0, [fp, #-8]
   1a8d0:	ldr	r0, [r0]
   1a8d4:	movw	r1, #1
   1a8d8:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   1a8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8e0:	movw	r1, #0
   1a8e4:	cmp	r0, r1
   1a8e8:	bne	1a8f0 <main@@Base+0x4408>
   1a8ec:	b	1aafc <main@@Base+0x4614>
   1a8f0:	ldr	r0, [fp, #-8]
   1a8f4:	ldr	r1, [fp, #-12]
   1a8f8:	str	r1, [fp, #-40]	; 0xffffffd8
   1a8fc:	ldr	r2, [fp, #-16]
   1a900:	add	r3, sp, #40	; 0x28
   1a904:	bl	200f4 <main@@Base+0x9c0c>
   1a908:	str	r0, [fp, #-12]
   1a90c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a910:	ldr	r1, [fp, #-12]
   1a914:	cmp	r0, r1
   1a918:	bne	1a96c <main@@Base+0x4484>
   1a91c:	ldr	r0, [pc, #512]	; 1ab24 <main@@Base+0x463c>
   1a920:	add	r3, pc, r0
   1a924:	ldr	r0, [fp, #-8]
   1a928:	ldr	r1, [fp, #-12]
   1a92c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a930:	ldr	r2, [fp, #-16]
   1a934:	add	ip, sp, #40	; 0x28
   1a938:	str	ip, [sp]
   1a93c:	bl	201cc <main@@Base+0x9ce4>
   1a940:	str	r0, [fp, #-12]
   1a944:	ldr	r0, [fp, #-12]
   1a948:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a94c:	cmp	r0, r1
   1a950:	beq	1a964 <main@@Base+0x447c>
   1a954:	ldr	r0, [fp, #-12]
   1a958:	ldr	r1, [fp, #-16]
   1a95c:	cmp	r0, r1
   1a960:	bne	1a968 <main@@Base+0x4480>
   1a964:	b	1aafc <main@@Base+0x4614>
   1a968:	b	1a96c <main@@Base+0x4484>
   1a96c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a970:	ldr	r2, [sp, #40]	; 0x28
   1a974:	ldr	r3, [sp, #44]	; 0x2c
   1a978:	bl	203c8 <main@@Base+0x9ee0>
   1a97c:	ldr	r0, [fp, #-8]
   1a980:	ldr	r1, [fp, #-12]
   1a984:	ldr	r2, [fp, #-16]
   1a988:	sub	r3, fp, #24
   1a98c:	bl	1d804 <main@@Base+0x731c>
   1a990:	str	r0, [fp, #-12]
   1a994:	b	1a8b4 <main@@Base+0x43cc>
   1a998:	ldr	r0, [fp, #-8]
   1a99c:	ldr	r0, [r0]
   1a9a0:	bl	2c904 <flatcc_builder_end_vector@@Base>
   1a9a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1a9a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9ac:	cmp	r0, #0
   1a9b0:	beq	1a9d4 <main@@Base+0x44ec>
   1a9b4:	ldr	r0, [fp, #-8]
   1a9b8:	ldr	r0, [r0]
   1a9bc:	movw	r1, #32
   1a9c0:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1a9c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a9c8:	movw	r1, #0
   1a9cc:	cmp	r0, r1
   1a9d0:	bne	1a9d8 <main@@Base+0x44f0>
   1a9d4:	b	1aafc <main@@Base+0x4614>
   1a9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a9dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a9e0:	str	r0, [r1]
   1a9e4:	b	1aa00 <main@@Base+0x4518>
   1a9e8:	andeq	r3, r4, r8, lsr #14
   1a9ec:	ldr	r0, [fp, #-8]
   1a9f0:	ldr	r1, [fp, #-12]
   1a9f4:	ldr	r2, [fp, #-16]
   1a9f8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1a9fc:	str	r0, [fp, #-12]
   1aa00:	b	1aa18 <main@@Base+0x4530>
   1aa04:	ldr	r0, [fp, #-8]
   1aa08:	ldr	r1, [fp, #-12]
   1aa0c:	ldr	r2, [fp, #-16]
   1aa10:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1aa14:	str	r0, [fp, #-12]
   1aa18:	b	1aa1c <main@@Base+0x4534>
   1aa1c:	b	1aa34 <main@@Base+0x454c>
   1aa20:	ldr	r0, [fp, #-8]
   1aa24:	ldr	r1, [fp, #-12]
   1aa28:	ldr	r2, [fp, #-16]
   1aa2c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1aa30:	str	r0, [fp, #-12]
   1aa34:	b	1aa38 <main@@Base+0x4550>
   1aa38:	b	1aa3c <main@@Base+0x4554>
   1aa3c:	b	1aa40 <main@@Base+0x4558>
   1aa40:	b	1aa44 <main@@Base+0x455c>
   1aa44:	b	1aa48 <main@@Base+0x4560>
   1aa48:	ldr	r0, [fp, #-8]
   1aa4c:	ldr	r1, [fp, #-12]
   1aa50:	ldr	r2, [fp, #-16]
   1aa54:	sub	r3, fp, #24
   1aa58:	bl	20c14 <main@@Base+0xa72c>
   1aa5c:	str	r0, [fp, #-12]
   1aa60:	b	171f4 <main@@Base+0xd0c>
   1aa64:	ldr	r0, [fp, #-8]
   1aa68:	ldr	r0, [r0, #20]
   1aa6c:	cmp	r0, #0
   1aa70:	beq	1aa78 <main@@Base+0x4590>
   1aa74:	b	1aafc <main@@Base+0x4614>
   1aa78:	ldr	r0, [fp, #-8]
   1aa7c:	ldr	r0, [r0]
   1aa80:	movw	r1, #3
   1aa84:	uxth	r1, r1
   1aa88:	bl	2c20c <flatcc_builder_check_required_field@@Base>
   1aa8c:	cmp	r0, #0
   1aa90:	bne	1aab8 <main@@Base+0x45d0>
   1aa94:	ldr	r0, [fp, #-8]
   1aa98:	ldr	r1, [fp, #-12]
   1aa9c:	ldr	r2, [fp, #-16]
   1aaa0:	movw	r3, #29
   1aaa4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1aaa8:	str	r0, [fp, #-12]
   1aaac:	b	1aafc <main@@Base+0x4614>
	...
   1aab8:	ldr	r0, [fp, #-8]
   1aabc:	ldr	r1, [fp, #-12]
   1aac0:	ldr	r2, [fp, #-16]
   1aac4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1aac8:	bl	36484 <flatcc_json_parser_finalize_unions@@Base>
   1aacc:	str	r0, [fp, #-12]
   1aad0:	ldr	r0, [fp, #-8]
   1aad4:	ldr	r0, [r0]
   1aad8:	bl	2c500 <flatcc_builder_end_table@@Base>
   1aadc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1aae0:	str	r0, [r1]
   1aae4:	cmp	r0, #0
   1aae8:	bne	1aaf0 <main@@Base+0x4608>
   1aaec:	b	1aafc <main@@Base+0x4614>
   1aaf0:	ldr	r0, [fp, #-12]
   1aaf4:	str	r0, [fp, #-4]
   1aaf8:	b	1ab14 <main@@Base+0x462c>
   1aafc:	ldr	r0, [fp, #-8]
   1ab00:	ldr	r1, [fp, #-12]
   1ab04:	ldr	r2, [fp, #-16]
   1ab08:	movw	r3, #33	; 0x21
   1ab0c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1ab10:	str	r0, [fp, #-4]
   1ab14:	ldr	r0, [fp, #-4]
   1ab18:	mov	sp, fp
   1ab1c:	pop	{fp, pc}
   1ab20:	svcne	0x00ffffff
   1ab24:	andeq	r2, r4, r4, ror #16
   1ab28:	andeq	r2, r4, r0, ror #20
   1ab2c:	andeq	r2, r4, r4, ror sp
   1ab30:	andeq	r3, r4, r8, asr r0
   1ab34:	andeq	r3, r4, r4, lsr #3
   1ab38:	andeq	r3, r4, r4, lsl r3
   1ab3c:	andeq	r3, r4, ip, asr #8
   1ab40:	ldrdeq	r3, [r4], -ip
   1ab44:	push	{fp, lr}
   1ab48:	mov	fp, sp
   1ab4c:	sub	sp, sp, #104	; 0x68
   1ab50:	ldr	r2, [pc, #1928]	; 1b2e0 <main@@Base+0x4df8>
   1ab54:	add	r3, pc, r2
   1ab58:	ldr	r2, [pc, #1924]	; 1b2e4 <main@@Base+0x4dfc>
   1ab5c:	add	r2, pc, r2
   1ab60:	str	r0, [fp, #-4]
   1ab64:	str	r1, [fp, #-8]
   1ab68:	ldr	r0, [fp, #-4]
   1ab6c:	ldr	r1, [fp, #-8]
   1ab70:	movw	ip, #0
   1ab74:	str	r2, [fp, #-12]
   1ab78:	mov	r2, ip
   1ab7c:	movw	ip, #3
   1ab80:	str	ip, [sp]
   1ab84:	ldr	ip, [fp, #-12]
   1ab88:	str	ip, [sp, #4]
   1ab8c:	bl	42fd8 <flatcc_json_printer_struct_field@@Base>
   1ab90:	ldr	r0, [pc, #1860]	; 1b2dc <main@@Base+0x4df4>
   1ab94:	add	r3, pc, r0
   1ab98:	ldr	r0, [fp, #-4]
   1ab9c:	ldr	r1, [fp, #-8]
   1aba0:	movw	r2, #1
   1aba4:	movw	ip, #4
   1aba8:	str	ip, [sp]
   1abac:	movw	ip, #150	; 0x96
   1abb0:	sxth	ip, ip
   1abb4:	str	ip, [sp, #4]
   1abb8:	bl	3bfe4 <flatcc_json_printer_int16_field@@Base>
   1abbc:	ldr	r0, [pc, #1812]	; 1b2d8 <main@@Base+0x4df0>
   1abc0:	add	r3, pc, r0
   1abc4:	ldr	r0, [fp, #-4]
   1abc8:	ldr	r1, [fp, #-8]
   1abcc:	movw	r2, #2
   1abd0:	str	r2, [fp, #-16]
   1abd4:	ldr	ip, [fp, #-16]
   1abd8:	str	ip, [sp]
   1abdc:	movw	lr, #100	; 0x64
   1abe0:	sxth	lr, lr
   1abe4:	str	lr, [sp, #4]
   1abe8:	bl	3bfe4 <flatcc_json_printer_int16_field@@Base>
   1abec:	ldr	r0, [pc, #1760]	; 1b2d4 <main@@Base+0x4dec>
   1abf0:	add	r3, pc, r0
   1abf4:	ldr	r0, [fp, #-4]
   1abf8:	ldr	r1, [fp, #-8]
   1abfc:	movw	r2, #3
   1ac00:	movw	ip, #4
   1ac04:	str	ip, [sp]
   1ac08:	bl	3b410 <flatcc_json_printer_string_field@@Base>
   1ac0c:	ldr	r0, [pc, #1724]	; 1b2d0 <main@@Base+0x4de8>
   1ac10:	add	r3, pc, r0
   1ac14:	ldr	r0, [fp, #-4]
   1ac18:	ldr	r1, [fp, #-8]
   1ac1c:	movw	r2, #5
   1ac20:	movw	ip, #9
   1ac24:	str	ip, [sp]
   1ac28:	bl	3e4b4 <flatcc_json_printer_uint8_vector_field@@Base>
   1ac2c:	ldr	r0, [pc, #1684]	; 1b2c8 <main@@Base+0x4de0>
   1ac30:	add	r3, pc, r0
   1ac34:	ldr	r0, [pc, #1680]	; 1b2cc <main@@Base+0x4de4>
   1ac38:	add	r0, pc, r0
   1ac3c:	ldr	r1, [fp, #-4]
   1ac40:	ldr	r2, [fp, #-8]
   1ac44:	str	r0, [fp, #-20]	; 0xffffffec
   1ac48:	mov	r0, r1
   1ac4c:	mov	r1, r2
   1ac50:	movw	r2, #6
   1ac54:	movw	ip, #5
   1ac58:	str	ip, [sp]
   1ac5c:	movw	ip, #8
   1ac60:	sxtb	ip, ip
   1ac64:	str	ip, [sp, #4]
   1ac68:	ldr	ip, [fp, #-20]	; 0xffffffec
   1ac6c:	str	ip, [sp, #8]
   1ac70:	bl	3cd04 <flatcc_json_printer_int8_enum_field@@Base>
   1ac74:	ldr	r0, [pc, #1600]	; 1b2bc <main@@Base+0x4dd4>
   1ac78:	add	r3, pc, r0
   1ac7c:	ldr	r0, [pc, #1596]	; 1b2c0 <main@@Base+0x4dd8>
   1ac80:	add	r0, pc, r0
   1ac84:	ldr	r1, [pc, #1592]	; 1b2c4 <main@@Base+0x4ddc>
   1ac88:	add	r1, pc, r1
   1ac8c:	ldr	r2, [fp, #-4]
   1ac90:	ldr	ip, [fp, #-8]
   1ac94:	str	r0, [fp, #-24]	; 0xffffffe8
   1ac98:	mov	r0, r2
   1ac9c:	str	r1, [fp, #-28]	; 0xffffffe4
   1aca0:	mov	r1, ip
   1aca4:	movw	r2, #8
   1aca8:	movw	ip, #4
   1acac:	str	ip, [sp]
   1acb0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1acb4:	str	ip, [sp, #4]
   1acb8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1acbc:	str	lr, [sp, #8]
   1acc0:	bl	42a38 <flatcc_json_printer_union_field@@Base>
   1acc4:	ldr	r0, [pc, #1512]	; 1b2b4 <main@@Base+0x4dcc>
   1acc8:	add	r3, pc, r0
   1accc:	ldr	r0, [pc, #1508]	; 1b2b8 <main@@Base+0x4dd0>
   1acd0:	add	r0, pc, r0
   1acd4:	ldr	r1, [fp, #-4]
   1acd8:	ldr	r2, [fp, #-8]
   1acdc:	str	r0, [fp, #-32]	; 0xffffffe0
   1ace0:	mov	r0, r1
   1ace4:	mov	r1, r2
   1ace8:	movw	r2, #9
   1acec:	movw	ip, #5
   1acf0:	str	ip, [sp]
   1acf4:	movw	ip, #4
   1acf8:	str	ip, [sp, #4]
   1acfc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1ad00:	str	ip, [sp, #8]
   1ad04:	bl	41bc8 <flatcc_json_printer_struct_vector_field@@Base>
   1ad08:	ldr	r0, [pc, #1440]	; 1b2b0 <main@@Base+0x4dc8>
   1ad0c:	add	r3, pc, r0
   1ad10:	ldr	r0, [fp, #-4]
   1ad14:	ldr	r1, [fp, #-8]
   1ad18:	movw	r2, #10
   1ad1c:	movw	ip, #17
   1ad20:	str	ip, [sp]
   1ad24:	bl	41f4c <flatcc_json_printer_string_vector_field@@Base>
   1ad28:	ldr	r0, [pc, #1400]	; 1b2a8 <main@@Base+0x4dc0>
   1ad2c:	add	r3, pc, r0
   1ad30:	ldr	r0, [pc, #1396]	; 1b2ac <main@@Base+0x4dc4>
   1ad34:	add	r0, pc, r0
   1ad38:	ldr	r1, [fp, #-4]
   1ad3c:	ldr	r2, [fp, #-8]
   1ad40:	str	r0, [fp, #-36]	; 0xffffffdc
   1ad44:	mov	r0, r1
   1ad48:	mov	r1, r2
   1ad4c:	movw	r2, #11
   1ad50:	movw	ip, #17
   1ad54:	str	ip, [sp]
   1ad58:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ad5c:	str	ip, [sp, #4]
   1ad60:	bl	421bc <flatcc_json_printer_table_vector_field@@Base>
   1ad64:	ldr	r0, [pc, #1332]	; 1b2a0 <main@@Base+0x4db8>
   1ad68:	add	r3, pc, r0
   1ad6c:	ldr	r0, [pc, #1328]	; 1b2a4 <main@@Base+0x4dbc>
   1ad70:	add	r0, pc, r0
   1ad74:	ldr	r1, [fp, #-4]
   1ad78:	ldr	r2, [fp, #-8]
   1ad7c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad80:	mov	r0, r1
   1ad84:	mov	r1, r2
   1ad88:	movw	r2, #12
   1ad8c:	movw	ip, #5
   1ad90:	str	ip, [sp]
   1ad94:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1ad98:	str	ip, [sp, #4]
   1ad9c:	bl	42970 <flatcc_json_printer_table_field@@Base>
   1ada0:	ldr	r0, [pc, #1264]	; 1b298 <main@@Base+0x4db0>
   1ada4:	add	r3, pc, r0
   1ada8:	ldr	r0, [pc, #1260]	; 1b29c <main@@Base+0x4db4>
   1adac:	add	r0, pc, r0
   1adb0:	ldr	r1, [fp, #-4]
   1adb4:	ldr	r2, [fp, #-8]
   1adb8:	str	r0, [fp, #-44]	; 0xffffffd4
   1adbc:	mov	r0, r1
   1adc0:	mov	r1, r2
   1adc4:	movw	r2, #13
   1adc8:	movw	ip, #20
   1adcc:	str	ip, [sp]
   1add0:	movw	ip, #0
   1add4:	str	ip, [sp, #4]
   1add8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1addc:	str	ip, [sp, #8]
   1ade0:	bl	436c8 <flatcc_json_printer_table_as_nested_root@@Base>
   1ade4:	ldr	r0, [pc, #1188]	; 1b290 <main@@Base+0x4da8>
   1ade8:	add	r3, pc, r0
   1adec:	ldr	r0, [pc, #1184]	; 1b294 <main@@Base+0x4dac>
   1adf0:	add	r0, pc, r0
   1adf4:	ldr	r1, [fp, #-4]
   1adf8:	ldr	r2, [fp, #-8]
   1adfc:	str	r0, [fp, #-48]	; 0xffffffd0
   1ae00:	mov	r0, r1
   1ae04:	mov	r1, r2
   1ae08:	movw	r2, #14
   1ae0c:	movw	ip, #9
   1ae10:	str	ip, [sp]
   1ae14:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1ae18:	str	ip, [sp, #4]
   1ae1c:	bl	42970 <flatcc_json_printer_table_field@@Base>
   1ae20:	ldr	r0, [pc, #1124]	; 1b28c <main@@Base+0x4da4>
   1ae24:	add	r3, pc, r0
   1ae28:	ldr	r0, [fp, #-4]
   1ae2c:	ldr	r1, [fp, #-8]
   1ae30:	movw	r2, #15
   1ae34:	movw	ip, #8
   1ae38:	str	ip, [sp]
   1ae3c:	movw	ip, #1
   1ae40:	and	ip, ip, #255	; 0xff
   1ae44:	str	ip, [sp, #4]
   1ae48:	bl	3c3a4 <flatcc_json_printer_bool_field@@Base>
   1ae4c:	ldr	r0, [pc, #1076]	; 1b288 <main@@Base+0x4da0>
   1ae50:	add	r3, pc, r0
   1ae54:	ldr	r0, [fp, #-4]
   1ae58:	ldr	r1, [fp, #-8]
   1ae5c:	movw	r2, #16
   1ae60:	str	r2, [sp, #52]	; 0x34
   1ae64:	ldr	ip, [sp, #52]	; 0x34
   1ae68:	str	ip, [sp]
   1ae6c:	movw	lr, #0
   1ae70:	str	lr, [sp, #4]
   1ae74:	bl	3c114 <flatcc_json_printer_int32_field@@Base>
   1ae78:	ldr	r0, [pc, #1028]	; 1b284 <main@@Base+0x4d9c>
   1ae7c:	add	r3, pc, r0
   1ae80:	ldr	r0, [fp, #-4]
   1ae84:	ldr	r1, [fp, #-8]
   1ae88:	movw	r2, #17
   1ae8c:	movw	ip, #16
   1ae90:	str	ip, [sp]
   1ae94:	movw	ip, #0
   1ae98:	str	ip, [sp, #4]
   1ae9c:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   1aea0:	ldr	r0, [pc, #984]	; 1b280 <main@@Base+0x4d98>
   1aea4:	add	r0, pc, r0
   1aea8:	ldr	r1, [fp, #-4]
   1aeac:	ldr	r2, [fp, #-8]
   1aeb0:	mov	r3, sp
   1aeb4:	mov	ip, #0
   1aeb8:	str	ip, [r3, #12]
   1aebc:	str	ip, [r3, #8]
   1aec0:	mov	ip, #16
   1aec4:	str	ip, [r3]
   1aec8:	ldr	r3, [pc, #1048]	; 1b2e8 <main@@Base+0x4e00>
   1aecc:	add	r3, pc, r3
   1aed0:	mov	ip, #18
   1aed4:	str	r0, [sp, #48]	; 0x30
   1aed8:	mov	r0, r1
   1aedc:	mov	r1, r2
   1aee0:	mov	r2, ip
   1aee4:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   1aee8:	ldr	r0, [pc, #908]	; 1b27c <main@@Base+0x4d94>
   1aeec:	add	r0, pc, r0
   1aef0:	ldr	r1, [fp, #-4]
   1aef4:	ldr	r2, [fp, #-8]
   1aef8:	mov	r3, sp
   1aefc:	mov	ip, #0
   1af00:	str	ip, [r3, #12]
   1af04:	str	ip, [r3, #8]
   1af08:	mov	ip, #16
   1af0c:	str	ip, [r3]
   1af10:	ldr	r3, [pc, #980]	; 1b2ec <main@@Base+0x4e04>
   1af14:	add	r3, pc, r3
   1af18:	mov	ip, #19
   1af1c:	str	r0, [sp, #44]	; 0x2c
   1af20:	mov	r0, r1
   1af24:	mov	r1, r2
   1af28:	mov	r2, ip
   1af2c:	bl	3bd4c <flatcc_json_printer_uint64_field@@Base>
   1af30:	ldr	r0, [pc, #832]	; 1b278 <main@@Base+0x4d90>
   1af34:	add	r3, pc, r0
   1af38:	ldr	r0, [fp, #-4]
   1af3c:	ldr	r1, [fp, #-8]
   1af40:	movw	r2, #20
   1af44:	movw	ip, #17
   1af48:	str	ip, [sp]
   1af4c:	movw	ip, #0
   1af50:	str	ip, [sp, #4]
   1af54:	bl	3c114 <flatcc_json_printer_int32_field@@Base>
   1af58:	ldr	r0, [pc, #788]	; 1b274 <main@@Base+0x4d8c>
   1af5c:	add	r3, pc, r0
   1af60:	ldr	r0, [fp, #-4]
   1af64:	ldr	r1, [fp, #-8]
   1af68:	movw	r2, #21
   1af6c:	movw	ip, #17
   1af70:	str	ip, [sp]
   1af74:	movw	ip, #0
   1af78:	str	ip, [sp, #4]
   1af7c:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   1af80:	ldr	r0, [pc, #744]	; 1b270 <main@@Base+0x4d88>
   1af84:	add	r0, pc, r0
   1af88:	ldr	r1, [fp, #-4]
   1af8c:	ldr	r2, [fp, #-8]
   1af90:	mov	r3, sp
   1af94:	mov	ip, #0
   1af98:	str	ip, [r3, #12]
   1af9c:	str	ip, [r3, #8]
   1afa0:	mov	ip, #17
   1afa4:	str	ip, [r3]
   1afa8:	ldr	r3, [pc, #832]	; 1b2f0 <main@@Base+0x4e08>
   1afac:	add	r3, pc, r3
   1afb0:	mov	ip, #22
   1afb4:	str	r0, [sp, #40]	; 0x28
   1afb8:	mov	r0, r1
   1afbc:	mov	r1, r2
   1afc0:	mov	r2, ip
   1afc4:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   1afc8:	ldr	r0, [pc, #668]	; 1b26c <main@@Base+0x4d84>
   1afcc:	add	r0, pc, r0
   1afd0:	ldr	r1, [fp, #-4]
   1afd4:	ldr	r2, [fp, #-8]
   1afd8:	mov	r3, sp
   1afdc:	mov	ip, #0
   1afe0:	str	ip, [r3, #12]
   1afe4:	str	ip, [r3, #8]
   1afe8:	mov	ip, #17
   1afec:	str	ip, [r3]
   1aff0:	ldr	r3, [pc, #764]	; 1b2f4 <main@@Base+0x4e0c>
   1aff4:	add	r3, pc, r3
   1aff8:	mov	ip, #23
   1affc:	str	r0, [sp, #36]	; 0x24
   1b000:	mov	r0, r1
   1b004:	mov	r1, r2
   1b008:	mov	r2, ip
   1b00c:	bl	3bd4c <flatcc_json_printer_uint64_field@@Base>
   1b010:	ldr	r0, [pc, #592]	; 1b268 <main@@Base+0x4d80>
   1b014:	add	r3, pc, r0
   1b018:	ldr	r0, [fp, #-4]
   1b01c:	ldr	r1, [fp, #-8]
   1b020:	movw	r2, #24
   1b024:	movw	ip, #16
   1b028:	str	ip, [sp]
   1b02c:	bl	3f874 <flatcc_json_printer_bool_vector_field@@Base>
   1b030:	ldr	r0, [pc, #552]	; 1b260 <main@@Base+0x4d78>
   1b034:	add	r3, pc, r0
   1b038:	vldr	s0, [pc, #548]	; 1b264 <main@@Base+0x4d7c>
   1b03c:	ldr	r0, [fp, #-4]
   1b040:	ldr	r1, [fp, #-8]
   1b044:	movw	r2, #25
   1b048:	movw	ip, #5
   1b04c:	str	ip, [sp]
   1b050:	bl	3c580 <flatcc_json_printer_float_field@@Base>
   1b054:	ldr	r0, [pc, #512]	; 1b25c <main@@Base+0x4d74>
   1b058:	add	r3, pc, r0
   1b05c:	ldr	r0, [fp, #-4]
   1b060:	ldr	r1, [fp, #-8]
   1b064:	movw	r2, #26
   1b068:	movw	ip, #6
   1b06c:	str	ip, [sp]
   1b070:	vmov.f32	s0, #8	; 0x40400000  3.0
   1b074:	bl	3c580 <flatcc_json_printer_float_field@@Base>
   1b078:	ldr	r0, [pc, #468]	; 1b254 <main@@Base+0x4d6c>
   1b07c:	add	r3, pc, r0
   1b080:	vldr	s0, [pc, #464]	; 1b258 <main@@Base+0x4d70>
   1b084:	ldr	r0, [fp, #-4]
   1b088:	ldr	r1, [fp, #-8]
   1b08c:	movw	r2, #27
   1b090:	movw	ip, #6
   1b094:	str	ip, [sp]
   1b098:	bl	3c580 <flatcc_json_printer_float_field@@Base>
   1b09c:	ldr	r0, [pc, #428]	; 1b250 <main@@Base+0x4d68>
   1b0a0:	add	r3, pc, r0
   1b0a4:	ldr	r0, [fp, #-4]
   1b0a8:	ldr	r1, [fp, #-8]
   1b0ac:	movw	r2, #28
   1b0b0:	movw	ip, #18
   1b0b4:	str	ip, [sp]
   1b0b8:	bl	41f4c <flatcc_json_printer_string_vector_field@@Base>
   1b0bc:	ldr	r0, [pc, #388]	; 1b248 <main@@Base+0x4d60>
   1b0c0:	add	r3, pc, r0
   1b0c4:	ldr	r0, [pc, #384]	; 1b24c <main@@Base+0x4d64>
   1b0c8:	add	r0, pc, r0
   1b0cc:	ldr	r1, [fp, #-4]
   1b0d0:	ldr	r2, [fp, #-8]
   1b0d4:	str	r0, [sp, #32]
   1b0d8:	mov	r0, r1
   1b0dc:	mov	r1, r2
   1b0e0:	movw	r2, #29
   1b0e4:	movw	ip, #23
   1b0e8:	str	ip, [sp]
   1b0ec:	movw	ip, #8
   1b0f0:	str	ip, [sp, #4]
   1b0f4:	ldr	ip, [sp, #32]
   1b0f8:	str	ip, [sp, #8]
   1b0fc:	bl	41bc8 <flatcc_json_printer_struct_vector_field@@Base>
   1b100:	ldr	r0, [pc, #316]	; 1b244 <main@@Base+0x4d5c>
   1b104:	add	r3, pc, r0
   1b108:	ldr	r0, [fp, #-4]
   1b10c:	ldr	r1, [fp, #-8]
   1b110:	movw	r2, #30
   1b114:	movw	ip, #4
   1b118:	str	ip, [sp]
   1b11c:	bl	3e4b4 <flatcc_json_printer_uint8_vector_field@@Base>
   1b120:	ldr	r0, [pc, #276]	; 1b23c <main@@Base+0x4d54>
   1b124:	add	r3, pc, r0
   1b128:	ldr	r0, [pc, #272]	; 1b240 <main@@Base+0x4d58>
   1b12c:	add	r0, pc, r0
   1b130:	ldr	r1, [fp, #-4]
   1b134:	ldr	r2, [fp, #-8]
   1b138:	str	r0, [sp, #28]
   1b13c:	mov	r0, r1
   1b140:	mov	r1, r2
   1b144:	movw	r2, #31
   1b148:	movw	ip, #5
   1b14c:	str	ip, [sp]
   1b150:	movw	ip, #4
   1b154:	str	ip, [sp, #4]
   1b158:	ldr	ip, [sp, #28]
   1b15c:	str	ip, [sp, #8]
   1b160:	bl	41bc8 <flatcc_json_printer_struct_vector_field@@Base>
   1b164:	ldr	r0, [pc, #204]	; 1b238 <main@@Base+0x4d50>
   1b168:	add	r3, pc, r0
   1b16c:	ldr	r0, [fp, #-4]
   1b170:	ldr	r1, [fp, #-8]
   1b174:	movw	r2, #32
   1b178:	movw	ip, #15
   1b17c:	str	ip, [sp]
   1b180:	bl	3f600 <flatcc_json_printer_int64_vector_field@@Base>
   1b184:	ldr	r0, [pc, #168]	; 1b234 <main@@Base+0x4d4c>
   1b188:	add	r3, pc, r0
   1b18c:	ldr	r0, [fp, #-4]
   1b190:	ldr	r1, [fp, #-8]
   1b194:	movw	r2, #33	; 0x21
   1b198:	movw	ip, #17
   1b19c:	str	ip, [sp]
   1b1a0:	bl	3fd6c <flatcc_json_printer_double_vector_field@@Base>
   1b1a4:	ldr	r0, [pc, #128]	; 1b22c <main@@Base+0x4d44>
   1b1a8:	add	r3, pc, r0
   1b1ac:	ldr	r0, [pc, #124]	; 1b230 <main@@Base+0x4d48>
   1b1b0:	add	r0, pc, r0
   1b1b4:	ldr	r1, [fp, #-4]
   1b1b8:	ldr	r2, [fp, #-8]
   1b1bc:	str	r0, [sp, #24]
   1b1c0:	mov	r0, r1
   1b1c4:	mov	r1, r2
   1b1c8:	movw	r2, #34	; 0x22
   1b1cc:	movw	ip, #21
   1b1d0:	str	ip, [sp]
   1b1d4:	ldr	ip, [sp, #24]
   1b1d8:	str	ip, [sp, #4]
   1b1dc:	bl	42970 <flatcc_json_printer_table_field@@Base>
   1b1e0:	ldr	r0, [pc, #60]	; 1b224 <main@@Base+0x4d3c>
   1b1e4:	add	r3, pc, r0
   1b1e8:	ldr	r0, [pc, #56]	; 1b228 <main@@Base+0x4d40>
   1b1ec:	add	r0, pc, r0
   1b1f0:	ldr	r1, [fp, #-4]
   1b1f4:	ldr	r2, [fp, #-8]
   1b1f8:	str	r0, [sp, #20]
   1b1fc:	mov	r0, r1
   1b200:	mov	r1, r2
   1b204:	movw	r2, #35	; 0x23
   1b208:	movw	ip, #10
   1b20c:	str	ip, [sp]
   1b210:	ldr	ip, [sp, #20]
   1b214:	str	ip, [sp, #4]
   1b218:	bl	42970 <flatcc_json_printer_table_field@@Base>
   1b21c:	mov	sp, fp
   1b220:	pop	{fp, pc}
   1b224:	andeq	sp, r2, sl, asr pc
   1b228:	andeq	ip, r0, r8, lsl #8
   1b22c:	andeq	sp, r2, r0, lsl #31
   1b230:	andeq	ip, r0, r0, lsr r4
   1b234:	andeq	sp, r2, lr, lsl #31
   1b238:	muleq	r2, lr, pc	; <UNPREDICTABLE>
   1b23c:	ldrdeq	sp, [r2], -ip
   1b240:	andeq	ip, r0, r8, asr #5
   1b244:	strdeq	sp, [r2], -r7
   1b248:	andeq	lr, r2, r3, lsr #32
   1b24c:	andeq	ip, r0, r4, lsl #9
   1b250:	andeq	lr, r2, r0, lsr r0
   1b254:	andeq	lr, r2, sp, asr #32
   1b258:	andeq	r0, r0, r0
   1b25c:	andeq	lr, r2, sl, rrx
   1b260:	andeq	lr, r2, r8, lsl #1
   1b264:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1b268:	muleq	r2, r7, r0
   1b26c:	andeq	lr, r2, sp, asr #1
   1b270:	andeq	lr, r2, r3, lsl #2
   1b274:	andeq	lr, r2, r9, lsl r1
   1b278:	andeq	lr, r2, pc, lsr #2
   1b27c:	andeq	lr, r2, r6, ror #2
   1b280:	muleq	r2, sp, r1
   1b284:			; <UNDEFINED> instruction: 0x0002e1b4
   1b288:	andeq	lr, r2, pc, asr #3
   1b28c:	strdeq	lr, [r2], -r2
   1b290:	andeq	lr, r2, r4, lsr #4
   1b294:	muleq	r0, ip, r6
   1b298:	andeq	lr, r2, r3, asr r2
   1b29c:			; <UNDEFINED> instruction: 0xfffffd90
   1b2a0:	andeq	lr, r2, r9, lsl #5
   1b2a4:			; <UNDEFINED> instruction: 0xfffffdcc
   1b2a8:			; <UNDEFINED> instruction: 0x0002e2b3
   1b2ac:			; <UNDEFINED> instruction: 0xfffffe08
   1b2b0:	andeq	lr, r2, r1, asr #5
   1b2b4:	strdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   1b2b8:	andeq	ip, r0, r4, lsr #14
   1b2bc:	andeq	lr, r2, r1, asr #9
   1b2c0:	ldrdeq	ip, [r0], -r4
   1b2c4:	andeq	ip, r0, r4, lsr #13
   1b2c8:	muleq	r2, r1, r3
   1b2cc:	andeq	ip, r0, ip, ror #9
   1b2d0:	andeq	lr, r2, r7, lsr #7
   1b2d4:	andeq	lr, r2, r2, asr #7
   1b2d8:	andeq	lr, r2, pc, ror #7
   1b2dc:	andeq	lr, r2, r6, lsl r4
   1b2e0:	andeq	lr, r2, r2, asr r4
   1b2e4:	andeq	ip, r0, ip, lsl #8
   1b2e8:	andeq	lr, r2, r5, ror r1
   1b2ec:	andeq	lr, r2, lr, lsr r1
   1b2f0:	ldrdeq	lr, [r2], -fp
   1b2f4:	andeq	lr, r2, r5, lsr #1
   1b2f8:	push	{fp, lr}
   1b2fc:	mov	fp, sp
   1b300:	sub	sp, sp, #56	; 0x38
   1b304:	str	r0, [fp, #-8]
   1b308:	ldr	r0, [fp, #-8]
   1b30c:	movw	r1, #0
   1b310:	uxth	r1, r1
   1b314:	movw	r2, #32
   1b318:	movw	r3, #16
   1b31c:	uxth	r3, r3
   1b320:	bl	2fb50 <flatcc_verify_field@@Base>
   1b324:	str	r0, [fp, #-12]
   1b328:	cmp	r0, #0
   1b32c:	beq	1b33c <main@@Base+0x4e54>
   1b330:	ldr	r0, [fp, #-12]
   1b334:	str	r0, [fp, #-4]
   1b338:	b	1bac8 <main@@Base+0x55e0>
   1b33c:	ldr	r0, [fp, #-8]
   1b340:	movw	r1, #2
   1b344:	uxth	r2, r1
   1b348:	str	r1, [fp, #-16]
   1b34c:	mov	r1, r2
   1b350:	movw	r2, #2
   1b354:	ldr	r3, [fp, #-16]
   1b358:	uxth	r3, r3
   1b35c:	bl	2fb50 <flatcc_verify_field@@Base>
   1b360:	str	r0, [fp, #-12]
   1b364:	cmp	r0, #0
   1b368:	beq	1b378 <main@@Base+0x4e90>
   1b36c:	ldr	r0, [fp, #-12]
   1b370:	str	r0, [fp, #-4]
   1b374:	b	1bac8 <main@@Base+0x55e0>
   1b378:	ldr	r0, [fp, #-8]
   1b37c:	movw	r1, #1
   1b380:	uxth	r1, r1
   1b384:	movw	r2, #2
   1b388:	movw	r3, #2
   1b38c:	uxth	r3, r3
   1b390:	bl	2fb50 <flatcc_verify_field@@Base>
   1b394:	str	r0, [fp, #-12]
   1b398:	cmp	r0, #0
   1b39c:	beq	1b3ac <main@@Base+0x4ec4>
   1b3a0:	ldr	r0, [fp, #-12]
   1b3a4:	str	r0, [fp, #-4]
   1b3a8:	b	1bac8 <main@@Base+0x55e0>
   1b3ac:	ldr	r0, [fp, #-8]
   1b3b0:	movw	r1, #3
   1b3b4:	uxth	r1, r1
   1b3b8:	movw	r2, #1
   1b3bc:	bl	2fd5c <flatcc_verify_string_field@@Base>
   1b3c0:	str	r0, [fp, #-12]
   1b3c4:	cmp	r0, #0
   1b3c8:	beq	1b3d8 <main@@Base+0x4ef0>
   1b3cc:	ldr	r0, [fp, #-12]
   1b3d0:	str	r0, [fp, #-4]
   1b3d4:	b	1bac8 <main@@Base+0x55e0>
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	movw	r1, #6
   1b3e0:	uxth	r1, r1
   1b3e4:	movw	r2, #1
   1b3e8:	movw	r3, #1
   1b3ec:	uxth	r3, r3
   1b3f0:	bl	2fb50 <flatcc_verify_field@@Base>
   1b3f4:	str	r0, [fp, #-12]
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b40c <main@@Base+0x4f24>
   1b400:	ldr	r0, [fp, #-12]
   1b404:	str	r0, [fp, #-4]
   1b408:	b	1bac8 <main@@Base+0x55e0>
   1b40c:	ldr	r0, [fp, #-8]
   1b410:	movw	r1, #5
   1b414:	uxth	r1, r1
   1b418:	movw	r2, #0
   1b41c:	movw	r3, #1
   1b420:	movw	ip, #1
   1b424:	uxth	ip, ip
   1b428:	str	ip, [sp]
   1b42c:	mvn	ip, #0
   1b430:	str	ip, [sp, #4]
   1b434:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b438:	str	r0, [fp, #-12]
   1b43c:	cmp	r0, #0
   1b440:	beq	1b450 <main@@Base+0x4f68>
   1b444:	ldr	r0, [fp, #-12]
   1b448:	str	r0, [fp, #-4]
   1b44c:	b	1bac8 <main@@Base+0x55e0>
   1b450:	ldr	r0, [pc, #1660]	; 1bad4 <main@@Base+0x55ec>
   1b454:	add	r3, pc, r0
   1b458:	ldr	r0, [fp, #-8]
   1b45c:	movw	r1, #11
   1b460:	uxth	r1, r1
   1b464:	movw	r2, #0
   1b468:	bl	30930 <flatcc_verify_table_vector_field@@Base>
   1b46c:	str	r0, [fp, #-12]
   1b470:	cmp	r0, #0
   1b474:	beq	1b484 <main@@Base+0x4f9c>
   1b478:	ldr	r0, [fp, #-12]
   1b47c:	str	r0, [fp, #-4]
   1b480:	b	1bac8 <main@@Base+0x55e0>
   1b484:	ldr	r0, [fp, #-8]
   1b488:	movw	r1, #10
   1b48c:	uxth	r1, r1
   1b490:	movw	r2, #0
   1b494:	bl	302ec <flatcc_verify_string_vector_field@@Base>
   1b498:	str	r0, [fp, #-12]
   1b49c:	cmp	r0, #0
   1b4a0:	beq	1b4b0 <main@@Base+0x4fc8>
   1b4a4:	ldr	r0, [fp, #-12]
   1b4a8:	str	r0, [fp, #-4]
   1b4ac:	b	1bac8 <main@@Base+0x55e0>
   1b4b0:	ldr	r0, [fp, #-8]
   1b4b4:	movw	r1, #28
   1b4b8:	uxth	r1, r1
   1b4bc:	movw	r2, #0
   1b4c0:	bl	302ec <flatcc_verify_string_vector_field@@Base>
   1b4c4:	str	r0, [fp, #-12]
   1b4c8:	cmp	r0, #0
   1b4cc:	beq	1b4dc <main@@Base+0x4ff4>
   1b4d0:	ldr	r0, [fp, #-12]
   1b4d4:	str	r0, [fp, #-4]
   1b4d8:	b	1bac8 <main@@Base+0x55e0>
   1b4dc:	ldr	r0, [fp, #-8]
   1b4e0:	movw	r1, #24
   1b4e4:	uxth	r1, r1
   1b4e8:	movw	r2, #0
   1b4ec:	movw	r3, #1
   1b4f0:	movw	ip, #1
   1b4f4:	uxth	ip, ip
   1b4f8:	str	ip, [sp]
   1b4fc:	mvn	ip, #0
   1b500:	str	ip, [sp, #4]
   1b504:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b508:	str	r0, [fp, #-12]
   1b50c:	cmp	r0, #0
   1b510:	beq	1b520 <main@@Base+0x5038>
   1b514:	ldr	r0, [fp, #-12]
   1b518:	str	r0, [fp, #-4]
   1b51c:	b	1bac8 <main@@Base+0x55e0>
   1b520:	ldr	r0, [pc, #1456]	; 1bad8 <main@@Base+0x55f0>
   1b524:	ldr	r1, [fp, #-8]
   1b528:	str	r0, [fp, #-20]	; 0xffffffec
   1b52c:	mov	r0, r1
   1b530:	movw	r1, #29
   1b534:	uxth	r1, r1
   1b538:	movw	r2, #0
   1b53c:	movw	r3, #8
   1b540:	movw	ip, #4
   1b544:	uxth	ip, ip
   1b548:	str	ip, [sp]
   1b54c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1b550:	str	ip, [sp, #4]
   1b554:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b558:	str	r0, [fp, #-12]
   1b55c:	cmp	r0, #0
   1b560:	beq	1b570 <main@@Base+0x5088>
   1b564:	ldr	r0, [fp, #-12]
   1b568:	str	r0, [fp, #-4]
   1b56c:	b	1bac8 <main@@Base+0x55e0>
   1b570:	ldr	r0, [pc, #1380]	; 1badc <main@@Base+0x55f4>
   1b574:	add	r3, pc, r0
   1b578:	ldr	r0, [fp, #-8]
   1b57c:	movw	r1, #12
   1b580:	uxth	r1, r1
   1b584:	movw	r2, #0
   1b588:	bl	3056c <flatcc_verify_table_field@@Base>
   1b58c:	str	r0, [fp, #-12]
   1b590:	cmp	r0, #0
   1b594:	beq	1b5a4 <main@@Base+0x50bc>
   1b598:	ldr	r0, [fp, #-12]
   1b59c:	str	r0, [fp, #-4]
   1b5a0:	b	1bac8 <main@@Base+0x55e0>
   1b5a4:	ldr	r0, [pc, #1332]	; 1bae0 <main@@Base+0x55f8>
   1b5a8:	add	r3, pc, r0
   1b5ac:	ldr	r0, [fp, #-8]
   1b5b0:	movw	r1, #8
   1b5b4:	uxth	r1, r1
   1b5b8:	movw	r2, #0
   1b5bc:	bl	317b8 <flatcc_verify_union_field@@Base>
   1b5c0:	str	r0, [fp, #-12]
   1b5c4:	cmp	r0, #0
   1b5c8:	beq	1b5d8 <main@@Base+0x50f0>
   1b5cc:	ldr	r0, [fp, #-12]
   1b5d0:	str	r0, [fp, #-4]
   1b5d4:	b	1bac8 <main@@Base+0x55e0>
   1b5d8:	ldr	r0, [pc, #1284]	; 1bae4 <main@@Base+0x55fc>
   1b5dc:	ldr	r1, [fp, #-8]
   1b5e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b5e4:	mov	r0, r1
   1b5e8:	movw	r1, #9
   1b5ec:	uxth	r1, r1
   1b5f0:	movw	r2, #0
   1b5f4:	movw	r3, #4
   1b5f8:	movw	ip, #2
   1b5fc:	uxth	ip, ip
   1b600:	str	ip, [sp]
   1b604:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1b608:	str	ip, [sp, #4]
   1b60c:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b610:	str	r0, [fp, #-12]
   1b614:	cmp	r0, #0
   1b618:	beq	1b628 <main@@Base+0x5140>
   1b61c:	ldr	r0, [fp, #-12]
   1b620:	str	r0, [fp, #-4]
   1b624:	b	1bac8 <main@@Base+0x55e0>
   1b628:	ldr	r0, [pc, #1204]	; 1bae4 <main@@Base+0x55fc>
   1b62c:	ldr	r1, [fp, #-8]
   1b630:	str	r0, [sp, #28]
   1b634:	mov	r0, r1
   1b638:	movw	r1, #31
   1b63c:	uxth	r1, r1
   1b640:	movw	r2, #0
   1b644:	movw	r3, #4
   1b648:	movw	ip, #2
   1b64c:	uxth	ip, ip
   1b650:	str	ip, [sp]
   1b654:	ldr	ip, [sp, #28]
   1b658:	str	ip, [sp, #4]
   1b65c:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b660:	str	r0, [fp, #-12]
   1b664:	cmp	r0, #0
   1b668:	beq	1b678 <main@@Base+0x5190>
   1b66c:	ldr	r0, [fp, #-12]
   1b670:	str	r0, [fp, #-4]
   1b674:	b	1bac8 <main@@Base+0x55e0>
   1b678:	ldr	r0, [pc, #1128]	; 1bae8 <main@@Base+0x5600>
   1b67c:	add	r0, pc, r0
   1b680:	ldr	r1, [fp, #-8]
   1b684:	str	r0, [sp, #24]
   1b688:	mov	r0, r1
   1b68c:	movw	r1, #13
   1b690:	uxth	r1, r1
   1b694:	movw	r2, #0
   1b698:	str	r2, [sp, #20]
   1b69c:	ldr	r3, [sp, #20]
   1b6a0:	movw	ip, #1
   1b6a4:	uxth	ip, ip
   1b6a8:	str	ip, [sp]
   1b6ac:	ldr	ip, [sp, #24]
   1b6b0:	str	ip, [sp, #4]
   1b6b4:	bl	31610 <flatcc_verify_table_as_nested_root@@Base>
   1b6b8:	str	r0, [fp, #-12]
   1b6bc:	cmp	r0, #0
   1b6c0:	beq	1b6d0 <main@@Base+0x51e8>
   1b6c4:	ldr	r0, [fp, #-12]
   1b6c8:	str	r0, [fp, #-4]
   1b6cc:	b	1bac8 <main@@Base+0x55e0>
   1b6d0:	ldr	r0, [pc, #1044]	; 1baec <main@@Base+0x5604>
   1b6d4:	add	r3, pc, r0
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	movw	r1, #14
   1b6e0:	uxth	r1, r1
   1b6e4:	movw	r2, #0
   1b6e8:	bl	3056c <flatcc_verify_table_field@@Base>
   1b6ec:	str	r0, [fp, #-12]
   1b6f0:	cmp	r0, #0
   1b6f4:	beq	1b704 <main@@Base+0x521c>
   1b6f8:	ldr	r0, [fp, #-12]
   1b6fc:	str	r0, [fp, #-4]
   1b700:	b	1bac8 <main@@Base+0x55e0>
   1b704:	ldr	r0, [fp, #-8]
   1b708:	movw	r1, #15
   1b70c:	uxth	r1, r1
   1b710:	movw	r2, #1
   1b714:	movw	r3, #1
   1b718:	uxth	r3, r3
   1b71c:	bl	2fb50 <flatcc_verify_field@@Base>
   1b720:	str	r0, [fp, #-12]
   1b724:	cmp	r0, #0
   1b728:	beq	1b738 <main@@Base+0x5250>
   1b72c:	ldr	r0, [fp, #-12]
   1b730:	str	r0, [fp, #-4]
   1b734:	b	1bac8 <main@@Base+0x55e0>
   1b738:	ldr	r0, [fp, #-8]
   1b73c:	movw	r1, #16
   1b740:	uxth	r1, r1
   1b744:	movw	r2, #4
   1b748:	movw	r3, #4
   1b74c:	uxth	r3, r3
   1b750:	bl	2fb50 <flatcc_verify_field@@Base>
   1b754:	str	r0, [fp, #-12]
   1b758:	cmp	r0, #0
   1b75c:	beq	1b76c <main@@Base+0x5284>
   1b760:	ldr	r0, [fp, #-12]
   1b764:	str	r0, [fp, #-4]
   1b768:	b	1bac8 <main@@Base+0x55e0>
   1b76c:	ldr	r0, [fp, #-8]
   1b770:	movw	r1, #17
   1b774:	uxth	r1, r1
   1b778:	movw	r2, #4
   1b77c:	movw	r3, #4
   1b780:	uxth	r3, r3
   1b784:	bl	2fb50 <flatcc_verify_field@@Base>
   1b788:	str	r0, [fp, #-12]
   1b78c:	cmp	r0, #0
   1b790:	beq	1b7a0 <main@@Base+0x52b8>
   1b794:	ldr	r0, [fp, #-12]
   1b798:	str	r0, [fp, #-4]
   1b79c:	b	1bac8 <main@@Base+0x55e0>
   1b7a0:	ldr	r0, [fp, #-8]
   1b7a4:	movw	r1, #18
   1b7a8:	uxth	r1, r1
   1b7ac:	movw	r2, #8
   1b7b0:	movw	r3, #8
   1b7b4:	uxth	r3, r3
   1b7b8:	bl	2fb50 <flatcc_verify_field@@Base>
   1b7bc:	str	r0, [fp, #-12]
   1b7c0:	cmp	r0, #0
   1b7c4:	beq	1b7d4 <main@@Base+0x52ec>
   1b7c8:	ldr	r0, [fp, #-12]
   1b7cc:	str	r0, [fp, #-4]
   1b7d0:	b	1bac8 <main@@Base+0x55e0>
   1b7d4:	ldr	r0, [fp, #-8]
   1b7d8:	movw	r1, #19
   1b7dc:	uxth	r1, r1
   1b7e0:	movw	r2, #8
   1b7e4:	movw	r3, #8
   1b7e8:	uxth	r3, r3
   1b7ec:	bl	2fb50 <flatcc_verify_field@@Base>
   1b7f0:	str	r0, [fp, #-12]
   1b7f4:	cmp	r0, #0
   1b7f8:	beq	1b808 <main@@Base+0x5320>
   1b7fc:	ldr	r0, [fp, #-12]
   1b800:	str	r0, [fp, #-4]
   1b804:	b	1bac8 <main@@Base+0x55e0>
   1b808:	ldr	r0, [fp, #-8]
   1b80c:	movw	r1, #20
   1b810:	uxth	r1, r1
   1b814:	movw	r2, #4
   1b818:	movw	r3, #4
   1b81c:	uxth	r3, r3
   1b820:	bl	2fb50 <flatcc_verify_field@@Base>
   1b824:	str	r0, [fp, #-12]
   1b828:	cmp	r0, #0
   1b82c:	beq	1b83c <main@@Base+0x5354>
   1b830:	ldr	r0, [fp, #-12]
   1b834:	str	r0, [fp, #-4]
   1b838:	b	1bac8 <main@@Base+0x55e0>
   1b83c:	ldr	r0, [fp, #-8]
   1b840:	movw	r1, #21
   1b844:	uxth	r1, r1
   1b848:	movw	r2, #4
   1b84c:	movw	r3, #4
   1b850:	uxth	r3, r3
   1b854:	bl	2fb50 <flatcc_verify_field@@Base>
   1b858:	str	r0, [fp, #-12]
   1b85c:	cmp	r0, #0
   1b860:	beq	1b870 <main@@Base+0x5388>
   1b864:	ldr	r0, [fp, #-12]
   1b868:	str	r0, [fp, #-4]
   1b86c:	b	1bac8 <main@@Base+0x55e0>
   1b870:	ldr	r0, [fp, #-8]
   1b874:	movw	r1, #22
   1b878:	uxth	r1, r1
   1b87c:	movw	r2, #8
   1b880:	movw	r3, #8
   1b884:	uxth	r3, r3
   1b888:	bl	2fb50 <flatcc_verify_field@@Base>
   1b88c:	str	r0, [fp, #-12]
   1b890:	cmp	r0, #0
   1b894:	beq	1b8a4 <main@@Base+0x53bc>
   1b898:	ldr	r0, [fp, #-12]
   1b89c:	str	r0, [fp, #-4]
   1b8a0:	b	1bac8 <main@@Base+0x55e0>
   1b8a4:	ldr	r0, [fp, #-8]
   1b8a8:	movw	r1, #23
   1b8ac:	uxth	r1, r1
   1b8b0:	movw	r2, #8
   1b8b4:	movw	r3, #8
   1b8b8:	uxth	r3, r3
   1b8bc:	bl	2fb50 <flatcc_verify_field@@Base>
   1b8c0:	str	r0, [fp, #-12]
   1b8c4:	cmp	r0, #0
   1b8c8:	beq	1b8d8 <main@@Base+0x53f0>
   1b8cc:	ldr	r0, [fp, #-12]
   1b8d0:	str	r0, [fp, #-4]
   1b8d4:	b	1bac8 <main@@Base+0x55e0>
   1b8d8:	ldr	r0, [fp, #-8]
   1b8dc:	movw	r1, #25
   1b8e0:	uxth	r1, r1
   1b8e4:	movw	r2, #4
   1b8e8:	movw	r3, #4
   1b8ec:	uxth	r3, r3
   1b8f0:	bl	2fb50 <flatcc_verify_field@@Base>
   1b8f4:	str	r0, [fp, #-12]
   1b8f8:	cmp	r0, #0
   1b8fc:	beq	1b90c <main@@Base+0x5424>
   1b900:	ldr	r0, [fp, #-12]
   1b904:	str	r0, [fp, #-4]
   1b908:	b	1bac8 <main@@Base+0x55e0>
   1b90c:	ldr	r0, [fp, #-8]
   1b910:	movw	r1, #26
   1b914:	uxth	r1, r1
   1b918:	movw	r2, #4
   1b91c:	movw	r3, #4
   1b920:	uxth	r3, r3
   1b924:	bl	2fb50 <flatcc_verify_field@@Base>
   1b928:	str	r0, [fp, #-12]
   1b92c:	cmp	r0, #0
   1b930:	beq	1b940 <main@@Base+0x5458>
   1b934:	ldr	r0, [fp, #-12]
   1b938:	str	r0, [fp, #-4]
   1b93c:	b	1bac8 <main@@Base+0x55e0>
   1b940:	ldr	r0, [fp, #-8]
   1b944:	movw	r1, #27
   1b948:	uxth	r1, r1
   1b94c:	movw	r2, #4
   1b950:	movw	r3, #4
   1b954:	uxth	r3, r3
   1b958:	bl	2fb50 <flatcc_verify_field@@Base>
   1b95c:	str	r0, [fp, #-12]
   1b960:	cmp	r0, #0
   1b964:	beq	1b974 <main@@Base+0x548c>
   1b968:	ldr	r0, [fp, #-12]
   1b96c:	str	r0, [fp, #-4]
   1b970:	b	1bac8 <main@@Base+0x55e0>
   1b974:	ldr	r0, [fp, #-8]
   1b978:	movw	r1, #30
   1b97c:	uxth	r1, r1
   1b980:	movw	r2, #0
   1b984:	movw	r3, #1
   1b988:	movw	ip, #1
   1b98c:	uxth	ip, ip
   1b990:	str	ip, [sp]
   1b994:	mvn	ip, #0
   1b998:	str	ip, [sp, #4]
   1b99c:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b9a0:	str	r0, [fp, #-12]
   1b9a4:	cmp	r0, #0
   1b9a8:	beq	1b9b8 <main@@Base+0x54d0>
   1b9ac:	ldr	r0, [fp, #-12]
   1b9b0:	str	r0, [fp, #-4]
   1b9b4:	b	1bac8 <main@@Base+0x55e0>
   1b9b8:	ldr	r0, [pc, #280]	; 1bad8 <main@@Base+0x55f0>
   1b9bc:	ldr	r1, [fp, #-8]
   1b9c0:	str	r0, [sp, #16]
   1b9c4:	mov	r0, r1
   1b9c8:	movw	r1, #32
   1b9cc:	uxth	r1, r1
   1b9d0:	movw	r2, #0
   1b9d4:	movw	r3, #8
   1b9d8:	movw	ip, #8
   1b9dc:	uxth	ip, ip
   1b9e0:	str	ip, [sp]
   1b9e4:	ldr	ip, [sp, #16]
   1b9e8:	str	ip, [sp, #4]
   1b9ec:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1b9f0:	str	r0, [fp, #-12]
   1b9f4:	cmp	r0, #0
   1b9f8:	beq	1ba08 <main@@Base+0x5520>
   1b9fc:	ldr	r0, [fp, #-12]
   1ba00:	str	r0, [fp, #-4]
   1ba04:	b	1bac8 <main@@Base+0x55e0>
   1ba08:	ldr	r0, [pc, #200]	; 1bad8 <main@@Base+0x55f0>
   1ba0c:	ldr	r1, [fp, #-8]
   1ba10:	str	r0, [sp, #12]
   1ba14:	mov	r0, r1
   1ba18:	movw	r1, #33	; 0x21
   1ba1c:	uxth	r1, r1
   1ba20:	movw	r2, #0
   1ba24:	movw	r3, #8
   1ba28:	movw	ip, #8
   1ba2c:	uxth	ip, ip
   1ba30:	str	ip, [sp]
   1ba34:	ldr	ip, [sp, #12]
   1ba38:	str	ip, [sp, #4]
   1ba3c:	bl	300b8 <flatcc_verify_vector_field@@Base>
   1ba40:	str	r0, [fp, #-12]
   1ba44:	cmp	r0, #0
   1ba48:	beq	1ba58 <main@@Base+0x5570>
   1ba4c:	ldr	r0, [fp, #-12]
   1ba50:	str	r0, [fp, #-4]
   1ba54:	b	1bac8 <main@@Base+0x55e0>
   1ba58:	ldr	r0, [pc, #144]	; 1baf0 <main@@Base+0x5608>
   1ba5c:	add	r3, pc, r0
   1ba60:	ldr	r0, [fp, #-8]
   1ba64:	movw	r1, #34	; 0x22
   1ba68:	uxth	r1, r1
   1ba6c:	movw	r2, #0
   1ba70:	bl	3056c <flatcc_verify_table_field@@Base>
   1ba74:	str	r0, [fp, #-12]
   1ba78:	cmp	r0, #0
   1ba7c:	beq	1ba8c <main@@Base+0x55a4>
   1ba80:	ldr	r0, [fp, #-12]
   1ba84:	str	r0, [fp, #-4]
   1ba88:	b	1bac8 <main@@Base+0x55e0>
   1ba8c:	ldr	r0, [pc, #96]	; 1baf4 <main@@Base+0x560c>
   1ba90:	add	r3, pc, r0
   1ba94:	ldr	r0, [fp, #-8]
   1ba98:	movw	r1, #35	; 0x23
   1ba9c:	uxth	r1, r1
   1baa0:	movw	r2, #0
   1baa4:	bl	3056c <flatcc_verify_table_field@@Base>
   1baa8:	str	r0, [fp, #-12]
   1baac:	cmp	r0, #0
   1bab0:	beq	1bac0 <main@@Base+0x55d8>
   1bab4:	ldr	r0, [fp, #-12]
   1bab8:	str	r0, [fp, #-4]
   1babc:	b	1bac8 <main@@Base+0x55e0>
   1bac0:	movw	r0, #0
   1bac4:	str	r0, [fp, #-4]
   1bac8:	ldr	r0, [fp, #-4]
   1bacc:	mov	sp, fp
   1bad0:	pop	{fp, pc}
   1bad4:			; <UNDEFINED> instruction: 0xfffffe9c
   1bad8:	svcne	0x00ffffff
   1badc:			; <UNDEFINED> instruction: 0xfffffd7c
   1bae0:	andeq	ip, r0, r0, ror #24
   1bae4:	svccc	0x00ffffff
   1bae8:			; <UNDEFINED> instruction: 0xfffffc74
   1baec:	andeq	ip, r0, r0, lsl #24
   1baf0:	andeq	ip, r0, r8, lsr r9
   1baf4:	andeq	ip, r0, r8, lsl r9
   1baf8:	push	{fp, lr}
   1bafc:	mov	fp, sp
   1bb00:	sub	sp, sp, #24
   1bb04:	str	r0, [fp, #-8]
   1bb08:	str	r1, [sp, #12]
   1bb0c:	str	r2, [sp, #8]
   1bb10:	str	r3, [sp, #4]
   1bb14:	ldr	r0, [sp, #12]
   1bb18:	ldr	r1, [sp, #8]
   1bb1c:	cmp	r0, r1
   1bb20:	beq	1bb34 <main@@Base+0x564c>
   1bb24:	ldr	r0, [sp, #12]
   1bb28:	ldrb	r0, [r0]
   1bb2c:	cmp	r0, #123	; 0x7b
   1bb30:	beq	1bb5c <main@@Base+0x5674>
   1bb34:	ldr	r0, [sp, #4]
   1bb38:	movw	r1, #0
   1bb3c:	str	r1, [r0]
   1bb40:	ldr	r0, [fp, #-8]
   1bb44:	ldr	r1, [sp, #12]
   1bb48:	ldr	r2, [sp, #8]
   1bb4c:	movw	r3, #21
   1bb50:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1bb54:	str	r0, [fp, #-4]
   1bb58:	b	1bbd0 <main@@Base+0x56e8>
   1bb5c:	ldr	r0, [fp, #-8]
   1bb60:	ldr	r1, [sp, #12]
   1bb64:	add	r1, r1, #1
   1bb68:	ldr	r2, [sp, #8]
   1bb6c:	bl	20d78 <main@@Base+0xa890>
   1bb70:	str	r0, [sp, #12]
   1bb74:	ldr	r0, [sp, #12]
   1bb78:	ldr	r1, [sp, #8]
   1bb7c:	cmp	r0, r1
   1bb80:	beq	1bbbc <main@@Base+0x56d4>
   1bb84:	ldr	r0, [sp, #12]
   1bb88:	ldrb	r0, [r0]
   1bb8c:	cmp	r0, #125	; 0x7d
   1bb90:	bne	1bbbc <main@@Base+0x56d4>
   1bb94:	ldr	r0, [sp, #4]
   1bb98:	movw	r1, #0
   1bb9c:	str	r1, [r0]
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r1, [sp, #12]
   1bba8:	add	r1, r1, #1
   1bbac:	ldr	r2, [sp, #8]
   1bbb0:	bl	20d78 <main@@Base+0xa890>
   1bbb4:	str	r0, [fp, #-4]
   1bbb8:	b	1bbd0 <main@@Base+0x56e8>
   1bbbc:	ldr	r0, [sp, #4]
   1bbc0:	movw	r1, #1
   1bbc4:	str	r1, [r0]
   1bbc8:	ldr	r0, [sp, #12]
   1bbcc:	str	r0, [fp, #-4]
   1bbd0:	ldr	r0, [fp, #-4]
   1bbd4:	mov	sp, fp
   1bbd8:	pop	{fp, pc}
   1bbdc:	push	{fp, lr}
   1bbe0:	mov	fp, sp
   1bbe4:	sub	sp, sp, #16
   1bbe8:	str	r0, [sp, #8]
   1bbec:	str	r1, [sp, #4]
   1bbf0:	str	r2, [sp]
   1bbf4:	ldr	r0, [sp, #4]
   1bbf8:	ldr	r1, [sp]
   1bbfc:	cmp	r0, r1
   1bc00:	bne	1bc10 <main@@Base+0x5728>
   1bc04:	ldr	r0, [sp, #4]
   1bc08:	str	r0, [fp, #-4]
   1bc0c:	b	1bc54 <main@@Base+0x576c>
   1bc10:	ldr	r0, [sp, #4]
   1bc14:	ldrb	r0, [r0]
   1bc18:	cmp	r0, #34	; 0x22
   1bc1c:	bne	1bc30 <main@@Base+0x5748>
   1bc20:	ldr	r0, [sp, #4]
   1bc24:	add	r0, r0, #1
   1bc28:	str	r0, [sp, #4]
   1bc2c:	b	1bc4c <main@@Base+0x5764>
   1bc30:	ldr	r0, [sp, #8]
   1bc34:	ldr	r1, [sp, #4]
   1bc38:	ldr	r2, [sp]
   1bc3c:	movw	r3, #5
   1bc40:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1bc44:	str	r0, [fp, #-4]
   1bc48:	b	1bc54 <main@@Base+0x576c>
   1bc4c:	ldr	r0, [sp, #4]
   1bc50:	str	r0, [fp, #-4]
   1bc54:	ldr	r0, [fp, #-4]
   1bc58:	mov	sp, fp
   1bc5c:	pop	{fp, pc}
   1bc60:	push	{fp, lr}
   1bc64:	mov	fp, sp
   1bc68:	sub	sp, sp, #16
   1bc6c:	str	r0, [fp, #-4]
   1bc70:	str	r1, [sp, #8]
   1bc74:	ldr	r0, [sp, #8]
   1bc78:	ldr	r1, [fp, #-4]
   1bc7c:	sub	r0, r0, r1
   1bc80:	str	r0, [sp, #4]
   1bc84:	ldr	r0, [fp, #-4]
   1bc88:	ldr	r1, [sp, #8]
   1bc8c:	bl	20e14 <main@@Base+0xa92c>
   1bc90:	mov	sp, fp
   1bc94:	pop	{fp, pc}
   1bc98:	push	{fp, lr}
   1bc9c:	mov	fp, sp
   1bca0:	sub	sp, sp, #24
   1bca4:	str	r0, [fp, #-8]
   1bca8:	str	r1, [sp, #12]
   1bcac:	str	r2, [sp, #8]
   1bcb0:	str	r3, [sp, #4]
   1bcb4:	ldr	r0, [sp, #12]
   1bcb8:	str	r0, [sp]
   1bcbc:	ldr	r0, [sp, #8]
   1bcc0:	ldr	r1, [sp, #12]
   1bcc4:	sub	r0, r0, r1
   1bcc8:	ldr	r1, [sp, #4]
   1bccc:	cmp	r0, r1
   1bcd0:	bgt	1bce0 <main@@Base+0x57f8>
   1bcd4:	ldr	r0, [sp]
   1bcd8:	str	r0, [fp, #-4]
   1bcdc:	b	1bd88 <main@@Base+0x58a0>
   1bce0:	ldr	r0, [sp, #12]
   1bce4:	ldr	r1, [sp, #4]
   1bce8:	add	r0, r0, r1
   1bcec:	ldrb	r0, [r0]
   1bcf0:	cmp	r0, #34	; 0x22
   1bcf4:	beq	1bd04 <main@@Base+0x581c>
   1bcf8:	ldr	r0, [sp]
   1bcfc:	str	r0, [fp, #-4]
   1bd00:	b	1bd88 <main@@Base+0x58a0>
   1bd04:	ldr	r0, [sp, #4]
   1bd08:	add	r0, r0, #1
   1bd0c:	ldr	r1, [sp, #12]
   1bd10:	add	r0, r1, r0
   1bd14:	str	r0, [sp, #12]
   1bd18:	ldr	r0, [fp, #-8]
   1bd1c:	ldr	r1, [sp, #12]
   1bd20:	ldr	r2, [sp, #8]
   1bd24:	bl	20d78 <main@@Base+0xa890>
   1bd28:	str	r0, [sp, #12]
   1bd2c:	ldr	r0, [sp, #12]
   1bd30:	ldr	r1, [sp, #8]
   1bd34:	cmp	r0, r1
   1bd38:	beq	1bd70 <main@@Base+0x5888>
   1bd3c:	ldr	r0, [sp, #12]
   1bd40:	ldrb	r0, [r0]
   1bd44:	cmp	r0, #58	; 0x3a
   1bd48:	bne	1bd70 <main@@Base+0x5888>
   1bd4c:	ldr	r0, [sp, #12]
   1bd50:	add	r0, r0, #1
   1bd54:	str	r0, [sp, #12]
   1bd58:	ldr	r0, [fp, #-8]
   1bd5c:	ldr	r1, [sp, #12]
   1bd60:	ldr	r2, [sp, #8]
   1bd64:	bl	20d78 <main@@Base+0xa890>
   1bd68:	str	r0, [fp, #-4]
   1bd6c:	b	1bd88 <main@@Base+0x58a0>
   1bd70:	ldr	r0, [fp, #-8]
   1bd74:	ldr	r1, [sp, #12]
   1bd78:	ldr	r2, [sp, #8]
   1bd7c:	movw	r3, #4
   1bd80:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1bd84:	str	r0, [fp, #-4]
   1bd88:	ldr	r0, [fp, #-4]
   1bd8c:	mov	sp, fp
   1bd90:	pop	{fp, pc}
   1bd94:	push	{fp, lr}
   1bd98:	mov	fp, sp
   1bd9c:	sub	sp, sp, #64	; 0x40
   1bda0:	ldr	ip, [fp, #12]
   1bda4:	ldr	lr, [fp, #8]
   1bda8:	str	r0, [fp, #-8]
   1bdac:	str	r1, [fp, #-12]
   1bdb0:	str	r2, [fp, #-16]
   1bdb4:	str	r3, [fp, #-20]	; 0xffffffec
   1bdb8:	ldr	r0, [fp, #-12]
   1bdbc:	str	r0, [fp, #-24]	; 0xffffffe8
   1bdc0:	ldr	r0, [fp, #-12]
   1bdc4:	ldr	r1, [fp, #-16]
   1bdc8:	str	ip, [sp, #20]
   1bdcc:	str	lr, [sp, #16]
   1bdd0:	bl	1bc60 <main@@Base+0x5778>
   1bdd4:	str	r1, [sp, #28]
   1bdd8:	str	r0, [sp, #24]
   1bddc:	ldr	r0, [sp, #24]
   1bde0:	ldr	r1, [sp, #28]
   1bde4:	mvn	r2, #-1845493760	; 0x92000000
   1bde8:	subs	r0, r2, r0
   1bdec:	movw	r2, #25957	; 0x6565
   1bdf0:	movt	r2, #18290	; 0x4772
   1bdf4:	sbcs	r1, r2, r1
   1bdf8:	bcc	1be9c <main@@Base+0x59b4>
   1bdfc:	b	1be00 <main@@Base+0x5918>
   1be00:	ldr	r0, [sp, #28]
   1be04:	movw	r1, #30053	; 0x7565
   1be08:	movt	r1, #17004	; 0x426c
   1be0c:	teq	r0, r1
   1be10:	bne	1be8c <main@@Base+0x59a4>
   1be14:	b	1be18 <main@@Base+0x5930>
   1be18:	ldr	r0, [fp, #-8]
   1be1c:	ldr	r1, [fp, #-12]
   1be20:	str	r1, [fp, #-28]	; 0xffffffe4
   1be24:	ldr	r2, [fp, #-16]
   1be28:	ldr	r3, [fp, #12]
   1be2c:	movw	ip, #4
   1be30:	str	r3, [sp, #12]
   1be34:	mov	r3, ip
   1be38:	ldr	ip, [sp, #12]
   1be3c:	str	ip, [sp]
   1be40:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1be44:	str	r0, [fp, #-12]
   1be48:	ldr	r0, [fp, #-12]
   1be4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be50:	cmp	r0, r1
   1be54:	beq	1be7c <main@@Base+0x5994>
   1be58:	ldr	r0, [fp, #8]
   1be5c:	mov	r1, #0
   1be60:	str	r1, [r0, #4]
   1be64:	mov	r1, #8
   1be68:	str	r1, [r0]
   1be6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be70:	movw	r1, #0
   1be74:	str	r1, [r0]
   1be78:	b	1be88 <main@@Base+0x59a0>
   1be7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be80:	str	r0, [fp, #-4]
   1be84:	b	1bfe4 <main@@Base+0x5afc>
   1be88:	b	1be98 <main@@Base+0x59b0>
   1be8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be90:	str	r0, [fp, #-4]
   1be94:	b	1bfe4 <main@@Base+0x5afc>
   1be98:	b	1bfdc <main@@Base+0x5af4>
   1be9c:	ldr	r0, [sp, #28]
   1bea0:	bic	r0, r0, #255	; 0xff
   1bea4:	movw	r1, #25600	; 0x6400
   1bea8:	movt	r1, #21093	; 0x5265
   1beac:	teq	r0, r1
   1beb0:	bne	1bf2c <main@@Base+0x5a44>
   1beb4:	b	1beb8 <main@@Base+0x59d0>
   1beb8:	ldr	r0, [fp, #-8]
   1bebc:	ldr	r1, [fp, #-12]
   1bec0:	str	r1, [fp, #-28]	; 0xffffffe4
   1bec4:	ldr	r2, [fp, #-16]
   1bec8:	ldr	r3, [fp, #12]
   1becc:	movw	ip, #3
   1bed0:	str	r3, [sp, #8]
   1bed4:	mov	r3, ip
   1bed8:	ldr	ip, [sp, #8]
   1bedc:	str	ip, [sp]
   1bee0:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1bee4:	str	r0, [fp, #-12]
   1bee8:	ldr	r0, [fp, #-12]
   1beec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bef0:	cmp	r0, r1
   1bef4:	beq	1bf1c <main@@Base+0x5a34>
   1bef8:	ldr	r0, [fp, #8]
   1befc:	mov	r1, #0
   1bf00:	str	r1, [r0, #4]
   1bf04:	mov	r1, #1
   1bf08:	str	r1, [r0]
   1bf0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf10:	movw	r1, #0
   1bf14:	str	r1, [r0]
   1bf18:	b	1bf28 <main@@Base+0x5a40>
   1bf1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf20:	str	r0, [fp, #-4]
   1bf24:	b	1bfe4 <main@@Base+0x5afc>
   1bf28:	b	1bfd8 <main@@Base+0x5af0>
   1bf2c:	ldrb	r0, [sp, #27]
   1bf30:	ldr	r1, [sp, #28]
   1bf34:	movw	r2, #25957	; 0x6565
   1bf38:	movt	r2, #18290	; 0x4772
   1bf3c:	eor	r1, r1, r2
   1bf40:	eor	r0, r0, #110	; 0x6e
   1bf44:	orr	r0, r1, r0, lsl #24
   1bf48:	cmp	r0, #0
   1bf4c:	bne	1bfc8 <main@@Base+0x5ae0>
   1bf50:	b	1bf54 <main@@Base+0x5a6c>
   1bf54:	ldr	r0, [fp, #-8]
   1bf58:	ldr	r1, [fp, #-12]
   1bf5c:	str	r1, [fp, #-28]	; 0xffffffe4
   1bf60:	ldr	r2, [fp, #-16]
   1bf64:	ldr	r3, [fp, #12]
   1bf68:	movw	ip, #5
   1bf6c:	str	r3, [sp, #4]
   1bf70:	mov	r3, ip
   1bf74:	ldr	ip, [sp, #4]
   1bf78:	str	ip, [sp]
   1bf7c:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1bf80:	str	r0, [fp, #-12]
   1bf84:	ldr	r0, [fp, #-12]
   1bf88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf8c:	cmp	r0, r1
   1bf90:	beq	1bfb8 <main@@Base+0x5ad0>
   1bf94:	ldr	r0, [fp, #8]
   1bf98:	mov	r1, #0
   1bf9c:	str	r1, [r0, #4]
   1bfa0:	mov	r1, #2
   1bfa4:	str	r1, [r0]
   1bfa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bfac:	movw	r1, #0
   1bfb0:	str	r1, [r0]
   1bfb4:	b	1bfc4 <main@@Base+0x5adc>
   1bfb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfbc:	str	r0, [fp, #-4]
   1bfc0:	b	1bfe4 <main@@Base+0x5afc>
   1bfc4:	b	1bfd4 <main@@Base+0x5aec>
   1bfc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfcc:	str	r0, [fp, #-4]
   1bfd0:	b	1bfe4 <main@@Base+0x5afc>
   1bfd4:	b	1bfd8 <main@@Base+0x5af0>
   1bfd8:	b	1bfdc <main@@Base+0x5af4>
   1bfdc:	ldr	r0, [fp, #-12]
   1bfe0:	str	r0, [fp, #-4]
   1bfe4:	ldr	r0, [fp, #-4]
   1bfe8:	mov	sp, fp
   1bfec:	pop	{fp, pc}
   1bff0:	push	{fp, lr}
   1bff4:	mov	fp, sp
   1bff8:	sub	sp, sp, #56	; 0x38
   1bffc:	ldr	ip, [fp, #12]
   1c000:	ldr	lr, [fp, #8]
   1c004:	str	r0, [fp, #-8]
   1c008:	str	r1, [fp, #-12]
   1c00c:	str	r2, [fp, #-16]
   1c010:	str	r3, [fp, #-20]	; 0xffffffec
   1c014:	ldr	r0, [fp, #-12]
   1c018:	str	r0, [fp, #-24]	; 0xffffffe8
   1c01c:	ldr	r0, [fp, #-12]
   1c020:	ldr	r1, [fp, #-16]
   1c024:	str	ip, [sp, #12]
   1c028:	str	lr, [sp, #8]
   1c02c:	bl	1bc60 <main@@Base+0x5778>
   1c030:	str	r1, [sp, #20]
   1c034:	str	r0, [sp, #16]
   1c038:	ldr	r0, [sp, #16]
   1c03c:	ldr	r1, [sp, #20]
   1c040:	movw	r2, #30060	; 0x756c
   1c044:	movt	r2, #25966	; 0x656e
   1c048:	subs	r0, r2, r0
   1c04c:	movw	r2, #30815	; 0x785f
   1c050:	movt	r2, #26725	; 0x6865
   1c054:	sbcs	r1, r2, r1
   1c058:	bcc	1c244 <main@@Base+0x5d5c>
   1c05c:	b	1c060 <main@@Base+0x5b78>
   1c060:	ldr	r0, [sp, #16]
   1c064:	ldr	r1, [sp, #20]
   1c068:	mvn	r2, #-1912602624	; 0x8e000000
   1c06c:	subs	r0, r2, r0
   1c070:	movw	r2, #27759	; 0x6c6f
   1c074:	movt	r2, #17263	; 0x436f
   1c078:	sbcs	r1, r2, r1
   1c07c:	bcc	1c118 <main@@Base+0x5c30>
   1c080:	b	1c084 <main@@Base+0x5b9c>
   1c084:	ldr	r0, [sp, #20]
   1c088:	bic	r0, r0, #255	; 0xff
   1c08c:	movw	r1, #30976	; 0x7900
   1c090:	movt	r1, #16750	; 0x416e
   1c094:	teq	r0, r1
   1c098:	bne	1c108 <main@@Base+0x5c20>
   1c09c:	b	1c0a0 <main@@Base+0x5bb8>
   1c0a0:	ldr	r0, [fp, #-8]
   1c0a4:	ldr	r1, [fp, #-12]
   1c0a8:	str	r1, [sp, #28]
   1c0ac:	ldr	r2, [fp, #-16]
   1c0b0:	movw	r3, #3
   1c0b4:	bl	20f88 <main@@Base+0xaaa0>
   1c0b8:	str	r0, [fp, #-12]
   1c0bc:	ldr	r0, [fp, #-12]
   1c0c0:	ldr	r1, [sp, #28]
   1c0c4:	cmp	r0, r1
   1c0c8:	beq	1c0f8 <main@@Base+0x5c10>
   1c0cc:	ldr	r0, [fp, #-8]
   1c0d0:	ldr	r1, [fp, #-12]
   1c0d4:	ldr	r2, [fp, #-16]
   1c0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0dc:	ldr	ip, [fp, #8]
   1c0e0:	ldr	lr, [fp, #12]
   1c0e4:	str	ip, [sp]
   1c0e8:	str	lr, [sp, #4]
   1c0ec:	bl	1e8d0 <main@@Base+0x83e8>
   1c0f0:	str	r0, [fp, #-12]
   1c0f4:	b	1c104 <main@@Base+0x5c1c>
   1c0f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0fc:	str	r0, [fp, #-4]
   1c100:	b	1c580 <main@@Base+0x6098>
   1c104:	b	1c114 <main@@Base+0x5c2c>
   1c108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c10c:	str	r0, [fp, #-4]
   1c110:	b	1c580 <main@@Base+0x6098>
   1c114:	b	1c240 <main@@Base+0x5d58>
   1c118:	ldr	r0, [sp, #20]
   1c11c:	bic	r0, r0, #255	; 0xff
   1c120:	movw	r1, #28416	; 0x6f00
   1c124:	movt	r1, #18031	; 0x466f
   1c128:	teq	r0, r1
   1c12c:	bne	1c19c <main@@Base+0x5cb4>
   1c130:	b	1c134 <main@@Base+0x5c4c>
   1c134:	ldr	r0, [fp, #-8]
   1c138:	ldr	r1, [fp, #-12]
   1c13c:	str	r1, [sp, #28]
   1c140:	ldr	r2, [fp, #-16]
   1c144:	movw	r3, #3
   1c148:	bl	20f88 <main@@Base+0xaaa0>
   1c14c:	str	r0, [fp, #-12]
   1c150:	ldr	r0, [fp, #-12]
   1c154:	ldr	r1, [sp, #28]
   1c158:	cmp	r0, r1
   1c15c:	beq	1c18c <main@@Base+0x5ca4>
   1c160:	ldr	r0, [fp, #-8]
   1c164:	ldr	r1, [fp, #-12]
   1c168:	ldr	r2, [fp, #-16]
   1c16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c170:	ldr	ip, [fp, #8]
   1c174:	ldr	lr, [fp, #12]
   1c178:	str	ip, [sp]
   1c17c:	str	lr, [sp, #4]
   1c180:	bl	2100c <main@@Base+0xab24>
   1c184:	str	r0, [fp, #-12]
   1c188:	b	1c198 <main@@Base+0x5cb0>
   1c18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c190:	str	r0, [fp, #-4]
   1c194:	b	1c580 <main@@Base+0x6098>
   1c198:	b	1c23c <main@@Base+0x5d54>
   1c19c:	ldrb	r0, [sp, #19]
   1c1a0:	ldr	r1, [sp, #20]
   1c1a4:	movw	r2, #27759	; 0x6c6f
   1c1a8:	movt	r2, #17263	; 0x436f
   1c1ac:	eor	r1, r1, r2
   1c1b0:	eor	r0, r0, #114	; 0x72
   1c1b4:	orr	r0, r1, r0, lsl #24
   1c1b8:	cmp	r0, #0
   1c1bc:	bne	1c22c <main@@Base+0x5d44>
   1c1c0:	b	1c1c4 <main@@Base+0x5cdc>
   1c1c4:	ldr	r0, [fp, #-8]
   1c1c8:	ldr	r1, [fp, #-12]
   1c1cc:	str	r1, [sp, #28]
   1c1d0:	ldr	r2, [fp, #-16]
   1c1d4:	movw	r3, #5
   1c1d8:	bl	20f88 <main@@Base+0xaaa0>
   1c1dc:	str	r0, [fp, #-12]
   1c1e0:	ldr	r0, [fp, #-12]
   1c1e4:	ldr	r1, [sp, #28]
   1c1e8:	cmp	r0, r1
   1c1ec:	beq	1c21c <main@@Base+0x5d34>
   1c1f0:	ldr	r0, [fp, #-8]
   1c1f4:	ldr	r1, [fp, #-12]
   1c1f8:	ldr	r2, [fp, #-16]
   1c1fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c200:	ldr	ip, [fp, #8]
   1c204:	ldr	lr, [fp, #12]
   1c208:	str	ip, [sp]
   1c20c:	str	lr, [sp, #4]
   1c210:	bl	1bd94 <main@@Base+0x58ac>
   1c214:	str	r0, [fp, #-12]
   1c218:	b	1c228 <main@@Base+0x5d40>
   1c21c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c220:	str	r0, [fp, #-4]
   1c224:	b	1c580 <main@@Base+0x6098>
   1c228:	b	1c238 <main@@Base+0x5d50>
   1c22c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c230:	str	r0, [fp, #-4]
   1c234:	b	1c580 <main@@Base+0x6098>
   1c238:	b	1c23c <main@@Base+0x5d54>
   1c23c:	b	1c240 <main@@Base+0x5d58>
   1c240:	b	1c578 <main@@Base+0x6090>
   1c244:	ldr	r0, [sp, #16]
   1c248:	ldr	r1, [sp, #20]
   1c24c:	movw	r2, #30060	; 0x756c
   1c250:	movt	r2, #25966	; 0x656e
   1c254:	subs	r0, r2, r0
   1c258:	movw	r2, #29791	; 0x745f
   1c25c:	movt	r2, #26990	; 0x696e
   1c260:	sbcs	r1, r2, r1
   1c264:	bcc	1c314 <main@@Base+0x5e2c>
   1c268:	b	1c26c <main@@Base+0x5d84>
   1c26c:	ldr	r0, [sp, #16]
   1c270:	ldr	r1, [sp, #20]
   1c274:	movw	r2, #30815	; 0x785f
   1c278:	movt	r2, #26725	; 0x6865
   1c27c:	eor	r1, r1, r2
   1c280:	movw	r2, #30061	; 0x756d
   1c284:	movt	r2, #25966	; 0x656e
   1c288:	eor	r0, r0, r2
   1c28c:	orr	r0, r0, r1
   1c290:	cmp	r0, #0
   1c294:	bne	1c304 <main@@Base+0x5e1c>
   1c298:	b	1c29c <main@@Base+0x5db4>
   1c29c:	ldr	r0, [fp, #-8]
   1c2a0:	ldr	r1, [fp, #-12]
   1c2a4:	str	r1, [sp, #28]
   1c2a8:	ldr	r2, [fp, #-16]
   1c2ac:	movw	r3, #8
   1c2b0:	bl	20f88 <main@@Base+0xaaa0>
   1c2b4:	str	r0, [fp, #-12]
   1c2b8:	ldr	r0, [fp, #-12]
   1c2bc:	ldr	r1, [sp, #28]
   1c2c0:	cmp	r0, r1
   1c2c4:	beq	1c2f4 <main@@Base+0x5e0c>
   1c2c8:	ldr	r0, [fp, #-8]
   1c2cc:	ldr	r1, [fp, #-12]
   1c2d0:	ldr	r2, [fp, #-16]
   1c2d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2d8:	ldr	ip, [fp, #8]
   1c2dc:	ldr	lr, [fp, #12]
   1c2e0:	str	ip, [sp]
   1c2e4:	str	lr, [sp, #4]
   1c2e8:	bl	21248 <main@@Base+0xad60>
   1c2ec:	str	r0, [fp, #-12]
   1c2f0:	b	1c300 <main@@Base+0x5e18>
   1c2f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f8:	str	r0, [fp, #-4]
   1c2fc:	b	1c580 <main@@Base+0x6098>
   1c300:	b	1c310 <main@@Base+0x5e28>
   1c304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c308:	str	r0, [fp, #-4]
   1c30c:	b	1c580 <main@@Base+0x6098>
   1c310:	b	1c574 <main@@Base+0x608c>
   1c314:	ldr	r0, [sp, #16]
   1c318:	ldr	r1, [sp, #20]
   1c31c:	movw	r2, #30060	; 0x756c
   1c320:	movt	r2, #25966	; 0x656e
   1c324:	subs	r0, r2, r0
   1c328:	movw	r2, #26463	; 0x675f
   1c32c:	movt	r2, #28261	; 0x6e65
   1c330:	sbcs	r1, r2, r1
   1c334:	bcc	1c3e4 <main@@Base+0x5efc>
   1c338:	b	1c33c <main@@Base+0x5e54>
   1c33c:	ldr	r0, [sp, #16]
   1c340:	ldr	r1, [sp, #20]
   1c344:	movw	r2, #29791	; 0x745f
   1c348:	movt	r2, #26990	; 0x696e
   1c34c:	eor	r1, r1, r2
   1c350:	movw	r2, #30061	; 0x756d
   1c354:	movt	r2, #25966	; 0x656e
   1c358:	eor	r0, r0, r2
   1c35c:	orr	r0, r0, r1
   1c360:	cmp	r0, #0
   1c364:	bne	1c3d4 <main@@Base+0x5eec>
   1c368:	b	1c36c <main@@Base+0x5e84>
   1c36c:	ldr	r0, [fp, #-8]
   1c370:	ldr	r1, [fp, #-12]
   1c374:	str	r1, [sp, #28]
   1c378:	ldr	r2, [fp, #-16]
   1c37c:	movw	r3, #8
   1c380:	bl	20f88 <main@@Base+0xaaa0>
   1c384:	str	r0, [fp, #-12]
   1c388:	ldr	r0, [fp, #-12]
   1c38c:	ldr	r1, [sp, #28]
   1c390:	cmp	r0, r1
   1c394:	beq	1c3c4 <main@@Base+0x5edc>
   1c398:	ldr	r0, [fp, #-8]
   1c39c:	ldr	r1, [fp, #-12]
   1c3a0:	ldr	r2, [fp, #-16]
   1c3a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c3a8:	ldr	ip, [fp, #8]
   1c3ac:	ldr	lr, [fp, #12]
   1c3b0:	str	ip, [sp]
   1c3b4:	str	lr, [sp, #4]
   1c3b8:	bl	214a0 <main@@Base+0xafb8>
   1c3bc:	str	r0, [fp, #-12]
   1c3c0:	b	1c3d0 <main@@Base+0x5ee8>
   1c3c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3c8:	str	r0, [fp, #-4]
   1c3cc:	b	1c580 <main@@Base+0x6098>
   1c3d0:	b	1c3e0 <main@@Base+0x5ef8>
   1c3d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c3d8:	str	r0, [fp, #-4]
   1c3dc:	b	1c580 <main@@Base+0x6098>
   1c3e0:	b	1c570 <main@@Base+0x6088>
   1c3e4:	ldr	r0, [sp, #16]
   1c3e8:	ldr	r1, [sp, #20]
   1c3ec:	movw	r2, #26463	; 0x675f
   1c3f0:	movt	r2, #28261	; 0x6e65
   1c3f4:	eor	r1, r1, r2
   1c3f8:	movw	r2, #30061	; 0x756d
   1c3fc:	movt	r2, #25966	; 0x656e
   1c400:	eor	r0, r0, r2
   1c404:	orr	r0, r0, r1
   1c408:	cmp	r0, #0
   1c40c:	bne	1c474 <main@@Base+0x5f8c>
   1c410:	b	1c414 <main@@Base+0x5f2c>
   1c414:	ldr	r0, [fp, #-8]
   1c418:	ldr	r1, [fp, #-12]
   1c41c:	str	r1, [sp, #28]
   1c420:	ldr	r2, [fp, #-16]
   1c424:	movw	r3, #8
   1c428:	bl	20f88 <main@@Base+0xaaa0>
   1c42c:	str	r0, [fp, #-12]
   1c430:	ldr	r0, [fp, #-12]
   1c434:	ldr	r1, [sp, #28]
   1c438:	cmp	r0, r1
   1c43c:	beq	1c46c <main@@Base+0x5f84>
   1c440:	ldr	r0, [fp, #-8]
   1c444:	ldr	r1, [fp, #-12]
   1c448:	ldr	r2, [fp, #-16]
   1c44c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c450:	ldr	ip, [fp, #8]
   1c454:	ldr	lr, [fp, #12]
   1c458:	str	ip, [sp]
   1c45c:	str	lr, [sp, #4]
   1c460:	bl	217d8 <main@@Base+0xb2f0>
   1c464:	str	r0, [fp, #-12]
   1c468:	b	1c470 <main@@Base+0x5f88>
   1c46c:	b	1c47c <main@@Base+0x5f94>
   1c470:	b	1c478 <main@@Base+0x5f90>
   1c474:	b	1c47c <main@@Base+0x5f94>
   1c478:	b	1c56c <main@@Base+0x6084>
   1c47c:	ldr	r0, [sp, #16]
   1c480:	ldr	r1, [sp, #20]
   1c484:	movw	r2, #29797	; 0x7465
   1c488:	movt	r2, #28271	; 0x6e6f
   1c48c:	eor	r1, r1, r2
   1c490:	movw	r2, #29817	; 0x7479
   1c494:	movt	r2, #28016	; 0x6d70
   1c498:	eor	r0, r0, r2
   1c49c:	orr	r0, r0, r1
   1c4a0:	cmp	r0, #0
   1c4a4:	bne	1c55c <main@@Base+0x6074>
   1c4a8:	b	1c4ac <main@@Base+0x5fc4>
   1c4ac:	ldr	r0, [fp, #-12]
   1c4b0:	add	r0, r0, #8
   1c4b4:	str	r0, [fp, #-12]
   1c4b8:	ldr	r0, [fp, #-12]
   1c4bc:	ldr	r1, [fp, #-16]
   1c4c0:	bl	1bc60 <main@@Base+0x5778>
   1c4c4:	str	r1, [sp, #20]
   1c4c8:	str	r0, [sp, #16]
   1c4cc:	ldr	r0, [sp, #20]
   1c4d0:	movw	r1, #30061	; 0x756d
   1c4d4:	movt	r1, #25966	; 0x656e
   1c4d8:	teq	r0, r1
   1c4dc:	bne	1c54c <main@@Base+0x6064>
   1c4e0:	b	1c4e4 <main@@Base+0x5ffc>
   1c4e4:	ldr	r0, [fp, #-8]
   1c4e8:	ldr	r1, [fp, #-12]
   1c4ec:	str	r1, [sp, #28]
   1c4f0:	ldr	r2, [fp, #-16]
   1c4f4:	movw	r3, #4
   1c4f8:	bl	20f88 <main@@Base+0xaaa0>
   1c4fc:	str	r0, [fp, #-12]
   1c500:	ldr	r0, [fp, #-12]
   1c504:	ldr	r1, [sp, #28]
   1c508:	cmp	r0, r1
   1c50c:	beq	1c53c <main@@Base+0x6054>
   1c510:	ldr	r0, [fp, #-8]
   1c514:	ldr	r1, [fp, #-12]
   1c518:	ldr	r2, [fp, #-16]
   1c51c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c520:	ldr	ip, [fp, #8]
   1c524:	ldr	lr, [fp, #12]
   1c528:	str	ip, [sp]
   1c52c:	str	lr, [sp, #4]
   1c530:	bl	21a14 <main@@Base+0xb52c>
   1c534:	str	r0, [fp, #-12]
   1c538:	b	1c548 <main@@Base+0x6060>
   1c53c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c540:	str	r0, [fp, #-4]
   1c544:	b	1c580 <main@@Base+0x6098>
   1c548:	b	1c558 <main@@Base+0x6070>
   1c54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c550:	str	r0, [fp, #-4]
   1c554:	b	1c580 <main@@Base+0x6098>
   1c558:	b	1c568 <main@@Base+0x6080>
   1c55c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c560:	str	r0, [fp, #-4]
   1c564:	b	1c580 <main@@Base+0x6098>
   1c568:	b	1c56c <main@@Base+0x6084>
   1c56c:	b	1c570 <main@@Base+0x6088>
   1c570:	b	1c574 <main@@Base+0x608c>
   1c574:	b	1c578 <main@@Base+0x6090>
   1c578:	ldr	r0, [fp, #-12]
   1c57c:	str	r0, [fp, #-4]
   1c580:	ldr	r0, [fp, #-4]
   1c584:	mov	sp, fp
   1c588:	pop	{fp, pc}
   1c58c:	push	{fp, lr}
   1c590:	mov	fp, sp
   1c594:	sub	sp, sp, #56	; 0x38
   1c598:	ldr	ip, [fp, #12]
   1c59c:	ldr	lr, [fp, #8]
   1c5a0:	str	r0, [fp, #-8]
   1c5a4:	str	r1, [fp, #-12]
   1c5a8:	str	r2, [fp, #-16]
   1c5ac:	str	r3, [fp, #-20]	; 0xffffffec
   1c5b0:	ldr	r0, [fp, #-12]
   1c5b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5b8:	ldr	r0, [fp, #-12]
   1c5bc:	ldr	r1, [fp, #-16]
   1c5c0:	str	ip, [sp, #12]
   1c5c4:	str	lr, [sp, #8]
   1c5c8:	bl	1bc60 <main@@Base+0x5778>
   1c5cc:	str	r1, [sp, #20]
   1c5d0:	str	r0, [sp, #16]
   1c5d4:	ldr	r0, [sp, #16]
   1c5d8:	ldr	r1, [sp, #20]
   1c5dc:	movw	r2, #11844	; 0x2e44
   1c5e0:	movt	r2, #28005	; 0x6d65
   1c5e4:	subs	r0, r2, r0
   1c5e8:	movw	r2, #18273	; 0x4761
   1c5ec:	movt	r2, #19833	; 0x4d79
   1c5f0:	sbcs	r1, r2, r1
   1c5f4:	bcc	1c748 <main@@Base+0x6260>
   1c5f8:	b	1c5fc <main@@Base+0x6114>
   1c5fc:	ldr	r0, [sp, #16]
   1c600:	ldr	r1, [sp, #20]
   1c604:	movw	r2, #28276	; 0x6e74
   1c608:	movt	r2, #18017	; 0x4661
   1c60c:	eor	r1, r1, r2
   1c610:	movw	r2, #31022	; 0x792e
   1c614:	movt	r2, #24947	; 0x6173
   1c618:	eor	r0, r0, r2
   1c61c:	orr	r0, r0, r1
   1c620:	cmp	r0, #0
   1c624:	bne	1c738 <main@@Base+0x6250>
   1c628:	b	1c62c <main@@Base+0x6144>
   1c62c:	ldr	r0, [fp, #-12]
   1c630:	add	r0, r0, #8
   1c634:	str	r0, [fp, #-12]
   1c638:	ldr	r0, [fp, #-12]
   1c63c:	ldr	r1, [fp, #-16]
   1c640:	bl	1bc60 <main@@Base+0x5778>
   1c644:	str	r1, [sp, #20]
   1c648:	str	r0, [sp, #16]
   1c64c:	ldr	r0, [sp, #16]
   1c650:	ldr	r1, [sp, #20]
   1c654:	movw	r2, #24946	; 0x6172
   1c658:	movt	r2, #17256	; 0x4368
   1c65c:	eor	r1, r1, r2
   1c660:	movw	r2, #29797	; 0x7465
   1c664:	movt	r2, #24931	; 0x6163
   1c668:	eor	r0, r0, r2
   1c66c:	orr	r0, r0, r1
   1c670:	cmp	r0, #0
   1c674:	bne	1c728 <main@@Base+0x6240>
   1c678:	b	1c67c <main@@Base+0x6194>
   1c67c:	ldr	r0, [fp, #-12]
   1c680:	add	r0, r0, #8
   1c684:	str	r0, [fp, #-12]
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	ldr	r1, [fp, #-16]
   1c690:	bl	1bc60 <main@@Base+0x5778>
   1c694:	str	r1, [sp, #20]
   1c698:	str	r0, [sp, #16]
   1c69c:	ldrb	r0, [sp, #23]
   1c6a0:	mov	r1, #1912602624	; 0x72000000
   1c6a4:	teq	r1, r0, lsl #24
   1c6a8:	bne	1c718 <main@@Base+0x6230>
   1c6ac:	b	1c6b0 <main@@Base+0x61c8>
   1c6b0:	ldr	r0, [fp, #-8]
   1c6b4:	ldr	r1, [fp, #-12]
   1c6b8:	str	r1, [sp, #28]
   1c6bc:	ldr	r2, [fp, #-16]
   1c6c0:	movw	r3, #1
   1c6c4:	bl	20f88 <main@@Base+0xaaa0>
   1c6c8:	str	r0, [fp, #-12]
   1c6cc:	ldr	r0, [fp, #-12]
   1c6d0:	ldr	r1, [sp, #28]
   1c6d4:	cmp	r0, r1
   1c6d8:	beq	1c708 <main@@Base+0x6220>
   1c6dc:	ldr	r0, [fp, #-8]
   1c6e0:	ldr	r1, [fp, #-12]
   1c6e4:	ldr	r2, [fp, #-16]
   1c6e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6ec:	ldr	ip, [fp, #8]
   1c6f0:	ldr	lr, [fp, #12]
   1c6f4:	str	ip, [sp]
   1c6f8:	str	lr, [sp, #4]
   1c6fc:	bl	21b00 <main@@Base+0xb618>
   1c700:	str	r0, [fp, #-12]
   1c704:	b	1c714 <main@@Base+0x622c>
   1c708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c70c:	str	r0, [fp, #-4]
   1c710:	b	1d13c <main@@Base+0x6c54>
   1c714:	b	1c724 <main@@Base+0x623c>
   1c718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c71c:	str	r0, [fp, #-4]
   1c720:	b	1d13c <main@@Base+0x6c54>
   1c724:	b	1c734 <main@@Base+0x624c>
   1c728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c72c:	str	r0, [fp, #-4]
   1c730:	b	1d13c <main@@Base+0x6c54>
   1c734:	b	1c744 <main@@Base+0x625c>
   1c738:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c73c:	str	r0, [fp, #-4]
   1c740:	b	1d13c <main@@Base+0x6c54>
   1c744:	b	1d134 <main@@Base+0x6c4c>
   1c748:	ldr	r0, [sp, #16]
   1c74c:	ldr	r1, [sp, #20]
   1c750:	movw	r2, #18273	; 0x4761
   1c754:	movt	r2, #19833	; 0x4d79
   1c758:	eor	r1, r1, r2
   1c75c:	movw	r2, #11845	; 0x2e45
   1c760:	movt	r2, #28005	; 0x6d65
   1c764:	eor	r0, r0, r2
   1c768:	orr	r0, r0, r1
   1c76c:	cmp	r0, #0
   1c770:	bne	1cf24 <main@@Base+0x6a3c>
   1c774:	b	1c778 <main@@Base+0x6290>
   1c778:	ldr	r0, [fp, #-12]
   1c77c:	add	r0, r0, #8
   1c780:	str	r0, [fp, #-12]
   1c784:	ldr	r0, [fp, #-12]
   1c788:	ldr	r1, [fp, #-16]
   1c78c:	bl	1bc60 <main@@Base+0x5778>
   1c790:	str	r1, [sp, #20]
   1c794:	str	r0, [sp, #16]
   1c798:	ldr	r0, [sp, #16]
   1c79c:	ldr	r1, [sp, #20]
   1c7a0:	movw	r2, #11879	; 0x2e67
   1c7a4:	movt	r2, #27749	; 0x6c65
   1c7a8:	subs	r0, r2, r0
   1c7ac:	movw	r2, #28016	; 0x6d70
   1c7b0:	movt	r2, #30817	; 0x7861
   1c7b4:	sbcs	r1, r2, r1
   1c7b8:	bcc	1cab0 <main@@Base+0x65c8>
   1c7bc:	b	1c7c0 <main@@Base+0x62d8>
   1c7c0:	ldr	r0, [sp, #16]
   1c7c4:	ldr	r1, [sp, #20]
   1c7c8:	movw	r2, #11842	; 0x2e42
   1c7cc:	movt	r2, #27749	; 0x6c65
   1c7d0:	subs	r0, r2, r0
   1c7d4:	movw	r2, #28016	; 0x6d70
   1c7d8:	movt	r2, #30817	; 0x7861
   1c7dc:	sbcs	r1, r2, r1
   1c7e0:	bcc	1c8d8 <main@@Base+0x63f0>
   1c7e4:	b	1c7e8 <main@@Base+0x6300>
   1c7e8:	ldr	r0, [sp, #16]
   1c7ec:	ldr	r1, [sp, #20]
   1c7f0:	movw	r2, #28016	; 0x6d70
   1c7f4:	movt	r2, #30817	; 0x7861
   1c7f8:	eor	r1, r1, r2
   1c7fc:	movw	r2, #11841	; 0x2e41
   1c800:	movt	r2, #27749	; 0x6c65
   1c804:	eor	r0, r0, r2
   1c808:	orr	r0, r0, r1
   1c80c:	cmp	r0, #0
   1c810:	bne	1c8c8 <main@@Base+0x63e0>
   1c814:	b	1c818 <main@@Base+0x6330>
   1c818:	ldr	r0, [fp, #-12]
   1c81c:	add	r0, r0, #8
   1c820:	str	r0, [fp, #-12]
   1c824:	ldr	r0, [fp, #-12]
   1c828:	ldr	r1, [fp, #-16]
   1c82c:	bl	1bc60 <main@@Base+0x5778>
   1c830:	str	r1, [sp, #20]
   1c834:	str	r0, [sp, #16]
   1c838:	ldrh	r0, [sp, #22]
   1c83c:	movw	r1, #0
   1c840:	movt	r1, #28281	; 0x6e79
   1c844:	teq	r1, r0, lsl #16
   1c848:	bne	1c8b8 <main@@Base+0x63d0>
   1c84c:	b	1c850 <main@@Base+0x6368>
   1c850:	ldr	r0, [fp, #-8]
   1c854:	ldr	r1, [fp, #-12]
   1c858:	str	r1, [sp, #28]
   1c85c:	ldr	r2, [fp, #-16]
   1c860:	movw	r3, #2
   1c864:	bl	20f88 <main@@Base+0xaaa0>
   1c868:	str	r0, [fp, #-12]
   1c86c:	ldr	r0, [fp, #-12]
   1c870:	ldr	r1, [sp, #28]
   1c874:	cmp	r0, r1
   1c878:	beq	1c8a8 <main@@Base+0x63c0>
   1c87c:	ldr	r0, [fp, #-8]
   1c880:	ldr	r1, [fp, #-12]
   1c884:	ldr	r2, [fp, #-16]
   1c888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c88c:	ldr	ip, [fp, #8]
   1c890:	ldr	lr, [fp, #12]
   1c894:	str	ip, [sp]
   1c898:	str	lr, [sp, #4]
   1c89c:	bl	1e8d0 <main@@Base+0x83e8>
   1c8a0:	str	r0, [fp, #-12]
   1c8a4:	b	1c8b4 <main@@Base+0x63cc>
   1c8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8ac:	str	r0, [fp, #-4]
   1c8b0:	b	1d13c <main@@Base+0x6c54>
   1c8b4:	b	1c8c4 <main@@Base+0x63dc>
   1c8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8bc:	str	r0, [fp, #-4]
   1c8c0:	b	1d13c <main@@Base+0x6c54>
   1c8c4:	b	1c8d4 <main@@Base+0x63ec>
   1c8c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8cc:	str	r0, [fp, #-4]
   1c8d0:	b	1d13c <main@@Base+0x6c54>
   1c8d4:	b	1caac <main@@Base+0x65c4>
   1c8d8:	ldr	r0, [sp, #16]
   1c8dc:	ldr	r1, [sp, #20]
   1c8e0:	movw	r2, #28016	; 0x6d70
   1c8e4:	movt	r2, #30817	; 0x7861
   1c8e8:	eor	r1, r1, r2
   1c8ec:	movw	r2, #11843	; 0x2e43
   1c8f0:	movt	r2, #27749	; 0x6c65
   1c8f4:	eor	r0, r0, r2
   1c8f8:	orr	r0, r0, r1
   1c8fc:	cmp	r0, #0
   1c900:	bne	1c9b8 <main@@Base+0x64d0>
   1c904:	b	1c908 <main@@Base+0x6420>
   1c908:	ldr	r0, [fp, #-12]
   1c90c:	add	r0, r0, #8
   1c910:	str	r0, [fp, #-12]
   1c914:	ldr	r0, [fp, #-12]
   1c918:	ldr	r1, [fp, #-16]
   1c91c:	bl	1bc60 <main@@Base+0x5778>
   1c920:	str	r1, [sp, #20]
   1c924:	str	r0, [sp, #16]
   1c928:	ldr	r0, [sp, #20]
   1c92c:	movw	r1, #28530	; 0x6f72
   1c930:	movt	r1, #28524	; 0x6f6c
   1c934:	teq	r0, r1
   1c938:	bne	1c9a8 <main@@Base+0x64c0>
   1c93c:	b	1c940 <main@@Base+0x6458>
   1c940:	ldr	r0, [fp, #-8]
   1c944:	ldr	r1, [fp, #-12]
   1c948:	str	r1, [sp, #28]
   1c94c:	ldr	r2, [fp, #-16]
   1c950:	movw	r3, #4
   1c954:	bl	20f88 <main@@Base+0xaaa0>
   1c958:	str	r0, [fp, #-12]
   1c95c:	ldr	r0, [fp, #-12]
   1c960:	ldr	r1, [sp, #28]
   1c964:	cmp	r0, r1
   1c968:	beq	1c998 <main@@Base+0x64b0>
   1c96c:	ldr	r0, [fp, #-8]
   1c970:	ldr	r1, [fp, #-12]
   1c974:	ldr	r2, [fp, #-16]
   1c978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c97c:	ldr	ip, [fp, #8]
   1c980:	ldr	lr, [fp, #12]
   1c984:	str	ip, [sp]
   1c988:	str	lr, [sp, #4]
   1c98c:	bl	1bd94 <main@@Base+0x58ac>
   1c990:	str	r0, [fp, #-12]
   1c994:	b	1c9a4 <main@@Base+0x64bc>
   1c998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c99c:	str	r0, [fp, #-4]
   1c9a0:	b	1d13c <main@@Base+0x6c54>
   1c9a4:	b	1c9b4 <main@@Base+0x64cc>
   1c9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9ac:	str	r0, [fp, #-4]
   1c9b0:	b	1d13c <main@@Base+0x6c54>
   1c9b4:	b	1caa8 <main@@Base+0x65c0>
   1c9b8:	ldr	r0, [sp, #16]
   1c9bc:	ldr	r1, [sp, #20]
   1c9c0:	movw	r2, #28016	; 0x6d70
   1c9c4:	movt	r2, #30817	; 0x7861
   1c9c8:	eor	r1, r1, r2
   1c9cc:	movw	r2, #11846	; 0x2e46
   1c9d0:	movt	r2, #27749	; 0x6c65
   1c9d4:	eor	r0, r0, r2
   1c9d8:	orr	r0, r0, r1
   1c9dc:	cmp	r0, #0
   1c9e0:	bne	1ca98 <main@@Base+0x65b0>
   1c9e4:	b	1c9e8 <main@@Base+0x6500>
   1c9e8:	ldr	r0, [fp, #-12]
   1c9ec:	add	r0, r0, #8
   1c9f0:	str	r0, [fp, #-12]
   1c9f4:	ldr	r0, [fp, #-12]
   1c9f8:	ldr	r1, [fp, #-16]
   1c9fc:	bl	1bc60 <main@@Base+0x5778>
   1ca00:	str	r1, [sp, #20]
   1ca04:	str	r0, [sp, #16]
   1ca08:	ldrh	r0, [sp, #22]
   1ca0c:	movw	r1, #0
   1ca10:	movt	r1, #28527	; 0x6f6f
   1ca14:	teq	r1, r0, lsl #16
   1ca18:	bne	1ca88 <main@@Base+0x65a0>
   1ca1c:	b	1ca20 <main@@Base+0x6538>
   1ca20:	ldr	r0, [fp, #-8]
   1ca24:	ldr	r1, [fp, #-12]
   1ca28:	str	r1, [sp, #28]
   1ca2c:	ldr	r2, [fp, #-16]
   1ca30:	movw	r3, #2
   1ca34:	bl	20f88 <main@@Base+0xaaa0>
   1ca38:	str	r0, [fp, #-12]
   1ca3c:	ldr	r0, [fp, #-12]
   1ca40:	ldr	r1, [sp, #28]
   1ca44:	cmp	r0, r1
   1ca48:	beq	1ca78 <main@@Base+0x6590>
   1ca4c:	ldr	r0, [fp, #-8]
   1ca50:	ldr	r1, [fp, #-12]
   1ca54:	ldr	r2, [fp, #-16]
   1ca58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca5c:	ldr	ip, [fp, #8]
   1ca60:	ldr	lr, [fp, #12]
   1ca64:	str	ip, [sp]
   1ca68:	str	lr, [sp, #4]
   1ca6c:	bl	2100c <main@@Base+0xab24>
   1ca70:	str	r0, [fp, #-12]
   1ca74:	b	1ca84 <main@@Base+0x659c>
   1ca78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca7c:	str	r0, [fp, #-4]
   1ca80:	b	1d13c <main@@Base+0x6c54>
   1ca84:	b	1ca94 <main@@Base+0x65ac>
   1ca88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca8c:	str	r0, [fp, #-4]
   1ca90:	b	1d13c <main@@Base+0x6c54>
   1ca94:	b	1caa4 <main@@Base+0x65bc>
   1ca98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca9c:	str	r0, [fp, #-4]
   1caa0:	b	1d13c <main@@Base+0x6c54>
   1caa4:	b	1caa8 <main@@Base+0x65c0>
   1caa8:	b	1caac <main@@Base+0x65c4>
   1caac:	b	1cf20 <main@@Base+0x6a38>
   1cab0:	ldr	r0, [sp, #16]
   1cab4:	ldr	r1, [sp, #20]
   1cab8:	movw	r2, #11880	; 0x2e68
   1cabc:	movt	r2, #27749	; 0x6c65
   1cac0:	subs	r0, r2, r0
   1cac4:	movw	r2, #28016	; 0x6d70
   1cac8:	movt	r2, #30817	; 0x7861
   1cacc:	sbcs	r1, r2, r1
   1cad0:	bcc	1cbe8 <main@@Base+0x6700>
   1cad4:	b	1cad8 <main@@Base+0x65f0>
   1cad8:	ldr	r0, [sp, #16]
   1cadc:	ldr	r1, [sp, #20]
   1cae0:	movw	r2, #28016	; 0x6d70
   1cae4:	movt	r2, #30817	; 0x7861
   1cae8:	eor	r1, r1, r2
   1caec:	movw	r2, #11880	; 0x2e68
   1caf0:	movt	r2, #27749	; 0x6c65
   1caf4:	eor	r0, r0, r2
   1caf8:	orr	r0, r0, r1
   1cafc:	cmp	r0, #0
   1cb00:	bne	1cbd8 <main@@Base+0x66f0>
   1cb04:	b	1cb08 <main@@Base+0x6620>
   1cb08:	ldr	r0, [fp, #-12]
   1cb0c:	add	r0, r0, #8
   1cb10:	str	r0, [fp, #-12]
   1cb14:	ldr	r0, [fp, #-12]
   1cb18:	ldr	r1, [fp, #-16]
   1cb1c:	bl	1bc60 <main@@Base+0x5778>
   1cb20:	str	r1, [sp, #20]
   1cb24:	str	r0, [sp, #16]
   1cb28:	ldr	r0, [sp, #16]
   1cb2c:	ldr	r1, [sp, #20]
   1cb30:	movw	r2, #30815	; 0x785f
   1cb34:	movt	r2, #101	; 0x65
   1cb38:	eor	r2, r2, r1, lsr #8
   1cb3c:	lsr	r0, r0, #8
   1cb40:	orr	r0, r0, r1, lsl #24
   1cb44:	movw	r1, #30061	; 0x756d
   1cb48:	movt	r1, #25966	; 0x656e
   1cb4c:	eor	r0, r0, r1
   1cb50:	orr	r0, r0, r2
   1cb54:	cmp	r0, #0
   1cb58:	bne	1cbc8 <main@@Base+0x66e0>
   1cb5c:	b	1cb60 <main@@Base+0x6678>
   1cb60:	ldr	r0, [fp, #-8]
   1cb64:	ldr	r1, [fp, #-12]
   1cb68:	str	r1, [sp, #28]
   1cb6c:	ldr	r2, [fp, #-16]
   1cb70:	movw	r3, #7
   1cb74:	bl	20f88 <main@@Base+0xaaa0>
   1cb78:	str	r0, [fp, #-12]
   1cb7c:	ldr	r0, [fp, #-12]
   1cb80:	ldr	r1, [sp, #28]
   1cb84:	cmp	r0, r1
   1cb88:	beq	1cbb8 <main@@Base+0x66d0>
   1cb8c:	ldr	r0, [fp, #-8]
   1cb90:	ldr	r1, [fp, #-12]
   1cb94:	ldr	r2, [fp, #-16]
   1cb98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb9c:	ldr	ip, [fp, #8]
   1cba0:	ldr	lr, [fp, #12]
   1cba4:	str	ip, [sp]
   1cba8:	str	lr, [sp, #4]
   1cbac:	bl	21248 <main@@Base+0xad60>
   1cbb0:	str	r0, [fp, #-12]
   1cbb4:	b	1cbc4 <main@@Base+0x66dc>
   1cbb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbbc:	str	r0, [fp, #-4]
   1cbc0:	b	1d13c <main@@Base+0x6c54>
   1cbc4:	b	1cbd4 <main@@Base+0x66ec>
   1cbc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbcc:	str	r0, [fp, #-4]
   1cbd0:	b	1d13c <main@@Base+0x6c54>
   1cbd4:	b	1cbe4 <main@@Base+0x66fc>
   1cbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbdc:	str	r0, [fp, #-4]
   1cbe0:	b	1d13c <main@@Base+0x6c54>
   1cbe4:	b	1cf1c <main@@Base+0x6a34>
   1cbe8:	ldr	r0, [sp, #16]
   1cbec:	ldr	r1, [sp, #20]
   1cbf0:	movw	r2, #11885	; 0x2e6d
   1cbf4:	movt	r2, #27749	; 0x6c65
   1cbf8:	subs	r0, r2, r0
   1cbfc:	movw	r2, #28016	; 0x6d70
   1cc00:	movt	r2, #30817	; 0x7861
   1cc04:	sbcs	r1, r2, r1
   1cc08:	bcc	1cd20 <main@@Base+0x6838>
   1cc0c:	b	1cc10 <main@@Base+0x6728>
   1cc10:	ldr	r0, [sp, #16]
   1cc14:	ldr	r1, [sp, #20]
   1cc18:	movw	r2, #28016	; 0x6d70
   1cc1c:	movt	r2, #30817	; 0x7861
   1cc20:	eor	r1, r1, r2
   1cc24:	movw	r2, #11881	; 0x2e69
   1cc28:	movt	r2, #27749	; 0x6c65
   1cc2c:	eor	r0, r0, r2
   1cc30:	orr	r0, r0, r1
   1cc34:	cmp	r0, #0
   1cc38:	bne	1cd10 <main@@Base+0x6828>
   1cc3c:	b	1cc40 <main@@Base+0x6758>
   1cc40:	ldr	r0, [fp, #-12]
   1cc44:	add	r0, r0, #8
   1cc48:	str	r0, [fp, #-12]
   1cc4c:	ldr	r0, [fp, #-12]
   1cc50:	ldr	r1, [fp, #-16]
   1cc54:	bl	1bc60 <main@@Base+0x5778>
   1cc58:	str	r1, [sp, #20]
   1cc5c:	str	r0, [sp, #16]
   1cc60:	ldr	r0, [sp, #16]
   1cc64:	ldr	r1, [sp, #20]
   1cc68:	movw	r2, #29791	; 0x745f
   1cc6c:	movt	r2, #110	; 0x6e
   1cc70:	eor	r2, r2, r1, lsr #8
   1cc74:	lsr	r0, r0, #8
   1cc78:	orr	r0, r0, r1, lsl #24
   1cc7c:	movw	r1, #30061	; 0x756d
   1cc80:	movt	r1, #25966	; 0x656e
   1cc84:	eor	r0, r0, r1
   1cc88:	orr	r0, r0, r2
   1cc8c:	cmp	r0, #0
   1cc90:	bne	1cd00 <main@@Base+0x6818>
   1cc94:	b	1cc98 <main@@Base+0x67b0>
   1cc98:	ldr	r0, [fp, #-8]
   1cc9c:	ldr	r1, [fp, #-12]
   1cca0:	str	r1, [sp, #28]
   1cca4:	ldr	r2, [fp, #-16]
   1cca8:	movw	r3, #7
   1ccac:	bl	20f88 <main@@Base+0xaaa0>
   1ccb0:	str	r0, [fp, #-12]
   1ccb4:	ldr	r0, [fp, #-12]
   1ccb8:	ldr	r1, [sp, #28]
   1ccbc:	cmp	r0, r1
   1ccc0:	beq	1ccf0 <main@@Base+0x6808>
   1ccc4:	ldr	r0, [fp, #-8]
   1ccc8:	ldr	r1, [fp, #-12]
   1cccc:	ldr	r2, [fp, #-16]
   1ccd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ccd4:	ldr	ip, [fp, #8]
   1ccd8:	ldr	lr, [fp, #12]
   1ccdc:	str	ip, [sp]
   1cce0:	str	lr, [sp, #4]
   1cce4:	bl	214a0 <main@@Base+0xafb8>
   1cce8:	str	r0, [fp, #-12]
   1ccec:	b	1ccfc <main@@Base+0x6814>
   1ccf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccf4:	str	r0, [fp, #-4]
   1ccf8:	b	1d13c <main@@Base+0x6c54>
   1ccfc:	b	1cd0c <main@@Base+0x6824>
   1cd00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd04:	str	r0, [fp, #-4]
   1cd08:	b	1d13c <main@@Base+0x6c54>
   1cd0c:	b	1cd1c <main@@Base+0x6834>
   1cd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd14:	str	r0, [fp, #-4]
   1cd18:	b	1d13c <main@@Base+0x6c54>
   1cd1c:	b	1cf18 <main@@Base+0x6a30>
   1cd20:	ldr	r0, [sp, #16]
   1cd24:	ldr	r1, [sp, #20]
   1cd28:	movw	r2, #28016	; 0x6d70
   1cd2c:	movt	r2, #30817	; 0x7861
   1cd30:	eor	r1, r1, r2
   1cd34:	movw	r2, #11886	; 0x2e6e
   1cd38:	movt	r2, #27749	; 0x6c65
   1cd3c:	eor	r0, r0, r2
   1cd40:	orr	r0, r0, r1
   1cd44:	cmp	r0, #0
   1cd48:	bne	1cf08 <main@@Base+0x6a20>
   1cd4c:	b	1cd50 <main@@Base+0x6868>
   1cd50:	ldr	r0, [fp, #-12]
   1cd54:	add	r0, r0, #8
   1cd58:	str	r0, [fp, #-12]
   1cd5c:	ldr	r0, [fp, #-12]
   1cd60:	ldr	r1, [fp, #-16]
   1cd64:	bl	1bc60 <main@@Base+0x5778>
   1cd68:	str	r1, [sp, #20]
   1cd6c:	str	r0, [sp, #16]
   1cd70:	ldr	r0, [sp, #16]
   1cd74:	ldr	r1, [sp, #20]
   1cd78:	movw	r2, #26463	; 0x675f
   1cd7c:	movt	r2, #101	; 0x65
   1cd80:	eor	r2, r2, r1, lsr #8
   1cd84:	lsr	r0, r0, #8
   1cd88:	orr	r0, r0, r1, lsl #24
   1cd8c:	movw	r1, #30061	; 0x756d
   1cd90:	movt	r1, #25966	; 0x656e
   1cd94:	eor	r0, r0, r1
   1cd98:	orr	r0, r0, r2
   1cd9c:	cmp	r0, #0
   1cda0:	bne	1ce08 <main@@Base+0x6920>
   1cda4:	b	1cda8 <main@@Base+0x68c0>
   1cda8:	ldr	r0, [fp, #-8]
   1cdac:	ldr	r1, [fp, #-12]
   1cdb0:	str	r1, [sp, #28]
   1cdb4:	ldr	r2, [fp, #-16]
   1cdb8:	movw	r3, #7
   1cdbc:	bl	20f88 <main@@Base+0xaaa0>
   1cdc0:	str	r0, [fp, #-12]
   1cdc4:	ldr	r0, [fp, #-12]
   1cdc8:	ldr	r1, [sp, #28]
   1cdcc:	cmp	r0, r1
   1cdd0:	beq	1ce00 <main@@Base+0x6918>
   1cdd4:	ldr	r0, [fp, #-8]
   1cdd8:	ldr	r1, [fp, #-12]
   1cddc:	ldr	r2, [fp, #-16]
   1cde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cde4:	ldr	ip, [fp, #8]
   1cde8:	ldr	lr, [fp, #12]
   1cdec:	str	ip, [sp]
   1cdf0:	str	lr, [sp, #4]
   1cdf4:	bl	217d8 <main@@Base+0xb2f0>
   1cdf8:	str	r0, [fp, #-12]
   1cdfc:	b	1ce04 <main@@Base+0x691c>
   1ce00:	b	1ce10 <main@@Base+0x6928>
   1ce04:	b	1ce0c <main@@Base+0x6924>
   1ce08:	b	1ce10 <main@@Base+0x6928>
   1ce0c:	b	1cf04 <main@@Base+0x6a1c>
   1ce10:	ldr	r0, [sp, #16]
   1ce14:	ldr	r1, [sp, #20]
   1ce18:	movw	r2, #25965	; 0x656d
   1ce1c:	movt	r2, #28532	; 0x6f74
   1ce20:	eor	r1, r1, r2
   1ce24:	movw	r2, #31077	; 0x7965
   1ce28:	movt	r2, #28788	; 0x7074
   1ce2c:	eor	r0, r0, r2
   1ce30:	orr	r0, r0, r1
   1ce34:	cmp	r0, #0
   1ce38:	bne	1cef4 <main@@Base+0x6a0c>
   1ce3c:	b	1ce40 <main@@Base+0x6958>
   1ce40:	ldr	r0, [fp, #-12]
   1ce44:	add	r0, r0, #8
   1ce48:	str	r0, [fp, #-12]
   1ce4c:	ldr	r0, [fp, #-12]
   1ce50:	ldr	r1, [fp, #-16]
   1ce54:	bl	1bc60 <main@@Base+0x5778>
   1ce58:	str	r1, [sp, #20]
   1ce5c:	str	r0, [sp, #16]
   1ce60:	ldr	r0, [sp, #20]
   1ce64:	bic	r0, r0, #255	; 0xff
   1ce68:	movw	r1, #27904	; 0x6d00
   1ce6c:	movt	r1, #28277	; 0x6e75
   1ce70:	teq	r0, r1
   1ce74:	bne	1cee4 <main@@Base+0x69fc>
   1ce78:	b	1ce7c <main@@Base+0x6994>
   1ce7c:	ldr	r0, [fp, #-8]
   1ce80:	ldr	r1, [fp, #-12]
   1ce84:	str	r1, [sp, #28]
   1ce88:	ldr	r2, [fp, #-16]
   1ce8c:	movw	r3, #3
   1ce90:	bl	20f88 <main@@Base+0xaaa0>
   1ce94:	str	r0, [fp, #-12]
   1ce98:	ldr	r0, [fp, #-12]
   1ce9c:	ldr	r1, [sp, #28]
   1cea0:	cmp	r0, r1
   1cea4:	beq	1ced4 <main@@Base+0x69ec>
   1cea8:	ldr	r0, [fp, #-8]
   1ceac:	ldr	r1, [fp, #-12]
   1ceb0:	ldr	r2, [fp, #-16]
   1ceb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ceb8:	ldr	ip, [fp, #8]
   1cebc:	ldr	lr, [fp, #12]
   1cec0:	str	ip, [sp]
   1cec4:	str	lr, [sp, #4]
   1cec8:	bl	21a14 <main@@Base+0xb52c>
   1cecc:	str	r0, [fp, #-12]
   1ced0:	b	1cee0 <main@@Base+0x69f8>
   1ced4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ced8:	str	r0, [fp, #-4]
   1cedc:	b	1d13c <main@@Base+0x6c54>
   1cee0:	b	1cef0 <main@@Base+0x6a08>
   1cee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cee8:	str	r0, [fp, #-4]
   1ceec:	b	1d13c <main@@Base+0x6c54>
   1cef0:	b	1cf00 <main@@Base+0x6a18>
   1cef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cef8:	str	r0, [fp, #-4]
   1cefc:	b	1d13c <main@@Base+0x6c54>
   1cf00:	b	1cf04 <main@@Base+0x6a1c>
   1cf04:	b	1cf14 <main@@Base+0x6a2c>
   1cf08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf0c:	str	r0, [fp, #-4]
   1cf10:	b	1d13c <main@@Base+0x6c54>
   1cf14:	b	1cf18 <main@@Base+0x6a30>
   1cf18:	b	1cf1c <main@@Base+0x6a34>
   1cf1c:	b	1cf20 <main@@Base+0x6a38>
   1cf20:	b	1d130 <main@@Base+0x6c48>
   1cf24:	ldr	r0, [sp, #16]
   1cf28:	ldr	r1, [sp, #20]
   1cf2c:	movw	r2, #18273	; 0x4761
   1cf30:	movt	r2, #19833	; 0x4d79
   1cf34:	eor	r1, r1, r2
   1cf38:	movw	r2, #11855	; 0x2e4f
   1cf3c:	movt	r2, #28005	; 0x6d65
   1cf40:	eor	r0, r0, r2
   1cf44:	orr	r0, r0, r1
   1cf48:	cmp	r0, #0
   1cf4c:	bne	1d120 <main@@Base+0x6c38>
   1cf50:	b	1cf54 <main@@Base+0x6a6c>
   1cf54:	ldr	r0, [fp, #-12]
   1cf58:	add	r0, r0, #8
   1cf5c:	str	r0, [fp, #-12]
   1cf60:	ldr	r0, [fp, #-12]
   1cf64:	ldr	r1, [fp, #-16]
   1cf68:	bl	1bc60 <main@@Base+0x5778>
   1cf6c:	str	r1, [sp, #20]
   1cf70:	str	r0, [sp, #16]
   1cf74:	ldr	r0, [sp, #16]
   1cf78:	ldr	r1, [sp, #20]
   1cf7c:	movw	r2, #25970	; 0x6572
   1cf80:	movt	r2, #29800	; 0x7468
   1cf84:	eor	r1, r1, r2
   1cf88:	movw	r2, #28005	; 0x6d65
   1cf8c:	movt	r2, #20065	; 0x4e61
   1cf90:	eor	r0, r0, r2
   1cf94:	orr	r0, r0, r1
   1cf98:	cmp	r0, #0
   1cf9c:	bne	1d110 <main@@Base+0x6c28>
   1cfa0:	b	1cfa4 <main@@Base+0x6abc>
   1cfa4:	ldr	r0, [fp, #-12]
   1cfa8:	add	r0, r0, #8
   1cfac:	str	r0, [fp, #-12]
   1cfb0:	ldr	r0, [fp, #-12]
   1cfb4:	ldr	r1, [fp, #-16]
   1cfb8:	bl	1bc60 <main@@Base+0x5778>
   1cfbc:	str	r1, [sp, #20]
   1cfc0:	str	r0, [sp, #16]
   1cfc4:	ldr	r0, [sp, #16]
   1cfc8:	ldr	r1, [sp, #20]
   1cfcc:	movw	r2, #24931	; 0x6163
   1cfd0:	movt	r2, #21360	; 0x5370
   1cfd4:	eor	r1, r1, r2
   1cfd8:	movw	r2, #18034	; 0x4672
   1cfdc:	movt	r2, #25902	; 0x652e
   1cfe0:	eor	r0, r0, r2
   1cfe4:	orr	r0, r0, r1
   1cfe8:	cmp	r0, #0
   1cfec:	bne	1d100 <main@@Base+0x6c18>
   1cff0:	b	1cff4 <main@@Base+0x6b0c>
   1cff4:	ldr	r0, [fp, #-12]
   1cff8:	add	r0, r0, #8
   1cffc:	str	r0, [fp, #-12]
   1d000:	ldr	r0, [fp, #-12]
   1d004:	ldr	r1, [fp, #-16]
   1d008:	bl	1bc60 <main@@Base+0x5778>
   1d00c:	str	r1, [sp, #20]
   1d010:	str	r0, [sp, #16]
   1d014:	ldr	r0, [sp, #16]
   1d018:	ldr	r1, [sp, #20]
   1d01c:	movw	r2, #18798	; 0x496e
   1d020:	movt	r2, #28525	; 0x6f6d
   1d024:	eor	r1, r1, r2
   1d028:	movw	r2, #30052	; 0x7564
   1d02c:	movt	r2, #25452	; 0x636c
   1d030:	eor	r0, r0, r2
   1d034:	orr	r0, r0, r1
   1d038:	cmp	r0, #0
   1d03c:	bne	1d0f0 <main@@Base+0x6c08>
   1d040:	b	1d044 <main@@Base+0x6b5c>
   1d044:	ldr	r0, [fp, #-12]
   1d048:	add	r0, r0, #8
   1d04c:	str	r0, [fp, #-12]
   1d050:	ldr	r0, [fp, #-12]
   1d054:	ldr	r1, [fp, #-16]
   1d058:	bl	1bc60 <main@@Base+0x5778>
   1d05c:	str	r1, [sp, #20]
   1d060:	str	r0, [sp, #16]
   1d064:	ldrb	r0, [sp, #23]
   1d068:	mov	r1, #1694498816	; 0x65000000
   1d06c:	teq	r1, r0, lsl #24
   1d070:	bne	1d0e0 <main@@Base+0x6bf8>
   1d074:	b	1d078 <main@@Base+0x6b90>
   1d078:	ldr	r0, [fp, #-8]
   1d07c:	ldr	r1, [fp, #-12]
   1d080:	str	r1, [sp, #28]
   1d084:	ldr	r2, [fp, #-16]
   1d088:	movw	r3, #1
   1d08c:	bl	20f88 <main@@Base+0xaaa0>
   1d090:	str	r0, [fp, #-12]
   1d094:	ldr	r0, [fp, #-12]
   1d098:	ldr	r1, [sp, #28]
   1d09c:	cmp	r0, r1
   1d0a0:	beq	1d0d0 <main@@Base+0x6be8>
   1d0a4:	ldr	r0, [fp, #-8]
   1d0a8:	ldr	r1, [fp, #-12]
   1d0ac:	ldr	r2, [fp, #-16]
   1d0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0b4:	ldr	ip, [fp, #8]
   1d0b8:	ldr	lr, [fp, #12]
   1d0bc:	str	ip, [sp]
   1d0c0:	str	lr, [sp, #4]
   1d0c4:	bl	2209c <main@@Base+0xbbb4>
   1d0c8:	str	r0, [fp, #-12]
   1d0cc:	b	1d0dc <main@@Base+0x6bf4>
   1d0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d4:	str	r0, [fp, #-4]
   1d0d8:	b	1d13c <main@@Base+0x6c54>
   1d0dc:	b	1d0ec <main@@Base+0x6c04>
   1d0e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e4:	str	r0, [fp, #-4]
   1d0e8:	b	1d13c <main@@Base+0x6c54>
   1d0ec:	b	1d0fc <main@@Base+0x6c14>
   1d0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0f4:	str	r0, [fp, #-4]
   1d0f8:	b	1d13c <main@@Base+0x6c54>
   1d0fc:	b	1d10c <main@@Base+0x6c24>
   1d100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d104:	str	r0, [fp, #-4]
   1d108:	b	1d13c <main@@Base+0x6c54>
   1d10c:	b	1d11c <main@@Base+0x6c34>
   1d110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d114:	str	r0, [fp, #-4]
   1d118:	b	1d13c <main@@Base+0x6c54>
   1d11c:	b	1d12c <main@@Base+0x6c44>
   1d120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d124:	str	r0, [fp, #-4]
   1d128:	b	1d13c <main@@Base+0x6c54>
   1d12c:	b	1d130 <main@@Base+0x6c48>
   1d130:	b	1d134 <main@@Base+0x6c4c>
   1d134:	ldr	r0, [fp, #-12]
   1d138:	str	r0, [fp, #-4]
   1d13c:	ldr	r0, [fp, #-4]
   1d140:	mov	sp, fp
   1d144:	pop	{fp, pc}
   1d148:	push	{r4, r5, fp, lr}
   1d14c:	add	fp, sp, #8
   1d150:	sub	sp, sp, #56	; 0x38
   1d154:	str	r0, [fp, #-16]
   1d158:	str	r1, [fp, #-20]	; 0xffffffec
   1d15c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d160:	str	r3, [fp, #-28]	; 0xffffffe4
   1d164:	mov	r0, #0
   1d168:	str	r0, [sp, #28]
   1d16c:	str	r0, [sp, #24]
   1d170:	movw	r0, #0
   1d174:	str	r0, [sp, #20]
   1d178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d17c:	str	r0, [sp, #16]
   1d180:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d184:	movw	r1, #0
   1d188:	strb	r1, [r0]
   1d18c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d194:	cmp	r0, r1
   1d198:	bne	1d1a8 <main@@Base+0x6cc0>
   1d19c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d1a0:	str	r0, [fp, #-12]
   1d1a4:	b	1d218 <main@@Base+0x6d30>
   1d1a8:	ldr	r0, [fp, #-16]
   1d1ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d1b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1b4:	add	r3, sp, #20
   1d1b8:	add	ip, sp, #24
   1d1bc:	str	ip, [sp]
   1d1c0:	bl	3579c <flatcc_json_parser_integer@@Base>
   1d1c4:	str	r0, [fp, #-20]	; 0xffffffec
   1d1c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d1cc:	ldr	r1, [sp, #16]
   1d1d0:	cmp	r0, r1
   1d1d4:	beq	1d210 <main@@Base+0x6d28>
   1d1d8:	ldr	r0, [fp, #-16]
   1d1dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d1e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1e4:	ldr	r3, [sp, #20]
   1d1e8:	ldr	ip, [sp, #24]
   1d1ec:	ldr	lr, [sp, #28]
   1d1f0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d1f4:	mov	r5, sp
   1d1f8:	str	r4, [r5, #8]
   1d1fc:	str	lr, [r5, #4]
   1d200:	str	ip, [r5]
   1d204:	bl	22280 <main@@Base+0xbd98>
   1d208:	str	r0, [fp, #-12]
   1d20c:	b	1d218 <main@@Base+0x6d30>
   1d210:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d214:	str	r0, [fp, #-12]
   1d218:	ldr	r0, [fp, #-12]
   1d21c:	sub	sp, fp, #8
   1d220:	pop	{r4, r5, fp, pc}
   1d224:	push	{r4, r5, r6, sl, fp, lr}
   1d228:	add	fp, sp, #16
   1d22c:	sub	sp, sp, #80	; 0x50
   1d230:	ldr	ip, [fp, #8]
   1d234:	str	r0, [fp, #-24]	; 0xffffffe8
   1d238:	str	r1, [fp, #-28]	; 0xffffffe4
   1d23c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d240:	str	r3, [fp, #-36]	; 0xffffffdc
   1d244:	movw	r0, #0
   1d248:	strb	r0, [fp, #-45]	; 0xffffffd3
   1d24c:	ldr	r1, [fp, #8]
   1d250:	strb	r0, [r1]
   1d254:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d25c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d260:	str	ip, [sp, #28]
   1d264:	bl	22358 <main@@Base+0xbe70>
   1d268:	str	r0, [fp, #-28]	; 0xffffffe4
   1d26c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d270:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d274:	cmp	r0, r1
   1d278:	bne	1d288 <main@@Base+0x6da0>
   1d27c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d280:	str	r0, [fp, #-20]	; 0xffffffec
   1d284:	b	1d3fc <main@@Base+0x6f14>
   1d288:	b	1d28c <main@@Base+0x6da4>
   1d28c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d290:	str	r0, [fp, #-40]	; 0xffffffd8
   1d294:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d298:	ldr	r0, [r0]
   1d29c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d2a4:	str	r2, [fp, #-44]	; 0xffffffd4
   1d2a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d2ac:	str	r0, [sp, #24]
   1d2b0:	mov	r0, r1
   1d2b4:	mov	r1, r2
   1d2b8:	mov	r2, r3
   1d2bc:	add	r3, sp, #36	; 0x24
   1d2c0:	add	ip, sp, #40	; 0x28
   1d2c4:	str	ip, [sp]
   1d2c8:	add	ip, sp, #32
   1d2cc:	str	ip, [sp, #4]
   1d2d0:	ldr	ip, [sp, #24]
   1d2d4:	blx	ip
   1d2d8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d2dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d2e4:	cmp	r0, r1
   1d2e8:	bne	1d2f8 <main@@Base+0x6e10>
   1d2ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d2f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d2f4:	b	1d3fc <main@@Base+0x6f14>
   1d2f8:	b	1d2fc <main@@Base+0x6e14>
   1d2fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d304:	cmp	r0, r1
   1d308:	movw	r0, #0
   1d30c:	str	r0, [sp, #20]
   1d310:	bne	1d338 <main@@Base+0x6e50>
   1d314:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d318:	add	r1, r0, #4
   1d31c:	str	r1, [fp, #-40]	; 0xffffffd8
   1d320:	ldr	r0, [r0, #4]
   1d324:	movw	r1, #0
   1d328:	cmp	r0, r1
   1d32c:	movw	r0, #0
   1d330:	movne	r0, #1
   1d334:	str	r0, [sp, #20]
   1d338:	ldr	r0, [sp, #20]
   1d33c:	tst	r0, #1
   1d340:	bne	1d294 <main@@Base+0x6dac>
   1d344:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d348:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d34c:	cmp	r0, r1
   1d350:	bne	1d370 <main@@Base+0x6e88>
   1d354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d35c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d360:	movw	r3, #23
   1d364:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1d368:	str	r0, [fp, #-20]	; 0xffffffec
   1d36c:	b	1d3fc <main@@Base+0x6f14>
   1d370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d374:	mov	r1, r0
   1d378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d37c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d380:	ldr	ip, [sp, #36]	; 0x24
   1d384:	ldr	lr, [sp, #40]	; 0x28
   1d388:	ldr	r4, [sp, #44]	; 0x2c
   1d38c:	mov	r5, sp
   1d390:	sub	r6, fp, #45	; 0x2d
   1d394:	str	r6, [r5, #8]
   1d398:	str	r4, [r5, #4]
   1d39c:	str	lr, [r5]
   1d3a0:	str	r0, [sp, #16]
   1d3a4:	mov	r0, r2
   1d3a8:	str	r1, [sp, #12]
   1d3ac:	mov	r1, r3
   1d3b0:	ldr	r2, [sp, #16]
   1d3b4:	mov	r3, ip
   1d3b8:	bl	22280 <main@@Base+0xbd98>
   1d3bc:	ldr	r1, [sp, #12]
   1d3c0:	cmp	r1, r0
   1d3c4:	bne	1d3d4 <main@@Base+0x6eec>
   1d3c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d3cc:	str	r0, [fp, #-20]	; 0xffffffec
   1d3d0:	b	1d3fc <main@@Base+0x6f14>
   1d3d4:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
   1d3d8:	ldr	r1, [fp, #8]
   1d3dc:	ldrsb	r2, [r1]
   1d3e0:	add	r0, r2, r0
   1d3e4:	strb	r0, [r1]
   1d3e8:	ldr	r0, [sp, #32]
   1d3ec:	cmp	r0, #0
   1d3f0:	bne	1d28c <main@@Base+0x6da4>
   1d3f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d3f8:	str	r0, [fp, #-20]	; 0xffffffec
   1d3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d400:	sub	sp, fp, #16
   1d404:	pop	{r4, r5, r6, sl, fp, pc}
   1d408:	push	{fp, lr}
   1d40c:	mov	fp, sp
   1d410:	sub	sp, sp, #8
   1d414:	str	r0, [sp, #4]
   1d418:	strb	r1, [sp, #3]
   1d41c:	ldrsb	r0, [sp, #3]
   1d420:	bl	223a4 <main@@Base+0xbebc>
   1d424:	ldr	r1, [sp, #4]
   1d428:	strb	r0, [r1]
   1d42c:	mov	sp, fp
   1d430:	pop	{fp, pc}
   1d434:	push	{fp, lr}
   1d438:	mov	fp, sp
   1d43c:	sub	sp, sp, #24
   1d440:	str	r0, [fp, #-8]
   1d444:	str	r1, [sp, #12]
   1d448:	str	r2, [sp, #8]
   1d44c:	str	r3, [sp, #4]
   1d450:	ldr	r0, [sp, #12]
   1d454:	ldr	r1, [sp, #8]
   1d458:	cmp	r0, r1
   1d45c:	beq	1d470 <main@@Base+0x6f88>
   1d460:	ldr	r0, [sp, #12]
   1d464:	ldrb	r0, [r0]
   1d468:	cmp	r0, #91	; 0x5b
   1d46c:	beq	1d498 <main@@Base+0x6fb0>
   1d470:	ldr	r0, [sp, #4]
   1d474:	movw	r1, #0
   1d478:	str	r1, [r0]
   1d47c:	ldr	r0, [fp, #-8]
   1d480:	ldr	r1, [sp, #12]
   1d484:	ldr	r2, [sp, #8]
   1d488:	movw	r3, #22
   1d48c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1d490:	str	r0, [fp, #-4]
   1d494:	b	1d50c <main@@Base+0x7024>
   1d498:	ldr	r0, [fp, #-8]
   1d49c:	ldr	r1, [sp, #12]
   1d4a0:	add	r1, r1, #1
   1d4a4:	ldr	r2, [sp, #8]
   1d4a8:	bl	20d78 <main@@Base+0xa890>
   1d4ac:	str	r0, [sp, #12]
   1d4b0:	ldr	r0, [sp, #12]
   1d4b4:	ldr	r1, [sp, #8]
   1d4b8:	cmp	r0, r1
   1d4bc:	beq	1d4f8 <main@@Base+0x7010>
   1d4c0:	ldr	r0, [sp, #12]
   1d4c4:	ldrb	r0, [r0]
   1d4c8:	cmp	r0, #93	; 0x5d
   1d4cc:	bne	1d4f8 <main@@Base+0x7010>
   1d4d0:	ldr	r0, [sp, #4]
   1d4d4:	movw	r1, #0
   1d4d8:	str	r1, [r0]
   1d4dc:	ldr	r0, [fp, #-8]
   1d4e0:	ldr	r1, [sp, #12]
   1d4e4:	add	r1, r1, #1
   1d4e8:	ldr	r2, [sp, #8]
   1d4ec:	bl	20d78 <main@@Base+0xa890>
   1d4f0:	str	r0, [fp, #-4]
   1d4f4:	b	1d50c <main@@Base+0x7024>
   1d4f8:	ldr	r0, [sp, #4]
   1d4fc:	movw	r1, #1
   1d500:	str	r1, [r0]
   1d504:	ldr	r0, [sp, #12]
   1d508:	str	r0, [fp, #-4]
   1d50c:	ldr	r0, [fp, #-4]
   1d510:	mov	sp, fp
   1d514:	pop	{fp, pc}
   1d518:	push	{r4, r5, fp, lr}
   1d51c:	add	fp, sp, #8
   1d520:	sub	sp, sp, #56	; 0x38
   1d524:	str	r0, [fp, #-16]
   1d528:	str	r1, [fp, #-20]	; 0xffffffec
   1d52c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d530:	str	r3, [fp, #-28]	; 0xffffffe4
   1d534:	mov	r0, #0
   1d538:	str	r0, [sp, #28]
   1d53c:	str	r0, [sp, #24]
   1d540:	movw	r0, #0
   1d544:	str	r0, [sp, #20]
   1d548:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d54c:	str	r0, [sp, #16]
   1d550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d554:	movw	r1, #0
   1d558:	strb	r1, [r0]
   1d55c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d560:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d564:	cmp	r0, r1
   1d568:	bne	1d578 <main@@Base+0x7090>
   1d56c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d570:	str	r0, [fp, #-12]
   1d574:	b	1d5e8 <main@@Base+0x7100>
   1d578:	ldr	r0, [fp, #-16]
   1d57c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d584:	add	r3, sp, #20
   1d588:	add	ip, sp, #24
   1d58c:	str	ip, [sp]
   1d590:	bl	3579c <flatcc_json_parser_integer@@Base>
   1d594:	str	r0, [fp, #-20]	; 0xffffffec
   1d598:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d59c:	ldr	r1, [sp, #16]
   1d5a0:	cmp	r0, r1
   1d5a4:	beq	1d5e0 <main@@Base+0x70f8>
   1d5a8:	ldr	r0, [fp, #-16]
   1d5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d5b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d5b4:	ldr	r3, [sp, #20]
   1d5b8:	ldr	ip, [sp, #24]
   1d5bc:	ldr	lr, [sp, #28]
   1d5c0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1d5c4:	mov	r5, sp
   1d5c8:	str	r4, [r5, #8]
   1d5cc:	str	lr, [r5, #4]
   1d5d0:	str	ip, [r5]
   1d5d4:	bl	223b8 <main@@Base+0xbed0>
   1d5d8:	str	r0, [fp, #-12]
   1d5dc:	b	1d5e8 <main@@Base+0x7100>
   1d5e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5e4:	str	r0, [fp, #-12]
   1d5e8:	ldr	r0, [fp, #-12]
   1d5ec:	sub	sp, fp, #8
   1d5f0:	pop	{r4, r5, fp, pc}
   1d5f4:	push	{r4, r5, r6, sl, fp, lr}
   1d5f8:	add	fp, sp, #16
   1d5fc:	sub	sp, sp, #80	; 0x50
   1d600:	ldr	ip, [fp, #8]
   1d604:	str	r0, [fp, #-24]	; 0xffffffe8
   1d608:	str	r1, [fp, #-28]	; 0xffffffe4
   1d60c:	str	r2, [fp, #-32]	; 0xffffffe0
   1d610:	str	r3, [fp, #-36]	; 0xffffffdc
   1d614:	movw	r0, #0
   1d618:	strb	r0, [fp, #-45]	; 0xffffffd3
   1d61c:	ldr	r1, [fp, #8]
   1d620:	strb	r0, [r1]
   1d624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d628:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d62c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d630:	str	ip, [sp, #28]
   1d634:	bl	22358 <main@@Base+0xbe70>
   1d638:	str	r0, [fp, #-28]	; 0xffffffe4
   1d63c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d640:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d644:	cmp	r0, r1
   1d648:	bne	1d658 <main@@Base+0x7170>
   1d64c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d650:	str	r0, [fp, #-20]	; 0xffffffec
   1d654:	b	1d7cc <main@@Base+0x72e4>
   1d658:	b	1d65c <main@@Base+0x7174>
   1d65c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d660:	str	r0, [fp, #-40]	; 0xffffffd8
   1d664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d668:	ldr	r0, [r0]
   1d66c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d670:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d674:	str	r2, [fp, #-44]	; 0xffffffd4
   1d678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d67c:	str	r0, [sp, #24]
   1d680:	mov	r0, r1
   1d684:	mov	r1, r2
   1d688:	mov	r2, r3
   1d68c:	add	r3, sp, #36	; 0x24
   1d690:	add	ip, sp, #40	; 0x28
   1d694:	str	ip, [sp]
   1d698:	add	ip, sp, #32
   1d69c:	str	ip, [sp, #4]
   1d6a0:	ldr	ip, [sp, #24]
   1d6a4:	blx	ip
   1d6a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d6b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d6b4:	cmp	r0, r1
   1d6b8:	bne	1d6c8 <main@@Base+0x71e0>
   1d6bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d6c0:	str	r0, [fp, #-20]	; 0xffffffec
   1d6c4:	b	1d7cc <main@@Base+0x72e4>
   1d6c8:	b	1d6cc <main@@Base+0x71e4>
   1d6cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d6d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d6d4:	cmp	r0, r1
   1d6d8:	movw	r0, #0
   1d6dc:	str	r0, [sp, #20]
   1d6e0:	bne	1d708 <main@@Base+0x7220>
   1d6e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d6e8:	add	r1, r0, #4
   1d6ec:	str	r1, [fp, #-40]	; 0xffffffd8
   1d6f0:	ldr	r0, [r0, #4]
   1d6f4:	movw	r1, #0
   1d6f8:	cmp	r0, r1
   1d6fc:	movw	r0, #0
   1d700:	movne	r0, #1
   1d704:	str	r0, [sp, #20]
   1d708:	ldr	r0, [sp, #20]
   1d70c:	tst	r0, #1
   1d710:	bne	1d664 <main@@Base+0x717c>
   1d714:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d71c:	cmp	r0, r1
   1d720:	bne	1d740 <main@@Base+0x7258>
   1d724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d728:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d72c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d730:	movw	r3, #23
   1d734:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1d738:	str	r0, [fp, #-20]	; 0xffffffec
   1d73c:	b	1d7cc <main@@Base+0x72e4>
   1d740:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d744:	mov	r1, r0
   1d748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d74c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d750:	ldr	ip, [sp, #36]	; 0x24
   1d754:	ldr	lr, [sp, #40]	; 0x28
   1d758:	ldr	r4, [sp, #44]	; 0x2c
   1d75c:	mov	r5, sp
   1d760:	sub	r6, fp, #45	; 0x2d
   1d764:	str	r6, [r5, #8]
   1d768:	str	r4, [r5, #4]
   1d76c:	str	lr, [r5]
   1d770:	str	r0, [sp, #16]
   1d774:	mov	r0, r2
   1d778:	str	r1, [sp, #12]
   1d77c:	mov	r1, r3
   1d780:	ldr	r2, [sp, #16]
   1d784:	mov	r3, ip
   1d788:	bl	223b8 <main@@Base+0xbed0>
   1d78c:	ldr	r1, [sp, #12]
   1d790:	cmp	r1, r0
   1d794:	bne	1d7a4 <main@@Base+0x72bc>
   1d798:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d79c:	str	r0, [fp, #-20]	; 0xffffffec
   1d7a0:	b	1d7cc <main@@Base+0x72e4>
   1d7a4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1d7a8:	ldr	r1, [fp, #8]
   1d7ac:	ldrb	r2, [r1]
   1d7b0:	add	r0, r2, r0
   1d7b4:	strb	r0, [r1]
   1d7b8:	ldr	r0, [sp, #32]
   1d7bc:	cmp	r0, #0
   1d7c0:	bne	1d65c <main@@Base+0x7174>
   1d7c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d7c8:	str	r0, [fp, #-20]	; 0xffffffec
   1d7cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7d0:	sub	sp, fp, #16
   1d7d4:	pop	{r4, r5, r6, sl, fp, pc}
   1d7d8:	push	{fp, lr}
   1d7dc:	mov	fp, sp
   1d7e0:	sub	sp, sp, #8
   1d7e4:	str	r0, [sp, #4]
   1d7e8:	strb	r1, [sp, #3]
   1d7ec:	ldrb	r0, [sp, #3]
   1d7f0:	bl	22464 <main@@Base+0xbf7c>
   1d7f4:	ldr	r1, [sp, #4]
   1d7f8:	strb	r0, [r1]
   1d7fc:	mov	sp, fp
   1d800:	pop	{fp, pc}
   1d804:	push	{fp, lr}
   1d808:	mov	fp, sp
   1d80c:	sub	sp, sp, #24
   1d810:	str	r0, [fp, #-8]
   1d814:	str	r1, [sp, #12]
   1d818:	str	r2, [sp, #8]
   1d81c:	str	r3, [sp, #4]
   1d820:	ldr	r0, [fp, #-8]
   1d824:	ldr	r1, [sp, #12]
   1d828:	ldr	r2, [sp, #8]
   1d82c:	bl	20d78 <main@@Base+0xa890>
   1d830:	str	r0, [sp, #12]
   1d834:	ldr	r0, [sp, #12]
   1d838:	ldr	r1, [sp, #8]
   1d83c:	cmp	r0, r1
   1d840:	bne	1d85c <main@@Base+0x7374>
   1d844:	ldr	r0, [sp, #4]
   1d848:	movw	r1, #0
   1d84c:	str	r1, [r0]
   1d850:	ldr	r0, [sp, #12]
   1d854:	str	r0, [fp, #-4]
   1d858:	b	1d95c <main@@Base+0x7474>
   1d85c:	ldr	r0, [sp, #12]
   1d860:	ldrb	r0, [r0]
   1d864:	cmp	r0, #44	; 0x2c
   1d868:	beq	1d8c0 <main@@Base+0x73d8>
   1d86c:	ldr	r0, [sp, #4]
   1d870:	movw	r1, #0
   1d874:	str	r1, [r0]
   1d878:	ldr	r0, [sp, #12]
   1d87c:	ldrb	r0, [r0]
   1d880:	cmp	r0, #93	; 0x5d
   1d884:	beq	1d8a4 <main@@Base+0x73bc>
   1d888:	ldr	r0, [fp, #-8]
   1d88c:	ldr	r1, [sp, #12]
   1d890:	ldr	r2, [sp, #8]
   1d894:	movw	r3, #9
   1d898:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1d89c:	str	r0, [fp, #-4]
   1d8a0:	b	1d95c <main@@Base+0x7474>
   1d8a4:	ldr	r0, [fp, #-8]
   1d8a8:	ldr	r1, [sp, #12]
   1d8ac:	add	r1, r1, #1
   1d8b0:	ldr	r2, [sp, #8]
   1d8b4:	bl	20d78 <main@@Base+0xa890>
   1d8b8:	str	r0, [fp, #-4]
   1d8bc:	b	1d95c <main@@Base+0x7474>
   1d8c0:	ldr	r0, [fp, #-8]
   1d8c4:	ldr	r1, [sp, #12]
   1d8c8:	add	r1, r1, #1
   1d8cc:	ldr	r2, [sp, #8]
   1d8d0:	bl	20d78 <main@@Base+0xa890>
   1d8d4:	str	r0, [sp, #12]
   1d8d8:	ldr	r0, [sp, #12]
   1d8dc:	ldr	r1, [sp, #8]
   1d8e0:	cmp	r0, r1
   1d8e4:	bne	1d910 <main@@Base+0x7428>
   1d8e8:	ldr	r0, [sp, #4]
   1d8ec:	movw	r1, #0
   1d8f0:	str	r1, [r0]
   1d8f4:	ldr	r0, [fp, #-8]
   1d8f8:	ldr	r1, [sp, #12]
   1d8fc:	ldr	r2, [sp, #8]
   1d900:	movw	r3, #9
   1d904:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1d908:	str	r0, [fp, #-4]
   1d90c:	b	1d95c <main@@Base+0x7474>
   1d910:	ldr	r0, [sp, #12]
   1d914:	ldrb	r0, [r0]
   1d918:	cmp	r0, #93	; 0x5d
   1d91c:	bne	1d948 <main@@Base+0x7460>
   1d920:	ldr	r0, [sp, #4]
   1d924:	movw	r1, #0
   1d928:	str	r1, [r0]
   1d92c:	ldr	r0, [fp, #-8]
   1d930:	ldr	r1, [sp, #12]
   1d934:	add	r1, r1, #1
   1d938:	ldr	r2, [sp, #8]
   1d93c:	bl	20d78 <main@@Base+0xa890>
   1d940:	str	r0, [fp, #-4]
   1d944:	b	1d95c <main@@Base+0x7474>
   1d948:	ldr	r0, [sp, #4]
   1d94c:	movw	r1, #1
   1d950:	str	r1, [r0]
   1d954:	ldr	r0, [sp, #12]
   1d958:	str	r0, [fp, #-4]
   1d95c:	ldr	r0, [fp, #-4]
   1d960:	mov	sp, fp
   1d964:	pop	{fp, pc}
   1d968:	push	{r4, r5, fp, lr}
   1d96c:	add	fp, sp, #8
   1d970:	sub	sp, sp, #56	; 0x38
   1d974:	str	r0, [fp, #-16]
   1d978:	str	r1, [fp, #-20]	; 0xffffffec
   1d97c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d980:	str	r3, [fp, #-28]	; 0xffffffe4
   1d984:	mov	r0, #0
   1d988:	str	r0, [sp, #28]
   1d98c:	str	r0, [sp, #24]
   1d990:	movw	r0, #0
   1d994:	str	r0, [sp, #20]
   1d998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d99c:	str	r0, [sp, #16]
   1d9a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d9a4:	movw	r1, #0
   1d9a8:	strh	r1, [r0]
   1d9ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d9b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9b4:	cmp	r0, r1
   1d9b8:	bne	1d9c8 <main@@Base+0x74e0>
   1d9bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d9c0:	str	r0, [fp, #-12]
   1d9c4:	b	1da38 <main@@Base+0x7550>
   1d9c8:	ldr	r0, [fp, #-16]
   1d9cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d9d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d9d4:	add	r3, sp, #20
   1d9d8:	add	ip, sp, #24
   1d9dc:	str	ip, [sp]
   1d9e0:	bl	3579c <flatcc_json_parser_integer@@Base>
   1d9e4:	str	r0, [fp, #-20]	; 0xffffffec
   1d9e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d9ec:	ldr	r1, [sp, #16]
   1d9f0:	cmp	r0, r1
   1d9f4:	beq	1da30 <main@@Base+0x7548>
   1d9f8:	ldr	r0, [fp, #-16]
   1d9fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1da00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da04:	ldr	r3, [sp, #20]
   1da08:	ldr	ip, [sp, #24]
   1da0c:	ldr	lr, [sp, #28]
   1da10:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1da14:	mov	r5, sp
   1da18:	str	r4, [r5, #8]
   1da1c:	str	lr, [r5, #4]
   1da20:	str	ip, [r5]
   1da24:	bl	22478 <main@@Base+0xbf90>
   1da28:	str	r0, [fp, #-12]
   1da2c:	b	1da38 <main@@Base+0x7550>
   1da30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da34:	str	r0, [fp, #-12]
   1da38:	ldr	r0, [fp, #-12]
   1da3c:	sub	sp, fp, #8
   1da40:	pop	{r4, r5, fp, pc}
   1da44:	push	{r4, r5, r6, sl, fp, lr}
   1da48:	add	fp, sp, #16
   1da4c:	sub	sp, sp, #80	; 0x50
   1da50:	ldr	ip, [fp, #8]
   1da54:	str	r0, [fp, #-24]	; 0xffffffe8
   1da58:	str	r1, [fp, #-28]	; 0xffffffe4
   1da5c:	str	r2, [fp, #-32]	; 0xffffffe0
   1da60:	str	r3, [fp, #-36]	; 0xffffffdc
   1da64:	movw	r0, #0
   1da68:	strh	r0, [fp, #-46]	; 0xffffffd2
   1da6c:	ldr	r1, [fp, #8]
   1da70:	strh	r0, [r1]
   1da74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1da7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1da80:	str	ip, [sp, #28]
   1da84:	bl	22358 <main@@Base+0xbe70>
   1da88:	str	r0, [fp, #-28]	; 0xffffffe4
   1da8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1da90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1da94:	cmp	r0, r1
   1da98:	bne	1daa8 <main@@Base+0x75c0>
   1da9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1daa0:	str	r0, [fp, #-20]	; 0xffffffec
   1daa4:	b	1dc1c <main@@Base+0x7734>
   1daa8:	b	1daac <main@@Base+0x75c4>
   1daac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dab0:	str	r0, [fp, #-40]	; 0xffffffd8
   1dab4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dab8:	ldr	r0, [r0]
   1dabc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dac0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dac4:	str	r2, [fp, #-44]	; 0xffffffd4
   1dac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dacc:	str	r0, [sp, #24]
   1dad0:	mov	r0, r1
   1dad4:	mov	r1, r2
   1dad8:	mov	r2, r3
   1dadc:	add	r3, sp, #36	; 0x24
   1dae0:	add	ip, sp, #40	; 0x28
   1dae4:	str	ip, [sp]
   1dae8:	add	ip, sp, #32
   1daec:	str	ip, [sp, #4]
   1daf0:	ldr	ip, [sp, #24]
   1daf4:	blx	ip
   1daf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1dafc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1db00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1db04:	cmp	r0, r1
   1db08:	bne	1db18 <main@@Base+0x7630>
   1db0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1db10:	str	r0, [fp, #-20]	; 0xffffffec
   1db14:	b	1dc1c <main@@Base+0x7734>
   1db18:	b	1db1c <main@@Base+0x7634>
   1db1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1db20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1db24:	cmp	r0, r1
   1db28:	movw	r0, #0
   1db2c:	str	r0, [sp, #20]
   1db30:	bne	1db58 <main@@Base+0x7670>
   1db34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1db38:	add	r1, r0, #4
   1db3c:	str	r1, [fp, #-40]	; 0xffffffd8
   1db40:	ldr	r0, [r0, #4]
   1db44:	movw	r1, #0
   1db48:	cmp	r0, r1
   1db4c:	movw	r0, #0
   1db50:	movne	r0, #1
   1db54:	str	r0, [sp, #20]
   1db58:	ldr	r0, [sp, #20]
   1db5c:	tst	r0, #1
   1db60:	bne	1dab4 <main@@Base+0x75cc>
   1db64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1db68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db6c:	cmp	r0, r1
   1db70:	bne	1db90 <main@@Base+0x76a8>
   1db74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1db80:	movw	r3, #23
   1db84:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1db88:	str	r0, [fp, #-20]	; 0xffffffec
   1db8c:	b	1dc1c <main@@Base+0x7734>
   1db90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1db94:	mov	r1, r0
   1db98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dba0:	ldr	ip, [sp, #36]	; 0x24
   1dba4:	ldr	lr, [sp, #40]	; 0x28
   1dba8:	ldr	r4, [sp, #44]	; 0x2c
   1dbac:	mov	r5, sp
   1dbb0:	sub	r6, fp, #46	; 0x2e
   1dbb4:	str	r6, [r5, #8]
   1dbb8:	str	r4, [r5, #4]
   1dbbc:	str	lr, [r5]
   1dbc0:	str	r0, [sp, #16]
   1dbc4:	mov	r0, r2
   1dbc8:	str	r1, [sp, #12]
   1dbcc:	mov	r1, r3
   1dbd0:	ldr	r2, [sp, #16]
   1dbd4:	mov	r3, ip
   1dbd8:	bl	22478 <main@@Base+0xbf90>
   1dbdc:	ldr	r1, [sp, #12]
   1dbe0:	cmp	r1, r0
   1dbe4:	bne	1dbf4 <main@@Base+0x770c>
   1dbe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbec:	str	r0, [fp, #-20]	; 0xffffffec
   1dbf0:	b	1dc1c <main@@Base+0x7734>
   1dbf4:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
   1dbf8:	ldr	r1, [fp, #8]
   1dbfc:	ldrsh	r2, [r1]
   1dc00:	add	r0, r2, r0
   1dc04:	strh	r0, [r1]
   1dc08:	ldr	r0, [sp, #32]
   1dc0c:	cmp	r0, #0
   1dc10:	bne	1daac <main@@Base+0x75c4>
   1dc14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dc18:	str	r0, [fp, #-20]	; 0xffffffec
   1dc1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc20:	sub	sp, fp, #16
   1dc24:	pop	{r4, r5, r6, sl, fp, pc}
   1dc28:	push	{fp, lr}
   1dc2c:	mov	fp, sp
   1dc30:	sub	sp, sp, #8
   1dc34:	str	r0, [sp, #4]
   1dc38:	strh	r1, [sp, #2]
   1dc3c:	ldrsh	r0, [sp, #2]
   1dc40:	bl	22554 <main@@Base+0xc06c>
   1dc44:	ldr	r1, [sp, #4]
   1dc48:	strh	r0, [r1]
   1dc4c:	mov	sp, fp
   1dc50:	pop	{fp, pc}
   1dc54:	push	{fp, lr}
   1dc58:	mov	fp, sp
   1dc5c:	sub	sp, sp, #24
   1dc60:	str	r0, [fp, #-8]
   1dc64:	str	r1, [sp, #12]
   1dc68:	str	r2, [sp, #8]
   1dc6c:	str	r3, [sp, #4]
   1dc70:	ldr	r0, [sp, #4]
   1dc74:	movw	r1, #0
   1dc78:	str	r1, [r0]
   1dc7c:	ldr	r0, [fp, #-8]
   1dc80:	ldr	r0, [r0]
   1dc84:	bl	2b898 <flatcc_builder_start_table@@Base>
   1dc88:	cmp	r0, #0
   1dc8c:	beq	1dc94 <main@@Base+0x77ac>
   1dc90:	b	1dd3c <main@@Base+0x7854>
   1dc94:	ldr	r0, [fp, #-8]
   1dc98:	ldr	r1, [sp, #12]
   1dc9c:	ldr	r2, [sp, #8]
   1dca0:	mov	r3, sp
   1dca4:	bl	1baf8 <main@@Base+0x5610>
   1dca8:	str	r0, [sp, #12]
   1dcac:	ldr	r0, [sp]
   1dcb0:	cmp	r0, #0
   1dcb4:	beq	1dcfc <main@@Base+0x7814>
   1dcb8:	ldr	r0, [fp, #-8]
   1dcbc:	ldr	r1, [sp, #12]
   1dcc0:	ldr	r2, [sp, #8]
   1dcc4:	bl	1bbdc <main@@Base+0x56f4>
   1dcc8:	str	r0, [sp, #12]
   1dccc:	ldr	r0, [fp, #-8]
   1dcd0:	ldr	r1, [sp, #12]
   1dcd4:	ldr	r2, [sp, #8]
   1dcd8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1dcdc:	str	r0, [sp, #12]
   1dce0:	ldr	r0, [fp, #-8]
   1dce4:	ldr	r1, [sp, #12]
   1dce8:	ldr	r2, [sp, #8]
   1dcec:	mov	r3, sp
   1dcf0:	bl	20c14 <main@@Base+0xa72c>
   1dcf4:	str	r0, [sp, #12]
   1dcf8:	b	1dcac <main@@Base+0x77c4>
   1dcfc:	ldr	r0, [fp, #-8]
   1dd00:	ldr	r0, [r0, #20]
   1dd04:	cmp	r0, #0
   1dd08:	beq	1dd10 <main@@Base+0x7828>
   1dd0c:	b	1dd3c <main@@Base+0x7854>
   1dd10:	ldr	r0, [fp, #-8]
   1dd14:	ldr	r0, [r0]
   1dd18:	bl	2c500 <flatcc_builder_end_table@@Base>
   1dd1c:	ldr	r1, [sp, #4]
   1dd20:	str	r0, [r1]
   1dd24:	cmp	r0, #0
   1dd28:	bne	1dd30 <main@@Base+0x7848>
   1dd2c:	b	1dd3c <main@@Base+0x7854>
   1dd30:	ldr	r0, [sp, #12]
   1dd34:	str	r0, [fp, #-4]
   1dd38:	b	1dd54 <main@@Base+0x786c>
   1dd3c:	ldr	r0, [fp, #-8]
   1dd40:	ldr	r1, [sp, #12]
   1dd44:	ldr	r2, [sp, #8]
   1dd48:	movw	r3, #33	; 0x21
   1dd4c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1dd50:	str	r0, [fp, #-4]
   1dd54:	ldr	r0, [fp, #-4]
   1dd58:	mov	sp, fp
   1dd5c:	pop	{fp, pc}
   1dd60:	push	{fp, lr}
   1dd64:	mov	fp, sp
   1dd68:	sub	sp, sp, #80	; 0x50
   1dd6c:	str	r0, [fp, #-8]
   1dd70:	str	r1, [fp, #-12]
   1dd74:	str	r2, [fp, #-16]
   1dd78:	str	r3, [fp, #-20]	; 0xffffffec
   1dd7c:	ldr	r0, [fp, #-8]
   1dd80:	ldr	r1, [fp, #-12]
   1dd84:	ldr	r2, [fp, #-16]
   1dd88:	sub	r3, fp, #24
   1dd8c:	bl	1baf8 <main@@Base+0x5610>
   1dd90:	str	r0, [fp, #-12]
   1dd94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd98:	cmp	r0, #0
   1dd9c:	beq	1e434 <main@@Base+0x7f4c>
   1dda0:	ldr	r0, [fp, #-8]
   1dda4:	ldr	r1, [fp, #-12]
   1dda8:	ldr	r2, [fp, #-16]
   1ddac:	bl	1bbdc <main@@Base+0x56f4>
   1ddb0:	str	r0, [fp, #-12]
   1ddb4:	ldr	r0, [fp, #-12]
   1ddb8:	ldr	r1, [fp, #-16]
   1ddbc:	bl	1bc60 <main@@Base+0x5778>
   1ddc0:	str	r1, [sp, #36]	; 0x24
   1ddc4:	str	r0, [sp, #32]
   1ddc8:	ldr	r0, [sp, #32]
   1ddcc:	ldr	r1, [sp, #36]	; 0x24
   1ddd0:	mvn	r2, #-855638016	; 0xcd000000
   1ddd4:	subs	r0, r2, r0
   1ddd8:	movw	r2, #29556	; 0x7374
   1dddc:	movt	r2, #29797	; 0x7465
   1dde0:	sbcs	r1, r2, r1
   1dde4:	bcc	1e020 <main@@Base+0x7b38>
   1dde8:	b	1ddec <main@@Base+0x7904>
   1ddec:	ldrb	r0, [sp, #35]	; 0x23
   1ddf0:	ldr	r1, [sp, #36]	; 0x24
   1ddf4:	movw	r2, #29556	; 0x7374
   1ddf8:	movt	r2, #29797	; 0x7465
   1ddfc:	eor	r1, r1, r2
   1de00:	eor	r0, r0, #50	; 0x32
   1de04:	orr	r0, r1, r0, lsl #24
   1de08:	cmp	r0, #0
   1de0c:	bne	1def8 <main@@Base+0x7a10>
   1de10:	b	1de14 <main@@Base+0x792c>
   1de14:	ldr	r0, [fp, #-8]
   1de18:	ldr	r1, [fp, #-12]
   1de1c:	str	r1, [fp, #-36]	; 0xffffffdc
   1de20:	ldr	r2, [fp, #-16]
   1de24:	movw	r3, #5
   1de28:	bl	1bc98 <main@@Base+0x57b0>
   1de2c:	str	r0, [fp, #-12]
   1de30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de34:	ldr	r1, [fp, #-12]
   1de38:	cmp	r0, r1
   1de3c:	beq	1dee0 <main@@Base+0x79f8>
   1de40:	movw	r0, #0
   1de44:	strb	r0, [sp, #31]
   1de48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de4c:	add	r0, r0, #24
   1de50:	str	r0, [fp, #-32]	; 0xffffffe0
   1de54:	ldr	r0, [fp, #-8]
   1de58:	ldr	r1, [fp, #-12]
   1de5c:	str	r1, [fp, #-36]	; 0xffffffdc
   1de60:	ldr	r2, [fp, #-16]
   1de64:	add	r3, sp, #31
   1de68:	bl	1d148 <main@@Base+0x6c60>
   1de6c:	str	r0, [fp, #-12]
   1de70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1de74:	ldr	r1, [fp, #-12]
   1de78:	cmp	r0, r1
   1de7c:	bne	1ded0 <main@@Base+0x79e8>
   1de80:	ldr	r0, [pc, #1520]	; 1e478 <main@@Base+0x7f90>
   1de84:	add	r3, pc, r0
   1de88:	ldr	r0, [fp, #-8]
   1de8c:	ldr	r1, [fp, #-12]
   1de90:	str	r1, [fp, #-36]	; 0xffffffdc
   1de94:	ldr	r2, [fp, #-16]
   1de98:	add	ip, sp, #31
   1de9c:	str	ip, [sp]
   1dea0:	bl	1d224 <main@@Base+0x6d3c>
   1dea4:	str	r0, [fp, #-12]
   1dea8:	ldr	r0, [fp, #-12]
   1deac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1deb0:	cmp	r0, r1
   1deb4:	beq	1dec8 <main@@Base+0x79e0>
   1deb8:	ldr	r0, [fp, #-12]
   1debc:	ldr	r1, [fp, #-16]
   1dec0:	cmp	r0, r1
   1dec4:	bne	1decc <main@@Base+0x79e4>
   1dec8:	b	1e440 <main@@Base+0x7f58>
   1decc:	b	1ded0 <main@@Base+0x79e8>
   1ded0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ded4:	ldrsb	r1, [sp, #31]
   1ded8:	bl	1d408 <main@@Base+0x6f20>
   1dedc:	b	1def4 <main@@Base+0x7a0c>
   1dee0:	ldr	r0, [fp, #-8]
   1dee4:	ldr	r1, [fp, #-12]
   1dee8:	ldr	r2, [fp, #-16]
   1deec:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1def0:	str	r0, [fp, #-12]
   1def4:	b	1e01c <main@@Base+0x7b34>
   1def8:	ldrb	r0, [sp, #35]	; 0x23
   1defc:	ldr	r1, [sp, #36]	; 0x24
   1df00:	movw	r2, #29556	; 0x7374
   1df04:	movt	r2, #29797	; 0x7465
   1df08:	eor	r1, r1, r2
   1df0c:	eor	r0, r0, #49	; 0x31
   1df10:	orr	r0, r1, r0, lsl #24
   1df14:	cmp	r0, #0
   1df18:	bne	1e004 <main@@Base+0x7b1c>
   1df1c:	b	1df20 <main@@Base+0x7a38>
   1df20:	ldr	r0, [fp, #-8]
   1df24:	ldr	r1, [fp, #-12]
   1df28:	str	r1, [fp, #-36]	; 0xffffffdc
   1df2c:	ldr	r2, [fp, #-16]
   1df30:	movw	r3, #5
   1df34:	bl	1bc98 <main@@Base+0x57b0>
   1df38:	str	r0, [fp, #-12]
   1df3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df40:	ldr	r1, [fp, #-12]
   1df44:	cmp	r0, r1
   1df48:	beq	1dfec <main@@Base+0x7b04>
   1df4c:	vldr	d16, [pc, #948]	; 1e308 <main@@Base+0x7e20>
   1df50:	vstr	d16, [sp, #16]
   1df54:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df58:	add	r0, r0, #16
   1df5c:	str	r0, [fp, #-32]	; 0xffffffe0
   1df60:	ldr	r0, [fp, #-8]
   1df64:	ldr	r1, [fp, #-12]
   1df68:	str	r1, [fp, #-36]	; 0xffffffdc
   1df6c:	ldr	r2, [fp, #-16]
   1df70:	add	r3, sp, #16
   1df74:	bl	34998 <flatcc_json_parser_double@@Base>
   1df78:	str	r0, [fp, #-12]
   1df7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df80:	ldr	r1, [fp, #-12]
   1df84:	cmp	r0, r1
   1df88:	bne	1dfdc <main@@Base+0x7af4>
   1df8c:	ldr	r0, [pc, #1248]	; 1e474 <main@@Base+0x7f8c>
   1df90:	add	r3, pc, r0
   1df94:	ldr	r0, [fp, #-8]
   1df98:	ldr	r1, [fp, #-12]
   1df9c:	str	r1, [fp, #-36]	; 0xffffffdc
   1dfa0:	ldr	r2, [fp, #-16]
   1dfa4:	add	ip, sp, #16
   1dfa8:	str	ip, [sp]
   1dfac:	bl	209f8 <main@@Base+0xa510>
   1dfb0:	str	r0, [fp, #-12]
   1dfb4:	ldr	r0, [fp, #-12]
   1dfb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dfbc:	cmp	r0, r1
   1dfc0:	beq	1dfd4 <main@@Base+0x7aec>
   1dfc4:	ldr	r0, [fp, #-12]
   1dfc8:	ldr	r1, [fp, #-16]
   1dfcc:	cmp	r0, r1
   1dfd0:	bne	1dfd8 <main@@Base+0x7af0>
   1dfd4:	b	1e440 <main@@Base+0x7f58>
   1dfd8:	b	1dfdc <main@@Base+0x7af4>
   1dfdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dfe0:	vldr	d0, [sp, #16]
   1dfe4:	bl	20be8 <main@@Base+0xa700>
   1dfe8:	b	1e000 <main@@Base+0x7b18>
   1dfec:	ldr	r0, [fp, #-8]
   1dff0:	ldr	r1, [fp, #-12]
   1dff4:	ldr	r2, [fp, #-16]
   1dff8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1dffc:	str	r0, [fp, #-12]
   1e000:	b	1e018 <main@@Base+0x7b30>
   1e004:	ldr	r0, [fp, #-8]
   1e008:	ldr	r1, [fp, #-12]
   1e00c:	ldr	r2, [fp, #-16]
   1e010:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e014:	str	r0, [fp, #-12]
   1e018:	b	1e01c <main@@Base+0x7b34>
   1e01c:	b	1e418 <main@@Base+0x7f30>
   1e020:	ldr	r0, [sp, #36]	; 0x24
   1e024:	cmn	r0, #-2013265919	; 0x88000001
   1e028:	bhi	1e0dc <main@@Base+0x7bf4>
   1e02c:	b	1e030 <main@@Base+0x7b48>
   1e030:	ldrb	r0, [sp, #35]	; 0x23
   1e034:	ldr	r1, [sp, #36]	; 0x24
   1e038:	movw	r2, #29556	; 0x7374
   1e03c:	movt	r2, #29797	; 0x7465
   1e040:	eor	r1, r1, r2
   1e044:	eor	r0, r0, #51	; 0x33
   1e048:	orr	r0, r1, r0, lsl #24
   1e04c:	cmp	r0, #0
   1e050:	bne	1e0c4 <main@@Base+0x7bdc>
   1e054:	b	1e058 <main@@Base+0x7b70>
   1e058:	ldr	r0, [fp, #-8]
   1e05c:	ldr	r1, [fp, #-12]
   1e060:	str	r1, [fp, #-36]	; 0xffffffdc
   1e064:	ldr	r2, [fp, #-16]
   1e068:	movw	r3, #5
   1e06c:	bl	1bc98 <main@@Base+0x57b0>
   1e070:	str	r0, [fp, #-12]
   1e074:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e078:	ldr	r1, [fp, #-12]
   1e07c:	cmp	r0, r1
   1e080:	beq	1e0ac <main@@Base+0x7bc4>
   1e084:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e088:	add	r0, r0, #26
   1e08c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e090:	ldr	r0, [fp, #-8]
   1e094:	ldr	r1, [fp, #-12]
   1e098:	ldr	r2, [fp, #-16]
   1e09c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0a0:	bl	1e47c <main@@Base+0x7f94>
   1e0a4:	str	r0, [fp, #-12]
   1e0a8:	b	1e0c0 <main@@Base+0x7bd8>
   1e0ac:	ldr	r0, [fp, #-8]
   1e0b0:	ldr	r1, [fp, #-12]
   1e0b4:	ldr	r2, [fp, #-16]
   1e0b8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e0bc:	str	r0, [fp, #-12]
   1e0c0:	b	1e0d8 <main@@Base+0x7bf0>
   1e0c4:	ldr	r0, [fp, #-8]
   1e0c8:	ldr	r1, [fp, #-12]
   1e0cc:	ldr	r2, [fp, #-16]
   1e0d0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e0d4:	str	r0, [fp, #-12]
   1e0d8:	b	1e414 <main@@Base+0x7f2c>
   1e0dc:	ldrb	r0, [sp, #39]	; 0x27
   1e0e0:	cmp	r0, #120	; 0x78
   1e0e4:	bhi	1e1fc <main@@Base+0x7d14>
   1e0e8:	b	1e0ec <main@@Base+0x7c04>
   1e0ec:	ldrb	r0, [sp, #39]	; 0x27
   1e0f0:	mov	r1, #2013265920	; 0x78000000
   1e0f4:	teq	r1, r0, lsl #24
   1e0f8:	bne	1e1e4 <main@@Base+0x7cfc>
   1e0fc:	b	1e100 <main@@Base+0x7c18>
   1e100:	ldr	r0, [fp, #-8]
   1e104:	ldr	r1, [fp, #-12]
   1e108:	str	r1, [fp, #-36]	; 0xffffffdc
   1e10c:	ldr	r2, [fp, #-16]
   1e110:	movw	r3, #1
   1e114:	bl	1bc98 <main@@Base+0x57b0>
   1e118:	str	r0, [fp, #-12]
   1e11c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e120:	ldr	r1, [fp, #-12]
   1e124:	cmp	r0, r1
   1e128:	beq	1e1cc <main@@Base+0x7ce4>
   1e12c:	vldr	s0, [pc, #816]	; 1e464 <main@@Base+0x7f7c>
   1e130:	vstr	s0, [sp, #12]
   1e134:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e138:	add	r0, r0, #0
   1e13c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e140:	ldr	r0, [fp, #-8]
   1e144:	ldr	r1, [fp, #-12]
   1e148:	str	r1, [fp, #-36]	; 0xffffffdc
   1e14c:	ldr	r2, [fp, #-16]
   1e150:	add	r3, sp, #12
   1e154:	bl	34b58 <flatcc_json_parser_float@@Base>
   1e158:	str	r0, [fp, #-12]
   1e15c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e160:	ldr	r1, [fp, #-12]
   1e164:	cmp	r0, r1
   1e168:	bne	1e1bc <main@@Base+0x7cd4>
   1e16c:	ldr	r0, [pc, #764]	; 1e470 <main@@Base+0x7f88>
   1e170:	add	r3, pc, r0
   1e174:	ldr	r0, [fp, #-8]
   1e178:	ldr	r1, [fp, #-12]
   1e17c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e180:	ldr	r2, [fp, #-16]
   1e184:	add	ip, sp, #12
   1e188:	str	ip, [sp]
   1e18c:	bl	1fbf8 <main@@Base+0x9710>
   1e190:	str	r0, [fp, #-12]
   1e194:	ldr	r0, [fp, #-12]
   1e198:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e19c:	cmp	r0, r1
   1e1a0:	beq	1e1b4 <main@@Base+0x7ccc>
   1e1a4:	ldr	r0, [fp, #-12]
   1e1a8:	ldr	r1, [fp, #-16]
   1e1ac:	cmp	r0, r1
   1e1b0:	bne	1e1b8 <main@@Base+0x7cd0>
   1e1b4:	b	1e440 <main@@Base+0x7f58>
   1e1b8:	b	1e1bc <main@@Base+0x7cd4>
   1e1bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1c0:	vldr	s0, [sp, #12]
   1e1c4:	bl	1fde0 <main@@Base+0x98f8>
   1e1c8:	b	1e1e0 <main@@Base+0x7cf8>
   1e1cc:	ldr	r0, [fp, #-8]
   1e1d0:	ldr	r1, [fp, #-12]
   1e1d4:	ldr	r2, [fp, #-16]
   1e1d8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e1dc:	str	r0, [fp, #-12]
   1e1e0:	b	1e1f8 <main@@Base+0x7d10>
   1e1e4:	ldr	r0, [fp, #-8]
   1e1e8:	ldr	r1, [fp, #-12]
   1e1ec:	ldr	r2, [fp, #-16]
   1e1f0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e1f4:	str	r0, [fp, #-12]
   1e1f8:	b	1e410 <main@@Base+0x7f28>
   1e1fc:	ldrb	r0, [sp, #39]	; 0x27
   1e200:	mov	r1, #2046820352	; 0x7a000000
   1e204:	teq	r1, r0, lsl #24
   1e208:	bne	1e2f4 <main@@Base+0x7e0c>
   1e20c:	b	1e210 <main@@Base+0x7d28>
   1e210:	ldr	r0, [fp, #-8]
   1e214:	ldr	r1, [fp, #-12]
   1e218:	str	r1, [fp, #-36]	; 0xffffffdc
   1e21c:	ldr	r2, [fp, #-16]
   1e220:	movw	r3, #1
   1e224:	bl	1bc98 <main@@Base+0x57b0>
   1e228:	str	r0, [fp, #-12]
   1e22c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e230:	ldr	r1, [fp, #-12]
   1e234:	cmp	r0, r1
   1e238:	beq	1e2dc <main@@Base+0x7df4>
   1e23c:	vldr	s0, [pc, #544]	; 1e464 <main@@Base+0x7f7c>
   1e240:	vstr	s0, [sp, #8]
   1e244:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e248:	add	r0, r0, #8
   1e24c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e250:	ldr	r0, [fp, #-8]
   1e254:	ldr	r1, [fp, #-12]
   1e258:	str	r1, [fp, #-36]	; 0xffffffdc
   1e25c:	ldr	r2, [fp, #-16]
   1e260:	add	r3, sp, #8
   1e264:	bl	34b58 <flatcc_json_parser_float@@Base>
   1e268:	str	r0, [fp, #-12]
   1e26c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e270:	ldr	r1, [fp, #-12]
   1e274:	cmp	r0, r1
   1e278:	bne	1e2cc <main@@Base+0x7de4>
   1e27c:	ldr	r0, [pc, #488]	; 1e46c <main@@Base+0x7f84>
   1e280:	add	r3, pc, r0
   1e284:	ldr	r0, [fp, #-8]
   1e288:	ldr	r1, [fp, #-12]
   1e28c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e290:	ldr	r2, [fp, #-16]
   1e294:	add	ip, sp, #8
   1e298:	str	ip, [sp]
   1e29c:	bl	1fbf8 <main@@Base+0x9710>
   1e2a0:	str	r0, [fp, #-12]
   1e2a4:	ldr	r0, [fp, #-12]
   1e2a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2ac:	cmp	r0, r1
   1e2b0:	beq	1e2c4 <main@@Base+0x7ddc>
   1e2b4:	ldr	r0, [fp, #-12]
   1e2b8:	ldr	r1, [fp, #-16]
   1e2bc:	cmp	r0, r1
   1e2c0:	bne	1e2c8 <main@@Base+0x7de0>
   1e2c4:	b	1e440 <main@@Base+0x7f58>
   1e2c8:	b	1e2cc <main@@Base+0x7de4>
   1e2cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2d0:	vldr	s0, [sp, #8]
   1e2d4:	bl	1fde0 <main@@Base+0x98f8>
   1e2d8:	b	1e2f0 <main@@Base+0x7e08>
   1e2dc:	ldr	r0, [fp, #-8]
   1e2e0:	ldr	r1, [fp, #-12]
   1e2e4:	ldr	r2, [fp, #-16]
   1e2e8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e2ec:	str	r0, [fp, #-12]
   1e2f0:	b	1e40c <main@@Base+0x7f24>
   1e2f4:	ldrb	r0, [sp, #39]	; 0x27
   1e2f8:	mov	r1, #2030043136	; 0x79000000
   1e2fc:	teq	r1, r0, lsl #24
   1e300:	bne	1e3f4 <main@@Base+0x7f0c>
   1e304:	b	1e310 <main@@Base+0x7e28>
	...
   1e310:	ldr	r0, [fp, #-8]
   1e314:	ldr	r1, [fp, #-12]
   1e318:	str	r1, [fp, #-36]	; 0xffffffdc
   1e31c:	ldr	r2, [fp, #-16]
   1e320:	movw	r3, #1
   1e324:	bl	1bc98 <main@@Base+0x57b0>
   1e328:	str	r0, [fp, #-12]
   1e32c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e330:	ldr	r1, [fp, #-12]
   1e334:	cmp	r0, r1
   1e338:	beq	1e3dc <main@@Base+0x7ef4>
   1e33c:	vldr	s0, [pc, #288]	; 1e464 <main@@Base+0x7f7c>
   1e340:	vstr	s0, [sp, #4]
   1e344:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e348:	add	r0, r0, #4
   1e34c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e350:	ldr	r0, [fp, #-8]
   1e354:	ldr	r1, [fp, #-12]
   1e358:	str	r1, [fp, #-36]	; 0xffffffdc
   1e35c:	ldr	r2, [fp, #-16]
   1e360:	add	r3, sp, #4
   1e364:	bl	34b58 <flatcc_json_parser_float@@Base>
   1e368:	str	r0, [fp, #-12]
   1e36c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e370:	ldr	r1, [fp, #-12]
   1e374:	cmp	r0, r1
   1e378:	bne	1e3cc <main@@Base+0x7ee4>
   1e37c:	ldr	r0, [pc, #228]	; 1e468 <main@@Base+0x7f80>
   1e380:	add	r3, pc, r0
   1e384:	ldr	r0, [fp, #-8]
   1e388:	ldr	r1, [fp, #-12]
   1e38c:	str	r1, [fp, #-36]	; 0xffffffdc
   1e390:	ldr	r2, [fp, #-16]
   1e394:	add	ip, sp, #4
   1e398:	str	ip, [sp]
   1e39c:	bl	1fbf8 <main@@Base+0x9710>
   1e3a0:	str	r0, [fp, #-12]
   1e3a4:	ldr	r0, [fp, #-12]
   1e3a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3ac:	cmp	r0, r1
   1e3b0:	beq	1e3c4 <main@@Base+0x7edc>
   1e3b4:	ldr	r0, [fp, #-12]
   1e3b8:	ldr	r1, [fp, #-16]
   1e3bc:	cmp	r0, r1
   1e3c0:	bne	1e3c8 <main@@Base+0x7ee0>
   1e3c4:	b	1e440 <main@@Base+0x7f58>
   1e3c8:	b	1e3cc <main@@Base+0x7ee4>
   1e3cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3d0:	vldr	s0, [sp, #4]
   1e3d4:	bl	1fde0 <main@@Base+0x98f8>
   1e3d8:	b	1e3f0 <main@@Base+0x7f08>
   1e3dc:	ldr	r0, [fp, #-8]
   1e3e0:	ldr	r1, [fp, #-12]
   1e3e4:	ldr	r2, [fp, #-16]
   1e3e8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e3ec:	str	r0, [fp, #-12]
   1e3f0:	b	1e408 <main@@Base+0x7f20>
   1e3f4:	ldr	r0, [fp, #-8]
   1e3f8:	ldr	r1, [fp, #-12]
   1e3fc:	ldr	r2, [fp, #-16]
   1e400:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e404:	str	r0, [fp, #-12]
   1e408:	b	1e40c <main@@Base+0x7f24>
   1e40c:	b	1e410 <main@@Base+0x7f28>
   1e410:	b	1e414 <main@@Base+0x7f2c>
   1e414:	b	1e418 <main@@Base+0x7f30>
   1e418:	ldr	r0, [fp, #-8]
   1e41c:	ldr	r1, [fp, #-12]
   1e420:	ldr	r2, [fp, #-16]
   1e424:	sub	r3, fp, #24
   1e428:	bl	20c14 <main@@Base+0xa72c>
   1e42c:	str	r0, [fp, #-12]
   1e430:	b	1dd94 <main@@Base+0x78ac>
   1e434:	ldr	r0, [fp, #-12]
   1e438:	str	r0, [fp, #-4]
   1e43c:	b	1e458 <main@@Base+0x7f70>
   1e440:	ldr	r0, [fp, #-8]
   1e444:	ldr	r1, [fp, #-12]
   1e448:	ldr	r2, [fp, #-16]
   1e44c:	movw	r3, #33	; 0x21
   1e450:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1e454:	str	r0, [fp, #-4]
   1e458:	ldr	r0, [fp, #-4]
   1e45c:	mov	sp, fp
   1e460:	pop	{fp, pc}
   1e464:	andeq	r0, r0, r0
   1e468:	andeq	lr, r3, r4, asr #28
   1e46c:	andeq	lr, r3, r8, lsr pc
   1e470:	andeq	pc, r3, ip, lsr r0	; <UNPREDICTABLE>
   1e474:	andeq	pc, r3, r0, lsl r2	; <UNPREDICTABLE>
   1e478:	andeq	pc, r3, ip, lsl #6
   1e47c:	push	{fp, lr}
   1e480:	mov	fp, sp
   1e484:	sub	sp, sp, #56	; 0x38
   1e488:	str	r0, [fp, #-8]
   1e48c:	str	r1, [fp, #-12]
   1e490:	str	r2, [fp, #-16]
   1e494:	str	r3, [fp, #-20]	; 0xffffffec
   1e498:	ldr	r0, [fp, #-8]
   1e49c:	ldr	r1, [fp, #-12]
   1e4a0:	ldr	r2, [fp, #-16]
   1e4a4:	sub	r3, fp, #24
   1e4a8:	bl	1baf8 <main@@Base+0x5610>
   1e4ac:	str	r0, [fp, #-12]
   1e4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4b4:	cmp	r0, #0
   1e4b8:	beq	1e708 <main@@Base+0x8220>
   1e4bc:	ldr	r0, [fp, #-8]
   1e4c0:	ldr	r1, [fp, #-12]
   1e4c4:	ldr	r2, [fp, #-16]
   1e4c8:	bl	1bbdc <main@@Base+0x56f4>
   1e4cc:	str	r0, [fp, #-12]
   1e4d0:	ldr	r0, [fp, #-12]
   1e4d4:	ldr	r1, [fp, #-16]
   1e4d8:	bl	1bc60 <main@@Base+0x5778>
   1e4dc:	str	r1, [sp, #12]
   1e4e0:	str	r0, [sp, #8]
   1e4e4:	ldrb	r0, [sp, #15]
   1e4e8:	mov	r1, #1644167168	; 0x62000000
   1e4ec:	teq	r1, r0, lsl #24
   1e4f0:	bne	1e5dc <main@@Base+0x80f4>
   1e4f4:	b	1e4f8 <main@@Base+0x8010>
   1e4f8:	ldr	r0, [fp, #-8]
   1e4fc:	ldr	r1, [fp, #-12]
   1e500:	str	r1, [sp, #20]
   1e504:	ldr	r2, [fp, #-16]
   1e508:	movw	r3, #1
   1e50c:	bl	1bc98 <main@@Base+0x57b0>
   1e510:	str	r0, [fp, #-12]
   1e514:	ldr	r0, [sp, #20]
   1e518:	ldr	r1, [fp, #-12]
   1e51c:	cmp	r0, r1
   1e520:	beq	1e5c4 <main@@Base+0x80dc>
   1e524:	movw	r0, #0
   1e528:	strb	r0, [sp, #7]
   1e52c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e530:	add	r0, r0, #2
   1e534:	str	r0, [sp, #24]
   1e538:	ldr	r0, [fp, #-8]
   1e53c:	ldr	r1, [fp, #-12]
   1e540:	str	r1, [sp, #20]
   1e544:	ldr	r2, [fp, #-16]
   1e548:	add	r3, sp, #7
   1e54c:	bl	1d148 <main@@Base+0x6c60>
   1e550:	str	r0, [fp, #-12]
   1e554:	ldr	r0, [sp, #20]
   1e558:	ldr	r1, [fp, #-12]
   1e55c:	cmp	r0, r1
   1e560:	bne	1e5b4 <main@@Base+0x80cc>
   1e564:	ldr	r0, [pc, #464]	; 1e73c <main@@Base+0x8254>
   1e568:	add	r3, pc, r0
   1e56c:	ldr	r0, [fp, #-8]
   1e570:	ldr	r1, [fp, #-12]
   1e574:	str	r1, [sp, #20]
   1e578:	ldr	r2, [fp, #-16]
   1e57c:	add	ip, sp, #7
   1e580:	str	ip, [sp]
   1e584:	bl	1d224 <main@@Base+0x6d3c>
   1e588:	str	r0, [fp, #-12]
   1e58c:	ldr	r0, [fp, #-12]
   1e590:	ldr	r1, [sp, #20]
   1e594:	cmp	r0, r1
   1e598:	beq	1e5ac <main@@Base+0x80c4>
   1e59c:	ldr	r0, [fp, #-12]
   1e5a0:	ldr	r1, [fp, #-16]
   1e5a4:	cmp	r0, r1
   1e5a8:	bne	1e5b0 <main@@Base+0x80c8>
   1e5ac:	b	1e714 <main@@Base+0x822c>
   1e5b0:	b	1e5b4 <main@@Base+0x80cc>
   1e5b4:	ldr	r0, [sp, #24]
   1e5b8:	ldrsb	r1, [sp, #7]
   1e5bc:	bl	1d408 <main@@Base+0x6f20>
   1e5c0:	b	1e5d8 <main@@Base+0x80f0>
   1e5c4:	ldr	r0, [fp, #-8]
   1e5c8:	ldr	r1, [fp, #-12]
   1e5cc:	ldr	r2, [fp, #-16]
   1e5d0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e5d4:	str	r0, [fp, #-12]
   1e5d8:	b	1e6ec <main@@Base+0x8204>
   1e5dc:	ldrb	r0, [sp, #15]
   1e5e0:	mov	r1, #1627389952	; 0x61000000
   1e5e4:	teq	r1, r0, lsl #24
   1e5e8:	bne	1e6d4 <main@@Base+0x81ec>
   1e5ec:	b	1e5f0 <main@@Base+0x8108>
   1e5f0:	ldr	r0, [fp, #-8]
   1e5f4:	ldr	r1, [fp, #-12]
   1e5f8:	str	r1, [sp, #20]
   1e5fc:	ldr	r2, [fp, #-16]
   1e600:	movw	r3, #1
   1e604:	bl	1bc98 <main@@Base+0x57b0>
   1e608:	str	r0, [fp, #-12]
   1e60c:	ldr	r0, [sp, #20]
   1e610:	ldr	r1, [fp, #-12]
   1e614:	cmp	r0, r1
   1e618:	beq	1e6bc <main@@Base+0x81d4>
   1e61c:	movw	r0, #0
   1e620:	strh	r0, [sp, #4]
   1e624:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e628:	add	r0, r0, #0
   1e62c:	str	r0, [sp, #24]
   1e630:	ldr	r0, [fp, #-8]
   1e634:	ldr	r1, [fp, #-12]
   1e638:	str	r1, [sp, #20]
   1e63c:	ldr	r2, [fp, #-16]
   1e640:	add	r3, sp, #4
   1e644:	bl	1d968 <main@@Base+0x7480>
   1e648:	str	r0, [fp, #-12]
   1e64c:	ldr	r0, [sp, #20]
   1e650:	ldr	r1, [fp, #-12]
   1e654:	cmp	r0, r1
   1e658:	bne	1e6ac <main@@Base+0x81c4>
   1e65c:	ldr	r0, [pc, #212]	; 1e738 <main@@Base+0x8250>
   1e660:	add	r3, pc, r0
   1e664:	ldr	r0, [fp, #-8]
   1e668:	ldr	r1, [fp, #-12]
   1e66c:	str	r1, [sp, #20]
   1e670:	ldr	r2, [fp, #-16]
   1e674:	add	ip, sp, #4
   1e678:	str	ip, [sp]
   1e67c:	bl	1da44 <main@@Base+0x755c>
   1e680:	str	r0, [fp, #-12]
   1e684:	ldr	r0, [fp, #-12]
   1e688:	ldr	r1, [sp, #20]
   1e68c:	cmp	r0, r1
   1e690:	beq	1e6a4 <main@@Base+0x81bc>
   1e694:	ldr	r0, [fp, #-12]
   1e698:	ldr	r1, [fp, #-16]
   1e69c:	cmp	r0, r1
   1e6a0:	bne	1e6a8 <main@@Base+0x81c0>
   1e6a4:	b	1e714 <main@@Base+0x822c>
   1e6a8:	b	1e6ac <main@@Base+0x81c4>
   1e6ac:	ldr	r0, [sp, #24]
   1e6b0:	ldrsh	r1, [sp, #4]
   1e6b4:	bl	1dc28 <main@@Base+0x7740>
   1e6b8:	b	1e6d0 <main@@Base+0x81e8>
   1e6bc:	ldr	r0, [fp, #-8]
   1e6c0:	ldr	r1, [fp, #-12]
   1e6c4:	ldr	r2, [fp, #-16]
   1e6c8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e6cc:	str	r0, [fp, #-12]
   1e6d0:	b	1e6e8 <main@@Base+0x8200>
   1e6d4:	ldr	r0, [fp, #-8]
   1e6d8:	ldr	r1, [fp, #-12]
   1e6dc:	ldr	r2, [fp, #-16]
   1e6e0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1e6e4:	str	r0, [fp, #-12]
   1e6e8:	b	1e6ec <main@@Base+0x8204>
   1e6ec:	ldr	r0, [fp, #-8]
   1e6f0:	ldr	r1, [fp, #-12]
   1e6f4:	ldr	r2, [fp, #-16]
   1e6f8:	sub	r3, fp, #24
   1e6fc:	bl	20c14 <main@@Base+0xa72c>
   1e700:	str	r0, [fp, #-12]
   1e704:	b	1e4b0 <main@@Base+0x7fc8>
   1e708:	ldr	r0, [fp, #-12]
   1e70c:	str	r0, [fp, #-4]
   1e710:	b	1e72c <main@@Base+0x8244>
   1e714:	ldr	r0, [fp, #-8]
   1e718:	ldr	r1, [fp, #-12]
   1e71c:	ldr	r2, [fp, #-16]
   1e720:	movw	r3, #33	; 0x21
   1e724:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1e728:	str	r0, [fp, #-4]
   1e72c:	ldr	r0, [fp, #-4]
   1e730:	mov	sp, fp
   1e734:	pop	{fp, pc}
   1e738:	andeq	lr, r3, ip, ror fp
   1e73c:	andeq	lr, r3, r8, ror #24
   1e740:	push	{fp, lr}
   1e744:	mov	fp, sp
   1e748:	sub	sp, sp, #24
   1e74c:	ldr	ip, [fp, #8]
   1e750:	str	r0, [fp, #-8]
   1e754:	str	r1, [sp, #12]
   1e758:	str	r2, [sp, #8]
   1e75c:	strb	r3, [sp, #7]
   1e760:	ldr	r0, [fp, #8]
   1e764:	mov	r1, #0
   1e768:	str	r1, [r0]
   1e76c:	ldrb	r0, [sp, #7]
   1e770:	mov	r1, r0
   1e774:	cmp	r0, #4
   1e778:	str	r1, [sp]
   1e77c:	bhi	1e82c <main@@Base+0x8344>
   1e780:	add	r0, pc, #8
   1e784:	ldr	r1, [sp]
   1e788:	ldr	r2, [r0, r1, lsl #2]
   1e78c:	add	pc, r0, r2
   1e790:	andeq	r0, r0, r4, lsl r0
   1e794:	andeq	r0, r0, ip, lsr #32
   1e798:	andeq	r0, r0, r8, asr #32
   1e79c:	andeq	r0, r0, r4, rrx
   1e7a0:	andeq	r0, r0, r0, lsl #1
   1e7a4:	ldr	r0, [fp, #-8]
   1e7a8:	ldr	r1, [sp, #12]
   1e7ac:	ldr	r2, [sp, #8]
   1e7b0:	bl	22568 <main@@Base+0xc080>
   1e7b4:	str	r0, [fp, #-4]
   1e7b8:	b	1e8c4 <main@@Base+0x83dc>
   1e7bc:	ldr	r0, [fp, #-8]
   1e7c0:	ldr	r1, [sp, #12]
   1e7c4:	ldr	r2, [sp, #8]
   1e7c8:	ldr	r3, [fp, #8]
   1e7cc:	bl	17158 <main@@Base+0xc70>
   1e7d0:	str	r0, [sp, #12]
   1e7d4:	b	1e874 <main@@Base+0x838c>
   1e7d8:	ldr	r0, [fp, #-8]
   1e7dc:	ldr	r1, [sp, #12]
   1e7e0:	ldr	r2, [sp, #8]
   1e7e4:	ldr	r3, [fp, #8]
   1e7e8:	bl	225e8 <main@@Base+0xc100>
   1e7ec:	str	r0, [sp, #12]
   1e7f0:	b	1e874 <main@@Base+0x838c>
   1e7f4:	ldr	r0, [fp, #-8]
   1e7f8:	ldr	r1, [sp, #12]
   1e7fc:	ldr	r2, [sp, #8]
   1e800:	ldr	r3, [fp, #8]
   1e804:	bl	22c40 <main@@Base+0xc758>
   1e808:	str	r0, [sp, #12]
   1e80c:	b	1e874 <main@@Base+0x838c>
   1e810:	ldr	r0, [fp, #-8]
   1e814:	ldr	r1, [sp, #12]
   1e818:	ldr	r2, [sp, #8]
   1e81c:	ldr	r3, [fp, #8]
   1e820:	bl	22d4c <main@@Base+0xc864>
   1e824:	str	r0, [sp, #12]
   1e828:	b	1e874 <main@@Base+0x838c>
   1e82c:	ldr	r0, [fp, #-8]
   1e830:	ldr	r0, [r0, #8]
   1e834:	and	r0, r0, #1
   1e838:	cmp	r0, #0
   1e83c:	bne	1e85c <main@@Base+0x8374>
   1e840:	ldr	r0, [fp, #-8]
   1e844:	ldr	r1, [sp, #12]
   1e848:	ldr	r2, [sp, #8]
   1e84c:	movw	r3, #15
   1e850:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1e854:	str	r0, [fp, #-4]
   1e858:	b	1e8c4 <main@@Base+0x83dc>
   1e85c:	ldr	r0, [fp, #-8]
   1e860:	ldr	r1, [sp, #12]
   1e864:	ldr	r2, [sp, #8]
   1e868:	bl	3433c <flatcc_json_parser_generic_json@@Base>
   1e86c:	str	r0, [fp, #-4]
   1e870:	b	1e8c4 <main@@Base+0x83dc>
   1e874:	ldr	r0, [fp, #-8]
   1e878:	ldr	r0, [r0, #20]
   1e87c:	cmp	r0, #0
   1e880:	beq	1e890 <main@@Base+0x83a8>
   1e884:	ldr	r0, [sp, #12]
   1e888:	str	r0, [fp, #-4]
   1e88c:	b	1e8c4 <main@@Base+0x83dc>
   1e890:	ldr	r0, [fp, #8]
   1e894:	ldr	r0, [r0]
   1e898:	cmp	r0, #0
   1e89c:	bne	1e8bc <main@@Base+0x83d4>
   1e8a0:	ldr	r0, [fp, #-8]
   1e8a4:	ldr	r1, [sp, #12]
   1e8a8:	ldr	r2, [sp, #8]
   1e8ac:	movw	r3, #33	; 0x21
   1e8b0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1e8b4:	str	r0, [fp, #-4]
   1e8b8:	b	1e8c4 <main@@Base+0x83dc>
   1e8bc:	ldr	r0, [sp, #12]
   1e8c0:	str	r0, [fp, #-4]
   1e8c4:	ldr	r0, [fp, #-4]
   1e8c8:	mov	sp, fp
   1e8cc:	pop	{fp, pc}
   1e8d0:	push	{fp, lr}
   1e8d4:	mov	fp, sp
   1e8d8:	sub	sp, sp, #72	; 0x48
   1e8dc:	ldr	ip, [fp, #12]
   1e8e0:	ldr	lr, [fp, #8]
   1e8e4:	str	r0, [fp, #-8]
   1e8e8:	str	r1, [fp, #-12]
   1e8ec:	str	r2, [fp, #-16]
   1e8f0:	str	r3, [fp, #-20]	; 0xffffffec
   1e8f4:	ldr	r0, [fp, #-12]
   1e8f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e8fc:	ldr	r0, [fp, #-12]
   1e900:	ldr	r1, [fp, #-16]
   1e904:	str	ip, [sp, #28]
   1e908:	str	lr, [sp, #24]
   1e90c:	bl	1bc60 <main@@Base+0x5778>
   1e910:	str	r1, [sp, #36]	; 0x24
   1e914:	str	r0, [sp, #32]
   1e918:	ldr	r0, [sp, #32]
   1e91c:	ldr	r1, [sp, #36]	; 0x24
   1e920:	movw	r2, #29183	; 0x71ff
   1e924:	movt	r2, #29797	; 0x7465
   1e928:	subs	r0, r2, r0
   1e92c:	movw	r2, #28275	; 0x6e73
   1e930:	movt	r2, #19823	; 0x4d6f
   1e934:	sbcs	r1, r2, r1
   1e938:	bcc	1e9e0 <main@@Base+0x84f8>
   1e93c:	b	1e940 <main@@Base+0x8458>
   1e940:	ldr	r0, [sp, #36]	; 0x24
   1e944:	bic	r0, r0, #255	; 0xff
   1e948:	movw	r1, #29696	; 0x7400
   1e94c:	movt	r1, #16748	; 0x416c
   1e950:	teq	r0, r1
   1e954:	bne	1e9d0 <main@@Base+0x84e8>
   1e958:	b	1e95c <main@@Base+0x8474>
   1e95c:	ldr	r0, [fp, #-8]
   1e960:	ldr	r1, [fp, #-12]
   1e964:	str	r1, [fp, #-28]	; 0xffffffe4
   1e968:	ldr	r2, [fp, #-16]
   1e96c:	ldr	r3, [fp, #12]
   1e970:	movw	ip, #3
   1e974:	str	r3, [sp, #20]
   1e978:	mov	r3, ip
   1e97c:	ldr	ip, [sp, #20]
   1e980:	str	ip, [sp]
   1e984:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1e988:	str	r0, [fp, #-12]
   1e98c:	ldr	r0, [fp, #-12]
   1e990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e994:	cmp	r0, r1
   1e998:	beq	1e9c0 <main@@Base+0x84d8>
   1e99c:	ldr	r0, [fp, #8]
   1e9a0:	mov	r1, #0
   1e9a4:	str	r1, [r0, #4]
   1e9a8:	mov	r1, #4
   1e9ac:	str	r1, [r0]
   1e9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9b4:	movw	r1, #0
   1e9b8:	str	r1, [r0]
   1e9bc:	b	1e9cc <main@@Base+0x84e4>
   1e9c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9c4:	str	r0, [fp, #-4]
   1e9c8:	b	1ed40 <main@@Base+0x8858>
   1e9cc:	b	1e9dc <main@@Base+0x84f4>
   1e9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9d4:	str	r0, [fp, #-4]
   1e9d8:	b	1ed40 <main@@Base+0x8858>
   1e9dc:	b	1ed38 <main@@Base+0x8850>
   1e9e0:	ldr	r0, [sp, #32]
   1e9e4:	ldr	r1, [sp, #36]	; 0x24
   1e9e8:	movw	r2, #28275	; 0x6e73
   1e9ec:	movt	r2, #19823	; 0x4d6f
   1e9f0:	eor	r1, r1, r2
   1e9f4:	movw	r2, #29234	; 0x7232
   1e9f8:	movt	r2, #29797	; 0x7465
   1e9fc:	eor	r0, r0, r2
   1ea00:	orr	r0, r0, r1
   1ea04:	cmp	r0, #0
   1ea08:	bne	1ea7c <main@@Base+0x8594>
   1ea0c:	b	1ea10 <main@@Base+0x8528>
   1ea10:	ldr	r0, [fp, #-8]
   1ea14:	ldr	r1, [fp, #-12]
   1ea18:	str	r1, [fp, #-28]	; 0xffffffe4
   1ea1c:	ldr	r2, [fp, #-16]
   1ea20:	ldr	r3, [fp, #12]
   1ea24:	movw	ip, #8
   1ea28:	str	r3, [sp, #16]
   1ea2c:	mov	r3, ip
   1ea30:	ldr	ip, [sp, #16]
   1ea34:	str	ip, [sp]
   1ea38:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1ea3c:	str	r0, [fp, #-12]
   1ea40:	ldr	r0, [fp, #-12]
   1ea44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ea48:	cmp	r0, r1
   1ea4c:	beq	1ea74 <main@@Base+0x858c>
   1ea50:	ldr	r0, [fp, #8]
   1ea54:	mov	r1, #0
   1ea58:	str	r1, [r0, #4]
   1ea5c:	mov	r1, #3
   1ea60:	str	r1, [r0]
   1ea64:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ea68:	movw	r1, #0
   1ea6c:	str	r1, [r0]
   1ea70:	b	1ea78 <main@@Base+0x8590>
   1ea74:	b	1eb2c <main@@Base+0x8644>
   1ea78:	b	1eb28 <main@@Base+0x8640>
   1ea7c:	ldr	r0, [sp, #32]
   1ea80:	ldr	r1, [sp, #36]	; 0x24
   1ea84:	movw	r2, #28526	; 0x6f6e
   1ea88:	movt	r2, #77	; 0x4d
   1ea8c:	eor	r2, r2, r1, lsr #8
   1ea90:	lsr	r0, r0, #8
   1ea94:	orr	r0, r0, r1, lsl #24
   1ea98:	movw	r1, #25970	; 0x6572
   1ea9c:	movt	r1, #29556	; 0x7374
   1eaa0:	eor	r0, r0, r1
   1eaa4:	orr	r0, r0, r2
   1eaa8:	cmp	r0, #0
   1eaac:	bne	1eb20 <main@@Base+0x8638>
   1eab0:	b	1eab4 <main@@Base+0x85cc>
   1eab4:	ldr	r0, [fp, #-8]
   1eab8:	ldr	r1, [fp, #-12]
   1eabc:	str	r1, [fp, #-28]	; 0xffffffe4
   1eac0:	ldr	r2, [fp, #-16]
   1eac4:	ldr	r3, [fp, #12]
   1eac8:	movw	ip, #7
   1eacc:	str	r3, [sp, #12]
   1ead0:	mov	r3, ip
   1ead4:	ldr	ip, [sp, #12]
   1ead8:	str	ip, [sp]
   1eadc:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1eae0:	str	r0, [fp, #-12]
   1eae4:	ldr	r0, [fp, #-12]
   1eae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eaec:	cmp	r0, r1
   1eaf0:	beq	1eb18 <main@@Base+0x8630>
   1eaf4:	ldr	r0, [fp, #8]
   1eaf8:	mov	r1, #0
   1eafc:	str	r1, [r0, #4]
   1eb00:	mov	r1, #1
   1eb04:	str	r1, [r0]
   1eb08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb0c:	movw	r1, #0
   1eb10:	str	r1, [r0]
   1eb14:	b	1eb1c <main@@Base+0x8634>
   1eb18:	b	1eb2c <main@@Base+0x8644>
   1eb1c:	b	1eb24 <main@@Base+0x863c>
   1eb20:	b	1eb2c <main@@Base+0x8644>
   1eb24:	b	1eb28 <main@@Base+0x8640>
   1eb28:	b	1ed34 <main@@Base+0x884c>
   1eb2c:	ldr	r0, [sp, #36]	; 0x24
   1eb30:	movw	r1, #20037	; 0x4e45
   1eb34:	movt	r1, #20047	; 0x4e4f
   1eb38:	teq	r0, r1
   1eb3c:	bne	1ebac <main@@Base+0x86c4>
   1eb40:	b	1eb44 <main@@Base+0x865c>
   1eb44:	ldr	r0, [fp, #-8]
   1eb48:	ldr	r1, [fp, #-12]
   1eb4c:	str	r1, [fp, #-28]	; 0xffffffe4
   1eb50:	ldr	r2, [fp, #-16]
   1eb54:	ldr	r3, [fp, #12]
   1eb58:	movw	ip, #4
   1eb5c:	str	r3, [sp, #8]
   1eb60:	mov	r3, ip
   1eb64:	ldr	ip, [sp, #8]
   1eb68:	str	ip, [sp]
   1eb6c:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1eb70:	str	r0, [fp, #-12]
   1eb74:	ldr	r0, [fp, #-12]
   1eb78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eb7c:	cmp	r0, r1
   1eb80:	beq	1eba4 <main@@Base+0x86bc>
   1eb84:	ldr	r0, [fp, #8]
   1eb88:	mov	r1, #0
   1eb8c:	str	r1, [r0, #4]
   1eb90:	str	r1, [r0]
   1eb94:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eb98:	movw	r1, #0
   1eb9c:	str	r1, [r0]
   1eba0:	b	1eba8 <main@@Base+0x86c0>
   1eba4:	b	1ebb4 <main@@Base+0x86cc>
   1eba8:	b	1ebb0 <main@@Base+0x86c8>
   1ebac:	b	1ebb4 <main@@Base+0x86cc>
   1ebb0:	b	1ed30 <main@@Base+0x8848>
   1ebb4:	ldr	r0, [sp, #32]
   1ebb8:	ldr	r1, [sp, #36]	; 0x24
   1ebbc:	movw	r2, #29556	; 0x7374
   1ebc0:	movt	r2, #21605	; 0x5465
   1ebc4:	eor	r1, r1, r2
   1ebc8:	movw	r2, #28016	; 0x6d70
   1ebcc:	movt	r2, #21353	; 0x5369
   1ebd0:	eor	r0, r0, r2
   1ebd4:	orr	r0, r0, r1
   1ebd8:	cmp	r0, #0
   1ebdc:	bne	1ed20 <main@@Base+0x8838>
   1ebe0:	b	1ebe4 <main@@Base+0x86fc>
   1ebe4:	ldr	r0, [fp, #-12]
   1ebe8:	add	r0, r0, #8
   1ebec:	str	r0, [fp, #-12]
   1ebf0:	ldr	r0, [fp, #-12]
   1ebf4:	ldr	r1, [fp, #-16]
   1ebf8:	bl	1bc60 <main@@Base+0x5778>
   1ebfc:	str	r1, [sp, #36]	; 0x24
   1ec00:	str	r0, [sp, #32]
   1ec04:	ldr	r0, [sp, #32]
   1ec08:	ldr	r1, [sp, #36]	; 0x24
   1ec0c:	movw	r2, #21601	; 0x5461
   1ec10:	movt	r2, #27749	; 0x6c65
   1ec14:	eor	r1, r1, r2
   1ec18:	movw	r2, #25943	; 0x6557
   1ec1c:	movt	r2, #25196	; 0x626c
   1ec20:	eor	r0, r0, r2
   1ec24:	orr	r0, r0, r1
   1ec28:	cmp	r0, #0
   1ec2c:	bne	1ed10 <main@@Base+0x8828>
   1ec30:	b	1ec34 <main@@Base+0x874c>
   1ec34:	ldr	r0, [fp, #-12]
   1ec38:	add	r0, r0, #8
   1ec3c:	str	r0, [fp, #-12]
   1ec40:	ldr	r0, [fp, #-12]
   1ec44:	ldr	r1, [fp, #-16]
   1ec48:	bl	1bc60 <main@@Base+0x5778>
   1ec4c:	str	r1, [sp, #36]	; 0x24
   1ec50:	str	r0, [sp, #32]
   1ec54:	ldr	r0, [sp, #32]
   1ec58:	ldr	r1, [sp, #36]	; 0x24
   1ec5c:	movw	r2, #29800	; 0x7468
   1ec60:	movt	r2, #105	; 0x69
   1ec64:	eor	r2, r2, r1, lsr #8
   1ec68:	lsr	r0, r0, #8
   1ec6c:	orr	r0, r0, r1, lsl #24
   1ec70:	movw	r1, #30061	; 0x756d
   1ec74:	movt	r1, #17774	; 0x456e
   1ec78:	eor	r0, r0, r1
   1ec7c:	orr	r0, r0, r2
   1ec80:	cmp	r0, #0
   1ec84:	bne	1ed00 <main@@Base+0x8818>
   1ec88:	b	1ec8c <main@@Base+0x87a4>
   1ec8c:	ldr	r0, [fp, #-8]
   1ec90:	ldr	r1, [fp, #-12]
   1ec94:	str	r1, [fp, #-28]	; 0xffffffe4
   1ec98:	ldr	r2, [fp, #-16]
   1ec9c:	ldr	r3, [fp, #12]
   1eca0:	movw	ip, #7
   1eca4:	str	r3, [sp, #4]
   1eca8:	mov	r3, ip
   1ecac:	ldr	ip, [sp, #4]
   1ecb0:	str	ip, [sp]
   1ecb4:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   1ecb8:	str	r0, [fp, #-12]
   1ecbc:	ldr	r0, [fp, #-12]
   1ecc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ecc4:	cmp	r0, r1
   1ecc8:	beq	1ecf0 <main@@Base+0x8808>
   1eccc:	ldr	r0, [fp, #8]
   1ecd0:	mov	r1, #0
   1ecd4:	str	r1, [r0, #4]
   1ecd8:	mov	r1, #2
   1ecdc:	str	r1, [r0]
   1ece0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ece4:	movw	r1, #0
   1ece8:	str	r1, [r0]
   1ecec:	b	1ecfc <main@@Base+0x8814>
   1ecf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecf4:	str	r0, [fp, #-4]
   1ecf8:	b	1ed40 <main@@Base+0x8858>
   1ecfc:	b	1ed0c <main@@Base+0x8824>
   1ed00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed04:	str	r0, [fp, #-4]
   1ed08:	b	1ed40 <main@@Base+0x8858>
   1ed0c:	b	1ed1c <main@@Base+0x8834>
   1ed10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed14:	str	r0, [fp, #-4]
   1ed18:	b	1ed40 <main@@Base+0x8858>
   1ed1c:	b	1ed2c <main@@Base+0x8844>
   1ed20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed24:	str	r0, [fp, #-4]
   1ed28:	b	1ed40 <main@@Base+0x8858>
   1ed2c:	b	1ed30 <main@@Base+0x8848>
   1ed30:	b	1ed34 <main@@Base+0x884c>
   1ed34:	b	1ed38 <main@@Base+0x8850>
   1ed38:	ldr	r0, [fp, #-12]
   1ed3c:	str	r0, [fp, #-4]
   1ed40:	ldr	r0, [fp, #-4]
   1ed44:	mov	sp, fp
   1ed48:	pop	{fp, pc}
   1ed4c:	push	{fp, lr}
   1ed50:	mov	fp, sp
   1ed54:	sub	sp, sp, #32
   1ed58:	str	r0, [fp, #-8]
   1ed5c:	str	r1, [fp, #-12]
   1ed60:	str	r2, [sp, #16]
   1ed64:	str	r3, [sp, #12]
   1ed68:	ldr	r0, [fp, #-12]
   1ed6c:	str	r0, [sp, #8]
   1ed70:	ldr	r0, [sp, #16]
   1ed74:	ldr	r1, [fp, #-12]
   1ed78:	sub	r0, r0, r1
   1ed7c:	cmp	r0, #4
   1ed80:	blt	1edc0 <main@@Base+0x88d8>
   1ed84:	ldr	r0, [fp, #-12]
   1ed88:	ldr	r0, [r0]
   1ed8c:	movw	r1, #29300	; 0x7274
   1ed90:	movt	r1, #25973	; 0x6575
   1ed94:	subs	r0, r0, r1
   1ed98:	movwne	r0, #1
   1ed9c:	cmp	r0, #0
   1eda0:	bne	1edc0 <main@@Base+0x88d8>
   1eda4:	ldr	r0, [sp, #12]
   1eda8:	movw	r1, #1
   1edac:	strb	r1, [r0]
   1edb0:	ldr	r0, [sp, #8]
   1edb4:	add	r0, r0, #4
   1edb8:	str	r0, [fp, #-4]
   1edbc:	b	1ee58 <main@@Base+0x8970>
   1edc0:	ldr	r0, [sp, #16]
   1edc4:	ldr	r1, [fp, #-12]
   1edc8:	sub	r0, r0, r1
   1edcc:	cmp	r0, #5
   1edd0:	blt	1ee0c <main@@Base+0x8924>
   1edd4:	ldr	r0, [fp, #-12]
   1edd8:	ldr	r1, [pc, #132]	; 1ee64 <main@@Base+0x897c>
   1eddc:	add	r1, pc, r1
   1ede0:	mov	r2, #5
   1ede4:	bl	14e3c <memcmp@plt>
   1ede8:	cmp	r0, #0
   1edec:	bne	1ee0c <main@@Base+0x8924>
   1edf0:	ldr	r0, [sp, #12]
   1edf4:	movw	r1, #0
   1edf8:	strb	r1, [r0]
   1edfc:	ldr	r0, [sp, #8]
   1ee00:	add	r0, r0, #5
   1ee04:	str	r0, [fp, #-4]
   1ee08:	b	1ee58 <main@@Base+0x8970>
   1ee0c:	b	1ee10 <main@@Base+0x8928>
   1ee10:	ldr	r0, [fp, #-8]
   1ee14:	ldr	r1, [fp, #-12]
   1ee18:	ldr	r2, [sp, #16]
   1ee1c:	add	r3, sp, #7
   1ee20:	bl	1d518 <main@@Base+0x7030>
   1ee24:	str	r0, [fp, #-12]
   1ee28:	ldrsb	r0, [sp, #7]
   1ee2c:	cmp	r0, #0
   1ee30:	movw	r0, #0
   1ee34:	movne	r0, #1
   1ee38:	mvn	r1, #0
   1ee3c:	eor	r0, r0, r1
   1ee40:	eor	r0, r0, r1
   1ee44:	and	r0, r0, #1
   1ee48:	ldr	r1, [sp, #12]
   1ee4c:	strb	r0, [r1]
   1ee50:	ldr	r0, [fp, #-12]
   1ee54:	str	r0, [fp, #-4]
   1ee58:	ldr	r0, [fp, #-4]
   1ee5c:	mov	sp, fp
   1ee60:	pop	{fp, pc}
   1ee64:	andeq	sl, r2, r4, asr #3
   1ee68:	push	{r4, r5, r6, sl, fp, lr}
   1ee6c:	add	fp, sp, #16
   1ee70:	sub	sp, sp, #80	; 0x50
   1ee74:	ldr	ip, [fp, #8]
   1ee78:	str	r0, [fp, #-24]	; 0xffffffe8
   1ee7c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ee80:	str	r2, [fp, #-32]	; 0xffffffe0
   1ee84:	str	r3, [fp, #-36]	; 0xffffffdc
   1ee88:	movw	r0, #0
   1ee8c:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ee90:	ldr	r1, [fp, #8]
   1ee94:	strb	r0, [r1]
   1ee98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eea0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1eea4:	str	ip, [sp, #28]
   1eea8:	bl	22358 <main@@Base+0xbe70>
   1eeac:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eeb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1eeb8:	cmp	r0, r1
   1eebc:	bne	1eecc <main@@Base+0x89e4>
   1eec0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eec4:	str	r0, [fp, #-20]	; 0xffffffec
   1eec8:	b	1f040 <main@@Base+0x8b58>
   1eecc:	b	1eed0 <main@@Base+0x89e8>
   1eed0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1eed4:	str	r0, [fp, #-40]	; 0xffffffd8
   1eed8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eedc:	ldr	r0, [r0]
   1eee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eee4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eee8:	str	r2, [fp, #-44]	; 0xffffffd4
   1eeec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eef0:	str	r0, [sp, #24]
   1eef4:	mov	r0, r1
   1eef8:	mov	r1, r2
   1eefc:	mov	r2, r3
   1ef00:	add	r3, sp, #36	; 0x24
   1ef04:	add	ip, sp, #40	; 0x28
   1ef08:	str	ip, [sp]
   1ef0c:	add	ip, sp, #32
   1ef10:	str	ip, [sp, #4]
   1ef14:	ldr	ip, [sp, #24]
   1ef18:	blx	ip
   1ef1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ef20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ef24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ef28:	cmp	r0, r1
   1ef2c:	bne	1ef3c <main@@Base+0x8a54>
   1ef30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ef34:	str	r0, [fp, #-20]	; 0xffffffec
   1ef38:	b	1f040 <main@@Base+0x8b58>
   1ef3c:	b	1ef40 <main@@Base+0x8a58>
   1ef40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ef44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ef48:	cmp	r0, r1
   1ef4c:	movw	r0, #0
   1ef50:	str	r0, [sp, #20]
   1ef54:	bne	1ef7c <main@@Base+0x8a94>
   1ef58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ef5c:	add	r1, r0, #4
   1ef60:	str	r1, [fp, #-40]	; 0xffffffd8
   1ef64:	ldr	r0, [r0, #4]
   1ef68:	movw	r1, #0
   1ef6c:	cmp	r0, r1
   1ef70:	movw	r0, #0
   1ef74:	movne	r0, #1
   1ef78:	str	r0, [sp, #20]
   1ef7c:	ldr	r0, [sp, #20]
   1ef80:	tst	r0, #1
   1ef84:	bne	1eed8 <main@@Base+0x89f0>
   1ef88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ef8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ef90:	cmp	r0, r1
   1ef94:	bne	1efb4 <main@@Base+0x8acc>
   1ef98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1efa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1efa4:	movw	r3, #23
   1efa8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1efac:	str	r0, [fp, #-20]	; 0xffffffec
   1efb0:	b	1f040 <main@@Base+0x8b58>
   1efb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1efb8:	mov	r1, r0
   1efbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1efc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1efc4:	ldr	ip, [sp, #36]	; 0x24
   1efc8:	ldr	lr, [sp, #40]	; 0x28
   1efcc:	ldr	r4, [sp, #44]	; 0x2c
   1efd0:	mov	r5, sp
   1efd4:	sub	r6, fp, #45	; 0x2d
   1efd8:	str	r6, [r5, #8]
   1efdc:	str	r4, [r5, #4]
   1efe0:	str	lr, [r5]
   1efe4:	str	r0, [sp, #16]
   1efe8:	mov	r0, r2
   1efec:	str	r1, [sp, #12]
   1eff0:	mov	r1, r3
   1eff4:	ldr	r2, [sp, #16]
   1eff8:	mov	r3, ip
   1effc:	bl	26a3c <main@@Base+0x10554>
   1f000:	ldr	r1, [sp, #12]
   1f004:	cmp	r1, r0
   1f008:	bne	1f018 <main@@Base+0x8b30>
   1f00c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f010:	str	r0, [fp, #-20]	; 0xffffffec
   1f014:	b	1f040 <main@@Base+0x8b58>
   1f018:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1f01c:	ldr	r1, [fp, #8]
   1f020:	ldrb	r2, [r1]
   1f024:	add	r0, r2, r0
   1f028:	strb	r0, [r1]
   1f02c:	ldr	r0, [sp, #32]
   1f030:	cmp	r0, #0
   1f034:	bne	1eed0 <main@@Base+0x89e8>
   1f038:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f03c:	str	r0, [fp, #-20]	; 0xffffffec
   1f040:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f044:	sub	sp, fp, #16
   1f048:	pop	{r4, r5, r6, sl, fp, pc}
   1f04c:	push	{fp, lr}
   1f050:	mov	fp, sp
   1f054:	sub	sp, sp, #8
   1f058:	str	r0, [sp, #4]
   1f05c:	strb	r1, [sp, #3]
   1f060:	ldrb	r0, [sp, #3]
   1f064:	bl	26ad4 <main@@Base+0x105ec>
   1f068:	ldr	r1, [sp, #4]
   1f06c:	strb	r0, [r1]
   1f070:	mov	sp, fp
   1f074:	pop	{fp, pc}
   1f078:	push	{fp, lr}
   1f07c:	mov	fp, sp
   1f080:	sub	sp, sp, #64	; 0x40
   1f084:	str	r0, [fp, #-8]
   1f088:	str	r1, [fp, #-12]
   1f08c:	str	r2, [fp, #-16]
   1f090:	str	r3, [fp, #-20]	; 0xffffffec
   1f094:	ldr	r0, [fp, #-8]
   1f098:	ldr	r1, [fp, #-12]
   1f09c:	ldr	r2, [fp, #-16]
   1f0a0:	sub	r3, fp, #24
   1f0a4:	bl	1baf8 <main@@Base+0x5610>
   1f0a8:	str	r0, [fp, #-12]
   1f0ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f0b0:	cmp	r0, #0
   1f0b4:	beq	1f324 <main@@Base+0x8e3c>
   1f0b8:	ldr	r0, [fp, #-8]
   1f0bc:	ldr	r1, [fp, #-12]
   1f0c0:	ldr	r2, [fp, #-16]
   1f0c4:	bl	1bbdc <main@@Base+0x56f4>
   1f0c8:	str	r0, [fp, #-12]
   1f0cc:	ldr	r0, [fp, #-12]
   1f0d0:	ldr	r1, [fp, #-16]
   1f0d4:	bl	1bc60 <main@@Base+0x5778>
   1f0d8:	str	r1, [sp, #20]
   1f0dc:	str	r0, [sp, #16]
   1f0e0:	ldrh	r0, [sp, #22]
   1f0e4:	movw	r1, #0
   1f0e8:	movt	r1, #26980	; 0x6964
   1f0ec:	teq	r1, r0, lsl #16
   1f0f0:	bne	1f1dc <main@@Base+0x8cf4>
   1f0f4:	b	1f0f8 <main@@Base+0x8c10>
   1f0f8:	ldr	r0, [fp, #-8]
   1f0fc:	ldr	r1, [fp, #-12]
   1f100:	str	r1, [sp, #28]
   1f104:	ldr	r2, [fp, #-16]
   1f108:	movw	r3, #2
   1f10c:	bl	1bc98 <main@@Base+0x57b0>
   1f110:	str	r0, [fp, #-12]
   1f114:	ldr	r0, [sp, #28]
   1f118:	ldr	r1, [fp, #-12]
   1f11c:	cmp	r0, r1
   1f120:	beq	1f1c4 <main@@Base+0x8cdc>
   1f124:	movw	r0, #0
   1f128:	str	r0, [sp, #12]
   1f12c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f130:	add	r0, r0, #0
   1f134:	str	r0, [sp, #32]
   1f138:	ldr	r0, [fp, #-8]
   1f13c:	ldr	r1, [fp, #-12]
   1f140:	str	r1, [sp, #28]
   1f144:	ldr	r2, [fp, #-16]
   1f148:	add	r3, sp, #12
   1f14c:	bl	20400 <main@@Base+0x9f18>
   1f150:	str	r0, [fp, #-12]
   1f154:	ldr	r0, [sp, #28]
   1f158:	ldr	r1, [fp, #-12]
   1f15c:	cmp	r0, r1
   1f160:	bne	1f1b4 <main@@Base+0x8ccc>
   1f164:	ldr	r0, [pc, #492]	; 1f358 <main@@Base+0x8e70>
   1f168:	add	r3, pc, r0
   1f16c:	ldr	r0, [fp, #-8]
   1f170:	ldr	r1, [fp, #-12]
   1f174:	str	r1, [sp, #28]
   1f178:	ldr	r2, [fp, #-16]
   1f17c:	add	ip, sp, #12
   1f180:	str	ip, [sp]
   1f184:	bl	204d8 <main@@Base+0x9ff0>
   1f188:	str	r0, [fp, #-12]
   1f18c:	ldr	r0, [fp, #-12]
   1f190:	ldr	r1, [sp, #28]
   1f194:	cmp	r0, r1
   1f198:	beq	1f1ac <main@@Base+0x8cc4>
   1f19c:	ldr	r0, [fp, #-12]
   1f1a0:	ldr	r1, [fp, #-16]
   1f1a4:	cmp	r0, r1
   1f1a8:	bne	1f1b0 <main@@Base+0x8cc8>
   1f1ac:	b	1f330 <main@@Base+0x8e48>
   1f1b0:	b	1f1b4 <main@@Base+0x8ccc>
   1f1b4:	ldr	r0, [sp, #32]
   1f1b8:	ldr	r1, [sp, #12]
   1f1bc:	bl	206bc <main@@Base+0xa1d4>
   1f1c0:	b	1f1d8 <main@@Base+0x8cf0>
   1f1c4:	ldr	r0, [fp, #-8]
   1f1c8:	ldr	r1, [fp, #-12]
   1f1cc:	ldr	r2, [fp, #-16]
   1f1d0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f1d4:	str	r0, [fp, #-12]
   1f1d8:	b	1f308 <main@@Base+0x8e20>
   1f1dc:	ldr	r0, [sp, #16]
   1f1e0:	ldr	r1, [sp, #20]
   1f1e4:	movw	r2, #29556	; 0x7374
   1f1e8:	movt	r2, #25705	; 0x6469
   1f1ec:	eor	r1, r1, r2
   1f1f0:	movw	r2, #25445	; 0x6365
   1f1f4:	movt	r2, #24942	; 0x616e
   1f1f8:	eor	r0, r0, r2
   1f1fc:	orr	r0, r0, r1
   1f200:	cmp	r0, #0
   1f204:	bne	1f2f0 <main@@Base+0x8e08>
   1f208:	b	1f20c <main@@Base+0x8d24>
   1f20c:	ldr	r0, [fp, #-8]
   1f210:	ldr	r1, [fp, #-12]
   1f214:	str	r1, [sp, #28]
   1f218:	ldr	r2, [fp, #-16]
   1f21c:	movw	r3, #8
   1f220:	bl	1bc98 <main@@Base+0x57b0>
   1f224:	str	r0, [fp, #-12]
   1f228:	ldr	r0, [sp, #28]
   1f22c:	ldr	r1, [fp, #-12]
   1f230:	cmp	r0, r1
   1f234:	beq	1f2d8 <main@@Base+0x8df0>
   1f238:	movw	r0, #0
   1f23c:	str	r0, [sp, #8]
   1f240:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f244:	add	r0, r0, #4
   1f248:	str	r0, [sp, #32]
   1f24c:	ldr	r0, [fp, #-8]
   1f250:	ldr	r1, [fp, #-12]
   1f254:	str	r1, [sp, #28]
   1f258:	ldr	r2, [fp, #-16]
   1f25c:	add	r3, sp, #8
   1f260:	bl	20400 <main@@Base+0x9f18>
   1f264:	str	r0, [fp, #-12]
   1f268:	ldr	r0, [sp, #28]
   1f26c:	ldr	r1, [fp, #-12]
   1f270:	cmp	r0, r1
   1f274:	bne	1f2c8 <main@@Base+0x8de0>
   1f278:	ldr	r0, [pc, #212]	; 1f354 <main@@Base+0x8e6c>
   1f27c:	add	r3, pc, r0
   1f280:	ldr	r0, [fp, #-8]
   1f284:	ldr	r1, [fp, #-12]
   1f288:	str	r1, [sp, #28]
   1f28c:	ldr	r2, [fp, #-16]
   1f290:	add	ip, sp, #8
   1f294:	str	ip, [sp]
   1f298:	bl	204d8 <main@@Base+0x9ff0>
   1f29c:	str	r0, [fp, #-12]
   1f2a0:	ldr	r0, [fp, #-12]
   1f2a4:	ldr	r1, [sp, #28]
   1f2a8:	cmp	r0, r1
   1f2ac:	beq	1f2c0 <main@@Base+0x8dd8>
   1f2b0:	ldr	r0, [fp, #-12]
   1f2b4:	ldr	r1, [fp, #-16]
   1f2b8:	cmp	r0, r1
   1f2bc:	bne	1f2c4 <main@@Base+0x8ddc>
   1f2c0:	b	1f330 <main@@Base+0x8e48>
   1f2c4:	b	1f2c8 <main@@Base+0x8de0>
   1f2c8:	ldr	r0, [sp, #32]
   1f2cc:	ldr	r1, [sp, #8]
   1f2d0:	bl	206bc <main@@Base+0xa1d4>
   1f2d4:	b	1f2ec <main@@Base+0x8e04>
   1f2d8:	ldr	r0, [fp, #-8]
   1f2dc:	ldr	r1, [fp, #-12]
   1f2e0:	ldr	r2, [fp, #-16]
   1f2e4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f2e8:	str	r0, [fp, #-12]
   1f2ec:	b	1f304 <main@@Base+0x8e1c>
   1f2f0:	ldr	r0, [fp, #-8]
   1f2f4:	ldr	r1, [fp, #-12]
   1f2f8:	ldr	r2, [fp, #-16]
   1f2fc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f300:	str	r0, [fp, #-12]
   1f304:	b	1f308 <main@@Base+0x8e20>
   1f308:	ldr	r0, [fp, #-8]
   1f30c:	ldr	r1, [fp, #-12]
   1f310:	ldr	r2, [fp, #-16]
   1f314:	sub	r3, fp, #24
   1f318:	bl	20c14 <main@@Base+0xa72c>
   1f31c:	str	r0, [fp, #-12]
   1f320:	b	1f0ac <main@@Base+0x8bc4>
   1f324:	ldr	r0, [fp, #-12]
   1f328:	str	r0, [fp, #-4]
   1f32c:	b	1f348 <main@@Base+0x8e60>
   1f330:	ldr	r0, [fp, #-8]
   1f334:	ldr	r1, [fp, #-12]
   1f338:	ldr	r2, [fp, #-16]
   1f33c:	movw	r3, #33	; 0x21
   1f340:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1f344:	str	r0, [fp, #-4]
   1f348:	ldr	r0, [fp, #-4]
   1f34c:	mov	sp, fp
   1f350:	pop	{fp, pc}
   1f354:	andeq	lr, r3, ip, lsr #1
   1f358:			; <UNDEFINED> instruction: 0x0003e1b4
   1f35c:	push	{fp, lr}
   1f360:	mov	fp, sp
   1f364:	sub	sp, sp, #56	; 0x38
   1f368:	str	r0, [fp, #-8]
   1f36c:	str	r1, [fp, #-12]
   1f370:	str	r2, [fp, #-16]
   1f374:	str	r3, [fp, #-20]	; 0xffffffec
   1f378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f37c:	movw	r1, #0
   1f380:	str	r1, [r0]
   1f384:	ldr	r0, [fp, #-8]
   1f388:	ldr	r0, [r0]
   1f38c:	movw	r1, #3
   1f390:	bl	2b898 <flatcc_builder_start_table@@Base>
   1f394:	cmp	r0, #0
   1f398:	beq	1f3a0 <main@@Base+0x8eb8>
   1f39c:	b	1f710 <main@@Base+0x9228>
   1f3a0:	ldr	r0, [fp, #-8]
   1f3a4:	ldr	r1, [fp, #-12]
   1f3a8:	ldr	r2, [fp, #-16]
   1f3ac:	sub	r3, fp, #24
   1f3b0:	bl	1baf8 <main@@Base+0x5610>
   1f3b4:	str	r0, [fp, #-12]
   1f3b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f3bc:	cmp	r0, #0
   1f3c0:	beq	1f6d0 <main@@Base+0x91e8>
   1f3c4:	ldr	r0, [fp, #-8]
   1f3c8:	ldr	r1, [fp, #-12]
   1f3cc:	ldr	r2, [fp, #-16]
   1f3d0:	bl	1bbdc <main@@Base+0x56f4>
   1f3d4:	str	r0, [fp, #-12]
   1f3d8:	ldr	r0, [fp, #-12]
   1f3dc:	ldr	r1, [fp, #-16]
   1f3e0:	bl	1bc60 <main@@Base+0x5778>
   1f3e4:	str	r1, [sp, #12]
   1f3e8:	str	r0, [sp, #8]
   1f3ec:	ldr	r0, [sp, #8]
   1f3f0:	ldr	r1, [sp, #12]
   1f3f4:	movw	r2, #65535	; 0xffff
   1f3f8:	movt	r2, #25955	; 0x6563
   1f3fc:	subs	r0, r2, r0
   1f400:	movw	r2, #29556	; 0x7374
   1f404:	movt	r2, #28261	; 0x6e65
   1f408:	sbcs	r1, r2, r1
   1f40c:	bcc	1f4e8 <main@@Base+0x9000>
   1f410:	b	1f414 <main@@Base+0x8f2c>
   1f414:	ldr	r0, [sp, #12]
   1f418:	movw	r1, #29793	; 0x7461
   1f41c:	movt	r1, #25697	; 0x6461
   1f420:	teq	r0, r1
   1f424:	bne	1f4d0 <main@@Base+0x8fe8>
   1f428:	b	1f42c <main@@Base+0x8f44>
   1f42c:	ldr	r0, [fp, #-8]
   1f430:	ldr	r1, [fp, #-12]
   1f434:	str	r1, [sp, #16]
   1f438:	ldr	r2, [fp, #-16]
   1f43c:	movw	r3, #4
   1f440:	bl	1bc98 <main@@Base+0x57b0>
   1f444:	str	r0, [fp, #-12]
   1f448:	ldr	r0, [sp, #16]
   1f44c:	ldr	r1, [fp, #-12]
   1f450:	cmp	r0, r1
   1f454:	beq	1f4b8 <main@@Base+0x8fd0>
   1f458:	ldr	r0, [fp, #-8]
   1f45c:	ldr	r1, [fp, #-12]
   1f460:	ldr	r2, [fp, #-16]
   1f464:	add	r3, sp, #24
   1f468:	movw	ip, #0
   1f46c:	str	ip, [sp]
   1f470:	bl	359bc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f474:	str	r0, [fp, #-12]
   1f478:	ldr	r0, [sp, #24]
   1f47c:	cmp	r0, #0
   1f480:	beq	1f4a4 <main@@Base+0x8fbc>
   1f484:	ldr	r0, [fp, #-8]
   1f488:	ldr	r0, [r0]
   1f48c:	movw	r1, #0
   1f490:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1f494:	str	r0, [sp, #20]
   1f498:	movw	r1, #0
   1f49c:	cmp	r0, r1
   1f4a0:	bne	1f4a8 <main@@Base+0x8fc0>
   1f4a4:	b	1f710 <main@@Base+0x9228>
   1f4a8:	ldr	r0, [sp, #24]
   1f4ac:	ldr	r1, [sp, #20]
   1f4b0:	str	r0, [r1]
   1f4b4:	b	1f4cc <main@@Base+0x8fe4>
   1f4b8:	ldr	r0, [fp, #-8]
   1f4bc:	ldr	r1, [fp, #-12]
   1f4c0:	ldr	r2, [fp, #-16]
   1f4c4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f4c8:	str	r0, [fp, #-12]
   1f4cc:	b	1f4e4 <main@@Base+0x8ffc>
   1f4d0:	ldr	r0, [fp, #-8]
   1f4d4:	ldr	r1, [fp, #-12]
   1f4d8:	ldr	r2, [fp, #-16]
   1f4dc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f4e0:	str	r0, [fp, #-12]
   1f4e4:	b	1f6b4 <main@@Base+0x91cc>
   1f4e8:	ldr	r0, [sp, #8]
   1f4ec:	ldr	r1, [sp, #12]
   1f4f0:	movw	r2, #29292	; 0x726c
   1f4f4:	movt	r2, #117	; 0x75
   1f4f8:	eor	r2, r2, r1, lsr #8
   1f4fc:	lsr	r0, r0, #8
   1f500:	orr	r0, r0, r1, lsl #24
   1f504:	movw	r1, #29793	; 0x7461
   1f508:	movt	r1, #25697	; 0x6461
   1f50c:	eor	r0, r0, r1
   1f510:	orr	r0, r0, r2
   1f514:	cmp	r0, #0
   1f518:	bne	1f5c4 <main@@Base+0x90dc>
   1f51c:	b	1f520 <main@@Base+0x9038>
   1f520:	ldr	r0, [fp, #-8]
   1f524:	ldr	r1, [fp, #-12]
   1f528:	str	r1, [sp, #16]
   1f52c:	ldr	r2, [fp, #-16]
   1f530:	movw	r3, #7
   1f534:	bl	1bc98 <main@@Base+0x57b0>
   1f538:	str	r0, [fp, #-12]
   1f53c:	ldr	r0, [sp, #16]
   1f540:	ldr	r1, [fp, #-12]
   1f544:	cmp	r0, r1
   1f548:	beq	1f5ac <main@@Base+0x90c4>
   1f54c:	ldr	r0, [fp, #-8]
   1f550:	ldr	r1, [fp, #-12]
   1f554:	ldr	r2, [fp, #-16]
   1f558:	add	r3, sp, #24
   1f55c:	movw	ip, #1
   1f560:	str	ip, [sp]
   1f564:	bl	359bc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f568:	str	r0, [fp, #-12]
   1f56c:	ldr	r0, [sp, #24]
   1f570:	cmp	r0, #0
   1f574:	beq	1f598 <main@@Base+0x90b0>
   1f578:	ldr	r0, [fp, #-8]
   1f57c:	ldr	r0, [r0]
   1f580:	movw	r1, #1
   1f584:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1f588:	str	r0, [sp, #20]
   1f58c:	movw	r1, #0
   1f590:	cmp	r0, r1
   1f594:	bne	1f59c <main@@Base+0x90b4>
   1f598:	b	1f710 <main@@Base+0x9228>
   1f59c:	ldr	r0, [sp, #24]
   1f5a0:	ldr	r1, [sp, #20]
   1f5a4:	str	r0, [r1]
   1f5a8:	b	1f5c0 <main@@Base+0x90d8>
   1f5ac:	ldr	r0, [fp, #-8]
   1f5b0:	ldr	r1, [fp, #-12]
   1f5b4:	ldr	r2, [fp, #-16]
   1f5b8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f5bc:	str	r0, [fp, #-12]
   1f5c0:	b	1f6b0 <main@@Base+0x91c8>
   1f5c4:	ldrh	r0, [sp, #10]
   1f5c8:	ldr	r1, [sp, #12]
   1f5cc:	movw	r2, #28261	; 0x6e65
   1f5d0:	eor	r2, r2, r1, lsr #16
   1f5d4:	orr	r0, r0, r1, lsl #16
   1f5d8:	movw	r1, #25956	; 0x6564
   1f5dc:	movt	r1, #29556	; 0x7374
   1f5e0:	eor	r0, r0, r1
   1f5e4:	orr	r0, r0, r2
   1f5e8:	cmp	r0, #0
   1f5ec:	bne	1f698 <main@@Base+0x91b0>
   1f5f0:	b	1f5f4 <main@@Base+0x910c>
   1f5f4:	ldr	r0, [fp, #-8]
   1f5f8:	ldr	r1, [fp, #-12]
   1f5fc:	str	r1, [sp, #16]
   1f600:	ldr	r2, [fp, #-16]
   1f604:	movw	r3, #6
   1f608:	bl	1bc98 <main@@Base+0x57b0>
   1f60c:	str	r0, [fp, #-12]
   1f610:	ldr	r0, [sp, #16]
   1f614:	ldr	r1, [fp, #-12]
   1f618:	cmp	r0, r1
   1f61c:	beq	1f680 <main@@Base+0x9198>
   1f620:	ldr	r0, [fp, #-8]
   1f624:	ldr	r1, [fp, #-12]
   1f628:	ldr	r2, [fp, #-16]
   1f62c:	add	r3, sp, #24
   1f630:	movw	ip, #0
   1f634:	str	ip, [sp]
   1f638:	bl	359bc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f63c:	str	r0, [fp, #-12]
   1f640:	ldr	r0, [sp, #24]
   1f644:	cmp	r0, #0
   1f648:	beq	1f66c <main@@Base+0x9184>
   1f64c:	ldr	r0, [fp, #-8]
   1f650:	ldr	r0, [r0]
   1f654:	movw	r1, #2
   1f658:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1f65c:	str	r0, [sp, #20]
   1f660:	movw	r1, #0
   1f664:	cmp	r0, r1
   1f668:	bne	1f670 <main@@Base+0x9188>
   1f66c:	b	1f710 <main@@Base+0x9228>
   1f670:	ldr	r0, [sp, #24]
   1f674:	ldr	r1, [sp, #20]
   1f678:	str	r0, [r1]
   1f67c:	b	1f694 <main@@Base+0x91ac>
   1f680:	ldr	r0, [fp, #-8]
   1f684:	ldr	r1, [fp, #-12]
   1f688:	ldr	r2, [fp, #-16]
   1f68c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f690:	str	r0, [fp, #-12]
   1f694:	b	1f6ac <main@@Base+0x91c4>
   1f698:	ldr	r0, [fp, #-8]
   1f69c:	ldr	r1, [fp, #-12]
   1f6a0:	ldr	r2, [fp, #-16]
   1f6a4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f6a8:	str	r0, [fp, #-12]
   1f6ac:	b	1f6b0 <main@@Base+0x91c8>
   1f6b0:	b	1f6b4 <main@@Base+0x91cc>
   1f6b4:	ldr	r0, [fp, #-8]
   1f6b8:	ldr	r1, [fp, #-12]
   1f6bc:	ldr	r2, [fp, #-16]
   1f6c0:	sub	r3, fp, #24
   1f6c4:	bl	20c14 <main@@Base+0xa72c>
   1f6c8:	str	r0, [fp, #-12]
   1f6cc:	b	1f3b8 <main@@Base+0x8ed0>
   1f6d0:	ldr	r0, [fp, #-8]
   1f6d4:	ldr	r0, [r0, #20]
   1f6d8:	cmp	r0, #0
   1f6dc:	beq	1f6e4 <main@@Base+0x91fc>
   1f6e0:	b	1f710 <main@@Base+0x9228>
   1f6e4:	ldr	r0, [fp, #-8]
   1f6e8:	ldr	r0, [r0]
   1f6ec:	bl	2c500 <flatcc_builder_end_table@@Base>
   1f6f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f6f4:	str	r0, [r1]
   1f6f8:	cmp	r0, #0
   1f6fc:	bne	1f704 <main@@Base+0x921c>
   1f700:	b	1f710 <main@@Base+0x9228>
   1f704:	ldr	r0, [fp, #-12]
   1f708:	str	r0, [fp, #-4]
   1f70c:	b	1f728 <main@@Base+0x9240>
   1f710:	ldr	r0, [fp, #-8]
   1f714:	ldr	r1, [fp, #-12]
   1f718:	ldr	r2, [fp, #-16]
   1f71c:	movw	r3, #33	; 0x21
   1f720:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1f724:	str	r0, [fp, #-4]
   1f728:	ldr	r0, [fp, #-4]
   1f72c:	mov	sp, fp
   1f730:	pop	{fp, pc}
   1f734:	push	{fp, lr}
   1f738:	mov	fp, sp
   1f73c:	sub	sp, sp, #72	; 0x48
   1f740:	str	r0, [fp, #-8]
   1f744:	str	r1, [fp, #-12]
   1f748:	str	r2, [fp, #-16]
   1f74c:	str	r3, [fp, #-20]	; 0xffffffec
   1f750:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f754:	movw	r1, #0
   1f758:	str	r1, [r0]
   1f75c:	ldr	r0, [fp, #-8]
   1f760:	ldr	r0, [r0]
   1f764:	movw	r1, #3
   1f768:	bl	2b898 <flatcc_builder_start_table@@Base>
   1f76c:	cmp	r0, #0
   1f770:	beq	1f778 <main@@Base+0x9290>
   1f774:	b	1fbcc <main@@Base+0x96e4>
   1f778:	ldr	r0, [fp, #-8]
   1f77c:	ldr	r1, [fp, #-12]
   1f780:	ldr	r2, [fp, #-16]
   1f784:	sub	r3, fp, #24
   1f788:	bl	1baf8 <main@@Base+0x5610>
   1f78c:	str	r0, [fp, #-12]
   1f790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f794:	cmp	r0, #0
   1f798:	beq	1fb8c <main@@Base+0x96a4>
   1f79c:	ldr	r0, [fp, #-8]
   1f7a0:	ldr	r1, [fp, #-12]
   1f7a4:	ldr	r2, [fp, #-16]
   1f7a8:	bl	1bbdc <main@@Base+0x56f4>
   1f7ac:	str	r0, [fp, #-12]
   1f7b0:	ldr	r0, [fp, #-12]
   1f7b4:	ldr	r1, [fp, #-16]
   1f7b8:	bl	1bc60 <main@@Base+0x5778>
   1f7bc:	str	r1, [sp, #28]
   1f7c0:	str	r0, [sp, #24]
   1f7c4:	ldr	r0, [sp, #28]
   1f7c8:	movw	r1, #65535	; 0xffff
   1f7cc:	movt	r1, #26979	; 0x6963
   1f7d0:	cmp	r0, r1
   1f7d4:	bhi	1f948 <main@@Base+0x9460>
   1f7d8:	b	1f7dc <main@@Base+0x92f4>
   1f7dc:	ldrb	r0, [sp, #27]
   1f7e0:	ldr	r1, [sp, #28]
   1f7e4:	movw	r2, #30062	; 0x756e
   1f7e8:	movt	r2, #25455	; 0x636f
   1f7ec:	eor	r1, r1, r2
   1f7f0:	eor	r0, r0, #116	; 0x74
   1f7f4:	orr	r0, r1, r0, lsl #24
   1f7f8:	cmp	r0, #0
   1f7fc:	bne	1f930 <main@@Base+0x9448>
   1f800:	b	1f804 <main@@Base+0x931c>
   1f804:	ldr	r0, [fp, #-8]
   1f808:	ldr	r1, [fp, #-12]
   1f80c:	str	r1, [sp, #32]
   1f810:	ldr	r2, [fp, #-16]
   1f814:	movw	r3, #5
   1f818:	bl	1bc98 <main@@Base+0x57b0>
   1f81c:	str	r0, [fp, #-12]
   1f820:	ldr	r0, [sp, #32]
   1f824:	ldr	r1, [fp, #-12]
   1f828:	cmp	r0, r1
   1f82c:	beq	1f918 <main@@Base+0x9430>
   1f830:	movw	r0, #0
   1f834:	strh	r0, [sp, #22]
   1f838:	ldr	r0, [fp, #-8]
   1f83c:	ldr	r1, [fp, #-12]
   1f840:	str	r1, [sp, #32]
   1f844:	ldr	r2, [fp, #-16]
   1f848:	add	r3, sp, #22
   1f84c:	bl	26460 <main@@Base+0xff78>
   1f850:	str	r0, [fp, #-12]
   1f854:	ldr	r0, [sp, #32]
   1f858:	ldr	r1, [fp, #-12]
   1f85c:	cmp	r0, r1
   1f860:	bne	1f8b4 <main@@Base+0x93cc>
   1f864:	ldr	r0, [pc, #904]	; 1fbf4 <main@@Base+0x970c>
   1f868:	add	r3, pc, r0
   1f86c:	ldr	r0, [fp, #-8]
   1f870:	ldr	r1, [fp, #-12]
   1f874:	str	r1, [sp, #32]
   1f878:	ldr	r2, [fp, #-16]
   1f87c:	add	ip, sp, #22
   1f880:	str	ip, [sp]
   1f884:	bl	2653c <main@@Base+0x10054>
   1f888:	str	r0, [fp, #-12]
   1f88c:	ldr	r0, [fp, #-12]
   1f890:	ldr	r1, [sp, #32]
   1f894:	cmp	r0, r1
   1f898:	beq	1f8ac <main@@Base+0x93c4>
   1f89c:	ldr	r0, [fp, #-12]
   1f8a0:	ldr	r1, [fp, #-16]
   1f8a4:	cmp	r0, r1
   1f8a8:	bne	1f8b0 <main@@Base+0x93c8>
   1f8ac:	b	1fbcc <main@@Base+0x96e4>
   1f8b0:	b	1f8b4 <main@@Base+0x93cc>
   1f8b4:	ldrh	r0, [sp, #22]
   1f8b8:	cmp	r0, #0
   1f8bc:	bne	1f8d4 <main@@Base+0x93ec>
   1f8c0:	ldr	r0, [fp, #-8]
   1f8c4:	ldr	r0, [r0, #8]
   1f8c8:	and	r0, r0, #2
   1f8cc:	cmp	r0, #0
   1f8d0:	beq	1f914 <main@@Base+0x942c>
   1f8d4:	ldr	r0, [fp, #-8]
   1f8d8:	ldr	r0, [r0]
   1f8dc:	movw	r1, #2
   1f8e0:	str	r1, [sp, #4]
   1f8e4:	ldr	r2, [sp, #4]
   1f8e8:	movw	r3, #2
   1f8ec:	uxth	r3, r3
   1f8f0:	bl	2d13c <flatcc_builder_table_add@@Base>
   1f8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1f8f8:	movw	r1, #0
   1f8fc:	cmp	r0, r1
   1f900:	bne	1f908 <main@@Base+0x9420>
   1f904:	b	1fbcc <main@@Base+0x96e4>
   1f908:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f90c:	ldrh	r1, [sp, #22]
   1f910:	bl	26720 <main@@Base+0x10238>
   1f914:	b	1f92c <main@@Base+0x9444>
   1f918:	ldr	r0, [fp, #-8]
   1f91c:	ldr	r1, [fp, #-12]
   1f920:	ldr	r2, [fp, #-16]
   1f924:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f928:	str	r0, [fp, #-12]
   1f92c:	b	1f944 <main@@Base+0x945c>
   1f930:	ldr	r0, [fp, #-8]
   1f934:	ldr	r1, [fp, #-12]
   1f938:	ldr	r2, [fp, #-16]
   1f93c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1f940:	str	r0, [fp, #-12]
   1f944:	b	1fb70 <main@@Base+0x9688>
   1f948:	ldr	r0, [sp, #28]
   1f94c:	bic	r0, r0, #255	; 0xff
   1f950:	movw	r1, #27648	; 0x6c00
   1f954:	movt	r1, #30305	; 0x7661
   1f958:	teq	r0, r1
   1f95c:	bne	1faa0 <main@@Base+0x95b8>
   1f960:	b	1f964 <main@@Base+0x947c>
   1f964:	ldr	r0, [fp, #-8]
   1f968:	ldr	r1, [fp, #-12]
   1f96c:	str	r1, [sp, #32]
   1f970:	ldr	r2, [fp, #-16]
   1f974:	movw	r3, #3
   1f978:	bl	1bc98 <main@@Base+0x57b0>
   1f97c:	str	r0, [fp, #-12]
   1f980:	ldr	r0, [sp, #32]
   1f984:	ldr	r1, [fp, #-12]
   1f988:	cmp	r0, r1
   1f98c:	beq	1fa88 <main@@Base+0x95a0>
   1f990:	mov	r0, #0
   1f994:	str	r0, [sp, #12]
   1f998:	str	r0, [sp, #8]
   1f99c:	ldr	r0, [fp, #-8]
   1f9a0:	ldr	r1, [fp, #-12]
   1f9a4:	str	r1, [sp, #32]
   1f9a8:	ldr	r2, [fp, #-16]
   1f9ac:	add	r3, sp, #8
   1f9b0:	bl	200f4 <main@@Base+0x9c0c>
   1f9b4:	str	r0, [fp, #-12]
   1f9b8:	ldr	r0, [sp, #32]
   1f9bc:	ldr	r1, [fp, #-12]
   1f9c0:	cmp	r0, r1
   1f9c4:	bne	1fa18 <main@@Base+0x9530>
   1f9c8:	ldr	r0, [pc, #544]	; 1fbf0 <main@@Base+0x9708>
   1f9cc:	add	r3, pc, r0
   1f9d0:	ldr	r0, [fp, #-8]
   1f9d4:	ldr	r1, [fp, #-12]
   1f9d8:	str	r1, [sp, #32]
   1f9dc:	ldr	r2, [fp, #-16]
   1f9e0:	add	ip, sp, #8
   1f9e4:	str	ip, [sp]
   1f9e8:	bl	201cc <main@@Base+0x9ce4>
   1f9ec:	str	r0, [fp, #-12]
   1f9f0:	ldr	r0, [fp, #-12]
   1f9f4:	ldr	r1, [sp, #32]
   1f9f8:	cmp	r0, r1
   1f9fc:	beq	1fa10 <main@@Base+0x9528>
   1fa00:	ldr	r0, [fp, #-12]
   1fa04:	ldr	r1, [fp, #-16]
   1fa08:	cmp	r0, r1
   1fa0c:	bne	1fa14 <main@@Base+0x952c>
   1fa10:	b	1fbcc <main@@Base+0x96e4>
   1fa14:	b	1fa18 <main@@Base+0x9530>
   1fa18:	ldr	r0, [sp, #8]
   1fa1c:	ldr	r1, [sp, #12]
   1fa20:	orr	r0, r0, r1
   1fa24:	cmp	r0, #0
   1fa28:	bne	1fa44 <main@@Base+0x955c>
   1fa2c:	b	1fa30 <main@@Base+0x9548>
   1fa30:	ldr	r0, [fp, #-8]
   1fa34:	ldr	r0, [r0, #8]
   1fa38:	and	r0, r0, #2
   1fa3c:	cmp	r0, #0
   1fa40:	beq	1fa84 <main@@Base+0x959c>
   1fa44:	ldr	r0, [fp, #-8]
   1fa48:	ldr	r0, [r0]
   1fa4c:	movw	r1, #1
   1fa50:	movw	r2, #8
   1fa54:	movw	r3, #8
   1fa58:	uxth	r3, r3
   1fa5c:	bl	2d13c <flatcc_builder_table_add@@Base>
   1fa60:	str	r0, [fp, #-28]	; 0xffffffe4
   1fa64:	movw	r1, #0
   1fa68:	cmp	r0, r1
   1fa6c:	bne	1fa74 <main@@Base+0x958c>
   1fa70:	b	1fbcc <main@@Base+0x96e4>
   1fa74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fa78:	ldr	r2, [sp, #8]
   1fa7c:	ldr	r3, [sp, #12]
   1fa80:	bl	203c8 <main@@Base+0x9ee0>
   1fa84:	b	1fa9c <main@@Base+0x95b4>
   1fa88:	ldr	r0, [fp, #-8]
   1fa8c:	ldr	r1, [fp, #-12]
   1fa90:	ldr	r2, [fp, #-16]
   1fa94:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1fa98:	str	r0, [fp, #-12]
   1fa9c:	b	1fb6c <main@@Base+0x9684>
   1faa0:	ldrh	r0, [sp, #30]
   1faa4:	movw	r1, #0
   1faa8:	movt	r1, #26980	; 0x6964
   1faac:	teq	r1, r0, lsl #16
   1fab0:	bne	1fb54 <main@@Base+0x966c>
   1fab4:	b	1fab8 <main@@Base+0x95d0>
   1fab8:	ldr	r0, [fp, #-8]
   1fabc:	ldr	r1, [fp, #-12]
   1fac0:	str	r1, [sp, #32]
   1fac4:	ldr	r2, [fp, #-16]
   1fac8:	movw	r3, #2
   1facc:	bl	1bc98 <main@@Base+0x57b0>
   1fad0:	str	r0, [fp, #-12]
   1fad4:	ldr	r0, [sp, #32]
   1fad8:	ldr	r1, [fp, #-12]
   1fadc:	cmp	r0, r1
   1fae0:	beq	1fb3c <main@@Base+0x9654>
   1fae4:	ldr	r0, [fp, #-8]
   1fae8:	ldr	r1, [fp, #-12]
   1faec:	ldr	r2, [fp, #-16]
   1faf0:	sub	r3, fp, #32
   1faf4:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   1faf8:	str	r0, [fp, #-12]
   1fafc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb00:	cmp	r0, #0
   1fb04:	beq	1fb28 <main@@Base+0x9640>
   1fb08:	ldr	r0, [fp, #-8]
   1fb0c:	ldr	r0, [r0]
   1fb10:	movw	r1, #0
   1fb14:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   1fb18:	str	r0, [sp, #36]	; 0x24
   1fb1c:	movw	r1, #0
   1fb20:	cmp	r0, r1
   1fb24:	bne	1fb2c <main@@Base+0x9644>
   1fb28:	b	1fbcc <main@@Base+0x96e4>
   1fb2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fb30:	ldr	r1, [sp, #36]	; 0x24
   1fb34:	str	r0, [r1]
   1fb38:	b	1fb50 <main@@Base+0x9668>
   1fb3c:	ldr	r0, [fp, #-8]
   1fb40:	ldr	r1, [fp, #-12]
   1fb44:	ldr	r2, [fp, #-16]
   1fb48:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb4c:	str	r0, [fp, #-12]
   1fb50:	b	1fb68 <main@@Base+0x9680>
   1fb54:	ldr	r0, [fp, #-8]
   1fb58:	ldr	r1, [fp, #-12]
   1fb5c:	ldr	r2, [fp, #-16]
   1fb60:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb64:	str	r0, [fp, #-12]
   1fb68:	b	1fb6c <main@@Base+0x9684>
   1fb6c:	b	1fb70 <main@@Base+0x9688>
   1fb70:	ldr	r0, [fp, #-8]
   1fb74:	ldr	r1, [fp, #-12]
   1fb78:	ldr	r2, [fp, #-16]
   1fb7c:	sub	r3, fp, #24
   1fb80:	bl	20c14 <main@@Base+0xa72c>
   1fb84:	str	r0, [fp, #-12]
   1fb88:	b	1f790 <main@@Base+0x92a8>
   1fb8c:	ldr	r0, [fp, #-8]
   1fb90:	ldr	r0, [r0, #20]
   1fb94:	cmp	r0, #0
   1fb98:	beq	1fba0 <main@@Base+0x96b8>
   1fb9c:	b	1fbcc <main@@Base+0x96e4>
   1fba0:	ldr	r0, [fp, #-8]
   1fba4:	ldr	r0, [r0]
   1fba8:	bl	2c500 <flatcc_builder_end_table@@Base>
   1fbac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fbb0:	str	r0, [r1]
   1fbb4:	cmp	r0, #0
   1fbb8:	bne	1fbc0 <main@@Base+0x96d8>
   1fbbc:	b	1fbcc <main@@Base+0x96e4>
   1fbc0:	ldr	r0, [fp, #-12]
   1fbc4:	str	r0, [fp, #-4]
   1fbc8:	b	1fbe4 <main@@Base+0x96fc>
   1fbcc:	ldr	r0, [fp, #-8]
   1fbd0:	ldr	r1, [fp, #-12]
   1fbd4:	ldr	r2, [fp, #-16]
   1fbd8:	movw	r3, #33	; 0x21
   1fbdc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1fbe0:	str	r0, [fp, #-4]
   1fbe4:	ldr	r0, [fp, #-4]
   1fbe8:	mov	sp, fp
   1fbec:	pop	{fp, pc}
   1fbf0:	andeq	sp, r3, r4, ror r9
   1fbf4:	andeq	sp, r3, ip, asr #21
   1fbf8:	push	{r4, r5, r6, sl, fp, lr}
   1fbfc:	add	fp, sp, #16
   1fc00:	sub	sp, sp, #80	; 0x50
   1fc04:	ldr	ip, [fp, #8]
   1fc08:	vldr	s0, [pc, #460]	; 1fddc <main@@Base+0x98f4>
   1fc0c:	str	r0, [fp, #-24]	; 0xffffffe8
   1fc10:	str	r1, [fp, #-28]	; 0xffffffe4
   1fc14:	str	r2, [fp, #-32]	; 0xffffffe0
   1fc18:	str	r3, [fp, #-36]	; 0xffffffdc
   1fc1c:	vstr	s0, [sp, #48]	; 0x30
   1fc20:	ldr	r0, [fp, #8]
   1fc24:	vstr	s0, [r0]
   1fc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fc30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fc34:	str	ip, [sp, #28]
   1fc38:	bl	22358 <main@@Base+0xbe70>
   1fc3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1fc40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fc48:	cmp	r0, r1
   1fc4c:	bne	1fc5c <main@@Base+0x9774>
   1fc50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc54:	str	r0, [fp, #-20]	; 0xffffffec
   1fc58:	b	1fdd0 <main@@Base+0x98e8>
   1fc5c:	b	1fc60 <main@@Base+0x9778>
   1fc60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fc64:	str	r0, [fp, #-40]	; 0xffffffd8
   1fc68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fc6c:	ldr	r0, [r0]
   1fc70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fc74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fc78:	str	r2, [fp, #-44]	; 0xffffffd4
   1fc7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc80:	str	r0, [sp, #24]
   1fc84:	mov	r0, r1
   1fc88:	mov	r1, r2
   1fc8c:	mov	r2, r3
   1fc90:	add	r3, sp, #36	; 0x24
   1fc94:	add	ip, sp, #40	; 0x28
   1fc98:	str	ip, [sp]
   1fc9c:	add	ip, sp, #32
   1fca0:	str	ip, [sp, #4]
   1fca4:	ldr	ip, [sp, #24]
   1fca8:	blx	ip
   1fcac:	str	r0, [fp, #-28]	; 0xffffffe4
   1fcb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fcb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fcb8:	cmp	r0, r1
   1fcbc:	bne	1fccc <main@@Base+0x97e4>
   1fcc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fcc4:	str	r0, [fp, #-20]	; 0xffffffec
   1fcc8:	b	1fdd0 <main@@Base+0x98e8>
   1fccc:	b	1fcd0 <main@@Base+0x97e8>
   1fcd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fcd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1fcd8:	cmp	r0, r1
   1fcdc:	movw	r0, #0
   1fce0:	str	r0, [sp, #20]
   1fce4:	bne	1fd0c <main@@Base+0x9824>
   1fce8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fcec:	add	r1, r0, #4
   1fcf0:	str	r1, [fp, #-40]	; 0xffffffd8
   1fcf4:	ldr	r0, [r0, #4]
   1fcf8:	movw	r1, #0
   1fcfc:	cmp	r0, r1
   1fd00:	movw	r0, #0
   1fd04:	movne	r0, #1
   1fd08:	str	r0, [sp, #20]
   1fd0c:	ldr	r0, [sp, #20]
   1fd10:	tst	r0, #1
   1fd14:	bne	1fc68 <main@@Base+0x9780>
   1fd18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fd1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd20:	cmp	r0, r1
   1fd24:	bne	1fd44 <main@@Base+0x985c>
   1fd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fd2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd34:	movw	r3, #23
   1fd38:	bl	33158 <flatcc_json_parser_set_error@@Base>
   1fd3c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd40:	b	1fdd0 <main@@Base+0x98e8>
   1fd44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd48:	mov	r1, r0
   1fd4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fd54:	ldr	ip, [sp, #36]	; 0x24
   1fd58:	ldr	lr, [sp, #40]	; 0x28
   1fd5c:	ldr	r4, [sp, #44]	; 0x2c
   1fd60:	mov	r5, sp
   1fd64:	add	r6, sp, #48	; 0x30
   1fd68:	str	r6, [r5, #8]
   1fd6c:	str	r4, [r5, #4]
   1fd70:	str	lr, [r5]
   1fd74:	str	r0, [sp, #16]
   1fd78:	mov	r0, r2
   1fd7c:	str	r1, [sp, #12]
   1fd80:	mov	r1, r3
   1fd84:	ldr	r2, [sp, #16]
   1fd88:	mov	r3, ip
   1fd8c:	bl	26ae8 <main@@Base+0x10600>
   1fd90:	ldr	r1, [sp, #12]
   1fd94:	cmp	r1, r0
   1fd98:	bne	1fda8 <main@@Base+0x98c0>
   1fd9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fda0:	str	r0, [fp, #-20]	; 0xffffffec
   1fda4:	b	1fdd0 <main@@Base+0x98e8>
   1fda8:	vldr	s0, [sp, #48]	; 0x30
   1fdac:	ldr	r0, [fp, #8]
   1fdb0:	vldr	s2, [r0]
   1fdb4:	vadd.f32	s0, s2, s0
   1fdb8:	vstr	s0, [r0]
   1fdbc:	ldr	r0, [sp, #32]
   1fdc0:	cmp	r0, #0
   1fdc4:	bne	1fc60 <main@@Base+0x9778>
   1fdc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fdcc:	str	r0, [fp, #-20]	; 0xffffffec
   1fdd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fdd4:	sub	sp, fp, #16
   1fdd8:	pop	{r4, r5, r6, sl, fp, pc}
   1fddc:	andeq	r0, r0, r0
   1fde0:	push	{fp, lr}
   1fde4:	mov	fp, sp
   1fde8:	sub	sp, sp, #8
   1fdec:	str	r0, [sp, #4]
   1fdf0:	vstr	s0, [sp]
   1fdf4:	vldr	s0, [sp]
   1fdf8:	bl	26b6c <main@@Base+0x10684>
   1fdfc:	ldr	r0, [sp, #4]
   1fe00:	vstr	s0, [r0]
   1fe04:	mov	sp, fp
   1fe08:	pop	{fp, pc}
   1fe0c:	push	{r4, r5, fp, lr}
   1fe10:	add	fp, sp, #8
   1fe14:	sub	sp, sp, #56	; 0x38
   1fe18:	str	r0, [fp, #-16]
   1fe1c:	str	r1, [fp, #-20]	; 0xffffffec
   1fe20:	str	r2, [fp, #-24]	; 0xffffffe8
   1fe24:	str	r3, [fp, #-28]	; 0xffffffe4
   1fe28:	mov	r0, #0
   1fe2c:	str	r0, [sp, #28]
   1fe30:	str	r0, [sp, #24]
   1fe34:	movw	r0, #0
   1fe38:	str	r0, [sp, #20]
   1fe3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe40:	str	r1, [sp, #16]
   1fe44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fe48:	str	r0, [r1]
   1fe4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fe50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fe54:	cmp	r0, r1
   1fe58:	bne	1fe68 <main@@Base+0x9980>
   1fe5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fe60:	str	r0, [fp, #-12]
   1fe64:	b	1fed8 <main@@Base+0x99f0>
   1fe68:	ldr	r0, [fp, #-16]
   1fe6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe74:	add	r3, sp, #20
   1fe78:	add	ip, sp, #24
   1fe7c:	str	ip, [sp]
   1fe80:	bl	3579c <flatcc_json_parser_integer@@Base>
   1fe84:	str	r0, [fp, #-20]	; 0xffffffec
   1fe88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fe8c:	ldr	r1, [sp, #16]
   1fe90:	cmp	r0, r1
   1fe94:	beq	1fed0 <main@@Base+0x99e8>
   1fe98:	ldr	r0, [fp, #-16]
   1fe9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fea4:	ldr	r3, [sp, #20]
   1fea8:	ldr	ip, [sp, #24]
   1feac:	ldr	lr, [sp, #28]
   1feb0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1feb4:	mov	r5, sp
   1feb8:	str	r4, [r5, #8]
   1febc:	str	lr, [r5, #4]
   1fec0:	str	ip, [r5]
   1fec4:	bl	26b90 <main@@Base+0x106a8>
   1fec8:	str	r0, [fp, #-12]
   1fecc:	b	1fed8 <main@@Base+0x99f0>
   1fed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fed4:	str	r0, [fp, #-12]
   1fed8:	ldr	r0, [fp, #-12]
   1fedc:	sub	sp, fp, #8
   1fee0:	pop	{r4, r5, fp, pc}
   1fee4:	push	{r4, r5, r6, sl, fp, lr}
   1fee8:	add	fp, sp, #16
   1feec:	sub	sp, sp, #80	; 0x50
   1fef0:	ldr	ip, [fp, #8]
   1fef4:	str	r0, [fp, #-24]	; 0xffffffe8
   1fef8:	str	r1, [fp, #-28]	; 0xffffffe4
   1fefc:	str	r2, [fp, #-32]	; 0xffffffe0
   1ff00:	str	r3, [fp, #-36]	; 0xffffffdc
   1ff04:	movw	r0, #0
   1ff08:	str	r0, [sp, #48]	; 0x30
   1ff0c:	ldr	r1, [fp, #8]
   1ff10:	str	r0, [r1]
   1ff14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ff18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ff1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ff20:	str	ip, [sp, #28]
   1ff24:	bl	22358 <main@@Base+0xbe70>
   1ff28:	str	r0, [fp, #-28]	; 0xffffffe4
   1ff2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ff34:	cmp	r0, r1
   1ff38:	bne	1ff48 <main@@Base+0x9a60>
   1ff3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ff40:	str	r0, [fp, #-20]	; 0xffffffec
   1ff44:	b	200bc <main@@Base+0x9bd4>
   1ff48:	b	1ff4c <main@@Base+0x9a64>
   1ff4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ff50:	str	r0, [fp, #-40]	; 0xffffffd8
   1ff54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ff58:	ldr	r0, [r0]
   1ff5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ff64:	str	r2, [fp, #-44]	; 0xffffffd4
   1ff68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ff6c:	str	r0, [sp, #24]
   1ff70:	mov	r0, r1
   1ff74:	mov	r1, r2
   1ff78:	mov	r2, r3
   1ff7c:	add	r3, sp, #36	; 0x24
   1ff80:	add	ip, sp, #40	; 0x28
   1ff84:	str	ip, [sp]
   1ff88:	add	ip, sp, #32
   1ff8c:	str	ip, [sp, #4]
   1ff90:	ldr	ip, [sp, #24]
   1ff94:	blx	ip
   1ff98:	str	r0, [fp, #-28]	; 0xffffffe4
   1ff9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffa0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ffa4:	cmp	r0, r1
   1ffa8:	bne	1ffb8 <main@@Base+0x9ad0>
   1ffac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffb0:	str	r0, [fp, #-20]	; 0xffffffec
   1ffb4:	b	200bc <main@@Base+0x9bd4>
   1ffb8:	b	1ffbc <main@@Base+0x9ad4>
   1ffbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ffc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ffc4:	cmp	r0, r1
   1ffc8:	movw	r0, #0
   1ffcc:	str	r0, [sp, #20]
   1ffd0:	bne	1fff8 <main@@Base+0x9b10>
   1ffd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ffd8:	add	r1, r0, #4
   1ffdc:	str	r1, [fp, #-40]	; 0xffffffd8
   1ffe0:	ldr	r0, [r0, #4]
   1ffe4:	movw	r1, #0
   1ffe8:	cmp	r0, r1
   1ffec:	movw	r0, #0
   1fff0:	movne	r0, #1
   1fff4:	str	r0, [sp, #20]
   1fff8:	ldr	r0, [sp, #20]
   1fffc:	tst	r0, #1
   20000:	bne	1ff54 <main@@Base+0x9a6c>
   20004:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2000c:	cmp	r0, r1
   20010:	bne	20030 <main@@Base+0x9b48>
   20014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20018:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2001c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20020:	movw	r3, #23
   20024:	bl	33158 <flatcc_json_parser_set_error@@Base>
   20028:	str	r0, [fp, #-20]	; 0xffffffec
   2002c:	b	200bc <main@@Base+0x9bd4>
   20030:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20034:	mov	r1, r0
   20038:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2003c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20040:	ldr	ip, [sp, #36]	; 0x24
   20044:	ldr	lr, [sp, #40]	; 0x28
   20048:	ldr	r4, [sp, #44]	; 0x2c
   2004c:	mov	r5, sp
   20050:	add	r6, sp, #48	; 0x30
   20054:	str	r6, [r5, #8]
   20058:	str	r4, [r5, #4]
   2005c:	str	lr, [r5]
   20060:	str	r0, [sp, #16]
   20064:	mov	r0, r2
   20068:	str	r1, [sp, #12]
   2006c:	mov	r1, r3
   20070:	ldr	r2, [sp, #16]
   20074:	mov	r3, ip
   20078:	bl	26b90 <main@@Base+0x106a8>
   2007c:	ldr	r1, [sp, #12]
   20080:	cmp	r1, r0
   20084:	bne	20094 <main@@Base+0x9bac>
   20088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2008c:	str	r0, [fp, #-20]	; 0xffffffec
   20090:	b	200bc <main@@Base+0x9bd4>
   20094:	ldr	r0, [sp, #48]	; 0x30
   20098:	ldr	r1, [fp, #8]
   2009c:	ldr	r2, [r1]
   200a0:	add	r0, r2, r0
   200a4:	str	r0, [r1]
   200a8:	ldr	r0, [sp, #32]
   200ac:	cmp	r0, #0
   200b0:	bne	1ff4c <main@@Base+0x9a64>
   200b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   200b8:	str	r0, [fp, #-20]	; 0xffffffec
   200bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   200c0:	sub	sp, fp, #16
   200c4:	pop	{r4, r5, r6, sl, fp, pc}
   200c8:	push	{fp, lr}
   200cc:	mov	fp, sp
   200d0:	sub	sp, sp, #8
   200d4:	str	r0, [sp, #4]
   200d8:	str	r1, [sp]
   200dc:	ldr	r0, [sp]
   200e0:	bl	26c68 <main@@Base+0x10780>
   200e4:	ldr	r1, [sp, #4]
   200e8:	str	r0, [r1]
   200ec:	mov	sp, fp
   200f0:	pop	{fp, pc}
   200f4:	push	{r4, r5, fp, lr}
   200f8:	add	fp, sp, #8
   200fc:	sub	sp, sp, #56	; 0x38
   20100:	str	r0, [fp, #-16]
   20104:	str	r1, [fp, #-20]	; 0xffffffec
   20108:	str	r2, [fp, #-24]	; 0xffffffe8
   2010c:	str	r3, [fp, #-28]	; 0xffffffe4
   20110:	mov	r0, #0
   20114:	str	r0, [sp, #28]
   20118:	str	r0, [sp, #24]
   2011c:	str	r0, [sp, #20]
   20120:	ldr	r1, [fp, #-20]	; 0xffffffec
   20124:	str	r1, [sp, #16]
   20128:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2012c:	str	r0, [r1, #4]
   20130:	str	r0, [r1]
   20134:	ldr	r0, [fp, #-20]	; 0xffffffec
   20138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2013c:	cmp	r0, r1
   20140:	bne	20150 <main@@Base+0x9c68>
   20144:	ldr	r0, [fp, #-20]	; 0xffffffec
   20148:	str	r0, [fp, #-12]
   2014c:	b	201c0 <main@@Base+0x9cd8>
   20150:	ldr	r0, [fp, #-16]
   20154:	ldr	r1, [fp, #-20]	; 0xffffffec
   20158:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2015c:	add	r3, sp, #20
   20160:	add	ip, sp, #24
   20164:	str	ip, [sp]
   20168:	bl	3579c <flatcc_json_parser_integer@@Base>
   2016c:	str	r0, [fp, #-20]	; 0xffffffec
   20170:	ldr	r0, [fp, #-20]	; 0xffffffec
   20174:	ldr	r1, [sp, #16]
   20178:	cmp	r0, r1
   2017c:	beq	201b8 <main@@Base+0x9cd0>
   20180:	ldr	r0, [fp, #-16]
   20184:	ldr	r1, [fp, #-20]	; 0xffffffec
   20188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2018c:	ldr	r3, [sp, #20]
   20190:	ldr	ip, [sp, #24]
   20194:	ldr	lr, [sp, #28]
   20198:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2019c:	mov	r5, sp
   201a0:	str	r4, [r5, #8]
   201a4:	str	lr, [r5, #4]
   201a8:	str	ip, [r5]
   201ac:	bl	26c7c <main@@Base+0x10794>
   201b0:	str	r0, [fp, #-12]
   201b4:	b	201c0 <main@@Base+0x9cd8>
   201b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   201bc:	str	r0, [fp, #-12]
   201c0:	ldr	r0, [fp, #-12]
   201c4:	sub	sp, fp, #8
   201c8:	pop	{r4, r5, fp, pc}
   201cc:	push	{r4, r5, r6, sl, fp, lr}
   201d0:	add	fp, sp, #16
   201d4:	sub	sp, sp, #88	; 0x58
   201d8:	ldr	ip, [fp, #8]
   201dc:	str	r0, [fp, #-24]	; 0xffffffe8
   201e0:	str	r1, [fp, #-28]	; 0xffffffe4
   201e4:	str	r2, [fp, #-32]	; 0xffffffe0
   201e8:	str	r3, [fp, #-36]	; 0xffffffdc
   201ec:	mov	r0, #0
   201f0:	str	r0, [sp, #52]	; 0x34
   201f4:	str	r0, [sp, #48]	; 0x30
   201f8:	ldr	r1, [fp, #8]
   201fc:	str	r0, [r1, #4]
   20200:	str	r0, [r1]
   20204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20208:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2020c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20210:	str	ip, [sp, #28]
   20214:	bl	22358 <main@@Base+0xbe70>
   20218:	str	r0, [fp, #-28]	; 0xffffffe4
   2021c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20220:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20224:	cmp	r0, r1
   20228:	bne	20238 <main@@Base+0x9d50>
   2022c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20230:	str	r0, [fp, #-20]	; 0xffffffec
   20234:	b	203bc <main@@Base+0x9ed4>
   20238:	b	2023c <main@@Base+0x9d54>
   2023c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20240:	str	r0, [fp, #-40]	; 0xffffffd8
   20244:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20248:	ldr	r0, [r0]
   2024c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20250:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20254:	str	r2, [fp, #-44]	; 0xffffffd4
   20258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2025c:	str	r0, [sp, #24]
   20260:	mov	r0, r1
   20264:	mov	r1, r2
   20268:	mov	r2, r3
   2026c:	add	r3, sp, #36	; 0x24
   20270:	add	ip, sp, #40	; 0x28
   20274:	str	ip, [sp]
   20278:	add	ip, sp, #32
   2027c:	str	ip, [sp, #4]
   20280:	ldr	ip, [sp, #24]
   20284:	blx	ip
   20288:	str	r0, [fp, #-28]	; 0xffffffe4
   2028c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20290:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20294:	cmp	r0, r1
   20298:	bne	202a8 <main@@Base+0x9dc0>
   2029c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   202a0:	str	r0, [fp, #-20]	; 0xffffffec
   202a4:	b	203bc <main@@Base+0x9ed4>
   202a8:	b	202ac <main@@Base+0x9dc4>
   202ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   202b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   202b4:	cmp	r0, r1
   202b8:	movw	r0, #0
   202bc:	str	r0, [sp, #20]
   202c0:	bne	202e8 <main@@Base+0x9e00>
   202c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   202c8:	add	r1, r0, #4
   202cc:	str	r1, [fp, #-40]	; 0xffffffd8
   202d0:	ldr	r0, [r0, #4]
   202d4:	movw	r1, #0
   202d8:	cmp	r0, r1
   202dc:	movw	r0, #0
   202e0:	movne	r0, #1
   202e4:	str	r0, [sp, #20]
   202e8:	ldr	r0, [sp, #20]
   202ec:	tst	r0, #1
   202f0:	bne	20244 <main@@Base+0x9d5c>
   202f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   202f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   202fc:	cmp	r0, r1
   20300:	bne	20320 <main@@Base+0x9e38>
   20304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20308:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2030c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20310:	movw	r3, #23
   20314:	bl	33158 <flatcc_json_parser_set_error@@Base>
   20318:	str	r0, [fp, #-20]	; 0xffffffec
   2031c:	b	203bc <main@@Base+0x9ed4>
   20320:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20324:	mov	r1, r0
   20328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2032c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20330:	ldr	ip, [sp, #36]	; 0x24
   20334:	ldr	lr, [sp, #40]	; 0x28
   20338:	ldr	r4, [sp, #44]	; 0x2c
   2033c:	mov	r5, sp
   20340:	add	r6, sp, #48	; 0x30
   20344:	str	r6, [r5, #8]
   20348:	str	r4, [r5, #4]
   2034c:	str	lr, [r5]
   20350:	str	r0, [sp, #16]
   20354:	mov	r0, r2
   20358:	str	r1, [sp, #12]
   2035c:	mov	r1, r3
   20360:	ldr	r2, [sp, #16]
   20364:	mov	r3, ip
   20368:	bl	26c7c <main@@Base+0x10794>
   2036c:	ldr	r1, [sp, #12]
   20370:	cmp	r1, r0
   20374:	bne	20384 <main@@Base+0x9e9c>
   20378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2037c:	str	r0, [fp, #-20]	; 0xffffffec
   20380:	b	203bc <main@@Base+0x9ed4>
   20384:	ldr	r0, [sp, #48]	; 0x30
   20388:	ldr	r1, [sp, #52]	; 0x34
   2038c:	ldr	r2, [fp, #8]
   20390:	ldr	r3, [r2]
   20394:	ldr	ip, [r2, #4]
   20398:	adds	r0, r3, r0
   2039c:	adc	r1, ip, r1
   203a0:	str	r0, [r2]
   203a4:	str	r1, [r2, #4]
   203a8:	ldr	r0, [sp, #32]
   203ac:	cmp	r0, #0
   203b0:	bne	2023c <main@@Base+0x9d54>
   203b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   203b8:	str	r0, [fp, #-20]	; 0xffffffec
   203bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   203c0:	sub	sp, fp, #16
   203c4:	pop	{r4, r5, r6, sl, fp, pc}
   203c8:	push	{fp, lr}
   203cc:	mov	fp, sp
   203d0:	sub	sp, sp, #16
   203d4:	str	r0, [fp, #-4]
   203d8:	str	r3, [sp, #4]
   203dc:	str	r2, [sp]
   203e0:	ldr	r0, [sp]
   203e4:	ldr	r1, [sp, #4]
   203e8:	bl	26d60 <main@@Base+0x10878>
   203ec:	ldr	r2, [fp, #-4]
   203f0:	str	r1, [r2, #4]
   203f4:	str	r0, [r2]
   203f8:	mov	sp, fp
   203fc:	pop	{fp, pc}
   20400:	push	{r4, r5, fp, lr}
   20404:	add	fp, sp, #8
   20408:	sub	sp, sp, #56	; 0x38
   2040c:	str	r0, [fp, #-16]
   20410:	str	r1, [fp, #-20]	; 0xffffffec
   20414:	str	r2, [fp, #-24]	; 0xffffffe8
   20418:	str	r3, [fp, #-28]	; 0xffffffe4
   2041c:	mov	r0, #0
   20420:	str	r0, [sp, #28]
   20424:	str	r0, [sp, #24]
   20428:	movw	r0, #0
   2042c:	str	r0, [sp, #20]
   20430:	ldr	r1, [fp, #-20]	; 0xffffffec
   20434:	str	r1, [sp, #16]
   20438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2043c:	str	r0, [r1]
   20440:	ldr	r0, [fp, #-20]	; 0xffffffec
   20444:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20448:	cmp	r0, r1
   2044c:	bne	2045c <main@@Base+0x9f74>
   20450:	ldr	r0, [fp, #-20]	; 0xffffffec
   20454:	str	r0, [fp, #-12]
   20458:	b	204cc <main@@Base+0x9fe4>
   2045c:	ldr	r0, [fp, #-16]
   20460:	ldr	r1, [fp, #-20]	; 0xffffffec
   20464:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20468:	add	r3, sp, #20
   2046c:	add	ip, sp, #24
   20470:	str	ip, [sp]
   20474:	bl	3579c <flatcc_json_parser_integer@@Base>
   20478:	str	r0, [fp, #-20]	; 0xffffffec
   2047c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20480:	ldr	r1, [sp, #16]
   20484:	cmp	r0, r1
   20488:	beq	204c4 <main@@Base+0x9fdc>
   2048c:	ldr	r0, [fp, #-16]
   20490:	ldr	r1, [fp, #-20]	; 0xffffffec
   20494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20498:	ldr	r3, [sp, #20]
   2049c:	ldr	ip, [sp, #24]
   204a0:	ldr	lr, [sp, #28]
   204a4:	ldr	r4, [fp, #-28]	; 0xffffffe4
   204a8:	mov	r5, sp
   204ac:	str	r4, [r5, #8]
   204b0:	str	lr, [r5, #4]
   204b4:	str	ip, [r5]
   204b8:	bl	26d7c <main@@Base+0x10894>
   204bc:	str	r0, [fp, #-12]
   204c0:	b	204cc <main@@Base+0x9fe4>
   204c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   204c8:	str	r0, [fp, #-12]
   204cc:	ldr	r0, [fp, #-12]
   204d0:	sub	sp, fp, #8
   204d4:	pop	{r4, r5, fp, pc}
   204d8:	push	{r4, r5, r6, sl, fp, lr}
   204dc:	add	fp, sp, #16
   204e0:	sub	sp, sp, #80	; 0x50
   204e4:	ldr	ip, [fp, #8]
   204e8:	str	r0, [fp, #-24]	; 0xffffffe8
   204ec:	str	r1, [fp, #-28]	; 0xffffffe4
   204f0:	str	r2, [fp, #-32]	; 0xffffffe0
   204f4:	str	r3, [fp, #-36]	; 0xffffffdc
   204f8:	movw	r0, #0
   204fc:	str	r0, [sp, #48]	; 0x30
   20500:	ldr	r1, [fp, #8]
   20504:	str	r0, [r1]
   20508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2050c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20510:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20514:	str	ip, [sp, #28]
   20518:	bl	22358 <main@@Base+0xbe70>
   2051c:	str	r0, [fp, #-28]	; 0xffffffe4
   20520:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20524:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20528:	cmp	r0, r1
   2052c:	bne	2053c <main@@Base+0xa054>
   20530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20534:	str	r0, [fp, #-20]	; 0xffffffec
   20538:	b	206b0 <main@@Base+0xa1c8>
   2053c:	b	20540 <main@@Base+0xa058>
   20540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20544:	str	r0, [fp, #-40]	; 0xffffffd8
   20548:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2054c:	ldr	r0, [r0]
   20550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20554:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20558:	str	r2, [fp, #-44]	; 0xffffffd4
   2055c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20560:	str	r0, [sp, #24]
   20564:	mov	r0, r1
   20568:	mov	r1, r2
   2056c:	mov	r2, r3
   20570:	add	r3, sp, #36	; 0x24
   20574:	add	ip, sp, #40	; 0x28
   20578:	str	ip, [sp]
   2057c:	add	ip, sp, #32
   20580:	str	ip, [sp, #4]
   20584:	ldr	ip, [sp, #24]
   20588:	blx	ip
   2058c:	str	r0, [fp, #-28]	; 0xffffffe4
   20590:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20594:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20598:	cmp	r0, r1
   2059c:	bne	205ac <main@@Base+0xa0c4>
   205a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   205a4:	str	r0, [fp, #-20]	; 0xffffffec
   205a8:	b	206b0 <main@@Base+0xa1c8>
   205ac:	b	205b0 <main@@Base+0xa0c8>
   205b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   205b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   205b8:	cmp	r0, r1
   205bc:	movw	r0, #0
   205c0:	str	r0, [sp, #20]
   205c4:	bne	205ec <main@@Base+0xa104>
   205c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   205cc:	add	r1, r0, #4
   205d0:	str	r1, [fp, #-40]	; 0xffffffd8
   205d4:	ldr	r0, [r0, #4]
   205d8:	movw	r1, #0
   205dc:	cmp	r0, r1
   205e0:	movw	r0, #0
   205e4:	movne	r0, #1
   205e8:	str	r0, [sp, #20]
   205ec:	ldr	r0, [sp, #20]
   205f0:	tst	r0, #1
   205f4:	bne	20548 <main@@Base+0xa060>
   205f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   205fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20600:	cmp	r0, r1
   20604:	bne	20624 <main@@Base+0xa13c>
   20608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2060c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20610:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20614:	movw	r3, #23
   20618:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2061c:	str	r0, [fp, #-20]	; 0xffffffec
   20620:	b	206b0 <main@@Base+0xa1c8>
   20624:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20628:	mov	r1, r0
   2062c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20634:	ldr	ip, [sp, #36]	; 0x24
   20638:	ldr	lr, [sp, #40]	; 0x28
   2063c:	ldr	r4, [sp, #44]	; 0x2c
   20640:	mov	r5, sp
   20644:	add	r6, sp, #48	; 0x30
   20648:	str	r6, [r5, #8]
   2064c:	str	r4, [r5, #4]
   20650:	str	lr, [r5]
   20654:	str	r0, [sp, #16]
   20658:	mov	r0, r2
   2065c:	str	r1, [sp, #12]
   20660:	mov	r1, r3
   20664:	ldr	r2, [sp, #16]
   20668:	mov	r3, ip
   2066c:	bl	26d7c <main@@Base+0x10894>
   20670:	ldr	r1, [sp, #12]
   20674:	cmp	r1, r0
   20678:	bne	20688 <main@@Base+0xa1a0>
   2067c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20680:	str	r0, [fp, #-20]	; 0xffffffec
   20684:	b	206b0 <main@@Base+0xa1c8>
   20688:	ldr	r0, [sp, #48]	; 0x30
   2068c:	ldr	r1, [fp, #8]
   20690:	ldr	r2, [r1]
   20694:	add	r0, r2, r0
   20698:	str	r0, [r1]
   2069c:	ldr	r0, [sp, #32]
   206a0:	cmp	r0, #0
   206a4:	bne	20540 <main@@Base+0xa058>
   206a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   206ac:	str	r0, [fp, #-20]	; 0xffffffec
   206b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   206b4:	sub	sp, fp, #16
   206b8:	pop	{r4, r5, r6, sl, fp, pc}
   206bc:	push	{fp, lr}
   206c0:	mov	fp, sp
   206c4:	sub	sp, sp, #8
   206c8:	str	r0, [sp, #4]
   206cc:	str	r1, [sp]
   206d0:	ldr	r0, [sp]
   206d4:	bl	26e20 <main@@Base+0x10938>
   206d8:	ldr	r1, [sp, #4]
   206dc:	str	r0, [r1]
   206e0:	mov	sp, fp
   206e4:	pop	{fp, pc}
   206e8:	push	{r4, r5, fp, lr}
   206ec:	add	fp, sp, #8
   206f0:	sub	sp, sp, #56	; 0x38
   206f4:	str	r0, [fp, #-16]
   206f8:	str	r1, [fp, #-20]	; 0xffffffec
   206fc:	str	r2, [fp, #-24]	; 0xffffffe8
   20700:	str	r3, [fp, #-28]	; 0xffffffe4
   20704:	mov	r0, #0
   20708:	str	r0, [sp, #28]
   2070c:	str	r0, [sp, #24]
   20710:	str	r0, [sp, #20]
   20714:	ldr	r1, [fp, #-20]	; 0xffffffec
   20718:	str	r1, [sp, #16]
   2071c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20720:	str	r0, [r1, #4]
   20724:	str	r0, [r1]
   20728:	ldr	r0, [fp, #-20]	; 0xffffffec
   2072c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20730:	cmp	r0, r1
   20734:	bne	20744 <main@@Base+0xa25c>
   20738:	ldr	r0, [fp, #-20]	; 0xffffffec
   2073c:	str	r0, [fp, #-12]
   20740:	b	207b4 <main@@Base+0xa2cc>
   20744:	ldr	r0, [fp, #-16]
   20748:	ldr	r1, [fp, #-20]	; 0xffffffec
   2074c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20750:	add	r3, sp, #20
   20754:	add	ip, sp, #24
   20758:	str	ip, [sp]
   2075c:	bl	3579c <flatcc_json_parser_integer@@Base>
   20760:	str	r0, [fp, #-20]	; 0xffffffec
   20764:	ldr	r0, [fp, #-20]	; 0xffffffec
   20768:	ldr	r1, [sp, #16]
   2076c:	cmp	r0, r1
   20770:	beq	207ac <main@@Base+0xa2c4>
   20774:	ldr	r0, [fp, #-16]
   20778:	ldr	r1, [fp, #-20]	; 0xffffffec
   2077c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20780:	ldr	r3, [sp, #20]
   20784:	ldr	ip, [sp, #24]
   20788:	ldr	lr, [sp, #28]
   2078c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   20790:	mov	r5, sp
   20794:	str	r4, [r5, #8]
   20798:	str	lr, [r5, #4]
   2079c:	str	ip, [r5]
   207a0:	bl	26e34 <main@@Base+0x1094c>
   207a4:	str	r0, [fp, #-12]
   207a8:	b	207b4 <main@@Base+0xa2cc>
   207ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   207b0:	str	r0, [fp, #-12]
   207b4:	ldr	r0, [fp, #-12]
   207b8:	sub	sp, fp, #8
   207bc:	pop	{r4, r5, fp, pc}
   207c0:	push	{r4, r5, r6, sl, fp, lr}
   207c4:	add	fp, sp, #16
   207c8:	sub	sp, sp, #88	; 0x58
   207cc:	ldr	ip, [fp, #8]
   207d0:	str	r0, [fp, #-24]	; 0xffffffe8
   207d4:	str	r1, [fp, #-28]	; 0xffffffe4
   207d8:	str	r2, [fp, #-32]	; 0xffffffe0
   207dc:	str	r3, [fp, #-36]	; 0xffffffdc
   207e0:	mov	r0, #0
   207e4:	str	r0, [sp, #52]	; 0x34
   207e8:	str	r0, [sp, #48]	; 0x30
   207ec:	ldr	r1, [fp, #8]
   207f0:	str	r0, [r1, #4]
   207f4:	str	r0, [r1]
   207f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   207fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20800:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20804:	str	ip, [sp, #28]
   20808:	bl	22358 <main@@Base+0xbe70>
   2080c:	str	r0, [fp, #-28]	; 0xffffffe4
   20810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20814:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20818:	cmp	r0, r1
   2081c:	bne	2082c <main@@Base+0xa344>
   20820:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20824:	str	r0, [fp, #-20]	; 0xffffffec
   20828:	b	209b0 <main@@Base+0xa4c8>
   2082c:	b	20830 <main@@Base+0xa348>
   20830:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20834:	str	r0, [fp, #-40]	; 0xffffffd8
   20838:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2083c:	ldr	r0, [r0]
   20840:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20844:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20848:	str	r2, [fp, #-44]	; 0xffffffd4
   2084c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20850:	str	r0, [sp, #24]
   20854:	mov	r0, r1
   20858:	mov	r1, r2
   2085c:	mov	r2, r3
   20860:	add	r3, sp, #36	; 0x24
   20864:	add	ip, sp, #40	; 0x28
   20868:	str	ip, [sp]
   2086c:	add	ip, sp, #32
   20870:	str	ip, [sp, #4]
   20874:	ldr	ip, [sp, #24]
   20878:	blx	ip
   2087c:	str	r0, [fp, #-28]	; 0xffffffe4
   20880:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20884:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20888:	cmp	r0, r1
   2088c:	bne	2089c <main@@Base+0xa3b4>
   20890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20894:	str	r0, [fp, #-20]	; 0xffffffec
   20898:	b	209b0 <main@@Base+0xa4c8>
   2089c:	b	208a0 <main@@Base+0xa3b8>
   208a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   208a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   208a8:	cmp	r0, r1
   208ac:	movw	r0, #0
   208b0:	str	r0, [sp, #20]
   208b4:	bne	208dc <main@@Base+0xa3f4>
   208b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   208bc:	add	r1, r0, #4
   208c0:	str	r1, [fp, #-40]	; 0xffffffd8
   208c4:	ldr	r0, [r0, #4]
   208c8:	movw	r1, #0
   208cc:	cmp	r0, r1
   208d0:	movw	r0, #0
   208d4:	movne	r0, #1
   208d8:	str	r0, [sp, #20]
   208dc:	ldr	r0, [sp, #20]
   208e0:	tst	r0, #1
   208e4:	bne	20838 <main@@Base+0xa350>
   208e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   208ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   208f0:	cmp	r0, r1
   208f4:	bne	20914 <main@@Base+0xa42c>
   208f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   208fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20900:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20904:	movw	r3, #23
   20908:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2090c:	str	r0, [fp, #-20]	; 0xffffffec
   20910:	b	209b0 <main@@Base+0xa4c8>
   20914:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20918:	mov	r1, r0
   2091c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20924:	ldr	ip, [sp, #36]	; 0x24
   20928:	ldr	lr, [sp, #40]	; 0x28
   2092c:	ldr	r4, [sp, #44]	; 0x2c
   20930:	mov	r5, sp
   20934:	add	r6, sp, #48	; 0x30
   20938:	str	r6, [r5, #8]
   2093c:	str	r4, [r5, #4]
   20940:	str	lr, [r5]
   20944:	str	r0, [sp, #16]
   20948:	mov	r0, r2
   2094c:	str	r1, [sp, #12]
   20950:	mov	r1, r3
   20954:	ldr	r2, [sp, #16]
   20958:	mov	r3, ip
   2095c:	bl	26e34 <main@@Base+0x1094c>
   20960:	ldr	r1, [sp, #12]
   20964:	cmp	r1, r0
   20968:	bne	20978 <main@@Base+0xa490>
   2096c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20970:	str	r0, [fp, #-20]	; 0xffffffec
   20974:	b	209b0 <main@@Base+0xa4c8>
   20978:	ldr	r0, [sp, #48]	; 0x30
   2097c:	ldr	r1, [sp, #52]	; 0x34
   20980:	ldr	r2, [fp, #8]
   20984:	ldr	r3, [r2]
   20988:	ldr	ip, [r2, #4]
   2098c:	adds	r0, r3, r0
   20990:	adc	r1, ip, r1
   20994:	str	r0, [r2]
   20998:	str	r1, [r2, #4]
   2099c:	ldr	r0, [sp, #32]
   209a0:	cmp	r0, #0
   209a4:	bne	20830 <main@@Base+0xa348>
   209a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   209ac:	str	r0, [fp, #-20]	; 0xffffffec
   209b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   209b4:	sub	sp, fp, #16
   209b8:	pop	{r4, r5, r6, sl, fp, pc}
   209bc:	push	{fp, lr}
   209c0:	mov	fp, sp
   209c4:	sub	sp, sp, #16
   209c8:	str	r0, [fp, #-4]
   209cc:	str	r3, [sp, #4]
   209d0:	str	r2, [sp]
   209d4:	ldr	r0, [sp]
   209d8:	ldr	r1, [sp, #4]
   209dc:	bl	26eb4 <main@@Base+0x109cc>
   209e0:	ldr	r2, [fp, #-4]
   209e4:	str	r1, [r2, #4]
   209e8:	str	r0, [r2]
   209ec:	mov	sp, fp
   209f0:	pop	{fp, pc}
   209f4:	nop	{0}
   209f8:	push	{r4, r5, r6, sl, fp, lr}
   209fc:	add	fp, sp, #16
   20a00:	sub	sp, sp, #88	; 0x58
   20a04:	ldr	ip, [fp, #8]
   20a08:	vldr	d16, [pc, #464]	; 20be0 <main@@Base+0xa6f8>
   20a0c:	str	r0, [fp, #-24]	; 0xffffffe8
   20a10:	str	r1, [fp, #-28]	; 0xffffffe4
   20a14:	str	r2, [fp, #-32]	; 0xffffffe0
   20a18:	str	r3, [fp, #-36]	; 0xffffffdc
   20a1c:	vstr	d16, [sp, #48]	; 0x30
   20a20:	ldr	r0, [fp, #8]
   20a24:	vstr	d16, [r0]
   20a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20a2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a34:	str	ip, [sp, #28]
   20a38:	bl	22358 <main@@Base+0xbe70>
   20a3c:	str	r0, [fp, #-28]	; 0xffffffe4
   20a40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20a48:	cmp	r0, r1
   20a4c:	bne	20a5c <main@@Base+0xa574>
   20a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20a54:	str	r0, [fp, #-20]	; 0xffffffec
   20a58:	b	20bd0 <main@@Base+0xa6e8>
   20a5c:	b	20a60 <main@@Base+0xa578>
   20a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20a64:	str	r0, [fp, #-40]	; 0xffffffd8
   20a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20a6c:	ldr	r0, [r0]
   20a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20a74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20a78:	str	r2, [fp, #-44]	; 0xffffffd4
   20a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20a80:	str	r0, [sp, #24]
   20a84:	mov	r0, r1
   20a88:	mov	r1, r2
   20a8c:	mov	r2, r3
   20a90:	add	r3, sp, #36	; 0x24
   20a94:	add	ip, sp, #40	; 0x28
   20a98:	str	ip, [sp]
   20a9c:	add	ip, sp, #32
   20aa0:	str	ip, [sp, #4]
   20aa4:	ldr	ip, [sp, #24]
   20aa8:	blx	ip
   20aac:	str	r0, [fp, #-28]	; 0xffffffe4
   20ab0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ab4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20ab8:	cmp	r0, r1
   20abc:	bne	20acc <main@@Base+0xa5e4>
   20ac0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ac4:	str	r0, [fp, #-20]	; 0xffffffec
   20ac8:	b	20bd0 <main@@Base+0xa6e8>
   20acc:	b	20ad0 <main@@Base+0xa5e8>
   20ad0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ad4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20ad8:	cmp	r0, r1
   20adc:	movw	r0, #0
   20ae0:	str	r0, [sp, #20]
   20ae4:	bne	20b0c <main@@Base+0xa624>
   20ae8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20aec:	add	r1, r0, #4
   20af0:	str	r1, [fp, #-40]	; 0xffffffd8
   20af4:	ldr	r0, [r0, #4]
   20af8:	movw	r1, #0
   20afc:	cmp	r0, r1
   20b00:	movw	r0, #0
   20b04:	movne	r0, #1
   20b08:	str	r0, [sp, #20]
   20b0c:	ldr	r0, [sp, #20]
   20b10:	tst	r0, #1
   20b14:	bne	20a68 <main@@Base+0xa580>
   20b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20b1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20b20:	cmp	r0, r1
   20b24:	bne	20b44 <main@@Base+0xa65c>
   20b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20b2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20b30:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20b34:	movw	r3, #23
   20b38:	bl	33158 <flatcc_json_parser_set_error@@Base>
   20b3c:	str	r0, [fp, #-20]	; 0xffffffec
   20b40:	b	20bd0 <main@@Base+0xa6e8>
   20b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20b48:	mov	r1, r0
   20b4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20b54:	ldr	ip, [sp, #36]	; 0x24
   20b58:	ldr	lr, [sp, #40]	; 0x28
   20b5c:	ldr	r4, [sp, #44]	; 0x2c
   20b60:	mov	r5, sp
   20b64:	add	r6, sp, #48	; 0x30
   20b68:	str	r6, [r5, #8]
   20b6c:	str	r4, [r5, #4]
   20b70:	str	lr, [r5]
   20b74:	str	r0, [sp, #16]
   20b78:	mov	r0, r2
   20b7c:	str	r1, [sp, #12]
   20b80:	mov	r1, r3
   20b84:	ldr	r2, [sp, #16]
   20b88:	mov	r3, ip
   20b8c:	bl	26ed0 <main@@Base+0x109e8>
   20b90:	ldr	r1, [sp, #12]
   20b94:	cmp	r1, r0
   20b98:	bne	20ba8 <main@@Base+0xa6c0>
   20b9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20ba0:	str	r0, [fp, #-20]	; 0xffffffec
   20ba4:	b	20bd0 <main@@Base+0xa6e8>
   20ba8:	vldr	d16, [sp, #48]	; 0x30
   20bac:	ldr	r0, [fp, #8]
   20bb0:	vldr	d17, [r0]
   20bb4:	vadd.f64	d16, d17, d16
   20bb8:	vstr	d16, [r0]
   20bbc:	ldr	r0, [sp, #32]
   20bc0:	cmp	r0, #0
   20bc4:	bne	20a60 <main@@Base+0xa578>
   20bc8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20bcc:	str	r0, [fp, #-20]	; 0xffffffec
   20bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20bd4:	sub	sp, fp, #16
   20bd8:	pop	{r4, r5, r6, sl, fp, pc}
   20bdc:	nop	{0}
	...
   20be8:	push	{fp, lr}
   20bec:	mov	fp, sp
   20bf0:	sub	sp, sp, #16
   20bf4:	str	r0, [fp, #-4]
   20bf8:	vstr	d0, [sp]
   20bfc:	vldr	d0, [sp]
   20c00:	bl	26f54 <main@@Base+0x10a6c>
   20c04:	ldr	r0, [fp, #-4]
   20c08:	vstr	d0, [r0]
   20c0c:	mov	sp, fp
   20c10:	pop	{fp, pc}
   20c14:	push	{fp, lr}
   20c18:	mov	fp, sp
   20c1c:	sub	sp, sp, #24
   20c20:	str	r0, [fp, #-8]
   20c24:	str	r1, [sp, #12]
   20c28:	str	r2, [sp, #8]
   20c2c:	str	r3, [sp, #4]
   20c30:	ldr	r0, [fp, #-8]
   20c34:	ldr	r1, [sp, #12]
   20c38:	ldr	r2, [sp, #8]
   20c3c:	bl	20d78 <main@@Base+0xa890>
   20c40:	str	r0, [sp, #12]
   20c44:	ldr	r0, [sp, #12]
   20c48:	ldr	r1, [sp, #8]
   20c4c:	cmp	r0, r1
   20c50:	bne	20c6c <main@@Base+0xa784>
   20c54:	ldr	r0, [sp, #4]
   20c58:	movw	r1, #0
   20c5c:	str	r1, [r0]
   20c60:	ldr	r0, [sp, #12]
   20c64:	str	r0, [fp, #-4]
   20c68:	b	20d6c <main@@Base+0xa884>
   20c6c:	ldr	r0, [sp, #12]
   20c70:	ldrb	r0, [r0]
   20c74:	cmp	r0, #44	; 0x2c
   20c78:	beq	20cd0 <main@@Base+0xa7e8>
   20c7c:	ldr	r0, [sp, #4]
   20c80:	movw	r1, #0
   20c84:	str	r1, [r0]
   20c88:	ldr	r0, [sp, #12]
   20c8c:	ldrb	r0, [r0]
   20c90:	cmp	r0, #125	; 0x7d
   20c94:	beq	20cb4 <main@@Base+0xa7cc>
   20c98:	ldr	r0, [fp, #-8]
   20c9c:	ldr	r1, [sp, #12]
   20ca0:	ldr	r2, [sp, #8]
   20ca4:	movw	r3, #10
   20ca8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   20cac:	str	r0, [fp, #-4]
   20cb0:	b	20d6c <main@@Base+0xa884>
   20cb4:	ldr	r0, [fp, #-8]
   20cb8:	ldr	r1, [sp, #12]
   20cbc:	add	r1, r1, #1
   20cc0:	ldr	r2, [sp, #8]
   20cc4:	bl	20d78 <main@@Base+0xa890>
   20cc8:	str	r0, [fp, #-4]
   20ccc:	b	20d6c <main@@Base+0xa884>
   20cd0:	ldr	r0, [fp, #-8]
   20cd4:	ldr	r1, [sp, #12]
   20cd8:	add	r1, r1, #1
   20cdc:	ldr	r2, [sp, #8]
   20ce0:	bl	20d78 <main@@Base+0xa890>
   20ce4:	str	r0, [sp, #12]
   20ce8:	ldr	r0, [sp, #12]
   20cec:	ldr	r1, [sp, #8]
   20cf0:	cmp	r0, r1
   20cf4:	bne	20d20 <main@@Base+0xa838>
   20cf8:	ldr	r0, [sp, #4]
   20cfc:	movw	r1, #0
   20d00:	str	r1, [r0]
   20d04:	ldr	r0, [fp, #-8]
   20d08:	ldr	r1, [sp, #12]
   20d0c:	ldr	r2, [sp, #8]
   20d10:	movw	r3, #10
   20d14:	bl	33158 <flatcc_json_parser_set_error@@Base>
   20d18:	str	r0, [fp, #-4]
   20d1c:	b	20d6c <main@@Base+0xa884>
   20d20:	ldr	r0, [sp, #12]
   20d24:	ldrb	r0, [r0]
   20d28:	cmp	r0, #125	; 0x7d
   20d2c:	bne	20d58 <main@@Base+0xa870>
   20d30:	ldr	r0, [sp, #4]
   20d34:	movw	r1, #0
   20d38:	str	r1, [r0]
   20d3c:	ldr	r0, [fp, #-8]
   20d40:	ldr	r1, [sp, #12]
   20d44:	add	r1, r1, #1
   20d48:	ldr	r2, [sp, #8]
   20d4c:	bl	20d78 <main@@Base+0xa890>
   20d50:	str	r0, [fp, #-4]
   20d54:	b	20d6c <main@@Base+0xa884>
   20d58:	ldr	r0, [sp, #4]
   20d5c:	movw	r1, #1
   20d60:	str	r1, [r0]
   20d64:	ldr	r0, [sp, #12]
   20d68:	str	r0, [fp, #-4]
   20d6c:	ldr	r0, [fp, #-4]
   20d70:	mov	sp, fp
   20d74:	pop	{fp, pc}
   20d78:	push	{fp, lr}
   20d7c:	mov	fp, sp
   20d80:	sub	sp, sp, #16
   20d84:	str	r0, [sp, #8]
   20d88:	str	r1, [sp, #4]
   20d8c:	str	r2, [sp]
   20d90:	ldr	r0, [sp]
   20d94:	ldr	r1, [sp, #4]
   20d98:	sub	r0, r0, r1
   20d9c:	cmp	r0, #1
   20da0:	ble	20df4 <main@@Base+0xa90c>
   20da4:	ldr	r0, [sp, #4]
   20da8:	ldrb	r0, [r0]
   20dac:	cmp	r0, #32
   20db0:	ble	20dc0 <main@@Base+0xa8d8>
   20db4:	ldr	r0, [sp, #4]
   20db8:	str	r0, [fp, #-4]
   20dbc:	b	20e08 <main@@Base+0xa920>
   20dc0:	ldr	r0, [sp, #4]
   20dc4:	ldrb	r0, [r0]
   20dc8:	cmp	r0, #32
   20dcc:	bne	20df0 <main@@Base+0xa908>
   20dd0:	ldr	r0, [sp, #4]
   20dd4:	ldrb	r0, [r0, #1]
   20dd8:	cmp	r0, #32
   20ddc:	ble	20df0 <main@@Base+0xa908>
   20de0:	ldr	r0, [sp, #4]
   20de4:	add	r0, r0, #1
   20de8:	str	r0, [fp, #-4]
   20dec:	b	20e08 <main@@Base+0xa920>
   20df0:	b	20df4 <main@@Base+0xa90c>
   20df4:	ldr	r0, [sp, #8]
   20df8:	ldr	r1, [sp, #4]
   20dfc:	ldr	r2, [sp]
   20e00:	bl	332d8 <flatcc_json_parser_space_ext@@Base>
   20e04:	str	r0, [fp, #-4]
   20e08:	ldr	r0, [fp, #-4]
   20e0c:	mov	sp, fp
   20e10:	pop	{fp, pc}
   20e14:	sub	sp, sp, #24
   20e18:	str	r0, [sp, #20]
   20e1c:	str	r1, [sp, #16]
   20e20:	mov	r0, #0
   20e24:	str	r0, [sp, #12]
   20e28:	str	r0, [sp, #8]
   20e2c:	ldr	r0, [sp, #16]
   20e30:	ldr	r1, [sp, #20]
   20e34:	sub	r0, r0, r1
   20e38:	str	r0, [sp, #4]
   20e3c:	ldr	r0, [sp, #4]
   20e40:	cmp	r0, #8
   20e44:	bls	20e50 <main@@Base+0xa968>
   20e48:	movw	r0, #8
   20e4c:	str	r0, [sp, #4]
   20e50:	ldr	r0, [sp, #4]
   20e54:	cmp	r0, #8
   20e58:	str	r0, [sp]
   20e5c:	bhi	20f78 <main@@Base+0xaa90>
   20e60:	add	r0, pc, #8
   20e64:	ldr	r1, [sp]
   20e68:	ldr	r2, [r0, r1, lsl #2]
   20e6c:	add	pc, r0, r2
   20e70:	andeq	r0, r0, r4, lsl #2
   20e74:	andeq	r0, r0, r8, ror #1
   20e78:	andeq	r0, r0, ip, asr #1
   20e7c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   20e80:	muleq	r0, r4, r0
   20e84:	andeq	r0, r0, r8, ror r0
   20e88:	andeq	r0, r0, ip, asr r0
   20e8c:	andeq	r0, r0, r0, asr #32
   20e90:	andeq	r0, r0, r4, lsr #32
   20e94:	ldr	r0, [sp, #20]
   20e98:	ldrb	r0, [r0, #7]
   20e9c:	ldr	r1, [sp, #8]
   20ea0:	ldr	r2, [sp, #12]
   20ea4:	orr	r0, r1, r0
   20ea8:	str	r2, [sp, #12]
   20eac:	str	r0, [sp, #8]
   20eb0:	ldr	r0, [sp, #20]
   20eb4:	ldrb	r0, [r0, #6]
   20eb8:	ldr	r1, [sp, #8]
   20ebc:	ldr	r2, [sp, #12]
   20ec0:	orr	r0, r1, r0, lsl #8
   20ec4:	str	r2, [sp, #12]
   20ec8:	str	r0, [sp, #8]
   20ecc:	ldr	r0, [sp, #20]
   20ed0:	ldrb	r0, [r0, #5]
   20ed4:	ldr	r1, [sp, #8]
   20ed8:	ldr	r2, [sp, #12]
   20edc:	orr	r0, r1, r0, lsl #16
   20ee0:	str	r2, [sp, #12]
   20ee4:	str	r0, [sp, #8]
   20ee8:	ldr	r0, [sp, #20]
   20eec:	ldrb	r0, [r0, #4]
   20ef0:	ldr	r1, [sp, #8]
   20ef4:	ldr	r2, [sp, #12]
   20ef8:	orr	r0, r1, r0, lsl #24
   20efc:	str	r2, [sp, #12]
   20f00:	str	r0, [sp, #8]
   20f04:	ldr	r0, [sp, #20]
   20f08:	ldrb	r0, [r0, #3]
   20f0c:	ldr	r1, [sp, #8]
   20f10:	ldr	r2, [sp, #12]
   20f14:	orr	r0, r2, r0
   20f18:	str	r1, [sp, #8]
   20f1c:	str	r0, [sp, #12]
   20f20:	ldr	r0, [sp, #20]
   20f24:	ldrb	r0, [r0, #2]
   20f28:	ldr	r1, [sp, #8]
   20f2c:	ldr	r2, [sp, #12]
   20f30:	orr	r0, r2, r0, lsl #8
   20f34:	str	r1, [sp, #8]
   20f38:	str	r0, [sp, #12]
   20f3c:	ldr	r0, [sp, #20]
   20f40:	ldrb	r0, [r0, #1]
   20f44:	ldr	r1, [sp, #8]
   20f48:	ldr	r2, [sp, #12]
   20f4c:	orr	r0, r2, r0, lsl #16
   20f50:	str	r1, [sp, #8]
   20f54:	str	r0, [sp, #12]
   20f58:	ldr	r0, [sp, #20]
   20f5c:	ldrb	r0, [r0]
   20f60:	ldr	r1, [sp, #8]
   20f64:	ldr	r2, [sp, #12]
   20f68:	orr	r0, r2, r0, lsl #24
   20f6c:	str	r1, [sp, #8]
   20f70:	str	r0, [sp, #12]
   20f74:	b	20f78 <main@@Base+0xaa90>
   20f78:	ldr	r0, [sp, #8]
   20f7c:	ldr	r1, [sp, #12]
   20f80:	add	sp, sp, #24
   20f84:	bx	lr
   20f88:	sub	sp, sp, #24
   20f8c:	str	r0, [sp, #16]
   20f90:	str	r1, [sp, #12]
   20f94:	str	r2, [sp, #8]
   20f98:	str	r3, [sp, #4]
   20f9c:	ldr	r0, [sp, #12]
   20fa0:	str	r0, [sp]
   20fa4:	ldr	r0, [sp, #8]
   20fa8:	ldr	r1, [sp, #12]
   20fac:	sub	r0, r0, r1
   20fb0:	ldr	r1, [sp, #4]
   20fb4:	cmp	r0, r1
   20fb8:	bgt	20fc8 <main@@Base+0xaae0>
   20fbc:	ldr	r0, [sp]
   20fc0:	str	r0, [sp, #20]
   20fc4:	b	21000 <main@@Base+0xab18>
   20fc8:	ldr	r0, [sp, #12]
   20fcc:	ldr	r1, [sp, #4]
   20fd0:	add	r0, r0, r1
   20fd4:	ldrb	r0, [r0]
   20fd8:	cmp	r0, #46	; 0x2e
   20fdc:	beq	20fec <main@@Base+0xab04>
   20fe0:	ldr	r0, [sp]
   20fe4:	str	r0, [sp, #20]
   20fe8:	b	21000 <main@@Base+0xab18>
   20fec:	ldr	r0, [sp, #12]
   20ff0:	ldr	r1, [sp, #4]
   20ff4:	add	r0, r0, r1
   20ff8:	add	r0, r0, #1
   20ffc:	str	r0, [sp, #20]
   21000:	ldr	r0, [sp, #20]
   21004:	add	sp, sp, #24
   21008:	bx	lr
   2100c:	push	{fp, lr}
   21010:	mov	fp, sp
   21014:	sub	sp, sp, #64	; 0x40
   21018:	ldr	ip, [fp, #12]
   2101c:	ldr	lr, [fp, #8]
   21020:	str	r0, [fp, #-8]
   21024:	str	r1, [fp, #-12]
   21028:	str	r2, [fp, #-16]
   2102c:	str	r3, [fp, #-20]	; 0xffffffec
   21030:	ldr	r0, [fp, #-12]
   21034:	str	r0, [fp, #-24]	; 0xffffffe8
   21038:	ldr	r0, [fp, #-12]
   2103c:	ldr	r1, [fp, #-16]
   21040:	str	ip, [sp, #20]
   21044:	str	lr, [sp, #16]
   21048:	bl	1bc60 <main@@Base+0x5778>
   2104c:	str	r1, [sp, #28]
   21050:	str	r0, [sp, #24]
   21054:	ldr	r0, [sp, #24]
   21058:	ldr	r1, [sp, #28]
   2105c:	movw	r2, #20577	; 0x5061
   21060:	movt	r2, #18798	; 0x496e
   21064:	eor	r1, r1, r2
   21068:	movw	r2, #28276	; 0x6e74
   2106c:	movt	r2, #29285	; 0x7265
   21070:	eor	r0, r0, r2
   21074:	orr	r0, r0, r1
   21078:	cmp	r0, #0
   2107c:	bne	2119c <main@@Base+0xacb4>
   21080:	b	21084 <main@@Base+0xab9c>
   21084:	ldr	r0, [fp, #-12]
   21088:	add	r0, r0, #8
   2108c:	str	r0, [fp, #-12]
   21090:	ldr	r0, [fp, #-12]
   21094:	ldr	r1, [fp, #-16]
   21098:	bl	1bc60 <main@@Base+0x5778>
   2109c:	str	r1, [sp, #28]
   210a0:	str	r0, [sp, #24]
   210a4:	ldr	r0, [sp, #24]
   210a8:	ldr	r1, [sp, #28]
   210ac:	movw	r2, #28005	; 0x6d65
   210b0:	movt	r2, #20065	; 0x4e61
   210b4:	eor	r1, r1, r2
   210b8:	movw	r2, #24931	; 0x6163
   210bc:	movt	r2, #29552	; 0x7370
   210c0:	eor	r0, r0, r2
   210c4:	orr	r0, r0, r1
   210c8:	cmp	r0, #0
   210cc:	bne	2118c <main@@Base+0xaca4>
   210d0:	b	210d4 <main@@Base+0xabec>
   210d4:	ldr	r0, [fp, #-12]
   210d8:	add	r0, r0, #8
   210dc:	str	r0, [fp, #-12]
   210e0:	ldr	r0, [fp, #-12]
   210e4:	ldr	r1, [fp, #-16]
   210e8:	bl	1bc60 <main@@Base+0x5778>
   210ec:	str	r1, [sp, #28]
   210f0:	str	r0, [sp, #24]
   210f4:	ldrb	r0, [sp, #31]
   210f8:	mov	r1, #1694498816	; 0x65000000
   210fc:	teq	r1, r0, lsl #24
   21100:	bne	2117c <main@@Base+0xac94>
   21104:	b	21108 <main@@Base+0xac20>
   21108:	ldr	r0, [fp, #-8]
   2110c:	ldr	r1, [fp, #-12]
   21110:	str	r1, [fp, #-28]	; 0xffffffe4
   21114:	ldr	r2, [fp, #-16]
   21118:	ldr	r3, [fp, #12]
   2111c:	movw	ip, #1
   21120:	str	r3, [sp, #12]
   21124:	mov	r3, ip
   21128:	ldr	ip, [sp, #12]
   2112c:	str	ip, [sp]
   21130:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21134:	str	r0, [fp, #-12]
   21138:	ldr	r0, [fp, #-12]
   2113c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21140:	cmp	r0, r1
   21144:	beq	2116c <main@@Base+0xac84>
   21148:	ldr	r0, [fp, #8]
   2114c:	mov	r1, #0
   21150:	str	r1, [r0, #4]
   21154:	mov	r1, #1
   21158:	str	r1, [r0]
   2115c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21160:	movw	r1, #0
   21164:	str	r1, [r0]
   21168:	b	21178 <main@@Base+0xac90>
   2116c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21170:	str	r0, [fp, #-4]
   21174:	b	2123c <main@@Base+0xad54>
   21178:	b	21188 <main@@Base+0xaca0>
   2117c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21180:	str	r0, [fp, #-4]
   21184:	b	2123c <main@@Base+0xad54>
   21188:	b	21198 <main@@Base+0xacb0>
   2118c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21190:	str	r0, [fp, #-4]
   21194:	b	2123c <main@@Base+0xad54>
   21198:	b	21234 <main@@Base+0xad4c>
   2119c:	ldr	r0, [sp, #28]
   211a0:	movw	r1, #20037	; 0x4e45
   211a4:	movt	r1, #20047	; 0x4e4f
   211a8:	teq	r0, r1
   211ac:	bne	21224 <main@@Base+0xad3c>
   211b0:	b	211b4 <main@@Base+0xaccc>
   211b4:	ldr	r0, [fp, #-8]
   211b8:	ldr	r1, [fp, #-12]
   211bc:	str	r1, [fp, #-28]	; 0xffffffe4
   211c0:	ldr	r2, [fp, #-16]
   211c4:	ldr	r3, [fp, #12]
   211c8:	movw	ip, #4
   211cc:	str	r3, [sp, #8]
   211d0:	mov	r3, ip
   211d4:	ldr	ip, [sp, #8]
   211d8:	str	ip, [sp]
   211dc:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   211e0:	str	r0, [fp, #-12]
   211e4:	ldr	r0, [fp, #-12]
   211e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   211ec:	cmp	r0, r1
   211f0:	beq	21214 <main@@Base+0xad2c>
   211f4:	ldr	r0, [fp, #8]
   211f8:	mov	r1, #0
   211fc:	str	r1, [r0, #4]
   21200:	str	r1, [r0]
   21204:	ldr	r0, [fp, #-20]	; 0xffffffec
   21208:	movw	r1, #0
   2120c:	str	r1, [r0]
   21210:	b	21220 <main@@Base+0xad38>
   21214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21218:	str	r0, [fp, #-4]
   2121c:	b	2123c <main@@Base+0xad54>
   21220:	b	21230 <main@@Base+0xad48>
   21224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21228:	str	r0, [fp, #-4]
   2122c:	b	2123c <main@@Base+0xad54>
   21230:	b	21234 <main@@Base+0xad4c>
   21234:	ldr	r0, [fp, #-12]
   21238:	str	r0, [fp, #-4]
   2123c:	ldr	r0, [fp, #-4]
   21240:	mov	sp, fp
   21244:	pop	{fp, pc}
   21248:	push	{fp, lr}
   2124c:	mov	fp, sp
   21250:	sub	sp, sp, #64	; 0x40
   21254:	ldr	ip, [fp, #12]
   21258:	ldr	lr, [fp, #8]
   2125c:	str	r0, [fp, #-8]
   21260:	str	r1, [fp, #-12]
   21264:	str	r2, [fp, #-16]
   21268:	str	r3, [fp, #-20]	; 0xffffffec
   2126c:	ldr	r0, [fp, #-12]
   21270:	str	r0, [fp, #-24]	; 0xffffffe8
   21274:	ldr	r0, [fp, #-12]
   21278:	ldr	r1, [fp, #-16]
   2127c:	str	ip, [sp, #20]
   21280:	str	lr, [sp, #16]
   21284:	bl	1bc60 <main@@Base+0x5778>
   21288:	str	r1, [sp, #28]
   2128c:	str	r0, [sp, #24]
   21290:	ldr	r0, [sp, #28]
   21294:	movw	r1, #30769	; 0x7831
   21298:	movt	r1, #26725	; 0x6865
   2129c:	cmp	r0, r1
   212a0:	bhi	21344 <main@@Base+0xae5c>
   212a4:	b	212a8 <main@@Base+0xadc0>
   212a8:	ldr	r0, [sp, #28]
   212ac:	movw	r1, #30769	; 0x7831
   212b0:	movt	r1, #26725	; 0x6865
   212b4:	teq	r0, r1
   212b8:	bne	21334 <main@@Base+0xae4c>
   212bc:	b	212c0 <main@@Base+0xadd8>
   212c0:	ldr	r0, [fp, #-8]
   212c4:	ldr	r1, [fp, #-12]
   212c8:	str	r1, [fp, #-28]	; 0xffffffe4
   212cc:	ldr	r2, [fp, #-16]
   212d0:	ldr	r3, [fp, #12]
   212d4:	movw	ip, #4
   212d8:	str	r3, [sp, #12]
   212dc:	mov	r3, ip
   212e0:	ldr	ip, [sp, #12]
   212e4:	str	ip, [sp]
   212e8:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   212ec:	str	r0, [fp, #-12]
   212f0:	ldr	r0, [fp, #-12]
   212f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   212f8:	cmp	r0, r1
   212fc:	beq	21324 <main@@Base+0xae3c>
   21300:	ldr	r0, [fp, #8]
   21304:	mov	r1, #0
   21308:	str	r1, [r0, #4]
   2130c:	mov	r1, #3
   21310:	str	r1, [r0]
   21314:	ldr	r0, [fp, #-20]	; 0xffffffec
   21318:	movw	r1, #0
   2131c:	str	r1, [r0]
   21320:	b	21330 <main@@Base+0xae48>
   21324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21328:	str	r0, [fp, #-4]
   2132c:	b	21494 <main@@Base+0xafac>
   21330:	b	21340 <main@@Base+0xae58>
   21334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21338:	str	r0, [fp, #-4]
   2133c:	b	21494 <main@@Base+0xafac>
   21340:	b	2148c <main@@Base+0xafa4>
   21344:	ldrh	r0, [sp, #26]
   21348:	ldr	r1, [sp, #28]
   2134c:	movw	r2, #26725	; 0x6865
   21350:	eor	r2, r2, r1, lsr #16
   21354:	orr	r0, r0, r1, lsl #16
   21358:	movw	r1, #25959	; 0x6567
   2135c:	movt	r1, #30830	; 0x786e
   21360:	eor	r0, r0, r1
   21364:	orr	r0, r0, r2
   21368:	cmp	r0, #0
   2136c:	bne	213e8 <main@@Base+0xaf00>
   21370:	b	21374 <main@@Base+0xae8c>
   21374:	ldr	r0, [fp, #-8]
   21378:	ldr	r1, [fp, #-12]
   2137c:	str	r1, [fp, #-28]	; 0xffffffe4
   21380:	ldr	r2, [fp, #-16]
   21384:	ldr	r3, [fp, #12]
   21388:	movw	ip, #6
   2138c:	str	r3, [sp, #8]
   21390:	mov	r3, ip
   21394:	ldr	ip, [sp, #8]
   21398:	str	ip, [sp]
   2139c:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   213a0:	str	r0, [fp, #-12]
   213a4:	ldr	r0, [fp, #-12]
   213a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   213ac:	cmp	r0, r1
   213b0:	beq	213d8 <main@@Base+0xaef0>
   213b4:	ldr	r0, [fp, #8]
   213b8:	mvn	r1, #0
   213bc:	str	r1, [r0, #4]
   213c0:	mvn	r1, #1
   213c4:	str	r1, [r0]
   213c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   213cc:	movw	r1, #1
   213d0:	str	r1, [r0]
   213d4:	b	213e4 <main@@Base+0xaefc>
   213d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   213dc:	str	r0, [fp, #-4]
   213e0:	b	21494 <main@@Base+0xafac>
   213e4:	b	21488 <main@@Base+0xafa0>
   213e8:	ldr	r0, [sp, #28]
   213ec:	movw	r1, #30770	; 0x7832
   213f0:	movt	r1, #26725	; 0x6865
   213f4:	teq	r0, r1
   213f8:	bne	21478 <main@@Base+0xaf90>
   213fc:	b	21400 <main@@Base+0xaf18>
   21400:	ldr	r0, [fp, #-8]
   21404:	ldr	r1, [fp, #-12]
   21408:	str	r1, [fp, #-28]	; 0xffffffe4
   2140c:	ldr	r2, [fp, #-16]
   21410:	ldr	r3, [fp, #12]
   21414:	movw	ip, #4
   21418:	str	r3, [sp, #4]
   2141c:	mov	r3, ip
   21420:	ldr	ip, [sp, #4]
   21424:	str	ip, [sp]
   21428:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   2142c:	str	r0, [fp, #-12]
   21430:	ldr	r0, [fp, #-12]
   21434:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21438:	cmp	r0, r1
   2143c:	beq	21468 <main@@Base+0xaf80>
   21440:	ldr	r0, [fp, #8]
   21444:	mov	r1, #0
   21448:	str	r1, [r0, #4]
   2144c:	movw	r1, #48815	; 0xbeaf
   21450:	movt	r1, #32431	; 0x7eaf
   21454:	str	r1, [r0]
   21458:	ldr	r0, [fp, #-20]	; 0xffffffec
   2145c:	movw	r1, #0
   21460:	str	r1, [r0]
   21464:	b	21474 <main@@Base+0xaf8c>
   21468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2146c:	str	r0, [fp, #-4]
   21470:	b	21494 <main@@Base+0xafac>
   21474:	b	21484 <main@@Base+0xaf9c>
   21478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2147c:	str	r0, [fp, #-4]
   21480:	b	21494 <main@@Base+0xafac>
   21484:	b	21488 <main@@Base+0xafa0>
   21488:	b	2148c <main@@Base+0xafa4>
   2148c:	ldr	r0, [fp, #-12]
   21490:	str	r0, [fp, #-4]
   21494:	ldr	r0, [fp, #-4]
   21498:	mov	sp, fp
   2149c:	pop	{fp, pc}
   214a0:	push	{fp, lr}
   214a4:	mov	fp, sp
   214a8:	sub	sp, sp, #72	; 0x48
   214ac:	ldr	ip, [fp, #12]
   214b0:	ldr	lr, [fp, #8]
   214b4:	str	r0, [fp, #-8]
   214b8:	str	r1, [fp, #-12]
   214bc:	str	r2, [fp, #-16]
   214c0:	str	r3, [fp, #-20]	; 0xffffffec
   214c4:	ldr	r0, [fp, #-12]
   214c8:	str	r0, [fp, #-24]	; 0xffffffe8
   214cc:	ldr	r0, [fp, #-12]
   214d0:	ldr	r1, [fp, #-16]
   214d4:	str	ip, [sp, #28]
   214d8:	str	lr, [sp, #24]
   214dc:	bl	1bc60 <main@@Base+0x5778>
   214e0:	str	r1, [sp, #36]	; 0x24
   214e4:	str	r0, [sp, #32]
   214e8:	ldr	r0, [sp, #36]	; 0x24
   214ec:	movw	r1, #29745	; 0x7431
   214f0:	movt	r1, #26990	; 0x696e
   214f4:	cmp	r0, r1
   214f8:	bhi	2159c <main@@Base+0xb0b4>
   214fc:	b	21500 <main@@Base+0xb018>
   21500:	ldr	r0, [sp, #36]	; 0x24
   21504:	movw	r1, #29745	; 0x7431
   21508:	movt	r1, #26990	; 0x696e
   2150c:	teq	r0, r1
   21510:	bne	2158c <main@@Base+0xb0a4>
   21514:	b	21518 <main@@Base+0xb030>
   21518:	ldr	r0, [fp, #-8]
   2151c:	ldr	r1, [fp, #-12]
   21520:	str	r1, [fp, #-28]	; 0xffffffe4
   21524:	ldr	r2, [fp, #-16]
   21528:	ldr	r3, [fp, #12]
   2152c:	movw	ip, #4
   21530:	str	r3, [sp, #20]
   21534:	mov	r3, ip
   21538:	ldr	ip, [sp, #20]
   2153c:	str	ip, [sp]
   21540:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21544:	str	r0, [fp, #-12]
   21548:	ldr	r0, [fp, #-12]
   2154c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21550:	cmp	r0, r1
   21554:	beq	2157c <main@@Base+0xb094>
   21558:	ldr	r0, [fp, #8]
   2155c:	mov	r1, #0
   21560:	str	r1, [r0, #4]
   21564:	mov	r1, #2
   21568:	str	r1, [r0]
   2156c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21570:	movw	r1, #0
   21574:	str	r1, [r0]
   21578:	b	21588 <main@@Base+0xb0a0>
   2157c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21580:	str	r0, [fp, #-4]
   21584:	b	217cc <main@@Base+0xb2e4>
   21588:	b	21598 <main@@Base+0xb0b0>
   2158c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21590:	str	r0, [fp, #-4]
   21594:	b	217cc <main@@Base+0xb2e4>
   21598:	b	217c4 <main@@Base+0xb2dc>
   2159c:	ldr	r0, [sp, #32]
   215a0:	ldr	r1, [sp, #36]	; 0x24
   215a4:	movw	r2, #65535	; 0xffff
   215a8:	movt	r2, #25958	; 0x6566
   215ac:	subs	r0, r2, r0
   215b0:	movw	r2, #29806	; 0x746e
   215b4:	movt	r2, #26990	; 0x696e
   215b8:	sbcs	r1, r2, r1
   215bc:	bcc	21660 <main@@Base+0xb178>
   215c0:	b	215c4 <main@@Base+0xb0dc>
   215c4:	ldr	r0, [sp, #36]	; 0x24
   215c8:	movw	r1, #29746	; 0x7432
   215cc:	movt	r1, #26990	; 0x696e
   215d0:	teq	r0, r1
   215d4:	bne	21650 <main@@Base+0xb168>
   215d8:	b	215dc <main@@Base+0xb0f4>
   215dc:	ldr	r0, [fp, #-8]
   215e0:	ldr	r1, [fp, #-12]
   215e4:	str	r1, [fp, #-28]	; 0xffffffe4
   215e8:	ldr	r2, [fp, #-16]
   215ec:	ldr	r3, [fp, #12]
   215f0:	movw	ip, #4
   215f4:	str	r3, [sp, #16]
   215f8:	mov	r3, ip
   215fc:	ldr	ip, [sp, #16]
   21600:	str	ip, [sp]
   21604:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21608:	str	r0, [fp, #-12]
   2160c:	ldr	r0, [fp, #-12]
   21610:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21614:	cmp	r0, r1
   21618:	beq	21640 <main@@Base+0xb158>
   2161c:	ldr	r0, [fp, #8]
   21620:	mov	r1, #0
   21624:	str	r1, [r0, #4]
   21628:	mov	r1, #42	; 0x2a
   2162c:	str	r1, [r0]
   21630:	ldr	r0, [fp, #-20]	; 0xffffffec
   21634:	movw	r1, #0
   21638:	str	r1, [r0]
   2163c:	b	2164c <main@@Base+0xb164>
   21640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21644:	str	r0, [fp, #-4]
   21648:	b	217cc <main@@Base+0xb2e4>
   2164c:	b	2165c <main@@Base+0xb174>
   21650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21654:	str	r0, [fp, #-4]
   21658:	b	217cc <main@@Base+0xb2e4>
   2165c:	b	217c0 <main@@Base+0xb2d8>
   21660:	ldr	r0, [sp, #32]
   21664:	ldr	r1, [sp, #36]	; 0x24
   21668:	movw	r2, #28276	; 0x6e74
   2166c:	movt	r2, #105	; 0x69
   21670:	eor	r2, r2, r1, lsr #8
   21674:	lsr	r0, r0, #8
   21678:	orr	r0, r0, r1, lsl #24
   2167c:	movw	r1, #26418	; 0x6732
   21680:	movt	r1, #28261	; 0x6e65
   21684:	eor	r0, r0, r1
   21688:	orr	r0, r0, r2
   2168c:	cmp	r0, #0
   21690:	bne	21708 <main@@Base+0xb220>
   21694:	b	21698 <main@@Base+0xb1b0>
   21698:	ldr	r0, [fp, #-8]
   2169c:	ldr	r1, [fp, #-12]
   216a0:	str	r1, [fp, #-28]	; 0xffffffe4
   216a4:	ldr	r2, [fp, #-16]
   216a8:	ldr	r3, [fp, #12]
   216ac:	movw	ip, #7
   216b0:	str	r3, [sp, #12]
   216b4:	mov	r3, ip
   216b8:	ldr	ip, [sp, #12]
   216bc:	str	ip, [sp]
   216c0:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   216c4:	str	r0, [fp, #-12]
   216c8:	ldr	r0, [fp, #-12]
   216cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   216d0:	cmp	r0, r1
   216d4:	beq	216f8 <main@@Base+0xb210>
   216d8:	ldr	r0, [fp, #8]
   216dc:	mvn	r1, #0
   216e0:	str	r1, [r0, #4]
   216e4:	str	r1, [r0]
   216e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   216ec:	movw	r1, #1
   216f0:	str	r1, [r0]
   216f4:	b	21704 <main@@Base+0xb21c>
   216f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216fc:	str	r0, [fp, #-4]
   21700:	b	217cc <main@@Base+0xb2e4>
   21704:	b	217bc <main@@Base+0xb2d4>
   21708:	ldrh	r0, [sp, #34]	; 0x22
   2170c:	ldr	r1, [sp, #36]	; 0x24
   21710:	movw	r2, #26990	; 0x696e
   21714:	eor	r2, r2, r1, lsr #16
   21718:	orr	r0, r0, r1, lsl #16
   2171c:	movw	r1, #25959	; 0x6567
   21720:	movt	r1, #29806	; 0x746e
   21724:	eor	r0, r0, r1
   21728:	orr	r0, r0, r2
   2172c:	cmp	r0, #0
   21730:	bne	217ac <main@@Base+0xb2c4>
   21734:	b	21738 <main@@Base+0xb250>
   21738:	ldr	r0, [fp, #-8]
   2173c:	ldr	r1, [fp, #-12]
   21740:	str	r1, [fp, #-28]	; 0xffffffe4
   21744:	ldr	r2, [fp, #-16]
   21748:	ldr	r3, [fp, #12]
   2174c:	movw	ip, #6
   21750:	str	r3, [sp, #8]
   21754:	mov	r3, ip
   21758:	ldr	ip, [sp, #8]
   2175c:	str	ip, [sp]
   21760:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21764:	str	r0, [fp, #-12]
   21768:	ldr	r0, [fp, #-12]
   2176c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21770:	cmp	r0, r1
   21774:	beq	2179c <main@@Base+0xb2b4>
   21778:	ldr	r0, [fp, #8]
   2177c:	mvn	r1, #0
   21780:	str	r1, [r0, #4]
   21784:	mvn	r1, #1
   21788:	str	r1, [r0]
   2178c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21790:	movw	r1, #1
   21794:	str	r1, [r0]
   21798:	b	217a8 <main@@Base+0xb2c0>
   2179c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217a0:	str	r0, [fp, #-4]
   217a4:	b	217cc <main@@Base+0xb2e4>
   217a8:	b	217b8 <main@@Base+0xb2d0>
   217ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   217b0:	str	r0, [fp, #-4]
   217b4:	b	217cc <main@@Base+0xb2e4>
   217b8:	b	217bc <main@@Base+0xb2d4>
   217bc:	b	217c0 <main@@Base+0xb2d8>
   217c0:	b	217c4 <main@@Base+0xb2dc>
   217c4:	ldr	r0, [fp, #-12]
   217c8:	str	r0, [fp, #-4]
   217cc:	ldr	r0, [fp, #-4]
   217d0:	mov	sp, fp
   217d4:	pop	{fp, pc}
   217d8:	push	{fp, lr}
   217dc:	mov	fp, sp
   217e0:	sub	sp, sp, #64	; 0x40
   217e4:	ldr	ip, [fp, #12]
   217e8:	ldr	lr, [fp, #8]
   217ec:	str	r0, [fp, #-8]
   217f0:	str	r1, [fp, #-12]
   217f4:	str	r2, [fp, #-16]
   217f8:	str	r3, [fp, #-20]	; 0xffffffec
   217fc:	ldr	r0, [fp, #-12]
   21800:	str	r0, [fp, #-24]	; 0xffffffe8
   21804:	ldr	r0, [fp, #-12]
   21808:	ldr	r1, [fp, #-16]
   2180c:	str	ip, [sp, #20]
   21810:	str	lr, [sp, #16]
   21814:	bl	1bc60 <main@@Base+0x5778>
   21818:	str	r1, [sp, #28]
   2181c:	str	r0, [sp, #24]
   21820:	ldr	r0, [sp, #28]
   21824:	movw	r1, #26417	; 0x6731
   21828:	movt	r1, #28261	; 0x6e65
   2182c:	cmp	r0, r1
   21830:	bhi	218d4 <main@@Base+0xb3ec>
   21834:	b	21838 <main@@Base+0xb350>
   21838:	ldr	r0, [sp, #28]
   2183c:	movw	r1, #26417	; 0x6731
   21840:	movt	r1, #28261	; 0x6e65
   21844:	teq	r0, r1
   21848:	bne	218c4 <main@@Base+0xb3dc>
   2184c:	b	21850 <main@@Base+0xb368>
   21850:	ldr	r0, [fp, #-8]
   21854:	ldr	r1, [fp, #-12]
   21858:	str	r1, [fp, #-28]	; 0xffffffe4
   2185c:	ldr	r2, [fp, #-16]
   21860:	ldr	r3, [fp, #12]
   21864:	movw	ip, #4
   21868:	str	r3, [sp, #12]
   2186c:	mov	r3, ip
   21870:	ldr	ip, [sp, #12]
   21874:	str	ip, [sp]
   21878:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   2187c:	str	r0, [fp, #-12]
   21880:	ldr	r0, [fp, #-12]
   21884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21888:	cmp	r0, r1
   2188c:	beq	218b4 <main@@Base+0xb3cc>
   21890:	ldr	r0, [fp, #8]
   21894:	mvn	r1, #0
   21898:	str	r1, [r0, #4]
   2189c:	mvn	r1, #11
   218a0:	str	r1, [r0]
   218a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   218a8:	movw	r1, #1
   218ac:	str	r1, [r0]
   218b0:	b	218c0 <main@@Base+0xb3d8>
   218b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218b8:	str	r0, [fp, #-4]
   218bc:	b	21a08 <main@@Base+0xb520>
   218c0:	b	218d0 <main@@Base+0xb3e8>
   218c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   218c8:	str	r0, [fp, #-4]
   218cc:	b	21a08 <main@@Base+0xb520>
   218d0:	b	21a00 <main@@Base+0xb518>
   218d4:	ldr	r0, [sp, #28]
   218d8:	movw	r1, #26419	; 0x6733
   218dc:	movt	r1, #28261	; 0x6e65
   218e0:	teq	r0, r1
   218e4:	bne	21960 <main@@Base+0xb478>
   218e8:	b	218ec <main@@Base+0xb404>
   218ec:	ldr	r0, [fp, #-8]
   218f0:	ldr	r1, [fp, #-12]
   218f4:	str	r1, [fp, #-28]	; 0xffffffe4
   218f8:	ldr	r2, [fp, #-16]
   218fc:	ldr	r3, [fp, #12]
   21900:	movw	ip, #4
   21904:	str	r3, [sp, #8]
   21908:	mov	r3, ip
   2190c:	ldr	ip, [sp, #8]
   21910:	str	ip, [sp]
   21914:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21918:	str	r0, [fp, #-12]
   2191c:	ldr	r0, [fp, #-12]
   21920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21924:	cmp	r0, r1
   21928:	beq	21950 <main@@Base+0xb468>
   2192c:	ldr	r0, [fp, #8]
   21930:	mvn	r1, #0
   21934:	str	r1, [r0, #4]
   21938:	mvn	r1, #9
   2193c:	str	r1, [r0]
   21940:	ldr	r0, [fp, #-20]	; 0xffffffec
   21944:	movw	r1, #1
   21948:	str	r1, [r0]
   2194c:	b	2195c <main@@Base+0xb474>
   21950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21954:	str	r0, [fp, #-4]
   21958:	b	21a08 <main@@Base+0xb520>
   2195c:	b	219fc <main@@Base+0xb514>
   21960:	ldr	r0, [sp, #28]
   21964:	movw	r1, #26418	; 0x6732
   21968:	movt	r1, #28261	; 0x6e65
   2196c:	teq	r0, r1
   21970:	bne	219ec <main@@Base+0xb504>
   21974:	b	21978 <main@@Base+0xb490>
   21978:	ldr	r0, [fp, #-8]
   2197c:	ldr	r1, [fp, #-12]
   21980:	str	r1, [fp, #-28]	; 0xffffffe4
   21984:	ldr	r2, [fp, #-16]
   21988:	ldr	r3, [fp, #12]
   2198c:	movw	ip, #4
   21990:	str	r3, [sp, #4]
   21994:	mov	r3, ip
   21998:	ldr	ip, [sp, #4]
   2199c:	str	ip, [sp]
   219a0:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   219a4:	str	r0, [fp, #-12]
   219a8:	ldr	r0, [fp, #-12]
   219ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   219b0:	cmp	r0, r1
   219b4:	beq	219dc <main@@Base+0xb4f4>
   219b8:	ldr	r0, [fp, #8]
   219bc:	mvn	r1, #0
   219c0:	str	r1, [r0, #4]
   219c4:	mvn	r1, #10
   219c8:	str	r1, [r0]
   219cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   219d0:	movw	r1, #1
   219d4:	str	r1, [r0]
   219d8:	b	219e8 <main@@Base+0xb500>
   219dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   219e0:	str	r0, [fp, #-4]
   219e4:	b	21a08 <main@@Base+0xb520>
   219e8:	b	219f8 <main@@Base+0xb510>
   219ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   219f0:	str	r0, [fp, #-4]
   219f4:	b	21a08 <main@@Base+0xb520>
   219f8:	b	219fc <main@@Base+0xb514>
   219fc:	b	21a00 <main@@Base+0xb518>
   21a00:	ldr	r0, [fp, #-12]
   21a04:	str	r0, [fp, #-4]
   21a08:	ldr	r0, [fp, #-4]
   21a0c:	mov	sp, fp
   21a10:	pop	{fp, pc}
   21a14:	push	{fp, lr}
   21a18:	mov	fp, sp
   21a1c:	sub	sp, sp, #56	; 0x38
   21a20:	ldr	ip, [fp, #12]
   21a24:	ldr	lr, [fp, #8]
   21a28:	str	r0, [fp, #-8]
   21a2c:	str	r1, [fp, #-12]
   21a30:	str	r2, [fp, #-16]
   21a34:	str	r3, [fp, #-20]	; 0xffffffec
   21a38:	ldr	r0, [fp, #-12]
   21a3c:	str	r0, [fp, #-24]	; 0xffffffe8
   21a40:	ldr	r0, [fp, #-12]
   21a44:	ldr	r1, [fp, #-16]
   21a48:	str	ip, [sp, #12]
   21a4c:	str	lr, [sp, #8]
   21a50:	bl	1bc60 <main@@Base+0x5778>
   21a54:	str	r1, [sp, #20]
   21a58:	str	r0, [sp, #16]
   21a5c:	ldrb	r0, [sp, #23]
   21a60:	mov	r1, #2013265920	; 0x78000000
   21a64:	teq	r1, r0, lsl #24
   21a68:	bne	21ae0 <main@@Base+0xb5f8>
   21a6c:	b	21a70 <main@@Base+0xb588>
   21a70:	ldr	r0, [fp, #-8]
   21a74:	ldr	r1, [fp, #-12]
   21a78:	str	r1, [sp, #28]
   21a7c:	ldr	r2, [fp, #-16]
   21a80:	ldr	r3, [fp, #12]
   21a84:	movw	ip, #1
   21a88:	str	r3, [sp, #4]
   21a8c:	mov	r3, ip
   21a90:	ldr	ip, [sp, #4]
   21a94:	str	ip, [sp]
   21a98:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21a9c:	str	r0, [fp, #-12]
   21aa0:	ldr	r0, [fp, #-12]
   21aa4:	ldr	r1, [sp, #28]
   21aa8:	cmp	r0, r1
   21aac:	beq	21ad0 <main@@Base+0xb5e8>
   21ab0:	ldr	r0, [fp, #8]
   21ab4:	mov	r1, #0
   21ab8:	str	r1, [r0, #4]
   21abc:	str	r1, [r0]
   21ac0:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ac4:	movw	r1, #0
   21ac8:	str	r1, [r0]
   21acc:	b	21adc <main@@Base+0xb5f4>
   21ad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ad4:	str	r0, [fp, #-4]
   21ad8:	b	21af4 <main@@Base+0xb60c>
   21adc:	b	21aec <main@@Base+0xb604>
   21ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ae4:	str	r0, [fp, #-4]
   21ae8:	b	21af4 <main@@Base+0xb60c>
   21aec:	ldr	r0, [fp, #-12]
   21af0:	str	r0, [fp, #-4]
   21af4:	ldr	r0, [fp, #-4]
   21af8:	mov	sp, fp
   21afc:	pop	{fp, pc}
   21b00:	push	{fp, lr}
   21b04:	mov	fp, sp
   21b08:	sub	sp, sp, #80	; 0x50
   21b0c:	ldr	ip, [fp, #12]
   21b10:	ldr	lr, [fp, #8]
   21b14:	str	r0, [fp, #-8]
   21b18:	str	r1, [fp, #-12]
   21b1c:	str	r2, [fp, #-16]
   21b20:	str	r3, [fp, #-20]	; 0xffffffec
   21b24:	ldr	r0, [fp, #-12]
   21b28:	str	r0, [fp, #-24]	; 0xffffffe8
   21b2c:	ldr	r0, [fp, #-12]
   21b30:	ldr	r1, [fp, #-16]
   21b34:	str	ip, [sp, #36]	; 0x24
   21b38:	str	lr, [sp, #32]
   21b3c:	bl	1bc60 <main@@Base+0x5778>
   21b40:	str	r1, [sp, #44]	; 0x2c
   21b44:	str	r0, [sp, #40]	; 0x28
   21b48:	ldr	r0, [sp, #44]	; 0x2c
   21b4c:	movw	r1, #20036	; 0x4e44
   21b50:	movt	r1, #20047	; 0x4e4f
   21b54:	cmp	r0, r1
   21b58:	bhi	21d94 <main@@Base+0xb8ac>
   21b5c:	b	21b60 <main@@Base+0xb678>
   21b60:	ldr	r0, [sp, #40]	; 0x28
   21b64:	ldr	r1, [sp, #44]	; 0x2c
   21b68:	movw	r2, #28159	; 0x6dff
   21b6c:	movt	r2, #18017	; 0x4661
   21b70:	subs	r0, r2, r0
   21b74:	movw	r2, #28523	; 0x6f6b
   21b78:	movt	r2, #17007	; 0x426f
   21b7c:	sbcs	r1, r2, r1
   21b80:	bcc	21c34 <main@@Base+0xb74c>
   21b84:	b	21b88 <main@@Base+0xb6a0>
   21b88:	ldrb	r0, [sp, #43]	; 0x2b
   21b8c:	ldr	r1, [sp, #44]	; 0x2c
   21b90:	movw	r2, #27756	; 0x6c6c
   21b94:	movt	r2, #16997	; 0x4265
   21b98:	eor	r1, r1, r2
   21b9c:	eor	r0, r0, #101	; 0x65
   21ba0:	orr	r0, r1, r0, lsl #24
   21ba4:	cmp	r0, #0
   21ba8:	bne	21c24 <main@@Base+0xb73c>
   21bac:	b	21bb0 <main@@Base+0xb6c8>
   21bb0:	ldr	r0, [fp, #-8]
   21bb4:	ldr	r1, [fp, #-12]
   21bb8:	str	r1, [fp, #-28]	; 0xffffffe4
   21bbc:	ldr	r2, [fp, #-16]
   21bc0:	ldr	r3, [fp, #12]
   21bc4:	movw	ip, #5
   21bc8:	str	r3, [sp, #28]
   21bcc:	mov	r3, ip
   21bd0:	ldr	ip, [sp, #28]
   21bd4:	str	ip, [sp]
   21bd8:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21bdc:	str	r0, [fp, #-12]
   21be0:	ldr	r0, [fp, #-12]
   21be4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21be8:	cmp	r0, r1
   21bec:	beq	21c14 <main@@Base+0xb72c>
   21bf0:	ldr	r0, [fp, #8]
   21bf4:	mov	r1, #0
   21bf8:	str	r1, [r0, #4]
   21bfc:	mov	r1, #9
   21c00:	str	r1, [r0]
   21c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c08:	movw	r1, #0
   21c0c:	str	r1, [r0]
   21c10:	b	21c20 <main@@Base+0xb738>
   21c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c18:	str	r0, [fp, #-4]
   21c1c:	b	22090 <main@@Base+0xbba8>
   21c20:	b	21c30 <main@@Base+0xb748>
   21c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c28:	str	r0, [fp, #-4]
   21c2c:	b	22090 <main@@Base+0xbba8>
   21c30:	b	21d90 <main@@Base+0xb8a8>
   21c34:	ldrb	r0, [sp, #43]	; 0x2b
   21c38:	ldr	r1, [sp, #44]	; 0x2c
   21c3c:	movw	r2, #19553	; 0x4c61
   21c40:	movt	r2, #19829	; 0x4d75
   21c44:	eor	r1, r1, r2
   21c48:	eor	r0, r0, #110	; 0x6e
   21c4c:	orr	r0, r1, r0, lsl #24
   21c50:	cmp	r0, #0
   21c54:	bne	21cd0 <main@@Base+0xb7e8>
   21c58:	b	21c5c <main@@Base+0xb774>
   21c5c:	ldr	r0, [fp, #-8]
   21c60:	ldr	r1, [fp, #-12]
   21c64:	str	r1, [fp, #-28]	; 0xffffffe4
   21c68:	ldr	r2, [fp, #-16]
   21c6c:	ldr	r3, [fp, #12]
   21c70:	movw	ip, #5
   21c74:	str	r3, [sp, #24]
   21c78:	mov	r3, ip
   21c7c:	ldr	ip, [sp, #24]
   21c80:	str	ip, [sp]
   21c84:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21c88:	str	r0, [fp, #-12]
   21c8c:	ldr	r0, [fp, #-12]
   21c90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21c94:	cmp	r0, r1
   21c98:	beq	21cc0 <main@@Base+0xb7d8>
   21c9c:	ldr	r0, [fp, #8]
   21ca0:	mov	r1, #0
   21ca4:	str	r1, [r0, #4]
   21ca8:	mov	r1, #2
   21cac:	str	r1, [r0]
   21cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   21cb4:	movw	r1, #0
   21cb8:	str	r1, [r0]
   21cbc:	b	21ccc <main@@Base+0xb7e4>
   21cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21cc4:	str	r0, [fp, #-4]
   21cc8:	b	22090 <main@@Base+0xbba8>
   21ccc:	b	21d8c <main@@Base+0xb8a4>
   21cd0:	ldr	r0, [sp, #40]	; 0x28
   21cd4:	ldr	r1, [sp, #44]	; 0x2c
   21cd8:	movw	r2, #28527	; 0x6f6f
   21cdc:	movt	r2, #66	; 0x42
   21ce0:	eor	r2, r2, r1, lsr #8
   21ce4:	lsr	r0, r0, #8
   21ce8:	orr	r0, r0, r1, lsl #24
   21cec:	movw	r1, #24942	; 0x616e
   21cf0:	movt	r1, #27462	; 0x6b46
   21cf4:	eor	r0, r0, r1
   21cf8:	orr	r0, r0, r2
   21cfc:	cmp	r0, #0
   21d00:	bne	21d7c <main@@Base+0xb894>
   21d04:	b	21d08 <main@@Base+0xb820>
   21d08:	ldr	r0, [fp, #-8]
   21d0c:	ldr	r1, [fp, #-12]
   21d10:	str	r1, [fp, #-28]	; 0xffffffe4
   21d14:	ldr	r2, [fp, #-16]
   21d18:	ldr	r3, [fp, #12]
   21d1c:	movw	ip, #7
   21d20:	str	r3, [sp, #20]
   21d24:	mov	r3, ip
   21d28:	ldr	ip, [sp, #20]
   21d2c:	str	ip, [sp]
   21d30:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21d34:	str	r0, [fp, #-12]
   21d38:	ldr	r0, [fp, #-12]
   21d3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d40:	cmp	r0, r1
   21d44:	beq	21d6c <main@@Base+0xb884>
   21d48:	ldr	r0, [fp, #8]
   21d4c:	mov	r1, #0
   21d50:	str	r1, [r0, #4]
   21d54:	mov	r1, #10
   21d58:	str	r1, [r0]
   21d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   21d60:	movw	r1, #0
   21d64:	str	r1, [r0]
   21d68:	b	21d78 <main@@Base+0xb890>
   21d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d70:	str	r0, [fp, #-4]
   21d74:	b	22090 <main@@Base+0xbba8>
   21d78:	b	21d88 <main@@Base+0xb8a0>
   21d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21d80:	str	r0, [fp, #-4]
   21d84:	b	22090 <main@@Base+0xbba8>
   21d88:	b	21d8c <main@@Base+0xb8a4>
   21d8c:	b	21d90 <main@@Base+0xb8a8>
   21d90:	b	22088 <main@@Base+0xbba0>
   21d94:	ldr	r0, [sp, #40]	; 0x28
   21d98:	ldr	r1, [sp, #44]	; 0x2c
   21d9c:	mvn	r2, #-1912602624	; 0x8e000000
   21da0:	subs	r0, r2, r0
   21da4:	movw	r2, #26725	; 0x6865
   21da8:	movt	r2, #20340	; 0x4f74
   21dac:	sbcs	r1, r2, r1
   21db0:	bcc	21e50 <main@@Base+0xb968>
   21db4:	b	21db8 <main@@Base+0xb8d0>
   21db8:	ldr	r0, [sp, #44]	; 0x2c
   21dbc:	movw	r1, #20037	; 0x4e45
   21dc0:	movt	r1, #20047	; 0x4e4f
   21dc4:	teq	r0, r1
   21dc8:	bne	21e40 <main@@Base+0xb958>
   21dcc:	b	21dd0 <main@@Base+0xb8e8>
   21dd0:	ldr	r0, [fp, #-8]
   21dd4:	ldr	r1, [fp, #-12]
   21dd8:	str	r1, [fp, #-28]	; 0xffffffe4
   21ddc:	ldr	r2, [fp, #-16]
   21de0:	ldr	r3, [fp, #12]
   21de4:	movw	ip, #4
   21de8:	str	r3, [sp, #16]
   21dec:	mov	r3, ip
   21df0:	ldr	ip, [sp, #16]
   21df4:	str	ip, [sp]
   21df8:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21dfc:	str	r0, [fp, #-12]
   21e00:	ldr	r0, [fp, #-12]
   21e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21e08:	cmp	r0, r1
   21e0c:	beq	21e30 <main@@Base+0xb948>
   21e10:	ldr	r0, [fp, #8]
   21e14:	mov	r1, #0
   21e18:	str	r1, [r0, #4]
   21e1c:	str	r1, [r0]
   21e20:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e24:	movw	r1, #0
   21e28:	str	r1, [r0]
   21e2c:	b	21e3c <main@@Base+0xb954>
   21e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e34:	str	r0, [fp, #-4]
   21e38:	b	22090 <main@@Base+0xbba8>
   21e3c:	b	21e4c <main@@Base+0xb964>
   21e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21e44:	str	r0, [fp, #-4]
   21e48:	b	22090 <main@@Base+0xbba8>
   21e4c:	b	22084 <main@@Base+0xbb9c>
   21e50:	ldr	r0, [sp, #40]	; 0x28
   21e54:	ldr	r1, [sp, #44]	; 0x2c
   21e58:	movw	r2, #25963	; 0x656b
   21e5c:	movt	r2, #28282	; 0x6e7a
   21e60:	subs	r0, r2, r0
   21e64:	movw	r2, #28789	; 0x7075
   21e68:	movt	r2, #21089	; 0x5261
   21e6c:	sbcs	r1, r2, r1
   21e70:	bcc	21f24 <main@@Base+0xba3c>
   21e74:	b	21e78 <main@@Base+0xb990>
   21e78:	ldrb	r0, [sp, #43]	; 0x2b
   21e7c:	ldr	r1, [sp, #44]	; 0x2c
   21e80:	movw	r2, #26725	; 0x6865
   21e84:	movt	r2, #20340	; 0x4f74
   21e88:	eor	r1, r1, r2
   21e8c:	eor	r0, r0, #114	; 0x72
   21e90:	orr	r0, r1, r0, lsl #24
   21e94:	cmp	r0, #0
   21e98:	bne	21f14 <main@@Base+0xba2c>
   21e9c:	b	21ea0 <main@@Base+0xb9b8>
   21ea0:	ldr	r0, [fp, #-8]
   21ea4:	ldr	r1, [fp, #-12]
   21ea8:	str	r1, [fp, #-28]	; 0xffffffe4
   21eac:	ldr	r2, [fp, #-16]
   21eb0:	ldr	r3, [fp, #12]
   21eb4:	movw	ip, #5
   21eb8:	str	r3, [sp, #12]
   21ebc:	mov	r3, ip
   21ec0:	ldr	ip, [sp, #12]
   21ec4:	str	ip, [sp]
   21ec8:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21ecc:	str	r0, [fp, #-12]
   21ed0:	ldr	r0, [fp, #-12]
   21ed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21ed8:	cmp	r0, r1
   21edc:	beq	21f04 <main@@Base+0xba1c>
   21ee0:	ldr	r0, [fp, #8]
   21ee4:	mov	r1, #0
   21ee8:	str	r1, [r0, #4]
   21eec:	mov	r1, #11
   21ef0:	str	r1, [r0]
   21ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ef8:	movw	r1, #0
   21efc:	str	r1, [r0]
   21f00:	b	21f10 <main@@Base+0xba28>
   21f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f08:	str	r0, [fp, #-4]
   21f0c:	b	22090 <main@@Base+0xbba8>
   21f10:	b	21f20 <main@@Base+0xba38>
   21f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f18:	str	r0, [fp, #-4]
   21f1c:	b	22090 <main@@Base+0xbba8>
   21f20:	b	22080 <main@@Base+0xbb98>
   21f24:	ldrh	r0, [sp, #42]	; 0x2a
   21f28:	ldr	r1, [sp, #44]	; 0x2c
   21f2c:	movw	r2, #21870	; 0x556e
   21f30:	eor	r2, r2, r1, lsr #16
   21f34:	orr	r0, r0, r1, lsl #16
   21f38:	movw	r1, #25956	; 0x6564
   21f3c:	movt	r1, #30067	; 0x7573
   21f40:	eor	r0, r0, r1
   21f44:	orr	r0, r0, r2
   21f48:	cmp	r0, #0
   21f4c:	bne	21fc8 <main@@Base+0xbae0>
   21f50:	b	21f54 <main@@Base+0xba6c>
   21f54:	ldr	r0, [fp, #-8]
   21f58:	ldr	r1, [fp, #-12]
   21f5c:	str	r1, [fp, #-28]	; 0xffffffe4
   21f60:	ldr	r2, [fp, #-16]
   21f64:	ldr	r3, [fp, #12]
   21f68:	movw	ip, #6
   21f6c:	str	r3, [sp, #8]
   21f70:	mov	r3, ip
   21f74:	ldr	ip, [sp, #8]
   21f78:	str	ip, [sp]
   21f7c:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   21f80:	str	r0, [fp, #-12]
   21f84:	ldr	r0, [fp, #-12]
   21f88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f8c:	cmp	r0, r1
   21f90:	beq	21fb8 <main@@Base+0xbad0>
   21f94:	ldr	r0, [fp, #8]
   21f98:	mov	r1, #0
   21f9c:	str	r1, [r0, #4]
   21fa0:	mov	r1, #255	; 0xff
   21fa4:	str	r1, [r0]
   21fa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   21fac:	movw	r1, #0
   21fb0:	str	r1, [r0]
   21fb4:	b	21fc4 <main@@Base+0xbadc>
   21fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21fbc:	str	r0, [fp, #-4]
   21fc0:	b	22090 <main@@Base+0xbba8>
   21fc4:	b	2207c <main@@Base+0xbb94>
   21fc8:	ldr	r0, [sp, #40]	; 0x28
   21fcc:	ldr	r1, [sp, #44]	; 0x2c
   21fd0:	movw	r2, #28789	; 0x7075
   21fd4:	movt	r2, #21089	; 0x5261
   21fd8:	eor	r1, r1, r2
   21fdc:	movw	r2, #25964	; 0x656c
   21fe0:	movt	r2, #28282	; 0x6e7a
   21fe4:	eor	r0, r0, r2
   21fe8:	orr	r0, r0, r1
   21fec:	cmp	r0, #0
   21ff0:	bne	2206c <main@@Base+0xbb84>
   21ff4:	b	21ff8 <main@@Base+0xbb10>
   21ff8:	ldr	r0, [fp, #-8]
   21ffc:	ldr	r1, [fp, #-12]
   22000:	str	r1, [fp, #-28]	; 0xffffffe4
   22004:	ldr	r2, [fp, #-16]
   22008:	ldr	r3, [fp, #12]
   2200c:	movw	ip, #8
   22010:	str	r3, [sp, #4]
   22014:	mov	r3, ip
   22018:	ldr	ip, [sp, #4]
   2201c:	str	ip, [sp]
   22020:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   22024:	str	r0, [fp, #-12]
   22028:	ldr	r0, [fp, #-12]
   2202c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22030:	cmp	r0, r1
   22034:	beq	2205c <main@@Base+0xbb74>
   22038:	ldr	r0, [fp, #8]
   2203c:	mov	r1, #0
   22040:	str	r1, [r0, #4]
   22044:	mov	r1, #8
   22048:	str	r1, [r0]
   2204c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22050:	movw	r1, #0
   22054:	str	r1, [r0]
   22058:	b	22068 <main@@Base+0xbb80>
   2205c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22060:	str	r0, [fp, #-4]
   22064:	b	22090 <main@@Base+0xbba8>
   22068:	b	22078 <main@@Base+0xbb90>
   2206c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22070:	str	r0, [fp, #-4]
   22074:	b	22090 <main@@Base+0xbba8>
   22078:	b	2207c <main@@Base+0xbb94>
   2207c:	b	22080 <main@@Base+0xbb98>
   22080:	b	22084 <main@@Base+0xbb9c>
   22084:	b	22088 <main@@Base+0xbba0>
   22088:	ldr	r0, [fp, #-12]
   2208c:	str	r0, [fp, #-4]
   22090:	ldr	r0, [fp, #-4]
   22094:	mov	sp, fp
   22098:	pop	{fp, pc}
   2209c:	push	{fp, lr}
   220a0:	mov	fp, sp
   220a4:	sub	sp, sp, #64	; 0x40
   220a8:	ldr	ip, [fp, #12]
   220ac:	ldr	lr, [fp, #8]
   220b0:	str	r0, [fp, #-8]
   220b4:	str	r1, [fp, #-12]
   220b8:	str	r2, [fp, #-16]
   220bc:	str	r3, [fp, #-20]	; 0xffffffec
   220c0:	ldr	r0, [fp, #-12]
   220c4:	str	r0, [fp, #-24]	; 0xffffffe8
   220c8:	ldr	r0, [fp, #-12]
   220cc:	ldr	r1, [fp, #-16]
   220d0:	str	ip, [sp, #20]
   220d4:	str	lr, [sp, #16]
   220d8:	bl	1bc60 <main@@Base+0x5778>
   220dc:	str	r1, [sp, #28]
   220e0:	str	r0, [sp, #24]
   220e4:	ldr	r0, [sp, #28]
   220e8:	bic	r0, r0, #255	; 0xff
   220ec:	movw	r1, #28416	; 0x6f00
   220f0:	movt	r1, #18031	; 0x466f
   220f4:	teq	r0, r1
   220f8:	bne	2216c <main@@Base+0xbc84>
   220fc:	b	22100 <main@@Base+0xbc18>
   22100:	ldr	r0, [fp, #-8]
   22104:	ldr	r1, [fp, #-12]
   22108:	str	r1, [fp, #-28]	; 0xffffffe4
   2210c:	ldr	r2, [fp, #-16]
   22110:	ldr	r3, [fp, #12]
   22114:	movw	ip, #3
   22118:	str	r3, [sp, #12]
   2211c:	mov	r3, ip
   22120:	ldr	ip, [sp, #12]
   22124:	str	ip, [sp]
   22128:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   2212c:	str	r0, [fp, #-12]
   22130:	ldr	r0, [fp, #-12]
   22134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22138:	cmp	r0, r1
   2213c:	beq	22164 <main@@Base+0xbc7c>
   22140:	ldr	r0, [fp, #8]
   22144:	mov	r1, #0
   22148:	str	r1, [r0, #4]
   2214c:	mov	r1, #17
   22150:	str	r1, [r0]
   22154:	ldr	r0, [fp, #-20]	; 0xffffffec
   22158:	movw	r1, #0
   2215c:	str	r1, [r0]
   22160:	b	22168 <main@@Base+0xbc80>
   22164:	b	22174 <main@@Base+0xbc8c>
   22168:	b	22170 <main@@Base+0xbc88>
   2216c:	b	22174 <main@@Base+0xbc8c>
   22170:	b	2226c <main@@Base+0xbd84>
   22174:	ldr	r0, [sp, #24]
   22178:	ldr	r1, [sp, #28]
   2217c:	movw	r2, #25452	; 0x636c
   22180:	movt	r2, #18798	; 0x496e
   22184:	eor	r1, r1, r2
   22188:	movw	r2, #25942	; 0x6556
   2218c:	movt	r2, #30052	; 0x7564
   22190:	eor	r0, r0, r2
   22194:	orr	r0, r0, r1
   22198:	cmp	r0, #0
   2219c:	bne	2225c <main@@Base+0xbd74>
   221a0:	b	221a4 <main@@Base+0xbcbc>
   221a4:	ldr	r0, [fp, #-12]
   221a8:	add	r0, r0, #8
   221ac:	str	r0, [fp, #-12]
   221b0:	ldr	r0, [fp, #-12]
   221b4:	ldr	r1, [fp, #-16]
   221b8:	bl	1bc60 <main@@Base+0x5778>
   221bc:	str	r1, [sp, #28]
   221c0:	str	r0, [sp, #24]
   221c4:	ldrh	r0, [sp, #30]
   221c8:	movw	r1, #0
   221cc:	movt	r1, #24940	; 0x616c
   221d0:	teq	r1, r0, lsl #16
   221d4:	bne	2224c <main@@Base+0xbd64>
   221d8:	b	221dc <main@@Base+0xbcf4>
   221dc:	ldr	r0, [fp, #-8]
   221e0:	ldr	r1, [fp, #-12]
   221e4:	str	r1, [fp, #-28]	; 0xffffffe4
   221e8:	ldr	r2, [fp, #-16]
   221ec:	ldr	r3, [fp, #12]
   221f0:	movw	ip, #2
   221f4:	str	r3, [sp, #8]
   221f8:	mov	r3, ip
   221fc:	ldr	ip, [sp, #8]
   22200:	str	ip, [sp]
   22204:	bl	33f80 <flatcc_json_parser_match_constant@@Base>
   22208:	str	r0, [fp, #-12]
   2220c:	ldr	r0, [fp, #-12]
   22210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22214:	cmp	r0, r1
   22218:	beq	2223c <main@@Base+0xbd54>
   2221c:	ldr	r0, [fp, #8]
   22220:	mov	r1, #0
   22224:	str	r1, [r0, #4]
   22228:	str	r1, [r0]
   2222c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22230:	movw	r1, #0
   22234:	str	r1, [r0]
   22238:	b	22248 <main@@Base+0xbd60>
   2223c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22240:	str	r0, [fp, #-4]
   22244:	b	22274 <main@@Base+0xbd8c>
   22248:	b	22258 <main@@Base+0xbd70>
   2224c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22250:	str	r0, [fp, #-4]
   22254:	b	22274 <main@@Base+0xbd8c>
   22258:	b	22268 <main@@Base+0xbd80>
   2225c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22260:	str	r0, [fp, #-4]
   22264:	b	22274 <main@@Base+0xbd8c>
   22268:	b	2226c <main@@Base+0xbd84>
   2226c:	ldr	r0, [fp, #-12]
   22270:	str	r0, [fp, #-4]
   22274:	ldr	r0, [fp, #-4]
   22278:	mov	sp, fp
   2227c:	pop	{fp, pc}
   22280:	push	{r4, sl, fp, lr}
   22284:	add	fp, sp, #8
   22288:	sub	sp, sp, #32
   2228c:	ldr	ip, [fp, #12]
   22290:	ldr	lr, [fp, #8]
   22294:	ldr	r4, [fp, #16]
   22298:	str	r0, [fp, #-16]
   2229c:	str	r1, [sp, #20]
   222a0:	str	r2, [sp, #16]
   222a4:	str	r3, [sp, #12]
   222a8:	str	ip, [sp, #4]
   222ac:	str	lr, [sp]
   222b0:	ldr	r0, [sp, #12]
   222b4:	cmp	r0, #0
   222b8:	beq	22304 <main@@Base+0xbe1c>
   222bc:	ldr	r0, [sp]
   222c0:	ldr	r1, [sp, #4]
   222c4:	subs	r0, r0, #129	; 0x81
   222c8:	sbcs	r1, r1, #0
   222cc:	bcc	222f0 <main@@Base+0xbe08>
   222d0:	b	222d4 <main@@Base+0xbdec>
   222d4:	ldr	r0, [fp, #-16]
   222d8:	ldr	r1, [sp, #20]
   222dc:	ldr	r2, [sp, #16]
   222e0:	movw	r3, #8
   222e4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   222e8:	str	r0, [fp, #-12]
   222ec:	b	2234c <main@@Base+0xbe64>
   222f0:	ldr	r0, [sp]
   222f4:	rsb	r0, r0, #0
   222f8:	ldr	r1, [fp, #16]
   222fc:	strb	r0, [r1]
   22300:	b	22344 <main@@Base+0xbe5c>
   22304:	ldr	r0, [sp]
   22308:	ldr	r1, [sp, #4]
   2230c:	subs	r0, r0, #128	; 0x80
   22310:	sbcs	r1, r1, #0
   22314:	bcc	22338 <main@@Base+0xbe50>
   22318:	b	2231c <main@@Base+0xbe34>
   2231c:	ldr	r0, [fp, #-16]
   22320:	ldr	r1, [sp, #20]
   22324:	ldr	r2, [sp, #16]
   22328:	movw	r3, #7
   2232c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   22330:	str	r0, [fp, #-12]
   22334:	b	2234c <main@@Base+0xbe64>
   22338:	ldrb	r0, [sp]
   2233c:	ldr	r1, [fp, #16]
   22340:	strb	r0, [r1]
   22344:	ldr	r0, [sp, #20]
   22348:	str	r0, [fp, #-12]
   2234c:	ldr	r0, [fp, #-12]
   22350:	sub	sp, fp, #8
   22354:	pop	{r4, sl, fp, pc}
   22358:	push	{fp, lr}
   2235c:	mov	fp, sp
   22360:	sub	sp, sp, #16
   22364:	str	r0, [fp, #-4]
   22368:	str	r1, [sp, #8]
   2236c:	str	r2, [sp, #4]
   22370:	ldr	r0, [fp, #-4]
   22374:	ldr	r1, [sp, #8]
   22378:	ldr	r2, [sp, #4]
   2237c:	bl	1bbdc <main@@Base+0x56f4>
   22380:	str	r0, [sp, #8]
   22384:	ldr	r0, [fp, #-4]
   22388:	ldr	r1, [sp, #8]
   2238c:	ldr	r2, [sp, #4]
   22390:	bl	20d78 <main@@Base+0xa890>
   22394:	str	r0, [sp, #8]
   22398:	ldr	r0, [sp, #8]
   2239c:	mov	sp, fp
   223a0:	pop	{fp, pc}
   223a4:	sub	sp, sp, #4
   223a8:	strb	r0, [sp, #3]
   223ac:	ldrsb	r0, [sp, #3]
   223b0:	add	sp, sp, #4
   223b4:	bx	lr
   223b8:	push	{r4, sl, fp, lr}
   223bc:	add	fp, sp, #8
   223c0:	sub	sp, sp, #32
   223c4:	ldr	ip, [fp, #12]
   223c8:	ldr	lr, [fp, #8]
   223cc:	ldr	r4, [fp, #16]
   223d0:	str	r0, [fp, #-16]
   223d4:	str	r1, [sp, #20]
   223d8:	str	r2, [sp, #16]
   223dc:	str	r3, [sp, #12]
   223e0:	str	ip, [sp, #4]
   223e4:	str	lr, [sp]
   223e8:	ldr	r0, [sp, #12]
   223ec:	cmp	r0, #0
   223f0:	beq	22410 <main@@Base+0xbf28>
   223f4:	ldr	r0, [fp, #-16]
   223f8:	ldr	r1, [sp, #20]
   223fc:	ldr	r2, [sp, #16]
   22400:	movw	r3, #8
   22404:	bl	33158 <flatcc_json_parser_set_error@@Base>
   22408:	str	r0, [fp, #-12]
   2240c:	b	22458 <main@@Base+0xbf70>
   22410:	ldr	r0, [sp]
   22414:	ldr	r1, [sp, #4]
   22418:	subs	r0, r0, #256	; 0x100
   2241c:	sbcs	r1, r1, #0
   22420:	bcc	22444 <main@@Base+0xbf5c>
   22424:	b	22428 <main@@Base+0xbf40>
   22428:	ldr	r0, [fp, #-16]
   2242c:	ldr	r1, [sp, #20]
   22430:	ldr	r2, [sp, #16]
   22434:	movw	r3, #7
   22438:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2243c:	str	r0, [fp, #-12]
   22440:	b	22458 <main@@Base+0xbf70>
   22444:	ldrb	r0, [sp]
   22448:	ldr	r1, [fp, #16]
   2244c:	strb	r0, [r1]
   22450:	ldr	r0, [sp, #20]
   22454:	str	r0, [fp, #-12]
   22458:	ldr	r0, [fp, #-12]
   2245c:	sub	sp, fp, #8
   22460:	pop	{r4, sl, fp, pc}
   22464:	sub	sp, sp, #4
   22468:	strb	r0, [sp, #3]
   2246c:	ldrb	r0, [sp, #3]
   22470:	add	sp, sp, #4
   22474:	bx	lr
   22478:	push	{r4, sl, fp, lr}
   2247c:	add	fp, sp, #8
   22480:	sub	sp, sp, #32
   22484:	ldr	ip, [fp, #12]
   22488:	ldr	lr, [fp, #8]
   2248c:	ldr	r4, [fp, #16]
   22490:	str	r0, [fp, #-16]
   22494:	str	r1, [sp, #20]
   22498:	str	r2, [sp, #16]
   2249c:	str	r3, [sp, #12]
   224a0:	str	ip, [sp, #4]
   224a4:	str	lr, [sp]
   224a8:	ldr	r0, [sp, #12]
   224ac:	cmp	r0, #0
   224b0:	beq	22500 <main@@Base+0xc018>
   224b4:	ldr	r0, [sp]
   224b8:	ldr	r1, [sp, #4]
   224bc:	movw	r2, #32769	; 0x8001
   224c0:	subs	r0, r0, r2
   224c4:	sbcs	r1, r1, #0
   224c8:	bcc	224ec <main@@Base+0xc004>
   224cc:	b	224d0 <main@@Base+0xbfe8>
   224d0:	ldr	r0, [fp, #-16]
   224d4:	ldr	r1, [sp, #20]
   224d8:	ldr	r2, [sp, #16]
   224dc:	movw	r3, #8
   224e0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   224e4:	str	r0, [fp, #-12]
   224e8:	b	22548 <main@@Base+0xc060>
   224ec:	ldr	r0, [sp]
   224f0:	rsb	r0, r0, #0
   224f4:	ldr	r1, [fp, #16]
   224f8:	strh	r0, [r1]
   224fc:	b	22540 <main@@Base+0xc058>
   22500:	ldr	r0, [sp]
   22504:	ldr	r1, [sp, #4]
   22508:	subs	r0, r0, #32768	; 0x8000
   2250c:	sbcs	r1, r1, #0
   22510:	bcc	22534 <main@@Base+0xc04c>
   22514:	b	22518 <main@@Base+0xc030>
   22518:	ldr	r0, [fp, #-16]
   2251c:	ldr	r1, [sp, #20]
   22520:	ldr	r2, [sp, #16]
   22524:	movw	r3, #7
   22528:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2252c:	str	r0, [fp, #-12]
   22530:	b	22548 <main@@Base+0xc060>
   22534:	ldrh	r0, [sp]
   22538:	ldr	r1, [fp, #16]
   2253c:	strh	r0, [r1]
   22540:	ldr	r0, [sp, #20]
   22544:	str	r0, [fp, #-12]
   22548:	ldr	r0, [fp, #-12]
   2254c:	sub	sp, fp, #8
   22550:	pop	{r4, sl, fp, pc}
   22554:	sub	sp, sp, #4
   22558:	strh	r0, [sp, #2]
   2255c:	ldrsh	r0, [sp, #2]
   22560:	add	sp, sp, #4
   22564:	bx	lr
   22568:	push	{fp, lr}
   2256c:	mov	fp, sp
   22570:	sub	sp, sp, #16
   22574:	str	r0, [sp, #8]
   22578:	str	r1, [sp, #4]
   2257c:	str	r2, [sp]
   22580:	ldr	r0, [sp]
   22584:	ldr	r1, [sp, #4]
   22588:	sub	r0, r0, r1
   2258c:	cmp	r0, #4
   22590:	blt	225c4 <main@@Base+0xc0dc>
   22594:	ldr	r0, [sp, #4]
   22598:	ldr	r0, [r0]
   2259c:	movw	r1, #30062	; 0x756e
   225a0:	movt	r1, #27756	; 0x6c6c
   225a4:	subs	r0, r0, r1
   225a8:	movwne	r0, #1
   225ac:	cmp	r0, #0
   225b0:	bne	225c4 <main@@Base+0xc0dc>
   225b4:	ldr	r0, [sp, #4]
   225b8:	add	r0, r0, #4
   225bc:	str	r0, [fp, #-4]
   225c0:	b	225dc <main@@Base+0xc0f4>
   225c4:	ldr	r0, [sp, #8]
   225c8:	ldr	r1, [sp, #4]
   225cc:	ldr	r2, [sp]
   225d0:	movw	r3, #26
   225d4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   225d8:	str	r0, [fp, #-4]
   225dc:	ldr	r0, [fp, #-4]
   225e0:	mov	sp, fp
   225e4:	pop	{fp, pc}
   225e8:	push	{fp, lr}
   225ec:	mov	fp, sp
   225f0:	sub	sp, sp, #64	; 0x40
   225f4:	str	r0, [fp, #-8]
   225f8:	str	r1, [fp, #-12]
   225fc:	str	r2, [fp, #-16]
   22600:	str	r3, [fp, #-20]	; 0xffffffec
   22604:	ldr	r0, [fp, #-20]	; 0xffffffec
   22608:	movw	r1, #0
   2260c:	str	r1, [r0]
   22610:	ldr	r0, [fp, #-8]
   22614:	ldr	r0, [r0]
   22618:	movw	r1, #4
   2261c:	bl	2b898 <flatcc_builder_start_table@@Base>
   22620:	cmp	r0, #0
   22624:	beq	2262c <main@@Base+0xc144>
   22628:	b	22c0c <main@@Base+0xc724>
   2262c:	ldr	r0, [fp, #-8]
   22630:	ldr	r1, [fp, #-12]
   22634:	ldr	r2, [fp, #-16]
   22638:	sub	r3, fp, #24
   2263c:	bl	1baf8 <main@@Base+0x5610>
   22640:	str	r0, [fp, #-12]
   22644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22648:	cmp	r0, #0
   2264c:	beq	22bcc <main@@Base+0xc6e4>
   22650:	ldr	r0, [fp, #-8]
   22654:	ldr	r1, [fp, #-12]
   22658:	ldr	r2, [fp, #-16]
   2265c:	bl	1bbdc <main@@Base+0x56f4>
   22660:	str	r0, [fp, #-12]
   22664:	ldr	r0, [fp, #-12]
   22668:	ldr	r1, [fp, #-16]
   2266c:	bl	1bc60 <main@@Base+0x5778>
   22670:	str	r1, [sp, #20]
   22674:	str	r0, [sp, #16]
   22678:	ldrh	r0, [sp, #18]
   2267c:	ldr	r1, [sp, #20]
   22680:	movw	r2, #25455	; 0x636f
   22684:	eor	r2, r2, r1, lsr #16
   22688:	orr	r0, r0, r1, lsl #16
   2268c:	movw	r1, #29234	; 0x7232
   22690:	movt	r1, #27759	; 0x6c6f
   22694:	eor	r0, r0, r1
   22698:	orr	r0, r0, r2
   2269c:	cmp	r0, #0
   226a0:	bne	227c4 <main@@Base+0xc2dc>
   226a4:	b	226a8 <main@@Base+0xc1c0>
   226a8:	ldr	r0, [fp, #-8]
   226ac:	ldr	r1, [fp, #-12]
   226b0:	str	r1, [sp, #24]
   226b4:	ldr	r2, [fp, #-16]
   226b8:	movw	r3, #6
   226bc:	bl	1bc98 <main@@Base+0x57b0>
   226c0:	str	r0, [fp, #-12]
   226c4:	ldr	r0, [sp, #24]
   226c8:	ldr	r1, [fp, #-12]
   226cc:	cmp	r0, r1
   226d0:	beq	227bc <main@@Base+0xc2d4>
   226d4:	movw	r0, #0
   226d8:	strb	r0, [sp, #15]
   226dc:	ldr	r0, [fp, #-8]
   226e0:	ldr	r1, [fp, #-12]
   226e4:	str	r1, [sp, #24]
   226e8:	ldr	r2, [fp, #-16]
   226ec:	add	r3, sp, #15
   226f0:	bl	1d148 <main@@Base+0x6c60>
   226f4:	str	r0, [fp, #-12]
   226f8:	ldr	r0, [sp, #24]
   226fc:	ldr	r1, [fp, #-12]
   22700:	cmp	r0, r1
   22704:	bne	22758 <main@@Base+0xc270>
   22708:	ldr	r0, [pc, #1324]	; 22c3c <main@@Base+0xc754>
   2270c:	add	r3, pc, r0
   22710:	ldr	r0, [fp, #-8]
   22714:	ldr	r1, [fp, #-12]
   22718:	str	r1, [sp, #24]
   2271c:	ldr	r2, [fp, #-16]
   22720:	add	ip, sp, #15
   22724:	str	ip, [sp]
   22728:	bl	1d224 <main@@Base+0x6d3c>
   2272c:	str	r0, [fp, #-12]
   22730:	ldr	r0, [fp, #-12]
   22734:	ldr	r1, [sp, #24]
   22738:	cmp	r0, r1
   2273c:	beq	22750 <main@@Base+0xc268>
   22740:	ldr	r0, [fp, #-12]
   22744:	ldr	r1, [fp, #-16]
   22748:	cmp	r0, r1
   2274c:	bne	22754 <main@@Base+0xc26c>
   22750:	b	22c0c <main@@Base+0xc724>
   22754:	b	22758 <main@@Base+0xc270>
   22758:	ldrsb	r0, [sp, #15]
   2275c:	cmp	r0, #2
   22760:	bne	22778 <main@@Base+0xc290>
   22764:	ldr	r0, [fp, #-8]
   22768:	ldr	r0, [r0, #8]
   2276c:	and	r0, r0, #2
   22770:	cmp	r0, #0
   22774:	beq	227b8 <main@@Base+0xc2d0>
   22778:	ldr	r0, [fp, #-8]
   2277c:	ldr	r0, [r0]
   22780:	movw	r1, #1
   22784:	str	r1, [sp, #8]
   22788:	ldr	r2, [sp, #8]
   2278c:	movw	r3, #1
   22790:	uxth	r3, r3
   22794:	bl	2d13c <flatcc_builder_table_add@@Base>
   22798:	str	r0, [fp, #-28]	; 0xffffffe4
   2279c:	movw	r1, #0
   227a0:	cmp	r0, r1
   227a4:	bne	227ac <main@@Base+0xc2c4>
   227a8:	b	22c0c <main@@Base+0xc724>
   227ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   227b0:	ldrsb	r1, [sp, #15]
   227b4:	bl	1d408 <main@@Base+0x6f20>
   227b8:	b	227c0 <main@@Base+0xc2d8>
   227bc:	b	22910 <main@@Base+0xc428>
   227c0:	b	2290c <main@@Base+0xc424>
   227c4:	ldrb	r0, [sp, #19]
   227c8:	ldr	r1, [sp, #20]
   227cc:	movw	r2, #27759	; 0x6c6f
   227d0:	movt	r2, #25455	; 0x636f
   227d4:	eor	r1, r1, r2
   227d8:	eor	r0, r0, #114	; 0x72
   227dc:	orr	r0, r1, r0, lsl #24
   227e0:	cmp	r0, #0
   227e4:	bne	22904 <main@@Base+0xc41c>
   227e8:	b	227ec <main@@Base+0xc304>
   227ec:	ldr	r0, [fp, #-8]
   227f0:	ldr	r1, [fp, #-12]
   227f4:	str	r1, [sp, #24]
   227f8:	ldr	r2, [fp, #-16]
   227fc:	movw	r3, #5
   22800:	bl	1bc98 <main@@Base+0x57b0>
   22804:	str	r0, [fp, #-12]
   22808:	ldr	r0, [sp, #24]
   2280c:	ldr	r1, [fp, #-12]
   22810:	cmp	r0, r1
   22814:	beq	228fc <main@@Base+0xc414>
   22818:	movw	r0, #0
   2281c:	strb	r0, [sp, #14]
   22820:	ldr	r0, [fp, #-8]
   22824:	ldr	r1, [fp, #-12]
   22828:	str	r1, [sp, #24]
   2282c:	ldr	r2, [fp, #-16]
   22830:	add	r3, sp, #14
   22834:	bl	1d148 <main@@Base+0x6c60>
   22838:	str	r0, [fp, #-12]
   2283c:	ldr	r0, [sp, #24]
   22840:	ldr	r1, [fp, #-12]
   22844:	cmp	r0, r1
   22848:	bne	2289c <main@@Base+0xc3b4>
   2284c:	ldr	r0, [pc, #988]	; 22c30 <main@@Base+0xc748>
   22850:	add	r3, pc, r0
   22854:	ldr	r0, [fp, #-8]
   22858:	ldr	r1, [fp, #-12]
   2285c:	str	r1, [sp, #24]
   22860:	ldr	r2, [fp, #-16]
   22864:	add	ip, sp, #14
   22868:	str	ip, [sp]
   2286c:	bl	1d224 <main@@Base+0x6d3c>
   22870:	str	r0, [fp, #-12]
   22874:	ldr	r0, [fp, #-12]
   22878:	ldr	r1, [sp, #24]
   2287c:	cmp	r0, r1
   22880:	beq	22894 <main@@Base+0xc3ac>
   22884:	ldr	r0, [fp, #-12]
   22888:	ldr	r1, [fp, #-16]
   2288c:	cmp	r0, r1
   22890:	bne	22898 <main@@Base+0xc3b0>
   22894:	b	22c0c <main@@Base+0xc724>
   22898:	b	2289c <main@@Base+0xc3b4>
   2289c:	ldrsb	r0, [sp, #14]
   228a0:	cmp	r0, #2
   228a4:	bne	228bc <main@@Base+0xc3d4>
   228a8:	ldr	r0, [fp, #-8]
   228ac:	ldr	r0, [r0, #8]
   228b0:	and	r0, r0, #2
   228b4:	cmp	r0, #0
   228b8:	beq	228f8 <main@@Base+0xc410>
   228bc:	ldr	r0, [fp, #-8]
   228c0:	ldr	r0, [r0]
   228c4:	movw	r1, #0
   228c8:	movw	r2, #1
   228cc:	movw	r3, #1
   228d0:	uxth	r3, r3
   228d4:	bl	2d13c <flatcc_builder_table_add@@Base>
   228d8:	str	r0, [fp, #-28]	; 0xffffffe4
   228dc:	movw	r1, #0
   228e0:	cmp	r0, r1
   228e4:	bne	228ec <main@@Base+0xc404>
   228e8:	b	22c0c <main@@Base+0xc724>
   228ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   228f0:	ldrsb	r1, [sp, #14]
   228f4:	bl	1d408 <main@@Base+0x6f20>
   228f8:	b	22900 <main@@Base+0xc418>
   228fc:	b	22910 <main@@Base+0xc428>
   22900:	b	22908 <main@@Base+0xc420>
   22904:	b	22910 <main@@Base+0xc428>
   22908:	b	2290c <main@@Base+0xc424>
   2290c:	b	22bb0 <main@@Base+0xc6c8>
   22910:	ldr	r0, [sp, #20]
   22914:	bic	r0, r0, #255	; 0xff
   22918:	movw	r1, #12800	; 0x3200
   2291c:	movt	r1, #30051	; 0x7563
   22920:	teq	r0, r1
   22924:	bne	22a54 <main@@Base+0xc56c>
   22928:	b	2292c <main@@Base+0xc444>
   2292c:	ldr	r0, [fp, #-8]
   22930:	ldr	r1, [fp, #-12]
   22934:	str	r1, [sp, #24]
   22938:	ldr	r2, [fp, #-16]
   2293c:	movw	r3, #3
   22940:	bl	1bc98 <main@@Base+0x57b0>
   22944:	str	r0, [fp, #-12]
   22948:	ldr	r0, [sp, #24]
   2294c:	ldr	r1, [fp, #-12]
   22950:	cmp	r0, r1
   22954:	beq	22a3c <main@@Base+0xc554>
   22958:	movw	r0, #0
   2295c:	strb	r0, [sp, #13]
   22960:	ldr	r0, [fp, #-8]
   22964:	ldr	r1, [fp, #-12]
   22968:	str	r1, [sp, #24]
   2296c:	ldr	r2, [fp, #-16]
   22970:	add	r3, sp, #13
   22974:	bl	1d518 <main@@Base+0x7030>
   22978:	str	r0, [fp, #-12]
   2297c:	ldr	r0, [sp, #24]
   22980:	ldr	r1, [fp, #-12]
   22984:	cmp	r0, r1
   22988:	bne	229dc <main@@Base+0xc4f4>
   2298c:	ldr	r0, [pc, #676]	; 22c38 <main@@Base+0xc750>
   22990:	add	r3, pc, r0
   22994:	ldr	r0, [fp, #-8]
   22998:	ldr	r1, [fp, #-12]
   2299c:	str	r1, [sp, #24]
   229a0:	ldr	r2, [fp, #-16]
   229a4:	add	ip, sp, #13
   229a8:	str	ip, [sp]
   229ac:	bl	1d5f4 <main@@Base+0x710c>
   229b0:	str	r0, [fp, #-12]
   229b4:	ldr	r0, [fp, #-12]
   229b8:	ldr	r1, [sp, #24]
   229bc:	cmp	r0, r1
   229c0:	beq	229d4 <main@@Base+0xc4ec>
   229c4:	ldr	r0, [fp, #-12]
   229c8:	ldr	r1, [fp, #-16]
   229cc:	cmp	r0, r1
   229d0:	bne	229d8 <main@@Base+0xc4f0>
   229d4:	b	22c0c <main@@Base+0xc724>
   229d8:	b	229dc <main@@Base+0xc4f4>
   229dc:	ldrb	r0, [sp, #13]
   229e0:	cmp	r0, #2
   229e4:	bne	229fc <main@@Base+0xc514>
   229e8:	ldr	r0, [fp, #-8]
   229ec:	ldr	r0, [r0, #8]
   229f0:	and	r0, r0, #2
   229f4:	cmp	r0, #0
   229f8:	beq	22a38 <main@@Base+0xc550>
   229fc:	ldr	r0, [fp, #-8]
   22a00:	ldr	r0, [r0]
   22a04:	movw	r1, #3
   22a08:	movw	r2, #1
   22a0c:	movw	r3, #1
   22a10:	uxth	r3, r3
   22a14:	bl	2d13c <flatcc_builder_table_add@@Base>
   22a18:	str	r0, [fp, #-28]	; 0xffffffe4
   22a1c:	movw	r1, #0
   22a20:	cmp	r0, r1
   22a24:	bne	22a2c <main@@Base+0xc544>
   22a28:	b	22c0c <main@@Base+0xc724>
   22a2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22a30:	ldrb	r1, [sp, #13]
   22a34:	bl	1d7d8 <main@@Base+0x72f0>
   22a38:	b	22a50 <main@@Base+0xc568>
   22a3c:	ldr	r0, [fp, #-8]
   22a40:	ldr	r1, [fp, #-12]
   22a44:	ldr	r2, [fp, #-16]
   22a48:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22a4c:	str	r0, [fp, #-12]
   22a50:	b	22bac <main@@Base+0xc6c4>
   22a54:	ldrh	r0, [sp, #22]
   22a58:	movw	r1, #0
   22a5c:	movt	r1, #30051	; 0x7563
   22a60:	teq	r1, r0, lsl #16
   22a64:	bne	22b94 <main@@Base+0xc6ac>
   22a68:	b	22a6c <main@@Base+0xc584>
   22a6c:	ldr	r0, [fp, #-8]
   22a70:	ldr	r1, [fp, #-12]
   22a74:	str	r1, [sp, #24]
   22a78:	ldr	r2, [fp, #-16]
   22a7c:	movw	r3, #2
   22a80:	bl	1bc98 <main@@Base+0x57b0>
   22a84:	str	r0, [fp, #-12]
   22a88:	ldr	r0, [sp, #24]
   22a8c:	ldr	r1, [fp, #-12]
   22a90:	cmp	r0, r1
   22a94:	beq	22b7c <main@@Base+0xc694>
   22a98:	movw	r0, #0
   22a9c:	strb	r0, [sp, #12]
   22aa0:	ldr	r0, [fp, #-8]
   22aa4:	ldr	r1, [fp, #-12]
   22aa8:	str	r1, [sp, #24]
   22aac:	ldr	r2, [fp, #-16]
   22ab0:	add	r3, sp, #12
   22ab4:	bl	1d518 <main@@Base+0x7030>
   22ab8:	str	r0, [fp, #-12]
   22abc:	ldr	r0, [sp, #24]
   22ac0:	ldr	r1, [fp, #-12]
   22ac4:	cmp	r0, r1
   22ac8:	bne	22b1c <main@@Base+0xc634>
   22acc:	ldr	r0, [pc, #352]	; 22c34 <main@@Base+0xc74c>
   22ad0:	add	r3, pc, r0
   22ad4:	ldr	r0, [fp, #-8]
   22ad8:	ldr	r1, [fp, #-12]
   22adc:	str	r1, [sp, #24]
   22ae0:	ldr	r2, [fp, #-16]
   22ae4:	add	ip, sp, #12
   22ae8:	str	ip, [sp]
   22aec:	bl	1d5f4 <main@@Base+0x710c>
   22af0:	str	r0, [fp, #-12]
   22af4:	ldr	r0, [fp, #-12]
   22af8:	ldr	r1, [sp, #24]
   22afc:	cmp	r0, r1
   22b00:	beq	22b14 <main@@Base+0xc62c>
   22b04:	ldr	r0, [fp, #-12]
   22b08:	ldr	r1, [fp, #-16]
   22b0c:	cmp	r0, r1
   22b10:	bne	22b18 <main@@Base+0xc630>
   22b14:	b	22c0c <main@@Base+0xc724>
   22b18:	b	22b1c <main@@Base+0xc634>
   22b1c:	ldrb	r0, [sp, #12]
   22b20:	cmp	r0, #2
   22b24:	bne	22b3c <main@@Base+0xc654>
   22b28:	ldr	r0, [fp, #-8]
   22b2c:	ldr	r0, [r0, #8]
   22b30:	and	r0, r0, #2
   22b34:	cmp	r0, #0
   22b38:	beq	22b78 <main@@Base+0xc690>
   22b3c:	ldr	r0, [fp, #-8]
   22b40:	ldr	r0, [r0]
   22b44:	movw	r1, #2
   22b48:	movw	r2, #1
   22b4c:	movw	r3, #1
   22b50:	uxth	r3, r3
   22b54:	bl	2d13c <flatcc_builder_table_add@@Base>
   22b58:	str	r0, [fp, #-28]	; 0xffffffe4
   22b5c:	movw	r1, #0
   22b60:	cmp	r0, r1
   22b64:	bne	22b6c <main@@Base+0xc684>
   22b68:	b	22c0c <main@@Base+0xc724>
   22b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22b70:	ldrb	r1, [sp, #12]
   22b74:	bl	1d7d8 <main@@Base+0x72f0>
   22b78:	b	22b90 <main@@Base+0xc6a8>
   22b7c:	ldr	r0, [fp, #-8]
   22b80:	ldr	r1, [fp, #-12]
   22b84:	ldr	r2, [fp, #-16]
   22b88:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22b8c:	str	r0, [fp, #-12]
   22b90:	b	22ba8 <main@@Base+0xc6c0>
   22b94:	ldr	r0, [fp, #-8]
   22b98:	ldr	r1, [fp, #-12]
   22b9c:	ldr	r2, [fp, #-16]
   22ba0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22ba4:	str	r0, [fp, #-12]
   22ba8:	b	22bac <main@@Base+0xc6c4>
   22bac:	b	22bb0 <main@@Base+0xc6c8>
   22bb0:	ldr	r0, [fp, #-8]
   22bb4:	ldr	r1, [fp, #-12]
   22bb8:	ldr	r2, [fp, #-16]
   22bbc:	sub	r3, fp, #24
   22bc0:	bl	20c14 <main@@Base+0xa72c>
   22bc4:	str	r0, [fp, #-12]
   22bc8:	b	22644 <main@@Base+0xc15c>
   22bcc:	ldr	r0, [fp, #-8]
   22bd0:	ldr	r0, [r0, #20]
   22bd4:	cmp	r0, #0
   22bd8:	beq	22be0 <main@@Base+0xc6f8>
   22bdc:	b	22c0c <main@@Base+0xc724>
   22be0:	ldr	r0, [fp, #-8]
   22be4:	ldr	r0, [r0]
   22be8:	bl	2c500 <flatcc_builder_end_table@@Base>
   22bec:	ldr	r1, [fp, #-20]	; 0xffffffec
   22bf0:	str	r0, [r1]
   22bf4:	cmp	r0, #0
   22bf8:	bne	22c00 <main@@Base+0xc718>
   22bfc:	b	22c0c <main@@Base+0xc724>
   22c00:	ldr	r0, [fp, #-12]
   22c04:	str	r0, [fp, #-4]
   22c08:	b	22c24 <main@@Base+0xc73c>
   22c0c:	ldr	r0, [fp, #-8]
   22c10:	ldr	r1, [fp, #-12]
   22c14:	ldr	r2, [fp, #-16]
   22c18:	movw	r3, #33	; 0x21
   22c1c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   22c20:	str	r0, [fp, #-4]
   22c24:	ldr	r0, [fp, #-4]
   22c28:	mov	sp, fp
   22c2c:	pop	{fp, pc}
   22c30:	andeq	sl, r3, r8, lsr #19
   22c34:	andeq	sl, r3, r4, asr #14
   22c38:	andeq	sl, r3, r8, ror r8
   22c3c:	ldrdeq	sl, [r3], -ip
   22c40:	push	{fp, lr}
   22c44:	mov	fp, sp
   22c48:	sub	sp, sp, #24
   22c4c:	str	r0, [fp, #-8]
   22c50:	str	r1, [sp, #12]
   22c54:	str	r2, [sp, #8]
   22c58:	str	r3, [sp, #4]
   22c5c:	ldr	r0, [sp, #4]
   22c60:	movw	r1, #0
   22c64:	str	r1, [r0]
   22c68:	ldr	r0, [fp, #-8]
   22c6c:	ldr	r0, [r0]
   22c70:	bl	2b898 <flatcc_builder_start_table@@Base>
   22c74:	cmp	r0, #0
   22c78:	beq	22c80 <main@@Base+0xc798>
   22c7c:	b	22d28 <main@@Base+0xc840>
   22c80:	ldr	r0, [fp, #-8]
   22c84:	ldr	r1, [sp, #12]
   22c88:	ldr	r2, [sp, #8]
   22c8c:	mov	r3, sp
   22c90:	bl	1baf8 <main@@Base+0x5610>
   22c94:	str	r0, [sp, #12]
   22c98:	ldr	r0, [sp]
   22c9c:	cmp	r0, #0
   22ca0:	beq	22ce8 <main@@Base+0xc800>
   22ca4:	ldr	r0, [fp, #-8]
   22ca8:	ldr	r1, [sp, #12]
   22cac:	ldr	r2, [sp, #8]
   22cb0:	bl	1bbdc <main@@Base+0x56f4>
   22cb4:	str	r0, [sp, #12]
   22cb8:	ldr	r0, [fp, #-8]
   22cbc:	ldr	r1, [sp, #12]
   22cc0:	ldr	r2, [sp, #8]
   22cc4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22cc8:	str	r0, [sp, #12]
   22ccc:	ldr	r0, [fp, #-8]
   22cd0:	ldr	r1, [sp, #12]
   22cd4:	ldr	r2, [sp, #8]
   22cd8:	mov	r3, sp
   22cdc:	bl	20c14 <main@@Base+0xa72c>
   22ce0:	str	r0, [sp, #12]
   22ce4:	b	22c98 <main@@Base+0xc7b0>
   22ce8:	ldr	r0, [fp, #-8]
   22cec:	ldr	r0, [r0, #20]
   22cf0:	cmp	r0, #0
   22cf4:	beq	22cfc <main@@Base+0xc814>
   22cf8:	b	22d28 <main@@Base+0xc840>
   22cfc:	ldr	r0, [fp, #-8]
   22d00:	ldr	r0, [r0]
   22d04:	bl	2c500 <flatcc_builder_end_table@@Base>
   22d08:	ldr	r1, [sp, #4]
   22d0c:	str	r0, [r1]
   22d10:	cmp	r0, #0
   22d14:	bne	22d1c <main@@Base+0xc834>
   22d18:	b	22d28 <main@@Base+0xc840>
   22d1c:	ldr	r0, [sp, #12]
   22d20:	str	r0, [fp, #-4]
   22d24:	b	22d40 <main@@Base+0xc858>
   22d28:	ldr	r0, [fp, #-8]
   22d2c:	ldr	r1, [sp, #12]
   22d30:	ldr	r2, [sp, #8]
   22d34:	movw	r3, #33	; 0x21
   22d38:	bl	33158 <flatcc_json_parser_set_error@@Base>
   22d3c:	str	r0, [fp, #-4]
   22d40:	ldr	r0, [fp, #-4]
   22d44:	mov	sp, fp
   22d48:	pop	{fp, pc}
   22d4c:	push	{r4, sl, fp, lr}
   22d50:	add	fp, sp, #8
   22d54:	sub	sp, sp, #96	; 0x60
   22d58:	str	r0, [fp, #-16]
   22d5c:	str	r1, [fp, #-20]	; 0xffffffec
   22d60:	str	r2, [fp, #-24]	; 0xffffffe8
   22d64:	str	r3, [fp, #-28]	; 0xffffffe4
   22d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22d6c:	movw	r1, #0
   22d70:	str	r1, [r0]
   22d74:	ldr	r0, [fp, #-16]
   22d78:	ldr	r0, [r0]
   22d7c:	movw	r1, #4
   22d80:	bl	2b898 <flatcc_builder_start_table@@Base>
   22d84:	cmp	r0, #0
   22d88:	beq	22d90 <main@@Base+0xc8a8>
   22d8c:	b	23240 <main@@Base+0xcd58>
   22d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d94:	ldr	r1, [fp, #-16]
   22d98:	ldr	r2, [fp, #-20]	; 0xffffffec
   22d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22da0:	str	r0, [sp, #40]	; 0x28
   22da4:	mov	r0, r1
   22da8:	mov	r1, r2
   22dac:	mov	r2, r3
   22db0:	movw	r3, #1
   22db4:	add	ip, sp, #44	; 0x2c
   22db8:	str	ip, [sp]
   22dbc:	bl	363dc <flatcc_json_parser_prepare_unions@@Base>
   22dc0:	ldr	r1, [sp, #40]	; 0x28
   22dc4:	cmp	r1, r0
   22dc8:	bne	22dd0 <main@@Base+0xc8e8>
   22dcc:	b	23240 <main@@Base+0xcd58>
   22dd0:	ldr	r0, [fp, #-16]
   22dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22ddc:	sub	r3, fp, #32
   22de0:	bl	1baf8 <main@@Base+0x5610>
   22de4:	str	r0, [fp, #-20]	; 0xffffffec
   22de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22dec:	cmp	r0, #0
   22df0:	beq	231e8 <main@@Base+0xcd00>
   22df4:	ldr	r0, [fp, #-16]
   22df8:	ldr	r1, [fp, #-20]	; 0xffffffec
   22dfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22e00:	bl	1bbdc <main@@Base+0x56f4>
   22e04:	str	r0, [fp, #-20]	; 0xffffffec
   22e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e10:	bl	1bc60 <main@@Base+0x5778>
   22e14:	str	r1, [sp, #52]	; 0x34
   22e18:	str	r0, [sp, #48]	; 0x30
   22e1c:	ldr	r0, [sp, #48]	; 0x30
   22e20:	ldr	r1, [sp, #52]	; 0x34
   22e24:	movw	r2, #28281	; 0x6e79
   22e28:	movt	r2, #28001	; 0x6d61
   22e2c:	eor	r1, r1, r2
   22e30:	movw	r2, #31071	; 0x795f
   22e34:	movt	r2, #24942	; 0x616e
   22e38:	eor	r0, r0, r2
   22e3c:	orr	r0, r0, r1
   22e40:	cmp	r0, #0
   22e44:	bne	22f58 <main@@Base+0xca70>
   22e48:	b	22e4c <main@@Base+0xc964>
   22e4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e50:	add	r0, r0, #8
   22e54:	str	r0, [fp, #-20]	; 0xffffffec
   22e58:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e60:	bl	1bc60 <main@@Base+0x5778>
   22e64:	str	r1, [sp, #52]	; 0x34
   22e68:	str	r0, [sp, #48]	; 0x30
   22e6c:	ldr	r0, [sp, #52]	; 0x34
   22e70:	movw	r1, #28773	; 0x7065
   22e74:	movt	r1, #29817	; 0x7479
   22e78:	teq	r0, r1
   22e7c:	bne	22f40 <main@@Base+0xca58>
   22e80:	b	22e84 <main@@Base+0xc99c>
   22e84:	ldr	r0, [fp, #-16]
   22e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   22e8c:	str	r1, [fp, #-48]	; 0xffffffd0
   22e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22e94:	movw	r3, #4
   22e98:	bl	1bc98 <main@@Base+0x57b0>
   22e9c:	str	r0, [fp, #-20]	; 0xffffffec
   22ea0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22ea8:	cmp	r0, r1
   22eac:	beq	22f28 <main@@Base+0xca40>
   22eb0:	ldr	r0, [pc, #944]	; 23268 <main@@Base+0xcd80>
   22eb4:	add	r0, pc, r0
   22eb8:	ldr	r1, [pc, #940]	; 2326c <main@@Base+0xcd84>
   22ebc:	add	r1, pc, r1
   22ec0:	ldr	r2, [pc, #936]	; 23270 <main@@Base+0xcd88>
   22ec4:	add	r2, pc, r2
   22ec8:	ldr	r3, [fp, #-16]
   22ecc:	ldr	ip, [fp, #-20]	; 0xffffffec
   22ed0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   22ed4:	ldr	r4, [sp, #44]	; 0x2c
   22ed8:	str	r0, [sp, #36]	; 0x24
   22edc:	mov	r0, r3
   22ee0:	str	r1, [sp, #32]
   22ee4:	mov	r1, ip
   22ee8:	str	r2, [sp, #28]
   22eec:	mov	r2, lr
   22ef0:	movw	r3, #0
   22ef4:	movw	ip, #3
   22ef8:	uxth	ip, ip
   22efc:	str	ip, [sp]
   22f00:	str	r4, [sp, #4]
   22f04:	ldr	ip, [sp, #36]	; 0x24
   22f08:	str	ip, [sp, #8]
   22f0c:	ldr	lr, [sp, #32]
   22f10:	str	lr, [sp, #12]
   22f14:	ldr	r4, [sp, #28]
   22f18:	str	r4, [sp, #16]
   22f1c:	bl	36fe0 <flatcc_json_parser_union_type_vector@@Base>
   22f20:	str	r0, [fp, #-20]	; 0xffffffec
   22f24:	b	22f3c <main@@Base+0xca54>
   22f28:	ldr	r0, [fp, #-16]
   22f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22f30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22f34:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22f38:	str	r0, [fp, #-20]	; 0xffffffec
   22f3c:	b	22f54 <main@@Base+0xca6c>
   22f40:	ldr	r0, [fp, #-16]
   22f44:	ldr	r1, [fp, #-20]	; 0xffffffec
   22f48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22f4c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   22f50:	str	r0, [fp, #-20]	; 0xffffffec
   22f54:	b	231cc <main@@Base+0xcce4>
   22f58:	ldr	r0, [sp, #48]	; 0x30
   22f5c:	ldr	r1, [sp, #52]	; 0x34
   22f60:	movw	r2, #24942	; 0x616e
   22f64:	movt	r2, #109	; 0x6d
   22f68:	eor	r2, r2, r1, lsr #8
   22f6c:	lsr	r0, r0, #8
   22f70:	orr	r0, r0, r1, lsl #24
   22f74:	movw	r1, #28281	; 0x6e79
   22f78:	movt	r1, #31073	; 0x7961
   22f7c:	eor	r0, r0, r1
   22f80:	orr	r0, r0, r2
   22f84:	cmp	r0, #0
   22f88:	bne	23014 <main@@Base+0xcb2c>
   22f8c:	b	22f90 <main@@Base+0xcaa8>
   22f90:	ldr	r0, [fp, #-16]
   22f94:	ldr	r1, [fp, #-20]	; 0xffffffec
   22f98:	str	r1, [fp, #-48]	; 0xffffffd0
   22f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22fa0:	movw	r3, #7
   22fa4:	bl	1bc98 <main@@Base+0x57b0>
   22fa8:	str	r0, [fp, #-20]	; 0xffffffec
   22fac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   22fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   22fb4:	cmp	r0, r1
   22fb8:	beq	2300c <main@@Base+0xcb24>
   22fbc:	ldr	r0, [pc, #672]	; 23264 <main@@Base+0xcd7c>
   22fc0:	add	r0, pc, r0
   22fc4:	ldr	r1, [fp, #-16]
   22fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   22fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22fd0:	ldr	ip, [sp, #44]	; 0x2c
   22fd4:	str	r0, [sp, #24]
   22fd8:	mov	r0, r1
   22fdc:	mov	r1, r2
   22fe0:	mov	r2, r3
   22fe4:	movw	r3, #0
   22fe8:	movw	lr, #3
   22fec:	uxth	lr, lr
   22ff0:	str	lr, [sp]
   22ff4:	str	ip, [sp, #4]
   22ff8:	ldr	ip, [sp, #24]
   22ffc:	str	ip, [sp, #8]
   23000:	bl	36c50 <flatcc_json_parser_union_vector@@Base>
   23004:	str	r0, [fp, #-20]	; 0xffffffec
   23008:	b	23010 <main@@Base+0xcb28>
   2300c:	b	2301c <main@@Base+0xcb34>
   23010:	b	23018 <main@@Base+0xcb30>
   23014:	b	2301c <main@@Base+0xcb34>
   23018:	b	231c8 <main@@Base+0xcce0>
   2301c:	ldrh	r0, [sp, #50]	; 0x32
   23020:	ldr	r1, [sp, #52]	; 0x34
   23024:	movw	r2, #28786	; 0x7072
   23028:	eor	r2, r2, r1, lsr #16
   2302c:	orr	r0, r0, r1, lsl #16
   23030:	movw	r1, #27000	; 0x6978
   23034:	movt	r1, #25958	; 0x6566
   23038:	eor	r0, r0, r1
   2303c:	orr	r0, r0, r2
   23040:	cmp	r0, #0
   23044:	bne	230e8 <main@@Base+0xcc00>
   23048:	b	2304c <main@@Base+0xcb64>
   2304c:	ldr	r0, [fp, #-16]
   23050:	ldr	r1, [fp, #-20]	; 0xffffffec
   23054:	str	r1, [fp, #-48]	; 0xffffffd0
   23058:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2305c:	movw	r3, #6
   23060:	bl	1bc98 <main@@Base+0x57b0>
   23064:	str	r0, [fp, #-20]	; 0xffffffec
   23068:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2306c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23070:	cmp	r0, r1
   23074:	beq	230d0 <main@@Base+0xcbe8>
   23078:	ldr	r0, [fp, #-16]
   2307c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23084:	sub	r3, fp, #40	; 0x28
   23088:	bl	23304 <main@@Base+0xce1c>
   2308c:	str	r0, [fp, #-20]	; 0xffffffec
   23090:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23094:	cmp	r0, #0
   23098:	beq	230bc <main@@Base+0xcbd4>
   2309c:	ldr	r0, [fp, #-16]
   230a0:	ldr	r0, [r0]
   230a4:	movw	r1, #0
   230a8:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   230ac:	str	r0, [fp, #-44]	; 0xffffffd4
   230b0:	movw	r1, #0
   230b4:	cmp	r0, r1
   230b8:	bne	230c0 <main@@Base+0xcbd8>
   230bc:	b	23240 <main@@Base+0xcd58>
   230c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   230c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   230c8:	str	r0, [r1]
   230cc:	b	230e4 <main@@Base+0xcbfc>
   230d0:	ldr	r0, [fp, #-16]
   230d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   230d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   230dc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   230e0:	str	r0, [fp, #-20]	; 0xffffffec
   230e4:	b	231c4 <main@@Base+0xccdc>
   230e8:	ldrb	r0, [sp, #51]	; 0x33
   230ec:	ldr	r1, [sp, #52]	; 0x34
   230f0:	movw	r2, #30313	; 0x7669
   230f4:	movt	r2, #28015	; 0x6d6f
   230f8:	eor	r1, r1, r2
   230fc:	eor	r0, r0, #101	; 0x65
   23100:	orr	r0, r1, r0, lsl #24
   23104:	cmp	r0, #0
   23108:	bne	231ac <main@@Base+0xccc4>
   2310c:	b	23110 <main@@Base+0xcc28>
   23110:	ldr	r0, [fp, #-16]
   23114:	ldr	r1, [fp, #-20]	; 0xffffffec
   23118:	str	r1, [fp, #-48]	; 0xffffffd0
   2311c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23120:	movw	r3, #5
   23124:	bl	1bc98 <main@@Base+0x57b0>
   23128:	str	r0, [fp, #-20]	; 0xffffffec
   2312c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23130:	ldr	r1, [fp, #-20]	; 0xffffffec
   23134:	cmp	r0, r1
   23138:	beq	23194 <main@@Base+0xccac>
   2313c:	ldr	r0, [fp, #-16]
   23140:	ldr	r1, [fp, #-20]	; 0xffffffec
   23144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23148:	sub	r3, fp, #40	; 0x28
   2314c:	bl	23744 <main@@Base+0xd25c>
   23150:	str	r0, [fp, #-20]	; 0xffffffec
   23154:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23158:	cmp	r0, #0
   2315c:	beq	23180 <main@@Base+0xcc98>
   23160:	ldr	r0, [fp, #-16]
   23164:	ldr	r0, [r0]
   23168:	movw	r1, #1
   2316c:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   23170:	str	r0, [fp, #-44]	; 0xffffffd4
   23174:	movw	r1, #0
   23178:	cmp	r0, r1
   2317c:	bne	23184 <main@@Base+0xcc9c>
   23180:	b	23240 <main@@Base+0xcd58>
   23184:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23188:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2318c:	str	r0, [r1]
   23190:	b	231a8 <main@@Base+0xccc0>
   23194:	ldr	r0, [fp, #-16]
   23198:	ldr	r1, [fp, #-20]	; 0xffffffec
   2319c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   231a0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   231a4:	str	r0, [fp, #-20]	; 0xffffffec
   231a8:	b	231c0 <main@@Base+0xccd8>
   231ac:	ldr	r0, [fp, #-16]
   231b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   231b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   231b8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   231bc:	str	r0, [fp, #-20]	; 0xffffffec
   231c0:	b	231c4 <main@@Base+0xccdc>
   231c4:	b	231c8 <main@@Base+0xcce0>
   231c8:	b	231cc <main@@Base+0xcce4>
   231cc:	ldr	r0, [fp, #-16]
   231d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   231d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   231d8:	sub	r3, fp, #32
   231dc:	bl	20c14 <main@@Base+0xa72c>
   231e0:	str	r0, [fp, #-20]	; 0xffffffec
   231e4:	b	22de8 <main@@Base+0xc900>
   231e8:	ldr	r0, [fp, #-16]
   231ec:	ldr	r0, [r0, #20]
   231f0:	cmp	r0, #0
   231f4:	beq	231fc <main@@Base+0xcd14>
   231f8:	b	23240 <main@@Base+0xcd58>
   231fc:	ldr	r0, [fp, #-16]
   23200:	ldr	r1, [fp, #-20]	; 0xffffffec
   23204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23208:	ldr	r3, [sp, #44]	; 0x2c
   2320c:	bl	36484 <flatcc_json_parser_finalize_unions@@Base>
   23210:	str	r0, [fp, #-20]	; 0xffffffec
   23214:	ldr	r0, [fp, #-16]
   23218:	ldr	r0, [r0]
   2321c:	bl	2c500 <flatcc_builder_end_table@@Base>
   23220:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23224:	str	r0, [r1]
   23228:	cmp	r0, #0
   2322c:	bne	23234 <main@@Base+0xcd4c>
   23230:	b	23240 <main@@Base+0xcd58>
   23234:	ldr	r0, [fp, #-20]	; 0xffffffec
   23238:	str	r0, [fp, #-12]
   2323c:	b	23258 <main@@Base+0xcd70>
   23240:	ldr	r0, [fp, #-16]
   23244:	ldr	r1, [fp, #-20]	; 0xffffffec
   23248:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2324c:	movw	r3, #33	; 0x21
   23250:	bl	33158 <flatcc_json_parser_set_error@@Base>
   23254:	str	r0, [fp, #-12]
   23258:	ldr	r0, [fp, #-12]
   2325c:	sub	sp, fp, #8
   23260:	pop	{r4, sl, fp, pc}
   23264:			; <UNDEFINED> instruction: 0xffffb778
   23268:	andeq	sl, r3, ip, ror #6
   2326c:			; <UNDEFINED> instruction: 0xffffb87c
   23270:	andeq	r0, r0, r8, lsr #7
   23274:	sub	sp, sp, #12
   23278:	strb	r0, [sp, #7]
   2327c:	ldrb	r0, [sp, #7]
   23280:	mov	r1, r0
   23284:	cmp	r0, #4
   23288:	str	r1, [sp]
   2328c:	bhi	232f0 <main@@Base+0xce08>
   23290:	add	r0, pc, #8
   23294:	ldr	r1, [sp]
   23298:	ldr	r2, [r0, r1, lsl #2]
   2329c:	add	pc, r0, r2
   232a0:	andeq	r0, r0, r4, lsl r0
   232a4:	andeq	r0, r0, r0, lsr #32
   232a8:	andeq	r0, r0, ip, lsr #32
   232ac:	andeq	r0, r0, r8, lsr r0
   232b0:	andeq	r0, r0, r4, asr #32
   232b4:	movw	r0, #1
   232b8:	str	r0, [sp, #8]
   232bc:	b	232f8 <main@@Base+0xce10>
   232c0:	movw	r0, #1
   232c4:	str	r0, [sp, #8]
   232c8:	b	232f8 <main@@Base+0xce10>
   232cc:	movw	r0, #1
   232d0:	str	r0, [sp, #8]
   232d4:	b	232f8 <main@@Base+0xce10>
   232d8:	movw	r0, #1
   232dc:	str	r0, [sp, #8]
   232e0:	b	232f8 <main@@Base+0xce10>
   232e4:	movw	r0, #1
   232e8:	str	r0, [sp, #8]
   232ec:	b	232f8 <main@@Base+0xce10>
   232f0:	movw	r0, #0
   232f4:	str	r0, [sp, #8]
   232f8:	ldr	r0, [sp, #8]
   232fc:	add	sp, sp, #12
   23300:	bx	lr
   23304:	push	{fp, lr}
   23308:	mov	fp, sp
   2330c:	sub	sp, sp, #48	; 0x30
   23310:	str	r0, [fp, #-8]
   23314:	str	r1, [fp, #-12]
   23318:	str	r2, [fp, #-16]
   2331c:	str	r3, [fp, #-20]	; 0xffffffec
   23320:	ldr	r0, [fp, #-20]	; 0xffffffec
   23324:	movw	r1, #0
   23328:	str	r1, [r0]
   2332c:	ldr	r0, [fp, #-8]
   23330:	ldr	r0, [r0]
   23334:	movw	r1, #3
   23338:	bl	2b898 <flatcc_builder_start_table@@Base>
   2333c:	cmp	r0, #0
   23340:	beq	23348 <main@@Base+0xce60>
   23344:	b	23720 <main@@Base+0xd238>
   23348:	ldr	r0, [fp, #-8]
   2334c:	ldr	r1, [fp, #-12]
   23350:	ldr	r2, [fp, #-16]
   23354:	add	r3, sp, #24
   23358:	bl	1baf8 <main@@Base+0x5610>
   2335c:	str	r0, [fp, #-12]
   23360:	ldr	r0, [sp, #24]
   23364:	cmp	r0, #0
   23368:	beq	236e0 <main@@Base+0xd1f8>
   2336c:	ldr	r0, [fp, #-8]
   23370:	ldr	r1, [fp, #-12]
   23374:	ldr	r2, [fp, #-16]
   23378:	bl	1bbdc <main@@Base+0x56f4>
   2337c:	str	r0, [fp, #-12]
   23380:	ldr	r0, [fp, #-12]
   23384:	ldr	r1, [fp, #-16]
   23388:	bl	1bc60 <main@@Base+0x5778>
   2338c:	str	r1, [sp, #4]
   23390:	str	r0, [sp]
   23394:	ldr	r0, [sp]
   23398:	ldr	r1, [sp, #4]
   2339c:	movw	r2, #29556	; 0x7374
   233a0:	movt	r2, #29797	; 0x7465
   233a4:	eor	r1, r1, r2
   233a8:	movw	r2, #28526	; 0x6f6e
   233ac:	movt	r2, #27251	; 0x6a73
   233b0:	eor	r0, r0, r2
   233b4:	orr	r0, r0, r1
   233b8:	cmp	r0, #0
   233bc:	bne	236b0 <main@@Base+0xd1c8>
   233c0:	b	233c4 <main@@Base+0xcedc>
   233c4:	ldr	r0, [fp, #-12]
   233c8:	add	r0, r0, #8
   233cc:	str	r0, [fp, #-12]
   233d0:	ldr	r0, [fp, #-12]
   233d4:	ldr	r1, [fp, #-16]
   233d8:	bl	1bc60 <main@@Base+0x5778>
   233dc:	str	r1, [sp, #4]
   233e0:	str	r0, [sp]
   233e4:	ldr	r0, [sp]
   233e8:	ldr	r1, [sp, #4]
   233ec:	movw	r2, #25958	; 0x6566
   233f0:	movt	r2, #28786	; 0x7072
   233f4:	eor	r1, r1, r2
   233f8:	movw	r2, #28769	; 0x7061
   233fc:	movt	r2, #27000	; 0x6978
   23400:	eor	r0, r0, r2
   23404:	orr	r0, r0, r1
   23408:	cmp	r0, #0
   2340c:	bne	23698 <main@@Base+0xd1b0>
   23410:	b	23414 <main@@Base+0xcf2c>
   23414:	ldr	r0, [fp, #-12]
   23418:	add	r0, r0, #8
   2341c:	str	r0, [fp, #-12]
   23420:	ldr	r0, [fp, #-12]
   23424:	ldr	r1, [fp, #-16]
   23428:	bl	1bc60 <main@@Base+0x5778>
   2342c:	str	r1, [sp, #4]
   23430:	str	r0, [sp]
   23434:	ldrh	r0, [sp, #2]
   23438:	ldr	r1, [sp, #4]
   2343c:	movw	r2, #29299	; 0x7273
   23440:	eor	r2, r2, r1, lsr #16
   23444:	orr	r0, r0, r1, lsl #16
   23448:	movw	r1, #26418	; 0x6732
   2344c:	movt	r1, #26990	; 0x696e
   23450:	eor	r0, r0, r1
   23454:	orr	r0, r0, r2
   23458:	cmp	r0, #0
   2345c:	bne	234f0 <main@@Base+0xd008>
   23460:	b	23464 <main@@Base+0xcf7c>
   23464:	ldr	r0, [fp, #-8]
   23468:	ldr	r1, [fp, #-12]
   2346c:	str	r1, [sp, #8]
   23470:	ldr	r2, [fp, #-16]
   23474:	movw	r3, #6
   23478:	bl	1bc98 <main@@Base+0x57b0>
   2347c:	str	r0, [fp, #-12]
   23480:	ldr	r0, [sp, #8]
   23484:	ldr	r1, [fp, #-12]
   23488:	cmp	r0, r1
   2348c:	beq	234e8 <main@@Base+0xd000>
   23490:	ldr	r0, [fp, #-8]
   23494:	ldr	r1, [fp, #-12]
   23498:	ldr	r2, [fp, #-16]
   2349c:	add	r3, sp, #16
   234a0:	bl	243c4 <main@@Base+0xdedc>
   234a4:	str	r0, [fp, #-12]
   234a8:	ldr	r0, [sp, #16]
   234ac:	cmp	r0, #0
   234b0:	beq	234d4 <main@@Base+0xcfec>
   234b4:	ldr	r0, [fp, #-8]
   234b8:	ldr	r0, [r0]
   234bc:	movw	r1, #1
   234c0:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   234c4:	str	r0, [sp, #12]
   234c8:	movw	r1, #0
   234cc:	cmp	r0, r1
   234d0:	bne	234d8 <main@@Base+0xcff0>
   234d4:	b	23720 <main@@Base+0xd238>
   234d8:	ldr	r0, [sp, #16]
   234dc:	ldr	r1, [sp, #12]
   234e0:	str	r0, [r1]
   234e4:	b	234ec <main@@Base+0xd004>
   234e8:	b	235b0 <main@@Base+0xd0c8>
   234ec:	b	235ac <main@@Base+0xd0c4>
   234f0:	ldrb	r0, [sp, #3]
   234f4:	ldr	r1, [sp, #4]
   234f8:	movw	r2, #26990	; 0x696e
   234fc:	movt	r2, #29299	; 0x7273
   23500:	eor	r1, r1, r2
   23504:	eor	r0, r0, #103	; 0x67
   23508:	orr	r0, r1, r0, lsl #24
   2350c:	cmp	r0, #0
   23510:	bne	235a4 <main@@Base+0xd0bc>
   23514:	b	23518 <main@@Base+0xd030>
   23518:	ldr	r0, [fp, #-8]
   2351c:	ldr	r1, [fp, #-12]
   23520:	str	r1, [sp, #8]
   23524:	ldr	r2, [fp, #-16]
   23528:	movw	r3, #5
   2352c:	bl	1bc98 <main@@Base+0x57b0>
   23530:	str	r0, [fp, #-12]
   23534:	ldr	r0, [sp, #8]
   23538:	ldr	r1, [fp, #-12]
   2353c:	cmp	r0, r1
   23540:	beq	2359c <main@@Base+0xd0b4>
   23544:	ldr	r0, [fp, #-8]
   23548:	ldr	r1, [fp, #-12]
   2354c:	ldr	r2, [fp, #-16]
   23550:	add	r3, sp, #16
   23554:	bl	24828 <main@@Base+0xe340>
   23558:	str	r0, [fp, #-12]
   2355c:	ldr	r0, [sp, #16]
   23560:	cmp	r0, #0
   23564:	beq	23588 <main@@Base+0xd0a0>
   23568:	ldr	r0, [fp, #-8]
   2356c:	ldr	r0, [r0]
   23570:	movw	r1, #0
   23574:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   23578:	str	r0, [sp, #12]
   2357c:	movw	r1, #0
   23580:	cmp	r0, r1
   23584:	bne	2358c <main@@Base+0xd0a4>
   23588:	b	23720 <main@@Base+0xd238>
   2358c:	ldr	r0, [sp, #16]
   23590:	ldr	r1, [sp, #12]
   23594:	str	r0, [r1]
   23598:	b	235a0 <main@@Base+0xd0b8>
   2359c:	b	235b0 <main@@Base+0xd0c8>
   235a0:	b	235a8 <main@@Base+0xd0c0>
   235a4:	b	235b0 <main@@Base+0xd0c8>
   235a8:	b	235ac <main@@Base+0xd0c4>
   235ac:	b	23694 <main@@Base+0xd1ac>
   235b0:	ldrh	r0, [sp, #2]
   235b4:	ldr	r1, [sp, #4]
   235b8:	movw	r2, #29299	; 0x7273
   235bc:	eor	r2, r2, r1, lsr #16
   235c0:	orr	r0, r0, r1, lsl #16
   235c4:	movw	r1, #26419	; 0x6733
   235c8:	movt	r1, #26990	; 0x696e
   235cc:	eor	r0, r0, r1
   235d0:	orr	r0, r0, r2
   235d4:	cmp	r0, #0
   235d8:	bne	2367c <main@@Base+0xd194>
   235dc:	b	235e0 <main@@Base+0xd0f8>
   235e0:	ldr	r0, [fp, #-8]
   235e4:	ldr	r1, [fp, #-12]
   235e8:	str	r1, [sp, #8]
   235ec:	ldr	r2, [fp, #-16]
   235f0:	movw	r3, #6
   235f4:	bl	1bc98 <main@@Base+0x57b0>
   235f8:	str	r0, [fp, #-12]
   235fc:	ldr	r0, [sp, #8]
   23600:	ldr	r1, [fp, #-12]
   23604:	cmp	r0, r1
   23608:	beq	23664 <main@@Base+0xd17c>
   2360c:	ldr	r0, [fp, #-8]
   23610:	ldr	r1, [fp, #-12]
   23614:	ldr	r2, [fp, #-16]
   23618:	add	r3, sp, #16
   2361c:	bl	25460 <main@@Base+0xef78>
   23620:	str	r0, [fp, #-12]
   23624:	ldr	r0, [sp, #16]
   23628:	cmp	r0, #0
   2362c:	beq	23650 <main@@Base+0xd168>
   23630:	ldr	r0, [fp, #-8]
   23634:	ldr	r0, [r0]
   23638:	movw	r1, #2
   2363c:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   23640:	str	r0, [sp, #12]
   23644:	movw	r1, #0
   23648:	cmp	r0, r1
   2364c:	bne	23654 <main@@Base+0xd16c>
   23650:	b	23720 <main@@Base+0xd238>
   23654:	ldr	r0, [sp, #16]
   23658:	ldr	r1, [sp, #12]
   2365c:	str	r0, [r1]
   23660:	b	23678 <main@@Base+0xd190>
   23664:	ldr	r0, [fp, #-8]
   23668:	ldr	r1, [fp, #-12]
   2366c:	ldr	r2, [fp, #-16]
   23670:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23674:	str	r0, [fp, #-12]
   23678:	b	23690 <main@@Base+0xd1a8>
   2367c:	ldr	r0, [fp, #-8]
   23680:	ldr	r1, [fp, #-12]
   23684:	ldr	r2, [fp, #-16]
   23688:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2368c:	str	r0, [fp, #-12]
   23690:	b	23694 <main@@Base+0xd1ac>
   23694:	b	236ac <main@@Base+0xd1c4>
   23698:	ldr	r0, [fp, #-8]
   2369c:	ldr	r1, [fp, #-12]
   236a0:	ldr	r2, [fp, #-16]
   236a4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   236a8:	str	r0, [fp, #-12]
   236ac:	b	236c4 <main@@Base+0xd1dc>
   236b0:	ldr	r0, [fp, #-8]
   236b4:	ldr	r1, [fp, #-12]
   236b8:	ldr	r2, [fp, #-16]
   236bc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   236c0:	str	r0, [fp, #-12]
   236c4:	ldr	r0, [fp, #-8]
   236c8:	ldr	r1, [fp, #-12]
   236cc:	ldr	r2, [fp, #-16]
   236d0:	add	r3, sp, #24
   236d4:	bl	20c14 <main@@Base+0xa72c>
   236d8:	str	r0, [fp, #-12]
   236dc:	b	23360 <main@@Base+0xce78>
   236e0:	ldr	r0, [fp, #-8]
   236e4:	ldr	r0, [r0, #20]
   236e8:	cmp	r0, #0
   236ec:	beq	236f4 <main@@Base+0xd20c>
   236f0:	b	23720 <main@@Base+0xd238>
   236f4:	ldr	r0, [fp, #-8]
   236f8:	ldr	r0, [r0]
   236fc:	bl	2c500 <flatcc_builder_end_table@@Base>
   23700:	ldr	r1, [fp, #-20]	; 0xffffffec
   23704:	str	r0, [r1]
   23708:	cmp	r0, #0
   2370c:	bne	23714 <main@@Base+0xd22c>
   23710:	b	23720 <main@@Base+0xd238>
   23714:	ldr	r0, [fp, #-12]
   23718:	str	r0, [fp, #-4]
   2371c:	b	23738 <main@@Base+0xd250>
   23720:	ldr	r0, [fp, #-8]
   23724:	ldr	r1, [fp, #-12]
   23728:	ldr	r2, [fp, #-16]
   2372c:	movw	r3, #33	; 0x21
   23730:	bl	33158 <flatcc_json_parser_set_error@@Base>
   23734:	str	r0, [fp, #-4]
   23738:	ldr	r0, [fp, #-4]
   2373c:	mov	sp, fp
   23740:	pop	{fp, pc}
   23744:	push	{r4, sl, fp, lr}
   23748:	add	fp, sp, #8
   2374c:	sub	sp, sp, #144	; 0x90
   23750:	str	r0, [fp, #-16]
   23754:	str	r1, [fp, #-20]	; 0xffffffec
   23758:	str	r2, [fp, #-24]	; 0xffffffe8
   2375c:	str	r3, [fp, #-28]	; 0xffffffe4
   23760:	ldr	r0, [fp, #-28]	; 0xffffffe4
   23764:	movw	r1, #0
   23768:	str	r1, [r0]
   2376c:	ldr	r0, [fp, #-16]
   23770:	ldr	r0, [r0]
   23774:	movw	r1, #10
   23778:	bl	2b898 <flatcc_builder_start_table@@Base>
   2377c:	cmp	r0, #0
   23780:	beq	23788 <main@@Base+0xd2a0>
   23784:	b	24360 <main@@Base+0xde78>
   23788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2378c:	ldr	r1, [fp, #-16]
   23790:	ldr	r2, [fp, #-20]	; 0xffffffec
   23794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23798:	str	r0, [fp, #-64]	; 0xffffffc0
   2379c:	mov	r0, r1
   237a0:	mov	r1, r2
   237a4:	mov	r2, r3
   237a8:	movw	r3, #5
   237ac:	sub	ip, fp, #60	; 0x3c
   237b0:	str	ip, [sp]
   237b4:	bl	363dc <flatcc_json_parser_prepare_unions@@Base>
   237b8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   237bc:	cmp	r1, r0
   237c0:	bne	237c8 <main@@Base+0xd2e0>
   237c4:	b	24360 <main@@Base+0xde78>
   237c8:	ldr	r0, [fp, #-16]
   237cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   237d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   237d4:	sub	r3, fp, #32
   237d8:	bl	1baf8 <main@@Base+0x5610>
   237dc:	str	r0, [fp, #-20]	; 0xffffffec
   237e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237e4:	cmp	r0, #0
   237e8:	beq	24308 <main@@Base+0xde20>
   237ec:	ldr	r0, [fp, #-16]
   237f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   237f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   237f8:	bl	1bbdc <main@@Base+0x56f4>
   237fc:	str	r0, [fp, #-20]	; 0xffffffec
   23800:	ldr	r0, [fp, #-20]	; 0xffffffec
   23804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23808:	bl	1bc60 <main@@Base+0x5778>
   2380c:	str	r1, [fp, #-52]	; 0xffffffcc
   23810:	str	r0, [fp, #-56]	; 0xffffffc8
   23814:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2381c:	movw	r2, #29796	; 0x7464
   23820:	movt	r2, #24931	; 0x6163
   23824:	subs	r0, r2, r0
   23828:	movw	r2, #24946	; 0x6172
   2382c:	movt	r2, #25448	; 0x6368
   23830:	sbcs	r1, r2, r1
   23834:	bcc	23c38 <main@@Base+0xd750>
   23838:	b	2383c <main@@Base+0xd354>
   2383c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23840:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23844:	movw	r2, #29793	; 0x7461
   23848:	movt	r2, #24942	; 0x616e
   2384c:	eor	r1, r1, r2
   23850:	movw	r2, #28265	; 0x6e69
   23854:	movt	r2, #26479	; 0x676f
   23858:	eor	r0, r0, r2
   2385c:	orr	r0, r0, r1
   23860:	cmp	r0, #0
   23864:	bne	23a34 <main@@Base+0xd54c>
   23868:	b	2386c <main@@Base+0xd384>
   2386c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23870:	add	r0, r0, #8
   23874:	str	r0, [fp, #-20]	; 0xffffffec
   23878:	ldr	r0, [fp, #-20]	; 0xffffffec
   2387c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23880:	bl	1bc60 <main@@Base+0x5778>
   23884:	str	r1, [fp, #-52]	; 0xffffffcc
   23888:	str	r0, [fp, #-56]	; 0xffffffc8
   2388c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23890:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23894:	movw	r2, #29791	; 0x745f
   23898:	movt	r2, #115	; 0x73
   2389c:	eor	r2, r2, r1, lsr #8
   238a0:	lsr	r0, r0, #8
   238a4:	orr	r0, r0, r1, lsl #24
   238a8:	movw	r1, #28773	; 0x7065
   238ac:	movt	r1, #29817	; 0x7479
   238b0:	eor	r0, r0, r1
   238b4:	orr	r0, r0, r2
   238b8:	cmp	r0, #0
   238bc:	bne	2396c <main@@Base+0xd484>
   238c0:	b	238c4 <main@@Base+0xd3dc>
   238c4:	ldr	r0, [fp, #-16]
   238c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   238cc:	str	r1, [fp, #-48]	; 0xffffffd0
   238d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   238d4:	movw	r3, #7
   238d8:	bl	1bc98 <main@@Base+0x57b0>
   238dc:	str	r0, [fp, #-20]	; 0xffffffec
   238e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   238e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   238e8:	cmp	r0, r1
   238ec:	beq	23954 <main@@Base+0xd46c>
   238f0:	ldr	r0, [pc, #2756]	; 243bc <main@@Base+0xded4>
   238f4:	add	r0, pc, r0
   238f8:	ldr	r1, [pc, #2752]	; 243c0 <main@@Base+0xded8>
   238fc:	add	r1, pc, r1
   23900:	ldr	r2, [fp, #-16]
   23904:	ldr	r3, [fp, #-20]	; 0xffffffec
   23908:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2390c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   23910:	str	r0, [fp, #-68]	; 0xffffffbc
   23914:	mov	r0, r2
   23918:	str	r1, [fp, #-72]	; 0xffffffb8
   2391c:	mov	r1, r3
   23920:	mov	r2, ip
   23924:	movw	r3, #1
   23928:	movw	ip, #3
   2392c:	uxth	ip, ip
   23930:	str	ip, [sp]
   23934:	str	lr, [sp, #4]
   23938:	ldr	ip, [fp, #-68]	; 0xffffffbc
   2393c:	str	ip, [sp, #8]
   23940:	ldr	lr, [fp, #-72]	; 0xffffffb8
   23944:	str	lr, [sp, #12]
   23948:	bl	366ec <flatcc_json_parser_union_type@@Base>
   2394c:	str	r0, [fp, #-20]	; 0xffffffec
   23950:	b	23968 <main@@Base+0xd480>
   23954:	ldr	r0, [fp, #-16]
   23958:	ldr	r1, [fp, #-20]	; 0xffffffec
   2395c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23960:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23964:	str	r0, [fp, #-20]	; 0xffffffec
   23968:	b	23a30 <main@@Base+0xd548>
   2396c:	ldrh	r0, [fp, #-50]	; 0xffffffce
   23970:	movw	r1, #0
   23974:	movt	r1, #29556	; 0x7374
   23978:	teq	r1, r0, lsl #16
   2397c:	bne	23a18 <main@@Base+0xd530>
   23980:	b	23984 <main@@Base+0xd49c>
   23984:	ldr	r0, [fp, #-16]
   23988:	ldr	r1, [fp, #-20]	; 0xffffffec
   2398c:	str	r1, [fp, #-48]	; 0xffffffd0
   23990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23994:	movw	r3, #2
   23998:	bl	1bc98 <main@@Base+0x57b0>
   2399c:	str	r0, [fp, #-20]	; 0xffffffec
   239a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   239a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   239a8:	cmp	r0, r1
   239ac:	beq	23a00 <main@@Base+0xd518>
   239b0:	ldr	r0, [pc, #2560]	; 243b8 <main@@Base+0xded0>
   239b4:	add	r0, pc, r0
   239b8:	ldr	r1, [fp, #-16]
   239bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   239c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   239c4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   239c8:	str	r0, [sp, #76]	; 0x4c
   239cc:	mov	r0, r1
   239d0:	mov	r1, r2
   239d4:	mov	r2, r3
   239d8:	movw	r3, #1
   239dc:	movw	lr, #3
   239e0:	uxth	lr, lr
   239e4:	str	lr, [sp]
   239e8:	str	ip, [sp, #4]
   239ec:	ldr	ip, [sp, #76]	; 0x4c
   239f0:	str	ip, [sp, #8]
   239f4:	bl	36500 <flatcc_json_parser_union@@Base>
   239f8:	str	r0, [fp, #-20]	; 0xffffffec
   239fc:	b	23a14 <main@@Base+0xd52c>
   23a00:	ldr	r0, [fp, #-16]
   23a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   23a08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23a0c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23a10:	str	r0, [fp, #-20]	; 0xffffffec
   23a14:	b	23a2c <main@@Base+0xd544>
   23a18:	ldr	r0, [fp, #-16]
   23a1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23a20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23a24:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23a28:	str	r0, [fp, #-20]	; 0xffffffec
   23a2c:	b	23a30 <main@@Base+0xd548>
   23a30:	b	23c34 <main@@Base+0xd74c>
   23a34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23a38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23a3c:	movw	r2, #28005	; 0x6d65
   23a40:	movt	r2, #25441	; 0x6361
   23a44:	eor	r1, r1, r2
   23a48:	movw	r2, #29817	; 0x7479
   23a4c:	movt	r2, #28511	; 0x6f5f
   23a50:	eor	r0, r0, r2
   23a54:	orr	r0, r0, r1
   23a58:	cmp	r0, #0
   23a5c:	bne	23b5c <main@@Base+0xd674>
   23a60:	b	23a64 <main@@Base+0xd57c>
   23a64:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a68:	add	r0, r0, #8
   23a6c:	str	r0, [fp, #-20]	; 0xffffffec
   23a70:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23a78:	bl	1bc60 <main@@Base+0x5778>
   23a7c:	str	r1, [fp, #-52]	; 0xffffffcc
   23a80:	str	r0, [fp, #-56]	; 0xffffffc8
   23a84:	ldrh	r0, [fp, #-50]	; 0xffffffce
   23a88:	movw	r1, #0
   23a8c:	movt	r1, #28773	; 0x7065
   23a90:	teq	r1, r0, lsl #16
   23a94:	bne	23b44 <main@@Base+0xd65c>
   23a98:	b	23a9c <main@@Base+0xd5b4>
   23a9c:	ldr	r0, [fp, #-16]
   23aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23aa4:	str	r1, [fp, #-48]	; 0xffffffd0
   23aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23aac:	movw	r3, #2
   23ab0:	bl	1bc98 <main@@Base+0x57b0>
   23ab4:	str	r0, [fp, #-20]	; 0xffffffec
   23ab8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ac0:	cmp	r0, r1
   23ac4:	beq	23b2c <main@@Base+0xd644>
   23ac8:	ldr	r0, [pc, #2272]	; 243b0 <main@@Base+0xdec8>
   23acc:	add	r0, pc, r0
   23ad0:	ldr	r1, [pc, #2268]	; 243b4 <main@@Base+0xdecc>
   23ad4:	add	r1, pc, r1
   23ad8:	ldr	r2, [fp, #-16]
   23adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ae0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   23ae4:	ldr	lr, [fp, #-60]	; 0xffffffc4
   23ae8:	str	r0, [sp, #72]	; 0x48
   23aec:	mov	r0, r2
   23af0:	str	r1, [sp, #68]	; 0x44
   23af4:	mov	r1, r3
   23af8:	mov	r2, ip
   23afc:	movw	r3, #3
   23b00:	movw	ip, #7
   23b04:	uxth	ip, ip
   23b08:	str	ip, [sp]
   23b0c:	str	lr, [sp, #4]
   23b10:	ldr	ip, [sp, #72]	; 0x48
   23b14:	str	ip, [sp, #8]
   23b18:	ldr	lr, [sp, #68]	; 0x44
   23b1c:	str	lr, [sp, #12]
   23b20:	bl	366ec <flatcc_json_parser_union_type@@Base>
   23b24:	str	r0, [fp, #-20]	; 0xffffffec
   23b28:	b	23b40 <main@@Base+0xd658>
   23b2c:	ldr	r0, [fp, #-16]
   23b30:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b38:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23b3c:	str	r0, [fp, #-20]	; 0xffffffec
   23b40:	b	23b58 <main@@Base+0xd670>
   23b44:	ldr	r0, [fp, #-16]
   23b48:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b50:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23b54:	str	r0, [fp, #-20]	; 0xffffffec
   23b58:	b	23c30 <main@@Base+0xd748>
   23b5c:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   23b60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23b64:	movw	r2, #28005	; 0x6d65
   23b68:	movt	r2, #25441	; 0x6361
   23b6c:	eor	r1, r1, r2
   23b70:	eor	r0, r0, #111	; 0x6f
   23b74:	orr	r0, r1, r0, lsl #24
   23b78:	cmp	r0, #0
   23b7c:	bne	23c18 <main@@Base+0xd730>
   23b80:	b	23b84 <main@@Base+0xd69c>
   23b84:	ldr	r0, [fp, #-16]
   23b88:	ldr	r1, [fp, #-20]	; 0xffffffec
   23b8c:	str	r1, [fp, #-48]	; 0xffffffd0
   23b90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23b94:	movw	r3, #5
   23b98:	bl	1bc98 <main@@Base+0x57b0>
   23b9c:	str	r0, [fp, #-20]	; 0xffffffec
   23ba0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ba8:	cmp	r0, r1
   23bac:	beq	23c00 <main@@Base+0xd718>
   23bb0:	ldr	r0, [pc, #2036]	; 243ac <main@@Base+0xdec4>
   23bb4:	add	r0, pc, r0
   23bb8:	ldr	r1, [fp, #-16]
   23bbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   23bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23bc4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   23bc8:	str	r0, [sp, #64]	; 0x40
   23bcc:	mov	r0, r1
   23bd0:	mov	r1, r2
   23bd4:	mov	r2, r3
   23bd8:	movw	r3, #3
   23bdc:	movw	lr, #7
   23be0:	uxth	lr, lr
   23be4:	str	lr, [sp]
   23be8:	str	ip, [sp, #4]
   23bec:	ldr	ip, [sp, #64]	; 0x40
   23bf0:	str	ip, [sp, #8]
   23bf4:	bl	36500 <flatcc_json_parser_union@@Base>
   23bf8:	str	r0, [fp, #-20]	; 0xffffffec
   23bfc:	b	23c14 <main@@Base+0xd72c>
   23c00:	ldr	r0, [fp, #-16]
   23c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c0c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23c10:	str	r0, [fp, #-20]	; 0xffffffec
   23c14:	b	23c2c <main@@Base+0xd744>
   23c18:	ldr	r0, [fp, #-16]
   23c1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c24:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23c28:	str	r0, [fp, #-20]	; 0xffffffec
   23c2c:	b	23c30 <main@@Base+0xd748>
   23c30:	b	23c34 <main@@Base+0xd74c>
   23c34:	b	242ec <main@@Base+0xde04>
   23c38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23c3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23c40:	movw	r2, #26720	; 0x6860
   23c44:	movt	r2, #24419	; 0x5f63
   23c48:	subs	r0, r2, r0
   23c4c:	movw	r2, #26990	; 0x696e
   23c50:	movt	r2, #28001	; 0x6d61
   23c54:	sbcs	r1, r2, r1
   23c58:	bcc	23e84 <main@@Base+0xd99c>
   23c5c:	b	23c60 <main@@Base+0xd778>
   23c60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23c64:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23c68:	movw	r2, #24946	; 0x6172
   23c6c:	movt	r2, #25448	; 0x6368
   23c70:	eor	r1, r1, r2
   23c74:	movw	r2, #29797	; 0x7465
   23c78:	movt	r2, #24931	; 0x6163
   23c7c:	eor	r0, r0, r2
   23c80:	orr	r0, r0, r1
   23c84:	cmp	r0, #0
   23c88:	bne	23e6c <main@@Base+0xd984>
   23c8c:	b	23c90 <main@@Base+0xd7a8>
   23c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   23c94:	add	r0, r0, #8
   23c98:	str	r0, [fp, #-20]	; 0xffffffec
   23c9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23ca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23ca4:	bl	1bc60 <main@@Base+0x5778>
   23ca8:	str	r1, [fp, #-52]	; 0xffffffcc
   23cac:	str	r0, [fp, #-56]	; 0xffffffc8
   23cb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23cb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23cb8:	movw	r2, #29535	; 0x735f
   23cbc:	movt	r2, #114	; 0x72
   23cc0:	eor	r2, r2, r1, lsr #8
   23cc4:	lsr	r0, r0, #8
   23cc8:	orr	r0, r0, r1, lsl #24
   23ccc:	movw	r1, #28773	; 0x7065
   23cd0:	movt	r1, #29817	; 0x7479
   23cd4:	eor	r0, r0, r1
   23cd8:	orr	r0, r0, r2
   23cdc:	cmp	r0, #0
   23ce0:	bne	23da4 <main@@Base+0xd8bc>
   23ce4:	b	23ce8 <main@@Base+0xd800>
   23ce8:	ldr	r0, [fp, #-16]
   23cec:	ldr	r1, [fp, #-20]	; 0xffffffec
   23cf0:	str	r1, [fp, #-48]	; 0xffffffd0
   23cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23cf8:	movw	r3, #7
   23cfc:	bl	1bc98 <main@@Base+0x57b0>
   23d00:	str	r0, [fp, #-20]	; 0xffffffec
   23d04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23d08:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d0c:	cmp	r0, r1
   23d10:	beq	23d8c <main@@Base+0xd8a4>
   23d14:	ldr	r0, [pc, #1668]	; 243a0 <main@@Base+0xdeb8>
   23d18:	add	r0, pc, r0
   23d1c:	ldr	r1, [pc, #1664]	; 243a4 <main@@Base+0xdebc>
   23d20:	add	r1, pc, r1
   23d24:	ldr	r2, [pc, #1660]	; 243a8 <main@@Base+0xdec0>
   23d28:	add	r2, pc, r2
   23d2c:	ldr	r3, [fp, #-16]
   23d30:	ldr	ip, [fp, #-20]	; 0xffffffec
   23d34:	ldr	lr, [fp, #-24]	; 0xffffffe8
   23d38:	ldr	r4, [fp, #-60]	; 0xffffffc4
   23d3c:	str	r0, [sp, #60]	; 0x3c
   23d40:	mov	r0, r3
   23d44:	str	r1, [sp, #56]	; 0x38
   23d48:	mov	r1, ip
   23d4c:	str	r2, [sp, #52]	; 0x34
   23d50:	mov	r2, lr
   23d54:	movw	r3, #4
   23d58:	movw	ip, #9
   23d5c:	uxth	ip, ip
   23d60:	str	ip, [sp]
   23d64:	str	r4, [sp, #4]
   23d68:	ldr	ip, [sp, #60]	; 0x3c
   23d6c:	str	ip, [sp, #8]
   23d70:	ldr	lr, [sp, #56]	; 0x38
   23d74:	str	lr, [sp, #12]
   23d78:	ldr	r4, [sp, #52]	; 0x34
   23d7c:	str	r4, [sp, #16]
   23d80:	bl	36fe0 <flatcc_json_parser_union_type_vector@@Base>
   23d84:	str	r0, [fp, #-20]	; 0xffffffec
   23d88:	b	23da0 <main@@Base+0xd8b8>
   23d8c:	ldr	r0, [fp, #-16]
   23d90:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23d98:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23d9c:	str	r0, [fp, #-20]	; 0xffffffec
   23da0:	b	23e68 <main@@Base+0xd980>
   23da4:	ldrh	r0, [fp, #-50]	; 0xffffffce
   23da8:	movw	r1, #0
   23dac:	movt	r1, #29299	; 0x7273
   23db0:	teq	r1, r0, lsl #16
   23db4:	bne	23e50 <main@@Base+0xd968>
   23db8:	b	23dbc <main@@Base+0xd8d4>
   23dbc:	ldr	r0, [fp, #-16]
   23dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   23dc4:	str	r1, [fp, #-48]	; 0xffffffd0
   23dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23dcc:	movw	r3, #2
   23dd0:	bl	1bc98 <main@@Base+0x57b0>
   23dd4:	str	r0, [fp, #-20]	; 0xffffffec
   23dd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23ddc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23de0:	cmp	r0, r1
   23de4:	beq	23e38 <main@@Base+0xd950>
   23de8:	ldr	r0, [pc, #1452]	; 2439c <main@@Base+0xdeb4>
   23dec:	add	r0, pc, r0
   23df0:	ldr	r1, [fp, #-16]
   23df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   23df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23dfc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   23e00:	str	r0, [sp, #48]	; 0x30
   23e04:	mov	r0, r1
   23e08:	mov	r1, r2
   23e0c:	mov	r2, r3
   23e10:	movw	r3, #4
   23e14:	movw	lr, #9
   23e18:	uxth	lr, lr
   23e1c:	str	lr, [sp]
   23e20:	str	ip, [sp, #4]
   23e24:	ldr	ip, [sp, #48]	; 0x30
   23e28:	str	ip, [sp, #8]
   23e2c:	bl	36c50 <flatcc_json_parser_union_vector@@Base>
   23e30:	str	r0, [fp, #-20]	; 0xffffffec
   23e34:	b	23e4c <main@@Base+0xd964>
   23e38:	ldr	r0, [fp, #-16]
   23e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e44:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23e48:	str	r0, [fp, #-20]	; 0xffffffec
   23e4c:	b	23e64 <main@@Base+0xd97c>
   23e50:	ldr	r0, [fp, #-16]
   23e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e5c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23e60:	str	r0, [fp, #-20]	; 0xffffffec
   23e64:	b	23e68 <main@@Base+0xd980>
   23e68:	b	23e80 <main@@Base+0xd998>
   23e6c:	ldr	r0, [fp, #-16]
   23e70:	ldr	r1, [fp, #-20]	; 0xffffffec
   23e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23e78:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23e7c:	str	r0, [fp, #-20]	; 0xffffffec
   23e80:	b	242e8 <main@@Base+0xde00>
   23e84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23e88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23e8c:	movw	r2, #26990	; 0x696e
   23e90:	movt	r2, #28001	; 0x6d61
   23e94:	eor	r1, r1, r2
   23e98:	movw	r2, #26721	; 0x6861
   23e9c:	movt	r2, #24419	; 0x5f63
   23ea0:	eor	r0, r0, r2
   23ea4:	orr	r0, r0, r1
   23ea8:	cmp	r0, #0
   23eac:	bne	240e0 <main@@Base+0xdbf8>
   23eb0:	b	23eb4 <main@@Base+0xd9cc>
   23eb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   23eb8:	add	r0, r0, #8
   23ebc:	str	r0, [fp, #-20]	; 0xffffffec
   23ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   23ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23ec8:	bl	1bc60 <main@@Base+0x5778>
   23ecc:	str	r1, [fp, #-52]	; 0xffffffcc
   23ed0:	str	r0, [fp, #-56]	; 0xffffffc8
   23ed4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   23ed8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   23edc:	movw	r2, #25460	; 0x6374
   23ee0:	movt	r2, #29281	; 0x7261
   23ee4:	eor	r1, r1, r2
   23ee8:	movw	r2, #24436	; 0x5f74
   23eec:	movt	r2, #25970	; 0x6572
   23ef0:	eor	r0, r0, r2
   23ef4:	orr	r0, r0, r1
   23ef8:	cmp	r0, #0
   23efc:	bne	24000 <main@@Base+0xdb18>
   23f00:	b	23f04 <main@@Base+0xda1c>
   23f04:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f08:	add	r0, r0, #8
   23f0c:	str	r0, [fp, #-20]	; 0xffffffec
   23f10:	ldr	r0, [fp, #-20]	; 0xffffffec
   23f14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23f18:	bl	1bc60 <main@@Base+0x5778>
   23f1c:	str	r1, [fp, #-52]	; 0xffffffcc
   23f20:	str	r0, [fp, #-56]	; 0xffffffc8
   23f24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   23f28:	bic	r0, r0, #255	; 0xff
   23f2c:	movw	r1, #25856	; 0x6500
   23f30:	movt	r1, #31088	; 0x7970
   23f34:	teq	r0, r1
   23f38:	bne	23fe8 <main@@Base+0xdb00>
   23f3c:	b	23f40 <main@@Base+0xda58>
   23f40:	ldr	r0, [fp, #-16]
   23f44:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f48:	str	r1, [fp, #-48]	; 0xffffffd0
   23f4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23f50:	movw	r3, #3
   23f54:	bl	1bc98 <main@@Base+0x57b0>
   23f58:	str	r0, [fp, #-20]	; 0xffffffec
   23f5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23f60:	ldr	r1, [fp, #-20]	; 0xffffffec
   23f64:	cmp	r0, r1
   23f68:	beq	23fd0 <main@@Base+0xdae8>
   23f6c:	ldr	r0, [pc, #1056]	; 24394 <main@@Base+0xdeac>
   23f70:	add	r0, pc, r0
   23f74:	ldr	r1, [pc, #1052]	; 24398 <main@@Base+0xdeb0>
   23f78:	add	r1, pc, r1
   23f7c:	ldr	r2, [fp, #-16]
   23f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   23f84:	ldr	ip, [fp, #-24]	; 0xffffffe8
   23f88:	ldr	lr, [fp, #-60]	; 0xffffffc4
   23f8c:	str	r0, [sp, #44]	; 0x2c
   23f90:	mov	r0, r2
   23f94:	str	r1, [sp, #40]	; 0x28
   23f98:	mov	r1, r3
   23f9c:	mov	r2, ip
   23fa0:	movw	r3, #0
   23fa4:	movw	ip, #1
   23fa8:	uxth	ip, ip
   23fac:	str	ip, [sp]
   23fb0:	str	lr, [sp, #4]
   23fb4:	ldr	ip, [sp, #44]	; 0x2c
   23fb8:	str	ip, [sp, #8]
   23fbc:	ldr	lr, [sp, #40]	; 0x28
   23fc0:	str	lr, [sp, #12]
   23fc4:	bl	366ec <flatcc_json_parser_union_type@@Base>
   23fc8:	str	r0, [fp, #-20]	; 0xffffffec
   23fcc:	b	23fe4 <main@@Base+0xdafc>
   23fd0:	ldr	r0, [fp, #-16]
   23fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23fdc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23fe0:	str	r0, [fp, #-20]	; 0xffffffec
   23fe4:	b	23ffc <main@@Base+0xdb14>
   23fe8:	ldr	r0, [fp, #-16]
   23fec:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23ff4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   23ff8:	str	r0, [fp, #-20]	; 0xffffffec
   23ffc:	b	240dc <main@@Base+0xdbf4>
   24000:	ldrh	r0, [fp, #-54]	; 0xffffffca
   24004:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24008:	movw	r2, #29281	; 0x7261
   2400c:	eor	r2, r2, r1, lsr #16
   24010:	orr	r0, r0, r1, lsl #16
   24014:	movw	r1, #25970	; 0x6572
   24018:	movt	r1, #25460	; 0x6374
   2401c:	eor	r0, r0, r1
   24020:	orr	r0, r0, r2
   24024:	cmp	r0, #0
   24028:	bne	240c4 <main@@Base+0xdbdc>
   2402c:	b	24030 <main@@Base+0xdb48>
   24030:	ldr	r0, [fp, #-16]
   24034:	ldr	r1, [fp, #-20]	; 0xffffffec
   24038:	str	r1, [fp, #-48]	; 0xffffffd0
   2403c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24040:	movw	r3, #6
   24044:	bl	1bc98 <main@@Base+0x57b0>
   24048:	str	r0, [fp, #-20]	; 0xffffffec
   2404c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24050:	ldr	r1, [fp, #-20]	; 0xffffffec
   24054:	cmp	r0, r1
   24058:	beq	240ac <main@@Base+0xdbc4>
   2405c:	ldr	r0, [pc, #812]	; 24390 <main@@Base+0xdea8>
   24060:	add	r0, pc, r0
   24064:	ldr	r1, [fp, #-16]
   24068:	ldr	r2, [fp, #-20]	; 0xffffffec
   2406c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24070:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24074:	str	r0, [sp, #36]	; 0x24
   24078:	mov	r0, r1
   2407c:	mov	r1, r2
   24080:	mov	r2, r3
   24084:	movw	r3, #0
   24088:	movw	lr, #1
   2408c:	uxth	lr, lr
   24090:	str	lr, [sp]
   24094:	str	ip, [sp, #4]
   24098:	ldr	ip, [sp, #36]	; 0x24
   2409c:	str	ip, [sp, #8]
   240a0:	bl	36500 <flatcc_json_parser_union@@Base>
   240a4:	str	r0, [fp, #-20]	; 0xffffffec
   240a8:	b	240c0 <main@@Base+0xdbd8>
   240ac:	ldr	r0, [fp, #-16]
   240b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   240b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   240b8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   240bc:	str	r0, [fp, #-20]	; 0xffffffec
   240c0:	b	240d8 <main@@Base+0xdbf0>
   240c4:	ldr	r0, [fp, #-16]
   240c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   240cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   240d0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   240d4:	str	r0, [fp, #-20]	; 0xffffffec
   240d8:	b	240dc <main@@Base+0xdbf4>
   240dc:	b	242e4 <main@@Base+0xddfc>
   240e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   240e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   240e8:	movw	r2, #25701	; 0x6465
   240ec:	movt	r2, #29545	; 0x7369
   240f0:	eor	r1, r1, r2
   240f4:	movw	r2, #26979	; 0x6963
   240f8:	movt	r2, #24427	; 0x5f6b
   240fc:	eor	r0, r0, r2
   24100:	orr	r0, r0, r1
   24104:	cmp	r0, #0
   24108:	bne	242cc <main@@Base+0xdde4>
   2410c:	b	24110 <main@@Base+0xdc28>
   24110:	ldr	r0, [fp, #-20]	; 0xffffffec
   24114:	add	r0, r0, #8
   24118:	str	r0, [fp, #-20]	; 0xffffffec
   2411c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24124:	bl	1bc60 <main@@Base+0x5778>
   24128:	str	r1, [fp, #-52]	; 0xffffffcc
   2412c:	str	r0, [fp, #-56]	; 0xffffffc8
   24130:	ldrh	r0, [fp, #-54]	; 0xffffffca
   24134:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24138:	movw	r2, #27487	; 0x6b5f
   2413c:	eor	r2, r2, r1, lsr #16
   24140:	orr	r0, r0, r1, lsl #16
   24144:	movw	r1, #28773	; 0x7065
   24148:	movt	r1, #29817	; 0x7479
   2414c:	eor	r0, r0, r1
   24150:	orr	r0, r0, r2
   24154:	cmp	r0, #0
   24158:	bne	24208 <main@@Base+0xdd20>
   2415c:	b	24160 <main@@Base+0xdc78>
   24160:	ldr	r0, [fp, #-16]
   24164:	ldr	r1, [fp, #-20]	; 0xffffffec
   24168:	str	r1, [fp, #-48]	; 0xffffffd0
   2416c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24170:	movw	r3, #6
   24174:	bl	1bc98 <main@@Base+0x57b0>
   24178:	str	r0, [fp, #-20]	; 0xffffffec
   2417c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24180:	ldr	r1, [fp, #-20]	; 0xffffffec
   24184:	cmp	r0, r1
   24188:	beq	241f0 <main@@Base+0xdd08>
   2418c:	ldr	r0, [pc, #500]	; 24388 <main@@Base+0xdea0>
   24190:	add	r0, pc, r0
   24194:	ldr	r1, [pc, #496]	; 2438c <main@@Base+0xdea4>
   24198:	add	r1, pc, r1
   2419c:	ldr	r2, [fp, #-16]
   241a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   241a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   241a8:	ldr	lr, [fp, #-60]	; 0xffffffc4
   241ac:	str	r0, [sp, #32]
   241b0:	mov	r0, r2
   241b4:	str	r1, [sp, #28]
   241b8:	mov	r1, r3
   241bc:	mov	r2, ip
   241c0:	movw	r3, #2
   241c4:	movw	ip, #5
   241c8:	uxth	ip, ip
   241cc:	str	ip, [sp]
   241d0:	str	lr, [sp, #4]
   241d4:	ldr	ip, [sp, #32]
   241d8:	str	ip, [sp, #8]
   241dc:	ldr	lr, [sp, #28]
   241e0:	str	lr, [sp, #12]
   241e4:	bl	366ec <flatcc_json_parser_union_type@@Base>
   241e8:	str	r0, [fp, #-20]	; 0xffffffec
   241ec:	b	24204 <main@@Base+0xdd1c>
   241f0:	ldr	r0, [fp, #-16]
   241f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   241f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   241fc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24200:	str	r0, [fp, #-20]	; 0xffffffec
   24204:	b	242c8 <main@@Base+0xdde0>
   24208:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   2420c:	mov	r1, #1795162112	; 0x6b000000
   24210:	teq	r1, r0, lsl #24
   24214:	bne	242b0 <main@@Base+0xddc8>
   24218:	b	2421c <main@@Base+0xdd34>
   2421c:	ldr	r0, [fp, #-16]
   24220:	ldr	r1, [fp, #-20]	; 0xffffffec
   24224:	str	r1, [fp, #-48]	; 0xffffffd0
   24228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2422c:	movw	r3, #1
   24230:	bl	1bc98 <main@@Base+0x57b0>
   24234:	str	r0, [fp, #-20]	; 0xffffffec
   24238:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2423c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24240:	cmp	r0, r1
   24244:	beq	24298 <main@@Base+0xddb0>
   24248:	ldr	r0, [pc, #308]	; 24384 <main@@Base+0xde9c>
   2424c:	add	r0, pc, r0
   24250:	ldr	r1, [fp, #-16]
   24254:	ldr	r2, [fp, #-20]	; 0xffffffec
   24258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2425c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   24260:	str	r0, [sp, #24]
   24264:	mov	r0, r1
   24268:	mov	r1, r2
   2426c:	mov	r2, r3
   24270:	movw	r3, #2
   24274:	movw	lr, #5
   24278:	uxth	lr, lr
   2427c:	str	lr, [sp]
   24280:	str	ip, [sp, #4]
   24284:	ldr	ip, [sp, #24]
   24288:	str	ip, [sp, #8]
   2428c:	bl	36500 <flatcc_json_parser_union@@Base>
   24290:	str	r0, [fp, #-20]	; 0xffffffec
   24294:	b	242ac <main@@Base+0xddc4>
   24298:	ldr	r0, [fp, #-16]
   2429c:	ldr	r1, [fp, #-20]	; 0xffffffec
   242a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242a4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   242a8:	str	r0, [fp, #-20]	; 0xffffffec
   242ac:	b	242c4 <main@@Base+0xdddc>
   242b0:	ldr	r0, [fp, #-16]
   242b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   242b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242bc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   242c0:	str	r0, [fp, #-20]	; 0xffffffec
   242c4:	b	242c8 <main@@Base+0xdde0>
   242c8:	b	242e0 <main@@Base+0xddf8>
   242cc:	ldr	r0, [fp, #-16]
   242d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   242d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242d8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   242dc:	str	r0, [fp, #-20]	; 0xffffffec
   242e0:	b	242e4 <main@@Base+0xddfc>
   242e4:	b	242e8 <main@@Base+0xde00>
   242e8:	b	242ec <main@@Base+0xde04>
   242ec:	ldr	r0, [fp, #-16]
   242f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   242f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242f8:	sub	r3, fp, #32
   242fc:	bl	20c14 <main@@Base+0xa72c>
   24300:	str	r0, [fp, #-20]	; 0xffffffec
   24304:	b	237e0 <main@@Base+0xd2f8>
   24308:	ldr	r0, [fp, #-16]
   2430c:	ldr	r0, [r0, #20]
   24310:	cmp	r0, #0
   24314:	beq	2431c <main@@Base+0xde34>
   24318:	b	24360 <main@@Base+0xde78>
   2431c:	ldr	r0, [fp, #-16]
   24320:	ldr	r1, [fp, #-20]	; 0xffffffec
   24324:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24328:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2432c:	bl	36484 <flatcc_json_parser_finalize_unions@@Base>
   24330:	str	r0, [fp, #-20]	; 0xffffffec
   24334:	ldr	r0, [fp, #-16]
   24338:	ldr	r0, [r0]
   2433c:	bl	2c500 <flatcc_builder_end_table@@Base>
   24340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24344:	str	r0, [r1]
   24348:	cmp	r0, #0
   2434c:	bne	24354 <main@@Base+0xde6c>
   24350:	b	24360 <main@@Base+0xde78>
   24354:	ldr	r0, [fp, #-20]	; 0xffffffec
   24358:	str	r0, [fp, #-12]
   2435c:	b	24378 <main@@Base+0xde90>
   24360:	ldr	r0, [fp, #-16]
   24364:	ldr	r1, [fp, #-20]	; 0xffffffec
   24368:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2436c:	movw	r3, #33	; 0x21
   24370:	bl	33158 <flatcc_json_parser_set_error@@Base>
   24374:	str	r0, [fp, #-12]
   24378:	ldr	r0, [fp, #-12]
   2437c:	sub	sp, fp, #8
   24380:	pop	{r4, sl, fp, pc}
   24384:	andeq	r1, r0, r4, lsl r8
   24388:	andeq	r9, r3, r8, asr r1
   2438c:	andeq	r1, r0, r8, asr #17
   24390:	andeq	r1, r0, r0, lsl #20
   24394:	andeq	r9, r3, r8, ror #6
   24398:	andeq	r1, r0, r8, ror #21
   2439c:	andeq	r1, r0, r4, ror ip
   243a0:			; <UNDEFINED> instruction: 0x000395b0
   243a4:	andeq	r1, r0, r0, asr #26
   243a8:	andeq	r1, r0, r0, asr #30
   243ac:	andeq	r1, r0, ip, lsr #29
   243b0:	andeq	r9, r3, ip, ror #15
   243b4:	andeq	r1, r0, ip, lsl #31
   243b8:	andeq	r2, r0, ip, lsr #1
   243bc:			; <UNDEFINED> instruction: 0x000399b4
   243c0:	andeq	r2, r0, r4, ror #2
   243c4:	push	{fp, lr}
   243c8:	mov	fp, sp
   243cc:	sub	sp, sp, #64	; 0x40
   243d0:	str	r0, [fp, #-8]
   243d4:	str	r1, [fp, #-12]
   243d8:	str	r2, [fp, #-16]
   243dc:	str	r3, [fp, #-20]	; 0xffffffec
   243e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   243e4:	movw	r1, #0
   243e8:	str	r1, [r0]
   243ec:	ldr	r0, [fp, #-8]
   243f0:	ldr	r0, [r0]
   243f4:	movw	r1, #2
   243f8:	bl	2b898 <flatcc_builder_start_table@@Base>
   243fc:	cmp	r0, #0
   24400:	beq	24408 <main@@Base+0xdf20>
   24404:	b	247fc <main@@Base+0xe314>
   24408:	ldr	r0, [fp, #-8]
   2440c:	ldr	r1, [fp, #-12]
   24410:	ldr	r2, [fp, #-16]
   24414:	sub	r3, fp, #24
   24418:	bl	1baf8 <main@@Base+0x5610>
   2441c:	str	r0, [fp, #-12]
   24420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24424:	cmp	r0, #0
   24428:	beq	247bc <main@@Base+0xe2d4>
   2442c:	ldr	r0, [fp, #-8]
   24430:	ldr	r1, [fp, #-12]
   24434:	ldr	r2, [fp, #-16]
   24438:	bl	1bbdc <main@@Base+0x56f4>
   2443c:	str	r0, [fp, #-12]
   24440:	ldr	r0, [fp, #-12]
   24444:	ldr	r1, [fp, #-16]
   24448:	bl	1bc60 <main@@Base+0x5778>
   2444c:	str	r1, [sp, #20]
   24450:	str	r0, [sp, #16]
   24454:	ldr	r0, [sp, #16]
   24458:	ldr	r1, [sp, #20]
   2445c:	movw	r2, #24929	; 0x6161
   24460:	movt	r2, #24929	; 0x6161
   24464:	eor	r1, r1, r2
   24468:	movw	r2, #25186	; 0x6262
   2446c:	movt	r2, #24418	; 0x5f62
   24470:	eor	r0, r0, r2
   24474:	orr	r0, r0, r1
   24478:	cmp	r0, #0
   2447c:	bne	2478c <main@@Base+0xe2a4>
   24480:	b	24484 <main@@Base+0xdf9c>
   24484:	ldr	r0, [fp, #-12]
   24488:	add	r0, r0, #8
   2448c:	str	r0, [fp, #-12]
   24490:	ldr	r0, [fp, #-12]
   24494:	ldr	r1, [fp, #-16]
   24498:	bl	1bc60 <main@@Base+0x5778>
   2449c:	str	r1, [sp, #20]
   244a0:	str	r0, [sp, #16]
   244a4:	ldr	r0, [sp, #16]
   244a8:	ldr	r1, [sp, #20]
   244ac:	movw	r2, #24435	; 0x5f73
   244b0:	movt	r2, #98	; 0x62
   244b4:	eor	r2, r2, r1, lsr #8
   244b8:	lsr	r0, r0, #8
   244bc:	orr	r0, r0, r1, lsl #24
   244c0:	movw	r1, #28787	; 0x7073
   244c4:	movt	r1, #29797	; 0x7465
   244c8:	eor	r0, r0, r1
   244cc:	orr	r0, r0, r2
   244d0:	cmp	r0, #0
   244d4:	bne	24618 <main@@Base+0xe130>
   244d8:	b	244dc <main@@Base+0xdff4>
   244dc:	ldr	r0, [fp, #-8]
   244e0:	ldr	r1, [fp, #-12]
   244e4:	str	r1, [sp, #24]
   244e8:	ldr	r2, [fp, #-16]
   244ec:	movw	r3, #7
   244f0:	bl	1bc98 <main@@Base+0x57b0>
   244f4:	str	r0, [fp, #-12]
   244f8:	ldr	r0, [sp, #24]
   244fc:	ldr	r1, [fp, #-12]
   24500:	cmp	r0, r1
   24504:	beq	24600 <main@@Base+0xe118>
   24508:	mov	r0, #0
   2450c:	str	r0, [sp, #12]
   24510:	str	r0, [sp, #8]
   24514:	ldr	r0, [fp, #-8]
   24518:	ldr	r1, [fp, #-12]
   2451c:	str	r1, [sp, #24]
   24520:	ldr	r2, [fp, #-16]
   24524:	add	r3, sp, #8
   24528:	bl	200f4 <main@@Base+0x9c0c>
   2452c:	str	r0, [fp, #-12]
   24530:	ldr	r0, [sp, #24]
   24534:	ldr	r1, [fp, #-12]
   24538:	cmp	r0, r1
   2453c:	bne	24590 <main@@Base+0xe0a8>
   24540:	ldr	r0, [pc, #732]	; 24824 <main@@Base+0xe33c>
   24544:	add	r3, pc, r0
   24548:	ldr	r0, [fp, #-8]
   2454c:	ldr	r1, [fp, #-12]
   24550:	str	r1, [sp, #24]
   24554:	ldr	r2, [fp, #-16]
   24558:	add	ip, sp, #8
   2455c:	str	ip, [sp]
   24560:	bl	201cc <main@@Base+0x9ce4>
   24564:	str	r0, [fp, #-12]
   24568:	ldr	r0, [fp, #-12]
   2456c:	ldr	r1, [sp, #24]
   24570:	cmp	r0, r1
   24574:	beq	24588 <main@@Base+0xe0a0>
   24578:	ldr	r0, [fp, #-12]
   2457c:	ldr	r1, [fp, #-16]
   24580:	cmp	r0, r1
   24584:	bne	2458c <main@@Base+0xe0a4>
   24588:	b	247fc <main@@Base+0xe314>
   2458c:	b	24590 <main@@Base+0xe0a8>
   24590:	ldr	r0, [sp, #8]
   24594:	ldr	r1, [sp, #12]
   24598:	orr	r0, r0, r1
   2459c:	cmp	r0, #0
   245a0:	bne	245bc <main@@Base+0xe0d4>
   245a4:	b	245a8 <main@@Base+0xe0c0>
   245a8:	ldr	r0, [fp, #-8]
   245ac:	ldr	r0, [r0, #8]
   245b0:	and	r0, r0, #2
   245b4:	cmp	r0, #0
   245b8:	beq	245fc <main@@Base+0xe114>
   245bc:	ldr	r0, [fp, #-8]
   245c0:	ldr	r0, [r0]
   245c4:	movw	r1, #0
   245c8:	movw	r2, #8
   245cc:	movw	r3, #8
   245d0:	uxth	r3, r3
   245d4:	bl	2d13c <flatcc_builder_table_add@@Base>
   245d8:	str	r0, [fp, #-28]	; 0xffffffe4
   245dc:	movw	r1, #0
   245e0:	cmp	r0, r1
   245e4:	bne	245ec <main@@Base+0xe104>
   245e8:	b	247fc <main@@Base+0xe314>
   245ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   245f0:	ldr	r2, [sp, #8]
   245f4:	ldr	r3, [sp, #12]
   245f8:	bl	203c8 <main@@Base+0x9ee0>
   245fc:	b	24614 <main@@Base+0xe12c>
   24600:	ldr	r0, [fp, #-8]
   24604:	ldr	r1, [fp, #-12]
   24608:	ldr	r2, [fp, #-16]
   2460c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24610:	str	r0, [fp, #-12]
   24614:	b	24788 <main@@Base+0xe2a0>
   24618:	ldr	r0, [sp, #16]
   2461c:	ldr	r1, [sp, #20]
   24620:	movw	r2, #29556	; 0x7374
   24624:	movt	r2, #25183	; 0x625f
   24628:	eor	r1, r1, r2
   2462c:	movw	r2, #29791	; 0x745f
   24630:	movt	r2, #24946	; 0x6172
   24634:	eor	r0, r0, r2
   24638:	orr	r0, r0, r1
   2463c:	cmp	r0, #0
   24640:	bne	24770 <main@@Base+0xe288>
   24644:	b	24648 <main@@Base+0xe160>
   24648:	ldr	r0, [fp, #-8]
   2464c:	ldr	r1, [fp, #-12]
   24650:	str	r1, [sp, #24]
   24654:	ldr	r2, [fp, #-16]
   24658:	movw	r3, #8
   2465c:	bl	1bc98 <main@@Base+0x57b0>
   24660:	str	r0, [fp, #-12]
   24664:	ldr	r0, [sp, #24]
   24668:	ldr	r1, [fp, #-12]
   2466c:	cmp	r0, r1
   24670:	beq	24758 <main@@Base+0xe270>
   24674:	movw	r0, #0
   24678:	str	r0, [sp, #4]
   2467c:	ldr	r0, [fp, #-8]
   24680:	ldr	r1, [fp, #-12]
   24684:	str	r1, [sp, #24]
   24688:	ldr	r2, [fp, #-16]
   2468c:	add	r3, sp, #4
   24690:	bl	20400 <main@@Base+0x9f18>
   24694:	str	r0, [fp, #-12]
   24698:	ldr	r0, [sp, #24]
   2469c:	ldr	r1, [fp, #-12]
   246a0:	cmp	r0, r1
   246a4:	bne	246f8 <main@@Base+0xe210>
   246a8:	ldr	r0, [pc, #368]	; 24820 <main@@Base+0xe338>
   246ac:	add	r3, pc, r0
   246b0:	ldr	r0, [fp, #-8]
   246b4:	ldr	r1, [fp, #-12]
   246b8:	str	r1, [sp, #24]
   246bc:	ldr	r2, [fp, #-16]
   246c0:	add	ip, sp, #4
   246c4:	str	ip, [sp]
   246c8:	bl	204d8 <main@@Base+0x9ff0>
   246cc:	str	r0, [fp, #-12]
   246d0:	ldr	r0, [fp, #-12]
   246d4:	ldr	r1, [sp, #24]
   246d8:	cmp	r0, r1
   246dc:	beq	246f0 <main@@Base+0xe208>
   246e0:	ldr	r0, [fp, #-12]
   246e4:	ldr	r1, [fp, #-16]
   246e8:	cmp	r0, r1
   246ec:	bne	246f4 <main@@Base+0xe20c>
   246f0:	b	247fc <main@@Base+0xe314>
   246f4:	b	246f8 <main@@Base+0xe210>
   246f8:	ldr	r0, [sp, #4]
   246fc:	cmp	r0, #0
   24700:	bne	24718 <main@@Base+0xe230>
   24704:	ldr	r0, [fp, #-8]
   24708:	ldr	r0, [r0, #8]
   2470c:	and	r0, r0, #2
   24710:	cmp	r0, #0
   24714:	beq	24754 <main@@Base+0xe26c>
   24718:	ldr	r0, [fp, #-8]
   2471c:	ldr	r0, [r0]
   24720:	movw	r1, #1
   24724:	movw	r2, #4
   24728:	movw	r3, #4
   2472c:	uxth	r3, r3
   24730:	bl	2d13c <flatcc_builder_table_add@@Base>
   24734:	str	r0, [fp, #-28]	; 0xffffffe4
   24738:	movw	r1, #0
   2473c:	cmp	r0, r1
   24740:	bne	24748 <main@@Base+0xe260>
   24744:	b	247fc <main@@Base+0xe314>
   24748:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2474c:	ldr	r1, [sp, #4]
   24750:	bl	206bc <main@@Base+0xa1d4>
   24754:	b	2476c <main@@Base+0xe284>
   24758:	ldr	r0, [fp, #-8]
   2475c:	ldr	r1, [fp, #-12]
   24760:	ldr	r2, [fp, #-16]
   24764:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24768:	str	r0, [fp, #-12]
   2476c:	b	24784 <main@@Base+0xe29c>
   24770:	ldr	r0, [fp, #-8]
   24774:	ldr	r1, [fp, #-12]
   24778:	ldr	r2, [fp, #-16]
   2477c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24780:	str	r0, [fp, #-12]
   24784:	b	24788 <main@@Base+0xe2a0>
   24788:	b	247a0 <main@@Base+0xe2b8>
   2478c:	ldr	r0, [fp, #-8]
   24790:	ldr	r1, [fp, #-12]
   24794:	ldr	r2, [fp, #-16]
   24798:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2479c:	str	r0, [fp, #-12]
   247a0:	ldr	r0, [fp, #-8]
   247a4:	ldr	r1, [fp, #-12]
   247a8:	ldr	r2, [fp, #-16]
   247ac:	sub	r3, fp, #24
   247b0:	bl	20c14 <main@@Base+0xa72c>
   247b4:	str	r0, [fp, #-12]
   247b8:	b	24420 <main@@Base+0xdf38>
   247bc:	ldr	r0, [fp, #-8]
   247c0:	ldr	r0, [r0, #20]
   247c4:	cmp	r0, #0
   247c8:	beq	247d0 <main@@Base+0xe2e8>
   247cc:	b	247fc <main@@Base+0xe314>
   247d0:	ldr	r0, [fp, #-8]
   247d4:	ldr	r0, [r0]
   247d8:	bl	2c500 <flatcc_builder_end_table@@Base>
   247dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   247e0:	str	r0, [r1]
   247e4:	cmp	r0, #0
   247e8:	bne	247f0 <main@@Base+0xe308>
   247ec:	b	247fc <main@@Base+0xe314>
   247f0:	ldr	r0, [fp, #-12]
   247f4:	str	r0, [fp, #-4]
   247f8:	b	24814 <main@@Base+0xe32c>
   247fc:	ldr	r0, [fp, #-8]
   24800:	ldr	r1, [fp, #-12]
   24804:	ldr	r2, [fp, #-16]
   24808:	movw	r3, #33	; 0x21
   2480c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   24810:	str	r0, [fp, #-4]
   24814:	ldr	r0, [fp, #-4]
   24818:	mov	sp, fp
   2481c:	pop	{fp, pc}
   24820:	muleq	r3, r0, fp
   24824:	andeq	r8, r3, ip, ror #25
   24828:	push	{fp, lr}
   2482c:	mov	fp, sp
   24830:	sub	sp, sp, #96	; 0x60
   24834:	str	r0, [fp, #-8]
   24838:	str	r1, [fp, #-12]
   2483c:	str	r2, [fp, #-16]
   24840:	str	r3, [fp, #-20]	; 0xffffffec
   24844:	ldr	r0, [fp, #-20]	; 0xffffffec
   24848:	movw	r1, #0
   2484c:	str	r1, [r0]
   24850:	ldr	r0, [fp, #-8]
   24854:	ldr	r0, [r0]
   24858:	movw	r1, #9
   2485c:	bl	2b898 <flatcc_builder_start_table@@Base>
   24860:	cmp	r0, #0
   24864:	beq	2486c <main@@Base+0xe384>
   24868:	b	25424 <main@@Base+0xef3c>
   2486c:	ldr	r0, [fp, #-8]
   24870:	ldr	r1, [fp, #-12]
   24874:	ldr	r2, [fp, #-16]
   24878:	sub	r3, fp, #24
   2487c:	bl	1baf8 <main@@Base+0x5610>
   24880:	str	r0, [fp, #-12]
   24884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   24888:	cmp	r0, #0
   2488c:	beq	253e4 <main@@Base+0xeefc>
   24890:	ldr	r0, [fp, #-8]
   24894:	ldr	r1, [fp, #-12]
   24898:	ldr	r2, [fp, #-16]
   2489c:	bl	1bbdc <main@@Base+0x56f4>
   248a0:	str	r0, [fp, #-12]
   248a4:	ldr	r0, [fp, #-12]
   248a8:	ldr	r1, [fp, #-16]
   248ac:	bl	1bc60 <main@@Base+0x5778>
   248b0:	str	r1, [sp, #52]	; 0x34
   248b4:	str	r0, [sp, #48]	; 0x30
   248b8:	ldr	r0, [sp, #52]	; 0x34
   248bc:	movw	r1, #25442	; 0x6362
   248c0:	movt	r1, #25443	; 0x6363
   248c4:	cmp	r0, r1
   248c8:	bhi	24d64 <main@@Base+0xe87c>
   248cc:	b	248d0 <main@@Base+0xe3e8>
   248d0:	ldr	r0, [sp, #48]	; 0x30
   248d4:	ldr	r1, [sp, #52]	; 0x34
   248d8:	movw	r2, #24929	; 0x6161
   248dc:	movt	r2, #24929	; 0x6161
   248e0:	eor	r1, r1, r2
   248e4:	movw	r2, #13108	; 0x3334
   248e8:	movt	r2, #12594	; 0x3132
   248ec:	eor	r0, r0, r2
   248f0:	orr	r0, r0, r1
   248f4:	cmp	r0, #0
   248f8:	bne	24a74 <main@@Base+0xe58c>
   248fc:	b	24900 <main@@Base+0xe418>
   24900:	ldr	r0, [fp, #-12]
   24904:	add	r0, r0, #8
   24908:	str	r0, [fp, #-12]
   2490c:	ldr	r0, [fp, #-12]
   24910:	ldr	r1, [fp, #-16]
   24914:	bl	1bc60 <main@@Base+0x5778>
   24918:	str	r1, [sp, #52]	; 0x34
   2491c:	str	r0, [sp, #48]	; 0x30
   24920:	ldrb	r0, [sp, #55]	; 0x37
   24924:	mov	r1, #889192448	; 0x35000000
   24928:	teq	r1, r0, lsl #24
   2492c:	bne	24a5c <main@@Base+0xe574>
   24930:	b	24934 <main@@Base+0xe44c>
   24934:	ldr	r0, [fp, #-8]
   24938:	ldr	r1, [fp, #-12]
   2493c:	str	r1, [fp, #-40]	; 0xffffffd8
   24940:	ldr	r2, [fp, #-16]
   24944:	movw	r3, #1
   24948:	bl	1bc98 <main@@Base+0x57b0>
   2494c:	str	r0, [fp, #-12]
   24950:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24954:	ldr	r1, [fp, #-12]
   24958:	cmp	r0, r1
   2495c:	beq	24a44 <main@@Base+0xe55c>
   24960:	movw	r0, #0
   24964:	str	r0, [sp, #44]	; 0x2c
   24968:	ldr	r0, [fp, #-8]
   2496c:	ldr	r1, [fp, #-12]
   24970:	str	r1, [fp, #-40]	; 0xffffffd8
   24974:	ldr	r2, [fp, #-16]
   24978:	add	r3, sp, #44	; 0x2c
   2497c:	bl	20400 <main@@Base+0x9f18>
   24980:	str	r0, [fp, #-12]
   24984:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24988:	ldr	r1, [fp, #-12]
   2498c:	cmp	r0, r1
   24990:	bne	249e4 <main@@Base+0xe4fc>
   24994:	ldr	r0, [pc, #2752]	; 2545c <main@@Base+0xef74>
   24998:	add	r3, pc, r0
   2499c:	ldr	r0, [fp, #-8]
   249a0:	ldr	r1, [fp, #-12]
   249a4:	str	r1, [fp, #-40]	; 0xffffffd8
   249a8:	ldr	r2, [fp, #-16]
   249ac:	add	ip, sp, #44	; 0x2c
   249b0:	str	ip, [sp]
   249b4:	bl	204d8 <main@@Base+0x9ff0>
   249b8:	str	r0, [fp, #-12]
   249bc:	ldr	r0, [fp, #-12]
   249c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   249c4:	cmp	r0, r1
   249c8:	beq	249dc <main@@Base+0xe4f4>
   249cc:	ldr	r0, [fp, #-12]
   249d0:	ldr	r1, [fp, #-16]
   249d4:	cmp	r0, r1
   249d8:	bne	249e0 <main@@Base+0xe4f8>
   249dc:	b	25424 <main@@Base+0xef3c>
   249e0:	b	249e4 <main@@Base+0xe4fc>
   249e4:	ldr	r0, [sp, #44]	; 0x2c
   249e8:	cmp	r0, #0
   249ec:	bne	24a04 <main@@Base+0xe51c>
   249f0:	ldr	r0, [fp, #-8]
   249f4:	ldr	r0, [r0, #8]
   249f8:	and	r0, r0, #2
   249fc:	cmp	r0, #0
   24a00:	beq	24a40 <main@@Base+0xe558>
   24a04:	ldr	r0, [fp, #-8]
   24a08:	ldr	r0, [r0]
   24a0c:	movw	r1, #1
   24a10:	movw	r2, #4
   24a14:	movw	r3, #4
   24a18:	uxth	r3, r3
   24a1c:	bl	2d13c <flatcc_builder_table_add@@Base>
   24a20:	str	r0, [fp, #-28]	; 0xffffffe4
   24a24:	movw	r1, #0
   24a28:	cmp	r0, r1
   24a2c:	bne	24a34 <main@@Base+0xe54c>
   24a30:	b	25424 <main@@Base+0xef3c>
   24a34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24a38:	ldr	r1, [sp, #44]	; 0x2c
   24a3c:	bl	206bc <main@@Base+0xa1d4>
   24a40:	b	24a58 <main@@Base+0xe570>
   24a44:	ldr	r0, [fp, #-8]
   24a48:	ldr	r1, [fp, #-12]
   24a4c:	ldr	r2, [fp, #-16]
   24a50:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24a54:	str	r0, [fp, #-12]
   24a58:	b	24a70 <main@@Base+0xe588>
   24a5c:	ldr	r0, [fp, #-8]
   24a60:	ldr	r1, [fp, #-12]
   24a64:	ldr	r2, [fp, #-16]
   24a68:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24a6c:	str	r0, [fp, #-12]
   24a70:	b	24d60 <main@@Base+0xe878>
   24a74:	ldr	r0, [sp, #52]	; 0x34
   24a78:	movw	r1, #24929	; 0x6161
   24a7c:	movt	r1, #24929	; 0x6161
   24a80:	teq	r0, r1
   24a84:	bne	24b18 <main@@Base+0xe630>
   24a88:	b	24a8c <main@@Base+0xe5a4>
   24a8c:	ldr	r0, [fp, #-8]
   24a90:	ldr	r1, [fp, #-12]
   24a94:	str	r1, [fp, #-40]	; 0xffffffd8
   24a98:	ldr	r2, [fp, #-16]
   24a9c:	movw	r3, #4
   24aa0:	bl	1bc98 <main@@Base+0x57b0>
   24aa4:	str	r0, [fp, #-12]
   24aa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24aac:	ldr	r1, [fp, #-12]
   24ab0:	cmp	r0, r1
   24ab4:	beq	24b10 <main@@Base+0xe628>
   24ab8:	ldr	r0, [fp, #-8]
   24abc:	ldr	r1, [fp, #-12]
   24ac0:	ldr	r2, [fp, #-16]
   24ac4:	sub	r3, fp, #32
   24ac8:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   24acc:	str	r0, [fp, #-12]
   24ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ad4:	cmp	r0, #0
   24ad8:	beq	24afc <main@@Base+0xe614>
   24adc:	ldr	r0, [fp, #-8]
   24ae0:	ldr	r0, [r0]
   24ae4:	movw	r1, #0
   24ae8:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   24aec:	str	r0, [fp, #-36]	; 0xffffffdc
   24af0:	movw	r1, #0
   24af4:	cmp	r0, r1
   24af8:	bne	24b00 <main@@Base+0xe618>
   24afc:	b	25424 <main@@Base+0xef3c>
   24b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24b08:	str	r0, [r1]
   24b0c:	b	24b14 <main@@Base+0xe62c>
   24b10:	b	24b20 <main@@Base+0xe638>
   24b14:	b	24b1c <main@@Base+0xe634>
   24b18:	b	24b20 <main@@Base+0xe638>
   24b1c:	b	24d5c <main@@Base+0xe874>
   24b20:	ldr	r0, [sp, #48]	; 0x30
   24b24:	ldr	r1, [sp, #52]	; 0x34
   24b28:	movw	r2, #25186	; 0x6262
   24b2c:	movt	r2, #25186	; 0x6262
   24b30:	eor	r1, r1, r2
   24b34:	movw	r2, #13108	; 0x3334
   24b38:	movt	r2, #12594	; 0x3132
   24b3c:	eor	r0, r0, r2
   24b40:	orr	r0, r0, r1
   24b44:	cmp	r0, #0
   24b48:	bne	24c8c <main@@Base+0xe7a4>
   24b4c:	b	24b50 <main@@Base+0xe668>
   24b50:	ldr	r0, [fp, #-8]
   24b54:	ldr	r1, [fp, #-12]
   24b58:	str	r1, [fp, #-40]	; 0xffffffd8
   24b5c:	ldr	r2, [fp, #-16]
   24b60:	movw	r3, #8
   24b64:	bl	1bc98 <main@@Base+0x57b0>
   24b68:	str	r0, [fp, #-12]
   24b6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24b70:	ldr	r1, [fp, #-12]
   24b74:	cmp	r0, r1
   24b78:	beq	24c74 <main@@Base+0xe78c>
   24b7c:	mov	r0, #0
   24b80:	str	r0, [sp, #36]	; 0x24
   24b84:	str	r0, [sp, #32]
   24b88:	ldr	r0, [fp, #-8]
   24b8c:	ldr	r1, [fp, #-12]
   24b90:	str	r1, [fp, #-40]	; 0xffffffd8
   24b94:	ldr	r2, [fp, #-16]
   24b98:	add	r3, sp, #32
   24b9c:	bl	200f4 <main@@Base+0x9c0c>
   24ba0:	str	r0, [fp, #-12]
   24ba4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24ba8:	ldr	r1, [fp, #-12]
   24bac:	cmp	r0, r1
   24bb0:	bne	24c04 <main@@Base+0xe71c>
   24bb4:	ldr	r0, [pc, #2204]	; 25458 <main@@Base+0xef70>
   24bb8:	add	r3, pc, r0
   24bbc:	ldr	r0, [fp, #-8]
   24bc0:	ldr	r1, [fp, #-12]
   24bc4:	str	r1, [fp, #-40]	; 0xffffffd8
   24bc8:	ldr	r2, [fp, #-16]
   24bcc:	add	ip, sp, #32
   24bd0:	str	ip, [sp]
   24bd4:	bl	201cc <main@@Base+0x9ce4>
   24bd8:	str	r0, [fp, #-12]
   24bdc:	ldr	r0, [fp, #-12]
   24be0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24be4:	cmp	r0, r1
   24be8:	beq	24bfc <main@@Base+0xe714>
   24bec:	ldr	r0, [fp, #-12]
   24bf0:	ldr	r1, [fp, #-16]
   24bf4:	cmp	r0, r1
   24bf8:	bne	24c00 <main@@Base+0xe718>
   24bfc:	b	25424 <main@@Base+0xef3c>
   24c00:	b	24c04 <main@@Base+0xe71c>
   24c04:	ldr	r0, [sp, #32]
   24c08:	ldr	r1, [sp, #36]	; 0x24
   24c0c:	orr	r0, r0, r1
   24c10:	cmp	r0, #0
   24c14:	bne	24c30 <main@@Base+0xe748>
   24c18:	b	24c1c <main@@Base+0xe734>
   24c1c:	ldr	r0, [fp, #-8]
   24c20:	ldr	r0, [r0, #8]
   24c24:	and	r0, r0, #2
   24c28:	cmp	r0, #0
   24c2c:	beq	24c70 <main@@Base+0xe788>
   24c30:	ldr	r0, [fp, #-8]
   24c34:	ldr	r0, [r0]
   24c38:	movw	r1, #3
   24c3c:	movw	r2, #8
   24c40:	movw	r3, #8
   24c44:	uxth	r3, r3
   24c48:	bl	2d13c <flatcc_builder_table_add@@Base>
   24c4c:	str	r0, [fp, #-28]	; 0xffffffe4
   24c50:	movw	r1, #0
   24c54:	cmp	r0, r1
   24c58:	bne	24c60 <main@@Base+0xe778>
   24c5c:	b	25424 <main@@Base+0xef3c>
   24c60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24c64:	ldr	r2, [sp, #32]
   24c68:	ldr	r3, [sp, #36]	; 0x24
   24c6c:	bl	203c8 <main@@Base+0x9ee0>
   24c70:	b	24c88 <main@@Base+0xe7a0>
   24c74:	ldr	r0, [fp, #-8]
   24c78:	ldr	r1, [fp, #-12]
   24c7c:	ldr	r2, [fp, #-16]
   24c80:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24c84:	str	r0, [fp, #-12]
   24c88:	b	24d58 <main@@Base+0xe870>
   24c8c:	ldr	r0, [sp, #52]	; 0x34
   24c90:	movw	r1, #25186	; 0x6262
   24c94:	movt	r1, #25186	; 0x6262
   24c98:	teq	r0, r1
   24c9c:	bne	24d40 <main@@Base+0xe858>
   24ca0:	b	24ca4 <main@@Base+0xe7bc>
   24ca4:	ldr	r0, [fp, #-8]
   24ca8:	ldr	r1, [fp, #-12]
   24cac:	str	r1, [fp, #-40]	; 0xffffffd8
   24cb0:	ldr	r2, [fp, #-16]
   24cb4:	movw	r3, #4
   24cb8:	bl	1bc98 <main@@Base+0x57b0>
   24cbc:	str	r0, [fp, #-12]
   24cc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24cc4:	ldr	r1, [fp, #-12]
   24cc8:	cmp	r0, r1
   24ccc:	beq	24d28 <main@@Base+0xe840>
   24cd0:	ldr	r0, [fp, #-8]
   24cd4:	ldr	r1, [fp, #-12]
   24cd8:	ldr	r2, [fp, #-16]
   24cdc:	sub	r3, fp, #32
   24ce0:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   24ce4:	str	r0, [fp, #-12]
   24ce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24cec:	cmp	r0, #0
   24cf0:	beq	24d14 <main@@Base+0xe82c>
   24cf4:	ldr	r0, [fp, #-8]
   24cf8:	ldr	r0, [r0]
   24cfc:	movw	r1, #2
   24d00:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   24d04:	str	r0, [fp, #-36]	; 0xffffffdc
   24d08:	movw	r1, #0
   24d0c:	cmp	r0, r1
   24d10:	bne	24d18 <main@@Base+0xe830>
   24d14:	b	25424 <main@@Base+0xef3c>
   24d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24d20:	str	r0, [r1]
   24d24:	b	24d3c <main@@Base+0xe854>
   24d28:	ldr	r0, [fp, #-8]
   24d2c:	ldr	r1, [fp, #-12]
   24d30:	ldr	r2, [fp, #-16]
   24d34:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24d38:	str	r0, [fp, #-12]
   24d3c:	b	24d54 <main@@Base+0xe86c>
   24d40:	ldr	r0, [fp, #-8]
   24d44:	ldr	r1, [fp, #-12]
   24d48:	ldr	r2, [fp, #-16]
   24d4c:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   24d50:	str	r0, [fp, #-12]
   24d54:	b	24d58 <main@@Base+0xe870>
   24d58:	b	24d5c <main@@Base+0xe874>
   24d5c:	b	24d60 <main@@Base+0xe878>
   24d60:	b	253c8 <main@@Base+0xeee0>
   24d64:	ldr	r0, [sp, #48]	; 0x30
   24d68:	ldr	r1, [sp, #52]	; 0x34
   24d6c:	movw	r2, #25443	; 0x6363
   24d70:	movt	r2, #25443	; 0x6363
   24d74:	eor	r1, r1, r2
   24d78:	movw	r2, #13108	; 0x3334
   24d7c:	movt	r2, #12594	; 0x3132
   24d80:	eor	r0, r0, r2
   24d84:	orr	r0, r0, r1
   24d88:	cmp	r0, #0
   24d8c:	bne	25030 <main@@Base+0xeb48>
   24d90:	b	24d94 <main@@Base+0xe8ac>
   24d94:	ldr	r0, [fp, #-8]
   24d98:	ldr	r1, [fp, #-12]
   24d9c:	str	r1, [fp, #-40]	; 0xffffffd8
   24da0:	ldr	r2, [fp, #-16]
   24da4:	movw	r3, #8
   24da8:	bl	1bc98 <main@@Base+0x57b0>
   24dac:	str	r0, [fp, #-12]
   24db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24db4:	ldr	r1, [fp, #-12]
   24db8:	cmp	r0, r1
   24dbc:	beq	24eb8 <main@@Base+0xe9d0>
   24dc0:	mov	r0, #0
   24dc4:	str	r0, [sp, #28]
   24dc8:	str	r0, [sp, #24]
   24dcc:	ldr	r0, [fp, #-8]
   24dd0:	ldr	r1, [fp, #-12]
   24dd4:	str	r1, [fp, #-40]	; 0xffffffd8
   24dd8:	ldr	r2, [fp, #-16]
   24ddc:	add	r3, sp, #24
   24de0:	bl	200f4 <main@@Base+0x9c0c>
   24de4:	str	r0, [fp, #-12]
   24de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24dec:	ldr	r1, [fp, #-12]
   24df0:	cmp	r0, r1
   24df4:	bne	24e48 <main@@Base+0xe960>
   24df8:	ldr	r0, [pc, #1620]	; 25454 <main@@Base+0xef6c>
   24dfc:	add	r3, pc, r0
   24e00:	ldr	r0, [fp, #-8]
   24e04:	ldr	r1, [fp, #-12]
   24e08:	str	r1, [fp, #-40]	; 0xffffffd8
   24e0c:	ldr	r2, [fp, #-16]
   24e10:	add	ip, sp, #24
   24e14:	str	ip, [sp]
   24e18:	bl	201cc <main@@Base+0x9ce4>
   24e1c:	str	r0, [fp, #-12]
   24e20:	ldr	r0, [fp, #-12]
   24e24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24e28:	cmp	r0, r1
   24e2c:	beq	24e40 <main@@Base+0xe958>
   24e30:	ldr	r0, [fp, #-12]
   24e34:	ldr	r1, [fp, #-16]
   24e38:	cmp	r0, r1
   24e3c:	bne	24e44 <main@@Base+0xe95c>
   24e40:	b	25424 <main@@Base+0xef3c>
   24e44:	b	24e48 <main@@Base+0xe960>
   24e48:	ldr	r0, [sp, #24]
   24e4c:	ldr	r1, [sp, #28]
   24e50:	orr	r0, r0, r1
   24e54:	cmp	r0, #0
   24e58:	bne	24e74 <main@@Base+0xe98c>
   24e5c:	b	24e60 <main@@Base+0xe978>
   24e60:	ldr	r0, [fp, #-8]
   24e64:	ldr	r0, [r0, #8]
   24e68:	and	r0, r0, #2
   24e6c:	cmp	r0, #0
   24e70:	beq	24eb4 <main@@Base+0xe9cc>
   24e74:	ldr	r0, [fp, #-8]
   24e78:	ldr	r0, [r0]
   24e7c:	movw	r1, #5
   24e80:	movw	r2, #8
   24e84:	movw	r3, #8
   24e88:	uxth	r3, r3
   24e8c:	bl	2d13c <flatcc_builder_table_add@@Base>
   24e90:	str	r0, [fp, #-28]	; 0xffffffe4
   24e94:	movw	r1, #0
   24e98:	cmp	r0, r1
   24e9c:	bne	24ea4 <main@@Base+0xe9bc>
   24ea0:	b	25424 <main@@Base+0xef3c>
   24ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24ea8:	ldr	r2, [sp, #24]
   24eac:	ldr	r3, [sp, #28]
   24eb0:	bl	203c8 <main@@Base+0x9ee0>
   24eb4:	b	2502c <main@@Base+0xeb44>
   24eb8:	ldr	r0, [fp, #-12]
   24ebc:	add	r0, r0, #8
   24ec0:	str	r0, [fp, #-12]
   24ec4:	ldr	r0, [fp, #-12]
   24ec8:	ldr	r1, [fp, #-16]
   24ecc:	bl	1bc60 <main@@Base+0x5778>
   24ed0:	str	r1, [sp, #52]	; 0x34
   24ed4:	str	r0, [sp, #48]	; 0x30
   24ed8:	ldrb	r0, [sp, #55]	; 0x37
   24edc:	mov	r1, #889192448	; 0x35000000
   24ee0:	teq	r1, r0, lsl #24
   24ee4:	bne	25014 <main@@Base+0xeb2c>
   24ee8:	b	24eec <main@@Base+0xea04>
   24eec:	ldr	r0, [fp, #-8]
   24ef0:	ldr	r1, [fp, #-12]
   24ef4:	str	r1, [fp, #-40]	; 0xffffffd8
   24ef8:	ldr	r2, [fp, #-16]
   24efc:	movw	r3, #1
   24f00:	bl	1bc98 <main@@Base+0x57b0>
   24f04:	str	r0, [fp, #-12]
   24f08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24f0c:	ldr	r1, [fp, #-12]
   24f10:	cmp	r0, r1
   24f14:	beq	24ffc <main@@Base+0xeb14>
   24f18:	movw	r0, #0
   24f1c:	str	r0, [sp, #20]
   24f20:	ldr	r0, [fp, #-8]
   24f24:	ldr	r1, [fp, #-12]
   24f28:	str	r1, [fp, #-40]	; 0xffffffd8
   24f2c:	ldr	r2, [fp, #-16]
   24f30:	add	r3, sp, #20
   24f34:	bl	20400 <main@@Base+0x9f18>
   24f38:	str	r0, [fp, #-12]
   24f3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24f40:	ldr	r1, [fp, #-12]
   24f44:	cmp	r0, r1
   24f48:	bne	24f9c <main@@Base+0xeab4>
   24f4c:	ldr	r0, [pc, #1276]	; 25450 <main@@Base+0xef68>
   24f50:	add	r3, pc, r0
   24f54:	ldr	r0, [fp, #-8]
   24f58:	ldr	r1, [fp, #-12]
   24f5c:	str	r1, [fp, #-40]	; 0xffffffd8
   24f60:	ldr	r2, [fp, #-16]
   24f64:	add	ip, sp, #20
   24f68:	str	ip, [sp]
   24f6c:	bl	204d8 <main@@Base+0x9ff0>
   24f70:	str	r0, [fp, #-12]
   24f74:	ldr	r0, [fp, #-12]
   24f78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24f7c:	cmp	r0, r1
   24f80:	beq	24f94 <main@@Base+0xeaac>
   24f84:	ldr	r0, [fp, #-12]
   24f88:	ldr	r1, [fp, #-16]
   24f8c:	cmp	r0, r1
   24f90:	bne	24f98 <main@@Base+0xeab0>
   24f94:	b	25424 <main@@Base+0xef3c>
   24f98:	b	24f9c <main@@Base+0xeab4>
   24f9c:	ldr	r0, [sp, #20]
   24fa0:	cmp	r0, #0
   24fa4:	bne	24fbc <main@@Base+0xead4>
   24fa8:	ldr	r0, [fp, #-8]
   24fac:	ldr	r0, [r0, #8]
   24fb0:	and	r0, r0, #2
   24fb4:	cmp	r0, #0
   24fb8:	beq	24ff8 <main@@Base+0xeb10>
   24fbc:	ldr	r0, [fp, #-8]
   24fc0:	ldr	r0, [r0]
   24fc4:	movw	r1, #6
   24fc8:	movw	r2, #4
   24fcc:	movw	r3, #4
   24fd0:	uxth	r3, r3
   24fd4:	bl	2d13c <flatcc_builder_table_add@@Base>
   24fd8:	str	r0, [fp, #-28]	; 0xffffffe4
   24fdc:	movw	r1, #0
   24fe0:	cmp	r0, r1
   24fe4:	bne	24fec <main@@Base+0xeb04>
   24fe8:	b	25424 <main@@Base+0xef3c>
   24fec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24ff0:	ldr	r1, [sp, #20]
   24ff4:	bl	206bc <main@@Base+0xa1d4>
   24ff8:	b	25010 <main@@Base+0xeb28>
   24ffc:	ldr	r0, [fp, #-8]
   25000:	ldr	r1, [fp, #-12]
   25004:	ldr	r2, [fp, #-16]
   25008:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2500c:	str	r0, [fp, #-12]
   25010:	b	25028 <main@@Base+0xeb40>
   25014:	ldr	r0, [fp, #-8]
   25018:	ldr	r1, [fp, #-12]
   2501c:	ldr	r2, [fp, #-16]
   25020:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25024:	str	r0, [fp, #-12]
   25028:	b	2502c <main@@Base+0xeb44>
   2502c:	b	253c4 <main@@Base+0xeedc>
   25030:	ldr	r0, [sp, #52]	; 0x34
   25034:	movw	r1, #25443	; 0x6363
   25038:	movt	r1, #25443	; 0x6363
   2503c:	teq	r0, r1
   25040:	bne	250d4 <main@@Base+0xebec>
   25044:	b	25048 <main@@Base+0xeb60>
   25048:	ldr	r0, [fp, #-8]
   2504c:	ldr	r1, [fp, #-12]
   25050:	str	r1, [fp, #-40]	; 0xffffffd8
   25054:	ldr	r2, [fp, #-16]
   25058:	movw	r3, #4
   2505c:	bl	1bc98 <main@@Base+0x57b0>
   25060:	str	r0, [fp, #-12]
   25064:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25068:	ldr	r1, [fp, #-12]
   2506c:	cmp	r0, r1
   25070:	beq	250cc <main@@Base+0xebe4>
   25074:	ldr	r0, [fp, #-8]
   25078:	ldr	r1, [fp, #-12]
   2507c:	ldr	r2, [fp, #-16]
   25080:	sub	r3, fp, #32
   25084:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   25088:	str	r0, [fp, #-12]
   2508c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25090:	cmp	r0, #0
   25094:	beq	250b8 <main@@Base+0xebd0>
   25098:	ldr	r0, [fp, #-8]
   2509c:	ldr	r0, [r0]
   250a0:	movw	r1, #4
   250a4:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   250a8:	str	r0, [fp, #-36]	; 0xffffffdc
   250ac:	movw	r1, #0
   250b0:	cmp	r0, r1
   250b4:	bne	250bc <main@@Base+0xebd4>
   250b8:	b	25424 <main@@Base+0xef3c>
   250bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   250c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   250c4:	str	r0, [r1]
   250c8:	b	250d0 <main@@Base+0xebe8>
   250cc:	b	250dc <main@@Base+0xebf4>
   250d0:	b	250d8 <main@@Base+0xebf0>
   250d4:	b	250dc <main@@Base+0xebf4>
   250d8:	b	253c0 <main@@Base+0xeed8>
   250dc:	ldr	r0, [sp, #48]	; 0x30
   250e0:	ldr	r1, [sp, #52]	; 0x34
   250e4:	movw	r2, #25700	; 0x6464
   250e8:	movt	r2, #25700	; 0x6464
   250ec:	eor	r1, r1, r2
   250f0:	movw	r2, #13108	; 0x3334
   250f4:	movt	r2, #12594	; 0x3132
   250f8:	eor	r0, r0, r2
   250fc:	orr	r0, r0, r1
   25100:	cmp	r0, #0
   25104:	bne	253a8 <main@@Base+0xeec0>
   25108:	b	2510c <main@@Base+0xec24>
   2510c:	ldr	r0, [fp, #-8]
   25110:	ldr	r1, [fp, #-12]
   25114:	str	r1, [fp, #-40]	; 0xffffffd8
   25118:	ldr	r2, [fp, #-16]
   2511c:	movw	r3, #8
   25120:	bl	1bc98 <main@@Base+0x57b0>
   25124:	str	r0, [fp, #-12]
   25128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2512c:	ldr	r1, [fp, #-12]
   25130:	cmp	r0, r1
   25134:	beq	25230 <main@@Base+0xed48>
   25138:	mov	r0, #0
   2513c:	str	r0, [sp, #12]
   25140:	str	r0, [sp, #8]
   25144:	ldr	r0, [fp, #-8]
   25148:	ldr	r1, [fp, #-12]
   2514c:	str	r1, [fp, #-40]	; 0xffffffd8
   25150:	ldr	r2, [fp, #-16]
   25154:	add	r3, sp, #8
   25158:	bl	200f4 <main@@Base+0x9c0c>
   2515c:	str	r0, [fp, #-12]
   25160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25164:	ldr	r1, [fp, #-12]
   25168:	cmp	r0, r1
   2516c:	bne	251c0 <main@@Base+0xecd8>
   25170:	ldr	r0, [pc, #724]	; 2544c <main@@Base+0xef64>
   25174:	add	r3, pc, r0
   25178:	ldr	r0, [fp, #-8]
   2517c:	ldr	r1, [fp, #-12]
   25180:	str	r1, [fp, #-40]	; 0xffffffd8
   25184:	ldr	r2, [fp, #-16]
   25188:	add	ip, sp, #8
   2518c:	str	ip, [sp]
   25190:	bl	201cc <main@@Base+0x9ce4>
   25194:	str	r0, [fp, #-12]
   25198:	ldr	r0, [fp, #-12]
   2519c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   251a0:	cmp	r0, r1
   251a4:	beq	251b8 <main@@Base+0xecd0>
   251a8:	ldr	r0, [fp, #-12]
   251ac:	ldr	r1, [fp, #-16]
   251b0:	cmp	r0, r1
   251b4:	bne	251bc <main@@Base+0xecd4>
   251b8:	b	25424 <main@@Base+0xef3c>
   251bc:	b	251c0 <main@@Base+0xecd8>
   251c0:	ldr	r0, [sp, #8]
   251c4:	ldr	r1, [sp, #12]
   251c8:	orr	r0, r0, r1
   251cc:	cmp	r0, #0
   251d0:	bne	251ec <main@@Base+0xed04>
   251d4:	b	251d8 <main@@Base+0xecf0>
   251d8:	ldr	r0, [fp, #-8]
   251dc:	ldr	r0, [r0, #8]
   251e0:	and	r0, r0, #2
   251e4:	cmp	r0, #0
   251e8:	beq	2522c <main@@Base+0xed44>
   251ec:	ldr	r0, [fp, #-8]
   251f0:	ldr	r0, [r0]
   251f4:	movw	r1, #7
   251f8:	movw	r2, #8
   251fc:	movw	r3, #8
   25200:	uxth	r3, r3
   25204:	bl	2d13c <flatcc_builder_table_add@@Base>
   25208:	str	r0, [fp, #-28]	; 0xffffffe4
   2520c:	movw	r1, #0
   25210:	cmp	r0, r1
   25214:	bne	2521c <main@@Base+0xed34>
   25218:	b	25424 <main@@Base+0xef3c>
   2521c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25220:	ldr	r2, [sp, #8]
   25224:	ldr	r3, [sp, #12]
   25228:	bl	203c8 <main@@Base+0x9ee0>
   2522c:	b	253a4 <main@@Base+0xeebc>
   25230:	ldr	r0, [fp, #-12]
   25234:	add	r0, r0, #8
   25238:	str	r0, [fp, #-12]
   2523c:	ldr	r0, [fp, #-12]
   25240:	ldr	r1, [fp, #-16]
   25244:	bl	1bc60 <main@@Base+0x5778>
   25248:	str	r1, [sp, #52]	; 0x34
   2524c:	str	r0, [sp, #48]	; 0x30
   25250:	ldrb	r0, [sp, #55]	; 0x37
   25254:	mov	r1, #889192448	; 0x35000000
   25258:	teq	r1, r0, lsl #24
   2525c:	bne	2538c <main@@Base+0xeea4>
   25260:	b	25264 <main@@Base+0xed7c>
   25264:	ldr	r0, [fp, #-8]
   25268:	ldr	r1, [fp, #-12]
   2526c:	str	r1, [fp, #-40]	; 0xffffffd8
   25270:	ldr	r2, [fp, #-16]
   25274:	movw	r3, #1
   25278:	bl	1bc98 <main@@Base+0x57b0>
   2527c:	str	r0, [fp, #-12]
   25280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25284:	ldr	r1, [fp, #-12]
   25288:	cmp	r0, r1
   2528c:	beq	25374 <main@@Base+0xee8c>
   25290:	movw	r0, #0
   25294:	str	r0, [sp, #4]
   25298:	ldr	r0, [fp, #-8]
   2529c:	ldr	r1, [fp, #-12]
   252a0:	str	r1, [fp, #-40]	; 0xffffffd8
   252a4:	ldr	r2, [fp, #-16]
   252a8:	add	r3, sp, #4
   252ac:	bl	20400 <main@@Base+0x9f18>
   252b0:	str	r0, [fp, #-12]
   252b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   252b8:	ldr	r1, [fp, #-12]
   252bc:	cmp	r0, r1
   252c0:	bne	25314 <main@@Base+0xee2c>
   252c4:	ldr	r0, [pc, #380]	; 25448 <main@@Base+0xef60>
   252c8:	add	r3, pc, r0
   252cc:	ldr	r0, [fp, #-8]
   252d0:	ldr	r1, [fp, #-12]
   252d4:	str	r1, [fp, #-40]	; 0xffffffd8
   252d8:	ldr	r2, [fp, #-16]
   252dc:	add	ip, sp, #4
   252e0:	str	ip, [sp]
   252e4:	bl	204d8 <main@@Base+0x9ff0>
   252e8:	str	r0, [fp, #-12]
   252ec:	ldr	r0, [fp, #-12]
   252f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   252f4:	cmp	r0, r1
   252f8:	beq	2530c <main@@Base+0xee24>
   252fc:	ldr	r0, [fp, #-12]
   25300:	ldr	r1, [fp, #-16]
   25304:	cmp	r0, r1
   25308:	bne	25310 <main@@Base+0xee28>
   2530c:	b	25424 <main@@Base+0xef3c>
   25310:	b	25314 <main@@Base+0xee2c>
   25314:	ldr	r0, [sp, #4]
   25318:	cmp	r0, #0
   2531c:	bne	25334 <main@@Base+0xee4c>
   25320:	ldr	r0, [fp, #-8]
   25324:	ldr	r0, [r0, #8]
   25328:	and	r0, r0, #2
   2532c:	cmp	r0, #0
   25330:	beq	25370 <main@@Base+0xee88>
   25334:	ldr	r0, [fp, #-8]
   25338:	ldr	r0, [r0]
   2533c:	movw	r1, #8
   25340:	movw	r2, #4
   25344:	movw	r3, #4
   25348:	uxth	r3, r3
   2534c:	bl	2d13c <flatcc_builder_table_add@@Base>
   25350:	str	r0, [fp, #-28]	; 0xffffffe4
   25354:	movw	r1, #0
   25358:	cmp	r0, r1
   2535c:	bne	25364 <main@@Base+0xee7c>
   25360:	b	25424 <main@@Base+0xef3c>
   25364:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25368:	ldr	r1, [sp, #4]
   2536c:	bl	206bc <main@@Base+0xa1d4>
   25370:	b	25388 <main@@Base+0xeea0>
   25374:	ldr	r0, [fp, #-8]
   25378:	ldr	r1, [fp, #-12]
   2537c:	ldr	r2, [fp, #-16]
   25380:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25384:	str	r0, [fp, #-12]
   25388:	b	253a0 <main@@Base+0xeeb8>
   2538c:	ldr	r0, [fp, #-8]
   25390:	ldr	r1, [fp, #-12]
   25394:	ldr	r2, [fp, #-16]
   25398:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2539c:	str	r0, [fp, #-12]
   253a0:	b	253a4 <main@@Base+0xeebc>
   253a4:	b	253bc <main@@Base+0xeed4>
   253a8:	ldr	r0, [fp, #-8]
   253ac:	ldr	r1, [fp, #-12]
   253b0:	ldr	r2, [fp, #-16]
   253b4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   253b8:	str	r0, [fp, #-12]
   253bc:	b	253c0 <main@@Base+0xeed8>
   253c0:	b	253c4 <main@@Base+0xeedc>
   253c4:	b	253c8 <main@@Base+0xeee0>
   253c8:	ldr	r0, [fp, #-8]
   253cc:	ldr	r1, [fp, #-12]
   253d0:	ldr	r2, [fp, #-16]
   253d4:	sub	r3, fp, #24
   253d8:	bl	20c14 <main@@Base+0xa72c>
   253dc:	str	r0, [fp, #-12]
   253e0:	b	24884 <main@@Base+0xe39c>
   253e4:	ldr	r0, [fp, #-8]
   253e8:	ldr	r0, [r0, #20]
   253ec:	cmp	r0, #0
   253f0:	beq	253f8 <main@@Base+0xef10>
   253f4:	b	25424 <main@@Base+0xef3c>
   253f8:	ldr	r0, [fp, #-8]
   253fc:	ldr	r0, [r0]
   25400:	bl	2c500 <flatcc_builder_end_table@@Base>
   25404:	ldr	r1, [fp, #-20]	; 0xffffffec
   25408:	str	r0, [r1]
   2540c:	cmp	r0, #0
   25410:	bne	25418 <main@@Base+0xef30>
   25414:	b	25424 <main@@Base+0xef3c>
   25418:	ldr	r0, [fp, #-12]
   2541c:	str	r0, [fp, #-4]
   25420:	b	2543c <main@@Base+0xef54>
   25424:	ldr	r0, [fp, #-8]
   25428:	ldr	r1, [fp, #-12]
   2542c:	ldr	r2, [fp, #-16]
   25430:	movw	r3, #33	; 0x21
   25434:	bl	33158 <flatcc_json_parser_set_error@@Base>
   25438:	str	r0, [fp, #-4]
   2543c:	ldr	r0, [fp, #-4]
   25440:	mov	sp, fp
   25444:	pop	{fp, pc}
   25448:			; <UNDEFINED> instruction: 0x00037fbc
   2544c:	andeq	r8, r3, r4, lsl #2
   25450:	andeq	r8, r3, ip, lsl r3
   25454:	andeq	r8, r3, r4, ror #8
   25458:	muleq	r3, ip, r6
   2545c:			; <UNDEFINED> instruction: 0x000388b0
   25460:	push	{fp, lr}
   25464:	mov	fp, sp
   25468:	sub	sp, sp, #72	; 0x48
   2546c:	str	r0, [fp, #-8]
   25470:	str	r1, [fp, #-12]
   25474:	str	r2, [fp, #-16]
   25478:	str	r3, [fp, #-20]	; 0xffffffec
   2547c:	ldr	r0, [fp, #-20]	; 0xffffffec
   25480:	movw	r1, #0
   25484:	str	r1, [r0]
   25488:	ldr	r0, [fp, #-8]
   2548c:	ldr	r0, [r0]
   25490:	movw	r1, #2
   25494:	bl	2b898 <flatcc_builder_start_table@@Base>
   25498:	cmp	r0, #0
   2549c:	beq	254a4 <main@@Base+0xefbc>
   254a0:	b	258f8 <main@@Base+0xf410>
   254a4:	ldr	r0, [fp, #-8]
   254a8:	ldr	r1, [fp, #-12]
   254ac:	ldr	r2, [fp, #-16]
   254b0:	sub	r3, fp, #24
   254b4:	bl	1baf8 <main@@Base+0x5610>
   254b8:	str	r0, [fp, #-12]
   254bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   254c0:	cmp	r0, #0
   254c4:	beq	258b8 <main@@Base+0xf3d0>
   254c8:	ldr	r0, [fp, #-8]
   254cc:	ldr	r1, [fp, #-12]
   254d0:	ldr	r2, [fp, #-16]
   254d4:	bl	1bbdc <main@@Base+0x56f4>
   254d8:	str	r0, [fp, #-12]
   254dc:	ldr	r0, [fp, #-12]
   254e0:	ldr	r1, [fp, #-16]
   254e4:	bl	1bc60 <main@@Base+0x5778>
   254e8:	str	r1, [sp, #28]
   254ec:	str	r0, [sp, #24]
   254f0:	ldr	r0, [sp, #24]
   254f4:	ldr	r1, [sp, #28]
   254f8:	movw	r2, #24929	; 0x6161
   254fc:	movt	r2, #24929	; 0x6161
   25500:	eor	r1, r1, r2
   25504:	movw	r2, #25186	; 0x6262
   25508:	movt	r2, #24418	; 0x5f62
   2550c:	eor	r0, r0, r2
   25510:	orr	r0, r0, r1
   25514:	cmp	r0, #0
   25518:	bne	25888 <main@@Base+0xf3a0>
   2551c:	b	25520 <main@@Base+0xf038>
   25520:	ldr	r0, [fp, #-12]
   25524:	add	r0, r0, #8
   25528:	str	r0, [fp, #-12]
   2552c:	ldr	r0, [fp, #-12]
   25530:	ldr	r1, [fp, #-16]
   25534:	bl	1bc60 <main@@Base+0x5778>
   25538:	str	r1, [sp, #28]
   2553c:	str	r0, [sp, #24]
   25540:	ldr	r0, [sp, #24]
   25544:	ldr	r1, [sp, #28]
   25548:	movw	r2, #29556	; 0x7374
   2554c:	movt	r2, #25183	; 0x625f
   25550:	eor	r1, r1, r2
   25554:	movw	r2, #29791	; 0x745f
   25558:	movt	r2, #24946	; 0x6172
   2555c:	eor	r0, r0, r2
   25560:	orr	r0, r0, r1
   25564:	cmp	r0, #0
   25568:	bne	256f8 <main@@Base+0xf210>
   2556c:	b	25570 <main@@Base+0xf088>
   25570:	ldr	r0, [fp, #-12]
   25574:	add	r0, r0, #8
   25578:	str	r0, [fp, #-12]
   2557c:	ldr	r0, [fp, #-12]
   25580:	ldr	r1, [fp, #-16]
   25584:	bl	1bc60 <main@@Base+0x5778>
   25588:	str	r1, [sp, #28]
   2558c:	str	r0, [sp, #24]
   25590:	ldrb	r0, [sp, #27]
   25594:	ldr	r1, [sp, #28]
   25598:	movw	r2, #25968	; 0x6570
   2559c:	movt	r2, #29556	; 0x7374
   255a0:	eor	r1, r1, r2
   255a4:	eor	r0, r0, #115	; 0x73
   255a8:	orr	r0, r1, r0, lsl #24
   255ac:	cmp	r0, #0
   255b0:	bne	256e0 <main@@Base+0xf1f8>
   255b4:	b	255b8 <main@@Base+0xf0d0>
   255b8:	ldr	r0, [fp, #-8]
   255bc:	ldr	r1, [fp, #-12]
   255c0:	str	r1, [sp, #32]
   255c4:	ldr	r2, [fp, #-16]
   255c8:	movw	r3, #5
   255cc:	bl	1bc98 <main@@Base+0x57b0>
   255d0:	str	r0, [fp, #-12]
   255d4:	ldr	r0, [sp, #32]
   255d8:	ldr	r1, [fp, #-12]
   255dc:	cmp	r0, r1
   255e0:	beq	256c8 <main@@Base+0xf1e0>
   255e4:	movw	r0, #0
   255e8:	str	r0, [sp, #20]
   255ec:	ldr	r0, [fp, #-8]
   255f0:	ldr	r1, [fp, #-12]
   255f4:	str	r1, [sp, #32]
   255f8:	ldr	r2, [fp, #-16]
   255fc:	add	r3, sp, #20
   25600:	bl	20400 <main@@Base+0x9f18>
   25604:	str	r0, [fp, #-12]
   25608:	ldr	r0, [sp, #32]
   2560c:	ldr	r1, [fp, #-12]
   25610:	cmp	r0, r1
   25614:	bne	25668 <main@@Base+0xf180>
   25618:	ldr	r0, [pc, #768]	; 25920 <main@@Base+0xf438>
   2561c:	add	r3, pc, r0
   25620:	ldr	r0, [fp, #-8]
   25624:	ldr	r1, [fp, #-12]
   25628:	str	r1, [sp, #32]
   2562c:	ldr	r2, [fp, #-16]
   25630:	add	ip, sp, #20
   25634:	str	ip, [sp]
   25638:	bl	204d8 <main@@Base+0x9ff0>
   2563c:	str	r0, [fp, #-12]
   25640:	ldr	r0, [fp, #-12]
   25644:	ldr	r1, [sp, #32]
   25648:	cmp	r0, r1
   2564c:	beq	25660 <main@@Base+0xf178>
   25650:	ldr	r0, [fp, #-12]
   25654:	ldr	r1, [fp, #-16]
   25658:	cmp	r0, r1
   2565c:	bne	25664 <main@@Base+0xf17c>
   25660:	b	258f8 <main@@Base+0xf410>
   25664:	b	25668 <main@@Base+0xf180>
   25668:	ldr	r0, [sp, #20]
   2566c:	cmp	r0, #0
   25670:	bne	25688 <main@@Base+0xf1a0>
   25674:	ldr	r0, [fp, #-8]
   25678:	ldr	r0, [r0, #8]
   2567c:	and	r0, r0, #2
   25680:	cmp	r0, #0
   25684:	beq	256c4 <main@@Base+0xf1dc>
   25688:	ldr	r0, [fp, #-8]
   2568c:	ldr	r0, [r0]
   25690:	movw	r1, #1
   25694:	movw	r2, #4
   25698:	movw	r3, #4
   2569c:	uxth	r3, r3
   256a0:	bl	2d13c <flatcc_builder_table_add@@Base>
   256a4:	str	r0, [fp, #-28]	; 0xffffffe4
   256a8:	movw	r1, #0
   256ac:	cmp	r0, r1
   256b0:	bne	256b8 <main@@Base+0xf1d0>
   256b4:	b	258f8 <main@@Base+0xf410>
   256b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   256bc:	ldr	r1, [sp, #20]
   256c0:	bl	206bc <main@@Base+0xa1d4>
   256c4:	b	256dc <main@@Base+0xf1f4>
   256c8:	ldr	r0, [fp, #-8]
   256cc:	ldr	r1, [fp, #-12]
   256d0:	ldr	r2, [fp, #-16]
   256d4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   256d8:	str	r0, [fp, #-12]
   256dc:	b	256f4 <main@@Base+0xf20c>
   256e0:	ldr	r0, [fp, #-8]
   256e4:	ldr	r1, [fp, #-12]
   256e8:	ldr	r2, [fp, #-16]
   256ec:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   256f0:	str	r0, [fp, #-12]
   256f4:	b	25884 <main@@Base+0xf39c>
   256f8:	ldr	r0, [sp, #24]
   256fc:	ldr	r1, [sp, #28]
   25700:	movw	r2, #24435	; 0x5f73
   25704:	movt	r2, #98	; 0x62
   25708:	eor	r2, r2, r1, lsr #8
   2570c:	lsr	r0, r0, #8
   25710:	orr	r0, r0, r1, lsl #24
   25714:	movw	r1, #28787	; 0x7073
   25718:	movt	r1, #29797	; 0x7465
   2571c:	eor	r0, r0, r1
   25720:	orr	r0, r0, r2
   25724:	cmp	r0, #0
   25728:	bne	2586c <main@@Base+0xf384>
   2572c:	b	25730 <main@@Base+0xf248>
   25730:	ldr	r0, [fp, #-8]
   25734:	ldr	r1, [fp, #-12]
   25738:	str	r1, [sp, #32]
   2573c:	ldr	r2, [fp, #-16]
   25740:	movw	r3, #7
   25744:	bl	1bc98 <main@@Base+0x57b0>
   25748:	str	r0, [fp, #-12]
   2574c:	ldr	r0, [sp, #32]
   25750:	ldr	r1, [fp, #-12]
   25754:	cmp	r0, r1
   25758:	beq	25854 <main@@Base+0xf36c>
   2575c:	mov	r0, #0
   25760:	str	r0, [sp, #12]
   25764:	str	r0, [sp, #8]
   25768:	ldr	r0, [fp, #-8]
   2576c:	ldr	r1, [fp, #-12]
   25770:	str	r1, [sp, #32]
   25774:	ldr	r2, [fp, #-16]
   25778:	add	r3, sp, #8
   2577c:	bl	200f4 <main@@Base+0x9c0c>
   25780:	str	r0, [fp, #-12]
   25784:	ldr	r0, [sp, #32]
   25788:	ldr	r1, [fp, #-12]
   2578c:	cmp	r0, r1
   25790:	bne	257e4 <main@@Base+0xf2fc>
   25794:	ldr	r0, [pc, #384]	; 2591c <main@@Base+0xf434>
   25798:	add	r3, pc, r0
   2579c:	ldr	r0, [fp, #-8]
   257a0:	ldr	r1, [fp, #-12]
   257a4:	str	r1, [sp, #32]
   257a8:	ldr	r2, [fp, #-16]
   257ac:	add	ip, sp, #8
   257b0:	str	ip, [sp]
   257b4:	bl	201cc <main@@Base+0x9ce4>
   257b8:	str	r0, [fp, #-12]
   257bc:	ldr	r0, [fp, #-12]
   257c0:	ldr	r1, [sp, #32]
   257c4:	cmp	r0, r1
   257c8:	beq	257dc <main@@Base+0xf2f4>
   257cc:	ldr	r0, [fp, #-12]
   257d0:	ldr	r1, [fp, #-16]
   257d4:	cmp	r0, r1
   257d8:	bne	257e0 <main@@Base+0xf2f8>
   257dc:	b	258f8 <main@@Base+0xf410>
   257e0:	b	257e4 <main@@Base+0xf2fc>
   257e4:	ldr	r0, [sp, #8]
   257e8:	ldr	r1, [sp, #12]
   257ec:	orr	r0, r0, r1
   257f0:	cmp	r0, #0
   257f4:	bne	25810 <main@@Base+0xf328>
   257f8:	b	257fc <main@@Base+0xf314>
   257fc:	ldr	r0, [fp, #-8]
   25800:	ldr	r0, [r0, #8]
   25804:	and	r0, r0, #2
   25808:	cmp	r0, #0
   2580c:	beq	25850 <main@@Base+0xf368>
   25810:	ldr	r0, [fp, #-8]
   25814:	ldr	r0, [r0]
   25818:	movw	r1, #0
   2581c:	movw	r2, #8
   25820:	movw	r3, #8
   25824:	uxth	r3, r3
   25828:	bl	2d13c <flatcc_builder_table_add@@Base>
   2582c:	str	r0, [fp, #-28]	; 0xffffffe4
   25830:	movw	r1, #0
   25834:	cmp	r0, r1
   25838:	bne	25840 <main@@Base+0xf358>
   2583c:	b	258f8 <main@@Base+0xf410>
   25840:	ldr	r0, [fp, #-28]	; 0xffffffe4
   25844:	ldr	r2, [sp, #8]
   25848:	ldr	r3, [sp, #12]
   2584c:	bl	203c8 <main@@Base+0x9ee0>
   25850:	b	25868 <main@@Base+0xf380>
   25854:	ldr	r0, [fp, #-8]
   25858:	ldr	r1, [fp, #-12]
   2585c:	ldr	r2, [fp, #-16]
   25860:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25864:	str	r0, [fp, #-12]
   25868:	b	25880 <main@@Base+0xf398>
   2586c:	ldr	r0, [fp, #-8]
   25870:	ldr	r1, [fp, #-12]
   25874:	ldr	r2, [fp, #-16]
   25878:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2587c:	str	r0, [fp, #-12]
   25880:	b	25884 <main@@Base+0xf39c>
   25884:	b	2589c <main@@Base+0xf3b4>
   25888:	ldr	r0, [fp, #-8]
   2588c:	ldr	r1, [fp, #-12]
   25890:	ldr	r2, [fp, #-16]
   25894:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25898:	str	r0, [fp, #-12]
   2589c:	ldr	r0, [fp, #-8]
   258a0:	ldr	r1, [fp, #-12]
   258a4:	ldr	r2, [fp, #-16]
   258a8:	sub	r3, fp, #24
   258ac:	bl	20c14 <main@@Base+0xa72c>
   258b0:	str	r0, [fp, #-12]
   258b4:	b	254bc <main@@Base+0xefd4>
   258b8:	ldr	r0, [fp, #-8]
   258bc:	ldr	r0, [r0, #20]
   258c0:	cmp	r0, #0
   258c4:	beq	258cc <main@@Base+0xf3e4>
   258c8:	b	258f8 <main@@Base+0xf410>
   258cc:	ldr	r0, [fp, #-8]
   258d0:	ldr	r0, [r0]
   258d4:	bl	2c500 <flatcc_builder_end_table@@Base>
   258d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   258dc:	str	r0, [r1]
   258e0:	cmp	r0, #0
   258e4:	bne	258ec <main@@Base+0xf404>
   258e8:	b	258f8 <main@@Base+0xf410>
   258ec:	ldr	r0, [fp, #-12]
   258f0:	str	r0, [fp, #-4]
   258f4:	b	25910 <main@@Base+0xf428>
   258f8:	ldr	r0, [fp, #-8]
   258fc:	ldr	r1, [fp, #-12]
   25900:	ldr	r2, [fp, #-16]
   25904:	movw	r3, #33	; 0x21
   25908:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2590c:	str	r0, [fp, #-4]
   25910:	ldr	r0, [fp, #-4]
   25914:	mov	sp, fp
   25918:	pop	{fp, pc}
   2591c:	andeq	r7, r3, r4, lsl #22
   25920:	andeq	r7, r3, r4, ror ip
   25924:	push	{fp, lr}
   25928:	mov	fp, sp
   2592c:	sub	sp, sp, #56	; 0x38
   25930:	ldr	ip, [fp, #12]
   25934:	ldr	lr, [fp, #8]
   25938:	str	r0, [fp, #-8]
   2593c:	str	r1, [fp, #-12]
   25940:	str	r2, [fp, #-16]
   25944:	str	r3, [fp, #-20]	; 0xffffffec
   25948:	ldr	r0, [fp, #-12]
   2594c:	str	r0, [fp, #-24]	; 0xffffffe8
   25950:	ldr	r0, [fp, #-12]
   25954:	ldr	r1, [fp, #-16]
   25958:	str	ip, [sp, #12]
   2595c:	str	lr, [sp, #8]
   25960:	bl	1bc60 <main@@Base+0x5778>
   25964:	str	r1, [sp, #20]
   25968:	str	r0, [sp, #16]
   2596c:	ldr	r0, [sp, #16]
   25970:	ldr	r1, [sp, #20]
   25974:	movw	r2, #24946	; 0x6172
   25978:	movt	r2, #17256	; 0x4368
   2597c:	eor	r1, r1, r2
   25980:	movw	r2, #29797	; 0x7465
   25984:	movt	r2, #24931	; 0x6163
   25988:	eor	r0, r0, r2
   2598c:	orr	r0, r0, r1
   25990:	cmp	r0, #0
   25994:	bne	25a48 <main@@Base+0xf560>
   25998:	b	2599c <main@@Base+0xf4b4>
   2599c:	ldr	r0, [fp, #-12]
   259a0:	add	r0, r0, #8
   259a4:	str	r0, [fp, #-12]
   259a8:	ldr	r0, [fp, #-12]
   259ac:	ldr	r1, [fp, #-16]
   259b0:	bl	1bc60 <main@@Base+0x5778>
   259b4:	str	r1, [sp, #20]
   259b8:	str	r0, [sp, #16]
   259bc:	ldrb	r0, [sp, #23]
   259c0:	mov	r1, #1912602624	; 0x72000000
   259c4:	teq	r1, r0, lsl #24
   259c8:	bne	25a38 <main@@Base+0xf550>
   259cc:	b	259d0 <main@@Base+0xf4e8>
   259d0:	ldr	r0, [fp, #-8]
   259d4:	ldr	r1, [fp, #-12]
   259d8:	str	r1, [sp, #28]
   259dc:	ldr	r2, [fp, #-16]
   259e0:	movw	r3, #1
   259e4:	bl	20f88 <main@@Base+0xaaa0>
   259e8:	str	r0, [fp, #-12]
   259ec:	ldr	r0, [fp, #-12]
   259f0:	ldr	r1, [sp, #28]
   259f4:	cmp	r0, r1
   259f8:	beq	25a28 <main@@Base+0xf540>
   259fc:	ldr	r0, [fp, #-8]
   25a00:	ldr	r1, [fp, #-12]
   25a04:	ldr	r2, [fp, #-16]
   25a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a0c:	ldr	ip, [fp, #8]
   25a10:	ldr	lr, [fp, #12]
   25a14:	str	ip, [sp]
   25a18:	str	lr, [sp, #4]
   25a1c:	bl	21b00 <main@@Base+0xb618>
   25a20:	str	r0, [fp, #-12]
   25a24:	b	25a34 <main@@Base+0xf54c>
   25a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25a2c:	str	r0, [fp, #-4]
   25a30:	b	25a5c <main@@Base+0xf574>
   25a34:	b	25a44 <main@@Base+0xf55c>
   25a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25a3c:	str	r0, [fp, #-4]
   25a40:	b	25a5c <main@@Base+0xf574>
   25a44:	b	25a54 <main@@Base+0xf56c>
   25a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25a4c:	str	r0, [fp, #-4]
   25a50:	b	25a5c <main@@Base+0xf574>
   25a54:	ldr	r0, [fp, #-12]
   25a58:	str	r0, [fp, #-4]
   25a5c:	ldr	r0, [fp, #-4]
   25a60:	mov	sp, fp
   25a64:	pop	{fp, pc}
   25a68:	push	{fp, lr}
   25a6c:	mov	fp, sp
   25a70:	sub	sp, sp, #24
   25a74:	ldr	ip, [fp, #8]
   25a78:	str	r0, [fp, #-8]
   25a7c:	str	r1, [sp, #12]
   25a80:	str	r2, [sp, #8]
   25a84:	strb	r3, [sp, #7]
   25a88:	ldr	r0, [fp, #8]
   25a8c:	mov	r1, #0
   25a90:	str	r1, [r0]
   25a94:	ldrb	r0, [sp, #7]
   25a98:	mov	r1, r0
   25a9c:	cmp	r0, #0
   25aa0:	str	r1, [sp]
   25aa4:	beq	25b0c <main@@Base+0xf624>
   25aa8:	b	25aac <main@@Base+0xf5c4>
   25aac:	ldr	r0, [sp]
   25ab0:	cmp	r0, #2
   25ab4:	beq	25b24 <main@@Base+0xf63c>
   25ab8:	b	25abc <main@@Base+0xf5d4>
   25abc:	ldr	r0, [sp]
   25ac0:	cmp	r0, #8
   25ac4:	beq	25b40 <main@@Base+0xf658>
   25ac8:	b	25acc <main@@Base+0xf5e4>
   25acc:	ldr	r0, [sp]
   25ad0:	cmp	r0, #9
   25ad4:	beq	25b5c <main@@Base+0xf674>
   25ad8:	b	25adc <main@@Base+0xf5f4>
   25adc:	ldr	r0, [sp]
   25ae0:	cmp	r0, #10
   25ae4:	beq	25b78 <main@@Base+0xf690>
   25ae8:	b	25aec <main@@Base+0xf604>
   25aec:	ldr	r0, [sp]
   25af0:	cmp	r0, #11
   25af4:	beq	25b94 <main@@Base+0xf6ac>
   25af8:	b	25afc <main@@Base+0xf614>
   25afc:	ldr	r0, [sp]
   25b00:	cmp	r0, #255	; 0xff
   25b04:	beq	25bb0 <main@@Base+0xf6c8>
   25b08:	b	25bcc <main@@Base+0xf6e4>
   25b0c:	ldr	r0, [fp, #-8]
   25b10:	ldr	r1, [sp, #12]
   25b14:	ldr	r2, [sp, #8]
   25b18:	bl	22568 <main@@Base+0xc080>
   25b1c:	str	r0, [fp, #-4]
   25b20:	b	25c64 <main@@Base+0xf77c>
   25b24:	ldr	r0, [fp, #-8]
   25b28:	ldr	r1, [sp, #12]
   25b2c:	ldr	r2, [sp, #8]
   25b30:	ldr	r3, [fp, #8]
   25b34:	bl	25d58 <main@@Base+0xf870>
   25b38:	str	r0, [sp, #12]
   25b3c:	b	25c14 <main@@Base+0xf72c>
   25b40:	ldr	r0, [fp, #-8]
   25b44:	ldr	r1, [sp, #12]
   25b48:	ldr	r2, [sp, #8]
   25b4c:	ldr	r3, [fp, #8]
   25b50:	bl	26094 <main@@Base+0xfbac>
   25b54:	str	r0, [sp, #12]
   25b58:	b	25c14 <main@@Base+0xf72c>
   25b5c:	ldr	r0, [fp, #-8]
   25b60:	ldr	r1, [sp, #12]
   25b64:	ldr	r2, [sp, #8]
   25b68:	ldr	r3, [fp, #8]
   25b6c:	bl	26160 <main@@Base+0xfc78>
   25b70:	str	r0, [sp, #12]
   25b74:	b	25c14 <main@@Base+0xf72c>
   25b78:	ldr	r0, [fp, #-8]
   25b7c:	ldr	r1, [sp, #12]
   25b80:	ldr	r2, [sp, #8]
   25b84:	ldr	r3, [fp, #8]
   25b88:	bl	26160 <main@@Base+0xfc78>
   25b8c:	str	r0, [sp, #12]
   25b90:	b	25c14 <main@@Base+0xf72c>
   25b94:	ldr	r0, [fp, #-8]
   25b98:	ldr	r1, [sp, #12]
   25b9c:	ldr	r2, [sp, #8]
   25ba0:	ldr	r3, [fp, #8]
   25ba4:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   25ba8:	str	r0, [sp, #12]
   25bac:	b	25c14 <main@@Base+0xf72c>
   25bb0:	ldr	r0, [fp, #-8]
   25bb4:	ldr	r1, [sp, #12]
   25bb8:	ldr	r2, [sp, #8]
   25bbc:	ldr	r3, [fp, #8]
   25bc0:	bl	361d4 <flatcc_json_parser_build_string@@Base>
   25bc4:	str	r0, [sp, #12]
   25bc8:	b	25c14 <main@@Base+0xf72c>
   25bcc:	ldr	r0, [fp, #-8]
   25bd0:	ldr	r0, [r0, #8]
   25bd4:	and	r0, r0, #1
   25bd8:	cmp	r0, #0
   25bdc:	bne	25bfc <main@@Base+0xf714>
   25be0:	ldr	r0, [fp, #-8]
   25be4:	ldr	r1, [sp, #12]
   25be8:	ldr	r2, [sp, #8]
   25bec:	movw	r3, #15
   25bf0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   25bf4:	str	r0, [fp, #-4]
   25bf8:	b	25c64 <main@@Base+0xf77c>
   25bfc:	ldr	r0, [fp, #-8]
   25c00:	ldr	r1, [sp, #12]
   25c04:	ldr	r2, [sp, #8]
   25c08:	bl	3433c <flatcc_json_parser_generic_json@@Base>
   25c0c:	str	r0, [fp, #-4]
   25c10:	b	25c64 <main@@Base+0xf77c>
   25c14:	ldr	r0, [fp, #-8]
   25c18:	ldr	r0, [r0, #20]
   25c1c:	cmp	r0, #0
   25c20:	beq	25c30 <main@@Base+0xf748>
   25c24:	ldr	r0, [sp, #12]
   25c28:	str	r0, [fp, #-4]
   25c2c:	b	25c64 <main@@Base+0xf77c>
   25c30:	ldr	r0, [fp, #8]
   25c34:	ldr	r0, [r0]
   25c38:	cmp	r0, #0
   25c3c:	bne	25c5c <main@@Base+0xf774>
   25c40:	ldr	r0, [fp, #-8]
   25c44:	ldr	r1, [sp, #12]
   25c48:	ldr	r2, [sp, #8]
   25c4c:	movw	r3, #33	; 0x21
   25c50:	bl	33158 <flatcc_json_parser_set_error@@Base>
   25c54:	str	r0, [fp, #-4]
   25c58:	b	25c64 <main@@Base+0xf77c>
   25c5c:	ldr	r0, [sp, #12]
   25c60:	str	r0, [fp, #-4]
   25c64:	ldr	r0, [fp, #-4]
   25c68:	mov	sp, fp
   25c6c:	pop	{fp, pc}
   25c70:	sub	sp, sp, #12
   25c74:	strb	r0, [sp, #7]
   25c78:	ldrb	r0, [sp, #7]
   25c7c:	mov	r1, r0
   25c80:	cmp	r0, #0
   25c84:	str	r1, [sp]
   25c88:	beq	25cf0 <main@@Base+0xf808>
   25c8c:	b	25c90 <main@@Base+0xf7a8>
   25c90:	ldr	r0, [sp]
   25c94:	cmp	r0, #2
   25c98:	beq	25cfc <main@@Base+0xf814>
   25c9c:	b	25ca0 <main@@Base+0xf7b8>
   25ca0:	ldr	r0, [sp]
   25ca4:	cmp	r0, #8
   25ca8:	beq	25d08 <main@@Base+0xf820>
   25cac:	b	25cb0 <main@@Base+0xf7c8>
   25cb0:	ldr	r0, [sp]
   25cb4:	cmp	r0, #9
   25cb8:	beq	25d14 <main@@Base+0xf82c>
   25cbc:	b	25cc0 <main@@Base+0xf7d8>
   25cc0:	ldr	r0, [sp]
   25cc4:	cmp	r0, #10
   25cc8:	beq	25d20 <main@@Base+0xf838>
   25ccc:	b	25cd0 <main@@Base+0xf7e8>
   25cd0:	ldr	r0, [sp]
   25cd4:	cmp	r0, #11
   25cd8:	beq	25d2c <main@@Base+0xf844>
   25cdc:	b	25ce0 <main@@Base+0xf7f8>
   25ce0:	ldr	r0, [sp]
   25ce4:	cmp	r0, #255	; 0xff
   25ce8:	beq	25d38 <main@@Base+0xf850>
   25cec:	b	25d44 <main@@Base+0xf85c>
   25cf0:	movw	r0, #1
   25cf4:	str	r0, [sp, #8]
   25cf8:	b	25d4c <main@@Base+0xf864>
   25cfc:	movw	r0, #1
   25d00:	str	r0, [sp, #8]
   25d04:	b	25d4c <main@@Base+0xf864>
   25d08:	movw	r0, #1
   25d0c:	str	r0, [sp, #8]
   25d10:	b	25d4c <main@@Base+0xf864>
   25d14:	movw	r0, #1
   25d18:	str	r0, [sp, #8]
   25d1c:	b	25d4c <main@@Base+0xf864>
   25d20:	movw	r0, #1
   25d24:	str	r0, [sp, #8]
   25d28:	b	25d4c <main@@Base+0xf864>
   25d2c:	movw	r0, #1
   25d30:	str	r0, [sp, #8]
   25d34:	b	25d4c <main@@Base+0xf864>
   25d38:	movw	r0, #1
   25d3c:	str	r0, [sp, #8]
   25d40:	b	25d4c <main@@Base+0xf864>
   25d44:	movw	r0, #0
   25d48:	str	r0, [sp, #8]
   25d4c:	ldr	r0, [sp, #8]
   25d50:	add	sp, sp, #12
   25d54:	bx	lr
   25d58:	push	{fp, lr}
   25d5c:	mov	fp, sp
   25d60:	sub	sp, sp, #56	; 0x38
   25d64:	str	r0, [fp, #-8]
   25d68:	str	r1, [fp, #-12]
   25d6c:	str	r2, [fp, #-16]
   25d70:	str	r3, [fp, #-20]	; 0xffffffec
   25d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   25d78:	movw	r1, #0
   25d7c:	str	r1, [r0]
   25d80:	ldr	r0, [fp, #-8]
   25d84:	ldr	r0, [r0]
   25d88:	movw	r1, #1
   25d8c:	bl	2b898 <flatcc_builder_start_table@@Base>
   25d90:	cmp	r0, #0
   25d94:	beq	25d9c <main@@Base+0xf8b4>
   25d98:	b	2606c <main@@Base+0xfb84>
   25d9c:	ldr	r0, [fp, #-8]
   25da0:	ldr	r1, [fp, #-12]
   25da4:	ldr	r2, [fp, #-16]
   25da8:	sub	r3, fp, #24
   25dac:	bl	1baf8 <main@@Base+0x5610>
   25db0:	str	r0, [fp, #-12]
   25db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25db8:	cmp	r0, #0
   25dbc:	beq	2602c <main@@Base+0xfb44>
   25dc0:	ldr	r0, [fp, #-8]
   25dc4:	ldr	r1, [fp, #-12]
   25dc8:	ldr	r2, [fp, #-16]
   25dcc:	bl	1bbdc <main@@Base+0x56f4>
   25dd0:	str	r0, [fp, #-12]
   25dd4:	ldr	r0, [fp, #-12]
   25dd8:	ldr	r1, [fp, #-16]
   25ddc:	bl	1bc60 <main@@Base+0x5778>
   25de0:	str	r1, [sp, #12]
   25de4:	str	r0, [sp, #8]
   25de8:	ldr	r0, [sp, #8]
   25dec:	ldr	r1, [sp, #12]
   25df0:	movw	r2, #28530	; 0x6f72
   25df4:	movt	r2, #29559	; 0x7377
   25df8:	eor	r1, r1, r2
   25dfc:	movw	r2, #24948	; 0x6174
   25e00:	movt	r2, #25695	; 0x645f
   25e04:	eor	r0, r0, r2
   25e08:	orr	r0, r0, r1
   25e0c:	cmp	r0, #0
   25e10:	bne	25ffc <main@@Base+0xfb14>
   25e14:	b	25e18 <main@@Base+0xf930>
   25e18:	ldr	r0, [fp, #-12]
   25e1c:	add	r0, r0, #8
   25e20:	str	r0, [fp, #-12]
   25e24:	ldr	r0, [fp, #-12]
   25e28:	ldr	r1, [fp, #-16]
   25e2c:	bl	1bc60 <main@@Base+0x5778>
   25e30:	str	r1, [sp, #12]
   25e34:	str	r0, [sp, #8]
   25e38:	ldr	r0, [sp, #8]
   25e3c:	ldr	r1, [sp, #12]
   25e40:	movw	r2, #25451	; 0x636b
   25e44:	movt	r2, #29793	; 0x7461
   25e48:	eor	r1, r1, r2
   25e4c:	movw	r2, #24941	; 0x616d
   25e50:	movt	r2, #24420	; 0x5f64
   25e54:	eor	r0, r0, r2
   25e58:	orr	r0, r0, r1
   25e5c:	cmp	r0, #0
   25e60:	bne	25fe4 <main@@Base+0xfafc>
   25e64:	b	25e68 <main@@Base+0xf980>
   25e68:	ldr	r0, [fp, #-12]
   25e6c:	add	r0, r0, #8
   25e70:	str	r0, [fp, #-12]
   25e74:	ldr	r0, [fp, #-12]
   25e78:	ldr	r1, [fp, #-16]
   25e7c:	bl	1bc60 <main@@Base+0x5778>
   25e80:	str	r1, [sp, #12]
   25e84:	str	r0, [sp, #8]
   25e88:	ldr	r0, [sp, #12]
   25e8c:	bic	r0, r0, #255	; 0xff
   25e90:	movw	r1, #25856	; 0x6500
   25e94:	movt	r1, #24935	; 0x6167
   25e98:	teq	r0, r1
   25e9c:	bne	25fcc <main@@Base+0xfae4>
   25ea0:	b	25ea4 <main@@Base+0xf9bc>
   25ea4:	ldr	r0, [fp, #-8]
   25ea8:	ldr	r1, [fp, #-12]
   25eac:	str	r1, [sp, #16]
   25eb0:	ldr	r2, [fp, #-16]
   25eb4:	movw	r3, #3
   25eb8:	bl	1bc98 <main@@Base+0x57b0>
   25ebc:	str	r0, [fp, #-12]
   25ec0:	ldr	r0, [sp, #16]
   25ec4:	ldr	r1, [fp, #-12]
   25ec8:	cmp	r0, r1
   25ecc:	beq	25fb4 <main@@Base+0xfacc>
   25ed0:	movw	r0, #0
   25ed4:	str	r0, [sp, #4]
   25ed8:	ldr	r0, [fp, #-8]
   25edc:	ldr	r1, [fp, #-12]
   25ee0:	str	r1, [sp, #16]
   25ee4:	ldr	r2, [fp, #-16]
   25ee8:	add	r3, sp, #4
   25eec:	bl	1fe0c <main@@Base+0x9924>
   25ef0:	str	r0, [fp, #-12]
   25ef4:	ldr	r0, [sp, #16]
   25ef8:	ldr	r1, [fp, #-12]
   25efc:	cmp	r0, r1
   25f00:	bne	25f54 <main@@Base+0xfa6c>
   25f04:	ldr	r0, [pc, #388]	; 26090 <main@@Base+0xfba8>
   25f08:	add	r3, pc, r0
   25f0c:	ldr	r0, [fp, #-8]
   25f10:	ldr	r1, [fp, #-12]
   25f14:	str	r1, [sp, #16]
   25f18:	ldr	r2, [fp, #-16]
   25f1c:	add	ip, sp, #4
   25f20:	str	ip, [sp]
   25f24:	bl	1fee4 <main@@Base+0x99fc>
   25f28:	str	r0, [fp, #-12]
   25f2c:	ldr	r0, [fp, #-12]
   25f30:	ldr	r1, [sp, #16]
   25f34:	cmp	r0, r1
   25f38:	beq	25f4c <main@@Base+0xfa64>
   25f3c:	ldr	r0, [fp, #-12]
   25f40:	ldr	r1, [fp, #-16]
   25f44:	cmp	r0, r1
   25f48:	bne	25f50 <main@@Base+0xfa68>
   25f4c:	b	2606c <main@@Base+0xfb84>
   25f50:	b	25f54 <main@@Base+0xfa6c>
   25f54:	ldr	r0, [sp, #4]
   25f58:	cmp	r0, #0
   25f5c:	bne	25f74 <main@@Base+0xfa8c>
   25f60:	ldr	r0, [fp, #-8]
   25f64:	ldr	r0, [r0, #8]
   25f68:	and	r0, r0, #2
   25f6c:	cmp	r0, #0
   25f70:	beq	25fb0 <main@@Base+0xfac8>
   25f74:	ldr	r0, [fp, #-8]
   25f78:	ldr	r0, [r0]
   25f7c:	movw	r1, #0
   25f80:	movw	r2, #4
   25f84:	movw	r3, #4
   25f88:	uxth	r3, r3
   25f8c:	bl	2d13c <flatcc_builder_table_add@@Base>
   25f90:	str	r0, [sp, #28]
   25f94:	movw	r1, #0
   25f98:	cmp	r0, r1
   25f9c:	bne	25fa4 <main@@Base+0xfabc>
   25fa0:	b	2606c <main@@Base+0xfb84>
   25fa4:	ldr	r0, [sp, #28]
   25fa8:	ldr	r1, [sp, #4]
   25fac:	bl	200c8 <main@@Base+0x9be0>
   25fb0:	b	25fc8 <main@@Base+0xfae0>
   25fb4:	ldr	r0, [fp, #-8]
   25fb8:	ldr	r1, [fp, #-12]
   25fbc:	ldr	r2, [fp, #-16]
   25fc0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25fc4:	str	r0, [fp, #-12]
   25fc8:	b	25fe0 <main@@Base+0xfaf8>
   25fcc:	ldr	r0, [fp, #-8]
   25fd0:	ldr	r1, [fp, #-12]
   25fd4:	ldr	r2, [fp, #-16]
   25fd8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25fdc:	str	r0, [fp, #-12]
   25fe0:	b	25ff8 <main@@Base+0xfb10>
   25fe4:	ldr	r0, [fp, #-8]
   25fe8:	ldr	r1, [fp, #-12]
   25fec:	ldr	r2, [fp, #-16]
   25ff0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   25ff4:	str	r0, [fp, #-12]
   25ff8:	b	26010 <main@@Base+0xfb28>
   25ffc:	ldr	r0, [fp, #-8]
   26000:	ldr	r1, [fp, #-12]
   26004:	ldr	r2, [fp, #-16]
   26008:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2600c:	str	r0, [fp, #-12]
   26010:	ldr	r0, [fp, #-8]
   26014:	ldr	r1, [fp, #-12]
   26018:	ldr	r2, [fp, #-16]
   2601c:	sub	r3, fp, #24
   26020:	bl	20c14 <main@@Base+0xa72c>
   26024:	str	r0, [fp, #-12]
   26028:	b	25db4 <main@@Base+0xf8cc>
   2602c:	ldr	r0, [fp, #-8]
   26030:	ldr	r0, [r0, #20]
   26034:	cmp	r0, #0
   26038:	beq	26040 <main@@Base+0xfb58>
   2603c:	b	2606c <main@@Base+0xfb84>
   26040:	ldr	r0, [fp, #-8]
   26044:	ldr	r0, [r0]
   26048:	bl	2c500 <flatcc_builder_end_table@@Base>
   2604c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26050:	str	r0, [r1]
   26054:	cmp	r0, #0
   26058:	bne	26060 <main@@Base+0xfb78>
   2605c:	b	2606c <main@@Base+0xfb84>
   26060:	ldr	r0, [fp, #-12]
   26064:	str	r0, [fp, #-4]
   26068:	b	26084 <main@@Base+0xfb9c>
   2606c:	ldr	r0, [fp, #-8]
   26070:	ldr	r1, [fp, #-12]
   26074:	ldr	r2, [fp, #-16]
   26078:	movw	r3, #33	; 0x21
   2607c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26080:	str	r0, [fp, #-4]
   26084:	ldr	r0, [fp, #-4]
   26088:	mov	sp, fp
   2608c:	pop	{fp, pc}
   26090:	strdeq	r7, [r3], -r0
   26094:	push	{fp, lr}
   26098:	mov	fp, sp
   2609c:	sub	sp, sp, #24
   260a0:	str	r0, [fp, #-8]
   260a4:	str	r1, [sp, #12]
   260a8:	str	r2, [sp, #8]
   260ac:	str	r3, [sp, #4]
   260b0:	ldr	r0, [sp, #4]
   260b4:	movw	r1, #0
   260b8:	str	r1, [r0]
   260bc:	ldr	r0, [fp, #-8]
   260c0:	ldr	r0, [r0]
   260c4:	movw	r1, #2
   260c8:	movw	r2, #2
   260cc:	uxth	r2, r2
   260d0:	bl	2a6d4 <flatcc_builder_start_struct@@Base>
   260d4:	str	r0, [sp]
   260d8:	movw	r1, #0
   260dc:	cmp	r0, r1
   260e0:	bne	260e8 <main@@Base+0xfc00>
   260e4:	b	2613c <main@@Base+0xfc54>
   260e8:	ldr	r0, [fp, #-8]
   260ec:	ldr	r1, [sp, #12]
   260f0:	ldr	r2, [sp, #8]
   260f4:	ldr	r3, [sp]
   260f8:	bl	2622c <main@@Base+0xfd44>
   260fc:	str	r0, [sp, #12]
   26100:	ldr	r0, [sp, #12]
   26104:	ldr	r1, [sp, #8]
   26108:	cmp	r0, r1
   2610c:	beq	2612c <main@@Base+0xfc44>
   26110:	ldr	r0, [fp, #-8]
   26114:	ldr	r0, [r0]
   26118:	bl	2a87c <flatcc_builder_end_struct@@Base>
   2611c:	ldr	r1, [sp, #4]
   26120:	str	r0, [r1]
   26124:	cmp	r0, #0
   26128:	bne	26130 <main@@Base+0xfc48>
   2612c:	b	2613c <main@@Base+0xfc54>
   26130:	ldr	r0, [sp, #12]
   26134:	str	r0, [fp, #-4]
   26138:	b	26154 <main@@Base+0xfc6c>
   2613c:	ldr	r0, [fp, #-8]
   26140:	ldr	r1, [sp, #12]
   26144:	ldr	r2, [sp, #8]
   26148:	movw	r3, #33	; 0x21
   2614c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26150:	str	r0, [fp, #-4]
   26154:	ldr	r0, [fp, #-4]
   26158:	mov	sp, fp
   2615c:	pop	{fp, pc}
   26160:	push	{fp, lr}
   26164:	mov	fp, sp
   26168:	sub	sp, sp, #24
   2616c:	str	r0, [fp, #-8]
   26170:	str	r1, [sp, #12]
   26174:	str	r2, [sp, #8]
   26178:	str	r3, [sp, #4]
   2617c:	ldr	r0, [sp, #4]
   26180:	movw	r1, #0
   26184:	str	r1, [r0]
   26188:	ldr	r0, [fp, #-8]
   2618c:	ldr	r0, [r0]
   26190:	movw	r1, #4
   26194:	movw	r2, #4
   26198:	uxth	r2, r2
   2619c:	bl	2a6d4 <flatcc_builder_start_struct@@Base>
   261a0:	str	r0, [sp]
   261a4:	movw	r1, #0
   261a8:	cmp	r0, r1
   261ac:	bne	261b4 <main@@Base+0xfccc>
   261b0:	b	26208 <main@@Base+0xfd20>
   261b4:	ldr	r0, [fp, #-8]
   261b8:	ldr	r1, [sp, #12]
   261bc:	ldr	r2, [sp, #8]
   261c0:	ldr	r3, [sp]
   261c4:	bl	2680c <main@@Base+0x10324>
   261c8:	str	r0, [sp, #12]
   261cc:	ldr	r0, [sp, #12]
   261d0:	ldr	r1, [sp, #8]
   261d4:	cmp	r0, r1
   261d8:	beq	261f8 <main@@Base+0xfd10>
   261dc:	ldr	r0, [fp, #-8]
   261e0:	ldr	r0, [r0]
   261e4:	bl	2a87c <flatcc_builder_end_struct@@Base>
   261e8:	ldr	r1, [sp, #4]
   261ec:	str	r0, [r1]
   261f0:	cmp	r0, #0
   261f4:	bne	261fc <main@@Base+0xfd14>
   261f8:	b	26208 <main@@Base+0xfd20>
   261fc:	ldr	r0, [sp, #12]
   26200:	str	r0, [fp, #-4]
   26204:	b	26220 <main@@Base+0xfd38>
   26208:	ldr	r0, [fp, #-8]
   2620c:	ldr	r1, [sp, #12]
   26210:	ldr	r2, [sp, #8]
   26214:	movw	r3, #33	; 0x21
   26218:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2621c:	str	r0, [fp, #-4]
   26220:	ldr	r0, [fp, #-4]
   26224:	mov	sp, fp
   26228:	pop	{fp, pc}
   2622c:	push	{fp, lr}
   26230:	mov	fp, sp
   26234:	sub	sp, sp, #56	; 0x38
   26238:	str	r0, [fp, #-8]
   2623c:	str	r1, [fp, #-12]
   26240:	str	r2, [fp, #-16]
   26244:	str	r3, [fp, #-20]	; 0xffffffec
   26248:	ldr	r0, [fp, #-8]
   2624c:	ldr	r1, [fp, #-12]
   26250:	ldr	r2, [fp, #-16]
   26254:	sub	r3, fp, #24
   26258:	bl	1baf8 <main@@Base+0x5610>
   2625c:	str	r0, [fp, #-12]
   26260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26264:	cmp	r0, #0
   26268:	beq	2642c <main@@Base+0xff44>
   2626c:	ldr	r0, [fp, #-8]
   26270:	ldr	r1, [fp, #-12]
   26274:	ldr	r2, [fp, #-16]
   26278:	bl	1bbdc <main@@Base+0x56f4>
   2627c:	str	r0, [fp, #-12]
   26280:	ldr	r0, [fp, #-12]
   26284:	ldr	r1, [fp, #-16]
   26288:	bl	1bc60 <main@@Base+0x5778>
   2628c:	str	r1, [sp, #12]
   26290:	str	r0, [sp, #8]
   26294:	ldr	r0, [sp, #8]
   26298:	ldr	r1, [sp, #12]
   2629c:	movw	r2, #26994	; 0x6972
   262a0:	movt	r2, #26721	; 0x6861
   262a4:	eor	r1, r1, r2
   262a8:	movw	r2, #25966	; 0x656e
   262ac:	movt	r2, #24428	; 0x5f6c
   262b0:	eor	r0, r0, r2
   262b4:	orr	r0, r0, r1
   262b8:	cmp	r0, #0
   262bc:	bne	263fc <main@@Base+0xff14>
   262c0:	b	262c4 <main@@Base+0xfddc>
   262c4:	ldr	r0, [fp, #-12]
   262c8:	add	r0, r0, #8
   262cc:	str	r0, [fp, #-12]
   262d0:	ldr	r0, [fp, #-12]
   262d4:	ldr	r1, [fp, #-16]
   262d8:	bl	1bc60 <main@@Base+0x5778>
   262dc:	str	r1, [sp, #12]
   262e0:	str	r0, [sp, #8]
   262e4:	ldr	r0, [sp, #12]
   262e8:	bic	r0, r0, #255	; 0xff
   262ec:	movw	r1, #26624	; 0x6800
   262f0:	movt	r1, #26484	; 0x6774
   262f4:	teq	r0, r1
   262f8:	bne	263e4 <main@@Base+0xfefc>
   262fc:	b	26300 <main@@Base+0xfe18>
   26300:	ldr	r0, [fp, #-8]
   26304:	ldr	r1, [fp, #-12]
   26308:	str	r1, [sp, #20]
   2630c:	ldr	r2, [fp, #-16]
   26310:	movw	r3, #3
   26314:	bl	1bc98 <main@@Base+0x57b0>
   26318:	str	r0, [fp, #-12]
   2631c:	ldr	r0, [sp, #20]
   26320:	ldr	r1, [fp, #-12]
   26324:	cmp	r0, r1
   26328:	beq	263cc <main@@Base+0xfee4>
   2632c:	movw	r0, #0
   26330:	strh	r0, [sp, #6]
   26334:	ldr	r0, [fp, #-20]	; 0xffffffec
   26338:	add	r0, r0, #0
   2633c:	str	r0, [sp, #24]
   26340:	ldr	r0, [fp, #-8]
   26344:	ldr	r1, [fp, #-12]
   26348:	str	r1, [sp, #20]
   2634c:	ldr	r2, [fp, #-16]
   26350:	add	r3, sp, #6
   26354:	bl	26460 <main@@Base+0xff78>
   26358:	str	r0, [fp, #-12]
   2635c:	ldr	r0, [sp, #20]
   26360:	ldr	r1, [fp, #-12]
   26364:	cmp	r0, r1
   26368:	bne	263bc <main@@Base+0xfed4>
   2636c:	ldr	r0, [pc, #232]	; 2645c <main@@Base+0xff74>
   26370:	add	r3, pc, r0
   26374:	ldr	r0, [fp, #-8]
   26378:	ldr	r1, [fp, #-12]
   2637c:	str	r1, [sp, #20]
   26380:	ldr	r2, [fp, #-16]
   26384:	add	ip, sp, #6
   26388:	str	ip, [sp]
   2638c:	bl	2653c <main@@Base+0x10054>
   26390:	str	r0, [fp, #-12]
   26394:	ldr	r0, [fp, #-12]
   26398:	ldr	r1, [sp, #20]
   2639c:	cmp	r0, r1
   263a0:	beq	263b4 <main@@Base+0xfecc>
   263a4:	ldr	r0, [fp, #-12]
   263a8:	ldr	r1, [fp, #-16]
   263ac:	cmp	r0, r1
   263b0:	bne	263b8 <main@@Base+0xfed0>
   263b4:	b	26438 <main@@Base+0xff50>
   263b8:	b	263bc <main@@Base+0xfed4>
   263bc:	ldr	r0, [sp, #24]
   263c0:	ldrh	r1, [sp, #6]
   263c4:	bl	26720 <main@@Base+0x10238>
   263c8:	b	263e0 <main@@Base+0xfef8>
   263cc:	ldr	r0, [fp, #-8]
   263d0:	ldr	r1, [fp, #-12]
   263d4:	ldr	r2, [fp, #-16]
   263d8:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   263dc:	str	r0, [fp, #-12]
   263e0:	b	263f8 <main@@Base+0xff10>
   263e4:	ldr	r0, [fp, #-8]
   263e8:	ldr	r1, [fp, #-12]
   263ec:	ldr	r2, [fp, #-16]
   263f0:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   263f4:	str	r0, [fp, #-12]
   263f8:	b	26410 <main@@Base+0xff28>
   263fc:	ldr	r0, [fp, #-8]
   26400:	ldr	r1, [fp, #-12]
   26404:	ldr	r2, [fp, #-16]
   26408:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   2640c:	str	r0, [fp, #-12]
   26410:	ldr	r0, [fp, #-8]
   26414:	ldr	r1, [fp, #-12]
   26418:	ldr	r2, [fp, #-16]
   2641c:	sub	r3, fp, #24
   26420:	bl	20c14 <main@@Base+0xa72c>
   26424:	str	r0, [fp, #-12]
   26428:	b	26260 <main@@Base+0xfd78>
   2642c:	ldr	r0, [fp, #-12]
   26430:	str	r0, [fp, #-4]
   26434:	b	26450 <main@@Base+0xff68>
   26438:	ldr	r0, [fp, #-8]
   2643c:	ldr	r1, [fp, #-12]
   26440:	ldr	r2, [fp, #-16]
   26444:	movw	r3, #33	; 0x21
   26448:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2644c:	str	r0, [fp, #-4]
   26450:	ldr	r0, [fp, #-4]
   26454:	mov	sp, fp
   26458:	pop	{fp, pc}
   2645c:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   26460:	push	{r4, r5, fp, lr}
   26464:	add	fp, sp, #8
   26468:	sub	sp, sp, #56	; 0x38
   2646c:	str	r0, [fp, #-16]
   26470:	str	r1, [fp, #-20]	; 0xffffffec
   26474:	str	r2, [fp, #-24]	; 0xffffffe8
   26478:	str	r3, [fp, #-28]	; 0xffffffe4
   2647c:	mov	r0, #0
   26480:	str	r0, [sp, #28]
   26484:	str	r0, [sp, #24]
   26488:	movw	r0, #0
   2648c:	str	r0, [sp, #20]
   26490:	ldr	r0, [fp, #-20]	; 0xffffffec
   26494:	str	r0, [sp, #16]
   26498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2649c:	movw	r1, #0
   264a0:	strh	r1, [r0]
   264a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   264a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   264ac:	cmp	r0, r1
   264b0:	bne	264c0 <main@@Base+0xffd8>
   264b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   264b8:	str	r0, [fp, #-12]
   264bc:	b	26530 <main@@Base+0x10048>
   264c0:	ldr	r0, [fp, #-16]
   264c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   264c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   264cc:	add	r3, sp, #20
   264d0:	add	ip, sp, #24
   264d4:	str	ip, [sp]
   264d8:	bl	3579c <flatcc_json_parser_integer@@Base>
   264dc:	str	r0, [fp, #-20]	; 0xffffffec
   264e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   264e4:	ldr	r1, [sp, #16]
   264e8:	cmp	r0, r1
   264ec:	beq	26528 <main@@Base+0x10040>
   264f0:	ldr	r0, [fp, #-16]
   264f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   264f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   264fc:	ldr	r3, [sp, #20]
   26500:	ldr	ip, [sp, #24]
   26504:	ldr	lr, [sp, #28]
   26508:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2650c:	mov	r5, sp
   26510:	str	r4, [r5, #8]
   26514:	str	lr, [r5, #4]
   26518:	str	ip, [r5]
   2651c:	bl	2674c <main@@Base+0x10264>
   26520:	str	r0, [fp, #-12]
   26524:	b	26530 <main@@Base+0x10048>
   26528:	ldr	r0, [fp, #-20]	; 0xffffffec
   2652c:	str	r0, [fp, #-12]
   26530:	ldr	r0, [fp, #-12]
   26534:	sub	sp, fp, #8
   26538:	pop	{r4, r5, fp, pc}
   2653c:	push	{r4, r5, r6, sl, fp, lr}
   26540:	add	fp, sp, #16
   26544:	sub	sp, sp, #80	; 0x50
   26548:	ldr	ip, [fp, #8]
   2654c:	str	r0, [fp, #-24]	; 0xffffffe8
   26550:	str	r1, [fp, #-28]	; 0xffffffe4
   26554:	str	r2, [fp, #-32]	; 0xffffffe0
   26558:	str	r3, [fp, #-36]	; 0xffffffdc
   2655c:	movw	r0, #0
   26560:	strh	r0, [fp, #-46]	; 0xffffffd2
   26564:	ldr	r1, [fp, #8]
   26568:	strh	r0, [r1]
   2656c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26574:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26578:	str	ip, [sp, #28]
   2657c:	bl	22358 <main@@Base+0xbe70>
   26580:	str	r0, [fp, #-28]	; 0xffffffe4
   26584:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26588:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2658c:	cmp	r0, r1
   26590:	bne	265a0 <main@@Base+0x100b8>
   26594:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26598:	str	r0, [fp, #-20]	; 0xffffffec
   2659c:	b	26714 <main@@Base+0x1022c>
   265a0:	b	265a4 <main@@Base+0x100bc>
   265a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   265a8:	str	r0, [fp, #-40]	; 0xffffffd8
   265ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   265b0:	ldr	r0, [r0]
   265b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   265b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   265bc:	str	r2, [fp, #-44]	; 0xffffffd4
   265c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   265c4:	str	r0, [sp, #24]
   265c8:	mov	r0, r1
   265cc:	mov	r1, r2
   265d0:	mov	r2, r3
   265d4:	add	r3, sp, #36	; 0x24
   265d8:	add	ip, sp, #40	; 0x28
   265dc:	str	ip, [sp]
   265e0:	add	ip, sp, #32
   265e4:	str	ip, [sp, #4]
   265e8:	ldr	ip, [sp, #24]
   265ec:	blx	ip
   265f0:	str	r0, [fp, #-28]	; 0xffffffe4
   265f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   265f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   265fc:	cmp	r0, r1
   26600:	bne	26610 <main@@Base+0x10128>
   26604:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26608:	str	r0, [fp, #-20]	; 0xffffffec
   2660c:	b	26714 <main@@Base+0x1022c>
   26610:	b	26614 <main@@Base+0x1012c>
   26614:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2661c:	cmp	r0, r1
   26620:	movw	r0, #0
   26624:	str	r0, [sp, #20]
   26628:	bne	26650 <main@@Base+0x10168>
   2662c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26630:	add	r1, r0, #4
   26634:	str	r1, [fp, #-40]	; 0xffffffd8
   26638:	ldr	r0, [r0, #4]
   2663c:	movw	r1, #0
   26640:	cmp	r0, r1
   26644:	movw	r0, #0
   26648:	movne	r0, #1
   2664c:	str	r0, [sp, #20]
   26650:	ldr	r0, [sp, #20]
   26654:	tst	r0, #1
   26658:	bne	265ac <main@@Base+0x100c4>
   2665c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   26660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26664:	cmp	r0, r1
   26668:	bne	26688 <main@@Base+0x101a0>
   2666c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26670:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26674:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26678:	movw	r3, #23
   2667c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26680:	str	r0, [fp, #-20]	; 0xffffffec
   26684:	b	26714 <main@@Base+0x1022c>
   26688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2668c:	mov	r1, r0
   26690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26694:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26698:	ldr	ip, [sp, #36]	; 0x24
   2669c:	ldr	lr, [sp, #40]	; 0x28
   266a0:	ldr	r4, [sp, #44]	; 0x2c
   266a4:	mov	r5, sp
   266a8:	sub	r6, fp, #46	; 0x2e
   266ac:	str	r6, [r5, #8]
   266b0:	str	r4, [r5, #4]
   266b4:	str	lr, [r5]
   266b8:	str	r0, [sp, #16]
   266bc:	mov	r0, r2
   266c0:	str	r1, [sp, #12]
   266c4:	mov	r1, r3
   266c8:	ldr	r2, [sp, #16]
   266cc:	mov	r3, ip
   266d0:	bl	2674c <main@@Base+0x10264>
   266d4:	ldr	r1, [sp, #12]
   266d8:	cmp	r1, r0
   266dc:	bne	266ec <main@@Base+0x10204>
   266e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   266e4:	str	r0, [fp, #-20]	; 0xffffffec
   266e8:	b	26714 <main@@Base+0x1022c>
   266ec:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   266f0:	ldr	r1, [fp, #8]
   266f4:	ldrh	r2, [r1]
   266f8:	add	r0, r2, r0
   266fc:	strh	r0, [r1]
   26700:	ldr	r0, [sp, #32]
   26704:	cmp	r0, #0
   26708:	bne	265a4 <main@@Base+0x100bc>
   2670c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   26710:	str	r0, [fp, #-20]	; 0xffffffec
   26714:	ldr	r0, [fp, #-20]	; 0xffffffec
   26718:	sub	sp, fp, #16
   2671c:	pop	{r4, r5, r6, sl, fp, pc}
   26720:	push	{fp, lr}
   26724:	mov	fp, sp
   26728:	sub	sp, sp, #8
   2672c:	str	r0, [sp, #4]
   26730:	strh	r1, [sp, #2]
   26734:	ldrh	r0, [sp, #2]
   26738:	bl	267f8 <main@@Base+0x10310>
   2673c:	ldr	r1, [sp, #4]
   26740:	strh	r0, [r1]
   26744:	mov	sp, fp
   26748:	pop	{fp, pc}
   2674c:	push	{r4, sl, fp, lr}
   26750:	add	fp, sp, #8
   26754:	sub	sp, sp, #32
   26758:	ldr	ip, [fp, #12]
   2675c:	ldr	lr, [fp, #8]
   26760:	ldr	r4, [fp, #16]
   26764:	str	r0, [fp, #-16]
   26768:	str	r1, [sp, #20]
   2676c:	str	r2, [sp, #16]
   26770:	str	r3, [sp, #12]
   26774:	str	ip, [sp, #4]
   26778:	str	lr, [sp]
   2677c:	ldr	r0, [sp, #12]
   26780:	cmp	r0, #0
   26784:	beq	267a4 <main@@Base+0x102bc>
   26788:	ldr	r0, [fp, #-16]
   2678c:	ldr	r1, [sp, #20]
   26790:	ldr	r2, [sp, #16]
   26794:	movw	r3, #8
   26798:	bl	33158 <flatcc_json_parser_set_error@@Base>
   2679c:	str	r0, [fp, #-12]
   267a0:	b	267ec <main@@Base+0x10304>
   267a4:	ldr	r0, [sp]
   267a8:	ldr	r1, [sp, #4]
   267ac:	subs	r0, r0, #65536	; 0x10000
   267b0:	sbcs	r1, r1, #0
   267b4:	bcc	267d8 <main@@Base+0x102f0>
   267b8:	b	267bc <main@@Base+0x102d4>
   267bc:	ldr	r0, [fp, #-16]
   267c0:	ldr	r1, [sp, #20]
   267c4:	ldr	r2, [sp, #16]
   267c8:	movw	r3, #7
   267cc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   267d0:	str	r0, [fp, #-12]
   267d4:	b	267ec <main@@Base+0x10304>
   267d8:	ldrh	r0, [sp]
   267dc:	ldr	r1, [fp, #16]
   267e0:	strh	r0, [r1]
   267e4:	ldr	r0, [sp, #20]
   267e8:	str	r0, [fp, #-12]
   267ec:	ldr	r0, [fp, #-12]
   267f0:	sub	sp, fp, #8
   267f4:	pop	{r4, sl, fp, pc}
   267f8:	sub	sp, sp, #4
   267fc:	strh	r0, [sp, #2]
   26800:	ldrh	r0, [sp, #2]
   26804:	add	sp, sp, #4
   26808:	bx	lr
   2680c:	push	{fp, lr}
   26810:	mov	fp, sp
   26814:	sub	sp, sp, #56	; 0x38
   26818:	str	r0, [fp, #-8]
   2681c:	str	r1, [fp, #-12]
   26820:	str	r2, [fp, #-16]
   26824:	str	r3, [fp, #-20]	; 0xffffffec
   26828:	ldr	r0, [fp, #-8]
   2682c:	ldr	r1, [fp, #-12]
   26830:	ldr	r2, [fp, #-16]
   26834:	sub	r3, fp, #24
   26838:	bl	1baf8 <main@@Base+0x5610>
   2683c:	str	r0, [fp, #-12]
   26840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26844:	cmp	r0, #0
   26848:	beq	26a08 <main@@Base+0x10520>
   2684c:	ldr	r0, [fp, #-8]
   26850:	ldr	r1, [fp, #-12]
   26854:	ldr	r2, [fp, #-16]
   26858:	bl	1bbdc <main@@Base+0x56f4>
   2685c:	str	r0, [fp, #-12]
   26860:	ldr	r0, [fp, #-12]
   26864:	ldr	r1, [fp, #-16]
   26868:	bl	1bc60 <main@@Base+0x5778>
   2686c:	str	r1, [sp, #12]
   26870:	str	r0, [sp, #8]
   26874:	ldr	r0, [sp, #8]
   26878:	ldr	r1, [sp, #12]
   2687c:	movw	r2, #28523	; 0x6f6b
   26880:	movt	r2, #25199	; 0x626f
   26884:	eor	r1, r1, r2
   26888:	movw	r2, #29285	; 0x7265
   2688c:	movt	r2, #29535	; 0x735f
   26890:	eor	r0, r0, r2
   26894:	orr	r0, r0, r1
   26898:	cmp	r0, #0
   2689c:	bne	269d8 <main@@Base+0x104f0>
   268a0:	b	268a4 <main@@Base+0x103bc>
   268a4:	ldr	r0, [fp, #-12]
   268a8:	add	r0, r0, #8
   268ac:	str	r0, [fp, #-12]
   268b0:	ldr	r0, [fp, #-12]
   268b4:	ldr	r1, [fp, #-16]
   268b8:	bl	1bc60 <main@@Base+0x5778>
   268bc:	str	r1, [sp, #12]
   268c0:	str	r0, [sp, #8]
   268c4:	ldrh	r0, [sp, #14]
   268c8:	movw	r1, #0
   268cc:	movt	r1, #24932	; 0x6164
   268d0:	teq	r1, r0, lsl #16
   268d4:	bne	269c0 <main@@Base+0x104d8>
   268d8:	b	268dc <main@@Base+0x103f4>
   268dc:	ldr	r0, [fp, #-8]
   268e0:	ldr	r1, [fp, #-12]
   268e4:	str	r1, [sp, #20]
   268e8:	ldr	r2, [fp, #-16]
   268ec:	movw	r3, #2
   268f0:	bl	1bc98 <main@@Base+0x57b0>
   268f4:	str	r0, [fp, #-12]
   268f8:	ldr	r0, [sp, #20]
   268fc:	ldr	r1, [fp, #-12]
   26900:	cmp	r0, r1
   26904:	beq	269a8 <main@@Base+0x104c0>
   26908:	movw	r0, #0
   2690c:	str	r0, [sp, #4]
   26910:	ldr	r0, [fp, #-20]	; 0xffffffec
   26914:	add	r0, r0, #0
   26918:	str	r0, [sp, #24]
   2691c:	ldr	r0, [fp, #-8]
   26920:	ldr	r1, [fp, #-12]
   26924:	str	r1, [sp, #20]
   26928:	ldr	r2, [fp, #-16]
   2692c:	add	r3, sp, #4
   26930:	bl	1fe0c <main@@Base+0x9924>
   26934:	str	r0, [fp, #-12]
   26938:	ldr	r0, [sp, #20]
   2693c:	ldr	r1, [fp, #-12]
   26940:	cmp	r0, r1
   26944:	bne	26998 <main@@Base+0x104b0>
   26948:	ldr	r0, [pc, #232]	; 26a38 <main@@Base+0x10550>
   2694c:	add	r3, pc, r0
   26950:	ldr	r0, [fp, #-8]
   26954:	ldr	r1, [fp, #-12]
   26958:	str	r1, [sp, #20]
   2695c:	ldr	r2, [fp, #-16]
   26960:	add	ip, sp, #4
   26964:	str	ip, [sp]
   26968:	bl	1fee4 <main@@Base+0x99fc>
   2696c:	str	r0, [fp, #-12]
   26970:	ldr	r0, [fp, #-12]
   26974:	ldr	r1, [sp, #20]
   26978:	cmp	r0, r1
   2697c:	beq	26990 <main@@Base+0x104a8>
   26980:	ldr	r0, [fp, #-12]
   26984:	ldr	r1, [fp, #-16]
   26988:	cmp	r0, r1
   2698c:	bne	26994 <main@@Base+0x104ac>
   26990:	b	26a14 <main@@Base+0x1052c>
   26994:	b	26998 <main@@Base+0x104b0>
   26998:	ldr	r0, [sp, #24]
   2699c:	ldr	r1, [sp, #4]
   269a0:	bl	200c8 <main@@Base+0x9be0>
   269a4:	b	269bc <main@@Base+0x104d4>
   269a8:	ldr	r0, [fp, #-8]
   269ac:	ldr	r1, [fp, #-12]
   269b0:	ldr	r2, [fp, #-16]
   269b4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   269b8:	str	r0, [fp, #-12]
   269bc:	b	269d4 <main@@Base+0x104ec>
   269c0:	ldr	r0, [fp, #-8]
   269c4:	ldr	r1, [fp, #-12]
   269c8:	ldr	r2, [fp, #-16]
   269cc:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   269d0:	str	r0, [fp, #-12]
   269d4:	b	269ec <main@@Base+0x10504>
   269d8:	ldr	r0, [fp, #-8]
   269dc:	ldr	r1, [fp, #-12]
   269e0:	ldr	r2, [fp, #-16]
   269e4:	bl	34150 <flatcc_json_parser_unmatched_symbol@@Base>
   269e8:	str	r0, [fp, #-12]
   269ec:	ldr	r0, [fp, #-8]
   269f0:	ldr	r1, [fp, #-12]
   269f4:	ldr	r2, [fp, #-16]
   269f8:	sub	r3, fp, #24
   269fc:	bl	20c14 <main@@Base+0xa72c>
   26a00:	str	r0, [fp, #-12]
   26a04:	b	26840 <main@@Base+0x10358>
   26a08:	ldr	r0, [fp, #-12]
   26a0c:	str	r0, [fp, #-4]
   26a10:	b	26a2c <main@@Base+0x10544>
   26a14:	ldr	r0, [fp, #-8]
   26a18:	ldr	r1, [fp, #-12]
   26a1c:	ldr	r2, [fp, #-16]
   26a20:	movw	r3, #33	; 0x21
   26a24:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26a28:	str	r0, [fp, #-4]
   26a2c:	ldr	r0, [fp, #-4]
   26a30:	mov	sp, fp
   26a34:	pop	{fp, pc}
   26a38:	andeq	r6, r3, r4, asr #19
   26a3c:	push	{r4, sl, fp, lr}
   26a40:	add	fp, sp, #8
   26a44:	sub	sp, sp, #32
   26a48:	ldr	ip, [fp, #12]
   26a4c:	ldr	lr, [fp, #8]
   26a50:	ldr	r4, [fp, #16]
   26a54:	str	r0, [fp, #-16]
   26a58:	str	r1, [sp, #20]
   26a5c:	str	r2, [sp, #16]
   26a60:	str	r3, [sp, #12]
   26a64:	str	ip, [sp, #4]
   26a68:	str	lr, [sp]
   26a6c:	ldr	r0, [sp, #12]
   26a70:	cmp	r0, #0
   26a74:	beq	26a94 <main@@Base+0x105ac>
   26a78:	ldr	r0, [fp, #-16]
   26a7c:	ldr	r1, [sp, #20]
   26a80:	ldr	r2, [sp, #16]
   26a84:	movw	r3, #8
   26a88:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26a8c:	str	r0, [fp, #-12]
   26a90:	b	26ac8 <main@@Base+0x105e0>
   26a94:	ldr	r0, [sp]
   26a98:	ldr	r1, [sp, #4]
   26a9c:	orr	r0, r0, r1
   26aa0:	cmp	r0, #0
   26aa4:	movwne	r0, #1
   26aa8:	mvn	r1, #0
   26aac:	eor	r0, r0, r1
   26ab0:	eor	r0, r0, r1
   26ab4:	and	r0, r0, #1
   26ab8:	ldr	r1, [fp, #16]
   26abc:	strb	r0, [r1]
   26ac0:	ldr	r0, [sp, #20]
   26ac4:	str	r0, [fp, #-12]
   26ac8:	ldr	r0, [fp, #-12]
   26acc:	sub	sp, fp, #8
   26ad0:	pop	{r4, sl, fp, pc}
   26ad4:	sub	sp, sp, #4
   26ad8:	strb	r0, [sp, #3]
   26adc:	ldrb	r0, [sp, #3]
   26ae0:	add	sp, sp, #4
   26ae4:	bx	lr
   26ae8:	push	{r4, sl, fp, lr}
   26aec:	add	fp, sp, #8
   26af0:	sub	sp, sp, #32
   26af4:	ldr	ip, [fp, #12]
   26af8:	ldr	lr, [fp, #8]
   26afc:	ldr	r4, [fp, #16]
   26b00:	str	r0, [fp, #-12]
   26b04:	str	r1, [fp, #-16]
   26b08:	str	r2, [sp, #20]
   26b0c:	str	r3, [sp, #16]
   26b10:	str	ip, [sp, #12]
   26b14:	str	lr, [sp, #8]
   26b18:	ldr	r0, [sp, #16]
   26b1c:	cmp	r0, #0
   26b20:	beq	26b40 <main@@Base+0x10658>
   26b24:	ldr	r0, [sp, #8]
   26b28:	ldr	r1, [sp, #12]
   26b2c:	bl	461bc <flatcc_json_printer_clear@@Base+0x2298>
   26b30:	vmov	s0, r0
   26b34:	vneg.f32	s0, s0
   26b38:	vstr	s0, [sp, #4]
   26b3c:	b	26b54 <main@@Base+0x1066c>
   26b40:	ldr	r0, [sp, #8]
   26b44:	ldr	r1, [sp, #12]
   26b48:	bl	461bc <flatcc_json_printer_clear@@Base+0x2298>
   26b4c:	vmov	s0, r0
   26b50:	vstr	s0, [sp, #4]
   26b54:	vldr	s0, [sp, #4]
   26b58:	ldr	r0, [fp, #16]
   26b5c:	vstr	s0, [r0]
   26b60:	ldr	r0, [fp, #-16]
   26b64:	sub	sp, fp, #8
   26b68:	pop	{r4, sl, fp, pc}
   26b6c:	sub	sp, sp, #8
   26b70:	vstr	s0, [sp, #4]
   26b74:	vldr	s0, [sp, #4]
   26b78:	vstr	s0, [sp]
   26b7c:	ldr	r0, [sp]
   26b80:	str	r0, [sp]
   26b84:	vldr	s0, [sp]
   26b88:	add	sp, sp, #8
   26b8c:	bx	lr
   26b90:	push	{r4, sl, fp, lr}
   26b94:	add	fp, sp, #8
   26b98:	sub	sp, sp, #32
   26b9c:	ldr	ip, [fp, #12]
   26ba0:	ldr	lr, [fp, #8]
   26ba4:	ldr	r4, [fp, #16]
   26ba8:	str	r0, [fp, #-16]
   26bac:	str	r1, [sp, #20]
   26bb0:	str	r2, [sp, #16]
   26bb4:	str	r3, [sp, #12]
   26bb8:	str	ip, [sp, #4]
   26bbc:	str	lr, [sp]
   26bc0:	ldr	r0, [sp, #12]
   26bc4:	cmp	r0, #0
   26bc8:	beq	26c14 <main@@Base+0x1072c>
   26bcc:	ldr	r0, [sp]
   26bd0:	ldr	r1, [sp, #4]
   26bd4:	subs	r0, r0, #-2147483647	; 0x80000001
   26bd8:	sbcs	r1, r1, #0
   26bdc:	bcc	26c00 <main@@Base+0x10718>
   26be0:	b	26be4 <main@@Base+0x106fc>
   26be4:	ldr	r0, [fp, #-16]
   26be8:	ldr	r1, [sp, #20]
   26bec:	ldr	r2, [sp, #16]
   26bf0:	movw	r3, #8
   26bf4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26bf8:	str	r0, [fp, #-12]
   26bfc:	b	26c5c <main@@Base+0x10774>
   26c00:	ldr	r0, [sp]
   26c04:	rsb	r0, r0, #0
   26c08:	ldr	r1, [fp, #16]
   26c0c:	str	r0, [r1]
   26c10:	b	26c54 <main@@Base+0x1076c>
   26c14:	ldr	r0, [sp]
   26c18:	ldr	r1, [sp, #4]
   26c1c:	subs	r0, r0, #-2147483648	; 0x80000000
   26c20:	sbcs	r1, r1, #0
   26c24:	bcc	26c48 <main@@Base+0x10760>
   26c28:	b	26c2c <main@@Base+0x10744>
   26c2c:	ldr	r0, [fp, #-16]
   26c30:	ldr	r1, [sp, #20]
   26c34:	ldr	r2, [sp, #16]
   26c38:	movw	r3, #7
   26c3c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26c40:	str	r0, [fp, #-12]
   26c44:	b	26c5c <main@@Base+0x10774>
   26c48:	ldr	r0, [sp]
   26c4c:	ldr	r1, [fp, #16]
   26c50:	str	r0, [r1]
   26c54:	ldr	r0, [sp, #20]
   26c58:	str	r0, [fp, #-12]
   26c5c:	ldr	r0, [fp, #-12]
   26c60:	sub	sp, fp, #8
   26c64:	pop	{r4, sl, fp, pc}
   26c68:	sub	sp, sp, #4
   26c6c:	str	r0, [sp]
   26c70:	ldr	r0, [sp]
   26c74:	add	sp, sp, #4
   26c78:	bx	lr
   26c7c:	push	{r4, sl, fp, lr}
   26c80:	add	fp, sp, #8
   26c84:	sub	sp, sp, #32
   26c88:	ldr	ip, [fp, #12]
   26c8c:	ldr	lr, [fp, #8]
   26c90:	ldr	r4, [fp, #16]
   26c94:	str	r0, [fp, #-16]
   26c98:	str	r1, [sp, #20]
   26c9c:	str	r2, [sp, #16]
   26ca0:	str	r3, [sp, #12]
   26ca4:	str	ip, [sp, #4]
   26ca8:	str	lr, [sp]
   26cac:	ldr	r0, [sp, #12]
   26cb0:	cmp	r0, #0
   26cb4:	beq	26d0c <main@@Base+0x10824>
   26cb8:	ldr	r0, [sp]
   26cbc:	ldr	r1, [sp, #4]
   26cc0:	subs	r0, r0, #1
   26cc4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   26cc8:	bcc	26cec <main@@Base+0x10804>
   26ccc:	b	26cd0 <main@@Base+0x107e8>
   26cd0:	ldr	r0, [fp, #-16]
   26cd4:	ldr	r1, [sp, #20]
   26cd8:	ldr	r2, [sp, #16]
   26cdc:	movw	r3, #8
   26ce0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26ce4:	str	r0, [fp, #-12]
   26ce8:	b	26d54 <main@@Base+0x1086c>
   26cec:	ldr	r0, [sp]
   26cf0:	ldr	r1, [sp, #4]
   26cf4:	rsbs	r0, r0, #0
   26cf8:	rsc	r1, r1, #0
   26cfc:	ldr	r2, [fp, #16]
   26d00:	str	r0, [r2]
   26d04:	str	r1, [r2, #4]
   26d08:	b	26d4c <main@@Base+0x10864>
   26d0c:	ldr	r0, [sp, #4]
   26d10:	cmn	r0, #1
   26d14:	bgt	26d38 <main@@Base+0x10850>
   26d18:	b	26d1c <main@@Base+0x10834>
   26d1c:	ldr	r0, [fp, #-16]
   26d20:	ldr	r1, [sp, #20]
   26d24:	ldr	r2, [sp, #16]
   26d28:	movw	r3, #7
   26d2c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26d30:	str	r0, [fp, #-12]
   26d34:	b	26d54 <main@@Base+0x1086c>
   26d38:	ldr	r0, [sp]
   26d3c:	ldr	r1, [sp, #4]
   26d40:	ldr	r2, [fp, #16]
   26d44:	str	r1, [r2, #4]
   26d48:	str	r0, [r2]
   26d4c:	ldr	r0, [sp, #20]
   26d50:	str	r0, [fp, #-12]
   26d54:	ldr	r0, [fp, #-12]
   26d58:	sub	sp, fp, #8
   26d5c:	pop	{r4, sl, fp, pc}
   26d60:	sub	sp, sp, #8
   26d64:	str	r0, [sp]
   26d68:	str	r1, [sp, #4]
   26d6c:	ldr	r0, [sp]
   26d70:	ldr	r1, [sp, #4]
   26d74:	add	sp, sp, #8
   26d78:	bx	lr
   26d7c:	push	{r4, sl, fp, lr}
   26d80:	add	fp, sp, #8
   26d84:	sub	sp, sp, #32
   26d88:	ldr	ip, [fp, #12]
   26d8c:	ldr	lr, [fp, #8]
   26d90:	ldr	r4, [fp, #16]
   26d94:	str	r0, [fp, #-16]
   26d98:	str	r1, [sp, #20]
   26d9c:	str	r2, [sp, #16]
   26da0:	str	r3, [sp, #12]
   26da4:	str	ip, [sp, #4]
   26da8:	str	lr, [sp]
   26dac:	ldr	r0, [sp, #12]
   26db0:	cmp	r0, #0
   26db4:	beq	26dd4 <main@@Base+0x108ec>
   26db8:	ldr	r0, [fp, #-16]
   26dbc:	ldr	r1, [sp, #20]
   26dc0:	ldr	r2, [sp, #16]
   26dc4:	movw	r3, #8
   26dc8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26dcc:	str	r0, [fp, #-12]
   26dd0:	b	26e14 <main@@Base+0x1092c>
   26dd4:	ldr	r0, [sp, #4]
   26dd8:	cmp	r0, #0
   26ddc:	beq	26e00 <main@@Base+0x10918>
   26de0:	b	26de4 <main@@Base+0x108fc>
   26de4:	ldr	r0, [fp, #-16]
   26de8:	ldr	r1, [sp, #20]
   26dec:	ldr	r2, [sp, #16]
   26df0:	movw	r3, #7
   26df4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26df8:	str	r0, [fp, #-12]
   26dfc:	b	26e14 <main@@Base+0x1092c>
   26e00:	ldr	r0, [sp]
   26e04:	ldr	r1, [fp, #16]
   26e08:	str	r0, [r1]
   26e0c:	ldr	r0, [sp, #20]
   26e10:	str	r0, [fp, #-12]
   26e14:	ldr	r0, [fp, #-12]
   26e18:	sub	sp, fp, #8
   26e1c:	pop	{r4, sl, fp, pc}
   26e20:	sub	sp, sp, #4
   26e24:	str	r0, [sp]
   26e28:	ldr	r0, [sp]
   26e2c:	add	sp, sp, #4
   26e30:	bx	lr
   26e34:	push	{r4, sl, fp, lr}
   26e38:	add	fp, sp, #8
   26e3c:	sub	sp, sp, #32
   26e40:	ldr	ip, [fp, #12]
   26e44:	ldr	lr, [fp, #8]
   26e48:	ldr	r4, [fp, #16]
   26e4c:	str	r0, [fp, #-16]
   26e50:	str	r1, [sp, #20]
   26e54:	str	r2, [sp, #16]
   26e58:	str	r3, [sp, #12]
   26e5c:	str	ip, [sp, #4]
   26e60:	str	lr, [sp]
   26e64:	ldr	r0, [sp, #12]
   26e68:	cmp	r0, #0
   26e6c:	beq	26e8c <main@@Base+0x109a4>
   26e70:	ldr	r0, [fp, #-16]
   26e74:	ldr	r1, [sp, #20]
   26e78:	ldr	r2, [sp, #16]
   26e7c:	movw	r3, #8
   26e80:	bl	33158 <flatcc_json_parser_set_error@@Base>
   26e84:	str	r0, [fp, #-12]
   26e88:	b	26ea8 <main@@Base+0x109c0>
   26e8c:	ldr	r0, [sp]
   26e90:	ldr	r1, [sp, #4]
   26e94:	ldr	r2, [fp, #16]
   26e98:	str	r1, [r2, #4]
   26e9c:	str	r0, [r2]
   26ea0:	ldr	r0, [sp, #20]
   26ea4:	str	r0, [fp, #-12]
   26ea8:	ldr	r0, [fp, #-12]
   26eac:	sub	sp, fp, #8
   26eb0:	pop	{r4, sl, fp, pc}
   26eb4:	sub	sp, sp, #8
   26eb8:	str	r0, [sp]
   26ebc:	str	r1, [sp, #4]
   26ec0:	ldr	r0, [sp]
   26ec4:	ldr	r1, [sp, #4]
   26ec8:	add	sp, sp, #8
   26ecc:	bx	lr
   26ed0:	push	{r4, sl, fp, lr}
   26ed4:	add	fp, sp, #8
   26ed8:	sub	sp, sp, #32
   26edc:	ldr	ip, [fp, #12]
   26ee0:	ldr	lr, [fp, #8]
   26ee4:	ldr	r4, [fp, #16]
   26ee8:	str	r0, [fp, #-12]
   26eec:	str	r1, [fp, #-16]
   26ef0:	str	r2, [sp, #20]
   26ef4:	str	r3, [sp, #16]
   26ef8:	str	ip, [sp, #12]
   26efc:	str	lr, [sp, #8]
   26f00:	ldr	r0, [sp, #16]
   26f04:	cmp	r0, #0
   26f08:	beq	26f28 <main@@Base+0x10a40>
   26f0c:	ldr	r0, [sp, #8]
   26f10:	ldr	r1, [sp, #12]
   26f14:	bl	45f84 <flatcc_json_printer_clear@@Base+0x2060>
   26f18:	vmov	d16, r0, r1
   26f1c:	vneg.f64	d16, d16
   26f20:	vstr	d16, [sp]
   26f24:	b	26f3c <main@@Base+0x10a54>
   26f28:	ldr	r0, [sp, #8]
   26f2c:	ldr	r1, [sp, #12]
   26f30:	bl	45f84 <flatcc_json_printer_clear@@Base+0x2060>
   26f34:	vmov	d16, r0, r1
   26f38:	vstr	d16, [sp]
   26f3c:	vldr	d16, [sp]
   26f40:	ldr	r0, [fp, #16]
   26f44:	vstr	d16, [r0]
   26f48:	ldr	r0, [fp, #-16]
   26f4c:	sub	sp, fp, #8
   26f50:	pop	{r4, sl, fp, pc}
   26f54:	sub	sp, sp, #16
   26f58:	vstr	d0, [sp, #8]
   26f5c:	vldr	d16, [sp, #8]
   26f60:	vstr	d16, [sp]
   26f64:	vldr	d0, [sp]
   26f68:	add	sp, sp, #16
   26f6c:	bx	lr
   26f70:	push	{r4, sl, fp, lr}
   26f74:	add	fp, sp, #8
   26f78:	sub	sp, sp, #64	; 0x40
   26f7c:	ldr	r2, [pc, #420]	; 27128 <main@@Base+0x10c40>
   26f80:	add	r2, pc, r2
   26f84:	str	r0, [fp, #-12]
   26f88:	str	r1, [fp, #-16]
   26f8c:	ldr	r0, [fp, #-12]
   26f90:	ldr	r1, [fp, #-16]
   26f94:	movw	r3, #0
   26f98:	str	r1, [fp, #-20]	; 0xffffffec
   26f9c:	mov	r1, r3
   26fa0:	ldr	ip, [fp, #-20]	; 0xffffffec
   26fa4:	str	r2, [fp, #-24]	; 0xffffffe8
   26fa8:	mov	r2, ip
   26fac:	ldr	lr, [fp, #-24]	; 0xffffffe8
   26fb0:	str	lr, [sp]
   26fb4:	movw	r4, #1
   26fb8:	str	r4, [sp, #4]
   26fbc:	bl	3d90c <flatcc_json_printer_float_struct_field@@Base>
   26fc0:	ldr	r0, [pc, #348]	; 27124 <main@@Base+0x10c3c>
   26fc4:	add	r0, pc, r0
   26fc8:	ldr	r1, [fp, #-12]
   26fcc:	ldr	r2, [fp, #-16]
   26fd0:	str	r0, [fp, #-28]	; 0xffffffe4
   26fd4:	mov	r0, r1
   26fd8:	movw	r1, #1
   26fdc:	str	r1, [fp, #-32]	; 0xffffffe0
   26fe0:	movw	r3, #4
   26fe4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   26fe8:	str	ip, [sp]
   26fec:	ldr	lr, [fp, #-32]	; 0xffffffe0
   26ff0:	str	lr, [sp, #4]
   26ff4:	bl	3d90c <flatcc_json_printer_float_struct_field@@Base>
   26ff8:	ldr	r0, [pc, #288]	; 27120 <main@@Base+0x10c38>
   26ffc:	add	r0, pc, r0
   27000:	ldr	r1, [fp, #-12]
   27004:	ldr	r2, [fp, #-16]
   27008:	str	r0, [sp, #36]	; 0x24
   2700c:	mov	r0, r1
   27010:	movw	r1, #2
   27014:	movw	r3, #8
   27018:	ldr	ip, [sp, #36]	; 0x24
   2701c:	str	ip, [sp]
   27020:	movw	lr, #1
   27024:	str	lr, [sp, #4]
   27028:	bl	3d90c <flatcc_json_printer_float_struct_field@@Base>
   2702c:	ldr	r0, [pc, #232]	; 2711c <main@@Base+0x10c34>
   27030:	add	r0, pc, r0
   27034:	ldr	r1, [fp, #-12]
   27038:	ldr	r2, [fp, #-16]
   2703c:	str	r0, [sp, #32]
   27040:	mov	r0, r1
   27044:	movw	r1, #3
   27048:	movw	r3, #16
   2704c:	ldr	ip, [sp, #32]
   27050:	str	ip, [sp]
   27054:	movw	lr, #5
   27058:	str	lr, [sp, #4]
   2705c:	bl	3d9ac <flatcc_json_printer_double_struct_field@@Base>
   27060:	ldr	r0, [pc, #172]	; 27114 <main@@Base+0x10c2c>
   27064:	add	r0, pc, r0
   27068:	ldr	r1, [pc, #168]	; 27118 <main@@Base+0x10c30>
   2706c:	add	r1, pc, r1
   27070:	ldr	r2, [fp, #-12]
   27074:	ldr	r3, [fp, #-16]
   27078:	str	r0, [sp, #28]
   2707c:	mov	r0, r2
   27080:	movw	r2, #4
   27084:	str	r1, [sp, #24]
   27088:	mov	r1, r2
   2708c:	mov	r2, r3
   27090:	movw	r3, #24
   27094:	ldr	ip, [sp, #28]
   27098:	str	ip, [sp]
   2709c:	movw	lr, #5
   270a0:	str	lr, [sp, #4]
   270a4:	ldr	lr, [sp, #24]
   270a8:	str	lr, [sp, #8]
   270ac:	bl	3ddb0 <flatcc_json_printer_int8_enum_struct_field@@Base>
   270b0:	ldr	r0, [pc, #84]	; 2710c <main@@Base+0x10c24>
   270b4:	add	r0, pc, r0
   270b8:	ldr	r1, [pc, #80]	; 27110 <main@@Base+0x10c28>
   270bc:	add	r1, pc, r1
   270c0:	ldr	r2, [fp, #-12]
   270c4:	ldr	r3, [fp, #-16]
   270c8:	str	r0, [sp, #20]
   270cc:	mov	r0, r2
   270d0:	movw	r2, #5
   270d4:	str	r1, [sp, #16]
   270d8:	mov	r1, r2
   270dc:	str	r2, [sp, #12]
   270e0:	mov	r2, r3
   270e4:	movw	r3, #26
   270e8:	ldr	ip, [sp, #20]
   270ec:	str	ip, [sp]
   270f0:	ldr	lr, [sp, #12]
   270f4:	str	lr, [sp, #4]
   270f8:	ldr	r4, [sp, #16]
   270fc:	str	r4, [sp, #8]
   27100:	bl	42ec8 <flatcc_json_printer_embedded_struct_field@@Base>
   27104:	sub	sp, fp, #8
   27108:	pop	{r4, sl, fp, pc}
   2710c:	andeq	r2, r2, r3, lsr #1
   27110:	andeq	r0, r0, r8, lsr r3
   27114:	andeq	r2, r2, sp, ror #1
   27118:	strheq	r0, [r0], -r8
   2711c:	andeq	r2, r2, fp, lsl r1
   27120:	andeq	r2, r2, sp, asr #2
   27124:	andeq	r3, r2, sp, lsr sp
   27128:	andeq	r2, r2, r0, lsl r0
   2712c:	push	{fp, lr}
   27130:	mov	fp, sp
   27134:	sub	sp, sp, #16
   27138:	str	r0, [fp, #-4]
   2713c:	strb	r1, [fp, #-5]
   27140:	ldrb	r0, [fp, #-5]
   27144:	strb	r0, [fp, #-6]
   27148:	ldrb	r0, [fp, #-6]
   2714c:	ldrb	r1, [fp, #-6]
   27150:	sub	r1, r1, #1
   27154:	and	r0, r0, r1
   27158:	movw	r1, #0
   2715c:	cmp	r1, r0
   27160:	movw	r0, #0
   27164:	movne	r0, #1
   27168:	and	r0, r0, #1
   2716c:	str	r0, [sp, #4]
   27170:	str	r1, [sp]
   27174:	ldrb	r0, [fp, #-6]
   27178:	and	r0, r0, #244	; 0xf4
   2717c:	cmp	r0, #0
   27180:	bne	27190 <main@@Base+0x10ca8>
   27184:	ldrb	r0, [fp, #-6]
   27188:	cmp	r0, #0
   2718c:	bne	271a0 <main@@Base+0x10cb8>
   27190:	ldr	r0, [fp, #-4]
   27194:	ldrsb	r1, [fp, #-5]
   27198:	bl	3aeb0 <flatcc_json_printer_int8@@Base>
   2719c:	b	27248 <main@@Base+0x10d60>
   271a0:	ldr	r0, [fp, #-4]
   271a4:	ldr	r1, [sp, #4]
   271a8:	bl	3b338 <flatcc_json_printer_delimit_enum_flags@@Base>
   271ac:	ldrb	r0, [fp, #-6]
   271b0:	and	r0, r0, #1
   271b4:	cmp	r0, #0
   271b8:	beq	271dc <main@@Base+0x10cf4>
   271bc:	ldr	r0, [pc, #140]	; 27250 <main@@Base+0x10d68>
   271c0:	add	r2, pc, r0
   271c4:	ldr	r0, [fp, #-4]
   271c8:	ldr	r1, [sp]
   271cc:	add	r3, r1, #1
   271d0:	str	r3, [sp]
   271d4:	movw	r3, #3
   271d8:	bl	3b3a8 <flatcc_json_printer_enum_flag@@Base>
   271dc:	ldrb	r0, [fp, #-6]
   271e0:	and	r0, r0, #2
   271e4:	cmp	r0, #0
   271e8:	beq	2720c <main@@Base+0x10d24>
   271ec:	ldr	r0, [pc, #96]	; 27254 <main@@Base+0x10d6c>
   271f0:	add	r2, pc, r0
   271f4:	ldr	r0, [fp, #-4]
   271f8:	ldr	r1, [sp]
   271fc:	add	r3, r1, #1
   27200:	str	r3, [sp]
   27204:	movw	r3, #5
   27208:	bl	3b3a8 <flatcc_json_printer_enum_flag@@Base>
   2720c:	ldrb	r0, [fp, #-6]
   27210:	and	r0, r0, #8
   27214:	cmp	r0, #0
   27218:	beq	2723c <main@@Base+0x10d54>
   2721c:	ldr	r0, [pc, #52]	; 27258 <main@@Base+0x10d70>
   27220:	add	r2, pc, r0
   27224:	ldr	r0, [fp, #-4]
   27228:	ldr	r1, [sp]
   2722c:	add	r3, r1, #1
   27230:	str	r3, [sp]
   27234:	movw	r3, #4
   27238:	bl	3b3a8 <flatcc_json_printer_enum_flag@@Base>
   2723c:	ldr	r0, [fp, #-4]
   27240:	ldr	r1, [sp, #4]
   27244:	bl	3b338 <flatcc_json_printer_delimit_enum_flags@@Base>
   27248:	mov	sp, fp
   2724c:	pop	{fp, pc}
   27250:	muleq	r2, sp, pc	; <UNPREDICTABLE>
   27254:	andeq	r1, r2, r1, ror pc
   27258:	andeq	r1, r2, r7, asr #30
   2725c:	push	{fp, lr}
   27260:	mov	fp, sp
   27264:	sub	sp, sp, #16
   27268:	str	r0, [fp, #-4]
   2726c:	strb	r1, [fp, #-5]
   27270:	ldrb	r0, [fp, #-5]
   27274:	sub	r0, r0, #1
   27278:	cmp	r0, #3
   2727c:	str	r0, [sp, #4]
   27280:	bhi	27304 <main@@Base+0x10e1c>
   27284:	add	r0, pc, #8
   27288:	ldr	r1, [sp, #4]
   2728c:	ldr	r2, [r0, r1, lsl #2]
   27290:	add	pc, r0, r2
   27294:	andeq	r0, r0, r0, lsl r0
   27298:	andeq	r0, r0, r8, lsr #32
   2729c:	andeq	r0, r0, r0, asr #32
   272a0:	andeq	r0, r0, r8, asr r0
   272a4:	ldr	r0, [pc, #128]	; 2732c <main@@Base+0x10e44>
   272a8:	add	r1, pc, r0
   272ac:	ldr	r0, [fp, #-4]
   272b0:	movw	r2, #7
   272b4:	bl	3b20c <flatcc_json_printer_enum@@Base>
   272b8:	b	27318 <main@@Base+0x10e30>
   272bc:	ldr	r0, [pc, #100]	; 27328 <main@@Base+0x10e40>
   272c0:	add	r1, pc, r0
   272c4:	ldr	r0, [fp, #-4]
   272c8:	movw	r2, #23
   272cc:	bl	3b20c <flatcc_json_printer_enum@@Base>
   272d0:	b	27318 <main@@Base+0x10e30>
   272d4:	ldr	r0, [pc, #72]	; 27324 <main@@Base+0x10e3c>
   272d8:	add	r1, pc, r0
   272dc:	ldr	r0, [fp, #-4]
   272e0:	movw	r2, #8
   272e4:	bl	3b20c <flatcc_json_printer_enum@@Base>
   272e8:	b	27318 <main@@Base+0x10e30>
   272ec:	ldr	r0, [pc, #44]	; 27320 <main@@Base+0x10e38>
   272f0:	add	r1, pc, r0
   272f4:	ldr	r0, [fp, #-4]
   272f8:	movw	r2, #3
   272fc:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27300:	b	27318 <main@@Base+0x10e30>
   27304:	ldr	r0, [pc, #36]	; 27330 <main@@Base+0x10e48>
   27308:	add	r1, pc, r0
   2730c:	ldr	r0, [fp, #-4]
   27310:	movw	r2, #4
   27314:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27318:	mov	sp, fp
   2731c:	pop	{fp, pc}
   27320:	andeq	r1, r2, r5, lsr #29
   27324:			; <UNDEFINED> instruction: 0x00021eb4
   27328:			; <UNDEFINED> instruction: 0x00021eb4
   2732c:	andeq	r1, r2, r4, asr #29
   27330:	andeq	r3, r2, r1, lsr r7
   27334:	push	{fp, lr}
   27338:	mov	fp, sp
   2733c:	sub	sp, sp, #16
   27340:	str	r0, [fp, #-4]
   27344:	str	r1, [sp, #8]
   27348:	ldr	r0, [sp, #8]
   2734c:	ldrb	r0, [r0, #8]
   27350:	sub	r0, r0, #1
   27354:	cmp	r0, #3
   27358:	str	r0, [sp, #4]
   2735c:	bhi	273e0 <main@@Base+0x10ef8>
   27360:	add	r0, pc, #8
   27364:	ldr	r1, [sp, #4]
   27368:	ldr	r2, [r0, r1, lsl #2]
   2736c:	add	pc, r0, r2
   27370:	andeq	r0, r0, r0, lsl r0
   27374:	andeq	r0, r0, r8, lsr #32
   27378:	andeq	r0, r0, r0, asr #32
   2737c:	andeq	r0, r0, r8, asr r0
   27380:	ldr	r0, [pc, #112]	; 273f8 <main@@Base+0x10f10>
   27384:	add	r2, pc, r0
   27388:	ldr	r0, [fp, #-4]
   2738c:	ldr	r1, [sp, #8]
   27390:	bl	42d4c <flatcc_json_printer_union_table@@Base>
   27394:	b	273e4 <main@@Base+0x10efc>
   27398:	ldr	r0, [pc, #84]	; 273f4 <main@@Base+0x10f0c>
   2739c:	add	r2, pc, r0
   273a0:	ldr	r0, [fp, #-4]
   273a4:	ldr	r1, [sp, #8]
   273a8:	bl	42d4c <flatcc_json_printer_union_table@@Base>
   273ac:	b	273e4 <main@@Base+0x10efc>
   273b0:	ldr	r0, [pc, #56]	; 273f0 <main@@Base+0x10f08>
   273b4:	add	r2, pc, r0
   273b8:	ldr	r0, [fp, #-4]
   273bc:	ldr	r1, [sp, #8]
   273c0:	bl	42d4c <flatcc_json_printer_union_table@@Base>
   273c4:	b	273e4 <main@@Base+0x10efc>
   273c8:	ldr	r0, [pc, #28]	; 273ec <main@@Base+0x10f04>
   273cc:	add	r2, pc, r0
   273d0:	ldr	r0, [fp, #-4]
   273d4:	ldr	r1, [sp, #8]
   273d8:	bl	42d4c <flatcc_json_printer_union_table@@Base>
   273dc:	b	273e4 <main@@Base+0x10efc>
   273e0:	b	273e4 <main@@Base+0x10efc>
   273e4:	mov	sp, fp
   273e8:	pop	{fp, pc}
   273ec:	andeq	r0, r0, r4, lsl #8
   273f0:	andeq	r0, r0, r8, lsl #8
   273f4:	andeq	r0, r0, r0, lsl #6
   273f8:			; <UNDEFINED> instruction: 0xffff37b8
   273fc:	push	{r4, sl, fp, lr}
   27400:	add	fp, sp, #8
   27404:	sub	sp, sp, #32
   27408:	ldr	r2, [pc, #128]	; 27490 <main@@Base+0x10fa8>
   2740c:	add	r2, pc, r2
   27410:	str	r0, [fp, #-12]
   27414:	str	r1, [fp, #-16]
   27418:	ldr	r0, [fp, #-12]
   2741c:	ldr	r1, [fp, #-16]
   27420:	movw	r3, #0
   27424:	str	r1, [sp, #20]
   27428:	mov	r1, r3
   2742c:	ldr	ip, [sp, #20]
   27430:	str	r2, [sp, #16]
   27434:	mov	r2, ip
   27438:	ldr	lr, [sp, #16]
   2743c:	str	lr, [sp]
   27440:	movw	r4, #1
   27444:	str	r4, [sp, #4]
   27448:	bl	3d690 <flatcc_json_printer_int16_struct_field@@Base>
   2744c:	ldr	r0, [pc, #56]	; 2748c <main@@Base+0x10fa4>
   27450:	add	r0, pc, r0
   27454:	ldr	r1, [fp, #-12]
   27458:	ldr	r2, [fp, #-16]
   2745c:	str	r0, [sp, #12]
   27460:	mov	r0, r1
   27464:	movw	r1, #1
   27468:	str	r1, [sp, #8]
   2746c:	movw	r3, #2
   27470:	ldr	ip, [sp, #12]
   27474:	str	ip, [sp]
   27478:	ldr	lr, [sp, #8]
   2747c:	str	lr, [sp, #4]
   27480:	bl	3d5f0 <flatcc_json_printer_int8_struct_field@@Base>
   27484:	sub	sp, fp, #8
   27488:	pop	{r4, sl, fp, pc}
   2748c:	andeq	r1, r2, r2, asr #27
   27490:	andeq	r1, r2, r7, ror #24
   27494:	push	{fp, lr}
   27498:	mov	fp, sp
   2749c:	sub	sp, sp, #32
   274a0:	ldr	r2, [pc, #164]	; 2754c <main@@Base+0x11064>
   274a4:	add	r3, pc, r2
   274a8:	str	r0, [fp, #-4]
   274ac:	str	r1, [fp, #-8]
   274b0:	ldr	r0, [fp, #-4]
   274b4:	ldr	r1, [fp, #-8]
   274b8:	movw	r2, #0
   274bc:	movw	ip, #2
   274c0:	str	ip, [sp]
   274c4:	bl	3b410 <flatcc_json_printer_string_field@@Base>
   274c8:	ldr	r0, [pc, #120]	; 27548 <main@@Base+0x11060>
   274cc:	add	r0, pc, r0
   274d0:	ldr	r1, [fp, #-4]
   274d4:	ldr	r2, [fp, #-8]
   274d8:	mov	r3, sp
   274dc:	mov	ip, #0
   274e0:	str	ip, [r3, #12]
   274e4:	str	ip, [r3, #8]
   274e8:	mov	ip, #3
   274ec:	str	ip, [r3]
   274f0:	ldr	r3, [pc, #88]	; 27550 <main@@Base+0x11068>
   274f4:	add	r3, pc, r3
   274f8:	mov	ip, #1
   274fc:	str	r0, [fp, #-12]
   27500:	mov	r0, r1
   27504:	mov	r1, r2
   27508:	mov	r2, ip
   2750c:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27510:	ldr	r0, [pc, #44]	; 27544 <main@@Base+0x1105c>
   27514:	add	r3, pc, r0
   27518:	ldr	r0, [fp, #-4]
   2751c:	ldr	r1, [fp, #-8]
   27520:	movw	r2, #2
   27524:	movw	ip, #5
   27528:	str	ip, [sp]
   2752c:	movw	ip, #0
   27530:	uxth	ip, ip
   27534:	str	ip, [sp, #4]
   27538:	bl	3baf4 <flatcc_json_printer_uint16_field@@Base>
   2753c:	mov	sp, fp
   27540:	pop	{fp, pc}
   27544:	andeq	r2, r2, r1, lsl #13
   27548:	andeq	r1, r2, r0, asr #28
   2754c:	andeq	r1, r2, r5, ror #28
   27550:	andeq	r1, r2, r8, lsl lr
   27554:	push	{r4, sl, fp, lr}
   27558:	add	fp, sp, #8
   2755c:	sub	sp, sp, #32
   27560:	ldr	r2, [pc, #124]	; 275e4 <main@@Base+0x110fc>
   27564:	add	r2, pc, r2
   27568:	str	r0, [fp, #-12]
   2756c:	str	r1, [fp, #-16]
   27570:	ldr	r0, [fp, #-12]
   27574:	ldr	r1, [fp, #-16]
   27578:	movw	r3, #0
   2757c:	str	r1, [sp, #20]
   27580:	mov	r1, r3
   27584:	ldr	ip, [sp, #20]
   27588:	str	r2, [sp, #16]
   2758c:	mov	r2, ip
   27590:	ldr	lr, [sp, #16]
   27594:	str	lr, [sp]
   27598:	movw	r4, #2
   2759c:	str	r4, [sp, #4]
   275a0:	bl	3d4b0 <flatcc_json_printer_uint32_struct_field@@Base>
   275a4:	ldr	r0, [pc, #52]	; 275e0 <main@@Base+0x110f8>
   275a8:	add	r0, pc, r0
   275ac:	ldr	r1, [fp, #-12]
   275b0:	ldr	r2, [fp, #-16]
   275b4:	str	r0, [sp, #12]
   275b8:	mov	r0, r1
   275bc:	movw	r1, #1
   275c0:	movw	r3, #4
   275c4:	ldr	ip, [sp, #12]
   275c8:	str	ip, [sp]
   275cc:	movw	lr, #8
   275d0:	str	lr, [sp, #4]
   275d4:	bl	3d4b0 <flatcc_json_printer_uint32_struct_field@@Base>
   275d8:	sub	sp, fp, #8
   275dc:	pop	{r4, sl, fp, pc}
   275e0:	andeq	r1, r2, r8, ror #26
   275e4:	andeq	r1, r2, r5, lsr #27
   275e8:	sub	sp, sp, #8
   275ec:	str	r0, [sp, #4]
   275f0:	str	r1, [sp]
   275f4:	add	sp, sp, #8
   275f8:	bx	lr
   275fc:	push	{fp, lr}
   27600:	mov	fp, sp
   27604:	sub	sp, sp, #24
   27608:	ldr	r2, [pc, #144]	; 276a0 <main@@Base+0x111b8>
   2760c:	add	r3, pc, r2
   27610:	str	r0, [fp, #-4]
   27614:	str	r1, [fp, #-8]
   27618:	ldr	r0, [fp, #-4]
   2761c:	ldr	r1, [fp, #-8]
   27620:	movw	r2, #0
   27624:	str	r2, [sp, #12]
   27628:	movw	ip, #4
   2762c:	str	ip, [sp]
   27630:	ldr	ip, [sp, #12]
   27634:	str	ip, [sp, #4]
   27638:	bl	3b69c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2763c:	ldr	r0, [pc, #88]	; 2769c <main@@Base+0x111b4>
   27640:	add	r3, pc, r0
   27644:	ldr	r0, [fp, #-4]
   27648:	ldr	r1, [fp, #-8]
   2764c:	movw	r2, #1
   27650:	str	r2, [sp, #8]
   27654:	movw	ip, #7
   27658:	str	ip, [sp]
   2765c:	ldr	ip, [sp, #8]
   27660:	str	ip, [sp, #4]
   27664:	bl	3b69c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   27668:	ldr	r0, [pc, #40]	; 27698 <main@@Base+0x111b0>
   2766c:	add	r3, pc, r0
   27670:	ldr	r0, [fp, #-4]
   27674:	ldr	r1, [fp, #-8]
   27678:	movw	r2, #2
   2767c:	movw	ip, #6
   27680:	str	ip, [sp]
   27684:	movw	ip, #0
   27688:	str	ip, [sp, #4]
   2768c:	bl	3b69c <flatcc_json_printer_uint8_vector_base64_field@@Base>
   27690:	mov	sp, fp
   27694:	pop	{fp, pc}
   27698:			; <UNDEFINED> instruction: 0x00021cb5
   2769c:	ldrdeq	r1, [r2], -r9
   276a0:	andeq	r1, r2, r0, lsl sp
   276a4:	push	{fp, lr}
   276a8:	mov	fp, sp
   276ac:	sub	sp, sp, #40	; 0x28
   276b0:	ldr	r2, [pc, #260]	; 277bc <main@@Base+0x112d4>
   276b4:	add	r3, pc, r2
   276b8:	ldr	r2, [pc, #256]	; 277c0 <main@@Base+0x112d8>
   276bc:	add	r2, pc, r2
   276c0:	str	r0, [fp, #-4]
   276c4:	str	r1, [fp, #-8]
   276c8:	ldr	r0, [fp, #-4]
   276cc:	ldr	r1, [fp, #-8]
   276d0:	movw	ip, #0
   276d4:	str	r2, [fp, #-12]
   276d8:	mov	r2, ip
   276dc:	movw	ip, #5
   276e0:	str	ip, [sp]
   276e4:	movw	ip, #2
   276e8:	sxtb	ip, ip
   276ec:	str	ip, [sp, #4]
   276f0:	ldr	ip, [fp, #-12]
   276f4:	str	ip, [sp, #8]
   276f8:	bl	3cd04 <flatcc_json_printer_int8_enum_field@@Base>
   276fc:	ldr	r0, [pc, #176]	; 277b4 <main@@Base+0x112cc>
   27700:	add	r3, pc, r0
   27704:	ldr	r0, [pc, #172]	; 277b8 <main@@Base+0x112d0>
   27708:	add	r0, pc, r0
   2770c:	ldr	r1, [fp, #-4]
   27710:	ldr	r2, [fp, #-8]
   27714:	str	r0, [fp, #-16]
   27718:	mov	r0, r1
   2771c:	mov	r1, r2
   27720:	movw	r2, #1
   27724:	movw	ip, #6
   27728:	str	ip, [sp]
   2772c:	movw	ip, #2
   27730:	sxtb	ip, ip
   27734:	str	ip, [sp, #4]
   27738:	ldr	ip, [fp, #-16]
   2773c:	str	ip, [sp, #8]
   27740:	bl	3cd04 <flatcc_json_printer_int8_enum_field@@Base>
   27744:	ldr	r0, [pc, #100]	; 277b0 <main@@Base+0x112c8>
   27748:	add	r3, pc, r0
   2774c:	ldr	r0, [fp, #-4]
   27750:	ldr	r1, [fp, #-8]
   27754:	movw	r2, #2
   27758:	str	r2, [sp, #20]
   2775c:	ldr	ip, [sp, #20]
   27760:	str	ip, [sp]
   27764:	movw	lr, #2
   27768:	and	lr, lr, #255	; 0xff
   2776c:	str	lr, [sp, #4]
   27770:	bl	3b9c4 <flatcc_json_printer_uint8_field@@Base>
   27774:	ldr	r0, [pc, #48]	; 277ac <main@@Base+0x112c4>
   27778:	add	r3, pc, r0
   2777c:	ldr	r0, [fp, #-4]
   27780:	ldr	r1, [fp, #-8]
   27784:	movw	r2, #3
   27788:	str	r2, [sp, #16]
   2778c:	ldr	ip, [sp, #16]
   27790:	str	ip, [sp]
   27794:	movw	lr, #2
   27798:	and	lr, lr, #255	; 0xff
   2779c:	str	lr, [sp, #4]
   277a0:	bl	3b9c4 <flatcc_json_printer_uint8_field@@Base>
   277a4:	mov	sp, fp
   277a8:	pop	{fp, pc}
   277ac:	andeq	r1, r2, fp, lsr #20
   277b0:	andeq	r1, r2, r8, asr sl
   277b4:	muleq	r2, r9, sl
   277b8:			; <UNDEFINED> instruction: 0xfffffa1c
   277bc:	andeq	r1, r2, sp, lsl #18
   277c0:			; <UNDEFINED> instruction: 0xfffffa68
   277c4:	sub	sp, sp, #8
   277c8:	str	r0, [sp, #4]
   277cc:	str	r1, [sp]
   277d0:	add	sp, sp, #8
   277d4:	bx	lr
   277d8:	push	{fp, lr}
   277dc:	mov	fp, sp
   277e0:	sub	sp, sp, #40	; 0x28
   277e4:	ldr	r2, [pc, #224]	; 278cc <main@@Base+0x113e4>
   277e8:	add	r3, pc, r2
   277ec:	ldr	r2, [pc, #220]	; 278d0 <main@@Base+0x113e8>
   277f0:	add	r2, pc, r2
   277f4:	str	r0, [fp, #-4]
   277f8:	str	r1, [fp, #-8]
   277fc:	ldr	r0, [fp, #-4]
   27800:	ldr	r1, [fp, #-8]
   27804:	movw	ip, #0
   27808:	str	r2, [fp, #-12]
   2780c:	mov	r2, ip
   27810:	movw	ip, #6
   27814:	str	ip, [sp]
   27818:	ldr	ip, [fp, #-12]
   2781c:	str	ip, [sp, #4]
   27820:	bl	42970 <flatcc_json_printer_table_field@@Base>
   27824:	ldr	r0, [pc, #152]	; 278c4 <main@@Base+0x113dc>
   27828:	add	r3, pc, r0
   2782c:	ldr	r0, [pc, #148]	; 278c8 <main@@Base+0x113e0>
   27830:	add	r0, pc, r0
   27834:	ldr	r1, [fp, #-4]
   27838:	ldr	r2, [fp, #-8]
   2783c:	str	r0, [fp, #-16]
   27840:	mov	r0, r1
   27844:	mov	r1, r2
   27848:	movw	r2, #1
   2784c:	movw	ip, #5
   27850:	str	ip, [sp]
   27854:	ldr	ip, [fp, #-16]
   27858:	str	ip, [sp, #4]
   2785c:	bl	42970 <flatcc_json_printer_table_field@@Base>
   27860:	ldr	r0, [pc, #80]	; 278b8 <main@@Base+0x113d0>
   27864:	add	r3, pc, r0
   27868:	ldr	r0, [pc, #76]	; 278bc <main@@Base+0x113d4>
   2786c:	add	r0, pc, r0
   27870:	ldr	r1, [pc, #72]	; 278c0 <main@@Base+0x113d8>
   27874:	add	r1, pc, r1
   27878:	ldr	r2, [fp, #-4]
   2787c:	ldr	ip, [fp, #-8]
   27880:	str	r0, [sp, #20]
   27884:	mov	r0, r2
   27888:	str	r1, [sp, #16]
   2788c:	mov	r1, ip
   27890:	movw	r2, #3
   27894:	movw	ip, #7
   27898:	str	ip, [sp]
   2789c:	ldr	ip, [sp, #20]
   278a0:	str	ip, [sp, #4]
   278a4:	ldr	lr, [sp, #16]
   278a8:	str	lr, [sp, #8]
   278ac:	bl	42508 <flatcc_json_printer_union_vector_field@@Base>
   278b0:	mov	sp, fp
   278b4:	pop	{fp, pc}
   278b8:	andeq	r1, r2, r0, asr r9
   278bc:			; <UNDEFINED> instruction: 0xfffff9e8
   278c0:			; <UNDEFINED> instruction: 0xfffffab8
   278c4:	andeq	r1, r2, r6, lsl #19
   278c8:	andeq	r0, r0, r0, lsl #3
   278cc:			; <UNDEFINED> instruction: 0x000219bf
   278d0:	ldrdeq	r0, [r0], -ip
   278d4:	push	{fp, lr}
   278d8:	mov	fp, sp
   278dc:	sub	sp, sp, #32
   278e0:	ldr	r2, [pc, #200]	; 279b0 <main@@Base+0x114c8>
   278e4:	add	r3, pc, r2
   278e8:	ldr	r2, [pc, #196]	; 279b4 <main@@Base+0x114cc>
   278ec:	add	r2, pc, r2
   278f0:	str	r0, [fp, #-4]
   278f4:	str	r1, [fp, #-8]
   278f8:	ldr	r0, [fp, #-4]
   278fc:	ldr	r1, [fp, #-8]
   27900:	movw	ip, #0
   27904:	str	r2, [fp, #-12]
   27908:	mov	r2, ip
   2790c:	movw	ip, #21
   27910:	str	ip, [sp]
   27914:	ldr	ip, [fp, #-12]
   27918:	str	ip, [sp, #4]
   2791c:	bl	42970 <flatcc_json_printer_table_field@@Base>
   27920:	ldr	r0, [pc, #128]	; 279a8 <main@@Base+0x114c0>
   27924:	add	r3, pc, r0
   27928:	ldr	r0, [pc, #124]	; 279ac <main@@Base+0x114c4>
   2792c:	add	r0, pc, r0
   27930:	ldr	r1, [fp, #-4]
   27934:	ldr	r2, [fp, #-8]
   27938:	str	r0, [sp, #16]
   2793c:	mov	r0, r1
   27940:	mov	r1, r2
   27944:	movw	r2, #1
   27948:	movw	ip, #22
   2794c:	str	ip, [sp]
   27950:	ldr	ip, [sp, #16]
   27954:	str	ip, [sp, #4]
   27958:	bl	42970 <flatcc_json_printer_table_field@@Base>
   2795c:	ldr	r0, [pc, #60]	; 279a0 <main@@Base+0x114b8>
   27960:	add	r3, pc, r0
   27964:	ldr	r0, [pc, #56]	; 279a4 <main@@Base+0x114bc>
   27968:	add	r0, pc, r0
   2796c:	ldr	r1, [fp, #-4]
   27970:	ldr	r2, [fp, #-8]
   27974:	str	r0, [sp, #12]
   27978:	mov	r0, r1
   2797c:	mov	r1, r2
   27980:	movw	r2, #2
   27984:	movw	ip, #22
   27988:	str	ip, [sp]
   2798c:	ldr	ip, [sp, #12]
   27990:	str	ip, [sp, #4]
   27994:	bl	42970 <flatcc_json_printer_table_field@@Base>
   27998:	mov	sp, fp
   2799c:	pop	{fp, pc}
   279a0:	andeq	r1, r2, r9, lsl #17
   279a4:			; <UNDEFINED> instruction: 0x000004b0
   279a8:	andeq	r1, r2, lr, lsr #17
   279ac:	andeq	r0, r0, r0, ror #8
   279b0:	ldrdeq	r1, [r2], -r8
   279b4:	andeq	r0, r0, r0, lsr #5
   279b8:	push	{fp, lr}
   279bc:	mov	fp, sp
   279c0:	sub	sp, sp, #56	; 0x38
   279c4:	ldr	r2, [pc, #444]	; 27b88 <main@@Base+0x116a0>
   279c8:	add	r3, pc, r2
   279cc:	ldr	r2, [pc, #440]	; 27b8c <main@@Base+0x116a4>
   279d0:	add	r2, pc, r2
   279d4:	ldr	ip, [pc, #436]	; 27b90 <main@@Base+0x116a8>
   279d8:	add	ip, pc, ip
   279dc:	str	r0, [fp, #-4]
   279e0:	str	r1, [fp, #-8]
   279e4:	ldr	r0, [fp, #-4]
   279e8:	ldr	r1, [fp, #-8]
   279ec:	movw	lr, #1
   279f0:	str	r2, [fp, #-12]
   279f4:	mov	r2, lr
   279f8:	movw	lr, #14
   279fc:	str	lr, [sp]
   27a00:	ldr	lr, [fp, #-12]
   27a04:	str	lr, [sp, #4]
   27a08:	str	ip, [sp, #8]
   27a0c:	bl	42a38 <flatcc_json_printer_union_field@@Base>
   27a10:	ldr	r0, [pc, #356]	; 27b7c <main@@Base+0x11694>
   27a14:	add	r3, pc, r0
   27a18:	ldr	r0, [pc, #352]	; 27b80 <main@@Base+0x11698>
   27a1c:	add	r0, pc, r0
   27a20:	ldr	r1, [pc, #348]	; 27b84 <main@@Base+0x1169c>
   27a24:	add	r1, pc, r1
   27a28:	ldr	r2, [fp, #-4]
   27a2c:	ldr	ip, [fp, #-8]
   27a30:	str	r0, [fp, #-16]
   27a34:	mov	r0, r2
   27a38:	str	r1, [fp, #-20]	; 0xffffffec
   27a3c:	mov	r1, ip
   27a40:	movw	r2, #3
   27a44:	movw	ip, #10
   27a48:	str	ip, [sp]
   27a4c:	ldr	ip, [fp, #-16]
   27a50:	str	ip, [sp, #4]
   27a54:	ldr	lr, [fp, #-20]	; 0xffffffec
   27a58:	str	lr, [sp, #8]
   27a5c:	bl	42a38 <flatcc_json_printer_union_field@@Base>
   27a60:	ldr	r0, [pc, #264]	; 27b70 <main@@Base+0x11688>
   27a64:	add	r3, pc, r0
   27a68:	ldr	r0, [pc, #260]	; 27b74 <main@@Base+0x1168c>
   27a6c:	add	r0, pc, r0
   27a70:	ldr	r1, [pc, #256]	; 27b78 <main@@Base+0x11690>
   27a74:	add	r1, pc, r1
   27a78:	ldr	r2, [fp, #-4]
   27a7c:	ldr	ip, [fp, #-8]
   27a80:	str	r0, [fp, #-24]	; 0xffffffe8
   27a84:	mov	r0, r2
   27a88:	str	r1, [sp, #28]
   27a8c:	mov	r1, ip
   27a90:	movw	r2, #5
   27a94:	movw	ip, #9
   27a98:	str	ip, [sp]
   27a9c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   27aa0:	str	ip, [sp, #4]
   27aa4:	ldr	lr, [sp, #28]
   27aa8:	str	lr, [sp, #8]
   27aac:	bl	42a38 <flatcc_json_printer_union_field@@Base>
   27ab0:	ldr	r0, [pc, #172]	; 27b64 <main@@Base+0x1167c>
   27ab4:	add	r3, pc, r0
   27ab8:	ldr	r0, [pc, #168]	; 27b68 <main@@Base+0x11680>
   27abc:	add	r0, pc, r0
   27ac0:	ldr	r1, [pc, #164]	; 27b6c <main@@Base+0x11684>
   27ac4:	add	r1, pc, r1
   27ac8:	ldr	r2, [fp, #-4]
   27acc:	ldr	ip, [fp, #-8]
   27ad0:	str	r0, [sp, #24]
   27ad4:	mov	r0, r2
   27ad8:	str	r1, [sp, #20]
   27adc:	mov	r1, ip
   27ae0:	movw	r2, #7
   27ae4:	movw	ip, #5
   27ae8:	str	ip, [sp]
   27aec:	ldr	ip, [sp, #24]
   27af0:	str	ip, [sp, #4]
   27af4:	ldr	lr, [sp, #20]
   27af8:	str	lr, [sp, #8]
   27afc:	bl	42a38 <flatcc_json_printer_union_field@@Base>
   27b00:	ldr	r0, [pc, #80]	; 27b58 <main@@Base+0x11670>
   27b04:	add	r3, pc, r0
   27b08:	ldr	r0, [pc, #76]	; 27b5c <main@@Base+0x11674>
   27b0c:	add	r0, pc, r0
   27b10:	ldr	r1, [pc, #72]	; 27b60 <main@@Base+0x11678>
   27b14:	add	r1, pc, r1
   27b18:	ldr	r2, [fp, #-4]
   27b1c:	ldr	ip, [fp, #-8]
   27b20:	str	r0, [sp, #16]
   27b24:	mov	r0, r2
   27b28:	str	r1, [sp, #12]
   27b2c:	mov	r1, ip
   27b30:	movw	r2, #9
   27b34:	movw	ip, #10
   27b38:	str	ip, [sp]
   27b3c:	ldr	ip, [sp, #16]
   27b40:	str	ip, [sp, #4]
   27b44:	ldr	lr, [sp, #12]
   27b48:	str	lr, [sp, #8]
   27b4c:	bl	42508 <flatcc_json_printer_union_vector_field@@Base>
   27b50:	mov	sp, fp
   27b54:	pop	{fp, pc}
   27b58:	andeq	r1, r2, r5, lsr #15
   27b5c:	muleq	r0, r8, r3
   27b60:	ldrdeq	r0, [r0], -r4
   27b64:	andeq	r1, r2, pc, ror #15
   27b68:	andeq	r0, r0, r8, ror #7
   27b6c:	andeq	r0, r0, r4, lsr #10
   27b70:	andeq	r1, r2, r5, lsr r8
   27b74:	andeq	r0, r0, r8, lsr r4
   27b78:	andeq	r0, r0, r4, ror r5
   27b7c:	andeq	r1, r2, sl, ror r8
   27b80:	andeq	r0, r0, r8, lsl #9
   27b84:	andeq	r0, r0, r4, asr #11
   27b88:			; <UNDEFINED> instruction: 0x000218b7
   27b8c:	ldrdeq	r0, [r0], -r4
   27b90:	andeq	r0, r0, r0, lsl r6
   27b94:	push	{fp, lr}
   27b98:	mov	fp, sp
   27b9c:	sub	sp, sp, #40	; 0x28
   27ba0:	ldr	r2, [pc, #476]	; 27d84 <main@@Base+0x1189c>
   27ba4:	add	r3, pc, r2
   27ba8:	str	r0, [fp, #-4]
   27bac:	str	r1, [fp, #-8]
   27bb0:	ldr	r0, [fp, #-4]
   27bb4:	ldr	r1, [fp, #-8]
   27bb8:	movw	r2, #0
   27bbc:	movw	ip, #4
   27bc0:	str	ip, [sp]
   27bc4:	bl	3b410 <flatcc_json_printer_string_field@@Base>
   27bc8:	ldr	r0, [pc, #432]	; 27d80 <main@@Base+0x11898>
   27bcc:	add	r3, pc, r0
   27bd0:	ldr	r0, [fp, #-4]
   27bd4:	ldr	r1, [fp, #-8]
   27bd8:	movw	r2, #1
   27bdc:	movw	ip, #9
   27be0:	str	ip, [sp]
   27be4:	movw	ip, #0
   27be8:	str	ip, [sp, #4]
   27bec:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   27bf0:	ldr	r0, [pc, #388]	; 27d7c <main@@Base+0x11894>
   27bf4:	add	r3, pc, r0
   27bf8:	ldr	r0, [fp, #-4]
   27bfc:	ldr	r1, [fp, #-8]
   27c00:	movw	r2, #2
   27c04:	movw	ip, #4
   27c08:	str	ip, [sp]
   27c0c:	bl	3b410 <flatcc_json_printer_string_field@@Base>
   27c10:	ldr	r0, [pc, #352]	; 27d78 <main@@Base+0x11890>
   27c14:	add	r0, pc, r0
   27c18:	ldr	r1, [fp, #-4]
   27c1c:	ldr	r2, [fp, #-8]
   27c20:	mov	r3, sp
   27c24:	mov	ip, #0
   27c28:	str	ip, [r3, #12]
   27c2c:	str	ip, [r3, #8]
   27c30:	mov	ip, #8
   27c34:	str	ip, [r3]
   27c38:	ldr	r3, [pc, #328]	; 27d88 <main@@Base+0x118a0>
   27c3c:	add	r3, pc, r3
   27c40:	mov	ip, #3
   27c44:	str	r0, [fp, #-12]
   27c48:	mov	r0, r1
   27c4c:	mov	r1, r2
   27c50:	mov	r2, ip
   27c54:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27c58:	ldr	r0, [pc, #276]	; 27d74 <main@@Base+0x1188c>
   27c5c:	add	r3, pc, r0
   27c60:	ldr	r0, [fp, #-4]
   27c64:	ldr	r1, [fp, #-8]
   27c68:	movw	r2, #4
   27c6c:	str	r2, [fp, #-16]
   27c70:	ldr	ip, [fp, #-16]
   27c74:	str	ip, [sp]
   27c78:	bl	3b410 <flatcc_json_printer_string_field@@Base>
   27c7c:	ldr	r0, [pc, #236]	; 27d70 <main@@Base+0x11888>
   27c80:	add	r0, pc, r0
   27c84:	ldr	r1, [fp, #-4]
   27c88:	ldr	r2, [fp, #-8]
   27c8c:	mov	r3, sp
   27c90:	mov	ip, #0
   27c94:	str	ip, [r3, #12]
   27c98:	str	ip, [r3, #8]
   27c9c:	mov	ip, #8
   27ca0:	str	ip, [r3]
   27ca4:	ldr	r3, [pc, #224]	; 27d8c <main@@Base+0x118a4>
   27ca8:	add	r3, pc, r3
   27cac:	mov	ip, #5
   27cb0:	str	r0, [sp, #20]
   27cb4:	mov	r0, r1
   27cb8:	mov	r1, r2
   27cbc:	mov	r2, ip
   27cc0:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27cc4:	ldr	r0, [pc, #160]	; 27d6c <main@@Base+0x11884>
   27cc8:	add	r3, pc, r0
   27ccc:	ldr	r0, [fp, #-4]
   27cd0:	ldr	r1, [fp, #-8]
   27cd4:	movw	r2, #6
   27cd8:	movw	ip, #9
   27cdc:	str	ip, [sp]
   27ce0:	movw	ip, #0
   27ce4:	str	ip, [sp, #4]
   27ce8:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   27cec:	ldr	r0, [pc, #116]	; 27d68 <main@@Base+0x11880>
   27cf0:	add	r0, pc, r0
   27cf4:	ldr	r1, [fp, #-4]
   27cf8:	ldr	r2, [fp, #-8]
   27cfc:	mov	r3, sp
   27d00:	mov	ip, #0
   27d04:	str	ip, [r3, #12]
   27d08:	str	ip, [r3, #8]
   27d0c:	mov	ip, #8
   27d10:	str	ip, [r3]
   27d14:	ldr	r3, [pc, #116]	; 27d90 <main@@Base+0x118a8>
   27d18:	add	r3, pc, r3
   27d1c:	mov	ip, #7
   27d20:	str	r0, [sp, #16]
   27d24:	mov	r0, r1
   27d28:	mov	r1, r2
   27d2c:	mov	r2, ip
   27d30:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27d34:	ldr	r0, [pc, #40]	; 27d64 <main@@Base+0x1187c>
   27d38:	add	r3, pc, r0
   27d3c:	ldr	r0, [fp, #-4]
   27d40:	ldr	r1, [fp, #-8]
   27d44:	movw	r2, #8
   27d48:	movw	ip, #9
   27d4c:	str	ip, [sp]
   27d50:	movw	ip, #0
   27d54:	str	ip, [sp, #4]
   27d58:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   27d5c:	mov	sp, fp
   27d60:	pop	{fp, pc}
   27d64:	andeq	r1, r2, r6, lsl #10
   27d68:	andeq	r1, r2, r5, asr #10
   27d6c:	andeq	r1, r2, r3, ror #10
   27d70:	andeq	r1, r2, r2, lsr #11
   27d74:	andeq	r1, r2, r1, asr #11
   27d78:	andeq	r1, r2, r0, lsl #12
   27d7c:	andeq	r1, r2, fp, lsl r6
   27d80:	andeq	r1, r2, r9, lsr r6
   27d84:	andeq	r1, r2, ip, asr r6
   27d88:	ldrdeq	r1, [r2], -r8
   27d8c:	andeq	r1, r2, sl, ror r5
   27d90:	andeq	r1, r2, sp, lsl r5
   27d94:	push	{fp, lr}
   27d98:	mov	fp, sp
   27d9c:	sub	sp, sp, #32
   27da0:	ldr	r2, [pc, #112]	; 27e18 <main@@Base+0x11930>
   27da4:	add	r2, pc, r2
   27da8:	str	r0, [fp, #-4]
   27dac:	str	r1, [fp, #-8]
   27db0:	ldr	r0, [fp, #-4]
   27db4:	ldr	r1, [fp, #-8]
   27db8:	mov	r3, sp
   27dbc:	mov	ip, #0
   27dc0:	str	ip, [r3, #12]
   27dc4:	str	ip, [r3, #8]
   27dc8:	mov	lr, #15
   27dcc:	str	lr, [r3]
   27dd0:	ldr	r3, [pc, #68]	; 27e1c <main@@Base+0x11934>
   27dd4:	add	r3, pc, r3
   27dd8:	str	r2, [fp, #-12]
   27ddc:	mov	r2, ip
   27de0:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27de4:	ldr	r0, [pc, #40]	; 27e14 <main@@Base+0x1192c>
   27de8:	add	r3, pc, r0
   27dec:	ldr	r0, [fp, #-4]
   27df0:	ldr	r1, [fp, #-8]
   27df4:	movw	r2, #1
   27df8:	movw	ip, #16
   27dfc:	str	ip, [sp]
   27e00:	movw	ip, #0
   27e04:	str	ip, [sp, #4]
   27e08:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   27e0c:	mov	sp, fp
   27e10:	pop	{fp, pc}
   27e14:	andeq	r1, r2, r0, ror r4
   27e18:	andeq	r1, r2, r4, lsr #9
   27e1c:	andeq	r1, r2, r4, ror r4
   27e20:	push	{fp, lr}
   27e24:	mov	fp, sp
   27e28:	sub	sp, sp, #32
   27e2c:	ldr	r2, [pc, #112]	; 27ea4 <main@@Base+0x119bc>
   27e30:	add	r2, pc, r2
   27e34:	str	r0, [fp, #-4]
   27e38:	str	r1, [fp, #-8]
   27e3c:	ldr	r0, [fp, #-4]
   27e40:	ldr	r1, [fp, #-8]
   27e44:	mov	r3, sp
   27e48:	mov	ip, #0
   27e4c:	str	ip, [r3, #12]
   27e50:	str	ip, [r3, #8]
   27e54:	mov	lr, #15
   27e58:	str	lr, [r3]
   27e5c:	ldr	r3, [pc, #68]	; 27ea8 <main@@Base+0x119c0>
   27e60:	add	r3, pc, r3
   27e64:	str	r2, [fp, #-12]
   27e68:	mov	r2, ip
   27e6c:	bl	3c23c <flatcc_json_printer_int64_field@@Base>
   27e70:	ldr	r0, [pc, #40]	; 27ea0 <main@@Base+0x119b8>
   27e74:	add	r3, pc, r0
   27e78:	ldr	r0, [fp, #-4]
   27e7c:	ldr	r1, [fp, #-8]
   27e80:	movw	r2, #1
   27e84:	movw	ip, #21
   27e88:	str	ip, [sp]
   27e8c:	movw	ip, #0
   27e90:	str	ip, [sp, #4]
   27e94:	bl	3bc24 <flatcc_json_printer_uint32_field@@Base>
   27e98:	mov	sp, fp
   27e9c:	pop	{fp, pc}
   27ea0:	strdeq	r1, [r2], -r5
   27ea4:	andeq	r1, r2, r8, lsl r4
   27ea8:	andeq	r1, r2, r8, ror #7
   27eac:	push	{fp, lr}
   27eb0:	mov	fp, sp
   27eb4:	sub	sp, sp, #16
   27eb8:	str	r0, [fp, #-4]
   27ebc:	strb	r1, [fp, #-5]
   27ec0:	ldrb	r0, [fp, #-5]
   27ec4:	mov	r1, r0
   27ec8:	cmp	r0, #2
   27ecc:	str	r1, [sp, #4]
   27ed0:	beq	27f28 <main@@Base+0x11a40>
   27ed4:	b	27ed8 <main@@Base+0x119f0>
   27ed8:	ldr	r0, [sp, #4]
   27edc:	cmp	r0, #8
   27ee0:	beq	27f40 <main@@Base+0x11a58>
   27ee4:	b	27ee8 <main@@Base+0x11a00>
   27ee8:	ldr	r0, [sp, #4]
   27eec:	cmp	r0, #9
   27ef0:	beq	27f58 <main@@Base+0x11a70>
   27ef4:	b	27ef8 <main@@Base+0x11a10>
   27ef8:	ldr	r0, [sp, #4]
   27efc:	cmp	r0, #10
   27f00:	beq	27f70 <main@@Base+0x11a88>
   27f04:	b	27f08 <main@@Base+0x11a20>
   27f08:	ldr	r0, [sp, #4]
   27f0c:	cmp	r0, #11
   27f10:	beq	27f88 <main@@Base+0x11aa0>
   27f14:	b	27f18 <main@@Base+0x11a30>
   27f18:	ldr	r0, [sp, #4]
   27f1c:	cmp	r0, #255	; 0xff
   27f20:	beq	27fa0 <main@@Base+0x11ab8>
   27f24:	b	27fb8 <main@@Base+0x11ad0>
   27f28:	ldr	r0, [pc, #184]	; 27fe8 <main@@Base+0x11b00>
   27f2c:	add	r1, pc, r0
   27f30:	ldr	r0, [fp, #-4]
   27f34:	movw	r2, #5
   27f38:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27f3c:	b	27fcc <main@@Base+0x11ae4>
   27f40:	ldr	r0, [pc, #156]	; 27fe4 <main@@Base+0x11afc>
   27f44:	add	r1, pc, r0
   27f48:	ldr	r0, [fp, #-4]
   27f4c:	movw	r2, #8
   27f50:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27f54:	b	27fcc <main@@Base+0x11ae4>
   27f58:	ldr	r0, [pc, #128]	; 27fe0 <main@@Base+0x11af8>
   27f5c:	add	r1, pc, r0
   27f60:	ldr	r0, [fp, #-4]
   27f64:	movw	r2, #5
   27f68:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27f6c:	b	27fcc <main@@Base+0x11ae4>
   27f70:	ldr	r0, [pc, #100]	; 27fdc <main@@Base+0x11af4>
   27f74:	add	r1, pc, r0
   27f78:	ldr	r0, [fp, #-4]
   27f7c:	movw	r2, #7
   27f80:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27f84:	b	27fcc <main@@Base+0x11ae4>
   27f88:	ldr	r0, [pc, #72]	; 27fd8 <main@@Base+0x11af0>
   27f8c:	add	r1, pc, r0
   27f90:	ldr	r0, [fp, #-4]
   27f94:	movw	r2, #5
   27f98:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27f9c:	b	27fcc <main@@Base+0x11ae4>
   27fa0:	ldr	r0, [pc, #44]	; 27fd4 <main@@Base+0x11aec>
   27fa4:	add	r1, pc, r0
   27fa8:	ldr	r0, [fp, #-4]
   27fac:	movw	r2, #6
   27fb0:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27fb4:	b	27fcc <main@@Base+0x11ae4>
   27fb8:	ldr	r0, [pc, #44]	; 27fec <main@@Base+0x11b04>
   27fbc:	add	r1, pc, r0
   27fc0:	ldr	r0, [fp, #-4]
   27fc4:	movw	r2, #4
   27fc8:	bl	3b20c <flatcc_json_printer_enum@@Base>
   27fcc:	mov	sp, fp
   27fd0:	pop	{fp, pc}
   27fd4:	andeq	r1, r2, r3, lsr r3
   27fd8:	andeq	r1, r2, r5, asr #6
   27fdc:	andeq	r1, r2, r5, asr r3
   27fe0:	andeq	r1, r2, r7, ror #6
   27fe4:	andeq	r1, r2, r6, ror r3
   27fe8:	andeq	r1, r2, r8, lsl #7
   27fec:	andeq	r2, r2, sp, ror sl
   27ff0:	push	{fp, lr}
   27ff4:	mov	fp, sp
   27ff8:	sub	sp, sp, #16
   27ffc:	str	r0, [fp, #-4]
   28000:	str	r1, [sp, #8]
   28004:	ldr	r0, [sp, #8]
   28008:	ldrb	r0, [r0, #8]
   2800c:	mov	r1, r0
   28010:	cmp	r0, #2
   28014:	str	r1, [sp, #4]
   28018:	beq	28070 <main@@Base+0x11b88>
   2801c:	b	28020 <main@@Base+0x11b38>
   28020:	ldr	r0, [sp, #4]
   28024:	cmp	r0, #8
   28028:	beq	28088 <main@@Base+0x11ba0>
   2802c:	b	28030 <main@@Base+0x11b48>
   28030:	ldr	r0, [sp, #4]
   28034:	cmp	r0, #9
   28038:	beq	280a0 <main@@Base+0x11bb8>
   2803c:	b	28040 <main@@Base+0x11b58>
   28040:	ldr	r0, [sp, #4]
   28044:	cmp	r0, #10
   28048:	beq	280b8 <main@@Base+0x11bd0>
   2804c:	b	28050 <main@@Base+0x11b68>
   28050:	ldr	r0, [sp, #4]
   28054:	cmp	r0, #11
   28058:	beq	280d0 <main@@Base+0x11be8>
   2805c:	b	28060 <main@@Base+0x11b78>
   28060:	ldr	r0, [sp, #4]
   28064:	cmp	r0, #255	; 0xff
   28068:	beq	280e0 <main@@Base+0x11bf8>
   2806c:	b	280f0 <main@@Base+0x11c08>
   28070:	ldr	r0, [pc, #144]	; 28108 <main@@Base+0x11c20>
   28074:	add	r2, pc, r0
   28078:	ldr	r0, [fp, #-4]
   2807c:	ldr	r1, [sp, #8]
   28080:	bl	42d4c <flatcc_json_printer_union_table@@Base>
   28084:	b	280f4 <main@@Base+0x11c0c>
   28088:	ldr	r0, [pc, #116]	; 28104 <main@@Base+0x11c1c>
   2808c:	add	r2, pc, r0
   28090:	ldr	r0, [fp, #-4]
   28094:	ldr	r1, [sp, #8]
   28098:	bl	42da4 <flatcc_json_printer_union_struct@@Base>
   2809c:	b	280f4 <main@@Base+0x11c0c>
   280a0:	ldr	r0, [pc, #88]	; 28100 <main@@Base+0x11c18>
   280a4:	add	r2, pc, r0
   280a8:	ldr	r0, [fp, #-4]
   280ac:	ldr	r1, [sp, #8]
   280b0:	bl	42da4 <flatcc_json_printer_union_struct@@Base>
   280b4:	b	280f4 <main@@Base+0x11c0c>
   280b8:	ldr	r0, [pc, #60]	; 280fc <main@@Base+0x11c14>
   280bc:	add	r2, pc, r0
   280c0:	ldr	r0, [fp, #-4]
   280c4:	ldr	r1, [sp, #8]
   280c8:	bl	42da4 <flatcc_json_printer_union_struct@@Base>
   280cc:	b	280f4 <main@@Base+0x11c0c>
   280d0:	ldr	r0, [fp, #-4]
   280d4:	ldr	r1, [sp, #8]
   280d8:	bl	42e80 <flatcc_json_printer_union_string@@Base>
   280dc:	b	280f4 <main@@Base+0x11c0c>
   280e0:	ldr	r0, [fp, #-4]
   280e4:	ldr	r1, [sp, #8]
   280e8:	bl	42e80 <flatcc_json_printer_union_string@@Base>
   280ec:	b	280f4 <main@@Base+0x11c0c>
   280f0:	b	280f4 <main@@Base+0x11c0c>
   280f4:	mov	sp, fp
   280f8:	pop	{fp, pc}
   280fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28100:	andeq	r0, r0, r8, lsl #2
   28104:	andeq	r0, r0, r4, asr #1
   28108:	muleq	r0, r0, r0
   2810c:	push	{fp, lr}
   28110:	mov	fp, sp
   28114:	sub	sp, sp, #24
   28118:	ldr	r2, [pc, #52]	; 28154 <main@@Base+0x11c6c>
   2811c:	add	r3, pc, r2
   28120:	str	r0, [fp, #-4]
   28124:	str	r1, [fp, #-8]
   28128:	ldr	r0, [fp, #-4]
   2812c:	ldr	r1, [fp, #-8]
   28130:	movw	r2, #0
   28134:	str	r2, [sp, #12]
   28138:	movw	ip, #19
   2813c:	str	ip, [sp]
   28140:	ldr	ip, [sp, #12]
   28144:	str	ip, [sp, #4]
   28148:	bl	3c114 <flatcc_json_printer_int32_field@@Base>
   2814c:	mov	sp, fp
   28150:	pop	{fp, pc}
   28154:	andeq	r1, r2, r2, asr #3
   28158:	push	{r4, sl, fp, lr}
   2815c:	add	fp, sp, #8
   28160:	sub	sp, sp, #24
   28164:	ldr	r2, [pc, #68]	; 281b0 <main@@Base+0x11cc8>
   28168:	add	r2, pc, r2
   2816c:	str	r0, [fp, #-12]
   28170:	str	r1, [sp, #16]
   28174:	ldr	r0, [fp, #-12]
   28178:	ldr	r1, [sp, #16]
   2817c:	movw	r3, #0
   28180:	str	r1, [sp, #12]
   28184:	mov	r1, r3
   28188:	ldr	ip, [sp, #12]
   2818c:	str	r2, [sp, #8]
   28190:	mov	r2, ip
   28194:	ldr	lr, [sp, #8]
   28198:	str	lr, [sp]
   2819c:	movw	r4, #11
   281a0:	str	r4, [sp, #4]
   281a4:	bl	3d410 <flatcc_json_printer_uint16_struct_field@@Base>
   281a8:	sub	sp, fp, #8
   281ac:	pop	{r4, sl, fp, pc}
   281b0:	andeq	r1, r2, sl, lsl #3
   281b4:	push	{r4, sl, fp, lr}
   281b8:	add	fp, sp, #8
   281bc:	sub	sp, sp, #24
   281c0:	ldr	r2, [pc, #68]	; 2820c <main@@Base+0x11d24>
   281c4:	add	r2, pc, r2
   281c8:	str	r0, [fp, #-12]
   281cc:	str	r1, [sp, #16]
   281d0:	ldr	r0, [fp, #-12]
   281d4:	ldr	r1, [sp, #16]
   281d8:	movw	r3, #0
   281dc:	str	r1, [sp, #12]
   281e0:	mov	r1, r3
   281e4:	ldr	ip, [sp, #12]
   281e8:	str	r2, [sp, #8]
   281ec:	mov	r2, ip
   281f0:	ldr	lr, [sp, #8]
   281f4:	str	lr, [sp]
   281f8:	movw	r4, #10
   281fc:	str	r4, [sp, #4]
   28200:	bl	3d730 <flatcc_json_printer_int32_struct_field@@Base>
   28204:	sub	sp, fp, #8
   28208:	pop	{r4, sl, fp, pc}
   2820c:	andeq	r1, r2, sl, lsr r1
   28210:	push	{fp, lr}
   28214:	mov	fp, sp
   28218:	sub	sp, sp, #16
   2821c:	str	r0, [sp, #8]
   28220:	ldr	r0, [sp, #8]
   28224:	ldrb	r0, [r0, #12]
   28228:	sub	r0, r0, #1
   2822c:	cmp	r0, #3
   28230:	str	r0, [sp, #4]
   28234:	bhi	282b8 <main@@Base+0x11dd0>
   28238:	add	r0, pc, #8
   2823c:	ldr	r1, [sp, #4]
   28240:	ldr	r2, [r0, r1, lsl #2]
   28244:	add	pc, r0, r2
   28248:	andeq	r0, r0, r0, lsl r0
   2824c:	andeq	r0, r0, r8, lsr #32
   28250:	andeq	r0, r0, r0, asr #32
   28254:	andeq	r0, r0, r8, asr r0
   28258:	ldr	r0, [pc, #120]	; 282d8 <main@@Base+0x11df0>
   2825c:	add	r1, pc, r0
   28260:	ldr	r0, [sp, #8]
   28264:	bl	30c90 <flatcc_verify_union_table@@Base>
   28268:	str	r0, [fp, #-4]
   2826c:	b	282c0 <main@@Base+0x11dd8>
   28270:	ldr	r0, [pc, #92]	; 282d4 <main@@Base+0x11dec>
   28274:	add	r1, pc, r0
   28278:	ldr	r0, [sp, #8]
   2827c:	bl	30c90 <flatcc_verify_union_table@@Base>
   28280:	str	r0, [fp, #-4]
   28284:	b	282c0 <main@@Base+0x11dd8>
   28288:	ldr	r0, [pc, #64]	; 282d0 <main@@Base+0x11de8>
   2828c:	add	r1, pc, r0
   28290:	ldr	r0, [sp, #8]
   28294:	bl	30c90 <flatcc_verify_union_table@@Base>
   28298:	str	r0, [fp, #-4]
   2829c:	b	282c0 <main@@Base+0x11dd8>
   282a0:	ldr	r0, [pc, #36]	; 282cc <main@@Base+0x11de4>
   282a4:	add	r1, pc, r0
   282a8:	ldr	r0, [sp, #8]
   282ac:	bl	30c90 <flatcc_verify_union_table@@Base>
   282b0:	str	r0, [fp, #-4]
   282b4:	b	282c0 <main@@Base+0x11dd8>
   282b8:	movw	r0, #0
   282bc:	str	r0, [fp, #-4]
   282c0:	ldr	r0, [fp, #-4]
   282c4:	mov	sp, fp
   282c8:	pop	{fp, pc}
   282cc:	andeq	r0, r0, r4, lsr #6
   282d0:	andeq	r0, r0, r8, lsr #6
   282d4:	andeq	r0, r0, r4, asr #4
   282d8:			; <UNDEFINED> instruction: 0xffff3094
   282dc:	push	{fp, lr}
   282e0:	mov	fp, sp
   282e4:	sub	sp, sp, #16
   282e8:	str	r0, [sp, #8]
   282ec:	ldr	r0, [sp, #8]
   282f0:	movw	r1, #0
   282f4:	uxth	r1, r1
   282f8:	movw	r2, #0
   282fc:	bl	2fd5c <flatcc_verify_string_field@@Base>
   28300:	str	r0, [sp, #4]
   28304:	cmp	r0, #0
   28308:	beq	28318 <main@@Base+0x11e30>
   2830c:	ldr	r0, [sp, #4]
   28310:	str	r0, [fp, #-4]
   28314:	b	28390 <main@@Base+0x11ea8>
   28318:	ldr	r0, [sp, #8]
   2831c:	movw	r1, #1
   28320:	uxth	r1, r1
   28324:	movw	r2, #8
   28328:	movw	r3, #8
   2832c:	uxth	r3, r3
   28330:	bl	2fb50 <flatcc_verify_field@@Base>
   28334:	str	r0, [sp, #4]
   28338:	cmp	r0, #0
   2833c:	beq	2834c <main@@Base+0x11e64>
   28340:	ldr	r0, [sp, #4]
   28344:	str	r0, [fp, #-4]
   28348:	b	28390 <main@@Base+0x11ea8>
   2834c:	ldr	r0, [sp, #8]
   28350:	movw	r1, #2
   28354:	uxth	r2, r1
   28358:	str	r1, [sp]
   2835c:	mov	r1, r2
   28360:	movw	r2, #2
   28364:	ldr	r3, [sp]
   28368:	uxth	r3, r3
   2836c:	bl	2fb50 <flatcc_verify_field@@Base>
   28370:	str	r0, [sp, #4]
   28374:	cmp	r0, #0
   28378:	beq	28388 <main@@Base+0x11ea0>
   2837c:	ldr	r0, [sp, #4]
   28380:	str	r0, [fp, #-4]
   28384:	b	28390 <main@@Base+0x11ea8>
   28388:	movw	r0, #0
   2838c:	str	r0, [fp, #-4]
   28390:	ldr	r0, [fp, #-4]
   28394:	mov	sp, fp
   28398:	pop	{fp, pc}
   2839c:	sub	sp, sp, #4
   283a0:	str	r0, [sp]
   283a4:	movw	r0, #0
   283a8:	add	sp, sp, #4
   283ac:	bx	lr
   283b0:	push	{fp, lr}
   283b4:	mov	fp, sp
   283b8:	sub	sp, sp, #32
   283bc:	str	r0, [fp, #-8]
   283c0:	ldr	r0, [fp, #-8]
   283c4:	movw	r1, #0
   283c8:	uxth	r1, r1
   283cc:	movw	r2, #0
   283d0:	movw	r3, #1
   283d4:	movw	ip, #1
   283d8:	uxth	ip, ip
   283dc:	str	ip, [sp]
   283e0:	mvn	ip, #0
   283e4:	str	ip, [sp, #4]
   283e8:	bl	300b8 <flatcc_verify_vector_field@@Base>
   283ec:	str	r0, [fp, #-12]
   283f0:	cmp	r0, #0
   283f4:	beq	28404 <main@@Base+0x11f1c>
   283f8:	ldr	r0, [fp, #-12]
   283fc:	str	r0, [fp, #-4]
   28400:	b	284b0 <main@@Base+0x11fc8>
   28404:	ldr	r0, [fp, #-8]
   28408:	movw	r1, #1
   2840c:	uxth	r2, r1
   28410:	str	r1, [sp, #16]
   28414:	mov	r1, r2
   28418:	movw	r2, #0
   2841c:	movw	r3, #1
   28420:	ldr	ip, [sp, #16]
   28424:	uxth	lr, ip
   28428:	str	lr, [sp]
   2842c:	mvn	lr, #0
   28430:	str	lr, [sp, #4]
   28434:	bl	300b8 <flatcc_verify_vector_field@@Base>
   28438:	str	r0, [fp, #-12]
   2843c:	cmp	r0, #0
   28440:	beq	28450 <main@@Base+0x11f68>
   28444:	ldr	r0, [fp, #-12]
   28448:	str	r0, [fp, #-4]
   2844c:	b	284b0 <main@@Base+0x11fc8>
   28450:	ldr	r0, [pc, #100]	; 284bc <main@@Base+0x11fd4>
   28454:	add	r0, pc, r0
   28458:	ldr	r1, [fp, #-8]
   2845c:	str	r0, [sp, #12]
   28460:	mov	r0, r1
   28464:	movw	r1, #2
   28468:	uxth	r1, r1
   2846c:	movw	r2, #0
   28470:	str	r2, [sp, #8]
   28474:	ldr	r3, [sp, #8]
   28478:	movw	ip, #1
   2847c:	uxth	ip, ip
   28480:	str	ip, [sp]
   28484:	ldr	ip, [sp, #12]
   28488:	str	ip, [sp, #4]
   2848c:	bl	31610 <flatcc_verify_table_as_nested_root@@Base>
   28490:	str	r0, [fp, #-12]
   28494:	cmp	r0, #0
   28498:	beq	284a8 <main@@Base+0x11fc0>
   2849c:	ldr	r0, [fp, #-12]
   284a0:	str	r0, [fp, #-4]
   284a4:	b	284b0 <main@@Base+0x11fc8>
   284a8:	movw	r0, #0
   284ac:	str	r0, [fp, #-4]
   284b0:	ldr	r0, [fp, #-4]
   284b4:	mov	sp, fp
   284b8:	pop	{fp, pc}
   284bc:			; <UNDEFINED> instruction: 0xffff2e9c
   284c0:	push	{fp, lr}
   284c4:	mov	fp, sp
   284c8:	sub	sp, sp, #16
   284cc:	str	r0, [sp, #8]
   284d0:	ldr	r0, [sp, #8]
   284d4:	movw	r1, #0
   284d8:	uxth	r1, r1
   284dc:	movw	r2, #1
   284e0:	movw	r3, #1
   284e4:	uxth	r3, r3
   284e8:	bl	2fb50 <flatcc_verify_field@@Base>
   284ec:	str	r0, [sp, #4]
   284f0:	cmp	r0, #0
   284f4:	beq	28504 <main@@Base+0x1201c>
   284f8:	ldr	r0, [sp, #4]
   284fc:	str	r0, [fp, #-4]
   28500:	b	285b0 <main@@Base+0x120c8>
   28504:	ldr	r0, [sp, #8]
   28508:	movw	r1, #1
   2850c:	uxth	r2, r1
   28510:	str	r1, [sp]
   28514:	mov	r1, r2
   28518:	movw	r2, #1
   2851c:	ldr	r3, [sp]
   28520:	uxth	r3, r3
   28524:	bl	2fb50 <flatcc_verify_field@@Base>
   28528:	str	r0, [sp, #4]
   2852c:	cmp	r0, #0
   28530:	beq	28540 <main@@Base+0x12058>
   28534:	ldr	r0, [sp, #4]
   28538:	str	r0, [fp, #-4]
   2853c:	b	285b0 <main@@Base+0x120c8>
   28540:	ldr	r0, [sp, #8]
   28544:	movw	r1, #2
   28548:	uxth	r1, r1
   2854c:	movw	r2, #1
   28550:	movw	r3, #1
   28554:	uxth	r3, r3
   28558:	bl	2fb50 <flatcc_verify_field@@Base>
   2855c:	str	r0, [sp, #4]
   28560:	cmp	r0, #0
   28564:	beq	28574 <main@@Base+0x1208c>
   28568:	ldr	r0, [sp, #4]
   2856c:	str	r0, [fp, #-4]
   28570:	b	285b0 <main@@Base+0x120c8>
   28574:	ldr	r0, [sp, #8]
   28578:	movw	r1, #3
   2857c:	uxth	r1, r1
   28580:	movw	r2, #1
   28584:	movw	r3, #1
   28588:	uxth	r3, r3
   2858c:	bl	2fb50 <flatcc_verify_field@@Base>
   28590:	str	r0, [sp, #4]
   28594:	cmp	r0, #0
   28598:	beq	285a8 <main@@Base+0x120c0>
   2859c:	ldr	r0, [sp, #4]
   285a0:	str	r0, [fp, #-4]
   285a4:	b	285b0 <main@@Base+0x120c8>
   285a8:	movw	r0, #0
   285ac:	str	r0, [fp, #-4]
   285b0:	ldr	r0, [fp, #-4]
   285b4:	mov	sp, fp
   285b8:	pop	{fp, pc}
   285bc:	sub	sp, sp, #4
   285c0:	str	r0, [sp]
   285c4:	movw	r0, #0
   285c8:	add	sp, sp, #4
   285cc:	bx	lr
   285d0:	push	{fp, lr}
   285d4:	mov	fp, sp
   285d8:	sub	sp, sp, #16
   285dc:	ldr	r1, [pc, #172]	; 28690 <main@@Base+0x121a8>
   285e0:	add	r3, pc, r1
   285e4:	str	r0, [sp, #8]
   285e8:	ldr	r0, [sp, #8]
   285ec:	movw	r1, #0
   285f0:	uxth	r1, r1
   285f4:	movw	r2, #0
   285f8:	bl	3056c <flatcc_verify_table_field@@Base>
   285fc:	str	r0, [sp, #4]
   28600:	cmp	r0, #0
   28604:	beq	28614 <main@@Base+0x1212c>
   28608:	ldr	r0, [sp, #4]
   2860c:	str	r0, [fp, #-4]
   28610:	b	28684 <main@@Base+0x1219c>
   28614:	ldr	r0, [pc, #120]	; 28694 <main@@Base+0x121ac>
   28618:	add	r3, pc, r0
   2861c:	ldr	r0, [sp, #8]
   28620:	movw	r1, #1
   28624:	uxth	r1, r1
   28628:	movw	r2, #0
   2862c:	bl	3056c <flatcc_verify_table_field@@Base>
   28630:	str	r0, [sp, #4]
   28634:	cmp	r0, #0
   28638:	beq	28648 <main@@Base+0x12160>
   2863c:	ldr	r0, [sp, #4]
   28640:	str	r0, [fp, #-4]
   28644:	b	28684 <main@@Base+0x1219c>
   28648:	ldr	r0, [pc, #72]	; 28698 <main@@Base+0x121b0>
   2864c:	add	r3, pc, r0
   28650:	ldr	r0, [sp, #8]
   28654:	movw	r1, #3
   28658:	uxth	r1, r1
   2865c:	movw	r2, #0
   28660:	bl	31ab0 <flatcc_verify_union_vector_field@@Base>
   28664:	str	r0, [sp, #4]
   28668:	cmp	r0, #0
   2866c:	beq	2867c <main@@Base+0x12194>
   28670:	ldr	r0, [sp, #4]
   28674:	str	r0, [fp, #-4]
   28678:	b	28684 <main@@Base+0x1219c>
   2867c:	movw	r0, #0
   28680:	str	r0, [fp, #-4]
   28684:	ldr	r0, [fp, #-4]
   28688:	mov	sp, fp
   2868c:	pop	{fp, pc}
   28690:	strheq	r0, [r0], -r4
   28694:	andeq	r0, r0, r8, asr #2
   28698:			; <UNDEFINED> instruction: 0xfffffbbc
   2869c:	push	{fp, lr}
   286a0:	mov	fp, sp
   286a4:	sub	sp, sp, #16
   286a8:	ldr	r1, [pc, #172]	; 2875c <main@@Base+0x12274>
   286ac:	add	r3, pc, r1
   286b0:	str	r0, [sp, #8]
   286b4:	ldr	r0, [sp, #8]
   286b8:	movw	r1, #0
   286bc:	uxth	r1, r1
   286c0:	movw	r2, #0
   286c4:	bl	3056c <flatcc_verify_table_field@@Base>
   286c8:	str	r0, [sp, #4]
   286cc:	cmp	r0, #0
   286d0:	beq	286e0 <main@@Base+0x121f8>
   286d4:	ldr	r0, [sp, #4]
   286d8:	str	r0, [fp, #-4]
   286dc:	b	28750 <main@@Base+0x12268>
   286e0:	ldr	r0, [pc, #120]	; 28760 <main@@Base+0x12278>
   286e4:	add	r3, pc, r0
   286e8:	ldr	r0, [sp, #8]
   286ec:	movw	r1, #1
   286f0:	uxth	r1, r1
   286f4:	movw	r2, #0
   286f8:	bl	3056c <flatcc_verify_table_field@@Base>
   286fc:	str	r0, [sp, #4]
   28700:	cmp	r0, #0
   28704:	beq	28714 <main@@Base+0x1222c>
   28708:	ldr	r0, [sp, #4]
   2870c:	str	r0, [fp, #-4]
   28710:	b	28750 <main@@Base+0x12268>
   28714:	ldr	r0, [pc, #72]	; 28764 <main@@Base+0x1227c>
   28718:	add	r3, pc, r0
   2871c:	ldr	r0, [sp, #8]
   28720:	movw	r1, #2
   28724:	uxth	r1, r1
   28728:	movw	r2, #0
   2872c:	bl	3056c <flatcc_verify_table_field@@Base>
   28730:	str	r0, [sp, #4]
   28734:	cmp	r0, #0
   28738:	beq	28748 <main@@Base+0x12260>
   2873c:	ldr	r0, [sp, #4]
   28740:	str	r0, [fp, #-4]
   28744:	b	28750 <main@@Base+0x12268>
   28748:	movw	r0, #0
   2874c:	str	r0, [fp, #-4]
   28750:	ldr	r0, [fp, #-4]
   28754:	mov	sp, fp
   28758:	pop	{fp, pc}
   2875c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28760:	muleq	r0, r8, r3
   28764:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28768:	push	{fp, lr}
   2876c:	mov	fp, sp
   28770:	sub	sp, sp, #16
   28774:	ldr	r1, [pc, #276]	; 28890 <main@@Base+0x123a8>
   28778:	add	r3, pc, r1
   2877c:	str	r0, [sp, #8]
   28780:	ldr	r0, [sp, #8]
   28784:	movw	r1, #1
   28788:	uxth	r1, r1
   2878c:	movw	r2, #0
   28790:	bl	317b8 <flatcc_verify_union_field@@Base>
   28794:	str	r0, [sp, #4]
   28798:	cmp	r0, #0
   2879c:	beq	287ac <main@@Base+0x122c4>
   287a0:	ldr	r0, [sp, #4]
   287a4:	str	r0, [fp, #-4]
   287a8:	b	28884 <main@@Base+0x1239c>
   287ac:	ldr	r0, [pc, #224]	; 28894 <main@@Base+0x123ac>
   287b0:	add	r3, pc, r0
   287b4:	ldr	r0, [sp, #8]
   287b8:	movw	r1, #3
   287bc:	uxth	r1, r1
   287c0:	movw	r2, #0
   287c4:	bl	317b8 <flatcc_verify_union_field@@Base>
   287c8:	str	r0, [sp, #4]
   287cc:	cmp	r0, #0
   287d0:	beq	287e0 <main@@Base+0x122f8>
   287d4:	ldr	r0, [sp, #4]
   287d8:	str	r0, [fp, #-4]
   287dc:	b	28884 <main@@Base+0x1239c>
   287e0:	ldr	r0, [pc, #176]	; 28898 <main@@Base+0x123b0>
   287e4:	add	r3, pc, r0
   287e8:	ldr	r0, [sp, #8]
   287ec:	movw	r1, #5
   287f0:	uxth	r1, r1
   287f4:	movw	r2, #0
   287f8:	bl	317b8 <flatcc_verify_union_field@@Base>
   287fc:	str	r0, [sp, #4]
   28800:	cmp	r0, #0
   28804:	beq	28814 <main@@Base+0x1232c>
   28808:	ldr	r0, [sp, #4]
   2880c:	str	r0, [fp, #-4]
   28810:	b	28884 <main@@Base+0x1239c>
   28814:	ldr	r0, [pc, #128]	; 2889c <main@@Base+0x123b4>
   28818:	add	r3, pc, r0
   2881c:	ldr	r0, [sp, #8]
   28820:	movw	r1, #7
   28824:	uxth	r1, r1
   28828:	movw	r2, #0
   2882c:	bl	317b8 <flatcc_verify_union_field@@Base>
   28830:	str	r0, [sp, #4]
   28834:	cmp	r0, #0
   28838:	beq	28848 <main@@Base+0x12360>
   2883c:	ldr	r0, [sp, #4]
   28840:	str	r0, [fp, #-4]
   28844:	b	28884 <main@@Base+0x1239c>
   28848:	ldr	r0, [pc, #80]	; 288a0 <main@@Base+0x123b8>
   2884c:	add	r3, pc, r0
   28850:	ldr	r0, [sp, #8]
   28854:	movw	r1, #9
   28858:	uxth	r1, r1
   2885c:	movw	r2, #0
   28860:	bl	31ab0 <flatcc_verify_union_vector_field@@Base>
   28864:	str	r0, [sp, #4]
   28868:	cmp	r0, #0
   2886c:	beq	2887c <main@@Base+0x12394>
   28870:	ldr	r0, [sp, #4]
   28874:	str	r0, [fp, #-4]
   28878:	b	28884 <main@@Base+0x1239c>
   2887c:	movw	r0, #0
   28880:	str	r0, [fp, #-4]
   28884:	ldr	r0, [fp, #-4]
   28888:	mov	sp, fp
   2888c:	pop	{fp, pc}
   28890:	andeq	r0, r0, ip, lsl r4
   28894:	andeq	r0, r0, r4, ror #7
   28898:			; <UNDEFINED> instruction: 0x000003b0
   2889c:	andeq	r0, r0, ip, ror r3
   288a0:	andeq	r0, r0, r8, asr #6
   288a4:	push	{fp, lr}
   288a8:	mov	fp, sp
   288ac:	sub	sp, sp, #16
   288b0:	str	r0, [sp, #8]
   288b4:	ldr	r0, [sp, #8]
   288b8:	movw	r1, #0
   288bc:	uxth	r1, r1
   288c0:	movw	r2, #0
   288c4:	bl	2fd5c <flatcc_verify_string_field@@Base>
   288c8:	str	r0, [sp, #4]
   288cc:	cmp	r0, #0
   288d0:	beq	288e0 <main@@Base+0x123f8>
   288d4:	ldr	r0, [sp, #4]
   288d8:	str	r0, [fp, #-4]
   288dc:	b	28a78 <main@@Base+0x12590>
   288e0:	ldr	r0, [sp, #8]
   288e4:	movw	r1, #1
   288e8:	uxth	r1, r1
   288ec:	movw	r2, #4
   288f0:	movw	r3, #4
   288f4:	uxth	r3, r3
   288f8:	bl	2fb50 <flatcc_verify_field@@Base>
   288fc:	str	r0, [sp, #4]
   28900:	cmp	r0, #0
   28904:	beq	28914 <main@@Base+0x1242c>
   28908:	ldr	r0, [sp, #4]
   2890c:	str	r0, [fp, #-4]
   28910:	b	28a78 <main@@Base+0x12590>
   28914:	ldr	r0, [sp, #8]
   28918:	movw	r1, #2
   2891c:	uxth	r1, r1
   28920:	movw	r2, #0
   28924:	bl	2fd5c <flatcc_verify_string_field@@Base>
   28928:	str	r0, [sp, #4]
   2892c:	cmp	r0, #0
   28930:	beq	28940 <main@@Base+0x12458>
   28934:	ldr	r0, [sp, #4]
   28938:	str	r0, [fp, #-4]
   2893c:	b	28a78 <main@@Base+0x12590>
   28940:	ldr	r0, [sp, #8]
   28944:	movw	r1, #3
   28948:	uxth	r1, r1
   2894c:	movw	r2, #8
   28950:	movw	r3, #8
   28954:	uxth	r3, r3
   28958:	bl	2fb50 <flatcc_verify_field@@Base>
   2895c:	str	r0, [sp, #4]
   28960:	cmp	r0, #0
   28964:	beq	28974 <main@@Base+0x1248c>
   28968:	ldr	r0, [sp, #4]
   2896c:	str	r0, [fp, #-4]
   28970:	b	28a78 <main@@Base+0x12590>
   28974:	ldr	r0, [sp, #8]
   28978:	movw	r1, #4
   2897c:	uxth	r1, r1
   28980:	movw	r2, #0
   28984:	bl	2fd5c <flatcc_verify_string_field@@Base>
   28988:	str	r0, [sp, #4]
   2898c:	cmp	r0, #0
   28990:	beq	289a0 <main@@Base+0x124b8>
   28994:	ldr	r0, [sp, #4]
   28998:	str	r0, [fp, #-4]
   2899c:	b	28a78 <main@@Base+0x12590>
   289a0:	ldr	r0, [sp, #8]
   289a4:	movw	r1, #5
   289a8:	uxth	r1, r1
   289ac:	movw	r2, #8
   289b0:	movw	r3, #8
   289b4:	uxth	r3, r3
   289b8:	bl	2fb50 <flatcc_verify_field@@Base>
   289bc:	str	r0, [sp, #4]
   289c0:	cmp	r0, #0
   289c4:	beq	289d4 <main@@Base+0x124ec>
   289c8:	ldr	r0, [sp, #4]
   289cc:	str	r0, [fp, #-4]
   289d0:	b	28a78 <main@@Base+0x12590>
   289d4:	ldr	r0, [sp, #8]
   289d8:	movw	r1, #6
   289dc:	uxth	r1, r1
   289e0:	movw	r2, #4
   289e4:	movw	r3, #4
   289e8:	uxth	r3, r3
   289ec:	bl	2fb50 <flatcc_verify_field@@Base>
   289f0:	str	r0, [sp, #4]
   289f4:	cmp	r0, #0
   289f8:	beq	28a08 <main@@Base+0x12520>
   289fc:	ldr	r0, [sp, #4]
   28a00:	str	r0, [fp, #-4]
   28a04:	b	28a78 <main@@Base+0x12590>
   28a08:	ldr	r0, [sp, #8]
   28a0c:	movw	r1, #7
   28a10:	uxth	r1, r1
   28a14:	movw	r2, #8
   28a18:	movw	r3, #8
   28a1c:	uxth	r3, r3
   28a20:	bl	2fb50 <flatcc_verify_field@@Base>
   28a24:	str	r0, [sp, #4]
   28a28:	cmp	r0, #0
   28a2c:	beq	28a3c <main@@Base+0x12554>
   28a30:	ldr	r0, [sp, #4]
   28a34:	str	r0, [fp, #-4]
   28a38:	b	28a78 <main@@Base+0x12590>
   28a3c:	ldr	r0, [sp, #8]
   28a40:	movw	r1, #8
   28a44:	uxth	r1, r1
   28a48:	movw	r2, #4
   28a4c:	movw	r3, #4
   28a50:	uxth	r3, r3
   28a54:	bl	2fb50 <flatcc_verify_field@@Base>
   28a58:	str	r0, [sp, #4]
   28a5c:	cmp	r0, #0
   28a60:	beq	28a70 <main@@Base+0x12588>
   28a64:	ldr	r0, [sp, #4]
   28a68:	str	r0, [fp, #-4]
   28a6c:	b	28a78 <main@@Base+0x12590>
   28a70:	movw	r0, #0
   28a74:	str	r0, [fp, #-4]
   28a78:	ldr	r0, [fp, #-4]
   28a7c:	mov	sp, fp
   28a80:	pop	{fp, pc}
   28a84:	push	{fp, lr}
   28a88:	mov	fp, sp
   28a8c:	sub	sp, sp, #16
   28a90:	str	r0, [sp, #8]
   28a94:	ldr	r0, [sp, #8]
   28a98:	movw	r1, #0
   28a9c:	uxth	r1, r1
   28aa0:	movw	r2, #8
   28aa4:	movw	r3, #8
   28aa8:	uxth	r3, r3
   28aac:	bl	2fb50 <flatcc_verify_field@@Base>
   28ab0:	str	r0, [sp, #4]
   28ab4:	cmp	r0, #0
   28ab8:	beq	28ac8 <main@@Base+0x125e0>
   28abc:	ldr	r0, [sp, #4]
   28ac0:	str	r0, [fp, #-4]
   28ac4:	b	28b04 <main@@Base+0x1261c>
   28ac8:	ldr	r0, [sp, #8]
   28acc:	movw	r1, #1
   28ad0:	uxth	r1, r1
   28ad4:	movw	r2, #4
   28ad8:	movw	r3, #4
   28adc:	uxth	r3, r3
   28ae0:	bl	2fb50 <flatcc_verify_field@@Base>
   28ae4:	str	r0, [sp, #4]
   28ae8:	cmp	r0, #0
   28aec:	beq	28afc <main@@Base+0x12614>
   28af0:	ldr	r0, [sp, #4]
   28af4:	str	r0, [fp, #-4]
   28af8:	b	28b04 <main@@Base+0x1261c>
   28afc:	movw	r0, #0
   28b00:	str	r0, [fp, #-4]
   28b04:	ldr	r0, [fp, #-4]
   28b08:	mov	sp, fp
   28b0c:	pop	{fp, pc}
   28b10:	push	{fp, lr}
   28b14:	mov	fp, sp
   28b18:	sub	sp, sp, #16
   28b1c:	str	r0, [sp, #8]
   28b20:	ldr	r0, [sp, #8]
   28b24:	movw	r1, #0
   28b28:	uxth	r1, r1
   28b2c:	movw	r2, #8
   28b30:	movw	r3, #8
   28b34:	uxth	r3, r3
   28b38:	bl	2fb50 <flatcc_verify_field@@Base>
   28b3c:	str	r0, [sp, #4]
   28b40:	cmp	r0, #0
   28b44:	beq	28b54 <main@@Base+0x1266c>
   28b48:	ldr	r0, [sp, #4]
   28b4c:	str	r0, [fp, #-4]
   28b50:	b	28b90 <main@@Base+0x126a8>
   28b54:	ldr	r0, [sp, #8]
   28b58:	movw	r1, #1
   28b5c:	uxth	r1, r1
   28b60:	movw	r2, #4
   28b64:	movw	r3, #4
   28b68:	uxth	r3, r3
   28b6c:	bl	2fb50 <flatcc_verify_field@@Base>
   28b70:	str	r0, [sp, #4]
   28b74:	cmp	r0, #0
   28b78:	beq	28b88 <main@@Base+0x126a0>
   28b7c:	ldr	r0, [sp, #4]
   28b80:	str	r0, [fp, #-4]
   28b84:	b	28b90 <main@@Base+0x126a8>
   28b88:	movw	r0, #0
   28b8c:	str	r0, [fp, #-4]
   28b90:	ldr	r0, [fp, #-4]
   28b94:	mov	sp, fp
   28b98:	pop	{fp, pc}
   28b9c:	push	{fp, lr}
   28ba0:	mov	fp, sp
   28ba4:	sub	sp, sp, #16
   28ba8:	str	r0, [sp, #8]
   28bac:	ldr	r0, [sp, #8]
   28bb0:	ldrb	r0, [r0, #12]
   28bb4:	mov	r1, r0
   28bb8:	cmp	r0, #2
   28bbc:	str	r1, [sp, #4]
   28bc0:	beq	28c18 <main@@Base+0x12730>
   28bc4:	b	28bc8 <main@@Base+0x126e0>
   28bc8:	ldr	r0, [sp, #4]
   28bcc:	cmp	r0, #8
   28bd0:	beq	28c30 <main@@Base+0x12748>
   28bd4:	b	28bd8 <main@@Base+0x126f0>
   28bd8:	ldr	r0, [sp, #4]
   28bdc:	cmp	r0, #9
   28be0:	beq	28c4c <main@@Base+0x12764>
   28be4:	b	28be8 <main@@Base+0x12700>
   28be8:	ldr	r0, [sp, #4]
   28bec:	cmp	r0, #10
   28bf0:	beq	28c68 <main@@Base+0x12780>
   28bf4:	b	28bf8 <main@@Base+0x12710>
   28bf8:	ldr	r0, [sp, #4]
   28bfc:	cmp	r0, #11
   28c00:	beq	28c84 <main@@Base+0x1279c>
   28c04:	b	28c08 <main@@Base+0x12720>
   28c08:	ldr	r0, [sp, #4]
   28c0c:	cmp	r0, #255	; 0xff
   28c10:	beq	28c94 <main@@Base+0x127ac>
   28c14:	b	28ca4 <main@@Base+0x127bc>
   28c18:	ldr	r0, [pc, #152]	; 28cb8 <main@@Base+0x127d0>
   28c1c:	add	r1, pc, r0
   28c20:	ldr	r0, [sp, #8]
   28c24:	bl	30c90 <flatcc_verify_union_table@@Base>
   28c28:	str	r0, [fp, #-4]
   28c2c:	b	28cac <main@@Base+0x127c4>
   28c30:	ldr	r0, [sp, #8]
   28c34:	movw	r1, #2
   28c38:	movw	r2, #2
   28c3c:	uxth	r2, r2
   28c40:	bl	30ce4 <flatcc_verify_union_struct@@Base>
   28c44:	str	r0, [fp, #-4]
   28c48:	b	28cac <main@@Base+0x127c4>
   28c4c:	ldr	r0, [sp, #8]
   28c50:	movw	r1, #4
   28c54:	movw	r2, #4
   28c58:	uxth	r2, r2
   28c5c:	bl	30ce4 <flatcc_verify_union_struct@@Base>
   28c60:	str	r0, [fp, #-4]
   28c64:	b	28cac <main@@Base+0x127c4>
   28c68:	ldr	r0, [sp, #8]
   28c6c:	movw	r1, #4
   28c70:	movw	r2, #4
   28c74:	uxth	r2, r2
   28c78:	bl	30ce4 <flatcc_verify_union_struct@@Base>
   28c7c:	str	r0, [fp, #-4]
   28c80:	b	28cac <main@@Base+0x127c4>
   28c84:	ldr	r0, [sp, #8]
   28c88:	bl	30e6c <flatcc_verify_union_string@@Base>
   28c8c:	str	r0, [fp, #-4]
   28c90:	b	28cac <main@@Base+0x127c4>
   28c94:	ldr	r0, [sp, #8]
   28c98:	bl	30e6c <flatcc_verify_union_string@@Base>
   28c9c:	str	r0, [fp, #-4]
   28ca0:	b	28cac <main@@Base+0x127c4>
   28ca4:	movw	r0, #0
   28ca8:	str	r0, [fp, #-4]
   28cac:	ldr	r0, [fp, #-4]
   28cb0:	mov	sp, fp
   28cb4:	pop	{fp, pc}
   28cb8:	muleq	r0, r8, r0
   28cbc:	push	{fp, lr}
   28cc0:	mov	fp, sp
   28cc4:	sub	sp, sp, #16
   28cc8:	str	r0, [sp, #8]
   28ccc:	ldr	r0, [sp, #8]
   28cd0:	movw	r1, #0
   28cd4:	uxth	r1, r1
   28cd8:	movw	r2, #4
   28cdc:	movw	r3, #4
   28ce0:	uxth	r3, r3
   28ce4:	bl	2fb50 <flatcc_verify_field@@Base>
   28ce8:	str	r0, [sp, #4]
   28cec:	cmp	r0, #0
   28cf0:	beq	28d00 <main@@Base+0x12818>
   28cf4:	ldr	r0, [sp, #4]
   28cf8:	str	r0, [fp, #-4]
   28cfc:	b	28d08 <main@@Base+0x12820>
   28d00:	movw	r0, #0
   28d04:	str	r0, [fp, #-4]
   28d08:	ldr	r0, [fp, #-4]
   28d0c:	mov	sp, fp
   28d10:	pop	{fp, pc}

00028d14 <flatcc_builder_default_alloc@@Base>:
   28d14:	push	{fp, lr}
   28d18:	mov	fp, sp
   28d1c:	sub	sp, sp, #32
   28d20:	ldr	ip, [fp, #8]
   28d24:	str	r0, [fp, #-8]
   28d28:	str	r1, [fp, #-12]
   28d2c:	str	r2, [sp, #16]
   28d30:	str	r3, [sp, #12]
   28d34:	ldr	r0, [sp, #16]
   28d38:	cmp	r0, #0
   28d3c:	bne	28d80 <flatcc_builder_default_alloc@@Base+0x6c>
   28d40:	ldr	r0, [fp, #-12]
   28d44:	ldr	r0, [r0]
   28d48:	movw	r1, #0
   28d4c:	cmp	r0, r1
   28d50:	beq	28d74 <flatcc_builder_default_alloc@@Base+0x60>
   28d54:	ldr	r0, [fp, #-12]
   28d58:	ldr	r0, [r0]
   28d5c:	bl	14e24 <free@plt>
   28d60:	ldr	r0, [fp, #-12]
   28d64:	movw	r1, #0
   28d68:	str	r1, [r0]
   28d6c:	ldr	r0, [fp, #-12]
   28d70:	str	r1, [r0, #4]
   28d74:	movw	r0, #0
   28d78:	str	r0, [fp, #-4]
   28d7c:	b	28eec <flatcc_builder_default_alloc@@Base+0x1d8>
   28d80:	ldr	r0, [fp, #8]
   28d84:	sub	r0, r0, #1
   28d88:	cmp	r0, #6
   28d8c:	str	r0, [sp]
   28d90:	bhi	28df0 <flatcc_builder_default_alloc@@Base+0xdc>
   28d94:	add	r0, pc, #8
   28d98:	ldr	r1, [sp]
   28d9c:	ldr	r2, [r0, r1, lsl #2]
   28da0:	add	pc, r0, r2
   28da4:	andeq	r0, r0, ip, lsl r0
   28da8:	andeq	r0, r0, ip, asr #32
   28dac:	andeq	r0, r0, ip, asr #32
   28db0:	andeq	r0, r0, r4, lsr r0
   28db4:	andeq	r0, r0, r8, lsr #32
   28db8:	andeq	r0, r0, ip, asr #32
   28dbc:	andeq	r0, r0, r0, asr #32
   28dc0:	movw	r0, #256	; 0x100
   28dc4:	str	r0, [sp, #4]
   28dc8:	b	28df8 <flatcc_builder_default_alloc@@Base+0xe4>
   28dcc:	ldr	r0, [sp, #16]
   28dd0:	str	r0, [sp, #4]
   28dd4:	b	28df8 <flatcc_builder_default_alloc@@Base+0xe4>
   28dd8:	movw	r0, #288	; 0x120
   28ddc:	str	r0, [sp, #4]
   28de0:	b	28df8 <flatcc_builder_default_alloc@@Base+0xe4>
   28de4:	movw	r0, #64	; 0x40
   28de8:	str	r0, [sp, #4]
   28dec:	b	28df8 <flatcc_builder_default_alloc@@Base+0xe4>
   28df0:	movw	r0, #32
   28df4:	str	r0, [sp, #4]
   28df8:	b	28dfc <flatcc_builder_default_alloc@@Base+0xe8>
   28dfc:	ldr	r0, [sp, #4]
   28e00:	ldr	r1, [sp, #16]
   28e04:	cmp	r0, r1
   28e08:	bcs	28e1c <flatcc_builder_default_alloc@@Base+0x108>
   28e0c:	ldr	r0, [sp, #4]
   28e10:	lsl	r0, r0, #1
   28e14:	str	r0, [sp, #4]
   28e18:	b	28dfc <flatcc_builder_default_alloc@@Base+0xe8>
   28e1c:	ldr	r0, [sp, #16]
   28e20:	ldr	r1, [fp, #-12]
   28e24:	ldr	r1, [r1, #4]
   28e28:	cmp	r0, r1
   28e2c:	bhi	28e54 <flatcc_builder_default_alloc@@Base+0x140>
   28e30:	ldr	r0, [fp, #-12]
   28e34:	ldr	r0, [r0, #4]
   28e38:	lsr	r0, r0, #1
   28e3c:	ldr	r1, [sp, #4]
   28e40:	cmp	r0, r1
   28e44:	bcc	28e54 <flatcc_builder_default_alloc@@Base+0x140>
   28e48:	movw	r0, #0
   28e4c:	str	r0, [fp, #-4]
   28e50:	b	28eec <flatcc_builder_default_alloc@@Base+0x1d8>
   28e54:	ldr	r0, [fp, #-12]
   28e58:	ldr	r0, [r0]
   28e5c:	ldr	r1, [sp, #4]
   28e60:	bl	14e60 <realloc@plt>
   28e64:	str	r0, [sp, #8]
   28e68:	movw	r1, #0
   28e6c:	cmp	r0, r1
   28e70:	bne	28e80 <flatcc_builder_default_alloc@@Base+0x16c>
   28e74:	mvn	r0, #0
   28e78:	str	r0, [fp, #-4]
   28e7c:	b	28eec <flatcc_builder_default_alloc@@Base+0x1d8>
   28e80:	ldr	r0, [sp, #12]
   28e84:	cmp	r0, #0
   28e88:	beq	28ecc <flatcc_builder_default_alloc@@Base+0x1b8>
   28e8c:	ldr	r0, [fp, #-12]
   28e90:	ldr	r0, [r0, #4]
   28e94:	ldr	r1, [sp, #4]
   28e98:	cmp	r0, r1
   28e9c:	bcs	28ecc <flatcc_builder_default_alloc@@Base+0x1b8>
   28ea0:	ldr	r0, [sp, #8]
   28ea4:	ldr	r1, [fp, #-12]
   28ea8:	ldr	r1, [r1, #4]
   28eac:	add	r0, r0, r1
   28eb0:	ldr	r1, [sp, #4]
   28eb4:	ldr	r2, [fp, #-12]
   28eb8:	ldr	r2, [r2, #4]
   28ebc:	sub	r2, r1, r2
   28ec0:	movw	r1, #0
   28ec4:	and	r1, r1, #255	; 0xff
   28ec8:	bl	14ec0 <memset@plt>
   28ecc:	ldr	r0, [sp, #8]
   28ed0:	ldr	r1, [fp, #-12]
   28ed4:	str	r0, [r1]
   28ed8:	ldr	r0, [sp, #4]
   28edc:	ldr	r1, [fp, #-12]
   28ee0:	str	r0, [r1, #4]
   28ee4:	movw	r0, #0
   28ee8:	str	r0, [fp, #-4]
   28eec:	ldr	r0, [fp, #-4]
   28ef0:	mov	sp, fp
   28ef4:	pop	{fp, pc}

00028ef8 <flatcc_builder_flush_vtable_cache@@Base>:
   28ef8:	push	{fp, lr}
   28efc:	mov	fp, sp
   28f00:	sub	sp, sp, #8
   28f04:	str	r0, [sp, #4]
   28f08:	ldr	r0, [sp, #4]
   28f0c:	add	r0, r0, #52	; 0x34
   28f10:	add	r0, r0, #40	; 0x28
   28f14:	str	r0, [sp]
   28f18:	ldr	r0, [sp, #4]
   28f1c:	ldr	r0, [r0, #116]	; 0x74
   28f20:	cmp	r0, #0
   28f24:	bne	28f2c <flatcc_builder_flush_vtable_cache@@Base+0x34>
   28f28:	b	28f60 <flatcc_builder_flush_vtable_cache@@Base+0x68>
   28f2c:	ldr	r0, [sp]
   28f30:	ldr	r0, [r0]
   28f34:	ldr	r1, [sp]
   28f38:	ldr	r2, [r1, #4]
   28f3c:	movw	r1, #0
   28f40:	and	r1, r1, #255	; 0xff
   28f44:	bl	14ec0 <memset@plt>
   28f48:	ldr	r0, [sp, #4]
   28f4c:	movw	r1, #16
   28f50:	str	r1, [r0, #124]	; 0x7c
   28f54:	ldr	r0, [sp, #4]
   28f58:	movw	r1, #0
   28f5c:	str	r1, [r0, #120]	; 0x78
   28f60:	mov	sp, fp
   28f64:	pop	{fp, pc}

00028f68 <flatcc_builder_custom_init@@Base>:
   28f68:	push	{fp, lr}
   28f6c:	mov	fp, sp
   28f70:	sub	sp, sp, #24
   28f74:	ldr	ip, [fp, #8]
   28f78:	str	r0, [fp, #-4]
   28f7c:	str	r1, [fp, #-8]
   28f80:	str	r2, [sp, #12]
   28f84:	str	r3, [sp, #8]
   28f88:	ldr	r0, [fp, #-4]
   28f8c:	movw	r1, #0
   28f90:	and	r1, r1, #255	; 0xff
   28f94:	movw	r2, #232	; 0xe8
   28f98:	str	ip, [sp, #4]
   28f9c:	bl	14ec0 <memset@plt>
   28fa0:	ldr	r0, [fp, #-8]
   28fa4:	movw	r1, #0
   28fa8:	cmp	r0, r1
   28fac:	bne	28fd4 <flatcc_builder_custom_init@@Base+0x6c>
   28fb0:	ldr	r0, [pc, #116]	; 2902c <flatcc_builder_custom_init@@Base+0xc4>
   28fb4:	ldr	r0, [pc, r0]
   28fb8:	ldr	r1, [fp, #-4]
   28fbc:	movw	r2, #1
   28fc0:	str	r2, [r1, #184]	; 0xb8
   28fc4:	str	r0, [fp, #-8]
   28fc8:	ldr	r0, [fp, #-4]
   28fcc:	add	r0, r0, #188	; 0xbc
   28fd0:	str	r0, [sp, #12]
   28fd4:	ldr	r0, [sp, #8]
   28fd8:	movw	r1, #0
   28fdc:	cmp	r0, r1
   28fe0:	bne	28ff0 <flatcc_builder_custom_init@@Base+0x88>
   28fe4:	ldr	r0, [pc, #68]	; 29030 <flatcc_builder_custom_init@@Base+0xc8>
   28fe8:	ldr	r0, [pc, r0]
   28fec:	str	r0, [sp, #8]
   28ff0:	ldr	r0, [fp, #8]
   28ff4:	ldr	r1, [fp, #-4]
   28ff8:	str	r0, [r1, #40]	; 0x28
   28ffc:	ldr	r0, [sp, #8]
   29000:	ldr	r1, [fp, #-4]
   29004:	str	r0, [r1, #48]	; 0x30
   29008:	ldr	r0, [sp, #12]
   2900c:	ldr	r1, [fp, #-4]
   29010:	str	r0, [r1, #36]	; 0x24
   29014:	ldr	r0, [fp, #-8]
   29018:	ldr	r1, [fp, #-4]
   2901c:	str	r0, [r1, #44]	; 0x2c
   29020:	movw	r0, #0
   29024:	mov	sp, fp
   29028:	pop	{fp, pc}
   2902c:	andeq	r4, r3, r0, asr #1
   29030:	andeq	r4, r3, r4, lsl #1

00029034 <flatcc_builder_init@@Base>:
   29034:	push	{fp, lr}
   29038:	mov	fp, sp
   2903c:	sub	sp, sp, #16
   29040:	str	r0, [fp, #-4]
   29044:	ldr	r0, [fp, #-4]
   29048:	movw	r1, #0
   2904c:	str	r1, [sp, #8]
   29050:	ldr	r2, [sp, #8]
   29054:	ldr	r3, [sp, #8]
   29058:	ldr	ip, [sp, #8]
   2905c:	str	ip, [sp]
   29060:	bl	28f68 <flatcc_builder_custom_init@@Base>
   29064:	mov	sp, fp
   29068:	pop	{fp, pc}

0002906c <flatcc_builder_custom_reset@@Base>:
   2906c:	push	{r4, sl, fp, lr}
   29070:	add	fp, sp, #8
   29074:	sub	sp, sp, #40	; 0x28
   29078:	str	r0, [fp, #-16]
   2907c:	str	r1, [fp, #-20]	; 0xffffffec
   29080:	str	r2, [sp, #24]
   29084:	movw	r0, #0
   29088:	str	r0, [sp, #16]
   2908c:	ldr	r0, [sp, #16]
   29090:	cmp	r0, #8
   29094:	bge	291a0 <flatcc_builder_custom_reset@@Base+0x134>
   29098:	ldr	r0, [fp, #-16]
   2909c:	add	r0, r0, #52	; 0x34
   290a0:	ldr	r1, [sp, #16]
   290a4:	add	r0, r0, r1, lsl #3
   290a8:	str	r0, [sp, #20]
   290ac:	ldr	r0, [sp, #20]
   290b0:	ldr	r0, [r0]
   290b4:	movw	r1, #0
   290b8:	cmp	r0, r1
   290bc:	beq	29154 <flatcc_builder_custom_reset@@Base+0xe8>
   290c0:	ldr	r0, [sp, #16]
   290c4:	cmp	r0, #5
   290c8:	beq	29134 <flatcc_builder_custom_reset@@Base+0xc8>
   290cc:	ldr	r0, [sp, #24]
   290d0:	cmp	r0, #0
   290d4:	beq	29134 <flatcc_builder_custom_reset@@Base+0xc8>
   290d8:	ldr	r0, [fp, #-16]
   290dc:	ldr	r0, [r0, #48]	; 0x30
   290e0:	ldr	r1, [fp, #-16]
   290e4:	ldr	r1, [r1, #40]	; 0x28
   290e8:	ldr	r2, [sp, #20]
   290ec:	ldr	r3, [sp, #16]
   290f0:	str	r0, [sp, #12]
   290f4:	mov	r0, r1
   290f8:	mov	r1, r2
   290fc:	movw	r2, #1
   29100:	str	r2, [sp, #8]
   29104:	ldr	ip, [sp, #8]
   29108:	str	r3, [sp, #4]
   2910c:	mov	r3, ip
   29110:	ldr	lr, [sp, #4]
   29114:	str	lr, [sp]
   29118:	ldr	r4, [sp, #12]
   2911c:	blx	r4
   29120:	cmp	r0, #0
   29124:	beq	29134 <flatcc_builder_custom_reset@@Base+0xc8>
   29128:	mvn	r0, #0
   2912c:	str	r0, [fp, #-12]
   29130:	b	2929c <flatcc_builder_custom_reset@@Base+0x230>
   29134:	ldr	r0, [sp, #20]
   29138:	ldr	r0, [r0]
   2913c:	ldr	r1, [sp, #20]
   29140:	ldr	r2, [r1, #4]
   29144:	movw	r1, #0
   29148:	and	r1, r1, #255	; 0xff
   2914c:	bl	14ec0 <memset@plt>
   29150:	b	2918c <flatcc_builder_custom_reset@@Base+0x120>
   29154:	ldr	r0, [sp, #20]
   29158:	ldr	r0, [r0, #4]
   2915c:	cmp	r0, #0
   29160:	bne	29168 <flatcc_builder_custom_reset@@Base+0xfc>
   29164:	b	29188 <flatcc_builder_custom_reset@@Base+0x11c>
   29168:	ldr	r0, [pc, #312]	; 292a8 <flatcc_builder_custom_reset@@Base+0x23c>
   2916c:	add	r0, pc, r0
   29170:	ldr	r1, [pc, #308]	; 292ac <flatcc_builder_custom_reset@@Base+0x240>
   29174:	add	r1, pc, r1
   29178:	ldr	r2, [pc, #304]	; 292b0 <flatcc_builder_custom_reset@@Base+0x244>
   2917c:	add	r3, pc, r2
   29180:	movw	r2, #434	; 0x1b2
   29184:	bl	14f08 <__assert_fail@plt>
   29188:	b	2918c <flatcc_builder_custom_reset@@Base+0x120>
   2918c:	b	29190 <flatcc_builder_custom_reset@@Base+0x124>
   29190:	ldr	r0, [sp, #16]
   29194:	add	r0, r0, #1
   29198:	str	r0, [sp, #16]
   2919c:	b	2908c <flatcc_builder_custom_reset@@Base+0x20>
   291a0:	ldr	r0, [fp, #-16]
   291a4:	movw	r1, #0
   291a8:	str	r1, [r0, #120]	; 0x78
   291ac:	ldr	r0, [fp, #-16]
   291b0:	ldr	r0, [r0, #124]	; 0x7c
   291b4:	cmp	r0, #0
   291b8:	bls	291c8 <flatcc_builder_custom_reset@@Base+0x15c>
   291bc:	ldr	r0, [fp, #-16]
   291c0:	movw	r1, #16
   291c4:	str	r1, [r0, #124]	; 0x7c
   291c8:	ldr	r0, [fp, #-16]
   291cc:	movw	r1, #0
   291d0:	strh	r1, [r0, #128]	; 0x80
   291d4:	ldr	r0, [fp, #-16]
   291d8:	movw	r1, #0
   291dc:	str	r1, [r0, #136]	; 0x88
   291e0:	ldr	r0, [fp, #-16]
   291e4:	str	r1, [r0, #140]	; 0x8c
   291e8:	ldr	r0, [fp, #-16]
   291ec:	str	r1, [r0, #156]	; 0x9c
   291f0:	ldr	r0, [fp, #-16]
   291f4:	str	r1, [r0, #160]	; 0xa0
   291f8:	ldr	r0, [fp, #-16]
   291fc:	str	r1, [r0, #20]
   29200:	ldr	r0, [fp, #-16]
   29204:	str	r1, [r0, #24]
   29208:	ldr	r0, [fp, #-16]
   2920c:	str	r1, [r0, #148]	; 0x94
   29210:	ldr	r0, [fp, #-16]
   29214:	str	r1, [r0, #152]	; 0x98
   29218:	ldr	r0, [fp, #-16]
   2921c:	ldr	r0, [r0, #60]	; 0x3c
   29220:	ldr	r2, [fp, #-16]
   29224:	str	r0, [r2, #16]
   29228:	ldr	r0, [fp, #-16]
   2922c:	ldr	r0, [r0, #76]	; 0x4c
   29230:	ldr	r2, [fp, #-16]
   29234:	str	r0, [r2]
   29238:	ldr	r0, [fp, #-16]
   2923c:	ldr	r0, [r0, #52]	; 0x34
   29240:	ldr	r2, [fp, #-16]
   29244:	str	r0, [r2, #4]
   29248:	ldr	r0, [fp, #-16]
   2924c:	str	r1, [r0, #32]
   29250:	ldr	r0, [fp, #-20]	; 0xffffffec
   29254:	cmp	r0, #0
   29258:	beq	29278 <flatcc_builder_custom_reset@@Base+0x20c>
   2925c:	ldr	r0, [fp, #-16]
   29260:	movw	r1, #0
   29264:	str	r1, [r0, #172]	; 0xac
   29268:	ldr	r0, [fp, #-16]
   2926c:	str	r1, [r0, #176]	; 0xb0
   29270:	ldr	r0, [fp, #-16]
   29274:	str	r1, [r0, #180]	; 0xb4
   29278:	ldr	r0, [fp, #-16]
   2927c:	ldr	r0, [r0, #184]	; 0xb8
   29280:	cmp	r0, #0
   29284:	beq	29294 <flatcc_builder_custom_reset@@Base+0x228>
   29288:	ldr	r0, [fp, #-16]
   2928c:	add	r0, r0, #188	; 0xbc
   29290:	bl	2ec1c <flatcc_emitter_reset@@Base>
   29294:	movw	r0, #0
   29298:	str	r0, [fp, #-12]
   2929c:	ldr	r0, [fp, #-12]
   292a0:	sub	sp, fp, #8
   292a4:	pop	{r4, sl, fp, pc}
   292a8:	andeq	r0, r2, r6, asr #7
   292ac:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   292b0:	andeq	r0, r2, r5, lsr #8

000292b4 <flatcc_builder_reset@@Base>:
   292b4:	push	{fp, lr}
   292b8:	mov	fp, sp
   292bc:	sub	sp, sp, #8
   292c0:	str	r0, [sp, #4]
   292c4:	ldr	r0, [sp, #4]
   292c8:	movw	r1, #0
   292cc:	str	r1, [sp]
   292d0:	ldr	r2, [sp]
   292d4:	bl	2906c <flatcc_builder_custom_reset@@Base>
   292d8:	mov	sp, fp
   292dc:	pop	{fp, pc}

000292e0 <flatcc_builder_clear@@Base>:
   292e0:	push	{r4, sl, fp, lr}
   292e4:	add	fp, sp, #8
   292e8:	sub	sp, sp, #32
   292ec:	str	r0, [fp, #-12]
   292f0:	movw	r0, #0
   292f4:	str	r0, [sp, #20]
   292f8:	ldr	r0, [sp, #20]
   292fc:	cmp	r0, #8
   29300:	bge	29370 <flatcc_builder_clear@@Base+0x90>
   29304:	ldr	r0, [fp, #-12]
   29308:	add	r0, r0, #52	; 0x34
   2930c:	ldr	r1, [sp, #20]
   29310:	add	r0, r0, r1, lsl #3
   29314:	str	r0, [fp, #-16]
   29318:	ldr	r0, [fp, #-12]
   2931c:	ldr	r0, [r0, #48]	; 0x30
   29320:	ldr	r1, [fp, #-12]
   29324:	ldr	r1, [r1, #40]	; 0x28
   29328:	ldr	r2, [fp, #-16]
   2932c:	ldr	r3, [sp, #20]
   29330:	str	r0, [sp, #16]
   29334:	mov	r0, r1
   29338:	mov	r1, r2
   2933c:	movw	r2, #0
   29340:	str	r2, [sp, #12]
   29344:	ldr	ip, [sp, #12]
   29348:	str	r3, [sp, #8]
   2934c:	mov	r3, ip
   29350:	ldr	lr, [sp, #8]
   29354:	str	lr, [sp]
   29358:	ldr	r4, [sp, #16]
   2935c:	blx	r4
   29360:	ldr	r0, [sp, #20]
   29364:	add	r0, r0, #1
   29368:	str	r0, [sp, #20]
   2936c:	b	292f8 <flatcc_builder_clear@@Base+0x18>
   29370:	ldr	r0, [fp, #-12]
   29374:	ldr	r0, [r0, #184]	; 0xb8
   29378:	cmp	r0, #0
   2937c:	beq	2938c <flatcc_builder_clear@@Base+0xac>
   29380:	ldr	r0, [fp, #-12]
   29384:	add	r0, r0, #188	; 0xbc
   29388:	bl	2edb4 <flatcc_emitter_clear@@Base>
   2938c:	ldr	r0, [fp, #-12]
   29390:	movw	r1, #0
   29394:	and	r1, r1, #255	; 0xff
   29398:	movw	r2, #232	; 0xe8
   2939c:	bl	14ec0 <memset@plt>
   293a0:	sub	sp, fp, #8
   293a4:	pop	{r4, sl, fp, pc}

000293a8 <flatcc_builder_enter_user_frame_ptr@@Base>:
   293a8:	push	{fp, lr}
   293ac:	mov	fp, sp
   293b0:	sub	sp, sp, #24
   293b4:	str	r0, [fp, #-8]
   293b8:	str	r1, [sp, #12]
   293bc:	ldr	r0, [sp, #12]
   293c0:	add	r0, r0, #4
   293c4:	sub	r0, r0, #1
   293c8:	mvn	r1, #3
   293cc:	and	r0, r0, r1
   293d0:	add	r0, r0, #4
   293d4:	str	r0, [sp, #12]
   293d8:	ldr	r0, [fp, #-8]
   293dc:	ldr	r1, [fp, #-8]
   293e0:	ldr	r2, [r1, #228]	; 0xe4
   293e4:	ldr	r3, [sp, #12]
   293e8:	movw	r1, #7
   293ec:	movw	ip, #0
   293f0:	str	ip, [sp]
   293f4:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   293f8:	str	r0, [sp, #8]
   293fc:	movw	r1, #0
   29400:	cmp	r0, r1
   29404:	bne	29414 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   29408:	movw	r0, #0
   2940c:	str	r0, [fp, #-4]
   29410:	b	29470 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   29414:	ldr	r0, [sp, #8]
   29418:	ldr	r2, [sp, #12]
   2941c:	movw	r1, #0
   29420:	and	r1, r1, #255	; 0xff
   29424:	bl	14ec0 <memset@plt>
   29428:	ldr	r0, [fp, #-8]
   2942c:	ldr	r0, [r0, #224]	; 0xe0
   29430:	ldr	r1, [sp, #8]
   29434:	add	r2, r1, #4
   29438:	str	r2, [sp, #8]
   2943c:	str	r0, [r1]
   29440:	ldr	r0, [fp, #-8]
   29444:	ldr	r0, [r0, #228]	; 0xe4
   29448:	add	r0, r0, #4
   2944c:	ldr	r1, [fp, #-8]
   29450:	str	r0, [r1, #224]	; 0xe0
   29454:	ldr	r0, [sp, #12]
   29458:	ldr	r1, [fp, #-8]
   2945c:	ldr	r2, [r1, #228]	; 0xe4
   29460:	add	r0, r2, r0
   29464:	str	r0, [r1, #228]	; 0xe4
   29468:	ldr	r0, [sp, #8]
   2946c:	str	r0, [fp, #-4]
   29470:	ldr	r0, [fp, #-4]
   29474:	mov	sp, fp
   29478:	pop	{fp, pc}
   2947c:	push	{fp, lr}
   29480:	mov	fp, sp
   29484:	sub	sp, sp, #32
   29488:	ldr	ip, [fp, #8]
   2948c:	str	r0, [fp, #-4]
   29490:	str	r1, [fp, #-8]
   29494:	str	r2, [fp, #-12]
   29498:	str	r3, [sp, #16]
   2949c:	ldr	r0, [fp, #-4]
   294a0:	add	r0, r0, #52	; 0x34
   294a4:	ldr	r1, [fp, #-8]
   294a8:	add	r0, r0, r1, lsl #3
   294ac:	str	r0, [sp, #12]
   294b0:	ldr	r0, [fp, #-12]
   294b4:	ldr	r1, [sp, #16]
   294b8:	add	r0, r0, r1
   294bc:	ldr	r1, [sp, #12]
   294c0:	ldr	r1, [r1, #4]
   294c4:	cmp	r0, r1
   294c8:	bls	29540 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   294cc:	ldr	r0, [fp, #-4]
   294d0:	ldr	r0, [r0, #48]	; 0x30
   294d4:	ldr	r1, [fp, #-4]
   294d8:	ldr	r1, [r1, #40]	; 0x28
   294dc:	ldr	r2, [sp, #12]
   294e0:	ldr	r3, [fp, #-12]
   294e4:	ldr	ip, [sp, #16]
   294e8:	add	r3, r3, ip
   294ec:	ldr	ip, [fp, #8]
   294f0:	ldr	lr, [fp, #-8]
   294f4:	str	r0, [sp, #8]
   294f8:	mov	r0, r1
   294fc:	mov	r1, r2
   29500:	mov	r2, r3
   29504:	mov	r3, ip
   29508:	str	lr, [sp]
   2950c:	ldr	ip, [sp, #8]
   29510:	blx	ip
   29514:	cmp	r0, #0
   29518:	beq	2953c <flatcc_builder_enter_user_frame_ptr@@Base+0x194>
   2951c:	ldr	r0, [pc, #52]	; 29558 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b0>
   29520:	add	r0, pc, r0
   29524:	ldr	r1, [pc, #48]	; 2955c <flatcc_builder_enter_user_frame_ptr@@Base+0x1b4>
   29528:	add	r1, pc, r1
   2952c:	ldr	r2, [pc, #44]	; 29560 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b8>
   29530:	add	r3, pc, r2
   29534:	movw	r2, #308	; 0x134
   29538:	bl	14f08 <__assert_fail@plt>
   2953c:	b	29540 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   29540:	ldr	r0, [sp, #12]
   29544:	ldr	r0, [r0]
   29548:	ldr	r1, [fp, #-12]
   2954c:	add	r0, r0, r1
   29550:	mov	sp, fp
   29554:	pop	{fp, pc}
   29558:	andeq	r1, r2, r1, ror #3
   2955c:	andeq	r0, r2, ip, lsl r0
   29560:	andeq	r1, r2, fp

00029564 <flatcc_builder_enter_user_frame@@Base>:
   29564:	push	{fp, lr}
   29568:	mov	fp, sp
   2956c:	sub	sp, sp, #24
   29570:	str	r0, [fp, #-8]
   29574:	str	r1, [sp, #12]
   29578:	ldr	r0, [sp, #12]
   2957c:	add	r0, r0, #4
   29580:	sub	r0, r0, #1
   29584:	mvn	r1, #3
   29588:	and	r0, r0, r1
   2958c:	add	r0, r0, #4
   29590:	str	r0, [sp, #12]
   29594:	ldr	r0, [fp, #-8]
   29598:	ldr	r1, [fp, #-8]
   2959c:	ldr	r2, [r1, #228]	; 0xe4
   295a0:	ldr	r3, [sp, #12]
   295a4:	movw	r1, #7
   295a8:	movw	ip, #0
   295ac:	str	ip, [sp]
   295b0:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   295b4:	str	r0, [sp, #8]
   295b8:	movw	r1, #0
   295bc:	cmp	r0, r1
   295c0:	bne	295d0 <flatcc_builder_enter_user_frame@@Base+0x6c>
   295c4:	movw	r0, #0
   295c8:	str	r0, [fp, #-4]
   295cc:	b	29630 <flatcc_builder_enter_user_frame@@Base+0xcc>
   295d0:	ldr	r0, [sp, #8]
   295d4:	ldr	r2, [sp, #12]
   295d8:	movw	r1, #0
   295dc:	and	r1, r1, #255	; 0xff
   295e0:	bl	14ec0 <memset@plt>
   295e4:	ldr	r0, [fp, #-8]
   295e8:	ldr	r0, [r0, #224]	; 0xe0
   295ec:	ldr	r1, [sp, #8]
   295f0:	add	r2, r1, #4
   295f4:	str	r2, [sp, #8]
   295f8:	str	r0, [r1]
   295fc:	ldr	r0, [fp, #-8]
   29600:	ldr	r0, [r0, #228]	; 0xe4
   29604:	add	r0, r0, #4
   29608:	ldr	r1, [fp, #-8]
   2960c:	str	r0, [r1, #224]	; 0xe0
   29610:	ldr	r0, [sp, #12]
   29614:	ldr	r1, [fp, #-8]
   29618:	ldr	r2, [r1, #228]	; 0xe4
   2961c:	add	r0, r2, r0
   29620:	str	r0, [r1, #228]	; 0xe4
   29624:	ldr	r0, [fp, #-8]
   29628:	ldr	r0, [r0, #224]	; 0xe0
   2962c:	str	r0, [fp, #-4]
   29630:	ldr	r0, [fp, #-4]
   29634:	mov	sp, fp
   29638:	pop	{fp, pc}

0002963c <flatcc_builder_exit_user_frame@@Base>:
   2963c:	push	{fp, lr}
   29640:	mov	fp, sp
   29644:	sub	sp, sp, #8
   29648:	str	r0, [sp, #4]
   2964c:	ldr	r0, [sp, #4]
   29650:	ldr	r0, [r0, #224]	; 0xe0
   29654:	cmp	r0, #0
   29658:	bls	29660 <flatcc_builder_exit_user_frame@@Base+0x24>
   2965c:	b	29680 <flatcc_builder_exit_user_frame@@Base+0x44>
   29660:	ldr	r0, [pc, #100]	; 296cc <flatcc_builder_exit_user_frame@@Base+0x90>
   29664:	add	r0, pc, r0
   29668:	ldr	r1, [pc, #96]	; 296d0 <flatcc_builder_exit_user_frame@@Base+0x94>
   2966c:	add	r1, pc, r1
   29670:	ldr	r2, [pc, #92]	; 296d4 <flatcc_builder_exit_user_frame@@Base+0x98>
   29674:	add	r3, pc, r2
   29678:	movw	r2, #542	; 0x21e
   2967c:	bl	14f08 <__assert_fail@plt>
   29680:	ldr	r0, [sp, #4]
   29684:	ldr	r0, [r0, #108]	; 0x6c
   29688:	ldr	r1, [sp, #4]
   2968c:	ldr	r1, [r1, #224]	; 0xe0
   29690:	add	r0, r0, r1
   29694:	str	r0, [sp]
   29698:	ldr	r0, [sp, #4]
   2969c:	ldr	r0, [r0, #224]	; 0xe0
   296a0:	sub	r0, r0, #4
   296a4:	ldr	r1, [sp, #4]
   296a8:	str	r0, [r1, #228]	; 0xe4
   296ac:	ldr	r0, [sp]
   296b0:	mvn	r1, #3
   296b4:	add	r0, r0, r1
   296b8:	ldr	r0, [r0]
   296bc:	ldr	r1, [sp, #4]
   296c0:	str	r0, [r1, #224]	; 0xe0
   296c4:	mov	sp, fp
   296c8:	pop	{fp, pc}
   296cc:	andeq	pc, r1, fp, ror pc	; <UNPREDICTABLE>
   296d0:	ldrdeq	pc, [r1], -r8
   296d4:	andeq	pc, r1, r4, lsl #31

000296d8 <flatcc_builder_exit_user_frame_at@@Base>:
   296d8:	push	{fp, lr}
   296dc:	mov	fp, sp
   296e0:	sub	sp, sp, #8
   296e4:	str	r0, [sp, #4]
   296e8:	str	r1, [sp]
   296ec:	ldr	r0, [sp, #4]
   296f0:	ldr	r0, [r0, #224]	; 0xe0
   296f4:	ldr	r1, [sp]
   296f8:	cmp	r0, r1
   296fc:	bcc	29704 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   29700:	b	29724 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   29704:	ldr	r0, [pc, #52]	; 29740 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   29708:	add	r0, pc, r0
   2970c:	ldr	r1, [pc, #48]	; 29744 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   29710:	add	r1, pc, r1
   29714:	ldr	r2, [pc, #44]	; 29748 <flatcc_builder_exit_user_frame_at@@Base+0x70>
   29718:	add	r3, pc, r2
   2971c:	movw	r2, #551	; 0x227
   29720:	bl	14f08 <__assert_fail@plt>
   29724:	ldr	r0, [sp]
   29728:	ldr	r1, [sp, #4]
   2972c:	str	r0, [r1, #224]	; 0xe0
   29730:	ldr	r0, [sp, #4]
   29734:	bl	2963c <flatcc_builder_exit_user_frame@@Base>
   29738:	mov	sp, fp
   2973c:	pop	{fp, pc}
   29740:	andeq	pc, r1, sl, lsr #30
   29744:	andeq	pc, r1, r4, lsr lr	; <UNPREDICTABLE>
   29748:	andeq	pc, r1, r9, lsr pc	; <UNPREDICTABLE>

0002974c <flatcc_builder_get_current_user_frame@@Base>:
   2974c:	sub	sp, sp, #4
   29750:	str	r0, [sp]
   29754:	ldr	r0, [sp]
   29758:	ldr	r0, [r0, #224]	; 0xe0
   2975c:	add	sp, sp, #4
   29760:	bx	lr

00029764 <flatcc_builder_get_user_frame_ptr@@Base>:
   29764:	sub	sp, sp, #8
   29768:	str	r0, [sp, #4]
   2976c:	str	r1, [sp]
   29770:	ldr	r0, [sp, #4]
   29774:	ldr	r0, [r0, #108]	; 0x6c
   29778:	ldr	r1, [sp]
   2977c:	add	r0, r0, r1
   29780:	add	sp, sp, #8
   29784:	bx	lr

00029788 <flatcc_builder_embed_buffer@@Base>:
   29788:	push	{fp, lr}
   2978c:	mov	fp, sp
   29790:	sub	sp, sp, #120	; 0x78
   29794:	ldr	ip, [fp, #12]
   29798:	ldr	lr, [fp, #8]
   2979c:	str	r0, [fp, #-8]
   297a0:	strh	r1, [fp, #-10]
   297a4:	str	r2, [fp, #-16]
   297a8:	str	r3, [fp, #-20]	; 0xffffffec
   297ac:	strh	lr, [fp, #-22]	; 0xffffffea
   297b0:	ldr	r0, [fp, #12]
   297b4:	and	r0, r0, #2
   297b8:	str	r0, [sp, #12]
   297bc:	ldr	r0, [fp, #-8]
   297c0:	ldrh	r1, [fp, #-10]
   297c4:	ldr	r2, [fp, #-8]
   297c8:	ldr	r2, [r2, #152]	; 0x98
   297cc:	cmp	r2, #0
   297d0:	movw	r2, #0
   297d4:	moveq	r2, #1
   297d8:	mvn	r3, #0
   297dc:	eor	r2, r2, r3
   297e0:	and	r3, r2, #1
   297e4:	sub	r2, fp, #22
   297e8:	str	r1, [sp, #8]
   297ec:	mov	r1, r2
   297f0:	ldr	r2, [sp, #8]
   297f4:	uxth	r2, r2
   297f8:	str	ip, [sp, #4]
   297fc:	bl	29970 <flatcc_builder_embed_buffer@@Base+0x1e8>
   29800:	cmp	r0, #0
   29804:	beq	29814 <flatcc_builder_embed_buffer@@Base+0x8c>
   29808:	movw	r0, #0
   2980c:	str	r0, [fp, #-4]
   29810:	b	29960 <flatcc_builder_embed_buffer@@Base+0x1d8>
   29814:	ldr	r0, [fp, #-8]
   29818:	ldr	r1, [fp, #-20]	; 0xffffffec
   2981c:	ldr	r2, [sp, #12]
   29820:	cmp	r2, #0
   29824:	movw	r2, #0
   29828:	movne	r2, #1
   2982c:	tst	r2, #1
   29830:	movw	r2, #4
   29834:	moveq	r2, #0
   29838:	add	r1, r1, r2
   2983c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   29840:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   29844:	str	r0, [fp, #-32]	; 0xffffffe0
   29848:	ldr	r0, [fp, #-20]	; 0xffffffec
   2984c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29850:	add	r0, r0, r1
   29854:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   29858:	str	r0, [fp, #-28]	; 0xffffffe4
   2985c:	movw	r0, #0
   29860:	str	r0, [sp, #16]
   29864:	str	r0, [sp, #20]
   29868:	ldr	r0, [fp, #-8]
   2986c:	ldr	r0, [r0, #152]	; 0x98
   29870:	cmp	r0, #0
   29874:	beq	298b4 <flatcc_builder_embed_buffer@@Base+0x12c>
   29878:	ldr	r0, [sp, #16]
   2987c:	add	r0, r0, #4
   29880:	str	r0, [sp, #16]
   29884:	add	r0, sp, #16
   29888:	add	r0, r0, #8
   2988c:	ldr	r1, [sp, #20]
   29890:	sub	r2, fp, #28
   29894:	str	r2, [r0, r1, lsl #3]
   29898:	ldr	r1, [sp, #20]
   2989c:	add	r0, r0, r1, lsl #3
   298a0:	movw	r1, #4
   298a4:	str	r1, [r0, #4]
   298a8:	ldr	r0, [sp, #20]
   298ac:	add	r0, r0, #1
   298b0:	str	r0, [sp, #20]
   298b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   298b8:	cmp	r0, #0
   298bc:	bls	29900 <flatcc_builder_embed_buffer@@Base+0x178>
   298c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   298c4:	ldr	r1, [sp, #16]
   298c8:	add	r0, r1, r0
   298cc:	str	r0, [sp, #16]
   298d0:	ldr	r0, [fp, #-16]
   298d4:	add	r1, sp, #16
   298d8:	add	r1, r1, #8
   298dc:	ldr	r2, [sp, #20]
   298e0:	str	r0, [r1, r2, lsl #3]
   298e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   298e8:	ldr	r2, [sp, #20]
   298ec:	add	r1, r1, r2, lsl #3
   298f0:	str	r0, [r1, #4]
   298f4:	ldr	r0, [sp, #20]
   298f8:	add	r0, r0, #1
   298fc:	str	r0, [sp, #20]
   29900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29904:	cmp	r0, #0
   29908:	bls	29950 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2990c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29910:	ldr	r1, [sp, #16]
   29914:	add	r0, r1, r0
   29918:	str	r0, [sp, #16]
   2991c:	add	r0, sp, #16
   29920:	add	r0, r0, #8
   29924:	ldr	r1, [sp, #20]
   29928:	ldr	r2, [pc, #60]	; 2996c <flatcc_builder_embed_buffer@@Base+0x1e4>
   2992c:	ldr	r2, [pc, r2]
   29930:	str	r2, [r0, r1, lsl #3]
   29934:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29938:	ldr	r2, [sp, #20]
   2993c:	add	r0, r0, r2, lsl #3
   29940:	str	r1, [r0, #4]
   29944:	ldr	r0, [sp, #20]
   29948:	add	r0, r0, #1
   2994c:	str	r0, [sp, #20]
   29950:	ldr	r0, [fp, #-8]
   29954:	add	r1, sp, #16
   29958:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2995c:	str	r0, [fp, #-4]
   29960:	ldr	r0, [fp, #-4]
   29964:	mov	sp, fp
   29968:	pop	{fp, pc}
   2996c:	andeq	r3, r3, r4, lsr r7
   29970:	push	{fp, lr}
   29974:	mov	fp, sp
   29978:	sub	sp, sp, #104	; 0x68
   2997c:	str	r0, [fp, #-4]
   29980:	str	r1, [fp, #-8]
   29984:	strh	r2, [fp, #-10]
   29988:	str	r3, [fp, #-16]
   2998c:	ldrh	r0, [fp, #-10]
   29990:	cmp	r0, #0
   29994:	beq	299a4 <flatcc_builder_embed_buffer@@Base+0x21c>
   29998:	ldrh	r0, [fp, #-10]
   2999c:	str	r0, [sp, #8]
   299a0:	b	299d8 <flatcc_builder_embed_buffer@@Base+0x250>
   299a4:	ldr	r0, [fp, #-4]
   299a8:	ldrh	r0, [r0, #132]	; 0x84
   299ac:	cmp	r0, #0
   299b0:	beq	299c4 <flatcc_builder_embed_buffer@@Base+0x23c>
   299b4:	ldr	r0, [fp, #-4]
   299b8:	ldrh	r0, [r0, #132]	; 0x84
   299bc:	str	r0, [sp, #4]
   299c0:	b	299d0 <flatcc_builder_embed_buffer@@Base+0x248>
   299c4:	movw	r0, #1
   299c8:	str	r0, [sp, #4]
   299cc:	b	299d0 <flatcc_builder_embed_buffer@@Base+0x248>
   299d0:	ldr	r0, [sp, #4]
   299d4:	str	r0, [sp, #8]
   299d8:	ldr	r0, [sp, #8]
   299dc:	strh	r0, [fp, #-10]
   299e0:	ldr	r0, [fp, #-8]
   299e4:	movw	r1, #4
   299e8:	uxth	r1, r1
   299ec:	bl	2b4d0 <flatcc_builder_start_vector@@Base+0xac>
   299f0:	ldr	r0, [fp, #-8]
   299f4:	ldrh	r1, [fp, #-10]
   299f8:	bl	2b4d0 <flatcc_builder_start_vector@@Base+0xac>
   299fc:	ldr	r0, [fp, #-16]
   29a00:	cmp	r0, #0
   29a04:	bne	29ac0 <flatcc_builder_embed_buffer@@Base+0x338>
   29a08:	ldr	r0, [fp, #-4]
   29a0c:	ldrh	r1, [fp, #-10]
   29a10:	bl	2e904 <flatcc_builder_get_emit_context@@Base+0x18>
   29a14:	str	r0, [fp, #-20]	; 0xffffffec
   29a18:	ldr	r0, [fp, #-20]	; 0xffffffec
   29a1c:	cmp	r0, #0
   29a20:	beq	29abc <flatcc_builder_embed_buffer@@Base+0x334>
   29a24:	movw	r0, #0
   29a28:	str	r0, [sp, #12]
   29a2c:	str	r0, [sp, #16]
   29a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   29a34:	cmp	r0, #0
   29a38:	bls	29a80 <flatcc_builder_embed_buffer@@Base+0x2f8>
   29a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29a40:	ldr	r1, [sp, #12]
   29a44:	add	r0, r1, r0
   29a48:	str	r0, [sp, #12]
   29a4c:	add	r0, sp, #12
   29a50:	add	r0, r0, #8
   29a54:	ldr	r1, [sp, #16]
   29a58:	ldr	r2, [pc, #120]	; 29ad8 <flatcc_builder_embed_buffer@@Base+0x350>
   29a5c:	ldr	r2, [pc, r2]
   29a60:	str	r2, [r0, r1, lsl #3]
   29a64:	ldr	r1, [fp, #-20]	; 0xffffffec
   29a68:	ldr	r2, [sp, #16]
   29a6c:	add	r0, r0, r2, lsl #3
   29a70:	str	r1, [r0, #4]
   29a74:	ldr	r0, [sp, #16]
   29a78:	add	r0, r0, #1
   29a7c:	str	r0, [sp, #16]
   29a80:	ldr	r0, [fp, #-4]
   29a84:	add	r1, sp, #12
   29a88:	bl	2bab4 <flatcc_builder_create_vtable@@Base+0x104>
   29a8c:	movw	r1, #0
   29a90:	cmp	r1, r0
   29a94:	bne	29ab8 <flatcc_builder_embed_buffer@@Base+0x330>
   29a98:	ldr	r0, [pc, #44]	; 29acc <flatcc_builder_embed_buffer@@Base+0x344>
   29a9c:	add	r0, pc, r0
   29aa0:	ldr	r1, [pc, #40]	; 29ad0 <flatcc_builder_embed_buffer@@Base+0x348>
   29aa4:	add	r1, pc, r1
   29aa8:	ldr	r2, [pc, #36]	; 29ad4 <flatcc_builder_embed_buffer@@Base+0x34c>
   29aac:	add	r3, pc, r2
   29ab0:	movw	r2, #702	; 0x2be
   29ab4:	bl	14f08 <__assert_fail@plt>
   29ab8:	b	29abc <flatcc_builder_embed_buffer@@Base+0x334>
   29abc:	b	29ac0 <flatcc_builder_embed_buffer@@Base+0x338>
   29ac0:	movw	r0, #0
   29ac4:	mov	sp, fp
   29ac8:	pop	{fp, pc}
   29acc:	andeq	r0, r2, r5, ror #24
   29ad0:	andeq	pc, r1, r0, lsr #21
   29ad4:	ldrdeq	r0, [r2], -r2
   29ad8:	andeq	r3, r3, r4, lsl #12
   29adc:	sub	sp, sp, #12
   29ae0:	str	r0, [sp, #8]
   29ae4:	str	r1, [sp, #4]
   29ae8:	strh	r2, [sp, #2]
   29aec:	ldr	r0, [sp, #8]
   29af0:	ldr	r0, [r0, #136]	; 0x88
   29af4:	ldr	r1, [sp, #4]
   29af8:	sub	r0, r0, r1
   29afc:	ldrh	r1, [sp, #2]
   29b00:	sub	r1, r1, #1
   29b04:	and	r0, r0, r1
   29b08:	add	sp, sp, #12
   29b0c:	bx	lr
   29b10:	sub	sp, sp, #4
   29b14:	str	r0, [sp]
   29b18:	ldr	r0, [sp]
   29b1c:	add	sp, sp, #4
   29b20:	bx	lr
   29b24:	push	{fp, lr}
   29b28:	mov	fp, sp
   29b2c:	sub	sp, sp, #24
   29b30:	str	r0, [fp, #-4]
   29b34:	str	r1, [fp, #-8]
   29b38:	ldr	r0, [fp, #-4]
   29b3c:	ldr	r0, [r0, #136]	; 0x88
   29b40:	ldr	r1, [fp, #-8]
   29b44:	ldr	r1, [r1]
   29b48:	sub	r0, r0, r1
   29b4c:	str	r0, [sp, #12]
   29b50:	ldr	r0, [fp, #-8]
   29b54:	ldr	r0, [r0]
   29b58:	cmp	r0, #16
   29b5c:	bls	29b74 <flatcc_builder_embed_buffer@@Base+0x3ec>
   29b60:	ldr	r0, [fp, #-8]
   29b64:	ldr	r0, [r0]
   29b68:	sub	r0, r0, #16
   29b6c:	cmn	r0, #1
   29b70:	bhi	29b88 <flatcc_builder_embed_buffer@@Base+0x400>
   29b74:	ldr	r0, [sp, #12]
   29b78:	ldr	r1, [fp, #-4]
   29b7c:	ldr	r1, [r1, #136]	; 0x88
   29b80:	cmp	r0, r1
   29b84:	blt	29ba8 <flatcc_builder_embed_buffer@@Base+0x420>
   29b88:	ldr	r0, [pc, #172]	; 29c3c <flatcc_builder_embed_buffer@@Base+0x4b4>
   29b8c:	add	r0, pc, r0
   29b90:	ldr	r1, [pc, #168]	; 29c40 <flatcc_builder_embed_buffer@@Base+0x4b8>
   29b94:	add	r1, pc, r1
   29b98:	ldr	r2, [pc, #164]	; 29c44 <flatcc_builder_embed_buffer@@Base+0x4bc>
   29b9c:	add	r3, pc, r2
   29ba0:	movw	r2, #647	; 0x287
   29ba4:	bl	14f08 <__assert_fail@plt>
   29ba8:	ldr	r0, [fp, #-4]
   29bac:	ldr	r0, [r0, #44]	; 0x2c
   29bb0:	ldr	r1, [fp, #-4]
   29bb4:	ldr	r1, [r1, #36]	; 0x24
   29bb8:	ldr	r2, [fp, #-8]
   29bbc:	add	r2, r2, #8
   29bc0:	ldr	r3, [fp, #-8]
   29bc4:	ldr	r3, [r3, #4]
   29bc8:	ldr	ip, [sp, #12]
   29bcc:	ldr	lr, [fp, #-8]
   29bd0:	ldr	lr, [lr]
   29bd4:	str	r0, [sp, #8]
   29bd8:	mov	r0, r1
   29bdc:	mov	r1, r2
   29be0:	mov	r2, r3
   29be4:	mov	r3, ip
   29be8:	str	lr, [sp]
   29bec:	ldr	ip, [sp, #8]
   29bf0:	blx	ip
   29bf4:	cmp	r0, #0
   29bf8:	beq	29c1c <flatcc_builder_embed_buffer@@Base+0x494>
   29bfc:	ldr	r0, [pc, #44]	; 29c30 <flatcc_builder_embed_buffer@@Base+0x4a8>
   29c00:	add	r0, pc, r0
   29c04:	ldr	r1, [pc, #40]	; 29c34 <flatcc_builder_embed_buffer@@Base+0x4ac>
   29c08:	add	r1, pc, r1
   29c0c:	ldr	r2, [pc, #36]	; 29c38 <flatcc_builder_embed_buffer@@Base+0x4b0>
   29c10:	add	r3, pc, r2
   29c14:	movw	r2, #651	; 0x28b
   29c18:	bl	14f08 <__assert_fail@plt>
   29c1c:	ldr	r0, [sp, #12]
   29c20:	ldr	r1, [fp, #-4]
   29c24:	str	r0, [r1, #136]	; 0x88
   29c28:	mov	sp, fp
   29c2c:	pop	{fp, pc}
   29c30:	andeq	r0, r2, r1, lsl #22
   29c34:	andeq	pc, r1, ip, lsr r9	; <UNPREDICTABLE>
   29c38:			; <UNDEFINED> instruction: 0x000209b0
   29c3c:	andeq	r0, r2, r5, ror fp
   29c40:			; <UNDEFINED> instruction: 0x0001f9b0
   29c44:	andeq	r0, r2, r4, lsr #20

00029c48 <flatcc_builder_create_buffer@@Base>:
   29c48:	push	{fp, lr}
   29c4c:	mov	fp, sp
   29c50:	sub	sp, sp, #152	; 0x98
   29c54:	ldr	ip, [fp, #12]
   29c58:	ldr	lr, [fp, #8]
   29c5c:	str	r0, [fp, #-8]
   29c60:	str	r1, [fp, #-12]
   29c64:	strh	r2, [fp, #-14]
   29c68:	str	r3, [fp, #-20]	; 0xffffffec
   29c6c:	strh	lr, [fp, #-22]	; 0xffffffea
   29c70:	movw	r0, #0
   29c74:	str	r0, [fp, #-36]	; 0xffffffdc
   29c78:	str	r0, [sp, #28]
   29c7c:	ldr	r0, [fp, #12]
   29c80:	and	r0, r0, #1
   29c84:	cmp	r0, #0
   29c88:	movw	r0, #0
   29c8c:	movne	r0, #1
   29c90:	and	r0, r0, #1
   29c94:	str	r0, [sp, #24]
   29c98:	ldr	r0, [fp, #12]
   29c9c:	and	r0, r0, #2
   29ca0:	cmp	r0, #0
   29ca4:	movw	r0, #0
   29ca8:	movne	r0, #1
   29cac:	and	r0, r0, #1
   29cb0:	str	r0, [sp, #20]
   29cb4:	ldr	r0, [fp, #-8]
   29cb8:	ldrh	r1, [fp, #-14]
   29cbc:	ldr	r3, [sp, #24]
   29cc0:	sub	r2, fp, #22
   29cc4:	str	r1, [sp, #16]
   29cc8:	mov	r1, r2
   29ccc:	ldr	r2, [sp, #16]
   29cd0:	uxth	r2, r2
   29cd4:	str	ip, [sp, #12]
   29cd8:	bl	29970 <flatcc_builder_embed_buffer@@Base+0x1e8>
   29cdc:	cmp	r0, #0
   29ce0:	beq	29cf0 <flatcc_builder_create_buffer@@Base+0xa8>
   29ce4:	movw	r0, #0
   29ce8:	str	r0, [fp, #-4]
   29cec:	b	29fd4 <flatcc_builder_create_buffer@@Base+0x38c>
   29cf0:	ldr	r0, [fp, #-8]
   29cf4:	ldrh	r1, [fp, #-22]	; 0xffffffea
   29cf8:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   29cfc:	ldr	r0, [fp, #-12]
   29d00:	movw	r1, #0
   29d04:	cmp	r0, r1
   29d08:	beq	29d48 <flatcc_builder_create_buffer@@Base+0x100>
   29d0c:	ldr	r0, [fp, #-12]
   29d10:	ldrb	r1, [r0]
   29d14:	strb	r1, [sp, #28]
   29d18:	ldrb	r1, [r0, #1]
   29d1c:	strb	r1, [sp, #29]
   29d20:	ldrb	r1, [r0, #2]
   29d24:	strb	r1, [sp, #30]
   29d28:	ldrb	r0, [r0, #3]
   29d2c:	strb	r0, [sp, #31]
   29d30:	ldr	r0, [sp, #28]
   29d34:	bl	2a024 <flatcc_builder_create_buffer@@Base+0x3dc>
   29d38:	str	r0, [sp, #28]
   29d3c:	ldr	r0, [sp, #28]
   29d40:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   29d44:	str	r0, [sp, #28]
   29d48:	ldr	r0, [sp, #28]
   29d4c:	cmp	r0, #0
   29d50:	movw	r0, #0
   29d54:	movne	r0, #1
   29d58:	tst	r0, #1
   29d5c:	movw	r0, #4
   29d60:	mov	r1, r0
   29d64:	moveq	r1, #0
   29d68:	str	r1, [fp, #-36]	; 0xffffffdc
   29d6c:	ldr	r1, [fp, #-8]
   29d70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29d74:	add	r2, r2, #4
   29d78:	ldr	r3, [sp, #20]
   29d7c:	cmp	r3, #0
   29d80:	movw	r3, #0
   29d84:	movne	r3, #1
   29d88:	tst	r3, #1
   29d8c:	moveq	r0, #0
   29d90:	add	r0, r2, r0
   29d94:	str	r0, [sp, #8]
   29d98:	mov	r0, r1
   29d9c:	ldr	r1, [sp, #8]
   29da0:	ldrh	r2, [fp, #-22]	; 0xffffffea
   29da4:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   29da8:	str	r0, [fp, #-32]	; 0xffffffe0
   29dac:	movw	r0, #0
   29db0:	str	r0, [sp, #32]
   29db4:	str	r0, [sp, #36]	; 0x24
   29db8:	ldr	r0, [sp, #24]
   29dbc:	cmp	r0, #0
   29dc0:	bne	29dd0 <flatcc_builder_create_buffer@@Base+0x188>
   29dc4:	ldr	r0, [sp, #20]
   29dc8:	cmp	r0, #0
   29dcc:	beq	29e0c <flatcc_builder_create_buffer@@Base+0x1c4>
   29dd0:	ldr	r0, [sp, #32]
   29dd4:	add	r0, r0, #4
   29dd8:	str	r0, [sp, #32]
   29ddc:	add	r0, sp, #32
   29de0:	add	r0, r0, #8
   29de4:	ldr	r1, [sp, #36]	; 0x24
   29de8:	sub	r2, fp, #44	; 0x2c
   29dec:	str	r2, [r0, r1, lsl #3]
   29df0:	ldr	r1, [sp, #36]	; 0x24
   29df4:	add	r0, r0, r1, lsl #3
   29df8:	movw	r1, #4
   29dfc:	str	r1, [r0, #4]
   29e00:	ldr	r0, [sp, #36]	; 0x24
   29e04:	add	r0, r0, #1
   29e08:	str	r0, [sp, #36]	; 0x24
   29e0c:	ldr	r0, [sp, #32]
   29e10:	add	r0, r0, #4
   29e14:	str	r0, [sp, #32]
   29e18:	add	r0, sp, #32
   29e1c:	add	r0, r0, #8
   29e20:	ldr	r1, [sp, #36]	; 0x24
   29e24:	sub	r2, fp, #40	; 0x28
   29e28:	str	r2, [r0, r1, lsl #3]
   29e2c:	ldr	r1, [sp, #36]	; 0x24
   29e30:	add	r0, r0, r1, lsl #3
   29e34:	movw	r1, #4
   29e38:	str	r1, [r0, #4]
   29e3c:	ldr	r0, [sp, #36]	; 0x24
   29e40:	add	r0, r0, #1
   29e44:	str	r0, [sp, #36]	; 0x24
   29e48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29e4c:	cmp	r0, #0
   29e50:	bls	29e94 <flatcc_builder_create_buffer@@Base+0x24c>
   29e54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29e58:	ldr	r1, [sp, #32]
   29e5c:	add	r0, r1, r0
   29e60:	str	r0, [sp, #32]
   29e64:	add	r0, sp, #32
   29e68:	add	r0, r0, #8
   29e6c:	ldr	r1, [sp, #36]	; 0x24
   29e70:	add	r2, sp, #28
   29e74:	str	r2, [r0, r1, lsl #3]
   29e78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   29e7c:	ldr	r2, [sp, #36]	; 0x24
   29e80:	add	r0, r0, r2, lsl #3
   29e84:	str	r1, [r0, #4]
   29e88:	ldr	r0, [sp, #36]	; 0x24
   29e8c:	add	r0, r0, #1
   29e90:	str	r0, [sp, #36]	; 0x24
   29e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e98:	cmp	r0, #0
   29e9c:	bls	29ee4 <flatcc_builder_create_buffer@@Base+0x29c>
   29ea0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ea4:	ldr	r1, [sp, #32]
   29ea8:	add	r0, r1, r0
   29eac:	str	r0, [sp, #32]
   29eb0:	add	r0, sp, #32
   29eb4:	add	r0, r0, #8
   29eb8:	ldr	r1, [sp, #36]	; 0x24
   29ebc:	ldr	r2, [pc, #296]	; 29fec <flatcc_builder_create_buffer@@Base+0x3a4>
   29ec0:	ldr	r2, [pc, r2]
   29ec4:	str	r2, [r0, r1, lsl #3]
   29ec8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   29ecc:	ldr	r2, [sp, #36]	; 0x24
   29ed0:	add	r0, r0, r2, lsl #3
   29ed4:	str	r1, [r0, #4]
   29ed8:	ldr	r0, [sp, #36]	; 0x24
   29edc:	add	r0, r0, #1
   29ee0:	str	r0, [sp, #36]	; 0x24
   29ee4:	ldr	r0, [fp, #-8]
   29ee8:	ldr	r0, [r0, #136]	; 0x88
   29eec:	ldr	r1, [sp, #32]
   29ef0:	sub	r0, r0, r1
   29ef4:	ldr	r1, [sp, #24]
   29ef8:	cmp	r1, #0
   29efc:	movw	r1, #1
   29f00:	str	r0, [sp, #4]
   29f04:	str	r1, [sp]
   29f08:	bne	29f20 <flatcc_builder_create_buffer@@Base+0x2d8>
   29f0c:	ldr	r0, [sp, #20]
   29f10:	cmp	r0, #0
   29f14:	movw	r0, #0
   29f18:	movne	r0, #1
   29f1c:	str	r0, [sp]
   29f20:	ldr	r0, [sp]
   29f24:	tst	r0, #1
   29f28:	movw	r0, #4
   29f2c:	moveq	r0, #0
   29f30:	ldr	r1, [sp, #4]
   29f34:	add	r0, r1, r0
   29f38:	str	r0, [fp, #-48]	; 0xffffffd0
   29f3c:	ldr	r0, [sp, #24]
   29f40:	cmp	r0, #0
   29f44:	beq	29f64 <flatcc_builder_create_buffer@@Base+0x31c>
   29f48:	ldr	r0, [fp, #-8]
   29f4c:	ldr	r0, [r0, #144]	; 0x90
   29f50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   29f54:	sub	r0, r0, r1
   29f58:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   29f5c:	str	r0, [fp, #-44]	; 0xffffffd4
   29f60:	b	29f7c <flatcc_builder_create_buffer@@Base+0x334>
   29f64:	ldr	r0, [fp, #-8]
   29f68:	ldr	r0, [r0, #140]	; 0x8c
   29f6c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   29f70:	sub	r0, r0, r1
   29f74:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   29f78:	str	r0, [fp, #-44]	; 0xffffffd4
   29f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29f80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   29f84:	sub	r0, r0, r1
   29f88:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   29f8c:	str	r0, [fp, #-40]	; 0xffffffd8
   29f90:	ldr	r0, [fp, #-8]
   29f94:	add	r1, sp, #32
   29f98:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   29f9c:	str	r0, [fp, #-28]	; 0xffffffe4
   29fa0:	movw	r1, #0
   29fa4:	cmp	r1, r0
   29fa8:	bne	29fcc <flatcc_builder_create_buffer@@Base+0x384>
   29fac:	ldr	r0, [pc, #44]	; 29fe0 <flatcc_builder_create_buffer@@Base+0x398>
   29fb0:	add	r0, pc, r0
   29fb4:	ldr	r1, [pc, #40]	; 29fe4 <flatcc_builder_create_buffer@@Base+0x39c>
   29fb8:	add	r1, pc, r1
   29fbc:	ldr	r2, [pc, #36]	; 29fe8 <flatcc_builder_create_buffer@@Base+0x3a0>
   29fc0:	add	r3, pc, r2
   29fc4:	movw	r2, #772	; 0x304
   29fc8:	bl	14f08 <__assert_fail@plt>
   29fcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   29fd0:	str	r0, [fp, #-4]
   29fd4:	ldr	r0, [fp, #-4]
   29fd8:	mov	sp, fp
   29fdc:	pop	{fp, pc}
   29fe0:	andeq	r0, r2, r1, asr r7
   29fe4:	andeq	pc, r1, ip, lsl #11
   29fe8:	ldrdeq	pc, [r1], -r6
   29fec:	andeq	r3, r3, r0, lsr #3
   29ff0:	sub	sp, sp, #8
   29ff4:	str	r0, [sp, #4]
   29ff8:	strh	r1, [sp, #2]
   29ffc:	ldr	r0, [sp, #4]
   2a000:	ldrh	r0, [r0, #128]	; 0x80
   2a004:	ldrh	r1, [sp, #2]
   2a008:	cmp	r0, r1
   2a00c:	bge	2a01c <flatcc_builder_create_buffer@@Base+0x3d4>
   2a010:	ldrh	r0, [sp, #2]
   2a014:	ldr	r1, [sp, #4]
   2a018:	strh	r0, [r1, #128]	; 0x80
   2a01c:	add	sp, sp, #8
   2a020:	bx	lr
   2a024:	sub	sp, sp, #4
   2a028:	str	r0, [sp]
   2a02c:	ldr	r0, [sp]
   2a030:	add	sp, sp, #4
   2a034:	bx	lr

0002a038 <flatcc_builder_create_struct@@Base>:
   2a038:	push	{fp, lr}
   2a03c:	mov	fp, sp
   2a040:	sub	sp, sp, #96	; 0x60
   2a044:	str	r0, [fp, #-4]
   2a048:	str	r1, [fp, #-8]
   2a04c:	str	r2, [fp, #-12]
   2a050:	strh	r3, [fp, #-14]
   2a054:	ldrh	r0, [fp, #-14]
   2a058:	cmp	r0, #1
   2a05c:	blt	2a064 <flatcc_builder_create_struct@@Base+0x2c>
   2a060:	b	2a084 <flatcc_builder_create_struct@@Base+0x4c>
   2a064:	ldr	r0, [pc, #244]	; 2a160 <flatcc_builder_create_struct@@Base+0x128>
   2a068:	add	r0, pc, r0
   2a06c:	ldr	r1, [pc, #240]	; 2a164 <flatcc_builder_create_struct@@Base+0x12c>
   2a070:	add	r1, pc, r1
   2a074:	ldr	r2, [pc, #236]	; 2a168 <flatcc_builder_create_struct@@Base+0x130>
   2a078:	add	r3, pc, r2
   2a07c:	movw	r2, #783	; 0x30f
   2a080:	bl	14f08 <__assert_fail@plt>
   2a084:	ldr	r0, [fp, #-4]
   2a088:	ldrh	r1, [fp, #-14]
   2a08c:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a090:	ldr	r0, [fp, #-4]
   2a094:	ldr	r1, [fp, #-12]
   2a098:	ldrh	r2, [fp, #-14]
   2a09c:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   2a0a0:	str	r0, [fp, #-20]	; 0xffffffec
   2a0a4:	movw	r0, #0
   2a0a8:	str	r0, [sp, #4]
   2a0ac:	str	r0, [sp, #8]
   2a0b0:	ldr	r0, [fp, #-12]
   2a0b4:	cmp	r0, #0
   2a0b8:	bls	2a0fc <flatcc_builder_create_struct@@Base+0xc4>
   2a0bc:	ldr	r0, [fp, #-12]
   2a0c0:	ldr	r1, [sp, #4]
   2a0c4:	add	r0, r1, r0
   2a0c8:	str	r0, [sp, #4]
   2a0cc:	ldr	r0, [fp, #-8]
   2a0d0:	add	r1, sp, #4
   2a0d4:	add	r1, r1, #8
   2a0d8:	ldr	r2, [sp, #8]
   2a0dc:	str	r0, [r1, r2, lsl #3]
   2a0e0:	ldr	r0, [fp, #-12]
   2a0e4:	ldr	r2, [sp, #8]
   2a0e8:	add	r1, r1, r2, lsl #3
   2a0ec:	str	r0, [r1, #4]
   2a0f0:	ldr	r0, [sp, #8]
   2a0f4:	add	r0, r0, #1
   2a0f8:	str	r0, [sp, #8]
   2a0fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a100:	cmp	r0, #0
   2a104:	bls	2a14c <flatcc_builder_create_struct@@Base+0x114>
   2a108:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a10c:	ldr	r1, [sp, #4]
   2a110:	add	r0, r1, r0
   2a114:	str	r0, [sp, #4]
   2a118:	add	r0, sp, #4
   2a11c:	add	r0, r0, #8
   2a120:	ldr	r1, [sp, #8]
   2a124:	ldr	r2, [pc, #64]	; 2a16c <flatcc_builder_create_struct@@Base+0x134>
   2a128:	ldr	r2, [pc, r2]
   2a12c:	str	r2, [r0, r1, lsl #3]
   2a130:	ldr	r1, [fp, #-20]	; 0xffffffec
   2a134:	ldr	r2, [sp, #8]
   2a138:	add	r0, r0, r2, lsl #3
   2a13c:	str	r1, [r0, #4]
   2a140:	ldr	r0, [sp, #8]
   2a144:	add	r0, r0, #1
   2a148:	str	r0, [sp, #8]
   2a14c:	ldr	r0, [fp, #-4]
   2a150:	add	r1, sp, #4
   2a154:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2a158:	mov	sp, fp
   2a15c:	pop	{fp, pc}
   2a160:			; <UNDEFINED> instruction: 0x0001f6b1
   2a164:	ldrdeq	pc, [r1], -r4
   2a168:	andeq	pc, r1, ip, lsr #13
   2a16c:	andeq	r2, r3, r8, lsr pc

0002a170 <flatcc_builder_start_buffer@@Base>:
   2a170:	push	{fp, lr}
   2a174:	mov	fp, sp
   2a178:	sub	sp, sp, #32
   2a17c:	str	r0, [fp, #-8]
   2a180:	str	r1, [fp, #-12]
   2a184:	strh	r2, [fp, #-14]
   2a188:	str	r3, [sp, #12]
   2a18c:	ldr	r0, [fp, #-8]
   2a190:	ldr	r1, [fp, #-8]
   2a194:	ldrh	r1, [r1, #128]	; 0x80
   2a198:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2a19c:	cmp	r0, #0
   2a1a0:	beq	2a1b0 <flatcc_builder_start_buffer@@Base+0x40>
   2a1a4:	mvn	r0, #0
   2a1a8:	str	r0, [fp, #-4]
   2a1ac:	b	2a2d8 <flatcc_builder_start_buffer@@Base+0x168>
   2a1b0:	ldr	r0, [fp, #-8]
   2a1b4:	movw	r1, #1
   2a1b8:	strh	r1, [r0, #128]	; 0x80
   2a1bc:	ldr	r0, [fp, #-8]
   2a1c0:	ldrh	r0, [r0, #132]	; 0x84
   2a1c4:	ldr	r1, [fp, #-8]
   2a1c8:	ldr	r1, [r1, #32]
   2a1cc:	strh	r0, [r1, #34]	; 0x22
   2a1d0:	ldrh	r0, [fp, #-14]
   2a1d4:	ldr	r1, [fp, #-8]
   2a1d8:	strh	r0, [r1, #132]	; 0x84
   2a1dc:	ldr	r0, [fp, #-8]
   2a1e0:	ldrh	r0, [r0, #164]	; 0xa4
   2a1e4:	ldr	r1, [fp, #-8]
   2a1e8:	ldr	r1, [r1, #32]
   2a1ec:	strh	r0, [r1, #32]
   2a1f0:	ldr	r0, [sp, #12]
   2a1f4:	ldr	r1, [fp, #-8]
   2a1f8:	strh	r0, [r1, #164]	; 0xa4
   2a1fc:	ldr	r0, [fp, #-8]
   2a200:	ldr	r0, [r0, #144]	; 0x90
   2a204:	ldr	r1, [fp, #-8]
   2a208:	ldr	r1, [r1, #32]
   2a20c:	str	r0, [r1, #20]
   2a210:	ldr	r0, [fp, #-8]
   2a214:	ldr	r0, [r0, #152]	; 0x98
   2a218:	ldr	r1, [fp, #-8]
   2a21c:	ldr	r1, [r1, #32]
   2a220:	str	r0, [r1, #28]
   2a224:	ldr	r0, [fp, #-8]
   2a228:	ldr	r0, [r0, #136]	; 0x88
   2a22c:	ldr	r1, [fp, #-8]
   2a230:	str	r0, [r1, #144]	; 0x90
   2a234:	ldr	r0, [fp, #-8]
   2a238:	ldr	r1, [r0, #148]	; 0x94
   2a23c:	add	r2, r1, #1
   2a240:	str	r2, [r0, #148]	; 0x94
   2a244:	ldr	r0, [fp, #-8]
   2a248:	str	r1, [r0, #152]	; 0x98
   2a24c:	ldr	r0, [fp, #-8]
   2a250:	ldr	r0, [r0, #168]	; 0xa8
   2a254:	ldr	r1, [fp, #-8]
   2a258:	ldr	r1, [r1, #32]
   2a25c:	str	r0, [r1, #16]
   2a260:	ldr	r0, [fp, #-8]
   2a264:	add	r0, r0, #168	; 0xa8
   2a268:	ldr	r1, [fp, #-12]
   2a26c:	movw	r2, #0
   2a270:	cmp	r1, r2
   2a274:	str	r0, [sp, #8]
   2a278:	beq	2a288 <flatcc_builder_start_buffer@@Base+0x118>
   2a27c:	ldr	r0, [fp, #-12]
   2a280:	str	r0, [sp, #4]
   2a284:	b	2a298 <flatcc_builder_start_buffer@@Base+0x128>
   2a288:	ldr	r0, [pc, #84]	; 2a2e4 <flatcc_builder_start_buffer@@Base+0x174>
   2a28c:	ldr	r0, [pc, r0]
   2a290:	str	r0, [sp, #4]
   2a294:	b	2a298 <flatcc_builder_start_buffer@@Base+0x128>
   2a298:	ldr	r0, [sp, #4]
   2a29c:	ldrb	r1, [r0]
   2a2a0:	ldr	r2, [sp, #8]
   2a2a4:	strb	r1, [r2]
   2a2a8:	ldrb	r1, [r0, #1]
   2a2ac:	strb	r1, [r2, #1]
   2a2b0:	ldrb	r1, [r0, #2]
   2a2b4:	strb	r1, [r2, #2]
   2a2b8:	ldrb	r0, [r0, #3]
   2a2bc:	strb	r0, [r2, #3]
   2a2c0:	ldr	r0, [fp, #-8]
   2a2c4:	ldr	r0, [r0, #32]
   2a2c8:	movw	r1, #1
   2a2cc:	strh	r1, [r0, #14]
   2a2d0:	movw	r0, #0
   2a2d4:	str	r0, [fp, #-4]
   2a2d8:	ldr	r0, [fp, #-4]
   2a2dc:	mov	sp, fp
   2a2e0:	pop	{fp, pc}
   2a2e4:	ldrdeq	r2, [r3], -r4
   2a2e8:	push	{fp, lr}
   2a2ec:	mov	fp, sp
   2a2f0:	sub	sp, sp, #24
   2a2f4:	str	r0, [fp, #-8]
   2a2f8:	strh	r1, [fp, #-10]
   2a2fc:	ldr	r0, [fp, #-8]
   2a300:	ldr	r1, [r0, #156]	; 0x9c
   2a304:	add	r1, r1, #1
   2a308:	str	r1, [r0, #156]	; 0x9c
   2a30c:	ldr	r0, [fp, #-8]
   2a310:	ldr	r0, [r0, #160]	; 0xa0
   2a314:	cmp	r1, r0
   2a318:	ble	2a404 <flatcc_builder_start_buffer@@Base+0x294>
   2a31c:	ldr	r0, [fp, #-8]
   2a320:	ldr	r0, [r0, #176]	; 0xb0
   2a324:	cmp	r0, #0
   2a328:	ble	2a350 <flatcc_builder_start_buffer@@Base+0x1e0>
   2a32c:	ldr	r0, [fp, #-8]
   2a330:	ldr	r0, [r0, #156]	; 0x9c
   2a334:	ldr	r1, [fp, #-8]
   2a338:	ldr	r1, [r1, #176]	; 0xb0
   2a33c:	cmp	r0, r1
   2a340:	ble	2a350 <flatcc_builder_start_buffer@@Base+0x1e0>
   2a344:	mvn	r0, #0
   2a348:	str	r0, [fp, #-4]
   2a34c:	b	2a4a8 <flatcc_builder_start_buffer@@Base+0x338>
   2a350:	ldr	r0, [fp, #-8]
   2a354:	ldr	r1, [fp, #-8]
   2a358:	ldr	r1, [r1, #156]	; 0x9c
   2a35c:	sub	r1, r1, #1
   2a360:	movw	r2, #36	; 0x24
   2a364:	mul	r1, r1, r2
   2a368:	movw	r3, #4
   2a36c:	str	r1, [sp, #8]
   2a370:	mov	r1, r3
   2a374:	ldr	r3, [sp, #8]
   2a378:	str	r2, [sp, #4]
   2a37c:	mov	r2, r3
   2a380:	ldr	r3, [sp, #4]
   2a384:	movw	ip, #0
   2a388:	str	ip, [sp]
   2a38c:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2a390:	ldr	r1, [fp, #-8]
   2a394:	str	r0, [r1, #32]
   2a398:	movw	r1, #0
   2a39c:	cmp	r0, r1
   2a3a0:	bne	2a3b0 <flatcc_builder_start_buffer@@Base+0x240>
   2a3a4:	mvn	r0, #0
   2a3a8:	str	r0, [fp, #-4]
   2a3ac:	b	2a4a8 <flatcc_builder_start_buffer@@Base+0x338>
   2a3b0:	ldr	r0, [fp, #-8]
   2a3b4:	ldr	r0, [r0, #88]	; 0x58
   2a3b8:	movw	r1, #36	; 0x24
   2a3bc:	udiv	r0, r0, r1
   2a3c0:	ldr	r1, [fp, #-8]
   2a3c4:	str	r0, [r1, #160]	; 0xa0
   2a3c8:	ldr	r0, [fp, #-8]
   2a3cc:	ldr	r0, [r0, #176]	; 0xb0
   2a3d0:	cmp	r0, #0
   2a3d4:	ble	2a400 <flatcc_builder_start_buffer@@Base+0x290>
   2a3d8:	ldr	r0, [fp, #-8]
   2a3dc:	ldr	r0, [r0, #176]	; 0xb0
   2a3e0:	ldr	r1, [fp, #-8]
   2a3e4:	ldr	r1, [r1, #160]	; 0xa0
   2a3e8:	cmp	r0, r1
   2a3ec:	bge	2a400 <flatcc_builder_start_buffer@@Base+0x290>
   2a3f0:	ldr	r0, [fp, #-8]
   2a3f4:	ldr	r0, [r0, #176]	; 0xb0
   2a3f8:	ldr	r1, [fp, #-8]
   2a3fc:	str	r0, [r1, #160]	; 0xa0
   2a400:	b	2a414 <flatcc_builder_start_buffer@@Base+0x2a4>
   2a404:	ldr	r0, [fp, #-8]
   2a408:	ldr	r1, [r0, #32]
   2a40c:	add	r1, r1, #36	; 0x24
   2a410:	str	r1, [r0, #32]
   2a414:	ldr	r0, [fp, #-8]
   2a418:	ldr	r0, [r0, #20]
   2a41c:	ldr	r1, [fp, #-8]
   2a420:	ldr	r1, [r1, #32]
   2a424:	str	r0, [r1, #8]
   2a428:	ldr	r0, [fp, #-8]
   2a42c:	ldrh	r0, [r0, #130]	; 0x82
   2a430:	ldr	r1, [fp, #-8]
   2a434:	ldr	r1, [r1, #32]
   2a438:	strh	r0, [r1, #12]
   2a43c:	ldrh	r0, [fp, #-10]
   2a440:	ldr	r1, [fp, #-8]
   2a444:	strh	r0, [r1, #130]	; 0x82
   2a448:	ldr	r0, [fp, #-8]
   2a44c:	ldr	r0, [r0, #28]
   2a450:	ldr	r1, [fp, #-8]
   2a454:	ldr	r1, [r1, #32]
   2a458:	str	r0, [r1]
   2a45c:	ldr	r0, [fp, #-8]
   2a460:	ldr	r0, [r0, #32]
   2a464:	mvn	r1, #3
   2a468:	str	r1, [r0, #4]
   2a46c:	ldr	r0, [fp, #-8]
   2a470:	ldr	r0, [r0, #28]
   2a474:	ldr	r1, [fp, #-8]
   2a478:	ldr	r1, [r1, #20]
   2a47c:	add	r0, r0, r1
   2a480:	add	r0, r0, #8
   2a484:	sub	r0, r0, #1
   2a488:	mvn	r1, #7
   2a48c:	and	r0, r0, r1
   2a490:	ldr	r1, [fp, #-8]
   2a494:	str	r0, [r1, #28]
   2a498:	ldr	r0, [fp, #-8]
   2a49c:	movw	r1, #0
   2a4a0:	str	r1, [r0, #20]
   2a4a4:	str	r1, [fp, #-4]
   2a4a8:	ldr	r0, [fp, #-4]
   2a4ac:	mov	sp, fp
   2a4b0:	pop	{fp, pc}

0002a4b4 <flatcc_builder_end_buffer@@Base>:
   2a4b4:	push	{fp, lr}
   2a4b8:	mov	fp, sp
   2a4bc:	sub	sp, sp, #32
   2a4c0:	str	r0, [fp, #-8]
   2a4c4:	str	r1, [fp, #-12]
   2a4c8:	ldr	r0, [fp, #-8]
   2a4cc:	ldrh	r0, [r0, #164]	; 0xa4
   2a4d0:	and	r0, r0, #2
   2a4d4:	str	r0, [sp, #12]
   2a4d8:	ldr	r0, [fp, #-8]
   2a4dc:	ldr	r0, [r0, #152]	; 0x98
   2a4e0:	cmp	r0, #0
   2a4e4:	movw	r0, #0
   2a4e8:	moveq	r0, #1
   2a4ec:	tst	r0, #1
   2a4f0:	movw	r0, #0
   2a4f4:	moveq	r0, #1
   2a4f8:	ldr	r1, [sp, #12]
   2a4fc:	orr	r0, r1, r0
   2a500:	str	r0, [sp, #12]
   2a504:	ldr	r0, [fp, #-8]
   2a508:	ldr	r0, [r0, #32]
   2a50c:	ldrh	r0, [r0, #14]
   2a510:	cmp	r0, #1
   2a514:	bne	2a51c <flatcc_builder_end_buffer@@Base+0x68>
   2a518:	b	2a53c <flatcc_builder_end_buffer@@Base+0x88>
   2a51c:	ldr	r0, [pc, #232]	; 2a60c <flatcc_builder_end_buffer@@Base+0x158>
   2a520:	add	r0, pc, r0
   2a524:	ldr	r1, [pc, #228]	; 2a610 <flatcc_builder_end_buffer@@Base+0x15c>
   2a528:	add	r1, pc, r1
   2a52c:	ldr	r2, [pc, #224]	; 2a614 <flatcc_builder_end_buffer@@Base+0x160>
   2a530:	add	r3, pc, r2
   2a534:	movw	r2, #838	; 0x346
   2a538:	bl	14f08 <__assert_fail@plt>
   2a53c:	ldr	r0, [fp, #-8]
   2a540:	ldr	r1, [fp, #-8]
   2a544:	ldrh	r1, [r1, #132]	; 0x84
   2a548:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a54c:	ldr	r0, [fp, #-8]
   2a550:	ldr	r1, [fp, #-8]
   2a554:	add	r1, r1, #168	; 0xa8
   2a558:	ldr	r2, [fp, #-8]
   2a55c:	ldrh	r2, [r2, #132]	; 0x84
   2a560:	ldr	r3, [fp, #-12]
   2a564:	ldr	ip, [fp, #-8]
   2a568:	ldrh	ip, [ip, #128]	; 0x80
   2a56c:	ldr	lr, [sp, #12]
   2a570:	uxth	r2, r2
   2a574:	uxth	ip, ip
   2a578:	str	ip, [sp]
   2a57c:	str	lr, [sp, #4]
   2a580:	bl	29c48 <flatcc_builder_create_buffer@@Base>
   2a584:	str	r0, [sp, #16]
   2a588:	movw	r1, #0
   2a58c:	cmp	r1, r0
   2a590:	bne	2a5a0 <flatcc_builder_end_buffer@@Base+0xec>
   2a594:	movw	r0, #0
   2a598:	str	r0, [fp, #-4]
   2a59c:	b	2a600 <flatcc_builder_end_buffer@@Base+0x14c>
   2a5a0:	ldr	r0, [fp, #-8]
   2a5a4:	ldr	r0, [r0, #32]
   2a5a8:	ldr	r0, [r0, #20]
   2a5ac:	ldr	r1, [fp, #-8]
   2a5b0:	str	r0, [r1, #144]	; 0x90
   2a5b4:	ldr	r0, [fp, #-8]
   2a5b8:	ldr	r0, [r0, #32]
   2a5bc:	ldr	r0, [r0, #28]
   2a5c0:	ldr	r1, [fp, #-8]
   2a5c4:	str	r0, [r1, #152]	; 0x98
   2a5c8:	ldr	r0, [fp, #-8]
   2a5cc:	ldr	r0, [r0, #32]
   2a5d0:	ldr	r0, [r0, #16]
   2a5d4:	ldr	r1, [fp, #-8]
   2a5d8:	str	r0, [r1, #168]	; 0xa8
   2a5dc:	ldr	r0, [fp, #-8]
   2a5e0:	ldr	r0, [r0, #32]
   2a5e4:	ldrh	r0, [r0, #32]
   2a5e8:	ldr	r1, [fp, #-8]
   2a5ec:	strh	r0, [r1, #164]	; 0xa4
   2a5f0:	ldr	r0, [fp, #-8]
   2a5f4:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2a5f8:	ldr	r0, [sp, #16]
   2a5fc:	str	r0, [fp, #-4]
   2a600:	ldr	r0, [fp, #-4]
   2a604:	mov	sp, fp
   2a608:	pop	{fp, pc}
   2a60c:	andeq	pc, r1, sl, ror #4
   2a610:	andeq	pc, r1, ip, lsl r0	; <UNPREDICTABLE>
   2a614:	andeq	pc, r1, r6, lsl #5
   2a618:	push	{fp, lr}
   2a61c:	mov	fp, sp
   2a620:	sub	sp, sp, #8
   2a624:	str	r0, [sp, #4]
   2a628:	ldr	r0, [sp, #4]
   2a62c:	ldr	r0, [r0, #16]
   2a630:	ldr	r1, [sp, #4]
   2a634:	ldr	r2, [r1, #20]
   2a638:	movw	r1, #0
   2a63c:	and	r1, r1, #255	; 0xff
   2a640:	bl	14ec0 <memset@plt>
   2a644:	ldr	r0, [sp, #4]
   2a648:	ldr	r0, [r0, #32]
   2a64c:	ldr	r0, [r0, #8]
   2a650:	ldr	r1, [sp, #4]
   2a654:	str	r0, [r1, #20]
   2a658:	ldr	r0, [sp, #4]
   2a65c:	ldr	r0, [r0, #32]
   2a660:	ldr	r0, [r0]
   2a664:	ldr	r1, [sp, #4]
   2a668:	str	r0, [r1, #28]
   2a66c:	ldr	r0, [sp, #4]
   2a670:	ldr	r1, [sp, #4]
   2a674:	ldr	r1, [r1, #32]
   2a678:	ldr	r1, [r1, #4]
   2a67c:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2a680:	ldr	r0, [sp, #4]
   2a684:	ldr	r1, [sp, #4]
   2a688:	ldrh	r1, [r1, #130]	; 0x82
   2a68c:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2a690:	ldr	r0, [sp, #4]
   2a694:	ldr	r0, [r0, #32]
   2a698:	ldrh	r0, [r0, #12]
   2a69c:	ldr	r1, [sp, #4]
   2a6a0:	strh	r0, [r1, #130]	; 0x82
   2a6a4:	ldr	r0, [sp, #4]
   2a6a8:	ldr	r1, [r0, #32]
   2a6ac:	mvn	r2, #35	; 0x23
   2a6b0:	add	r1, r1, r2
   2a6b4:	str	r1, [r0, #32]
   2a6b8:	ldr	r0, [sp, #4]
   2a6bc:	ldr	r1, [r0, #156]	; 0x9c
   2a6c0:	mvn	r2, #0
   2a6c4:	add	r1, r1, r2
   2a6c8:	str	r1, [r0, #156]	; 0x9c
   2a6cc:	mov	sp, fp
   2a6d0:	pop	{fp, pc}

0002a6d4 <flatcc_builder_start_struct@@Base>:
   2a6d4:	push	{fp, lr}
   2a6d8:	mov	fp, sp
   2a6dc:	sub	sp, sp, #16
   2a6e0:	str	r0, [sp, #8]
   2a6e4:	str	r1, [sp, #4]
   2a6e8:	strh	r2, [sp, #2]
   2a6ec:	ldr	r0, [sp, #8]
   2a6f0:	ldrh	r1, [sp, #2]
   2a6f4:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2a6f8:	cmp	r0, #0
   2a6fc:	beq	2a70c <flatcc_builder_start_struct@@Base+0x38>
   2a700:	movw	r0, #0
   2a704:	str	r0, [fp, #-4]
   2a708:	b	2a738 <flatcc_builder_start_struct@@Base+0x64>
   2a70c:	ldr	r0, [sp, #8]
   2a710:	ldr	r0, [r0, #32]
   2a714:	movw	r1, #2
   2a718:	strh	r1, [r0, #14]
   2a71c:	ldr	r0, [sp, #8]
   2a720:	mvn	r1, #3
   2a724:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2a728:	ldr	r0, [sp, #8]
   2a72c:	ldr	r1, [sp, #4]
   2a730:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2a734:	str	r0, [fp, #-4]
   2a738:	ldr	r0, [fp, #-4]
   2a73c:	mov	sp, fp
   2a740:	pop	{fp, pc}
   2a744:	sub	sp, sp, #12
   2a748:	str	r0, [sp, #8]
   2a74c:	str	r1, [sp, #4]
   2a750:	ldr	r0, [sp, #8]
   2a754:	add	r0, r0, #52	; 0x34
   2a758:	add	r0, r0, #8
   2a75c:	str	r0, [sp]
   2a760:	ldr	r0, [sp, #8]
   2a764:	ldr	r0, [r0, #60]	; 0x3c
   2a768:	ldr	r1, [sp, #8]
   2a76c:	ldr	r1, [r1, #28]
   2a770:	add	r0, r0, r1
   2a774:	ldr	r1, [sp, #8]
   2a778:	str	r0, [r1, #16]
   2a77c:	ldr	r0, [sp]
   2a780:	ldr	r0, [r0, #4]
   2a784:	ldr	r1, [sp, #8]
   2a788:	ldr	r1, [r1, #28]
   2a78c:	sub	r0, r0, r1
   2a790:	ldr	r1, [sp, #8]
   2a794:	str	r0, [r1, #24]
   2a798:	ldr	r0, [sp, #8]
   2a79c:	ldr	r0, [r0, #24]
   2a7a0:	ldr	r1, [sp, #4]
   2a7a4:	cmp	r0, r1
   2a7a8:	bls	2a7b8 <flatcc_builder_start_struct@@Base+0xe4>
   2a7ac:	ldr	r0, [sp, #4]
   2a7b0:	ldr	r1, [sp, #8]
   2a7b4:	str	r0, [r1, #24]
   2a7b8:	ldr	r0, [sp, #4]
   2a7bc:	ldr	r1, [sp, #8]
   2a7c0:	ldr	r1, [r1, #32]
   2a7c4:	str	r0, [r1, #4]
   2a7c8:	add	sp, sp, #12
   2a7cc:	bx	lr
   2a7d0:	push	{fp, lr}
   2a7d4:	mov	fp, sp
   2a7d8:	sub	sp, sp, #16
   2a7dc:	str	r0, [sp, #8]
   2a7e0:	str	r1, [sp, #4]
   2a7e4:	ldr	r0, [sp, #8]
   2a7e8:	ldr	r0, [r0, #20]
   2a7ec:	str	r0, [sp]
   2a7f0:	ldr	r0, [sp, #4]
   2a7f4:	ldr	r1, [sp, #8]
   2a7f8:	ldr	r2, [r1, #20]
   2a7fc:	add	r0, r2, r0
   2a800:	str	r0, [r1, #20]
   2a804:	ldr	r1, [sp, #8]
   2a808:	ldr	r1, [r1, #24]
   2a80c:	cmp	r0, r1
   2a810:	bcc	2a844 <flatcc_builder_start_struct@@Base+0x170>
   2a814:	ldr	r0, [sp, #8]
   2a818:	ldr	r1, [sp, #8]
   2a81c:	ldr	r1, [r1, #20]
   2a820:	add	r1, r1, #1
   2a824:	mvn	r2, #3
   2a828:	bl	2e92c <flatcc_builder_get_emit_context@@Base+0x40>
   2a82c:	cmp	r0, #0
   2a830:	beq	2a840 <flatcc_builder_start_struct@@Base+0x16c>
   2a834:	movw	r0, #0
   2a838:	str	r0, [fp, #-4]
   2a83c:	b	2a858 <flatcc_builder_start_struct@@Base+0x184>
   2a840:	b	2a844 <flatcc_builder_start_struct@@Base+0x170>
   2a844:	ldr	r0, [sp, #8]
   2a848:	ldr	r0, [r0, #16]
   2a84c:	ldr	r1, [sp]
   2a850:	add	r0, r0, r1
   2a854:	str	r0, [fp, #-4]
   2a858:	ldr	r0, [fp, #-4]
   2a85c:	mov	sp, fp
   2a860:	pop	{fp, pc}

0002a864 <flatcc_builder_struct_edit@@Base>:
   2a864:	sub	sp, sp, #4
   2a868:	str	r0, [sp]
   2a86c:	ldr	r0, [sp]
   2a870:	ldr	r0, [r0, #16]
   2a874:	add	sp, sp, #4
   2a878:	bx	lr

0002a87c <flatcc_builder_end_struct@@Base>:
   2a87c:	push	{fp, lr}
   2a880:	mov	fp, sp
   2a884:	sub	sp, sp, #16
   2a888:	str	r0, [sp, #8]
   2a88c:	ldr	r0, [sp, #8]
   2a890:	ldr	r0, [r0, #32]
   2a894:	ldrh	r0, [r0, #14]
   2a898:	cmp	r0, #2
   2a89c:	bne	2a8a4 <flatcc_builder_end_struct@@Base+0x28>
   2a8a0:	b	2a8c4 <flatcc_builder_end_struct@@Base+0x48>
   2a8a4:	ldr	r0, [pc, #112]	; 2a91c <flatcc_builder_end_struct@@Base+0xa0>
   2a8a8:	add	r0, pc, r0
   2a8ac:	ldr	r1, [pc, #108]	; 2a920 <flatcc_builder_end_struct@@Base+0xa4>
   2a8b0:	add	r1, pc, r1
   2a8b4:	ldr	r2, [pc, #104]	; 2a924 <flatcc_builder_end_struct@@Base+0xa8>
   2a8b8:	add	r3, pc, r2
   2a8bc:	movw	r2, #872	; 0x368
   2a8c0:	bl	14f08 <__assert_fail@plt>
   2a8c4:	ldr	r0, [sp, #8]
   2a8c8:	ldr	r1, [sp, #8]
   2a8cc:	ldr	r1, [r1, #16]
   2a8d0:	ldr	r2, [sp, #8]
   2a8d4:	ldr	r2, [r2, #20]
   2a8d8:	ldr	r3, [sp, #8]
   2a8dc:	ldrh	r3, [r3, #130]	; 0x82
   2a8e0:	bl	2a038 <flatcc_builder_create_struct@@Base>
   2a8e4:	str	r0, [sp, #4]
   2a8e8:	movw	r1, #0
   2a8ec:	cmp	r1, r0
   2a8f0:	bne	2a900 <flatcc_builder_end_struct@@Base+0x84>
   2a8f4:	movw	r0, #0
   2a8f8:	str	r0, [fp, #-4]
   2a8fc:	b	2a910 <flatcc_builder_end_struct@@Base+0x94>
   2a900:	ldr	r0, [sp, #8]
   2a904:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2a908:	ldr	r0, [sp, #4]
   2a90c:	str	r0, [fp, #-4]
   2a910:	ldr	r0, [fp, #-4]
   2a914:	mov	sp, fp
   2a918:	pop	{fp, pc}
   2a91c:	andeq	lr, r1, r7, ror #30
   2a920:	muleq	r1, r4, ip
   2a924:	andeq	lr, r1, r3, lsl #31

0002a928 <flatcc_builder_extend_vector@@Base>:
   2a928:	push	{fp, lr}
   2a92c:	mov	fp, sp
   2a930:	sub	sp, sp, #16
   2a934:	str	r0, [sp, #8]
   2a938:	str	r1, [sp, #4]
   2a93c:	ldr	r0, [sp, #8]
   2a940:	ldr	r1, [sp, #4]
   2a944:	ldr	r2, [sp, #8]
   2a948:	ldr	r2, [r2, #32]
   2a94c:	ldr	r2, [r2, #24]
   2a950:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2a954:	cmp	r0, #0
   2a958:	beq	2a968 <flatcc_builder_extend_vector@@Base+0x40>
   2a95c:	movw	r0, #0
   2a960:	str	r0, [fp, #-4]
   2a964:	b	2a988 <flatcc_builder_extend_vector@@Base+0x60>
   2a968:	ldr	r0, [sp, #8]
   2a96c:	ldr	r1, [sp, #8]
   2a970:	ldr	r1, [r1, #32]
   2a974:	ldr	r1, [r1, #16]
   2a978:	ldr	r2, [sp, #4]
   2a97c:	mul	r1, r1, r2
   2a980:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2a984:	str	r0, [fp, #-4]
   2a988:	ldr	r0, [fp, #-4]
   2a98c:	mov	sp, fp
   2a990:	pop	{fp, pc}
   2a994:	push	{fp, lr}
   2a998:	mov	fp, sp
   2a99c:	sub	sp, sp, #24
   2a9a0:	str	r0, [fp, #-8]
   2a9a4:	str	r1, [sp, #12]
   2a9a8:	str	r2, [sp, #8]
   2a9ac:	ldr	r0, [fp, #-8]
   2a9b0:	ldr	r0, [r0, #32]
   2a9b4:	ldr	r0, [r0, #20]
   2a9b8:	str	r0, [sp, #4]
   2a9bc:	ldr	r0, [sp, #4]
   2a9c0:	ldr	r1, [sp, #12]
   2a9c4:	add	r0, r0, r1
   2a9c8:	str	r0, [sp]
   2a9cc:	ldr	r0, [sp, #4]
   2a9d0:	ldr	r1, [sp]
   2a9d4:	cmp	r0, r1
   2a9d8:	bhi	2a9ec <flatcc_builder_extend_vector@@Base+0xc4>
   2a9dc:	ldr	r0, [sp]
   2a9e0:	ldr	r1, [sp, #8]
   2a9e4:	cmp	r0, r1
   2a9e8:	bls	2aa3c <flatcc_builder_extend_vector@@Base+0x114>
   2a9ec:	ldr	r0, [sp, #4]
   2a9f0:	ldr	r1, [sp]
   2a9f4:	cmp	r0, r1
   2a9f8:	bhi	2aa10 <flatcc_builder_extend_vector@@Base+0xe8>
   2a9fc:	ldr	r0, [sp]
   2aa00:	ldr	r1, [sp, #8]
   2aa04:	cmp	r0, r1
   2aa08:	bhi	2aa10 <flatcc_builder_extend_vector@@Base+0xe8>
   2aa0c:	b	2aa30 <flatcc_builder_extend_vector@@Base+0x108>
   2aa10:	ldr	r0, [pc, #72]	; 2aa60 <flatcc_builder_extend_vector@@Base+0x138>
   2aa14:	add	r0, pc, r0
   2aa18:	ldr	r1, [pc, #68]	; 2aa64 <flatcc_builder_extend_vector@@Base+0x13c>
   2aa1c:	add	r1, pc, r1
   2aa20:	ldr	r2, [pc, #64]	; 2aa68 <flatcc_builder_extend_vector@@Base+0x140>
   2aa24:	add	r3, pc, r2
   2aa28:	movw	r2, #892	; 0x37c
   2aa2c:	bl	14f08 <__assert_fail@plt>
   2aa30:	mvn	r0, #0
   2aa34:	str	r0, [fp, #-4]
   2aa38:	b	2aa54 <flatcc_builder_extend_vector@@Base+0x12c>
   2aa3c:	ldr	r0, [sp]
   2aa40:	ldr	r1, [fp, #-8]
   2aa44:	ldr	r1, [r1, #32]
   2aa48:	str	r0, [r1, #20]
   2aa4c:	movw	r0, #0
   2aa50:	str	r0, [fp, #-4]
   2aa54:	ldr	r0, [fp, #-4]
   2aa58:	mov	sp, fp
   2aa5c:	pop	{fp, pc}
   2aa60:	strdeq	pc, [r1], -r6
   2aa64:	andeq	lr, r1, r8, lsr #22
   2aa68:	andeq	pc, r1, r1, lsl #24

0002aa6c <flatcc_builder_vector_push@@Base>:
   2aa6c:	push	{fp, lr}
   2aa70:	mov	fp, sp
   2aa74:	sub	sp, sp, #16
   2aa78:	str	r0, [sp, #8]
   2aa7c:	str	r1, [sp, #4]
   2aa80:	ldr	r0, [sp, #8]
   2aa84:	ldr	r0, [r0, #32]
   2aa88:	ldrh	r0, [r0, #14]
   2aa8c:	cmp	r0, #4
   2aa90:	bne	2aa98 <flatcc_builder_vector_push@@Base+0x2c>
   2aa94:	b	2aab8 <flatcc_builder_vector_push@@Base+0x4c>
   2aa98:	ldr	r0, [pc, #196]	; 2ab64 <flatcc_builder_vector_push@@Base+0xf8>
   2aa9c:	add	r0, pc, r0
   2aaa0:	ldr	r1, [pc, #192]	; 2ab68 <flatcc_builder_vector_push@@Base+0xfc>
   2aaa4:	add	r1, pc, r1
   2aaa8:	ldr	r2, [pc, #188]	; 2ab6c <flatcc_builder_vector_push@@Base+0x100>
   2aaac:	add	r3, pc, r2
   2aab0:	movw	r2, #907	; 0x38b
   2aab4:	bl	14f08 <__assert_fail@plt>
   2aab8:	ldr	r0, [sp, #8]
   2aabc:	ldr	r0, [r0, #32]
   2aac0:	ldr	r0, [r0, #20]
   2aac4:	ldr	r1, [sp, #8]
   2aac8:	ldr	r1, [r1, #32]
   2aacc:	ldr	r1, [r1, #24]
   2aad0:	cmp	r0, r1
   2aad4:	bls	2ab28 <flatcc_builder_vector_push@@Base+0xbc>
   2aad8:	ldr	r0, [sp, #8]
   2aadc:	ldr	r0, [r0, #32]
   2aae0:	ldr	r0, [r0, #20]
   2aae4:	ldr	r1, [sp, #8]
   2aae8:	ldr	r1, [r1, #32]
   2aaec:	ldr	r1, [r1, #24]
   2aaf0:	cmp	r0, r1
   2aaf4:	bhi	2aafc <flatcc_builder_vector_push@@Base+0x90>
   2aaf8:	b	2ab1c <flatcc_builder_vector_push@@Base+0xb0>
   2aafc:	ldr	r0, [pc, #108]	; 2ab70 <flatcc_builder_vector_push@@Base+0x104>
   2ab00:	add	r0, pc, r0
   2ab04:	ldr	r1, [pc, #104]	; 2ab74 <flatcc_builder_vector_push@@Base+0x108>
   2ab08:	add	r1, pc, r1
   2ab0c:	ldr	r2, [pc, #100]	; 2ab78 <flatcc_builder_vector_push@@Base+0x10c>
   2ab10:	add	r3, pc, r2
   2ab14:	movw	r2, #908	; 0x38c
   2ab18:	bl	14f08 <__assert_fail@plt>
   2ab1c:	movw	r0, #0
   2ab20:	str	r0, [fp, #-4]
   2ab24:	b	2ab58 <flatcc_builder_vector_push@@Base+0xec>
   2ab28:	ldr	r0, [sp, #8]
   2ab2c:	ldr	r0, [r0, #32]
   2ab30:	ldr	r1, [r0, #20]
   2ab34:	add	r1, r1, #1
   2ab38:	str	r1, [r0, #20]
   2ab3c:	ldr	r0, [sp, #8]
   2ab40:	ldr	r1, [sp, #4]
   2ab44:	ldr	r2, [sp, #8]
   2ab48:	ldr	r2, [r2, #32]
   2ab4c:	ldr	r2, [r2, #16]
   2ab50:	bl	2ab7c <flatcc_builder_vector_push@@Base+0x110>
   2ab54:	str	r0, [fp, #-4]
   2ab58:	ldr	r0, [fp, #-4]
   2ab5c:	mov	sp, fp
   2ab60:	pop	{fp, pc}
   2ab64:	andeq	lr, r1, r2, ror #27
   2ab68:	andeq	lr, r1, r0, lsr #21
   2ab6c:	strdeq	lr, [r1], -lr	; <UNPREDICTABLE>
   2ab70:	andeq	lr, r1, sp, ror #27
   2ab74:	andeq	lr, r1, ip, lsr sl
   2ab78:	muleq	r1, sl, sp
   2ab7c:	push	{fp, lr}
   2ab80:	mov	fp, sp
   2ab84:	sub	sp, sp, #24
   2ab88:	str	r0, [fp, #-8]
   2ab8c:	str	r1, [sp, #12]
   2ab90:	str	r2, [sp, #8]
   2ab94:	ldr	r0, [fp, #-8]
   2ab98:	ldr	r1, [sp, #8]
   2ab9c:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2aba0:	str	r0, [sp, #4]
   2aba4:	movw	r1, #0
   2aba8:	cmp	r0, r1
   2abac:	bne	2abbc <flatcc_builder_vector_push@@Base+0x150>
   2abb0:	movw	r0, #0
   2abb4:	str	r0, [fp, #-4]
   2abb8:	b	2abd4 <flatcc_builder_vector_push@@Base+0x168>
   2abbc:	ldr	r0, [sp, #4]
   2abc0:	ldr	r1, [sp, #12]
   2abc4:	ldr	r2, [sp, #8]
   2abc8:	bl	14e30 <memcpy@plt>
   2abcc:	ldr	r0, [sp, #4]
   2abd0:	str	r0, [fp, #-4]
   2abd4:	ldr	r0, [fp, #-4]
   2abd8:	mov	sp, fp
   2abdc:	pop	{fp, pc}

0002abe0 <flatcc_builder_append_vector@@Base>:
   2abe0:	push	{fp, lr}
   2abe4:	mov	fp, sp
   2abe8:	sub	sp, sp, #16
   2abec:	str	r0, [sp, #8]
   2abf0:	str	r1, [sp, #4]
   2abf4:	str	r2, [sp]
   2abf8:	ldr	r0, [sp, #8]
   2abfc:	ldr	r0, [r0, #32]
   2ac00:	ldrh	r0, [r0, #14]
   2ac04:	cmp	r0, #4
   2ac08:	bne	2ac10 <flatcc_builder_append_vector@@Base+0x30>
   2ac0c:	b	2ac30 <flatcc_builder_append_vector@@Base+0x50>
   2ac10:	ldr	r0, [pc, #116]	; 2ac8c <flatcc_builder_append_vector@@Base+0xac>
   2ac14:	add	r0, pc, r0
   2ac18:	ldr	r1, [pc, #112]	; 2ac90 <flatcc_builder_append_vector@@Base+0xb0>
   2ac1c:	add	r1, pc, r1
   2ac20:	ldr	r2, [pc, #108]	; 2ac94 <flatcc_builder_append_vector@@Base+0xb4>
   2ac24:	add	r3, pc, r2
   2ac28:	movw	r2, #915	; 0x393
   2ac2c:	bl	14f08 <__assert_fail@plt>
   2ac30:	ldr	r0, [sp, #8]
   2ac34:	ldr	r1, [sp]
   2ac38:	ldr	r2, [sp, #8]
   2ac3c:	ldr	r2, [r2, #32]
   2ac40:	ldr	r2, [r2, #24]
   2ac44:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2ac48:	cmp	r0, #0
   2ac4c:	beq	2ac5c <flatcc_builder_append_vector@@Base+0x7c>
   2ac50:	movw	r0, #0
   2ac54:	str	r0, [fp, #-4]
   2ac58:	b	2ac80 <flatcc_builder_append_vector@@Base+0xa0>
   2ac5c:	ldr	r0, [sp, #8]
   2ac60:	ldr	r1, [sp, #4]
   2ac64:	ldr	r2, [sp, #8]
   2ac68:	ldr	r2, [r2, #32]
   2ac6c:	ldr	r2, [r2, #16]
   2ac70:	ldr	r3, [sp]
   2ac74:	mul	r2, r2, r3
   2ac78:	bl	2ab7c <flatcc_builder_vector_push@@Base+0x110>
   2ac7c:	str	r0, [fp, #-4]
   2ac80:	ldr	r0, [fp, #-4]
   2ac84:	mov	sp, fp
   2ac88:	pop	{fp, pc}
   2ac8c:	andeq	lr, r1, sl, ror #24
   2ac90:	andeq	lr, r1, r8, lsr #18
   2ac94:	andeq	lr, r1, r6, lsl #26

0002ac98 <flatcc_builder_extend_offset_vector@@Base>:
   2ac98:	push	{fp, lr}
   2ac9c:	mov	fp, sp
   2aca0:	sub	sp, sp, #16
   2aca4:	ldr	r2, [pc, #68]	; 2acf0 <flatcc_builder_extend_offset_vector@@Base+0x58>
   2aca8:	str	r0, [sp, #8]
   2acac:	str	r1, [sp, #4]
   2acb0:	ldr	r0, [sp, #8]
   2acb4:	ldr	r1, [sp, #4]
   2acb8:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2acbc:	cmp	r0, #0
   2acc0:	beq	2acd0 <flatcc_builder_extend_offset_vector@@Base+0x38>
   2acc4:	movw	r0, #0
   2acc8:	str	r0, [fp, #-4]
   2accc:	b	2ace4 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   2acd0:	ldr	r0, [sp, #8]
   2acd4:	ldr	r1, [sp, #4]
   2acd8:	lsl	r1, r1, #2
   2acdc:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2ace0:	str	r0, [fp, #-4]
   2ace4:	ldr	r0, [fp, #-4]
   2ace8:	mov	sp, fp
   2acec:	pop	{fp, pc}
   2acf0:	svccc	0x00ffffff

0002acf4 <flatcc_builder_offset_vector_push@@Base>:
   2acf4:	push	{fp, lr}
   2acf8:	mov	fp, sp
   2acfc:	sub	sp, sp, #16
   2ad00:	str	r0, [sp, #8]
   2ad04:	str	r1, [sp, #4]
   2ad08:	ldr	r0, [sp, #8]
   2ad0c:	ldr	r0, [r0, #32]
   2ad10:	ldrh	r0, [r0, #14]
   2ad14:	cmp	r0, #5
   2ad18:	bne	2ad20 <flatcc_builder_offset_vector_push@@Base+0x2c>
   2ad1c:	b	2ad40 <flatcc_builder_offset_vector_push@@Base+0x4c>
   2ad20:	ldr	r0, [pc, #152]	; 2adc0 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2ad24:	add	r0, pc, r0
   2ad28:	ldr	r1, [pc, #148]	; 2adc4 <flatcc_builder_offset_vector_push@@Base+0xd0>
   2ad2c:	add	r1, pc, r1
   2ad30:	ldr	r2, [pc, #144]	; 2adc8 <flatcc_builder_offset_vector_push@@Base+0xd4>
   2ad34:	add	r3, pc, r2
   2ad38:	movw	r2, #934	; 0x3a6
   2ad3c:	bl	14f08 <__assert_fail@plt>
   2ad40:	ldr	r0, [pc, #132]	; 2adcc <flatcc_builder_offset_vector_push@@Base+0xd8>
   2ad44:	ldr	r1, [sp, #8]
   2ad48:	ldr	r1, [r1, #32]
   2ad4c:	ldr	r1, [r1, #20]
   2ad50:	cmp	r1, r0
   2ad54:	bne	2ad64 <flatcc_builder_offset_vector_push@@Base+0x70>
   2ad58:	movw	r0, #0
   2ad5c:	str	r0, [fp, #-4]
   2ad60:	b	2adb4 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2ad64:	ldr	r0, [sp, #8]
   2ad68:	ldr	r0, [r0, #32]
   2ad6c:	ldr	r1, [r0, #20]
   2ad70:	add	r1, r1, #1
   2ad74:	str	r1, [r0, #20]
   2ad78:	ldr	r0, [sp, #8]
   2ad7c:	movw	r1, #4
   2ad80:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2ad84:	str	r0, [sp]
   2ad88:	movw	r1, #0
   2ad8c:	cmp	r1, r0
   2ad90:	bne	2ada0 <flatcc_builder_offset_vector_push@@Base+0xac>
   2ad94:	movw	r0, #0
   2ad98:	str	r0, [fp, #-4]
   2ad9c:	b	2adb4 <flatcc_builder_offset_vector_push@@Base+0xc0>
   2ada0:	ldr	r0, [sp, #4]
   2ada4:	ldr	r1, [sp]
   2ada8:	str	r0, [r1]
   2adac:	ldr	r0, [sp]
   2adb0:	str	r0, [fp, #-4]
   2adb4:	ldr	r0, [fp, #-4]
   2adb8:	mov	sp, fp
   2adbc:	pop	{fp, pc}
   2adc0:	andeq	lr, r1, r3, asr ip
   2adc4:	andeq	lr, r1, r8, lsl r8
   2adc8:	andeq	lr, r1, r6, ror ip
   2adcc:	svccc	0x00ffffff

0002add0 <flatcc_builder_append_offset_vector@@Base>:
   2add0:	push	{fp, lr}
   2add4:	mov	fp, sp
   2add8:	sub	sp, sp, #16
   2addc:	str	r0, [sp, #8]
   2ade0:	str	r1, [sp, #4]
   2ade4:	str	r2, [sp]
   2ade8:	ldr	r0, [sp, #8]
   2adec:	ldr	r0, [r0, #32]
   2adf0:	ldrh	r0, [r0, #14]
   2adf4:	cmp	r0, #5
   2adf8:	bne	2ae00 <flatcc_builder_append_offset_vector@@Base+0x30>
   2adfc:	b	2ae20 <flatcc_builder_append_offset_vector@@Base+0x50>
   2ae00:	ldr	r0, [pc, #96]	; 2ae68 <flatcc_builder_append_offset_vector@@Base+0x98>
   2ae04:	add	r0, pc, r0
   2ae08:	ldr	r1, [pc, #92]	; 2ae6c <flatcc_builder_append_offset_vector@@Base+0x9c>
   2ae0c:	add	r1, pc, r1
   2ae10:	ldr	r2, [pc, #88]	; 2ae70 <flatcc_builder_append_offset_vector@@Base+0xa0>
   2ae14:	add	r3, pc, r2
   2ae18:	movw	r2, #948	; 0x3b4
   2ae1c:	bl	14f08 <__assert_fail@plt>
   2ae20:	ldr	r2, [pc, #76]	; 2ae74 <flatcc_builder_append_offset_vector@@Base+0xa4>
   2ae24:	ldr	r0, [sp, #8]
   2ae28:	ldr	r1, [sp]
   2ae2c:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2ae30:	cmp	r0, #0
   2ae34:	beq	2ae44 <flatcc_builder_append_offset_vector@@Base+0x74>
   2ae38:	movw	r0, #0
   2ae3c:	str	r0, [fp, #-4]
   2ae40:	b	2ae5c <flatcc_builder_append_offset_vector@@Base+0x8c>
   2ae44:	ldr	r0, [sp, #8]
   2ae48:	ldr	r1, [sp, #4]
   2ae4c:	ldr	r2, [sp]
   2ae50:	lsl	r2, r2, #2
   2ae54:	bl	2ab7c <flatcc_builder_vector_push@@Base+0x110>
   2ae58:	str	r0, [fp, #-4]
   2ae5c:	ldr	r0, [fp, #-4]
   2ae60:	mov	sp, fp
   2ae64:	pop	{fp, pc}
   2ae68:	andeq	lr, r1, r3, ror fp
   2ae6c:	andeq	lr, r1, r8, lsr r7
   2ae70:	strdeq	lr, [r1], -r8
   2ae74:	svccc	0x00ffffff

0002ae78 <flatcc_builder_extend_string@@Base>:
   2ae78:	push	{fp, lr}
   2ae7c:	mov	fp, sp
   2ae80:	sub	sp, sp, #16
   2ae84:	str	r0, [sp, #8]
   2ae88:	str	r1, [sp, #4]
   2ae8c:	ldr	r0, [sp, #8]
   2ae90:	ldr	r0, [r0, #32]
   2ae94:	ldrh	r0, [r0, #14]
   2ae98:	cmp	r0, #6
   2ae9c:	bne	2aea4 <flatcc_builder_extend_string@@Base+0x2c>
   2aea0:	b	2aec4 <flatcc_builder_extend_string@@Base+0x4c>
   2aea4:	ldr	r0, [pc, #88]	; 2af04 <flatcc_builder_extend_string@@Base+0x8c>
   2aea8:	add	r0, pc, r0
   2aeac:	ldr	r1, [pc, #84]	; 2af08 <flatcc_builder_extend_string@@Base+0x90>
   2aeb0:	add	r1, pc, r1
   2aeb4:	ldr	r2, [pc, #80]	; 2af0c <flatcc_builder_extend_string@@Base+0x94>
   2aeb8:	add	r3, pc, r2
   2aebc:	movw	r2, #957	; 0x3bd
   2aec0:	bl	14f08 <__assert_fail@plt>
   2aec4:	ldr	r0, [sp, #8]
   2aec8:	ldr	r1, [sp, #4]
   2aecc:	mvn	r2, #0
   2aed0:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2aed4:	cmp	r0, #0
   2aed8:	beq	2aee8 <flatcc_builder_extend_string@@Base+0x70>
   2aedc:	movw	r0, #0
   2aee0:	str	r0, [fp, #-4]
   2aee4:	b	2aef8 <flatcc_builder_extend_string@@Base+0x80>
   2aee8:	ldr	r0, [sp, #8]
   2aeec:	ldr	r1, [sp, #4]
   2aef0:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2aef4:	str	r0, [fp, #-4]
   2aef8:	ldr	r0, [fp, #-4]
   2aefc:	mov	sp, fp
   2af00:	pop	{fp, pc}
   2af04:	ldrdeq	lr, [r1], -r8
   2af08:	muleq	r1, r4, r6
   2af0c:	strdeq	lr, [r1], -r4

0002af10 <flatcc_builder_append_string@@Base>:
   2af10:	push	{fp, lr}
   2af14:	mov	fp, sp
   2af18:	sub	sp, sp, #16
   2af1c:	str	r0, [sp, #8]
   2af20:	str	r1, [sp, #4]
   2af24:	str	r2, [sp]
   2af28:	ldr	r0, [sp, #8]
   2af2c:	ldr	r0, [r0, #32]
   2af30:	ldrh	r0, [r0, #14]
   2af34:	cmp	r0, #6
   2af38:	bne	2af40 <flatcc_builder_append_string@@Base+0x30>
   2af3c:	b	2af60 <flatcc_builder_append_string@@Base+0x50>
   2af40:	ldr	r0, [pc, #92]	; 2afa4 <flatcc_builder_append_string@@Base+0x94>
   2af44:	add	r0, pc, r0
   2af48:	ldr	r1, [pc, #88]	; 2afa8 <flatcc_builder_append_string@@Base+0x98>
   2af4c:	add	r1, pc, r1
   2af50:	ldr	r2, [pc, #84]	; 2afac <flatcc_builder_append_string@@Base+0x9c>
   2af54:	add	r3, pc, r2
   2af58:	movw	r2, #966	; 0x3c6
   2af5c:	bl	14f08 <__assert_fail@plt>
   2af60:	ldr	r0, [sp, #8]
   2af64:	ldr	r1, [sp]
   2af68:	mvn	r2, #0
   2af6c:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2af70:	cmp	r0, #0
   2af74:	beq	2af84 <flatcc_builder_append_string@@Base+0x74>
   2af78:	movw	r0, #0
   2af7c:	str	r0, [fp, #-4]
   2af80:	b	2af98 <flatcc_builder_append_string@@Base+0x88>
   2af84:	ldr	r0, [sp, #8]
   2af88:	ldr	r1, [sp, #4]
   2af8c:	ldr	r2, [sp]
   2af90:	bl	2ab7c <flatcc_builder_vector_push@@Base+0x110>
   2af94:	str	r0, [fp, #-4]
   2af98:	ldr	r0, [fp, #-4]
   2af9c:	mov	sp, fp
   2afa0:	pop	{fp, pc}
   2afa4:	andeq	lr, r1, ip, lsr fp
   2afa8:	strdeq	lr, [r1], -r8
   2afac:	muleq	r1, r7, fp

0002afb0 <flatcc_builder_append_string_str@@Base>:
   2afb0:	push	{fp, lr}
   2afb4:	mov	fp, sp
   2afb8:	sub	sp, sp, #24
   2afbc:	str	r0, [fp, #-4]
   2afc0:	str	r1, [fp, #-8]
   2afc4:	ldr	r0, [fp, #-4]
   2afc8:	ldr	r1, [fp, #-8]
   2afcc:	ldr	r2, [fp, #-8]
   2afd0:	str	r0, [sp, #12]
   2afd4:	mov	r0, r2
   2afd8:	str	r1, [sp, #8]
   2afdc:	bl	14e9c <strlen@plt>
   2afe0:	ldr	r1, [sp, #12]
   2afe4:	str	r0, [sp, #4]
   2afe8:	mov	r0, r1
   2afec:	ldr	r1, [sp, #8]
   2aff0:	ldr	r2, [sp, #4]
   2aff4:	bl	2af10 <flatcc_builder_append_string@@Base>
   2aff8:	mov	sp, fp
   2affc:	pop	{fp, pc}

0002b000 <flatcc_builder_append_string_strn@@Base>:
   2b000:	push	{fp, lr}
   2b004:	mov	fp, sp
   2b008:	sub	sp, sp, #24
   2b00c:	str	r0, [fp, #-4]
   2b010:	str	r1, [fp, #-8]
   2b014:	str	r2, [sp, #12]
   2b018:	ldr	r0, [fp, #-4]
   2b01c:	ldr	r1, [fp, #-8]
   2b020:	ldr	r2, [fp, #-8]
   2b024:	ldr	r3, [sp, #12]
   2b028:	str	r0, [sp, #8]
   2b02c:	mov	r0, r2
   2b030:	str	r1, [sp, #4]
   2b034:	mov	r1, r3
   2b038:	bl	2b05c <flatcc_builder_append_string_strn@@Base+0x5c>
   2b03c:	ldr	r1, [sp, #8]
   2b040:	str	r0, [sp]
   2b044:	mov	r0, r1
   2b048:	ldr	r1, [sp, #4]
   2b04c:	ldr	r2, [sp]
   2b050:	bl	2af10 <flatcc_builder_append_string@@Base>
   2b054:	mov	sp, fp
   2b058:	pop	{fp, pc}
   2b05c:	push	{fp, lr}
   2b060:	mov	fp, sp
   2b064:	sub	sp, sp, #16
   2b068:	str	r0, [fp, #-4]
   2b06c:	str	r1, [sp, #8]
   2b070:	ldr	r0, [fp, #-4]
   2b074:	ldr	r2, [sp, #8]
   2b078:	mov	r1, #0
   2b07c:	bl	14ee4 <memchr@plt>
   2b080:	str	r0, [sp, #4]
   2b084:	ldr	r0, [sp, #4]
   2b088:	movw	r1, #0
   2b08c:	cmp	r0, r1
   2b090:	beq	2b0a8 <flatcc_builder_append_string_strn@@Base+0xa8>
   2b094:	ldr	r0, [sp, #4]
   2b098:	ldr	r1, [fp, #-4]
   2b09c:	sub	r0, r0, r1
   2b0a0:	str	r0, [sp]
   2b0a4:	b	2b0b0 <flatcc_builder_append_string_strn@@Base+0xb0>
   2b0a8:	ldr	r0, [sp, #8]
   2b0ac:	str	r0, [sp]
   2b0b0:	ldr	r0, [sp]
   2b0b4:	mov	sp, fp
   2b0b8:	pop	{fp, pc}

0002b0bc <flatcc_builder_truncate_vector@@Base>:
   2b0bc:	push	{fp, lr}
   2b0c0:	mov	fp, sp
   2b0c4:	sub	sp, sp, #16
   2b0c8:	str	r0, [sp, #8]
   2b0cc:	str	r1, [sp, #4]
   2b0d0:	ldr	r0, [sp, #8]
   2b0d4:	ldr	r0, [r0, #32]
   2b0d8:	ldrh	r0, [r0, #14]
   2b0dc:	cmp	r0, #4
   2b0e0:	bne	2b0e8 <flatcc_builder_truncate_vector@@Base+0x2c>
   2b0e4:	b	2b108 <flatcc_builder_truncate_vector@@Base+0x4c>
   2b0e8:	ldr	r0, [pc, #192]	; 2b1b0 <flatcc_builder_truncate_vector@@Base+0xf4>
   2b0ec:	add	r0, pc, r0
   2b0f0:	ldr	r1, [pc, #188]	; 2b1b4 <flatcc_builder_truncate_vector@@Base+0xf8>
   2b0f4:	add	r1, pc, r1
   2b0f8:	ldr	r2, [pc, #184]	; 2b1b8 <flatcc_builder_truncate_vector@@Base+0xfc>
   2b0fc:	add	r3, pc, r2
   2b100:	movw	r2, #985	; 0x3d9
   2b104:	bl	14f08 <__assert_fail@plt>
   2b108:	ldr	r0, [sp, #8]
   2b10c:	ldr	r0, [r0, #32]
   2b110:	ldr	r0, [r0, #20]
   2b114:	ldr	r1, [sp, #4]
   2b118:	cmp	r0, r1
   2b11c:	bcs	2b168 <flatcc_builder_truncate_vector@@Base+0xac>
   2b120:	ldr	r0, [sp, #8]
   2b124:	ldr	r0, [r0, #32]
   2b128:	ldr	r0, [r0, #20]
   2b12c:	ldr	r1, [sp, #4]
   2b130:	cmp	r0, r1
   2b134:	bcc	2b13c <flatcc_builder_truncate_vector@@Base+0x80>
   2b138:	b	2b15c <flatcc_builder_truncate_vector@@Base+0xa0>
   2b13c:	ldr	r0, [pc, #120]	; 2b1bc <flatcc_builder_truncate_vector@@Base+0x100>
   2b140:	add	r0, pc, r0
   2b144:	ldr	r1, [pc, #116]	; 2b1c0 <flatcc_builder_truncate_vector@@Base+0x104>
   2b148:	add	r1, pc, r1
   2b14c:	ldr	r2, [pc, #112]	; 2b1c4 <flatcc_builder_truncate_vector@@Base+0x108>
   2b150:	add	r3, pc, r2
   2b154:	movw	r2, #986	; 0x3da
   2b158:	bl	14f08 <__assert_fail@plt>
   2b15c:	mvn	r0, #0
   2b160:	str	r0, [fp, #-4]
   2b164:	b	2b1a4 <flatcc_builder_truncate_vector@@Base+0xe8>
   2b168:	ldr	r0, [sp, #4]
   2b16c:	ldr	r1, [sp, #8]
   2b170:	ldr	r1, [r1, #32]
   2b174:	ldr	r2, [r1, #20]
   2b178:	sub	r0, r2, r0
   2b17c:	str	r0, [r1, #20]
   2b180:	ldr	r0, [sp, #8]
   2b184:	ldr	r1, [sp, #8]
   2b188:	ldr	r1, [r1, #32]
   2b18c:	ldr	r1, [r1, #16]
   2b190:	ldr	r2, [sp, #4]
   2b194:	mul	r1, r1, r2
   2b198:	bl	2b1c8 <flatcc_builder_truncate_vector@@Base+0x10c>
   2b19c:	movw	r0, #0
   2b1a0:	str	r0, [fp, #-4]
   2b1a4:	ldr	r0, [fp, #-4]
   2b1a8:	mov	sp, fp
   2b1ac:	pop	{fp, pc}
   2b1b0:	muleq	r1, r2, r7
   2b1b4:	andeq	lr, r1, r0, asr r4
   2b1b8:	andeq	lr, r1, ip, lsr sl
   2b1bc:	andeq	lr, r1, r7, lsr sl
   2b1c0:	strdeq	lr, [r1], -ip
   2b1c4:	andeq	lr, r1, r8, ror #19
   2b1c8:	push	{fp, lr}
   2b1cc:	mov	fp, sp
   2b1d0:	sub	sp, sp, #8
   2b1d4:	str	r0, [sp, #4]
   2b1d8:	str	r1, [sp]
   2b1dc:	ldr	r0, [sp]
   2b1e0:	ldr	r1, [sp, #4]
   2b1e4:	ldr	r2, [r1, #20]
   2b1e8:	sub	r0, r2, r0
   2b1ec:	str	r0, [r1, #20]
   2b1f0:	ldr	r0, [sp, #4]
   2b1f4:	ldr	r0, [r0, #16]
   2b1f8:	ldr	r1, [sp, #4]
   2b1fc:	ldr	r1, [r1, #20]
   2b200:	add	r0, r0, r1
   2b204:	ldr	r2, [sp]
   2b208:	movw	r1, #0
   2b20c:	and	r1, r1, #255	; 0xff
   2b210:	bl	14ec0 <memset@plt>
   2b214:	mov	sp, fp
   2b218:	pop	{fp, pc}

0002b21c <flatcc_builder_truncate_offset_vector@@Base>:
   2b21c:	push	{fp, lr}
   2b220:	mov	fp, sp
   2b224:	sub	sp, sp, #16
   2b228:	str	r0, [sp, #8]
   2b22c:	str	r1, [sp, #4]
   2b230:	ldr	r0, [sp, #8]
   2b234:	ldr	r0, [r0, #32]
   2b238:	ldrh	r0, [r0, #14]
   2b23c:	cmp	r0, #5
   2b240:	bne	2b248 <flatcc_builder_truncate_offset_vector@@Base+0x2c>
   2b244:	b	2b268 <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   2b248:	ldr	r0, [pc, #192]	; 2b310 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   2b24c:	add	r0, pc, r0
   2b250:	ldr	r1, [pc, #188]	; 2b314 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2b254:	add	r1, pc, r1
   2b258:	ldr	r2, [pc, #184]	; 2b318 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2b25c:	add	r3, pc, r2
   2b260:	movw	r2, #994	; 0x3e2
   2b264:	bl	14f08 <__assert_fail@plt>
   2b268:	ldr	r0, [sp, #8]
   2b26c:	ldr	r0, [r0, #32]
   2b270:	ldr	r0, [r0, #20]
   2b274:	ldr	r1, [sp, #4]
   2b278:	cmp	r0, r1
   2b27c:	bcs	2b2c8 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2b280:	ldr	r0, [sp, #8]
   2b284:	ldr	r0, [r0, #32]
   2b288:	ldr	r0, [r0, #20]
   2b28c:	ldr	r1, [sp, #4]
   2b290:	cmp	r0, r1
   2b294:	bcc	2b29c <flatcc_builder_truncate_offset_vector@@Base+0x80>
   2b298:	b	2b2bc <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2b29c:	ldr	r0, [pc, #120]	; 2b31c <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2b2a0:	add	r0, pc, r0
   2b2a4:	ldr	r1, [pc, #116]	; 2b320 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2b2a8:	add	r1, pc, r1
   2b2ac:	ldr	r2, [pc, #112]	; 2b324 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2b2b0:	add	r3, pc, r2
   2b2b4:	movw	r2, #995	; 0x3e3
   2b2b8:	bl	14f08 <__assert_fail@plt>
   2b2bc:	mvn	r0, #0
   2b2c0:	str	r0, [fp, #-4]
   2b2c4:	b	2b304 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   2b2c8:	ldr	r0, [sp, #4]
   2b2cc:	ldr	r1, [sp, #8]
   2b2d0:	ldr	r1, [r1, #32]
   2b2d4:	ldr	r2, [r1, #20]
   2b2d8:	sub	r0, r2, r0
   2b2dc:	str	r0, [r1, #20]
   2b2e0:	ldr	r0, [sp, #8]
   2b2e4:	ldr	r1, [sp, #8]
   2b2e8:	ldr	r1, [r1, #32]
   2b2ec:	ldr	r1, [r1, #16]
   2b2f0:	ldr	r2, [sp, #4]
   2b2f4:	mul	r1, r1, r2
   2b2f8:	bl	2b1c8 <flatcc_builder_truncate_vector@@Base+0x10c>
   2b2fc:	movw	r0, #0
   2b300:	str	r0, [fp, #-4]
   2b304:	ldr	r0, [fp, #-4]
   2b308:	mov	sp, fp
   2b30c:	pop	{fp, pc}
   2b310:	andeq	lr, r1, fp, lsr #14
   2b314:	strdeq	lr, [r1], -r0
   2b318:	andeq	lr, r1, pc, lsr r9
   2b31c:	andeq	lr, r1, r1, asr #18
   2b320:	muleq	r1, ip, r2
   2b324:	andeq	lr, r1, fp, ror #17

0002b328 <flatcc_builder_truncate_string@@Base>:
   2b328:	push	{fp, lr}
   2b32c:	mov	fp, sp
   2b330:	sub	sp, sp, #16
   2b334:	str	r0, [sp, #8]
   2b338:	str	r1, [sp, #4]
   2b33c:	ldr	r0, [sp, #8]
   2b340:	ldr	r0, [r0, #32]
   2b344:	ldrh	r0, [r0, #14]
   2b348:	cmp	r0, #6
   2b34c:	bne	2b354 <flatcc_builder_truncate_string@@Base+0x2c>
   2b350:	b	2b374 <flatcc_builder_truncate_string@@Base+0x4c>
   2b354:	ldr	r0, [pc, #176]	; 2b40c <flatcc_builder_truncate_string@@Base+0xe4>
   2b358:	add	r0, pc, r0
   2b35c:	ldr	r1, [pc, #172]	; 2b410 <flatcc_builder_truncate_string@@Base+0xe8>
   2b360:	add	r1, pc, r1
   2b364:	ldr	r2, [pc, #168]	; 2b414 <flatcc_builder_truncate_string@@Base+0xec>
   2b368:	add	r3, pc, r2
   2b36c:	movw	r2, #1003	; 0x3eb
   2b370:	bl	14f08 <__assert_fail@plt>
   2b374:	ldr	r0, [sp, #8]
   2b378:	ldr	r0, [r0, #32]
   2b37c:	ldr	r0, [r0, #20]
   2b380:	ldr	r1, [sp, #4]
   2b384:	cmp	r0, r1
   2b388:	bcs	2b3d4 <flatcc_builder_truncate_string@@Base+0xac>
   2b38c:	ldr	r0, [sp, #8]
   2b390:	ldr	r0, [r0, #32]
   2b394:	ldr	r0, [r0, #20]
   2b398:	ldr	r1, [sp, #4]
   2b39c:	cmp	r0, r1
   2b3a0:	bcc	2b3a8 <flatcc_builder_truncate_string@@Base+0x80>
   2b3a4:	b	2b3c8 <flatcc_builder_truncate_string@@Base+0xa0>
   2b3a8:	ldr	r0, [pc, #104]	; 2b418 <flatcc_builder_truncate_string@@Base+0xf0>
   2b3ac:	add	r0, pc, r0
   2b3b0:	ldr	r1, [pc, #100]	; 2b41c <flatcc_builder_truncate_string@@Base+0xf4>
   2b3b4:	add	r1, pc, r1
   2b3b8:	ldr	r2, [pc, #96]	; 2b420 <flatcc_builder_truncate_string@@Base+0xf8>
   2b3bc:	add	r3, pc, r2
   2b3c0:	movw	r2, #1004	; 0x3ec
   2b3c4:	bl	14f08 <__assert_fail@plt>
   2b3c8:	mvn	r0, #0
   2b3cc:	str	r0, [fp, #-4]
   2b3d0:	b	2b400 <flatcc_builder_truncate_string@@Base+0xd8>
   2b3d4:	ldr	r0, [sp, #4]
   2b3d8:	ldr	r1, [sp, #8]
   2b3dc:	ldr	r1, [r1, #32]
   2b3e0:	ldr	r2, [r1, #20]
   2b3e4:	sub	r0, r2, r0
   2b3e8:	str	r0, [r1, #20]
   2b3ec:	ldr	r0, [sp, #8]
   2b3f0:	ldr	r1, [sp, #4]
   2b3f4:	bl	2b1c8 <flatcc_builder_truncate_vector@@Base+0x10c>
   2b3f8:	movw	r0, #0
   2b3fc:	str	r0, [fp, #-4]
   2b400:	ldr	r0, [fp, #-4]
   2b404:	mov	sp, fp
   2b408:	pop	{fp, pc}
   2b40c:	andeq	lr, r1, r8, lsr #14
   2b410:	andeq	lr, r1, r4, ror #3
   2b414:			; <UNDEFINED> instruction: 0x0001e8b4
   2b418:	andeq	lr, r1, pc, lsr #17
   2b41c:	muleq	r1, r0, r1
   2b420:	andeq	lr, r1, r0, ror #16

0002b424 <flatcc_builder_start_vector@@Base>:
   2b424:	push	{fp, lr}
   2b428:	mov	fp, sp
   2b42c:	sub	sp, sp, #24
   2b430:	str	r0, [fp, #-8]
   2b434:	str	r1, [sp, #12]
   2b438:	strh	r2, [sp, #10]
   2b43c:	str	r3, [sp, #4]
   2b440:	add	r0, sp, #10
   2b444:	movw	r1, #4
   2b448:	uxth	r1, r1
   2b44c:	bl	2b4d0 <flatcc_builder_start_vector@@Base+0xac>
   2b450:	ldr	r0, [fp, #-8]
   2b454:	ldrh	r1, [sp, #10]
   2b458:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2b45c:	cmp	r0, #0
   2b460:	beq	2b470 <flatcc_builder_start_vector@@Base+0x4c>
   2b464:	mvn	r0, #0
   2b468:	str	r0, [fp, #-4]
   2b46c:	b	2b4c4 <flatcc_builder_start_vector@@Base+0xa0>
   2b470:	ldr	r0, [sp, #12]
   2b474:	ldr	r1, [fp, #-8]
   2b478:	ldr	r1, [r1, #32]
   2b47c:	str	r0, [r1, #16]
   2b480:	ldr	r0, [fp, #-8]
   2b484:	ldr	r0, [r0, #32]
   2b488:	movw	r1, #0
   2b48c:	str	r1, [r0, #20]
   2b490:	ldr	r0, [sp, #4]
   2b494:	ldr	r1, [fp, #-8]
   2b498:	ldr	r1, [r1, #32]
   2b49c:	str	r0, [r1, #24]
   2b4a0:	ldr	r0, [fp, #-8]
   2b4a4:	ldr	r0, [r0, #32]
   2b4a8:	movw	r1, #4
   2b4ac:	strh	r1, [r0, #14]
   2b4b0:	ldr	r0, [fp, #-8]
   2b4b4:	mvn	r1, #3
   2b4b8:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2b4bc:	movw	r0, #0
   2b4c0:	str	r0, [fp, #-4]
   2b4c4:	ldr	r0, [fp, #-4]
   2b4c8:	mov	sp, fp
   2b4cc:	pop	{fp, pc}
   2b4d0:	sub	sp, sp, #8
   2b4d4:	str	r0, [sp, #4]
   2b4d8:	strh	r1, [sp, #2]
   2b4dc:	ldr	r0, [sp, #4]
   2b4e0:	ldrh	r0, [r0]
   2b4e4:	ldrh	r1, [sp, #2]
   2b4e8:	cmp	r0, r1
   2b4ec:	bge	2b4fc <flatcc_builder_start_vector@@Base+0xd8>
   2b4f0:	ldrh	r0, [sp, #2]
   2b4f4:	ldr	r1, [sp, #4]
   2b4f8:	strh	r0, [r1]
   2b4fc:	add	sp, sp, #8
   2b500:	bx	lr

0002b504 <flatcc_builder_start_offset_vector@@Base>:
   2b504:	push	{fp, lr}
   2b508:	mov	fp, sp
   2b50c:	sub	sp, sp, #8
   2b510:	str	r0, [sp]
   2b514:	ldr	r0, [sp]
   2b518:	movw	r1, #4
   2b51c:	uxth	r1, r1
   2b520:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2b524:	cmp	r0, #0
   2b528:	beq	2b538 <flatcc_builder_start_offset_vector@@Base+0x34>
   2b52c:	mvn	r0, #0
   2b530:	str	r0, [sp, #4]
   2b534:	b	2b57c <flatcc_builder_start_offset_vector@@Base+0x78>
   2b538:	ldr	r0, [sp]
   2b53c:	ldr	r0, [r0, #32]
   2b540:	movw	r1, #4
   2b544:	str	r1, [r0, #16]
   2b548:	ldr	r0, [sp]
   2b54c:	ldr	r0, [r0, #32]
   2b550:	movw	r1, #0
   2b554:	str	r1, [r0, #20]
   2b558:	ldr	r0, [sp]
   2b55c:	ldr	r0, [r0, #32]
   2b560:	movw	r1, #5
   2b564:	strh	r1, [r0, #14]
   2b568:	ldr	r0, [sp]
   2b56c:	mvn	r1, #3
   2b570:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2b574:	movw	r0, #0
   2b578:	str	r0, [sp, #4]
   2b57c:	ldr	r0, [sp, #4]
   2b580:	mov	sp, fp
   2b584:	pop	{fp, pc}

0002b588 <flatcc_builder_create_offset_vector@@Base>:
   2b588:	push	{fp, lr}
   2b58c:	mov	fp, sp
   2b590:	sub	sp, sp, #24
   2b594:	str	r0, [fp, #-8]
   2b598:	str	r1, [sp, #12]
   2b59c:	str	r2, [sp, #8]
   2b5a0:	ldr	r0, [fp, #-8]
   2b5a4:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   2b5a8:	cmp	r0, #0
   2b5ac:	beq	2b5bc <flatcc_builder_create_offset_vector@@Base+0x34>
   2b5b0:	movw	r0, #0
   2b5b4:	str	r0, [fp, #-4]
   2b5b8:	b	2b604 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2b5bc:	ldr	r0, [fp, #-8]
   2b5c0:	ldr	r1, [sp, #8]
   2b5c4:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   2b5c8:	str	r0, [sp, #4]
   2b5cc:	movw	r1, #0
   2b5d0:	cmp	r0, r1
   2b5d4:	bne	2b5e4 <flatcc_builder_create_offset_vector@@Base+0x5c>
   2b5d8:	movw	r0, #0
   2b5dc:	str	r0, [fp, #-4]
   2b5e0:	b	2b604 <flatcc_builder_create_offset_vector@@Base+0x7c>
   2b5e4:	ldr	r0, [sp, #4]
   2b5e8:	ldr	r1, [sp, #12]
   2b5ec:	ldr	r2, [sp, #8]
   2b5f0:	lsl	r2, r2, #2
   2b5f4:	bl	14e30 <memcpy@plt>
   2b5f8:	ldr	r0, [fp, #-8]
   2b5fc:	bl	2b610 <flatcc_builder_end_offset_vector@@Base>
   2b600:	str	r0, [fp, #-4]
   2b604:	ldr	r0, [fp, #-4]
   2b608:	mov	sp, fp
   2b60c:	pop	{fp, pc}

0002b610 <flatcc_builder_end_offset_vector@@Base>:
   2b610:	push	{fp, lr}
   2b614:	mov	fp, sp
   2b618:	sub	sp, sp, #16
   2b61c:	str	r0, [sp, #8]
   2b620:	ldr	r0, [sp, #8]
   2b624:	ldr	r0, [r0, #32]
   2b628:	ldrh	r0, [r0, #14]
   2b62c:	cmp	r0, #5
   2b630:	bne	2b638 <flatcc_builder_end_offset_vector@@Base+0x28>
   2b634:	b	2b658 <flatcc_builder_end_offset_vector@@Base+0x48>
   2b638:	ldr	r0, [pc, #108]	; 2b6ac <flatcc_builder_end_offset_vector@@Base+0x9c>
   2b63c:	add	r0, pc, r0
   2b640:	ldr	r1, [pc, #104]	; 2b6b0 <flatcc_builder_end_offset_vector@@Base+0xa0>
   2b644:	add	r1, pc, r1
   2b648:	ldr	r2, [pc, #100]	; 2b6b4 <flatcc_builder_end_offset_vector@@Base+0xa4>
   2b64c:	add	r3, pc, r2
   2b650:	movw	r2, #1480	; 0x5c8
   2b654:	bl	14f08 <__assert_fail@plt>
   2b658:	ldr	r0, [sp, #8]
   2b65c:	ldr	r1, [sp, #8]
   2b660:	ldr	r1, [r1, #16]
   2b664:	ldr	r2, [sp, #8]
   2b668:	ldr	r2, [r2, #32]
   2b66c:	ldr	r2, [r2, #20]
   2b670:	bl	2ca0c <flatcc_builder_create_offset_vector_direct@@Base>
   2b674:	str	r0, [sp, #4]
   2b678:	movw	r1, #0
   2b67c:	cmp	r1, r0
   2b680:	bne	2b690 <flatcc_builder_end_offset_vector@@Base+0x80>
   2b684:	movw	r0, #0
   2b688:	str	r0, [fp, #-4]
   2b68c:	b	2b6a0 <flatcc_builder_end_offset_vector@@Base+0x90>
   2b690:	ldr	r0, [sp, #8]
   2b694:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2b698:	ldr	r0, [sp, #4]
   2b69c:	str	r0, [fp, #-4]
   2b6a0:	ldr	r0, [fp, #-4]
   2b6a4:	mov	sp, fp
   2b6a8:	pop	{fp, pc}
   2b6ac:	andeq	lr, r1, fp, lsr r3
   2b6b0:	andeq	sp, r1, r0, lsl #30
   2b6b4:	andeq	lr, r1, sl, asr r9

0002b6b8 <flatcc_builder_start_string@@Base>:
   2b6b8:	push	{fp, lr}
   2b6bc:	mov	fp, sp
   2b6c0:	sub	sp, sp, #8
   2b6c4:	str	r0, [sp]
   2b6c8:	ldr	r0, [sp]
   2b6cc:	movw	r1, #1
   2b6d0:	uxth	r1, r1
   2b6d4:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2b6d8:	cmp	r0, #0
   2b6dc:	beq	2b6ec <flatcc_builder_start_string@@Base+0x34>
   2b6e0:	mvn	r0, #0
   2b6e4:	str	r0, [sp, #4]
   2b6e8:	b	2b730 <flatcc_builder_start_string@@Base+0x78>
   2b6ec:	ldr	r0, [sp]
   2b6f0:	ldr	r0, [r0, #32]
   2b6f4:	movw	r1, #1
   2b6f8:	str	r1, [r0, #16]
   2b6fc:	ldr	r0, [sp]
   2b700:	ldr	r0, [r0, #32]
   2b704:	movw	r1, #0
   2b708:	str	r1, [r0, #20]
   2b70c:	ldr	r0, [sp]
   2b710:	ldr	r0, [r0, #32]
   2b714:	movw	r1, #6
   2b718:	strh	r1, [r0, #14]
   2b71c:	ldr	r0, [sp]
   2b720:	mvn	r1, #3
   2b724:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2b728:	movw	r0, #0
   2b72c:	str	r0, [sp, #4]
   2b730:	ldr	r0, [sp, #4]
   2b734:	mov	sp, fp
   2b738:	pop	{fp, pc}

0002b73c <flatcc_builder_reserve_table@@Base>:
   2b73c:	push	{fp, lr}
   2b740:	mov	fp, sp
   2b744:	sub	sp, sp, #8
   2b748:	str	r0, [sp, #4]
   2b74c:	str	r1, [sp]
   2b750:	ldr	r0, [sp]
   2b754:	cmp	r0, #0
   2b758:	blt	2b760 <flatcc_builder_reserve_table@@Base+0x24>
   2b75c:	b	2b780 <flatcc_builder_reserve_table@@Base+0x44>
   2b760:	ldr	r0, [pc, #44]	; 2b794 <flatcc_builder_reserve_table@@Base+0x58>
   2b764:	add	r0, pc, r0
   2b768:	ldr	r1, [pc, #40]	; 2b798 <flatcc_builder_reserve_table@@Base+0x5c>
   2b76c:	add	r1, pc, r1
   2b770:	ldr	r2, [pc, #36]	; 2b79c <flatcc_builder_reserve_table@@Base+0x60>
   2b774:	add	r3, pc, r2
   2b778:	movw	r2, #1065	; 0x429
   2b77c:	bl	14f08 <__assert_fail@plt>
   2b780:	ldr	r0, [sp, #4]
   2b784:	ldr	r1, [sp]
   2b788:	bl	2b7a0 <flatcc_builder_reserve_table@@Base+0x64>
   2b78c:	mov	sp, fp
   2b790:	pop	{fp, pc}
   2b794:	andeq	lr, r1, sl, asr r5
   2b798:	ldrdeq	sp, [r1], -r8
   2b79c:	andeq	lr, r1, r9, lsl #10
   2b7a0:	push	{fp, lr}
   2b7a4:	mov	fp, sp
   2b7a8:	sub	sp, sp, #24
   2b7ac:	str	r0, [fp, #-8]
   2b7b0:	str	r1, [sp, #12]
   2b7b4:	ldr	r0, [fp, #-8]
   2b7b8:	ldr	r0, [r0, #32]
   2b7bc:	ldr	r1, [r0, #16]
   2b7c0:	ldrh	r0, [r0, #28]
   2b7c4:	add	r0, r1, r0, lsl #1
   2b7c8:	str	r0, [sp, #8]
   2b7cc:	ldr	r0, [sp, #12]
   2b7d0:	add	r0, r0, #2
   2b7d4:	lsl	r0, r0, #1
   2b7d8:	str	r0, [sp, #4]
   2b7dc:	ldr	r0, [fp, #-8]
   2b7e0:	ldr	r2, [sp, #8]
   2b7e4:	ldr	r3, [sp, #4]
   2b7e8:	movw	r1, #0
   2b7ec:	movw	ip, #1
   2b7f0:	str	ip, [sp]
   2b7f4:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2b7f8:	ldr	r1, [fp, #-8]
   2b7fc:	str	r0, [r1, #4]
   2b800:	movw	r1, #0
   2b804:	cmp	r0, r1
   2b808:	bne	2b818 <flatcc_builder_reserve_table@@Base+0xdc>
   2b80c:	mvn	r0, #0
   2b810:	str	r0, [fp, #-4]
   2b814:	b	2b88c <flatcc_builder_reserve_table@@Base+0x150>
   2b818:	ldr	r0, [fp, #-8]
   2b81c:	ldr	r1, [r0, #4]
   2b820:	add	r1, r1, #4
   2b824:	str	r1, [r0, #4]
   2b828:	ldr	r0, [fp, #-8]
   2b82c:	ldr	r0, [r0, #32]
   2b830:	ldr	r0, [r0, #20]
   2b834:	str	r0, [sp, #8]
   2b838:	ldr	r0, [sp, #12]
   2b83c:	lsl	r0, r0, #1
   2b840:	add	r0, r0, #1
   2b844:	str	r0, [sp, #4]
   2b848:	ldr	r0, [fp, #-8]
   2b84c:	ldr	r2, [sp, #8]
   2b850:	ldr	r3, [sp, #4]
   2b854:	movw	r1, #3
   2b858:	movw	ip, #0
   2b85c:	str	ip, [sp]
   2b860:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2b864:	ldr	r1, [fp, #-8]
   2b868:	str	r0, [r1]
   2b86c:	movw	r1, #0
   2b870:	cmp	r0, r1
   2b874:	bne	2b884 <flatcc_builder_reserve_table@@Base+0x148>
   2b878:	mvn	r0, #0
   2b87c:	str	r0, [fp, #-4]
   2b880:	b	2b88c <flatcc_builder_reserve_table@@Base+0x150>
   2b884:	movw	r0, #0
   2b888:	str	r0, [fp, #-4]
   2b88c:	ldr	r0, [fp, #-4]
   2b890:	mov	sp, fp
   2b894:	pop	{fp, pc}

0002b898 <flatcc_builder_start_table@@Base>:
   2b898:	push	{fp, lr}
   2b89c:	mov	fp, sp
   2b8a0:	sub	sp, sp, #16
   2b8a4:	str	r0, [sp, #8]
   2b8a8:	str	r1, [sp, #4]
   2b8ac:	ldr	r0, [sp, #8]
   2b8b0:	movw	r1, #4
   2b8b4:	uxth	r1, r1
   2b8b8:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2b8bc:	cmp	r0, #0
   2b8c0:	beq	2b8d0 <flatcc_builder_start_table@@Base+0x38>
   2b8c4:	mvn	r0, #0
   2b8c8:	str	r0, [fp, #-4]
   2b8cc:	b	2b9a0 <flatcc_builder_start_table@@Base+0x108>
   2b8d0:	ldr	r0, [pc, #212]	; 2b9ac <flatcc_builder_start_table@@Base+0x114>
   2b8d4:	ldr	r1, [sp, #8]
   2b8d8:	ldr	r1, [r1, #4]
   2b8dc:	ldr	r2, [sp, #8]
   2b8e0:	ldr	r2, [r2, #52]	; 0x34
   2b8e4:	sub	r1, r1, r2
   2b8e8:	ldr	r2, [sp, #8]
   2b8ec:	ldr	r2, [r2, #32]
   2b8f0:	str	r1, [r2, #16]
   2b8f4:	ldr	r1, [sp, #8]
   2b8f8:	ldr	r1, [r1]
   2b8fc:	ldr	r2, [sp, #8]
   2b900:	ldr	r2, [r2, #76]	; 0x4c
   2b904:	sub	r1, r1, r2
   2b908:	ldr	r2, [sp, #8]
   2b90c:	ldr	r2, [r2, #32]
   2b910:	str	r1, [r2, #20]
   2b914:	ldr	r1, [sp, #8]
   2b918:	ldr	r1, [r1, #12]
   2b91c:	ldr	r2, [sp, #8]
   2b920:	ldr	r2, [r2, #32]
   2b924:	str	r1, [r2, #24]
   2b928:	ldr	r1, [sp, #8]
   2b92c:	ldrh	r1, [r1, #8]
   2b930:	ldr	r2, [sp, #8]
   2b934:	ldr	r2, [r2, #32]
   2b938:	strh	r1, [r2, #28]
   2b93c:	ldr	r1, [sp, #8]
   2b940:	movw	r2, #0
   2b944:	str	r2, [r1, #12]
   2b948:	ldr	r1, [sp, #8]
   2b94c:	str	r0, [r1, #12]
   2b950:	ldr	r0, [sp, #8]
   2b954:	movw	r1, #0
   2b958:	strh	r1, [r0, #8]
   2b95c:	ldr	r0, [sp, #8]
   2b960:	ldr	r0, [r0, #32]
   2b964:	movw	r1, #3
   2b968:	strh	r1, [r0, #14]
   2b96c:	ldr	r0, [sp, #8]
   2b970:	ldr	r1, [sp, #4]
   2b974:	bl	2b7a0 <flatcc_builder_reserve_table@@Base+0x64>
   2b978:	cmp	r0, #0
   2b97c:	beq	2b98c <flatcc_builder_start_table@@Base+0xf4>
   2b980:	mvn	r0, #0
   2b984:	str	r0, [fp, #-4]
   2b988:	b	2b9a0 <flatcc_builder_start_table@@Base+0x108>
   2b98c:	ldr	r0, [sp, #8]
   2b990:	movw	r1, #65532	; 0xfffc
   2b994:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2b998:	movw	r0, #0
   2b99c:	str	r0, [fp, #-4]
   2b9a0:	ldr	r0, [fp, #-4]
   2b9a4:	mov	sp, fp
   2b9a8:	pop	{fp, pc}
   2b9ac:	svccs	0x00693b52

0002b9b0 <flatcc_builder_create_vtable@@Base>:
   2b9b0:	push	{fp, lr}
   2b9b4:	mov	fp, sp
   2b9b8:	sub	sp, sp, #104	; 0x68
   2b9bc:	str	r0, [fp, #-8]
   2b9c0:	str	r1, [fp, #-12]
   2b9c4:	strh	r2, [fp, #-14]
   2b9c8:	movw	r0, #0
   2b9cc:	str	r0, [sp, #12]
   2b9d0:	str	r0, [sp, #16]
   2b9d4:	ldrh	r0, [fp, #-14]
   2b9d8:	cmp	r0, #0
   2b9dc:	ble	2ba20 <flatcc_builder_create_vtable@@Base+0x70>
   2b9e0:	ldrh	r0, [fp, #-14]
   2b9e4:	ldr	r1, [sp, #12]
   2b9e8:	add	r0, r1, r0
   2b9ec:	str	r0, [sp, #12]
   2b9f0:	ldr	r0, [fp, #-12]
   2b9f4:	add	r1, sp, #12
   2b9f8:	add	r1, r1, #8
   2b9fc:	ldr	r2, [sp, #16]
   2ba00:	str	r0, [r1, r2, lsl #3]
   2ba04:	ldrh	r0, [fp, #-14]
   2ba08:	ldr	r2, [sp, #16]
   2ba0c:	add	r1, r1, r2, lsl #3
   2ba10:	str	r0, [r1, #4]
   2ba14:	ldr	r0, [sp, #16]
   2ba18:	add	r0, r0, #1
   2ba1c:	str	r0, [sp, #16]
   2ba20:	ldr	r0, [fp, #-8]
   2ba24:	ldr	r0, [r0, #152]	; 0x98
   2ba28:	cmp	r0, #0
   2ba2c:	bne	2ba6c <flatcc_builder_create_vtable@@Base+0xbc>
   2ba30:	ldr	r0, [fp, #-8]
   2ba34:	ldr	r0, [r0, #180]	; 0xb4
   2ba38:	cmp	r0, #0
   2ba3c:	bne	2ba6c <flatcc_builder_create_vtable@@Base+0xbc>
   2ba40:	ldr	r0, [fp, #-8]
   2ba44:	add	r1, sp, #12
   2ba48:	bl	2bab4 <flatcc_builder_create_vtable@@Base+0x104>
   2ba4c:	str	r0, [fp, #-20]	; 0xffffffec
   2ba50:	movw	r1, #0
   2ba54:	cmp	r1, r0
   2ba58:	bne	2ba68 <flatcc_builder_create_vtable@@Base+0xb8>
   2ba5c:	movw	r0, #0
   2ba60:	str	r0, [fp, #-4]
   2ba64:	b	2baa8 <flatcc_builder_create_vtable@@Base+0xf8>
   2ba68:	b	2baa0 <flatcc_builder_create_vtable@@Base+0xf0>
   2ba6c:	ldr	r0, [fp, #-8]
   2ba70:	add	r1, sp, #12
   2ba74:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2ba78:	str	r0, [fp, #-20]	; 0xffffffec
   2ba7c:	movw	r1, #0
   2ba80:	cmp	r1, r0
   2ba84:	bne	2ba94 <flatcc_builder_create_vtable@@Base+0xe4>
   2ba88:	movw	r0, #0
   2ba8c:	str	r0, [fp, #-4]
   2ba90:	b	2baa8 <flatcc_builder_create_vtable@@Base+0xf8>
   2ba94:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ba98:	add	r0, r0, #1
   2ba9c:	str	r0, [fp, #-20]	; 0xffffffec
   2baa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2baa4:	str	r0, [fp, #-4]
   2baa8:	ldr	r0, [fp, #-4]
   2baac:	mov	sp, fp
   2bab0:	pop	{fp, pc}
   2bab4:	push	{fp, lr}
   2bab8:	mov	fp, sp
   2babc:	sub	sp, sp, #24
   2bac0:	str	r0, [fp, #-4]
   2bac4:	str	r1, [fp, #-8]
   2bac8:	ldr	r0, [fp, #-4]
   2bacc:	ldr	r0, [r0, #140]	; 0x8c
   2bad0:	str	r0, [sp, #12]
   2bad4:	ldr	r0, [sp, #12]
   2bad8:	ldr	r1, [fp, #-8]
   2badc:	ldr	r1, [r1]
   2bae0:	add	r0, r0, r1
   2bae4:	ldr	r1, [fp, #-4]
   2bae8:	str	r0, [r1, #140]	; 0x8c
   2baec:	ldr	r0, [fp, #-4]
   2baf0:	ldr	r0, [r0, #140]	; 0x8c
   2baf4:	ldr	r1, [sp, #12]
   2baf8:	cmp	r0, r1
   2bafc:	bge	2bb20 <flatcc_builder_create_vtable@@Base+0x170>
   2bb00:	ldr	r0, [pc, #168]	; 2bbb0 <flatcc_builder_create_vtable@@Base+0x200>
   2bb04:	add	r0, pc, r0
   2bb08:	ldr	r1, [pc, #164]	; 2bbb4 <flatcc_builder_create_vtable@@Base+0x204>
   2bb0c:	add	r1, pc, r1
   2bb10:	ldr	r2, [pc, #160]	; 2bbb8 <flatcc_builder_create_vtable@@Base+0x208>
   2bb14:	add	r3, pc, r2
   2bb18:	movw	r2, #673	; 0x2a1
   2bb1c:	bl	14f08 <__assert_fail@plt>
   2bb20:	ldr	r0, [fp, #-4]
   2bb24:	ldr	r0, [r0, #44]	; 0x2c
   2bb28:	ldr	r1, [fp, #-4]
   2bb2c:	ldr	r1, [r1, #36]	; 0x24
   2bb30:	ldr	r2, [fp, #-8]
   2bb34:	add	r2, r2, #8
   2bb38:	ldr	r3, [fp, #-8]
   2bb3c:	ldr	r3, [r3, #4]
   2bb40:	ldr	ip, [sp, #12]
   2bb44:	ldr	lr, [fp, #-8]
   2bb48:	ldr	lr, [lr]
   2bb4c:	str	r0, [sp, #8]
   2bb50:	mov	r0, r1
   2bb54:	mov	r1, r2
   2bb58:	mov	r2, r3
   2bb5c:	mov	r3, ip
   2bb60:	str	lr, [sp]
   2bb64:	ldr	ip, [sp, #8]
   2bb68:	blx	ip
   2bb6c:	cmp	r0, #0
   2bb70:	beq	2bb94 <flatcc_builder_create_vtable@@Base+0x1e4>
   2bb74:	ldr	r0, [pc, #40]	; 2bba4 <flatcc_builder_create_vtable@@Base+0x1f4>
   2bb78:	add	r0, pc, r0
   2bb7c:	ldr	r1, [pc, #36]	; 2bba8 <flatcc_builder_create_vtable@@Base+0x1f8>
   2bb80:	add	r1, pc, r1
   2bb84:	ldr	r2, [pc, #32]	; 2bbac <flatcc_builder_create_vtable@@Base+0x1fc>
   2bb88:	add	r3, pc, r2
   2bb8c:	movw	r2, #677	; 0x2a5
   2bb90:	bl	14f08 <__assert_fail@plt>
   2bb94:	ldr	r0, [sp, #12]
   2bb98:	add	r0, r0, #1
   2bb9c:	mov	sp, fp
   2bba0:	pop	{fp, pc}
   2bba4:	andeq	lr, r1, r9, lsl #23
   2bba8:	andeq	sp, r1, r4, asr #19
   2bbac:	strdeq	lr, [r1], -r4
   2bbb0:	strdeq	lr, [r1], -sp
   2bbb4:	andeq	sp, r1, r8, lsr sl
   2bbb8:	andeq	lr, r1, r8, ror #22

0002bbbc <flatcc_builder_create_cached_vtable@@Base>:
   2bbbc:	push	{fp, lr}
   2bbc0:	mov	fp, sp
   2bbc4:	sub	sp, sp, #48	; 0x30
   2bbc8:	str	r0, [fp, #-8]
   2bbcc:	str	r1, [fp, #-12]
   2bbd0:	strh	r2, [fp, #-14]
   2bbd4:	str	r3, [fp, #-20]	; 0xffffffec
   2bbd8:	ldr	r0, [fp, #-8]
   2bbdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bbe0:	bl	2bec8 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   2bbe4:	str	r0, [sp, #12]
   2bbe8:	movw	r1, #0
   2bbec:	cmp	r0, r1
   2bbf0:	bne	2bc00 <flatcc_builder_create_cached_vtable@@Base+0x44>
   2bbf4:	movw	r0, #0
   2bbf8:	str	r0, [fp, #-4]
   2bbfc:	b	2bebc <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bc00:	ldr	r0, [sp, #12]
   2bc04:	str	r0, [sp, #16]
   2bc08:	ldr	r0, [sp, #16]
   2bc0c:	ldr	r0, [r0]
   2bc10:	str	r0, [sp, #8]
   2bc14:	movw	r0, #0
   2bc18:	str	r0, [sp, #20]
   2bc1c:	ldr	r0, [sp, #8]
   2bc20:	cmp	r0, #0
   2bc24:	beq	2bd28 <flatcc_builder_create_cached_vtable@@Base+0x16c>
   2bc28:	ldr	r0, [fp, #-8]
   2bc2c:	ldr	r0, [r0, #100]	; 0x64
   2bc30:	ldr	r1, [sp, #8]
   2bc34:	add	r0, r0, r1
   2bc38:	str	r0, [sp, #24]
   2bc3c:	ldr	r0, [fp, #-8]
   2bc40:	ldr	r0, [r0, #68]	; 0x44
   2bc44:	ldr	r1, [sp, #24]
   2bc48:	ldr	r1, [r1, #8]
   2bc4c:	add	r0, r0, r1
   2bc50:	str	r0, [sp, #4]
   2bc54:	ldr	r0, [sp, #4]
   2bc58:	ldrh	r0, [r0]
   2bc5c:	ldrh	r1, [fp, #-14]
   2bc60:	cmp	r0, r1
   2bc64:	bne	2bc84 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2bc68:	ldr	r0, [fp, #-12]
   2bc6c:	ldr	r1, [sp, #4]
   2bc70:	ldrh	r2, [fp, #-14]
   2bc74:	bl	14e3c <memcmp@plt>
   2bc78:	movw	r1, #0
   2bc7c:	cmp	r1, r0
   2bc80:	beq	2bca0 <flatcc_builder_create_cached_vtable@@Base+0xe4>
   2bc84:	ldr	r0, [sp, #24]
   2bc88:	add	r0, r0, #12
   2bc8c:	str	r0, [sp, #16]
   2bc90:	ldr	r0, [sp, #24]
   2bc94:	ldr	r0, [r0, #12]
   2bc98:	str	r0, [sp, #8]
   2bc9c:	b	2bc1c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2bca0:	ldr	r0, [sp, #24]
   2bca4:	ldr	r0, [r0, #4]
   2bca8:	ldr	r1, [fp, #-8]
   2bcac:	ldr	r1, [r1, #152]	; 0x98
   2bcb0:	cmp	r0, r1
   2bcb4:	beq	2bcdc <flatcc_builder_create_cached_vtable@@Base+0x120>
   2bcb8:	ldr	r0, [sp, #24]
   2bcbc:	str	r0, [sp, #20]
   2bcc0:	ldr	r0, [sp, #24]
   2bcc4:	add	r0, r0, #12
   2bcc8:	str	r0, [sp, #16]
   2bccc:	ldr	r0, [sp, #24]
   2bcd0:	ldr	r0, [r0, #12]
   2bcd4:	str	r0, [sp, #8]
   2bcd8:	b	2bc1c <flatcc_builder_create_cached_vtable@@Base+0x60>
   2bcdc:	ldr	r0, [sp, #16]
   2bce0:	ldr	r1, [sp, #12]
   2bce4:	cmp	r0, r1
   2bce8:	beq	2bd18 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   2bcec:	ldr	r0, [sp, #24]
   2bcf0:	ldr	r0, [r0, #12]
   2bcf4:	ldr	r1, [sp, #16]
   2bcf8:	str	r0, [r1]
   2bcfc:	ldr	r0, [sp, #12]
   2bd00:	ldr	r0, [r0]
   2bd04:	ldr	r1, [sp, #24]
   2bd08:	str	r0, [r1, #12]
   2bd0c:	ldr	r0, [sp, #8]
   2bd10:	ldr	r1, [sp, #12]
   2bd14:	str	r0, [r1]
   2bd18:	ldr	r0, [sp, #24]
   2bd1c:	ldr	r0, [r0]
   2bd20:	str	r0, [fp, #-4]
   2bd24:	b	2bebc <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bd28:	ldr	r0, [fp, #-8]
   2bd2c:	ldr	r1, [fp, #-8]
   2bd30:	ldr	r2, [r1, #124]	; 0x7c
   2bd34:	movw	r1, #6
   2bd38:	movw	r3, #16
   2bd3c:	movw	ip, #0
   2bd40:	str	ip, [sp]
   2bd44:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2bd48:	str	r0, [sp, #24]
   2bd4c:	movw	r1, #0
   2bd50:	cmp	r0, r1
   2bd54:	bne	2bd64 <flatcc_builder_create_cached_vtable@@Base+0x1a8>
   2bd58:	movw	r0, #0
   2bd5c:	str	r0, [fp, #-4]
   2bd60:	b	2bebc <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bd64:	ldr	r0, [fp, #-8]
   2bd68:	ldr	r0, [r0, #124]	; 0x7c
   2bd6c:	str	r0, [sp, #8]
   2bd70:	ldr	r0, [fp, #-8]
   2bd74:	ldr	r1, [r0, #124]	; 0x7c
   2bd78:	add	r1, r1, #16
   2bd7c:	str	r1, [r0, #124]	; 0x7c
   2bd80:	ldr	r0, [fp, #-8]
   2bd84:	ldr	r0, [r0, #152]	; 0x98
   2bd88:	ldr	r1, [sp, #24]
   2bd8c:	str	r0, [r1, #4]
   2bd90:	ldr	r0, [sp, #12]
   2bd94:	ldr	r0, [r0]
   2bd98:	ldr	r1, [sp, #24]
   2bd9c:	str	r0, [r1, #12]
   2bda0:	ldr	r0, [sp, #8]
   2bda4:	ldr	r1, [sp, #12]
   2bda8:	str	r0, [r1]
   2bdac:	ldr	r0, [fp, #-8]
   2bdb0:	ldr	r1, [fp, #-12]
   2bdb4:	ldrh	r2, [fp, #-14]
   2bdb8:	bl	2b9b0 <flatcc_builder_create_vtable@@Base>
   2bdbc:	ldr	r1, [sp, #24]
   2bdc0:	str	r0, [r1]
   2bdc4:	movw	r1, #0
   2bdc8:	cmp	r1, r0
   2bdcc:	bne	2bddc <flatcc_builder_create_cached_vtable@@Base+0x220>
   2bdd0:	movw	r0, #0
   2bdd4:	str	r0, [fp, #-4]
   2bdd8:	b	2bebc <flatcc_builder_create_cached_vtable@@Base+0x300>
   2bddc:	ldr	r0, [sp, #20]
   2bde0:	movw	r1, #0
   2bde4:	cmp	r0, r1
   2bde8:	beq	2be00 <flatcc_builder_create_cached_vtable@@Base+0x244>
   2bdec:	ldr	r0, [sp, #20]
   2bdf0:	ldr	r0, [r0, #8]
   2bdf4:	ldr	r1, [sp, #24]
   2bdf8:	str	r0, [r1, #8]
   2bdfc:	b	2beb0 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2be00:	ldr	r0, [fp, #-8]
   2be04:	ldr	r0, [r0, #172]	; 0xac
   2be08:	cmp	r0, #0
   2be0c:	beq	2be3c <flatcc_builder_create_cached_vtable@@Base+0x280>
   2be10:	ldr	r0, [fp, #-8]
   2be14:	ldr	r0, [r0, #172]	; 0xac
   2be18:	ldr	r1, [fp, #-8]
   2be1c:	ldr	r1, [r1, #120]	; 0x78
   2be20:	ldrh	r2, [fp, #-14]
   2be24:	add	r1, r1, r2
   2be28:	cmp	r0, r1
   2be2c:	bcs	2be3c <flatcc_builder_create_cached_vtable@@Base+0x280>
   2be30:	ldr	r0, [fp, #-8]
   2be34:	bl	28ef8 <flatcc_builder_flush_vtable_cache@@Base>
   2be38:	b	2beac <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2be3c:	ldr	r0, [fp, #-8]
   2be40:	ldr	r1, [fp, #-8]
   2be44:	ldr	r2, [r1, #120]	; 0x78
   2be48:	ldrh	r3, [fp, #-14]
   2be4c:	movw	r1, #2
   2be50:	movw	ip, #0
   2be54:	str	ip, [sp]
   2be58:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2be5c:	str	r0, [sp, #4]
   2be60:	movw	r1, #0
   2be64:	cmp	r0, r1
   2be68:	bne	2be78 <flatcc_builder_create_cached_vtable@@Base+0x2bc>
   2be6c:	mvn	r0, #0
   2be70:	str	r0, [fp, #-4]
   2be74:	b	2bebc <flatcc_builder_create_cached_vtable@@Base+0x300>
   2be78:	ldr	r0, [fp, #-8]
   2be7c:	ldr	r0, [r0, #120]	; 0x78
   2be80:	ldr	r1, [sp, #24]
   2be84:	str	r0, [r1, #8]
   2be88:	ldrh	r0, [fp, #-14]
   2be8c:	ldr	r1, [fp, #-8]
   2be90:	ldr	r2, [r1, #120]	; 0x78
   2be94:	add	r0, r2, r0
   2be98:	str	r0, [r1, #120]	; 0x78
   2be9c:	ldr	r0, [sp, #4]
   2bea0:	ldr	r1, [fp, #-12]
   2bea4:	ldrh	r2, [fp, #-14]
   2bea8:	bl	14e30 <memcpy@plt>
   2beac:	b	2beb0 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   2beb0:	ldr	r0, [sp, #24]
   2beb4:	ldr	r0, [r0]
   2beb8:	str	r0, [fp, #-4]
   2bebc:	ldr	r0, [fp, #-4]
   2bec0:	mov	sp, fp
   2bec4:	pop	{fp, pc}
   2bec8:	push	{fp, lr}
   2becc:	mov	fp, sp
   2bed0:	sub	sp, sp, #16
   2bed4:	str	r0, [sp, #8]
   2bed8:	str	r1, [sp, #4]
   2bedc:	ldr	r0, [sp, #8]
   2bee0:	ldr	r0, [r0, #116]	; 0x74
   2bee4:	cmp	r0, #0
   2bee8:	bne	2bf0c <flatcc_builder_create_cached_vtable@@Base+0x350>
   2beec:	ldr	r0, [sp, #8]
   2bef0:	bl	2e9d4 <flatcc_builder_get_emit_context@@Base+0xe8>
   2bef4:	cmp	r0, #0
   2bef8:	beq	2bf08 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   2befc:	movw	r0, #0
   2bf00:	str	r0, [fp, #-4]
   2bf04:	b	2bf3c <flatcc_builder_create_cached_vtable@@Base+0x380>
   2bf08:	b	2bf0c <flatcc_builder_create_cached_vtable@@Base+0x350>
   2bf0c:	ldr	r0, [sp, #8]
   2bf10:	ldr	r0, [r0, #92]	; 0x5c
   2bf14:	str	r0, [sp]
   2bf18:	ldr	r0, [sp]
   2bf1c:	ldr	r1, [sp, #4]
   2bf20:	ldr	r2, [sp, #8]
   2bf24:	ldr	r2, [r2, #116]	; 0x74
   2bf28:	rsb	r2, r2, #32
   2bf2c:	lsr	r1, r1, r2
   2bf30:	mov	r2, r1
   2bf34:	add	r0, r0, r1, lsl #2
   2bf38:	str	r0, [fp, #-4]
   2bf3c:	ldr	r0, [fp, #-4]
   2bf40:	mov	sp, fp
   2bf44:	pop	{fp, pc}

0002bf48 <flatcc_builder_create_table@@Base>:
   2bf48:	push	{r4, sl, fp, lr}
   2bf4c:	add	fp, sp, #8
   2bf50:	sub	sp, sp, #128	; 0x80
   2bf54:	ldr	ip, [fp, #16]
   2bf58:	ldr	lr, [fp, #12]
   2bf5c:	ldr	r4, [fp, #8]
   2bf60:	str	r0, [fp, #-16]
   2bf64:	str	r1, [fp, #-20]	; 0xffffffec
   2bf68:	str	r2, [fp, #-24]	; 0xffffffe8
   2bf6c:	strh	r3, [fp, #-26]	; 0xffffffe6
   2bf70:	ldr	r0, [fp, #12]
   2bf74:	cmp	r0, #0
   2bf78:	blt	2bf80 <flatcc_builder_create_table@@Base+0x38>
   2bf7c:	b	2bfa0 <flatcc_builder_create_table@@Base+0x58>
   2bf80:	ldr	r0, [pc, #616]	; 2c1f0 <flatcc_builder_create_table@@Base+0x2a8>
   2bf84:	add	r0, pc, r0
   2bf88:	ldr	r1, [pc, #612]	; 2c1f4 <flatcc_builder_create_table@@Base+0x2ac>
   2bf8c:	add	r1, pc, r1
   2bf90:	ldr	r2, [pc, #608]	; 2c1f8 <flatcc_builder_create_table@@Base+0x2b0>
   2bf94:	add	r3, pc, r2
   2bf98:	movw	r2, #1237	; 0x4d5
   2bf9c:	bl	14f08 <__assert_fail@plt>
   2bfa0:	ldr	r0, [fp, #16]
   2bfa4:	and	r0, r0, #1
   2bfa8:	cmp	r0, #0
   2bfac:	beq	2bfb4 <flatcc_builder_create_table@@Base+0x6c>
   2bfb0:	b	2bfd4 <flatcc_builder_create_table@@Base+0x8c>
   2bfb4:	ldr	r0, [pc, #576]	; 2c1fc <flatcc_builder_create_table@@Base+0x2b4>
   2bfb8:	add	r0, pc, r0
   2bfbc:	ldr	r1, [pc, #572]	; 2c200 <flatcc_builder_create_table@@Base+0x2b8>
   2bfc0:	add	r1, pc, r1
   2bfc4:	ldr	r2, [pc, #568]	; 2c204 <flatcc_builder_create_table@@Base+0x2bc>
   2bfc8:	add	r3, pc, r2
   2bfcc:	movw	r2, #1243	; 0x4db
   2bfd0:	bl	14f08 <__assert_fail@plt>
   2bfd4:	sub	r0, fp, #26
   2bfd8:	movw	r1, #4
   2bfdc:	uxth	r1, r1
   2bfe0:	bl	2b4d0 <flatcc_builder_start_vector@@Base+0xac>
   2bfe4:	ldr	r0, [fp, #-16]
   2bfe8:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   2bfec:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2bff0:	ldr	r0, [fp, #-16]
   2bff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bff8:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   2bffc:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   2c000:	str	r0, [fp, #-36]	; 0xffffffdc
   2c004:	ldr	r0, [fp, #-16]
   2c008:	ldr	r0, [r0, #136]	; 0x88
   2c00c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c014:	add	r1, r1, r2
   2c018:	add	r1, r1, #4
   2c01c:	sub	r0, r0, r1
   2c020:	str	r0, [fp, #-52]	; 0xffffffcc
   2c024:	ldr	r0, [fp, #16]
   2c028:	sub	r0, r0, #1
   2c02c:	str	r0, [fp, #-48]	; 0xffffffd0
   2c030:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2c034:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c038:	sub	r0, r0, r1
   2c03c:	str	r0, [fp, #-40]	; 0xffffffd8
   2c040:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2c044:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c048:	sub	r0, r0, r1
   2c04c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c050:	cmp	r0, r1
   2c054:	beq	2c064 <flatcc_builder_create_table@@Base+0x11c>
   2c058:	mvn	r0, #0
   2c05c:	str	r0, [fp, #-12]
   2c060:	b	2c1e4 <flatcc_builder_create_table@@Base+0x29c>
   2c064:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c068:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2c06c:	str	r0, [fp, #-44]	; 0xffffffd4
   2c070:	movw	r0, #0
   2c074:	str	r0, [fp, #-32]	; 0xffffffe0
   2c078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c07c:	ldr	r1, [fp, #12]
   2c080:	cmp	r0, r1
   2c084:	bge	2c0f0 <flatcc_builder_create_table@@Base+0x1a8>
   2c088:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c08c:	ldr	r1, [fp, #8]
   2c090:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c094:	add	r1, r1, r2, lsl #1
   2c098:	ldrh	r1, [r1]
   2c09c:	add	r0, r0, r1
   2c0a0:	str	r0, [fp, #-60]	; 0xffffffc4
   2c0a4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2c0a8:	ldr	r0, [r0]
   2c0ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c0b0:	sub	r0, r0, r1
   2c0b4:	ldr	r1, [fp, #8]
   2c0b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c0bc:	add	r1, r1, r2, lsl #1
   2c0c0:	ldrh	r1, [r1]
   2c0c4:	sub	r0, r0, r1
   2c0c8:	sub	r0, r0, #4
   2c0cc:	str	r0, [fp, #-56]	; 0xffffffc8
   2c0d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2c0d4:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2c0d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2c0dc:	str	r0, [r1]
   2c0e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c0e4:	add	r0, r0, #1
   2c0e8:	str	r0, [fp, #-32]	; 0xffffffe0
   2c0ec:	b	2c078 <flatcc_builder_create_table@@Base+0x130>
   2c0f0:	mov	r0, #0
   2c0f4:	str	r0, [sp, #4]
   2c0f8:	str	r0, [sp, #8]
   2c0fc:	ldr	r0, [sp, #4]
   2c100:	add	r0, r0, #4
   2c104:	str	r0, [sp, #4]
   2c108:	add	r0, sp, #4
   2c10c:	add	r0, r0, #8
   2c110:	ldr	r1, [sp, #8]
   2c114:	sub	r2, fp, #44	; 0x2c
   2c118:	str	r2, [r0, r1, lsl #3]
   2c11c:	ldr	r1, [sp, #8]
   2c120:	add	r0, r0, r1, lsl #3
   2c124:	movw	r1, #4
   2c128:	str	r1, [r0, #4]
   2c12c:	ldr	r0, [sp, #8]
   2c130:	add	r0, r0, #1
   2c134:	str	r0, [sp, #8]
   2c138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c13c:	cmp	r0, #0
   2c140:	bls	2c184 <flatcc_builder_create_table@@Base+0x23c>
   2c144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c148:	ldr	r1, [sp, #4]
   2c14c:	add	r0, r1, r0
   2c150:	str	r0, [sp, #4]
   2c154:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c158:	add	r1, sp, #4
   2c15c:	add	r1, r1, #8
   2c160:	ldr	r2, [sp, #8]
   2c164:	str	r0, [r1, r2, lsl #3]
   2c168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c16c:	ldr	r2, [sp, #8]
   2c170:	add	r1, r1, r2, lsl #3
   2c174:	str	r0, [r1, #4]
   2c178:	ldr	r0, [sp, #8]
   2c17c:	add	r0, r0, #1
   2c180:	str	r0, [sp, #8]
   2c184:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c188:	cmp	r0, #0
   2c18c:	bls	2c1d4 <flatcc_builder_create_table@@Base+0x28c>
   2c190:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c194:	ldr	r1, [sp, #4]
   2c198:	add	r0, r1, r0
   2c19c:	str	r0, [sp, #4]
   2c1a0:	add	r0, sp, #4
   2c1a4:	add	r0, r0, #8
   2c1a8:	ldr	r1, [sp, #8]
   2c1ac:	ldr	r2, [pc, #84]	; 2c208 <flatcc_builder_create_table@@Base+0x2c0>
   2c1b0:	ldr	r2, [pc, r2]
   2c1b4:	str	r2, [r0, r1, lsl #3]
   2c1b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c1bc:	ldr	r2, [sp, #8]
   2c1c0:	add	r0, r0, r2, lsl #3
   2c1c4:	str	r1, [r0, #4]
   2c1c8:	ldr	r0, [sp, #8]
   2c1cc:	add	r0, r0, #1
   2c1d0:	str	r0, [sp, #8]
   2c1d4:	ldr	r0, [fp, #-16]
   2c1d8:	add	r1, sp, #4
   2c1dc:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2c1e0:	str	r0, [fp, #-12]
   2c1e4:	ldr	r0, [fp, #-12]
   2c1e8:	sub	sp, fp, #8
   2c1ec:	pop	{r4, sl, fp, pc}
   2c1f0:	andeq	sp, r1, r3, lsr sp
   2c1f4:			; <UNDEFINED> instruction: 0x0001d5b8
   2c1f8:	andeq	sp, r1, r5, lsr sp
   2c1fc:	andeq	sp, r1, sp, lsr #27
   2c200:	andeq	sp, r1, r4, lsl #11
   2c204:	andeq	sp, r1, r1, lsl #26
   2c208:			; <UNDEFINED> instruction: 0x00030eb0

0002c20c <flatcc_builder_check_required_field@@Base>:
   2c20c:	push	{fp, lr}
   2c210:	mov	fp, sp
   2c214:	sub	sp, sp, #16
   2c218:	str	r0, [fp, #-4]
   2c21c:	strh	r1, [fp, #-6]
   2c220:	ldr	r0, [fp, #-4]
   2c224:	ldr	r0, [r0, #32]
   2c228:	ldrh	r0, [r0, #14]
   2c22c:	cmp	r0, #3
   2c230:	bne	2c238 <flatcc_builder_check_required_field@@Base+0x2c>
   2c234:	b	2c258 <flatcc_builder_check_required_field@@Base+0x4c>
   2c238:	ldr	r0, [pc, #104]	; 2c2a8 <flatcc_builder_check_required_field@@Base+0x9c>
   2c23c:	add	r0, pc, r0
   2c240:	ldr	r1, [pc, #100]	; 2c2ac <flatcc_builder_check_required_field@@Base+0xa0>
   2c244:	add	r1, pc, r1
   2c248:	ldr	r2, [pc, #96]	; 2c2b0 <flatcc_builder_check_required_field@@Base+0xa4>
   2c24c:	add	r3, pc, r2
   2c250:	movw	r2, #1272	; 0x4f8
   2c254:	bl	14f08 <__assert_fail@plt>
   2c258:	ldrh	r0, [fp, #-6]
   2c25c:	ldr	r1, [fp, #-4]
   2c260:	ldrh	r1, [r1, #8]
   2c264:	cmp	r0, r1
   2c268:	movw	r0, #0
   2c26c:	str	r0, [sp, #4]
   2c270:	bge	2c298 <flatcc_builder_check_required_field@@Base+0x8c>
   2c274:	ldr	r0, [fp, #-4]
   2c278:	ldr	r0, [r0, #4]
   2c27c:	ldrh	r1, [fp, #-6]
   2c280:	add	r0, r0, r1, lsl #1
   2c284:	ldrh	r0, [r0]
   2c288:	cmp	r0, #0
   2c28c:	movw	r0, #0
   2c290:	movne	r0, #1
   2c294:	str	r0, [sp, #4]
   2c298:	ldr	r0, [sp, #4]
   2c29c:	and	r0, r0, #1
   2c2a0:	mov	sp, fp
   2c2a4:	pop	{fp, pc}
   2c2a8:	andeq	sp, r1, r4, lsr fp
   2c2ac:	andeq	sp, r1, r0, lsl #6
   2c2b0:	andeq	sp, r1, pc, asr #22

0002c2b4 <flatcc_builder_check_union_field@@Base>:
   2c2b4:	push	{fp, lr}
   2c2b8:	mov	fp, sp
   2c2bc:	sub	sp, sp, #16
   2c2c0:	str	r0, [sp, #8]
   2c2c4:	strh	r1, [sp, #6]
   2c2c8:	ldr	r0, [sp, #8]
   2c2cc:	ldr	r0, [r0, #32]
   2c2d0:	ldrh	r0, [r0, #14]
   2c2d4:	cmp	r0, #3
   2c2d8:	bne	2c2e0 <flatcc_builder_check_union_field@@Base+0x2c>
   2c2dc:	b	2c300 <flatcc_builder_check_union_field@@Base+0x4c>
   2c2e0:	ldr	r0, [pc, #284]	; 2c404 <flatcc_builder_check_union_field@@Base+0x150>
   2c2e4:	add	r0, pc, r0
   2c2e8:	ldr	r1, [pc, #280]	; 2c408 <flatcc_builder_check_union_field@@Base+0x154>
   2c2ec:	add	r1, pc, r1
   2c2f0:	ldr	r2, [pc, #276]	; 2c40c <flatcc_builder_check_union_field@@Base+0x158>
   2c2f4:	add	r3, pc, r2
   2c2f8:	movw	r2, #1279	; 0x4ff
   2c2fc:	bl	14f08 <__assert_fail@plt>
   2c300:	ldrh	r0, [sp, #6]
   2c304:	cmp	r0, #0
   2c308:	beq	2c320 <flatcc_builder_check_union_field@@Base+0x6c>
   2c30c:	ldrh	r0, [sp, #6]
   2c310:	ldr	r1, [sp, #8]
   2c314:	ldrh	r1, [r1, #8]
   2c318:	cmp	r0, r1
   2c31c:	blt	2c32c <flatcc_builder_check_union_field@@Base+0x78>
   2c320:	movw	r0, #0
   2c324:	str	r0, [fp, #-4]
   2c328:	b	2c3f8 <flatcc_builder_check_union_field@@Base+0x144>
   2c32c:	ldr	r0, [sp, #8]
   2c330:	ldr	r0, [r0, #4]
   2c334:	ldrh	r1, [sp, #6]
   2c338:	sub	r1, r1, #1
   2c33c:	add	r0, r0, r1, lsl #1
   2c340:	ldrh	r0, [r0]
   2c344:	cmp	r0, #0
   2c348:	bne	2c378 <flatcc_builder_check_union_field@@Base+0xc4>
   2c34c:	ldr	r0, [sp, #8]
   2c350:	ldr	r0, [r0, #4]
   2c354:	ldrh	r1, [sp, #6]
   2c358:	add	r0, r0, r1, lsl #1
   2c35c:	ldrh	r0, [r0]
   2c360:	cmp	r0, #0
   2c364:	movw	r0, #0
   2c368:	moveq	r0, #1
   2c36c:	and	r0, r0, #1
   2c370:	str	r0, [fp, #-4]
   2c374:	b	2c3f8 <flatcc_builder_check_union_field@@Base+0x144>
   2c378:	ldr	r0, [sp, #8]
   2c37c:	ldr	r1, [r0, #4]
   2c380:	ldr	r0, [r0, #16]
   2c384:	ldrh	r2, [sp, #6]
   2c388:	sub	r2, r2, #1
   2c38c:	add	r1, r1, r2, lsl #1
   2c390:	ldrh	r1, [r1]
   2c394:	add	r0, r0, r1
   2c398:	ldrsb	r0, [r0]
   2c39c:	cmp	r0, #0
   2c3a0:	beq	2c3d0 <flatcc_builder_check_union_field@@Base+0x11c>
   2c3a4:	ldr	r0, [sp, #8]
   2c3a8:	ldr	r0, [r0, #4]
   2c3ac:	ldrh	r1, [sp, #6]
   2c3b0:	add	r0, r0, r1, lsl #1
   2c3b4:	ldrh	r0, [r0]
   2c3b8:	cmp	r0, #0
   2c3bc:	movw	r0, #0
   2c3c0:	movne	r0, #1
   2c3c4:	and	r0, r0, #1
   2c3c8:	str	r0, [fp, #-4]
   2c3cc:	b	2c3f8 <flatcc_builder_check_union_field@@Base+0x144>
   2c3d0:	ldr	r0, [sp, #8]
   2c3d4:	ldr	r0, [r0, #4]
   2c3d8:	ldrh	r1, [sp, #6]
   2c3dc:	add	r0, r0, r1, lsl #1
   2c3e0:	ldrh	r0, [r0]
   2c3e4:	cmp	r0, #0
   2c3e8:	movw	r0, #0
   2c3ec:	moveq	r0, #1
   2c3f0:	and	r0, r0, #1
   2c3f4:	str	r0, [fp, #-4]
   2c3f8:	ldr	r0, [fp, #-4]
   2c3fc:	mov	sp, fp
   2c400:	pop	{fp, pc}
   2c404:	andeq	sp, r1, ip, lsl #21
   2c408:	andeq	sp, r1, r8, asr r2
   2c40c:	strdeq	sp, [r1], -sl

0002c410 <flatcc_builder_check_required@@Base>:
   2c410:	push	{fp, lr}
   2c414:	mov	fp, sp
   2c418:	sub	sp, sp, #24
   2c41c:	str	r0, [fp, #-8]
   2c420:	str	r1, [sp, #12]
   2c424:	str	r2, [sp, #8]
   2c428:	ldr	r0, [fp, #-8]
   2c42c:	ldr	r0, [r0, #32]
   2c430:	ldrh	r0, [r0, #14]
   2c434:	cmp	r0, #3
   2c438:	bne	2c440 <flatcc_builder_check_required@@Base+0x30>
   2c43c:	b	2c460 <flatcc_builder_check_required@@Base+0x50>
   2c440:	ldr	r0, [pc, #172]	; 2c4f4 <flatcc_builder_check_required@@Base+0xe4>
   2c444:	add	r0, pc, r0
   2c448:	ldr	r1, [pc, #168]	; 2c4f8 <flatcc_builder_check_required@@Base+0xe8>
   2c44c:	add	r1, pc, r1
   2c450:	ldr	r2, [pc, #164]	; 2c4fc <flatcc_builder_check_required@@Base+0xec>
   2c454:	add	r3, pc, r2
   2c458:	movw	r2, #1297	; 0x511
   2c45c:	bl	14f08 <__assert_fail@plt>
   2c460:	ldr	r0, [fp, #-8]
   2c464:	ldrh	r0, [r0, #8]
   2c468:	ldr	r1, [sp, #8]
   2c46c:	cmp	r0, r1
   2c470:	bge	2c480 <flatcc_builder_check_required@@Base+0x70>
   2c474:	movw	r0, #0
   2c478:	str	r0, [fp, #-4]
   2c47c:	b	2c4e8 <flatcc_builder_check_required@@Base+0xd8>
   2c480:	movw	r0, #0
   2c484:	str	r0, [sp, #4]
   2c488:	ldr	r0, [sp, #4]
   2c48c:	ldr	r1, [sp, #8]
   2c490:	cmp	r0, r1
   2c494:	bge	2c4e0 <flatcc_builder_check_required@@Base+0xd0>
   2c498:	ldr	r0, [fp, #-8]
   2c49c:	ldr	r0, [r0, #4]
   2c4a0:	ldr	r1, [sp, #12]
   2c4a4:	ldr	r2, [sp, #4]
   2c4a8:	add	r1, r1, r2, lsl #1
   2c4ac:	ldrh	r1, [r1]
   2c4b0:	add	r0, r0, r1, lsl #1
   2c4b4:	ldrh	r0, [r0]
   2c4b8:	cmp	r0, #0
   2c4bc:	bne	2c4cc <flatcc_builder_check_required@@Base+0xbc>
   2c4c0:	movw	r0, #0
   2c4c4:	str	r0, [fp, #-4]
   2c4c8:	b	2c4e8 <flatcc_builder_check_required@@Base+0xd8>
   2c4cc:	b	2c4d0 <flatcc_builder_check_required@@Base+0xc0>
   2c4d0:	ldr	r0, [sp, #4]
   2c4d4:	add	r0, r0, #1
   2c4d8:	str	r0, [sp, #4]
   2c4dc:	b	2c488 <flatcc_builder_check_required@@Base+0x78>
   2c4e0:	movw	r0, #1
   2c4e4:	str	r0, [fp, #-4]
   2c4e8:	ldr	r0, [fp, #-4]
   2c4ec:	mov	sp, fp
   2c4f0:	pop	{fp, pc}
   2c4f4:	andeq	sp, r1, ip, lsr #18
   2c4f8:	strdeq	sp, [r1], -r8
   2c4fc:	andeq	sp, r1, sl, ror #19

0002c500 <flatcc_builder_end_table@@Base>:
   2c500:	push	{r4, r5, fp, lr}
   2c504:	add	fp, sp, #8
   2c508:	sub	sp, sp, #48	; 0x30
   2c50c:	str	r0, [fp, #-16]
   2c510:	ldr	r0, [fp, #-16]
   2c514:	ldr	r0, [r0, #32]
   2c518:	ldrh	r0, [r0, #14]
   2c51c:	cmp	r0, #3
   2c520:	bne	2c528 <flatcc_builder_end_table@@Base+0x28>
   2c524:	b	2c548 <flatcc_builder_end_table@@Base+0x48>
   2c528:	ldr	r0, [pc, #500]	; 2c724 <flatcc_builder_end_table@@Base+0x224>
   2c52c:	add	r0, pc, r0
   2c530:	ldr	r1, [pc, #496]	; 2c728 <flatcc_builder_end_table@@Base+0x228>
   2c534:	add	r1, pc, r1
   2c538:	ldr	r2, [pc, #492]	; 2c72c <flatcc_builder_end_table@@Base+0x22c>
   2c53c:	add	r3, pc, r2
   2c540:	movw	r2, #1317	; 0x525
   2c544:	bl	14f08 <__assert_fail@plt>
   2c548:	ldr	r0, [pc, #480]	; 2c730 <flatcc_builder_end_table@@Base+0x230>
   2c54c:	ldr	r1, [fp, #-16]
   2c550:	ldr	r1, [r1, #4]
   2c554:	sub	r1, r1, #4
   2c558:	str	r1, [fp, #-20]	; 0xffffffec
   2c55c:	ldr	r1, [fp, #-16]
   2c560:	ldrh	r1, [r1, #8]
   2c564:	add	r1, r1, #2
   2c568:	lsl	r1, r1, #1
   2c56c:	strh	r1, [fp, #-22]	; 0xffffffea
   2c570:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2c574:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c578:	strh	r1, [r2]
   2c57c:	ldr	r1, [fp, #-16]
   2c580:	ldr	r1, [r1, #20]
   2c584:	uxth	r1, r1
   2c588:	add	r1, r1, #4
   2c58c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c590:	strh	r1, [r2, #2]
   2c594:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c598:	ldrh	r1, [r1]
   2c59c:	ldr	r2, [fp, #-16]
   2c5a0:	ldr	r2, [r2, #12]
   2c5a4:	eor	r1, r1, r2
   2c5a8:	mul	r1, r1, r0
   2c5ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c5b0:	ldrh	r2, [r2, #2]
   2c5b4:	eor	r1, r1, r2
   2c5b8:	mul	r0, r1, r0
   2c5bc:	ldr	r1, [fp, #-16]
   2c5c0:	str	r0, [r1, #12]
   2c5c4:	ldr	r0, [fp, #-16]
   2c5c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c5cc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2c5d0:	ldr	r3, [fp, #-16]
   2c5d4:	ldr	r3, [r3, #12]
   2c5d8:	uxth	r2, r2
   2c5dc:	bl	2bbbc <flatcc_builder_create_cached_vtable@@Base>
   2c5e0:	str	r0, [sp, #24]
   2c5e4:	cmp	r0, #0
   2c5e8:	bne	2c5f8 <flatcc_builder_end_table@@Base+0xf8>
   2c5ec:	movw	r0, #0
   2c5f0:	str	r0, [fp, #-12]
   2c5f4:	b	2c718 <flatcc_builder_end_table@@Base+0x218>
   2c5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5fc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2c600:	mov	r1, #0
   2c604:	bl	14ec0 <memset@plt>
   2c608:	ldr	r1, [fp, #-16]
   2c60c:	ldr	r2, [r1, #32]
   2c610:	ldr	r1, [r1, #76]	; 0x4c
   2c614:	ldr	r2, [r2, #20]
   2c618:	add	r1, r1, r2
   2c61c:	str	r1, [sp, #16]
   2c620:	ldr	r1, [fp, #-16]
   2c624:	ldr	r1, [r1]
   2c628:	ldr	r2, [sp, #16]
   2c62c:	sub	r1, r1, r2
   2c630:	asr	r1, r1, #1
   2c634:	str	r1, [sp, #20]
   2c638:	ldr	r1, [fp, #-16]
   2c63c:	ldr	r2, [fp, #-16]
   2c640:	ldr	r2, [r2, #16]
   2c644:	ldr	r3, [fp, #-16]
   2c648:	ldr	r3, [r3, #20]
   2c64c:	ldr	ip, [fp, #-16]
   2c650:	ldrh	ip, [ip, #130]	; 0x82
   2c654:	ldr	lr, [sp, #16]
   2c658:	ldr	r4, [sp, #20]
   2c65c:	ldr	r5, [sp, #24]
   2c660:	str	r0, [sp, #12]
   2c664:	mov	r0, r1
   2c668:	mov	r1, r2
   2c66c:	mov	r2, r3
   2c670:	uxth	r3, ip
   2c674:	str	lr, [sp]
   2c678:	str	r4, [sp, #4]
   2c67c:	str	r5, [sp, #8]
   2c680:	bl	2bf48 <flatcc_builder_create_table@@Base>
   2c684:	str	r0, [sp, #28]
   2c688:	movw	r1, #0
   2c68c:	cmp	r1, r0
   2c690:	bne	2c6a0 <flatcc_builder_end_table@@Base+0x1a0>
   2c694:	movw	r0, #0
   2c698:	str	r0, [fp, #-12]
   2c69c:	b	2c718 <flatcc_builder_end_table@@Base+0x218>
   2c6a0:	ldr	r0, [fp, #-16]
   2c6a4:	ldr	r0, [r0, #32]
   2c6a8:	ldr	r0, [r0, #24]
   2c6ac:	ldr	r1, [fp, #-16]
   2c6b0:	str	r0, [r1, #12]
   2c6b4:	ldr	r0, [fp, #-16]
   2c6b8:	ldr	r0, [r0, #32]
   2c6bc:	ldrh	r0, [r0, #28]
   2c6c0:	ldr	r1, [fp, #-16]
   2c6c4:	strh	r0, [r1, #8]
   2c6c8:	ldr	r0, [fp, #-16]
   2c6cc:	ldr	r0, [r0, #52]	; 0x34
   2c6d0:	ldr	r1, [fp, #-16]
   2c6d4:	ldr	r1, [r1, #32]
   2c6d8:	ldr	r1, [r1, #16]
   2c6dc:	add	r0, r0, r1
   2c6e0:	ldr	r1, [fp, #-16]
   2c6e4:	str	r0, [r1, #4]
   2c6e8:	ldr	r0, [fp, #-16]
   2c6ec:	ldr	r0, [r0, #76]	; 0x4c
   2c6f0:	ldr	r1, [fp, #-16]
   2c6f4:	ldr	r1, [r1, #32]
   2c6f8:	ldr	r1, [r1, #20]
   2c6fc:	add	r0, r0, r1
   2c700:	ldr	r1, [fp, #-16]
   2c704:	str	r0, [r1]
   2c708:	ldr	r0, [fp, #-16]
   2c70c:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2c710:	ldr	r0, [sp, #28]
   2c714:	str	r0, [fp, #-12]
   2c718:	ldr	r0, [fp, #-12]
   2c71c:	sub	sp, fp, #8
   2c720:	pop	{r4, r5, fp, pc}
   2c724:	andeq	sp, r1, r4, asr #16
   2c728:	andeq	sp, r1, r0, lsl r0
   2c72c:	andeq	sp, r1, ip, asr r9
   2c730:			; <UNDEFINED> instruction: 0x9e3779b1

0002c734 <flatcc_builder_create_vector@@Base>:
   2c734:	push	{fp, lr}
   2c738:	mov	fp, sp
   2c73c:	sub	sp, sp, #112	; 0x70
   2c740:	ldr	ip, [fp, #12]
   2c744:	ldr	lr, [fp, #8]
   2c748:	str	r0, [fp, #-8]
   2c74c:	str	r1, [fp, #-12]
   2c750:	str	r2, [fp, #-16]
   2c754:	str	r3, [fp, #-20]	; 0xffffffec
   2c758:	strh	lr, [fp, #-22]	; 0xffffffea
   2c75c:	ldr	r0, [fp, #-16]
   2c760:	ldr	r1, [fp, #12]
   2c764:	cmp	r0, r1
   2c768:	bls	2c7ac <flatcc_builder_create_vector@@Base+0x78>
   2c76c:	ldr	r0, [fp, #-16]
   2c770:	ldr	r1, [fp, #12]
   2c774:	cmp	r0, r1
   2c778:	bhi	2c780 <flatcc_builder_create_vector@@Base+0x4c>
   2c77c:	b	2c7a0 <flatcc_builder_create_vector@@Base+0x6c>
   2c780:	ldr	r0, [pc, #364]	; 2c8f4 <flatcc_builder_create_vector@@Base+0x1c0>
   2c784:	add	r0, pc, r0
   2c788:	ldr	r1, [pc, #360]	; 2c8f8 <flatcc_builder_create_vector@@Base+0x1c4>
   2c78c:	add	r1, pc, r1
   2c790:	ldr	r2, [pc, #356]	; 2c8fc <flatcc_builder_create_vector@@Base+0x1c8>
   2c794:	add	r3, pc, r2
   2c798:	movw	r2, #1365	; 0x555
   2c79c:	bl	14f08 <__assert_fail@plt>
   2c7a0:	movw	r0, #0
   2c7a4:	str	r0, [fp, #-4]
   2c7a8:	b	2c8e8 <flatcc_builder_create_vector@@Base+0x1b4>
   2c7ac:	sub	r0, fp, #22
   2c7b0:	mov	r1, #4
   2c7b4:	bl	2b4d0 <flatcc_builder_start_vector@@Base+0xac>
   2c7b8:	ldr	r0, [fp, #-8]
   2c7bc:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2c7c0:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2c7c4:	ldr	r0, [fp, #-16]
   2c7c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c7cc:	mul	r0, r0, r1
   2c7d0:	str	r0, [fp, #-28]	; 0xffffffe4
   2c7d4:	ldr	r0, [fp, #-16]
   2c7d8:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2c7dc:	str	r0, [fp, #-36]	; 0xffffffdc
   2c7e0:	ldr	r0, [fp, #-8]
   2c7e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2c7e8:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2c7ec:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   2c7f0:	str	r0, [fp, #-32]	; 0xffffffe0
   2c7f4:	mov	r0, #0
   2c7f8:	str	r0, [sp, #4]
   2c7fc:	str	r0, [sp, #8]
   2c800:	ldr	r0, [sp, #4]
   2c804:	add	r0, r0, #4
   2c808:	str	r0, [sp, #4]
   2c80c:	add	r0, sp, #4
   2c810:	add	r0, r0, #8
   2c814:	ldr	r1, [sp, #8]
   2c818:	sub	r2, fp, #36	; 0x24
   2c81c:	str	r2, [r0, r1, lsl #3]
   2c820:	ldr	r1, [sp, #8]
   2c824:	add	r0, r0, r1, lsl #3
   2c828:	movw	r1, #4
   2c82c:	str	r1, [r0, #4]
   2c830:	ldr	r0, [sp, #8]
   2c834:	add	r0, r0, #1
   2c838:	str	r0, [sp, #8]
   2c83c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c840:	cmp	r0, #0
   2c844:	bls	2c888 <flatcc_builder_create_vector@@Base+0x154>
   2c848:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c84c:	ldr	r1, [sp, #4]
   2c850:	add	r0, r1, r0
   2c854:	str	r0, [sp, #4]
   2c858:	ldr	r0, [fp, #-12]
   2c85c:	add	r1, sp, #4
   2c860:	add	r1, r1, #8
   2c864:	ldr	r2, [sp, #8]
   2c868:	str	r0, [r1, r2, lsl #3]
   2c86c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c870:	ldr	r2, [sp, #8]
   2c874:	add	r1, r1, r2, lsl #3
   2c878:	str	r0, [r1, #4]
   2c87c:	ldr	r0, [sp, #8]
   2c880:	add	r0, r0, #1
   2c884:	str	r0, [sp, #8]
   2c888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c88c:	cmp	r0, #0
   2c890:	bls	2c8d8 <flatcc_builder_create_vector@@Base+0x1a4>
   2c894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c898:	ldr	r1, [sp, #4]
   2c89c:	add	r0, r1, r0
   2c8a0:	str	r0, [sp, #4]
   2c8a4:	add	r0, sp, #4
   2c8a8:	add	r0, r0, #8
   2c8ac:	ldr	r1, [sp, #8]
   2c8b0:	ldr	r2, [pc, #72]	; 2c900 <flatcc_builder_create_vector@@Base+0x1cc>
   2c8b4:	ldr	r2, [pc, r2]
   2c8b8:	str	r2, [r0, r1, lsl #3]
   2c8bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c8c0:	ldr	r2, [sp, #8]
   2c8c4:	add	r0, r0, r2, lsl #3
   2c8c8:	str	r1, [r0, #4]
   2c8cc:	ldr	r0, [sp, #8]
   2c8d0:	add	r0, r0, #1
   2c8d4:	str	r0, [sp, #8]
   2c8d8:	ldr	r0, [fp, #-8]
   2c8dc:	add	r1, sp, #4
   2c8e0:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2c8e4:	str	r0, [fp, #-4]
   2c8e8:	ldr	r0, [fp, #-4]
   2c8ec:	mov	sp, fp
   2c8f0:	pop	{fp, pc}
   2c8f4:	andeq	sp, r1, r6, asr r7
   2c8f8:			; <UNDEFINED> instruction: 0x0001cdb8
   2c8fc:	andeq	sp, r1, r9, asr r7
   2c900:	andeq	r0, r3, ip, lsr #15

0002c904 <flatcc_builder_end_vector@@Base>:
   2c904:	push	{fp, lr}
   2c908:	mov	fp, sp
   2c90c:	sub	sp, sp, #24
   2c910:	str	r0, [fp, #-8]
   2c914:	ldr	r0, [fp, #-8]
   2c918:	ldr	r0, [r0, #32]
   2c91c:	ldrh	r0, [r0, #14]
   2c920:	cmp	r0, #4
   2c924:	bne	2c92c <flatcc_builder_end_vector@@Base+0x28>
   2c928:	b	2c94c <flatcc_builder_end_vector@@Base+0x48>
   2c92c:	ldr	r0, [pc, #152]	; 2c9cc <flatcc_builder_end_vector@@Base+0xc8>
   2c930:	add	r0, pc, r0
   2c934:	ldr	r1, [pc, #148]	; 2c9d0 <flatcc_builder_end_vector@@Base+0xcc>
   2c938:	add	r1, pc, r1
   2c93c:	ldr	r2, [pc, #144]	; 2c9d4 <flatcc_builder_end_vector@@Base+0xd0>
   2c940:	add	r3, pc, r2
   2c944:	movw	r2, #1400	; 0x578
   2c948:	bl	14f08 <__assert_fail@plt>
   2c94c:	ldr	r0, [fp, #-8]
   2c950:	ldr	r1, [fp, #-8]
   2c954:	ldr	r1, [r1, #16]
   2c958:	ldr	r2, [fp, #-8]
   2c95c:	ldr	r2, [r2, #32]
   2c960:	ldr	r2, [r2, #20]
   2c964:	ldr	r3, [fp, #-8]
   2c968:	ldr	r3, [r3, #32]
   2c96c:	ldr	r3, [r3, #16]
   2c970:	ldr	ip, [fp, #-8]
   2c974:	ldrh	ip, [ip, #130]	; 0x82
   2c978:	ldr	lr, [fp, #-8]
   2c97c:	ldr	lr, [lr, #32]
   2c980:	ldr	lr, [lr, #24]
   2c984:	uxth	ip, ip
   2c988:	str	ip, [sp]
   2c98c:	str	lr, [sp, #4]
   2c990:	bl	2c734 <flatcc_builder_create_vector@@Base>
   2c994:	str	r0, [sp, #12]
   2c998:	movw	r1, #0
   2c99c:	cmp	r1, r0
   2c9a0:	bne	2c9b0 <flatcc_builder_end_vector@@Base+0xac>
   2c9a4:	movw	r0, #0
   2c9a8:	str	r0, [fp, #-4]
   2c9ac:	b	2c9c0 <flatcc_builder_end_vector@@Base+0xbc>
   2c9b0:	ldr	r0, [fp, #-8]
   2c9b4:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2c9b8:	ldr	r0, [sp, #12]
   2c9bc:	str	r0, [fp, #-4]
   2c9c0:	ldr	r0, [fp, #-4]
   2c9c4:	mov	sp, fp
   2c9c8:	pop	{fp, pc}
   2c9cc:	andeq	ip, r1, lr, asr #30
   2c9d0:	andeq	ip, r1, ip, lsl #24
   2c9d4:	andeq	sp, r1, r3, lsr #12

0002c9d8 <flatcc_builder_vector_count@@Base>:
   2c9d8:	sub	sp, sp, #4
   2c9dc:	str	r0, [sp]
   2c9e0:	ldr	r0, [sp]
   2c9e4:	ldr	r0, [r0, #32]
   2c9e8:	ldr	r0, [r0, #20]
   2c9ec:	add	sp, sp, #4
   2c9f0:	bx	lr

0002c9f4 <flatcc_builder_vector_edit@@Base>:
   2c9f4:	sub	sp, sp, #4
   2c9f8:	str	r0, [sp]
   2c9fc:	ldr	r0, [sp]
   2ca00:	ldr	r0, [r0, #16]
   2ca04:	add	sp, sp, #4
   2ca08:	bx	lr

0002ca0c <flatcc_builder_create_offset_vector_direct@@Base>:
   2ca0c:	push	{fp, lr}
   2ca10:	mov	fp, sp
   2ca14:	sub	sp, sp, #16
   2ca18:	str	r0, [fp, #-4]
   2ca1c:	str	r1, [sp, #8]
   2ca20:	str	r2, [sp, #4]
   2ca24:	ldr	r0, [fp, #-4]
   2ca28:	ldr	r1, [sp, #8]
   2ca2c:	ldr	r2, [sp, #4]
   2ca30:	movw	r3, #0
   2ca34:	bl	2ca40 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2ca38:	mov	sp, fp
   2ca3c:	pop	{fp, pc}
   2ca40:	push	{fp, lr}
   2ca44:	mov	fp, sp
   2ca48:	sub	sp, sp, #120	; 0x78
   2ca4c:	ldr	ip, [pc, #696]	; 2cd0c <flatcc_builder_create_offset_vector_direct@@Base+0x300>
   2ca50:	str	r0, [fp, #-8]
   2ca54:	str	r1, [fp, #-12]
   2ca58:	str	r2, [fp, #-16]
   2ca5c:	str	r3, [fp, #-20]	; 0xffffffec
   2ca60:	ldr	r0, [fp, #-16]
   2ca64:	cmp	r0, ip
   2ca68:	bls	2ca78 <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
   2ca6c:	movw	r0, #0
   2ca70:	str	r0, [fp, #-4]
   2ca74:	b	2cd00 <flatcc_builder_create_offset_vector_direct@@Base+0x2f4>
   2ca78:	ldr	r0, [fp, #-8]
   2ca7c:	mov	r1, #4
   2ca80:	str	r1, [sp]
   2ca84:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2ca88:	ldr	r0, [fp, #-16]
   2ca8c:	lsl	r0, r0, #2
   2ca90:	str	r0, [fp, #-24]	; 0xffffffe8
   2ca94:	ldr	r0, [fp, #-16]
   2ca98:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2ca9c:	str	r0, [fp, #-32]	; 0xffffffe0
   2caa0:	ldr	r0, [fp, #-8]
   2caa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2caa8:	ldr	r2, [sp]
   2caac:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   2cab0:	str	r0, [fp, #-28]	; 0xffffffe4
   2cab4:	mov	r0, #0
   2cab8:	str	r0, [sp, #4]
   2cabc:	str	r0, [sp, #8]
   2cac0:	ldr	r0, [sp, #4]
   2cac4:	add	r0, r0, #4
   2cac8:	str	r0, [sp, #4]
   2cacc:	add	r0, sp, #4
   2cad0:	add	r0, r0, #8
   2cad4:	ldr	r1, [sp, #8]
   2cad8:	sub	r2, fp, #32
   2cadc:	str	r2, [r0, r1, lsl #3]
   2cae0:	ldr	r1, [sp, #8]
   2cae4:	add	r0, r0, r1, lsl #3
   2cae8:	movw	r1, #4
   2caec:	str	r1, [r0, #4]
   2caf0:	ldr	r0, [sp, #8]
   2caf4:	add	r0, r0, #1
   2caf8:	str	r0, [sp, #8]
   2cafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb00:	cmp	r0, #0
   2cb04:	bls	2cb48 <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   2cb08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb0c:	ldr	r1, [sp, #4]
   2cb10:	add	r0, r1, r0
   2cb14:	str	r0, [sp, #4]
   2cb18:	ldr	r0, [fp, #-12]
   2cb1c:	add	r1, sp, #4
   2cb20:	add	r1, r1, #8
   2cb24:	ldr	r2, [sp, #8]
   2cb28:	str	r0, [r1, r2, lsl #3]
   2cb2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2cb30:	ldr	r2, [sp, #8]
   2cb34:	add	r1, r1, r2, lsl #3
   2cb38:	str	r0, [r1, #4]
   2cb3c:	ldr	r0, [sp, #8]
   2cb40:	add	r0, r0, #1
   2cb44:	str	r0, [sp, #8]
   2cb48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cb4c:	cmp	r0, #0
   2cb50:	bls	2cb98 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   2cb54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2cb58:	ldr	r1, [sp, #4]
   2cb5c:	add	r0, r1, r0
   2cb60:	str	r0, [sp, #4]
   2cb64:	add	r0, sp, #4
   2cb68:	add	r0, r0, #8
   2cb6c:	ldr	r1, [sp, #8]
   2cb70:	ldr	r2, [pc, #444]	; 2cd34 <flatcc_builder_create_offset_vector_direct@@Base+0x328>
   2cb74:	ldr	r2, [pc, r2]
   2cb78:	str	r2, [r0, r1, lsl #3]
   2cb7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2cb80:	ldr	r2, [sp, #8]
   2cb84:	add	r0, r0, r2, lsl #3
   2cb88:	str	r1, [r0, #4]
   2cb8c:	ldr	r0, [sp, #8]
   2cb90:	add	r0, r0, #1
   2cb94:	str	r0, [sp, #8]
   2cb98:	ldr	r0, [fp, #-8]
   2cb9c:	ldr	r0, [r0, #136]	; 0x88
   2cba0:	ldr	r1, [sp, #4]
   2cba4:	sub	r0, r0, r1
   2cba8:	str	r0, [fp, #-36]	; 0xffffffdc
   2cbac:	movw	r0, #0
   2cbb0:	str	r0, [fp, #-44]	; 0xffffffd4
   2cbb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2cbb8:	ldr	r1, [fp, #-16]
   2cbbc:	cmp	r0, r1
   2cbc0:	bcs	2ccf0 <flatcc_builder_create_offset_vector_direct@@Base+0x2e4>
   2cbc4:	ldr	r0, [fp, #-12]
   2cbc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2cbcc:	add	r0, r0, r1, lsl #2
   2cbd0:	ldr	r0, [r0]
   2cbd4:	cmp	r0, #0
   2cbd8:	beq	2cc68 <flatcc_builder_create_offset_vector_direct@@Base+0x25c>
   2cbdc:	ldr	r0, [fp, #-12]
   2cbe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2cbe4:	ldr	r0, [r0, r1, lsl #2]
   2cbe8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2cbec:	sub	r0, r0, r2
   2cbf0:	sub	r0, r0, r1, lsl #2
   2cbf4:	sub	r0, r0, #4
   2cbf8:	str	r0, [fp, #-40]	; 0xffffffd8
   2cbfc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2cc00:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2cc04:	ldr	r1, [fp, #-12]
   2cc08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2cc0c:	add	r1, r1, r2, lsl #2
   2cc10:	str	r0, [r1]
   2cc14:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc18:	movw	r1, #0
   2cc1c:	cmp	r0, r1
   2cc20:	beq	2cc64 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2cc24:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2cc2c:	add	r0, r0, r1
   2cc30:	ldrb	r0, [r0]
   2cc34:	cmp	r0, #0
   2cc38:	beq	2cc40 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   2cc3c:	b	2cc60 <flatcc_builder_create_offset_vector_direct@@Base+0x254>
   2cc40:	ldr	r0, [pc, #224]	; 2cd28 <flatcc_builder_create_offset_vector_direct@@Base+0x31c>
   2cc44:	add	r0, pc, r0
   2cc48:	ldr	r1, [pc, #220]	; 2cd2c <flatcc_builder_create_offset_vector_direct@@Base+0x320>
   2cc4c:	add	r1, pc, r1
   2cc50:	ldr	r2, [pc, #216]	; 2cd30 <flatcc_builder_create_offset_vector_direct@@Base+0x324>
   2cc54:	add	r3, pc, r2
   2cc58:	movw	r2, #1457	; 0x5b1
   2cc5c:	bl	14f08 <__assert_fail@plt>
   2cc60:	b	2cc64 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   2cc64:	b	2ccdc <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2cc68:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc6c:	movw	r1, #0
   2cc70:	cmp	r0, r1
   2cc74:	beq	2ccb8 <flatcc_builder_create_offset_vector_direct@@Base+0x2ac>
   2cc78:	ldr	r0, [fp, #-20]	; 0xffffffec
   2cc7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2cc80:	add	r0, r0, r1
   2cc84:	ldrb	r0, [r0]
   2cc88:	cmp	r0, #0
   2cc8c:	bne	2cc94 <flatcc_builder_create_offset_vector_direct@@Base+0x288>
   2cc90:	b	2ccb4 <flatcc_builder_create_offset_vector_direct@@Base+0x2a8>
   2cc94:	ldr	r0, [pc, #128]	; 2cd1c <flatcc_builder_create_offset_vector_direct@@Base+0x310>
   2cc98:	add	r0, pc, r0
   2cc9c:	ldr	r1, [pc, #124]	; 2cd20 <flatcc_builder_create_offset_vector_direct@@Base+0x314>
   2cca0:	add	r1, pc, r1
   2cca4:	ldr	r2, [pc, #120]	; 2cd24 <flatcc_builder_create_offset_vector_direct@@Base+0x318>
   2cca8:	add	r3, pc, r2
   2ccac:	movw	r2, #1461	; 0x5b5
   2ccb0:	bl	14f08 <__assert_fail@plt>
   2ccb4:	b	2ccd8 <flatcc_builder_create_offset_vector_direct@@Base+0x2cc>
   2ccb8:	ldr	r0, [pc, #80]	; 2cd10 <flatcc_builder_create_offset_vector_direct@@Base+0x304>
   2ccbc:	add	r0, pc, r0
   2ccc0:	ldr	r1, [pc, #76]	; 2cd14 <flatcc_builder_create_offset_vector_direct@@Base+0x308>
   2ccc4:	add	r1, pc, r1
   2ccc8:	ldr	r2, [pc, #72]	; 2cd18 <flatcc_builder_create_offset_vector_direct@@Base+0x30c>
   2cccc:	add	r3, pc, r2
   2ccd0:	movw	r2, #1463	; 0x5b7
   2ccd4:	bl	14f08 <__assert_fail@plt>
   2ccd8:	b	2ccdc <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2ccdc:	b	2cce0 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
   2cce0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2cce4:	add	r0, r0, #1
   2cce8:	str	r0, [fp, #-44]	; 0xffffffd4
   2ccec:	b	2cbb4 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   2ccf0:	ldr	r0, [fp, #-8]
   2ccf4:	add	r1, sp, #4
   2ccf8:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2ccfc:	str	r0, [fp, #-4]
   2cd00:	ldr	r0, [fp, #-4]
   2cd04:	mov	sp, fp
   2cd08:	pop	{fp, pc}
   2cd0c:	svccc	0x00ffffff
   2cd10:	andeq	sp, r1, r5, asr #20
   2cd14:	andeq	ip, r1, r0, lsl #17
   2cd18:	andeq	sp, r1, r7, lsr sl
   2cd1c:	andeq	sp, r1, lr, ror #21
   2cd20:	andeq	ip, r1, r4, lsr #17
   2cd24:	andeq	sp, r1, fp, asr sl
   2cd28:			; <UNDEFINED> instruction: 0x0001dab1
   2cd2c:	strdeq	ip, [r1], -r8
   2cd30:	andeq	sp, r1, pc, lsr #21
   2cd34:	andeq	r0, r3, ip, ror #9

0002cd38 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2cd38:	push	{fp, lr}
   2cd3c:	mov	fp, sp
   2cd40:	sub	sp, sp, #16
   2cd44:	str	r0, [sp, #8]
   2cd48:	str	r1, [sp, #4]
   2cd4c:	ldr	r0, [sp, #8]
   2cd50:	ldr	r0, [r0, #32]
   2cd54:	ldrh	r0, [r0, #14]
   2cd58:	cmp	r0, #5
   2cd5c:	bne	2cd64 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2cd60:	b	2cd84 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   2cd64:	ldr	r0, [pc, #112]	; 2cddc <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2cd68:	add	r0, pc, r0
   2cd6c:	ldr	r1, [pc, #108]	; 2cde0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   2cd70:	add	r1, pc, r1
   2cd74:	ldr	r2, [pc, #104]	; 2cde4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   2cd78:	add	r3, pc, r2
   2cd7c:	movw	r2, #1493	; 0x5d5
   2cd80:	bl	14f08 <__assert_fail@plt>
   2cd84:	ldr	r0, [sp, #8]
   2cd88:	ldr	r1, [sp, #8]
   2cd8c:	ldr	r1, [r1, #16]
   2cd90:	ldr	r2, [sp, #8]
   2cd94:	ldr	r2, [r2, #32]
   2cd98:	ldr	r2, [r2, #20]
   2cd9c:	ldr	r3, [sp, #4]
   2cda0:	bl	2ca40 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2cda4:	str	r0, [sp]
   2cda8:	movw	r1, #0
   2cdac:	cmp	r1, r0
   2cdb0:	bne	2cdc0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x88>
   2cdb4:	movw	r0, #0
   2cdb8:	str	r0, [fp, #-4]
   2cdbc:	b	2cdd0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   2cdc0:	ldr	r0, [sp, #8]
   2cdc4:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2cdc8:	ldr	r0, [sp]
   2cdcc:	str	r0, [fp, #-4]
   2cdd0:	ldr	r0, [fp, #-4]
   2cdd4:	mov	sp, fp
   2cdd8:	pop	{fp, pc}
   2cddc:	andeq	ip, r1, pc, lsl #24
   2cde0:	ldrdeq	ip, [r1], -r4
   2cde4:	andeq	sp, r1, r8, ror r2

0002cde8 <flatcc_builder_offset_vector_edit@@Base>:
   2cde8:	sub	sp, sp, #4
   2cdec:	str	r0, [sp]
   2cdf0:	ldr	r0, [sp]
   2cdf4:	ldr	r0, [r0, #16]
   2cdf8:	add	sp, sp, #4
   2cdfc:	bx	lr

0002ce00 <flatcc_builder_offset_vector_count@@Base>:
   2ce00:	sub	sp, sp, #4
   2ce04:	str	r0, [sp]
   2ce08:	ldr	r0, [sp]
   2ce0c:	ldr	r0, [r0, #32]
   2ce10:	ldr	r0, [r0, #20]
   2ce14:	add	sp, sp, #4
   2ce18:	bx	lr

0002ce1c <flatcc_builder_table_add_union@@Base>:
   2ce1c:	push	{fp, lr}
   2ce20:	mov	fp, sp
   2ce24:	sub	sp, sp, #32
   2ce28:	str	r2, [fp, #-12]
   2ce2c:	str	r3, [fp, #-8]
   2ce30:	str	r0, [sp, #16]
   2ce34:	str	r1, [sp, #12]
   2ce38:	ldr	r0, [sp, #16]
   2ce3c:	ldr	r0, [r0, #32]
   2ce40:	ldrh	r0, [r0, #14]
   2ce44:	cmp	r0, #3
   2ce48:	bne	2ce50 <flatcc_builder_table_add_union@@Base+0x34>
   2ce4c:	b	2ce70 <flatcc_builder_table_add_union@@Base+0x54>
   2ce50:	ldr	r0, [pc, #388]	; 2cfdc <flatcc_builder_table_add_union@@Base+0x1c0>
   2ce54:	add	r0, pc, r0
   2ce58:	ldr	r1, [pc, #384]	; 2cfe0 <flatcc_builder_table_add_union@@Base+0x1c4>
   2ce5c:	add	r1, pc, r1
   2ce60:	ldr	r2, [pc, #380]	; 2cfe4 <flatcc_builder_table_add_union@@Base+0x1c8>
   2ce64:	add	r3, pc, r2
   2ce68:	movw	r2, #1518	; 0x5ee
   2ce6c:	bl	14f08 <__assert_fail@plt>
   2ce70:	ldrb	r0, [fp, #-12]
   2ce74:	cmp	r0, #0
   2ce78:	bne	2ced0 <flatcc_builder_table_add_union@@Base+0xb4>
   2ce7c:	ldr	r0, [fp, #-8]
   2ce80:	cmp	r0, #0
   2ce84:	beq	2ced0 <flatcc_builder_table_add_union@@Base+0xb4>
   2ce88:	ldrb	r0, [fp, #-12]
   2ce8c:	cmp	r0, #0
   2ce90:	bne	2cea0 <flatcc_builder_table_add_union@@Base+0x84>
   2ce94:	ldr	r0, [fp, #-8]
   2ce98:	cmp	r0, #0
   2ce9c:	bne	2cea4 <flatcc_builder_table_add_union@@Base+0x88>
   2cea0:	b	2cec4 <flatcc_builder_table_add_union@@Base+0xa8>
   2cea4:	ldr	r0, [pc, #316]	; 2cfe8 <flatcc_builder_table_add_union@@Base+0x1cc>
   2cea8:	add	r0, pc, r0
   2ceac:	ldr	r1, [pc, #312]	; 2cfec <flatcc_builder_table_add_union@@Base+0x1d0>
   2ceb0:	add	r1, pc, r1
   2ceb4:	ldr	r2, [pc, #308]	; 2cff0 <flatcc_builder_table_add_union@@Base+0x1d4>
   2ceb8:	add	r3, pc, r2
   2cebc:	movw	r2, #1519	; 0x5ef
   2cec0:	bl	14f08 <__assert_fail@plt>
   2cec4:	mvn	r0, #0
   2cec8:	str	r0, [fp, #-4]
   2cecc:	b	2cfd0 <flatcc_builder_table_add_union@@Base+0x1b4>
   2ced0:	ldr	r0, [fp, #-8]
   2ced4:	cmp	r0, #0
   2ced8:	beq	2cf48 <flatcc_builder_table_add_union@@Base+0x12c>
   2cedc:	ldr	r0, [sp, #16]
   2cee0:	ldr	r1, [sp, #12]
   2cee4:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   2cee8:	str	r0, [sp, #8]
   2ceec:	ldr	r0, [sp, #8]
   2cef0:	movw	r1, #0
   2cef4:	cmp	r0, r1
   2cef8:	bne	2cf3c <flatcc_builder_table_add_union@@Base+0x120>
   2cefc:	ldr	r0, [sp, #8]
   2cf00:	movw	r1, #0
   2cf04:	cmp	r0, r1
   2cf08:	beq	2cf10 <flatcc_builder_table_add_union@@Base+0xf4>
   2cf0c:	b	2cf30 <flatcc_builder_table_add_union@@Base+0x114>
   2cf10:	ldr	r0, [pc, #220]	; 2cff4 <flatcc_builder_table_add_union@@Base+0x1d8>
   2cf14:	add	r0, pc, r0
   2cf18:	ldr	r1, [pc, #216]	; 2cff8 <flatcc_builder_table_add_union@@Base+0x1dc>
   2cf1c:	add	r1, pc, r1
   2cf20:	ldr	r2, [pc, #212]	; 2cffc <flatcc_builder_table_add_union@@Base+0x1e0>
   2cf24:	add	r3, pc, r2
   2cf28:	movw	r2, #1522	; 0x5f2
   2cf2c:	bl	14f08 <__assert_fail@plt>
   2cf30:	mvn	r0, #0
   2cf34:	str	r0, [fp, #-4]
   2cf38:	b	2cfd0 <flatcc_builder_table_add_union@@Base+0x1b4>
   2cf3c:	ldr	r0, [fp, #-8]
   2cf40:	ldr	r1, [sp, #8]
   2cf44:	str	r0, [r1]
   2cf48:	ldr	r0, [sp, #16]
   2cf4c:	ldr	r1, [sp, #12]
   2cf50:	sub	r1, r1, #1
   2cf54:	movw	r2, #1
   2cf58:	movw	r3, #1
   2cf5c:	uxth	r3, r3
   2cf60:	bl	2d13c <flatcc_builder_table_add@@Base>
   2cf64:	str	r0, [sp, #4]
   2cf68:	ldr	r0, [sp, #4]
   2cf6c:	movw	r1, #0
   2cf70:	cmp	r0, r1
   2cf74:	bne	2cfb8 <flatcc_builder_table_add_union@@Base+0x19c>
   2cf78:	ldr	r0, [sp, #4]
   2cf7c:	movw	r1, #0
   2cf80:	cmp	r0, r1
   2cf84:	beq	2cf8c <flatcc_builder_table_add_union@@Base+0x170>
   2cf88:	b	2cfac <flatcc_builder_table_add_union@@Base+0x190>
   2cf8c:	ldr	r0, [pc, #108]	; 2d000 <flatcc_builder_table_add_union@@Base+0x1e4>
   2cf90:	add	r0, pc, r0
   2cf94:	ldr	r1, [pc, #104]	; 2d004 <flatcc_builder_table_add_union@@Base+0x1e8>
   2cf98:	add	r1, pc, r1
   2cf9c:	ldr	r2, [pc, #100]	; 2d008 <flatcc_builder_table_add_union@@Base+0x1ec>
   2cfa0:	add	r3, pc, r2
   2cfa4:	movw	r2, #1526	; 0x5f6
   2cfa8:	bl	14f08 <__assert_fail@plt>
   2cfac:	mvn	r0, #0
   2cfb0:	str	r0, [fp, #-4]
   2cfb4:	b	2cfd0 <flatcc_builder_table_add_union@@Base+0x1b4>
   2cfb8:	ldrb	r0, [fp, #-12]
   2cfbc:	bl	2d2a4 <flatcc_builder_table_add@@Base+0x168>
   2cfc0:	ldr	r1, [sp, #4]
   2cfc4:	strb	r0, [r1]
   2cfc8:	movw	r0, #0
   2cfcc:	str	r0, [fp, #-4]
   2cfd0:	ldr	r0, [fp, #-4]
   2cfd4:	mov	sp, fp
   2cfd8:	pop	{fp, pc}
   2cfdc:	andeq	ip, r1, ip, lsl pc
   2cfe0:	andeq	ip, r1, r8, ror #13
   2cfe4:	strdeq	sp, [r1], -lr
   2cfe8:	andeq	sp, r1, r2, lsl r2
   2cfec:	muleq	r1, r4, r6
   2cff0:	andeq	sp, r1, sl, lsr #3
   2cff4:	andeq	sp, r1, r8, asr #3
   2cff8:	andeq	ip, r1, r8, lsr #12
   2cffc:	andeq	sp, r1, lr, lsr r1
   2d000:	andeq	sp, r1, r6, asr r1
   2d004:	andeq	ip, r1, ip, lsr #11
   2d008:	andeq	sp, r1, r2, asr #1

0002d00c <flatcc_builder_table_add_offset@@Base>:
   2d00c:	push	{fp, lr}
   2d010:	mov	fp, sp
   2d014:	sub	sp, sp, #8
   2d018:	str	r0, [sp, #4]
   2d01c:	str	r1, [sp]
   2d020:	ldr	r0, [sp, #4]
   2d024:	ldr	r0, [r0, #32]
   2d028:	ldrh	r0, [r0, #14]
   2d02c:	cmp	r0, #3
   2d030:	bne	2d038 <flatcc_builder_table_add_offset@@Base+0x2c>
   2d034:	b	2d058 <flatcc_builder_table_add_offset@@Base+0x4c>
   2d038:	ldr	r0, [pc, #212]	; 2d114 <flatcc_builder_table_add_offset@@Base+0x108>
   2d03c:	add	r0, pc, r0
   2d040:	ldr	r1, [pc, #208]	; 2d118 <flatcc_builder_table_add_offset@@Base+0x10c>
   2d044:	add	r1, pc, r1
   2d048:	ldr	r2, [pc, #204]	; 2d11c <flatcc_builder_table_add_offset@@Base+0x110>
   2d04c:	add	r3, pc, r2
   2d050:	movw	r2, #1811	; 0x713
   2d054:	bl	14f08 <__assert_fail@plt>
   2d058:	ldr	r0, [sp]
   2d05c:	cmp	r0, #0
   2d060:	blt	2d078 <flatcc_builder_table_add_offset@@Base+0x6c>
   2d064:	ldr	r0, [sp]
   2d068:	movw	r1, #32764	; 0x7ffc
   2d06c:	cmp	r0, r1
   2d070:	bgt	2d078 <flatcc_builder_table_add_offset@@Base+0x6c>
   2d074:	b	2d098 <flatcc_builder_table_add_offset@@Base+0x8c>
   2d078:	ldr	r0, [pc, #160]	; 2d120 <flatcc_builder_table_add_offset@@Base+0x114>
   2d07c:	add	r0, pc, r0
   2d080:	ldr	r1, [pc, #156]	; 2d124 <flatcc_builder_table_add_offset@@Base+0x118>
   2d084:	add	r1, pc, r1
   2d088:	ldr	r2, [pc, #152]	; 2d128 <flatcc_builder_table_add_offset@@Base+0x11c>
   2d08c:	add	r3, pc, r2
   2d090:	movw	r2, #1812	; 0x714
   2d094:	bl	14f08 <__assert_fail@plt>
   2d098:	ldr	r0, [sp, #4]
   2d09c:	ldr	r0, [r0, #4]
   2d0a0:	ldr	r1, [sp]
   2d0a4:	add	r0, r0, r1, lsl #1
   2d0a8:	ldrh	r0, [r0]
   2d0ac:	cmp	r0, #0
   2d0b0:	beq	2d0d4 <flatcc_builder_table_add_offset@@Base+0xc8>
   2d0b4:	ldr	r0, [pc, #116]	; 2d130 <flatcc_builder_table_add_offset@@Base+0x124>
   2d0b8:	add	r0, pc, r0
   2d0bc:	ldr	r1, [pc, #112]	; 2d134 <flatcc_builder_table_add_offset@@Base+0x128>
   2d0c0:	add	r1, pc, r1
   2d0c4:	ldr	r2, [pc, #108]	; 2d138 <flatcc_builder_table_add_offset@@Base+0x12c>
   2d0c8:	add	r3, pc, r2
   2d0cc:	movw	r2, #1819	; 0x71b
   2d0d0:	bl	14f08 <__assert_fail@plt>
   2d0d4:	ldr	r0, [pc, #80]	; 2d12c <flatcc_builder_table_add_offset@@Base+0x120>
   2d0d8:	ldr	r1, [sp]
   2d0dc:	ldr	r2, [sp, #4]
   2d0e0:	ldr	r2, [r2, #12]
   2d0e4:	eor	r1, r1, r2
   2d0e8:	mul	r1, r1, r0
   2d0ec:	eor	r1, r1, #4
   2d0f0:	mul	r0, r1, r0
   2d0f4:	ldr	r1, [sp, #4]
   2d0f8:	str	r0, [r1, #12]
   2d0fc:	ldr	r0, [sp, #4]
   2d100:	ldr	r1, [sp]
   2d104:	uxth	r1, r1
   2d108:	bl	2e0cc <flatcc_builder_table_add_copy@@Base+0x64>
   2d10c:	mov	sp, fp
   2d110:	pop	{fp, pc}
   2d114:	andeq	ip, r1, r4, lsr sp
   2d118:	andeq	ip, r1, r0, lsl #10
   2d11c:	andeq	sp, r1, r8, lsl r4
   2d120:	andeq	sp, r1, r8, ror #6
   2d124:	andeq	ip, r1, r0, asr #9
   2d128:	ldrdeq	sp, [r1], -r8
   2d12c:			; <UNDEFINED> instruction: 0x9e3779b1
   2d130:	andeq	sp, r1, r9, asr #12
   2d134:	andeq	ip, r1, r4, lsl #9
   2d138:	muleq	r1, ip, r3

0002d13c <flatcc_builder_table_add@@Base>:
   2d13c:	push	{fp, lr}
   2d140:	mov	fp, sp
   2d144:	sub	sp, sp, #16
   2d148:	str	r0, [fp, #-4]
   2d14c:	str	r1, [sp, #8]
   2d150:	str	r2, [sp, #4]
   2d154:	strh	r3, [sp, #2]
   2d158:	ldr	r0, [fp, #-4]
   2d15c:	ldr	r0, [r0, #32]
   2d160:	ldrh	r0, [r0, #14]
   2d164:	cmp	r0, #3
   2d168:	bne	2d170 <flatcc_builder_table_add@@Base+0x34>
   2d16c:	b	2d190 <flatcc_builder_table_add@@Base+0x54>
   2d170:	ldr	r0, [pc, #260]	; 2d27c <flatcc_builder_table_add@@Base+0x140>
   2d174:	add	r0, pc, r0
   2d178:	ldr	r1, [pc, #256]	; 2d280 <flatcc_builder_table_add@@Base+0x144>
   2d17c:	add	r1, pc, r1
   2d180:	ldr	r2, [pc, #252]	; 2d284 <flatcc_builder_table_add@@Base+0x148>
   2d184:	add	r3, pc, r2
   2d188:	movw	r2, #1773	; 0x6ed
   2d18c:	bl	14f08 <__assert_fail@plt>
   2d190:	ldr	r0, [sp, #8]
   2d194:	cmp	r0, #0
   2d198:	blt	2d1b0 <flatcc_builder_table_add@@Base+0x74>
   2d19c:	ldr	r0, [sp, #8]
   2d1a0:	movw	r1, #32764	; 0x7ffc
   2d1a4:	cmp	r0, r1
   2d1a8:	bgt	2d1b0 <flatcc_builder_table_add@@Base+0x74>
   2d1ac:	b	2d1d0 <flatcc_builder_table_add@@Base+0x94>
   2d1b0:	ldr	r0, [pc, #208]	; 2d288 <flatcc_builder_table_add@@Base+0x14c>
   2d1b4:	add	r0, pc, r0
   2d1b8:	ldr	r1, [pc, #204]	; 2d28c <flatcc_builder_table_add@@Base+0x150>
   2d1bc:	add	r1, pc, r1
   2d1c0:	ldr	r2, [pc, #200]	; 2d290 <flatcc_builder_table_add@@Base+0x154>
   2d1c4:	add	r3, pc, r2
   2d1c8:	movw	r2, #1774	; 0x6ee
   2d1cc:	bl	14f08 <__assert_fail@plt>
   2d1d0:	ldrh	r0, [sp, #2]
   2d1d4:	ldr	r1, [fp, #-4]
   2d1d8:	ldrh	r1, [r1, #130]	; 0x82
   2d1dc:	cmp	r0, r1
   2d1e0:	ble	2d1f0 <flatcc_builder_table_add@@Base+0xb4>
   2d1e4:	ldrh	r0, [sp, #2]
   2d1e8:	ldr	r1, [fp, #-4]
   2d1ec:	strh	r0, [r1, #130]	; 0x82
   2d1f0:	ldr	r0, [fp, #-4]
   2d1f4:	ldr	r0, [r0, #4]
   2d1f8:	ldr	r1, [sp, #8]
   2d1fc:	add	r0, r0, r1, lsl #1
   2d200:	ldrh	r0, [r0]
   2d204:	cmp	r0, #0
   2d208:	beq	2d22c <flatcc_builder_table_add@@Base+0xf0>
   2d20c:	ldr	r0, [pc, #132]	; 2d298 <flatcc_builder_table_add@@Base+0x15c>
   2d210:	add	r0, pc, r0
   2d214:	ldr	r1, [pc, #128]	; 2d29c <flatcc_builder_table_add@@Base+0x160>
   2d218:	add	r1, pc, r1
   2d21c:	ldr	r2, [pc, #124]	; 2d2a0 <flatcc_builder_table_add@@Base+0x164>
   2d220:	add	r3, pc, r2
   2d224:	movw	r2, #1784	; 0x6f8
   2d228:	bl	14f08 <__assert_fail@plt>
   2d22c:	ldr	r0, [pc, #96]	; 2d294 <flatcc_builder_table_add@@Base+0x158>
   2d230:	ldr	r1, [sp, #8]
   2d234:	ldr	r2, [fp, #-4]
   2d238:	ldr	r2, [r2, #12]
   2d23c:	eor	r1, r1, r2
   2d240:	mul	r1, r1, r0
   2d244:	ldr	r2, [sp, #4]
   2d248:	eor	r1, r1, r2
   2d24c:	mul	r0, r1, r0
   2d250:	ldr	r1, [fp, #-4]
   2d254:	str	r0, [r1, #12]
   2d258:	ldr	r0, [fp, #-4]
   2d25c:	ldr	r1, [sp, #4]
   2d260:	ldrh	r2, [sp, #2]
   2d264:	ldr	r3, [sp, #8]
   2d268:	uxth	r2, r2
   2d26c:	uxth	r3, r3
   2d270:	bl	2dee8 <flatcc_builder_string_len@@Base+0x1c>
   2d274:	mov	sp, fp
   2d278:	pop	{fp, pc}
   2d27c:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   2d280:	andeq	ip, r1, r8, asr #7
   2d284:	andeq	sp, r1, r6, lsl r2
   2d288:	andeq	sp, r1, r0, lsr r2
   2d28c:	andeq	ip, r1, r8, lsl #7
   2d290:	ldrdeq	sp, [r1], -r6
   2d294:			; <UNDEFINED> instruction: 0x9e3779b1
   2d298:	strdeq	sp, [r1], -r1
   2d29c:	andeq	ip, r1, ip, lsr #6
   2d2a0:	andeq	sp, r1, sl, ror r1
   2d2a4:	sub	sp, sp, #4
   2d2a8:	strb	r0, [sp, #3]
   2d2ac:	ldrb	r0, [sp, #3]
   2d2b0:	add	sp, sp, #4
   2d2b4:	bx	lr

0002d2b8 <flatcc_builder_table_add_union_vector@@Base>:
   2d2b8:	push	{fp, lr}
   2d2bc:	mov	fp, sp
   2d2c0:	sub	sp, sp, #24
   2d2c4:	str	r2, [sp, #12]
   2d2c8:	str	r3, [sp, #16]
   2d2cc:	str	r0, [sp, #8]
   2d2d0:	str	r1, [sp, #4]
   2d2d4:	ldr	r0, [sp, #8]
   2d2d8:	ldr	r0, [r0, #32]
   2d2dc:	ldrh	r0, [r0, #14]
   2d2e0:	cmp	r0, #3
   2d2e4:	bne	2d2ec <flatcc_builder_table_add_union_vector@@Base+0x34>
   2d2e8:	b	2d30c <flatcc_builder_table_add_union_vector@@Base+0x54>
   2d2ec:	ldr	r0, [pc, #420]	; 2d498 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   2d2f0:	add	r0, pc, r0
   2d2f4:	ldr	r1, [pc, #416]	; 2d49c <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   2d2f8:	add	r1, pc, r1
   2d2fc:	ldr	r2, [pc, #412]	; 2d4a0 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   2d300:	add	r3, pc, r2
   2d304:	movw	r2, #1536	; 0x600
   2d308:	bl	14f08 <__assert_fail@plt>
   2d30c:	ldr	r0, [sp, #12]
   2d310:	cmp	r0, #0
   2d314:	movw	r0, #0
   2d318:	moveq	r0, #1
   2d31c:	and	r0, r0, #1
   2d320:	ldr	r1, [sp, #16]
   2d324:	cmp	r1, #0
   2d328:	movw	r1, #0
   2d32c:	moveq	r1, #1
   2d330:	and	r1, r1, #1
   2d334:	cmp	r0, r1
   2d338:	beq	2d39c <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2d33c:	ldr	r0, [sp, #12]
   2d340:	cmp	r0, #0
   2d344:	movw	r0, #0
   2d348:	moveq	r0, #1
   2d34c:	and	r0, r0, #1
   2d350:	ldr	r1, [sp, #16]
   2d354:	cmp	r1, #0
   2d358:	movw	r1, #0
   2d35c:	moveq	r1, #1
   2d360:	and	r1, r1, #1
   2d364:	cmp	r0, r1
   2d368:	bne	2d370 <flatcc_builder_table_add_union_vector@@Base+0xb8>
   2d36c:	b	2d390 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   2d370:	ldr	r0, [pc, #300]	; 2d4a4 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   2d374:	add	r0, pc, r0
   2d378:	ldr	r1, [pc, #296]	; 2d4a8 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   2d37c:	add	r1, pc, r1
   2d380:	ldr	r2, [pc, #292]	; 2d4ac <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   2d384:	add	r3, pc, r2
   2d388:	movw	r2, #1537	; 0x601
   2d38c:	bl	14f08 <__assert_fail@plt>
   2d390:	mvn	r0, #0
   2d394:	str	r0, [fp, #-4]
   2d398:	b	2d48c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d39c:	ldr	r0, [sp, #12]
   2d3a0:	cmp	r0, #0
   2d3a4:	beq	2d484 <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   2d3a8:	ldr	r0, [sp, #8]
   2d3ac:	ldr	r1, [sp, #4]
   2d3b0:	sub	r1, r1, #1
   2d3b4:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   2d3b8:	str	r0, [sp]
   2d3bc:	ldr	r0, [sp]
   2d3c0:	movw	r1, #0
   2d3c4:	cmp	r0, r1
   2d3c8:	bne	2d40c <flatcc_builder_table_add_union_vector@@Base+0x154>
   2d3cc:	ldr	r0, [sp]
   2d3d0:	movw	r1, #0
   2d3d4:	cmp	r0, r1
   2d3d8:	beq	2d3e0 <flatcc_builder_table_add_union_vector@@Base+0x128>
   2d3dc:	b	2d400 <flatcc_builder_table_add_union_vector@@Base+0x148>
   2d3e0:	ldr	r0, [pc, #200]	; 2d4b0 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   2d3e4:	add	r0, pc, r0
   2d3e8:	ldr	r1, [pc, #196]	; 2d4b4 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   2d3ec:	add	r1, pc, r1
   2d3f0:	ldr	r2, [pc, #192]	; 2d4b8 <flatcc_builder_table_add_union_vector@@Base+0x200>
   2d3f4:	add	r3, pc, r2
   2d3f8:	movw	r2, #1540	; 0x604
   2d3fc:	bl	14f08 <__assert_fail@plt>
   2d400:	mvn	r0, #0
   2d404:	str	r0, [fp, #-4]
   2d408:	b	2d48c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d40c:	ldr	r0, [sp, #12]
   2d410:	ldr	r1, [sp]
   2d414:	str	r0, [r1]
   2d418:	ldr	r0, [sp, #8]
   2d41c:	ldr	r1, [sp, #4]
   2d420:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   2d424:	str	r0, [sp]
   2d428:	ldr	r0, [sp]
   2d42c:	movw	r1, #0
   2d430:	cmp	r0, r1
   2d434:	bne	2d478 <flatcc_builder_table_add_union_vector@@Base+0x1c0>
   2d438:	ldr	r0, [sp]
   2d43c:	movw	r1, #0
   2d440:	cmp	r0, r1
   2d444:	beq	2d44c <flatcc_builder_table_add_union_vector@@Base+0x194>
   2d448:	b	2d46c <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   2d44c:	ldr	r0, [pc, #104]	; 2d4bc <flatcc_builder_table_add_union_vector@@Base+0x204>
   2d450:	add	r0, pc, r0
   2d454:	ldr	r1, [pc, #100]	; 2d4c0 <flatcc_builder_table_add_union_vector@@Base+0x208>
   2d458:	add	r1, pc, r1
   2d45c:	ldr	r2, [pc, #96]	; 2d4c4 <flatcc_builder_table_add_union_vector@@Base+0x20c>
   2d460:	add	r3, pc, r2
   2d464:	movw	r2, #1544	; 0x608
   2d468:	bl	14f08 <__assert_fail@plt>
   2d46c:	mvn	r0, #0
   2d470:	str	r0, [fp, #-4]
   2d474:	b	2d48c <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   2d478:	ldr	r0, [sp, #16]
   2d47c:	ldr	r1, [sp]
   2d480:	str	r0, [r1]
   2d484:	movw	r0, #0
   2d488:	str	r0, [fp, #-4]
   2d48c:	ldr	r0, [fp, #-4]
   2d490:	mov	sp, fp
   2d494:	pop	{fp, pc}
   2d498:	andeq	ip, r1, r0, lsl #21
   2d49c:	andeq	ip, r1, ip, asr #4
   2d4a0:	strdeq	ip, [r1], -r2
   2d4a4:	andeq	ip, r1, r1, ror #27
   2d4a8:	andeq	ip, r1, r8, asr #3
   2d4ac:	andeq	ip, r1, lr, ror #26
   2d4b0:	strdeq	ip, [r1], -r8
   2d4b4:	andeq	ip, r1, r8, asr r1
   2d4b8:	strdeq	ip, [r1], -lr
   2d4bc:	andeq	ip, r1, ip, lsl #25
   2d4c0:	andeq	ip, r1, ip, ror #1
   2d4c4:	muleq	r1, r2, ip

0002d4c8 <flatcc_builder_create_union_vector@@Base>:
   2d4c8:	push	{fp, lr}
   2d4cc:	mov	fp, sp
   2d4d0:	sub	sp, sp, #48	; 0x30
   2d4d4:	str	r1, [fp, #-4]
   2d4d8:	str	r2, [fp, #-8]
   2d4dc:	str	r3, [fp, #-12]
   2d4e0:	mov	r1, r0
   2d4e4:	str	r0, [sp, #12]
   2d4e8:	mov	r0, r1
   2d4ec:	movw	r1, #0
   2d4f0:	and	r1, r1, #255	; 0xff
   2d4f4:	movw	r2, #8
   2d4f8:	bl	14ec0 <memset@plt>
   2d4fc:	ldr	r0, [fp, #-4]
   2d500:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   2d504:	cmp	r0, #0
   2d508:	beq	2d510 <flatcc_builder_create_union_vector@@Base+0x48>
   2d50c:	b	2d5f4 <flatcc_builder_create_union_vector@@Base+0x12c>
   2d510:	ldr	r0, [fp, #-4]
   2d514:	ldr	r1, [fp, #-12]
   2d518:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   2d51c:	movw	r1, #0
   2d520:	cmp	r1, r0
   2d524:	bne	2d52c <flatcc_builder_create_union_vector@@Base+0x64>
   2d528:	b	2d5f4 <flatcc_builder_create_union_vector@@Base+0x12c>
   2d52c:	ldr	r0, [fp, #-4]
   2d530:	ldr	r1, [fp, #-12]
   2d534:	mov	r2, r1
   2d538:	str	r2, [sp, #8]
   2d53c:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2d540:	str	r0, [fp, #-16]
   2d544:	movw	r1, #0
   2d548:	cmp	r1, r0
   2d54c:	bne	2d554 <flatcc_builder_create_union_vector@@Base+0x8c>
   2d550:	b	2d5f4 <flatcc_builder_create_union_vector@@Base+0x12c>
   2d554:	ldr	r0, [fp, #-4]
   2d558:	bl	2cde8 <flatcc_builder_offset_vector_edit@@Base>
   2d55c:	str	r0, [fp, #-20]	; 0xffffffec
   2d560:	movw	r0, #0
   2d564:	str	r0, [sp, #24]
   2d568:	ldr	r0, [sp, #24]
   2d56c:	ldr	r1, [fp, #-12]
   2d570:	cmp	r0, r1
   2d574:	bcs	2d5b8 <flatcc_builder_create_union_vector@@Base+0xf0>
   2d578:	ldr	r0, [fp, #-8]
   2d57c:	ldr	r1, [sp, #24]
   2d580:	ldrb	r0, [r0, r1, lsl #3]
   2d584:	ldr	r2, [fp, #-16]
   2d588:	strb	r0, [r2, r1]
   2d58c:	ldr	r0, [fp, #-8]
   2d590:	ldr	r1, [sp, #24]
   2d594:	add	r0, r0, r1, lsl #3
   2d598:	ldr	r0, [r0, #4]
   2d59c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d5a0:	add	r1, r2, r1, lsl #2
   2d5a4:	str	r0, [r1]
   2d5a8:	ldr	r0, [sp, #24]
   2d5ac:	add	r0, r0, #1
   2d5b0:	str	r0, [sp, #24]
   2d5b4:	b	2d568 <flatcc_builder_create_union_vector@@Base+0xa0>
   2d5b8:	ldr	r1, [fp, #-4]
   2d5bc:	ldr	r2, [fp, #-16]
   2d5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d5c4:	ldr	r0, [fp, #-12]
   2d5c8:	mov	ip, sp
   2d5cc:	str	r0, [ip]
   2d5d0:	add	r0, sp, #16
   2d5d4:	bl	2d5fc <flatcc_builder_create_union_vector_direct@@Base>
   2d5d8:	ldr	r0, [sp, #16]
   2d5dc:	ldr	r1, [sp, #12]
   2d5e0:	str	r0, [r1]
   2d5e4:	ldr	r0, [sp, #20]
   2d5e8:	str	r0, [r1, #4]
   2d5ec:	ldr	r0, [fp, #-4]
   2d5f0:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2d5f4:	mov	sp, fp
   2d5f8:	pop	{fp, pc}

0002d5fc <flatcc_builder_create_union_vector_direct@@Base>:
   2d5fc:	push	{fp, lr}
   2d600:	mov	fp, sp
   2d604:	sub	sp, sp, #32
   2d608:	ldr	ip, [fp, #8]
   2d60c:	str	r1, [fp, #-4]
   2d610:	str	r2, [fp, #-8]
   2d614:	str	r3, [fp, #-12]
   2d618:	mov	r1, r0
   2d61c:	str	r0, [sp, #16]
   2d620:	mov	r0, r1
   2d624:	movw	r1, #0
   2d628:	and	r1, r1, #255	; 0xff
   2d62c:	movw	r2, #8
   2d630:	str	ip, [sp, #12]
   2d634:	bl	14ec0 <memset@plt>
   2d638:	ldr	r0, [fp, #-4]
   2d63c:	ldr	r1, [fp, #-12]
   2d640:	ldr	r2, [fp, #8]
   2d644:	ldr	r3, [fp, #-8]
   2d648:	bl	2ca40 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2d64c:	ldr	r1, [sp, #16]
   2d650:	str	r0, [r1, #4]
   2d654:	movw	r2, #0
   2d658:	cmp	r2, r0
   2d65c:	bne	2d664 <flatcc_builder_create_union_vector_direct@@Base+0x68>
   2d660:	b	2d6a8 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d664:	ldr	r0, [fp, #-4]
   2d668:	ldr	r1, [fp, #-8]
   2d66c:	ldr	r2, [fp, #8]
   2d670:	movw	r3, #1
   2d674:	movw	ip, #1
   2d678:	uxth	ip, ip
   2d67c:	str	ip, [sp]
   2d680:	mvn	ip, #0
   2d684:	str	ip, [sp, #4]
   2d688:	bl	2c734 <flatcc_builder_create_vector@@Base>
   2d68c:	ldr	r1, [sp, #16]
   2d690:	str	r0, [r1]
   2d694:	movw	r2, #0
   2d698:	cmp	r2, r0
   2d69c:	bne	2d6a4 <flatcc_builder_create_union_vector_direct@@Base+0xa8>
   2d6a0:	b	2d6a8 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d6a4:	b	2d6a8 <flatcc_builder_create_union_vector_direct@@Base+0xac>
   2d6a8:	mov	sp, fp
   2d6ac:	pop	{fp, pc}

0002d6b0 <flatcc_builder_start_union_vector@@Base>:
   2d6b0:	push	{fp, lr}
   2d6b4:	mov	fp, sp
   2d6b8:	sub	sp, sp, #8
   2d6bc:	str	r0, [sp]
   2d6c0:	ldr	r0, [sp]
   2d6c4:	movw	r1, #4
   2d6c8:	uxth	r1, r1
   2d6cc:	bl	2a2e8 <flatcc_builder_start_buffer@@Base+0x178>
   2d6d0:	cmp	r0, #0
   2d6d4:	beq	2d6e4 <flatcc_builder_start_union_vector@@Base+0x34>
   2d6d8:	mvn	r0, #0
   2d6dc:	str	r0, [sp, #4]
   2d6e0:	b	2d728 <flatcc_builder_start_union_vector@@Base+0x78>
   2d6e4:	ldr	r0, [sp]
   2d6e8:	ldr	r0, [r0, #32]
   2d6ec:	movw	r1, #8
   2d6f0:	str	r1, [r0, #16]
   2d6f4:	ldr	r0, [sp]
   2d6f8:	ldr	r0, [r0, #32]
   2d6fc:	movw	r1, #0
   2d700:	str	r1, [r0, #20]
   2d704:	ldr	r0, [sp]
   2d708:	ldr	r0, [r0, #32]
   2d70c:	movw	r1, #7
   2d710:	strh	r1, [r0, #14]
   2d714:	ldr	r0, [sp]
   2d718:	mvn	r1, #3
   2d71c:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2d720:	movw	r0, #0
   2d724:	str	r0, [sp, #4]
   2d728:	ldr	r0, [sp, #4]
   2d72c:	mov	sp, fp
   2d730:	pop	{fp, pc}

0002d734 <flatcc_builder_end_union_vector@@Base>:
   2d734:	push	{fp, lr}
   2d738:	mov	fp, sp
   2d73c:	sub	sp, sp, #40	; 0x28
   2d740:	str	r1, [fp, #-4]
   2d744:	mov	r1, r0
   2d748:	str	r0, [sp, #4]
   2d74c:	mov	r0, r1
   2d750:	movw	r1, #0
   2d754:	and	r1, r1, #255	; 0xff
   2d758:	movw	r2, #8
   2d75c:	bl	14ec0 <memset@plt>
   2d760:	ldr	r0, [fp, #-4]
   2d764:	ldr	r0, [r0, #32]
   2d768:	ldrh	r0, [r0, #14]
   2d76c:	cmp	r0, #7
   2d770:	bne	2d778 <flatcc_builder_end_union_vector@@Base+0x44>
   2d774:	b	2d798 <flatcc_builder_end_union_vector@@Base+0x64>
   2d778:	ldr	r0, [pc, #260]	; 2d884 <flatcc_builder_end_union_vector@@Base+0x150>
   2d77c:	add	r0, pc, r0
   2d780:	ldr	r1, [pc, #256]	; 2d888 <flatcc_builder_end_union_vector@@Base+0x154>
   2d784:	add	r1, pc, r1
   2d788:	ldr	r2, [pc, #252]	; 2d88c <flatcc_builder_end_union_vector@@Base+0x158>
   2d78c:	add	r3, pc, r2
   2d790:	movw	r2, #1617	; 0x651
   2d794:	bl	14f08 <__assert_fail@plt>
   2d798:	ldr	r0, [fp, #-4]
   2d79c:	bl	2d890 <flatcc_builder_union_vector_count@@Base>
   2d7a0:	str	r0, [sp, #16]
   2d7a4:	ldr	r0, [fp, #-4]
   2d7a8:	ldr	r1, [sp, #16]
   2d7ac:	movw	r2, #5
   2d7b0:	mul	r1, r1, r2
   2d7b4:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2d7b8:	str	r0, [fp, #-16]
   2d7bc:	movw	r1, #0
   2d7c0:	cmp	r1, r0
   2d7c4:	bne	2d7cc <flatcc_builder_end_union_vector@@Base+0x98>
   2d7c8:	b	2d87c <flatcc_builder_end_union_vector@@Base+0x148>
   2d7cc:	ldr	r0, [fp, #-16]
   2d7d0:	ldr	r1, [sp, #16]
   2d7d4:	add	r0, r0, r1, lsl #2
   2d7d8:	str	r0, [fp, #-8]
   2d7dc:	ldr	r0, [fp, #-4]
   2d7e0:	bl	2d8ac <flatcc_builder_union_vector_edit@@Base>
   2d7e4:	str	r0, [fp, #-12]
   2d7e8:	movw	r0, #0
   2d7ec:	str	r0, [sp, #20]
   2d7f0:	ldr	r0, [sp, #20]
   2d7f4:	ldr	r1, [sp, #16]
   2d7f8:	cmp	r0, r1
   2d7fc:	bcs	2d840 <flatcc_builder_end_union_vector@@Base+0x10c>
   2d800:	ldr	r0, [fp, #-12]
   2d804:	ldr	r1, [sp, #20]
   2d808:	ldrb	r0, [r0, r1, lsl #3]
   2d80c:	ldr	r2, [fp, #-8]
   2d810:	strb	r0, [r2, r1]
   2d814:	ldr	r0, [fp, #-12]
   2d818:	ldr	r1, [sp, #20]
   2d81c:	add	r0, r0, r1, lsl #3
   2d820:	ldr	r0, [r0, #4]
   2d824:	ldr	r2, [fp, #-16]
   2d828:	add	r1, r2, r1, lsl #2
   2d82c:	str	r0, [r1]
   2d830:	ldr	r0, [sp, #20]
   2d834:	add	r0, r0, #1
   2d838:	str	r0, [sp, #20]
   2d83c:	b	2d7f0 <flatcc_builder_end_union_vector@@Base+0xbc>
   2d840:	ldr	r1, [fp, #-4]
   2d844:	ldr	r2, [fp, #-8]
   2d848:	ldr	r3, [fp, #-16]
   2d84c:	ldr	r0, [sp, #16]
   2d850:	mov	ip, sp
   2d854:	str	r0, [ip]
   2d858:	add	r0, sp, #8
   2d85c:	bl	2d5fc <flatcc_builder_create_union_vector_direct@@Base>
   2d860:	ldr	r0, [sp, #8]
   2d864:	ldr	r1, [sp, #4]
   2d868:	str	r0, [r1]
   2d86c:	ldr	r0, [sp, #12]
   2d870:	str	r0, [r1, #4]
   2d874:	ldr	r0, [fp, #-4]
   2d878:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2d87c:	mov	sp, fp
   2d880:	pop	{fp, pc}
   2d884:	andeq	ip, r1, r1, lsl #20
   2d888:	andeq	fp, r1, r0, asr #27
   2d88c:	andeq	ip, r1, r3, lsr #20

0002d890 <flatcc_builder_union_vector_count@@Base>:
   2d890:	sub	sp, sp, #4
   2d894:	str	r0, [sp]
   2d898:	ldr	r0, [sp]
   2d89c:	ldr	r0, [r0, #32]
   2d8a0:	ldr	r0, [r0, #20]
   2d8a4:	add	sp, sp, #4
   2d8a8:	bx	lr

0002d8ac <flatcc_builder_union_vector_edit@@Base>:
   2d8ac:	sub	sp, sp, #4
   2d8b0:	str	r0, [sp]
   2d8b4:	ldr	r0, [sp]
   2d8b8:	ldr	r0, [r0, #16]
   2d8bc:	add	sp, sp, #4
   2d8c0:	bx	lr

0002d8c4 <flatcc_builder_extend_union_vector@@Base>:
   2d8c4:	push	{fp, lr}
   2d8c8:	mov	fp, sp
   2d8cc:	sub	sp, sp, #16
   2d8d0:	ldr	r2, [pc, #68]	; 2d91c <flatcc_builder_extend_union_vector@@Base+0x58>
   2d8d4:	str	r0, [sp, #8]
   2d8d8:	str	r1, [sp, #4]
   2d8dc:	ldr	r0, [sp, #8]
   2d8e0:	ldr	r1, [sp, #4]
   2d8e4:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2d8e8:	cmp	r0, #0
   2d8ec:	beq	2d8fc <flatcc_builder_extend_union_vector@@Base+0x38>
   2d8f0:	movw	r0, #0
   2d8f4:	str	r0, [fp, #-4]
   2d8f8:	b	2d910 <flatcc_builder_extend_union_vector@@Base+0x4c>
   2d8fc:	ldr	r0, [sp, #8]
   2d900:	ldr	r1, [sp, #4]
   2d904:	lsl	r1, r1, #3
   2d908:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2d90c:	str	r0, [fp, #-4]
   2d910:	ldr	r0, [fp, #-4]
   2d914:	mov	sp, fp
   2d918:	pop	{fp, pc}
   2d91c:	svcne	0x00ffffff

0002d920 <flatcc_builder_truncate_union_vector@@Base>:
   2d920:	push	{fp, lr}
   2d924:	mov	fp, sp
   2d928:	sub	sp, sp, #16
   2d92c:	str	r0, [sp, #8]
   2d930:	str	r1, [sp, #4]
   2d934:	ldr	r0, [sp, #8]
   2d938:	ldr	r0, [r0, #32]
   2d93c:	ldrh	r0, [r0, #14]
   2d940:	cmp	r0, #7
   2d944:	bne	2d94c <flatcc_builder_truncate_union_vector@@Base+0x2c>
   2d948:	b	2d96c <flatcc_builder_truncate_union_vector@@Base+0x4c>
   2d94c:	ldr	r0, [pc, #192]	; 2da14 <flatcc_builder_truncate_union_vector@@Base+0xf4>
   2d950:	add	r0, pc, r0
   2d954:	ldr	r1, [pc, #188]	; 2da18 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   2d958:	add	r1, pc, r1
   2d95c:	ldr	r2, [pc, #184]	; 2da1c <flatcc_builder_truncate_union_vector@@Base+0xfc>
   2d960:	add	r3, pc, r2
   2d964:	movw	r2, #1665	; 0x681
   2d968:	bl	14f08 <__assert_fail@plt>
   2d96c:	ldr	r0, [sp, #8]
   2d970:	ldr	r0, [r0, #32]
   2d974:	ldr	r0, [r0, #20]
   2d978:	ldr	r1, [sp, #4]
   2d97c:	cmp	r0, r1
   2d980:	bcs	2d9cc <flatcc_builder_truncate_union_vector@@Base+0xac>
   2d984:	ldr	r0, [sp, #8]
   2d988:	ldr	r0, [r0, #32]
   2d98c:	ldr	r0, [r0, #20]
   2d990:	ldr	r1, [sp, #4]
   2d994:	cmp	r0, r1
   2d998:	bcc	2d9a0 <flatcc_builder_truncate_union_vector@@Base+0x80>
   2d99c:	b	2d9c0 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   2d9a0:	ldr	r0, [pc, #120]	; 2da20 <flatcc_builder_truncate_union_vector@@Base+0x100>
   2d9a4:	add	r0, pc, r0
   2d9a8:	ldr	r1, [pc, #116]	; 2da24 <flatcc_builder_truncate_union_vector@@Base+0x104>
   2d9ac:	add	r1, pc, r1
   2d9b0:	ldr	r2, [pc, #112]	; 2da28 <flatcc_builder_truncate_union_vector@@Base+0x108>
   2d9b4:	add	r3, pc, r2
   2d9b8:	movw	r2, #1666	; 0x682
   2d9bc:	bl	14f08 <__assert_fail@plt>
   2d9c0:	mvn	r0, #0
   2d9c4:	str	r0, [fp, #-4]
   2d9c8:	b	2da08 <flatcc_builder_truncate_union_vector@@Base+0xe8>
   2d9cc:	ldr	r0, [sp, #4]
   2d9d0:	ldr	r1, [sp, #8]
   2d9d4:	ldr	r1, [r1, #32]
   2d9d8:	ldr	r2, [r1, #20]
   2d9dc:	sub	r0, r2, r0
   2d9e0:	str	r0, [r1, #20]
   2d9e4:	ldr	r0, [sp, #8]
   2d9e8:	ldr	r1, [sp, #8]
   2d9ec:	ldr	r1, [r1, #32]
   2d9f0:	ldr	r1, [r1, #16]
   2d9f4:	ldr	r2, [sp, #4]
   2d9f8:	mul	r1, r1, r2
   2d9fc:	bl	2b1c8 <flatcc_builder_truncate_vector@@Base+0x10c>
   2da00:	movw	r0, #0
   2da04:	str	r0, [fp, #-4]
   2da08:	ldr	r0, [fp, #-4]
   2da0c:	mov	sp, fp
   2da10:	pop	{fp, pc}
   2da14:	andeq	ip, r1, sp, lsr #16
   2da18:	andeq	fp, r1, ip, ror #23
   2da1c:	andeq	ip, r1, r2, lsr #17
   2da20:	andeq	ip, r1, sp, lsr r2
   2da24:	muleq	r1, r8, fp
   2da28:	andeq	ip, r1, lr, asr #16

0002da2c <flatcc_builder_union_vector_push@@Base>:
   2da2c:	push	{fp, lr}
   2da30:	mov	fp, sp
   2da34:	sub	sp, sp, #24
   2da38:	str	r1, [sp, #12]
   2da3c:	str	r2, [sp, #16]
   2da40:	str	r0, [sp, #8]
   2da44:	ldr	r0, [sp, #8]
   2da48:	ldr	r0, [r0, #32]
   2da4c:	ldrh	r0, [r0, #14]
   2da50:	cmp	r0, #7
   2da54:	bne	2da5c <flatcc_builder_union_vector_push@@Base+0x30>
   2da58:	b	2da7c <flatcc_builder_union_vector_push@@Base+0x50>
   2da5c:	ldr	r0, [pc, #160]	; 2db04 <flatcc_builder_union_vector_push@@Base+0xd8>
   2da60:	add	r0, pc, r0
   2da64:	ldr	r1, [pc, #156]	; 2db08 <flatcc_builder_union_vector_push@@Base+0xdc>
   2da68:	add	r1, pc, r1
   2da6c:	ldr	r2, [pc, #152]	; 2db0c <flatcc_builder_union_vector_push@@Base+0xe0>
   2da70:	add	r3, pc, r2
   2da74:	movw	r2, #1677	; 0x68d
   2da78:	bl	14f08 <__assert_fail@plt>
   2da7c:	ldr	r0, [pc, #140]	; 2db10 <flatcc_builder_union_vector_push@@Base+0xe4>
   2da80:	ldr	r1, [sp, #8]
   2da84:	ldr	r1, [r1, #32]
   2da88:	ldr	r1, [r1, #20]
   2da8c:	cmp	r1, r0
   2da90:	bne	2daa0 <flatcc_builder_union_vector_push@@Base+0x74>
   2da94:	movw	r0, #0
   2da98:	str	r0, [fp, #-4]
   2da9c:	b	2daf8 <flatcc_builder_union_vector_push@@Base+0xcc>
   2daa0:	ldr	r0, [sp, #8]
   2daa4:	ldr	r0, [r0, #32]
   2daa8:	ldr	r1, [r0, #20]
   2daac:	add	r1, r1, #1
   2dab0:	str	r1, [r0, #20]
   2dab4:	ldr	r0, [sp, #8]
   2dab8:	movw	r1, #8
   2dabc:	bl	2a7d0 <flatcc_builder_start_struct@@Base+0xfc>
   2dac0:	str	r0, [sp, #4]
   2dac4:	movw	r1, #0
   2dac8:	cmp	r1, r0
   2dacc:	bne	2dadc <flatcc_builder_union_vector_push@@Base+0xb0>
   2dad0:	movw	r0, #0
   2dad4:	str	r0, [fp, #-4]
   2dad8:	b	2daf8 <flatcc_builder_union_vector_push@@Base+0xcc>
   2dadc:	ldr	r0, [sp, #4]
   2dae0:	ldr	r1, [sp, #12]
   2dae4:	str	r1, [r0]
   2dae8:	ldr	r1, [sp, #16]
   2daec:	str	r1, [r0, #4]
   2daf0:	ldr	r0, [sp, #4]
   2daf4:	str	r0, [fp, #-4]
   2daf8:	ldr	r0, [fp, #-4]
   2dafc:	mov	sp, fp
   2db00:	pop	{fp, pc}
   2db04:	andeq	ip, r1, sp, lsl r7
   2db08:	ldrdeq	fp, [r1], -ip
   2db0c:	ldrdeq	ip, [r1], -r7
   2db10:	svcne	0x00ffffff

0002db14 <flatcc_builder_append_union_vector@@Base>:
   2db14:	push	{fp, lr}
   2db18:	mov	fp, sp
   2db1c:	sub	sp, sp, #16
   2db20:	str	r0, [sp, #8]
   2db24:	str	r1, [sp, #4]
   2db28:	str	r2, [sp]
   2db2c:	ldr	r0, [sp, #8]
   2db30:	ldr	r0, [r0, #32]
   2db34:	ldrh	r0, [r0, #14]
   2db38:	cmp	r0, #7
   2db3c:	bne	2db44 <flatcc_builder_append_union_vector@@Base+0x30>
   2db40:	b	2db64 <flatcc_builder_append_union_vector@@Base+0x50>
   2db44:	ldr	r0, [pc, #96]	; 2dbac <flatcc_builder_append_union_vector@@Base+0x98>
   2db48:	add	r0, pc, r0
   2db4c:	ldr	r1, [pc, #92]	; 2dbb0 <flatcc_builder_append_union_vector@@Base+0x9c>
   2db50:	add	r1, pc, r1
   2db54:	ldr	r2, [pc, #88]	; 2dbb4 <flatcc_builder_append_union_vector@@Base+0xa0>
   2db58:	add	r3, pc, r2
   2db5c:	movw	r2, #1692	; 0x69c
   2db60:	bl	14f08 <__assert_fail@plt>
   2db64:	ldr	r2, [pc, #76]	; 2dbb8 <flatcc_builder_append_union_vector@@Base+0xa4>
   2db68:	ldr	r0, [sp, #8]
   2db6c:	ldr	r1, [sp]
   2db70:	bl	2a994 <flatcc_builder_extend_vector@@Base+0x6c>
   2db74:	cmp	r0, #0
   2db78:	beq	2db88 <flatcc_builder_append_union_vector@@Base+0x74>
   2db7c:	movw	r0, #0
   2db80:	str	r0, [fp, #-4]
   2db84:	b	2dba0 <flatcc_builder_append_union_vector@@Base+0x8c>
   2db88:	ldr	r0, [sp, #8]
   2db8c:	ldr	r1, [sp, #4]
   2db90:	ldr	r2, [sp]
   2db94:	lsl	r2, r2, #3
   2db98:	bl	2ab7c <flatcc_builder_vector_push@@Base+0x110>
   2db9c:	str	r0, [fp, #-4]
   2dba0:	ldr	r0, [fp, #-4]
   2dba4:	mov	sp, fp
   2dba8:	pop	{fp, pc}
   2dbac:	andeq	ip, r1, r5, lsr r6
   2dbb0:	strdeq	fp, [r1], -r4
   2dbb4:	andeq	ip, r1, ip, asr r7
   2dbb8:	svcne	0x00ffffff

0002dbbc <flatcc_builder_create_string@@Base>:
   2dbbc:	push	{fp, lr}
   2dbc0:	mov	fp, sp
   2dbc4:	sub	sp, sp, #96	; 0x60
   2dbc8:	str	r0, [fp, #-8]
   2dbcc:	str	r1, [fp, #-12]
   2dbd0:	str	r2, [fp, #-16]
   2dbd4:	ldr	r0, [fp, #-16]
   2dbd8:	cmn	r0, #1
   2dbdc:	bls	2dbec <flatcc_builder_create_string@@Base+0x30>
   2dbe0:	movw	r0, #0
   2dbe4:	str	r0, [fp, #-4]
   2dbe8:	b	2dd08 <flatcc_builder_create_string@@Base+0x14c>
   2dbec:	ldr	r0, [fp, #-16]
   2dbf0:	bl	29b10 <flatcc_builder_embed_buffer@@Base+0x388>
   2dbf4:	str	r0, [fp, #-24]	; 0xffffffe8
   2dbf8:	ldr	r0, [fp, #-8]
   2dbfc:	ldr	r1, [fp, #-16]
   2dc00:	add	r1, r1, #1
   2dc04:	mov	r2, #4
   2dc08:	bl	29adc <flatcc_builder_embed_buffer@@Base+0x354>
   2dc0c:	add	r0, r0, #1
   2dc10:	str	r0, [fp, #-20]	; 0xffffffec
   2dc14:	mov	r0, #0
   2dc18:	str	r0, [sp]
   2dc1c:	str	r0, [sp, #4]
   2dc20:	ldr	r0, [sp]
   2dc24:	add	r0, r0, #4
   2dc28:	str	r0, [sp]
   2dc2c:	mov	r0, sp
   2dc30:	add	r0, r0, #8
   2dc34:	ldr	r1, [sp, #4]
   2dc38:	sub	r2, fp, #24
   2dc3c:	str	r2, [r0, r1, lsl #3]
   2dc40:	ldr	r1, [sp, #4]
   2dc44:	add	r0, r0, r1, lsl #3
   2dc48:	movw	r1, #4
   2dc4c:	str	r1, [r0, #4]
   2dc50:	ldr	r0, [sp, #4]
   2dc54:	add	r0, r0, #1
   2dc58:	str	r0, [sp, #4]
   2dc5c:	ldr	r0, [fp, #-16]
   2dc60:	cmp	r0, #0
   2dc64:	bls	2dca8 <flatcc_builder_create_string@@Base+0xec>
   2dc68:	ldr	r0, [fp, #-16]
   2dc6c:	ldr	r1, [sp]
   2dc70:	add	r0, r1, r0
   2dc74:	str	r0, [sp]
   2dc78:	ldr	r0, [fp, #-12]
   2dc7c:	mov	r1, sp
   2dc80:	add	r1, r1, #8
   2dc84:	ldr	r2, [sp, #4]
   2dc88:	str	r0, [r1, r2, lsl #3]
   2dc8c:	ldr	r0, [fp, #-16]
   2dc90:	ldr	r2, [sp, #4]
   2dc94:	add	r1, r1, r2, lsl #3
   2dc98:	str	r0, [r1, #4]
   2dc9c:	ldr	r0, [sp, #4]
   2dca0:	add	r0, r0, #1
   2dca4:	str	r0, [sp, #4]
   2dca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dcac:	cmp	r0, #0
   2dcb0:	bls	2dcf8 <flatcc_builder_create_string@@Base+0x13c>
   2dcb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2dcb8:	ldr	r1, [sp]
   2dcbc:	add	r0, r1, r0
   2dcc0:	str	r0, [sp]
   2dcc4:	mov	r0, sp
   2dcc8:	add	r0, r0, #8
   2dccc:	ldr	r1, [sp, #4]
   2dcd0:	ldr	r2, [pc, #60]	; 2dd14 <flatcc_builder_create_string@@Base+0x158>
   2dcd4:	ldr	r2, [pc, r2]
   2dcd8:	str	r2, [r0, r1, lsl #3]
   2dcdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2dce0:	ldr	r2, [sp, #4]
   2dce4:	add	r0, r0, r2, lsl #3
   2dce8:	str	r1, [r0, #4]
   2dcec:	ldr	r0, [sp, #4]
   2dcf0:	add	r0, r0, #1
   2dcf4:	str	r0, [sp, #4]
   2dcf8:	ldr	r0, [fp, #-8]
   2dcfc:	mov	r1, sp
   2dd00:	bl	29b24 <flatcc_builder_embed_buffer@@Base+0x39c>
   2dd04:	str	r0, [fp, #-4]
   2dd08:	ldr	r0, [fp, #-4]
   2dd0c:	mov	sp, fp
   2dd10:	pop	{fp, pc}
   2dd14:	andeq	pc, r2, ip, lsl #7

0002dd18 <flatcc_builder_create_string_str@@Base>:
   2dd18:	push	{fp, lr}
   2dd1c:	mov	fp, sp
   2dd20:	sub	sp, sp, #24
   2dd24:	str	r0, [fp, #-4]
   2dd28:	str	r1, [fp, #-8]
   2dd2c:	ldr	r0, [fp, #-4]
   2dd30:	ldr	r1, [fp, #-8]
   2dd34:	ldr	r2, [fp, #-8]
   2dd38:	str	r0, [sp, #12]
   2dd3c:	mov	r0, r2
   2dd40:	str	r1, [sp, #8]
   2dd44:	bl	14e9c <strlen@plt>
   2dd48:	ldr	r1, [sp, #12]
   2dd4c:	str	r0, [sp, #4]
   2dd50:	mov	r0, r1
   2dd54:	ldr	r1, [sp, #8]
   2dd58:	ldr	r2, [sp, #4]
   2dd5c:	bl	2dbbc <flatcc_builder_create_string@@Base>
   2dd60:	mov	sp, fp
   2dd64:	pop	{fp, pc}

0002dd68 <flatcc_builder_create_string_strn@@Base>:
   2dd68:	push	{fp, lr}
   2dd6c:	mov	fp, sp
   2dd70:	sub	sp, sp, #24
   2dd74:	str	r0, [fp, #-4]
   2dd78:	str	r1, [fp, #-8]
   2dd7c:	str	r2, [sp, #12]
   2dd80:	ldr	r0, [fp, #-4]
   2dd84:	ldr	r1, [fp, #-8]
   2dd88:	ldr	r2, [fp, #-8]
   2dd8c:	ldr	r3, [sp, #12]
   2dd90:	str	r0, [sp, #8]
   2dd94:	mov	r0, r2
   2dd98:	str	r1, [sp, #4]
   2dd9c:	mov	r1, r3
   2dda0:	bl	2b05c <flatcc_builder_append_string_strn@@Base+0x5c>
   2dda4:	ldr	r1, [sp, #8]
   2dda8:	str	r0, [sp]
   2ddac:	mov	r0, r1
   2ddb0:	ldr	r1, [sp, #4]
   2ddb4:	ldr	r2, [sp]
   2ddb8:	bl	2dbbc <flatcc_builder_create_string@@Base>
   2ddbc:	mov	sp, fp
   2ddc0:	pop	{fp, pc}

0002ddc4 <flatcc_builder_end_string@@Base>:
   2ddc4:	push	{fp, lr}
   2ddc8:	mov	fp, sp
   2ddcc:	sub	sp, sp, #16
   2ddd0:	str	r0, [sp, #8]
   2ddd4:	ldr	r0, [sp, #8]
   2ddd8:	ldr	r0, [r0, #32]
   2dddc:	ldrh	r0, [r0, #14]
   2dde0:	cmp	r0, #6
   2dde4:	bne	2ddec <flatcc_builder_end_string@@Base+0x28>
   2dde8:	b	2de0c <flatcc_builder_end_string@@Base+0x48>
   2ddec:	ldr	r0, [pc, #168]	; 2de9c <flatcc_builder_end_string@@Base+0xd8>
   2ddf0:	add	r0, pc, r0
   2ddf4:	ldr	r1, [pc, #164]	; 2dea0 <flatcc_builder_end_string@@Base+0xdc>
   2ddf8:	add	r1, pc, r1
   2ddfc:	ldr	r2, [pc, #160]	; 2dea4 <flatcc_builder_end_string@@Base+0xe0>
   2de00:	add	r3, pc, r2
   2de04:	movw	r2, #1732	; 0x6c4
   2de08:	bl	14f08 <__assert_fail@plt>
   2de0c:	ldr	r0, [sp, #8]
   2de10:	ldr	r0, [r0, #32]
   2de14:	ldr	r0, [r0, #20]
   2de18:	ldr	r1, [sp, #8]
   2de1c:	ldr	r1, [r1, #20]
   2de20:	cmp	r0, r1
   2de24:	bne	2de2c <flatcc_builder_end_string@@Base+0x68>
   2de28:	b	2de4c <flatcc_builder_end_string@@Base+0x88>
   2de2c:	ldr	r0, [pc, #116]	; 2dea8 <flatcc_builder_end_string@@Base+0xe4>
   2de30:	add	r0, pc, r0
   2de34:	ldr	r1, [pc, #112]	; 2deac <flatcc_builder_end_string@@Base+0xe8>
   2de38:	add	r1, pc, r1
   2de3c:	ldr	r2, [pc, #108]	; 2deb0 <flatcc_builder_end_string@@Base+0xec>
   2de40:	add	r3, pc, r2
   2de44:	movw	r2, #1733	; 0x6c5
   2de48:	bl	14f08 <__assert_fail@plt>
   2de4c:	ldr	r0, [sp, #8]
   2de50:	ldr	r1, [sp, #8]
   2de54:	ldr	r1, [r1, #16]
   2de58:	ldr	r2, [sp, #8]
   2de5c:	ldr	r2, [r2, #20]
   2de60:	bl	2dbbc <flatcc_builder_create_string@@Base>
   2de64:	str	r0, [sp, #4]
   2de68:	movw	r1, #0
   2de6c:	cmp	r1, r0
   2de70:	bne	2de80 <flatcc_builder_end_string@@Base+0xbc>
   2de74:	movw	r0, #0
   2de78:	str	r0, [fp, #-4]
   2de7c:	b	2de90 <flatcc_builder_end_string@@Base+0xcc>
   2de80:	ldr	r0, [sp, #8]
   2de84:	bl	2a618 <flatcc_builder_end_buffer@@Base+0x164>
   2de88:	ldr	r0, [sp, #4]
   2de8c:	str	r0, [fp, #-4]
   2de90:	ldr	r0, [fp, #-4]
   2de94:	mov	sp, fp
   2de98:	pop	{fp, pc}
   2de9c:	muleq	r1, r0, ip
   2dea0:	andeq	fp, r1, ip, asr #14
   2dea4:	andeq	ip, r1, r3, lsr r5
   2dea8:	andeq	ip, r1, r6, asr #10
   2deac:	andeq	fp, r1, ip, lsl #14
   2deb0:	strdeq	ip, [r1], -r3

0002deb4 <flatcc_builder_string_edit@@Base>:
   2deb4:	sub	sp, sp, #4
   2deb8:	str	r0, [sp]
   2debc:	ldr	r0, [sp]
   2dec0:	ldr	r0, [r0, #16]
   2dec4:	add	sp, sp, #4
   2dec8:	bx	lr

0002decc <flatcc_builder_string_len@@Base>:
   2decc:	sub	sp, sp, #4
   2ded0:	str	r0, [sp]
   2ded4:	ldr	r0, [sp]
   2ded8:	ldr	r0, [r0, #32]
   2dedc:	ldr	r0, [r0, #20]
   2dee0:	add	sp, sp, #4
   2dee4:	bx	lr
   2dee8:	push	{fp, lr}
   2deec:	mov	fp, sp
   2def0:	sub	sp, sp, #24
   2def4:	str	r0, [fp, #-8]
   2def8:	str	r1, [sp, #12]
   2defc:	strh	r2, [sp, #10]
   2df00:	strh	r3, [sp, #8]
   2df04:	ldr	r0, [fp, #-8]
   2df08:	ldr	r0, [r0, #20]
   2df0c:	ldrh	r1, [sp, #10]
   2df10:	add	r0, r0, r1
   2df14:	sub	r0, r0, #1
   2df18:	ldrh	r1, [sp, #10]
   2df1c:	sub	r1, r1, #1
   2df20:	mvn	r2, #0
   2df24:	eor	r1, r1, r2
   2df28:	and	r0, r0, r1
   2df2c:	str	r0, [sp, #4]
   2df30:	ldr	r0, [sp, #4]
   2df34:	ldr	r1, [sp, #12]
   2df38:	add	r0, r0, r1
   2df3c:	ldr	r1, [fp, #-8]
   2df40:	str	r0, [r1, #20]
   2df44:	ldr	r1, [fp, #-8]
   2df48:	ldr	r1, [r1, #24]
   2df4c:	cmp	r0, r1
   2df50:	bcc	2df84 <flatcc_builder_string_len@@Base+0xb8>
   2df54:	ldr	r0, [fp, #-8]
   2df58:	ldr	r1, [fp, #-8]
   2df5c:	ldr	r1, [r1, #20]
   2df60:	add	r1, r1, #1
   2df64:	movw	r2, #65532	; 0xfffc
   2df68:	bl	2e92c <flatcc_builder_get_emit_context@@Base+0x40>
   2df6c:	cmp	r0, #0
   2df70:	beq	2df80 <flatcc_builder_string_len@@Base+0xb4>
   2df74:	movw	r0, #0
   2df78:	str	r0, [fp, #-4]
   2df7c:	b	2dfd8 <flatcc_builder_string_len@@Base+0x10c>
   2df80:	b	2df84 <flatcc_builder_string_len@@Base+0xb8>
   2df84:	ldr	r0, [sp, #4]
   2df88:	add	r0, r0, #4
   2df8c:	ldr	r1, [fp, #-8]
   2df90:	ldr	r1, [r1, #4]
   2df94:	ldrh	r2, [sp, #8]
   2df98:	add	r1, r1, r2, lsl #1
   2df9c:	strh	r0, [r1]
   2dfa0:	ldrh	r0, [sp, #8]
   2dfa4:	ldr	r1, [fp, #-8]
   2dfa8:	ldrh	r1, [r1, #8]
   2dfac:	cmp	r0, r1
   2dfb0:	blt	2dfc4 <flatcc_builder_string_len@@Base+0xf8>
   2dfb4:	ldrh	r0, [sp, #8]
   2dfb8:	add	r0, r0, #1
   2dfbc:	ldr	r1, [fp, #-8]
   2dfc0:	strh	r0, [r1, #8]
   2dfc4:	ldr	r0, [fp, #-8]
   2dfc8:	ldr	r0, [r0, #16]
   2dfcc:	ldr	r1, [sp, #4]
   2dfd0:	add	r0, r0, r1
   2dfd4:	str	r0, [fp, #-4]
   2dfd8:	ldr	r0, [fp, #-4]
   2dfdc:	mov	sp, fp
   2dfe0:	pop	{fp, pc}

0002dfe4 <flatcc_builder_table_edit@@Base>:
   2dfe4:	push	{fp, lr}
   2dfe8:	mov	fp, sp
   2dfec:	sub	sp, sp, #8
   2dff0:	str	r0, [sp, #4]
   2dff4:	str	r1, [sp]
   2dff8:	ldr	r0, [sp, #4]
   2dffc:	ldr	r0, [r0, #32]
   2e000:	ldrh	r0, [r0, #14]
   2e004:	cmp	r0, #3
   2e008:	bne	2e010 <flatcc_builder_table_edit@@Base+0x2c>
   2e00c:	b	2e030 <flatcc_builder_table_edit@@Base+0x4c>
   2e010:	ldr	r0, [pc, #68]	; 2e05c <flatcc_builder_table_edit@@Base+0x78>
   2e014:	add	r0, pc, r0
   2e018:	ldr	r1, [pc, #64]	; 2e060 <flatcc_builder_table_edit@@Base+0x7c>
   2e01c:	add	r1, pc, r1
   2e020:	ldr	r2, [pc, #60]	; 2e064 <flatcc_builder_table_edit@@Base+0x80>
   2e024:	add	r3, pc, r2
   2e028:	movw	r2, #1794	; 0x702
   2e02c:	bl	14f08 <__assert_fail@plt>
   2e030:	ldr	r0, [sp, #4]
   2e034:	ldr	r0, [r0, #16]
   2e038:	ldr	r1, [sp, #4]
   2e03c:	ldr	r1, [r1, #20]
   2e040:	add	r0, r0, r1
   2e044:	ldr	r1, [sp]
   2e048:	movw	r2, #0
   2e04c:	sub	r1, r2, r1
   2e050:	add	r0, r0, r1
   2e054:	mov	sp, fp
   2e058:	pop	{fp, pc}
   2e05c:	andeq	fp, r1, ip, asr sp
   2e060:	andeq	fp, r1, r8, lsr #10
   2e064:	andeq	ip, r1, r4, lsl #8

0002e068 <flatcc_builder_table_add_copy@@Base>:
   2e068:	push	{fp, lr}
   2e06c:	mov	fp, sp
   2e070:	sub	sp, sp, #24
   2e074:	ldr	ip, [fp, #8]
   2e078:	str	r0, [fp, #-4]
   2e07c:	str	r1, [fp, #-8]
   2e080:	str	r2, [sp, #12]
   2e084:	str	r3, [sp, #8]
   2e088:	strh	ip, [sp, #6]
   2e08c:	ldr	r0, [fp, #-4]
   2e090:	ldr	r1, [fp, #-8]
   2e094:	ldr	r2, [sp, #8]
   2e098:	ldrh	r3, [sp, #6]
   2e09c:	bl	2d13c <flatcc_builder_table_add@@Base>
   2e0a0:	str	r0, [sp]
   2e0a4:	movw	r1, #0
   2e0a8:	cmp	r0, r1
   2e0ac:	beq	2e0c0 <flatcc_builder_table_add_copy@@Base+0x58>
   2e0b0:	ldr	r0, [sp]
   2e0b4:	ldr	r1, [sp, #12]
   2e0b8:	ldr	r2, [sp, #8]
   2e0bc:	bl	14e30 <memcpy@plt>
   2e0c0:	ldr	r0, [sp]
   2e0c4:	mov	sp, fp
   2e0c8:	pop	{fp, pc}
   2e0cc:	push	{fp, lr}
   2e0d0:	mov	fp, sp
   2e0d4:	sub	sp, sp, #16
   2e0d8:	str	r0, [sp, #8]
   2e0dc:	strh	r1, [sp, #6]
   2e0e0:	ldr	r0, [sp, #8]
   2e0e4:	ldr	r0, [r0, #20]
   2e0e8:	add	r0, r0, #4
   2e0ec:	sub	r0, r0, #1
   2e0f0:	mvn	r1, #3
   2e0f4:	and	r0, r0, r1
   2e0f8:	str	r0, [sp]
   2e0fc:	ldr	r0, [sp]
   2e100:	add	r0, r0, #4
   2e104:	ldr	r1, [sp, #8]
   2e108:	str	r0, [r1, #20]
   2e10c:	ldr	r1, [sp, #8]
   2e110:	ldr	r1, [r1, #24]
   2e114:	cmp	r0, r1
   2e118:	bls	2e148 <flatcc_builder_table_add_copy@@Base+0xe0>
   2e11c:	ldr	r0, [sp, #8]
   2e120:	ldr	r1, [sp, #8]
   2e124:	ldr	r1, [r1, #20]
   2e128:	movw	r2, #65532	; 0xfffc
   2e12c:	bl	2e92c <flatcc_builder_get_emit_context@@Base+0x40>
   2e130:	cmp	r0, #0
   2e134:	beq	2e144 <flatcc_builder_table_add_copy@@Base+0xdc>
   2e138:	movw	r0, #0
   2e13c:	str	r0, [fp, #-4]
   2e140:	b	2e1b4 <flatcc_builder_table_add_copy@@Base+0x14c>
   2e144:	b	2e148 <flatcc_builder_table_add_copy@@Base+0xe0>
   2e148:	ldr	r0, [sp]
   2e14c:	add	r0, r0, #4
   2e150:	ldr	r1, [sp, #8]
   2e154:	ldr	r1, [r1, #4]
   2e158:	ldrh	r2, [sp, #6]
   2e15c:	add	r1, r1, r2, lsl #1
   2e160:	strh	r0, [r1]
   2e164:	ldrh	r0, [sp, #6]
   2e168:	ldr	r1, [sp, #8]
   2e16c:	ldrh	r1, [r1, #8]
   2e170:	cmp	r0, r1
   2e174:	blt	2e188 <flatcc_builder_table_add_copy@@Base+0x120>
   2e178:	ldrh	r0, [sp, #6]
   2e17c:	add	r0, r0, #1
   2e180:	ldr	r1, [sp, #8]
   2e184:	strh	r0, [r1, #8]
   2e188:	ldr	r0, [sp]
   2e18c:	ldr	r1, [sp, #8]
   2e190:	ldr	r2, [r1]
   2e194:	add	r3, r2, #2
   2e198:	str	r3, [r1]
   2e19c:	strh	r0, [r2]
   2e1a0:	ldr	r0, [sp, #8]
   2e1a4:	ldr	r0, [r0, #16]
   2e1a8:	ldr	r1, [sp]
   2e1ac:	add	r0, r0, r1
   2e1b0:	str	r0, [fp, #-4]
   2e1b4:	ldr	r0, [fp, #-4]
   2e1b8:	mov	sp, fp
   2e1bc:	pop	{fp, pc}

0002e1c0 <flatcc_builder_push_buffer_alignment@@Base>:
   2e1c0:	sub	sp, sp, #8
   2e1c4:	str	r0, [sp, #4]
   2e1c8:	ldr	r0, [sp, #4]
   2e1cc:	ldrh	r0, [r0, #128]	; 0x80
   2e1d0:	strh	r0, [sp, #2]
   2e1d4:	ldr	r0, [sp, #4]
   2e1d8:	movw	r1, #4
   2e1dc:	strh	r1, [r0, #128]	; 0x80
   2e1e0:	ldrh	r0, [sp, #2]
   2e1e4:	add	sp, sp, #8
   2e1e8:	bx	lr

0002e1ec <flatcc_builder_pop_buffer_alignment@@Base>:
   2e1ec:	push	{fp, lr}
   2e1f0:	mov	fp, sp
   2e1f4:	sub	sp, sp, #8
   2e1f8:	str	r0, [sp, #4]
   2e1fc:	strh	r1, [sp, #2]
   2e200:	ldr	r0, [sp, #4]
   2e204:	ldrh	r1, [sp, #2]
   2e208:	bl	29ff0 <flatcc_builder_create_buffer@@Base+0x3a8>
   2e20c:	mov	sp, fp
   2e210:	pop	{fp, pc}

0002e214 <flatcc_builder_get_buffer_alignment@@Base>:
   2e214:	sub	sp, sp, #4
   2e218:	str	r0, [sp]
   2e21c:	ldr	r0, [sp]
   2e220:	ldrh	r0, [r0, #128]	; 0x80
   2e224:	add	sp, sp, #4
   2e228:	bx	lr

0002e22c <flatcc_builder_set_vtable_clustering@@Base>:
   2e22c:	sub	sp, sp, #8
   2e230:	str	r0, [sp, #4]
   2e234:	str	r1, [sp]
   2e238:	ldr	r0, [sp]
   2e23c:	cmp	r0, #0
   2e240:	movw	r0, #0
   2e244:	movne	r0, #1
   2e248:	mvn	r1, #0
   2e24c:	eor	r0, r0, r1
   2e250:	and	r0, r0, #1
   2e254:	ldr	r1, [sp, #4]
   2e258:	str	r0, [r1, #180]	; 0xb4
   2e25c:	add	sp, sp, #8
   2e260:	bx	lr

0002e264 <flatcc_builder_set_block_align@@Base>:
   2e264:	sub	sp, sp, #8
   2e268:	str	r0, [sp, #4]
   2e26c:	strh	r1, [sp, #2]
   2e270:	ldrh	r0, [sp, #2]
   2e274:	ldr	r1, [sp, #4]
   2e278:	strh	r0, [r1, #132]	; 0x84
   2e27c:	add	sp, sp, #8
   2e280:	bx	lr

0002e284 <flatcc_builder_get_level@@Base>:
   2e284:	sub	sp, sp, #4
   2e288:	str	r0, [sp]
   2e28c:	ldr	r0, [sp]
   2e290:	ldr	r0, [r0, #156]	; 0x9c
   2e294:	add	sp, sp, #4
   2e298:	bx	lr

0002e29c <flatcc_builder_set_max_level@@Base>:
   2e29c:	sub	sp, sp, #8
   2e2a0:	str	r0, [sp, #4]
   2e2a4:	str	r1, [sp]
   2e2a8:	ldr	r0, [sp]
   2e2ac:	ldr	r1, [sp, #4]
   2e2b0:	str	r0, [r1, #176]	; 0xb0
   2e2b4:	ldr	r0, [sp, #4]
   2e2b8:	ldr	r0, [r0, #160]	; 0xa0
   2e2bc:	ldr	r1, [sp, #4]
   2e2c0:	ldr	r1, [r1, #176]	; 0xb0
   2e2c4:	cmp	r0, r1
   2e2c8:	bge	2e2dc <flatcc_builder_set_max_level@@Base+0x40>
   2e2cc:	ldr	r0, [sp, #4]
   2e2d0:	ldr	r0, [r0, #176]	; 0xb0
   2e2d4:	ldr	r1, [sp, #4]
   2e2d8:	str	r0, [r1, #160]	; 0xa0
   2e2dc:	add	sp, sp, #8
   2e2e0:	bx	lr

0002e2e4 <flatcc_builder_get_buffer_size@@Base>:
   2e2e4:	sub	sp, sp, #4
   2e2e8:	str	r0, [sp]
   2e2ec:	ldr	r0, [sp]
   2e2f0:	ldr	r0, [r0, #140]	; 0x8c
   2e2f4:	ldr	r1, [sp]
   2e2f8:	ldr	r1, [r1, #136]	; 0x88
   2e2fc:	sub	r0, r0, r1
   2e300:	add	sp, sp, #4
   2e304:	bx	lr

0002e308 <flatcc_builder_get_buffer_start@@Base>:
   2e308:	sub	sp, sp, #4
   2e30c:	str	r0, [sp]
   2e310:	ldr	r0, [sp]
   2e314:	ldr	r0, [r0, #136]	; 0x88
   2e318:	add	sp, sp, #4
   2e31c:	bx	lr

0002e320 <flatcc_builder_get_buffer_end@@Base>:
   2e320:	sub	sp, sp, #4
   2e324:	str	r0, [sp]
   2e328:	ldr	r0, [sp]
   2e32c:	ldr	r0, [r0, #140]	; 0x8c
   2e330:	add	sp, sp, #4
   2e334:	bx	lr

0002e338 <flatcc_builder_set_vtable_cache_limit@@Base>:
   2e338:	sub	sp, sp, #8
   2e33c:	str	r0, [sp, #4]
   2e340:	str	r1, [sp]
   2e344:	ldr	r0, [sp]
   2e348:	ldr	r1, [sp, #4]
   2e34c:	str	r0, [r1, #172]	; 0xac
   2e350:	add	sp, sp, #8
   2e354:	bx	lr

0002e358 <flatcc_builder_set_identifier@@Base>:
   2e358:	sub	sp, sp, #16
   2e35c:	str	r0, [sp, #12]
   2e360:	str	r1, [sp, #8]
   2e364:	ldr	r0, [sp, #12]
   2e368:	add	r0, r0, #168	; 0xa8
   2e36c:	ldr	r1, [sp, #8]
   2e370:	movw	r2, #0
   2e374:	cmp	r1, r2
   2e378:	str	r0, [sp, #4]
   2e37c:	beq	2e38c <flatcc_builder_set_identifier@@Base+0x34>
   2e380:	ldr	r0, [sp, #8]
   2e384:	str	r0, [sp]
   2e388:	b	2e39c <flatcc_builder_set_identifier@@Base+0x44>
   2e38c:	ldr	r0, [pc, #56]	; 2e3cc <flatcc_builder_set_identifier@@Base+0x74>
   2e390:	ldr	r0, [pc, r0]
   2e394:	str	r0, [sp]
   2e398:	b	2e39c <flatcc_builder_set_identifier@@Base+0x44>
   2e39c:	ldr	r0, [sp]
   2e3a0:	ldrb	r1, [r0]
   2e3a4:	ldr	r2, [sp, #4]
   2e3a8:	strb	r1, [r2]
   2e3ac:	ldrb	r1, [r0, #1]
   2e3b0:	strb	r1, [r2, #1]
   2e3b4:	ldrb	r1, [r0, #2]
   2e3b8:	strb	r1, [r2, #2]
   2e3bc:	ldrb	r0, [r0, #3]
   2e3c0:	strb	r0, [r2, #3]
   2e3c4:	add	sp, sp, #16
   2e3c8:	bx	lr
   2e3cc:	ldrdeq	lr, [r2], -r0

0002e3d0 <flatcc_builder_get_type@@Base>:
   2e3d0:	sub	sp, sp, #8
   2e3d4:	str	r0, [sp, #4]
   2e3d8:	ldr	r0, [sp, #4]
   2e3dc:	ldr	r0, [r0, #32]
   2e3e0:	movw	r1, #0
   2e3e4:	cmp	r0, r1
   2e3e8:	beq	2e400 <flatcc_builder_get_type@@Base+0x30>
   2e3ec:	ldr	r0, [sp, #4]
   2e3f0:	ldr	r0, [r0, #32]
   2e3f4:	ldrh	r0, [r0, #14]
   2e3f8:	str	r0, [sp]
   2e3fc:	b	2e40c <flatcc_builder_get_type@@Base+0x3c>
   2e400:	movw	r0, #0
   2e404:	str	r0, [sp]
   2e408:	b	2e40c <flatcc_builder_get_type@@Base+0x3c>
   2e40c:	ldr	r0, [sp]
   2e410:	add	sp, sp, #8
   2e414:	bx	lr

0002e418 <flatcc_builder_get_type_at@@Base>:
   2e418:	sub	sp, sp, #12
   2e41c:	str	r0, [sp, #4]
   2e420:	str	r1, [sp]
   2e424:	ldr	r0, [sp]
   2e428:	cmp	r0, #1
   2e42c:	blt	2e444 <flatcc_builder_get_type_at@@Base+0x2c>
   2e430:	ldr	r0, [sp]
   2e434:	ldr	r1, [sp, #4]
   2e438:	ldr	r1, [r1, #156]	; 0x9c
   2e43c:	cmp	r0, r1
   2e440:	ble	2e450 <flatcc_builder_get_type_at@@Base+0x38>
   2e444:	movw	r0, #0
   2e448:	str	r0, [sp, #8]
   2e44c:	b	2e47c <flatcc_builder_get_type_at@@Base+0x64>
   2e450:	ldr	r0, [sp, #4]
   2e454:	ldr	r0, [r0, #32]
   2e458:	ldr	r1, [sp]
   2e45c:	ldr	r2, [sp, #4]
   2e460:	ldr	r2, [r2, #156]	; 0x9c
   2e464:	sub	r1, r1, r2
   2e468:	movw	r2, #36	; 0x24
   2e46c:	mul	r1, r1, r2
   2e470:	add	r0, r0, r1
   2e474:	ldrh	r0, [r0, #14]
   2e478:	str	r0, [sp, #8]
   2e47c:	ldr	r0, [sp, #8]
   2e480:	add	sp, sp, #12
   2e484:	bx	lr

0002e488 <flatcc_builder_get_direct_buffer@@Base>:
   2e488:	push	{fp, lr}
   2e48c:	mov	fp, sp
   2e490:	sub	sp, sp, #16
   2e494:	str	r0, [sp, #8]
   2e498:	str	r1, [sp, #4]
   2e49c:	ldr	r0, [sp, #8]
   2e4a0:	ldr	r0, [r0, #184]	; 0xb8
   2e4a4:	cmp	r0, #0
   2e4a8:	beq	2e4c4 <flatcc_builder_get_direct_buffer@@Base+0x3c>
   2e4ac:	ldr	r0, [sp, #8]
   2e4b0:	add	r0, r0, #188	; 0xbc
   2e4b4:	ldr	r1, [sp, #4]
   2e4b8:	bl	2e4f8 <flatcc_builder_get_direct_buffer@@Base+0x70>
   2e4bc:	str	r0, [fp, #-4]
   2e4c0:	b	2e4ec <flatcc_builder_get_direct_buffer@@Base+0x64>
   2e4c4:	ldr	r0, [sp, #4]
   2e4c8:	movw	r1, #0
   2e4cc:	cmp	r0, r1
   2e4d0:	beq	2e4e0 <flatcc_builder_get_direct_buffer@@Base+0x58>
   2e4d4:	ldr	r0, [sp, #4]
   2e4d8:	movw	r1, #0
   2e4dc:	str	r1, [r0]
   2e4e0:	b	2e4e4 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   2e4e4:	movw	r0, #0
   2e4e8:	str	r0, [fp, #-4]
   2e4ec:	ldr	r0, [fp, #-4]
   2e4f0:	mov	sp, fp
   2e4f4:	pop	{fp, pc}
   2e4f8:	sub	sp, sp, #12
   2e4fc:	str	r0, [sp, #4]
   2e500:	str	r1, [sp]
   2e504:	ldr	r0, [sp, #4]
   2e508:	ldr	r0, [r0]
   2e50c:	ldr	r1, [sp, #4]
   2e510:	ldr	r1, [r1, #4]
   2e514:	cmp	r0, r1
   2e518:	bne	2e54c <flatcc_builder_get_direct_buffer@@Base+0xc4>
   2e51c:	ldr	r0, [sp]
   2e520:	movw	r1, #0
   2e524:	cmp	r0, r1
   2e528:	beq	2e53c <flatcc_builder_get_direct_buffer@@Base+0xb4>
   2e52c:	ldr	r0, [sp, #4]
   2e530:	ldr	r0, [r0, #24]
   2e534:	ldr	r1, [sp]
   2e538:	str	r0, [r1]
   2e53c:	ldr	r0, [sp, #4]
   2e540:	ldr	r0, [r0, #8]
   2e544:	str	r0, [sp, #8]
   2e548:	b	2e570 <flatcc_builder_get_direct_buffer@@Base+0xe8>
   2e54c:	ldr	r0, [sp]
   2e550:	movw	r1, #0
   2e554:	cmp	r0, r1
   2e558:	beq	2e568 <flatcc_builder_get_direct_buffer@@Base+0xe0>
   2e55c:	ldr	r0, [sp]
   2e560:	movw	r1, #0
   2e564:	str	r1, [r0]
   2e568:	movw	r0, #0
   2e56c:	str	r0, [sp, #8]
   2e570:	ldr	r0, [sp, #8]
   2e574:	add	sp, sp, #12
   2e578:	bx	lr

0002e57c <flatcc_builder_copy_buffer@@Base>:
   2e57c:	push	{fp, lr}
   2e580:	mov	fp, sp
   2e584:	sub	sp, sp, #16
   2e588:	str	r0, [sp, #8]
   2e58c:	str	r1, [sp, #4]
   2e590:	str	r2, [sp]
   2e594:	ldr	r0, [sp, #8]
   2e598:	ldr	r0, [r0, #184]	; 0xb8
   2e59c:	cmp	r0, #0
   2e5a0:	bne	2e5b0 <flatcc_builder_copy_buffer@@Base+0x34>
   2e5a4:	movw	r0, #0
   2e5a8:	str	r0, [fp, #-4]
   2e5ac:	b	2e604 <flatcc_builder_copy_buffer@@Base+0x88>
   2e5b0:	ldr	r0, [sp, #8]
   2e5b4:	add	r0, r0, #188	; 0xbc
   2e5b8:	ldr	r1, [sp, #4]
   2e5bc:	ldr	r2, [sp]
   2e5c0:	bl	2f26c <flatcc_emitter_copy_buffer@@Base>
   2e5c4:	str	r0, [sp, #4]
   2e5c8:	ldr	r0, [sp, #4]
   2e5cc:	movw	r1, #0
   2e5d0:	cmp	r0, r1
   2e5d4:	beq	2e5dc <flatcc_builder_copy_buffer@@Base+0x60>
   2e5d8:	b	2e5fc <flatcc_builder_copy_buffer@@Base+0x80>
   2e5dc:	ldr	r0, [pc, #44]	; 2e610 <flatcc_builder_copy_buffer@@Base+0x94>
   2e5e0:	add	r0, pc, r0
   2e5e4:	ldr	r1, [pc, #40]	; 2e614 <flatcc_builder_copy_buffer@@Base+0x98>
   2e5e8:	add	r1, pc, r1
   2e5ec:	ldr	r2, [pc, #36]	; 2e618 <flatcc_builder_copy_buffer@@Base+0x9c>
   2e5f0:	add	r3, pc, r2
   2e5f4:	movw	r2, #1926	; 0x786
   2e5f8:	bl	14f08 <__assert_fail@plt>
   2e5fc:	ldr	r0, [sp, #4]
   2e600:	str	r0, [fp, #-4]
   2e604:	ldr	r0, [fp, #-4]
   2e608:	mov	sp, fp
   2e60c:	pop	{fp, pc}
   2e610:	muleq	r1, lr, pc	; <UNPREDICTABLE>
   2e614:	andeq	sl, r1, ip, asr pc
   2e618:	andeq	fp, r1, r3, asr #29

0002e61c <flatcc_builder_finalize_buffer@@Base>:
   2e61c:	push	{fp, lr}
   2e620:	mov	fp, sp
   2e624:	sub	sp, sp, #16
   2e628:	str	r0, [fp, #-4]
   2e62c:	str	r1, [sp, #8]
   2e630:	ldr	r0, [fp, #-4]
   2e634:	bl	2e2e4 <flatcc_builder_get_buffer_size@@Base>
   2e638:	str	r0, [sp]
   2e63c:	ldr	r0, [sp, #8]
   2e640:	movw	r1, #0
   2e644:	cmp	r0, r1
   2e648:	beq	2e658 <flatcc_builder_finalize_buffer@@Base+0x3c>
   2e64c:	ldr	r0, [sp]
   2e650:	ldr	r1, [sp, #8]
   2e654:	str	r0, [r1]
   2e658:	ldr	r0, [sp]
   2e65c:	bl	14e78 <malloc@plt>
   2e660:	str	r0, [sp, #4]
   2e664:	ldr	r0, [sp, #4]
   2e668:	movw	r1, #0
   2e66c:	cmp	r0, r1
   2e670:	bne	2e694 <flatcc_builder_finalize_buffer@@Base+0x78>
   2e674:	ldr	r0, [pc, #144]	; 2e70c <flatcc_builder_finalize_buffer@@Base+0xf0>
   2e678:	add	r0, pc, r0
   2e67c:	ldr	r1, [pc, #140]	; 2e710 <flatcc_builder_finalize_buffer@@Base+0xf4>
   2e680:	add	r1, pc, r1
   2e684:	ldr	r2, [pc, #136]	; 2e714 <flatcc_builder_finalize_buffer@@Base+0xf8>
   2e688:	add	r3, pc, r2
   2e68c:	movw	r2, #1944	; 0x798
   2e690:	bl	14f08 <__assert_fail@plt>
   2e694:	ldr	r0, [fp, #-4]
   2e698:	ldr	r1, [sp, #4]
   2e69c:	ldr	r2, [sp]
   2e6a0:	bl	2e57c <flatcc_builder_copy_buffer@@Base>
   2e6a4:	movw	r1, #0
   2e6a8:	cmp	r0, r1
   2e6ac:	bne	2e6d0 <flatcc_builder_finalize_buffer@@Base+0xb4>
   2e6b0:	ldr	r0, [pc, #96]	; 2e718 <flatcc_builder_finalize_buffer@@Base+0xfc>
   2e6b4:	add	r0, pc, r0
   2e6b8:	ldr	r1, [pc, #92]	; 2e71c <flatcc_builder_finalize_buffer@@Base+0x100>
   2e6bc:	add	r1, pc, r1
   2e6c0:	ldr	r2, [pc, #88]	; 2e720 <flatcc_builder_finalize_buffer@@Base+0x104>
   2e6c4:	add	r3, pc, r2
   2e6c8:	movw	r2, #1948	; 0x79c
   2e6cc:	bl	14f08 <__assert_fail@plt>
   2e6d0:	b	2e6d4 <flatcc_builder_finalize_buffer@@Base+0xb8>
   2e6d4:	ldr	r0, [sp, #4]
   2e6d8:	movw	r1, #0
   2e6dc:	cmp	r0, r1
   2e6e0:	bne	2e700 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2e6e4:	ldr	r0, [sp, #8]
   2e6e8:	movw	r1, #0
   2e6ec:	cmp	r0, r1
   2e6f0:	beq	2e700 <flatcc_builder_finalize_buffer@@Base+0xe4>
   2e6f4:	ldr	r0, [sp, #8]
   2e6f8:	movw	r1, #0
   2e6fc:	str	r1, [r0]
   2e700:	ldr	r0, [sp, #4]
   2e704:	mov	sp, fp
   2e708:	pop	{fp, pc}
   2e70c:	andeq	ip, r1, r9, lsl #1
   2e710:	andeq	sl, r1, r4, asr #29
   2e714:	andeq	fp, r1, r0, ror lr
   2e718:	andeq	ip, r1, sp, asr #32
   2e71c:	andeq	sl, r1, r8, lsl #29
   2e720:	andeq	fp, r1, r4, lsr lr

0002e724 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2e724:	push	{fp, lr}
   2e728:	mov	fp, sp
   2e72c:	sub	sp, sp, #24
   2e730:	str	r0, [fp, #-4]
   2e734:	str	r1, [fp, #-8]
   2e738:	ldr	r0, [fp, #-4]
   2e73c:	bl	2e2e4 <flatcc_builder_get_buffer_size@@Base>
   2e740:	str	r0, [sp, #4]
   2e744:	ldr	r0, [fp, #-8]
   2e748:	movw	r1, #0
   2e74c:	cmp	r0, r1
   2e750:	beq	2e760 <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   2e754:	ldr	r0, [sp, #4]
   2e758:	ldr	r1, [fp, #-8]
   2e75c:	str	r0, [r1]
   2e760:	ldr	r0, [fp, #-4]
   2e764:	bl	2e214 <flatcc_builder_get_buffer_alignment@@Base>
   2e768:	uxth	r0, r0
   2e76c:	str	r0, [sp, #8]
   2e770:	ldr	r0, [sp, #4]
   2e774:	ldr	r1, [sp, #8]
   2e778:	add	r0, r0, r1
   2e77c:	sub	r0, r0, #1
   2e780:	ldr	r1, [sp, #8]
   2e784:	sub	r1, r1, #1
   2e788:	mvn	r2, #0
   2e78c:	eor	r1, r1, r2
   2e790:	and	r0, r0, r1
   2e794:	str	r0, [sp, #4]
   2e798:	ldr	r0, [sp, #8]
   2e79c:	ldr	r1, [sp, #4]
   2e7a0:	bl	2e828 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2e7a4:	str	r0, [sp, #12]
   2e7a8:	ldr	r0, [sp, #12]
   2e7ac:	movw	r1, #0
   2e7b0:	cmp	r0, r1
   2e7b4:	bne	2e7bc <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
   2e7b8:	b	2e7f0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2e7bc:	ldr	r0, [fp, #-4]
   2e7c0:	ldr	r1, [sp, #12]
   2e7c4:	ldr	r2, [sp, #4]
   2e7c8:	bl	2e57c <flatcc_builder_copy_buffer@@Base>
   2e7cc:	movw	r1, #0
   2e7d0:	cmp	r0, r1
   2e7d4:	bne	2e7ec <flatcc_builder_finalize_aligned_buffer@@Base+0xc8>
   2e7d8:	ldr	r0, [sp, #12]
   2e7dc:	bl	14e24 <free@plt>
   2e7e0:	movw	r0, #0
   2e7e4:	str	r0, [sp, #12]
   2e7e8:	b	2e7f0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2e7ec:	b	2e7f0 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   2e7f0:	ldr	r0, [sp, #12]
   2e7f4:	movw	r1, #0
   2e7f8:	cmp	r0, r1
   2e7fc:	bne	2e81c <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2e800:	ldr	r0, [fp, #-8]
   2e804:	movw	r1, #0
   2e808:	cmp	r0, r1
   2e80c:	beq	2e81c <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   2e810:	ldr	r0, [fp, #-8]
   2e814:	movw	r1, #0
   2e818:	str	r1, [r0]
   2e81c:	ldr	r0, [sp, #12]
   2e820:	mov	sp, fp
   2e824:	pop	{fp, pc}
   2e828:	push	{fp, lr}
   2e82c:	mov	fp, sp
   2e830:	sub	sp, sp, #16
   2e834:	str	r0, [fp, #-4]
   2e838:	str	r1, [sp, #8]
   2e83c:	movw	r0, #0
   2e840:	str	r0, [sp]
   2e844:	ldr	r0, [fp, #-4]
   2e848:	cmp	r0, #4
   2e84c:	bcs	2e858 <flatcc_builder_finalize_aligned_buffer@@Base+0x134>
   2e850:	movw	r0, #4
   2e854:	str	r0, [fp, #-4]
   2e858:	ldr	r1, [fp, #-4]
   2e85c:	ldr	r2, [sp, #8]
   2e860:	mov	r0, sp
   2e864:	bl	14eb4 <posix_memalign@plt>
   2e868:	str	r0, [sp, #4]
   2e86c:	ldr	r0, [sp, #4]
   2e870:	cmp	r0, #0
   2e874:	beq	2e898 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2e878:	ldr	r0, [sp]
   2e87c:	movw	r1, #0
   2e880:	cmp	r0, r1
   2e884:	beq	2e898 <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2e888:	ldr	r0, [sp]
   2e88c:	bl	14e24 <free@plt>
   2e890:	movw	r0, #0
   2e894:	str	r0, [sp]
   2e898:	ldr	r0, [sp]
   2e89c:	mov	sp, fp
   2e8a0:	pop	{fp, pc}

0002e8a4 <flatcc_builder_aligned_alloc@@Base>:
   2e8a4:	push	{fp, lr}
   2e8a8:	mov	fp, sp
   2e8ac:	sub	sp, sp, #8
   2e8b0:	str	r0, [sp, #4]
   2e8b4:	str	r1, [sp]
   2e8b8:	ldr	r0, [sp, #4]
   2e8bc:	ldr	r1, [sp]
   2e8c0:	bl	2e828 <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   2e8c4:	mov	sp, fp
   2e8c8:	pop	{fp, pc}

0002e8cc <flatcc_builder_aligned_free@@Base>:
   2e8cc:	push	{fp, lr}
   2e8d0:	mov	fp, sp
   2e8d4:	sub	sp, sp, #8
   2e8d8:	str	r0, [sp, #4]
   2e8dc:	ldr	r0, [sp, #4]
   2e8e0:	bl	14e24 <free@plt>
   2e8e4:	mov	sp, fp
   2e8e8:	pop	{fp, pc}

0002e8ec <flatcc_builder_get_emit_context@@Base>:
   2e8ec:	sub	sp, sp, #4
   2e8f0:	str	r0, [sp]
   2e8f4:	ldr	r0, [sp]
   2e8f8:	ldr	r0, [r0, #36]	; 0x24
   2e8fc:	add	sp, sp, #4
   2e900:	bx	lr
   2e904:	sub	sp, sp, #8
   2e908:	str	r0, [sp, #4]
   2e90c:	strh	r1, [sp, #2]
   2e910:	ldr	r0, [sp, #4]
   2e914:	ldr	r0, [r0, #140]	; 0x8c
   2e918:	ldrh	r1, [sp, #2]
   2e91c:	sub	r1, r1, #1
   2e920:	and	r0, r0, r1
   2e924:	add	sp, sp, #8
   2e928:	bx	lr
   2e92c:	push	{fp, lr}
   2e930:	mov	fp, sp
   2e934:	sub	sp, sp, #32
   2e938:	str	r0, [fp, #-8]
   2e93c:	str	r1, [fp, #-12]
   2e940:	str	r2, [sp, #16]
   2e944:	ldr	r0, [fp, #-8]
   2e948:	add	r0, r0, #52	; 0x34
   2e94c:	add	r0, r0, #8
   2e950:	str	r0, [sp, #12]
   2e954:	ldr	r0, [fp, #-8]
   2e958:	ldr	r0, [r0, #48]	; 0x30
   2e95c:	ldr	r1, [fp, #-8]
   2e960:	ldr	r1, [r1, #40]	; 0x28
   2e964:	ldr	r2, [sp, #12]
   2e968:	ldr	r3, [fp, #-8]
   2e96c:	ldr	r3, [r3, #28]
   2e970:	ldr	ip, [fp, #-12]
   2e974:	add	r3, r3, ip
   2e978:	str	r0, [sp, #8]
   2e97c:	mov	r0, r1
   2e980:	mov	r1, r2
   2e984:	mov	r2, r3
   2e988:	movw	r3, #1
   2e98c:	str	r3, [sp, #4]
   2e990:	ldr	ip, [sp, #4]
   2e994:	str	ip, [sp]
   2e998:	ldr	lr, [sp, #8]
   2e99c:	blx	lr
   2e9a0:	cmp	r0, #0
   2e9a4:	beq	2e9b4 <flatcc_builder_get_emit_context@@Base+0xc8>
   2e9a8:	mvn	r0, #0
   2e9ac:	str	r0, [fp, #-4]
   2e9b0:	b	2e9c8 <flatcc_builder_get_emit_context@@Base+0xdc>
   2e9b4:	ldr	r0, [fp, #-8]
   2e9b8:	ldr	r1, [sp, #16]
   2e9bc:	bl	2a744 <flatcc_builder_start_struct@@Base+0x70>
   2e9c0:	movw	r0, #0
   2e9c4:	str	r0, [fp, #-4]
   2e9c8:	ldr	r0, [fp, #-4]
   2e9cc:	mov	sp, fp
   2e9d0:	pop	{fp, pc}
   2e9d4:	push	{fp, lr}
   2e9d8:	mov	fp, sp
   2e9dc:	sub	sp, sp, #32
   2e9e0:	str	r0, [fp, #-8]
   2e9e4:	ldr	r0, [fp, #-8]
   2e9e8:	add	r0, r0, #52	; 0x34
   2e9ec:	add	r0, r0, #40	; 0x28
   2e9f0:	str	r0, [fp, #-12]
   2e9f4:	ldr	r0, [fp, #-8]
   2e9f8:	ldr	r0, [r0, #124]	; 0x7c
   2e9fc:	cmp	r0, #0
   2ea00:	bne	2ea08 <flatcc_builder_get_emit_context@@Base+0x11c>
   2ea04:	b	2ea28 <flatcc_builder_get_emit_context@@Base+0x13c>
   2ea08:	ldr	r0, [pc, #320]	; 2eb50 <flatcc_builder_get_emit_context@@Base+0x264>
   2ea0c:	add	r0, pc, r0
   2ea10:	ldr	r1, [pc, #316]	; 2eb54 <flatcc_builder_get_emit_context@@Base+0x268>
   2ea14:	add	r1, pc, r1
   2ea18:	ldr	r2, [pc, #312]	; 2eb58 <flatcc_builder_get_emit_context@@Base+0x26c>
   2ea1c:	add	r3, pc, r2
   2ea20:	movw	r2, #342	; 0x156
   2ea24:	bl	14f08 <__assert_fail@plt>
   2ea28:	ldr	r0, [fp, #-8]
   2ea2c:	ldr	r1, [fp, #-8]
   2ea30:	ldr	r2, [r1, #124]	; 0x7c
   2ea34:	movw	r1, #6
   2ea38:	movw	r3, #16
   2ea3c:	movw	ip, #0
   2ea40:	str	ip, [sp]
   2ea44:	bl	2947c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2ea48:	movw	r1, #0
   2ea4c:	cmp	r0, r1
   2ea50:	bne	2ea60 <flatcc_builder_get_emit_context@@Base+0x174>
   2ea54:	mvn	r0, #0
   2ea58:	str	r0, [fp, #-4]
   2ea5c:	b	2eb44 <flatcc_builder_get_emit_context@@Base+0x258>
   2ea60:	ldr	r0, [fp, #-8]
   2ea64:	movw	r1, #16
   2ea68:	str	r1, [r0, #124]	; 0x7c
   2ea6c:	movw	r0, #256	; 0x100
   2ea70:	str	r0, [sp, #16]
   2ea74:	ldr	r0, [fp, #-8]
   2ea78:	ldr	r0, [r0, #48]	; 0x30
   2ea7c:	ldr	r1, [fp, #-8]
   2ea80:	ldr	r1, [r1, #40]	; 0x28
   2ea84:	ldr	r2, [fp, #-12]
   2ea88:	ldr	r3, [sp, #16]
   2ea8c:	str	r0, [sp, #8]
   2ea90:	mov	r0, r1
   2ea94:	mov	r1, r2
   2ea98:	mov	r2, r3
   2ea9c:	movw	r3, #1
   2eaa0:	movw	ip, #5
   2eaa4:	str	ip, [sp]
   2eaa8:	ldr	ip, [sp, #8]
   2eaac:	blx	ip
   2eab0:	cmp	r0, #0
   2eab4:	beq	2eac4 <flatcc_builder_get_emit_context@@Base+0x1d8>
   2eab8:	mvn	r0, #0
   2eabc:	str	r0, [fp, #-4]
   2eac0:	b	2eb44 <flatcc_builder_get_emit_context@@Base+0x258>
   2eac4:	b	2eac8 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2eac8:	ldr	r0, [sp, #16]
   2eacc:	lsl	r0, r0, #1
   2ead0:	ldr	r1, [fp, #-12]
   2ead4:	ldr	r1, [r1, #4]
   2ead8:	cmp	r0, r1
   2eadc:	bhi	2eaf0 <flatcc_builder_get_emit_context@@Base+0x204>
   2eae0:	ldr	r0, [sp, #16]
   2eae4:	lsl	r0, r0, #1
   2eae8:	str	r0, [sp, #16]
   2eaec:	b	2eac8 <flatcc_builder_get_emit_context@@Base+0x1dc>
   2eaf0:	ldr	r0, [sp, #16]
   2eaf4:	lsr	r0, r0, #2
   2eaf8:	str	r0, [sp, #16]
   2eafc:	movw	r0, #0
   2eb00:	str	r0, [sp, #12]
   2eb04:	ldr	r0, [sp, #12]
   2eb08:	movw	r1, #1
   2eb0c:	lsl	r0, r1, r0
   2eb10:	ldr	r1, [sp, #16]
   2eb14:	cmp	r0, r1
   2eb18:	bcs	2eb30 <flatcc_builder_get_emit_context@@Base+0x244>
   2eb1c:	b	2eb20 <flatcc_builder_get_emit_context@@Base+0x234>
   2eb20:	ldr	r0, [sp, #12]
   2eb24:	add	r0, r0, #1
   2eb28:	str	r0, [sp, #12]
   2eb2c:	b	2eb04 <flatcc_builder_get_emit_context@@Base+0x218>
   2eb30:	ldr	r0, [sp, #12]
   2eb34:	ldr	r1, [fp, #-8]
   2eb38:	str	r0, [r1, #116]	; 0x74
   2eb3c:	movw	r0, #0
   2eb40:	str	r0, [fp, #-4]
   2eb44:	ldr	r0, [fp, #-4]
   2eb48:	mov	sp, fp
   2eb4c:	pop	{fp, pc}
   2eb50:			; <UNDEFINED> instruction: 0x0001bcb9
   2eb54:	andeq	sl, r1, r0, lsr fp
   2eb58:			; <UNDEFINED> instruction: 0x0001bcb8

0002eb5c <flatcc_emitter_recycle_page@@Base>:
   2eb5c:	sub	sp, sp, #12
   2eb60:	str	r0, [sp, #4]
   2eb64:	str	r1, [sp]
   2eb68:	ldr	r0, [sp]
   2eb6c:	ldr	r1, [sp, #4]
   2eb70:	ldr	r1, [r1]
   2eb74:	cmp	r0, r1
   2eb78:	beq	2eb90 <flatcc_emitter_recycle_page@@Base+0x34>
   2eb7c:	ldr	r0, [sp]
   2eb80:	ldr	r1, [sp, #4]
   2eb84:	ldr	r1, [r1, #4]
   2eb88:	cmp	r0, r1
   2eb8c:	bne	2eb9c <flatcc_emitter_recycle_page@@Base+0x40>
   2eb90:	mvn	r0, #0
   2eb94:	str	r0, [sp, #8]
   2eb98:	b	2ec10 <flatcc_emitter_recycle_page@@Base+0xb4>
   2eb9c:	ldr	r0, [sp]
   2eba0:	ldr	r0, [r0, #2948]	; 0xb84
   2eba4:	ldr	r1, [sp]
   2eba8:	ldr	r1, [r1, #2944]	; 0xb80
   2ebac:	str	r0, [r1, #2948]	; 0xb84
   2ebb0:	ldr	r0, [sp]
   2ebb4:	ldr	r0, [r0, #2944]	; 0xb80
   2ebb8:	ldr	r1, [sp]
   2ebbc:	ldr	r1, [r1, #2948]	; 0xb84
   2ebc0:	str	r0, [r1, #2944]	; 0xb80
   2ebc4:	ldr	r0, [sp, #4]
   2ebc8:	ldr	r0, [r0]
   2ebcc:	ldr	r0, [r0, #2948]	; 0xb84
   2ebd0:	ldr	r1, [sp]
   2ebd4:	str	r0, [r1, #2948]	; 0xb84
   2ebd8:	ldr	r0, [sp, #4]
   2ebdc:	ldr	r0, [r0]
   2ebe0:	ldr	r1, [sp]
   2ebe4:	str	r0, [r1, #2944]	; 0xb80
   2ebe8:	ldr	r0, [sp]
   2ebec:	ldr	r1, [sp]
   2ebf0:	ldr	r1, [r1, #2948]	; 0xb84
   2ebf4:	str	r0, [r1, #2944]	; 0xb80
   2ebf8:	ldr	r0, [sp]
   2ebfc:	ldr	r1, [sp]
   2ec00:	ldr	r1, [r1, #2944]	; 0xb80
   2ec04:	str	r0, [r1, #2948]	; 0xb84
   2ec08:	movw	r0, #0
   2ec0c:	str	r0, [sp, #8]
   2ec10:	ldr	r0, [sp, #8]
   2ec14:	add	sp, sp, #12
   2ec18:	bx	lr

0002ec1c <flatcc_emitter_reset@@Base>:
   2ec1c:	push	{fp, lr}
   2ec20:	mov	fp, sp
   2ec24:	sub	sp, sp, #16
   2ec28:	str	r0, [fp, #-4]
   2ec2c:	ldr	r0, [fp, #-4]
   2ec30:	ldr	r0, [r0]
   2ec34:	str	r0, [sp, #8]
   2ec38:	ldr	r0, [fp, #-4]
   2ec3c:	ldr	r0, [r0]
   2ec40:	movw	r1, #0
   2ec44:	cmp	r0, r1
   2ec48:	bne	2ec50 <flatcc_emitter_reset@@Base+0x34>
   2ec4c:	b	2edac <flatcc_emitter_reset@@Base+0x190>
   2ec50:	ldr	r0, [fp, #-4]
   2ec54:	ldr	r0, [r0]
   2ec58:	ldr	r1, [fp, #-4]
   2ec5c:	str	r0, [r1, #4]
   2ec60:	ldr	r0, [fp, #-4]
   2ec64:	ldr	r0, [r0]
   2ec68:	add	r0, r0, #1472	; 0x5c0
   2ec6c:	ldr	r1, [fp, #-4]
   2ec70:	str	r0, [r1, #8]
   2ec74:	ldr	r0, [fp, #-4]
   2ec78:	ldr	r0, [r0, #8]
   2ec7c:	ldr	r1, [fp, #-4]
   2ec80:	str	r0, [r1, #16]
   2ec84:	ldr	r0, [fp, #-4]
   2ec88:	movw	r1, #1472	; 0x5c0
   2ec8c:	str	r1, [r0, #12]
   2ec90:	ldr	r0, [fp, #-4]
   2ec94:	str	r1, [r0, #20]
   2ec98:	ldr	r0, [fp, #-4]
   2ec9c:	ldr	r0, [r0, #12]
   2eca0:	movw	r1, #0
   2eca4:	sub	r0, r1, r0
   2eca8:	ldr	r1, [fp, #-4]
   2ecac:	ldr	r1, [r1]
   2ecb0:	str	r0, [r1, #2952]	; 0xb88
   2ecb4:	ldr	r0, [fp, #-4]
   2ecb8:	ldr	r0, [r0, #32]
   2ecbc:	cmp	r0, #0
   2ecc0:	bne	2ecd4 <flatcc_emitter_reset@@Base+0xb8>
   2ecc4:	ldr	r0, [fp, #-4]
   2ecc8:	ldr	r0, [r0, #24]
   2eccc:	ldr	r1, [fp, #-4]
   2ecd0:	str	r0, [r1, #32]
   2ecd4:	ldr	r0, [fp, #-4]
   2ecd8:	ldr	r1, [r0, #24]
   2ecdc:	ldr	r0, [r0, #32]
   2ece0:	add	r0, r0, r0, lsl #1
   2ece4:	lsr	r0, r0, #2
   2ece8:	lsr	r1, r1, #2
   2ecec:	add	r0, r0, r1
   2ecf0:	ldr	r1, [fp, #-4]
   2ecf4:	str	r0, [r1, #32]
   2ecf8:	ldr	r0, [fp, #-4]
   2ecfc:	movw	r1, #0
   2ed00:	str	r1, [r0, #24]
   2ed04:	ldr	r0, [fp, #-4]
   2ed08:	ldr	r0, [r0, #32]
   2ed0c:	lsl	r0, r0, #1
   2ed10:	ldr	r1, [fp, #-4]
   2ed14:	ldr	r1, [r1, #28]
   2ed18:	cmp	r0, r1
   2ed1c:	movw	r0, #0
   2ed20:	str	r0, [sp, #4]
   2ed24:	bcs	2ed4c <flatcc_emitter_reset@@Base+0x130>
   2ed28:	ldr	r0, [fp, #-4]
   2ed2c:	ldr	r0, [r0, #4]
   2ed30:	ldr	r0, [r0, #2944]	; 0xb80
   2ed34:	ldr	r1, [fp, #-4]
   2ed38:	ldr	r1, [r1]
   2ed3c:	cmp	r0, r1
   2ed40:	movw	r0, #0
   2ed44:	movne	r0, #1
   2ed48:	str	r0, [sp, #4]
   2ed4c:	ldr	r0, [sp, #4]
   2ed50:	tst	r0, #1
   2ed54:	beq	2edac <flatcc_emitter_reset@@Base+0x190>
   2ed58:	ldr	r0, [fp, #-4]
   2ed5c:	ldr	r0, [r0, #4]
   2ed60:	ldr	r0, [r0, #2944]	; 0xb80
   2ed64:	str	r0, [sp, #8]
   2ed68:	ldr	r0, [sp, #8]
   2ed6c:	ldr	r0, [r0, #2944]	; 0xb80
   2ed70:	ldr	r1, [fp, #-4]
   2ed74:	ldr	r1, [r1, #4]
   2ed78:	str	r0, [r1, #2944]	; 0xb80
   2ed7c:	ldr	r0, [fp, #-4]
   2ed80:	ldr	r0, [r0, #4]
   2ed84:	ldr	r1, [sp, #8]
   2ed88:	ldr	r1, [r1, #2944]	; 0xb80
   2ed8c:	str	r0, [r1, #2948]	; 0xb84
   2ed90:	ldr	r0, [sp, #8]
   2ed94:	bl	14e24 <free@plt>
   2ed98:	ldr	r0, [fp, #-4]
   2ed9c:	ldr	r1, [r0, #28]
   2eda0:	sub	r1, r1, #2944	; 0xb80
   2eda4:	str	r1, [r0, #28]
   2eda8:	b	2ed04 <flatcc_emitter_reset@@Base+0xe8>
   2edac:	mov	sp, fp
   2edb0:	pop	{fp, pc}

0002edb4 <flatcc_emitter_clear@@Base>:
   2edb4:	push	{fp, lr}
   2edb8:	mov	fp, sp
   2edbc:	sub	sp, sp, #8
   2edc0:	str	r0, [sp, #4]
   2edc4:	ldr	r0, [sp, #4]
   2edc8:	ldr	r0, [r0]
   2edcc:	str	r0, [sp]
   2edd0:	ldr	r0, [sp]
   2edd4:	movw	r1, #0
   2edd8:	cmp	r0, r1
   2eddc:	bne	2ede4 <flatcc_emitter_clear@@Base+0x30>
   2ede0:	b	2ee40 <flatcc_emitter_clear@@Base+0x8c>
   2ede4:	ldr	r0, [sp]
   2ede8:	ldr	r0, [r0, #2948]	; 0xb84
   2edec:	movw	r1, #0
   2edf0:	str	r1, [r0, #2944]	; 0xb80
   2edf4:	ldr	r0, [sp]
   2edf8:	ldr	r0, [r0, #2944]	; 0xb80
   2edfc:	movw	r1, #0
   2ee00:	cmp	r0, r1
   2ee04:	beq	2ee24 <flatcc_emitter_clear@@Base+0x70>
   2ee08:	ldr	r0, [sp]
   2ee0c:	ldr	r0, [r0, #2944]	; 0xb80
   2ee10:	str	r0, [sp]
   2ee14:	ldr	r0, [sp]
   2ee18:	ldr	r0, [r0, #2948]	; 0xb84
   2ee1c:	bl	14e24 <free@plt>
   2ee20:	b	2edf4 <flatcc_emitter_clear@@Base+0x40>
   2ee24:	ldr	r0, [sp]
   2ee28:	bl	14e24 <free@plt>
   2ee2c:	ldr	r0, [sp, #4]
   2ee30:	movw	r1, #0
   2ee34:	and	r1, r1, #255	; 0xff
   2ee38:	movw	r2, #36	; 0x24
   2ee3c:	bl	14ec0 <memset@plt>
   2ee40:	mov	sp, fp
   2ee44:	pop	{fp, pc}

0002ee48 <flatcc_emitter@@Base>:
   2ee48:	push	{fp, lr}
   2ee4c:	mov	fp, sp
   2ee50:	sub	sp, sp, #32
   2ee54:	ldr	ip, [fp, #8]
   2ee58:	str	r0, [fp, #-8]
   2ee5c:	str	r1, [fp, #-12]
   2ee60:	str	r2, [sp, #16]
   2ee64:	str	r3, [sp, #12]
   2ee68:	ldr	r0, [fp, #-8]
   2ee6c:	str	r0, [sp, #8]
   2ee70:	ldr	r0, [fp, #8]
   2ee74:	ldr	r1, [sp, #8]
   2ee78:	ldr	r2, [r1, #24]
   2ee7c:	add	r0, r2, r0
   2ee80:	str	r0, [r1, #24]
   2ee84:	ldr	r0, [sp, #12]
   2ee88:	cmp	r0, #0
   2ee8c:	bge	2ef50 <flatcc_emitter@@Base+0x108>
   2ee90:	ldr	r0, [fp, #8]
   2ee94:	ldr	r1, [sp, #8]
   2ee98:	ldr	r1, [r1, #12]
   2ee9c:	cmp	r0, r1
   2eea0:	bhi	2eee4 <flatcc_emitter@@Base+0x9c>
   2eea4:	ldr	r0, [fp, #8]
   2eea8:	ldr	r1, [sp, #8]
   2eeac:	ldr	r2, [r1, #8]
   2eeb0:	movw	r3, #0
   2eeb4:	sub	r0, r3, r0
   2eeb8:	add	r0, r2, r0
   2eebc:	str	r0, [r1, #8]
   2eec0:	ldr	r0, [fp, #8]
   2eec4:	ldr	r1, [sp, #8]
   2eec8:	ldr	r2, [r1, #12]
   2eecc:	sub	r0, r2, r0
   2eed0:	str	r0, [r1, #12]
   2eed4:	ldr	r0, [sp, #8]
   2eed8:	ldr	r0, [r0, #8]
   2eedc:	str	r0, [sp, #4]
   2eee0:	b	2f004 <flatcc_emitter@@Base+0x1bc>
   2eee4:	ldr	r0, [sp, #16]
   2eee8:	ldr	r1, [fp, #-12]
   2eeec:	add	r0, r1, r0, lsl #3
   2eef0:	str	r0, [fp, #-12]
   2eef4:	ldr	r0, [sp, #16]
   2eef8:	mvn	r1, #0
   2eefc:	add	r1, r0, r1
   2ef00:	str	r1, [sp, #16]
   2ef04:	cmp	r0, #0
   2ef08:	beq	2ef4c <flatcc_emitter@@Base+0x104>
   2ef0c:	ldr	r0, [fp, #-12]
   2ef10:	mvn	r1, #7
   2ef14:	add	r0, r0, r1
   2ef18:	str	r0, [fp, #-12]
   2ef1c:	ldr	r0, [sp, #8]
   2ef20:	ldr	r1, [fp, #-12]
   2ef24:	ldr	r1, [r1]
   2ef28:	ldr	r2, [fp, #-12]
   2ef2c:	ldr	r2, [r2, #4]
   2ef30:	bl	2f070 <flatcc_emitter@@Base+0x228>
   2ef34:	cmp	r0, #0
   2ef38:	beq	2ef48 <flatcc_emitter@@Base+0x100>
   2ef3c:	mvn	r0, #0
   2ef40:	str	r0, [fp, #-4]
   2ef44:	b	2f064 <flatcc_emitter@@Base+0x21c>
   2ef48:	b	2eef4 <flatcc_emitter@@Base+0xac>
   2ef4c:	b	2eff8 <flatcc_emitter@@Base+0x1b0>
   2ef50:	ldr	r0, [fp, #8]
   2ef54:	ldr	r1, [sp, #8]
   2ef58:	ldr	r1, [r1, #20]
   2ef5c:	cmp	r0, r1
   2ef60:	bhi	2ef9c <flatcc_emitter@@Base+0x154>
   2ef64:	ldr	r0, [sp, #8]
   2ef68:	ldr	r0, [r0, #16]
   2ef6c:	str	r0, [sp, #4]
   2ef70:	ldr	r0, [fp, #8]
   2ef74:	ldr	r1, [sp, #8]
   2ef78:	ldr	r2, [r1, #16]
   2ef7c:	add	r0, r2, r0
   2ef80:	str	r0, [r1, #16]
   2ef84:	ldr	r0, [fp, #8]
   2ef88:	ldr	r1, [sp, #8]
   2ef8c:	ldr	r2, [r1, #20]
   2ef90:	sub	r0, r2, r0
   2ef94:	str	r0, [r1, #20]
   2ef98:	b	2f004 <flatcc_emitter@@Base+0x1bc>
   2ef9c:	b	2efa0 <flatcc_emitter@@Base+0x158>
   2efa0:	ldr	r0, [sp, #16]
   2efa4:	mvn	r1, #0
   2efa8:	add	r1, r0, r1
   2efac:	str	r1, [sp, #16]
   2efb0:	cmp	r0, #0
   2efb4:	beq	2eff4 <flatcc_emitter@@Base+0x1ac>
   2efb8:	ldr	r0, [sp, #8]
   2efbc:	ldr	r1, [fp, #-12]
   2efc0:	ldr	r1, [r1]
   2efc4:	ldr	r2, [fp, #-12]
   2efc8:	ldr	r2, [r2, #4]
   2efcc:	bl	2f17c <flatcc_emitter@@Base+0x334>
   2efd0:	cmp	r0, #0
   2efd4:	beq	2efe4 <flatcc_emitter@@Base+0x19c>
   2efd8:	mvn	r0, #0
   2efdc:	str	r0, [fp, #-4]
   2efe0:	b	2f064 <flatcc_emitter@@Base+0x21c>
   2efe4:	ldr	r0, [fp, #-12]
   2efe8:	add	r0, r0, #8
   2efec:	str	r0, [fp, #-12]
   2eff0:	b	2efa0 <flatcc_emitter@@Base+0x158>
   2eff4:	b	2eff8 <flatcc_emitter@@Base+0x1b0>
   2eff8:	movw	r0, #0
   2effc:	str	r0, [fp, #-4]
   2f000:	b	2f064 <flatcc_emitter@@Base+0x21c>
   2f004:	b	2f008 <flatcc_emitter@@Base+0x1c0>
   2f008:	ldr	r0, [sp, #16]
   2f00c:	mvn	r1, #0
   2f010:	add	r1, r0, r1
   2f014:	str	r1, [sp, #16]
   2f018:	cmp	r0, #0
   2f01c:	beq	2f05c <flatcc_emitter@@Base+0x214>
   2f020:	ldr	r0, [sp, #4]
   2f024:	ldr	r1, [fp, #-12]
   2f028:	ldr	r1, [r1]
   2f02c:	ldr	r2, [fp, #-12]
   2f030:	ldr	r2, [r2, #4]
   2f034:	bl	14e30 <memcpy@plt>
   2f038:	ldr	r0, [fp, #-12]
   2f03c:	ldr	r0, [r0, #4]
   2f040:	ldr	r1, [sp, #4]
   2f044:	add	r0, r1, r0
   2f048:	str	r0, [sp, #4]
   2f04c:	ldr	r0, [fp, #-12]
   2f050:	add	r0, r0, #8
   2f054:	str	r0, [fp, #-12]
   2f058:	b	2f008 <flatcc_emitter@@Base+0x1c0>
   2f05c:	movw	r0, #0
   2f060:	str	r0, [fp, #-4]
   2f064:	ldr	r0, [fp, #-4]
   2f068:	mov	sp, fp
   2f06c:	pop	{fp, pc}
   2f070:	push	{fp, lr}
   2f074:	mov	fp, sp
   2f078:	sub	sp, sp, #24
   2f07c:	str	r0, [fp, #-8]
   2f080:	str	r1, [sp, #12]
   2f084:	str	r2, [sp, #8]
   2f088:	ldr	r0, [sp, #8]
   2f08c:	ldr	r1, [sp, #12]
   2f090:	add	r0, r1, r0
   2f094:	str	r0, [sp, #12]
   2f098:	ldr	r0, [sp, #8]
   2f09c:	cmp	r0, #0
   2f0a0:	beq	2f168 <flatcc_emitter@@Base+0x320>
   2f0a4:	ldr	r0, [sp, #8]
   2f0a8:	str	r0, [sp, #4]
   2f0ac:	ldr	r0, [sp, #4]
   2f0b0:	ldr	r1, [fp, #-8]
   2f0b4:	ldr	r1, [r1, #12]
   2f0b8:	cmp	r0, r1
   2f0bc:	bls	2f0fc <flatcc_emitter@@Base+0x2b4>
   2f0c0:	ldr	r0, [fp, #-8]
   2f0c4:	ldr	r0, [r0, #12]
   2f0c8:	str	r0, [sp, #4]
   2f0cc:	ldr	r0, [sp, #4]
   2f0d0:	cmp	r0, #0
   2f0d4:	bne	2f0f8 <flatcc_emitter@@Base+0x2b0>
   2f0d8:	ldr	r0, [fp, #-8]
   2f0dc:	bl	2f3b8 <flatcc_emitter_copy_buffer@@Base+0x14c>
   2f0e0:	cmp	r0, #0
   2f0e4:	beq	2f0f4 <flatcc_emitter@@Base+0x2ac>
   2f0e8:	mvn	r0, #0
   2f0ec:	str	r0, [fp, #-4]
   2f0f0:	b	2f170 <flatcc_emitter@@Base+0x328>
   2f0f4:	b	2f098 <flatcc_emitter@@Base+0x250>
   2f0f8:	b	2f0fc <flatcc_emitter@@Base+0x2b4>
   2f0fc:	ldr	r0, [sp, #4]
   2f100:	ldr	r1, [fp, #-8]
   2f104:	ldr	r2, [r1, #8]
   2f108:	movw	r3, #0
   2f10c:	sub	r0, r3, r0
   2f110:	add	r0, r2, r0
   2f114:	str	r0, [r1, #8]
   2f118:	ldr	r0, [sp, #4]
   2f11c:	ldr	r1, [fp, #-8]
   2f120:	ldr	r2, [r1, #12]
   2f124:	sub	r0, r2, r0
   2f128:	str	r0, [r1, #12]
   2f12c:	ldr	r0, [sp, #4]
   2f130:	ldr	r1, [sp, #12]
   2f134:	sub	r0, r3, r0
   2f138:	add	r0, r1, r0
   2f13c:	str	r0, [sp, #12]
   2f140:	ldr	r0, [sp, #4]
   2f144:	ldr	r1, [sp, #8]
   2f148:	sub	r0, r1, r0
   2f14c:	str	r0, [sp, #8]
   2f150:	ldr	r0, [fp, #-8]
   2f154:	ldr	r0, [r0, #8]
   2f158:	ldr	r1, [sp, #12]
   2f15c:	ldr	r2, [sp, #4]
   2f160:	bl	14e30 <memcpy@plt>
   2f164:	b	2f098 <flatcc_emitter@@Base+0x250>
   2f168:	movw	r0, #0
   2f16c:	str	r0, [fp, #-4]
   2f170:	ldr	r0, [fp, #-4]
   2f174:	mov	sp, fp
   2f178:	pop	{fp, pc}
   2f17c:	push	{fp, lr}
   2f180:	mov	fp, sp
   2f184:	sub	sp, sp, #24
   2f188:	str	r0, [fp, #-8]
   2f18c:	str	r1, [sp, #12]
   2f190:	str	r2, [sp, #8]
   2f194:	ldr	r0, [sp, #8]
   2f198:	cmp	r0, #0
   2f19c:	beq	2f258 <flatcc_emitter@@Base+0x410>
   2f1a0:	ldr	r0, [sp, #8]
   2f1a4:	str	r0, [sp, #4]
   2f1a8:	ldr	r0, [sp, #4]
   2f1ac:	ldr	r1, [fp, #-8]
   2f1b0:	ldr	r1, [r1, #20]
   2f1b4:	cmp	r0, r1
   2f1b8:	bls	2f1f8 <flatcc_emitter@@Base+0x3b0>
   2f1bc:	ldr	r0, [fp, #-8]
   2f1c0:	ldr	r0, [r0, #20]
   2f1c4:	str	r0, [sp, #4]
   2f1c8:	ldr	r0, [sp, #4]
   2f1cc:	cmp	r0, #0
   2f1d0:	bne	2f1f4 <flatcc_emitter@@Base+0x3ac>
   2f1d4:	ldr	r0, [fp, #-8]
   2f1d8:	bl	2f5b8 <flatcc_emitter_copy_buffer@@Base+0x34c>
   2f1dc:	cmp	r0, #0
   2f1e0:	beq	2f1f0 <flatcc_emitter@@Base+0x3a8>
   2f1e4:	mvn	r0, #0
   2f1e8:	str	r0, [fp, #-4]
   2f1ec:	b	2f260 <flatcc_emitter@@Base+0x418>
   2f1f0:	b	2f194 <flatcc_emitter@@Base+0x34c>
   2f1f4:	b	2f1f8 <flatcc_emitter@@Base+0x3b0>
   2f1f8:	ldr	r0, [fp, #-8]
   2f1fc:	ldr	r0, [r0, #16]
   2f200:	ldr	r1, [sp, #12]
   2f204:	ldr	r2, [sp, #4]
   2f208:	bl	14e30 <memcpy@plt>
   2f20c:	ldr	r0, [sp, #4]
   2f210:	ldr	r1, [sp, #8]
   2f214:	sub	r0, r1, r0
   2f218:	str	r0, [sp, #8]
   2f21c:	ldr	r0, [sp, #4]
   2f220:	ldr	r1, [sp, #12]
   2f224:	add	r0, r1, r0
   2f228:	str	r0, [sp, #12]
   2f22c:	ldr	r0, [sp, #4]
   2f230:	ldr	r1, [fp, #-8]
   2f234:	ldr	r2, [r1, #16]
   2f238:	add	r0, r2, r0
   2f23c:	str	r0, [r1, #16]
   2f240:	ldr	r0, [sp, #4]
   2f244:	ldr	r1, [fp, #-8]
   2f248:	ldr	r2, [r1, #20]
   2f24c:	sub	r0, r2, r0
   2f250:	str	r0, [r1, #20]
   2f254:	b	2f194 <flatcc_emitter@@Base+0x34c>
   2f258:	movw	r0, #0
   2f25c:	str	r0, [fp, #-4]
   2f260:	ldr	r0, [fp, #-4]
   2f264:	mov	sp, fp
   2f268:	pop	{fp, pc}

0002f26c <flatcc_emitter_copy_buffer@@Base>:
   2f26c:	push	{fp, lr}
   2f270:	mov	fp, sp
   2f274:	sub	sp, sp, #24
   2f278:	str	r0, [fp, #-8]
   2f27c:	str	r1, [sp, #12]
   2f280:	str	r2, [sp, #8]
   2f284:	ldr	r0, [sp, #8]
   2f288:	ldr	r1, [fp, #-8]
   2f28c:	ldr	r1, [r1, #24]
   2f290:	cmp	r0, r1
   2f294:	bcs	2f2a4 <flatcc_emitter_copy_buffer@@Base+0x38>
   2f298:	movw	r0, #0
   2f29c:	str	r0, [fp, #-4]
   2f2a0:	b	2f3ac <flatcc_emitter_copy_buffer@@Base+0x140>
   2f2a4:	ldr	r0, [fp, #-8]
   2f2a8:	ldr	r0, [r0]
   2f2ac:	movw	r1, #0
   2f2b0:	cmp	r0, r1
   2f2b4:	bne	2f2c4 <flatcc_emitter_copy_buffer@@Base+0x58>
   2f2b8:	movw	r0, #0
   2f2bc:	str	r0, [fp, #-4]
   2f2c0:	b	2f3ac <flatcc_emitter_copy_buffer@@Base+0x140>
   2f2c4:	ldr	r0, [fp, #-8]
   2f2c8:	ldr	r0, [r0]
   2f2cc:	ldr	r1, [fp, #-8]
   2f2d0:	ldr	r1, [r1, #4]
   2f2d4:	cmp	r0, r1
   2f2d8:	bne	2f300 <flatcc_emitter_copy_buffer@@Base+0x94>
   2f2dc:	ldr	r0, [sp, #12]
   2f2e0:	ldr	r1, [fp, #-8]
   2f2e4:	ldr	r1, [r1, #8]
   2f2e8:	ldr	r2, [fp, #-8]
   2f2ec:	ldr	r2, [r2, #24]
   2f2f0:	bl	14e30 <memcpy@plt>
   2f2f4:	ldr	r0, [sp, #12]
   2f2f8:	str	r0, [fp, #-4]
   2f2fc:	b	2f3ac <flatcc_emitter_copy_buffer@@Base+0x140>
   2f300:	ldr	r0, [fp, #-8]
   2f304:	ldr	r0, [r0, #12]
   2f308:	movw	r1, #2944	; 0xb80
   2f30c:	sub	r0, r1, r0
   2f310:	str	r0, [sp]
   2f314:	ldr	r0, [sp, #12]
   2f318:	ldr	r1, [fp, #-8]
   2f31c:	ldr	r1, [r1, #8]
   2f320:	ldr	r2, [sp]
   2f324:	bl	14e30 <memcpy@plt>
   2f328:	ldr	r0, [sp, #12]
   2f32c:	ldr	r1, [sp]
   2f330:	add	r0, r0, r1
   2f334:	str	r0, [sp, #12]
   2f338:	ldr	r0, [fp, #-8]
   2f33c:	ldr	r0, [r0]
   2f340:	ldr	r0, [r0, #2944]	; 0xb80
   2f344:	str	r0, [sp, #4]
   2f348:	ldr	r0, [sp, #4]
   2f34c:	ldr	r1, [fp, #-8]
   2f350:	ldr	r1, [r1, #4]
   2f354:	cmp	r0, r1
   2f358:	beq	2f388 <flatcc_emitter_copy_buffer@@Base+0x11c>
   2f35c:	ldr	r0, [sp, #12]
   2f360:	ldr	r1, [sp, #4]
   2f364:	movw	r2, #2944	; 0xb80
   2f368:	bl	14e30 <memcpy@plt>
   2f36c:	ldr	r0, [sp, #12]
   2f370:	add	r0, r0, #2944	; 0xb80
   2f374:	str	r0, [sp, #12]
   2f378:	ldr	r0, [sp, #4]
   2f37c:	ldr	r0, [r0, #2944]	; 0xb80
   2f380:	str	r0, [sp, #4]
   2f384:	b	2f348 <flatcc_emitter_copy_buffer@@Base+0xdc>
   2f388:	ldr	r0, [sp, #12]
   2f38c:	ldr	r1, [sp, #4]
   2f390:	ldr	r2, [fp, #-8]
   2f394:	ldr	r2, [r2, #20]
   2f398:	movw	r3, #2944	; 0xb80
   2f39c:	sub	r2, r3, r2
   2f3a0:	bl	14e30 <memcpy@plt>
   2f3a4:	ldr	r0, [sp, #12]
   2f3a8:	str	r0, [fp, #-4]
   2f3ac:	ldr	r0, [fp, #-4]
   2f3b0:	mov	sp, fp
   2f3b4:	pop	{fp, pc}
   2f3b8:	push	{fp, lr}
   2f3bc:	mov	fp, sp
   2f3c0:	sub	sp, sp, #16
   2f3c4:	str	r0, [sp, #8]
   2f3c8:	movw	r0, #0
   2f3cc:	str	r0, [sp, #4]
   2f3d0:	ldr	r1, [sp, #8]
   2f3d4:	ldr	r1, [r1]
   2f3d8:	cmp	r1, r0
   2f3dc:	beq	2f434 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   2f3e0:	ldr	r0, [sp, #8]
   2f3e4:	ldr	r0, [r0]
   2f3e8:	ldr	r0, [r0, #2948]	; 0xb84
   2f3ec:	ldr	r1, [sp, #8]
   2f3f0:	ldr	r1, [r1, #4]
   2f3f4:	cmp	r0, r1
   2f3f8:	beq	2f434 <flatcc_emitter_copy_buffer@@Base+0x1c8>
   2f3fc:	ldr	r0, [sp, #8]
   2f400:	ldr	r0, [r0]
   2f404:	ldr	r0, [r0, #2952]	; 0xb88
   2f408:	sub	r0, r0, #2944	; 0xb80
   2f40c:	ldr	r1, [sp, #8]
   2f410:	ldr	r1, [r1]
   2f414:	ldr	r1, [r1, #2948]	; 0xb84
   2f418:	str	r0, [r1, #2952]	; 0xb88
   2f41c:	ldr	r0, [sp, #8]
   2f420:	ldr	r0, [r0]
   2f424:	ldr	r0, [r0, #2948]	; 0xb84
   2f428:	ldr	r1, [sp, #8]
   2f42c:	str	r0, [r1]
   2f430:	b	2f564 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   2f434:	movw	r0, #2956	; 0xb8c
   2f438:	bl	14e78 <malloc@plt>
   2f43c:	str	r0, [sp, #4]
   2f440:	movw	r1, #0
   2f444:	cmp	r0, r1
   2f448:	bne	2f458 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   2f44c:	mvn	r0, #0
   2f450:	str	r0, [fp, #-4]
   2f454:	b	2f5ac <flatcc_emitter_copy_buffer@@Base+0x340>
   2f458:	ldr	r0, [sp, #8]
   2f45c:	ldr	r1, [r0, #28]
   2f460:	add	r1, r1, #2944	; 0xb80
   2f464:	str	r1, [r0, #28]
   2f468:	ldr	r0, [sp, #8]
   2f46c:	ldr	r0, [r0]
   2f470:	movw	r1, #0
   2f474:	cmp	r0, r1
   2f478:	beq	2f4cc <flatcc_emitter_copy_buffer@@Base+0x260>
   2f47c:	ldr	r0, [sp, #8]
   2f480:	ldr	r0, [r0, #4]
   2f484:	ldr	r1, [sp, #4]
   2f488:	str	r0, [r1, #2948]	; 0xb84
   2f48c:	ldr	r0, [sp, #8]
   2f490:	ldr	r0, [r0]
   2f494:	ldr	r1, [sp, #4]
   2f498:	str	r0, [r1, #2944]	; 0xb80
   2f49c:	ldr	r0, [sp, #4]
   2f4a0:	ldr	r1, [sp, #8]
   2f4a4:	ldr	r1, [r1]
   2f4a8:	str	r0, [r1, #2948]	; 0xb84
   2f4ac:	ldr	r0, [sp, #4]
   2f4b0:	ldr	r1, [sp, #8]
   2f4b4:	ldr	r1, [r1, #4]
   2f4b8:	str	r0, [r1, #2944]	; 0xb80
   2f4bc:	ldr	r0, [sp, #4]
   2f4c0:	ldr	r1, [sp, #8]
   2f4c4:	str	r0, [r1]
   2f4c8:	b	2f564 <flatcc_emitter_copy_buffer@@Base+0x2f8>
   2f4cc:	ldr	r0, [sp, #4]
   2f4d0:	ldr	r1, [sp, #8]
   2f4d4:	str	r0, [r1]
   2f4d8:	ldr	r0, [sp, #4]
   2f4dc:	ldr	r1, [sp, #8]
   2f4e0:	str	r0, [r1, #4]
   2f4e4:	ldr	r0, [sp, #4]
   2f4e8:	ldr	r1, [sp, #4]
   2f4ec:	str	r0, [r1, #2944]	; 0xb80
   2f4f0:	ldr	r0, [sp, #4]
   2f4f4:	ldr	r1, [sp, #4]
   2f4f8:	str	r0, [r1, #2948]	; 0xb84
   2f4fc:	ldr	r0, [sp, #8]
   2f500:	ldr	r0, [r0]
   2f504:	add	r0, r0, #1472	; 0x5c0
   2f508:	ldr	r1, [sp, #8]
   2f50c:	str	r0, [r1, #8]
   2f510:	ldr	r0, [sp, #8]
   2f514:	ldr	r0, [r0, #8]
   2f518:	ldr	r1, [sp, #8]
   2f51c:	str	r0, [r1, #16]
   2f520:	ldr	r0, [sp, #8]
   2f524:	movw	r1, #1472	; 0x5c0
   2f528:	str	r1, [r0, #12]
   2f52c:	ldr	r0, [sp, #8]
   2f530:	ldr	r0, [r0, #12]
   2f534:	movw	r1, #2944	; 0xb80
   2f538:	sub	r0, r1, r0
   2f53c:	ldr	r1, [sp, #8]
   2f540:	str	r0, [r1, #20]
   2f544:	ldr	r0, [sp, #8]
   2f548:	ldr	r0, [r0, #12]
   2f54c:	movw	r1, #0
   2f550:	sub	r0, r1, r0
   2f554:	ldr	r2, [sp, #4]
   2f558:	str	r0, [r2, #2952]	; 0xb88
   2f55c:	str	r1, [fp, #-4]
   2f560:	b	2f5ac <flatcc_emitter_copy_buffer@@Base+0x340>
   2f564:	ldr	r0, [sp, #8]
   2f568:	ldr	r0, [r0]
   2f56c:	add	r0, r0, #2944	; 0xb80
   2f570:	ldr	r1, [sp, #8]
   2f574:	str	r0, [r1, #8]
   2f578:	ldr	r0, [sp, #8]
   2f57c:	movw	r1, #2944	; 0xb80
   2f580:	str	r1, [r0, #12]
   2f584:	ldr	r0, [sp, #8]
   2f588:	ldr	r0, [r0]
   2f58c:	ldr	r0, [r0, #2944]	; 0xb80
   2f590:	ldr	r0, [r0, #2952]	; 0xb88
   2f594:	sub	r0, r0, #2944	; 0xb80
   2f598:	ldr	r1, [sp, #8]
   2f59c:	ldr	r1, [r1]
   2f5a0:	str	r0, [r1, #2952]	; 0xb88
   2f5a4:	movw	r0, #0
   2f5a8:	str	r0, [fp, #-4]
   2f5ac:	ldr	r0, [fp, #-4]
   2f5b0:	mov	sp, fp
   2f5b4:	pop	{fp, pc}
   2f5b8:	push	{fp, lr}
   2f5bc:	mov	fp, sp
   2f5c0:	sub	sp, sp, #16
   2f5c4:	str	r0, [sp, #8]
   2f5c8:	movw	r0, #0
   2f5cc:	str	r0, [sp, #4]
   2f5d0:	ldr	r1, [sp, #8]
   2f5d4:	ldr	r1, [r1, #4]
   2f5d8:	cmp	r1, r0
   2f5dc:	beq	2f614 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   2f5e0:	ldr	r0, [sp, #8]
   2f5e4:	ldr	r0, [r0, #4]
   2f5e8:	ldr	r0, [r0, #2944]	; 0xb80
   2f5ec:	ldr	r1, [sp, #8]
   2f5f0:	ldr	r1, [r1]
   2f5f4:	cmp	r0, r1
   2f5f8:	beq	2f614 <flatcc_emitter_copy_buffer@@Base+0x3a8>
   2f5fc:	ldr	r0, [sp, #8]
   2f600:	ldr	r0, [r0, #4]
   2f604:	ldr	r0, [r0, #2944]	; 0xb80
   2f608:	ldr	r1, [sp, #8]
   2f60c:	str	r0, [r1, #4]
   2f610:	b	2f744 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   2f614:	movw	r0, #2956	; 0xb8c
   2f618:	bl	14e78 <malloc@plt>
   2f61c:	str	r0, [sp, #4]
   2f620:	movw	r1, #0
   2f624:	cmp	r0, r1
   2f628:	bne	2f638 <flatcc_emitter_copy_buffer@@Base+0x3cc>
   2f62c:	mvn	r0, #0
   2f630:	str	r0, [fp, #-4]
   2f634:	b	2f788 <flatcc_emitter_copy_buffer@@Base+0x51c>
   2f638:	ldr	r0, [sp, #8]
   2f63c:	ldr	r1, [r0, #28]
   2f640:	add	r1, r1, #2944	; 0xb80
   2f644:	str	r1, [r0, #28]
   2f648:	ldr	r0, [sp, #8]
   2f64c:	ldr	r0, [r0, #4]
   2f650:	movw	r1, #0
   2f654:	cmp	r0, r1
   2f658:	beq	2f6ac <flatcc_emitter_copy_buffer@@Base+0x440>
   2f65c:	ldr	r0, [sp, #8]
   2f660:	ldr	r0, [r0, #4]
   2f664:	ldr	r1, [sp, #4]
   2f668:	str	r0, [r1, #2948]	; 0xb84
   2f66c:	ldr	r0, [sp, #8]
   2f670:	ldr	r0, [r0]
   2f674:	ldr	r1, [sp, #4]
   2f678:	str	r0, [r1, #2944]	; 0xb80
   2f67c:	ldr	r0, [sp, #4]
   2f680:	ldr	r1, [sp, #8]
   2f684:	ldr	r1, [r1]
   2f688:	str	r0, [r1, #2948]	; 0xb84
   2f68c:	ldr	r0, [sp, #4]
   2f690:	ldr	r1, [sp, #8]
   2f694:	ldr	r1, [r1, #4]
   2f698:	str	r0, [r1, #2944]	; 0xb80
   2f69c:	ldr	r0, [sp, #4]
   2f6a0:	ldr	r1, [sp, #8]
   2f6a4:	str	r0, [r1, #4]
   2f6a8:	b	2f744 <flatcc_emitter_copy_buffer@@Base+0x4d8>
   2f6ac:	ldr	r0, [sp, #4]
   2f6b0:	ldr	r1, [sp, #8]
   2f6b4:	str	r0, [r1]
   2f6b8:	ldr	r0, [sp, #4]
   2f6bc:	ldr	r1, [sp, #8]
   2f6c0:	str	r0, [r1, #4]
   2f6c4:	ldr	r0, [sp, #4]
   2f6c8:	ldr	r1, [sp, #4]
   2f6cc:	str	r0, [r1, #2944]	; 0xb80
   2f6d0:	ldr	r0, [sp, #4]
   2f6d4:	ldr	r1, [sp, #4]
   2f6d8:	str	r0, [r1, #2948]	; 0xb84
   2f6dc:	ldr	r0, [sp, #8]
   2f6e0:	ldr	r0, [r0]
   2f6e4:	add	r0, r0, #1472	; 0x5c0
   2f6e8:	ldr	r1, [sp, #8]
   2f6ec:	str	r0, [r1, #8]
   2f6f0:	ldr	r0, [sp, #8]
   2f6f4:	ldr	r0, [r0, #8]
   2f6f8:	ldr	r1, [sp, #8]
   2f6fc:	str	r0, [r1, #16]
   2f700:	ldr	r0, [sp, #8]
   2f704:	movw	r1, #1472	; 0x5c0
   2f708:	str	r1, [r0, #12]
   2f70c:	ldr	r0, [sp, #8]
   2f710:	ldr	r0, [r0, #12]
   2f714:	movw	r1, #2944	; 0xb80
   2f718:	sub	r0, r1, r0
   2f71c:	ldr	r1, [sp, #8]
   2f720:	str	r0, [r1, #20]
   2f724:	ldr	r0, [sp, #8]
   2f728:	ldr	r0, [r0, #12]
   2f72c:	movw	r1, #0
   2f730:	sub	r0, r1, r0
   2f734:	ldr	r2, [sp, #4]
   2f738:	str	r0, [r2, #2952]	; 0xb88
   2f73c:	str	r1, [fp, #-4]
   2f740:	b	2f788 <flatcc_emitter_copy_buffer@@Base+0x51c>
   2f744:	ldr	r0, [sp, #8]
   2f748:	ldr	r0, [r0, #4]
   2f74c:	ldr	r1, [sp, #8]
   2f750:	str	r0, [r1, #16]
   2f754:	ldr	r0, [sp, #8]
   2f758:	movw	r1, #2944	; 0xb80
   2f75c:	str	r1, [r0, #20]
   2f760:	ldr	r0, [sp, #8]
   2f764:	ldr	r0, [r0, #4]
   2f768:	ldr	r0, [r0, #2948]	; 0xb84
   2f76c:	ldr	r0, [r0, #2952]	; 0xb88
   2f770:	add	r0, r0, #2944	; 0xb80
   2f774:	ldr	r1, [sp, #8]
   2f778:	ldr	r1, [r1, #4]
   2f77c:	str	r0, [r1, #2952]	; 0xb88
   2f780:	movw	r0, #0
   2f784:	str	r0, [fp, #-4]
   2f788:	ldr	r0, [fp, #-4]
   2f78c:	mov	sp, fp
   2f790:	pop	{fp, pc}

0002f794 <flatcc_verify_error_string@@Base>:
   2f794:	sub	sp, sp, #12
   2f798:	str	r0, [sp, #4]
   2f79c:	ldr	r0, [sp, #4]
   2f7a0:	cmp	r0, #36	; 0x24
   2f7a4:	str	r0, [sp]
   2f7a8:	bhi	2faa0 <flatcc_verify_error_string@@Base+0x30c>
   2f7ac:	add	r0, pc, #8
   2f7b0:	ldr	r1, [sp]
   2f7b4:	ldr	r2, [r0, r1, lsl #2]
   2f7b8:	add	pc, r0, r2
   2f7bc:	muleq	r0, r4, r0
   2f7c0:	andeq	r0, r0, r4, lsr #1
   2f7c4:	strheq	r0, [r0], -r4
   2f7c8:	andeq	r0, r0, r4, asr #1
   2f7cc:	ldrdeq	r0, [r0], -r4
   2f7d0:	andeq	r0, r0, r4, ror #1
   2f7d4:	strdeq	r0, [r0], -r4
   2f7d8:	andeq	r0, r0, r4, lsl #2
   2f7dc:	andeq	r0, r0, r4, lsl r1
   2f7e0:	andeq	r0, r0, r4, lsr #2
   2f7e4:	andeq	r0, r0, r4, lsr r1
   2f7e8:	andeq	r0, r0, r4, asr #2
   2f7ec:	andeq	r0, r0, r4, asr r1
   2f7f0:	andeq	r0, r0, r4, ror #2
   2f7f4:	andeq	r0, r0, r4, ror r1
   2f7f8:	andeq	r0, r0, r4, lsl #3
   2f7fc:	muleq	r0, r4, r1
   2f800:	andeq	r0, r0, r4, lsr #3
   2f804:			; <UNDEFINED> instruction: 0x000001b4
   2f808:	andeq	r0, r0, r4, asr #3
   2f80c:	ldrdeq	r0, [r0], -r4
   2f810:	andeq	r0, r0, r4, ror #3
   2f814:	strdeq	r0, [r0], -r4
   2f818:	andeq	r0, r0, r4, lsl #4
   2f81c:	andeq	r0, r0, r4, lsl r2
   2f820:	andeq	r0, r0, r4, lsr #4
   2f824:	andeq	r0, r0, r4, lsr r2
   2f828:	andeq	r0, r0, r4, asr #4
   2f82c:	andeq	r0, r0, r4, asr r2
   2f830:	andeq	r0, r0, r4, ror #4
   2f834:	andeq	r0, r0, r4, ror r2
   2f838:	andeq	r0, r0, r4, lsl #5
   2f83c:	muleq	r0, r4, r2
   2f840:	andeq	r0, r0, r4, lsr #5
   2f844:			; <UNDEFINED> instruction: 0x000002b4
   2f848:	andeq	r0, r0, r4, asr #5
   2f84c:	ldrdeq	r0, [r0], -r4
   2f850:	ldr	r0, [pc, #752]	; 2fb48 <flatcc_verify_error_string@@Base+0x3b4>
   2f854:	add	r0, pc, r0
   2f858:	str	r0, [sp, #8]
   2f85c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f860:	ldr	r0, [pc, #732]	; 2fb44 <flatcc_verify_error_string@@Base+0x3b0>
   2f864:	add	r0, pc, r0
   2f868:	str	r0, [sp, #8]
   2f86c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f870:	ldr	r0, [pc, #712]	; 2fb40 <flatcc_verify_error_string@@Base+0x3ac>
   2f874:	add	r0, pc, r0
   2f878:	str	r0, [sp, #8]
   2f87c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f880:	ldr	r0, [pc, #692]	; 2fb3c <flatcc_verify_error_string@@Base+0x3a8>
   2f884:	add	r0, pc, r0
   2f888:	str	r0, [sp, #8]
   2f88c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f890:	ldr	r0, [pc, #672]	; 2fb38 <flatcc_verify_error_string@@Base+0x3a4>
   2f894:	add	r0, pc, r0
   2f898:	str	r0, [sp, #8]
   2f89c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8a0:	ldr	r0, [pc, #652]	; 2fb34 <flatcc_verify_error_string@@Base+0x3a0>
   2f8a4:	add	r0, pc, r0
   2f8a8:	str	r0, [sp, #8]
   2f8ac:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8b0:	ldr	r0, [pc, #632]	; 2fb30 <flatcc_verify_error_string@@Base+0x39c>
   2f8b4:	add	r0, pc, r0
   2f8b8:	str	r0, [sp, #8]
   2f8bc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8c0:	ldr	r0, [pc, #612]	; 2fb2c <flatcc_verify_error_string@@Base+0x398>
   2f8c4:	add	r0, pc, r0
   2f8c8:	str	r0, [sp, #8]
   2f8cc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8d0:	ldr	r0, [pc, #592]	; 2fb28 <flatcc_verify_error_string@@Base+0x394>
   2f8d4:	add	r0, pc, r0
   2f8d8:	str	r0, [sp, #8]
   2f8dc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8e0:	ldr	r0, [pc, #572]	; 2fb24 <flatcc_verify_error_string@@Base+0x390>
   2f8e4:	add	r0, pc, r0
   2f8e8:	str	r0, [sp, #8]
   2f8ec:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f8f0:	ldr	r0, [pc, #552]	; 2fb20 <flatcc_verify_error_string@@Base+0x38c>
   2f8f4:	add	r0, pc, r0
   2f8f8:	str	r0, [sp, #8]
   2f8fc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f900:	ldr	r0, [pc, #532]	; 2fb1c <flatcc_verify_error_string@@Base+0x388>
   2f904:	add	r0, pc, r0
   2f908:	str	r0, [sp, #8]
   2f90c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f910:	ldr	r0, [pc, #512]	; 2fb18 <flatcc_verify_error_string@@Base+0x384>
   2f914:	add	r0, pc, r0
   2f918:	str	r0, [sp, #8]
   2f91c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f920:	ldr	r0, [pc, #492]	; 2fb14 <flatcc_verify_error_string@@Base+0x380>
   2f924:	add	r0, pc, r0
   2f928:	str	r0, [sp, #8]
   2f92c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f930:	ldr	r0, [pc, #472]	; 2fb10 <flatcc_verify_error_string@@Base+0x37c>
   2f934:	add	r0, pc, r0
   2f938:	str	r0, [sp, #8]
   2f93c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f940:	ldr	r0, [pc, #452]	; 2fb0c <flatcc_verify_error_string@@Base+0x378>
   2f944:	add	r0, pc, r0
   2f948:	str	r0, [sp, #8]
   2f94c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f950:	ldr	r0, [pc, #432]	; 2fb08 <flatcc_verify_error_string@@Base+0x374>
   2f954:	add	r0, pc, r0
   2f958:	str	r0, [sp, #8]
   2f95c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f960:	ldr	r0, [pc, #412]	; 2fb04 <flatcc_verify_error_string@@Base+0x370>
   2f964:	add	r0, pc, r0
   2f968:	str	r0, [sp, #8]
   2f96c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f970:	ldr	r0, [pc, #392]	; 2fb00 <flatcc_verify_error_string@@Base+0x36c>
   2f974:	add	r0, pc, r0
   2f978:	str	r0, [sp, #8]
   2f97c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f980:	ldr	r0, [pc, #372]	; 2fafc <flatcc_verify_error_string@@Base+0x368>
   2f984:	add	r0, pc, r0
   2f988:	str	r0, [sp, #8]
   2f98c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f990:	ldr	r0, [pc, #352]	; 2faf8 <flatcc_verify_error_string@@Base+0x364>
   2f994:	add	r0, pc, r0
   2f998:	str	r0, [sp, #8]
   2f99c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9a0:	ldr	r0, [pc, #332]	; 2faf4 <flatcc_verify_error_string@@Base+0x360>
   2f9a4:	add	r0, pc, r0
   2f9a8:	str	r0, [sp, #8]
   2f9ac:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9b0:	ldr	r0, [pc, #312]	; 2faf0 <flatcc_verify_error_string@@Base+0x35c>
   2f9b4:	add	r0, pc, r0
   2f9b8:	str	r0, [sp, #8]
   2f9bc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9c0:	ldr	r0, [pc, #292]	; 2faec <flatcc_verify_error_string@@Base+0x358>
   2f9c4:	add	r0, pc, r0
   2f9c8:	str	r0, [sp, #8]
   2f9cc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9d0:	ldr	r0, [pc, #272]	; 2fae8 <flatcc_verify_error_string@@Base+0x354>
   2f9d4:	add	r0, pc, r0
   2f9d8:	str	r0, [sp, #8]
   2f9dc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9e0:	ldr	r0, [pc, #252]	; 2fae4 <flatcc_verify_error_string@@Base+0x350>
   2f9e4:	add	r0, pc, r0
   2f9e8:	str	r0, [sp, #8]
   2f9ec:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2f9f0:	ldr	r0, [pc, #232]	; 2fae0 <flatcc_verify_error_string@@Base+0x34c>
   2f9f4:	add	r0, pc, r0
   2f9f8:	str	r0, [sp, #8]
   2f9fc:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa00:	ldr	r0, [pc, #212]	; 2fadc <flatcc_verify_error_string@@Base+0x348>
   2fa04:	add	r0, pc, r0
   2fa08:	str	r0, [sp, #8]
   2fa0c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa10:	ldr	r0, [pc, #192]	; 2fad8 <flatcc_verify_error_string@@Base+0x344>
   2fa14:	add	r0, pc, r0
   2fa18:	str	r0, [sp, #8]
   2fa1c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa20:	ldr	r0, [pc, #172]	; 2fad4 <flatcc_verify_error_string@@Base+0x340>
   2fa24:	add	r0, pc, r0
   2fa28:	str	r0, [sp, #8]
   2fa2c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa30:	ldr	r0, [pc, #152]	; 2fad0 <flatcc_verify_error_string@@Base+0x33c>
   2fa34:	add	r0, pc, r0
   2fa38:	str	r0, [sp, #8]
   2fa3c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa40:	ldr	r0, [pc, #132]	; 2facc <flatcc_verify_error_string@@Base+0x338>
   2fa44:	add	r0, pc, r0
   2fa48:	str	r0, [sp, #8]
   2fa4c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa50:	ldr	r0, [pc, #112]	; 2fac8 <flatcc_verify_error_string@@Base+0x334>
   2fa54:	add	r0, pc, r0
   2fa58:	str	r0, [sp, #8]
   2fa5c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa60:	ldr	r0, [pc, #92]	; 2fac4 <flatcc_verify_error_string@@Base+0x330>
   2fa64:	add	r0, pc, r0
   2fa68:	str	r0, [sp, #8]
   2fa6c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa70:	ldr	r0, [pc, #72]	; 2fac0 <flatcc_verify_error_string@@Base+0x32c>
   2fa74:	add	r0, pc, r0
   2fa78:	str	r0, [sp, #8]
   2fa7c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa80:	ldr	r0, [pc, #52]	; 2fabc <flatcc_verify_error_string@@Base+0x328>
   2fa84:	add	r0, pc, r0
   2fa88:	str	r0, [sp, #8]
   2fa8c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2fa90:	ldr	r0, [pc, #32]	; 2fab8 <flatcc_verify_error_string@@Base+0x324>
   2fa94:	add	r0, pc, r0
   2fa98:	str	r0, [sp, #8]
   2fa9c:	b	2faac <flatcc_verify_error_string@@Base+0x318>
   2faa0:	ldr	r0, [pc, #164]	; 2fb4c <flatcc_verify_error_string@@Base+0x3b8>
   2faa4:	add	r0, pc, r0
   2faa8:	str	r0, [sp, #8]
   2faac:	ldr	r0, [sp, #8]
   2fab0:	add	sp, sp, #12
   2fab4:	bx	lr
   2fab8:	andeq	fp, r1, sp, lsl r1
   2fabc:	andeq	fp, r1, r3, lsl r1
   2fac0:	andeq	fp, r1, pc, ror #1
   2fac4:	ldrdeq	fp, [r1], -sl
   2fac8:	andeq	fp, r1, r3, asr #1
   2facc:	strheq	fp, [r1], -lr
   2fad0:	andeq	fp, r1, r8, lsr #1
   2fad4:	muleq	r1, r0, r0
   2fad8:	andeq	fp, r1, r8, lsl #1
   2fadc:	andeq	fp, r1, sp, ror r0
   2fae0:	andeq	fp, r1, r9, ror r0
   2fae4:	andeq	fp, r1, sl, asr r0
   2fae8:	andeq	fp, r1, r1, asr #32
   2faec:	andeq	fp, r1, r8, lsr #32
   2faf0:	andeq	fp, r1, r5
   2faf4:	andeq	sl, r1, r9, ror #31
   2faf8:	andeq	sl, r1, r1, ror #31
   2fafc:	andeq	fp, r1, r1, lsr r1
   2fb00:	andeq	sl, r1, sp, ror #31
   2fb04:	ldrdeq	sl, [r1], -r5
   2fb08:			; <UNDEFINED> instruction: 0x0001afbd
   2fb0c:	andeq	sl, r1, r6, lsr #31
   2fb10:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   2fb14:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   2fb18:	andeq	sl, r1, fp, lsl #31
   2fb1c:	andeq	sl, r1, sl, lsl #31
   2fb20:	andeq	sl, r1, r5, lsl #31
   2fb24:	andeq	sl, r1, r1, lsl #31
   2fb28:	andeq	sl, r1, sp, ror pc
   2fb2c:	andeq	sl, r1, r2, ror pc
   2fb30:	andeq	sl, r1, r3, ror #30
   2fb34:	andeq	sl, r1, r0, asr pc
   2fb38:	andeq	sl, r1, r9, asr #30
   2fb3c:	andeq	sl, r1, pc, lsr pc
   2fb40:	andeq	sl, r1, fp, lsr pc
   2fb44:	andeq	sl, r1, r3, lsr pc
   2fb48:	andeq	sl, r1, r0, asr #30
   2fb4c:	andeq	fp, r1, fp, lsl r1

0002fb50 <flatcc_verify_field@@Base>:
   2fb50:	push	{fp, lr}
   2fb54:	mov	fp, sp
   2fb58:	sub	sp, sp, #24
   2fb5c:	str	r0, [fp, #-8]
   2fb60:	strh	r1, [fp, #-10]
   2fb64:	str	r2, [sp, #8]
   2fb68:	strh	r3, [sp, #6]
   2fb6c:	ldr	r0, [fp, #-8]
   2fb70:	ldrh	r1, [fp, #-10]
   2fb74:	ldr	r3, [sp, #8]
   2fb78:	uxth	r1, r1
   2fb7c:	movw	r2, #0
   2fb80:	ldrh	ip, [sp, #6]
   2fb84:	str	ip, [sp]
   2fb88:	bl	2fbd0 <flatcc_verify_field@@Base+0x80>
   2fb8c:	cmp	r0, #0
   2fb90:	beq	2fbbc <flatcc_verify_field@@Base+0x6c>
   2fb94:	ldr	r0, [fp, #-8]
   2fb98:	ldrh	r1, [fp, #-10]
   2fb9c:	ldr	r3, [sp, #8]
   2fba0:	uxth	r1, r1
   2fba4:	movw	r2, #0
   2fba8:	ldrh	ip, [sp, #6]
   2fbac:	str	ip, [sp]
   2fbb0:	bl	2fbd0 <flatcc_verify_field@@Base+0x80>
   2fbb4:	str	r0, [fp, #-4]
   2fbb8:	b	2fbc4 <flatcc_verify_field@@Base+0x74>
   2fbbc:	movw	r0, #0
   2fbc0:	str	r0, [fp, #-4]
   2fbc4:	ldr	r0, [fp, #-4]
   2fbc8:	mov	sp, fp
   2fbcc:	pop	{fp, pc}
   2fbd0:	push	{fp, lr}
   2fbd4:	mov	fp, sp
   2fbd8:	sub	sp, sp, #56	; 0x38
   2fbdc:	ldr	ip, [fp, #8]
   2fbe0:	str	r0, [fp, #-8]
   2fbe4:	strh	r1, [fp, #-10]
   2fbe8:	str	r2, [fp, #-16]
   2fbec:	str	r3, [fp, #-20]	; 0xffffffec
   2fbf0:	strh	ip, [fp, #-22]	; 0xffffffea
   2fbf4:	ldr	r0, [fp, #-8]
   2fbf8:	ldr	r0, [r0]
   2fbfc:	str	r0, [sp, #16]
   2fc00:	ldr	r0, [fp, #-8]
   2fc04:	ldrh	r1, [fp, #-10]
   2fc08:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   2fc0c:	strh	r0, [sp, #22]
   2fc10:	ldrsh	r0, [sp, #22]
   2fc14:	cmp	r0, #0
   2fc18:	bne	2fc68 <flatcc_verify_field@@Base+0x118>
   2fc1c:	b	2fc20 <flatcc_verify_field@@Base+0xd0>
   2fc20:	ldr	r0, [fp, #-16]
   2fc24:	cmp	r0, #0
   2fc28:	movw	r0, #0
   2fc2c:	movne	r0, #1
   2fc30:	mvn	r1, #0
   2fc34:	eor	r0, r0, r1
   2fc38:	and	r0, r0, #1
   2fc3c:	str	r0, [sp, #12]
   2fc40:	ldr	r0, [sp, #12]
   2fc44:	cmp	r0, #0
   2fc48:	bne	2fc58 <flatcc_verify_field@@Base+0x108>
   2fc4c:	movw	r0, #4
   2fc50:	str	r0, [fp, #-4]
   2fc54:	b	2fd50 <flatcc_verify_field@@Base+0x200>
   2fc58:	b	2fc5c <flatcc_verify_field@@Base+0x10c>
   2fc5c:	movw	r0, #0
   2fc60:	str	r0, [fp, #-4]
   2fc64:	b	2fd50 <flatcc_verify_field@@Base+0x200>
   2fc68:	ldrh	r0, [sp, #22]
   2fc6c:	str	r0, [sp, #28]
   2fc70:	ldr	r0, [sp, #28]
   2fc74:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fc78:	add	r0, r0, r1
   2fc7c:	str	r0, [sp, #24]
   2fc80:	ldr	r0, [sp, #24]
   2fc84:	ldr	r1, [fp, #-8]
   2fc88:	ldrh	r1, [r1, #20]
   2fc8c:	cmp	r0, r1
   2fc90:	movw	r0, #0
   2fc94:	movls	r0, #1
   2fc98:	and	r0, r0, #1
   2fc9c:	str	r0, [sp, #8]
   2fca0:	ldr	r0, [sp, #8]
   2fca4:	cmp	r0, #0
   2fca8:	bne	2fcb8 <flatcc_verify_field@@Base+0x168>
   2fcac:	movw	r0, #13
   2fcb0:	str	r0, [fp, #-4]
   2fcb4:	b	2fd50 <flatcc_verify_field@@Base+0x200>
   2fcb8:	b	2fcbc <flatcc_verify_field@@Base+0x16c>
   2fcbc:	b	2fcc0 <flatcc_verify_field@@Base+0x170>
   2fcc0:	movw	r0, #1
   2fcc4:	str	r0, [sp, #4]
   2fcc8:	ldr	r0, [sp, #4]
   2fccc:	cmp	r0, #0
   2fcd0:	bne	2fce0 <flatcc_verify_field@@Base+0x190>
   2fcd4:	movw	r0, #14
   2fcd8:	str	r0, [fp, #-4]
   2fcdc:	b	2fd50 <flatcc_verify_field@@Base+0x200>
   2fce0:	b	2fce4 <flatcc_verify_field@@Base+0x194>
   2fce4:	ldr	r0, [fp, #-8]
   2fce8:	ldr	r0, [r0, #16]
   2fcec:	ldr	r1, [sp, #16]
   2fcf0:	add	r0, r0, r1
   2fcf4:	ldr	r1, [sp, #28]
   2fcf8:	add	r0, r1, r0
   2fcfc:	str	r0, [sp, #28]
   2fd00:	ldr	r0, [sp, #28]
   2fd04:	ldrh	r1, [fp, #-22]	; 0xffffffea
   2fd08:	sub	r1, r1, #1
   2fd0c:	and	r0, r0, r1
   2fd10:	cmp	r0, #0
   2fd14:	movw	r0, #0
   2fd18:	movne	r0, #1
   2fd1c:	mvn	r1, #0
   2fd20:	eor	r0, r0, r1
   2fd24:	and	r0, r0, #1
   2fd28:	str	r0, [sp]
   2fd2c:	ldr	r0, [sp]
   2fd30:	cmp	r0, #0
   2fd34:	bne	2fd44 <flatcc_verify_field@@Base+0x1f4>
   2fd38:	movw	r0, #12
   2fd3c:	str	r0, [fp, #-4]
   2fd40:	b	2fd50 <flatcc_verify_field@@Base+0x200>
   2fd44:	b	2fd48 <flatcc_verify_field@@Base+0x1f8>
   2fd48:	movw	r0, #0
   2fd4c:	str	r0, [fp, #-4]
   2fd50:	ldr	r0, [fp, #-4]
   2fd54:	mov	sp, fp
   2fd58:	pop	{fp, pc}

0002fd5c <flatcc_verify_string_field@@Base>:
   2fd5c:	push	{fp, lr}
   2fd60:	mov	fp, sp
   2fd64:	sub	sp, sp, #40	; 0x28
   2fd68:	str	r0, [fp, #-8]
   2fd6c:	strh	r1, [fp, #-10]
   2fd70:	str	r2, [fp, #-16]
   2fd74:	ldr	r0, [fp, #-8]
   2fd78:	ldrh	r1, [fp, #-10]
   2fd7c:	ldr	r2, [fp, #-16]
   2fd80:	uxth	r1, r1
   2fd84:	add	r3, sp, #20
   2fd88:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   2fd8c:	str	r0, [sp, #16]
   2fd90:	ldr	r0, [sp, #16]
   2fd94:	cmp	r0, #0
   2fd98:	bne	2fda8 <flatcc_verify_string_field@@Base+0x4c>
   2fd9c:	ldr	r0, [sp, #20]
   2fda0:	cmp	r0, #0
   2fda4:	bne	2fdb4 <flatcc_verify_string_field@@Base+0x58>
   2fda8:	ldr	r0, [sp, #16]
   2fdac:	str	r0, [fp, #-4]
   2fdb0:	b	2fe10 <flatcc_verify_string_field@@Base+0xb4>
   2fdb4:	b	2fdb8 <flatcc_verify_string_field@@Base+0x5c>
   2fdb8:	ldr	r0, [fp, #-8]
   2fdbc:	ldr	r0, [r0]
   2fdc0:	ldr	r1, [fp, #-8]
   2fdc4:	ldr	r1, [r1, #4]
   2fdc8:	ldr	r2, [sp, #20]
   2fdcc:	ldr	r3, [fp, #-8]
   2fdd0:	ldr	r3, [r3]
   2fdd4:	ldr	ip, [sp, #20]
   2fdd8:	str	r0, [sp, #12]
   2fddc:	mov	r0, r3
   2fde0:	str	r1, [sp, #8]
   2fde4:	mov	r1, ip
   2fde8:	str	r2, [sp, #4]
   2fdec:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   2fdf0:	ldr	r1, [sp, #12]
   2fdf4:	str	r0, [sp]
   2fdf8:	mov	r0, r1
   2fdfc:	ldr	r1, [sp, #8]
   2fe00:	ldr	r2, [sp, #4]
   2fe04:	ldr	r3, [sp]
   2fe08:	bl	2ff70 <flatcc_verify_string_field@@Base+0x214>
   2fe0c:	str	r0, [fp, #-4]
   2fe10:	ldr	r0, [fp, #-4]
   2fe14:	mov	sp, fp
   2fe18:	pop	{fp, pc}
   2fe1c:	push	{fp, lr}
   2fe20:	mov	fp, sp
   2fe24:	sub	sp, sp, #48	; 0x30
   2fe28:	str	r0, [fp, #-8]
   2fe2c:	strh	r1, [fp, #-10]
   2fe30:	str	r2, [fp, #-16]
   2fe34:	str	r3, [fp, #-20]	; 0xffffffec
   2fe38:	ldr	r0, [fp, #-8]
   2fe3c:	ldrh	r1, [fp, #-10]
   2fe40:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   2fe44:	strh	r0, [sp, #18]
   2fe48:	ldrsh	r0, [sp, #18]
   2fe4c:	cmp	r0, #0
   2fe50:	bne	2fe84 <flatcc_verify_string_field@@Base+0x128>
   2fe54:	ldr	r0, [fp, #-20]	; 0xffffffec
   2fe58:	movw	r1, #0
   2fe5c:	str	r1, [r0]
   2fe60:	ldr	r0, [fp, #-16]
   2fe64:	cmp	r0, #0
   2fe68:	beq	2fe78 <flatcc_verify_string_field@@Base+0x11c>
   2fe6c:	movw	r0, #4
   2fe70:	str	r0, [fp, #-4]
   2fe74:	b	2ff64 <flatcc_verify_string_field@@Base+0x208>
   2fe78:	movw	r0, #0
   2fe7c:	str	r0, [fp, #-4]
   2fe80:	b	2ff64 <flatcc_verify_string_field@@Base+0x208>
   2fe84:	ldrh	r0, [sp, #18]
   2fe88:	str	r0, [sp, #24]
   2fe8c:	ldr	r0, [sp, #24]
   2fe90:	add	r0, r0, #4
   2fe94:	str	r0, [sp, #20]
   2fe98:	ldr	r0, [sp, #20]
   2fe9c:	ldr	r1, [fp, #-8]
   2fea0:	ldrh	r1, [r1, #20]
   2fea4:	cmp	r0, r1
   2fea8:	movw	r0, #0
   2feac:	movls	r0, #1
   2feb0:	and	r0, r0, #1
   2feb4:	str	r0, [sp, #12]
   2feb8:	ldr	r0, [sp, #12]
   2febc:	cmp	r0, #0
   2fec0:	bne	2fed0 <flatcc_verify_string_field@@Base+0x174>
   2fec4:	movw	r0, #13
   2fec8:	str	r0, [fp, #-4]
   2fecc:	b	2ff64 <flatcc_verify_string_field@@Base+0x208>
   2fed0:	b	2fed4 <flatcc_verify_string_field@@Base+0x178>
   2fed4:	b	2fed8 <flatcc_verify_string_field@@Base+0x17c>
   2fed8:	movw	r0, #1
   2fedc:	str	r0, [sp, #8]
   2fee0:	ldr	r0, [sp, #8]
   2fee4:	cmp	r0, #0
   2fee8:	bne	2fef8 <flatcc_verify_string_field@@Base+0x19c>
   2feec:	movw	r0, #14
   2fef0:	str	r0, [fp, #-4]
   2fef4:	b	2ff64 <flatcc_verify_string_field@@Base+0x208>
   2fef8:	b	2fefc <flatcc_verify_string_field@@Base+0x1a0>
   2fefc:	ldr	r0, [fp, #-8]
   2ff00:	ldr	r0, [r0, #16]
   2ff04:	ldr	r1, [sp, #24]
   2ff08:	add	r0, r1, r0
   2ff0c:	str	r0, [sp, #24]
   2ff10:	ldr	r0, [sp, #24]
   2ff14:	and	r0, r0, #3
   2ff18:	cmp	r0, #0
   2ff1c:	movw	r0, #0
   2ff20:	movne	r0, #1
   2ff24:	mvn	r1, #0
   2ff28:	eor	r0, r0, r1
   2ff2c:	and	r0, r0, #1
   2ff30:	str	r0, [sp, #4]
   2ff34:	ldr	r0, [sp, #4]
   2ff38:	cmp	r0, #0
   2ff3c:	bne	2ff4c <flatcc_verify_string_field@@Base+0x1f0>
   2ff40:	movw	r0, #12
   2ff44:	str	r0, [fp, #-4]
   2ff48:	b	2ff64 <flatcc_verify_string_field@@Base+0x208>
   2ff4c:	b	2ff50 <flatcc_verify_string_field@@Base+0x1f4>
   2ff50:	ldr	r0, [sp, #24]
   2ff54:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ff58:	str	r0, [r1]
   2ff5c:	movw	r0, #0
   2ff60:	str	r0, [fp, #-4]
   2ff64:	ldr	r0, [fp, #-4]
   2ff68:	mov	sp, fp
   2ff6c:	pop	{fp, pc}
   2ff70:	push	{fp, lr}
   2ff74:	mov	fp, sp
   2ff78:	sub	sp, sp, #40	; 0x28
   2ff7c:	str	r0, [fp, #-8]
   2ff80:	str	r1, [fp, #-12]
   2ff84:	str	r2, [fp, #-16]
   2ff88:	str	r3, [sp, #20]
   2ff8c:	ldr	r0, [fp, #-12]
   2ff90:	ldr	r1, [fp, #-16]
   2ff94:	ldr	r2, [sp, #20]
   2ff98:	bl	3201c <flatcc_verify_union_vector_field@@Base+0x56c>
   2ff9c:	str	r0, [sp, #12]
   2ffa0:	ldr	r0, [sp, #12]
   2ffa4:	cmp	r0, #0
   2ffa8:	bne	2ffb8 <flatcc_verify_string_field@@Base+0x25c>
   2ffac:	movw	r0, #17
   2ffb0:	str	r0, [fp, #-4]
   2ffb4:	b	30080 <flatcc_verify_string_field@@Base+0x324>
   2ffb8:	b	2ffbc <flatcc_verify_string_field@@Base+0x260>
   2ffbc:	ldr	r0, [sp, #20]
   2ffc0:	ldr	r1, [fp, #-16]
   2ffc4:	add	r0, r1, r0
   2ffc8:	str	r0, [fp, #-16]
   2ffcc:	ldr	r0, [fp, #-8]
   2ffd0:	ldr	r1, [fp, #-16]
   2ffd4:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   2ffd8:	str	r0, [sp, #16]
   2ffdc:	ldr	r0, [fp, #-16]
   2ffe0:	add	r0, r0, #4
   2ffe4:	str	r0, [fp, #-16]
   2ffe8:	ldr	r0, [fp, #-12]
   2ffec:	ldr	r1, [fp, #-16]
   2fff0:	sub	r0, r0, r1
   2fff4:	ldr	r1, [sp, #16]
   2fff8:	add	r1, r1, #1
   2fffc:	cmp	r0, r1
   30000:	movw	r0, #0
   30004:	movcs	r0, #1
   30008:	and	r0, r0, #1
   3000c:	str	r0, [sp, #8]
   30010:	ldr	r0, [sp, #8]
   30014:	cmp	r0, #0
   30018:	bne	30028 <flatcc_verify_string_field@@Base+0x2cc>
   3001c:	movw	r0, #8
   30020:	str	r0, [fp, #-4]
   30024:	b	30080 <flatcc_verify_string_field@@Base+0x324>
   30028:	b	3002c <flatcc_verify_string_field@@Base+0x2d0>
   3002c:	b	30030 <flatcc_verify_string_field@@Base+0x2d4>
   30030:	ldr	r0, [fp, #-8]
   30034:	ldr	r1, [fp, #-16]
   30038:	add	r0, r0, r1
   3003c:	ldr	r1, [sp, #16]
   30040:	add	r0, r0, r1
   30044:	ldrb	r0, [r0]
   30048:	cmp	r0, #0
   3004c:	movw	r0, #0
   30050:	moveq	r0, #1
   30054:	and	r0, r0, #1
   30058:	str	r0, [sp, #4]
   3005c:	ldr	r0, [sp, #4]
   30060:	cmp	r0, #0
   30064:	bne	30074 <flatcc_verify_string_field@@Base+0x318>
   30068:	movw	r0, #7
   3006c:	str	r0, [fp, #-4]
   30070:	b	30080 <flatcc_verify_string_field@@Base+0x324>
   30074:	b	30078 <flatcc_verify_string_field@@Base+0x31c>
   30078:	movw	r0, #0
   3007c:	str	r0, [fp, #-4]
   30080:	ldr	r0, [fp, #-4]
   30084:	mov	sp, fp
   30088:	pop	{fp, pc}
   3008c:	push	{fp, lr}
   30090:	mov	fp, sp
   30094:	sub	sp, sp, #8
   30098:	str	r0, [sp, #4]
   3009c:	str	r1, [sp]
   300a0:	ldr	r0, [sp, #4]
   300a4:	ldr	r1, [sp]
   300a8:	add	r0, r0, r1
   300ac:	bl	320a0 <flatcc_verify_union_vector_field@@Base+0x5f0>
   300b0:	mov	sp, fp
   300b4:	pop	{fp, pc}

000300b8 <flatcc_verify_vector_field@@Base>:
   300b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   300bc:	add	fp, sp, #24
   300c0:	sub	sp, sp, #72	; 0x48
   300c4:	ldr	ip, [fp, #12]
   300c8:	ldr	lr, [fp, #8]
   300cc:	str	r0, [fp, #-32]	; 0xffffffe0
   300d0:	strh	r1, [fp, #-34]	; 0xffffffde
   300d4:	str	r2, [fp, #-40]	; 0xffffffd8
   300d8:	str	r3, [fp, #-44]	; 0xffffffd4
   300dc:	strh	lr, [fp, #-46]	; 0xffffffd2
   300e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   300e4:	ldrh	r1, [fp, #-34]	; 0xffffffde
   300e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   300ec:	uxth	r1, r1
   300f0:	add	r3, sp, #44	; 0x2c
   300f4:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   300f8:	str	r0, [sp, #40]	; 0x28
   300fc:	ldr	r0, [sp, #40]	; 0x28
   30100:	cmp	r0, #0
   30104:	bne	30114 <flatcc_verify_vector_field@@Base+0x5c>
   30108:	ldr	r0, [sp, #44]	; 0x2c
   3010c:	cmp	r0, #0
   30110:	bne	30120 <flatcc_verify_vector_field@@Base+0x68>
   30114:	ldr	r0, [sp, #40]	; 0x28
   30118:	str	r0, [fp, #-28]	; 0xffffffe4
   3011c:	b	301bc <flatcc_verify_vector_field@@Base+0x104>
   30120:	b	30124 <flatcc_verify_vector_field@@Base+0x6c>
   30124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30128:	ldr	r0, [r0]
   3012c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30130:	ldr	r1, [r1, #4]
   30134:	ldr	r2, [sp, #44]	; 0x2c
   30138:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3013c:	ldr	r3, [r3]
   30140:	ldr	ip, [sp, #44]	; 0x2c
   30144:	str	r0, [sp, #36]	; 0x24
   30148:	mov	r0, r3
   3014c:	str	r1, [sp, #32]
   30150:	mov	r1, ip
   30154:	str	r2, [sp, #28]
   30158:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   3015c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30160:	ldrh	r2, [fp, #-46]	; 0xffffffd2
   30164:	ldr	r3, [fp, #12]
   30168:	ldr	ip, [sp, #36]	; 0x24
   3016c:	str	r0, [sp, #24]
   30170:	mov	r0, ip
   30174:	ldr	lr, [sp, #32]
   30178:	str	r1, [sp, #20]
   3017c:	mov	r1, lr
   30180:	ldr	r4, [sp, #28]
   30184:	str	r2, [sp, #16]
   30188:	mov	r2, r4
   3018c:	ldr	r5, [sp, #24]
   30190:	str	r3, [sp, #12]
   30194:	mov	r3, r5
   30198:	ldr	r6, [sp, #20]
   3019c:	str	r6, [sp]
   301a0:	ldr	r7, [sp, #16]
   301a4:	uxth	r8, r7
   301a8:	str	r8, [sp, #4]
   301ac:	ldr	r8, [sp, #12]
   301b0:	str	r8, [sp, #8]
   301b4:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   301b8:	str	r0, [fp, #-28]	; 0xffffffe4
   301bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   301c0:	sub	sp, fp, #24
   301c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   301c8:	push	{r4, sl, fp, lr}
   301cc:	add	fp, sp, #8
   301d0:	sub	sp, sp, #40	; 0x28
   301d4:	ldr	ip, [fp, #16]
   301d8:	ldr	lr, [fp, #12]
   301dc:	ldr	r4, [fp, #8]
   301e0:	str	r0, [fp, #-16]
   301e4:	str	r1, [fp, #-20]	; 0xffffffec
   301e8:	str	r2, [sp, #24]
   301ec:	str	r3, [sp, #20]
   301f0:	strh	lr, [sp, #18]
   301f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   301f8:	ldr	r1, [sp, #24]
   301fc:	ldr	r2, [sp, #20]
   30200:	ldrh	r3, [sp, #18]
   30204:	bl	320d8 <flatcc_verify_union_vector_field@@Base+0x628>
   30208:	str	r0, [sp, #8]
   3020c:	ldr	r0, [sp, #8]
   30210:	cmp	r0, #0
   30214:	bne	30224 <flatcc_verify_vector_field@@Base+0x16c>
   30218:	movw	r0, #16
   3021c:	str	r0, [fp, #-12]
   30220:	b	302e0 <flatcc_verify_vector_field@@Base+0x228>
   30224:	b	30228 <flatcc_verify_vector_field@@Base+0x170>
   30228:	ldr	r0, [sp, #20]
   3022c:	ldr	r1, [sp, #24]
   30230:	add	r0, r1, r0
   30234:	str	r0, [sp, #24]
   30238:	ldr	r0, [fp, #-16]
   3023c:	ldr	r1, [sp, #24]
   30240:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30244:	str	r0, [sp, #12]
   30248:	ldr	r0, [sp, #24]
   3024c:	add	r0, r0, #4
   30250:	str	r0, [sp, #24]
   30254:	ldr	r0, [sp, #12]
   30258:	ldr	r1, [fp, #16]
   3025c:	cmp	r0, r1
   30260:	movw	r0, #0
   30264:	movls	r0, #1
   30268:	and	r0, r0, #1
   3026c:	str	r0, [sp, #4]
   30270:	ldr	r0, [sp, #4]
   30274:	cmp	r0, #0
   30278:	bne	30288 <flatcc_verify_vector_field@@Base+0x1d0>
   3027c:	movw	r0, #25
   30280:	str	r0, [fp, #-12]
   30284:	b	302e0 <flatcc_verify_vector_field@@Base+0x228>
   30288:	b	3028c <flatcc_verify_vector_field@@Base+0x1d4>
   3028c:	b	30290 <flatcc_verify_vector_field@@Base+0x1d8>
   30290:	ldr	r0, [fp, #-20]	; 0xffffffec
   30294:	ldr	r1, [sp, #24]
   30298:	sub	r0, r0, r1
   3029c:	ldr	r1, [sp, #12]
   302a0:	ldr	r2, [fp, #8]
   302a4:	mul	r1, r1, r2
   302a8:	cmp	r0, r1
   302ac:	movw	r0, #0
   302b0:	movcs	r0, #1
   302b4:	and	r0, r0, #1
   302b8:	str	r0, [sp]
   302bc:	ldr	r0, [sp]
   302c0:	cmp	r0, #0
   302c4:	bne	302d4 <flatcc_verify_vector_field@@Base+0x21c>
   302c8:	movw	r0, #26
   302cc:	str	r0, [fp, #-12]
   302d0:	b	302e0 <flatcc_verify_vector_field@@Base+0x228>
   302d4:	b	302d8 <flatcc_verify_vector_field@@Base+0x220>
   302d8:	movw	r0, #0
   302dc:	str	r0, [fp, #-12]
   302e0:	ldr	r0, [fp, #-12]
   302e4:	sub	sp, fp, #8
   302e8:	pop	{r4, sl, fp, pc}

000302ec <flatcc_verify_string_vector_field@@Base>:
   302ec:	push	{fp, lr}
   302f0:	mov	fp, sp
   302f4:	sub	sp, sp, #40	; 0x28
   302f8:	str	r0, [fp, #-8]
   302fc:	strh	r1, [fp, #-10]
   30300:	str	r2, [fp, #-16]
   30304:	ldr	r0, [fp, #-8]
   30308:	ldrh	r1, [fp, #-10]
   3030c:	ldr	r2, [fp, #-16]
   30310:	uxth	r1, r1
   30314:	add	r3, sp, #20
   30318:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   3031c:	str	r0, [sp, #16]
   30320:	ldr	r0, [sp, #16]
   30324:	cmp	r0, #0
   30328:	bne	30338 <flatcc_verify_string_vector_field@@Base+0x4c>
   3032c:	ldr	r0, [sp, #20]
   30330:	cmp	r0, #0
   30334:	bne	30344 <flatcc_verify_string_vector_field@@Base+0x58>
   30338:	ldr	r0, [sp, #16]
   3033c:	str	r0, [fp, #-4]
   30340:	b	303a0 <flatcc_verify_string_vector_field@@Base+0xb4>
   30344:	b	30348 <flatcc_verify_string_vector_field@@Base+0x5c>
   30348:	ldr	r0, [fp, #-8]
   3034c:	ldr	r0, [r0]
   30350:	ldr	r1, [fp, #-8]
   30354:	ldr	r1, [r1, #4]
   30358:	ldr	r2, [sp, #20]
   3035c:	ldr	r3, [fp, #-8]
   30360:	ldr	r3, [r3]
   30364:	ldr	ip, [sp, #20]
   30368:	str	r0, [sp, #12]
   3036c:	mov	r0, r3
   30370:	str	r1, [sp, #8]
   30374:	mov	r1, ip
   30378:	str	r2, [sp, #4]
   3037c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30380:	ldr	r1, [sp, #12]
   30384:	str	r0, [sp]
   30388:	mov	r0, r1
   3038c:	ldr	r1, [sp, #8]
   30390:	ldr	r2, [sp, #4]
   30394:	ldr	r3, [sp]
   30398:	bl	303ac <flatcc_verify_string_vector_field@@Base+0xc0>
   3039c:	str	r0, [fp, #-4]
   303a0:	ldr	r0, [fp, #-4]
   303a4:	mov	sp, fp
   303a8:	pop	{fp, pc}
   303ac:	push	{fp, lr}
   303b0:	mov	fp, sp
   303b4:	sub	sp, sp, #80	; 0x50
   303b8:	ldr	ip, [pc, #424]	; 30568 <flatcc_verify_string_vector_field@@Base+0x27c>
   303bc:	str	r0, [fp, #-8]
   303c0:	str	r1, [fp, #-12]
   303c4:	str	r2, [fp, #-16]
   303c8:	str	r3, [fp, #-20]	; 0xffffffec
   303cc:	ldr	r0, [fp, #-8]
   303d0:	ldr	r1, [fp, #-12]
   303d4:	ldr	r2, [fp, #-16]
   303d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   303dc:	movw	lr, #4
   303e0:	str	lr, [sp]
   303e4:	movw	lr, #4
   303e8:	uxth	lr, lr
   303ec:	str	lr, [sp, #4]
   303f0:	str	ip, [sp, #8]
   303f4:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   303f8:	cmp	r0, #0
   303fc:	beq	30450 <flatcc_verify_string_vector_field@@Base+0x164>
   30400:	ldr	r0, [pc, #352]	; 30568 <flatcc_verify_string_vector_field@@Base+0x27c>
   30404:	ldr	r1, [fp, #-8]
   30408:	ldr	r2, [fp, #-12]
   3040c:	ldr	r3, [fp, #-16]
   30410:	ldr	ip, [fp, #-20]	; 0xffffffec
   30414:	str	r0, [fp, #-32]	; 0xffffffe0
   30418:	mov	r0, r1
   3041c:	mov	r1, r2
   30420:	mov	r2, r3
   30424:	mov	r3, ip
   30428:	movw	ip, #4
   3042c:	str	ip, [sp]
   30430:	movw	ip, #4
   30434:	uxth	ip, ip
   30438:	str	ip, [sp, #4]
   3043c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   30440:	str	ip, [sp, #8]
   30444:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   30448:	str	r0, [fp, #-4]
   3044c:	b	3055c <flatcc_verify_string_vector_field@@Base+0x270>
   30450:	ldr	r0, [fp, #-20]	; 0xffffffec
   30454:	ldr	r1, [fp, #-16]
   30458:	add	r0, r1, r0
   3045c:	str	r0, [fp, #-16]
   30460:	ldr	r0, [fp, #-8]
   30464:	ldr	r1, [fp, #-16]
   30468:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   3046c:	str	r0, [fp, #-28]	; 0xffffffe4
   30470:	ldr	r0, [fp, #-16]
   30474:	add	r0, r0, #4
   30478:	str	r0, [fp, #-16]
   3047c:	movw	r0, #0
   30480:	str	r0, [fp, #-24]	; 0xffffffe8
   30484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30488:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3048c:	cmp	r0, r1
   30490:	bcs	30554 <flatcc_verify_string_vector_field@@Base+0x268>
   30494:	ldr	r0, [fp, #-8]
   30498:	ldr	r1, [fp, #-12]
   3049c:	ldr	r2, [fp, #-16]
   304a0:	ldr	r3, [fp, #-8]
   304a4:	ldr	ip, [fp, #-16]
   304a8:	str	r0, [fp, #-36]	; 0xffffffdc
   304ac:	mov	r0, r3
   304b0:	str	r1, [sp, #40]	; 0x28
   304b4:	mov	r1, ip
   304b8:	str	r2, [sp, #36]	; 0x24
   304bc:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   304c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   304c4:	str	r0, [sp, #32]
   304c8:	mov	r0, r1
   304cc:	ldr	r1, [sp, #40]	; 0x28
   304d0:	ldr	r2, [sp, #36]	; 0x24
   304d4:	ldr	r3, [sp, #32]
   304d8:	bl	2ff70 <flatcc_verify_string_field@@Base+0x214>
   304dc:	cmp	r0, #0
   304e0:	beq	30534 <flatcc_verify_string_vector_field@@Base+0x248>
   304e4:	ldr	r0, [fp, #-8]
   304e8:	ldr	r1, [fp, #-12]
   304ec:	ldr	r2, [fp, #-16]
   304f0:	ldr	r3, [fp, #-8]
   304f4:	ldr	ip, [fp, #-16]
   304f8:	str	r0, [sp, #28]
   304fc:	mov	r0, r3
   30500:	str	r1, [sp, #24]
   30504:	mov	r1, ip
   30508:	str	r2, [sp, #20]
   3050c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30510:	ldr	r1, [sp, #28]
   30514:	str	r0, [sp, #16]
   30518:	mov	r0, r1
   3051c:	ldr	r1, [sp, #24]
   30520:	ldr	r2, [sp, #20]
   30524:	ldr	r3, [sp, #16]
   30528:	bl	2ff70 <flatcc_verify_string_field@@Base+0x214>
   3052c:	str	r0, [fp, #-4]
   30530:	b	3055c <flatcc_verify_string_vector_field@@Base+0x270>
   30534:	b	30538 <flatcc_verify_string_vector_field@@Base+0x24c>
   30538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3053c:	add	r0, r0, #1
   30540:	str	r0, [fp, #-24]	; 0xffffffe8
   30544:	ldr	r0, [fp, #-16]
   30548:	add	r0, r0, #4
   3054c:	str	r0, [fp, #-16]
   30550:	b	30484 <flatcc_verify_string_vector_field@@Base+0x198>
   30554:	movw	r0, #0
   30558:	str	r0, [fp, #-4]
   3055c:	ldr	r0, [fp, #-4]
   30560:	mov	sp, fp
   30564:	pop	{fp, pc}
   30568:	svccc	0x00ffffff

0003056c <flatcc_verify_table_field@@Base>:
   3056c:	push	{r4, r5, fp, lr}
   30570:	add	fp, sp, #8
   30574:	sub	sp, sp, #64	; 0x40
   30578:	str	r0, [fp, #-16]
   3057c:	strh	r1, [fp, #-18]	; 0xffffffee
   30580:	str	r2, [fp, #-24]	; 0xffffffe8
   30584:	str	r3, [fp, #-28]	; 0xffffffe4
   30588:	ldr	r0, [fp, #-16]
   3058c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   30590:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30594:	uxth	r1, r1
   30598:	sub	r3, fp, #32
   3059c:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   305a0:	str	r0, [sp, #36]	; 0x24
   305a4:	ldr	r0, [sp, #36]	; 0x24
   305a8:	cmp	r0, #0
   305ac:	bne	305bc <flatcc_verify_table_field@@Base+0x50>
   305b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   305b4:	cmp	r0, #0
   305b8:	bne	305c8 <flatcc_verify_table_field@@Base+0x5c>
   305bc:	ldr	r0, [sp, #36]	; 0x24
   305c0:	str	r0, [fp, #-12]
   305c4:	b	30650 <flatcc_verify_table_field@@Base+0xe4>
   305c8:	b	305cc <flatcc_verify_table_field@@Base+0x60>
   305cc:	ldr	r0, [fp, #-16]
   305d0:	ldr	r0, [r0]
   305d4:	ldr	r1, [fp, #-16]
   305d8:	ldr	r1, [r1, #4]
   305dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   305e0:	ldr	r3, [fp, #-16]
   305e4:	ldr	r3, [r3]
   305e8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   305ec:	str	r0, [sp, #32]
   305f0:	mov	r0, r3
   305f4:	str	r1, [sp, #28]
   305f8:	mov	r1, ip
   305fc:	str	r2, [sp, #24]
   30600:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30604:	ldr	r1, [fp, #-16]
   30608:	ldr	r1, [r1, #8]
   3060c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30610:	ldr	r3, [sp, #32]
   30614:	str	r0, [sp, #20]
   30618:	mov	r0, r3
   3061c:	ldr	ip, [sp, #28]
   30620:	str	r1, [sp, #16]
   30624:	mov	r1, ip
   30628:	ldr	lr, [sp, #24]
   3062c:	str	r2, [sp, #12]
   30630:	mov	r2, lr
   30634:	ldr	r3, [sp, #20]
   30638:	ldr	r4, [sp, #16]
   3063c:	str	r4, [sp]
   30640:	ldr	r5, [sp, #12]
   30644:	str	r5, [sp, #4]
   30648:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   3064c:	str	r0, [fp, #-12]
   30650:	ldr	r0, [fp, #-12]
   30654:	sub	sp, fp, #8
   30658:	pop	{r4, r5, fp, pc}
   3065c:	push	{fp, lr}
   30660:	mov	fp, sp
   30664:	sub	sp, sp, #104	; 0x68
   30668:	ldr	ip, [fp, #12]
   3066c:	ldr	lr, [fp, #8]
   30670:	str	r0, [fp, #-8]
   30674:	str	r1, [fp, #-12]
   30678:	str	r2, [fp, #-16]
   3067c:	str	r3, [fp, #-20]	; 0xffffffec
   30680:	ldr	r0, [fp, #8]
   30684:	sub	r0, r0, #1
   30688:	str	r0, [sp, #60]	; 0x3c
   3068c:	str	r0, [sp, #48]	; 0x30
   30690:	ldr	r0, [sp, #48]	; 0x30
   30694:	cmp	r0, #0
   30698:	bne	306a8 <flatcc_verify_table_field@@Base+0x13c>
   3069c:	movw	r0, #3
   306a0:	str	r0, [fp, #-4]
   306a4:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   306a8:	b	306ac <flatcc_verify_table_field@@Base+0x140>
   306ac:	b	306b0 <flatcc_verify_table_field@@Base+0x144>
   306b0:	ldr	r0, [fp, #-12]
   306b4:	ldr	r1, [fp, #-16]
   306b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   306bc:	bl	3201c <flatcc_verify_union_vector_field@@Base+0x56c>
   306c0:	str	r0, [sp, #44]	; 0x2c
   306c4:	ldr	r0, [sp, #44]	; 0x2c
   306c8:	cmp	r0, #0
   306cc:	bne	306dc <flatcc_verify_table_field@@Base+0x170>
   306d0:	movw	r0, #15
   306d4:	str	r0, [fp, #-4]
   306d8:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   306dc:	b	306e0 <flatcc_verify_table_field@@Base+0x174>
   306e0:	ldr	r0, [fp, #-16]
   306e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   306e8:	add	r0, r0, r1
   306ec:	str	r0, [sp, #68]	; 0x44
   306f0:	ldr	r0, [sp, #68]	; 0x44
   306f4:	ldr	r1, [fp, #-8]
   306f8:	ldr	r2, [sp, #68]	; 0x44
   306fc:	str	r0, [sp, #16]
   30700:	mov	r0, r1
   30704:	mov	r1, r2
   30708:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   3070c:	ldr	r1, [sp, #16]
   30710:	sub	r0, r1, r0
   30714:	str	r0, [fp, #-24]	; 0xffffffe8
   30718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3071c:	cmp	r0, #0
   30720:	movw	r0, #0
   30724:	str	r0, [sp, #12]
   30728:	blt	3074c <flatcc_verify_table_field@@Base+0x1e0>
   3072c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30730:	and	r0, r0, #1
   30734:	cmp	r0, #0
   30738:	movw	r0, #0
   3073c:	movne	r0, #1
   30740:	mvn	r1, #0
   30744:	eor	r0, r0, r1
   30748:	str	r0, [sp, #12]
   3074c:	ldr	r0, [sp, #12]
   30750:	and	r0, r0, #1
   30754:	str	r0, [sp, #40]	; 0x28
   30758:	ldr	r0, [sp, #40]	; 0x28
   3075c:	cmp	r0, #0
   30760:	bne	30770 <flatcc_verify_table_field@@Base+0x204>
   30764:	movw	r0, #29
   30768:	str	r0, [fp, #-4]
   3076c:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   30770:	b	30774 <flatcc_verify_table_field@@Base+0x208>
   30774:	b	30778 <flatcc_verify_table_field@@Base+0x20c>
   30778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3077c:	add	r0, r0, #2
   30780:	ldr	r1, [fp, #-12]
   30784:	cmp	r0, r1
   30788:	movw	r0, #0
   3078c:	movls	r0, #1
   30790:	and	r0, r0, #1
   30794:	str	r0, [sp, #36]	; 0x24
   30798:	ldr	r0, [sp, #36]	; 0x24
   3079c:	cmp	r0, #0
   307a0:	bne	307b0 <flatcc_verify_table_field@@Base+0x244>
   307a4:	movw	r0, #27
   307a8:	str	r0, [fp, #-4]
   307ac:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   307b0:	b	307b4 <flatcc_verify_table_field@@Base+0x248>
   307b4:	ldr	r0, [fp, #-8]
   307b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   307bc:	bl	32198 <flatcc_verify_union_vector_field@@Base+0x6e8>
   307c0:	strh	r0, [sp, #74]	; 0x4a
   307c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   307c8:	ldrh	r1, [sp, #74]	; 0x4a
   307cc:	add	r0, r0, r1
   307d0:	str	r0, [fp, #-28]	; 0xffffffe4
   307d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   307d8:	ldr	r1, [fp, #-12]
   307dc:	cmp	r0, r1
   307e0:	movw	r0, #0
   307e4:	str	r0, [sp, #8]
   307e8:	bhi	3080c <flatcc_verify_table_field@@Base+0x2a0>
   307ec:	ldrh	r0, [sp, #74]	; 0x4a
   307f0:	and	r0, r0, #1
   307f4:	cmp	r0, #0
   307f8:	movw	r0, #0
   307fc:	movne	r0, #1
   30800:	mvn	r1, #0
   30804:	eor	r0, r0, r1
   30808:	str	r0, [sp, #8]
   3080c:	ldr	r0, [sp, #8]
   30810:	and	r0, r0, #1
   30814:	str	r0, [sp, #32]
   30818:	ldr	r0, [sp, #32]
   3081c:	cmp	r0, #0
   30820:	bne	30830 <flatcc_verify_table_field@@Base+0x2c4>
   30824:	movw	r0, #30
   30828:	str	r0, [fp, #-4]
   3082c:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   30830:	b	30834 <flatcc_verify_table_field@@Base+0x2c8>
   30834:	b	30838 <flatcc_verify_table_field@@Base+0x2cc>
   30838:	movw	r0, #1
   3083c:	str	r0, [sp, #28]
   30840:	ldr	r0, [sp, #28]
   30844:	cmp	r0, #0
   30848:	bne	30858 <flatcc_verify_table_field@@Base+0x2ec>
   3084c:	movw	r0, #31
   30850:	str	r0, [fp, #-4]
   30854:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   30858:	b	3085c <flatcc_verify_table_field@@Base+0x2f0>
   3085c:	b	30860 <flatcc_verify_table_field@@Base+0x2f4>
   30860:	ldrh	r0, [sp, #74]	; 0x4a
   30864:	cmp	r0, #4
   30868:	movw	r0, #0
   3086c:	movcs	r0, #1
   30870:	and	r0, r0, #1
   30874:	str	r0, [sp, #24]
   30878:	ldr	r0, [sp, #24]
   3087c:	cmp	r0, #0
   30880:	bne	30890 <flatcc_verify_table_field@@Base+0x324>
   30884:	movw	r0, #28
   30888:	str	r0, [fp, #-4]
   3088c:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   30890:	b	30894 <flatcc_verify_table_field@@Base+0x328>
   30894:	ldr	r0, [fp, #-8]
   30898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3089c:	add	r1, r1, #2
   308a0:	bl	32198 <flatcc_verify_union_vector_field@@Base+0x6e8>
   308a4:	strh	r0, [sp, #72]	; 0x48
   308a8:	ldr	r0, [fp, #-12]
   308ac:	ldr	r1, [sp, #68]	; 0x44
   308b0:	sub	r0, r0, r1
   308b4:	ldrh	r1, [sp, #72]	; 0x48
   308b8:	cmp	r0, r1
   308bc:	movw	r0, #0
   308c0:	movcs	r0, #1
   308c4:	and	r0, r0, #1
   308c8:	str	r0, [sp, #20]
   308cc:	ldr	r0, [sp, #20]
   308d0:	cmp	r0, #0
   308d4:	bne	308e4 <flatcc_verify_table_field@@Base+0x378>
   308d8:	movw	r0, #20
   308dc:	str	r0, [fp, #-4]
   308e0:	b	30924 <flatcc_verify_table_field@@Base+0x3b8>
   308e4:	b	308e8 <flatcc_verify_table_field@@Base+0x37c>
   308e8:	ldr	r0, [fp, #-8]
   308ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   308f0:	add	r0, r0, r1
   308f4:	str	r0, [sp, #64]	; 0x40
   308f8:	ldr	r0, [fp, #-8]
   308fc:	str	r0, [sp, #52]	; 0x34
   30900:	ldr	r0, [fp, #-12]
   30904:	str	r0, [sp, #56]	; 0x38
   30908:	ldr	r0, [fp, #12]
   3090c:	add	r1, sp, #52	; 0x34
   30910:	str	r0, [sp, #4]
   30914:	mov	r0, r1
   30918:	ldr	r1, [sp, #4]
   3091c:	blx	r1
   30920:	str	r0, [fp, #-4]
   30924:	ldr	r0, [fp, #-4]
   30928:	mov	sp, fp
   3092c:	pop	{fp, pc}

00030930 <flatcc_verify_table_vector_field@@Base>:
   30930:	push	{r4, r5, fp, lr}
   30934:	add	fp, sp, #8
   30938:	sub	sp, sp, #64	; 0x40
   3093c:	str	r0, [fp, #-16]
   30940:	strh	r1, [fp, #-18]	; 0xffffffee
   30944:	str	r2, [fp, #-24]	; 0xffffffe8
   30948:	str	r3, [fp, #-28]	; 0xffffffe4
   3094c:	ldr	r0, [fp, #-16]
   30950:	ldrh	r1, [fp, #-18]	; 0xffffffee
   30954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30958:	uxth	r1, r1
   3095c:	sub	r3, fp, #32
   30960:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   30964:	str	r0, [sp, #36]	; 0x24
   30968:	ldr	r0, [sp, #36]	; 0x24
   3096c:	cmp	r0, #0
   30970:	bne	30980 <flatcc_verify_table_vector_field@@Base+0x50>
   30974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30978:	cmp	r0, #0
   3097c:	bne	3098c <flatcc_verify_table_vector_field@@Base+0x5c>
   30980:	ldr	r0, [sp, #36]	; 0x24
   30984:	str	r0, [fp, #-12]
   30988:	b	30a14 <flatcc_verify_table_vector_field@@Base+0xe4>
   3098c:	b	30990 <flatcc_verify_table_vector_field@@Base+0x60>
   30990:	ldr	r0, [fp, #-16]
   30994:	ldr	r0, [r0]
   30998:	ldr	r1, [fp, #-16]
   3099c:	ldr	r1, [r1, #4]
   309a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   309a4:	ldr	r3, [fp, #-16]
   309a8:	ldr	r3, [r3]
   309ac:	ldr	ip, [fp, #-32]	; 0xffffffe0
   309b0:	str	r0, [sp, #32]
   309b4:	mov	r0, r3
   309b8:	str	r1, [sp, #28]
   309bc:	mov	r1, ip
   309c0:	str	r2, [sp, #24]
   309c4:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   309c8:	ldr	r1, [fp, #-16]
   309cc:	ldr	r1, [r1, #8]
   309d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   309d4:	ldr	r3, [sp, #32]
   309d8:	str	r0, [sp, #20]
   309dc:	mov	r0, r3
   309e0:	ldr	ip, [sp, #28]
   309e4:	str	r1, [sp, #16]
   309e8:	mov	r1, ip
   309ec:	ldr	lr, [sp, #24]
   309f0:	str	r2, [sp, #12]
   309f4:	mov	r2, lr
   309f8:	ldr	r3, [sp, #20]
   309fc:	ldr	r4, [sp, #16]
   30a00:	str	r4, [sp]
   30a04:	ldr	r5, [sp, #12]
   30a08:	str	r5, [sp, #4]
   30a0c:	bl	30a20 <flatcc_verify_table_vector_field@@Base+0xf0>
   30a10:	str	r0, [fp, #-12]
   30a14:	ldr	r0, [fp, #-12]
   30a18:	sub	sp, fp, #8
   30a1c:	pop	{r4, r5, fp, pc}
   30a20:	push	{r4, r5, fp, lr}
   30a24:	add	fp, sp, #8
   30a28:	sub	sp, sp, #104	; 0x68
   30a2c:	ldr	ip, [fp, #12]
   30a30:	ldr	lr, [fp, #8]
   30a34:	str	r0, [fp, #-16]
   30a38:	str	r1, [fp, #-20]	; 0xffffffec
   30a3c:	str	r2, [fp, #-24]	; 0xffffffe8
   30a40:	str	r3, [fp, #-28]	; 0xffffffe4
   30a44:	ldr	r0, [fp, #8]
   30a48:	mvn	r1, #0
   30a4c:	add	r1, r0, r1
   30a50:	str	r1, [fp, #8]
   30a54:	cmp	r0, #0
   30a58:	movw	r0, #0
   30a5c:	movgt	r0, #1
   30a60:	and	r0, r0, #1
   30a64:	str	r0, [fp, #-40]	; 0xffffffd8
   30a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30a6c:	cmp	r0, #0
   30a70:	bne	30a80 <flatcc_verify_table_vector_field@@Base+0x150>
   30a74:	movw	r0, #3
   30a78:	str	r0, [fp, #-12]
   30a7c:	b	30c80 <flatcc_verify_table_vector_field@@Base+0x350>
   30a80:	b	30a84 <flatcc_verify_table_vector_field@@Base+0x154>
   30a84:	ldr	r0, [pc, #512]	; 30c8c <flatcc_verify_table_vector_field@@Base+0x35c>
   30a88:	ldr	r1, [fp, #-16]
   30a8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30a94:	ldr	ip, [fp, #-28]	; 0xffffffe4
   30a98:	str	r0, [fp, #-44]	; 0xffffffd4
   30a9c:	mov	r0, r1
   30aa0:	mov	r1, r2
   30aa4:	mov	r2, r3
   30aa8:	mov	r3, ip
   30aac:	movw	ip, #4
   30ab0:	str	ip, [sp]
   30ab4:	movw	ip, #4
   30ab8:	uxth	ip, ip
   30abc:	str	ip, [sp, #4]
   30ac0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   30ac4:	str	ip, [sp, #8]
   30ac8:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   30acc:	cmp	r0, #0
   30ad0:	beq	30b24 <flatcc_verify_table_vector_field@@Base+0x1f4>
   30ad4:	ldr	r0, [pc, #432]	; 30c8c <flatcc_verify_table_vector_field@@Base+0x35c>
   30ad8:	ldr	r1, [fp, #-16]
   30adc:	ldr	r2, [fp, #-20]	; 0xffffffec
   30ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ae4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   30ae8:	str	r0, [fp, #-48]	; 0xffffffd0
   30aec:	mov	r0, r1
   30af0:	mov	r1, r2
   30af4:	mov	r2, r3
   30af8:	mov	r3, ip
   30afc:	movw	ip, #4
   30b00:	str	ip, [sp]
   30b04:	movw	ip, #4
   30b08:	uxth	ip, ip
   30b0c:	str	ip, [sp, #4]
   30b10:	ldr	ip, [fp, #-48]	; 0xffffffd0
   30b14:	str	ip, [sp, #8]
   30b18:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   30b1c:	str	r0, [fp, #-12]
   30b20:	b	30c80 <flatcc_verify_table_vector_field@@Base+0x350>
   30b24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30b28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b2c:	add	r0, r1, r0
   30b30:	str	r0, [fp, #-24]	; 0xffffffe8
   30b34:	ldr	r0, [fp, #-16]
   30b38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30b3c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30b40:	str	r0, [fp, #-36]	; 0xffffffdc
   30b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30b48:	add	r0, r0, #4
   30b4c:	str	r0, [fp, #-24]	; 0xffffffe8
   30b50:	movw	r0, #0
   30b54:	str	r0, [fp, #-32]	; 0xffffffe0
   30b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30b5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30b60:	cmp	r0, r1
   30b64:	bcs	30c78 <flatcc_verify_table_vector_field@@Base+0x348>
   30b68:	ldr	r0, [fp, #-16]
   30b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30b74:	ldr	r3, [fp, #-16]
   30b78:	ldr	ip, [fp, #-24]	; 0xffffffe8
   30b7c:	str	r0, [fp, #-52]	; 0xffffffcc
   30b80:	mov	r0, r3
   30b84:	str	r1, [sp, #56]	; 0x38
   30b88:	mov	r1, ip
   30b8c:	str	r2, [sp, #52]	; 0x34
   30b90:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30b94:	ldr	r1, [fp, #8]
   30b98:	ldr	r2, [fp, #12]
   30b9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30ba0:	str	r0, [sp, #48]	; 0x30
   30ba4:	mov	r0, r3
   30ba8:	ldr	ip, [sp, #56]	; 0x38
   30bac:	str	r1, [sp, #44]	; 0x2c
   30bb0:	mov	r1, ip
   30bb4:	ldr	lr, [sp, #52]	; 0x34
   30bb8:	str	r2, [sp, #40]	; 0x28
   30bbc:	mov	r2, lr
   30bc0:	ldr	r3, [sp, #48]	; 0x30
   30bc4:	ldr	r4, [sp, #44]	; 0x2c
   30bc8:	str	r4, [sp]
   30bcc:	ldr	r5, [sp, #40]	; 0x28
   30bd0:	str	r5, [sp, #4]
   30bd4:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   30bd8:	cmp	r0, #0
   30bdc:	beq	30c58 <flatcc_verify_table_vector_field@@Base+0x328>
   30be0:	ldr	r0, [fp, #-16]
   30be4:	ldr	r1, [fp, #-20]	; 0xffffffec
   30be8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30bec:	ldr	r3, [fp, #-16]
   30bf0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   30bf4:	str	r0, [sp, #36]	; 0x24
   30bf8:	mov	r0, r3
   30bfc:	str	r1, [sp, #32]
   30c00:	mov	r1, ip
   30c04:	str	r2, [sp, #28]
   30c08:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   30c0c:	ldr	r1, [fp, #8]
   30c10:	ldr	r2, [fp, #12]
   30c14:	ldr	r3, [sp, #36]	; 0x24
   30c18:	str	r0, [sp, #24]
   30c1c:	mov	r0, r3
   30c20:	ldr	ip, [sp, #32]
   30c24:	str	r1, [sp, #20]
   30c28:	mov	r1, ip
   30c2c:	ldr	lr, [sp, #28]
   30c30:	str	r2, [sp, #16]
   30c34:	mov	r2, lr
   30c38:	ldr	r3, [sp, #24]
   30c3c:	ldr	r4, [sp, #20]
   30c40:	str	r4, [sp]
   30c44:	ldr	r5, [sp, #16]
   30c48:	str	r5, [sp, #4]
   30c4c:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   30c50:	str	r0, [fp, #-12]
   30c54:	b	30c80 <flatcc_verify_table_vector_field@@Base+0x350>
   30c58:	b	30c5c <flatcc_verify_table_vector_field@@Base+0x32c>
   30c5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30c60:	add	r0, r0, #1
   30c64:	str	r0, [fp, #-32]	; 0xffffffe0
   30c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30c6c:	add	r0, r0, #4
   30c70:	str	r0, [fp, #-24]	; 0xffffffe8
   30c74:	b	30b58 <flatcc_verify_table_vector_field@@Base+0x228>
   30c78:	movw	r0, #0
   30c7c:	str	r0, [fp, #-12]
   30c80:	ldr	r0, [fp, #-12]
   30c84:	sub	sp, fp, #8
   30c88:	pop	{r4, r5, fp, pc}
   30c8c:	svccc	0x00ffffff

00030c90 <flatcc_verify_union_table@@Base>:
   30c90:	push	{fp, lr}
   30c94:	mov	fp, sp
   30c98:	sub	sp, sp, #16
   30c9c:	str	r0, [fp, #-4]
   30ca0:	str	r1, [sp, #8]
   30ca4:	ldr	r0, [fp, #-4]
   30ca8:	ldr	r0, [r0]
   30cac:	ldr	r1, [fp, #-4]
   30cb0:	ldr	r1, [r1, #4]
   30cb4:	ldr	r2, [fp, #-4]
   30cb8:	ldr	r2, [r2, #16]
   30cbc:	ldr	r3, [fp, #-4]
   30cc0:	ldr	r3, [r3, #20]
   30cc4:	ldr	ip, [fp, #-4]
   30cc8:	ldr	ip, [ip, #8]
   30ccc:	ldr	lr, [sp, #8]
   30cd0:	str	ip, [sp]
   30cd4:	str	lr, [sp, #4]
   30cd8:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   30cdc:	mov	sp, fp
   30ce0:	pop	{fp, pc}

00030ce4 <flatcc_verify_union_struct@@Base>:
   30ce4:	push	{fp, lr}
   30ce8:	mov	fp, sp
   30cec:	sub	sp, sp, #16
   30cf0:	str	r0, [fp, #-4]
   30cf4:	str	r1, [sp, #8]
   30cf8:	strh	r2, [sp, #6]
   30cfc:	ldr	r0, [fp, #-4]
   30d00:	ldr	r0, [r0, #4]
   30d04:	ldr	r1, [fp, #-4]
   30d08:	ldr	r1, [r1, #16]
   30d0c:	ldr	r2, [fp, #-4]
   30d10:	ldr	r2, [r2, #20]
   30d14:	ldr	r3, [sp, #8]
   30d18:	ldrh	ip, [sp, #6]
   30d1c:	str	ip, [sp]
   30d20:	bl	30d2c <flatcc_verify_union_struct@@Base+0x48>
   30d24:	mov	sp, fp
   30d28:	pop	{fp, pc}
   30d2c:	sub	sp, sp, #36	; 0x24
   30d30:	ldr	ip, [sp, #36]	; 0x24
   30d34:	str	r0, [sp, #28]
   30d38:	str	r1, [sp, #24]
   30d3c:	str	r2, [sp, #20]
   30d40:	str	r3, [sp, #16]
   30d44:	strh	ip, [sp, #14]
   30d48:	ldr	r0, [sp, #20]
   30d4c:	cmp	r0, #0
   30d50:	beq	30d6c <flatcc_verify_union_struct@@Base+0x88>
   30d54:	ldr	r0, [sp, #24]
   30d58:	ldr	r1, [sp, #20]
   30d5c:	add	r0, r0, r1
   30d60:	ldr	r1, [sp, #28]
   30d64:	cmp	r0, r1
   30d68:	bls	30d78 <flatcc_verify_union_struct@@Base+0x94>
   30d6c:	movw	r0, #18
   30d70:	str	r0, [sp, #32]
   30d74:	b	30e60 <flatcc_verify_union_struct@@Base+0x17c>
   30d78:	ldr	r0, [sp, #20]
   30d7c:	ldr	r1, [sp, #24]
   30d80:	add	r0, r1, r0
   30d84:	str	r0, [sp, #24]
   30d88:	ldr	r0, [sp, #24]
   30d8c:	ldr	r1, [sp, #16]
   30d90:	add	r0, r0, r1
   30d94:	ldr	r1, [sp, #24]
   30d98:	cmp	r0, r1
   30d9c:	movw	r0, #0
   30da0:	movcs	r0, #1
   30da4:	and	r0, r0, #1
   30da8:	str	r0, [sp, #8]
   30dac:	ldr	r0, [sp, #8]
   30db0:	cmp	r0, #0
   30db4:	bne	30dc4 <flatcc_verify_union_struct@@Base+0xe0>
   30db8:	movw	r0, #10
   30dbc:	str	r0, [sp, #32]
   30dc0:	b	30e60 <flatcc_verify_union_struct@@Base+0x17c>
   30dc4:	b	30dc8 <flatcc_verify_union_struct@@Base+0xe4>
   30dc8:	b	30dcc <flatcc_verify_union_struct@@Base+0xe8>
   30dcc:	ldr	r0, [sp, #24]
   30dd0:	ldr	r1, [sp, #16]
   30dd4:	add	r0, r0, r1
   30dd8:	ldr	r1, [sp, #28]
   30ddc:	cmp	r0, r1
   30de0:	movw	r0, #0
   30de4:	movls	r0, #1
   30de8:	and	r0, r0, #1
   30dec:	str	r0, [sp, #4]
   30df0:	ldr	r0, [sp, #4]
   30df4:	cmp	r0, #0
   30df8:	bne	30e08 <flatcc_verify_union_struct@@Base+0x124>
   30dfc:	movw	r0, #9
   30e00:	str	r0, [sp, #32]
   30e04:	b	30e60 <flatcc_verify_union_struct@@Base+0x17c>
   30e08:	b	30e0c <flatcc_verify_union_struct@@Base+0x128>
   30e0c:	b	30e10 <flatcc_verify_union_struct@@Base+0x12c>
   30e10:	ldr	r0, [sp, #24]
   30e14:	ldrh	r1, [sp, #14]
   30e18:	sub	r1, r1, #1
   30e1c:	and	r0, r0, r1
   30e20:	cmp	r0, #0
   30e24:	movw	r0, #0
   30e28:	movne	r0, #1
   30e2c:	mvn	r1, #0
   30e30:	eor	r0, r0, r1
   30e34:	and	r0, r0, #1
   30e38:	str	r0, [sp]
   30e3c:	ldr	r0, [sp]
   30e40:	cmp	r0, #0
   30e44:	bne	30e54 <flatcc_verify_union_struct@@Base+0x170>
   30e48:	movw	r0, #11
   30e4c:	str	r0, [sp, #32]
   30e50:	b	30e60 <flatcc_verify_union_struct@@Base+0x17c>
   30e54:	b	30e58 <flatcc_verify_union_struct@@Base+0x174>
   30e58:	movw	r0, #0
   30e5c:	str	r0, [sp, #32]
   30e60:	ldr	r0, [sp, #32]
   30e64:	add	sp, sp, #36	; 0x24
   30e68:	bx	lr

00030e6c <flatcc_verify_union_string@@Base>:
   30e6c:	push	{fp, lr}
   30e70:	mov	fp, sp
   30e74:	sub	sp, sp, #8
   30e78:	str	r0, [sp, #4]
   30e7c:	ldr	r0, [sp, #4]
   30e80:	ldr	r0, [r0]
   30e84:	ldr	r1, [sp, #4]
   30e88:	ldr	r1, [r1, #4]
   30e8c:	ldr	r2, [sp, #4]
   30e90:	ldr	r2, [r2, #16]
   30e94:	ldr	r3, [sp, #4]
   30e98:	ldr	r3, [r3, #20]
   30e9c:	bl	2ff70 <flatcc_verify_string_field@@Base+0x214>
   30ea0:	mov	sp, fp
   30ea4:	pop	{fp, pc}

00030ea8 <flatcc_verify_buffer_header@@Base>:
   30ea8:	push	{fp, lr}
   30eac:	mov	fp, sp
   30eb0:	sub	sp, sp, #48	; 0x30
   30eb4:	str	r0, [fp, #-8]
   30eb8:	str	r1, [fp, #-12]
   30ebc:	str	r2, [fp, #-16]
   30ec0:	ldr	r0, [fp, #-8]
   30ec4:	and	r0, r0, #3
   30ec8:	cmp	r0, #0
   30ecc:	movw	r0, #0
   30ed0:	movne	r0, #1
   30ed4:	mvn	r1, #0
   30ed8:	eor	r0, r0, r1
   30edc:	and	r0, r0, #1
   30ee0:	str	r0, [sp, #20]
   30ee4:	ldr	r0, [sp, #20]
   30ee8:	cmp	r0, #0
   30eec:	bne	30efc <flatcc_verify_buffer_header@@Base+0x54>
   30ef0:	movw	r0, #5
   30ef4:	str	r0, [fp, #-4]
   30ef8:	b	30ffc <flatcc_verify_buffer_header@@Base+0x154>
   30efc:	b	30f00 <flatcc_verify_buffer_header@@Base+0x58>
   30f00:	b	30f04 <flatcc_verify_buffer_header@@Base+0x5c>
   30f04:	ldr	r0, [fp, #-12]
   30f08:	cmn	r0, #9
   30f0c:	movw	r0, #0
   30f10:	movls	r0, #1
   30f14:	and	r0, r0, #1
   30f18:	str	r0, [sp, #16]
   30f1c:	ldr	r0, [sp, #16]
   30f20:	cmp	r0, #0
   30f24:	bne	30f34 <flatcc_verify_buffer_header@@Base+0x8c>
   30f28:	movw	r0, #6
   30f2c:	str	r0, [fp, #-4]
   30f30:	b	30ffc <flatcc_verify_buffer_header@@Base+0x154>
   30f34:	b	30f38 <flatcc_verify_buffer_header@@Base+0x90>
   30f38:	b	30f3c <flatcc_verify_buffer_header@@Base+0x94>
   30f3c:	ldr	r0, [fp, #-12]
   30f40:	cmp	r0, #8
   30f44:	movw	r0, #0
   30f48:	movcs	r0, #1
   30f4c:	and	r0, r0, #1
   30f50:	str	r0, [sp, #12]
   30f54:	ldr	r0, [sp, #12]
   30f58:	cmp	r0, #0
   30f5c:	bne	30f6c <flatcc_verify_buffer_header@@Base+0xc4>
   30f60:	movw	r0, #1
   30f64:	str	r0, [fp, #-4]
   30f68:	b	30ffc <flatcc_verify_buffer_header@@Base+0x154>
   30f6c:	b	30f70 <flatcc_verify_buffer_header@@Base+0xc8>
   30f70:	ldr	r0, [fp, #-16]
   30f74:	movw	r1, #0
   30f78:	cmp	r0, r1
   30f7c:	beq	30ff4 <flatcc_verify_buffer_header@@Base+0x14c>
   30f80:	ldr	r0, [fp, #-16]
   30f84:	bl	31008 <flatcc_verify_buffer_header@@Base+0x160>
   30f88:	str	r0, [sp, #24]
   30f8c:	ldr	r0, [fp, #-8]
   30f90:	movw	r1, #4
   30f94:	bl	31048 <flatcc_verify_buffer_header@@Base+0x1a0>
   30f98:	str	r0, [fp, #-20]	; 0xffffffec
   30f9c:	ldr	r0, [sp, #24]
   30fa0:	cmp	r0, #0
   30fa4:	movw	r0, #1
   30fa8:	str	r0, [sp, #4]
   30fac:	beq	30fc8 <flatcc_verify_buffer_header@@Base+0x120>
   30fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   30fb4:	ldr	r1, [sp, #24]
   30fb8:	cmp	r0, r1
   30fbc:	movw	r0, #0
   30fc0:	moveq	r0, #1
   30fc4:	str	r0, [sp, #4]
   30fc8:	ldr	r0, [sp, #4]
   30fcc:	and	r0, r0, #1
   30fd0:	str	r0, [sp, #8]
   30fd4:	ldr	r0, [sp, #8]
   30fd8:	cmp	r0, #0
   30fdc:	bne	30fec <flatcc_verify_buffer_header@@Base+0x144>
   30fe0:	movw	r0, #2
   30fe4:	str	r0, [fp, #-4]
   30fe8:	b	30ffc <flatcc_verify_buffer_header@@Base+0x154>
   30fec:	b	30ff0 <flatcc_verify_buffer_header@@Base+0x148>
   30ff0:	b	30ff4 <flatcc_verify_buffer_header@@Base+0x14c>
   30ff4:	movw	r0, #0
   30ff8:	str	r0, [fp, #-4]
   30ffc:	ldr	r0, [fp, #-4]
   31000:	mov	sp, fp
   31004:	pop	{fp, pc}
   31008:	push	{fp, lr}
   3100c:	mov	fp, sp
   31010:	sub	sp, sp, #16
   31014:	str	r0, [fp, #-4]
   31018:	movw	r0, #0
   3101c:	str	r0, [sp, #8]
   31020:	add	r0, sp, #8
   31024:	ldr	r1, [fp, #-4]
   31028:	movw	r2, #4
   3102c:	bl	14ecc <strncpy@plt>
   31030:	ldr	r1, [sp, #8]
   31034:	str	r0, [sp, #4]
   31038:	mov	r0, r1
   3103c:	bl	32204 <flatcc_verify_union_vector_field@@Base+0x754>
   31040:	mov	sp, fp
   31044:	pop	{fp, pc}
   31048:	push	{fp, lr}
   3104c:	mov	fp, sp
   31050:	sub	sp, sp, #8
   31054:	str	r0, [sp, #4]
   31058:	str	r1, [sp]
   3105c:	ldr	r0, [sp, #4]
   31060:	ldr	r1, [sp]
   31064:	add	r0, r0, r1
   31068:	bl	32218 <flatcc_verify_union_vector_field@@Base+0x768>
   3106c:	mov	sp, fp
   31070:	pop	{fp, pc}

00031074 <flatcc_verify_typed_buffer_header@@Base>:
   31074:	push	{fp, lr}
   31078:	mov	fp, sp
   3107c:	sub	sp, sp, #48	; 0x30
   31080:	str	r0, [fp, #-8]
   31084:	str	r1, [fp, #-12]
   31088:	str	r2, [fp, #-16]
   3108c:	ldr	r0, [fp, #-8]
   31090:	and	r0, r0, #3
   31094:	cmp	r0, #0
   31098:	movw	r0, #0
   3109c:	movne	r0, #1
   310a0:	mvn	r1, #0
   310a4:	eor	r0, r0, r1
   310a8:	and	r0, r0, #1
   310ac:	str	r0, [sp, #20]
   310b0:	ldr	r0, [sp, #20]
   310b4:	cmp	r0, #0
   310b8:	bne	310c8 <flatcc_verify_typed_buffer_header@@Base+0x54>
   310bc:	movw	r0, #5
   310c0:	str	r0, [fp, #-4]
   310c4:	b	311c0 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   310c8:	b	310cc <flatcc_verify_typed_buffer_header@@Base+0x58>
   310cc:	b	310d0 <flatcc_verify_typed_buffer_header@@Base+0x5c>
   310d0:	ldr	r0, [fp, #-12]
   310d4:	cmn	r0, #9
   310d8:	movw	r0, #0
   310dc:	movls	r0, #1
   310e0:	and	r0, r0, #1
   310e4:	str	r0, [sp, #16]
   310e8:	ldr	r0, [sp, #16]
   310ec:	cmp	r0, #0
   310f0:	bne	31100 <flatcc_verify_typed_buffer_header@@Base+0x8c>
   310f4:	movw	r0, #6
   310f8:	str	r0, [fp, #-4]
   310fc:	b	311c0 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31100:	b	31104 <flatcc_verify_typed_buffer_header@@Base+0x90>
   31104:	b	31108 <flatcc_verify_typed_buffer_header@@Base+0x94>
   31108:	ldr	r0, [fp, #-12]
   3110c:	cmp	r0, #8
   31110:	movw	r0, #0
   31114:	movcs	r0, #1
   31118:	and	r0, r0, #1
   3111c:	str	r0, [sp, #12]
   31120:	ldr	r0, [sp, #12]
   31124:	cmp	r0, #0
   31128:	bne	31138 <flatcc_verify_typed_buffer_header@@Base+0xc4>
   3112c:	movw	r0, #1
   31130:	str	r0, [fp, #-4]
   31134:	b	311c0 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   31138:	b	3113c <flatcc_verify_typed_buffer_header@@Base+0xc8>
   3113c:	ldr	r0, [fp, #-16]
   31140:	cmp	r0, #0
   31144:	beq	311b8 <flatcc_verify_typed_buffer_header@@Base+0x144>
   31148:	ldr	r0, [fp, #-16]
   3114c:	str	r0, [sp, #24]
   31150:	ldr	r0, [fp, #-8]
   31154:	movw	r1, #4
   31158:	bl	31048 <flatcc_verify_buffer_header@@Base+0x1a0>
   3115c:	str	r0, [fp, #-20]	; 0xffffffec
   31160:	ldr	r0, [sp, #24]
   31164:	cmp	r0, #0
   31168:	movw	r0, #1
   3116c:	str	r0, [sp, #4]
   31170:	beq	3118c <flatcc_verify_typed_buffer_header@@Base+0x118>
   31174:	ldr	r0, [fp, #-20]	; 0xffffffec
   31178:	ldr	r1, [sp, #24]
   3117c:	cmp	r0, r1
   31180:	movw	r0, #0
   31184:	moveq	r0, #1
   31188:	str	r0, [sp, #4]
   3118c:	ldr	r0, [sp, #4]
   31190:	and	r0, r0, #1
   31194:	str	r0, [sp, #8]
   31198:	ldr	r0, [sp, #8]
   3119c:	cmp	r0, #0
   311a0:	bne	311b0 <flatcc_verify_typed_buffer_header@@Base+0x13c>
   311a4:	movw	r0, #2
   311a8:	str	r0, [fp, #-4]
   311ac:	b	311c0 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   311b0:	b	311b4 <flatcc_verify_typed_buffer_header@@Base+0x140>
   311b4:	b	311b8 <flatcc_verify_typed_buffer_header@@Base+0x144>
   311b8:	movw	r0, #0
   311bc:	str	r0, [fp, #-4]
   311c0:	ldr	r0, [fp, #-4]
   311c4:	mov	sp, fp
   311c8:	pop	{fp, pc}

000311cc <flatcc_verify_struct_as_root@@Base>:
   311cc:	push	{fp, lr}
   311d0:	mov	fp, sp
   311d4:	sub	sp, sp, #40	; 0x28
   311d8:	ldr	ip, [fp, #8]
   311dc:	str	r0, [fp, #-8]
   311e0:	str	r1, [fp, #-12]
   311e4:	str	r2, [fp, #-16]
   311e8:	str	r3, [sp, #20]
   311ec:	strh	ip, [sp, #18]
   311f0:	ldr	r0, [fp, #-8]
   311f4:	ldr	r1, [fp, #-12]
   311f8:	ldr	r2, [fp, #-16]
   311fc:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   31200:	cmp	r0, #0
   31204:	beq	31220 <flatcc_verify_struct_as_root@@Base+0x54>
   31208:	ldr	r0, [fp, #-8]
   3120c:	ldr	r1, [fp, #-12]
   31210:	ldr	r2, [fp, #-16]
   31214:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   31218:	str	r0, [fp, #-4]
   3121c:	b	31260 <flatcc_verify_struct_as_root@@Base+0x94>
   31220:	ldr	r0, [fp, #-12]
   31224:	ldr	r1, [fp, #-8]
   31228:	str	r0, [sp, #12]
   3122c:	mov	r0, r1
   31230:	movw	r1, #0
   31234:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31238:	ldr	r3, [sp, #20]
   3123c:	ldr	r1, [sp, #12]
   31240:	str	r0, [sp, #8]
   31244:	mov	r0, r1
   31248:	movw	r1, #0
   3124c:	ldr	r2, [sp, #8]
   31250:	ldrh	ip, [sp, #18]
   31254:	str	ip, [sp]
   31258:	bl	30d2c <flatcc_verify_union_struct@@Base+0x48>
   3125c:	str	r0, [fp, #-4]
   31260:	ldr	r0, [fp, #-4]
   31264:	mov	sp, fp
   31268:	pop	{fp, pc}

0003126c <flatcc_verify_struct_as_typed_root@@Base>:
   3126c:	push	{fp, lr}
   31270:	mov	fp, sp
   31274:	sub	sp, sp, #40	; 0x28
   31278:	ldr	ip, [fp, #8]
   3127c:	str	r0, [fp, #-8]
   31280:	str	r1, [fp, #-12]
   31284:	str	r2, [fp, #-16]
   31288:	str	r3, [sp, #20]
   3128c:	strh	ip, [sp, #18]
   31290:	ldr	r0, [fp, #-8]
   31294:	ldr	r1, [fp, #-12]
   31298:	ldr	r2, [fp, #-16]
   3129c:	bl	31074 <flatcc_verify_typed_buffer_header@@Base>
   312a0:	cmp	r0, #0
   312a4:	beq	312c0 <flatcc_verify_struct_as_typed_root@@Base+0x54>
   312a8:	ldr	r0, [fp, #-8]
   312ac:	ldr	r1, [fp, #-12]
   312b0:	ldr	r2, [fp, #-16]
   312b4:	bl	31074 <flatcc_verify_typed_buffer_header@@Base>
   312b8:	str	r0, [fp, #-4]
   312bc:	b	31300 <flatcc_verify_struct_as_typed_root@@Base+0x94>
   312c0:	ldr	r0, [fp, #-12]
   312c4:	ldr	r1, [fp, #-8]
   312c8:	str	r0, [sp, #12]
   312cc:	mov	r0, r1
   312d0:	movw	r1, #0
   312d4:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   312d8:	ldr	r3, [sp, #20]
   312dc:	ldr	r1, [sp, #12]
   312e0:	str	r0, [sp, #8]
   312e4:	mov	r0, r1
   312e8:	movw	r1, #0
   312ec:	ldr	r2, [sp, #8]
   312f0:	ldrh	ip, [sp, #18]
   312f4:	str	ip, [sp]
   312f8:	bl	30d2c <flatcc_verify_union_struct@@Base+0x48>
   312fc:	str	r0, [fp, #-4]
   31300:	ldr	r0, [fp, #-4]
   31304:	mov	sp, fp
   31308:	pop	{fp, pc}

0003130c <flatcc_verify_table_as_root@@Base>:
   3130c:	push	{fp, lr}
   31310:	mov	fp, sp
   31314:	sub	sp, sp, #48	; 0x30
   31318:	str	r0, [fp, #-8]
   3131c:	str	r1, [fp, #-12]
   31320:	str	r2, [fp, #-16]
   31324:	str	r3, [fp, #-20]	; 0xffffffec
   31328:	ldr	r0, [fp, #-8]
   3132c:	ldr	r1, [fp, #-12]
   31330:	ldr	r2, [fp, #-16]
   31334:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   31338:	cmp	r0, #0
   3133c:	beq	31358 <flatcc_verify_table_as_root@@Base+0x4c>
   31340:	ldr	r0, [fp, #-8]
   31344:	ldr	r1, [fp, #-12]
   31348:	ldr	r2, [fp, #-16]
   3134c:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   31350:	str	r0, [fp, #-4]
   31354:	b	313b8 <flatcc_verify_table_as_root@@Base+0xac>
   31358:	ldr	r0, [fp, #-8]
   3135c:	ldr	r1, [fp, #-12]
   31360:	ldr	r2, [fp, #-8]
   31364:	str	r0, [sp, #24]
   31368:	mov	r0, r2
   3136c:	movw	r2, #0
   31370:	str	r1, [sp, #20]
   31374:	mov	r1, r2
   31378:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   3137c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31380:	ldr	r2, [sp, #24]
   31384:	str	r0, [sp, #16]
   31388:	mov	r0, r2
   3138c:	ldr	r3, [sp, #20]
   31390:	str	r1, [sp, #12]
   31394:	mov	r1, r3
   31398:	movw	r2, #0
   3139c:	ldr	r3, [sp, #16]
   313a0:	movw	ip, #100	; 0x64
   313a4:	str	ip, [sp]
   313a8:	ldr	ip, [sp, #12]
   313ac:	str	ip, [sp, #4]
   313b0:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   313b4:	str	r0, [fp, #-4]
   313b8:	ldr	r0, [fp, #-4]
   313bc:	mov	sp, fp
   313c0:	pop	{fp, pc}

000313c4 <flatcc_verify_table_as_typed_root@@Base>:
   313c4:	push	{fp, lr}
   313c8:	mov	fp, sp
   313cc:	sub	sp, sp, #48	; 0x30
   313d0:	str	r0, [fp, #-8]
   313d4:	str	r1, [fp, #-12]
   313d8:	str	r2, [fp, #-16]
   313dc:	str	r3, [fp, #-20]	; 0xffffffec
   313e0:	ldr	r0, [fp, #-8]
   313e4:	ldr	r1, [fp, #-12]
   313e8:	ldr	r2, [fp, #-16]
   313ec:	bl	31074 <flatcc_verify_typed_buffer_header@@Base>
   313f0:	cmp	r0, #0
   313f4:	beq	31410 <flatcc_verify_table_as_typed_root@@Base+0x4c>
   313f8:	ldr	r0, [fp, #-8]
   313fc:	ldr	r1, [fp, #-12]
   31400:	ldr	r2, [fp, #-16]
   31404:	bl	31074 <flatcc_verify_typed_buffer_header@@Base>
   31408:	str	r0, [fp, #-4]
   3140c:	b	31470 <flatcc_verify_table_as_typed_root@@Base+0xac>
   31410:	ldr	r0, [fp, #-8]
   31414:	ldr	r1, [fp, #-12]
   31418:	ldr	r2, [fp, #-8]
   3141c:	str	r0, [sp, #24]
   31420:	mov	r0, r2
   31424:	movw	r2, #0
   31428:	str	r1, [sp, #20]
   3142c:	mov	r1, r2
   31430:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31434:	ldr	r1, [fp, #-20]	; 0xffffffec
   31438:	ldr	r2, [sp, #24]
   3143c:	str	r0, [sp, #16]
   31440:	mov	r0, r2
   31444:	ldr	r3, [sp, #20]
   31448:	str	r1, [sp, #12]
   3144c:	mov	r1, r3
   31450:	movw	r2, #0
   31454:	ldr	r3, [sp, #16]
   31458:	movw	ip, #100	; 0x64
   3145c:	str	ip, [sp]
   31460:	ldr	ip, [sp, #12]
   31464:	str	ip, [sp, #4]
   31468:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   3146c:	str	r0, [fp, #-4]
   31470:	ldr	r0, [fp, #-4]
   31474:	mov	sp, fp
   31478:	pop	{fp, pc}

0003147c <flatcc_verify_struct_as_nested_root@@Base>:
   3147c:	push	{fp, lr}
   31480:	mov	fp, sp
   31484:	sub	sp, sp, #48	; 0x30
   31488:	ldr	ip, [fp, #12]
   3148c:	ldr	lr, [fp, #8]
   31490:	str	r0, [fp, #-8]
   31494:	strh	r1, [fp, #-10]
   31498:	str	r2, [fp, #-16]
   3149c:	str	r3, [fp, #-20]	; 0xffffffec
   314a0:	strh	ip, [fp, #-22]	; 0xffffffea
   314a4:	ldr	r0, [fp, #-8]
   314a8:	ldrh	r1, [fp, #-10]
   314ac:	ldr	r2, [fp, #-16]
   314b0:	ldrh	r3, [fp, #-22]	; 0xffffffea
   314b4:	uxth	r1, r1
   314b8:	movw	ip, #1
   314bc:	uxth	ip, ip
   314c0:	str	ip, [sp]
   314c4:	mvn	ip, #0
   314c8:	str	ip, [sp, #4]
   314cc:	str	lr, [sp, #12]
   314d0:	bl	300b8 <flatcc_verify_vector_field@@Base>
   314d4:	cmp	r0, #0
   314d8:	beq	31510 <flatcc_verify_struct_as_nested_root@@Base+0x94>
   314dc:	ldr	r0, [fp, #-8]
   314e0:	ldrh	r1, [fp, #-10]
   314e4:	ldr	r2, [fp, #-16]
   314e8:	ldrh	r3, [fp, #-22]	; 0xffffffea
   314ec:	uxth	r1, r1
   314f0:	movw	ip, #1
   314f4:	uxth	ip, ip
   314f8:	str	ip, [sp]
   314fc:	mvn	ip, #0
   31500:	str	ip, [sp, #4]
   31504:	bl	300b8 <flatcc_verify_vector_field@@Base>
   31508:	str	r0, [fp, #-4]
   3150c:	b	31598 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   31510:	ldr	r0, [fp, #-8]
   31514:	ldrh	r1, [fp, #-10]
   31518:	bl	315a4 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   3151c:	str	r0, [sp, #20]
   31520:	movw	r1, #0
   31524:	cmp	r1, r0
   31528:	bne	31538 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   3152c:	movw	r0, #0
   31530:	str	r0, [fp, #-4]
   31534:	b	31598 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   31538:	ldr	r0, [sp, #20]
   3153c:	ldr	r1, [sp, #20]
   31540:	str	r0, [sp, #8]
   31544:	mov	r0, r1
   31548:	movw	r1, #0
   3154c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31550:	ldr	r1, [sp, #8]
   31554:	add	r0, r1, r0
   31558:	str	r0, [sp, #20]
   3155c:	ldr	r0, [sp, #20]
   31560:	movw	r1, #0
   31564:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31568:	str	r0, [sp, #16]
   3156c:	ldr	r0, [sp, #20]
   31570:	add	r0, r0, #4
   31574:	str	r0, [sp, #20]
   31578:	ldr	r0, [sp, #20]
   3157c:	ldr	r1, [sp, #16]
   31580:	ldr	r2, [fp, #-20]	; 0xffffffec
   31584:	ldr	r3, [fp, #8]
   31588:	ldrh	ip, [fp, #-22]	; 0xffffffea
   3158c:	str	ip, [sp]
   31590:	bl	311cc <flatcc_verify_struct_as_root@@Base>
   31594:	str	r0, [fp, #-4]
   31598:	ldr	r0, [fp, #-4]
   3159c:	mov	sp, fp
   315a0:	pop	{fp, pc}
   315a4:	push	{fp, lr}
   315a8:	mov	fp, sp
   315ac:	sub	sp, sp, #16
   315b0:	str	r0, [fp, #-4]
   315b4:	strh	r1, [fp, #-6]
   315b8:	ldr	r0, [fp, #-4]
   315bc:	ldrh	r1, [fp, #-6]
   315c0:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   315c4:	strh	r0, [sp, #8]
   315c8:	ldrh	r0, [sp, #8]
   315cc:	cmp	r0, #0
   315d0:	beq	315f8 <flatcc_verify_struct_as_nested_root@@Base+0x17c>
   315d4:	ldr	r0, [fp, #-4]
   315d8:	ldr	r0, [r0]
   315dc:	ldr	r1, [fp, #-4]
   315e0:	ldr	r1, [r1, #16]
   315e4:	add	r0, r0, r1
   315e8:	ldrh	r1, [sp, #8]
   315ec:	add	r0, r0, r1
   315f0:	str	r0, [sp, #4]
   315f4:	b	31604 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   315f8:	movw	r0, #0
   315fc:	str	r0, [sp, #4]
   31600:	b	31604 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   31604:	ldr	r0, [sp, #4]
   31608:	mov	sp, fp
   3160c:	pop	{fp, pc}

00031610 <flatcc_verify_table_as_nested_root@@Base>:
   31610:	push	{r4, sl, fp, lr}
   31614:	add	fp, sp, #8
   31618:	sub	sp, sp, #72	; 0x48
   3161c:	ldr	ip, [fp, #12]
   31620:	ldr	lr, [fp, #8]
   31624:	str	r0, [fp, #-16]
   31628:	strh	r1, [fp, #-18]	; 0xffffffee
   3162c:	str	r2, [fp, #-24]	; 0xffffffe8
   31630:	str	r3, [fp, #-28]	; 0xffffffe4
   31634:	strh	lr, [fp, #-30]	; 0xffffffe2
   31638:	ldr	r0, [fp, #-16]
   3163c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   31640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31644:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   31648:	uxth	r1, r1
   3164c:	movw	lr, #1
   31650:	uxth	lr, lr
   31654:	str	lr, [sp]
   31658:	mvn	lr, #0
   3165c:	str	lr, [sp, #4]
   31660:	str	ip, [sp, #36]	; 0x24
   31664:	bl	300b8 <flatcc_verify_vector_field@@Base>
   31668:	cmp	r0, #0
   3166c:	beq	316a4 <flatcc_verify_table_as_nested_root@@Base+0x94>
   31670:	ldr	r0, [fp, #-16]
   31674:	ldrh	r1, [fp, #-18]	; 0xffffffee
   31678:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3167c:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   31680:	uxth	r1, r1
   31684:	movw	ip, #1
   31688:	uxth	ip, ip
   3168c:	str	ip, [sp]
   31690:	mvn	ip, #0
   31694:	str	ip, [sp, #4]
   31698:	bl	300b8 <flatcc_verify_vector_field@@Base>
   3169c:	str	r0, [fp, #-12]
   316a0:	b	317ac <flatcc_verify_table_as_nested_root@@Base+0x19c>
   316a4:	ldr	r0, [fp, #-16]
   316a8:	ldrh	r1, [fp, #-18]	; 0xffffffee
   316ac:	bl	315a4 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   316b0:	str	r0, [fp, #-36]	; 0xffffffdc
   316b4:	movw	r1, #0
   316b8:	cmp	r1, r0
   316bc:	bne	316cc <flatcc_verify_table_as_nested_root@@Base+0xbc>
   316c0:	movw	r0, #0
   316c4:	str	r0, [fp, #-12]
   316c8:	b	317ac <flatcc_verify_table_as_nested_root@@Base+0x19c>
   316cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   316d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   316d4:	str	r0, [sp, #32]
   316d8:	mov	r0, r1
   316dc:	movw	r1, #0
   316e0:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   316e4:	ldr	r1, [sp, #32]
   316e8:	add	r0, r1, r0
   316ec:	str	r0, [fp, #-36]	; 0xffffffdc
   316f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   316f4:	movw	r1, #0
   316f8:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   316fc:	str	r0, [sp, #40]	; 0x28
   31700:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31704:	add	r0, r0, #4
   31708:	str	r0, [fp, #-36]	; 0xffffffdc
   3170c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31710:	ldr	r1, [sp, #40]	; 0x28
   31714:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31718:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   3171c:	cmp	r0, #0
   31720:	beq	3173c <flatcc_verify_table_as_nested_root@@Base+0x12c>
   31724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31728:	ldr	r1, [sp, #40]	; 0x28
   3172c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31730:	bl	30ea8 <flatcc_verify_buffer_header@@Base>
   31734:	str	r0, [fp, #-12]
   31738:	b	317ac <flatcc_verify_table_as_nested_root@@Base+0x19c>
   3173c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31740:	ldr	r1, [sp, #40]	; 0x28
   31744:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31748:	str	r0, [sp, #28]
   3174c:	mov	r0, r2
   31750:	movw	r2, #0
   31754:	str	r1, [sp, #24]
   31758:	mov	r1, r2
   3175c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31760:	ldr	r1, [fp, #-16]
   31764:	ldr	r1, [r1, #8]
   31768:	ldr	r2, [fp, #12]
   3176c:	ldr	r3, [sp, #28]
   31770:	str	r0, [sp, #20]
   31774:	mov	r0, r3
   31778:	ldr	ip, [sp, #24]
   3177c:	str	r1, [sp, #16]
   31780:	mov	r1, ip
   31784:	movw	lr, #0
   31788:	str	r2, [sp, #12]
   3178c:	mov	r2, lr
   31790:	ldr	r3, [sp, #20]
   31794:	ldr	lr, [sp, #16]
   31798:	str	lr, [sp]
   3179c:	ldr	r4, [sp, #12]
   317a0:	str	r4, [sp, #4]
   317a4:	bl	3065c <flatcc_verify_table_field@@Base+0xf0>
   317a8:	str	r0, [fp, #-12]
   317ac:	ldr	r0, [fp, #-12]
   317b0:	sub	sp, fp, #8
   317b4:	pop	{r4, sl, fp, pc}

000317b8 <flatcc_verify_union_field@@Base>:
   317b8:	push	{fp, lr}
   317bc:	mov	fp, sp
   317c0:	sub	sp, sp, #88	; 0x58
   317c4:	str	r0, [fp, #-8]
   317c8:	strh	r1, [fp, #-10]
   317cc:	str	r2, [fp, #-16]
   317d0:	str	r3, [fp, #-20]	; 0xffffffec
   317d4:	ldr	r0, [fp, #-8]
   317d8:	ldrh	r1, [fp, #-10]
   317dc:	sub	r1, r1, #1
   317e0:	uxth	r1, r1
   317e4:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   317e8:	strh	r0, [fp, #-22]	; 0xffffffea
   317ec:	uxth	r0, r0
   317f0:	movw	r1, #0
   317f4:	cmp	r1, r0
   317f8:	bne	3188c <flatcc_verify_union_field@@Base+0xd4>
   317fc:	ldr	r0, [fp, #-8]
   31800:	ldrh	r1, [fp, #-10]
   31804:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   31808:	strh	r0, [fp, #-24]	; 0xffffffe8
   3180c:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   31810:	cmp	r0, #0
   31814:	movw	r0, #0
   31818:	moveq	r0, #1
   3181c:	and	r0, r0, #1
   31820:	str	r0, [sp, #28]
   31824:	ldr	r0, [sp, #28]
   31828:	cmp	r0, #0
   3182c:	bne	3183c <flatcc_verify_union_field@@Base+0x84>
   31830:	movw	r0, #23
   31834:	str	r0, [fp, #-4]
   31838:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   3183c:	b	31840 <flatcc_verify_union_field@@Base+0x88>
   31840:	b	31844 <flatcc_verify_union_field@@Base+0x8c>
   31844:	ldr	r0, [fp, #-16]
   31848:	cmp	r0, #0
   3184c:	movw	r0, #0
   31850:	movne	r0, #1
   31854:	mvn	r1, #0
   31858:	eor	r0, r0, r1
   3185c:	and	r0, r0, #1
   31860:	str	r0, [sp, #24]
   31864:	ldr	r0, [sp, #24]
   31868:	cmp	r0, #0
   3186c:	bne	3187c <flatcc_verify_union_field@@Base+0xc4>
   31870:	movw	r0, #21
   31874:	str	r0, [fp, #-4]
   31878:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   3187c:	b	31880 <flatcc_verify_union_field@@Base+0xc8>
   31880:	movw	r0, #0
   31884:	str	r0, [fp, #-4]
   31888:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   3188c:	ldr	r0, [fp, #-8]
   31890:	ldrh	r1, [fp, #-10]
   31894:	sub	r1, r1, #1
   31898:	uxth	r1, r1
   3189c:	movw	r2, #0
   318a0:	movw	r3, #1
   318a4:	movw	ip, #1
   318a8:	uxth	ip, ip
   318ac:	str	ip, [sp]
   318b0:	bl	2fbd0 <flatcc_verify_field@@Base+0x80>
   318b4:	cmp	r0, #0
   318b8:	beq	318ec <flatcc_verify_union_field@@Base+0x134>
   318bc:	ldr	r0, [fp, #-8]
   318c0:	ldrh	r1, [fp, #-10]
   318c4:	sub	r1, r1, #1
   318c8:	uxth	r1, r1
   318cc:	movw	r2, #0
   318d0:	movw	r3, #1
   318d4:	movw	ip, #1
   318d8:	uxth	ip, ip
   318dc:	str	ip, [sp]
   318e0:	bl	2fbd0 <flatcc_verify_field@@Base+0x80>
   318e4:	str	r0, [fp, #-4]
   318e8:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   318ec:	ldr	r0, [fp, #-8]
   318f0:	ldrh	r1, [fp, #-10]
   318f4:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   318f8:	strh	r0, [fp, #-24]	; 0xffffffe8
   318fc:	ldr	r0, [fp, #-8]
   31900:	ldr	r0, [r0]
   31904:	ldr	r1, [fp, #-8]
   31908:	ldr	r1, [r1, #16]
   3190c:	add	r0, r0, r1
   31910:	ldrh	r1, [fp, #-22]	; 0xffffffea
   31914:	add	r0, r0, r1
   31918:	str	r0, [fp, #-28]	; 0xffffffe4
   3191c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31920:	ldrb	r0, [r0]
   31924:	cmp	r0, #0
   31928:	movw	r0, #1
   3192c:	str	r0, [sp, #12]
   31930:	bne	31948 <flatcc_verify_union_field@@Base+0x190>
   31934:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   31938:	cmp	r0, #0
   3193c:	movw	r0, #0
   31940:	moveq	r0, #1
   31944:	str	r0, [sp, #12]
   31948:	ldr	r0, [sp, #12]
   3194c:	and	r0, r0, #1
   31950:	str	r0, [sp, #20]
   31954:	ldr	r0, [sp, #20]
   31958:	cmp	r0, #0
   3195c:	bne	3196c <flatcc_verify_union_field@@Base+0x1b4>
   31960:	movw	r0, #24
   31964:	str	r0, [fp, #-4]
   31968:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   3196c:	b	31970 <flatcc_verify_union_field@@Base+0x1b8>
   31970:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31974:	ldrb	r0, [r0]
   31978:	cmp	r0, #0
   3197c:	bne	3198c <flatcc_verify_union_field@@Base+0x1d4>
   31980:	movw	r0, #0
   31984:	str	r0, [fp, #-4]
   31988:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   3198c:	b	31990 <flatcc_verify_union_field@@Base+0x1d8>
   31990:	ldr	r0, [fp, #-8]
   31994:	ldrh	r1, [fp, #-10]
   31998:	ldr	r2, [fp, #-16]
   3199c:	uxth	r1, r1
   319a0:	sub	r3, fp, #32
   319a4:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   319a8:	str	r0, [sp, #16]
   319ac:	ldr	r0, [sp, #16]
   319b0:	cmp	r0, #0
   319b4:	bne	319c4 <flatcc_verify_union_field@@Base+0x20c>
   319b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   319bc:	cmp	r0, #0
   319c0:	bne	319d0 <flatcc_verify_union_field@@Base+0x218>
   319c4:	ldr	r0, [sp, #16]
   319c8:	str	r0, [fp, #-4]
   319cc:	b	31a3c <flatcc_verify_union_field@@Base+0x284>
   319d0:	b	319d4 <flatcc_verify_union_field@@Base+0x21c>
   319d4:	ldr	r0, [fp, #-8]
   319d8:	ldr	r0, [r0]
   319dc:	str	r0, [sp, #32]
   319e0:	ldr	r0, [fp, #-8]
   319e4:	ldr	r0, [r0, #4]
   319e8:	str	r0, [sp, #36]	; 0x24
   319ec:	ldr	r0, [fp, #-8]
   319f0:	ldr	r0, [r0, #8]
   319f4:	str	r0, [sp, #40]	; 0x28
   319f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   319fc:	str	r0, [sp, #48]	; 0x30
   31a00:	ldr	r0, [fp, #-8]
   31a04:	ldr	r0, [r0]
   31a08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31a0c:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31a10:	str	r0, [sp, #52]	; 0x34
   31a14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31a18:	ldrb	r0, [r0]
   31a1c:	strb	r0, [sp, #44]	; 0x2c
   31a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   31a24:	add	r1, sp, #32
   31a28:	str	r0, [sp, #8]
   31a2c:	mov	r0, r1
   31a30:	ldr	r1, [sp, #8]
   31a34:	blx	r1
   31a38:	str	r0, [fp, #-4]
   31a3c:	ldr	r0, [fp, #-4]
   31a40:	mov	sp, fp
   31a44:	pop	{fp, pc}
   31a48:	push	{fp, lr}
   31a4c:	mov	fp, sp
   31a50:	sub	sp, sp, #16
   31a54:	str	r0, [sp, #8]
   31a58:	strh	r1, [sp, #6]
   31a5c:	ldrh	r0, [sp, #6]
   31a60:	add	r0, r0, #2
   31a64:	lsl	r0, r0, #1
   31a68:	strh	r0, [sp, #4]
   31a6c:	ldrh	r0, [sp, #4]
   31a70:	ldr	r1, [sp, #8]
   31a74:	ldrh	r1, [r1, #22]
   31a78:	cmp	r0, r1
   31a7c:	blt	31a8c <flatcc_verify_union_field@@Base+0x2d4>
   31a80:	movw	r0, #0
   31a84:	str	r0, [fp, #-4]
   31a88:	b	31aa4 <flatcc_verify_union_field@@Base+0x2ec>
   31a8c:	ldr	r0, [sp, #8]
   31a90:	ldr	r0, [r0, #12]
   31a94:	ldrh	r1, [sp, #4]
   31a98:	bl	32198 <flatcc_verify_union_vector_field@@Base+0x6e8>
   31a9c:	uxth	r0, r0
   31aa0:	str	r0, [fp, #-4]
   31aa4:	ldr	r0, [fp, #-4]
   31aa8:	mov	sp, fp
   31aac:	pop	{fp, pc}

00031ab0 <flatcc_verify_union_vector_field@@Base>:
   31ab0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31ab4:	add	fp, sp, #24
   31ab8:	sub	sp, sp, #96	; 0x60
   31abc:	str	r0, [fp, #-32]	; 0xffffffe0
   31ac0:	strh	r1, [fp, #-34]	; 0xffffffde
   31ac4:	str	r2, [fp, #-40]	; 0xffffffd8
   31ac8:	str	r3, [fp, #-44]	; 0xffffffd4
   31acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ad0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31ad4:	sub	r1, r1, #1
   31ad8:	uxth	r1, r1
   31adc:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   31ae0:	strh	r0, [fp, #-46]	; 0xffffffd2
   31ae4:	uxth	r0, r0
   31ae8:	movw	r1, #0
   31aec:	cmp	r1, r0
   31af0:	bne	31b5c <flatcc_verify_union_vector_field@@Base+0xac>
   31af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31af8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31afc:	bl	31a48 <flatcc_verify_union_field@@Base+0x290>
   31b00:	strh	r0, [fp, #-48]	; 0xffffffd0
   31b04:	uxth	r0, r0
   31b08:	movw	r1, #0
   31b0c:	cmp	r1, r0
   31b10:	bne	31b58 <flatcc_verify_union_vector_field@@Base+0xa8>
   31b14:	b	31b18 <flatcc_verify_union_vector_field@@Base+0x68>
   31b18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31b1c:	cmp	r0, #0
   31b20:	movw	r0, #0
   31b24:	movne	r0, #1
   31b28:	mvn	r1, #0
   31b2c:	eor	r0, r0, r1
   31b30:	and	r0, r0, #1
   31b34:	str	r0, [sp, #52]	; 0x34
   31b38:	ldr	r0, [sp, #52]	; 0x34
   31b3c:	cmp	r0, #0
   31b40:	bne	31b50 <flatcc_verify_union_vector_field@@Base+0xa0>
   31b44:	movw	r0, #22
   31b48:	str	r0, [fp, #-28]	; 0xffffffe4
   31b4c:	b	31d28 <flatcc_verify_union_vector_field@@Base+0x278>
   31b50:	b	31b54 <flatcc_verify_union_vector_field@@Base+0xa4>
   31b54:	b	31b58 <flatcc_verify_union_vector_field@@Base+0xa8>
   31b58:	b	31b5c <flatcc_verify_union_vector_field@@Base+0xac>
   31b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31b60:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31b64:	sub	r1, r1, #1
   31b68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31b6c:	uxth	r1, r1
   31b70:	movw	r3, #1
   31b74:	movw	ip, #1
   31b78:	uxth	ip, ip
   31b7c:	str	ip, [sp]
   31b80:	mvn	ip, #0
   31b84:	str	ip, [sp, #4]
   31b88:	bl	300b8 <flatcc_verify_vector_field@@Base>
   31b8c:	cmp	r0, #0
   31b90:	beq	31bcc <flatcc_verify_union_vector_field@@Base+0x11c>
   31b94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31b98:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31b9c:	sub	r1, r1, #1
   31ba0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31ba4:	uxth	r1, r1
   31ba8:	movw	r3, #1
   31bac:	movw	ip, #1
   31bb0:	uxth	ip, ip
   31bb4:	str	ip, [sp]
   31bb8:	mvn	ip, #0
   31bbc:	str	ip, [sp, #4]
   31bc0:	bl	300b8 <flatcc_verify_vector_field@@Base>
   31bc4:	str	r0, [fp, #-28]	; 0xffffffe4
   31bc8:	b	31d28 <flatcc_verify_union_vector_field@@Base+0x278>
   31bcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31bd0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31bd4:	sub	r1, r1, #1
   31bd8:	uxth	r1, r1
   31bdc:	bl	315a4 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   31be0:	str	r0, [fp, #-52]	; 0xffffffcc
   31be4:	movw	r1, #0
   31be8:	cmp	r1, r0
   31bec:	bne	31bfc <flatcc_verify_union_vector_field@@Base+0x14c>
   31bf0:	movw	r0, #0
   31bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   31bf8:	b	31d28 <flatcc_verify_union_vector_field@@Base+0x278>
   31bfc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31c00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   31c04:	str	r0, [sp, #44]	; 0x2c
   31c08:	mov	r0, r1
   31c0c:	movw	r1, #0
   31c10:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31c14:	ldr	r1, [sp, #44]	; 0x2c
   31c18:	add	r0, r1, r0
   31c1c:	str	r0, [fp, #-52]	; 0xffffffcc
   31c20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31c24:	movw	r1, #0
   31c28:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31c2c:	str	r0, [sp, #60]	; 0x3c
   31c30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31c34:	add	r0, r0, #4
   31c38:	str	r0, [fp, #-52]	; 0xffffffcc
   31c3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   31c40:	str	r0, [fp, #-56]	; 0xffffffc8
   31c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c48:	ldrh	r1, [fp, #-34]	; 0xffffffde
   31c4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   31c50:	uxth	r1, r1
   31c54:	add	r3, sp, #56	; 0x38
   31c58:	bl	2fe1c <flatcc_verify_string_field@@Base+0xc0>
   31c5c:	str	r0, [sp, #48]	; 0x30
   31c60:	ldr	r0, [sp, #48]	; 0x30
   31c64:	cmp	r0, #0
   31c68:	bne	31c78 <flatcc_verify_union_vector_field@@Base+0x1c8>
   31c6c:	ldr	r0, [sp, #56]	; 0x38
   31c70:	cmp	r0, #0
   31c74:	bne	31c84 <flatcc_verify_union_vector_field@@Base+0x1d4>
   31c78:	ldr	r0, [sp, #48]	; 0x30
   31c7c:	str	r0, [fp, #-28]	; 0xffffffe4
   31c80:	b	31d28 <flatcc_verify_union_vector_field@@Base+0x278>
   31c84:	b	31c88 <flatcc_verify_union_vector_field@@Base+0x1d8>
   31c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c8c:	ldr	r0, [r0]
   31c90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31c94:	ldr	r1, [r1, #4]
   31c98:	ldr	r2, [sp, #56]	; 0x38
   31c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ca0:	ldr	r3, [r3]
   31ca4:	ldr	ip, [sp, #56]	; 0x38
   31ca8:	str	r0, [sp, #40]	; 0x28
   31cac:	mov	r0, r3
   31cb0:	str	r1, [sp, #36]	; 0x24
   31cb4:	mov	r1, ip
   31cb8:	str	r2, [sp, #32]
   31cbc:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31cc0:	ldr	r1, [sp, #60]	; 0x3c
   31cc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   31cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ccc:	ldr	r3, [r3, #8]
   31cd0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   31cd4:	ldr	lr, [sp, #40]	; 0x28
   31cd8:	str	r0, [sp, #28]
   31cdc:	mov	r0, lr
   31ce0:	ldr	r4, [sp, #36]	; 0x24
   31ce4:	str	r1, [sp, #24]
   31ce8:	mov	r1, r4
   31cec:	ldr	r5, [sp, #32]
   31cf0:	str	r2, [sp, #20]
   31cf4:	mov	r2, r5
   31cf8:	ldr	r6, [sp, #28]
   31cfc:	str	r3, [sp, #16]
   31d00:	mov	r3, r6
   31d04:	ldr	r7, [sp, #24]
   31d08:	str	r7, [sp]
   31d0c:	ldr	r8, [sp, #20]
   31d10:	str	r8, [sp, #4]
   31d14:	ldr	r9, [sp, #16]
   31d18:	str	r9, [sp, #8]
   31d1c:	str	ip, [sp, #12]
   31d20:	bl	31d34 <flatcc_verify_union_vector_field@@Base+0x284>
   31d24:	str	r0, [fp, #-28]	; 0xffffffe4
   31d28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31d2c:	sub	sp, fp, #24
   31d30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31d34:	push	{r4, r5, fp, lr}
   31d38:	add	fp, sp, #8
   31d3c:	sub	sp, sp, #104	; 0x68
   31d40:	ldr	ip, [fp, #20]
   31d44:	ldr	lr, [fp, #16]
   31d48:	ldr	r4, [fp, #12]
   31d4c:	ldr	r5, [fp, #8]
   31d50:	str	r0, [fp, #-16]
   31d54:	str	r1, [fp, #-20]	; 0xffffffec
   31d58:	str	r2, [fp, #-24]	; 0xffffffe8
   31d5c:	str	r3, [fp, #-28]	; 0xffffffe4
   31d60:	ldr	r0, [fp, #16]
   31d64:	mvn	r1, #0
   31d68:	add	r1, r0, r1
   31d6c:	str	r1, [fp, #16]
   31d70:	cmp	r0, #0
   31d74:	movw	r0, #0
   31d78:	movgt	r0, #1
   31d7c:	and	r0, r0, #1
   31d80:	str	r0, [sp, #44]	; 0x2c
   31d84:	ldr	r0, [sp, #44]	; 0x2c
   31d88:	cmp	r0, #0
   31d8c:	bne	31d9c <flatcc_verify_union_vector_field@@Base+0x2ec>
   31d90:	movw	r0, #3
   31d94:	str	r0, [fp, #-12]
   31d98:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31d9c:	b	31da0 <flatcc_verify_union_vector_field@@Base+0x2f0>
   31da0:	ldr	r0, [pc, #624]	; 32018 <flatcc_verify_union_vector_field@@Base+0x568>
   31da4:	ldr	r1, [fp, #-16]
   31da8:	ldr	r2, [fp, #-20]	; 0xffffffec
   31dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31db0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   31db4:	str	r0, [sp, #28]
   31db8:	mov	r0, r1
   31dbc:	mov	r1, r2
   31dc0:	mov	r2, r3
   31dc4:	mov	r3, ip
   31dc8:	movw	ip, #4
   31dcc:	str	ip, [sp]
   31dd0:	movw	ip, #4
   31dd4:	uxth	ip, ip
   31dd8:	str	ip, [sp, #4]
   31ddc:	ldr	ip, [sp, #28]
   31de0:	str	ip, [sp, #8]
   31de4:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   31de8:	cmp	r0, #0
   31dec:	beq	31e40 <flatcc_verify_union_vector_field@@Base+0x390>
   31df0:	ldr	r0, [pc, #544]	; 32018 <flatcc_verify_union_vector_field@@Base+0x568>
   31df4:	ldr	r1, [fp, #-16]
   31df8:	ldr	r2, [fp, #-20]	; 0xffffffec
   31dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31e00:	ldr	ip, [fp, #-28]	; 0xffffffe4
   31e04:	str	r0, [sp, #24]
   31e08:	mov	r0, r1
   31e0c:	mov	r1, r2
   31e10:	mov	r2, r3
   31e14:	mov	r3, ip
   31e18:	movw	ip, #4
   31e1c:	str	ip, [sp]
   31e20:	movw	ip, #4
   31e24:	uxth	ip, ip
   31e28:	str	ip, [sp, #4]
   31e2c:	ldr	ip, [sp, #24]
   31e30:	str	ip, [sp, #8]
   31e34:	bl	301c8 <flatcc_verify_vector_field@@Base+0x110>
   31e38:	str	r0, [fp, #-12]
   31e3c:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31e48:	add	r0, r1, r0
   31e4c:	str	r0, [fp, #-24]	; 0xffffffe8
   31e50:	ldr	r0, [fp, #-16]
   31e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31e58:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31e5c:	str	r0, [fp, #-36]	; 0xffffffdc
   31e60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31e64:	ldr	r1, [fp, #8]
   31e68:	cmp	r0, r1
   31e6c:	movw	r0, #0
   31e70:	moveq	r0, #1
   31e74:	and	r0, r0, #1
   31e78:	str	r0, [sp, #40]	; 0x28
   31e7c:	ldr	r0, [sp, #40]	; 0x28
   31e80:	cmp	r0, #0
   31e84:	bne	31e94 <flatcc_verify_union_vector_field@@Base+0x3e4>
   31e88:	movw	r0, #34	; 0x22
   31e8c:	str	r0, [fp, #-12]
   31e90:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31e94:	b	31e98 <flatcc_verify_union_vector_field@@Base+0x3e8>
   31e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31e9c:	add	r0, r0, #4
   31ea0:	str	r0, [fp, #-24]	; 0xffffffe8
   31ea4:	ldr	r0, [fp, #-16]
   31ea8:	str	r0, [sp, #48]	; 0x30
   31eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   31eb0:	str	r0, [sp, #52]	; 0x34
   31eb4:	ldr	r0, [fp, #16]
   31eb8:	str	r0, [sp, #56]	; 0x38
   31ebc:	movw	r0, #0
   31ec0:	str	r0, [fp, #-32]	; 0xffffffe0
   31ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ec8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31ecc:	cmp	r0, r1
   31ed0:	bcs	32004 <flatcc_verify_union_vector_field@@Base+0x554>
   31ed4:	ldr	r0, [fp, #-16]
   31ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31edc:	bl	3008c <flatcc_verify_string_field@@Base+0x330>
   31ee0:	str	r0, [fp, #-40]	; 0xffffffd8
   31ee4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31ee8:	cmp	r0, #0
   31eec:	bne	31f38 <flatcc_verify_union_vector_field@@Base+0x488>
   31ef0:	b	31ef4 <flatcc_verify_union_vector_field@@Base+0x444>
   31ef4:	ldr	r0, [fp, #12]
   31ef8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31efc:	add	r0, r0, r1
   31f00:	ldrb	r0, [r0]
   31f04:	cmp	r0, #0
   31f08:	movw	r0, #0
   31f0c:	moveq	r0, #1
   31f10:	and	r0, r0, #1
   31f14:	str	r0, [sp, #36]	; 0x24
   31f18:	ldr	r0, [sp, #36]	; 0x24
   31f1c:	cmp	r0, #0
   31f20:	bne	31f30 <flatcc_verify_union_vector_field@@Base+0x480>
   31f24:	movw	r0, #32
   31f28:	str	r0, [fp, #-12]
   31f2c:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31f30:	b	31f34 <flatcc_verify_union_vector_field@@Base+0x484>
   31f34:	b	31fe4 <flatcc_verify_union_vector_field@@Base+0x534>
   31f38:	b	31f3c <flatcc_verify_union_vector_field@@Base+0x48c>
   31f3c:	ldr	r0, [fp, #12]
   31f40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f44:	add	r0, r0, r1
   31f48:	ldrb	r0, [r0]
   31f4c:	cmp	r0, #0
   31f50:	movw	r0, #0
   31f54:	movne	r0, #1
   31f58:	and	r0, r0, #1
   31f5c:	str	r0, [sp, #32]
   31f60:	ldr	r0, [sp, #32]
   31f64:	cmp	r0, #0
   31f68:	bne	31f78 <flatcc_verify_union_vector_field@@Base+0x4c8>
   31f6c:	movw	r0, #33	; 0x21
   31f70:	str	r0, [fp, #-12]
   31f74:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31f78:	b	31f7c <flatcc_verify_union_vector_field@@Base+0x4cc>
   31f7c:	ldr	r0, [fp, #12]
   31f80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f84:	add	r0, r0, r1
   31f88:	ldrb	r0, [r0]
   31f8c:	strb	r0, [sp, #60]	; 0x3c
   31f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31f94:	str	r0, [sp, #64]	; 0x40
   31f98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31f9c:	str	r0, [sp, #68]	; 0x44
   31fa0:	ldr	r0, [fp, #20]
   31fa4:	add	r1, sp, #48	; 0x30
   31fa8:	str	r0, [sp, #20]
   31fac:	mov	r0, r1
   31fb0:	ldr	r1, [sp, #20]
   31fb4:	blx	r1
   31fb8:	cmp	r0, #0
   31fbc:	beq	31fe0 <flatcc_verify_union_vector_field@@Base+0x530>
   31fc0:	ldr	r0, [fp, #20]
   31fc4:	add	r1, sp, #48	; 0x30
   31fc8:	str	r0, [sp, #16]
   31fcc:	mov	r0, r1
   31fd0:	ldr	r1, [sp, #16]
   31fd4:	blx	r1
   31fd8:	str	r0, [fp, #-12]
   31fdc:	b	3200c <flatcc_verify_union_vector_field@@Base+0x55c>
   31fe0:	b	31fe4 <flatcc_verify_union_vector_field@@Base+0x534>
   31fe4:	b	31fe8 <flatcc_verify_union_vector_field@@Base+0x538>
   31fe8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31fec:	add	r0, r0, #1
   31ff0:	str	r0, [fp, #-32]	; 0xffffffe0
   31ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ff8:	add	r0, r0, #4
   31ffc:	str	r0, [fp, #-24]	; 0xffffffe8
   32000:	b	31ec4 <flatcc_verify_union_vector_field@@Base+0x414>
   32004:	movw	r0, #0
   32008:	str	r0, [fp, #-12]
   3200c:	ldr	r0, [fp, #-12]
   32010:	sub	sp, fp, #8
   32014:	pop	{r4, r5, fp, pc}
   32018:	svccc	0x00ffffff
   3201c:	sub	sp, sp, #20
   32020:	str	r0, [sp, #16]
   32024:	str	r1, [sp, #12]
   32028:	str	r2, [sp, #8]
   3202c:	ldr	r0, [sp, #12]
   32030:	ldr	r1, [sp, #8]
   32034:	add	r0, r0, r1
   32038:	str	r0, [sp, #4]
   3203c:	ldr	r0, [sp, #4]
   32040:	ldr	r1, [sp, #12]
   32044:	cmp	r0, r1
   32048:	movw	r0, #0
   3204c:	str	r0, [sp]
   32050:	bls	32090 <flatcc_verify_union_vector_field@@Base+0x5e0>
   32054:	ldr	r0, [sp, #4]
   32058:	add	r0, r0, #4
   3205c:	ldr	r1, [sp, #16]
   32060:	cmp	r0, r1
   32064:	movw	r0, #0
   32068:	str	r0, [sp]
   3206c:	bhi	32090 <flatcc_verify_union_vector_field@@Base+0x5e0>
   32070:	ldr	r0, [sp, #4]
   32074:	and	r0, r0, #3
   32078:	cmp	r0, #0
   3207c:	movw	r0, #0
   32080:	movne	r0, #1
   32084:	mvn	r1, #0
   32088:	eor	r0, r0, r1
   3208c:	str	r0, [sp]
   32090:	ldr	r0, [sp]
   32094:	and	r0, r0, #1
   32098:	add	sp, sp, #20
   3209c:	bx	lr
   320a0:	push	{fp, lr}
   320a4:	mov	fp, sp
   320a8:	sub	sp, sp, #8
   320ac:	str	r0, [sp, #4]
   320b0:	ldr	r0, [sp, #4]
   320b4:	ldr	r0, [r0]
   320b8:	bl	320c4 <flatcc_verify_union_vector_field@@Base+0x614>
   320bc:	mov	sp, fp
   320c0:	pop	{fp, pc}
   320c4:	sub	sp, sp, #4
   320c8:	str	r0, [sp]
   320cc:	ldr	r0, [sp]
   320d0:	add	sp, sp, #4
   320d4:	bx	lr
   320d8:	sub	sp, sp, #28
   320dc:	str	r0, [sp, #24]
   320e0:	str	r1, [sp, #20]
   320e4:	str	r2, [sp, #16]
   320e8:	strh	r3, [sp, #14]
   320ec:	ldr	r0, [sp, #20]
   320f0:	ldr	r1, [sp, #16]
   320f4:	add	r0, r0, r1
   320f8:	str	r0, [sp, #8]
   320fc:	ldrh	r0, [sp, #14]
   32100:	cmp	r0, #4
   32104:	bcs	32114 <flatcc_verify_union_vector_field@@Base+0x664>
   32108:	movw	r0, #4
   3210c:	str	r0, [sp, #4]
   32110:	b	3211c <flatcc_verify_union_vector_field@@Base+0x66c>
   32114:	ldrh	r0, [sp, #14]
   32118:	str	r0, [sp, #4]
   3211c:	ldr	r0, [sp, #4]
   32120:	strh	r0, [sp, #14]
   32124:	ldr	r0, [sp, #8]
   32128:	ldr	r1, [sp, #20]
   3212c:	cmp	r0, r1
   32130:	movw	r0, #0
   32134:	str	r0, [sp]
   32138:	bls	32188 <flatcc_verify_union_vector_field@@Base+0x6d8>
   3213c:	ldr	r0, [sp, #8]
   32140:	add	r0, r0, #4
   32144:	ldr	r1, [sp, #24]
   32148:	cmp	r0, r1
   3214c:	movw	r0, #0
   32150:	str	r0, [sp]
   32154:	bhi	32188 <flatcc_verify_union_vector_field@@Base+0x6d8>
   32158:	ldr	r0, [sp, #8]
   3215c:	add	r0, r0, #4
   32160:	ldrh	r1, [sp, #14]
   32164:	sub	r1, r1, #1
   32168:	orr	r1, r1, #3
   3216c:	and	r0, r0, r1
   32170:	cmp	r0, #0
   32174:	movw	r0, #0
   32178:	movne	r0, #1
   3217c:	mvn	r1, #0
   32180:	eor	r0, r0, r1
   32184:	str	r0, [sp]
   32188:	ldr	r0, [sp]
   3218c:	and	r0, r0, #1
   32190:	add	sp, sp, #28
   32194:	bx	lr
   32198:	push	{fp, lr}
   3219c:	mov	fp, sp
   321a0:	sub	sp, sp, #8
   321a4:	str	r0, [sp, #4]
   321a8:	str	r1, [sp]
   321ac:	ldr	r0, [sp, #4]
   321b0:	ldr	r1, [sp]
   321b4:	add	r0, r0, r1
   321b8:	bl	321c8 <flatcc_verify_union_vector_field@@Base+0x718>
   321bc:	uxth	r0, r0
   321c0:	mov	sp, fp
   321c4:	pop	{fp, pc}
   321c8:	push	{fp, lr}
   321cc:	mov	fp, sp
   321d0:	sub	sp, sp, #8
   321d4:	str	r0, [sp, #4]
   321d8:	ldr	r0, [sp, #4]
   321dc:	ldrh	r0, [r0]
   321e0:	bl	321f0 <flatcc_verify_union_vector_field@@Base+0x740>
   321e4:	uxth	r0, r0
   321e8:	mov	sp, fp
   321ec:	pop	{fp, pc}
   321f0:	sub	sp, sp, #4
   321f4:	strh	r0, [sp, #2]
   321f8:	ldrh	r0, [sp, #2]
   321fc:	add	sp, sp, #4
   32200:	bx	lr
   32204:	sub	sp, sp, #4
   32208:	str	r0, [sp]
   3220c:	ldr	r0, [sp]
   32210:	add	sp, sp, #4
   32214:	bx	lr
   32218:	push	{fp, lr}
   3221c:	mov	fp, sp
   32220:	sub	sp, sp, #8
   32224:	str	r0, [sp, #4]
   32228:	ldr	r0, [sp, #4]
   3222c:	ldr	r0, [r0]
   32230:	bl	3223c <flatcc_verify_union_vector_field@@Base+0x78c>
   32234:	mov	sp, fp
   32238:	pop	{fp, pc}
   3223c:	sub	sp, sp, #4
   32240:	str	r0, [sp]
   32244:	ldr	r0, [sp]
   32248:	add	sp, sp, #4
   3224c:	bx	lr

00032250 <grisu3_diy_fp_encode_double@@Base>:
   32250:	push	{r4, r5, r6, sl, fp, lr}
   32254:	add	fp, sp, #16
   32258:	sub	sp, sp, #256	; 0x100
   3225c:	ldr	ip, [fp, #12]
   32260:	ldr	lr, [fp, #8]
   32264:	str	r0, [fp, #-24]	; 0xffffffe8
   32268:	str	r1, [fp, #-20]	; 0xffffffec
   3226c:	str	r2, [fp, #-28]	; 0xffffffe4
   32270:	str	r3, [fp, #-32]	; 0xffffffe0
   32274:	mov	r0, #3
   32278:	str	r0, [fp, #-36]	; 0xffffffdc
   3227c:	mov	r0, #8
   32280:	str	r0, [fp, #-40]	; 0xffffffd8
   32284:	movw	r0, #64462	; 0xfbce
   32288:	movt	r0, #65535	; 0xffff
   3228c:	str	r0, [fp, #-44]	; 0xffffffd4
   32290:	mov	r0, #1048576	; 0x100000
   32294:	str	r0, [fp, #-52]	; 0xffffffcc
   32298:	mov	r0, #0
   3229c:	str	r0, [fp, #-56]	; 0xffffffc8
   322a0:	mov	r1, #64	; 0x40
   322a4:	str	r1, [fp, #-60]	; 0xffffffc4
   322a8:	mov	r1, #19
   322ac:	str	r1, [fp, #-64]	; 0xffffffc0
   322b0:	ldr	r1, [fp, #8]
   322b4:	cmp	r1, #0
   322b8:	movwne	r1, #1
   322bc:	lsl	r1, r1, #2
   322c0:	str	r1, [fp, #-68]	; 0xffffffbc
   322c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   322c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   322cc:	sub	r1, r1, r2
   322d0:	str	r1, [fp, #-72]	; 0xffffffb8
   322d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   322d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   322dc:	str	r2, [fp, #-92]	; 0xffffffa4
   322e0:	str	r1, [fp, #-96]	; 0xffffffa0
   322e4:	str	r0, [fp, #-88]	; 0xffffffa8
   322e8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   322ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   322f0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   322f4:	ldr	r1, [fp, #-84]	; 0xffffffac
   322f8:	mov	r4, sp
   322fc:	str	r0, [r4]
   32300:	str	r1, [r4, #4]
   32304:	add	r0, sp, #112	; 0x70
   32308:	str	ip, [sp, #48]	; 0x30
   3230c:	str	lr, [sp, #44]	; 0x2c
   32310:	bl	327a8 <grisu3_diy_fp_encode_double@@Base+0x558>
   32314:	ldr	r0, [sp, #112]	; 0x70
   32318:	str	r0, [fp, #-96]	; 0xffffffa0
   3231c:	ldr	r0, [sp, #116]	; 0x74
   32320:	str	r0, [fp, #-92]	; 0xffffffa4
   32324:	ldr	r0, [sp, #120]	; 0x78
   32328:	str	r0, [fp, #-88]	; 0xffffffa8
   3232c:	ldr	r0, [sp, #124]	; 0x7c
   32330:	str	r0, [fp, #-84]	; 0xffffffac
   32334:	ldr	r0, [fp, #-88]	; 0xffffffa8
   32338:	movw	r1, #0
   3233c:	sub	r0, r1, r0
   32340:	ldr	r1, [fp, #-68]	; 0xffffffbc
   32344:	lsl	r0, r1, r0
   32348:	str	r0, [fp, #-68]	; 0xffffffbc
   3234c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   32350:	sub	r1, fp, #112	; 0x70
   32354:	bl	328e0 <grisu3_diy_fp_encode_double@@Base+0x690>
   32358:	str	r0, [fp, #-76]	; 0xffffffb4
   3235c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   32360:	ldr	r1, [fp, #-72]	; 0xffffffb8
   32364:	cmp	r0, r1
   32368:	beq	32454 <grisu3_diy_fp_encode_double@@Base+0x204>
   3236c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   32370:	ldr	r1, [fp, #-76]	; 0xffffffb4
   32374:	sub	r0, r0, r1
   32378:	sub	r0, r0, #1
   3237c:	str	r0, [sp, #108]	; 0x6c
   32380:	ldr	r0, [sp, #108]	; 0x6c
   32384:	cmp	r0, #0
   32388:	blt	3239c <grisu3_diy_fp_encode_double@@Base+0x14c>
   3238c:	ldr	r0, [sp, #108]	; 0x6c
   32390:	cmp	r0, #7
   32394:	bge	3239c <grisu3_diy_fp_encode_double@@Base+0x14c>
   32398:	b	323bc <grisu3_diy_fp_encode_double@@Base+0x16c>
   3239c:	ldr	r0, [pc, #1004]	; 32790 <grisu3_diy_fp_encode_double@@Base+0x540>
   323a0:	add	r0, pc, r0
   323a4:	ldr	r1, [pc, #1000]	; 32794 <grisu3_diy_fp_encode_double@@Base+0x544>
   323a8:	add	r1, pc, r1
   323ac:	ldr	r2, [pc, #996]	; 32798 <grisu3_diy_fp_encode_double@@Base+0x548>
   323b0:	add	r3, pc, r2
   323b4:	movw	r2, #185	; 0xb9
   323b8:	bl	14f08 <__assert_fail@plt>
   323bc:	ldr	r0, [sp, #108]	; 0x6c
   323c0:	ldr	r1, [pc, #988]	; 327a4 <grisu3_diy_fp_encode_double@@Base+0x554>
   323c4:	add	r1, pc, r1
   323c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   323cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   323d0:	ldr	ip, [fp, #-88]	; 0xffffffa8
   323d4:	ldr	lr, [fp, #-84]	; 0xffffffac
   323d8:	ldr	r0, [r1, r0, lsl #4]!
   323dc:	ldr	r4, [r1, #4]
   323e0:	ldr	r5, [r1, #8]
   323e4:	ldr	r1, [r1, #12]
   323e8:	mov	r6, sp
   323ec:	str	r4, [r6, #12]
   323f0:	str	r0, [r6, #8]
   323f4:	str	r5, [r6, #16]
   323f8:	str	ip, [r6]
   323fc:	str	r1, [r6, #20]
   32400:	str	lr, [r6, #4]
   32404:	add	r0, sp, #88	; 0x58
   32408:	bl	32a84 <grisu3_diy_fp_encode_double@@Base+0x834>
   3240c:	ldr	r0, [sp, #88]	; 0x58
   32410:	str	r0, [fp, #-96]	; 0xffffffa0
   32414:	ldr	r0, [sp, #92]	; 0x5c
   32418:	str	r0, [fp, #-92]	; 0xffffffa4
   3241c:	ldr	r0, [sp, #96]	; 0x60
   32420:	str	r0, [fp, #-88]	; 0xffffffa8
   32424:	ldr	r0, [sp, #100]	; 0x64
   32428:	str	r0, [fp, #-84]	; 0xffffffac
   3242c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32430:	add	r0, r0, #1
   32434:	ldr	r1, [sp, #108]	; 0x6c
   32438:	add	r0, r0, r1
   3243c:	cmp	r0, #19
   32440:	ble	32450 <grisu3_diy_fp_encode_double@@Base+0x200>
   32444:	ldr	r0, [fp, #-68]	; 0xffffffbc
   32448:	add	r0, r0, #4
   3244c:	str	r0, [fp, #-68]	; 0xffffffbc
   32450:	b	32454 <grisu3_diy_fp_encode_double@@Base+0x204>
   32454:	ldr	r2, [fp, #-96]	; 0xffffffa0
   32458:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3245c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   32460:	ldr	r1, [fp, #-84]	; 0xffffffac
   32464:	ldr	ip, [fp, #-112]	; 0xffffff90
   32468:	ldr	lr, [fp, #-108]	; 0xffffff94
   3246c:	ldr	r4, [fp, #-104]	; 0xffffff98
   32470:	ldr	r5, [fp, #-100]	; 0xffffff9c
   32474:	mov	r6, sp
   32478:	str	r5, [r6, #20]
   3247c:	str	r4, [r6, #16]
   32480:	str	lr, [r6, #12]
   32484:	str	ip, [r6, #8]
   32488:	str	r1, [r6, #4]
   3248c:	str	r0, [r6]
   32490:	add	r0, sp, #72	; 0x48
   32494:	str	r0, [sp, #40]	; 0x28
   32498:	bl	32a84 <grisu3_diy_fp_encode_double@@Base+0x834>
   3249c:	ldr	r0, [sp, #40]	; 0x28
   324a0:	vld1.64	{d16-d17}, [r0]
   324a4:	sub	r1, fp, #96	; 0x60
   324a8:	vst1.64	{d16-d17}, [r1]
   324ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   324b0:	add	r2, r1, #1
   324b4:	cmp	r1, #0
   324b8:	movne	r1, r2
   324bc:	add	r1, r1, #8
   324c0:	str	r1, [fp, #-68]	; 0xffffffbc
   324c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   324c8:	str	r1, [fp, #-80]	; 0xffffffb0
   324cc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   324d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   324d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   324d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   324dc:	mov	lr, sp
   324e0:	str	r1, [lr]
   324e4:	str	ip, [lr, #4]
   324e8:	add	r0, sp, #56	; 0x38
   324ec:	bl	327a8 <grisu3_diy_fp_encode_double@@Base+0x558>
   324f0:	ldr	r0, [pc, #676]	; 3279c <grisu3_diy_fp_encode_double@@Base+0x54c>
   324f4:	ldr	r1, [sp, #56]	; 0x38
   324f8:	str	r1, [fp, #-96]	; 0xffffffa0
   324fc:	ldr	r1, [sp, #60]	; 0x3c
   32500:	str	r1, [fp, #-92]	; 0xffffffa4
   32504:	ldr	r1, [sp, #64]	; 0x40
   32508:	str	r1, [fp, #-88]	; 0xffffffa8
   3250c:	ldr	r1, [sp, #68]	; 0x44
   32510:	str	r1, [fp, #-84]	; 0xffffffac
   32514:	ldr	r1, [fp, #-80]	; 0xffffffb0
   32518:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3251c:	sub	r1, r1, r2
   32520:	ldr	r2, [fp, #-68]	; 0xffffffbc
   32524:	lsl	r1, r2, r1
   32528:	str	r1, [fp, #-68]	; 0xffffffbc
   3252c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   32530:	add	r1, r1, #64	; 0x40
   32534:	str	r1, [fp, #-132]	; 0xffffff7c
   32538:	ldr	r1, [fp, #-132]	; 0xffffff7c
   3253c:	cmp	r1, r0
   32540:	blt	32550 <grisu3_diy_fp_encode_double@@Base+0x300>
   32544:	movw	r0, #64	; 0x40
   32548:	str	r0, [sp, #36]	; 0x24
   3254c:	b	32584 <grisu3_diy_fp_encode_double@@Base+0x334>
   32550:	ldr	r0, [pc, #584]	; 327a0 <grisu3_diy_fp_encode_double@@Base+0x550>
   32554:	ldr	r1, [fp, #-132]	; 0xffffff7c
   32558:	cmp	r1, r0
   3255c:	bgt	3256c <grisu3_diy_fp_encode_double@@Base+0x31c>
   32560:	movw	r0, #0
   32564:	str	r0, [sp, #32]
   32568:	b	3257c <grisu3_diy_fp_encode_double@@Base+0x32c>
   3256c:	ldr	r0, [pc, #556]	; 327a0 <grisu3_diy_fp_encode_double@@Base+0x550>
   32570:	ldr	r1, [fp, #-132]	; 0xffffff7c
   32574:	sub	r0, r1, r0
   32578:	str	r0, [sp, #32]
   3257c:	ldr	r0, [sp, #32]
   32580:	str	r0, [sp, #36]	; 0x24
   32584:	ldr	r0, [sp, #36]	; 0x24
   32588:	str	r0, [fp, #-132]	; 0xffffff7c
   3258c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   32590:	movw	r1, #64	; 0x40
   32594:	sub	r0, r1, r0
   32598:	str	r0, [sp, #136]	; 0x88
   3259c:	ldr	r0, [sp, #136]	; 0x88
   325a0:	add	r0, r0, #3
   325a4:	cmp	r0, #64	; 0x40
   325a8:	blt	32628 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   325ac:	ldr	r0, [sp, #136]	; 0x88
   325b0:	sub	r0, r0, #62	; 0x3e
   325b4:	str	r0, [sp, #52]	; 0x34
   325b8:	ldr	r0, [sp, #52]	; 0x34
   325bc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   325c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   325c4:	lsr	r1, r1, r0
   325c8:	rsb	r3, r0, #32
   325cc:	orr	r1, r1, r2, lsl r3
   325d0:	sub	r3, r0, #32
   325d4:	cmp	r3, #0
   325d8:	lsrpl	r1, r2, r3
   325dc:	lsr	r0, r2, r0
   325e0:	cmp	r3, #0
   325e4:	movwpl	r0, #0
   325e8:	str	r0, [fp, #-92]	; 0xffffffa4
   325ec:	str	r1, [fp, #-96]	; 0xffffffa0
   325f0:	ldr	r0, [sp, #52]	; 0x34
   325f4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   325f8:	add	r0, r1, r0
   325fc:	str	r0, [fp, #-88]	; 0xffffffa8
   32600:	ldr	r0, [fp, #-68]	; 0xffffffbc
   32604:	ldr	r1, [sp, #52]	; 0x34
   32608:	asr	r0, r0, r1
   3260c:	add	r0, r0, #1
   32610:	add	r0, r0, #8
   32614:	str	r0, [fp, #-68]	; 0xffffffbc
   32618:	ldr	r0, [sp, #52]	; 0x34
   3261c:	ldr	r1, [sp, #136]	; 0x88
   32620:	sub	r0, r1, r0
   32624:	str	r0, [sp, #136]	; 0x88
   32628:	ldr	r0, [fp, #-96]	; 0xffffffa0
   3262c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   32630:	ldr	r2, [sp, #136]	; 0x88
   32634:	lsr	r0, r0, r2
   32638:	rsb	r3, r2, #32
   3263c:	orr	r0, r0, r1, lsl r3
   32640:	sub	r3, r2, #32
   32644:	cmp	r3, #0
   32648:	lsrpl	r0, r1, r3
   3264c:	lsr	r1, r1, r2
   32650:	cmp	r3, #0
   32654:	movwpl	r1, #0
   32658:	str	r1, [fp, #-124]	; 0xffffff84
   3265c:	str	r0, [fp, #-128]	; 0xffffff80
   32660:	ldr	r0, [fp, #-88]	; 0xffffffa8
   32664:	ldr	r1, [sp, #136]	; 0x88
   32668:	add	r0, r0, r1
   3266c:	str	r0, [fp, #-120]	; 0xffffff88
   32670:	ldr	r0, [fp, #-96]	; 0xffffffa0
   32674:	ldr	r1, [sp, #136]	; 0x88
   32678:	sub	r2, r1, #1
   3267c:	mov	r3, #1
   32680:	lsl	r2, r3, r2
   32684:	sub	r1, r1, #33	; 0x21
   32688:	cmp	r1, #0
   3268c:	movwpl	r2, #0
   32690:	and	r0, r0, r2
   32694:	lsl	r0, r0, #3
   32698:	str	r0, [sp, #132]	; 0x84
   3269c:	ldr	r0, [sp, #136]	; 0x88
   326a0:	sub	r1, r0, #1
   326a4:	lsl	r1, r3, r1
   326a8:	sub	r0, r0, #33	; 0x21
   326ac:	cmp	r0, #0
   326b0:	movwpl	r1, #0
   326b4:	lsl	r0, r1, #3
   326b8:	str	r0, [sp, #128]	; 0x80
   326bc:	ldr	r0, [sp, #136]	; 0x88
   326c0:	ldr	r1, [sp, #128]	; 0x80
   326c4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   326c8:	add	r1, r1, r2
   326cc:	cmp	r0, r1
   326d0:	blt	32724 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   326d4:	ldr	r0, [fp, #-128]	; 0xffffff80
   326d8:	ldr	r1, [fp, #-124]	; 0xffffff84
   326dc:	adds	r0, r0, #1
   326e0:	adc	r1, r1, #0
   326e4:	str	r0, [fp, #-128]	; 0xffffff80
   326e8:	str	r1, [fp, #-124]	; 0xffffff84
   326ec:	ldrb	r0, [fp, #-122]	; 0xffffff86
   326f0:	tst	r0, #32
   326f4:	beq	32720 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   326f8:	b	326fc <grisu3_diy_fp_encode_double@@Base+0x4ac>
   326fc:	ldr	r0, [fp, #-128]	; 0xffffff80
   32700:	ldr	r1, [fp, #-124]	; 0xffffff84
   32704:	lsrs	r1, r1, #1
   32708:	rrx	r0, r0
   3270c:	str	r1, [fp, #-124]	; 0xffffff84
   32710:	str	r0, [fp, #-128]	; 0xffffff80
   32714:	ldr	r0, [fp, #-120]	; 0xffffff88
   32718:	add	r0, r0, #1
   3271c:	str	r0, [fp, #-120]	; 0xffffff88
   32720:	b	32724 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   32724:	ldr	r0, [fp, #-128]	; 0xffffff80
   32728:	ldr	r1, [fp, #-124]	; 0xffffff84
   3272c:	ldr	r2, [fp, #-120]	; 0xffffff88
   32730:	ldr	r3, [fp, #-116]	; 0xffffff8c
   32734:	bl	32c18 <grisu3_diy_fp_encode_double@@Base+0x9c8>
   32738:	ldr	r0, [fp, #12]
   3273c:	vstr	d0, [r0]
   32740:	ldr	r0, [sp, #128]	; 0x80
   32744:	ldr	r1, [fp, #-68]	; 0xffffffbc
   32748:	sub	r0, r0, r1
   3274c:	ldr	r1, [sp, #132]	; 0x84
   32750:	cmp	r0, r1
   32754:	movw	r0, #1
   32758:	str	r0, [sp, #28]
   3275c:	bge	32780 <grisu3_diy_fp_encode_double@@Base+0x530>
   32760:	ldr	r0, [sp, #132]	; 0x84
   32764:	ldr	r1, [sp, #128]	; 0x80
   32768:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3276c:	add	r1, r1, r2
   32770:	cmp	r0, r1
   32774:	movw	r0, #0
   32778:	movge	r0, #1
   3277c:	str	r0, [sp, #28]
   32780:	ldr	r0, [sp, #28]
   32784:	and	r0, r0, #1
   32788:	sub	sp, fp, #16
   3278c:	pop	{r4, r5, r6, sl, fp, pc}
   32790:	andeq	r8, r1, r7, lsr #16
   32794:	andeq	r8, r1, fp, lsr r8
   32798:	andeq	r8, r1, r1, lsr #17
   3279c:			; <UNDEFINED> instruction: 0xfffffc0e
   327a0:			; <UNDEFINED> instruction: 0xfffffbce
   327a4:	andeq	sl, r2, ip, lsl #31
   327a8:	push	{fp, lr}
   327ac:	mov	fp, sp
   327b0:	sub	sp, sp, #24
   327b4:	ldr	r1, [fp, #12]
   327b8:	ldr	ip, [fp, #8]
   327bc:	str	r2, [sp, #8]
   327c0:	str	r3, [sp, #12]
   327c4:	str	ip, [sp, #16]
   327c8:	str	r1, [sp, #20]
   327cc:	ldr	r1, [sp, #8]
   327d0:	ldr	r2, [sp, #12]
   327d4:	orr	r1, r1, r2
   327d8:	cmp	r1, #0
   327dc:	str	r0, [sp, #4]
   327e0:	beq	327ec <grisu3_diy_fp_encode_double@@Base+0x59c>
   327e4:	b	327e8 <grisu3_diy_fp_encode_double@@Base+0x598>
   327e8:	b	3280c <grisu3_diy_fp_encode_double@@Base+0x5bc>
   327ec:	ldr	r0, [pc, #224]	; 328d4 <grisu3_diy_fp_encode_double@@Base+0x684>
   327f0:	add	r0, pc, r0
   327f4:	ldr	r1, [pc, #220]	; 328d8 <grisu3_diy_fp_encode_double@@Base+0x688>
   327f8:	add	r1, pc, r1
   327fc:	ldr	r2, [pc, #216]	; 328dc <grisu3_diy_fp_encode_double@@Base+0x68c>
   32800:	add	r3, pc, r2
   32804:	movw	r2, #260	; 0x104
   32808:	bl	14f08 <__assert_fail@plt>
   3280c:	b	32810 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   32810:	ldrh	r0, [sp, #14]
   32814:	bic	r0, r0, #63	; 0x3f
   32818:	cmp	r0, #0
   3281c:	movwne	r0, #1
   32820:	mvn	r1, #0
   32824:	eor	r0, r0, r1
   32828:	tst	r0, #1
   3282c:	beq	3285c <grisu3_diy_fp_encode_double@@Base+0x60c>
   32830:	ldr	r0, [sp, #8]
   32834:	ldr	r1, [sp, #12]
   32838:	lsl	r1, r1, #10
   3283c:	orr	r1, r1, r0, lsr #22
   32840:	lsl	r0, r0, #10
   32844:	str	r0, [sp, #8]
   32848:	str	r1, [sp, #12]
   3284c:	ldr	r0, [sp, #16]
   32850:	sub	r0, r0, #10
   32854:	str	r0, [sp, #16]
   32858:	b	32810 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   3285c:	b	32860 <grisu3_diy_fp_encode_double@@Base+0x610>
   32860:	ldrb	r0, [sp, #15]
   32864:	lsr	r0, r0, #7
   32868:	mvn	r1, #0
   3286c:	eor	r0, r0, r1
   32870:	tst	r0, #1
   32874:	beq	328a8 <grisu3_diy_fp_encode_double@@Base+0x658>
   32878:	ldr	r0, [sp, #8]
   3287c:	ldr	r1, [sp, #12]
   32880:	lsl	r1, r1, #1
   32884:	orr	r1, r1, r0, lsr #31
   32888:	lsl	r0, r0, #1
   3288c:	str	r0, [sp, #8]
   32890:	str	r1, [sp, #12]
   32894:	ldr	r0, [sp, #16]
   32898:	mvn	r1, #0
   3289c:	add	r0, r0, r1
   328a0:	str	r0, [sp, #16]
   328a4:	b	32860 <grisu3_diy_fp_encode_double@@Base+0x610>
   328a8:	ldr	r0, [sp, #8]
   328ac:	ldr	r1, [sp, #4]
   328b0:	str	r0, [r1]
   328b4:	ldr	r0, [sp, #12]
   328b8:	str	r0, [r1, #4]
   328bc:	ldr	r0, [sp, #16]
   328c0:	str	r0, [r1, #8]
   328c4:	ldr	r0, [sp, #20]
   328c8:	str	r0, [r1, #12]
   328cc:	mov	sp, fp
   328d0:	pop	{fp, pc}
   328d4:	andeq	r8, r1, fp, lsr #18
   328d8:	andeq	r8, r1, ip, lsr #18
   328dc:	muleq	r1, r1, r9
   328e0:	push	{fp, lr}
   328e4:	mov	fp, sp
   328e8:	sub	sp, sp, #24
   328ec:	ldr	r2, [pc, #340]	; 32a48 <grisu3_diy_fp_encode_double@@Base+0x7f8>
   328f0:	str	r0, [fp, #-4]
   328f4:	str	r1, [fp, #-8]
   328f8:	movw	r0, #348	; 0x15c
   328fc:	str	r0, [sp, #12]
   32900:	movw	r0, #8
   32904:	str	r0, [sp, #8]
   32908:	ldr	r0, [fp, #-4]
   3290c:	cmp	r2, r0
   32910:	bgt	32918 <grisu3_diy_fp_encode_double@@Base+0x6c8>
   32914:	b	32938 <grisu3_diy_fp_encode_double@@Base+0x6e8>
   32918:	ldr	r0, [pc, #300]	; 32a4c <grisu3_diy_fp_encode_double@@Base+0x7fc>
   3291c:	add	r0, pc, r0
   32920:	ldr	r1, [pc, #296]	; 32a50 <grisu3_diy_fp_encode_double@@Base+0x800>
   32924:	add	r1, pc, r1
   32928:	ldr	r2, [pc, #292]	; 32a54 <grisu3_diy_fp_encode_double@@Base+0x804>
   3292c:	add	r3, pc, r2
   32930:	movw	r2, #80	; 0x50
   32934:	bl	14f08 <__assert_fail@plt>
   32938:	ldr	r0, [fp, #-4]
   3293c:	cmp	r0, #348	; 0x15c
   32940:	bge	32948 <grisu3_diy_fp_encode_double@@Base+0x6f8>
   32944:	b	32968 <grisu3_diy_fp_encode_double@@Base+0x718>
   32948:	ldr	r0, [pc, #264]	; 32a58 <grisu3_diy_fp_encode_double@@Base+0x808>
   3294c:	add	r0, pc, r0
   32950:	ldr	r1, [pc, #260]	; 32a5c <grisu3_diy_fp_encode_double@@Base+0x80c>
   32954:	add	r1, pc, r1
   32958:	ldr	r2, [pc, #256]	; 32a60 <grisu3_diy_fp_encode_double@@Base+0x810>
   3295c:	add	r3, pc, r2
   32960:	movw	r2, #81	; 0x51
   32964:	bl	14f08 <__assert_fail@plt>
   32968:	ldr	r0, [pc, #244]	; 32a64 <grisu3_diy_fp_encode_double@@Base+0x814>
   3296c:	add	r0, pc, r0
   32970:	ldr	r1, [fp, #-4]
   32974:	add	r1, r1, #348	; 0x15c
   32978:	asr	r2, r1, #31
   3297c:	add	r1, r1, r2, lsr #29
   32980:	asr	r1, r1, #3
   32984:	str	r1, [sp, #4]
   32988:	ldr	r1, [sp, #4]
   3298c:	ldr	r2, [pc, #236]	; 32a80 <grisu3_diy_fp_encode_double@@Base+0x830>
   32990:	add	r2, pc, r2
   32994:	add	r1, r2, r1, lsl #4
   32998:	ldrsh	r1, [r1, #10]
   3299c:	str	r1, [sp]
   329a0:	ldr	r1, [sp, #4]
   329a4:	mov	r3, r2
   329a8:	ldr	r1, [r3, r1, lsl #4]!
   329ac:	ldr	r3, [r3, #4]
   329b0:	ldr	ip, [fp, #-8]
   329b4:	str	r3, [ip, #4]
   329b8:	str	r1, [ip]
   329bc:	ldr	r1, [sp, #4]
   329c0:	add	r1, r2, r1, lsl #4
   329c4:	ldrsh	r1, [r1, #8]
   329c8:	ldr	r2, [fp, #-8]
   329cc:	str	r1, [r2, #8]
   329d0:	ldr	r1, [sp]
   329d4:	ldr	r2, [fp, #-4]
   329d8:	cmp	r1, r2
   329dc:	bgt	329e4 <grisu3_diy_fp_encode_double@@Base+0x794>
   329e0:	b	32a04 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   329e4:	ldr	r0, [pc, #124]	; 32a68 <grisu3_diy_fp_encode_double@@Base+0x818>
   329e8:	add	r0, pc, r0
   329ec:	ldr	r1, [pc, #120]	; 32a6c <grisu3_diy_fp_encode_double@@Base+0x81c>
   329f0:	add	r1, pc, r1
   329f4:	ldr	r2, [pc, #116]	; 32a70 <grisu3_diy_fp_encode_double@@Base+0x820>
   329f8:	add	r3, pc, r2
   329fc:	movw	r2, #88	; 0x58
   32a00:	bl	14f08 <__assert_fail@plt>
   32a04:	ldr	r0, [fp, #-4]
   32a08:	ldr	r1, [sp]
   32a0c:	add	r1, r1, #8
   32a10:	cmp	r0, r1
   32a14:	bge	32a1c <grisu3_diy_fp_encode_double@@Base+0x7cc>
   32a18:	b	32a3c <grisu3_diy_fp_encode_double@@Base+0x7ec>
   32a1c:	ldr	r0, [pc, #80]	; 32a74 <grisu3_diy_fp_encode_double@@Base+0x824>
   32a20:	add	r0, pc, r0
   32a24:	ldr	r1, [pc, #76]	; 32a78 <grisu3_diy_fp_encode_double@@Base+0x828>
   32a28:	add	r1, pc, r1
   32a2c:	ldr	r2, [pc, #72]	; 32a7c <grisu3_diy_fp_encode_double@@Base+0x82c>
   32a30:	add	r3, pc, r2
   32a34:	movw	r2, #89	; 0x59
   32a38:	bl	14f08 <__assert_fail@plt>
   32a3c:	ldr	r0, [sp]
   32a40:	mov	sp, fp
   32a44:	pop	{fp, pc}
   32a48:			; <UNDEFINED> instruction: 0xfffffea4
   32a4c:	andeq	r8, r1, lr, lsr #17
   32a50:			; <UNDEFINED> instruction: 0x000182bf
   32a54:			; <UNDEFINED> instruction: 0x000188bd
   32a58:	ldrdeq	r8, [r1], -r6
   32a5c:	andeq	r8, r1, pc, lsl #5
   32a60:	andeq	r8, r1, sp, lsl #17
   32a64:	andeq	r8, r1, ip, lsl #18
   32a68:	andeq	r8, r1, r5, ror #16
   32a6c:	strdeq	r8, [r1], -r3
   32a70:	strdeq	r8, [r1], -r1
   32a74:	andeq	r8, r1, ip, lsr r8
   32a78:			; <UNDEFINED> instruction: 0x000181bb
   32a7c:			; <UNDEFINED> instruction: 0x000187b9
   32a80:	andeq	r8, r1, r8, ror #17
   32a84:	push	{r4, r5, r6, sl, fp, lr}
   32a88:	add	fp, sp, #16
   32a8c:	sub	sp, sp, #104	; 0x68
   32a90:	ldr	r1, [fp, #28]
   32a94:	ldr	ip, [fp, #24]
   32a98:	ldr	lr, [fp, #20]
   32a9c:	ldr	r4, [fp, #16]
   32aa0:	ldr	r5, [fp, #12]
   32aa4:	ldr	r6, [fp, #8]
   32aa8:	str	r2, [fp, #-32]	; 0xffffffe0
   32aac:	str	r3, [fp, #-28]	; 0xffffffe4
   32ab0:	str	r6, [fp, #-24]	; 0xffffffe8
   32ab4:	str	r5, [fp, #-20]	; 0xffffffec
   32ab8:	str	r1, [fp, #-36]	; 0xffffffdc
   32abc:	str	ip, [fp, #-40]	; 0xffffffd8
   32ac0:	str	lr, [fp, #-44]	; 0xffffffd4
   32ac4:	str	r4, [fp, #-48]	; 0xffffffd0
   32ac8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   32acc:	mov	r2, #0
   32ad0:	str	r2, [fp, #-52]	; 0xffffffcc
   32ad4:	str	r1, [fp, #-56]	; 0xffffffc8
   32ad8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32adc:	str	r2, [sp, #60]	; 0x3c
   32ae0:	str	r1, [sp, #56]	; 0x38
   32ae4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   32ae8:	str	r2, [sp, #52]	; 0x34
   32aec:	str	r1, [sp, #48]	; 0x30
   32af0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   32af4:	str	r2, [sp, #44]	; 0x2c
   32af8:	str	r1, [sp, #40]	; 0x28
   32afc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   32b00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32b04:	ldr	ip, [sp, #48]	; 0x30
   32b08:	ldr	lr, [sp, #52]	; 0x34
   32b0c:	umull	r4, r5, r1, ip
   32b10:	mla	r1, r1, lr, r5
   32b14:	mla	r1, r3, ip, r1
   32b18:	str	r4, [sp, #32]
   32b1c:	str	r1, [sp, #36]	; 0x24
   32b20:	ldr	r1, [sp, #56]	; 0x38
   32b24:	ldr	r3, [sp, #60]	; 0x3c
   32b28:	ldr	ip, [sp, #48]	; 0x30
   32b2c:	ldr	lr, [sp, #52]	; 0x34
   32b30:	umull	r4, r5, r1, ip
   32b34:	mla	r1, r1, lr, r5
   32b38:	mla	r1, r3, ip, r1
   32b3c:	str	r4, [sp, #24]
   32b40:	str	r1, [sp, #28]
   32b44:	ldr	r1, [fp, #-56]	; 0xffffffc8
   32b48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32b4c:	ldr	ip, [sp, #40]	; 0x28
   32b50:	ldr	lr, [sp, #44]	; 0x2c
   32b54:	umull	r4, r5, r1, ip
   32b58:	mla	r1, r1, lr, r5
   32b5c:	mla	r1, r3, ip, r1
   32b60:	str	r4, [sp, #16]
   32b64:	str	r1, [sp, #20]
   32b68:	ldr	r1, [sp, #56]	; 0x38
   32b6c:	ldr	r3, [sp, #60]	; 0x3c
   32b70:	ldr	ip, [sp, #40]	; 0x28
   32b74:	ldr	lr, [sp, #44]	; 0x2c
   32b78:	umull	r4, r5, r1, ip
   32b7c:	mla	r1, r1, lr, r5
   32b80:	mla	r1, r3, ip, r1
   32b84:	str	r4, [sp, #8]
   32b88:	str	r1, [sp, #12]
   32b8c:	ldr	r1, [sp, #12]
   32b90:	ldr	r3, [sp, #16]
   32b94:	adds	r1, r1, r3
   32b98:	adc	r2, r2, #0
   32b9c:	ldr	r3, [sp, #24]
   32ba0:	adds	r1, r1, r3
   32ba4:	adc	r2, r2, #0
   32ba8:	str	r1, [sp]
   32bac:	str	r2, [sp, #4]
   32bb0:	ldr	r1, [sp]
   32bb4:	ldr	r2, [sp, #4]
   32bb8:	adds	r1, r1, #-2147483648	; 0x80000000
   32bbc:	adc	r2, r2, #0
   32bc0:	str	r1, [sp]
   32bc4:	str	r2, [sp, #4]
   32bc8:	ldr	r1, [sp, #32]
   32bcc:	ldr	r2, [sp, #36]	; 0x24
   32bd0:	ldr	r3, [sp, #20]
   32bd4:	adds	r1, r1, r3
   32bd8:	adc	r2, r2, #0
   32bdc:	ldr	r3, [sp, #28]
   32be0:	adds	r1, r1, r3
   32be4:	adc	r2, r2, #0
   32be8:	ldr	r3, [sp, #4]
   32bec:	adds	r1, r1, r3
   32bf0:	adc	r2, r2, #0
   32bf4:	str	r1, [r0]
   32bf8:	str	r2, [r0, #4]
   32bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   32c00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   32c04:	add	r1, r1, r2
   32c08:	add	r1, r1, #64	; 0x40
   32c0c:	str	r1, [r0, #8]
   32c10:	sub	sp, fp, #16
   32c14:	pop	{r4, r5, r6, sl, fp, pc}
   32c18:	push	{fp, lr}
   32c1c:	mov	fp, sp
   32c20:	sub	sp, sp, #88	; 0x58
   32c24:	ldr	ip, [pc, #412]	; 32dc8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   32c28:	str	r0, [fp, #-24]	; 0xffffffe8
   32c2c:	str	r1, [fp, #-20]	; 0xffffffec
   32c30:	str	r2, [fp, #-16]
   32c34:	str	r3, [fp, #-12]
   32c38:	mov	r0, #1048576	; 0x100000
   32c3c:	str	r0, [fp, #-28]	; 0xffffffe4
   32c40:	mov	r0, #0
   32c44:	str	r0, [fp, #-32]	; 0xffffffe0
   32c48:	movw	r0, #65535	; 0xffff
   32c4c:	movt	r0, #15
   32c50:	str	r0, [fp, #-36]	; 0xffffffdc
   32c54:	mvn	r0, #0
   32c58:	str	r0, [fp, #-40]	; 0xffffffd8
   32c5c:	str	ip, [sp, #44]	; 0x2c
   32c60:	movw	r0, #1075	; 0x433
   32c64:	str	r0, [sp, #40]	; 0x28
   32c68:	movw	r0, #52	; 0x34
   32c6c:	str	r0, [sp, #36]	; 0x24
   32c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   32c74:	str	r0, [sp, #16]
   32c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   32c7c:	str	r0, [sp, #20]
   32c80:	ldr	r0, [fp, #-16]
   32c84:	str	r0, [sp, #24]
   32c88:	ldr	r0, [fp, #-12]
   32c8c:	str	r0, [sp, #28]
   32c90:	ldr	r0, [sp, #20]
   32c94:	cmp	r0, #2097152	; 0x200000
   32c98:	bcc	32cc8 <grisu3_diy_fp_encode_double@@Base+0xa78>
   32c9c:	b	32ca0 <grisu3_diy_fp_encode_double@@Base+0xa50>
   32ca0:	ldr	r0, [sp, #16]
   32ca4:	ldr	r1, [sp, #20]
   32ca8:	lsrs	r1, r1, #1
   32cac:	rrx	r0, r0
   32cb0:	str	r1, [sp, #20]
   32cb4:	str	r0, [sp, #16]
   32cb8:	ldr	r0, [sp, #24]
   32cbc:	add	r0, r0, #1
   32cc0:	str	r0, [sp, #24]
   32cc4:	b	32c90 <grisu3_diy_fp_encode_double@@Base+0xa40>
   32cc8:	ldr	r0, [pc, #248]	; 32dc8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   32ccc:	ldr	r1, [sp, #24]
   32cd0:	cmp	r1, r0
   32cd4:	bge	32ce4 <grisu3_diy_fp_encode_double@@Base+0xa94>
   32cd8:	vldr	d16, [pc, #224]	; 32dc0 <grisu3_diy_fp_encode_double@@Base+0xb70>
   32cdc:	vstr	d16, [fp, #-8]
   32ce0:	b	32db4 <grisu3_diy_fp_encode_double@@Base+0xb64>
   32ce4:	b	32ce8 <grisu3_diy_fp_encode_double@@Base+0xa98>
   32ce8:	ldr	r0, [pc, #216]	; 32dc8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   32cec:	ldr	r1, [sp, #24]
   32cf0:	cmp	r1, r0
   32cf4:	movw	r0, #0
   32cf8:	str	r0, [sp, #4]
   32cfc:	ble	32d14 <grisu3_diy_fp_encode_double@@Base+0xac4>
   32d00:	ldrb	r0, [sp, #22]
   32d04:	and	r0, r0, #16
   32d08:	mov	r1, #1
   32d0c:	eor	r0, r1, r0, lsr #4
   32d10:	str	r0, [sp, #4]
   32d14:	ldr	r0, [sp, #4]
   32d18:	tst	r0, #1
   32d1c:	beq	32d50 <grisu3_diy_fp_encode_double@@Base+0xb00>
   32d20:	ldr	r0, [sp, #16]
   32d24:	ldr	r1, [sp, #20]
   32d28:	lsl	r1, r1, #1
   32d2c:	orr	r1, r1, r0, lsr #31
   32d30:	lsl	r0, r0, #1
   32d34:	str	r0, [sp, #16]
   32d38:	str	r1, [sp, #20]
   32d3c:	ldr	r0, [sp, #24]
   32d40:	mvn	r1, #0
   32d44:	add	r0, r0, r1
   32d48:	str	r0, [sp, #24]
   32d4c:	b	32ce8 <grisu3_diy_fp_encode_double@@Base+0xa98>
   32d50:	ldr	r0, [pc, #112]	; 32dc8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   32d54:	ldr	r1, [sp, #24]
   32d58:	cmp	r1, r0
   32d5c:	bne	32d80 <grisu3_diy_fp_encode_double@@Base+0xb30>
   32d60:	ldrb	r0, [sp, #22]
   32d64:	tst	r0, #16
   32d68:	bne	32d80 <grisu3_diy_fp_encode_double@@Base+0xb30>
   32d6c:	b	32d70 <grisu3_diy_fp_encode_double@@Base+0xb20>
   32d70:	mov	r0, #0
   32d74:	str	r0, [sp, #12]
   32d78:	str	r0, [sp, #8]
   32d7c:	b	32d98 <grisu3_diy_fp_encode_double@@Base+0xb48>
   32d80:	ldr	r0, [sp, #24]
   32d84:	movw	r1, #1075	; 0x433
   32d88:	add	r0, r0, r1
   32d8c:	asr	r1, r0, #31
   32d90:	str	r0, [sp, #8]
   32d94:	str	r1, [sp, #12]
   32d98:	ldr	r0, [sp, #16]
   32d9c:	ldr	r1, [sp, #20]
   32da0:	bfc	r1, #20, #12
   32da4:	ldr	r2, [sp, #8]
   32da8:	orr	r1, r1, r2, lsl #20
   32dac:	bl	378d4 <flatcc_json_parser_struct_as_root@@Base+0x160>
   32db0:	vstr	d0, [fp, #-8]
   32db4:	vldr	d0, [fp, #-8]
   32db8:	mov	sp, fp
   32dbc:	pop	{fp, pc}
	...
   32dc8:			; <UNDEFINED> instruction: 0xfffffbce

00032dcc <flatcc_json_parser_error_string@@Base>:
   32dcc:	sub	sp, sp, #12
   32dd0:	str	r0, [sp, #4]
   32dd4:	ldr	r0, [sp, #4]
   32dd8:	cmp	r0, #34	; 0x22
   32ddc:	str	r0, [sp]
   32de0:	bhi	330b0 <flatcc_json_parser_error_string@@Base+0x2e4>
   32de4:	add	r0, pc, #8
   32de8:	ldr	r1, [sp]
   32dec:	ldr	r2, [r0, r1, lsl #2]
   32df0:	add	pc, r0, r2
   32df4:	andeq	r0, r0, ip, lsl #1
   32df8:	muleq	r0, ip, r0
   32dfc:	andeq	r0, r0, ip, lsr #1
   32e00:	strheq	r0, [r0], -ip
   32e04:	andeq	r0, r0, ip, asr #1
   32e08:	ldrdeq	r0, [r0], -ip
   32e0c:	andeq	r0, r0, ip, ror #1
   32e10:	strdeq	r0, [r0], -ip
   32e14:	andeq	r0, r0, ip, lsl #2
   32e18:	andeq	r0, r0, ip, lsl r1
   32e1c:	andeq	r0, r0, ip, lsr #2
   32e20:	andeq	r0, r0, ip, lsr r1
   32e24:	andeq	r0, r0, ip, asr #2
   32e28:	andeq	r0, r0, ip, asr r1
   32e2c:	andeq	r0, r0, ip, ror #2
   32e30:	andeq	r0, r0, ip, ror r1
   32e34:	andeq	r0, r0, ip, lsl #3
   32e38:	muleq	r0, ip, r1
   32e3c:	andeq	r0, r0, ip, lsr #3
   32e40:			; <UNDEFINED> instruction: 0x000001bc
   32e44:	andeq	r0, r0, ip, asr #3
   32e48:	ldrdeq	r0, [r0], -ip
   32e4c:	andeq	r0, r0, ip, ror #3
   32e50:	strdeq	r0, [r0], -ip
   32e54:	andeq	r0, r0, ip, lsl #4
   32e58:	andeq	r0, r0, ip, lsl r2
   32e5c:	andeq	r0, r0, ip, lsr #4
   32e60:	andeq	r0, r0, ip, lsr r2
   32e64:	andeq	r0, r0, ip, asr #4
   32e68:	andeq	r0, r0, ip, asr r2
   32e6c:	andeq	r0, r0, ip, ror #4
   32e70:	andeq	r0, r0, ip, ror r2
   32e74:	andeq	r0, r0, ip, lsl #5
   32e78:	muleq	r0, ip, r2
   32e7c:	andeq	r0, r0, ip, lsr #5
   32e80:	ldr	r0, [pc, #712]	; 33150 <flatcc_json_parser_error_string@@Base+0x384>
   32e84:	add	r0, pc, r0
   32e88:	str	r0, [sp, #8]
   32e8c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32e90:	ldr	r0, [pc, #692]	; 3314c <flatcc_json_parser_error_string@@Base+0x380>
   32e94:	add	r0, pc, r0
   32e98:	str	r0, [sp, #8]
   32e9c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ea0:	ldr	r0, [pc, #672]	; 33148 <flatcc_json_parser_error_string@@Base+0x37c>
   32ea4:	add	r0, pc, r0
   32ea8:	str	r0, [sp, #8]
   32eac:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32eb0:	ldr	r0, [pc, #652]	; 33144 <flatcc_json_parser_error_string@@Base+0x378>
   32eb4:	add	r0, pc, r0
   32eb8:	str	r0, [sp, #8]
   32ebc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ec0:	ldr	r0, [pc, #632]	; 33140 <flatcc_json_parser_error_string@@Base+0x374>
   32ec4:	add	r0, pc, r0
   32ec8:	str	r0, [sp, #8]
   32ecc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ed0:	ldr	r0, [pc, #612]	; 3313c <flatcc_json_parser_error_string@@Base+0x370>
   32ed4:	add	r0, pc, r0
   32ed8:	str	r0, [sp, #8]
   32edc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ee0:	ldr	r0, [pc, #592]	; 33138 <flatcc_json_parser_error_string@@Base+0x36c>
   32ee4:	add	r0, pc, r0
   32ee8:	str	r0, [sp, #8]
   32eec:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ef0:	ldr	r0, [pc, #572]	; 33134 <flatcc_json_parser_error_string@@Base+0x368>
   32ef4:	add	r0, pc, r0
   32ef8:	str	r0, [sp, #8]
   32efc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f00:	ldr	r0, [pc, #552]	; 33130 <flatcc_json_parser_error_string@@Base+0x364>
   32f04:	add	r0, pc, r0
   32f08:	str	r0, [sp, #8]
   32f0c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f10:	ldr	r0, [pc, #532]	; 3312c <flatcc_json_parser_error_string@@Base+0x360>
   32f14:	add	r0, pc, r0
   32f18:	str	r0, [sp, #8]
   32f1c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f20:	ldr	r0, [pc, #512]	; 33128 <flatcc_json_parser_error_string@@Base+0x35c>
   32f24:	add	r0, pc, r0
   32f28:	str	r0, [sp, #8]
   32f2c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f30:	ldr	r0, [pc, #492]	; 33124 <flatcc_json_parser_error_string@@Base+0x358>
   32f34:	add	r0, pc, r0
   32f38:	str	r0, [sp, #8]
   32f3c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f40:	ldr	r0, [pc, #472]	; 33120 <flatcc_json_parser_error_string@@Base+0x354>
   32f44:	add	r0, pc, r0
   32f48:	str	r0, [sp, #8]
   32f4c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f50:	ldr	r0, [pc, #452]	; 3311c <flatcc_json_parser_error_string@@Base+0x350>
   32f54:	add	r0, pc, r0
   32f58:	str	r0, [sp, #8]
   32f5c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f60:	ldr	r0, [pc, #432]	; 33118 <flatcc_json_parser_error_string@@Base+0x34c>
   32f64:	add	r0, pc, r0
   32f68:	str	r0, [sp, #8]
   32f6c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f70:	ldr	r0, [pc, #412]	; 33114 <flatcc_json_parser_error_string@@Base+0x348>
   32f74:	add	r0, pc, r0
   32f78:	str	r0, [sp, #8]
   32f7c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f80:	ldr	r0, [pc, #392]	; 33110 <flatcc_json_parser_error_string@@Base+0x344>
   32f84:	add	r0, pc, r0
   32f88:	str	r0, [sp, #8]
   32f8c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32f90:	ldr	r0, [pc, #372]	; 3310c <flatcc_json_parser_error_string@@Base+0x340>
   32f94:	add	r0, pc, r0
   32f98:	str	r0, [sp, #8]
   32f9c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32fa0:	ldr	r0, [pc, #352]	; 33108 <flatcc_json_parser_error_string@@Base+0x33c>
   32fa4:	add	r0, pc, r0
   32fa8:	str	r0, [sp, #8]
   32fac:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32fb0:	ldr	r0, [pc, #332]	; 33104 <flatcc_json_parser_error_string@@Base+0x338>
   32fb4:	add	r0, pc, r0
   32fb8:	str	r0, [sp, #8]
   32fbc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32fc0:	ldr	r0, [pc, #312]	; 33100 <flatcc_json_parser_error_string@@Base+0x334>
   32fc4:	add	r0, pc, r0
   32fc8:	str	r0, [sp, #8]
   32fcc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32fd0:	ldr	r0, [pc, #292]	; 330fc <flatcc_json_parser_error_string@@Base+0x330>
   32fd4:	add	r0, pc, r0
   32fd8:	str	r0, [sp, #8]
   32fdc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32fe0:	ldr	r0, [pc, #272]	; 330f8 <flatcc_json_parser_error_string@@Base+0x32c>
   32fe4:	add	r0, pc, r0
   32fe8:	str	r0, [sp, #8]
   32fec:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   32ff0:	ldr	r0, [pc, #252]	; 330f4 <flatcc_json_parser_error_string@@Base+0x328>
   32ff4:	add	r0, pc, r0
   32ff8:	str	r0, [sp, #8]
   32ffc:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33000:	ldr	r0, [pc, #232]	; 330f0 <flatcc_json_parser_error_string@@Base+0x324>
   33004:	add	r0, pc, r0
   33008:	str	r0, [sp, #8]
   3300c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33010:	ldr	r0, [pc, #212]	; 330ec <flatcc_json_parser_error_string@@Base+0x320>
   33014:	add	r0, pc, r0
   33018:	str	r0, [sp, #8]
   3301c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33020:	ldr	r0, [pc, #192]	; 330e8 <flatcc_json_parser_error_string@@Base+0x31c>
   33024:	add	r0, pc, r0
   33028:	str	r0, [sp, #8]
   3302c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33030:	ldr	r0, [pc, #172]	; 330e4 <flatcc_json_parser_error_string@@Base+0x318>
   33034:	add	r0, pc, r0
   33038:	str	r0, [sp, #8]
   3303c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33040:	ldr	r0, [pc, #152]	; 330e0 <flatcc_json_parser_error_string@@Base+0x314>
   33044:	add	r0, pc, r0
   33048:	str	r0, [sp, #8]
   3304c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33050:	ldr	r0, [pc, #132]	; 330dc <flatcc_json_parser_error_string@@Base+0x310>
   33054:	add	r0, pc, r0
   33058:	str	r0, [sp, #8]
   3305c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33060:	ldr	r0, [pc, #112]	; 330d8 <flatcc_json_parser_error_string@@Base+0x30c>
   33064:	add	r0, pc, r0
   33068:	str	r0, [sp, #8]
   3306c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33070:	ldr	r0, [pc, #92]	; 330d4 <flatcc_json_parser_error_string@@Base+0x308>
   33074:	add	r0, pc, r0
   33078:	str	r0, [sp, #8]
   3307c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33080:	ldr	r0, [pc, #72]	; 330d0 <flatcc_json_parser_error_string@@Base+0x304>
   33084:	add	r0, pc, r0
   33088:	str	r0, [sp, #8]
   3308c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   33090:	ldr	r0, [pc, #52]	; 330cc <flatcc_json_parser_error_string@@Base+0x300>
   33094:	add	r0, pc, r0
   33098:	str	r0, [sp, #8]
   3309c:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   330a0:	ldr	r0, [pc, #32]	; 330c8 <flatcc_json_parser_error_string@@Base+0x2fc>
   330a4:	add	r0, pc, r0
   330a8:	str	r0, [sp, #8]
   330ac:	b	330bc <flatcc_json_parser_error_string@@Base+0x2f0>
   330b0:	ldr	r0, [pc, #156]	; 33154 <flatcc_json_parser_error_string@@Base+0x388>
   330b4:	add	r0, pc, r0
   330b8:	str	r0, [sp, #8]
   330bc:	ldr	r0, [sp, #8]
   330c0:	add	sp, sp, #12
   330c4:	bx	lr
   330c8:	andeq	r7, r1, sp, lsl #22
   330cc:	andeq	r7, r1, r4, asr #28
   330d0:	andeq	r7, r1, sl, lsr lr
   330d4:	andeq	r7, r1, r3, lsr lr
   330d8:	andeq	r7, r1, r6, lsr #28
   330dc:	andeq	r7, r1, r9, lsl #15
   330e0:	andeq	r7, r1, ip, lsr #28
   330e4:	andeq	r7, r1, r1, lsr #28
   330e8:	andeq	r7, r1, r2, lsl lr
   330ec:	andeq	r7, r1, r5, lsl #28
   330f0:	andeq	r7, r1, r1, lsl #28
   330f4:	andeq	r7, r1, sp, ror #27
   330f8:	andeq	r7, r1, lr, ror #27
   330fc:	andeq	r7, r1, lr, ror #27
   33100:	andeq	r7, r1, sl, ror #27
   33104:	andeq	r7, r1, sp, ror #27
   33108:	andeq	r7, r1, lr, ror #27
   3310c:	andeq	r7, r1, ip, ror #27
   33110:	andeq	r7, r1, ip, ror #27
   33114:	andeq	r7, r1, r9, ror #27
   33118:	andeq	r7, r1, r0, ror #27
   3311c:	andeq	r7, r1, r1, ror #27
   33120:	andeq	r7, r1, r0, ror #27
   33124:	andeq	r7, r1, r1, ror #27
   33128:	ldrdeq	r7, [r1], -pc	; <UNPREDICTABLE>
   3312c:	ldrdeq	r7, [r1], -lr
   33130:	andeq	r7, r1, r4, ror #27
   33134:	andeq	r7, r1, sp, ror #19
   33138:	strdeq	r7, [r1], -r4
   3313c:	andeq	r7, r1, pc, ror #27
   33140:	strdeq	r7, [r1], -r0
   33144:	strdeq	r7, [r1], -r1
   33148:	strdeq	r7, [r1], -r4
   3314c:	andeq	r7, r1, r0, lsl #28
   33150:	andeq	r7, r1, r0, lsl r9
   33154:	andeq	r7, r1, fp, lsl #22

00033158 <flatcc_json_parser_set_error@@Base>:
   33158:	sub	sp, sp, #16
   3315c:	str	r0, [sp, #12]
   33160:	str	r1, [sp, #8]
   33164:	str	r2, [sp, #4]
   33168:	str	r3, [sp]
   3316c:	ldr	r0, [sp, #12]
   33170:	ldr	r0, [r0, #20]
   33174:	cmp	r0, #0
   33178:	bne	331b0 <flatcc_json_parser_set_error@@Base+0x58>
   3317c:	ldr	r0, [sp]
   33180:	ldr	r1, [sp, #12]
   33184:	str	r0, [r1, #20]
   33188:	ldr	r0, [sp, #8]
   3318c:	ldr	r1, [sp, #12]
   33190:	ldr	r1, [r1, #4]
   33194:	sub	r0, r0, r1
   33198:	add	r0, r0, #1
   3319c:	ldr	r1, [sp, #12]
   331a0:	str	r0, [r1, #16]
   331a4:	ldr	r0, [sp, #8]
   331a8:	ldr	r1, [sp, #12]
   331ac:	str	r0, [r1, #32]
   331b0:	ldr	r0, [sp, #4]
   331b4:	add	sp, sp, #16
   331b8:	bx	lr

000331bc <flatcc_json_parser_string_part@@Base>:
   331bc:	push	{fp, lr}
   331c0:	mov	fp, sp
   331c4:	sub	sp, sp, #24
   331c8:	str	r0, [fp, #-8]
   331cc:	str	r1, [sp, #12]
   331d0:	str	r2, [sp, #8]
   331d4:	ldr	r0, [sp, #12]
   331d8:	ldr	r1, [sp, #8]
   331dc:	cmp	r0, r1
   331e0:	movw	r0, #0
   331e4:	str	r0, [sp, #4]
   331e8:	beq	33234 <flatcc_json_parser_string_part@@Base+0x78>
   331ec:	ldr	r0, [sp, #12]
   331f0:	ldrb	r0, [r0]
   331f4:	cmp	r0, #34	; 0x22
   331f8:	movw	r0, #0
   331fc:	str	r0, [sp, #4]
   33200:	beq	33234 <flatcc_json_parser_string_part@@Base+0x78>
   33204:	ldr	r0, [sp, #12]
   33208:	ldrb	r0, [r0]
   3320c:	cmp	r0, #32
   33210:	movw	r0, #0
   33214:	str	r0, [sp, #4]
   33218:	blt	33234 <flatcc_json_parser_string_part@@Base+0x78>
   3321c:	ldr	r0, [sp, #12]
   33220:	ldrb	r0, [r0]
   33224:	cmp	r0, #92	; 0x5c
   33228:	movw	r0, #0
   3322c:	movne	r0, #1
   33230:	str	r0, [sp, #4]
   33234:	ldr	r0, [sp, #4]
   33238:	tst	r0, #1
   3323c:	beq	33250 <flatcc_json_parser_string_part@@Base+0x94>
   33240:	ldr	r0, [sp, #12]
   33244:	add	r0, r0, #1
   33248:	str	r0, [sp, #12]
   3324c:	b	331d4 <flatcc_json_parser_string_part@@Base+0x18>
   33250:	ldr	r0, [sp, #12]
   33254:	ldr	r1, [sp, #8]
   33258:	cmp	r0, r1
   3325c:	bne	3327c <flatcc_json_parser_string_part@@Base+0xc0>
   33260:	ldr	r0, [fp, #-8]
   33264:	ldr	r1, [sp, #12]
   33268:	ldr	r2, [sp, #8]
   3326c:	movw	r3, #20
   33270:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33274:	str	r0, [fp, #-4]
   33278:	b	332cc <flatcc_json_parser_string_part@@Base+0x110>
   3327c:	ldr	r0, [sp, #12]
   33280:	ldrb	r0, [r0]
   33284:	cmp	r0, #34	; 0x22
   33288:	bne	33298 <flatcc_json_parser_string_part@@Base+0xdc>
   3328c:	ldr	r0, [sp, #12]
   33290:	str	r0, [fp, #-4]
   33294:	b	332cc <flatcc_json_parser_string_part@@Base+0x110>
   33298:	ldr	r0, [sp, #12]
   3329c:	ldrb	r0, [r0]
   332a0:	cmp	r0, #32
   332a4:	bge	332c4 <flatcc_json_parser_string_part@@Base+0x108>
   332a8:	ldr	r0, [fp, #-8]
   332ac:	ldr	r1, [sp, #12]
   332b0:	ldr	r2, [sp, #8]
   332b4:	movw	r3, #17
   332b8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   332bc:	str	r0, [fp, #-4]
   332c0:	b	332cc <flatcc_json_parser_string_part@@Base+0x110>
   332c4:	ldr	r0, [sp, #12]
   332c8:	str	r0, [fp, #-4]
   332cc:	ldr	r0, [fp, #-4]
   332d0:	mov	sp, fp
   332d4:	pop	{fp, pc}

000332d8 <flatcc_json_parser_space_ext@@Base>:
   332d8:	push	{fp, lr}
   332dc:	mov	fp, sp
   332e0:	sub	sp, sp, #32
   332e4:	str	r0, [fp, #-8]
   332e8:	str	r1, [fp, #-12]
   332ec:	str	r2, [sp, #16]
   332f0:	b	332f4 <flatcc_json_parser_space_ext@@Base+0x1c>
   332f4:	ldr	r0, [fp, #-12]
   332f8:	ldr	r1, [sp, #16]
   332fc:	cmp	r0, r1
   33300:	movw	r0, #0
   33304:	str	r0, [sp, #12]
   33308:	beq	33324 <flatcc_json_parser_space_ext@@Base+0x4c>
   3330c:	ldr	r0, [fp, #-12]
   33310:	ldrb	r0, [r0]
   33314:	cmp	r0, #32
   33318:	movw	r0, #0
   3331c:	moveq	r0, #1
   33320:	str	r0, [sp, #12]
   33324:	ldr	r0, [sp, #12]
   33328:	tst	r0, #1
   3332c:	beq	33340 <flatcc_json_parser_space_ext@@Base+0x68>
   33330:	ldr	r0, [fp, #-12]
   33334:	add	r0, r0, #1
   33338:	str	r0, [fp, #-12]
   3333c:	b	332f4 <flatcc_json_parser_space_ext@@Base+0x1c>
   33340:	b	33344 <flatcc_json_parser_space_ext@@Base+0x6c>
   33344:	ldr	r0, [fp, #-12]
   33348:	ldr	r1, [sp, #16]
   3334c:	cmp	r0, r1
   33350:	movw	r0, #0
   33354:	str	r0, [sp, #8]
   33358:	beq	33374 <flatcc_json_parser_space_ext@@Base+0x9c>
   3335c:	ldr	r0, [fp, #-12]
   33360:	ldrb	r0, [r0]
   33364:	cmp	r0, #32
   33368:	movw	r0, #0
   3336c:	movle	r0, #1
   33370:	str	r0, [sp, #8]
   33374:	ldr	r0, [sp, #8]
   33378:	tst	r0, #1
   3337c:	beq	334a8 <flatcc_json_parser_space_ext@@Base+0x1d0>
   33380:	ldr	r0, [fp, #-12]
   33384:	ldrb	r0, [r0]
   33388:	sub	r0, r0, #9
   3338c:	cmp	r0, #23
   33390:	str	r0, [sp, #4]
   33394:	bhi	3348c <flatcc_json_parser_space_ext@@Base+0x1b4>
   33398:	add	r0, pc, #8
   3339c:	ldr	r1, [sp, #4]
   333a0:	ldr	r2, [r0, r1, lsl #2]
   333a4:	add	pc, r0, r2
   333a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   333ac:	andeq	r0, r0, r8, lsr #1
   333b0:	andeq	r0, r0, r4, ror #1
   333b4:	andeq	r0, r0, r4, ror #1
   333b8:	andeq	r0, r0, r0, rrx
   333bc:	andeq	r0, r0, r4, ror #1
   333c0:	andeq	r0, r0, r4, ror #1
   333c4:	andeq	r0, r0, r4, ror #1
   333c8:	andeq	r0, r0, r4, ror #1
   333cc:	andeq	r0, r0, r4, ror #1
   333d0:	andeq	r0, r0, r4, ror #1
   333d4:	andeq	r0, r0, r4, ror #1
   333d8:	andeq	r0, r0, r4, ror #1
   333dc:	andeq	r0, r0, r4, ror #1
   333e0:	andeq	r0, r0, r4, ror #1
   333e4:	andeq	r0, r0, r4, ror #1
   333e8:	andeq	r0, r0, r4, ror #1
   333ec:	andeq	r0, r0, r4, ror #1
   333f0:	andeq	r0, r0, r4, ror #1
   333f4:	andeq	r0, r0, r4, ror #1
   333f8:	andeq	r0, r0, r4, ror #1
   333fc:	andeq	r0, r0, r4, ror #1
   33400:	andeq	r0, r0, r4, ror #1
   33404:	andeq	r0, r0, r0, ror #1
   33408:	ldr	r0, [sp, #16]
   3340c:	ldr	r1, [fp, #-12]
   33410:	sub	r0, r0, r1
   33414:	cmp	r0, #1
   33418:	movw	r0, #0
   3341c:	str	r0, [sp]
   33420:	ble	3343c <flatcc_json_parser_space_ext@@Base+0x164>
   33424:	ldr	r0, [fp, #-12]
   33428:	ldrb	r0, [r0, #1]
   3342c:	cmp	r0, #10
   33430:	movw	r0, #0
   33434:	moveq	r0, #1
   33438:	str	r0, [sp]
   3343c:	ldr	r0, [sp]
   33440:	and	r0, r0, #1
   33444:	ldr	r1, [fp, #-12]
   33448:	add	r0, r1, r0
   3344c:	str	r0, [fp, #-12]
   33450:	ldr	r0, [fp, #-8]
   33454:	ldr	r1, [r0, #12]
   33458:	add	r1, r1, #1
   3345c:	str	r1, [r0, #12]
   33460:	ldr	r0, [fp, #-12]
   33464:	add	r0, r0, #1
   33468:	str	r0, [fp, #-12]
   3346c:	ldr	r1, [fp, #-8]
   33470:	str	r0, [r1, #4]
   33474:	b	33344 <flatcc_json_parser_space_ext@@Base+0x6c>
   33478:	ldr	r0, [fp, #-12]
   3347c:	add	r0, r0, #1
   33480:	str	r0, [fp, #-12]
   33484:	b	33344 <flatcc_json_parser_space_ext@@Base+0x6c>
   33488:	b	332f0 <flatcc_json_parser_space_ext@@Base+0x18>
   3348c:	ldr	r0, [fp, #-8]
   33490:	ldr	r1, [fp, #-12]
   33494:	ldr	r2, [sp, #16]
   33498:	movw	r3, #5
   3349c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   334a0:	str	r0, [fp, #-4]
   334a4:	b	334b0 <flatcc_json_parser_space_ext@@Base+0x1d8>
   334a8:	ldr	r0, [fp, #-12]
   334ac:	str	r0, [fp, #-4]
   334b0:	ldr	r0, [fp, #-4]
   334b4:	mov	sp, fp
   334b8:	pop	{fp, pc}

000334bc <flatcc_json_parser_string_escape@@Base>:
   334bc:	push	{fp, lr}
   334c0:	mov	fp, sp
   334c4:	sub	sp, sp, #32
   334c8:	str	r0, [fp, #-8]
   334cc:	str	r1, [fp, #-12]
   334d0:	str	r2, [sp, #16]
   334d4:	str	r3, [sp, #12]
   334d8:	ldr	r0, [sp, #16]
   334dc:	ldr	r1, [fp, #-12]
   334e0:	sub	r0, r0, r1
   334e4:	cmp	r0, #2
   334e8:	blt	334fc <flatcc_json_parser_string_escape@@Base+0x40>
   334ec:	ldr	r0, [fp, #-12]
   334f0:	ldrb	r0, [r0]
   334f4:	cmp	r0, #92	; 0x5c
   334f8:	beq	33524 <flatcc_json_parser_string_escape@@Base+0x68>
   334fc:	ldr	r0, [sp, #12]
   33500:	movw	r1, #0
   33504:	strb	r1, [r0]
   33508:	ldr	r0, [fp, #-8]
   3350c:	ldr	r1, [fp, #-12]
   33510:	ldr	r2, [sp, #16]
   33514:	movw	r3, #18
   33518:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3351c:	str	r0, [fp, #-4]
   33520:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33524:	ldr	r0, [fp, #-12]
   33528:	ldrb	r0, [r0, #1]
   3352c:	sub	r0, r0, #34	; 0x22
   33530:	cmp	r0, #86	; 0x56
   33534:	str	r0, [sp]
   33538:	bhi	33db0 <flatcc_json_parser_string_escape@@Base+0x8f4>
   3353c:	add	r0, pc, #8
   33540:	ldr	r1, [sp]
   33544:	ldr	r2, [r0, r1, lsl #2]
   33548:	add	pc, r0, r2
   3354c:	andeq	r0, r0, ip, ror #15
   33550:	andeq	r0, r0, r4, ror #16
   33554:	andeq	r0, r0, r4, ror #16
   33558:	andeq	r0, r0, r4, ror #16
   3355c:	andeq	r0, r0, r4, ror #16
   33560:	andeq	r0, r0, r4, ror #16
   33564:	andeq	r0, r0, r4, ror #16
   33568:	andeq	r0, r0, r4, ror #16
   3356c:	andeq	r0, r0, r4, ror #16
   33570:	andeq	r0, r0, r4, ror #16
   33574:	andeq	r0, r0, r4, ror #16
   33578:	andeq	r0, r0, r4, ror #16
   3357c:	andeq	r0, r0, r4, ror #16
   33580:	andeq	r0, r0, ip, lsr r8
   33584:	andeq	r0, r0, r4, ror #16
   33588:	andeq	r0, r0, r4, ror #16
   3358c:	andeq	r0, r0, r4, ror #16
   33590:	andeq	r0, r0, r4, ror #16
   33594:	andeq	r0, r0, r4, ror #16
   33598:	andeq	r0, r0, r4, ror #16
   3359c:	andeq	r0, r0, r4, ror #16
   335a0:	andeq	r0, r0, r4, ror #16
   335a4:	andeq	r0, r0, r4, ror #16
   335a8:	andeq	r0, r0, r4, ror #16
   335ac:	andeq	r0, r0, r4, ror #16
   335b0:	andeq	r0, r0, r4, ror #16
   335b4:	andeq	r0, r0, r4, ror #16
   335b8:	andeq	r0, r0, r4, ror #16
   335bc:	andeq	r0, r0, r4, ror #16
   335c0:	andeq	r0, r0, r4, ror #16
   335c4:	andeq	r0, r0, r4, ror #16
   335c8:	andeq	r0, r0, r4, ror #16
   335cc:	andeq	r0, r0, r4, ror #16
   335d0:	andeq	r0, r0, r4, ror #16
   335d4:	andeq	r0, r0, r4, ror #16
   335d8:	andeq	r0, r0, r4, ror #16
   335dc:	andeq	r0, r0, r4, ror #16
   335e0:	andeq	r0, r0, r4, ror #16
   335e4:	andeq	r0, r0, r4, ror #16
   335e8:	andeq	r0, r0, r4, ror #16
   335ec:	andeq	r0, r0, r4, ror #16
   335f0:	andeq	r0, r0, r4, ror #16
   335f4:	andeq	r0, r0, r4, ror #16
   335f8:	andeq	r0, r0, r4, ror #16
   335fc:	andeq	r0, r0, r4, ror #16
   33600:	andeq	r0, r0, r4, ror #16
   33604:	andeq	r0, r0, r4, ror #16
   33608:	andeq	r0, r0, r4, ror #16
   3360c:	andeq	r0, r0, r4, ror #16
   33610:	andeq	r0, r0, r4, ror #16
   33614:	andeq	r0, r0, r4, ror #16
   33618:	andeq	r0, r0, r4, ror #16
   3361c:	andeq	r0, r0, r4, ror #16
   33620:	andeq	r0, r0, r4, ror #16
   33624:	andeq	r0, r0, r4, ror #16
   33628:	andeq	r0, r0, r4, ror #16
   3362c:	andeq	r0, r0, r4, ror #16
   33630:	andeq	r0, r0, r4, ror #16
   33634:	andeq	r0, r0, r4, lsl r8
   33638:	andeq	r0, r0, r4, ror #16
   3363c:	andeq	r0, r0, r4, ror #16
   33640:	andeq	r0, r0, r4, ror #16
   33644:	andeq	r0, r0, r4, ror #16
   33648:	andeq	r0, r0, r4, ror #16
   3364c:	muleq	r0, ip, r7
   33650:	andeq	r0, r0, r4, ror #16
   33654:	andeq	r0, r0, r4, ror #16
   33658:	andeq	r0, r0, r4, ror #16
   3365c:	andeq	r0, r0, r4, asr #15
   33660:	andeq	r0, r0, r4, ror #16
   33664:	andeq	r0, r0, r4, ror #16
   33668:	andeq	r0, r0, r4, ror #16
   3366c:	andeq	r0, r0, r4, ror #16
   33670:	andeq	r0, r0, r4, ror #16
   33674:	andeq	r0, r0, r4, ror #16
   33678:	andeq	r0, r0, r4, ror #16
   3367c:	andeq	r0, r0, ip, asr #14
   33680:	andeq	r0, r0, r4, ror #16
   33684:	andeq	r0, r0, r4, ror #16
   33688:	andeq	r0, r0, r4, ror #16
   3368c:	andeq	r0, r0, r4, ror r7
   33690:	andeq	r0, r0, r4, ror #16
   33694:	andeq	r0, r0, r4, lsr #14
   33698:	andeq	r0, r0, r0, lsr #6
   3369c:	andeq	r0, r0, r4, ror #16
   336a0:	andeq	r0, r0, r4, ror #16
   336a4:	andeq	r0, r0, ip, asr r1
   336a8:	movw	r0, #0
   336ac:	strb	r0, [sp, #10]
   336b0:	ldr	r0, [sp, #12]
   336b4:	movw	r1, #1
   336b8:	strb	r1, [r0]
   336bc:	ldr	r0, [sp, #16]
   336c0:	ldr	r1, [fp, #-12]
   336c4:	sub	r0, r0, r1
   336c8:	cmp	r0, #4
   336cc:	bge	336f8 <flatcc_json_parser_string_escape@@Base+0x23c>
   336d0:	ldr	r0, [sp, #12]
   336d4:	movw	r1, #0
   336d8:	strb	r1, [r0]
   336dc:	ldr	r0, [fp, #-8]
   336e0:	ldr	r1, [fp, #-12]
   336e4:	ldr	r2, [sp, #16]
   336e8:	movw	r3, #18
   336ec:	bl	33158 <flatcc_json_parser_set_error@@Base>
   336f0:	str	r0, [fp, #-4]
   336f4:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   336f8:	ldr	r0, [fp, #-12]
   336fc:	ldrb	r0, [r0, #2]
   33700:	strb	r0, [sp, #11]
   33704:	ldrb	r0, [sp, #11]
   33708:	cmp	r0, #48	; 0x30
   3370c:	blt	33738 <flatcc_json_parser_string_escape@@Base+0x27c>
   33710:	ldrb	r0, [sp, #11]
   33714:	cmp	r0, #57	; 0x39
   33718:	bgt	33738 <flatcc_json_parser_string_escape@@Base+0x27c>
   3371c:	ldrb	r0, [sp, #11]
   33720:	sub	r0, r0, #48	; 0x30
   33724:	lsl	r0, r0, #4
   33728:	ldrb	r1, [sp, #10]
   3372c:	orr	r0, r1, r0
   33730:	strb	r0, [sp, #10]
   33734:	b	337a8 <flatcc_json_parser_string_escape@@Base+0x2ec>
   33738:	ldrb	r0, [sp, #11]
   3373c:	orr	r0, r0, #32
   33740:	strb	r0, [sp, #11]
   33744:	ldrb	r0, [sp, #11]
   33748:	cmp	r0, #97	; 0x61
   3374c:	blt	3377c <flatcc_json_parser_string_escape@@Base+0x2c0>
   33750:	ldrb	r0, [sp, #11]
   33754:	cmp	r0, #102	; 0x66
   33758:	bgt	3377c <flatcc_json_parser_string_escape@@Base+0x2c0>
   3375c:	ldrb	r0, [sp, #11]
   33760:	sub	r0, r0, #97	; 0x61
   33764:	add	r0, r0, #10
   33768:	lsl	r0, r0, #4
   3376c:	ldrb	r1, [sp, #10]
   33770:	orr	r0, r1, r0
   33774:	strb	r0, [sp, #10]
   33778:	b	337a4 <flatcc_json_parser_string_escape@@Base+0x2e8>
   3377c:	ldr	r0, [sp, #12]
   33780:	movw	r1, #0
   33784:	strb	r1, [r0]
   33788:	ldr	r0, [fp, #-8]
   3378c:	ldr	r1, [fp, #-12]
   33790:	ldr	r2, [sp, #16]
   33794:	movw	r3, #18
   33798:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3379c:	str	r0, [fp, #-4]
   337a0:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   337a4:	b	337a8 <flatcc_json_parser_string_escape@@Base+0x2ec>
   337a8:	ldr	r0, [fp, #-12]
   337ac:	ldrb	r0, [r0, #3]
   337b0:	strb	r0, [sp, #11]
   337b4:	ldrb	r0, [sp, #11]
   337b8:	cmp	r0, #48	; 0x30
   337bc:	blt	337e4 <flatcc_json_parser_string_escape@@Base+0x328>
   337c0:	ldrb	r0, [sp, #11]
   337c4:	cmp	r0, #57	; 0x39
   337c8:	bgt	337e4 <flatcc_json_parser_string_escape@@Base+0x328>
   337cc:	ldrb	r0, [sp, #11]
   337d0:	sub	r0, r0, #48	; 0x30
   337d4:	ldrb	r1, [sp, #10]
   337d8:	orr	r0, r1, r0
   337dc:	strb	r0, [sp, #10]
   337e0:	b	33850 <flatcc_json_parser_string_escape@@Base+0x394>
   337e4:	ldrb	r0, [sp, #11]
   337e8:	orr	r0, r0, #32
   337ec:	strb	r0, [sp, #11]
   337f0:	ldrb	r0, [sp, #11]
   337f4:	cmp	r0, #97	; 0x61
   337f8:	blt	33824 <flatcc_json_parser_string_escape@@Base+0x368>
   337fc:	ldrb	r0, [sp, #11]
   33800:	cmp	r0, #102	; 0x66
   33804:	bgt	33824 <flatcc_json_parser_string_escape@@Base+0x368>
   33808:	ldrb	r0, [sp, #11]
   3380c:	sub	r0, r0, #97	; 0x61
   33810:	add	r0, r0, #10
   33814:	ldrb	r1, [sp, #10]
   33818:	orr	r0, r1, r0
   3381c:	strb	r0, [sp, #10]
   33820:	b	3384c <flatcc_json_parser_string_escape@@Base+0x390>
   33824:	ldr	r0, [sp, #12]
   33828:	movw	r1, #0
   3382c:	strb	r1, [r0]
   33830:	ldr	r0, [fp, #-8]
   33834:	ldr	r1, [fp, #-12]
   33838:	ldr	r2, [sp, #16]
   3383c:	movw	r3, #18
   33840:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33844:	str	r0, [fp, #-4]
   33848:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   3384c:	b	33850 <flatcc_json_parser_string_escape@@Base+0x394>
   33850:	ldrb	r0, [sp, #10]
   33854:	ldr	r1, [sp, #12]
   33858:	strb	r0, [r1, #1]
   3385c:	ldr	r0, [fp, #-12]
   33860:	add	r0, r0, #4
   33864:	str	r0, [fp, #-4]
   33868:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   3386c:	ldr	r0, [sp, #16]
   33870:	ldr	r1, [fp, #-12]
   33874:	sub	r0, r0, r1
   33878:	cmp	r0, #6
   3387c:	bge	338a8 <flatcc_json_parser_string_escape@@Base+0x3ec>
   33880:	ldr	r0, [sp, #12]
   33884:	movw	r1, #0
   33888:	strb	r1, [r0]
   3388c:	ldr	r0, [fp, #-8]
   33890:	ldr	r1, [fp, #-12]
   33894:	ldr	r2, [sp, #16]
   33898:	movw	r3, #18
   3389c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   338a0:	str	r0, [fp, #-4]
   338a4:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   338a8:	movw	r0, #0
   338ac:	strh	r0, [sp, #8]
   338b0:	ldr	r0, [fp, #-12]
   338b4:	ldrb	r0, [r0, #2]
   338b8:	strb	r0, [sp, #11]
   338bc:	ldrb	r0, [sp, #11]
   338c0:	cmp	r0, #48	; 0x30
   338c4:	blt	338f0 <flatcc_json_parser_string_escape@@Base+0x434>
   338c8:	ldrb	r0, [sp, #11]
   338cc:	cmp	r0, #57	; 0x39
   338d0:	bgt	338f0 <flatcc_json_parser_string_escape@@Base+0x434>
   338d4:	ldrb	r0, [sp, #11]
   338d8:	sub	r0, r0, #48	; 0x30
   338dc:	strh	r0, [sp, #6]
   338e0:	ldrh	r0, [sp, #6]
   338e4:	lsl	r0, r0, #12
   338e8:	strh	r0, [sp, #8]
   338ec:	b	33968 <flatcc_json_parser_string_escape@@Base+0x4ac>
   338f0:	ldrb	r0, [sp, #11]
   338f4:	orr	r0, r0, #32
   338f8:	strb	r0, [sp, #11]
   338fc:	ldrb	r0, [sp, #11]
   33900:	cmp	r0, #97	; 0x61
   33904:	blt	3393c <flatcc_json_parser_string_escape@@Base+0x480>
   33908:	ldrb	r0, [sp, #11]
   3390c:	cmp	r0, #102	; 0x66
   33910:	bgt	3393c <flatcc_json_parser_string_escape@@Base+0x480>
   33914:	ldrb	r0, [sp, #11]
   33918:	sub	r0, r0, #97	; 0x61
   3391c:	add	r0, r0, #10
   33920:	strh	r0, [sp, #6]
   33924:	ldrh	r0, [sp, #6]
   33928:	lsl	r0, r0, #12
   3392c:	ldrh	r1, [sp, #8]
   33930:	orr	r0, r1, r0
   33934:	strh	r0, [sp, #8]
   33938:	b	33964 <flatcc_json_parser_string_escape@@Base+0x4a8>
   3393c:	ldr	r0, [sp, #12]
   33940:	movw	r1, #0
   33944:	strb	r1, [r0]
   33948:	ldr	r0, [fp, #-8]
   3394c:	ldr	r1, [fp, #-12]
   33950:	ldr	r2, [sp, #16]
   33954:	movw	r3, #18
   33958:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3395c:	str	r0, [fp, #-4]
   33960:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33964:	b	33968 <flatcc_json_parser_string_escape@@Base+0x4ac>
   33968:	ldr	r0, [fp, #-12]
   3396c:	ldrb	r0, [r0, #3]
   33970:	strb	r0, [sp, #11]
   33974:	ldrb	r0, [sp, #11]
   33978:	cmp	r0, #48	; 0x30
   3397c:	blt	339b0 <flatcc_json_parser_string_escape@@Base+0x4f4>
   33980:	ldrb	r0, [sp, #11]
   33984:	cmp	r0, #57	; 0x39
   33988:	bgt	339b0 <flatcc_json_parser_string_escape@@Base+0x4f4>
   3398c:	ldrb	r0, [sp, #11]
   33990:	sub	r0, r0, #48	; 0x30
   33994:	strh	r0, [sp, #6]
   33998:	ldrh	r0, [sp, #6]
   3399c:	lsl	r0, r0, #8
   339a0:	ldrh	r1, [sp, #8]
   339a4:	orr	r0, r1, r0
   339a8:	strh	r0, [sp, #8]
   339ac:	b	33a28 <flatcc_json_parser_string_escape@@Base+0x56c>
   339b0:	ldrb	r0, [sp, #11]
   339b4:	orr	r0, r0, #32
   339b8:	strb	r0, [sp, #11]
   339bc:	ldrb	r0, [sp, #11]
   339c0:	cmp	r0, #97	; 0x61
   339c4:	blt	339fc <flatcc_json_parser_string_escape@@Base+0x540>
   339c8:	ldrb	r0, [sp, #11]
   339cc:	cmp	r0, #102	; 0x66
   339d0:	bgt	339fc <flatcc_json_parser_string_escape@@Base+0x540>
   339d4:	ldrb	r0, [sp, #11]
   339d8:	sub	r0, r0, #97	; 0x61
   339dc:	add	r0, r0, #10
   339e0:	strh	r0, [sp, #6]
   339e4:	ldrh	r0, [sp, #6]
   339e8:	lsl	r0, r0, #8
   339ec:	ldrh	r1, [sp, #8]
   339f0:	orr	r0, r1, r0
   339f4:	strh	r0, [sp, #8]
   339f8:	b	33a24 <flatcc_json_parser_string_escape@@Base+0x568>
   339fc:	ldr	r0, [sp, #12]
   33a00:	movw	r1, #0
   33a04:	strb	r1, [r0]
   33a08:	ldr	r0, [fp, #-8]
   33a0c:	ldr	r1, [fp, #-12]
   33a10:	ldr	r2, [sp, #16]
   33a14:	movw	r3, #18
   33a18:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33a1c:	str	r0, [fp, #-4]
   33a20:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33a24:	b	33a28 <flatcc_json_parser_string_escape@@Base+0x56c>
   33a28:	ldr	r0, [fp, #-12]
   33a2c:	ldrb	r0, [r0, #4]
   33a30:	strb	r0, [sp, #11]
   33a34:	ldrb	r0, [sp, #11]
   33a38:	cmp	r0, #48	; 0x30
   33a3c:	blt	33a70 <flatcc_json_parser_string_escape@@Base+0x5b4>
   33a40:	ldrb	r0, [sp, #11]
   33a44:	cmp	r0, #57	; 0x39
   33a48:	bgt	33a70 <flatcc_json_parser_string_escape@@Base+0x5b4>
   33a4c:	ldrb	r0, [sp, #11]
   33a50:	sub	r0, r0, #48	; 0x30
   33a54:	strh	r0, [sp, #6]
   33a58:	ldrh	r0, [sp, #6]
   33a5c:	lsl	r0, r0, #4
   33a60:	ldrh	r1, [sp, #8]
   33a64:	orr	r0, r1, r0
   33a68:	strh	r0, [sp, #8]
   33a6c:	b	33ae8 <flatcc_json_parser_string_escape@@Base+0x62c>
   33a70:	ldrb	r0, [sp, #11]
   33a74:	orr	r0, r0, #32
   33a78:	strb	r0, [sp, #11]
   33a7c:	ldrb	r0, [sp, #11]
   33a80:	cmp	r0, #97	; 0x61
   33a84:	blt	33abc <flatcc_json_parser_string_escape@@Base+0x600>
   33a88:	ldrb	r0, [sp, #11]
   33a8c:	cmp	r0, #102	; 0x66
   33a90:	bgt	33abc <flatcc_json_parser_string_escape@@Base+0x600>
   33a94:	ldrb	r0, [sp, #11]
   33a98:	sub	r0, r0, #97	; 0x61
   33a9c:	add	r0, r0, #10
   33aa0:	strh	r0, [sp, #6]
   33aa4:	ldrh	r0, [sp, #6]
   33aa8:	lsl	r0, r0, #4
   33aac:	ldrh	r1, [sp, #8]
   33ab0:	orr	r0, r1, r0
   33ab4:	strh	r0, [sp, #8]
   33ab8:	b	33ae4 <flatcc_json_parser_string_escape@@Base+0x628>
   33abc:	ldr	r0, [sp, #12]
   33ac0:	movw	r1, #0
   33ac4:	strb	r1, [r0]
   33ac8:	ldr	r0, [fp, #-8]
   33acc:	ldr	r1, [fp, #-12]
   33ad0:	ldr	r2, [sp, #16]
   33ad4:	movw	r3, #18
   33ad8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33adc:	str	r0, [fp, #-4]
   33ae0:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33ae4:	b	33ae8 <flatcc_json_parser_string_escape@@Base+0x62c>
   33ae8:	ldr	r0, [fp, #-12]
   33aec:	ldrb	r0, [r0, #5]
   33af0:	strb	r0, [sp, #11]
   33af4:	ldrb	r0, [sp, #11]
   33af8:	cmp	r0, #48	; 0x30
   33afc:	blt	33b2c <flatcc_json_parser_string_escape@@Base+0x670>
   33b00:	ldrb	r0, [sp, #11]
   33b04:	cmp	r0, #57	; 0x39
   33b08:	bgt	33b2c <flatcc_json_parser_string_escape@@Base+0x670>
   33b0c:	ldrb	r0, [sp, #11]
   33b10:	sub	r0, r0, #48	; 0x30
   33b14:	strh	r0, [sp, #6]
   33b18:	ldrh	r0, [sp, #6]
   33b1c:	ldrh	r1, [sp, #8]
   33b20:	orr	r0, r1, r0
   33b24:	strh	r0, [sp, #8]
   33b28:	b	33ba0 <flatcc_json_parser_string_escape@@Base+0x6e4>
   33b2c:	ldrb	r0, [sp, #11]
   33b30:	orr	r0, r0, #32
   33b34:	strb	r0, [sp, #11]
   33b38:	ldrb	r0, [sp, #11]
   33b3c:	cmp	r0, #97	; 0x61
   33b40:	blt	33b74 <flatcc_json_parser_string_escape@@Base+0x6b8>
   33b44:	ldrb	r0, [sp, #11]
   33b48:	cmp	r0, #102	; 0x66
   33b4c:	bgt	33b74 <flatcc_json_parser_string_escape@@Base+0x6b8>
   33b50:	ldrb	r0, [sp, #11]
   33b54:	sub	r0, r0, #97	; 0x61
   33b58:	add	r0, r0, #10
   33b5c:	strh	r0, [sp, #6]
   33b60:	ldrh	r0, [sp, #6]
   33b64:	ldrh	r1, [sp, #8]
   33b68:	orr	r0, r1, r0
   33b6c:	strh	r0, [sp, #8]
   33b70:	b	33b9c <flatcc_json_parser_string_escape@@Base+0x6e0>
   33b74:	ldr	r0, [sp, #12]
   33b78:	movw	r1, #0
   33b7c:	strb	r1, [r0]
   33b80:	ldr	r0, [fp, #-8]
   33b84:	ldr	r1, [fp, #-12]
   33b88:	ldr	r2, [sp, #16]
   33b8c:	movw	r3, #18
   33b90:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33b94:	str	r0, [fp, #-4]
   33b98:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33b9c:	b	33ba0 <flatcc_json_parser_string_escape@@Base+0x6e4>
   33ba0:	ldrh	r0, [sp, #8]
   33ba4:	cmp	r0, #127	; 0x7f
   33ba8:	bgt	33bc8 <flatcc_json_parser_string_escape@@Base+0x70c>
   33bac:	ldr	r0, [sp, #12]
   33bb0:	movw	r1, #1
   33bb4:	strb	r1, [r0]
   33bb8:	ldrh	r0, [sp, #8]
   33bbc:	ldr	r1, [sp, #12]
   33bc0:	strb	r0, [r1, #1]
   33bc4:	b	33c60 <flatcc_json_parser_string_escape@@Base+0x7a4>
   33bc8:	ldrh	r0, [sp, #8]
   33bcc:	movw	r1, #2047	; 0x7ff
   33bd0:	cmp	r0, r1
   33bd4:	bgt	33c10 <flatcc_json_parser_string_escape@@Base+0x754>
   33bd8:	ldr	r0, [sp, #12]
   33bdc:	movw	r1, #2
   33be0:	strb	r1, [r0]
   33be4:	ldrh	r0, [sp, #8]
   33be8:	asr	r0, r0, #6
   33bec:	orr	r0, r0, #192	; 0xc0
   33bf0:	ldr	r1, [sp, #12]
   33bf4:	strb	r0, [r1, #1]
   33bf8:	ldrh	r0, [sp, #8]
   33bfc:	and	r0, r0, #63	; 0x3f
   33c00:	orr	r0, r0, #128	; 0x80
   33c04:	ldr	r1, [sp, #12]
   33c08:	strb	r0, [r1, #2]
   33c0c:	b	33c5c <flatcc_json_parser_string_escape@@Base+0x7a0>
   33c10:	ldr	r0, [sp, #12]
   33c14:	movw	r1, #3
   33c18:	strb	r1, [r0]
   33c1c:	ldrh	r0, [sp, #8]
   33c20:	asr	r0, r0, #12
   33c24:	orr	r0, r0, #224	; 0xe0
   33c28:	ldr	r1, [sp, #12]
   33c2c:	strb	r0, [r1, #1]
   33c30:	ldrh	r0, [sp, #8]
   33c34:	asr	r0, r0, #6
   33c38:	and	r0, r0, #63	; 0x3f
   33c3c:	orr	r0, r0, #128	; 0x80
   33c40:	ldr	r1, [sp, #12]
   33c44:	strb	r0, [r1, #2]
   33c48:	ldrh	r0, [sp, #8]
   33c4c:	and	r0, r0, #63	; 0x3f
   33c50:	orr	r0, r0, #128	; 0x80
   33c54:	ldr	r1, [sp, #12]
   33c58:	strb	r0, [r1, #3]
   33c5c:	b	33c60 <flatcc_json_parser_string_escape@@Base+0x7a4>
   33c60:	ldr	r0, [fp, #-12]
   33c64:	add	r0, r0, #6
   33c68:	str	r0, [fp, #-4]
   33c6c:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33c70:	ldr	r0, [sp, #12]
   33c74:	movw	r1, #1
   33c78:	strb	r1, [r0]
   33c7c:	ldr	r0, [sp, #12]
   33c80:	movw	r1, #9
   33c84:	strb	r1, [r0, #1]
   33c88:	ldr	r0, [fp, #-12]
   33c8c:	add	r0, r0, #2
   33c90:	str	r0, [fp, #-4]
   33c94:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33c98:	ldr	r0, [sp, #12]
   33c9c:	movw	r1, #1
   33ca0:	strb	r1, [r0]
   33ca4:	ldr	r0, [sp, #12]
   33ca8:	movw	r1, #10
   33cac:	strb	r1, [r0, #1]
   33cb0:	ldr	r0, [fp, #-12]
   33cb4:	add	r0, r0, #2
   33cb8:	str	r0, [fp, #-4]
   33cbc:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33cc0:	ldr	r0, [sp, #12]
   33cc4:	movw	r1, #1
   33cc8:	strb	r1, [r0]
   33ccc:	ldr	r0, [sp, #12]
   33cd0:	movw	r1, #13
   33cd4:	strb	r1, [r0, #1]
   33cd8:	ldr	r0, [fp, #-12]
   33cdc:	add	r0, r0, #2
   33ce0:	str	r0, [fp, #-4]
   33ce4:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33ce8:	ldr	r0, [sp, #12]
   33cec:	movw	r1, #1
   33cf0:	strb	r1, [r0]
   33cf4:	ldr	r0, [sp, #12]
   33cf8:	movw	r1, #8
   33cfc:	strb	r1, [r0, #1]
   33d00:	ldr	r0, [fp, #-12]
   33d04:	add	r0, r0, #2
   33d08:	str	r0, [fp, #-4]
   33d0c:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33d10:	ldr	r0, [sp, #12]
   33d14:	movw	r1, #1
   33d18:	strb	r1, [r0]
   33d1c:	ldr	r0, [sp, #12]
   33d20:	movw	r1, #12
   33d24:	strb	r1, [r0, #1]
   33d28:	ldr	r0, [fp, #-12]
   33d2c:	add	r0, r0, #2
   33d30:	str	r0, [fp, #-4]
   33d34:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33d38:	ldr	r0, [sp, #12]
   33d3c:	movw	r1, #1
   33d40:	strb	r1, [r0]
   33d44:	ldr	r0, [sp, #12]
   33d48:	movw	r1, #34	; 0x22
   33d4c:	strb	r1, [r0, #1]
   33d50:	ldr	r0, [fp, #-12]
   33d54:	add	r0, r0, #2
   33d58:	str	r0, [fp, #-4]
   33d5c:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33d60:	ldr	r0, [sp, #12]
   33d64:	movw	r1, #1
   33d68:	strb	r1, [r0]
   33d6c:	ldr	r0, [sp, #12]
   33d70:	movw	r1, #92	; 0x5c
   33d74:	strb	r1, [r0, #1]
   33d78:	ldr	r0, [fp, #-12]
   33d7c:	add	r0, r0, #2
   33d80:	str	r0, [fp, #-4]
   33d84:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33d88:	ldr	r0, [sp, #12]
   33d8c:	movw	r1, #1
   33d90:	strb	r1, [r0]
   33d94:	ldr	r0, [sp, #12]
   33d98:	movw	r1, #47	; 0x2f
   33d9c:	strb	r1, [r0, #1]
   33da0:	ldr	r0, [fp, #-12]
   33da4:	add	r0, r0, #2
   33da8:	str	r0, [fp, #-4]
   33dac:	b	33dd4 <flatcc_json_parser_string_escape@@Base+0x918>
   33db0:	ldr	r0, [sp, #12]
   33db4:	movw	r1, #0
   33db8:	strb	r1, [r0]
   33dbc:	ldr	r0, [fp, #-8]
   33dc0:	ldr	r1, [fp, #-12]
   33dc4:	ldr	r2, [sp, #16]
   33dc8:	movw	r3, #18
   33dcc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   33dd0:	str	r0, [fp, #-4]
   33dd4:	ldr	r0, [fp, #-4]
   33dd8:	mov	sp, fp
   33ddc:	pop	{fp, pc}

00033de0 <flatcc_json_parser_skip_constant@@Base>:
   33de0:	push	{fp, lr}
   33de4:	mov	fp, sp
   33de8:	sub	sp, sp, #24
   33dec:	str	r0, [fp, #-8]
   33df0:	str	r1, [sp, #12]
   33df4:	str	r2, [sp, #8]
   33df8:	ldr	r0, [sp, #12]
   33dfc:	ldr	r1, [sp, #8]
   33e00:	cmp	r0, r1
   33e04:	beq	33ed0 <flatcc_json_parser_skip_constant@@Base+0xf0>
   33e08:	ldr	r0, [sp, #12]
   33e0c:	ldrb	r0, [r0]
   33e10:	strb	r0, [sp, #7]
   33e14:	ldrb	r0, [sp, #7]
   33e18:	and	r0, r0, #128	; 0x80
   33e1c:	cmp	r0, #0
   33e20:	bne	33e54 <flatcc_json_parser_skip_constant@@Base+0x74>
   33e24:	ldrb	r0, [sp, #7]
   33e28:	cmp	r0, #95	; 0x5f
   33e2c:	beq	33e54 <flatcc_json_parser_skip_constant@@Base+0x74>
   33e30:	ldrb	r0, [sp, #7]
   33e34:	cmp	r0, #48	; 0x30
   33e38:	blt	33e48 <flatcc_json_parser_skip_constant@@Base+0x68>
   33e3c:	ldrb	r0, [sp, #7]
   33e40:	cmp	r0, #57	; 0x39
   33e44:	ble	33e54 <flatcc_json_parser_skip_constant@@Base+0x74>
   33e48:	ldrb	r0, [sp, #7]
   33e4c:	cmp	r0, #46	; 0x2e
   33e50:	bne	33e64 <flatcc_json_parser_skip_constant@@Base+0x84>
   33e54:	ldr	r0, [sp, #12]
   33e58:	add	r0, r0, #1
   33e5c:	str	r0, [sp, #12]
   33e60:	b	33df8 <flatcc_json_parser_skip_constant@@Base+0x18>
   33e64:	ldrb	r0, [sp, #7]
   33e68:	orr	r0, r0, #32
   33e6c:	strb	r0, [sp, #7]
   33e70:	ldrb	r0, [sp, #7]
   33e74:	cmp	r0, #97	; 0x61
   33e78:	blt	33e98 <flatcc_json_parser_skip_constant@@Base+0xb8>
   33e7c:	ldrb	r0, [sp, #7]
   33e80:	cmp	r0, #122	; 0x7a
   33e84:	bgt	33e98 <flatcc_json_parser_skip_constant@@Base+0xb8>
   33e88:	ldr	r0, [sp, #12]
   33e8c:	add	r0, r0, #1
   33e90:	str	r0, [sp, #12]
   33e94:	b	33df8 <flatcc_json_parser_skip_constant@@Base+0x18>
   33e98:	ldr	r0, [fp, #-8]
   33e9c:	ldr	r1, [sp, #12]
   33ea0:	str	r1, [sp]
   33ea4:	ldr	r2, [sp, #8]
   33ea8:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   33eac:	str	r0, [sp, #12]
   33eb0:	ldr	r0, [sp, #12]
   33eb4:	ldr	r1, [sp]
   33eb8:	cmp	r0, r1
   33ebc:	bne	33ecc <flatcc_json_parser_skip_constant@@Base+0xec>
   33ec0:	ldr	r0, [sp, #12]
   33ec4:	str	r0, [fp, #-4]
   33ec8:	b	33ed8 <flatcc_json_parser_skip_constant@@Base+0xf8>
   33ecc:	b	33df8 <flatcc_json_parser_skip_constant@@Base+0x18>
   33ed0:	ldr	r0, [sp, #12]
   33ed4:	str	r0, [fp, #-4]
   33ed8:	ldr	r0, [fp, #-4]
   33edc:	mov	sp, fp
   33ee0:	pop	{fp, pc}
   33ee4:	push	{fp, lr}
   33ee8:	mov	fp, sp
   33eec:	sub	sp, sp, #16
   33ef0:	str	r0, [sp, #8]
   33ef4:	str	r1, [sp, #4]
   33ef8:	str	r2, [sp]
   33efc:	ldr	r0, [sp]
   33f00:	ldr	r1, [sp, #4]
   33f04:	sub	r0, r0, r1
   33f08:	cmp	r0, #1
   33f0c:	ble	33f60 <flatcc_json_parser_skip_constant@@Base+0x180>
   33f10:	ldr	r0, [sp, #4]
   33f14:	ldrb	r0, [r0]
   33f18:	cmp	r0, #32
   33f1c:	ble	33f2c <flatcc_json_parser_skip_constant@@Base+0x14c>
   33f20:	ldr	r0, [sp, #4]
   33f24:	str	r0, [fp, #-4]
   33f28:	b	33f74 <flatcc_json_parser_skip_constant@@Base+0x194>
   33f2c:	ldr	r0, [sp, #4]
   33f30:	ldrb	r0, [r0]
   33f34:	cmp	r0, #32
   33f38:	bne	33f5c <flatcc_json_parser_skip_constant@@Base+0x17c>
   33f3c:	ldr	r0, [sp, #4]
   33f40:	ldrb	r0, [r0, #1]
   33f44:	cmp	r0, #32
   33f48:	ble	33f5c <flatcc_json_parser_skip_constant@@Base+0x17c>
   33f4c:	ldr	r0, [sp, #4]
   33f50:	add	r0, r0, #1
   33f54:	str	r0, [fp, #-4]
   33f58:	b	33f74 <flatcc_json_parser_skip_constant@@Base+0x194>
   33f5c:	b	33f60 <flatcc_json_parser_skip_constant@@Base+0x180>
   33f60:	ldr	r0, [sp, #8]
   33f64:	ldr	r1, [sp, #4]
   33f68:	ldr	r2, [sp]
   33f6c:	bl	332d8 <flatcc_json_parser_space_ext@@Base>
   33f70:	str	r0, [fp, #-4]
   33f74:	ldr	r0, [fp, #-4]
   33f78:	mov	sp, fp
   33f7c:	pop	{fp, pc}

00033f80 <flatcc_json_parser_match_constant@@Base>:
   33f80:	push	{fp, lr}
   33f84:	mov	fp, sp
   33f88:	sub	sp, sp, #40	; 0x28
   33f8c:	ldr	ip, [fp, #8]
   33f90:	str	r0, [fp, #-8]
   33f94:	str	r1, [fp, #-12]
   33f98:	str	r2, [fp, #-16]
   33f9c:	str	r3, [sp, #20]
   33fa0:	ldr	r0, [fp, #-12]
   33fa4:	str	r0, [sp, #16]
   33fa8:	ldr	r0, [fp, #-12]
   33fac:	ldr	r1, [sp, #20]
   33fb0:	add	r0, r0, r1
   33fb4:	str	r0, [sp, #12]
   33fb8:	ldr	r0, [fp, #-16]
   33fbc:	ldr	r1, [fp, #-12]
   33fc0:	sub	r0, r0, r1
   33fc4:	ldr	r1, [sp, #20]
   33fc8:	cmp	r0, r1
   33fcc:	bgt	33fe8 <flatcc_json_parser_match_constant@@Base+0x68>
   33fd0:	ldr	r0, [fp, #8]
   33fd4:	movw	r1, #0
   33fd8:	str	r1, [r0]
   33fdc:	ldr	r0, [fp, #-12]
   33fe0:	str	r0, [fp, #-4]
   33fe4:	b	34144 <flatcc_json_parser_match_constant@@Base+0x1c4>
   33fe8:	ldr	r0, [sp, #12]
   33fec:	str	r0, [fp, #-12]
   33ff0:	ldr	r0, [fp, #-12]
   33ff4:	ldrb	r0, [r0]
   33ff8:	cmp	r0, #32
   33ffc:	bne	340ac <flatcc_json_parser_match_constant@@Base+0x12c>
   34000:	ldr	r0, [fp, #-12]
   34004:	add	r0, r0, #1
   34008:	str	r0, [fp, #-12]
   3400c:	ldr	r0, [fp, #-12]
   34010:	ldr	r1, [fp, #-16]
   34014:	cmp	r0, r1
   34018:	movw	r0, #0
   3401c:	str	r0, [sp, #8]
   34020:	beq	3403c <flatcc_json_parser_match_constant@@Base+0xbc>
   34024:	ldr	r0, [fp, #-12]
   34028:	ldrb	r0, [r0]
   3402c:	cmp	r0, #32
   34030:	movw	r0, #0
   34034:	moveq	r0, #1
   34038:	str	r0, [sp, #8]
   3403c:	ldr	r0, [sp, #8]
   34040:	tst	r0, #1
   34044:	beq	34058 <flatcc_json_parser_match_constant@@Base+0xd8>
   34048:	ldr	r0, [fp, #-12]
   3404c:	add	r0, r0, #1
   34050:	str	r0, [fp, #-12]
   34054:	b	3400c <flatcc_json_parser_match_constant@@Base+0x8c>
   34058:	ldr	r0, [fp, #-12]
   3405c:	ldr	r1, [fp, #-16]
   34060:	cmp	r0, r1
   34064:	bne	34080 <flatcc_json_parser_match_constant@@Base+0x100>
   34068:	ldr	r0, [fp, #8]
   3406c:	movw	r1, #0
   34070:	str	r1, [r0]
   34074:	ldr	r0, [fp, #-12]
   34078:	str	r0, [fp, #-4]
   3407c:	b	34144 <flatcc_json_parser_match_constant@@Base+0x1c4>
   34080:	ldr	r0, [fp, #-12]
   34084:	ldrb	r0, [r0]
   34088:	cmp	r0, #34	; 0x22
   3408c:	beq	340a8 <flatcc_json_parser_match_constant@@Base+0x128>
   34090:	ldr	r0, [fp, #8]
   34094:	movw	r1, #1
   34098:	str	r1, [r0]
   3409c:	ldr	r0, [fp, #-12]
   340a0:	str	r0, [fp, #-4]
   340a4:	b	34144 <flatcc_json_parser_match_constant@@Base+0x1c4>
   340a8:	b	340ac <flatcc_json_parser_match_constant@@Base+0x12c>
   340ac:	ldr	r0, [fp, #-12]
   340b0:	ldrb	r0, [r0]
   340b4:	mov	r1, r0
   340b8:	cmp	r0, #34	; 0x22
   340bc:	str	r1, [sp, #4]
   340c0:	beq	34100 <flatcc_json_parser_match_constant@@Base+0x180>
   340c4:	b	340c8 <flatcc_json_parser_match_constant@@Base+0x148>
   340c8:	ldr	r0, [sp, #4]
   340cc:	cmp	r0, #92	; 0x5c
   340d0:	bne	34130 <flatcc_json_parser_match_constant@@Base+0x1b0>
   340d4:	b	340d8 <flatcc_json_parser_match_constant@@Base+0x158>
   340d8:	ldr	r0, [fp, #8]
   340dc:	movw	r1, #0
   340e0:	str	r1, [r0]
   340e4:	ldr	r0, [fp, #-8]
   340e8:	ldr	r1, [fp, #-12]
   340ec:	ldr	r2, [fp, #-16]
   340f0:	movw	r3, #18
   340f4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   340f8:	str	r0, [fp, #-4]
   340fc:	b	34144 <flatcc_json_parser_match_constant@@Base+0x1c4>
   34100:	ldr	r0, [fp, #-8]
   34104:	ldr	r1, [fp, #-12]
   34108:	add	r1, r1, #1
   3410c:	movw	r2, #0
   34110:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   34114:	str	r0, [fp, #-12]
   34118:	ldr	r0, [fp, #8]
   3411c:	movw	r1, #0
   34120:	str	r1, [r0]
   34124:	ldr	r0, [fp, #-12]
   34128:	str	r0, [fp, #-4]
   3412c:	b	34144 <flatcc_json_parser_match_constant@@Base+0x1c4>
   34130:	ldr	r0, [fp, #8]
   34134:	movw	r1, #0
   34138:	str	r1, [r0]
   3413c:	ldr	r0, [sp, #16]
   34140:	str	r0, [fp, #-4]
   34144:	ldr	r0, [fp, #-4]
   34148:	mov	sp, fp
   3414c:	pop	{fp, pc}

00034150 <flatcc_json_parser_unmatched_symbol@@Base>:
   34150:	push	{fp, lr}
   34154:	mov	fp, sp
   34158:	sub	sp, sp, #16
   3415c:	str	r0, [sp, #8]
   34160:	str	r1, [sp, #4]
   34164:	str	r2, [sp]
   34168:	ldr	r0, [sp, #8]
   3416c:	ldr	r0, [r0, #8]
   34170:	and	r0, r0, #1
   34174:	cmp	r0, #0
   34178:	beq	3421c <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   3417c:	ldr	r0, [sp, #8]
   34180:	ldr	r1, [sp, #4]
   34184:	ldr	r2, [sp]
   34188:	bl	34240 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   3418c:	str	r0, [sp, #4]
   34190:	ldr	r0, [sp, #8]
   34194:	ldr	r1, [sp, #4]
   34198:	ldr	r2, [sp]
   3419c:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   341a0:	str	r0, [sp, #4]
   341a4:	ldr	r0, [sp, #4]
   341a8:	ldr	r1, [sp]
   341ac:	cmp	r0, r1
   341b0:	beq	341e8 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   341b4:	ldr	r0, [sp, #4]
   341b8:	ldrb	r0, [r0]
   341bc:	cmp	r0, #58	; 0x3a
   341c0:	bne	341e8 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   341c4:	ldr	r0, [sp, #4]
   341c8:	add	r0, r0, #1
   341cc:	str	r0, [sp, #4]
   341d0:	ldr	r0, [sp, #8]
   341d4:	ldr	r1, [sp, #4]
   341d8:	ldr	r2, [sp]
   341dc:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   341e0:	str	r0, [sp, #4]
   341e4:	b	34204 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   341e8:	ldr	r0, [sp, #8]
   341ec:	ldr	r1, [sp, #4]
   341f0:	ldr	r2, [sp]
   341f4:	movw	r3, #4
   341f8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   341fc:	str	r0, [fp, #-4]
   34200:	b	34234 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   34204:	ldr	r0, [sp, #8]
   34208:	ldr	r1, [sp, #4]
   3420c:	ldr	r2, [sp]
   34210:	bl	3433c <flatcc_json_parser_generic_json@@Base>
   34214:	str	r0, [fp, #-4]
   34218:	b	34234 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   3421c:	ldr	r0, [sp, #8]
   34220:	ldr	r1, [sp, #4]
   34224:	ldr	r2, [sp]
   34228:	movw	r3, #13
   3422c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34230:	str	r0, [fp, #-4]
   34234:	ldr	r0, [fp, #-4]
   34238:	mov	sp, fp
   3423c:	pop	{fp, pc}
   34240:	push	{fp, lr}
   34244:	mov	fp, sp
   34248:	sub	sp, sp, #24
   3424c:	str	r0, [fp, #-8]
   34250:	str	r1, [sp, #12]
   34254:	str	r2, [sp, #8]
   34258:	movw	r0, #0
   3425c:	strb	r0, [sp, #6]
   34260:	ldr	r0, [sp, #12]
   34264:	ldr	r1, [sp, #8]
   34268:	cmp	r0, r1
   3426c:	movw	r0, #0
   34270:	str	r0, [sp]
   34274:	beq	34290 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   34278:	ldr	r0, [sp, #12]
   3427c:	ldrb	r0, [r0]
   34280:	cmp	r0, #34	; 0x22
   34284:	movw	r0, #0
   34288:	movne	r0, #1
   3428c:	str	r0, [sp]
   34290:	ldr	r0, [sp]
   34294:	tst	r0, #1
   34298:	beq	342e0 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   3429c:	ldr	r0, [sp, #12]
   342a0:	ldrb	r0, [r0]
   342a4:	cmp	r0, #92	; 0x5c
   342a8:	bne	342d0 <flatcc_json_parser_unmatched_symbol@@Base+0x180>
   342ac:	ldr	r0, [sp, #8]
   342b0:	ldr	r1, [sp, #12]
   342b4:	sub	r0, r0, r1
   342b8:	cmp	r0, #2
   342bc:	bge	342c4 <flatcc_json_parser_unmatched_symbol@@Base+0x174>
   342c0:	b	342e0 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   342c4:	ldr	r0, [sp, #12]
   342c8:	add	r0, r0, #1
   342cc:	str	r0, [sp, #12]
   342d0:	ldr	r0, [sp, #12]
   342d4:	add	r0, r0, #1
   342d8:	str	r0, [sp, #12]
   342dc:	b	34260 <flatcc_json_parser_unmatched_symbol@@Base+0x110>
   342e0:	ldr	r0, [sp, #12]
   342e4:	ldr	r1, [sp, #8]
   342e8:	cmp	r0, r1
   342ec:	beq	34300 <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   342f0:	ldr	r0, [sp, #12]
   342f4:	ldrb	r0, [r0]
   342f8:	cmp	r0, #34	; 0x22
   342fc:	beq	3431c <flatcc_json_parser_unmatched_symbol@@Base+0x1cc>
   34300:	ldr	r0, [fp, #-8]
   34304:	ldr	r1, [sp, #12]
   34308:	ldr	r2, [sp, #8]
   3430c:	movw	r3, #20
   34310:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34314:	str	r0, [fp, #-4]
   34318:	b	34330 <flatcc_json_parser_unmatched_symbol@@Base+0x1e0>
   3431c:	ldr	r0, [sp, #12]
   34320:	add	r0, r0, #1
   34324:	str	r0, [sp, #12]
   34328:	ldr	r0, [sp, #12]
   3432c:	str	r0, [fp, #-4]
   34330:	ldr	r0, [fp, #-4]
   34334:	mov	sp, fp
   34338:	pop	{fp, pc}

0003433c <flatcc_json_parser_generic_json@@Base>:
   3433c:	push	{r4, r5, fp, lr}
   34340:	add	fp, sp, #8
   34344:	sub	sp, sp, #568	; 0x238
   34348:	add	r3, sp, #40	; 0x28
   3434c:	str	r0, [fp, #-16]
   34350:	str	r1, [fp, #-20]	; 0xffffffec
   34354:	str	r2, [fp, #-24]	; 0xffffffe8
   34358:	movw	r0, #0
   3435c:	str	r0, [sp, #20]
   34360:	str	r3, [sp, #36]	; 0x24
   34364:	ldr	r0, [sp, #36]	; 0x24
   34368:	add	r0, r0, #512	; 0x200
   3436c:	str	r0, [sp, #32]
   34370:	ldr	r0, [fp, #-20]	; 0xffffffec
   34374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34378:	cmp	r0, r1
   3437c:	bne	3438c <flatcc_json_parser_generic_json@@Base+0x50>
   34380:	ldr	r0, [fp, #-20]	; 0xffffffec
   34384:	str	r0, [fp, #-12]
   34388:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   3438c:	add	r0, sp, #40	; 0x28
   34390:	ldr	r1, [sp, #36]	; 0x24
   34394:	cmp	r1, r0
   34398:	beq	34460 <flatcc_json_parser_generic_json@@Base+0x124>
   3439c:	ldr	r0, [sp, #36]	; 0x24
   343a0:	mvn	r1, #0
   343a4:	add	r0, r0, r1
   343a8:	ldrb	r0, [r0]
   343ac:	cmp	r0, #125	; 0x7d
   343b0:	bne	34460 <flatcc_json_parser_generic_json@@Base+0x124>
   343b4:	ldr	r0, [fp, #-16]
   343b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   343bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343c0:	bl	34dac <flatcc_json_parser_float@@Base+0x254>
   343c4:	str	r0, [fp, #-20]	; 0xffffffec
   343c8:	ldr	r0, [fp, #-16]
   343cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   343d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343d4:	bl	34240 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   343d8:	str	r0, [fp, #-20]	; 0xffffffec
   343dc:	ldr	r0, [fp, #-16]
   343e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   343e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   343e8:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   343ec:	str	r0, [fp, #-20]	; 0xffffffec
   343f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   343f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   343f8:	cmp	r0, r1
   343fc:	bne	3441c <flatcc_json_parser_generic_json@@Base+0xe0>
   34400:	ldr	r0, [fp, #-16]
   34404:	ldr	r1, [fp, #-20]	; 0xffffffec
   34408:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3440c:	movw	r3, #10
   34410:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34414:	str	r0, [fp, #-12]
   34418:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   3441c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34420:	ldrb	r0, [r0]
   34424:	cmp	r0, #58	; 0x3a
   34428:	beq	34448 <flatcc_json_parser_generic_json@@Base+0x10c>
   3442c:	ldr	r0, [fp, #-16]
   34430:	ldr	r1, [fp, #-20]	; 0xffffffec
   34434:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34438:	movw	r3, #4
   3443c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34440:	str	r0, [fp, #-12]
   34444:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34448:	ldr	r0, [fp, #-16]
   3444c:	ldr	r1, [fp, #-20]	; 0xffffffec
   34450:	add	r1, r1, #1
   34454:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34458:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   3445c:	str	r0, [fp, #-20]	; 0xffffffec
   34460:	ldr	r0, [fp, #-20]	; 0xffffffec
   34464:	ldrb	r0, [r0]
   34468:	sub	r0, r0, #34	; 0x22
   3446c:	cmp	r0, #89	; 0x59
   34470:	str	r0, [sp, #12]
   34474:	bhi	34854 <flatcc_json_parser_generic_json@@Base+0x518>
   34478:	add	r0, pc, #8
   3447c:	ldr	r1, [sp, #12]
   34480:	ldr	r2, [r0, r1, lsl #2]
   34484:	add	pc, r0, r2
   34488:	andeq	r0, r0, r8, ror #2
   3448c:	andeq	r0, r0, ip, asr #7
   34490:	andeq	r0, r0, ip, asr #7
   34494:	andeq	r0, r0, ip, asr #7
   34498:	andeq	r0, r0, ip, asr #7
   3449c:	andeq	r0, r0, ip, asr #7
   344a0:	andeq	r0, r0, ip, asr #7
   344a4:	andeq	r0, r0, ip, asr #7
   344a8:	andeq	r0, r0, ip, asr #7
   344ac:	andeq	r0, r0, ip, asr #7
   344b0:	andeq	r0, r0, ip, asr #7
   344b4:	andeq	r0, r0, r4, lsr #4
   344b8:	andeq	r0, r0, ip, asr #7
   344bc:	andeq	r0, r0, ip, asr #7
   344c0:	andeq	r0, r0, r4, lsr #4
   344c4:	andeq	r0, r0, r4, lsr #4
   344c8:	andeq	r0, r0, r4, lsr #4
   344cc:	andeq	r0, r0, r4, lsr #4
   344d0:	andeq	r0, r0, r4, lsr #4
   344d4:	andeq	r0, r0, r4, lsr #4
   344d8:	andeq	r0, r0, r4, lsr #4
   344dc:	andeq	r0, r0, r4, lsr #4
   344e0:	andeq	r0, r0, r4, lsr #4
   344e4:	andeq	r0, r0, r4, lsr #4
   344e8:	andeq	r0, r0, ip, asr #7
   344ec:	andeq	r0, r0, ip, asr #7
   344f0:	andeq	r0, r0, ip, asr #7
   344f4:	andeq	r0, r0, ip, asr #7
   344f8:	andeq	r0, r0, ip, asr #7
   344fc:	andeq	r0, r0, ip, asr #7
   34500:	andeq	r0, r0, ip, asr #7
   34504:	andeq	r0, r0, ip, asr #7
   34508:	andeq	r0, r0, ip, asr #7
   3450c:	andeq	r0, r0, ip, asr #7
   34510:	andeq	r0, r0, ip, asr #7
   34514:	andeq	r0, r0, ip, asr #7
   34518:	andeq	r0, r0, ip, asr #7
   3451c:	andeq	r0, r0, ip, asr #7
   34520:	andeq	r0, r0, ip, asr #7
   34524:	andeq	r0, r0, ip, asr #7
   34528:	andeq	r0, r0, ip, asr #7
   3452c:	andeq	r0, r0, ip, asr #7
   34530:	andeq	r0, r0, ip, asr #7
   34534:	andeq	r0, r0, ip, asr #7
   34538:	andeq	r0, r0, ip, asr #7
   3453c:	andeq	r0, r0, ip, asr #7
   34540:	andeq	r0, r0, ip, asr #7
   34544:	andeq	r0, r0, ip, asr #7
   34548:	andeq	r0, r0, ip, asr #7
   3454c:	andeq	r0, r0, ip, asr #7
   34550:	andeq	r0, r0, ip, asr #7
   34554:	andeq	r0, r0, ip, asr #7
   34558:	andeq	r0, r0, ip, asr #7
   3455c:	andeq	r0, r0, ip, asr #7
   34560:	andeq	r0, r0, ip, asr #7
   34564:	andeq	r0, r0, ip, asr #7
   34568:	andeq	r0, r0, ip, asr #7
   3456c:	andeq	r0, r0, ip, asr #5
   34570:	andeq	r0, r0, ip, asr #7
   34574:	andeq	r0, r0, ip, asr #7
   34578:	andeq	r0, r0, ip, asr #7
   3457c:	andeq	r0, r0, ip, asr #7
   34580:	andeq	r0, r0, ip, asr #7
   34584:	andeq	r0, r0, ip, asr #7
   34588:	andeq	r0, r0, ip, asr #7
   3458c:	andeq	r0, r0, ip, asr #7
   34590:	andeq	r0, r0, ip, asr #7
   34594:	andeq	r0, r0, ip, asr #7
   34598:	andeq	r0, r0, ip, lsr r2
   3459c:	andeq	r0, r0, ip, asr #7
   345a0:	andeq	r0, r0, ip, asr #7
   345a4:	andeq	r0, r0, ip, asr #7
   345a8:	andeq	r0, r0, ip, asr #7
   345ac:	andeq	r0, r0, ip, asr #7
   345b0:	andeq	r0, r0, ip, asr #7
   345b4:	andeq	r0, r0, ip, asr #7
   345b8:	andeq	r0, r0, r8, lsl #5
   345bc:	andeq	r0, r0, ip, asr #7
   345c0:	andeq	r0, r0, ip, asr #7
   345c4:	andeq	r0, r0, ip, asr #7
   345c8:	andeq	r0, r0, ip, asr #7
   345cc:	andeq	r0, r0, ip, asr #7
   345d0:	andeq	r0, r0, ip, lsr r2
   345d4:	andeq	r0, r0, ip, asr #7
   345d8:	andeq	r0, r0, ip, asr #7
   345dc:	andeq	r0, r0, ip, asr #7
   345e0:	andeq	r0, r0, ip, asr #7
   345e4:	andeq	r0, r0, ip, asr #7
   345e8:	andeq	r0, r0, ip, asr #7
   345ec:	andeq	r0, r0, ip, asr #6
   345f0:	ldr	r0, [fp, #-16]
   345f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   345f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   345fc:	bl	34e30 <flatcc_json_parser_float@@Base+0x2d8>
   34600:	str	r0, [fp, #-20]	; 0xffffffec
   34604:	ldr	r0, [fp, #-20]	; 0xffffffec
   34608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3460c:	cmp	r0, r1
   34610:	movw	r0, #0
   34614:	str	r0, [sp, #8]
   34618:	beq	34634 <flatcc_json_parser_generic_json@@Base+0x2f8>
   3461c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34620:	ldrb	r0, [r0]
   34624:	cmp	r0, #34	; 0x22
   34628:	movw	r0, #0
   3462c:	movne	r0, #1
   34630:	str	r0, [sp, #8]
   34634:	ldr	r0, [sp, #8]
   34638:	tst	r0, #1
   3463c:	beq	34694 <flatcc_json_parser_generic_json@@Base+0x358>
   34640:	ldr	r0, [fp, #-16]
   34644:	ldr	r1, [fp, #-20]	; 0xffffffec
   34648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3464c:	bl	331bc <flatcc_json_parser_string_part@@Base>
   34650:	str	r0, [fp, #-20]	; 0xffffffec
   34654:	ldr	r0, [fp, #-20]	; 0xffffffec
   34658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3465c:	cmp	r0, r1
   34660:	beq	34678 <flatcc_json_parser_generic_json@@Base+0x33c>
   34664:	ldr	r0, [fp, #-20]	; 0xffffffec
   34668:	ldrb	r0, [r0]
   3466c:	cmp	r0, #34	; 0x22
   34670:	bne	34678 <flatcc_json_parser_generic_json@@Base+0x33c>
   34674:	b	34694 <flatcc_json_parser_generic_json@@Base+0x358>
   34678:	add	r3, sp, #24
   3467c:	ldr	r0, [fp, #-16]
   34680:	ldr	r1, [fp, #-20]	; 0xffffffec
   34684:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34688:	bl	334bc <flatcc_json_parser_string_escape@@Base>
   3468c:	str	r0, [fp, #-20]	; 0xffffffec
   34690:	b	34604 <flatcc_json_parser_generic_json@@Base+0x2c8>
   34694:	ldr	r0, [fp, #-16]
   34698:	ldr	r1, [fp, #-20]	; 0xffffffec
   3469c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346a0:	bl	34ea0 <flatcc_json_parser_float@@Base+0x348>
   346a4:	str	r0, [fp, #-20]	; 0xffffffec
   346a8:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   346ac:	ldr	r0, [fp, #-16]
   346b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   346b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346b8:	bl	34f10 <flatcc_json_parser_float@@Base+0x3b8>
   346bc:	str	r0, [fp, #-20]	; 0xffffffec
   346c0:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   346c4:	ldr	r0, [fp, #-16]
   346c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   346cc:	str	r1, [sp, #28]
   346d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346d4:	add	r3, sp, #19
   346d8:	bl	35354 <flatcc_json_parser_float@@Base+0x7fc>
   346dc:	str	r0, [fp, #-20]	; 0xffffffec
   346e0:	ldr	r0, [sp, #28]
   346e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   346e8:	cmp	r0, r1
   346ec:	bne	3470c <flatcc_json_parser_generic_json@@Base+0x3d0>
   346f0:	ldr	r0, [fp, #-16]
   346f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   346f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346fc:	movw	r3, #5
   34700:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34704:	str	r0, [fp, #-12]
   34708:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   3470c:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   34710:	ldr	r0, [fp, #-20]	; 0xffffffec
   34714:	str	r0, [sp, #28]
   34718:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3471c:	bl	35470 <flatcc_json_parser_float@@Base+0x918>
   34720:	str	r0, [fp, #-20]	; 0xffffffec
   34724:	ldr	r0, [sp, #28]
   34728:	ldr	r1, [fp, #-20]	; 0xffffffec
   3472c:	cmp	r0, r1
   34730:	bne	34750 <flatcc_json_parser_generic_json@@Base+0x414>
   34734:	ldr	r0, [fp, #-16]
   34738:	ldr	r1, [fp, #-20]	; 0xffffffec
   3473c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34740:	movw	r3, #5
   34744:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34748:	str	r0, [fp, #-12]
   3474c:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34750:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   34754:	ldr	r0, [sp, #36]	; 0x24
   34758:	ldr	r1, [sp, #32]
   3475c:	cmp	r0, r1
   34760:	bne	34780 <flatcc_json_parser_generic_json@@Base+0x444>
   34764:	ldr	r0, [fp, #-16]
   34768:	ldr	r1, [fp, #-20]	; 0xffffffec
   3476c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34770:	movw	r3, #2
   34774:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34778:	str	r0, [fp, #-12]
   3477c:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34780:	ldr	r0, [sp, #36]	; 0x24
   34784:	add	r1, r0, #1
   34788:	str	r1, [sp, #36]	; 0x24
   3478c:	movw	r1, #93	; 0x5d
   34790:	strb	r1, [r0]
   34794:	ldr	r0, [fp, #-16]
   34798:	ldr	r1, [fp, #-20]	; 0xffffffec
   3479c:	add	r1, r1, #1
   347a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   347a4:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   347a8:	str	r0, [fp, #-20]	; 0xffffffec
   347ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   347b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   347b4:	cmp	r0, r1
   347b8:	beq	347d0 <flatcc_json_parser_generic_json@@Base+0x494>
   347bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   347c0:	ldrb	r0, [r0]
   347c4:	cmp	r0, #93	; 0x5d
   347c8:	bne	347d0 <flatcc_json_parser_generic_json@@Base+0x494>
   347cc:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   347d0:	b	34370 <flatcc_json_parser_generic_json@@Base+0x34>
   347d4:	ldr	r0, [sp, #36]	; 0x24
   347d8:	ldr	r1, [sp, #32]
   347dc:	cmp	r0, r1
   347e0:	bne	34800 <flatcc_json_parser_generic_json@@Base+0x4c4>
   347e4:	ldr	r0, [fp, #-16]
   347e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   347ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   347f0:	movw	r3, #2
   347f4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   347f8:	str	r0, [fp, #-12]
   347fc:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34800:	ldr	r0, [sp, #36]	; 0x24
   34804:	add	r1, r0, #1
   34808:	str	r1, [sp, #36]	; 0x24
   3480c:	movw	r1, #125	; 0x7d
   34810:	strb	r1, [r0]
   34814:	ldr	r0, [fp, #-16]
   34818:	ldr	r1, [fp, #-20]	; 0xffffffec
   3481c:	add	r1, r1, #1
   34820:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34824:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   34828:	str	r0, [fp, #-20]	; 0xffffffec
   3482c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34830:	ldr	r1, [fp, #-24]	; 0xffffffe8
   34834:	cmp	r0, r1
   34838:	beq	34850 <flatcc_json_parser_generic_json@@Base+0x514>
   3483c:	ldr	r0, [fp, #-20]	; 0xffffffec
   34840:	ldrb	r0, [r0]
   34844:	cmp	r0, #125	; 0x7d
   34848:	bne	34850 <flatcc_json_parser_generic_json@@Base+0x514>
   3484c:	b	34870 <flatcc_json_parser_generic_json@@Base+0x534>
   34850:	b	34370 <flatcc_json_parser_generic_json@@Base+0x34>
   34854:	ldr	r0, [fp, #-16]
   34858:	ldr	r1, [fp, #-20]	; 0xffffffec
   3485c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34860:	movw	r3, #5
   34864:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34868:	str	r0, [fp, #-12]
   3486c:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34870:	b	34874 <flatcc_json_parser_generic_json@@Base+0x538>
   34874:	ldr	r0, [fp, #-20]	; 0xffffffec
   34878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3487c:	cmp	r0, r1
   34880:	movw	r0, #0
   34884:	str	r0, [sp, #4]
   34888:	beq	348a4 <flatcc_json_parser_generic_json@@Base+0x568>
   3488c:	add	r0, sp, #40	; 0x28
   34890:	ldr	r1, [sp, #36]	; 0x24
   34894:	cmp	r1, r0
   34898:	movw	r0, #0
   3489c:	movne	r0, #1
   348a0:	str	r0, [sp, #4]
   348a4:	ldr	r0, [sp, #4]
   348a8:	tst	r0, #1
   348ac:	beq	34924 <flatcc_json_parser_generic_json@@Base+0x5e8>
   348b0:	ldr	r0, [sp, #36]	; 0x24
   348b4:	mvn	r1, #0
   348b8:	add	r0, r0, r1
   348bc:	str	r0, [sp, #36]	; 0x24
   348c0:	ldr	r0, [sp, #36]	; 0x24
   348c4:	ldrb	r0, [r0]
   348c8:	cmp	r0, #93	; 0x5d
   348cc:	bne	348ec <flatcc_json_parser_generic_json@@Base+0x5b0>
   348d0:	ldr	r0, [fp, #-16]
   348d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   348d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348dc:	add	r3, sp, #20
   348e0:	bl	354d4 <flatcc_json_parser_float@@Base+0x97c>
   348e4:	str	r0, [fp, #-20]	; 0xffffffec
   348e8:	b	34904 <flatcc_json_parser_generic_json@@Base+0x5c8>
   348ec:	ldr	r0, [fp, #-16]
   348f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   348f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   348f8:	add	r3, sp, #20
   348fc:	bl	35638 <flatcc_json_parser_float@@Base+0xae0>
   34900:	str	r0, [fp, #-20]	; 0xffffffec
   34904:	ldr	r0, [sp, #20]
   34908:	cmp	r0, #0
   3490c:	beq	34920 <flatcc_json_parser_generic_json@@Base+0x5e4>
   34910:	ldr	r0, [sp, #36]	; 0x24
   34914:	add	r0, r0, #1
   34918:	str	r0, [sp, #36]	; 0x24
   3491c:	b	34370 <flatcc_json_parser_generic_json@@Base+0x34>
   34920:	b	34874 <flatcc_json_parser_generic_json@@Base+0x538>
   34924:	ldr	r0, [fp, #-20]	; 0xffffffec
   34928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3492c:	cmp	r0, r1
   34930:	bne	34984 <flatcc_json_parser_generic_json@@Base+0x648>
   34934:	add	r0, sp, #40	; 0x28
   34938:	ldr	r1, [sp, #36]	; 0x24
   3493c:	cmp	r1, r0
   34940:	beq	34984 <flatcc_json_parser_generic_json@@Base+0x648>
   34944:	ldr	r0, [fp, #-16]
   34948:	ldr	r1, [fp, #-20]	; 0xffffffec
   3494c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34950:	ldr	r3, [sp, #36]	; 0x24
   34954:	mvn	ip, #0
   34958:	add	r3, r3, ip
   3495c:	ldrb	r3, [r3]
   34960:	cmp	r3, #93	; 0x5d
   34964:	movw	r3, #0
   34968:	moveq	r3, #1
   3496c:	tst	r3, #1
   34970:	movw	r3, #9
   34974:	moveq	r3, #10
   34978:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3497c:	str	r0, [fp, #-12]
   34980:	b	3498c <flatcc_json_parser_generic_json@@Base+0x650>
   34984:	ldr	r0, [fp, #-20]	; 0xffffffec
   34988:	str	r0, [fp, #-12]
   3498c:	ldr	r0, [fp, #-12]
   34990:	sub	sp, fp, #8
   34994:	pop	{r4, r5, fp, pc}

00034998 <flatcc_json_parser_double@@Base>:
   34998:	push	{fp, lr}
   3499c:	mov	fp, sp
   349a0:	sub	sp, sp, #32
   349a4:	vldr	d16, [pc, #372]	; 34b20 <flatcc_json_parser_double@@Base+0x188>
   349a8:	str	r0, [fp, #-8]
   349ac:	str	r1, [fp, #-12]
   349b0:	str	r2, [sp, #16]
   349b4:	str	r3, [sp, #12]
   349b8:	ldr	r0, [sp, #12]
   349bc:	vstr	d16, [r0]
   349c0:	ldr	r0, [fp, #-12]
   349c4:	ldr	r1, [sp, #16]
   349c8:	cmp	r0, r1
   349cc:	bne	349dc <flatcc_json_parser_double@@Base+0x44>
   349d0:	ldr	r0, [fp, #-12]
   349d4:	str	r0, [fp, #-4]
   349d8:	b	34b10 <flatcc_json_parser_double@@Base+0x178>
   349dc:	ldr	r0, [fp, #-12]
   349e0:	str	r0, [sp, #4]
   349e4:	ldr	r0, [fp, #-12]
   349e8:	ldrb	r0, [r0]
   349ec:	cmp	r0, #45	; 0x2d
   349f0:	bne	34a00 <flatcc_json_parser_double@@Base+0x68>
   349f4:	ldr	r0, [sp, #4]
   349f8:	add	r0, r0, #1
   349fc:	str	r0, [sp, #4]
   34a00:	ldr	r0, [sp, #16]
   34a04:	ldr	r1, [sp, #4]
   34a08:	sub	r0, r0, r1
   34a0c:	cmp	r0, #1
   34a10:	ble	34a60 <flatcc_json_parser_double@@Base+0xc8>
   34a14:	ldr	r0, [sp, #4]
   34a18:	ldrb	r0, [r0]
   34a1c:	cmp	r0, #46	; 0x2e
   34a20:	beq	34a44 <flatcc_json_parser_double@@Base+0xac>
   34a24:	ldr	r0, [sp, #4]
   34a28:	ldrb	r0, [r0]
   34a2c:	cmp	r0, #48	; 0x30
   34a30:	bne	34a60 <flatcc_json_parser_double@@Base+0xc8>
   34a34:	ldr	r0, [sp, #4]
   34a38:	ldrb	r0, [r0, #1]
   34a3c:	cmp	r0, #48	; 0x30
   34a40:	bne	34a60 <flatcc_json_parser_double@@Base+0xc8>
   34a44:	ldr	r0, [fp, #-8]
   34a48:	ldr	r1, [fp, #-12]
   34a4c:	ldr	r2, [sp, #16]
   34a50:	movw	r3, #6
   34a54:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34a58:	str	r0, [fp, #-4]
   34a5c:	b	34b10 <flatcc_json_parser_double@@Base+0x178>
   34a60:	ldr	r0, [fp, #-12]
   34a64:	ldr	r1, [sp, #16]
   34a68:	ldr	r2, [fp, #-12]
   34a6c:	sub	r1, r1, r2
   34a70:	ldr	r2, [sp, #12]
   34a74:	bl	34b28 <flatcc_json_parser_double@@Base+0x190>
   34a78:	str	r0, [sp, #8]
   34a7c:	ldr	r0, [sp, #8]
   34a80:	movw	r1, #0
   34a84:	cmp	r0, r1
   34a88:	beq	34a9c <flatcc_json_parser_double@@Base+0x104>
   34a8c:	ldr	r0, [sp, #8]
   34a90:	ldr	r1, [fp, #-12]
   34a94:	cmp	r0, r1
   34a98:	bne	34b08 <flatcc_json_parser_double@@Base+0x170>
   34a9c:	b	34abc <flatcc_json_parser_double@@Base+0x124>
   34aa0:	ldr	r0, [sp, #12]
   34aa4:	vldr	d16, [r0]
   34aa8:	vcvt.f32.f64	s0, d16
   34aac:	bl	14e48 <__isinff@plt>
   34ab0:	cmp	r0, #0
   34ab4:	bne	34ad0 <flatcc_json_parser_double@@Base+0x138>
   34ab8:	b	34aec <flatcc_json_parser_double@@Base+0x154>
   34abc:	ldr	r0, [sp, #12]
   34ac0:	vldr	d0, [r0]
   34ac4:	bl	14e54 <__isinf@plt>
   34ac8:	cmp	r0, #0
   34acc:	beq	34aec <flatcc_json_parser_double@@Base+0x154>
   34ad0:	ldr	r0, [fp, #-8]
   34ad4:	ldr	r1, [fp, #-12]
   34ad8:	ldr	r2, [sp, #16]
   34adc:	movw	r3, #7
   34ae0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34ae4:	str	r0, [fp, #-4]
   34ae8:	b	34b10 <flatcc_json_parser_double@@Base+0x178>
   34aec:	ldr	r0, [fp, #-8]
   34af0:	ldr	r1, [fp, #-12]
   34af4:	ldr	r2, [sp, #16]
   34af8:	movw	r3, #6
   34afc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34b00:	str	r0, [fp, #-4]
   34b04:	b	34b10 <flatcc_json_parser_double@@Base+0x178>
   34b08:	ldr	r0, [sp, #8]
   34b0c:	str	r0, [fp, #-4]
   34b10:	ldr	r0, [fp, #-4]
   34b14:	mov	sp, fp
   34b18:	pop	{fp, pc}
   34b1c:	nop	{0}
	...
   34b28:	push	{fp, lr}
   34b2c:	mov	fp, sp
   34b30:	sub	sp, sp, #16
   34b34:	str	r0, [fp, #-4]
   34b38:	str	r1, [sp, #8]
   34b3c:	str	r2, [sp, #4]
   34b40:	ldr	r0, [fp, #-4]
   34b44:	ldr	r1, [sp, #8]
   34b48:	ldr	r2, [sp, #4]
   34b4c:	bl	37900 <flatcc_json_parser_struct_as_root@@Base+0x18c>
   34b50:	mov	sp, fp
   34b54:	pop	{fp, pc}

00034b58 <flatcc_json_parser_float@@Base>:
   34b58:	push	{fp, lr}
   34b5c:	mov	fp, sp
   34b60:	sub	sp, sp, #32
   34b64:	vldr	s0, [pc, #368]	; 34cdc <flatcc_json_parser_float@@Base+0x184>
   34b68:	str	r0, [fp, #-8]
   34b6c:	str	r1, [fp, #-12]
   34b70:	str	r2, [sp, #16]
   34b74:	str	r3, [sp, #12]
   34b78:	ldr	r0, [sp, #12]
   34b7c:	vstr	s0, [r0]
   34b80:	ldr	r0, [fp, #-12]
   34b84:	ldr	r1, [sp, #16]
   34b88:	cmp	r0, r1
   34b8c:	bne	34b9c <flatcc_json_parser_float@@Base+0x44>
   34b90:	ldr	r0, [fp, #-12]
   34b94:	str	r0, [fp, #-4]
   34b98:	b	34cd0 <flatcc_json_parser_float@@Base+0x178>
   34b9c:	ldr	r0, [fp, #-12]
   34ba0:	str	r0, [sp, #4]
   34ba4:	ldr	r0, [fp, #-12]
   34ba8:	ldrb	r0, [r0]
   34bac:	cmp	r0, #45	; 0x2d
   34bb0:	bne	34bc0 <flatcc_json_parser_float@@Base+0x68>
   34bb4:	ldr	r0, [sp, #4]
   34bb8:	add	r0, r0, #1
   34bbc:	str	r0, [sp, #4]
   34bc0:	ldr	r0, [sp, #16]
   34bc4:	ldr	r1, [sp, #4]
   34bc8:	sub	r0, r0, r1
   34bcc:	cmp	r0, #1
   34bd0:	ble	34c20 <flatcc_json_parser_float@@Base+0xc8>
   34bd4:	ldr	r0, [sp, #4]
   34bd8:	ldrb	r0, [r0]
   34bdc:	cmp	r0, #46	; 0x2e
   34be0:	beq	34c04 <flatcc_json_parser_float@@Base+0xac>
   34be4:	ldr	r0, [sp, #4]
   34be8:	ldrb	r0, [r0]
   34bec:	cmp	r0, #48	; 0x30
   34bf0:	bne	34c20 <flatcc_json_parser_float@@Base+0xc8>
   34bf4:	ldr	r0, [sp, #4]
   34bf8:	ldrb	r0, [r0, #1]
   34bfc:	cmp	r0, #48	; 0x30
   34c00:	bne	34c20 <flatcc_json_parser_float@@Base+0xc8>
   34c04:	ldr	r0, [fp, #-8]
   34c08:	ldr	r1, [fp, #-12]
   34c0c:	ldr	r2, [sp, #16]
   34c10:	movw	r3, #6
   34c14:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34c18:	str	r0, [fp, #-4]
   34c1c:	b	34cd0 <flatcc_json_parser_float@@Base+0x178>
   34c20:	ldr	r0, [fp, #-12]
   34c24:	ldr	r1, [sp, #16]
   34c28:	ldr	r2, [fp, #-12]
   34c2c:	sub	r1, r1, r2
   34c30:	ldr	r2, [sp, #12]
   34c34:	bl	34ce0 <flatcc_json_parser_float@@Base+0x188>
   34c38:	str	r0, [sp, #8]
   34c3c:	ldr	r0, [sp, #8]
   34c40:	movw	r1, #0
   34c44:	cmp	r0, r1
   34c48:	beq	34c5c <flatcc_json_parser_float@@Base+0x104>
   34c4c:	ldr	r0, [sp, #8]
   34c50:	ldr	r1, [fp, #-12]
   34c54:	cmp	r0, r1
   34c58:	bne	34cc8 <flatcc_json_parser_float@@Base+0x170>
   34c5c:	b	34c60 <flatcc_json_parser_float@@Base+0x108>
   34c60:	ldr	r0, [sp, #12]
   34c64:	vldr	s0, [r0]
   34c68:	bl	14e48 <__isinff@plt>
   34c6c:	cmp	r0, #0
   34c70:	bne	34c90 <flatcc_json_parser_float@@Base+0x138>
   34c74:	b	34cac <flatcc_json_parser_float@@Base+0x154>
   34c78:	ldr	r0, [sp, #12]
   34c7c:	vldr	s0, [r0]
   34c80:	vcvt.f64.f32	d0, s0
   34c84:	bl	14e54 <__isinf@plt>
   34c88:	cmp	r0, #0
   34c8c:	beq	34cac <flatcc_json_parser_float@@Base+0x154>
   34c90:	ldr	r0, [fp, #-8]
   34c94:	ldr	r1, [fp, #-12]
   34c98:	ldr	r2, [sp, #16]
   34c9c:	movw	r3, #7
   34ca0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34ca4:	str	r0, [fp, #-4]
   34ca8:	b	34cd0 <flatcc_json_parser_float@@Base+0x178>
   34cac:	ldr	r0, [fp, #-8]
   34cb0:	ldr	r1, [fp, #-12]
   34cb4:	ldr	r2, [sp, #16]
   34cb8:	movw	r3, #6
   34cbc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34cc0:	str	r0, [fp, #-4]
   34cc4:	b	34cd0 <flatcc_json_parser_float@@Base+0x178>
   34cc8:	ldr	r0, [sp, #8]
   34ccc:	str	r0, [fp, #-4]
   34cd0:	ldr	r0, [fp, #-4]
   34cd4:	mov	sp, fp
   34cd8:	pop	{fp, pc}
   34cdc:	andeq	r0, r0, r0
   34ce0:	push	{fp, lr}
   34ce4:	mov	fp, sp
   34ce8:	sub	sp, sp, #40	; 0x28
   34cec:	ldr	r3, [pc, #180]	; 34da8 <flatcc_json_parser_float@@Base+0x250>
   34cf0:	str	r0, [fp, #-8]
   34cf4:	str	r1, [fp, #-12]
   34cf8:	str	r2, [fp, #-16]
   34cfc:	str	r3, [sp, #4]
   34d00:	ldr	r0, [fp, #-8]
   34d04:	ldr	r1, [fp, #-12]
   34d08:	add	r2, sp, #8
   34d0c:	bl	34b28 <flatcc_json_parser_double@@Base+0x190>
   34d10:	str	r0, [sp, #20]
   34d14:	vldr	d16, [sp, #8]
   34d18:	vcvt.f32.f64	s0, d16
   34d1c:	ldr	r0, [fp, #-16]
   34d20:	vstr	s0, [r0]
   34d24:	ldr	r0, [fp, #-16]
   34d28:	vldr	s0, [r0]
   34d2c:	bl	14e48 <__isinff@plt>
   34d30:	cmp	r0, #0
   34d34:	bne	34d54 <flatcc_json_parser_float@@Base+0x1fc>
   34d38:	b	34d94 <flatcc_json_parser_float@@Base+0x23c>
   34d3c:	ldr	r0, [fp, #-16]
   34d40:	vldr	s0, [r0]
   34d44:	vcvt.f64.f32	d0, s0
   34d48:	bl	14e54 <__isinf@plt>
   34d4c:	cmp	r0, #0
   34d50:	beq	34d94 <flatcc_json_parser_float@@Base+0x23c>
   34d54:	vldr	d16, [sp, #8]
   34d58:	vcmpe.f64	d16, #0.0
   34d5c:	vmrs	APSR_nzcv, fpscr
   34d60:	bpl	34d74 <flatcc_json_parser_float@@Base+0x21c>
   34d64:	vldr	s0, [sp, #4]
   34d68:	vneg.f32	s0, s0
   34d6c:	vstr	s0, [sp]
   34d70:	b	34d7c <flatcc_json_parser_float@@Base+0x224>
   34d74:	vldr	s0, [sp, #4]
   34d78:	vstr	s0, [sp]
   34d7c:	vldr	s0, [sp]
   34d80:	ldr	r0, [fp, #-16]
   34d84:	vstr	s0, [r0]
   34d88:	ldr	r0, [fp, #-8]
   34d8c:	str	r0, [fp, #-4]
   34d90:	b	34d9c <flatcc_json_parser_float@@Base+0x244>
   34d94:	ldr	r0, [sp, #20]
   34d98:	str	r0, [fp, #-4]
   34d9c:	ldr	r0, [fp, #-4]
   34da0:	mov	sp, fp
   34da4:	pop	{fp, pc}
   34da8:	svcvc	0x00800000
   34dac:	push	{fp, lr}
   34db0:	mov	fp, sp
   34db4:	sub	sp, sp, #16
   34db8:	str	r0, [sp, #8]
   34dbc:	str	r1, [sp, #4]
   34dc0:	str	r2, [sp]
   34dc4:	ldr	r0, [sp, #4]
   34dc8:	ldr	r1, [sp]
   34dcc:	cmp	r0, r1
   34dd0:	bne	34de0 <flatcc_json_parser_float@@Base+0x288>
   34dd4:	ldr	r0, [sp, #4]
   34dd8:	str	r0, [fp, #-4]
   34ddc:	b	34e24 <flatcc_json_parser_float@@Base+0x2cc>
   34de0:	ldr	r0, [sp, #4]
   34de4:	ldrb	r0, [r0]
   34de8:	cmp	r0, #34	; 0x22
   34dec:	bne	34e00 <flatcc_json_parser_float@@Base+0x2a8>
   34df0:	ldr	r0, [sp, #4]
   34df4:	add	r0, r0, #1
   34df8:	str	r0, [sp, #4]
   34dfc:	b	34e1c <flatcc_json_parser_float@@Base+0x2c4>
   34e00:	ldr	r0, [sp, #8]
   34e04:	ldr	r1, [sp, #4]
   34e08:	ldr	r2, [sp]
   34e0c:	movw	r3, #5
   34e10:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34e14:	str	r0, [fp, #-4]
   34e18:	b	34e24 <flatcc_json_parser_float@@Base+0x2cc>
   34e1c:	ldr	r0, [sp, #4]
   34e20:	str	r0, [fp, #-4]
   34e24:	ldr	r0, [fp, #-4]
   34e28:	mov	sp, fp
   34e2c:	pop	{fp, pc}
   34e30:	push	{fp, lr}
   34e34:	mov	fp, sp
   34e38:	sub	sp, sp, #16
   34e3c:	str	r0, [sp, #8]
   34e40:	str	r1, [sp, #4]
   34e44:	str	r2, [sp]
   34e48:	ldr	r0, [sp, #4]
   34e4c:	ldr	r1, [sp]
   34e50:	cmp	r0, r1
   34e54:	beq	34e68 <flatcc_json_parser_float@@Base+0x310>
   34e58:	ldr	r0, [sp, #4]
   34e5c:	ldrb	r0, [r0]
   34e60:	cmp	r0, #34	; 0x22
   34e64:	beq	34e84 <flatcc_json_parser_float@@Base+0x32c>
   34e68:	ldr	r0, [sp, #8]
   34e6c:	ldr	r1, [sp, #4]
   34e70:	ldr	r2, [sp]
   34e74:	movw	r3, #16
   34e78:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34e7c:	str	r0, [fp, #-4]
   34e80:	b	34e94 <flatcc_json_parser_float@@Base+0x33c>
   34e84:	ldr	r0, [sp, #4]
   34e88:	add	r0, r0, #1
   34e8c:	str	r0, [sp, #4]
   34e90:	str	r0, [fp, #-4]
   34e94:	ldr	r0, [fp, #-4]
   34e98:	mov	sp, fp
   34e9c:	pop	{fp, pc}
   34ea0:	push	{fp, lr}
   34ea4:	mov	fp, sp
   34ea8:	sub	sp, sp, #16
   34eac:	str	r0, [sp, #8]
   34eb0:	str	r1, [sp, #4]
   34eb4:	str	r2, [sp]
   34eb8:	ldr	r0, [sp, #4]
   34ebc:	ldr	r1, [sp]
   34ec0:	cmp	r0, r1
   34ec4:	beq	34ed8 <flatcc_json_parser_float@@Base+0x380>
   34ec8:	ldr	r0, [sp, #4]
   34ecc:	ldrb	r0, [r0]
   34ed0:	cmp	r0, #34	; 0x22
   34ed4:	beq	34ef4 <flatcc_json_parser_float@@Base+0x39c>
   34ed8:	ldr	r0, [sp, #8]
   34edc:	ldr	r1, [sp, #4]
   34ee0:	ldr	r2, [sp]
   34ee4:	movw	r3, #20
   34ee8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34eec:	str	r0, [fp, #-4]
   34ef0:	b	34f04 <flatcc_json_parser_float@@Base+0x3ac>
   34ef4:	ldr	r0, [sp, #4]
   34ef8:	add	r0, r0, #1
   34efc:	str	r0, [sp, #4]
   34f00:	str	r0, [fp, #-4]
   34f04:	ldr	r0, [fp, #-4]
   34f08:	mov	sp, fp
   34f0c:	pop	{fp, pc}
   34f10:	push	{fp, lr}
   34f14:	mov	fp, sp
   34f18:	sub	sp, sp, #32
   34f1c:	str	r0, [fp, #-8]
   34f20:	str	r1, [fp, #-12]
   34f24:	str	r2, [sp, #16]
   34f28:	ldr	r0, [fp, #-12]
   34f2c:	ldr	r1, [sp, #16]
   34f30:	cmp	r0, r1
   34f34:	bne	34f44 <flatcc_json_parser_float@@Base+0x3ec>
   34f38:	ldr	r0, [fp, #-12]
   34f3c:	str	r0, [fp, #-4]
   34f40:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   34f44:	ldr	r0, [fp, #-12]
   34f48:	ldrb	r0, [r0]
   34f4c:	cmp	r0, #45	; 0x2d
   34f50:	bne	34f90 <flatcc_json_parser_float@@Base+0x438>
   34f54:	ldr	r0, [fp, #-12]
   34f58:	add	r0, r0, #1
   34f5c:	str	r0, [fp, #-12]
   34f60:	ldr	r0, [fp, #-12]
   34f64:	ldr	r1, [sp, #16]
   34f68:	cmp	r0, r1
   34f6c:	bne	34f8c <flatcc_json_parser_float@@Base+0x434>
   34f70:	ldr	r0, [fp, #-8]
   34f74:	ldr	r1, [fp, #-12]
   34f78:	ldr	r2, [sp, #16]
   34f7c:	movw	r3, #6
   34f80:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34f84:	str	r0, [fp, #-4]
   34f88:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   34f8c:	b	34f90 <flatcc_json_parser_float@@Base+0x438>
   34f90:	ldr	r0, [fp, #-12]
   34f94:	ldrb	r0, [r0]
   34f98:	cmp	r0, #48	; 0x30
   34f9c:	bne	34fb0 <flatcc_json_parser_float@@Base+0x458>
   34fa0:	ldr	r0, [fp, #-12]
   34fa4:	add	r0, r0, #1
   34fa8:	str	r0, [fp, #-12]
   34fac:	b	35060 <flatcc_json_parser_float@@Base+0x508>
   34fb0:	ldr	r0, [fp, #-12]
   34fb4:	ldrb	r0, [r0]
   34fb8:	cmp	r0, #49	; 0x31
   34fbc:	blt	34fd0 <flatcc_json_parser_float@@Base+0x478>
   34fc0:	ldr	r0, [fp, #-12]
   34fc4:	ldrb	r0, [r0]
   34fc8:	cmp	r0, #57	; 0x39
   34fcc:	ble	34fec <flatcc_json_parser_float@@Base+0x494>
   34fd0:	ldr	r0, [fp, #-8]
   34fd4:	ldr	r1, [fp, #-12]
   34fd8:	ldr	r2, [sp, #16]
   34fdc:	movw	r3, #6
   34fe0:	bl	33158 <flatcc_json_parser_set_error@@Base>
   34fe4:	str	r0, [fp, #-4]
   34fe8:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   34fec:	ldr	r0, [fp, #-12]
   34ff0:	add	r0, r0, #1
   34ff4:	str	r0, [fp, #-12]
   34ff8:	ldr	r0, [fp, #-12]
   34ffc:	ldr	r1, [sp, #16]
   35000:	cmp	r0, r1
   35004:	movw	r0, #0
   35008:	str	r0, [sp, #12]
   3500c:	beq	35040 <flatcc_json_parser_float@@Base+0x4e8>
   35010:	ldr	r0, [fp, #-12]
   35014:	ldrb	r0, [r0]
   35018:	cmp	r0, #48	; 0x30
   3501c:	movw	r0, #0
   35020:	str	r0, [sp, #12]
   35024:	blt	35040 <flatcc_json_parser_float@@Base+0x4e8>
   35028:	ldr	r0, [fp, #-12]
   3502c:	ldrb	r0, [r0]
   35030:	cmp	r0, #57	; 0x39
   35034:	movw	r0, #0
   35038:	movle	r0, #1
   3503c:	str	r0, [sp, #12]
   35040:	ldr	r0, [sp, #12]
   35044:	tst	r0, #1
   35048:	beq	3505c <flatcc_json_parser_float@@Base+0x504>
   3504c:	ldr	r0, [fp, #-12]
   35050:	add	r0, r0, #1
   35054:	str	r0, [fp, #-12]
   35058:	b	34ff8 <flatcc_json_parser_float@@Base+0x4a0>
   3505c:	b	35060 <flatcc_json_parser_float@@Base+0x508>
   35060:	ldr	r0, [fp, #-12]
   35064:	ldr	r1, [sp, #16]
   35068:	cmp	r0, r1
   3506c:	beq	35140 <flatcc_json_parser_float@@Base+0x5e8>
   35070:	ldr	r0, [fp, #-12]
   35074:	ldrb	r0, [r0]
   35078:	cmp	r0, #46	; 0x2e
   3507c:	bne	3513c <flatcc_json_parser_float@@Base+0x5e4>
   35080:	ldr	r0, [fp, #-12]
   35084:	add	r0, r0, #1
   35088:	str	r0, [fp, #-12]
   3508c:	ldr	r0, [fp, #-12]
   35090:	ldrb	r0, [r0]
   35094:	cmp	r0, #48	; 0x30
   35098:	blt	350ac <flatcc_json_parser_float@@Base+0x554>
   3509c:	ldr	r0, [fp, #-12]
   350a0:	ldrb	r0, [r0]
   350a4:	cmp	r0, #57	; 0x39
   350a8:	ble	350c8 <flatcc_json_parser_float@@Base+0x570>
   350ac:	ldr	r0, [fp, #-8]
   350b0:	ldr	r1, [fp, #-12]
   350b4:	ldr	r2, [sp, #16]
   350b8:	movw	r3, #6
   350bc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   350c0:	str	r0, [fp, #-4]
   350c4:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   350c8:	ldr	r0, [fp, #-12]
   350cc:	add	r0, r0, #1
   350d0:	str	r0, [fp, #-12]
   350d4:	ldr	r0, [fp, #-12]
   350d8:	ldr	r1, [sp, #16]
   350dc:	cmp	r0, r1
   350e0:	movw	r0, #0
   350e4:	str	r0, [sp, #8]
   350e8:	beq	3511c <flatcc_json_parser_float@@Base+0x5c4>
   350ec:	ldr	r0, [fp, #-12]
   350f0:	ldrb	r0, [r0]
   350f4:	cmp	r0, #48	; 0x30
   350f8:	movw	r0, #0
   350fc:	str	r0, [sp, #8]
   35100:	blt	3511c <flatcc_json_parser_float@@Base+0x5c4>
   35104:	ldr	r0, [fp, #-12]
   35108:	ldrb	r0, [r0]
   3510c:	cmp	r0, #57	; 0x39
   35110:	movw	r0, #0
   35114:	movle	r0, #1
   35118:	str	r0, [sp, #8]
   3511c:	ldr	r0, [sp, #8]
   35120:	tst	r0, #1
   35124:	beq	35138 <flatcc_json_parser_float@@Base+0x5e0>
   35128:	ldr	r0, [fp, #-12]
   3512c:	add	r0, r0, #1
   35130:	str	r0, [fp, #-12]
   35134:	b	350d4 <flatcc_json_parser_float@@Base+0x57c>
   35138:	b	3513c <flatcc_json_parser_float@@Base+0x5e4>
   3513c:	b	35140 <flatcc_json_parser_float@@Base+0x5e8>
   35140:	ldr	r0, [fp, #-12]
   35144:	ldr	r1, [sp, #16]
   35148:	cmp	r0, r1
   3514c:	beq	35294 <flatcc_json_parser_float@@Base+0x73c>
   35150:	ldr	r0, [fp, #-12]
   35154:	ldrb	r0, [r0]
   35158:	cmp	r0, #101	; 0x65
   3515c:	beq	35170 <flatcc_json_parser_float@@Base+0x618>
   35160:	ldr	r0, [fp, #-12]
   35164:	ldrb	r0, [r0]
   35168:	cmp	r0, #69	; 0x45
   3516c:	bne	35294 <flatcc_json_parser_float@@Base+0x73c>
   35170:	ldr	r0, [fp, #-12]
   35174:	add	r0, r0, #1
   35178:	str	r0, [fp, #-12]
   3517c:	ldr	r0, [fp, #-12]
   35180:	ldr	r1, [sp, #16]
   35184:	cmp	r0, r1
   35188:	bne	351a8 <flatcc_json_parser_float@@Base+0x650>
   3518c:	ldr	r0, [fp, #-8]
   35190:	ldr	r1, [fp, #-12]
   35194:	ldr	r2, [sp, #16]
   35198:	movw	r3, #6
   3519c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   351a0:	str	r0, [fp, #-4]
   351a4:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   351a8:	ldr	r0, [fp, #-12]
   351ac:	ldrb	r0, [r0]
   351b0:	cmp	r0, #43	; 0x2b
   351b4:	beq	351c8 <flatcc_json_parser_float@@Base+0x670>
   351b8:	ldr	r0, [fp, #-12]
   351bc:	ldrb	r0, [r0]
   351c0:	cmp	r0, #45	; 0x2d
   351c4:	bne	351d4 <flatcc_json_parser_float@@Base+0x67c>
   351c8:	ldr	r0, [fp, #-12]
   351cc:	add	r0, r0, #1
   351d0:	str	r0, [fp, #-12]
   351d4:	ldr	r0, [fp, #-12]
   351d8:	ldr	r1, [sp, #16]
   351dc:	cmp	r0, r1
   351e0:	beq	35204 <flatcc_json_parser_float@@Base+0x6ac>
   351e4:	ldr	r0, [fp, #-12]
   351e8:	ldrb	r0, [r0]
   351ec:	cmp	r0, #48	; 0x30
   351f0:	blt	35204 <flatcc_json_parser_float@@Base+0x6ac>
   351f4:	ldr	r0, [fp, #-12]
   351f8:	ldrb	r0, [r0]
   351fc:	cmp	r0, #57	; 0x39
   35200:	ble	35220 <flatcc_json_parser_float@@Base+0x6c8>
   35204:	ldr	r0, [fp, #-8]
   35208:	ldr	r1, [fp, #-12]
   3520c:	ldr	r2, [sp, #16]
   35210:	movw	r3, #6
   35214:	bl	33158 <flatcc_json_parser_set_error@@Base>
   35218:	str	r0, [fp, #-4]
   3521c:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   35220:	ldr	r0, [fp, #-12]
   35224:	add	r0, r0, #1
   35228:	str	r0, [fp, #-12]
   3522c:	ldr	r0, [fp, #-12]
   35230:	ldr	r1, [sp, #16]
   35234:	cmp	r0, r1
   35238:	movw	r0, #0
   3523c:	str	r0, [sp, #4]
   35240:	beq	35274 <flatcc_json_parser_float@@Base+0x71c>
   35244:	ldr	r0, [fp, #-12]
   35248:	ldrb	r0, [r0]
   3524c:	cmp	r0, #48	; 0x30
   35250:	movw	r0, #0
   35254:	str	r0, [sp, #4]
   35258:	blt	35274 <flatcc_json_parser_float@@Base+0x71c>
   3525c:	ldr	r0, [fp, #-12]
   35260:	ldrb	r0, [r0]
   35264:	cmp	r0, #57	; 0x39
   35268:	movw	r0, #0
   3526c:	movle	r0, #1
   35270:	str	r0, [sp, #4]
   35274:	ldr	r0, [sp, #4]
   35278:	tst	r0, #1
   3527c:	beq	35290 <flatcc_json_parser_float@@Base+0x738>
   35280:	ldr	r0, [fp, #-12]
   35284:	add	r0, r0, #1
   35288:	str	r0, [fp, #-12]
   3528c:	b	3522c <flatcc_json_parser_float@@Base+0x6d4>
   35290:	b	35294 <flatcc_json_parser_float@@Base+0x73c>
   35294:	ldr	r0, [fp, #-12]
   35298:	ldr	r1, [sp, #16]
   3529c:	cmp	r0, r1
   352a0:	beq	35330 <flatcc_json_parser_float@@Base+0x7d8>
   352a4:	ldr	r0, [fp, #-12]
   352a8:	ldrb	r0, [r0]
   352ac:	sub	r1, r0, #9
   352b0:	cmp	r1, #3
   352b4:	str	r0, [sp]
   352b8:	bcc	35320 <flatcc_json_parser_float@@Base+0x7c8>
   352bc:	b	352c0 <flatcc_json_parser_float@@Base+0x768>
   352c0:	ldr	r0, [sp]
   352c4:	cmp	r0, #13
   352c8:	beq	35320 <flatcc_json_parser_float@@Base+0x7c8>
   352cc:	b	352d0 <flatcc_json_parser_float@@Base+0x778>
   352d0:	ldr	r0, [sp]
   352d4:	cmp	r0, #32
   352d8:	beq	35320 <flatcc_json_parser_float@@Base+0x7c8>
   352dc:	b	352e0 <flatcc_json_parser_float@@Base+0x788>
   352e0:	ldr	r0, [sp]
   352e4:	cmp	r0, #44	; 0x2c
   352e8:	beq	35320 <flatcc_json_parser_float@@Base+0x7c8>
   352ec:	b	352f0 <flatcc_json_parser_float@@Base+0x798>
   352f0:	ldr	r0, [sp]
   352f4:	cmp	r0, #58	; 0x3a
   352f8:	beq	35320 <flatcc_json_parser_float@@Base+0x7c8>
   352fc:	b	35300 <flatcc_json_parser_float@@Base+0x7a8>
   35300:	ldr	r0, [sp]
   35304:	cmp	r0, #93	; 0x5d
   35308:	beq	35320 <flatcc_json_parser_float@@Base+0x7c8>
   3530c:	b	35310 <flatcc_json_parser_float@@Base+0x7b8>
   35310:	ldr	r0, [sp]
   35314:	cmp	r0, #125	; 0x7d
   35318:	bne	3532c <flatcc_json_parser_float@@Base+0x7d4>
   3531c:	b	35320 <flatcc_json_parser_float@@Base+0x7c8>
   35320:	ldr	r0, [fp, #-12]
   35324:	str	r0, [fp, #-4]
   35328:	b	35348 <flatcc_json_parser_float@@Base+0x7f0>
   3532c:	b	35330 <flatcc_json_parser_float@@Base+0x7d8>
   35330:	ldr	r0, [fp, #-8]
   35334:	ldr	r1, [fp, #-12]
   35338:	ldr	r2, [sp, #16]
   3533c:	movw	r3, #6
   35340:	bl	33158 <flatcc_json_parser_set_error@@Base>
   35344:	str	r0, [fp, #-4]
   35348:	ldr	r0, [fp, #-4]
   3534c:	mov	sp, fp
   35350:	pop	{fp, pc}
   35354:	push	{fp, lr}
   35358:	mov	fp, sp
   3535c:	sub	sp, sp, #32
   35360:	str	r0, [fp, #-8]
   35364:	str	r1, [fp, #-12]
   35368:	str	r2, [sp, #16]
   3536c:	str	r3, [sp, #12]
   35370:	ldr	r0, [fp, #-12]
   35374:	str	r0, [sp, #8]
   35378:	ldr	r0, [sp, #16]
   3537c:	ldr	r1, [fp, #-12]
   35380:	sub	r0, r0, r1
   35384:	cmp	r0, #4
   35388:	blt	353c8 <flatcc_json_parser_float@@Base+0x870>
   3538c:	ldr	r0, [fp, #-12]
   35390:	ldr	r0, [r0]
   35394:	movw	r1, #29300	; 0x7274
   35398:	movt	r1, #25973	; 0x6575
   3539c:	subs	r0, r0, r1
   353a0:	movwne	r0, #1
   353a4:	cmp	r0, #0
   353a8:	bne	353c8 <flatcc_json_parser_float@@Base+0x870>
   353ac:	ldr	r0, [sp, #12]
   353b0:	movw	r1, #1
   353b4:	strb	r1, [r0]
   353b8:	ldr	r0, [sp, #8]
   353bc:	add	r0, r0, #4
   353c0:	str	r0, [fp, #-4]
   353c4:	b	35460 <flatcc_json_parser_float@@Base+0x908>
   353c8:	ldr	r0, [sp, #16]
   353cc:	ldr	r1, [fp, #-12]
   353d0:	sub	r0, r0, r1
   353d4:	cmp	r0, #5
   353d8:	blt	35414 <flatcc_json_parser_float@@Base+0x8bc>
   353dc:	ldr	r0, [fp, #-12]
   353e0:	ldr	r1, [pc, #132]	; 3546c <flatcc_json_parser_float@@Base+0x914>
   353e4:	add	r1, pc, r1
   353e8:	mov	r2, #5
   353ec:	bl	14e3c <memcmp@plt>
   353f0:	cmp	r0, #0
   353f4:	bne	35414 <flatcc_json_parser_float@@Base+0x8bc>
   353f8:	ldr	r0, [sp, #12]
   353fc:	movw	r1, #0
   35400:	strb	r1, [r0]
   35404:	ldr	r0, [sp, #8]
   35408:	add	r0, r0, #5
   3540c:	str	r0, [fp, #-4]
   35410:	b	35460 <flatcc_json_parser_float@@Base+0x908>
   35414:	b	35418 <flatcc_json_parser_float@@Base+0x8c0>
   35418:	ldr	r0, [fp, #-8]
   3541c:	ldr	r1, [fp, #-12]
   35420:	ldr	r2, [sp, #16]
   35424:	add	r3, sp, #7
   35428:	bl	36990 <flatcc_json_parser_union_type@@Base+0x2a4>
   3542c:	str	r0, [fp, #-12]
   35430:	ldrsb	r0, [sp, #7]
   35434:	cmp	r0, #0
   35438:	movw	r0, #0
   3543c:	movne	r0, #1
   35440:	mvn	r1, #0
   35444:	eor	r0, r0, r1
   35448:	eor	r0, r0, r1
   3544c:	and	r0, r0, #1
   35450:	ldr	r1, [sp, #12]
   35454:	strb	r0, [r1]
   35458:	ldr	r0, [fp, #-12]
   3545c:	str	r0, [fp, #-4]
   35460:	ldr	r0, [fp, #-4]
   35464:	mov	sp, fp
   35468:	pop	{fp, pc}
   3546c:			; <UNDEFINED> instruction: 0x00013bbc
   35470:	sub	sp, sp, #12
   35474:	str	r0, [sp, #4]
   35478:	str	r1, [sp]
   3547c:	ldr	r0, [sp]
   35480:	ldr	r1, [sp, #4]
   35484:	sub	r0, r0, r1
   35488:	cmp	r0, #4
   3548c:	blt	354c0 <flatcc_json_parser_float@@Base+0x968>
   35490:	ldr	r0, [sp, #4]
   35494:	ldr	r0, [r0]
   35498:	movw	r1, #30062	; 0x756e
   3549c:	movt	r1, #27756	; 0x6c6c
   354a0:	subs	r0, r0, r1
   354a4:	movwne	r0, #1
   354a8:	cmp	r0, #0
   354ac:	bne	354c0 <flatcc_json_parser_float@@Base+0x968>
   354b0:	ldr	r0, [sp, #4]
   354b4:	add	r0, r0, #4
   354b8:	str	r0, [sp, #8]
   354bc:	b	354c8 <flatcc_json_parser_float@@Base+0x970>
   354c0:	ldr	r0, [sp, #4]
   354c4:	str	r0, [sp, #8]
   354c8:	ldr	r0, [sp, #8]
   354cc:	add	sp, sp, #12
   354d0:	bx	lr
   354d4:	push	{fp, lr}
   354d8:	mov	fp, sp
   354dc:	sub	sp, sp, #24
   354e0:	str	r0, [fp, #-8]
   354e4:	str	r1, [sp, #12]
   354e8:	str	r2, [sp, #8]
   354ec:	str	r3, [sp, #4]
   354f0:	ldr	r0, [fp, #-8]
   354f4:	ldr	r1, [sp, #12]
   354f8:	ldr	r2, [sp, #8]
   354fc:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35500:	str	r0, [sp, #12]
   35504:	ldr	r0, [sp, #12]
   35508:	ldr	r1, [sp, #8]
   3550c:	cmp	r0, r1
   35510:	bne	3552c <flatcc_json_parser_float@@Base+0x9d4>
   35514:	ldr	r0, [sp, #4]
   35518:	movw	r1, #0
   3551c:	str	r1, [r0]
   35520:	ldr	r0, [sp, #12]
   35524:	str	r0, [fp, #-4]
   35528:	b	3562c <flatcc_json_parser_float@@Base+0xad4>
   3552c:	ldr	r0, [sp, #12]
   35530:	ldrb	r0, [r0]
   35534:	cmp	r0, #44	; 0x2c
   35538:	beq	35590 <flatcc_json_parser_float@@Base+0xa38>
   3553c:	ldr	r0, [sp, #4]
   35540:	movw	r1, #0
   35544:	str	r1, [r0]
   35548:	ldr	r0, [sp, #12]
   3554c:	ldrb	r0, [r0]
   35550:	cmp	r0, #93	; 0x5d
   35554:	beq	35574 <flatcc_json_parser_float@@Base+0xa1c>
   35558:	ldr	r0, [fp, #-8]
   3555c:	ldr	r1, [sp, #12]
   35560:	ldr	r2, [sp, #8]
   35564:	movw	r3, #9
   35568:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3556c:	str	r0, [fp, #-4]
   35570:	b	3562c <flatcc_json_parser_float@@Base+0xad4>
   35574:	ldr	r0, [fp, #-8]
   35578:	ldr	r1, [sp, #12]
   3557c:	add	r1, r1, #1
   35580:	ldr	r2, [sp, #8]
   35584:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35588:	str	r0, [fp, #-4]
   3558c:	b	3562c <flatcc_json_parser_float@@Base+0xad4>
   35590:	ldr	r0, [fp, #-8]
   35594:	ldr	r1, [sp, #12]
   35598:	add	r1, r1, #1
   3559c:	ldr	r2, [sp, #8]
   355a0:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   355a4:	str	r0, [sp, #12]
   355a8:	ldr	r0, [sp, #12]
   355ac:	ldr	r1, [sp, #8]
   355b0:	cmp	r0, r1
   355b4:	bne	355e0 <flatcc_json_parser_float@@Base+0xa88>
   355b8:	ldr	r0, [sp, #4]
   355bc:	movw	r1, #0
   355c0:	str	r1, [r0]
   355c4:	ldr	r0, [fp, #-8]
   355c8:	ldr	r1, [sp, #12]
   355cc:	ldr	r2, [sp, #8]
   355d0:	movw	r3, #9
   355d4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   355d8:	str	r0, [fp, #-4]
   355dc:	b	3562c <flatcc_json_parser_float@@Base+0xad4>
   355e0:	ldr	r0, [sp, #12]
   355e4:	ldrb	r0, [r0]
   355e8:	cmp	r0, #93	; 0x5d
   355ec:	bne	35618 <flatcc_json_parser_float@@Base+0xac0>
   355f0:	ldr	r0, [sp, #4]
   355f4:	movw	r1, #0
   355f8:	str	r1, [r0]
   355fc:	ldr	r0, [fp, #-8]
   35600:	ldr	r1, [sp, #12]
   35604:	add	r1, r1, #1
   35608:	ldr	r2, [sp, #8]
   3560c:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35610:	str	r0, [fp, #-4]
   35614:	b	3562c <flatcc_json_parser_float@@Base+0xad4>
   35618:	ldr	r0, [sp, #4]
   3561c:	movw	r1, #1
   35620:	str	r1, [r0]
   35624:	ldr	r0, [sp, #12]
   35628:	str	r0, [fp, #-4]
   3562c:	ldr	r0, [fp, #-4]
   35630:	mov	sp, fp
   35634:	pop	{fp, pc}
   35638:	push	{fp, lr}
   3563c:	mov	fp, sp
   35640:	sub	sp, sp, #24
   35644:	str	r0, [fp, #-8]
   35648:	str	r1, [sp, #12]
   3564c:	str	r2, [sp, #8]
   35650:	str	r3, [sp, #4]
   35654:	ldr	r0, [fp, #-8]
   35658:	ldr	r1, [sp, #12]
   3565c:	ldr	r2, [sp, #8]
   35660:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35664:	str	r0, [sp, #12]
   35668:	ldr	r0, [sp, #12]
   3566c:	ldr	r1, [sp, #8]
   35670:	cmp	r0, r1
   35674:	bne	35690 <flatcc_json_parser_float@@Base+0xb38>
   35678:	ldr	r0, [sp, #4]
   3567c:	movw	r1, #0
   35680:	str	r1, [r0]
   35684:	ldr	r0, [sp, #12]
   35688:	str	r0, [fp, #-4]
   3568c:	b	35790 <flatcc_json_parser_float@@Base+0xc38>
   35690:	ldr	r0, [sp, #12]
   35694:	ldrb	r0, [r0]
   35698:	cmp	r0, #44	; 0x2c
   3569c:	beq	356f4 <flatcc_json_parser_float@@Base+0xb9c>
   356a0:	ldr	r0, [sp, #4]
   356a4:	movw	r1, #0
   356a8:	str	r1, [r0]
   356ac:	ldr	r0, [sp, #12]
   356b0:	ldrb	r0, [r0]
   356b4:	cmp	r0, #125	; 0x7d
   356b8:	beq	356d8 <flatcc_json_parser_float@@Base+0xb80>
   356bc:	ldr	r0, [fp, #-8]
   356c0:	ldr	r1, [sp, #12]
   356c4:	ldr	r2, [sp, #8]
   356c8:	movw	r3, #10
   356cc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   356d0:	str	r0, [fp, #-4]
   356d4:	b	35790 <flatcc_json_parser_float@@Base+0xc38>
   356d8:	ldr	r0, [fp, #-8]
   356dc:	ldr	r1, [sp, #12]
   356e0:	add	r1, r1, #1
   356e4:	ldr	r2, [sp, #8]
   356e8:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   356ec:	str	r0, [fp, #-4]
   356f0:	b	35790 <flatcc_json_parser_float@@Base+0xc38>
   356f4:	ldr	r0, [fp, #-8]
   356f8:	ldr	r1, [sp, #12]
   356fc:	add	r1, r1, #1
   35700:	ldr	r2, [sp, #8]
   35704:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35708:	str	r0, [sp, #12]
   3570c:	ldr	r0, [sp, #12]
   35710:	ldr	r1, [sp, #8]
   35714:	cmp	r0, r1
   35718:	bne	35744 <flatcc_json_parser_float@@Base+0xbec>
   3571c:	ldr	r0, [sp, #4]
   35720:	movw	r1, #0
   35724:	str	r1, [r0]
   35728:	ldr	r0, [fp, #-8]
   3572c:	ldr	r1, [sp, #12]
   35730:	ldr	r2, [sp, #8]
   35734:	movw	r3, #10
   35738:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3573c:	str	r0, [fp, #-4]
   35740:	b	35790 <flatcc_json_parser_float@@Base+0xc38>
   35744:	ldr	r0, [sp, #12]
   35748:	ldrb	r0, [r0]
   3574c:	cmp	r0, #125	; 0x7d
   35750:	bne	3577c <flatcc_json_parser_float@@Base+0xc24>
   35754:	ldr	r0, [sp, #4]
   35758:	movw	r1, #0
   3575c:	str	r1, [r0]
   35760:	ldr	r0, [fp, #-8]
   35764:	ldr	r1, [sp, #12]
   35768:	add	r1, r1, #1
   3576c:	ldr	r2, [sp, #8]
   35770:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   35774:	str	r0, [fp, #-4]
   35778:	b	35790 <flatcc_json_parser_float@@Base+0xc38>
   3577c:	ldr	r0, [sp, #4]
   35780:	movw	r1, #1
   35784:	str	r1, [r0]
   35788:	ldr	r0, [sp, #12]
   3578c:	str	r0, [fp, #-4]
   35790:	ldr	r0, [fp, #-4]
   35794:	mov	sp, fp
   35798:	pop	{fp, pc}

0003579c <flatcc_json_parser_integer@@Base>:
   3579c:	push	{fp, lr}
   357a0:	mov	fp, sp
   357a4:	sub	sp, sp, #48	; 0x30
   357a8:	ldr	ip, [fp, #8]
   357ac:	str	r0, [fp, #-8]
   357b0:	str	r1, [fp, #-12]
   357b4:	str	r2, [fp, #-16]
   357b8:	str	r3, [fp, #-20]	; 0xffffffec
   357bc:	mov	r0, #0
   357c0:	str	r0, [sp, #12]
   357c4:	str	r0, [sp, #8]
   357c8:	ldr	r0, [fp, #-12]
   357cc:	ldr	r1, [fp, #-16]
   357d0:	cmp	r0, r1
   357d4:	bne	357e4 <flatcc_json_parser_integer@@Base+0x48>
   357d8:	ldr	r0, [fp, #-12]
   357dc:	str	r0, [fp, #-4]
   357e0:	b	359b0 <flatcc_json_parser_integer@@Base+0x214>
   357e4:	ldr	r0, [fp, #-12]
   357e8:	str	r0, [sp, #4]
   357ec:	ldr	r0, [fp, #-12]
   357f0:	ldrb	r0, [r0]
   357f4:	cmp	r0, #45	; 0x2d
   357f8:	movw	r0, #0
   357fc:	moveq	r0, #1
   35800:	and	r0, r0, #1
   35804:	ldr	r1, [fp, #-20]	; 0xffffffec
   35808:	str	r0, [r1]
   3580c:	ldr	r0, [fp, #-20]	; 0xffffffec
   35810:	ldr	r0, [r0]
   35814:	ldr	r1, [fp, #-12]
   35818:	add	r0, r1, r0
   3581c:	str	r0, [fp, #-12]
   35820:	ldr	r0, [fp, #-12]
   35824:	ldr	r1, [fp, #-16]
   35828:	cmp	r0, r1
   3582c:	movw	r0, #0
   35830:	str	r0, [sp]
   35834:	beq	35868 <flatcc_json_parser_integer@@Base+0xcc>
   35838:	ldr	r0, [fp, #-12]
   3583c:	ldrb	r0, [r0]
   35840:	cmp	r0, #48	; 0x30
   35844:	movw	r0, #0
   35848:	str	r0, [sp]
   3584c:	blt	35868 <flatcc_json_parser_integer@@Base+0xcc>
   35850:	ldr	r0, [fp, #-12]
   35854:	ldrb	r0, [r0]
   35858:	cmp	r0, #57	; 0x39
   3585c:	movw	r0, #0
   35860:	movle	r0, #1
   35864:	str	r0, [sp]
   35868:	ldr	r0, [sp]
   3586c:	tst	r0, #1
   35870:	beq	3591c <flatcc_json_parser_integer@@Base+0x180>
   35874:	ldr	r0, [sp, #8]
   35878:	ldr	r1, [sp, #12]
   3587c:	str	r1, [sp, #20]
   35880:	str	r0, [sp, #16]
   35884:	ldr	r0, [sp, #8]
   35888:	ldr	r1, [sp, #12]
   3588c:	add	r1, r1, r1, lsl #2
   35890:	lsl	r1, r1, #1
   35894:	ldr	r2, [fp, #-12]
   35898:	ldrb	r2, [r2]
   3589c:	mov	r3, #10
   358a0:	umlal	r2, r1, r0, r3
   358a4:	subs	r0, r2, #48	; 0x30
   358a8:	sbc	r1, r1, #0
   358ac:	str	r0, [sp, #8]
   358b0:	str	r1, [sp, #12]
   358b4:	ldr	r0, [sp, #16]
   358b8:	ldr	r1, [sp, #20]
   358bc:	ldr	r2, [sp, #8]
   358c0:	ldr	r3, [sp, #12]
   358c4:	subs	r0, r2, r0
   358c8:	sbcs	r1, r3, r1
   358cc:	bcs	3590c <flatcc_json_parser_integer@@Base+0x170>
   358d0:	b	358d4 <flatcc_json_parser_integer@@Base+0x138>
   358d4:	ldr	r0, [fp, #-8]
   358d8:	ldr	r1, [fp, #-12]
   358dc:	ldr	r2, [fp, #-16]
   358e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   358e4:	movw	ip, #0
   358e8:	cmp	r3, ip
   358ec:	movw	r3, #0
   358f0:	movne	r3, #1
   358f4:	tst	r3, #1
   358f8:	movw	r3, #8
   358fc:	moveq	r3, #7
   35900:	bl	33158 <flatcc_json_parser_set_error@@Base>
   35904:	str	r0, [fp, #-4]
   35908:	b	359b0 <flatcc_json_parser_integer@@Base+0x214>
   3590c:	ldr	r0, [fp, #-12]
   35910:	add	r0, r0, #1
   35914:	str	r0, [fp, #-12]
   35918:	b	35820 <flatcc_json_parser_integer@@Base+0x84>
   3591c:	ldr	r0, [fp, #-12]
   35920:	ldr	r1, [sp, #4]
   35924:	cmp	r0, r1
   35928:	bne	35938 <flatcc_json_parser_integer@@Base+0x19c>
   3592c:	ldr	r0, [fp, #-12]
   35930:	str	r0, [fp, #-4]
   35934:	b	359b0 <flatcc_json_parser_integer@@Base+0x214>
   35938:	ldr	r0, [fp, #-12]
   3593c:	ldr	r1, [fp, #-16]
   35940:	cmp	r0, r1
   35944:	beq	35994 <flatcc_json_parser_integer@@Base+0x1f8>
   35948:	ldr	r0, [fp, #-12]
   3594c:	ldrb	r0, [r0]
   35950:	cmp	r0, #101	; 0x65
   35954:	beq	35978 <flatcc_json_parser_integer@@Base+0x1dc>
   35958:	ldr	r0, [fp, #-12]
   3595c:	ldrb	r0, [r0]
   35960:	cmp	r0, #69	; 0x45
   35964:	beq	35978 <flatcc_json_parser_integer@@Base+0x1dc>
   35968:	ldr	r0, [fp, #-12]
   3596c:	ldrb	r0, [r0]
   35970:	cmp	r0, #46	; 0x2e
   35974:	bne	35994 <flatcc_json_parser_integer@@Base+0x1f8>
   35978:	ldr	r0, [fp, #-8]
   3597c:	ldr	r1, [fp, #-12]
   35980:	ldr	r2, [fp, #-16]
   35984:	movw	r3, #12
   35988:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3598c:	str	r0, [fp, #-4]
   35990:	b	359b0 <flatcc_json_parser_integer@@Base+0x214>
   35994:	ldr	r0, [sp, #8]
   35998:	ldr	r1, [sp, #12]
   3599c:	ldr	r2, [fp, #8]
   359a0:	str	r1, [r2, #4]
   359a4:	str	r0, [r2]
   359a8:	ldr	r0, [fp, #-12]
   359ac:	str	r0, [fp, #-4]
   359b0:	ldr	r0, [fp, #-4]
   359b4:	mov	sp, fp
   359b8:	pop	{fp, pc}

000359bc <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   359bc:	push	{fp, lr}
   359c0:	mov	fp, sp
   359c4:	sub	sp, sp, #64	; 0x40
   359c8:	ldr	ip, [fp, #8]
   359cc:	str	r0, [fp, #-8]
   359d0:	str	r1, [fp, #-12]
   359d4:	str	r2, [fp, #-16]
   359d8:	str	r3, [fp, #-20]	; 0xffffffec
   359dc:	ldr	r0, [fp, #8]
   359e0:	cmp	r0, #0
   359e4:	movw	r0, #0
   359e8:	movne	r0, #1
   359ec:	tst	r0, #1
   359f0:	movw	r0, #1
   359f4:	moveq	r0, #0
   359f8:	str	r0, [sp, #20]
   359fc:	ldr	r0, [fp, #-8]
   35a00:	ldr	r1, [fp, #-12]
   35a04:	ldr	r2, [fp, #-16]
   35a08:	str	ip, [sp, #12]
   35a0c:	bl	34e30 <flatcc_json_parser_float@@Base+0x2d8>
   35a10:	str	r0, [fp, #-12]
   35a14:	ldr	r0, [fp, #-8]
   35a18:	ldr	r1, [fp, #-12]
   35a1c:	str	r1, [fp, #-24]	; 0xffffffe8
   35a20:	ldr	r2, [fp, #-16]
   35a24:	bl	331bc <flatcc_json_parser_string_part@@Base>
   35a28:	str	r0, [fp, #-12]
   35a2c:	ldr	r0, [fp, #-12]
   35a30:	ldr	r1, [fp, #-16]
   35a34:	cmp	r0, r1
   35a38:	beq	35a4c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   35a3c:	ldr	r0, [fp, #-12]
   35a40:	ldrb	r0, [r0]
   35a44:	cmp	r0, #34	; 0x22
   35a48:	beq	35a50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x94>
   35a4c:	b	35bd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35a50:	ldr	r0, [fp, #-12]
   35a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35a58:	sub	r0, r0, r1
   35a5c:	bl	35c1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   35a60:	str	r0, [sp, #32]
   35a64:	ldr	r0, [fp, #-8]
   35a68:	ldr	r0, [r0]
   35a6c:	movw	r1, #1
   35a70:	movw	r2, #1
   35a74:	uxth	r2, r2
   35a78:	mvn	r3, #0
   35a7c:	bl	2b424 <flatcc_builder_start_vector@@Base>
   35a80:	cmp	r0, #0
   35a84:	beq	35a8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd0>
   35a88:	b	35bac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35a8c:	ldr	r0, [fp, #-8]
   35a90:	ldr	r0, [r0]
   35a94:	ldr	r1, [sp, #32]
   35a98:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   35a9c:	str	r0, [fp, #-28]	; 0xffffffe4
   35aa0:	movw	r1, #0
   35aa4:	cmp	r0, r1
   35aa8:	bne	35ab0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf4>
   35aac:	b	35bac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35ab0:	ldr	r0, [fp, #-12]
   35ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35ab8:	sub	r0, r0, r1
   35abc:	str	r0, [sp, #24]
   35ac0:	ldr	r0, [sp, #32]
   35ac4:	str	r0, [sp, #28]
   35ac8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35ad0:	ldr	r2, [sp, #20]
   35ad4:	add	r3, sp, #28
   35ad8:	str	r2, [sp, #8]
   35adc:	mov	r2, r3
   35ae0:	add	r3, sp, #24
   35ae4:	ldr	ip, [sp, #8]
   35ae8:	str	ip, [sp]
   35aec:	bl	35cac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   35af0:	str	r0, [sp, #16]
   35af4:	cmp	r0, #0
   35af8:	beq	35b10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   35afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35b00:	ldr	r1, [sp, #24]
   35b04:	add	r0, r0, r1
   35b08:	str	r0, [fp, #-12]
   35b0c:	b	35bd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35b10:	ldr	r0, [sp, #24]
   35b14:	ldr	r1, [fp, #-12]
   35b18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35b1c:	sub	r1, r1, r2
   35b20:	cmp	r0, r1
   35b24:	beq	35b3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   35b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35b2c:	ldr	r1, [sp, #24]
   35b30:	add	r0, r0, r1
   35b34:	str	r0, [fp, #-12]
   35b38:	b	35bd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   35b3c:	ldr	r0, [sp, #28]
   35b40:	ldr	r1, [sp, #32]
   35b44:	cmp	r0, r1
   35b48:	bcs	35b74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35b4c:	ldr	r0, [fp, #-8]
   35b50:	ldr	r0, [r0]
   35b54:	ldr	r1, [sp, #32]
   35b58:	ldr	r2, [sp, #28]
   35b5c:	sub	r1, r1, r2
   35b60:	bl	2b0bc <flatcc_builder_truncate_vector@@Base>
   35b64:	cmp	r0, #0
   35b68:	beq	35b70 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b4>
   35b6c:	b	35bac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35b70:	b	35b74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   35b74:	ldr	r0, [fp, #-8]
   35b78:	ldr	r0, [r0]
   35b7c:	bl	2c904 <flatcc_builder_end_vector@@Base>
   35b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   35b84:	str	r0, [r1]
   35b88:	cmp	r0, #0
   35b8c:	bne	35b94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
   35b90:	b	35bac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   35b94:	ldr	r0, [fp, #-8]
   35b98:	ldr	r1, [fp, #-12]
   35b9c:	ldr	r2, [fp, #-16]
   35ba0:	bl	34ea0 <flatcc_json_parser_float@@Base+0x348>
   35ba4:	str	r0, [fp, #-4]
   35ba8:	b	35c10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   35bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   35bb0:	movw	r1, #0
   35bb4:	str	r1, [r0]
   35bb8:	ldr	r0, [fp, #-8]
   35bbc:	ldr	r1, [fp, #-12]
   35bc0:	ldr	r2, [fp, #-16]
   35bc4:	movw	r3, #33	; 0x21
   35bc8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   35bcc:	str	r0, [fp, #-4]
   35bd0:	b	35c10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   35bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   35bd8:	movw	r1, #0
   35bdc:	str	r1, [r0]
   35be0:	ldr	r0, [fp, #-8]
   35be4:	ldr	r1, [fp, #-12]
   35be8:	ldr	r2, [fp, #-16]
   35bec:	ldr	r3, [fp, #8]
   35bf0:	cmp	r3, #0
   35bf4:	movw	r3, #0
   35bf8:	movne	r3, #1
   35bfc:	tst	r3, #1
   35c00:	movw	r3, #32
   35c04:	moveq	r3, #31
   35c08:	bl	33158 <flatcc_json_parser_set_error@@Base>
   35c0c:	str	r0, [fp, #-4]
   35c10:	ldr	r0, [fp, #-4]
   35c14:	mov	sp, fp
   35c18:	pop	{fp, pc}
   35c1c:	sub	sp, sp, #20
   35c20:	str	r0, [sp, #12]
   35c24:	ldr	r0, [sp, #12]
   35c28:	and	r0, r0, #3
   35c2c:	str	r0, [sp, #8]
   35c30:	ldr	r0, [sp, #12]
   35c34:	lsr	r0, r0, #2
   35c38:	add	r0, r0, r0, lsl #1
   35c3c:	str	r0, [sp, #4]
   35c40:	ldr	r0, [sp, #8]
   35c44:	cmp	r0, #2
   35c48:	str	r0, [sp]
   35c4c:	bcc	35c94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   35c50:	b	35c54 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x298>
   35c54:	ldr	r0, [sp]
   35c58:	cmp	r0, #2
   35c5c:	beq	35c84 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   35c60:	b	35c64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a8>
   35c64:	ldr	r0, [sp]
   35c68:	cmp	r0, #3
   35c6c:	bne	35c98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   35c70:	b	35c74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   35c74:	ldr	r0, [sp, #4]
   35c78:	add	r0, r0, #2
   35c7c:	str	r0, [sp, #16]
   35c80:	b	35ca0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   35c84:	ldr	r0, [sp, #4]
   35c88:	add	r0, r0, #1
   35c8c:	str	r0, [sp, #16]
   35c90:	b	35ca0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   35c94:	b	35c98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   35c98:	ldr	r0, [sp, #4]
   35c9c:	str	r0, [sp, #16]
   35ca0:	ldr	r0, [sp, #16]
   35ca4:	add	sp, sp, #20
   35ca8:	bx	lr
   35cac:	push	{fp, lr}
   35cb0:	mov	fp, sp
   35cb4:	sub	sp, sp, #68	; 0x44
   35cb8:	ldr	ip, [fp, #8]
   35cbc:	ldr	lr, [pc, #1276]	; 361c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x804>
   35cc0:	add	lr, pc, lr
   35cc4:	str	r0, [fp, #-4]
   35cc8:	str	r1, [fp, #-8]
   35ccc:	str	r2, [fp, #-12]
   35cd0:	str	r3, [fp, #-16]
   35cd4:	movw	r0, #0
   35cd8:	str	r0, [fp, #-20]	; 0xffffffec
   35cdc:	ldr	r1, [fp, #-4]
   35ce0:	str	r1, [sp, #32]
   35ce4:	mvn	r1, #0
   35ce8:	str	r1, [sp, #28]
   35cec:	str	r1, [sp, #24]
   35cf0:	str	lr, [sp, #16]
   35cf4:	ldr	r1, [fp, #8]
   35cf8:	and	r1, r1, #32
   35cfc:	str	r1, [sp, #12]
   35d00:	ldr	r1, [fp, #-16]
   35d04:	cmp	r1, r0
   35d08:	beq	35d18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   35d0c:	ldr	r0, [fp, #-16]
   35d10:	ldr	r0, [r0]
   35d14:	str	r0, [sp, #24]
   35d18:	ldr	r0, [sp, #24]
   35d1c:	str	r0, [sp, #20]
   35d20:	ldr	r0, [fp, #8]
   35d24:	bic	r0, r0, #224	; 0xe0
   35d28:	str	r0, [fp, #8]
   35d2c:	ldr	r0, [fp, #8]
   35d30:	cmp	r0, #0
   35d34:	str	r0, [sp, #8]
   35d38:	beq	35d50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   35d3c:	b	35d40 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x384>
   35d40:	ldr	r0, [sp, #8]
   35d44:	cmp	r0, #1
   35d48:	beq	35d80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   35d4c:	b	35db0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f4>
   35d50:	ldr	r0, [pc, #1140]	; 361cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x810>
   35d54:	add	r0, pc, r0
   35d58:	ldr	r1, [pc, #1136]	; 361d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x814>
   35d5c:	add	r1, pc, r1
   35d60:	ldr	r2, [sp, #12]
   35d64:	cmp	r2, #0
   35d68:	movw	r2, #0
   35d6c:	movne	r2, #1
   35d70:	tst	r2, #1
   35d74:	movne	r1, r0
   35d78:	str	r1, [sp, #16]
   35d7c:	b	35dbc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   35d80:	ldr	r0, [pc, #1084]	; 361c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x808>
   35d84:	add	r0, pc, r0
   35d88:	ldr	r1, [pc, #1080]	; 361c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x80c>
   35d8c:	add	r1, pc, r1
   35d90:	ldr	r2, [sp, #12]
   35d94:	cmp	r2, #0
   35d98:	movw	r2, #0
   35d9c:	movne	r2, #1
   35da0:	tst	r2, #1
   35da4:	movne	r1, r0
   35da8:	str	r1, [sp, #16]
   35dac:	b	35dbc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x400>
   35db0:	movw	r0, #3
   35db4:	str	r0, [fp, #-20]	; 0xffffffec
   35db8:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   35dbc:	ldr	r0, [fp, #-12]
   35dc0:	movw	r1, #0
   35dc4:	cmp	r0, r1
   35dc8:	beq	35de8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   35dcc:	ldr	r0, [fp, #-12]
   35dd0:	ldr	r0, [r0]
   35dd4:	cmp	r0, #0
   35dd8:	bls	35de8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x42c>
   35ddc:	ldr	r0, [fp, #-12]
   35de0:	ldr	r0, [r0]
   35de4:	str	r0, [sp, #28]
   35de8:	b	35dec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   35dec:	ldr	r0, [sp, #28]
   35df0:	cmp	r0, #0
   35df4:	bls	3603c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x680>
   35df8:	movw	r0, #0
   35dfc:	str	r0, [fp, #-24]	; 0xffffffe8
   35e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35e04:	cmp	r0, #4
   35e08:	bcs	35fa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5e4>
   35e0c:	ldr	r0, [sp, #24]
   35e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35e14:	cmp	r0, r1
   35e18:	bne	35e38 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x47c>
   35e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35e20:	str	r0, [fp, #-28]	; 0xffffffe4
   35e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35e28:	ldr	r1, [sp, #24]
   35e2c:	sub	r0, r1, r0
   35e30:	str	r0, [sp, #24]
   35e34:	b	36094 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   35e38:	ldr	r0, [sp, #16]
   35e3c:	ldr	r1, [fp, #-8]
   35e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35e44:	add	r1, r1, r2
   35e48:	ldrb	r1, [r1]
   35e4c:	add	r0, r0, r1
   35e50:	ldrb	r0, [r0]
   35e54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35e58:	sub	r2, fp, #32
   35e5c:	add	r1, r2, r1
   35e60:	strb	r0, [r1]
   35e64:	and	r0, r0, #255	; 0xff
   35e68:	cmp	r0, #64	; 0x40
   35e6c:	blt	35f8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d0>
   35e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35e74:	sub	r1, fp, #32
   35e78:	add	r0, r1, r0
   35e7c:	ldrb	r0, [r0]
   35e80:	cmp	r0, #65	; 0x41
   35e84:	bne	35eb4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4f8>
   35e88:	ldr	r0, [fp, #-8]
   35e8c:	add	r0, r0, #1
   35e90:	str	r0, [fp, #-8]
   35e94:	ldr	r0, [sp, #24]
   35e98:	mvn	r1, #0
   35e9c:	add	r0, r0, r1
   35ea0:	str	r0, [sp, #24]
   35ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35ea8:	add	r0, r0, r1
   35eac:	str	r0, [fp, #-24]	; 0xffffffe8
   35eb0:	b	35f90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   35eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35eb8:	str	r0, [fp, #-28]	; 0xffffffe4
   35ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35ec0:	sub	r1, fp, #32
   35ec4:	add	r0, r1, r0
   35ec8:	ldrb	r0, [r0]
   35ecc:	cmp	r0, #66	; 0x42
   35ed0:	bne	35f78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   35ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35ed8:	add	r0, r0, #1
   35edc:	str	r0, [fp, #-24]	; 0xffffffe8
   35ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35ee4:	ldr	r1, [sp, #24]
   35ee8:	cmp	r0, r1
   35eec:	movw	r0, #0
   35ef0:	str	r0, [sp, #4]
   35ef4:	bcs	35f0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x550>
   35ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35efc:	cmp	r0, #8
   35f00:	movw	r0, #0
   35f04:	movcc	r0, #1
   35f08:	str	r0, [sp, #4]
   35f0c:	ldr	r0, [sp, #4]
   35f10:	tst	r0, #1
   35f14:	beq	35f74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   35f18:	ldr	r0, [sp, #16]
   35f1c:	ldr	r1, [fp, #-8]
   35f20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f24:	add	r1, r1, r2
   35f28:	ldrb	r1, [r1]
   35f2c:	add	r0, r0, r1
   35f30:	ldrb	r0, [r0]
   35f34:	cmp	r0, #66	; 0x42
   35f38:	beq	35f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   35f3c:	ldr	r0, [sp, #16]
   35f40:	ldr	r1, [fp, #-8]
   35f44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35f48:	add	r1, r1, r2
   35f4c:	ldrb	r1, [r1]
   35f50:	add	r0, r0, r1
   35f54:	ldrb	r0, [r0]
   35f58:	cmp	r0, #65	; 0x41
   35f5c:	beq	35f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5a8>
   35f60:	b	35f74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5b8>
   35f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35f68:	add	r0, r0, #1
   35f6c:	str	r0, [fp, #-24]	; 0xffffffe8
   35f70:	b	35ee0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x524>
   35f74:	b	35f78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   35f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35f7c:	ldr	r1, [sp, #24]
   35f80:	sub	r0, r1, r0
   35f84:	str	r0, [sp, #24]
   35f88:	b	36094 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d8>
   35f8c:	b	35f90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   35f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35f94:	add	r0, r0, #1
   35f98:	str	r0, [fp, #-24]	; 0xffffffe8
   35f9c:	b	35e00 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x444>
   35fa0:	ldr	r0, [sp, #28]
   35fa4:	cmp	r0, #3
   35fa8:	bcs	35fb0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5f4>
   35fac:	b	361b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   35fb0:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   35fb4:	lsl	r0, r0, #2
   35fb8:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   35fbc:	asr	r1, r1, #4
   35fc0:	orr	r0, r0, r1
   35fc4:	ldr	r1, [fp, #-4]
   35fc8:	strb	r0, [r1]
   35fcc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   35fd0:	lsl	r0, r0, #4
   35fd4:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   35fd8:	asr	r1, r1, #2
   35fdc:	orr	r0, r0, r1
   35fe0:	ldr	r1, [fp, #-4]
   35fe4:	strb	r0, [r1, #1]
   35fe8:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   35fec:	lsl	r0, r0, #6
   35ff0:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   35ff4:	orr	r0, r0, r1
   35ff8:	ldr	r1, [fp, #-4]
   35ffc:	strb	r0, [r1, #2]
   36000:	ldr	r0, [fp, #-4]
   36004:	add	r0, r0, #3
   36008:	str	r0, [fp, #-4]
   3600c:	ldr	r0, [fp, #-8]
   36010:	add	r0, r0, #4
   36014:	str	r0, [fp, #-8]
   36018:	ldr	r0, [sp, #28]
   3601c:	sub	r0, r0, #3
   36020:	str	r0, [sp, #28]
   36024:	ldr	r0, [sp, #24]
   36028:	sub	r0, r0, #4
   3602c:	str	r0, [sp, #24]
   36030:	ldr	r0, [sp, #24]
   36034:	str	r0, [sp, #20]
   36038:	b	35dec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   3603c:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   36040:	ldr	r0, [fp, #-12]
   36044:	movw	r1, #0
   36048:	cmp	r0, r1
   3604c:	beq	36064 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a8>
   36050:	ldr	r0, [fp, #-4]
   36054:	ldr	r1, [sp, #32]
   36058:	sub	r0, r0, r1
   3605c:	ldr	r1, [fp, #-12]
   36060:	str	r0, [r1]
   36064:	ldr	r0, [fp, #-16]
   36068:	movw	r1, #0
   3606c:	cmp	r0, r1
   36070:	beq	36088 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6cc>
   36074:	ldr	r0, [sp, #20]
   36078:	ldr	r1, [fp, #-16]
   3607c:	ldr	r2, [r1]
   36080:	sub	r0, r2, r0
   36084:	str	r0, [r1]
   36088:	ldr	r0, [fp, #-20]	; 0xffffffec
   3608c:	mov	sp, fp
   36090:	pop	{fp, pc}
   36094:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36098:	cmp	r0, #0
   3609c:	str	r0, [sp]
   360a0:	beq	360c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x70c>
   360a4:	b	360a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6ec>
   360a8:	ldr	r0, [sp]
   360ac:	cmp	r0, #2
   360b0:	beq	360cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x710>
   360b4:	b	360b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6fc>
   360b8:	ldr	r0, [sp]
   360bc:	cmp	r0, #3
   360c0:	beq	36120 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x764>
   360c4:	b	36190 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7d4>
   360c8:	b	3619c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   360cc:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   360d0:	lsl	r0, r0, #4
   360d4:	and	r0, r0, #255	; 0xff
   360d8:	cmp	r0, #0
   360dc:	beq	360e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x728>
   360e0:	b	361a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   360e4:	ldr	r0, [sp, #28]
   360e8:	cmp	r0, #1
   360ec:	bcs	360f4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x738>
   360f0:	b	361b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   360f4:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   360f8:	lsl	r0, r0, #2
   360fc:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36100:	asr	r1, r1, #4
   36104:	orr	r0, r0, r1
   36108:	ldr	r1, [fp, #-4]
   3610c:	strb	r0, [r1]
   36110:	ldr	r0, [fp, #-4]
   36114:	add	r0, r0, #1
   36118:	str	r0, [fp, #-4]
   3611c:	b	3619c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   36120:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   36124:	lsl	r0, r0, #6
   36128:	and	r0, r0, #255	; 0xff
   3612c:	cmp	r0, #0
   36130:	beq	36138 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x77c>
   36134:	b	361a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7ec>
   36138:	ldr	r0, [sp, #28]
   3613c:	cmp	r0, #2
   36140:	bcs	36148 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x78c>
   36144:	b	361b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f8>
   36148:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   3614c:	lsl	r0, r0, #2
   36150:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   36154:	asr	r1, r1, #4
   36158:	orr	r0, r0, r1
   3615c:	ldr	r1, [fp, #-4]
   36160:	strb	r0, [r1]
   36164:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   36168:	lsl	r0, r0, #4
   3616c:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   36170:	asr	r1, r1, #2
   36174:	orr	r0, r0, r1
   36178:	ldr	r1, [fp, #-4]
   3617c:	strb	r0, [r1, #1]
   36180:	ldr	r0, [fp, #-4]
   36184:	add	r0, r0, #2
   36188:	str	r0, [fp, #-4]
   3618c:	b	3619c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e0>
   36190:	movw	r0, #4
   36194:	str	r0, [fp, #-20]	; 0xffffffec
   36198:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   3619c:	ldr	r0, [sp, #24]
   361a0:	str	r0, [sp, #20]
   361a4:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   361a8:	movw	r0, #5
   361ac:	str	r0, [fp, #-20]	; 0xffffffec
   361b0:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   361b4:	movw	r0, #1
   361b8:	str	r0, [fp, #-20]	; 0xffffffec
   361bc:	b	36040 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   361c0:	andeq	r5, r1, fp, lsr #22
   361c4:	andeq	r5, r1, r7, ror #26
   361c8:	andeq	r5, r1, pc, asr fp
   361cc:	muleq	r1, r7, ip
   361d0:	andeq	r5, r1, pc, lsl #21

000361d4 <flatcc_json_parser_build_string@@Base>:
   361d4:	push	{fp, lr}
   361d8:	mov	fp, sp
   361dc:	sub	sp, sp, #40	; 0x28
   361e0:	str	r0, [fp, #-8]
   361e4:	str	r1, [fp, #-12]
   361e8:	str	r2, [fp, #-16]
   361ec:	str	r3, [sp, #20]
   361f0:	ldr	r0, [fp, #-8]
   361f4:	ldr	r1, [fp, #-12]
   361f8:	ldr	r2, [fp, #-16]
   361fc:	bl	34e30 <flatcc_json_parser_float@@Base+0x2d8>
   36200:	str	r0, [fp, #-12]
   36204:	ldr	r0, [fp, #-8]
   36208:	ldr	r1, [fp, #-12]
   3620c:	str	r1, [sp, #12]
   36210:	ldr	r2, [fp, #-16]
   36214:	bl	331bc <flatcc_json_parser_string_part@@Base>
   36218:	str	r0, [fp, #-12]
   3621c:	ldr	r0, [fp, #-12]
   36220:	ldr	r1, [fp, #-16]
   36224:	cmp	r0, r1
   36228:	beq	36264 <flatcc_json_parser_build_string@@Base+0x90>
   3622c:	ldr	r0, [fp, #-12]
   36230:	ldrb	r0, [r0]
   36234:	cmp	r0, #34	; 0x22
   36238:	bne	36264 <flatcc_json_parser_build_string@@Base+0x90>
   3623c:	ldr	r0, [fp, #-8]
   36240:	ldr	r0, [r0]
   36244:	ldr	r1, [sp, #12]
   36248:	ldr	r2, [fp, #-12]
   3624c:	ldr	r3, [sp, #12]
   36250:	sub	r2, r2, r3
   36254:	bl	2dbbc <flatcc_builder_create_string@@Base>
   36258:	ldr	r1, [sp, #20]
   3625c:	str	r0, [r1]
   36260:	b	363a4 <flatcc_json_parser_build_string@@Base+0x1d0>
   36264:	ldr	r0, [fp, #-8]
   36268:	ldr	r0, [r0]
   3626c:	bl	2b6b8 <flatcc_builder_start_string@@Base>
   36270:	cmp	r0, #0
   36274:	bne	362a0 <flatcc_json_parser_build_string@@Base+0xcc>
   36278:	ldr	r0, [fp, #-8]
   3627c:	ldr	r0, [r0]
   36280:	ldr	r1, [sp, #12]
   36284:	ldr	r2, [fp, #-12]
   36288:	ldr	r3, [sp, #12]
   3628c:	sub	r2, r2, r3
   36290:	bl	2af10 <flatcc_builder_append_string@@Base>
   36294:	movw	r1, #0
   36298:	cmp	r1, r0
   3629c:	bne	362a4 <flatcc_json_parser_build_string@@Base+0xd0>
   362a0:	b	363bc <flatcc_json_parser_build_string@@Base+0x1e8>
   362a4:	b	362a8 <flatcc_json_parser_build_string@@Base+0xd4>
   362a8:	ldr	r0, [fp, #-12]
   362ac:	ldr	r1, [fp, #-16]
   362b0:	cmp	r0, r1
   362b4:	movw	r0, #0
   362b8:	str	r0, [sp, #8]
   362bc:	beq	362d8 <flatcc_json_parser_build_string@@Base+0x104>
   362c0:	ldr	r0, [fp, #-12]
   362c4:	ldrb	r0, [r0]
   362c8:	cmp	r0, #34	; 0x22
   362cc:	movw	r0, #0
   362d0:	movne	r0, #1
   362d4:	str	r0, [sp, #8]
   362d8:	ldr	r0, [sp, #8]
   362dc:	tst	r0, #1
   362e0:	beq	36390 <flatcc_json_parser_build_string@@Base+0x1bc>
   362e4:	add	r3, sp, #16
   362e8:	ldr	r0, [fp, #-8]
   362ec:	ldr	r1, [fp, #-12]
   362f0:	ldr	r2, [fp, #-16]
   362f4:	bl	334bc <flatcc_json_parser_string_escape@@Base>
   362f8:	add	r1, sp, #16
   362fc:	str	r0, [fp, #-12]
   36300:	ldr	r0, [fp, #-8]
   36304:	ldr	r0, [r0]
   36308:	add	r1, r1, #1
   3630c:	ldrb	r2, [sp, #16]
   36310:	bl	2af10 <flatcc_builder_append_string@@Base>
   36314:	movw	r1, #0
   36318:	cmp	r1, r0
   3631c:	bne	36324 <flatcc_json_parser_build_string@@Base+0x150>
   36320:	b	363bc <flatcc_json_parser_build_string@@Base+0x1e8>
   36324:	ldr	r0, [fp, #-16]
   36328:	ldr	r1, [fp, #-8]
   3632c:	ldr	r2, [fp, #-12]
   36330:	str	r2, [sp, #12]
   36334:	ldr	r3, [fp, #-16]
   36338:	str	r0, [sp, #4]
   3633c:	mov	r0, r1
   36340:	mov	r1, r2
   36344:	mov	r2, r3
   36348:	bl	331bc <flatcc_json_parser_string_part@@Base>
   3634c:	str	r0, [fp, #-12]
   36350:	ldr	r1, [sp, #4]
   36354:	cmp	r1, r0
   36358:	beq	3638c <flatcc_json_parser_build_string@@Base+0x1b8>
   3635c:	ldr	r0, [fp, #-8]
   36360:	ldr	r0, [r0]
   36364:	ldr	r1, [sp, #12]
   36368:	ldr	r2, [fp, #-12]
   3636c:	ldr	r3, [sp, #12]
   36370:	sub	r2, r2, r3
   36374:	bl	2af10 <flatcc_builder_append_string@@Base>
   36378:	movw	r1, #0
   3637c:	cmp	r1, r0
   36380:	bne	36388 <flatcc_json_parser_build_string@@Base+0x1b4>
   36384:	b	363bc <flatcc_json_parser_build_string@@Base+0x1e8>
   36388:	b	3638c <flatcc_json_parser_build_string@@Base+0x1b8>
   3638c:	b	362a8 <flatcc_json_parser_build_string@@Base+0xd4>
   36390:	ldr	r0, [fp, #-8]
   36394:	ldr	r0, [r0]
   36398:	bl	2ddc4 <flatcc_builder_end_string@@Base>
   3639c:	ldr	r1, [sp, #20]
   363a0:	str	r0, [r1]
   363a4:	ldr	r0, [fp, #-8]
   363a8:	ldr	r1, [fp, #-12]
   363ac:	ldr	r2, [fp, #-16]
   363b0:	bl	34ea0 <flatcc_json_parser_float@@Base+0x348>
   363b4:	str	r0, [fp, #-4]
   363b8:	b	363d0 <flatcc_json_parser_build_string@@Base+0x1fc>
   363bc:	ldr	r0, [sp, #20]
   363c0:	movw	r1, #0
   363c4:	str	r1, [r0]
   363c8:	ldr	r0, [fp, #-12]
   363cc:	str	r0, [fp, #-4]
   363d0:	ldr	r0, [fp, #-4]
   363d4:	mov	sp, fp
   363d8:	pop	{fp, pc}

000363dc <flatcc_json_parser_prepare_unions@@Base>:
   363dc:	push	{fp, lr}
   363e0:	mov	fp, sp
   363e4:	sub	sp, sp, #32
   363e8:	ldr	ip, [fp, #8]
   363ec:	str	r0, [fp, #-8]
   363f0:	str	r1, [fp, #-12]
   363f4:	str	r2, [sp, #16]
   363f8:	str	r3, [sp, #12]
   363fc:	ldr	r0, [fp, #-8]
   36400:	ldr	r0, [r0]
   36404:	ldr	r1, [sp, #12]
   36408:	sub	r1, r1, #1
   3640c:	movw	r2, #24
   36410:	mul	r1, r1, r2
   36414:	add	r1, r1, #32
   36418:	str	ip, [sp, #4]
   3641c:	bl	29564 <flatcc_builder_enter_user_frame@@Base>
   36420:	ldr	r1, [fp, #8]
   36424:	str	r0, [r1]
   36428:	cmp	r0, #0
   3642c:	bne	3644c <flatcc_json_parser_prepare_unions@@Base+0x70>
   36430:	ldr	r0, [fp, #-8]
   36434:	ldr	r1, [fp, #-12]
   36438:	ldr	r2, [sp, #16]
   3643c:	movw	r3, #33	; 0x21
   36440:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36444:	str	r0, [fp, #-4]
   36448:	b	36478 <flatcc_json_parser_prepare_unions@@Base+0x9c>
   3644c:	ldr	r0, [fp, #-8]
   36450:	ldr	r0, [r0]
   36454:	ldr	r1, [fp, #8]
   36458:	ldr	r1, [r1]
   3645c:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36460:	str	r0, [sp, #8]
   36464:	ldr	r0, [sp, #12]
   36468:	ldr	r1, [sp, #8]
   3646c:	str	r0, [r1]
   36470:	ldr	r0, [fp, #-12]
   36474:	str	r0, [fp, #-4]
   36478:	ldr	r0, [fp, #-4]
   3647c:	mov	sp, fp
   36480:	pop	{fp, pc}

00036484 <flatcc_json_parser_finalize_unions@@Base>:
   36484:	push	{fp, lr}
   36488:	mov	fp, sp
   3648c:	sub	sp, sp, #24
   36490:	str	r0, [fp, #-4]
   36494:	str	r1, [fp, #-8]
   36498:	str	r2, [sp, #12]
   3649c:	str	r3, [sp, #8]
   364a0:	ldr	r0, [fp, #-4]
   364a4:	ldr	r0, [r0]
   364a8:	ldr	r1, [sp, #8]
   364ac:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   364b0:	str	r0, [sp, #4]
   364b4:	ldr	r0, [sp, #4]
   364b8:	ldr	r0, [r0, #4]
   364bc:	cmp	r0, #0
   364c0:	beq	364dc <flatcc_json_parser_finalize_unions@@Base+0x58>
   364c4:	ldr	r0, [fp, #-4]
   364c8:	ldr	r1, [fp, #-8]
   364cc:	ldr	r2, [sp, #12]
   364d0:	movw	r3, #27
   364d4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   364d8:	str	r0, [fp, #-8]
   364dc:	ldr	r0, [fp, #-4]
   364e0:	ldr	r0, [r0]
   364e4:	ldr	r1, [sp, #8]
   364e8:	bl	296d8 <flatcc_builder_exit_user_frame_at@@Base>
   364ec:	ldr	r1, [fp, #-8]
   364f0:	str	r0, [sp]
   364f4:	mov	r0, r1
   364f8:	mov	sp, fp
   364fc:	pop	{fp, pc}

00036500 <flatcc_json_parser_union@@Base>:
   36500:	push	{r4, sl, fp, lr}
   36504:	add	fp, sp, #8
   36508:	sub	sp, sp, #56	; 0x38
   3650c:	ldr	ip, [fp, #16]
   36510:	ldr	lr, [fp, #12]
   36514:	ldr	r4, [fp, #8]
   36518:	str	r0, [fp, #-16]
   3651c:	str	r1, [fp, #-20]	; 0xffffffec
   36520:	str	r2, [fp, #-24]	; 0xffffffe8
   36524:	str	r3, [fp, #-28]	; 0xffffffe4
   36528:	strh	r4, [fp, #-30]	; 0xffffffe2
   3652c:	ldr	r0, [fp, #-16]
   36530:	ldr	r0, [r0]
   36534:	ldr	r1, [fp, #12]
   36538:	str	ip, [sp, #12]
   3653c:	str	lr, [sp, #8]
   36540:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36544:	str	r0, [sp, #28]
   36548:	ldr	r0, [sp, #28]
   3654c:	add	r0, r0, #8
   36550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36554:	movw	r2, #24
   36558:	mul	r1, r1, r2
   3655c:	add	r0, r0, r1
   36560:	str	r0, [sp, #24]
   36564:	ldr	r0, [sp, #24]
   36568:	ldr	r0, [r0]
   3656c:	movw	r1, #0
   36570:	cmp	r0, r1
   36574:	beq	36594 <flatcc_json_parser_union@@Base+0x94>
   36578:	ldr	r0, [fp, #-16]
   3657c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36580:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36584:	movw	r3, #28
   36588:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3658c:	str	r0, [fp, #-12]
   36590:	b	366e0 <flatcc_json_parser_union@@Base+0x1e0>
   36594:	ldr	r0, [sp, #24]
   36598:	ldrsb	r0, [r0, #12]
   3659c:	cmp	r0, #0
   365a0:	bne	365f4 <flatcc_json_parser_union@@Base+0xf4>
   365a4:	ldr	r0, [sp, #28]
   365a8:	ldr	r1, [r0, #4]
   365ac:	add	r1, r1, #1
   365b0:	str	r1, [r0, #4]
   365b4:	ldr	r0, [fp, #-16]
   365b8:	ldr	r0, [r0, #12]
   365bc:	ldr	r1, [sp, #24]
   365c0:	str	r0, [r1, #8]
   365c4:	ldr	r0, [fp, #-16]
   365c8:	ldr	r0, [r0, #4]
   365cc:	ldr	r1, [sp, #24]
   365d0:	str	r0, [r1, #4]
   365d4:	ldr	r0, [fp, #-16]
   365d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   365dc:	ldr	r2, [sp, #24]
   365e0:	str	r1, [r2]
   365e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   365e8:	bl	3433c <flatcc_json_parser_generic_json@@Base>
   365ec:	str	r0, [fp, #-20]	; 0xffffffec
   365f0:	b	366d8 <flatcc_json_parser_union@@Base+0x1d8>
   365f4:	ldr	r0, [sp, #24]
   365f8:	ldrb	r0, [r0, #13]
   365fc:	strb	r0, [sp, #16]
   36600:	ldr	r0, [sp, #24]
   36604:	ldrb	r0, [r0, #13]
   36608:	cmp	r0, #0
   3660c:	bne	3662c <flatcc_json_parser_union@@Base+0x12c>
   36610:	ldr	r0, [fp, #-16]
   36614:	ldr	r1, [fp, #-20]	; 0xffffffec
   36618:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3661c:	movw	r3, #25
   36620:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36624:	str	r0, [fp, #-12]
   36628:	b	366e0 <flatcc_json_parser_union@@Base+0x1e0>
   3662c:	ldr	r0, [sp, #28]
   36630:	ldr	r1, [r0, #4]
   36634:	mvn	r2, #0
   36638:	add	r1, r1, r2
   3663c:	str	r1, [r0, #4]
   36640:	ldr	r0, [fp, #16]
   36644:	ldr	r1, [fp, #-16]
   36648:	ldr	r2, [fp, #-20]	; 0xffffffec
   3664c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36650:	ldr	ip, [sp, #24]
   36654:	ldrb	ip, [ip, #13]
   36658:	add	lr, sp, #16
   3665c:	add	lr, lr, #4
   36660:	str	r0, [sp, #4]
   36664:	mov	r0, r1
   36668:	mov	r1, r2
   3666c:	mov	r2, r3
   36670:	and	r3, ip, #255	; 0xff
   36674:	str	lr, [sp]
   36678:	ldr	ip, [sp, #4]
   3667c:	blx	ip
   36680:	str	r0, [fp, #-20]	; 0xffffffec
   36684:	ldr	r0, [fp, #-20]	; 0xffffffec
   36688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3668c:	cmp	r0, r1
   36690:	beq	366d4 <flatcc_json_parser_union@@Base+0x1d4>
   36694:	ldr	r0, [fp, #-16]
   36698:	ldr	r0, [r0]
   3669c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   366a0:	ldr	r2, [sp, #16]
   366a4:	ldr	r3, [sp, #20]
   366a8:	bl	2ce1c <flatcc_builder_table_add_union@@Base>
   366ac:	cmp	r0, #0
   366b0:	beq	366d0 <flatcc_json_parser_union@@Base+0x1d0>
   366b4:	ldr	r0, [fp, #-16]
   366b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   366bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   366c0:	movw	r3, #28
   366c4:	bl	33158 <flatcc_json_parser_set_error@@Base>
   366c8:	str	r0, [fp, #-12]
   366cc:	b	366e0 <flatcc_json_parser_union@@Base+0x1e0>
   366d0:	b	366d4 <flatcc_json_parser_union@@Base+0x1d4>
   366d4:	b	366d8 <flatcc_json_parser_union@@Base+0x1d8>
   366d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   366dc:	str	r0, [fp, #-12]
   366e0:	ldr	r0, [fp, #-12]
   366e4:	sub	sp, fp, #8
   366e8:	pop	{r4, sl, fp, pc}

000366ec <flatcc_json_parser_union_type@@Base>:
   366ec:	push	{r4, r5, fp, lr}
   366f0:	add	fp, sp, #8
   366f4:	sub	sp, sp, #80	; 0x50
   366f8:	ldr	ip, [fp, #20]
   366fc:	ldr	lr, [fp, #16]
   36700:	ldr	r4, [fp, #12]
   36704:	ldr	r5, [fp, #8]
   36708:	str	r0, [fp, #-16]
   3670c:	str	r1, [fp, #-20]	; 0xffffffec
   36710:	str	r2, [fp, #-24]	; 0xffffffe8
   36714:	str	r3, [fp, #-28]	; 0xffffffe4
   36718:	strh	r5, [fp, #-30]	; 0xffffffe2
   3671c:	ldr	r0, [fp, #-16]
   36720:	ldr	r0, [r0]
   36724:	ldr	r1, [fp, #12]
   36728:	str	ip, [sp, #24]
   3672c:	str	lr, [sp, #20]
   36730:	str	r4, [sp, #16]
   36734:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36738:	str	r0, [fp, #-36]	; 0xffffffdc
   3673c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36740:	add	r0, r0, #8
   36744:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36748:	movw	r2, #24
   3674c:	mul	r1, r1, r2
   36750:	add	r0, r0, r1
   36754:	str	r0, [fp, #-40]	; 0xffffffd8
   36758:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3675c:	ldrsb	r0, [r0, #12]
   36760:	cmp	r0, #0
   36764:	beq	36784 <flatcc_json_parser_union_type@@Base+0x98>
   36768:	ldr	r0, [fp, #-16]
   3676c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36774:	movw	r3, #28
   36778:	bl	33158 <flatcc_json_parser_set_error@@Base>
   3677c:	str	r0, [fp, #-12]
   36780:	b	36978 <flatcc_json_parser_union_type@@Base+0x28c>
   36784:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36788:	movw	r1, #1
   3678c:	strb	r1, [r0, #12]
   36790:	ldr	r0, [fp, #-16]
   36794:	ldr	r1, [fp, #-20]	; 0xffffffec
   36798:	str	r1, [sp, #36]	; 0x24
   3679c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   367a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   367a4:	add	r3, r3, #13
   367a8:	bl	36990 <flatcc_json_parser_union_type@@Base+0x2a4>
   367ac:	str	r0, [fp, #-20]	; 0xffffffec
   367b0:	ldr	r0, [sp, #36]	; 0x24
   367b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   367b8:	cmp	r0, r1
   367bc:	bne	367e4 <flatcc_json_parser_union_type@@Base+0xf8>
   367c0:	ldr	r0, [fp, #-16]
   367c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   367c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   367cc:	ldr	r3, [fp, #16]
   367d0:	ldr	ip, [fp, #-40]	; 0xffffffd8
   367d4:	add	ip, ip, #13
   367d8:	str	ip, [sp]
   367dc:	bl	36a6c <flatcc_json_parser_union_type@@Base+0x380>
   367e0:	str	r0, [fp, #-20]	; 0xffffffec
   367e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   367e8:	ldr	r0, [r0]
   367ec:	movw	r1, #0
   367f0:	cmp	r0, r1
   367f4:	bne	3682c <flatcc_json_parser_union_type@@Base+0x140>
   367f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   367fc:	ldrb	r0, [r0, #13]
   36800:	cmp	r0, #0
   36804:	movw	r0, #0
   36808:	movne	r0, #1
   3680c:	and	r0, r0, #1
   36810:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36814:	ldr	r2, [r1, #4]
   36818:	add	r0, r2, r0
   3681c:	str	r0, [r1, #4]
   36820:	ldr	r0, [fp, #-20]	; 0xffffffec
   36824:	str	r0, [fp, #-12]
   36828:	b	36978 <flatcc_json_parser_union_type@@Base+0x28c>
   3682c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36830:	ldr	r0, [r0, #4]
   36834:	cmp	r0, #0
   36838:	beq	36840 <flatcc_json_parser_union_type@@Base+0x154>
   3683c:	b	36860 <flatcc_json_parser_union_type@@Base+0x174>
   36840:	ldr	r0, [pc, #316]	; 36984 <flatcc_json_parser_union_type@@Base+0x298>
   36844:	add	r0, pc, r0
   36848:	ldr	r1, [pc, #312]	; 36988 <flatcc_json_parser_union_type@@Base+0x29c>
   3684c:	add	r1, pc, r1
   36850:	ldr	r2, [pc, #308]	; 3698c <flatcc_json_parser_union_type@@Base+0x2a0>
   36854:	add	r3, pc, r2
   36858:	movw	r2, #965	; 0x3c5
   3685c:	bl	14f08 <__assert_fail@plt>
   36860:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36864:	ldr	r1, [r0, #4]
   36868:	mvn	r2, #0
   3686c:	add	r1, r1, r2
   36870:	str	r1, [r0, #4]
   36874:	ldr	r0, [fp, #-16]
   36878:	ldr	r0, [r0, #12]
   3687c:	str	r0, [sp, #32]
   36880:	ldr	r0, [fp, #-16]
   36884:	ldr	r0, [r0, #4]
   36888:	str	r0, [sp, #28]
   3688c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36890:	ldr	r0, [r0, #8]
   36894:	ldr	r1, [fp, #-16]
   36898:	str	r0, [r1, #12]
   3689c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   368a0:	ldr	r0, [r0, #4]
   368a4:	ldr	r1, [fp, #-16]
   368a8:	str	r0, [r1, #4]
   368ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   368b0:	ldrb	r0, [r0, #13]
   368b4:	strb	r0, [sp, #40]	; 0x28
   368b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   368bc:	ldr	r1, [fp, #20]
   368c0:	ldr	r2, [fp, #-16]
   368c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368c8:	ldr	r3, [r3]
   368cc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   368d0:	ldr	lr, [fp, #-40]	; 0xffffffd8
   368d4:	ldrb	lr, [lr, #13]
   368d8:	add	r4, sp, #40	; 0x28
   368dc:	add	r4, r4, #4
   368e0:	str	r0, [sp, #12]
   368e4:	mov	r0, r2
   368e8:	str	r1, [sp, #8]
   368ec:	mov	r1, r3
   368f0:	mov	r2, ip
   368f4:	and	r3, lr, #255	; 0xff
   368f8:	str	r4, [sp]
   368fc:	ldr	ip, [sp, #8]
   36900:	blx	ip
   36904:	ldr	r1, [sp, #12]
   36908:	cmp	r1, r0
   3690c:	bne	3691c <flatcc_json_parser_union_type@@Base+0x230>
   36910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36914:	str	r0, [fp, #-12]
   36918:	b	36978 <flatcc_json_parser_union_type@@Base+0x28c>
   3691c:	ldr	r0, [fp, #-16]
   36920:	ldr	r0, [r0]
   36924:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   36928:	ldr	r2, [sp, #40]	; 0x28
   3692c:	ldr	r3, [sp, #44]	; 0x2c
   36930:	bl	2ce1c <flatcc_builder_table_add_union@@Base>
   36934:	cmp	r0, #0
   36938:	beq	36958 <flatcc_json_parser_union_type@@Base+0x26c>
   3693c:	ldr	r0, [fp, #-16]
   36940:	ldr	r1, [fp, #-20]	; 0xffffffec
   36944:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36948:	movw	r3, #28
   3694c:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36950:	str	r0, [fp, #-12]
   36954:	b	36978 <flatcc_json_parser_union_type@@Base+0x28c>
   36958:	ldr	r0, [sp, #32]
   3695c:	ldr	r1, [fp, #-16]
   36960:	str	r0, [r1, #12]
   36964:	ldr	r0, [sp, #28]
   36968:	ldr	r1, [fp, #-16]
   3696c:	str	r0, [r1, #4]
   36970:	ldr	r0, [fp, #-20]	; 0xffffffec
   36974:	str	r0, [fp, #-12]
   36978:	ldr	r0, [fp, #-12]
   3697c:	sub	sp, fp, #8
   36980:	pop	{r4, r5, fp, pc}
   36984:	andeq	r4, r1, r2, lsr #13
   36988:	andeq	r4, r1, r9, lsr #13
   3698c:	andeq	r4, r1, r2, lsl #14
   36990:	push	{r4, r5, fp, lr}
   36994:	add	fp, sp, #8
   36998:	sub	sp, sp, #56	; 0x38
   3699c:	str	r0, [fp, #-16]
   369a0:	str	r1, [fp, #-20]	; 0xffffffec
   369a4:	str	r2, [fp, #-24]	; 0xffffffe8
   369a8:	str	r3, [fp, #-28]	; 0xffffffe4
   369ac:	mov	r0, #0
   369b0:	str	r0, [sp, #28]
   369b4:	str	r0, [sp, #24]
   369b8:	movw	r0, #0
   369bc:	str	r0, [sp, #20]
   369c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   369c4:	str	r0, [sp, #16]
   369c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   369cc:	movw	r1, #0
   369d0:	strb	r1, [r0]
   369d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   369d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   369dc:	cmp	r0, r1
   369e0:	bne	369f0 <flatcc_json_parser_union_type@@Base+0x304>
   369e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   369e8:	str	r0, [fp, #-12]
   369ec:	b	36a60 <flatcc_json_parser_union_type@@Base+0x374>
   369f0:	ldr	r0, [fp, #-16]
   369f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   369f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   369fc:	add	r3, sp, #20
   36a00:	add	ip, sp, #24
   36a04:	str	ip, [sp]
   36a08:	bl	3579c <flatcc_json_parser_integer@@Base>
   36a0c:	str	r0, [fp, #-20]	; 0xffffffec
   36a10:	ldr	r0, [fp, #-20]	; 0xffffffec
   36a14:	ldr	r1, [sp, #16]
   36a18:	cmp	r0, r1
   36a1c:	beq	36a58 <flatcc_json_parser_union_type@@Base+0x36c>
   36a20:	ldr	r0, [fp, #-16]
   36a24:	ldr	r1, [fp, #-20]	; 0xffffffec
   36a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36a2c:	ldr	r3, [sp, #20]
   36a30:	ldr	ip, [sp, #24]
   36a34:	ldr	lr, [sp, #28]
   36a38:	ldr	r4, [fp, #-28]	; 0xffffffe4
   36a3c:	mov	r5, sp
   36a40:	str	r4, [r5, #8]
   36a44:	str	lr, [r5, #4]
   36a48:	str	ip, [r5]
   36a4c:	bl	389a0 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   36a50:	str	r0, [fp, #-12]
   36a54:	b	36a60 <flatcc_json_parser_union_type@@Base+0x374>
   36a58:	ldr	r0, [fp, #-20]	; 0xffffffec
   36a5c:	str	r0, [fp, #-12]
   36a60:	ldr	r0, [fp, #-12]
   36a64:	sub	sp, fp, #8
   36a68:	pop	{r4, r5, fp, pc}
   36a6c:	push	{r4, r5, r6, sl, fp, lr}
   36a70:	add	fp, sp, #16
   36a74:	sub	sp, sp, #80	; 0x50
   36a78:	ldr	ip, [fp, #8]
   36a7c:	str	r0, [fp, #-24]	; 0xffffffe8
   36a80:	str	r1, [fp, #-28]	; 0xffffffe4
   36a84:	str	r2, [fp, #-32]	; 0xffffffe0
   36a88:	str	r3, [fp, #-36]	; 0xffffffdc
   36a8c:	movw	r0, #0
   36a90:	strb	r0, [fp, #-45]	; 0xffffffd3
   36a94:	ldr	r1, [fp, #8]
   36a98:	strb	r0, [r1]
   36a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36aa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36aa4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36aa8:	str	ip, [sp, #28]
   36aac:	bl	38a4c <flatcc_json_parser_struct_as_root@@Base+0x12d8>
   36ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   36ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36ab8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36abc:	cmp	r0, r1
   36ac0:	bne	36ad0 <flatcc_json_parser_union_type@@Base+0x3e4>
   36ac4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36ac8:	str	r0, [fp, #-20]	; 0xffffffec
   36acc:	b	36c44 <flatcc_json_parser_union_type@@Base+0x558>
   36ad0:	b	36ad4 <flatcc_json_parser_union_type@@Base+0x3e8>
   36ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36ad8:	str	r0, [fp, #-40]	; 0xffffffd8
   36adc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36ae0:	ldr	r0, [r0]
   36ae4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36ae8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36aec:	str	r2, [fp, #-44]	; 0xffffffd4
   36af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36af4:	str	r0, [sp, #24]
   36af8:	mov	r0, r1
   36afc:	mov	r1, r2
   36b00:	mov	r2, r3
   36b04:	add	r3, sp, #36	; 0x24
   36b08:	add	ip, sp, #40	; 0x28
   36b0c:	str	ip, [sp]
   36b10:	add	ip, sp, #32
   36b14:	str	ip, [sp, #4]
   36b18:	ldr	ip, [sp, #24]
   36b1c:	blx	ip
   36b20:	str	r0, [fp, #-28]	; 0xffffffe4
   36b24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36b28:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36b2c:	cmp	r0, r1
   36b30:	bne	36b40 <flatcc_json_parser_union_type@@Base+0x454>
   36b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36b38:	str	r0, [fp, #-20]	; 0xffffffec
   36b3c:	b	36c44 <flatcc_json_parser_union_type@@Base+0x558>
   36b40:	b	36b44 <flatcc_json_parser_union_type@@Base+0x458>
   36b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36b48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   36b4c:	cmp	r0, r1
   36b50:	movw	r0, #0
   36b54:	str	r0, [sp, #20]
   36b58:	bne	36b80 <flatcc_json_parser_union_type@@Base+0x494>
   36b5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36b60:	add	r1, r0, #4
   36b64:	str	r1, [fp, #-40]	; 0xffffffd8
   36b68:	ldr	r0, [r0, #4]
   36b6c:	movw	r1, #0
   36b70:	cmp	r0, r1
   36b74:	movw	r0, #0
   36b78:	movne	r0, #1
   36b7c:	str	r0, [sp, #20]
   36b80:	ldr	r0, [sp, #20]
   36b84:	tst	r0, #1
   36b88:	bne	36adc <flatcc_json_parser_union_type@@Base+0x3f0>
   36b8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   36b90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36b94:	cmp	r0, r1
   36b98:	bne	36bb8 <flatcc_json_parser_union_type@@Base+0x4cc>
   36b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36ba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36ba4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36ba8:	movw	r3, #23
   36bac:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36bb0:	str	r0, [fp, #-20]	; 0xffffffec
   36bb4:	b	36c44 <flatcc_json_parser_union_type@@Base+0x558>
   36bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36bbc:	mov	r1, r0
   36bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36bc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36bc8:	ldr	ip, [sp, #36]	; 0x24
   36bcc:	ldr	lr, [sp, #40]	; 0x28
   36bd0:	ldr	r4, [sp, #44]	; 0x2c
   36bd4:	mov	r5, sp
   36bd8:	sub	r6, fp, #45	; 0x2d
   36bdc:	str	r6, [r5, #8]
   36be0:	str	r4, [r5, #4]
   36be4:	str	lr, [r5]
   36be8:	str	r0, [sp, #16]
   36bec:	mov	r0, r2
   36bf0:	str	r1, [sp, #12]
   36bf4:	mov	r1, r3
   36bf8:	ldr	r2, [sp, #16]
   36bfc:	mov	r3, ip
   36c00:	bl	389a0 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   36c04:	ldr	r1, [sp, #12]
   36c08:	cmp	r1, r0
   36c0c:	bne	36c1c <flatcc_json_parser_union_type@@Base+0x530>
   36c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36c14:	str	r0, [fp, #-20]	; 0xffffffec
   36c18:	b	36c44 <flatcc_json_parser_union_type@@Base+0x558>
   36c1c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   36c20:	ldr	r1, [fp, #8]
   36c24:	ldrb	r2, [r1]
   36c28:	add	r0, r2, r0
   36c2c:	strb	r0, [r1]
   36c30:	ldr	r0, [sp, #32]
   36c34:	cmp	r0, #0
   36c38:	bne	36ad4 <flatcc_json_parser_union_type@@Base+0x3e8>
   36c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36c40:	str	r0, [fp, #-20]	; 0xffffffec
   36c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   36c48:	sub	sp, fp, #16
   36c4c:	pop	{r4, r5, r6, sl, fp, pc}

00036c50 <flatcc_json_parser_union_vector@@Base>:
   36c50:	push	{r4, sl, fp, lr}
   36c54:	add	fp, sp, #8
   36c58:	sub	sp, sp, #56	; 0x38
   36c5c:	ldr	ip, [fp, #16]
   36c60:	ldr	lr, [fp, #12]
   36c64:	ldr	r4, [fp, #8]
   36c68:	str	r0, [fp, #-16]
   36c6c:	str	r1, [fp, #-20]	; 0xffffffec
   36c70:	str	r2, [fp, #-24]	; 0xffffffe8
   36c74:	str	r3, [fp, #-28]	; 0xffffffe4
   36c78:	strh	r4, [fp, #-30]	; 0xffffffe2
   36c7c:	ldr	r0, [fp, #-16]
   36c80:	ldr	r0, [r0]
   36c84:	ldr	r1, [fp, #12]
   36c88:	str	ip, [sp, #20]
   36c8c:	str	lr, [sp, #16]
   36c90:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36c94:	str	r0, [sp, #28]
   36c98:	ldr	r0, [sp, #28]
   36c9c:	add	r0, r0, #8
   36ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36ca4:	movw	r2, #24
   36ca8:	mul	r1, r1, r2
   36cac:	add	r0, r0, r1
   36cb0:	str	r0, [sp, #24]
   36cb4:	ldr	r0, [sp, #24]
   36cb8:	ldr	r0, [r0]
   36cbc:	movw	r1, #0
   36cc0:	cmp	r0, r1
   36cc4:	beq	36ce4 <flatcc_json_parser_union_vector@@Base+0x94>
   36cc8:	ldr	r0, [fp, #-16]
   36ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   36cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36cd4:	movw	r3, #28
   36cd8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36cdc:	str	r0, [fp, #-12]
   36ce0:	b	36d9c <flatcc_json_parser_union_vector@@Base+0x14c>
   36ce4:	ldr	r0, [sp, #24]
   36ce8:	ldrsb	r0, [r0, #12]
   36cec:	cmp	r0, #0
   36cf0:	bne	36d44 <flatcc_json_parser_union_vector@@Base+0xf4>
   36cf4:	ldr	r0, [sp, #28]
   36cf8:	ldr	r1, [r0, #4]
   36cfc:	add	r1, r1, #1
   36d00:	str	r1, [r0, #4]
   36d04:	ldr	r0, [fp, #-16]
   36d08:	ldr	r0, [r0, #12]
   36d0c:	ldr	r1, [sp, #24]
   36d10:	str	r0, [r1, #8]
   36d14:	ldr	r0, [fp, #-16]
   36d18:	ldr	r0, [r0, #4]
   36d1c:	ldr	r1, [sp, #24]
   36d20:	str	r0, [r1, #4]
   36d24:	ldr	r0, [fp, #-16]
   36d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   36d2c:	ldr	r2, [sp, #24]
   36d30:	str	r1, [r2]
   36d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36d38:	bl	3433c <flatcc_json_parser_generic_json@@Base>
   36d3c:	str	r0, [fp, #-20]	; 0xffffffec
   36d40:	b	36d94 <flatcc_json_parser_union_vector@@Base+0x144>
   36d44:	ldr	r0, [sp, #28]
   36d48:	ldr	r1, [r0, #4]
   36d4c:	mvn	r2, #0
   36d50:	add	r1, r1, r2
   36d54:	str	r1, [r0, #4]
   36d58:	ldr	r0, [fp, #-16]
   36d5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36d60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36d64:	ldr	r3, [sp, #24]
   36d68:	ldr	r3, [r3, #20]
   36d6c:	ldr	ip, [sp, #24]
   36d70:	ldr	ip, [ip, #16]
   36d74:	ldrh	lr, [fp, #-30]	; 0xffffffe2
   36d78:	ldr	r4, [fp, #16]
   36d7c:	str	ip, [sp]
   36d80:	uxth	ip, lr
   36d84:	str	ip, [sp, #4]
   36d88:	str	r4, [sp, #8]
   36d8c:	bl	36da8 <flatcc_json_parser_union_vector@@Base+0x158>
   36d90:	str	r0, [fp, #-20]	; 0xffffffec
   36d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   36d98:	str	r0, [fp, #-12]
   36d9c:	ldr	r0, [fp, #-12]
   36da0:	sub	sp, fp, #8
   36da4:	pop	{r4, sl, fp, pc}
   36da8:	push	{r4, sl, fp, lr}
   36dac:	add	fp, sp, #8
   36db0:	sub	sp, sp, #64	; 0x40
   36db4:	ldr	ip, [fp, #16]
   36db8:	ldr	lr, [fp, #12]
   36dbc:	ldr	r4, [fp, #8]
   36dc0:	str	r0, [fp, #-16]
   36dc4:	str	r1, [fp, #-20]	; 0xffffffec
   36dc8:	str	r2, [fp, #-24]	; 0xffffffe8
   36dcc:	str	r3, [fp, #-28]	; 0xffffffe4
   36dd0:	strh	lr, [fp, #-30]	; 0xffffffe2
   36dd4:	movw	r0, #0
   36dd8:	str	r0, [sp, #36]	; 0x24
   36ddc:	ldr	r0, [fp, #-16]
   36de0:	ldr	r0, [r0]
   36de4:	str	ip, [sp, #16]
   36de8:	str	r4, [sp, #12]
   36dec:	bl	2b504 <flatcc_builder_start_offset_vector@@Base>
   36df0:	cmp	r0, #0
   36df4:	beq	36dfc <flatcc_json_parser_union_vector@@Base+0x1ac>
   36df8:	b	36fbc <flatcc_json_parser_union_vector@@Base+0x36c>
   36dfc:	ldr	r0, [fp, #-16]
   36e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   36e04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36e08:	add	r3, sp, #24
   36e0c:	bl	37470 <flatcc_json_parser_union_type_vector@@Base+0x490>
   36e10:	str	r0, [fp, #-20]	; 0xffffffec
   36e14:	movw	r0, #0
   36e18:	str	r0, [sp, #20]
   36e1c:	ldr	r0, [sp, #24]
   36e20:	cmp	r0, #0
   36e24:	beq	36f20 <flatcc_json_parser_union_vector@@Base+0x2d0>
   36e28:	ldr	r0, [sp, #20]
   36e2c:	ldr	r1, [fp, #8]
   36e30:	cmp	r0, r1
   36e34:	bne	36e54 <flatcc_json_parser_union_vector@@Base+0x204>
   36e38:	ldr	r0, [fp, #-16]
   36e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36e44:	movw	r3, #30
   36e48:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36e4c:	str	r0, [fp, #-12]
   36e50:	b	36fd4 <flatcc_json_parser_union_vector@@Base+0x384>
   36e54:	ldr	r0, [fp, #-16]
   36e58:	ldr	r0, [r0]
   36e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e60:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36e64:	str	r0, [sp, #28]
   36e68:	ldr	r0, [fp, #16]
   36e6c:	ldr	r1, [fp, #-16]
   36e70:	ldr	r2, [fp, #-20]	; 0xffffffec
   36e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36e78:	ldr	ip, [sp, #28]
   36e7c:	ldr	lr, [sp, #20]
   36e80:	add	ip, ip, lr
   36e84:	str	r0, [sp, #8]
   36e88:	mov	r0, r1
   36e8c:	mov	r1, r2
   36e90:	mov	r2, r3
   36e94:	ldrb	r3, [ip]
   36e98:	add	ip, sp, #36	; 0x24
   36e9c:	str	ip, [sp]
   36ea0:	ldr	ip, [sp, #8]
   36ea4:	blx	ip
   36ea8:	str	r0, [fp, #-20]	; 0xffffffec
   36eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   36eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36eb4:	cmp	r0, r1
   36eb8:	bne	36ec8 <flatcc_json_parser_union_vector@@Base+0x278>
   36ebc:	ldr	r0, [fp, #-20]	; 0xffffffec
   36ec0:	str	r0, [fp, #-12]
   36ec4:	b	36fd4 <flatcc_json_parser_union_vector@@Base+0x384>
   36ec8:	ldr	r0, [fp, #-16]
   36ecc:	ldr	r0, [r0]
   36ed0:	movw	r1, #1
   36ed4:	bl	2ac98 <flatcc_builder_extend_offset_vector@@Base>
   36ed8:	str	r0, [sp, #32]
   36edc:	movw	r1, #0
   36ee0:	cmp	r0, r1
   36ee4:	bne	36eec <flatcc_json_parser_union_vector@@Base+0x29c>
   36ee8:	b	36fbc <flatcc_json_parser_union_vector@@Base+0x36c>
   36eec:	ldr	r0, [sp, #36]	; 0x24
   36ef0:	ldr	r1, [sp, #32]
   36ef4:	str	r0, [r1]
   36ef8:	ldr	r0, [fp, #-16]
   36efc:	ldr	r1, [fp, #-20]	; 0xffffffec
   36f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36f04:	add	r3, sp, #24
   36f08:	bl	354d4 <flatcc_json_parser_float@@Base+0x97c>
   36f0c:	str	r0, [fp, #-20]	; 0xffffffec
   36f10:	ldr	r0, [sp, #20]
   36f14:	add	r0, r0, #1
   36f18:	str	r0, [sp, #20]
   36f1c:	b	36e1c <flatcc_json_parser_union_vector@@Base+0x1cc>
   36f20:	ldr	r0, [sp, #20]
   36f24:	ldr	r1, [fp, #8]
   36f28:	cmp	r0, r1
   36f2c:	beq	36f4c <flatcc_json_parser_union_vector@@Base+0x2fc>
   36f30:	ldr	r0, [fp, #-16]
   36f34:	ldr	r1, [fp, #-20]	; 0xffffffec
   36f38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36f3c:	movw	r3, #30
   36f40:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36f44:	str	r0, [fp, #-12]
   36f48:	b	36fd4 <flatcc_json_parser_union_vector@@Base+0x384>
   36f4c:	ldr	r0, [fp, #-16]
   36f50:	ldr	r0, [r0]
   36f54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36f58:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   36f5c:	str	r0, [sp, #28]
   36f60:	ldr	r0, [fp, #-16]
   36f64:	ldr	r0, [r0]
   36f68:	ldr	r1, [sp, #28]
   36f6c:	bl	2cd38 <flatcc_builder_end_offset_vector_for_unions@@Base>
   36f70:	str	r0, [sp, #36]	; 0x24
   36f74:	cmp	r0, #0
   36f78:	bne	36f80 <flatcc_json_parser_union_vector@@Base+0x330>
   36f7c:	b	36fbc <flatcc_json_parser_union_vector@@Base+0x36c>
   36f80:	ldr	r0, [fp, #-16]
   36f84:	ldr	r0, [r0]
   36f88:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   36f8c:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   36f90:	str	r0, [sp, #32]
   36f94:	movw	r1, #0
   36f98:	cmp	r0, r1
   36f9c:	bne	36fa4 <flatcc_json_parser_union_vector@@Base+0x354>
   36fa0:	b	36fbc <flatcc_json_parser_union_vector@@Base+0x36c>
   36fa4:	ldr	r0, [sp, #36]	; 0x24
   36fa8:	ldr	r1, [sp, #32]
   36fac:	str	r0, [r1]
   36fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   36fb4:	str	r0, [fp, #-12]
   36fb8:	b	36fd4 <flatcc_json_parser_union_vector@@Base+0x384>
   36fbc:	ldr	r0, [fp, #-16]
   36fc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   36fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36fc8:	movw	r3, #33	; 0x21
   36fcc:	bl	33158 <flatcc_json_parser_set_error@@Base>
   36fd0:	str	r0, [fp, #-12]
   36fd4:	ldr	r0, [fp, #-12]
   36fd8:	sub	sp, fp, #8
   36fdc:	pop	{r4, sl, fp, pc}

00036fe0 <flatcc_json_parser_union_type_vector@@Base>:
   36fe0:	push	{r4, r5, r6, sl, fp, lr}
   36fe4:	add	fp, sp, #16
   36fe8:	sub	sp, sp, #128	; 0x80
   36fec:	ldr	ip, [fp, #24]
   36ff0:	ldr	lr, [fp, #20]
   36ff4:	ldr	r4, [fp, #16]
   36ff8:	ldr	r5, [fp, #12]
   36ffc:	ldr	r6, [fp, #8]
   37000:	str	r0, [fp, #-24]	; 0xffffffe8
   37004:	str	r1, [fp, #-28]	; 0xffffffe4
   37008:	str	r2, [fp, #-32]	; 0xffffffe0
   3700c:	str	r3, [fp, #-36]	; 0xffffffdc
   37010:	strh	r6, [fp, #-38]	; 0xffffffda
   37014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37018:	ldr	r0, [r0]
   3701c:	ldr	r1, [fp, #12]
   37020:	str	ip, [sp, #44]	; 0x2c
   37024:	str	lr, [sp, #40]	; 0x28
   37028:	str	r4, [sp, #36]	; 0x24
   3702c:	str	r5, [sp, #32]
   37030:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   37034:	str	r0, [fp, #-44]	; 0xffffffd4
   37038:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3703c:	add	r0, r0, #8
   37040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37044:	movw	r2, #24
   37048:	mul	r1, r1, r2
   3704c:	add	r0, r0, r1
   37050:	str	r0, [fp, #-48]	; 0xffffffd0
   37054:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37058:	ldrsb	r0, [r0, #12]
   3705c:	cmp	r0, #0
   37060:	beq	37080 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   37064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37068:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3706c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37070:	movw	r3, #28
   37074:	bl	33158 <flatcc_json_parser_set_error@@Base>
   37078:	str	r0, [fp, #-20]	; 0xffffffec
   3707c:	b	37458 <flatcc_json_parser_union_type_vector@@Base+0x478>
   37080:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37084:	movw	r1, #1
   37088:	strb	r1, [r0, #12]
   3708c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37090:	ldr	r0, [r0]
   37094:	movw	r1, #1
   37098:	movw	r2, #1
   3709c:	uxth	r2, r2
   370a0:	mvn	r3, #0
   370a4:	bl	2b424 <flatcc_builder_start_vector@@Base>
   370a8:	cmp	r0, #0
   370ac:	beq	370b4 <flatcc_json_parser_union_type_vector@@Base+0xd4>
   370b0:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x460>
   370b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   370b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   370bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   370c0:	sub	r3, fp, #64	; 0x40
   370c4:	bl	37470 <flatcc_json_parser_union_type_vector@@Base+0x490>
   370c8:	str	r0, [fp, #-28]	; 0xffffffe4
   370cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   370d0:	cmp	r0, #0
   370d4:	beq	371f4 <flatcc_json_parser_union_type_vector@@Base+0x214>
   370d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   370dc:	ldr	r0, [r0]
   370e0:	movw	r1, #1
   370e4:	bl	2a928 <flatcc_builder_extend_vector@@Base>
   370e8:	str	r0, [sp, #72]	; 0x48
   370ec:	movw	r1, #0
   370f0:	cmp	r0, r1
   370f4:	bne	370fc <flatcc_json_parser_union_type_vector@@Base+0x11c>
   370f8:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x460>
   370fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37104:	str	r1, [fp, #-52]	; 0xffffffcc
   37108:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3710c:	sub	r3, fp, #65	; 0x41
   37110:	bl	36990 <flatcc_json_parser_union_type@@Base+0x2a4>
   37114:	str	r0, [fp, #-28]	; 0xffffffe4
   37118:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3711c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37120:	cmp	r0, r1
   37124:	bne	37174 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3712c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37130:	str	r1, [fp, #-52]	; 0xffffffcc
   37134:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37138:	ldr	r3, [fp, #16]
   3713c:	sub	ip, fp, #65	; 0x41
   37140:	str	ip, [sp]
   37144:	bl	36a6c <flatcc_json_parser_union_type@@Base+0x380>
   37148:	str	r0, [fp, #-28]	; 0xffffffe4
   3714c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37154:	cmp	r0, r1
   37158:	beq	3716c <flatcc_json_parser_union_type_vector@@Base+0x18c>
   3715c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37160:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37164:	cmp	r0, r1
   37168:	bne	37170 <flatcc_json_parser_union_type_vector@@Base+0x190>
   3716c:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x460>
   37170:	b	37174 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37174:	ldr	r0, [fp, #24]
   37178:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   3717c:	str	r0, [sp, #28]
   37180:	mov	r0, r1
   37184:	ldr	r1, [sp, #28]
   37188:	blx	r1
   3718c:	cmp	r0, #0
   37190:	bne	371cc <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   37194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37198:	ldr	r0, [r0, #8]
   3719c:	and	r0, r0, #1
   371a0:	cmp	r0, #0
   371a4:	bne	371c4 <flatcc_json_parser_union_type_vector@@Base+0x1e4>
   371a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   371ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   371b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   371b4:	movw	r3, #15
   371b8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   371bc:	str	r0, [fp, #-20]	; 0xffffffec
   371c0:	b	37458 <flatcc_json_parser_union_type_vector@@Base+0x478>
   371c4:	movw	r0, #0
   371c8:	strb	r0, [fp, #-65]	; 0xffffffbf
   371cc:	ldr	r0, [sp, #72]	; 0x48
   371d0:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   371d4:	bl	37554 <flatcc_json_parser_union_type_vector@@Base+0x574>
   371d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   371dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   371e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   371e4:	sub	r3, fp, #64	; 0x40
   371e8:	bl	354d4 <flatcc_json_parser_float@@Base+0x97c>
   371ec:	str	r0, [fp, #-28]	; 0xffffffe4
   371f0:	b	370cc <flatcc_json_parser_union_type_vector@@Base+0xec>
   371f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   371f8:	ldr	r0, [r0]
   371fc:	bl	2c9d8 <flatcc_builder_vector_count@@Base>
   37200:	str	r0, [sp, #48]	; 0x30
   37204:	ldr	r0, [sp, #48]	; 0x30
   37208:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3720c:	str	r0, [r1, #16]
   37210:	ldr	r0, [sp, #48]	; 0x30
   37214:	mov	r1, r0
   37218:	str	r0, [sp, #56]	; 0x38
   3721c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37220:	ldr	r0, [r0]
   37224:	ldr	r2, [sp, #56]	; 0x38
   37228:	str	r1, [sp, #24]
   3722c:	mov	r1, r2
   37230:	bl	29564 <flatcc_builder_enter_user_frame@@Base>
   37234:	str	r0, [sp, #52]	; 0x34
   37238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3723c:	ldr	r0, [r0]
   37240:	ldr	r1, [sp, #52]	; 0x34
   37244:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   37248:	str	r0, [sp, #60]	; 0x3c
   3724c:	ldr	r0, [sp, #60]	; 0x3c
   37250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37254:	ldr	r1, [r1]
   37258:	str	r0, [sp, #20]
   3725c:	mov	r0, r1
   37260:	bl	2c9f4 <flatcc_builder_vector_edit@@Base>
   37264:	ldr	r2, [sp, #56]	; 0x38
   37268:	ldr	r1, [sp, #20]
   3726c:	str	r0, [sp, #16]
   37270:	mov	r0, r1
   37274:	ldr	r1, [sp, #16]
   37278:	bl	14e30 <memcpy@plt>
   3727c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37280:	ldr	r0, [r0]
   37284:	bl	2c904 <flatcc_builder_end_vector@@Base>
   37288:	str	r0, [sp, #68]	; 0x44
   3728c:	cmp	r0, #0
   37290:	bne	37298 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
   37294:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x460>
   37298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3729c:	ldr	r0, [r0]
   372a0:	ldrh	r1, [fp, #-38]	; 0xffffffda
   372a4:	sub	r1, r1, #1
   372a8:	bl	2d00c <flatcc_builder_table_add_offset@@Base>
   372ac:	str	r0, [sp, #64]	; 0x40
   372b0:	movw	r1, #0
   372b4:	cmp	r0, r1
   372b8:	bne	372c0 <flatcc_json_parser_union_type_vector@@Base+0x2e0>
   372bc:	b	37440 <flatcc_json_parser_union_type_vector@@Base+0x460>
   372c0:	ldr	r0, [sp, #68]	; 0x44
   372c4:	ldr	r1, [sp, #64]	; 0x40
   372c8:	str	r0, [r1]
   372cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   372d0:	ldr	r0, [r0]
   372d4:	ldr	r1, [fp, #12]
   372d8:	bl	29764 <flatcc_builder_get_user_frame_ptr@@Base>
   372dc:	str	r0, [fp, #-44]	; 0xffffffd4
   372e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   372e4:	add	r0, r0, #8
   372e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   372ec:	movw	r2, #24
   372f0:	mul	r1, r1, r2
   372f4:	add	r0, r0, r1
   372f8:	str	r0, [fp, #-48]	; 0xffffffd0
   372fc:	ldr	r0, [sp, #52]	; 0x34
   37300:	ldr	r1, [fp, #-48]	; 0xffffffd0
   37304:	str	r0, [r1, #20]
   37308:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3730c:	ldr	r0, [r0]
   37310:	movw	r1, #0
   37314:	cmp	r0, r1
   37318:	bne	37338 <flatcc_json_parser_union_type_vector@@Base+0x358>
   3731c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37320:	ldr	r1, [r0, #4]
   37324:	add	r1, r1, #1
   37328:	str	r1, [r0, #4]
   3732c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37330:	str	r0, [fp, #-20]	; 0xffffffec
   37334:	b	37458 <flatcc_json_parser_union_type_vector@@Base+0x478>
   37338:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3733c:	ldr	r0, [r0, #4]
   37340:	cmp	r0, #0
   37344:	beq	3734c <flatcc_json_parser_union_type_vector@@Base+0x36c>
   37348:	b	3736c <flatcc_json_parser_union_type_vector@@Base+0x38c>
   3734c:	ldr	r0, [pc, #272]	; 37464 <flatcc_json_parser_union_type_vector@@Base+0x484>
   37350:	add	r0, pc, r0
   37354:	ldr	r1, [pc, #268]	; 37468 <flatcc_json_parser_union_type_vector@@Base+0x488>
   37358:	add	r1, pc, r1
   3735c:	ldr	r2, [pc, #264]	; 3746c <flatcc_json_parser_union_type_vector@@Base+0x48c>
   37360:	add	r3, pc, r2
   37364:	movw	r2, #1122	; 0x462
   37368:	bl	14f08 <__assert_fail@plt>
   3736c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37370:	ldr	r1, [r0, #4]
   37374:	mvn	r2, #0
   37378:	add	r1, r1, r2
   3737c:	str	r1, [r0, #4]
   37380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37384:	ldr	r0, [r0, #12]
   37388:	str	r0, [fp, #-56]	; 0xffffffc8
   3738c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37390:	ldr	r0, [r0, #4]
   37394:	str	r0, [fp, #-60]	; 0xffffffc4
   37398:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3739c:	ldr	r0, [r0, #8]
   373a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   373a4:	str	r0, [r1, #12]
   373a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   373ac:	ldr	r0, [r0, #4]
   373b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   373b4:	str	r0, [r1, #4]
   373b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   373bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   373c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   373c4:	ldr	r2, [r2]
   373c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   373cc:	ldr	ip, [sp, #52]	; 0x34
   373d0:	ldr	lr, [sp, #48]	; 0x30
   373d4:	ldrh	r4, [fp, #-38]	; 0xffffffda
   373d8:	ldr	r5, [fp, #20]
   373dc:	str	r0, [sp, #12]
   373e0:	mov	r0, r1
   373e4:	mov	r1, r2
   373e8:	mov	r2, r3
   373ec:	mov	r3, ip
   373f0:	str	lr, [sp]
   373f4:	uxth	ip, r4
   373f8:	str	ip, [sp, #4]
   373fc:	str	r5, [sp, #8]
   37400:	bl	36da8 <flatcc_json_parser_union_vector@@Base+0x158>
   37404:	ldr	r1, [sp, #12]
   37408:	cmp	r1, r0
   3740c:	bne	3741c <flatcc_json_parser_union_type_vector@@Base+0x43c>
   37410:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37414:	str	r0, [fp, #-20]	; 0xffffffec
   37418:	b	37458 <flatcc_json_parser_union_type_vector@@Base+0x478>
   3741c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37424:	str	r0, [r1, #12]
   37428:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3742c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37430:	str	r0, [r1, #4]
   37434:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37438:	str	r0, [fp, #-20]	; 0xffffffec
   3743c:	b	37458 <flatcc_json_parser_union_type_vector@@Base+0x478>
   37440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37444:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37448:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3744c:	movw	r3, #33	; 0x21
   37450:	bl	33158 <flatcc_json_parser_set_error@@Base>
   37454:	str	r0, [fp, #-20]	; 0xffffffec
   37458:	ldr	r0, [fp, #-20]	; 0xffffffec
   3745c:	sub	sp, fp, #16
   37460:	pop	{r4, r5, r6, sl, fp, pc}
   37464:	muleq	r1, r6, fp
   37468:	muleq	r1, sp, fp
   3746c:	andeq	r3, r1, r2, asr #25
   37470:	push	{fp, lr}
   37474:	mov	fp, sp
   37478:	sub	sp, sp, #24
   3747c:	str	r0, [fp, #-8]
   37480:	str	r1, [sp, #12]
   37484:	str	r2, [sp, #8]
   37488:	str	r3, [sp, #4]
   3748c:	ldr	r0, [sp, #12]
   37490:	ldr	r1, [sp, #8]
   37494:	cmp	r0, r1
   37498:	beq	374ac <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   3749c:	ldr	r0, [sp, #12]
   374a0:	ldrb	r0, [r0]
   374a4:	cmp	r0, #91	; 0x5b
   374a8:	beq	374d4 <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   374ac:	ldr	r0, [sp, #4]
   374b0:	movw	r1, #0
   374b4:	str	r1, [r0]
   374b8:	ldr	r0, [fp, #-8]
   374bc:	ldr	r1, [sp, #12]
   374c0:	ldr	r2, [sp, #8]
   374c4:	movw	r3, #22
   374c8:	bl	33158 <flatcc_json_parser_set_error@@Base>
   374cc:	str	r0, [fp, #-4]
   374d0:	b	37548 <flatcc_json_parser_union_type_vector@@Base+0x568>
   374d4:	ldr	r0, [fp, #-8]
   374d8:	ldr	r1, [sp, #12]
   374dc:	add	r1, r1, #1
   374e0:	ldr	r2, [sp, #8]
   374e4:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   374e8:	str	r0, [sp, #12]
   374ec:	ldr	r0, [sp, #12]
   374f0:	ldr	r1, [sp, #8]
   374f4:	cmp	r0, r1
   374f8:	beq	37534 <flatcc_json_parser_union_type_vector@@Base+0x554>
   374fc:	ldr	r0, [sp, #12]
   37500:	ldrb	r0, [r0]
   37504:	cmp	r0, #93	; 0x5d
   37508:	bne	37534 <flatcc_json_parser_union_type_vector@@Base+0x554>
   3750c:	ldr	r0, [sp, #4]
   37510:	movw	r1, #0
   37514:	str	r1, [r0]
   37518:	ldr	r0, [fp, #-8]
   3751c:	ldr	r1, [sp, #12]
   37520:	add	r1, r1, #1
   37524:	ldr	r2, [sp, #8]
   37528:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   3752c:	str	r0, [fp, #-4]
   37530:	b	37548 <flatcc_json_parser_union_type_vector@@Base+0x568>
   37534:	ldr	r0, [sp, #4]
   37538:	movw	r1, #1
   3753c:	str	r1, [r0]
   37540:	ldr	r0, [sp, #12]
   37544:	str	r0, [fp, #-4]
   37548:	ldr	r0, [fp, #-4]
   3754c:	mov	sp, fp
   37550:	pop	{fp, pc}
   37554:	push	{fp, lr}
   37558:	mov	fp, sp
   3755c:	sub	sp, sp, #8
   37560:	str	r0, [sp, #4]
   37564:	strb	r1, [sp, #3]
   37568:	ldrb	r0, [sp, #3]
   3756c:	bl	38a98 <flatcc_json_parser_struct_as_root@@Base+0x1324>
   37570:	ldr	r1, [sp, #4]
   37574:	strb	r0, [r1]
   37578:	mov	sp, fp
   3757c:	pop	{fp, pc}

00037580 <flatcc_json_parser_table_as_root@@Base>:
   37580:	push	{r4, sl, fp, lr}
   37584:	add	fp, sp, #8
   37588:	sub	sp, sp, #80	; 0x50
   3758c:	ldr	ip, [fp, #16]
   37590:	ldr	lr, [fp, #12]
   37594:	ldr	r4, [fp, #8]
   37598:	str	r0, [fp, #-16]
   3759c:	str	r1, [fp, #-20]	; 0xffffffec
   375a0:	str	r2, [fp, #-24]	; 0xffffffe8
   375a4:	str	r3, [fp, #-28]	; 0xffffffe4
   375a8:	ldr	r0, [fp, #8]
   375ac:	and	r0, r0, #4
   375b0:	cmp	r0, #0
   375b4:	movw	r0, #0
   375b8:	movne	r0, #1
   375bc:	tst	r0, #1
   375c0:	movw	r0, #2
   375c4:	moveq	r0, #0
   375c8:	str	r0, [sp, #12]
   375cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   375d0:	movw	r1, #0
   375d4:	cmp	r0, r1
   375d8:	beq	375e8 <flatcc_json_parser_table_as_root@@Base+0x68>
   375dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   375e0:	str	r0, [sp, #8]
   375e4:	b	375f4 <flatcc_json_parser_table_as_root@@Base+0x74>
   375e8:	add	r0, sp, #20
   375ec:	str	r0, [sp, #8]
   375f0:	b	375f4 <flatcc_json_parser_table_as_root@@Base+0x74>
   375f4:	ldr	r0, [sp, #8]
   375f8:	str	r0, [fp, #-20]	; 0xffffffec
   375fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   37600:	ldr	r1, [fp, #-16]
   37604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3760c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37610:	add	r3, r3, ip
   37614:	ldr	ip, [fp, #8]
   37618:	str	ip, [sp]
   3761c:	bl	376e0 <flatcc_json_parser_table_as_root@@Base+0x160>
   37620:	ldr	r0, [fp, #-16]
   37624:	ldr	r1, [fp, #12]
   37628:	ldr	r3, [sp, #12]
   3762c:	movw	r2, #0
   37630:	uxth	r2, r2
   37634:	bl	2a170 <flatcc_builder_start_buffer@@Base>
   37638:	cmp	r0, #0
   3763c:	beq	3764c <flatcc_json_parser_table_as_root@@Base+0xcc>
   37640:	mvn	r0, #0
   37644:	str	r0, [fp, #-12]
   37648:	b	376d4 <flatcc_json_parser_table_as_root@@Base+0x154>
   3764c:	ldr	r0, [fp, #16]
   37650:	ldr	r1, [fp, #-20]	; 0xffffffec
   37654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3765c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37660:	add	r3, r3, ip
   37664:	str	r0, [sp, #4]
   37668:	mov	r0, r1
   3766c:	mov	r1, r2
   37670:	mov	r2, r3
   37674:	add	r3, sp, #16
   37678:	ldr	ip, [sp, #4]
   3767c:	blx	ip
   37680:	ldr	r1, [fp, #-20]	; 0xffffffec
   37684:	ldr	r1, [r1, #20]
   37688:	cmp	r1, #0
   3768c:	beq	376a0 <flatcc_json_parser_table_as_root@@Base+0x120>
   37690:	ldr	r0, [fp, #-20]	; 0xffffffec
   37694:	ldr	r0, [r0, #20]
   37698:	str	r0, [fp, #-12]
   3769c:	b	376d4 <flatcc_json_parser_table_as_root@@Base+0x154>
   376a0:	ldr	r0, [fp, #-16]
   376a4:	ldr	r1, [sp, #16]
   376a8:	bl	2a4b4 <flatcc_builder_end_buffer@@Base>
   376ac:	cmp	r0, #0
   376b0:	bne	376c0 <flatcc_json_parser_table_as_root@@Base+0x140>
   376b4:	mvn	r0, #0
   376b8:	str	r0, [fp, #-12]
   376bc:	b	376d4 <flatcc_json_parser_table_as_root@@Base+0x154>
   376c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   376c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   376c8:	str	r0, [r1, #36]	; 0x24
   376cc:	movw	r0, #0
   376d0:	str	r0, [fp, #-12]
   376d4:	ldr	r0, [fp, #-12]
   376d8:	sub	sp, fp, #8
   376dc:	pop	{r4, sl, fp, pc}
   376e0:	push	{fp, lr}
   376e4:	mov	fp, sp
   376e8:	sub	sp, sp, #24
   376ec:	ldr	ip, [fp, #8]
   376f0:	str	r0, [fp, #-4]
   376f4:	str	r1, [fp, #-8]
   376f8:	str	r2, [sp, #12]
   376fc:	str	r3, [sp, #8]
   37700:	ldr	r0, [fp, #-4]
   37704:	movw	r1, #0
   37708:	and	r1, r1, #255	; 0xff
   3770c:	movw	r2, #40	; 0x28
   37710:	str	ip, [sp, #4]
   37714:	bl	14ec0 <memset@plt>
   37718:	ldr	r0, [fp, #-8]
   3771c:	ldr	r1, [fp, #-4]
   37720:	str	r0, [r1]
   37724:	ldr	r0, [sp, #12]
   37728:	ldr	r1, [fp, #-4]
   3772c:	str	r0, [r1, #4]
   37730:	ldr	r0, [fp, #-4]
   37734:	movw	r1, #1
   37738:	str	r1, [r0, #12]
   3773c:	ldr	r0, [fp, #8]
   37740:	ldr	r1, [fp, #-4]
   37744:	str	r0, [r1, #8]
   37748:	ldr	r0, [sp, #12]
   3774c:	ldr	r1, [fp, #-4]
   37750:	str	r0, [r1, #24]
   37754:	ldr	r0, [sp, #8]
   37758:	ldr	r1, [fp, #-4]
   3775c:	str	r0, [r1, #28]
   37760:	ldr	r0, [sp, #12]
   37764:	ldr	r1, [fp, #-4]
   37768:	str	r0, [r1, #32]
   3776c:	mov	sp, fp
   37770:	pop	{fp, pc}

00037774 <flatcc_json_parser_struct_as_root@@Base>:
   37774:	push	{r4, sl, fp, lr}
   37778:	add	fp, sp, #8
   3777c:	sub	sp, sp, #80	; 0x50
   37780:	ldr	ip, [fp, #16]
   37784:	ldr	lr, [fp, #12]
   37788:	ldr	r4, [fp, #8]
   3778c:	str	r0, [fp, #-16]
   37790:	str	r1, [fp, #-20]	; 0xffffffec
   37794:	str	r2, [fp, #-24]	; 0xffffffe8
   37798:	str	r3, [fp, #-28]	; 0xffffffe4
   3779c:	ldr	r0, [fp, #8]
   377a0:	and	r0, r0, #4
   377a4:	cmp	r0, #0
   377a8:	movw	r0, #0
   377ac:	movne	r0, #1
   377b0:	tst	r0, #1
   377b4:	movw	r0, #2
   377b8:	moveq	r0, #0
   377bc:	str	r0, [sp, #12]
   377c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   377c4:	movw	r1, #0
   377c8:	cmp	r0, r1
   377cc:	beq	377dc <flatcc_json_parser_struct_as_root@@Base+0x68>
   377d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   377d4:	str	r0, [sp, #8]
   377d8:	b	377e8 <flatcc_json_parser_struct_as_root@@Base+0x74>
   377dc:	add	r0, sp, #20
   377e0:	str	r0, [sp, #8]
   377e4:	b	377e8 <flatcc_json_parser_struct_as_root@@Base+0x74>
   377e8:	ldr	r0, [sp, #8]
   377ec:	str	r0, [fp, #-20]	; 0xffffffec
   377f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   377f4:	ldr	r1, [fp, #-16]
   377f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   377fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37800:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37804:	add	r3, r3, ip
   37808:	ldr	ip, [fp, #8]
   3780c:	str	ip, [sp]
   37810:	bl	376e0 <flatcc_json_parser_table_as_root@@Base+0x160>
   37814:	ldr	r0, [fp, #-16]
   37818:	ldr	r1, [fp, #12]
   3781c:	ldr	r3, [sp, #12]
   37820:	movw	r2, #0
   37824:	uxth	r2, r2
   37828:	bl	2a170 <flatcc_builder_start_buffer@@Base>
   3782c:	cmp	r0, #0
   37830:	beq	37840 <flatcc_json_parser_struct_as_root@@Base+0xcc>
   37834:	mvn	r0, #0
   37838:	str	r0, [fp, #-12]
   3783c:	b	378c8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   37840:	ldr	r0, [fp, #16]
   37844:	ldr	r1, [fp, #-20]	; 0xffffffec
   37848:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3784c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37850:	ldr	ip, [fp, #-28]	; 0xffffffe4
   37854:	add	r3, r3, ip
   37858:	str	r0, [sp, #4]
   3785c:	mov	r0, r1
   37860:	mov	r1, r2
   37864:	mov	r2, r3
   37868:	add	r3, sp, #16
   3786c:	ldr	ip, [sp, #4]
   37870:	blx	ip
   37874:	ldr	r1, [fp, #-20]	; 0xffffffec
   37878:	ldr	r1, [r1, #20]
   3787c:	cmp	r1, #0
   37880:	beq	37894 <flatcc_json_parser_struct_as_root@@Base+0x120>
   37884:	ldr	r0, [fp, #-20]	; 0xffffffec
   37888:	ldr	r0, [r0, #20]
   3788c:	str	r0, [fp, #-12]
   37890:	b	378c8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   37894:	ldr	r0, [fp, #-16]
   37898:	ldr	r1, [sp, #16]
   3789c:	bl	2a4b4 <flatcc_builder_end_buffer@@Base>
   378a0:	cmp	r0, #0
   378a4:	bne	378b4 <flatcc_json_parser_struct_as_root@@Base+0x140>
   378a8:	mvn	r0, #0
   378ac:	str	r0, [fp, #-12]
   378b0:	b	378c8 <flatcc_json_parser_struct_as_root@@Base+0x154>
   378b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   378b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   378bc:	str	r0, [r1, #36]	; 0x24
   378c0:	movw	r0, #0
   378c4:	str	r0, [fp, #-12]
   378c8:	ldr	r0, [fp, #-12]
   378cc:	sub	sp, fp, #8
   378d0:	pop	{r4, sl, fp, pc}
   378d4:	sub	sp, sp, #16
   378d8:	str	r0, [sp, #8]
   378dc:	str	r1, [sp, #12]
   378e0:	ldr	r0, [sp, #8]
   378e4:	ldr	r1, [sp, #12]
   378e8:	str	r1, [sp, #4]
   378ec:	str	r0, [sp]
   378f0:	vldr	d0, [sp]
   378f4:	add	sp, sp, #16
   378f8:	bx	lr
   378fc:	nop	{0}
   37900:	push	{r4, r5, r6, r7, fp, lr}
   37904:	add	fp, sp, #16
   37908:	sub	sp, sp, #136	; 0x88
   3790c:	vldr	d16, [pc, #884]	; 37c88 <flatcc_json_parser_struct_as_root@@Base+0x514>
   37910:	str	r0, [fp, #-24]	; 0xffffffe8
   37914:	str	r1, [fp, #-28]	; 0xffffffe4
   37918:	str	r2, [fp, #-32]	; 0xffffffe0
   3791c:	mov	r0, #0
   37920:	str	r0, [fp, #-48]	; 0xffffffd0
   37924:	str	r0, [fp, #-52]	; 0xffffffcc
   37928:	str	r0, [fp, #-60]	; 0xffffffc4
   3792c:	str	r0, [fp, #-64]	; 0xffffffc0
   37930:	movw	r0, #0
   37934:	str	r0, [fp, #-68]	; 0xffffffbc
   37938:	str	r0, [fp, #-72]	; 0xffffffb8
   3793c:	str	r0, [sp, #76]	; 0x4c
   37940:	str	r0, [sp, #72]	; 0x48
   37944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   37948:	vstr	d16, [r0]
   3794c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37954:	add	r0, r0, r1
   37958:	add	r0, r0, #1
   3795c:	str	r0, [fp, #-44]	; 0xffffffd4
   37960:	ldr	r0, [fp, #-28]	; 0xffffffe4
   37964:	cmp	r0, #1000	; 0x3e8
   37968:	ble	3797c <flatcc_json_parser_struct_as_root@@Base+0x208>
   3796c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37970:	add	r0, r0, #1000	; 0x3e8
   37974:	add	r0, r0, #1
   37978:	str	r0, [fp, #-44]	; 0xffffffd4
   3797c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37984:	cmp	r0, r1
   37988:	bne	37998 <flatcc_json_parser_struct_as_root@@Base+0x224>
   3798c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37990:	str	r0, [fp, #-20]	; 0xffffffec
   37994:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   37998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3799c:	str	r0, [fp, #-36]	; 0xffffffdc
   379a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379a4:	ldrb	r0, [r0]
   379a8:	cmp	r0, #45	; 0x2d
   379ac:	bne	379e4 <flatcc_json_parser_struct_as_root@@Base+0x270>
   379b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379b4:	add	r0, r0, #1
   379b8:	str	r0, [fp, #-24]	; 0xffffffe8
   379bc:	movw	r0, #1
   379c0:	str	r0, [fp, #-48]	; 0xffffffd0
   379c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   379cc:	cmp	r0, r1
   379d0:	bne	379e0 <flatcc_json_parser_struct_as_root@@Base+0x26c>
   379d4:	movw	r0, #0
   379d8:	str	r0, [fp, #-20]	; 0xffffffec
   379dc:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   379e0:	b	379e4 <flatcc_json_parser_struct_as_root@@Base+0x270>
   379e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379e8:	ldrb	r0, [r0]
   379ec:	cmp	r0, #48	; 0x30
   379f0:	bne	37ab8 <flatcc_json_parser_struct_as_root@@Base+0x344>
   379f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   379f8:	add	r0, r0, #1
   379fc:	str	r0, [fp, #-24]	; 0xffffffe8
   37a00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37a08:	cmp	r0, r1
   37a0c:	beq	37a64 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   37a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a14:	ldrb	r0, [r0]
   37a18:	orr	r0, r0, #32
   37a1c:	cmp	r0, #120	; 0x78
   37a20:	bne	37a64 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   37a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37a2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   37a30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37a34:	bl	38258 <flatcc_json_parser_struct_as_root@@Base+0xae4>
   37a38:	str	r0, [fp, #-40]	; 0xffffffd8
   37a3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37a44:	cmp	r0, r1
   37a48:	bne	37a58 <flatcc_json_parser_struct_as_root@@Base+0x2e4>
   37a4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37a50:	str	r0, [fp, #-20]	; 0xffffffec
   37a54:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   37a58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   37a5c:	str	r0, [fp, #-20]	; 0xffffffec
   37a60:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   37a64:	b	37a68 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   37a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37a70:	cmp	r0, r1
   37a74:	movw	r0, #0
   37a78:	str	r0, [sp, #68]	; 0x44
   37a7c:	beq	37a98 <flatcc_json_parser_struct_as_root@@Base+0x324>
   37a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37a84:	ldrb	r0, [r0]
   37a88:	cmp	r0, #48	; 0x30
   37a8c:	movw	r0, #0
   37a90:	moveq	r0, #1
   37a94:	str	r0, [sp, #68]	; 0x44
   37a98:	ldr	r0, [sp, #68]	; 0x44
   37a9c:	tst	r0, #1
   37aa0:	beq	37ab4 <flatcc_json_parser_struct_as_root@@Base+0x340>
   37aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37aa8:	add	r0, r0, #1
   37aac:	str	r0, [fp, #-24]	; 0xffffffe8
   37ab0:	b	37a68 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   37ab4:	b	37b24 <flatcc_json_parser_struct_as_root@@Base+0x3b0>
   37ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37abc:	ldrb	r0, [r0]
   37ac0:	cmp	r0, #49	; 0x31
   37ac4:	blt	37ad8 <flatcc_json_parser_struct_as_root@@Base+0x364>
   37ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37acc:	ldrb	r0, [r0]
   37ad0:	cmp	r0, #57	; 0x39
   37ad4:	ble	37b04 <flatcc_json_parser_struct_as_root@@Base+0x390>
   37ad8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   37adc:	cmp	r0, #0
   37ae0:	beq	37af0 <flatcc_json_parser_struct_as_root@@Base+0x37c>
   37ae4:	movw	r0, #0
   37ae8:	str	r0, [sp, #64]	; 0x40
   37aec:	b	37af8 <flatcc_json_parser_struct_as_root@@Base+0x384>
   37af0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   37af4:	str	r0, [sp, #64]	; 0x40
   37af8:	ldr	r0, [sp, #64]	; 0x40
   37afc:	str	r0, [fp, #-20]	; 0xffffffec
   37b00:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   37b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b08:	add	r1, r0, #1
   37b0c:	str	r1, [fp, #-24]	; 0xffffffe8
   37b10:	ldrb	r0, [r0]
   37b14:	sub	r0, r0, #48	; 0x30
   37b18:	asr	r1, r0, #31
   37b1c:	str	r0, [fp, #-64]	; 0xffffffc0
   37b20:	str	r1, [fp, #-60]	; 0xffffffc4
   37b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b28:	str	r0, [fp, #-40]	; 0xffffffd8
   37b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b30:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37b34:	cmp	r0, r1
   37b38:	movw	r0, #0
   37b3c:	str	r0, [sp, #60]	; 0x3c
   37b40:	beq	37b74 <flatcc_json_parser_struct_as_root@@Base+0x400>
   37b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b48:	ldrb	r0, [r0]
   37b4c:	cmp	r0, #48	; 0x30
   37b50:	movw	r0, #0
   37b54:	str	r0, [sp, #60]	; 0x3c
   37b58:	blt	37b74 <flatcc_json_parser_struct_as_root@@Base+0x400>
   37b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37b60:	ldrb	r0, [r0]
   37b64:	cmp	r0, #57	; 0x39
   37b68:	movw	r0, #0
   37b6c:	movle	r0, #1
   37b70:	str	r0, [sp, #60]	; 0x3c
   37b74:	ldr	r0, [sp, #60]	; 0x3c
   37b78:	tst	r0, #1
   37b7c:	beq	37c20 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   37b80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37b84:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37b88:	movw	r2, #39321	; 0x9999
   37b8c:	movt	r2, #39321	; 0x9999
   37b90:	subs	r0, r0, r2
   37b94:	movw	r2, #39321	; 0x9999
   37b98:	movt	r2, #6553	; 0x1999
   37b9c:	sbcs	r1, r1, r2
   37ba0:	bcc	37be4 <flatcc_json_parser_struct_as_root@@Base+0x470>
   37ba4:	b	37ba8 <flatcc_json_parser_struct_as_root@@Base+0x434>
   37ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37bac:	ldrb	r0, [r0]
   37bb0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   37bb4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37bb8:	adds	r3, r1, #1
   37bbc:	adc	ip, r2, #0
   37bc0:	cmp	r0, #52	; 0x34
   37bc4:	movgt	r1, r3
   37bc8:	cmp	r0, #52	; 0x34
   37bcc:	movgt	r2, ip
   37bd0:	str	r1, [fp, #-64]	; 0xffffffc0
   37bd4:	str	r2, [fp, #-60]	; 0xffffffc4
   37bd8:	movw	r0, #1
   37bdc:	str	r0, [sp, #72]	; 0x48
   37be0:	b	37c20 <flatcc_json_parser_struct_as_root@@Base+0x4ac>
   37be4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37be8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37bec:	add	r1, r1, r1, lsl #2
   37bf0:	lsl	r1, r1, #1
   37bf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37bf8:	add	r3, r2, #1
   37bfc:	str	r3, [fp, #-24]	; 0xffffffe8
   37c00:	ldrb	r2, [r2]
   37c04:	mov	r3, #10
   37c08:	umlal	r2, r1, r0, r3
   37c0c:	subs	r0, r2, #48	; 0x30
   37c10:	sbc	r1, r1, #0
   37c14:	str	r0, [fp, #-64]	; 0xffffffc0
   37c18:	str	r1, [fp, #-60]	; 0xffffffc4
   37c1c:	b	37b2c <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   37c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   37c28:	sub	r0, r0, r1
   37c2c:	str	r0, [sp, #76]	; 0x4c
   37c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37c38:	cmp	r0, r1
   37c3c:	movw	r0, #0
   37c40:	str	r0, [sp, #56]	; 0x38
   37c44:	beq	37c60 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   37c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c4c:	ldrb	r0, [r0]
   37c50:	cmp	r0, #48	; 0x30
   37c54:	movw	r0, #0
   37c58:	moveq	r0, #1
   37c5c:	str	r0, [sp, #56]	; 0x38
   37c60:	ldr	r0, [sp, #56]	; 0x38
   37c64:	tst	r0, #1
   37c68:	beq	37c90 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   37c6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37c70:	add	r0, r0, #1
   37c74:	str	r0, [fp, #-68]	; 0xffffffbc
   37c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c7c:	add	r0, r0, #1
   37c80:	str	r0, [fp, #-24]	; 0xffffffe8
   37c84:	b	37c30 <flatcc_json_parser_struct_as_root@@Base+0x4bc>
	...
   37c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37c94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37c98:	cmp	r0, r1
   37c9c:	beq	37d54 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   37ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ca4:	ldrb	r0, [r0]
   37ca8:	cmp	r0, #49	; 0x31
   37cac:	blt	37d54 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   37cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cb4:	ldrb	r0, [r0]
   37cb8:	cmp	r0, #57	; 0x39
   37cbc:	bgt	37d54 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   37cc0:	movw	r0, #1
   37cc4:	str	r0, [sp, #72]	; 0x48
   37cc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37ccc:	add	r0, r0, #1
   37cd0:	str	r0, [fp, #-68]	; 0xffffffbc
   37cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cd8:	add	r0, r0, #1
   37cdc:	str	r0, [fp, #-24]	; 0xffffffe8
   37ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ce4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37ce8:	cmp	r0, r1
   37cec:	movw	r0, #0
   37cf0:	str	r0, [sp, #52]	; 0x34
   37cf4:	beq	37d28 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   37cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37cfc:	ldrb	r0, [r0]
   37d00:	cmp	r0, #48	; 0x30
   37d04:	movw	r0, #0
   37d08:	str	r0, [sp, #52]	; 0x34
   37d0c:	blt	37d28 <flatcc_json_parser_struct_as_root@@Base+0x5b4>
   37d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d14:	ldrb	r0, [r0]
   37d18:	cmp	r0, #57	; 0x39
   37d1c:	movw	r0, #0
   37d20:	movle	r0, #1
   37d24:	str	r0, [sp, #52]	; 0x34
   37d28:	ldr	r0, [sp, #52]	; 0x34
   37d2c:	tst	r0, #1
   37d30:	beq	37d50 <flatcc_json_parser_struct_as_root@@Base+0x5dc>
   37d34:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37d38:	add	r0, r0, #1
   37d3c:	str	r0, [fp, #-68]	; 0xffffffbc
   37d40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d44:	add	r0, r0, #1
   37d48:	str	r0, [fp, #-24]	; 0xffffffe8
   37d4c:	b	37ce0 <flatcc_json_parser_struct_as_root@@Base+0x56c>
   37d50:	b	37d54 <flatcc_json_parser_struct_as_root@@Base+0x5e0>
   37d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37d5c:	cmp	r0, r1
   37d60:	beq	37fe8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   37d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d68:	ldrb	r0, [r0]
   37d6c:	cmp	r0, #46	; 0x2e
   37d70:	bne	37fe8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   37d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d78:	add	r0, r0, #1
   37d7c:	str	r0, [fp, #-24]	; 0xffffffe8
   37d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d84:	str	r0, [fp, #-40]	; 0xffffffd8
   37d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d8c:	ldrb	r0, [r0]
   37d90:	cmp	r0, #48	; 0x30
   37d94:	blt	37da8 <flatcc_json_parser_struct_as_root@@Base+0x634>
   37d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37d9c:	ldrb	r0, [r0]
   37da0:	cmp	r0, #57	; 0x39
   37da4:	ble	37db4 <flatcc_json_parser_struct_as_root@@Base+0x640>
   37da8:	movw	r0, #0
   37dac:	str	r0, [fp, #-20]	; 0xffffffec
   37db0:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   37db4:	b	37db8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   37db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37dbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37dc0:	cmp	r0, r1
   37dc4:	movw	r0, #0
   37dc8:	str	r0, [sp, #48]	; 0x30
   37dcc:	beq	37e00 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   37dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37dd4:	ldrb	r0, [r0]
   37dd8:	cmp	r0, #48	; 0x30
   37ddc:	movw	r0, #0
   37de0:	str	r0, [sp, #48]	; 0x30
   37de4:	blt	37e00 <flatcc_json_parser_struct_as_root@@Base+0x68c>
   37de8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37dec:	ldrb	r0, [r0]
   37df0:	cmp	r0, #57	; 0x39
   37df4:	movw	r0, #0
   37df8:	movle	r0, #1
   37dfc:	str	r0, [sp, #48]	; 0x30
   37e00:	ldr	r0, [sp, #48]	; 0x30
   37e04:	tst	r0, #1
   37e08:	beq	37ec8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   37e0c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37e10:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37e14:	movw	r2, #39321	; 0x9999
   37e18:	movt	r2, #39321	; 0x9999
   37e1c:	subs	r0, r0, r2
   37e20:	movw	r2, #39321	; 0x9999
   37e24:	movt	r2, #6553	; 0x1999
   37e28:	sbcs	r1, r1, r2
   37e2c:	bcc	37e7c <flatcc_json_parser_struct_as_root@@Base+0x708>
   37e30:	b	37e34 <flatcc_json_parser_struct_as_root@@Base+0x6c0>
   37e34:	ldr	r0, [sp, #72]	; 0x48
   37e38:	cmp	r0, #0
   37e3c:	bne	37e78 <flatcc_json_parser_struct_as_root@@Base+0x704>
   37e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37e44:	ldrb	r0, [r0]
   37e48:	ldr	r1, [fp, #-64]	; 0xffffffc0
   37e4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37e50:	adds	r3, r1, #1
   37e54:	adc	ip, r2, #0
   37e58:	cmp	r0, #52	; 0x34
   37e5c:	movgt	r1, r3
   37e60:	cmp	r0, #52	; 0x34
   37e64:	movgt	r2, ip
   37e68:	str	r1, [fp, #-64]	; 0xffffffc0
   37e6c:	str	r2, [fp, #-60]	; 0xffffffc4
   37e70:	movw	r0, #1
   37e74:	str	r0, [sp, #72]	; 0x48
   37e78:	b	37ec8 <flatcc_json_parser_struct_as_root@@Base+0x754>
   37e7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37e80:	ldr	r1, [fp, #-60]	; 0xffffffc4
   37e84:	add	r1, r1, r1, lsl #2
   37e88:	lsl	r1, r1, #1
   37e8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   37e90:	add	r3, r2, #1
   37e94:	str	r3, [fp, #-24]	; 0xffffffe8
   37e98:	ldrb	r2, [r2]
   37e9c:	mov	r3, #10
   37ea0:	umlal	r2, r1, r0, r3
   37ea4:	subs	r0, r2, #48	; 0x30
   37ea8:	sbc	r1, r1, #0
   37eac:	str	r0, [fp, #-64]	; 0xffffffc0
   37eb0:	str	r1, [fp, #-60]	; 0xffffffc4
   37eb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37eb8:	mvn	r1, #0
   37ebc:	add	r0, r0, r1
   37ec0:	str	r0, [fp, #-68]	; 0xffffffbc
   37ec4:	b	37db8 <flatcc_json_parser_struct_as_root@@Base+0x644>
   37ec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ecc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   37ed0:	sub	r0, r0, r1
   37ed4:	ldr	r1, [sp, #76]	; 0x4c
   37ed8:	add	r0, r1, r0
   37edc:	str	r0, [sp, #76]	; 0x4c
   37ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ee4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37ee8:	cmp	r0, r1
   37eec:	movw	r0, #0
   37ef0:	str	r0, [sp, #44]	; 0x2c
   37ef4:	beq	37f10 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   37ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37efc:	ldrb	r0, [r0]
   37f00:	cmp	r0, #48	; 0x30
   37f04:	movw	r0, #0
   37f08:	moveq	r0, #1
   37f0c:	str	r0, [sp, #44]	; 0x2c
   37f10:	ldr	r0, [sp, #44]	; 0x2c
   37f14:	tst	r0, #1
   37f18:	beq	37f38 <flatcc_json_parser_struct_as_root@@Base+0x7c4>
   37f1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   37f20:	add	r0, r0, #1
   37f24:	str	r0, [fp, #-68]	; 0xffffffbc
   37f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f2c:	add	r0, r0, #1
   37f30:	str	r0, [fp, #-24]	; 0xffffffe8
   37f34:	b	37ee0 <flatcc_json_parser_struct_as_root@@Base+0x76c>
   37f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f40:	cmp	r0, r1
   37f44:	beq	37fe4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   37f48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f4c:	ldrb	r0, [r0]
   37f50:	cmp	r0, #49	; 0x31
   37f54:	blt	37fe4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   37f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f5c:	ldrb	r0, [r0]
   37f60:	cmp	r0, #57	; 0x39
   37f64:	bgt	37fe4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   37f68:	movw	r0, #1
   37f6c:	str	r0, [sp, #72]	; 0x48
   37f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f74:	add	r0, r0, #1
   37f78:	str	r0, [fp, #-24]	; 0xffffffe8
   37f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37f84:	cmp	r0, r1
   37f88:	movw	r0, #0
   37f8c:	str	r0, [sp, #40]	; 0x28
   37f90:	beq	37fc4 <flatcc_json_parser_struct_as_root@@Base+0x850>
   37f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37f98:	ldrb	r0, [r0]
   37f9c:	cmp	r0, #48	; 0x30
   37fa0:	movw	r0, #0
   37fa4:	str	r0, [sp, #40]	; 0x28
   37fa8:	blt	37fc4 <flatcc_json_parser_struct_as_root@@Base+0x850>
   37fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fb0:	ldrb	r0, [r0]
   37fb4:	cmp	r0, #57	; 0x39
   37fb8:	movw	r0, #0
   37fbc:	movle	r0, #1
   37fc0:	str	r0, [sp, #40]	; 0x28
   37fc4:	ldr	r0, [sp, #40]	; 0x28
   37fc8:	tst	r0, #1
   37fcc:	beq	37fe0 <flatcc_json_parser_struct_as_root@@Base+0x86c>
   37fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37fd4:	add	r0, r0, #1
   37fd8:	str	r0, [fp, #-24]	; 0xffffffe8
   37fdc:	b	37f7c <flatcc_json_parser_struct_as_root@@Base+0x808>
   37fe0:	b	37fe4 <flatcc_json_parser_struct_as_root@@Base+0x870>
   37fe4:	b	37fe8 <flatcc_json_parser_struct_as_root@@Base+0x874>
   37fe8:	ldr	r0, [sp, #76]	; 0x4c
   37fec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   37ff0:	add	r0, r1, r0
   37ff4:	str	r0, [fp, #-68]	; 0xffffffbc
   37ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   37ffc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38000:	cmp	r0, r1
   38004:	beq	381a8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   38008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3800c:	ldrb	r0, [r0]
   38010:	orr	r0, r0, #32
   38014:	cmp	r0, #101	; 0x65
   38018:	bne	381a8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   3801c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38024:	sub	r0, r0, r1
   38028:	cmp	r0, #2
   3802c:	bge	3803c <flatcc_json_parser_struct_as_root@@Base+0x8c8>
   38030:	movw	r0, #0
   38034:	str	r0, [fp, #-20]	; 0xffffffec
   38038:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   3803c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38040:	add	r0, r0, #1
   38044:	str	r0, [fp, #-24]	; 0xffffffe8
   38048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3804c:	ldrb	r0, [r0]
   38050:	cmp	r0, #43	; 0x2b
   38054:	bne	38084 <flatcc_json_parser_struct_as_root@@Base+0x910>
   38058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3805c:	add	r0, r0, #1
   38060:	str	r0, [fp, #-24]	; 0xffffffe8
   38064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3806c:	cmp	r0, r1
   38070:	bne	38080 <flatcc_json_parser_struct_as_root@@Base+0x90c>
   38074:	movw	r0, #0
   38078:	str	r0, [fp, #-20]	; 0xffffffec
   3807c:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38080:	b	380cc <flatcc_json_parser_struct_as_root@@Base+0x958>
   38084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38088:	ldrb	r0, [r0]
   3808c:	cmp	r0, #45	; 0x2d
   38090:	bne	380c8 <flatcc_json_parser_struct_as_root@@Base+0x954>
   38094:	movw	r0, #1
   38098:	str	r0, [fp, #-52]	; 0xffffffcc
   3809c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380a0:	add	r0, r0, #1
   380a4:	str	r0, [fp, #-24]	; 0xffffffe8
   380a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   380b0:	cmp	r0, r1
   380b4:	bne	380c4 <flatcc_json_parser_struct_as_root@@Base+0x950>
   380b8:	movw	r0, #0
   380bc:	str	r0, [fp, #-20]	; 0xffffffec
   380c0:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   380c4:	b	380c8 <flatcc_json_parser_struct_as_root@@Base+0x954>
   380c8:	b	380cc <flatcc_json_parser_struct_as_root@@Base+0x958>
   380cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380d0:	ldrb	r0, [r0]
   380d4:	cmp	r0, #48	; 0x30
   380d8:	blt	380ec <flatcc_json_parser_struct_as_root@@Base+0x978>
   380dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380e0:	ldrb	r0, [r0]
   380e4:	cmp	r0, #57	; 0x39
   380e8:	ble	380f8 <flatcc_json_parser_struct_as_root@@Base+0x984>
   380ec:	movw	r0, #0
   380f0:	str	r0, [fp, #-20]	; 0xffffffec
   380f4:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   380f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   380fc:	add	r1, r0, #1
   38100:	str	r1, [fp, #-24]	; 0xffffffe8
   38104:	ldrb	r0, [r0]
   38108:	sub	r0, r0, #48	; 0x30
   3810c:	str	r0, [fp, #-72]	; 0xffffffb8
   38110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38118:	cmp	r0, r1
   3811c:	movw	r0, #0
   38120:	str	r0, [sp, #36]	; 0x24
   38124:	beq	38158 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   38128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3812c:	ldrb	r0, [r0]
   38130:	cmp	r0, #48	; 0x30
   38134:	movw	r0, #0
   38138:	str	r0, [sp, #36]	; 0x24
   3813c:	blt	38158 <flatcc_json_parser_struct_as_root@@Base+0x9e4>
   38140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38144:	ldrb	r0, [r0]
   38148:	cmp	r0, #57	; 0x39
   3814c:	movw	r0, #0
   38150:	movle	r0, #1
   38154:	str	r0, [sp, #36]	; 0x24
   38158:	ldr	r0, [sp, #36]	; 0x24
   3815c:	tst	r0, #1
   38160:	beq	381a4 <flatcc_json_parser_struct_as_root@@Base+0xa30>
   38164:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38168:	movw	r1, #32767	; 0x7fff
   3816c:	cmp	r0, r1
   38170:	bgt	38194 <flatcc_json_parser_struct_as_root@@Base+0xa20>
   38174:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38178:	movw	r1, #10
   3817c:	mul	r0, r0, r1
   38180:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38184:	ldrb	r1, [r1]
   38188:	add	r0, r0, r1
   3818c:	sub	r0, r0, #48	; 0x30
   38190:	str	r0, [fp, #-72]	; 0xffffffb8
   38194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38198:	add	r0, r0, #1
   3819c:	str	r0, [fp, #-24]	; 0xffffffe8
   381a0:	b	38110 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   381a4:	b	381a8 <flatcc_json_parser_struct_as_root@@Base+0xa34>
   381a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   381ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   381b0:	cmp	r1, #0
   381b4:	str	r0, [sp, #32]
   381b8:	beq	381d0 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   381bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   381c0:	movw	r1, #0
   381c4:	sub	r0, r1, r0
   381c8:	str	r0, [sp, #28]
   381cc:	b	381d8 <flatcc_json_parser_struct_as_root@@Base+0xa64>
   381d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   381d4:	str	r0, [sp, #28]
   381d8:	ldr	r0, [sp, #28]
   381dc:	ldr	r1, [sp, #32]
   381e0:	add	r0, r1, r0
   381e4:	str	r0, [fp, #-68]	; 0xffffffbc
   381e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   381ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   381f0:	cmp	r0, r2
   381f4:	bne	38204 <flatcc_json_parser_struct_as_root@@Base+0xa90>
   381f8:	movw	r0, #0
   381fc:	str	r0, [fp, #-20]	; 0xffffffec
   38200:	b	3824c <flatcc_json_parser_struct_as_root@@Base+0xad8>
   38204:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3820c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38210:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38214:	ldr	ip, [fp, #-60]	; 0xffffffc4
   38218:	ldr	lr, [fp, #-68]	; 0xffffffbc
   3821c:	ldr	r4, [sp, #76]	; 0x4c
   38220:	ldr	r5, [sp, #72]	; 0x48
   38224:	ldr	r6, [fp, #-32]	; 0xffffffe0
   38228:	mov	r7, sp
   3822c:	str	r6, [r7, #20]
   38230:	str	r5, [r7, #16]
   38234:	str	r4, [r7, #12]
   38238:	str	lr, [r7, #8]
   3823c:	str	ip, [r7, #4]
   38240:	str	r3, [r7]
   38244:	bl	38290 <flatcc_json_parser_struct_as_root@@Base+0xb1c>
   38248:	str	r0, [fp, #-20]	; 0xffffffec
   3824c:	ldr	r0, [fp, #-20]	; 0xffffffec
   38250:	sub	sp, fp, #16
   38254:	pop	{r4, r5, r6, r7, fp, pc}
   38258:	sub	sp, sp, #16
   3825c:	vldr	d16, [pc, #36]	; 38288 <flatcc_json_parser_struct_as_root@@Base+0xb14>
   38260:	str	r0, [sp, #12]
   38264:	str	r1, [sp, #8]
   38268:	str	r2, [sp, #4]
   3826c:	str	r3, [sp]
   38270:	ldr	r0, [sp]
   38274:	vstr	d16, [r0]
   38278:	ldr	r0, [sp, #12]
   3827c:	add	sp, sp, #16
   38280:	bx	lr
   38284:	nop	{0}
	...
   38290:	push	{r4, r5, r6, sl, fp, lr}
   38294:	add	fp, sp, #16
   38298:	sub	sp, sp, #64	; 0x40
   3829c:	ldr	r3, [fp, #12]
   382a0:	ldr	ip, [fp, #8]
   382a4:	ldr	lr, [fp, #28]
   382a8:	ldr	r4, [fp, #24]
   382ac:	ldr	r5, [fp, #20]
   382b0:	ldr	r6, [fp, #16]
   382b4:	str	r0, [fp, #-24]	; 0xffffffe8
   382b8:	str	r1, [fp, #-28]	; 0xffffffe4
   382bc:	str	r2, [fp, #-32]	; 0xffffffe0
   382c0:	str	r3, [sp, #44]	; 0x2c
   382c4:	str	ip, [sp, #40]	; 0x28
   382c8:	movw	r0, #309	; 0x135
   382cc:	str	r0, [sp, #36]	; 0x24
   382d0:	movw	r0, #65212	; 0xfebc
   382d4:	movt	r0, #65535	; 0xffff
   382d8:	str	r0, [sp, #32]
   382dc:	ldr	r0, [sp, #40]	; 0x28
   382e0:	ldr	r1, [sp, #44]	; 0x2c
   382e4:	orr	r0, r0, r1
   382e8:	cmp	r0, #0
   382ec:	beq	38300 <flatcc_json_parser_struct_as_root@@Base+0xb8c>
   382f0:	b	382f4 <flatcc_json_parser_struct_as_root@@Base+0xb80>
   382f4:	ldr	r0, [fp, #16]
   382f8:	cmn	r0, #324	; 0x144
   382fc:	bge	38310 <flatcc_json_parser_struct_as_root@@Base+0xb9c>
   38300:	vldr	d16, [pc, #1008]	; 386f8 <flatcc_json_parser_struct_as_root@@Base+0xf84>
   38304:	ldr	r0, [fp, #28]
   38308:	vstr	d16, [r0]
   3830c:	b	388c0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   38310:	ldr	r0, [fp, #16]
   38314:	sub	r0, r0, #1
   38318:	movw	r1, #309	; 0x135
   3831c:	cmp	r0, r1
   38320:	ble	38340 <flatcc_json_parser_struct_as_root@@Base+0xbcc>
   38324:	mov	r0, #0
   38328:	movw	r1, #0
   3832c:	movt	r1, #32752	; 0x7ff0
   38330:	bl	378d4 <flatcc_json_parser_struct_as_root@@Base+0x160>
   38334:	ldr	r0, [fp, #28]
   38338:	vstr	d0, [r0]
   3833c:	b	388c0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   38340:	ldr	r0, [sp, #44]	; 0x2c
   38344:	mov	r1, #0
   38348:	cmp	r1, r0, lsr #21
   3834c:	bne	38850 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   38350:	b	38354 <flatcc_json_parser_struct_as_root@@Base+0xbe0>
   38354:	ldr	r0, [fp, #16]
   38358:	cmp	r0, #0
   3835c:	blt	38850 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   38360:	ldr	r0, [fp, #16]
   38364:	cmp	r0, #22
   38368:	bgt	38850 <flatcc_json_parser_struct_as_root@@Base+0x10dc>
   3836c:	ldr	r0, [sp, #40]	; 0x28
   38370:	ldr	r1, [sp, #44]	; 0x2c
   38374:	bl	45f84 <flatcc_json_printer_clear@@Base+0x2060>
   38378:	str	r0, [sp, #16]
   3837c:	str	r1, [sp, #20]
   38380:	ldr	r0, [fp, #16]
   38384:	ldr	r1, [fp, #20]
   38388:	sub	r0, r0, r1
   3838c:	add	r0, r0, #22
   38390:	cmp	r0, #44	; 0x2c
   38394:	str	r0, [sp, #12]
   38398:	bhi	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3839c:	add	r0, pc, #8
   383a0:	ldr	r1, [sp, #12]
   383a4:	ldr	r2, [r0, r1, lsl #2]
   383a8:	add	pc, r0, r2
   383ac:	strheq	r0, [r0], -r4
   383b0:	andeq	r0, r0, r8, asr #1
   383b4:	ldrdeq	r0, [r0], -ip
   383b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   383bc:	andeq	r0, r0, r4, lsl #2
   383c0:	andeq	r0, r0, r8, lsl r1
   383c4:	andeq	r0, r0, ip, lsr #2
   383c8:	andeq	r0, r0, r0, asr #2
   383cc:	andeq	r0, r0, r4, asr r1
   383d0:	andeq	r0, r0, r8, ror #2
   383d4:	andeq	r0, r0, ip, ror r1
   383d8:	muleq	r0, r0, r1
   383dc:	andeq	r0, r0, r4, lsr #3
   383e0:			; <UNDEFINED> instruction: 0x000001b8
   383e4:	andeq	r0, r0, ip, asr #3
   383e8:	andeq	r0, r0, r0, ror #3
   383ec:	strdeq	r0, [r0], -r4
   383f0:	andeq	r0, r0, r8, lsl #4
   383f4:	andeq	r0, r0, ip, lsl r2
   383f8:	andeq	r0, r0, r0, lsr r2
   383fc:	andeq	r0, r0, r4, asr #4
   38400:	andeq	r0, r0, r8, asr r2
   38404:	andeq	r0, r0, ip, ror #4
   38408:	andeq	r0, r0, r0, ror r2
   3840c:	andeq	r0, r0, r4, lsl #5
   38410:	muleq	r0, r8, r2
   38414:	andeq	r0, r0, ip, lsr #5
   38418:	andeq	r0, r0, r0, asr #5
   3841c:	ldrdeq	r0, [r0], -r4
   38420:	andeq	r0, r0, r8, ror #5
   38424:	strdeq	r0, [r0], -ip
   38428:	andeq	r0, r0, r0, lsl r3
   3842c:	andeq	r0, r0, r4, lsr #6
   38430:	andeq	r0, r0, r8, lsr r3
   38434:			; <UNDEFINED> instruction: 0x000003bc
   38438:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   3843c:	andeq	r0, r0, r4, ror #7
   38440:	strdeq	r0, [r0], -r8
   38444:	andeq	r0, r0, ip, lsl #8
   38448:	andeq	r0, r0, r0, lsr #8
   3844c:	andeq	r0, r0, r4, lsr r4
   38450:	andeq	r0, r0, r8, asr #8
   38454:	andeq	r0, r0, ip, asr r4
   38458:	andeq	r0, r0, r0, ror r4
   3845c:	andeq	r0, r0, r4, lsl #9
   38460:	vldr	d16, [pc, #664]	; 38700 <flatcc_json_parser_struct_as_root@@Base+0xf8c>
   38464:	vldr	d17, [sp, #16]
   38468:	vdiv.f64	d16, d17, d16
   3846c:	vstr	d16, [sp, #16]
   38470:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38474:	vldr	d16, [pc, #652]	; 38708 <flatcc_json_parser_struct_as_root@@Base+0xf94>
   38478:	vldr	d17, [sp, #16]
   3847c:	vdiv.f64	d16, d17, d16
   38480:	vstr	d16, [sp, #16]
   38484:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38488:	vldr	d16, [pc, #640]	; 38710 <flatcc_json_parser_struct_as_root@@Base+0xf9c>
   3848c:	vldr	d17, [sp, #16]
   38490:	vdiv.f64	d16, d17, d16
   38494:	vstr	d16, [sp, #16]
   38498:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3849c:	vldr	d16, [pc, #628]	; 38718 <flatcc_json_parser_struct_as_root@@Base+0xfa4>
   384a0:	vldr	d17, [sp, #16]
   384a4:	vdiv.f64	d16, d17, d16
   384a8:	vstr	d16, [sp, #16]
   384ac:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   384b0:	vldr	d16, [pc, #616]	; 38720 <flatcc_json_parser_struct_as_root@@Base+0xfac>
   384b4:	vldr	d17, [sp, #16]
   384b8:	vdiv.f64	d16, d17, d16
   384bc:	vstr	d16, [sp, #16]
   384c0:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   384c4:	vldr	d16, [pc, #604]	; 38728 <flatcc_json_parser_struct_as_root@@Base+0xfb4>
   384c8:	vldr	d17, [sp, #16]
   384cc:	vdiv.f64	d16, d17, d16
   384d0:	vstr	d16, [sp, #16]
   384d4:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   384d8:	vldr	d16, [pc, #592]	; 38730 <flatcc_json_parser_struct_as_root@@Base+0xfbc>
   384dc:	vldr	d17, [sp, #16]
   384e0:	vdiv.f64	d16, d17, d16
   384e4:	vstr	d16, [sp, #16]
   384e8:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   384ec:	vldr	d16, [pc, #580]	; 38738 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   384f0:	vldr	d17, [sp, #16]
   384f4:	vdiv.f64	d16, d17, d16
   384f8:	vstr	d16, [sp, #16]
   384fc:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38500:	vldr	d16, [pc, #568]	; 38740 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   38504:	vldr	d17, [sp, #16]
   38508:	vdiv.f64	d16, d17, d16
   3850c:	vstr	d16, [sp, #16]
   38510:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38514:	vldr	d16, [pc, #556]	; 38748 <flatcc_json_parser_struct_as_root@@Base+0xfd4>
   38518:	vldr	d17, [sp, #16]
   3851c:	vdiv.f64	d16, d17, d16
   38520:	vstr	d16, [sp, #16]
   38524:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38528:	vldr	d16, [pc, #544]	; 38750 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   3852c:	vldr	d17, [sp, #16]
   38530:	vdiv.f64	d16, d17, d16
   38534:	vstr	d16, [sp, #16]
   38538:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3853c:	vldr	d16, [pc, #532]	; 38758 <flatcc_json_parser_struct_as_root@@Base+0xfe4>
   38540:	vldr	d17, [sp, #16]
   38544:	vdiv.f64	d16, d17, d16
   38548:	vstr	d16, [sp, #16]
   3854c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38550:	vldr	d16, [pc, #520]	; 38760 <flatcc_json_parser_struct_as_root@@Base+0xfec>
   38554:	vldr	d17, [sp, #16]
   38558:	vdiv.f64	d16, d17, d16
   3855c:	vstr	d16, [sp, #16]
   38560:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38564:	vldr	d16, [pc, #1012]	; 38960 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   38568:	vldr	d17, [sp, #16]
   3856c:	vdiv.f64	d16, d17, d16
   38570:	vstr	d16, [sp, #16]
   38574:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38578:	vldr	d16, [pc, #1000]	; 38968 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   3857c:	vldr	d17, [sp, #16]
   38580:	vdiv.f64	d16, d17, d16
   38584:	vstr	d16, [sp, #16]
   38588:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3858c:	vldr	d16, [pc, #988]	; 38970 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   38590:	vldr	d17, [sp, #16]
   38594:	vdiv.f64	d16, d17, d16
   38598:	vstr	d16, [sp, #16]
   3859c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   385a0:	vldr	d16, [pc, #976]	; 38978 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   385a4:	vldr	d17, [sp, #16]
   385a8:	vdiv.f64	d16, d17, d16
   385ac:	vstr	d16, [sp, #16]
   385b0:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   385b4:	vldr	d16, [pc, #964]	; 38980 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   385b8:	vldr	d17, [sp, #16]
   385bc:	vdiv.f64	d16, d17, d16
   385c0:	vstr	d16, [sp, #16]
   385c4:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   385c8:	vldr	d16, [pc, #952]	; 38988 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   385cc:	vldr	d17, [sp, #16]
   385d0:	vdiv.f64	d16, d17, d16
   385d4:	vstr	d16, [sp, #16]
   385d8:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   385dc:	vldr	d16, [pc, #940]	; 38990 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   385e0:	vldr	d17, [sp, #16]
   385e4:	vdiv.f64	d16, d17, d16
   385e8:	vstr	d16, [sp, #16]
   385ec:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   385f0:	vldr	d16, [pc, #928]	; 38998 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   385f4:	vldr	d17, [sp, #16]
   385f8:	vdiv.f64	d16, d17, d16
   385fc:	vstr	d16, [sp, #16]
   38600:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38604:	vldr	d16, [sp, #16]
   38608:	vmov.f64	d17, #36	; 0x41200000  10.0
   3860c:	vdiv.f64	d16, d16, d17
   38610:	vstr	d16, [sp, #16]
   38614:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38618:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3861c:	vldr	d16, [sp, #16]
   38620:	vmov.f64	d17, #36	; 0x41200000  10.0
   38624:	vmul.f64	d16, d16, d17
   38628:	vstr	d16, [sp, #16]
   3862c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38630:	vldr	d16, [pc, #864]	; 38998 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   38634:	vldr	d17, [sp, #16]
   38638:	vmul.f64	d16, d17, d16
   3863c:	vstr	d16, [sp, #16]
   38640:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38644:	vldr	d16, [pc, #836]	; 38990 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   38648:	vldr	d17, [sp, #16]
   3864c:	vmul.f64	d16, d17, d16
   38650:	vstr	d16, [sp, #16]
   38654:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38658:	vldr	d16, [pc, #808]	; 38988 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   3865c:	vldr	d17, [sp, #16]
   38660:	vmul.f64	d16, d17, d16
   38664:	vstr	d16, [sp, #16]
   38668:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3866c:	vldr	d16, [pc, #780]	; 38980 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   38670:	vldr	d17, [sp, #16]
   38674:	vmul.f64	d16, d17, d16
   38678:	vstr	d16, [sp, #16]
   3867c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38680:	vldr	d16, [pc, #752]	; 38978 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   38684:	vldr	d17, [sp, #16]
   38688:	vmul.f64	d16, d17, d16
   3868c:	vstr	d16, [sp, #16]
   38690:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38694:	vldr	d16, [pc, #724]	; 38970 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   38698:	vldr	d17, [sp, #16]
   3869c:	vmul.f64	d16, d17, d16
   386a0:	vstr	d16, [sp, #16]
   386a4:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   386a8:	vldr	d16, [pc, #696]	; 38968 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   386ac:	vldr	d17, [sp, #16]
   386b0:	vmul.f64	d16, d17, d16
   386b4:	vstr	d16, [sp, #16]
   386b8:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   386bc:	vldr	d16, [pc, #668]	; 38960 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   386c0:	vldr	d17, [sp, #16]
   386c4:	vmul.f64	d16, d17, d16
   386c8:	vstr	d16, [sp, #16]
   386cc:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   386d0:	vldr	d16, [pc, #640]	; 38958 <flatcc_json_parser_struct_as_root@@Base+0x11e4>
   386d4:	vldr	d17, [sp, #16]
   386d8:	vmul.f64	d16, d17, d16
   386dc:	vstr	d16, [sp, #16]
   386e0:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   386e4:	vldr	d16, [pc, #612]	; 38950 <flatcc_json_parser_struct_as_root@@Base+0x11dc>
   386e8:	vldr	d17, [sp, #16]
   386ec:	vmul.f64	d16, d17, d16
   386f0:	vstr	d16, [sp, #16]
   386f4:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
	...
   38700:			; <UNDEFINED> instruction: 0x064dd592
   38704:	strmi	pc, [r0], #207	; 0xcf
   38708:	usatle	lr, #2, r0, asr #30
   3870c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38710:	ldmvc	r5!, {r6, sl, fp, pc}
   38714:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38718:	addsvs	r3, r1, r0, lsl #26
   3871c:	mvnmi	r5, #228, 16	; 0xe40000
   38720:	strbvs	ip, [lr, -r0, lsl #16]
   38724:			; <UNDEFINED> instruction: 0x43abc16d
   38728:	ldrbhi	sl, [r8]
   3872c:	cmnmi	r6, #1459617792	; 0x57000000
   38730:	strbcc	r8, [r0, r0]!
   38734:	movtmi	ip, #4985	; 0x1379
   38738:	ldrtcs	r0, [r4], -r0
   3873c:	movwmi	r6, #52213	; 0xcbf5
   38740:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38744:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38748:	strb	r0, [r0, #-0]
   3874c:	adcmi	r3, r2, #156	; 0x9c
   38750:	andge	r0, r0, #0
   38754:	rsbmi	r1, sp, #148, 20	; 0x94000
   38758:	stmda	r0, {}	; <UNPREDICTABLE>
   3875c:	eorsmi	r4, r7, #7733248	; 0x760000
   38760:	andcs	r0, r0, r0
   38764:	andmi	sl, r2, #95	; 0x5f
   38768:	vldr	d16, [pc, #472]	; 38948 <flatcc_json_parser_struct_as_root@@Base+0x11d4>
   3876c:	vldr	d17, [sp, #16]
   38770:	vmul.f64	d16, d17, d16
   38774:	vstr	d16, [sp, #16]
   38778:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3877c:	vldr	d16, [pc, #444]	; 38940 <flatcc_json_parser_struct_as_root@@Base+0x11cc>
   38780:	vldr	d17, [sp, #16]
   38784:	vmul.f64	d16, d17, d16
   38788:	vstr	d16, [sp, #16]
   3878c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38790:	vldr	d16, [pc, #416]	; 38938 <flatcc_json_parser_struct_as_root@@Base+0x11c4>
   38794:	vldr	d17, [sp, #16]
   38798:	vmul.f64	d16, d17, d16
   3879c:	vstr	d16, [sp, #16]
   387a0:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   387a4:	vldr	d16, [pc, #388]	; 38930 <flatcc_json_parser_struct_as_root@@Base+0x11bc>
   387a8:	vldr	d17, [sp, #16]
   387ac:	vmul.f64	d16, d17, d16
   387b0:	vstr	d16, [sp, #16]
   387b4:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   387b8:	vldr	d16, [pc, #360]	; 38928 <flatcc_json_parser_struct_as_root@@Base+0x11b4>
   387bc:	vldr	d17, [sp, #16]
   387c0:	vmul.f64	d16, d17, d16
   387c4:	vstr	d16, [sp, #16]
   387c8:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   387cc:	vldr	d16, [pc, #332]	; 38920 <flatcc_json_parser_struct_as_root@@Base+0x11ac>
   387d0:	vldr	d17, [sp, #16]
   387d4:	vmul.f64	d16, d17, d16
   387d8:	vstr	d16, [sp, #16]
   387dc:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   387e0:	vldr	d16, [pc, #304]	; 38918 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   387e4:	vldr	d17, [sp, #16]
   387e8:	vmul.f64	d16, d17, d16
   387ec:	vstr	d16, [sp, #16]
   387f0:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   387f4:	vldr	d16, [pc, #276]	; 38910 <flatcc_json_parser_struct_as_root@@Base+0x119c>
   387f8:	vldr	d17, [sp, #16]
   387fc:	vmul.f64	d16, d17, d16
   38800:	vstr	d16, [sp, #16]
   38804:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38808:	vldr	d16, [pc, #248]	; 38908 <flatcc_json_parser_struct_as_root@@Base+0x1194>
   3880c:	vldr	d17, [sp, #16]
   38810:	vmul.f64	d16, d17, d16
   38814:	vstr	d16, [sp, #16]
   38818:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   3881c:	vldr	d16, [pc, #220]	; 38900 <flatcc_json_parser_struct_as_root@@Base+0x118c>
   38820:	vldr	d17, [sp, #16]
   38824:	vmul.f64	d16, d17, d16
   38828:	vstr	d16, [sp, #16]
   3882c:	b	38840 <flatcc_json_parser_struct_as_root@@Base+0x10cc>
   38830:	vldr	d16, [pc, #192]	; 388f8 <flatcc_json_parser_struct_as_root@@Base+0x1184>
   38834:	vldr	d17, [sp, #16]
   38838:	vmul.f64	d16, d17, d16
   3883c:	vstr	d16, [sp, #16]
   38840:	vldr	d16, [sp, #16]
   38844:	ldr	r0, [fp, #28]
   38848:	vstr	d16, [r0]
   3884c:	b	388c0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   38850:	ldr	r0, [sp, #40]	; 0x28
   38854:	ldr	r1, [sp, #44]	; 0x2c
   38858:	ldr	r2, [fp, #16]
   3885c:	ldr	r3, [fp, #20]
   38860:	ldr	ip, [fp, #24]
   38864:	ldr	lr, [fp, #28]
   38868:	mov	r4, sp
   3886c:	str	lr, [r4, #4]
   38870:	str	ip, [r4]
   38874:	bl	32250 <grisu3_diy_fp_encode_double@@Base>
   38878:	cmp	r0, #0
   3887c:	beq	38884 <flatcc_json_parser_struct_as_root@@Base+0x1110>
   38880:	b	388c0 <flatcc_json_parser_struct_as_root@@Base+0x114c>
   38884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38888:	add	r1, sp, #28
   3888c:	bl	14ed8 <strtod@plt>
   38890:	ldr	r0, [fp, #28]
   38894:	vstr	d0, [r0]
   38898:	ldr	r0, [sp, #28]
   3889c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   388a0:	cmp	r0, r1
   388a4:	bcs	388b4 <flatcc_json_parser_struct_as_root@@Base+0x1140>
   388a8:	ldr	r0, [sp, #28]
   388ac:	str	r0, [fp, #-20]	; 0xffffffec
   388b0:	b	388e8 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   388b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   388b8:	str	r0, [fp, #-20]	; 0xffffffec
   388bc:	b	388e8 <flatcc_json_parser_struct_as_root@@Base+0x1174>
   388c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   388c4:	cmp	r0, #0
   388c8:	beq	388e0 <flatcc_json_parser_struct_as_root@@Base+0x116c>
   388cc:	ldr	r0, [fp, #28]
   388d0:	vldr	d16, [r0]
   388d4:	vneg.f64	d16, d16
   388d8:	ldr	r0, [fp, #28]
   388dc:	vstr	d16, [r0]
   388e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   388e4:	str	r0, [fp, #-20]	; 0xffffffec
   388e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   388ec:	sub	sp, fp, #16
   388f0:	pop	{r4, r5, r6, sl, fp, pc}
   388f4:	nop	{0}
   388f8:			; <UNDEFINED> instruction: 0x064dd592
   388fc:	strmi	pc, [r0], #207	; 0xcf
   38900:	usatle	lr, #2, r0, asr #30
   38904:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38908:	ldmvc	r5!, {r6, sl, fp, pc}
   3890c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38910:	addsvs	r3, r1, r0, lsl #26
   38914:	mvnmi	r5, #228, 16	; 0xe40000
   38918:	strbvs	ip, [lr, -r0, lsl #16]
   3891c:			; <UNDEFINED> instruction: 0x43abc16d
   38920:	ldrbhi	sl, [r8]
   38924:	cmnmi	r6, #1459617792	; 0x57000000
   38928:	strbcc	r8, [r0, r0]!
   3892c:	movtmi	ip, #4985	; 0x1379
   38930:	ldrtcs	r0, [r4], -r0
   38934:	movwmi	r6, #52213	; 0xcbf5
   38938:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3893c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38940:	strb	r0, [r0, #-0]
   38944:	adcmi	r3, r2, #156	; 0x9c
   38948:	andge	r0, r0, #0
   3894c:	rsbmi	r1, sp, #148, 20	; 0x94000
   38950:	stmda	r0, {}	; <UNPREDICTABLE>
   38954:	eorsmi	r4, r7, #7733248	; 0x760000
   38958:	andcs	r0, r0, r0
   3895c:	andmi	sl, r2, #95	; 0x5f
   38960:	andeq	r0, r0, r0
   38964:	bicmi	ip, sp, r5, ror #26
   38968:	andeq	r0, r0, r0
   3896c:	orrsmi	sp, r7, r4, lsl #15
   38970:	andeq	r0, r0, r0
   38974:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   38978:	andeq	r0, r0, r0
   3897c:	smlawbmi	lr, r0, r4, r8
   38980:	andeq	r0, r0, r0
   38984:	rscsmi	r6, r8, r0, lsl #20
   38988:	andeq	r0, r0, r0
   3898c:	sbcmi	r8, r3, r0, lsl #16
   38990:	andeq	r0, r0, r0
   38994:	addmi	r4, pc, r0
   38998:	andeq	r0, r0, r0
   3899c:	subsmi	r0, r9, r0
   389a0:	push	{r4, sl, fp, lr}
   389a4:	add	fp, sp, #8
   389a8:	sub	sp, sp, #32
   389ac:	ldr	ip, [fp, #12]
   389b0:	ldr	lr, [fp, #8]
   389b4:	ldr	r4, [fp, #16]
   389b8:	str	r0, [fp, #-16]
   389bc:	str	r1, [sp, #20]
   389c0:	str	r2, [sp, #16]
   389c4:	str	r3, [sp, #12]
   389c8:	str	ip, [sp, #4]
   389cc:	str	lr, [sp]
   389d0:	ldr	r0, [sp, #12]
   389d4:	cmp	r0, #0
   389d8:	beq	389f8 <flatcc_json_parser_struct_as_root@@Base+0x1284>
   389dc:	ldr	r0, [fp, #-16]
   389e0:	ldr	r1, [sp, #20]
   389e4:	ldr	r2, [sp, #16]
   389e8:	movw	r3, #8
   389ec:	bl	33158 <flatcc_json_parser_set_error@@Base>
   389f0:	str	r0, [fp, #-12]
   389f4:	b	38a40 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   389f8:	ldr	r0, [sp]
   389fc:	ldr	r1, [sp, #4]
   38a00:	subs	r0, r0, #256	; 0x100
   38a04:	sbcs	r1, r1, #0
   38a08:	bcc	38a2c <flatcc_json_parser_struct_as_root@@Base+0x12b8>
   38a0c:	b	38a10 <flatcc_json_parser_struct_as_root@@Base+0x129c>
   38a10:	ldr	r0, [fp, #-16]
   38a14:	ldr	r1, [sp, #20]
   38a18:	ldr	r2, [sp, #16]
   38a1c:	movw	r3, #7
   38a20:	bl	33158 <flatcc_json_parser_set_error@@Base>
   38a24:	str	r0, [fp, #-12]
   38a28:	b	38a40 <flatcc_json_parser_struct_as_root@@Base+0x12cc>
   38a2c:	ldrb	r0, [sp]
   38a30:	ldr	r1, [fp, #16]
   38a34:	strb	r0, [r1]
   38a38:	ldr	r0, [sp, #20]
   38a3c:	str	r0, [fp, #-12]
   38a40:	ldr	r0, [fp, #-12]
   38a44:	sub	sp, fp, #8
   38a48:	pop	{r4, sl, fp, pc}
   38a4c:	push	{fp, lr}
   38a50:	mov	fp, sp
   38a54:	sub	sp, sp, #16
   38a58:	str	r0, [fp, #-4]
   38a5c:	str	r1, [sp, #8]
   38a60:	str	r2, [sp, #4]
   38a64:	ldr	r0, [fp, #-4]
   38a68:	ldr	r1, [sp, #8]
   38a6c:	ldr	r2, [sp, #4]
   38a70:	bl	34dac <flatcc_json_parser_float@@Base+0x254>
   38a74:	str	r0, [sp, #8]
   38a78:	ldr	r0, [fp, #-4]
   38a7c:	ldr	r1, [sp, #8]
   38a80:	ldr	r2, [sp, #4]
   38a84:	bl	33ee4 <flatcc_json_parser_skip_constant@@Base+0x104>
   38a88:	str	r0, [sp, #8]
   38a8c:	ldr	r0, [sp, #8]
   38a90:	mov	sp, fp
   38a94:	pop	{fp, pc}
   38a98:	sub	sp, sp, #4
   38a9c:	strb	r0, [sp, #3]
   38aa0:	ldrb	r0, [sp, #3]
   38aa4:	add	sp, sp, #4
   38aa8:	bx	lr
   38aac:	andeq	r0, r0, r0

00038ab0 <flatcc_json_printer_error_string@@Base>:
   38ab0:	sub	sp, sp, #12
   38ab4:	str	r0, [sp, #4]
   38ab8:	ldr	r0, [sp, #4]
   38abc:	cmp	r0, #3
   38ac0:	str	r0, [sp]
   38ac4:	bhi	38b28 <flatcc_json_printer_error_string@@Base+0x78>
   38ac8:	add	r0, pc, #8
   38acc:	ldr	r1, [sp]
   38ad0:	ldr	r2, [r0, r1, lsl #2]
   38ad4:	add	pc, r0, r2
   38ad8:	andeq	r0, r0, r0, lsl r0
   38adc:	andeq	r0, r0, r0, lsr #32
   38ae0:	andeq	r0, r0, r0, lsr r0
   38ae4:	andeq	r0, r0, r0, asr #32
   38ae8:	ldr	r0, [pc, #92]	; 38b4c <flatcc_json_printer_error_string@@Base+0x9c>
   38aec:	add	r0, pc, r0
   38af0:	str	r0, [sp, #8]
   38af4:	b	38b34 <flatcc_json_printer_error_string@@Base+0x84>
   38af8:	ldr	r0, [pc, #72]	; 38b48 <flatcc_json_printer_error_string@@Base+0x98>
   38afc:	add	r0, pc, r0
   38b00:	str	r0, [sp, #8]
   38b04:	b	38b34 <flatcc_json_printer_error_string@@Base+0x84>
   38b08:	ldr	r0, [pc, #52]	; 38b44 <flatcc_json_printer_error_string@@Base+0x94>
   38b0c:	add	r0, pc, r0
   38b10:	str	r0, [sp, #8]
   38b14:	b	38b34 <flatcc_json_printer_error_string@@Base+0x84>
   38b18:	ldr	r0, [pc, #32]	; 38b40 <flatcc_json_printer_error_string@@Base+0x90>
   38b1c:	add	r0, pc, r0
   38b20:	str	r0, [sp, #8]
   38b24:	b	38b34 <flatcc_json_printer_error_string@@Base+0x84>
   38b28:	ldr	r0, [pc, #32]	; 38b50 <flatcc_json_printer_error_string@@Base+0xa0>
   38b2c:	add	r0, pc, r0
   38b30:	str	r0, [sp, #8]
   38b34:	ldr	r0, [sp, #8]
   38b38:	add	sp, sp, #12
   38b3c:	bx	lr
   38b40:	andeq	r1, r1, r5, asr #27
   38b44:	andeq	r3, r1, r9, ror #1
   38b48:	andeq	r3, r1, pc, ror #1
   38b4c:	andeq	r1, r1, r8, lsr #25
   38b50:	muleq	r1, r3, r0

00038b54 <flatcc_json_printer_fmt_float@@Base>:
   38b54:	push	{fp, lr}
   38b58:	mov	fp, sp
   38b5c:	sub	sp, sp, #8
   38b60:	str	r0, [sp, #4]
   38b64:	vstr	s0, [sp]
   38b68:	vldr	s0, [sp]
   38b6c:	vcvt.f64.f32	d0, s0
   38b70:	ldr	r0, [sp, #4]
   38b74:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   38b78:	mov	sp, fp
   38b7c:	pop	{fp, pc}
   38b80:	push	{fp, lr}
   38b84:	mov	fp, sp
   38b88:	sub	sp, sp, #72	; 0x48
   38b8c:	vstr	d0, [fp, #-16]
   38b90:	str	r0, [fp, #-20]	; 0xffffffec
   38b94:	vldr	d0, [fp, #-16]
   38b98:	bl	43f80 <flatcc_json_printer_clear@@Base+0x5c>
   38b9c:	str	r1, [sp, #28]
   38ba0:	str	r0, [sp, #24]
   38ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   38ba8:	str	r0, [sp, #20]
   38bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   38bb0:	movw	r1, #0
   38bb4:	cmp	r0, r1
   38bb8:	beq	38bc0 <flatcc_json_printer_fmt_float@@Base+0x6c>
   38bbc:	b	38be0 <flatcc_json_printer_fmt_float@@Base+0x8c>
   38bc0:	ldr	r0, [pc, #1304]	; 390e0 <flatcc_json_printer_fmt_float@@Base+0x58c>
   38bc4:	add	r0, pc, r0
   38bc8:	ldr	r1, [pc, #1300]	; 390e4 <flatcc_json_printer_fmt_float@@Base+0x590>
   38bcc:	add	r1, pc, r1
   38bd0:	ldr	r2, [pc, #1296]	; 390e8 <flatcc_json_printer_fmt_float@@Base+0x594>
   38bd4:	add	r3, pc, r2
   38bd8:	movw	r2, #189	; 0xbd
   38bdc:	bl	14f08 <__assert_fail@plt>
   38be0:	ldr	r0, [sp, #24]
   38be4:	ldr	r1, [sp, #28]
   38be8:	lsl	r1, r1, #1
   38bec:	orr	r1, r1, r0, lsr #31
   38bf0:	mov	r2, #1
   38bf4:	rsbs	r0, r2, r0, lsl #1
   38bf8:	movw	r2, #0
   38bfc:	movt	r2, #65504	; 0xffe0
   38c00:	sbcs	r1, r1, r2
   38c04:	bcc	38c2c <flatcc_json_printer_fmt_float@@Base+0xd8>
   38c08:	b	38c0c <flatcc_json_printer_fmt_float@@Base+0xb8>
   38c0c:	ldr	r0, [pc, #1244]	; 390f0 <flatcc_json_printer_fmt_float@@Base+0x59c>
   38c10:	add	r1, pc, r0
   38c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   38c18:	ldr	r3, [sp, #24]
   38c1c:	ldr	r2, [sp, #28]
   38c20:	bl	14ef0 <sprintf@plt>
   38c24:	str	r0, [fp, #-4]
   38c28:	b	390d4 <flatcc_json_printer_fmt_float@@Base+0x580>
   38c2c:	ldrb	r0, [sp, #31]
   38c30:	tst	r0, #128	; 0x80
   38c34:	beq	38c68 <flatcc_json_printer_fmt_float@@Base+0x114>
   38c38:	b	38c3c <flatcc_json_printer_fmt_float@@Base+0xe8>
   38c3c:	ldr	r0, [sp, #20]
   38c40:	add	r1, r0, #1
   38c44:	str	r1, [sp, #20]
   38c48:	mov	r1, #45	; 0x2d
   38c4c:	strb	r1, [r0]
   38c50:	vldr	d16, [fp, #-16]
   38c54:	vneg.f64	d16, d16
   38c58:	vstr	d16, [fp, #-16]
   38c5c:	ldr	r0, [sp, #28]
   38c60:	eor	r0, r0, #-2147483648	; 0x80000000
   38c64:	str	r0, [sp, #28]
   38c68:	ldr	r0, [sp, #24]
   38c6c:	ldr	r1, [sp, #28]
   38c70:	orr	r0, r0, r1
   38c74:	cmp	r0, #0
   38c78:	bne	38cb4 <flatcc_json_printer_fmt_float@@Base+0x160>
   38c7c:	b	38c80 <flatcc_json_printer_fmt_float@@Base+0x12c>
   38c80:	ldr	r0, [sp, #20]
   38c84:	add	r1, r0, #1
   38c88:	str	r1, [sp, #20]
   38c8c:	movw	r1, #48	; 0x30
   38c90:	strb	r1, [r0]
   38c94:	ldr	r0, [sp, #20]
   38c98:	movw	r1, #0
   38c9c:	strb	r1, [r0]
   38ca0:	ldr	r0, [sp, #20]
   38ca4:	ldr	r1, [fp, #-20]	; 0xffffffec
   38ca8:	sub	r0, r0, r1
   38cac:	str	r0, [fp, #-4]
   38cb0:	b	390d4 <flatcc_json_printer_fmt_float@@Base+0x580>
   38cb4:	ldr	r0, [sp, #24]
   38cb8:	ldr	r1, [sp, #28]
   38cbc:	movw	r2, #0
   38cc0:	movt	r2, #32752	; 0x7ff0
   38cc4:	eor	r1, r1, r2
   38cc8:	orr	r0, r0, r1
   38ccc:	cmp	r0, #0
   38cd0:	bne	38d34 <flatcc_json_printer_fmt_float@@Base+0x1e0>
   38cd4:	b	38cd8 <flatcc_json_printer_fmt_float@@Base+0x184>
   38cd8:	ldr	r0, [sp, #20]
   38cdc:	add	r1, r0, #1
   38ce0:	str	r1, [sp, #20]
   38ce4:	movw	r1, #105	; 0x69
   38ce8:	strb	r1, [r0]
   38cec:	ldr	r0, [sp, #20]
   38cf0:	add	r1, r0, #1
   38cf4:	str	r1, [sp, #20]
   38cf8:	movw	r1, #110	; 0x6e
   38cfc:	strb	r1, [r0]
   38d00:	ldr	r0, [sp, #20]
   38d04:	add	r1, r0, #1
   38d08:	str	r1, [sp, #20]
   38d0c:	movw	r1, #102	; 0x66
   38d10:	strb	r1, [r0]
   38d14:	ldr	r0, [sp, #20]
   38d18:	movw	r1, #0
   38d1c:	strb	r1, [r0]
   38d20:	ldr	r0, [sp, #20]
   38d24:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d28:	sub	r0, r0, r1
   38d2c:	str	r0, [fp, #-4]
   38d30:	b	390d4 <flatcc_json_printer_fmt_float@@Base+0x580>
   38d34:	vldr	d0, [fp, #-16]
   38d38:	ldr	r0, [sp, #20]
   38d3c:	sub	r1, fp, #28
   38d40:	sub	r2, fp, #24
   38d44:	bl	43fa0 <flatcc_json_printer_clear@@Base+0x7c>
   38d48:	str	r0, [fp, #-32]	; 0xffffffe0
   38d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38d50:	cmp	r0, #0
   38d54:	bne	38d88 <flatcc_json_printer_fmt_float@@Base+0x234>
   38d58:	ldr	r0, [pc, #908]	; 390ec <flatcc_json_printer_fmt_float@@Base+0x598>
   38d5c:	add	r1, pc, r0
   38d60:	ldr	r0, [sp, #20]
   38d64:	vldr	d16, [fp, #-16]
   38d68:	vmov	r2, r3, d16
   38d6c:	bl	14ef0 <sprintf@plt>
   38d70:	ldr	r1, [sp, #20]
   38d74:	ldr	r2, [fp, #-20]	; 0xffffffec
   38d78:	sub	r1, r1, r2
   38d7c:	add	r0, r0, r1
   38d80:	str	r0, [fp, #-4]
   38d84:	b	390d4 <flatcc_json_printer_fmt_float@@Base+0x580>
   38d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38d8c:	movw	r1, #0
   38d90:	sub	r0, r1, r0
   38d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38d98:	sub	r1, r1, #1
   38d9c:	movw	r2, #1
   38da0:	cmp	r2, r1
   38da4:	str	r0, [sp, #16]
   38da8:	blt	38db8 <flatcc_json_printer_fmt_float@@Base+0x264>
   38dac:	movw	r0, #1
   38db0:	str	r0, [sp, #12]
   38db4:	b	38dc4 <flatcc_json_printer_fmt_float@@Base+0x270>
   38db8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38dbc:	sub	r0, r0, #1
   38dc0:	str	r0, [sp, #12]
   38dc4:	ldr	r0, [sp, #12]
   38dc8:	ldr	r1, [sp, #16]
   38dcc:	cmp	r1, r0
   38dd0:	bgt	38de8 <flatcc_json_printer_fmt_float@@Base+0x294>
   38dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38dd8:	movw	r1, #0
   38ddc:	sub	r0, r1, r0
   38de0:	str	r0, [sp, #8]
   38de4:	b	38e1c <flatcc_json_printer_fmt_float@@Base+0x2c8>
   38de8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38dec:	sub	r0, r0, #1
   38df0:	movw	r1, #1
   38df4:	cmp	r1, r0
   38df8:	blt	38e08 <flatcc_json_printer_fmt_float@@Base+0x2b4>
   38dfc:	movw	r0, #1
   38e00:	str	r0, [sp, #4]
   38e04:	b	38e14 <flatcc_json_printer_fmt_float@@Base+0x2c0>
   38e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38e0c:	sub	r0, r0, #1
   38e10:	str	r0, [sp, #4]
   38e14:	ldr	r0, [sp, #4]
   38e18:	str	r0, [sp, #8]
   38e1c:	ldr	r0, [sp, #8]
   38e20:	str	r0, [sp, #36]	; 0x24
   38e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38e28:	cmp	r0, #0
   38e2c:	bge	38f04 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   38e30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38e34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38e38:	add	r0, r0, r1
   38e3c:	cmn	r0, #3
   38e40:	ble	38f04 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   38e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38e48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38e4c:	movw	r2, #0
   38e50:	sub	r1, r2, r1
   38e54:	cmp	r0, r1
   38e58:	bgt	38f04 <flatcc_json_printer_fmt_float@@Base+0x3b0>
   38e5c:	ldr	r0, [sp, #20]
   38e60:	add	r0, r0, #2
   38e64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38e68:	movw	r2, #0
   38e6c:	sub	r1, r2, r1
   38e70:	add	r0, r0, r1
   38e74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38e78:	sub	r1, r2, r1
   38e7c:	add	r0, r0, r1
   38e80:	ldr	r1, [sp, #20]
   38e84:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38e88:	bl	14e18 <memmove@plt>
   38e8c:	ldr	r0, [sp, #20]
   38e90:	movw	r1, #48	; 0x30
   38e94:	strb	r1, [r0]
   38e98:	ldr	r0, [sp, #20]
   38e9c:	movw	r1, #46	; 0x2e
   38ea0:	strb	r1, [r0, #1]
   38ea4:	movw	r0, #2
   38ea8:	str	r0, [sp, #32]
   38eac:	ldr	r0, [sp, #32]
   38eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38eb4:	movw	r2, #2
   38eb8:	sub	r1, r2, r1
   38ebc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38ec0:	sub	r1, r1, r2
   38ec4:	cmp	r0, r1
   38ec8:	bge	38ef0 <flatcc_json_printer_fmt_float@@Base+0x39c>
   38ecc:	ldr	r0, [sp, #20]
   38ed0:	ldr	r1, [sp, #32]
   38ed4:	add	r0, r0, r1
   38ed8:	movw	r1, #48	; 0x30
   38edc:	strb	r1, [r0]
   38ee0:	ldr	r0, [sp, #32]
   38ee4:	add	r0, r0, #1
   38ee8:	str	r0, [sp, #32]
   38eec:	b	38eac <flatcc_json_printer_fmt_float@@Base+0x358>
   38ef0:	ldr	r0, [sp, #32]
   38ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38ef8:	add	r0, r1, r0
   38efc:	str	r0, [fp, #-28]	; 0xffffffe4
   38f00:	b	390a8 <flatcc_json_printer_fmt_float@@Base+0x554>
   38f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38f08:	cmp	r0, #0
   38f0c:	bge	38ff8 <flatcc_json_printer_fmt_float@@Base+0x4a4>
   38f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   38f14:	cmp	r0, #1
   38f18:	ble	38ff8 <flatcc_json_printer_fmt_float@@Base+0x4a4>
   38f1c:	movw	r0, #0
   38f20:	str	r0, [sp, #32]
   38f24:	ldr	r0, [sp, #32]
   38f28:	ldr	r1, [sp, #36]	; 0x24
   38f2c:	cmp	r0, r1
   38f30:	bge	38f78 <flatcc_json_printer_fmt_float@@Base+0x424>
   38f34:	ldr	r0, [sp, #20]
   38f38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38f3c:	ldr	r2, [sp, #32]
   38f40:	sub	r1, r1, r2
   38f44:	sub	r1, r1, #1
   38f48:	add	r0, r0, r1
   38f4c:	ldrb	r0, [r0]
   38f50:	ldr	r1, [sp, #20]
   38f54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38f58:	ldr	r3, [sp, #32]
   38f5c:	sub	r2, r2, r3
   38f60:	add	r1, r1, r2
   38f64:	strb	r0, [r1]
   38f68:	ldr	r0, [sp, #32]
   38f6c:	add	r0, r0, #1
   38f70:	str	r0, [sp, #32]
   38f74:	b	38f24 <flatcc_json_printer_fmt_float@@Base+0x3d0>
   38f78:	ldr	r0, [sp, #20]
   38f7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38f80:	add	r2, r1, #1
   38f84:	str	r2, [fp, #-28]	; 0xffffffe4
   38f88:	ldr	r2, [sp, #36]	; 0x24
   38f8c:	sub	r1, r1, r2
   38f90:	add	r0, r0, r1
   38f94:	movw	r1, #46	; 0x2e
   38f98:	strb	r1, [r0]
   38f9c:	ldr	r0, [sp, #36]	; 0x24
   38fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   38fa4:	add	r0, r1, r0
   38fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   38fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38fb0:	cmp	r0, #0
   38fb4:	beq	38ff4 <flatcc_json_printer_fmt_float@@Base+0x4a0>
   38fb8:	ldr	r0, [sp, #20]
   38fbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38fc0:	add	r2, r1, #1
   38fc4:	str	r2, [fp, #-28]	; 0xffffffe4
   38fc8:	add	r0, r0, r1
   38fcc:	movw	r1, #101	; 0x65
   38fd0:	strb	r1, [r0]
   38fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38fd8:	ldr	r1, [sp, #20]
   38fdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38fe0:	add	r1, r1, r2
   38fe4:	bl	4436c <flatcc_json_printer_clear@@Base+0x448>
   38fe8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38fec:	add	r0, r1, r0
   38ff0:	str	r0, [fp, #-28]	; 0xffffffe4
   38ff4:	b	390a4 <flatcc_json_printer_fmt_float@@Base+0x550>
   38ff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38ffc:	cmp	r0, #0
   39000:	blt	39010 <flatcc_json_printer_fmt_float@@Base+0x4bc>
   39004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39008:	cmp	r0, #2
   3900c:	ble	39050 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   39010:	ldr	r0, [sp, #20]
   39014:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39018:	add	r2, r1, #1
   3901c:	str	r2, [fp, #-28]	; 0xffffffe4
   39020:	add	r0, r0, r1
   39024:	movw	r1, #101	; 0x65
   39028:	strb	r1, [r0]
   3902c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39030:	ldr	r1, [sp, #20]
   39034:	ldr	r2, [fp, #-28]	; 0xffffffe4
   39038:	add	r1, r1, r2
   3903c:	bl	4436c <flatcc_json_printer_clear@@Base+0x448>
   39040:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39044:	add	r0, r1, r0
   39048:	str	r0, [fp, #-28]	; 0xffffffe4
   3904c:	b	390a0 <flatcc_json_printer_fmt_float@@Base+0x54c>
   39050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39054:	cmp	r0, #0
   39058:	ble	3909c <flatcc_json_printer_fmt_float@@Base+0x548>
   3905c:	b	39060 <flatcc_json_printer_fmt_float@@Base+0x50c>
   39060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39064:	mvn	r1, #0
   39068:	add	r1, r0, r1
   3906c:	str	r1, [fp, #-24]	; 0xffffffe8
   39070:	cmp	r0, #0
   39074:	ble	39098 <flatcc_json_printer_fmt_float@@Base+0x544>
   39078:	ldr	r0, [sp, #20]
   3907c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39080:	add	r2, r1, #1
   39084:	str	r2, [fp, #-28]	; 0xffffffe4
   39088:	add	r0, r0, r1
   3908c:	movw	r1, #48	; 0x30
   39090:	strb	r1, [r0]
   39094:	b	39060 <flatcc_json_printer_fmt_float@@Base+0x50c>
   39098:	b	3909c <flatcc_json_printer_fmt_float@@Base+0x548>
   3909c:	b	390a0 <flatcc_json_printer_fmt_float@@Base+0x54c>
   390a0:	b	390a4 <flatcc_json_printer_fmt_float@@Base+0x550>
   390a4:	b	390a8 <flatcc_json_printer_fmt_float@@Base+0x554>
   390a8:	ldr	r0, [sp, #20]
   390ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   390b0:	add	r0, r0, r1
   390b4:	movw	r1, #0
   390b8:	strb	r1, [r0]
   390bc:	ldr	r0, [sp, #20]
   390c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   390c4:	add	r0, r0, r1
   390c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   390cc:	sub	r0, r0, r1
   390d0:	str	r0, [fp, #-4]
   390d4:	ldr	r0, [fp, #-4]
   390d8:	mov	sp, fp
   390dc:	pop	{fp, pc}
   390e0:	andeq	r3, r1, sl, ror r2
   390e4:	andeq	r3, r1, r6, ror r2
   390e8:	ldrdeq	r3, [r1], -ip
   390ec:	andeq	r3, r1, sl, lsl #3
   390f0:	andeq	r3, r1, r8, asr #5

000390f4 <flatcc_json_printer_fmt_double@@Base>:
   390f4:	push	{fp, lr}
   390f8:	mov	fp, sp
   390fc:	sub	sp, sp, #16
   39100:	str	r0, [fp, #-4]
   39104:	vstr	d0, [sp]
   39108:	vldr	d0, [sp]
   3910c:	ldr	r0, [fp, #-4]
   39110:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   39114:	mov	sp, fp
   39118:	pop	{fp, pc}

0003911c <flatcc_json_printer_fmt_bool@@Base>:
   3911c:	sub	sp, sp, #12
   39120:	str	r0, [sp, #4]
   39124:	str	r1, [sp]
   39128:	ldr	r0, [sp]
   3912c:	cmp	r0, #0
   39130:	beq	3916c <flatcc_json_printer_fmt_bool@@Base+0x50>
   39134:	ldr	r0, [pc, #124]	; 391b8 <flatcc_json_printer_fmt_bool@@Base+0x9c>
   39138:	add	r0, pc, r0
   3913c:	ldr	r1, [sp, #4]
   39140:	ldrb	r2, [r0]
   39144:	strb	r2, [r1]
   39148:	ldrb	r2, [r0, #1]
   3914c:	strb	r2, [r1, #1]
   39150:	ldrb	r2, [r0, #2]
   39154:	strb	r2, [r1, #2]
   39158:	ldrb	r0, [r0, #3]
   3915c:	strb	r0, [r1, #3]
   39160:	movw	r0, #4
   39164:	str	r0, [sp, #8]
   39168:	b	391a8 <flatcc_json_printer_fmt_bool@@Base+0x8c>
   3916c:	ldr	r0, [pc, #64]	; 391b4 <flatcc_json_printer_fmt_bool@@Base+0x98>
   39170:	add	r0, pc, r0
   39174:	ldr	r1, [sp, #4]
   39178:	ldrb	r2, [r0]
   3917c:	strb	r2, [r1]
   39180:	ldrb	r2, [r0, #1]
   39184:	strb	r2, [r1, #1]
   39188:	ldrb	r2, [r0, #2]
   3918c:	strb	r2, [r1, #2]
   39190:	ldrb	r2, [r0, #3]
   39194:	strb	r2, [r1, #3]
   39198:	ldrb	r0, [r0, #4]
   3919c:	strb	r0, [r1, #4]
   391a0:	movw	r0, #5
   391a4:	str	r0, [sp, #8]
   391a8:	ldr	r0, [sp, #8]
   391ac:	add	sp, sp, #12
   391b0:	bx	lr
   391b4:	andeq	pc, r0, r0, lsr lr	; <UNPREDICTABLE>
   391b8:	andeq	pc, r0, r3, ror #28

000391bc <flatcc_json_printer_string@@Base>:
   391bc:	push	{fp, lr}
   391c0:	mov	fp, sp
   391c4:	sub	sp, sp, #16
   391c8:	str	r0, [fp, #-4]
   391cc:	str	r1, [sp, #8]
   391d0:	str	r2, [sp, #4]
   391d4:	ldr	r0, [fp, #-4]
   391d8:	ldr	r1, [sp, #8]
   391dc:	ldr	r2, [sp, #4]
   391e0:	bl	391ec <flatcc_json_printer_string@@Base+0x30>
   391e4:	mov	sp, fp
   391e8:	pop	{fp, pc}
   391ec:	push	{fp, lr}
   391f0:	mov	fp, sp
   391f4:	sub	sp, sp, #32
   391f8:	str	r0, [fp, #-4]
   391fc:	str	r1, [fp, #-8]
   39200:	str	r2, [fp, #-12]
   39204:	ldr	r0, [fp, #-8]
   39208:	str	r0, [sp, #16]
   3920c:	ldr	r0, [fp, #-4]
   39210:	ldr	r1, [r0, #20]
   39214:	add	r2, r1, #1
   39218:	str	r2, [r0, #20]
   3921c:	movw	r0, #34	; 0x22
   39220:	strb	r0, [r1]
   39224:	ldr	r0, [sp, #16]
   39228:	ldrb	r0, [r0]
   3922c:	strb	r0, [sp, #15]
   39230:	ldrb	r0, [sp, #15]
   39234:	cmp	r0, #32
   39238:	movw	r0, #0
   3923c:	str	r0, [sp, #4]
   39240:	blt	3926c <flatcc_json_printer_string@@Base+0xb0>
   39244:	ldrb	r0, [sp, #15]
   39248:	cmp	r0, #34	; 0x22
   3924c:	movw	r0, #0
   39250:	str	r0, [sp, #4]
   39254:	beq	3926c <flatcc_json_printer_string@@Base+0xb0>
   39258:	ldrb	r0, [sp, #15]
   3925c:	cmp	r0, #92	; 0x5c
   39260:	movw	r0, #0
   39264:	movne	r0, #1
   39268:	str	r0, [sp, #4]
   3926c:	ldr	r0, [sp, #4]
   39270:	tst	r0, #1
   39274:	beq	39290 <flatcc_json_printer_string@@Base+0xd4>
   39278:	ldr	r0, [sp, #16]
   3927c:	add	r1, r0, #1
   39280:	str	r1, [sp, #16]
   39284:	ldrb	r0, [r0, #1]
   39288:	strb	r0, [sp, #15]
   3928c:	b	39230 <flatcc_json_printer_string@@Base+0x74>
   39290:	ldr	r0, [sp, #16]
   39294:	ldr	r1, [fp, #-8]
   39298:	sub	r0, r0, r1
   3929c:	str	r0, [sp, #8]
   392a0:	ldr	r0, [fp, #-4]
   392a4:	ldr	r1, [fp, #-8]
   392a8:	ldr	r2, [sp, #8]
   392ac:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   392b0:	ldr	r0, [sp, #8]
   392b4:	ldr	r1, [fp, #-12]
   392b8:	sub	r0, r1, r0
   392bc:	str	r0, [fp, #-12]
   392c0:	ldr	r0, [fp, #-12]
   392c4:	cmp	r0, #0
   392c8:	bne	392d0 <flatcc_json_printer_string@@Base+0x114>
   392cc:	b	3953c <flatcc_json_printer_string@@Base+0x380>
   392d0:	ldr	r0, [sp, #8]
   392d4:	ldr	r1, [fp, #-8]
   392d8:	add	r0, r1, r0
   392dc:	str	r0, [fp, #-8]
   392e0:	ldr	r0, [fp, #-4]
   392e4:	ldr	r1, [r0, #20]
   392e8:	add	r2, r1, #1
   392ec:	str	r2, [r0, #20]
   392f0:	mov	r0, #92	; 0x5c
   392f4:	strb	r0, [r1]
   392f8:	ldrb	r0, [sp, #15]
   392fc:	mov	r1, r0
   39300:	cmp	r0, #8
   39304:	str	r1, [sp]
   39308:	beq	39418 <flatcc_json_printer_string@@Base+0x25c>
   3930c:	b	39310 <flatcc_json_printer_string@@Base+0x154>
   39310:	ldr	r0, [sp]
   39314:	cmp	r0, #9
   39318:	beq	393a8 <flatcc_json_printer_string@@Base+0x1ec>
   3931c:	b	39320 <flatcc_json_printer_string@@Base+0x164>
   39320:	ldr	r0, [sp]
   39324:	cmp	r0, #10
   39328:	beq	393fc <flatcc_json_printer_string@@Base+0x240>
   3932c:	b	39330 <flatcc_json_printer_string@@Base+0x174>
   39330:	ldr	r0, [sp]
   39334:	cmp	r0, #12
   39338:	beq	393c4 <flatcc_json_printer_string@@Base+0x208>
   3933c:	b	39340 <flatcc_json_printer_string@@Base+0x184>
   39340:	ldr	r0, [sp]
   39344:	cmp	r0, #13
   39348:	beq	393e0 <flatcc_json_printer_string@@Base+0x224>
   3934c:	b	39350 <flatcc_json_printer_string@@Base+0x194>
   39350:	ldr	r0, [sp]
   39354:	cmp	r0, #34	; 0x22
   39358:	beq	39370 <flatcc_json_printer_string@@Base+0x1b4>
   3935c:	b	39360 <flatcc_json_printer_string@@Base+0x1a4>
   39360:	ldr	r0, [sp]
   39364:	cmp	r0, #92	; 0x5c
   39368:	beq	3938c <flatcc_json_printer_string@@Base+0x1d0>
   3936c:	b	39434 <flatcc_json_printer_string@@Base+0x278>
   39370:	ldr	r0, [fp, #-4]
   39374:	ldr	r1, [r0, #20]
   39378:	add	r2, r1, #1
   3937c:	str	r2, [r0, #20]
   39380:	movw	r0, #34	; 0x22
   39384:	strb	r0, [r1]
   39388:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   3938c:	ldr	r0, [fp, #-4]
   39390:	ldr	r1, [r0, #20]
   39394:	add	r2, r1, #1
   39398:	str	r2, [r0, #20]
   3939c:	movw	r0, #92	; 0x5c
   393a0:	strb	r0, [r1]
   393a4:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   393a8:	ldr	r0, [fp, #-4]
   393ac:	ldr	r1, [r0, #20]
   393b0:	add	r2, r1, #1
   393b4:	str	r2, [r0, #20]
   393b8:	movw	r0, #116	; 0x74
   393bc:	strb	r0, [r1]
   393c0:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   393c4:	ldr	r0, [fp, #-4]
   393c8:	ldr	r1, [r0, #20]
   393cc:	add	r2, r1, #1
   393d0:	str	r2, [r0, #20]
   393d4:	movw	r0, #102	; 0x66
   393d8:	strb	r0, [r1]
   393dc:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   393e0:	ldr	r0, [fp, #-4]
   393e4:	ldr	r1, [r0, #20]
   393e8:	add	r2, r1, #1
   393ec:	str	r2, [r0, #20]
   393f0:	movw	r0, #114	; 0x72
   393f4:	strb	r0, [r1]
   393f8:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   393fc:	ldr	r0, [fp, #-4]
   39400:	ldr	r1, [r0, #20]
   39404:	add	r2, r1, #1
   39408:	str	r2, [r0, #20]
   3940c:	movw	r0, #110	; 0x6e
   39410:	strb	r0, [r1]
   39414:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   39418:	ldr	r0, [fp, #-4]
   3941c:	ldr	r1, [r0, #20]
   39420:	add	r2, r1, #1
   39424:	str	r2, [r0, #20]
   39428:	movw	r0, #98	; 0x62
   3942c:	strb	r0, [r1]
   39430:	b	39510 <flatcc_json_printer_string@@Base+0x354>
   39434:	ldr	r0, [fp, #-4]
   39438:	ldr	r1, [r0, #20]
   3943c:	add	r2, r1, #1
   39440:	str	r2, [r0, #20]
   39444:	movw	r0, #117	; 0x75
   39448:	strb	r0, [r1]
   3944c:	ldr	r0, [fp, #-4]
   39450:	ldr	r1, [r0, #20]
   39454:	add	r2, r1, #1
   39458:	str	r2, [r0, #20]
   3945c:	movw	r0, #48	; 0x30
   39460:	strb	r0, [r1]
   39464:	ldr	r1, [fp, #-4]
   39468:	ldr	r2, [r1, #20]
   3946c:	add	r3, r2, #1
   39470:	str	r3, [r1, #20]
   39474:	strb	r0, [r2]
   39478:	ldrb	r0, [sp, #15]
   3947c:	asr	r0, r0, #4
   39480:	strb	r0, [sp, #14]
   39484:	ldrb	r0, [sp, #14]
   39488:	cmp	r0, #10
   3948c:	movw	r0, #0
   39490:	movlt	r0, #1
   39494:	tst	r0, #1
   39498:	movw	r0, #48	; 0x30
   3949c:	mov	r1, r0
   394a0:	moveq	r1, #87	; 0x57
   394a4:	ldrb	r2, [sp, #14]
   394a8:	add	r1, r2, r1
   394ac:	strb	r1, [sp, #14]
   394b0:	ldrb	r1, [sp, #14]
   394b4:	ldr	r2, [fp, #-4]
   394b8:	ldr	r3, [r2, #20]
   394bc:	add	ip, r3, #1
   394c0:	str	ip, [r2, #20]
   394c4:	strb	r1, [r3]
   394c8:	ldrb	r1, [sp, #15]
   394cc:	and	r1, r1, #15
   394d0:	strb	r1, [sp, #14]
   394d4:	ldrb	r1, [sp, #14]
   394d8:	cmp	r1, #10
   394dc:	movw	r1, #0
   394e0:	movlt	r1, #1
   394e4:	tst	r1, #1
   394e8:	moveq	r0, #87	; 0x57
   394ec:	ldrb	r1, [sp, #14]
   394f0:	add	r0, r1, r0
   394f4:	strb	r0, [sp, #14]
   394f8:	ldrb	r0, [sp, #14]
   394fc:	ldr	r1, [fp, #-4]
   39500:	ldr	r2, [r1, #20]
   39504:	add	r3, r2, #1
   39508:	str	r3, [r1, #20]
   3950c:	strb	r0, [r2]
   39510:	ldr	r0, [sp, #16]
   39514:	add	r0, r0, #1
   39518:	str	r0, [sp, #16]
   3951c:	ldr	r0, [fp, #-12]
   39520:	mvn	r1, #0
   39524:	add	r0, r0, r1
   39528:	str	r0, [fp, #-12]
   3952c:	ldr	r0, [fp, #-8]
   39530:	add	r0, r0, #1
   39534:	str	r0, [fp, #-8]
   39538:	b	39224 <flatcc_json_printer_string@@Base+0x68>
   3953c:	ldr	r0, [fp, #-4]
   39540:	ldr	r1, [r0, #20]
   39544:	add	r2, r1, #1
   39548:	str	r2, [r0, #20]
   3954c:	movw	r0, #34	; 0x22
   39550:	strb	r0, [r1]
   39554:	mov	sp, fp
   39558:	pop	{fp, pc}

0003955c <flatcc_json_printer_write@@Base>:
   3955c:	push	{fp, lr}
   39560:	mov	fp, sp
   39564:	sub	sp, sp, #16
   39568:	str	r0, [fp, #-4]
   3956c:	str	r1, [sp, #8]
   39570:	str	r2, [sp, #4]
   39574:	ldr	r0, [fp, #-4]
   39578:	ldr	r1, [sp, #8]
   3957c:	ldr	r2, [sp, #4]
   39580:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   39584:	mov	sp, fp
   39588:	pop	{fp, pc}
   3958c:	push	{fp, lr}
   39590:	mov	fp, sp
   39594:	sub	sp, sp, #16
   39598:	str	r0, [fp, #-4]
   3959c:	str	r1, [sp, #8]
   395a0:	str	r2, [sp, #4]
   395a4:	ldr	r0, [fp, #-4]
   395a8:	ldr	r0, [r0, #20]
   395ac:	ldr	r1, [sp, #4]
   395b0:	add	r0, r0, r1
   395b4:	ldr	r1, [fp, #-4]
   395b8:	ldr	r1, [r1, #16]
   395bc:	cmp	r0, r1
   395c0:	bcc	395d8 <flatcc_json_printer_write@@Base+0x7c>
   395c4:	ldr	r0, [fp, #-4]
   395c8:	ldr	r1, [sp, #8]
   395cc:	ldr	r2, [sp, #4]
   395d0:	bl	453a8 <flatcc_json_printer_clear@@Base+0x1484>
   395d4:	b	39600 <flatcc_json_printer_write@@Base+0xa4>
   395d8:	ldr	r0, [fp, #-4]
   395dc:	ldr	r0, [r0, #20]
   395e0:	ldr	r1, [sp, #8]
   395e4:	ldr	r2, [sp, #4]
   395e8:	bl	14e30 <memcpy@plt>
   395ec:	ldr	r0, [sp, #4]
   395f0:	ldr	r1, [fp, #-4]
   395f4:	ldr	r2, [r1, #20]
   395f8:	add	r0, r2, r0
   395fc:	str	r0, [r1, #20]
   39600:	mov	sp, fp
   39604:	pop	{fp, pc}

00039608 <flatcc_json_printer_nl@@Base>:
   39608:	push	{fp, lr}
   3960c:	mov	fp, sp
   39610:	sub	sp, sp, #8
   39614:	str	r0, [sp, #4]
   39618:	ldr	r0, [sp, #4]
   3961c:	ldr	r1, [r0, #20]
   39620:	add	r2, r1, #1
   39624:	str	r2, [r0, #20]
   39628:	movw	r0, #10
   3962c:	strb	r0, [r1]
   39630:	ldr	r0, [sp, #4]
   39634:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   39638:	mov	sp, fp
   3963c:	pop	{fp, pc}
   39640:	push	{fp, lr}
   39644:	mov	fp, sp
   39648:	sub	sp, sp, #8
   3964c:	str	r0, [sp, #4]
   39650:	ldr	r0, [sp, #4]
   39654:	ldr	r0, [r0, #20]
   39658:	ldr	r1, [sp, #4]
   3965c:	ldr	r1, [r1, #16]
   39660:	cmp	r0, r1
   39664:	bcc	39688 <flatcc_json_printer_nl@@Base+0x80>
   39668:	ldr	r0, [sp, #4]
   3966c:	ldr	r0, [r0, #44]	; 0x2c
   39670:	ldr	r1, [sp, #4]
   39674:	str	r0, [sp]
   39678:	mov	r0, r1
   3967c:	movw	r1, #0
   39680:	ldr	r2, [sp]
   39684:	blx	r2
   39688:	mov	sp, fp
   3968c:	pop	{fp, pc}

00039690 <flatcc_json_printer_char@@Base>:
   39690:	sub	sp, sp, #8
   39694:	str	r0, [sp, #4]
   39698:	strb	r1, [sp, #3]
   3969c:	ldrb	r0, [sp, #3]
   396a0:	ldr	r1, [sp, #4]
   396a4:	ldr	r2, [r1, #20]
   396a8:	add	r3, r2, #1
   396ac:	str	r3, [r1, #20]
   396b0:	strb	r0, [r2]
   396b4:	add	sp, sp, #8
   396b8:	bx	lr

000396bc <flatcc_json_printer_indent@@Base>:
   396bc:	push	{fp, lr}
   396c0:	mov	fp, sp
   396c4:	sub	sp, sp, #8
   396c8:	str	r0, [sp, #4]
   396cc:	ldr	r0, [sp, #4]
   396d0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   396d4:	mov	sp, fp
   396d8:	pop	{fp, pc}
   396dc:	push	{fp, lr}
   396e0:	mov	fp, sp
   396e4:	sub	sp, sp, #8
   396e8:	str	r0, [sp, #4]
   396ec:	ldr	r0, [sp, #4]
   396f0:	ldr	r0, [r0, #32]
   396f4:	ldr	r1, [sp, #4]
   396f8:	ldrb	r1, [r1, #25]
   396fc:	mul	r0, r0, r1
   39700:	str	r0, [sp]
   39704:	ldr	r0, [sp, #4]
   39708:	ldr	r0, [r0, #20]
   3970c:	ldr	r1, [sp]
   39710:	add	r0, r0, r1
   39714:	ldr	r1, [sp, #4]
   39718:	ldr	r1, [r1, #16]
   3971c:	cmp	r0, r1
   39720:	bls	39734 <flatcc_json_printer_indent@@Base+0x78>
   39724:	ldr	r0, [sp, #4]
   39728:	ldr	r1, [sp]
   3972c:	bl	454d4 <flatcc_json_printer_clear@@Base+0x15b0>
   39730:	b	39760 <flatcc_json_printer_indent@@Base+0xa4>
   39734:	ldr	r0, [sp, #4]
   39738:	ldr	r0, [r0, #20]
   3973c:	ldr	r2, [sp]
   39740:	movw	r1, #32
   39744:	and	r1, r1, #255	; 0xff
   39748:	bl	14ec0 <memset@plt>
   3974c:	ldr	r0, [sp]
   39750:	ldr	r1, [sp, #4]
   39754:	ldr	r2, [r1, #20]
   39758:	add	r0, r2, r0
   3975c:	str	r0, [r1, #20]
   39760:	mov	sp, fp
   39764:	pop	{fp, pc}

00039768 <flatcc_json_printer_add_level@@Base>:
   39768:	sub	sp, sp, #8
   3976c:	str	r0, [sp, #4]
   39770:	str	r1, [sp]
   39774:	ldr	r0, [sp]
   39778:	ldr	r1, [sp, #4]
   3977c:	ldr	r2, [r1, #32]
   39780:	add	r0, r2, r0
   39784:	str	r0, [r1, #32]
   39788:	add	sp, sp, #8
   3978c:	bx	lr

00039790 <flatcc_json_printer_get_level@@Base>:
   39790:	sub	sp, sp, #4
   39794:	str	r0, [sp]
   39798:	ldr	r0, [sp]
   3979c:	ldr	r0, [r0, #32]
   397a0:	add	sp, sp, #4
   397a4:	bx	lr

000397a8 <flatcc_json_printer_uint8@@Base>:
   397a8:	push	{fp, lr}
   397ac:	mov	fp, sp
   397b0:	sub	sp, sp, #8
   397b4:	str	r0, [sp, #4]
   397b8:	strb	r1, [sp, #3]
   397bc:	ldrb	r0, [sp, #3]
   397c0:	ldr	r1, [sp, #4]
   397c4:	ldr	r1, [r1, #20]
   397c8:	and	r0, r0, #255	; 0xff
   397cc:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   397d0:	ldr	r1, [sp, #4]
   397d4:	ldr	r2, [r1, #20]
   397d8:	add	r0, r2, r0
   397dc:	str	r0, [r1, #20]
   397e0:	mov	sp, fp
   397e4:	pop	{fp, pc}
   397e8:	sub	sp, sp, #16
   397ec:	strb	r0, [sp, #11]
   397f0:	str	r1, [sp, #4]
   397f4:	ldrb	r0, [sp, #11]
   397f8:	cmp	r0, #100	; 0x64
   397fc:	blt	398a8 <flatcc_json_printer_uint8@@Base+0x100>
   39800:	ldr	r0, [pc, #368]	; 39978 <flatcc_json_printer_uint8@@Base+0x1d0>
   39804:	add	r0, pc, r0
   39808:	ldr	r1, [sp, #4]
   3980c:	add	r1, r1, #3
   39810:	str	r1, [sp, #4]
   39814:	ldr	r1, [sp, #4]
   39818:	mov	r2, #0
   3981c:	strb	r2, [r1]
   39820:	ldr	r1, [sp, #4]
   39824:	sub	r1, r1, #2
   39828:	str	r1, [sp, #4]
   3982c:	ldrb	r1, [sp, #11]
   39830:	movw	r2, #34079	; 0x851f
   39834:	movt	r2, #20971	; 0x51eb
   39838:	umull	r2, r3, r1, r2
   3983c:	lsr	r3, r3, #5
   39840:	mov	ip, #100	; 0x64
   39844:	mls	r1, r3, ip, r1
   39848:	lsl	r1, r1, #1
   3984c:	add	r0, r0, r1
   39850:	str	r0, [sp]
   39854:	ldrb	r0, [sp, #11]
   39858:	movw	r1, #100	; 0x64
   3985c:	sdiv	r0, r0, r1
   39860:	strb	r0, [sp, #11]
   39864:	ldr	r0, [sp]
   39868:	ldrb	r0, [r0]
   3986c:	ldr	r1, [sp, #4]
   39870:	strb	r0, [r1]
   39874:	ldr	r0, [sp]
   39878:	ldrb	r0, [r0, #1]
   3987c:	ldr	r1, [sp, #4]
   39880:	strb	r0, [r1, #1]
   39884:	ldrb	r0, [sp, #11]
   39888:	add	r0, r0, #48	; 0x30
   3988c:	ldr	r1, [sp, #4]
   39890:	mvn	r3, #0
   39894:	add	r1, r1, r3
   39898:	strb	r0, [r1]
   3989c:	movw	r0, #3
   398a0:	str	r0, [sp, #12]
   398a4:	b	39968 <flatcc_json_printer_uint8@@Base+0x1c0>
   398a8:	ldrb	r0, [sp, #11]
   398ac:	cmp	r0, #10
   398b0:	blt	39944 <flatcc_json_printer_uint8@@Base+0x19c>
   398b4:	ldr	r0, [pc, #184]	; 39974 <flatcc_json_printer_uint8@@Base+0x1cc>
   398b8:	add	r0, pc, r0
   398bc:	ldr	r1, [sp, #4]
   398c0:	add	r1, r1, #2
   398c4:	str	r1, [sp, #4]
   398c8:	ldr	r1, [sp, #4]
   398cc:	mov	r2, #0
   398d0:	strb	r2, [r1]
   398d4:	ldr	r1, [sp, #4]
   398d8:	sub	r1, r1, #2
   398dc:	str	r1, [sp, #4]
   398e0:	ldrb	r1, [sp, #11]
   398e4:	movw	r2, #34079	; 0x851f
   398e8:	movt	r2, #20971	; 0x51eb
   398ec:	umull	r2, r3, r1, r2
   398f0:	lsr	r3, r3, #5
   398f4:	mov	ip, #100	; 0x64
   398f8:	mls	r1, r3, ip, r1
   398fc:	lsl	r1, r1, #1
   39900:	add	r0, r0, r1
   39904:	str	r0, [sp]
   39908:	ldrb	r0, [sp, #11]
   3990c:	movw	r1, #100	; 0x64
   39910:	sdiv	r0, r0, r1
   39914:	strb	r0, [sp, #11]
   39918:	ldr	r0, [sp]
   3991c:	ldrb	r0, [r0]
   39920:	ldr	r1, [sp, #4]
   39924:	strb	r0, [r1]
   39928:	ldr	r0, [sp]
   3992c:	ldrb	r0, [r0, #1]
   39930:	ldr	r1, [sp, #4]
   39934:	strb	r0, [r1, #1]
   39938:	movw	r0, #2
   3993c:	str	r0, [sp, #12]
   39940:	b	39968 <flatcc_json_printer_uint8@@Base+0x1c0>
   39944:	ldr	r0, [sp, #4]
   39948:	movw	r1, #0
   3994c:	strb	r1, [r0, #1]
   39950:	ldrb	r0, [sp, #11]
   39954:	add	r0, r0, #48	; 0x30
   39958:	ldr	r1, [sp, #4]
   3995c:	strb	r0, [r1]
   39960:	movw	r0, #1
   39964:	str	r0, [sp, #12]
   39968:	ldr	r0, [sp, #12]
   3996c:	add	sp, sp, #16
   39970:	bx	lr
   39974:	andeq	r2, r1, r4, ror #27
   39978:	muleq	r1, r8, lr

0003997c <flatcc_json_printer_uint16@@Base>:
   3997c:	push	{fp, lr}
   39980:	mov	fp, sp
   39984:	sub	sp, sp, #8
   39988:	str	r0, [sp, #4]
   3998c:	strh	r1, [sp, #2]
   39990:	ldrh	r0, [sp, #2]
   39994:	ldr	r1, [sp, #4]
   39998:	ldr	r1, [r1, #20]
   3999c:	uxth	r0, r0
   399a0:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   399a4:	ldr	r1, [sp, #4]
   399a8:	ldr	r2, [r1, #20]
   399ac:	add	r0, r2, r0
   399b0:	str	r0, [r1, #20]
   399b4:	mov	sp, fp
   399b8:	pop	{fp, pc}
   399bc:	sub	sp, sp, #24
   399c0:	strh	r0, [sp, #22]
   399c4:	str	r1, [sp, #16]
   399c8:	movw	r0, #0
   399cc:	str	r0, [sp, #12]
   399d0:	ldrh	r0, [sp, #22]
   399d4:	cmp	r0, #1000	; 0x3e8
   399d8:	blt	39a04 <flatcc_json_printer_uint16@@Base+0x88>
   399dc:	ldrh	r0, [sp, #22]
   399e0:	movw	r1, #10000	; 0x2710
   399e4:	cmp	r0, r1
   399e8:	blt	399f8 <flatcc_json_printer_uint16@@Base+0x7c>
   399ec:	movw	r0, #5
   399f0:	str	r0, [sp, #12]
   399f4:	b	39a00 <flatcc_json_printer_uint16@@Base+0x84>
   399f8:	movw	r0, #4
   399fc:	str	r0, [sp, #12]
   39a00:	b	39a44 <flatcc_json_printer_uint16@@Base+0xc8>
   39a04:	ldrh	r0, [sp, #22]
   39a08:	cmp	r0, #100	; 0x64
   39a0c:	blt	39a1c <flatcc_json_printer_uint16@@Base+0xa0>
   39a10:	movw	r0, #3
   39a14:	str	r0, [sp, #12]
   39a18:	b	39a40 <flatcc_json_printer_uint16@@Base+0xc4>
   39a1c:	ldrh	r0, [sp, #22]
   39a20:	cmp	r0, #10
   39a24:	blt	39a34 <flatcc_json_printer_uint16@@Base+0xb8>
   39a28:	movw	r0, #2
   39a2c:	str	r0, [sp, #12]
   39a30:	b	39a3c <flatcc_json_printer_uint16@@Base+0xc0>
   39a34:	movw	r0, #1
   39a38:	str	r0, [sp, #12]
   39a3c:	b	39a40 <flatcc_json_printer_uint16@@Base+0xc4>
   39a40:	b	39a44 <flatcc_json_printer_uint16@@Base+0xc8>
   39a44:	ldr	r0, [sp, #12]
   39a48:	ldr	r1, [sp, #16]
   39a4c:	add	r0, r1, r0
   39a50:	str	r0, [sp, #16]
   39a54:	ldr	r0, [sp, #16]
   39a58:	movw	r1, #0
   39a5c:	strb	r1, [r0]
   39a60:	ldr	r0, [sp, #12]
   39a64:	and	r0, r0, #1
   39a68:	cmp	r0, #0
   39a6c:	beq	39b98 <flatcc_json_printer_uint16@@Base+0x21c>
   39a70:	ldr	r0, [sp, #12]
   39a74:	cmp	r0, #1
   39a78:	str	r0, [sp, #4]
   39a7c:	beq	39b7c <flatcc_json_printer_uint16@@Base+0x200>
   39a80:	b	39a84 <flatcc_json_printer_uint16@@Base+0x108>
   39a84:	ldr	r0, [sp, #4]
   39a88:	cmp	r0, #3
   39a8c:	beq	39b10 <flatcc_json_printer_uint16@@Base+0x194>
   39a90:	b	39a94 <flatcc_json_printer_uint16@@Base+0x118>
   39a94:	ldr	r0, [sp, #4]
   39a98:	cmp	r0, #5
   39a9c:	bne	39b94 <flatcc_json_printer_uint16@@Base+0x218>
   39aa0:	b	39aa4 <flatcc_json_printer_uint16@@Base+0x128>
   39aa4:	ldr	r0, [pc, #512]	; 39cac <flatcc_json_printer_uint16@@Base+0x330>
   39aa8:	add	r0, pc, r0
   39aac:	ldr	r1, [sp, #16]
   39ab0:	sub	r1, r1, #2
   39ab4:	str	r1, [sp, #16]
   39ab8:	ldrh	r1, [sp, #22]
   39abc:	movw	r2, #34079	; 0x851f
   39ac0:	movt	r2, #20971	; 0x51eb
   39ac4:	umull	r2, r3, r1, r2
   39ac8:	lsr	r3, r3, #5
   39acc:	mov	ip, #100	; 0x64
   39ad0:	mls	r1, r3, ip, r1
   39ad4:	lsl	r1, r1, #1
   39ad8:	add	r0, r0, r1
   39adc:	str	r0, [sp, #8]
   39ae0:	ldrh	r0, [sp, #22]
   39ae4:	movw	r1, #100	; 0x64
   39ae8:	sdiv	r0, r0, r1
   39aec:	strh	r0, [sp, #22]
   39af0:	ldr	r0, [sp, #8]
   39af4:	ldrb	r0, [r0]
   39af8:	ldr	r1, [sp, #16]
   39afc:	strb	r0, [r1]
   39b00:	ldr	r0, [sp, #8]
   39b04:	ldrb	r0, [r0, #1]
   39b08:	ldr	r1, [sp, #16]
   39b0c:	strb	r0, [r1, #1]
   39b10:	ldr	r0, [pc, #408]	; 39cb0 <flatcc_json_printer_uint16@@Base+0x334>
   39b14:	add	r0, pc, r0
   39b18:	ldr	r1, [sp, #16]
   39b1c:	sub	r1, r1, #2
   39b20:	str	r1, [sp, #16]
   39b24:	ldrh	r1, [sp, #22]
   39b28:	movw	r2, #34079	; 0x851f
   39b2c:	movt	r2, #20971	; 0x51eb
   39b30:	umull	r2, r3, r1, r2
   39b34:	lsr	r3, r3, #5
   39b38:	mov	ip, #100	; 0x64
   39b3c:	mls	r1, r3, ip, r1
   39b40:	lsl	r1, r1, #1
   39b44:	add	r0, r0, r1
   39b48:	str	r0, [sp, #8]
   39b4c:	ldrh	r0, [sp, #22]
   39b50:	movw	r1, #100	; 0x64
   39b54:	sdiv	r0, r0, r1
   39b58:	strh	r0, [sp, #22]
   39b5c:	ldr	r0, [sp, #8]
   39b60:	ldrb	r0, [r0]
   39b64:	ldr	r1, [sp, #16]
   39b68:	strb	r0, [r1]
   39b6c:	ldr	r0, [sp, #8]
   39b70:	ldrb	r0, [r0, #1]
   39b74:	ldr	r1, [sp, #16]
   39b78:	strb	r0, [r1, #1]
   39b7c:	ldrh	r0, [sp, #22]
   39b80:	add	r0, r0, #48	; 0x30
   39b84:	ldr	r1, [sp, #16]
   39b88:	mvn	r2, #0
   39b8c:	add	r1, r1, r2
   39b90:	strb	r0, [r1]
   39b94:	b	39c98 <flatcc_json_printer_uint16@@Base+0x31c>
   39b98:	ldr	r0, [sp, #12]
   39b9c:	cmp	r0, #2
   39ba0:	str	r0, [sp]
   39ba4:	beq	39c28 <flatcc_json_printer_uint16@@Base+0x2ac>
   39ba8:	b	39bac <flatcc_json_printer_uint16@@Base+0x230>
   39bac:	ldr	r0, [sp]
   39bb0:	cmp	r0, #4
   39bb4:	bne	39c94 <flatcc_json_printer_uint16@@Base+0x318>
   39bb8:	b	39bbc <flatcc_json_printer_uint16@@Base+0x240>
   39bbc:	ldr	r0, [pc, #224]	; 39ca4 <flatcc_json_printer_uint16@@Base+0x328>
   39bc0:	add	r0, pc, r0
   39bc4:	ldr	r1, [sp, #16]
   39bc8:	sub	r1, r1, #2
   39bcc:	str	r1, [sp, #16]
   39bd0:	ldrh	r1, [sp, #22]
   39bd4:	movw	r2, #34079	; 0x851f
   39bd8:	movt	r2, #20971	; 0x51eb
   39bdc:	umull	r2, r3, r1, r2
   39be0:	lsr	r3, r3, #5
   39be4:	mov	ip, #100	; 0x64
   39be8:	mls	r1, r3, ip, r1
   39bec:	lsl	r1, r1, #1
   39bf0:	add	r0, r0, r1
   39bf4:	str	r0, [sp, #8]
   39bf8:	ldrh	r0, [sp, #22]
   39bfc:	movw	r1, #100	; 0x64
   39c00:	sdiv	r0, r0, r1
   39c04:	strh	r0, [sp, #22]
   39c08:	ldr	r0, [sp, #8]
   39c0c:	ldrb	r0, [r0]
   39c10:	ldr	r1, [sp, #16]
   39c14:	strb	r0, [r1]
   39c18:	ldr	r0, [sp, #8]
   39c1c:	ldrb	r0, [r0, #1]
   39c20:	ldr	r1, [sp, #16]
   39c24:	strb	r0, [r1, #1]
   39c28:	ldr	r0, [pc, #120]	; 39ca8 <flatcc_json_printer_uint16@@Base+0x32c>
   39c2c:	add	r0, pc, r0
   39c30:	ldr	r1, [sp, #16]
   39c34:	sub	r1, r1, #2
   39c38:	str	r1, [sp, #16]
   39c3c:	ldrh	r1, [sp, #22]
   39c40:	movw	r2, #34079	; 0x851f
   39c44:	movt	r2, #20971	; 0x51eb
   39c48:	umull	r2, r3, r1, r2
   39c4c:	lsr	r3, r3, #5
   39c50:	mov	ip, #100	; 0x64
   39c54:	mls	r1, r3, ip, r1
   39c58:	lsl	r1, r1, #1
   39c5c:	add	r0, r0, r1
   39c60:	str	r0, [sp, #8]
   39c64:	ldrh	r0, [sp, #22]
   39c68:	movw	r1, #100	; 0x64
   39c6c:	sdiv	r0, r0, r1
   39c70:	strh	r0, [sp, #22]
   39c74:	ldr	r0, [sp, #8]
   39c78:	ldrb	r0, [r0]
   39c7c:	ldr	r1, [sp, #16]
   39c80:	strb	r0, [r1]
   39c84:	ldr	r0, [sp, #8]
   39c88:	ldrb	r0, [r0, #1]
   39c8c:	ldr	r1, [sp, #16]
   39c90:	strb	r0, [r1, #1]
   39c94:	b	39c98 <flatcc_json_printer_uint16@@Base+0x31c>
   39c98:	ldr	r0, [sp, #12]
   39c9c:	add	sp, sp, #24
   39ca0:	bx	lr
   39ca4:	ldrdeq	r2, [r1], -ip
   39ca8:	andeq	r2, r1, r0, ror sl
   39cac:	strdeq	r2, [r1], -r4
   39cb0:	andeq	r2, r1, r8, lsl #23

00039cb4 <flatcc_json_printer_uint32@@Base>:
   39cb4:	push	{fp, lr}
   39cb8:	mov	fp, sp
   39cbc:	sub	sp, sp, #8
   39cc0:	str	r0, [sp, #4]
   39cc4:	str	r1, [sp]
   39cc8:	ldr	r0, [sp]
   39ccc:	ldr	r1, [sp, #4]
   39cd0:	ldr	r1, [r1, #20]
   39cd4:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   39cd8:	ldr	r1, [sp, #4]
   39cdc:	ldr	r2, [r1, #20]
   39ce0:	add	r0, r2, r0
   39ce4:	str	r0, [r1, #20]
   39ce8:	mov	sp, fp
   39cec:	pop	{fp, pc}
   39cf0:	sub	sp, sp, #24
   39cf4:	str	r0, [sp, #20]
   39cf8:	str	r1, [sp, #16]
   39cfc:	movw	r0, #0
   39d00:	str	r0, [sp, #12]
   39d04:	ldr	r0, [sp, #20]
   39d08:	movw	r1, #10000	; 0x2710
   39d0c:	cmp	r0, r1
   39d10:	bcc	39db8 <flatcc_json_printer_uint32@@Base+0x104>
   39d14:	ldr	r0, [pc, #1448]	; 3a2c4 <flatcc_json_printer_uint32@@Base+0x610>
   39d18:	ldr	r1, [sp, #20]
   39d1c:	cmp	r1, r0
   39d20:	bcc	39d6c <flatcc_json_printer_uint32@@Base+0xb8>
   39d24:	ldr	r0, [pc, #1444]	; 3a2d0 <flatcc_json_printer_uint32@@Base+0x61c>
   39d28:	ldr	r1, [sp, #20]
   39d2c:	cmp	r1, r0
   39d30:	bcc	39d40 <flatcc_json_printer_uint32@@Base+0x8c>
   39d34:	movw	r0, #10
   39d38:	str	r0, [sp, #12]
   39d3c:	b	39d68 <flatcc_json_printer_uint32@@Base+0xb4>
   39d40:	ldr	r0, [pc, #1420]	; 3a2d4 <flatcc_json_printer_uint32@@Base+0x620>
   39d44:	ldr	r1, [sp, #20]
   39d48:	cmp	r1, r0
   39d4c:	bcc	39d5c <flatcc_json_printer_uint32@@Base+0xa8>
   39d50:	movw	r0, #9
   39d54:	str	r0, [sp, #12]
   39d58:	b	39d64 <flatcc_json_printer_uint32@@Base+0xb0>
   39d5c:	movw	r0, #8
   39d60:	str	r0, [sp, #12]
   39d64:	b	39d68 <flatcc_json_printer_uint32@@Base+0xb4>
   39d68:	b	39db4 <flatcc_json_printer_uint32@@Base+0x100>
   39d6c:	ldr	r0, [pc, #1364]	; 3a2c8 <flatcc_json_printer_uint32@@Base+0x614>
   39d70:	ldr	r1, [sp, #20]
   39d74:	cmp	r1, r0
   39d78:	bcc	39d88 <flatcc_json_printer_uint32@@Base+0xd4>
   39d7c:	movw	r0, #7
   39d80:	str	r0, [sp, #12]
   39d84:	b	39db0 <flatcc_json_printer_uint32@@Base+0xfc>
   39d88:	ldr	r0, [pc, #1340]	; 3a2cc <flatcc_json_printer_uint32@@Base+0x618>
   39d8c:	ldr	r1, [sp, #20]
   39d90:	cmp	r1, r0
   39d94:	bcc	39da4 <flatcc_json_printer_uint32@@Base+0xf0>
   39d98:	movw	r0, #6
   39d9c:	str	r0, [sp, #12]
   39da0:	b	39dac <flatcc_json_printer_uint32@@Base+0xf8>
   39da4:	movw	r0, #5
   39da8:	str	r0, [sp, #12]
   39dac:	b	39db0 <flatcc_json_printer_uint32@@Base+0xfc>
   39db0:	b	39db4 <flatcc_json_printer_uint32@@Base+0x100>
   39db4:	b	39e10 <flatcc_json_printer_uint32@@Base+0x15c>
   39db8:	ldr	r0, [sp, #20]
   39dbc:	cmp	r0, #100	; 0x64
   39dc0:	bcc	39de8 <flatcc_json_printer_uint32@@Base+0x134>
   39dc4:	ldr	r0, [sp, #20]
   39dc8:	cmp	r0, #1000	; 0x3e8
   39dcc:	bcc	39ddc <flatcc_json_printer_uint32@@Base+0x128>
   39dd0:	movw	r0, #4
   39dd4:	str	r0, [sp, #12]
   39dd8:	b	39de4 <flatcc_json_printer_uint32@@Base+0x130>
   39ddc:	movw	r0, #3
   39de0:	str	r0, [sp, #12]
   39de4:	b	39e0c <flatcc_json_printer_uint32@@Base+0x158>
   39de8:	ldr	r0, [sp, #20]
   39dec:	cmp	r0, #10
   39df0:	bcc	39e00 <flatcc_json_printer_uint32@@Base+0x14c>
   39df4:	movw	r0, #2
   39df8:	str	r0, [sp, #12]
   39dfc:	b	39e08 <flatcc_json_printer_uint32@@Base+0x154>
   39e00:	movw	r0, #1
   39e04:	str	r0, [sp, #12]
   39e08:	b	39e0c <flatcc_json_printer_uint32@@Base+0x158>
   39e0c:	b	39e10 <flatcc_json_printer_uint32@@Base+0x15c>
   39e10:	ldr	r0, [sp, #12]
   39e14:	ldr	r1, [sp, #16]
   39e18:	add	r0, r1, r0
   39e1c:	str	r0, [sp, #16]
   39e20:	ldr	r0, [sp, #16]
   39e24:	movw	r1, #0
   39e28:	strb	r1, [r0]
   39e2c:	ldr	r0, [sp, #12]
   39e30:	and	r0, r0, #1
   39e34:	cmp	r0, #0
   39e38:	beq	3a050 <flatcc_json_printer_uint32@@Base+0x39c>
   39e3c:	ldr	r0, [sp, #12]
   39e40:	sub	r0, r0, #1
   39e44:	cmp	r0, #8
   39e48:	str	r0, [sp, #4]
   39e4c:	bhi	3a04c <flatcc_json_printer_uint32@@Base+0x398>
   39e50:	add	r0, pc, #8
   39e54:	ldr	r1, [sp, #4]
   39e58:	ldr	r2, [r0, r1, lsl #2]
   39e5c:	add	pc, r0, r2
   39e60:	ldrdeq	r0, [r0], -r4
   39e64:	andeq	r0, r0, ip, ror #3
   39e68:	andeq	r0, r0, r8, ror #2
   39e6c:	andeq	r0, r0, ip, ror #3
   39e70:	strdeq	r0, [r0], -ip
   39e74:	andeq	r0, r0, ip, ror #3
   39e78:	muleq	r0, r0, r0
   39e7c:	andeq	r0, r0, ip, ror #3
   39e80:	andeq	r0, r0, r4, lsr #32
   39e84:	ldr	r0, [pc, #1120]	; 3a2ec <flatcc_json_printer_uint32@@Base+0x638>
   39e88:	add	r0, pc, r0
   39e8c:	ldr	r1, [sp, #16]
   39e90:	sub	r1, r1, #2
   39e94:	str	r1, [sp, #16]
   39e98:	ldr	r1, [sp, #20]
   39e9c:	movw	r2, #34079	; 0x851f
   39ea0:	movt	r2, #20971	; 0x51eb
   39ea4:	umull	r2, r3, r1, r2
   39ea8:	lsr	r3, r3, #5
   39eac:	mov	ip, #100	; 0x64
   39eb0:	mls	r1, r3, ip, r1
   39eb4:	lsl	r1, r1, #1
   39eb8:	add	r0, r0, r1
   39ebc:	str	r0, [sp, #8]
   39ec0:	ldr	r0, [sp, #20]
   39ec4:	movw	r1, #100	; 0x64
   39ec8:	udiv	r0, r0, r1
   39ecc:	str	r0, [sp, #20]
   39ed0:	ldr	r0, [sp, #8]
   39ed4:	ldrb	r0, [r0]
   39ed8:	ldr	r1, [sp, #16]
   39edc:	strb	r0, [r1]
   39ee0:	ldr	r0, [sp, #8]
   39ee4:	ldrb	r0, [r0, #1]
   39ee8:	ldr	r1, [sp, #16]
   39eec:	strb	r0, [r1, #1]
   39ef0:	ldr	r0, [pc, #1016]	; 3a2f0 <flatcc_json_printer_uint32@@Base+0x63c>
   39ef4:	add	r0, pc, r0
   39ef8:	ldr	r1, [sp, #16]
   39efc:	sub	r1, r1, #2
   39f00:	str	r1, [sp, #16]
   39f04:	ldr	r1, [sp, #20]
   39f08:	movw	r2, #34079	; 0x851f
   39f0c:	movt	r2, #20971	; 0x51eb
   39f10:	umull	r2, r3, r1, r2
   39f14:	lsr	r3, r3, #5
   39f18:	mov	ip, #100	; 0x64
   39f1c:	mls	r1, r3, ip, r1
   39f20:	lsl	r1, r1, #1
   39f24:	add	r0, r0, r1
   39f28:	str	r0, [sp, #8]
   39f2c:	ldr	r0, [sp, #20]
   39f30:	movw	r1, #100	; 0x64
   39f34:	udiv	r0, r0, r1
   39f38:	str	r0, [sp, #20]
   39f3c:	ldr	r0, [sp, #8]
   39f40:	ldrb	r0, [r0]
   39f44:	ldr	r1, [sp, #16]
   39f48:	strb	r0, [r1]
   39f4c:	ldr	r0, [sp, #8]
   39f50:	ldrb	r0, [r0, #1]
   39f54:	ldr	r1, [sp, #16]
   39f58:	strb	r0, [r1, #1]
   39f5c:	ldr	r0, [pc, #912]	; 3a2f4 <flatcc_json_printer_uint32@@Base+0x640>
   39f60:	add	r0, pc, r0
   39f64:	ldr	r1, [sp, #16]
   39f68:	sub	r1, r1, #2
   39f6c:	str	r1, [sp, #16]
   39f70:	ldr	r1, [sp, #20]
   39f74:	movw	r2, #34079	; 0x851f
   39f78:	movt	r2, #20971	; 0x51eb
   39f7c:	umull	r2, r3, r1, r2
   39f80:	lsr	r3, r3, #5
   39f84:	mov	ip, #100	; 0x64
   39f88:	mls	r1, r3, ip, r1
   39f8c:	lsl	r1, r1, #1
   39f90:	add	r0, r0, r1
   39f94:	str	r0, [sp, #8]
   39f98:	ldr	r0, [sp, #20]
   39f9c:	movw	r1, #100	; 0x64
   39fa0:	udiv	r0, r0, r1
   39fa4:	str	r0, [sp, #20]
   39fa8:	ldr	r0, [sp, #8]
   39fac:	ldrb	r0, [r0]
   39fb0:	ldr	r1, [sp, #16]
   39fb4:	strb	r0, [r1]
   39fb8:	ldr	r0, [sp, #8]
   39fbc:	ldrb	r0, [r0, #1]
   39fc0:	ldr	r1, [sp, #16]
   39fc4:	strb	r0, [r1, #1]
   39fc8:	ldr	r0, [pc, #808]	; 3a2f8 <flatcc_json_printer_uint32@@Base+0x644>
   39fcc:	add	r0, pc, r0
   39fd0:	ldr	r1, [sp, #16]
   39fd4:	sub	r1, r1, #2
   39fd8:	str	r1, [sp, #16]
   39fdc:	ldr	r1, [sp, #20]
   39fe0:	movw	r2, #34079	; 0x851f
   39fe4:	movt	r2, #20971	; 0x51eb
   39fe8:	umull	r2, r3, r1, r2
   39fec:	lsr	r3, r3, #5
   39ff0:	mov	ip, #100	; 0x64
   39ff4:	mls	r1, r3, ip, r1
   39ff8:	lsl	r1, r1, #1
   39ffc:	add	r0, r0, r1
   3a000:	str	r0, [sp, #8]
   3a004:	ldr	r0, [sp, #20]
   3a008:	movw	r1, #100	; 0x64
   3a00c:	udiv	r0, r0, r1
   3a010:	str	r0, [sp, #20]
   3a014:	ldr	r0, [sp, #8]
   3a018:	ldrb	r0, [r0]
   3a01c:	ldr	r1, [sp, #16]
   3a020:	strb	r0, [r1]
   3a024:	ldr	r0, [sp, #8]
   3a028:	ldrb	r0, [r0, #1]
   3a02c:	ldr	r1, [sp, #16]
   3a030:	strb	r0, [r1, #1]
   3a034:	ldr	r0, [sp, #20]
   3a038:	add	r0, r0, #48	; 0x30
   3a03c:	ldr	r1, [sp, #16]
   3a040:	mvn	r2, #0
   3a044:	add	r1, r1, r2
   3a048:	strb	r0, [r1]
   3a04c:	b	3a2b8 <flatcc_json_printer_uint32@@Base+0x604>
   3a050:	ldr	r0, [sp, #12]
   3a054:	sub	r0, r0, #2
   3a058:	cmp	r0, #8
   3a05c:	str	r0, [sp]
   3a060:	bhi	3a2b4 <flatcc_json_printer_uint32@@Base+0x600>
   3a064:	add	r0, pc, #8
   3a068:	ldr	r1, [sp]
   3a06c:	ldr	r2, [r0, r1, lsl #2]
   3a070:	add	pc, r0, r2
   3a074:	ldrdeq	r0, [r0], -r4
   3a078:	andeq	r0, r0, r0, asr #4
   3a07c:	andeq	r0, r0, r8, ror #2
   3a080:	andeq	r0, r0, r0, asr #4
   3a084:	strdeq	r0, [r0], -ip
   3a088:	andeq	r0, r0, r0, asr #4
   3a08c:	muleq	r0, r0, r0
   3a090:	andeq	r0, r0, r0, asr #4
   3a094:	andeq	r0, r0, r4, lsr #32
   3a098:	ldr	r0, [pc, #568]	; 3a2d8 <flatcc_json_printer_uint32@@Base+0x624>
   3a09c:	add	r0, pc, r0
   3a0a0:	ldr	r1, [sp, #16]
   3a0a4:	sub	r1, r1, #2
   3a0a8:	str	r1, [sp, #16]
   3a0ac:	ldr	r1, [sp, #20]
   3a0b0:	movw	r2, #34079	; 0x851f
   3a0b4:	movt	r2, #20971	; 0x51eb
   3a0b8:	umull	r2, r3, r1, r2
   3a0bc:	lsr	r3, r3, #5
   3a0c0:	mov	ip, #100	; 0x64
   3a0c4:	mls	r1, r3, ip, r1
   3a0c8:	lsl	r1, r1, #1
   3a0cc:	add	r0, r0, r1
   3a0d0:	str	r0, [sp, #8]
   3a0d4:	ldr	r0, [sp, #20]
   3a0d8:	movw	r1, #100	; 0x64
   3a0dc:	udiv	r0, r0, r1
   3a0e0:	str	r0, [sp, #20]
   3a0e4:	ldr	r0, [sp, #8]
   3a0e8:	ldrb	r0, [r0]
   3a0ec:	ldr	r1, [sp, #16]
   3a0f0:	strb	r0, [r1]
   3a0f4:	ldr	r0, [sp, #8]
   3a0f8:	ldrb	r0, [r0, #1]
   3a0fc:	ldr	r1, [sp, #16]
   3a100:	strb	r0, [r1, #1]
   3a104:	ldr	r0, [pc, #464]	; 3a2dc <flatcc_json_printer_uint32@@Base+0x628>
   3a108:	add	r0, pc, r0
   3a10c:	ldr	r1, [sp, #16]
   3a110:	sub	r1, r1, #2
   3a114:	str	r1, [sp, #16]
   3a118:	ldr	r1, [sp, #20]
   3a11c:	movw	r2, #34079	; 0x851f
   3a120:	movt	r2, #20971	; 0x51eb
   3a124:	umull	r2, r3, r1, r2
   3a128:	lsr	r3, r3, #5
   3a12c:	mov	ip, #100	; 0x64
   3a130:	mls	r1, r3, ip, r1
   3a134:	lsl	r1, r1, #1
   3a138:	add	r0, r0, r1
   3a13c:	str	r0, [sp, #8]
   3a140:	ldr	r0, [sp, #20]
   3a144:	movw	r1, #100	; 0x64
   3a148:	udiv	r0, r0, r1
   3a14c:	str	r0, [sp, #20]
   3a150:	ldr	r0, [sp, #8]
   3a154:	ldrb	r0, [r0]
   3a158:	ldr	r1, [sp, #16]
   3a15c:	strb	r0, [r1]
   3a160:	ldr	r0, [sp, #8]
   3a164:	ldrb	r0, [r0, #1]
   3a168:	ldr	r1, [sp, #16]
   3a16c:	strb	r0, [r1, #1]
   3a170:	ldr	r0, [pc, #360]	; 3a2e0 <flatcc_json_printer_uint32@@Base+0x62c>
   3a174:	add	r0, pc, r0
   3a178:	ldr	r1, [sp, #16]
   3a17c:	sub	r1, r1, #2
   3a180:	str	r1, [sp, #16]
   3a184:	ldr	r1, [sp, #20]
   3a188:	movw	r2, #34079	; 0x851f
   3a18c:	movt	r2, #20971	; 0x51eb
   3a190:	umull	r2, r3, r1, r2
   3a194:	lsr	r3, r3, #5
   3a198:	mov	ip, #100	; 0x64
   3a19c:	mls	r1, r3, ip, r1
   3a1a0:	lsl	r1, r1, #1
   3a1a4:	add	r0, r0, r1
   3a1a8:	str	r0, [sp, #8]
   3a1ac:	ldr	r0, [sp, #20]
   3a1b0:	movw	r1, #100	; 0x64
   3a1b4:	udiv	r0, r0, r1
   3a1b8:	str	r0, [sp, #20]
   3a1bc:	ldr	r0, [sp, #8]
   3a1c0:	ldrb	r0, [r0]
   3a1c4:	ldr	r1, [sp, #16]
   3a1c8:	strb	r0, [r1]
   3a1cc:	ldr	r0, [sp, #8]
   3a1d0:	ldrb	r0, [r0, #1]
   3a1d4:	ldr	r1, [sp, #16]
   3a1d8:	strb	r0, [r1, #1]
   3a1dc:	ldr	r0, [pc, #256]	; 3a2e4 <flatcc_json_printer_uint32@@Base+0x630>
   3a1e0:	add	r0, pc, r0
   3a1e4:	ldr	r1, [sp, #16]
   3a1e8:	sub	r1, r1, #2
   3a1ec:	str	r1, [sp, #16]
   3a1f0:	ldr	r1, [sp, #20]
   3a1f4:	movw	r2, #34079	; 0x851f
   3a1f8:	movt	r2, #20971	; 0x51eb
   3a1fc:	umull	r2, r3, r1, r2
   3a200:	lsr	r3, r3, #5
   3a204:	mov	ip, #100	; 0x64
   3a208:	mls	r1, r3, ip, r1
   3a20c:	lsl	r1, r1, #1
   3a210:	add	r0, r0, r1
   3a214:	str	r0, [sp, #8]
   3a218:	ldr	r0, [sp, #20]
   3a21c:	movw	r1, #100	; 0x64
   3a220:	udiv	r0, r0, r1
   3a224:	str	r0, [sp, #20]
   3a228:	ldr	r0, [sp, #8]
   3a22c:	ldrb	r0, [r0]
   3a230:	ldr	r1, [sp, #16]
   3a234:	strb	r0, [r1]
   3a238:	ldr	r0, [sp, #8]
   3a23c:	ldrb	r0, [r0, #1]
   3a240:	ldr	r1, [sp, #16]
   3a244:	strb	r0, [r1, #1]
   3a248:	ldr	r0, [pc, #152]	; 3a2e8 <flatcc_json_printer_uint32@@Base+0x634>
   3a24c:	add	r0, pc, r0
   3a250:	ldr	r1, [sp, #16]
   3a254:	sub	r1, r1, #2
   3a258:	str	r1, [sp, #16]
   3a25c:	ldr	r1, [sp, #20]
   3a260:	movw	r2, #34079	; 0x851f
   3a264:	movt	r2, #20971	; 0x51eb
   3a268:	umull	r2, r3, r1, r2
   3a26c:	lsr	r3, r3, #5
   3a270:	mov	ip, #100	; 0x64
   3a274:	mls	r1, r3, ip, r1
   3a278:	lsl	r1, r1, #1
   3a27c:	add	r0, r0, r1
   3a280:	str	r0, [sp, #8]
   3a284:	ldr	r0, [sp, #20]
   3a288:	movw	r1, #100	; 0x64
   3a28c:	udiv	r0, r0, r1
   3a290:	str	r0, [sp, #20]
   3a294:	ldr	r0, [sp, #8]
   3a298:	ldrb	r0, [r0]
   3a29c:	ldr	r1, [sp, #16]
   3a2a0:	strb	r0, [r1]
   3a2a4:	ldr	r0, [sp, #8]
   3a2a8:	ldrb	r0, [r0, #1]
   3a2ac:	ldr	r1, [sp, #16]
   3a2b0:	strb	r0, [r1, #1]
   3a2b4:	b	3a2b8 <flatcc_json_printer_uint32@@Base+0x604>
   3a2b8:	ldr	r0, [sp, #12]
   3a2bc:	add	sp, sp, #24
   3a2c0:	bx	lr
   3a2c4:	addseq	r9, r8, r0, lsl #13
   3a2c8:	andeq	r4, pc, r0, asr #4
   3a2cc:	andeq	r8, r1, r0, lsr #13
   3a2d0:	blcc	fe6ecad8 <__bss_end__@@Base+0xfe68f70c>
   3a2d4:	ldrbeq	lr, [r5, #256]!	; 0x100
   3a2d8:	andeq	r2, r1, r0, lsl #12
   3a2dc:	muleq	r1, r4, r5
   3a2e0:	andeq	r2, r1, r8, lsr #10
   3a2e4:			; <UNDEFINED> instruction: 0x000124bc
   3a2e8:	andeq	r2, r1, r0, asr r4
   3a2ec:	andeq	r2, r1, r4, lsl r8
   3a2f0:	andeq	r2, r1, r8, lsr #15
   3a2f4:	andeq	r2, r1, ip, lsr r7
   3a2f8:	ldrdeq	r2, [r1], -r0

0003a2fc <flatcc_json_printer_uint64@@Base>:
   3a2fc:	push	{fp, lr}
   3a300:	mov	fp, sp
   3a304:	sub	sp, sp, #16
   3a308:	str	r0, [fp, #-4]
   3a30c:	str	r3, [sp, #4]
   3a310:	str	r2, [sp]
   3a314:	ldr	r0, [sp]
   3a318:	ldr	r1, [sp, #4]
   3a31c:	ldr	r2, [fp, #-4]
   3a320:	ldr	r2, [r2, #20]
   3a324:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3a328:	ldr	r1, [fp, #-4]
   3a32c:	ldr	r2, [r1, #20]
   3a330:	add	r0, r2, r0
   3a334:	str	r0, [r1, #20]
   3a338:	mov	sp, fp
   3a33c:	pop	{fp, pc}
   3a340:	push	{fp, lr}
   3a344:	mov	fp, sp
   3a348:	sub	sp, sp, #280	; 0x118
   3a34c:	str	r0, [fp, #-16]
   3a350:	str	r1, [fp, #-12]
   3a354:	str	r2, [fp, #-20]	; 0xffffffec
   3a358:	mov	r0, #0
   3a35c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a360:	str	r0, [fp, #-36]	; 0xffffffdc
   3a364:	movw	r0, #51712	; 0xca00
   3a368:	movt	r0, #15258	; 0x3b9a
   3a36c:	str	r0, [fp, #-40]	; 0xffffffd8
   3a370:	ldr	r0, [fp, #-16]
   3a374:	ldr	r1, [fp, #-12]
   3a378:	movw	r2, #51711	; 0xc9ff
   3a37c:	movt	r2, #15258	; 0x3b9a
   3a380:	subs	r0, r2, r0
   3a384:	rscs	r1, r1, #0
   3a388:	bcc	3a3a4 <flatcc_json_printer_uint64@@Base+0xa8>
   3a38c:	b	3a390 <flatcc_json_printer_uint64@@Base+0x94>
   3a390:	ldr	r0, [fp, #-16]
   3a394:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a398:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3a39c:	str	r0, [fp, #-4]
   3a3a0:	b	3ae74 <flatcc_json_printer_uint64@@Base+0xb78>
   3a3a4:	ldr	r0, [fp, #-16]
   3a3a8:	ldr	r1, [fp, #-12]
   3a3ac:	movw	r2, #40960	; 0xa000
   3a3b0:	movt	r2, #20082	; 0x4e72
   3a3b4:	subs	r0, r0, r2
   3a3b8:	movw	r2, #2328	; 0x918
   3a3bc:	sbcs	r1, r1, r2
   3a3c0:	bcc	3a514 <flatcc_json_printer_uint64@@Base+0x218>
   3a3c4:	b	3a3c8 <flatcc_json_printer_uint64@@Base+0xcc>
   3a3c8:	ldr	r0, [fp, #-16]
   3a3cc:	ldr	r1, [fp, #-12]
   3a3d0:	movw	r2, #0
   3a3d4:	movt	r2, #28609	; 0x6fc1
   3a3d8:	subs	r0, r0, r2
   3a3dc:	movw	r2, #34546	; 0x86f2
   3a3e0:	movt	r2, #35	; 0x23
   3a3e4:	sbcs	r1, r1, r2
   3a3e8:	bcc	3a49c <flatcc_json_printer_uint64@@Base+0x1a0>
   3a3ec:	b	3a3f0 <flatcc_json_printer_uint64@@Base+0xf4>
   3a3f0:	ldr	r0, [fp, #-16]
   3a3f4:	ldr	r1, [fp, #-12]
   3a3f8:	movw	r2, #0
   3a3fc:	movt	r2, #42852	; 0xa764
   3a400:	subs	r0, r0, r2
   3a404:	movw	r2, #46771	; 0xb6b3
   3a408:	movt	r2, #3552	; 0xde0
   3a40c:	sbcs	r1, r1, r2
   3a410:	bcc	3a458 <flatcc_json_printer_uint64@@Base+0x15c>
   3a414:	b	3a418 <flatcc_json_printer_uint64@@Base+0x11c>
   3a418:	ldr	r0, [fp, #-16]
   3a41c:	ldr	r1, [fp, #-12]
   3a420:	movw	r2, #0
   3a424:	movt	r2, #35304	; 0x89e8
   3a428:	subs	r0, r0, r2
   3a42c:	movw	r2, #8964	; 0x2304
   3a430:	movt	r2, #35527	; 0x8ac7
   3a434:	sbcs	r1, r1, r2
   3a438:	bcc	3a44c <flatcc_json_printer_uint64@@Base+0x150>
   3a43c:	b	3a440 <flatcc_json_printer_uint64@@Base+0x144>
   3a440:	movw	r0, #20
   3a444:	str	r0, [fp, #-24]	; 0xffffffe8
   3a448:	b	3a454 <flatcc_json_printer_uint64@@Base+0x158>
   3a44c:	movw	r0, #19
   3a450:	str	r0, [fp, #-24]	; 0xffffffe8
   3a454:	b	3a498 <flatcc_json_printer_uint64@@Base+0x19c>
   3a458:	ldr	r0, [fp, #-16]
   3a45c:	ldr	r1, [fp, #-12]
   3a460:	movw	r2, #0
   3a464:	movt	r2, #23946	; 0x5d8a
   3a468:	subs	r0, r0, r2
   3a46c:	movw	r2, #17784	; 0x4578
   3a470:	movt	r2, #355	; 0x163
   3a474:	sbcs	r1, r1, r2
   3a478:	bcc	3a48c <flatcc_json_printer_uint64@@Base+0x190>
   3a47c:	b	3a480 <flatcc_json_printer_uint64@@Base+0x184>
   3a480:	movw	r0, #18
   3a484:	str	r0, [fp, #-24]	; 0xffffffe8
   3a488:	b	3a494 <flatcc_json_printer_uint64@@Base+0x198>
   3a48c:	movw	r0, #17
   3a490:	str	r0, [fp, #-24]	; 0xffffffe8
   3a494:	b	3a498 <flatcc_json_printer_uint64@@Base+0x19c>
   3a498:	b	3a510 <flatcc_json_printer_uint64@@Base+0x214>
   3a49c:	ldr	r0, [fp, #-16]
   3a4a0:	ldr	r1, [fp, #-12]
   3a4a4:	movw	r2, #32768	; 0x8000
   3a4a8:	movt	r2, #42182	; 0xa4c6
   3a4ac:	subs	r0, r0, r2
   3a4b0:	movw	r2, #36222	; 0x8d7e
   3a4b4:	movt	r2, #3
   3a4b8:	sbcs	r1, r1, r2
   3a4bc:	bcc	3a4d0 <flatcc_json_printer_uint64@@Base+0x1d4>
   3a4c0:	b	3a4c4 <flatcc_json_printer_uint64@@Base+0x1c8>
   3a4c4:	movw	r0, #16
   3a4c8:	str	r0, [fp, #-24]	; 0xffffffe8
   3a4cc:	b	3a50c <flatcc_json_printer_uint64@@Base+0x210>
   3a4d0:	ldr	r0, [fp, #-16]
   3a4d4:	ldr	r1, [fp, #-12]
   3a4d8:	movw	r2, #16384	; 0x4000
   3a4dc:	movt	r2, #4218	; 0x107a
   3a4e0:	subs	r0, r0, r2
   3a4e4:	movw	r2, #23283	; 0x5af3
   3a4e8:	sbcs	r1, r1, r2
   3a4ec:	bcc	3a500 <flatcc_json_printer_uint64@@Base+0x204>
   3a4f0:	b	3a4f4 <flatcc_json_printer_uint64@@Base+0x1f8>
   3a4f4:	movw	r0, #15
   3a4f8:	str	r0, [fp, #-24]	; 0xffffffe8
   3a4fc:	b	3a508 <flatcc_json_printer_uint64@@Base+0x20c>
   3a500:	movw	r0, #14
   3a504:	str	r0, [fp, #-24]	; 0xffffffe8
   3a508:	b	3a50c <flatcc_json_printer_uint64@@Base+0x210>
   3a50c:	b	3a510 <flatcc_json_printer_uint64@@Base+0x214>
   3a510:	b	3a5a8 <flatcc_json_printer_uint64@@Base+0x2ac>
   3a514:	ldr	r0, [fp, #-16]
   3a518:	ldr	r1, [fp, #-12]
   3a51c:	movw	r2, #59392	; 0xe800
   3a520:	movt	r2, #18550	; 0x4876
   3a524:	subs	r0, r0, r2
   3a528:	sbcs	r1, r1, #23
   3a52c:	bcc	3a56c <flatcc_json_printer_uint64@@Base+0x270>
   3a530:	b	3a534 <flatcc_json_printer_uint64@@Base+0x238>
   3a534:	ldr	r0, [fp, #-16]
   3a538:	ldr	r1, [fp, #-12]
   3a53c:	movw	r2, #4096	; 0x1000
   3a540:	movt	r2, #54437	; 0xd4a5
   3a544:	subs	r0, r0, r2
   3a548:	sbcs	r1, r1, #232	; 0xe8
   3a54c:	bcc	3a560 <flatcc_json_printer_uint64@@Base+0x264>
   3a550:	b	3a554 <flatcc_json_printer_uint64@@Base+0x258>
   3a554:	movw	r0, #13
   3a558:	str	r0, [fp, #-24]	; 0xffffffe8
   3a55c:	b	3a568 <flatcc_json_printer_uint64@@Base+0x26c>
   3a560:	movw	r0, #12
   3a564:	str	r0, [fp, #-24]	; 0xffffffe8
   3a568:	b	3a5a4 <flatcc_json_printer_uint64@@Base+0x2a8>
   3a56c:	ldr	r0, [fp, #-16]
   3a570:	ldr	r1, [fp, #-12]
   3a574:	movw	r2, #58368	; 0xe400
   3a578:	movt	r2, #21515	; 0x540b
   3a57c:	subs	r0, r0, r2
   3a580:	sbcs	r1, r1, #2
   3a584:	bcc	3a598 <flatcc_json_printer_uint64@@Base+0x29c>
   3a588:	b	3a58c <flatcc_json_printer_uint64@@Base+0x290>
   3a58c:	movw	r0, #11
   3a590:	str	r0, [fp, #-24]	; 0xffffffe8
   3a594:	b	3a5a0 <flatcc_json_printer_uint64@@Base+0x2a4>
   3a598:	movw	r0, #10
   3a59c:	str	r0, [fp, #-24]	; 0xffffffe8
   3a5a0:	b	3a5a4 <flatcc_json_printer_uint64@@Base+0x2a8>
   3a5a4:	b	3a5a8 <flatcc_json_printer_uint64@@Base+0x2ac>
   3a5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a5b0:	add	r0, r1, r0
   3a5b4:	str	r0, [fp, #-20]	; 0xffffffec
   3a5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a5bc:	movw	r1, #0
   3a5c0:	strb	r1, [r0]
   3a5c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a5c8:	and	r0, r0, #1
   3a5cc:	cmp	r0, #0
   3a5d0:	beq	3a90c <flatcc_json_printer_uint64@@Base+0x610>
   3a5d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a5d8:	sub	r0, r0, #11
   3a5dc:	cmp	r0, #8
   3a5e0:	str	r0, [fp, #-44]	; 0xffffffd4
   3a5e4:	bhi	3a908 <flatcc_json_printer_uint64@@Base+0x60c>
   3a5e8:	add	r0, pc, #8
   3a5ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3a5f0:	ldr	r2, [r0, r1, lsl #2]
   3a5f4:	add	pc, r0, r2
   3a5f8:	andeq	r0, r0, r4, lsr r2
   3a5fc:	andeq	r0, r0, r0, lsl r3
   3a600:			; <UNDEFINED> instruction: 0x000001b0
   3a604:	andeq	r0, r0, r0, lsl r3
   3a608:	andeq	r0, r0, ip, lsr #2
   3a60c:	andeq	r0, r0, r0, lsl r3
   3a610:	andeq	r0, r0, r8, lsr #1
   3a614:	andeq	r0, r0, r0, lsl r3
   3a618:	andeq	r0, r0, r4, lsr #32
   3a61c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a620:	sub	r0, r0, #2
   3a624:	str	r0, [fp, #-20]	; 0xffffffec
   3a628:	ldr	r0, [fp, #-16]
   3a62c:	ldr	r1, [fp, #-12]
   3a630:	mov	r2, #100	; 0x64
   3a634:	mov	r3, #0
   3a638:	str	r2, [fp, #-48]	; 0xffffffd0
   3a63c:	str	r3, [fp, #-52]	; 0xffffffcc
   3a640:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a644:	ldr	r3, [pc, #2100]	; 3ae80 <flatcc_json_printer_uint64@@Base+0xb84>
   3a648:	add	r3, pc, r3
   3a64c:	add	r2, r3, r2, lsl #1
   3a650:	str	r2, [fp, #-28]	; 0xffffffe4
   3a654:	ldr	r2, [fp, #-16]
   3a658:	ldr	r3, [fp, #-12]
   3a65c:	str	r0, [fp, #-56]	; 0xffffffc8
   3a660:	mov	r0, r2
   3a664:	str	r1, [fp, #-60]	; 0xffffffc4
   3a668:	mov	r1, r3
   3a66c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3a670:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a674:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a678:	str	r1, [fp, #-12]
   3a67c:	str	r0, [fp, #-16]
   3a680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a684:	ldrb	r0, [r0]
   3a688:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a68c:	strb	r0, [r1]
   3a690:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a694:	ldrb	r0, [r0, #1]
   3a698:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a69c:	strb	r0, [r1, #1]
   3a6a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a6a4:	sub	r0, r0, #2
   3a6a8:	str	r0, [fp, #-20]	; 0xffffffec
   3a6ac:	ldr	r0, [fp, #-16]
   3a6b0:	ldr	r1, [fp, #-12]
   3a6b4:	mov	r2, #100	; 0x64
   3a6b8:	mov	r3, #0
   3a6bc:	str	r2, [fp, #-64]	; 0xffffffc0
   3a6c0:	str	r3, [fp, #-68]	; 0xffffffbc
   3a6c4:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a6c8:	ldr	r3, [pc, #1972]	; 3ae84 <flatcc_json_printer_uint64@@Base+0xb88>
   3a6cc:	add	r3, pc, r3
   3a6d0:	add	r2, r3, r2, lsl #1
   3a6d4:	str	r2, [fp, #-28]	; 0xffffffe4
   3a6d8:	ldr	r2, [fp, #-16]
   3a6dc:	ldr	r3, [fp, #-12]
   3a6e0:	str	r0, [fp, #-72]	; 0xffffffb8
   3a6e4:	mov	r0, r2
   3a6e8:	str	r1, [fp, #-76]	; 0xffffffb4
   3a6ec:	mov	r1, r3
   3a6f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3a6f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3a6f8:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a6fc:	str	r1, [fp, #-12]
   3a700:	str	r0, [fp, #-16]
   3a704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a708:	ldrb	r0, [r0]
   3a70c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a710:	strb	r0, [r1]
   3a714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a718:	ldrb	r0, [r0, #1]
   3a71c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a720:	strb	r0, [r1, #1]
   3a724:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a728:	sub	r0, r0, #2
   3a72c:	str	r0, [fp, #-20]	; 0xffffffec
   3a730:	ldr	r0, [fp, #-16]
   3a734:	ldr	r1, [fp, #-12]
   3a738:	mov	r2, #100	; 0x64
   3a73c:	mov	r3, #0
   3a740:	str	r2, [fp, #-80]	; 0xffffffb0
   3a744:	str	r3, [fp, #-84]	; 0xffffffac
   3a748:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a74c:	ldr	r3, [pc, #1844]	; 3ae88 <flatcc_json_printer_uint64@@Base+0xb8c>
   3a750:	add	r3, pc, r3
   3a754:	add	r2, r3, r2, lsl #1
   3a758:	str	r2, [fp, #-28]	; 0xffffffe4
   3a75c:	ldr	r2, [fp, #-16]
   3a760:	ldr	r3, [fp, #-12]
   3a764:	str	r0, [fp, #-88]	; 0xffffffa8
   3a768:	mov	r0, r2
   3a76c:	str	r1, [fp, #-92]	; 0xffffffa4
   3a770:	mov	r1, r3
   3a774:	ldr	r2, [fp, #-80]	; 0xffffffb0
   3a778:	ldr	r3, [fp, #-84]	; 0xffffffac
   3a77c:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a780:	str	r1, [fp, #-12]
   3a784:	str	r0, [fp, #-16]
   3a788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a78c:	ldrb	r0, [r0]
   3a790:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a794:	strb	r0, [r1]
   3a798:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a79c:	ldrb	r0, [r0, #1]
   3a7a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a7a4:	strb	r0, [r1, #1]
   3a7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a7ac:	sub	r0, r0, #2
   3a7b0:	str	r0, [fp, #-20]	; 0xffffffec
   3a7b4:	ldr	r0, [fp, #-16]
   3a7b8:	ldr	r1, [fp, #-12]
   3a7bc:	mov	r2, #100	; 0x64
   3a7c0:	mov	r3, #0
   3a7c4:	str	r2, [fp, #-96]	; 0xffffffa0
   3a7c8:	str	r3, [fp, #-100]	; 0xffffff9c
   3a7cc:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a7d0:	ldr	r3, [pc, #1716]	; 3ae8c <flatcc_json_printer_uint64@@Base+0xb90>
   3a7d4:	add	r3, pc, r3
   3a7d8:	add	r2, r3, r2, lsl #1
   3a7dc:	str	r2, [fp, #-28]	; 0xffffffe4
   3a7e0:	ldr	r2, [fp, #-16]
   3a7e4:	ldr	r3, [fp, #-12]
   3a7e8:	str	r0, [fp, #-104]	; 0xffffff98
   3a7ec:	mov	r0, r2
   3a7f0:	str	r1, [fp, #-108]	; 0xffffff94
   3a7f4:	mov	r1, r3
   3a7f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a7fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a800:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a804:	str	r1, [fp, #-12]
   3a808:	str	r0, [fp, #-16]
   3a80c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a810:	ldrb	r0, [r0]
   3a814:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a818:	strb	r0, [r1]
   3a81c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a820:	ldrb	r0, [r0, #1]
   3a824:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a828:	strb	r0, [r1, #1]
   3a82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a830:	sub	r0, r0, #2
   3a834:	str	r0, [fp, #-20]	; 0xffffffec
   3a838:	ldr	r0, [fp, #-16]
   3a83c:	ldr	r1, [fp, #-12]
   3a840:	mov	r2, #100	; 0x64
   3a844:	mov	r3, #0
   3a848:	str	r2, [fp, #-112]	; 0xffffff90
   3a84c:	str	r3, [fp, #-116]	; 0xffffff8c
   3a850:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a854:	ldr	r3, [pc, #1588]	; 3ae90 <flatcc_json_printer_uint64@@Base+0xb94>
   3a858:	add	r3, pc, r3
   3a85c:	add	r2, r3, r2, lsl #1
   3a860:	str	r2, [fp, #-28]	; 0xffffffe4
   3a864:	ldr	r2, [fp, #-16]
   3a868:	ldr	r3, [fp, #-12]
   3a86c:	str	r0, [fp, #-120]	; 0xffffff88
   3a870:	mov	r0, r2
   3a874:	str	r1, [fp, #-124]	; 0xffffff84
   3a878:	mov	r1, r3
   3a87c:	ldr	r2, [fp, #-112]	; 0xffffff90
   3a880:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3a884:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a888:	str	r1, [fp, #-12]
   3a88c:	str	r0, [fp, #-16]
   3a890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a894:	ldrb	r0, [r0]
   3a898:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a89c:	strb	r0, [r1]
   3a8a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a8a4:	ldrb	r0, [r0, #1]
   3a8a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a8ac:	strb	r0, [r1, #1]
   3a8b0:	ldr	r0, [fp, #-16]
   3a8b4:	ldr	r1, [fp, #-12]
   3a8b8:	mov	r2, #10
   3a8bc:	str	r2, [fp, #-128]	; 0xffffff80
   3a8c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3a8c4:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a8c8:	orr	r2, r2, #48	; 0x30
   3a8cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8d0:	sub	ip, r3, #1
   3a8d4:	str	ip, [fp, #-20]	; 0xffffffec
   3a8d8:	strb	r2, [r3, #-1]
   3a8dc:	ldr	r2, [fp, #-16]
   3a8e0:	ldr	r3, [fp, #-12]
   3a8e4:	str	r0, [fp, #-132]	; 0xffffff7c
   3a8e8:	mov	r0, r2
   3a8ec:	str	r1, [fp, #-136]	; 0xffffff78
   3a8f0:	mov	r1, r3
   3a8f4:	ldr	r2, [fp, #-128]	; 0xffffff80
   3a8f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3a8fc:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a900:	str	r1, [fp, #-12]
   3a904:	str	r0, [fp, #-16]
   3a908:	b	3ac78 <flatcc_json_printer_uint64@@Base+0x97c>
   3a90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3a910:	sub	r0, r0, #10
   3a914:	cmp	r0, #10
   3a918:	str	r0, [sp, #140]	; 0x8c
   3a91c:	bhi	3ac74 <flatcc_json_printer_uint64@@Base+0x978>
   3a920:	add	r0, pc, #8
   3a924:	ldr	r1, [sp, #140]	; 0x8c
   3a928:	ldr	r2, [r0, r1, lsl #2]
   3a92c:	add	pc, r0, r2
   3a930:	andeq	r0, r0, r0, asr #5
   3a934:	andeq	r0, r0, r4, asr #6
   3a938:	andeq	r0, r0, ip, lsr r2
   3a93c:	andeq	r0, r0, r4, asr #6
   3a940:			; <UNDEFINED> instruction: 0x000001b8
   3a944:	andeq	r0, r0, r4, asr #6
   3a948:	andeq	r0, r0, r4, lsr r1
   3a94c:	andeq	r0, r0, r4, asr #6
   3a950:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   3a954:	andeq	r0, r0, r4, asr #6
   3a958:	andeq	r0, r0, ip, lsr #32
   3a95c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a960:	sub	r0, r0, #2
   3a964:	str	r0, [fp, #-20]	; 0xffffffec
   3a968:	ldr	r0, [fp, #-16]
   3a96c:	ldr	r1, [fp, #-12]
   3a970:	mov	r2, #100	; 0x64
   3a974:	mov	r3, #0
   3a978:	str	r2, [sp, #136]	; 0x88
   3a97c:	str	r3, [sp, #132]	; 0x84
   3a980:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a984:	ldr	r3, [pc, #1288]	; 3ae94 <flatcc_json_printer_uint64@@Base+0xb98>
   3a988:	add	r3, pc, r3
   3a98c:	add	r2, r3, r2, lsl #1
   3a990:	str	r2, [fp, #-28]	; 0xffffffe4
   3a994:	ldr	r2, [fp, #-16]
   3a998:	ldr	r3, [fp, #-12]
   3a99c:	str	r0, [sp, #128]	; 0x80
   3a9a0:	mov	r0, r2
   3a9a4:	str	r1, [sp, #124]	; 0x7c
   3a9a8:	mov	r1, r3
   3a9ac:	ldr	r2, [sp, #136]	; 0x88
   3a9b0:	ldr	r3, [sp, #132]	; 0x84
   3a9b4:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3a9b8:	str	r1, [fp, #-12]
   3a9bc:	str	r0, [fp, #-16]
   3a9c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a9c4:	ldrb	r0, [r0]
   3a9c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a9cc:	strb	r0, [r1]
   3a9d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a9d4:	ldrb	r0, [r0, #1]
   3a9d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a9dc:	strb	r0, [r1, #1]
   3a9e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3a9e4:	sub	r0, r0, #2
   3a9e8:	str	r0, [fp, #-20]	; 0xffffffec
   3a9ec:	ldr	r0, [fp, #-16]
   3a9f0:	ldr	r1, [fp, #-12]
   3a9f4:	mov	r2, #100	; 0x64
   3a9f8:	mov	r3, #0
   3a9fc:	str	r2, [sp, #120]	; 0x78
   3aa00:	str	r3, [sp, #116]	; 0x74
   3aa04:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3aa08:	ldr	r3, [pc, #1160]	; 3ae98 <flatcc_json_printer_uint64@@Base+0xb9c>
   3aa0c:	add	r3, pc, r3
   3aa10:	add	r2, r3, r2, lsl #1
   3aa14:	str	r2, [fp, #-28]	; 0xffffffe4
   3aa18:	ldr	r2, [fp, #-16]
   3aa1c:	ldr	r3, [fp, #-12]
   3aa20:	str	r0, [sp, #112]	; 0x70
   3aa24:	mov	r0, r2
   3aa28:	str	r1, [sp, #108]	; 0x6c
   3aa2c:	mov	r1, r3
   3aa30:	ldr	r2, [sp, #120]	; 0x78
   3aa34:	ldr	r3, [sp, #116]	; 0x74
   3aa38:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3aa3c:	str	r1, [fp, #-12]
   3aa40:	str	r0, [fp, #-16]
   3aa44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aa48:	ldrb	r0, [r0]
   3aa4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa50:	strb	r0, [r1]
   3aa54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aa58:	ldrb	r0, [r0, #1]
   3aa5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa60:	strb	r0, [r1, #1]
   3aa64:	ldr	r0, [fp, #-20]	; 0xffffffec
   3aa68:	sub	r0, r0, #2
   3aa6c:	str	r0, [fp, #-20]	; 0xffffffec
   3aa70:	ldr	r0, [fp, #-16]
   3aa74:	ldr	r1, [fp, #-12]
   3aa78:	mov	r2, #100	; 0x64
   3aa7c:	mov	r3, #0
   3aa80:	str	r2, [sp, #104]	; 0x68
   3aa84:	str	r3, [sp, #100]	; 0x64
   3aa88:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3aa8c:	ldr	r3, [pc, #1032]	; 3ae9c <flatcc_json_printer_uint64@@Base+0xba0>
   3aa90:	add	r3, pc, r3
   3aa94:	add	r2, r3, r2, lsl #1
   3aa98:	str	r2, [fp, #-28]	; 0xffffffe4
   3aa9c:	ldr	r2, [fp, #-16]
   3aaa0:	ldr	r3, [fp, #-12]
   3aaa4:	str	r0, [sp, #96]	; 0x60
   3aaa8:	mov	r0, r2
   3aaac:	str	r1, [sp, #92]	; 0x5c
   3aab0:	mov	r1, r3
   3aab4:	ldr	r2, [sp, #104]	; 0x68
   3aab8:	ldr	r3, [sp, #100]	; 0x64
   3aabc:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3aac0:	str	r1, [fp, #-12]
   3aac4:	str	r0, [fp, #-16]
   3aac8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aacc:	ldrb	r0, [r0]
   3aad0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aad4:	strb	r0, [r1]
   3aad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3aadc:	ldrb	r0, [r0, #1]
   3aae0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aae4:	strb	r0, [r1, #1]
   3aae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3aaec:	sub	r0, r0, #2
   3aaf0:	str	r0, [fp, #-20]	; 0xffffffec
   3aaf4:	ldr	r0, [fp, #-16]
   3aaf8:	ldr	r1, [fp, #-12]
   3aafc:	mov	r2, #100	; 0x64
   3ab00:	mov	r3, #0
   3ab04:	str	r2, [sp, #88]	; 0x58
   3ab08:	str	r3, [sp, #84]	; 0x54
   3ab0c:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ab10:	ldr	r3, [pc, #904]	; 3aea0 <flatcc_json_printer_uint64@@Base+0xba4>
   3ab14:	add	r3, pc, r3
   3ab18:	add	r2, r3, r2, lsl #1
   3ab1c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ab20:	ldr	r2, [fp, #-16]
   3ab24:	ldr	r3, [fp, #-12]
   3ab28:	str	r0, [sp, #80]	; 0x50
   3ab2c:	mov	r0, r2
   3ab30:	str	r1, [sp, #76]	; 0x4c
   3ab34:	mov	r1, r3
   3ab38:	ldr	r2, [sp, #88]	; 0x58
   3ab3c:	ldr	r3, [sp, #84]	; 0x54
   3ab40:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ab44:	str	r1, [fp, #-12]
   3ab48:	str	r0, [fp, #-16]
   3ab4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ab50:	ldrb	r0, [r0]
   3ab54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ab58:	strb	r0, [r1]
   3ab5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ab60:	ldrb	r0, [r0, #1]
   3ab64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ab68:	strb	r0, [r1, #1]
   3ab6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ab70:	sub	r0, r0, #2
   3ab74:	str	r0, [fp, #-20]	; 0xffffffec
   3ab78:	ldr	r0, [fp, #-16]
   3ab7c:	ldr	r1, [fp, #-12]
   3ab80:	mov	r2, #100	; 0x64
   3ab84:	mov	r3, #0
   3ab88:	str	r2, [sp, #72]	; 0x48
   3ab8c:	str	r3, [sp, #68]	; 0x44
   3ab90:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ab94:	ldr	r3, [pc, #776]	; 3aea4 <flatcc_json_printer_uint64@@Base+0xba8>
   3ab98:	add	r3, pc, r3
   3ab9c:	add	r2, r3, r2, lsl #1
   3aba0:	str	r2, [fp, #-28]	; 0xffffffe4
   3aba4:	ldr	r2, [fp, #-16]
   3aba8:	ldr	r3, [fp, #-12]
   3abac:	str	r0, [sp, #64]	; 0x40
   3abb0:	mov	r0, r2
   3abb4:	str	r1, [sp, #60]	; 0x3c
   3abb8:	mov	r1, r3
   3abbc:	ldr	r2, [sp, #72]	; 0x48
   3abc0:	ldr	r3, [sp, #68]	; 0x44
   3abc4:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3abc8:	str	r1, [fp, #-12]
   3abcc:	str	r0, [fp, #-16]
   3abd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3abd4:	ldrb	r0, [r0]
   3abd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3abdc:	strb	r0, [r1]
   3abe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3abe4:	ldrb	r0, [r0, #1]
   3abe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3abec:	strb	r0, [r1, #1]
   3abf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3abf4:	sub	r0, r0, #2
   3abf8:	str	r0, [fp, #-20]	; 0xffffffec
   3abfc:	ldr	r0, [fp, #-16]
   3ac00:	ldr	r1, [fp, #-12]
   3ac04:	mov	r2, #100	; 0x64
   3ac08:	mov	r3, #0
   3ac0c:	str	r2, [sp, #56]	; 0x38
   3ac10:	str	r3, [sp, #52]	; 0x34
   3ac14:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ac18:	ldr	r3, [pc, #648]	; 3aea8 <flatcc_json_printer_uint64@@Base+0xbac>
   3ac1c:	add	r3, pc, r3
   3ac20:	add	r2, r3, r2, lsl #1
   3ac24:	str	r2, [fp, #-28]	; 0xffffffe4
   3ac28:	ldr	r2, [fp, #-16]
   3ac2c:	ldr	r3, [fp, #-12]
   3ac30:	str	r0, [sp, #48]	; 0x30
   3ac34:	mov	r0, r2
   3ac38:	str	r1, [sp, #44]	; 0x2c
   3ac3c:	mov	r1, r3
   3ac40:	ldr	r2, [sp, #56]	; 0x38
   3ac44:	ldr	r3, [sp, #52]	; 0x34
   3ac48:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ac4c:	str	r1, [fp, #-12]
   3ac50:	str	r0, [fp, #-16]
   3ac54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ac58:	ldrb	r0, [r0]
   3ac5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ac60:	strb	r0, [r1]
   3ac64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ac68:	ldrb	r0, [r0, #1]
   3ac6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ac70:	strb	r0, [r1, #1]
   3ac74:	b	3ac78 <flatcc_json_printer_uint64@@Base+0x97c>
   3ac78:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ac7c:	sub	r0, r0, #2
   3ac80:	str	r0, [fp, #-20]	; 0xffffffec
   3ac84:	ldr	r0, [fp, #-16]
   3ac88:	ldr	r1, [fp, #-12]
   3ac8c:	mov	r2, #100	; 0x64
   3ac90:	mov	r3, #0
   3ac94:	str	r2, [sp, #40]	; 0x28
   3ac98:	str	r3, [sp, #36]	; 0x24
   3ac9c:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3aca0:	ldr	r3, [pc, #516]	; 3aeac <flatcc_json_printer_uint64@@Base+0xbb0>
   3aca4:	add	r3, pc, r3
   3aca8:	add	r2, r3, r2, lsl #1
   3acac:	str	r2, [fp, #-28]	; 0xffffffe4
   3acb0:	ldr	r2, [fp, #-16]
   3acb4:	ldr	ip, [fp, #-12]
   3acb8:	str	r0, [sp, #32]
   3acbc:	mov	r0, r2
   3acc0:	str	r1, [sp, #28]
   3acc4:	mov	r1, ip
   3acc8:	ldr	r2, [sp, #40]	; 0x28
   3accc:	ldr	ip, [sp, #36]	; 0x24
   3acd0:	str	r3, [sp, #24]
   3acd4:	mov	r3, ip
   3acd8:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3acdc:	str	r1, [fp, #-12]
   3ace0:	str	r0, [fp, #-16]
   3ace4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ace8:	ldrb	r0, [r0]
   3acec:	ldr	r1, [fp, #-20]	; 0xffffffec
   3acf0:	strb	r0, [r1]
   3acf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3acf8:	ldrb	r0, [r0, #1]
   3acfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad00:	strb	r0, [r1, #1]
   3ad04:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ad08:	sub	r0, r0, #2
   3ad0c:	str	r0, [fp, #-20]	; 0xffffffec
   3ad10:	ldr	r0, [fp, #-16]
   3ad14:	ldr	r1, [fp, #-12]
   3ad18:	ldr	r2, [sp, #40]	; 0x28
   3ad1c:	ldr	r3, [sp, #36]	; 0x24
   3ad20:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ad24:	ldr	r3, [sp, #24]
   3ad28:	add	r2, r3, r2, lsl #1
   3ad2c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ad30:	ldr	r2, [fp, #-16]
   3ad34:	ldr	ip, [fp, #-12]
   3ad38:	str	r0, [sp, #20]
   3ad3c:	mov	r0, r2
   3ad40:	str	r1, [sp, #16]
   3ad44:	mov	r1, ip
   3ad48:	ldr	r2, [sp, #40]	; 0x28
   3ad4c:	ldr	r3, [sp, #36]	; 0x24
   3ad50:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ad54:	str	r1, [fp, #-12]
   3ad58:	str	r0, [fp, #-16]
   3ad5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ad60:	ldrb	r0, [r0]
   3ad64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad68:	strb	r0, [r1]
   3ad6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ad70:	ldrb	r0, [r0, #1]
   3ad74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ad78:	strb	r0, [r1, #1]
   3ad7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ad80:	sub	r0, r0, #2
   3ad84:	str	r0, [fp, #-20]	; 0xffffffec
   3ad88:	ldr	r0, [fp, #-16]
   3ad8c:	ldr	r1, [fp, #-12]
   3ad90:	ldr	r2, [sp, #40]	; 0x28
   3ad94:	ldr	r3, [sp, #36]	; 0x24
   3ad98:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ad9c:	ldr	r3, [sp, #24]
   3ada0:	add	r2, r3, r2, lsl #1
   3ada4:	str	r2, [fp, #-28]	; 0xffffffe4
   3ada8:	ldr	r2, [fp, #-16]
   3adac:	ldr	ip, [fp, #-12]
   3adb0:	str	r0, [sp, #12]
   3adb4:	mov	r0, r2
   3adb8:	str	r1, [sp, #8]
   3adbc:	mov	r1, ip
   3adc0:	ldr	r2, [sp, #40]	; 0x28
   3adc4:	ldr	r3, [sp, #36]	; 0x24
   3adc8:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3adcc:	str	r1, [fp, #-12]
   3add0:	str	r0, [fp, #-16]
   3add4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3add8:	ldrb	r0, [r0]
   3addc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ade0:	strb	r0, [r1]
   3ade4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ade8:	ldrb	r0, [r0, #1]
   3adec:	ldr	r1, [fp, #-20]	; 0xffffffec
   3adf0:	strb	r0, [r1, #1]
   3adf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3adf8:	sub	r0, r0, #2
   3adfc:	str	r0, [fp, #-20]	; 0xffffffec
   3ae00:	ldr	r0, [fp, #-16]
   3ae04:	ldr	r1, [fp, #-12]
   3ae08:	ldr	r2, [sp, #40]	; 0x28
   3ae0c:	ldr	r3, [sp, #36]	; 0x24
   3ae10:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ae14:	ldr	r3, [sp, #24]
   3ae18:	add	r2, r3, r2, lsl #1
   3ae1c:	str	r2, [fp, #-28]	; 0xffffffe4
   3ae20:	ldr	r2, [fp, #-16]
   3ae24:	ldr	ip, [fp, #-12]
   3ae28:	str	r0, [sp, #4]
   3ae2c:	mov	r0, r2
   3ae30:	str	r1, [sp]
   3ae34:	mov	r1, ip
   3ae38:	ldr	r2, [sp, #40]	; 0x28
   3ae3c:	ldr	r3, [sp, #36]	; 0x24
   3ae40:	bl	46248 <flatcc_json_printer_clear@@Base+0x2324>
   3ae44:	str	r1, [fp, #-12]
   3ae48:	str	r0, [fp, #-16]
   3ae4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ae50:	ldrb	r0, [r0]
   3ae54:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ae58:	strb	r0, [r1]
   3ae5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3ae60:	ldrb	r0, [r0, #1]
   3ae64:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ae68:	strb	r0, [r1, #1]
   3ae6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ae70:	str	r0, [fp, #-4]
   3ae74:	ldr	r0, [fp, #-4]
   3ae78:	mov	sp, fp
   3ae7c:	pop	{fp, pc}
   3ae80:	andeq	r2, r1, r4, asr r0
   3ae84:	ldrdeq	r1, [r1], -r0
   3ae88:	andeq	r1, r1, ip, asr #30
   3ae8c:	andeq	r1, r1, r8, asr #29
   3ae90:	andeq	r1, r1, r4, asr #28
   3ae94:	andeq	r1, r1, r4, lsl sp
   3ae98:	muleq	r1, r0, ip
   3ae9c:	andeq	r1, r1, ip, lsl #24
   3aea0:	andeq	r1, r1, r8, lsl #23
   3aea4:	andeq	r1, r1, r4, lsl #22
   3aea8:	andeq	r1, r1, r0, lsl #21
   3aeac:	strdeq	r1, [r1], -r8

0003aeb0 <flatcc_json_printer_int8@@Base>:
   3aeb0:	push	{fp, lr}
   3aeb4:	mov	fp, sp
   3aeb8:	sub	sp, sp, #8
   3aebc:	str	r0, [sp, #4]
   3aec0:	strb	r1, [sp, #3]
   3aec4:	ldrb	r0, [sp, #3]
   3aec8:	ldr	r1, [sp, #4]
   3aecc:	ldr	r1, [r1, #20]
   3aed0:	sxtb	r0, r0
   3aed4:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3aed8:	ldr	r1, [sp, #4]
   3aedc:	ldr	r2, [r1, #20]
   3aee0:	add	r0, r2, r0
   3aee4:	str	r0, [r1, #20]
   3aee8:	mov	sp, fp
   3aeec:	pop	{fp, pc}
   3aef0:	push	{fp, lr}
   3aef4:	mov	fp, sp
   3aef8:	sub	sp, sp, #16
   3aefc:	strb	r0, [fp, #-1]
   3af00:	str	r1, [sp, #8]
   3af04:	ldrsb	r0, [fp, #-1]
   3af08:	cmp	r0, #0
   3af0c:	movw	r0, #0
   3af10:	movlt	r0, #1
   3af14:	and	r1, r0, #1
   3af18:	str	r1, [sp, #4]
   3af1c:	tst	r0, #1
   3af20:	beq	3af48 <flatcc_json_printer_int8@@Base+0x98>
   3af24:	ldr	r0, [sp, #8]
   3af28:	add	r1, r0, #1
   3af2c:	str	r1, [sp, #8]
   3af30:	movw	r1, #45	; 0x2d
   3af34:	strb	r1, [r0]
   3af38:	ldrsb	r0, [fp, #-1]
   3af3c:	movw	r1, #0
   3af40:	sub	r0, r1, r0
   3af44:	strb	r0, [fp, #-1]
   3af48:	ldrb	r0, [fp, #-1]
   3af4c:	ldr	r1, [sp, #8]
   3af50:	and	r0, r0, #255	; 0xff
   3af54:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3af58:	ldr	r1, [sp, #4]
   3af5c:	add	r0, r0, r1
   3af60:	mov	sp, fp
   3af64:	pop	{fp, pc}

0003af68 <flatcc_json_printer_int16@@Base>:
   3af68:	push	{fp, lr}
   3af6c:	mov	fp, sp
   3af70:	sub	sp, sp, #8
   3af74:	str	r0, [sp, #4]
   3af78:	strh	r1, [sp, #2]
   3af7c:	ldrh	r0, [sp, #2]
   3af80:	ldr	r1, [sp, #4]
   3af84:	ldr	r1, [r1, #20]
   3af88:	sxth	r0, r0
   3af8c:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3af90:	ldr	r1, [sp, #4]
   3af94:	ldr	r2, [r1, #20]
   3af98:	add	r0, r2, r0
   3af9c:	str	r0, [r1, #20]
   3afa0:	mov	sp, fp
   3afa4:	pop	{fp, pc}
   3afa8:	push	{fp, lr}
   3afac:	mov	fp, sp
   3afb0:	sub	sp, sp, #16
   3afb4:	strh	r0, [fp, #-2]
   3afb8:	str	r1, [sp, #8]
   3afbc:	ldrsh	r0, [fp, #-2]
   3afc0:	cmp	r0, #0
   3afc4:	movw	r0, #0
   3afc8:	movlt	r0, #1
   3afcc:	and	r1, r0, #1
   3afd0:	str	r1, [sp, #4]
   3afd4:	tst	r0, #1
   3afd8:	beq	3b000 <flatcc_json_printer_int16@@Base+0x98>
   3afdc:	ldr	r0, [sp, #8]
   3afe0:	add	r1, r0, #1
   3afe4:	str	r1, [sp, #8]
   3afe8:	movw	r1, #45	; 0x2d
   3afec:	strb	r1, [r0]
   3aff0:	ldrsh	r0, [fp, #-2]
   3aff4:	movw	r1, #0
   3aff8:	sub	r0, r1, r0
   3affc:	strh	r0, [fp, #-2]
   3b000:	ldrh	r0, [fp, #-2]
   3b004:	ldr	r1, [sp, #8]
   3b008:	uxth	r0, r0
   3b00c:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3b010:	ldr	r1, [sp, #4]
   3b014:	add	r0, r0, r1
   3b018:	mov	sp, fp
   3b01c:	pop	{fp, pc}

0003b020 <flatcc_json_printer_int32@@Base>:
   3b020:	push	{fp, lr}
   3b024:	mov	fp, sp
   3b028:	sub	sp, sp, #8
   3b02c:	str	r0, [sp, #4]
   3b030:	str	r1, [sp]
   3b034:	ldr	r0, [sp]
   3b038:	ldr	r1, [sp, #4]
   3b03c:	ldr	r1, [r1, #20]
   3b040:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3b044:	ldr	r1, [sp, #4]
   3b048:	ldr	r2, [r1, #20]
   3b04c:	add	r0, r2, r0
   3b050:	str	r0, [r1, #20]
   3b054:	mov	sp, fp
   3b058:	pop	{fp, pc}
   3b05c:	push	{fp, lr}
   3b060:	mov	fp, sp
   3b064:	sub	sp, sp, #16
   3b068:	str	r0, [fp, #-4]
   3b06c:	str	r1, [sp, #8]
   3b070:	ldr	r0, [fp, #-4]
   3b074:	cmp	r0, #0
   3b078:	movw	r0, #0
   3b07c:	movlt	r0, #1
   3b080:	and	r1, r0, #1
   3b084:	str	r1, [sp, #4]
   3b088:	tst	r0, #1
   3b08c:	beq	3b0b4 <flatcc_json_printer_int32@@Base+0x94>
   3b090:	ldr	r0, [sp, #8]
   3b094:	add	r1, r0, #1
   3b098:	str	r1, [sp, #8]
   3b09c:	movw	r1, #45	; 0x2d
   3b0a0:	strb	r1, [r0]
   3b0a4:	ldr	r0, [fp, #-4]
   3b0a8:	movw	r1, #0
   3b0ac:	sub	r0, r1, r0
   3b0b0:	str	r0, [fp, #-4]
   3b0b4:	ldr	r0, [fp, #-4]
   3b0b8:	ldr	r1, [sp, #8]
   3b0bc:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3b0c0:	ldr	r1, [sp, #4]
   3b0c4:	add	r0, r0, r1
   3b0c8:	mov	sp, fp
   3b0cc:	pop	{fp, pc}

0003b0d0 <flatcc_json_printer_int64@@Base>:
   3b0d0:	push	{fp, lr}
   3b0d4:	mov	fp, sp
   3b0d8:	sub	sp, sp, #16
   3b0dc:	str	r0, [fp, #-4]
   3b0e0:	str	r3, [sp, #4]
   3b0e4:	str	r2, [sp]
   3b0e8:	ldr	r0, [sp]
   3b0ec:	ldr	r1, [sp, #4]
   3b0f0:	ldr	r2, [fp, #-4]
   3b0f4:	ldr	r2, [r2, #20]
   3b0f8:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3b0fc:	ldr	r1, [fp, #-4]
   3b100:	ldr	r2, [r1, #20]
   3b104:	add	r0, r2, r0
   3b108:	str	r0, [r1, #20]
   3b10c:	mov	sp, fp
   3b110:	pop	{fp, pc}
   3b114:	push	{fp, lr}
   3b118:	mov	fp, sp
   3b11c:	sub	sp, sp, #16
   3b120:	str	r0, [sp, #8]
   3b124:	str	r1, [sp, #12]
   3b128:	str	r2, [sp, #4]
   3b12c:	ldr	r0, [sp, #12]
   3b130:	lsr	r0, r0, #31
   3b134:	and	r1, r0, #1
   3b138:	str	r1, [sp]
   3b13c:	tst	r0, #1
   3b140:	beq	3b170 <flatcc_json_printer_int64@@Base+0xa0>
   3b144:	ldr	r0, [sp, #4]
   3b148:	add	r1, r0, #1
   3b14c:	str	r1, [sp, #4]
   3b150:	mov	r1, #45	; 0x2d
   3b154:	strb	r1, [r0]
   3b158:	ldr	r0, [sp, #8]
   3b15c:	ldr	r1, [sp, #12]
   3b160:	rsbs	r0, r0, #0
   3b164:	rsc	r1, r1, #0
   3b168:	str	r0, [sp, #8]
   3b16c:	str	r1, [sp, #12]
   3b170:	ldr	r0, [sp, #8]
   3b174:	ldr	r1, [sp, #12]
   3b178:	ldr	r2, [sp, #4]
   3b17c:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3b180:	ldr	r1, [sp]
   3b184:	add	r0, r0, r1
   3b188:	mov	sp, fp
   3b18c:	pop	{fp, pc}

0003b190 <flatcc_json_printer_float@@Base>:
   3b190:	push	{fp, lr}
   3b194:	mov	fp, sp
   3b198:	sub	sp, sp, #8
   3b19c:	str	r0, [sp, #4]
   3b1a0:	vstr	s0, [sp]
   3b1a4:	vldr	s0, [sp]
   3b1a8:	vcvt.f64.f32	d0, s0
   3b1ac:	ldr	r0, [sp, #4]
   3b1b0:	ldr	r0, [r0, #20]
   3b1b4:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3b1b8:	ldr	r1, [sp, #4]
   3b1bc:	ldr	r2, [r1, #20]
   3b1c0:	add	r0, r2, r0
   3b1c4:	str	r0, [r1, #20]
   3b1c8:	mov	sp, fp
   3b1cc:	pop	{fp, pc}

0003b1d0 <flatcc_json_printer_double@@Base>:
   3b1d0:	push	{fp, lr}
   3b1d4:	mov	fp, sp
   3b1d8:	sub	sp, sp, #16
   3b1dc:	str	r0, [fp, #-4]
   3b1e0:	vstr	d0, [sp]
   3b1e4:	vldr	d0, [sp]
   3b1e8:	ldr	r0, [fp, #-4]
   3b1ec:	ldr	r0, [r0, #20]
   3b1f0:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3b1f4:	ldr	r1, [fp, #-4]
   3b1f8:	ldr	r2, [r1, #20]
   3b1fc:	add	r0, r2, r0
   3b200:	str	r0, [r1, #20]
   3b204:	mov	sp, fp
   3b208:	pop	{fp, pc}

0003b20c <flatcc_json_printer_enum@@Base>:
   3b20c:	push	{fp, lr}
   3b210:	mov	fp, sp
   3b214:	sub	sp, sp, #16
   3b218:	str	r0, [fp, #-4]
   3b21c:	str	r1, [sp, #8]
   3b220:	str	r2, [sp, #4]
   3b224:	ldr	r0, [fp, #-4]
   3b228:	ldr	r1, [sp, #8]
   3b22c:	ldr	r2, [sp, #4]
   3b230:	bl	3b23c <flatcc_json_printer_enum@@Base+0x30>
   3b234:	mov	sp, fp
   3b238:	pop	{fp, pc}
   3b23c:	push	{fp, lr}
   3b240:	mov	fp, sp
   3b244:	sub	sp, sp, #16
   3b248:	str	r0, [fp, #-4]
   3b24c:	str	r1, [sp, #8]
   3b250:	str	r2, [sp, #4]
   3b254:	ldr	r0, [fp, #-4]
   3b258:	ldr	r0, [r0, #20]
   3b25c:	movw	r1, #34	; 0x22
   3b260:	strb	r1, [r0]
   3b264:	ldr	r0, [fp, #-4]
   3b268:	ldrsb	r0, [r0, #26]
   3b26c:	cmp	r0, #0
   3b270:	movw	r0, #0
   3b274:	movne	r0, #1
   3b278:	mvn	r1, #0
   3b27c:	eor	r0, r0, r1
   3b280:	and	r0, r0, #1
   3b284:	ldr	r1, [fp, #-4]
   3b288:	ldr	r2, [r1, #20]
   3b28c:	add	r0, r2, r0
   3b290:	str	r0, [r1, #20]
   3b294:	ldr	r0, [fp, #-4]
   3b298:	ldr	r0, [r0, #20]
   3b29c:	ldr	r1, [sp, #4]
   3b2a0:	add	r0, r0, r1
   3b2a4:	ldr	r1, [fp, #-4]
   3b2a8:	ldr	r1, [r1, #16]
   3b2ac:	cmp	r0, r1
   3b2b0:	bcs	3b2e0 <flatcc_json_printer_enum@@Base+0xd4>
   3b2b4:	ldr	r0, [fp, #-4]
   3b2b8:	ldr	r0, [r0, #20]
   3b2bc:	ldr	r1, [sp, #8]
   3b2c0:	ldr	r2, [sp, #4]
   3b2c4:	bl	14e30 <memcpy@plt>
   3b2c8:	ldr	r0, [sp, #4]
   3b2cc:	ldr	r1, [fp, #-4]
   3b2d0:	ldr	r2, [r1, #20]
   3b2d4:	add	r0, r2, r0
   3b2d8:	str	r0, [r1, #20]
   3b2dc:	b	3b2f0 <flatcc_json_printer_enum@@Base+0xe4>
   3b2e0:	ldr	r0, [fp, #-4]
   3b2e4:	ldr	r1, [sp, #8]
   3b2e8:	ldr	r2, [sp, #4]
   3b2ec:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   3b2f0:	ldr	r0, [fp, #-4]
   3b2f4:	ldr	r0, [r0, #20]
   3b2f8:	movw	r1, #34	; 0x22
   3b2fc:	strb	r1, [r0]
   3b300:	ldr	r0, [fp, #-4]
   3b304:	ldrsb	r0, [r0, #26]
   3b308:	cmp	r0, #0
   3b30c:	movw	r0, #0
   3b310:	movne	r0, #1
   3b314:	mvn	r1, #0
   3b318:	eor	r0, r0, r1
   3b31c:	and	r0, r0, #1
   3b320:	ldr	r1, [fp, #-4]
   3b324:	ldr	r2, [r1, #20]
   3b328:	add	r0, r2, r0
   3b32c:	str	r0, [r1, #20]
   3b330:	mov	sp, fp
   3b334:	pop	{fp, pc}

0003b338 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3b338:	sub	sp, sp, #16
   3b33c:	str	r0, [sp, #12]
   3b340:	str	r1, [sp, #8]
   3b344:	ldr	r0, [sp, #12]
   3b348:	ldrsb	r0, [r0, #26]
   3b34c:	cmp	r0, #0
   3b350:	movw	r0, #1
   3b354:	str	r0, [sp]
   3b358:	beq	3b370 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   3b35c:	ldr	r0, [sp, #8]
   3b360:	cmp	r0, #0
   3b364:	movw	r0, #0
   3b368:	movne	r0, #1
   3b36c:	str	r0, [sp]
   3b370:	ldr	r0, [sp]
   3b374:	and	r0, r0, #1
   3b378:	str	r0, [sp, #4]
   3b37c:	ldr	r0, [sp, #12]
   3b380:	ldr	r0, [r0, #20]
   3b384:	movw	r1, #34	; 0x22
   3b388:	strb	r1, [r0]
   3b38c:	ldr	r0, [sp, #4]
   3b390:	ldr	r1, [sp, #12]
   3b394:	ldr	r2, [r1, #20]
   3b398:	add	r0, r2, r0
   3b39c:	str	r0, [r1, #20]
   3b3a0:	add	sp, sp, #16
   3b3a4:	bx	lr

0003b3a8 <flatcc_json_printer_enum_flag@@Base>:
   3b3a8:	push	{fp, lr}
   3b3ac:	mov	fp, sp
   3b3b0:	sub	sp, sp, #16
   3b3b4:	str	r0, [fp, #-4]
   3b3b8:	str	r1, [sp, #8]
   3b3bc:	str	r2, [sp, #4]
   3b3c0:	str	r3, [sp]
   3b3c4:	ldr	r0, [fp, #-4]
   3b3c8:	ldr	r0, [r0, #20]
   3b3cc:	movw	r1, #32
   3b3d0:	strb	r1, [r0]
   3b3d4:	ldr	r0, [sp, #8]
   3b3d8:	cmp	r0, #0
   3b3dc:	movw	r0, #0
   3b3e0:	movgt	r0, #1
   3b3e4:	and	r0, r0, #1
   3b3e8:	ldr	r1, [fp, #-4]
   3b3ec:	ldr	r2, [r1, #20]
   3b3f0:	add	r0, r2, r0
   3b3f4:	str	r0, [r1, #20]
   3b3f8:	ldr	r0, [fp, #-4]
   3b3fc:	ldr	r1, [sp, #4]
   3b400:	ldr	r2, [sp]
   3b404:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   3b408:	mov	sp, fp
   3b40c:	pop	{fp, pc}

0003b410 <flatcc_json_printer_string_field@@Base>:
   3b410:	push	{fp, lr}
   3b414:	mov	fp, sp
   3b418:	sub	sp, sp, #32
   3b41c:	ldr	ip, [fp, #8]
   3b420:	str	r0, [fp, #-4]
   3b424:	str	r1, [fp, #-8]
   3b428:	str	r2, [fp, #-12]
   3b42c:	str	r3, [sp, #16]
   3b430:	ldr	r0, [fp, #-8]
   3b434:	ldr	r1, [fp, #-12]
   3b438:	str	ip, [sp, #8]
   3b43c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3b440:	str	r0, [sp, #12]
   3b444:	ldr	r0, [sp, #12]
   3b448:	movw	r1, #0
   3b44c:	cmp	r0, r1
   3b450:	beq	3b4bc <flatcc_json_printer_string_field@@Base+0xac>
   3b454:	ldr	r0, [fp, #-8]
   3b458:	ldr	r1, [r0, #16]
   3b45c:	add	r2, r1, #1
   3b460:	str	r2, [r0, #16]
   3b464:	cmp	r1, #0
   3b468:	beq	3b484 <flatcc_json_printer_string_field@@Base+0x74>
   3b46c:	ldr	r0, [fp, #-4]
   3b470:	ldr	r1, [r0, #20]
   3b474:	add	r2, r1, #1
   3b478:	str	r2, [r0, #20]
   3b47c:	movw	r0, #44	; 0x2c
   3b480:	strb	r0, [r1]
   3b484:	ldr	r0, [fp, #-4]
   3b488:	ldr	r1, [sp, #16]
   3b48c:	ldr	r2, [fp, #8]
   3b490:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3b494:	ldr	r0, [fp, #-4]
   3b498:	ldr	r1, [sp, #12]
   3b49c:	str	r0, [sp, #4]
   3b4a0:	mov	r0, r1
   3b4a4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3b4a8:	ldr	r1, [sp, #4]
   3b4ac:	str	r0, [sp]
   3b4b0:	mov	r0, r1
   3b4b4:	ldr	r1, [sp]
   3b4b8:	bl	3b624 <flatcc_json_printer_string_field@@Base+0x214>
   3b4bc:	mov	sp, fp
   3b4c0:	pop	{fp, pc}
   3b4c4:	push	{fp, lr}
   3b4c8:	mov	fp, sp
   3b4cc:	sub	sp, sp, #16
   3b4d0:	str	r0, [sp, #8]
   3b4d4:	str	r1, [sp, #4]
   3b4d8:	ldr	r0, [sp, #4]
   3b4dc:	add	r0, r0, #2
   3b4e0:	lsl	r0, r0, #1
   3b4e4:	str	r0, [sp]
   3b4e8:	ldr	r0, [sp]
   3b4ec:	ldr	r1, [sp, #8]
   3b4f0:	ldr	r1, [r1, #8]
   3b4f4:	cmp	r0, r1
   3b4f8:	blt	3b508 <flatcc_json_printer_string_field@@Base+0xf8>
   3b4fc:	movw	r0, #0
   3b500:	str	r0, [fp, #-4]
   3b504:	b	3b54c <flatcc_json_printer_string_field@@Base+0x13c>
   3b508:	ldr	r0, [sp, #8]
   3b50c:	ldr	r0, [r0, #4]
   3b510:	ldr	r1, [sp]
   3b514:	bl	455f4 <flatcc_json_printer_clear@@Base+0x16d0>
   3b518:	uxth	r0, r0
   3b51c:	str	r0, [sp]
   3b520:	ldr	r0, [sp]
   3b524:	cmp	r0, #0
   3b528:	bne	3b538 <flatcc_json_printer_string_field@@Base+0x128>
   3b52c:	movw	r0, #0
   3b530:	str	r0, [fp, #-4]
   3b534:	b	3b54c <flatcc_json_printer_string_field@@Base+0x13c>
   3b538:	ldr	r0, [sp, #8]
   3b53c:	ldr	r0, [r0]
   3b540:	ldr	r1, [sp]
   3b544:	add	r0, r0, r1
   3b548:	str	r0, [fp, #-4]
   3b54c:	ldr	r0, [fp, #-4]
   3b550:	mov	sp, fp
   3b554:	pop	{fp, pc}
   3b558:	push	{fp, lr}
   3b55c:	mov	fp, sp
   3b560:	sub	sp, sp, #16
   3b564:	str	r0, [fp, #-4]
   3b568:	str	r1, [sp, #8]
   3b56c:	str	r2, [sp, #4]
   3b570:	ldr	r0, [fp, #-4]
   3b574:	ldrsb	r0, [r0, #25]
   3b578:	cmp	r0, #0
   3b57c:	beq	3b5a4 <flatcc_json_printer_string_field@@Base+0x194>
   3b580:	ldr	r0, [fp, #-4]
   3b584:	ldr	r1, [r0, #20]
   3b588:	add	r2, r1, #1
   3b58c:	str	r2, [r0, #20]
   3b590:	movw	r0, #10
   3b594:	strb	r0, [r1]
   3b598:	ldr	r0, [fp, #-4]
   3b59c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3b5a0:	b	3b5ac <flatcc_json_printer_string_field@@Base+0x19c>
   3b5a4:	ldr	r0, [fp, #-4]
   3b5a8:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3b5ac:	b	3b5b0 <flatcc_json_printer_string_field@@Base+0x1a0>
   3b5b0:	ldr	r0, [fp, #-4]
   3b5b4:	ldr	r1, [sp, #8]
   3b5b8:	ldr	r2, [sp, #4]
   3b5bc:	bl	3b23c <flatcc_json_printer_enum@@Base+0x30>
   3b5c0:	ldr	r0, [fp, #-4]
   3b5c4:	ldr	r1, [r0, #20]
   3b5c8:	add	r2, r1, #1
   3b5cc:	str	r2, [r0, #20]
   3b5d0:	movw	r0, #58	; 0x3a
   3b5d4:	strb	r0, [r1]
   3b5d8:	ldr	r0, [fp, #-4]
   3b5dc:	ldr	r0, [r0, #20]
   3b5e0:	movw	r1, #32
   3b5e4:	strb	r1, [r0]
   3b5e8:	ldr	r0, [fp, #-4]
   3b5ec:	ldrsb	r0, [r0, #25]
   3b5f0:	cmp	r0, #0
   3b5f4:	movw	r0, #0
   3b5f8:	movne	r0, #1
   3b5fc:	mvn	r1, #0
   3b600:	eor	r0, r0, r1
   3b604:	eor	r0, r0, r1
   3b608:	and	r0, r0, #1
   3b60c:	ldr	r1, [fp, #-4]
   3b610:	ldr	r2, [r1, #20]
   3b614:	add	r0, r2, r0
   3b618:	str	r0, [r1, #20]
   3b61c:	mov	sp, fp
   3b620:	pop	{fp, pc}
   3b624:	push	{fp, lr}
   3b628:	mov	fp, sp
   3b62c:	sub	sp, sp, #16
   3b630:	str	r0, [fp, #-4]
   3b634:	str	r1, [sp, #8]
   3b638:	ldr	r0, [sp, #8]
   3b63c:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3b640:	str	r0, [sp, #4]
   3b644:	ldr	r0, [sp, #8]
   3b648:	add	r0, r0, #4
   3b64c:	str	r0, [sp]
   3b650:	ldr	r0, [fp, #-4]
   3b654:	ldr	r1, [sp]
   3b658:	ldr	r2, [sp, #4]
   3b65c:	bl	391ec <flatcc_json_printer_string@@Base+0x30>
   3b660:	mov	sp, fp
   3b664:	pop	{fp, pc}
   3b668:	push	{fp, lr}
   3b66c:	mov	fp, sp
   3b670:	sub	sp, sp, #8
   3b674:	str	r0, [sp, #4]
   3b678:	ldr	r0, [sp, #4]
   3b67c:	ldr	r1, [sp, #4]
   3b680:	str	r0, [sp]
   3b684:	mov	r0, r1
   3b688:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3b68c:	ldr	r1, [sp]
   3b690:	add	r0, r1, r0
   3b694:	mov	sp, fp
   3b698:	pop	{fp, pc}

0003b69c <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3b69c:	push	{fp, lr}
   3b6a0:	mov	fp, sp
   3b6a4:	sub	sp, sp, #40	; 0x28
   3b6a8:	ldr	ip, [fp, #12]
   3b6ac:	ldr	lr, [fp, #8]
   3b6b0:	str	r0, [fp, #-4]
   3b6b4:	str	r1, [fp, #-8]
   3b6b8:	str	r2, [fp, #-12]
   3b6bc:	str	r3, [fp, #-16]
   3b6c0:	ldr	r0, [fp, #-8]
   3b6c4:	ldr	r1, [fp, #-12]
   3b6c8:	str	ip, [sp, #12]
   3b6cc:	str	lr, [sp, #8]
   3b6d0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3b6d4:	str	r0, [sp, #20]
   3b6d8:	ldr	r0, [fp, #12]
   3b6dc:	cmp	r0, #0
   3b6e0:	movw	r0, #0
   3b6e4:	movne	r0, #1
   3b6e8:	tst	r0, #1
   3b6ec:	movw	r0, #1
   3b6f0:	moveq	r0, #0
   3b6f4:	str	r0, [sp, #16]
   3b6f8:	ldr	r0, [sp, #16]
   3b6fc:	orr	r0, r0, #128	; 0x80
   3b700:	str	r0, [sp, #16]
   3b704:	ldr	r0, [sp, #20]
   3b708:	movw	r1, #0
   3b70c:	cmp	r0, r1
   3b710:	beq	3b780 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe4>
   3b714:	ldr	r0, [fp, #-8]
   3b718:	ldr	r1, [r0, #16]
   3b71c:	add	r2, r1, #1
   3b720:	str	r2, [r0, #16]
   3b724:	cmp	r1, #0
   3b728:	beq	3b744 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa8>
   3b72c:	ldr	r0, [fp, #-4]
   3b730:	ldr	r1, [r0, #20]
   3b734:	add	r2, r1, #1
   3b738:	str	r2, [r0, #20]
   3b73c:	movw	r0, #44	; 0x2c
   3b740:	strb	r0, [r1]
   3b744:	ldr	r0, [fp, #-4]
   3b748:	ldr	r1, [fp, #-16]
   3b74c:	ldr	r2, [fp, #8]
   3b750:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3b754:	ldr	r0, [fp, #-4]
   3b758:	ldr	r1, [sp, #20]
   3b75c:	str	r0, [sp, #4]
   3b760:	mov	r0, r1
   3b764:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3b768:	ldr	r2, [sp, #16]
   3b76c:	ldr	r1, [sp, #4]
   3b770:	str	r0, [sp]
   3b774:	mov	r0, r1
   3b778:	ldr	r1, [sp]
   3b77c:	bl	3b788 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xec>
   3b780:	mov	sp, fp
   3b784:	pop	{fp, pc}
   3b788:	push	{fp, lr}
   3b78c:	mov	fp, sp
   3b790:	sub	sp, sp, #64	; 0x40
   3b794:	str	r0, [fp, #-4]
   3b798:	str	r1, [fp, #-8]
   3b79c:	str	r2, [fp, #-12]
   3b7a0:	ldr	r0, [fp, #-12]
   3b7a4:	mvn	r1, #128	; 0x80
   3b7a8:	and	r0, r0, r1
   3b7ac:	str	r0, [fp, #-16]
   3b7b0:	ldr	r0, [fp, #-8]
   3b7b4:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3b7b8:	str	r0, [sp, #28]
   3b7bc:	ldr	r0, [fp, #-8]
   3b7c0:	add	r0, r0, #4
   3b7c4:	str	r0, [sp, #32]
   3b7c8:	ldr	r0, [fp, #-4]
   3b7cc:	ldr	r1, [r0, #20]
   3b7d0:	add	r2, r1, #1
   3b7d4:	str	r2, [r0, #20]
   3b7d8:	movw	r0, #34	; 0x22
   3b7dc:	strb	r0, [r1]
   3b7e0:	ldr	r0, [sp, #28]
   3b7e4:	ldr	r1, [fp, #-12]
   3b7e8:	bl	45660 <flatcc_json_printer_clear@@Base+0x173c>
   3b7ec:	str	r0, [fp, #-28]	; 0xffffffe4
   3b7f0:	ldr	r0, [fp, #-4]
   3b7f4:	ldr	r0, [r0, #20]
   3b7f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b7fc:	add	r0, r0, r1
   3b800:	ldr	r1, [fp, #-4]
   3b804:	ldr	r1, [r1, #16]
   3b808:	cmp	r0, r1
   3b80c:	bcc	3b830 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   3b810:	ldr	r0, [fp, #-4]
   3b814:	ldr	r0, [r0, #44]	; 0x2c
   3b818:	ldr	r1, [fp, #-4]
   3b81c:	str	r0, [sp, #20]
   3b820:	mov	r0, r1
   3b824:	movw	r1, #0
   3b828:	ldr	r2, [sp, #20]
   3b82c:	blx	r2
   3b830:	b	3b834 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3b834:	ldr	r0, [fp, #-4]
   3b838:	ldr	r0, [r0, #20]
   3b83c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b840:	add	r0, r0, r1
   3b844:	ldr	r1, [fp, #-4]
   3b848:	ldr	r1, [r1, #16]
   3b84c:	cmp	r0, r1
   3b850:	bls	3b958 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2bc>
   3b854:	ldr	r0, [fp, #-4]
   3b858:	ldr	r1, [r0, #16]
   3b85c:	ldr	r0, [r0, #20]
   3b860:	sub	r0, r1, r0
   3b864:	bic	r0, r0, #3
   3b868:	str	r0, [fp, #-20]	; 0xffffffec
   3b86c:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b870:	add	r0, r0, r0, lsl #1
   3b874:	lsr	r0, r0, #2
   3b878:	str	r0, [fp, #-24]	; 0xffffffe8
   3b87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b880:	cmp	r0, #0
   3b884:	bls	3b88c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   3b888:	b	3b8ac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x210>
   3b88c:	ldr	r0, [pc, #292]	; 3b9b8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x31c>
   3b890:	add	r0, pc, r0
   3b894:	ldr	r1, [pc, #288]	; 3b9bc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x320>
   3b898:	add	r1, pc, r1
   3b89c:	ldr	r2, [pc, #284]	; 3b9c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x324>
   3b8a0:	add	r3, pc, r2
   3b8a4:	movw	r2, #277	; 0x115
   3b8a8:	bl	14f08 <__assert_fail@plt>
   3b8ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b8b0:	add	r0, r0, r0, lsl #1
   3b8b4:	lsr	r0, r0, #2
   3b8b8:	str	r0, [sp, #24]
   3b8bc:	ldr	r0, [fp, #-4]
   3b8c0:	ldr	r0, [r0, #20]
   3b8c4:	ldr	r1, [sp, #32]
   3b8c8:	ldr	r2, [fp, #-16]
   3b8cc:	movw	r3, #0
   3b8d0:	str	r2, [sp, #16]
   3b8d4:	mov	r2, r3
   3b8d8:	add	r3, sp, #24
   3b8dc:	ldr	ip, [sp, #16]
   3b8e0:	str	ip, [sp]
   3b8e4:	bl	4571c <flatcc_json_printer_clear@@Base+0x17f8>
   3b8e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b8ec:	ldr	r2, [fp, #-4]
   3b8f0:	ldr	r3, [r2, #20]
   3b8f4:	add	r1, r3, r1
   3b8f8:	str	r1, [r2, #20]
   3b8fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b900:	ldr	r2, [sp, #32]
   3b904:	add	r1, r2, r1
   3b908:	str	r1, [sp, #32]
   3b90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b910:	ldr	r2, [sp, #28]
   3b914:	sub	r1, r2, r1
   3b918:	str	r1, [sp, #28]
   3b91c:	ldr	r1, [fp, #-4]
   3b920:	ldr	r1, [r1, #44]	; 0x2c
   3b924:	ldr	r2, [fp, #-4]
   3b928:	str	r0, [sp, #12]
   3b92c:	mov	r0, r2
   3b930:	movw	r2, #0
   3b934:	str	r1, [sp, #8]
   3b938:	mov	r1, r2
   3b93c:	ldr	r2, [sp, #8]
   3b940:	blx	r2
   3b944:	ldr	r0, [sp, #28]
   3b948:	ldr	r1, [fp, #-12]
   3b94c:	bl	45660 <flatcc_json_printer_clear@@Base+0x173c>
   3b950:	str	r0, [fp, #-28]	; 0xffffffe4
   3b954:	b	3b834 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3b958:	ldr	r0, [fp, #-4]
   3b95c:	ldr	r0, [r0, #20]
   3b960:	ldr	r1, [sp, #32]
   3b964:	ldr	r2, [fp, #-12]
   3b968:	movw	r3, #0
   3b96c:	str	r2, [sp, #4]
   3b970:	mov	r2, r3
   3b974:	add	r3, sp, #28
   3b978:	ldr	ip, [sp, #4]
   3b97c:	str	ip, [sp]
   3b980:	bl	4571c <flatcc_json_printer_clear@@Base+0x17f8>
   3b984:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b988:	ldr	r2, [fp, #-4]
   3b98c:	ldr	r3, [r2, #20]
   3b990:	add	r1, r3, r1
   3b994:	str	r1, [r2, #20]
   3b998:	ldr	r1, [fp, #-4]
   3b99c:	ldr	r2, [r1, #20]
   3b9a0:	add	r3, r2, #1
   3b9a4:	str	r3, [r1, #20]
   3b9a8:	movw	r1, #34	; 0x22
   3b9ac:	strb	r1, [r2]
   3b9b0:	mov	sp, fp
   3b9b4:	pop	{fp, pc}
   3b9b8:	andeq	r0, r1, r9, lsl #14
   3b9bc:	andeq	r0, r1, r7, lsl #7
   3b9c0:	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>

0003b9c4 <flatcc_json_printer_uint8_field@@Base>:
   3b9c4:	push	{fp, lr}
   3b9c8:	mov	fp, sp
   3b9cc:	sub	sp, sp, #32
   3b9d0:	ldr	ip, [fp, #12]
   3b9d4:	ldr	lr, [fp, #8]
   3b9d8:	str	r0, [fp, #-4]
   3b9dc:	str	r1, [fp, #-8]
   3b9e0:	str	r2, [fp, #-12]
   3b9e4:	str	r3, [sp, #16]
   3b9e8:	strb	ip, [sp, #15]
   3b9ec:	ldr	r0, [fp, #-8]
   3b9f0:	ldr	r1, [fp, #-12]
   3b9f4:	str	lr, [sp, #4]
   3b9f8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3b9fc:	str	r0, [sp, #8]
   3ba00:	ldr	r0, [sp, #8]
   3ba04:	movw	r1, #0
   3ba08:	cmp	r0, r1
   3ba0c:	beq	3ba44 <flatcc_json_printer_uint8_field@@Base+0x80>
   3ba10:	ldr	r0, [sp, #8]
   3ba14:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3ba18:	strb	r0, [sp, #14]
   3ba1c:	ldrb	r0, [sp, #14]
   3ba20:	ldrb	r1, [sp, #15]
   3ba24:	cmp	r0, r1
   3ba28:	bne	3ba40 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3ba2c:	ldr	r0, [fp, #-4]
   3ba30:	ldrb	r0, [r0, #28]
   3ba34:	cmp	r0, #0
   3ba38:	beq	3ba40 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3ba3c:	b	3bac4 <flatcc_json_printer_uint8_field@@Base+0x100>
   3ba40:	b	3ba60 <flatcc_json_printer_uint8_field@@Base+0x9c>
   3ba44:	ldr	r0, [fp, #-4]
   3ba48:	ldrsb	r0, [r0, #29]
   3ba4c:	cmp	r0, #0
   3ba50:	bne	3ba58 <flatcc_json_printer_uint8_field@@Base+0x94>
   3ba54:	b	3bac4 <flatcc_json_printer_uint8_field@@Base+0x100>
   3ba58:	ldrb	r0, [sp, #15]
   3ba5c:	strb	r0, [sp, #14]
   3ba60:	ldr	r0, [fp, #-8]
   3ba64:	ldr	r1, [r0, #16]
   3ba68:	add	r2, r1, #1
   3ba6c:	str	r2, [r0, #16]
   3ba70:	cmp	r1, #0
   3ba74:	beq	3ba90 <flatcc_json_printer_uint8_field@@Base+0xcc>
   3ba78:	ldr	r0, [fp, #-4]
   3ba7c:	ldr	r1, [r0, #20]
   3ba80:	add	r2, r1, #1
   3ba84:	str	r2, [r0, #20]
   3ba88:	movw	r0, #44	; 0x2c
   3ba8c:	strb	r0, [r1]
   3ba90:	ldr	r0, [fp, #-4]
   3ba94:	ldr	r1, [sp, #16]
   3ba98:	ldr	r2, [fp, #8]
   3ba9c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3baa0:	ldrb	r0, [sp, #14]
   3baa4:	ldr	r1, [fp, #-4]
   3baa8:	ldr	r1, [r1, #20]
   3baac:	and	r0, r0, #255	; 0xff
   3bab0:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3bab4:	ldr	r1, [fp, #-4]
   3bab8:	ldr	r2, [r1, #20]
   3babc:	add	r0, r2, r0
   3bac0:	str	r0, [r1, #20]
   3bac4:	mov	sp, fp
   3bac8:	pop	{fp, pc}
   3bacc:	push	{fp, lr}
   3bad0:	mov	fp, sp
   3bad4:	sub	sp, sp, #8
   3bad8:	str	r0, [sp, #4]
   3badc:	ldr	r0, [sp, #4]
   3bae0:	ldrb	r0, [r0]
   3bae4:	bl	45a88 <flatcc_json_printer_clear@@Base+0x1b64>
   3bae8:	and	r0, r0, #255	; 0xff
   3baec:	mov	sp, fp
   3baf0:	pop	{fp, pc}

0003baf4 <flatcc_json_printer_uint16_field@@Base>:
   3baf4:	push	{fp, lr}
   3baf8:	mov	fp, sp
   3bafc:	sub	sp, sp, #32
   3bb00:	ldr	ip, [fp, #12]
   3bb04:	ldr	lr, [fp, #8]
   3bb08:	str	r0, [fp, #-4]
   3bb0c:	str	r1, [fp, #-8]
   3bb10:	str	r2, [fp, #-12]
   3bb14:	str	r3, [sp, #16]
   3bb18:	strh	ip, [sp, #14]
   3bb1c:	ldr	r0, [fp, #-8]
   3bb20:	ldr	r1, [fp, #-12]
   3bb24:	str	lr, [sp, #4]
   3bb28:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3bb2c:	str	r0, [sp, #8]
   3bb30:	ldr	r0, [sp, #8]
   3bb34:	movw	r1, #0
   3bb38:	cmp	r0, r1
   3bb3c:	beq	3bb74 <flatcc_json_printer_uint16_field@@Base+0x80>
   3bb40:	ldr	r0, [sp, #8]
   3bb44:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3bb48:	strh	r0, [sp, #12]
   3bb4c:	ldrh	r0, [sp, #12]
   3bb50:	ldrh	r1, [sp, #14]
   3bb54:	cmp	r0, r1
   3bb58:	bne	3bb70 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3bb5c:	ldr	r0, [fp, #-4]
   3bb60:	ldrb	r0, [r0, #28]
   3bb64:	cmp	r0, #0
   3bb68:	beq	3bb70 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3bb6c:	b	3bbf4 <flatcc_json_printer_uint16_field@@Base+0x100>
   3bb70:	b	3bb90 <flatcc_json_printer_uint16_field@@Base+0x9c>
   3bb74:	ldr	r0, [fp, #-4]
   3bb78:	ldrsb	r0, [r0, #29]
   3bb7c:	cmp	r0, #0
   3bb80:	bne	3bb88 <flatcc_json_printer_uint16_field@@Base+0x94>
   3bb84:	b	3bbf4 <flatcc_json_printer_uint16_field@@Base+0x100>
   3bb88:	ldrh	r0, [sp, #14]
   3bb8c:	strh	r0, [sp, #12]
   3bb90:	ldr	r0, [fp, #-8]
   3bb94:	ldr	r1, [r0, #16]
   3bb98:	add	r2, r1, #1
   3bb9c:	str	r2, [r0, #16]
   3bba0:	cmp	r1, #0
   3bba4:	beq	3bbc0 <flatcc_json_printer_uint16_field@@Base+0xcc>
   3bba8:	ldr	r0, [fp, #-4]
   3bbac:	ldr	r1, [r0, #20]
   3bbb0:	add	r2, r1, #1
   3bbb4:	str	r2, [r0, #20]
   3bbb8:	movw	r0, #44	; 0x2c
   3bbbc:	strb	r0, [r1]
   3bbc0:	ldr	r0, [fp, #-4]
   3bbc4:	ldr	r1, [sp, #16]
   3bbc8:	ldr	r2, [fp, #8]
   3bbcc:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3bbd0:	ldrh	r0, [sp, #12]
   3bbd4:	ldr	r1, [fp, #-4]
   3bbd8:	ldr	r1, [r1, #20]
   3bbdc:	uxth	r0, r0
   3bbe0:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3bbe4:	ldr	r1, [fp, #-4]
   3bbe8:	ldr	r2, [r1, #20]
   3bbec:	add	r0, r2, r0
   3bbf0:	str	r0, [r1, #20]
   3bbf4:	mov	sp, fp
   3bbf8:	pop	{fp, pc}
   3bbfc:	push	{fp, lr}
   3bc00:	mov	fp, sp
   3bc04:	sub	sp, sp, #8
   3bc08:	str	r0, [sp, #4]
   3bc0c:	ldr	r0, [sp, #4]
   3bc10:	ldrh	r0, [r0]
   3bc14:	bl	45a9c <flatcc_json_printer_clear@@Base+0x1b78>
   3bc18:	uxth	r0, r0
   3bc1c:	mov	sp, fp
   3bc20:	pop	{fp, pc}

0003bc24 <flatcc_json_printer_uint32_field@@Base>:
   3bc24:	push	{fp, lr}
   3bc28:	mov	fp, sp
   3bc2c:	sub	sp, sp, #32
   3bc30:	ldr	ip, [fp, #12]
   3bc34:	ldr	lr, [fp, #8]
   3bc38:	str	r0, [fp, #-4]
   3bc3c:	str	r1, [fp, #-8]
   3bc40:	str	r2, [fp, #-12]
   3bc44:	str	r3, [sp, #16]
   3bc48:	ldr	r0, [fp, #-8]
   3bc4c:	ldr	r1, [fp, #-12]
   3bc50:	str	ip, [sp, #4]
   3bc54:	str	lr, [sp]
   3bc58:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3bc5c:	str	r0, [sp, #8]
   3bc60:	ldr	r0, [sp, #8]
   3bc64:	movw	r1, #0
   3bc68:	cmp	r0, r1
   3bc6c:	beq	3bca4 <flatcc_json_printer_uint32_field@@Base+0x80>
   3bc70:	ldr	r0, [sp, #8]
   3bc74:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3bc78:	str	r0, [sp, #12]
   3bc7c:	ldr	r0, [sp, #12]
   3bc80:	ldr	r1, [fp, #12]
   3bc84:	cmp	r0, r1
   3bc88:	bne	3bca0 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3bc8c:	ldr	r0, [fp, #-4]
   3bc90:	ldrb	r0, [r0, #28]
   3bc94:	cmp	r0, #0
   3bc98:	beq	3bca0 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3bc9c:	b	3bd20 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3bca0:	b	3bcc0 <flatcc_json_printer_uint32_field@@Base+0x9c>
   3bca4:	ldr	r0, [fp, #-4]
   3bca8:	ldrsb	r0, [r0, #29]
   3bcac:	cmp	r0, #0
   3bcb0:	bne	3bcb8 <flatcc_json_printer_uint32_field@@Base+0x94>
   3bcb4:	b	3bd20 <flatcc_json_printer_uint32_field@@Base+0xfc>
   3bcb8:	ldr	r0, [fp, #12]
   3bcbc:	str	r0, [sp, #12]
   3bcc0:	ldr	r0, [fp, #-8]
   3bcc4:	ldr	r1, [r0, #16]
   3bcc8:	add	r2, r1, #1
   3bccc:	str	r2, [r0, #16]
   3bcd0:	cmp	r1, #0
   3bcd4:	beq	3bcf0 <flatcc_json_printer_uint32_field@@Base+0xcc>
   3bcd8:	ldr	r0, [fp, #-4]
   3bcdc:	ldr	r1, [r0, #20]
   3bce0:	add	r2, r1, #1
   3bce4:	str	r2, [r0, #20]
   3bce8:	movw	r0, #44	; 0x2c
   3bcec:	strb	r0, [r1]
   3bcf0:	ldr	r0, [fp, #-4]
   3bcf4:	ldr	r1, [sp, #16]
   3bcf8:	ldr	r2, [fp, #8]
   3bcfc:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3bd00:	ldr	r0, [sp, #12]
   3bd04:	ldr	r1, [fp, #-4]
   3bd08:	ldr	r1, [r1, #20]
   3bd0c:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3bd10:	ldr	r1, [fp, #-4]
   3bd14:	ldr	r2, [r1, #20]
   3bd18:	add	r0, r2, r0
   3bd1c:	str	r0, [r1, #20]
   3bd20:	mov	sp, fp
   3bd24:	pop	{fp, pc}
   3bd28:	push	{fp, lr}
   3bd2c:	mov	fp, sp
   3bd30:	sub	sp, sp, #8
   3bd34:	str	r0, [sp, #4]
   3bd38:	ldr	r0, [sp, #4]
   3bd3c:	ldr	r0, [r0]
   3bd40:	bl	45ab0 <flatcc_json_printer_clear@@Base+0x1b8c>
   3bd44:	mov	sp, fp
   3bd48:	pop	{fp, pc}

0003bd4c <flatcc_json_printer_uint64_field@@Base>:
   3bd4c:	push	{r4, sl, fp, lr}
   3bd50:	add	fp, sp, #8
   3bd54:	sub	sp, sp, #40	; 0x28
   3bd58:	ldr	ip, [fp, #20]
   3bd5c:	ldr	lr, [fp, #16]
   3bd60:	ldr	r4, [fp, #8]
   3bd64:	str	r0, [fp, #-12]
   3bd68:	str	r1, [fp, #-16]
   3bd6c:	str	r2, [fp, #-20]	; 0xffffffec
   3bd70:	str	r3, [sp, #24]
   3bd74:	str	ip, [sp, #20]
   3bd78:	str	lr, [sp, #16]
   3bd7c:	ldr	r0, [fp, #-16]
   3bd80:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd84:	str	r4, [sp]
   3bd88:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3bd8c:	str	r0, [sp, #4]
   3bd90:	ldr	r0, [sp, #4]
   3bd94:	movw	r1, #0
   3bd98:	cmp	r0, r1
   3bd9c:	beq	3bdf0 <flatcc_json_printer_uint64_field@@Base+0xa4>
   3bda0:	ldr	r0, [sp, #4]
   3bda4:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3bda8:	str	r1, [sp, #12]
   3bdac:	str	r0, [sp, #8]
   3bdb0:	ldr	r0, [sp, #8]
   3bdb4:	ldr	r1, [sp, #12]
   3bdb8:	ldr	r2, [sp, #16]
   3bdbc:	ldr	r3, [sp, #20]
   3bdc0:	eor	r1, r1, r3
   3bdc4:	eor	r0, r0, r2
   3bdc8:	orr	r0, r0, r1
   3bdcc:	cmp	r0, #0
   3bdd0:	bne	3bdec <flatcc_json_printer_uint64_field@@Base+0xa0>
   3bdd4:	b	3bdd8 <flatcc_json_printer_uint64_field@@Base+0x8c>
   3bdd8:	ldr	r0, [fp, #-12]
   3bddc:	ldrb	r0, [r0, #28]
   3bde0:	cmp	r0, #0
   3bde4:	beq	3bdec <flatcc_json_printer_uint64_field@@Base+0xa0>
   3bde8:	b	3be78 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3bdec:	b	3be14 <flatcc_json_printer_uint64_field@@Base+0xc8>
   3bdf0:	ldr	r0, [fp, #-12]
   3bdf4:	ldrsb	r0, [r0, #29]
   3bdf8:	cmp	r0, #0
   3bdfc:	bne	3be04 <flatcc_json_printer_uint64_field@@Base+0xb8>
   3be00:	b	3be78 <flatcc_json_printer_uint64_field@@Base+0x12c>
   3be04:	ldr	r0, [sp, #16]
   3be08:	ldr	r1, [sp, #20]
   3be0c:	str	r1, [sp, #12]
   3be10:	str	r0, [sp, #8]
   3be14:	ldr	r0, [fp, #-16]
   3be18:	ldr	r1, [r0, #16]
   3be1c:	add	r2, r1, #1
   3be20:	str	r2, [r0, #16]
   3be24:	cmp	r1, #0
   3be28:	beq	3be44 <flatcc_json_printer_uint64_field@@Base+0xf8>
   3be2c:	ldr	r0, [fp, #-12]
   3be30:	ldr	r1, [r0, #20]
   3be34:	add	r2, r1, #1
   3be38:	str	r2, [r0, #20]
   3be3c:	movw	r0, #44	; 0x2c
   3be40:	strb	r0, [r1]
   3be44:	ldr	r0, [fp, #-12]
   3be48:	ldr	r1, [sp, #24]
   3be4c:	ldr	r2, [fp, #8]
   3be50:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3be54:	ldr	r0, [sp, #8]
   3be58:	ldr	r1, [sp, #12]
   3be5c:	ldr	r2, [fp, #-12]
   3be60:	ldr	r2, [r2, #20]
   3be64:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3be68:	ldr	r1, [fp, #-12]
   3be6c:	ldr	r2, [r1, #20]
   3be70:	add	r0, r2, r0
   3be74:	str	r0, [r1, #20]
   3be78:	sub	sp, fp, #8
   3be7c:	pop	{r4, sl, fp, pc}
   3be80:	push	{fp, lr}
   3be84:	mov	fp, sp
   3be88:	sub	sp, sp, #8
   3be8c:	str	r0, [sp, #4]
   3be90:	ldr	r0, [sp, #4]
   3be94:	ldr	r1, [r0]
   3be98:	ldr	r0, [r0, #4]
   3be9c:	str	r0, [sp]
   3bea0:	mov	r0, r1
   3bea4:	ldr	r1, [sp]
   3bea8:	bl	45ac4 <flatcc_json_printer_clear@@Base+0x1ba0>
   3beac:	mov	sp, fp
   3beb0:	pop	{fp, pc}

0003beb4 <flatcc_json_printer_int8_field@@Base>:
   3beb4:	push	{fp, lr}
   3beb8:	mov	fp, sp
   3bebc:	sub	sp, sp, #32
   3bec0:	ldr	ip, [fp, #12]
   3bec4:	ldr	lr, [fp, #8]
   3bec8:	str	r0, [fp, #-4]
   3becc:	str	r1, [fp, #-8]
   3bed0:	str	r2, [fp, #-12]
   3bed4:	str	r3, [sp, #16]
   3bed8:	strb	ip, [sp, #15]
   3bedc:	ldr	r0, [fp, #-8]
   3bee0:	ldr	r1, [fp, #-12]
   3bee4:	str	lr, [sp, #4]
   3bee8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3beec:	str	r0, [sp, #8]
   3bef0:	ldr	r0, [sp, #8]
   3bef4:	movw	r1, #0
   3bef8:	cmp	r0, r1
   3befc:	beq	3bf34 <flatcc_json_printer_int8_field@@Base+0x80>
   3bf00:	ldr	r0, [sp, #8]
   3bf04:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3bf08:	strb	r0, [sp, #14]
   3bf0c:	ldrsb	r0, [sp, #14]
   3bf10:	ldrsb	r1, [sp, #15]
   3bf14:	cmp	r0, r1
   3bf18:	bne	3bf30 <flatcc_json_printer_int8_field@@Base+0x7c>
   3bf1c:	ldr	r0, [fp, #-4]
   3bf20:	ldrb	r0, [r0, #28]
   3bf24:	cmp	r0, #0
   3bf28:	beq	3bf30 <flatcc_json_printer_int8_field@@Base+0x7c>
   3bf2c:	b	3bfb4 <flatcc_json_printer_int8_field@@Base+0x100>
   3bf30:	b	3bf50 <flatcc_json_printer_int8_field@@Base+0x9c>
   3bf34:	ldr	r0, [fp, #-4]
   3bf38:	ldrsb	r0, [r0, #29]
   3bf3c:	cmp	r0, #0
   3bf40:	bne	3bf48 <flatcc_json_printer_int8_field@@Base+0x94>
   3bf44:	b	3bfb4 <flatcc_json_printer_int8_field@@Base+0x100>
   3bf48:	ldrb	r0, [sp, #15]
   3bf4c:	strb	r0, [sp, #14]
   3bf50:	ldr	r0, [fp, #-8]
   3bf54:	ldr	r1, [r0, #16]
   3bf58:	add	r2, r1, #1
   3bf5c:	str	r2, [r0, #16]
   3bf60:	cmp	r1, #0
   3bf64:	beq	3bf80 <flatcc_json_printer_int8_field@@Base+0xcc>
   3bf68:	ldr	r0, [fp, #-4]
   3bf6c:	ldr	r1, [r0, #20]
   3bf70:	add	r2, r1, #1
   3bf74:	str	r2, [r0, #20]
   3bf78:	movw	r0, #44	; 0x2c
   3bf7c:	strb	r0, [r1]
   3bf80:	ldr	r0, [fp, #-4]
   3bf84:	ldr	r1, [sp, #16]
   3bf88:	ldr	r2, [fp, #8]
   3bf8c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3bf90:	ldrb	r0, [sp, #14]
   3bf94:	ldr	r1, [fp, #-4]
   3bf98:	ldr	r1, [r1, #20]
   3bf9c:	sxtb	r0, r0
   3bfa0:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3bfa4:	ldr	r1, [fp, #-4]
   3bfa8:	ldr	r2, [r1, #20]
   3bfac:	add	r0, r2, r0
   3bfb0:	str	r0, [r1, #20]
   3bfb4:	mov	sp, fp
   3bfb8:	pop	{fp, pc}
   3bfbc:	push	{fp, lr}
   3bfc0:	mov	fp, sp
   3bfc4:	sub	sp, sp, #8
   3bfc8:	str	r0, [sp, #4]
   3bfcc:	ldr	r0, [sp, #4]
   3bfd0:	ldrsb	r0, [r0]
   3bfd4:	bl	45ae0 <flatcc_json_printer_clear@@Base+0x1bbc>
   3bfd8:	sxtb	r0, r0
   3bfdc:	mov	sp, fp
   3bfe0:	pop	{fp, pc}

0003bfe4 <flatcc_json_printer_int16_field@@Base>:
   3bfe4:	push	{fp, lr}
   3bfe8:	mov	fp, sp
   3bfec:	sub	sp, sp, #32
   3bff0:	ldr	ip, [fp, #12]
   3bff4:	ldr	lr, [fp, #8]
   3bff8:	str	r0, [fp, #-4]
   3bffc:	str	r1, [fp, #-8]
   3c000:	str	r2, [fp, #-12]
   3c004:	str	r3, [sp, #16]
   3c008:	strh	ip, [sp, #14]
   3c00c:	ldr	r0, [fp, #-8]
   3c010:	ldr	r1, [fp, #-12]
   3c014:	str	lr, [sp, #4]
   3c018:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c01c:	str	r0, [sp, #8]
   3c020:	ldr	r0, [sp, #8]
   3c024:	movw	r1, #0
   3c028:	cmp	r0, r1
   3c02c:	beq	3c064 <flatcc_json_printer_int16_field@@Base+0x80>
   3c030:	ldr	r0, [sp, #8]
   3c034:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3c038:	strh	r0, [sp, #12]
   3c03c:	ldrsh	r0, [sp, #12]
   3c040:	ldrsh	r1, [sp, #14]
   3c044:	cmp	r0, r1
   3c048:	bne	3c060 <flatcc_json_printer_int16_field@@Base+0x7c>
   3c04c:	ldr	r0, [fp, #-4]
   3c050:	ldrb	r0, [r0, #28]
   3c054:	cmp	r0, #0
   3c058:	beq	3c060 <flatcc_json_printer_int16_field@@Base+0x7c>
   3c05c:	b	3c0e4 <flatcc_json_printer_int16_field@@Base+0x100>
   3c060:	b	3c080 <flatcc_json_printer_int16_field@@Base+0x9c>
   3c064:	ldr	r0, [fp, #-4]
   3c068:	ldrsb	r0, [r0, #29]
   3c06c:	cmp	r0, #0
   3c070:	bne	3c078 <flatcc_json_printer_int16_field@@Base+0x94>
   3c074:	b	3c0e4 <flatcc_json_printer_int16_field@@Base+0x100>
   3c078:	ldrh	r0, [sp, #14]
   3c07c:	strh	r0, [sp, #12]
   3c080:	ldr	r0, [fp, #-8]
   3c084:	ldr	r1, [r0, #16]
   3c088:	add	r2, r1, #1
   3c08c:	str	r2, [r0, #16]
   3c090:	cmp	r1, #0
   3c094:	beq	3c0b0 <flatcc_json_printer_int16_field@@Base+0xcc>
   3c098:	ldr	r0, [fp, #-4]
   3c09c:	ldr	r1, [r0, #20]
   3c0a0:	add	r2, r1, #1
   3c0a4:	str	r2, [r0, #20]
   3c0a8:	movw	r0, #44	; 0x2c
   3c0ac:	strb	r0, [r1]
   3c0b0:	ldr	r0, [fp, #-4]
   3c0b4:	ldr	r1, [sp, #16]
   3c0b8:	ldr	r2, [fp, #8]
   3c0bc:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c0c0:	ldrh	r0, [sp, #12]
   3c0c4:	ldr	r1, [fp, #-4]
   3c0c8:	ldr	r1, [r1, #20]
   3c0cc:	sxth	r0, r0
   3c0d0:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3c0d4:	ldr	r1, [fp, #-4]
   3c0d8:	ldr	r2, [r1, #20]
   3c0dc:	add	r0, r2, r0
   3c0e0:	str	r0, [r1, #20]
   3c0e4:	mov	sp, fp
   3c0e8:	pop	{fp, pc}
   3c0ec:	push	{fp, lr}
   3c0f0:	mov	fp, sp
   3c0f4:	sub	sp, sp, #8
   3c0f8:	str	r0, [sp, #4]
   3c0fc:	ldr	r0, [sp, #4]
   3c100:	ldrsh	r0, [r0]
   3c104:	bl	45af4 <flatcc_json_printer_clear@@Base+0x1bd0>
   3c108:	sxth	r0, r0
   3c10c:	mov	sp, fp
   3c110:	pop	{fp, pc}

0003c114 <flatcc_json_printer_int32_field@@Base>:
   3c114:	push	{fp, lr}
   3c118:	mov	fp, sp
   3c11c:	sub	sp, sp, #32
   3c120:	ldr	ip, [fp, #12]
   3c124:	ldr	lr, [fp, #8]
   3c128:	str	r0, [fp, #-4]
   3c12c:	str	r1, [fp, #-8]
   3c130:	str	r2, [fp, #-12]
   3c134:	str	r3, [sp, #16]
   3c138:	ldr	r0, [fp, #-8]
   3c13c:	ldr	r1, [fp, #-12]
   3c140:	str	ip, [sp, #4]
   3c144:	str	lr, [sp]
   3c148:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c14c:	str	r0, [sp, #8]
   3c150:	ldr	r0, [sp, #8]
   3c154:	movw	r1, #0
   3c158:	cmp	r0, r1
   3c15c:	beq	3c194 <flatcc_json_printer_int32_field@@Base+0x80>
   3c160:	ldr	r0, [sp, #8]
   3c164:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3c168:	str	r0, [sp, #12]
   3c16c:	ldr	r0, [sp, #12]
   3c170:	ldr	r1, [fp, #12]
   3c174:	cmp	r0, r1
   3c178:	bne	3c190 <flatcc_json_printer_int32_field@@Base+0x7c>
   3c17c:	ldr	r0, [fp, #-4]
   3c180:	ldrb	r0, [r0, #28]
   3c184:	cmp	r0, #0
   3c188:	beq	3c190 <flatcc_json_printer_int32_field@@Base+0x7c>
   3c18c:	b	3c210 <flatcc_json_printer_int32_field@@Base+0xfc>
   3c190:	b	3c1b0 <flatcc_json_printer_int32_field@@Base+0x9c>
   3c194:	ldr	r0, [fp, #-4]
   3c198:	ldrsb	r0, [r0, #29]
   3c19c:	cmp	r0, #0
   3c1a0:	bne	3c1a8 <flatcc_json_printer_int32_field@@Base+0x94>
   3c1a4:	b	3c210 <flatcc_json_printer_int32_field@@Base+0xfc>
   3c1a8:	ldr	r0, [fp, #12]
   3c1ac:	str	r0, [sp, #12]
   3c1b0:	ldr	r0, [fp, #-8]
   3c1b4:	ldr	r1, [r0, #16]
   3c1b8:	add	r2, r1, #1
   3c1bc:	str	r2, [r0, #16]
   3c1c0:	cmp	r1, #0
   3c1c4:	beq	3c1e0 <flatcc_json_printer_int32_field@@Base+0xcc>
   3c1c8:	ldr	r0, [fp, #-4]
   3c1cc:	ldr	r1, [r0, #20]
   3c1d0:	add	r2, r1, #1
   3c1d4:	str	r2, [r0, #20]
   3c1d8:	movw	r0, #44	; 0x2c
   3c1dc:	strb	r0, [r1]
   3c1e0:	ldr	r0, [fp, #-4]
   3c1e4:	ldr	r1, [sp, #16]
   3c1e8:	ldr	r2, [fp, #8]
   3c1ec:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c1f0:	ldr	r0, [sp, #12]
   3c1f4:	ldr	r1, [fp, #-4]
   3c1f8:	ldr	r1, [r1, #20]
   3c1fc:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3c200:	ldr	r1, [fp, #-4]
   3c204:	ldr	r2, [r1, #20]
   3c208:	add	r0, r2, r0
   3c20c:	str	r0, [r1, #20]
   3c210:	mov	sp, fp
   3c214:	pop	{fp, pc}
   3c218:	push	{fp, lr}
   3c21c:	mov	fp, sp
   3c220:	sub	sp, sp, #8
   3c224:	str	r0, [sp, #4]
   3c228:	ldr	r0, [sp, #4]
   3c22c:	ldr	r0, [r0]
   3c230:	bl	45b08 <flatcc_json_printer_clear@@Base+0x1be4>
   3c234:	mov	sp, fp
   3c238:	pop	{fp, pc}

0003c23c <flatcc_json_printer_int64_field@@Base>:
   3c23c:	push	{r4, sl, fp, lr}
   3c240:	add	fp, sp, #8
   3c244:	sub	sp, sp, #40	; 0x28
   3c248:	ldr	ip, [fp, #20]
   3c24c:	ldr	lr, [fp, #16]
   3c250:	ldr	r4, [fp, #8]
   3c254:	str	r0, [fp, #-12]
   3c258:	str	r1, [fp, #-16]
   3c25c:	str	r2, [fp, #-20]	; 0xffffffec
   3c260:	str	r3, [sp, #24]
   3c264:	str	ip, [sp, #20]
   3c268:	str	lr, [sp, #16]
   3c26c:	ldr	r0, [fp, #-16]
   3c270:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c274:	str	r4, [sp]
   3c278:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c27c:	str	r0, [sp, #4]
   3c280:	ldr	r0, [sp, #4]
   3c284:	movw	r1, #0
   3c288:	cmp	r0, r1
   3c28c:	beq	3c2e0 <flatcc_json_printer_int64_field@@Base+0xa4>
   3c290:	ldr	r0, [sp, #4]
   3c294:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3c298:	str	r1, [sp, #12]
   3c29c:	str	r0, [sp, #8]
   3c2a0:	ldr	r0, [sp, #8]
   3c2a4:	ldr	r1, [sp, #12]
   3c2a8:	ldr	r2, [sp, #16]
   3c2ac:	ldr	r3, [sp, #20]
   3c2b0:	eor	r1, r1, r3
   3c2b4:	eor	r0, r0, r2
   3c2b8:	orr	r0, r0, r1
   3c2bc:	cmp	r0, #0
   3c2c0:	bne	3c2dc <flatcc_json_printer_int64_field@@Base+0xa0>
   3c2c4:	b	3c2c8 <flatcc_json_printer_int64_field@@Base+0x8c>
   3c2c8:	ldr	r0, [fp, #-12]
   3c2cc:	ldrb	r0, [r0, #28]
   3c2d0:	cmp	r0, #0
   3c2d4:	beq	3c2dc <flatcc_json_printer_int64_field@@Base+0xa0>
   3c2d8:	b	3c368 <flatcc_json_printer_int64_field@@Base+0x12c>
   3c2dc:	b	3c304 <flatcc_json_printer_int64_field@@Base+0xc8>
   3c2e0:	ldr	r0, [fp, #-12]
   3c2e4:	ldrsb	r0, [r0, #29]
   3c2e8:	cmp	r0, #0
   3c2ec:	bne	3c2f4 <flatcc_json_printer_int64_field@@Base+0xb8>
   3c2f0:	b	3c368 <flatcc_json_printer_int64_field@@Base+0x12c>
   3c2f4:	ldr	r0, [sp, #16]
   3c2f8:	ldr	r1, [sp, #20]
   3c2fc:	str	r1, [sp, #12]
   3c300:	str	r0, [sp, #8]
   3c304:	ldr	r0, [fp, #-16]
   3c308:	ldr	r1, [r0, #16]
   3c30c:	add	r2, r1, #1
   3c310:	str	r2, [r0, #16]
   3c314:	cmp	r1, #0
   3c318:	beq	3c334 <flatcc_json_printer_int64_field@@Base+0xf8>
   3c31c:	ldr	r0, [fp, #-12]
   3c320:	ldr	r1, [r0, #20]
   3c324:	add	r2, r1, #1
   3c328:	str	r2, [r0, #20]
   3c32c:	movw	r0, #44	; 0x2c
   3c330:	strb	r0, [r1]
   3c334:	ldr	r0, [fp, #-12]
   3c338:	ldr	r1, [sp, #24]
   3c33c:	ldr	r2, [fp, #8]
   3c340:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c344:	ldr	r0, [sp, #8]
   3c348:	ldr	r1, [sp, #12]
   3c34c:	ldr	r2, [fp, #-12]
   3c350:	ldr	r2, [r2, #20]
   3c354:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3c358:	ldr	r1, [fp, #-12]
   3c35c:	ldr	r2, [r1, #20]
   3c360:	add	r0, r2, r0
   3c364:	str	r0, [r1, #20]
   3c368:	sub	sp, fp, #8
   3c36c:	pop	{r4, sl, fp, pc}
   3c370:	push	{fp, lr}
   3c374:	mov	fp, sp
   3c378:	sub	sp, sp, #8
   3c37c:	str	r0, [sp, #4]
   3c380:	ldr	r0, [sp, #4]
   3c384:	ldr	r1, [r0]
   3c388:	ldr	r0, [r0, #4]
   3c38c:	str	r0, [sp]
   3c390:	mov	r0, r1
   3c394:	ldr	r1, [sp]
   3c398:	bl	45b1c <flatcc_json_printer_clear@@Base+0x1bf8>
   3c39c:	mov	sp, fp
   3c3a0:	pop	{fp, pc}

0003c3a4 <flatcc_json_printer_bool_field@@Base>:
   3c3a4:	push	{fp, lr}
   3c3a8:	mov	fp, sp
   3c3ac:	sub	sp, sp, #32
   3c3b0:	ldr	ip, [fp, #12]
   3c3b4:	ldr	lr, [fp, #8]
   3c3b8:	str	r0, [fp, #-4]
   3c3bc:	str	r1, [fp, #-8]
   3c3c0:	str	r2, [fp, #-12]
   3c3c4:	str	r3, [sp, #16]
   3c3c8:	strb	ip, [sp, #15]
   3c3cc:	ldr	r0, [fp, #-8]
   3c3d0:	ldr	r1, [fp, #-12]
   3c3d4:	str	lr, [sp, #4]
   3c3d8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c3dc:	str	r0, [sp, #8]
   3c3e0:	ldr	r0, [sp, #8]
   3c3e4:	movw	r1, #0
   3c3e8:	cmp	r0, r1
   3c3ec:	beq	3c424 <flatcc_json_printer_bool_field@@Base+0x80>
   3c3f0:	ldr	r0, [sp, #8]
   3c3f4:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3c3f8:	strb	r0, [sp, #14]
   3c3fc:	ldrb	r0, [sp, #14]
   3c400:	ldrb	r1, [sp, #15]
   3c404:	cmp	r0, r1
   3c408:	bne	3c420 <flatcc_json_printer_bool_field@@Base+0x7c>
   3c40c:	ldr	r0, [fp, #-4]
   3c410:	ldrb	r0, [r0, #28]
   3c414:	cmp	r0, #0
   3c418:	beq	3c420 <flatcc_json_printer_bool_field@@Base+0x7c>
   3c41c:	b	3c4a0 <flatcc_json_printer_bool_field@@Base+0xfc>
   3c420:	b	3c440 <flatcc_json_printer_bool_field@@Base+0x9c>
   3c424:	ldr	r0, [fp, #-4]
   3c428:	ldrsb	r0, [r0, #29]
   3c42c:	cmp	r0, #0
   3c430:	bne	3c438 <flatcc_json_printer_bool_field@@Base+0x94>
   3c434:	b	3c4a0 <flatcc_json_printer_bool_field@@Base+0xfc>
   3c438:	ldrb	r0, [sp, #15]
   3c43c:	strb	r0, [sp, #14]
   3c440:	ldr	r0, [fp, #-8]
   3c444:	ldr	r1, [r0, #16]
   3c448:	add	r2, r1, #1
   3c44c:	str	r2, [r0, #16]
   3c450:	cmp	r1, #0
   3c454:	beq	3c470 <flatcc_json_printer_bool_field@@Base+0xcc>
   3c458:	ldr	r0, [fp, #-4]
   3c45c:	ldr	r1, [r0, #20]
   3c460:	add	r2, r1, #1
   3c464:	str	r2, [r0, #20]
   3c468:	movw	r0, #44	; 0x2c
   3c46c:	strb	r0, [r1]
   3c470:	ldr	r0, [fp, #-4]
   3c474:	ldr	r1, [sp, #16]
   3c478:	ldr	r2, [fp, #8]
   3c47c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c480:	ldrb	r0, [sp, #14]
   3c484:	ldr	r1, [fp, #-4]
   3c488:	ldr	r1, [r1, #20]
   3c48c:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3c490:	ldr	r1, [fp, #-4]
   3c494:	ldr	r2, [r1, #20]
   3c498:	add	r0, r2, r0
   3c49c:	str	r0, [r1, #20]
   3c4a0:	mov	sp, fp
   3c4a4:	pop	{fp, pc}
   3c4a8:	push	{fp, lr}
   3c4ac:	mov	fp, sp
   3c4b0:	sub	sp, sp, #8
   3c4b4:	str	r0, [sp, #4]
   3c4b8:	ldr	r0, [sp, #4]
   3c4bc:	ldrb	r0, [r0]
   3c4c0:	bl	45b38 <flatcc_json_printer_clear@@Base+0x1c14>
   3c4c4:	and	r0, r0, #255	; 0xff
   3c4c8:	mov	sp, fp
   3c4cc:	pop	{fp, pc}
   3c4d0:	sub	sp, sp, #12
   3c4d4:	str	r0, [sp, #4]
   3c4d8:	str	r1, [sp]
   3c4dc:	ldr	r0, [sp, #4]
   3c4e0:	cmp	r0, #0
   3c4e4:	beq	3c528 <flatcc_json_printer_bool_field@@Base+0x184>
   3c4e8:	ldr	r0, [pc, #140]	; 3c57c <flatcc_json_printer_bool_field@@Base+0x1d8>
   3c4ec:	add	r0, pc, r0
   3c4f0:	ldr	r1, [sp]
   3c4f4:	ldrb	r2, [r0]
   3c4f8:	strb	r2, [r1]
   3c4fc:	ldrb	r2, [r0, #1]
   3c500:	strb	r2, [r1, #1]
   3c504:	ldrb	r2, [r0, #2]
   3c508:	strb	r2, [r1, #2]
   3c50c:	ldrb	r2, [r0, #3]
   3c510:	strb	r2, [r1, #3]
   3c514:	ldrb	r0, [r0, #4]
   3c518:	strb	r0, [r1, #4]
   3c51c:	movw	r0, #4
   3c520:	str	r0, [sp, #8]
   3c524:	b	3c56c <flatcc_json_printer_bool_field@@Base+0x1c8>
   3c528:	ldr	r0, [pc, #72]	; 3c578 <flatcc_json_printer_bool_field@@Base+0x1d4>
   3c52c:	add	r0, pc, r0
   3c530:	ldr	r1, [sp]
   3c534:	ldrb	r2, [r0]
   3c538:	strb	r2, [r1]
   3c53c:	ldrb	r2, [r0, #1]
   3c540:	strb	r2, [r1, #1]
   3c544:	ldrb	r2, [r0, #2]
   3c548:	strb	r2, [r1, #2]
   3c54c:	ldrb	r2, [r0, #3]
   3c550:	strb	r2, [r1, #3]
   3c554:	ldrb	r2, [r0, #4]
   3c558:	strb	r2, [r1, #4]
   3c55c:	ldrb	r0, [r0, #5]
   3c560:	strb	r0, [r1, #5]
   3c564:	movw	r0, #5
   3c568:	str	r0, [sp, #8]
   3c56c:	ldr	r0, [sp, #8]
   3c570:	add	sp, sp, #12
   3c574:	bx	lr
   3c578:	andeq	r0, r1, pc, lsr r2
   3c57c:	andeq	r0, r1, r9, ror r2

0003c580 <flatcc_json_printer_float_field@@Base>:
   3c580:	push	{fp, lr}
   3c584:	mov	fp, sp
   3c588:	sub	sp, sp, #32
   3c58c:	ldr	ip, [fp, #8]
   3c590:	str	r0, [fp, #-4]
   3c594:	str	r1, [fp, #-8]
   3c598:	str	r2, [fp, #-12]
   3c59c:	str	r3, [sp, #16]
   3c5a0:	vstr	s0, [sp, #12]
   3c5a4:	ldr	r0, [fp, #-8]
   3c5a8:	ldr	r1, [fp, #-12]
   3c5ac:	str	ip, [sp]
   3c5b0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c5b4:	str	r0, [sp, #4]
   3c5b8:	ldr	r0, [sp, #4]
   3c5bc:	movw	r1, #0
   3c5c0:	cmp	r0, r1
   3c5c4:	beq	3c600 <flatcc_json_printer_float_field@@Base+0x80>
   3c5c8:	ldr	r0, [sp, #4]
   3c5cc:	bl	3c688 <flatcc_json_printer_float_field@@Base+0x108>
   3c5d0:	vstr	s0, [sp, #8]
   3c5d4:	vldr	s0, [sp, #8]
   3c5d8:	vldr	s2, [sp, #12]
   3c5dc:	vcmp.f32	s0, s2
   3c5e0:	vmrs	APSR_nzcv, fpscr
   3c5e4:	bne	3c5fc <flatcc_json_printer_float_field@@Base+0x7c>
   3c5e8:	ldr	r0, [fp, #-4]
   3c5ec:	ldrb	r0, [r0, #28]
   3c5f0:	cmp	r0, #0
   3c5f4:	beq	3c5fc <flatcc_json_printer_float_field@@Base+0x7c>
   3c5f8:	b	3c680 <flatcc_json_printer_float_field@@Base+0x100>
   3c5fc:	b	3c61c <flatcc_json_printer_float_field@@Base+0x9c>
   3c600:	ldr	r0, [fp, #-4]
   3c604:	ldrsb	r0, [r0, #29]
   3c608:	cmp	r0, #0
   3c60c:	bne	3c614 <flatcc_json_printer_float_field@@Base+0x94>
   3c610:	b	3c680 <flatcc_json_printer_float_field@@Base+0x100>
   3c614:	vldr	s0, [sp, #12]
   3c618:	vstr	s0, [sp, #8]
   3c61c:	ldr	r0, [fp, #-8]
   3c620:	ldr	r1, [r0, #16]
   3c624:	add	r2, r1, #1
   3c628:	str	r2, [r0, #16]
   3c62c:	cmp	r1, #0
   3c630:	beq	3c64c <flatcc_json_printer_float_field@@Base+0xcc>
   3c634:	ldr	r0, [fp, #-4]
   3c638:	ldr	r1, [r0, #20]
   3c63c:	add	r2, r1, #1
   3c640:	str	r2, [r0, #20]
   3c644:	movw	r0, #44	; 0x2c
   3c648:	strb	r0, [r1]
   3c64c:	ldr	r0, [fp, #-4]
   3c650:	ldr	r1, [sp, #16]
   3c654:	ldr	r2, [fp, #8]
   3c658:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c65c:	vldr	s0, [sp, #8]
   3c660:	vcvt.f64.f32	d0, s0
   3c664:	ldr	r0, [fp, #-4]
   3c668:	ldr	r0, [r0, #20]
   3c66c:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3c670:	ldr	r1, [fp, #-4]
   3c674:	ldr	r2, [r1, #20]
   3c678:	add	r0, r2, r0
   3c67c:	str	r0, [r1, #20]
   3c680:	mov	sp, fp
   3c684:	pop	{fp, pc}
   3c688:	push	{fp, lr}
   3c68c:	mov	fp, sp
   3c690:	sub	sp, sp, #8
   3c694:	str	r0, [sp, #4]
   3c698:	ldr	r0, [sp, #4]
   3c69c:	vldr	s0, [r0]
   3c6a0:	bl	45b4c <flatcc_json_printer_clear@@Base+0x1c28>
   3c6a4:	mov	sp, fp
   3c6a8:	pop	{fp, pc}

0003c6ac <flatcc_json_printer_double_field@@Base>:
   3c6ac:	push	{fp, lr}
   3c6b0:	mov	fp, sp
   3c6b4:	sub	sp, sp, #40	; 0x28
   3c6b8:	ldr	ip, [fp, #8]
   3c6bc:	str	r0, [fp, #-4]
   3c6c0:	str	r1, [fp, #-8]
   3c6c4:	str	r2, [fp, #-12]
   3c6c8:	str	r3, [fp, #-16]
   3c6cc:	vstr	d0, [sp, #16]
   3c6d0:	ldr	r0, [fp, #-8]
   3c6d4:	ldr	r1, [fp, #-12]
   3c6d8:	str	ip, [sp]
   3c6dc:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c6e0:	str	r0, [sp, #4]
   3c6e4:	ldr	r0, [sp, #4]
   3c6e8:	movw	r1, #0
   3c6ec:	cmp	r0, r1
   3c6f0:	beq	3c72c <flatcc_json_printer_double_field@@Base+0x80>
   3c6f4:	ldr	r0, [sp, #4]
   3c6f8:	bl	3c7b0 <flatcc_json_printer_double_field@@Base+0x104>
   3c6fc:	vstr	d0, [sp, #8]
   3c700:	vldr	d16, [sp, #8]
   3c704:	vldr	d17, [sp, #16]
   3c708:	vcmp.f64	d16, d17
   3c70c:	vmrs	APSR_nzcv, fpscr
   3c710:	bne	3c728 <flatcc_json_printer_double_field@@Base+0x7c>
   3c714:	ldr	r0, [fp, #-4]
   3c718:	ldrb	r0, [r0, #28]
   3c71c:	cmp	r0, #0
   3c720:	beq	3c728 <flatcc_json_printer_double_field@@Base+0x7c>
   3c724:	b	3c7a8 <flatcc_json_printer_double_field@@Base+0xfc>
   3c728:	b	3c748 <flatcc_json_printer_double_field@@Base+0x9c>
   3c72c:	ldr	r0, [fp, #-4]
   3c730:	ldrsb	r0, [r0, #29]
   3c734:	cmp	r0, #0
   3c738:	bne	3c740 <flatcc_json_printer_double_field@@Base+0x94>
   3c73c:	b	3c7a8 <flatcc_json_printer_double_field@@Base+0xfc>
   3c740:	vldr	d16, [sp, #16]
   3c744:	vstr	d16, [sp, #8]
   3c748:	ldr	r0, [fp, #-8]
   3c74c:	ldr	r1, [r0, #16]
   3c750:	add	r2, r1, #1
   3c754:	str	r2, [r0, #16]
   3c758:	cmp	r1, #0
   3c75c:	beq	3c778 <flatcc_json_printer_double_field@@Base+0xcc>
   3c760:	ldr	r0, [fp, #-4]
   3c764:	ldr	r1, [r0, #20]
   3c768:	add	r2, r1, #1
   3c76c:	str	r2, [r0, #20]
   3c770:	movw	r0, #44	; 0x2c
   3c774:	strb	r0, [r1]
   3c778:	ldr	r0, [fp, #-4]
   3c77c:	ldr	r1, [fp, #-16]
   3c780:	ldr	r2, [fp, #8]
   3c784:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c788:	vldr	d0, [sp, #8]
   3c78c:	ldr	r0, [fp, #-4]
   3c790:	ldr	r0, [r0, #20]
   3c794:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3c798:	ldr	r1, [fp, #-4]
   3c79c:	ldr	r2, [r1, #20]
   3c7a0:	add	r0, r2, r0
   3c7a4:	str	r0, [r1, #20]
   3c7a8:	mov	sp, fp
   3c7ac:	pop	{fp, pc}
   3c7b0:	push	{fp, lr}
   3c7b4:	mov	fp, sp
   3c7b8:	sub	sp, sp, #8
   3c7bc:	str	r0, [sp, #4]
   3c7c0:	ldr	r0, [sp, #4]
   3c7c4:	vldr	d0, [r0]
   3c7c8:	bl	45b70 <flatcc_json_printer_clear@@Base+0x1c4c>
   3c7cc:	mov	sp, fp
   3c7d0:	pop	{fp, pc}

0003c7d4 <flatcc_json_printer_uint8_enum_field@@Base>:
   3c7d4:	push	{r4, sl, fp, lr}
   3c7d8:	add	fp, sp, #8
   3c7dc:	sub	sp, sp, #40	; 0x28
   3c7e0:	ldr	ip, [fp, #16]
   3c7e4:	ldr	lr, [fp, #12]
   3c7e8:	ldr	r4, [fp, #8]
   3c7ec:	str	r0, [fp, #-12]
   3c7f0:	str	r1, [fp, #-16]
   3c7f4:	str	r2, [fp, #-20]	; 0xffffffec
   3c7f8:	str	r3, [sp, #24]
   3c7fc:	strb	lr, [sp, #23]
   3c800:	ldr	r0, [fp, #-16]
   3c804:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c808:	str	ip, [sp, #12]
   3c80c:	str	r4, [sp, #8]
   3c810:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c814:	str	r0, [sp, #16]
   3c818:	ldr	r0, [sp, #16]
   3c81c:	movw	r1, #0
   3c820:	cmp	r0, r1
   3c824:	beq	3c85c <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   3c828:	ldr	r0, [sp, #16]
   3c82c:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3c830:	strb	r0, [sp, #22]
   3c834:	ldrb	r0, [sp, #22]
   3c838:	ldrb	r1, [sp, #23]
   3c83c:	cmp	r0, r1
   3c840:	bne	3c858 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3c844:	ldr	r0, [fp, #-12]
   3c848:	ldrb	r0, [r0, #28]
   3c84c:	cmp	r0, #0
   3c850:	beq	3c858 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3c854:	b	3c90c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3c858:	b	3c878 <flatcc_json_printer_uint8_enum_field@@Base+0xa4>
   3c85c:	ldr	r0, [fp, #-12]
   3c860:	ldrsb	r0, [r0, #29]
   3c864:	cmp	r0, #0
   3c868:	bne	3c870 <flatcc_json_printer_uint8_enum_field@@Base+0x9c>
   3c86c:	b	3c90c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3c870:	ldrb	r0, [sp, #23]
   3c874:	strb	r0, [sp, #22]
   3c878:	ldr	r0, [fp, #-16]
   3c87c:	ldr	r1, [r0, #16]
   3c880:	add	r2, r1, #1
   3c884:	str	r2, [r0, #16]
   3c888:	cmp	r1, #0
   3c88c:	beq	3c8a8 <flatcc_json_printer_uint8_enum_field@@Base+0xd4>
   3c890:	ldr	r0, [fp, #-12]
   3c894:	ldr	r1, [r0, #20]
   3c898:	add	r2, r1, #1
   3c89c:	str	r2, [r0, #20]
   3c8a0:	movw	r0, #44	; 0x2c
   3c8a4:	strb	r0, [r1]
   3c8a8:	ldr	r0, [fp, #-12]
   3c8ac:	ldr	r1, [sp, #24]
   3c8b0:	ldr	r2, [fp, #8]
   3c8b4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c8b8:	ldr	r0, [fp, #-12]
   3c8bc:	ldrsb	r0, [r0, #27]
   3c8c0:	cmp	r0, #0
   3c8c4:	beq	3c8f0 <flatcc_json_printer_uint8_enum_field@@Base+0x11c>
   3c8c8:	ldrb	r0, [sp, #22]
   3c8cc:	ldr	r1, [fp, #-12]
   3c8d0:	ldr	r1, [r1, #20]
   3c8d4:	and	r0, r0, #255	; 0xff
   3c8d8:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3c8dc:	ldr	r1, [fp, #-12]
   3c8e0:	ldr	r2, [r1, #20]
   3c8e4:	add	r0, r2, r0
   3c8e8:	str	r0, [r1, #20]
   3c8ec:	b	3c90c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   3c8f0:	ldr	r0, [fp, #16]
   3c8f4:	ldr	r1, [fp, #-12]
   3c8f8:	str	r0, [sp, #4]
   3c8fc:	mov	r0, r1
   3c900:	ldrb	r1, [sp, #22]
   3c904:	ldr	r2, [sp, #4]
   3c908:	blx	r2
   3c90c:	sub	sp, fp, #8
   3c910:	pop	{r4, sl, fp, pc}

0003c914 <flatcc_json_printer_uint16_enum_field@@Base>:
   3c914:	push	{r4, sl, fp, lr}
   3c918:	add	fp, sp, #8
   3c91c:	sub	sp, sp, #40	; 0x28
   3c920:	ldr	ip, [fp, #16]
   3c924:	ldr	lr, [fp, #12]
   3c928:	ldr	r4, [fp, #8]
   3c92c:	str	r0, [fp, #-12]
   3c930:	str	r1, [fp, #-16]
   3c934:	str	r2, [fp, #-20]	; 0xffffffec
   3c938:	str	r3, [sp, #24]
   3c93c:	strh	lr, [sp, #22]
   3c940:	ldr	r0, [fp, #-16]
   3c944:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c948:	str	ip, [sp, #12]
   3c94c:	str	r4, [sp, #8]
   3c950:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3c954:	str	r0, [sp, #16]
   3c958:	ldr	r0, [sp, #16]
   3c95c:	movw	r1, #0
   3c960:	cmp	r0, r1
   3c964:	beq	3c99c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   3c968:	ldr	r0, [sp, #16]
   3c96c:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3c970:	strh	r0, [sp, #20]
   3c974:	ldrh	r0, [sp, #20]
   3c978:	ldrh	r1, [sp, #22]
   3c97c:	cmp	r0, r1
   3c980:	bne	3c998 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3c984:	ldr	r0, [fp, #-12]
   3c988:	ldrb	r0, [r0, #28]
   3c98c:	cmp	r0, #0
   3c990:	beq	3c998 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   3c994:	b	3ca4c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3c998:	b	3c9b8 <flatcc_json_printer_uint16_enum_field@@Base+0xa4>
   3c99c:	ldr	r0, [fp, #-12]
   3c9a0:	ldrsb	r0, [r0, #29]
   3c9a4:	cmp	r0, #0
   3c9a8:	bne	3c9b0 <flatcc_json_printer_uint16_enum_field@@Base+0x9c>
   3c9ac:	b	3ca4c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3c9b0:	ldrh	r0, [sp, #22]
   3c9b4:	strh	r0, [sp, #20]
   3c9b8:	ldr	r0, [fp, #-16]
   3c9bc:	ldr	r1, [r0, #16]
   3c9c0:	add	r2, r1, #1
   3c9c4:	str	r2, [r0, #16]
   3c9c8:	cmp	r1, #0
   3c9cc:	beq	3c9e8 <flatcc_json_printer_uint16_enum_field@@Base+0xd4>
   3c9d0:	ldr	r0, [fp, #-12]
   3c9d4:	ldr	r1, [r0, #20]
   3c9d8:	add	r2, r1, #1
   3c9dc:	str	r2, [r0, #20]
   3c9e0:	movw	r0, #44	; 0x2c
   3c9e4:	strb	r0, [r1]
   3c9e8:	ldr	r0, [fp, #-12]
   3c9ec:	ldr	r1, [sp, #24]
   3c9f0:	ldr	r2, [fp, #8]
   3c9f4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3c9f8:	ldr	r0, [fp, #-12]
   3c9fc:	ldrsb	r0, [r0, #27]
   3ca00:	cmp	r0, #0
   3ca04:	beq	3ca30 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
   3ca08:	ldrh	r0, [sp, #20]
   3ca0c:	ldr	r1, [fp, #-12]
   3ca10:	ldr	r1, [r1, #20]
   3ca14:	uxth	r0, r0
   3ca18:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3ca1c:	ldr	r1, [fp, #-12]
   3ca20:	ldr	r2, [r1, #20]
   3ca24:	add	r0, r2, r0
   3ca28:	str	r0, [r1, #20]
   3ca2c:	b	3ca4c <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   3ca30:	ldr	r0, [fp, #16]
   3ca34:	ldr	r1, [fp, #-12]
   3ca38:	str	r0, [sp, #4]
   3ca3c:	mov	r0, r1
   3ca40:	ldrh	r1, [sp, #20]
   3ca44:	ldr	r2, [sp, #4]
   3ca48:	blx	r2
   3ca4c:	sub	sp, fp, #8
   3ca50:	pop	{r4, sl, fp, pc}

0003ca54 <flatcc_json_printer_uint32_enum_field@@Base>:
   3ca54:	push	{r4, sl, fp, lr}
   3ca58:	add	fp, sp, #8
   3ca5c:	sub	sp, sp, #40	; 0x28
   3ca60:	ldr	ip, [fp, #16]
   3ca64:	ldr	lr, [fp, #12]
   3ca68:	ldr	r4, [fp, #8]
   3ca6c:	str	r0, [fp, #-12]
   3ca70:	str	r1, [fp, #-16]
   3ca74:	str	r2, [fp, #-20]	; 0xffffffec
   3ca78:	str	r3, [sp, #24]
   3ca7c:	ldr	r0, [fp, #-16]
   3ca80:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ca84:	str	ip, [sp, #12]
   3ca88:	str	lr, [sp, #8]
   3ca8c:	str	r4, [sp, #4]
   3ca90:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ca94:	str	r0, [sp, #16]
   3ca98:	ldr	r0, [sp, #16]
   3ca9c:	movw	r1, #0
   3caa0:	cmp	r0, r1
   3caa4:	beq	3cadc <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   3caa8:	ldr	r0, [sp, #16]
   3caac:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3cab0:	str	r0, [sp, #20]
   3cab4:	ldr	r0, [sp, #20]
   3cab8:	ldr	r1, [fp, #12]
   3cabc:	cmp	r0, r1
   3cac0:	bne	3cad8 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3cac4:	ldr	r0, [fp, #-12]
   3cac8:	ldrb	r0, [r0, #28]
   3cacc:	cmp	r0, #0
   3cad0:	beq	3cad8 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   3cad4:	b	3cb8c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3cad8:	b	3caf8 <flatcc_json_printer_uint32_enum_field@@Base+0xa4>
   3cadc:	ldr	r0, [fp, #-12]
   3cae0:	ldrsb	r0, [r0, #29]
   3cae4:	cmp	r0, #0
   3cae8:	bne	3caf0 <flatcc_json_printer_uint32_enum_field@@Base+0x9c>
   3caec:	b	3cb8c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3caf0:	ldr	r0, [fp, #12]
   3caf4:	str	r0, [sp, #20]
   3caf8:	ldr	r0, [fp, #-16]
   3cafc:	ldr	r1, [r0, #16]
   3cb00:	add	r2, r1, #1
   3cb04:	str	r2, [r0, #16]
   3cb08:	cmp	r1, #0
   3cb0c:	beq	3cb28 <flatcc_json_printer_uint32_enum_field@@Base+0xd4>
   3cb10:	ldr	r0, [fp, #-12]
   3cb14:	ldr	r1, [r0, #20]
   3cb18:	add	r2, r1, #1
   3cb1c:	str	r2, [r0, #20]
   3cb20:	movw	r0, #44	; 0x2c
   3cb24:	strb	r0, [r1]
   3cb28:	ldr	r0, [fp, #-12]
   3cb2c:	ldr	r1, [sp, #24]
   3cb30:	ldr	r2, [fp, #8]
   3cb34:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3cb38:	ldr	r0, [fp, #-12]
   3cb3c:	ldrsb	r0, [r0, #27]
   3cb40:	cmp	r0, #0
   3cb44:	beq	3cb6c <flatcc_json_printer_uint32_enum_field@@Base+0x118>
   3cb48:	ldr	r0, [sp, #20]
   3cb4c:	ldr	r1, [fp, #-12]
   3cb50:	ldr	r1, [r1, #20]
   3cb54:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3cb58:	ldr	r1, [fp, #-12]
   3cb5c:	ldr	r2, [r1, #20]
   3cb60:	add	r0, r2, r0
   3cb64:	str	r0, [r1, #20]
   3cb68:	b	3cb8c <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   3cb6c:	ldr	r0, [fp, #16]
   3cb70:	ldr	r1, [fp, #-12]
   3cb74:	ldr	r2, [sp, #20]
   3cb78:	str	r0, [sp]
   3cb7c:	mov	r0, r1
   3cb80:	mov	r1, r2
   3cb84:	ldr	r2, [sp]
   3cb88:	blx	r2
   3cb8c:	sub	sp, fp, #8
   3cb90:	pop	{r4, sl, fp, pc}

0003cb94 <flatcc_json_printer_uint64_enum_field@@Base>:
   3cb94:	push	{r4, r5, fp, lr}
   3cb98:	add	fp, sp, #8
   3cb9c:	sub	sp, sp, #48	; 0x30
   3cba0:	ldr	ip, [fp, #20]
   3cba4:	ldr	lr, [fp, #16]
   3cba8:	ldr	r4, [fp, #24]
   3cbac:	ldr	r5, [fp, #8]
   3cbb0:	str	r0, [fp, #-12]
   3cbb4:	str	r1, [fp, #-16]
   3cbb8:	str	r2, [fp, #-20]	; 0xffffffec
   3cbbc:	str	r3, [fp, #-24]	; 0xffffffe8
   3cbc0:	str	ip, [sp, #28]
   3cbc4:	str	lr, [sp, #24]
   3cbc8:	ldr	r0, [fp, #-16]
   3cbcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cbd0:	str	r4, [sp, #8]
   3cbd4:	str	r5, [sp, #4]
   3cbd8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cbdc:	str	r0, [sp, #12]
   3cbe0:	ldr	r0, [sp, #12]
   3cbe4:	movw	r1, #0
   3cbe8:	cmp	r0, r1
   3cbec:	beq	3cc40 <flatcc_json_printer_uint64_enum_field@@Base+0xac>
   3cbf0:	ldr	r0, [sp, #12]
   3cbf4:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3cbf8:	str	r1, [sp, #20]
   3cbfc:	str	r0, [sp, #16]
   3cc00:	ldr	r0, [sp, #16]
   3cc04:	ldr	r1, [sp, #20]
   3cc08:	ldr	r2, [sp, #24]
   3cc0c:	ldr	r3, [sp, #28]
   3cc10:	eor	r1, r1, r3
   3cc14:	eor	r0, r0, r2
   3cc18:	orr	r0, r0, r1
   3cc1c:	cmp	r0, #0
   3cc20:	bne	3cc3c <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3cc24:	b	3cc28 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   3cc28:	ldr	r0, [fp, #-12]
   3cc2c:	ldrb	r0, [r0, #28]
   3cc30:	cmp	r0, #0
   3cc34:	beq	3cc3c <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   3cc38:	b	3ccfc <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3cc3c:	b	3cc64 <flatcc_json_printer_uint64_enum_field@@Base+0xd0>
   3cc40:	ldr	r0, [fp, #-12]
   3cc44:	ldrsb	r0, [r0, #29]
   3cc48:	cmp	r0, #0
   3cc4c:	bne	3cc54 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3cc50:	b	3ccfc <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3cc54:	ldr	r0, [sp, #24]
   3cc58:	ldr	r1, [sp, #28]
   3cc5c:	str	r1, [sp, #20]
   3cc60:	str	r0, [sp, #16]
   3cc64:	ldr	r0, [fp, #-16]
   3cc68:	ldr	r1, [r0, #16]
   3cc6c:	add	r2, r1, #1
   3cc70:	str	r2, [r0, #16]
   3cc74:	cmp	r1, #0
   3cc78:	beq	3cc94 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   3cc7c:	ldr	r0, [fp, #-12]
   3cc80:	ldr	r1, [r0, #20]
   3cc84:	add	r2, r1, #1
   3cc88:	str	r2, [r0, #20]
   3cc8c:	movw	r0, #44	; 0x2c
   3cc90:	strb	r0, [r1]
   3cc94:	ldr	r0, [fp, #-12]
   3cc98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cc9c:	ldr	r2, [fp, #8]
   3cca0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3cca4:	ldr	r0, [fp, #-12]
   3cca8:	ldrsb	r0, [r0, #27]
   3ccac:	cmp	r0, #0
   3ccb0:	beq	3ccdc <flatcc_json_printer_uint64_enum_field@@Base+0x148>
   3ccb4:	ldr	r0, [sp, #16]
   3ccb8:	ldr	r1, [sp, #20]
   3ccbc:	ldr	r2, [fp, #-12]
   3ccc0:	ldr	r2, [r2, #20]
   3ccc4:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3ccc8:	ldr	r1, [fp, #-12]
   3cccc:	ldr	r2, [r1, #20]
   3ccd0:	add	r0, r2, r0
   3ccd4:	str	r0, [r1, #20]
   3ccd8:	b	3ccfc <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   3ccdc:	ldr	r0, [fp, #24]
   3cce0:	ldr	r1, [fp, #-12]
   3cce4:	ldr	r2, [sp, #16]
   3cce8:	ldr	r3, [sp, #20]
   3ccec:	str	r0, [sp]
   3ccf0:	mov	r0, r1
   3ccf4:	ldr	r1, [sp]
   3ccf8:	blx	r1
   3ccfc:	sub	sp, fp, #8
   3cd00:	pop	{r4, r5, fp, pc}

0003cd04 <flatcc_json_printer_int8_enum_field@@Base>:
   3cd04:	push	{r4, sl, fp, lr}
   3cd08:	add	fp, sp, #8
   3cd0c:	sub	sp, sp, #40	; 0x28
   3cd10:	ldr	ip, [fp, #16]
   3cd14:	ldr	lr, [fp, #12]
   3cd18:	ldr	r4, [fp, #8]
   3cd1c:	str	r0, [fp, #-12]
   3cd20:	str	r1, [fp, #-16]
   3cd24:	str	r2, [fp, #-20]	; 0xffffffec
   3cd28:	str	r3, [sp, #24]
   3cd2c:	strb	lr, [sp, #23]
   3cd30:	ldr	r0, [fp, #-16]
   3cd34:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cd38:	str	ip, [sp, #12]
   3cd3c:	str	r4, [sp, #8]
   3cd40:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cd44:	str	r0, [sp, #16]
   3cd48:	ldr	r0, [sp, #16]
   3cd4c:	movw	r1, #0
   3cd50:	cmp	r0, r1
   3cd54:	beq	3cd8c <flatcc_json_printer_int8_enum_field@@Base+0x88>
   3cd58:	ldr	r0, [sp, #16]
   3cd5c:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3cd60:	strb	r0, [sp, #22]
   3cd64:	ldrsb	r0, [sp, #22]
   3cd68:	ldrsb	r1, [sp, #23]
   3cd6c:	cmp	r0, r1
   3cd70:	bne	3cd88 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3cd74:	ldr	r0, [fp, #-12]
   3cd78:	ldrb	r0, [r0, #28]
   3cd7c:	cmp	r0, #0
   3cd80:	beq	3cd88 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3cd84:	b	3ce3c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3cd88:	b	3cda8 <flatcc_json_printer_int8_enum_field@@Base+0xa4>
   3cd8c:	ldr	r0, [fp, #-12]
   3cd90:	ldrsb	r0, [r0, #29]
   3cd94:	cmp	r0, #0
   3cd98:	bne	3cda0 <flatcc_json_printer_int8_enum_field@@Base+0x9c>
   3cd9c:	b	3ce3c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3cda0:	ldrb	r0, [sp, #23]
   3cda4:	strb	r0, [sp, #22]
   3cda8:	ldr	r0, [fp, #-16]
   3cdac:	ldr	r1, [r0, #16]
   3cdb0:	add	r2, r1, #1
   3cdb4:	str	r2, [r0, #16]
   3cdb8:	cmp	r1, #0
   3cdbc:	beq	3cdd8 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   3cdc0:	ldr	r0, [fp, #-12]
   3cdc4:	ldr	r1, [r0, #20]
   3cdc8:	add	r2, r1, #1
   3cdcc:	str	r2, [r0, #20]
   3cdd0:	movw	r0, #44	; 0x2c
   3cdd4:	strb	r0, [r1]
   3cdd8:	ldr	r0, [fp, #-12]
   3cddc:	ldr	r1, [sp, #24]
   3cde0:	ldr	r2, [fp, #8]
   3cde4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3cde8:	ldr	r0, [fp, #-12]
   3cdec:	ldrsb	r0, [r0, #27]
   3cdf0:	cmp	r0, #0
   3cdf4:	beq	3ce20 <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3cdf8:	ldrb	r0, [sp, #22]
   3cdfc:	ldr	r1, [fp, #-12]
   3ce00:	ldr	r1, [r1, #20]
   3ce04:	sxtb	r0, r0
   3ce08:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3ce0c:	ldr	r1, [fp, #-12]
   3ce10:	ldr	r2, [r1, #20]
   3ce14:	add	r0, r2, r0
   3ce18:	str	r0, [r1, #20]
   3ce1c:	b	3ce3c <flatcc_json_printer_int8_enum_field@@Base+0x138>
   3ce20:	ldr	r0, [fp, #16]
   3ce24:	ldr	r1, [fp, #-12]
   3ce28:	str	r0, [sp, #4]
   3ce2c:	mov	r0, r1
   3ce30:	ldrsb	r1, [sp, #22]
   3ce34:	ldr	r2, [sp, #4]
   3ce38:	blx	r2
   3ce3c:	sub	sp, fp, #8
   3ce40:	pop	{r4, sl, fp, pc}

0003ce44 <flatcc_json_printer_int16_enum_field@@Base>:
   3ce44:	push	{r4, sl, fp, lr}
   3ce48:	add	fp, sp, #8
   3ce4c:	sub	sp, sp, #40	; 0x28
   3ce50:	ldr	ip, [fp, #16]
   3ce54:	ldr	lr, [fp, #12]
   3ce58:	ldr	r4, [fp, #8]
   3ce5c:	str	r0, [fp, #-12]
   3ce60:	str	r1, [fp, #-16]
   3ce64:	str	r2, [fp, #-20]	; 0xffffffec
   3ce68:	str	r3, [sp, #24]
   3ce6c:	strh	lr, [sp, #22]
   3ce70:	ldr	r0, [fp, #-16]
   3ce74:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ce78:	str	ip, [sp, #12]
   3ce7c:	str	r4, [sp, #8]
   3ce80:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ce84:	str	r0, [sp, #16]
   3ce88:	ldr	r0, [sp, #16]
   3ce8c:	movw	r1, #0
   3ce90:	cmp	r0, r1
   3ce94:	beq	3cecc <flatcc_json_printer_int16_enum_field@@Base+0x88>
   3ce98:	ldr	r0, [sp, #16]
   3ce9c:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3cea0:	strh	r0, [sp, #20]
   3cea4:	ldrsh	r0, [sp, #20]
   3cea8:	ldrsh	r1, [sp, #22]
   3ceac:	cmp	r0, r1
   3ceb0:	bne	3cec8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3ceb4:	ldr	r0, [fp, #-12]
   3ceb8:	ldrb	r0, [r0, #28]
   3cebc:	cmp	r0, #0
   3cec0:	beq	3cec8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3cec4:	b	3cf7c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3cec8:	b	3cee8 <flatcc_json_printer_int16_enum_field@@Base+0xa4>
   3cecc:	ldr	r0, [fp, #-12]
   3ced0:	ldrsb	r0, [r0, #29]
   3ced4:	cmp	r0, #0
   3ced8:	bne	3cee0 <flatcc_json_printer_int16_enum_field@@Base+0x9c>
   3cedc:	b	3cf7c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3cee0:	ldrh	r0, [sp, #22]
   3cee4:	strh	r0, [sp, #20]
   3cee8:	ldr	r0, [fp, #-16]
   3ceec:	ldr	r1, [r0, #16]
   3cef0:	add	r2, r1, #1
   3cef4:	str	r2, [r0, #16]
   3cef8:	cmp	r1, #0
   3cefc:	beq	3cf18 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3cf00:	ldr	r0, [fp, #-12]
   3cf04:	ldr	r1, [r0, #20]
   3cf08:	add	r2, r1, #1
   3cf0c:	str	r2, [r0, #20]
   3cf10:	movw	r0, #44	; 0x2c
   3cf14:	strb	r0, [r1]
   3cf18:	ldr	r0, [fp, #-12]
   3cf1c:	ldr	r1, [sp, #24]
   3cf20:	ldr	r2, [fp, #8]
   3cf24:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3cf28:	ldr	r0, [fp, #-12]
   3cf2c:	ldrsb	r0, [r0, #27]
   3cf30:	cmp	r0, #0
   3cf34:	beq	3cf60 <flatcc_json_printer_int16_enum_field@@Base+0x11c>
   3cf38:	ldrh	r0, [sp, #20]
   3cf3c:	ldr	r1, [fp, #-12]
   3cf40:	ldr	r1, [r1, #20]
   3cf44:	sxth	r0, r0
   3cf48:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3cf4c:	ldr	r1, [fp, #-12]
   3cf50:	ldr	r2, [r1, #20]
   3cf54:	add	r0, r2, r0
   3cf58:	str	r0, [r1, #20]
   3cf5c:	b	3cf7c <flatcc_json_printer_int16_enum_field@@Base+0x138>
   3cf60:	ldr	r0, [fp, #16]
   3cf64:	ldr	r1, [fp, #-12]
   3cf68:	str	r0, [sp, #4]
   3cf6c:	mov	r0, r1
   3cf70:	ldrsh	r1, [sp, #20]
   3cf74:	ldr	r2, [sp, #4]
   3cf78:	blx	r2
   3cf7c:	sub	sp, fp, #8
   3cf80:	pop	{r4, sl, fp, pc}

0003cf84 <flatcc_json_printer_int32_enum_field@@Base>:
   3cf84:	push	{r4, sl, fp, lr}
   3cf88:	add	fp, sp, #8
   3cf8c:	sub	sp, sp, #40	; 0x28
   3cf90:	ldr	ip, [fp, #16]
   3cf94:	ldr	lr, [fp, #12]
   3cf98:	ldr	r4, [fp, #8]
   3cf9c:	str	r0, [fp, #-12]
   3cfa0:	str	r1, [fp, #-16]
   3cfa4:	str	r2, [fp, #-20]	; 0xffffffec
   3cfa8:	str	r3, [sp, #24]
   3cfac:	ldr	r0, [fp, #-16]
   3cfb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3cfb4:	str	ip, [sp, #12]
   3cfb8:	str	lr, [sp, #8]
   3cfbc:	str	r4, [sp, #4]
   3cfc0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3cfc4:	str	r0, [sp, #16]
   3cfc8:	ldr	r0, [sp, #16]
   3cfcc:	movw	r1, #0
   3cfd0:	cmp	r0, r1
   3cfd4:	beq	3d00c <flatcc_json_printer_int32_enum_field@@Base+0x88>
   3cfd8:	ldr	r0, [sp, #16]
   3cfdc:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3cfe0:	str	r0, [sp, #20]
   3cfe4:	ldr	r0, [sp, #20]
   3cfe8:	ldr	r1, [fp, #12]
   3cfec:	cmp	r0, r1
   3cff0:	bne	3d008 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3cff4:	ldr	r0, [fp, #-12]
   3cff8:	ldrb	r0, [r0, #28]
   3cffc:	cmp	r0, #0
   3d000:	beq	3d008 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3d004:	b	3d0bc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d008:	b	3d028 <flatcc_json_printer_int32_enum_field@@Base+0xa4>
   3d00c:	ldr	r0, [fp, #-12]
   3d010:	ldrsb	r0, [r0, #29]
   3d014:	cmp	r0, #0
   3d018:	bne	3d020 <flatcc_json_printer_int32_enum_field@@Base+0x9c>
   3d01c:	b	3d0bc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d020:	ldr	r0, [fp, #12]
   3d024:	str	r0, [sp, #20]
   3d028:	ldr	r0, [fp, #-16]
   3d02c:	ldr	r1, [r0, #16]
   3d030:	add	r2, r1, #1
   3d034:	str	r2, [r0, #16]
   3d038:	cmp	r1, #0
   3d03c:	beq	3d058 <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   3d040:	ldr	r0, [fp, #-12]
   3d044:	ldr	r1, [r0, #20]
   3d048:	add	r2, r1, #1
   3d04c:	str	r2, [r0, #20]
   3d050:	movw	r0, #44	; 0x2c
   3d054:	strb	r0, [r1]
   3d058:	ldr	r0, [fp, #-12]
   3d05c:	ldr	r1, [sp, #24]
   3d060:	ldr	r2, [fp, #8]
   3d064:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d068:	ldr	r0, [fp, #-12]
   3d06c:	ldrsb	r0, [r0, #27]
   3d070:	cmp	r0, #0
   3d074:	beq	3d09c <flatcc_json_printer_int32_enum_field@@Base+0x118>
   3d078:	ldr	r0, [sp, #20]
   3d07c:	ldr	r1, [fp, #-12]
   3d080:	ldr	r1, [r1, #20]
   3d084:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3d088:	ldr	r1, [fp, #-12]
   3d08c:	ldr	r2, [r1, #20]
   3d090:	add	r0, r2, r0
   3d094:	str	r0, [r1, #20]
   3d098:	b	3d0bc <flatcc_json_printer_int32_enum_field@@Base+0x138>
   3d09c:	ldr	r0, [fp, #16]
   3d0a0:	ldr	r1, [fp, #-12]
   3d0a4:	ldr	r2, [sp, #20]
   3d0a8:	str	r0, [sp]
   3d0ac:	mov	r0, r1
   3d0b0:	mov	r1, r2
   3d0b4:	ldr	r2, [sp]
   3d0b8:	blx	r2
   3d0bc:	sub	sp, fp, #8
   3d0c0:	pop	{r4, sl, fp, pc}

0003d0c4 <flatcc_json_printer_int64_enum_field@@Base>:
   3d0c4:	push	{r4, r5, fp, lr}
   3d0c8:	add	fp, sp, #8
   3d0cc:	sub	sp, sp, #48	; 0x30
   3d0d0:	ldr	ip, [fp, #20]
   3d0d4:	ldr	lr, [fp, #16]
   3d0d8:	ldr	r4, [fp, #24]
   3d0dc:	ldr	r5, [fp, #8]
   3d0e0:	str	r0, [fp, #-12]
   3d0e4:	str	r1, [fp, #-16]
   3d0e8:	str	r2, [fp, #-20]	; 0xffffffec
   3d0ec:	str	r3, [fp, #-24]	; 0xffffffe8
   3d0f0:	str	ip, [sp, #28]
   3d0f4:	str	lr, [sp, #24]
   3d0f8:	ldr	r0, [fp, #-16]
   3d0fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d100:	str	r4, [sp, #8]
   3d104:	str	r5, [sp, #4]
   3d108:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d10c:	str	r0, [sp, #12]
   3d110:	ldr	r0, [sp, #12]
   3d114:	movw	r1, #0
   3d118:	cmp	r0, r1
   3d11c:	beq	3d170 <flatcc_json_printer_int64_enum_field@@Base+0xac>
   3d120:	ldr	r0, [sp, #12]
   3d124:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3d128:	str	r1, [sp, #20]
   3d12c:	str	r0, [sp, #16]
   3d130:	ldr	r0, [sp, #16]
   3d134:	ldr	r1, [sp, #20]
   3d138:	ldr	r2, [sp, #24]
   3d13c:	ldr	r3, [sp, #28]
   3d140:	eor	r1, r1, r3
   3d144:	eor	r0, r0, r2
   3d148:	orr	r0, r0, r1
   3d14c:	cmp	r0, #0
   3d150:	bne	3d16c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3d154:	b	3d158 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   3d158:	ldr	r0, [fp, #-12]
   3d15c:	ldrb	r0, [r0, #28]
   3d160:	cmp	r0, #0
   3d164:	beq	3d16c <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   3d168:	b	3d22c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d16c:	b	3d194 <flatcc_json_printer_int64_enum_field@@Base+0xd0>
   3d170:	ldr	r0, [fp, #-12]
   3d174:	ldrsb	r0, [r0, #29]
   3d178:	cmp	r0, #0
   3d17c:	bne	3d184 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3d180:	b	3d22c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d184:	ldr	r0, [sp, #24]
   3d188:	ldr	r1, [sp, #28]
   3d18c:	str	r1, [sp, #20]
   3d190:	str	r0, [sp, #16]
   3d194:	ldr	r0, [fp, #-16]
   3d198:	ldr	r1, [r0, #16]
   3d19c:	add	r2, r1, #1
   3d1a0:	str	r2, [r0, #16]
   3d1a4:	cmp	r1, #0
   3d1a8:	beq	3d1c4 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   3d1ac:	ldr	r0, [fp, #-12]
   3d1b0:	ldr	r1, [r0, #20]
   3d1b4:	add	r2, r1, #1
   3d1b8:	str	r2, [r0, #20]
   3d1bc:	movw	r0, #44	; 0x2c
   3d1c0:	strb	r0, [r1]
   3d1c4:	ldr	r0, [fp, #-12]
   3d1c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d1cc:	ldr	r2, [fp, #8]
   3d1d0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d1d4:	ldr	r0, [fp, #-12]
   3d1d8:	ldrsb	r0, [r0, #27]
   3d1dc:	cmp	r0, #0
   3d1e0:	beq	3d20c <flatcc_json_printer_int64_enum_field@@Base+0x148>
   3d1e4:	ldr	r0, [sp, #16]
   3d1e8:	ldr	r1, [sp, #20]
   3d1ec:	ldr	r2, [fp, #-12]
   3d1f0:	ldr	r2, [r2, #20]
   3d1f4:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3d1f8:	ldr	r1, [fp, #-12]
   3d1fc:	ldr	r2, [r1, #20]
   3d200:	add	r0, r2, r0
   3d204:	str	r0, [r1, #20]
   3d208:	b	3d22c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   3d20c:	ldr	r0, [fp, #24]
   3d210:	ldr	r1, [fp, #-12]
   3d214:	ldr	r2, [sp, #16]
   3d218:	ldr	r3, [sp, #20]
   3d21c:	str	r0, [sp]
   3d220:	mov	r0, r1
   3d224:	ldr	r1, [sp]
   3d228:	blx	r1
   3d22c:	sub	sp, fp, #8
   3d230:	pop	{r4, r5, fp, pc}

0003d234 <flatcc_json_printer_bool_enum_field@@Base>:
   3d234:	push	{r4, sl, fp, lr}
   3d238:	add	fp, sp, #8
   3d23c:	sub	sp, sp, #40	; 0x28
   3d240:	ldr	ip, [fp, #16]
   3d244:	ldr	lr, [fp, #12]
   3d248:	ldr	r4, [fp, #8]
   3d24c:	str	r0, [fp, #-12]
   3d250:	str	r1, [fp, #-16]
   3d254:	str	r2, [fp, #-20]	; 0xffffffec
   3d258:	str	r3, [sp, #24]
   3d25c:	strb	lr, [sp, #23]
   3d260:	ldr	r0, [fp, #-16]
   3d264:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d268:	str	ip, [sp, #12]
   3d26c:	str	r4, [sp, #8]
   3d270:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3d274:	str	r0, [sp, #16]
   3d278:	ldr	r0, [sp, #16]
   3d27c:	movw	r1, #0
   3d280:	cmp	r0, r1
   3d284:	beq	3d2bc <flatcc_json_printer_bool_enum_field@@Base+0x88>
   3d288:	ldr	r0, [sp, #16]
   3d28c:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3d290:	strb	r0, [sp, #22]
   3d294:	ldrb	r0, [sp, #22]
   3d298:	ldrb	r1, [sp, #23]
   3d29c:	cmp	r0, r1
   3d2a0:	bne	3d2b8 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3d2a4:	ldr	r0, [fp, #-12]
   3d2a8:	ldrb	r0, [r0, #28]
   3d2ac:	cmp	r0, #0
   3d2b0:	beq	3d2b8 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   3d2b4:	b	3d368 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d2b8:	b	3d2d8 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
   3d2bc:	ldr	r0, [fp, #-12]
   3d2c0:	ldrsb	r0, [r0, #29]
   3d2c4:	cmp	r0, #0
   3d2c8:	bne	3d2d0 <flatcc_json_printer_bool_enum_field@@Base+0x9c>
   3d2cc:	b	3d368 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d2d0:	ldrb	r0, [sp, #23]
   3d2d4:	strb	r0, [sp, #22]
   3d2d8:	ldr	r0, [fp, #-16]
   3d2dc:	ldr	r1, [r0, #16]
   3d2e0:	add	r2, r1, #1
   3d2e4:	str	r2, [r0, #16]
   3d2e8:	cmp	r1, #0
   3d2ec:	beq	3d308 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3d2f0:	ldr	r0, [fp, #-12]
   3d2f4:	ldr	r1, [r0, #20]
   3d2f8:	add	r2, r1, #1
   3d2fc:	str	r2, [r0, #20]
   3d300:	movw	r0, #44	; 0x2c
   3d304:	strb	r0, [r1]
   3d308:	ldr	r0, [fp, #-12]
   3d30c:	ldr	r1, [sp, #24]
   3d310:	ldr	r2, [fp, #8]
   3d314:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d318:	ldr	r0, [fp, #-12]
   3d31c:	ldrsb	r0, [r0, #27]
   3d320:	cmp	r0, #0
   3d324:	beq	3d34c <flatcc_json_printer_bool_enum_field@@Base+0x118>
   3d328:	ldrb	r0, [sp, #22]
   3d32c:	ldr	r1, [fp, #-12]
   3d330:	ldr	r1, [r1, #20]
   3d334:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3d338:	ldr	r1, [fp, #-12]
   3d33c:	ldr	r2, [r1, #20]
   3d340:	add	r0, r2, r0
   3d344:	str	r0, [r1, #20]
   3d348:	b	3d368 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   3d34c:	ldr	r0, [fp, #16]
   3d350:	ldr	r1, [fp, #-12]
   3d354:	str	r0, [sp, #4]
   3d358:	mov	r0, r1
   3d35c:	ldrb	r1, [sp, #22]
   3d360:	ldr	r2, [sp, #4]
   3d364:	blx	r2
   3d368:	sub	sp, fp, #8
   3d36c:	pop	{r4, sl, fp, pc}

0003d370 <flatcc_json_printer_uint8_struct_field@@Base>:
   3d370:	push	{fp, lr}
   3d374:	mov	fp, sp
   3d378:	sub	sp, sp, #32
   3d37c:	ldr	ip, [fp, #12]
   3d380:	ldr	lr, [fp, #8]
   3d384:	str	r0, [fp, #-4]
   3d388:	str	r1, [fp, #-8]
   3d38c:	str	r2, [fp, #-12]
   3d390:	str	r3, [sp, #16]
   3d394:	ldr	r0, [fp, #-12]
   3d398:	ldr	r1, [sp, #16]
   3d39c:	add	r0, r0, r1
   3d3a0:	str	ip, [sp, #8]
   3d3a4:	str	lr, [sp, #4]
   3d3a8:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3d3ac:	strb	r0, [sp, #15]
   3d3b0:	ldr	r0, [fp, #-8]
   3d3b4:	cmp	r0, #0
   3d3b8:	beq	3d3d4 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   3d3bc:	ldr	r0, [fp, #-4]
   3d3c0:	ldr	r1, [r0, #20]
   3d3c4:	add	r2, r1, #1
   3d3c8:	str	r2, [r0, #20]
   3d3cc:	movw	r0, #44	; 0x2c
   3d3d0:	strb	r0, [r1]
   3d3d4:	ldr	r0, [fp, #-4]
   3d3d8:	ldr	r1, [fp, #8]
   3d3dc:	ldr	r2, [fp, #12]
   3d3e0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d3e4:	ldrb	r0, [sp, #15]
   3d3e8:	ldr	r1, [fp, #-4]
   3d3ec:	ldr	r1, [r1, #20]
   3d3f0:	and	r0, r0, #255	; 0xff
   3d3f4:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3d3f8:	ldr	r1, [fp, #-4]
   3d3fc:	ldr	r2, [r1, #20]
   3d400:	add	r0, r2, r0
   3d404:	str	r0, [r1, #20]
   3d408:	mov	sp, fp
   3d40c:	pop	{fp, pc}

0003d410 <flatcc_json_printer_uint16_struct_field@@Base>:
   3d410:	push	{fp, lr}
   3d414:	mov	fp, sp
   3d418:	sub	sp, sp, #32
   3d41c:	ldr	ip, [fp, #12]
   3d420:	ldr	lr, [fp, #8]
   3d424:	str	r0, [fp, #-4]
   3d428:	str	r1, [fp, #-8]
   3d42c:	str	r2, [fp, #-12]
   3d430:	str	r3, [sp, #16]
   3d434:	ldr	r0, [fp, #-12]
   3d438:	ldr	r1, [sp, #16]
   3d43c:	add	r0, r0, r1
   3d440:	str	ip, [sp, #8]
   3d444:	str	lr, [sp, #4]
   3d448:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3d44c:	strh	r0, [sp, #14]
   3d450:	ldr	r0, [fp, #-8]
   3d454:	cmp	r0, #0
   3d458:	beq	3d474 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   3d45c:	ldr	r0, [fp, #-4]
   3d460:	ldr	r1, [r0, #20]
   3d464:	add	r2, r1, #1
   3d468:	str	r2, [r0, #20]
   3d46c:	movw	r0, #44	; 0x2c
   3d470:	strb	r0, [r1]
   3d474:	ldr	r0, [fp, #-4]
   3d478:	ldr	r1, [fp, #8]
   3d47c:	ldr	r2, [fp, #12]
   3d480:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d484:	ldrh	r0, [sp, #14]
   3d488:	ldr	r1, [fp, #-4]
   3d48c:	ldr	r1, [r1, #20]
   3d490:	uxth	r0, r0
   3d494:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3d498:	ldr	r1, [fp, #-4]
   3d49c:	ldr	r2, [r1, #20]
   3d4a0:	add	r0, r2, r0
   3d4a4:	str	r0, [r1, #20]
   3d4a8:	mov	sp, fp
   3d4ac:	pop	{fp, pc}

0003d4b0 <flatcc_json_printer_uint32_struct_field@@Base>:
   3d4b0:	push	{fp, lr}
   3d4b4:	mov	fp, sp
   3d4b8:	sub	sp, sp, #32
   3d4bc:	ldr	ip, [fp, #12]
   3d4c0:	ldr	lr, [fp, #8]
   3d4c4:	str	r0, [fp, #-4]
   3d4c8:	str	r1, [fp, #-8]
   3d4cc:	str	r2, [fp, #-12]
   3d4d0:	str	r3, [sp, #16]
   3d4d4:	ldr	r0, [fp, #-12]
   3d4d8:	ldr	r1, [sp, #16]
   3d4dc:	add	r0, r0, r1
   3d4e0:	str	ip, [sp, #8]
   3d4e4:	str	lr, [sp, #4]
   3d4e8:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3d4ec:	str	r0, [sp, #12]
   3d4f0:	ldr	r0, [fp, #-8]
   3d4f4:	cmp	r0, #0
   3d4f8:	beq	3d514 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   3d4fc:	ldr	r0, [fp, #-4]
   3d500:	ldr	r1, [r0, #20]
   3d504:	add	r2, r1, #1
   3d508:	str	r2, [r0, #20]
   3d50c:	movw	r0, #44	; 0x2c
   3d510:	strb	r0, [r1]
   3d514:	ldr	r0, [fp, #-4]
   3d518:	ldr	r1, [fp, #8]
   3d51c:	ldr	r2, [fp, #12]
   3d520:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d524:	ldr	r0, [sp, #12]
   3d528:	ldr	r1, [fp, #-4]
   3d52c:	ldr	r1, [r1, #20]
   3d530:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3d534:	ldr	r1, [fp, #-4]
   3d538:	ldr	r2, [r1, #20]
   3d53c:	add	r0, r2, r0
   3d540:	str	r0, [r1, #20]
   3d544:	mov	sp, fp
   3d548:	pop	{fp, pc}

0003d54c <flatcc_json_printer_uint64_struct_field@@Base>:
   3d54c:	push	{fp, lr}
   3d550:	mov	fp, sp
   3d554:	sub	sp, sp, #32
   3d558:	ldr	ip, [fp, #12]
   3d55c:	ldr	lr, [fp, #8]
   3d560:	str	r0, [fp, #-4]
   3d564:	str	r1, [fp, #-8]
   3d568:	str	r2, [fp, #-12]
   3d56c:	str	r3, [sp, #16]
   3d570:	ldr	r0, [fp, #-12]
   3d574:	ldr	r1, [sp, #16]
   3d578:	add	r0, r0, r1
   3d57c:	str	ip, [sp, #4]
   3d580:	str	lr, [sp]
   3d584:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3d588:	str	r1, [sp, #12]
   3d58c:	str	r0, [sp, #8]
   3d590:	ldr	r0, [fp, #-8]
   3d594:	cmp	r0, #0
   3d598:	beq	3d5b4 <flatcc_json_printer_uint64_struct_field@@Base+0x68>
   3d59c:	ldr	r0, [fp, #-4]
   3d5a0:	ldr	r1, [r0, #20]
   3d5a4:	add	r2, r1, #1
   3d5a8:	str	r2, [r0, #20]
   3d5ac:	movw	r0, #44	; 0x2c
   3d5b0:	strb	r0, [r1]
   3d5b4:	ldr	r0, [fp, #-4]
   3d5b8:	ldr	r1, [fp, #8]
   3d5bc:	ldr	r2, [fp, #12]
   3d5c0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d5c4:	ldr	r0, [sp, #8]
   3d5c8:	ldr	r1, [sp, #12]
   3d5cc:	ldr	r2, [fp, #-4]
   3d5d0:	ldr	r2, [r2, #20]
   3d5d4:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3d5d8:	ldr	r1, [fp, #-4]
   3d5dc:	ldr	r2, [r1, #20]
   3d5e0:	add	r0, r2, r0
   3d5e4:	str	r0, [r1, #20]
   3d5e8:	mov	sp, fp
   3d5ec:	pop	{fp, pc}

0003d5f0 <flatcc_json_printer_int8_struct_field@@Base>:
   3d5f0:	push	{fp, lr}
   3d5f4:	mov	fp, sp
   3d5f8:	sub	sp, sp, #32
   3d5fc:	ldr	ip, [fp, #12]
   3d600:	ldr	lr, [fp, #8]
   3d604:	str	r0, [fp, #-4]
   3d608:	str	r1, [fp, #-8]
   3d60c:	str	r2, [fp, #-12]
   3d610:	str	r3, [sp, #16]
   3d614:	ldr	r0, [fp, #-12]
   3d618:	ldr	r1, [sp, #16]
   3d61c:	add	r0, r0, r1
   3d620:	str	ip, [sp, #8]
   3d624:	str	lr, [sp, #4]
   3d628:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3d62c:	strb	r0, [sp, #15]
   3d630:	ldr	r0, [fp, #-8]
   3d634:	cmp	r0, #0
   3d638:	beq	3d654 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   3d63c:	ldr	r0, [fp, #-4]
   3d640:	ldr	r1, [r0, #20]
   3d644:	add	r2, r1, #1
   3d648:	str	r2, [r0, #20]
   3d64c:	movw	r0, #44	; 0x2c
   3d650:	strb	r0, [r1]
   3d654:	ldr	r0, [fp, #-4]
   3d658:	ldr	r1, [fp, #8]
   3d65c:	ldr	r2, [fp, #12]
   3d660:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d664:	ldrb	r0, [sp, #15]
   3d668:	ldr	r1, [fp, #-4]
   3d66c:	ldr	r1, [r1, #20]
   3d670:	sxtb	r0, r0
   3d674:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3d678:	ldr	r1, [fp, #-4]
   3d67c:	ldr	r2, [r1, #20]
   3d680:	add	r0, r2, r0
   3d684:	str	r0, [r1, #20]
   3d688:	mov	sp, fp
   3d68c:	pop	{fp, pc}

0003d690 <flatcc_json_printer_int16_struct_field@@Base>:
   3d690:	push	{fp, lr}
   3d694:	mov	fp, sp
   3d698:	sub	sp, sp, #32
   3d69c:	ldr	ip, [fp, #12]
   3d6a0:	ldr	lr, [fp, #8]
   3d6a4:	str	r0, [fp, #-4]
   3d6a8:	str	r1, [fp, #-8]
   3d6ac:	str	r2, [fp, #-12]
   3d6b0:	str	r3, [sp, #16]
   3d6b4:	ldr	r0, [fp, #-12]
   3d6b8:	ldr	r1, [sp, #16]
   3d6bc:	add	r0, r0, r1
   3d6c0:	str	ip, [sp, #8]
   3d6c4:	str	lr, [sp, #4]
   3d6c8:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3d6cc:	strh	r0, [sp, #14]
   3d6d0:	ldr	r0, [fp, #-8]
   3d6d4:	cmp	r0, #0
   3d6d8:	beq	3d6f4 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   3d6dc:	ldr	r0, [fp, #-4]
   3d6e0:	ldr	r1, [r0, #20]
   3d6e4:	add	r2, r1, #1
   3d6e8:	str	r2, [r0, #20]
   3d6ec:	movw	r0, #44	; 0x2c
   3d6f0:	strb	r0, [r1]
   3d6f4:	ldr	r0, [fp, #-4]
   3d6f8:	ldr	r1, [fp, #8]
   3d6fc:	ldr	r2, [fp, #12]
   3d700:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d704:	ldrh	r0, [sp, #14]
   3d708:	ldr	r1, [fp, #-4]
   3d70c:	ldr	r1, [r1, #20]
   3d710:	sxth	r0, r0
   3d714:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3d718:	ldr	r1, [fp, #-4]
   3d71c:	ldr	r2, [r1, #20]
   3d720:	add	r0, r2, r0
   3d724:	str	r0, [r1, #20]
   3d728:	mov	sp, fp
   3d72c:	pop	{fp, pc}

0003d730 <flatcc_json_printer_int32_struct_field@@Base>:
   3d730:	push	{fp, lr}
   3d734:	mov	fp, sp
   3d738:	sub	sp, sp, #32
   3d73c:	ldr	ip, [fp, #12]
   3d740:	ldr	lr, [fp, #8]
   3d744:	str	r0, [fp, #-4]
   3d748:	str	r1, [fp, #-8]
   3d74c:	str	r2, [fp, #-12]
   3d750:	str	r3, [sp, #16]
   3d754:	ldr	r0, [fp, #-12]
   3d758:	ldr	r1, [sp, #16]
   3d75c:	add	r0, r0, r1
   3d760:	str	ip, [sp, #8]
   3d764:	str	lr, [sp, #4]
   3d768:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3d76c:	str	r0, [sp, #12]
   3d770:	ldr	r0, [fp, #-8]
   3d774:	cmp	r0, #0
   3d778:	beq	3d794 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   3d77c:	ldr	r0, [fp, #-4]
   3d780:	ldr	r1, [r0, #20]
   3d784:	add	r2, r1, #1
   3d788:	str	r2, [r0, #20]
   3d78c:	movw	r0, #44	; 0x2c
   3d790:	strb	r0, [r1]
   3d794:	ldr	r0, [fp, #-4]
   3d798:	ldr	r1, [fp, #8]
   3d79c:	ldr	r2, [fp, #12]
   3d7a0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d7a4:	ldr	r0, [sp, #12]
   3d7a8:	ldr	r1, [fp, #-4]
   3d7ac:	ldr	r1, [r1, #20]
   3d7b0:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3d7b4:	ldr	r1, [fp, #-4]
   3d7b8:	ldr	r2, [r1, #20]
   3d7bc:	add	r0, r2, r0
   3d7c0:	str	r0, [r1, #20]
   3d7c4:	mov	sp, fp
   3d7c8:	pop	{fp, pc}

0003d7cc <flatcc_json_printer_int64_struct_field@@Base>:
   3d7cc:	push	{fp, lr}
   3d7d0:	mov	fp, sp
   3d7d4:	sub	sp, sp, #32
   3d7d8:	ldr	ip, [fp, #12]
   3d7dc:	ldr	lr, [fp, #8]
   3d7e0:	str	r0, [fp, #-4]
   3d7e4:	str	r1, [fp, #-8]
   3d7e8:	str	r2, [fp, #-12]
   3d7ec:	str	r3, [sp, #16]
   3d7f0:	ldr	r0, [fp, #-12]
   3d7f4:	ldr	r1, [sp, #16]
   3d7f8:	add	r0, r0, r1
   3d7fc:	str	ip, [sp, #4]
   3d800:	str	lr, [sp]
   3d804:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3d808:	str	r1, [sp, #12]
   3d80c:	str	r0, [sp, #8]
   3d810:	ldr	r0, [fp, #-8]
   3d814:	cmp	r0, #0
   3d818:	beq	3d834 <flatcc_json_printer_int64_struct_field@@Base+0x68>
   3d81c:	ldr	r0, [fp, #-4]
   3d820:	ldr	r1, [r0, #20]
   3d824:	add	r2, r1, #1
   3d828:	str	r2, [r0, #20]
   3d82c:	movw	r0, #44	; 0x2c
   3d830:	strb	r0, [r1]
   3d834:	ldr	r0, [fp, #-4]
   3d838:	ldr	r1, [fp, #8]
   3d83c:	ldr	r2, [fp, #12]
   3d840:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d844:	ldr	r0, [sp, #8]
   3d848:	ldr	r1, [sp, #12]
   3d84c:	ldr	r2, [fp, #-4]
   3d850:	ldr	r2, [r2, #20]
   3d854:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3d858:	ldr	r1, [fp, #-4]
   3d85c:	ldr	r2, [r1, #20]
   3d860:	add	r0, r2, r0
   3d864:	str	r0, [r1, #20]
   3d868:	mov	sp, fp
   3d86c:	pop	{fp, pc}

0003d870 <flatcc_json_printer_bool_struct_field@@Base>:
   3d870:	push	{fp, lr}
   3d874:	mov	fp, sp
   3d878:	sub	sp, sp, #32
   3d87c:	ldr	ip, [fp, #12]
   3d880:	ldr	lr, [fp, #8]
   3d884:	str	r0, [fp, #-4]
   3d888:	str	r1, [fp, #-8]
   3d88c:	str	r2, [fp, #-12]
   3d890:	str	r3, [sp, #16]
   3d894:	ldr	r0, [fp, #-12]
   3d898:	ldr	r1, [sp, #16]
   3d89c:	add	r0, r0, r1
   3d8a0:	str	ip, [sp, #8]
   3d8a4:	str	lr, [sp, #4]
   3d8a8:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3d8ac:	strb	r0, [sp, #15]
   3d8b0:	ldr	r0, [fp, #-8]
   3d8b4:	cmp	r0, #0
   3d8b8:	beq	3d8d4 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3d8bc:	ldr	r0, [fp, #-4]
   3d8c0:	ldr	r1, [r0, #20]
   3d8c4:	add	r2, r1, #1
   3d8c8:	str	r2, [r0, #20]
   3d8cc:	movw	r0, #44	; 0x2c
   3d8d0:	strb	r0, [r1]
   3d8d4:	ldr	r0, [fp, #-4]
   3d8d8:	ldr	r1, [fp, #8]
   3d8dc:	ldr	r2, [fp, #12]
   3d8e0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d8e4:	ldrb	r0, [sp, #15]
   3d8e8:	ldr	r1, [fp, #-4]
   3d8ec:	ldr	r1, [r1, #20]
   3d8f0:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3d8f4:	ldr	r1, [fp, #-4]
   3d8f8:	ldr	r2, [r1, #20]
   3d8fc:	add	r0, r2, r0
   3d900:	str	r0, [r1, #20]
   3d904:	mov	sp, fp
   3d908:	pop	{fp, pc}

0003d90c <flatcc_json_printer_float_struct_field@@Base>:
   3d90c:	push	{fp, lr}
   3d910:	mov	fp, sp
   3d914:	sub	sp, sp, #32
   3d918:	ldr	ip, [fp, #12]
   3d91c:	ldr	lr, [fp, #8]
   3d920:	str	r0, [fp, #-4]
   3d924:	str	r1, [fp, #-8]
   3d928:	str	r2, [fp, #-12]
   3d92c:	str	r3, [sp, #16]
   3d930:	ldr	r0, [fp, #-12]
   3d934:	ldr	r1, [sp, #16]
   3d938:	add	r0, r0, r1
   3d93c:	str	ip, [sp, #8]
   3d940:	str	lr, [sp, #4]
   3d944:	bl	3c688 <flatcc_json_printer_float_field@@Base+0x108>
   3d948:	vstr	s0, [sp, #12]
   3d94c:	ldr	r0, [fp, #-8]
   3d950:	cmp	r0, #0
   3d954:	beq	3d970 <flatcc_json_printer_float_struct_field@@Base+0x64>
   3d958:	ldr	r0, [fp, #-4]
   3d95c:	ldr	r1, [r0, #20]
   3d960:	add	r2, r1, #1
   3d964:	str	r2, [r0, #20]
   3d968:	movw	r0, #44	; 0x2c
   3d96c:	strb	r0, [r1]
   3d970:	ldr	r0, [fp, #-4]
   3d974:	ldr	r1, [fp, #8]
   3d978:	ldr	r2, [fp, #12]
   3d97c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3d980:	vldr	s0, [sp, #12]
   3d984:	vcvt.f64.f32	d0, s0
   3d988:	ldr	r0, [fp, #-4]
   3d98c:	ldr	r0, [r0, #20]
   3d990:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3d994:	ldr	r1, [fp, #-4]
   3d998:	ldr	r2, [r1, #20]
   3d99c:	add	r0, r2, r0
   3d9a0:	str	r0, [r1, #20]
   3d9a4:	mov	sp, fp
   3d9a8:	pop	{fp, pc}

0003d9ac <flatcc_json_printer_double_struct_field@@Base>:
   3d9ac:	push	{fp, lr}
   3d9b0:	mov	fp, sp
   3d9b4:	sub	sp, sp, #32
   3d9b8:	ldr	ip, [fp, #12]
   3d9bc:	ldr	lr, [fp, #8]
   3d9c0:	str	r0, [fp, #-4]
   3d9c4:	str	r1, [fp, #-8]
   3d9c8:	str	r2, [fp, #-12]
   3d9cc:	str	r3, [sp, #16]
   3d9d0:	ldr	r0, [fp, #-12]
   3d9d4:	ldr	r1, [sp, #16]
   3d9d8:	add	r0, r0, r1
   3d9dc:	str	ip, [sp, #4]
   3d9e0:	str	lr, [sp]
   3d9e4:	bl	3c7b0 <flatcc_json_printer_double_field@@Base+0x104>
   3d9e8:	vstr	d0, [sp, #8]
   3d9ec:	ldr	r0, [fp, #-8]
   3d9f0:	cmp	r0, #0
   3d9f4:	beq	3da10 <flatcc_json_printer_double_struct_field@@Base+0x64>
   3d9f8:	ldr	r0, [fp, #-4]
   3d9fc:	ldr	r1, [r0, #20]
   3da00:	add	r2, r1, #1
   3da04:	str	r2, [r0, #20]
   3da08:	movw	r0, #44	; 0x2c
   3da0c:	strb	r0, [r1]
   3da10:	ldr	r0, [fp, #-4]
   3da14:	ldr	r1, [fp, #8]
   3da18:	ldr	r2, [fp, #12]
   3da1c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3da20:	vldr	d0, [sp, #8]
   3da24:	ldr	r0, [fp, #-4]
   3da28:	ldr	r0, [r0, #20]
   3da2c:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3da30:	ldr	r1, [fp, #-4]
   3da34:	ldr	r2, [r1, #20]
   3da38:	add	r0, r2, r0
   3da3c:	str	r0, [r1, #20]
   3da40:	mov	sp, fp
   3da44:	pop	{fp, pc}

0003da48 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3da48:	push	{r4, sl, fp, lr}
   3da4c:	add	fp, sp, #8
   3da50:	sub	sp, sp, #40	; 0x28
   3da54:	ldr	ip, [fp, #16]
   3da58:	ldr	lr, [fp, #12]
   3da5c:	ldr	r4, [fp, #8]
   3da60:	str	r0, [fp, #-12]
   3da64:	str	r1, [fp, #-16]
   3da68:	str	r2, [fp, #-20]	; 0xffffffec
   3da6c:	str	r3, [sp, #24]
   3da70:	ldr	r0, [fp, #-20]	; 0xffffffec
   3da74:	ldr	r1, [sp, #24]
   3da78:	add	r0, r0, r1
   3da7c:	str	ip, [sp, #16]
   3da80:	str	lr, [sp, #12]
   3da84:	str	r4, [sp, #8]
   3da88:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3da8c:	strb	r0, [sp, #23]
   3da90:	ldr	r0, [fp, #-16]
   3da94:	cmp	r0, #0
   3da98:	beq	3dab4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x6c>
   3da9c:	ldr	r0, [fp, #-12]
   3daa0:	ldr	r1, [r0, #20]
   3daa4:	add	r2, r1, #1
   3daa8:	str	r2, [r0, #20]
   3daac:	movw	r0, #44	; 0x2c
   3dab0:	strb	r0, [r1]
   3dab4:	ldr	r0, [fp, #-12]
   3dab8:	ldr	r1, [fp, #8]
   3dabc:	ldr	r2, [fp, #12]
   3dac0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3dac4:	ldr	r0, [fp, #-12]
   3dac8:	ldrsb	r0, [r0, #27]
   3dacc:	cmp	r0, #0
   3dad0:	beq	3dafc <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb4>
   3dad4:	ldrb	r0, [sp, #23]
   3dad8:	ldr	r1, [fp, #-12]
   3dadc:	ldr	r1, [r1, #20]
   3dae0:	and	r0, r0, #255	; 0xff
   3dae4:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3dae8:	ldr	r1, [fp, #-12]
   3daec:	ldr	r2, [r1, #20]
   3daf0:	add	r0, r2, r0
   3daf4:	str	r0, [r1, #20]
   3daf8:	b	3db18 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   3dafc:	ldr	r0, [fp, #16]
   3db00:	ldr	r1, [fp, #-12]
   3db04:	str	r0, [sp, #4]
   3db08:	mov	r0, r1
   3db0c:	ldrb	r1, [sp, #23]
   3db10:	ldr	r2, [sp, #4]
   3db14:	blx	r2
   3db18:	sub	sp, fp, #8
   3db1c:	pop	{r4, sl, fp, pc}

0003db20 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3db20:	push	{r4, sl, fp, lr}
   3db24:	add	fp, sp, #8
   3db28:	sub	sp, sp, #40	; 0x28
   3db2c:	ldr	ip, [fp, #16]
   3db30:	ldr	lr, [fp, #12]
   3db34:	ldr	r4, [fp, #8]
   3db38:	str	r0, [fp, #-12]
   3db3c:	str	r1, [fp, #-16]
   3db40:	str	r2, [fp, #-20]	; 0xffffffec
   3db44:	str	r3, [sp, #24]
   3db48:	ldr	r0, [fp, #-20]	; 0xffffffec
   3db4c:	ldr	r1, [sp, #24]
   3db50:	add	r0, r0, r1
   3db54:	str	ip, [sp, #16]
   3db58:	str	lr, [sp, #12]
   3db5c:	str	r4, [sp, #8]
   3db60:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3db64:	strh	r0, [sp, #22]
   3db68:	ldr	r0, [fp, #-16]
   3db6c:	cmp	r0, #0
   3db70:	beq	3db8c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3db74:	ldr	r0, [fp, #-12]
   3db78:	ldr	r1, [r0, #20]
   3db7c:	add	r2, r1, #1
   3db80:	str	r2, [r0, #20]
   3db84:	movw	r0, #44	; 0x2c
   3db88:	strb	r0, [r1]
   3db8c:	ldr	r0, [fp, #-12]
   3db90:	ldr	r1, [fp, #8]
   3db94:	ldr	r2, [fp, #12]
   3db98:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3db9c:	ldr	r0, [fp, #-12]
   3dba0:	ldrsb	r0, [r0, #27]
   3dba4:	cmp	r0, #0
   3dba8:	beq	3dbd4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb4>
   3dbac:	ldrh	r0, [sp, #22]
   3dbb0:	ldr	r1, [fp, #-12]
   3dbb4:	ldr	r1, [r1, #20]
   3dbb8:	uxth	r0, r0
   3dbbc:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3dbc0:	ldr	r1, [fp, #-12]
   3dbc4:	ldr	r2, [r1, #20]
   3dbc8:	add	r0, r2, r0
   3dbcc:	str	r0, [r1, #20]
   3dbd0:	b	3dbf0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   3dbd4:	ldr	r0, [fp, #16]
   3dbd8:	ldr	r1, [fp, #-12]
   3dbdc:	str	r0, [sp, #4]
   3dbe0:	mov	r0, r1
   3dbe4:	ldrh	r1, [sp, #22]
   3dbe8:	ldr	r2, [sp, #4]
   3dbec:	blx	r2
   3dbf0:	sub	sp, fp, #8
   3dbf4:	pop	{r4, sl, fp, pc}

0003dbf8 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3dbf8:	push	{r4, sl, fp, lr}
   3dbfc:	add	fp, sp, #8
   3dc00:	sub	sp, sp, #40	; 0x28
   3dc04:	ldr	ip, [fp, #16]
   3dc08:	ldr	lr, [fp, #12]
   3dc0c:	ldr	r4, [fp, #8]
   3dc10:	str	r0, [fp, #-12]
   3dc14:	str	r1, [fp, #-16]
   3dc18:	str	r2, [fp, #-20]	; 0xffffffec
   3dc1c:	str	r3, [sp, #24]
   3dc20:	ldr	r0, [fp, #-20]	; 0xffffffec
   3dc24:	ldr	r1, [sp, #24]
   3dc28:	add	r0, r0, r1
   3dc2c:	str	ip, [sp, #16]
   3dc30:	str	lr, [sp, #12]
   3dc34:	str	r4, [sp, #8]
   3dc38:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3dc3c:	str	r0, [sp, #20]
   3dc40:	ldr	r0, [fp, #-16]
   3dc44:	cmp	r0, #0
   3dc48:	beq	3dc64 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x6c>
   3dc4c:	ldr	r0, [fp, #-12]
   3dc50:	ldr	r1, [r0, #20]
   3dc54:	add	r2, r1, #1
   3dc58:	str	r2, [r0, #20]
   3dc5c:	movw	r0, #44	; 0x2c
   3dc60:	strb	r0, [r1]
   3dc64:	ldr	r0, [fp, #-12]
   3dc68:	ldr	r1, [fp, #8]
   3dc6c:	ldr	r2, [fp, #12]
   3dc70:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3dc74:	ldr	r0, [fp, #-12]
   3dc78:	ldrsb	r0, [r0, #27]
   3dc7c:	cmp	r0, #0
   3dc80:	beq	3dca8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   3dc84:	ldr	r0, [sp, #20]
   3dc88:	ldr	r1, [fp, #-12]
   3dc8c:	ldr	r1, [r1, #20]
   3dc90:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3dc94:	ldr	r1, [fp, #-12]
   3dc98:	ldr	r2, [r1, #20]
   3dc9c:	add	r0, r2, r0
   3dca0:	str	r0, [r1, #20]
   3dca4:	b	3dcc8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd0>
   3dca8:	ldr	r0, [fp, #16]
   3dcac:	ldr	r1, [fp, #-12]
   3dcb0:	ldr	r2, [sp, #20]
   3dcb4:	str	r0, [sp, #4]
   3dcb8:	mov	r0, r1
   3dcbc:	mov	r1, r2
   3dcc0:	ldr	r2, [sp, #4]
   3dcc4:	blx	r2
   3dcc8:	sub	sp, fp, #8
   3dccc:	pop	{r4, sl, fp, pc}

0003dcd0 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3dcd0:	push	{r4, sl, fp, lr}
   3dcd4:	add	fp, sp, #8
   3dcd8:	sub	sp, sp, #40	; 0x28
   3dcdc:	ldr	ip, [fp, #16]
   3dce0:	ldr	lr, [fp, #12]
   3dce4:	ldr	r4, [fp, #8]
   3dce8:	str	r0, [fp, #-12]
   3dcec:	str	r1, [fp, #-16]
   3dcf0:	str	r2, [fp, #-20]	; 0xffffffec
   3dcf4:	str	r3, [sp, #24]
   3dcf8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3dcfc:	ldr	r1, [sp, #24]
   3dd00:	add	r0, r0, r1
   3dd04:	str	ip, [sp, #12]
   3dd08:	str	lr, [sp, #8]
   3dd0c:	str	r4, [sp, #4]
   3dd10:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3dd14:	str	r1, [sp, #20]
   3dd18:	str	r0, [sp, #16]
   3dd1c:	ldr	r0, [fp, #-16]
   3dd20:	cmp	r0, #0
   3dd24:	beq	3dd40 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3dd28:	ldr	r0, [fp, #-12]
   3dd2c:	ldr	r1, [r0, #20]
   3dd30:	add	r2, r1, #1
   3dd34:	str	r2, [r0, #20]
   3dd38:	movw	r0, #44	; 0x2c
   3dd3c:	strb	r0, [r1]
   3dd40:	ldr	r0, [fp, #-12]
   3dd44:	ldr	r1, [fp, #8]
   3dd48:	ldr	r2, [fp, #12]
   3dd4c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3dd50:	ldr	r0, [fp, #-12]
   3dd54:	ldrsb	r0, [r0, #27]
   3dd58:	cmp	r0, #0
   3dd5c:	beq	3dd88 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb8>
   3dd60:	ldr	r0, [sp, #16]
   3dd64:	ldr	r1, [sp, #20]
   3dd68:	ldr	r2, [fp, #-12]
   3dd6c:	ldr	r2, [r2, #20]
   3dd70:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3dd74:	ldr	r1, [fp, #-12]
   3dd78:	ldr	r2, [r1, #20]
   3dd7c:	add	r0, r2, r0
   3dd80:	str	r0, [r1, #20]
   3dd84:	b	3dda8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   3dd88:	ldr	r0, [fp, #16]
   3dd8c:	ldr	r1, [fp, #-12]
   3dd90:	ldr	r2, [sp, #16]
   3dd94:	ldr	r3, [sp, #20]
   3dd98:	str	r0, [sp]
   3dd9c:	mov	r0, r1
   3dda0:	ldr	r1, [sp]
   3dda4:	blx	r1
   3dda8:	sub	sp, fp, #8
   3ddac:	pop	{r4, sl, fp, pc}

0003ddb0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3ddb0:	push	{r4, sl, fp, lr}
   3ddb4:	add	fp, sp, #8
   3ddb8:	sub	sp, sp, #40	; 0x28
   3ddbc:	ldr	ip, [fp, #16]
   3ddc0:	ldr	lr, [fp, #12]
   3ddc4:	ldr	r4, [fp, #8]
   3ddc8:	str	r0, [fp, #-12]
   3ddcc:	str	r1, [fp, #-16]
   3ddd0:	str	r2, [fp, #-20]	; 0xffffffec
   3ddd4:	str	r3, [sp, #24]
   3ddd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3dddc:	ldr	r1, [sp, #24]
   3dde0:	add	r0, r0, r1
   3dde4:	str	ip, [sp, #16]
   3dde8:	str	lr, [sp, #12]
   3ddec:	str	r4, [sp, #8]
   3ddf0:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3ddf4:	strb	r0, [sp, #23]
   3ddf8:	ldr	r0, [fp, #-16]
   3ddfc:	cmp	r0, #0
   3de00:	beq	3de1c <flatcc_json_printer_int8_enum_struct_field@@Base+0x6c>
   3de04:	ldr	r0, [fp, #-12]
   3de08:	ldr	r1, [r0, #20]
   3de0c:	add	r2, r1, #1
   3de10:	str	r2, [r0, #20]
   3de14:	movw	r0, #44	; 0x2c
   3de18:	strb	r0, [r1]
   3de1c:	ldr	r0, [fp, #-12]
   3de20:	ldr	r1, [fp, #8]
   3de24:	ldr	r2, [fp, #12]
   3de28:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3de2c:	ldr	r0, [fp, #-12]
   3de30:	ldrsb	r0, [r0, #27]
   3de34:	cmp	r0, #0
   3de38:	beq	3de64 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb4>
   3de3c:	ldrb	r0, [sp, #23]
   3de40:	ldr	r1, [fp, #-12]
   3de44:	ldr	r1, [r1, #20]
   3de48:	sxtb	r0, r0
   3de4c:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3de50:	ldr	r1, [fp, #-12]
   3de54:	ldr	r2, [r1, #20]
   3de58:	add	r0, r2, r0
   3de5c:	str	r0, [r1, #20]
   3de60:	b	3de80 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   3de64:	ldr	r0, [fp, #16]
   3de68:	ldr	r1, [fp, #-12]
   3de6c:	str	r0, [sp, #4]
   3de70:	mov	r0, r1
   3de74:	ldrsb	r1, [sp, #23]
   3de78:	ldr	r2, [sp, #4]
   3de7c:	blx	r2
   3de80:	sub	sp, fp, #8
   3de84:	pop	{r4, sl, fp, pc}

0003de88 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3de88:	push	{r4, sl, fp, lr}
   3de8c:	add	fp, sp, #8
   3de90:	sub	sp, sp, #40	; 0x28
   3de94:	ldr	ip, [fp, #16]
   3de98:	ldr	lr, [fp, #12]
   3de9c:	ldr	r4, [fp, #8]
   3dea0:	str	r0, [fp, #-12]
   3dea4:	str	r1, [fp, #-16]
   3dea8:	str	r2, [fp, #-20]	; 0xffffffec
   3deac:	str	r3, [sp, #24]
   3deb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3deb4:	ldr	r1, [sp, #24]
   3deb8:	add	r0, r0, r1
   3debc:	str	ip, [sp, #16]
   3dec0:	str	lr, [sp, #12]
   3dec4:	str	r4, [sp, #8]
   3dec8:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3decc:	strh	r0, [sp, #22]
   3ded0:	ldr	r0, [fp, #-16]
   3ded4:	cmp	r0, #0
   3ded8:	beq	3def4 <flatcc_json_printer_int16_enum_struct_field@@Base+0x6c>
   3dedc:	ldr	r0, [fp, #-12]
   3dee0:	ldr	r1, [r0, #20]
   3dee4:	add	r2, r1, #1
   3dee8:	str	r2, [r0, #20]
   3deec:	movw	r0, #44	; 0x2c
   3def0:	strb	r0, [r1]
   3def4:	ldr	r0, [fp, #-12]
   3def8:	ldr	r1, [fp, #8]
   3defc:	ldr	r2, [fp, #12]
   3df00:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3df04:	ldr	r0, [fp, #-12]
   3df08:	ldrsb	r0, [r0, #27]
   3df0c:	cmp	r0, #0
   3df10:	beq	3df3c <flatcc_json_printer_int16_enum_struct_field@@Base+0xb4>
   3df14:	ldrh	r0, [sp, #22]
   3df18:	ldr	r1, [fp, #-12]
   3df1c:	ldr	r1, [r1, #20]
   3df20:	sxth	r0, r0
   3df24:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3df28:	ldr	r1, [fp, #-12]
   3df2c:	ldr	r2, [r1, #20]
   3df30:	add	r0, r2, r0
   3df34:	str	r0, [r1, #20]
   3df38:	b	3df58 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   3df3c:	ldr	r0, [fp, #16]
   3df40:	ldr	r1, [fp, #-12]
   3df44:	str	r0, [sp, #4]
   3df48:	mov	r0, r1
   3df4c:	ldrsh	r1, [sp, #22]
   3df50:	ldr	r2, [sp, #4]
   3df54:	blx	r2
   3df58:	sub	sp, fp, #8
   3df5c:	pop	{r4, sl, fp, pc}

0003df60 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3df60:	push	{r4, sl, fp, lr}
   3df64:	add	fp, sp, #8
   3df68:	sub	sp, sp, #40	; 0x28
   3df6c:	ldr	ip, [fp, #16]
   3df70:	ldr	lr, [fp, #12]
   3df74:	ldr	r4, [fp, #8]
   3df78:	str	r0, [fp, #-12]
   3df7c:	str	r1, [fp, #-16]
   3df80:	str	r2, [fp, #-20]	; 0xffffffec
   3df84:	str	r3, [sp, #24]
   3df88:	ldr	r0, [fp, #-20]	; 0xffffffec
   3df8c:	ldr	r1, [sp, #24]
   3df90:	add	r0, r0, r1
   3df94:	str	ip, [sp, #16]
   3df98:	str	lr, [sp, #12]
   3df9c:	str	r4, [sp, #8]
   3dfa0:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3dfa4:	str	r0, [sp, #20]
   3dfa8:	ldr	r0, [fp, #-16]
   3dfac:	cmp	r0, #0
   3dfb0:	beq	3dfcc <flatcc_json_printer_int32_enum_struct_field@@Base+0x6c>
   3dfb4:	ldr	r0, [fp, #-12]
   3dfb8:	ldr	r1, [r0, #20]
   3dfbc:	add	r2, r1, #1
   3dfc0:	str	r2, [r0, #20]
   3dfc4:	movw	r0, #44	; 0x2c
   3dfc8:	strb	r0, [r1]
   3dfcc:	ldr	r0, [fp, #-12]
   3dfd0:	ldr	r1, [fp, #8]
   3dfd4:	ldr	r2, [fp, #12]
   3dfd8:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3dfdc:	ldr	r0, [fp, #-12]
   3dfe0:	ldrsb	r0, [r0, #27]
   3dfe4:	cmp	r0, #0
   3dfe8:	beq	3e010 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   3dfec:	ldr	r0, [sp, #20]
   3dff0:	ldr	r1, [fp, #-12]
   3dff4:	ldr	r1, [r1, #20]
   3dff8:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3dffc:	ldr	r1, [fp, #-12]
   3e000:	ldr	r2, [r1, #20]
   3e004:	add	r0, r2, r0
   3e008:	str	r0, [r1, #20]
   3e00c:	b	3e030 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd0>
   3e010:	ldr	r0, [fp, #16]
   3e014:	ldr	r1, [fp, #-12]
   3e018:	ldr	r2, [sp, #20]
   3e01c:	str	r0, [sp, #4]
   3e020:	mov	r0, r1
   3e024:	mov	r1, r2
   3e028:	ldr	r2, [sp, #4]
   3e02c:	blx	r2
   3e030:	sub	sp, fp, #8
   3e034:	pop	{r4, sl, fp, pc}

0003e038 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3e038:	push	{r4, sl, fp, lr}
   3e03c:	add	fp, sp, #8
   3e040:	sub	sp, sp, #40	; 0x28
   3e044:	ldr	ip, [fp, #16]
   3e048:	ldr	lr, [fp, #12]
   3e04c:	ldr	r4, [fp, #8]
   3e050:	str	r0, [fp, #-12]
   3e054:	str	r1, [fp, #-16]
   3e058:	str	r2, [fp, #-20]	; 0xffffffec
   3e05c:	str	r3, [sp, #24]
   3e060:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e064:	ldr	r1, [sp, #24]
   3e068:	add	r0, r0, r1
   3e06c:	str	ip, [sp, #12]
   3e070:	str	lr, [sp, #8]
   3e074:	str	r4, [sp, #4]
   3e078:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3e07c:	str	r1, [sp, #20]
   3e080:	str	r0, [sp, #16]
   3e084:	ldr	r0, [fp, #-16]
   3e088:	cmp	r0, #0
   3e08c:	beq	3e0a8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3e090:	ldr	r0, [fp, #-12]
   3e094:	ldr	r1, [r0, #20]
   3e098:	add	r2, r1, #1
   3e09c:	str	r2, [r0, #20]
   3e0a0:	movw	r0, #44	; 0x2c
   3e0a4:	strb	r0, [r1]
   3e0a8:	ldr	r0, [fp, #-12]
   3e0ac:	ldr	r1, [fp, #8]
   3e0b0:	ldr	r2, [fp, #12]
   3e0b4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3e0b8:	ldr	r0, [fp, #-12]
   3e0bc:	ldrsb	r0, [r0, #27]
   3e0c0:	cmp	r0, #0
   3e0c4:	beq	3e0f0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb8>
   3e0c8:	ldr	r0, [sp, #16]
   3e0cc:	ldr	r1, [sp, #20]
   3e0d0:	ldr	r2, [fp, #-12]
   3e0d4:	ldr	r2, [r2, #20]
   3e0d8:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3e0dc:	ldr	r1, [fp, #-12]
   3e0e0:	ldr	r2, [r1, #20]
   3e0e4:	add	r0, r2, r0
   3e0e8:	str	r0, [r1, #20]
   3e0ec:	b	3e110 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   3e0f0:	ldr	r0, [fp, #16]
   3e0f4:	ldr	r1, [fp, #-12]
   3e0f8:	ldr	r2, [sp, #16]
   3e0fc:	ldr	r3, [sp, #20]
   3e100:	str	r0, [sp]
   3e104:	mov	r0, r1
   3e108:	ldr	r1, [sp]
   3e10c:	blx	r1
   3e110:	sub	sp, fp, #8
   3e114:	pop	{r4, sl, fp, pc}

0003e118 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3e118:	push	{r4, sl, fp, lr}
   3e11c:	add	fp, sp, #8
   3e120:	sub	sp, sp, #40	; 0x28
   3e124:	ldr	ip, [fp, #16]
   3e128:	ldr	lr, [fp, #12]
   3e12c:	ldr	r4, [fp, #8]
   3e130:	str	r0, [fp, #-12]
   3e134:	str	r1, [fp, #-16]
   3e138:	str	r2, [fp, #-20]	; 0xffffffec
   3e13c:	str	r3, [sp, #24]
   3e140:	ldr	r0, [fp, #-20]	; 0xffffffec
   3e144:	ldr	r1, [sp, #24]
   3e148:	add	r0, r0, r1
   3e14c:	str	ip, [sp, #16]
   3e150:	str	lr, [sp, #12]
   3e154:	str	r4, [sp, #8]
   3e158:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3e15c:	strb	r0, [sp, #23]
   3e160:	ldr	r0, [fp, #-16]
   3e164:	cmp	r0, #0
   3e168:	beq	3e184 <flatcc_json_printer_bool_enum_struct_field@@Base+0x6c>
   3e16c:	ldr	r0, [fp, #-12]
   3e170:	ldr	r1, [r0, #20]
   3e174:	add	r2, r1, #1
   3e178:	str	r2, [r0, #20]
   3e17c:	movw	r0, #44	; 0x2c
   3e180:	strb	r0, [r1]
   3e184:	ldr	r0, [fp, #-12]
   3e188:	ldr	r1, [fp, #8]
   3e18c:	ldr	r2, [fp, #12]
   3e190:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3e194:	ldr	r0, [fp, #-12]
   3e198:	ldrsb	r0, [r0, #27]
   3e19c:	cmp	r0, #0
   3e1a0:	beq	3e1c8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   3e1a4:	ldrb	r0, [sp, #23]
   3e1a8:	ldr	r1, [fp, #-12]
   3e1ac:	ldr	r1, [r1, #20]
   3e1b0:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3e1b4:	ldr	r1, [fp, #-12]
   3e1b8:	ldr	r2, [r1, #20]
   3e1bc:	add	r0, r2, r0
   3e1c0:	str	r0, [r1, #20]
   3e1c4:	b	3e1e4 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   3e1c8:	ldr	r0, [fp, #16]
   3e1cc:	ldr	r1, [fp, #-12]
   3e1d0:	str	r0, [sp, #4]
   3e1d4:	mov	r0, r1
   3e1d8:	ldrb	r1, [sp, #23]
   3e1dc:	ldr	r2, [sp, #4]
   3e1e0:	blx	r2
   3e1e4:	sub	sp, fp, #8
   3e1e8:	pop	{r4, sl, fp, pc}

0003e1ec <flatcc_json_printer_utype_vector_field@@Base>:
   3e1ec:	push	{fp, lr}
   3e1f0:	mov	fp, sp
   3e1f4:	sub	sp, sp, #32
   3e1f8:	ldr	ip, [fp, #8]
   3e1fc:	str	r0, [fp, #-4]
   3e200:	str	r1, [fp, #-8]
   3e204:	str	r2, [fp, #-12]
   3e208:	str	r3, [sp, #16]
   3e20c:	ldr	r0, [fp, #-8]
   3e210:	ldr	r1, [fp, #-12]
   3e214:	str	ip, [sp, #4]
   3e218:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3e21c:	str	r0, [sp, #12]
   3e220:	ldr	r0, [sp, #12]
   3e224:	movw	r1, #0
   3e228:	cmp	r0, r1
   3e22c:	beq	3e460 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3e230:	ldr	r0, [fp, #-8]
   3e234:	ldr	r1, [r0, #16]
   3e238:	add	r2, r1, #1
   3e23c:	str	r2, [r0, #16]
   3e240:	cmp	r1, #0
   3e244:	beq	3e260 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3e248:	ldr	r0, [fp, #-4]
   3e24c:	ldr	r1, [r0, #20]
   3e250:	add	r2, r1, #1
   3e254:	str	r2, [r0, #20]
   3e258:	movw	r0, #44	; 0x2c
   3e25c:	strb	r0, [r1]
   3e260:	ldr	r0, [sp, #12]
   3e264:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3e268:	str	r0, [sp, #12]
   3e26c:	ldr	r0, [sp, #12]
   3e270:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3e274:	str	r0, [sp, #8]
   3e278:	ldr	r0, [sp, #12]
   3e27c:	add	r0, r0, #4
   3e280:	str	r0, [sp, #12]
   3e284:	ldr	r0, [fp, #-4]
   3e288:	ldr	r1, [sp, #16]
   3e28c:	ldr	r2, [fp, #8]
   3e290:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3e294:	ldr	r0, [fp, #-4]
   3e298:	ldr	r1, [r0, #32]
   3e29c:	add	r1, r1, #1
   3e2a0:	str	r1, [r0, #32]
   3e2a4:	ldr	r0, [fp, #-4]
   3e2a8:	ldr	r1, [r0, #20]
   3e2ac:	add	r2, r1, #1
   3e2b0:	str	r2, [r0, #20]
   3e2b4:	movw	r0, #91	; 0x5b
   3e2b8:	strb	r0, [r1]
   3e2bc:	ldr	r0, [sp, #8]
   3e2c0:	cmp	r0, #0
   3e2c4:	beq	3e350 <flatcc_json_printer_utype_vector_field@@Base+0x164>
   3e2c8:	b	3e2cc <flatcc_json_printer_utype_vector_field@@Base+0xe0>
   3e2cc:	ldr	r0, [fp, #-4]
   3e2d0:	ldrsb	r0, [r0, #25]
   3e2d4:	cmp	r0, #0
   3e2d8:	beq	3e300 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   3e2dc:	ldr	r0, [fp, #-4]
   3e2e0:	ldr	r1, [r0, #20]
   3e2e4:	add	r2, r1, #1
   3e2e8:	str	r2, [r0, #20]
   3e2ec:	movw	r0, #10
   3e2f0:	strb	r0, [r1]
   3e2f4:	ldr	r0, [fp, #-4]
   3e2f8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e2fc:	b	3e308 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3e300:	ldr	r0, [fp, #-4]
   3e304:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e308:	b	3e30c <flatcc_json_printer_utype_vector_field@@Base+0x120>
   3e30c:	ldr	r0, [sp, #12]
   3e310:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3e314:	ldr	r1, [fp, #-4]
   3e318:	ldr	r1, [r1, #20]
   3e31c:	and	r0, r0, #255	; 0xff
   3e320:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3e324:	ldr	r1, [fp, #-4]
   3e328:	ldr	r2, [r1, #20]
   3e32c:	add	r0, r2, r0
   3e330:	str	r0, [r1, #20]
   3e334:	ldr	r0, [sp, #12]
   3e338:	add	r0, r0, #1
   3e33c:	str	r0, [sp, #12]
   3e340:	ldr	r0, [sp, #8]
   3e344:	mvn	r1, #0
   3e348:	add	r0, r0, r1
   3e34c:	str	r0, [sp, #8]
   3e350:	b	3e354 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3e354:	ldr	r0, [sp, #8]
   3e358:	mvn	r1, #0
   3e35c:	add	r1, r0, r1
   3e360:	str	r1, [sp, #8]
   3e364:	cmp	r0, #0
   3e368:	beq	3e3fc <flatcc_json_printer_utype_vector_field@@Base+0x210>
   3e36c:	ldr	r0, [fp, #-4]
   3e370:	ldr	r1, [r0, #20]
   3e374:	add	r2, r1, #1
   3e378:	str	r2, [r0, #20]
   3e37c:	movw	r0, #44	; 0x2c
   3e380:	strb	r0, [r1]
   3e384:	ldr	r0, [fp, #-4]
   3e388:	ldrsb	r0, [r0, #25]
   3e38c:	cmp	r0, #0
   3e390:	beq	3e3b8 <flatcc_json_printer_utype_vector_field@@Base+0x1cc>
   3e394:	ldr	r0, [fp, #-4]
   3e398:	ldr	r1, [r0, #20]
   3e39c:	add	r2, r1, #1
   3e3a0:	str	r2, [r0, #20]
   3e3a4:	movw	r0, #10
   3e3a8:	strb	r0, [r1]
   3e3ac:	ldr	r0, [fp, #-4]
   3e3b0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e3b4:	b	3e3c0 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   3e3b8:	ldr	r0, [fp, #-4]
   3e3bc:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e3c0:	b	3e3c4 <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   3e3c4:	ldr	r0, [sp, #12]
   3e3c8:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   3e3cc:	ldr	r1, [fp, #-4]
   3e3d0:	ldr	r1, [r1, #20]
   3e3d4:	and	r0, r0, #255	; 0xff
   3e3d8:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3e3dc:	ldr	r1, [fp, #-4]
   3e3e0:	ldr	r2, [r1, #20]
   3e3e4:	add	r0, r2, r0
   3e3e8:	str	r0, [r1, #20]
   3e3ec:	ldr	r0, [sp, #12]
   3e3f0:	add	r0, r0, #1
   3e3f4:	str	r0, [sp, #12]
   3e3f8:	b	3e354 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   3e3fc:	b	3e400 <flatcc_json_printer_utype_vector_field@@Base+0x214>
   3e400:	ldr	r0, [fp, #-4]
   3e404:	ldrsb	r0, [r0, #25]
   3e408:	cmp	r0, #0
   3e40c:	beq	3e444 <flatcc_json_printer_utype_vector_field@@Base+0x258>
   3e410:	ldr	r0, [fp, #-4]
   3e414:	ldr	r1, [r0, #20]
   3e418:	add	r2, r1, #1
   3e41c:	str	r2, [r0, #20]
   3e420:	movw	r0, #10
   3e424:	strb	r0, [r1]
   3e428:	ldr	r0, [fp, #-4]
   3e42c:	ldr	r1, [r0, #32]
   3e430:	mvn	r2, #0
   3e434:	add	r1, r1, r2
   3e438:	str	r1, [r0, #32]
   3e43c:	ldr	r0, [fp, #-4]
   3e440:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e444:	ldr	r0, [fp, #-4]
   3e448:	ldr	r1, [r0, #20]
   3e44c:	add	r2, r1, #1
   3e450:	str	r2, [r0, #20]
   3e454:	movw	r0, #93	; 0x5d
   3e458:	strb	r0, [r1]
   3e45c:	b	3e460 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   3e460:	mov	sp, fp
   3e464:	pop	{fp, pc}
   3e468:	push	{fp, lr}
   3e46c:	mov	fp, sp
   3e470:	sub	sp, sp, #8
   3e474:	str	r0, [sp, #4]
   3e478:	ldr	r0, [sp, #4]
   3e47c:	ldr	r0, [r0]
   3e480:	bl	45b8c <flatcc_json_printer_clear@@Base+0x1c68>
   3e484:	mov	sp, fp
   3e488:	pop	{fp, pc}
   3e48c:	push	{fp, lr}
   3e490:	mov	fp, sp
   3e494:	sub	sp, sp, #8
   3e498:	str	r0, [sp, #4]
   3e49c:	ldr	r0, [sp, #4]
   3e4a0:	ldrb	r0, [r0]
   3e4a4:	bl	45ba0 <flatcc_json_printer_clear@@Base+0x1c7c>
   3e4a8:	and	r0, r0, #255	; 0xff
   3e4ac:	mov	sp, fp
   3e4b0:	pop	{fp, pc}

0003e4b4 <flatcc_json_printer_uint8_vector_field@@Base>:
   3e4b4:	push	{fp, lr}
   3e4b8:	mov	fp, sp
   3e4bc:	sub	sp, sp, #32
   3e4c0:	ldr	ip, [fp, #8]
   3e4c4:	str	r0, [fp, #-4]
   3e4c8:	str	r1, [fp, #-8]
   3e4cc:	str	r2, [fp, #-12]
   3e4d0:	str	r3, [sp, #16]
   3e4d4:	ldr	r0, [fp, #-8]
   3e4d8:	ldr	r1, [fp, #-12]
   3e4dc:	str	ip, [sp, #4]
   3e4e0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3e4e4:	str	r0, [sp, #12]
   3e4e8:	ldr	r0, [sp, #12]
   3e4ec:	movw	r1, #0
   3e4f0:	cmp	r0, r1
   3e4f4:	beq	3e728 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3e4f8:	ldr	r0, [fp, #-8]
   3e4fc:	ldr	r1, [r0, #16]
   3e500:	add	r2, r1, #1
   3e504:	str	r2, [r0, #16]
   3e508:	cmp	r1, #0
   3e50c:	beq	3e528 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3e510:	ldr	r0, [fp, #-4]
   3e514:	ldr	r1, [r0, #20]
   3e518:	add	r2, r1, #1
   3e51c:	str	r2, [r0, #20]
   3e520:	movw	r0, #44	; 0x2c
   3e524:	strb	r0, [r1]
   3e528:	ldr	r0, [sp, #12]
   3e52c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3e530:	str	r0, [sp, #12]
   3e534:	ldr	r0, [sp, #12]
   3e538:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3e53c:	str	r0, [sp, #8]
   3e540:	ldr	r0, [sp, #12]
   3e544:	add	r0, r0, #4
   3e548:	str	r0, [sp, #12]
   3e54c:	ldr	r0, [fp, #-4]
   3e550:	ldr	r1, [sp, #16]
   3e554:	ldr	r2, [fp, #8]
   3e558:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3e55c:	ldr	r0, [fp, #-4]
   3e560:	ldr	r1, [r0, #32]
   3e564:	add	r1, r1, #1
   3e568:	str	r1, [r0, #32]
   3e56c:	ldr	r0, [fp, #-4]
   3e570:	ldr	r1, [r0, #20]
   3e574:	add	r2, r1, #1
   3e578:	str	r2, [r0, #20]
   3e57c:	movw	r0, #91	; 0x5b
   3e580:	strb	r0, [r1]
   3e584:	ldr	r0, [sp, #8]
   3e588:	cmp	r0, #0
   3e58c:	beq	3e618 <flatcc_json_printer_uint8_vector_field@@Base+0x164>
   3e590:	b	3e594 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   3e594:	ldr	r0, [fp, #-4]
   3e598:	ldrsb	r0, [r0, #25]
   3e59c:	cmp	r0, #0
   3e5a0:	beq	3e5c8 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   3e5a4:	ldr	r0, [fp, #-4]
   3e5a8:	ldr	r1, [r0, #20]
   3e5ac:	add	r2, r1, #1
   3e5b0:	str	r2, [r0, #20]
   3e5b4:	movw	r0, #10
   3e5b8:	strb	r0, [r1]
   3e5bc:	ldr	r0, [fp, #-4]
   3e5c0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e5c4:	b	3e5d0 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3e5c8:	ldr	r0, [fp, #-4]
   3e5cc:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e5d0:	b	3e5d4 <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   3e5d4:	ldr	r0, [sp, #12]
   3e5d8:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3e5dc:	ldr	r1, [fp, #-4]
   3e5e0:	ldr	r1, [r1, #20]
   3e5e4:	and	r0, r0, #255	; 0xff
   3e5e8:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3e5ec:	ldr	r1, [fp, #-4]
   3e5f0:	ldr	r2, [r1, #20]
   3e5f4:	add	r0, r2, r0
   3e5f8:	str	r0, [r1, #20]
   3e5fc:	ldr	r0, [sp, #12]
   3e600:	add	r0, r0, #1
   3e604:	str	r0, [sp, #12]
   3e608:	ldr	r0, [sp, #8]
   3e60c:	mvn	r1, #0
   3e610:	add	r0, r0, r1
   3e614:	str	r0, [sp, #8]
   3e618:	b	3e61c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3e61c:	ldr	r0, [sp, #8]
   3e620:	mvn	r1, #0
   3e624:	add	r1, r0, r1
   3e628:	str	r1, [sp, #8]
   3e62c:	cmp	r0, #0
   3e630:	beq	3e6c4 <flatcc_json_printer_uint8_vector_field@@Base+0x210>
   3e634:	ldr	r0, [fp, #-4]
   3e638:	ldr	r1, [r0, #20]
   3e63c:	add	r2, r1, #1
   3e640:	str	r2, [r0, #20]
   3e644:	movw	r0, #44	; 0x2c
   3e648:	strb	r0, [r1]
   3e64c:	ldr	r0, [fp, #-4]
   3e650:	ldrsb	r0, [r0, #25]
   3e654:	cmp	r0, #0
   3e658:	beq	3e680 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   3e65c:	ldr	r0, [fp, #-4]
   3e660:	ldr	r1, [r0, #20]
   3e664:	add	r2, r1, #1
   3e668:	str	r2, [r0, #20]
   3e66c:	movw	r0, #10
   3e670:	strb	r0, [r1]
   3e674:	ldr	r0, [fp, #-4]
   3e678:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e67c:	b	3e688 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   3e680:	ldr	r0, [fp, #-4]
   3e684:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e688:	b	3e68c <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   3e68c:	ldr	r0, [sp, #12]
   3e690:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   3e694:	ldr	r1, [fp, #-4]
   3e698:	ldr	r1, [r1, #20]
   3e69c:	and	r0, r0, #255	; 0xff
   3e6a0:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   3e6a4:	ldr	r1, [fp, #-4]
   3e6a8:	ldr	r2, [r1, #20]
   3e6ac:	add	r0, r2, r0
   3e6b0:	str	r0, [r1, #20]
   3e6b4:	ldr	r0, [sp, #12]
   3e6b8:	add	r0, r0, #1
   3e6bc:	str	r0, [sp, #12]
   3e6c0:	b	3e61c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   3e6c4:	b	3e6c8 <flatcc_json_printer_uint8_vector_field@@Base+0x214>
   3e6c8:	ldr	r0, [fp, #-4]
   3e6cc:	ldrsb	r0, [r0, #25]
   3e6d0:	cmp	r0, #0
   3e6d4:	beq	3e70c <flatcc_json_printer_uint8_vector_field@@Base+0x258>
   3e6d8:	ldr	r0, [fp, #-4]
   3e6dc:	ldr	r1, [r0, #20]
   3e6e0:	add	r2, r1, #1
   3e6e4:	str	r2, [r0, #20]
   3e6e8:	movw	r0, #10
   3e6ec:	strb	r0, [r1]
   3e6f0:	ldr	r0, [fp, #-4]
   3e6f4:	ldr	r1, [r0, #32]
   3e6f8:	mvn	r2, #0
   3e6fc:	add	r1, r1, r2
   3e700:	str	r1, [r0, #32]
   3e704:	ldr	r0, [fp, #-4]
   3e708:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e70c:	ldr	r0, [fp, #-4]
   3e710:	ldr	r1, [r0, #20]
   3e714:	add	r2, r1, #1
   3e718:	str	r2, [r0, #20]
   3e71c:	movw	r0, #93	; 0x5d
   3e720:	strb	r0, [r1]
   3e724:	b	3e728 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   3e728:	mov	sp, fp
   3e72c:	pop	{fp, pc}

0003e730 <flatcc_json_printer_uint16_vector_field@@Base>:
   3e730:	push	{fp, lr}
   3e734:	mov	fp, sp
   3e738:	sub	sp, sp, #32
   3e73c:	ldr	ip, [fp, #8]
   3e740:	str	r0, [fp, #-4]
   3e744:	str	r1, [fp, #-8]
   3e748:	str	r2, [fp, #-12]
   3e74c:	str	r3, [sp, #16]
   3e750:	ldr	r0, [fp, #-8]
   3e754:	ldr	r1, [fp, #-12]
   3e758:	str	ip, [sp, #4]
   3e75c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3e760:	str	r0, [sp, #12]
   3e764:	ldr	r0, [sp, #12]
   3e768:	movw	r1, #0
   3e76c:	cmp	r0, r1
   3e770:	beq	3e9a4 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3e774:	ldr	r0, [fp, #-8]
   3e778:	ldr	r1, [r0, #16]
   3e77c:	add	r2, r1, #1
   3e780:	str	r2, [r0, #16]
   3e784:	cmp	r1, #0
   3e788:	beq	3e7a4 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3e78c:	ldr	r0, [fp, #-4]
   3e790:	ldr	r1, [r0, #20]
   3e794:	add	r2, r1, #1
   3e798:	str	r2, [r0, #20]
   3e79c:	movw	r0, #44	; 0x2c
   3e7a0:	strb	r0, [r1]
   3e7a4:	ldr	r0, [sp, #12]
   3e7a8:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3e7ac:	str	r0, [sp, #12]
   3e7b0:	ldr	r0, [sp, #12]
   3e7b4:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3e7b8:	str	r0, [sp, #8]
   3e7bc:	ldr	r0, [sp, #12]
   3e7c0:	add	r0, r0, #4
   3e7c4:	str	r0, [sp, #12]
   3e7c8:	ldr	r0, [fp, #-4]
   3e7cc:	ldr	r1, [sp, #16]
   3e7d0:	ldr	r2, [fp, #8]
   3e7d4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3e7d8:	ldr	r0, [fp, #-4]
   3e7dc:	ldr	r1, [r0, #32]
   3e7e0:	add	r1, r1, #1
   3e7e4:	str	r1, [r0, #32]
   3e7e8:	ldr	r0, [fp, #-4]
   3e7ec:	ldr	r1, [r0, #20]
   3e7f0:	add	r2, r1, #1
   3e7f4:	str	r2, [r0, #20]
   3e7f8:	movw	r0, #91	; 0x5b
   3e7fc:	strb	r0, [r1]
   3e800:	ldr	r0, [sp, #8]
   3e804:	cmp	r0, #0
   3e808:	beq	3e894 <flatcc_json_printer_uint16_vector_field@@Base+0x164>
   3e80c:	b	3e810 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   3e810:	ldr	r0, [fp, #-4]
   3e814:	ldrsb	r0, [r0, #25]
   3e818:	cmp	r0, #0
   3e81c:	beq	3e844 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   3e820:	ldr	r0, [fp, #-4]
   3e824:	ldr	r1, [r0, #20]
   3e828:	add	r2, r1, #1
   3e82c:	str	r2, [r0, #20]
   3e830:	movw	r0, #10
   3e834:	strb	r0, [r1]
   3e838:	ldr	r0, [fp, #-4]
   3e83c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e840:	b	3e84c <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3e844:	ldr	r0, [fp, #-4]
   3e848:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e84c:	b	3e850 <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   3e850:	ldr	r0, [sp, #12]
   3e854:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3e858:	ldr	r1, [fp, #-4]
   3e85c:	ldr	r1, [r1, #20]
   3e860:	uxth	r0, r0
   3e864:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3e868:	ldr	r1, [fp, #-4]
   3e86c:	ldr	r2, [r1, #20]
   3e870:	add	r0, r2, r0
   3e874:	str	r0, [r1, #20]
   3e878:	ldr	r0, [sp, #12]
   3e87c:	add	r0, r0, #2
   3e880:	str	r0, [sp, #12]
   3e884:	ldr	r0, [sp, #8]
   3e888:	mvn	r1, #0
   3e88c:	add	r0, r0, r1
   3e890:	str	r0, [sp, #8]
   3e894:	b	3e898 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3e898:	ldr	r0, [sp, #8]
   3e89c:	mvn	r1, #0
   3e8a0:	add	r1, r0, r1
   3e8a4:	str	r1, [sp, #8]
   3e8a8:	cmp	r0, #0
   3e8ac:	beq	3e940 <flatcc_json_printer_uint16_vector_field@@Base+0x210>
   3e8b0:	ldr	r0, [fp, #-4]
   3e8b4:	ldr	r1, [r0, #20]
   3e8b8:	add	r2, r1, #1
   3e8bc:	str	r2, [r0, #20]
   3e8c0:	movw	r0, #44	; 0x2c
   3e8c4:	strb	r0, [r1]
   3e8c8:	ldr	r0, [fp, #-4]
   3e8cc:	ldrsb	r0, [r0, #25]
   3e8d0:	cmp	r0, #0
   3e8d4:	beq	3e8fc <flatcc_json_printer_uint16_vector_field@@Base+0x1cc>
   3e8d8:	ldr	r0, [fp, #-4]
   3e8dc:	ldr	r1, [r0, #20]
   3e8e0:	add	r2, r1, #1
   3e8e4:	str	r2, [r0, #20]
   3e8e8:	movw	r0, #10
   3e8ec:	strb	r0, [r1]
   3e8f0:	ldr	r0, [fp, #-4]
   3e8f4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e8f8:	b	3e904 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   3e8fc:	ldr	r0, [fp, #-4]
   3e900:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3e904:	b	3e908 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   3e908:	ldr	r0, [sp, #12]
   3e90c:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   3e910:	ldr	r1, [fp, #-4]
   3e914:	ldr	r1, [r1, #20]
   3e918:	uxth	r0, r0
   3e91c:	bl	399bc <flatcc_json_printer_uint16@@Base+0x40>
   3e920:	ldr	r1, [fp, #-4]
   3e924:	ldr	r2, [r1, #20]
   3e928:	add	r0, r2, r0
   3e92c:	str	r0, [r1, #20]
   3e930:	ldr	r0, [sp, #12]
   3e934:	add	r0, r0, #2
   3e938:	str	r0, [sp, #12]
   3e93c:	b	3e898 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   3e940:	b	3e944 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   3e944:	ldr	r0, [fp, #-4]
   3e948:	ldrsb	r0, [r0, #25]
   3e94c:	cmp	r0, #0
   3e950:	beq	3e988 <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   3e954:	ldr	r0, [fp, #-4]
   3e958:	ldr	r1, [r0, #20]
   3e95c:	add	r2, r1, #1
   3e960:	str	r2, [r0, #20]
   3e964:	movw	r0, #10
   3e968:	strb	r0, [r1]
   3e96c:	ldr	r0, [fp, #-4]
   3e970:	ldr	r1, [r0, #32]
   3e974:	mvn	r2, #0
   3e978:	add	r1, r1, r2
   3e97c:	str	r1, [r0, #32]
   3e980:	ldr	r0, [fp, #-4]
   3e984:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3e988:	ldr	r0, [fp, #-4]
   3e98c:	ldr	r1, [r0, #20]
   3e990:	add	r2, r1, #1
   3e994:	str	r2, [r0, #20]
   3e998:	movw	r0, #93	; 0x5d
   3e99c:	strb	r0, [r1]
   3e9a0:	b	3e9a4 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3e9a4:	mov	sp, fp
   3e9a8:	pop	{fp, pc}

0003e9ac <flatcc_json_printer_uint32_vector_field@@Base>:
   3e9ac:	push	{fp, lr}
   3e9b0:	mov	fp, sp
   3e9b4:	sub	sp, sp, #32
   3e9b8:	ldr	ip, [fp, #8]
   3e9bc:	str	r0, [fp, #-4]
   3e9c0:	str	r1, [fp, #-8]
   3e9c4:	str	r2, [fp, #-12]
   3e9c8:	str	r3, [sp, #16]
   3e9cc:	ldr	r0, [fp, #-8]
   3e9d0:	ldr	r1, [fp, #-12]
   3e9d4:	str	ip, [sp, #4]
   3e9d8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3e9dc:	str	r0, [sp, #12]
   3e9e0:	ldr	r0, [sp, #12]
   3e9e4:	movw	r1, #0
   3e9e8:	cmp	r0, r1
   3e9ec:	beq	3ec18 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3e9f0:	ldr	r0, [fp, #-8]
   3e9f4:	ldr	r1, [r0, #16]
   3e9f8:	add	r2, r1, #1
   3e9fc:	str	r2, [r0, #16]
   3ea00:	cmp	r1, #0
   3ea04:	beq	3ea20 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3ea08:	ldr	r0, [fp, #-4]
   3ea0c:	ldr	r1, [r0, #20]
   3ea10:	add	r2, r1, #1
   3ea14:	str	r2, [r0, #20]
   3ea18:	movw	r0, #44	; 0x2c
   3ea1c:	strb	r0, [r1]
   3ea20:	ldr	r0, [sp, #12]
   3ea24:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3ea28:	str	r0, [sp, #12]
   3ea2c:	ldr	r0, [sp, #12]
   3ea30:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ea34:	str	r0, [sp, #8]
   3ea38:	ldr	r0, [sp, #12]
   3ea3c:	add	r0, r0, #4
   3ea40:	str	r0, [sp, #12]
   3ea44:	ldr	r0, [fp, #-4]
   3ea48:	ldr	r1, [sp, #16]
   3ea4c:	ldr	r2, [fp, #8]
   3ea50:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3ea54:	ldr	r0, [fp, #-4]
   3ea58:	ldr	r1, [r0, #32]
   3ea5c:	add	r1, r1, #1
   3ea60:	str	r1, [r0, #32]
   3ea64:	ldr	r0, [fp, #-4]
   3ea68:	ldr	r1, [r0, #20]
   3ea6c:	add	r2, r1, #1
   3ea70:	str	r2, [r0, #20]
   3ea74:	movw	r0, #91	; 0x5b
   3ea78:	strb	r0, [r1]
   3ea7c:	ldr	r0, [sp, #8]
   3ea80:	cmp	r0, #0
   3ea84:	beq	3eb0c <flatcc_json_printer_uint32_vector_field@@Base+0x160>
   3ea88:	b	3ea8c <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   3ea8c:	ldr	r0, [fp, #-4]
   3ea90:	ldrsb	r0, [r0, #25]
   3ea94:	cmp	r0, #0
   3ea98:	beq	3eac0 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   3ea9c:	ldr	r0, [fp, #-4]
   3eaa0:	ldr	r1, [r0, #20]
   3eaa4:	add	r2, r1, #1
   3eaa8:	str	r2, [r0, #20]
   3eaac:	movw	r0, #10
   3eab0:	strb	r0, [r1]
   3eab4:	ldr	r0, [fp, #-4]
   3eab8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3eabc:	b	3eac8 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3eac0:	ldr	r0, [fp, #-4]
   3eac4:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3eac8:	b	3eacc <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   3eacc:	ldr	r0, [sp, #12]
   3ead0:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3ead4:	ldr	r1, [fp, #-4]
   3ead8:	ldr	r1, [r1, #20]
   3eadc:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3eae0:	ldr	r1, [fp, #-4]
   3eae4:	ldr	r2, [r1, #20]
   3eae8:	add	r0, r2, r0
   3eaec:	str	r0, [r1, #20]
   3eaf0:	ldr	r0, [sp, #12]
   3eaf4:	add	r0, r0, #4
   3eaf8:	str	r0, [sp, #12]
   3eafc:	ldr	r0, [sp, #8]
   3eb00:	mvn	r1, #0
   3eb04:	add	r0, r0, r1
   3eb08:	str	r0, [sp, #8]
   3eb0c:	b	3eb10 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3eb10:	ldr	r0, [sp, #8]
   3eb14:	mvn	r1, #0
   3eb18:	add	r1, r0, r1
   3eb1c:	str	r1, [sp, #8]
   3eb20:	cmp	r0, #0
   3eb24:	beq	3ebb4 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
   3eb28:	ldr	r0, [fp, #-4]
   3eb2c:	ldr	r1, [r0, #20]
   3eb30:	add	r2, r1, #1
   3eb34:	str	r2, [r0, #20]
   3eb38:	movw	r0, #44	; 0x2c
   3eb3c:	strb	r0, [r1]
   3eb40:	ldr	r0, [fp, #-4]
   3eb44:	ldrsb	r0, [r0, #25]
   3eb48:	cmp	r0, #0
   3eb4c:	beq	3eb74 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3eb50:	ldr	r0, [fp, #-4]
   3eb54:	ldr	r1, [r0, #20]
   3eb58:	add	r2, r1, #1
   3eb5c:	str	r2, [r0, #20]
   3eb60:	movw	r0, #10
   3eb64:	strb	r0, [r1]
   3eb68:	ldr	r0, [fp, #-4]
   3eb6c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3eb70:	b	3eb7c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   3eb74:	ldr	r0, [fp, #-4]
   3eb78:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3eb7c:	b	3eb80 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   3eb80:	ldr	r0, [sp, #12]
   3eb84:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   3eb88:	ldr	r1, [fp, #-4]
   3eb8c:	ldr	r1, [r1, #20]
   3eb90:	bl	39cf0 <flatcc_json_printer_uint32@@Base+0x3c>
   3eb94:	ldr	r1, [fp, #-4]
   3eb98:	ldr	r2, [r1, #20]
   3eb9c:	add	r0, r2, r0
   3eba0:	str	r0, [r1, #20]
   3eba4:	ldr	r0, [sp, #12]
   3eba8:	add	r0, r0, #4
   3ebac:	str	r0, [sp, #12]
   3ebb0:	b	3eb10 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   3ebb4:	b	3ebb8 <flatcc_json_printer_uint32_vector_field@@Base+0x20c>
   3ebb8:	ldr	r0, [fp, #-4]
   3ebbc:	ldrsb	r0, [r0, #25]
   3ebc0:	cmp	r0, #0
   3ebc4:	beq	3ebfc <flatcc_json_printer_uint32_vector_field@@Base+0x250>
   3ebc8:	ldr	r0, [fp, #-4]
   3ebcc:	ldr	r1, [r0, #20]
   3ebd0:	add	r2, r1, #1
   3ebd4:	str	r2, [r0, #20]
   3ebd8:	movw	r0, #10
   3ebdc:	strb	r0, [r1]
   3ebe0:	ldr	r0, [fp, #-4]
   3ebe4:	ldr	r1, [r0, #32]
   3ebe8:	mvn	r2, #0
   3ebec:	add	r1, r1, r2
   3ebf0:	str	r1, [r0, #32]
   3ebf4:	ldr	r0, [fp, #-4]
   3ebf8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ebfc:	ldr	r0, [fp, #-4]
   3ec00:	ldr	r1, [r0, #20]
   3ec04:	add	r2, r1, #1
   3ec08:	str	r2, [r0, #20]
   3ec0c:	movw	r0, #93	; 0x5d
   3ec10:	strb	r0, [r1]
   3ec14:	b	3ec18 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   3ec18:	mov	sp, fp
   3ec1c:	pop	{fp, pc}

0003ec20 <flatcc_json_printer_uint64_vector_field@@Base>:
   3ec20:	push	{fp, lr}
   3ec24:	mov	fp, sp
   3ec28:	sub	sp, sp, #32
   3ec2c:	ldr	ip, [fp, #8]
   3ec30:	str	r0, [fp, #-4]
   3ec34:	str	r1, [fp, #-8]
   3ec38:	str	r2, [fp, #-12]
   3ec3c:	str	r3, [sp, #16]
   3ec40:	ldr	r0, [fp, #-8]
   3ec44:	ldr	r1, [fp, #-12]
   3ec48:	str	ip, [sp, #4]
   3ec4c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3ec50:	str	r0, [sp, #12]
   3ec54:	ldr	r0, [sp, #12]
   3ec58:	movw	r1, #0
   3ec5c:	cmp	r0, r1
   3ec60:	beq	3ee8c <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3ec64:	ldr	r0, [fp, #-8]
   3ec68:	ldr	r1, [r0, #16]
   3ec6c:	add	r2, r1, #1
   3ec70:	str	r2, [r0, #16]
   3ec74:	cmp	r1, #0
   3ec78:	beq	3ec94 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3ec7c:	ldr	r0, [fp, #-4]
   3ec80:	ldr	r1, [r0, #20]
   3ec84:	add	r2, r1, #1
   3ec88:	str	r2, [r0, #20]
   3ec8c:	movw	r0, #44	; 0x2c
   3ec90:	strb	r0, [r1]
   3ec94:	ldr	r0, [sp, #12]
   3ec98:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3ec9c:	str	r0, [sp, #12]
   3eca0:	ldr	r0, [sp, #12]
   3eca4:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3eca8:	str	r0, [sp, #8]
   3ecac:	ldr	r0, [sp, #12]
   3ecb0:	add	r0, r0, #4
   3ecb4:	str	r0, [sp, #12]
   3ecb8:	ldr	r0, [fp, #-4]
   3ecbc:	ldr	r1, [sp, #16]
   3ecc0:	ldr	r2, [fp, #8]
   3ecc4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3ecc8:	ldr	r0, [fp, #-4]
   3eccc:	ldr	r1, [r0, #32]
   3ecd0:	add	r1, r1, #1
   3ecd4:	str	r1, [r0, #32]
   3ecd8:	ldr	r0, [fp, #-4]
   3ecdc:	ldr	r1, [r0, #20]
   3ece0:	add	r2, r1, #1
   3ece4:	str	r2, [r0, #20]
   3ece8:	movw	r0, #91	; 0x5b
   3ecec:	strb	r0, [r1]
   3ecf0:	ldr	r0, [sp, #8]
   3ecf4:	cmp	r0, #0
   3ecf8:	beq	3ed80 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
   3ecfc:	b	3ed00 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
   3ed00:	ldr	r0, [fp, #-4]
   3ed04:	ldrsb	r0, [r0, #25]
   3ed08:	cmp	r0, #0
   3ed0c:	beq	3ed34 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   3ed10:	ldr	r0, [fp, #-4]
   3ed14:	ldr	r1, [r0, #20]
   3ed18:	add	r2, r1, #1
   3ed1c:	str	r2, [r0, #20]
   3ed20:	movw	r0, #10
   3ed24:	strb	r0, [r1]
   3ed28:	ldr	r0, [fp, #-4]
   3ed2c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ed30:	b	3ed3c <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3ed34:	ldr	r0, [fp, #-4]
   3ed38:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3ed3c:	b	3ed40 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   3ed40:	ldr	r0, [sp, #12]
   3ed44:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3ed48:	ldr	r2, [fp, #-4]
   3ed4c:	ldr	r2, [r2, #20]
   3ed50:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3ed54:	ldr	r1, [fp, #-4]
   3ed58:	ldr	r2, [r1, #20]
   3ed5c:	add	r0, r2, r0
   3ed60:	str	r0, [r1, #20]
   3ed64:	ldr	r0, [sp, #12]
   3ed68:	add	r0, r0, #8
   3ed6c:	str	r0, [sp, #12]
   3ed70:	ldr	r0, [sp, #8]
   3ed74:	mvn	r1, #0
   3ed78:	add	r0, r0, r1
   3ed7c:	str	r0, [sp, #8]
   3ed80:	b	3ed84 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3ed84:	ldr	r0, [sp, #8]
   3ed88:	mvn	r1, #0
   3ed8c:	add	r1, r0, r1
   3ed90:	str	r1, [sp, #8]
   3ed94:	cmp	r0, #0
   3ed98:	beq	3ee28 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   3ed9c:	ldr	r0, [fp, #-4]
   3eda0:	ldr	r1, [r0, #20]
   3eda4:	add	r2, r1, #1
   3eda8:	str	r2, [r0, #20]
   3edac:	movw	r0, #44	; 0x2c
   3edb0:	strb	r0, [r1]
   3edb4:	ldr	r0, [fp, #-4]
   3edb8:	ldrsb	r0, [r0, #25]
   3edbc:	cmp	r0, #0
   3edc0:	beq	3ede8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3edc4:	ldr	r0, [fp, #-4]
   3edc8:	ldr	r1, [r0, #20]
   3edcc:	add	r2, r1, #1
   3edd0:	str	r2, [r0, #20]
   3edd4:	movw	r0, #10
   3edd8:	strb	r0, [r1]
   3eddc:	ldr	r0, [fp, #-4]
   3ede0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ede4:	b	3edf0 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   3ede8:	ldr	r0, [fp, #-4]
   3edec:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3edf0:	b	3edf4 <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   3edf4:	ldr	r0, [sp, #12]
   3edf8:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   3edfc:	ldr	r2, [fp, #-4]
   3ee00:	ldr	r2, [r2, #20]
   3ee04:	bl	3a340 <flatcc_json_printer_uint64@@Base+0x44>
   3ee08:	ldr	r1, [fp, #-4]
   3ee0c:	ldr	r2, [r1, #20]
   3ee10:	add	r0, r2, r0
   3ee14:	str	r0, [r1, #20]
   3ee18:	ldr	r0, [sp, #12]
   3ee1c:	add	r0, r0, #8
   3ee20:	str	r0, [sp, #12]
   3ee24:	b	3ed84 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   3ee28:	b	3ee2c <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   3ee2c:	ldr	r0, [fp, #-4]
   3ee30:	ldrsb	r0, [r0, #25]
   3ee34:	cmp	r0, #0
   3ee38:	beq	3ee70 <flatcc_json_printer_uint64_vector_field@@Base+0x250>
   3ee3c:	ldr	r0, [fp, #-4]
   3ee40:	ldr	r1, [r0, #20]
   3ee44:	add	r2, r1, #1
   3ee48:	str	r2, [r0, #20]
   3ee4c:	movw	r0, #10
   3ee50:	strb	r0, [r1]
   3ee54:	ldr	r0, [fp, #-4]
   3ee58:	ldr	r1, [r0, #32]
   3ee5c:	mvn	r2, #0
   3ee60:	add	r1, r1, r2
   3ee64:	str	r1, [r0, #32]
   3ee68:	ldr	r0, [fp, #-4]
   3ee6c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ee70:	ldr	r0, [fp, #-4]
   3ee74:	ldr	r1, [r0, #20]
   3ee78:	add	r2, r1, #1
   3ee7c:	str	r2, [r0, #20]
   3ee80:	movw	r0, #93	; 0x5d
   3ee84:	strb	r0, [r1]
   3ee88:	b	3ee8c <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3ee8c:	mov	sp, fp
   3ee90:	pop	{fp, pc}

0003ee94 <flatcc_json_printer_int8_vector_field@@Base>:
   3ee94:	push	{fp, lr}
   3ee98:	mov	fp, sp
   3ee9c:	sub	sp, sp, #32
   3eea0:	ldr	ip, [fp, #8]
   3eea4:	str	r0, [fp, #-4]
   3eea8:	str	r1, [fp, #-8]
   3eeac:	str	r2, [fp, #-12]
   3eeb0:	str	r3, [sp, #16]
   3eeb4:	ldr	r0, [fp, #-8]
   3eeb8:	ldr	r1, [fp, #-12]
   3eebc:	str	ip, [sp, #4]
   3eec0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3eec4:	str	r0, [sp, #12]
   3eec8:	ldr	r0, [sp, #12]
   3eecc:	movw	r1, #0
   3eed0:	cmp	r0, r1
   3eed4:	beq	3f108 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3eed8:	ldr	r0, [fp, #-8]
   3eedc:	ldr	r1, [r0, #16]
   3eee0:	add	r2, r1, #1
   3eee4:	str	r2, [r0, #16]
   3eee8:	cmp	r1, #0
   3eeec:	beq	3ef08 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   3eef0:	ldr	r0, [fp, #-4]
   3eef4:	ldr	r1, [r0, #20]
   3eef8:	add	r2, r1, #1
   3eefc:	str	r2, [r0, #20]
   3ef00:	movw	r0, #44	; 0x2c
   3ef04:	strb	r0, [r1]
   3ef08:	ldr	r0, [sp, #12]
   3ef0c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3ef10:	str	r0, [sp, #12]
   3ef14:	ldr	r0, [sp, #12]
   3ef18:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3ef1c:	str	r0, [sp, #8]
   3ef20:	ldr	r0, [sp, #12]
   3ef24:	add	r0, r0, #4
   3ef28:	str	r0, [sp, #12]
   3ef2c:	ldr	r0, [fp, #-4]
   3ef30:	ldr	r1, [sp, #16]
   3ef34:	ldr	r2, [fp, #8]
   3ef38:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3ef3c:	ldr	r0, [fp, #-4]
   3ef40:	ldr	r1, [r0, #32]
   3ef44:	add	r1, r1, #1
   3ef48:	str	r1, [r0, #32]
   3ef4c:	ldr	r0, [fp, #-4]
   3ef50:	ldr	r1, [r0, #20]
   3ef54:	add	r2, r1, #1
   3ef58:	str	r2, [r0, #20]
   3ef5c:	movw	r0, #91	; 0x5b
   3ef60:	strb	r0, [r1]
   3ef64:	ldr	r0, [sp, #8]
   3ef68:	cmp	r0, #0
   3ef6c:	beq	3eff8 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   3ef70:	b	3ef74 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   3ef74:	ldr	r0, [fp, #-4]
   3ef78:	ldrsb	r0, [r0, #25]
   3ef7c:	cmp	r0, #0
   3ef80:	beq	3efa8 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   3ef84:	ldr	r0, [fp, #-4]
   3ef88:	ldr	r1, [r0, #20]
   3ef8c:	add	r2, r1, #1
   3ef90:	str	r2, [r0, #20]
   3ef94:	movw	r0, #10
   3ef98:	strb	r0, [r1]
   3ef9c:	ldr	r0, [fp, #-4]
   3efa0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3efa4:	b	3efb0 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   3efa8:	ldr	r0, [fp, #-4]
   3efac:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3efb0:	b	3efb4 <flatcc_json_printer_int8_vector_field@@Base+0x120>
   3efb4:	ldr	r0, [sp, #12]
   3efb8:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3efbc:	ldr	r1, [fp, #-4]
   3efc0:	ldr	r1, [r1, #20]
   3efc4:	sxtb	r0, r0
   3efc8:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3efcc:	ldr	r1, [fp, #-4]
   3efd0:	ldr	r2, [r1, #20]
   3efd4:	add	r0, r2, r0
   3efd8:	str	r0, [r1, #20]
   3efdc:	ldr	r0, [sp, #12]
   3efe0:	add	r0, r0, #1
   3efe4:	str	r0, [sp, #12]
   3efe8:	ldr	r0, [sp, #8]
   3efec:	mvn	r1, #0
   3eff0:	add	r0, r0, r1
   3eff4:	str	r0, [sp, #8]
   3eff8:	b	3effc <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3effc:	ldr	r0, [sp, #8]
   3f000:	mvn	r1, #0
   3f004:	add	r1, r0, r1
   3f008:	str	r1, [sp, #8]
   3f00c:	cmp	r0, #0
   3f010:	beq	3f0a4 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   3f014:	ldr	r0, [fp, #-4]
   3f018:	ldr	r1, [r0, #20]
   3f01c:	add	r2, r1, #1
   3f020:	str	r2, [r0, #20]
   3f024:	movw	r0, #44	; 0x2c
   3f028:	strb	r0, [r1]
   3f02c:	ldr	r0, [fp, #-4]
   3f030:	ldrsb	r0, [r0, #25]
   3f034:	cmp	r0, #0
   3f038:	beq	3f060 <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   3f03c:	ldr	r0, [fp, #-4]
   3f040:	ldr	r1, [r0, #20]
   3f044:	add	r2, r1, #1
   3f048:	str	r2, [r0, #20]
   3f04c:	movw	r0, #10
   3f050:	strb	r0, [r1]
   3f054:	ldr	r0, [fp, #-4]
   3f058:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f05c:	b	3f068 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   3f060:	ldr	r0, [fp, #-4]
   3f064:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f068:	b	3f06c <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   3f06c:	ldr	r0, [sp, #12]
   3f070:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   3f074:	ldr	r1, [fp, #-4]
   3f078:	ldr	r1, [r1, #20]
   3f07c:	sxtb	r0, r0
   3f080:	bl	3aef0 <flatcc_json_printer_int8@@Base+0x40>
   3f084:	ldr	r1, [fp, #-4]
   3f088:	ldr	r2, [r1, #20]
   3f08c:	add	r0, r2, r0
   3f090:	str	r0, [r1, #20]
   3f094:	ldr	r0, [sp, #12]
   3f098:	add	r0, r0, #1
   3f09c:	str	r0, [sp, #12]
   3f0a0:	b	3effc <flatcc_json_printer_int8_vector_field@@Base+0x168>
   3f0a4:	b	3f0a8 <flatcc_json_printer_int8_vector_field@@Base+0x214>
   3f0a8:	ldr	r0, [fp, #-4]
   3f0ac:	ldrsb	r0, [r0, #25]
   3f0b0:	cmp	r0, #0
   3f0b4:	beq	3f0ec <flatcc_json_printer_int8_vector_field@@Base+0x258>
   3f0b8:	ldr	r0, [fp, #-4]
   3f0bc:	ldr	r1, [r0, #20]
   3f0c0:	add	r2, r1, #1
   3f0c4:	str	r2, [r0, #20]
   3f0c8:	movw	r0, #10
   3f0cc:	strb	r0, [r1]
   3f0d0:	ldr	r0, [fp, #-4]
   3f0d4:	ldr	r1, [r0, #32]
   3f0d8:	mvn	r2, #0
   3f0dc:	add	r1, r1, r2
   3f0e0:	str	r1, [r0, #32]
   3f0e4:	ldr	r0, [fp, #-4]
   3f0e8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f0ec:	ldr	r0, [fp, #-4]
   3f0f0:	ldr	r1, [r0, #20]
   3f0f4:	add	r2, r1, #1
   3f0f8:	str	r2, [r0, #20]
   3f0fc:	movw	r0, #93	; 0x5d
   3f100:	strb	r0, [r1]
   3f104:	b	3f108 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   3f108:	mov	sp, fp
   3f10c:	pop	{fp, pc}

0003f110 <flatcc_json_printer_int16_vector_field@@Base>:
   3f110:	push	{fp, lr}
   3f114:	mov	fp, sp
   3f118:	sub	sp, sp, #32
   3f11c:	ldr	ip, [fp, #8]
   3f120:	str	r0, [fp, #-4]
   3f124:	str	r1, [fp, #-8]
   3f128:	str	r2, [fp, #-12]
   3f12c:	str	r3, [sp, #16]
   3f130:	ldr	r0, [fp, #-8]
   3f134:	ldr	r1, [fp, #-12]
   3f138:	str	ip, [sp, #4]
   3f13c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f140:	str	r0, [sp, #12]
   3f144:	ldr	r0, [sp, #12]
   3f148:	movw	r1, #0
   3f14c:	cmp	r0, r1
   3f150:	beq	3f384 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   3f154:	ldr	r0, [fp, #-8]
   3f158:	ldr	r1, [r0, #16]
   3f15c:	add	r2, r1, #1
   3f160:	str	r2, [r0, #16]
   3f164:	cmp	r1, #0
   3f168:	beq	3f184 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   3f16c:	ldr	r0, [fp, #-4]
   3f170:	ldr	r1, [r0, #20]
   3f174:	add	r2, r1, #1
   3f178:	str	r2, [r0, #20]
   3f17c:	movw	r0, #44	; 0x2c
   3f180:	strb	r0, [r1]
   3f184:	ldr	r0, [sp, #12]
   3f188:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3f18c:	str	r0, [sp, #12]
   3f190:	ldr	r0, [sp, #12]
   3f194:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f198:	str	r0, [sp, #8]
   3f19c:	ldr	r0, [sp, #12]
   3f1a0:	add	r0, r0, #4
   3f1a4:	str	r0, [sp, #12]
   3f1a8:	ldr	r0, [fp, #-4]
   3f1ac:	ldr	r1, [sp, #16]
   3f1b0:	ldr	r2, [fp, #8]
   3f1b4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3f1b8:	ldr	r0, [fp, #-4]
   3f1bc:	ldr	r1, [r0, #32]
   3f1c0:	add	r1, r1, #1
   3f1c4:	str	r1, [r0, #32]
   3f1c8:	ldr	r0, [fp, #-4]
   3f1cc:	ldr	r1, [r0, #20]
   3f1d0:	add	r2, r1, #1
   3f1d4:	str	r2, [r0, #20]
   3f1d8:	movw	r0, #91	; 0x5b
   3f1dc:	strb	r0, [r1]
   3f1e0:	ldr	r0, [sp, #8]
   3f1e4:	cmp	r0, #0
   3f1e8:	beq	3f274 <flatcc_json_printer_int16_vector_field@@Base+0x164>
   3f1ec:	b	3f1f0 <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   3f1f0:	ldr	r0, [fp, #-4]
   3f1f4:	ldrsb	r0, [r0, #25]
   3f1f8:	cmp	r0, #0
   3f1fc:	beq	3f224 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   3f200:	ldr	r0, [fp, #-4]
   3f204:	ldr	r1, [r0, #20]
   3f208:	add	r2, r1, #1
   3f20c:	str	r2, [r0, #20]
   3f210:	movw	r0, #10
   3f214:	strb	r0, [r1]
   3f218:	ldr	r0, [fp, #-4]
   3f21c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f220:	b	3f22c <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   3f224:	ldr	r0, [fp, #-4]
   3f228:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f22c:	b	3f230 <flatcc_json_printer_int16_vector_field@@Base+0x120>
   3f230:	ldr	r0, [sp, #12]
   3f234:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3f238:	ldr	r1, [fp, #-4]
   3f23c:	ldr	r1, [r1, #20]
   3f240:	sxth	r0, r0
   3f244:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3f248:	ldr	r1, [fp, #-4]
   3f24c:	ldr	r2, [r1, #20]
   3f250:	add	r0, r2, r0
   3f254:	str	r0, [r1, #20]
   3f258:	ldr	r0, [sp, #12]
   3f25c:	add	r0, r0, #2
   3f260:	str	r0, [sp, #12]
   3f264:	ldr	r0, [sp, #8]
   3f268:	mvn	r1, #0
   3f26c:	add	r0, r0, r1
   3f270:	str	r0, [sp, #8]
   3f274:	b	3f278 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   3f278:	ldr	r0, [sp, #8]
   3f27c:	mvn	r1, #0
   3f280:	add	r1, r0, r1
   3f284:	str	r1, [sp, #8]
   3f288:	cmp	r0, #0
   3f28c:	beq	3f320 <flatcc_json_printer_int16_vector_field@@Base+0x210>
   3f290:	ldr	r0, [fp, #-4]
   3f294:	ldr	r1, [r0, #20]
   3f298:	add	r2, r1, #1
   3f29c:	str	r2, [r0, #20]
   3f2a0:	movw	r0, #44	; 0x2c
   3f2a4:	strb	r0, [r1]
   3f2a8:	ldr	r0, [fp, #-4]
   3f2ac:	ldrsb	r0, [r0, #25]
   3f2b0:	cmp	r0, #0
   3f2b4:	beq	3f2dc <flatcc_json_printer_int16_vector_field@@Base+0x1cc>
   3f2b8:	ldr	r0, [fp, #-4]
   3f2bc:	ldr	r1, [r0, #20]
   3f2c0:	add	r2, r1, #1
   3f2c4:	str	r2, [r0, #20]
   3f2c8:	movw	r0, #10
   3f2cc:	strb	r0, [r1]
   3f2d0:	ldr	r0, [fp, #-4]
   3f2d4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f2d8:	b	3f2e4 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   3f2dc:	ldr	r0, [fp, #-4]
   3f2e0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f2e4:	b	3f2e8 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   3f2e8:	ldr	r0, [sp, #12]
   3f2ec:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   3f2f0:	ldr	r1, [fp, #-4]
   3f2f4:	ldr	r1, [r1, #20]
   3f2f8:	sxth	r0, r0
   3f2fc:	bl	3afa8 <flatcc_json_printer_int16@@Base+0x40>
   3f300:	ldr	r1, [fp, #-4]
   3f304:	ldr	r2, [r1, #20]
   3f308:	add	r0, r2, r0
   3f30c:	str	r0, [r1, #20]
   3f310:	ldr	r0, [sp, #12]
   3f314:	add	r0, r0, #2
   3f318:	str	r0, [sp, #12]
   3f31c:	b	3f278 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   3f320:	b	3f324 <flatcc_json_printer_int16_vector_field@@Base+0x214>
   3f324:	ldr	r0, [fp, #-4]
   3f328:	ldrsb	r0, [r0, #25]
   3f32c:	cmp	r0, #0
   3f330:	beq	3f368 <flatcc_json_printer_int16_vector_field@@Base+0x258>
   3f334:	ldr	r0, [fp, #-4]
   3f338:	ldr	r1, [r0, #20]
   3f33c:	add	r2, r1, #1
   3f340:	str	r2, [r0, #20]
   3f344:	movw	r0, #10
   3f348:	strb	r0, [r1]
   3f34c:	ldr	r0, [fp, #-4]
   3f350:	ldr	r1, [r0, #32]
   3f354:	mvn	r2, #0
   3f358:	add	r1, r1, r2
   3f35c:	str	r1, [r0, #32]
   3f360:	ldr	r0, [fp, #-4]
   3f364:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f368:	ldr	r0, [fp, #-4]
   3f36c:	ldr	r1, [r0, #20]
   3f370:	add	r2, r1, #1
   3f374:	str	r2, [r0, #20]
   3f378:	movw	r0, #93	; 0x5d
   3f37c:	strb	r0, [r1]
   3f380:	b	3f384 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   3f384:	mov	sp, fp
   3f388:	pop	{fp, pc}

0003f38c <flatcc_json_printer_int32_vector_field@@Base>:
   3f38c:	push	{fp, lr}
   3f390:	mov	fp, sp
   3f394:	sub	sp, sp, #32
   3f398:	ldr	ip, [fp, #8]
   3f39c:	str	r0, [fp, #-4]
   3f3a0:	str	r1, [fp, #-8]
   3f3a4:	str	r2, [fp, #-12]
   3f3a8:	str	r3, [sp, #16]
   3f3ac:	ldr	r0, [fp, #-8]
   3f3b0:	ldr	r1, [fp, #-12]
   3f3b4:	str	ip, [sp, #4]
   3f3b8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f3bc:	str	r0, [sp, #12]
   3f3c0:	ldr	r0, [sp, #12]
   3f3c4:	movw	r1, #0
   3f3c8:	cmp	r0, r1
   3f3cc:	beq	3f5f8 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   3f3d0:	ldr	r0, [fp, #-8]
   3f3d4:	ldr	r1, [r0, #16]
   3f3d8:	add	r2, r1, #1
   3f3dc:	str	r2, [r0, #16]
   3f3e0:	cmp	r1, #0
   3f3e4:	beq	3f400 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   3f3e8:	ldr	r0, [fp, #-4]
   3f3ec:	ldr	r1, [r0, #20]
   3f3f0:	add	r2, r1, #1
   3f3f4:	str	r2, [r0, #20]
   3f3f8:	movw	r0, #44	; 0x2c
   3f3fc:	strb	r0, [r1]
   3f400:	ldr	r0, [sp, #12]
   3f404:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3f408:	str	r0, [sp, #12]
   3f40c:	ldr	r0, [sp, #12]
   3f410:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f414:	str	r0, [sp, #8]
   3f418:	ldr	r0, [sp, #12]
   3f41c:	add	r0, r0, #4
   3f420:	str	r0, [sp, #12]
   3f424:	ldr	r0, [fp, #-4]
   3f428:	ldr	r1, [sp, #16]
   3f42c:	ldr	r2, [fp, #8]
   3f430:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3f434:	ldr	r0, [fp, #-4]
   3f438:	ldr	r1, [r0, #32]
   3f43c:	add	r1, r1, #1
   3f440:	str	r1, [r0, #32]
   3f444:	ldr	r0, [fp, #-4]
   3f448:	ldr	r1, [r0, #20]
   3f44c:	add	r2, r1, #1
   3f450:	str	r2, [r0, #20]
   3f454:	movw	r0, #91	; 0x5b
   3f458:	strb	r0, [r1]
   3f45c:	ldr	r0, [sp, #8]
   3f460:	cmp	r0, #0
   3f464:	beq	3f4ec <flatcc_json_printer_int32_vector_field@@Base+0x160>
   3f468:	b	3f46c <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   3f46c:	ldr	r0, [fp, #-4]
   3f470:	ldrsb	r0, [r0, #25]
   3f474:	cmp	r0, #0
   3f478:	beq	3f4a0 <flatcc_json_printer_int32_vector_field@@Base+0x114>
   3f47c:	ldr	r0, [fp, #-4]
   3f480:	ldr	r1, [r0, #20]
   3f484:	add	r2, r1, #1
   3f488:	str	r2, [r0, #20]
   3f48c:	movw	r0, #10
   3f490:	strb	r0, [r1]
   3f494:	ldr	r0, [fp, #-4]
   3f498:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f49c:	b	3f4a8 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   3f4a0:	ldr	r0, [fp, #-4]
   3f4a4:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f4a8:	b	3f4ac <flatcc_json_printer_int32_vector_field@@Base+0x120>
   3f4ac:	ldr	r0, [sp, #12]
   3f4b0:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3f4b4:	ldr	r1, [fp, #-4]
   3f4b8:	ldr	r1, [r1, #20]
   3f4bc:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3f4c0:	ldr	r1, [fp, #-4]
   3f4c4:	ldr	r2, [r1, #20]
   3f4c8:	add	r0, r2, r0
   3f4cc:	str	r0, [r1, #20]
   3f4d0:	ldr	r0, [sp, #12]
   3f4d4:	add	r0, r0, #4
   3f4d8:	str	r0, [sp, #12]
   3f4dc:	ldr	r0, [sp, #8]
   3f4e0:	mvn	r1, #0
   3f4e4:	add	r0, r0, r1
   3f4e8:	str	r0, [sp, #8]
   3f4ec:	b	3f4f0 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   3f4f0:	ldr	r0, [sp, #8]
   3f4f4:	mvn	r1, #0
   3f4f8:	add	r1, r0, r1
   3f4fc:	str	r1, [sp, #8]
   3f500:	cmp	r0, #0
   3f504:	beq	3f594 <flatcc_json_printer_int32_vector_field@@Base+0x208>
   3f508:	ldr	r0, [fp, #-4]
   3f50c:	ldr	r1, [r0, #20]
   3f510:	add	r2, r1, #1
   3f514:	str	r2, [r0, #20]
   3f518:	movw	r0, #44	; 0x2c
   3f51c:	strb	r0, [r1]
   3f520:	ldr	r0, [fp, #-4]
   3f524:	ldrsb	r0, [r0, #25]
   3f528:	cmp	r0, #0
   3f52c:	beq	3f554 <flatcc_json_printer_int32_vector_field@@Base+0x1c8>
   3f530:	ldr	r0, [fp, #-4]
   3f534:	ldr	r1, [r0, #20]
   3f538:	add	r2, r1, #1
   3f53c:	str	r2, [r0, #20]
   3f540:	movw	r0, #10
   3f544:	strb	r0, [r1]
   3f548:	ldr	r0, [fp, #-4]
   3f54c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f550:	b	3f55c <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   3f554:	ldr	r0, [fp, #-4]
   3f558:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f55c:	b	3f560 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   3f560:	ldr	r0, [sp, #12]
   3f564:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   3f568:	ldr	r1, [fp, #-4]
   3f56c:	ldr	r1, [r1, #20]
   3f570:	bl	3b05c <flatcc_json_printer_int32@@Base+0x3c>
   3f574:	ldr	r1, [fp, #-4]
   3f578:	ldr	r2, [r1, #20]
   3f57c:	add	r0, r2, r0
   3f580:	str	r0, [r1, #20]
   3f584:	ldr	r0, [sp, #12]
   3f588:	add	r0, r0, #4
   3f58c:	str	r0, [sp, #12]
   3f590:	b	3f4f0 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   3f594:	b	3f598 <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   3f598:	ldr	r0, [fp, #-4]
   3f59c:	ldrsb	r0, [r0, #25]
   3f5a0:	cmp	r0, #0
   3f5a4:	beq	3f5dc <flatcc_json_printer_int32_vector_field@@Base+0x250>
   3f5a8:	ldr	r0, [fp, #-4]
   3f5ac:	ldr	r1, [r0, #20]
   3f5b0:	add	r2, r1, #1
   3f5b4:	str	r2, [r0, #20]
   3f5b8:	movw	r0, #10
   3f5bc:	strb	r0, [r1]
   3f5c0:	ldr	r0, [fp, #-4]
   3f5c4:	ldr	r1, [r0, #32]
   3f5c8:	mvn	r2, #0
   3f5cc:	add	r1, r1, r2
   3f5d0:	str	r1, [r0, #32]
   3f5d4:	ldr	r0, [fp, #-4]
   3f5d8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f5dc:	ldr	r0, [fp, #-4]
   3f5e0:	ldr	r1, [r0, #20]
   3f5e4:	add	r2, r1, #1
   3f5e8:	str	r2, [r0, #20]
   3f5ec:	movw	r0, #93	; 0x5d
   3f5f0:	strb	r0, [r1]
   3f5f4:	b	3f5f8 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   3f5f8:	mov	sp, fp
   3f5fc:	pop	{fp, pc}

0003f600 <flatcc_json_printer_int64_vector_field@@Base>:
   3f600:	push	{fp, lr}
   3f604:	mov	fp, sp
   3f608:	sub	sp, sp, #32
   3f60c:	ldr	ip, [fp, #8]
   3f610:	str	r0, [fp, #-4]
   3f614:	str	r1, [fp, #-8]
   3f618:	str	r2, [fp, #-12]
   3f61c:	str	r3, [sp, #16]
   3f620:	ldr	r0, [fp, #-8]
   3f624:	ldr	r1, [fp, #-12]
   3f628:	str	ip, [sp, #4]
   3f62c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f630:	str	r0, [sp, #12]
   3f634:	ldr	r0, [sp, #12]
   3f638:	movw	r1, #0
   3f63c:	cmp	r0, r1
   3f640:	beq	3f86c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   3f644:	ldr	r0, [fp, #-8]
   3f648:	ldr	r1, [r0, #16]
   3f64c:	add	r2, r1, #1
   3f650:	str	r2, [r0, #16]
   3f654:	cmp	r1, #0
   3f658:	beq	3f674 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   3f65c:	ldr	r0, [fp, #-4]
   3f660:	ldr	r1, [r0, #20]
   3f664:	add	r2, r1, #1
   3f668:	str	r2, [r0, #20]
   3f66c:	movw	r0, #44	; 0x2c
   3f670:	strb	r0, [r1]
   3f674:	ldr	r0, [sp, #12]
   3f678:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3f67c:	str	r0, [sp, #12]
   3f680:	ldr	r0, [sp, #12]
   3f684:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f688:	str	r0, [sp, #8]
   3f68c:	ldr	r0, [sp, #12]
   3f690:	add	r0, r0, #4
   3f694:	str	r0, [sp, #12]
   3f698:	ldr	r0, [fp, #-4]
   3f69c:	ldr	r1, [sp, #16]
   3f6a0:	ldr	r2, [fp, #8]
   3f6a4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3f6a8:	ldr	r0, [fp, #-4]
   3f6ac:	ldr	r1, [r0, #32]
   3f6b0:	add	r1, r1, #1
   3f6b4:	str	r1, [r0, #32]
   3f6b8:	ldr	r0, [fp, #-4]
   3f6bc:	ldr	r1, [r0, #20]
   3f6c0:	add	r2, r1, #1
   3f6c4:	str	r2, [r0, #20]
   3f6c8:	movw	r0, #91	; 0x5b
   3f6cc:	strb	r0, [r1]
   3f6d0:	ldr	r0, [sp, #8]
   3f6d4:	cmp	r0, #0
   3f6d8:	beq	3f760 <flatcc_json_printer_int64_vector_field@@Base+0x160>
   3f6dc:	b	3f6e0 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
   3f6e0:	ldr	r0, [fp, #-4]
   3f6e4:	ldrsb	r0, [r0, #25]
   3f6e8:	cmp	r0, #0
   3f6ec:	beq	3f714 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   3f6f0:	ldr	r0, [fp, #-4]
   3f6f4:	ldr	r1, [r0, #20]
   3f6f8:	add	r2, r1, #1
   3f6fc:	str	r2, [r0, #20]
   3f700:	movw	r0, #10
   3f704:	strb	r0, [r1]
   3f708:	ldr	r0, [fp, #-4]
   3f70c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f710:	b	3f71c <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   3f714:	ldr	r0, [fp, #-4]
   3f718:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f71c:	b	3f720 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   3f720:	ldr	r0, [sp, #12]
   3f724:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3f728:	ldr	r2, [fp, #-4]
   3f72c:	ldr	r2, [r2, #20]
   3f730:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3f734:	ldr	r1, [fp, #-4]
   3f738:	ldr	r2, [r1, #20]
   3f73c:	add	r0, r2, r0
   3f740:	str	r0, [r1, #20]
   3f744:	ldr	r0, [sp, #12]
   3f748:	add	r0, r0, #8
   3f74c:	str	r0, [sp, #12]
   3f750:	ldr	r0, [sp, #8]
   3f754:	mvn	r1, #0
   3f758:	add	r0, r0, r1
   3f75c:	str	r0, [sp, #8]
   3f760:	b	3f764 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   3f764:	ldr	r0, [sp, #8]
   3f768:	mvn	r1, #0
   3f76c:	add	r1, r0, r1
   3f770:	str	r1, [sp, #8]
   3f774:	cmp	r0, #0
   3f778:	beq	3f808 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   3f77c:	ldr	r0, [fp, #-4]
   3f780:	ldr	r1, [r0, #20]
   3f784:	add	r2, r1, #1
   3f788:	str	r2, [r0, #20]
   3f78c:	movw	r0, #44	; 0x2c
   3f790:	strb	r0, [r1]
   3f794:	ldr	r0, [fp, #-4]
   3f798:	ldrsb	r0, [r0, #25]
   3f79c:	cmp	r0, #0
   3f7a0:	beq	3f7c8 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   3f7a4:	ldr	r0, [fp, #-4]
   3f7a8:	ldr	r1, [r0, #20]
   3f7ac:	add	r2, r1, #1
   3f7b0:	str	r2, [r0, #20]
   3f7b4:	movw	r0, #10
   3f7b8:	strb	r0, [r1]
   3f7bc:	ldr	r0, [fp, #-4]
   3f7c0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f7c4:	b	3f7d0 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   3f7c8:	ldr	r0, [fp, #-4]
   3f7cc:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f7d0:	b	3f7d4 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   3f7d4:	ldr	r0, [sp, #12]
   3f7d8:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   3f7dc:	ldr	r2, [fp, #-4]
   3f7e0:	ldr	r2, [r2, #20]
   3f7e4:	bl	3b114 <flatcc_json_printer_int64@@Base+0x44>
   3f7e8:	ldr	r1, [fp, #-4]
   3f7ec:	ldr	r2, [r1, #20]
   3f7f0:	add	r0, r2, r0
   3f7f4:	str	r0, [r1, #20]
   3f7f8:	ldr	r0, [sp, #12]
   3f7fc:	add	r0, r0, #8
   3f800:	str	r0, [sp, #12]
   3f804:	b	3f764 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   3f808:	b	3f80c <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   3f80c:	ldr	r0, [fp, #-4]
   3f810:	ldrsb	r0, [r0, #25]
   3f814:	cmp	r0, #0
   3f818:	beq	3f850 <flatcc_json_printer_int64_vector_field@@Base+0x250>
   3f81c:	ldr	r0, [fp, #-4]
   3f820:	ldr	r1, [r0, #20]
   3f824:	add	r2, r1, #1
   3f828:	str	r2, [r0, #20]
   3f82c:	movw	r0, #10
   3f830:	strb	r0, [r1]
   3f834:	ldr	r0, [fp, #-4]
   3f838:	ldr	r1, [r0, #32]
   3f83c:	mvn	r2, #0
   3f840:	add	r1, r1, r2
   3f844:	str	r1, [r0, #32]
   3f848:	ldr	r0, [fp, #-4]
   3f84c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f850:	ldr	r0, [fp, #-4]
   3f854:	ldr	r1, [r0, #20]
   3f858:	add	r2, r1, #1
   3f85c:	str	r2, [r0, #20]
   3f860:	movw	r0, #93	; 0x5d
   3f864:	strb	r0, [r1]
   3f868:	b	3f86c <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   3f86c:	mov	sp, fp
   3f870:	pop	{fp, pc}

0003f874 <flatcc_json_printer_bool_vector_field@@Base>:
   3f874:	push	{fp, lr}
   3f878:	mov	fp, sp
   3f87c:	sub	sp, sp, #32
   3f880:	ldr	ip, [fp, #8]
   3f884:	str	r0, [fp, #-4]
   3f888:	str	r1, [fp, #-8]
   3f88c:	str	r2, [fp, #-12]
   3f890:	str	r3, [sp, #16]
   3f894:	ldr	r0, [fp, #-8]
   3f898:	ldr	r1, [fp, #-12]
   3f89c:	str	ip, [sp, #4]
   3f8a0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3f8a4:	str	r0, [sp, #12]
   3f8a8:	ldr	r0, [sp, #12]
   3f8ac:	movw	r1, #0
   3f8b0:	cmp	r0, r1
   3f8b4:	beq	3fae8 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   3f8b8:	ldr	r0, [fp, #-8]
   3f8bc:	ldr	r1, [r0, #16]
   3f8c0:	add	r2, r1, #1
   3f8c4:	str	r2, [r0, #16]
   3f8c8:	cmp	r1, #0
   3f8cc:	beq	3f8e8 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   3f8d0:	ldr	r0, [fp, #-4]
   3f8d4:	ldr	r1, [r0, #20]
   3f8d8:	add	r2, r1, #1
   3f8dc:	str	r2, [r0, #20]
   3f8e0:	movw	r0, #44	; 0x2c
   3f8e4:	strb	r0, [r1]
   3f8e8:	ldr	r0, [sp, #12]
   3f8ec:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3f8f0:	str	r0, [sp, #12]
   3f8f4:	ldr	r0, [sp, #12]
   3f8f8:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3f8fc:	str	r0, [sp, #8]
   3f900:	ldr	r0, [sp, #12]
   3f904:	add	r0, r0, #4
   3f908:	str	r0, [sp, #12]
   3f90c:	ldr	r0, [fp, #-4]
   3f910:	ldr	r1, [sp, #16]
   3f914:	ldr	r2, [fp, #8]
   3f918:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3f91c:	ldr	r0, [fp, #-4]
   3f920:	ldr	r1, [r0, #32]
   3f924:	add	r1, r1, #1
   3f928:	str	r1, [r0, #32]
   3f92c:	ldr	r0, [fp, #-4]
   3f930:	ldr	r1, [r0, #20]
   3f934:	add	r2, r1, #1
   3f938:	str	r2, [r0, #20]
   3f93c:	movw	r0, #91	; 0x5b
   3f940:	strb	r0, [r1]
   3f944:	ldr	r0, [sp, #8]
   3f948:	cmp	r0, #0
   3f94c:	beq	3f9d8 <flatcc_json_printer_bool_vector_field@@Base+0x164>
   3f950:	b	3f954 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   3f954:	ldr	r0, [fp, #-4]
   3f958:	ldrsb	r0, [r0, #25]
   3f95c:	cmp	r0, #0
   3f960:	beq	3f988 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   3f964:	ldr	r0, [fp, #-4]
   3f968:	ldr	r1, [r0, #20]
   3f96c:	add	r2, r1, #1
   3f970:	str	r2, [r0, #20]
   3f974:	movw	r0, #10
   3f978:	strb	r0, [r1]
   3f97c:	ldr	r0, [fp, #-4]
   3f980:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3f984:	b	3f990 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   3f988:	ldr	r0, [fp, #-4]
   3f98c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3f990:	b	3f994 <flatcc_json_printer_bool_vector_field@@Base+0x120>
   3f994:	ldr	r0, [sp, #12]
   3f998:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3f99c:	and	r0, r0, #255	; 0xff
   3f9a0:	ldr	r1, [fp, #-4]
   3f9a4:	ldr	r1, [r1, #20]
   3f9a8:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3f9ac:	ldr	r1, [fp, #-4]
   3f9b0:	ldr	r2, [r1, #20]
   3f9b4:	add	r0, r2, r0
   3f9b8:	str	r0, [r1, #20]
   3f9bc:	ldr	r0, [sp, #12]
   3f9c0:	add	r0, r0, #1
   3f9c4:	str	r0, [sp, #12]
   3f9c8:	ldr	r0, [sp, #8]
   3f9cc:	mvn	r1, #0
   3f9d0:	add	r0, r0, r1
   3f9d4:	str	r0, [sp, #8]
   3f9d8:	b	3f9dc <flatcc_json_printer_bool_vector_field@@Base+0x168>
   3f9dc:	ldr	r0, [sp, #8]
   3f9e0:	mvn	r1, #0
   3f9e4:	add	r1, r0, r1
   3f9e8:	str	r1, [sp, #8]
   3f9ec:	cmp	r0, #0
   3f9f0:	beq	3fa84 <flatcc_json_printer_bool_vector_field@@Base+0x210>
   3f9f4:	ldr	r0, [fp, #-4]
   3f9f8:	ldr	r1, [r0, #20]
   3f9fc:	add	r2, r1, #1
   3fa00:	str	r2, [r0, #20]
   3fa04:	movw	r0, #44	; 0x2c
   3fa08:	strb	r0, [r1]
   3fa0c:	ldr	r0, [fp, #-4]
   3fa10:	ldrsb	r0, [r0, #25]
   3fa14:	cmp	r0, #0
   3fa18:	beq	3fa40 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   3fa1c:	ldr	r0, [fp, #-4]
   3fa20:	ldr	r1, [r0, #20]
   3fa24:	add	r2, r1, #1
   3fa28:	str	r2, [r0, #20]
   3fa2c:	movw	r0, #10
   3fa30:	strb	r0, [r1]
   3fa34:	ldr	r0, [fp, #-4]
   3fa38:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3fa3c:	b	3fa48 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   3fa40:	ldr	r0, [fp, #-4]
   3fa44:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3fa48:	b	3fa4c <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   3fa4c:	ldr	r0, [sp, #12]
   3fa50:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   3fa54:	and	r0, r0, #255	; 0xff
   3fa58:	ldr	r1, [fp, #-4]
   3fa5c:	ldr	r1, [r1, #20]
   3fa60:	bl	3c4d0 <flatcc_json_printer_bool_field@@Base+0x12c>
   3fa64:	ldr	r1, [fp, #-4]
   3fa68:	ldr	r2, [r1, #20]
   3fa6c:	add	r0, r2, r0
   3fa70:	str	r0, [r1, #20]
   3fa74:	ldr	r0, [sp, #12]
   3fa78:	add	r0, r0, #1
   3fa7c:	str	r0, [sp, #12]
   3fa80:	b	3f9dc <flatcc_json_printer_bool_vector_field@@Base+0x168>
   3fa84:	b	3fa88 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   3fa88:	ldr	r0, [fp, #-4]
   3fa8c:	ldrsb	r0, [r0, #25]
   3fa90:	cmp	r0, #0
   3fa94:	beq	3facc <flatcc_json_printer_bool_vector_field@@Base+0x258>
   3fa98:	ldr	r0, [fp, #-4]
   3fa9c:	ldr	r1, [r0, #20]
   3faa0:	add	r2, r1, #1
   3faa4:	str	r2, [r0, #20]
   3faa8:	movw	r0, #10
   3faac:	strb	r0, [r1]
   3fab0:	ldr	r0, [fp, #-4]
   3fab4:	ldr	r1, [r0, #32]
   3fab8:	mvn	r2, #0
   3fabc:	add	r1, r1, r2
   3fac0:	str	r1, [r0, #32]
   3fac4:	ldr	r0, [fp, #-4]
   3fac8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3facc:	ldr	r0, [fp, #-4]
   3fad0:	ldr	r1, [r0, #20]
   3fad4:	add	r2, r1, #1
   3fad8:	str	r2, [r0, #20]
   3fadc:	movw	r0, #93	; 0x5d
   3fae0:	strb	r0, [r1]
   3fae4:	b	3fae8 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   3fae8:	mov	sp, fp
   3faec:	pop	{fp, pc}

0003faf0 <flatcc_json_printer_float_vector_field@@Base>:
   3faf0:	push	{fp, lr}
   3faf4:	mov	fp, sp
   3faf8:	sub	sp, sp, #32
   3fafc:	ldr	ip, [fp, #8]
   3fb00:	str	r0, [fp, #-4]
   3fb04:	str	r1, [fp, #-8]
   3fb08:	str	r2, [fp, #-12]
   3fb0c:	str	r3, [sp, #16]
   3fb10:	ldr	r0, [fp, #-8]
   3fb14:	ldr	r1, [fp, #-12]
   3fb18:	str	ip, [sp, #4]
   3fb1c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3fb20:	str	r0, [sp, #12]
   3fb24:	ldr	r0, [sp, #12]
   3fb28:	movw	r1, #0
   3fb2c:	cmp	r0, r1
   3fb30:	beq	3fd64 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3fb34:	ldr	r0, [fp, #-8]
   3fb38:	ldr	r1, [r0, #16]
   3fb3c:	add	r2, r1, #1
   3fb40:	str	r2, [r0, #16]
   3fb44:	cmp	r1, #0
   3fb48:	beq	3fb64 <flatcc_json_printer_float_vector_field@@Base+0x74>
   3fb4c:	ldr	r0, [fp, #-4]
   3fb50:	ldr	r1, [r0, #20]
   3fb54:	add	r2, r1, #1
   3fb58:	str	r2, [r0, #20]
   3fb5c:	movw	r0, #44	; 0x2c
   3fb60:	strb	r0, [r1]
   3fb64:	ldr	r0, [sp, #12]
   3fb68:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3fb6c:	str	r0, [sp, #12]
   3fb70:	ldr	r0, [sp, #12]
   3fb74:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fb78:	str	r0, [sp, #8]
   3fb7c:	ldr	r0, [sp, #12]
   3fb80:	add	r0, r0, #4
   3fb84:	str	r0, [sp, #12]
   3fb88:	ldr	r0, [fp, #-4]
   3fb8c:	ldr	r1, [sp, #16]
   3fb90:	ldr	r2, [fp, #8]
   3fb94:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3fb98:	ldr	r0, [fp, #-4]
   3fb9c:	ldr	r1, [r0, #32]
   3fba0:	add	r1, r1, #1
   3fba4:	str	r1, [r0, #32]
   3fba8:	ldr	r0, [fp, #-4]
   3fbac:	ldr	r1, [r0, #20]
   3fbb0:	add	r2, r1, #1
   3fbb4:	str	r2, [r0, #20]
   3fbb8:	movw	r0, #91	; 0x5b
   3fbbc:	strb	r0, [r1]
   3fbc0:	ldr	r0, [sp, #8]
   3fbc4:	cmp	r0, #0
   3fbc8:	beq	3fc54 <flatcc_json_printer_float_vector_field@@Base+0x164>
   3fbcc:	b	3fbd0 <flatcc_json_printer_float_vector_field@@Base+0xe0>
   3fbd0:	ldr	r0, [fp, #-4]
   3fbd4:	ldrsb	r0, [r0, #25]
   3fbd8:	cmp	r0, #0
   3fbdc:	beq	3fc04 <flatcc_json_printer_float_vector_field@@Base+0x114>
   3fbe0:	ldr	r0, [fp, #-4]
   3fbe4:	ldr	r1, [r0, #20]
   3fbe8:	add	r2, r1, #1
   3fbec:	str	r2, [r0, #20]
   3fbf0:	movw	r0, #10
   3fbf4:	strb	r0, [r1]
   3fbf8:	ldr	r0, [fp, #-4]
   3fbfc:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3fc00:	b	3fc0c <flatcc_json_printer_float_vector_field@@Base+0x11c>
   3fc04:	ldr	r0, [fp, #-4]
   3fc08:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3fc0c:	b	3fc10 <flatcc_json_printer_float_vector_field@@Base+0x120>
   3fc10:	ldr	r0, [sp, #12]
   3fc14:	bl	3c688 <flatcc_json_printer_float_field@@Base+0x108>
   3fc18:	vcvt.f64.f32	d0, s0
   3fc1c:	ldr	r0, [fp, #-4]
   3fc20:	ldr	r0, [r0, #20]
   3fc24:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3fc28:	ldr	r1, [fp, #-4]
   3fc2c:	ldr	r2, [r1, #20]
   3fc30:	add	r0, r2, r0
   3fc34:	str	r0, [r1, #20]
   3fc38:	ldr	r0, [sp, #12]
   3fc3c:	add	r0, r0, #4
   3fc40:	str	r0, [sp, #12]
   3fc44:	ldr	r0, [sp, #8]
   3fc48:	mvn	r1, #0
   3fc4c:	add	r0, r0, r1
   3fc50:	str	r0, [sp, #8]
   3fc54:	b	3fc58 <flatcc_json_printer_float_vector_field@@Base+0x168>
   3fc58:	ldr	r0, [sp, #8]
   3fc5c:	mvn	r1, #0
   3fc60:	add	r1, r0, r1
   3fc64:	str	r1, [sp, #8]
   3fc68:	cmp	r0, #0
   3fc6c:	beq	3fd00 <flatcc_json_printer_float_vector_field@@Base+0x210>
   3fc70:	ldr	r0, [fp, #-4]
   3fc74:	ldr	r1, [r0, #20]
   3fc78:	add	r2, r1, #1
   3fc7c:	str	r2, [r0, #20]
   3fc80:	movw	r0, #44	; 0x2c
   3fc84:	strb	r0, [r1]
   3fc88:	ldr	r0, [fp, #-4]
   3fc8c:	ldrsb	r0, [r0, #25]
   3fc90:	cmp	r0, #0
   3fc94:	beq	3fcbc <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   3fc98:	ldr	r0, [fp, #-4]
   3fc9c:	ldr	r1, [r0, #20]
   3fca0:	add	r2, r1, #1
   3fca4:	str	r2, [r0, #20]
   3fca8:	movw	r0, #10
   3fcac:	strb	r0, [r1]
   3fcb0:	ldr	r0, [fp, #-4]
   3fcb4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3fcb8:	b	3fcc4 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   3fcbc:	ldr	r0, [fp, #-4]
   3fcc0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3fcc4:	b	3fcc8 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   3fcc8:	ldr	r0, [sp, #12]
   3fccc:	bl	3c688 <flatcc_json_printer_float_field@@Base+0x108>
   3fcd0:	vcvt.f64.f32	d0, s0
   3fcd4:	ldr	r0, [fp, #-4]
   3fcd8:	ldr	r0, [r0, #20]
   3fcdc:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3fce0:	ldr	r1, [fp, #-4]
   3fce4:	ldr	r2, [r1, #20]
   3fce8:	add	r0, r2, r0
   3fcec:	str	r0, [r1, #20]
   3fcf0:	ldr	r0, [sp, #12]
   3fcf4:	add	r0, r0, #4
   3fcf8:	str	r0, [sp, #12]
   3fcfc:	b	3fc58 <flatcc_json_printer_float_vector_field@@Base+0x168>
   3fd00:	b	3fd04 <flatcc_json_printer_float_vector_field@@Base+0x214>
   3fd04:	ldr	r0, [fp, #-4]
   3fd08:	ldrsb	r0, [r0, #25]
   3fd0c:	cmp	r0, #0
   3fd10:	beq	3fd48 <flatcc_json_printer_float_vector_field@@Base+0x258>
   3fd14:	ldr	r0, [fp, #-4]
   3fd18:	ldr	r1, [r0, #20]
   3fd1c:	add	r2, r1, #1
   3fd20:	str	r2, [r0, #20]
   3fd24:	movw	r0, #10
   3fd28:	strb	r0, [r1]
   3fd2c:	ldr	r0, [fp, #-4]
   3fd30:	ldr	r1, [r0, #32]
   3fd34:	mvn	r2, #0
   3fd38:	add	r1, r1, r2
   3fd3c:	str	r1, [r0, #32]
   3fd40:	ldr	r0, [fp, #-4]
   3fd44:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3fd48:	ldr	r0, [fp, #-4]
   3fd4c:	ldr	r1, [r0, #20]
   3fd50:	add	r2, r1, #1
   3fd54:	str	r2, [r0, #20]
   3fd58:	movw	r0, #93	; 0x5d
   3fd5c:	strb	r0, [r1]
   3fd60:	b	3fd64 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3fd64:	mov	sp, fp
   3fd68:	pop	{fp, pc}

0003fd6c <flatcc_json_printer_double_vector_field@@Base>:
   3fd6c:	push	{fp, lr}
   3fd70:	mov	fp, sp
   3fd74:	sub	sp, sp, #32
   3fd78:	ldr	ip, [fp, #8]
   3fd7c:	str	r0, [fp, #-4]
   3fd80:	str	r1, [fp, #-8]
   3fd84:	str	r2, [fp, #-12]
   3fd88:	str	r3, [sp, #16]
   3fd8c:	ldr	r0, [fp, #-8]
   3fd90:	ldr	r1, [fp, #-12]
   3fd94:	str	ip, [sp, #4]
   3fd98:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   3fd9c:	str	r0, [sp, #12]
   3fda0:	ldr	r0, [sp, #12]
   3fda4:	movw	r1, #0
   3fda8:	cmp	r0, r1
   3fdac:	beq	3ffd8 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   3fdb0:	ldr	r0, [fp, #-8]
   3fdb4:	ldr	r1, [r0, #16]
   3fdb8:	add	r2, r1, #1
   3fdbc:	str	r2, [r0, #16]
   3fdc0:	cmp	r1, #0
   3fdc4:	beq	3fde0 <flatcc_json_printer_double_vector_field@@Base+0x74>
   3fdc8:	ldr	r0, [fp, #-4]
   3fdcc:	ldr	r1, [r0, #20]
   3fdd0:	add	r2, r1, #1
   3fdd4:	str	r2, [r0, #20]
   3fdd8:	movw	r0, #44	; 0x2c
   3fddc:	strb	r0, [r1]
   3fde0:	ldr	r0, [sp, #12]
   3fde4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   3fde8:	str	r0, [sp, #12]
   3fdec:	ldr	r0, [sp, #12]
   3fdf0:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   3fdf4:	str	r0, [sp, #8]
   3fdf8:	ldr	r0, [sp, #12]
   3fdfc:	add	r0, r0, #4
   3fe00:	str	r0, [sp, #12]
   3fe04:	ldr	r0, [fp, #-4]
   3fe08:	ldr	r1, [sp, #16]
   3fe0c:	ldr	r2, [fp, #8]
   3fe10:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   3fe14:	ldr	r0, [fp, #-4]
   3fe18:	ldr	r1, [r0, #32]
   3fe1c:	add	r1, r1, #1
   3fe20:	str	r1, [r0, #32]
   3fe24:	ldr	r0, [fp, #-4]
   3fe28:	ldr	r1, [r0, #20]
   3fe2c:	add	r2, r1, #1
   3fe30:	str	r2, [r0, #20]
   3fe34:	movw	r0, #91	; 0x5b
   3fe38:	strb	r0, [r1]
   3fe3c:	ldr	r0, [sp, #8]
   3fe40:	cmp	r0, #0
   3fe44:	beq	3fecc <flatcc_json_printer_double_vector_field@@Base+0x160>
   3fe48:	b	3fe4c <flatcc_json_printer_double_vector_field@@Base+0xe0>
   3fe4c:	ldr	r0, [fp, #-4]
   3fe50:	ldrsb	r0, [r0, #25]
   3fe54:	cmp	r0, #0
   3fe58:	beq	3fe80 <flatcc_json_printer_double_vector_field@@Base+0x114>
   3fe5c:	ldr	r0, [fp, #-4]
   3fe60:	ldr	r1, [r0, #20]
   3fe64:	add	r2, r1, #1
   3fe68:	str	r2, [r0, #20]
   3fe6c:	movw	r0, #10
   3fe70:	strb	r0, [r1]
   3fe74:	ldr	r0, [fp, #-4]
   3fe78:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3fe7c:	b	3fe88 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   3fe80:	ldr	r0, [fp, #-4]
   3fe84:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3fe88:	b	3fe8c <flatcc_json_printer_double_vector_field@@Base+0x120>
   3fe8c:	ldr	r0, [sp, #12]
   3fe90:	bl	3c7b0 <flatcc_json_printer_double_field@@Base+0x104>
   3fe94:	ldr	r0, [fp, #-4]
   3fe98:	ldr	r0, [r0, #20]
   3fe9c:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3fea0:	ldr	r1, [fp, #-4]
   3fea4:	ldr	r2, [r1, #20]
   3fea8:	add	r0, r2, r0
   3feac:	str	r0, [r1, #20]
   3feb0:	ldr	r0, [sp, #12]
   3feb4:	add	r0, r0, #8
   3feb8:	str	r0, [sp, #12]
   3febc:	ldr	r0, [sp, #8]
   3fec0:	mvn	r1, #0
   3fec4:	add	r0, r0, r1
   3fec8:	str	r0, [sp, #8]
   3fecc:	b	3fed0 <flatcc_json_printer_double_vector_field@@Base+0x164>
   3fed0:	ldr	r0, [sp, #8]
   3fed4:	mvn	r1, #0
   3fed8:	add	r1, r0, r1
   3fedc:	str	r1, [sp, #8]
   3fee0:	cmp	r0, #0
   3fee4:	beq	3ff74 <flatcc_json_printer_double_vector_field@@Base+0x208>
   3fee8:	ldr	r0, [fp, #-4]
   3feec:	ldr	r1, [r0, #20]
   3fef0:	add	r2, r1, #1
   3fef4:	str	r2, [r0, #20]
   3fef8:	movw	r0, #44	; 0x2c
   3fefc:	strb	r0, [r1]
   3ff00:	ldr	r0, [fp, #-4]
   3ff04:	ldrsb	r0, [r0, #25]
   3ff08:	cmp	r0, #0
   3ff0c:	beq	3ff34 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   3ff10:	ldr	r0, [fp, #-4]
   3ff14:	ldr	r1, [r0, #20]
   3ff18:	add	r2, r1, #1
   3ff1c:	str	r2, [r0, #20]
   3ff20:	movw	r0, #10
   3ff24:	strb	r0, [r1]
   3ff28:	ldr	r0, [fp, #-4]
   3ff2c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ff30:	b	3ff3c <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   3ff34:	ldr	r0, [fp, #-4]
   3ff38:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   3ff3c:	b	3ff40 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   3ff40:	ldr	r0, [sp, #12]
   3ff44:	bl	3c7b0 <flatcc_json_printer_double_field@@Base+0x104>
   3ff48:	ldr	r0, [fp, #-4]
   3ff4c:	ldr	r0, [r0, #20]
   3ff50:	bl	38b80 <flatcc_json_printer_fmt_float@@Base+0x2c>
   3ff54:	ldr	r1, [fp, #-4]
   3ff58:	ldr	r2, [r1, #20]
   3ff5c:	add	r0, r2, r0
   3ff60:	str	r0, [r1, #20]
   3ff64:	ldr	r0, [sp, #12]
   3ff68:	add	r0, r0, #8
   3ff6c:	str	r0, [sp, #12]
   3ff70:	b	3fed0 <flatcc_json_printer_double_vector_field@@Base+0x164>
   3ff74:	b	3ff78 <flatcc_json_printer_double_vector_field@@Base+0x20c>
   3ff78:	ldr	r0, [fp, #-4]
   3ff7c:	ldrsb	r0, [r0, #25]
   3ff80:	cmp	r0, #0
   3ff84:	beq	3ffbc <flatcc_json_printer_double_vector_field@@Base+0x250>
   3ff88:	ldr	r0, [fp, #-4]
   3ff8c:	ldr	r1, [r0, #20]
   3ff90:	add	r2, r1, #1
   3ff94:	str	r2, [r0, #20]
   3ff98:	movw	r0, #10
   3ff9c:	strb	r0, [r1]
   3ffa0:	ldr	r0, [fp, #-4]
   3ffa4:	ldr	r1, [r0, #32]
   3ffa8:	mvn	r2, #0
   3ffac:	add	r1, r1, r2
   3ffb0:	str	r1, [r0, #32]
   3ffb4:	ldr	r0, [fp, #-4]
   3ffb8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   3ffbc:	ldr	r0, [fp, #-4]
   3ffc0:	ldr	r1, [r0, #20]
   3ffc4:	add	r2, r1, #1
   3ffc8:	str	r2, [r0, #20]
   3ffcc:	movw	r0, #93	; 0x5d
   3ffd0:	strb	r0, [r1]
   3ffd4:	b	3ffd8 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   3ffd8:	mov	sp, fp
   3ffdc:	pop	{fp, pc}

0003ffe0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3ffe0:	push	{fp, lr}
   3ffe4:	mov	fp, sp
   3ffe8:	sub	sp, sp, #56	; 0x38
   3ffec:	ldr	ip, [fp, #12]
   3fff0:	ldr	lr, [fp, #8]
   3fff4:	str	r0, [fp, #-4]
   3fff8:	str	r1, [fp, #-8]
   3fffc:	str	r2, [fp, #-12]
   40000:	str	r3, [fp, #-16]
   40004:	ldr	r0, [fp, #-4]
   40008:	ldrsb	r0, [r0, #27]
   4000c:	cmp	r0, #0
   40010:	beq	40034 <flatcc_json_printer_utype_enum_vector_field@@Base+0x54>
   40014:	ldr	r0, [fp, #-4]
   40018:	ldr	r1, [fp, #-8]
   4001c:	ldr	r2, [fp, #-12]
   40020:	ldr	r3, [fp, #-16]
   40024:	ldr	ip, [fp, #8]
   40028:	str	ip, [sp]
   4002c:	bl	3e1ec <flatcc_json_printer_utype_vector_field@@Base>
   40030:	b	402a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40034:	ldr	r0, [fp, #-8]
   40038:	ldr	r1, [fp, #-12]
   4003c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   40040:	str	r0, [fp, #-20]	; 0xffffffec
   40044:	ldr	r0, [fp, #-20]	; 0xffffffec
   40048:	movw	r1, #0
   4004c:	cmp	r0, r1
   40050:	beq	402a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   40054:	ldr	r0, [fp, #-8]
   40058:	ldr	r1, [r0, #16]
   4005c:	add	r2, r1, #1
   40060:	str	r2, [r0, #16]
   40064:	cmp	r1, #0
   40068:	beq	40084 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa4>
   4006c:	ldr	r0, [fp, #-4]
   40070:	ldr	r1, [r0, #20]
   40074:	add	r2, r1, #1
   40078:	str	r2, [r0, #20]
   4007c:	movw	r0, #44	; 0x2c
   40080:	strb	r0, [r1]
   40084:	ldr	r0, [fp, #-20]	; 0xffffffec
   40088:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   4008c:	str	r0, [fp, #-20]	; 0xffffffec
   40090:	ldr	r0, [fp, #-20]	; 0xffffffec
   40094:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40098:	str	r0, [fp, #-24]	; 0xffffffe8
   4009c:	ldr	r0, [fp, #-20]	; 0xffffffec
   400a0:	add	r0, r0, #4
   400a4:	str	r0, [fp, #-20]	; 0xffffffec
   400a8:	ldr	r0, [fp, #-4]
   400ac:	ldr	r1, [fp, #-16]
   400b0:	ldr	r2, [fp, #8]
   400b4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   400b8:	ldr	r0, [fp, #-4]
   400bc:	ldr	r1, [r0, #32]
   400c0:	add	r1, r1, #1
   400c4:	str	r1, [r0, #32]
   400c8:	ldr	r0, [fp, #-4]
   400cc:	ldr	r1, [r0, #20]
   400d0:	add	r2, r1, #1
   400d4:	str	r2, [r0, #20]
   400d8:	movw	r0, #91	; 0x5b
   400dc:	strb	r0, [r1]
   400e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   400e4:	cmp	r0, #0
   400e8:	beq	40184 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a4>
   400ec:	b	400f0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
   400f0:	ldr	r0, [fp, #-4]
   400f4:	ldrsb	r0, [r0, #25]
   400f8:	cmp	r0, #0
   400fc:	beq	40124 <flatcc_json_printer_utype_enum_vector_field@@Base+0x144>
   40100:	ldr	r0, [fp, #-4]
   40104:	ldr	r1, [r0, #20]
   40108:	add	r2, r1, #1
   4010c:	str	r2, [r0, #20]
   40110:	movw	r0, #10
   40114:	strb	r0, [r1]
   40118:	ldr	r0, [fp, #-4]
   4011c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40120:	b	4012c <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   40124:	ldr	r0, [fp, #-4]
   40128:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   4012c:	b	40130 <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
   40130:	ldr	r0, [fp, #12]
   40134:	ldr	r1, [fp, #-4]
   40138:	ldr	r2, [fp, #-20]	; 0xffffffec
   4013c:	str	r0, [sp, #28]
   40140:	mov	r0, r2
   40144:	str	r1, [sp, #24]
   40148:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   4014c:	ldr	r1, [sp, #24]
   40150:	str	r0, [sp, #20]
   40154:	mov	r0, r1
   40158:	ldr	r2, [sp, #20]
   4015c:	and	r1, r2, #255	; 0xff
   40160:	ldr	r3, [sp, #28]
   40164:	blx	r3
   40168:	ldr	r0, [fp, #-20]	; 0xffffffec
   4016c:	add	r0, r0, #1
   40170:	str	r0, [fp, #-20]	; 0xffffffec
   40174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40178:	mvn	r1, #0
   4017c:	add	r0, r0, r1
   40180:	str	r0, [fp, #-24]	; 0xffffffe8
   40184:	b	40188 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   40188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4018c:	mvn	r1, #0
   40190:	add	r1, r0, r1
   40194:	str	r1, [fp, #-24]	; 0xffffffe8
   40198:	cmp	r0, #0
   4019c:	beq	40240 <flatcc_json_printer_utype_enum_vector_field@@Base+0x260>
   401a0:	ldr	r0, [fp, #-4]
   401a4:	ldr	r1, [r0, #20]
   401a8:	add	r2, r1, #1
   401ac:	str	r2, [r0, #20]
   401b0:	movw	r0, #44	; 0x2c
   401b4:	strb	r0, [r1]
   401b8:	ldr	r0, [fp, #-4]
   401bc:	ldrsb	r0, [r0, #25]
   401c0:	cmp	r0, #0
   401c4:	beq	401ec <flatcc_json_printer_utype_enum_vector_field@@Base+0x20c>
   401c8:	ldr	r0, [fp, #-4]
   401cc:	ldr	r1, [r0, #20]
   401d0:	add	r2, r1, #1
   401d4:	str	r2, [r0, #20]
   401d8:	movw	r0, #10
   401dc:	strb	r0, [r1]
   401e0:	ldr	r0, [fp, #-4]
   401e4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   401e8:	b	401f4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x214>
   401ec:	ldr	r0, [fp, #-4]
   401f0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   401f4:	b	401f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   401f8:	ldr	r0, [fp, #12]
   401fc:	ldr	r1, [fp, #-4]
   40200:	ldr	r2, [fp, #-20]	; 0xffffffec
   40204:	str	r0, [sp, #16]
   40208:	mov	r0, r2
   4020c:	str	r1, [sp, #12]
   40210:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   40214:	ldr	r1, [sp, #12]
   40218:	str	r0, [sp, #8]
   4021c:	mov	r0, r1
   40220:	ldr	r2, [sp, #8]
   40224:	and	r1, r2, #255	; 0xff
   40228:	ldr	r3, [sp, #16]
   4022c:	blx	r3
   40230:	ldr	r0, [fp, #-20]	; 0xffffffec
   40234:	add	r0, r0, #1
   40238:	str	r0, [fp, #-20]	; 0xffffffec
   4023c:	b	40188 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
   40240:	b	40244 <flatcc_json_printer_utype_enum_vector_field@@Base+0x264>
   40244:	ldr	r0, [fp, #-4]
   40248:	ldrsb	r0, [r0, #25]
   4024c:	cmp	r0, #0
   40250:	beq	40288 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   40254:	ldr	r0, [fp, #-4]
   40258:	ldr	r1, [r0, #20]
   4025c:	add	r2, r1, #1
   40260:	str	r2, [r0, #20]
   40264:	movw	r0, #10
   40268:	strb	r0, [r1]
   4026c:	ldr	r0, [fp, #-4]
   40270:	ldr	r1, [r0, #32]
   40274:	mvn	r2, #0
   40278:	add	r1, r1, r2
   4027c:	str	r1, [r0, #32]
   40280:	ldr	r0, [fp, #-4]
   40284:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40288:	ldr	r0, [fp, #-4]
   4028c:	ldr	r1, [r0, #20]
   40290:	add	r2, r1, #1
   40294:	str	r2, [r0, #20]
   40298:	movw	r0, #93	; 0x5d
   4029c:	strb	r0, [r1]
   402a0:	b	402a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   402a4:	mov	sp, fp
   402a8:	pop	{fp, pc}

000402ac <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   402ac:	push	{fp, lr}
   402b0:	mov	fp, sp
   402b4:	sub	sp, sp, #56	; 0x38
   402b8:	ldr	ip, [fp, #12]
   402bc:	ldr	lr, [fp, #8]
   402c0:	str	r0, [fp, #-4]
   402c4:	str	r1, [fp, #-8]
   402c8:	str	r2, [fp, #-12]
   402cc:	str	r3, [fp, #-16]
   402d0:	ldr	r0, [fp, #-4]
   402d4:	ldrsb	r0, [r0, #27]
   402d8:	cmp	r0, #0
   402dc:	beq	40300 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x54>
   402e0:	ldr	r0, [fp, #-4]
   402e4:	ldr	r1, [fp, #-8]
   402e8:	ldr	r2, [fp, #-12]
   402ec:	ldr	r3, [fp, #-16]
   402f0:	ldr	ip, [fp, #8]
   402f4:	str	ip, [sp]
   402f8:	bl	3e4b4 <flatcc_json_printer_uint8_vector_field@@Base>
   402fc:	b	40570 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40300:	ldr	r0, [fp, #-8]
   40304:	ldr	r1, [fp, #-12]
   40308:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   4030c:	str	r0, [fp, #-20]	; 0xffffffec
   40310:	ldr	r0, [fp, #-20]	; 0xffffffec
   40314:	movw	r1, #0
   40318:	cmp	r0, r1
   4031c:	beq	40570 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40320:	ldr	r0, [fp, #-8]
   40324:	ldr	r1, [r0, #16]
   40328:	add	r2, r1, #1
   4032c:	str	r2, [r0, #16]
   40330:	cmp	r1, #0
   40334:	beq	40350 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa4>
   40338:	ldr	r0, [fp, #-4]
   4033c:	ldr	r1, [r0, #20]
   40340:	add	r2, r1, #1
   40344:	str	r2, [r0, #20]
   40348:	movw	r0, #44	; 0x2c
   4034c:	strb	r0, [r1]
   40350:	ldr	r0, [fp, #-20]	; 0xffffffec
   40354:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   40358:	str	r0, [fp, #-20]	; 0xffffffec
   4035c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40360:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40364:	str	r0, [fp, #-24]	; 0xffffffe8
   40368:	ldr	r0, [fp, #-20]	; 0xffffffec
   4036c:	add	r0, r0, #4
   40370:	str	r0, [fp, #-20]	; 0xffffffec
   40374:	ldr	r0, [fp, #-4]
   40378:	ldr	r1, [fp, #-16]
   4037c:	ldr	r2, [fp, #8]
   40380:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   40384:	ldr	r0, [fp, #-4]
   40388:	ldr	r1, [r0, #32]
   4038c:	add	r1, r1, #1
   40390:	str	r1, [r0, #32]
   40394:	ldr	r0, [fp, #-4]
   40398:	ldr	r1, [r0, #20]
   4039c:	add	r2, r1, #1
   403a0:	str	r2, [r0, #20]
   403a4:	movw	r0, #91	; 0x5b
   403a8:	strb	r0, [r1]
   403ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   403b0:	cmp	r0, #0
   403b4:	beq	40450 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a4>
   403b8:	b	403bc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
   403bc:	ldr	r0, [fp, #-4]
   403c0:	ldrsb	r0, [r0, #25]
   403c4:	cmp	r0, #0
   403c8:	beq	403f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x144>
   403cc:	ldr	r0, [fp, #-4]
   403d0:	ldr	r1, [r0, #20]
   403d4:	add	r2, r1, #1
   403d8:	str	r2, [r0, #20]
   403dc:	movw	r0, #10
   403e0:	strb	r0, [r1]
   403e4:	ldr	r0, [fp, #-4]
   403e8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   403ec:	b	403f8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   403f0:	ldr	r0, [fp, #-4]
   403f4:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   403f8:	b	403fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
   403fc:	ldr	r0, [fp, #12]
   40400:	ldr	r1, [fp, #-4]
   40404:	ldr	r2, [fp, #-20]	; 0xffffffec
   40408:	str	r0, [sp, #28]
   4040c:	mov	r0, r2
   40410:	str	r1, [sp, #24]
   40414:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   40418:	ldr	r1, [sp, #24]
   4041c:	str	r0, [sp, #20]
   40420:	mov	r0, r1
   40424:	ldr	r2, [sp, #20]
   40428:	and	r1, r2, #255	; 0xff
   4042c:	ldr	r3, [sp, #28]
   40430:	blx	r3
   40434:	ldr	r0, [fp, #-20]	; 0xffffffec
   40438:	add	r0, r0, #1
   4043c:	str	r0, [fp, #-20]	; 0xffffffec
   40440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40444:	mvn	r1, #0
   40448:	add	r0, r0, r1
   4044c:	str	r0, [fp, #-24]	; 0xffffffe8
   40450:	b	40454 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   40454:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40458:	mvn	r1, #0
   4045c:	add	r1, r0, r1
   40460:	str	r1, [fp, #-24]	; 0xffffffe8
   40464:	cmp	r0, #0
   40468:	beq	4050c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x260>
   4046c:	ldr	r0, [fp, #-4]
   40470:	ldr	r1, [r0, #20]
   40474:	add	r2, r1, #1
   40478:	str	r2, [r0, #20]
   4047c:	movw	r0, #44	; 0x2c
   40480:	strb	r0, [r1]
   40484:	ldr	r0, [fp, #-4]
   40488:	ldrsb	r0, [r0, #25]
   4048c:	cmp	r0, #0
   40490:	beq	404b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x20c>
   40494:	ldr	r0, [fp, #-4]
   40498:	ldr	r1, [r0, #20]
   4049c:	add	r2, r1, #1
   404a0:	str	r2, [r0, #20]
   404a4:	movw	r0, #10
   404a8:	strb	r0, [r1]
   404ac:	ldr	r0, [fp, #-4]
   404b0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   404b4:	b	404c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x214>
   404b8:	ldr	r0, [fp, #-4]
   404bc:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   404c0:	b	404c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   404c4:	ldr	r0, [fp, #12]
   404c8:	ldr	r1, [fp, #-4]
   404cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   404d0:	str	r0, [sp, #16]
   404d4:	mov	r0, r2
   404d8:	str	r1, [sp, #12]
   404dc:	bl	3bacc <flatcc_json_printer_uint8_field@@Base+0x108>
   404e0:	ldr	r1, [sp, #12]
   404e4:	str	r0, [sp, #8]
   404e8:	mov	r0, r1
   404ec:	ldr	r2, [sp, #8]
   404f0:	and	r1, r2, #255	; 0xff
   404f4:	ldr	r3, [sp, #16]
   404f8:	blx	r3
   404fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   40500:	add	r0, r0, #1
   40504:	str	r0, [fp, #-20]	; 0xffffffec
   40508:	b	40454 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
   4050c:	b	40510 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x264>
   40510:	ldr	r0, [fp, #-4]
   40514:	ldrsb	r0, [r0, #25]
   40518:	cmp	r0, #0
   4051c:	beq	40554 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   40520:	ldr	r0, [fp, #-4]
   40524:	ldr	r1, [r0, #20]
   40528:	add	r2, r1, #1
   4052c:	str	r2, [r0, #20]
   40530:	movw	r0, #10
   40534:	strb	r0, [r1]
   40538:	ldr	r0, [fp, #-4]
   4053c:	ldr	r1, [r0, #32]
   40540:	mvn	r2, #0
   40544:	add	r1, r1, r2
   40548:	str	r1, [r0, #32]
   4054c:	ldr	r0, [fp, #-4]
   40550:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40554:	ldr	r0, [fp, #-4]
   40558:	ldr	r1, [r0, #20]
   4055c:	add	r2, r1, #1
   40560:	str	r2, [r0, #20]
   40564:	movw	r0, #93	; 0x5d
   40568:	strb	r0, [r1]
   4056c:	b	40570 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40570:	mov	sp, fp
   40574:	pop	{fp, pc}

00040578 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   40578:	push	{fp, lr}
   4057c:	mov	fp, sp
   40580:	sub	sp, sp, #56	; 0x38
   40584:	ldr	ip, [fp, #12]
   40588:	ldr	lr, [fp, #8]
   4058c:	str	r0, [fp, #-4]
   40590:	str	r1, [fp, #-8]
   40594:	str	r2, [fp, #-12]
   40598:	str	r3, [fp, #-16]
   4059c:	ldr	r0, [fp, #-4]
   405a0:	ldrsb	r0, [r0, #27]
   405a4:	cmp	r0, #0
   405a8:	beq	405cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x54>
   405ac:	ldr	r0, [fp, #-4]
   405b0:	ldr	r1, [fp, #-8]
   405b4:	ldr	r2, [fp, #-12]
   405b8:	ldr	r3, [fp, #-16]
   405bc:	ldr	ip, [fp, #8]
   405c0:	str	ip, [sp]
   405c4:	bl	3e730 <flatcc_json_printer_uint16_vector_field@@Base>
   405c8:	b	4083c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   405cc:	ldr	r0, [fp, #-8]
   405d0:	ldr	r1, [fp, #-12]
   405d4:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   405d8:	str	r0, [fp, #-20]	; 0xffffffec
   405dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   405e0:	movw	r1, #0
   405e4:	cmp	r0, r1
   405e8:	beq	4083c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   405ec:	ldr	r0, [fp, #-8]
   405f0:	ldr	r1, [r0, #16]
   405f4:	add	r2, r1, #1
   405f8:	str	r2, [r0, #16]
   405fc:	cmp	r1, #0
   40600:	beq	4061c <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa4>
   40604:	ldr	r0, [fp, #-4]
   40608:	ldr	r1, [r0, #20]
   4060c:	add	r2, r1, #1
   40610:	str	r2, [r0, #20]
   40614:	movw	r0, #44	; 0x2c
   40618:	strb	r0, [r1]
   4061c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40620:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   40624:	str	r0, [fp, #-20]	; 0xffffffec
   40628:	ldr	r0, [fp, #-20]	; 0xffffffec
   4062c:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40630:	str	r0, [fp, #-24]	; 0xffffffe8
   40634:	ldr	r0, [fp, #-20]	; 0xffffffec
   40638:	add	r0, r0, #4
   4063c:	str	r0, [fp, #-20]	; 0xffffffec
   40640:	ldr	r0, [fp, #-4]
   40644:	ldr	r1, [fp, #-16]
   40648:	ldr	r2, [fp, #8]
   4064c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   40650:	ldr	r0, [fp, #-4]
   40654:	ldr	r1, [r0, #32]
   40658:	add	r1, r1, #1
   4065c:	str	r1, [r0, #32]
   40660:	ldr	r0, [fp, #-4]
   40664:	ldr	r1, [r0, #20]
   40668:	add	r2, r1, #1
   4066c:	str	r2, [r0, #20]
   40670:	movw	r0, #91	; 0x5b
   40674:	strb	r0, [r1]
   40678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4067c:	cmp	r0, #0
   40680:	beq	4071c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a4>
   40684:	b	40688 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
   40688:	ldr	r0, [fp, #-4]
   4068c:	ldrsb	r0, [r0, #25]
   40690:	cmp	r0, #0
   40694:	beq	406bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x144>
   40698:	ldr	r0, [fp, #-4]
   4069c:	ldr	r1, [r0, #20]
   406a0:	add	r2, r1, #1
   406a4:	str	r2, [r0, #20]
   406a8:	movw	r0, #10
   406ac:	strb	r0, [r1]
   406b0:	ldr	r0, [fp, #-4]
   406b4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   406b8:	b	406c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   406bc:	ldr	r0, [fp, #-4]
   406c0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   406c4:	b	406c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   406c8:	ldr	r0, [fp, #12]
   406cc:	ldr	r1, [fp, #-4]
   406d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   406d4:	str	r0, [sp, #28]
   406d8:	mov	r0, r2
   406dc:	str	r1, [sp, #24]
   406e0:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   406e4:	ldr	r1, [sp, #24]
   406e8:	str	r0, [sp, #20]
   406ec:	mov	r0, r1
   406f0:	ldr	r2, [sp, #20]
   406f4:	uxth	r1, r2
   406f8:	ldr	r3, [sp, #28]
   406fc:	blx	r3
   40700:	ldr	r0, [fp, #-20]	; 0xffffffec
   40704:	add	r0, r0, #2
   40708:	str	r0, [fp, #-20]	; 0xffffffec
   4070c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40710:	mvn	r1, #0
   40714:	add	r0, r0, r1
   40718:	str	r0, [fp, #-24]	; 0xffffffe8
   4071c:	b	40720 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   40720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40724:	mvn	r1, #0
   40728:	add	r1, r0, r1
   4072c:	str	r1, [fp, #-24]	; 0xffffffe8
   40730:	cmp	r0, #0
   40734:	beq	407d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x260>
   40738:	ldr	r0, [fp, #-4]
   4073c:	ldr	r1, [r0, #20]
   40740:	add	r2, r1, #1
   40744:	str	r2, [r0, #20]
   40748:	movw	r0, #44	; 0x2c
   4074c:	strb	r0, [r1]
   40750:	ldr	r0, [fp, #-4]
   40754:	ldrsb	r0, [r0, #25]
   40758:	cmp	r0, #0
   4075c:	beq	40784 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x20c>
   40760:	ldr	r0, [fp, #-4]
   40764:	ldr	r1, [r0, #20]
   40768:	add	r2, r1, #1
   4076c:	str	r2, [r0, #20]
   40770:	movw	r0, #10
   40774:	strb	r0, [r1]
   40778:	ldr	r0, [fp, #-4]
   4077c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40780:	b	4078c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
   40784:	ldr	r0, [fp, #-4]
   40788:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   4078c:	b	40790 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   40790:	ldr	r0, [fp, #12]
   40794:	ldr	r1, [fp, #-4]
   40798:	ldr	r2, [fp, #-20]	; 0xffffffec
   4079c:	str	r0, [sp, #16]
   407a0:	mov	r0, r2
   407a4:	str	r1, [sp, #12]
   407a8:	bl	3bbfc <flatcc_json_printer_uint16_field@@Base+0x108>
   407ac:	ldr	r1, [sp, #12]
   407b0:	str	r0, [sp, #8]
   407b4:	mov	r0, r1
   407b8:	ldr	r2, [sp, #8]
   407bc:	uxth	r1, r2
   407c0:	ldr	r3, [sp, #16]
   407c4:	blx	r3
   407c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   407cc:	add	r0, r0, #2
   407d0:	str	r0, [fp, #-20]	; 0xffffffec
   407d4:	b	40720 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a8>
   407d8:	b	407dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x264>
   407dc:	ldr	r0, [fp, #-4]
   407e0:	ldrsb	r0, [r0, #25]
   407e4:	cmp	r0, #0
   407e8:	beq	40820 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   407ec:	ldr	r0, [fp, #-4]
   407f0:	ldr	r1, [r0, #20]
   407f4:	add	r2, r1, #1
   407f8:	str	r2, [r0, #20]
   407fc:	movw	r0, #10
   40800:	strb	r0, [r1]
   40804:	ldr	r0, [fp, #-4]
   40808:	ldr	r1, [r0, #32]
   4080c:	mvn	r2, #0
   40810:	add	r1, r1, r2
   40814:	str	r1, [r0, #32]
   40818:	ldr	r0, [fp, #-4]
   4081c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40820:	ldr	r0, [fp, #-4]
   40824:	ldr	r1, [r0, #20]
   40828:	add	r2, r1, #1
   4082c:	str	r2, [r0, #20]
   40830:	movw	r0, #93	; 0x5d
   40834:	strb	r0, [r1]
   40838:	b	4083c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4083c:	mov	sp, fp
   40840:	pop	{fp, pc}

00040844 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   40844:	push	{fp, lr}
   40848:	mov	fp, sp
   4084c:	sub	sp, sp, #56	; 0x38
   40850:	ldr	ip, [fp, #12]
   40854:	ldr	lr, [fp, #8]
   40858:	str	r0, [fp, #-4]
   4085c:	str	r1, [fp, #-8]
   40860:	str	r2, [fp, #-12]
   40864:	str	r3, [fp, #-16]
   40868:	ldr	r0, [fp, #-4]
   4086c:	ldrsb	r0, [r0, #27]
   40870:	cmp	r0, #0
   40874:	beq	40898 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x54>
   40878:	ldr	r0, [fp, #-4]
   4087c:	ldr	r1, [fp, #-8]
   40880:	ldr	r2, [fp, #-12]
   40884:	ldr	r3, [fp, #-16]
   40888:	ldr	ip, [fp, #8]
   4088c:	str	ip, [sp]
   40890:	bl	3e9ac <flatcc_json_printer_uint32_vector_field@@Base>
   40894:	b	40b00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   40898:	ldr	r0, [fp, #-8]
   4089c:	ldr	r1, [fp, #-12]
   408a0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   408a4:	str	r0, [fp, #-20]	; 0xffffffec
   408a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   408ac:	movw	r1, #0
   408b0:	cmp	r0, r1
   408b4:	beq	40b00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   408b8:	ldr	r0, [fp, #-8]
   408bc:	ldr	r1, [r0, #16]
   408c0:	add	r2, r1, #1
   408c4:	str	r2, [r0, #16]
   408c8:	cmp	r1, #0
   408cc:	beq	408e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa4>
   408d0:	ldr	r0, [fp, #-4]
   408d4:	ldr	r1, [r0, #20]
   408d8:	add	r2, r1, #1
   408dc:	str	r2, [r0, #20]
   408e0:	movw	r0, #44	; 0x2c
   408e4:	strb	r0, [r1]
   408e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   408ec:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   408f0:	str	r0, [fp, #-20]	; 0xffffffec
   408f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   408f8:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   408fc:	str	r0, [fp, #-24]	; 0xffffffe8
   40900:	ldr	r0, [fp, #-20]	; 0xffffffec
   40904:	add	r0, r0, #4
   40908:	str	r0, [fp, #-20]	; 0xffffffec
   4090c:	ldr	r0, [fp, #-4]
   40910:	ldr	r1, [fp, #-16]
   40914:	ldr	r2, [fp, #8]
   40918:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   4091c:	ldr	r0, [fp, #-4]
   40920:	ldr	r1, [r0, #32]
   40924:	add	r1, r1, #1
   40928:	str	r1, [r0, #32]
   4092c:	ldr	r0, [fp, #-4]
   40930:	ldr	r1, [r0, #20]
   40934:	add	r2, r1, #1
   40938:	str	r2, [r0, #20]
   4093c:	movw	r0, #91	; 0x5b
   40940:	strb	r0, [r1]
   40944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40948:	cmp	r0, #0
   4094c:	beq	409e4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a0>
   40950:	b	40954 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
   40954:	ldr	r0, [fp, #-4]
   40958:	ldrsb	r0, [r0, #25]
   4095c:	cmp	r0, #0
   40960:	beq	40988 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x144>
   40964:	ldr	r0, [fp, #-4]
   40968:	ldr	r1, [r0, #20]
   4096c:	add	r2, r1, #1
   40970:	str	r2, [r0, #20]
   40974:	movw	r0, #10
   40978:	strb	r0, [r1]
   4097c:	ldr	r0, [fp, #-4]
   40980:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40984:	b	40990 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   40988:	ldr	r0, [fp, #-4]
   4098c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40990:	b	40994 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   40994:	ldr	r0, [fp, #12]
   40998:	ldr	r1, [fp, #-4]
   4099c:	ldr	r2, [fp, #-20]	; 0xffffffec
   409a0:	str	r0, [sp, #28]
   409a4:	mov	r0, r2
   409a8:	str	r1, [sp, #24]
   409ac:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   409b0:	ldr	r1, [sp, #24]
   409b4:	str	r0, [sp, #20]
   409b8:	mov	r0, r1
   409bc:	ldr	r1, [sp, #20]
   409c0:	ldr	r2, [sp, #28]
   409c4:	blx	r2
   409c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   409cc:	add	r0, r0, #4
   409d0:	str	r0, [fp, #-20]	; 0xffffffec
   409d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   409d8:	mvn	r1, #0
   409dc:	add	r0, r0, r1
   409e0:	str	r0, [fp, #-24]	; 0xffffffe8
   409e4:	b	409e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   409e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   409ec:	mvn	r1, #0
   409f0:	add	r1, r0, r1
   409f4:	str	r1, [fp, #-24]	; 0xffffffe8
   409f8:	cmp	r0, #0
   409fc:	beq	40a9c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x258>
   40a00:	ldr	r0, [fp, #-4]
   40a04:	ldr	r1, [r0, #20]
   40a08:	add	r2, r1, #1
   40a0c:	str	r2, [r0, #20]
   40a10:	movw	r0, #44	; 0x2c
   40a14:	strb	r0, [r1]
   40a18:	ldr	r0, [fp, #-4]
   40a1c:	ldrsb	r0, [r0, #25]
   40a20:	cmp	r0, #0
   40a24:	beq	40a4c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x208>
   40a28:	ldr	r0, [fp, #-4]
   40a2c:	ldr	r1, [r0, #20]
   40a30:	add	r2, r1, #1
   40a34:	str	r2, [r0, #20]
   40a38:	movw	r0, #10
   40a3c:	strb	r0, [r1]
   40a40:	ldr	r0, [fp, #-4]
   40a44:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40a48:	b	40a54 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   40a4c:	ldr	r0, [fp, #-4]
   40a50:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40a54:	b	40a58 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   40a58:	ldr	r0, [fp, #12]
   40a5c:	ldr	r1, [fp, #-4]
   40a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   40a64:	str	r0, [sp, #16]
   40a68:	mov	r0, r2
   40a6c:	str	r1, [sp, #12]
   40a70:	bl	3bd28 <flatcc_json_printer_uint32_field@@Base+0x104>
   40a74:	ldr	r1, [sp, #12]
   40a78:	str	r0, [sp, #8]
   40a7c:	mov	r0, r1
   40a80:	ldr	r1, [sp, #8]
   40a84:	ldr	r2, [sp, #16]
   40a88:	blx	r2
   40a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40a90:	add	r0, r0, #4
   40a94:	str	r0, [fp, #-20]	; 0xffffffec
   40a98:	b	409e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   40a9c:	b	40aa0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x25c>
   40aa0:	ldr	r0, [fp, #-4]
   40aa4:	ldrsb	r0, [r0, #25]
   40aa8:	cmp	r0, #0
   40aac:	beq	40ae4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a0>
   40ab0:	ldr	r0, [fp, #-4]
   40ab4:	ldr	r1, [r0, #20]
   40ab8:	add	r2, r1, #1
   40abc:	str	r2, [r0, #20]
   40ac0:	movw	r0, #10
   40ac4:	strb	r0, [r1]
   40ac8:	ldr	r0, [fp, #-4]
   40acc:	ldr	r1, [r0, #32]
   40ad0:	mvn	r2, #0
   40ad4:	add	r1, r1, r2
   40ad8:	str	r1, [r0, #32]
   40adc:	ldr	r0, [fp, #-4]
   40ae0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40ae4:	ldr	r0, [fp, #-4]
   40ae8:	ldr	r1, [r0, #20]
   40aec:	add	r2, r1, #1
   40af0:	str	r2, [r0, #20]
   40af4:	movw	r0, #93	; 0x5d
   40af8:	strb	r0, [r1]
   40afc:	b	40b00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2bc>
   40b00:	mov	sp, fp
   40b04:	pop	{fp, pc}

00040b08 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   40b08:	push	{fp, lr}
   40b0c:	mov	fp, sp
   40b10:	sub	sp, sp, #56	; 0x38
   40b14:	ldr	ip, [fp, #12]
   40b18:	ldr	lr, [fp, #8]
   40b1c:	str	r0, [fp, #-4]
   40b20:	str	r1, [fp, #-8]
   40b24:	str	r2, [fp, #-12]
   40b28:	str	r3, [fp, #-16]
   40b2c:	ldr	r0, [fp, #-4]
   40b30:	ldrsb	r0, [r0, #27]
   40b34:	cmp	r0, #0
   40b38:	beq	40b5c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x54>
   40b3c:	ldr	r0, [fp, #-4]
   40b40:	ldr	r1, [fp, #-8]
   40b44:	ldr	r2, [fp, #-12]
   40b48:	ldr	r3, [fp, #-16]
   40b4c:	ldr	ip, [fp, #8]
   40b50:	str	ip, [sp]
   40b54:	bl	3ec20 <flatcc_json_printer_uint64_vector_field@@Base>
   40b58:	b	40dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   40b5c:	ldr	r0, [fp, #-8]
   40b60:	ldr	r1, [fp, #-12]
   40b64:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   40b68:	str	r0, [fp, #-20]	; 0xffffffec
   40b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40b70:	movw	r1, #0
   40b74:	cmp	r0, r1
   40b78:	beq	40dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   40b7c:	ldr	r0, [fp, #-8]
   40b80:	ldr	r1, [r0, #16]
   40b84:	add	r2, r1, #1
   40b88:	str	r2, [r0, #16]
   40b8c:	cmp	r1, #0
   40b90:	beq	40bac <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa4>
   40b94:	ldr	r0, [fp, #-4]
   40b98:	ldr	r1, [r0, #20]
   40b9c:	add	r2, r1, #1
   40ba0:	str	r2, [r0, #20]
   40ba4:	movw	r0, #44	; 0x2c
   40ba8:	strb	r0, [r1]
   40bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   40bb0:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   40bb4:	str	r0, [fp, #-20]	; 0xffffffec
   40bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   40bbc:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40bc0:	str	r0, [fp, #-24]	; 0xffffffe8
   40bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   40bc8:	add	r0, r0, #4
   40bcc:	str	r0, [fp, #-20]	; 0xffffffec
   40bd0:	ldr	r0, [fp, #-4]
   40bd4:	ldr	r1, [fp, #-16]
   40bd8:	ldr	r2, [fp, #8]
   40bdc:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   40be0:	ldr	r0, [fp, #-4]
   40be4:	ldr	r1, [r0, #32]
   40be8:	add	r1, r1, #1
   40bec:	str	r1, [r0, #32]
   40bf0:	ldr	r0, [fp, #-4]
   40bf4:	ldr	r1, [r0, #20]
   40bf8:	add	r2, r1, #1
   40bfc:	str	r2, [r0, #20]
   40c00:	movw	r0, #91	; 0x5b
   40c04:	strb	r0, [r1]
   40c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40c0c:	cmp	r0, #0
   40c10:	beq	40cac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a4>
   40c14:	b	40c18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
   40c18:	ldr	r0, [fp, #-4]
   40c1c:	ldrsb	r0, [r0, #25]
   40c20:	cmp	r0, #0
   40c24:	beq	40c4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x144>
   40c28:	ldr	r0, [fp, #-4]
   40c2c:	ldr	r1, [r0, #20]
   40c30:	add	r2, r1, #1
   40c34:	str	r2, [r0, #20]
   40c38:	movw	r0, #10
   40c3c:	strb	r0, [r1]
   40c40:	ldr	r0, [fp, #-4]
   40c44:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40c48:	b	40c54 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   40c4c:	ldr	r0, [fp, #-4]
   40c50:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40c54:	b	40c58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   40c58:	ldr	r0, [fp, #12]
   40c5c:	ldr	r1, [fp, #-4]
   40c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   40c64:	str	r0, [sp, #28]
   40c68:	mov	r0, r2
   40c6c:	str	r1, [sp, #24]
   40c70:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   40c74:	ldr	r2, [sp, #24]
   40c78:	str	r0, [sp, #20]
   40c7c:	mov	r0, r2
   40c80:	ldr	r2, [sp, #20]
   40c84:	mov	r3, r1
   40c88:	ldr	r1, [sp, #28]
   40c8c:	blx	r1
   40c90:	ldr	r0, [fp, #-20]	; 0xffffffec
   40c94:	add	r0, r0, #8
   40c98:	str	r0, [fp, #-20]	; 0xffffffec
   40c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40ca0:	mvn	r1, #0
   40ca4:	add	r0, r0, r1
   40ca8:	str	r0, [fp, #-24]	; 0xffffffe8
   40cac:	b	40cb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   40cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40cb4:	mvn	r1, #0
   40cb8:	add	r1, r0, r1
   40cbc:	str	r1, [fp, #-24]	; 0xffffffe8
   40cc0:	cmp	r0, #0
   40cc4:	beq	40d68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x260>
   40cc8:	ldr	r0, [fp, #-4]
   40ccc:	ldr	r1, [r0, #20]
   40cd0:	add	r2, r1, #1
   40cd4:	str	r2, [r0, #20]
   40cd8:	movw	r0, #44	; 0x2c
   40cdc:	strb	r0, [r1]
   40ce0:	ldr	r0, [fp, #-4]
   40ce4:	ldrsb	r0, [r0, #25]
   40ce8:	cmp	r0, #0
   40cec:	beq	40d14 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x20c>
   40cf0:	ldr	r0, [fp, #-4]
   40cf4:	ldr	r1, [r0, #20]
   40cf8:	add	r2, r1, #1
   40cfc:	str	r2, [r0, #20]
   40d00:	movw	r0, #10
   40d04:	strb	r0, [r1]
   40d08:	ldr	r0, [fp, #-4]
   40d0c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40d10:	b	40d1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   40d14:	ldr	r0, [fp, #-4]
   40d18:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40d1c:	b	40d20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x218>
   40d20:	ldr	r0, [fp, #12]
   40d24:	ldr	r1, [fp, #-4]
   40d28:	ldr	r2, [fp, #-20]	; 0xffffffec
   40d2c:	str	r0, [sp, #16]
   40d30:	mov	r0, r2
   40d34:	str	r1, [sp, #12]
   40d38:	bl	3be80 <flatcc_json_printer_uint64_field@@Base+0x134>
   40d3c:	ldr	r2, [sp, #12]
   40d40:	str	r0, [sp, #8]
   40d44:	mov	r0, r2
   40d48:	ldr	r2, [sp, #8]
   40d4c:	mov	r3, r1
   40d50:	ldr	r1, [sp, #16]
   40d54:	blx	r1
   40d58:	ldr	r0, [fp, #-20]	; 0xffffffec
   40d5c:	add	r0, r0, #8
   40d60:	str	r0, [fp, #-20]	; 0xffffffec
   40d64:	b	40cb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
   40d68:	b	40d6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x264>
   40d6c:	ldr	r0, [fp, #-4]
   40d70:	ldrsb	r0, [r0, #25]
   40d74:	cmp	r0, #0
   40d78:	beq	40db0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   40d7c:	ldr	r0, [fp, #-4]
   40d80:	ldr	r1, [r0, #20]
   40d84:	add	r2, r1, #1
   40d88:	str	r2, [r0, #20]
   40d8c:	movw	r0, #10
   40d90:	strb	r0, [r1]
   40d94:	ldr	r0, [fp, #-4]
   40d98:	ldr	r1, [r0, #32]
   40d9c:	mvn	r2, #0
   40da0:	add	r1, r1, r2
   40da4:	str	r1, [r0, #32]
   40da8:	ldr	r0, [fp, #-4]
   40dac:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40db0:	ldr	r0, [fp, #-4]
   40db4:	ldr	r1, [r0, #20]
   40db8:	add	r2, r1, #1
   40dbc:	str	r2, [r0, #20]
   40dc0:	movw	r0, #93	; 0x5d
   40dc4:	strb	r0, [r1]
   40dc8:	b	40dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   40dcc:	mov	sp, fp
   40dd0:	pop	{fp, pc}

00040dd4 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   40dd4:	push	{fp, lr}
   40dd8:	mov	fp, sp
   40ddc:	sub	sp, sp, #56	; 0x38
   40de0:	ldr	ip, [fp, #12]
   40de4:	ldr	lr, [fp, #8]
   40de8:	str	r0, [fp, #-4]
   40dec:	str	r1, [fp, #-8]
   40df0:	str	r2, [fp, #-12]
   40df4:	str	r3, [fp, #-16]
   40df8:	ldr	r0, [fp, #-4]
   40dfc:	ldrsb	r0, [r0, #27]
   40e00:	cmp	r0, #0
   40e04:	beq	40e28 <flatcc_json_printer_int8_enum_vector_field@@Base+0x54>
   40e08:	ldr	r0, [fp, #-4]
   40e0c:	ldr	r1, [fp, #-8]
   40e10:	ldr	r2, [fp, #-12]
   40e14:	ldr	r3, [fp, #-16]
   40e18:	ldr	ip, [fp, #8]
   40e1c:	str	ip, [sp]
   40e20:	bl	3ee94 <flatcc_json_printer_int8_vector_field@@Base>
   40e24:	b	41098 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   40e28:	ldr	r0, [fp, #-8]
   40e2c:	ldr	r1, [fp, #-12]
   40e30:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   40e34:	str	r0, [fp, #-20]	; 0xffffffec
   40e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e3c:	movw	r1, #0
   40e40:	cmp	r0, r1
   40e44:	beq	41098 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   40e48:	ldr	r0, [fp, #-8]
   40e4c:	ldr	r1, [r0, #16]
   40e50:	add	r2, r1, #1
   40e54:	str	r2, [r0, #16]
   40e58:	cmp	r1, #0
   40e5c:	beq	40e78 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa4>
   40e60:	ldr	r0, [fp, #-4]
   40e64:	ldr	r1, [r0, #20]
   40e68:	add	r2, r1, #1
   40e6c:	str	r2, [r0, #20]
   40e70:	movw	r0, #44	; 0x2c
   40e74:	strb	r0, [r1]
   40e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e7c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   40e80:	str	r0, [fp, #-20]	; 0xffffffec
   40e84:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e88:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   40e8c:	str	r0, [fp, #-24]	; 0xffffffe8
   40e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   40e94:	add	r0, r0, #4
   40e98:	str	r0, [fp, #-20]	; 0xffffffec
   40e9c:	ldr	r0, [fp, #-4]
   40ea0:	ldr	r1, [fp, #-16]
   40ea4:	ldr	r2, [fp, #8]
   40ea8:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   40eac:	ldr	r0, [fp, #-4]
   40eb0:	ldr	r1, [r0, #32]
   40eb4:	add	r1, r1, #1
   40eb8:	str	r1, [r0, #32]
   40ebc:	ldr	r0, [fp, #-4]
   40ec0:	ldr	r1, [r0, #20]
   40ec4:	add	r2, r1, #1
   40ec8:	str	r2, [r0, #20]
   40ecc:	movw	r0, #91	; 0x5b
   40ed0:	strb	r0, [r1]
   40ed4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40ed8:	cmp	r0, #0
   40edc:	beq	40f78 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a4>
   40ee0:	b	40ee4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
   40ee4:	ldr	r0, [fp, #-4]
   40ee8:	ldrsb	r0, [r0, #25]
   40eec:	cmp	r0, #0
   40ef0:	beq	40f18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x144>
   40ef4:	ldr	r0, [fp, #-4]
   40ef8:	ldr	r1, [r0, #20]
   40efc:	add	r2, r1, #1
   40f00:	str	r2, [r0, #20]
   40f04:	movw	r0, #10
   40f08:	strb	r0, [r1]
   40f0c:	ldr	r0, [fp, #-4]
   40f10:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40f14:	b	40f20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   40f18:	ldr	r0, [fp, #-4]
   40f1c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40f20:	b	40f24 <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
   40f24:	ldr	r0, [fp, #12]
   40f28:	ldr	r1, [fp, #-4]
   40f2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   40f30:	str	r0, [sp, #28]
   40f34:	mov	r0, r2
   40f38:	str	r1, [sp, #24]
   40f3c:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   40f40:	ldr	r1, [sp, #24]
   40f44:	str	r0, [sp, #20]
   40f48:	mov	r0, r1
   40f4c:	ldr	r2, [sp, #20]
   40f50:	sxtb	r1, r2
   40f54:	ldr	r3, [sp, #28]
   40f58:	blx	r3
   40f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40f60:	add	r0, r0, #1
   40f64:	str	r0, [fp, #-20]	; 0xffffffec
   40f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40f6c:	mvn	r1, #0
   40f70:	add	r0, r0, r1
   40f74:	str	r0, [fp, #-24]	; 0xffffffe8
   40f78:	b	40f7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   40f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40f80:	mvn	r1, #0
   40f84:	add	r1, r0, r1
   40f88:	str	r1, [fp, #-24]	; 0xffffffe8
   40f8c:	cmp	r0, #0
   40f90:	beq	41034 <flatcc_json_printer_int8_enum_vector_field@@Base+0x260>
   40f94:	ldr	r0, [fp, #-4]
   40f98:	ldr	r1, [r0, #20]
   40f9c:	add	r2, r1, #1
   40fa0:	str	r2, [r0, #20]
   40fa4:	movw	r0, #44	; 0x2c
   40fa8:	strb	r0, [r1]
   40fac:	ldr	r0, [fp, #-4]
   40fb0:	ldrsb	r0, [r0, #25]
   40fb4:	cmp	r0, #0
   40fb8:	beq	40fe0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x20c>
   40fbc:	ldr	r0, [fp, #-4]
   40fc0:	ldr	r1, [r0, #20]
   40fc4:	add	r2, r1, #1
   40fc8:	str	r2, [r0, #20]
   40fcc:	movw	r0, #10
   40fd0:	strb	r0, [r1]
   40fd4:	ldr	r0, [fp, #-4]
   40fd8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   40fdc:	b	40fe8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x214>
   40fe0:	ldr	r0, [fp, #-4]
   40fe4:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   40fe8:	b	40fec <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   40fec:	ldr	r0, [fp, #12]
   40ff0:	ldr	r1, [fp, #-4]
   40ff4:	ldr	r2, [fp, #-20]	; 0xffffffec
   40ff8:	str	r0, [sp, #16]
   40ffc:	mov	r0, r2
   41000:	str	r1, [sp, #12]
   41004:	bl	3bfbc <flatcc_json_printer_int8_field@@Base+0x108>
   41008:	ldr	r1, [sp, #12]
   4100c:	str	r0, [sp, #8]
   41010:	mov	r0, r1
   41014:	ldr	r2, [sp, #8]
   41018:	sxtb	r1, r2
   4101c:	ldr	r3, [sp, #16]
   41020:	blx	r3
   41024:	ldr	r0, [fp, #-20]	; 0xffffffec
   41028:	add	r0, r0, #1
   4102c:	str	r0, [fp, #-20]	; 0xffffffec
   41030:	b	40f7c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
   41034:	b	41038 <flatcc_json_printer_int8_enum_vector_field@@Base+0x264>
   41038:	ldr	r0, [fp, #-4]
   4103c:	ldrsb	r0, [r0, #25]
   41040:	cmp	r0, #0
   41044:	beq	4107c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   41048:	ldr	r0, [fp, #-4]
   4104c:	ldr	r1, [r0, #20]
   41050:	add	r2, r1, #1
   41054:	str	r2, [r0, #20]
   41058:	movw	r0, #10
   4105c:	strb	r0, [r1]
   41060:	ldr	r0, [fp, #-4]
   41064:	ldr	r1, [r0, #32]
   41068:	mvn	r2, #0
   4106c:	add	r1, r1, r2
   41070:	str	r1, [r0, #32]
   41074:	ldr	r0, [fp, #-4]
   41078:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   4107c:	ldr	r0, [fp, #-4]
   41080:	ldr	r1, [r0, #20]
   41084:	add	r2, r1, #1
   41088:	str	r2, [r0, #20]
   4108c:	movw	r0, #93	; 0x5d
   41090:	strb	r0, [r1]
   41094:	b	41098 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41098:	mov	sp, fp
   4109c:	pop	{fp, pc}

000410a0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   410a0:	push	{fp, lr}
   410a4:	mov	fp, sp
   410a8:	sub	sp, sp, #56	; 0x38
   410ac:	ldr	ip, [fp, #12]
   410b0:	ldr	lr, [fp, #8]
   410b4:	str	r0, [fp, #-4]
   410b8:	str	r1, [fp, #-8]
   410bc:	str	r2, [fp, #-12]
   410c0:	str	r3, [fp, #-16]
   410c4:	ldr	r0, [fp, #-4]
   410c8:	ldrsb	r0, [r0, #27]
   410cc:	cmp	r0, #0
   410d0:	beq	410f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x54>
   410d4:	ldr	r0, [fp, #-4]
   410d8:	ldr	r1, [fp, #-8]
   410dc:	ldr	r2, [fp, #-12]
   410e0:	ldr	r3, [fp, #-16]
   410e4:	ldr	ip, [fp, #8]
   410e8:	str	ip, [sp]
   410ec:	bl	3f110 <flatcc_json_printer_int16_vector_field@@Base>
   410f0:	b	41364 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   410f4:	ldr	r0, [fp, #-8]
   410f8:	ldr	r1, [fp, #-12]
   410fc:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   41100:	str	r0, [fp, #-20]	; 0xffffffec
   41104:	ldr	r0, [fp, #-20]	; 0xffffffec
   41108:	movw	r1, #0
   4110c:	cmp	r0, r1
   41110:	beq	41364 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41114:	ldr	r0, [fp, #-8]
   41118:	ldr	r1, [r0, #16]
   4111c:	add	r2, r1, #1
   41120:	str	r2, [r0, #16]
   41124:	cmp	r1, #0
   41128:	beq	41144 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa4>
   4112c:	ldr	r0, [fp, #-4]
   41130:	ldr	r1, [r0, #20]
   41134:	add	r2, r1, #1
   41138:	str	r2, [r0, #20]
   4113c:	movw	r0, #44	; 0x2c
   41140:	strb	r0, [r1]
   41144:	ldr	r0, [fp, #-20]	; 0xffffffec
   41148:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   4114c:	str	r0, [fp, #-20]	; 0xffffffec
   41150:	ldr	r0, [fp, #-20]	; 0xffffffec
   41154:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41158:	str	r0, [fp, #-24]	; 0xffffffe8
   4115c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41160:	add	r0, r0, #4
   41164:	str	r0, [fp, #-20]	; 0xffffffec
   41168:	ldr	r0, [fp, #-4]
   4116c:	ldr	r1, [fp, #-16]
   41170:	ldr	r2, [fp, #8]
   41174:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   41178:	ldr	r0, [fp, #-4]
   4117c:	ldr	r1, [r0, #32]
   41180:	add	r1, r1, #1
   41184:	str	r1, [r0, #32]
   41188:	ldr	r0, [fp, #-4]
   4118c:	ldr	r1, [r0, #20]
   41190:	add	r2, r1, #1
   41194:	str	r2, [r0, #20]
   41198:	movw	r0, #91	; 0x5b
   4119c:	strb	r0, [r1]
   411a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   411a4:	cmp	r0, #0
   411a8:	beq	41244 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a4>
   411ac:	b	411b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
   411b0:	ldr	r0, [fp, #-4]
   411b4:	ldrsb	r0, [r0, #25]
   411b8:	cmp	r0, #0
   411bc:	beq	411e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x144>
   411c0:	ldr	r0, [fp, #-4]
   411c4:	ldr	r1, [r0, #20]
   411c8:	add	r2, r1, #1
   411cc:	str	r2, [r0, #20]
   411d0:	movw	r0, #10
   411d4:	strb	r0, [r1]
   411d8:	ldr	r0, [fp, #-4]
   411dc:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   411e0:	b	411ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   411e4:	ldr	r0, [fp, #-4]
   411e8:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   411ec:	b	411f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   411f0:	ldr	r0, [fp, #12]
   411f4:	ldr	r1, [fp, #-4]
   411f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   411fc:	str	r0, [sp, #28]
   41200:	mov	r0, r2
   41204:	str	r1, [sp, #24]
   41208:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   4120c:	ldr	r1, [sp, #24]
   41210:	str	r0, [sp, #20]
   41214:	mov	r0, r1
   41218:	ldr	r2, [sp, #20]
   4121c:	sxth	r1, r2
   41220:	ldr	r3, [sp, #28]
   41224:	blx	r3
   41228:	ldr	r0, [fp, #-20]	; 0xffffffec
   4122c:	add	r0, r0, #2
   41230:	str	r0, [fp, #-20]	; 0xffffffec
   41234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41238:	mvn	r1, #0
   4123c:	add	r0, r0, r1
   41240:	str	r0, [fp, #-24]	; 0xffffffe8
   41244:	b	41248 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   41248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4124c:	mvn	r1, #0
   41250:	add	r1, r0, r1
   41254:	str	r1, [fp, #-24]	; 0xffffffe8
   41258:	cmp	r0, #0
   4125c:	beq	41300 <flatcc_json_printer_int16_enum_vector_field@@Base+0x260>
   41260:	ldr	r0, [fp, #-4]
   41264:	ldr	r1, [r0, #20]
   41268:	add	r2, r1, #1
   4126c:	str	r2, [r0, #20]
   41270:	movw	r0, #44	; 0x2c
   41274:	strb	r0, [r1]
   41278:	ldr	r0, [fp, #-4]
   4127c:	ldrsb	r0, [r0, #25]
   41280:	cmp	r0, #0
   41284:	beq	412ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x20c>
   41288:	ldr	r0, [fp, #-4]
   4128c:	ldr	r1, [r0, #20]
   41290:	add	r2, r1, #1
   41294:	str	r2, [r0, #20]
   41298:	movw	r0, #10
   4129c:	strb	r0, [r1]
   412a0:	ldr	r0, [fp, #-4]
   412a4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   412a8:	b	412b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
   412ac:	ldr	r0, [fp, #-4]
   412b0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   412b4:	b	412b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   412b8:	ldr	r0, [fp, #12]
   412bc:	ldr	r1, [fp, #-4]
   412c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   412c4:	str	r0, [sp, #16]
   412c8:	mov	r0, r2
   412cc:	str	r1, [sp, #12]
   412d0:	bl	3c0ec <flatcc_json_printer_int16_field@@Base+0x108>
   412d4:	ldr	r1, [sp, #12]
   412d8:	str	r0, [sp, #8]
   412dc:	mov	r0, r1
   412e0:	ldr	r2, [sp, #8]
   412e4:	sxth	r1, r2
   412e8:	ldr	r3, [sp, #16]
   412ec:	blx	r3
   412f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   412f4:	add	r0, r0, #2
   412f8:	str	r0, [fp, #-20]	; 0xffffffec
   412fc:	b	41248 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a8>
   41300:	b	41304 <flatcc_json_printer_int16_enum_vector_field@@Base+0x264>
   41304:	ldr	r0, [fp, #-4]
   41308:	ldrsb	r0, [r0, #25]
   4130c:	cmp	r0, #0
   41310:	beq	41348 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   41314:	ldr	r0, [fp, #-4]
   41318:	ldr	r1, [r0, #20]
   4131c:	add	r2, r1, #1
   41320:	str	r2, [r0, #20]
   41324:	movw	r0, #10
   41328:	strb	r0, [r1]
   4132c:	ldr	r0, [fp, #-4]
   41330:	ldr	r1, [r0, #32]
   41334:	mvn	r2, #0
   41338:	add	r1, r1, r2
   4133c:	str	r1, [r0, #32]
   41340:	ldr	r0, [fp, #-4]
   41344:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41348:	ldr	r0, [fp, #-4]
   4134c:	ldr	r1, [r0, #20]
   41350:	add	r2, r1, #1
   41354:	str	r2, [r0, #20]
   41358:	movw	r0, #93	; 0x5d
   4135c:	strb	r0, [r1]
   41360:	b	41364 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41364:	mov	sp, fp
   41368:	pop	{fp, pc}

0004136c <flatcc_json_printer_int32_enum_vector_field@@Base>:
   4136c:	push	{fp, lr}
   41370:	mov	fp, sp
   41374:	sub	sp, sp, #56	; 0x38
   41378:	ldr	ip, [fp, #12]
   4137c:	ldr	lr, [fp, #8]
   41380:	str	r0, [fp, #-4]
   41384:	str	r1, [fp, #-8]
   41388:	str	r2, [fp, #-12]
   4138c:	str	r3, [fp, #-16]
   41390:	ldr	r0, [fp, #-4]
   41394:	ldrsb	r0, [r0, #27]
   41398:	cmp	r0, #0
   4139c:	beq	413c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x54>
   413a0:	ldr	r0, [fp, #-4]
   413a4:	ldr	r1, [fp, #-8]
   413a8:	ldr	r2, [fp, #-12]
   413ac:	ldr	r3, [fp, #-16]
   413b0:	ldr	ip, [fp, #8]
   413b4:	str	ip, [sp]
   413b8:	bl	3f38c <flatcc_json_printer_int32_vector_field@@Base>
   413bc:	b	41628 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   413c0:	ldr	r0, [fp, #-8]
   413c4:	ldr	r1, [fp, #-12]
   413c8:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   413cc:	str	r0, [fp, #-20]	; 0xffffffec
   413d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   413d4:	movw	r1, #0
   413d8:	cmp	r0, r1
   413dc:	beq	41628 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   413e0:	ldr	r0, [fp, #-8]
   413e4:	ldr	r1, [r0, #16]
   413e8:	add	r2, r1, #1
   413ec:	str	r2, [r0, #16]
   413f0:	cmp	r1, #0
   413f4:	beq	41410 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa4>
   413f8:	ldr	r0, [fp, #-4]
   413fc:	ldr	r1, [r0, #20]
   41400:	add	r2, r1, #1
   41404:	str	r2, [r0, #20]
   41408:	movw	r0, #44	; 0x2c
   4140c:	strb	r0, [r1]
   41410:	ldr	r0, [fp, #-20]	; 0xffffffec
   41414:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   41418:	str	r0, [fp, #-20]	; 0xffffffec
   4141c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41420:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41424:	str	r0, [fp, #-24]	; 0xffffffe8
   41428:	ldr	r0, [fp, #-20]	; 0xffffffec
   4142c:	add	r0, r0, #4
   41430:	str	r0, [fp, #-20]	; 0xffffffec
   41434:	ldr	r0, [fp, #-4]
   41438:	ldr	r1, [fp, #-16]
   4143c:	ldr	r2, [fp, #8]
   41440:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   41444:	ldr	r0, [fp, #-4]
   41448:	ldr	r1, [r0, #32]
   4144c:	add	r1, r1, #1
   41450:	str	r1, [r0, #32]
   41454:	ldr	r0, [fp, #-4]
   41458:	ldr	r1, [r0, #20]
   4145c:	add	r2, r1, #1
   41460:	str	r2, [r0, #20]
   41464:	movw	r0, #91	; 0x5b
   41468:	strb	r0, [r1]
   4146c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41470:	cmp	r0, #0
   41474:	beq	4150c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a0>
   41478:	b	4147c <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
   4147c:	ldr	r0, [fp, #-4]
   41480:	ldrsb	r0, [r0, #25]
   41484:	cmp	r0, #0
   41488:	beq	414b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x144>
   4148c:	ldr	r0, [fp, #-4]
   41490:	ldr	r1, [r0, #20]
   41494:	add	r2, r1, #1
   41498:	str	r2, [r0, #20]
   4149c:	movw	r0, #10
   414a0:	strb	r0, [r1]
   414a4:	ldr	r0, [fp, #-4]
   414a8:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   414ac:	b	414b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   414b0:	ldr	r0, [fp, #-4]
   414b4:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   414b8:	b	414bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   414bc:	ldr	r0, [fp, #12]
   414c0:	ldr	r1, [fp, #-4]
   414c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   414c8:	str	r0, [sp, #28]
   414cc:	mov	r0, r2
   414d0:	str	r1, [sp, #24]
   414d4:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   414d8:	ldr	r1, [sp, #24]
   414dc:	str	r0, [sp, #20]
   414e0:	mov	r0, r1
   414e4:	ldr	r1, [sp, #20]
   414e8:	ldr	r2, [sp, #28]
   414ec:	blx	r2
   414f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   414f4:	add	r0, r0, #4
   414f8:	str	r0, [fp, #-20]	; 0xffffffec
   414fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41500:	mvn	r1, #0
   41504:	add	r0, r0, r1
   41508:	str	r0, [fp, #-24]	; 0xffffffe8
   4150c:	b	41510 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   41510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41514:	mvn	r1, #0
   41518:	add	r1, r0, r1
   4151c:	str	r1, [fp, #-24]	; 0xffffffe8
   41520:	cmp	r0, #0
   41524:	beq	415c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x258>
   41528:	ldr	r0, [fp, #-4]
   4152c:	ldr	r1, [r0, #20]
   41530:	add	r2, r1, #1
   41534:	str	r2, [r0, #20]
   41538:	movw	r0, #44	; 0x2c
   4153c:	strb	r0, [r1]
   41540:	ldr	r0, [fp, #-4]
   41544:	ldrsb	r0, [r0, #25]
   41548:	cmp	r0, #0
   4154c:	beq	41574 <flatcc_json_printer_int32_enum_vector_field@@Base+0x208>
   41550:	ldr	r0, [fp, #-4]
   41554:	ldr	r1, [r0, #20]
   41558:	add	r2, r1, #1
   4155c:	str	r2, [r0, #20]
   41560:	movw	r0, #10
   41564:	strb	r0, [r1]
   41568:	ldr	r0, [fp, #-4]
   4156c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41570:	b	4157c <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   41574:	ldr	r0, [fp, #-4]
   41578:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   4157c:	b	41580 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   41580:	ldr	r0, [fp, #12]
   41584:	ldr	r1, [fp, #-4]
   41588:	ldr	r2, [fp, #-20]	; 0xffffffec
   4158c:	str	r0, [sp, #16]
   41590:	mov	r0, r2
   41594:	str	r1, [sp, #12]
   41598:	bl	3c218 <flatcc_json_printer_int32_field@@Base+0x104>
   4159c:	ldr	r1, [sp, #12]
   415a0:	str	r0, [sp, #8]
   415a4:	mov	r0, r1
   415a8:	ldr	r1, [sp, #8]
   415ac:	ldr	r2, [sp, #16]
   415b0:	blx	r2
   415b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   415b8:	add	r0, r0, #4
   415bc:	str	r0, [fp, #-20]	; 0xffffffec
   415c0:	b	41510 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   415c4:	b	415c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x25c>
   415c8:	ldr	r0, [fp, #-4]
   415cc:	ldrsb	r0, [r0, #25]
   415d0:	cmp	r0, #0
   415d4:	beq	4160c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a0>
   415d8:	ldr	r0, [fp, #-4]
   415dc:	ldr	r1, [r0, #20]
   415e0:	add	r2, r1, #1
   415e4:	str	r2, [r0, #20]
   415e8:	movw	r0, #10
   415ec:	strb	r0, [r1]
   415f0:	ldr	r0, [fp, #-4]
   415f4:	ldr	r1, [r0, #32]
   415f8:	mvn	r2, #0
   415fc:	add	r1, r1, r2
   41600:	str	r1, [r0, #32]
   41604:	ldr	r0, [fp, #-4]
   41608:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   4160c:	ldr	r0, [fp, #-4]
   41610:	ldr	r1, [r0, #20]
   41614:	add	r2, r1, #1
   41618:	str	r2, [r0, #20]
   4161c:	movw	r0, #93	; 0x5d
   41620:	strb	r0, [r1]
   41624:	b	41628 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2bc>
   41628:	mov	sp, fp
   4162c:	pop	{fp, pc}

00041630 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   41630:	push	{fp, lr}
   41634:	mov	fp, sp
   41638:	sub	sp, sp, #56	; 0x38
   4163c:	ldr	ip, [fp, #12]
   41640:	ldr	lr, [fp, #8]
   41644:	str	r0, [fp, #-4]
   41648:	str	r1, [fp, #-8]
   4164c:	str	r2, [fp, #-12]
   41650:	str	r3, [fp, #-16]
   41654:	ldr	r0, [fp, #-4]
   41658:	ldrsb	r0, [r0, #27]
   4165c:	cmp	r0, #0
   41660:	beq	41684 <flatcc_json_printer_int64_enum_vector_field@@Base+0x54>
   41664:	ldr	r0, [fp, #-4]
   41668:	ldr	r1, [fp, #-8]
   4166c:	ldr	r2, [fp, #-12]
   41670:	ldr	r3, [fp, #-16]
   41674:	ldr	ip, [fp, #8]
   41678:	str	ip, [sp]
   4167c:	bl	3f600 <flatcc_json_printer_int64_vector_field@@Base>
   41680:	b	418f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   41684:	ldr	r0, [fp, #-8]
   41688:	ldr	r1, [fp, #-12]
   4168c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   41690:	str	r0, [fp, #-20]	; 0xffffffec
   41694:	ldr	r0, [fp, #-20]	; 0xffffffec
   41698:	movw	r1, #0
   4169c:	cmp	r0, r1
   416a0:	beq	418f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   416a4:	ldr	r0, [fp, #-8]
   416a8:	ldr	r1, [r0, #16]
   416ac:	add	r2, r1, #1
   416b0:	str	r2, [r0, #16]
   416b4:	cmp	r1, #0
   416b8:	beq	416d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa4>
   416bc:	ldr	r0, [fp, #-4]
   416c0:	ldr	r1, [r0, #20]
   416c4:	add	r2, r1, #1
   416c8:	str	r2, [r0, #20]
   416cc:	movw	r0, #44	; 0x2c
   416d0:	strb	r0, [r1]
   416d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   416d8:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   416dc:	str	r0, [fp, #-20]	; 0xffffffec
   416e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   416e4:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   416e8:	str	r0, [fp, #-24]	; 0xffffffe8
   416ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   416f0:	add	r0, r0, #4
   416f4:	str	r0, [fp, #-20]	; 0xffffffec
   416f8:	ldr	r0, [fp, #-4]
   416fc:	ldr	r1, [fp, #-16]
   41700:	ldr	r2, [fp, #8]
   41704:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   41708:	ldr	r0, [fp, #-4]
   4170c:	ldr	r1, [r0, #32]
   41710:	add	r1, r1, #1
   41714:	str	r1, [r0, #32]
   41718:	ldr	r0, [fp, #-4]
   4171c:	ldr	r1, [r0, #20]
   41720:	add	r2, r1, #1
   41724:	str	r2, [r0, #20]
   41728:	movw	r0, #91	; 0x5b
   4172c:	strb	r0, [r1]
   41730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41734:	cmp	r0, #0
   41738:	beq	417d4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a4>
   4173c:	b	41740 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
   41740:	ldr	r0, [fp, #-4]
   41744:	ldrsb	r0, [r0, #25]
   41748:	cmp	r0, #0
   4174c:	beq	41774 <flatcc_json_printer_int64_enum_vector_field@@Base+0x144>
   41750:	ldr	r0, [fp, #-4]
   41754:	ldr	r1, [r0, #20]
   41758:	add	r2, r1, #1
   4175c:	str	r2, [r0, #20]
   41760:	movw	r0, #10
   41764:	strb	r0, [r1]
   41768:	ldr	r0, [fp, #-4]
   4176c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41770:	b	4177c <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   41774:	ldr	r0, [fp, #-4]
   41778:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   4177c:	b	41780 <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   41780:	ldr	r0, [fp, #12]
   41784:	ldr	r1, [fp, #-4]
   41788:	ldr	r2, [fp, #-20]	; 0xffffffec
   4178c:	str	r0, [sp, #28]
   41790:	mov	r0, r2
   41794:	str	r1, [sp, #24]
   41798:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   4179c:	ldr	r2, [sp, #24]
   417a0:	str	r0, [sp, #20]
   417a4:	mov	r0, r2
   417a8:	ldr	r2, [sp, #20]
   417ac:	mov	r3, r1
   417b0:	ldr	r1, [sp, #28]
   417b4:	blx	r1
   417b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   417bc:	add	r0, r0, #8
   417c0:	str	r0, [fp, #-20]	; 0xffffffec
   417c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   417c8:	mvn	r1, #0
   417cc:	add	r0, r0, r1
   417d0:	str	r0, [fp, #-24]	; 0xffffffe8
   417d4:	b	417d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   417d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   417dc:	mvn	r1, #0
   417e0:	add	r1, r0, r1
   417e4:	str	r1, [fp, #-24]	; 0xffffffe8
   417e8:	cmp	r0, #0
   417ec:	beq	41890 <flatcc_json_printer_int64_enum_vector_field@@Base+0x260>
   417f0:	ldr	r0, [fp, #-4]
   417f4:	ldr	r1, [r0, #20]
   417f8:	add	r2, r1, #1
   417fc:	str	r2, [r0, #20]
   41800:	movw	r0, #44	; 0x2c
   41804:	strb	r0, [r1]
   41808:	ldr	r0, [fp, #-4]
   4180c:	ldrsb	r0, [r0, #25]
   41810:	cmp	r0, #0
   41814:	beq	4183c <flatcc_json_printer_int64_enum_vector_field@@Base+0x20c>
   41818:	ldr	r0, [fp, #-4]
   4181c:	ldr	r1, [r0, #20]
   41820:	add	r2, r1, #1
   41824:	str	r2, [r0, #20]
   41828:	movw	r0, #10
   4182c:	strb	r0, [r1]
   41830:	ldr	r0, [fp, #-4]
   41834:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41838:	b	41844 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   4183c:	ldr	r0, [fp, #-4]
   41840:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   41844:	b	41848 <flatcc_json_printer_int64_enum_vector_field@@Base+0x218>
   41848:	ldr	r0, [fp, #12]
   4184c:	ldr	r1, [fp, #-4]
   41850:	ldr	r2, [fp, #-20]	; 0xffffffec
   41854:	str	r0, [sp, #16]
   41858:	mov	r0, r2
   4185c:	str	r1, [sp, #12]
   41860:	bl	3c370 <flatcc_json_printer_int64_field@@Base+0x134>
   41864:	ldr	r2, [sp, #12]
   41868:	str	r0, [sp, #8]
   4186c:	mov	r0, r2
   41870:	ldr	r2, [sp, #8]
   41874:	mov	r3, r1
   41878:	ldr	r1, [sp, #16]
   4187c:	blx	r1
   41880:	ldr	r0, [fp, #-20]	; 0xffffffec
   41884:	add	r0, r0, #8
   41888:	str	r0, [fp, #-20]	; 0xffffffec
   4188c:	b	417d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
   41890:	b	41894 <flatcc_json_printer_int64_enum_vector_field@@Base+0x264>
   41894:	ldr	r0, [fp, #-4]
   41898:	ldrsb	r0, [r0, #25]
   4189c:	cmp	r0, #0
   418a0:	beq	418d8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   418a4:	ldr	r0, [fp, #-4]
   418a8:	ldr	r1, [r0, #20]
   418ac:	add	r2, r1, #1
   418b0:	str	r2, [r0, #20]
   418b4:	movw	r0, #10
   418b8:	strb	r0, [r1]
   418bc:	ldr	r0, [fp, #-4]
   418c0:	ldr	r1, [r0, #32]
   418c4:	mvn	r2, #0
   418c8:	add	r1, r1, r2
   418cc:	str	r1, [r0, #32]
   418d0:	ldr	r0, [fp, #-4]
   418d4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   418d8:	ldr	r0, [fp, #-4]
   418dc:	ldr	r1, [r0, #20]
   418e0:	add	r2, r1, #1
   418e4:	str	r2, [r0, #20]
   418e8:	movw	r0, #93	; 0x5d
   418ec:	strb	r0, [r1]
   418f0:	b	418f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   418f4:	mov	sp, fp
   418f8:	pop	{fp, pc}

000418fc <flatcc_json_printer_bool_enum_vector_field@@Base>:
   418fc:	push	{fp, lr}
   41900:	mov	fp, sp
   41904:	sub	sp, sp, #56	; 0x38
   41908:	ldr	ip, [fp, #12]
   4190c:	ldr	lr, [fp, #8]
   41910:	str	r0, [fp, #-4]
   41914:	str	r1, [fp, #-8]
   41918:	str	r2, [fp, #-12]
   4191c:	str	r3, [fp, #-16]
   41920:	ldr	r0, [fp, #-4]
   41924:	ldrsb	r0, [r0, #27]
   41928:	cmp	r0, #0
   4192c:	beq	41950 <flatcc_json_printer_bool_enum_vector_field@@Base+0x54>
   41930:	ldr	r0, [fp, #-4]
   41934:	ldr	r1, [fp, #-8]
   41938:	ldr	r2, [fp, #-12]
   4193c:	ldr	r3, [fp, #-16]
   41940:	ldr	ip, [fp, #8]
   41944:	str	ip, [sp]
   41948:	bl	3f874 <flatcc_json_printer_bool_vector_field@@Base>
   4194c:	b	41bc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   41950:	ldr	r0, [fp, #-8]
   41954:	ldr	r1, [fp, #-12]
   41958:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   4195c:	str	r0, [fp, #-20]	; 0xffffffec
   41960:	ldr	r0, [fp, #-20]	; 0xffffffec
   41964:	movw	r1, #0
   41968:	cmp	r0, r1
   4196c:	beq	41bc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   41970:	ldr	r0, [fp, #-8]
   41974:	ldr	r1, [r0, #16]
   41978:	add	r2, r1, #1
   4197c:	str	r2, [r0, #16]
   41980:	cmp	r1, #0
   41984:	beq	419a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa4>
   41988:	ldr	r0, [fp, #-4]
   4198c:	ldr	r1, [r0, #20]
   41990:	add	r2, r1, #1
   41994:	str	r2, [r0, #20]
   41998:	movw	r0, #44	; 0x2c
   4199c:	strb	r0, [r1]
   419a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   419a4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   419a8:	str	r0, [fp, #-20]	; 0xffffffec
   419ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   419b0:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   419b4:	str	r0, [fp, #-24]	; 0xffffffe8
   419b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   419bc:	add	r0, r0, #4
   419c0:	str	r0, [fp, #-20]	; 0xffffffec
   419c4:	ldr	r0, [fp, #-4]
   419c8:	ldr	r1, [fp, #-16]
   419cc:	ldr	r2, [fp, #8]
   419d0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   419d4:	ldr	r0, [fp, #-4]
   419d8:	ldr	r1, [r0, #32]
   419dc:	add	r1, r1, #1
   419e0:	str	r1, [r0, #32]
   419e4:	ldr	r0, [fp, #-4]
   419e8:	ldr	r1, [r0, #20]
   419ec:	add	r2, r1, #1
   419f0:	str	r2, [r0, #20]
   419f4:	movw	r0, #91	; 0x5b
   419f8:	strb	r0, [r1]
   419fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41a00:	cmp	r0, #0
   41a04:	beq	41aa0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a4>
   41a08:	b	41a0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
   41a0c:	ldr	r0, [fp, #-4]
   41a10:	ldrsb	r0, [r0, #25]
   41a14:	cmp	r0, #0
   41a18:	beq	41a40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x144>
   41a1c:	ldr	r0, [fp, #-4]
   41a20:	ldr	r1, [r0, #20]
   41a24:	add	r2, r1, #1
   41a28:	str	r2, [r0, #20]
   41a2c:	movw	r0, #10
   41a30:	strb	r0, [r1]
   41a34:	ldr	r0, [fp, #-4]
   41a38:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41a3c:	b	41a48 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   41a40:	ldr	r0, [fp, #-4]
   41a44:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   41a48:	b	41a4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
   41a4c:	ldr	r0, [fp, #12]
   41a50:	ldr	r1, [fp, #-4]
   41a54:	ldr	r2, [fp, #-20]	; 0xffffffec
   41a58:	str	r0, [sp, #28]
   41a5c:	mov	r0, r2
   41a60:	str	r1, [sp, #24]
   41a64:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   41a68:	ldr	r1, [sp, #24]
   41a6c:	str	r0, [sp, #20]
   41a70:	mov	r0, r1
   41a74:	ldr	r2, [sp, #20]
   41a78:	and	r1, r2, #255	; 0xff
   41a7c:	ldr	r3, [sp, #28]
   41a80:	blx	r3
   41a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   41a88:	add	r0, r0, #1
   41a8c:	str	r0, [fp, #-20]	; 0xffffffec
   41a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41a94:	mvn	r1, #0
   41a98:	add	r0, r0, r1
   41a9c:	str	r0, [fp, #-24]	; 0xffffffe8
   41aa0:	b	41aa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   41aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41aa8:	mvn	r1, #0
   41aac:	add	r1, r0, r1
   41ab0:	str	r1, [fp, #-24]	; 0xffffffe8
   41ab4:	cmp	r0, #0
   41ab8:	beq	41b5c <flatcc_json_printer_bool_enum_vector_field@@Base+0x260>
   41abc:	ldr	r0, [fp, #-4]
   41ac0:	ldr	r1, [r0, #20]
   41ac4:	add	r2, r1, #1
   41ac8:	str	r2, [r0, #20]
   41acc:	movw	r0, #44	; 0x2c
   41ad0:	strb	r0, [r1]
   41ad4:	ldr	r0, [fp, #-4]
   41ad8:	ldrsb	r0, [r0, #25]
   41adc:	cmp	r0, #0
   41ae0:	beq	41b08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x20c>
   41ae4:	ldr	r0, [fp, #-4]
   41ae8:	ldr	r1, [r0, #20]
   41aec:	add	r2, r1, #1
   41af0:	str	r2, [r0, #20]
   41af4:	movw	r0, #10
   41af8:	strb	r0, [r1]
   41afc:	ldr	r0, [fp, #-4]
   41b00:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41b04:	b	41b10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x214>
   41b08:	ldr	r0, [fp, #-4]
   41b0c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   41b10:	b	41b14 <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   41b14:	ldr	r0, [fp, #12]
   41b18:	ldr	r1, [fp, #-4]
   41b1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   41b20:	str	r0, [sp, #16]
   41b24:	mov	r0, r2
   41b28:	str	r1, [sp, #12]
   41b2c:	bl	3c4a8 <flatcc_json_printer_bool_field@@Base+0x104>
   41b30:	ldr	r1, [sp, #12]
   41b34:	str	r0, [sp, #8]
   41b38:	mov	r0, r1
   41b3c:	ldr	r2, [sp, #8]
   41b40:	and	r1, r2, #255	; 0xff
   41b44:	ldr	r3, [sp, #16]
   41b48:	blx	r3
   41b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   41b50:	add	r0, r0, #1
   41b54:	str	r0, [fp, #-20]	; 0xffffffec
   41b58:	b	41aa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
   41b5c:	b	41b60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x264>
   41b60:	ldr	r0, [fp, #-4]
   41b64:	ldrsb	r0, [r0, #25]
   41b68:	cmp	r0, #0
   41b6c:	beq	41ba4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   41b70:	ldr	r0, [fp, #-4]
   41b74:	ldr	r1, [r0, #20]
   41b78:	add	r2, r1, #1
   41b7c:	str	r2, [r0, #20]
   41b80:	movw	r0, #10
   41b84:	strb	r0, [r1]
   41b88:	ldr	r0, [fp, #-4]
   41b8c:	ldr	r1, [r0, #32]
   41b90:	mvn	r2, #0
   41b94:	add	r1, r1, r2
   41b98:	str	r1, [r0, #32]
   41b9c:	ldr	r0, [fp, #-4]
   41ba0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41ba4:	ldr	r0, [fp, #-4]
   41ba8:	ldr	r1, [r0, #20]
   41bac:	add	r2, r1, #1
   41bb0:	str	r2, [r0, #20]
   41bb4:	movw	r0, #93	; 0x5d
   41bb8:	strb	r0, [r1]
   41bbc:	b	41bc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   41bc0:	mov	sp, fp
   41bc4:	pop	{fp, pc}

00041bc8 <flatcc_json_printer_struct_vector_field@@Base>:
   41bc8:	push	{r4, sl, fp, lr}
   41bcc:	add	fp, sp, #8
   41bd0:	sub	sp, sp, #48	; 0x30
   41bd4:	ldr	ip, [fp, #16]
   41bd8:	ldr	lr, [fp, #12]
   41bdc:	ldr	r4, [fp, #8]
   41be0:	str	r0, [fp, #-12]
   41be4:	str	r1, [fp, #-16]
   41be8:	str	r2, [fp, #-20]	; 0xffffffec
   41bec:	str	r3, [fp, #-24]	; 0xffffffe8
   41bf0:	ldr	r0, [fp, #-16]
   41bf4:	ldr	r1, [fp, #-20]	; 0xffffffec
   41bf8:	str	ip, [sp, #20]
   41bfc:	str	lr, [sp, #16]
   41c00:	str	r4, [sp, #12]
   41c04:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   41c08:	str	r0, [sp, #28]
   41c0c:	ldr	r0, [sp, #28]
   41c10:	movw	r1, #0
   41c14:	cmp	r0, r1
   41c18:	beq	41f44 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   41c1c:	ldr	r0, [fp, #-16]
   41c20:	ldr	r1, [r0, #16]
   41c24:	add	r2, r1, #1
   41c28:	str	r2, [r0, #16]
   41c2c:	cmp	r1, #0
   41c30:	beq	41c4c <flatcc_json_printer_struct_vector_field@@Base+0x84>
   41c34:	ldr	r0, [fp, #-12]
   41c38:	ldr	r1, [r0, #20]
   41c3c:	add	r2, r1, #1
   41c40:	str	r2, [r0, #20]
   41c44:	movw	r0, #44	; 0x2c
   41c48:	strb	r0, [r1]
   41c4c:	ldr	r0, [sp, #28]
   41c50:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   41c54:	str	r0, [sp, #28]
   41c58:	ldr	r0, [sp, #28]
   41c5c:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41c60:	str	r0, [sp, #24]
   41c64:	ldr	r0, [sp, #28]
   41c68:	add	r0, r0, #4
   41c6c:	str	r0, [sp, #28]
   41c70:	ldr	r0, [fp, #-12]
   41c74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   41c78:	ldr	r2, [fp, #8]
   41c7c:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   41c80:	ldr	r0, [fp, #-12]
   41c84:	ldr	r1, [r0, #32]
   41c88:	add	r1, r1, #1
   41c8c:	str	r1, [r0, #32]
   41c90:	ldr	r0, [fp, #-12]
   41c94:	ldr	r1, [r0, #20]
   41c98:	add	r2, r1, #1
   41c9c:	str	r2, [r0, #20]
   41ca0:	movw	r0, #91	; 0x5b
   41ca4:	strb	r0, [r1]
   41ca8:	ldr	r0, [sp, #24]
   41cac:	cmp	r0, #0
   41cb0:	beq	41db0 <flatcc_json_printer_struct_vector_field@@Base+0x1e8>
   41cb4:	b	41cb8 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
   41cb8:	ldr	r0, [fp, #-12]
   41cbc:	ldrsb	r0, [r0, #25]
   41cc0:	cmp	r0, #0
   41cc4:	beq	41cec <flatcc_json_printer_struct_vector_field@@Base+0x124>
   41cc8:	ldr	r0, [fp, #-12]
   41ccc:	ldr	r1, [r0, #20]
   41cd0:	add	r2, r1, #1
   41cd4:	str	r2, [r0, #20]
   41cd8:	movw	r0, #10
   41cdc:	strb	r0, [r1]
   41ce0:	ldr	r0, [fp, #-12]
   41ce4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41ce8:	b	41cf4 <flatcc_json_printer_struct_vector_field@@Base+0x12c>
   41cec:	ldr	r0, [fp, #-12]
   41cf0:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   41cf4:	b	41cf8 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   41cf8:	b	41cfc <flatcc_json_printer_struct_vector_field@@Base+0x134>
   41cfc:	ldr	r0, [fp, #-12]
   41d00:	ldr	r1, [r0, #32]
   41d04:	add	r1, r1, #1
   41d08:	str	r1, [r0, #32]
   41d0c:	ldr	r0, [fp, #-12]
   41d10:	ldr	r1, [r0, #20]
   41d14:	add	r2, r1, #1
   41d18:	str	r2, [r0, #20]
   41d1c:	movw	r0, #123	; 0x7b
   41d20:	strb	r0, [r1]
   41d24:	ldr	r0, [fp, #16]
   41d28:	ldr	r1, [fp, #-12]
   41d2c:	ldr	r2, [sp, #28]
   41d30:	str	r0, [sp, #8]
   41d34:	mov	r0, r1
   41d38:	mov	r1, r2
   41d3c:	ldr	r2, [sp, #8]
   41d40:	blx	r2
   41d44:	ldr	r0, [fp, #-12]
   41d48:	ldrsb	r0, [r0, #25]
   41d4c:	cmp	r0, #0
   41d50:	beq	41d88 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   41d54:	ldr	r0, [fp, #-12]
   41d58:	ldr	r1, [r0, #20]
   41d5c:	add	r2, r1, #1
   41d60:	str	r2, [r0, #20]
   41d64:	movw	r0, #10
   41d68:	strb	r0, [r1]
   41d6c:	ldr	r0, [fp, #-12]
   41d70:	ldr	r1, [r0, #32]
   41d74:	mvn	r2, #0
   41d78:	add	r1, r1, r2
   41d7c:	str	r1, [r0, #32]
   41d80:	ldr	r0, [fp, #-12]
   41d84:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41d88:	ldr	r0, [fp, #-12]
   41d8c:	ldr	r1, [r0, #20]
   41d90:	add	r2, r1, #1
   41d94:	str	r2, [r0, #20]
   41d98:	movw	r0, #125	; 0x7d
   41d9c:	strb	r0, [r1]
   41da0:	ldr	r0, [sp, #24]
   41da4:	mvn	r1, #0
   41da8:	add	r0, r0, r1
   41dac:	str	r0, [sp, #24]
   41db0:	b	41db4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   41db4:	ldr	r0, [sp, #24]
   41db8:	mvn	r1, #0
   41dbc:	add	r1, r0, r1
   41dc0:	str	r1, [sp, #24]
   41dc4:	cmp	r0, #0
   41dc8:	beq	41ee0 <flatcc_json_printer_struct_vector_field@@Base+0x318>
   41dcc:	ldr	r0, [fp, #12]
   41dd0:	ldr	r1, [sp, #28]
   41dd4:	add	r0, r1, r0
   41dd8:	str	r0, [sp, #28]
   41ddc:	ldr	r0, [fp, #-12]
   41de0:	ldr	r1, [r0, #20]
   41de4:	add	r2, r1, #1
   41de8:	str	r2, [r0, #20]
   41dec:	movw	r0, #44	; 0x2c
   41df0:	strb	r0, [r1]
   41df4:	ldr	r0, [fp, #-12]
   41df8:	ldrsb	r0, [r0, #25]
   41dfc:	cmp	r0, #0
   41e00:	beq	41e28 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   41e04:	ldr	r0, [fp, #-12]
   41e08:	ldr	r1, [r0, #20]
   41e0c:	add	r2, r1, #1
   41e10:	str	r2, [r0, #20]
   41e14:	movw	r0, #10
   41e18:	strb	r0, [r1]
   41e1c:	ldr	r0, [fp, #-12]
   41e20:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41e24:	b	41e30 <flatcc_json_printer_struct_vector_field@@Base+0x268>
   41e28:	ldr	r0, [fp, #-12]
   41e2c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   41e30:	b	41e34 <flatcc_json_printer_struct_vector_field@@Base+0x26c>
   41e34:	b	41e38 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   41e38:	ldr	r0, [fp, #-12]
   41e3c:	ldr	r1, [r0, #32]
   41e40:	add	r1, r1, #1
   41e44:	str	r1, [r0, #32]
   41e48:	ldr	r0, [fp, #-12]
   41e4c:	ldr	r1, [r0, #20]
   41e50:	add	r2, r1, #1
   41e54:	str	r2, [r0, #20]
   41e58:	movw	r0, #123	; 0x7b
   41e5c:	strb	r0, [r1]
   41e60:	ldr	r0, [fp, #16]
   41e64:	ldr	r1, [fp, #-12]
   41e68:	ldr	r2, [sp, #28]
   41e6c:	str	r0, [sp, #4]
   41e70:	mov	r0, r1
   41e74:	mov	r1, r2
   41e78:	ldr	r2, [sp, #4]
   41e7c:	blx	r2
   41e80:	ldr	r0, [fp, #-12]
   41e84:	ldrsb	r0, [r0, #25]
   41e88:	cmp	r0, #0
   41e8c:	beq	41ec4 <flatcc_json_printer_struct_vector_field@@Base+0x2fc>
   41e90:	ldr	r0, [fp, #-12]
   41e94:	ldr	r1, [r0, #20]
   41e98:	add	r2, r1, #1
   41e9c:	str	r2, [r0, #20]
   41ea0:	movw	r0, #10
   41ea4:	strb	r0, [r1]
   41ea8:	ldr	r0, [fp, #-12]
   41eac:	ldr	r1, [r0, #32]
   41eb0:	mvn	r2, #0
   41eb4:	add	r1, r1, r2
   41eb8:	str	r1, [r0, #32]
   41ebc:	ldr	r0, [fp, #-12]
   41ec0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41ec4:	ldr	r0, [fp, #-12]
   41ec8:	ldr	r1, [r0, #20]
   41ecc:	add	r2, r1, #1
   41ed0:	str	r2, [r0, #20]
   41ed4:	movw	r0, #125	; 0x7d
   41ed8:	strb	r0, [r1]
   41edc:	b	41db4 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   41ee0:	b	41ee4 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   41ee4:	ldr	r0, [fp, #-12]
   41ee8:	ldrsb	r0, [r0, #25]
   41eec:	cmp	r0, #0
   41ef0:	beq	41f28 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   41ef4:	ldr	r0, [fp, #-12]
   41ef8:	ldr	r1, [r0, #20]
   41efc:	add	r2, r1, #1
   41f00:	str	r2, [r0, #20]
   41f04:	movw	r0, #10
   41f08:	strb	r0, [r1]
   41f0c:	ldr	r0, [fp, #-12]
   41f10:	ldr	r1, [r0, #32]
   41f14:	mvn	r2, #0
   41f18:	add	r1, r1, r2
   41f1c:	str	r1, [r0, #32]
   41f20:	ldr	r0, [fp, #-12]
   41f24:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   41f28:	ldr	r0, [fp, #-12]
   41f2c:	ldr	r1, [r0, #20]
   41f30:	add	r2, r1, #1
   41f34:	str	r2, [r0, #20]
   41f38:	movw	r0, #93	; 0x5d
   41f3c:	strb	r0, [r1]
   41f40:	b	41f44 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   41f44:	sub	sp, fp, #8
   41f48:	pop	{r4, sl, fp, pc}

00041f4c <flatcc_json_printer_string_vector_field@@Base>:
   41f4c:	push	{fp, lr}
   41f50:	mov	fp, sp
   41f54:	sub	sp, sp, #48	; 0x30
   41f58:	ldr	ip, [fp, #8]
   41f5c:	str	r0, [fp, #-4]
   41f60:	str	r1, [fp, #-8]
   41f64:	str	r2, [fp, #-12]
   41f68:	str	r3, [fp, #-16]
   41f6c:	ldr	r0, [fp, #-8]
   41f70:	ldr	r1, [fp, #-12]
   41f74:	str	ip, [sp, #20]
   41f78:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   41f7c:	str	r0, [fp, #-20]	; 0xffffffec
   41f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   41f84:	movw	r1, #0
   41f88:	cmp	r0, r1
   41f8c:	beq	421b4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   41f90:	ldr	r0, [fp, #-8]
   41f94:	ldr	r1, [r0, #16]
   41f98:	add	r2, r1, #1
   41f9c:	str	r2, [r0, #16]
   41fa0:	cmp	r1, #0
   41fa4:	beq	41fc0 <flatcc_json_printer_string_vector_field@@Base+0x74>
   41fa8:	ldr	r0, [fp, #-4]
   41fac:	ldr	r1, [r0, #20]
   41fb0:	add	r2, r1, #1
   41fb4:	str	r2, [r0, #20]
   41fb8:	movw	r0, #44	; 0x2c
   41fbc:	strb	r0, [r1]
   41fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   41fc4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   41fc8:	str	r0, [fp, #-20]	; 0xffffffec
   41fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   41fd0:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   41fd4:	str	r0, [sp, #24]
   41fd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   41fdc:	add	r0, r0, #4
   41fe0:	str	r0, [fp, #-20]	; 0xffffffec
   41fe4:	ldr	r0, [fp, #-4]
   41fe8:	ldr	r1, [fp, #-16]
   41fec:	ldr	r2, [fp, #8]
   41ff0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   41ff4:	ldr	r0, [fp, #-4]
   41ff8:	ldr	r1, [r0, #32]
   41ffc:	add	r1, r1, #1
   42000:	str	r1, [r0, #32]
   42004:	ldr	r0, [fp, #-4]
   42008:	ldr	r1, [r0, #20]
   4200c:	add	r2, r1, #1
   42010:	str	r2, [r0, #20]
   42014:	movw	r0, #91	; 0x5b
   42018:	strb	r0, [r1]
   4201c:	ldr	r0, [sp, #24]
   42020:	cmp	r0, #0
   42024:	beq	420a4 <flatcc_json_printer_string_vector_field@@Base+0x158>
   42028:	b	4202c <flatcc_json_printer_string_vector_field@@Base+0xe0>
   4202c:	ldr	r0, [fp, #-4]
   42030:	ldrsb	r0, [r0, #25]
   42034:	cmp	r0, #0
   42038:	beq	42060 <flatcc_json_printer_string_vector_field@@Base+0x114>
   4203c:	ldr	r0, [fp, #-4]
   42040:	ldr	r1, [r0, #20]
   42044:	add	r2, r1, #1
   42048:	str	r2, [r0, #20]
   4204c:	movw	r0, #10
   42050:	strb	r0, [r1]
   42054:	ldr	r0, [fp, #-4]
   42058:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   4205c:	b	42068 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   42060:	ldr	r0, [fp, #-4]
   42064:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   42068:	b	4206c <flatcc_json_printer_string_vector_field@@Base+0x120>
   4206c:	ldr	r0, [fp, #-4]
   42070:	ldr	r1, [fp, #-20]	; 0xffffffec
   42074:	str	r0, [sp, #16]
   42078:	mov	r0, r1
   4207c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42080:	ldr	r1, [sp, #16]
   42084:	str	r0, [sp, #12]
   42088:	mov	r0, r1
   4208c:	ldr	r1, [sp, #12]
   42090:	bl	3b624 <flatcc_json_printer_string_field@@Base+0x214>
   42094:	ldr	r0, [sp, #24]
   42098:	mvn	r1, #0
   4209c:	add	r0, r0, r1
   420a0:	str	r0, [sp, #24]
   420a4:	b	420a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   420a8:	ldr	r0, [sp, #24]
   420ac:	mvn	r1, #0
   420b0:	add	r1, r0, r1
   420b4:	str	r1, [sp, #24]
   420b8:	cmp	r0, #0
   420bc:	beq	42150 <flatcc_json_printer_string_vector_field@@Base+0x204>
   420c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   420c4:	add	r0, r0, #4
   420c8:	str	r0, [fp, #-20]	; 0xffffffec
   420cc:	ldr	r0, [fp, #-4]
   420d0:	ldr	r1, [r0, #20]
   420d4:	add	r2, r1, #1
   420d8:	str	r2, [r0, #20]
   420dc:	movw	r0, #44	; 0x2c
   420e0:	strb	r0, [r1]
   420e4:	ldr	r0, [fp, #-4]
   420e8:	ldrsb	r0, [r0, #25]
   420ec:	cmp	r0, #0
   420f0:	beq	42118 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   420f4:	ldr	r0, [fp, #-4]
   420f8:	ldr	r1, [r0, #20]
   420fc:	add	r2, r1, #1
   42100:	str	r2, [r0, #20]
   42104:	movw	r0, #10
   42108:	strb	r0, [r1]
   4210c:	ldr	r0, [fp, #-4]
   42110:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   42114:	b	42120 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   42118:	ldr	r0, [fp, #-4]
   4211c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   42120:	b	42124 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
   42124:	ldr	r0, [fp, #-4]
   42128:	ldr	r1, [fp, #-20]	; 0xffffffec
   4212c:	str	r0, [sp, #8]
   42130:	mov	r0, r1
   42134:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42138:	ldr	r1, [sp, #8]
   4213c:	str	r0, [sp, #4]
   42140:	mov	r0, r1
   42144:	ldr	r1, [sp, #4]
   42148:	bl	3b624 <flatcc_json_printer_string_field@@Base+0x214>
   4214c:	b	420a8 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   42150:	b	42154 <flatcc_json_printer_string_vector_field@@Base+0x208>
   42154:	ldr	r0, [fp, #-4]
   42158:	ldrsb	r0, [r0, #25]
   4215c:	cmp	r0, #0
   42160:	beq	42198 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   42164:	ldr	r0, [fp, #-4]
   42168:	ldr	r1, [r0, #20]
   4216c:	add	r2, r1, #1
   42170:	str	r2, [r0, #20]
   42174:	movw	r0, #10
   42178:	strb	r0, [r1]
   4217c:	ldr	r0, [fp, #-4]
   42180:	ldr	r1, [r0, #32]
   42184:	mvn	r2, #0
   42188:	add	r1, r1, r2
   4218c:	str	r1, [r0, #32]
   42190:	ldr	r0, [fp, #-4]
   42194:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   42198:	ldr	r0, [fp, #-4]
   4219c:	ldr	r1, [r0, #20]
   421a0:	add	r2, r1, #1
   421a4:	str	r2, [r0, #20]
   421a8:	movw	r0, #93	; 0x5d
   421ac:	strb	r0, [r1]
   421b0:	b	421b4 <flatcc_json_printer_string_vector_field@@Base+0x268>
   421b4:	mov	sp, fp
   421b8:	pop	{fp, pc}

000421bc <flatcc_json_printer_table_vector_field@@Base>:
   421bc:	push	{fp, lr}
   421c0:	mov	fp, sp
   421c4:	sub	sp, sp, #48	; 0x30
   421c8:	ldr	ip, [fp, #12]
   421cc:	ldr	lr, [fp, #8]
   421d0:	str	r0, [fp, #-4]
   421d4:	str	r1, [fp, #-8]
   421d8:	str	r2, [fp, #-12]
   421dc:	str	r3, [fp, #-16]
   421e0:	ldr	r0, [fp, #-8]
   421e4:	ldr	r1, [fp, #-12]
   421e8:	str	ip, [sp, #20]
   421ec:	str	lr, [sp, #16]
   421f0:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   421f4:	str	r0, [fp, #-20]	; 0xffffffec
   421f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   421fc:	movw	r1, #0
   42200:	cmp	r0, r1
   42204:	beq	423c0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   42208:	ldr	r0, [fp, #-8]
   4220c:	ldr	r1, [r0, #16]
   42210:	add	r2, r1, #1
   42214:	str	r2, [r0, #16]
   42218:	cmp	r1, #0
   4221c:	beq	42238 <flatcc_json_printer_table_vector_field@@Base+0x7c>
   42220:	ldr	r0, [fp, #-4]
   42224:	ldr	r1, [r0, #20]
   42228:	add	r2, r1, #1
   4222c:	str	r2, [r0, #20]
   42230:	movw	r0, #44	; 0x2c
   42234:	strb	r0, [r1]
   42238:	ldr	r0, [fp, #-20]	; 0xffffffec
   4223c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42240:	str	r0, [fp, #-20]	; 0xffffffec
   42244:	ldr	r0, [fp, #-20]	; 0xffffffec
   42248:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   4224c:	str	r0, [sp, #24]
   42250:	ldr	r0, [fp, #-20]	; 0xffffffec
   42254:	add	r0, r0, #4
   42258:	str	r0, [fp, #-20]	; 0xffffffec
   4225c:	ldr	r0, [fp, #-4]
   42260:	ldr	r1, [fp, #-16]
   42264:	ldr	r2, [fp, #8]
   42268:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   4226c:	ldr	r0, [fp, #-4]
   42270:	ldr	r1, [r0, #32]
   42274:	add	r1, r1, #1
   42278:	str	r1, [r0, #32]
   4227c:	ldr	r0, [fp, #-4]
   42280:	ldr	r1, [r0, #20]
   42284:	add	r2, r1, #1
   42288:	str	r2, [r0, #20]
   4228c:	movw	r0, #91	; 0x5b
   42290:	strb	r0, [r1]
   42294:	ldr	r0, [sp, #24]
   42298:	cmp	r0, #0
   4229c:	beq	422e4 <flatcc_json_printer_table_vector_field@@Base+0x128>
   422a0:	ldr	r0, [fp, #-4]
   422a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   422a8:	str	r0, [sp, #12]
   422ac:	mov	r0, r1
   422b0:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   422b4:	ldr	r1, [fp, #-8]
   422b8:	ldr	r2, [r1, #12]
   422bc:	ldr	r3, [fp, #12]
   422c0:	ldr	r1, [sp, #12]
   422c4:	str	r0, [sp, #8]
   422c8:	mov	r0, r1
   422cc:	ldr	r1, [sp, #8]
   422d0:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   422d4:	ldr	r0, [sp, #24]
   422d8:	mvn	r1, #0
   422dc:	add	r0, r0, r1
   422e0:	str	r0, [sp, #24]
   422e4:	b	422e8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   422e8:	ldr	r0, [sp, #24]
   422ec:	mvn	r1, #0
   422f0:	add	r1, r0, r1
   422f4:	str	r1, [sp, #24]
   422f8:	cmp	r0, #0
   422fc:	beq	4235c <flatcc_json_printer_table_vector_field@@Base+0x1a0>
   42300:	ldr	r0, [fp, #-20]	; 0xffffffec
   42304:	add	r0, r0, #4
   42308:	str	r0, [fp, #-20]	; 0xffffffec
   4230c:	ldr	r0, [fp, #-4]
   42310:	ldr	r1, [r0, #20]
   42314:	add	r2, r1, #1
   42318:	str	r2, [r0, #20]
   4231c:	movw	r0, #44	; 0x2c
   42320:	strb	r0, [r1]
   42324:	ldr	r0, [fp, #-4]
   42328:	ldr	r1, [fp, #-20]	; 0xffffffec
   4232c:	str	r0, [sp, #4]
   42330:	mov	r0, r1
   42334:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42338:	ldr	r1, [fp, #-8]
   4233c:	ldr	r2, [r1, #12]
   42340:	ldr	r3, [fp, #12]
   42344:	ldr	r1, [sp, #4]
   42348:	str	r0, [sp]
   4234c:	mov	r0, r1
   42350:	ldr	r1, [sp]
   42354:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42358:	b	422e8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   4235c:	b	42360 <flatcc_json_printer_table_vector_field@@Base+0x1a4>
   42360:	ldr	r0, [fp, #-4]
   42364:	ldrsb	r0, [r0, #25]
   42368:	cmp	r0, #0
   4236c:	beq	423a4 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   42370:	ldr	r0, [fp, #-4]
   42374:	ldr	r1, [r0, #20]
   42378:	add	r2, r1, #1
   4237c:	str	r2, [r0, #20]
   42380:	movw	r0, #10
   42384:	strb	r0, [r1]
   42388:	ldr	r0, [fp, #-4]
   4238c:	ldr	r1, [r0, #32]
   42390:	mvn	r2, #0
   42394:	add	r1, r1, r2
   42398:	str	r1, [r0, #32]
   4239c:	ldr	r0, [fp, #-4]
   423a0:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   423a4:	ldr	r0, [fp, #-4]
   423a8:	ldr	r1, [r0, #20]
   423ac:	add	r2, r1, #1
   423b0:	str	r2, [r0, #20]
   423b4:	movw	r0, #93	; 0x5d
   423b8:	strb	r0, [r1]
   423bc:	b	423c0 <flatcc_json_printer_table_vector_field@@Base+0x204>
   423c0:	mov	sp, fp
   423c4:	pop	{fp, pc}
   423c8:	push	{fp, lr}
   423cc:	mov	fp, sp
   423d0:	sub	sp, sp, #48	; 0x30
   423d4:	str	r0, [fp, #-4]
   423d8:	str	r1, [fp, #-8]
   423dc:	str	r2, [fp, #-12]
   423e0:	str	r3, [fp, #-16]
   423e4:	ldr	r0, [fp, #-12]
   423e8:	mvn	r1, #0
   423ec:	add	r0, r0, r1
   423f0:	str	r0, [fp, #-12]
   423f4:	cmp	r0, #0
   423f8:	bne	4240c <flatcc_json_printer_table_vector_field@@Base+0x250>
   423fc:	ldr	r0, [fp, #-4]
   42400:	movw	r1, #2
   42404:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   42408:	b	42500 <flatcc_json_printer_table_vector_field@@Base+0x344>
   4240c:	b	42410 <flatcc_json_printer_table_vector_field@@Base+0x254>
   42410:	ldr	r0, [fp, #-4]
   42414:	ldr	r1, [r0, #32]
   42418:	add	r1, r1, #1
   4241c:	str	r1, [r0, #32]
   42420:	ldr	r0, [fp, #-4]
   42424:	ldr	r1, [r0, #20]
   42428:	add	r2, r1, #1
   4242c:	str	r2, [r0, #20]
   42430:	movw	r0, #123	; 0x7b
   42434:	strb	r0, [r1]
   42438:	movw	r0, #0
   4243c:	str	r0, [sp, #28]
   42440:	ldr	r0, [fp, #-12]
   42444:	str	r0, [sp, #24]
   42448:	ldr	r0, [fp, #-8]
   4244c:	str	r0, [sp, #12]
   42450:	ldr	r0, [fp, #-8]
   42454:	ldr	r1, [fp, #-8]
   42458:	str	r0, [sp, #8]
   4245c:	mov	r0, r1
   42460:	bl	45bb4 <flatcc_json_printer_clear@@Base+0x1c90>
   42464:	movw	r1, #0
   42468:	sub	r0, r1, r0
   4246c:	ldr	r1, [sp, #8]
   42470:	add	r0, r1, r0
   42474:	str	r0, [sp, #16]
   42478:	ldr	r0, [sp, #16]
   4247c:	bl	45624 <flatcc_json_printer_clear@@Base+0x1700>
   42480:	uxth	r0, r0
   42484:	str	r0, [sp, #20]
   42488:	ldr	r0, [fp, #-16]
   4248c:	ldr	r1, [fp, #-4]
   42490:	str	r0, [sp, #4]
   42494:	mov	r0, r1
   42498:	add	r1, sp, #12
   4249c:	ldr	r2, [sp, #4]
   424a0:	blx	r2
   424a4:	ldr	r0, [fp, #-4]
   424a8:	ldrsb	r0, [r0, #25]
   424ac:	cmp	r0, #0
   424b0:	beq	424e8 <flatcc_json_printer_table_vector_field@@Base+0x32c>
   424b4:	ldr	r0, [fp, #-4]
   424b8:	ldr	r1, [r0, #20]
   424bc:	add	r2, r1, #1
   424c0:	str	r2, [r0, #20]
   424c4:	movw	r0, #10
   424c8:	strb	r0, [r1]
   424cc:	ldr	r0, [fp, #-4]
   424d0:	ldr	r1, [r0, #32]
   424d4:	mvn	r2, #0
   424d8:	add	r1, r1, r2
   424dc:	str	r1, [r0, #32]
   424e0:	ldr	r0, [fp, #-4]
   424e4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   424e8:	ldr	r0, [fp, #-4]
   424ec:	ldr	r1, [r0, #20]
   424f0:	add	r2, r1, #1
   424f4:	str	r2, [r0, #20]
   424f8:	movw	r0, #125	; 0x7d
   424fc:	strb	r0, [r1]
   42500:	mov	sp, fp
   42504:	pop	{fp, pc}

00042508 <flatcc_json_printer_union_vector_field@@Base>:
   42508:	push	{r4, sl, fp, lr}
   4250c:	add	fp, sp, #8
   42510:	sub	sp, sp, #192	; 0xc0
   42514:	ldr	ip, [fp, #16]
   42518:	ldr	lr, [fp, #12]
   4251c:	ldr	r4, [fp, #8]
   42520:	str	r0, [fp, #-12]
   42524:	str	r1, [fp, #-16]
   42528:	str	r2, [fp, #-20]	; 0xffffffec
   4252c:	str	r3, [fp, #-24]	; 0xffffffe8
   42530:	ldr	r0, [fp, #-16]
   42534:	ldr	r1, [fp, #-20]	; 0xffffffec
   42538:	sub	r1, r1, #1
   4253c:	str	ip, [sp, #32]
   42540:	str	lr, [sp, #28]
   42544:	str	r4, [sp, #24]
   42548:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   4254c:	str	r0, [fp, #-28]	; 0xffffffe4
   42550:	ldr	r0, [fp, #-16]
   42554:	ldr	r1, [fp, #-20]	; 0xffffffec
   42558:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   4255c:	str	r0, [fp, #-32]	; 0xffffffe0
   42560:	ldr	r0, [fp, #-16]
   42564:	ldr	r0, [r0, #12]
   42568:	str	r0, [sp, #40]	; 0x28
   4256c:	ldr	r0, [fp, #8]
   42570:	cmp	r0, #100	; 0x64
   42574:	ble	425a4 <flatcc_json_printer_union_vector_field@@Base+0x9c>
   42578:	ldr	r0, [fp, #-12]
   4257c:	movw	r1, #1
   42580:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   42584:	ldr	r0, [pc, #936]	; 42934 <flatcc_json_printer_union_vector_field@@Base+0x42c>
   42588:	add	r0, pc, r0
   4258c:	ldr	r1, [pc, #932]	; 42938 <flatcc_json_printer_union_vector_field@@Base+0x430>
   42590:	add	r1, pc, r1
   42594:	ldr	r2, [pc, #928]	; 4293c <flatcc_json_printer_union_vector_field@@Base+0x434>
   42598:	add	r3, pc, r2
   4259c:	movw	r2, #843	; 0x34b
   425a0:	bl	14f08 <__assert_fail@plt>
   425a4:	ldr	r0, [pc, #900]	; 42930 <flatcc_json_printer_union_vector_field@@Base+0x428>
   425a8:	add	r0, pc, r0
   425ac:	add	r1, sp, #51	; 0x33
   425b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   425b4:	ldr	r3, [fp, #8]
   425b8:	str	r0, [sp, #20]
   425bc:	mov	r0, r1
   425c0:	str	r1, [sp, #16]
   425c4:	mov	r1, r2
   425c8:	mov	r2, r3
   425cc:	bl	14e30 <memcpy@plt>
   425d0:	ldr	r0, [fp, #8]
   425d4:	ldr	r1, [sp, #16]
   425d8:	add	r0, r1, r0
   425dc:	ldr	r2, [sp, #20]
   425e0:	ldrb	r3, [r2]
   425e4:	strb	r3, [r0]
   425e8:	ldrb	r3, [r2, #1]
   425ec:	strb	r3, [r0, #1]
   425f0:	ldrb	r3, [r2, #2]
   425f4:	strb	r3, [r0, #2]
   425f8:	ldrb	r3, [r2, #3]
   425fc:	strb	r3, [r0, #3]
   42600:	ldrb	r3, [r2, #4]
   42604:	strb	r3, [r0, #4]
   42608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4260c:	movw	r3, #0
   42610:	cmp	r0, r3
   42614:	beq	42928 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42618:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4261c:	movw	r1, #0
   42620:	cmp	r0, r1
   42624:	beq	42928 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42628:	add	r3, sp, #51	; 0x33
   4262c:	ldr	r0, [fp, #-12]
   42630:	ldr	r1, [fp, #-16]
   42634:	ldr	r2, [fp, #-20]	; 0xffffffec
   42638:	sub	r2, r2, #1
   4263c:	ldr	ip, [fp, #8]
   42640:	add	ip, ip, #5
   42644:	ldr	lr, [fp, #12]
   42648:	str	ip, [sp]
   4264c:	str	lr, [sp, #4]
   42650:	bl	3ffe0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   42654:	ldr	r0, [fp, #-16]
   42658:	ldr	r1, [r0, #16]
   4265c:	add	r2, r1, #1
   42660:	str	r2, [r0, #16]
   42664:	cmp	r1, #0
   42668:	beq	42684 <flatcc_json_printer_union_vector_field@@Base+0x17c>
   4266c:	ldr	r0, [fp, #-12]
   42670:	ldr	r1, [r0, #20]
   42674:	add	r2, r1, #1
   42678:	str	r2, [r0, #20]
   4267c:	movw	r0, #44	; 0x2c
   42680:	strb	r0, [r1]
   42684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42688:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   4268c:	str	r0, [fp, #-32]	; 0xffffffe0
   42690:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42694:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42698:	str	r0, [fp, #-28]	; 0xffffffe4
   4269c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   426a0:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   426a4:	str	r0, [fp, #-44]	; 0xffffffd4
   426a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   426ac:	add	r0, r0, #4
   426b0:	str	r0, [fp, #-32]	; 0xffffffe0
   426b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   426b8:	add	r0, r0, #4
   426bc:	str	r0, [fp, #-28]	; 0xffffffe4
   426c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   426c4:	str	r0, [fp, #-36]	; 0xffffffdc
   426c8:	ldr	r0, [fp, #-12]
   426cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   426d0:	ldr	r2, [fp, #8]
   426d4:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   426d8:	ldr	r0, [fp, #-12]
   426dc:	ldr	r1, [r0, #32]
   426e0:	add	r1, r1, #1
   426e4:	str	r1, [r0, #32]
   426e8:	ldr	r0, [fp, #-12]
   426ec:	ldr	r1, [r0, #20]
   426f0:	add	r2, r1, #1
   426f4:	str	r2, [r0, #20]
   426f8:	movw	r0, #91	; 0x5b
   426fc:	strb	r0, [r1]
   42700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42704:	cmp	r0, #0
   42708:	beq	427c8 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
   4270c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42710:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42714:	strb	r0, [fp, #-37]	; 0xffffffdb
   42718:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   4271c:	cmp	r0, #0
   42720:	beq	42754 <flatcc_json_printer_union_vector_field@@Base+0x24c>
   42724:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42728:	strb	r0, [sp, #44]	; 0x2c
   4272c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42730:	str	r0, [sp, #36]	; 0x24
   42734:	ldr	r0, [fp, #16]
   42738:	ldr	r1, [fp, #-12]
   4273c:	str	r0, [sp, #12]
   42740:	mov	r0, r1
   42744:	add	r1, sp, #36	; 0x24
   42748:	ldr	r2, [sp, #12]
   4274c:	blx	r2
   42750:	b	427b8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   42754:	b	42758 <flatcc_json_printer_union_vector_field@@Base+0x250>
   42758:	ldr	r0, [fp, #-12]
   4275c:	ldr	r1, [r0, #20]
   42760:	add	r2, r1, #1
   42764:	str	r2, [r0, #20]
   42768:	movw	r0, #110	; 0x6e
   4276c:	strb	r0, [r1]
   42770:	ldr	r0, [fp, #-12]
   42774:	ldr	r1, [r0, #20]
   42778:	add	r2, r1, #1
   4277c:	str	r2, [r0, #20]
   42780:	movw	r0, #117	; 0x75
   42784:	strb	r0, [r1]
   42788:	ldr	r0, [fp, #-12]
   4278c:	ldr	r1, [r0, #20]
   42790:	add	r2, r1, #1
   42794:	str	r2, [r0, #20]
   42798:	movw	r0, #108	; 0x6c
   4279c:	strb	r0, [r1]
   427a0:	ldr	r1, [fp, #-12]
   427a4:	ldr	r2, [r1, #20]
   427a8:	add	r3, r2, #1
   427ac:	str	r3, [r1, #20]
   427b0:	strb	r0, [r2]
   427b4:	b	427b8 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   427b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   427bc:	mvn	r1, #0
   427c0:	add	r0, r0, r1
   427c4:	str	r0, [fp, #-44]	; 0xffffffd4
   427c8:	b	427cc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   427cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   427d0:	mvn	r1, #0
   427d4:	add	r1, r0, r1
   427d8:	str	r1, [fp, #-44]	; 0xffffffd4
   427dc:	cmp	r0, #0
   427e0:	beq	428c4 <flatcc_json_printer_union_vector_field@@Base+0x3bc>
   427e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   427e8:	add	r0, r0, #4
   427ec:	str	r0, [fp, #-32]	; 0xffffffe0
   427f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   427f4:	add	r0, r0, #1
   427f8:	str	r0, [fp, #-36]	; 0xffffffdc
   427fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42800:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42804:	strb	r0, [fp, #-37]	; 0xffffffdb
   42808:	ldr	r0, [fp, #-12]
   4280c:	ldr	r1, [r0, #20]
   42810:	add	r2, r1, #1
   42814:	str	r2, [r0, #20]
   42818:	movw	r0, #44	; 0x2c
   4281c:	strb	r0, [r1]
   42820:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42824:	cmp	r0, #0
   42828:	beq	4285c <flatcc_json_printer_union_vector_field@@Base+0x354>
   4282c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   42830:	strb	r0, [sp, #44]	; 0x2c
   42834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42838:	str	r0, [sp, #36]	; 0x24
   4283c:	ldr	r0, [fp, #16]
   42840:	ldr	r1, [fp, #-12]
   42844:	str	r0, [sp, #8]
   42848:	mov	r0, r1
   4284c:	add	r1, sp, #36	; 0x24
   42850:	ldr	r2, [sp, #8]
   42854:	blx	r2
   42858:	b	428c0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   4285c:	b	42860 <flatcc_json_printer_union_vector_field@@Base+0x358>
   42860:	ldr	r0, [fp, #-12]
   42864:	ldr	r1, [r0, #20]
   42868:	add	r2, r1, #1
   4286c:	str	r2, [r0, #20]
   42870:	movw	r0, #110	; 0x6e
   42874:	strb	r0, [r1]
   42878:	ldr	r0, [fp, #-12]
   4287c:	ldr	r1, [r0, #20]
   42880:	add	r2, r1, #1
   42884:	str	r2, [r0, #20]
   42888:	movw	r0, #117	; 0x75
   4288c:	strb	r0, [r1]
   42890:	ldr	r0, [fp, #-12]
   42894:	ldr	r1, [r0, #20]
   42898:	add	r2, r1, #1
   4289c:	str	r2, [r0, #20]
   428a0:	movw	r0, #108	; 0x6c
   428a4:	strb	r0, [r1]
   428a8:	ldr	r1, [fp, #-12]
   428ac:	ldr	r2, [r1, #20]
   428b0:	add	r3, r2, #1
   428b4:	str	r3, [r1, #20]
   428b8:	strb	r0, [r2]
   428bc:	b	428c0 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   428c0:	b	427cc <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   428c4:	b	428c8 <flatcc_json_printer_union_vector_field@@Base+0x3c0>
   428c8:	ldr	r0, [fp, #-12]
   428cc:	ldrsb	r0, [r0, #25]
   428d0:	cmp	r0, #0
   428d4:	beq	4290c <flatcc_json_printer_union_vector_field@@Base+0x404>
   428d8:	ldr	r0, [fp, #-12]
   428dc:	ldr	r1, [r0, #20]
   428e0:	add	r2, r1, #1
   428e4:	str	r2, [r0, #20]
   428e8:	movw	r0, #10
   428ec:	strb	r0, [r1]
   428f0:	ldr	r0, [fp, #-12]
   428f4:	ldr	r1, [r0, #32]
   428f8:	mvn	r2, #0
   428fc:	add	r1, r1, r2
   42900:	str	r1, [r0, #32]
   42904:	ldr	r0, [fp, #-12]
   42908:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   4290c:	ldr	r0, [fp, #-12]
   42910:	ldr	r1, [r0, #20]
   42914:	add	r2, r1, #1
   42918:	str	r2, [r0, #20]
   4291c:	movw	r0, #93	; 0x5d
   42920:	strb	r0, [r1]
   42924:	b	42928 <flatcc_json_printer_union_vector_field@@Base+0x420>
   42928:	sub	sp, fp, #8
   4292c:	pop	{r4, sl, fp, pc}
   42930:	andeq	r9, r0, r3, lsr #15
   42934:	andeq	r9, r0, ip, ror r6
   42938:	andeq	r9, r0, pc, lsl #13
   4293c:	andeq	r9, r0, r9, ror #13
   42940:	sub	sp, sp, #8
   42944:	str	r0, [sp, #4]
   42948:	str	r1, [sp]
   4294c:	ldr	r0, [sp, #4]
   42950:	ldr	r0, [r0, #36]	; 0x24
   42954:	cmp	r0, #0
   42958:	bne	42968 <flatcc_json_printer_union_vector_field@@Base+0x460>
   4295c:	ldr	r0, [sp]
   42960:	ldr	r1, [sp, #4]
   42964:	str	r0, [r1, #36]	; 0x24
   42968:	add	sp, sp, #8
   4296c:	bx	lr

00042970 <flatcc_json_printer_table_field@@Base>:
   42970:	push	{fp, lr}
   42974:	mov	fp, sp
   42978:	sub	sp, sp, #40	; 0x28
   4297c:	ldr	ip, [fp, #12]
   42980:	ldr	lr, [fp, #8]
   42984:	str	r0, [fp, #-4]
   42988:	str	r1, [fp, #-8]
   4298c:	str	r2, [fp, #-12]
   42990:	str	r3, [fp, #-16]
   42994:	ldr	r0, [fp, #-8]
   42998:	ldr	r1, [fp, #-12]
   4299c:	str	ip, [sp, #16]
   429a0:	str	lr, [sp, #12]
   429a4:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   429a8:	str	r0, [sp, #20]
   429ac:	ldr	r0, [sp, #20]
   429b0:	movw	r1, #0
   429b4:	cmp	r0, r1
   429b8:	beq	42a30 <flatcc_json_printer_table_field@@Base+0xc0>
   429bc:	ldr	r0, [fp, #-8]
   429c0:	ldr	r1, [r0, #16]
   429c4:	add	r2, r1, #1
   429c8:	str	r2, [r0, #16]
   429cc:	cmp	r1, #0
   429d0:	beq	429ec <flatcc_json_printer_table_field@@Base+0x7c>
   429d4:	ldr	r0, [fp, #-4]
   429d8:	ldr	r1, [r0, #20]
   429dc:	add	r2, r1, #1
   429e0:	str	r2, [r0, #20]
   429e4:	movw	r0, #44	; 0x2c
   429e8:	strb	r0, [r1]
   429ec:	ldr	r0, [fp, #-4]
   429f0:	ldr	r1, [fp, #-16]
   429f4:	ldr	r2, [fp, #8]
   429f8:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   429fc:	ldr	r0, [fp, #-4]
   42a00:	ldr	r1, [sp, #20]
   42a04:	str	r0, [sp, #8]
   42a08:	mov	r0, r1
   42a0c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42a10:	ldr	r1, [fp, #-8]
   42a14:	ldr	r2, [r1, #12]
   42a18:	ldr	r3, [fp, #12]
   42a1c:	ldr	r1, [sp, #8]
   42a20:	str	r0, [sp, #4]
   42a24:	mov	r0, r1
   42a28:	ldr	r1, [sp, #4]
   42a2c:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42a30:	mov	sp, fp
   42a34:	pop	{fp, pc}

00042a38 <flatcc_json_printer_union_field@@Base>:
   42a38:	push	{r4, sl, fp, lr}
   42a3c:	add	fp, sp, #8
   42a40:	sub	sp, sp, #64	; 0x40
   42a44:	ldr	ip, [fp, #16]
   42a48:	ldr	lr, [fp, #12]
   42a4c:	ldr	r4, [fp, #8]
   42a50:	str	r0, [fp, #-12]
   42a54:	str	r1, [fp, #-16]
   42a58:	str	r2, [fp, #-20]	; 0xffffffec
   42a5c:	str	r3, [fp, #-24]	; 0xffffffe8
   42a60:	ldr	r0, [fp, #-16]
   42a64:	ldr	r1, [fp, #-20]	; 0xffffffec
   42a68:	sub	r1, r1, #1
   42a6c:	str	ip, [sp, #20]
   42a70:	str	lr, [sp, #16]
   42a74:	str	r4, [sp, #12]
   42a78:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   42a7c:	str	r0, [fp, #-28]	; 0xffffffe4
   42a80:	ldr	r0, [fp, #-16]
   42a84:	ldr	r1, [fp, #-20]	; 0xffffffec
   42a88:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   42a8c:	str	r0, [fp, #-32]	; 0xffffffe0
   42a90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42a94:	movw	r1, #0
   42a98:	cmp	r0, r1
   42a9c:	beq	42ab0 <flatcc_json_printer_union_field@@Base+0x78>
   42aa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42aa4:	movw	r1, #0
   42aa8:	cmp	r0, r1
   42aac:	bne	42ab4 <flatcc_json_printer_union_field@@Base+0x7c>
   42ab0:	b	42d40 <flatcc_json_printer_union_field@@Base+0x308>
   42ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   42ab8:	bl	3e48c <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   42abc:	strb	r0, [fp, #-33]	; 0xffffffdf
   42ac0:	ldr	r0, [fp, #-16]
   42ac4:	ldr	r1, [r0, #16]
   42ac8:	add	r2, r1, #1
   42acc:	str	r2, [r0, #16]
   42ad0:	cmp	r1, #0
   42ad4:	beq	42af0 <flatcc_json_printer_union_field@@Base+0xb8>
   42ad8:	ldr	r0, [fp, #-12]
   42adc:	ldr	r1, [r0, #20]
   42ae0:	add	r2, r1, #1
   42ae4:	str	r2, [r0, #20]
   42ae8:	movw	r0, #44	; 0x2c
   42aec:	strb	r0, [r1]
   42af0:	b	42af4 <flatcc_json_printer_union_field@@Base+0xbc>
   42af4:	ldr	r0, [fp, #-12]
   42af8:	ldrsb	r0, [r0, #25]
   42afc:	cmp	r0, #0
   42b00:	beq	42b28 <flatcc_json_printer_union_field@@Base+0xf0>
   42b04:	ldr	r0, [fp, #-12]
   42b08:	ldr	r1, [r0, #20]
   42b0c:	add	r2, r1, #1
   42b10:	str	r2, [r0, #20]
   42b14:	movw	r0, #10
   42b18:	strb	r0, [r1]
   42b1c:	ldr	r0, [fp, #-12]
   42b20:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   42b24:	b	42b30 <flatcc_json_printer_union_field@@Base+0xf8>
   42b28:	ldr	r0, [fp, #-12]
   42b2c:	bl	39640 <flatcc_json_printer_nl@@Base+0x38>
   42b30:	b	42b34 <flatcc_json_printer_union_field@@Base+0xfc>
   42b34:	ldr	r0, [fp, #-12]
   42b38:	ldr	r0, [r0, #20]
   42b3c:	movw	r1, #34	; 0x22
   42b40:	strb	r1, [r0]
   42b44:	ldr	r0, [fp, #-12]
   42b48:	ldrsb	r0, [r0, #26]
   42b4c:	cmp	r0, #0
   42b50:	movw	r0, #0
   42b54:	movne	r0, #1
   42b58:	mvn	r1, #0
   42b5c:	eor	r0, r0, r1
   42b60:	and	r0, r0, #1
   42b64:	ldr	r1, [fp, #-12]
   42b68:	ldr	r2, [r1, #20]
   42b6c:	add	r0, r2, r0
   42b70:	str	r0, [r1, #20]
   42b74:	ldr	r0, [fp, #-12]
   42b78:	ldr	r0, [r0, #20]
   42b7c:	ldr	r1, [fp, #8]
   42b80:	add	r0, r0, r1
   42b84:	ldr	r1, [fp, #-12]
   42b88:	ldr	r1, [r1, #16]
   42b8c:	cmp	r0, r1
   42b90:	bcs	42bc0 <flatcc_json_printer_union_field@@Base+0x188>
   42b94:	ldr	r0, [fp, #-12]
   42b98:	ldr	r0, [r0, #20]
   42b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42ba0:	ldr	r2, [fp, #8]
   42ba4:	bl	14e30 <memcpy@plt>
   42ba8:	ldr	r0, [fp, #8]
   42bac:	ldr	r1, [fp, #-12]
   42bb0:	ldr	r2, [r1, #20]
   42bb4:	add	r0, r2, r0
   42bb8:	str	r0, [r1, #20]
   42bbc:	b	42bd0 <flatcc_json_printer_union_field@@Base+0x198>
   42bc0:	ldr	r0, [fp, #-12]
   42bc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42bc8:	ldr	r2, [fp, #8]
   42bcc:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   42bd0:	ldr	r0, [pc, #368]	; 42d48 <flatcc_json_printer_union_field@@Base+0x310>
   42bd4:	add	r1, pc, r0
   42bd8:	ldr	r0, [fp, #-12]
   42bdc:	movw	r2, #5
   42be0:	bl	3958c <flatcc_json_printer_write@@Base+0x30>
   42be4:	ldr	r0, [fp, #-12]
   42be8:	ldr	r0, [r0, #20]
   42bec:	movw	r1, #34	; 0x22
   42bf0:	strb	r1, [r0]
   42bf4:	ldr	r0, [fp, #-12]
   42bf8:	ldrsb	r0, [r0, #26]
   42bfc:	cmp	r0, #0
   42c00:	movw	r0, #0
   42c04:	movne	r0, #1
   42c08:	mvn	r1, #0
   42c0c:	eor	r0, r0, r1
   42c10:	and	r0, r0, #1
   42c14:	ldr	r1, [fp, #-12]
   42c18:	ldr	r2, [r1, #20]
   42c1c:	add	r0, r2, r0
   42c20:	str	r0, [r1, #20]
   42c24:	ldr	r0, [fp, #-12]
   42c28:	ldr	r1, [r0, #20]
   42c2c:	add	r2, r1, #1
   42c30:	str	r2, [r0, #20]
   42c34:	movw	r0, #58	; 0x3a
   42c38:	strb	r0, [r1]
   42c3c:	ldr	r0, [fp, #-12]
   42c40:	ldr	r0, [r0, #20]
   42c44:	movw	r1, #32
   42c48:	strb	r1, [r0]
   42c4c:	ldr	r0, [fp, #-12]
   42c50:	ldrsb	r0, [r0, #25]
   42c54:	cmp	r0, #0
   42c58:	movw	r0, #0
   42c5c:	movne	r0, #1
   42c60:	mvn	r1, #0
   42c64:	eor	r0, r0, r1
   42c68:	eor	r0, r0, r1
   42c6c:	and	r0, r0, #1
   42c70:	ldr	r1, [fp, #-12]
   42c74:	ldr	r2, [r1, #20]
   42c78:	add	r0, r2, r0
   42c7c:	str	r0, [r1, #20]
   42c80:	ldr	r0, [fp, #-12]
   42c84:	ldrsb	r0, [r0, #27]
   42c88:	cmp	r0, #0
   42c8c:	beq	42cb8 <flatcc_json_printer_union_field@@Base+0x280>
   42c90:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   42c94:	ldr	r1, [fp, #-12]
   42c98:	ldr	r1, [r1, #20]
   42c9c:	and	r0, r0, #255	; 0xff
   42ca0:	bl	397e8 <flatcc_json_printer_uint8@@Base+0x40>
   42ca4:	ldr	r1, [fp, #-12]
   42ca8:	ldr	r2, [r1, #20]
   42cac:	add	r0, r2, r0
   42cb0:	str	r0, [r1, #20]
   42cb4:	b	42cd4 <flatcc_json_printer_union_field@@Base+0x29c>
   42cb8:	ldr	r0, [fp, #12]
   42cbc:	ldr	r1, [fp, #-12]
   42cc0:	str	r0, [sp, #8]
   42cc4:	mov	r0, r1
   42cc8:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   42ccc:	ldr	r2, [sp, #8]
   42cd0:	blx	r2
   42cd4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   42cd8:	cmp	r0, #0
   42cdc:	beq	42d40 <flatcc_json_printer_union_field@@Base+0x308>
   42ce0:	ldr	r0, [fp, #-12]
   42ce4:	ldr	r1, [r0, #20]
   42ce8:	add	r2, r1, #1
   42cec:	str	r2, [r0, #20]
   42cf0:	movw	r0, #44	; 0x2c
   42cf4:	strb	r0, [r1]
   42cf8:	ldr	r0, [fp, #-12]
   42cfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42d00:	ldr	r2, [fp, #8]
   42d04:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   42d08:	ldr	r0, [fp, #-16]
   42d0c:	ldr	r0, [r0, #12]
   42d10:	str	r0, [sp, #28]
   42d14:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   42d18:	strb	r0, [sp, #32]
   42d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42d20:	str	r0, [sp, #24]
   42d24:	ldr	r0, [fp, #16]
   42d28:	ldr	r1, [fp, #-12]
   42d2c:	str	r0, [sp, #4]
   42d30:	mov	r0, r1
   42d34:	add	r1, sp, #24
   42d38:	ldr	r2, [sp, #4]
   42d3c:	blx	r2
   42d40:	sub	sp, fp, #8
   42d44:	pop	{r4, sl, fp, pc}
   42d48:	andeq	r9, r0, r7, ror r1

00042d4c <flatcc_json_printer_union_table@@Base>:
   42d4c:	push	{fp, lr}
   42d50:	mov	fp, sp
   42d54:	sub	sp, sp, #24
   42d58:	str	r0, [fp, #-4]
   42d5c:	str	r1, [fp, #-8]
   42d60:	str	r2, [sp, #12]
   42d64:	ldr	r0, [fp, #-4]
   42d68:	ldr	r1, [fp, #-8]
   42d6c:	ldr	r1, [r1]
   42d70:	str	r0, [sp, #8]
   42d74:	mov	r0, r1
   42d78:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42d7c:	ldr	r1, [fp, #-8]
   42d80:	ldr	r2, [r1, #4]
   42d84:	ldr	r3, [sp, #12]
   42d88:	ldr	r1, [sp, #8]
   42d8c:	str	r0, [sp, #4]
   42d90:	mov	r0, r1
   42d94:	ldr	r1, [sp, #4]
   42d98:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42d9c:	mov	sp, fp
   42da0:	pop	{fp, pc}

00042da4 <flatcc_json_printer_union_struct@@Base>:
   42da4:	push	{fp, lr}
   42da8:	mov	fp, sp
   42dac:	sub	sp, sp, #24
   42db0:	str	r0, [fp, #-4]
   42db4:	str	r1, [fp, #-8]
   42db8:	str	r2, [sp, #12]
   42dbc:	ldr	r0, [fp, #-4]
   42dc0:	ldr	r1, [r0, #32]
   42dc4:	add	r1, r1, #1
   42dc8:	str	r1, [r0, #32]
   42dcc:	ldr	r0, [fp, #-4]
   42dd0:	ldr	r1, [r0, #20]
   42dd4:	add	r2, r1, #1
   42dd8:	str	r2, [r0, #20]
   42ddc:	movw	r0, #123	; 0x7b
   42de0:	strb	r0, [r1]
   42de4:	ldr	r0, [sp, #12]
   42de8:	ldr	r1, [fp, #-4]
   42dec:	ldr	r2, [fp, #-8]
   42df0:	ldr	r2, [r2]
   42df4:	str	r0, [sp, #8]
   42df8:	mov	r0, r2
   42dfc:	str	r1, [sp, #4]
   42e00:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42e04:	ldr	r1, [sp, #4]
   42e08:	str	r0, [sp]
   42e0c:	mov	r0, r1
   42e10:	ldr	r1, [sp]
   42e14:	ldr	r2, [sp, #8]
   42e18:	blx	r2
   42e1c:	ldr	r0, [fp, #-4]
   42e20:	ldrsb	r0, [r0, #25]
   42e24:	cmp	r0, #0
   42e28:	beq	42e60 <flatcc_json_printer_union_struct@@Base+0xbc>
   42e2c:	ldr	r0, [fp, #-4]
   42e30:	ldr	r1, [r0, #20]
   42e34:	add	r2, r1, #1
   42e38:	str	r2, [r0, #20]
   42e3c:	movw	r0, #10
   42e40:	strb	r0, [r1]
   42e44:	ldr	r0, [fp, #-4]
   42e48:	ldr	r1, [r0, #32]
   42e4c:	mvn	r2, #0
   42e50:	add	r1, r1, r2
   42e54:	str	r1, [r0, #32]
   42e58:	ldr	r0, [fp, #-4]
   42e5c:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   42e60:	ldr	r0, [fp, #-4]
   42e64:	ldr	r1, [r0, #20]
   42e68:	add	r2, r1, #1
   42e6c:	str	r2, [r0, #20]
   42e70:	movw	r0, #125	; 0x7d
   42e74:	strb	r0, [r1]
   42e78:	mov	sp, fp
   42e7c:	pop	{fp, pc}

00042e80 <flatcc_json_printer_union_string@@Base>:
   42e80:	push	{fp, lr}
   42e84:	mov	fp, sp
   42e88:	sub	sp, sp, #16
   42e8c:	str	r0, [fp, #-4]
   42e90:	str	r1, [sp, #8]
   42e94:	ldr	r0, [fp, #-4]
   42e98:	ldr	r1, [sp, #8]
   42e9c:	ldr	r1, [r1]
   42ea0:	str	r0, [sp, #4]
   42ea4:	mov	r0, r1
   42ea8:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   42eac:	ldr	r1, [sp, #4]
   42eb0:	str	r0, [sp]
   42eb4:	mov	r0, r1
   42eb8:	ldr	r1, [sp]
   42ebc:	bl	3b624 <flatcc_json_printer_string_field@@Base+0x214>
   42ec0:	mov	sp, fp
   42ec4:	pop	{fp, pc}

00042ec8 <flatcc_json_printer_embedded_struct_field@@Base>:
   42ec8:	push	{r4, sl, fp, lr}
   42ecc:	add	fp, sp, #8
   42ed0:	sub	sp, sp, #24
   42ed4:	ldr	ip, [fp, #16]
   42ed8:	ldr	lr, [fp, #12]
   42edc:	ldr	r4, [fp, #8]
   42ee0:	str	r0, [fp, #-12]
   42ee4:	str	r1, [sp, #16]
   42ee8:	str	r2, [sp, #12]
   42eec:	str	r3, [sp, #8]
   42ef0:	ldr	r0, [sp, #16]
   42ef4:	cmp	r0, #0
   42ef8:	beq	42f14 <flatcc_json_printer_embedded_struct_field@@Base+0x4c>
   42efc:	ldr	r0, [fp, #-12]
   42f00:	ldr	r1, [r0, #20]
   42f04:	add	r2, r1, #1
   42f08:	str	r2, [r0, #20]
   42f0c:	movw	r0, #44	; 0x2c
   42f10:	strb	r0, [r1]
   42f14:	ldr	r0, [fp, #-12]
   42f18:	ldr	r1, [fp, #8]
   42f1c:	ldr	r2, [fp, #12]
   42f20:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   42f24:	ldr	r0, [fp, #-12]
   42f28:	ldr	r1, [r0, #32]
   42f2c:	add	r1, r1, #1
   42f30:	str	r1, [r0, #32]
   42f34:	ldr	r0, [fp, #-12]
   42f38:	ldr	r1, [r0, #20]
   42f3c:	add	r2, r1, #1
   42f40:	str	r2, [r0, #20]
   42f44:	movw	r0, #123	; 0x7b
   42f48:	strb	r0, [r1]
   42f4c:	ldr	r0, [fp, #16]
   42f50:	ldr	r1, [fp, #-12]
   42f54:	ldr	r2, [sp, #12]
   42f58:	ldr	r3, [sp, #8]
   42f5c:	add	r2, r2, r3
   42f60:	str	r0, [sp, #4]
   42f64:	mov	r0, r1
   42f68:	mov	r1, r2
   42f6c:	ldr	r2, [sp, #4]
   42f70:	blx	r2
   42f74:	ldr	r0, [fp, #-12]
   42f78:	ldrsb	r0, [r0, #25]
   42f7c:	cmp	r0, #0
   42f80:	beq	42fb8 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
   42f84:	ldr	r0, [fp, #-12]
   42f88:	ldr	r1, [r0, #20]
   42f8c:	add	r2, r1, #1
   42f90:	str	r2, [r0, #20]
   42f94:	movw	r0, #10
   42f98:	strb	r0, [r1]
   42f9c:	ldr	r0, [fp, #-12]
   42fa0:	ldr	r1, [r0, #32]
   42fa4:	mvn	r2, #0
   42fa8:	add	r1, r1, r2
   42fac:	str	r1, [r0, #32]
   42fb0:	ldr	r0, [fp, #-12]
   42fb4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   42fb8:	ldr	r0, [fp, #-12]
   42fbc:	ldr	r1, [r0, #20]
   42fc0:	add	r2, r1, #1
   42fc4:	str	r2, [r0, #20]
   42fc8:	movw	r0, #125	; 0x7d
   42fcc:	strb	r0, [r1]
   42fd0:	sub	sp, fp, #8
   42fd4:	pop	{r4, sl, fp, pc}

00042fd8 <flatcc_json_printer_struct_field@@Base>:
   42fd8:	push	{fp, lr}
   42fdc:	mov	fp, sp
   42fe0:	sub	sp, sp, #32
   42fe4:	ldr	ip, [fp, #12]
   42fe8:	ldr	lr, [fp, #8]
   42fec:	str	r0, [fp, #-4]
   42ff0:	str	r1, [fp, #-8]
   42ff4:	str	r2, [fp, #-12]
   42ff8:	str	r3, [sp, #16]
   42ffc:	ldr	r0, [fp, #-8]
   43000:	ldr	r1, [fp, #-12]
   43004:	str	ip, [sp, #8]
   43008:	str	lr, [sp, #4]
   4300c:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   43010:	str	r0, [sp, #12]
   43014:	ldr	r0, [sp, #12]
   43018:	movw	r1, #0
   4301c:	cmp	r0, r1
   43020:	beq	4310c <flatcc_json_printer_struct_field@@Base+0x134>
   43024:	ldr	r0, [fp, #-8]
   43028:	ldr	r1, [r0, #16]
   4302c:	add	r2, r1, #1
   43030:	str	r2, [r0, #16]
   43034:	cmp	r1, #0
   43038:	beq	43054 <flatcc_json_printer_struct_field@@Base+0x7c>
   4303c:	ldr	r0, [fp, #-4]
   43040:	ldr	r1, [r0, #20]
   43044:	add	r2, r1, #1
   43048:	str	r2, [r0, #20]
   4304c:	movw	r0, #44	; 0x2c
   43050:	strb	r0, [r1]
   43054:	ldr	r0, [fp, #-4]
   43058:	ldr	r1, [sp, #16]
   4305c:	ldr	r2, [fp, #8]
   43060:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   43064:	ldr	r0, [fp, #-4]
   43068:	ldr	r1, [r0, #32]
   4306c:	add	r1, r1, #1
   43070:	str	r1, [r0, #32]
   43074:	ldr	r0, [fp, #-4]
   43078:	ldr	r1, [r0, #20]
   4307c:	add	r2, r1, #1
   43080:	str	r2, [r0, #20]
   43084:	movw	r0, #123	; 0x7b
   43088:	strb	r0, [r1]
   4308c:	ldr	r0, [fp, #12]
   43090:	ldr	r1, [fp, #-4]
   43094:	ldr	r2, [sp, #12]
   43098:	str	r0, [sp]
   4309c:	mov	r0, r1
   430a0:	mov	r1, r2
   430a4:	ldr	r2, [sp]
   430a8:	blx	r2
   430ac:	ldr	r0, [fp, #-4]
   430b0:	ldrsb	r0, [r0, #25]
   430b4:	cmp	r0, #0
   430b8:	beq	430f0 <flatcc_json_printer_struct_field@@Base+0x118>
   430bc:	ldr	r0, [fp, #-4]
   430c0:	ldr	r1, [r0, #20]
   430c4:	add	r2, r1, #1
   430c8:	str	r2, [r0, #20]
   430cc:	movw	r0, #10
   430d0:	strb	r0, [r1]
   430d4:	ldr	r0, [fp, #-4]
   430d8:	ldr	r1, [r0, #32]
   430dc:	mvn	r2, #0
   430e0:	add	r1, r1, r2
   430e4:	str	r1, [r0, #32]
   430e8:	ldr	r0, [fp, #-4]
   430ec:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   430f0:	ldr	r0, [fp, #-4]
   430f4:	ldr	r1, [r0, #20]
   430f8:	add	r2, r1, #1
   430fc:	str	r2, [r0, #20]
   43100:	movw	r0, #125	; 0x7d
   43104:	strb	r0, [r1]
   43108:	b	4310c <flatcc_json_printer_struct_field@@Base+0x134>
   4310c:	mov	sp, fp
   43110:	pop	{fp, pc}

00043114 <flatcc_json_printer_struct_as_root@@Base>:
   43114:	push	{fp, lr}
   43118:	mov	fp, sp
   4311c:	sub	sp, sp, #48	; 0x30
   43120:	ldr	ip, [fp, #8]
   43124:	str	r0, [fp, #-8]
   43128:	str	r1, [fp, #-12]
   4312c:	str	r2, [fp, #-16]
   43130:	str	r3, [fp, #-20]	; 0xffffffec
   43134:	ldr	r0, [fp, #-8]
   43138:	ldr	r1, [fp, #-12]
   4313c:	ldr	r2, [fp, #-16]
   43140:	ldr	r3, [fp, #-20]	; 0xffffffec
   43144:	str	ip, [sp, #24]
   43148:	bl	432cc <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   4314c:	cmp	r0, #0
   43150:	bne	43160 <flatcc_json_printer_struct_as_root@@Base+0x4c>
   43154:	mvn	r0, #0
   43158:	str	r0, [fp, #-4]
   4315c:	b	432c0 <flatcc_json_printer_struct_as_root@@Base+0x1ac>
   43160:	b	43164 <flatcc_json_printer_struct_as_root@@Base+0x50>
   43164:	ldr	r0, [fp, #-8]
   43168:	ldr	r1, [r0, #32]
   4316c:	add	r1, r1, #1
   43170:	str	r1, [r0, #32]
   43174:	ldr	r0, [fp, #-8]
   43178:	ldr	r1, [r0, #20]
   4317c:	add	r2, r1, #1
   43180:	str	r2, [r0, #20]
   43184:	movw	r0, #123	; 0x7b
   43188:	strb	r0, [r1]
   4318c:	ldr	r0, [fp, #8]
   43190:	ldr	r1, [fp, #-8]
   43194:	ldr	r2, [fp, #-12]
   43198:	str	r0, [sp, #20]
   4319c:	mov	r0, r2
   431a0:	str	r1, [sp, #16]
   431a4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   431a8:	ldr	r1, [sp, #16]
   431ac:	str	r0, [sp, #12]
   431b0:	mov	r0, r1
   431b4:	ldr	r1, [sp, #12]
   431b8:	ldr	r2, [sp, #20]
   431bc:	blx	r2
   431c0:	ldr	r0, [fp, #-8]
   431c4:	ldrsb	r0, [r0, #25]
   431c8:	cmp	r0, #0
   431cc:	beq	43204 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   431d0:	ldr	r0, [fp, #-8]
   431d4:	ldr	r1, [r0, #20]
   431d8:	add	r2, r1, #1
   431dc:	str	r2, [r0, #20]
   431e0:	movw	r0, #10
   431e4:	strb	r0, [r1]
   431e8:	ldr	r0, [fp, #-8]
   431ec:	ldr	r1, [r0, #32]
   431f0:	mvn	r2, #0
   431f4:	add	r1, r1, r2
   431f8:	str	r1, [r0, #32]
   431fc:	ldr	r0, [fp, #-8]
   43200:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   43204:	ldr	r0, [fp, #-8]
   43208:	ldr	r1, [r0, #20]
   4320c:	add	r2, r1, #1
   43210:	str	r2, [r0, #20]
   43214:	movw	r0, #125	; 0x7d
   43218:	strb	r0, [r1]
   4321c:	b	43220 <flatcc_json_printer_struct_as_root@@Base+0x10c>
   43220:	ldr	r0, [fp, #-8]
   43224:	ldrb	r0, [r0, #25]
   43228:	cmp	r0, #0
   4322c:	beq	43258 <flatcc_json_printer_struct_as_root@@Base+0x144>
   43230:	ldr	r0, [fp, #-8]
   43234:	ldr	r0, [r0, #32]
   43238:	cmp	r0, #0
   4323c:	bne	43258 <flatcc_json_printer_struct_as_root@@Base+0x144>
   43240:	ldr	r0, [fp, #-8]
   43244:	ldr	r1, [r0, #20]
   43248:	add	r2, r1, #1
   4324c:	str	r2, [r0, #20]
   43250:	movw	r0, #10
   43254:	strb	r0, [r1]
   43258:	ldr	r0, [fp, #-8]
   4325c:	ldr	r0, [r0, #44]	; 0x2c
   43260:	ldr	r1, [fp, #-8]
   43264:	str	r0, [sp, #8]
   43268:	mov	r0, r1
   4326c:	movw	r1, #1
   43270:	ldr	r2, [sp, #8]
   43274:	blx	r2
   43278:	ldr	r0, [fp, #-8]
   4327c:	bl	433e8 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   43280:	cmp	r0, #0
   43284:	beq	43294 <flatcc_json_printer_struct_as_root@@Base+0x180>
   43288:	mvn	r0, #0
   4328c:	str	r0, [sp, #4]
   43290:	b	432b8 <flatcc_json_printer_struct_as_root@@Base+0x1a4>
   43294:	ldr	r0, [fp, #-8]
   43298:	ldr	r0, [r0, #12]
   4329c:	ldr	r1, [fp, #-8]
   432a0:	ldr	r1, [r1, #20]
   432a4:	ldr	r2, [fp, #-8]
   432a8:	ldr	r2, [r2]
   432ac:	sub	r1, r1, r2
   432b0:	add	r0, r0, r1
   432b4:	str	r0, [sp, #4]
   432b8:	ldr	r0, [sp, #4]
   432bc:	str	r0, [fp, #-4]
   432c0:	ldr	r0, [fp, #-4]
   432c4:	mov	sp, fp
   432c8:	pop	{fp, pc}
   432cc:	push	{fp, lr}
   432d0:	mov	fp, sp
   432d4:	sub	sp, sp, #32
   432d8:	str	r0, [fp, #-4]
   432dc:	str	r1, [fp, #-8]
   432e0:	str	r2, [fp, #-12]
   432e4:	str	r3, [sp, #16]
   432e8:	movw	r0, #0
   432ec:	str	r0, [sp, #8]
   432f0:	ldr	r1, [fp, #-8]
   432f4:	cmp	r1, r0
   432f8:	beq	43308 <flatcc_json_printer_struct_as_root@@Base+0x1f4>
   432fc:	ldr	r0, [fp, #-12]
   43300:	cmp	r0, #8
   43304:	bcs	43334 <flatcc_json_printer_struct_as_root@@Base+0x220>
   43308:	ldr	r0, [fp, #-4]
   4330c:	movw	r1, #1
   43310:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43314:	ldr	r0, [pc, #192]	; 433dc <flatcc_json_printer_struct_as_root@@Base+0x2c8>
   43318:	add	r0, pc, r0
   4331c:	ldr	r1, [pc, #188]	; 433e0 <flatcc_json_printer_struct_as_root@@Base+0x2cc>
   43320:	add	r1, pc, r1
   43324:	ldr	r2, [pc, #184]	; 433e4 <flatcc_json_printer_struct_as_root@@Base+0x2d0>
   43328:	add	r3, pc, r2
   4332c:	movw	r2, #1019	; 0x3fb
   43330:	bl	14f08 <__assert_fail@plt>
   43334:	ldr	r0, [sp, #16]
   43338:	movw	r1, #0
   4333c:	cmp	r0, r1
   43340:	beq	433c4 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   43344:	add	r0, sp, #8
   43348:	ldr	r1, [sp, #16]
   4334c:	movw	r2, #4
   43350:	bl	14ecc <strncpy@plt>
   43354:	ldr	r1, [sp, #8]
   43358:	str	r0, [sp, #4]
   4335c:	mov	r0, r1
   43360:	bl	45bec <flatcc_json_printer_clear@@Base+0x1cc8>
   43364:	str	r0, [sp, #8]
   43368:	ldr	r0, [fp, #-8]
   4336c:	add	r0, r0, #4
   43370:	bl	45c00 <flatcc_json_printer_clear@@Base+0x1cdc>
   43374:	str	r0, [sp, #12]
   43378:	ldr	r0, [sp, #8]
   4337c:	cmp	r0, #0
   43380:	beq	433c0 <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   43384:	ldr	r0, [sp, #12]
   43388:	ldr	r1, [sp, #8]
   4338c:	cmp	r0, r1
   43390:	beq	433c0 <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   43394:	ldr	r0, [fp, #-4]
   43398:	movw	r1, #1
   4339c:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   433a0:	ldr	r0, [pc, #40]	; 433d0 <flatcc_json_printer_struct_as_root@@Base+0x2bc>
   433a4:	add	r0, pc, r0
   433a8:	ldr	r1, [pc, #36]	; 433d4 <flatcc_json_printer_struct_as_root@@Base+0x2c0>
   433ac:	add	r1, pc, r1
   433b0:	ldr	r2, [pc, #32]	; 433d8 <flatcc_json_printer_struct_as_root@@Base+0x2c4>
   433b4:	add	r3, pc, r2
   433b8:	movw	r2, #1028	; 0x404
   433bc:	bl	14f08 <__assert_fail@plt>
   433c0:	b	433c4 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   433c4:	movw	r0, #1
   433c8:	mov	sp, fp
   433cc:	pop	{fp, pc}
   433d0:	andeq	r8, r0, sp, lsr sp
   433d4:	andeq	r8, r0, r3, ror r8
   433d8:	ldrdeq	r8, [r0], -lr
   433dc:	andeq	r8, r0, fp, asr sp
   433e0:	strdeq	r8, [r0], -pc	; <UNPREDICTABLE>
   433e4:	andeq	r8, r0, sl, ror #26
   433e8:	sub	sp, sp, #4
   433ec:	str	r0, [sp]
   433f0:	ldr	r0, [sp]
   433f4:	ldr	r0, [r0, #36]	; 0x24
   433f8:	add	sp, sp, #4
   433fc:	bx	lr

00043400 <flatcc_json_printer_table_as_root@@Base>:
   43400:	push	{fp, lr}
   43404:	mov	fp, sp
   43408:	sub	sp, sp, #40	; 0x28
   4340c:	ldr	ip, [fp, #8]
   43410:	str	r0, [fp, #-8]
   43414:	str	r1, [fp, #-12]
   43418:	str	r2, [fp, #-16]
   4341c:	str	r3, [sp, #20]
   43420:	ldr	r0, [fp, #-8]
   43424:	ldr	r1, [fp, #-12]
   43428:	ldr	r2, [fp, #-16]
   4342c:	ldr	r3, [sp, #20]
   43430:	str	ip, [sp, #16]
   43434:	bl	432cc <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43438:	cmp	r0, #0
   4343c:	bne	4344c <flatcc_json_printer_table_as_root@@Base+0x4c>
   43440:	mvn	r0, #0
   43444:	str	r0, [fp, #-4]
   43448:	b	4351c <flatcc_json_printer_table_as_root@@Base+0x11c>
   4344c:	ldr	r0, [fp, #-8]
   43450:	ldr	r1, [fp, #-12]
   43454:	str	r0, [sp, #12]
   43458:	mov	r0, r1
   4345c:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   43460:	ldr	r3, [fp, #8]
   43464:	ldr	r1, [sp, #12]
   43468:	str	r0, [sp, #8]
   4346c:	mov	r0, r1
   43470:	ldr	r1, [sp, #8]
   43474:	movw	r2, #100	; 0x64
   43478:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   4347c:	ldr	r0, [fp, #-8]
   43480:	ldrb	r0, [r0, #25]
   43484:	cmp	r0, #0
   43488:	beq	434b4 <flatcc_json_printer_table_as_root@@Base+0xb4>
   4348c:	ldr	r0, [fp, #-8]
   43490:	ldr	r0, [r0, #32]
   43494:	cmp	r0, #0
   43498:	bne	434b4 <flatcc_json_printer_table_as_root@@Base+0xb4>
   4349c:	ldr	r0, [fp, #-8]
   434a0:	ldr	r1, [r0, #20]
   434a4:	add	r2, r1, #1
   434a8:	str	r2, [r0, #20]
   434ac:	movw	r0, #10
   434b0:	strb	r0, [r1]
   434b4:	ldr	r0, [fp, #-8]
   434b8:	ldr	r0, [r0, #44]	; 0x2c
   434bc:	ldr	r1, [fp, #-8]
   434c0:	str	r0, [sp, #4]
   434c4:	mov	r0, r1
   434c8:	movw	r1, #1
   434cc:	ldr	r2, [sp, #4]
   434d0:	blx	r2
   434d4:	ldr	r0, [fp, #-8]
   434d8:	bl	433e8 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   434dc:	cmp	r0, #0
   434e0:	beq	434f0 <flatcc_json_printer_table_as_root@@Base+0xf0>
   434e4:	mvn	r0, #0
   434e8:	str	r0, [sp]
   434ec:	b	43514 <flatcc_json_printer_table_as_root@@Base+0x114>
   434f0:	ldr	r0, [fp, #-8]
   434f4:	ldr	r0, [r0, #12]
   434f8:	ldr	r1, [fp, #-8]
   434fc:	ldr	r1, [r1, #20]
   43500:	ldr	r2, [fp, #-8]
   43504:	ldr	r2, [r2]
   43508:	sub	r1, r1, r2
   4350c:	add	r0, r0, r1
   43510:	str	r0, [sp]
   43514:	ldr	r0, [sp]
   43518:	str	r0, [fp, #-4]
   4351c:	ldr	r0, [fp, #-4]
   43520:	mov	sp, fp
   43524:	pop	{fp, pc}

00043528 <flatcc_json_printer_struct_as_nested_root@@Base>:
   43528:	push	{r4, sl, fp, lr}
   4352c:	add	fp, sp, #8
   43530:	sub	sp, sp, #56	; 0x38
   43534:	ldr	ip, [fp, #16]
   43538:	ldr	lr, [fp, #12]
   4353c:	ldr	r4, [fp, #8]
   43540:	str	r0, [fp, #-12]
   43544:	str	r1, [fp, #-16]
   43548:	str	r2, [fp, #-20]	; 0xffffffec
   4354c:	str	r3, [fp, #-24]	; 0xffffffe8
   43550:	ldr	r0, [fp, #-16]
   43554:	ldr	r1, [fp, #-20]	; 0xffffffec
   43558:	str	ip, [sp, #28]
   4355c:	str	lr, [sp, #24]
   43560:	str	r4, [sp, #20]
   43564:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   43568:	str	r0, [fp, #-28]	; 0xffffffe4
   4356c:	movw	r1, #0
   43570:	cmp	r1, r0
   43574:	bne	4357c <flatcc_json_printer_struct_as_nested_root@@Base+0x54>
   43578:	b	436c0 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   4357c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43584:	str	r0, [sp, #16]
   43588:	mov	r0, r1
   4358c:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   43590:	ldr	r1, [sp, #16]
   43594:	add	r0, r1, r0
   43598:	str	r0, [fp, #-28]	; 0xffffffe4
   4359c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   435a0:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   435a4:	str	r0, [sp, #32]
   435a8:	ldr	r0, [fp, #-12]
   435ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   435b0:	ldr	r2, [sp, #32]
   435b4:	ldr	r3, [fp, #12]
   435b8:	bl	432cc <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   435bc:	cmp	r0, #0
   435c0:	bne	435c8 <flatcc_json_printer_struct_as_nested_root@@Base+0xa0>
   435c4:	b	436c0 <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   435c8:	ldr	r0, [fp, #-16]
   435cc:	ldr	r1, [r0, #16]
   435d0:	add	r2, r1, #1
   435d4:	str	r2, [r0, #16]
   435d8:	cmp	r1, #0
   435dc:	beq	435f8 <flatcc_json_printer_struct_as_nested_root@@Base+0xd0>
   435e0:	ldr	r0, [fp, #-12]
   435e4:	ldr	r1, [r0, #20]
   435e8:	add	r2, r1, #1
   435ec:	str	r2, [r0, #20]
   435f0:	movw	r0, #44	; 0x2c
   435f4:	strb	r0, [r1]
   435f8:	ldr	r0, [fp, #-12]
   435fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43600:	ldr	r2, [fp, #8]
   43604:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   43608:	ldr	r0, [fp, #-12]
   4360c:	ldr	r1, [r0, #32]
   43610:	add	r1, r1, #1
   43614:	str	r1, [r0, #32]
   43618:	ldr	r0, [fp, #-12]
   4361c:	ldr	r1, [r0, #20]
   43620:	add	r2, r1, #1
   43624:	str	r2, [r0, #20]
   43628:	movw	r0, #123	; 0x7b
   4362c:	strb	r0, [r1]
   43630:	ldr	r0, [fp, #16]
   43634:	ldr	r1, [fp, #-12]
   43638:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4363c:	str	r0, [sp, #12]
   43640:	mov	r0, r2
   43644:	str	r1, [sp, #8]
   43648:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   4364c:	ldr	r1, [sp, #8]
   43650:	str	r0, [sp, #4]
   43654:	mov	r0, r1
   43658:	ldr	r1, [sp, #4]
   4365c:	ldr	r2, [sp, #12]
   43660:	blx	r2
   43664:	ldr	r0, [fp, #-12]
   43668:	ldrsb	r0, [r0, #25]
   4366c:	cmp	r0, #0
   43670:	beq	436a8 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   43674:	ldr	r0, [fp, #-12]
   43678:	ldr	r1, [r0, #20]
   4367c:	add	r2, r1, #1
   43680:	str	r2, [r0, #20]
   43684:	movw	r0, #10
   43688:	strb	r0, [r1]
   4368c:	ldr	r0, [fp, #-12]
   43690:	ldr	r1, [r0, #32]
   43694:	mvn	r2, #0
   43698:	add	r1, r1, r2
   4369c:	str	r1, [r0, #32]
   436a0:	ldr	r0, [fp, #-12]
   436a4:	bl	396dc <flatcc_json_printer_indent@@Base+0x20>
   436a8:	ldr	r0, [fp, #-12]
   436ac:	ldr	r1, [r0, #20]
   436b0:	add	r2, r1, #1
   436b4:	str	r2, [r0, #20]
   436b8:	movw	r0, #125	; 0x7d
   436bc:	strb	r0, [r1]
   436c0:	sub	sp, fp, #8
   436c4:	pop	{r4, sl, fp, pc}

000436c8 <flatcc_json_printer_table_as_nested_root@@Base>:
   436c8:	push	{r4, sl, fp, lr}
   436cc:	add	fp, sp, #8
   436d0:	sub	sp, sp, #48	; 0x30
   436d4:	ldr	ip, [fp, #16]
   436d8:	ldr	lr, [fp, #12]
   436dc:	ldr	r4, [fp, #8]
   436e0:	str	r0, [fp, #-12]
   436e4:	str	r1, [fp, #-16]
   436e8:	str	r2, [fp, #-20]	; 0xffffffec
   436ec:	str	r3, [fp, #-24]	; 0xffffffe8
   436f0:	ldr	r0, [fp, #-16]
   436f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   436f8:	str	ip, [sp, #20]
   436fc:	str	lr, [sp, #16]
   43700:	str	r4, [sp, #12]
   43704:	bl	3b4c4 <flatcc_json_printer_string_field@@Base+0xb4>
   43708:	str	r0, [sp, #28]
   4370c:	movw	r1, #0
   43710:	cmp	r1, r0
   43714:	bne	4371c <flatcc_json_printer_table_as_nested_root@@Base+0x54>
   43718:	b	437e8 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   4371c:	ldr	r0, [sp, #28]
   43720:	ldr	r1, [sp, #28]
   43724:	str	r0, [sp, #8]
   43728:	mov	r0, r1
   4372c:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   43730:	ldr	r1, [sp, #8]
   43734:	add	r0, r1, r0
   43738:	str	r0, [sp, #28]
   4373c:	ldr	r0, [sp, #28]
   43740:	bl	3e468 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   43744:	str	r0, [sp, #24]
   43748:	ldr	r0, [sp, #28]
   4374c:	add	r0, r0, #4
   43750:	str	r0, [sp, #28]
   43754:	ldr	r0, [fp, #-12]
   43758:	ldr	r1, [sp, #28]
   4375c:	ldr	r2, [sp, #24]
   43760:	ldr	r3, [fp, #12]
   43764:	bl	432cc <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   43768:	cmp	r0, #0
   4376c:	bne	43774 <flatcc_json_printer_table_as_nested_root@@Base+0xac>
   43770:	b	437e8 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   43774:	ldr	r0, [fp, #-16]
   43778:	ldr	r1, [r0, #16]
   4377c:	add	r2, r1, #1
   43780:	str	r2, [r0, #16]
   43784:	cmp	r1, #0
   43788:	beq	437a4 <flatcc_json_printer_table_as_nested_root@@Base+0xdc>
   4378c:	ldr	r0, [fp, #-12]
   43790:	ldr	r1, [r0, #20]
   43794:	add	r2, r1, #1
   43798:	str	r2, [r0, #20]
   4379c:	movw	r0, #44	; 0x2c
   437a0:	strb	r0, [r1]
   437a4:	ldr	r0, [fp, #-12]
   437a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   437ac:	ldr	r2, [fp, #8]
   437b0:	bl	3b558 <flatcc_json_printer_string_field@@Base+0x148>
   437b4:	ldr	r0, [fp, #-12]
   437b8:	ldr	r1, [sp, #28]
   437bc:	str	r0, [sp, #4]
   437c0:	mov	r0, r1
   437c4:	bl	3b668 <flatcc_json_printer_string_field@@Base+0x258>
   437c8:	ldr	r1, [fp, #-16]
   437cc:	ldr	r2, [r1, #12]
   437d0:	ldr	r3, [fp, #16]
   437d4:	ldr	r1, [sp, #4]
   437d8:	str	r0, [sp]
   437dc:	mov	r0, r1
   437e0:	ldr	r1, [sp]
   437e4:	bl	423c8 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   437e8:	sub	sp, fp, #8
   437ec:	pop	{r4, sl, fp, pc}

000437f0 <flatcc_json_printer_init@@Base>:
   437f0:	push	{fp, lr}
   437f4:	mov	fp, sp
   437f8:	sub	sp, sp, #16
   437fc:	str	r0, [sp, #8]
   43800:	str	r1, [sp, #4]
   43804:	ldr	r0, [sp, #8]
   43808:	movw	r1, #0
   4380c:	and	r1, r1, #255	; 0xff
   43810:	movw	r2, #48	; 0x30
   43814:	bl	14ec0 <memset@plt>
   43818:	ldr	r0, [sp, #4]
   4381c:	movw	r1, #0
   43820:	cmp	r0, r1
   43824:	beq	43834 <flatcc_json_printer_init@@Base+0x44>
   43828:	ldr	r0, [sp, #4]
   4382c:	str	r0, [sp]
   43830:	b	43844 <flatcc_json_printer_init@@Base+0x54>
   43834:	ldr	r0, [pc, #240]	; 4392c <flatcc_json_printer_init@@Base+0x13c>
   43838:	ldr	r0, [pc, r0]
   4383c:	ldr	r0, [r0]
   43840:	str	r0, [sp]
   43844:	ldr	r0, [sp]
   43848:	ldr	r1, [pc, #224]	; 43930 <flatcc_json_printer_init@@Base+0x140>
   4384c:	add	r1, pc, r1
   43850:	ldr	r2, [sp, #8]
   43854:	str	r0, [r2, #40]	; 0x28
   43858:	ldr	r0, [sp, #8]
   4385c:	str	r1, [r0, #44]	; 0x2c
   43860:	movw	r0, #16448	; 0x4040
   43864:	bl	14e78 <malloc@plt>
   43868:	ldr	r1, [sp, #8]
   4386c:	str	r0, [r1]
   43870:	movw	r1, #0
   43874:	cmp	r0, r1
   43878:	bne	43888 <flatcc_json_printer_init@@Base+0x98>
   4387c:	mvn	r0, #0
   43880:	str	r0, [fp, #-4]
   43884:	b	43920 <flatcc_json_printer_init@@Base+0x130>
   43888:	ldr	r0, [sp, #8]
   4388c:	movw	r1, #1
   43890:	strb	r1, [r0, #24]
   43894:	ldr	r0, [sp, #8]
   43898:	movw	r1, #16448	; 0x4040
   4389c:	str	r1, [r0, #4]
   438a0:	ldr	r0, [sp, #8]
   438a4:	movw	r1, #16384	; 0x4000
   438a8:	str	r1, [r0, #8]
   438ac:	ldr	r0, [sp, #8]
   438b0:	ldr	r0, [r0]
   438b4:	ldr	r1, [sp, #8]
   438b8:	str	r0, [r1, #20]
   438bc:	ldr	r0, [sp, #8]
   438c0:	ldr	r0, [r0]
   438c4:	ldr	r1, [sp, #8]
   438c8:	ldr	r1, [r1, #8]
   438cc:	add	r0, r0, r1
   438d0:	ldr	r1, [sp, #8]
   438d4:	str	r0, [r1, #16]
   438d8:	ldr	r0, [sp, #8]
   438dc:	ldr	r0, [r0, #8]
   438e0:	add	r0, r0, #64	; 0x40
   438e4:	ldr	r1, [sp, #8]
   438e8:	ldr	r1, [r1, #4]
   438ec:	cmp	r0, r1
   438f0:	bhi	438f8 <flatcc_json_printer_init@@Base+0x108>
   438f4:	b	43918 <flatcc_json_printer_init@@Base+0x128>
   438f8:	ldr	r0, [pc, #52]	; 43934 <flatcc_json_printer_init@@Base+0x144>
   438fc:	add	r0, pc, r0
   43900:	ldr	r1, [pc, #48]	; 43938 <flatcc_json_printer_init@@Base+0x148>
   43904:	add	r1, pc, r1
   43908:	ldr	r2, [pc, #44]	; 4393c <flatcc_json_printer_init@@Base+0x14c>
   4390c:	add	r3, pc, r2
   43910:	movw	r2, #1147	; 0x47b
   43914:	bl	14f08 <__assert_fail@plt>
   43918:	movw	r0, #0
   4391c:	str	r0, [fp, #-4]
   43920:	ldr	r0, [fp, #-4]
   43924:	mov	sp, fp
   43928:	pop	{fp, pc}
   4392c:	andeq	r9, r1, r8, lsr r8
   43930:	andeq	r0, r0, ip, ror #1
   43934:	andeq	r8, r0, r5, asr r4
   43938:	andeq	r8, r0, fp, lsl r3
   4393c:	andeq	r8, r0, lr, ror r4
   43940:	push	{fp, lr}
   43944:	mov	fp, sp
   43948:	sub	sp, sp, #32
   4394c:	str	r0, [fp, #-4]
   43950:	str	r1, [fp, #-8]
   43954:	ldr	r0, [fp, #-8]
   43958:	cmp	r0, #0
   4395c:	bne	43a24 <flatcc_json_printer_init@@Base+0x234>
   43960:	ldr	r0, [fp, #-4]
   43964:	ldr	r0, [r0, #20]
   43968:	ldr	r1, [fp, #-4]
   4396c:	ldr	r1, [r1, #16]
   43970:	cmp	r0, r1
   43974:	bcc	43a24 <flatcc_json_printer_init@@Base+0x234>
   43978:	ldr	r0, [fp, #-4]
   4397c:	ldr	r0, [r0, #20]
   43980:	ldr	r1, [fp, #-4]
   43984:	ldr	r1, [r1, #16]
   43988:	sub	r0, r0, r1
   4398c:	str	r0, [fp, #-12]
   43990:	ldr	r0, [fp, #-4]
   43994:	ldr	r0, [r0]
   43998:	ldr	r1, [fp, #-4]
   4399c:	ldr	r1, [r1, #8]
   439a0:	ldr	r2, [fp, #-4]
   439a4:	ldr	r2, [r2, #40]	; 0x28
   439a8:	movw	r3, #1
   439ac:	str	r2, [sp, #12]
   439b0:	mov	r2, r3
   439b4:	ldr	r3, [sp, #12]
   439b8:	bl	14e6c <fwrite@plt>
   439bc:	ldr	r1, [fp, #-4]
   439c0:	ldr	r1, [r1]
   439c4:	ldr	r2, [fp, #-4]
   439c8:	ldr	r2, [r2]
   439cc:	ldr	r3, [fp, #-4]
   439d0:	ldr	r3, [r3, #8]
   439d4:	add	r2, r2, r3
   439d8:	ldr	r3, [fp, #-12]
   439dc:	str	r0, [sp, #8]
   439e0:	mov	r0, r1
   439e4:	mov	r1, r2
   439e8:	mov	r2, r3
   439ec:	bl	14e30 <memcpy@plt>
   439f0:	ldr	r0, [fp, #-4]
   439f4:	ldr	r0, [r0]
   439f8:	ldr	r1, [fp, #-12]
   439fc:	add	r0, r0, r1
   43a00:	ldr	r1, [fp, #-4]
   43a04:	str	r0, [r1, #20]
   43a08:	ldr	r0, [fp, #-4]
   43a0c:	ldr	r0, [r0, #8]
   43a10:	ldr	r1, [fp, #-4]
   43a14:	ldr	r2, [r1, #12]
   43a18:	add	r0, r2, r0
   43a1c:	str	r0, [r1, #12]
   43a20:	b	43a88 <flatcc_json_printer_init@@Base+0x298>
   43a24:	ldr	r0, [fp, #-4]
   43a28:	ldr	r0, [r0, #20]
   43a2c:	ldr	r1, [fp, #-4]
   43a30:	ldr	r1, [r1]
   43a34:	sub	r0, r0, r1
   43a38:	str	r0, [sp, #16]
   43a3c:	ldr	r0, [fp, #-4]
   43a40:	ldr	r0, [r0]
   43a44:	ldr	r1, [sp, #16]
   43a48:	ldr	r2, [fp, #-4]
   43a4c:	ldr	r2, [r2, #40]	; 0x28
   43a50:	movw	r3, #1
   43a54:	str	r2, [sp, #4]
   43a58:	mov	r2, r3
   43a5c:	ldr	r3, [sp, #4]
   43a60:	bl	14e6c <fwrite@plt>
   43a64:	ldr	r1, [fp, #-4]
   43a68:	ldr	r1, [r1]
   43a6c:	ldr	r2, [fp, #-4]
   43a70:	str	r1, [r2, #20]
   43a74:	ldr	r1, [sp, #16]
   43a78:	ldr	r2, [fp, #-4]
   43a7c:	ldr	r3, [r2, #12]
   43a80:	add	r1, r3, r1
   43a84:	str	r1, [r2, #12]
   43a88:	ldr	r0, [fp, #-4]
   43a8c:	ldr	r0, [r0, #20]
   43a90:	movw	r1, #0
   43a94:	strb	r1, [r0]
   43a98:	mov	sp, fp
   43a9c:	pop	{fp, pc}

00043aa0 <flatcc_json_printer_init_buffer@@Base>:
   43aa0:	push	{fp, lr}
   43aa4:	mov	fp, sp
   43aa8:	sub	sp, sp, #24
   43aac:	str	r0, [fp, #-8]
   43ab0:	str	r1, [sp, #12]
   43ab4:	str	r2, [sp, #8]
   43ab8:	ldr	r0, [sp, #8]
   43abc:	cmp	r0, #64	; 0x40
   43ac0:	bcc	43ac8 <flatcc_json_printer_init_buffer@@Base+0x28>
   43ac4:	b	43ae8 <flatcc_json_printer_init_buffer@@Base+0x48>
   43ac8:	ldr	r0, [pc, #204]	; 43b9c <flatcc_json_printer_init_buffer@@Base+0xfc>
   43acc:	add	r0, pc, r0
   43ad0:	ldr	r1, [pc, #200]	; 43ba0 <flatcc_json_printer_init_buffer@@Base+0x100>
   43ad4:	add	r1, pc, r1
   43ad8:	ldr	r2, [pc, #196]	; 43ba4 <flatcc_json_printer_init_buffer@@Base+0x104>
   43adc:	add	r3, pc, r2
   43ae0:	movw	r2, #1165	; 0x48d
   43ae4:	bl	14f08 <__assert_fail@plt>
   43ae8:	ldr	r0, [sp, #8]
   43aec:	cmp	r0, #64	; 0x40
   43af0:	bcs	43b00 <flatcc_json_printer_init_buffer@@Base+0x60>
   43af4:	mvn	r0, #0
   43af8:	str	r0, [fp, #-4]
   43afc:	b	43b90 <flatcc_json_printer_init_buffer@@Base+0xf0>
   43b00:	ldr	r0, [pc, #160]	; 43ba8 <flatcc_json_printer_init_buffer@@Base+0x108>
   43b04:	add	r0, pc, r0
   43b08:	ldr	r1, [fp, #-8]
   43b0c:	str	r0, [sp, #4]
   43b10:	mov	r0, r1
   43b14:	movw	r1, #0
   43b18:	and	r1, r1, #255	; 0xff
   43b1c:	movw	r2, #48	; 0x30
   43b20:	bl	14ec0 <memset@plt>
   43b24:	ldr	r0, [sp, #12]
   43b28:	ldr	r1, [fp, #-8]
   43b2c:	str	r0, [r1]
   43b30:	ldr	r0, [sp, #8]
   43b34:	ldr	r1, [fp, #-8]
   43b38:	str	r0, [r1, #4]
   43b3c:	ldr	r0, [fp, #-8]
   43b40:	ldr	r0, [r0, #4]
   43b44:	sub	r0, r0, #64	; 0x40
   43b48:	ldr	r1, [fp, #-8]
   43b4c:	str	r0, [r1, #8]
   43b50:	ldr	r0, [fp, #-8]
   43b54:	ldr	r0, [r0]
   43b58:	ldr	r1, [fp, #-8]
   43b5c:	str	r0, [r1, #20]
   43b60:	ldr	r0, [fp, #-8]
   43b64:	ldr	r0, [r0]
   43b68:	ldr	r1, [fp, #-8]
   43b6c:	ldr	r1, [r1, #8]
   43b70:	add	r0, r0, r1
   43b74:	ldr	r1, [fp, #-8]
   43b78:	str	r0, [r1, #16]
   43b7c:	ldr	r0, [fp, #-8]
   43b80:	ldr	r1, [sp, #4]
   43b84:	str	r1, [r0, #44]	; 0x2c
   43b88:	movw	r0, #0
   43b8c:	str	r0, [fp, #-4]
   43b90:	ldr	r0, [fp, #-4]
   43b94:	mov	sp, fp
   43b98:	pop	{fp, pc}
   43b9c:	strdeq	r8, [r0], -ip
   43ba0:	andeq	r8, r0, fp, asr #2
   43ba4:	andeq	r8, r0, r5, lsl r3
   43ba8:	andeq	r0, r0, r0, lsr #1
   43bac:	push	{fp, lr}
   43bb0:	mov	fp, sp
   43bb4:	sub	sp, sp, #8
   43bb8:	str	r0, [sp, #4]
   43bbc:	str	r1, [sp]
   43bc0:	ldr	r0, [sp, #4]
   43bc4:	ldr	r0, [r0, #20]
   43bc8:	ldr	r1, [sp, #4]
   43bcc:	ldr	r1, [r1, #16]
   43bd0:	cmp	r0, r1
   43bd4:	bcc	43c18 <flatcc_json_printer_init_buffer@@Base+0x178>
   43bd8:	ldr	r0, [sp, #4]
   43bdc:	movw	r1, #3
   43be0:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43be4:	ldr	r0, [sp, #4]
   43be8:	ldr	r0, [r0, #20]
   43bec:	ldr	r1, [sp, #4]
   43bf0:	ldr	r1, [r1]
   43bf4:	sub	r0, r0, r1
   43bf8:	ldr	r1, [sp, #4]
   43bfc:	ldr	r2, [r1, #12]
   43c00:	add	r0, r2, r0
   43c04:	str	r0, [r1, #12]
   43c08:	ldr	r0, [sp, #4]
   43c0c:	ldr	r0, [r0]
   43c10:	ldr	r1, [sp, #4]
   43c14:	str	r0, [r1, #20]
   43c18:	ldr	r0, [sp, #4]
   43c1c:	ldr	r0, [r0, #20]
   43c20:	movw	r1, #0
   43c24:	strb	r1, [r0]
   43c28:	mov	sp, fp
   43c2c:	pop	{fp, pc}

00043c30 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   43c30:	push	{fp, lr}
   43c34:	mov	fp, sp
   43c38:	sub	sp, sp, #16
   43c3c:	str	r0, [sp, #8]
   43c40:	str	r1, [sp, #4]
   43c44:	ldr	r0, [sp, #4]
   43c48:	cmp	r0, #0
   43c4c:	bne	43c58 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   43c50:	movw	r0, #4096	; 0x1000
   43c54:	str	r0, [sp, #4]
   43c58:	ldr	r0, [sp, #4]
   43c5c:	cmp	r0, #64	; 0x40
   43c60:	bcs	43c6c <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   43c64:	movw	r0, #64	; 0x40
   43c68:	str	r0, [sp, #4]
   43c6c:	ldr	r0, [sp, #8]
   43c70:	movw	r1, #0
   43c74:	and	r1, r1, #255	; 0xff
   43c78:	movw	r2, #48	; 0x30
   43c7c:	bl	14ec0 <memset@plt>
   43c80:	ldr	r0, [sp, #4]
   43c84:	bl	14e78 <malloc@plt>
   43c88:	ldr	r1, [pc, #168]	; 43d38 <flatcc_json_printer_init_dynamic_buffer@@Base+0x108>
   43c8c:	add	r1, pc, r1
   43c90:	ldr	r2, [sp, #8]
   43c94:	str	r0, [r2]
   43c98:	ldr	r0, [sp, #8]
   43c9c:	movw	r2, #1
   43ca0:	strb	r2, [r0, #24]
   43ca4:	ldr	r0, [sp, #4]
   43ca8:	ldr	r2, [sp, #8]
   43cac:	str	r0, [r2, #4]
   43cb0:	ldr	r0, [sp, #8]
   43cb4:	ldr	r0, [r0, #4]
   43cb8:	sub	r0, r0, #64	; 0x40
   43cbc:	ldr	r2, [sp, #8]
   43cc0:	str	r0, [r2, #8]
   43cc4:	ldr	r0, [sp, #8]
   43cc8:	ldr	r0, [r0]
   43ccc:	ldr	r2, [sp, #8]
   43cd0:	str	r0, [r2, #20]
   43cd4:	ldr	r0, [sp, #8]
   43cd8:	ldr	r0, [r0]
   43cdc:	ldr	r2, [sp, #8]
   43ce0:	ldr	r2, [r2, #8]
   43ce4:	add	r0, r0, r2
   43ce8:	ldr	r2, [sp, #8]
   43cec:	str	r0, [r2, #16]
   43cf0:	ldr	r0, [sp, #8]
   43cf4:	str	r1, [r0, #44]	; 0x2c
   43cf8:	ldr	r0, [sp, #8]
   43cfc:	ldr	r0, [r0]
   43d00:	movw	r1, #0
   43d04:	cmp	r0, r1
   43d08:	bne	43d24 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   43d0c:	ldr	r0, [sp, #8]
   43d10:	movw	r1, #3
   43d14:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43d18:	mvn	r0, #0
   43d1c:	str	r0, [fp, #-4]
   43d20:	b	43d2c <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   43d24:	movw	r0, #0
   43d28:	str	r0, [fp, #-4]
   43d2c:	ldr	r0, [fp, #-4]
   43d30:	mov	sp, fp
   43d34:	pop	{fp, pc}
   43d38:	andeq	r0, r0, r8, lsr #1
   43d3c:	push	{fp, lr}
   43d40:	mov	fp, sp
   43d44:	sub	sp, sp, #24
   43d48:	str	r0, [fp, #-4]
   43d4c:	str	r1, [fp, #-8]
   43d50:	ldr	r0, [fp, #-4]
   43d54:	ldr	r0, [r0, #20]
   43d58:	ldr	r1, [fp, #-4]
   43d5c:	ldr	r1, [r1]
   43d60:	sub	r0, r0, r1
   43d64:	str	r0, [sp, #12]
   43d68:	ldr	r0, [fp, #-4]
   43d6c:	ldr	r0, [r0, #20]
   43d70:	movw	r1, #0
   43d74:	strb	r1, [r0]
   43d78:	ldr	r0, [fp, #-4]
   43d7c:	ldr	r0, [r0, #20]
   43d80:	ldr	r1, [fp, #-4]
   43d84:	ldr	r1, [r1, #16]
   43d88:	cmp	r0, r1
   43d8c:	bcs	43d94 <flatcc_json_printer_init_dynamic_buffer@@Base+0x164>
   43d90:	b	43e68 <flatcc_json_printer_init_dynamic_buffer@@Base+0x238>
   43d94:	ldr	r0, [fp, #-4]
   43d98:	ldr	r1, [r0]
   43d9c:	ldr	r0, [r0, #4]
   43da0:	lsl	r0, r0, #1
   43da4:	str	r0, [sp, #4]
   43da8:	mov	r0, r1
   43dac:	ldr	r1, [sp, #4]
   43db0:	bl	14e60 <realloc@plt>
   43db4:	str	r0, [sp, #8]
   43db8:	ldr	r0, [sp, #8]
   43dbc:	movw	r1, #0
   43dc0:	cmp	r0, r1
   43dc4:	bne	43dfc <flatcc_json_printer_init_dynamic_buffer@@Base+0x1cc>
   43dc8:	ldr	r0, [fp, #-4]
   43dcc:	movw	r1, #3
   43dd0:	bl	42940 <flatcc_json_printer_union_vector_field@@Base+0x438>
   43dd4:	ldr	r0, [sp, #12]
   43dd8:	ldr	r1, [fp, #-4]
   43ddc:	ldr	r2, [r1, #12]
   43de0:	add	r0, r2, r0
   43de4:	str	r0, [r1, #12]
   43de8:	ldr	r0, [fp, #-4]
   43dec:	ldr	r0, [r0]
   43df0:	ldr	r1, [fp, #-4]
   43df4:	str	r0, [r1, #20]
   43df8:	b	43e58 <flatcc_json_printer_init_dynamic_buffer@@Base+0x228>
   43dfc:	ldr	r0, [fp, #-4]
   43e00:	ldr	r1, [r0, #4]
   43e04:	lsl	r1, r1, #1
   43e08:	str	r1, [r0, #4]
   43e0c:	ldr	r0, [fp, #-4]
   43e10:	ldr	r0, [r0, #4]
   43e14:	sub	r0, r0, #64	; 0x40
   43e18:	ldr	r1, [fp, #-4]
   43e1c:	str	r0, [r1, #8]
   43e20:	ldr	r0, [sp, #8]
   43e24:	ldr	r1, [fp, #-4]
   43e28:	str	r0, [r1]
   43e2c:	ldr	r0, [sp, #8]
   43e30:	ldr	r1, [sp, #12]
   43e34:	add	r0, r0, r1
   43e38:	ldr	r1, [fp, #-4]
   43e3c:	str	r0, [r1, #20]
   43e40:	ldr	r0, [sp, #8]
   43e44:	ldr	r1, [fp, #-4]
   43e48:	ldr	r1, [r1, #8]
   43e4c:	add	r0, r0, r1
   43e50:	ldr	r1, [fp, #-4]
   43e54:	str	r0, [r1, #16]
   43e58:	ldr	r0, [fp, #-4]
   43e5c:	ldr	r0, [r0, #20]
   43e60:	movw	r1, #0
   43e64:	strb	r1, [r0]
   43e68:	mov	sp, fp
   43e6c:	pop	{fp, pc}

00043e70 <flatcc_json_printer_get_buffer@@Base>:
   43e70:	push	{fp, lr}
   43e74:	mov	fp, sp
   43e78:	sub	sp, sp, #16
   43e7c:	str	r0, [fp, #-4]
   43e80:	str	r1, [sp, #8]
   43e84:	ldr	r0, [fp, #-4]
   43e88:	ldr	r0, [r0, #44]	; 0x2c
   43e8c:	ldr	r1, [fp, #-4]
   43e90:	str	r0, [sp, #4]
   43e94:	mov	r0, r1
   43e98:	movw	r1, #0
   43e9c:	ldr	r2, [sp, #4]
   43ea0:	blx	r2
   43ea4:	ldr	r0, [sp, #8]
   43ea8:	movw	r1, #0
   43eac:	cmp	r0, r1
   43eb0:	beq	43ed0 <flatcc_json_printer_get_buffer@@Base+0x60>
   43eb4:	ldr	r0, [fp, #-4]
   43eb8:	ldr	r0, [r0, #20]
   43ebc:	ldr	r1, [fp, #-4]
   43ec0:	ldr	r1, [r1]
   43ec4:	sub	r0, r0, r1
   43ec8:	ldr	r1, [sp, #8]
   43ecc:	str	r0, [r1]
   43ed0:	ldr	r0, [fp, #-4]
   43ed4:	ldr	r0, [r0]
   43ed8:	mov	sp, fp
   43edc:	pop	{fp, pc}

00043ee0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   43ee0:	push	{fp, lr}
   43ee4:	mov	fp, sp
   43ee8:	sub	sp, sp, #16
   43eec:	str	r0, [fp, #-4]
   43ef0:	str	r1, [sp, #8]
   43ef4:	ldr	r0, [fp, #-4]
   43ef8:	ldr	r1, [sp, #8]
   43efc:	bl	43e70 <flatcc_json_printer_get_buffer@@Base>
   43f00:	str	r0, [sp, #4]
   43f04:	ldr	r0, [fp, #-4]
   43f08:	movw	r1, #0
   43f0c:	and	r1, r1, #255	; 0xff
   43f10:	movw	r2, #48	; 0x30
   43f14:	bl	14ec0 <memset@plt>
   43f18:	ldr	r0, [sp, #4]
   43f1c:	mov	sp, fp
   43f20:	pop	{fp, pc}

00043f24 <flatcc_json_printer_clear@@Base>:
   43f24:	push	{fp, lr}
   43f28:	mov	fp, sp
   43f2c:	sub	sp, sp, #8
   43f30:	str	r0, [sp, #4]
   43f34:	ldr	r0, [sp, #4]
   43f38:	ldrb	r0, [r0, #24]
   43f3c:	cmp	r0, #0
   43f40:	beq	43f64 <flatcc_json_printer_clear@@Base+0x40>
   43f44:	ldr	r0, [sp, #4]
   43f48:	ldr	r0, [r0]
   43f4c:	movw	r1, #0
   43f50:	cmp	r0, r1
   43f54:	beq	43f64 <flatcc_json_printer_clear@@Base+0x40>
   43f58:	ldr	r0, [sp, #4]
   43f5c:	ldr	r0, [r0]
   43f60:	bl	14e24 <free@plt>
   43f64:	ldr	r0, [sp, #4]
   43f68:	movw	r1, #0
   43f6c:	and	r1, r1, #255	; 0xff
   43f70:	movw	r2, #48	; 0x30
   43f74:	bl	14ec0 <memset@plt>
   43f78:	mov	sp, fp
   43f7c:	pop	{fp, pc}
   43f80:	sub	sp, sp, #16
   43f84:	vstr	d0, [sp, #8]
   43f88:	vldr	d16, [sp, #8]
   43f8c:	vstr	d16, [sp]
   43f90:	ldr	r0, [sp]
   43f94:	ldr	r1, [sp, #4]
   43f98:	add	sp, sp, #16
   43f9c:	bx	lr
   43fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43fa4:	add	fp, sp, #28
   43fa8:	sub	sp, sp, #260	; 0x104
   43fac:	vstr	d0, [fp, #-40]	; 0xffffffd8
   43fb0:	str	r0, [fp, #-44]	; 0xffffffd4
   43fb4:	str	r1, [fp, #-48]	; 0xffffffd0
   43fb8:	str	r2, [fp, #-52]	; 0xffffffcc
   43fbc:	vldr	d0, [fp, #-40]	; 0xffffffd8
   43fc0:	sub	r0, fp, #80	; 0x50
   43fc4:	bl	444d0 <flatcc_json_printer_clear@@Base+0x5ac>
   43fc8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   43fcc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   43fd0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   43fd4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   43fd8:	mov	ip, sp
   43fdc:	str	r1, [ip, #4]
   43fe0:	str	r0, [ip]
   43fe4:	sub	r0, fp, #96	; 0x60
   43fe8:	bl	44568 <flatcc_json_printer_clear@@Base+0x644>
   43fec:	ldr	r0, [fp, #-80]	; 0xffffffb0
   43ff0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   43ff4:	lsl	r1, r1, #1
   43ff8:	orr	r1, r1, r0, lsr #31
   43ffc:	mov	r2, #1
   44000:	orr	r0, r2, r0, lsl #1
   44004:	str	r0, [fp, #-112]	; 0xffffff90
   44008:	str	r1, [fp, #-108]	; 0xffffff94
   4400c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44010:	sub	r0, r0, #1
   44014:	str	r0, [fp, #-104]	; 0xffffff98
   44018:	ldr	r2, [fp, #-112]	; 0xffffff90
   4401c:	ldr	r3, [fp, #-108]	; 0xffffff94
   44020:	ldr	r0, [fp, #-104]	; 0xffffff98
   44024:	ldr	r1, [fp, #-100]	; 0xffffff9c
   44028:	mov	ip, sp
   4402c:	str	r1, [ip, #4]
   44030:	str	r0, [ip]
   44034:	sub	r0, fp, #128	; 0x80
   44038:	bl	44568 <flatcc_json_printer_clear@@Base+0x644>
   4403c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   44040:	bl	43f80 <flatcc_json_printer_clear@@Base+0x5c>
   44044:	str	r1, [sp, #124]	; 0x7c
   44048:	str	r0, [sp, #120]	; 0x78
   4404c:	vldr	d16, [fp, #-40]	; 0xffffffd8
   44050:	vcmpe.f64	d16, #0.0
   44054:	vmrs	APSR_nzcv, fpscr
   44058:	ble	44074 <flatcc_json_printer_clear@@Base+0x150>
   4405c:	vldr	d16, [pc, #756]	; 44358 <flatcc_json_printer_clear@@Base+0x434>
   44060:	vldr	d17, [fp, #-40]	; 0xffffffd8
   44064:	vcmpe.f64	d17, d16
   44068:	vmrs	APSR_nzcv, fpscr
   4406c:	bhi	44074 <flatcc_json_printer_clear@@Base+0x150>
   44070:	b	44094 <flatcc_json_printer_clear@@Base+0x170>
   44074:	ldr	r0, [pc, #740]	; 44360 <flatcc_json_printer_clear@@Base+0x43c>
   44078:	add	r0, pc, r0
   4407c:	ldr	r1, [pc, #736]	; 44364 <flatcc_json_printer_clear@@Base+0x440>
   44080:	add	r1, pc, r1
   44084:	ldr	r2, [pc, #732]	; 44368 <flatcc_json_printer_clear@@Base+0x444>
   44088:	add	r3, pc, r2
   4408c:	movw	r2, #138	; 0x8a
   44090:	bl	14f08 <__assert_fail@plt>
   44094:	ldr	r0, [sp, #120]	; 0x78
   44098:	ldr	r1, [sp, #124]	; 0x7c
   4409c:	bfc	r1, #20, #12
   440a0:	orr	r0, r0, r1
   440a4:	cmp	r0, #0
   440a8:	bne	440f8 <flatcc_json_printer_clear@@Base+0x1d4>
   440ac:	b	440b0 <flatcc_json_printer_clear@@Base+0x18c>
   440b0:	ldrh	r0, [sp, #126]	; 0x7e
   440b4:	movw	r1, #32752	; 0x7ff0
   440b8:	tst	r0, r1
   440bc:	beq	440f8 <flatcc_json_printer_clear@@Base+0x1d4>
   440c0:	b	440c4 <flatcc_json_printer_clear@@Base+0x1a0>
   440c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   440c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   440cc:	lsl	r1, r1, #2
   440d0:	orr	r1, r1, r0, lsr #30
   440d4:	mvn	r2, #0
   440d8:	adds	r0, r2, r0, lsl #2
   440dc:	sbc	r1, r1, #0
   440e0:	str	r0, [sp, #144]	; 0x90
   440e4:	str	r1, [sp, #148]	; 0x94
   440e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   440ec:	sub	r0, r0, #2
   440f0:	str	r0, [sp, #152]	; 0x98
   440f4:	b	44128 <flatcc_json_printer_clear@@Base+0x204>
   440f8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   440fc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   44100:	lsl	r1, r1, #1
   44104:	orr	r1, r1, r0, lsr #31
   44108:	mvn	r2, #0
   4410c:	adds	r0, r2, r0, lsl #1
   44110:	sbc	r1, r1, #0
   44114:	str	r0, [sp, #144]	; 0x90
   44118:	str	r1, [sp, #148]	; 0x94
   4411c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   44120:	sub	r0, r0, #1
   44124:	str	r0, [sp, #152]	; 0x98
   44128:	ldr	r0, [sp, #144]	; 0x90
   4412c:	ldr	r1, [sp, #148]	; 0x94
   44130:	ldr	r2, [sp, #152]	; 0x98
   44134:	ldr	r3, [fp, #-120]	; 0xffffff88
   44138:	sub	r2, r2, r3
   4413c:	rsb	r3, r2, #32
   44140:	lsr	r3, r0, r3
   44144:	orr	r1, r3, r1, lsl r2
   44148:	sub	r3, r2, #32
   4414c:	cmp	r3, #0
   44150:	lslpl	r1, r0, r3
   44154:	lsl	r0, r0, r2
   44158:	cmp	r3, #0
   4415c:	movwpl	r0, #0
   44160:	str	r0, [sp, #144]	; 0x90
   44164:	str	r1, [sp, #148]	; 0x94
   44168:	ldr	r0, [fp, #-120]	; 0xffffff88
   4416c:	str	r0, [sp, #152]	; 0x98
   44170:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44174:	mvn	r1, #123	; 0x7b
   44178:	sub	r0, r1, r0
   4417c:	add	r1, sp, #128	; 0x80
   44180:	bl	446a0 <flatcc_json_printer_clear@@Base+0x77c>
   44184:	str	r0, [fp, #-56]	; 0xffffffc8
   44188:	ldr	r2, [fp, #-96]	; 0xffffffa0
   4418c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   44190:	ldr	r0, [fp, #-88]	; 0xffffffa8
   44194:	ldr	r1, [fp, #-84]	; 0xffffffac
   44198:	ldr	ip, [sp, #128]	; 0x80
   4419c:	ldr	lr, [sp, #132]	; 0x84
   441a0:	ldr	r4, [sp, #136]	; 0x88
   441a4:	ldr	r5, [sp, #140]	; 0x8c
   441a8:	mov	r6, sp
   441ac:	str	r5, [r6, #20]
   441b0:	str	r4, [r6, #16]
   441b4:	str	lr, [r6, #12]
   441b8:	str	ip, [r6, #8]
   441bc:	str	r1, [r6, #4]
   441c0:	str	r0, [r6]
   441c4:	add	r0, sp, #104	; 0x68
   441c8:	str	r0, [sp, #68]	; 0x44
   441cc:	bl	44760 <flatcc_json_printer_clear@@Base+0x83c>
   441d0:	ldr	r0, [sp, #68]	; 0x44
   441d4:	vld1.64	{d16-d17}, [r0]
   441d8:	sub	r1, fp, #96	; 0x60
   441dc:	vst1.64	{d16-d17}, [r1]
   441e0:	ldr	r2, [sp, #144]	; 0x90
   441e4:	ldr	r3, [sp, #148]	; 0x94
   441e8:	ldr	r1, [sp, #152]	; 0x98
   441ec:	ldr	ip, [sp, #156]	; 0x9c
   441f0:	ldr	lr, [sp, #128]	; 0x80
   441f4:	ldr	r4, [sp, #132]	; 0x84
   441f8:	ldr	r5, [sp, #136]	; 0x88
   441fc:	ldr	r6, [sp, #140]	; 0x8c
   44200:	mov	r7, sp
   44204:	str	r6, [r7, #20]
   44208:	str	r5, [r7, #16]
   4420c:	str	r4, [r7, #12]
   44210:	str	lr, [r7, #8]
   44214:	str	ip, [r7, #4]
   44218:	str	r1, [r7]
   4421c:	add	r1, sp, #88	; 0x58
   44220:	mov	r0, r1
   44224:	str	r1, [sp, #64]	; 0x40
   44228:	bl	44760 <flatcc_json_printer_clear@@Base+0x83c>
   4422c:	ldr	r0, [sp, #64]	; 0x40
   44230:	vld1.64	{d16-d17}, [r0]
   44234:	add	r1, sp, #144	; 0x90
   44238:	vst1.64	{d16-d17}, [r1]
   4423c:	ldr	r2, [fp, #-128]	; 0xffffff80
   44240:	ldr	r3, [fp, #-124]	; 0xffffff84
   44244:	ldr	r1, [fp, #-120]	; 0xffffff88
   44248:	ldr	ip, [fp, #-116]	; 0xffffff8c
   4424c:	ldr	lr, [sp, #128]	; 0x80
   44250:	ldr	r4, [sp, #132]	; 0x84
   44254:	ldr	r5, [sp, #136]	; 0x88
   44258:	ldr	r6, [sp, #140]	; 0x8c
   4425c:	mov	r7, sp
   44260:	str	r6, [r7, #20]
   44264:	str	r5, [r7, #16]
   44268:	str	r4, [r7, #12]
   4426c:	str	lr, [r7, #8]
   44270:	str	ip, [r7, #4]
   44274:	str	r1, [r7]
   44278:	add	r1, sp, #72	; 0x48
   4427c:	mov	r0, r1
   44280:	str	r1, [sp, #60]	; 0x3c
   44284:	bl	44760 <flatcc_json_printer_clear@@Base+0x83c>
   44288:	ldr	r0, [sp, #60]	; 0x3c
   4428c:	vld1.64	{d16-d17}, [r0]
   44290:	sub	r1, fp, #128	; 0x80
   44294:	vst1.64	{d16-d17}, [r1]
   44298:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4429c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   442a0:	ldr	r0, [sp, #144]	; 0x90
   442a4:	ldr	r3, [sp, #148]	; 0x94
   442a8:	ldr	ip, [sp, #152]	; 0x98
   442ac:	ldr	lr, [sp, #156]	; 0x9c
   442b0:	ldr	r4, [fp, #-96]	; 0xffffffa0
   442b4:	ldr	r5, [fp, #-92]	; 0xffffffa4
   442b8:	ldr	r6, [fp, #-88]	; 0xffffffa8
   442bc:	ldr	r7, [fp, #-84]	; 0xffffffac
   442c0:	ldr	r8, [fp, #-128]	; 0xffffff80
   442c4:	ldr	r9, [fp, #-124]	; 0xffffff84
   442c8:	ldr	sl, [fp, #-120]	; 0xffffff88
   442cc:	str	r0, [sp, #56]	; 0x38
   442d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   442d4:	str	r0, [sp, #52]	; 0x34
   442d8:	mov	r0, sp
   442dc:	str	r0, [sp, #48]	; 0x30
   442e0:	sub	r0, fp, #60	; 0x3c
   442e4:	str	r1, [sp, #44]	; 0x2c
   442e8:	ldr	r1, [sp, #48]	; 0x30
   442ec:	str	r0, [r1, #40]	; 0x28
   442f0:	str	r2, [r1, #36]	; 0x24
   442f4:	ldr	r0, [sp, #44]	; 0x2c
   442f8:	str	r0, [r1, #32]
   442fc:	str	r9, [r1, #20]
   44300:	str	r8, [r1, #16]
   44304:	str	r5, [r1, #4]
   44308:	str	r4, [r1]
   4430c:	str	sl, [r1, #24]
   44310:	str	r6, [r1, #8]
   44314:	ldr	r2, [sp, #52]	; 0x34
   44318:	str	r2, [r1, #28]
   4431c:	str	r7, [r1, #12]
   44320:	ldr	r0, [sp, #56]	; 0x38
   44324:	mov	r1, r3
   44328:	mov	r2, ip
   4432c:	mov	r3, lr
   44330:	bl	448f4 <flatcc_json_printer_clear@@Base+0x9d0>
   44334:	str	r0, [fp, #-64]	; 0xffffffc0
   44338:	ldr	r0, [fp, #-60]	; 0xffffffc4
   4433c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44340:	sub	r0, r0, r1
   44344:	ldr	r1, [fp, #-52]	; 0xffffffcc
   44348:	str	r0, [r1]
   4434c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44350:	sub	sp, fp, #28
   44354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44358:			; <UNDEFINED> instruction: 0xffffffff
   4435c:	svcvc	0x00efffff
   44360:	andeq	r7, r0, r4, ror lr
   44364:	andeq	r7, r0, r2, asr #27
   44368:	andeq	r7, r0, r9, lsl #29
   4436c:	sub	sp, sp, #36	; 0x24
   44370:	str	r0, [sp, #32]
   44374:	str	r1, [sp, #28]
   44378:	ldr	r0, [sp, #28]
   4437c:	str	r0, [sp, #12]
   44380:	ldr	r0, [sp, #32]
   44384:	cmp	r0, #0
   44388:	bge	443b0 <flatcc_json_printer_clear@@Base+0x48c>
   4438c:	ldr	r0, [sp, #28]
   44390:	add	r1, r0, #1
   44394:	str	r1, [sp, #28]
   44398:	movw	r1, #45	; 0x2d
   4439c:	strb	r1, [r0]
   443a0:	ldr	r0, [sp, #32]
   443a4:	movw	r1, #0
   443a8:	sub	r0, r1, r0
   443ac:	str	r0, [sp, #32]
   443b0:	ldr	r0, [sp, #28]
   443b4:	str	r0, [sp, #16]
   443b8:	ldr	r0, [sp, #32]
   443bc:	movw	r1, #10
   443c0:	sdiv	r0, r0, r1
   443c4:	str	r0, [sp, #8]
   443c8:	ldr	r0, [sp, #32]
   443cc:	ldr	r2, [sp, #8]
   443d0:	mul	r1, r2, r1
   443d4:	sub	r0, r0, r1
   443d8:	str	r0, [sp, #4]
   443dc:	ldr	r0, [sp, #4]
   443e0:	add	r0, r0, #48	; 0x30
   443e4:	ldr	r1, [sp, #16]
   443e8:	add	r2, r1, #1
   443ec:	str	r2, [sp, #16]
   443f0:	strb	r0, [r1]
   443f4:	ldr	r0, [sp, #8]
   443f8:	cmp	r0, #0
   443fc:	bne	44404 <flatcc_json_printer_clear@@Base+0x4e0>
   44400:	b	44410 <flatcc_json_printer_clear@@Base+0x4ec>
   44404:	ldr	r0, [sp, #8]
   44408:	str	r0, [sp, #32]
   4440c:	b	443b8 <flatcc_json_printer_clear@@Base+0x494>
   44410:	ldr	r0, [sp, #16]
   44414:	movw	r1, #0
   44418:	strb	r1, [r0]
   4441c:	ldr	r0, [sp, #16]
   44420:	ldr	r1, [sp, #28]
   44424:	sub	r0, r0, r1
   44428:	str	r0, [sp, #24]
   4442c:	movw	r0, #0
   44430:	str	r0, [sp, #20]
   44434:	ldr	r0, [sp, #20]
   44438:	ldr	r1, [sp, #24]
   4443c:	movw	r2, #2
   44440:	sdiv	r1, r1, r2
   44444:	cmp	r0, r1
   44448:	bge	444bc <flatcc_json_printer_clear@@Base+0x598>
   4444c:	ldr	r0, [sp, #28]
   44450:	ldr	r1, [sp, #20]
   44454:	add	r0, r0, r1
   44458:	ldrb	r0, [r0]
   4445c:	strb	r0, [sp, #3]
   44460:	ldr	r0, [sp, #28]
   44464:	ldr	r1, [sp, #24]
   44468:	sub	r1, r1, #1
   4446c:	ldr	r2, [sp, #20]
   44470:	sub	r1, r1, r2
   44474:	add	r0, r0, r1
   44478:	ldrb	r0, [r0]
   4447c:	ldr	r1, [sp, #28]
   44480:	ldr	r2, [sp, #20]
   44484:	add	r1, r1, r2
   44488:	strb	r0, [r1]
   4448c:	ldrb	r0, [sp, #3]
   44490:	ldr	r1, [sp, #28]
   44494:	ldr	r2, [sp, #24]
   44498:	sub	r2, r2, #1
   4449c:	ldr	r3, [sp, #20]
   444a0:	sub	r2, r2, r3
   444a4:	add	r1, r1, r2
   444a8:	strb	r0, [r1]
   444ac:	ldr	r0, [sp, #20]
   444b0:	add	r0, r0, #1
   444b4:	str	r0, [sp, #20]
   444b8:	b	44434 <flatcc_json_printer_clear@@Base+0x510>
   444bc:	ldr	r0, [sp, #16]
   444c0:	ldr	r1, [sp, #12]
   444c4:	sub	r0, r0, r1
   444c8:	add	sp, sp, #36	; 0x24
   444cc:	bx	lr
   444d0:	push	{fp, lr}
   444d4:	mov	fp, sp
   444d8:	sub	sp, sp, #24
   444dc:	vstr	d0, [fp, #-8]
   444e0:	vldr	d0, [fp, #-8]
   444e4:	str	r0, [sp, #4]
   444e8:	bl	43f80 <flatcc_json_printer_clear@@Base+0x5c>
   444ec:	str	r1, [sp, #12]
   444f0:	str	r0, [sp, #8]
   444f4:	ldrh	r0, [sp, #14]
   444f8:	movw	r1, #32752	; 0x7ff0
   444fc:	tst	r0, r1
   44500:	bne	4452c <flatcc_json_printer_clear@@Base+0x608>
   44504:	b	44508 <flatcc_json_printer_clear@@Base+0x5e4>
   44508:	ldr	r0, [pc, #84]	; 44564 <flatcc_json_printer_clear@@Base+0x640>
   4450c:	ldr	r1, [sp, #8]
   44510:	ldr	r2, [sp, #12]
   44514:	bfc	r2, #20, #12
   44518:	ldr	r3, [sp, #4]
   4451c:	str	r1, [r3]
   44520:	str	r2, [r3, #4]
   44524:	str	r0, [r3, #8]
   44528:	b	4455c <flatcc_json_printer_clear@@Base+0x638>
   4452c:	ldr	r0, [sp, #8]
   44530:	ldr	r1, [sp, #12]
   44534:	mov	r2, #1
   44538:	bfi	r1, r2, #20, #12
   4453c:	ldr	r2, [sp, #4]
   44540:	str	r0, [r2]
   44544:	str	r1, [r2, #4]
   44548:	ldr	r0, [sp, #12]
   4454c:	ubfx	r0, r0, #20, #11
   44550:	movw	r1, #1075	; 0x433
   44554:	sub	r0, r0, r1
   44558:	str	r0, [r2, #8]
   4455c:	mov	sp, fp
   44560:	pop	{fp, pc}
   44564:			; <UNDEFINED> instruction: 0xfffffbce
   44568:	push	{fp, lr}
   4456c:	mov	fp, sp
   44570:	sub	sp, sp, #24
   44574:	ldr	r1, [fp, #12]
   44578:	ldr	ip, [fp, #8]
   4457c:	str	r2, [sp, #8]
   44580:	str	r3, [sp, #12]
   44584:	str	ip, [sp, #16]
   44588:	str	r1, [sp, #20]
   4458c:	ldr	r1, [sp, #8]
   44590:	ldr	r2, [sp, #12]
   44594:	orr	r1, r1, r2
   44598:	cmp	r1, #0
   4459c:	str	r0, [sp, #4]
   445a0:	beq	445ac <flatcc_json_printer_clear@@Base+0x688>
   445a4:	b	445a8 <flatcc_json_printer_clear@@Base+0x684>
   445a8:	b	445cc <flatcc_json_printer_clear@@Base+0x6a8>
   445ac:	ldr	r0, [pc, #224]	; 44694 <flatcc_json_printer_clear@@Base+0x770>
   445b0:	add	r0, pc, r0
   445b4:	ldr	r1, [pc, #220]	; 44698 <flatcc_json_printer_clear@@Base+0x774>
   445b8:	add	r1, pc, r1
   445bc:	ldr	r2, [pc, #216]	; 4469c <flatcc_json_printer_clear@@Base+0x778>
   445c0:	add	r3, pc, r2
   445c4:	movw	r2, #260	; 0x104
   445c8:	bl	14f08 <__assert_fail@plt>
   445cc:	b	445d0 <flatcc_json_printer_clear@@Base+0x6ac>
   445d0:	ldrh	r0, [sp, #14]
   445d4:	bic	r0, r0, #63	; 0x3f
   445d8:	cmp	r0, #0
   445dc:	movwne	r0, #1
   445e0:	mvn	r1, #0
   445e4:	eor	r0, r0, r1
   445e8:	tst	r0, #1
   445ec:	beq	4461c <flatcc_json_printer_clear@@Base+0x6f8>
   445f0:	ldr	r0, [sp, #8]
   445f4:	ldr	r1, [sp, #12]
   445f8:	lsl	r1, r1, #10
   445fc:	orr	r1, r1, r0, lsr #22
   44600:	lsl	r0, r0, #10
   44604:	str	r0, [sp, #8]
   44608:	str	r1, [sp, #12]
   4460c:	ldr	r0, [sp, #16]
   44610:	sub	r0, r0, #10
   44614:	str	r0, [sp, #16]
   44618:	b	445d0 <flatcc_json_printer_clear@@Base+0x6ac>
   4461c:	b	44620 <flatcc_json_printer_clear@@Base+0x6fc>
   44620:	ldrb	r0, [sp, #15]
   44624:	lsr	r0, r0, #7
   44628:	mvn	r1, #0
   4462c:	eor	r0, r0, r1
   44630:	tst	r0, #1
   44634:	beq	44668 <flatcc_json_printer_clear@@Base+0x744>
   44638:	ldr	r0, [sp, #8]
   4463c:	ldr	r1, [sp, #12]
   44640:	lsl	r1, r1, #1
   44644:	orr	r1, r1, r0, lsr #31
   44648:	lsl	r0, r0, #1
   4464c:	str	r0, [sp, #8]
   44650:	str	r1, [sp, #12]
   44654:	ldr	r0, [sp, #16]
   44658:	mvn	r1, #0
   4465c:	add	r0, r0, r1
   44660:	str	r0, [sp, #16]
   44664:	b	44620 <flatcc_json_printer_clear@@Base+0x6fc>
   44668:	ldr	r0, [sp, #8]
   4466c:	ldr	r1, [sp, #4]
   44670:	str	r0, [r1]
   44674:	ldr	r0, [sp, #12]
   44678:	str	r0, [r1, #4]
   4467c:	ldr	r0, [sp, #16]
   44680:	str	r0, [r1, #8]
   44684:	ldr	r0, [sp, #20]
   44688:	str	r0, [r1, #12]
   4468c:	mov	sp, fp
   44690:	pop	{fp, pc}
   44694:	andeq	r6, r0, fp, ror #22
   44698:	andeq	r6, r0, ip, ror #22
   4469c:	ldrdeq	r6, [r0], -r1
   446a0:	push	{fp, lr}
   446a4:	mov	fp, sp
   446a8:	sub	sp, sp, #24
   446ac:	ldr	r2, [pc, #164]	; 44758 <flatcc_json_printer_clear@@Base+0x834>
   446b0:	add	r2, pc, r2
   446b4:	str	r0, [fp, #-4]
   446b8:	str	r1, [fp, #-8]
   446bc:	ldr	r0, [fp, #-4]
   446c0:	add	r0, r0, #63	; 0x3f
   446c4:	vmov	s0, r0
   446c8:	vcvt.f64.s32	d16, s0
   446cc:	vldr	d17, [pc, #124]	; 44750 <flatcc_json_printer_clear@@Base+0x82c>
   446d0:	vmul.f64	d0, d16, d17
   446d4:	str	r2, [sp, #4]
   446d8:	bl	44e94 <flatcc_json_printer_clear@@Base+0xf70>
   446dc:	str	r0, [sp, #12]
   446e0:	ldr	r0, [sp, #12]
   446e4:	movw	r1, #347	; 0x15b
   446e8:	add	r0, r0, r1
   446ec:	asr	r1, r0, #31
   446f0:	add	r0, r0, r1, lsr #29
   446f4:	mov	r1, #1
   446f8:	add	r0, r1, r0, asr #3
   446fc:	str	r0, [sp, #8]
   44700:	ldr	r0, [sp, #8]
   44704:	ldr	r1, [pc, #80]	; 4475c <flatcc_json_printer_clear@@Base+0x838>
   44708:	add	r1, pc, r1
   4470c:	mov	r2, r1
   44710:	ldr	r0, [r2, r0, lsl #4]!
   44714:	ldr	r2, [r2, #4]
   44718:	ldr	r3, [fp, #-8]
   4471c:	str	r2, [r3, #4]
   44720:	str	r0, [r3]
   44724:	ldr	r0, [sp, #8]
   44728:	add	r0, r1, r0, lsl #4
   4472c:	ldrsh	r0, [r0, #8]
   44730:	ldr	r2, [fp, #-8]
   44734:	str	r0, [r2, #8]
   44738:	ldr	r0, [sp, #8]
   4473c:	add	r0, r1, r0, lsl #4
   44740:	ldrsh	r0, [r0, #10]
   44744:	mov	sp, fp
   44748:	pop	{fp, pc}
   4474c:	nop	{0}
   44750:			; <UNDEFINED> instruction: 0x509f79fe
   44754:	svccc	0x00d34413
   44758:	andeq	r7, r0, r0, asr sl
   4475c:	strdeq	r7, [r0], -r8
   44760:	push	{r4, r5, r6, sl, fp, lr}
   44764:	add	fp, sp, #16
   44768:	sub	sp, sp, #104	; 0x68
   4476c:	ldr	r1, [fp, #28]
   44770:	ldr	ip, [fp, #24]
   44774:	ldr	lr, [fp, #20]
   44778:	ldr	r4, [fp, #16]
   4477c:	ldr	r5, [fp, #12]
   44780:	ldr	r6, [fp, #8]
   44784:	str	r2, [fp, #-32]	; 0xffffffe0
   44788:	str	r3, [fp, #-28]	; 0xffffffe4
   4478c:	str	r6, [fp, #-24]	; 0xffffffe8
   44790:	str	r5, [fp, #-20]	; 0xffffffec
   44794:	str	r1, [fp, #-36]	; 0xffffffdc
   44798:	str	ip, [fp, #-40]	; 0xffffffd8
   4479c:	str	lr, [fp, #-44]	; 0xffffffd4
   447a0:	str	r4, [fp, #-48]	; 0xffffffd0
   447a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   447a8:	mov	r2, #0
   447ac:	str	r2, [fp, #-52]	; 0xffffffcc
   447b0:	str	r1, [fp, #-56]	; 0xffffffc8
   447b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   447b8:	str	r2, [sp, #60]	; 0x3c
   447bc:	str	r1, [sp, #56]	; 0x38
   447c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   447c4:	str	r2, [sp, #52]	; 0x34
   447c8:	str	r1, [sp, #48]	; 0x30
   447cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   447d0:	str	r2, [sp, #44]	; 0x2c
   447d4:	str	r1, [sp, #40]	; 0x28
   447d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   447dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   447e0:	ldr	ip, [sp, #48]	; 0x30
   447e4:	ldr	lr, [sp, #52]	; 0x34
   447e8:	umull	r4, r5, r1, ip
   447ec:	mla	r1, r1, lr, r5
   447f0:	mla	r1, r3, ip, r1
   447f4:	str	r4, [sp, #32]
   447f8:	str	r1, [sp, #36]	; 0x24
   447fc:	ldr	r1, [sp, #56]	; 0x38
   44800:	ldr	r3, [sp, #60]	; 0x3c
   44804:	ldr	ip, [sp, #48]	; 0x30
   44808:	ldr	lr, [sp, #52]	; 0x34
   4480c:	umull	r4, r5, r1, ip
   44810:	mla	r1, r1, lr, r5
   44814:	mla	r1, r3, ip, r1
   44818:	str	r4, [sp, #24]
   4481c:	str	r1, [sp, #28]
   44820:	ldr	r1, [fp, #-56]	; 0xffffffc8
   44824:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44828:	ldr	ip, [sp, #40]	; 0x28
   4482c:	ldr	lr, [sp, #44]	; 0x2c
   44830:	umull	r4, r5, r1, ip
   44834:	mla	r1, r1, lr, r5
   44838:	mla	r1, r3, ip, r1
   4483c:	str	r4, [sp, #16]
   44840:	str	r1, [sp, #20]
   44844:	ldr	r1, [sp, #56]	; 0x38
   44848:	ldr	r3, [sp, #60]	; 0x3c
   4484c:	ldr	ip, [sp, #40]	; 0x28
   44850:	ldr	lr, [sp, #44]	; 0x2c
   44854:	umull	r4, r5, r1, ip
   44858:	mla	r1, r1, lr, r5
   4485c:	mla	r1, r3, ip, r1
   44860:	str	r4, [sp, #8]
   44864:	str	r1, [sp, #12]
   44868:	ldr	r1, [sp, #12]
   4486c:	ldr	r3, [sp, #16]
   44870:	adds	r1, r1, r3
   44874:	adc	r2, r2, #0
   44878:	ldr	r3, [sp, #24]
   4487c:	adds	r1, r1, r3
   44880:	adc	r2, r2, #0
   44884:	str	r1, [sp]
   44888:	str	r2, [sp, #4]
   4488c:	ldr	r1, [sp]
   44890:	ldr	r2, [sp, #4]
   44894:	adds	r1, r1, #-2147483648	; 0x80000000
   44898:	adc	r2, r2, #0
   4489c:	str	r1, [sp]
   448a0:	str	r2, [sp, #4]
   448a4:	ldr	r1, [sp, #32]
   448a8:	ldr	r2, [sp, #36]	; 0x24
   448ac:	ldr	r3, [sp, #20]
   448b0:	adds	r1, r1, r3
   448b4:	adc	r2, r2, #0
   448b8:	ldr	r3, [sp, #28]
   448bc:	adds	r1, r1, r3
   448c0:	adc	r2, r2, #0
   448c4:	ldr	r3, [sp, #4]
   448c8:	adds	r1, r1, r3
   448cc:	adc	r2, r2, #0
   448d0:	str	r1, [r0]
   448d4:	str	r2, [r0, #4]
   448d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   448dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   448e0:	add	r1, r1, r2
   448e4:	add	r1, r1, #64	; 0x40
   448e8:	str	r1, [r0, #8]
   448ec:	sub	sp, fp, #16
   448f0:	pop	{r4, r5, r6, sl, fp, pc}
   448f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   448f8:	add	fp, sp, #28
   448fc:	sub	sp, sp, #284	; 0x11c
   44900:	ldr	ip, [fp, #36]	; 0x24
   44904:	ldr	lr, [fp, #32]
   44908:	ldr	r4, [fp, #28]
   4490c:	ldr	r5, [fp, #24]
   44910:	ldr	r6, [fp, #20]
   44914:	ldr	r7, [fp, #16]
   44918:	ldr	r8, [fp, #12]
   4491c:	ldr	r9, [fp, #8]
   44920:	ldr	sl, [fp, #48]	; 0x30
   44924:	str	r0, [sp, #68]	; 0x44
   44928:	ldr	r0, [fp, #44]	; 0x2c
   4492c:	str	r0, [sp, #64]	; 0x40
   44930:	ldr	r0, [fp, #40]	; 0x28
   44934:	str	r0, [sp, #60]	; 0x3c
   44938:	ldr	r0, [sp, #68]	; 0x44
   4493c:	str	r0, [fp, #-56]	; 0xffffffc8
   44940:	str	r1, [fp, #-52]	; 0xffffffcc
   44944:	str	r2, [fp, #-48]	; 0xffffffd0
   44948:	str	r3, [fp, #-44]	; 0xffffffd4
   4494c:	str	r6, [fp, #-60]	; 0xffffffc4
   44950:	str	r7, [fp, #-64]	; 0xffffffc0
   44954:	str	r8, [fp, #-68]	; 0xffffffbc
   44958:	str	r9, [fp, #-72]	; 0xffffffb8
   4495c:	str	ip, [fp, #-76]	; 0xffffffb4
   44960:	str	lr, [fp, #-80]	; 0xffffffb0
   44964:	str	r4, [fp, #-84]	; 0xffffffac
   44968:	str	r5, [fp, #-88]	; 0xffffffa8
   4496c:	mov	r1, #0
   44970:	str	r1, [fp, #-92]	; 0xffffffa4
   44974:	mov	r1, #1
   44978:	str	r1, [fp, #-96]	; 0xffffffa0
   4497c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   44980:	ldr	r3, [fp, #-52]	; 0xffffffcc
   44984:	ldr	ip, [fp, #-96]	; 0xffffffa0
   44988:	ldr	lr, [fp, #-92]	; 0xffffffa4
   4498c:	subs	r2, r2, ip
   44990:	sbc	r3, r3, lr
   44994:	str	r2, [fp, #-112]	; 0xffffff90
   44998:	str	r3, [fp, #-108]	; 0xffffff94
   4499c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   449a0:	str	r2, [fp, #-104]	; 0xffffff98
   449a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   449a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   449ac:	ldr	ip, [fp, #-96]	; 0xffffffa0
   449b0:	ldr	lr, [fp, #-92]	; 0xffffffa4
   449b4:	adds	r2, r2, ip
   449b8:	adc	r3, r3, lr
   449bc:	str	r2, [fp, #-128]	; 0xffffff80
   449c0:	str	r3, [fp, #-124]	; 0xffffff84
   449c4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   449c8:	str	r2, [fp, #-120]	; 0xffffff88
   449cc:	ldr	r2, [fp, #-128]	; 0xffffff80
   449d0:	ldr	r3, [fp, #-124]	; 0xffffff84
   449d4:	ldr	ip, [fp, #-120]	; 0xffffff88
   449d8:	ldr	lr, [fp, #-116]	; 0xffffff8c
   449dc:	ldr	r4, [fp, #-112]	; 0xffffff90
   449e0:	ldr	r5, [fp, #-108]	; 0xffffff94
   449e4:	ldr	r6, [fp, #-104]	; 0xffffff98
   449e8:	ldr	r7, [fp, #-100]	; 0xffffff9c
   449ec:	mov	r8, sp
   449f0:	str	r7, [r8, #20]
   449f4:	str	r6, [r8, #16]
   449f8:	str	r5, [r8, #12]
   449fc:	str	r4, [r8, #8]
   44a00:	str	lr, [r8, #4]
   44a04:	str	ip, [r8]
   44a08:	sub	r0, fp, #144	; 0x90
   44a0c:	str	sl, [sp, #56]	; 0x38
   44a10:	str	r1, [sp, #52]	; 0x34
   44a14:	bl	44f14 <flatcc_json_printer_clear@@Base+0xff0>
   44a18:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44a1c:	rsb	r1, r0, #0
   44a20:	mvn	r2, #31
   44a24:	sub	r3, r2, r0
   44a28:	ldr	ip, [sp, #52]	; 0x34
   44a2c:	lsl	r1, ip, r1
   44a30:	cmp	r3, #0
   44a34:	movwpl	r1, #0
   44a38:	add	r0, r0, #32
   44a3c:	lsr	r0, ip, r0
   44a40:	cmp	r3, #0
   44a44:	lslpl	r0, ip, r3
   44a48:	str	r0, [sp, #156]	; 0x9c
   44a4c:	str	r1, [sp, #152]	; 0x98
   44a50:	ldr	r0, [fp, #-64]	; 0xffffffc0
   44a54:	str	r0, [sp, #160]	; 0xa0
   44a58:	ldr	r0, [fp, #-128]	; 0xffffff80
   44a5c:	ldr	r1, [fp, #-124]	; 0xffffff84
   44a60:	ldr	r3, [sp, #160]	; 0xa0
   44a64:	rsb	lr, r3, #0
   44a68:	lsr	r0, r0, lr
   44a6c:	add	lr, r3, #32
   44a70:	orr	r0, r0, r1, lsl lr
   44a74:	sub	r2, r2, r3
   44a78:	cmp	r2, #0
   44a7c:	lsrpl	r0, r1, r2
   44a80:	str	r0, [sp, #148]	; 0x94
   44a84:	ldr	r0, [fp, #-128]	; 0xffffff80
   44a88:	ldr	r1, [fp, #-124]	; 0xffffff84
   44a8c:	ldr	r2, [sp, #152]	; 0x98
   44a90:	ldr	r3, [sp, #156]	; 0x9c
   44a94:	subs	r2, r2, #1
   44a98:	sbc	r3, r3, #0
   44a9c:	and	r1, r1, r3
   44aa0:	and	r0, r0, r2
   44aa4:	str	r0, [sp, #136]	; 0x88
   44aa8:	str	r1, [sp, #140]	; 0x8c
   44aac:	ldr	r0, [sp, #148]	; 0x94
   44ab0:	ldr	r1, [sp, #160]	; 0xa0
   44ab4:	add	r1, r1, #64	; 0x40
   44ab8:	add	r2, sp, #132	; 0x84
   44abc:	bl	44fe8 <flatcc_json_printer_clear@@Base+0x10c4>
   44ac0:	ldr	r1, [fp, #48]	; 0x30
   44ac4:	str	r0, [r1]
   44ac8:	ldr	r0, [fp, #44]	; 0x2c
   44acc:	movw	r1, #0
   44ad0:	str	r1, [r0]
   44ad4:	ldr	r0, [fp, #48]	; 0x30
   44ad8:	ldr	r0, [r0]
   44adc:	cmp	r0, #0
   44ae0:	ble	44ca0 <flatcc_json_printer_clear@@Base+0xd7c>
   44ae4:	ldr	r0, [sp, #148]	; 0x94
   44ae8:	ldr	r1, [sp, #132]	; 0x84
   44aec:	udiv	r0, r0, r1
   44af0:	str	r0, [sp, #116]	; 0x74
   44af4:	ldr	r0, [sp, #116]	; 0x74
   44af8:	add	r0, r0, #48	; 0x30
   44afc:	ldr	r1, [fp, #40]	; 0x28
   44b00:	ldr	r2, [fp, #44]	; 0x2c
   44b04:	ldr	r2, [r2]
   44b08:	strb	r0, [r1, r2]
   44b0c:	ldr	r0, [fp, #44]	; 0x2c
   44b10:	ldr	r1, [r0]
   44b14:	add	r1, r1, #1
   44b18:	str	r1, [r0]
   44b1c:	ldr	r0, [sp, #132]	; 0x84
   44b20:	ldr	r1, [sp, #148]	; 0x94
   44b24:	udiv	r2, r1, r0
   44b28:	mls	r0, r2, r0, r1
   44b2c:	str	r0, [sp, #148]	; 0x94
   44b30:	ldr	r0, [fp, #48]	; 0x30
   44b34:	ldr	r1, [r0]
   44b38:	sub	r1, r1, #1
   44b3c:	str	r1, [r0]
   44b40:	ldr	r0, [sp, #148]	; 0x94
   44b44:	ldr	r1, [sp, #160]	; 0xa0
   44b48:	rsb	r2, r1, #0
   44b4c:	mvn	r3, #31
   44b50:	sub	r3, r3, r1
   44b54:	add	r1, r1, #32
   44b58:	lsr	r1, r0, r1
   44b5c:	cmp	r3, #0
   44b60:	lslpl	r1, r0, r3
   44b64:	lsl	r0, r0, r2
   44b68:	cmp	r3, #0
   44b6c:	movwpl	r0, #0
   44b70:	ldr	r2, [sp, #136]	; 0x88
   44b74:	ldr	r3, [sp, #140]	; 0x8c
   44b78:	adds	r0, r0, r2
   44b7c:	adc	r1, r1, r3
   44b80:	str	r0, [sp, #120]	; 0x78
   44b84:	str	r1, [sp, #124]	; 0x7c
   44b88:	ldr	r0, [sp, #120]	; 0x78
   44b8c:	ldr	r1, [sp, #124]	; 0x7c
   44b90:	ldr	r2, [fp, #-144]	; 0xffffff70
   44b94:	ldr	r3, [fp, #-140]	; 0xffffff74
   44b98:	subs	r0, r0, r2
   44b9c:	sbcs	r1, r1, r3
   44ba0:	bcs	44c8c <flatcc_json_printer_clear@@Base+0xd68>
   44ba4:	b	44ba8 <flatcc_json_printer_clear@@Base+0xc84>
   44ba8:	ldr	r0, [fp, #40]	; 0x28
   44bac:	ldr	r1, [fp, #44]	; 0x2c
   44bb0:	ldr	r1, [r1]
   44bb4:	ldr	r2, [fp, #-128]	; 0xffffff80
   44bb8:	ldr	r3, [fp, #-124]	; 0xffffff84
   44bbc:	ldr	ip, [fp, #-120]	; 0xffffff88
   44bc0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   44bc4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   44bc8:	ldr	r5, [fp, #-68]	; 0xffffffbc
   44bcc:	ldr	r6, [fp, #-64]	; 0xffffffc0
   44bd0:	ldr	r7, [fp, #-60]	; 0xffffffc4
   44bd4:	mov	r8, sp
   44bd8:	str	r7, [r8, #20]
   44bdc:	str	r6, [r8, #16]
   44be0:	str	r5, [r8, #12]
   44be4:	str	r4, [r8, #8]
   44be8:	str	lr, [r8, #4]
   44bec:	str	ip, [r8]
   44bf0:	add	ip, sp, #96	; 0x60
   44bf4:	str	r0, [sp, #48]	; 0x30
   44bf8:	mov	r0, ip
   44bfc:	str	r1, [sp, #44]	; 0x2c
   44c00:	bl	44f14 <flatcc_json_printer_clear@@Base+0xff0>
   44c04:	ldr	r2, [sp, #96]	; 0x60
   44c08:	ldr	r3, [sp, #100]	; 0x64
   44c0c:	ldr	r0, [fp, #-144]	; 0xffffff70
   44c10:	ldr	r1, [fp, #-140]	; 0xffffff74
   44c14:	ldr	ip, [sp, #120]	; 0x78
   44c18:	ldr	lr, [sp, #124]	; 0x7c
   44c1c:	ldr	r4, [sp, #132]	; 0x84
   44c20:	ldr	r5, [sp, #160]	; 0xa0
   44c24:	rsb	r6, r5, #0
   44c28:	mvn	r7, #31
   44c2c:	sub	r7, r7, r5
   44c30:	add	r5, r5, #32
   44c34:	lsr	r5, r4, r5
   44c38:	cmp	r7, #0
   44c3c:	lslpl	r5, r4, r7
   44c40:	lsl	r4, r4, r6
   44c44:	cmp	r7, #0
   44c48:	movwpl	r4, #0
   44c4c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   44c50:	ldr	r7, [fp, #-92]	; 0xffffffa4
   44c54:	mov	r8, sp
   44c58:	str	r7, [r8, #28]
   44c5c:	str	r6, [r8, #24]
   44c60:	str	r5, [r8, #20]
   44c64:	str	r4, [r8, #16]
   44c68:	str	lr, [r8, #12]
   44c6c:	str	ip, [r8, #8]
   44c70:	str	r1, [r8, #4]
   44c74:	str	r0, [r8]
   44c78:	ldr	r0, [sp, #48]	; 0x30
   44c7c:	ldr	r1, [sp, #44]	; 0x2c
   44c80:	bl	45090 <flatcc_json_printer_clear@@Base+0x116c>
   44c84:	str	r0, [fp, #-36]	; 0xffffffdc
   44c88:	b	44e88 <flatcc_json_printer_clear@@Base+0xf64>
   44c8c:	ldr	r0, [sp, #132]	; 0x84
   44c90:	movw	r1, #10
   44c94:	udiv	r0, r0, r1
   44c98:	str	r0, [sp, #132]	; 0x84
   44c9c:	b	44ad4 <flatcc_json_printer_clear@@Base+0xbb0>
   44ca0:	b	44ca4 <flatcc_json_printer_clear@@Base+0xd80>
   44ca4:	ldr	r0, [sp, #136]	; 0x88
   44ca8:	ldr	r1, [sp, #140]	; 0x8c
   44cac:	mov	r2, #10
   44cb0:	umull	r0, r3, r0, r2
   44cb4:	add	r1, r1, r1, lsl #2
   44cb8:	add	r1, r3, r1, lsl #1
   44cbc:	str	r0, [sp, #136]	; 0x88
   44cc0:	str	r1, [sp, #140]	; 0x8c
   44cc4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   44cc8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   44ccc:	umull	r0, r3, r0, r2
   44cd0:	add	r1, r1, r1, lsl #2
   44cd4:	add	r1, r3, r1, lsl #1
   44cd8:	str	r0, [fp, #-96]	; 0xffffffa0
   44cdc:	str	r1, [fp, #-92]	; 0xffffffa4
   44ce0:	ldr	r0, [fp, #-144]	; 0xffffff70
   44ce4:	ldr	r1, [fp, #-140]	; 0xffffff74
   44ce8:	umull	r0, r2, r0, r2
   44cec:	add	r1, r1, r1, lsl #2
   44cf0:	add	r1, r2, r1, lsl #1
   44cf4:	str	r0, [fp, #-144]	; 0xffffff70
   44cf8:	str	r1, [fp, #-140]	; 0xffffff74
   44cfc:	ldr	r0, [sp, #136]	; 0x88
   44d00:	ldr	r1, [sp, #140]	; 0x8c
   44d04:	ldr	r2, [sp, #160]	; 0xa0
   44d08:	rsb	r3, r2, #0
   44d0c:	lsr	r0, r0, r3
   44d10:	add	r3, r2, #32
   44d14:	orr	r0, r0, r1, lsl r3
   44d18:	mvn	r3, #31
   44d1c:	sub	r2, r3, r2
   44d20:	cmp	r2, #0
   44d24:	lsrpl	r0, r1, r2
   44d28:	str	r0, [sp, #92]	; 0x5c
   44d2c:	ldr	r0, [sp, #92]	; 0x5c
   44d30:	add	r0, r0, #48	; 0x30
   44d34:	ldr	r1, [fp, #40]	; 0x28
   44d38:	ldr	r2, [fp, #44]	; 0x2c
   44d3c:	ldr	r2, [r2]
   44d40:	strb	r0, [r1, r2]
   44d44:	ldr	r0, [fp, #44]	; 0x2c
   44d48:	ldr	r1, [r0]
   44d4c:	add	r1, r1, #1
   44d50:	str	r1, [r0]
   44d54:	ldr	r0, [sp, #152]	; 0x98
   44d58:	ldr	r1, [sp, #156]	; 0x9c
   44d5c:	subs	r0, r0, #1
   44d60:	sbc	r1, r1, #0
   44d64:	ldr	r2, [sp, #136]	; 0x88
   44d68:	ldr	r3, [sp, #140]	; 0x8c
   44d6c:	and	r1, r3, r1
   44d70:	and	r0, r2, r0
   44d74:	str	r0, [sp, #136]	; 0x88
   44d78:	str	r1, [sp, #140]	; 0x8c
   44d7c:	ldr	r0, [fp, #48]	; 0x30
   44d80:	ldr	r1, [r0]
   44d84:	sub	r1, r1, #1
   44d88:	str	r1, [r0]
   44d8c:	ldr	r0, [sp, #136]	; 0x88
   44d90:	ldr	r1, [sp, #140]	; 0x8c
   44d94:	ldr	r2, [fp, #-144]	; 0xffffff70
   44d98:	ldr	r3, [fp, #-140]	; 0xffffff74
   44d9c:	subs	r0, r0, r2
   44da0:	sbcs	r1, r1, r3
   44da4:	bcs	44e84 <flatcc_json_printer_clear@@Base+0xf60>
   44da8:	b	44dac <flatcc_json_printer_clear@@Base+0xe88>
   44dac:	ldr	r0, [fp, #40]	; 0x28
   44db0:	ldr	r1, [fp, #44]	; 0x2c
   44db4:	ldr	r1, [r1]
   44db8:	ldr	r2, [fp, #-128]	; 0xffffff80
   44dbc:	ldr	r3, [fp, #-124]	; 0xffffff84
   44dc0:	ldr	ip, [fp, #-120]	; 0xffffff88
   44dc4:	ldr	lr, [fp, #-116]	; 0xffffff8c
   44dc8:	ldr	r4, [fp, #-72]	; 0xffffffb8
   44dcc:	ldr	r5, [fp, #-68]	; 0xffffffbc
   44dd0:	ldr	r6, [fp, #-64]	; 0xffffffc0
   44dd4:	ldr	r7, [fp, #-60]	; 0xffffffc4
   44dd8:	mov	r8, sp
   44ddc:	str	r7, [r8, #20]
   44de0:	str	r6, [r8, #16]
   44de4:	str	r5, [r8, #12]
   44de8:	str	r4, [r8, #8]
   44dec:	str	lr, [r8, #4]
   44df0:	str	ip, [r8]
   44df4:	add	ip, sp, #72	; 0x48
   44df8:	str	r0, [sp, #40]	; 0x28
   44dfc:	mov	r0, ip
   44e00:	str	r1, [sp, #36]	; 0x24
   44e04:	bl	44f14 <flatcc_json_printer_clear@@Base+0xff0>
   44e08:	ldr	r0, [sp, #72]	; 0x48
   44e0c:	ldr	r1, [sp, #76]	; 0x4c
   44e10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   44e14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   44e18:	umull	ip, lr, r0, r2
   44e1c:	mla	r0, r0, r3, lr
   44e20:	mla	r0, r1, r2, r0
   44e24:	ldr	r1, [fp, #-144]	; 0xffffff70
   44e28:	ldr	lr, [fp, #-140]	; 0xffffff74
   44e2c:	ldr	r4, [sp, #136]	; 0x88
   44e30:	ldr	r5, [sp, #140]	; 0x8c
   44e34:	ldr	r6, [sp, #152]	; 0x98
   44e38:	ldr	r7, [sp, #156]	; 0x9c
   44e3c:	mov	r8, sp
   44e40:	str	r3, [r8, #28]
   44e44:	str	r2, [r8, #24]
   44e48:	str	r7, [r8, #20]
   44e4c:	str	r6, [r8, #16]
   44e50:	str	r5, [r8, #12]
   44e54:	str	r4, [r8, #8]
   44e58:	str	lr, [r8, #4]
   44e5c:	str	r1, [r8]
   44e60:	ldr	r1, [sp, #40]	; 0x28
   44e64:	str	r0, [sp, #32]
   44e68:	mov	r0, r1
   44e6c:	ldr	r1, [sp, #36]	; 0x24
   44e70:	mov	r2, ip
   44e74:	ldr	r3, [sp, #32]
   44e78:	bl	45090 <flatcc_json_printer_clear@@Base+0x116c>
   44e7c:	str	r0, [fp, #-36]	; 0xffffffdc
   44e80:	b	44e88 <flatcc_json_printer_clear@@Base+0xf64>
   44e84:	b	44ca4 <flatcc_json_printer_clear@@Base+0xd80>
   44e88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   44e8c:	sub	sp, fp, #28
   44e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44e94:	sub	sp, sp, #24
   44e98:	vstr	d0, [sp, #8]
   44e9c:	vldr	d16, [sp, #8]
   44ea0:	vcvt.s32.f64	s2, d16
   44ea4:	vmov	r0, s2
   44ea8:	str	r0, [sp, #4]
   44eac:	vldr	d16, [sp, #8]
   44eb0:	vcmpe.f64	d16, #0.0
   44eb4:	vmrs	APSR_nzcv, fpscr
   44eb8:	bpl	44ec8 <flatcc_json_printer_clear@@Base+0xfa4>
   44ebc:	ldr	r0, [sp, #4]
   44ec0:	str	r0, [sp, #20]
   44ec4:	b	44f08 <flatcc_json_printer_clear@@Base+0xfe4>
   44ec8:	vldr	d16, [sp, #8]
   44ecc:	ldr	r0, [sp, #4]
   44ed0:	vmov	s0, r0
   44ed4:	vcvt.f64.s32	d17, s0
   44ed8:	vsub.f64	d16, d16, d17
   44edc:	vcmp.f64	d16, #0.0
   44ee0:	vmrs	APSR_nzcv, fpscr
   44ee4:	bne	44ef4 <flatcc_json_printer_clear@@Base+0xfd0>
   44ee8:	ldr	r0, [sp, #4]
   44eec:	str	r0, [sp]
   44ef0:	b	44f00 <flatcc_json_printer_clear@@Base+0xfdc>
   44ef4:	ldr	r0, [sp, #4]
   44ef8:	add	r0, r0, #1
   44efc:	str	r0, [sp]
   44f00:	ldr	r0, [sp]
   44f04:	str	r0, [sp, #20]
   44f08:	ldr	r0, [sp, #20]
   44f0c:	add	sp, sp, #24
   44f10:	bx	lr
   44f14:	push	{r4, r5, r6, sl, fp, lr}
   44f18:	add	fp, sp, #16
   44f1c:	sub	sp, sp, #32
   44f20:	ldr	r1, [fp, #28]
   44f24:	ldr	ip, [fp, #24]
   44f28:	ldr	lr, [fp, #20]
   44f2c:	ldr	r4, [fp, #16]
   44f30:	ldr	r5, [fp, #12]
   44f34:	ldr	r6, [fp, #8]
   44f38:	str	r2, [sp, #16]
   44f3c:	str	r3, [sp, #20]
   44f40:	str	r6, [sp, #24]
   44f44:	str	r5, [sp, #28]
   44f48:	str	r1, [sp, #12]
   44f4c:	str	ip, [sp, #8]
   44f50:	str	lr, [sp, #4]
   44f54:	str	r4, [sp]
   44f58:	ldr	r1, [sp, #16]
   44f5c:	ldr	r2, [sp, #20]
   44f60:	ldr	r3, [sp]
   44f64:	ldr	ip, [sp, #4]
   44f68:	subs	r1, r1, r3
   44f6c:	sbc	r2, r2, ip
   44f70:	str	r1, [r0]
   44f74:	str	r2, [r0, #4]
   44f78:	ldr	r1, [sp, #24]
   44f7c:	str	r1, [r0, #8]
   44f80:	ldr	r0, [sp, #24]
   44f84:	ldr	r1, [sp, #8]
   44f88:	cmp	r0, r1
   44f8c:	bne	44fb4 <flatcc_json_printer_clear@@Base+0x1090>
   44f90:	ldr	r0, [sp, #16]
   44f94:	ldr	r1, [sp, #20]
   44f98:	ldr	r2, [sp]
   44f9c:	ldr	r3, [sp, #4]
   44fa0:	subs	r0, r0, r2
   44fa4:	sbcs	r1, r1, r3
   44fa8:	bcc	44fb4 <flatcc_json_printer_clear@@Base+0x1090>
   44fac:	b	44fb0 <flatcc_json_printer_clear@@Base+0x108c>
   44fb0:	b	44fd4 <flatcc_json_printer_clear@@Base+0x10b0>
   44fb4:	ldr	r0, [pc, #32]	; 44fdc <flatcc_json_printer_clear@@Base+0x10b8>
   44fb8:	add	r0, pc, r0
   44fbc:	ldr	r1, [pc, #28]	; 44fe0 <flatcc_json_printer_clear@@Base+0x10bc>
   44fc0:	add	r1, pc, r1
   44fc4:	ldr	r2, [pc, #24]	; 44fe4 <flatcc_json_printer_clear@@Base+0x10c0>
   44fc8:	add	r3, pc, r2
   44fcc:	movw	r2, #239	; 0xef
   44fd0:	bl	14f08 <__assert_fail@plt>
   44fd4:	sub	sp, fp, #16
   44fd8:	pop	{r4, r5, r6, sl, fp, pc}
   44fdc:	andeq	r6, r0, r2, lsl #31
   44fe0:	andeq	r6, r0, r4, ror #2
   44fe4:	andeq	r6, r0, fp, lsl #31
   44fe8:	sub	sp, sp, #20
   44fec:	ldr	r3, [pc, #140]	; 45080 <flatcc_json_printer_clear@@Base+0x115c>
   44ff0:	add	r3, pc, r3
   44ff4:	str	r0, [sp, #16]
   44ff8:	str	r1, [sp, #12]
   44ffc:	str	r2, [sp, #8]
   45000:	ldr	r0, [sp, #12]
   45004:	movw	r1, #1233	; 0x4d1
   45008:	mla	r0, r0, r1, r1
   4500c:	mov	r1, #1
   45010:	add	r0, r1, r0, asr #12
   45014:	str	r0, [sp, #4]
   45018:	ldr	r0, [sp, #16]
   4501c:	ldr	r1, [sp, #4]
   45020:	ldr	r2, [pc, #96]	; 45088 <flatcc_json_printer_clear@@Base+0x1164>
   45024:	add	r2, pc, r2
   45028:	add	r1, r2, r1, lsl #2
   4502c:	ldr	r1, [r1]
   45030:	cmp	r0, r1
   45034:	bcs	45048 <flatcc_json_printer_clear@@Base+0x1124>
   45038:	ldr	r0, [sp, #4]
   4503c:	mvn	r1, #0
   45040:	add	r0, r0, r1
   45044:	str	r0, [sp, #4]
   45048:	ldr	r0, [pc, #52]	; 45084 <flatcc_json_printer_clear@@Base+0x1160>
   4504c:	add	r0, pc, r0
   45050:	ldr	r1, [sp, #4]
   45054:	ldr	r2, [pc, #48]	; 4508c <flatcc_json_printer_clear@@Base+0x1168>
   45058:	add	r2, pc, r2
   4505c:	add	r1, r2, r1, lsl #2
   45060:	ldr	r1, [r1]
   45064:	ldr	r2, [sp, #8]
   45068:	str	r1, [r2]
   4506c:	ldr	r1, [sp, #4]
   45070:	str	r0, [sp]
   45074:	mov	r0, r1
   45078:	add	sp, sp, #20
   4507c:	bx	lr
   45080:	andeq	r7, r0, r0, lsl #13
   45084:	andeq	r7, r0, r4, lsr #12
   45088:	andeq	r7, r0, ip, asr #12
   4508c:	andeq	r7, r0, r8, lsl r6
   45090:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   45094:	add	fp, sp, #24
   45098:	sub	sp, sp, #88	; 0x58
   4509c:	ldr	ip, [fp, #36]	; 0x24
   450a0:	ldr	lr, [fp, #32]
   450a4:	ldr	r4, [fp, #28]
   450a8:	ldr	r5, [fp, #24]
   450ac:	ldr	r6, [fp, #20]
   450b0:	ldr	r7, [fp, #16]
   450b4:	ldr	r8, [fp, #12]
   450b8:	ldr	r9, [fp, #8]
   450bc:	str	r0, [fp, #-32]	; 0xffffffe0
   450c0:	str	r1, [fp, #-36]	; 0xffffffdc
   450c4:	str	r3, [fp, #-44]	; 0xffffffd4
   450c8:	str	r2, [fp, #-48]	; 0xffffffd0
   450cc:	str	r8, [sp, #60]	; 0x3c
   450d0:	str	r9, [sp, #56]	; 0x38
   450d4:	str	r6, [sp, #52]	; 0x34
   450d8:	str	r7, [sp, #48]	; 0x30
   450dc:	str	r4, [sp, #44]	; 0x2c
   450e0:	str	r5, [sp, #40]	; 0x28
   450e4:	str	ip, [sp, #36]	; 0x24
   450e8:	str	lr, [sp, #32]
   450ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   450f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   450f4:	ldr	r2, [sp, #32]
   450f8:	ldr	r3, [sp, #36]	; 0x24
   450fc:	subs	r0, r0, r2
   45100:	sbc	r1, r1, r3
   45104:	str	r0, [sp, #24]
   45108:	str	r1, [sp, #28]
   4510c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   45110:	ldr	r1, [fp, #-44]	; 0xffffffd4
   45114:	ldr	r2, [sp, #32]
   45118:	ldr	r3, [sp, #36]	; 0x24
   4511c:	adds	r0, r0, r2
   45120:	adc	r1, r1, r3
   45124:	str	r0, [sp, #16]
   45128:	str	r1, [sp, #20]
   4512c:	ldr	r0, [sp, #48]	; 0x30
   45130:	ldr	r1, [sp, #52]	; 0x34
   45134:	ldr	r2, [sp, #24]
   45138:	ldr	r3, [sp, #28]
   4513c:	mov	ip, #0
   45140:	subs	r0, r0, r2
   45144:	sbcs	r1, r1, r3
   45148:	str	ip, [sp, #12]
   4514c:	bcs	45210 <flatcc_json_printer_clear@@Base+0x12ec>
   45150:	b	45154 <flatcc_json_printer_clear@@Base+0x1230>
   45154:	ldr	r0, [sp, #56]	; 0x38
   45158:	ldr	r1, [sp, #60]	; 0x3c
   4515c:	ldr	r2, [sp, #48]	; 0x30
   45160:	ldr	r3, [sp, #52]	; 0x34
   45164:	subs	r0, r0, r2
   45168:	sbc	r1, r1, r3
   4516c:	ldr	r2, [sp, #40]	; 0x28
   45170:	ldr	r3, [sp, #44]	; 0x2c
   45174:	mov	ip, #0
   45178:	subs	r0, r0, r2
   4517c:	sbcs	r1, r1, r3
   45180:	str	ip, [sp, #12]
   45184:	bcc	45210 <flatcc_json_printer_clear@@Base+0x12ec>
   45188:	b	4518c <flatcc_json_printer_clear@@Base+0x1268>
   4518c:	ldr	r0, [sp, #48]	; 0x30
   45190:	ldr	r1, [sp, #52]	; 0x34
   45194:	ldr	r2, [sp, #40]	; 0x28
   45198:	ldr	r3, [sp, #44]	; 0x2c
   4519c:	adds	r0, r0, r2
   451a0:	adc	r1, r1, r3
   451a4:	ldr	r2, [sp, #24]
   451a8:	ldr	r3, [sp, #28]
   451ac:	mov	ip, #1
   451b0:	subs	r0, r0, r2
   451b4:	sbcs	r1, r1, r3
   451b8:	str	ip, [sp, #8]
   451bc:	bcc	45208 <flatcc_json_printer_clear@@Base+0x12e4>
   451c0:	b	451c4 <flatcc_json_printer_clear@@Base+0x12a0>
   451c4:	ldr	r0, [sp, #24]
   451c8:	ldr	r1, [sp, #28]
   451cc:	ldr	r2, [sp, #48]	; 0x30
   451d0:	ldr	r3, [sp, #52]	; 0x34
   451d4:	subs	ip, r0, r2
   451d8:	sbc	lr, r1, r3
   451dc:	ldr	r4, [sp, #40]	; 0x28
   451e0:	ldr	r5, [sp, #44]	; 0x2c
   451e4:	adds	r2, r2, r4
   451e8:	adc	r3, r3, r5
   451ec:	subs	r0, r2, r0
   451f0:	sbc	r1, r3, r1
   451f4:	subs	r0, ip, r0
   451f8:	sbcs	r1, lr, r1
   451fc:	mov	r2, #0
   45200:	movwcs	r2, #1
   45204:	str	r2, [sp, #8]
   45208:	ldr	r0, [sp, #8]
   4520c:	str	r0, [sp, #12]
   45210:	ldr	r0, [sp, #12]
   45214:	tst	r0, #1
   45218:	beq	45258 <flatcc_json_printer_clear@@Base+0x1334>
   4521c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   45220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   45224:	add	r0, r1, r0
   45228:	ldrb	r1, [r0, #-1]
   4522c:	sub	r1, r1, #1
   45230:	strb	r1, [r0, #-1]
   45234:	ldr	r0, [sp, #40]	; 0x28
   45238:	ldr	r1, [sp, #44]	; 0x2c
   4523c:	ldr	r2, [sp, #48]	; 0x30
   45240:	ldr	r3, [sp, #52]	; 0x34
   45244:	adds	r0, r2, r0
   45248:	adc	r1, r3, r1
   4524c:	str	r0, [sp, #48]	; 0x30
   45250:	str	r1, [sp, #52]	; 0x34
   45254:	b	4512c <flatcc_json_printer_clear@@Base+0x1208>
   45258:	ldr	r0, [sp, #48]	; 0x30
   4525c:	ldr	r1, [sp, #52]	; 0x34
   45260:	ldr	r2, [sp, #16]
   45264:	ldr	r3, [sp, #20]
   45268:	subs	r0, r0, r2
   4526c:	sbcs	r1, r1, r3
   45270:	bcs	45324 <flatcc_json_printer_clear@@Base+0x1400>
   45274:	b	45278 <flatcc_json_printer_clear@@Base+0x1354>
   45278:	ldr	r0, [sp, #56]	; 0x38
   4527c:	ldr	r1, [sp, #60]	; 0x3c
   45280:	ldr	r2, [sp, #48]	; 0x30
   45284:	ldr	r3, [sp, #52]	; 0x34
   45288:	subs	r0, r0, r2
   4528c:	sbc	r1, r1, r3
   45290:	ldr	r2, [sp, #40]	; 0x28
   45294:	ldr	r3, [sp, #44]	; 0x2c
   45298:	subs	r0, r0, r2
   4529c:	sbcs	r1, r1, r3
   452a0:	bcc	45324 <flatcc_json_printer_clear@@Base+0x1400>
   452a4:	b	452a8 <flatcc_json_printer_clear@@Base+0x1384>
   452a8:	ldr	r0, [sp, #48]	; 0x30
   452ac:	ldr	r1, [sp, #52]	; 0x34
   452b0:	ldr	r2, [sp, #40]	; 0x28
   452b4:	ldr	r3, [sp, #44]	; 0x2c
   452b8:	adds	r0, r0, r2
   452bc:	adc	r1, r1, r3
   452c0:	ldr	r2, [sp, #16]
   452c4:	ldr	r3, [sp, #20]
   452c8:	subs	r0, r0, r2
   452cc:	sbcs	r1, r1, r3
   452d0:	bcc	45318 <flatcc_json_printer_clear@@Base+0x13f4>
   452d4:	b	452d8 <flatcc_json_printer_clear@@Base+0x13b4>
   452d8:	ldr	r0, [sp, #16]
   452dc:	ldr	r1, [sp, #20]
   452e0:	ldr	r2, [sp, #48]	; 0x30
   452e4:	ldr	r3, [sp, #52]	; 0x34
   452e8:	subs	ip, r0, r2
   452ec:	sbc	lr, r1, r3
   452f0:	ldr	r4, [sp, #40]	; 0x28
   452f4:	ldr	r5, [sp, #44]	; 0x2c
   452f8:	adds	r2, r2, r4
   452fc:	adc	r3, r3, r5
   45300:	subs	r0, r2, r0
   45304:	sbc	r1, r3, r1
   45308:	subs	r0, r0, ip
   4530c:	sbcs	r1, r1, lr
   45310:	bcs	45324 <flatcc_json_printer_clear@@Base+0x1400>
   45314:	b	45318 <flatcc_json_printer_clear@@Base+0x13f4>
   45318:	movw	r0, #0
   4531c:	str	r0, [fp, #-28]	; 0xffffffe4
   45320:	b	4539c <flatcc_json_printer_clear@@Base+0x1478>
   45324:	ldr	r0, [sp, #32]
   45328:	ldr	r1, [sp, #36]	; 0x24
   4532c:	lsl	r1, r1, #1
   45330:	orr	r1, r1, r0, lsr #31
   45334:	ldr	r2, [sp, #48]	; 0x30
   45338:	ldr	r3, [sp, #52]	; 0x34
   4533c:	mov	ip, #0
   45340:	subs	r0, r2, r0, lsl #1
   45344:	sbcs	r1, r3, r1
   45348:	str	ip, [sp, #4]
   4534c:	bcc	45390 <flatcc_json_printer_clear@@Base+0x146c>
   45350:	b	45354 <flatcc_json_printer_clear@@Base+0x1430>
   45354:	ldr	r0, [sp, #48]	; 0x30
   45358:	ldr	r1, [sp, #52]	; 0x34
   4535c:	ldr	r2, [sp, #56]	; 0x38
   45360:	ldr	r3, [sp, #60]	; 0x3c
   45364:	ldr	ip, [sp, #32]
   45368:	ldr	lr, [sp, #36]	; 0x24
   4536c:	lsl	lr, lr, #2
   45370:	orr	lr, lr, ip, lsr #30
   45374:	subs	r2, r2, ip, lsl #2
   45378:	sbc	r3, r3, lr
   4537c:	subs	r0, r2, r0
   45380:	sbcs	r1, r3, r1
   45384:	mov	r2, #0
   45388:	movwcs	r2, #1
   4538c:	str	r2, [sp, #4]
   45390:	ldr	r0, [sp, #4]
   45394:	and	r0, r0, #1
   45398:	str	r0, [fp, #-28]	; 0xffffffe4
   4539c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   453a0:	sub	sp, fp, #24
   453a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   453a8:	push	{fp, lr}
   453ac:	mov	fp, sp
   453b0:	sub	sp, sp, #24
   453b4:	str	r0, [fp, #-4]
   453b8:	str	r1, [fp, #-8]
   453bc:	str	r2, [sp, #12]
   453c0:	ldr	r0, [fp, #-4]
   453c4:	ldr	r0, [r0, #20]
   453c8:	ldr	r1, [fp, #-4]
   453cc:	ldr	r1, [r1, #16]
   453d0:	cmp	r0, r1
   453d4:	bcc	453f8 <flatcc_json_printer_clear@@Base+0x14d4>
   453d8:	ldr	r0, [fp, #-4]
   453dc:	ldr	r0, [r0, #44]	; 0x2c
   453e0:	ldr	r1, [fp, #-4]
   453e4:	str	r0, [sp, #4]
   453e8:	mov	r0, r1
   453ec:	movw	r1, #0
   453f0:	ldr	r2, [sp, #4]
   453f4:	blx	r2
   453f8:	ldr	r0, [fp, #-4]
   453fc:	ldr	r0, [r0, #16]
   45400:	ldr	r1, [fp, #-4]
   45404:	ldr	r1, [r1, #20]
   45408:	sub	r0, r0, r1
   4540c:	str	r0, [sp, #8]
   45410:	ldr	r0, [sp, #12]
   45414:	ldr	r1, [sp, #8]
   45418:	cmp	r0, r1
   4541c:	bls	454a4 <flatcc_json_printer_clear@@Base+0x1580>
   45420:	ldr	r0, [fp, #-4]
   45424:	ldr	r0, [r0, #20]
   45428:	ldr	r1, [fp, #-8]
   4542c:	ldr	r2, [sp, #8]
   45430:	bl	14e30 <memcpy@plt>
   45434:	ldr	r0, [sp, #8]
   45438:	ldr	r1, [fp, #-4]
   4543c:	ldr	r2, [r1, #20]
   45440:	add	r0, r2, r0
   45444:	str	r0, [r1, #20]
   45448:	ldr	r0, [sp, #8]
   4544c:	ldr	r1, [fp, #-8]
   45450:	add	r0, r1, r0
   45454:	str	r0, [fp, #-8]
   45458:	ldr	r0, [sp, #8]
   4545c:	ldr	r1, [sp, #12]
   45460:	sub	r0, r1, r0
   45464:	str	r0, [sp, #12]
   45468:	ldr	r0, [fp, #-4]
   4546c:	ldr	r0, [r0, #44]	; 0x2c
   45470:	ldr	r1, [fp, #-4]
   45474:	str	r0, [sp]
   45478:	mov	r0, r1
   4547c:	movw	r1, #0
   45480:	ldr	r2, [sp]
   45484:	blx	r2
   45488:	ldr	r0, [fp, #-4]
   4548c:	ldr	r0, [r0, #16]
   45490:	ldr	r1, [fp, #-4]
   45494:	ldr	r1, [r1, #20]
   45498:	sub	r0, r0, r1
   4549c:	str	r0, [sp, #8]
   454a0:	b	45410 <flatcc_json_printer_clear@@Base+0x14ec>
   454a4:	ldr	r0, [fp, #-4]
   454a8:	ldr	r0, [r0, #20]
   454ac:	ldr	r1, [fp, #-8]
   454b0:	ldr	r2, [sp, #12]
   454b4:	bl	14e30 <memcpy@plt>
   454b8:	ldr	r0, [sp, #12]
   454bc:	ldr	r1, [fp, #-4]
   454c0:	ldr	r2, [r1, #20]
   454c4:	add	r0, r2, r0
   454c8:	str	r0, [r1, #20]
   454cc:	mov	sp, fp
   454d0:	pop	{fp, pc}
   454d4:	push	{fp, lr}
   454d8:	mov	fp, sp
   454dc:	sub	sp, sp, #24
   454e0:	str	r0, [fp, #-4]
   454e4:	str	r1, [fp, #-8]
   454e8:	ldr	r0, [fp, #-4]
   454ec:	ldr	r0, [r0, #20]
   454f0:	ldr	r1, [fp, #-4]
   454f4:	ldr	r1, [r1, #16]
   454f8:	cmp	r0, r1
   454fc:	bcc	45520 <flatcc_json_printer_clear@@Base+0x15fc>
   45500:	ldr	r0, [fp, #-4]
   45504:	ldr	r0, [r0, #44]	; 0x2c
   45508:	ldr	r1, [fp, #-4]
   4550c:	str	r0, [sp, #8]
   45510:	mov	r0, r1
   45514:	movw	r1, #0
   45518:	ldr	r2, [sp, #8]
   4551c:	blx	r2
   45520:	ldr	r0, [fp, #-4]
   45524:	ldr	r0, [r0, #16]
   45528:	ldr	r1, [fp, #-4]
   4552c:	ldr	r1, [r1, #20]
   45530:	sub	r0, r0, r1
   45534:	str	r0, [sp, #12]
   45538:	ldr	r0, [fp, #-8]
   4553c:	ldr	r1, [sp, #12]
   45540:	cmp	r0, r1
   45544:	bls	455c0 <flatcc_json_printer_clear@@Base+0x169c>
   45548:	ldr	r0, [fp, #-4]
   4554c:	ldr	r0, [r0, #20]
   45550:	ldr	r2, [sp, #12]
   45554:	movw	r1, #32
   45558:	and	r1, r1, #255	; 0xff
   4555c:	bl	14ec0 <memset@plt>
   45560:	ldr	r0, [sp, #12]
   45564:	ldr	r1, [fp, #-4]
   45568:	ldr	r2, [r1, #20]
   4556c:	add	r0, r2, r0
   45570:	str	r0, [r1, #20]
   45574:	ldr	r0, [sp, #12]
   45578:	ldr	r1, [fp, #-8]
   4557c:	sub	r0, r1, r0
   45580:	str	r0, [fp, #-8]
   45584:	ldr	r0, [fp, #-4]
   45588:	ldr	r0, [r0, #44]	; 0x2c
   4558c:	ldr	r1, [fp, #-4]
   45590:	str	r0, [sp, #4]
   45594:	mov	r0, r1
   45598:	movw	r1, #0
   4559c:	ldr	r2, [sp, #4]
   455a0:	blx	r2
   455a4:	ldr	r0, [fp, #-4]
   455a8:	ldr	r0, [r0, #16]
   455ac:	ldr	r1, [fp, #-4]
   455b0:	ldr	r1, [r1, #20]
   455b4:	sub	r0, r0, r1
   455b8:	str	r0, [sp, #12]
   455bc:	b	45538 <flatcc_json_printer_clear@@Base+0x1614>
   455c0:	ldr	r0, [fp, #-4]
   455c4:	ldr	r0, [r0, #20]
   455c8:	ldr	r2, [fp, #-8]
   455cc:	movw	r1, #32
   455d0:	and	r1, r1, #255	; 0xff
   455d4:	bl	14ec0 <memset@plt>
   455d8:	ldr	r0, [fp, #-8]
   455dc:	ldr	r1, [fp, #-4]
   455e0:	ldr	r2, [r1, #20]
   455e4:	add	r0, r2, r0
   455e8:	str	r0, [r1, #20]
   455ec:	mov	sp, fp
   455f0:	pop	{fp, pc}
   455f4:	push	{fp, lr}
   455f8:	mov	fp, sp
   455fc:	sub	sp, sp, #8
   45600:	str	r0, [sp, #4]
   45604:	str	r1, [sp]
   45608:	ldr	r0, [sp, #4]
   4560c:	ldr	r1, [sp]
   45610:	add	r0, r0, r1
   45614:	bl	45624 <flatcc_json_printer_clear@@Base+0x1700>
   45618:	uxth	r0, r0
   4561c:	mov	sp, fp
   45620:	pop	{fp, pc}
   45624:	push	{fp, lr}
   45628:	mov	fp, sp
   4562c:	sub	sp, sp, #8
   45630:	str	r0, [sp, #4]
   45634:	ldr	r0, [sp, #4]
   45638:	ldrh	r0, [r0]
   4563c:	bl	4564c <flatcc_json_printer_clear@@Base+0x1728>
   45640:	uxth	r0, r0
   45644:	mov	sp, fp
   45648:	pop	{fp, pc}
   4564c:	sub	sp, sp, #4
   45650:	strh	r0, [sp, #2]
   45654:	ldrh	r0, [sp, #2]
   45658:	add	sp, sp, #4
   4565c:	bx	lr
   45660:	sub	sp, sp, #24
   45664:	str	r0, [sp, #20]
   45668:	str	r1, [sp, #16]
   4566c:	ldr	r0, [sp, #20]
   45670:	movw	r1, #43691	; 0xaaab
   45674:	movt	r1, #43690	; 0xaaaa
   45678:	umull	r1, r2, r0, r1
   4567c:	lsr	r2, r2, #1
   45680:	add	r2, r2, r2, lsl #1
   45684:	sub	r0, r0, r2
   45688:	str	r0, [sp, #12]
   4568c:	ldr	r0, [sp, #20]
   45690:	lsl	r0, r0, #2
   45694:	movw	r2, #3
   45698:	udiv	r0, r0, r2
   4569c:	add	r0, r0, #3
   456a0:	mvn	r2, #3
   456a4:	and	r0, r0, r2
   456a8:	str	r0, [sp, #8]
   456ac:	ldr	r0, [sp, #16]
   456b0:	and	r0, r0, #128	; 0x80
   456b4:	str	r0, [sp, #4]
   456b8:	ldr	r0, [sp, #4]
   456bc:	cmp	r0, #0
   456c0:	bne	45710 <flatcc_json_printer_clear@@Base+0x17ec>
   456c4:	ldr	r0, [sp, #12]
   456c8:	cmp	r0, #1
   456cc:	str	r0, [sp]
   456d0:	beq	456f8 <flatcc_json_printer_clear@@Base+0x17d4>
   456d4:	b	456d8 <flatcc_json_printer_clear@@Base+0x17b4>
   456d8:	ldr	r0, [sp]
   456dc:	cmp	r0, #2
   456e0:	bne	45708 <flatcc_json_printer_clear@@Base+0x17e4>
   456e4:	b	456e8 <flatcc_json_printer_clear@@Base+0x17c4>
   456e8:	ldr	r0, [sp, #8]
   456ec:	sub	r0, r0, #1
   456f0:	str	r0, [sp, #8]
   456f4:	b	4570c <flatcc_json_printer_clear@@Base+0x17e8>
   456f8:	ldr	r0, [sp, #8]
   456fc:	sub	r0, r0, #2
   45700:	str	r0, [sp, #8]
   45704:	b	4570c <flatcc_json_printer_clear@@Base+0x17e8>
   45708:	b	4570c <flatcc_json_printer_clear@@Base+0x17e8>
   4570c:	b	45710 <flatcc_json_printer_clear@@Base+0x17ec>
   45710:	ldr	r0, [sp, #8]
   45714:	add	sp, sp, #24
   45718:	bx	lr
   4571c:	push	{r4, sl, fp, lr}
   45720:	add	fp, sp, #8
   45724:	sub	sp, sp, #52	; 0x34
   45728:	ldr	ip, [fp, #8]
   4572c:	ldr	lr, [pc, #844]	; 45a80 <flatcc_json_printer_clear@@Base+0x1b5c>
   45730:	add	lr, pc, lr
   45734:	ldr	r4, [pc, #840]	; 45a84 <flatcc_json_printer_clear@@Base+0x1b60>
   45738:	add	r4, pc, r4
   4573c:	str	r0, [fp, #-12]
   45740:	str	r1, [fp, #-16]
   45744:	str	r2, [fp, #-20]	; 0xffffffec
   45748:	str	r3, [fp, #-24]	; 0xffffffe8
   4574c:	str	r4, [fp, #-28]	; 0xffffffe4
   45750:	str	lr, [sp, #28]
   45754:	ldr	r0, [fp, #-12]
   45758:	str	r0, [sp, #20]
   4575c:	ldr	r0, [fp, #8]
   45760:	and	r0, r0, #128	; 0x80
   45764:	str	r0, [sp, #16]
   45768:	movw	r0, #0
   4576c:	str	r0, [sp, #12]
   45770:	movw	r1, #3
   45774:	str	r1, [sp, #8]
   45778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4577c:	cmp	r1, r0
   45780:	bne	45790 <flatcc_json_printer_clear@@Base+0x186c>
   45784:	movw	r0, #2
   45788:	str	r0, [sp, #8]
   4578c:	b	45a2c <flatcc_json_printer_clear@@Base+0x1b08>
   45790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45794:	ldr	r0, [r0]
   45798:	str	r0, [sp, #12]
   4579c:	ldr	r0, [fp, #8]
   457a0:	bic	r0, r0, #224	; 0xe0
   457a4:	str	r0, [fp, #8]
   457a8:	ldr	r0, [fp, #8]
   457ac:	cmp	r0, #0
   457b0:	str	r0, [sp, #4]
   457b4:	beq	457cc <flatcc_json_printer_clear@@Base+0x18a8>
   457b8:	b	457bc <flatcc_json_printer_clear@@Base+0x1898>
   457bc:	ldr	r0, [sp, #4]
   457c0:	cmp	r0, #1
   457c4:	beq	457d8 <flatcc_json_printer_clear@@Base+0x18b4>
   457c8:	b	457e4 <flatcc_json_printer_clear@@Base+0x18c0>
   457cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   457d0:	str	r0, [sp, #24]
   457d4:	b	457e8 <flatcc_json_printer_clear@@Base+0x18c4>
   457d8:	ldr	r0, [sp, #28]
   457dc:	str	r0, [sp, #24]
   457e0:	b	457e8 <flatcc_json_printer_clear@@Base+0x18c4>
   457e4:	b	45a2c <flatcc_json_printer_clear@@Base+0x1b08>
   457e8:	movw	r0, #0
   457ec:	str	r0, [sp, #8]
   457f0:	ldr	r0, [sp, #12]
   457f4:	cmp	r0, #3
   457f8:	bcc	458cc <flatcc_json_printer_clear@@Base+0x19a8>
   457fc:	ldr	r0, [sp, #24]
   45800:	ldr	r1, [fp, #-16]
   45804:	ldrb	r1, [r1]
   45808:	asr	r1, r1, #2
   4580c:	add	r0, r0, r1
   45810:	ldrb	r0, [r0]
   45814:	ldr	r1, [fp, #-12]
   45818:	strb	r0, [r1]
   4581c:	ldr	r0, [sp, #24]
   45820:	ldr	r1, [fp, #-16]
   45824:	ldrb	r1, [r1]
   45828:	lsl	r1, r1, #4
   4582c:	and	r1, r1, #48	; 0x30
   45830:	ldr	r2, [fp, #-16]
   45834:	ldrb	r2, [r2, #1]
   45838:	asr	r2, r2, #4
   4583c:	orr	r1, r1, r2
   45840:	add	r0, r0, r1
   45844:	ldrb	r0, [r0]
   45848:	ldr	r1, [fp, #-12]
   4584c:	strb	r0, [r1, #1]
   45850:	ldr	r0, [sp, #24]
   45854:	ldr	r1, [fp, #-16]
   45858:	ldrb	r1, [r1, #1]
   4585c:	lsl	r1, r1, #2
   45860:	and	r1, r1, #60	; 0x3c
   45864:	ldr	r2, [fp, #-16]
   45868:	ldrb	r2, [r2, #2]
   4586c:	asr	r2, r2, #6
   45870:	orr	r1, r1, r2
   45874:	add	r0, r0, r1
   45878:	ldrb	r0, [r0]
   4587c:	ldr	r1, [fp, #-12]
   45880:	strb	r0, [r1, #2]
   45884:	ldr	r0, [sp, #24]
   45888:	ldr	r1, [fp, #-16]
   4588c:	ldrb	r1, [r1, #2]
   45890:	and	r1, r1, #63	; 0x3f
   45894:	add	r0, r0, r1
   45898:	ldrb	r0, [r0]
   4589c:	ldr	r1, [fp, #-12]
   458a0:	strb	r0, [r1, #3]
   458a4:	ldr	r0, [sp, #12]
   458a8:	sub	r0, r0, #3
   458ac:	str	r0, [sp, #12]
   458b0:	ldr	r0, [fp, #-12]
   458b4:	add	r0, r0, #4
   458b8:	str	r0, [fp, #-12]
   458bc:	ldr	r0, [fp, #-16]
   458c0:	add	r0, r0, #3
   458c4:	str	r0, [fp, #-16]
   458c8:	b	457f0 <flatcc_json_printer_clear@@Base+0x18cc>
   458cc:	ldr	r0, [sp, #12]
   458d0:	cmp	r0, #1
   458d4:	str	r0, [sp]
   458d8:	beq	45998 <flatcc_json_printer_clear@@Base+0x1a74>
   458dc:	b	458e0 <flatcc_json_printer_clear@@Base+0x19bc>
   458e0:	ldr	r0, [sp]
   458e4:	cmp	r0, #2
   458e8:	bne	45a1c <flatcc_json_printer_clear@@Base+0x1af8>
   458ec:	b	458f0 <flatcc_json_printer_clear@@Base+0x19cc>
   458f0:	ldr	r0, [sp, #24]
   458f4:	ldr	r1, [fp, #-16]
   458f8:	ldrb	r1, [r1]
   458fc:	asr	r1, r1, #2
   45900:	add	r0, r0, r1
   45904:	ldrb	r0, [r0]
   45908:	ldr	r1, [fp, #-12]
   4590c:	strb	r0, [r1]
   45910:	ldr	r0, [sp, #24]
   45914:	ldr	r1, [fp, #-16]
   45918:	ldrb	r1, [r1]
   4591c:	lsl	r1, r1, #4
   45920:	and	r1, r1, #48	; 0x30
   45924:	ldr	r2, [fp, #-16]
   45928:	ldrb	r2, [r2, #1]
   4592c:	asr	r2, r2, #4
   45930:	orr	r1, r1, r2
   45934:	add	r0, r0, r1
   45938:	ldrb	r0, [r0]
   4593c:	ldr	r1, [fp, #-12]
   45940:	strb	r0, [r1, #1]
   45944:	ldr	r0, [sp, #24]
   45948:	ldr	r1, [fp, #-16]
   4594c:	ldrb	r1, [r1, #1]
   45950:	lsl	r1, r1, #2
   45954:	and	r1, r1, #60	; 0x3c
   45958:	add	r0, r0, r1
   4595c:	ldrb	r0, [r0]
   45960:	ldr	r1, [fp, #-12]
   45964:	strb	r0, [r1, #2]
   45968:	ldr	r0, [fp, #-12]
   4596c:	add	r0, r0, #3
   45970:	str	r0, [fp, #-12]
   45974:	ldr	r0, [sp, #16]
   45978:	cmp	r0, #0
   4597c:	beq	45994 <flatcc_json_printer_clear@@Base+0x1a70>
   45980:	ldr	r0, [fp, #-12]
   45984:	add	r1, r0, #1
   45988:	str	r1, [fp, #-12]
   4598c:	movw	r1, #61	; 0x3d
   45990:	strb	r1, [r0]
   45994:	b	45a24 <flatcc_json_printer_clear@@Base+0x1b00>
   45998:	ldr	r0, [sp, #24]
   4599c:	ldr	r1, [fp, #-16]
   459a0:	ldrb	r1, [r1]
   459a4:	asr	r1, r1, #2
   459a8:	add	r0, r0, r1
   459ac:	ldrb	r0, [r0]
   459b0:	ldr	r1, [fp, #-12]
   459b4:	strb	r0, [r1]
   459b8:	ldr	r0, [sp, #24]
   459bc:	ldr	r1, [fp, #-16]
   459c0:	ldrb	r1, [r1]
   459c4:	lsl	r1, r1, #4
   459c8:	and	r1, r1, #48	; 0x30
   459cc:	add	r0, r0, r1
   459d0:	ldrb	r0, [r0]
   459d4:	ldr	r1, [fp, #-12]
   459d8:	strb	r0, [r1, #1]
   459dc:	ldr	r0, [fp, #-12]
   459e0:	add	r0, r0, #2
   459e4:	str	r0, [fp, #-12]
   459e8:	ldr	r0, [sp, #16]
   459ec:	cmp	r0, #0
   459f0:	beq	45a18 <flatcc_json_printer_clear@@Base+0x1af4>
   459f4:	ldr	r0, [fp, #-12]
   459f8:	add	r1, r0, #1
   459fc:	str	r1, [fp, #-12]
   45a00:	movw	r1, #61	; 0x3d
   45a04:	strb	r1, [r0]
   45a08:	ldr	r0, [fp, #-12]
   45a0c:	add	r2, r0, #1
   45a10:	str	r2, [fp, #-12]
   45a14:	strb	r1, [r0]
   45a18:	b	45a24 <flatcc_json_printer_clear@@Base+0x1b00>
   45a1c:	movw	r0, #0
   45a20:	str	r0, [sp, #16]
   45a24:	movw	r0, #0
   45a28:	str	r0, [sp, #12]
   45a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45a30:	movw	r1, #0
   45a34:	cmp	r0, r1
   45a38:	beq	45a50 <flatcc_json_printer_clear@@Base+0x1b2c>
   45a3c:	ldr	r0, [fp, #-12]
   45a40:	ldr	r1, [sp, #20]
   45a44:	sub	r0, r0, r1
   45a48:	ldr	r1, [fp, #-20]	; 0xffffffec
   45a4c:	str	r0, [r1]
   45a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   45a54:	movw	r1, #0
   45a58:	cmp	r0, r1
   45a5c:	beq	45a74 <flatcc_json_printer_clear@@Base+0x1b50>
   45a60:	ldr	r0, [sp, #12]
   45a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45a68:	ldr	r2, [r1]
   45a6c:	sub	r0, r2, r0
   45a70:	str	r0, [r1]
   45a74:	ldr	r0, [sp, #8]
   45a78:	sub	sp, fp, #8
   45a7c:	pop	{r4, sl, fp, pc}
   45a80:	andeq	r6, r0, r2, lsl #18
   45a84:			; <UNDEFINED> instruction: 0x000068b9
   45a88:	sub	sp, sp, #4
   45a8c:	strb	r0, [sp, #3]
   45a90:	ldrb	r0, [sp, #3]
   45a94:	add	sp, sp, #4
   45a98:	bx	lr
   45a9c:	sub	sp, sp, #4
   45aa0:	strh	r0, [sp, #2]
   45aa4:	ldrh	r0, [sp, #2]
   45aa8:	add	sp, sp, #4
   45aac:	bx	lr
   45ab0:	sub	sp, sp, #4
   45ab4:	str	r0, [sp]
   45ab8:	ldr	r0, [sp]
   45abc:	add	sp, sp, #4
   45ac0:	bx	lr
   45ac4:	sub	sp, sp, #8
   45ac8:	str	r0, [sp]
   45acc:	str	r1, [sp, #4]
   45ad0:	ldr	r0, [sp]
   45ad4:	ldr	r1, [sp, #4]
   45ad8:	add	sp, sp, #8
   45adc:	bx	lr
   45ae0:	sub	sp, sp, #4
   45ae4:	strb	r0, [sp, #3]
   45ae8:	ldrsb	r0, [sp, #3]
   45aec:	add	sp, sp, #4
   45af0:	bx	lr
   45af4:	sub	sp, sp, #4
   45af8:	strh	r0, [sp, #2]
   45afc:	ldrsh	r0, [sp, #2]
   45b00:	add	sp, sp, #4
   45b04:	bx	lr
   45b08:	sub	sp, sp, #4
   45b0c:	str	r0, [sp]
   45b10:	ldr	r0, [sp]
   45b14:	add	sp, sp, #4
   45b18:	bx	lr
   45b1c:	sub	sp, sp, #8
   45b20:	str	r0, [sp]
   45b24:	str	r1, [sp, #4]
   45b28:	ldr	r0, [sp]
   45b2c:	ldr	r1, [sp, #4]
   45b30:	add	sp, sp, #8
   45b34:	bx	lr
   45b38:	sub	sp, sp, #4
   45b3c:	strb	r0, [sp, #3]
   45b40:	ldrb	r0, [sp, #3]
   45b44:	add	sp, sp, #4
   45b48:	bx	lr
   45b4c:	sub	sp, sp, #8
   45b50:	vstr	s0, [sp, #4]
   45b54:	vldr	s0, [sp, #4]
   45b58:	vstr	s0, [sp]
   45b5c:	ldr	r0, [sp]
   45b60:	str	r0, [sp]
   45b64:	vldr	s0, [sp]
   45b68:	add	sp, sp, #8
   45b6c:	bx	lr
   45b70:	sub	sp, sp, #16
   45b74:	vstr	d0, [sp, #8]
   45b78:	vldr	d16, [sp, #8]
   45b7c:	vstr	d16, [sp]
   45b80:	vldr	d0, [sp]
   45b84:	add	sp, sp, #16
   45b88:	bx	lr
   45b8c:	sub	sp, sp, #4
   45b90:	str	r0, [sp]
   45b94:	ldr	r0, [sp]
   45b98:	add	sp, sp, #4
   45b9c:	bx	lr
   45ba0:	sub	sp, sp, #4
   45ba4:	strb	r0, [sp, #3]
   45ba8:	ldrb	r0, [sp, #3]
   45bac:	add	sp, sp, #4
   45bb0:	bx	lr
   45bb4:	push	{fp, lr}
   45bb8:	mov	fp, sp
   45bbc:	sub	sp, sp, #8
   45bc0:	str	r0, [sp, #4]
   45bc4:	ldr	r0, [sp, #4]
   45bc8:	ldr	r0, [r0]
   45bcc:	bl	45bd8 <flatcc_json_printer_clear@@Base+0x1cb4>
   45bd0:	mov	sp, fp
   45bd4:	pop	{fp, pc}
   45bd8:	sub	sp, sp, #4
   45bdc:	str	r0, [sp]
   45be0:	ldr	r0, [sp]
   45be4:	add	sp, sp, #4
   45be8:	bx	lr
   45bec:	sub	sp, sp, #4
   45bf0:	str	r0, [sp]
   45bf4:	ldr	r0, [sp]
   45bf8:	add	sp, sp, #4
   45bfc:	bx	lr
   45c00:	push	{fp, lr}
   45c04:	mov	fp, sp
   45c08:	sub	sp, sp, #8
   45c0c:	str	r0, [sp, #4]
   45c10:	ldr	r0, [sp, #4]
   45c14:	ldr	r0, [r0]
   45c18:	bl	45c24 <flatcc_json_printer_clear@@Base+0x1d00>
   45c1c:	mov	sp, fp
   45c20:	pop	{fp, pc}
   45c24:	sub	sp, sp, #4
   45c28:	str	r0, [sp]
   45c2c:	ldr	r0, [sp]
   45c30:	add	sp, sp, #4
   45c34:	bx	lr
   45c38:	eor	r1, r1, #-2147483648	; 0x80000000
   45c3c:	b	45c44 <flatcc_json_printer_clear@@Base+0x1d20>
   45c40:	eor	r3, r3, #-2147483648	; 0x80000000
   45c44:	push	{r4, r5, lr}
   45c48:	lsl	r4, r1, #1
   45c4c:	lsl	r5, r3, #1
   45c50:	teq	r4, r5
   45c54:	teqeq	r0, r2
   45c58:	orrsne	ip, r4, r0
   45c5c:	orrsne	ip, r5, r2
   45c60:	mvnsne	ip, r4, asr #21
   45c64:	mvnsne	ip, r5, asr #21
   45c68:	beq	45e54 <flatcc_json_printer_clear@@Base+0x1f30>
   45c6c:	lsr	r4, r4, #21
   45c70:	rsbs	r5, r4, r5, lsr #21
   45c74:	rsblt	r5, r5, #0
   45c78:	ble	45c98 <flatcc_json_printer_clear@@Base+0x1d74>
   45c7c:	add	r4, r4, r5
   45c80:	eor	r2, r0, r2
   45c84:	eor	r3, r1, r3
   45c88:	eor	r0, r2, r0
   45c8c:	eor	r1, r3, r1
   45c90:	eor	r2, r0, r2
   45c94:	eor	r3, r1, r3
   45c98:	cmp	r5, #54	; 0x36
   45c9c:	pophi	{r4, r5, pc}
   45ca0:	tst	r1, #-2147483648	; 0x80000000
   45ca4:	lsl	r1, r1, #12
   45ca8:	mov	ip, #1048576	; 0x100000
   45cac:	orr	r1, ip, r1, lsr #12
   45cb0:	beq	45cbc <flatcc_json_printer_clear@@Base+0x1d98>
   45cb4:	rsbs	r0, r0, #0
   45cb8:	rsc	r1, r1, #0
   45cbc:	tst	r3, #-2147483648	; 0x80000000
   45cc0:	lsl	r3, r3, #12
   45cc4:	orr	r3, ip, r3, lsr #12
   45cc8:	beq	45cd4 <flatcc_json_printer_clear@@Base+0x1db0>
   45ccc:	rsbs	r2, r2, #0
   45cd0:	rsc	r3, r3, #0
   45cd4:	teq	r4, r5
   45cd8:	beq	45e3c <flatcc_json_printer_clear@@Base+0x1f18>
   45cdc:	sub	r4, r4, #1
   45ce0:	rsbs	lr, r5, #32
   45ce4:	blt	45d00 <flatcc_json_printer_clear@@Base+0x1ddc>
   45ce8:	lsl	ip, r2, lr
   45cec:	adds	r0, r0, r2, lsr r5
   45cf0:	adc	r1, r1, #0
   45cf4:	adds	r0, r0, r3, lsl lr
   45cf8:	adcs	r1, r1, r3, asr r5
   45cfc:	b	45d1c <flatcc_json_printer_clear@@Base+0x1df8>
   45d00:	sub	r5, r5, #32
   45d04:	add	lr, lr, #32
   45d08:	cmp	r2, #1
   45d0c:	lsl	ip, r3, lr
   45d10:	orrcs	ip, ip, #2
   45d14:	adds	r0, r0, r3, asr r5
   45d18:	adcs	r1, r1, r3, asr #31
   45d1c:	and	r5, r1, #-2147483648	; 0x80000000
   45d20:	bpl	45d30 <flatcc_json_printer_clear@@Base+0x1e0c>
   45d24:	rsbs	ip, ip, #0
   45d28:	rscs	r0, r0, #0
   45d2c:	rsc	r1, r1, #0
   45d30:	cmp	r1, #1048576	; 0x100000
   45d34:	bcc	45d74 <flatcc_json_printer_clear@@Base+0x1e50>
   45d38:	cmp	r1, #2097152	; 0x200000
   45d3c:	bcc	45d5c <flatcc_json_printer_clear@@Base+0x1e38>
   45d40:	lsrs	r1, r1, #1
   45d44:	rrxs	r0, r0
   45d48:	rrx	ip, ip
   45d4c:	add	r4, r4, #1
   45d50:	lsl	r2, r4, #21
   45d54:	cmn	r2, #4194304	; 0x400000
   45d58:	bcs	45eb4 <flatcc_json_printer_clear@@Base+0x1f90>
   45d5c:	cmp	ip, #-2147483648	; 0x80000000
   45d60:	lsrseq	ip, r0, #1
   45d64:	adcs	r0, r0, #0
   45d68:	adc	r1, r1, r4, lsl #20
   45d6c:	orr	r1, r1, r5
   45d70:	pop	{r4, r5, pc}
   45d74:	lsls	ip, ip, #1
   45d78:	adcs	r0, r0, r0
   45d7c:	adc	r1, r1, r1
   45d80:	tst	r1, #1048576	; 0x100000
   45d84:	sub	r4, r4, #1
   45d88:	bne	45d5c <flatcc_json_printer_clear@@Base+0x1e38>
   45d8c:	teq	r1, #0
   45d90:	moveq	r1, r0
   45d94:	moveq	r0, #0
   45d98:	clz	r3, r1
   45d9c:	addeq	r3, r3, #32
   45da0:	sub	r3, r3, #11
   45da4:	subs	r2, r3, #32
   45da8:	bge	45dcc <flatcc_json_printer_clear@@Base+0x1ea8>
   45dac:	adds	r2, r2, #12
   45db0:	ble	45dc8 <flatcc_json_printer_clear@@Base+0x1ea4>
   45db4:	add	ip, r2, #20
   45db8:	rsb	r2, r2, #12
   45dbc:	lsl	r0, r1, ip
   45dc0:	lsr	r1, r1, r2
   45dc4:	b	45ddc <flatcc_json_printer_clear@@Base+0x1eb8>
   45dc8:	add	r2, r2, #20
   45dcc:	rsble	ip, r2, #32
   45dd0:	lsl	r1, r1, r2
   45dd4:	orrle	r1, r1, r0, lsr ip
   45dd8:	lslle	r0, r0, r2
   45ddc:	subs	r4, r4, r3
   45de0:	addge	r1, r1, r4, lsl #20
   45de4:	orrge	r1, r1, r5
   45de8:	popge	{r4, r5, pc}
   45dec:	mvn	r4, r4
   45df0:	subs	r4, r4, #31
   45df4:	bge	45e30 <flatcc_json_printer_clear@@Base+0x1f0c>
   45df8:	adds	r4, r4, #12
   45dfc:	bgt	45e18 <flatcc_json_printer_clear@@Base+0x1ef4>
   45e00:	add	r4, r4, #20
   45e04:	rsb	r2, r4, #32
   45e08:	lsr	r0, r0, r4
   45e0c:	orr	r0, r0, r1, lsl r2
   45e10:	orr	r1, r5, r1, lsr r4
   45e14:	pop	{r4, r5, pc}
   45e18:	rsb	r4, r4, #12
   45e1c:	rsb	r2, r4, #32
   45e20:	lsr	r0, r0, r2
   45e24:	orr	r0, r0, r1, lsl r4
   45e28:	mov	r1, r5
   45e2c:	pop	{r4, r5, pc}
   45e30:	lsr	r0, r1, r4
   45e34:	mov	r1, r5
   45e38:	pop	{r4, r5, pc}
   45e3c:	teq	r4, #0
   45e40:	eor	r3, r3, #1048576	; 0x100000
   45e44:	eoreq	r1, r1, #1048576	; 0x100000
   45e48:	addeq	r4, r4, #1
   45e4c:	subne	r5, r5, #1
   45e50:	b	45cdc <flatcc_json_printer_clear@@Base+0x1db8>
   45e54:	mvns	ip, r4, asr #21
   45e58:	mvnsne	ip, r5, asr #21
   45e5c:	beq	45ec4 <flatcc_json_printer_clear@@Base+0x1fa0>
   45e60:	teq	r4, r5
   45e64:	teqeq	r0, r2
   45e68:	beq	45e7c <flatcc_json_printer_clear@@Base+0x1f58>
   45e6c:	orrs	ip, r4, r0
   45e70:	moveq	r1, r3
   45e74:	moveq	r0, r2
   45e78:	pop	{r4, r5, pc}
   45e7c:	teq	r1, r3
   45e80:	movne	r1, #0
   45e84:	movne	r0, #0
   45e88:	popne	{r4, r5, pc}
   45e8c:	lsrs	ip, r4, #21
   45e90:	bne	45ea4 <flatcc_json_printer_clear@@Base+0x1f80>
   45e94:	lsls	r0, r0, #1
   45e98:	adcs	r1, r1, r1
   45e9c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   45ea0:	pop	{r4, r5, pc}
   45ea4:	adds	r4, r4, #4194304	; 0x400000
   45ea8:	addcc	r1, r1, #1048576	; 0x100000
   45eac:	popcc	{r4, r5, pc}
   45eb0:	and	r5, r1, #-2147483648	; 0x80000000
   45eb4:	orr	r1, r5, #2130706432	; 0x7f000000
   45eb8:	orr	r1, r1, #15728640	; 0xf00000
   45ebc:	mov	r0, #0
   45ec0:	pop	{r4, r5, pc}
   45ec4:	mvns	ip, r4, asr #21
   45ec8:	movne	r1, r3
   45ecc:	movne	r0, r2
   45ed0:	mvnseq	ip, r5, asr #21
   45ed4:	movne	r3, r1
   45ed8:	movne	r2, r0
   45edc:	orrs	r4, r0, r1, lsl #12
   45ee0:	orrseq	r5, r2, r3, lsl #12
   45ee4:	teqeq	r1, r3
   45ee8:	orrne	r1, r1, #524288	; 0x80000
   45eec:	pop	{r4, r5, pc}
   45ef0:	teq	r0, #0
   45ef4:	moveq	r1, #0
   45ef8:	bxeq	lr
   45efc:	push	{r4, r5, lr}
   45f00:	mov	r4, #1024	; 0x400
   45f04:	add	r4, r4, #50	; 0x32
   45f08:	mov	r5, #0
   45f0c:	mov	r1, #0
   45f10:	b	45d8c <flatcc_json_printer_clear@@Base+0x1e68>
   45f14:	teq	r0, #0
   45f18:	moveq	r1, #0
   45f1c:	bxeq	lr
   45f20:	push	{r4, r5, lr}
   45f24:	mov	r4, #1024	; 0x400
   45f28:	add	r4, r4, #50	; 0x32
   45f2c:	ands	r5, r0, #-2147483648	; 0x80000000
   45f30:	rsbmi	r0, r0, #0
   45f34:	mov	r1, #0
   45f38:	b	45d8c <flatcc_json_printer_clear@@Base+0x1e68>
   45f3c:	lsls	r2, r0, #1
   45f40:	asr	r1, r2, #3
   45f44:	rrx	r1, r1
   45f48:	lsl	r0, r2, #28
   45f4c:	andsne	r3, r2, #-16777216	; 0xff000000
   45f50:	teqne	r3, #-16777216	; 0xff000000
   45f54:	eorne	r1, r1, #939524096	; 0x38000000
   45f58:	bxne	lr
   45f5c:	bics	r2, r2, #-16777216	; 0xff000000
   45f60:	bxeq	lr
   45f64:	teq	r3, #-16777216	; 0xff000000
   45f68:	orreq	r1, r1, #524288	; 0x80000
   45f6c:	bxeq	lr
   45f70:	push	{r4, r5, lr}
   45f74:	mov	r4, #896	; 0x380
   45f78:	and	r5, r1, #-2147483648	; 0x80000000
   45f7c:	bic	r1, r1, #-2147483648	; 0x80000000
   45f80:	b	45d8c <flatcc_json_printer_clear@@Base+0x1e68>
   45f84:	orrs	r2, r0, r1
   45f88:	bxeq	lr
   45f8c:	push	{r4, r5, lr}
   45f90:	mov	r5, #0
   45f94:	b	45fb4 <flatcc_json_printer_clear@@Base+0x2090>
   45f98:	orrs	r2, r0, r1
   45f9c:	bxeq	lr
   45fa0:	push	{r4, r5, lr}
   45fa4:	ands	r5, r1, #-2147483648	; 0x80000000
   45fa8:	bpl	45fb4 <flatcc_json_printer_clear@@Base+0x2090>
   45fac:	rsbs	r0, r0, #0
   45fb0:	rsc	r1, r1, #0
   45fb4:	mov	r4, #1024	; 0x400
   45fb8:	add	r4, r4, #50	; 0x32
   45fbc:	lsrs	ip, r1, #22
   45fc0:	beq	45d30 <flatcc_json_printer_clear@@Base+0x1e0c>
   45fc4:	mov	r2, #3
   45fc8:	lsrs	ip, ip, #3
   45fcc:	addne	r2, r2, #3
   45fd0:	lsrs	ip, ip, #3
   45fd4:	addne	r2, r2, #3
   45fd8:	add	r2, r2, ip, lsr #3
   45fdc:	rsb	r3, r2, #32
   45fe0:	lsl	ip, r0, r3
   45fe4:	lsr	r0, r0, r2
   45fe8:	orr	r0, r0, r1, lsl r3
   45fec:	lsr	r1, r1, r2
   45ff0:	add	r4, r4, r2
   45ff4:	b	45d30 <flatcc_json_printer_clear@@Base+0x1e0c>
   45ff8:	eor	r0, r0, #-2147483648	; 0x80000000
   45ffc:	b	46004 <flatcc_json_printer_clear@@Base+0x20e0>
   46000:	eor	r1, r1, #-2147483648	; 0x80000000
   46004:	lsls	r2, r0, #1
   46008:	lslsne	r3, r1, #1
   4600c:	teqne	r2, r3
   46010:	mvnsne	ip, r2, asr #24
   46014:	mvnsne	ip, r3, asr #24
   46018:	beq	46110 <flatcc_json_printer_clear@@Base+0x21ec>
   4601c:	lsr	r2, r2, #24
   46020:	rsbs	r3, r2, r3, lsr #24
   46024:	addgt	r2, r2, r3
   46028:	eorgt	r1, r0, r1
   4602c:	eorgt	r0, r1, r0
   46030:	eorgt	r1, r0, r1
   46034:	rsblt	r3, r3, #0
   46038:	cmp	r3, #25
   4603c:	bxhi	lr
   46040:	tst	r0, #-2147483648	; 0x80000000
   46044:	orr	r0, r0, #8388608	; 0x800000
   46048:	bic	r0, r0, #-16777216	; 0xff000000
   4604c:	rsbne	r0, r0, #0
   46050:	tst	r1, #-2147483648	; 0x80000000
   46054:	orr	r1, r1, #8388608	; 0x800000
   46058:	bic	r1, r1, #-16777216	; 0xff000000
   4605c:	rsbne	r1, r1, #0
   46060:	teq	r2, r3
   46064:	beq	460f8 <flatcc_json_printer_clear@@Base+0x21d4>
   46068:	sub	r2, r2, #1
   4606c:	adds	r0, r0, r1, asr r3
   46070:	rsb	r3, r3, #32
   46074:	lsl	r1, r1, r3
   46078:	and	r3, r0, #-2147483648	; 0x80000000
   4607c:	bpl	46088 <flatcc_json_printer_clear@@Base+0x2164>
   46080:	rsbs	r1, r1, #0
   46084:	rsc	r0, r0, #0
   46088:	cmp	r0, #8388608	; 0x800000
   4608c:	bcc	460c0 <flatcc_json_printer_clear@@Base+0x219c>
   46090:	cmp	r0, #16777216	; 0x1000000
   46094:	bcc	460ac <flatcc_json_printer_clear@@Base+0x2188>
   46098:	lsrs	r0, r0, #1
   4609c:	rrx	r1, r1
   460a0:	add	r2, r2, #1
   460a4:	cmp	r2, #254	; 0xfe
   460a8:	bcs	46164 <flatcc_json_printer_clear@@Base+0x2240>
   460ac:	cmp	r1, #-2147483648	; 0x80000000
   460b0:	adc	r0, r0, r2, lsl #23
   460b4:	biceq	r0, r0, #1
   460b8:	orr	r0, r0, r3
   460bc:	bx	lr
   460c0:	lsls	r1, r1, #1
   460c4:	adc	r0, r0, r0
   460c8:	tst	r0, #8388608	; 0x800000
   460cc:	sub	r2, r2, #1
   460d0:	bne	460ac <flatcc_json_printer_clear@@Base+0x2188>
   460d4:	clz	ip, r0
   460d8:	sub	ip, ip, #8
   460dc:	subs	r2, r2, ip
   460e0:	lsl	r0, r0, ip
   460e4:	addge	r0, r0, r2, lsl #23
   460e8:	rsblt	r2, r2, #0
   460ec:	orrge	r0, r0, r3
   460f0:	orrlt	r0, r3, r0, lsr r2
   460f4:	bx	lr
   460f8:	teq	r2, #0
   460fc:	eor	r1, r1, #8388608	; 0x800000
   46100:	eoreq	r0, r0, #8388608	; 0x800000
   46104:	addeq	r2, r2, #1
   46108:	subne	r3, r3, #1
   4610c:	b	46068 <flatcc_json_printer_clear@@Base+0x2144>
   46110:	lsl	r3, r1, #1
   46114:	mvns	ip, r2, asr #24
   46118:	mvnsne	ip, r3, asr #24
   4611c:	beq	46170 <flatcc_json_printer_clear@@Base+0x224c>
   46120:	teq	r2, r3
   46124:	beq	46134 <flatcc_json_printer_clear@@Base+0x2210>
   46128:	teq	r2, #0
   4612c:	moveq	r0, r1
   46130:	bx	lr
   46134:	teq	r0, r1
   46138:	movne	r0, #0
   4613c:	bxne	lr
   46140:	tst	r2, #-16777216	; 0xff000000
   46144:	bne	46154 <flatcc_json_printer_clear@@Base+0x2230>
   46148:	lsls	r0, r0, #1
   4614c:	orrcs	r0, r0, #-2147483648	; 0x80000000
   46150:	bx	lr
   46154:	adds	r2, r2, #33554432	; 0x2000000
   46158:	addcc	r0, r0, #8388608	; 0x800000
   4615c:	bxcc	lr
   46160:	and	r3, r0, #-2147483648	; 0x80000000
   46164:	orr	r0, r3, #2130706432	; 0x7f000000
   46168:	orr	r0, r0, #8388608	; 0x800000
   4616c:	bx	lr
   46170:	mvns	r2, r2, asr #24
   46174:	movne	r0, r1
   46178:	mvnseq	r3, r3, asr #24
   4617c:	movne	r1, r0
   46180:	lsls	r2, r0, #9
   46184:	lslseq	r3, r1, #9
   46188:	teqeq	r0, r1
   4618c:	orrne	r0, r0, #4194304	; 0x400000
   46190:	bx	lr
   46194:	mov	r3, #0
   46198:	b	461a4 <flatcc_json_printer_clear@@Base+0x2280>
   4619c:	ands	r3, r0, #-2147483648	; 0x80000000
   461a0:	rsbmi	r0, r0, #0
   461a4:	movs	ip, r0
   461a8:	bxeq	lr
   461ac:	orr	r3, r3, #1258291200	; 0x4b000000
   461b0:	mov	r1, r0
   461b4:	mov	r0, #0
   461b8:	b	461fc <flatcc_json_printer_clear@@Base+0x22d8>
   461bc:	orrs	r2, r0, r1
   461c0:	bxeq	lr
   461c4:	mov	r3, #0
   461c8:	b	461e4 <flatcc_json_printer_clear@@Base+0x22c0>
   461cc:	orrs	r2, r0, r1
   461d0:	bxeq	lr
   461d4:	ands	r3, r1, #-2147483648	; 0x80000000
   461d8:	bpl	461e4 <flatcc_json_printer_clear@@Base+0x22c0>
   461dc:	rsbs	r0, r0, #0
   461e0:	rsc	r1, r1, #0
   461e4:	movs	ip, r1
   461e8:	moveq	ip, r0
   461ec:	moveq	r1, r0
   461f0:	moveq	r0, #0
   461f4:	orr	r3, r3, #1526726656	; 0x5b000000
   461f8:	subeq	r3, r3, #268435456	; 0x10000000
   461fc:	sub	r3, r3, #8388608	; 0x800000
   46200:	clz	r2, ip
   46204:	subs	r2, r2, #8
   46208:	sub	r3, r3, r2, lsl #23
   4620c:	blt	4622c <flatcc_json_printer_clear@@Base+0x2308>
   46210:	add	r3, r3, r1, lsl r2
   46214:	lsl	ip, r0, r2
   46218:	rsb	r2, r2, #32
   4621c:	cmp	ip, #-2147483648	; 0x80000000
   46220:	adc	r0, r3, r0, lsr r2
   46224:	biceq	r0, r0, #1
   46228:	bx	lr
   4622c:	add	r2, r2, #32
   46230:	lsl	ip, r1, r2
   46234:	rsb	r2, r2, #32
   46238:	orrs	r0, r0, ip, lsl #1
   4623c:	adc	r0, r3, r1, lsr r2
   46240:	biceq	r0, r0, ip, lsr #31
   46244:	bx	lr
   46248:	cmp	r3, #0
   4624c:	cmpeq	r2, #0
   46250:	bne	46268 <flatcc_json_printer_clear@@Base+0x2344>
   46254:	cmp	r1, #0
   46258:	cmpeq	r0, #0
   4625c:	mvnne	r1, #0
   46260:	mvnne	r0, #0
   46264:	b	46284 <flatcc_json_printer_clear@@Base+0x2360>
   46268:	sub	sp, sp, #8
   4626c:	push	{sp, lr}
   46270:	bl	46294 <flatcc_json_printer_clear@@Base+0x2370>
   46274:	ldr	lr, [sp, #4]
   46278:	add	sp, sp, #8
   4627c:	pop	{r2, r3}
   46280:	bx	lr
   46284:	push	{r1, lr}
   46288:	mov	r0, #8
   4628c:	bl	14e00 <raise@plt>
   46290:	pop	{r1, pc}
   46294:	cmp	r1, r3
   46298:	cmpeq	r0, r2
   4629c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   462a0:	mov	r4, r0
   462a4:	movcc	r0, #0
   462a8:	mov	r5, r1
   462ac:	ldr	lr, [sp, #36]	; 0x24
   462b0:	movcc	r1, r0
   462b4:	bcc	463b0 <flatcc_json_printer_clear@@Base+0x248c>
   462b8:	cmp	r3, #0
   462bc:	clzeq	ip, r2
   462c0:	clzne	ip, r3
   462c4:	addeq	ip, ip, #32
   462c8:	cmp	r5, #0
   462cc:	clzeq	r1, r4
   462d0:	addeq	r1, r1, #32
   462d4:	clzne	r1, r5
   462d8:	sub	ip, ip, r1
   462dc:	sub	sl, ip, #32
   462e0:	lsl	r9, r3, ip
   462e4:	rsb	fp, ip, #32
   462e8:	orr	r9, r9, r2, lsl sl
   462ec:	orr	r9, r9, r2, lsr fp
   462f0:	lsl	r8, r2, ip
   462f4:	cmp	r5, r9
   462f8:	cmpeq	r4, r8
   462fc:	movcc	r0, #0
   46300:	movcc	r1, r0
   46304:	bcc	46320 <flatcc_json_printer_clear@@Base+0x23fc>
   46308:	mov	r0, #1
   4630c:	subs	r4, r4, r8
   46310:	lsl	r1, r0, sl
   46314:	orr	r1, r1, r0, lsr fp
   46318:	lsl	r0, r0, ip
   4631c:	sbc	r5, r5, r9
   46320:	cmp	ip, #0
   46324:	beq	463b0 <flatcc_json_printer_clear@@Base+0x248c>
   46328:	lsr	r6, r8, #1
   4632c:	orr	r6, r6, r9, lsl #31
   46330:	lsr	r7, r9, #1
   46334:	mov	r2, ip
   46338:	b	4635c <flatcc_json_printer_clear@@Base+0x2438>
   4633c:	subs	r3, r4, r6
   46340:	sbc	r8, r5, r7
   46344:	adds	r3, r3, r3
   46348:	adc	r8, r8, r8
   4634c:	adds	r4, r3, #1
   46350:	adc	r5, r8, #0
   46354:	subs	r2, r2, #1
   46358:	beq	46378 <flatcc_json_printer_clear@@Base+0x2454>
   4635c:	cmp	r5, r7
   46360:	cmpeq	r4, r6
   46364:	bcs	4633c <flatcc_json_printer_clear@@Base+0x2418>
   46368:	adds	r4, r4, r4
   4636c:	adc	r5, r5, r5
   46370:	subs	r2, r2, #1
   46374:	bne	4635c <flatcc_json_printer_clear@@Base+0x2438>
   46378:	lsr	r3, r4, ip
   4637c:	orr	r3, r3, r5, lsl fp
   46380:	lsr	r2, r5, ip
   46384:	orr	r3, r3, r5, lsr sl
   46388:	adds	r0, r0, r4
   4638c:	mov	r4, r3
   46390:	lsl	r3, r2, ip
   46394:	orr	r3, r3, r4, lsl sl
   46398:	lsl	ip, r4, ip
   4639c:	orr	r3, r3, r4, lsr fp
   463a0:	adc	r1, r1, r5
   463a4:	subs	r0, r0, ip
   463a8:	mov	r5, r2
   463ac:	sbc	r1, r1, r3
   463b0:	cmp	lr, #0
   463b4:	strdne	r4, [lr]
   463b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000463bc <__libc_csu_init@@Base>:
   463bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   463c0:	mov	r7, r0
   463c4:	ldr	r6, [pc, #72]	; 46414 <__libc_csu_init@@Base+0x58>
   463c8:	ldr	r5, [pc, #72]	; 46418 <__libc_csu_init@@Base+0x5c>
   463cc:	add	r6, pc, r6
   463d0:	add	r5, pc, r5
   463d4:	sub	r6, r6, r5
   463d8:	mov	r8, r1
   463dc:	mov	r9, r2
   463e0:	bl	14de0 <raise@plt-0x20>
   463e4:	asrs	r6, r6, #2
   463e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   463ec:	mov	r4, #0
   463f0:	add	r4, r4, #1
   463f4:	ldr	r3, [r5], #4
   463f8:	mov	r2, r9
   463fc:	mov	r1, r8
   46400:	mov	r0, r7
   46404:	blx	r3
   46408:	cmp	r6, r4
   4640c:	bne	463f0 <__libc_csu_init@@Base+0x34>
   46410:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   46414:	andeq	r6, r1, r8, lsl #22
   46418:	andeq	r6, r1, r0, lsl #22

0004641c <__libc_csu_fini@@Base>:
   4641c:	bx	lr

Disassembly of section .fini:

00046420 <.fini>:
   46420:	push	{r3, lr}
   46424:	pop	{r3, pc}
